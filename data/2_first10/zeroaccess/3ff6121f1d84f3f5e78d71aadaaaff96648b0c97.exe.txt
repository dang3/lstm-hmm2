push
mov
sub
addl
push
orl
xor
sbbl
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
call
mov
dec
mov
jmp
mov
movzbl
push
orl
call
cmp
movl
jle
xor
jmp
movl
jmp
push
lea
orl
push
subl
push
call
movl
cmp
movl
je
andl
xor
movl
inc
movl
jmp
jmp
push
decl
push
push
call
movl
cmp
jne
movl
xor
movl
jmp
movl
jmp
xorl
call
test
movl
jne
andl
xor
movl
jmp
sub
movl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
mov
lea
mov
and
mov
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
xor
add
movl
mov
mov
movl
lea
mov
cmpl
movl
jne
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
xor
add
mov
mov
sbbl
mov
or
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jb
add
mov
mov
or
xor
add
mov
xor
mov
mov
mov
negl
mov
sbbl
mov
movl
movl
cmpl
je
cmpl
jg
jmp
push
push
push
push
push
push
call
xor
add
dec
mov
jmp
movl
movzwl
sub
movl
mov
adc
mov
mov
mov
movl
sbbl
movl
sub
movl
mov
xor
add
movl
mov
jmp
sub
mov
negl
xor
or
mov
lea
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
mov
negl
xor
orl
lea
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
lea
cmp
ja
mov
xor
mov
lea
push
mov
xor
lea
push
mov
pushl
call
jmp
mov
mov
mov
mov
mov
sub
xor
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
xor
add
xor
sub
sbb
xor
xor
mov
mov
cmpl
jne
cmpl
je
mov
xor
add
mov
xor
sub
sbb
xor
xor
mov
cltd
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
xor
add
xor
sub
sbb
xor
xor
mov
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
xor
add
mov
mov
cmp
jne
mov
xor
add
push
push
pushl
pushl
call
push
push
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
add
cmp
je
movl
movl
movl
movl
lea
push
lea
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
push
mov
add
push
lea
push
call
jmp
lea
mov
lea
mov
mov
mov
mov
push
mov
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
push
mov
add
push
lea
push
call
mov
mov
pop
leave
ret
push
mov
xor
andl
pop
ret
push
mov
sub
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
push
orl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
add
xor
add
addl
xor
and
mov
xor
sub
movl
sbb
subl
xor
xor
xor
xor
adcl
add
adc
mov
movl
mov
mov
movzbl
mov
mov
cmp
movl
jne
mov
movl
cmp
je
mov
movl
cmp
movl
je
mov
xor
add
jmp
int3
xor
push
fs
je
orl
jne
mov
jnp
jnp
cwtl
jnp
rol
mov
fcmovnb
cmc
fucomi
ror
fcomp
ror
int
sar
incb
lret
or
enter
mov
not
lods
out
ror
aam
ret
ret
mov
idiv
or
leave
aam
or
add
in
icebp
sarl
jmp
out
aam
ret
neg
fcomip
xlat
add
enter
mov
call
mov
idivb
push
add
pop
ljmp
les
lock
mov
xlat
jecxz
in
in
jecxz
icebp
stc
call
or
repz
loop
lods
shrl
mov
out
loope
shl
rcr
cli
or
in
fldz
add
mov
mov
mov
aad
lock
add
lret
fsubr
loope
loopne
add
out
mov
fucomp
clc
mov
fcomip
clc
in
push
add
fmulp
int
sarb
in
test
iret
lret
int3
mov
rcl
hlt
out
add
sti
testb
loopne
bnd
in
iret
int3
idiv
mov
neg
mov
jecxz
iret
inc
into
push
rol
xlat
jecxz
in
hlt
in
mov
ffree
ret
aad
add
icebp
cli
pop
add
rcr
call
cli
into
mov
xlat
leave
call
out
loopne
aam
or
scas
loop
aad
in
out
out
int3
sti
jmp
hlt
call
loope
lock
add
sar
ret
fdivr
lret
in
les
mov
enter
int3
call
cli
add
cmc
decb
cld
stc
adc
lret
in
lock
std
jmp
mov
out
mov
fnstsw
call
add
out
shl
rcl
mov
idivb
div
cli
aam
loop
in
push
jecxz
enter
scas
in
mov
jmp
fsubr
mov
aam
clc
lret
clc
filds
mov
lds
ror
lret
fucom
fcomip
lock
add
stc
enter
fidivs
stc
mov
mov
sar
xlat
aad
loop
in
or
leave
or
ret
mov
mov
in
std
lret
in
hlt
hlt
pop
loop
add
lock
add
add
into
add
mov
stos
lret
iret
shl
in
mov
in
fcmovbe
add
or
fildl
jecxz
enter
faddp
in
into
repnz
shr
mov
pop
fdivp
call
ror
loope
int
add
ror
fcomi
aad
mul
mov
leave
ret
icebp
fdiv
cli
mov
add
in
into
stos
leave
fsubl
jmp
shll
add
faddl
stc
loopne
add
shl
jecxz
cli
fdivrs
mul
rcl
in
leave
xlat
rcl
cmc
out
ret
out
rolb
out
out
dec
or
imul
in
cli
call
loopne
out
ret
stc
mov
jmp
rcl
ror
in
lret
mov
repnz
mov
jmp
or
lret
shr
mov
repnz
idiv
fucompp
fadd
hlt
sti
shl
jmp
mov
add
or
ret
out
aam
icebp
sti
fdivrs
add
xlat
cli
or
or
out
std
out
shll
mov
cmc
aad
repnz
clc
aam
add
repnz
mov
push
iret
loop
out
scas
shll
ror
icebp
call
in
mov
or
mov
call
out
iret
loope
out
in
mov
mov
loopne
rol
shr
bswap
paddusb
repnz
lods
shl
shl
out
out
out
out
mov
out
int
rolb
into
out
rcl
mov
jmp
mov
rol
out
les
add
or
lods
enter
repnz
rol
ror
mov
ret
shl
fyl2x
std
in
loop
add
sarb
jmp
ror
out
mov
add
add
clc
mov
or
int
stos
scas
movsb
scas
mov
mov
into
fst
jecxz
ret
shl
clc
fstp
rorb
or
jmp
mov
in
test
out
sarb
mov
out
div
add
int3
jmp
icebp
mov
out
int3
mov
mov
in
hlt
test
ror
loope
in
add
loope
repz
mov
enter
mov
sar
shl
mov
out
jecxz
test
repz
clc
fst
aad
mov
shl
cld
aad
cli
pop
iret
div
mov
mov
jmp
mov
push
add
lds
fnstsw
ror
repnz
hlt
in
shll
rcl
mov
hlt
cmc
hlt
shr
loop
filds
fiadds
rcl
jmp
sar
in
out
call
int
in
or
out
add
int
fcomip
loopne
int3
mov
out
sarl
in
fcom
cli
fsubp
testb
stc
pxor
int
shl
repnz
les
cld
pop
repz
jecxz
lret
ljmp
ljmp
fmul
lret
repz
loope
fcomi
rol
ljmp
mov
cmc
ljmp
jecxz
jecxz
mov
add
pop
into
push
repnz
call
mov
repnz
clc
rcr
repz
xlat
rorl
add
lret
adc
lods
jmp
icebp
fldz
enter
add
or
add
jmp
sti
add
cli
into
loop
mov
hlt
out
jmp
aad
shl
aam
add
fmul
out
repz
loopne
in
icebp
out
mov
xlat
fst
aad
fimuls
neg
cmc
fsubp
fmul
mov
mov
sar
mov
mov
sti
jecxz
sti
fcomp
mov
aam
fstp
int
lret
aam
int3
mov
aam
leave
fsubp
mov
mov
fcmove
in
cli
mov
in
aam
iret
cmc
neg
test
stc
shr
std
mov
in
in
jmp
call
in
mov
clc
loope
ret
mov
add
movb
int
shr
into
lock
repnz
rcr
int3
lock
lock
idiv
add
loopne
in
out
adc
or
stos
lret
lret
shl
fcmovb
rcl
rcl
cmc
fxch
repnz
mov
jmp
fldl2t
ljmp
mov
std
add
cli
add
add
push
push
sti
loop
mov
enter
cli
repnz
push
bnd
aad
stc
jecxz
loope
or
faddp
mov
idivl
mov
fidivrl
les
push
rolb
cld
roll
out
repnz
ljmp
fistpll
std
rol
loopne
fcmovb
push
add
mov
mov
fnstsw
clc
cmc
call
idiv
fsub
or
cmc
les
mul
lods
into
aam
fxam
out
clc
ret
stc
incl
mov
jecxz
hlt
mov
shr
ljmp
out
fnstsw
icebp
xlat
out
shl
not
lock
out
add
repnz
mov
cli
hlt
shl
ror
mov
add
sti
aad
fstpt
iret
flds
jmp
mov
int
div
jmp
cli
cli
aad
hlt
aad
add
or
call
in
in
leave
fdivr
mov
lret
jmp
add
hlt
mov
idiv
out
clc
mov
mov
inc
in
aad
mov
leave
in
or
out
fcmovbe
rcr
int
in
shr
shl
add
cli
add
push
rol
inc
repnz
mov
rcr
in
sti
mov
out
mov
loop
loopne
rcr
ljmp
lock
mov
cmc
mov
in
enter
loope
call
mov
clc
cli
jmp
jmp
scas
ret
mov
mov
out
mov
mov
cld
ud2
ljmp
test
mov
fucomi
loope
add
add
shr
in
fmull
ljmp
in
icebp
xlat
jmp
in
std
add
jmp
cli
ret
add
or
or
aam
in
scas
jmp
icebp
ljmp
int3
int
fdivp
leave
or
cld
or
into
scas
out
repnz
rcl
ljmp
ret
cld
xlat
int
mov
fadds
in
add
out
out
scas
fsubr
jmp
fidivrs
mov
mov
std
loope
int3
scas
mov
test
hlt
fscale
stc
icebp
add
cmc
fmuls
add
add
or
out
in
cld
lods
stos
ret
fadd
loopne
mov
fstp
iret
mov
shl
rcl
add
clc
add
std
loopne
shr
scas
in
sar
repz
clc
aam
repnz
aad
loop
or
in
iret
scas
shl
mov
in
cmc
jmp
rcl
loopne
lret
incb
in
int
or
shlb
ljmp
lret
fcmovbe
mov
xlat
out
pmulhw
lret
mov
call
lods
ljmp
add
xlat
movl
add
clc
fimull
shlb
in
fidivl
mov
xlat
add
add
hlt
in
into
in
jecxz
not
jecxz
mov
idivb
mov
vpsubw
call
bnd
lret
jecxz
call
sar
lock
mov
add
add
jmp
cmpsb
in
test
in
shl
ljmp
jecxz
cli
shl
clc
cld
stc
add
fld
jmp
rcl
shrb
in
into
mov
in
sti
aad
add
add
push
leave
loop
jecxz
stos
mov
out
fucompp
fnstenv
out
loop
in
pop
fxam
cld
out
in
incb
fisubrs
stos
int3
mov
int3
fcmovb
sti
clc
jecxz
shl
sti
mov
fdecstp
jmp
fidivs
shr
ret
mul
sarb
ror
icebp
fcmovbe
xlat
fldl2t
call
mov
scas
in
lock
mov
mov
out
mov
cmc
fldl
shl
mul
add
pop
jmp
jecxz
shl
vpminsw
divl
mov
rcl
mov
add
int3
les
in
out
mov
shl
fmul
aam
mov
add
loop
loope
faddl
jmp
into
in
in
lock
cmc
ljmp
iret
fdivp
add
jecxz
shl
out
aam
enter
out
lret
repz
aam
out
fscale
shl
rol
hlt
sti
out
push
add
out
int
stos
mov
icebp
loopne
mov
into
mov
lock
shl
pop
add
loopne
or
or
scas
xlat
xlat
int3
imull
mov
mov
xlat
out
add
aam
stc
loop
or
in
or
loope
lret
mov
fmul
fadd
rorb
out
loop
push
or
mov
mov
repnz
lret
mov
int3
hlt
add
clc
fcmovbe
pop
add
leave
psubusw
repz
leave
lret
mov
mov
jecxz
cli
cld
loopne
add
push
mov
scas
leave
mov
loop
xlat
loopne
rcl
leave
neg
add
std
rcl
test
mov
mov
cld
in
sarl
mov
aad
fdiv
iret
or
ret
enter
aam
push
ror
add
in
add
push
add
std
jecxz
in
lret
lock
lret
iret
repnz
xlat
add
lds
leave
in
cli
iret
rorl
call
shlb
cld
call
std
in
fsub
add
or
push
lret
loopne
jmp
not
call
fucom
out
clc
pop
lret
jmp
in
int3
in
mov
lret
repnz
std
call
shl
or
jmp
cli
lret
rcl
mov
in
out
repz
mov
out
fisttps
or
out
stc
fld
fnsave
lret
enter
int
hlt
not
add
ret
roll
fcmovnbe
push
hlt
or
fcmovb
loopne
mov
rcl
lock
rcl
neg
neg
mov
rolb
loopne
rol
ljmp
loopne
out
ror
shl
out
ljmp
in
cli
sarl
in
out
or
rol
mov
test
idiv
cli
std
fcmovnbe
out
fsub
shr
stc
mov
or
cmc
call
in
in
int
int3
mov
hlt
fnstsw
cld
stc
mov
or
add
mov
out
mov
fcomi
out
out
mov
ror
add
loopne
rorl
fcomip
btr
xlat
test
aad
aam
out
mov
clc
repnz
rcl
fninit
les
or
enter
loopne
enter
mov
sti
leave
int
add
out
in
call
loope
jecxz
out
cli
into
scas
into
mov
fsubr
in
sti
or
hlt
xlat
add
fcmovnb
sar
mov
out
rol
out
lock
test
mov
cli
shl
add
or
psrad
in
ljmp
cmc
in
aad
shl
cmc
mov
in
add
pop
mov
aad
vpaddb
leave
in
jmp
xlat
out
out
mov
fdivs
testb
in
out
out
lret
icebp
rcl
lods
ror
lock
aad
sarb
neg
lret
vaddsubpd
decl
call
ret
in
sti
in
shl
mov
lret
loope
out
cld
rolb
lret
push
faddl
loop
out
int3
fdiv
fsubrp
jecxz
lods
shlb
repnz
int3
cli
jmp
jmp
call
out
int
ror
icebp
lock
sti
stc
loope
mov
fadd
lock
inc
add
loopne
add
mov
enter
shl
mov
fdivp
int3
sarl
sar
out
lds
std
or
out
jecxz
div
fmul
mov
mov
in
fcomp
mov
aam
in
ljmp
ljmp
test
in
lret
leave
mov
cmc
out
shl
ret
jmp
aam
fmulp
mov
mov
divl
roll
icebp
clc
aad
ret
loopne
add
lret
in
adc
fnsave
int3
jmp
div
mov
idivl
imul
push
or
shrb
in
ljmp
aad
repz
in
add
jecxz
filds
lret
scas
imulb
clc
mov
fmul
mov
fsin
rcr
mul
clc
add
cmpsl
test
repz
shlb
cli
aam
into
shl
in
rcl
inc
leave
out
lods
mov
ret
mov
jmp
lret
ljmp
stc
std
fld
sar
icebp
mov
lods
xlat
loop
mov
in
enter
rol
flds
fstp
sar
std
fadd
std
loopne
int3
into
into
int
in
iret
aam
cli
push
sti
imul
rcl
fdivr
sar
shl
or
out
push
fadd
rol
vshufps
mov
mov
int
icebp
ffreep
ret
out
aam
call
lds
mov
loopne
out
mov
mov
mov
fstp
fcmovnu
or
cmc
or
lret
fdivrs
cmc
mul
stc
shl
out
idiv
mov
int3
mov
or
or
enter
mov
repnz
shl
in
call
out
fxch
testl
adc
push
into
mov
call
fucomip
mov
shll
clc
icebp
add
pop
call
add
fdivl
test
call
pop
loopne
out
fld
stc
or
ret
mov
into
xlat
aam
lods
cli
clc
int
sarl
loopne
sarb
push
or
cli
stos
iret
mov
out
loopne
lock
aam
iret
mov
aam
add
fldl
push
fcmove
out
or
mov
mov
mov
jecxz
stc
cld
jecxz
aam
test
clc
mov
or
cld
pop
int
shl
loop
aad
jmp
xlat
in
cli
fcmovnu
ret
fucomp
or
cli
add
aam
cli
jecxz
out
mov
cli
icebp
jmp
shl
out
mov
test
faddp
ljmp
lret
enter
fdivp
jecxz
xlat
repnz
in
clc
stc
loope
ffreep
mov
mov
aad
call
cld
cmc
add
in
sar
icebp
aam
add
mov
cmc
cli
lock
xlat
cmc
in
cld
xlat
loopne
out
loopne
add
iret
fmull
adc
leave
call
mov
out
lret
in
mov
cli
mov
fsqrt
add
aad
decb
cli
sti
loopne
shrb
fdivrs
aam
pop
rol
aad
cli
sar
inc
repnz
repz
lret
enter
add
aam
not
out
jecxz
or
jmp
mov
repnz
call
rcl
out
sti
mov
mov
sti
int
repz
fmulp
xlat
jmp
out
cli
leave
fcomip
fnstsw
add
xlat
vpmaxub
add
fcomi
or
icebp
iret
shll
lret
out
repz
aad
in
enter
sti
mov
lock
out
fisttps
fsub
faddp
jmp
ljmp
dec
into
add
repnz
rolb
lret
push
cld
push
push
ljmp
loope
div
fnstenv
idiv
rcl
aad
stc
ret
call
fiaddl
test
mov
in
stc
repz
fcmove
iret
fstp
faddp
loopne
add
out
call
mov
rcl
int3
mov
leave
add
icebp
fiaddl
les
ret
or
fsubrp
out
or
icebp
shr
mov
int
xlat
mov
lret
call
repnz
hlt
add
add
paddusw
ret
rcl
mov
mov
cmc
mov
test
mov
icebp
fisttpl
fsubr
cmc
hlt
shrl
mov
mov
lock
icebp
fcmovnbe
in
hlt
loop
lock
ret
or
testb
ror
shlb
lret
mov
int
idivb
rcl
mov
lret
jmp
out
jecxz
mov
in
xlat
fcmovbe
mov
out
lock
in
add
lds
push
lret
fucomp
into
fmul
out
rol
call
ljmp
cli
loopne
add
or
in
ret
in
lret
call
mov
neg
aam
repz
mov
or
or
call
mov
scas
in
mov
mov
fst
sti
testl
fcompp
push
or
test
div
aad
std
in
mov
sarl
cld
xlat
out
loope
clc
out
in
sarl
imul
in
mov
std
mov
ljmp
in
mov
mov
fmul
iret
aam
neg
leave
mov
fnsave
sti
clc
lret
repnz
lret
or
in
leave
int
in
shlb
rcr
cli
repnz
repnz
loop
out
xlat
lret
fisttpl
repz
iret
iret
int
sarl
in
mov
ret
fiaddl
not
decb
repnz
lret
in
in
in
in
mul
rcl
ret
std
fnstsw
call
or
fnstsw
ret
in
mov
loop
repz
into
loope
out
in
or
rorl
ror
ror
mov
fcom
shl
add
faddp
fcmovne
in
add
mov
lds
mov
lds
enter
in
add
loopne
add
mov
repnz
aam
cli
iret
aam
mov
icebp
div
aam
add
lret
loop
repnz
fadd
ret
in
shl
stc
fxch
shll
add
out
fdivrp
aam
enter
scas
out
shr
jmp
lret
mov
aam
sti
add
fmul
lret
jecxz
stos
out
out
cli
ror
sarl
out
shl
rcr
lret
pop
or
test
aam
mov
shr
div
cld
jmp
mov
fscale
fadd
leave
loopne
aad
roll
iret
test
int3
fcmovnbe
lret
fcomip
mov
ret
ffreep
ljmp
aam
int
mov
mov
repnz
repz
int
sar
mov
ljmp
fisubrs
mov
jmp
aad
repz
out
repnz
loope
loope
in
lret
fsin
jmp
lret
enter
shlb
add
shl
or
add
push
out
mov
loop
mov
lods
mov
roll
cli
fcmovu
call
fmulp
in
ret
div
in
lret
xlat
ljmp
add
idiv
clc
add
fsubr
push
int3
repz
mov
les
fmulp
mov
cli
mov
fisttpll
fsub
stc
in
in
icebp
mov
divb
in
not
repnz
out
mov
ret
fadd
out
fabs
adc
int
scas
int
iret
jmp
aam
in
stc
rcl
repz
add
call
jmp
mov
aad
lds
xlat
fdivrp
incb
jmp
add
aad
cli
in
sti
loope
out
test
mov
ror
mov
stc
clc
lret
into
pop
mov
fildl
mov
or
ror
enter
clc
stc
int
stc
cld
in
mul
repnz
les
lret
or
pop
add
lods
mov
mov
mov
cli
fdiv
fdiv
out
mul
stc
or
ljmp
in
in
mov
mov
shr
std
repz
icebp
test
test
add
rcr
lret
ljmp
mov
in
lret
add
push
stc
or
in
in
jmp
mov
jmp
out
rcl
fsqrt
out
enter
add
add
or
out
cmc
push
add
mov
jmp
int
call
add
add
fdiv
mov
or
leave
mov
in
in
in
mov
call
loop
fdivrl
enter
jmp
icebp
fcomip
sarl
mov
mov
int3
shl
stc
mov
sar
fcmovb
loope
ljmp
out
clc
icebp
mov
mov
stc
sti
ret
aad
push
out
add
leave
out
fdiv
in
leave
ljmp
jecxz
fadds
sti
sar
les
add
imulb
faddp
mov
mov
aad
ret
out
fsubr
out
or
shr
out
mul
test
int3
stc
rcl
lret
repz
or
hlt
loop
lret
or
mov
loop
aam
test
aam
jecxz
icebp
std
filds
fdivr
movl
in
loopne
scas
jecxz
jmp
int
in
xlat
repnz
clc
xlat
std
shl
sar
add
add
std
in
into
ret
xlat
lret
mov
call
sarb
repnz
or
ljmp
std
faddp
scas
into
aam
out
into
mov
imul
mov
out
cld
or
in
jmp
loope
sti
add
loopne
jecxz
jecxz
in
mov
std
aam
add
xlat
enter
loop
les
lret
lret
mov
shl
fdivrp
fsub
jmp
or
adc
ljmp
out
aam
mov
fstpt
out
sar
loop
std
fiadds
fnstsw
out
add
into
shlb
lock
mov
rcr
aam
jmp
fdivr
cli
jmp
ljmp
fmul
mov
mov
repnz
aam
jmp
shr
clc
fcmovu
les
pop
lret
std
lret
cli
loope
lds
loopne
div
fadd
mov
in
int3
lock
cld
hlt
mov
loop
or
or
or
loop
mov
lock
lret
jmp
mov
faddl
add
add
or
loope
repz
lret
mov
jecxz
into
hlt
out
int
rcl
lock
or
shr
lods
into
out
in
mov
mov
lock
int
movl
add
add
rol
loope
mov
sti
loopne
mov
loope
jecxz
stc
add
hlt
add
cmc
into
jmp
in
fstp
shll
shl
stc
add
jecxz
test
pop
lret
jmp
in
lret
ret
ror
mov
mov
enter
fnstsw
sar
add
or
ljmp
mov
fmul
in
int
rcl
int
add
add
out
out
rol
mov
call
rcr
xlat
test
aad
int
out
repz
jmp
cli
hlt
mov
mov
shr
sti
xlat
loope
or
leave
add
ljmp
shl
fidivl
in
fmulp
out
jecxz
sar
add
jmp
in
add
mov
ret
rol
aad
lds
iret
shr
sar
fcmove
or
int
out
add
lret
leave
mov
mov
aad
repnz
loope
loop
repnz
mov
in
out
lret
enter
mov
lock
rol
fcmove
fisttpl
std
std
lret
scas
cmc
mov
rol
mov
int
ljmp
add
jmp
shr
mov
out
lret
mov
mov
loopne
lret
out
add
add
repnz
lret
icebp
mov
mov
hlt
jmp
rol
call
div
iret
hlt
mov
lds
into
or
int3
or
test
loope
fistpll
roll
jmp
fxtract
add
in
iret
loope
test
idivb
repnz
repz
fucom
add
lret
adc
shl
ret
xlat
ljmp
sar
out
mov
out
cld
sti
fiaddl
or
cld
repnz
lods
lods
int
mov
out
mov
repnz
ljmp
cld
fsub
fstp
fisttps
shr
rol
rcl
iret
cli
sti
fcmove
mov
repz
cmc
push
ret
add
fcom
push
jmp
fmul
out
lods
mov
shlb
fcomp
aam
in
ret
faddl
jmp
pop
ud2
ror
mov
clc
aam
lret
shl
mov
mov
jecxz
sti
or
fcomp
ljmp
in
shl
fidivl
mov
jmp
loop
sarl
loope
add
ret
add
mov
push
stc
jmp
out
loop
mov
mov
enter
hlt
cli
lock
rcl
roll
add
jmp
not
call
stc
lret
icebp
clc
out
fdivrs
jmp
pop
jmp
jmp
out
sti
cli
repnz
fstpt
repnz
movb
loopne
mul
in
dec
push
shll
cmc
fcmovne
mov
leave
add
aad
add
shl
fucomp
add
sti
ror
stos
scas
int
shlb
idivb
repz
fmuls
add
pop
or
loop
or
repz
fldt
ror
into
mov
rorb
aam
jmp
in
test
lods
mov
mov
rcl
aam
cld
std
lret
inc
xlat
mov
loop
jecxz
std
mov
ret
sar
mov
fadd
add
aad
jmp
cld
mul
lret
call
aad
mov
aam
leave
mov
idivb
ret
add
shrl
in
mov
aad
in
mov
fyl2xp1
mov
add
add
aam
or
fsubp
in
int
int3
shr
fdivrl
ret
std
loope
fimull
or
iret
stos
rol
sarb
lret
sarb
add
mov
or
ror
mov
in
call
add
aam
movb
lret
out
fstp
repnz
in
mov
enter
aad
int
idiv
stc
or
in
in
clc
scas
int3
ret
aam
in
mov
rcr
mov
fiadds
add
in
std
enter
fdivrs
mov
ljmp
int3
sar
mov
cli
add
fcomp
adc
jmp
ljmp
leave
cld
test
in
shl
loop
adc
jmp
aam
lock
mov
mov
mov
ffree
neg
jmp
cmc
add
in
mov
in
out
mov
fxch
aad
jecxz
fucomi
fcomp
incl
faddp
jecxz
fsub
out
or
lret
aam
jmp
out
in
mov
rol
repnz
or
push
decb
push
into
jecxz
call
sti
aad
enter
fprem1
sarl
loope
into
or
jecxz
lods
mov
mov
in
test
push
mov
add
aad
fadds
enter
iret
add
out
mov
out
in
repnz
mov
fdivr
testl
fadd
cli
or
loope
mov
aam
out
fsqrt
aam
out
aam
sti
repz
cld
add
or
lret
lret
fadds
leave
shrb
rol
aam
lock
rcr
ret
int3
ret
loopne
fld
fucomi
fdivr
fimuls
call
scas
lods
mov
call
add
ret
shl
cmc
fcmovne
jecxz
clc
fst
ror
hlt
iret
ret
sti
jmp
icebp
cmc
iret
out
ljmp
aad
jmp
shll
sti
vpsllq
icebp
mov
fmull
ljmp
cld
out
repz
rol
mov
fnsetpm(287
out
fstpt
sti
hlt
out
test
repz
lret
iret
sar
in
mov
inc
xlat
rcl
fstp
in
out
ljmp
iret
mov
mov
mov
or
in
icebp
loop
lret
int3
repnz
scas
ljmp
filds
out
rcl
dec
lock
call
lock
mov
leave
icebp
divl
cld
cld
ret
clc
sti
std
movb
int3
loopne
lret
aam
stc
int3
mov
out
clc
mov
cmc
cli
cli
fiadds
hlt
jmp
mov
mov
loop
mov
divb
loopne
push
jmp
add
loop
loope
add
out
in
in
in
lret
enter
in
out
repz
mov
cld
rcr
enter
ljmp
into
enter
fsub
iret
incb
rcr
int
or
add
enter
cld
lods
repnz
in
lods
leave
mov
enter
int
or
cli
push
out
in
push
cld
mov
loop
rol
fdivp
mov
shl
fst
lock
add
icebp
leave
lods
out
ret
out
stc
mov
mov
fcmovne
fsubrp
stc
neg
jmp
in
fmull
fistl
call
leave
mov
repz
shlb
cmc
mov
jmp
mov
xor
mov
lea
mov
mov
xor
sub
sbb
xor
xor
mov
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
xor
mov
lea
mov
xor
add
imul
mov
mov
mov
mov
jmp
mov
jmp
jmp
mov
pop
leave
ret
push
mov
jmp
in
sbb
in
sub
jnp
test
pop
mov
cwtl
jnp
stos
cwtl
jnp
int
jecxz
xlat
inc
cmc
les
fmul
fsubrp
loope
out
test
enter
loopne
cld
add
stc
in
push
loop
ror
mov
shl
mov
jmp
enter
push
loopne
stc
lret
or
push
stc
repnz
shr
hlt
shlb
aad
mov
out
or
cld
mov
cmc
shl
aam
mov
sarl
mov
loop
stc
call
in
icebp
icebp
out
fcmovnu
out
ret
aad
fld1
out
ljmp
ljmp
icebp
in
std
in
ret
push
fsubr
jmp
fdivr
fst
call
fadd
in
rol
mov
in
fdiv
fnstsw
jecxz
loop
out
loope
ror
in
or
repz
test
jecxz
icebp
in
lock
leave
loop
rcl
incl
add
loope
out
repz
int3
lock
mov
lock
neg
repz
int3
flds
mov
rcr
push
leave
in
add
icebp
mov
call
cmc
call
add
mov
iret
fadd
adc
in
mov
int3
int
cmc
sar
mov
ror
test
jmp
pop
jmp
int
add
not
cli
fsubr
mov
out
xlat
in
rcr
loopne
pop
hlt
rol
pop
in
add
lret
ffree
test
mov
in
rcr
imul
mov
stc
out
aad
cmc
loope
or
push
add
repz
test
shl
out
ljmp
in
mov
decb
add
stos
ror
loope
enter
lret
mov
mov
roll
repz
mov
fdivrp
add
mov
jmp
cmc
sti
ret
out
lret
repnz
sti
rolb
filds
ljmp
lods
enter
rol
fadd
out
lock
mov
add
add
lret
or
fsubp
lret
mov
in
xlat
scas
lret
lret
mov
in
fmul
fidivrl
fsubr
stc
enter
fcomp
out
leave
ret
out
hlt
int
hlt
mov
leave
bnd
in
fdecstp
decb
lret
loope
iret
mov
bnd
aad
shl
fnsave
add
int3
sarl
out
lret
cli
int3
mov
mov
mov
aam
fcmovnu
out
fld
in
mov
rolb
aam
hlt
lret
cli
faddp
lock
ljmp
fiadds
lret
fdiv
call
add
fucomi
ret
lods
loop
shlb
jmp
not
jecxz
out
rolb
mov
push
push
stc
loop
lods
out
into
in
int3
mov
out
in
hlt
fcom
add
ljmp
fsubrs
mov
mov
rcr
out
lret
loop
hlt
aad
in
add
in
add
leave
or
int
int3
test
mov
lret
incl
in
fucomp
ljmp
or
int3
call
rcr
aad
lock
cld
rcr
rcl
ret
repnz
lret
fimull
fisubrs
mov
jmp
in
mov
add
out
inc
out
push
jmp
fistpll
shlb
add
push
idivb
push
add
out
sti
fidivrs
cmc
out
hlt
repnz
lret
aad
add
add
ret
hlt
or
enter
mov
fdiv
fsubp
in
iret
mov
mov
cli
ffreep
or
int3
jmp
shl
out
dec
std
clc
fnop
sarl
push
jecxz
out
loop
add
lds
lock
into
mov
leave
loopne
stc
ffree
mov
out
out
clc
adc
fadd
test
in
loop
test
shl
fcmovne
mov
std
std
int3
push
fsub
testb
iret
adc
enter
lret
divl
lock
shl
shr
mov
std
add
loopne
add
out
rol
ret
ljmp
shll
icebp
aad
lds
call
test
lret
icebp
int3
ret
cli
ror
sar
or
call
in
lock
test
mov
lock
shl
mov
loope
or
mov
icebp
shr
in
repz
mov
hlt
mov
fcmovu
ljmp
in
or
aam
sar
shr
mov
loope
cmc
ret
mov
hlt
aad
fdivr
add
loopne
mov
fmul
icebp
fdivrp
in
add
loope
in
sar
cmc
or
call
mov
test
mov
repz
fdivp
repnz
lret
or
in
loopne
loopne
mov
jmp
int
std
add
loope
push
push
ljmp
ljmp
in
mov
mov
lret
stc
aam
ret
jecxz
fcmovnb
aam
fsubr
jmp
incl
int3
shl
test
shl
cmc
mov
stc
cmc
aam
int3
in
ret
or
loopne
cmc
add
fcmovu
mov
shl
icebp
scas
lret
imul
rcl
fildl
mov
add
in
lret
out
jecxz
call
out
repz
lock
add
not
out
lock
loope
leave
in
shrl
leave
repz
fcmovu
sarb
fldl
in
jmp
add
in
rol
rcl
stos
shl
rol
mov
mov
mov
or
lret
or
jmp
int3
loope
mov
out
mov
iret
hlt
push
sti
mov
fdiv
in
movb
vpaddw
int
mov
rol
lret
lret
leave
jmp
leave
iret
div
xlat
fcmovbe
faddp
in
lret
jecxz
test
mov
stc
test
leave
mov
movb
cmc
fsub
cmc
out
iret
jecxz
mov
lods
mov
xlat
mov
mov
rcr
cmc
ret
jecxz
roll
add
add
dec
add
jmp
ret
mov
loop
repz
aad
cli
in
mov
out
testl
psubsw
ftst
in
lods
shr
mov
hlt
call
loop
or
lret
loopne
int3
loope
jmp
test
loope
jmp
sar
hlt
mov
add
cld
call
or
scas
ror
mov
out
out
lock
repnz
sti
call
rol
jecxz
loope
iret
out
icebp
ljmp
shl
div
in
int3
in
fstp
clc
loopne
std
xlat
jmp
in
or
repz
mov
fcmovnbe
test
repnz
decb
loope
fxch
out
fisttpll
or
scas
fsubr
test
int3
in
out
fidivrs
mov
sar
add
aad
pop
into
or
loop
hlt
rcr
aam
mov
mov
cld
incl
lret
jmp
into
lock
mov
int3
mov
ljmp
cld
ret
mov
enter
mov
ror
out
mov
add
mov
ffreep
lret
iret
fucomi
fsubp
mov
iret
iret
out
mov
jmp
into
push
repz
or
enter
in
call
fsub
lock
mov
loopne
shl
cld
in
jmp
loope
into
iret
clc
idivb
div
int3
ret
repnz
neg
std
in
test
into
out
div
jecxz
icebp
repz
add
les
int
repnz
out
jecxz
vpsubw
fucomi
hlt
mov
rcr
add
in
add
pop
sti
loopne
paddq
adc
loope
enter
out
test
int
out
idiv
mov
add
clc
add
lret
iret
push
leave
test
lock
int
jecxz
aam
fidivrs
mov
xlat
aad
lock
add
faddp
xlat
jmp
scas
enter
les
repnz
stc
mov
add
jmp
adc
in
out
mov
mov
in
mov
rcr
div
cld
add
aad
add
cli
out
clc
or
fcmovu
add
lods
in
lods
xlat
loopne
fcmove
jmp
aad
stc
shl
decb
add
ljmp
lret
clc
mov
enter
sar
jmp
iret
int
add
shll
mov
hlt
call
fcmovb
add
in
shl
leave
out
repnz
int
mov
mov
fadds
stc
clc
rcr
add
push
repz
shr
loope
jmp
cmc
lret
jmp
mov
mov
cli
or
push
or
int
shlb
mov
int3
test
mov
lds
add
push
fucom
mov
shlb
rcr
sar
repnz
std
icebp
in
idiv
repz
cld
repz
stos
in
int3
int
icebp
fnstenv
mov
ret
aad
lret
fndisi(8087
aad
int3
iret
repnz
ljmp
leave
enter
fnstcw
idiv
aad
out
add
add
mov
in
mov
icebp
in
divl
sar
jmp
aad
fsubp
int
in
mov
out
imulb
xlat
jmp
rcr
loopne
sti
aam
push
add
or
mov
loope
ror
mov
enter
aam
lret
icebp
fsubrp
or
add
into
mov
lods
mov
in
rcr
enter
xlat
sti
shl
hlt
pop
mov
clc
cld
inc
or
jmp
jecxz
mul
cli
rol
mov
jmp
aam
hlt
push
add
neg
call
test
mov
shr
into
shrl
mov
roll
fldl
icebp
ret
cmc
loop
add
out
ror
out
rol
hlt
ret
lods
in
mov
mov
mov
push
leave
jmp
out
in
enter
mov
loopne
clc
mov
sti
cmc
std
ret
leave
lock
cmc
add
add
faddp
shrl
out
leave
in
iret
mov
ror
mul
out
add
fmuls
out
repnz
lods
cli
out
jmp
cli
neg
fldl
sti
jmp
adc
iret
mov
enter
sti
icebp
out
lret
mov
add
stc
rcr
rolb
loop
out
or
in
mov
neg
in
ljmp
in
loope
out
loope
or
inc
add
cli
loop
into
out
icebp
rcl
mov
inc
cld
out
out
aad
aam
stc
ret
add
into
stc
loopne
lock
call
scas
mov
jmp
pop
lret
in
adc
les
neg
aam
mov
cli
icebp
add
sti
int
ret
aam
fdivr
stc
in
mov
imul
mov
jmp
lret
cmc
mov
out
sti
ljmp
sti
loopne
mov
incb
into
mov
enter
stc
sti
add
rol
iret
in
in
repz
mov
ljmp
in
in
loop
iret
repnz
fstpt
fcmovu
ret
add
leave
aad
add
iret
cld
add
in
movsl
lret
mov
jmp
aad
sti
sti
sarl
fcmovne
shl
std
leave
cmc
out
jecxz
ljmp
lret
mov
in
shlb
clc
out
aad
faddl
loop
lret
or
ljmp
into
call
shl
rorb
lock
jmp
lret
out
ljmp
repnz
iret
mov
not
lret
mov
fldl
icebp
scas
test
leave
cmc
int
sarl
fsubp
in
jmp
std
cli
push
out
push
add
fsub
fsubr
ret
stc
mov
in
sar
repz
loope
add
cli
or
rcr
in
enter
lret
mov
std
clc
rolb
loope
or
repnz
fcomip
std
jmp
in
loopne
shr
int3
int3
repz
in
leave
shl
repnz
sar
fnstsw
aam
out
ret
in
lret
aam
into
stc
repnz
out
loopne
std
add
cli
sti
dec
or
shl
in
aad
divl
aam
in
cmc
mov
loope
jmp
jecxz
mov
mov
std
mov
hlt
mov
mov
clc
loop
repnz
mov
mov
call
repz
cld
lret
or
loope
int
mov
leave
shl
fsub
lock
mov
fildl
add
ret
lret
jmp
scas
stos
enter
clc
call
icebp
shl
in
jmp
cli
out
clc
jmp
mov
leave
mov
in
inc
int
fst
cmc
lret
hlt
fcmovbe
clc
mov
leave
fcomi
hlt
cli
fdivp
fdivrp
cli
repnz
add
sar
enter
call
lret
lds
cmc
repnz
icebp
repnz
repnz
enter
lds
fnstenv
mov
idivb
add
icebp
shl
in
jmp
or
loopne
loope
shll
icebp
mov
sti
in
fcom
std
push
out
leave
loope
shrl
fcom
out
lret
hlt
aam
int3
jecxz
ret
loope
out
clc
enter
mov
lret
jecxz
loopne
jmp
int3
repz
shr
in
icebp
pop
icebp
shl
sti
hlt
iret
in
add
cld
shl
movsb
mov
jmp
cli
rcr
in
in
fdivrl
mov
lret
aam
or
call
mov
test
mov
into
add
aam
fadds
sar
loopne
repz
ljmp
fxch
lock
fnstcw
into
cld
rol
out
jecxz
or
call
jmp
fadd
rol
hlt
hlt
hlt
std
mov
sar
ret
in
cmc
xlat
aad
out
std
add
enter
mov
in
mov
mov
cmc
or
or
fadds
out
pop
in
test
rcr
mov
mov
pushl
loope
out
std
fmull
add
fadds
int
mov
mov
in
ror
lret
lock
add
ret
in
mul
ljmp
mov
call
mov
mov
add
sti
loop
jecxz
out
shll
out
iret
out
fsubr
out
loope
out
rcr
ret
shl
in
mov
out
scas
mov
mov
sti
lret
fdivrs
out
aam
jmp
fcmovu
in
in
fyl2x
lods
rcl
ret
ror
in
fadd
iret
neg
leave
ret
add
in
loopne
lret
ljmp
mov
in
shlb
mov
add
ret
leave
lret
int
call
shr
lret
cld
out
add
mov
jecxz
aam
jecxz
hlt
iret
or
jmp
rol
cmc
shrl
enter
sarb
mov
add
cld
out
scas
icebp
mov
jmp
in
std
leave
sar
mov
movb
mov
add
fsubr
jecxz
mov
lret
into
sarl
loope
icebp
roll
lret
push
loopne
clc
lret
loope
rol
stos
mov
out
ror
shr
icebp
mov
int
out
testl
add
pop
repz
ret
shr
aad
lret
ljmp
cli
add
jmp
hlt
push
clc
lret
fdiv
ljmp
cmc
jmp
mov
mov
ffree
add
ret
cli
mul
sti
repz
jmp
imul
in
mov
icebp
mov
jmp
div
call
pop
out
out
sti
loopne
lret
fcomip
out
xlat
out
mov
lret
int
cmc
mov
fsub
out
dec
cld
in
jmp
mov
lret
stc
fnstcw
fcmovb
repnz
call
add
in
into
aam
in
aad
jecxz
fcomi
fdivp
out
rcr
testl
in
rcl
repnz
mov
out
mov
div
ror
repz
ffree
out
lret
fadds
ljmp
lds
xlat
into
int
mov
stc
jmp
dec
cld
enter
ret
jecxz
mov
lret
mov
idiv
stc
lds
iret
in
shr
lret
out
jecxz
into
lret
cmc
int3
mov
mov
add
std
push
mov
icebp
fidivrs
mov
in
stc
in
add
add
out
ret
repnz
out
fsqrt
loope
out
rol
test
mov
out
xlat
mov
enter
xlat
out
rol
or
ret
or
cmpsb
mov
ljmp
mov
shl
out
out
or
loope
out
cli
in
in
repz
divl
aam
in
mov
jmp
aam
or
psubw
loop
loope
iret
enter
fdivr
int
in
out
enter
stc
fldlg2
add
fldl
add
jmp
leave
fcmovnb
enter
fdivr
aad
int
loopne
mov
lret
add
fmuls
add
fildll
lock
mov
out
mov
in
int3
fndisi(8087
add
idiv
add
jecxz
icebp
mov
jmp
testb
lock
shr
add
loope
jmp
mov
leave
in
fsub
mov
mov
clc
filds
loop
jecxz
pop
out
roll
in
scas
icebp
repnz
in
fcom
fildl
mov
stc
shr
push
fsub
clc
add
jmp
fucom
rol
test
div
fcmovu
fiaddl
hlt
flds
fldlg2
repz
add
add
add
flds
fsub
out
jmp
lods
in
loop
in
into
shl
lret
lret
mov
fcom
shl
sar
ljmp
les
int3
mov
repnz
in
cmc
fcmovu
out
hlt
add
aam
add
add
add
lods
lock
shr
fcom
mov
testb
add
ret
mov
in
lods
mov
repz
shl
into
mov
aam
pop
mov
loope
add
push
cli
in
or
ljmp
lock
ljmp
repz
ljmp
lds
mov
divl
fxch
cli
cli
fstpt
hlt
fstpt
flds
iret
mov
out
lock
fucomi
out
iret
call
mov
in
mov
add
or
or
into
fdivp
test
out
icebp
mov
ret
int
out
icebp
in
fcmovnb
or
add
in
shr
iret
jecxz
enter
stc
imul
fmulp
add
fcmovnu
clc
testl
cmc
fninit
out
shlb
out
mov
in
int
out
out
cld
shl
out
fsub
repz
xlat
ret
loopne
loopne
mov
out
lret
mov
sti
rcr
sti
out
std
push
enter
in
call
out
out
lret
mov
mov
or
les
scas
out
in
in
repz
enter
icebp
in
cmc
repnz
icebp
mov
add
jmp
test
repnz
icebp
lock
fstp
iret
fsub
cld
rcr
fsincos
int3
fnstsw
lret
ljmp
scas
aad
sar
dec
ror
mov
mov
in
fimull
shl
bnd
hlt
lret
repz
add
lock
stc
out
out
in
jecxz
lret
cli
in
aad
in
clc
in
sti
clc
cmc
add
fcmovnu
std
jmp
decb
aad
or
pmaxsw
lock
repnz
lock
xlat
iret
mov
std
clc
aad
xbegin
ljmp
mov
jmp
repz
rcr
shl
lret
in
pop
loope
mov
xlat
in
enter
cmc
cli
mov
fidivrs
add
loope
ljmp
out
jecxz
mov
in
sti
hlt
call
fsubr
loope
lock
clc
or
mov
stc
cmc
ljmp
mov
out
lock
sti
pminub
fdivl
rol
in
mov
add
mov
ljmp
cli
add
int3
in
into
into
in
call
add
loope
in
stc
filds
add
add
xlat
rcl
loopne
mov
shl
std
jmp
cli
mov
mov
rolb
pop
add
iret
out
fadd
in
xlat
test
mov
jmp
add
pop
into
aad
add
lock
or
loopne
rol
rol
lods
fcmovnbe
rol
lret
std
int3
cli
jecxz
out
ror
neg
add
sar
sti
fucom
or
psubsb
ljmp
fld
mov
in
repz
fdiv
jecxz
iret
jmp
ret
fadd
call
jmp
fdivp
fsubrp
jmp
loop
in
sti
clc
loope
loope
lret
int
out
mov
shl
xlat
shl
mov
stc
div
sti
lret
out
int
out
stos
rcr
out
aam
jmp
mov
lret
fcomip
mov
shl
sar
jmp
stos
in
loope
jmp
clc
mov
aad
hlt
std
incb
shl
mov
faddl
fisttpll
loop
lret
test
test
lock
shr
icebp
aam
out
rcl
mov
or
lret
imul
in
in
mov
fnstcw
mov
call
ret
fst
fcmovb
jmp
fsubr
mov
mov
rol
jmp
into
out
aad
testb
leave
call
lock
sti
test
idiv
int
sti
call
shl
add
sti
iret
out
call
lds
iret
mov
lock
repnz
int3
aam
fdivr
or
out
fldcw
mov
out
mov
std
icebp
leave
faddl
lock
mov
fisttps
ret
in
mov
lods
int
fsincos
cli
hlt
iret
in
stc
add
sti
pop
call
call
into
lret
lods
icebp
shl
ljmp
neg
test
pop
int3
ret
aam
lret
in
pop
jmp
repz
ret
ret
iret
lds
cli
repz
repnz
add
clc
in
into
in
out
rcl
into
lret
bnd
mov
imul
lret
fadd
call
sarb
jmp
out
out
sti
sti
mov
fcmovnb
fxch
ljmp
lret
rcr
int
shl
lret
neg
xlat
lock
std
fsubp
lock
in
fsub
ljmp
int
cmc
out
rcr
jmp
mov
xlat
cld
rcl
out
add
lret
mul
sti
in
out
ror
mov
imul
mov
mov
cmc
cmc
lret
repz
icebp
call
sti
ret
out
lret
repz
int
roll
mov
int3
or
lods
loopne
mov
fidivrl
icebp
add
out
clc
out
adc
shrl
ret
inc
stc
aam
aad
pop
in
repnz
ljmp
std
in
mov
sti
icebp
in
shlb
fdiv
xlat
rolb
aad
out
aad
jmp
stos
mov
in
jecxz
mov
in
out
sti
leave
mov
cli
out
incb
std
faddl
call
in
mov
enter
lock
mov
ret
out
leave
out
fldz
leave
lret
test
rol
out
not
lret
cld
icebp
mov
rolb
add
out
add
fcmovu
out
int3
test
mov
mov
jmp
fdiv
int
clc
loop
std
cld
out
ret
mov
shr
loopne
mov
hlt
leave
in
cli
out
stc
rcl
mov
loopne
add
fcomp
aad
fucomip
shll
int
shl
mov
loop
mov
rcr
imul
add
fimuls
leave
rcl
leave
out
repz
enter
int3
cmc
add
cld
in
pinsrw
imulb
hlt
xlat
cmc
clc
std
std
stc
add
mov
add
loop
or
enter
icebp
sar
in
out
in
enter
add
test
fstl
add
in
fmul
icebp
shlb
std
mov
out
xlat
vpaddq
testl
fadd
mov
mov
sti
in
in
cli
in
shl
aad
out
shl
fsubp
add
lret
cli
cli
shl
lret
mov
jmp
rcl
icebp
mov
cli
lock
loop
add
add
fmul
shll
shl
stc
mov
out
shl
fcomp
mov
cli
jecxz
fadd
leave
frndint
call
sarb
mov
add
fdivr
inc
mov
std
or
lret
iret
sar
clc
out
call
mov
std
ffreep
ffree
pop
fcmovu
clc
iret
loop
repz
mov
rcr
cli
enter
mov
cmc
in
add
repnz
xlat
sti
jmp
incb
repz
out
lods
mov
rol
lock
div
mov
or
loopne
or
jmp
fst
in
in
jmp
sarl
loope
cmc
fcomp
mov
dec
jecxz
add
jmp
repz
mov
aam
in
out
shl
stc
hlt
aam
idiv
aad
movl
rcr
lods
ror
cmc
into
out
xlat
in
int
mov
rol
fiaddl
mov
fisttpl
out
in
loop
lret
stc
sti
jmp
call
ret
loope
sti
flds
into
jmp
in
out
mov
cli
hlt
hlt
call
call
sar
mov
aad
add
shll
mov
int
add
out
sar
add
fstp
lret
or
call
lds
out
std
pop
loopne
pop
cld
incl
add
add
mov
out
imulb
cmc
lock
int3
rolb
ljmp
cld
ffree
mov
ret
fmul
aad
mov
int3
out
testb
add
loope
fcmovu
testb
fucomp
lret
rol
test
ret
rcr
call
call
in
not
add
add
ficoms
jmp
mov
mov
fdiv
cmc
jmp
xlat
repnz
hlt
std
fdivr
fucom
call
shr
rcl
aad
fidivl
shr
loopne
fadd
xlat
inc
in
les
ljmp
int
mov
repz
in
in
int
shl
aad
int3
fcomi
fmull
out
fiaddl
repz
stos
mov
call
jmp
icebp
sti
hlt
icebp
rolb
fdivrp
fmulp
in
cmc
leave
push
les
into
enter
enter
into
mov
mov
sti
adc
scas
lods
mov
cli
call
fnstsw
add
clc
loop
enter
ret
int
rol
xlat
out
icebp
mov
jmp
jmp
lds
ljmp
repz
in
scas
mov
sarl
jecxz
lock
imul
repnz
fmul
jmp
out
int
jmp
jmp
aam
fcmovnu
sti
mov
repnz
cli
std
add
mov
call
jmp
xlat
jmp
aam
in
fdecstp
mov
stc
add
loopne
repnz
int
in
idivl
lock
add
mov
loope
out
testl
or
fucomp
in
repnz
out
in
iret
mov
mov
lret
std
sti
incl
fdiv
repnz
lret
out
repnz
fadd
in
fld
mov
std
loope
into
repz
lods
xlat
mov
fldz
jmp
fcmovne
idiv
pop
lock
add
add
add
icebp
int
iret
into
leave
mov
not
sti
jmp
loope
in
sarl
testl
or
faddp
mov
rol
jmp
mov
add
add
mov
or
or
loope
cmpsl
scas
mov
mov
shl
leave
fdivrl
loope
add
push
cld
out
or
lret
fsubrp
cmpsl
mov
leave
int
in
ljmp
call
movl
clc
or
enter
lods
mov
mov
fucomi
in
mov
lock
add
loope
lret
leave
ret
rol
fildll
mov
ljmp
out
sti
aam
out
aam
push
jmp
jecxz
in
jecxz
icebp
int
int3
shr
ljmp
mov
out
mul
clc
aam
into
iret
enter
mov
divl
mov
xlat
push
stc
add
ret
in
out
out
adc
mov
out
mov
mov
leave
mov
mov
ror
idiv
clc
fcmovne
icebp
fildl
clc
push
aad
push
or
adc
ret
shll
jmp
cmc
idivl
fucom
out
add
add
mov
imul
rol
fincstp
lret
mov
rcr
jmp
or
out
aam
add
test
aad
rcl
sar
mov
not
hlt
int3
in
pop
cli
out
fsubr
std
in
add
int
scas
stos
mov
xlat
in
in
in
fstp
in
leave
mov
fiaddl
fdivp
add
add
vgf2p8mulb
fsub
scas
aad
int3
mov
iret
sarl
sar
rcl
sti
clc
fmul
repz
loopne
int3
mov
rol
lock
hlt
int
ljmp
repnz
fdivr
in
out
ljmp
mov
shl
sti
lock
aad
sti
std
enter
cli
lds
stc
inc
out
out
mov
lock
mov
hlt
ljmp
shl
adc
mov
out
in
xlat
ror
cli
fcmovnb
int
hlt
out
out
lock
in
out
add
or
ret
out
loope
mov
repz
std
imul
stc
icebp
add
fdivr
jmp
sar
int3
ljmp
fcmovbe
lret
leave
sti
repz
ret
cld
ror
cld
fcmovne
cli
add
mov
shl
sti
cmc
in
mov
pop
sar
cmc
std
in
pop
vpsrld
lret
out
divb
fucomip
out
movl
out
incl
add
in
xlat
in
loopne
lret
icebp
lods
lret
divb
mov
out
decl
or
enter
test
int
cli
mov
iret
int3
clc
fucom
pop
repnz
ret
clc
fucomip
iret
mov
cmc
fcmovb
shr
mov
mov
int
in
jecxz
in
in
std
leave
call
into
mov
jmp
mov
sti
hlt
cli
add
fstpt
in
out
cld
scas
rcr
in
leave
out
mov
cld
bnd
mov
push
add
fmul
out
fcmovne
push
jecxz
jecxz
mov
in
mov
enter
dec
icebp
rcr
cmc
cld
icebp
clc
aad
ljmp
or
lods
ror
mov
mov
inc
ret
rcr
mul
or
mov
not
icebp
out
div
shl
idiv
add
cli
clc
jecxz
add
fcmovnu
out
mov
lods
icebp
les
fistpll
xabort
rol
cmc
cld
shl
add
sub
push
movl
decl
movl
orl
lea
incl
mov
decl
mov
movl
movl
sub
mov
incl
mov
orl
mov
subl
xor
sbbl
sub
movl
sbb
xor
xor
movl
mov
mov
movl
cmpl
jne
movl
cmpl
jne
sbb
mov
andl
mov
xor
sub
jmp
mov
push
outsl
jbe
loope
xor
cmp
mov
jnp
shr
jmp
lret
mov
in
call
icebp
xlat
shl
in
fiadds
fsubr
stos
loopne
in
int
lock
jmp
in
lock
fneni(8087
sarl
add
clc
loope
fdivr
ljmp
leave
cmc
repnz
in
mov
sti
int
not
inc
loop
sysret
repz
xlat
jmp
aad
rcl
cld
cld
leave
cld
call
fcomi
push
add
in
out
fdivl
ret
mov
mov
push
mov
loop
lret
hlt
or
aad
repz
lret
shlb
lret
hlt
idiv
in
mov
flds
shr
fdivr
mov
clc
or
lret
in
mov
call
stc
in
mov
jecxz
rol
imul
clc
lock
iret
add
rcr
into
jmp
lret
leave
fst
hlt
iret
fnstcw
hlt
add
aam
in
test
jmp
mov
mov
in
repz
neg
clc
inc
add
std
fsub
jmp
in
in
iret
jmp
mov
mov
cli
out
ret
flds
stc
cld
fisttps
in
sarl
loopne
out
mov
aam
mov
sar
stc
sarl
aad
lret
push
faddp
rcr
cmc
lods
in
mov
rol
enter
mov
aad
rcl
add
lret
lret
aam
out
rcl
loop
fadd
in
mov
repnz
pop
aad
cli
add
jmp
pop
decl
or
mov
shl
ljmp
in
out
cld
aam
rol
shl
sti
psubb
std
add
loopne
fcmovnbe
leave
aam
add
into
fdivrl
add
clc
out
cld
loop
ljmp
shr
rcl
out
rcl
repnz
fstp
int3
ffreep
pmaxsw
jmp
call
out
into
xlat
imul
ljmp
mov
repnz
fsub
hlt
or
pop
push
icebp
shl
mov
lods
mov
shll
idivl
out
in
fmul
in
fsubr
scas
mov
lret
stc
mov
clc
divb
cmc
in
rolb
lret
fldl2t
in
mov
mov
loop
fdivrp
out
aad
mov
mov
in
std
lret
add
in
ret
idivb
shr
repz
fld
call
rol
in
into
icebp
in
ror
jmp
imul
ror
icebp
xlat
out
fsub
ret
incb
lret
in
add
into
lods
jecxz
rcl
repz
enter
lret
xlat
add
repnz
in
mov
lds
call
mov
lods
ljmp
out
add
sti
idiv
lret
enter
shl
cmpsb
icebp
lods
not
fcmovne
stc
fbstp
ret
mov
shl
ret
or
out
add
out
mov
out
div
repnz
std
rcl
icebp
hlt
fmul
sti
out
hlt
decb
or
add
iret
out
ret
ret
shl
out
into
aam
cld
mov
sar
int
mov
or
or
lret
movsl
loop
mov
rol
mov
shll
repz
in
fcmovnbe
or
push
stc
leave
leave
adc
mov
xlat
icebp
mov
mov
into
mov
jecxz
rol
fsub
test
shl
out
loop
scas
mov
stc
ljmp
clc
repnz
add
lock
fsubp
add
repz
call
mov
fcomi
mov
hlt
aad
add
aad
faddp
leave
out
out
repnz
call
lret
in
cli
fnsave
idiv
lret
out
les
call
in
sti
int3
mov
mov
push
in
jmp
fbstp
aad
aad
mov
shr
out
add
aam
lar
loope
fsubrp
in
mov
in
lret
filds
shl
mov
jmp
jmp
int
call
clc
xlat
mov
call
xlat
or
add
in
pop
stos
loope
lods
mov
mov
cmc
std
fsub
add
cmc
fldl
str
add
mov
shll
rcr
cli
mov
mov
jecxz
or
icebp
rcl
repnz
shl
rcl
pop
aam
add
jmp
enter
iret
mov
mov
call
add
in
add
or
mov
leave
vpminsw
rol
hlt
lock
out
mov
rolb
loopne
shlb
shr
fnstenv
mov
loop
aad
loop
clc
out
out
pop
scas
scas
shl
mov
lret
mov
enter
roll
add
add
enter
fucomi
mov
mov
lret
out
sar
ljmp
xlat
mov
jmp
in
shll
loopne
int
stc
lock
add
or
jmp
pop
in
or
scas
scas
leave
mov
aad
int
icebp
clc
cli
aam
fdivrs
mov
leave
or
ljmp
loop
out
mov
repnz
mov
in
fadds
cli
add
lret
push
fsubp
loop
in
loope
mov
shl
mov
leave
int
in
mov
jmp
dec
iret
out
shr
mov
mov
in
loopne
shl
loopne
cld
or
clc
fldl
add
rcl
in
cmc
rcr
shr
cmc
repz
sti
rcr
clc
jmp
add
shr
mov
fidivrl
mov
loope
stc
std
aad
in
int
push
mov
ret
out
dec
not
loop
pop
in
shl
lock
ret
add
rol
scas
fsubr
mov
xlat
fidivrl
jecxz
in
clc
test
in
loope
rcl
iret
mov
ljmp
mov
fcomi
rol
call
jecxz
xadd
loope
cli
out
fst
dec
mov
aad
jecxz
stc
call
jmp
add
mov
mov
loopne
call
ljmp
repz
jmp
std
out
ljmp
out
loope
mov
cli
aam
fdivrs
ffreep
sti
leave
add
out
shl
in
cli
out
mov
loop
loope
aam
cmc
out
pop
stc
or
in
fsubr
enter
mov
cmc
into
enter
add
repnz
rol
enter
stc
enter
test
mov
mov
out
mov
in
repnz
rcr
sar
aad
movb
fxch
leave
loop
test
xlat
mov
in
lret
mov
mov
ror
fdivp
cli
psubsw
iret
leave
in
test
in
jecxz
out
lret
mov
cld
mov
add
add
out
loopne
movl
movsl
int
fcmovnbe
shr
out
int
loop
mov
jecxz
in
icebp
mov
fimuls
shr
iret
rcr
jmp
sti
mov
lret
loop
sarl
loope
sarb
out
icebp
mov
sarb
fidivrs
neg
mov
add
add
add
xlat
scas
mov
lods
mov
ljmp
rol
mov
ret
fucomi
clc
or
out
mov
lret
out
ljmp
stc
in
fadds
cmc
stc
flds
test
hlt
loope
out
lret
out
iret
rcl
cmc
test
rol
shr
ljmp
mov
push
aad
clc
adc
xlat
mov
ljmp
icebp
out
ret
cli
mov
add
jmp
jmp
rol
lret
sti
repz
out
fucomip
add
add
in
hlt
leave
add
fucomip
fmul
int
shll
leave
mov
iret
lock
hlt
test
fstpt
enter
xlat
ret
into
out
out
in
lock
cld
lock
mov
add
dec
repnz
mov
out
in
enter
in
cld
cmc
shl
push
out
add
out
enter
iret
in
in
out
mov
lret
into
cmc
testb
loope
loopne
inc
add
scas
lock
mov
aam
cmc
lock
sti
icebp
shll
ljmp
leave
mov
div
sar
into
lock
fidivl
mov
clc
or
add
pop
or
loope
in
lret
jmp
into
cli
aad
mov
fiaddl
rolb
fld1
test
xlat
test
in
ror
fsubrp
neg
jecxz
pop
aad
cld
sti
pop
enter
out
mov
xlat
aam
xlat
xlat
mov
ret
add
out
loope
fchs
sti
pop
loop
std
push
add
into
repnz
out
ljmp
fucomp
add
into
push
in
shl
add
push
lret
out
shrl
mov
int3
divb
std
fmul
aad
aad
idiv
clc
cli
add
or
mov
call
call
call
fcomip
in
jmp
out
add
out
fdivl
mov
shl
mov
mov
mov
aad
hlt
out
fmuls
or
mov
fadd
iret
int
aam
icebp
out
rolb
mov
out
ljmp
in
out
mov
shll
into
aam
neg
hlt
ror
sti
fdiv
lock
iret
shl
jecxz
in
leave
sti
fcom
mov
iret
fadds
std
hlt
loop
aam
add
rcr
std
lret
enter
mov
shr
jmp
fcmovnb
leave
clc
add
lock
loop
loopne
int
ljmp
fsub
mov
loopne
fstp
out
in
mul
call
faddl
les
cmc
aam
or
mov
ror
lods
shl
out
mov
mov
mov
repz
mov
jmp
aad
loopne
int3
cmpsl
mov
scas
scas
mov
out
aam
in
repnz
incb
shlb
stc
out
sti
or
repz
ret
lret
aam
enter
jmp
fstp
stc
pop
jmp
or
iret
rcl
in
in
mov
repz
testl
out
add
add
out
stos
repz
mov
idivl
mov
enter
fdivp
jmp
sti
or
in
loopne
cli
jmp
int
out
in
repnz
cli
mov
testb
ljmp
cmpsl
rol
mul
cmc
cmc
loop
out
not
icebp
leave
leave
sar
aad
shl
stc
cld
pop
fsubrp
out
fsub
in
fistpll
aam
mov
rcr
ljmp
out
out
fisttpll
or
or
in
xlat
fidivs
aam
in
rcl
ret
mov
testl
loopne
out
or
shrl
into
stc
shr
fadd
neg
add
aam
loope
push
ret
or
call
in
into
fadd
ljmp
fxch
incl
repz
mov
add
out
cli
hlt
jecxz
scas
in
in
call
fstpt
std
rcr
out
loop
mov
or
or
jmp
into
shr
shrb
mov
out
rcr
mov
std
fucomi
fisttpll
or
faddp
int
aad
not
leave
out
mov
stc
mov
add
aam
enter
out
out
xlat
rcl
hlt
in
aam
fldcw
fstp
ret
int3
aad
sar
idiv
aad
or
add
out
repz
shll
in
div
in
mov
add
jecxz
out
add
iret
loope
mov
scas
enter
shl
lods
into
lret
in
out
add
add
rol
sti
loopne
cld
add
or
add
fucom
loope
out
lret
mov
lret
ror
lock
hlt
rol
mov
or
out
fsub
scas
enter
lds
int3
add
cli
in
jmp
add
neg
or
or
iret
rcl
jmp
rcl
in
fdivrp
repz
mov
in
add
or
cld
jecxz
repz
loop
in
in
shr
mov
in
xlat
cmc
cld
pop
pop
cli
fdivr
loope
sti
add
repz
jmp
cli
leave
out
mov
fsubr
ret
mov
std
add
fcomp
fdivr
adc
out
cmc
mov
xlat
aam
out
mov
into
iret
in
in
rcl
std
in
std
add
in
ret
int
int3
int3
mov
faddp
rorl
in
mov
adc
jmp
aad
into
in
enter
out
mov
sar
xlat
add
lret
out
out
icebp
in
loopne
ljmp
std
fdivrl
shl
rcl
call
loope
leave
scas
mul
lret
sar
shl
iret
lock
stc
mov
icebp
ret
jecxz
clc
std
call
mov
out
hlt
lock
int3
ret
stc
in
hlt
add
loop
lret
iret
fdivr
fbstp
mov
jmp
out
rcl
clc
fdivr
mov
sti
jmp
aam
add
out
ljmp
lods
hlt
mov
mov
add
stc
in
or
mov
aad
shl
out
sti
jmp
mov
cld
call
aad
loop
fsub
in
in
out
xlat
in
icebp
aad
mov
loop
loope
flds
rol
fdivr
out
push
in
ljmp
shl
repnz
clc
cli
cmc
call
mov
ret
out
aad
fnstsw
mov
out
ret
aam
shl
int
fiadds
aam
int3
std
aad
cld
cli
out
or
loop
out
loop
lods
lods
test
mov
repnz
out
fcmovb
bswap
add
cmc
loop
test
call
enter
shl
movb
loopne
fucomip
shr
out
neg
mov
mov
repnz
fcmovu
fcomp
add
vshufpd
hlt
in
or
iret
test
into
lret
scas
in
fucomi
iret
repnz
out
out
std
sar
fadds
mov
test
neg
lret
ljmp
fnstsw
jmp
rcl
in
in
add
lds
imulb
aad
mov
fcomi
loop
frstpm(287
out
or
leave
int
mov
test
int3
call
imul
sarb
fcos
or
or
scas
ror
int
loopne
in
icebp
mov
jmp
into
fld
not
fdivrp
call
cld
add
leave
mov
scas
mov
cmc
mov
clc
loope
pop
push
add
in
fdivp
clc
out
stc
lret
call
out
mov
repz
leave
mov
mov
add
hlt
sarb
aad
xlat
movl
ror
not
lock
mov
shl
mov
fabs
fcomp
add
fnstsw
into
cmc
mov
stc
sti
jmp
mov
pop
std
add
fiadds
rcl
ret
jecxz
aam
mov
mov
out
call
not
cld
loopne
sti
loope
loope
or
out
out
in
fst
mov
iret
clc
aam
repz
into
add
ret
std
aad
jmp
jmp
lret
mov
aad
out
fnstsw
mov
stc
testl
stos
fbld
out
repnz
mov
add
sar
lret
iret
pop
lret
in
in
ret
mov
repnz
sti
iret
loope
icebp
mov
add
or
in
int3
bswap
in
lret
jmp
in
idiv
hlt
into
in
fdiv
rolb
add
jecxz
clc
loop
in
mov
in
loope
into
lock
lret
push
cmc
fcmovnbe
into
shl
cmc
mov
lret
add
rol
iret
fxch
out
int
in
std
sarl
cmc
or
fldl
loope
ret
mov
ror
lret
fcmovbe
in
fincstp
sar
repz
sar
aam
in
int
ret
int
in
lret
call
std
test
mov
out
iret
std
inc
jmp
cli
into
icebp
call
fldl
idiv
mov
fdivr
out
ficoms
or
rol
fsubrp
int3
mul
cli
fstpt
add
shl
cld
mov
or
sti
add
loope
loope
in
shll
fsub
fstpt
loope
fadds
ror
lds
mov
lds
add
xlat
stc
invd
push
add
loope
jmp
test
into
rcl
sar
jmp
jmp
rcl
rcr
add
add
loop
test
out
repnz
fisubrs
cld
not
inc
icebp
flds
pop
fsubr
enter
stos
jecxz
in
jmp
repz
test
sar
or
or
scas
icebp
movsl
lock
lret
mov
jecxz
div
rorb
jmp
sti
push
jmp
rcl
cli
call
mov
aam
add
cli
add
fucom
cld
fldl2e
add
int3
out
loopne
xlat
mov
mov
int3
in
int
rcr
lock
std
in
std
adc
add
cmpsb
scas
shr
rcr
cmc
int
fcomp
mov
out
mov
shr
cmc
lret
into
in
mov
out
repz
cli
idivb
jecxz
fsub
in
repz
mov
enter
shl
repnz
ror
mov
ror
in
jecxz
int3
int3
icebp
sarb
out
clc
adc
mov
mov
repz
in
out
push
std
ljmp
or
ret
shr
loope
iret
hlt
out
mov
add
shl
in
rolb
fcomp
fcmove
add
repnz
int3
fucomi
out
mov
repnz
icebp
mov
mov
jmp
movsb
mov
jmp
leave
call
sarb
rcr
out
add
enter
out
sti
icebp
sti
sarb
aam
loop
out
jecxz
fcmovbe
sti
or
push
or
scas
mov
jecxz
in
out
fbstp
mov
repz
or
fisttpl
push
add
call
call
clc
int3
fdivrp
mov
cmc
loopne
fcomp
cld
push
ljmp
lock
into
out
repz
cli
repz
mov
hlt
cmc
std
out
or
jmp
int
out
scas
mov
call
icebp
shl
cld
mov
shl
xlat
vpinsrw
dec
call
lods
in
loop
jmp
lock
in
repz
loope
add
add
add
mov
leave
mov
rcl
sarb
int3
ret
aam
stc
add
out
jmp
or
add
int3
fnsave
iret
out
neg
stc
into
mov
mov
add
call
jmp
mov
out
lret
icebp
into
mov
sar
jecxz
ret
add
or
pop
fisttps
repz
shl
cmc
rcl
stc
aad
fucomi
ffreep
xlat
into
fdiv
out
jecxz
loopne
int
leave
fmul
lret
in
mov
hlt
scas
aad
dec
icebp
add
iret
repz
jecxz
add
in
decl
mov
lret
mov
aam
fyl2x
repz
sti
rcr
icebp
mov
std
loopne
rol
prefetch
or
lods
loope
fcmovb
cli
mov
out
fdivrp
sti
div
mov
out
fiadds
scas
lock
mov
enter
rcl
fsub
xlat
rol
pop
rorl
or
push
add
iret
lret
out
shr
loope
ret
int3
repnz
iret
in
rol
in
hlt
shl
mov
fmulp
leave
or
ret
cli
lret
lock
ljmp
out
in
incb
rol
push
aam
add
fcom
repnz
out
mov
mov
mov
fst
fyl2xp1
loop
rcr
loop
fnclex
add
or
int
loop
icebp
fldt
hlt
div
aad
fnclex
jecxz
out
add
aad
jecxz
loopne
or
mov
imull
out
out
in
in
mov
sti
std
cmc
jmp
div
mov
hlt
lods
lret
xlat
mov
fcmovnu
add
not
stc
idiv
add
aad
lret
jmp
lods
loopne
mov
shr
xlat
mov
cli
int
clc
loopne
mov
add
out
or
mov
repz
add
add
add
hlt
add
or
xlat
add
add
add
fsub
loope
in
fucomi
not
repz
mov
jmp
mov
pop
add
iret
lret
stc
out
mov
enter
int3
fincstp
hlt
push
push
mov
jecxz
fcmovne
cli
leave
call
mov
rcl
mov
mov
mov
leave
rcr
into
add
enter
in
out
icebp
shl
fldln2
mov
out
shl
aad
pmaxsw
jmp
scas
lret
scas
in
repz
mov
enter
out
cli
call
loopne
mov
pmuludq
rcr
mov
ret
ror
lods
mov
out
into
into
out
decb
stc
add
aam
add
or
mov
shr
repnz
out
lock
enter
ret
stc
repnz
or
add
ffree
into
mov
jecxz
out
mov
neg
in
jmp
pop
cld
rcr
fstp
aam
or
ljmp
lock
cli
idiv
ret
fcmovb
not
mov
fcmovnu
dec
iret
add
hlt
loopne
mov
mov
fsubrp
ror
fdivr
rol
std
out
cld
fdivp
dec
fdivr
or
fcom
mov
mov
mov
in
mov
ret
roll
xlat
add
leave
int
add
lock
fsubp
out
in
out
cmc
mov
mov
fnstcw
imul
cmc
add
jmp
jecxz
leave
ret
in
mov
mov
in
cmc
mov
sti
jecxz
add
aad
fucom
or
loop
or
in
in
repz
ljmp
add
loop
add
pop
or
lar
in
in
lods
shl
out
rcl
cmc
pushl
loopne
fcomp
push
add
pand
psubd
mov
aam
mov
lret
out
add
cli
ret
hlt
ret
mov
in
out
repz
aad
inc
fldln2
testb
repnz
lock
fsubp
ret
scas
shl
jecxz
jecxz
clc
into
icebp
ljmp
aad
or
testb
clc
les
rcr
rcl
out
test
iret
add
loop
mov
in
loop
or
rol
cmc
hlt
cmc
jmp
mov
loop
pop
fcmovb
leave
jmp
in
lods
cli
xlat
shl
clc
leave
lret
loop
neg
int
in
clc
add
std
xlat
lret
cld
fisttps
iret
leave
scas
scas
loopne
mov
shl
mov
fst
cld
sti
enter
cli
sti
icebp
jmp
add
loope
add
jmp
mov
jmp
stc
in
mov
filds
cmc
add
fdiv
in
in
jmp
in
mov
ror
int3
fistpll
repz
int
stc
out
cld
fcmovnu
loope
loopne
sarl
rcl
fcmove
sti
std
lret
into
mov
cld
fucomi
add
call
lret
into
lods
loop
iret
aad
lods
shr
mov
in
jmp
in
ljmp
or
ffree
jecxz
rcl
icebp
icebp
in
sti
in
std
repz
or
rolb
add
ret
out
iret
repz
ljmp
add
enter
roll
fcmovb
cli
enter
into
out
int
mov
shl
jecxz
out
scas
mov
mov
mov
or
in
mov
lods
rcl
shl
cld
fdiv
add
cld
rcr
clc
loopne
rol
fimull
jmp
std
jmp
jmp
stc
iret
lret
cmc
std
into
ffree
cmc
hlt
ret
add
clc
add
fildl
mov
jecxz
in
hlt
mov
mov
fld
filds
or
stc
incl
fmulp
mov
mov
xlat
rcr
in
mul
sti
repnz
shl
fcomi
shl
lret
pop
lret
shl
mov
lret
aad
in
out
mov
loope
hlt
clc
shl
out
or
add
hlt
iret
jmp
mov
ljmp
ljmp
add
adc
repnz
loope
cmc
lock
jmp
sar
shlb
ret
rol
push
loopne
clc
or
into
jmp
ljmp
ret
decb
loop
jmp
fcom
lret
leave
repnz
cli
out
mov
hlt
mov
repnz
rcl
les
fsub
or
out
lods
repz
shr
in
fcomp
repz
out
mov
out
jmp
ret
out
icebp
in
in
ljmp
xlat
loop
cli
clc
vpor
cli
fiadds
fsubr
mov
stos
shll
sti
mov
push
lock
or
aam
hlt
call
jmp
shll
stc
test
mov
in
mov
fcmovnbe
or
jmp
push
jmp
fsubrs
fcmovu
fdivr
rcl
fcmovnu
icebp
loopne
div
sti
ret
ror
aam
int
lret
rcl
mov
neg
lods
int3
aad
ret
mov
fcmovnbe
sar
fdivp
call
mov
enter
jmp
std
mov
sarb
repnz
stc
add
push
in
lret
shl
loope
aam
into
call
mov
mov
aad
jecxz
in
pop
fmuls
std
mov
mov
out
out
fidivl
repz
fucom
sar
add
out
in
les
mov
div
ret
cmc
int
mov
mov
add
ret
out
sar
hlt
push
enter
mov
loopne
jmp
sti
in
mov
add
fiadds
int3
fimuls
std
call
int3
fsubr
lock
loopne
in
aad
mov
fadd
add
or
leave
fistl
fistpll
cli
in
cmc
clc
roll
div
test
add
fldl
out
add
lret
shl
in
hlt
lret
cmc
jmp
cli
sti
loope
in
shl
add
out
add
adc
lret
int
mov
neg
ljmp
loopne
ljmp
out
into
les
iret
call
rcl
fistpll
out
add
out
jmp
call
test
rcl
out
rol
sarb
fsubr
repnz
jecxz
or
shl
cmc
shl
cmc
aad
cmc
leave
dec
mov
fdivrl
clc
lret
int
loope
icebp
into
jecxz
ret
aam
cld
xlat
out
leave
fcmovnbe
mov
flds
push
leave
add
in
out
lret
loop
fdivs
ljmp
repnz
loope
stc
mul
adc
icebp
lock
jecxz
out
ret
lret
mov
ror
aam
repnz
push
jmp
aam
out
loope
jecxz
ret
iret
lret
mov
aad
mov
jecxz
out
mov
add
shl
icebp
xlat
out
shrl
lret
jecxz
loopne
rcr
out
jecxz
leave
leave
repnz
jecxz
in
lock
leave
cli
shr
mov
add
clc
fadd
jecxz
fsub
or
stos
cmpsb
fsubrl
enter
fucomip
mov
mov
rcl
verw
add
loop
out
ftst
mov
into
fcmovu
leave
in
mov
jecxz
out
mov
out
out
div
repnz
lods
into
repz
not
out
lock
rcl
fldl
add
or
int3
repnz
mov
lods
shl
hlt
ljmp
icebp
shl
mov
out
fucomp
in
stc
adc
scas
fcmovbe
stc
ljmp
mov
loopne
ljmp
in
enter
iret
lods
mov
enter
imul
fdivr
shl
out
fldl
lret
out
add
mul
mov
stc
repz
add
loopne
lock
mov
clc
aam
or
or
lods
mov
loopne
lret
aam
jmp
incl
idiv
into
mov
cld
loope
std
ret
leave
xlat
scas
not
enter
idivb
mul
ror
in
ffreep
xlat
in
enter
fmul
repz
mov
idiv
fdivrp
mov
ret
rcr
ret
cmc
in
in
vpaddusb
mov
ljmp
shr
mov
in
sar
fcomi
fisttpll
neg
push
call
in
lods
shr
mov
out
in
aad
fldlg2
cmc
fdiv
repz
leave
or
les
int
lret
int
ret
loop
vpsadbw
mov
fxch
jecxz
add
add
add
movb
mov
lods
in
fprem
fdiv
lret
mov
out
repnz
out
or
add
loopne
repz
ljmp
mov
add
shr
out
into
add
lods
mov
loopne
cli
into
test
enter
mov
aad
leave
cld
cld
in
mov
mov
icebp
icebp
in
in
cld
aam
iret
cli
rcl
fucomip
shl
loope
fldl
fcomip
shl
into
out
ljmp
vpslld
add
out
std
in
testl
filds
cld
or
in
call
lret
cli
hlt
call
cmc
mov
call
out
or
call
vmovq
cli
cli
xlat
mov
stc
hlt
out
out
ret
lock
fcmovb
leave
std
fadd
loopne
sar
in
in
jmp
mov
shl
add
out
lock
add
pavgw
lock
clc
mov
mov
fcmovu
lock
fcmovbe
jecxz
fnsave
ret
mov
cmc
mov
mov
jecxz
rol
cli
icebp
mov
push
int
mov
mov
mov
stc
loopne
lds
lock
test
ljmp
mov
int3
call
lock
add
sti
jmp
cld
shufps
out
out
jmp
test
sti
repnz
mov
fmul
add
loop
imul
loopne
jecxz
out
in
out
or
in
scas
mov
in
in
mov
fdivp
sti
sar
in
jecxz
div
loop
lret
add
out
out
cmpsb
jecxz
lds
stc
hlt
add
call
xlat
test
loop
or
push
clc
in
ret
lods
out
loopne
fistpll
mov
mov
cli
push
fiadds
fimuls
xlat
ret
out
clc
mov
add
test
out
in
jmp
out
add
or
out
shl
iret
mov
in
rcr
jmp
mov
mov
aad
enter
or
rep
repz
aam
cmc
leave
int3
jmp
shl
cli
add
cmc
mov
loop
add
jmp
ffree
shl
lret
mov
shlb
in
fnstsw
loope
loop
add
add
leave
int3
mov
lock
cmc
mov
out
loop
ret
out
cld
fcomip
loop
add
add
lret
out
in
xlat
fidivl
fucomi
fcompp
in
add
sar
ret
out
fsubp
push
or
cmpsb
loopne
lods
jmp
mov
sar
cld
cli
mov
repnz
in
fdiv
sti
or
loope
lret
enter
idivl
add
icebp
sbb
orl
xor
xor
adcl
xor
orl
xor
adcl
add
adc
sbb
mov
andl
mov
subl
xor
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
call
cmpl
jb
mov
mov
sbb
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sbb
mov
mov
orl
xor
sub
movl
sbb
xor
xorl
xor
addl
xor
andl
xor
add
movl
adc
mov
addl
xor
sbbl
add
adc
mov
mov
mov
movl
mov
mov
movl
movl
jmp
mov
xor
mov
jmp
jl
push
hlt
pop
nop
leave
mov
loope
inc
or
jnp
stos
cwtl
jnp
sar
jmp
fadds
lret
in
add
into
in
int3
stos
out
jmp
mov
out
int3
mov
out
std
fneni(8087
jmp
lock
aad
repnz
mov
repnz
cli
mov
pop
shl
aam
bswap
out
fidivs
xlat
shl
repnz
divl
mov
aad
loope
add
or
fmul
out
iret
stos
leave
mov
aad
mov
jmp
lock
add
cli
add
call
adc
into
lret
shl
in
ror
mov
int
add
out
clc
rorb
ljmp
enter
out
xlat
fnsave
test
repnz
push
cli
push
ret
in
in
repz
icebp
imul
in
mov
cmc
cli
sar
fcmovne
aad
or
fucomp
out
fisttpll
loope
jmp
mov
mov
int3
fidivl
cli
loopne
push
push
clc
roll
or
cld
std
loop
in
ret
repnz
loope
mov
rcl
add
mov
sar
cld
sysret
fildl
out
in
xlat
enter
lods
sti
enter
ror
in
int3
fld1
lock
mul
or
fsub
int3
out
shl
mov
leave
clc
fsub
in
into
icebp
fidivrs
repnz
aam
jmp
mov
ror
leave
in
shll
call
repnz
mov
loope
add
int
std
ljmp
out
call
fmul
ret
mul
cmc
or
out
out
or
lods
xlat
icebp
leave
out
repz
mov
mov
cld
fadds
fdivr
rolb
cmc
cld
in
lret
out
int
jecxz
cli
fcmove
hlt
out
enter
jecxz
mov
stc
add
fsubp
or
out
icebp
mov
fucom
shll
cli
into
fscale
fistpll
loop
jmp
or
add
not
ret
xlat
in
out
rolb
fistpll
pop
in
or
clc
jecxz
into
add
call
out
call
mov
loop
sti
cmc
enter
call
loope
mov
lods
in
into
test
fdiv
shlb
fisttpll
fdivr
add
or
ljmp
fcmovu
sarb
fdiv
stc
filds
adc
les
repnz
fdivr
cli
cli
sti
icebp
jecxz
shl
shr
hlt
lret
mov
int3
test
out
std
enter
in
loop
jecxz
bswap
fxch
out
fidivs
call
lock
in
out
loope
fcmovbe
in
loopne
aam
loope
aad
add
fsubrl
aam
mov
std
mov
cld
cmc
fcmovu
pop
or
fsubrs
shlb
fsubr
std
jecxz
rcl
loop
mov
lds
mov
mul
jmp
mov
div
mov
pop
add
ret
add
shll
cli
fisubrl
mov
in
loope
loope
add
in
sar
add
fidivs
in
loopne
leave
call
mov
cld
or
cmc
iret
leave
std
fimuls
adc
in
call
rcr
add
add
add
fucomp
add
int3
repnz
jmp
in
out
mov
shr
jmp
iret
cli
mov
add
add
add
jmp
std
or
mov
int
fabs
fucomi
mov
call
rcl
jmp
fldl
fmull
repz
lods
out
jecxz
rep
leave
mov
repz
mov
jecxz
ljmp
mov
in
mov
jmp
mov
icebp
icebp
ret
in
sarb
or
lret
mov
cli
in
out
mov
leave
sarb
add
sti
out
in
or
in
fnsave
mov
shl
mov
pop
out
rol
add
pop
leave
loop
stc
lret
lods
mov
ror
mov
in
mov
mov
xlat
bsr
in
or
cld
int
ljmp
fsubr
call
stc
add
xlat
out
not
fmuls
enter
repz
lock
mov
call
fdivp
add
testl
lds
mov
aad
lret
mov
aad
std
ret
ljmp
jecxz
lods
mov
mov
call
ret
rolb
call
or
in
lret
int
idiv
mov
hlt
mov
mov
jmp
cli
adc
loope
icebp
scas
in
lock
mov
sarl
aad
mov
cli
movb
fmul
lret
out
test
shll
loopne
leave
shlb
xlat
iret
fdivr
lock
jmp
fsubp
jecxz
jmp
int3
jecxz
mov
mov
cld
aad
shl
push
cmc
inc
cld
decl
or
mov
shl
mov
mov
fnstsw
icebp
icebp
add
sarl
lret
cmpsl
in
in
hlt
aam
out
mov
aam
cld
mov
aam
decb
or
or
add
shrl
out
aad
sti
cmc
hlt
add
roll
fxch
add
add
int
ror
shl
mov
int3
ljmp
out
fdivp
std
in
or
lret
fdivrl
aam
lret
not
lock
shl
aad
in
fcmovnu
ljmp
in
mov
aad
fdiv
call
hlt
mov
out
add
std
jecxz
fsubrp
push
or
ret
iret
rol
lods
out
loopne
rcr
shl
stc
add
out
clc
frndint
add
mov
enter
call
out
rol
mov
mov
jecxz
mov
loop
stc
lret
xlat
or
or
stc
lock
lock
shl
sar
out
jmp
repnz
lret
shl
int3
add
neg
add
loopne
cmpsl
in
scas
call
xlat
mov
lret
rcr
out
clc
lock
rolb
loope
add
in
mov
in
int3
loopne
mov
call
mov
hlt
add
fcmovne
or
lret
in
ror
divl
mov
jecxz
cmc
jmp
lds
or
jmp
out
jmp
stc
mov
fdivr
rcr
cmc
shl
or
in
out
fisttpll
lret
fucom
jmp
loopne
hlt
jmp
hlt
sti
aad
not
add
icebp
add
lds
stos
loopne
loope
mov
lret
hlt
xlat
repnz
aad
clc
add
out
mov
lods
xlat
scas
out
mov
repnz
stc
cli
imul
cld
ret
sar
inc
in
aam
leave
fcmovnu
std
ror
ret
loope
mov
cmc
scas
icebp
cld
add
ret
fdivrl
fadd
enter
in
stos
loop
div
aad
cmc
aad
repz
call
cli
mov
add
call
fstp
in
out
lret
mov
lock
mov
shl
cld
add
pop
std
push
loop
call
lret
scas
loope
iret
cmc
loop
mov
fcmove
fidivl
loope
aad
shl
mov
jmp
fldln2
int
les
xlat
jmp
out
mov
loope
xlat
jmp
cld
std
fsubs
out
ret
mov
jmp
fcmovu
shl
leave
in
add
int3
mov
mov
lret
cli
xlat
mov
add
sti
ret
fdivr
repnz
jmp
iret
int3
mov
ret
lret
lret
into
mov
fdivr
loope
lret
enter
call
test
aad
shlb
call
mov
mov
enter
or
mov
loop
leave
out
repz
jmp
aad
add
aad
add
push
out
in
jmp
iret
int
ror
imul
fcmovbe
fdivp
stc
roll
cli
or
or
lret
mov
mov
in
in
in
fcomip
loop
int
ret
std
lret
rorb
or
repz
in
ljmp
leave
mov
aad
shl
fadd
sti
les
loope
jecxz
mov
scas
loope
in
enter
aad
sti
push
stc
xlat
in
out
fsubr
push
out
shlb
fcomp
sar
neg
mov
fdivp
shl
incl
fisubrl
fsubr
repnz
ljmp
int
out
add
leave
or
fucomip
out
int3
mov
jecxz
shl
out
mul
mov
into
icebp
loope
cld
repz
or
or
add
ud1
ret
out
aad
mov
cld
add
mov
add
sar
call
out
int3
mov
iret
les
jecxz
xlat
mov
add
hlt
out
call
rol
mov
lods
fstp
mov
add
icebp
icebp
add
out
pop
jmp
rcl
sarb
lret
std
lock
ret
mov
fsubrp
or
test
ret
rcl
leave
in
mov
out
cmc
fsub
loopne
add
adc
fucomp
ljmp
hlt
shl
lock
ror
mov
iret
cmc
shl
clc
pop
decl
add
fld
mov
out
out
jecxz
ljmp
call
std
aad
rcl
fildl
loop
sti
fld
int3
int3
ljmp
aad
fcmove
loopne
add
out
in
sti
cli
add
loopne
mov
lods
out
not
shl
int
repz
cli
loopne
imul
stc
ret
test
out
adc
lret
loop
shr
ljmp
aam
out
xlat
add
in
pop
vcmpnlesd
out
mov
lret
rcr
lock
aam
clc
ret
mov
add
fcomi
or
enter
rcl
hlt
leave
out
les
iret
fcmovb
repnz
cli
fildl
or
shr
ror
out
sti
sti
aad
in
mov
loop
cmc
repnz
loop
add
in
or
cld
mov
loopne
mov
sti
mov
xlat
repz
loop
lds
cld
aam
fcomp
lret
shlb
aad
lret
rcr
out
out
ret
sti
add
out
hlt
push
cld
fdivrs
rcr
shl
repz
fcmovu
faddl
loope
in
add
lret
repz
cmpsb
ror
ror
iret
lock
clc
mov
rcl
in
or
in
in
in
std
iret
out
fisubs
shll
int
fyl2xp1
cmc
mov
mov
ljmp
xlat
mov
loopne
icebp
in
ffree
icebp
inc
loope
aam
fcos
ljmp
call
call
call
add
repz
aad
cli
loop
in
ljmp
shrb
repz
aam
repnz
aad
out
add
or
fcmovnb
cld
fucom
lods
scas
lret
in
call
mov
std
ret
out
idiv
pop
lret
lock
jmp
ret
out
into
in
jmp
mov
call
mov
sarb
or
or
iret
jmp
repnz
repnz
mov
mov
lock
lret
in
into
ljmp
lret
mov
mov
incl
add
add
hlt
jmp
xlat
loop
mov
loope
ljmp
out
ret
int3
fcom
ljmp
out
enter
lret
mov
repnz
mov
icebp
fmull
clc
in
ljmp
aam
in
mov
mov
jecxz
mov
or
push
enter
rcl
aad
shl
in
mov
fcomp
sti
fst
idiv
bnd
lock
add
fmuls
cli
ror
mov
mov
in
mov
repz
mov
or
jmp
fucomip
fcmovbe
out
in
leave
mov
jmp
fcmovnbe
fcomi
rcr
add
push
sti
cmc
or
pop
dec
out
loopne
stc
stos
mov
lret
enter
clc
stc
aad
repz
fcomi
aam
cli
cli
ret
shl
xlat
jmp
call
mov
aam
rcl
into
hlt
add
rcl
push
add
add
cld
out
or
shl
in
lds
out
mov
fadd
mov
ret
repz
fcmovnu
fdivr
out
jmp
lret
rol
into
scas
cli
in
in
cld
std
neg
add
rcl
rol
lret
out
int
cmpsb
lods
movsb
in
out
mov
scas
jmp
not
aad
fstpt
shr
stc
call
push
int
lock
ret
leave
ror
icebp
xlat
sarb
loop
add
movb
fcmovne
fsubr
psubq
add
sarb
lret
call
xlat
out
roll
aam
fucom
jmp
add
fsub
out
cld
in
mov
lret
mov
mov
jecxz
loopne
shl
or
hlt
hlt
push
int
shr
scas
in
in
out
fst
loope
out
out
fnsetpm(287
shl
std
aam
loop
test
movl
or
icebp
jecxz
shll
mov
hlt
int3
incl
testl
enter
mov
into
ret
int
clc
fcomi
out
fidivl
stc
loop
lock
add
call
test
leave
out
mov
call
neg
fnstsw
in
or
rol
jmp
icebp
lods
lret
ror
ret
enter
not
int3
out
ret
add
jmp
loopne
sti
fbstp
repz
mov
mov
clc
sti
les
repz
add
call
shl
enter
mov
mov
xlat
add
repnz
ret
fcmovu
mov
aad
out
out
fsub
into
mov
aam
out
fcomip
shr
int
loopne
add
clc
rcl
clc
ret
add
add
or
add
mov
not
jmp
shr
out
repz
rcl
add
fdivrp
out
ljmp
shr
divl
lret
cmc
out
into
ret
stc
mov
or
pop
out
shrb
in
shll
repnz
add
add
aam
in
neg
out
int
push
mov
out
fstpt
sti
out
ret
fcmovnu
mov
lret
bswap
stc
stos
mov
rol
lret
vcvtpd2dq
jmp
jmp
fmul
in
rcr
or
imul
add
enter
in
repz
sar
divb
out
sar
shl
std
loope
enter
out
hlt
ljmp
mov
add
out
jmp
add
add
or
cli
test
lret
fcomip
mov
fiadds
add
mov
dec
or
enter
mov
loope
xlat
in
leave
in
lret
loopne
out
testb
push
ljmp
scas
neg
loop
ror
repz
mov
in
sar
add
rorl
loop
add
int3
scas
mov
out
loope
shll
ret
div
sti
clc
hlt
mov
incb
loopne
shlb
aad
in
int
std
call
lock
xlat
lock
out
fnsetpm(287
loope
or
repz
test
cmc
leave
jmp
jecxz
fnstcw
jmp
jecxz
push
fchs
enter
in
repz
jmp
test
sarl
in
aam
fdivrp
fldpi
jmp
mov
aam
clc
fucom
cld
jmp
faddp
add
icebp
loopne
fisttps
iret
out
or
ret
out
lods
test
mov
xlat
fmul
iret
mov
clc
jmp
add
pop
in
add
adc
leave
jmp
scas
shl
in
scas
mov
leave
fdiv
fucomp
rol
push
sti
lret
hlt
ljmp
in
icebp
mov
lock
ret
fldln2
rcl
push
cmc
bswap
cli
out
fsubr
mov
mov
loopne
in
lock
add
fcomip
add
ret
push
loop
jmp
add
loopne
mov
xlat
test
lock
cli
imul
jecxz
icebp
loopne
jmp
add
enter
mov
cmc
into
icebp
in
fbstp
lret
out
pop
push
stc
stc
cld
idivl
stc
or
out
lods
call
out
lock
stc
sar
incb
hlt
out
loop
cli
in
iret
adc
fmul
mov
lret
clc
out
mov
lock
test
jmp
int3
loopne
icebp
icebp
enter
mov
icebp
mov
add
out
ljmp
mov
cli
leave
mov
repz
rcl
mov
or
in
test
ror
in
call
into
clc
call
aam
aam
loope
in
stc
cli
fisubl
shll
in
sti
leave
jmp
mov
loopne
push
out
sti
add
out
int
call
int
repnz
fcomip
fcmovb
std
cli
out
loope
fiadds
or
mul
aad
leave
xlat
neg
xlat
lock
aam
clc
xlat
mov
mul
ljmp
out
mov
ror
repnz
ljmp
ror
out
call
or
add
out
mov
loopne
mov
in
out
out
cld
iret
loop
pop
jmp
cld
sar
ljmp
mov
ror
loopne
aam
call
jmp
shl
shl
or
push
into
int3
fcmovb
mov
iret
out
in
fstpt
cld
xlat
int3
cmc
aad
cld
flds
loop
fimull
shr
jmp
shl
mov
int3
lret
mov
sti
ljmp
loop
adc
enter
repz
enter
std
mov
ljmp
int3
out
repz
shrl
int
not
loopne
fldl
fcom
lret
leave
lret
add
add
or
stos
in
fstp
in
loope
lds
fcmovne
cld
out
fdivrp
repz
in
mov
mov
shl
shr
shl
mov
fcomp
aad
shl
add
call
into
ret
lret
fstpt
in
in
rcr
fchs
sar
add
out
fsubp
or
into
les
aad
ljmp
roll
sar
fmuls
leave
in
ljmp
shr
ljmp
std
rol
repnz
jmp
jmp
out
into
iret
int3
ljmp
fnstsw
add
test
iret
incb
int
fmulp
rcl
out
out
shl
not
std
mov
out
add
rolb
or
loop
jmp
lret
repz
imulb
mov
sti
mov
roll
or
loopne
fistl
add
iret
mov
in
lret
les
ret
add
pop
lret
or
stc
sti
iret
in
out
lret
rcl
aam
in
call
mov
fsub
ret
clc
fldl
or
sti
add
loope
int
ret
mov
mov
into
cli
enter
rcl
add
add
adc
int3
fnstsw
into
rcl
mov
shl
cli
fsub
mov
push
fisttps
shl
fmulp
or
out
ror
out
fcmove
fmul
mov
aam
jecxz
int
cli
lret
aad
std
div
fdivr
add
mov
out
mov
ror
in
int3
mov
inc
add
out
repz
jmp
fdiv
shrb
out
fsubr
int
lret
fcmovnbe
mov
lock
add
stc
cmc
or
out
leave
call
mov
shr
mov
lret
incl
cmc
ljmp
mov
mov
call
out
fmulp
cmc
pop
inc
push
stc
clc
push
lret
lmsw
std
mov
hlt
lret
std
in
sar
mov
rcr
call
fsub
leave
in
shrb
clc
mov
fdivr
out
loop
mov
jecxz
out
fdivp
rcr
aam
iret
call
leave
mov
loope
fdivr
in
mov
sti
loopne
aam
loop
leave
loopne
mov
int3
cmc
ffreep
call
mov
out
clc
lock
or
adc
loop
mov
out
hlt
aad
out
int
std
mov
cmc
xlat
add
rcr
out
xadd
fnsave
ljmp
cld
cli
aam
loope
aam
lock
hlt
add
add
decl
mov
ret
out
aam
lock
lock
imul
add
in
add
fadd
fsubr
lret
aad
in
jmp
aad
add
int
fadds
into
add
ret
rcr
std
pop
call
shrl
xlat
mov
neg
repz
repnz
mov
add
add
clc
jecxz
enter
int
xlat
sarb
fcomp
fcomi
hlt
roll
fnclex
lock
idivb
loop
fucomp
scas
repnz
rcr
add
into
in
sti
out
shl
in
cli
add
mov
loopne
mov
shr
jmp
mov
cld
cld
lock
mul
into
jmp
out
fdivrs
rol
shl
mov
call
fcom
pop
or
out
or
jecxz
por
shlb
stc
loopne
fdivrp
xlat
rol
or
add
mov
mov
cmc
mov
scas
mov
iret
mov
rcr
loop
hlt
mov
add
jecxz
or
int3
in
mov
shlb
out
stc
ror
in
add
roll
stc
or
add
fdivrp
leave
loope
scas
out
out
in
iret
ret
mov
hlt
icebp
stc
loop
call
enter
movsb
lods
shll
mov
mov
shr
loope
or
into
jmp
or
lods
lods
in
out
xlat
test
enter
std
add
in
in
out
clc
leave
out
in
ret
in
loope
in
mov
rcr
call
out
add
push
fucom
fnclex
call
in
fsubp
fadd
out
idiv
fcmovnbe
out
lret
fxch
xlat
add
test
lock
hlt
add
clc
or
iret
test
out
out
mov
cmc
fdivrs
fnstcw
add
fninit
jecxz
out
mov
int3
ret
shl
in
shl
jmp
iret
shl
stc
fcmovu
out
add
in
out
xlat
jecxz
lret
in
call
lock
cld
faddp
out
std
int3
add
leave
idiv
lret
lret
add
ret
scas
mov
in
mov
in
mov
add
jmp
push
out
out
shr
repz
lret
leave
xlat
in
fcmovnu
out
mov
stc
pop
fcmove
in
rcl
mov
cmc
mov
out
call
clc
mov
fdivr
std
jmp
ret
int
loope
out
mov
lret
in
call
shl
div
out
hlt
fildl
ret
or
mov
mov
out
out
lret
repz
icebp
ret
cmc
bswap
fmull
jmp
jmp
mov
fcomi
sar
mov
mov
fsubrp
cmc
push
cmc
or
lret
add
lock
loopne
ror
into
mov
call
fmulp
lock
sti
add
shr
ret
loop
lock
mov
out
idivl
lock
iret
lret
stos
repnz
loop
rcl
repnz
repnz
in
sti
loopne
add
mov
into
jecxz
mov
cmc
mov
in
repnz
cli
mov
in
rcr
or
jmp
jmp
lret
cmc
in
shl
mov
int
in
mov
fdiv
add
or
std
adc
lods
mov
leave
loop
aad
mov
fxch
fnstsw
ffree
icebp
hlt
mov
out
shll
int3
cmc
shll
mov
lds
loope
or
les
lret
mov
mov
out
incl
cld
mov
stc
div
lret
add
dec
mov
lods
rcl
fxch
div
mov
rcl
fneni(8087
shl
fdivr
add
fisttpll
in
mov
loope
hlt
out
shl
repz
out
cld
repnz
jmp
out
add
psllq
out
into
movsb
mov
call
jmp
cld
mov
lret
testl
call
mov
stc
test
cli
div
push
fld
aam
hlt
std
cld
clc
mov
in
repz
mov
add
clc
push
shl
cmc
hlt
fcmovnb
sti
ret
cli
jmp
test
icebp
aad
stos
out
sarb
clc
leave
roll
div
ffreep
lock
aad
or
int3
mov
mov
in
out
fcomip
rcl
neg
hlt
loope
add
pop
in
leave
or
push
rcr
call
out
jmp
hlt
mov
mul
rorb
sti
or
or
mov
hlt
xlat
fxch
mov
icebp
ror
mov
add
add
add
loop
ret
ljmp
rcr
fcmovnu
hlt
stc
aam
int
in
rol
cli
in
push
iret
add
lret
mov
icebp
out
mov
fnstsw
in
in
add
fsubr
or
mov
repz
out
repz
in
rcl
out
stc
int3
add
mov
out
in
in
out
mov
rcl
repnz
clc
mov
xlat
into
ret
out
fcmovnb
xlat
clc
ljmp
rcr
fcom
in
in
ret
mov
mov
or
fldl2e
call
add
sti
cmc
lock
mov
repz
pop
cli
cli
aam
lret
loope
adc
out
jmp
ror
lds
lret
aad
repz
loop
repnz
div
in
stc
mul
loope
adc
in
repnz
shll
clc
in
fdiv
fcomip
stc
cli
add
pop
jecxz
out
shr
fmull
lret
test
mov
test
rol
repnz
stc
in
hlt
cli
fcmove
aam
hlt
or
jecxz
leave
ror
mov
enter
std
jmp
ffree
cld
cld
add
in
jmp
mov
out
mov
dec
xlat
mov
in
out
loopne
hlt
lock
stc
add
or
or
lret
in
sti
ret
mov
out
shr
fcom
enter
lock
rcl
ftst
clc
push
loop
int3
out
test
mov
leave
ljmp
add
jmp
repnz
int3
shlb
mov
in
lret
lret
out
lock
or
ffreep
loop
add
fnsave
mov
mov
leave
xlat
leave
rcl
mov
fxam
loope
in
testb
adc
fsubl
sti
cmc
out
ljmp
cli
call
icebp
fdivr
hlt
stc
sar
or
mov
rol
fmulp
mov
fnstcw
fsub
rcl
ret
out
add
in
jmp
out
leave
jmp
in
jmp
mov
xlat
rcr
lock
call
jmp
repz
cmc
sarl
lock
sti
or
xlat
ljmp
test
shl
cli
shr
enter
jecxz
aam
mov
add
mov
or
loopne
mov
in
repnz
icebp
lret
hlt
xlat
lret
mov
sar
add
in
fcmovb
mov
mov
hlt
hlt
in
mov
mov
hlt
add
push
or
mov
mov
ror
aad
lods
add
fdivr
lock
fildl
rcr
shl
mov
out
repz
stc
out
aam
jecxz
not
add
rolb
aam
rorb
add
stos
shll
int
repnz
repz
mov
add
femms
jecxz
fucomp
add
fnstsw
lret
hlt
icebp
clc
idiv
aad
add
call
int
lock
lret
mov
cmc
lock
aam
sti
loope
mov
call
leave
lods
out
icebp
int3
in
repnz
std
mov
loop
mul
paddusw
scas
repnz
mov
fcmovbe
int
cmc
cmc
cli
std
repz
loopne
shl
or
clc
jecxz
les
iret
ret
mov
sar
fcom
in
test
shr
push
pop
fsubp
leave
sti
std
add
add
test
lret
mov
cli
iret
add
cli
in
clc
xlat
fldpi
iret
loop
or
jmp
in
rcr
mov
mov
mov
in
repz
icebp
add
in
add
mov
imulb
int3
ljmp
fistpll
icebp
sti
fdivrp
in
jecxz
enter
mov
out
stc
fxam
aad
dec
int3
not
fadds
shl
shl
lret
lret
enter
fadd
shr
rcl
leave
hlt
int3
mov
mov
call
lock
int3
cli
loopne
clc
in
or
int3
in
lret
iret
jmp
lret
rcl
cmc
repz
mov
fsubrp
clc
fiaddl
fsubrp
scas
mov
into
cmc
rcr
enter
repz
shl
push
out
or
clc
fmul
loopne
iret
mov
iret
xlat
mov
mov
xlat
out
clc
std
shl
add
fsub
shlb
repnz
mov
out
lret
mov
iret
loopne
int3
test
lret
add
repnz
shl
iret
mov
fcmovbe
cmc
jmp
lock
ret
loop
out
into
or
out
add
lods
in
mov
mov
aam
jmp
imul
mov
out
std
loopne
in
out
int3
pop
jmp
iret
iret
loope
int
shl
ljmp
mov
add
rorb
fcomp
icebp
rcl
mov
shl
xlat
mov
incl
repnz
out
incb
ret
stc
out
add
int
mul
sti
enter
repz
fldl2e
repnz
ret
icebp
icebp
faddp
out
prefetchw
or
mul
jmp
mov
sarl
ljmp
or
mov
mov
jmp
int3
int
push
sti
in
or
out
leave
out
call
in
idivl
aad
shlb
sti
out
push
jecxz
stc
stc
les
mov
not
mov
cli
repz
mov
int3
in
mov
lret
roll
fcos
call
mov
mov
mov
int
stc
fdivrs
div
idiv
sti
rolb
rol
in
fisttps
mov
call
fcmovne
rcl
ljmp
rcl
fstp
ret
rcr
movl
leave
out
mov
repnz
rcr
aad
mov
fsubr
add
or
xlat
or
in
mov
ljmp
int3
fucomp
in
sar
idivl
or
fildl
loope
cli
ret
jecxz
out
aam
call
not
xlat
repz
cld
rcr
mov
call
out
xlat
movsb
test
in
mov
cli
lods
repnz
fsub
mov
in
or
out
out
scas
call
mov
fdiv
iret
rcl
jmp
rcl
ret
cli
push
syscall
leave
rol
mov
mov
icebp
mov
mov
mov
loopne
not
in
out
ret
rcl
lods
mov
jmp
icebp
aad
lret
mov
ljmp
add
or
lret
int
mov
xor
mov
add
sub
inc
sbb
xor
xor
adc
xor
movl
mov
mov
addl
mov
subl
cltd
orl
sub
sbb
xor
subl
xor
mov
movl
mov
movl
mov
movl
mov
movl
mov
cmp
movl
jne
mov
mov
cmp
je
andl
mov
add
movl
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
xor
sub
sbb
xor
xor
xor
xor
jmp
adcl
ss
icebp
xchg
pop
jnp
stos
cwtl
jnp
stos
int
mov
stc
mov
in
mov
icebp
or
aam
add
fcomp
ror
hlt
jecxz
leave
repz
iret
clc
mov
stc
loope
jmp
mov
fcmove
fucomi
mov
mov
int
repz
inc
add
int
lock
out
cmc
loope
iret
mov
shl
shl
mov
mov
lock
add
fcmovnb
fptan
out
lock
ljmp
int3
jmp
xlat
push
out
neg
lock
sti
push
jecxz
or
mov
enter
int
fcomip
out
call
mov
vpaddusb
or
fld
mov
lret
rcl
ljmp
mov
call
cld
rcl
cmc
loope
repz
lock
rep
lock
mov
mov
cli
add
idiv
add
testb
cli
icebp
leave
ret
mov
jmp
jmp
mov
jmp
mov
rcr
in
iret
add
jecxz
out
out
ror
shl
into
sti
jecxz
leave
fst
shl
xlat
fisttpl
enter
or
xlat
out
loope
sarb
cli
mov
lock
xlat
jecxz
fisttpll
ret
or
lds
fsubr
mov
cmc
mov
aam
mov
std
into
out
shl
mov
loop
out
lret
int
loopne
shrl
leave
shl
shl
lret
mov
shl
out
test
out
call
fnsave
imul
iret
into
bnd
shl
imul
test
jmp
repz
cmpsl
shl
jmp
lret
in
mov
rcr
mov
jmp
push
out
loopne
aam
or
test
ljmp
repz
std
out
roll
sti
or
or
out
call
call
repnz
iret
lds
mov
add
or
out
or
shl
lret
fucom
mov
mov
out
add
mov
mov
in
or
rorl
loop
rol
in
out
int3
out
out
iret
jmp
neg
icebp
add
cmc
icebp
rorl
pop
std
ficoms
stos
mov
hlt
into
fidivl
mov
mov
cld
add
iret
cmc
add
jecxz
scas
mov
mov
out
call
hlt
repz
repz
repz
cmc
shl
iret
aad
out
icebp
fstp
out
jmp
aad
clc
clc
sar
leave
lret
lret
sti
hlt
sti
ret
sar
loopne
pop
in
loopne
in
ljmp
mov
add
loop
push
fadd
or
rol
clc
loop
or
mov
jmp
cli
icebp
mov
add
fistpll
sti
into
std
out
fsub
lret
xlat
mov
repnz
aam
out
in
sar
into
loope
ret
or
add
add
stc
enter
out
repnz
ret
mov
mov
out
dec
loopne
fsub
ffreep
stc
shr
test
test
mov
loop
mov
sar
fcmovb
fnstsw
add
ret
loope
lret
les
loope
into
jmp
repnz
stc
mov
fdivrs
add
movl
stc
loope
mov
stos
mov
out
jmp
cld
repnz
mov
lock
in
loop
enter
mov
lods
aad
into
scas
mov
fnstsw
ret
add
add
incb
out
rcr
out
mov
mov
fstpt
mov
fstp
pop
clc
psrlq
int3
out
mov
in
iret
sarb
in
jmp
add
or
fsub
add
lret
loopne
out
mov
mov
aad
push
cld
shl
enter
add
test
jmp
mov
mov
xlat
fucomp
mov
mov
or
enter
loopne
enter
mov
cmc
mov
mov
out
add
shl
les
ror
into
mov
fdivrs
fisttps
xlat
icebp
sarl
clc
add
fcomp
hlt
mov
ljmp
lret
lods
shl
lods
mov
aad
mov
lret
fxch
jecxz
out
loop
aam
fldln2
out
icebp
leave
cmc
mov
in
iret
mov
loop
jecxz
jmp
push
lret
into
loop
lods
lock
mov
sarb
aad
ret
loop
mov
loop
jmp
aad
shl
lret
aam
clc
fneni(8087
lret
roll
cld
fsub
iret
jmp
loop
in
shl
out
mov
sti
int
pop
add
loope
ffree
cli
add
adc
cmc
jmp
into
in
mov
fstp
filds
jmp
push
lret
psubsw
test
ret
icebp
lret
jmp
call
jecxz
or
fucomi
in
add
cli
shl
ljmp
rcl
repnz
int3
icebp
stc
mov
mov
aam
in
or
iret
ffreep
mov
out
out
rcr
mov
out
in
sti
push
aad
add
or
fimull
add
cld
repnz
divb
idivb
sti
div
std
jecxz
loope
cmc
rolb
loop
fildl
add
cmpsl
loop
iret
xlat
aam
sti
mov
lods
icebp
xlat
mov
mov
aam
sar
loopne
int
or
repnz
enter
mov
ror
fcom
add
aad
fld
mov
add
fdivrl
sar
idiv
not
int3
cli
cld
add
ret
jecxz
loope
jmp
fxch
lods
out
loopne
dec
in
mov
aad
ret
fsubp
mov
rorb
or
loopne
jmp
lock
shll
rcl
jmp
cmc
add
clc
aam
faddl
mov
mov
clc
cli
shl
divb
fiaddl
add
shl
in
std
fisttpl
ljmp
shl
cli
enter
fcmovbe
icebp
fldln2
stc
fdivp
pop
add
ljmp
test
in
into
out
lret
clc
out
mov
shl
fdiv
rcl
fcmovnbe
in
call
shl
mov
hlt
mov
lret
sar
mov
rcl
cli
in
repz
rol
ljmp
mov
out
cli
add
aam
testb
cli
hlt
or
add
in
not
lret
mov
repnz
shl
int
in
fincstp
clc
fldl2e
cmc
into
or
rcl
ror
lock
enter
lret
out
in
xlat
lret
loop
fidivrs
ljmp
mov
in
mov
in
fcmove
enter
add
repz
pop
aam
fmul
add
in
jmp
in
lret
in
in
repz
rol
add
out
mov
or
les
out
loopne
mov
test
mov
in
into
cmc
sar
aad
fdivs
repz
in
add
fmul
fsubr
repnz
aam
int
mov
iret
div
ret
jecxz
shl
in
in
loope
ret
in
scas
mov
in
ror
push
aam
repnz
sar
cli
icebp
loopne
std
add
in
call
lret
in
mov
repnz
xlat
add
clc
mov
std
rol
stc
leave
clc
call
scas
loope
loope
aad
cld
jecxz
add
fucom
cld
lret
loop
or
call
ror
cli
clc
fucomip
mov
fucom
add
std
out
shl
pop
shl
add
loopne
jmp
scas
jmp
repz
mov
add
jecxz
rol
imul
push
into
repz
ljmp
loopne
push
mov
call
repz
cmc
in
jmp
fst
or
or
out
out
repz
out
cli
ror
mov
aam
into
lock
shl
div
imul
cld
fmulp
jmp
shl
loopne
rcr
call
in
hlt
loop
or
pop
in
pop
push
fdivr
fcom
ljmp
shr
mov
ror
into
aad
jecxz
stc
add
cld
or
or
in
jmp
ror
mov
divl
lret
mov
std
fiadds
shl
cli
or
or
fisttpl
ret
cli
aam
sarb
add
clc
rcl
lock
add
out
pop
or
icebp
enter
out
mov
lret
cli
in
mov
repz
aam
add
fcmove
scas
shl
stos
sti
ljmp
mov
rcl
ret
std
add
or
lods
in
mov
rcl
cli
sar
ljmp
aad
rcr
stc
or
fxch
stos
scas
call
out
ljmp
rcr
fadd
call
or
loopne
int3
lock
in
mov
mov
not
add
icebp
mov
add
loop
adc
or
mov
mov
hlt
cmc
out
lret
std
in
cmc
sti
mov
stc
bswap
loop
decb
mov
fcomi
stc
loopne
not
mul
mov
xlat
xlat
loopne
mov
stc
or
add
out
in
int3
int3
int
aam
mov
mov
icebp
ret
sti
out
ror
cld
push
add
iret
std
or
test
mov
sarb
add
rcl
add
out
les
out
fstp
iret
loop
repz
ljmp
mov
loope
enter
or
icebp
jmp
call
out
in
into
int3
int3
in
stc
hlt
into
clc
mov
stc
cmc
out
rolb
ret
lret
add
std
xlat
add
out
or
fdivs
aam
lret
mov
aam
std
fdiv
int
fisttps
or
movb
pop
shr
mov
shr
repz
jmp
add
cld
fcomip
out
lock
add
hlt
lret
rcl
scas
hlt
cmc
lret
mov
enter
shl
jecxz
cmc
mov
out
fisttpll
out
or
sarl
call
mov
pop
mov
stc
pop
ret
decl
add
into
mov
repnz
in
icebp
ljmp
ret
add
repnz
or
push
in
leave
adc
mov
mov
mov
mov
mov
mov
mov
clc
jmp
xlat
les
repz
stos
mov
mov
hlt
mov
ret
pop
hlt
fprem1
cmc
rol
fdiv
in
add
jecxz
lods
mov
rcl
hlt
mov
mov
shl
in
loop
aad
fdivr
in
jmp
pmulhw
rol
ret
out
not
aam
xlat
mov
into
add
push
pop
xlat
loopne
or
out
jecxz
in
loope
jmp
ljmp
loopne
repnz
jmp
cli
mov
fsubp
mov
into
out
idiv
out
stc
cmc
fsubr
mov
hlt
neg
add
loop
cmc
loop
stc
enter
fmul
mov
mov
sar
mov
shr
ret
cmc
add
or
leave
fmuls
int
loop
ret
ljmp
mov
ret
add
push
aad
std
stc
filds
flds
loopne
out
int
vpaddq
mov
mov
hlt
fcmovnu
or
iret
add
add
enter
enter
mov
mov
ret
lock
loope
stc
fisttpll
incb
out
in
fucomi
icebp
mov
call
loop
roll
fcmove
lds
xlat
inc
loopne
sti
adc
fsubrl
cli
mov
scas
fcmove
into
jmp
fiaddl
aad
add
aam
fiaddl
fcmove
lret
shl
shr
iret
mov
mov
add
repnz
in
shl
dec
movntq
scas
mov
jmp
iret
call
cli
out
mov
test
lret
mov
lods
shl
hlt
stc
fdiv
ljmp
ret
rol
loopne
idiv
cli
push
mov
fucom
iret
sarl
int3
std
int
in
ffreep
rcr
jecxz
or
enter
or
fnstsw
shl
hlt
jmp
repnz
call
fcomi
movlps
mov
mov
out
int
hlt
in
neg
mov
clc
add
mov
ljmp
xlat
ret
ljmp
mov
push
fidivrl
hlt
repz
cmpsb
fndisi(8087
mov
in
rcr
testl
rol
jecxz
or
repz
imul
rol
fcmovnu
sti
clc
mov
in
loop
pop
out
fsubr
shr
jecxz
mov
icebp
aad
hlt
shr
mov
repnz
add
loopne
in
lret
or
in
ffree
rcl
mov
hlt
enter
hlt
mov
divl
icebp
add
in
or
out
iret
in
in
ror
out
rcl
jmp
ror
ror
loop
mov
call
add
ffreep
shr
mov
loopne
cli
xlat
dec
jmp
int
fadd
lock
ljmp
shl
fld
fcomi
aam
in
cli
int3
div
int3
loopne
hlt
cli
lret
or
mov
loope
mov
shl
mov
repnz
out
rcl
mov
lds
shr
icebp
out
scas
in
in
lret
shl
out
lret
loope
out
in
mul
or
testb
out
add
shlb
scas
fdivp
mov
cli
rol
jecxz
xlat
rolb
loope
or
sti
add
repnz
in
mov
out
add
cli
fptan
shl
pop
loopne
jecxz
or
loope
fadd
shrl
mov
fcmovb
std
lret
in
mov
cmc
cld
out
push
cld
or
ret
loope
leave
iret
in
loop
enter
mov
hlt
shl
lret
jmp
add
test
repnz
lret
out
lret
leave
repz
out
rcl
fdivr
mov
or
ljmp
icebp
shl
repz
in
sti
jmp
cmc
int3
add
jmp
add
out
int
fdiv
scas
loop
mov
fsubp
fstpt
in
shl
clc
or
not
jmp
iret
fdiv
mov
shl
shl
fmulp
lret
ljmp
rcl
ret
lret
cld
or
out
neg
mov
mov
out
fdivr
aad
lret
stc
mov
iret
into
add
ret
jmp
stc
mov
sti
mov
fsubr
fbstp
sti
xlat
iret
fildl
std
add
in
aam
enter
loopne
shll
ljmp
mov
add
add
push
in
or
mov
rcl
into
lock
call
enter
cli
clc
neg
jecxz
fmull
int
out
out
int3
in
loopne
loopne
out
loopne
fcmovnbe
mov
ret
add
cli
out
out
add
rol
cmc
jecxz
mov
int3
leave
pushl
test
loope
add
fmul
call
rol
into
shll
into
mov
in
sti
add
syscall
or
enter
mov
int3
mov
cli
fcmovnu
cmc
call
shl
hlt
ret
ret
sti
loope
rcr
test
mov
fstpt
xlat
fcomi
fdecstp
sar
add
jecxz
push
ffree
rcl
int3
repz
jmp
mov
mov
add
cld
clc
pop
add
push
call
ret
rcl
repz
mov
clc
fucom
fxch
out
cld
or
fcomp
or
in
ret
div
fmul
int
lret
repz
rol
mov
roll
aam
iret
or
loopne
icebp
scas
scas
fcmovnbe
xlat
aam
std
aad
call
idiv
call
fmull
mov
scas
jecxz
ljmp
clc
aam
int
sar
or
testb
std
aam
jmp
lods
shrl
call
in
add
ret
out
idiv
fcmovnbe
movl
or
ret
rcl
fdiv
shl
out
leave
cli
out
mov
std
cli
loopne
out
lret
add
fdivl
into
lock
jecxz
fidivrl
sti
sar
sti
hlt
out
or
scas
in
int3
ret
out
out
scas
jmp
mov
icebp
in
add
fcmovnbe
icebp
aam
loopne
out
jecxz
faddp
lret
not
hlt
icebp
lods
mov
mov
add
jecxz
div
rol
add
adc
loopne
lock
ret
rcr
int
fldl2t
mov
cld
lock
mov
pop
cld
fimull
aad
fcomip
iret
fmulp
shl
mov
hlt
into
ror
mov
lret
fadd
fsub
loope
jmp
in
cld
rol
out
hlt
shr
div
shl
fmul
jmp
add
std
clc
add
loopne
or
add
or
out
test
mov
mul
in
shr
out
mov
aad
shl
in
icebp
mov
int
out
cmpsl
in
jmp
repnz
ljmp
fnstcw
loope
mov
loop
fdivrp
in
add
ror
jecxz
in
repnz
aam
jecxz
into
push
jecxz
stc
lret
iret
leave
into
add
stos
stos
ret
mov
mov
mov
mov
fsubrp
stc
add
iret
clc
in
int3
cmpsl
lret
ret
iret
divl
aad
cmc
enter
repnz
fmul
fmul
or
jmp
int3
mov
mov
shrb
fidivs
jecxz
fucomi
hlt
in
loop
std
or
jmp
les
icebp
out
in
fldz
ljmp
std
stc
aad
testl
leave
mov
int3
idivb
aam
hlt
lret
ror
cmc
aam
fisttpl
call
fsubp
mov
lock
hlt
lock
clc
lret
hlt
fmul
pop
fcmovb
out
rolb
in
movsl
mov
ror
out
out
fdivp
in
rcl
pop
add
ret
fsubp
or
test
aad
mov
iret
leave
leave
fnsave
aad
loop
shl
fisttps
por
in
ror
out
mov
fcmovnbe
mov
rcr
add
out
mov
shl
neg
loopne
pop
bswap
fstp
out
imul
out
icebp
shl
cli
repnz
out
ret
mov
int
or
aad
out
or
ret
fdivp
jmp
rcl
int
in
std
not
repz
add
fstp
fcmovnb
xlat
hlt
pop
aam
out
into
lret
loopne
divl
leave
repnz
fsub
sti
loope
cmc
mov
shr
std
jecxz
filds
ror
mov
lds
repnz
call
ror
out
sti
test
std
rolb
aad
fdivr
or
in
mov
leave
mov
fsubr
fidivrs
fadds
test
add
std
jecxz
adc
rcl
repnz
aad
enter
xlat
in
in
hlt
mov
add
add
loop
xlat
aam
mov
shl
fcom
mov
in
in
shl
in
cmc
mov
mov
loopne
shlb
lods
clc
ljmp
les
ret
inc
iret
sti
jecxz
ljmp
iret
out
jmp
stc
sar
jmp
std
xlat
ret
jmp
cmc
rorb
or
or
fbstp
imul
mov
ljmp
std
fadds
add
pextrw
or
in
out
hlt
lret
out
aad
xlat
out
xlat
cli
mov
repz
in
fninit
xlat
or
in
in
mov
loop
mov
lret
sti
mov
mov
icebp
fsqrt
fsub
fucomip
std
call
fsubrp
out
scas
jmp
xlat
in
leave
stc
into
out
xlat
sarb
hlt
loop
push
out
out
call
rcl
into
mov
sar
fucomp
test
loop
int3
in
rol
add
leave
fmul
fcmovnb
fmulp
icebp
int3
int
aad
mov
icebp
aam
cmc
enter
rolb
std
out
stc
sti
repnz
jecxz
int3
aam
in
out
out
stc
lock
ret
into
cmc
cli
cmc
clc
sti
sti
call
jmp
shrd
fildll
iret
fcmovu
mov
sar
std
fdiv
clc
add
lret
test
jmp
idiv
shr
mov
idiv
add
mov
test
cmc
lret
mov
test
into
call
mov
out
inc
add
aam
in
call
icebp
jmp
shll
aam
shl
in
incl
xlat
add
clc
or
add
enter
out
ljmp
in
rcr
aad
test
fxch
stos
repz
jecxz
mov
hlt
mov
jmp
fstpt
test
out
add
or
lret
in
loope
out
test
mov
shr
cli
shl
repz
add
rcll
into
test
lret
cmc
ljmp
fdivs
in
mov
push
clc
jmp
out
lock
rcl
fsubp
jmp
neg
loop
not
add
add
cmc
loopne
icebp
call
fcmovnb
in
jmp
cli
in
xlat
loopne
loopne
mov
add
ret
lret
jmp
leave
shl
cli
repnz
fiaddl
repnz
int
idiv
shl
pop
xlat
std
enter
into
leave
lret
lds
lret
fdivrl
loopne
fiadds
or
aam
or
or
int3
in
fdivl
lds
out
aam
add
call
or
add
jmp
shl
call
clc
enter
icebp
rcr
std
add
or
fnsetpm(287
clc
out
loopne
loopne
leave
out
fcom
aad
aam
out
int3
aad
hlt
fucomip
hlt
push
ffree
out
fldl
icebp
lds
into
out
aam
neg
mul
fstp
loopne
add
add
hlt
ljmp
lock
hlt
ljmp
not
fldl
loop
not
add
pop
loope
lret
int3
iret
repz
hlt
rol
repnz
out
std
rcl
loopne
cld
add
fcmove
in
shl
mov
loop
mov
cld
fdivrs
cli
fcmovbe
or
or
or
lret
cli
lret
jmp
jecxz
sar
fdivp
into
into
icebp
lret
mov
rcl
xlat
fdivr
fucomip
call
mov
jmp
icebp
std
idiv
aad
ror
lock
add
hlt
out
stc
shl
int3
ror
xlat
xlat
aad
into
into
mov
add
fsubr
std
or
push
pop
ret
aam
ljmp
mov
iret
in
sti
fcmovnu
int3
call
sar
in
leave
loopne
out
std
in
mov
mov
out
mov
mov
loop
fsub
mov
call
mov
ret
mov
not
mov
loop
fcomip
sti
loop
mov
add
jmp
lret
shr
repnz
mov
repnz
ffree
hlt
std
fdiv
filds
flds
enter
iret
aam
les
mov
mov
aam
add
test
mov
lret
aam
repnz
mov
faddp
incb
cmc
in
loope
jmp
fstp
test
lock
in
fdiv
fdivr
add
loopne
loop
cli
loopne
fildl
ror
enter
into
lret
out
lock
fdiv
add
out
lock
sti
loope
fiadds
fnstsw
icebp
test
fdivl
rcr
ljmp
out
jmp
aam
int
in
mov
out
fidivrl
into
int3
fcomp
mov
movb
iret
repz
fmulp
jecxz
ror
rcr
out
hlt
fstpt
fscale
loope
in
hlt
loop
ret
rcr
sarl
mov
add
out
lret
aam
enter
in
mov
enter
mov
clc
clc
out
loop
roll
paddd
push
or
enter
out
out
mov
mov
mov
fsubp
cmc
out
add
inc
shl
lret
clc
pop
in
mov
mov
loope
push
hlt
shl
cli
out
jecxz
fucomip
sti
ret
rcr
aam
in
ljmp
jmp
mov
cld
mov
add
fildl
or
dec
mov
mov
clc
repnz
call
fdivr
in
loop
add
fmul
jmp
lret
enter
out
mov
out
mov
jmp
iret
leave
sti
cmc
faddp
repz
cli
imul
loop
leave
cld
call
ret
shrb
enter
cld
icebp
mov
clc
rcl
add
fst
jecxz
loop
in
mov
add
add
ret
add
decb
jmp
mov
in
in
mov
repnz
ljmp
loopne
dec
test
icebp
shl
call
out
clc
std
clc
aad
fcmovbe
mov
hlt
clc
fsubr
fiadds
or
xlat
mov
ljmp
aam
repnz
mov
add
add
or
fninit
out
in
movsl
mov
lret
mov
loope
mov
sti
loope
jmp
aam
cld
fnstsw
scas
out
mul
int3
fst
mov
add
repz
mov
add
lret
out
in
out
cmc
xlat
enter
enter
rcr
stc
std
sti
fdivrl
out
cli
into
pop
int3
in
lock
fidivl
lret
out
repnz
call
lret
leave
fsubrs
out
mov
lret
into
sar
fldlg2
mov
fcmovbe
mov
fsubp
leave
mov
ret
loopne
div
iret
rcl
lret
aam
hlt
fcmovnbe
jmp
push
in
lret
jmp
mov
in
fcmovnbe
mov
jmp
lock
ret
aam
std
call
loope
aam
aad
rol
hlt
repnz
out
aam
repnz
out
lret
lret
aam
int
mov
jmp
mov
out
out
fsubr
repz
fsubp
inc
sar
iret
fcmovnu
clc
lret
lods
enter
aad
mov
ret
fadd
cld
roll
pop
fchs
push
fildl
loopne
in
icebp
out
out
mov
fcomip
fcmovbe
jmp
loope
sti
fdivp
fdivr
loope
pinsrw
lds
icebp
in
fcom
mov
std
add
sti
mov
jmp
inc
add
add
call
lods
lret
fucomi
mov
icebp
repz
loopne
int
add
sti
fldl
add
jecxz
shlb
out
in
fistpll
int3
fdiv
jmp
int
enter
shll
shr
in
into
loop
lock
aad
lret
clc
lret
lds
lret
hlt
lret
lret
add
aam
lock
cld
or
add
les
mov
enter
cli
in
repz
cmc
shl
ljmp
repz
out
shl
lods
in
jmp
ror
mov
out
add
fndisi(8087
add
loopne
add
adc
mov
mov
out
fcompp
mov
add
add
ret
lret
fld
sarl
shl
in
repz
loopne
neg
in
fnstcw
lods
in
lret
jmp
loop
fcom
mov
aad
ret
int
cli
add
stc
add
loope
add
enter
shl
call
stc
clc
mov
std
xlat
ret
std
loope
stc
jmp
int
repnz
mov
sar
mov
rcr
fsub
aam
cli
dec
loop
mov
lret
out
leave
out
shl
int
into
iret
fcmovnbe
int
int
lret
cli
jecxz
out
sti
add
loopne
jecxz
hlt
shr
aad
mov
mov
leave
sti
mov
push
push
fmuls
loop
pinsrw
mov
loop
aam
lret
mov
mov
repz
fmuls
aam
add
add
ffree
out
xlat
repz
div
lock
mov
or
ror
push
in
in
in
mov
in
mov
add
hlt
ljmp
fstp
int
test
in
out
mov
icebp
clc
add
add
jecxz
mov
or
out
test
sti
mov
jmp
in
mov
rcl
shr
push
or
psubd
les
in
mov
lock
mov
clc
mov
fcmovne
jecxz
loope
out
shr
mov
repnz
leave
mov
in
fiadds
fadds
clc
mov
ljmp
in
mov
sti
stc
fadd
movl
lods
sarl
sti
aad
mov
loop
int3
loopne
fcom
loope
mov
sar
iret
fucomip
lock
int3
not
int
mov
mov
hlt
aam
in
push
add
jecxz
out
sti
out
fcmovne
call
stc
aad
pop
or
loope
or
loop
iret
jecxz
out
loopne
mov
mov
loopne
cli
aam
push
add
loope
int
scas
shr
ret
repz
iret
fcmovu
iret
fldl
ret
ret
fsubr
adc
ljmp
jmp
fldl2e
fcmovnb
xlat
int3
into
idiv
hlt
fucomip
incb
add
add
mov
jecxz
in
in
int
mov
shl
loope
add
lar
or
icebp
jmp
lds
out
fcmovnu
jmp
add
in
in
mov
in
int
push
cmpsl
ret
mov
shl
fidivs
into
int3
cmc
out
loopne
lret
cli
iret
loope
mov
mov
fcomi
icebp
xlat
mov
leave
push
loop
cld
shl
loope
hlt
pop
fyl2xp1
call
out
mov
cmc
mov
lock
stc
mov
out
testb
call
lods
lock
enter
lret
mov
ret
fstp
flds
push
fcomp
mov
loop
ret
aam
mov
std
cli
fucomip
aam
ret
mov
mov
clc
ret
jecxz
in
mov
aad
loop
lock
clc
movb
lock
loopne
repnz
lds
lods
mov
dec
rcl
shl
lock
loopne
in
out
lods
not
hlt
fnsetpm(287
mov
mov
mov
icebp
fst
cmc
repnz
lret
int
in
rol
shr
rcl
out
mov
sarl
out
not
fsubr
lret
ljmp
lods
cmc
idivb
mov
jecxz
enter
in
out
sar
fld
jmp
mov
repnz
ret
out
iret
mov
fdiv
mov
add
lock
out
or
push
shl
stos
out
loope
icebp
aad
sti
out
repz
enter
add
fstpt
add
fadd
fldl
add
mov
repnz
add
repz
jecxz
jmp
lret
jmp
mov
ret
test
mov
icebp
rcr
mov
mov
loope
jecxz
jmp
lret
out
lret
rcr
out
lret
in
jmp
shr
fldl
in
clc
lds
jecxz
jmp
or
movsb
loopne
lods
icebp
enter
repz
in
aam
mov
aad
mov
loop
loope
mov
stc
ror
fcomp
enter
push
cld
fsub
sti
shr
pop
in
decb
pushl
mov
loop
sar
std
jmp
rol
mov
or
push
iret
add
jmp
repnz
fsubrp
mov
repz
loop
lock
std
out
fcmovnu
or
mov
lret
not
int
aam
lock
add
fdivrl
aaa
inc
inc
add
dec
cld
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
sub
sbb
xor
xor
xor
xor
add
adc
mov
xor
add
adc
mov
mov
mov
mov
movl
movl
mov
mov
mov
mov
cmpl
jne
cmpl
jne
mov
mov
xor
sub
sbb
xor
xor
mov
xor
add
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
sub
sbb
xor
xor
xor
xor
add
adc
mov
mov
pop
leave
ret
push
mov
sub
subl
push
or
push
movl
or
movl
mov
xor
movl
add
mov
cmpl
movl
je
adc
mov
adcl
mov
movl
mov
decl
mov
sbbl
xor
adcl
add
mov
sub
mov
orl
xor
addl
add
adcl
mov
subl
mov
sbbl
xor
add
mov
movzbl
xor
mov
xor
add
movl
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
lea
mov
sub
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
sub
sbb
xor
sbb
mov
sub
sbbl
xor
movl
cmp
movl
je
mov
xor
add
cmp
movl
jne
movl
cmpl
je
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
movl
mov
orl
movsbl
cltd
xorl
sub
movl
sbb
xor
andl
xor
movl
mov
mov
movl
cmpl
movl
jne
movl
cmpl
movl
jne
adc
mov
and
mov
add
andl
xor
add
inc
mov
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xorl
add
mov
mov
cmp
je
mov
movl
mov
jmp
sbb
mov
adcl
xor
add
movl
mov
jmp
mov
sbb
mov
mov
andl
xor
add
mov
and
mov
mov
sbbl
mov
addl
xor
add
movl
cmp
movl
jne
adcl
mov
sbbl
xor
subl
add
movl
jmp
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
mov
mov
mov
mov
add
movl
add
movl
mov
mov
adcl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
xorl
imul
cmp
movl
jne
sbb
mov
sub
xor
movzbl
add
add
add
mov
xor
andl
add
andl
imul
movl
mov
movl
jmp
jmp
lea
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
add
dec
mov
jmp
mov
movl
mov
movl
mov
sub
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
mov
subl
xor
add
adcl
imul
movl
cmp
movl
je
mov
sbbl
xor
addl
add
mov
imul
addl
add
mov
mov
movl
mov
movl
jmp
jmp
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
dec
xor
adc
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
push
pushl
push
push
push
call
cmpl
jb
mov
xor
xorl
add
imul
movl
mov
movl
jmp
sub
mov
xorl
xor
xorl
add
movl
mov
jmp
sub
mov
xor
add
sbbl
mov
and
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
mov
jmp
in
xchg
sub
fs
jbe
jmp
je
popa
sbb
jnp
out
jnp
loopne
mov
out
lret
rcr
mov
mov
out
xlat
aad
ljmp
mov
test
fnstsw
mov
mov
in
loope
rol
sti
loope
add
loopne
or
jecxz
int3
mov
lret
repz
sti
out
int
iret
cld
into
int
call
lret
into
lods
call
stc
shl
fidivrs
ret
icebp
add
sar
jmp
out
lret
repnz
lods
jmp
mov
cli
xlat
add
mov
pop
add
out
rol
mov
out
mov
cli
push
loop
ffree
loope
sar
lock
cmc
fdivrp
loopne
cmpsb
out
loopne
icebp
call
lock
jmp
rcr
lret
in
enter
call
in
sar
jmp
fdiv
cmc
out
add
out
sti
or
stc
repz
movsl
jmp
mov
mov
fnstenv
in
add
lock
into
rcr
shl
test
mul
lock
out
in
stc
mov
mov
fdivr
fdivp
or
loope
lods
leave
jmp
int
leave
int
aad
mov
fucomi
clc
icebp
std
hlt
fadds
mov
hlt
pop
push
ret
rcr
movsb
rol
xlat
mov
mov
in
hlt
int
std
cmc
aam
sti
or
mov
scas
mov
scas
mov
ret
repz
out
cmc
fsubr
add
in
out
in
fmulp
loopne
iret
jmp
test
jmp
xlat
mov
int
hlt
shl
aam
paddsw
add
out
lock
loop
ret
mov
mov
mov
out
int
fidivrl
neg
add
or
push
fstp
mov
hlt
aad
lock
mov
idivb
rcr
fucomi
loop
add
rorl
enter
mov
icebp
aad
in
sti
push
fdivrl
ljmp
add
loopne
shr
fmul
shr
clc
lock
fdivrs
aam
rcl
loop
jecxz
push
in
out
mov
mov
mov
mov
fst
ret
add
or
jmp
stc
in
mov
mov
ror
shl
fdivp
sar
clc
std
out
idiv
lret
sar
fimull
leave
fsubp
push
or
in
out
lods
mov
in
shl
rcl
cmc
jecxz
ret
fcmovnbe
hlt
or
call
scas
shl
mov
jmp
mov
in
call
rcr
repz
sti
xlat
xlat
loop
stc
out
stos
ret
mov
mov
sti
int
lock
neg
xlat
aad
mov
or
out
rcl
lret
cmc
mov
call
mov
shl
fsubr
jecxz
shrl
rol
out
cmc
loopne
in
jmp
out
shl
lret
pop
add
add
rcr
stos
shl
loop
sti
loope
out
mov
hlt
mov
xlat
sti
jmp
jmp
std
fabs
add
shrl
int3
in
test
mov
filds
out
or
add
loopne
vcvtdq2pd
fcmovu
fmul
mov
aam
int3
add
hlt
std
add
fmulp
icebp
call
vpsubb
mov
aad
mov
mov
into
or
add
lret
mov
icebp
rcr
mov
int
clc
out
pop
sar
rorl
enter
jmp
int
loopne
sar
jmp
enter
inc
add
loop
ljmp
out
scas
mov
ror
ljmp
in
mov
loopne
push
lret
cld
incb
cli
faddp
test
mov
mov
aad
lret
inc
rcl
icebp
add
jmp
push
enter
lods
fsubrp
scas
stos
loop
mov
ljmp
in
pop
ret
out
in
loope
fnstenv
lods
rol
shr
hlt
cli
in
aad
enter
shl
fincstp
out
stc
bswap
loope
out
scas
lock
scas
repnz
fdivr
ljmp
xlat
icebp
ret
pop
or
fldl
out
jecxz
ret
lock
lods
dec
cli
mov
cld
clc
mov
aam
les
fadds
out
add
in
rol
scas
out
leave
in
cmc
in
lret
icebp
mov
add
ret
add
add
jmp
mov
int3
in
ret
sti
shr
ror
xlat
rcl
pop
ret
lret
loope
loopne
out
add
mov
sar
mov
int
fcmove
out
mov
cld
sti
mov
cld
in
pop
repz
in
repz
ftst
mov
cld
in
in
std
fsubp
push
lret
repz
shl
loope
ljmp
mov
std
xlat
aam
xlat
fimuls
push
aam
push
or
ret
mov
sti
lock
loop
add
jecxz
hlt
fsub
jecxz
loopne
jmp
icebp
mov
mov
vpand
pushl
int
ret
repnz
out
cld
fcmovnu
icebp
iret
into
rcr
ret
lret
int3
jmp
divl
idiv
lock
jmp
mov
int3
not
int
sar
in
sti
mov
fstp
fsin
cli
loopne
jmp
or
adc
jmp
lock
mov
ffreep
into
mov
in
mov
add
in
lds
int
test
into
aam
out
out
mov
sti
fcmovu
int
ret
add
call
jmp
ret
out
mov
jmp
mov
int3
sarb
cld
jecxz
fdivr
cld
fsubp
lret
lret
shlb
mov
repnz
jecxz
add
clc
lret
in
roll
in
lock
sti
fbstp
dec
add
add
lret
in
in
clc
pop
shll
sti
bnd
out
mov
mov
out
call
jmp
shl
fadd
rol
lock
fsin
mov
push
ljmp
int3
fistpll
in
lods
aam
in
cmc
std
mov
filds
add
rol
iret
lock
jmp
shl
aam
mov
int3
or
enter
loope
fmul
sarl
mov
vpminsw
ret
push
shl
pop
jmp
jmp
out
out
mov
mov
sarb
fdiv
repz
push
div
in
leave
testb
std
enter
int3
in
out
repnz
jmp
hlt
shl
idiv
repnz
jmp
fsubp
add
out
enter
fsub
fcmove
mov
aam
repz
loope
xlat
int3
out
add
jecxz
stc
por
call
loop
mov
mov
out
int3
lret
lock
rcr
cmc
lret
adc
shl
ror
mov
imul
in
fcmovne
mov
fcmovu
add
testb
loopne
stc
or
lock
int3
in
iret
enter
lret
fdivr
repz
add
not
in
add
into
adc
mov
mov
clc
in
cli
mov
in
jecxz
mov
leave
repz
shlb
jmp
call
mov
in
std
aad
iret
cli
iret
add
scas
enter
mov
hlt
add
add
sar
loope
or
add
iret
jmp
mov
call
in
cli
jmp
ret
add
neg
mov
rol
out
push
push
enter
out
into
int
enter
call
cmc
mov
out
add
sti
lret
fsubrp
jecxz
into
iret
stc
sti
les
neg
repz
add
in
lret
enter
cmpsl
scas
scas
ror
mov
test
ret
jmp
push
cmc
std
cld
aad
cli
lret
add
icebp
iret
mov
ret
mov
lret
fmulp
int
filds
ret
xlat
add
std
add
in
loope
test
out
mov
icebp
fucomip
fstpt
cld
or
fcmovnu
add
pop
repnz
fsub
ror
out
mov
cli
mov
cmc
mov
lret
movb
ror
mov
jmp
in
mov
loop
in
testb
mov
stc
out
or
mov
test
jmp
std
fcomi
add
fcom
loopne
ljmp
jecxz
sarl
lret
jmp
lock
pop
loope
out
fsts
lret
mov
jecxz
rcl
mov
ljmp
aad
fdivrl
jecxz
repnz
rcr
int
sar
lret
call
xlat
f2xm1
fneni(8087
rcl
push
leave
lock
test
mov
enter
hlt
cli
fdivr
mov
xlat
add
add
loope
lock
iret
int3
ror
sar
mov
out
loop
jecxz
fcomip
add
mov
shl
hlt
idivl
iret
cli
mov
add
jmp
std
loop
out
shl
shlb
jecxz
fcomp
pop
int3
std
push
hlt
add
iret
cmc
iret
in
push
in
shl
rcl
shl
fxch
mov
in
fmulp
cli
int3
cmc
stc
fdiv
mov
sti
in
in
loopne
lret
mov
loopne
hlt
cmc
mov
aad
stc
in
div
incl
or
in
in
int
jmp
into
int
mov
mov
cmc
fcmove
pop
xlat
cli
loop
out
bswap
mov
rcl
in
not
hlt
enter
repnz
cmc
fnstcw
jmp
mov
out
int3
stc
out
shl
mov
std
repz
icebp
jmp
call
lods
out
enter
in
cmc
enter
mov
mov
out
loope
push
hlt
clc
ret
loope
scas
iret
loope
aad
mov
sti
iret
clc
lret
fiadds
fsub
add
jmp
jecxz
or
mov
in
hlt
out
clc
rcl
in
fst
mov
xlat
fsqrt
out
or
push
fsubr
out
shlb
stc
stc
lock
cld
cmc
fucom
cmc
jecxz
jecxz
clc
loopne
pop
stc
loope
mov
loope
out
lock
leave
clc
fucomip
iret
cli
sti
lock
in
xlat
mov
std
jmp
mov
ret
lock
mov
mov
fstp
imul
fsub
lock
or
add
add
lods
loope
fucomip
fmul
dec
mov
cli
in
lret
or
pop
mov
loopne
mov
out
mov
mov
mov
ljmp
adc
stos
loopne
jmp
enter
clc
rcr
lock
out
movl
clc
out
dec
or
shr
ret
icebp
out
out
aam
mov
add
lret
in
iret
into
or
out
jecxz
out
jecxz
mov
stc
mov
icebp
loop
idivb
add
add
repnz
fldt
loope
std
repz
repnz
out
cld
inc
or
sarl
fdivs
lret
mov
jmp
in
out
mov
ret
mov
mov
fdivr
cld
lock
loopne
icebp
sar
pop
hlt
fsub
ret
ljmp
in
mov
add
fscale
int
mul
add
fcomi
lret
or
lret
into
out
int3
fmulp
shr
ljmp
mov
rol
lock
cli
lret
cmc
stc
push
ror
loope
out
lret
mov
hlt
mov
fcmovu
aam
fcomp
mov
neg
lar
ljmp
loopne
fsubr
out
sti
mov
roll
mov
add
loop
std
in
int
int
mov
mov
hlt
shl
aad
pop
aam
sti
loopne
into
rcl
mov
in
sti
repz
icebp
clc
mov
int3
aad
jecxz
add
or
enter
mov
in
mov
out
lret
call
aad
iret
rcl
mov
sti
cli
cmc
iret
int
jmp
shl
shr
leave
shr
mov
fistpll
fcmovu
incb
out
ljmp
loopne
out
test
iret
shlb
jecxz
fcomp
int
ljmp
fldl
mov
loopne
repz
out
fld
mov
xlat
int3
incb
in
cli
jmp
fcmovu
add
jecxz
repz
leave
fnop
lock
icebp
fdivp
cld
int
cli
mov
fdivr
jmp
in
mov
mov
lds
jmp
icebp
fcomip
ret
loop
out
add
iret
in
scas
out
cmc
fcmovnu
mov
ljmp
fmul
shl
testl
in
fldl2t
into
lock
lret
test
lret
stc
repnz
mov
cmc
fscale
clc
or
enter
mov
out
lret
out
mov
out
mov
cmc
hlt
test
in
loopne
mov
repnz
ljmp
cli
rolb
fdivr
or
add
enter
push
or
mov
movsl
in
mov
out
xlat
out
fdiv
std
mov
add
jecxz
in
rcr
icebp
fsubrp
jmp
in
loopne
test
in
out
int3
enter
jecxz
aad
aad
repnz
filds
add
stc
fucom
fcmovb
repnz
shr
shl
mov
ret
in
int3
divl
sar
movb
sti
idiv
cld
int
add
lock
sti
mov
repz
int3
stc
icebp
mov
shl
or
pmulhuw
out
push
call
aam
mov
icebp
mov
out
sar
clc
loope
loop
pop
pop
lret
shrb
shl
sar
mov
out
add
jmp
out
enter
int
repz
fldt
lock
aad
mov
rol
rcr
decb
enter
out
out
mov
rcl
add
or
cli
add
int3
in
in
repnz
ror
loopne
test
lret
fsubr
hlt
mov
in
add
iret
add
mov
repnz
out
lds
hlt
leave
jecxz
fsub
loope
loop
add
sti
paddsw
in
fildll
call
icebp
rolb
out
idiv
int
mov
loopne
push
or
adc
test
xlat
ror
jmp
cli
call
mov
in
testb
add
int
test
mov
mov
out
in
hlt
mov
incl
int
in
fadd
faddp
sti
cld
or
mov
out
loop
out
mov
sti
neg
ret
aam
cli
add
adc
push
fnsave
mov
stc
mov
cli
iret
ljmp
add
cmc
out
add
faddl
out
jmp
out
mov
mul
mov
out
mul
rcl
std
cld
cld
in
add
stc
std
jmp
shl
mov
mov
in
lret
add
sti
loope
jmp
in
std
cld
jecxz
add
shrb
cmc
into
lret
shlb
aad
repz
or
add
inc
xlat
jecxz
ret
ror
ror
mov
fld1
sti
lock
in
aad
xlat
sti
jecxz
add
fcmovnu
loop
scas
shrl
aad
mov
hlt
add
stc
out
loop
rolb
into
lret
or
loop
loopne
lret
sar
in
out
clc
mov
int
fcmovnbe
add
add
loopne
ret
idivb
mov
mov
incb
aam
or
out
pop
add
lret
rcl
mul
mov
scas
out
int3
ret
stc
sti
add
loope
stc
add
pop
int3
shrl
out
clc
enter
mov
mov
fiadds
jecxz
push
in
leave
push
stos
test
loope
shl
shr
into
call
test
lock
fucomip
clc
jmp
jecxz
out
out
sar
xlat
mov
fucom
rol
fld
mov
loopne
shr
rcr
int
icebp
sti
call
stc
xlat
icebp
mov
filds
stc
out
iret
into
fsubp
scas
stos
shr
in
mov
out
repnz
sti
rolb
jecxz
in
mov
rol
lds
mov
mov
fdiv
mov
in
sti
fstp
fimuls
int
clc
loop
scas
movsb
in
lock
shll
inc
cli
sti
mov
into
cmc
fucomp
loope
ret
mul
jmp
mov
in
int
sti
add
shl
loopne
out
pop
fisttpl
in
jecxz
leave
shrb
shl
repnz
leave
into
in
loop
aad
mov
fcos
add
sti
call
int
mov
icebp
jmp
cli
repz
ljmp
fcom
add
add
mov
lock
mov
filds
in
out
jmp
or
shrb
ret
rcl
repz
leave
in
call
rolb
sar
out
or
or
ljmp
mov
loope
mov
jmp
lock
icebp
add
sti
loope
fiaddl
shr
loopne
aam
leave
icebp
cmc
repnz
ljmp
stc
cli
cld
fucomi
idiv
or
or
stos
loope
lods
in
into
mov
mov
loop
std
repz
fninit
or
cmc
push
in
in
loopne
aad
mov
lods
int
repz
into
ror
int3
ror
loop
pop
std
in
fcmovu
jmp
iret
fbstp
lock
clc
stc
out
repnz
loope
std
in
jmp
loop
add
ret
out
mov
hlt
rcl
std
int
shl
hlt
ret
mov
lret
ljmp
mov
mov
add
push
out
fdivrp
hlt
pop
aad
ffreep
icebp
ffreep
ret
shll
xlat
mov
aam
mov
fdiv
add
out
or
jecxz
mov
out
mov
idivb
mov
in
ret
hlt
add
fcomi
add
fdivp
call
enter
int3
repz
ret
jmp
mov
icebp
mov
jmp
out
ljmp
imul
stos
mov
shl
mov
shr
clc
loopne
repz
add
inc
add
dec
enter
lods
shlb
fsubr
in
cmc
repnz
sti
out
jecxz
add
add
out
add
les
jmp
out
mov
add
add
out
add
adc
shll
out
fxch
jmp
shl
icebp
add
aam
fadd
mov
in
xlat
call
repnz
mov
aam
push
out
or
push
fnstsw
fisttps
ficoml
shrl
iret
cli
enter
fdiv
repz
cld
in
leave
or
jecxz
in
repnz
mov
fld
fchs
clc
loopne
out
std
dec
jecxz
bnd
mov
test
into
shl
ret
aad
mov
fdivr
call
cld
ljmp
mov
fcomi
mov
cmc
fcomi
enter
add
loopne
add
psllw
call
fdivrs
int3
mov
fdiv
fld1
movl
int
call
divb
les
neg
rcl
lret
shl
test
loopne
int
mov
fcomp
fdiv
push
not
push
ljmp
mov
out
lret
les
mov
in
icebp
lock
out
in
push
call
loopne
into
fcmovb
ljmp
mov
mov
idiv
std
add
jmp
iret
loopne
mov
ret
mov
loope
int
fdivr
out
out
fidivrs
mov
xlat
out
enter
mov
in
lret
out
scas
mov
mov
jmp
aam
or
fidivrs
cmc
enter
out
in
int3
shr
mov
or
ffree
into
add
mov
repz
iret
in
cmc
ljmp
add
in
xlat
aam
jmp
loop
into
mov
mov
not
in
mov
ret
loop
in
std
or
or
add
add
in
ror
out
mov
fnstcw
xlat
fadds
sti
shl
add
aam
ljmp
shl
leave
out
xlat
enter
clc
loopne
mov
add
or
in
mov
ret
test
in
cli
in
leave
aad
cld
out
fcmovbe
testb
lock
aad
or
add
repz
into
lret
dec
in
test
xlat
repz
hlt
call
out
stos
not
lods
leave
jmp
loopne
hlt
xlat
hlt
ret
out
in
fadd
leave
ror
shr
ret
loop
int
mov
out
rcl
std
in
loope
std
repnz
clc
aad
enter
loope
imul
ret
stos
ljmp
lret
hlt
neg
into
call
cld
out
std
lock
fsubr
lret
or
mov
enter
call
ret
cld
loopne
repz
shl
out
add
repnz
mov
icebp
mov
sti
xlat
cli
icebp
fiadds
clc
jmp
in
loopne
repnz
add
fiaddl
cmpsl
out
mov
aam
enter
sar
lret
leave
aam
call
add
jecxz
out
ljmp
mov
enter
iret
in
clc
test
or
push
jecxz
repz
int
mov
xlat
fldln2
xlat
loope
icebp
faddp
incl
or
add
ljmp
lods
xlat
mov
leave
ljmp
add
sar
fcomp
add
stc
push
mov
in
mov
iret
in
jmp
lock
aam
rcr
fcmovnbe
call
fst
repz
ret
fsub
div
std
mov
loope
push
clc
jecxz
add
jmp
jmp
in
lret
hlt
jmp
stc
add
repnz
mov
out
into
icebp
enter
fmul
mov
cli
in
in
hlt
out
loope
cmc
sar
vpaddw
lds
repnz
xlat
int
leave
call
fnsetpm(287
jmp
ljmp
rolb
or
clc
aam
lds
mov
loope
mov
fdiv
cmc
in
mov
icebp
sti
clc
add
add
flds
loop
in
shlb
jmp
jmp
shl
in
clc
sti
out
stc
cmc
or
rcr
shl
shr
call
mov
int3
cmc
add
mov
add
stc
les
jmp
fnstenv
mov
rcl
rcr
aam
fdiv
in
into
leave
enter
into
lods
ret
shll
fcom
mov
add
icebp
hlt
cld
lds
lret
inc
jmp
scas
in
shl
int
clc
enter
xlat
int3
bnd
add
out
push
enter
jmp
ret
lret
iret
lret
call
loop
fcmovnu
shl
add
or
out
out
rol
mov
hlt
sti
fcmovne
mov
in
add
loopne
xlat
aam
in
repnz
in
loop
in
in
jmp
out
sarb
iret
repz
aam
out
dec
repnz
mov
jmp
cmc
scas
jmp
fstpt
int3
ljmp
fmuls
pop
mov
jmp
shlb
fdivr
call
fcmovu
fld
fstp
call
fsubrl
stos
rcl
shlb
rcl
stc
stc
cld
xlat
aam
out
shr
enter
rcl
shl
mov
jecxz
ret
sti
add
fimull
fcmovnu
in
ret
scas
mov
aad
rol
mov
mov
into
int
rcr
fsub
mov
shl
enter
sti
iret
jmp
int
mov
loopne
mov
or
in
pushl
fucomi
mov
mov
mov
stc
idivl
incb
lock
aad
add
clc
out
mov
cmc
mov
mov
ror
ror
fcmovbe
int3
fsubrp
fiaddl
out
fmull
adc
lods
in
out
iret
in
aad
mov
jmp
fcmovnb
jecxz
in
add
cli
or
sti
ljmp
loope
out
lret
mov
in
mov
shl
int
shl
shr
add
loope
loopne
int
add
int
out
hlt
mov
in
in
enter
hlt
rolb
sar
movb
jmp
scas
mov
enter
sti
sar
mov
icebp
repnz
hlt
jecxz
int
fisttps
testl
jmp
lods
mov
mov
out
into
call
aad
std
in
loope
idiv
ret
sti
mov
pop
clc
enter
scas
xlat
ror
aam
jmp
in
lret
mov
ljmp
fldl
in
sarb
mov
aad
out
lock
out
add
add
stos
loope
hlt
lock
enter
iret
lret
mov
cli
shl
fstp
paddsw
repz
fstp
in
iret
ror
mov
mov
lock
aam
ret
repz
add
aam
add
fsubr
loope
xlat
aad
lock
in
test
sar
ljmp
leave
decb
mov
lret
fdiv
mov
idivl
in
fucom
movb
jecxz
ljmp
fbstp
out
mov
add
out
loopne
psubw
scas
mov
jmp
repz
into
fcomp
jmp
mov
into
in
jmp
sti
pop
call
add
out
out
call
mov
xlat
out
out
jecxz
test
aad
fucom
cmc
add
add
out
mov
out
call
into
cli
repz
mov
out
stc
fcos
neg
call
ljmp
out
mov
repnz
in
add
mov
int3
sti
shr
mov
jecxz
lods
rcl
aad
shl
jmp
fcmovb
mov
add
mov
add
loope
pmaxsw
test
stos
xlat
leave
ljmp
neg
in
stc
rcr
loope
out
in
aam
fscale
pop
scas
int3
jmp
out
lock
into
sarl
repnz
add
rcr
in
push
loope
or
jmp
cmc
repz
clc
into
mov
mov
repnz
movl
lret
fucomp
not
scas
lods
test
rolb
idiv
ffreep
int3
loope
sar
pop
or
in
iret
fxch
loop
shrb
lret
into
sti
repnz
ror
testb
push
icebp
lret
fsubrp
rcr
or
stos
jecxz
out
ror
cli
int
call
fcom
mov
aad
out
into
out
lods
mov
lods
fld
mov
sar
mov
fdivr
rolb
cli
int
or
mov
lret
mov
cmc
std
int
aam
mov
out
fldl
push
adc
jmp
enter
aad
jmp
shl
loop
ret
aam
add
add
psllq
int3
loope
int3
jecxz
lods
out
mov
jmp
fnstsw
hlt
ret
std
fiadds
ret
add
add
call
jmp
loop
mov
jmp
add
mov
loop
push
stc
enter
jecxz
mov
in
aam
clc
int3
fdivl
fsub
fyl2xp1
mov
ret
leave
pop
test
lret
stos
mov
sar
mov
mov
std
repnz
add
loope
or
add
or
test
rol
stos
jmp
out
aad
mov
aam
repz
std
sar
clc
fstp
clc
or
jecxz
into
mov
aad
fcom
clc
lret
test
mov
repz
rcl
decb
add
add
rcr
int3
ret
mov
lret
mov
incb
in
loopne
ljmp
fldpi
out
enter
not
lret
sti
xlat
lock
repnz
shl
out
adc
add
mov
int3
cmc
hlt
cli
in
ror
shr
fdiv
fdivrp
hlt
aam
out
fst
lret
shr
out
hlt
in
out
aam
icebp
repz
into
aam
add
add
or
fadd
in
mov
lret
mov
repz
into
fucom
cld
loop
out
add
fadd
stos
mov
icebp
mov
mov
test
fcmovu
fstp
jecxz
cld
loopne
fcmovbe
in
or
out
ljmp
jmp
xlat
rcr
hlt
fnop
mov
repz
leave
clc
or
ljmp
lret
ret
inc
stc
mov
fdiv
xlat
stc
mul
ret
psubsb
stc
add
scas
jecxz
out
loop
mov
icebp
jmp
fldl
add
add
leave
fadds
jmp
enter
scas
mov
repnz
jmp
leave
aam
jmp
loope
mul
or
out
adc
jecxz
mov
aam
mov
call
sti
add
jmp
lret
aam
fmuls
fidivrl
mov
in
cld
lock
fldl
movb
fcmovu
in
rol
into
iret
add
mov
imul
out
into
hlt
aad
mov
add
loopne
cmc
cmc
fiaddl
add
sti
fmull
scas
movsb
aad
mov
in
jmp
pushl
out
into
in
out
fcmovnu
clc
fcompp
fisttpll
out
lret
ret
in
call
fcmovnb
aam
iret
int3
enter
out
fdivp
out
fsub
or
out
ret
scas
out
stos
loop
mov
aam
rcl
call
add
testb
cld
jecxz
into
call
repz
test
mov
into
out
mov
jmp
add
std
or
jmp
in
out
cmc
icebp
enter
ror
fsubp
imul
loop
ret
out
cli
ficoml
test
mov
loopne
mov
call
in
add
or
lret
sti
cld
loop
mov
sar
mov
mov
stc
add
repnz
clc
testb
pop
out
lret
in
rol
loope
mov
lret
neg
ror
mov
faddl
cli
push
add
stc
fcomp
add
divb
repz
mov
mov
in
stc
out
cli
mov
lods
mov
mov
int3
rcl
into
in
clc
mov
fcomip
ljmp
filds
cld
mov
icebp
in
hlt
imul
aad
cli
fcom
mov
shl
enter
pop
adc
scas
iret
shl
out
lock
mov
mov
jmp
mov
lock
out
pop
mov
enter
scas
lret
repnz
stc
fcmove
int3
mov
rcl
add
clc
mov
leave
out
fxch
or
out
out
enter
iret
int3
jmp
fsubrp
fst
mov
rcr
int
neg
mov
leave
int
enter
in
mov
in
rcr
lock
call
fdivrs
pop
out
or
rol
xlat
in
loope
hlt
into
stc
in
loop
aam
lock
aad
ret
out
stc
adc
loop
aad
in
idiv
repnz
lock
iret
hlt
fiaddl
repnz
aam
sar
incl
enter
lret
out
mov
jecxz
loope
lock
into
repnz
fdivp
loop
lock
loope
std
out
clc
or
shl
fadd
mov
not
fdiv
neg
mov
shr
rol
add
add
call
out
mov
ret
mov
aam
not
add
sar
psubb
fsubr
repz
mov
shl
lock
iret
rol
in
loop
fsubp
clc
vpsubusb
enter
test
out
enter
loop
int
aam
fldpi
lock
add
or
push
scas
call
shlb
int
fld1
into
loope
mov
fsubrp
jecxz
ret
loope
out
add
mov
mov
xor
add
cmp
je
jmp
jmp
mov
mov
xor
add
cmp
je
mov
mov
movzwl
mov
jmp
push
scas
jp
bound
xor
jae
fimull
jnp
cwtl
jnp
mov
mov
in
mov
shr
int
int3
roll
std
or
out
ljmp
mov
rol
fptan
mov
cli
aam
lock
loop
xlat
push
add
mov
xlat
jmp
aam
mov
clc
out
fld
xlat
fmuls
enter
into
into
leave
mov
repz
leave
div
cli
mov
shr
in
in
pop
or
jmp
faddl
paddusb
shr
sar
loop
in
into
repz
int
iret
loope
mov
repnz
fcmovu
jmp
in
mov
jmp
aam
shll
add
mov
push
out
iret
out
fucomi
stos
jmp
shl
call
in
rol
std
add
icebp
fcmovu
fcmovb
aad
push
lret
lret
pextrw
fmul
shl
jmp
in
mov
add
loop
loope
ret
rorl
fstp
rol
out
scas
imul
cli
jmp
fmul
mov
jmp
ret
or
out
lret
fld
test
rol
leave
mov
scas
icebp
fnop
hlt
in
mov
les
fucom
add
ffree
fstl
loop
out
out
mov
mov
div
aam
enter
in
lock
enter
mov
out
shll
mov
lock
out
add
add
adc
shl
fstpt
fcmovnbe
stc
mov
add
in
aam
loopne
loopne
enter
ret
enter
rcl
divl
lock
out
repnz
into
or
shl
scas
imul
mov
lock
mov
repz
mov
or
add
fildl
loope
lret
loope
mov
jmp
mov
repz
cli
in
aad
lds
out
fcmovbe
jmp
leave
mov
fstpt
leave
icebp
mov
aam
call
cld
cld
add
loope
adc
call
in
shr
sarb
repz
push
enter
faddl
in
mov
loop
repnz
jmp
mov
clc
repnz
enter
in
add
iret
push
std
fsubp
int
mov
icebp
lret
stc
mov
fcmovb
mov
fcmovne
or
in
loop
loop
ljmp
in
call
cmc
incl
in
clc
lock
cld
decl
fcmovnu
loopne
out
lods
out
mov
fxch
mov
call
std
rcr
add
faddl
jmp
jmp
in
call
stc
lret
cli
repnz
mov
idivl
fcmovnu
fsts
adc
loopne
lret
imul
call
aad
in
into
add
repnz
hlt
ret
or
into
jmp
pop
stos
shr
repnz
lock
lret
sti
mov
add
fxch
ret
push
loope
ret
sti
loop
mov
in
shl
icebp
int
mov
out
stc
loop
loope
loopne
std
fld
or
fsubrl
lods
mov
aad
icebp
mov
fst
loopne
repz
fcmovbe
jmp
out
int
out
int
call
lret
lock
mov
cli
fcmovnbe
clc
ret
inc
leave
sti
stc
scas
divl
sti
mov
mov
add
loopne
jmp
enter
jmp
int3
aam
lods
mov
out
mov
imul
out
jecxz
sar
or
shl
jmp
add
xlat
imull
aam
test
int
cmc
xlat
mov
in
lret
shr
scas
out
mov
cli
rcr
iret
mov
stc
in
div
fmul
std
lret
pop
lret
sar
mov
mov
lret
lret
test
add
aam
shl
pop
into
ljmp
fucomi
out
mov
mov
add
jmp
mov
ljmp
fdivr
push
fst
iret
in
fildl
in
shl
cld
fimuls
in
iret
push
mov
mul
mov
mov
hlt
jecxz
rol
stc
or
or
std
fucomip
into
push
repnz
enter
iret
shr
mov
sarb
jecxz
push
in
in
int3
fildll
mov
test
out
int3
mov
in
aad
cld
roll
in
or
jmp
repnz
repnz
int3
aam
cli
fdivp
add
sti
add
call
in
ret
fadd
lret
into
stc
hlt
repz
fsubr
out
aad
repnz
hlt
flds
loop
lds
in
shrb
mov
sti
hlt
into
add
mov
lret
call
jecxz
xlat
int
mov
repz
hlt
jmp
repz
loope
les
icebp
loop
or
out
in
leave
out
out
in
fcmovnb
loop
les
fbstp
rol
test
hlt
add
iret
in
in
ret
leave
enter
out
shl
lret
enter
add
in
fmuls
bswap
icebp
out
call
call
cld
icebp
mov
call
fst
shl
aad
call
fdivrl
xlat
mov
lods
int
out
cld
ljmp
incl
mov
iret
xlat
ret
lret
int3
in
sarb
ret
cmc
aam
out
call
in
scas
in
in
mov
out
repz
mov
hlt
int
jecxz
stc
out
or
push
rorb
cmc
fcmovb
dec
mov
scas
shll
rcl
fidivrl
aam
aad
loope
ljmp
in
mov
mov
shl
mov
aam
in
mov
mov
fcos
jecxz
clc
or
or
cld
ljmp
mov
aad
repnz
hlt
mov
mov
ret
ljmp
repnz
jmp
mov
out
cli
mov
in
sti
call
icebp
jecxz
ret
jecxz
cli
stc
add
int
loopne
icebp
in
aad
std
hlt
add
mov
mov
idiv
enter
ret
jmp
lret
in
xlat
add
mov
aad
jecxz
push
psllq
stos
mov
fld1
mov
into
jecxz
stc
jmp
out
iret
add
int
not
test
out
lock
fucomp
fcomip
mov
flds
cld
sar
add
fucomi
out
enter
fucomp
int3
ror
aam
ror
mov
hlt
loope
hlt
out
rolb
mov
in
add
lret
bnd
in
mov
add
repz
shl
aam
loopne
call
out
imul
lret
faddp
cld
jmp
stc
ret
cmc
jecxz
aad
fld
cli
lret
or
fisttpll
int
out
shr
rcl
shl
icebp
sarl
shr
icebp
rcl
out
add
stc
or
lods
cmpsb
leave
lret
cmc
test
stc
fstpt
rcl
mov
out
clc
fcomp
out
in
fnstsw
loopne
dec
not
hlt
add
hlt
std
fucomi
sar
add
cli
shl
out
out
fildll
ret
mov
call
lret
repz
jecxz
fsincos
fcmovb
cli
mov
push
rol
mov
call
in
fnstenv
xlat
or
or
idiv
call
lock
cmc
repnz
in
idiv
stc
lret
into
add
ffreep
lret
sar
clc
out
add
ror
lret
mov
aad
mov
sarl
add
or
xlat
icebp
ljmp
int
sarb
repz
ror
or
std
pavgw
mov
out
mov
in
out
mov
hlt
sti
jecxz
fcomi
lret
jmp
int
out
mul
cmc
leave
lods
cli
jmp
neg
loop
call
int3
or
lock
ljmp
out
shl
leave
cli
shr
repz
cmc
aam
loop
in
or
repz
lods
jmp
mov
loope
out
add
lret
loop
cld
aam
out
cld
or
mov
sti
imul
int
mov
add
add
mov
lret
cli
add
std
lods
rol
loop
mov
rol
clc
fucomip
sti
fsubp
call
stc
jmp
in
loop
fdivs
mov
repnz
mov
mov
mov
in
or
enter
into
shl
aam
idivb
mov
into
xlat
repz
repnz
or
cli
or
jmp
in
mov
test
mov
xlat
call
loope
ret
sti
ret
in
ret
leave
rcr
shl
jecxz
repnz
shl
enter
mov
fdivrp
loop
or
lret
mov
mov
test
hlt
out
mov
cli
mov
out
lds
in
enter
std
push
out
icebp
leave
lret
repnz
in
jmp
enter
lock
int3
add
ret
push
push
fcmovu
call
loope
lret
mov
sti
rcl
std
shr
aam
cmc
int3
fisttps
add
out
mov
lret
lods
loopne
test
ljmp
repz
shl
fdivrp
out
cmc
jmp
in
icebp
enter
in
icebp
enter
jecxz
add
clc
faddl
div
out
fcomip
jecxz
call
rcl
mov
mov
mov
or
fscale
aad
or
ret
mov
loopne
int3
fmul
loope
in
lock
stc
std
iret
lds
loop
in
in
ret
shll
std
cmc
add
xlat
jmp
lock
neg
add
into
cmpsl
lock
in
in
mov
mov
lock
out
testb
xlat
in
mov
ljmp
mov
hlt
shlb
into
ror
loop
aam
push
ret
add
lock
in
jmp
out
mov
rcl
aam
mov
mov
add
loopne
out
add
iret
pop
fsub
repz
rcl
xlat
loope
in
mov
idivb
fiaddl
out
std
pop
enter
out
out
mov
mov
cmc
jmp
rcr
mov
rol
xlat
or
add
adc
jmp
out
in
icebp
cmc
shl
out
hlt
stc
xlat
stc
into
fxch
mov
loop
iret
decl
cmpsl
int
lods
call
mov
out
lret
shl
xlat
out
int
incl
fscale
fprem1
aad
fmul
mov
lods
xlat
ror
mov
mov
int3
repz
fcmovbe
or
leave
mov
pop
fstp
leave
loope
iret
lret
lock
ljmp
fabs
add
cld
add
enter
jecxz
enter
ret
mov
fstp
shl
pop
out
cld
in
ret
int3
lods
int
rol
mov
stc
repnz
lock
jmp
jmp
cmc
in
lret
lods
int
mov
out
not
sti
ror
jmp
lret
ffreep
fimull
sti
cli
shl
loopne
out
jmp
mov
lock
enter
add
push
fildl
in
or
loope
out
repz
lock
xlat
mov
int3
int3
fdiv
ret
enter
std
adc
shl
xlat
jmp
fdivrl
xlat
hlt
cld
ret
repz
hlt
mov
in
out
sti
aam
in
mov
lods
ret
sti
hlt
scas
lock
fiadds
test
push
repnz
out
fcmove
add
iret
out
mov
jmp
mov
icebp
mov
cmc
add
aam
int3
rcr
cmc
add
into
shl
jecxz
cli
aam
ffreep
shr
shr
rol
std
aam
fisttpl
fiadds
leave
fsubr
ret
shl
jmp
fadd
int
icebp
in
les
ffree
shl
enter
lods
shr
mov
test
fdiv
fmul
hlt
in
in
jmp
stc
in
fdivr
int3
clc
clc
shrl
ljmp
rcl
int3
mov
hlt
add
add
fiaddl
in
lods
test
idiv
imul
aad
lock
sti
cli
mov
std
or
les
flds
add
in
call
mov
add
rcl
stc
fadds
push
push
jmp
or
stos
mov
out
out
scas
div
into
shl
mov
loopne
mov
call
lret
jmp
sarb
jmp
aam
xlat
loop
stc
lock
or
out
fiaddl
neg
xlat
repz
ror
mov
push
int
add
cld
fadd
enter
fucom
lock
loope
into
mov
aam
mov
in
fstpt
rcr
or
lret
cmpsb
mul
divl
rcr
int
into
ret
add
in
repz
add
neg
push
leave
test
shr
leave
hlt
mul
lock
out
mov
pop
or
loop
or
lret
lret
mov
neg
cli
scas
in
ror
hlt
sti
repnz
loope
fimuls
adc
loope
out
jmp
mov
mov
mov
add
rcr
rcr
or
cmpsl
vpmullw
out
call
enter
clc
int3
sar
enter
iret
adc
leave
repnz
shlb
repnz
sar
in
lock
aad
shl
jmp
aam
jecxz
rcl
scas
rcl
ljmp
rcl
sarl
in
dec
fldl
call
int
fnstenv
std
enter
jecxz
mov
push
fucomip
call
jmp
sar
fcom
mov
repz
cld
mov
add
out
out
add
rol
in
in
jmp
aam
aad
out
fdivrl
shl
enter
iret
scas
loope
out
shr
icebp
shr
mov
repz
mov
out
add
fprem1
jecxz
std
ret
fxch
iret
into
mov
fcmovnb
mov
fdivr
mov
loop
aam
rol
jecxz
mov
out
add
add
ljmp
in
sti
aam
fucomp
mov
add
add
loopne
jmp
in
into
rcl
call
int
jmp
not
ret
pop
int
cld
out
icebp
int3
jmp
lret
int
mov
loop
add
out
leave
add
mov
repnz
loop
lret
clc
aad
aam
rolb
neg
mov
vcvtdq2pd
out
int3
test
ret
cli
in
stc
imul
clc
mov
ror
enter
mov
ljmp
shl
mov
lods
lods
out
rcr
in
repnz
jmp
loopne
aad
cmc
fimuls
cli
or
vpsrlq
stos
mov
out
lods
rcl
cli
lret
mov
shr
aam
add
xlat
jmp
in
movb
shl
in
call
in
mov
add
lock
rol
fcmovnb
add
add
iret
repz
mov
lods
rcl
enter
icebp
xlat
mov
shl
fcomi
rorb
ret
push
lret
clc
paddd
leave
mov
mov
out
int
int
fcom
neg
ret
ffree
fnop
mov
add
adc
out
enter
lods
cli
cli
iret
fldz
in
xlat
cmc
mov
in
add
mov
fsubr
jecxz
in
in
fdiv
jecxz
leave
int
in
iret
sti
fsubrp
sti
flds
rcl
fcmovu
hlt
fidivrl
call
in
les
in
mov
fdivrp
add
add
in
ljmp
mov
icebp
rcr
mov
clc
aam
shl
cli
loopne
mov
xlat
fsub
std
pop
cmpsl
call
aad
out
iret
fdiv
fsubr
lock
mov
add
add
add
loope
mov
test
mov
mov
mov
aad
in
rol
fiaddl
call
push
aam
out
lret
faddp
xlat
out
sti
shlb
in
lret
pop
lds
or
mov
fsubr
lods
into
mov
mov
fcom
rcr
fcmovnb
pop
fsubrp
fucomi
fadd
leave
in
fsubrl
out
leave
mul
out
in
fnstcw
idiv
rcr
jecxz
pop
lds
scas
loopne
lods
in
shr
mov
fdivrs
repnz
loopne
movb
clc
out
mov
lods
iret
jmp
repz
fnstsw
mov
add
lret
out
or
icebp
rol
ror
aad
icebp
mov
ret
mov
mov
mov
test
mov
enter
icebp
mov
cld
mov
add
out
fdivr
in
push
fsubp
shl
leave
loopne
divl
mov
fnstsw
hlt
in
push
or
out
loop
rol
loopne
lock
in
lret
hlt
rcl
pop
rol
ret
ffreep
add
or
test
loopne
leave
sti
out
int3
fdiv
enter
ret
clc
in
loope
add
cli
jmp
ljmp
hlt
icebp
clc
idiv
std
into
aam
mov
push
repnz
cld
aad
or
int3
fdivrl
into
mov
repnz
int
repz
pop
add
fcomip
pop
loope
loopne
fmulp
mov
shr
out
mov
shl
rorl
pop
mov
cld
lret
rol
into
leave
mov
mul
repz
shr
mov
jecxz
add
in
std
in
or
into
rcr
loope
aad
ret
mov
into
call
mov
hlt
ret
iret
int
enter
loope
into
jmp
fptan
repnz
mov
aad
jecxz
shl
shl
fmul
fxch
cmc
call
mov
jecxz
in
in
cmc
int
jmp
fucomip
mov
mov
ljmp
mov
mov
bnd
lret
lock
mov
int
repnz
loop
fld
cli
in
int3
in
leave
xlat
ret
out
repnz
mov
add
test
fcmovnu
rolb
add
int3
stos
lret
out
lock
mov
out
mov
fsub
jecxz
call
cld
jmp
lock
iret
out
mov
fcmovne
mov
in
shr
out
in
sti
in
loope
iret
fdiv
int3
cld
cld
stos
fmulp
scas
icebp
mov
mov
jmp
rcl
call
test
fcmovnbe
hlt
out
bswap
aam
or
mov
mov
sti
mov
mov
shl
loope
add
iret
fyl2xp1
cli
shr
mov
in
out
out
int3
lock
repz
sar
add
ret
fsub
call
mov
repz
sti
fucomp
into
int
stc
in
lds
add
out
fcmovnb
lret
out
fsubr
shll
fcomp
repnz
stc
cmc
xlat
fst
mov
std
loop
fldl
loop
loopne
aam
mov
fcomp
lock
add
or
aam
faddp
loope
ret
scas
mov
out
in
icebp
mov
clc
stc
fcmovb
shl
repnz
std
ljmp
les
mov
iret
div
rcl
aad
add
mov
sti
idiv
add
add
mov
out
lods
ror
mov
clc
mov
fmulp
jmp
jmp
icebp
in
repnz
call
leave
mov
iret
ret
jecxz
in
out
in
in
call
mov
lods
out
ljmp
in
out
add
sti
flds
in
call
fcmovu
fmul
mov
mov
clc
out
ror
lock
cld
rolb
add
or
add
ljmp
shl
enter
out
mov
sti
dec
add
shl
loopne
add
out
or
out
fsubr
mov
scas
cli
out
jmp
in
aam
fnstsw
add
not
jmp
push
jecxz
jmp
mov
out
lods
in
mov
sar
iret
ret
rol
call
fucomi
or
add
lret
in
sti
loop
rcr
mov
rcr
faddl
jecxz
cli
shl
cld
clc
fcomp
lret
out
jecxz
shr
mov
mov
rcr
clc
int3
mov
fcmovnb
rcr
repnz
dec
out
fucomp
sarl
iret
ret
mov
icebp
mov
std
rol
std
jmp
or
iret
mov
ljmp
xlat
mov
lds
add
add
std
loope
stc
or
mov
rol
lret
test
imul
add
loope
xlat
lret
vaddsubps
cld
jecxz
add
les
iret
repnz
fcom
sti
out
ljmp
rcr
lret
jecxz
fucomi
mov
cmc
lods
rcl
shl
sti
mov
fnstsw
fsubp
add
mov
push
or
loopne
repz
lret
fdivrs
shr
add
or
in
lret
stos
iret
scas
loopne
aad
div
enter
inc
loop
lock
loopne
dec
jmp
imul
mov
fcomi
enter
leave
aam
jecxz
rolb
add
leave
out
pmulhw
out
iret
mov
out
scas
in
sarl
cli
lret
mov
shl
loope
cmc
or
leave
ret
fmul
out
lret
into
mov
enter
roll
pop
jmp
into
into
enter
mov
in
ljmp
jecxz
lock
loop
out
mov
mov
in
neg
out
lret
mov
add
fsub
stc
sti
incb
cli
or
repnz
lret
mov
icebp
lret
fcomp
add
add
lret
or
call
in
int3
les
aam
lock
into
mov
jecxz
sarl
add
mov
iret
jmp
int3
lret
stc
call
incl
sti
fcmovnbe
loope
ret
add
out
add
sti
in
in
int
mov
in
loopne
out
push
sar
call
bsr
mov
in
mov
fcom
int
mov
ret
aad
jmp
out
leave
fsubrl
mov
mov
repz
aad
add
out
add
stc
mov
loop
clc
pop
loope
cld
out
out
in
shrl
jmp
fidivrl
fcmovnu
ror
test
iret
loopne
fdiv
fst
sti
mov
mov
aad
icebp
jmp
stc
in
loope
loope
jmp
mov
fcmovnu
or
lock
aad
lock
shr
fdivs
int3
fcomp
cmc
int3
int3
jecxz
hlt
mov
in
out
mov
lret
ljmp
les
in
out
loopne
jecxz
add
into
jecxz
icebp
shrb
mov
fcom
fmulp
jmp
mov
push
mov
lret
ret
ror
jecxz
mov
mov
lock
repz
xlat
sti
movl
mov
enter
in
fcmovbe
jmp
aam
ror
fcomp
fucomip
add
int3
call
mov
shlb
jmp
lock
rcr
cli
clc
jmp
in
jmp
mov
fsub
call
mov
in
sar
or
or
neg
or
out
out
into
loopne
div
out
mov
int3
out
loope
in
repz
jecxz
stc
shr
jmp
pop
std
shl
shrb
mov
jmp
mov
fmul
sysret
in
repz
mov
repnz
into
leave
mov
cli
icebp
stc
clc
add
add
cmc
shl
inc
out
scas
mov
xlat
mov
aad
shl
hlt
add
fld
stc
add
add
fadds
int
out
rep
mov
rcr
rol
fnop
jmp
fscale
mov
std
lret
add
std
adc
out
ljmp
stc
mov
mul
cli
clc
enter
mov
hlt
jmp
out
in
xlat
out
les
sar
jecxz
mov
loopne
jmp
into
push
in
loopne
mov
jecxz
jecxz
mov
repz
lret
shr
out
add
fstp
ret
call
filds
in
shr
jecxz
sti
in
mov
jecxz
ret
in
sarl
or
fmul
in
in
mov
scas
into
call
sar
std
lock
lret
loopne
mov
pmaddwd
hlt
pop
adc
mov
in
loop
out
leave
lret
ret
f2xm1
mov
aam
jmp
faddl
add
cld
fnstsw
not
ljmp
aam
loope
in
repnz
push
jmp
out
loopne
rcl
ret
out
cli
repz
lock
mov
ljmp
rol
or
or
fcmovne
jmp
mov
repnz
leave
clc
repz
cmc
roll
mov
mov
fisttpll
out
in
scas
jmp
dec
in
les
mov
loop
vpmaxub
iret
int
ror
icebp
enter
in
jecxz
add
fxtract
stc
add
add
cli
push
stc
out
fldl
ret
call
clc
mov
fistpll
repz
fstp
fmuls
ret
aam
loopne
in
shl
idivb
out
shr
mov
pop
add
cli
add
shr
shlb
rcr
fucomp
add
aam
aam
std
fndisi(8087
int3
leave
rcl
mov
shl
mov
in
mov
push
repnz
add
clc
or
lret
mov
mov
mov
aad
pop
push
cld
or
aam
or
mov
jmp
fnstsw
xlat
out
in
loop
cmc
ljmp
test
mov
mov
lock
enter
cli
add
rcr
mov
out
lret
add
iret
or
mov
lret
out
shr
out
fmul
into
mov
out
mov
add
lret
lods
lods
mov
icebp
jmp
into
jmp
mov
std
lock
leave
or
int3
mov
scas
loope
mov
jmp
xlat
mov
std
fstpt
cld
fsubr
in
ljmp
out
cmc
mov
ljmp
rcl
mov
or
add
enter
xlat
lret
lods
icebp
loopne
fcmovne
sar
mov
aam
jmp
or
repz
int
ror
fcmovu
mov
enter
fdiv
rcl
add
filds
sti
loope
fsubr
loope
mov
shll
mov
test
out
loop
fcmovnu
loopne
or
repz
mov
lret
lock
add
stc
add
add
mov
into
aam
mov
repz
mov
fucom
in
decb
mov
or
out
add
ret
out
out
in
into
mov
ror
fcomp
ret
out
int
idivb
aam
fsubrp
in
loope
mov
mov
stc
leave
icebp
loopne
icebp
pop
fucom
out
movl
sarl
jecxz
mov
loop
inc
leave
pop
fadds
decb
stos
repnz
jmp
clc
mov
jecxz
mov
aam
add
or
add
or
movsl
les
sarl
enter
fildl
loope
add
push
add
repz
pop
mov
call
int
leave
rcl
cld
mov
out
mul
jmp
mov
repnz
into
mov
std
fmulp
add
add
lock
test
enter
adc
enter
xlat
lods
mov
neg
fistpll
mov
out
fdivr
mul
fucomi
decl
push
adc
rcr
in
out
lock
sarb
int3
out
mov
sti
add
sti
or
repz
call
mov
sar
cli
mov
mov
enter
add
ror
jecxz
out
cmc
jmp
jecxz
scas
mov
shr
jmp
mov
aam
ret
sar
loop
add
pop
sti
jecxz
mov
out
shlb
mov
shll
cmc
push
filds
stc
sti
shl
icebp
faddp
icebp
leave
mov
mov
lods
in
call
repz
in
leave
aad
jecxz
loopne
loopne
out
les
cld
dec
rcr
int3
in
neg
add
jecxz
aam
enter
or
in
test
mov
fcomi
mov
loopne
int
repz
in
call
fstpt
into
sti
fcom
lock
lret
or
fsubrp
lods
mov
mov
icebp
ljmp
divl
add
mov
shl
mov
fcmovu
mov
lds
loop
mov
mov
shl
ljmp
int3
lret
mov
int
lret
std
add
mov
jecxz
jmp
cli
loop
fstp
lret
loop
aad
fxch
shll
loope
in
sar
ret
lret
add
into
mov
scas
out
sti
mov
jmp
mov
fmulp
fdiv
cmc
shl
in
incl
jecxz
or
out
iret
fdivl
in
clc
mov
mov
aam
incb
pop
sarb
or
or
into
scas
shrb
iret
mov
into
ljmp
xlat
xlat
incl
iret
out
into
jmp
repnz
fcmovnu
int
add
add
or
fcmovnu
std
into
push
mov
sar
mov
in
into
hlt
xlat
lock
lock
loop
bswap
ret
add
clc
leave
movsl
in
mov
mov
mov
shr
mov
push
ljmp
in
int
rol
iret
in
fcmovbe
mov
cli
repnz
loope
jmp
fyl2xp1
out
iret
lock
repnz
ror
iret
icebp
sti
mov
shl
ffree
in
cmc
cli
loop
lods
fistpll
mov
mov
xlat
mov
ret
fcmovbe
out
stc
or
lret
repnz
lret
out
xlat
iret
cmc
enter
out
in
mov
cmc
mov
in
out
lock
scas
int
ret
fcmovb
int
ljmp
add
out
in
add
std
adc
fyl2x
loopne
shl
loope
lods
mov
fsubr
cmc
divb
sar
loopne
filds
lret
or
lret
jmp
aam
ljmp
mov
pop
sti
sarb
ret
ror
fisubrl
sti
fcmovne
in
stc
add
lds
in
fmuls
jecxz
out
mov
xlat
out
lock
mov
fcmovbe
in
fldpi
aam
rorl
test
ljmp
add
std
stc
idiv
int3
int
jmp
jmp
enter
out
lods
fsub
call
stc
jmp
enter
lock
clc
clc
ret
or
shl
lret
or
out
call
vmovq
add
sti
repnz
add
enter
out
fsub
aad
rcl
in
fdecstp
lret
fcom
lock
clc
add
in
decl
enter
fmul
out
les
fstpt
out
mov
lret
sti
add
fimuls
mov
aad
mov
shr
in
add
or
shl
lret
ljmp
in
mov
fstpt
aad
out
fdecstp
jecxz
int
rorl
fisttpll
or
ret
enter
repz
fdivrp
mov
fcmovnbe
fisttps
rol
or
hlt
filds
stos
lret
mov
loope
sti
in
iret
lods
aam
repnz
fcmovnu
pop
pop
leave
add
lret
icebp
rcl
repz
int
mov
mov
ljmp
into
in
fdivrs
mov
test
icebp
aam
add
shl
in
fdivrl
fdivs
hlt
in
lret
cmc
shl
mov
mov
jmp
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
mov
mov
xor
add
cmp
je
lea
mov
mov
mov
mov
mov
mov
movzwl
xor
add
movzwl
mov
movb
lea
mov
movzbl
xor
add
mov
mov
movl
movl
mov
xor
add
mov
jmp
mov
inc
mov
cmpl
jae
mov
mov
mov
jmp
mov
xor
add
mov
jmp
mov
inc
mov
mov
cmp
je
mov
mov
movzwl
xor
add
movzwl
mov
mov
mov
movzwl
xor
add
mov
mov
jmp
mov
xor
add
mov
mov
mov
xor
add
mov
movl
mov
xor
add
je
lea
mov
mov
sub
xor
mov
mov
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
movsbl
movsbl
cmp
je
mov
movsbl
mov
xor
mov
movsbl
cmp
je
jmp
jmp
mov
xor
mov
movsbl
mov
xor
add
cmp
jne
jmp
mov
xor
mov
lea
mov
jmp
jmp
mov
xor
add
mov
mov
jmp
mov
add
mov
cmpl
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
mov
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
je
mov
xor
mov
xor
add
mov
mov
mov
xor
div
lea
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
jmp
ret
ret
jno
ret
rclb
clc
jnp
fldenv
insl
jnp
out
jnp
mov
ret
shl
add
add
mov
ret
lods
int
test
enter
cmc
mov
in
out
or
add
ljmp
imull
in
sti
add
jmp
pop
in
or
out
into
fdivl
test
leave
fmul
lret
jmp
shlb
mov
aad
hlt
std
in
fsubr
mov
rol
rol
int3
mov
call
in
clc
loope
hlt
cmc
add
add
std
ficoms
mov
loop
out
out
hlt
int
call
mov
mov
mov
or
ljmp
rcr
iret
jecxz
fcmovnbe
rol
shl
ret
out
pop
loopne
jmp
into
aam
mov
mov
add
fsub
sti
fcmovu
stc
jmp
mov
fucom
stos
aad
sti
leave
in
ror
mov
idiv
or
add
cmc
fisttpll
shrb
mov
out
mov
sarb
fst
faddp
loop
syscall
or
repnz
into
repz
in
sti
lock
sti
repz
mov
jecxz
inc
psubusb
mov
int3
xlat
iret
mov
imul
clc
leave
jecxz
into
lock
rcr
repnz
in
fiaddl
or
jmp
stos
repz
sti
lods
enter
loope
add
ftst
ret
shl
jmp
rcr
loop
in
out
rol
repnz
fstpt
out
sti
jmp
xlat
out
or
loopne
repnz
loopne
int
lock
mov
in
leave
enter
clc
mov
sar
clc
cli
add
int
int3
icebp
ljmp
out
fcmovnbe
fcomip
std
ret
add
repnz
ret
loope
leave
add
ljmp
lret
mov
enter
mov
add
fiaddl
jmp
fpatan
rol
lock
sti
stc
stc
ljmp
aam
xlat
fidivrs
pop
or
iret
add
fsub
into
mov
jecxz
out
div
mov
lock
int
lock
fcomp
out
jmp
adc
add
ret
sarl
xlat
mov
sti
icebp
fcmove
repz
faddp
ret
in
ret
iret
lret
imul
lods
jmp
mov
mov
mov
out
out
out
lds
hlt
stc
push
out
jmp
shr
repz
lret
faddp
test
add
push
stc
invd
rcr
leave
out
stos
in
repnz
stc
out
ljmp
fcmovb
aam
push
aad
add
scas
mov
out
int3
test
sti
in
stc
fistpll
fiaddl
or
incl
repnz
in
rcl
mov
in
repnz
add
add
leave
clc
ljmp
fidivrs
ljmp
mov
shl
mov
testb
pop
cld
lret
out
rol
fucom
in
mov
shl
repnz
sti
int3
shl
add
lock
or
vcvtpd2dq
loop
lods
loope
ret
loopne
cmc
aam
aad
iret
aam
fidivrs
lds
lds
test
lret
lods
xlat
cmc
leave
shlb
shl
mov
fmulp
aam
shl
add
in
std
in
mov
scas
mov
fcmovnb
scas
not
mov
cld
aam
clc
loopne
or
or
mov
fcomi
sti
mov
sarl
push
xlat
ret
jmp
neg
add
adc
loop
in
lods
xlat
int
in
mov
enter
mov
mov
fst
add
fmull
cmpsb
leave
in
in
repz
mov
fcmovb
fcomip
out
lret
jmp
fstl
or
sti
loopne
cmc
lret
jmp
stc
fnstcw
roll
rolb
cld
or
fsubr
loop
loop
out
rol
fidivrs
cld
out
in
mov
loopne
leave
int
fcomp
mov
xlat
ret
in
jmp
std
mov
testb
ret
mov
add
rol
in
jmp
in
out
jmp
clc
jmp
rolb
shl
inc
int3
push
repnz
test
mov
repnz
aad
rcl
hlt
add
adc
shr
mov
test
enter
imul
out
cmc
shl
cmc
out
ffreep
fneni(8087
cld
ljmp
out
mov
fistpll
shl
std
mov
cld
xlat
clc
clc
or
int3
lret
mov
lock
aam
call
out
fcmove
add
fstp
or
adc
loop
rol
mov
aam
jmp
xlat
int3
lret
out
icebp
cmc
loope
rcr
idiv
rorb
or
into
out
lret
loopne
mov
ljmp
les
add
jecxz
repnz
out
lret
push
jmp
scas
out
mov
clc
cli
enter
sti
icebp
out
fsubp
fcom
jmp
hlt
stc
ljmp
loopne
loop
repnz
mov
std
fsubrp
mov
add
or
call
fcom
scas
int
scas
rol
cli
xlat
icebp
into
mov
loopne
push
repnz
neg
in
dec
add
clc
out
mov
mov
mov
leave
mov
hlt
add
xlat
aad
push
add
out
in
mov
mov
into
loopne
cli
repz
inc
mov
fucomp
add
repz
adc
cmpsb
shl
loope
loopne
mov
mov
fadds
movl
or
in
mov
aam
jmp
sti
lret
rcl
mov
neg
hlt
roll
leave
sarb
shrb
stc
ror
mov
in
ljmp
faddl
aad
out
ljmp
xlat
repz
in
fcmove
mov
add
fmuls
add
add
enter
jecxz
mov
in
out
cmc
enter
icebp
stc
in
std
cld
xlat
lret
ret
icebp
out
into
stc
leave
repz
iret
jmp
add
add
push
aam
add
shl
loope
jmp
ljmp
add
loopne
mov
idiv
add
in
call
mov
ljmp
xlat
std
repz
loopne
add
out
ljmp
out
rol
mov
sti
clc
ret
mov
mov
iret
leave
clc
hlt
lret
ror
mov
mov
loopne
imul
int3
lret
sar
mov
repz
ljmp
stc
or
repnz
shr
mov
stc
aad
loopne
ret
xlat
loope
add
iret
fmul
ret
mov
vpminub
jmp
repnz
repz
movb
add
out
shl
fnstcw
mul
mov
aad
add
sti
lret
in
lret
jecxz
int
lock
fcmovb
aad
jmp
in
fstp
rcr
sti
add
lret
testb
mov
mov
rol
sarb
hlt
fcmovb
hlt
or
fsubr
fstp
int
or
jmp
cli
icebp
cmc
lret
cli
aam
add
div
rcr
jmp
lret
fucomp
in
xlat
mov
repnz
out
loop
aad
mov
jecxz
jmp
cld
in
mov
into
idivb
std
mov
lock
sar
jmp
testl
leave
stc
int
repz
out
iret
imul
repnz
out
loop
or
lret
loope
test
loope
test
out
int3
shl
in
cli
into
jecxz
in
clc
lret
jmp
std
repz
mov
ror
mov
stc
mov
aad
ffreep
add
repnz
out
loopne
rcr
lret
enter
fst
ror
mov
mov
fiadds
or
into
ret
out
test
jecxz
mov
out
xlat
ret
std
call
rol
out
enter
enter
scas
shr
in
shlb
enter
loopne
loopne
add
idivb
in
lock
jmp
mov
mov
push
stc
mov
test
lret
in
lret
lret
cli
fcmovb
fdiv
aam
lock
push
int
rcl
aad
loope
sti
loopne
in
cmpsl
lods
test
leave
div
sar
idivb
cli
mov
movl
aad
fsubr
shl
aad
loopne
not
stc
in
in
std
fmul
mov
cld
testb
or
mov
int3
mov
int
call
jmp
aad
add
leave
out
std
or
or
aad
icebp
jmp
enter
add
fnstsw
add
loopne
call
aad
mov
mov
lret
in
in
call
bnd
mov
cmc
fcos
jmp
cmpsl
mov
mov
mov
mov
fcmovbe
sar
les
jmp
lds
repnz
sarb
mov
mov
fmul
iret
iret
std
faddl
out
xlat
add
ret
add
mov
div
lock
mov
ljmp
loopne
add
fldl
or
enter
in
aad
jmp
imul
out
out
rcl
icebp
repz
in
lret
add
mov
int
lret
int
in
mov
mov
lock
icebp
push
int3
icebp
add
sti
clts
hlt
fadd
or
ljmp
icebp
mov
loopne
mov
enter
add
or
repnz
out
repz
mov
out
aad
cld
in
cld
loopne
ret
in
incb
scas
mov
int3
in
jecxz
lret
loopne
aad
aad
int3
rorb
or
leave
loopne
push
bswap
shrl
iret
sarb
neg
jecxz
rcl
in
mov
not
sti
or
adc
mov
into
loop
mov
mov
aad
fidivrl
shl
ret
jmp
add
lock
lock
jmp
in
call
flds
icebp
push
in
rcr
std
rol
fsubr
add
or
stos
loopne
int3
sti
sar
shr
mov
div
fcomi
add
fdivp
in
neg
fdiv
stc
enter
out
loope
ljmp
fpatan
mov
fsub
sarl
add
ljmp
xlat
mov
shl
repz
mov
mov
repnz
lock
add
add
ffree
out
lret
stc
sar
jmp
in
iret
mov
roll
push
out
stc
cld
add
add
shl
loop
int
fsubp
cld
std
test
clc
icebp
mov
jmp
or
ret
jmp
mov
clc
leave
into
mov
add
in
shl
out
in
ljmp
loopne
neg
std
in
call
hlt
repz
shl
leave
sti
fcmovnu
rol
mov
xlat
leave
clc
ror
fcomi
in
fcmovb
add
sarb
leave
jmp
scas
rcl
in
rcl
mov
mov
int3
or
fdivr
std
std
or
iret
ljmp
mov
lock
mov
enter
in
adc
test
in
lods
ret
lods
stc
sarb
repnz
out
xlat
repnz
fsub
into
scas
out
in
leave
cmc
xlat
mov
call
sarb
cli
or
aam
or
out
repnz
lret
repz
rcl
jecxz
loopne
mov
or
mov
lret
jmp
jecxz
shl
mov
mov
mov
in
fdivrs
lret
jmp
mov
bnd
call
fdivrl
sar
shl
fldl
out
in
faddp
fsubrp
mov
ret
lock
int3
mov
repz
icebp
loopne
sti
fstp
fcomip
add
add
out
out
out
out
mov
fdiv
leave
mov
stc
in
imul
add
push
stc
iret
shrl
in
ljmp
add
out
rolb
add
faddl
add
loop
imulb
jmp
aam
mov
loopne
loope
lret
or
ljmp
shl
jmp
hlt
mov
aad
ret
out
loop
loope
ljmp
jmp
mov
repz
lock
hlt
hlt
add
in
lret
loop
fmulp
lods
rol
mov
cli
test
mov
std
aam
mov
jecxz
loop
mov
mov
ret
repz
mov
fstpt
hlt
sar
or
repz
mov
mov
lods
lret
fcmove
lret
out
cli
stc
rolb
ror
int3
push
or
mov
in
into
call
cli
in
clc
fmul
add
fpatan
into
fdivr
icebp
loopne
enter
fmull
lret
shrb
in
int
cli
mov
ret
idiv
std
xlat
fprem
pop
jecxz
lret
div
movsb
ret
shl
repnz
lret
lret
mov
cli
loop
movb
or
icebp
out
mov
aad
enter
fcmovb
fcmovbe
leave
mov
sti
icebp
or
push
paddq
incl
ror
imul
mov
repz
sar
aam
mov
fiadds
adc
add
shr
mov
int3
ret
enter
add
in
cld
ffreep
add
or
fldln2
ljmp
xlat
mov
aad
clc
hlt
out
sti
lock
add
decl
fxch
mov
jmp
out
iret
sti
jmp
mov
sti
push
jecxz
out
call
mov
mov
leave
clc
in
mov
mov
add
add
mov
rol
in
lods
scas
aad
xlat
mov
sarb
mov
hlt
in
out
leave
cmc
or
adc
ret
mov
mov
icebp
out
mov
int3
xlat
hlt
out
rol
xlat
fdivr
out
add
decb
loopne
mov
jmp
rcl
lret
sti
pushl
rcr
in
shr
fcmovnu
icebp
ror
lret
out
int3
cmc
icebp
std
hlt
mov
ret
add
aad
rcr
repz
loop
scas
repnz
mov
in
in
sti
mov
loop
ljmp
or
fcmovb
xlat
ret
jmp
mov
cld
add
sti
fnstsw
in
or
leave
ffree
mov
lock
iret
in
out
fucomi
aad
aam
add
or
idiv
vcmppd
rol
mov
int
lods
mov
mov
fpatan
xlat
incl
repnz
icebp
add
aam
xlat
jmp
push
in
lret
in
mov
fdiv
mov
mov
mov
neg
into
mul
in
sarl
std
or
leave
sarl
mov
mov
sti
mov
add
cmc
testb
jecxz
jmp
scas
iret
into
in
in
sti
enter
rcr
fcmove
lock
faddl
aad
jmp
mov
mov
fcmovbe
int3
leave
mov
cli
xlat
ret
add
add
add
ljmp
in
out
call
aad
stc
mov
cmc
out
lret
stc
lret
lock
sti
fnstsw
in
aam
out
rol
sar
mov
xlat
imul
shl
ret
repz
loop
jmp
mov
mov
add
xlat
repz
call
shr
int
scas
mov
lret
sarb
out
icebp
sti
stc
repnz
aam
jecxz
fisttpl
fsub
leave
leave
mov
mov
enter
rcr
out
lret
cld
clc
fsub
or
adc
aam
ror
mov
lock
iret
sar
test
loopne
add
cli
add
add
cmc
aam
lret
out
jmp
fndisi(8087
mov
ret
fucomi
imul
fucomp
or
test
fsubr
mov
sti
in
dec
mov
aam
into
mov
out
or
int3
lret
iret
shl
in
int3
shr
out
xlat
in
std
mov
in
repnz
jecxz
in
hlt
fsub
cli
aam
in
fsqrt
fst
loop
jmp
stc
lret
ror
lock
add
fcmovnb
add
out
loop
les
lret
ljmp
repnz
in
loope
xlat
in
push
fsqrt
lret
mov
out
hlt
fcmovnb
repz
mov
hlt
lock
add
imul
decb
lret
in
shlb
call
lock
repz
loopne
jmp
std
or
leave
add
int3
rcr
loope
ror
cli
xlat
clc
icebp
stc
enter
mov
or
sti
clc
leave
in
enter
lret
iret
ret
ret
mov
hlt
clc
int3
jecxz
inc
aad
clc
mul
loope
out
scas
scas
rcl
lods
call
std
mov
shl
shl
rcl
std
lret
test
lock
enter
leave
in
mov
fxtract
into
add
clc
aam
ret
fdivr
int3
out
in
mov
mov
mov
add
mov
hlt
lret
enter
out
ljmp
repz
ljmp
shl
inc
push
lret
call
fucomp
leave
rol
fxch
mov
not
mov
out
add
fxch
cmc
add
cli
or
fistpll
out
lret
iret
int
sar
cli
fstp
in
mov
fmuls
add
or
enter
int
loopne
lret
shr
sar
push
mov
out
add
in
shl
fyl2xp1
std
or
out
movsl
lods
int
call
rcl
xlat
jmp
fdiv
sar
mov
into
fcmovb
fadd
repz
lock
aam
fnstsw
mov
loopne
hlt
ljmp
lods
loop
cmc
out
shrl
std
fsubp
repnz
sarl
cli
add
loope
lods
mov
jecxz
repnz
into
xlat
in
mov
rcr
stc
fsubp
out
stc
ret
clc
les
in
add
jecxz
stos
loope
scas
aad
enter
cli
lret
mov
repnz
jecxz
push
jmp
lret
mov
mov
int3
fidivrl
repnz
cli
add
aad
filds
repz
test
aam
fsub
mov
fdivr
ror
mov
ret
fcmovne
jmp
xlat
in
mov
mov
out
mov
in
fiadds
loope
jmp
or
xlat
stc
iret
in
int3
mov
mov
call
std
ret
fcmovnb
add
sar
loopne
fucompp
add
jmp
repz
jmp
mov
ret
test
rorb
rcl
repnz
not
lods
mov
out
call
xlat
fistpll
aad
add
dec
int3
repnz
repnz
cli
iret
out
inc
mov
rcl
out
stc
ret
rol
loopne
hlt
in
icebp
jmp
repnz
iret
fyl2x
in
fdecstp
ret
cmc
fdivrp
rcr
int3
repz
pop
in
fiadds
fyl2x
jecxz
lods
int3
mov
in
loopne
clc
call
test
cld
lock
jecxz
out
jmp
out
in
lret
mov
cmc
call
aad
icebp
rol
out
into
or
mov
mul
ljmp
mov
cli
ffree
loope
add
fnsetpm(287
cmc
rorb
hlt
enter
mov
int3
repnz
mov
mov
sar
add
idiv
jecxz
or
jecxz
mov
int
iret
mov
loope
push
clc
ret
or
jmp
in
test
mov
mov
leave
lret
stc
idivb
aam
aam
incb
fadd
sti
bswap
push
in
scas
iret
fmul
test
mov
incb
int3
add
mov
xlat
iret
psubw
adc
scas
imul
hlt
ror
mov
enter
call
add
pop
add
loopne
adc
inc
in
loope
int3
lods
test
lret
mov
mov
shr
out
cmc
stc
cld
shlb
fcmove
jmp
icebp
lods
aad
loope
int
or
loopne
out
or
in
loope
out
cmc
rcl
hlt
mov
int3
mov
cld
add
loopne
push
out
out
mov
fnsetpm(287
mov
in
std
fucomp
rcl
repnz
in
fsub
ret
adc
scas
icebp
out
iret
bnd
out
xlat
in
vaddsubps
inc
aad
lret
call
fsub
leave
out
ljmp
ret
in
in
iret
lret
in
clc
add
jecxz
loope
fxch
jecxz
call
add
iret
out
mov
enter
divb
mov
cmc
ret
sar
rcr
loop
jecxz
ljmp
int3
shl
jmp
loop
loope
aam
add
clc
add
int
rol
fdiv
lods
jmp
leave
mov
repz
sarl
lds
cli
or
int
mov
test
sti
mov
call
ret
leave
loopne
cli
clc
hlt
enter
fnsave
ror
hlt
clc
cmc
mov
out
hlt
aad
add
out
in
lds
fcomp
mov
iret
cli
divb
add
sarb
stc
cli
fisttpl
push
lods
lret
in
out
enter
call
fiadds
clc
std
add
fdivr
aad
faddl
jmp
ret
scas
aad
ret
shll
out
xlat
iret
fiadds
fildl
test
add
pop
pop
loopne
icebp
in
fcmove
out
jecxz
mov
add
loopne
loope
mov
out
test
mov
mov
int
mov
aad
loope
pop
fdivr
push
add
icebp
in
test
iret
hlt
shl
in
rol
loope
mov
in
or
sti
enter
icebp
xlat
in
mov
scas
out
shl
cmc
repz
shll
sti
jmp
add
mov
aam
mov
in
leave
aam
in
fucomip
clc
pop
in
stc
rcr
cli
jecxz
jecxz
ror
test
fidivl
fadds
rcr
mov
or
add
jmp
int3
fmulp
out
lret
ljmp
cmc
repz
rcr
loop
or
fcmovbe
ljmp
xlat
mov
repz
aam
in
in
jecxz
aam
pop
int
in
fdivrs
jmp
jmp
icebp
jmp
in
mov
aad
shl
lret
icebp
out
aad
or
add
icebp
icebp
fldt
cld
jecxz
mov
in
icebp
aam
enter
in
stos
mov
iret
lods
int
std
int3
cld
shl
std
out
xlat
repnz
jmp
incl
pop
aad
repz
ljmp
div
aad
std
int3
out
jecxz
pop
in
fsincos
loopne
out
into
scas
shrl
shlb
out
fistpll
out
faddl
aam
fldl
ljmp
fdivl
aam
fdivr
rcl
loop
lock
repz
sti
add
out
hlt
loop
mov
leave
sti
lret
mov
aad
leave
shr
fdivr
add
cmc
rolb
loop
push
ljmp
ret
int
into
mov
sti
lock
or
aam
fsubr
in
int3
leave
fdiv
shll
jmp
fucomip
hlt
leave
rcr
loope
hlt
loope
cli
push
aad
loop
std
ljmp
out
in
test
cld
shr
aam
add
fadd
or
out
push
out
fisttpl
add
in
icebp
loop
test
in
iret
jecxz
clc
mov
jmp
xlat
pop
bswap
repnz
mov
in
mov
fsubrp
repnz
roll
add
jmp
add
or
loop
mov
xlat
in
mov
repnz
idiv
push
or
or
fucomi
clc
in
in
loopne
icebp
out
lock
int
idivl
sar
aad
lret
add
in
iret
std
les
lret
repz
inc
cld
jmp
mul
push
add
cld
lret
mov
out
out
dec
mov
rol
loope
mov
push
shlb
inc
aam
int
call
aad
ret
out
lret
mov
fcmovnb
out
ror
mov
jecxz
jmp
loopne
repz
leave
mov
repz
mov
jmp
rol
rcl
ret
jecxz
std
fisttpll
enter
lods
not
mov
cli
jmp
jmp
leave
mov
loopne
shr
or
fiaddl
iret
or
lret
in
repnz
lods
out
ror
mov
mov
mov
mov
add
repz
xlat
add
xlat
enter
int3
cld
jecxz
mov
fcmovnb
loopne
shr
mov
mov
lret
xlat
rolb
pop
shl
in
mov
out
mov
mov
ror
in
add
loopne
loope
cli
or
add
mov
mov
repz
mov
std
fcomi
loop
int3
mov
jmp
add
mov
stc
call
mov
mov
add
aam
or
or
int
mov
scas
call
fcomip
out
mov
std
out
aad
ret
rolb
shl
fsub
in
fmul
fnstsw
in
in
mov
lret
into
pushl
mov
ffree
ljmp
add
ljmp
shl
hlt
jmp
fucomp
loope
cmc
add
clc
loope
or
mov
leave
jmp
rcr
mov
sarl
add
out
or
cmpsl
lds
stc
fdivrs
lock
int
push
cld
leave
clc
add
lret
stc
into
cld
out
in
jmp
jecxz
mov
cli
mov
rcr
add
lock
xlat
shl
loopne
or
test
jmp
loop
into
iret
out
lret
cld
mov
shl
ret
fdivr
cli
sti
cli
or
out
test
rcr
mov
int
std
rcr
enter
cld
into
out
lock
shl
leave
fnstenv
leave
mov
repz
jecxz
cmc
add
add
or
mov
mov
shr
clc
mov
xlat
int
aam
fninit
or
aad
fists
into
jmp
rol
in
enter
ret
shl
int3
rcl
hlt
fcmovnb
out
in
cld
add
out
mov
mov
fidivl
leave
fidivrs
ret
repnz
add
into
add
cld
mov
mov
test
hlt
call
hlt
fyl2x
lds
loopne
shr
out
out
int3
bnd
ret
xlat
shrl
enter
into
pop
push
std
pop
out
rcr
cld
clc
add
call
mov
fcmovu
out
fxch
leave
mov
fst
or
ret
cli
stc
add
sarl
fcom
ror
fld
aad
hlt
add
push
ror
or
aam
stc
std
or
mov
lds
mov
aad
lock
jmp
clc
fcmovnu
jmp
mov
mov
mov
pushl
repz
std
aad
jmp
into
mov
loopne
sti
int
divb
std
cli
fcmovu
lock
fsubrp
movb
std
or
ret
les
out
out
shlb
aam
jmp
fcmove
lret
in
in
les
hlt
mov
clc
int
hlt
sar
aam
fcmovu
fdivrp
loope
filds
fnstsw
jmp
in
lods
fmul
loop
rcl
ljmp
mov
add
ret
hlt
fucomi
push
cli
lret
rcr
lods
lds
into
mov
add
aam
shl
mul
add
add
leave
fsubp
add
pavgw
mov
rol
out
rcr
repz
out
shl
mov
mul
lret
int
loopne
mov
lret
not
rcr
rcr
lret
fistpll
filds
iret
add
shl
mov
jmp
repz
ljmp
std
or
lret
fcmovnu
or
mov
fmul
lret
out
into
loope
stc
clc
add
in
lret
loope
jmp
loop
jmp
vpmovmskb
hlt
int
mov
lret
in
incb
stc
fidivrs
or
pop
fdivrp
rcl
rcr
enter
cli
call
aad
cmc
int
shl
in
rcr
in
in
mov
not
mov
mov
shl
in
in
add
stc
cli
add
loop
fcmove
or
loopne
ret
fxch
repz
std
mov
std
hlt
fidivrs
in
jecxz
repz
ljmp
mov
cli
out
xlat
fcmovnu
enter
cli
mov
into
cli
in
in
loopne
out
lock
clc
in
in
fcmovnbe
fdiv
out
mov
fsub
fildl
aam
leave
jmp
lds
jmp
scas
cmc
mov
mov
sti
aam
repnz
in
add
add
jmp
clc
lret
ror
ret
in
mov
icebp
mov
out
fcmovbe
mov
sar
add
aam
fsubr
in
fsub
lret
into
jecxz
out
int3
sti
iret
not
fbstp
rcr
mov
add
loope
into
mov
mov
hlt
jmp
into
fcmovnbe
fcmove
lock
sar
aam
or
ljmp
out
jmp
call
icebp
mov
fcomip
mov
call
ret
cmc
shlb
in
iret
int3
into
mov
faddl
rcr
add
jecxz
fcomp
lock
test
in
hlt
fdivrp
shlb
lret
push
loop
lret
loop
jmp
shl
fsub
lret
mov
xlat
in
jmp
out
sti
add
loop
mov
iret
out
mov
mov
fdivr
aad
stc
add
int
fsubrp
not
iret
loop
sar
stc
in
repnz
mov
cld
add
fmulp
fdiv
ret
fdiv
cli
ljmp
icebp
aam
fadds
rcl
add
out
call
shrb
lret
mov
test
ljmp
repz
mov
test
call
enter
icebp
shl
out
jmp
into
fstp
loopne
lret
shr
fsqrt
mov
rcl
call
sar
add
jmp
mov
repnz
repz
sti
mov
fstpt
std
add
or
out
enter
aad
int3
loope
fcmovu
lret
mov
add
mov
pop
or
fcomp
add
in
leave
call
lock
sarb
mov
repnz
add
jecxz
leave
or
loop
int3
out
xlat
shl
lret
jecxz
mov
aam
lret
out
out
add
bnd
jmp
ror
aad
mov
int
mov
out
sti
fcmovb
sti
hlt
les
pop
lret
int3
int
scas
lods
xlat
ror
sti
lret
mov
mov
jecxz
cli
add
add
pop
fnclex
mov
repz
repnz
lret
rcr
mov
lret
cli
cld
rcl
out
mov
ret
in
call
loope
out
mov
iret
mov
fyl2x
call
loope
in
cli
out
jmp
lret
jecxz
jecxz
mov
leave
rcr
in
rcr
hlt
mov
add
mov
cld
add
xlat
mov
repnz
rcl
leave
std
jmp
mov
cmc
call
call
call
out
repz
mov
repnz
stc
loope
out
jmp
leave
lock
loop
out
cli
leave
sti
mov
in
ret
fsub
leave
add
sti
loop
lret
clc
fnstcw
out
stc
fcmove
lret
out
div
int
std
cli
fdivr
cld
repnz
ljmp
add
dec
xor
add
pop
mov
pop
pop
leave
ret
push
mov
sub
sub
movl
lea
xor
mov
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
lea
mov
andl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
neg
mov
negl
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
xor
xor
dec
mov
jmp
xor
add
mov
mov
sbb
mov
add
mov
mov
mov
xorl
mov
addl
xor
xorl
add
movl
cmp
je
movl
jmp
jmp
movl
mov
movl
cmp
movl
je
or
lea
mov
orl
mov
mov
and
xor
add
mov
mov
mov
sbb
xor
or
add
mov
xorl
xor
notl
add
mov
imul
movl
cmp
movl
je
sub
mov
inc
mov
mov
mov
subl
add
andl
xor
xor
inc
mov
cmpl
jl
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
mov
adcl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
sbb
mov
movl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
add
mov
mov
sub
mov
mov
mov
mov
add
mov
mov
xor
add
mov
xor
mov
xor
lea
mov
xor
add
imul
sub
mov
cmp
jg
mov
mov
mov
xor
add
mov
mov
sub
mov
mov
jmp
mov
mov
mov
xor
mov
mov
lea
mov
mov
mov
mov
mov
mov
xor
add
not
and
mov
lea
mov
mov
movl
movl
lea
mov
mov
movl
movl
mov
movzwl
mov
mov
xor
xor
add
adc
movzwl
cmp
je
mov
xor
add
mov
sub
mov
jmp
jmp
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
mov
xor
add
mov
mov
mov
mov
xor
add
cmp
je
mov
add
mov
mov
mov
mov
mov
movzwl
mov
mov
xor
xor
add
adc
movzwl
cmp
jne
mov
mov
mov
mov
jmp
pushl
pushl
pushl
pushl
call
leave
ret
push
mov
push
orl
push
sub
lea
adc
mov
mov
xor
mov
and
mov
mov
sub
mov
orl
xor
andl
xor
or
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
mov
notl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
leave
ret
push
mov
sub
add
push
addl
mov
xor
add
xorl
mov
movzbl
adc
mov
mov
mov
xorl
mov
movzbl
and
mov
mov
mov
mov
inc
mov
andl
xor
sub
movl
sbb
xor
subl
xor
mov
movl
mov
movl
cmpl
jne
movl
cmpl
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
pushl
call
jmp
mov
subl
xor
xorl
sub
movl
sbb
xor
xor
mov
movl
mov
cmpl
movl
jne
movl
cmpl
je
dec
mov
xor
or
sbb
mov
xor
xor
or
mov
and
add
xor
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
movzbl
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
jmp
mov
mov
add
mov
subl
sub
mov
xor
movl
xor
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
xor
mov
xorl
xor
xorl
add
addl
mov
subl
lea
notl
mov
negl
mov
xorl
xor
subl
add
mov
adcl
lea
subl
push
mov
adc
mov
orl
xor
orl
add
xorl
push
movl
cmpl
je
cmpl
jle
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
push
mov
adcl
pushl
sbbl
call
mov
orl
mov
mov
addl
mov
sub
mov
sub
xor
cmp
jne
decl
xor
jmp
xor
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
jmp
movl
movl
movl
or
mov
mov
mov
sbb
xor
addl
add
mov
sub
mov
sub
movl
mov
movl
movl
cmpl
movl
je
mov
neg
xor
mov
xor
adcl
lea
mov
xor
div
mov
add
xor
andl
add
mov
xor
add
andl
sub
cmp
jne
sbb
mov
xorl
add
sbbl
mov
mov
sub
mov
orl
xor
add
movl
mov
movl
jmp
sbbl
mov
andl
inc
mov
sub
mov
addl
xor
xorl
add
movl
cmp
jae
inc
mov
sub
addl
xor
or
add
mov
mov
mov
mov
mov
cmpl
movl
jbe
movl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jb
add
mov
mov
mov
jmp
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
mov
mov
movl
jmp
xor
movl
jne
and
movzbl
xor
sbbl
add
movl
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
pushl
push
pushl
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
add
add
mov
add
movzbl
sub
mov
adcl
mov
xorl
xor
adcl
add
mov
andl
ror
subl
mov
subl
xor
mov
add
orl
mov
mov
mov
subl
sub
subl
xor
movl
cmp
movl
jne
mov
xor
add
mov
adc
mov
andl
xor
add
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
pushl
push
push
push
call
cmpl
jb
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
add
sbb
mov
sub
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
call
xor
add
dec
mov
jmp
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
sub
movl
mov
jmp
mov
movl
mov
orl
movl
movl
movl
mov
and
movl
movl
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
xor
sbb
mov
add
mov
andl
sub
mov
movl
movl
movl
cmpl
movl
je
mov
xor
xor
mov
subl
xor
lea
mov
adcl
xor
subl
div
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
push
push
pushl
call
jmp
mov
xor
add
mov
xor
add
jmp
test
jb
adc
orb
xchg
jp
add
cmc
loop
or
in
rep
mov
in
xlat
enter
int
ror
mov
ret
clc
mov
or
in
in
iret
loope
mov
jmp
hlt
test
mov
int
cmc
hlt
add
cli
aad
shl
test
mov
mov
mov
push
roll
lret
jmp
jmp
push
add
into
cmc
in
enter
shl
clc
enter
in
add
rol
shl
add
fdivrp
fsub
fst
mov
les
imul
out
pop
icebp
fmul
xlat
aam
mov
loopne
ffreep
test
enter
aam
in
int3
leave
out
div
in
cld
incl
xlat
roll
clc
incb
add
out
lock
scas
in
mov
aam
fucom
idivb
testl
loope
fcom
scas
loope
idiv
lods
hlt
int3
clc
idivb
add
shl
rol
loop
or
mov
cmpsl
lret
sti
fcmovu
in
div
add
rcr
aad
icebp
pop
loop
jmp
fadd
test
sarl
mov
lret
lock
fdiv
hlt
fucomp
ljmp
loop
cld
out
jecxz
ret
out
mov
out
neg
xlat
imul
clc
ret
cld
rcr
clc
or
cmc
jmp
pop
repz
shll
in
mov
ljmp
shl
jmp
push
rolb
add
loopne
int3
lds
leave
jecxz
mov
fcomi
or
ljmp
icebp
in
rcl
int
in
into
div
jmp
lret
out
fucom
add
mov
loop
out
lret
loopne
mov
mov
int3
incl
call
mov
mov
out
into
mov
mov
jecxz
in
mov
roll
out
jecxz
out
hlt
lret
stos
into
rol
int
aad
into
xlat
mov
fcomip
loope
loope
ftst
jmp
fists
ljmp
ret
fcom
shl
aam
aad
stc
mov
icebp
jmp
mov
sar
loopne
mov
mov
cli
add
shl
in
or
ljmp
cld
mov
mov
repz
fld
add
add
in
int3
cmc
int3
mov
repnz
aad
into
rcl
pop
cld
out
add
mov
mov
lret
aad
enter
fstpt
loope
out
in
adc
clc
shr
mov
mov
mov
ror
in
lock
lret
aam
in
fcmovb
lret
leave
or
loopne
int
jecxz
divb
icebp
mov
int
loope
fadd
push
out
out
icebp
enter
out
icebp
fcmove
mov
idiv
out
enter
repnz
loopne
neg
fcmovne
ljmp
lods
xlat
into
iret
mov
in
fstpt
ret
ffree
add
out
fiadds
mov
shl
int
mov
loope
loope
fsubr
or
in
pmuludq
fxch
cmpsb
enter
mov
shl
mov
fcmovne
out
fcomp
mov
ret
std
ljmp
rcr
jmp
jmp
rcl
icebp
lock
fnstsw
out
push
cmc
mov
loopne
pop
jmp
mov
out
mov
in
int3
in
rol
mov
out
rol
add
out
push
in
int
add
repz
mov
test
cmc
stc
mov
neg
std
out
or
leave
loop
mov
out
ffreep
int
fstp
neg
cli
std
cmc
stc
lret
or
cli
loopne
out
mov
enter
push
mov
rcr
out
loopne
or
out
adc
shr
jmp
lret
clc
rcr
ror
loopne
out
repnz
lock
fisttpll
ljmp
fsubr
call
hlt
fld1
aam
icebp
mul
jmp
aad
or
fsubrs
hlt
in
int
in
stc
icebp
iret
mov
add
loop
imul
add
fcoms
stos
cmpsb
shl
repnz
repnz
in
fidivs
sti
ror
lret
lret
mov
test
sarb
repz
out
clc
repnz
loope
idiv
add
loopne
iret
aad
int3
in
jmp
int3
mul
into
jmp
call
mov
enter
or
sarb
iret
shl
repnz
xlat
call
ret
in
out
out
mov
jmp
enter
lret
not
mov
mov
lret
mul
ljmp
aad
lret
mov
call
leave
int3
lret
in
roll
push
fildl
call
loop
in
jecxz
ljmp
mov
out
fsub
rcl
xlat
aam
add
in
or
scas
scas
loop
shl
call
idiv
xlat
rcr
hlt
xlat
std
stc
shl
or
in
incl
rcl
mov
mov
mov
stc
aad
loop
mov
add
stc
call
iret
repz
out
mov
mov
mov
cld
icebp
roll
out
leave
cld
or
shl
int
repz
shl
fscale
call
icebp
loop
loopne
ret
lret
int3
or
rcl
sarb
scas
into
mov
fmul
repnz
aam
sti
loopne
add
clc
decb
xlat
test
in
ljmp
out
mov
loop
fld
repnz
fstp
ror
dec
enter
repnz
mov
les
lret
fcmovnb
pop
lret
or
in
iret
lods
out
leave
stc
cmc
iret
iret
repnz
aam
push
mov
add
std
in
int
out
in
ret
jmp
divb
int3
call
enter
add
mov
iret
mov
jmp
les
sti
xlat
loop
sti
push
fsub
add
jmp
ret
mov
stc
ror
lret
lret
lret
in
loope
add
int3
or
or
dec
in
out
int
shlb
aam
fcmovnu
icebp
call
ljmp
jmp
lock
mov
mov
fdiv
shl
add
add
out
out
cld
cld
int3
jmp
fnsave
lock
call
fcom
in
fcomip
rcl
icebp
in
pop
add
int
fmul
mov
cli
sti
call
enter
rol
clc
in
fnstcw
les
scas
test
loope
out
shll
call
shl
fdivr
sti
clc
or
fsqrt
stos
repnz
shl
cmc
clc
int3
mov
cli
cli
mov
aad
add
fcomip
fcmovu
cmc
out
sarl
lods
aad
mov
out
in
mov
or
imul
add
fisttps
out
rol
lret
mov
enter
out
into
flds
mov
cli
ljmp
or
int3
shr
int3
jmp
lret
mov
fcmovbe
icebp
std
pop
fucom
roll
rolb
add
lds
adc
lock
repnz
int3
lret
jmp
xlat
lock
ret
stc
clc
loop
add
add
fidivs
into
jmp
aad
rcr
fcmovb
sti
out
loopne
cmc
push
sti
iret
call
shll
icebp
fcomip
cli
stc
mov
sti
shl
ror
loop
jmp
lret
mov
out
int
xlat
stc
mov
out
int
jmp
in
enter
shl
in
lret
sarb
mov
add
std
repnz
out
out
sti
adc
enter
call
enter
shr
enter
ror
fdivr
sti
call
test
jmp
out
div
mov
loopne
sar
in
neg
idivl
add
or
scas
lods
ljmp
sarl
aad
sti
loop
pop
add
clc
fmull
mov
enter
mov
ret
aam
in
or
add
jmp
lret
ret
stos
out
repnz
cmc
in
mov
xlat
fistpll
lret
fsubrp
jmp
lock
cmc
rcl
lods
rcr
leave
divl
cli
icebp
icebp
add
in
std
fcmovu
cmc
lret
add
adc
loopne
not
ljmp
sti
mov
repnz
in
jmp
repnz
shl
lock
mov
in
fnstsw
lock
sar
decl
out
add
cmpsl
mov
mov
in
mov
repz
call
rcr
icebp
stc
icebp
cli
testl
fsubr
lock
iret
rcl
sarl
sar
lret
stc
rcl
fstp
out
ret
fdivr
std
clc
add
fdivl
stc
shl
out
les
repz
shl
icebp
push
lds
loop
jmp
in
lret
jmp
fmul
mov
shl
fcom
xlat
xlat
pop
or
fsubrp
fidivs
mov
aad
rol
in
mul
add
jmp
add
fcom
mov
test
jmp
cli
test
loopne
ret
xlat
or
ljmp
loope
aad
mov
sar
out
ret
hlt
cld
lock
fnstsw
shl
int3
test
out
div
icebp
loope
aad
shl
add
repz
cmc
or
add
add
mov
iret
mov
jmp
std
in
mov
mov
hlt
fld
fistl
lret
leave
in
lods
aad
loop
mov
rcl
sar
loop
out
fadd
fdivr
test
int
enter
out
mov
call
aad
add
bnd
roll
neg
jecxz
push
fxch
ffree
iret
aad
lret
lock
int
into
fiaddl
fdivr
in
jecxz
mov
int3
mov
int3
stc
mov
fdiv
aam
jmp
mov
testb
leave
fidivrs
out
out
in
cmc
in
fdiv
mov
int3
cli
rolb
mov
or
in
scas
stos
ljmp
in
std
idiv
mov
aam
out
lret
fildl
lret
call
mov
mov
jmp
int3
les
jecxz
lock
lds
cli
add
leave
fsubr
fst
mov
out
loopne
lret
in
aam
lret
into
imul
aad
fucom
out
add
cld
call
rcl
mov
cmc
aam
aad
in
in
ret
loope
ljmp
sar
iret
test
aam
aam
in
out
fadd
lret
cmc
lock
std
add
hlt
rorb
pop
lret
or
jmp
lret
mov
lock
not
call
icebp
stc
or
or
or
out
xlat
scas
imul
out
icebp
iret
cli
fdiv
mov
ret
add
cmc
hlt
lret
lret
fdivrp
ror
jmp
out
aad
call
cli
fcomi
ret
fistpll
loope
ljmp
into
repnz
cli
mov
xabort
ljmp
fyl2x
lret
jmp
lds
scas
loop
iret
lock
cmc
mov
icebp
call
ret
clc
sti
std
frstpm(287
call
add
loope
lods
mov
hlt
iret
out
iret
cli
sti
mov
cld
mov
loope
mov
sar
jmp
lods
iret
aam
repnz
in
std
hlt
into
ljmp
add
loope
loope
push
jecxz
lret
iret
rep
shl
leave
aad
out
hlt
repz
jmp
push
loop
add
add
hlt
or
in
jmp
not
shl
call
int3
fdivrs
hlt
repnz
mov
pop
out
call
in
jmp
fincstp
out
ror
fsub
not
pop
add
testb
leave
cli
fildll
fcmovne
xlat
ljmp
int3
add
xlat
fadd
rcr
ret
jecxz
cld
iret
leave
call
mov
into
inc
int
roll
out
xlat
sar
filds
or
add
jecxz
stos
out
call
hlt
int
mov
out
rcr
stc
mov
add
jmp
leave
push
in
shll
rcl
mov
sar
in
fcmovbe
fadds
add
or
ltr
stc
in
mov
leave
call
sti
stc
mov
cli
div
in
mov
or
in
int
add
icebp
in
xlat
mov
fdivr
in
mov
mov
int3
std
cmc
hlt
clc
ror
pop
pop
call
cmpsl
test
shlb
cmc
mov
out
mov
roll
in
push
or
out
lock
out
out
in
rcl
mov
lock
out
loope
or
into
fcoms
icebp
rcl
out
jmp
call
imul
into
push
aam
fstpt
pop
in
mov
loopne
fmulp
mov
mov
fucomi
fsubp
add
fdivr
pop
faddp
fucomip
ljmp
mov
jmp
fcmovbe
sarb
adc
stos
test
leave
lods
in
xlat
stc
hlt
stc
repz
cli
loope
loop
jecxz
out
add
fsubr
out
mov
jmp
call
out
fcomip
cmc
mov
aad
out
or
ret
mov
repnz
xlat
hlt
mov
mov
mov
jecxz
rcl
or
or
add
aam
out
shl
xlat
jecxz
mov
aam
sti
aad
rcr
loope
fcomp
in
out
in
enter
call
fnop
into
mov
cmc
cli
add
shl
stc
fldl
push
sti
in
stc
call
repz
lret
fistpll
int3
mov
fistpll
leave
jmp
lret
in
out
rcr
fucomi
aam
loope
fld
loopne
aam
ret
loop
fmull
cmc
pop
out
int3
ret
jmp
iret
loopne
in
fcomp
lods
mov
xlat
out
cli
div
decl
loop
or
lret
jecxz
loop
mov
in
in
in
in
mov
enter
fcmovnb
std
add
or
push
int
int3
in
enter
fsub
fdiv
mov
enter
add
add
add
paddsb
fmull
loop
rcl
aad
call
std
lock
call
xlat
mov
add
adc
enter
call
jmp
jmp
xlat
lock
ret
leave
fldpi
lret
add
sar
into
lods
icebp
in
jmp
lret
iret
out
mov
add
mov
add
loop
call
fucom
fnsave
in
repz
mov
rcr
icebp
roll
pop
in
clc
loop
shrl
mov
leave
mov
repnz
mov
add
aam
cld
std
out
in
mov
icebp
aam
mov
fxch
in
divb
out
mov
call
or
lret
ret
scas
ret
int
in
cli
sti
sti
mov
ret
fiadds
shl
lock
fisttps
out
mov
aad
mov
mov
mov
pop
idivb
loope
push
shl
leave
shlb
icebp
iret
std
les
sarl
cld
rcr
icebp
mov
test
fprem
out
mov
fdiv
cmc
repz
fndisi(8087
out
loop
add
fsubr
std
scas
mov
loop
scas
shlb
xlat
aam
add
sti
fcomip
out
push
ret
fxch
loope
leave
shl
out
sarb
int
fiadds
mov
jmp
shl
mov
mov
mov
ret
mov
roll
fmuls
into
out
rol
mov
std
leave
aad
int3
in
neg
ljmp
out
scas
call
fadd
fnstcw
ffree
sarb
lret
or
fcmovu
fiadds
enter
shr
out
call
fdiv
mov
les
ret
add
shl
or
loopne
lret
mov
in
int
mov
std
fdivr
in
lock
fadd
loope
icebp
cld
lock
int
add
int
int
int3
call
leave
mov
mov
test
inc
shr
add
fcomip
pop
out
repnz
aad
cli
mov
out
sar
loope
leave
sti
std
into
stos
icebp
mov
fdiv
in
in
mov
les
out
ljmp
add
call
in
ljmp
test
aad
cmc
shl
std
stc
fcomip
call
repz
lock
out
aam
leave
icebp
aad
aam
mov
ret
fildl
out
idiv
or
push
int3
out
mov
jmp
lods
lret
mov
int
ror
rolb
add
shl
call
mov
rol
call
leave
incl
shl
ror
loope
testb
jmp
fmuls
ret
push
in
or
mov
mov
int
mov
shl
cmc
hlt
fnstsw
cmc
fiaddl
add
icebp
call
test
int3
mov
rol
fmulp
int
in
add
mov
cli
scas
lret
loopne
xlat
int3
mov
cli
fidivs
xlat
aad
rol
aad
add
in
fmull
shl
aad
in
fnstcw
iret
add
int3
bnd
fstp
lret
in
fscale
call
mov
out
into
int
mov
mov
lret
testb
add
paddusw
adc
mov
ret
int3
loopne
fcom
shr
enter
in
shl
clc
stc
add
jecxz
fadd
mul
mov
hlt
in
fcmovne
lret
mov
mov
in
shl
jmp
adc
in
lods
scas
out
mov
mov
mov
mov
add
cli
std
std
flds
jmp
add
or
mov
icebp
mov
xlat
lods
in
shl
out
sti
into
fadds
push
icebp
std
add
shr
xlat
ror
aad
inc
mov
sar
aam
mov
out
lret
scas
out
leave
lret
mov
lods
repnz
mov
aam
mov
rol
out
or
or
mov
div
jmp
leave
icebp
mov
ljmp
icebp
fcmovb
add
fmul
mov
in
enter
enter
mov
into
fcmovne
cli
rcr
out
iret
iret
rol
shl
out
shr
stc
loopne
shr
in
call
add
add
into
out
loope
movsl
shl
in
into
vpor
aad
hlt
in
rolb
pop
hlt
add
out
or
or
leave
stos
in
jmp
jmp
mov
in
mov
repz
fcmovnu
fmul
adc
cld
out
mov
faddp
aad
sti
lret
int
mov
add
add
leave
mov
in
in
loop
loope
shr
lock
mov
mov
add
sti
jecxz
fsub
mov
lods
loopne
ret
mov
shll
hlt
fcomi
mov
or
in
mov
bnd
sti
mov
sti
fldcw
fdivr
clc
mov
lock
or
iret
scas
int3
aad
out
in
fprem
out
mov
fiadds
mov
rol
pop
out
cli
add
fchs
jmp
call
hlt
iret
fsubrs
hlt
into
fidivrs
cli
iret
or
fcmovnu
lret
out
lods
out
ror
mov
hlt
aad
mov
idiv
aam
add
out
fimull
mov
mov
fcmovnbe
sar
hlt
into
mov
sti
icebp
or
or
or
ret
lret
ror
aad
idiv
mov
into
fnstcw
lret
add
out
mov
repz
clc
int
lret
mov
jmp
jecxz
add
call
lret
mov
mov
enter
call
lret
bnd
fcmove
pop
jmp
shr
mov
sti
icebp
icebp
mov
out
fadd
aad
lock
out
leave
fdivp
lret
mov
rcl
out
out
stc
aad
aad
fcmovne
clc
fadd
in
rcr
in
fmulp
push
leave
lret
loopne
shl
mov
cli
jmp
sti
ret
loopne
loopne
xlat
mov
in
out
call
mov
mov
mov
ret
mov
aam
mov
into
add
clc
std
fsubrp
mov
in
enter
hlt
mov
cli
out
repnz
out
fiaddl
std
ljmp
mov
aad
mov
flds
hlt
flds
mov
fsubp
rcl
shlb
sti
cli
ror
cld
mov
mov
cld
aam
add
int3
adc
jmp
enter
aam
mov
loope
rolb
repnz
or
fsubs
idiv
ret
clc
loope
add
icebp
rol
add
in
aad
cli
fldl
mov
mov
jmp
enter
in
out
fldl
out
testl
loopne
out
mov
into
test
std
jecxz
out
out
fdivr
or
std
hlt
mov
cmpsl
icebp
out
iret
lods
idivb
hlt
int3
out
in
in
aam
movl
fldlg2
loop
scas
lret
loop
mov
int
out
out
ret
push
mov
add
lods
mov
mov
not
cmc
ljmp
add
mov
leave
stc
test
fucomip
lods
fmulp
repnz
aad
clc
iret
fdivrs
aad
push
into
loopne
out
fucomi
leave
loopne
add
fisubrl
test
in
xlat
lret
fnop
rcr
into
mov
mov
repnz
aad
or
leave
scas
mov
out
shr
not
idivb
add
rcr
clc
lock
cli
out
loope
into
rorl
les
lret
shr
imul
add
mov
or
pmaxsw
in
ret
ret
in
mov
mov
clc
sar
loop
add
fiadds
aad
fcmovnu
or
push
loope
scas
mov
out
mov
int
std
xlat
rol
in
fadd
fiaddl
hlt
sti
loopne
movb
shl
lret
lret
rcl
repz
mov
int
jecxz
repz
jecxz
or
out
loope
in
mov
loope
mov
stc
jmp
in
ffreep
aad
out
in
pop
repz
neg
icebp
loop
imul
mov
fucomip
cld
xlat
aam
in
rol
fdivp
loop
in
adc
repz
int3
clc
rcr
aam
loop
add
fucom
ret
aad
cld
in
jecxz
ficoms
jmp
call
fcmovbe
sti
mov
cli
mov
in
testl
testl
pop
ror
out
rcl
leave
jmp
stc
mov
loope
mov
in
jecxz
or
add
stos
mov
mov
out
aad
icebp
mov
add
rol
cmc
fimull
std
repz
fucomp
mov
repnz
fmul
mov
rolb
or
loopne
jmp
out
enter
shr
fdivr
shl
mov
xlat
xlat
ffreep
lock
in
or
fmull
into
mov
jmp
fadd
shl
fld
std
stc
or
cmc
in
bnd
leave
in
jmp
hlt
lock
mov
loopne
add
clc
loope
stos
mov
enter
lods
xlat
hlt
iret
fnstsw
fucomi
loope
loope
adc
fisubrs
enter
in
mov
cli
mov
mov
in
out
les
fmul
adc
test
lock
out
shl
mov
fsubrp
jecxz
add
or
clc
in
out
in
rep
movsb
shr
in
lock
push
div
stc
imul
mov
or
fiadds
iret
out
in
mov
mov
rol
rcr
xlat
pop
add
lock
or
call
mov
sarl
jmp
mov
cli
cld
out
loope
add
shl
xlat
imull
mov
fadds
fadds
loop
cld
rol
ljmp
call
loop
stos
mov
mov
mov
loop
loopne
add
fmuls
cli
int3
in
rol
enter
ror
lock
cmc
out
fdiv
out
sti
pop
lock
fsub
hlt
cmc
out
out
rcl
mov
aad
lock
icebp
add
aam
repnz
cld
ret
clc
add
sti
int
iret
mov
call
into
out
in
ret
clc
pop
ret
out
add
fimull
add
call
divl
sti
test
repnz
mov
pop
loop
cld
hlt
iret
or
lock
mov
out
mov
fcom
sarl
cld
int3
ret
out
in
add
mov
leave
in
out
mov
out
out
int3
mov
std
call
cli
into
shl
aad
ror
shr
jmp
fucom
mov
mov
add
leave
into
jecxz
mov
in
leave
out
mov
out
in
fadds
add
hlt
loop
add
add
into
int
in
mov
mov
in
loopne
cmc
mov
fstp
loop
add
sti
clc
jmp
loopne
enter
leave
out
out
enter
in
sar
cli
call
mov
hlt
leave
hlt
ljmp
repnz
mov
aam
mov
in
in
inc
in
int3
sti
mov
mov
mov
icebp
mov
leave
idivb
mov
repnz
or
loope
pop
or
xlat
imul
mov
shlb
aam
clc
add
ret
roll
pop
std
fsub
add
in
mov
int
in
test
ror
fst
mov
not
out
repz
add
std
loope
fucomp
add
jecxz
les
in
enter
mov
hlt
xlat
roll
fcomp
hlt
ljmp
ret
out
lock
mov
into
aad
jecxz
into
xlat
fstpt
clc
add
jmp
loopne
movsl
divb
sar
mov
fldlg2
loope
mov
stc
lret
add
int3
shrl
mov
in
loope
mov
std
add
imul
std
repz
in
fsub
lret
lret
aad
lods
incb
mov
in
add
out
in
repnz
sti
jmp
fdivr
add
lods
fucomp
mov
shr
enter
hlt
sar
aad
in
ret
jmp
or
ljmp
mov
mov
sti
repnz
lret
in
repnz
std
fadd
or
or
test
ror
into
out
mov
mov
mov
repnz
fsub
out
jecxz
out
mov
mov
enter
fcmovbe
out
iret
mov
std
jmp
ret
aad
or
fcomp
mov
jmp
repnz
mov
mov
cld
sar
cld
fdiv
in
stc
stc
repz
ret
ret
in
shll
mov
repnz
stc
fucomp
aam
add
add
loopne
in
movsl
in
out
leave
lret
div
in
mov
mov
int3
repz
push
scas
ljmp
aam
lret
mov
mov
loop
aam
or
adc
out
scas
int3
rcl
mov
mov
ror
fsubp
int3
cld
enter
rcr
add
cld
adc
mov
fldt
mov
out
faddp
aad
fadd
loopne
hlt
or
mov
repnz
fcmovnb
jmp
jmp
aad
enter
mov
stc
lret
lret
add
jmp
lret
test
mov
leave
stc
call
ljmp
in
add
xlat
hlt
mov
fcomi
fidivl
stc
push
fisttpll
jmp
in
add
out
cmpsl
mov
mul
aad
sti
jmp
iret
iret
stc
repz
std
or
or
cli
aam
in
repz
aam
ret
repz
repz
loopne
loope
frstpm(287
fsubr
hlt
fnstcw
fdivp
fnstsw
mov
out
mov
mul
mov
out
jmp
lods
test
hlt
test
lock
mov
sti
into
pop
aam
into
int3
mov
shrb
ljmp
roll
aam
fucom
out
cld
iret
or
or
fmul
in
mov
into
ljmp
aad
out
loopne
lret
xlat
leave
fxch
or
out
mov
loop
mov
call
fsubp
hlt
icebp
lret
fsubr
rol
fnstsw
pslld
out
shll
repz
mov
stc
mov
in
fmulp
add
clc
shll
call
iret
std
jecxz
xlat
xlat
imul
push
hlt
or
loop
push
add
shl
in
icebp
jecxz
sti
shl
mov
mov
not
loop
loope
cld
fdivrp
mov
fucomip
mov
shl
rcl
out
mov
leave
fcomp
hlt
int
roll
icebp
fmuls
fstp
into
enter
icebp
scas
icebp
loop
loopne
mov
out
fdivrp
shl
aam
hlt
out
shr
add
iret
jmp
hlt
repnz
loopne
lret
divl
repnz
aad
loop
rol
add
add
fldl2e
out
enter
out
fnsetpm(287
bnd
not
int
sarl
push
loopne
or
push
fdivrp
in
fdiv
call
jmp
lock
lret
fcomi
out
out
or
in
or
cmpsb
out
fmulp
mov
stc
in
cli
shll
in
fcmovbe
mov
fcomp
vpaddb
int3
mov
mov
fcmovnu
iret
aam
aad
aad
rcr
rorb
idiv
cli
add
add
out
lret
rcl
stos
lods
mov
out
int
add
in
fsubp
iret
fdivrs
call
iret
in
mov
jmp
jmp
hlt
sar
dec
int
add
aam
cli
or
loop
loopne
lods
fsubr
enter
int
fmul
ljmp
loope
ret
add
cli
dec
stc
out
fadd
mov
stc
cmc
leave
jmp
int
hlt
faddp
loop
hlt
fcos
dec
iret
or
lret
mov
int
lret
jmp
incb
into
mov
xlat
jecxz
jecxz
pop
call
test
aam
sti
jecxz
jecxz
pop
aad
out
ljmp
add
fidivrl
lret
mov
aam
mov
mov
fcom
repz
repz
std
cli
lret
std
lret
out
or
out
loopne
aam
jmp
aad
mov
fsub
mov
push
ret
fdivr
out
test
les
in
lret
cmc
out
rol
stc
in
jmp
push
in
or
out
test
loope
lret
rol
cmc
into
lock
out
std
fcomp
add
xlat
out
loopne
aad
ljmp
ror
cli
in
mov
cld
mov
xlat
lock
sti
fstp
shl
fldlg2
lods
icebp
lods
shl
fnsetpm(287
in
hlt
mov
mov
hlt
out
aad
fsubp
or
add
int
jmp
hlt
mov
add
hlt
fdivrp
add
mov
or
or
mov
into
mov
mov
std
mov
or
fsub
loope
enter
cmc
mul
loopne
out
mov
fdivrs
or
out
iret
out
adc
mov
scas
out
leave
xlat
shl
mov
int3
mov
faddl
int3
hlt
filds
std
or
int3
icebp
mov
div
aam
mov
fld
cli
clc
pop
or
clc
fld
or
jmp
in
adc
jmp
ljmp
cli
jecxz
add
repz
fcmovu
jmp
add
out
jmp
mov
mov
mov
in
rcl
mov
les
ffree
push
push
lret
in
iret
sub
cmp
jne
mov
add
mov
mov
mov
xor
add
mov
jmp
mov
inc
mov
mov
xor
add
cmp
jae
mov
sub
xor
add
mov
mov
mov
cmpl
jbe
mov
mov
add
mov
mov
jmp
mov
mov
sub
mov
mov
jmp
xor
inc
jne
movzbl
xor
add
mov
jmp
mov
xor
add
movzbl
sub
mov
mov
xor
add
mov
ror
mov
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
xor
add
mov
sub
mov
jmp
mov
xor
add
mov
sub
mov
jmp
movl
jmp
mov
dec
mov
cmpl
jbe
mov
dec
xor
push
pop
div
mov
mov
mov
movl
movl
movl
movl
movl
mov
xor
jmp
adcb
push
xor
pusha
push
dec
repz
and
test
jnp
cwtl
jnp
jmp
iret
lds
cli
fcomi
fdivp
mov
ljmp
lret
push
lods
iret
xlat
out
mov
lods
cli
iret
lret
mul
out
in
fxch
loopne
icebp
out
in
sar
out
in
add
out
out
movsl
divb
mov
in
fcomip
stc
cld
out
shl
or
loope
pminsw
or
into
in
lods
enter
in
aam
cli
ljmp
rol
dec
loop
or
out
add
leave
mov
mov
sti
ror
lock
fnstcw
fmull
rcr
adc
jecxz
fcmovbe
enter
hlt
mov
shl
or
rcl
imul
fucomp
or
lret
call
in
in
sti
out
icebp
fprem1
in
loop
in
stc
rorl
rolb
add
enter
shlb
repnz
lock
sarl
not
pmullw
fmuls
in
jmp
enter
enter
clc
fdivrp
fsubr
mov
cld
ffree
loop
aad
shl
jmp
rol
in
call
leave
cld
add
ret
out
in
cmc
out
hlt
loopne
shl
iret
in
aad
rcr
cld
jecxz
fcomi
mov
aad
add
hlt
fmull
or
loope
in
aad
out
rcr
hlt
mov
mov
in
ret
out
fadd
lret
or
shrb
iret
stc
clc
cmc
fnstsw
pop
add
cld
call
decl
mov
cmc
loop
call
into
into
sar
mov
jmp
lret
shr
mov
ljmp
idiv
aad
xlat
sti
add
sti
in
or
bswap
or
in
out
shr
jmp
aam
mov
loop
mov
std
jecxz
ret
push
iret
push
std
out
iret
shr
mov
test
fcmovb
in
icebp
mov
add
fcmovnu
incl
ljmp
call
xlat
into
fnstsw
mov
aad
icebp
shl
stc
or
pop
mov
divb
lret
dec
add
out
loope
fxch
stc
neg
loopne
out
jmp
mov
std
out
fsub
add
sti
repnz
std
add
enter
in
lds
int3
lock
shr
shl
mov
or
mov
push
hlt
lret
in
scas
out
mov
out
loope
aam
dec
in
mov
add
or
or
out
out
out
iret
loop
scas
fsub
out
out
jmp
cld
mov
xlat
int
pop
jmp
enter
add
or
lret
stos
out
iret
xlat
sti
jmp
lock
out
pop
in
stc
xlat
in
fldl2e
jecxz
enter
in
repnz
mov
mov
clc
ror
out
cld
loopne
fst
icebp
cmc
add
out
lret
rcl
mov
cli
ljmp
mov
aam
movb
incb
cld
fmulp
out
shl
scas
lods
mov
lock
jmp
fst
int
into
aam
shl
add
fildl
add
ror
icebp
xlat
in
fdiv
iret
cli
aad
mov
ret
or
leave
jecxz
out
int
jmp
out
iret
enter
lret
idiv
mov
iret
mov
push
lret
out
out
ljmp
int
jmp
out
cmc
mov
or
add
jmp
test
out
call
cli
clc
repnz
add
rcl
bswap
add
in
iret
xlat
shl
xlat
lret
jmp
aam
out
aam
mov
lock
shr
add
in
in
call
into
in
cld
hlt
add
mov
fdivr
ret
testl
fdiv
ljmp
aad
lods
div
lret
iret
clc
iret
add
cmc
loopne
aam
out
loopne
or
fsubp
shrl
scas
mov
jmp
into
repnz
cli
lret
add
leave
sti
in
push
repz
fdivl
in
repz
in
mov
aam
in
out
not
push
std
stc
repz
scas
cmc
in
shlb
lret
fcmovnu
jecxz
lock
add
aad
push
out
iret
lods
shr
lods
out
loopne
ljmp
call
pop
clc
rol
in
add
fcmovnu
fsub
add
mov
mov
mov
fidivs
mov
ffree
inc
clc
cld
into
or
into
fdiv
shl
lods
in
vcvttpd2dqx
xlat
jmp
mov
in
icebp
or
roll
aad
or
mov
jmp
out
aad
mov
add
aam
shr
in
into
loope
icebp
mov
shr
int3
mov
mov
mov
repnz
lock
jmp
shrl
shl
iret
call
jmp
rcl
fldl2e
clc
fadd
ljmp
repnz
call
repnz
mov
cmc
repz
in
ret
iret
add
jmp
shl
loop
imull
clc
call
fdiv
add
or
clc
pop
out
shr
icebp
sar
sti
rol
lret
sti
add
imul
out
fadd
out
call
stc
int3
leave
test
into
shlb
shrb
jecxz
out
fcmove
lret
enter
or
ret
ret
scas
lret
repnz
jmp
in
fmul
push
fadds
stc
mul
ret
loopne
out
jmp
mov
std
pop
incl
or
out
lret
lret
out
ror
lock
mov
mov
lock
rcl
in
aam
lret
add
stc
std
in
enter
mov
out
in
mov
shl
sar
idivb
lret
fmul
out
lret
hlt
fcomi
int3
stos
scas
rcl
mov
mov
clc
sti
sarb
out
repnz
cld
loopne
std
pop
icebp
scas
loopne
in
ljmp
jecxz
loope
fst
add
idivb
psubsw
in
int
int3
xlat
lock
out
xlat
clc
mov
repz
clc
sar
aad
in
or
pop
loopne
loope
out
int
leave
in
fcmovnu
lret
hlt
cmc
out
in
mov
int
rol
or
loop
add
loopne
fstp
ljmp
jmp
lret
idiv
fcomp
mov
loope
add
pand
repnz
out
in
out
iret
jmp
out
std
sar
sarb
lret
fsubr
int
in
in
mul
rol
mov
shl
mov
shl
fimuls
in
lret
pop
ror
shll
into
icebp
aad
rcl
sti
out
iret
fdivrp
cld
clc
repnz
fcmovu
std
out
leave
jmp
shlb
mov
into
shl
xlat
out
fidivrs
in
lret
fadds
ret
add
ljmp
iret
lret
cmc
aam
in
mov
ret
fst
fxch
ret
push
cmc
lret
mov
lods
int3
scas
shr
lret
fcmovnb
in
mov
add
fildl
lock
push
testb
or
cmpsb
stos
lock
sti
les
cld
loop
icebp
in
fcmove
neg
out
or
in
jecxz
lods
in
enter
in
jmp
mov
loope
ljmp
shr
xlat
fldt
fidivs
add
mov
rorb
fcom
pop
ror
test
shl
in
idivl
into
stc
int3
repz
leave
out
psraw
mov
not
out
cmc
call
loope
cli
mov
in
clc
fcomp
fisubrs
int
sarb
lret
mov
aam
jecxz
pop
imul
fucomi
out
int
fsub
int3
in
loope
hlt
aad
jmp
mov
ret
paddsw
filds
jmp
divb
call
jecxz
div
int3
aad
hlt
add
jmp
cli
into
in
icebp
repz
ljmp
fdivr
fdivp
ror
fdivrp
add
loop
in
in
adc
shrl
lret
out
mov
cli
fucom
cmc
add
fcmovne
fsub
roll
icebp
in
mov
sti
lret
enter
out
neg
mov
loopne
hlt
fdivr
lret
pop
clc
std
into
mov
icebp
shl
jmp
neg
imul
enter
repnz
les
in
add
fisttpll
int
mov
jmp
rcr
out
les
mov
loope
lret
in
cli
out
add
ljmp
div
jmp
fidivrs
int3
clc
aad
add
clc
out
clc
repnz
xlat
lock
lret
into
call
add
hlt
fyl2x
fnstcw
leave
add
lret
in
lret
out
call
int3
std
aad
ret
mov
out
in
rcr
mov
ror
jmp
mov
cmc
cli
add
fisttps
push
aad
ljmp
call
in
lret
hlt
call
in
lock
add
out
or
faddl
lods
leave
imul
div
call
shr
sti
cli
repz
jmp
jmp
icebp
mov
xlat
repnz
mov
jmp
aad
icebp
loopne
cli
fcmovnu
loope
add
in
add
out
shl
call
lret
in
ret
add
rcr
clc
pop
fistl
out
in
mov
jmp
mov
fcmovu
cmc
in
shr
fcom
aam
cld
sti
jmp
jmp
out
scas
out
loopne
mov
add
shr
cld
xlat
shl
repnz
jmp
add
lret
vpaddusw
mov
out
lock
ror
lock
hlt
std
icebp
mov
out
in
push
add
jmp
rcl
lret
fstpt
filds
add
std
or
shll
out
fsubrp
mov
fdivp
add
fildl
int3
in
out
repnz
out
shr
ret
out
mov
fcmove
out
aad
faddp
iret
out
or
iret
cmpsb
mov
out
int3
jmp
aam
cld
clc
testl
jmp
int3
into
loop
mov
loopne
in
call
mov
fcmovb
std
icebp
ret
aad
in
int
fsubp
ljmp
repnz
mov
cli
mov
in
shr
rolb
icebp
ret
pop
or
repz
out
out
lret
in
neg
hlt
icebp
ret
iret
not
icebp
cli
call
add
in
std
push
add
shlb
jmp
mov
loope
cld
ret
rcl
out
out
out
in
cmpsl
jmp
ror
int
mov
mov
int3
xlat
int
add
neg
call
push
in
mov
out
shr
into
fsubr
ljmp
ret
rcl
call
in
cmpsb
icebp
jmp
lock
int
hlt
lret
call
jecxz
fstp
jecxz
or
ret
call
std
mov
out
add
icebp
lock
loopne
jmp
out
ret
jecxz
jmp
fdivrs
enter
loopne
testl
out
shr
lock
jecxz
jmp
mov
xlat
leave
cmc
aad
pop
clc
mov
add
lret
movl
shrb
into
fdivs
out
mov
mul
mov
sti
add
cmc
in
jmp
jmp
hlt
out
out
in
iret
aad
sti
lret
fyl2xp1
stc
aam
lock
aam
push
ljmp
scas
divl
ljmp
lock
cli
int
jmp
icebp
mov
hlt
mov
lock
add
fadd
out
mov
or
in
cmc
fcmove
clc
rcr
mov
shl
out
in
fcmovbe
icebp
idiv
mov
fcom
cld
lret
leave
sti
clc
or
mov
iret
jmp
lret
mov
repnz
call
in
jecxz
cld
cli
lock
shl
incl
icebp
fmul
out
mov
jmp
neg
mov
aam
push
mov
add
in
in
int3
ljmp
fcmovu
shl
aad
jecxz
std
out
pop
iret
std
les
out
mov
mov
mov
in
in
lret
int
icebp
aad
repnz
in
sti
into
add
or
out
jecxz
mov
icebp
mov
sti
mov
loope
fpatan
hlt
fsubr
roll
out
or
ret
lock
mov
icebp
in
out
jmp
mov
shr
in
mov
or
or
shl
in
iret
lret
shl
mov
cli
in
fistpll
sti
lock
rol
or
fldl
ret
shl
enter
mov
call
std
cld
hlt
loopne
fmuls
fcoms
shrl
fcmovu
mov
repnz
clc
mul
stc
test
jmp
jecxz
loopne
in
idivl
xlat
fcomp
xlat
fsubp
out
add
add
xlat
loop
jecxz
push
sti
clc
mov
aad
lock
ljmp
out
xlat
in
int
push
or
call
ror
lods
iret
in
shl
out
in
in
mov
aad
fcomp
jecxz
add
enter
out
ret
mov
in
in
mov
ret
or
lock
inc
pavgw
jecxz
test
jmp
cli
mov
repnz
leave
rcl
mov
shl
icebp
mov
loopne
sti
in
lock
jmp
repz
enter
mov
cmc
icebp
shl
fdivr
cld
add
fstp
cli
loopne
test
ror
mov
in
imul
idiv
fpatan
call
cld
in
int
repnz
add
out
fsub
cld
ret
in
loopne
loop
jmp
aam
fistpll
fistpll
add
call
fpatan
leave
out
loop
enter
mov
lock
loop
out
or
leave
in
les
ror
fcomi
jmp
loopne
loopne
std
shl
shr
incb
push
or
out
out
lods
rol
repnz
stc
divl
mov
fcmovnb
mov
or
or
mov
mov
test
aad
fcom
mov
fcomp
clc
aam
call
clc
or
icebp
shl
in
fcomi
mov
add
test
in
enter
fmul
lds
fcmovnb
mov
into
fsubr
lock
stc
pop
mov
decl
or
cmc
in
leave
les
not
out
mov
clc
xlat
aam
loop
add
ret
lret
add
fcomip
out
fstp
iret
int3
mov
mul
in
out
add
fnstsw
shl
or
in
in
lret
out
fxch
ret
mov
mov
fcmovbe
scas
aam
mov
fprem
out
clc
aad
fsub
lock
loopne
leave
out
into
add
ret
ljmp
aam
sti
aad
add
in
repz
jecxz
cmc
or
in
enter
shrl
jmp
sti
aad
imul
mov
jmp
std
or
aad
call
ljmp
int3
fcmovnbe
fdivr
loopne
add
push
xlat
add
in
or
enter
scas
call
out
cmc
mov
mov
add
ret
flds
cli
lock
test
into
mov
shl
aam
add
cli
or
iret
in
fsubr
jecxz
lods
iret
jmp
call
enter
sarl
div
fsubr
out
in
loopne
in
mov
lret
lock
xlat
leave
int
cld
icebp
mov
add
push
cli
or
cli
int3
repnz
in
aad
div
lret
icebp
fcom
rcl
out
enter
ret
stc
enter
jmp
into
out
cmc
in
jmp
mov
rol
loopne
cli
loopne
cli
testb
into
std
loop
test
lods
into
in
int3
clc
shl
into
clc
ret
fdivp
fcomp
out
add
in
ret
int3
call
mov
not
call
repnz
in
lret
or
in
in
faddp
repz
mov
imul
shl
iret
out
pop
add
mov
clc
shlb
cmc
into
mov
mov
loope
std
sti
jmp
push
ljmp
repz
leave
in
mov
lock
div
fstp
stc
repz
fcmovu
cli
hlt
fdiv
add
or
in
repz
lock
repz
fmul
in
out
neg
incb
rolb
loopne
out
mov
shl
mov
lock
xlat
int
add
sti
int3
add
neg
add
out
std
repz
fmulp
in
loop
iret
mov
out
fucomi
fpatan
add
stc
out
lret
cmpsl
lds
rol
stc
clc
lret
add
shl
xlat
add
sti
or
out
loop
cld
loope
loopne
jecxz
rcl
ret
out
stc
leave
cmc
int
cli
mov
loope
or
les
jmp
out
in
mov
aam
mov
iret
loop
mov
ljmp
les
mov
sti
int
aad
loopne
into
out
cli
or
mov
leave
dec
out
lret
out
mov
repnz
repz
into
out
fdivr
fscale
add
std
hlt
ljmp
lret
mov
not
repnz
int3
in
sti
xlat
add
test
mov
call
iret
mov
out
fcmovnu
iret
lods
jmp
cli
out
hlt
repz
fcmovb
rolb
out
sarb
lret
ror
mov
mov
rcl
icebp
clc
shl
filds
or
jecxz
int3
out
ret
lret
sti
fcmovu
shl
mov
rcr
repz
loopne
or
jmp
mov
mov
leave
cmc
dec
loopne
cld
push
mov
cld
fmul
push
cli
int3
mov
lret
mov
fdivrs
loopne
add
mul
or
fiadds
add
or
mov
loop
mov
mov
in
rolb
fsin
pop
in
lret
into
movb
ljmp
cmc
mov
mov
enter
roll
add
sti
lock
or
loope
test
repz
shl
cld
int
enter
out
add
cmc
add
ljmp
mov
mov
mov
rol
cmc
mov
sar
mov
loopne
add
jecxz
leave
leave
out
shll
fcmove
mov
fcom
std
mov
out
jmp
lret
out
loopne
lret
cmc
ret
ret
mov
int
repnz
stc
out
testb
add
loop
jmp
lds
int
int
mov
stc
mov
loop
ret
sar
or
shrb
neg
jmp
mov
jmp
in
out
icebp
std
loope
pavgw
in
sarb
ljmp
in
int
loop
mov
or
lds
jmp
lret
fsubrp
mov
enter
lock
out
mov
repnz
or
add
decb
test
lods
aad
cmc
enter
xlat
inc
mov
clc
ret
pop
ret
jmp
stc
add
int3
mov
rcl
repz
mov
into
pop
add
jecxz
sti
push
or
or
jmp
sti
in
fucomip
shr
mov
fprem
shl
fsin
cli
adc
out
call
sti
cmc
in
icebp
mov
cli
icebp
sarl
add
push
out
fdivr
add
call
mov
out
xlat
loopne
mul
int3
jecxz
add
loop
in
loope
push
rcr
repnz
mov
enter
aam
out
sarb
loopne
fld
ljmp
jmp
mov
leave
xlat
out
mov
mov
fadds
lret
lret
jmp
out
shl
aam
in
not
cli
icebp
mov
fsubr
call
repnz
out
fsubr
out
in
out
into
into
shr
std
in
hlt
mov
std
add
rcl
std
enter
rcl
movsb
int3
enter
int
enter
int
add
fnstsw
fsubrp
into
std
rcl
ret
fmul
xlat
mov
out
aad
hlt
sar
pop
stc
add
out
hlt
clc
in
jecxz
shl
loopne
call
stc
shl
lret
out
cld
push
repz
aad
std
loope
fmulp
int
in
hlt
divb
in
mov
hlt
stc
loope
cld
ret
in
call
int3
lock
out
mov
out
fcmovnu
mov
sti
shl
aam
cld
jmp
leave
loopne
fxch
shl
mov
ljmp
mov
xlat
fsubrp
fdiv
neg
lock
idiv
into
cmc
int3
int
mov
mov
neg
jmp
fst
aad
add
add
lret
cmc
loop
add
call
mov
aam
aam
mov
loop
loop
in
or
loop
in
loop
mov
mov
mov
call
in
clc
fidivs
loope
fincstp
idiv
ret
int3
mov
mov
repz
aad
in
lret
icebp
mov
fisttps
fiadds
add
aam
fucomip
fidivrs
out
cli
mov
hlt
mov
sar
add
add
into
incl
por
mov
hlt
mov
mov
div
cmc
mov
ret
ror
or
std
cmc
cld
or
out
mov
call
int
into
fmul
mov
loope
jecxz
testb
pop
leave
ljmp
lret
mov
mov
mov
inc
mov
or
fcomp
in
repnz
repnz
xlat
test
in
add
sar
xlat
fxch
cmc
sar
add
loope
out
add
fisubrl
out
in
mov
int3
stc
std
fsubr
fmul
cli
fmulp
loope
icebp
ljmp
out
add
call
fidivrs
aam
loopne
fcomi
fadd
ffreep
pop
aad
fcmovb
mov
sarb
in
xlat
neg
roll
repnz
or
add
mov
hlt
idiv
loopne
iret
in
in
fmulp
stc
cli
lock
leave
pop
leave
std
aam
add
ret
mov
jmp
lods
int
les
jecxz
out
out
cli
enter
ret
test
lret
aam
leave
sti
in
mov
int3
mov
enter
add
ret
in
shr
flds
add
push
hlt
push
fld
imull
sar
mov
aad
loop
xlat
mov
loope
lret
inc
stc
loop
shrb
xlat
out
jmp
in
fcomp
mov
xlat
sti
fdivrp
sti
in
iret
into
int
fmul
out
lret
mov
clc
ret
hlt
mov
ret
jmp
aam
in
fucomi
fadd
loop
fdivr
fst
cmc
filds
fimull
fmulp
lods
int3
ljmp
mov
mov
add
mov
add
or
icebp
cld
in
leave
aam
in
lods
out
ret
hlt
out
mov
mov
fstpt
clc
aad
add
add
out
ret
aad
mov
int3
in
add
shl
cmc
mov
aam
fildll
jecxz
shl
out
in
fucomp
f2xm1
add
rolb
repz
loop
call
jecxz
leave
aam
leave
shl
int
cmc
in
ret
add
jecxz
std
stc
cld
leave
neg
out
leave
ror
icebp
loope
xlat
out
out
mov
in
lock
std
ret
ret
ret
clc
or
fsubr
or
icebp
movsl
loopne
test
div
clc
jmp
neg
aam
cmc
lock
ljmp
pop
lods
stos
xlat
mov
mov
testb
loopne
out
aam
out
ret
enter
loopne
into
int
lret
sti
lret
in
jmp
call
mov
lret
add
lret
fnstsw
aad
aad
fstpt
mov
add
cmc
in
add
or
icebp
ret
mov
shr
mov
rcl
mov
in
in
fsubp
mov
or
incb
scas
loopne
cmc
out
icebp
in
call
sti
in
out
mul
xlat
aad
add
call
add
jmp
aad
icebp
mov
mov
in
les
int
pop
or
mov
ljmp
in
ljmp
mov
loop
in
or
in
fidivl
mul
mov
jmp
hlt
mov
mov
fdiv
in
add
rorb
add
repnz
mov
in
icebp
loop
test
rcr
fstp
fdivp
add
shl
in
fcmovnu
loopne
jmp
add
out
enter
shlb
xlat
mov
mov
xlat
ffreep
cld
call
out
mov
ror
out
repnz
icebp
mov
lock
stc
fsubp
repz
ret
jmp
clts
fnsetpm(287
lock
mov
lret
mov
lock
loope
cld
sar
out
or
push
or
mov
div
hlt
divl
mov
mov
xlat
add
cmc
incb
call
int
lods
loop
cmc
icebp
in
mov
rcl
out
cld
xlat
frndint
leave
jmp
shl
fmul
imul
out
sarl
mov
pop
clc
mov
cld
test
aam
shl
mov
fmul
ret
mov
mov
stc
jecxz
xlat
scas
mov
mov
mov
rcl
add
cli
loope
fisttpl
aam
aam
repnz
scas
lret
into
out
jmp
mov
mov
stc
ror
rcr
repz
sti
lret
mov
ret
xlat
mov
loopne
leave
ror
in
xlat
ret
lock
std
fadd
push
fmuls
lds
in
call
ret
hlt
lret
mov
in
dec
rcr
mov
int
shl
call
add
fsub
xlat
loopne
rol
vpsubusw
fxch
in
fcomp
clc
pop
ffree
sar
fcomip
jecxz
iret
add
fsubr
int3
jmp
aam
rcl
mov
hlt
aad
add
cld
out
fmuls
lods
rcr
scas
out
ret
clc
shl
mov
aad
lock
inc
call
in
fcomp
fmul
lret
leave
icebp
shr
icebp
enter
add
icebp
mov
rcr
mov
fadds
add
mov
test
fnstsw
shr
sar
out
bswap
lret
int
enter
mov
in
aad
clc
sarl
repnz
rol
or
mov
in
rcr
iret
lret
xlat
stc
clc
cli
mov
imul
aad
int
cmc
loope
cmc
add
in
cli
out
in
rcl
sti
divb
mov
repnz
cli
lock
out
mov
aam
add
in
jecxz
mov
cli
int3
cmc
sarb
mov
fdiv
clc
or
in
in
pop
out
fmulp
repnz
vpor
mov
imul
stc
mov
stc
hlt
fldl
fucomi
scas
out
test
mov
mov
shr
not
mul
hlt
repz
jmp
clc
int3
mov
cli
shl
enter
mov
hlt
fldl
neg
loop
ror
out
fisttpll
stc
push
jecxz
test
into
aam
out
neg
mov
in
in
cld
loopne
fmul
adc
test
int
in
mov
mov
rcl
fcmovb
cmc
hlt
movl
mov
in
mov
into
rcl
fdiv
stc
out
pop
std
incl
clc
add
fadd
jecxz
out
fisubrl
cmc
ljmp
jmp
std
into
inc
in
out
jmp
les
ficoml
or
in
ret
idivl
cld
mov
in
add
testb
pop
repz
fsub
loop
ror
call
fucomip
cld
fcmovbe
ret
xlat
lock
repnz
add
fcmovnu
cli
adc
lods
lods
mov
ret
loop
in
les
lock
add
pop
lret
in
jmp
or
scas
ret
lods
repnz
out
fcmovne
fmulp
ror
fcmovu
hlt
push
in
hlt
jmp
add
fcmovbe
add
flds
add
faddp
shl
shl
mov
mov
mov
jmp
in
fsubp
jecxz
cmc
fcmovnb
decb
repnz
test
jmp
cli
mov
in
add
out
into
in
or
into
mov
lock
std
clc
fucompp
stc
sti
out
add
add
add
jmp
mov
movsb
mov
test
iret
into
mov
fldz
rcl
add
hlt
in
push
jecxz
lret
mov
shr
scas
ror
sar
cmc
leave
repz
loopne
loop
in
imul
ret
movhlps
mov
in
hlt
mov
int3
in
fxtract
aam
filds
in
add
out
bswap
hlt
in
out
mov
xlat
in
test
mov
std
aad
rol
movb
cld
cmc
stc
cli
icebp
mov
mov
iret
call
repnz
fdivrl
in
out
lret
stc
lret
add
loop
mov
loop
scas
mov
in
neg
cmc
clc
aam
add
or
fadds
mov
in
in
mov
add
cli
aad
mov
rcr
cli
ret
lret
loop
in
lret
fxch
out
ljmp
mov
mov
mov
fincstp
fdivrp
ljmp
jmp
mov
rcr
shl
fcmovu
mul
enter
faddp
cli
loope
in
ljmp
fdiv
into
repz
iret
into
cmc
shl
cli
jecxz
fstp
clc
hlt
pop
out
out
fcomi
loop
fcomp
or
divl
mov
ljmp
rcl
push
out
fiaddl
jmp
jmp
loop
jmp
int3
mov
jecxz
incl
sar
jmp
push
ljmp
repz
cmc
jmp
sti
out
fadd
decl
ljmp
in
repnz
icebp
rcl
shl
mov
lods
fmul
fidivrl
jmp
fcom
fmull
enter
or
lock
sar
hlt
iret
aam
hlt
call
filds
loope
jmp
out
in
shl
scas
test
f2xm1
ret
mov
add
out
cmc
push
repz
fcomp
movsl
fucomp
hlt
out
leave
shr
fmulp
rolb
std
pop
repz
ret
or
add
adc
shrb
shlb
not
iret
add
out
fdivrp
fcmovu
loope
aam
loop
jecxz
fmul
out
imul
ljmp
idiv
stc
jmp
sar
rolb
cli
fcmovne
pop
std
fimull
stos
mov
rol
clc
in
in
out
enter
in
out
fcmovnu
add
or
lret
aad
add
fldpi
icebp
out
in
int3
ljmp
loope
into
clc
mov
pop
out
aam
fsubr
out
test
scas
out
in
out
mul
int
mov
inc
or
add
lret
out
int
lds
shl
out
enter
cld
in
mov
ret
or
aam
pop
fsubrp
lret
jecxz
out
mov
shlb
in
sarb
movl
std
or
in
mov
into
aad
enter
into
mov
push
jecxz
fucomi
mov
ret
lods
into
iret
icebp
fsubrl
in
jmp
cmc
loop
repz
testb
lret
pop
out
mov
ret
aam
sar
sti
fcomp
xlat
loop
in
add
rol
clc
mov
out
shl
out
fdivl
mov
clc
ljmp
cld
mov
shl
ljmp
in
mov
lods
aam
repnz
cmc
into
add
add
cmc
lock
neg
fadd
ljmp
loopne
loopne
lds
fucompp
fsubrp
fsub
ret
leave
push
in
out
loope
ffree
lds
add
mov
sub
mov
movl
cmpl
je
mov
xor
mov
xor
lea
mov
xor
div
mov
xor
add
mov
xor
jmp
cli
adc
adc
pmulhuw
jge
jne
rcr
jnp
cwtl
jnp
not
sti
imul
stc
cli
mov
loopne
aam
decb
frstpm(287
clc
into
jecxz
mov
in
test
icebp
out
in
inc
repnz
out
add
les
shl
push
clc
les
loope
rcr
jmp
hlt
into
cli
out
mov
roll
int
repz
jecxz
fcomi
fdivr
fnop
jmp
in
mov
cmc
in
lret
iret
iret
idivl
incl
out
ljmp
rol
ffreep
mov
rcr
lock
sti
mov
std
out
rcr
decb
aam
or
fdivl
aad
repz
mov
lock
test
sar
xlat
add
out
mov
mov
mov
stc
fsubp
out
clc
clc
int3
add
lret
enter
enter
mov
div
cli
loopne
lods
std
xlat
ror
repz
shlb
add
psrad
add
in
mov
into
mov
icebp
mov
mov
mov
fcomp
ret
rcr
icebp
jmp
out
scas
jmp
in
out
xlat
fldpi
clc
hlt
out
cmc
jmp
loope
aad
in
lock
lret
in
out
in
loop
into
ret
out
fucomi
iret
ror
out
shr
repnz
int3
aam
sti
std
std
add
or
in
lret
loopne
test
fnstenv
loop
cli
cli
fiadds
sar
aad
incl
add
leave
jmp
fcmovne
mov
sti
jmp
mov
cli
loopne
or
add
lret
enter
lret
shlb
sarl
repz
add
fcomp
rol
fcmovne
jmp
ljmp
into
call
iret
repnz
sti
cmc
iret
hlt
aad
add
ljmp
in
les
sti
loope
testl
jecxz
int
loope
lock
enter
mov
lock
aad
sti
loop
in
pmulhuw
in
in
mov
out
mov
shl
fdivrl
fiaddl
add
shl
lret
iret
jmp
mov
lods
repz
mov
aad
ret
in
hlt
jmp
pop
jecxz
in
icebp
lret
out
loope
ljmp
lock
jecxz
hlt
cmc
or
hlt
or
fst
fidivs
fcmovb
fadd
mov
into
sti
aad
stc
jecxz
add
fsub
enter
jmp
lods
in
mov
push
add
sti
sarl
add
add
jmp
xlat
repz
mov
dec
fcom
add
fsub
push
cmc
pmullw
ret
loopne
fsubp
shl
movsb
divb
into
jmp
fidivrs
rol
inc
out
adc
lret
out
mov
lret
repz
aam
into
sti
ror
cli
aam
add
std
add
fsub
fdivr
add
lods
rcl
mov
fidivrl
mov
shl
repnz
add
or
lret
out
loopne
mov
leave
out
jmp
add
mov
roll
out
mov
cmc
loope
stc
aad
fdivp
mov
hlt
fcomi
pop
mov
loopne
add
mov
ror
xlat
mov
jecxz
enter
cmc
fisttpl
or
ljmp
mov
lods
ret
fincstp
lock
into
rolb
mov
jmp
ret
in
out
repz
int
lret
fildll
loope
lock
loopne
ret
lret
jmp
add
in
mov
fsubr
aad
mov
int3
into
cli
aad
aam
fld
in
mov
add
add
fsubr
shl
shl
mul
in
stc
mov
sti
shl
rolb
lret
in
paddd
rcr
rol
sti
cmc
call
sarl
aam
fcmovnb
fadd
lret
add
in
out
repnz
out
mov
fucomi
mov
add
sti
int
int
shl
aad
scas
lret
repnz
in
div
imul
lock
fcmovnu
fisttpll
jmp
hlt
out
in
loope
bnd
lret
aam
out
out
mov
add
fmull
cmpsb
out
jecxz
in
stc
mov
fdivrs
mov
hlt
repz
mul
les
ljmp
scas
mov
loopne
loopne
jmp
repnz
add
std
int3
mov
clc
shl
add
shr
repnz
mov
stc
clc
mov
out
fstp
sti
or
testl
jmp
in
mov
fsubr
cli
repnz
mov
rcl
cld
cmc
add
or
in
loop
into
fst
xlat
in
leave
ljmp
add
sarl
shl
lret
add
cli
or
repz
leave
loopne
enter
in
cmc
mov
std
mov
aam
jmp
shl
idiv
stc
loope
test
enter
fcomip
jmp
jecxz
repz
out
cmc
add
in
int
shl
les
jmp
into
loope
add
clc
ret
jmp
icebp
icebp
xlat
int3
lods
in
enter
in
fmulp
into
mov
aad
add
clc
fucomp
or
lret
fsubr
shr
in
ror
fdecstp
jmp
loop
sti
int3
add
ret
ret
fadds
fiaddl
or
shr
not
in
icebp
mov
cld
neg
stc
fdivrs
out
add
int
enter
mov
cmc
jmp
mov
mov
push
vpmullw
into
out
fsubr
rol
sarb
shl
clc
in
iret
out
mov
fst
out
push
in
enter
test
ret
lods
aad
clc
loopne
int
or
add
adc
lods
shll
imul
in
call
in
aam
out
hlt
clc
aad
scas
in
jecxz
int
sar
shr
rcr
repnz
mov
inc
jmp
aam
shl
in
rcl
aad
jmp
loope
aam
repnz
iret
mul
rcl
imul
out
or
in
repnz
in
out
call
mov
mov
sti
push
idiv
jmp
inc
std
fmull
ret
shl
test
mul
out
sar
mov
add
out
shl
fadd
or
out
pop
leave
in
std
loope
mov
mov
fiadds
shr
stc
std
mov
lret
out
lods
in
ret
mov
jecxz
leave
out
xlat
out
jmp
add
mov
std
out
div
fdivr
cmc
call
loop
out
mov
out
mov
jmp
shr
mov
aad
sar
sti
or
enter
fdivrl
out
jmp
out
test
idiv
loop
fdivrp
add
ffree
stc
out
or
in
in
repnz
imul
in
fdivr
enter
ror
std
fimull
ljmp
jmp
mov
rcl
cmc
in
mov
ret
iret
frndint
shl
ljmp
fadd
repz
shl
repz
mov
add
clc
xlat
cld
fucomi
or
add
ljmp
shr
jmp
mov
shl
hlt
in
mov
push
in
aam
or
shrl
int3
mov
lock
aam
mov
into
mov
leave
or
into
push
int
cmpsl
rcl
icebp
mov
into
shr
call
int3
out
repnz
jmp
out
clc
repz
scas
mov
leave
int3
loope
in
mov
jmp
fmul
cmc
cld
fcomip
mov
pop
sti
fiadds
test
in
mov
mov
in
fildl
enter
out
testl
push
push
std
jmp
ret
test
rcl
mov
enter
mov
int3
out
shr
dec
or
add
in
fsubp
aad
out
out
aam
fmulp
cmc
fnstsw
add
in
stc
fisttpl
pminub
mov
rcl
repnz
rcl
clc
mov
shr
int3
add
add
cli
out
incb
or
or
mov
jmp
lret
into
jmp
stc
hlt
mov
ffree
out
sar
or
out
shl
icebp
call
mov
call
in
fcmovb
or
incl
or
add
test
in
mov
ror
call
aad
mov
add
ffree
in
in
shl
lret
lret
mov
mov
fucomip
loopne
in
repnz
add
loop
add
rcr
iret
ror
repz
out
icebp
mov
mov
in
fldl
int
bnd
hlt
fcomi
or
or
clc
push
lods
leave
icebp
fst
xlat
mov
out
ljmp
xlat
stc
or
or
lret
or
shl
in
xlat
scas
aad
hlt
fldl2e
les
rcr
aam
in
rol
push
add
fsubr
mov
hlt
mov
in
in
fdivrs
xlat
loope
or
mov
push
lds
or
test
fmulp
out
int
aam
cmc
call
shl
mov
loope
enter
into
fsubr
enter
shl
mov
into
lret
fdivr
mov
sti
std
mov
enter
ljmp
test
hlt
in
idivl
lock
fmull
cli
stc
jecxz
lock
ror
int
int3
mov
mov
fdivrs
mov
mov
in
add
scas
out
repnz
loope
aad
repz
int
mov
add
roll
loop
fcmove
fcmovnb
pop
rcl
lret
mov
mov
out
ljmp
in
shl
out
fmul
mov
ret
xlat
lock
stc
jmp
shr
roll
loopne
jecxz
in
mov
shl
loope
mov
mov
out
jecxz
in
int
clc
fprem
lock
cld
fdivr
lret
out
fnstsw
jmp
lret
lods
rcl
mov
fnstcw
add
out
lret
pop
fmulp
rcl
mov
sti
lock
jmp
add
loop
fdecstp
out
lret
loope
jmp
mov
cmc
aad
cli
fnop
fdivr
add
or
enter
mov
repz
rol
lock
cld
mov
add
ret
add
add
iret
std
into
out
lret
loope
int3
loope
shr
in
fstpt
int
rolb
in
or
add
in
cld
cli
stos
shl
lret
stos
loop
loopne
fucomip
cli
enter
rcr
test
repz
lret
not
jmp
shl
iret
int3
clc
shl
push
shl
loop
aad
push
or
ljmp
call
repnz
call
sar
repnz
or
iret
cmc
into
call
out
xlat
in
in
rcr
call
iret
pop
add
add
decl
add
loope
pop
enter
rcl
divb
aam
mov
fdiv
or
fdivrp
fsts
lret
fdivs
ror
out
mov
clc
ret
iret
push
in
repnz
mul
jmp
add
jmp
fsubp
lret
in
loope
out
lret
aad
clc
mov
cli
loope
call
or
in
loope
scas
out
lock
in
in
mul
jecxz
int3
add
add
ljmp
in
lret
mov
enter
out
repnz
not
ljmp
in
jecxz
fsubrp
cli
fucomp
aad
in
loopne
fsubr
mov
out
out
leave
in
leave
repnz
repz
in
push
cmc
loopne
stc
out
add
add
into
ret
mov
mov
int
mov
add
rol
icebp
or
enter
cli
push
adc
iret
jmp
shl
out
repz
div
rcr
jecxz
jmp
clc
movb
in
or
icebp
jecxz
out
in
lods
out
mov
ror
mov
loopne
add
in
add
std
fsubr
ljmp
test
int3
mov
icebp
mov
pop
shl
jmp
fildl
into
or
in
mov
mov
mov
mov
aad
fucomi
aad
in
add
in
fisttps
mov
mov
aad
sarb
cld
int3
in
repz
int3
xlat
fldl
in
out
mov
lods
loopne
into
jmp
int
fucomi
int3
mov
clc
loop
push
in
out
int
fsubrl
lret
out
in
sar
leave
mov
fcmovbe
jecxz
fucomi
int3
into
leave
in
out
lods
into
lret
xlat
iret
shll
loope
loopne
out
in
loopne
out
ret
rol
fxtract
fxch
call
loope
mov
in
in
out
add
ret
test
std
leave
jmp
loopne
testb
ljmp
xlat
ror
lret
icebp
lock
in
hlt
sarl
pop
in
movb
clc
in
or
ret
rcl
scas
div
mov
mov
out
mov
cld
mov
pop
clc
enter
lret
int
stos
in
loopne
stos
mov
cli
shlb
sti
fdiv
iret
loope
push
in
in
jecxz
leave
in
add
fdivl
mov
repz
xlat
mov
fcmovnu
call
loopne
mov
in
repnz
fxch
lret
repz
add
stc
repnz
loopne
imul
out
add
lods
cmc
scas
xlat
fcmovbe
int3
aam
lret
in
in
jmp
sti
rorl
fldl
call
add
loopne
loopne
loop
lret
mov
in
jmp
pop
jecxz
add
or
std
pop
add
in
cld
repz
ffree
test
mov
mov
fucomp
loope
fdivr
add
roll
shr
enter
cld
repz
rol
sar
mov
fucomp
adc
pop
mov
int
lock
ret
fcmovnbe
sti
fcmovnb
sti
loopne
jmp
vpminsw
aad
stc
in
out
in
lret
testl
call
testl
add
ljmp
mov
mov
out
mov
lret
int
push
or
aad
int
ret
repnz
ret
add
out
incl
imul
mov
rcl
test
mov
mov
sti
hlt
push
aam
add
add
jmp
fisttps
in
call
mov
test
in
mov
mov
add
cli
cmc
fmull
push
fxch
test
shl
call
mov
clc
enter
loope
stc
std
cli
fdivr
stc
repnz
shl
lret
aad
repz
sarb
fnstsw
incb
testb
out
aam
out
out
rcl
jmp
iret
ljmp
loope
mov
mov
jmp
into
rcl
stc
fldz
in
mov
aam
or
std
pop
in
leave
std
in
rcr
test
loope
ljmp
icebp
mov
cmc
ret
roll
mul
or
add
jecxz
out
leave
rcr
rcl
repnz
mov
fldl2t
decl
fcmovu
fildl
in
lods
jmp
not
lret
mov
jmp
fcmovnbe
sti
out
push
add
pop
or
pop
out
fmuls
lret
fsub
icebp
shr
mov
lret
std
fdivr
mov
mov
leave
flds
add
scas
mov
mov
sti
mov
into
iret
stc
in
rcl
std
mov
xlat
clc
out
ljmp
out
loopne
les
mov
add
add
out
jmp
fidivs
aad
scas
aam
int
repnz
mov
or
aam
std
or
add
fisubrs
jmp
mov
fcom
aad
shl
loope
call
stc
mov
lds
stc
add
mov
iret
ret
stc
aad
mov
faddl
incl
push
cli
add
lret
mov
lods
mov
in
fmul
enter
aam
cmc
mov
jecxz
ljmp
out
hlt
int
in
aad
iret
hlt
stc
fcmovne
sti
add
add
hlt
lret
fxam
fmul
jmp
iret
loope
sti
loop
hlt
leave
cli
jmp
idivl
in
rolb
add
test
ljmp
lods
shl
in
mov
enter
in
rcr
mov
hlt
or
add
ror
jmp
mov
sar
fdivr
mov
pop
out
flds
rorb
iret
out
mov
enter
iret
int3
scas
aam
lock
fcmovnbe
icebp
fidivrl
fdivp
xlat
out
in
adc
mov
loope
mov
hlt
repz
stc
loopne
in
icebp
stc
xlat
in
ret
fstp
push
in
imull
mov
into
fptan
enter
cli
lock
mov
jecxz
mov
adc
int
loop
jmp
ret
stc
fdiv
push
loope
fst
push
shl
add
lret
jecxz
in
xlat
mov
enter
cli
rolb
loopne
leave
add
fcomp
lds
cmpsl
repnz
shl
int3
out
fdiv
out
call
mov
std
stc
cld
int
in
out
shl
iret
fidivrl
add
shr
movl
iret
aad
ret
ror
jmp
repnz
mov
lock
sar
add
out
repz
rol
repz
sti
lret
cli
div
leave
mov
fcomp
flds
or
add
out
add
in
out
in
mov
ret
fstpt
repnz
jmp
cli
stc
cld
rcr
fndisi(8087
fmull
ret
shl
mov
neg
lods
mov
lret
lret
loope
int3
fmuls
icebp
hlt
fmull
in
out
enter
shl
ljmp
out
xlat
clc
mov
leave
int
cli
sar
jmp
clc
pop
leave
loopne
or
shrl
in
stc
sti
out
rcl
cli
fadd
add
hlt
or
fcmovu
fimull
cli
cld
loopne
shrl
ror
fidivrl
rcl
rol
int3
pop
cmc
lret
or
shl
shl
ror
mov
mov
icebp
mov
clc
fcmovb
in
fsincos
icebp
hlt
lock
std
repz
mov
mov
lret
repz
aad
jecxz
sar
stc
add
out
lret
in
shr
int
stos
out
fcom
int
mov
clc
int3
ret
lock
call
loop
ljmp
ret
div
int
sarl
mov
shr
fldl2t
ljmp
repz
ljmp
enter
add
or
rolb
add
mov
iret
ror
mov
aam
fsubrp
leave
clc
ret
cld
cld
ret
mul
enter
stc
add
in
mov
jmp
lret
clc
out
fcmovu
hlt
ret
lock
shr
ffreep
aad
iret
add
lret
icebp
aam
in
in
rol
int3
rcr
cli
loope
aam
ret
add
or
cld
leave
jmp
imul
mov
sar
out
out
cli
call
mov
fucomi
sti
hlt
or
fsub
jmp
mov
out
fxch
in
jecxz
incl
mov
in
add
std
repnz
mov
ret
mov
cmc
mov
in
mov
rolb
in
ud0
or
leave
lods
mov
int
ljmp
cli
rcl
lock
rorb
cld
out
add
iret
repz
add
in
shl
mov
div
in
mov
rcr
std
sarb
repnz
add
or
out
ret
lret
sti
icebp
shr
fcmovnu
icebp
rcl
in
jecxz
loop
sti
sti
push
cld
ret
leave
repz
lret
aam
lds
fstpt
cli
stc
faddp
or
lock
ror
sti
mov
aam
mov
in
call
mov
fsubr
push
jmp
hlt
lret
into
pop
fld
mov
lock
mov
icebp
out
repz
mov
int3
repnz
add
roll
jmp
or
fcomp
loop
in
mov
call
jecxz
mov
clc
or
icebp
loope
div
fdivr
or
jmp
ljmp
aam
ret
into
add
loopne
in
fadds
or
leave
add
fsincos
adc
jmp
ret
shrb
out
mov
in
ret
vpsubsw
hlt
or
ljmp
ljmp
stc
mov
frndint
loopne
test
loope
loop
ret
repnz
mov
cmc
mov
int3
fcmovnb
cld
mov
fcmovnu
sar
fsub
add
in
fucomp
ret
test
out
iret
ljmp
neg
cld
fldpi
jecxz
jecxz
loope
or
in
out
movsb
mov
rcr
lret
enter
sar
loope
jecxz
aad
sti
hlt
enter
leave
mov
lret
mov
dec
iret
ljmp
ret
in
add
out
in
in
fdivrl
test
call
fdivrs
cli
ljmp
add
lods
aam
int3
in
mov
add
mov
xlat
mov
movb
int
fsubrl
sar
cli
lret
int
add
loopne
roll
add
loope
or
scas
int
ret
in
shl
scas
lret
rcr
xlat
add
fidivrs
add
aam
push
fcmovne
out
mov
mov
scas
fmul
imul
fdivr
clc
fcomp
fidivrs
loop
fadd
leave
icebp
int
repz
jecxz
cmc
mov
aad
int
hlt
fnop
fsub
lock
enter
jmp
repz
shrb
iret
mov
cld
sti
shl
loop
loop
or
shl
fdivrs
vpand
jmp
fbstp
not
in
add
ljmp
stos
jmp
repnz
mov
icebp
fdivrs
ret
rol
shl
cmc
aam
les
mov
icebp
xlat
mov
shr
add
mov
loopne
std
add
in
mov
into
divb
jmp
lock
push
fadd
loopne
in
jecxz
jmp
in
jmp
in
fdivrp
fsubrp
hlt
mov
shl
push
cmc
in
incb
add
xcrypt-cfb
cmpsl
out
ret
out
mov
rcl
clc
into
clc
ret
int3
std
mov
loopne
add
in
fmul
faddl
mov
jmp
jecxz
aad
jecxz
repz
sar
fldl
or
out
jmp
lret
in
into
int3
ljmp
add
mov
mov
pop
fildll
jecxz
mov
mov
shr
add
ret
add
loop
fsubp
add
lret
jecxz
fdivrl
sti
shl
mov
stc
ret
repnz
fcomip
hlt
out
int3
add
test
repz
out
into
cmc
aad
loop
rcr
in
fucomip
lret
jmp
rcr
ret
enter
mov
imul
in
jecxz
aam
loope
loopne
clc
jmp
jmp
lds
fnstcw
add
jecxz
icebp
std
div
in
jmp
or
mov
faddp
iret
rol
lods
fadd
sti
mov
mov
icebp
fucomp
fsincos
roll
repnz
loopne
stc
sti
or
jmp
icebp
aad
mov
aad
fcmovu
icebp
mov
mov
add
out
out
std
push
icebp
lods
mov
jmp
stc
cli
int
cld
call
loope
aam
clc
shl
add
cmc
int3
shr
ret
loope
ljmp
stc
into
hlt
fcmovb
in
mov
out
jmp
ret
mov
call
mov
mov
add
cld
loopne
cli
in
stc
push
repnz
aad
lods
enter
out
sti
sar
div
loope
fsubp
ret
loop
neg
xlat
lret
fcompp
fucomi
ror
scas
rol
shrb
repz
idiv
enter
fsubp
or
in
std
out
lret
lret
lret
icebp
lock
enter
add
div
lret
ljmp
jmp
repz
scas
int3
stc
rcr
int
int
mov
fsub
cmc
stc
cli
icebp
ret
lret
loope
out
into
aad
shl
repnz
rol
loopne
pop
push
in
or
adc
jmp
mov
mov
xlat
lret
cli
fucomi
mov
or
jmp
in
scas
in
ror
in
cli
in
mov
mul
fcmovnbe
aad
shl
add
or
loope
cli
leave
jmp
in
in
mov
leave
clc
call
add
hlt
icebp
int3
ljmp
add
fcomp
mov
mov
lds
in
mov
std
xlat
not
hlt
out
sti
in
fndisi(8087
ret
in
lret
sar
shll
mov
lock
shl
add
paddsb
mov
loop
mov
into
stc
out
fucompp
mov
add
hlt
loope
loopne
fcmovnbe
dec
in
lods
lods
aad
mov
jmp
repz
leave
leave
jmp
in
add
leave
push
enter
ret
repz
lock
fidivrl
mov
cld
in
leave
clc
add
rol
scas
in
int3
shl
cmc
mov
iret
add
jecxz
loop
lds
mov
push
leave
repnz
fucomip
rol
vpmulhuw
clc
mov
in
int3
ret
sti
loopne
fcmovu
in
call
in
ror
in
shrb
std
rcr
shr
fcomp
hlt
inc
cld
pop
leave
fxch
or
stc
add
loopne
out
ret
iret
shll
fcom
rcl
mov
stc
or
add
out
in
pop
test
xlat
test
lret
ljmp
aam
add
jmp
push
ljmp
aam
loop
cmc
hlt
lret
cli
lret
rcl
cld
jmp
sti
out
in
fstp
fsubr
loopne
in
out
mov
icebp
shr
iret
aad
testb
cld
in
add
jecxz
icebp
mov
iret
vpand
lds
mov
movb
clc
jecxz
add
lret
loope
fucom
scas
ret
mov
ret
fnstenv
call
into
add
mov
fiadds
push
aam
add
loopne
in
call
fcos
aam
add
sti
hlt
std
out
enter
int3
ret
shll
mov
stc
leave
testb
cli
add
or
lret
ffreep
sarl
ljmp
in
sar
hlt
jmp
cli
loope
or
add
mov
mov
scas
jmp
mov
aam
testl
hlt
add
in
fcmovne
out
mov
out
aad
fcmovnu
out
fdivrl
repz
bswap
movb
jmp
lret
call
ror
ljmp
mov
shl
iret
psubb
repz
loopne
jmp
in
cld
mov
sar
fcom
ret
aam
stc
lret
fstp
in
call
mov
ret
clc
repnz
fiadds
in
in
loopne
fmul
lods
mov
mov
call
rol
int3
add
imul
aad
loopne
adc
mov
jmp
fcmovne
out
int3
dec
fst
clc
sar
out
pop
out
call
fidivrs
repnz
mov
add
fadd
out
or
loop
out
fucomip
mov
int3
loope
mov
lret
into
mov
fcomi
lock
cmc
jecxz
call
xlat
hlt
ret
lret
ljmp
mov
lret
int
loope
test
icebp
mov
mov
std
fcmovu
cli
call
mov
xlat
fdivr
fadd
stc
in
stos
lret
scas
lods
out
out
lock
stc
in
sti
lret
sar
fadd
sti
test
add
mov
mov
repnz
repz
mov
call
out
iret
push
mov
mov
les
mov
mov
fisttpll
cld
fld1
loope
into
test
mov
out
cli
mov
shr
add
mov
shl
loope
jecxz
ret
ror
mov
icebp
jecxz
call
imul
fcmovbe
stc
mov
syscall
mov
icebp
scas
out
mov
fdivr
neg
repz
int3
sar
leave
or
jmp
ret
test
repnz
leave
lret
in
repnz
cld
stc
hlt
stc
fdivr
lret
iret
out
out
shl
loop
shlb
mov
rcl
out
into
loop
fdivr
in
jecxz
add
add
into
cmc
repnz
in
lret
mov
in
jecxz
rcr
aad
repz
jecxz
add
add
cld
std
incb
fcmovb
out
loope
cmc
out
mov
mov
aad
into
leave
out
roll
ret
cmc
or
ffree
sti
movups
mov
mov
rcl
mov
loop
sti
fxch
pop
add
or
add
ftst
add
mov
fmul
into
shr
out
hlt
cmc
ljmp
push
loop
fcmovb
clc
into
or
repnz
mov
ret
cli
call
fiadds
fldl
loop
hlt
aam
out
sarb
shl
shr
les
shl
sti
jecxz
out
leave
idiv
enter
leave
test
rcl
lock
fld1
mov
push
hlt
roll
push
call
in
loop
mov
fcmove
mov
mov
mov
mov
fdecstp
loop
cli
add
adc
mov
loope
ljmp
idivl
cmc
ret
stc
mov
or
out
in
mov
iret
lret
hlt
xlat
clc
int3
call
mov
cmc
fmul
shl
enter
ljmp
hlt
jecxz
leave
mov
cli
cli
rolb
mov
xlat
aad
test
lret
int3
test
jmp
rcl
mov
repz
add
std
repz
loop
aam
ljmp
enter
mov
ret
repnz
mov
repnz
xlat
repz
jmp
aad
out
ret
int3
faddp
cmc
lods
shl
enter
std
rcr
in
sti
into
stc
add
mov
rorl
lret
mov
into
repnz
neg
fxch
iret
sti
ret
fnstsw
rolb
adc
fidivrs
cmc
div
mov
mov
int3
mov
add
loop
clc
jecxz
out
loop
enter
xlat
leave
ljmp
int3
cli
clc
mov
aam
in
push
iret
jmp
lds
in
leave
aam
stc
test
fnstcw
enter
jmp
mov
out
rcl
repnz
jmp
mov
rol
mul
sti
out
push
in
fadd
lret
test
aad
leave
shlb
repnz
add
loopne
in
fmull
in
ljmp
lock
aad
loopne
int
add
test
or
mov
mov
jmp
ljmp
aad
jecxz
add
or
in
or
lods
out
out
mov
jecxz
mov
in
jmp
jecxz
int
stc
add
ljmp
in
int3
jecxz
mov
icebp
out
mov
jmp
int
iret
ret
cmc
in
fucomp
sti
or
out
jmp
aam
mov
xlat
mov
mov
rol
call
stos
lods
movsl
out
ret
in
in
int
fstp
ret
flds
shl
fsub
pmuludq
loope
shl
out
loopne
cmc
cli
mov
aam
in
iret
mov
int
filds
leave
stc
leave
repnz
ret
shr
ljmp
in
lock
loop
push
loopne
lds
into
ret
mov
loope
cmc
scas
aad
into
in
mov
sar
cld
icebp
clc
pop
or
add
sar
scas
out
mov
loopne
int
enter
xlat
faddl
fsub
loopne
lret
add
fdivrs
in
sarb
mov
mov
sar
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
add
mov
jmp
mov
inc
mov
mov
xor
add
cmp
jmp
xorb
lock
cs
inc
dec
jp
add
xlat
std
lret
aam
lret
stos
test
mov
mov
dec
in
jmp
loopne
fidivrs
fstp
aad
fmul
jmp
out
in
ljmp
enter
add
faddl
inc
add
out
in
or
mov
rol
jmp
mov
aad
in
out
or
in
ljmp
scas
icebp
mov
fld
loopne
in
aam
mov
rol
xlat
hlt
repnz
out
in
push
lret
out
int3
xlat
out
lock
shl
mov
loope
std
repz
sar
mov
cld
add
out
int
icebp
movsb
scas
int
aad
jmp
fbstp
ret
ret
fcom
jmp
loope
fmuls
or
in
cli
enter
lock
mov
lock
icebp
in
hlt
push
fcomi
or
out
rcl
int
in
mov
fnstcw
mov
add
in
in
call
lret
out
icebp
out
mov
cli
cld
mov
repz
out
jmp
lret
adc
iret
int
ljmp
fdivrp
fcmovbe
add
in
mov
fld
add
or
int3
fsubp
lret
fsubrl
mov
in
xlat
aam
rcl
cli
mov
fistpll
hlt
fmul
in
test
hlt
enter
lock
clc
out
push
faddl
rcr
inc
call
fdivl
out
out
sti
shl
iret
ret
push
out
rcl
clc
lds
cld
lret
paddusb
les
lret
mov
sar
enter
faddp
sar
out
jmp
jecxz
in
repz
test
aam
divb
rcl
mov
fsub
ret
shl
lret
in
jecxz
int3
in
mov
jmp
mov
int3
mov
jmp
lds
clc
pop
int
or
in
test
enter
stc
out
out
mov
pop
inc
add
std
add
cli
out
lret
leave
leave
mov
stos
fyl2x
clc
mov
mov
ret
std
lock
loope
ret
stc
lret
lret
add
jmp
out
loopne
scas
iret
out
lods
repnz
fcmovnu
leave
icebp
mov
jmp
into
out
xlat
jmp
out
mov
std
mov
icebp
lock
or
fcmovne
leave
adc
loop
neg
leave
lods
shl
cli
mov
fchs
shr
pop
add
pop
jmp
or
out
cld
in
iret
int
loope
cmc
in
fcmovbe
out
sti
lret
add
loop
or
add
add
rcl
in
mov
in
repnz
repz
std
hlt
loopne
mov
add
leave
hlt
clc
push
add
out
loope
shl
xlat
mov
fcmovu
out
mov
lret
iret
cli
loop
loopne
clc
dec
jmp
out
in
test
scas
in
shr
mov
into
enter
aad
stc
mov
add
cmc
cmc
add
jmp
mov
mov
cmc
mov
mov
add
add
in
push
rolb
in
fisttpl
ror
ljmp
lret
int
in
call
rolb
call
rolb
ljmp
fdiv
in
mov
mov
jmp
lret
lock
fsubr
repz
fdivr
jmp
mov
out
int3
les
add
mov
mov
std
fsubr
or
ror
in
ljmp
call
filds
shl
aad
cli
ror
aad
ljmp
mov
cmc
sti
lret
lret
clc
mov
in
cli
shl
or
add
lret
into
fucom
ror
ret
out
loop
test
testb
leave
mov
stc
not
flds
out
in
jmp
lret
test
int3
rol
sarb
not
fmulp
jmp
fsub
incl
loopne
test
shll
rcl
leave
out
shr
lret
cmc
into
in
add
std
cli
in
fsub
lods
scas
out
ret
ljmp
neg
loope
cli
incb
jmp
jecxz
fucom
in
lret
vpaddsb
fst
cli
repz
mov
cld
enter
fimuls
loopne
in
lock
aad
out
hlt
mov
repz
hlt
jmp
add
or
icebp
mov
in
jmp
enter
aam
mov
mul
clc
lock
add
loop
loope
scas
lods
movsl
shr
test
mov
mov
shr
rcr
or
iret
in
in
out
loope
call
lods
test
aad
cmc
into
in
lock
add
iret
jecxz
out
stos
jmp
fnstsw
clc
stc
mov
std
cld
fisttpll
inc
bnd
loope
repnz
lret
stc
out
jecxz
cli
mov
add
in
rol
call
mov
mov
clc
loopne
mov
lret
add
stc
or
out
jecxz
cmc
ljmp
clc
add
loope
jmp
stc
or
movb
fistpll
lret
out
out
mov
fsubr
mov
shr
aad
mov
neg
pop
out
scas
scas
in
ljmp
fucomip
jmp
mov
fisttps
call
dec
adc
out
mov
mov
out
call
testl
add
pop
sti
icebp
stos
jecxz
ljmp
fmul
in
rcr
jmp
lock
ret
fsubr
push
lret
mov
shll
not
mov
into
add
fcmovnu
fcom
add
into
add
ret
jmp
lods
ret
mov
fxch
jecxz
int
rcl
push
loop
fmulp
fimull
or
ret
iret
les
hlt
mov
shr
mov
aam
jecxz
shl
mov
lret
imulb
mov
add
mov
inc
aad
jecxz
add
iret
mov
jmp
int3
vpmuludq
mov
add
mov
loopne
scas
lods
scas
ret
mov
into
enter
enter
hlt
faddp
rcl
out
into
lret
loop
ret
shl
repz
mov
cmc
iret
xlat
fsqrt
mov
repz
rcr
enter
lds
fmul
out
out
loope
test
mov
fstp
icebp
in
stc
repnz
aam
xlat
loope
cmc
add
lret
add
fst
out
hlt
out
int
in
xlat
hlt
out
mov
pop
out
lret
testl
out
repz
ffree
ror
mov
call
mov
in
std
fcmovnbe
hlt
or
out
add
icebp
in
loop
fsub
out
call
fadd
idivb
icebp
add
clc
les
jmp
out
ljmp
mov
ret
xlat
out
cmc
shl
out
int
add
imull
out
mov
out
aad
add
ret
icebp
clc
movl
cli
into
loopne
repz
shl
enter
sti
repz
lret
sarb
xlat
lret
iret
push
loop
out
ret
mov
lods
sar
aad
mov
out
lret
call
aam
sti
or
hlt
out
or
rol
ror
enter
lret
ror
hlt
std
fdivrs
add
mov
ret
sarb
mov
fmul
mov
in
idivb
add
icebp
out
ret
ljmp
stos
ljmp
aad
mov
into
fucomp
icebp
in
std
add
loope
push
int3
add
int
loop
shr
enter
mov
mov
cmc
icebp
mov
cmc
loope
jmp
add
out
les
out
iret
hlt
jmp
std
loop
ret
ljmp
iret
les
mov
shl
div
fnstenv
mov
jecxz
hlt
push
or
repz
loopne
loope
shlb
rcl
cmc
fnsave
stc
pop
cli
jmp
fcmovne
add
or
loopne
jmp
jecxz
loopne
mov
in
aam
add
rcr
cli
shr
mov
adc
out
out
mov
in
vpsubw
aad
mov
fsubrp
in
out
into
std
loop
mov
fmul
cli
repz
in
jmp
mov
clc
add
jecxz
fld
sti
fiaddl
faddl
out
push
mov
test
xlat
into
fdiv
cli
int
push
fnstsw
sti
add
enter
int
iret
mov
jmp
cmc
xlat
out
out
clc
call
add
add
call
lret
out
jecxz
mov
fsubr
ljmp
add
scas
out
in
mov
mov
loop
lock
mov
aad
stc
icebp
roll
pop
lret
int
call
test
mov
icebp
mov
fcom
in
cld
mov
add
div
cmc
fdivrp
shll
icebp
out
hlt
lods
stc
in
icebp
add
icebp
std
out
out
roll
hlt
adc
call
mov
in
xlat
shr
mov
mov
aam
aam
sti
ret
jmp
out
ljmp
ljmp
into
rol
div
fsub
add
or
iret
clc
icebp
shr
out
int
mov
repz
sar
add
fnstcw
cmc
aam
add
or
aad
in
repz
push
repz
shl
add
fmulp
call
lods
jmp
shr
in
repnz
leave
in
add
in
add
stc
int
or
aad
rcr
mov
cli
mov
out
incb
mov
icebp
cli
fprem1
shl
in
cli
shl
out
rol
repnz
mov
mov
repz
test
cld
shr
out
pop
iret
mov
shl
int3
push
idivb
sar
add
xlat
fcmovu
std
add
xlat
mul
mov
cmc
in
call
add
repnz
cli
out
ret
ljmp
repz
lock
mov
jecxz
decb
hlt
pop
int3
add
mov
call
stc
int3
rcr
ret
rorb
sti
jmp
or
out
loopne
shrl
shr
shl
add
lock
stc
inc
or
int3
pop
loop
lret
ljmp
out
shl
mov
fnop
loopne
jmp
lret
ljmp
iret
leave
call
mov
mov
loope
add
enter
filds
call
in
shr
les
ljmp
lock
cmc
jmp
leave
or
in
in
repz
mov
scas
shl
mov
leave
fcomp
in
out
cld
fnclex
mov
add
fcmovnbe
loopne
clc
out
loope
movsl
lock
leave
div
fdivs
out
add
loop
testl
call
mov
loope
mov
int
out
enter
add
ljmp
lds
mov
lret
aad
mov
fcomip
shl
push
stc
add
loope
add
fsubrp
jecxz
jecxz
repnz
mov
hlt
mov
mul
div
int3
lret
add
lret
out
jecxz
out
lods
mul
sti
test
in
mov
sti
fiadds
rol
ret
out
out
fildl
ljmp
cli
icebp
iret
out
fcmove
lret
mov
add
jmp
hlt
pop
fisubrl
lret
ljmp
mov
repz
sarl
in
or
call
in
out
mov
jmp
mov
repnz
jmp
fildll
cli
shll
neg
rcl
pop
aad
shl
or
in
loopne
ljmp
out
clc
mov
mov
repnz
rolb
cmc
pop
or
add
repz
repz
mul
mov
mov
mov
mov
fld
filds
add
aad
add
add
in
movsl
leave
iret
aam
enter
iret
mov
loopne
add
shl
ret
add
jmp
out
or
out
int
icebp
mul
mov
enter
repnz
add
out
repz
in
loope
test
sti
jmp
mov
idivb
shr
mov
enter
fcomip
or
mov
shl
in
aad
jmp
loopne
into
shr
in
fcmovu
in
loope
int
out
leave
fisubrs
ror
in
fistpll
cmc
test
out
add
ret
loop
loop
mov
mov
out
mov
out
mov
or
fcmovnu
cli
leave
in
fmull
scas
out
leave
out
shrb
aam
stc
pop
flds
aam
stc
lret
add
iret
fsubrp
in
lret
mov
in
aad
int3
stc
ljmp
jecxz
lret
add
enter
iret
scas
int3
out
jmp
leave
mov
ror
sti
rcl
filds
lret
loopne
loopne
cld
push
ret
ror
ret
in
mov
in
out
in
ror
cld
lock
in
clc
test
into
jmp
cld
cli
enter
repnz
loope
stc
rcl
out
int
stc
aad
test
div
out
iret
or
stos
iret
repz
aam
loopne
int
ljmp
stc
aad
fxtract
jecxz
lock
fdivr
ret
in
mov
int
mov
add
aad
fnstcw
add
add
fildl
leave
lret
mov
aad
jmp
mov
stc
std
icebp
lret
ret
jecxz
or
fiaddl
push
pop
out
int
out
mov
ror
ror
mov
into
rol
out
loop
add
rcr
in
jecxz
in
out
aam
loop
shl
cli
repz
out
sti
ret
xlat
mov
out
pminub
hlt
xlat
out
leave
aam
aam
in
into
fldl
cld
mov
fcmovb
loop
in
ljmp
mov
in
lret
cli
repz
xlat
push
loopne
lret
xlat
fyl2xp1
push
out
ret
loopne
iret
test
call
leave
fcmove
idivl
out
cmc
int3
loopne
scas
scas
ror
ljmp
mov
rcl
lock
sar
jmp
testl
shl
shlb
test
loopne
mov
cld
jmp
cli
in
in
leave
fldcw
into
mov
in
fmulp
int3
std
hlt
int3
std
aad
loop
ret
loope
or
push
add
hlt
call
aad
call
repnz
inc
push
add
cmc
int3
test
jecxz
out
out
hlt
lret
jmp
add
in
out
ret
xlat
cld
loope
lret
fsub
imul
aad
fcmovne
mov
fdivrs
sti
stc
imul
fcmovbe
ljmp
add
stc
repnz
repnz
shll
lret
int3
jmp
add
fdivr
shl
ud2
pmulhuw
into
lods
mov
shl
repz
shll
mov
stc
testb
fdivrp
fmuls
lret
scas
repz
mov
mov
in
sti
test
xlat
incl
fmuls
lret
call
in
aam
hlt
mov
lock
call
test
leave
int
mov
mov
mov
in
iret
enter
xlat
int3
pop
add
les
or
stc
add
in
add
fsubrs
not
sti
fnstcw
aam
lock
flds
ljmp
mov
lock
in
xlat
aam
mov
sti
aad
icebp
ffreep
mov
rol
push
fmulp
repnz
out
mov
jmp
mov
mov
vpmovmskb
out
out
add
loop
shlb
div
mov
mov
into
rol
neg
fcomip
fadds
pop
enter
lret
iret
lock
lods
out
out
cmc
stc
mov
iret
mov
add
in
fldl
repnz
cmc
jmp
fucomip
mov
shl
mov
clc
sti
loopne
or
iret
iret
ret
mov
xlat
int
mov
lret
aad
sarl
add
aam
repnz
fmulp
out
icebp
repnz
mov
cmc
stc
fadd
mov
testb
fsubp
loopne
ret
rcr
rcl
lret
jmp
push
clc
shl
jecxz
loope
cli
fstpt
or
pop
fmul
repz
loopne
test
iret
mov
in
sti
lock
ret
add
loopne
add
mov
lods
xlat
mov
in
rcr
fcmovnu
loopne
aam
repz
jecxz
push
std
out
mov
aad
mov
rolb
mov
int
loopne
cli
fisttpl
add
out
out
call
std
mov
sti
add
fidivrs
rcl
ret
enter
mov
in
icebp
leave
leave
int
loopne
icebp
add
add
leave
push
add
fsubrp
in
fsubl
int3
shl
jmp
sti
out
loop
add
mov
filds
out
call
repnz
fucomp
lock
mov
aam
into
fsub
aad
in
iret
iret
aam
push
out
fmulp
or
shr
loopne
in
clc
lret
clc
mov
cmc
push
fcmovb
fcmovnb
in
adc
mov
leave
loopne
leave
in
mov
add
enter
sti
fdivrp
add
add
test
aam
mov
int3
mov
fdivrl
ret
add
out
ljmp
mov
stos
icebp
rol
in
icebp
mov
cmc
in
add
fucomi
or
lret
lods
lret
ret
rcl
scas
in
fucomp
fucomip
fldl
lock
in
cld
clc
imul
aam
add
out
or
not
xlat
jmp
in
std
mov
in
sarb
add
ret
in
jmp
int3
loope
shr
enter
in
cmc
mov
clc
in
shl
int
filds
add
pop
fmull
adc
shl
mov
mov
mov
fdivs
int
fiadds
add
hlt
lret
out
lret
ret
leave
out
in
hlt
in
lods
rcr
fcmovbe
jmp
xlat
lock
or
mov
iret
icebp
ror
fprem
rcr
repnz
ret
stc
add
ret
or
out
mov
lret
ljmp
lods
lret
lret
in
cmc
ljmp
leave
out
mov
xlat
loopne
lods
fcmovbe
sarb
cmc
mov
mov
aad
repz
stos
fcom
xlat
int3
shl
lds
shl
mul
shl
in
mov
fsub
call
call
shll
repz
in
mov
add
lock
in
cld
leave
test
out
lret
sar
mov
hlt
sar
mov
add
into
stc
jmp
out
in
int
int
cmc
ror
jmp
mov
add
jecxz
mov
dec
vcvttpd2dq
loop
lods
stos
int3
fsubr
int3
mov
push
in
out
sti
neg
jmp
add
mov
ljmp
cli
clc
fxch
into
pop
std
fcmovbe
jmp
fmul
cli
loop
fdivp
mov
int3
in
call
int
add
repnz
add
aam
cld
jmp
mov
icebp
lret
loopne
aad
mov
aam
shl
fcompp
sti
std
out
push
add
test
in
shll
int3
mov
lret
in
xlat
hlt
in
add
enter
lret
shrb
int3
sti
les
call
stc
ret
add
std
push
add
add
xlat
shl
int3
shlb
mov
fcmovbe
rcr
clc
lock
or
or
lret
mov
lds
leave
cld
call
xlat
xlat
rol
add
in
or
fstp
rol
aad
loop
sar
in
fucomp
out
mov
in
add
ffree
or
cmc
lret
xlat
icebp
in
jmp
in
mov
loopne
add
out
add
ret
repz
leave
shr
ror
out
jmp
mov
in
mov
push
jecxz
pop
lret
leave
push
or
std
shrb
mov
repnz
call
loopne
fchs
rcr
ljmp
repnz
jmp
scas
mov
shr
mov
repnz
add
into
int3
call
lret
sar
fsub
push
ret
rol
mov
fcmovu
in
fsincos
std
cmc
stc
cld
jecxz
repnz
or
push
jmp
out
mov
mov
clc
leave
mov
mov
fsub
mov
stc
pop
add
adc
adc
lods
rcl
lret
into
sarl
fdiv
clc
int3
ret
aam
or
cld
add
out
adc
in
out
loop
aam
fld1
int3
ret
add
repnz
roll
in
in
enter
lds
fnstcw
pushl
ret
add
add
out
hlt
out
fdiv
shr
mov
mov
shr
aad
icebp
jmp
loope
in
loop
enter
stos
fmul
out
shr
shll
out
hlt
in
loop
lock
push
rorb
loopne
filds
in
enter
shr
sarl
clc
shr
faddp
rcl
add
out
dec
stc
repz
out
jecxz
rcl
int3
cli
mov
mov
fcmovbe
hlt
cli
or
jmp
enter
out
jmp
fcmovb
ljmp
cli
out
fcmovbe
jecxz
int3
loope
icebp
fldpi
jmp
stos
mov
rol
rcr
out
int
in
push
sar
clc
push
std
aad
add
add
scas
mov
fsubp
cmc
call
stc
int3
lret
in
hlt
call
fdivr
mov
sti
loop
adc
mov
enter
aam
les
add
aad
test
fadds
enter
shl
mov
mov
jecxz
aam
iret
into
testb
aam
stc
hlt
out
in
mov
stc
mov
mov
cmc
mov
ret
mul
in
flds
in
psubusw
into
in
fdivl
shll
mov
out
loope
or
fucom
icebp
mov
leave
ror
into
iret
add
loop
test
cmc
icebp
fucom
mov
out
int
iret
loopne
ret
fxch
fnstsw
in
lock
out
out
jecxz
lret
loop
loopne
leave
call
scas
rcr
sar
into
mov
rcr
in
push
clc
or
iret
lods
shr
mov
mov
int
fcom
mov
fstp
movl
out
add
loope
into
fmulp
mov
lds
iret
stc
jmp
cmc
in
add
std
jmp
out
loop
mov
ror
shl
in
call
cli
not
sti
jecxz
in
mov
loopne
out
out
out
test
out
out
in
stc
jmp
ret
mov
les
std
loop
or
into
jmp
mov
out
into
idiv
iret
mov
fnstsw
ljmp
loop
in
aad
leave
mov
out
fdivs
rcr
add
loopne
pop
out
in
xlat
test
leave
loopne
shl
mov
aam
out
out
out
stc
shl
hlt
aad
in
leave
lods
mov
cmc
shr
out
shl
sti
fchs
fildl
cld
or
push
jmp
faddl
or
icebp
in
int3
ljmp
icebp
sti
in
mov
mov
sti
cli
aad
add
push
mov
fucomp
rcr
fnsetpm(287
int
iret
mov
fucomip
mov
out
cli
ret
clc
hlt
idiv
out
inc
ror
mov
fincstp
lock
div
cld
out
mov
sti
lret
stc
call
mov
mov
icebp
int3
xlat
in
ljmp
ljmp
incb
adc
int3
shll
sarb
cmc
sti
mov
fcmovu
fcmovbe
rcr
add
iret
call
int3
mov
out
mov
call
sti
out
std
jmp
repz
loop
out
sti
in
mov
mov
hlt
loope
fyl2xp1
aam
sti
in
or
mov
in
leave
rcl
int3
stc
out
mov
not
ret
mov
fcmove
push
adc
leave
fdiv
call
in
leave
sti
mov
mov
cmc
loope
fcmovbe
mov
mov
in
sti
mov
in
dec
mov
out
cld
add
out
in
fiaddl
iret
fucomip
mov
in
mov
imul
sar
rcl
jmp
in
aam
in
fisubs
out
int3
lret
lret
mov
add
fcmovnu
mov
std
loopne
fsubr
call
leave
mov
ror
mov
aad
out
in
aad
neg
or
or
shrb
ret
jmp
icebp
mov
repnz
stc
mov
fcmovnu
cli
jecxz
fmul
adc
lods
loopne
div
mov
in
lret
ljmp
idiv
testb
out
loop
lods
fidivs
repz
cli
jmp
loopne
int3
movl
stc
ljmp
mov
hlt
enter
aad
cli
jecxz
int3
ror
roll
fiaddl
cld
fdivrs
aad
aam
mov
out
aad
ret
add
lret
aam
ud2
psubb
loop
mov
enter
jmp
int3
jmp
in
out
inc
add
ret
cmc
fcmove
in
sti
into
in
shr
call
int3
in
aam
jmp
add
add
int3
div
ljmp
fcmovu
lock
not
mov
ljmp
jmp
loop
jmp
or
lock
into
cld
adc
clc
repnz
aam
icebp
fcmovnbe
div
hlt
mov
ret
pop
loopne
add
in
out
push
shr
fmul
in
hlt
stc
fcmovu
cmc
iret
fmulp
shl
shl
jecxz
std
mov
or
in
mov
mov
ror
sti
jmp
ret
sarb
jmp
or
shl
fcomip
out
repz
lret
into
call
sar
cld
fadd
int3
fstpt
add
add
in
mul
shlb
rol
mov
fucom
fdivr
add
push
in
ror
roll
add
add
int
mov
repz
rol
add
mov
loop
cli
loopne
cli
in
les
loop
lds
fdivr
mov
pop
out
leave
pmaddwd
fsubp
loopne
test
in
enter
fucomi
cli
mov
int3
ljmp
iret
jmp
mov
jmp
mov
fcmovu
fcmovbe
or
shl
add
frndint
add
shll
mov
repz
add
push
out
leave
add
in
mov
out
ljmp
clc
iret
in
fcmovbe
in
loopne
pop
add
les
out
aad
rcr
leave
iret
in
mov
repnz
loop
fcmovne
add
leave
loop
fisttps
int3
ret
repnz
ljmp
lock
cld
cmc
idiv
loopne
add
out
sarl
call
lret
mov
loopne
add
or
push
or
mov
jmp
loopne
fcmovne
mov
mov
iret
repz
shl
sarb
add
or
shll
int
in
sar
mov
add
in
add
add
fcomp
mov
in
scas
test
mov
icebp
cmc
enter
jecxz
repnz
fcmovbe
std
not
fdivr
or
rcr
xlat
in
into
mov
jmp
lods
fcomip
fidivrs
jecxz
fnstsw
fdivp
out
loop
fcmovnu
fld
out
lret
int
mov
jecxz
out
loopne
add
rol
out
call
shl
int3
xlat
ret
jmp
leave
enter
in
xlat
lock
clc
add
add
enter
lock
idivl
or
pop
or
out
or
adc
out
mov
out
into
idiv
shr
in
mov
add
loopne
loop
out
jmp
stc
fsubrp
int3
fnstsw
lret
out
jmp
lret
aad
mov
stc
incb
jmp
loopne
into
int3
in
sti
mov
stc
jmp
in
mov
repz
hlt
mov
jmp
cli
shl
mov
mov
ljmp
ljmp
faddp
out
jecxz
call
aam
jmp
enter
iret
loopne
rol
in
std
add
les
movl
repz
mov
shl
loop
icebp
lret
idiv
mov
hlt
icebp
lret
add
cli
leave
pavgw
repz
cmc
enter
into
mov
roll
or
iret
stc
push
sti
sti
fdivrs
ret
rol
mov
repnz
fmul
int3
jecxz
lock
add
aad
add
leave
fucom
add
jmp
out
xlat
in
test
not
rcl
cld
not
in
neg
leave
push
push
or
add
out
mov
aam
mov
mov
shl
push
jmp
cmc
aam
fsubr
out
fnstsw
out
repz
mov
in
cld
add
int3
ffree
hlt
lock
out
fldl
loop
shlb
out
clc
divb
enter
add
cld
sti
leave
leave
out
or
enter
test
jmp
mov
fdivrp
lock
call
in
sti
aam
or
pop
in
mov
call
repz
out
ror
loop
ret
jecxz
add
rcr
add
pop
or
or
mov
div
leave
int3
in
not
fistpll
iret
add
out
lret
leave
jmp
in
or
fmull
fsub
mul
out
out
cmc
in
mov
aam
clc
int
mov
cli
add
cli
int3
jmp
shrb
int
idiv
cli
mov
mov
mov
stc
loop
cmc
or
stc
in
leave
shl
test
mov
fcmovnbe
repnz
add
out
loopne
int3
loope
loope
enter
jmp
cmc
in
mov
pop
not
clc
add
out
out
psllw
in
leave
lret
out
lret
icebp
iret
hlt
fdivrp
fcmovne
flds
clc
cli
shl
testl
add
repnz
scas
enter
in
icebp
ror
lret
repz
repnz
mov
mov
int3
shl
in
jecxz
lods
enter
clc
mov
enter
out
int3
in
add
add
jecxz
ljmp
mov
ret
rcl
mov
cld
rcr
in
shl
aad
xlat
stc
jmp
out
imull
shl
mov
stc
icebp
xlat
lock
ret
cli
aad
fimull
loope
enter
mov
hlt
bnd
shl
add
fsubrp
incb
shr
repnz
aad
call
repz
jmp
sti
in
cmc
shlb
in
cli
loop
aad
hlt
jmp
into
jecxz
scas
lret
int3
into
out
stc
lods
mov
aam
fdivrp
mov
loop
hlt
add
out
out
leave
inc
mov
mov
icebp
in
loop
loopne
ret
loope
rolb
lret
inc
in
leave
lock
scas
hlt
scas
call
iret
shl
shl
shr
add
out
loope
or
clc
fadd
adc
scas
ret
hlt
mov
lods
mov
std
mov
rcr
mov
std
out
or
neg
lret
int3
out
lods
fcomi
sarl
not
aad
fadds
in
in
jmp
fsubrp
out
jecxz
sti
mov
clc
in
sar
test
into
in
jecxz
shl
in
faddp
rol
jecxz
stos
in
ljmp
iret
fstpt
rorb
iret
or
in
lret
jmp
int3
lods
aam
fdivrs
add
into
repnz
shl
jmp
aam
ror
andl
add
mov
sub
xor
add
mov
mov
mov
cmpl
jbe
jmp
lret
sub
shlb
inc
jnp
scas
adc
add
std
in
mov
in
fadd
mov
rcl
jmp
aad
ror
out
mov
enter
vpslld
mul
mov
lret
mov
mov
in
add
sti
cli
in
jmp
mov
repnz
mov
in
test
aam
ret
std
add
out
jmp
fstp
in
lods
out
fsubr
mov
lds
fsubr
int
shl
aad
jecxz
in
sti
in
enter
repz
hlt
out
mov
cmc
iret
repz
icebp
in
les
out
jmp
hlt
add
into
call
rcl
lock
mov
fcmovnu
shr
add
shll
ret
sti
add
call
lods
mov
out
in
int
fdivr
hlt
mov
rcr
cmc
lock
add
les
stc
clc
in
mov
lret
fldl
cld
loope
out
scas
loop
mov
xlat
icebp
mov
out
enter
xlat
rcl
lock
add
pop
jmp
lret
loope
ret
call
shr
ljmp
hlt
stc
aam
hlt
ret
enter
int
mov
ret
in
shlb
loop
mov
cld
faddp
clc
sti
int3
int
mov
shr
out
enter
lret
mov
fpatan
rol
add
cli
fmul
stc
std
in
iret
stos
loopne
lret
mov
mov
std
rcl
stc
aam
rcl
repnz
roll
std
add
iret
into
add
fdivrs
jmp
shl
mov
fiaddl
ffree
mov
loope
lret
or
fadd
stos
loop
ret
into
fnstcw
icebp
mov
int3
ret
aam
enter
or
enter
mov
cmc
stc
shl
add
hlt
fdivr
mov
call
std
test
ljmp
lret
add
out
mul
cli
mov
cli
or
stc
icebp
test
lods
out
lds
cmc
out
cmc
ret
int3
div
aad
loope
in
enter
call
mov
cmc
into
fcmovbe
loopne
fcmovnu
in
stc
xlat
mov
fcmovb
out
call
add
xlat
aam
shl
call
mov
rcr
aam
ret
xlat
or
lret
out
into
repz
lock
mov
divl
hlt
mov
out
aad
ret
push
in
in
mov
shl
in
lret
sar
aam
mov
mov
out
cld
in
jmp
lret
lock
mov
in
add
rcl
ret
fmull
ret
ret
out
lret
out
shlb
jmp
lock
enter
ret
add
or
loopne
cld
jecxz
incb
mov
loop
shl
mov
clc
shl
fstpt
fiaddl
ljmp
loop
loop
jecxz
sti
xlat
jmp
xlat
xlat
hlt
enter
loopne
add
mov
iret
in
ljmp
in
hlt
add
aad
int
icebp
mov
cli
or
cmpsl
rep
lods
mov
mov
idiv
repnz
add
fldln2
in
std
std
push
add
jecxz
int3
mov
icebp
mov
fucomi
les
mov
rcr
loopne
stc
loope
rorl
iret
ljmp
repz
cmc
faddl
ret
rcl
add
jecxz
ljmp
fisubrs
leave
lods
ror
stc
out
sar
cld
imul
fsubp
lock
div
or
loopne
repz
xlat
mov
in
jmp
mov
ret
add
jmp
add
out
fidivs
mov
fidivl
mov
in
out
les
in
lret
into
lret
ret
lret
ror
fcmovb
inc
out
add
fcom
call
add
hlt
lret
fiaddl
loopne
out
fidivrl
jecxz
in
div
jmp
mov
test
or
shr
in
in
stc
fcmove
fistpll
loop
fcmovnb
leave
jmp
loopne
out
rol
ret
sti
ret
fptan
in
test
repnz
mov
or
les
iret
call
into
mov
mov
ljmp
fldl
xlat
cmc
add
or
out
repz
enter
shl
mov
jmp
push
in
aad
push
push
out
jmp
loop
shl
into
rcl
int3
mov
in
mov
aad
loopne
or
add
or
out
loop
ljmp
lock
hlt
rol
sti
rcr
xlat
or
fiaddl
repz
icebp
call
aam
shr
mov
ljmp
mov
in
out
or
int
ror
in
fmul
fincstp
repnz
lock
mov
pop
fcmovb
in
lret
filds
lret
mov
int3
out
mov
jecxz
rol
add
call
out
lret
fsubr
jmp
out
idiv
hlt
mov
fdivrl
fiaddl
std
aam
repz
rcr
ljmp
add
cli
into
sar
icebp
fucomp
lds
ljmp
out
aam
fnsetpm(287
sti
in
filds
aam
in
lock
add
dec
out
aam
in
sti
cli
scas
fbstp
iret
icebp
out
leave
lret
std
mov
add
cli
lret
into
lret
or
icebp
repnz
int
out
std
les
ret
ret
push
add
or
flds
or
shl
shl
mov
call
push
out
or
clc
out
div
add
or
lock
in
xlat
in
in
out
jmp
jmp
mov
int3
add
rcl
mov
shl
or
int3
into
mov
into
mov
leave
in
fcomi
ror
sti
stc
repnz
fucomp
add
or
adc
in
jmp
divl
repz
fcomp
incl
fsubp
shl
mov
clc
fucomip
repz
fsub
mov
mov
enter
enter
stc
loope
jecxz
push
fadd
fimuls
or
jmp
mov
iret
mov
mov
fsub
pop
add
mov
jmp
call
mov
mov
out
fcmovbe
leave
iret
in
clc
ljmp
ret
fimull
jmp
in
leave
fcmovne
bnd
int3
add
int3
repz
icebp
cli
sti
std
lret
or
out
iret
call
iret
stc
cli
clc
clc
inc
fucom
rol
stc
dec
shl
in
lret
into
leave
aad
lods
int3
call
fsubr
neg
enter
repz
shl
fsub
add
pop
shl
scas
leave
out
lods
sar
not
not
mov
mov
hlt
shl
fmul
fcmovu
push
enter
out
test
aam
mov
call
mov
ret
add
cld
imul
ror
iret
loope
ljmp
repnz
fidivl
out
out
mov
mov
lock
jecxz
lret
out
call
int3
shl
shl
enter
icebp
mov
fmulp
in
loop
ljmp
call
in
mov
into
repz
fstp
rolb
adc
out
lock
fsubrp
in
lods
out
sar
out
mov
shr
shl
loopne
cmc
fadd
mov
push
fcmovnb
fsubrp
rcl
jecxz
loop
in
in
repz
out
fidivl
rcl
shr
in
div
or
vpsubusb
rcl
mov
shr
sar
fdivr
out
lock
clc
fsubrp
add
filds
loope
repnz
lock
rcr
std
icebp
cld
les
shl
faddl
push
iret
jecxz
mov
rcl
test
mov
cld
cli
lock
or
hlt
lret
mov
stc
repz
repz
mov
loope
fadd
fcomip
add
adc
icebp
mov
mov
mov
ror
into
mov
jecxz
cmc
aad
std
aam
cli
fsub
in
fiadds
cli
test
jmp
mul
mov
cmc
int3
lret
shl
aad
in
std
or
lret
xlat
out
aad
enter
shl
mov
shr
repz
aam
stc
mov
ljmp
or
in
fidivrl
in
fiaddl
repz
ret
fdivrp
roll
add
fmull
repnz
mov
into
les
icebp
jecxz
mov
out
pop
fstpt
mov
int3
lods
hlt
lds
repnz
call
repnz
in
add
in
enter
fcomp
leave
in
mov
aam
add
cli
fdiv
mov
out
mov
mov
fcom
fidivl
lock
loopne
rolb
jmp
or
into
call
out
divl
out
cmc
int
shl
in
mov
add
add
clc
fucomi
movb
mov
xlat
int3
lret
cmc
ljmp
add
aam
mov
add
mov
scas
mov
in
enter
stc
test
stc
cld
out
enter
sti
or
mov
out
clc
sarb
add
repz
stc
icebp
icebp
ret
cli
fmull
enter
loopne
int
enter
mov
shr
cli
cld
rol
pop
sar
in
fcmovb
pop
jmp
fisttpll
cld
int
test
cli
loopne
fxch
ljmp
fcom
fdivr
loop
loope
call
loop
lret
out
out
sti
enter
add
int
clc
cld
loope
enter
clc
add
enter
jecxz
mov
in
int
mov
lock
inc
or
push
sti
movl
mov
call
ljmp
repz
add
incl
add
shr
test
lock
sti
out
fcom
mov
stc
cli
in
cli
add
or
stc
lret
sti
stc
stc
loope
jmp
lods
repnz
out
lret
mov
aad
in
loop
sti
cli
add
scas
loop
fsub
lret
mov
out
mov
hlt
into
repnz
clc
hlt
out
fdivr
xlat
faddl
shrl
mov
fprem1
mov
sti
rcr
jecxz
add
out
jmp
loop
cmpsl
out
test
hlt
lock
aad
lods
jmp
rcl
mov
lret
lret
or
add
jmp
int3
lock
mov
lret
clc
aam
out
jmp
loop
add
fadds
mov
lock
iret
lods
out
lret
ljmp
stc
pop
fdivr
clc
or
rcl
push
aam
iret
int3
jmp
jmp
lock
call
mov
sti
add
filds
loope
int3
into
iret
repz
ror
cli
lret
cmc
aad
jmp
sar
stc
call
cmc
fucom
lret
in
int3
loope
lret
iret
loopne
ror
clc
lret
ret
add
clc
loop
out
rol
fistpll
loopne
mov
in
iret
aam
shrl
add
fadds
int
rcl
cmc
add
add
into
or
fmul
shll
stc
mov
stc
in
add
rolb
aam
jmp
repz
ror
in
cmc
std
mov
cmc
call
roll
repnz
lock
hlt
ljmp
mul
sti
out
push
sti
in
fdivr
ret
fidivrs
cli
int3
loopne
leave
aad
fcmovbe
repnz
stc
fcmovbe
in
add
loop
lret
bnd
not
in
mov
fcmovnbe
loop
into
mov
push
add
loope
adc
iret
ljmp
cli
out
iret
lock
stc
sti
aam
div
in
decb
lret
in
or
rcr
leave
jmp
ljmp
hlt
in
add
fdivr
in
leave
clc
loopne
add
ret
mul
lret
loopne
sar
lret
aad
mov
rcl
or
in
int3
or
mov
in
cmc
in
jmp
cld
rolb
std
xabort
xlat
loope
add
rcr
int
in
shlb
fucom
sarl
push
idiv
sti
ljmp
repnz
out
leave
ret
mov
in
mov
clc
sar
jecxz
clc
ud2
aad
out
in
loope
out
test
mov
mov
fdivr
jmp
add
sti
in
add
into
in
jecxz
hlt
lret
scas
ljmp
ret
loopne
repz
fcom
aam
hlt
int3
add
int
rcl
repz
lock
mov
flds
jecxz
clc
jmp
adc
lods
ret
ret
jmp
ljmp
fcmovnb
into
clc
cli
cld
cld
mov
add
enter
fidivrs
mov
lret
fucomi
iret
ror
loop
add
ret
std
call
repz
fsubr
int3
rcr
clc
int3
repnz
xlat
out
repnz
mov
add
sti
fisttpll
add
shrb
aad
loopne
aad
mov
mov
hlt
cld
fdivr
cli
in
or
repnz
loope
lret
loope
into
repz
int
mov
fsubrp
mov
inc
hlt
paddsw
shrb
ljmp
mul
repz
mov
ljmp
shr
rol
out
aad
aam
lock
mov
int
rcr
mov
jmp
jecxz
jmp
adc
leave
aad
mov
lret
iret
fcmovnbe
add
repz
out
or
mov
lret
mov
sar
lock
loop
loope
shr
add
iret
fdivrp
adc
sti
shr
iret
int
mov
stc
hlt
fprem1
cli
shl
ljmp
jmp
out
mov
in
imul
mov
leave
shlb
incl
in
fildl
jmp
mov
int3
jmp
cli
loop
stc
fdiv
into
xlat
add
aad
incb
mov
loop
mov
lods
leave
iret
cmc
in
iret
ret
add
out
cli
jmp
or
lret
lret
or
jmp
out
ret
ljmp
fdivrl
in
shl
ffreep
rcl
or
in
mov
aam
into
hlt
fcomip
dec
in
add
mov
loopne
sti
or
pop
in
in
rcl
mov
aam
lret
sti
mov
fld
add
mul
faddp
loop
add
into
add
add
lret
mov
call
rcl
mov
add
add
cli
inc
fadd
leave
fcmove
push
shrl
rol
repnz
cmc
mov
out
jmp
aam
ljmp
or
shr
lock
mov
mov
out
fdiv
sarl
add
movb
sarb
out
repz
mov
fsubp
loop
add
fucomp
lock
add
in
fdiv
scas
xlat
enter
xlat
cmc
clc
out
int
loope
out
cli
ljmp
or
mov
loopne
mov
not
mov
enter
mov
or
jecxz
cld
fsub
shl
mov
xlat
ret
lods
fcmovnbe
mov
loop
ret
or
out
jmp
out
out
scas
loop
mov
mov
repz
sti
fdivrp
fprem
out
cmc
out
jmp
add
adc
cld
in
loopne
mov
repz
out
out
cld
sarl
aad
mov
jmp
int3
repz
jmp
mov
filds
lock
mov
clc
shufps
lret
in
in
cmc
mov
lret
fdivr
cmc
repnz
cli
loop
neg
lock
hlt
or
shl
jmp
in
call
icebp
loope
sti
stc
out
jecxz
hlt
hlt
push
or
iret
or
iret
jecxz
imull
out
rcl
fdivr
ljmp
add
or
sti
lret
jecxz
rol
lret
jmp
iret
mov
int3
mov
not
fiaddl
ret
cli
aad
repz
in
aad
in
in
sar
repz
fst
jmp
or
cli
rorl
into
jecxz
out
jmp
test
fdivrp
out
repnz
loop
mul
in
in
scas
in
ret
lret
int3
in
fucomi
sar
in
mov
int3
mov
out
cli
clc
fiaddl
loope
jmp
mov
repz
jmp
fsubp
mov
jecxz
add
dec
in
jmp
jmp
fdivr
enter
sar
push
fimull
call
stc
lods
icebp
shl
mov
mul
mov
leave
xlat
mov
mov
in
fsub
pop
out
add
repz
jmp
cmc
int
shr
mov
repnz
xlat
fst
fiaddl
fisttpl
fcmovu
aam
stc
or
add
vshufps
in
sti
mov
mov
sar
rorl
add
loopne
fmulp
stos
int3
ffreep
out
mov
in
shl
jmp
lret
cli
jmp
testl
or
std
clc
out
xlat
jecxz
loop
hlt
xlat
out
leave
mov
in
jmp
fmulp
add
fcom
add
ret
add
out
test
lret
lods
mov
mov
mov
hlt
jecxz
repz
mov
ret
mov
shl
fld
repnz
fucomp
rol
in
ret
out
add
scas
mov
fcmovbe
aam
mov
mov
cli
fdivs
lret
inc
push
shlb
in
int
in
not
fildl
in
rcr
ret
stc
add
testl
call
scas
call
lock
out
ret
fdiv
fcmovnbe
ret
icebp
lret
jmp
in
std
shr
mov
int
cli
aad
lret
cmc
loop
repnz
int3
ret
jecxz
push
iret
push
faddl
clc
mov
test
lret
mov
lods
fcomi
mov
ljmp
or
fldl
call
push
rol
mov
fucomi
push
jecxz
ret
loop
in
or
loope
cli
incb
lret
out
ret
aad
mov
mov
lret
fadds
mov
cli
or
add
in
loopne
lret
into
int3
fildll
shr
into
fdivp
out
cmc
out
loope
or
add
add
or
add
lods
icebp
scas
jecxz
call
clc
jmp
rcr
fucom
jecxz
clc
loopne
lret
add
out
xlat
test
mov
jmp
add
shr
ret
leave
lret
fucomp
fcomp
in
repz
mov
into
fcmovnu
into
out
leave
fincstp
dec
std
loopne
out
ret
fcmovb
lret
std
clc
faddp
mov
fidivrs
enter
mov
mov
in
fdivr
mov
stc
mov
out
loope
loopne
enter
int
add
fdiv
pop
hlt
ret
add
out
mul
fsub
adc
not
iret
mul
repnz
mov
call
lock
add
add
jmp
aad
mov
in
repnz
out
cmc
ror
sar
cli
loopne
leave
or
les
out
loope
fstp
loopne
mov
xlat
into
stc
iret
in
mov
fcompp
sti
shl
or
clc
loope
lods
loop
mov
xlat
mov
mov
out
mov
push
lret
std
iret
dec
or
mov
ret
loope
in
mov
fmul
in
icebp
sti
rol
loope
add
lret
add
aad
in
or
icebp
lock
in
fdivr
cld
aad
shr
loopne
std
sti
or
sti
add
out
not
out
mov
aam
mov
inc
shl
loope
out
ret
fcoms
rcr
movsl
mov
out
test
repz
mov
mov
jmp
cld
enter
rol
out
into
lock
scas
stc
mov
push
fcmovnu
fdivrs
or
fcmovb
iret
in
int
test
aam
mov
ljmp
roll
fldlg2
out
mov
jecxz
mov
sti
out
leave
mov
rol
sarl
or
leave
les
mov
leave
in
mov
ret
dec
mov
lock
decl
aam
repz
mov
int
scas
stc
in
stc
mov
stc
sar
pop
loope
shl
push
leave
add
test
jmp
dec
rcl
aad
mov
in
fsub
decl
mov
icebp
lock
neg
icebp
mov
clc
ljmp
mov
in
in
in
iret
out
lret
mul
fld
rcl
mov
out
mov
out
rcl
mov
loop
out
div
rol
icebp
lret
std
xlat
test
or
in
jmp
jmp
lods
lret
push
shl
iret
sar
faddl
stc
lds
ret
dec
enter
scas
jmp
out
out
enter
cli
int3
icebp
sarb
add
rcl
stc
leave
fdivp
ret
fldlg2
cli
repz
loop
call
into
int
iret
mov
neg
ret
hlt
loope
fst
fisttpl
add
in
int
loop
repz
int
cli
call
cli
out
cli
decb
dec
or
fmul
leave
xlat
in
leave
mov
enter
mov
mov
sar
lret
jmp
filds
repz
hlt
hlt
out
mov
fdivrl
in
push
jmp
jmp
call
leave
fdiv
in
out
call
hlt
f2xm1
rorl
lock
jmp
in
icebp
shr
rep
mov
shr
mov
roll
rol
fimull
or
add
sar
fadd
mov
scas
out
mov
mov
lret
cmc
cmc
mov
add
repz
mov
mov
fpatan
mov
fstp
fmul
mov
fcmovnb
call
clc
adc
scas
loop
mov
icebp
shl
ror
cmc
hlt
add
clc
ret
repz
pop
ror
fdiv
int3
fmulp
in
mov
int3
aam
rol
idiv
std
ljmp
fistpll
or
lret
into
std
adc
xlat
shrl
mov
fnstcw
icebp
in
cli
or
enter
jecxz
repnz
in
repz
lret
ffree
fsubp
fcomp
push
fnstsw
mov
cld
repnz
mov
ret
hlt
jmp
mov
ret
aad
int3
xlat
movb
or
jmp
cld
add
fcoml
lret
call
into
enter
xlat
out
fstpt
loope
cmc
sti
add
out
lock
aad
scas
neg
in
stc
lret
int
mov
rorb
fnsetpm(287
cmc
in
into
enter
out
mov
sar
repz
repnz
mov
clc
mov
ret
faddl
scas
shr
jmp
aad
hlt
xlat
into
repnz
cli
idiv
clc
fcomip
push
vcmpnleps
out
add
loop
mov
repz
loope
fnstcw
int3
shr
mov
int
clc
out
cld
jmp
call
scas
in
into
lret
enter
in
mov
add
cmc
out
shl
out
out
in
add
repnz
scas
div
cmc
mov
ret
fst
mov
cld
test
enter
mov
loop
lret
sarl
clc
stc
aad
rol
or
iret
out
push
fsubr
test
scas
int3
scas
hlt
test
mov
repz
jmp
add
loopne
icebp
jmp
xlat
or
or
ljmp
cli
hlt
repz
ret
mov
shl
shl
lret
rcr
lret
add
shl
fidivrs
mov
mov
stc
into
mov
add
mul
movl
out
int3
inc
cmpsb
xlat
mov
mov
rcl
aad
in
aad
shl
pop
les
decb
push
pop
in
push
int3
out
lret
in
in
int
int3
mov
lods
dec
fnstsw
icebp
icebp
les
idiv
clc
hlt
ret
or
fcom
int3
test
sti
rcl
xlat
in
icebp
rcl
add
out
repnz
add
div
stc
in
filds
lods
into
lock
icebp
cli
aad
jmp
mov
mov
ret
jmp
cli
call
lret
into
leave
enter
mov
stc
mov
cmc
loope
jmp
or
loope
mov
mov
rcl
shr
loop
cld
int3
mov
or
loopne
pop
or
mov
out
fcmovu
mov
filds
repnz
mov
fcmovb
neg
repz
rol
rol
loop
mov
shlb
mov
loope
ljmp
adc
fsub
fidivs
in
aad
lret
xlat
sti
loopne
clc
fldl
testl
vpminsw
loopne
lock
iret
fcmove
shl
mov
int
mov
rcr
fucom
add
aad
out
or
loope
sarb
fcomip
sti
fdivr
mov
in
add
loopne
dec
out
fsubrl
mov
fnstenv
mov
sti
cmc
sti
push
flds
add
loop
add
cli
out
icebp
in
shl
lock
in
sti
enter
add
iret
jecxz
rcl
fmuls
lar
fisubrs
loop
enter
fmulp
cli
repnz
in
mov
hlt
cli
add
ljmp
fcmove
scas
les
mov
jmp
lock
sarb
incb
in
out
out
push
push
or
shl
xlat
in
sar
cmc
into
ljmp
mov
clc
stc
or
add
lret
jecxz
out
enter
ret
rol
mov
repnz
mov
jecxz
stc
cmc
add
inc
fcmovu
loop
stc
ljmp
aad
enter
fcmovne
leave
mov
pop
aad
add
fisttpll
fsubrp
fsubp
loope
in
mov
int3
fdivr
mov
cmc
out
rcr
aad
jecxz
add
loopne
mov
imul
mov
lret
shr
add
rcr
repz
or
fsub
movb
aad
rcl
shll
repz
repz
hlt
add
movsb
repnz
aam
xlat
mov
repz
fdiv
fidivrl
rcr
fstp
in
leave
or
fdivp
shr
mov
rcl
fnstsw
fcmovne
ret
mov
fcmove
push
or
or
scas
repz
mov
out
shr
not
sar
xlat
add
add
sar
out
faddp
add
aad
push
out
cmpsb
out
mov
idivb
out
repnz
std
out
icebp
aad
or
xlat
or
stc
icebp
ljmp
icebp
vcvtdq2pd
out
jecxz
lock
roll
add
call
jmp
aam
sarb
fdivrl
add
fcmovu
sti
lret
leave
prefetch
or
loop
shr
lock
sar
int
out
divb
flds
xlat
or
decb
out
jecxz
stos
out
mov
mov
xlat
repnz
jecxz
clc
or
lock
fdivrp
loopne
ffreep
mov
mov
mov
aam
mul
in
add
fldpi
out
stos
shrl
lods
out
xlat
sar
aad
mov
rolb
rcl
std
lock
loopne
aam
lret
mov
out
ret
leave
in
jmp
cli
rcr
rcr
jmp
jmp
out
iret
ret
icebp
fsub
in
lock
into
repz
mov
sti
add
xlat
jmp
cmc
leave
aam
rorl
fnstsw
out
loop
in
repnz
shr
out
fcomi
mov
in
sti
in
stc
enter
jecxz
mov
test
lods
call
out
fdivr
sarl
or
fmul
enter
fucomi
mov
ror
in
iret
ret
bnd
fadd
cmc
fcomp
ljmp
in
out
fninit
into
ror
shll
leave
repnz
icebp
shl
out
fadd
out
in
out
scas
shl
les
lret
cmc
leave
stc
loope
sti
mov
shl
lret
scas
call
in
lret
iret
mov
pop
ret
jmp
out
hlt
or
or
std
in
out
lret
scas
hlt
in
jmp
mov
out
rol
faddl
les
lret
vcmpsd
imul
fdivrp
ror
add
or
lret
in
ljmp
cmc
fcomp
mov
in
mul
in
aad
out
aam
add
shlb
in
xlat
out
stc
dec
clc
div
in
sti
mov
or
cmc
pop
push
enter
int3
mov
jmp
fdivrl
ret
cmc
or
ljmp
mov
in
loope
rcl
int
in
vpaddq
sar
out
aad
loop
fdiv
or
in
in
stos
mov
ljmp
cli
dec
fmul
clc
aad
rcl
std
stc
or
shl
aam
call
mov
cli
loope
into
xlat
mov
loop
repz
fsub
cld
jmp
call
mov
aam
aam
shl
in
in
mov
sar
lock
add
add
jecxz
cld
add
ljmp
cmc
sti
int3
clc
mov
fnclex
mov
call
lret
or
out
xlat
leave
mov
cli
fcom
call
cld
add
fsub
or
jmp
lret
int3
in
xlat
shl
stc
sti
call
cld
fsubp
jecxz
pop
loope
jecxz
add
lods
ret
aam
lret
fcmovne
mov
aam
std
mul
pop
aam
hlt
add
leave
loop
aad
call
shl
in
fadd
neg
mov
out
jmp
lret
ret
mov
vpmaxub
mov
aam
pop
fsub
in
lret
jecxz
ljmp
aad
clc
mov
aad
rcl
icebp
sar
mov
add
add
mov
rcl
mov
jecxz
ljmp
icebp
cld
mov
int
loopne
mov
lret
repz
lret
pushl
repnz
aam
lret
ljmp
lock
hlt
mov
rol
leave
fmulp
rcr
loopne
clc
std
mov
add
or
scas
out
stos
lret
fbstp
sti
repnz
lock
stc
icebp
mul
mov
add
lods
icebp
test
sar
out
in
mov
sar
shl
pop
hlt
lret
in
fcomip
mov
mov
xlat
sar
fldz
in
fdivrl
repz
neg
fucom
loop
jecxz
cmpsb
lret
jmp
rcr
lret
imul
mov
add
jmp
fiadds
enter
icebp
shr
repz
fst
repz
xlat
ljmp
fiadds
test
cmc
fidivl
in
mov
out
div
fucomi
shl
psubsb
lret
add
icebp
scas
scas
in
in
test
aad
aam
rol
ret
imul
rcr
int3
repnz
test
xlat
int3
enter
mov
icebp
rcr
clc
out
fcmove
fmulp
mov
ror
int
out
mov
ret
in
mov
pop
clc
lret
fadds
repnz
shlb
call
aad
shl
shl
add
in
hlt
jecxz
std
test
in
in
shlb
mov
add
shl
jmp
std
add
std
or
jmp
ljmp
lret
std
jmp
rol
out
into
add
jmp
int3
aam
iret
aad
into
sti
shl
xlat
fsub
sarb
cld
mov
fldln2
ljmp
int
xlat
mov
mov
xlat
add
mov
add
enter
enter
lods
leave
jmp
lret
fdivr
out
in
testb
rcl
jecxz
out
mov
jmp
rcl
loope
loope
out
into
fdiv
into
mov
pop
lock
neg
ror
pop
or
lret
out
sarb
decl
incl
mov
mov
jmp
mov
mov
sub
mov
mov
jmp
cmpl
jne
movzbl
xor
add
mov
jmp
mov
xor
add
movzbl
sub
mov
mov
xor
add
mov
ror
mov
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
xor
add
mov
sub
mov
jmp
mov
xor
add
mov
sub
mov
jmp
mov
jmp
mov
insb
icebp
je
pop
shlb
ljmp
add
rcl
sti
mul
hlt
sti
repnz
mov
fadd
pop
fdivr
or
ror
mov
cli
lock
mov
mov
mov
stc
aam
push
ljmp
divl
enter
out
cmc
clc
rcl
pop
add
cld
aam
faddl
in
out
stc
divl
fdivrp
hlt
int3
cli
fsub
int3
incb
cli
pop
shl
repz
add
into
test
fucom
mov
into
int3
div
mov
in
imul
loopne
clc
aad
fsubr
pop
in
mov
hlt
lret
in
ret
fcmovb
add
loopne
cli
cld
lret
sar
out
scas
iret
mov
rol
repz
ret
stc
fxch
or
or
fdivrl
not
rcl
fnstenv
sti
out
mov
ljmp
int3
in
jecxz
out
aad
fcomi
in
clc
mov
faddp
mov
rcl
stc
loopne
rol
lods
les
int
mov
std
icebp
mov
ljmp
add
stos
leave
scas
xlat
out
mov
ljmp
add
or
aam
ret
cli
sti
out
shl
ljmp
shlb
fmul
add
rcr
jecxz
aam
leave
or
lret
les
mov
lock
repz
loope
mov
add
sti
leave
add
adc
rcl
out
mov
enter
ret
into
fcomip
vshufps
add
int3
push
out
rol
lret
xlat
cld
fstp
clc
mov
aam
lret
clc
in
cld
pop
out
ret
int3
in
mov
mov
into
int
add
std
not
fisttpl
vpmuludq
int3
fsubr
fdivrl
ret
call
mov
repz
loopne
rol
or
jmp
adc
out
mov
hlt
aad
stc
rcl
fld
jmp
enter
shr
mov
test
sti
fmul
aad
icebp
aam
mov
in
leave
in
lods
mov
lds
out
jmp
fsubp
add
or
out
int3
jecxz
out
scas
shlb
out
rcr
stc
mov
icebp
aam
xlat
add
testb
stc
push
push
ffreep
in
lret
lock
jmp
sar
rcl
std
mov
fcomi
call
in
test
stc
ljmp
in
add
aad
xlat
enter
fmulp
push
shrb
idiv
mov
mov
ljmp
add
lock
push
jecxz
in
lods
out
fmul
lret
fucomi
fucomp
jmp
mov
ret
repz
lret
or
jmp
div
fcmovnu
in
repz
loop
idivl
rcl
lock
or
in
mov
rcl
out
imul
mov
into
jecxz
or
in
fstp
fnstsw
push
or
stos
shr
leave
loope
fxch
xlat
mov
sti
repz
cli
stc
idiv
repnz
or
jmp
clc
pop
in
mov
vpminsw
cli
out
into
enter
add
jmp
in
fsubr
rcl
jmp
cmc
call
mov
loop
fdivrs
mov
in
out
jecxz
out
mov
hlt
repz
repz
sti
cmc
mov
shl
cld
lret
lret
test
mov
lods
sti
leave
icebp
enter
iret
lock
aam
sti
in
fcoml
dec
out
out
repz
repnz
cld
aad
in
xlat
shl
shr
jmp
jmp
lods
mul
lods
lret
stc
idivb
test
int
sti
rcr
fcmovb
fcmove
into
cld
fistpll
into
enter
lock
ret
ljmp
rorb
sar
out
push
lret
adc
lods
rcr
call
lock
jmp
mov
testl
rol
lods
scas
leave
out
out
fxch
shl
shl
ret
push
stc
roll
std
or
mov
mov
in
mov
loopne
rcr
fsub
neg
out
cmc
out
std
call
in
xlat
out
repnz
int
ret
mul
roll
stc
bswap
in
add
or
lret
scas
repz
mov
out
int
cmc
aad
add
call
fucom
std
or
aam
iret
fmul
lret
rol
mov
shl
lods
shlb
pop
fnstsw
fucomip
jmp
out
iret
shl
mov
hlt
shrl
std
in
mov
or
enter
in
in
ret
sti
enter
mov
mov
jmp
in
lret
add
int3
or
in
icebp
ror
repnz
mov
cmc
cld
ljmp
fcmovnb
stc
cmc
leave
add
or
fmul
into
call
lret
idiv
out
ret
add
add
cmc
fcmovnbe
shr
or
in
faddp
int
int
out
scas
repz
aam
repnz
in
cmc
rorl
mov
fisubrs
aam
jmp
leave
aam
mov
neg
stc
mov
jmp
clc
ret
sti
fucomp
stos
xlat
lds
iret
in
shlb
iret
shl
neg
std
loope
or
fcom
add
add
lret
leave
loope
int3
fldt
call
out
mov
fldpi
out
jmp
out
repnz
loope
repz
push
xlat
mov
aad
fadd
repnz
div
lret
loope
fiaddl
add
rol
repz
jmp
mov
inc
aam
fld
clc
jmp
filds
add
mov
ljmp
lret
leave
out
mov
ret
repnz
cli
lock
int
cld
mov
mov
xlat
scas
fcmovb
lret
in
repz
add
shl
add
hlt
loop
stc
ljmp
mov
shr
mov
ret
cli
add
push
rcl
add
in
or
out
stc
or
in
ret
jmp
repz
rcr
add
or
out
sti
loopne
int3
pmaxsw
icebp
rol
ret
int
in
lock
icebp
cld
mov
pop
hlt
cld
in
loopne
hlt
or
fucom
lock
repnz
ljmp
rcl
roll
in
fstp
fdivr
loopne
sti
adc
shl
scas
mov
enter
mov
mov
xlat
sti
ljmp
mov
shl
out
into
repnz
test
shll
not
decl
xlat
fxch
leave
repz
out
int3
lock
mov
add
repz
not
ljmp
clc
icebp
stos
repz
shlb
mov
filds
loope
enter
or
out
mov
mov
loopne
repz
hlt
lret
shl
jecxz
aad
aam
jecxz
aad
int3
repnz
loop
lods
lret
in
stc
in
leave
shr
leave
cmc
mov
add
push
add
lret
jecxz
std
shrl
out
cli
enter
mov
rcr
neg
aam
cmc
std
leave
add
frstpm(287
stos
mov
loop
fdiv
mov
fiadds
loop
aad
std
or
or
stos
enter
loop
hlt
mov
call
sarb
cli
mov
add
call
enter
mul
sar
mov
fsubp
mov
add
lret
or
cmc
in
in
in
fidivrs
fadd
out
xlat
into
jecxz
out
aad
faddl
cmc
ret
cli
out
aam
add
leave
clc
mov
lods
leave
out
fdivrs
fsubrp
rcl
ret
in
out
add
repz
in
jmp
lock
add
jmp
cmc
jmp
or
add
in
rcr
repz
out
hlt
mov
in
mov
fcmovu
out
dec
sti
or
cli
repz
mov
mov
out
mov
rol
rolb
aam
dec
call
fsub
lods
mov
mov
out
aad
icebp
iret
std
fdiv
rcl
in
add
cli
mov
out
jecxz
out
int3
movsb
lods
stc
in
lock
repz
idivb
in
fisttps
lret
or
shl
aad
loopne
ror
out
aam
mov
roll
dec
iret
lret
lods
repz
stos
loop
shrl
ljmp
ret
sti
lock
loope
frstpm(287
jmp
mov
ffreep
shr
out
rol
fdivr
fdivr
idivl
icebp
neg
shl
aam
pop
dec
pop
add
loopne
icebp
mov
lods
in
scas
jmp
mov
fldl
shl
cli
jecxz
aam
fdivr
enter
xlat
jecxz
out
mov
aad
mov
mov
jecxz
ljmp
repz
leave
repz
in
stc
out
mov
sti
cli
sti
aad
shr
lret
or
cmpxchg
repz
in
sar
icebp
into
mov
hlt
aad
not
out
in
jmp
stc
cld
int
repz
shl
imul
in
mov
cli
int
out
in
shl
stc
rol
stc
lret
lret
jecxz
loop
lds
fcomi
aam
lock
out
out
lds
loopne
cli
loop
fmul
fdivs
jmp
mov
in
imul
int3
aam
cld
pop
fcmovnu
jmp
jmp
fldcw
fcmovne
mov
neg
lods
mov
enter
jecxz
call
fmul
mov
out
out
ljmp
xlat
std
mov
loopne
add
or
loopne
repz
leave
jmp
icebp
fcmove
into
into
leave
mov
add
out
ret
lds
in
fidivrs
cmpsb
scas
out
stos
aam
neg
mov
faddl
mov
or
cmc
ljmp
fadd
movsb
ljmp
mov
cld
call
int3
fiadds
ljmp
repz
mov
lods
test
jmp
hlt
fsubr
repnz
rolb
add
ret
lret
out
sti
loope
mov
out
enter
test
hlt
shl
hlt
into
dec
ret
mov
mov
hlt
lret
rcl
sar
int3
ret
fmulp
ljmp
shl
lock
out
icebp
mov
mov
mov
add
mov
ret
lret
test
add
fidivrs
xlat
fdivrs
sarl
in
cld
in
lret
out
jmp
repz
fdiv
jmp
leave
fsubrp
neg
std
cmc
hlt
aad
mov
neg
out
incl
shrb
scas
div
jmp
clc
sarb
shr
testl
loope
loopne
mov
rep
cli
mov
roll
out
aad
testb
ljmp
int3
sarb
bnd
rcl
jecxz
add
add
out
mov
scas
out
in
enter
mov
xlat
in
in
icebp
push
jmp
ljmp
in
shl
out
shl
mov
mov
out
sti
fsub
mov
or
mov
into
loopne
out
mov
out
ljmp
mov
jmp
ljmp
repz
jmp
ror
into
fidivl
sti
lret
xlat
ljmp
stc
out
in
scas
scas
out
aad
call
out
repz
xlat
in
sti
stc
dec
add
ret
or
enter
mov
mov
out
sar
jmp
shr
clc
mov
cli
add
add
ffree
test
scas
lods
ror
icebp
mov
jmp
add
rol
clc
jmp
out
rcr
push
int
scas
jecxz
mov
mov
mov
mov
pop
fucomip
lret
push
out
add
fmuls
int3
repnz
ror
ret
test
idiv
icebp
shl
iret
loop
add
fmul
jmp
out
push
loopne
in
in
ror
out
mov
jmp
mov
idiv
rolb
loopne
aam
cli
or
add
or
mov
lock
lock
repz
out
call
in
les
mov
add
rol
fldl
faddl
rol
repnz
lret
mov
std
iret
int3
mov
jecxz
push
int
clc
fadd
out
mov
aad
shr
call
in
sti
fcmovbe
in
ret
rolb
loopne
pop
in
leave
clc
add
repz
mov
repz
fldz
mov
mov
repz
lret
out
out
or
lods
ljmp
in
stc
mov
into
ret
ljmp
roll
out
scas
rcl
ret
aam
iret
in
int3
xlat
add
int
testl
stc
sar
add
shr
mov
neg
mov
mov
pop
sti
cli
enter
icebp
mov
jecxz
scas
cli
icebp
clc
icebp
mov
out
mov
pop
out
sti
in
mov
out
mov
lret
lret
fdivr
mov
cli
in
jmp
add
mov
loop
lret
int3
mov
loope
lock
icebp
lds
psubq
call
int
mov
in
into
enter
neg
iret
ret
int
push
shl
add
les
pop
jecxz
loope
shl
fucomp
mov
ret
cmc
leave
mov
stc
fdivrp
out
lret
jmp
or
mov
shl
mov
mov
iret
cli
loop
mov
icebp
add
ror
repz
test
call
jmp
fld1
enter
not
lds
fcmovb
in
int
iret
out
call
mov
ljmp
sar
xlat
add
mul
xlat
test
fmull
loope
mov
shll
icebp
out
rcr
rol
sar
rcr
pop
aam
add
add
lret
loope
clc
divb
add
out
cld
lock
fsubp
out
fdivrs
ret
jmp
int
aam
test
stc
rolb
loope
loopne
lret
cmpsl
shr
jmp
int3
hlt
loop
fdivrl
ret
aad
add
repz
fsubrl
xlat
loope
fsincos
mov
add
mov
rcr
rcl
add
aad
pop
push
push
out
lock
iret
icebp
in
ffree
fcmovnu
mov
rcl
in
sti
jmp
add
stc
clc
test
mov
sti
repnz
rcl
mov
in
icebp
stc
repnz
xlat
add
fsub
or
mov
int3
test
vcvttpd2dq
rcl
fcmovnbe
out
lret
jmp
jmp
in
divl
sarl
push
rcl
out
repnz
add
push
vpsraw
lret
xlat
cli
mov
jmp
shl
in
in
ret
cli
fdivr
jecxz
ret
loopne
mov
ror
lock
ror
int3
loop
sar
repz
out
or
leave
stos
loop
lods
shr
mov
mov
sti
mov
std
int3
add
enter
fcmovne
mov
in
ror
mov
in
in
fcom
repnz
idiv
lret
sti
out
std
mov
shl
mov
iret
mov
ror
in
inc
fsub
shl
add
out
loopne
jmp
shlb
out
out
fptan
out
mov
ret
testl
imull
jmp
mov
ret
aad
mov
add
fucomip
push
ljmp
out
ret
icebp
inc
leave
divl
mul
loope
jmp
fucom
stos
loopne
ljmp
in
leave
aam
add
add
aam
sarl
rol
cmc
out
lock
mov
sti
repnz
add
fsub
icebp
xlat
rolb
add
loope
add
out
lock
icebp
sar
leave
dec
cld
mov
cli
inc
or
xlat
fld
lret
in
mov
shr
fmul
in
clc
iret
ffreep
loop
ror
cld
ret
leave
lret
std
incb
add
ror
not
out
cli
ror
rcr
dec
in
loop
lock
stc
paddw
out
fisubrs
mov
cld
mul
mov
jecxz
out
loopne
jecxz
or
jecxz
repz
in
shr
mov
icebp
repz
loope
ror
test
add
sar
out
lock
jmp
icebp
lock
mov
icebp
rcl
fcmovnbe
in
stc
call
in
shl
iret
divb
mov
fcmovnu
sti
fdivp
out
lock
add
ret
scas
mov
icebp
in
xlat
lret
leave
fucomip
int3
push
icebp
sti
cli
loop
jecxz
or
fcmovb
add
stos
fadd
in
leave
out
out
mov
cli
enter
fucomip
jmp
add
or
push
cli
out
or
loop
ret
ror
out
mov
cld
fstpt
jmp
lret
push
mov
ret
repnz
push
cmc
testl
hlt
rolb
into
cld
add
lods
mov
clc
fcmove
int3
in
iret
divl
cmc
aad
lock
loopne
call
hlt
xabort
repz
fscale
repz
lock
fmulp
or
repz
mov
icebp
imul
stc
aam
ror
imul
add
xlat
add
jmp
out
rol
fsub
aam
out
mov
div
loopne
fsub
loop
lret
out
or
into
jmp
call
rcr
xlat
shlb
imul
shl
lock
pop
sti
lds
lret
loope
shl
ret
aad
cli
jmp
iret
in
aam
mov
aad
fldl
add
test
lods
ret
jmp
jmp
lods
in
icebp
sti
mov
in
out
xlat
loopne
call
loop
movsb
fsubr
leave
leave
jmp
fcom
mov
aam
ret
lock
add
out
pop
lret
fsubrp
loopne
int
mov
jecxz
ror
jmp
inc
repz
les
out
fmull
in
int3
fsubp
shr
call
iret
out
out
lock
lds
out
cli
jecxz
out
aad
cli
or
iret
lret
iret
loope
lock
mov
leave
shr
out
iret
lret
add
mov
icebp
or
adc
mov
mov
shlb
sti
fstpt
shl
mov
cld
stc
add
int3
int
test
shr
shr
clc
aad
mov
mov
or
sar
enter
sti
enter
imull
mov
std
neg
mov
mov
loop
cmc
clc
push
out
cli
fsubp
ffreep
jmp
call
fstpt
add
rol
imul
or
out
out
dec
ljmp
sti
shr
call
xlat
fcom
push
jmp
fsub
ljmp
cmpsl
jmp
ffree
fucomi
repz
jmp
test
int3
add
test
cld
neg
lret
ret
mov
shll
ljmp
sar
mov
add
fisttpl
loop
stc
in
in
mov
iret
out
iret
sti
lock
enter
cli
rol
mov
cmc
faddl
aad
lret
imull
icebp
fmulp
fld
add
leave
mov
rcl
push
xlat
aad
ljmp
call
sti
fcmovne
iret
fdiv
ror
ror
sar
xlat
loopne
sti
or
add
mov
xlat
int3
mov
mov
ror
mul
into
out
repnz
mov
cmc
or
stos
out
in
shl
icebp
lock
add
pop
in
inc
jecxz
add
hlt
add
or
jecxz
shll
stc
div
aam
aad
mov
out
add
loopne
clc
or
fucom
loopne
call
in
shr
int3
ror
loopne
repnz
rcl
mov
out
add
add
in
in
mov
int3
enter
xlat
xlat
enter
icebp
mov
or
jmp
iret
test
imulb
icebp
lret
cld
add
jmp
stc
add
cmc
or
jecxz
mov
loopne
mov
mov
fldl
loopne
rcr
add
or
in
mov
loope
mov
in
mov
fsubr
idiv
idivb
fdiv
in
or
test
idivl
lret
mov
mov
aad
jmp
or
stc
enter
mov
loop
aam
icebp
les
mov
jecxz
psubd
std
lret
lret
mov
loope
ljmp
jmp
div
mov
repnz
call
lret
lret
into
xlat
fnsave
out
out
enter
shl
mov
mul
add
in
adc
lods
jecxz
aam
vpsubsb
int
fprem1
in
mov
shl
ffree
sti
leave
add
jmp
lods
les
in
in
out
mov
mov
clc
aam
imul
stc
lret
call
mov
shl
not
mov
ljmp
pop
add
loop
clc
cli
adc
mov
in
out
aam
hlt
in
leave
in
loopne
mov
iret
add
or
mov
leave
icebp
out
sti
mov
aad
mov
out
shl
int3
out
ret
ret
hlt
or
add
jmp
in
icebp
out
int3
sarl
enter
mov
push
fmull
fucomp
fld
iret
add
in
mov
into
mov
fcmovnb
fidivl
hlt
in
add
add
repnz
ljmp
mov
fucom
ljmp
mov
add
std
mov
jmp
cli
scas
loope
aad
cli
out
shl
shl
shr
out
cld
mov
hlt
in
fdiv
jmp
rcl
mov
in
mov
lock
hlt
aad
neg
aam
clc
enter
shl
leave
lock
stos
enter
mov
stc
mov
rol
ret
fldl
mov
jmp
mov
into
rcr
repz
cmc
fdivr
frstpm(287
mov
in
or
shl
fst
in
enter
fsubp
enter
pop
aam
ljmp
std
shr
lret
out
loope
enter
into
clc
xlat
mov
idiv
ljmp
or
repnz
ret
mov
enter
mov
add
mov
cli
or
loop
add
roll
int
int
cld
rolb
or
in
iret
shlb
out
mov
jmp
in
mov
loopne
fdivr
add
add
loopne
add
in
fidivs
mov
cli
leave
aad
mov
fcmovbe
out
mov
call
or
mov
aad
call
not
div
loop
stc
cli
stc
mov
lret
rcl
out
ror
fidivrs
loop
ret
repnz
cli
hlt
jecxz
inc
pop
stc
xadd
enter
mov
clc
loop
loope
mov
ftst
stc
jmp
ljmp
lock
jmp
mov
loope
lret
ljmp
mov
cli
mov
std
cmc
add
ret
pop
int
sti
loope
inc
fimull
loopne
in
mov
xlat
mov
fucomi
fxch
out
iret
ret
loope
rorb
or
ljmp
mov
rol
call
xlat
iret
rcl
into
ljmp
ret
fprem
add
out
cld
jmp
lret
mov
aad
lods
mov
icebp
out
int
incl
out
call
decb
loope
loopne
adc
mov
loop
out
fcom
divl
fnstsw
or
or
add
into
rcl
rol
mov
lret
ljmp
out
ret
mov
jmp
stc
out
fdivrp
mov
shrb
xlat
lret
neg
mov
stc
repz
jmp
sar
or
fmull
icebp
loop
ret
mov
out
cmc
mov
mov
hlt
loope
in
or
or
call
mov
out
lret
lret
mov
rcr
icebp
or
leave
or
vpaddsb
or
call
sarl
clc
loop
out
incl
out
repnz
loopne
add
hlt
loop
lret
lret
lods
rcl
mov
mov
aad
ret
out
clc
int
jmp
icebp
lret
cli
in
xlat
mov
repnz
jmp
in
shl
add
cli
iret
lods
ffreep
mov
repz
enter
cli
aam
fcmovu
fiaddl
ret
add
add
shl
mov
repnz
loope
test
in
int3
mov
int3
cmc
repz
aad
mul
jecxz
hlt
loop
repz
shr
rol
neg
mov
rcr
repnz
loop
stc
in
mov
add
xlat
idivl
fld
fstpt
add
mul
fsincos
jmp
lds
leave
clc
fdivr
add
aam
icebp
fincstp
lods
lret
div
add
testb
jmp
in
aad
loopne
add
enter
shlb
sti
shr
in
faddp
aam
jecxz
loope
call
cmpsb
shlb
mov
mov
out
aad
ret
add
hlt
loope
push
rorl
lods
loopne
mov
fcmovne
hlt
enter
fnstcw
rcr
ljmp
imul
scas
int
out
rcr
fdivr
fdiv
int
hlt
add
loopne
psrad
in
scas
mov
out
ror
stc
aad
not
iret
loopne
add
ret
shl
add
psubusw
ror
mov
into
imul
ror
mov
aam
mov
clc
xlat
cld
push
cli
in
add
push
clc
in
in
loop
mov
cli
int3
xlat
enter
mov
aad
jecxz
cmc
or
leave
rcr
in
in
mul
in
clc
out
div
cmc
fstp
rcl
xlat
std
fucom
fisttpl
hlt
or
lret
mov
mov
aam
jmp
mov
mov
fsub
lret
fld
clc
jecxz
mov
bnd
repz
cmc
fldln2
mov
aad
fldl
into
in
lret
in
test
loopne
mov
lret
fdiv
idivb
rcl
shl
in
out
add
add
out
scas
out
mov
mov
in
fsubr
cli
mov
icebp
ret
rol
pop
shr
neg
lret
add
into
shl
shrl
into
cld
int
into
aam
ror
add
fcmovnu
push
fucomip
ljmp
iret
lock
mov
iret
xlat
mov
ljmp
lret
shl
test
movsb
into
jmp
xlat
xlat
cli
clc
lock
int3
loop
lock
repnz
loope
in
or
repnz
lret
mov
shl
mov
fcomp
mov
idivl
filds
leave
add
add
iret
lods
lret
sti
in
call
rolb
aam
in
cld
lds
add
add
in
out
stos
mov
jmp
add
mov
xlat
add
lret
iret
or
out
mov
sar
lret
ror
add
push
testl
ljmp
jmp
lret
test
std
rcr
mov
rol
add
fsin
jmp
aad
in
repnz
in
call
shl
cld
repnz
out
clc
aad
into
fisubrs
in
aam
shr
mov
leave
cli
mov
hlt
not
fcmovu
add
les
shl
out
rol
test
shll
loop
loopne
rcr
add
fmulp
jmp
int3
mov
fcmovnbe
mov
repz
shl
repz
not
add
out
loope
fcmovnb
in
jecxz
lret
out
mov
cld
fcmovb
out
loope
rcl
fcmove
cmc
push
in
ret
call
shr
ret
mov
in
mov
rcr
mov
add
lock
ret
add
out
iret
lret
lock
mov
mov
add
lock
cld
in
push
push
clc
add
ret
enter
jmp
sti
out
fcmovnb
mov
out
mov
mov
lock
or
cmc
pmulhw
fsub
in
in
ret
aad
icebp
loopne
leave
std
jmp
fcmovnu
add
call
repz
fsub
mov
stc
mov
fldz
clc
int
mov
xlat
mov
into
jecxz
lret
mov
in
scas
fcmove
in
std
roll
add
jmp
lock
aam
sti
iret
rcr
fcom
movsb
lods
out
mov
out
ljmp
add
aam
aad
test
or
pop
out
ret
int
in
mov
int3
rcl
add
in
loop
loop
mov
or
loopne
std
fsub
rol
loopne
in
jmp
lock
repz
xlat
fsubp
add
add
into
or
or
in
test
call
mov
stc
cld
add
sar
cmc
neg
or
in
frstpm(287
shl
out
aad
cmc
div
icebp
aam
loopne
ret
jecxz
pop
call
lds
lret
fsub
ljmp
mov
fiaddl
add
add
out
ret
leave
shr
test
repz
int3
ljmp
sti
div
out
mov
out
out
testb
sti
add
mov
lods
icebp
out
neg
mov
xlat
in
sti
rcr
call
mov
pop
sysret
or
jmp
enter
leave
out
lret
int
shl
cld
push
mov
testb
add
int
scas
jmp
in
cld
into
fdivrl
mul
sar
loopne
or
add
iret
mov
imul
stc
enter
in
clc
into
loope
repz
fprem
lret
add
in
psubusw
icebp
rcl
mov
mov
icebp
fcomip
mov
in
dec
loope
ljmp
scas
imul
mov
mov
clc
fadds
aam
imul
add
out
ljmp
call
scas
aam
std
clc
out
fcmovu
rcr
add
in
add
les
or
in
mov
cmc
out
aam
rol
mov
mov
fdiv
add
movb
fld
in
clc
ret
scas
mov
rcl
icebp
in
idiv
aam
mov
shl
or
mov
fldcw
shr
out
in
add
enter
aam
rcr
aad
out
or
push
icebp
rcl
scas
fcmovne
into
in
cmc
mov
into
enter
cli
add
lret
out
or
stc
out
into
scas
shl
loop
jmp
mov
clc
fcom
rol
shl
shl
fucomip
out
add
scas
lods
shlb
in
into
sar
lret
cli
int
cld
add
or
ljmp
mov
mov
repz
leave
mov
std
div
rcl
shl
jmp
les
repnz
enter
loop
jecxz
pop
stc
out
or
or
out
shl
fdivl
cli
in
mov
int
add
aad
out
dec
or
repz
in
sti
stc
shl
mov
add
fadds
stc
ret
fucomp
stos
test
mov
lock
clc
push
loope
hlt
sti
fildl
cli
or
icebp
ljmp
lret
vpaddsw
dec
call
ret
add
clc
stc
adc
mov
sti
call
sar
div
mov
int3
pop
xlat
jecxz
or
out
ret
fcmovnbe
loop
mov
ret
xor
add
mov
jmp
mov
xor
mov
lea
mov
mov
jmp
sub
notb
push
je
hlt
in
or
in
jp
add
int
clc
add
out
mov
mov
test
call
out
fdiv
sar
stc
filds
cld
fcomp
repz
jmp
leave
mov
into
mov
aam
add
fcomp
std
add
push
call
jecxz
ret
hlt
test
mov
jmp
ret
lock
fsin
in
in
ljmp
div
not
clc
rcr
into
fcmovne
ret
rolb
fcmovu
out
call
into
into
leave
ret
mov
fcom
fcomip
jmp
mov
filds
cld
pop
leave
or
or
loop
leave
shl
mov
cli
out
leave
in
in
mov
mov
fstp
clc
iret
pop
push
cli
mov
xlat
out
sti
xlat
shl
aad
rcr
out
jmp
cli
ffree
rcr
icebp
into
mov
fcmove
int3
stc
call
repz
faddl
shl
add
jecxz
hlt
cld
ret
ret
xlat
in
test
aad
mov
iret
ret
rol
flds
ffree
hlt
fiaddl
add
int3
mov
mov
fsub
ret
mov
fcmovnu
ret
mov
leave
cmc
lret
fucom
jmp
mov
loop
iret
int3
call
int
mov
jmp
out
jmp
int
in
out
mov
lret
mov
out
fadd
ljmp
ljmp
aam
fcmovb
int
out
call
out
lock
int3
mov
or
loope
lret
or
fmul
int
lret
in
int3
fcmovne
enter
cld
out
jecxz
cli
movb
incl
jmp
add
jmp
mov
shl
xlat
in
mov
ret
int
add
add
in
or
les
fucom
ffree
rol
cmc
aad
aad
std
sarb
cli
shl
fmuls
add
fmulp
xlat
ror
enter
in
into
lock
iret
mov
jmp
add
add
lds
fcmove
jmp
mov
neg
not
fcomp
sti
xlat
cmc
jecxz
fmul
or
bnd
test
enter
mov
out
fld
stc
clc
test
fxam
scas
in
stos
aad
lret
rolb
mov
in
pop
add
loop
jecxz
cli
aam
fildll
test
shl
add
out
or
loope
shl
icebp
aam
mov
mov
xlat
rcr
mov
std
shl
jmp
or
or
mov
repnz
lret
std
in
mov
add
add
incb
out
add
or
in
mov
mov
mov
mov
fadd
faddl
sti
out
add
fnstcw
aam
cmc
repnz
faddp
in
iret
cli
fsub
fcmovu
xlat
sti
lret
rcr
fsubr
out
or
shl
shr
into
mov
enter
ljmp
sarl
or
in
stc
or
loop
jmp
mov
lret
clc
ror
out
loop
not
pop
leave
les
or
or
ljmp
out
mov
mov
mov
repnz
fdivrl
push
out
adc
mov
shl
shll
mov
mov
jmp
push
fldl
loop
fsubrp
enter
out
enter
cli
cmc
iret
neg
clc
mov
jecxz
in
add
or
fstp
enter
fldpi
cmc
shl
cld
mov
loop
int3
mov
fisttpll
fildl
fistpll
loope
sar
iret
lods
out
in
sti
add
dec
add
clc
sti
out
cld
fbld
int3
jmp
mov
xlat
fiaddl
add
jmp
mov
push
or
rcr
ret
fstpt
out
mov
mov
rol
roll
jecxz
add
in
jmp
fsubrp
mov
icebp
hlt
jmp
lock
int
add
mov
sti
add
lock
lret
add
push
add
scas
mov
mov
sar
iret
loop
shr
rcl
fdivr
in
fmuls
jmp
mov
mov
int3
cmc
mov
fidivrl
lock
hlt
add
mov
ret
paddusw
jmp
mov
mov
out
aad
mov
ret
repz
out
fsubrp
out
or
fstp
shll
xlat
lock
mov
stc
mov
mov
lret
fcmovnu
or
call
lock
scas
shrl
pop
ror
in
aad
out
jmp
jmp
ret
fdiv
in
hlt
mov
enter
stc
aam
loop
mov
ljmp
out
mov
scas
jecxz
lds
mov
icebp
fincstp
rcl
filds
rorl
lods
lret
hlt
call
out
into
fdivp
mov
neg
ret
add
fisttpl
mov
jmp
in
cmc
mov
shlb
mov
bnd
mov
into
or
loopne
loop
fadd
mov
test
cli
into
mov
jecxz
mov
aad
aad
repz
shl
shr
out
aad
out
mov
mov
or
lock
fdivrp
aam
enter
movsl
out
loopne
stc
out
idiv
aam
iret
loope
fcmovu
in
vpsubq
lds
or
f2xm1
lret
mov
shrl
cmc
ljmp
cld
aam
ret
jecxz
add
stc
dec
jecxz
icebp
int3
icebp
rep
int3
icebp
fcomip
lret
fsub
sti
iret
clc
loopne
cld
add
ljmp
mov
jmp
xlat
repnz
idivl
cmc
cld
hlt
push
add
mov
mov
loope
cmc
out
clc
mov
cli
pop
add
sar
lret
in
add
cld
out
sarl
in
xlat
jmp
fsub
std
fidivrl
fadd
out
adc
in
jmp
int3
out
mov
mov
int
fucom
hlt
loopne
cld
cld
loop
ljmp
mov
shr
rcl
shlb
call
cld
xlat
flds
cmc
loopne
adc
ret
shr
loop
mov
call
ret
loopne
add
in
aam
add
enter
bnd
aam
lret
icebp
sarl
fildl
clc
fiaddl
lret
or
fldl
lods
lret
lock
call
out
int3
lret
enter
roll
out
push
scas
rcr
in
mov
lret
stc
scas
fucomi
lret
out
leave
mov
rolb
loope
jecxz
lret
stc
cld
enter
repnz
mov
mov
out
shl
cli
jecxz
repnz
mov
inc
add
fisttps
fucomp
into
repnz
ror
enter
fistpll
rcl
lret
enter
fsub
out
stos
jmp
fmul
lock
ror
aam
fucomip
sti
cli
sti
ret
or
loop
loopne
into
fcmovne
mov
movsb
icebp
into
aam
mov
jmp
mov
ror
stc
ljmp
add
xlat
in
in
icebp
lret
rcl
rcr
cmc
std
sar
int3
aad
stc
sar
in
add
fidivl
out
shll
fcomip
repnz
fstp
repz
rcr
push
pmaxsw
iret
cli
add
loop
shl
mov
mov
out
fincstp
icebp
int3
hlt
jecxz
in
ret
cmc
fst
loope
iret
sti
adc
out
mov
out
stos
lock
out
enter
int
iret
mov
push
push
rol
pmulhuw
into
clc
lret
shr
lock
out
fcmovne
mov
fcomi
icebp
into
out
stc
add
mov
incl
sti
out
add
jmp
lret
out
int3
lret
div
bnd
rcr
std
shl
or
jmp
fldl2e
loop
mov
scas
lock
divb
mov
add
repnz
push
cld
loop
loop
in
shr
mov
enter
jmp
push
push
mov
out
mov
ret
ljmp
mov
iret
mul
loope
shl
jecxz
ret
fadds
add
fmulp
in
leave
shll
cmc
icebp
sti
cld
loop
out
add
repz
ret
in
sar
mov
mov
loope
aam
ljmp
loope
mov
in
sti
or
in
fadd
loop
mul
repnz
lret
stc
fsubrp
mov
push
xlat
neg
leave
ljmp
les
lret
aam
icebp
sarb
loop
loopne
add
mul
add
fsts
repnz
test
mov
aad
mov
lock
aad
ret
rolb
aam
clc
fsubp
in
mov
into
shlb
fcomi
cld
aam
shl
out
clc
leave
lds
loope
in
ret
ret
lret
shrl
test
out
idivb
fimull
fsubr
fsub
loope
ret
rol
rol
mov
shr
in
in
fadd
out
in
out
add
jmp
repnz
jmp
fcomi
mov
out
test
add
call
out
rcl
fucomi
xlat
icebp
rcl
mov
mov
rol
out
out
lret
loop
loop
lock
ljmp
sarb
mov
iret
lret
in
loope
icebp
fcomi
repnz
in
lock
rolb
repnz
int3
out
lret
fmulp
ljmp
lods
out
fnsave
fcmovnbe
mov
add
aad
loopne
fstpt
loop
xlat
stos
loopne
loope
stc
in
rcl
out
sarl
add
std
fsubr
cli
loopne
shl
aam
loope
icebp
mov
jmp
mov
stc
lret
or
aam
lret
in
clc
add
test
icebp
loop
ret
repz
bnd
add
xlat
test
lret
add
syscall
or
bnd
mov
aad
std
lret
mov
xlat
rcl
lock
imul
lret
int3
out
out
test
ret
rol
test
repz
in
ret
cmc
add
fiaddl
mov
in
int3
mov
in
cld
repnz
mov
add
cld
in
add
in
in
fsubr
in
loopne
out
lods
sarl
fildl
in
repnz
mov
sgdtl
or
lret
fucom
mov
out
int
mov
mov
rolb
shl
or
call
lret
icebp
fnstsw
xlat
fcmovbe
into
call
add
shr
incb
out
stc
fsubr
mov
in
mov
mov
fucomp
fst
sti
jmp
fcmovnb
fsubr
enter
lret
les
jmp
mov
mov
clc
add
std
add
aad
jecxz
or
in
or
in
iret
repz
mov
imul
xlat
mov
imul
dec
int3
cld
lock
rcl
loopne
jmp
out
loopne
lods
mov
int
out
in
fmul
icebp
repnz
fsubrp
hlt
int
lret
lock
cld
loopne
out
or
out
shl
mov
mov
mov
fstp
enter
mov
in
hlt
into
or
call
mov
scas
out
incl
mov
push
ffree
cli
lock
call
mov
mov
mov
jmp
shl
loopne
std
add
loop
jmp
mov
stc
mov
in
divl
mov
jecxz
mov
or
ftst
scas
in
mov
shl
repnz
mov
xlat
loopne
icebp
rcr
mov
jecxz
or
repz
cmc
in
mov
ljmp
int3
in
jecxz
rol
add
fstp
clc
or
jecxz
out
test
mov
loop
ret
cmc
leave
sti
clc
cld
hlt
icebp
fcmovne
in
add
in
aam
add
enter
jmp
shr
mov
mov
add
out
add
repz
jecxz
mov
ljmp
incb
cli
fsubp
or
leave
ret
lods
int3
mov
mul
scas
fidivl
roll
jecxz
mov
jmp
pop
or
fiaddl
loope
out
into
div
rcr
into
icebp
out
mov
jmp
add
std
neg
fimull
or
lret
cli
ret
add
fcmove
fstp
shl
cmc
jmp
fstpt
mov
out
xlat
lock
add
leave
out
lret
test
mov
stc
loopne
lods
mov
cmc
in
fcmovu
out
aam
mov
or
cld
or
int3
mov
in
mov
into
rcl
cmc
mov
add
not
les
add
lods
shrl
sti
sarb
cmc
pop
stc
push
pop
loope
loope
out
cld
or
out
test
out
jecxz
into
icebp
fmulp
jmp
shl
out
aam
loopne
or
stos
loope
out
leave
out
rol
jmp
aam
mov
repz
decb
aam
jmp
hlt
mov
ljmp
cmc
cli
repnz
repnz
out
jecxz
cld
loope
fsubrl
repnz
mov
mov
mov
mov
loopne
cld
add
in
out
loope
mov
mov
mov
fdivrs
mul
std
rcr
in
clc
std
add
lock
mov
repnz
in
out
in
call
mov
loope
into
or
fnsave
jmp
cld
mov
pop
mov
fcom
fisttps
sti
filds
mov
in
sti
call
cmc
fnstsw
fnstcw
or
in
or
out
in
lret
icebp
clc
repz
neg
iret
sar
jecxz
cmc
mov
jmp
add
mov
cmc
stc
hlt
icebp
aad
fsub
hlt
hlt
in
add
add
hlt
enter
test
ror
int
push
lock
lock
fdiv
sti
or
cmc
or
rol
lret
divl
ljmp
sti
fucom
repnz
jmp
int
fdivp
test
out
mov
mov
repnz
fisttpll
std
add
faddl
movl
repz
out
mov
lret
shr
fdivrp
rcl
xlat
add
lock
cld
out
out
int3
shl
loop
loop
xlat
repnz
lret
fxch
lock
in
shr
aam
or
add
stos
into
ror
repnz
mov
enter
cld
testl
roll
add
jmp
pop
stc
loopne
fsub
mov
mov
in
out
repnz
fucomip
mov
rcr
lock
rorb
test
add
stos
iret
icebp
mov
enter
jecxz
into
shr
lock
rolb
ljmp
lret
mov
in
lds
icebp
fcmovnbe
out
loopne
in
out
cli
lret
cmc
in
lret
ljmp
mov
jmp
lret
mov
fcmovnb
faddl
loopne
faddl
into
out
shr
scas
scas
divb
mov
stc
enter
out
ret
faddp
add
jecxz
add
fsubp
loop
ljmp
hlt
rcr
in
loope
cli
mov
std
add
jmp
shl
fadd
out
mov
div
mov
mov
mov
loopne
or
into
jmp
repnz
shrb
mov
add
out
loopne
loope
add
cmc
ljmp
repz
repnz
jmp
call
fucomip
loope
mov
add
filds
fsubp
fcomp
pop
test
in
mov
out
lods
lret
jmp
lock
clc
movb
add
rol
jmp
fadd
into
icebp
stos
mov
fmul
out
sti
mov
aam
fucomip
or
in
in
adc
in
ret
int3
repz
call
repz
in
repz
cli
incb
test
clc
or
in
jecxz
rcr
into
mov
out
iret
lock
mov
clc
sarb
ljmp
clc
into
fnstcw
shlb
add
loope
cmc
fcmovnb
jmp
cmc
ret
out
add
add
jmp
repnz
shr
mov
repz
faddl
cli
loop
shl
into
in
fsubr
rol
mov
repnz
rcr
mov
stc
call
shl
aam
jmp
enter
mov
shl
lock
int
mov
fsubr
rol
add
fucomip
jmp
loop
sti
shlb
mov
in
ret
jecxz
aam
fisttps
leave
hlt
rol
repz
loop
mov
ror
jmp
aad
cmc
cmc
cld
stc
pop
or
out
fxch
frstpm(287
loopne
lret
mov
loope
ret
ret
mov
sti
add
cmpsb
fcomi
mov
aam
aad
fcom
inc
enter
ret
out
out
add
fsubp
shl
repz
divb
les
not
in
add
hlt
lret
fdiv
shl
repnz
iret
jmp
repnz
fadds
call
in
lds
add
syscall
or
repnz
icebp
iret
mov
in
int3
hlt
repz
iret
ljmp
lock
rcl
loope
fsubrp
in
fsub
test
out
shll
fcmove
mov
aam
ljmp
in
mov
mov
repnz
mov
sti
jecxz
rol
rolb
icebp
std
push
into
in
or
mov
fsub
in
fxch
mov
mov
iret
cld
mov
loopne
loop
push
or
fsubr
loope
iret
in
neg
sar
in
shlb
int
jmp
add
clc
add
out
ljmp
aad
lock
out
shr
stc
add
fpatan
repz
sar
ljmp
in
shl
idiv
icebp
mov
loop
rorb
lret
out
loopne
lret
repnz
rcl
lods
sti
ret
hlt
cli
hlt
inc
mov
fdivr
add
or
out
clc
out
ret
shl
mov
cli
mov
mov
shl
in
shr
add
ret
push
or
out
ret
mov
jmp
hlt
ret
mov
lock
leave
loopne
add
mov
leave
out
shl
enter
mov
shl
sarl
repnz
lock
in
imull
rcl
out
aad
pushl
in
aad
fldl
jecxz
adc
mov
hlt
call
mov
out
mov
ffree
loopne
or
stc
in
ret
ret
mov
in
mov
sar
fdivrs
stc
cmc
testl
in
vcvttpd2dq
xlat
lods
repz
mov
xlat
jmp
out
rorb
push
loope
aam
adc
out
ret
rol
in
leave
shl
in
mov
call
shlb
idiv
add
or
ljmp
out
aam
out
into
not
in
add
loop
rol
jecxz
shr
or
ret
mov
lret
jmp
out
out
enter
shl
dec
fsubr
cli
out
jmp
into
cmpsb
iret
shl
in
sarb
fdivs
rcr
fsubr
add
push
aad
add
int
lods
xlat
leave
enter
fcomp
mov
icebp
add
mov
lret
out
fsubr
or
out
rol
in
in
lock
repnz
repnz
cli
lock
push
jmp
fadds
jmp
into
or
stos
mov
rcl
mov
in
in
cli
lret
mul
fninit
jmp
sti
sti
lret
out
add
lods
aad
les
stc
std
fdiv
into
in
fcmovu
cli
ljmp
leave
fisubrs
out
sarb
mov
jecxz
shl
or
loop
int
or
mov
clc
mov
mov
repnz
in
filds
in
out
les
ret
icebp
in
in
shr
xlat
lret
icebp
ret
repz
loope
lock
sti
out
or
loopne
shrb
lret
cli
aam
fmul
fdivrl
fld
fadd
aam
leave
loop
in
loop
mov
stc
jmp
in
in
iret
lock
cli
loop
rcr
enter
loope
leave
repz
ror
int
mov
mov
loopne
ret
sti
loope
aam
lret
int
add
les
test
jmp
repz
mov
cld
fiaddl
psubd
loop
lret
out
in
lods
fucomp
lret
hlt
loope
out
lret
mov
out
or
or
loope
out
or
ffree
lret
lods
mov
fadd
push
mov
add
fisttpl
fucom
lret
or
ror
loope
jmp
shl
ljmp
enter
rol
fdivrs
loopne
push
stc
loopne
call
out
out
out
shl
cli
in
lret
repz
jmp
add
idivl
rcl
int3
rol
lret
leave
in
mov
aad
fcmovnb
fcmovbe
fld
cli
mov
loop
add
test
mov
iret
repz
jmp
out
int
mov
sti
fidivrl
jmp
paddw
or
out
jmp
repz
mov
fcmovu
cmc
fcom
rcr
fcmovnu
stc
fdivr
xlat
add
in
repz
scas
iret
out
int
in
out
stc
aad
repnz
neg
add
sti
or
jecxz
jmp
shl
shrl
fsubr
ljmp
roll
call
into
iret
out
scas
fstp
mov
into
cmc
icebp
out
enter
push
out
flds
add
inc
add
or
repz
loopne
scas
fsubr
icebp
clc
xlat
xlat
xlat
stc
fucomi
cmc
shr
into
add
call
jmp
leave
lret
mov
out
sar
sti
int
shl
in
cld
sti
shr
maskmovq
fmulp
loopne
ret
shl
lret
out
mov
leave
aad
aad
add
pop
in
clc
clc
ret
in
add
out
xlat
out
mov
mul
hlt
sti
ljmp
out
shl
push
jmp
ljmp
sar
aam
hlt
in
iret
rcr
into
add
fcomp
ret
pop
pop
or
sarl
icebp
imul
mov
cli
xlat
leave
sarl
call
std
or
iret
scas
repnz
mov
in
xlat
aad
repz
jmp
rol
cli
fiadds
loop
add
adc
pop
fsub
int
loope
out
mov
jmp
in
call
add
stc
jmp
prefetch
or
lret
int3
cmc
jmp
icebp
mov
ljmp
rolb
in
fmuls
cli
jecxz
clc
in
cmpsb
fucom
in
loop
rol
iret
jmp
lock
aad
fcmovne
ljmp
scas
test
lret
mov
mov
sar
fdivrl
or
decb
lret
leave
out
lds
jmp
aam
ror
repz
cmc
ret
repnz
fmul
into
iret
mov
mov
mov
sarl
icebp
mov
incl
fmuls
jecxz
jmp
loopne
jmp
hlt
repz
rcr
rcr
aam
add
mov
ljmp
lods
rcl
fcomi
mov
repz
aad
into
sti
mov
fsubrp
decb
mov
lock
fcmovnb
iret
leave
rcl
aam
mov
div
add
lds
cli
out
in
movntq
mov
repnz
rcl
shr
fpatan
loope
add
std
add
flds
push
pop
add
pop
add
shl
lret
in
lock
mov
out
sti
ret
fdivp
aam
std
cmc
or
ljmp
out
out
repz
loopne
mov
add
add
enter
shr
cmc
out
in
in
mov
incl
push
rcl
repz
fisttps
jmp
shrl
aad
shl
fcmove
sti
lret
mov
clc
icebp
cmc
add
sti
psadbw
in
int
mov
ljmp
int3
in
repz
out
fadd
fdivrp
aad
fiaddl
ljmp
mov
lret
cli
mov
mov
in
test
in
aad
mov
fistpll
fdivr
mov
rcl
mov
in
into
add
mov
mov
ret
lock
jecxz
int3
in
add
jmp
shl
mov
fcomip
mov
add
fiaddl
loope
fstp
fistl
rol
in
ljmp
aam
fdivrs
add
push
in
jmp
or
mov
mov
enter
mov
in
ret
mov
fcmovu
ret
call
loop
ror
fcmovbe
hlt
mov
aad
fincstp
or
loop
lret
mov
loop
f2xm1
idiv
hlt
fcompp
loop
out
sar
fld
rcr
or
loope
cli
add
repz
hlt
mov
iret
div
repnz
enter
sar
int3
icebp
aad
cmc
or
out
rcr
xlat
into
out
in
jmp
in
lret
mov
repz
jmp
add
fcomi
stc
std
out
out
test
jmp
lods
clc
fst
jecxz
hlt
fcmovu
sti
add
ret
fldl
fcmovnb
or
fadd
sarb
mov
leave
std
mov
jecxz
fcmovbe
stc
rorb
movb
lret
cli
mov
mul
mov
out
jmp
sti
ljmp
mov
jmp
cld
jmp
out
out
mov
in
shl
mov
out
add
sti
out
push
or
push
or
test
aam
in
vpsubw
mov
cld
mov
fsubrp
iret
enter
enter
mov
std
iret
mov
hlt
cmc
jmp
shl
lret
lret
cld
enter
movsb
shr
jmp
fucompp
mov
call
out
out
jecxz
cmc
jmp
add
repz
in
vpxor
call
std
jmp
enter
mov
neg
or
into
decl
loopne
repnz
loopne
mov
clc
lock
int
cli
out
fdiv
jmp
aam
in
or
in
stos
lods
test
out
repz
fdivrs
out
loopne
in
add
std
out
jecxz
fsubp
mov
lds
in
call
std
cmc
std
loop
cmc
or
out
stc
fucomp
lods
jmp
loope
int3
in
out
not
out
aad
loop
ffree
fcom
add
jmp
stc
add
adc
div
in
div
icebp
mov
fld
loop
enter
add
fcmovbe
xlat
repz
vpsrlw
icebp
out
mov
mov
mov
lret
or
or
mov
icebp
ret
jecxz
repnz
in
in
fcmovu
ror
in
in
in
mov
ljmp
fmulp
out
leave
enter
ror
mov
enter
jecxz
xlat
iret
std
rol
clc
ffreep
xlat
xlat
add
test
in
repz
iret
jmp
stc
rol
sar
add
ret
rolb
xbegin
add
out
ljmp
fdecstp
in
ret
sar
clc
rol
idiv
add
add
loope
repnz
shl
repz
jmp
stc
clc
lret
clc
ret
mov
loopne
add
ret
leave
mov
div
xlat
out
in
leave
out
push
aam
mov
fst
sarb
cli
pop
paddb
out
out
cmpsb
shl
rcl
in
mov
mov
or
or
in
loope
mov
int
shr
out
lock
faddl
sti
repnz
in
out
icebp
or
add
fcomp
add
cmpsl
mov
int3
int
test
mov
loope
in
hlt
icebp
shr
add
into
out
scas
shrb
fxtract
ljmp
aad
out
std
rol
jmp
or
out
mov
lret
mov
in
into
rcr
mov
fdivrs
in
in
or
fsub
ret
in
loop
in
lods
mov
rcl
loop
int3
rcl
mov
cli
stc
mov
cld
jecxz
sar
add
in
flds
shr
out
call
in
shl
rcl
leave
sti
call
fxch
rol
ljmp
lds
mov
rcr
inc
in
repz
jecxz
rcl
out
stc
jmp
lock
jmp
lret
out
adc
ret
loopne
lret
int3
int
in
clc
div
test
loope
stc
cli
fsub
add
fucomi
bnd
jecxz
int
repnz
xlat
icebp
shr
aad
stc
mov
ljmp
out
iret
leave
mov
test
mov
cld
test
out
jecxz
add
cmc
or
repnz
hlt
clc
repz
sti
enter
enter
std
out
or
psubw
jmp
lods
mov
mov
repnz
fcmovbe
std
fnstcw
fcmovu
fabs
loopne
clc
ljmp
out
jmp
out
sar
add
aad
add
rcr
std
or
add
out
fsub
ffreep
movsl
sarl
into
sti
fistpll
neg
repz
lock
push
lret
int3
or
lock
repnz
int
rcl
iret
lock
cli
cmc
add
icebp
leave
clc
movl
ljmp
fnstenv
mov
mov
loopne
in
pop
repz
ror
mov
fcmovnbe
cmc
leave
aad
mov
push
mov
aam
loopne
or
clc
mov
mov
lods
mov
cld
filds
sti
ret
div
mov
lret
aad
neg
mov
iret
stc
iret
cmc
imul
jecxz
int
repnz
cld
fadd
xlat
cld
cmc
lret
ret
in
mov
repnz
jmp
in
mov
int
or
push
in
loopne
leave
out
shrl
loop
iret
aam
jmp
shl
loop
add
lock
mov
clc
loope
or
mov
in
iret
mov
out
mov
rcl
int3
add
add
out
int3
loopne
stos
scas
cmc
xlat
mov
loopne
les
ret
icebp
jecxz
std
xlat
add
std
out
mov
loope
mov
sarb
fadd
fadds
ret
fdiv
jmp
loope
ljmp
fcmovne
sar
mov
in
add
jecxz
call
or
pop
lret
loopne
jmp
mov
icebp
out
in
ror
lock
stc
cld
ret
add
repz
scas
fucomip
repnz
mov
mov
hlt
sti
fnstcw
leave
fsubr
clc
or
int3
jmp
mov
mov
fldl2e
out
repnz
lock
icebp
in
or
enter
clc
repnz
jmp
lock
mul
mov
out
in
rol
std
add
xlat
xlat
iret
jmp
int
jmp
mov
leave
call
sar
lock
rcr
int3
fcomp
clc
or
enter
add
into
lret
enter
into
call
shl
test
imul
clc
push
jecxz
out
cmpsb
fucomp
rol
test
cld
mov
jmp
in
les
jmp
leave
scas
repz
aad
call
mov
hlt
fldlg2
pop
sti
sti
lock
lret
ljmp
in
mov
jmp
lock
lret
loopne
loopne
add
add
pop
in
add
fidivs
mov
int3
stc
out
jmp
mov
fcmovu
cmc
std
out
enter
in
in
icebp
scas
mov
iret
divb
mov
mov
fcmovu
fcmove
or
out
or
mov
icebp
lret
repz
rcl
out
rcr
shr
lock
or
cld
lock
in
loop
iret
cmc
mov
fldt
sti
hlt
roll
fsubrp
fnop
div
pop
fcmovu
jmp
or
loopne
ret
mov
out
lock
shll
shr
repnz
in
std
std
fucomp
add
cli
mov
jecxz
fsincos
mov
ljmp
mov
mov
ffree
in
dec
ret
mov
jmp
lock
out
repnz
sub
xor
cmp
je
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
add
mov
imul
mov
xor
add
mov
sub
cmp
ja
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
mov
movl
movl
movl
movl
movl
mov
xor
add
jmp
ffreep
sub
xor
mov
add
sar
loopne
add
shr
shll
into
in
fcmovu
ret
mov
fcmovnu
jmp
std
or
in
loop
call
out
call
fcmovbe
leave
shr
fdivr
iret
mov
clc
lock
out
in
decl
lods
in
lods
lods
mov
mov
clc
lret
xlat
into
ror
add
jmp
icebp
jecxz
or
std
lret
fmul
out
enter
lret
cli
icebp
int3
int
sti
mov
ret
fisttpl
fldl2e
icebp
scas
shl
shl
shll
std
call
shr
ret
or
add
push
in
jecxz
leave
scas
ror
loopne
sti
mov
enter
add
ret
sti
push
cld
fiaddl
in
aad
pop
loop
loopne
fidivrl
shlb
enter
clc
fdivrp
fxtract
rcr
add
les
or
mov
jmp
out
push
idiv
hlt
sarb
clc
stc
hlt
loop
cli
push
std
in
into
imul
into
mov
in
jmp
aad
lret
leave
int
add
add
in
fsubr
int3
adc
mov
fxch
out
stc
mov
cmc
in
add
cld
clc
jmp
repz
xlat
aad
shl
out
shr
call
xlat
dec
div
fsub
add
iret
repnz
fucom
in
jecxz
cli
loopne
mov
mov
out
hlt
shr
pop
in
test
repnz
leave
mov
fcmovbe
in
mov
repnz
lret
add
out
jecxz
lret
push
out
mov
xlat
into
mov
fstp
repnz
sarl
loopne
or
icebp
mov
repz
fxch
iret
jecxz
stc
sti
jmp
add
iret
out
or
shlb
shr
mov
mov
fld
cmc
ljmp
sarb
loop
shr
out
fyl2xp1
jmp
loope
pop
fcmovnbe
or
rorl
in
int
into
lock
xlat
imul
out
mov
ror
mov
mov
aam
loope
imul
lret
add
cld
call
aam
aad
icebp
aad
call
in
in
mov
sar
jmp
add
lock
xlat
mov
lods
mov
lock
fdivs
ret
xlat
add
clc
mov
jecxz
mov
lods
mov
fcmovnbe
scas
rcr
rolb
ror
cmc
mov
out
sti
fcomip
pandn
out
scas
repz
hlt
repz
mov
add
xlat
cli
enter
mov
out
lods
lock
sar
mov
aam
rcr
hlt
ret
rorb
stc
ljmp
xlat
out
out
shl
fmulp
iret
aad
cld
mov
or
add
ljmp
mov
out
out
mov
not
add
fistpll
leave
loope
out
mov
mov
mov
int
sti
add
ljmp
or
ret
mov
cmc
mov
in
into
mov
add
fcmovne
ret
or
leave
lret
stc
ljmp
mul
not
xlat
mov
fmulp
clc
icebp
in
hlt
xadd
fucomp
in
out
shlb
mov
rolb
add
stc
add
cli
cld
cmc
push
adc
mov
ret
call
rcl
mov
ljmp
std
stc
or
cli
xlat
out
out
clc
add
test
icebp
ret
out
xlat
out
fidivrl
ret
rcl
in
clc
test
out
enter
jmp
movsb
loop
jmp
mov
mov
sar
cli
int3
rcr
sti
rcl
add
out
mov
loope
out
in
rcl
int3
int3
ror
call
aad
add
out
mov
enter
leave
leave
xlat
iret
repz
clc
div
flds
out
stc
not
leave
add
jmp
mov
ret
stos
loop
repnz
repz
mov
cli
fdivp
or
jmp
shlb
rol
out
mov
call
add
std
mov
mul
psubsw
jecxz
mov
iret
xlat
lret
lods
in
stc
into
mov
in
mov
hlt
or
into
leave
add
ror
jecxz
mov
ret
fcmove
cld
in
ret
rcl
shl
clc
lds
in
scas
not
lods
jecxz
fcmovnu
out
out
icebp
fucomip
cld
cld
clc
cld
mov
add
clc
or
iret
adc
mov
int
lds
xlat
jmp
neg
mov
or
fsubr
rol
jmp
out
icebp
shr
fcomip
aam
cmc
cli
cld
repnz
hlt
hlt
xlat
lret
loope
loopne
ljmp
loope
mov
add
mov
sti
add
aad
sti
out
fmul
add
ret
jmp
loope
leave
mov
mov
in
fadd
jmp
ret
ljmp
leave
in
int3
std
les
loopne
lock
push
in
in
add
hlt
mov
lods
into
mov
jmp
testl
or
iret
add
add
mov
test
enter
call
fsqrt
sti
sar
rcr
fucomi
jecxz
in
test
rol
mov
scas
into
lods
mov
out
add
jmp
add
fcmovne
or
or
in
loope
mov
shlb
shlb
repz
ret
loope
les
shr
mov
shll
rcl
into
fmul
out
repnz
xlat
mov
hlt
add
mov
into
ror
in
jmp
repz
out
mov
ret
jmp
sti
loope
add
in
mov
repz
int
aam
ret
sti
cmc
testb
psraw
leave
add
shrb
mov
fsubr
shl
lret
mov
push
in
not
std
lret
add
push
loope
in
int3
in
out
shl
in
mov
fcomp
ret
fcmovbe
repz
int3
add
aad
fninit
push
lret
jmp
mov
ror
aam
lock
icebp
in
mov
in
aad
fcmovu
int3
ljmp
call
mov
out
repnz
jmp
xlat
int3
imul
mov
mov
or
out
lock
lret
shll
jmp
iret
mov
rcl
fdivp
cmc
or
ret
movsl
mov
aam
in
mov
enter
loop
jecxz
add
std
movl
jmp
jmp
aam
enter
jmp
clc
cld
shl
out
mov
leave
or
dec
mov
repnz
mov
rcl
rcr
lret
ret
aad
mov
lret
fisttps
lret
mov
test
aad
mov
inc
pop
loop
loopne
imul
or
fmuls
mov
cmc
icebp
in
int
mov
mov
fucomp
mov
mov
fstp
std
stc
ljmp
mov
fsubp
xlat
in
loop
idiv
repz
add
pop
mov
add
flds
mov
mov
into
rcl
in
in
mov
rcr
fildl
call
add
stos
out
loope
int
sar
mov
add
rol
lret
pop
mov
adc
or
in
shr
lret
mov
ret
in
sar
sar
into
add
lods
jmp
mov
mov
aad
lock
cld
iret
cli
into
out
mov
fldl
fadd
adc
out
loope
loope
shr
ljmp
aam
mov
fistpll
leave
out
iret
xlat
mov
out
in
clc
cmc
in
aad
mov
loope
add
push
push
add
or
leave
ret
movsb
icebp
ljmp
cld
aam
fmulp
loop
add
in
add
pmuludq
add
or
in
out
mov
mov
stc
lock
stc
out
xlat
mov
icebp
jecxz
aad
add
fsub
jmp
repz
idivl
mov
in
loop
test
repnz
jmp
iret
enter
in
std
loope
pop
add
out
cmc
fdivr
or
mov
loop
rol
mov
repnz
cli
repnz
mov
iret
pavgw
jecxz
out
in
enter
out
sti
leave
mov
add
fimuls
pop
cld
or
add
fucom
into
mov
mov
in
test
fdiv
std
out
shl
sar
loop
out
fxch
clc
stc
call
scas
mov
mov
fucomi
imul
mov
loop
rolb
sti
stc
rcl
add
pop
fmull
mov
mov
in
mov
in
fdivrl
or
ljmp
in
in
test
in
rcr
out
out
lret
aam
loope
pop
idiv
aam
ljmp
lret
stos
scas
xlat
mov
fcmovne
mov
mov
aam
loope
int3
in
shl
or
hlt
or
shl
jmp
xlat
clc
fistpll
add
in
std
ffreep
in
fsub
cli
sarb
lds
clc
sti
repnz
hlt
roll
in
stc
loope
int
ret
lret
call
in
mov
out
jecxz
mov
out
in
leave
stc
or
loopne
out
repz
aad
mov
int3
out
mov
add
push
fisttps
jmp
int
mov
jmp
stc
lock
repnz
or
jmp
int
out
loop
mov
mov
clc
lock
fdiv
or
out
std
aad
or
loope
icebp
mov
ror
hlt
in
out
jmp
rcr
sarl
or
push
testl
leave
int
test
jmp
hlt
loope
cli
sar
cli
leave
jecxz
into
cmc
add
lret
push
leave
cld
or
add
cli
out
call
repnz
mov
repz
int
cmc
ret
inc
fsubr
in
cmc
out
pop
pop
mov
lret
loope
mov
rcl
cld
pop
rolb
fdiv
ljmp
mov
leave
icebp
mov
fdivr
fucomp
mov
ret
add
aam
int3
roll
ret
loope
into
test
call
repnz
fnstcw
cli
aad
std
mov
lret
add
cmpsb
rcr
repnz
mov
mov
out
aad
mov
ljmp
lds
mov
ljmp
aam
mov
push
lret
xlat
jmp
add
adc
mov
ret
loope
loope
cmc
mov
out
hlt
mov
mov
pop
jmp
clc
loop
lock
rol
ret
lret
int
mov
hlt
jecxz
fstp
aam
femms
push
push
or
or
mov
imul
mov
repnz
mov
loop
fildl
out
cli
cli
faddl
jmp
add
repz
hlt
icebp
in
iret
rcl
sti
aam
int3
aad
neg
jmp
sti
add
int
fidivs
ret
in
mov
not
fdivrl
pop
stc
ret
repz
add
lock
out
test
mov
repnz
fucomp
cli
add
mov
add
lods
in
in
mov
loopne
lret
fdivl
int3
add
jecxz
add
stos
mul
ljmp
ljmp
loop
in
loop
icebp
jmp
filds
iret
lret
leave
ffree
mov
mov
fcmovne
mov
fstp
ffree
shl
add
in
into
mov
repnz
mov
pop
mov
ret
rol
lret
fsubr
rcr
lods
xlat
ljmp
shl
repz
ret
idiv
shl
ljmp
int
loope
shl
loope
leave
shlb
jecxz
stc
add
xlat
ret
lock
or
lock
loop
jecxz
shr
cli
lret
loop
mov
push
testb
or
loope
or
mov
out
ret
lret
icebp
fadds
iret
mov
fadd
out
shr
clc
cld
call
icebp
leave
out
ret
test
mov
mov
mov
fcmovb
or
mov
repz
ror
mov
repnz
loopne
lret
int3
mov
add
pop
sarb
lds
hlt
leave
fucom
leave
loope
mov
into
lret
mov
fmul
mov
out
sti
cld
aam
sti
repz
ror
loope
shl
mov
clc
mov
stc
dec
mov
hlt
aad
out
leave
lods
mov
cli
int3
lret
mov
cli
rcr
lock
testl
sti
jmp
loop
fsubr
iret
repnz
sarl
mov
not
icebp
in
movl
rol
scas
scas
repnz
mov
mov
shll
int
fucomp
iret
add
jmp
jmp
loopne
jmp
fstp
icebp
jmp
sti
sar
in
or
aam
repz
imulb
lods
hlt
clc
out
sti
jmp
add
in
enter
lret
cld
cli
lock
lock
mov
mov
mov
iret
sarl
in
ljmp
mov
sti
mov
mov
in
repz
int
ret
pop
add
jmp
psraw
fdiv
shl
mov
sarl
imulb
cld
cmc
xlat
in
mov
add
adc
jmp
shr
stos
div
stc
leave
jmp
mov
lock
push
add
clc
ljmp
stos
mov
icebp
int
mov
fsubr
sarb
fdivrp
leave
ffreep
hlt
add
ljmp
call
add
add
push
fcmovb
in
or
loop
mov
enter
neg
int
aad
testl
shl
clc
fisttpll
lsl
hlt
leave
out
out
in
test
mov
clc
out
mov
faddp
lret
loopne
into
out
rol
shl
into
in
lret
repz
enter
aad
or
fcmovnb
add
add
out
shl
mov
shl
jmp
lret
mov
aad
or
add
add
cld
or
jmp
jecxz
out
ret
lret
hlt
mov
clc
mov
fldl
add
fldz
loope
scas
sarb
repnz
int3
std
flds
pmulhw
loope
lret
icebp
test
shl
into
int3
call
call
shl
cli
repnz
inc
or
xlat
add
ret
mov
xlat
ret
in
shr
mov
fnstsw
enter
rcl
jecxz
sti
lock
rol
mov
push
jmp
add
add
cld
or
fcmove
lods
movsl
int3
in
ljmp
cld
into
shl
cld
clc
out
add
xlat
in
out
incb
out
rol
in
jmp
out
loopne
mov
jecxz
sti
fcmovnbe
pop
rol
incb
iret
loop
jmp
mov
leave
jmp
in
stc
aad
lret
rcl
ret
mov
push
ret
stc
add
out
in
add
int3
iret
rep
shl
lods
div
cmc
repz
mov
hlt
or
cmc
jmp
ret
lock
icebp
repz
imul
aam
add
in
fdiv
mov
flds
lret
out
ret
loopne
std
in
shr
into
mov
loopne
xlat
ror
leave
repnz
rcl
ror
icebp
imul
pmaxsw
cmc
add
fnstsw
lret
fcom
sti
clc
ret
out
cld
int3
fcom
ror
cli
jmp
out
shll
mov
into
stc
ljmp
loope
in
jecxz
cmc
jecxz
out
lret
mov
fxch
out
xlat
mov
ret
repz
or
ffree
cmc
add
mov
fmulp
loope
lret
out
aad
repnz
cli
lock
fdivr
cld
call
push
out
or
shr
in
in
les
repnz
in
clc
repz
jecxz
std
fdivr
push
fimull
pop
enter
jmp
int
repz
int3
fsqrt
call
add
repnz
jmp
jecxz
in
leave
enter
cmc
shl
clc
jmp
mov
cld
loop
fsub
call
ljmp
in
jmp
call
in
int
jmp
in
in
stc
mov
push
repnz
jecxz
enter
mov
xlat
repnz
into
in
or
rcr
loopne
out
int3
enter
mov
iret
int3
iret
mov
mov
mov
incl
std
add
loop
lds
adc
leave
mov
aam
ret
fdivr
cli
cli
rcr
incl
rcr
add
ljmp
mov
rol
int
mov
int
fucomp
jmp
mov
cli
decb
enter
mov
in
in
in
mov
mov
mov
rcr
add
jmp
or
leave
fpatan
lock
out
scas
in
ror
testl
in
push
rol
out
add
lods
shrl
mov
mov
bnd
lock
fcmovb
add
jmp
int3
out
out
mov
jecxz
shl
leave
mov
into
repnz
aad
add
push
add
push
std
mov
enter
imul
shr
hlt
repnz
add
mov
pop
ljmp
aam
std
lods
shl
faddp
xlat
aam
cli
out
hlt
fcmovnb
clc
mov
in
fstp
add
push
cmc
loopne
fimuls
lret
out
jecxz
mov
fnstenv
loop
aam
rolb
rorl
out
jmp
repz
loop
vshufps
rcr
out
xlat
mov
cmc
fcom
lock
jecxz
mov
pand
lret
icebp
ret
mov
aam
fst
aam
or
push
stc
aam
jmp
out
in
mov
jmp
clc
mov
call
mov
out
fcmovb
clc
fiadds
in
loop
repz
loop
out
hlt
stc
fdivs
icebp
add
fstp
rol
add
stc
iret
into
fucom
aad
loopne
cmc
ljmp
fdivr
add
loope
pop
loopne
stc
cli
sti
dec
iret
leave
scas
lds
mov
mov
repnz
fcmovnu
cld
icebp
xlat
incb
add
fdivs
mov
out
shr
call
idiv
cli
stc
loope
fldl
rol
push
fucomip
enter
in
out
stos
mov
mov
jmp
shr
add
filds
ret
ret
mov
rcr
in
add
mov
lock
shr
vpminub
mov
fdiv
sar
aam
loop
add
mov
cmc
icebp
xlat
into
clc
out
out
stc
fsub
fscale
clc
hlt
add
cld
push
sti
add
ret
hlt
ror
into
stc
out
out
fdivrl
add
add
in
or
fdiv
into
out
loop
int
cli
mov
into
mov
iret
fdiv
push
repnz
leave
shl
fdivr
adc
mov
icebp
aad
out
mov
idiv
test
rol
mul
pop
vpaddw
ljmp
ljmp
jmp
sti
hlt
flds
fld
adc
rol
in
loop
mov
sarl
call
ffreep
jmp
incb
pand
aam
out
call
into
out
fxch
fistpll
fdivrp
out
mov
aad
int
iret
scas
enter
rcl
out
hlt
mov
jecxz
aam
repz
loopne
mov
out
loop
add
ror
out
test
shlb
fnstcw
ror
loopne
add
faddl
fsubr
aad
add
mov
lock
mov
repnz
cli
fcomp
mov
mov
pmovmskb
in
stc
cld
into
ret
leave
mov
mov
icebp
jmp
hlt
mov
filds
or
movb
in
enter
aad
mov
cmc
mov
add
fcmovu
lock
loope
ret
add
in
shr
mov
idiv
lret
mov
jecxz
ret
xlat
push
fdivrp
rcl
or
fcmovu
lret
ljmp
out
mov
mov
stc
add
cmc
repz
or
or
sti
aad
push
loope
call
mov
imul
stc
out
sti
add
fsubr
loope
jecxz
add
or
adc
lret
mul
mov
iret
loope
std
clc
fmulp
iret
aad
decb
scas
int3
rcr
ror
int3
ljmp
mov
aad
sar
add
or
int3
mov
call
clc
jmp
clc
ffree
fiadds
rcr
fdiv
leave
add
scas
iret
repnz
mov
cli
lret
sti
mov
in
mov
icebp
ljmp
fcomip
call
loop
out
sar
mov
in
lret
fcomip
in
fyl2xp1
fcmovne
add
add
mov
mov
fsubr
leave
cli
enter
add
cld
cli
add
xlat
flds
add
in
scas
ljmp
neg
repnz
testl
aam
hlt
int
rcr
out
out
test
ror
fmul
mov
mov
fcmovnb
rcl
lds
aam
or
ffree
xlat
loope
shr
xlat
loopne
lret
leave
shll
neg
shl
out
or
adc
enter
not
jmp
xlat
aad
mov
stc
mov
in
out
or
leave
mov
out
out
out
sar
call
mov
in
aad
vpxor
rol
scas
ret
call
leave
int
in
lock
mov
repz
call
int3
leave
shl
mul
jecxz
mov
in
divb
stc
clc
in
aam
int3
xlat
add
ljmp
in
fdivrl
lods
mov
shr
cld
ret
ljmp
hlt
hlt
or
in
jmp
fmulp
scas
shrl
cmc
into
fmul
mov
jecxz
sarl
movb
les
int
xlat
in
mov
into
icebp
int
mov
repnz
aad
mov
cld
loope
fadds
out
loop
ffreep
jmp
in
shr
mov
clc
enter
mov
fcmovnb
add
loopne
test
ljmp
sar
cli
clc
loop
cmc
out
out
out
or
add
fsub
fnstenv
mov
xlat
out
iret
int3
cli
sar
out
jecxz
add
ljmp
into
push
in
lock
hlt
out
mov
out
mov
dec
out
cmc
cmc
add
add
icebp
mul
push
add
icebp
bnd
aad
mov
cmc
rol
mov
mov
std
add
pop
fmul
fadd
or
ljmp
loope
shl
sti
iret
in
leave
out
out
std
fistpll
loop
cld
incb
in
scas
mov
aad
lock
in
mov
lock
add
fiadds
cld
fisttpll
adc
call
iret
mov
iret
aam
xlat
lock
xlat
aam
leave
or
aam
fcmovne
out
into
jmp
repnz
in
clc
scas
jmp
mov
cli
jecxz
aad
clc
out
jecxz
stc
call
out
shll
out
mov
out
in
ret
out
fcomip
add
lret
fucomi
int3
icebp
int
mov
shr
into
out
mov
cli
mov
cld
mov
jmp
fiaddl
shl
push
adc
repnz
in
jecxz
hlt
cmc
mov
fmul
out
xlat
hlt
add
out
aam
lret
ret
add
iret
ret
enter
loopne
not
fcmove
mov
ror
repz
ljmp
repz
out
aam
in
mov
aam
shr
rcl
fsubr
ret
or
lret
lret
leave
repnz
jmp
ror
ret
into
mov
fsubrp
cmc
call
test
add
push
ror
loopne
lods
in
ret
mov
shlb
add
add
stc
cld
stc
into
leave
ret
out
int3
jecxz
in
jecxz
ljmp
mov
in
rolb
add
shl
in
scas
leave
cli
out
mov
int3
int
fdivr
xlat
or
into
decl
fxch
repz
out
mov
out
in
lock
mov
add
fcomip
int3
push
decl
jmp
lret
loop
jmp
shl
lret
mov
mov
hlt
add
aam
std
in
rorl
sarl
loopne
out
mov
not
std
pop
les
fisttps
jmp
mov
hlt
mov
call
mov
mov
sar
stc
add
dec
rol
hlt
in
mov
repnz
mov
shl
ret
rolb
out
fisubrl
into
mov
mov
sarb
add
add
stc
icebp
repz
loope
in
int
clc
in
lock
ffree
out
repz
call
sar
icebp
pop
add
add
lsl
or
ror
ret
mov
in
not
mov
mov
add
shl
clc
sti
lds
hlt
mov
shl
in
mov
mov
loopne
cld
cmc
icebp
jmp
fsts
call
sti
jecxz
out
iret
repz
fdiv
mov
loop
inc
add
leave
add
ret
out
les
leave
sarl
call
out
ffreep
enter
aam
out
shr
loop
ret
in
repz
in
out
iret
int3
enter
cli
fcom
shl
mov
cld
or
jmp
out
jmp
mov
rol
fadd
in
rcl
mov
xlat
sti
mov
xlat
rolb
lret
out
or
out
fidivs
jmp
lret
call
aam
add
cmc
cmc
decb
or
adc
loop
mov
mov
cld
int3
fucom
loope
or
std
or
pslld
lods
mov
repz
enter
shl
std
loope
sti
sti
roll
pop
add
fadds
fcmovu
int3
shlb
neg
shl
call
loope
lock
sti
aam
add
enter
or
in
xlat
repnz
sarb
mov
fdiv
repnz
std
add
or
ljmp
ret
sti
clc
out
add
add
ret
lret
out
push
jmp
mov
leave
lret
out
ror
jmp
ror
stc
loope
sar
in
rcl
push
add
stc
int
mov
lret
loope
rol
aad
mov
mov
neg
out
push
clc
jmp
imulb
lock
mov
rcr
mov
add
clc
stc
loope
jmp
bnd
iret
shl
enter
mov
out
mov
jmp
iret
or
lret
fsubp
in
lret
shlb
mov
out
rol
cmc
ret
cli
aad
aam
in
iret
in
loope
fcmovne
mov
in
int3
jmp
mov
mov
enter
in
into
icebp
mov
shr
sti
int
cmc
mov
enter
sti
jecxz
xlat
or
out
vaddsubps
lock
lock
leave
jmp
aam
cli
in
ror
rol
mul
add
icebp
shl
lret
shl
mov
scas
fcmovnu
leave
iret
aad
incb
fcomi
cli
loopne
out
in
loopne
lods
loope
scas
mov
shr
mov
out
mov
in
shr
jecxz
ret
in
xlat
test
push
jmp
mov
in
loopne
in
in
into
lock
add
cli
sti
icebp
imul
les
jecxz
out
mov
mov
call
stc
cli
add
ror
ret
hlt
pop
ror
add
ljmp
repz
call
sti
fldz
fldl
loopne
fcmovne
fmul
add
adc
call
jmp
jmp
fdiv
out
rcr
add
ret
or
adc
lods
jmp
int
int
mov
xlat
fdivrl
neg
movl
iret
scas
out
scas
ror
loopne
leave
shl
mov
mov
repnz
out
jmp
xlat
cmc
lret
hlt
mov
cli
out
int
aad
call
shr
std
in
repnz
or
test
leave
ljmp
fstpt
aad
add
mov
aad
or
iret
icebp
repz
fincstp
add
vpminsw
ret
out
in
aad
in
mov
mov
test
std
sti
int3
in
add
or
in
jecxz
ljmp
mov
rcl
iret
lods
stc
shl
frndint
fcmovu
fdivrl
add
fadd
loop
clc
out
stos
shl
out
cmc
loop
iret
cmc
mov
rcr
ret
pop
loop
jmp
add
shl
repz
shl
aam
mov
cld
vcvtpd2dq
out
out
add
in
mov
jecxz
into
test
fadd
enter
cmc
in
add
aad
incl
fcomp
in
cli
out
lret
lods
aad
lods
lret
ror
xlat
les
add
sti
or
fdivrp
or
fiaddl
leave
ljmp
idiv
lock
in
ljmp
int
clc
add
cli
ljmp
loopne
hlt
mov
ret
sti
fsubr
ret
add
add
in
jecxz
enter
lret
lods
loope
fdivs
jmp
add
or
lret
into
out
stos
mov
jmp
ror
test
clc
fsubr
mov
push
out
into
in
enter
in
xlat
scas
shll
fcmove
std
mov
mov
fadds
add
loop
jecxz
jmp
or
rcr
les
repz
mov
out
jecxz
incb
add
in
jmp
shl
lock
mov
loop
mov
lock
add
ljmp
cld
lar
enter
jmp
mov
lret
rcl
jecxz
mov
clc
vpsubb
std
out
out
loop
repnz
test
lods
mov
mov
fdiv
hlt
lret
in
call
jecxz
test
jmp
lret
call
push
add
lret
pop
pop
flds
loop
mov
loope
mov
jmp
mov
cli
sarb
fstp
fstp
loop
scas
lret
loop
aad
mov
dec
sti
add
cld
mov
leave
iret
in
std
or
mov
stos
aam
stc
ljmp
out
shl
sar
faddl
pop
hlt
add
or
or
mov
mov
in
int
std
fdivrp
int
ror
repnz
rcr
out
jmp
add
les
rcr
mov
in
add
rcl
in
cmc
add
fucom
or
cli
mov
fsubr
into
ret
hlt
mov
int3
vpinsrw
clc
loopne
clc
push
fcmovbe
or
add
sti
or
fmuls
out
loopne
mov
jmp
mov
mov
mov
leave
mov
loopne
cmc
aam
dec
fdivr
out
loopne
into
shlb
out
fcmovnbe
jmp
cmc
sti
fdivr
add
out
add
clc
flds
call
rcl
mov
shl
mov
ror
add
ret
add
out
out
out
loope
jmp
call
mov
not
fsub
add
loop
in
lods
loope
test
mov
rcl
jmp
jmp
mov
rcl
out
in
out
fiaddl
add
mov
imul
iret
scas
mov
mov
fiaddl
rcr
loop
jecxz
jmp
testb
repz
mov
sar
int3
sti
in
int3
mov
aad
jmp
call
into
add
shl
loopne
out
fcom
mov
call
out
add
lret
cli
in
int
lods
rol
out
out
mov
mov
cld
lock
jecxz
or
ret
repz
rol
mov
mov
mov
fstpt
fiaddl
push
push
fstp
repnz
rorb
decl
decl
decl
decl
decl
cmp
jae
mov
movl
mov
movl
lea
mov
mov
xor
add
mov
imul
mov
mov
mov
mov
mov
xor
add
mov
imul
mov
xor
add
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
mov
mov
xor
add
mov
imul
mov
xor
add
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
mov
xor
add
imul
add
mov
jmp
mov
xor
mov
xor
add
mov
mov
xor
add
imul
or
lea
mov
xor
add
lea
mov
jmp
mov
xor
mov
lea
jmp
scas
in
dec
je
mull
imul
lods
jns
add
cmc
imul
sti
aad
fucomip
fcmovbe
mov
out
stc
fdiv
cmc
add
or
scas
stos
in
jecxz
rol
mov
into
mov
imul
cld
jecxz
out
add
jmp
mov
leave
test
icebp
jmp
fsub
fsubp
std
mov
aam
or
ret
out
loopne
loope
rol
fldl2e
stc
out
cmc
int
stc
loop
or
in
enter
enter
div
div
out
call
mov
hlt
jmp
lret
loopne
leave
ror
call
mov
mov
cmc
cli
out
fisttpll
or
stc
fistpll
jmp
aad
mov
sar
push
sar
or
ror
mov
jmp
mov
fcomip
cli
shl
cmc
cld
neg
imul
loop
out
ret
enter
int
stc
rcr
out
out
repnz
loopne
add
fimull
loop
add
iret
clc
or
int
rcl
fstp
stc
repz
add
cld
loope
ljmp
lret
mov
scas
enter
fidivrl
repnz
add
std
or
into
out
lret
leave
sti
lock
repz
aam
int3
loop
repnz
out
cli
push
ljmp
out
in
in
lret
shll
mov
xlat
cmc
shl
add
or
xlat
iret
lock
call
fdivl
fsqrt
shl
lret
loope
pop
pavgw
pop
out
in
into
mov
fcmovnbe
repnz
xlat
sar
lock
mov
mov
out
iret
in
mov
ret
div
fsubr
aam
out
mov
fucom
loopne
repz
or
out
in
or
push
mov
icebp
shl
shl
aam
cmc
stc
into
hlt
in
out
dec
hlt
sti
hlt
fsubr
clc
out
lret
add
fld
fdivl
fcom
fidivl
mov
mov
cld
or
out
ror
mov
mov
mov
idivl
add
out
in
mov
in
mov
out
int
aad
clc
xlat
in
cld
loope
loope
not
jmp
add
leave
in
mov
loopne
mov
shr
jmp
out
sti
add
int
or
decb
out
rcl
clc
into
out
lods
sti
mov
mov
neg
clc
into
ljmp
lock
fcos
fucomi
out
adc
mov
icebp
rcl
int3
out
ljmp
fsub
mov
add
std
jmp
imulb
out
mov
lock
int
shr
add
lret
loopne
add
out
adc
jmp
ret
mov
call
rcl
in
loop
mov
or
or
fscale
enter
call
shll
mov
mov
hlt
not
pop
ljmp
mov
shll
mov
ret
mov
in
or
in
add
out
xlat
bnd
mov
rol
repnz
fst
test
rcl
loopne
sti
ljmp
enter
shl
jmp
out
add
inc
into
add
add
stc
jmp
out
ljmp
shrl
lods
out
jecxz
mov
jmp
mov
fxtract
decb
rcl
mov
rcl
mov
mov
mov
out
std
ret
pmuludq
call
mov
mov
call
xlat
stc
std
cmc
add
mov
add
cld
ljmp
out
rol
loop
mov
aad
mov
loope
lock
icebp
ror
loop
faddp
clc
mov
ror
repz
mov
fdiv
out
mov
aad
sar
in
int
fucom
fdivs
mov
xlat
hlt
aad
mov
jecxz
in
lock
push
psraw
iret
bswap
mov
ljmp
repz
mov
cli
roll
add
fcmovu
sti
psubw
or
add
sarb
repnz
mov
in
ljmp
mov
ljmp
fsubr
leave
hlt
rcl
mov
call
repnz
out
shl
sar
loop
push
leave
add
fbstp
mov
int3
lret
mov
clc
or
sti
add
in
fdivl
mov
aad
fidivrl
aam
shl
out
out
clc
scas
scas
shl
xlat
ret
rcl
icebp
mov
add
sti
les
fdivp
push
add
mov
loope
out
icebp
repnz
mov
aad
in
sar
fdecstp
fneni(8087
ret
loop
or
int3
out
mov
ror
hlt
repz
repz
cli
stc
lock
out
add
jecxz
in
or
std
rorb
clc
iret
or
ljmp
repnz
lds
push
push
sar
xlat
icebp
xlat
hlt
lret
in
stc
clc
loop
lods
aad
iret
enter
call
in
xlat
xlat
ret
clc
pop
in
fildl
mov
add
adc
lock
shll
call
xlat
out
add
icebp
in
push
jmp
out
in
icebp
ret
mov
in
rcr
xlat
call
add
movb
ljmp
jecxz
movsb
mov
repnz
mov
in
mov
frstpm(287
hlt
hlt
call
shrl
lods
lock
into
cli
mov
lock
or
std
cld
add
lock
int
in
mov
rcl
clc
sti
out
mov
les
fisttps
int
ret
lods
out
lock
repz
fsubrp
hlt
sar
sar
std
or
cli
push
add
jmp
mov
in
icebp
mov
in
int
neg
rcr
stc
aad
add
lds
out
loop
mov
mov
rol
mov
fxch
mov
stc
add
std
fmul
enter
jecxz
enter
cmc
jmp
aam
loop
loope
hlt
hlt
xlat
aam
jmp
or
fsubr
shr
in
hlt
fcmovne
hlt
les
repz
mov
lret
jmp
add
out
push
int3
test
loope
leave
mov
fcomp
aad
incb
lock
mov
cld
add
sarb
enter
mov
sti
stc
shl
hlt
out
push
cmc
vpsubsw
out
leave
test
stos
lret
out
iret
mov
stc
add
stc
add
movl
jmp
jmp
int
mov
fcomi
sti
shr
out
lret
sar
neg
out
or
add
add
adc
jmp
in
fcmovbe
hlt
mov
mov
push
fst
cld
testb
in
out
fisttps
fsubp
int
into
scas
enter
in
fmul
mov
shl
xlat
xlat
leave
clc
or
loopne
fisttpl
jmp
loop
mov
out
cmc
mov
aam
fdiv
mov
loopne
cld
mov
or
out
shr
rcl
ljmp
xlat
mov
shll
rolb
std
or
cld
repz
hlt
in
mov
mov
out
aam
add
fcomi
cld
add
push
movl
mov
mov
lret
mov
in
mov
loope
lret
in
or
into
out
enter
mov
rcl
shl
in
fsubp
enter
fmul
loop
mov
in
in
rcr
mov
cli
add
ret
pop
loopne
out
adc
shl
in
lret
sti
ret
into
mov
out
std
cli
clc
mov
mov
ret
clc
enter
int3
in
mov
enter
xlat
stc
std
aam
shl
in
add
add
adc
fidivrl
out
rcl
iret
lret
mov
lock
pop
hlt
or
fmulp
fcmovb
leave
shlb
aam
jmp
xlat
ret
cmc
fiadds
in
clc
add
std
jmp
mov
out
mov
mov
mov
repz
add
roll
pop
jmp
add
rcr
icebp
ror
in
ffreep
mov
aam
rol
ret
jecxz
in
rol
sar
enter
out
out
lods
shr
mov
in
out
leave
into
cmc
leave
icebp
cli
fdivp
neg
fcmovb
mov
incl
icebp
scas
scas
in
into
shlb
iret
ret
ret
repnz
or
or
cmc
enter
out
fsubr
repnz
mov
fcmovbe
int
repz
neg
std
add
push
jmp
fists
cli
mov
aad
mov
leave
enter
in
sti
std
in
les
mov
mov
into
call
iret
mov
add
repz
mov
fucomp
jmp
ljmp
mov
shl
jmp
mov
push
loop
clc
add
mov
leave
mov
cmc
fcom
fdivp
fcmovnbe
rcl
loopne
mov
loopne
ret
mov
repnz
fcmovbe
mov
mov
lock
mov
paddw
enter
loopne
rcl
lret
mov
ljmp
fxch
rcr
icebp
loopne
cli
fiadds
mov
les
shr
ljmp
std
fadd
cmc
xlat
out
out
aad
fcmove
leave
rcl
mov
aam
xlat
dec
mov
sti
loope
rcl
cmc
add
add
loop
incl
in
in
lock
fcomi
fidivl
add
not
push
add
fdivrp
roll
rol
xlat
jmp
sarl
shr
push
fsubp
loopne
add
movb
fisubrl
lret
cli
clc
shl
mov
pop
fmul
cld
aad
hlt
ret
fcomip
fldl
mov
jecxz
lret
in
repnz
mov
rcr
cld
aam
fmuls
add
int3
mov
sti
lock
into
std
sar
fdivrl
rcr
jecxz
std
add
mov
lret
loop
mov
in
lods
ljmp
repnz
add
cld
out
fnsetpm(287
push
ret
or
jmp
ret
lret
out
mov
ret
mov
add
pmaxub
jmp
into
lret
in
out
in
rol
lock
xlat
out
ret
fst
ret
into
fadd
fcmovne
aad
add
call
mov
lret
in
enter
jecxz
mov
faddl
test
push
sarb
rol
scas
repnz
clc
xlat
fdecstp
mov
sar
ljmp
iret
shll
mov
xlat
leave
xlat
mov
cli
lock
ret
out
lret
loope
int
or
out
aam
out
out
mov
loope
iret
fadd
sar
in
idiv
or
out
rol
loopne
jecxz
imul
aad
out
enter
aad
into
in
add
shl
add
cmc
jecxz
ljmp
mov
sti
clc
jmp
icebp
faddl
lock
stc
lret
int
push
add
lock
icebp
aam
sti
out
into
aad
in
fidivrs
lock
out
psraw
fdiv
lods
lods
loop
mul
repnz
jmp
repz
into
rcr
mov
loopne
rcl
int
jecxz
enter
into
iret
in
mov
add
in
stc
jecxz
cmc
stc
or
lret
int
adc
sar
in
fcmovbe
in
iret
leave
rcr
rcl
add
call
loopne
jmp
in
ftst
out
shl
sti
loop
int
idiv
mov
les
stc
add
out
lock
repz
ror
ljmp
mov
loope
fisttpl
add
jmp
lods
vpsraw
leave
idiv
cli
xlat
add
shl
sar
clc
lret
loop
enter
rol
fucomp
repnz
aad
int3
in
push
jmp
hlt
mul
jmp
out
or
aam
adc
lret
aam
jmp
cli
divb
repz
jmp
add
cmc
loope
scas
cmpsb
divl
lret
in
icebp
rcr
int3
loop
ret
in
rcr
enter
ffreep
repz
rcr
repz
shlb
xlat
mov
shl
idiv
aad
inc
int3
mov
repz
mov
fbstp
aam
mov
imul
out
cld
movb
loopne
mov
into
mov
fcmovne
call
mov
icebp
add
in
ffreep
add
rol
iret
add
repz
icebp
mov
into
enter
mov
jmp
not
rol
mov
fdivr
cmc
cld
or
out
mov
jecxz
in
neg
out
idiv
cld
into
mov
sti
jecxz
sti
cli
loope
repnz
sti
in
aam
xlat
into
sarb
fsub
std
cld
or
or
into
iret
fnop
imull
lock
fcom
sti
cli
repnz
rcr
clc
fmuls
fcmovu
in
aam
or
fmul
int
mov
out
out
out
lret
lret
sarl
clc
pop
sarb
jmp
repnz
into
into
mov
mov
icebp
out
fiadds
clc
loopne
loope
push
lret
fcmovnu
fucomp
loop
jmp
out
in
call
jmp
shr
incb
ret
rolb
or
jmp
push
push
leave
mov
mov
rcr
mov
shl
add
jmp
rcl
fcmovbe
out
loop
or
test
call
int
rcr
in
xlat
int
aad
mov
in
faddl
in
jecxz
lret
jecxz
fsubr
loope
neg
rcl
stc
aam
fcmovne
mov
filds
or
out
jmp
sti
cld
out
scas
int3
test
mov
leave
ljmp
add
sti
add
clc
inc
or
out
mov
mov
in
in
div
sar
mov
add
ljmp
iret
or
mov
rcl
idiv
mov
fdivr
jmp
out
push
lock
cld
call
or
or
call
jecxz
aad
mov
sti
repz
lock
out
rcr
out
in
cld
lret
mov
iret
mov
out
shl
fstp
ror
out
out
rolb
add
mov
decb
lock
faddp
ret
leave
jmp
in
clc
aam
loope
loope
loop
add
aam
add
fcmovnb
ljmp
jmp
mov
aam
mov
add
lds
fldl2t
loopne
jmp
mov
out
test
in
in
lock
hlt
jmp
push
in
or
add
loop
rol
rol
in
mov
jmp
rcl
ret
or
jmp
or
faddl
iret
in
mov
shr
repz
add
rcl
neg
in
ror
ffree
std
lds
jecxz
int
ror
mov
in
loopne
out
std
mov
fnstcw
clc
cmc
aam
add
std
aam
ljmp
icebp
aad
out
leave
cmc
cld
idiv
sti
imul
in
add
fdivr
stc
fsubr
icebp
fadd
shr
mov
jmp
mov
out
sar
xlat
add
ret
in
out
call
loope
jmp
lret
sti
ljmp
repnz
lds
int3
mov
in
in
mov
mov
fstpt
lret
jecxz
or
jmp
not
loope
xlat
aad
lret
jmp
mov
hlt
fmull
iret
decl
icebp
ret
leave
in
call
fmul
stc
fcmovnu
in
into
icebp
loope
fldl
add
ljmp
rcl
call
shr
mov
add
cmc
shl
aad
rcr
aam
cli
loope
leave
test
shr
mov
hlt
add
stc
aad
sarb
aad
ffreep
or
scas
out
icebp
mov
lret
in
mov
icebp
loop
sti
std
aad
out
loop
or
repz
mov
lock
enter
out
fcomp
sar
mov
or
std
faddl
int
test
repnz
fucomp
cmc
in
in
xlat
into
fxch
jmp
aam
add
movl
jmp
repnz
iret
iret
aam
in
mov
out
in
jmp
ret
out
hlt
out
loopne
loop
out
mov
shl
fucomi
rcl
sarb
aad
hlt
jecxz
lock
mov
clc
push
scas
scas
mov
in
in
mov
out
enter
loop
test
aam
out
int
fucomp
mov
mov
shl
clc
mov
sarb
cld
out
out
in
or
fisttpl
filds
int3
jecxz
les
fcomip
lods
mov
in
ret
cld
stc
stc
sar
clc
add
loopne
fcom
in
stc
adc
fdivp
in
loop
mov
rcl
in
call
fcmovnu
add
ljmp
in
loop
ret
int3
scas
scas
aam
not
out
icebp
call
rcl
ret
in
jmp
cli
enter
call
in
call
ffreep
shl
add
rolb
enter
repnz
icebp
shll
fdivrl
mov
or
in
ljmp
mov
aad
into
ljmp
fsub
fsubr
int
push
add
add
pop
rcr
add
mov
scas
mov
mov
lret
push
out
ljmp
fisttps
incl
add
or
ret
in
lods
in
lret
lock
mov
fdivp
call
fisttpll
or
or
loopne
mov
repz
ljmp
int3
call
add
cli
icebp
cld
paddw
in
jmp
fistpll
mov
cmc
int3
fdiv
stc
cld
iret
inc
jecxz
std
out
rorl
hlt
out
in
iret
int
mov
leave
out
aad
mov
aad
cld
ret
enter
iret
clc
shl
fidivs
jmp
in
fdivrp
in
std
pop
std
mov
fst
add
enter
out
call
in
icebp
jecxz
lock
jmp
cmc
mov
rcl
fdivp
ljmp
in
mov
rol
fndisi(8087
int3
int
ljmp
mov
cld
add
leave
hlt
jmp
shr
hlt
lock
shrl
aam
jecxz
loopne
loopne
add
jecxz
add
mov
sti
cmc
test
out
std
fcmovnu
fld
mov
neg
in
jmp
in
lret
out
enter
sarb
icebp
ror
add
mov
add
fucomip
fsubrp
enter
rol
fucomi
out
sti
mov
mov
shl
cli
roll
vpaddw
adc
shrl
jmp
in
mov
fnstenv
idiv
xlat
or
fxam
sti
stos
ret
iret
out
idiv
call
hlt
out
hlt
repnz
shl
fcmovu
add
hlt
cmc
lret
in
iret
int3
scas
ljmp
sti
enter
fmul
mov
in
add
cli
aad
out
ror
scas
loopne
jecxz
imul
clc
iret
mov
fdivrs
mov
ret
leave
fdivrp
push
pop
enter
jecxz
div
aam
enter
lret
lock
into
les
or
decl
pop
in
int
fnsave
leave
clc
fmul
mov
add
lock
loope
in
add
rcl
sar
jmp
repz
jmp
mov
add
mov
or
or
mov
lods
leave
into
mov
icebp
sarb
fmulp
push
sti
add
vcvtpd2dq
jmp
fsubr
hlt
in
in
mov
call
std
add
sti
rorb
shr
or
enter
in
shl
mov
mov
mov
psubw
lret
repnz
les
out
mov
fnstsw
mov
neg
cld
out
adc
ror
loop
mov
iret
in
in
cli
ljmp
clc
fdivp
ljmp
lods
in
shr
mov
vshufps
fcomp
xlat
lock
hlt
fadd
out
lret
out
pop
loop
or
into
shlb
lods
ljmp
fcomi
loopne
pop
add
imul
add
out
rcr
repnz
into
test
mov
loope
in
add
lret
loopne
add
sti
add
mov
sar
jmp
stc
xlat
hlt
mov
fcomi
std
fdivrp
out
in
leave
clc
ljmp
mov
mov
fdivs
fldl
mov
enter
push
cmpsl
ret
int
out
iret
loop
fsub
icebp
iret
fmul
mov
stc
div
shl
call
fadd
xlat
in
jmp
repnz
mov
sarl
add
rolb
pop
loopne
cli
fsub
out
mov
mov
rcl
mov
ret
cld
shl
in
shl
fadds
lret
loopne
int3
iret
mov
mov
out
ror
in
mov
mov
in
jmp
aam
out
stc
clc
iret
in
into
mov
aad
mov
ljmp
ljmp
hlt
cld
dec
in
mov
ret
in
lock
jmp
cli
sti
std
ret
jecxz
shl
or
or
in
int3
or
lret
shl
out
loopne
shl
shr
not
out
cmc
sti
hlt
rolb
in
add
lret
test
in
aad
lret
mov
in
mov
clc
mov
out
out
shl
cmc
incb
into
cli
in
lock
test
div
repnz
in
stc
in
xlat
int3
in
hlt
add
rcl
xlat
cmc
out
jecxz
or
lret
shl
mov
in
fucomip
hlt
hlt
mov
ret
std
loop
stc
jmp
pop
lret
stos
mov
mov
iret
mov
rol
sti
std
stc
fucomip
in
les
cli
in
adc
fsubrl
repz
aad
mov
int3
add
add
cmpsl
scas
lret
out
mov
into
int3
mov
mov
fstp
jmp
rolb
loop
dec
jmp
mov
mov
mov
int
mov
lret
in
repz
fiadds
add
add
std
neg
push
or
or
push
out
shrl
mul
imul
out
into
mul
xlat
fucom
mov
loop
in
cld
in
iret
out
int3
into
loop
not
aam
iret
hlt
jmp
into
sarl
aad
loop
in
cmc
cmc
loop
cmpxchg8b
into
lret
shl
out
in
mov
roll
jecxz
push
pop
shl
out
fcmovnu
mov
jmp
sti
loopne
jecxz
std
shl
lds
fninit
out
or
in
lret
mov
call
loopne
fdivp
mov
repz
fadd
mov
jmp
mov
mov
mov
out
fcmovb
leave
aam
lock
loope
enter
loope
in
jmp
in
mov
jmp
ljmp
in
push
in
cld
or
lods
call
mov
shr
hlt
aad
mov
fucom
in
jmp
out
push
out
fisubrs
mov
aad
xlat
icebp
add
or
add
or
enter
out
call
mov
add
in
mov
out
push
in
rcr
out
ljmp
in
clc
leave
rcr
mov
fnclex
hlt
mov
stos
shr
xlat
xlat
out
repnz
aam
repz
add
add
cmc
icebp
out
fld
add
lock
repz
aad
mov
into
mov
mov
ret
add
not
push
mov
ret
out
in
divl
lret
icebp
add
rol
int
les
out
add
sti
int3
icebp
loopne
mov
repnz
mov
std
aad
cmc
add
leave
or
mov
lret
cmc
repz
rol
fdiv
fidivrs
xbegin
loopne
add
add
in
loopne
neg
jecxz
lods
lock
mov
ror
hlt
repnz
rcl
mov
loopne
pop
lret
test
jmp
in
fcmovbe
shr
cmc
mov
cld
loopne
out
div
in
cld
push
add
icebp
jecxz
stos
mov
in
jmp
mov
cld
cld
xlat
fcmovbe
fdivr
pop
out
ret
into
icebp
in
mov
iret
enter
int3
jmp
sarb
fadds
paddsw
push
push
mov
mov
int3
mov
mov
flds
shl
int3
neg
aad
cli
or
into
int3
push
add
div
lods
shl
ljmp
rcl
out
loope
ret
aam
in
cld
fcmovnu
scas
repz
repnz
mov
ror
icebp
shl
into
rol
inc
ret
mov
jmp
or
fnsave
mov
aad
mov
jmp
pop
fldl
stc
shll
test
shlb
add
enter
ret
add
in
incb
out
ljmp
mov
xlat
jmp
repz
mov
mov
lret
add
or
lret
cmpsb
in
mov
loope
fildll
enter
testl
cli
in
in
leave
ljmp
sti
std
sarb
mov
enter
or
mov
in
mov
mov
mov
ret
fildl
int3
stc
repz
jmp
imul
fmull
fldlg2
vpsrlq
test
loopne
int
mov
icebp
out
call
stc
test
filds
fucomi
fadd
testl
ficoms
jmp
into
loop
mov
mov
repz
rcl
rcl
jecxz
or
mov
movsl
movsb
scas
out
cli
out
out
mov
cli
fiaddl
cld
idivb
aad
aad
fdivrp
add
in
mov
idivl
aad
std
in
jecxz
mov
mov
enter
add
lods
shr
mov
iret
fcmovb
cli
int3
hlt
mul
hlt
ret
mov
fildl
enter
add
in
jmp
mov
iret
rol
out
ror
mov
call
std
out
icebp
std
mov
vcvtpd2dqy
faddp
rcl
icebp
shl
fcomi
mov
mov
cld
add
sti
stc
or
rcl
loop
mov
hlt
mov
cld
xlat
shr
stc
call
add
cmc
loop
rolb
loop
lods
shl
call
in
fst
fstp
mov
icebp
sti
dec
fisttpll
repz
call
in
idivb
in
add
std
or
scas
lret
shr
fldt
neg
int
push
jecxz
ret
or
add
add
or
xlat
shl
mov
mov
not
cli
rol
add
cli
call
cld
rol
mov
shr
fcmovu
mov
fidivl
jecxz
out
jmp
out
mov
fsubr
loop
ret
in
mov
mov
not
mov
out
xlat
div
add
clc
xlat
add
or
leave
cld
repnz
mov
leave
cli
mov
mov
push
loopne
shl
cli
int
shl
enter
xlat
sti
mov
mov
sti
repz
leave
add
jmp
dec
jmp
in
jmp
jecxz
in
mov
clc
int
shr
icebp
push
loopne
add
add
faddl
cld
fucomip
ror
lods
jmp
jmp
aam
roll
ret
aad
add
lret
or
stc
enter
out
scas
mov
fidivl
mov
aad
cli
add
loopne
add
add
into
mov
ljmp
mov
stc
out
aam
repnz
mov
loope
fsincos
or
lods
lods
out
ret
clc
les
enter
loope
push
repnz
add
add
out
call
aad
shl
out
les
std
int
add
shr
clc
stc
out
add
out
into
out
int3
int
lret
jmp
neg
fcomp
mov
clc
pop
add
jecxz
iret
add
in
in
mov
loope
out
in
les
into
fnstsw
mul
pmaddwd
cld
out
call
int3
lods
rol
call
lock
out
add
loopne
call
ret
stc
ljmp
in
ret
repnz
mov
xlat
fadd
aad
in
call
call
loop
loop
out
iret
stc
enter
test
repz
lret
shl
add
shl
sti
cld
add
lret
add
in
or
or
in
fdivrl
mov
mov
push
rcl
shr
iret
into
out
ret
xlat
lock
repz
rcl
test
repz
std
lret
stc
jecxz
out
in
jmp
lret
repnz
aad
mov
fcmovu
icebp
into
mov
pop
sti
aad
in
aad
leave
enter
stc
call
lods
mov
out
cli
out
enter
rcl
pop
not
add
fnsetpm(287
push
loope
fstp
in
fidivs
xlat
aad
imul
aad
mov
fimull
leave
jmp
repnz
mov
loope
idiv
mov
fstpt
fnop
aam
repz
in
fldl
shl
in
call
shlb
int
out
fldl
mov
jmp
mov
mul
mov
mov
idiv
in
mov
lock
or
fucom
ret
loopne
mov
mov
add
clc
push
in
int
movl
test
in
cli
int3
in
in
mov
mov
or
add
or
pavgb
mov
vshufps
mov
fdivrs
loopne
not
in
add
call
mov
ret
rcr
repnz
enter
in
aad
out
mov
call
faddl
fidivrl
out
iret
aam
mov
fcmovnu
sar
add
testl
cld
lock
out
scas
out
aam
lret
stc
iret
in
mov
pop
add
clc
add
sti
in
sti
shl
mov
jmp
lock
idiv
mov
loope
out
aam
aam
out
in
repz
test
lret
in
int
call
out
jmp
rorb
add
or
or
mov
out
xlat
out
sti
cld
mov
sarb
incl
ret
enter
aam
aad
lds
leave
fst
std
mov
add
in
stc
jmp
lret
jmp
jmp
vcvtpd2dq
int
cld
fidivrs
jmp
push
stc
icebp
mov
movsl
out
int
fcom
lret
cli
out
mov
stc
loopne
rorl
or
clc
pop
or
out
mov
int3
mov
mov
aam
jecxz
rol
leave
or
mov
cmc
int
call
xlat
ret
testb
cld
fildl
out
cli
pop
push
iret
fnstcw
cmc
into
fnop
out
mov
clc
icebp
mov
hlt
or
iret
fstp
loope
jmp
mov
test
leave
in
out
mov
rcl
jmp
cmc
or
cli
loop
rol
lods
scas
repnz
jmp
in
mov
ret
testb
add
mov
int
mov
repnz
lret
leave
mov
icebp
mov
mov
in
add
sti
stc
out
in
sar
mov
mov
icebp
fmul
fiaddl
fdiv
ror
ror
in
cld
jmp
mov
aad
mov
loop
sarl
or
in
pop
fdivrp
lret
out
test
icebp
out
lret
in
ror
shl
cli
sti
jecxz
loopne
stc
or
iret
out
call
shl
repnz
clc
sar
les
stc
fsubp
fcom
jmp
loop
fcmovbe
add
fistl
stos
mov
jecxz
int
enter
add
fucomi
rcl
mov
or
ret
mov
ror
mov
stc
fcmovnu
div
mov
jecxz
in
incl
ljmp
mov
mov
sbb
nop
jmp
mov
xor
jmp
cmp
inc
inc
push
push
cmp
xchg
movsb
jmp
in
into
adc
jnp
enter
repnz
fidivrl
fldl
loope
in
repnz
fucomip
iret
out
fdivl
in
enter
std
fiaddl
aad
lret
jmp
in
test
lret
rol
icebp
shl
sarl
repz
loopne
sti
ljmp
lds
call
in
mov
mov
call
rol
add
or
jmp
add
jmp
lock
int3
aam
repnz
cmc
iret
int3
icebp
out
rcl
sar
loope
rolb
lret
add
or
in
mov
mov
icebp
icebp
loope
loopne
fsub
sti
fcmovnb
std
test
jmp
fucom
rcl
sar
mov
sarb
add
cmpsl
fst
lret
mov
aam
lret
call
icebp
call
test
std
icebp
aam
or
cmpsl
out
out
lods
out
fnstenv
call
pop
in
repnz
add
in
lret
lock
icebp
cli
repz
in
int3
fnstsw
add
fstp
add
jmp
add
stc
rcl
out
leave
aad
sti
mov
mov
lock
aad
mul
mov
decb
int3
add
loopne
jmp
hlt
mov
mov
mul
mov
out
rolb
jecxz
adc
std
jmp
lret
int3
mov
in
stc
enter
mov
int
add
leave
psllq
rcl
out
loope
jecxz
hlt
enter
lret
sti
cli
in
lock
loopne
push
pop
push
mov
iret
call
jmp
std
lock
icebp
lds
std
fstp
ljmp
fdivl
clc
mov
ret
cmc
fucomp
hlt
mov
out
test
out
std
mov
mov
hlt
ljmp
in
jmp
in
add
ret
add
lret
cmc
flds
out
add
rol
aam
int
sti
cld
mov
mov
cld
fst
filds
ror
into
out
out
in
int3
rcl
test
in
ljmp
roll
hlt
add
add
fildl
mov
ror
int3
out
fcmovnbe
hlt
idivl
out
ret
stc
jmp
incl
in
shlb
stc
lret
cli
sti
fdivrp
loope
aad
fnstsw
fsubr
fiaddl
mov
mov
mul
lret
aam
call
hlt
leave
sar
sarl
bswap
leave
add
ljmp
repnz
in
aad
jmp
idiv
shr
mov
in
add
out
int3
in
enter
lret
clc
fcompp
fdivrs
fcomip
lret
clc
jmp
out
out
int
ret
ljmp
lock
enter
call
mov
call
stc
add
mul
icebp
out
leave
aam
iret
in
ljmp
fstpt
loope
ljmp
mov
scas
lds
mov
fcom
hlt
ret
pop
loope
leave
in
jmp
jmp
iret
mov
fcmovu
fldln2
leave
lock
aam
loope
push
les
clc
cld
adc
ret
ret
movsl
repz
out
sti
jmp
fcmovb
jmp
mov
stc
add
in
cli
add
hlt
push
leave
jmp
test
icebp
in
ror
pushl
rol
in
std
shl
loop
sti
lret
int
into
cmc
mov
repz
mov
lret
in
rcl
into
out
mov
mov
out
fucomi
ret
mov
iret
out
loopne
repnz
in
sar
loope
into
mov
clc
lock
cmc
aad
add
lds
lods
lret
stos
sti
mov
iret
testl
add
loopne
stc
std
aad
call
mov
mov
mov
ljmp
mov
add
lret
aam
mov
hlt
enter
cmc
hlt
out
clc
out
cli
mov
rcr
in
cld
clc
loope
mov
or
pop
in
jecxz
fsubr
iret
loopne
mov
sarl
add
not
add
fld
add
add
repnz
aam
mov
sarl
std
fld
fst
jmp
leave
fdivr
std
stc
cmpsb
into
fsubp
xlat
sti
leave
mov
sar
out
cmc
incl
loope
jmp
std
ffreep
loope
out
out
push
test
clc
incl
mov
fcomip
out
jmp
in
ret
stos
lock
int3
iret
lret
aam
out
cld
fsubp
or
aad
aad
loopne
icebp
lods
lods
jecxz
fmul
iret
mov
div
cmc
test
out
mov
fdiv
out
or
ljmp
lds
shl
fucomi
jmp
repnz
add
push
in
or
sti
pop
jmp
lods
loope
mov
out
cli
shl
add
loop
icebp
add
cmc
jmp
or
add
lret
mov
int
cli
clc
lock
mov
mov
cld
jmp
jmp
out
out
in
in
fmul
repz
cmc
incl
mov
add
iret
add
loop
into
enter
mov
lret
leave
fucompp
mov
fst
movb
sti
test
ret
out
mov
idiv
lret
mov
in
out
call
add
mov
lock
loope
stc
pop
jecxz
iret
shr
mov
shl
in
mov
repz
ret
rol
or
lret
out
add
or
stos
int
scas
out
cli
stc
mov
fidivl
jmp
std
out
fmulp
ffreep
repz
mov
loope
in
jmp
leave
rcl
mov
in
out
add
add
leave
fucomp
icebp
scas
in
shl
idiv
jmp
shl
rcr
cmc
or
loop
sarl
cmc
cmc
not
loop
mov
ret
add
or
adc
cmpsl
lods
mov
shr
jmp
in
ret
shr
mov
out
or
or
int3
rcl
mov
jecxz
in
idiv
ljmp
sti
mul
cli
frstpm(287
lret
loopne
add
loope
stos
out
xlat
loope
out
lods
leave
fsubr
xlat
cmc
incb
faddp
not
or
in
pop
add
lret
adc
mov
aad
faddl
hlt
int
cld
add
frstpm(287
fxch
fsub
flds
shll
test
in
xlat
mov
aad
shr
neg
out
leave
out
clc
ljmp
loopne
loopne
in
in
clc
std
aad
call
inc
std
out
or
in
cld
stc
fbstp
mov
lock
xlat
lock
int
mov
fadd
jmp
jmp
add
add
shll
ljmp
cld
repz
std
leave
in
jmp
mov
repz
in
jmp
idiv
mov
mov
stc
testl
leave
or
xlat
mov
aad
mov
mov
add
jmp
lret
lock
imul
les
cli
into
in
jmp
stc
out
mov
add
out
in
mov
cmc
add
in
or
mov
cli
jmp
idiv
mov
ret
cld
fmull
aam
or
into
lds
ljmp
mov
hlt
stc
cli
in
add
sarb
add
int3
shrl
mov
cli
ljmp
add
out
hlt
add
imul
loope
repz
shl
mov
jmp
iret
into
stc
hlt
mov
fmul
jmp
test
shl
cmc
shl
out
repz
loop
add
cld
int3
rol
fcomip
fcomp
fsubp
decb
repnz
out
repnz
mov
fmul
aam
call
lock
add
cli
loope
hlt
out
or
out
loopne
ret
iret
shrl
ljmp
into
lock
out
pop
testb
movl
rol
hlt
int3
fsubr
mov
leave
add
add
fcmove
or
fdiv
out
lret
int3
shr
out
out
xlat
mov
xlat
in
jecxz
enter
ret
stc
repz
in
or
ffree
in
out
jecxz
in
icebp
out
mov
out
leave
jecxz
repnz
add
rol
cli
sti
fisttps
or
or
lock
mov
repz
aad
ffreep
int
add
ffree
add
lret
lods
neg
lret
ljmp
fcmovb
aad
int3
int3
add
ljmp
out
adc
shr
mov
icebp
leave
jmp
add
in
std
add
push
shl
or
in
iret
into
or
ffree
cmpsb
mov
ljmp
std
lret
iret
cmc
loopne
add
add
fcmovbe
out
push
repz
sarb
out
xlat
fcmovb
out
stc
enter
xlat
rcl
in
div
rolb
add
lret
enter
in
leave
shl
mov
repz
ljmp
shrl
loop
int
xlat
cld
aad
icebp
shr
add
loop
loope
add
lret
lret
icebp
out
enter
repnz
rcl
in
jmp
mov
loop
hlt
in
loopne
mov
shr
fcomp
in
in
in
mov
rol
in
add
adc
shl
vpsubq
lret
jmp
icebp
fdivr
iret
rcr
loop
cld
shl
in
fnstcw
aad
xlat
imul
fbstp
std
jecxz
shl
jmp
hlt
fcmovnu
or
hlt
repz
int3
stc
fidivrs
test
loop
add
iret
loopne
shrl
in
clc
mov
icebp
aad
mov
add
lret
loop
push
add
fmul
rol
aam
xlat
mov
std
jmp
cli
clc
pop
aad
jmp
inc
ljmp
leave
hlt
out
int
div
loop
ret
pop
fxam
or
loop
or
or
ljmp
rcl
cmc
add
fdivr
fucom
cli
ret
loope
lret
in
int
repz
in
jmp
mov
stc
test
ror
lar
add
mov
repz
leave
shl
int3
mov
iret
fpatan
shr
aam
int3
mov
out
std
les
push
mov
lods
int3
out
lods
mov
fcmovnu
loopne
in
ret
icebp
loopne
or
fildl
paddd
enter
enter
fucomip
imul
in
mov
xlat
rcl
repnz
aad
enter
add
idivb
fld
jmp
in
ljmp
mov
not
or
mov
ror
repnz
mul
mov
int
stc
cld
mov
add
in
mov
mov
mov
jmp
fyl2x
ret
aam
add
shr
fdivr
or
add
lods
loopne
jmp
in
call
ljmp
rol
aad
fisttps
leave
push
add
out
int3
fdivp
shl
lret
mov
sti
aam
fcmovbe
add
loopne
leave
out
ret
icebp
lret
repz
roll
shr
lock
testb
shl
enter
jmp
out
jmp
clc
enter
sarb
ret
or
int
fmulp
mov
iret
out
div
int3
fdivr
lret
fcmovnu
push
add
out
aam
call
ret
jecxz
mov
aam
aad
rcl
lods
mov
add
push
std
fdivrp
aam
add
cld
jmp
cld
ror
shrb
shl
mov
call
shl
hlt
inc
push
enter
shl
into
out
jmp
out
enter
out
hlt
out
not
rol
filds
iret
shr
div
in
repnz
call
rcl
clc
rcr
fdivp
les
rcl
pop
aam
in
push
fistpll
ret
shl
lock
jecxz
int3
icebp
div
sarl
enter
lret
scas
mov
loopne
fisubrl
sti
add
mov
ret
rol
add
or
stc
ret
into
out
loope
xlat
icebp
in
ror
jmp
out
shl
sar
test
cmc
loop
mov
ror
out
mov
cld
ret
stc
iret
push
add
fcmovnbe
fdiv
sti
loope
out
shr
repnz
mov
stc
add
mov
leave
push
paddusb
add
or
fsub
iret
ret
mov
repz
fnstcw
fidivrl
clc
add
loope
ljmp
not
jmp
stc
jmp
enter
idiv
add
or
fiadds
out
cli
add
cmpsb
leave
in
lret
lret
lret
clc
mov
shl
enter
loop
les
fcomp
loop
shl
mov
lret
jmp
out
idiv
in
or
out
ljmp
out
cmc
loope
aam
shr
rcl
push
add
flds
in
stc
fsub
into
out
stos
repnz
loope
in
xlat
ljmp
std
loopne
std
enter
shr
in
jecxz
int
not
lds
sar
aam
loop
aad
add
or
jmp
out
psllw
out
fsubp
lods
leave
jmp
loope
mov
jmp
std
fmuls
fldz
out
cld
in
int
in
hlt
out
mov
in
std
cli
mov
loopne
faddl
jecxz
out
call
rol
jmp
out
enter
stc
sti
enter
out
rolb
cli
incb
adc
mov
mov
out
fnstenv
shlb
mov
or
out
leave
in
jecxz
repnz
in
mov
ret
in
in
icebp
fadd
aad
in
add
jmp
lods
mov
enter
mov
lret
aad
in
int3
repz
pop
loopne
mov
or
fsub
loope
lret
out
lods
aad
out
jmp
jmp
repz
incl
repz
stc
les
into
fsubrp
fucomip
lret
in
out
cli
lock
in
int
into
add
idiv
fcomip
incb
ffree
add
repz
cmpsl
into
scas
lds
hlt
clc
mov
mov
lret
fiadds
faddp
leave
in
loope
lret
call
into
loop
aam
cld
out
leave
in
loopne
dec
mov
jmp
shr
lret
iret
enter
mov
lock
std
in
incl
ret
ret
scas
out
out
loope
xlat
enter
shr
shl
fnstcw
out
testl
jmp
lock
div
cmc
cmc
cli
in
mov
aad
loopne
fadd
loope
or
pavgb
out
mov
in
lret
rcl
fmulp
aad
jmp
loope
ret
or
or
in
sti
enter
int
stos
jecxz
in
lock
call
mov
add
loopne
out
in
jmp
lds
out
mov
enter
aad
enter
mov
rcr
fcmovnb
fld1
add
out
jmp
iret
sti
rcr
rcl
rcr
ror
sar
repnz
aad
clc
cmc
hlt
ret
dec
add
shl
jecxz
mov
repnz
icebp
fcomip
sarl
into
push
sti
loope
leave
aad
jmp
out
enter
lock
mov
fsubrp
leave
repz
loope
in
in
out
rcl
fmul
fucomp
hlt
jmp
mov
in
div
mov
xlat
std
not
idivb
add
cmc
add
iret
shl
lods
in
jmp
ret
out
out
clc
sarb
lock
cld
mov
add
ror
lret
movsl
lret
fldt
repnz
cli
repnz
loopne
xbegin
out
out
mov
in
lret
clc
idiv
mov
call
fadd
push
fdiv
jecxz
in
shl
lods
into
lods
in
hlt
mov
divl
rcr
repz
cld
jecxz
out
jmp
ret
repnz
enter
mov
lock
cld
shl
in
lret
lods
int3
icebp
rcl
leave
int
mov
mov
aad
sarl
or
fmulp
int
or
out
shr
in
imul
mul
int
fcmovnbe
mov
fcomi
jecxz
hlt
in
clc
cli
add
aad
cld
adc
loope
ret
shr
lret
fst
int3
cld
fnstsw
add
rcr
psraw
call
ret
out
cmc
shlb
jecxz
hlt
mov
jmp
add
stos
mov
enter
fidivs
dec
mov
lock
add
fmuls
or
repnz
ljmp
enter
mov
add
cld
stc
mov
lret
loope
repz
test
in
in
fnsave
mov
ljmp
leave
fildll
in
in
clc
jmp
int3
std
mov
fsubp
sti
cli
hlt
hlt
push
fld
lret
mov
mov
mov
cmc
ror
add
lret
ffree
aad
out
add
or
jmp
lret
in
lods
in
shl
stc
repnz
ret
in
sti
ret
rcr
test
ftst
test
ret
mov
hlt
les
add
lock
fcom
out
push
lret
fdivs
lods
hlt
mov
xlat
iret
repz
fiadds
loop
lock
lret
add
cmpsb
scas
fmul
ljmp
xlat
fcomip
in
leave
aad
rcl
shl
or
clc
out
repz
out
rcl
out
fucomi
hlt
out
mov
cmc
repz
ret
fucom
loop
aad
leave
adc
mov
mov
in
out
in
std
std
lret
repz
std
lret
rcr
loop
or
repnz
cmc
loope
stc
call
fbstp
jecxz
mov
out
loop
jmp
cli
mov
lods
lret
loope
lret
int3
aam
in
sti
into
mov
fmulp
jecxz
lret
lods
fdivrl
scas
in
in
fucomp
mov
aad
incl
add
leave
fmulp
mov
lods
mov
cli
mov
out
mov
in
fcmovnbe
out
sar
out
jmp
fildl
mov
ror
aad
rcr
scas
ror
jmp
hlt
mov
rolb
in
in
clc
lret
stc
ret
ret
ljmp
sar
mov
ror
fmul
iret
out
loopne
aam
in
out
enter
ljmp
aam
hlt
mov
sarb
sti
cli
in
fstp
cli
fcmovu
jmp
add
into
imul
aad
f2xm1
aad
jecxz
in
mov
add
push
out
iret
iret
ffree
mov
out
inc
mov
std
aad
into
std
out
stc
incb
out
or
pop
out
in
into
mov
rcl
jmp
fdivrs
xlat
std
add
or
xlat
in
jmp
lods
out
loopne
ret
mov
out
stc
aad
out
leave
cmc
iret
push
std
mov
add
bswap
fsubr
add
cmpsb
shrb
in
call
mov
out
into
cmc
xlat
out
clc
lret
testb
rcr
jecxz
mov
lret
mov
loop
idivb
les
add
shll
in
lret
fmulp
lock
aam
fdivr
mov
rol
jmp
aad
push
add
fdivp
jmp
mov
mov
cmc
fsub
icebp
aam
out
std
cld
in
or
add
in
fstp
test
lret
lret
in
jmp
fmul
leave
not
fadd
stc
shl
lret
add
inc
in
or
cli
enter
fsub
in
mov
lret
mov
add
fsubp
cmc
in
cmc
fcmovnu
ljmp
aad
jmp
mov
loopne
or
fcmovb
call
jecxz
into
enter
rcr
idiv
shl
rcr
xlat
mov
cld
iret
add
rcl
ffree
scas
int
shr
idivb
into
cli
repz
neg
in
clc
in
scas
ljmp
mov
in
mov
rcr
mov
jecxz
div
icebp
flds
jmp
or
mov
out
hlt
mov
int
xlat
fucomi
aam
fmul
rol
fmulp
add
sar
lar
int3
call
leave
int
shl
rcr
aad
mov
int3
fildl
rol
std
hlt
xlat
rorb
sti
lret
add
fdivr
std
out
sarb
loopne
in
hlt
xlat
mov
add
lock
hlt
mov
in
fsubp
fadd
fsubr
rcl
lret
repz
mov
aad
fidivrl
loope
add
pop
out
add
cli
out
in
ret
rol
shlb
stc
mul
ret
cli
idivb
fcmovnb
add
iret
out
mov
shl
rol
fdivp
lret
rol
aam
icebp
or
hlt
loop
std
loope
loopne
lods
shrb
jmp
shr
lock
iret
in
push
pop
fisttps
jmp
or
aam
cli
out
mov
fcomp
cld
cmc
pop
jmp
hlt
push
lret
loopne
aad
adc
fsubr
fbstp
clc
mov
cli
mov
mov
add
cli
lds
out
lret
repnz
lods
mov
mov
sar
int
clc
mov
aam
jecxz
add
stc
loop
adc
lock
out
iret
in
xlat
rolb
stc
xlat
add
sti
or
jecxz
int
mov
cli
mov
loop
mov
in
ljmp
int
jecxz
ljmp
clc
fdivrs
testb
loope
push
test
add
out
jmp
iret
loopne
repnz
jmp
jecxz
cld
xlat
idiv
sar
aad
jmp
jmp
out
ret
mov
ror
mov
leave
enter
incb
int3
aam
cli
out
aad
add
loop
cli
cmc
lret
fcmovnbe
icebp
mov
xlat
add
aad
repnz
testl
mov
mov
fcomi
fsub
shl
push
fyl2x
hlt
jecxz
mov
int
out
shrb
in
repnz
in
add
out
clc
std
ret
mov
out
out
fsubrp
in
in
loope
int
int3
shr
mov
clc
mov
add
rcl
shl
ret
add
in
in
enter
loope
int3
stos
in
aad
loopne
fcmovbe
in
ret
cmc
fdivrs
out
sar
cli
faddp
pop
les
in
ret
enter
std
mov
flds
std
loope
pop
ret
ret
lret
jmp
in
shrb
test
iret
lock
repz
out
xlat
xlat
add
movb
add
add
int
ret
loop
mov
fcomi
int
imul
mov
lock
out
rcr
loope
out
int
loop
in
out
aam
leave
enter
mov
std
int
mov
lds
sti
or
mov
cmc
lods
mov
mov
mov
jmp
add
ret
jmp
loope
lods
ror
out
ret
out
jmp
aam
out
lret
jmp
shl
clc
add
in
iret
out
loope
int3
in
fmul
mov
cli
mov
out
out
sti
add
add
in
repz
lret
ret
icebp
out
jmp
mov
mov
out
loope
repz
fucom
std
incb
push
aam
or
int3
jmp
hlt
imul
mov
jecxz
shl
aad
fnsetpm(287
lret
out
in
jmp
xlat
mov
lods
iret
out
enter
jmp
lock
add
fldz
repnz
jmp
in
ret
clc
jmp
repnz
jmp
loopne
sar
stc
in
or
mov
lods
mov
out
jecxz
into
out
in
pop
fucomp
mov
adc
rcr
shr
jmp
int3
fdivp
ljmp
mov
jmp
in
int3
add
enter
shll
int
fprem
hlt
std
in
fildl
mov
clc
pop
into
or
int
mov
not
out
mov
rolb
not
fadd
jecxz
icebp
jmp
add
mov
mov
rcl
out
enter
aam
loop
fadd
loope
in
cli
or
add
cmpsb
shl
in
ret
cli
hlt
into
mov
faddp
rol
into
jmp
ret
out
enter
mov
out
in
mov
out
iret
push
into
roll
push
rcr
loopne
std
cld
lods
loop
aam
ret
idivl
jmp
hlt
add
icebp
cld
stc
call
push
in
adc
lods
shl
mov
in
mov
out
hlt
jecxz
fcom
cld
neg
sti
dec
add
cli
push
fcmove
jecxz
ret
int3
lret
mov
aad
mov
in
ljmp
repz
loopne
ret
shr
icebp
int3
in
mul
int
testb
imul
fldl
fadds
loopne
call
mov
jecxz
div
in
int
ret
mov
loope
ffreep
enter
ret
hlt
in
leave
out
mov
cmc
add
clc
in
add
out
jmp
out
pop
repnz
in
loope
ret
repz
repz
lock
enter
int3
cmc
cld
aam
jecxz
jmp
lret
or
mov
ret
out
shrl
repz
fdiv
rcr
std
pop
xlat
pop
call
std
or
fsubrl
mov
mov
mov
sti
out
aam
pop
jmp
add
loop
paddb
iret
in
sarl
repnz
add
hlt
loopne
aam
aam
jecxz
out
call
icebp
ror
into
in
scas
in
mov
sarb
jmp
cli
add
call
shl
shr
ljmp
les
mov
ljmp
repz
xlat
lods
int3
aam
lock
xlat
lret
fildl
mov
lret
in
jmp
bnd
int
idivl
mov
add
mov
sti
cmc
hlt
in
push
fst
mov
shrb
out
in
aam
sti
mov
jmp
rcl
cli
fiaddl
int3
out
mov
call
into
aam
jmp
fmul
push
out
out
out
stc
pop
add
fmulp
out
jmp
jmp
in
in
repz
loope
incb
add
jecxz
lret
or
fmul
in
shrl
shlb
sar
in
fdivr
add
fadd
out
hlt
into
call
fst
loope
out
enter
mov
cli
repz
in
loopne
out
add
not
or
mov
mov
mov
jmp
int3
add
add
sar
hlt
add
in
or
mov
mov
out
repnz
cmc
into
fnclex
lock
out
lret
add
loop
decl
fadd
jmp
loopne
enter
jmp
mov
add
add
add
push
inc
flds
int3
aad
rol
not
jmp
mov
out
cmc
push
xlat
out
add
out
jmp
lods
shl
in
int3
mov
in
jmp
loopne
lock
loope
sti
pop
fdivr
in
add
icebp
lock
in
repz
clc
mov
mov
aad
incb
lock
mov
ror
lods
mov
clc
iret
in
push
neg
xlat
loopne
not
int3
add
loop
lret
icebp
sti
in
aad
mov
fdivrl
out
in
out
loope
aad
incl
or
stc
enter
cmc
out
cli
mov
out
mov
call
in
hlt
jmp
incb
testb
fadd
adc
mov
lods
scas
repnz
xlat
ror
into
lock
mov
cli
ret
add
or
lods
in
clc
clc
repnz
mov
out
testb
or
or
loop
into
scas
into
mov
jmp
fsubp
loope
inc
rcr
add
add
out
mov
repnz
out
idiv
jecxz
rolb
add
in
fsubr
int
loope
loop
leave
int3
ror
icebp
in
lret
stc
jmp
sarl
in
not
push
loop
psubsw
add
scas
loopne
div
iret
hlt
ror
ljmp
sar
add
testb
fadds
ffreep
loop
hlt
cmc
in
sar
aad
std
lret
fstpt
hlt
icebp
in
fidivrl
cmpsb
fdiv
shll
leave
int
fiaddl
repnz
out
ljmp
adc
mov
movsb
into
call
fmul
icebp
mov
mov
aad
repnz
or
loop
shrb
hlt
mov
mov
mov
push
in
loop
cld
fsub
in
into
repz
cmc
lret
mov
icebp
xlat
mov
ret
cmc
leave
test
cmc
fdiv
cld
aam
hlt
add
mov
jmp
into
cli
mov
int
in
out
hlt
in
rorl
out
rcl
imul
call
aam
cmc
fdivs
fucomp
clc
add
leave
fadd
or
scas
enter
shl
scas
in
out
std
in
sarb
ret
pop
cmc
call
in
icebp
loopne
mov
loopne
cli
aam
mov
stc
in
ror
cmc
in
test
pextrw
add
stc
stos
mov
aad
rol
lret
mov
std
mov
dec
mov
hlt
sti
or
or
shr
jmp
mov
ljmp
iret
std
in
out
fiadds
not
push
faddl
in
ret
call
lock
stc
jmp
sti
add
push
add
jmp
mov
call
xlat
mov
mov
fstpt
add
cmc
fsubp
ffree
mov
int3
jmp
mov
fprem
mov
mov
mov
ljmp
leave
mov
in
iret
loopne
rcr
mov
in
jecxz
ret
or
lret
add
fucomi
loopne
mov
jmp
push
fmul
dec
in
add
call
lar
int3
fcmovbe
test
out
add
cmc
shl
fucomi
fabs
lock
loopne
fcmovu
out
jmp
in
out
test
ljmp
out
mov
in
aad
shl
aad
or
fisttps
shr
mov
loop
mul
stc
enter
cld
jmp
out
xlat
aad
shl
out
fucom
or
in
mov
iret
rcr
mov
jmp
mov
cld
fdivrp
xlat
fiaddl
jmp
iret
mov
scas
mov
in
cli
cmc
jmp
leave
aam
mov
add
rol
loopne
in
jecxz
mov
repz
ffreep
cmc
rol
sti
fdiv
out
in
push
ret
lret
shl
repnz
fcmovnbe
cli
mov
repz
cld
roll
push
aad
add
lret
int3
out
mov
jmp
aam
loop
ret
aad
jmp
fimull
add
in
or
scas
fucomip
xlat
icebp
lock
iret
mov
repnz
mov
aad
aad
or
cld
out
shl
vpmovmskb
mov
fcomip
mov
neg
loope
aad
lret
out
fildl
in
icebp
sarl
mov
repz
jmp
ret
loop
jmp
lock
or
cld
jmp
sti
ljmp
fcmovnbe
jecxz
mov
add
or
hlt
loop
out
add
in
out
stc
mov
aam
mov
add
fadds
fst
in
add
sti
or
lods
jmp
out
mov
out
clc
fcmove
out
into
pop
rcr
roll
out
or
scas
call
into
fidivs
aam
clc
cld
add
cmc
leave
std
in
or
test
loop
out
jmp
fldt
repnz
fadds
fcmovnb
hlt
sti
in
fsub
out
stc
add
not
loop
int
into
in
mov
mov
repz
std
or
ljmp
scas
in
loopne
mov
ljmp
fsubr
pop
rol
jmp
lret
lret
add
ror
in
cli
test
cli
add
fimull
add
jb
add
or
mov
push
pop
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
adc
mov
lea
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
pushl
push
pushl
call
cmpl
jb
mov
adcl
mov
adc
movl
adc
movl
xor
lea
adcl
mov
mov
or
mov
xor
xor
mov
add
mov
sub
mov
movl
mov
xor
mov
decl
mov
inc
xor
mov
adcl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
lea
movl
cmpl
je
cmpl
jl
jmp
push
pushl
call
xor
xor
dec
mov
jmp
mov
not
mov
xor
mov
xor
mov
negl
sub
and
mov
mov
adc
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
andl
xor
or
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
or
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
mov
adcl
mov
sub
lea
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jb
mov
sub
mov
neg
mov
subl
sub
mov
mov
mov
mov
or
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
or
jmp
out
sub
add
jne
loope
idivb
out
cwtl
jnp
in
incl
add
or
sti
or
or
mov
icebp
leave
repnz
repnz
stc
call
ret
repnz
leave
lret
rcr
adc
pop
lods
test
int3
mov
mov
std
neg
add
mov
ret
frndint
fisubrl
call
div
cli
ret
shl
rcr
or
call
iret
lods
sarl
out
out
mov
out
idiv
loop
enter
in
test
ret
rcl
in
call
lock
mov
xlat
mov
aam
ljmp
cmc
in
hlt
mov
fmul
fdivrp
out
mov
add
fdivr
cli
aam
out
jmp
ljmp
lret
mov
mov
fnstsw
cld
stc
xlat
filds
std
pslld
lods
mov
cmc
test
mov
int3
iret
repnz
mov
cld
sti
sti
fistpll
stc
add
test
divb
icebp
in
shl
into
filds
aam
cld
rol
jecxz
or
add
shr
into
in
lds
fidivrs
fadds
lret
ret
push
sti
std
loope
int
int
shr
loope
out
out
mov
out
hlt
int3
jmp
ret
rol
or
call
rol
mov
in
int
aad
inc
lods
icebp
in
int
loope
mov
ljmp
adc
mov
idiv
scas
shl
into
lock
faddl
add
repz
loope
in
into
int3
jmp
mov
jmp
fcmovne
fcmovne
lret
in
testb
fincstp
in
pop
pop
add
sti
aam
cld
add
fcomip
icebp
jecxz
test
div
in
fidivrl
lock
loop
leave
loop
push
test
imul
mov
out
mov
les
ret
fdivr
xlat
mul
shl
leave
lock
fmul
ljmp
not
jmp
in
mov
loop
shl
sar
or
sti
ret
jmp
enter
shl
idiv
in
int3
shl
sar
loopne
fcmovnu
shl
out
std
add
loopne
shr
cmc
mov
hlt
cmc
idivb
xlat
mov
cmc
out
aad
add
loope
lock
mul
mov
out
stc
hlt
lock
mov
loop
rcr
idiv
pop
or
scas
in
loopne
lods
ror
ror
in
icebp
in
mov
in
mov
testl
add
jecxz
jmp
test
lret
rol
out
sti
cmc
mov
mov
repz
std
loop
in
push
iret
clc
or
out
enter
ret
in
mov
rcl
in
testb
out
push
out
loopne
jecxz
or
jmp
div
mov
sar
into
out
ljmp
cli
stc
fadd
stc
roll
lock
aam
stc
mov
shl
mov
fiaddl
add
jmp
out
mov
out
sti
rcr
out
xlat
push
mov
fsub
add
shl
in
stc
adc
mov
mov
mov
mov
shl
jecxz
rolb
mov
jmp
faddl
fstp
shll
int3
fcmovbe
out
xlat
mov
aam
incb
fisttps
pop
jecxz
add
mov
fcomp
mov
add
stc
add
add
out
lret
in
jmp
mov
out
imul
aad
fsub
cld
mov
icebp
pminub
std
stc
in
mov
int3
mov
in
lret
push
loope
ffree
fistpll
pinsrw
or
in
aad
mov
int3
in
xlat
cmc
hlt
repz
push
neg
push
jecxz
add
scas
stos
jecxz
mov
mov
ljmp
hlt
loope
loope
in
rcr
xlat
icebp
out
in
mov
shl
cli
lock
rorl
or
int
jecxz
test
out
xlat
mov
lret
lret
add
mov
out
or
or
in
in
fsubs
aam
mov
not
fst
out
rcr
rcl
testl
leave
fiaddl
or
xlat
mov
jmp
out
mov
stc
into
aad
rcl
fiadds
fsub
ret
sar
call
adc
mov
enter
int
add
call
loope
in
aad
pop
or
paddusw
into
in
mov
ljmp
loopne
repnz
fisttpll
jmp
clc
ljmp
jmp
in
in
out
aam
in
fucomi
into
out
stc
faddp
add
jmp
test
fcomp
ljmp
fxam
imul
add
les
not
add
leave
loopne
mov
jmp
in
out
into
in
fcmovnbe
mov
or
cld
loop
fmul
enter
repz
mov
xlat
cli
in
into
imul
clc
idiv
fildl
xlat
loop
mov
hlt
fucomip
iret
mov
out
in
int
push
stc
mov
fadd
in
sti
push
out
mov
leave
call
lret
icebp
fxch
ljmp
mov
ret
mov
stc
or
repz
shl
loope
icebp
cli
mov
xlat
mov
leave
iret
ffree
std
pop
fcmovb
out
int
lret
out
call
cmc
clc
mov
clc
leave
jmp
shl
in
repz
aam
push
or
test
lret
int3
fidivrs
test
add
add
loopne
clc
lret
into
fcmovne
in
xlat
mov
jmp
mov
leave
mov
mov
add
enter
in
repnz
jmp
sarb
repnz
fcmovb
stc
add
jmp
lock
shr
fsub
mov
repnz
mov
sar
add
roll
test
lock
stc
icebp
lods
int
fcmovnu
repz
out
xlat
hlt
or
push
into
lret
leave
shr
hlt
in
iret
mov
fdivrl
lock
loopne
loopne
std
fcmovnu
std
enter
mov
hlt
rcl
mov
out
mov
cli
mov
push
or
fstp
mov
in
repnz
enter
jecxz
mov
repnz
out
loope
or
out
int
test
int3
fsubrp
dec
mov
pop
xlat
sti
sti
leave
stc
cli
out
into
inc
mov
not
icebp
in
repz
rol
cli
out
mov
iret
in
or
in
mov
divb
out
mov
out
inc
rol
hlt
jmp
les
call
jmp
mov
int
lret
cld
rcr
shl
or
in
flds
in
fcmovu
loop
mov
in
rol
scas
clc
xlat
enter
jecxz
mov
leave
fmul
ljmp
lods
mov
cli
cmc
leave
mov
std
faddp
mov
fmulp
ljmp
test
ljmp
fiadds
aam
cli
jecxz
fstp
pop
sar
neg
add
adc
in
into
shrb
in
mov
repnz
xlat
mov
fcmove
out
inc
mov
ffreep
aam
out
lock
cli
mov
mov
clc
mov
rcr
clc
fadd
out
loop
repz
jecxz
mov
sti
shl
clc
in
mov
fcmove
mov
out
rolb
enter
jmp
xlat
mov
ljmp
sti
in
aam
cmc
out
dec
enter
loope
out
in
into
mov
loop
rcl
push
loop
invd
push
fmul
out
repnz
mov
mov
fdivrs
repz
cli
lock
neg
mov
out
rcr
int3
enter
scas
mov
leave
iret
jecxz
mov
loop
add
flds
add
rcr
fmulp
ret
cmc
leave
aam
jmp
icebp
fcmovu
mov
shl
mov
cli
fcmovb
add
shr
cmc
lods
out
int
icebp
xlat
repz
in
shl
jmp
call
mov
mov
icebp
fucomi
int
add
jecxz
pop
hlt
hlt
add
enter
adc
ljmp
lock
mov
loopne
out
mov
vpsubb
jecxz
or
mov
loopne
aam
int3
mov
int
fcomip
ret
jecxz
incb
add
in
jecxz
adc
les
loopne
in
hlt
int
in
in
aam
fdivr
ret
add
faddp
hlt
repnz
mov
mov
jmp
rcr
mov
out
repnz
loop
add
adc
add
repnz
mov
aam
repnz
in
shl
ret
fidivrl
fsin
add
xadd
lock
out
iret
repnz
mov
mov
mov
aam
xlat
int
out
rcr
int
mov
iret
sti
rcr
aad
lret
add
add
loop
fadds
jmp
iret
in
out
or
lods
icebp
shr
leave
out
int3
int3
int
shl
mov
loop
loope
cmc
out
fsubp
lods
mov
icebp
shl
mov
fdiv
int
aad
mov
ret
aad
bswap
enter
lods
loopne
fcmovnb
repz
roll
repz
mov
clc
loop
cmc
cld
pop
std
out
rcl
shll
in
lods
jmp
shl
rcl
sar
icebp
or
jmp
or
shr
fildll
lret
fdivr
iret
shl
fcmovu
stc
mov
incl
add
testb
mov
xlat
loope
lret
in
mov
fdivrp
aam
in
out
rol
xlat
cld
div
push
lret
push
icebp
repnz
loopne
out
sti
out
fdiv
repz
mov
fcomi
roll
ljmp
fst
mov
icebp
out
lret
aam
sti
call
flds
hlt
mov
out
out
pop
repnz
ror
lds
div
mov
mov
hlt
lds
movl
fadd
fisubrs
ror
clc
out
mov
mov
or
rcr
fldlg2
iret
or
repnz
shr
fistpll
mov
add
out
fldl
fisttpll
push
or
out
int
mov
jmp
leave
mov
std
aad
pop
mov
push
ret
or
divb
jmp
call
loope
mov
or
int3
lret
ljmp
mov
icebp
jmp
fmulp
loop
add
cld
sti
add
or
repnz
mov
int
icebp
fdivrp
into
std
pop
cld
fst
int3
aad
or
clc
or
lods
mov
test
mov
mov
loop
mov
iret
leave
add
add
lret
rcl
sti
into
shlb
mov
mov
jecxz
stc
loope
out
cmc
out
adc
cmpsl
shr
call
div
lret
std
lock
add
mov
roll
paddq
push
or
int3
loopne
shl
mov
ror
jmp
mov
cld
mov
pop
lock
or
add
out
repz
in
shll
fldl2e
add
pop
inc
aam
lret
in
fucomp
loopne
sarb
ffreep
sarb
aad
aam
into
fadds
in
in
cmc
enter
rcr
leave
aam
not
enter
ret
loopne
cli
lret
loop
out
fsubl
in
mov
mov
cli
mov
aam
std
add
cmc
cli
aad
aam
add
jmp
push
add
int
lds
cli
ljmp
iret
push
fadds
repnz
call
ljmp
call
icebp
add
loopne
mov
ljmp
out
add
out
mov
rcl
mov
ret
filds
add
lret
or
fxch
add
mov
mov
mov
hlt
out
hlt
mov
aad
out
mov
push
pop
in
lds
test
in
mov
mov
aam
mov
in
icebp
or
mov
or
icebp
icebp
int3
mov
mov
hlt
shl
clc
cld
or
out
adc
repz
mov
mov
inc
mov
repnz
out
jmp
call
in
repnz
call
mov
xlat
mov
cld
jmp
jecxz
shl
iret
lods
repz
ljmp
icebp
aad
not
loop
fmull
loop
or
or
add
push
rol
lods
fsubrp
call
lods
mov
iret
aam
fadd
jmp
ljmp
lock
in
clc
lock
mov
call
cli
shl
xlat
repz
fucom
jecxz
out
xlat
loopne
lret
repnz
mov
add
add
out
add
icebp
lock
test
not
lret
loope
int3
fcmovnu
call
shl
fdivrp
add
lock
sti
add
rol
fsub
in
repnz
iret
mov
mov
add
or
out
out
test
loop
in
hlt
repz
in
mov
mov
fmul
loopne
lret
repz
shl
mov
repz
in
into
idivb
repnz
mov
out
lret
cli
mov
fcmovnb
lock
iret
sar
hlt
add
rol
shr
ffreep
out
jecxz
loopne
lret
in
sti
stc
loopne
mov
loop
rolb
int
loopne
filds
or
clc
lret
fcomp
loope
cmc
shl
hlt
shr
in
divb
add
sti
add
jmp
add
int
repz
sar
in
lods
int
mov
out
add
lret
cmc
std
stc
or
lods
fsub
ljmp
sti
cld
fyl2xp1
add
rcr
add
loope
fistl
sar
shrl
rol
mov
stc
repz
mov
in
clc
jmp
add
out
mov
aad
cmc
call
in
out
enter
rcr
ret
mov
add
add
scas
ror
in
mov
fldz
fmulp
mov
mov
in
repnz
cli
stc
fadd
fiadds
jecxz
out
neg
loop
in
out
mov
ror
sti
mov
add
into
int3
mov
prefetchwt1
or
mov
mov
aam
cli
mov
mov
ret
testl
fildl
int
in
push
mov
mov
aad
out
cli
fucomip
lret
into
mov
mov
ljmp
or
lods
int
icebp
out
into
in
out
lret
enter
ret
fld
std
loop
or
xlat
add
int
shl
repnz
call
rol
fidivrs
test
cli
repz
call
add
fsubrs
int
hlt
mov
icebp
add
mov
pop
decl
enter
stc
push
mov
fmulp
repnz
iret
loope
call
in
cmc
fdivr
idiv
icebp
add
ljmp
repz
out
xlat
repz
mov
add
mov
enter
loop
loop
in
jmp
in
std
leave
out
fdivl
loopne
lret
hlt
fsubrp
cld
fmulp
mov
int3
out
icebp
aam
shl
mov
dec
pop
frstpm(287
cmc
fdiv
add
int3
or
cmpsl
shl
jmp
repnz
xlat
enter
repz
mov
rol
in
loop
rcr
fcomip
jmp
mov
in
xlat
clc
mov
repz
jmp
enter
mov
ret
leave
enter
in
test
roll
sti
or
jmp
lds
lods
in
jmp
loop
neg
mul
sti
loop
decb
lret
or
in
lret
in
lock
rcr
in
std
rcr
add
ret
mov
cli
add
aam
paddusb
jmp
test
mov
call
hlt
rol
hlt
testb
int
out
sarb
leave
lock
iret
call
repz
mov
or
ljmp
in
mov
mov
mov
ret
lock
lret
loope
add
fnstsw
leave
aad
mov
lock
fdivs
mov
mov
in
lret
loope
ret
test
out
repz
ret
in
or
cli
aad
aad
enter
xlat
shl
mov
shr
in
fdiv
mov
inc
mov
movb
add
std
cmpsl
shll
out
lock
in
out
rcl
fcmovu
fdecstp
jmp
loop
lret
repz
shl
divb
out
fucomi
std
lock
jecxz
int3
cmc
icebp
mov
iret
clc
add
ljmp
loope
loope
enter
shr
clc
fstp
shl
or
add
add
in
enter
out
mov
imul
fsubr
call
rorb
cld
out
or
add
shl
lock
int3
mov
loope
add
loope
add
bswap
call
into
mov
leave
divl
xlat
int3
icebp
into
fcomp
clc
std
mov
or
inc
repnz
loopne
out
mov
add
idiv
mov
or
fsubr
rcl
mov
shrb
out
cld
mov
out
fdivr
jecxz
add
push
fucomp
lret
stc
or
in
lock
int3
out
rcr
lret
mov
mov
xlat
out
out
add
in
leave
out
into
mov
icebp
fnstenv
enter
mov
fadds
fdiv
jecxz
int3
cmpsl
mov
ret
out
mov
lret
fdiv
add
fdiv
rcl
aad
add
fsubrp
cmc
add
iret
lret
out
mov
aad
lret
stc
sti
mov
lock
int3
hlt
shr
cld
in
cli
lret
psllw
neg
out
loopne
out
mov
call
pop
icebp
add
loope
sti
enter
in
scas
rol
mov
in
fdivr
int3
fnstsw
mov
add
leave
aam
or
fnstsw
cli
cmc
mov
clc
rcl
jecxz
into
add
int3
std
mov
loopne
fisttpl
iret
into
ljmp
ret
cli
mov
mov
out
shl
int3
rcl
add
cli
lods
icebp
test
loop
enter
cli
fmul
xlat
aad
in
fadds
push
out
loope
push
jmp
mov
shl
mov
iret
enter
int
int3
hlt
rol
stc
call
stos
fsubp
repnz
sarl
call
int3
aad
in
loop
xlat
cmc
in
out
repnz
xlat
shr
mov
lret
iret
out
iret
loope
mov
out
lret
or
out
mov
int3
mov
rcl
out
into
fldz
mov
repz
mov
fstp
leave
fldz
in
jmp
lret
int
mov
out
dec
cld
not
in
cld
lock
ffreep
out
out
jmp
lret
mov
iret
shrl
mov
mov
lock
cli
add
call
mov
clc
not
loope
repz
sar
add
ljmp
mov
int3
mov
call
cld
aad
or
out
aam
clc
out
fucom
jmp
scas
repz
idiv
sarb
fcomp
lock
in
cld
push
mov
iret
add
jmp
test
mov
stc
aam
mov
lock
out
pop
ffree
add
loop
rorb
leave
cli
ljmp
repnz
aad
out
sarb
sar
or
hlt
pop
hlt
out
fidivl
rcr
icebp
shl
mov
add
mov
bswap
fdivp
add
fst
mov
out
fucom
mov
mov
out
enter
mov
push
or
incb
fisttpll
loopne
loopne
test
not
mov
out
jmp
mov
clc
cmc
lret
out
in
out
int3
push
in
mov
in
out
sarb
mov
add
clc
or
add
lret
in
incl
shr
shl
aad
sti
cmc
ljmp
loopne
rcr
loop
idiv
add
loop
cld
repnz
mov
jmp
mov
clc
mov
repz
in
push
fst
loop
loop
ljmp
xlat
stos
lods
rcl
iret
int3
mov
mov
ret
add
stc
clc
in
loopne
repz
in
call
mov
repz
mov
ret
int
in
lret
add
stc
add
in
lods
enter
mov
repnz
fcom
call
cli
in
sarl
rol
or
psllq
in
into
ror
ret
mov
les
lock
cli
frndint
ljmp
int3
enter
jecxz
aad
ror
ljmp
lock
or
lret
clc
add
rol
scas
into
loopne
rcl
mov
enter
aam
mov
in
hlt
enter
movsl
repz
out
hlt
mov
idiv
imul
fcom
mov
fsubr
out
repnz
hlt
fcmove
cld
call
shl
in
jmp
mov
jmp
mov
aam
idiv
mov
bnd
ljmp
out
loopne
ljmp
add
out
rcl
int
dec
in
div
mov
int3
int
mov
fld
mov
jecxz
ror
aam
or
in
lods
test
mov
repnz
mov
in
rolb
fucomip
add
rorl
flds
add
loope
fnstsw
divl
jmp
mov
xlat
in
in
into
int3
out
enter
mov
int3
scas
out
out
rcl
repz
roll
sar
fcmovnbe
testb
cld
in
out
in
ljmp
jmp
call
aam
xlat
shl
lret
push
cmc
loop
fmul
int
mov
ror
stc
in
in
enter
cli
shl
in
in
enter
cli
in
fsubr
mov
jmp
scas
out
aad
mov
sti
iret
mov
div
lock
or
lret
in
ljmp
mov
in
incl
in
icebp
lret
jmp
jmp
ret
into
loopne
in
fidivs
add
fdivr
in
shr
xlat
add
lret
fucomip
add
ret
in
rol
jmp
into
call
lock
test
enter
icebp
iret
ror
mov
mov
in
fldpi
fst
aad
aam
out
out
repnz
rcl
add
in
enter
ror
mov
out
mov
ret
mov
cli
movb
psubusw
loope
in
int
int
out
cmc
mov
jmp
call
testb
cli
ffreep
idivl
out
fdivrp
add
test
loop
lret
fnsave
ret
add
stc
add
jmp
out
aam
mov
mov
out
mov
fcmovnbe
out
rol
aam
aam
out
in
sti
jmp
scas
jmp
in
cmc
mov
in
icebp
imul
shr
icebp
in
shl
loope
fstp
cld
add
mov
mov
mov
enter
repz
mov
add
icebp
rcr
stc
testl
fcmovbe
mov
in
in
test
mov
int3
rcr
fldl
fadds
ljmp
ret
lret
leave
lret
mov
fcmovbe
lock
hlt
vpaddq
or
add
ror
repz
mov
mov
stc
mov
iret
add
clc
fcmovbe
xlat
faddp
in
icebp
ret
loop
call
mov
idiv
dec
aam
in
repnz
std
mov
cld
out
in
fucomip
call
fcmovbe
mov
ljmp
or
rcl
jecxz
add
shrb
cmc
out
lock
into
cld
fcmovnbe
mov
mov
stc
jmp
in
fucomi
iret
jmp
out
call
loop
mov
fadds
jecxz
clc
hlt
iret
fcmovb
rol
leave
loope
iret
repnz
lret
ret
call
mov
icebp
jmp
push
cld
les
in
scas
test
enter
iret
lret
fcmovu
mov
add
fld1
loop
push
shrl
imul
stc
repz
out
mov
fdivr
sar
cmc
xlat
add
out
int
fdivrl
repnz
call
mov
add
fldl2t
lret
add
shl
ret
enter
repnz
in
loop
out
stc
fstpt
cmc
jmp
loope
out
int
out
test
jmp
in
rcl
test
aam
lds
dec
in
lret
jmp
int3
jmp
call
mov
aam
cmc
cmc
or
iret
ret
add
fadd
mov
mov
enter
aam
rcr
call
push
aad
add
mov
std
add
mov
loope
loopne
in
mov
fiaddl
pop
rorb
shl
aam
push
lret
fcom
mov
lds
std
mov
mov
add
fisttpl
or
lret
aam
loop
shll
in
mov
jmp
fmul
fadds
repnz
add
jmp
shll
out
loopne
out
icebp
fmul
aam
cld
mov
repz
mov
add
add
jecxz
ffreep
out
mov
ljmp
aad
jecxz
cmc
hlt
rcl
fnstcw
add
mov
fcmovbe
mov
div
fcompp
lock
std
rcr
add
rorl
jmp
in
adc
mov
jmp
call
jmp
sti
repz
inc
add
mov
lret
mov
loopne
leave
mov
shl
loop
mov
not
fmull
stc
iret
or
out
mov
ret
jmp
jmp
mov
shl
loop
rolb
in
out
jecxz
ljmp
shl
out
in
mov
fcmovnb
aad
ret
push
sti
les
int3
in
mov
mov
int3
clc
mov
into
in
add
enter
ret
loopne
ror
lret
jmp
fisubrs
sar
mov
xlat
int
sti
in
icebp
fsubp
fadd
dec
fninit
in
leave
int
int3
test
out
in
int
mov
in
sar
in
dec
out
ror
mov
aad
mov
iret
jmp
lret
test
push
or
or
lret
out
aam
add
enter
scas
in
mov
fdiv
fxch
ret
ror
sti
loop
hlt
enter
icebp
shl
mov
cli
clc
into
loop
out
shl
in
lock
fstp
pmaxub
fldl2e
or
mov
lods
in
loopne
out
fdivrp
fcmovu
rcl
icebp
fcomp
movl
dec
les
mov
mov
mov
mov
in
sti
loopne
in
mov
fmul
jmp
mov
mov
loopne
mov
mov
add
sar
fucom
icebp
test
fdiv
rol
int
rol
scas
loopne
icebp
divl
xlat
cli
mov
hlt
iret
lret
adc
shr
jmp
rol
mov
rcr
int
add
jecxz
in
repz
lret
out
out
lds
iret
enter
mov
in
into
clc
roll
fdiv
cli
iret
int
fmull
into
in
loopne
shr
fxch
fdivr
int3
mov
sar
mov
fcomp
add
or
in
mov
aam
les
ret
out
ret
add
fcomi
jecxz
or
shrl
hlt
mov
rcr
enter
div
loop
neg
fcom
lret
into
loopne
adc
lret
jecxz
cli
xlat
loopne
mov
repnz
add
rcr
fsub
loop
loop
push
enter
jmp
cli
int3
in
rcr
mov
loop
loope
lock
xlat
fcmovnb
rolb
jmp
add
or
mov
into
lods
iret
int3
leave
leave
xlat
clc
in
enter
clc
cmc
loop
clc
stc
cld
pop
add
not
mov
stc
shl
mov
rol
sti
aam
in
or
loope
in
out
add
mov
mov
ror
shl
ljmp
int3
out
ret
xlat
sti
push
mov
ljmp
into
shl
loope
mov
mov
add
std
add
ffreep
lret
out
leave
mov
mov
out
rol
fidivs
fcmove
std
add
stc
loope
fisttpl
or
rep
fmul
shr
call
shl
mov
cld
ret
loop
out
call
xlat
repnz
call
clc
lret
sti
mov
out
out
add
leave
add
fadd
mov
lret
mov
clc
icebp
fcompp
iret
repz
add
xlat
enter
aad
mov
call
add
in
mov
fcmovb
iret
out
add
mov
cli
mov
clc
mov
fucom
stc
fistpll
in
roll
in
scas
in
out
lret
loope
fcomip
out
out
mov
sar
loop
sar
clc
jmp
in
loopne
iret
scas
mov
rcl
cli
cmc
in
mov
fimull
aam
aam
add
ffreep
enter
in
clc
in
stc
mov
mov
mov
out
lret
leave
out
mov
lods
ror
ret
mov
shl
cmc
stc
in
in
clc
div
or
loopne
clts
mul
in
in
not
lods
out
in
int3
ljmp
loopne
iret
ljmp
fnstsw
pushl
fcmovnu
lock
sti
lret
in
or
loop
jmp
ljmp
test
icebp
std
mov
rol
inc
jmp
adc
jmp
fcmovbe
cmc
jmp
cli
mov
xlat
iret
repz
or
push
fsubr
scas
test
mov
mov
fdivl
fcom
hlt
add
push
or
or
dec
loop
out
neg
shl
iret
imulb
ljmp
cmc
or
std
or
cli
adc
fnsave
mov
idivl
lret
call
fdivr
push
rcl
sti
in
add
fsubrs
loope
lret
lret
xlat
jmp
cmc
rcl
xabort
fstp
out
or
mov
mov
mov
fucomip
fcmovu
repz
fcmovu
mov
idiv
leave
out
hlt
adc
add
scas
jmp
shr
mov
int
into
jecxz
mov
push
fucomi
out
out
into
loop
shl
loop
jmp
ret
mov
ret
out
jmp
loope
sti
lret
pop
out
push
aam
out
repz
lret
mov
call
mov
aad
fadds
int
rol
loopne
sti
leave
in
out
cmpsl
ljmp
icebp
out
repz
cmc
ror
mov
neg
std
pinsrw
cmpsl
enter
fcomi
rcr
lret
jmp
fdiv
xlat
sti
fcmovnu
or
clc
out
push
leave
lods
loop
mov
mov
lret
rol
in
sarb
mov
loop
paddusw
std
jmp
push
shr
aam
mov
mov
out
fcmovu
cld
xlat
out
hlt
in
ret
sar
sti
jecxz
idiv
faddl
lret
out
shl
shrb
repz
lret
add
rcl
les
in
cli
fcompp
test
enter
in
mov
fiadds
iret
rol
repz
add
test
in
repz
lods
call
mov
aad
mov
cli
add
fldl
clc
add
push
shrl
lock
mov
loopne
clc
add
repz
add
out
call
test
int3
loop
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
xor
add
mov
mov
or
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
or
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
inc
mov
mov
sub
xor
cmp
jne
jmp
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
xor
add
mov
sub
mov
mov
mov
mov
movl
movl
mov
mov
mov
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
leave
ret
add
pop
or
dec
add
add
add
add
add
add
icebp
add
add
add
push
push
inc
push
dec
xor
dec
cwtl
xor
iret
adc
add
add
inc
cmp
insb
insb
outsl
pop
dec
outsb
jae
jb
pop
inc
popa
je
pop
inc
imul
add
pop
or
dec
add
add
and
add
add
add
add
add
add
add
sbb
add
sbb
add
and
add
mov
incb
add
add
arpl
outsb
inc
popa
je
pop
inc
js
add
jae
outsl
ja
xor
gs
popa
addr16
jae
outsl
ja
xor
gs
popa
addr16
xor
or
adc
pop
jne
or
icebp
xchg
or
icebp
xchg
or
jne
jmp
xchg
mov
xchg
jmp
xchg
jmp
xchg
or
pop
popa
popa
ljmp
xchg
ljmp
xor
mov
popa
popa
or
out
bound
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
shll
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
shll
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
jno
popa
xchg
pop
loop
bound
adc
andb
pop
loop
bound
adc
cmp
xchg
pop
loop
bound
adc
fbld
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
inc
popa
popa
xchg
pop
loop
bound
adc
es
popa
xchg
pop
loop
bound
adc
dec
popa
popa
xchg
pop
loop
bound
adc
xor
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
inc
popa
popa
xchg
pop
jne
adc
es
popa
xchg
pop
jne
adc
dec
popa
popa
xchg
pop
jne
adc
xor
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
shll
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
mull
xchg
pop
jne
adc
movsb
popa
popa
xchg
pop
jne
adc
mov
jne
adc
outsl
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
shll
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
mull
xchg
pop
loop
bound
adc
movsb
popa
popa
xchg
pop
loop
bound
adc
mov
loop
bound
adc
outsl
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
das
popa
popa
xchg
pop
jne
adc
jae
popa
xchg
pop
jne
adc
jmp
popa
xchg
pop
jne
adc
push
popa
popa
xchg
pop
jne
adc
fbld
xchg
pop
jne
adc
jno
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
or
bound
popa
or
loop
bound
pushl
cmp
jne
dec
pushl
pushl
and
jne
mov
jne
loopne
jne
in
pushl
repz
inc
pushl
lock
and
jne
mov
jne
loopne
loop
arpl
repz
lods
arpl
xor
bound
jmp
mov
jmp
lods
arpl
notrack
das
arpl
out
jmp
mov
bound
jmp
and
or
lcall
popa
pop
loop
arpl
out
xchg
lcall
bound
outsb
push
pop
loop
arpl
fsubs
and
bound
jae
or
bound
test
popa
popa
popa
fcomps
or
bound
lea
and
lcall
popa
pop
loop
arpl
out
xchg
lcall
bound
outsb
push
pop
loop
arpl
fsubs
push
arpl
cmp
or
bound
test
popa
popa
popa
fcomps
or
bound
lea
and
lcall
popa
pop
loop
arpl
out
xchg
lcall
bound
outsb
push
pop
loop
arpl
fsubs
std
arpl
lcall
bound
push
outsb
xor
arpl
test
popa
popa
popa
fcomps
or
bound
lea
repnz
pop
loop
bound
or
bound
popa
in
push
insl
ljmp
loop
push
jmp
bound
and
out
bound
inc
xor
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
mull
xchg
pop
loop
arpl
adc
movsb
popa
popa
xchg
pop
loop
arpl
adc
mov
loop
arpl
adc
outsl
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
or
lcall
popa
pop
loop
arpl
or
lcall
dec
push
popa
bound
popa
adc
adc
bound
or
lcall
popa
rclb
loop
arpl
rorb
bound
popa
bound
jne
bound
loop
arpl
fsubs
jecxz
bound
out
clc
cmp
testl
mov
bound
popa
or
or
pop
call
xchg
loop
xor
popa
or
lcall
popa
or
bound
popa
pop
push
or
call
out
bound
pop
fldt
popa
pop
push
bound
jmp
movsl
arpl
xor
bound
jmp
lret
arpl
fs
lret
bound
jmp
shll
out
jmp
shlb
ss
arpl
loopne
jp
popa
popa
xchg
pop
loop
pop
bound
xor
popa
popa
xchg
pop
loop
pop
bound
jecxz
popa
popa
xchg
pop
loop
pop
bound
stos
int3
popa
popa
xchg
pop
loop
pop
bound
in
popa
popa
xchg
pop
loop
pop
bound
mov
pop
loop
pop
bound
loope
popa
popa
xchg
pop
loop
pop
bound
mov
pop
loop
pop
bound
xor
popa
popa
xchg
pop
loop
pop
bound
xchg
int3
popa
popa
xchg
pop
loop
pop
bound
imul
loop
pop
bound
in
popa
popa
xchg
pop
loop
pop
bound
jo
popa
popa
xchg
pop
loop
pop
bound
push
push
popa
popa
xchg
pop
loop
pop
bound
sbb
popa
popa
xchg
pop
loop
pop
bound
sbb
loop
pop
bound
pushf
int3
popa
popa
xchg
pop
loop
pop
bound
jp
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
add
xchg
pop
loop
arpl
adc
adc
xchg
pop
loop
arpl
adc
es
popa
xchg
pop
loop
arpl
adc
push
popa
popa
xchg
pop
loop
arpl
adc
add
xchg
pop
loop
arpl
adc
fwait
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
or
lcall
popa
pop
loop
pop
bound
xchg
lcall
bound
outsb
push
pop
loop
pop
bound
jne
test
lcall
popa
mov
bound
or
lcall
popa
or
bound
lea
fsubs
popa
fcomps
or
or
pop
call
pusha
pop
bound
dec
add
imul
or
lcall
popa
pop
loop
arpl
or
lcall
bound
adc
and
push
popa
fcomps
pop
bound
adc
int3
popa
popa
xchg
pop
loop
pop
bound
popa
xchg
pop
loop
pop
bound
pop
shll
xchg
pop
loop
pop
bound
out
shll
xchg
pop
loop
pop
bound
jmp
pop
loop
pop
bound
or
pop
loop
pop
bound
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
or
lcall
sbb
popa
pop
loop
pop
bound
jne
test
lcall
popa
or
bound
or
bound
test
lcall
xor
and
or
lcall
popa
or
bound
or
bound
test
lcall
popa
or
or
outsb
int
sbb
popa
or
lcall
popa
or
or
outsb
int
xor
xchg
or
or
lcall
adc
bound
jne
test
lcall
bound
adc
and
push
popa
jo
bound
arpl
shl
jp
popa
popa
or
or
adc
push
popa
or
lcall
popa
mov
out
adc
adc
bound
or
lcall
popa
rclb
loop
arpl
shlb
xor
or
or
lcall
bound
adc
and
push
popa
jo
bound
pop
bound
repz
leave
popa
popa
or
or
adc
push
popa
adc
fbld
bound
loop
arpl
bound
out
bound
mov
bound
bound
bound
repz
xor
or
bound
push
or
call
fbld
bound
popa
adc
pop
loop
pop
bound
loop
bound
push
loop
bound
pop
loop
bound
bound
out
bound
aaa
cmp
or
lcall
popa
or
bound
popa
or
lcall
test
cmpsl
pop
mov
or
bound
popa
bound
loop
bound
or
popa
cmp
jl
loop
bound
or
popa
or
bound
loop
pop
bound
lcall
xor
push
adc
bound
loop
pop
bound
popa
or
or
or
bound
pop
bound
lcall
or
popa
or
bound
testl
bound
bound
bound
or
popa
or
adc
xchg
pop
push
movsl
or
and
lods
loop
imul
add
jne
or
or
pop
call
mov
or
lcall
popa
lock
popa
popa
lock
pop
popa
popa
or
push
outsl
or
pop
call
xchg
outsb
icebp
push
xchg
pop
jne
or
adc
jne
pop
jne
and
add
add
jne
and
add
jne
lods
loop
imul
add
jne
mov
add
jne
test
lcall
popa
or
pop
int
and
sub
add
ljmp
outsb
sbb
popa
or
lcall
outsl
or
lcall
fs
inc
dec
outsl
or
lcall
popa
or
or
pop
call
cmpsl
pop
xchg
loop
popa
popa
popa
or
sbb
jne
or
lcall
popa
pop
jne
out
cmp
jne
or
lcall
popa
mov
or
call
lcall
fmull
adc
jne
pusha
cld
dec
int3
mov
imul
pusha
xor
push
xor
or
adc
or
loop
xor
rcrb
int
pop
sub
pusha
out
adc
ljmp
jne
test
popa
popa
popa
fcomps
add
and
xor
lcall
popa
xchg
push
int
sub
or
or
pop
call
and
add
and
push
jne
sbb
and
or
call
lcall
cwtl
or
lcall
popa
or
or
pop
call
xor
test
test
lcall
jne
test
lcall
popa
or
pop
int
out
imul
leave
cmp
call
fs
lock
bound
xchg
or
lcall
popa
out
lea
lcall
popa
push
and
movsl
or
push
or
jbe
or
enter
fsubs
inc
dec
dec
pop
rcrb
push
fsubs
inc
dec
dec
pop
rcrb
or
sub
rcl
ror
sub
bound
push
popa
popa
inc
dec
adc
cmp
adc
mull
dec
lock
jo
shl
pop
popa
popa
xor
test
mov
jne
sub
pop
jne
lods
popa
repz
loop
popa
popa
popa
sbb
pop
jg
fs
ret
lcall
arpl
lcall
out
popa
popa
leave
movsb
push
popa
push
push
push
sub
mov
ret
jg
push
push
adc
int
rep
pop
popa
popa
or
fdivrs
push
push
cmpsl
call
jno
maxss
mov
fsubr
push
rcrb
dec
call
xchg
shrb
mull
call
push
sub
lods
pop
arpl
rcrl
popa
mov
lret
rol
bound
into
cmp
das
popa
out
jae
push
arpl
jb
popa
popa
mov
lods
outsl
arpl
imul
mov
lret
lods
xchg
call
or
cmp
mov
xchg
popa
popa
mov
ljmp
popa
lods
push
repz
popa
or
lods
sbb
in
push
sub
xchg
or
sub
int
or
sub
push
pop
mov
lret
sub
popa
popa
das
lcall
sbb
call
or
push
or
dec
pop
dec
push
sub
adc
fwait
imul
test
pop
repz
push
or
dec
pop
dec
push
jo
shll
adc
fwait
imull
popa
out
xchg
sub
pop
popa
popa
push
ljmp
push
sbb
repz
popa
popa
or
gs
stc
notl
popa
fdivs
cmp
imul
push
jo
rorl
sub
mov
push
popa
popa
or
popa
popa
or
gs
int
pop
int
fdivs
imul
jae
outsl
fcoms
fmul
cmp
int3
fdivs
mov
adc
pop
popa
popa
sub
xchg
cmp
jne
dec
dec
push
jne
pop
jne
out
xor
in
div
pop
popa
popa
popa
dec
out
dec
xchg
cmp
mov
jne
aaa
mov
adc
cmp
push
jne
pop
jne
pop
xchg
cmp
jo
mov
and
popa
popa
popa
and
out
xchg
ljmp
out
popa
bound
or
pop
or
sub
cmp
rorb
or
cmpsl
addr16
shll
xchg
push
xor
pop
bound
cs
popa
popa
sub
xchg
or
imul
ljmp
push
mov
mov
out
push
pop
popa
popa
popa
push
xor
imul
dec
lcall
imul
notl
repz
pop
out
cmp
stc
or
jne
sub
popa
pop
popa
popa
popa
push
mov
lcall
sbb
pop
xor
sti
or
popa
pop
lock
xchg
mov
sti
jae
or
popa
popa
sub
xchg
push
adc
mov
aaa
mov
sub
popa
push
sbb
sbb
adc
mov
mov
lret
and
jp
bound
loop
imul
bound
jne
pop
jne
or
bound
xor
call
into
bound
or
bound
xor
call
pop
or
bound
xor
call
adc
loop
bound
test
lcall
popa
pop
jne
and
lods
xor
imul
bound
jne
and
add
jne
aam
popa
popa
and
jmp
bound
popa
popa
popa
and
xchg
popa
popa
popa
and
out
bound
popa
popa
popa
and
int3
popa
popa
popa
and
fbld
bound
popa
popa
or
bound
xor
call
dec
or
bound
xor
call
jecxz
bound
pop
mov
bound
out
lea
bound
bound
and
pop
popa
popa
jae
fcomps
bound
popa
out
lea
bound
bound
and
bound
test
fcomps
bound
popa
out
lea
bound
bound
and
jae
adc
rclb
jne
sarb
loopw
repz
js
popa
out
es
or
mov
std
mov
jp
bound
or
call
pusha
or
bound
xor
call
push
fcoms
mov
popa
pop
jne
or
jb
jne
or
xchg
jne
or
mov
add
push
and
int
pop
add
push
and
int
pop
add
push
jp
bound
dec
or
pop
call
and
mov
popa
popa
cmpsl
xor
popa
or
jmp
int
or
popa
or
cltd
xchg
pop
loop
bound
adc
lcall
or
bound
adc
popa
or
adc
popa
or
bound
push
add
popa
popa
rorb
dec
push
jbe
loop
bound
ret
lea
bound
cli
jmp
xchg
bound
lock
xchg
bound
push
jmp
mov
bound
jmp
mov
out
jmp
bound
ss
jle
bound
jmp
imul
loopne
loop
bound
and
loop
bound
repz
xor
bound
loop
bound
xor
bound
jmp
test
jmp
test
bound
jmp
scas
bound
ret
sahf
bound
out
jmp
test
bound
bound
jmp
stos
bound
hlt
jmp
stos
bound
in
jmp
mov
jmp
mov
jmp
cmpsl
bound
lock
xchg
bound
ss
popf
bound
push
jmp
pushf
bound
sub
loop
bound
loopne
loop
bound
and
loop
bound
repz
andb
adc
loop
bound
xor
bound
jmp
jge
bound
jmp
jl
bound
jmp
andl
ret
sti
bound
out
jmp
jns
bound
jmp
js
bound
jmp
jg
bound
jmp
mov
in
jmp
aad
bound
jmp
aam
bound
jmp
add
lock
cmp
bound
jmp
aaa
bound
push
jmp
bound
dec
jmp
sub
jmp
arpl
and
loop
arpl
repz
in
arpl
adc
loop
arpl
xor
bound
jmp
outsl
arpl
lock
data16
and
loop
arpl
sbb
loop
arpl
fs
inc
arpl
inc
jmp
dec
arpl
lock
dec
arpl
sub
loop
arpl
loopne
sbb
and
arpl
scas
xchg
scas
mov
bound
jmp
cltd
bound
repz
cwtl
bound
adc
loop
bound
xor
bound
jmp
jne
bound
jmp
je
bound
jmp
fwait
bound
sbb
loop
bound
fs
shll
bound
loop
bound
lock
xlat
bound
dec
jmp
bound
loopne
sbb
and
bound
scas
xchg
scas
mov
bound
fcomps
bound
popa
bound
mov
or
adc
popa
popa
rep
jne
popa
rorb
and
popa
popa
bound
aas
mov
popa
bound
fsubs
popa
bound
popa
mov
jo
bound
bound
repz
and
fisttpl
popa
popa
popa
bound
fsubs
popa
bound
popa
mov
jo
bound
bound
repz
jne
popa
rorb
dec
push
xchg
pop
loop
bound
or
bound
xor
call
std
xchg
outsb
mov
popa
or
inc
bound
outsl
or
pop
call
std
sub
mov
pop
popa
popa
and
sub
bound
popa
popa
bound
mov
or
or
popa
repz
sub
popa
rorb
and
popa
popa
bound
mov
and
pop
add
popa
pop
push
and
loop
bound
shl
aam
popa
popa
rorb
add
popa
bound
jne
or
popa
lcall
jo
bound
bound
shl
dec
sub
popa
rorb
add
popa
bound
jne
or
popa
lcall
jo
bound
arpl
shl
pusha
sub
popa
rorb
add
popa
bound
jne
or
popa
lcall
fcomps
arpl
popa
fcomps
arpl
popa
out
lea
bound
bound
and
bound
jae
or
bound
dec
outsl
fsubs
test
arpl
loop
out
or
bound
dec
outsl
fsubs
cltd
enter
arpl
loop
out
fcomps
arpl
popa
out
cmp
bound
bound
shl
sahf
sub
popa
rorb
cmc
push
or
dec
push
lcall
lock
bound
dec
or
pop
call
inc
bound
test
lcall
popa
shlb
and
jne
shl
ss
popa
popa
rorb
bound
xor
call
mov
adc
shl
stc
lahf
popa
popa
shlb
cmp
bound
xor
arpl
push
loop
bound
test
lcall
outsb
push
pop
jne
fsubs
sub
bound
mov
bound
or
push
pop
jne
lock
bound
jne
cmpsl
jne
mov
jp
loop
imul
shl
cltd
jbe
popa
pop
loop
bound
out
cmpsb
or
bound
loop
pop
bound
loop
bound
test
lcall
popa
or
bound
pop
bound
push
bound
or
call
into
bound
xchg
outsb
loope
popa
popa
or
bound
xor
call
pop
xchg
outsb
mov
loop
bound
test
lcall
popa
pop
loop
arpl
out
jl
loop
bound
test
lcall
bound
outsb
push
pop
loop
arpl
or
or
bound
or
bound
or
bound
loop
pop
bound
loop
arpl
scas
inc
jo
rorl
or
bound
or
bound
out
add
mov
bound
bound
loop
arpl
and
jmp
bound
loop
imul
bound
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
jecxz
bound
loop
arpl
or
add
loop
arpl
daa
loop
imul
arpl
outsl
or
pop
call
xchg
outsb
add
loop
arpl
test
lcall
popa
or
bound
out
bound
or
call
mov
bound
mov
push
popa
popa
or
bound
bound
arpl
outsl
or
pop
call
dec
outsl
pop
loop
arpl
or
bound
outsl
or
pop
call
lds
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
into
arpl
xchg
mov
arpl
or
bound
outsl
or
pop
call
xchg
outsb
add
popa
or
bound
loop
arpl
or
bound
fbld
bound
loop
arpl
and
sub
bound
loop
imul
bound
loop
arpl
mov
add
loop
arpl
and
add
loop
arpl
and
loop
arpl
test
lcall
popa
pop
loop
arpl
adc
fisubl
bound
loop
arpl
adc
inc
arpl
pop
loop
arpl
or
bound
bound
popa
or
bound
popa
pop
loop
imul
loop
imul
bound
loop
arpl
or
bound
xor
call
mov
bound
mov
arpl
or
bound
xchg
lret
bound
xor
call
mov
bound
mov
arpl
test
lcall
bound
push
outsb
lcall
fisubl
outsl
or
lcall
adc
pusha
add
cmpsl
arpl
sbb
cmpsl
arpl
or
outsl
or
pop
call
mov
bound
mov
arpl
add
mov
bound
xor
call
mov
bound
mov
arpl
or
bound
xchg
lret
bound
xor
call
mov
bound
mov
arpl
test
lcall
bound
push
outsb
lcall
inc
arpl
outsl
or
lcall
adc
pusha
add
cmpsl
arpl
sbb
cmpsl
arpl
or
outsl
or
pop
call
mov
bound
mov
arpl
add
mov
bound
xor
call
mov
outsl
or
pop
call
pop
push
loop
arpl
pop
loop
arpl
lock
bound
loop
arpl
test
lcall
bound
outsl
or
pop
call
cmpsb
arpl
or
dec
or
pop
call
xchg
outsl
adc
pop
call
out
bound
outsl
or
fbld
bound
outsb
push
pop
loop
arpl
out
jl
loop
arpl
test
lcall
bound
outsb
push
pop
loop
arpl
lock
bound
loop
bound
test
lcall
popa
pop
loop
arpl
bound
bound
repz
loop
arpl
or
lcall
popa
rorb
bound
xor
call
or
bound
bound
xor
call
jne
or
popa
adc
bound
loop
bound
test
lcall
popa
cmpsl
loop
arpl
out
bound
dec
arpl
bound
adc
bound
mov
bound
into
bound
repz
popa
popa
or
lcall
popa
rorb
bound
xor
call
or
bound
or
dec
push
mov
bound
loop
bound
or
bound
jne
or
bound
loop
arpl
or
bound
xor
call
sbb
bound
loop
arpl
inc
jmp
hlt
arpl
dec
jmp
jmp
bound
loop
arpl
sub
loop
arpl
inc
jmp
push
arpl
adc
loop
arpl
inc
jmp
dec
arpl
sbb
loop
bound
pop
loop
arpl
out
aaa
or
bound
or
outsl
or
lcall
lcall
bound
and
loop
imul
arpl
test
lcall
bound
push
outsb
push
or
outsl
or
adc
outsl
fsubs
popa
fcomps
lcall
mov
bound
xor
call
sbb
bound
xor
insl
bound
or
bound
xor
call
sbb
bound
outsb
fcompl
popa
or
bound
push
arpl
and
outsb
arpl
lods
loop
imul
bound
adc
adc
bound
loop
arpl
and
add
loop
arpl
test
lcall
popa
rorb
bound
xor
call
loop
arpl
test
lcall
popa
rorb
bound
xor
call
jne
or
popa
add
bound
bound
xor
call
loop
arpl
test
lcall
popa
shlb
push
arpl
or
bound
xor
call
jne
or
popa
and
bound
loop
arpl
test
lcall
popa
cmpsl
loop
arpl
out
or
bound
xor
call
and
bound
xor
mov
popa
popa
and
cmc
arpl
and
add
loop
arpl
mov
add
loop
arpl
test
lcall
popa
or
bound
or
bound
xor
call
add
bound
push
bound
or
call
add
bound
pop
fcomps
arpl
popa
fcomps
arpl
popa
fcomps
arpl
popa
adc
bound
push
arpl
bound
and
bound
loop
arpl
rorb
bound
xchg
fcomps
shlb
add
bound
loop
arpl
or
lcall
popa
rorb
bound
xor
call
or
arpl
or
dec
push
mov
bound
pop
call
lcall
imul
cmp
call
loop
arpl
test
lcall
popa
shlb
into
bound
or
dec
push
mov
bound
loop
bound
or
bound
jne
out
test
or
call
loop
arpl
test
lcall
popa
shlb
and
bound
jne
or
popa
mov
pusha
pop
bound
loop
bound
pop
loop
pop
bound
loop
arpl
lods
loop
imul
bound
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
jbe
bound
loop
arpl
or
add
loop
arpl
daa
loop
imul
arpl
outsl
or
pop
call
xchg
outsb
add
loop
arpl
test
lcall
popa
or
bound
xchg
arpl
test
lcall
popa
or
bound
mov
push
popa
popa
or
bound
bound
arpl
outsl
or
pop
call
dec
outsl
pop
loop
arpl
or
bound
outsl
or
pop
call
lds
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
lcall
pop
adc
bound
loop
arpl
or
outsl
or
pop
call
xchg
outsb
add
popa
or
bound
loop
pop
bound
loop
pop
bound
loop
arpl
pop
loop
pop
bound
loop
pop
bound
loop
imul
bound
loop
pop
bound
loop
imul
bound
loop
imul
bound
loop
pop
bound
or
call
popa
arpl
adc
fs
bound
loop
pop
bound
loop
arpl
pop
loop
pop
bound
loop
pop
bound
loop
arpl
xchg
fdivrs
loop
pop
bound
popa
pop
loop
imul
loop
imul
bound
loop
pop
bound
loop
pop
bound
or
call
popa
arpl
xchg
mov
pop
bound
in
pop
bound
xchg
push
pop
bound
or
call
popa
arpl
xchg
mov
pop
bound
or
sub
xchg
push
outsb
lcall
fs
bound
outsl
or
lcall
adc
bound
pusha
add
dec
pop
bound
loop
pop
bound
adc
bound
outsl
or
pop
call
popa
arpl
xchg
mov
pop
bound
testl
lcall
popa
or
bound
push
pop
bound
in
pop
bound
xchg
push
pop
bound
or
call
popa
arpl
xchg
mov
pop
bound
or
sub
xchg
push
outsb
lcall
mull
outsl
or
lcall
adc
bound
pusha
add
dec
pop
bound
loop
pop
bound
adc
bound
outsl
or
pop
call
popa
arpl
xchg
mov
pop
bound
testl
lcall
popa
or
outsl
or
pop
call
pop
push
loop
arpl
pop
loop
arpl
lock
bound
loop
arpl
test
lcall
bound
outsl
or
pop
call
pop
pop
bound
or
bound
dec
or
pop
call
xchg
outsl
adc
pop
call
xchg
arpl
outsl
or
sti
arpl
adc
pop
call
sti
arpl
out
jl
loop
arpl
test
lcall
bound
outsb
push
pop
loop
arpl
lock
bound
mov
or
dec
push
and
or
stc
push
or
sbb
popa
popa
bound
mov
bound
into
bound
repz
jbe
popa
pop
jne
or
bound
xor
call
into
bound
out
or
lcall
popa
rorb
bound
xor
call
or
bound
or
dec
push
mov
mov
movsl
or
jne
pop
jne
or
pushf
xchg
mov
ljmp
mov
lcall
push
jmp
xchg
or
popa
popa
popa
movsb
and
lods
loop
imul
add
jne
pop
jne
or
or
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
rcr
xrelease
jne
or
stos
fimull
mov
stc
or
pop
or
mov
cltd
stos
pop
loop
bound
out
xchg
mov
bound
loop
bound
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
or
and
and
jne
mov
add
jne
and
add
jne
and
add
jne
test
lcall
popa
or
pusha
or
lcall
outsb
xchg
pop
call
xchg
fdiv
mull
or
lcall
popa
pop
jne
or
mov
jne
bound
bound
popa
popa
pop
jne
and
fbld
bound
add
loop
bound
test
lcall
popa
rclb
jne
shl
cli
cmpsb
popa
popa
fsubr
add
out
loop
bound
test
lcall
popa
shlb
add
jne
shl
jae
popa
popa
or
out
bound
jne
or
bound
bound
or
bound
xchg
xchg
cmpsl
pop
call
or
add
lcall
sub
pop
jne
lock
bound
jo
bound
shl
push
popa
popa
and
jmp
bound
loop
imul
bound
jne
mov
add
jne
and
add
loop
bound
pop
jne
adc
out
bound
loop
bound
adc
pop
jne
adc
pop
jne
or
lcall
popa
pop
jne
and
jp
bound
loop
imul
bound
test
lcall
outsl
or
lcall
lcall
bound
jne
or
or
pop
call
xchg
loop
pop
popa
popa
and
bound
loop
imul
test
lcall
popa
pop
jne
or
bound
or
push
pop
jne
or
and
outsl
or
pop
call
mov
or
lcall
popa
shlb
adc
shl
lcall
or
leave
cmp
call
or
outsl
or
pop
call
out
or
bound
leave
cmp
call
or
outsl
or
pop
call
out
or
test
lcall
xor
int
outsl
or
pop
call
out
or
test
lcall
xor
int
outsl
or
pop
call
mov
or
lcall
popa
pop
jne
lock
popa
or
test
lcall
ret
popa
or
outsl
or
adc
or
or
jmp
popa
or
bound
lcall
xor
es
dec
cmpsl
pop
xchg
loop
push
jecxz
bound
popa
test
lcall
ret
popa
or
outsl
or
adc
or
bound
lcall
xor
mov
or
lcall
xor
es
dec
cmpsl
pop
xchg
loop
popa
popa
popa
or
test
lcall
ret
popa
or
outsl
or
adc
or
or
jmp
popa
or
dec
or
or
scas
es
dec
cmpsl
pop
mov
or
test
lcall
ret
popa
or
bound
lcall
xor
movsl
cmc
or
lcall
xor
mov
or
lcall
xor
es
dec
cmpsl
pop
out
or
lcall
popa
pop
jne
out
sti
jo
adc
shl
jno
popa
popa
cmpsl
jne
out
or
lcall
popa
pop
jne
lock
bound
jne
or
or
pop
call
mov
or
lcall
outsb
push
pop
jne
lock
bound
bound
shl
sbb
popa
popa
or
lcall
popa
cmpsl
jne
out
or
lcall
popa
shlb
adc
shl
mov
bound
jne
fcomps
pop
jne
bound
or
dec
shl
roll
popa
popa
or
lcall
popa
cmpsl
jne
out
jo
bound
push
jne
shl
jl
bound
jne
pop
loop
bound
or
bound
or
bound
lcall
pop
jne
lock
bound
jne
mov
movsl
or
jne
pop
jne
or
mov
ljmp
imul
sbb
push
dec
or
negl
or
adc
and
add
popa
or
lcall
popa
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
inc
popa
popa
xchg
pop
jne
adc
es
popa
xchg
pop
jne
adc
dec
popa
popa
xchg
pop
jne
adc
xor
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
or
lcall
outsl
or
lcall
mov
outsl
or
lcall
mov
outsl
or
lcall
fisttpl
lcall
popa
or
or
adc
dec
push
popa
or
or
or
rclb
outsb
adc
dec
push
popa
or
lcall
popa
or
or
mov
or
mov
into
popa
pop
sub
outsb
or
lcall
popa
or
or
mov
or
mov
into
popa
or
or
mov
test
pop
sub
outsb
adc
rorb
lcall
popa
rorb
popa
popa
popa
rorb
cmc
push
bound
pop
push
int
or
jne
or
pop
lcall
leave
cmp
or
lcall
mov
outsl
or
lcall
mov
outsl
or
lcall
fisttpl
or
or
adc
dec
push
popa
or
or
or
rclb
outsb
adc
dec
push
popa
or
lcall
popa
or
or
mov
or
mov
into
popa
pop
sub
outsb
or
lcall
outsl
or
lcall
mov
outsl
or
lcall
imul
jne
rorb
lcall
popa
rorb
popa
popa
popa
rorb
cmc
push
bound
or
lcall
popa
pop
loop
bound
out
xchg
lcall
bound
outsb
push
pop
loop
bound
or
or
bound
or
or
jecxz
bound
in
bound
sbb
sub
or
push
cltd
xchg
or
or
or
push
std
popa
popa
popa
pop
loop
bound
or
or
or
or
or
push
cltd
cmp
jne
or
lcall
popa
pop
jne
or
bound
out
bound
xchg
or
bound
out
bound
jne
test
lcall
popa
mov
bound
popa
or
lcall
popa
pop
loop
bound
out
lea
bound
bound
loop
bound
fdiv
lcall
bound
fsubs
popa
popa
popa
or
bound
bound
or
or
pop
call
xchg
or
pop
call
jg
pop
loop
bound
or
bound
bound
pop
imul
out
bound
pop
call
lcall
imul
bound
rorl
or
bound
bound
fcoms
or
or
bound
bound
push
pop
pop
loop
bound
or
or
bound
or
bound
push
bound
out
bound
jne
or
sti
or
popa
popa
popa
call
loop
bound
push
loop
bound
pop
loop
bound
lock
bound
jne
test
lcall
outsl
or
lcall
mov
outsl
or
lcall
mov
outsl
or
lcall
fisttpl
jle
outsl
or
adc
dec
push
popa
or
or
or
rclb
outsb
adc
dec
push
popa
or
lcall
popa
or
or
mov
or
mov
into
popa
pop
sub
outsb
or
lcall
outsl
or
lcall
mov
outsl
or
lcall
imul
jne
rorb
lcall
popa
rorb
popa
popa
popa
rorb
cmc
push
bound
or
popa
pop
jne
or
push
jne
pop
jne
or
jbe
xchg
pop
lcall
popa
movsl
or
jne
pop
jne
or
push
sub
imul
imul
or
lcall
nop
loopne
jne
jmp
xchg
or
jbe
fisttpl
popa
popa
or
or
lcall
popa
cmpsl
jne
mov
clc
pushf
xchg
mov
mov
lock
popa
popa
popa
or
or
or
pop
call
out
bound
bound
bound
test
int
pop
push
lcall
pop
call
xchg
outsl
or
pop
call
mov
clc
inc
xor
fsub
sbb
push
imul
inc
xor
fsubr
test
jne
test
lcall
popa
mov
clc
mov
and
jmp
mov
xchg
clc
inc
addr16
scas
aad
fs
enter
lahf
scas
push
and
fsubs
jne
test
lcall
popa
or
or
jmp
int
or
popa
or
cltd
xchg
pop
jne
or
dec
push
jle
jne
jo
jp
jb
popa
or
shlb
bound
pop
push
or
call
push
bound
shlb
jle
mov
bound
repz
bound
jne
or
outsl
or
pop
call
out
or
lcall
popa
xchg
mov
xchg
pop
push
movsl
or
and
lods
loop
imul
add
jne
test
lcall
popa
pop
jne
or
imul
mov
bound
shlb
imul
repz
popa
pop
jne
or
xchg
or
bound
mov
repz
bound
jne
jmp
bound
jp
pop
loop
repz
dec
bound
jne
jmp
xchg
bound
loop
repz
push
xchg
mov
xchg
bound
mov
repz
and
or
pop
sbb
xchg
bound
sarb
repz
mov
or
lods
loop
imul
jbe
mov
bound
bound
repz
bound
or
lock
ljmp
aam
mov
add
mov
bound
bound
bound
bound
int
pop
push
popa
ljmp
aam
and
add
mov
bound
bound
bound
bound
int
pop
push
popa
ljmp
aam
and
add
mov
bound
bound
bound
bound
int
pop
push
popa
ljmp
andl
bound
bound
bound
fldenv
popa
ljmp
jg
sub
add
mov
bound
bound
bound
bound
int
pop
push
sti
sub
add
jg
push
loop
imul
bound
bound
repz
arpl
or
out
cs
ljmp
jns
daa
loop
imul
bound
bound
repz
bound
or
mov
or
jne
pop
jne
or
push
ds
cmp
ljmp
cmp
cmp
or
push
jmp
xchg
or
jne
lods
pop
add
jne
or
popa
or
pop
lcall
push
xchg
popa
or
jne
or
popa
or
jmp
xchg
or
pop
jne
or
mov
outsl
or
pop
call
out
or
pusha
push
and
and
fsubs
jne
lods
or
imul
add
jne
and
add
jne
mov
add
jne
lods
xor
imul
cmp
jne
or
popa
pop
jne
or
or
popa
popa
pop
jne
or
adc
popa
pop
jne
or
or
or
pop
call
mov
bound
repz
bound
or
or
push
cltd
xchg
pop
jne
or
lcall
popa
or
xchg
loop
popa
popa
popa
or
pop
jne
adc
shlb
pop
bound
bound
bound
bound
adc
rclb
jne
shlb
lcall
bound
repz
pop
bound
jne
bound
bound
bound
jne
pop
jne
or
dec
pop
jne
or
jmp
jne
or
or
popa
popa
pop
jne
or
adc
popa
pop
jne
or
or
call
or
or
or
push
sub
rorb
jae
or
stc
or
or
sub
push
push
push
lea
lcall
popa
push
and
popa
movsl
or
or
dec
or
or
popa
popa
fsubrs
ljmp
xchg
cmp
popa
popa
or
or
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
add
popa
popa
popa
out
or
adc
popa
xchg
out
or
sahf
cmpsl
jne
mov
scas
sbb
lock
popa
fcoms
dec
popa
fcoms
push
popa
fcoms
pop
popa
fcoms
pop
popa
fcoms
dec
or
popa
or
pop
int
or
popa
popa
popa
pop
jne
or
lcall
jne
pop
jne
or
xchg
pop
jne
fcoms
or
jne
or
lcall
xchg
repnz
xchg
repnz
pusha
xchg
fsubs
popa
popa
or
not
bound
fdivl
jne
or
bound
push
jne
pop
jne
or
not
bound
fmull
push
fcoms
or
jne
or
lcall
xchg
repnz
xchg
repnz
stc
xchg
fcoms
popa
popa
popa
or
not
bound
fdivl
jne
or
bound
push
jne
pop
jne
or
not
bound
fmull
push
fcoms
or
jne
or
lcall
xchg
repnz
xchg
repnz
sbb
mov
mull
orl
pop
int
or
push
jne
or
out
repnz
bound
lock
bound
xchg
or
or
cmp
jne
or
popa
fsubrs
ljmp
lock
push
cmp
fisttpl
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
jecxz
mov
scas
sbb
lock
popa
or
jecxz
jne
or
lcall
jne
or
sbb
lcall
or
lcall
or
lcall
fcoms
dec
popa
or
stc
or
mov
xchg
or
jle
jne
out
xchg
or
mov
jne
or
pop
fcoms
or
jne
or
pop
xchg
fcoms
popa
popa
popa
or
sbb
fidivrl
jl
jne
or
lcall
or
repz
repnz
cmp
sub
pop
fcoms
out
lods
or
pop
or
pop
movsl
imul
or
stc
lds
jne
or
mull
or
pop
or
imul
sub
sub
sbb
ljmp
out
lcall
sbb
push
and
fsubs
jne
lods
loop
imul
add
jne
pop
jne
or
lcall
popa
pop
jne
and
push
out
enter
cmp
or
call
repz
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
and
push
out
enter
cmp
or
call
sbb
popa
cmpsl
push
cmp
or
call
xchg
rorl
push
sbb
popa
or
cltd
xchg
pop
jne
or
lcall
popa
or
popa
out
or
lcall
pop
int
out
mov
lcall
popa
lock
popa
out
mov
lcall
popa
lock
popa
and
lods
loop
imul
xor
test
test
lcall
jne
test
lcall
popa
pop
jne
or
dec
out
or
jle
int
outsl
or
pop
call
pop
mov
or
jle
int
outsl
or
pop
call
pop
mov
outsb
inc
pop
popa
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
jle
jne
pop
jne
or
lcall
or
lcall
popa
pop
jne
or
lcall
popa
or
out
or
lcall
jne
test
lcall
roll
call
lcall
pop
jne
or
sub
add
mov
or
dec
push
pop
jne
or
lcall
popa
cmpsl
jne
mov
bound
or
popa
imul
xchg
fcoml
jne
pop
jne
or
cmc
add
jne
test
lcall
popa
cmpsl
jne
mov
or
lcall
outsb
push
pop
jne
or
lcall
popa
xchg
mov
jne
or
popa
cmp
or
call
imul
cmp
call
push
xchg
mov
bound
or
lcall
popa
cmpsl
jne
mov
or
lcall
outsb
push
pop
jne
lock
popa
and
pusha
xchg
push
xor
mov
lcall
popa
pop
jne
out
imul
leave
cmp
push
pop
jne
or
lcall
popa
or
xor
cmp
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
cmpsl
jne
out
or
repz
or
xor
lods
or
lcall
popa
cmpsl
jne
out
or
lcall
popa
or
popa
popa
popa
fisttpl
xchg
inc
cmpsl
pop
out
or
bound
xchg
repnz
bound
or
popa
lcall
jne
push
jne
pop
jne
or
shlb
imul
lcall
test
lcall
popa
cmpsl
jne
mov
or
lcall
outsb
push
pop
jne
out
jbe
jne
test
lcall
popa
or
pop
or
xor
negl
lock
arpl
lock
bound
lcall
popa
mov
or
lcall
popa
pop
jne
out
xchg
or
lcall
popa
pop
jne
or
xchg
or
and
lods
loop
imul
add
jne
pop
jne
or
test
lcall
popa
mov
mov
popa
popa
or
lcall
and
sub
add
jne
test
lcall
outsl
or
pop
call
xor
add
push
xor
std
popa
popa
popa
pop
int
or
xor
repz
lcall
popa
mov
sahf
push
imul
popa
pop
jne
and
and
add
jne
or
push
out
xchg
or
notl
jne
or
lcall
popa
mov
gs
popa
popa
or
lcall
popa
pop
jne
out
cmp
jne
or
lcall
fdiv
popa
popa
popa
or
sbb
aad
xchg
popa
popa
pop
jne
or
or
lcall
lcall
jne
or
sub
lcall
or
lcall
outsb
push
pop
jne
or
cmp
outsl
or
pop
call
out
out
fucomi
aaa
or
cmp
outsl
or
pop
call
mov
or
sbb
jne
or
or
lock
bound
push
pop
jne
or
fs
outsl
or
xor
add
mov
push
pop
jne
lock
arpl
or
lcall
popa
out
lea
lcall
popa
push
and
fs
push
mov
loop
imul
add
jne
test
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
and
jne
pop
jne
or
or
or
or
xor
sarb
pop
push
jne
or
or
or
or
xor
int
pop
push
jne
or
or
or
or
xor
mov
pop
push
jne
or
or
or
or
xor
addr16
cmp
and
ret
imul
cmp
ljmp
mov
jbe
jne
xchg
repnz
or
or
pop
call
push
cmpsl
pop
out
scas
sbb
insb
xchg
popa
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
or
rclb
jne
fsubr
dec
popa
mov
scas
sbb
cmpsb
xchg
popa
popa
and
lods
loop
imul
and
jne
test
lcall
popa
or
or
lcall
popa
pop
jne
or
or
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
mov
adc
mov
jne
or
lcall
popa
pop
jne
or
adc
popa
or
or
adc
popa
or
mov
adc
rorb
lcall
popa
rorb
shlb
sbb
dec
push
jbe
jne
or
shrb
jne
or
mov
popa
popa
or
jmp
int
pop
lcall
bound
repz
or
xchg
pop
int
or
mov
adc
mov
jne
or
mov
outsl
or
pop
call
xchg
outsb
cmp
popa
popa
or
lcall
popa
pop
jne
out
jl
jne
test
lcall
outsb
push
pop
jne
or
cmp
jne
or
mov
outsl
or
pop
call
mov
or
jne
or
int
jg
lcall
mov
or
lcall
pop
loop
arpl
out
xchg
lcall
bound
xchg
bound
sbb
xchg
repz
test
lcall
popa
or
xchg
mov
lock
or
xchg
or
lcall
xor
xchg
repz
popa
popa
lock
bound
adc
popa
or
mov
adc
rorb
lcall
popa
rorb
mov
jne
or
popa
mov
lock
popa
popa
lock
cmp
or
pusha
push
test
lcall
popa
xchg
outsb
gs
popa
popa
adc
imul
arpl
or
lcall
popa
or
bound
push
bound
loop
imul
bound
imul
bound
add
loop
bound
stc
loop
imul
stc
loop
imul
bound
pop
dec
arpl
popa
out
lea
bound
bound
and
bound
jae
or
bound
bound
or
call
dec
arpl
xchg
pop
outsb
int
arpl
out
adc
bound
loop
imul
bound
add
loop
bound
and
add
loop
bound
arpl
add
loop
bound
cmp
loop
bound
jmp
add
loop
bound
cmp
add
loop
bound
add
loop
bound
jmp
add
loop
bound
dec
loop
imul
bound
loop
imul
bound
add
loop
bound
arpl
add
loop
bound
pop
loop
imul
bound
loop
imul
bound
add
loop
bound
cmp
add
loop
bound
cmp
add
loop
bound
and
add
loop
bound
dec
loop
imul
bound
add
loop
bound
push
loop
imul
bound
pop
cmp
bound
out
lea
bound
bound
and
bound
jae
or
bound
bound
or
call
cmp
bound
sub
fucomi
and
loop
arpl
rorb
dec
push
notl
loop
bound
adc
pop
loop
bound
adc
shlb
popa
bound
or
dec
push
lcall
pop
push
bound
or
adc
popa
bound
jne
bound
loop
arpl
pop
loop
arpl
or
lcall
popa
or
bound
push
or
call
imul
popa
popa
popa
adc
push
arpl
pop
loop
arpl
or
bound
bound
lcall
push
imul
cmpsl
lcall
bound
adc
bound
xchg
pop
lcall
mov
bound
pusha
or
adc
popa
or
bound
mov
or
or
popa
popa
or
push
cltd
cmp
bound
cltd
jbe
jne
test
lcall
popa
or
bound
push
or
popa
popa
fcomps
arpl
popa
and
mov
loop
imul
bound
imul
bound
add
loop
arpl
stc
loop
imul
stc
loop
imul
bound
pop
mov
bound
lea
bound
bound
and
jae
or
bound
bound
or
call
mov
bound
bound
adc
bound
loop
imul
bound
add
loop
arpl
and
add
loop
arpl
arpl
add
loop
arpl
cmp
loop
arpl
jmp
add
loop
arpl
cmp
add
loop
arpl
add
loop
arpl
jmp
add
loop
arpl
dec
loop
imul
bound
loop
imul
bound
add
loop
arpl
arpl
add
loop
arpl
pop
loop
imul
bound
loop
imul
bound
add
loop
arpl
cmp
add
loop
arpl
cmp
add
loop
arpl
and
add
loop
arpl
dec
loop
imul
bound
add
loop
arpl
push
loop
imul
bound
pop
sti
arpl
popa
out
lea
bound
bound
and
arpl
mov
or
bound
bound
or
call
sti
arpl
add
lea
bound
stc
adc
cmpsb
arpl
rorb
dec
push
notl
loop
arpl
adc
adc
bound
bound
xchg
arpl
or
dec
push
lcall
adc
stos
arpl
rorb
adc
popa
bound
in
arpl
fcomps
arpl
popa
fsubs
stos
arpl
popa
out
or
bound
loop
arpl
or
adc
popa
or
bound
out
or
bound
arpl
or
bound
bound
dec
or
adc
popa
or
bound
mov
or
or
popa
popa
or
push
cltd
cmp
bound
cltd
jbe
loop
arpl
push
mov
bound
repz
xor
loop
mov
lock
lock
bound
bound
bound
sbb
nop
lock
popa
lock
popa
bound
bound
bound
sbb
nop
lock
popa
popa
lock
popa
popa
popa
bound
repz
lock
popa
popa
popa
lock
popa
popa
popa
or
adc
popa
or
mov
adc
shlb
sub
mov
jne
or
popa
and
popa
or
leave
cmp
call
or
sbb
cmp
adc
loop
arpl
lods
pop
add
loop
arpl
test
lcall
popa
or
shrl
pusha
or
fisubrl
mov
bound
in
arpl
pop
jne
or
pop
push
add
mov
sbb
cmp
adc
in
arpl
pop
jne
or
jbe
push
popa
popa
popa
fsubr
cmp
mov
fcoms
sbb
jbe
movsl
or
jne
xchg
repnz
adc
mov
jne
fcoms
or
jne
or
mov
jae
or
xchg
xchg
or
xchg
xchg
lcall
jne
out
lea
cmp
jne
out
sbb
xchg
or
and
lods
loop
imul
add
jne
mov
add
jne
inc
loop
imul
add
jne
dec
loop
imul
add
jne
pop
jne
or
lcall
jne
or
xchg
lcall
leave
cmp
call
dec
xchg
outsb
ss
popa
popa
or
lcall
popa
mov
dec
pop
popa
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
adc
pop
jne
or
lcall
popa
xchg
repnz
int
outsl
or
pop
call
push
sub
dec
or
dec
xchg
or
jne
or
pop
xchg
or
jne
xchg
bnd
or
or
pop
call
push
cmpsl
pop
mov
or
lcall
popa
or
pusha
pop
int
lock
push
jne
or
or
pop
call
push
cmpsl
pop
mov
or
lcall
outsb
push
pop
jne
lock
popa
popa
or
or
or
pop
call
xchg
outsb
or
popa
xchg
bnd
xchg
repnz
cmpsl
pop
xchg
outsb
add
popa
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fistpll
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fmull
repnz
push
pusha
xchg
pop
int
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fistpll
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fmull
repnz
push
pusha
xchg
pop
int
xchg
bnd
xchg
repnz
cmpsl
pop
out
or
lcall
popa
lock
push
xchg
bnd
xchg
repnz
cmpsl
pop
out
or
lcall
popa
lock
popa
or
lcall
outsb
push
pop
jne
or
lcall
outsb
push
pop
jne
lock
jne
pop
jne
or
call
lcall
push
jne
or
call
lcall
push
or
call
sbb
outsl
or
pop
call
pop
or
imull
pop
call
lcall
outsl
or
pop
call
sbb
or
pop
call
dec
or
xchg
test
outsl
or
mov
or
lcall
popa
or
or
pop
call
pop
or
imull
pop
call
lcall
xchg
or
lcall
popa
out
lea
lcall
popa
push
and
leave
leave
and
das
loop
imul
add
jne
test
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
xor
popa
popa
out
or
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
mov
cmp
push
or
lcall
leave
cmp
jne
out
add
loop
imul
push
test
lcall
outsb
cltd
imul
mull
or
jne
das
loop
imul
add
mov
repz
bound
pop
jne
or
lcall
push
outsb
cltd
dec
sbb
popa
fdiv
lcall
popa
popa
xchg
push
sbb
imul
imul
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
lret
int3
popa
popa
mov
or
push
or
lcall
leave
cmp
jne
out
adc
ljmp
rorl
lcall
popa
or
adc
or
lcall
repnz
cltd
dec
sbb
popa
test
sbb
xor
cmpsl
popa
popa
or
or
lcall
into
popa
or
mull
or
jne
das
loop
imul
add
mov
repz
jne
or
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
xor
popa
popa
out
or
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
lret
int3
popa
popa
mov
or
push
or
lcall
leave
cmp
jne
out
add
loop
imul
out
pop
scas
sbb
and
popa
movsl
or
lcall
xchg
repnz
xor
repnz
or
popa
popa
xchg
repnz
xor
popa
popa
out
or
xchg
or
pop
jne
or
pop
jne
out
hlt
scas
sbb
int
xchg
pop
push
and
fsubs
jne
lods
loop
imul
add
jne
test
lcall
popa
pop
jne
and
adc
add
jne
and
add
jne
mov
add
jne
test
lcall
outsb
push
or
or
pop
call
xchg
xchg
mov
fsubr
popa
popa
popa
or
imul
leave
cmp
pop
pop
call
lds
jne
push
jne
or
imul
testl
int
adc
pop
call
imul
or
imul
leave
cmp
pop
pop
call
lds
or
imul
lcall
leave
cmp
push
pop
jne
out
or
imul
leave
cmp
pop
pop
call
lds
or
imul
xchg
pop
lcall
leave
cmp
push
pop
jne
out
mov
imul
lcall
imul
push
and
fsubs
jne
lods
loop
imul
add
jne
test
lcall
popa
mov
or
lcall
popa
or
pop
int
adc
pop
jne
or
call
lcall
push
or
call
xor
outsl
or
lcall
popa
out
or
lcall
sahf
pop
popa
popa
and
sub
lods
loop
imul
bound
jne
pop
loop
pop
bound
loop
pop
bound
or
call
lcall
bound
or
call
push
sub
test
lcall
popa
cmpsl
jne
mov
or
bound
xor
call
push
push
pop
loop
pop
bound
loop
pop
bound
adc
pop
bound
lcall
pop
jne
or
xchg
lcall
test
lcall
popa
pop
loop
pop
bound
mov
repz
bound
loop
pop
bound
jne
or
repz
bound
jne
fcomps
mov
bound
popa
or
fdiv
lcall
or
bound
cmp
push
bound
loop
pop
bound
or
bound
mov
repz
push
bound
loop
pop
bound
or
call
dec
pop
bound
lcall
bound
loop
pop
bound
or
call
or
bound
mov
repz
bound
outsl
or
pop
call
mov
or
bound
or
bound
pop
bound
shlb
bound
bound
xor
call
xchg
or
or
imul
cmp
ljmp
lock
sbb
pop
jne
fcoms
mov
popa
popa
and
fisubs
popa
scas
sbb
pop
jne
out
xchg
sbb
xchg
pop
jne
xchg
bnd
or
sar
outsl
or
popa
popa
pop
mov
repnz
cmpsl
pop
xchg
adc
popa
popa
popa
xchg
bnd
or
sub
pop
xchg
repnz
lock
repnz
outsl
or
popa
popa
xchg
repnz
cmpsl
pop
out
out
mov
or
not
popf
xor
popa
popa
mov
xchg
bnd
or
imull
sbb
jb
bnd
or
not
xchg
repnz
or
push
xchg
lock
repnz
outsl
or
popa
popa
xchg
repnz
cmpsl
pop
mov
and
loope
popa
popa
or
jne
out
mov
cmp
jne
loopne
popa
popa
lock
bound
xchg
bnd
or
imull
sbb
pop
out
xchg
sbb
xchg
pop
jne
fsubr
push
loopne
imull
dec
arpl
xchg
bnd
xor
repnz
or
popa
popa
xchg
repnz
int
xchg
repnz
cmpsl
pop
out
scas
sbb
push
scas
sbb
push
and
fsubs
jne
pop
jne
or
and
popa
popa
fsubrs
jne
test
lcall
popa
lock
popa
popa
jo
bound
bound
jne
pop
jne
or
js
jne
or
sub
jne
or
xchg
pop
jne
or
popa
popa
popa
pop
jne
or
popa
popa
popa
pop
jne
or
popa
popa
popa
pop
jne
or
popa
popa
popa
pop
jne
or
push
fs
push
xor
push
pop
or
lcall
popa
pop
jne
bound
mov
or
mov
popa
popa
repz
push
jne
or
popa
bound
xor
bound
jne
or
lcall
popa
mov
fldcw
popa
or
push
push
ficoml
jne
or
jecxz
int
or
push
push
fidivl
int
or
push
push
pop
int
or
mov
push
pop
jne
or
std
or
mov
xchg
or
jle
jne
out
xchg
or
mov
jne
or
and
jne
test
lcall
popa
pop
jne
and
xchg
popa
popa
popa
or
lcall
popa
pop
jne
out
imul
leave
cmp
push
pop
jne
or
and
fsubrs
popa
popa
popa
or
and
xor
and
popa
or
adc
repnz
jne
or
mov
or
pusha
cmpsl
fidivrl
xor
or
popa
or
push
or
pop
movsl
or
stc
or
pop
movsl
lods
or
lcall
popa
pop
jne
out
imul
leave
cmp
push
pop
jne
or
and
or
lcall
popa
or
xchg
mov
out
push
bound
out
dec
bound
bound
int
outsl
or
pop
call
out
or
xchg
or
out
out
lock
bound
or
xchg
popa
movsl
or
lcall
or
dec
push
loop
imul
mov
int
or
popa
pop
push
fcomi
push
popa
out
scas
sbb
out
pop
scas
sbb
and
popa
movsl
or
jne
pop
jne
or
xor
int
or
popa
adc
cltd
pop
jne
or
popa
popf
xor
popa
popa
out
or
popa
test
sbb
xor
cmpsl
popa
popa
or
push
mov
jne
mov
out
dec
scas
sbb
int
xchg
pop
push
dec
xor
int
or
popa
adc
cltd
push
and
leave
leave
or
push
or
xor
int
or
popa
adc
cltd
pop
jne
or
popa
fsubrs
out
or
popa
test
popa
popa
popa
fcomps
or
or
jne
or
jne
out
inc
or
popa
or
xor
int
or
popa
adc
cltd
push
and
fsubs
jne
lods
loop
imul
add
jne
or
and
adc
add
jne
or
push
icebp
or
lcall
popa
or
or
pop
call
pop
pop
jne
out
imul
leave
cmp
push
pop
jne
or
lcall
popa
or
or
pop
call
mov
popa
or
lcall
popa
or
or
pop
call
out
or
lcall
popa
or
or
pop
call
or
or
pop
call
pop
jne
out
jns
jne
test
lcall
popa
or
or
pop
call
pop
jne
or
imul
or
imul
push
and
popa
movsl
or
mull
iret
and
repz
bound
loop
imul
bound
jne
lods
mov
imul
bound
loop
imul
leave
cmp
call
imul
add
loop
pop
bound
mov
or
pop
bound
or
call
repz
bound
outsl
or
pop
call
pop
pop
jne
out
mov
bound
or
push
pop
jne
or
pop
outsl
or
pop
call
cmp
bound
or
pop
call
cmpsl
pop
les
pop
call
lcall
jne
shl
lea
bound
jne
or
imul
bound
add
bound
or
call
imul
bound
mov
imul
bound
outsl
or
pop
call
xchg
outsb
out
popa
popa
popa
or
or
pop
call
imul
bound
jne
sbb
loop
pop
bound
push
loop
pop
bound
int
scas
pusha
pop
adc
bound
loop
pop
bound
or
call
pop
pop
bound
pusha
or
bound
adc
bound
pop
pop
jne
or
bound
or
push
pop
jne
or
bound
xor
call
xchg
lock
bound
loop
pop
bound
or
call
imul
fs
fs
popa
popa
popa
pushl
sub
jne
daa
pushl
adc
jne
sub
jne
push
pushl
and
jne
and
jne
adc
pushl
pop
pushl
sbb
jne
and
jne
pushl
hlt
pushl
stc
pushl
dec
pushl
dec
pushl
push
pushl
pusha
pushl
pop
pushl
push
pushl
push
pushl
dec
pushl
inc
pushl
inc
pushl
dec
pushl
pushl
inc
pushl
push
pushl
dec
pushl
inc
pushl
inc
pushl
cmp
jne
xor
pushl
aas
pushl
dec
pushl
ret
push
push
pushl
sbb
jne
sbb
jne
out
pushl
icebp
pushl
lock
repz
cli
pushl
in
pushl
in
pushl
pushl
pushl
pushw
outsl
pushl
scas
pushl
mov
pushl
and
jne
mov
pushl
lods
pushl
mov
jne
and
pushl
std
pushl
push
fcomps
bound
popa
out
lea
bound
bound
and
jae
or
bound
test
popa
popa
popa
fcomps
add
cmpsl
bound
xchg
push
loop
bound
sbb
xchg
bound
add
xor
bound
out
sbb
bound
fcomps
bound
popa
or
bound
ficompl
popa
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
bound
dec
mov
bound
aas
xchg
or
bound
aas
cmp
cmpsb
bound
push
pusha
pop
adc
bound
or
bound
or
bound
repz
aad
popa
popa
popa
or
sahf
bound
add
or
bound
bound
loop
bound
cmpsl
jne
jae
or
bound
repz
int
push
adc
push
bound
pop
loop
bound
or
bound
or
aad
popa
popa
popa
or
sahf
bound
add
or
bound
bound
mov
bound
and
leave
fcoms
lcall
fsubrs
mov
or
jne
or
xchg
imul
push
or
pop
jnp
push
sub
.byte
popa
