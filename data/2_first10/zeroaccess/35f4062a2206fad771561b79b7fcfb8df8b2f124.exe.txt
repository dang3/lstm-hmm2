mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
das
mov
dec
nopl
jmp
mov
ffree
xor
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
mov
rorl
mov
mov
push
fdivp
daa
mov
daa
shlb
andl
out
xor
or
ret
sti
ret
movsl
add
and
push
sbb
jo
inc
cld
call
pop
push
cmpsl
cmp
lcall
fnstsw
sub
jb
push
pop
aaa
sub
lcall
mov
lcall
push
pop
outsb
inc
lcall
int
repnz
xchg
sahf
fs
pushf
jge
cmc
stos
mov
or
cwtl
adc
dec
loope
sub
xor
adc
jb
jl
mov
jg
add
cli
mov
xor
cmp
adc
stos
scas
cmp
xchg
mov
or
pop
pop
sbb
incl
pop
lock
jne
dec
cmp
sbb
mov
scas
arpl
fsubrs
add
shrl
mov
inc
andl
inc
cld
repnz
and
mov
enter
jmp
mov
jne
test
add
or
dec
arpl
icebp
fs
fwait
pop
cs
popf
mov
or
dec
inc
lea
sub
jp
jnp
pop
inc
mov
out
cltd
pop
ds
mov
gs
push
in
pop
cmp
sub
dec
mov
dec
adc
and
lret
sub
dec
cmp
addr16
dec
mov
add
out
sbb
cmp
cltd
lods
jle
lods
je
adc
out
fstl
dec
ror
leave
push
adc
pop
inc
stc
dec
xor
and
popa
cmp
pop
ret
adc
insl
ja
enter
jle
push
mov
inc
pushf
sub
jmp
stos
cltd
cmp
adc
cltd
dec
and
enter
clc
jmp
mov
out
mov
mov
mov
out
mov
mov
ret
out
ret
and
mov
inc
and
imul
pop
enter
adc
and
stos
cs
aad
orl
mov
mov
jmp
lret
fstps
cld
xchg
js
inc
mov
mov
ror
cld
lods
and
mov
mov
pop
inc
inc
pop
or
push
int3
adc
sbb
movsb
lahf
insb
arpl
mov
int
mov
addr16
scas
cld
fdivr
inc
or
jle
dec
push
cmc
inc
add
stc
mov
mov
sub
push
loopne
add
popl
cmc
fidivl
pop
mov
cmp
jg
and
cmp
mov
push
fnstsw
sbb
out
shr
sub
enter
adc
and
fldenv
cwtl
or
cltd
fisubrs
pop
pusha
jae
inc
push
iret
cmpsb
imul
push
out
leave
adcl
sarb
mov
incw
jno
adc
sub
fwait
and
mov
sub
xchg
sub
fstl
mov
movsb
mov
das
mov
dec
sbb
js
mov
movsl
test
or
and
xchg
aaa
in
inc
ret
jb
mov
dec
cmp
sub
adc
sub
in
pop
imul
scas
js
fmul
push
mov
shl
dec
pop
mov
int3
loope
jnp
inc
jns
icebp
shll
testl
ret
dec
add
dec
lods
pop
xor
mov
imul
mov
mov
rorl
inc
xor
cld
lret
inc
xor
add
out
xor
decb
lods
add
pop
cmp
jmp
fisttps
sbb
push
cltd
out
mov
aam
std
rcrb
loop
or
sti
mov
shl
pop
punpckhwd
lea
aad
mov
pusha
imul
mov
inc
insl
sti
push
mov
dec
pop
jns
cmp
pusha
pop
dec
xchg
movhps
popa
push
xchg
sub
add
sub
std
fistps
repz
leave
sti
or
in
rcrb
pop
and
bound
call
xchg
shll
mov
mov
loopw
and
mov
jo
dec
adc
push
inc
imul
fstpt
and
jmp
in
push
cmp
jnp
inc
je
and
mov
pop
leave
in
popa
mov
push
mov
mov
mov
xchg
jecxz
int3
arpl
loopne
jle
nop
and
inc
addr16
dec
dec
jmp
cwtl
xor
and
push
sahf
scas
mov
fs
ds
push
mov
into
aaa
rolb
adc
fcomi
adcb
testb
inc
jge
repnz
mov
sbb
add
sub
sub
xchg
add
clc
loope
mov
mov
icebp
pop
je
and
enter
sub
lods
iret
das
jg
sahf
push
sbb
lea
adc
fldcw
call
sbb
int
sub
cld
addb
add
pop
out
sahf
hlt
loope
jo
sub
and
xlat
add
mov
jg
sbb
or
inc
and
fcompl
rcl
pop
jne
notb
js
or
mov
pop
xchg
xchg
stos
nop
sub
sbb
mov
or
ljmp
push
mov
inc
fsubrl
stos
jecxz
je
popa
xor
imul
inc
orl
xchg
cmp
ljmp
aam
push
push
xchg
in
pop
mov
jb
xor
scas
dec
sbb
test
mov
dec
mov
aad
test
or
call
mov
mov
orb
dec
and
mov
pop
sbb
data16
hlt
inc
jle
push
clc
sbb
leave
fldt
jge
andl
in
leave
and
dec
daa
sbb
jo
fdivr
push
pop
inc
jo
cmp
aas
sbb
add
in
fcompl
jg
jb
mov
push
enter
ljmp
sbb
daa
test
pop
pushf
xchg
lods
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
setge
add
and
cs
lea
sti
ja
jb
out
fwait
mov
sub
inc
dec
dec
ljmp
pop
imul
add
sbb
stos
xor
pop
les
jge
scas
and
mov
add
pop
fldcw
out
in
and
imul
xor
xchg
and
ret
sbb
fisubrs
xchg
ja
mov
fsubs
jnp
adc
push
idivl
sbb
stos
cmp
lret
arpl
dec
mov
push
mov
pop
xchg
nop
pop
pop
fmuls
mov
aam
pop
xor
xchg
jae
addr16
mov
sarb
repnz
dec
or
fimull
pop
inc
inc
out
cmp
push
mov
and
pusha
repnz
stos
jp
and
lods
mov
push
or
adc
or
iret
dec
push
sub
mov
adc
fisttpll
lods
add
aas
iret
scas
in
leave
mov
shlb
ljmp
fidivrl
ret
subb
fisubs
inc
mov
loop
insb
mov
xor
dec
shl
jo
xor
sub
out
out
testb
daa
lea
iret
fistpll
subl
fisubrl
fimuls
jne
pop
pop
outsb
outsl
xchg
shrl
jge
ficompl
xchg
jg
aam
push
imul
daa
xchg
addr16
pop
sub
int3
shrl
jecxz
lods
cmp
or
xchg
cmpsb
cs
cmp
lock
in
push
mov
push
mov
in
inc
test
movsb
test
ljmp
frstor
lods
aaa
inc
add
int3
shr
dec
adc
mov
jb
adc
shrb
pusha
ret
xor
mov
pop
lret
xor
jb
popa
insl
mulb
ficoms
xor
cmp
frstor
popf
arpl
rolb
and
icebp
pop
and
rcr
outsl
dec
push
jne
cld
fsubrl
adc
fisttps
xchg
lret
mov
lods
mul
pop
movsb
mov
adc
sub
push
and
cmp
inc
fnstcw
shll
sahf
adc
fsubrl
ss
cmp
popf
cld
mov
loope
jl
inc
pop
lret
xor
movl
rep
leave
sub
mov
scas
out
movsb
mov
dec
mov
adcl
and
out
cmp
adc
jo
in
shll
or
addb
ret
std
pop
movsb
xlat
mov
leave
je
xchg
jae
in
and
xchg
jg
test
pushf
fwait
and
push
inc
jno
stos
mov
mov
cmp
mov
ret
jg
mov
jae
aad
enter
stos
insb
push
cmpb
xchg
ljmp
addb
adcl
and
add
jle
shrb
dec
mov
test
inc
in
lock
out
sub
and
pop
or
add
inc
jo
call
fdivl
jno
lret
aam
js
jne
jns
sahf
or
push
test
outsb
pusha
xorl
pop
aaa
sbb
add
test
pushf
push
xorb
adc
aad
pop
repnz
dec
movsb
xchg
cmp
loopne
sti
daa
hlt
push
imul
inc
test
jg,pn
into
outsb
xchg
push
repnz
push
gs
ja
jbe
sub
add
cmc
gs
das
cs
aas
loopne
and
cmpsb
xchg
shlb
pop
mov
sti
mov
fstpl
adc
xor
add
sbb
push
jecxz
push
push
leave
push
mov
and
roll
mov
fldt
cli
popf
pop
pop
adc
testb
cmp
nop
push
fdivs
mov
mov
dec
inc
inc
popl
mov
push
xchg
or
xchg
and
in
ds
push
jne
add
fs
or
imul
cmp
out
or
mov
xchg
inc
mov
repz
jnp
aaa
pop
insb
xorl
shr
jle
fucomi
andl
shll
push
fldt
push
xchg
and
dec
push
sub
push
and
xchg
in
pop
jno
pop
and
test
xchg
addr16
cld
scas
push
mov
daa
nop
and
xlat
lret
pop
cmpsl
add
pushw
fdivrs
mov
pop
or
sub
shll
jp
mov
out
mov
std
aaa
xchg
lock
push
test
and
mov
jg
ss
or
out
movsb
or
shr
mov
dec
add
xchg
sti
into
pusha
push
outsl
dec
stos
push
dec
sub
mov
popf
xchg
or
in
daa
push
add
fdivs
ljmp
movsl
push
ss
add
mov
ret
cwtl
pusha
mov
lods
xchg
mov
push
inc
mov
cli
in
mov
jle
xor
js
mov
into
fwait
sbb
fnstenv
xor
out
inc
fwait
cltd
pushf
syscall
out
mov
cltd
movb
sbb
xlat
add
aad
fsts
or
clc
inc
jne
dec
add
sbb
movsb
jg
cwtl
pop
push
fidivrl
fs
int3
push
inc
push
cmp
lods
dec
and
ljmp
pop
add
jecxz
std
fs
rorb
popf
mov
ljmp
mov
arpl
mov
jne
js
jne
xor
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
paddq
pop
xor
adc
imul
or
dec
mov
mov
aad
xlat
cmc
mov
nop
call
out
jl
daa
das
out
mov
xor
jb
hlt
sub
test
mov
mov
jbe
xchg
jecxz
sar
or
mov
xchg
sarb
movsl
mov
pop
test
jno
int3
inc
ja
mov
dec
andb
jb
mov
adc
pusha
les
ss
pop
and
popf
clc
int
jns
cmc
icebp
and
adc
pop
into
lret
dec
shrl
roll
sub
call
xor
mov
adc
xchg
xchg
add
stc
sbb
loop
gs
mov
dec
mov
mov
xlat
in
dec
inc
arpl
mov
enter
loop
pop
ffree
fwait
jl
or
fstl
jbe
mov
sbb
xlat
icebp
ffreep
xchg
pop
pop
sub
add
inc
addl
push
xor
in
push
mov
cmp
mov
push
dec
popf
lret
enter
add
mov
pop
popa
cmp
out
adc
jnp
xchg
rcr
inc
mov
mov
mov
dec
jle
mov
mov
push
inc
shrl
sub
xor
add
fwait
sub
out
or
popa
sub
imul
lods
in
in
pop
popa
das
sub
call
sub
dec
stos
or
sub
sub
shrl
sahf
mov
dec
les
in
test
add
dec
outsl
loope
dec
or
adc
divb
pop
sub
test
aas
mov
adc
fs
push
lahf
jae
dec
push
in
add
or
ss
je
add
enter
das
cmpsl
fisttpl
mov
mov
mov
adc
xchg
gs
je
jns
outsl
subb
lea
aad
inc
xorl
pop
xchg
mov
fucomip
into
sbb
mov
inc
mov
sbb
test
sarl
mov
shr
les
pop
aad
scas
or
es
cmp
ror
out
add
sub
int
mov
mov
cwtl
sub
repnz
outsl
adc
and
js
fistps
jge
imul
lods
int
jecxz
jb
mov
enter
imul
ss
stos
sbb
das
sbb
or
add
movsb
in
cmp
add
fwait
inc
adc
mov
loopne
daa
inc
sub
pop
sub
adcl
idivl
subl
lahf
aad
inc
push
out
sub
inc
ja
cmpb
pop
push
pop
je
mov
mov
or
or
fldl
into
mov
jge
push
fldenv
xchg
sbb
leave
mov
jae
mov
frstor
lods
pop
ja
imul
dec
jne
push
testl
pop
pop
enter
mov
jnp
pusha
jmp
mov
inc
pop
pop
and
jmp
xchg
fsubp
lcall
jno
icebp
daa
cmp
sbbl
dec
cld
andb
out
fiadds
mov
lods
stc
adc
sbb
mov
cmp
sbb
mov
adc
jp
fstpl
loopne
inc
sbbl
out
adc
repnz
adc
std
mov
and
pop
imul
aam
divl
scas
jecxz
push
pop
inc
mov
out
imul
sbb
sub
insb
cmp
and
push
adc
int3
pop
xor
pop
fcmovu
das
lods
dec
and
and
mov
push
sub
inc
sbb
jge
cmp
xorb
push
arpl
inc
push
push
cwtl
pop
fsts
sti
ss
jmp
mov
sub
ficompl
sub
pusha
and
cmp
aad
mov
imul
sbb
push
xlat
cli
mov
jecxz
js
or
adc
mov
out
int3
cmp
push
sar
mov
ja
in
jno
ja
push
cwtl
mov
sub
sbb
pop
imull
out
out
movsb
addb
inc
ret
imul
aaa
fwait
push
jle
sub
dec
xor
lcall
sub
out
movsl
jo
push
das
pop
xchg
dec
adc
mov
adc
into
leave
mov
ret
loop
aaa
mov
pop
xchg
dec
shr
or
mov
inc
in
pusha
testb
mov
jne
lods
daa
call
xor
stos
popl
jmp
jne
iret
stc
inc
xor
dec
adc
dec
imul
outsb
cmp
mov
imul
ja
jmp
jb
jno
repnz
or
imul
push
out
lret
cmp
jle
cli
inc
push
mov
shll
in
push
pop
lods
in
popf
pop
or
xor
jne
jo
mov
inc
pop
mov
cmpl
out
fisttpl
inc
jg
pop
jbe
data16
pop
mov
jecxz
repz
dec
int
in
add
cld
cli
push
gs
xor
inc
and
push
imul
std
mov
insb
loopne
push
fcoms
or
dec
sub
push
xlat
pusha
cmp
or
loope
pop
xchg
inc
and
mov
inc
call
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
mov
mov
add
paddw
pop
ret
cwtl
mov
je
cwtl
lods
mov
cmp
push
and
mov
enter
flds
outsb
lahf
scas
mov
mov
inc
nop
movsb
cmp
mov
pop
cs
paddsw
daa
gs
jg
mov
jnp
or
ljmp
xchg
mov
fdivrs
incb
or
ljmp
sti
in
lret
mov
icebp
insl
lods
out
fadds
xchg
jnp
push
fs
pop
add
rorl
loope
outsl
mov
cld
mov
push
movsl
dec
push
insb
xor
jnp
mov
je
push
lret
cwtl
jno
xchg
xchg
nop
adc
sarl
leave
addb
xchg
rcr
lcall
jl
sti
leave
not
inc
dec
add
jnp
inc
add
sbb
xor
in
test
outsl
outsb
loop
sahf
xchg
or
loopne
and
aaa
dec
push
mov
jmp
push
mov
xchg
lds
and
arpl
inc
and
rcrb
nop
sbb
cmp
push
jmp
lcall
push
sbb
inc
sub
cmp
pop
mov
mov
sub
fnsave
rclb
inc
cmpsb
andl
mov
mov
sbb
repnz
pop
push
adc
push
shlb
mov
pop
test
push
xchg
rolw
pop
out
add
pop
cs
lock
jbe
imul
je
cli
and
cmp
sub
andl
mov
stos
out
pop
jle
lret
xchg
xchg
or
out
inc
ret
inc
out
mov
rcl
xor
xor
stc
cwtl
mov
in
insb
in
lds
iret
test
mul
pop
lret
add
loopne
and
scas
jns
sbb
dec
sub
adc
xchg
clc
stc
cmp
and
popa
sub
adc
shl
pop
cmp
setp
jns
cwtl
sub
test
jle
aam
cwtl
int
call
daa
and
lock
testb
sbb
push
cmpsl
fcomps
call
xor
scas
pushl
dec
sbb
xor
mov
test
movl
push
loop
xor
cmp
cmc
sub
push
aas
sbb
pop
hlt
loopne
icebp
pushf
rcrl
xor
jns
xchg
stos
lods
sbb
inc
out
pusha
inc
xor
cmp
push
jge
rolb
repz
mov
sahf
push
loope
in
das
adc
and
roll
push
pop
push
ja
gs
sbb
add
bnd
xchg
and
jecxz
fsub
jp
xchg
je
inc
gs
jbe
lcall
dec
jl
xchg
popa
xchg
xor
jns
lea
rcrl
cmpb
sarb
call
xchg
enter
sub
aad
in
mov
sub
inc
in
xchg
ljmp
mov
ljmp
xchg
push
xor
and
inc
in
add
push
stc
pop
xchg
xchg
sahf
mov
lea
inc
inc
shlb
cmp
fidivl
push
xchg
icebp
hlt
test
push
mov
add
out
jo
imul
lods
mov
or
mov
mov
icebp
pop
std
inc
sbb
mov
sbbl
ret
cmp
mov
fcoml
fstpt
adc
jl
xchg
adc
push
je
xor
call
lds
scas
mov
loopne
jmp
jle
pusha
imulb
adc
mov
es
stc
xchg
xor
and
subl
xlat
xor
ficoml
test
icebp
inc
pop
stos
jecxz
and
adc
adc
jp
les
push
lock
test
jecxz
fisttpl
std
dec
xchg
mov
mov
mov
call
shll
xacquire
add
mov
fucomi
jo
dec
jnp
mov
inc
mov
insb
stos
scas
cmp
adc
or
pop
or
jp
adc
fistpl
cltd
add
lock
and
pop
inc
clc
test
xchg
mov
sbb
daa
pop
test
push
mov
xchg
hlt
lods
adc
jno
and
mov
mov
addl
repnz
jne
mov
xor
push
sbb
mov
adc
ret
and
lods
jg
stc
lock
adc
mov
sub
bound
fdivrl
jno
and
and
mov
cmpsb
jmp
pop
movsl
scas
mov
push
sti
sahf
sub
mov
fcom
test
push
xchg
adc
insb
sub
test
popf
mov
inc
mov
add
pop
push
push
and
mov
stos
add
les
lods
in
or
cmp
or
fstp
push
dec
push
dec
shll
lds
pop
lds
mov
adc
cmp
lahf
inc
fcomip
mov
js
in
out
lock
loop
push
jmp
movsb
mov
addr16
cmc
cld
adc
fs
jno
enter
cmp
aas
mov
mov
ret
jbe
dec
mov
jmp
jp
xlat
pop
in
cmp
mov
rorb
push
inc
add
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
faddp
cmp
pinsrw
jnp
cld
mov
ret
xor
pusha
push
addr16
or
lcall
popa
sbb
dec
xor
fcmovnu
push
or
out
aaa
and
mov
inc
pop
bound
pop
mov
ja
into
incb
popw
popf
xor
inc
nop
cmpsb
jmp
or
pushf
icebp
daa
push
mov
test
jo
clc
lahf
imul
xor
cmc
stos
xchg
dec
mov
jp
push
jno
mov
inc
lret
push
mov
or
js
hlt
cpuid
sub
xchg
test
sub
aam
je
mov
ljmp
xor
pusha
cmp
in
adc
mov
push
stc
xor
xchg
sub
stc
xchg
cmpsb
sub
jnp
pushf
repnz
jecxz
mov
sbb
jp
addr16
repnz
inc
pop
dec
xchg
out
bound
dec
andl
adc
adc
pop
rol
outsl
jbe
lcall
outsb
fldenv
inc
int3
or
out
data16
fstps
mov
out
popf
xor
aam
mov
adc
pop
adc
jge
jle
push
sub
xor
in
fcoms
lods
pop
pop
jecxz
iret
std
repz
pop
xchg
push
dec
sbb
dec
arpl
jge
push
jle
je
mov
shlb
rclb
xchg
lcall
les
je
inc
fisttpl
clc
cltd
shlb
test
cmp
xchg
xchg
call
push
andb
sub
movsb
lret
or
pushf
aas
pop
mulb
out
cwtl
mov
loop
xor
shl
iret
enter
mov
popa
sbb
push
scas
pusha
shl
data16
dec
jb
jge
xor
and
sarl
fadds
pop
stos
pop
and
mov
imull
sub
sub
pop
jne
push
and
hlt
lock
add
loope
repnz
cmp
mov
mov
adc
ds
movsl
pushf
mov
cmp
push
in
jne
mov
xchg
inc
outsb
paddd
rcrl
xchg
pop
sub
mov
sub
daa
xlat
jo
addr16
xor
sbb
sbb
icebp
add
jnp
js
test
or
mov
mov
popa
inc
repnz
out
mov
test
enter
mov
jecxz
push
mov
fisttpl
test
test
push
ficoms
mov
idivb
or
mov
popf
cmp
dec
test
xchg
test
or
inc
nop
xor
shrb
pop
hlt
mov
pusha
iret
adc
stc
nop
mov
jg
mov
xor
aaa
ja
sub
and
ror
push
mov
mov
ljmp
sahf
push
hlt
sbb
loopne
and
les
xorb
and
pop
sarb
mov
rcrb
fdivrl
into
nop
push
adcb
sub
xor
or
or
in
cmp
sbb
jbe
cltd
gs
sub
rcr
fcmovnu
push
clc
sub
xchg
mov
outsb
pop
lahf
cwtl
inc
orb
mov
ja
xor
adc
dec
sbbb
es
mov
pop
ss
adc
shrb
mov
xorb
in
inc
fstpl
mov
mov
or
addr16
test
jnp
aam
cmc
mov
jp
scas
cs
lea
outsl
cmp
lods
jp
mov
jbe
movb
or
xchg
mov
test
test
scas
js
push
mov
mov
loop
jp
cmp
rorl
aad
lods
ret
inc
mov
mov
sub
and
push
mov
mov
addb
add
stos
sbb
les
and
jnp
mov
add
mov
lret
push
push
jo
stos
mov
push
imul
mul
inc
cmp
arpl
mov
and
mov
stos
push
in
fsts
fsts
movsl
popf
and
jo
ds
test
les
mov
xor
push
outsl
insl
pop
mov
fadds
test
popf
jo
stos
jmp
in
cmp
sbb
fucom
pop
mov
lret
adc
sarl
mov
rorl
fwait
xor
and
push
mov
fst
js
inc
cmp
add
aas
inc
and
xor
add
bnd
and
mov
mov
inc
pop
scas
mov
imul
push
outsb
xchg
fimuls
cmpsl
lret
mov
sti
out
mov
out
sbb
ss
mov
cmp
dec
cmpsl
daa
inc
cmp
pop
js
cmp
add
loope
nop
fwait
lods
scas
filds
fldt
andb
jmp
jle
iret
ret
test
pcmpgtb
lea
imul
jmp
or
sbb
cmp
js
outsb
mov
xorb
mov
fstps
xchg
mov
std
aad
pop
add
test
rorl
iret
clc
jge
int
mov
cmp
ja
dec
hlt
jl
jo
les
bound
int
cmp
bound
mov
mov
and
inc
stos
inc
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
in
in
rorb
pinsrw
int3
xor
xchg
aad
sub
mov
inc
fsubrs
repnz
mov
xchg
dec
out
test
test
xor
mov
inc
loop
and
bound
jmp
mov
sbb
jmp
fisubl
fwait
jg
test
gs
repz
repz
dec
xorl
xor
mov
popa
into
mov
test
or
sub
and
push
jg
add
inc
pop
ss
data16
icebp
add
addl
loop
jne
leave
sub
mov
pusha
ds
lcall
fdivrs
cmp
mov
mov
insl
divl
jmp
arpl
adc
arpl
out
ret
jno
jmp
test
adc
jo
lea
lret
nop
inc
aad
rclb
fidivrs
mov
adc
sub
into
lret
int3
add
mov
aad
loope
fs
mov
pushf
xchg
and
xor
and
and
jns
xor
enter
push
pop
cmp
out
xchg
sbb
push
dec
or
cmpsb
in
or
call
mov
xor
ret
aas
sahf
mull
shll
les
std
in
lret
xchg
lock
and
cli
jl
xchg
dec
fsub
repz
mov
es
mov
cmp
adc
push
push
adc
xchg
push
sub
sbb
adc
jg
jae
mov
sub
or
ds
mov
hlt
ret
fstps
aas
ss
inc
lods
jecxz,pn
xchg
push
js
fnstsw
dec
mov
dec
sarl
mov
xchg
out
popa
add
and
addr16
lret
test
mov
inc
push
fsubrp
push
lea
popa
cmp
imul
xor
shl
fld
inc
xchg
jecxz
lods
sbb
stc
mov
les
ds
push
repz
add
sbb
pop
mov
pop
jb
pop
gs
pop
sbb
ja
dec
sbb
aas
mov
fwait
xabort
psrlq
outsl
push
or
mov
mov
push
lock
lea
mov
pusha
sub
enter
fldt
mov
leavew
xchg
pminub
das
dec
lret
dec
adc
jo
lea
inc
adc
mov
imulb
mov
jnp
mov
adc
push
stc
lcall
test
es
mov
sub
repz
out
fnstcw
fistpll
cmp
xchg
dec
addl
in
imul
mov
movsl
add
sub
push
sub
xor
mov
rcll
push
pusha
jl
mov
or
test
lcall
adc
rolb
jp
or
jge
popl
sbb
or
je
sarl
sbb
mov
jo
push
push
imull
push
push
jg
push
rcrl
xorl
or
mov
pop
aam
push
push
ljmp
adc
adc
push
jne
mov
push
sub
push
jp
cmp
lret
cmp
dec
mov
out
arpl
inc
fildl
jnp
or
sbb
dec
test
sbb
mov
fdivs
sub
pop
and
shlb
sbb
cmp
xchg
in
fsubrs
or
lods
mov
pusha
into
cmp
das
ret
leave
out
cmpsb
cmp
jo
popf
in
jle
lcall
ret
outsb
mov
or
je
push
pop
jo
dec
add
dec
dec
mov
dec
jge
push
and
aaa
leave
jp
jge
or
mov
push
popf
push
lods
insb
add
mov
pop
adc
pop
faddp
lcall
dec
rolb
in
cltd
test
imul
or
xor
mov
fwait
adc
cwtl
dec
push
xchg
xor
push
loopne
xchg
mov
lods
insl
push
adc
add
sbb
addb
pop
xchg
fistpl
sarl
call
mov
popf
pop
rcrb
dec
pop
jae
sub
out
aad
lods
pop
inc
push
dec
push
lea
and
je
lds
sub
cmp
push
sub
cmp
mov
inc
arpl
mov
jno
mov
cmp
mov
mov
sub
xor
adc
fs
fadds
imul
sub
std
jp
cmc
lods
mov
mov
insb
das
cmp
xchg
ljmp
out
inc
xor
xchg
or
loop
mov
mov
popl
clc
push
ret
testb
lods
rcrb
scas
push
add
and
sbb
mov
bound
jbe
dec
repz
xchg
jp
jl
outsl
mov
clc
ss
xchg
jnp
out
lds
xchg
jl
ljmp
pop
mov
sub
lock
mov
daa
jae
push
mov
push
fwait
jbe
mov
or
mov
and
cmpsb
cmp
repz
xchg
aad
adc
clc
rcrb
idivl
sarb
popf
lcall
lds
imull
aas
cmp
push
adc
mov
add
ret
loopne
scas
ret
add
ss
inc
fmull
ret
aam
jne
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
push
mov
pinsrw
femms
outsl
fcoml
arpl
mov
stc
les
fbld
lock
dec
sub
mov
pop
call
stos
rorl
pop
out
in
sti
insl
loop
pop
and
ja
repnz
js
gs
clc
repz
fwait
popa
xor
pop
movsb
je
orb
fistpl
call
cmp
test
mov
testl
bound
fucomp
cmp
movsl
or
gs
sahf
dec
mov
in
mov
inc
mov
jl
in
sub
mov
aas
push
push
adc
dec
xor
jnp
pop
rorl
fcomip
pushf
in
jbe
dec
stc
jg
imul
or
xchg
sub
lds
mov
ucomiss
xchg
lock
add
or
movsb
or
xchg
lret
jae
ds
or
sub
mov
jecxz
sub
adc
rol
mov
xchg
mov
mov
mov
aaa
xor
test
xor
mov
call
fmull
push
aaa
mov
sbb
sbb
das
pop
pop
push
lds
mov
cli
lods
push
pop
out
pop
sbb
inc
mov
jmp
cmp
out
pop
mov
adc
sbb
sub
lds
xchg
ja
xor
jb
xchg
lods
jbe
mov
loopne
daa
jl
stos
mov
mov
cwtl
cltd
and
lret
jnp
das
xorb
addr16
xor
jp
xchg
insb
pop
cmp
testb
xor
pop
nop
inc
rcr
loop
mov
ret
mov
inc
fdivs
sub
repnz
movsb
inc
inc
mov
js
out
stc
mov
sbb
adc
sbb
cmpsb
fcmovb
sub
mov
jo
lret
jo
sub
pop
mov
je
xor
scas
popf
imul
scas
cmp
xchg
and
inc
insl
int3
les
and
into
xchg
mov
pop
std
sub
sbb
popa
ror
fcoml
sub
push
adc
mov
addr16
loop
fsubrs
aas
test
cltd
push
insl
dec
mov
add
pop
bound
fs
int3
adc
push
or
pop
cmp
push
rcl
mov
add
push
push
add
push
and
pop
mov
jae
shr
push
jl
pop
adc
mov
adc
jl
adc
ds
test
stos
mov
pusha
mov
nop
xor
inc
in
nop
bound
mov
dec
ret
sub
mov
or
in
and
mov
fsubrs
xor
add
ss
repnz
andps
xchg
pop
or
cmp
mov
dec
adc
int3
or
jl
jbe
imul
sarl
mov
and
adc
sbb
ficoms
jb
repz
test
xlat
sbb
ljmp
sbb
sub
ss
dec
xor
pop
ret
out
pop
out
fstl
push
test
jg
pop
mov
jle
sbb
std
shlb
ret
call
inc
cmpsb
and
dec
aam
lock
addl
mov
imul
mov
or
imul
pop
cmpsl
adc
jge
pop
ds
jnp,pt
lea
lret
xor
push
imul
in
rcrb
or
pop
mov
mov
rolb
mov
cmp
divl
mov
jle
popa
add
aaa
outsb
out
leave
add
addb
push
lret
push
stos
or
push
mov
ret
mov
cmp
aas
nop
test
pushf
cmc
test
aas
sub
cmp
or
cmpb
fstps
iret
xchg
sub
mov
cmp
in
jae
cmpb
inc
mov
scas
notb
jp
fldenv
ds
mov
dec
push
loopne
jns
into
dec
icebp
imul
xor
aam
fdivr
mov
push
push
scas
cmp
les
jno
ljmp
daa
xor
cwtl
repz
mov
adc
popa
ljmp
lock
adc
jl
subl
call
rolb
data16
insl
pop
das
incl
or
dec
mov
test
jne
test
out
mov
adc
cmp
pop
jnp
fs
xchg
pop
sub
jne
push
mov
icebp
pushf
cmp
outsl
cld
loopne
iret
inc
sub
stos
lret
sbb
or
loopne
push
xor
mov
bound
mov
test
sbb
mov
pop
cltd
jo
push
iret
int3
loopne
mov
bswap
out
mov
or
pusha
ds
ret
lds
pusha
xor
add
add
test
in
in
mov
lock
mov
adc
inc
dec
loopne
arpl
mov
cld
stc
out
sahf
push
mov
out
xchg
lahf
movsw
pop
xchg
xchg
mov
adc
test
inc
mov
sahf
fidivl
lods
pop
jp
push
sbb
jecxz
jle
mov
in
xchg
fs
xor
mov
lret
or
rorb
lcall
xchg
inc
sbb
mov
das
mov
scas
fcoml
ficomps
mov
sbb
div
out
addr16
mov
ljmp
out
mov
out
inc
and
pushf
dec
popf
mov
jbe
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
loop
into
xchg
pinsrw
movaps
cmp
pushf
pop
pop
pop
jle
lret
lcall
sub
xchg
jl
fbld
jle
sub
mov
dec
rorl
sbb
dec
sahf
push
cmp
adc
and
lods
loopne
jo
call
std
lds
jbe
aaa
jmp
stos
mov
mov
fs
popf
sbb
aas
push
mov
mov
jmp
adc
inc
and
cmp
cmp
cs
mov
out
mov
cmp
jnp
jle
stos
xor
adc
test
and
jb
xchg
adc
jle
fndisi(8087
xchg
in
lds
inc
add
mov
icebp
sub
enter
cld
in
sahf
adc
sbb
sbb
inc
std
aad
push
sub
out
daa
pop
pop
or
js
push
out
dec
or
sbb
movsb
subl
and
push
push
push
fstpt
popf
add
adc
xor
jl
xor
fdivrl
pop
sub
add
and
js
dec
cli
sub
push
addr16
xchg
stos
scas
pop
mov
push
push
or
repz
push
mov
pop
jns
cs
xor
inc
cltd
inc
xlat
mov
lcall
roll
sub
call
inc
and
push
mov
mov
arpl
fs
jns
icebp
jmp
adc
lret
test
pop
pushf
mov
jnp
push
sbb
xchg
sub
movsl
insl
pop
inc
push
sub
jl
js
jge
xor
out
push
inc
loopne
cmp
dec
xor
add
mov
out
bound
scas
lds
mov
or
pop
subl
popf
and
add
cmpl
les
loop
ja
nop
xor
loope
shlb
std
popl
ds
or
xchg
mov
mov
dec
je
inc
dec
mov
test
lea
xchg
pop
mov
pushf
mov
cmpsb
cmp
fsubrs
mov
adc
lods
push
lods
fistpl
sbb
idiv
fnsave
mov
fsubs
faddp
cmp
inc
inc
push
mov
pop
test
push
repz
mov
insl
icebp
mov
loope
mov
cmp
and
sbb
sbb
cmp
outsl
hlt
mov
adc
jns
jo
xchg
cwtl
aam
pop
testb
sbb
stos
scas
mov
cmpsl
and
call
ds
mov
xor
and
mov
pop
inc
fs
and
notb
cmp
lcall
out
adcb
cmp
push
add
bound
js
jno
xchg
test
inc
adc
out
in
loope
nop
or
adc
inc
mov
mov
rcrb
mov
test
pop
cmp
adc
in
or
mov
imull
ja
pop
xchg
dec
rcll
in
jo
mov
push
add
jae
out
and
dec
push
out
mov
xchg
push
pop
inc
out
dec
inc
mov
and
xchg
lock
cli
mov
xchg
cmc
cltd
incb
jg
xchg
in
mov
scas
lcall
jle
inc
gs
lahf
leave
cmp
lock
jo
pop
dec
pop
mov
lods
mov
fisttps
sti
loop
aaa
vpmaxsw
jae
or
sar
test
bound
jp
xor
jl
adc
pop
jecxz
cmp
sbb
fisubs
test
fidivrs
pop
mov
adc
sbb
popl
inc
aad
loope
cli
dec
repz
jecxz
lcall
push
xchg
rcl
lahf
dec
test
sbb
adc
push
inc
notl
pop
xchg
cmp
push
xor
stos
and
jnp
sahf
or
lret
iret
and
into
push
mov
xchg
mov
jge
mov
or
jbe
loopne
dec
cmp
sbb
fs
cltd
fdivrp
movl
pop
dec
lcall
mov
sarb
ljmp
dec
daa
test
xor
fimull
pop
hlt
lock
cmovo
scas
dec
les
fdiv
adc
loopne
test
shrb
mov
or
xor
mov
arpl
sub
testl
jg
insb
shll
int
adc
out
roll
dec
mov
mov
jg
outsb
js
ds
mov
mov
loope
cmp
sbb
and
jmp
push
scas
adc
mov
rorb
fcomps
sbb
int3
or
adc
jnp
xchg
fbstp
dec
mov
jbe
popf
stos
or
push
scas
test
cmpsl
loope
add
rcrb
cltd
sub
xor
movsl
pop
lret
cmp
das
sub
xchg
inc
xor
adc
jg
push
mov
repnz
adc
nop
mov
cmp
add
addr16
data16
xchg
lcall
mov
fs
xor
das
xchg
call
ficoms
stos
repz
mov
jg
fmuls
fst
pusha
js
xor
xlat
pop
or
dec
push
adc
ret
xor
cmpsb
ss
pop
jae
in
xor
or
inc
cmp
inc
or
xchg
jl
jnp
lea
arpl
inc
jnp
adc
loop
jecxz
outsl
fsub
fcmovbe
mov
or
in
aas
mov
xor
sub
jae
mov
push
mov
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
adc
loopne
or
cmpps
stos
rorl
sub
or
outsl
mov
inc
jb
aad
jmp
cmpl
xchg
mov
adc
pop
pop
adc
sub
cld
lods
test
xchg
dec
adc
ds
push
les
std
rcrl
outsl
jae
stos
movsb
xor
and
sar
inc
in
rcl
gs
add
ret
daa
xor
rcl
outsl
push
cwtl
int3
or
push
scas
imul
pop
mov
test
popa
jp
aaa
cwtl
adc
push
outsb
enter
dec
xchg
xchg
sub
adcb
jnp
mov
aam
sub
sub
decb
sbb
push
push
pop
mov
jnp
rcrb
sbb
mov
mov
mov
jecxz
cmpsl
out
mov
cmc
sub
mov
cli
ss
push
xchg
xchg
fwait
jne
xchg
psraw
loope
mov
int3
xor
ss
cmp
cmp
ja
pop
jp
mov
pop
xchg
adc
jl
sbb
fsts
mov
sti
cmp
inc
cltd
in
jp
enter
mov
push
xor
inc
in
cli
cmc
fwait
loopne
add
loope
pop
stos
jge
aas
pop
mov
sbbb
cmpsb
in
in
rorb
and
ja
fildll
mov
fsubrl
push
adc
cs
out
stc
add
mov
dec
mov
ret
sbb
sbb
call
or
push
mov
pop
call
jmp
lret
mov
repz
push
lret
dec
mov
inc
or
lds
and
shlb
inc
sahf
inc
mov
test
sbb
mov
mov
jbe
addr16
popa
xchg
imul
test
inc
lds
fstpl
cmpsl
fmul
popa
imul
adc
insl
dec
cltd
mov
subl
and
jmp
icebp
xchg
decb
ffree
insb
aas
mov
je
jae
push
lahf
rclb
add
mov
popf
mov
sahf
lcall
pushf
in
mov
fwait
ljmp
adc
mov
mov
testl
test
jp
xor
ret
shl
movsb
xchg
jns
cld
or
daa
cmp
notl
inc
adc
dec
add
mov
test
inc
mov
aad
and
mov
mov
aas
mov
into
mov
arpl
xchg
or
mov
add
adc
fldt
imul
hlt
sbb
push
sbb
push
in
jne,pt
pop
rcr
mov
cmc
or
gs
lea
inc
cmpsb
pushf
pop
adc
jbe
sbbl
xchg
xchg
call
fdivrp
inc
movsb
push
mov
sbb
push
jbe
iret
out
fdivl
ss
mov
clc
and
sub
js
push
aad
out
jle
jno
ds
jp
ds
aas
adc
push
sbbl
cld
cmpsb
sbb
push
lods
lods
xchg
mov
cld
adc
dec
pusha
addr16
push
xchg
popa
jp
outsb
in
cmp
insb
inc
fwait
lahf
cltd
arpl
into
sbb
xor
jmp
add
in
jecxz
jl
sub
inc
fwait
push
mov
xchg
aad
fiadds
lea
cmc
xchg
mov
push
jnp
adc
mov
js
ja
mov
gs
mov
push
xchg
stos
es
aam
and
fdivrs
or
repnz
push
push
sbb
pop
imul
mov
sbb
adc
dec
stc
aad
pusha
or
insb
jbe
ret
repnz
and
or
into
cmp
xchg
and
sbb
jno
add
test
xor
stos
mov
repnz
ret
fincstp
mov
cli
add
adc
inc
pop
push
and
daa
lahf
aaa
cmp
in
jle
movsl
sub
xchg
dec
jge,pn
push
cmpsb
loopne
fistps
leave
xor
loop
cmpb
notl
cwtl
xor
lock
jb
cwtl
dec
mov
lret
mov
out
out
pop
jle
subb
dec
outsl
shr
xor
sub
mov
das
xor
adc
ja
xchg
sbb
fsubrs
int3
lea
dec
and
cld
dec
popf
sub
xor
xor
mov
mov
and
cmc
sub
cmpsl
add
push
push
mov
mov
gs
imul
dec
das
outsb
enter
adc
loopne
mov
sarb
lcall
pushf
sbb
jo
mov
mov
repnz
jle
je
and
cwtl
sbbb
mov
cmp
mov
and
or
pusha
test
in
jne
addr16
dec
mov
xchg
fadds
adc
xchg
add
fwait
pop
in
jo
scas
ja
add
mov
xchg
jns
fwait
mov
mov
bound
test
push
mov
mov
mov
sti
addb
xchg
test
mov
loope
dec
dec
faddl
mov
mov
sub
mov
bound
mov
sbb
push
push
addps
or
mov
test
inc
loop
mov
mov
cmp
ret
mov
xor
lret
jp
rorl
mov
icebp
or
xchg
test
or
test
iret
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
pushf
sbb
push
mov
add
pcmpgtb
and
sbb
jg
push
push
adc
mov
add
cmp
push
ja
cltd
sti
sub
mov
mov
jp
add
xchg
sbb
xor
inc
stos
cmp
ss
push
fs
xlat
idiv
jge
ds
lods
and
shlb
fadds
jo
xor
ret
xor
sti
push
es
lds
sti
and
jb
test
call
add
mov
imul
imul
adc
mov
sub
push
adc
icebp
inc
cmp
cmpsl
xchg
and
ja
xchg
std
add
pop
into
jns,pn
addr16
push
cmp
jo
mov
jo
or
lea
clc
mov
pop
jmp
testb
xor
pop
xchg
inc
test
stos
add
lret
ss
mov
mov
popf
in
jmp
mov
int
aas
jge
push
inc
cmp
cmp
inc
lea
xchg
loope
mov
fs
loope
inc
lret
jg
dec
cmp
dec
mov
daa
jnp
or
faddl
dec
mov
pop
mov
outsl
or
in
mov
lods
ret
xor
push
dec
push
xchg
inc
xchg
aaa
fldl
lds
mov
dec
aad
sub
xchg
movsl
fwait
xor
leave
push
pop
push
push
jns
call
pop
mov
pop
pop
loopne
inc
mov
sub
add
jge
add
cli
pop
xchg
xor
jo
lcall
mov
les
jno
pop
stos
pop
fsubp
mov
adc
dec
sbb
fldcw
jle
cmp
fstpt
out
out
or
data16
mov
scas
iret
cltd
dec
int
hlt
pushf
repz
testl
mov
push
sti
fs
push
scas
out
imul
push
cld
getsec
mov
aaa
imul
test
lret
sahf
lods
dec
rol
data16
dec
roll
jnp
fxch
rorb
xor
jl
incl
scas
adc
arpl
loope
lret
int
mov
sbb
jmp
mov
inc
sbb
jne
roll
mov
stos
fdivrs
lods
pop
xchg
jne
xor
dec
out
mov
pop
jge
sbb
jmp
inc
pop
cmp
mov
mov
rcr
dec
pop
pop
pop
leave
stos
clc
andb
push
loopne
out
push
les
loope
jge
lcall
hlt
xchg
popa
sub
mov
jmp
fildl
in
mov
and
inc
adc
or
sbb
ret
fldcw
sahf
jno
pop
in
movb
inc
bound
repnz
or
or
jne
inc
imul
push
pop
es
loope
mov
je
enter
fcmovne
scas
je
mov
aam
jae
mov
adc
sbb
mov
push
js
sbb
pop
cwtl
lret
inc
mov
push
rorb
loope
mov
lock
jmp
mov
std
test
or
mov
jb
sbbl
in
mov
aaa
test
adc
scas
les
in
out
addb
testb
push
xlat
jl
clc
jbe
mov
enter
ret
push
aad
xor
lock
pop
push
cmp
stos
pusha
dec
xor
sub
push
cmp
mov
xor
inc
ljmp
and
rcll
or
aad
sbb
xor
imul
or
sbb
sub
jecxz
and
cmp
lods
popf
stc
es
jmp
xchg
addr16
jecxz
push
cltd
xchg
in
insl
mov
mov
dec
pop
sbb
outsl
cmpb
push
inc
cmp
das
or
pop
outsb
jle
lret
add
adc
lods
cwtl
mov
ljmp
or
int3
sbb
dec
jb
xor
fbstp
xor
insb
cs
dec
in
ljmp
mov
aas
inc
sbb
stos
das
add
mov
outsb
mov
into
dec
jne
stos
es
add
xor
mov
mov
insb
fs
or
mov
or
leave
add
cli
jne
push
iret
std
enter
and
sbb
adc
negb
xchg
or
mov
dec
addr16
cmp
pop
mov
aad
movsb
movsl
roll
pop
push
inc
ret
fcoml
sbb
test
cld
rcl
dec
fucomp
sub
adc
push
xor
imul
cmp
bound
jg
das
sbb
mov
adc
loop
jmp
cmpsb
mov
xlat
ja
xor
fisubs
inc
ja
sahf
inc
mov
and
mov
mov
pop
sbb
mov
mov
sub
push
filds
sbb
jl
mov
jg
in
pusha
mov
mov
pop
es
xchg
lods
and
aaa
fdiv
adc
lods
loopne
andl
stos
jae
xlat
push
cs
jg
pushf
repnz
mov
shlb
mov
xor
add
shll
and
inc
jmp
lock
sbb
xchg
lret
daa
or
and
xchg
repz
mov
test
dec
jnp
xchg
dec
fwait
test
push
fdivrp
pusha
ds
ret
lcall
pop
in
repz
pop
icebp
xchg
pop
and
insb
pusha
or
loop
push
fldcw
fdivl
into
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
sti
dec
push
adcl
shrl
cmpsl
cld
or
nop
pushf
mov
sbb
push
xchg
out
fsubrl
mov
mov
and
aad
test
fwait
xor
aas
lods
pop
fstps
dec
xchg
xchg
or
xchg
scas
sarl
mov
data16
mov
fldl
sbb
mov
aam
mov
lods
jp
add
mov
jae
adc
sub
xchg
xchg
or
gs
cli
icebp
mov
shll
test
jno
orb
add
repz
aad
mov
ret
mov
dec
sub
lods
dec
lock
xchg
dec
ja
or
imul
aaa
pop
pushf
dec
fstpl
mov
inc
je
dec
in
js
push
inc
hlt
cmpsb
xor
lret
jge
imul
push
lea
mov
inc
or
sub
neg
lret
mov
or
xor
repz
pop
push
xchg
push
xor
sahf
call
movsl
out
add
xor
and
dec
adcl
stc
in
scas
fucomip
es
cmp
lea
fnstsw
addr16
mov
xchg
mov
data16
and
cmp
cmpb
push
mov
push
ljmp
dec
sahf
adc
sub
or
mov
mov
jns
and
fnstcw
dec
mov
mov
inc
adc
test
arpl
inc
pop
pushf
clc
addb
push
stc
js
mov
inc
ret
jo
mov
xor
cld
mov
iret
mov
mov
push
inc
dec
jo
cmp
add
insl
xchg
dec
jge
add
loope
push
test
xchg
sbb
cmp
mov
xor
int
mov
jge
out
xorl
jmp
pop
inc
in
loopne
nop
stc
sub
mov
js
out
dec
int3
popa
scas
mov
push
and
out
adc
test
mov
cli
sbb
xor
inc
sbb
dec
inc
stc
sarl
ficoml
lret
jecxz
call
cmp
sbb
jbe
repnz
mov
outsl
dec
test
jno
scas
push
mov
jmp
test
or
scas
jge
fwait
dec
fists
add
mov
xor
shll
xchg
aas
popf
shrl
sti
or
iret
xlat
dec
sbb
popa
adc
movsl
aam
push
push
movsl
jae
sub
loopne
cmp
and
movsl
aad
in
lret
or
xor
add
pop
arpl
test
mov
or
jg
xchg
lret
cli
das
xchg
inc
and
xchg
shlb
xchg
sub
popf
cmp
or
ja
addr16
inc
shlb
push
aad
test
mov
or
cli
add
and
stos
or
mov
sub
lahf
jmp
or
ss
add
andb
mov
rorb
repnz
leave
push
jb
jmp
clc
movsl
popa
es
pop
rcll
fs
call
out
subb
out
lods
sub
or
pop
leave
pop
pusha
jno
fiaddl
arpl
add
inc
add
jle
pop
push
fisubs
mov
sbb
movsl
and
xchg
xor
cli
clc
scas
ret
and
loope
jmp
addw
cs
jmp
cltd
add
mov
jecxz
mov
in
in
arpl
andb
dec
add
add
pop
sub
jl
test
in
je
xchg
xor
sub
jecxz
fmull
cmp
scas
aaa
into
mov
fwait
cmp
lds
jo
mov
addr16
pop
xchg
in
push
ljmp
not
iret
sbb
jne
andl
jne
dec
adc
and
aaa
sahf
cmp
fisttpll
mov
into
xorb
outsb
sbb
mov
jnp
lret
push
xchg
mov
sbb
cmc
sbb
rcrb
sub
and
es
cmp
pop
int3
sub
jl
inc
mov
inc
andps
or
out
daa
lock
cli
pop
jge
jno
cmp
mov
out
mov
mov
f2xm1
pop
sbb
js
cmpsb
push
dec
fiaddl
pop
lret
xor
cs
ja
fsts
cmp
inc
xor
mov
cli
fildl
inc
xchg
and
dec
mov
inc
test
sub
jmp
cltd
pop
jo
dec
inc
pushw
lret
xorl
movsl
push
and
in
sub
dec
push
pop
pop
shrl
and
xchg
popa
in
jmp
xchg
stos
aaa
movsl
lock
push
fcmovnbe
xchg
jg
mov
jp
inc
mov
dec
pop
js
mov
mov
dec
fidivl
loope
hlt
rcr
push
and
xchg
pop
xchg
sahf
adc
dec
shll
or
daa
cs
ja
sbb
pop
adcb
sarb
loop
mov
ret
testl
fs
add
xchg
outsl
xchg
roll
jns
stos
xor
call
inc
stc
mov
xor
mov
mov
shrb
and
test
fildll
cmp
jo
inc
cmp
inc
and
insl
test
sbb
sbb
sub
dec
enter
test
xor
and
ficompl
stos
xchg
sub
test
xchg
push
idivb
in
aad
mov
jmp
int
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
mov
jle
xor
add
shrb
mov
icebp
dec
imul
inc
loopne
jecxz
mov
jmp
imul
ja
fiadds
xchg
in
cli
fsubp
mov
pop
rol
mov
cmp
cmp
push
data16
cltd
mov
filds
loop
push
inc
int
aaa
adc
jge
sbb
insb
addr16
jg
inc
xchg
xchg
mov
mov
add
jo
xor
adc
add
cmpsl
and
ja
andl
ljmp
jg
xor
or
lea
shl
pop
mov
stc
sub
push
jb
mov
mov
mov
test
adc
mov
cmp
fldenv
out
inc
in
repz
dec
dec
in
cli
loop
adc
cli
cmp
bound
dec
or
or
sub
sbb
mov
dec
subl
dec
xlat
in
cmp
je
fcmovu
push
rcll
fldenv
mov
fcoml
pop
mov
stc
scas
cmpsl
mov
xorl
gs
mov
dec
outsl
addr16
or
xchg
mov
jnp
loop
ret
aas
cmp
mov
pop
out
push
aad
or
sarl
jecxz
mov
repnz
pop
lahf
lods
jge
sub
push
bnd
push
mov
inc
dec
xchg
add
push
sbb
mov
sbb
or
xor
jecxz
stos
jp
xor
mov
push
mov
jp
loopne
data16
lods
sub
ss
sub
das
out
mov
cmp
or
popa
rcrb
imul
addb
sbb
adc
sub
lcall
imul
rcl
fidivrl
mov
jmp
repz
in
dec
sbb
pushf
arpl
ja
jae
es
mov
imul
jmp
test
xor
cmp
push
je
or
fmull
push
cmpsb
aad
and
lock
pop
fucomp
jb
xchg
cs
bound
cmp
mov
scas
push
nop
aas
xchg
ss
push
sub
shr
call
dec
xor
mov
mov
mov
dec
daa
mov
pop
cld
inc
lea
jp
pop
and
push
jbe
mov
sub
loopne
daa
sub
lret
add
nop
add
shll
fidivrs
cwtl
jge
jns
cmp
xor
adc
call
aam
dec
in
pop
xchg
and
sbb
cmp
mov
mov
enter
jnp
popa
sbb
movsw
insb
repz
mov
loope
icebp
sarb
mov
rorb
lret
mov
push
movsl
sbb
jge
int3
cmc
xchg
mov
inc
adc
and
shl
sbb
push
lods
mov
push
rcrl
rcrb
cmpb
lret
mov
lcall
clc
jle
loope
inc
addr16
jg
or
xchg
mov
int
ucomiss
push
push
in
in
insb
test
cld
idivl
cli
mov
dec
sahf
and
and
pusha
cmp
jae
xor
sub
cmpsl
lds
push
add
sub
das
shrb
fistpll
js
mov
adc
cmpsb
inc
or
mov
inc
jg
cwtl
test
cli
in
leave
insb
test
fidivrl
je
fists
pop
push
push
dec
jl
and
int3
mov
lods
xlat
mov
sub
mov
call
push
push
fnstsw
cwtl
inc
adcl
or
cmc
out
rol
mov
neg
lods
test
pop
lea
jo
aad
sub
fldenv
push
jo
add
imul
out
cmpb
fwait
xchg
ret
push
aaa
xchg
mov
inc
sar
lock
jbe
scas
pop
xor
clc
inc
repz
jg
int
push
fldenv
add
daa
pop
cmc
inc
fistps
push
mov
push
push
and
jp
cmpsb
punpckldq
repz
sbb
jns
sub
pop
in
mov
dec
dec
push
mov
sbb
mov
mov
jl
add
pop
dec
add
sbb
iret
and
mov
aad
and
xor
mov
push
cmp
inc
add
sbb
cli
cmp
push
insl
pop
sahf
cmpsl
js
in
ret
push
ja
push
stos
pusha
bound
pop
inc
push
mov
fsubl
dec
mov
test
pop
jle
xor
adc
pushl
add
fisubrl
xor
addr16
je
aaa
dec
mov
push
xor
fsubrs
cmpsl
xorl
shlb
dec
icebp
call
arpl
xor
test
nop
cmpsl
pop
inc
inc
mov
sbb
mov
add
rolb
jmp
sub
sub
push
lods
and
jno
xchg
addr16
dec
movsl
fs
sbb
mov
fadds
adc
flds
mov
imul
rcll
adc
or
movsl
push
ret
gs
jne
inc
arpl
adc
jo
ss
scas
fidivl
jecxz
leave
mov
pushf
mov
adc
imul
roll
stos
dec
iret
ljmp
aad
and
and
jmp
fidivrs
xor
lahf
xlat
lods
jb
lods
in
pop
lret
out
es
or
repnz
cmpsl
ret
loope
aad
mov
jns
fsts
xor
jbe
cmpb
inc
sbb
pop
and
adc
cmp
cltd
cmp
adc
lods
mov
and
adc
bound
sub
scas
ds
push
pop
repz
inc
mov
or
ret
mov
mov
cld
adc
push
push
or
cmpsl
adcb
in
mov
inc
inc
sbb
jg
dec
in
hlt
fnstsw
adc
or
je
shlb
mov
push
cmp
inc
xor
flds
push
outsl
loop
dec
fdivrs
xor
mov
push
mov
aam
inc
nop
stos
xor
movsl
mov
stos
lock
xadd
sbb
jge
in
loop
hlt
xchg
mov
out
test
int3
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
ljmp
add
das
inc
aam
mov
fidivrs
xlat
jecxz
jb
or
push
adc
in
xchg
dec
or
mov
xchg
mulb
xlat
les
mov
faddl
out
lock
dec
pop
sbb
cmc
jno
mov
fcompl
xchg
clc
pop
jl
pop
enter
hlt
xchg
test
cmp
movsb
lods
outsb
ret
and
mov
adc
movsl
arpl
insl
and
or
adc
arpl
aaa
gs
int
mov
cmp
mov
jge
adc
push
nop
adc
in
mov
insl
push
andl
mov
push
push
clc
sti
ja
nop
call
add
xor
jo
xor
lods
mov
and
adc
mov
or
adc
rcll
popf
js
add
std
leave
jge
int
mov
and
mov
ds
mov
ret
or
jp
arpl
mov
sbbl
mov
inc
mulb
loope
data16
pop
push
das
xchg
stos
xchg
insb
bound
sbb
jae
jns
bound
cmp
inc
gs
sbb
loopne
sbb
fstpt
sbb
out
jmp
cmpb
jmp
into
mov
insl
test
test
xchg
inc
lods
push
jmp
sbb
test
xchg
insl
pop
cwtl
or
je
das
adc
sub
or
sub
mov
jae
push
xchg
pusha
adc
rolb
adc
je
sarb
mov
push
adc
cs
stc
or
add
jmp
dec
cmpl
lods
clc
jecxz
fbld
faddl
push
pop
stc
loope
out
in
push
pop
insb
cmp
sbbl
shlb
pop
pusha
int3
sbb
fmuls
into
cmpsb
sub
shl
insb
dec
outsb
ret
sub
mov
mov
lods
xchg
imul
push
in
inc
mov
aad
ret
leave
adc
push
push
lds
fidivrl
lea
stos
in
mov
xchg
fsts
lods
enter
or
shll
dec
xchg
xchg
inc
mov
lahf
xor
adc
lcall
adc
int
add
jge
push
mov
sahf
mov
gs
xchg
pop
fwait
dec
aad
mull
inc
aaa
imul
push
orl
aad
lahf
inc
lods
cwtl
pop
push
or
sub
fwait
sub
cwtl
push
or
lock
dec
xor
mov
bound
jbe
orl
xor
mov
lcall
mov
inc
push
xchg
xchg
mov
aaa
sarb
adc
mov
and
loopne
rcrl
mov
dec
test
notl
lret
xchg
adc
sbb
and
jl
stos
pop
and
fbld
inc
and
outsb
jo
cmp
js
cmp
popa
xor
add
sub
ja
arpl
nopl
cmpsb
jo
push
add
pop
outsb
add
cmp
adcb
int
rep
cli
pushl
test
xchg
movsb
xor
mov
or
fdivl
mov
sub
sub
lds
xchg
rcrl
mov
pop
cmp
lcall
jle
jle
je
out
mov
pusha
jg
adc
fwait
jne
jo
jl
add
lods
or
jae
jbe
outsl
out
adc
pop
and
int
imul
dec
orb
dec
nop
mov
fldenv
pop
stos
xchg
or
int
fsub
mov
pop
call
sbb
push
js
push
jae
icebp
or
ficompl
lods
fs
sub
pop
push
mov
sub
mov
aaa
scas
sti
outsb
mov
das
neg
pushf
insb
and
xchg
in
in
lcall
xor
sub
jb
outsl
add
mov
mov
mov
mov
jo
sbb
push
add
jge
repz
insb
xlat
mov
inc
aas
mov
jge
rcrl
mov
mov
xchg
sbb
and
stc
push
pop
cwtl
incl
popf
dec
outsb
out
mov
jmp
das
or
fistpll
imul
fsts
imul
mov
into
insb
pop
sbb
sti
jl
sahf
xor
movsb
mov
jb
xor
push
adc
sbb
out
mov
push
stos
push
daa
in
sub
push
mov
jno
sub
sbb
xchg
insb
cmp
push
ss
ljmp
outsb
dec
pop
sbb
push
xchg
test
dec
or
fxch
or
out
dec
in
push
ss
out
test
je
jne
fldt
imul
jg
ret
adc
jae
mov
add
hlt
arpl
push
stos
lcall
sbbl
push
leave
fdivs
flds
negl
sarb
insl
pushf
push
pop
dec
clc
pop
sub
mov
ljmp
inc
pop
pop
daa
lret
jmp
pushf
mov
inc
push
push
outsl
sub
inc
cmp
push
pop
and
scas
dec
jbe
loopne
arpl
in
jno
xor
xchg
pusha
andl
push
dec
jbe
pop
push
vpminsw
out
sbb
test
aaa
and
pushf
pusha
clc
imul
xchg
popa
sahf
add
mov
fnstsw
rcrl
arpl
add
cmp
xor
movsb
jecxz
test
movsl
das
xor
xor
pop
imull
out
out
rol
daa
push
xor
xor
sarb
mov
ret
inc
mov
jl
add
clc
cld
inc
arpl
imul
and
sbb
fistpll
scas
in
cmpl
push
fldl
in
stc
nop
xor
mov
mov
lods
in
gs
pusha
int3
insb
aas
mov
movsl
out
mov
negl
cli
pop
lea
inc
int3
mov
rcr
cmp
cwtl
jge
add
ror
mov
mov
rcrb
mov
sbb
hlt
mov
jbe
or
test
inc
int
fisubl
jp
pop
int3
mov
mov
insb
icebp
pop
pusha
lods
mov
mov
pop
ss
pop
mov
outsb
jl
bnd
mov
shrl
jb
mov
adc
inc
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
jl
push
mov
add
jl
roll
test
aad
filds
jmp
add
mov
les
jne
rcll
out
push
mov
idivl
stos
aaa
bound
inc
xchg
iret
dec
xor
stos
loope
movsb
sbb
lock
test
push
js
lea
and
mov
jg
inc
mov
pop
repz
dec
sahf
push
pusha
js
xlat
int3
or
dec
daa
es
repz
cmova
pop
or
lcall
jge
mov
cmp
negb
lret
sub
inc
dec
mov
repnz
pushf
sbb
cmpsb
les
dec
or
push
jb
cmp
sub
and
add
pop
cmp
outsl
popf
push
in
rorl
mov
mov
dec
mov
mov
fcoml
xchg
adc
adc
inc
inc
stos
mov
movsb
stc
lret
mov
jl
dec
sti
mov
in
add
add
bound
jl
cmp
pop
adc
lods
mov
fisubs
push
scas
adc
mov
mov
aas
and
cmp
push
cmp
pop
mov
add
add
xor
xchg
sahf
lahf
mov
xor
xchg
sbbb
pop
xor
aam
mov
popf
dec
les
hlt
call
pop
jnp
lahf
push
popf
lret
dec
or
push
mov
and
and
shll
fcompl
push
hlt
inc
push
stos
call
repnz
pop
push
ljmp
orb
pop
fisttpll
mov
mov
lahf
mov
scas
in
lcall
jp
stos
ficompl
fnstcw
or
loope
flds
sub
daa
shrl
es
fs
push
hlt
ja
lret
push
cs
mov
imul
cmp
mov
and
mov
icebp
in
pop
pop
stc
in
bound
jo
enter
test
sbb
xchg
cmpsl
mov
push
pop
popf
icebp
mov
adc
or
lahf
inc
addr16
lahf
pop
xchg
enter
lret
pop
out
pop
or
inc
adc
ds
repz
sbb
idivl
pushf
sti
ret
out
push
xchg
ja
shrb
cli
push
cld
popf
jne
orl
xchg
repz
jbe
insb
adc
out
cmc
xchg
stos
out
jne
sbb
push
mov
push
and
rorb
fsubr
adc
adc
adc
dec
std
dec
adc
test
data16
les
inc
movsb
pop
test
sub
jno
adc
fs
jbe
xchg
adc
mov
pop
pop
cmp
add
push
sbb
lret
or
or
in
jle
jmp
addr16
shll
sbb
xchg
mov
hlt
jb
ret
and
insb
mov
aas
aad
daa
and
shrl
aad
add
pop
jne
stc
pop
or
in
and
xchg
in
mov
cli
loope
or
push
nop
cmp
in
xchg
dec
daa
and
in
fdivrl
xor
jne
pop
lods
pop
jp
dec
popa
scas
pop
shll
mov
sbb
jge
jne
fcomp
lea
stos
sbb
ljmp
not
mov
adc
pop
jbe
popf
imul
mov
jne
xchg
pop
lret
inc
fsubl
sub
shll
or
mov
push
cmpsl
popa
sub
sub
cmp
xor
iret
test
popf
arpl
or
dec
dec
or
xor
inc
cmp
lods
aas
xor
fbstp
repz
cmpl
divl
inc
iret
cmp
sbb
sbb
mov
cmpsb
sbb
adc
cwtl
stos
add
adc
or
sahf
and
psubb
cli
int
inc
jno
push
mov
xor
xchg
jp
imulb
push
jle
add
cmp
clc
fcoml
je
jnp
inc
repnz
sbb
sbb
out
flds
pop
test
sbb
ror
or
lods
cmp
add
sbb
mov
iret
jmp
ja
xchg
jl
or
insb
jmp
mov
insl
rol
dec
lea
xlat
xchg
mov
lret
mov
pop
cmp
jnp
push
cmc
adc
mov
popf
mov
mov
xor
cmp
enter
mov
sar
jae
dec
adc
pop
mov
mov
xor
push
and
out
mov
in
mov
ret
xor
sub
and
mov
pop
xchg
divb
jge
sahf
ds
insb
insb
pop
sbb
add
ret
cld
gs
lret
in
pop
ret
out
inc
pop
mov
lods
iret
icebp
ret
sti
add
jbe
push
sub
mov
scas
pop
jnp
mov
and
in
rol
cmpb
sub
lea
out
jno,pt
xor
add
fisubrl
xchg
test
outsl
dec
mov
gs
fisubl
mov
mov
scas
lods
add
pushf
mov
sub
call
cmpsb
pop
out
into
aaa
in
inc
cwtl
loopne
inc
sbb
push
lds
rcrl
das
cmpsl
pop
js
popa
ss
fidivrs
scas
ret
inc
shrb
push
push
fisttps
bound
mov
sti
inc
leave
mov
les
stos
mov
jnp
repnz
mov
cmp
mov
cmpsb
cmp
adcl
repz
and
sbb
xor
out
inc
imul
push
mov
and
pop
pop
aam
adc
or
mov
or
cmp
mov
cwtl
and
mov
mov
or
or
and
push
fwait
or
jecxz
imul
adc
pop
rclb
fdivl
ja
sti
jb
icebp
adc
iret
xchg
loopne
mov
jno
cmp
rcll
in
dec
insb
scas
icebp
outsb
add
dec
loop
imul
fnsave
sbb
inc
out
iret
mov
andl
shlb
xchg
pop
mull
scas
jne
cld
mov
xor
xchg
mov
movsb
push
push
in
jo
sarl
iret
or
sbb
mov
xchg
xchg
add
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
lock
or
add
push
adc
mov
mov
xor
pop
out
jg
cmpsl
test
gs
or
ljmp
xchg
jle
shrl
lods
sub
nop
outsl
sub
hlt
out
adc
or
sub
pusha
fsubs
mov
divb
mov
test
mov
nop
mov
lret
insb
test
and
inc
add
imul
mov
stos
call
test
ret
ja
and
repnz
mov
es
insl
and
dec
jbe
ss
and
cmp
xchg
inc
add
push
xor
sbb
scas
or
mov
sub
or
dec
dec
shll
add
popa
movsb
in
gs
push
mov
aas
add
sub
pop
mov
cs
push
addr16
test
imul
loope
xchg
scas
cmp
fcoml
and
popa
das
std
inc
sahf
jno
iret
fwait
leave
outsl
cmp
movsl
inc
mov
outsb
cltd
imul
or
fisubs
sub
js
popa
adc
cmp
outsl
mov
rcrl
cmp
sbb
frstor
rcr
hlt
mov
aas
lods
out
je
lods
lea
inc
jns
mov
fldt
and
test
imul
xor
ss
ss
fucomip
bound
into
mov
orb
pop
and
repnz
and
hlt
movsl
daa
sub
adc
in
mov
in
dec
std
data16
pushf
mov
jb
sbb
dec
mov
mov
popf
out
stos
sti
cmp
pusha
fwait
pop
stos
inc
jl
mov
and
jge
adc
mov
les
jae
mov
xor
xor
mov
jge
fsubs
out
inc
mov
test
pop
dec
call
sarl
aam
or
sbb
pop
mov
jns
ljmp
pop
jne
ret
jl
ror
dec
lahf
cmp
jb
fisttps
dec
mov
ja
js
loopne
xchg
pusha
mov
bound
jg
mov
pop
hlt
sbb
scas
or
mov
push
ds
enter
repz
dec
xchg
clc
int3
into
push
adc
cmpsl
gs
clc
cmp
sub
pop
xor
push
inc
es
ds
or
das
aaa
fsts
arpl
dec
pushf
or
addr16
and
mov
jns
pop
mov
sub
adc
pop
loopne
xchg
lcall
inc
pop
add
add
push
xchg
pop
icebp
shrl
pop
adc
js
into
fdivrl
fdivrl
ret
xchg
xor
pop
lret
lea
or
in
pop
enter
mov
mov
shr
push
sub
pop
movsl
cmp
xlat
ss
aas
and
in
xchg
xchg
sbb
xor
dec
iret
jecxz
inc
incb
stos
or
filds
push
pop
inc
adc
into
fdivs
xor
fisttps
adc
lret
addr16
xchg
sub
pop
je
dec
stos
pop
push
push
or
xchg
in
and
jg
out
ret
adc
add
dec
repnz
popa
pop
adc
mov
jno
movsl
inc
enter
add
test
fcmovu
scas
inc
dec
inc
iret
mov
mov
aam
push
out
dec
inc
mov
xor
pop
push
adc
cs
pop
rcll
lret
outsl
push
inc
mull
xchg
pop
dec
xchg
pop
negl
ja
arpl
xchg
mov
mov
jne
repz
jle
jno
ljmp
jae
outsl
ret
icebp
push
adc
mov
xor
mov
cmpsb
stos
out
rorl
jp
insb
lret
pop
mov
les
movsl
push
jnp
mov
loop
shrb
mov
xor
or
xchg
mov
out
jne
jge
xchg
push
push
arpl
pop
imul
push
cs
scas
outsb
jo
ret
xchg
dec
mov
xchg
shrb
add
inc
aad
sbb
add
divl
insl
xlat
and
add
pop
pop
les
in
lods
enter
ret
stos
icebp
cwtl
mov
adc
shl
stos
mov
fsub
fst
xchg
hlt
inc
aas
out
dec
out
cwtl
rcr
xchg
div
jp
adc
loop
sub
jo
mov
cmp
xchg
jae
mov
jo
adc
and
stc
jecxz
pop
inc
push
pop
add
loope
outsl
jmp
fisttpl
or
mov
or
test
arpl
xchg
cmpps
pop
js
je
dec
cmpsb
out
leave
xchg
repnz
loope
xchg
jbe
ret
jmp
jmp
pop
arpl
fstpt
cmpsb
adc
adc
or
sahf
in
mov
mov
cmpl
xchg
inc
cmp
loopne
cmp
das
in
dec
sbb
push
in
cmp
fimull
push
js
adc
popa
test
in
mov
dec
orl
pop
int3
in
mov
xor
push
mov
fs
mov
adc
int3
enter
cli
fsts
fwait
cmpsl
xor
mov
mov
das
xchg
add
push
ds
fsubl
pop
xchg
dec
stc
and
mov
adc
pop
jns
int
and
mov
out
out
xchg
jbe
les
mov
popf
test
add
js
fnstcw
dec
sub
sbb
lea
xchg
mov
jnp
push
and
out
dec
fstps
or
stos
mov
pop
pop
rcr
dec
xchg
cmpsb
sub
and
sbb
mov
sbb
pop
les
call
xor
pop
jmp
jb
or
jle
mov
sbb
sarb
adc
xor
rorb
fistps
add
inc
sahf
ret
lret
dec
and
test
in
pop
call
fisubs
and
fnstcw
popf
push
test
sbb
insb
xchg
ret
dec
sub
ret
or
imul
and
add
bound
fisttpl
fs
pop
jl
out
mov
andl
dec
mov
push
movsl
cmp
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
mov
add
mov
popa
gs
fnsave
nop
roll
test
shll
mov
push
shrl
jae
lods
aaa
faddp
data16
push
jae
daa
loop
mov
push
mov
mov
repz
xchg
imul
jmp
shll
mov
rcrb
nop
dec
lods
test
shll
add
hlt
adc
mov
inc
jmp
dec
fdiv
inc
xor
xor
jne
xchg
lods
out
pushf
adcb
push
pushf
test
inc
xchg
je
and
push
or
xor
repnz
xor
insl
mov
push
ljmp
aad
testl
add
outsb
jg
xchg
loop
sarb
mov
lock
xchg
imul
jg
mov
addr16
push
mov
or
cs
outsb
dec
lcall
mov
jl
ss
lea
ror
test
loopne
pop
insl
cmpsl
mov
movsb
jns
cmp
lea
xlat
mov
leave
push
jbe
push
cmp
lods
adc
adc
jp
sbb
loop
or
fisttps
add
inc
sub
je
sbbl
lds
pop
cmpsl
mov
jno
or
fbstp
insl
loop
jno
push
or
sbb
cmc
mov
xchg
cmpsb
or
sarl
stc
and
idiv
dec
mov
mov
sub
xchg
lods
mov
sub
outsl
xor
mov
jecxz
cmpsb
outsb
ret
push
std
ficompl
mov
xchg
mov
dec
cmp
movsb
cmpsb
sub
mov
dec
adc
imul
push
jb
dec
mulb
in
iret
add
outsb
mov
lods
lahf
mov
xchg
aam
test
add
lahf
lret
inc
jecxz
clc
add
pop
inc
in
jecxz
xchg
mov
xchg
xor
dec
jmp
cli
cmp
popa
scas
dec
test
inc
mov
hlt
jne
enter
inc
mov
xchg
push
movsb
push
shll
lock
jp
enter
xchg
jge
cs
pusha
xor
repnz
push
cmp
in
cmp
imul
nop
inc
in
lahf
loopne
addr16
sbb
sbb
sahf
fcom
xchg
std
movsb
or
test
dec
add
cmp
dec
dec
sub
or
mov
sbbb
and
jb
leave
mov
in
push
call
adc
xchg
ja
ljmp
xor
mov
inc
xlat
mov
or
inc
pop
shlb
sub
or
add
sbb
fs
stc
inc
pop
adc
in
ja
in
loopne
lds
dec
jl
and
fnstsw
leave
aam
sbb
fisttps
iret
in
sub
std
dec
scas
pop
enter
cmp
push
fnsetpm(287
ret
pop
mov
push
in
mov
cmc
negl
call
shll
sub
xor
jg
cmp
sbb
jmp
popf
lds
pop
and
mov
push
insb
jp
push
arpl
push
popf
mulb
lods
mov
and
fcmovnb
insl
out
add
mov
xor
add
jo
dec
pop
jns
pop
jbe
sbbb
push
push
fadd
or
dec
popf
aas
fmuls
out
mov
mov
mov
std
cltd
xor
sbb
in
lahf
sarl
es
out
scas
andb
or
or
cmpsb
out
xchg
ret
pusha
push
cmpsl
lahf
inc
test
aad
push
adc
sub
dec
push
inc
or
add
mov
inc
lock
ja
les
out
cmc
jle
daa
loopne
daa
cltd
bound
loopne
push
push
std
daa
dec
ret
or
xor
out
daa
mov
dec
aad
lods
in
add
inc
mov
jmp
xor
mov
mov
push
lds
mov
imul
add
loope
imul
bound
test
pop
mov
sti
adc
add
imul
lcall
mov
jnp
sub
dec
mov
mov
and
or
mov
ljmp
xlat
push
fnsave
fldl
add
mov
daa
pop
adc
adc
xor
imul
aaa
dec
idivb
mov
or
jbe
or
in
js
pop
inc
leave
movl
dec
mov
stc
cld
ja
loope
mov
mov
jg
pushf
pushf
mov
pop
inc
sbb
pop
loop
cmpsb
test
addr16
cmp
fldenv
mov
or
pushf
xor
stos
cltd
enter
push
inc
mov
outsb
je
incl
ja
ljmp
pop
jbe
cli
cmc
and
int3
in
sbbb
in
pop
push
mov
and
and
mov
jo
push
fcmovne
jns
loop
sub
rorb
push
aad
popf
push
mov
mov
es
addr16
pop
sahf
sub
mov
out
push
xor
mov
jo
pushl
inc
jecxz
fistpl
jno
leave
mov
dec
or
das
pusha
jne
fistps
notl
jnp
push
movsl
fs
movsl
xor
aaa
ret
cmpsb
test
lods
sub
inc
rclb
mov
movsl
lods
push
ja
add
mov
arpl
sub
xchg
push
aaa
mov
lods
cld
addr16
pop
dec
mov
out
mov
mov
pop
in
xor
adc
pop
sar
in
outsb
outsb
sub
and
fcmovnb
loop
std
jmp
xor
add
sar
mov
divb
xchg
push
loope
cmp
add
mov
jno
out
inc
stos
dec
mov
cmpl
stos
std
pop
int
add
rcrl
imul
push
jbe
movsl
ss
or
push
leave
or
dec
or
fisubrs
cmp
in
scas
movl
fadds
or
sub
mov
fwait
mov
aaa
lods
push
in
fistpl
arpl
mov
out
in
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
fimull
inc
add
xlat
xor
cmc
scas
aas
mov
dec
loope
inc
es
cmpsb
dec
inc
mov
dec
lock
pop
js
adc
ss
call
push
mov
xchg
jns
xor
loope
pop
hlt
cld
aad
dec
dec
ds
nop
in
lods
xor
mov
je
popf
lcall
jmp
test
out
sub
cmpsb
loope
push
iret
mov
jp
jb
ret
bound
insl
sbb
sub
lods
pop
repz
dec
mov
cmp
jle
negb
push
insb
push
ret
orb
mov
cmp
mov
aas
rcrl
cld
mov
mulb
push
push
pop
inc
int
xor
dec
or
sbb
add
icebp
pushf
cmpsl
fsubrl
sti
push
aaa
testl
add
dec
adc
sub
mov
decb
or
dec
jmp
test
inc
sub
xchg
shlb
mov
and
sub
dec
jecxz
cmp
dec
test
sar
cmp
xchg
test
mov
xor
mov
hlt
push
mov
lods
push
loope
popa
sub
jmp
clc
push
xchg
cmp
insb
pusha
nop
mov
push
dec
push
sbb
pushf
lea
outsl
hlt
mov
sub
mov
lds
xchg
cmp
dec
pop
das
imul
push
push
jo
dec
mov
mov
inc
out
mov
ss
leave
cmpsl
gs
pop
scas
add
imul
lcall
int3
mov
or
mov
enter
add
mov
jbe
push
add
repnz
test
pop
mov
mov
loop
xor
jb
mov
xchg
shll
adc
sbb
cwtl
sarl
xchg
sub
cmp
pop
addr16
sub
jo
lret
sbb
icebp
sub
dec
leave
pop
add
add
jnp
push
sbb
sbb
cmp
or
lcall
movsl
or
or
aas
inc
xchg
std
filds
pop
int3
jae
push
fisttps
ss
lea
mov
pop
lods
inc
ss
adc
pop
cmpsl
jns
lods
lahf
push
jb
dec
sbb
hlt
push
test
les
inc
inc
mov
dec
jge
mov
dec
lock
ffreep
sti
xorl
sub
jmp
aas
insl
jmp
pop
ret
out
cs
jmp
pop
mov
xor
sub
and
push
popf
fisttps
sub
sub
jg
cmc
icebp
add
xchg
push
cwtl
xchg
sbb
cmpsb
xchg
sub
mov
jo
out
and
xor
cmp
xchg
dec
pop
je
mov
cmpsl
mov
add
cmc
dec
and
dec
jne
test
mov
jge
xor
lret
xor
movsb
movsb
sbb
popf
int
dec
xlat
into
test
mov
mov
xchg
clc
adc
test
cli
cltd
mov
ja
js
jbe
pop
ret
filds
std
cmpsl
add
add
mov
mov
sub
xchg
js
sub
add
icebp
pop
mov
sub
hlt
sub
sub
or
pop
push
setne
mov
std
mov
xlat
arpl
or
pop
sbb
xor
hlt
cmpsl
push
orl
sbb
pop
pop
lods
fnstenv
and
xchg
mov
jle
lahf
adc
out
adc
xor
pop
dec
data16
leave
jmp
xor
in
in
pop
sbb
cwtl
xor
mul
or
jle
mov
outsb
push
aad
fs
bound
arpl
cmp
add
out
ret
in
mov
or
jl
jbe
adc
out
mov
std
sbb
mov
sbb
mov
jne
gs
fucomip
gs
out
bound
adc
pop
shrb
movsb
outsb
clc
idiv
sub
imul
mov
push
xor
dec
sbb
cwtl
ret
add
push
sbb
das
cwtl
aaa
xor
ficoml
scas
fs
cmc
mov
cltd
xchg
sbb
xor
ljmp
mull
xchg
std
adc
mov
cmpsl
test
cli
cmc
popf
sub
mov
movd
inc
fldt
push
addr16
sbb
push
dec
leave
aas
adc
rclb
cmp
cmp
push
out
cmc
mov
lea
sub
mov
sub
and
ret
orl
insb
hlt
and
jmp
inc
inc
int
dec
sarl
out
mov
jne
mov
fidivl
mov
xor
and
mov
pop
addb
dec
fwait
sub
mov
mov
je
stc
pop
mov
scas
les
and
push
mov
adc
mov
xor
push
push
dec
mov
in
aam
push
leave
lods
sarl
idiv
scas
sub
dec
and
pusha
in
mov
add
or
mov
push
out
xchg
aaa
outsb
inc
ss
into
mov
add
and
inc
add
sub
xchg
dec
out
xchg
mov
not
ret
rcpps
pop
insl
pop
fmulp
loop
arpl
mov
in
fstl
lods
shlb
ret
mov
and
pop
sub
sbb
scas
push
test
cld
xchg
lret
sahf
sbb
adc
insl
mov
cmp
lea
xor
pop
int3
push
cs
ss
movsb
sbb
and
inc
divb
sbb
and
cmp
mov
lock
icebp
add
inc
repz
sub
mul
pop
inc
push
push
outsl
inc
loope
mov
mov
jmp
mov
pop
pop
and
rcll
mov
and
aam
inc
and
push
les
dec
out
push
jp
mov
iret
pusha
jge
mov
xor
repz
mov
add
mov
jmp
mov
and
cltd
call
inc
jge
sub
jmp
jns
add
or
sub
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
and
icebp
add
mov
xchg
fistpll
out
aas
mov
gs
enter
cmp
cltd
pusha
jmp
inc
mov
ret
dec
mov
out
icebp
inc
push
mov
fnstenv
adc
xor
fs
int
jge
adc
lret
inc
fsubr
leave
push
mov
cmp
xchg
push
adc
jl
or
dec
movsl
xor
movl
cmp
sbb
insl
insb
gs
mov
jae
inc
sti
or
cmp
mov
mov
je
mov
adc
fcomps
cld
push
ss
das
cwtl
shlb
test
loopne
mov
jge
mov
pop
mov
insl
scas
and
xchg
mov
bound
popa
push
xchg
dec
repz
mov
dec
mov
and
or
bound
xchg
mov
push
pop
or
pop
enter
ss
test
sbb
rcr
lcall
out
jg
sub
sarb
xchg
fisttpl
xchg
scas
mov
loope
idiv
hlt
sub
push
mov
jl
lret
push
arpl
xchg
push
out
pop
std
xlat
jle
cmp
sub
mov
mov
mov
sbbb
adc
fwait
pop
cmp
addb
mov
lods
mov
pop
push
inc
insl
add
mov
mov
xchg
add
pop
fdivr
sub
sub
xchg
add
loope
xchg
sbb
adc
imul
sub
mov
sub
adc
bound
push
arpl
xchg
xchg
ja
jmp
lods
in
and
inc
mov
enter
shr
jae
and
jecxz
pop
adc
sub
push
cmpl
out
out
sub
dec
loop
push
sub
out
insb
cli
cli
jbe
cs
or
sbb
and
cld
fstpl
add
pop
xor
jecxz
inc
pop
push
insb
sub
or
jp
pop
mulps
lea
mov
test
movsb
mov
adc
vcomiss
imul
outsl
jl
outsb
adc
mov
pusha
jo
movsb
jae
int
jbe
dec
dec
xchg
popf
pusha
jnp
mov
pop
adc
xor
mov
pop
cld
inc
mov
sbb
push
dec
jp
and
lods
notl
mov
insl
lods
sub
inc
lcall
jge
pop
or
sub
and
xor
rcll
inc
aaa
adc
jnp
jecxz
pop
dec
mov
mov
xlat
jo
cs
aaa
inc
and
add
pop
mov
mov
sti
sbb
test
cmc
sbb
xchg
cmp
loope
push
aaa
sbb
xchg
bound
xor
add
mov
popf
rorl
pop
movsl
mov
int
push
jo
pop
aad
ficomps
mov
xor
sbb
fists
test
ret
cld
je
or
jae
jno
or
cmpsb
adc
aaa
mov
ret
mov
mov
mov
adc
mov
or
pop
mov
add
jno
icebp
jge
inc
and
test
pop
xchg
outsl
mov
imul
jns
cltd
add
mov
bound
nop
add
loopne
add
pushf
lret
lret
ficomps
pop
mov
test
xchg
jle
jle
daa
jp
fldt
test
aas
popf
lds
mov
mov
xor
loope
out
movsl
mov
sbb
aaa
pop
mov
jle
jl
ret
outsb
adc
pop
mov
inc
lock
out
stos
out
xlat
mov
cwtl
cmp
mov
mov
mov
jmp
aad
add
mov
mov
outsl
and
xchg
lcall
pop
xor
sub
out
inc
push
sub
pop
inc
pop
adc
mov
xorl
std
je
dec
ret
sbb
jne
adc
or
push
or
mov
lea
cltd
stos
and
test
cmp
xchg
stos
push
cmp
adc
sub
sbb
into
sbb
or
cmc
sbb
sbb
pop
movsl
push
mov
clc
insb
push
xor
jno
cwtl
loopne
mov
sub
pop
lock
cmc
std
mov
loopne
mov
mov
ja
xchg
mov
mov
push
scas
into
repz
jp
ja
iret
xchg
mov
and
in
imul
int
xchg
nop
push
mov
mov
sahf
xlat
call
ret
dec
mov
stc
xor
scas
pop
adc
mov
dec
mov
aad
jl
mov
fsubs
sub
add
and
push
push
es
adc
ret
sbbl
pop
lret
xchg
mov
push
gs
test
arpl
push
aam
and
sbb
xchg
mov
sub
ud2
fwait
push
out
mov
je
mov
loope
xor
fimuls
pushf
mov
inc
cld
insl
lods
pop
sbb
loope
mov
mov
popa
das
inc
leave
les
adc
xor
ja
and
negl
in
add
cmpb
sub
lds
xchg
aas
xchg
sbb
xor
fldcw
jg
aaa
das
roll
inc
mov
fwait
adc
repz
icebp
xchg
cmp
mov
test
fistl
es
xor
pop
and
xor
mov
and
stc
and
icebp
fisubrl
mov
inc
out
mov
ljmp
stos
xor
inc
lcall
fidivrs
mov
or
xchg
cmp
pop
in
push
popf
cmpsb
rcll
adc
xor
mov
stc
int3
popa
cli
ficomps
pop
ud1
mov
subb
aaa
mov
inc
push
stc
push
pop
push
jle
xchg
ret
std
sbb
jnp
and
call
jne
xchg
les
lahf
sub
repnz
add
aam
cld
sarb
adc
mov
js
pop
arpl
inc
repnz
incb
push
add
push
mov
sbb
jns
inc
dec
outsl
pop
or
mov
dec
xchg
add
jo
xor
push
in
or
mov
stos
adc
push
sbb
cs
mov
pop
xor
xor
pop
insb
das
mov
sahf
js
sub
shlb
cltd
mov
adc
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
or
add
lret
push
loopne
mov
rol
add
or
into
adc
mov
ljmp
pop
pop
icebp
mov
out
mov
out
lds
enter
lea
movsb
testl
inc
cmc
dec
stc
xchg
adc
xchg
or
add
cld
jb
pop
adc
loope
call
mov
xchg
sbbl
fldl
test
sub
lahf
or
in
call
loopne
push
hlt
aam
add
and
lcall
mov
sub
sub
add
push
scas
jbe
stc
movsb
sti
bound
repnz
dec
lock
push
rclb
inc
mov
cmp
int3
out
jae
fsin
push
push
xor
or
and
inc
mov
inc
xchg
cmp
cmp
sub
pop
test
outsl
sbbb
push
lods
das
inc
sub
movsb
lds
out
dec
pop
in
cmpsb
outsl
lds
adc
fs
jmp
jl
out
mov
int
aaa
or
or
js
insl
xchg
adc
adc
sub
or
mov
pop
rclb
lods
inc
adc
hlt
insb
mov
push
xor
fdivl
jbe
fisubrl
sub
mov
mov
pop
out
pop
ljmp
repnz
mov
or
shlb
cmp
lods
adc
arpl
jnp
push
incb
xor
test
dec
mov
mov
mov
pusha
xor
xor
das
iret
jne
push
les
lcall
pop
dec
int3
xlat
pop
push
mov
rorl
ljmp
mov
push
arpl
cltd
cmpsl
hlt
xchg
dec
jne
rcrb
cwtl
shl
sbb
mov
pop
xchg
nop
sbb
push
jo
mov
add
cmp
sahf
loop
sub
addr16
xchg
push
jecxz
faddl
insl
icebp
cltd
mov
push
cli
lcall
xor
fidivrs
pop
lret
idivl
sbb
mov
xlat
mov
sti
test
push
jmp
push
cltd
mov
push
xchg
hlt
pop
cli
ret
adc
pop
add
mov
hlt
iret
repnz
hlt
popa
test
push
cmc
fistpll
out
gs
ffree
jp
arpl
push
pop
adc
jbe
sti
idivb
adc
es
jle
push
push
pushf
mov
adc
pop
xchg
push
adc
int
inc
rclb
push
ljmp
insl
push
add
jmp
pop
mov
out
push
popa
pop
inc
in
in
cld
and
std
lods
cmp
out
xor
int3
push
adc
outsl
jbe
and
ljmp
outsl
outsl
insl
jg
mov
add
outsb
fs
jmp
das
jmp
test
and
shr
int
jbe
gs
ja
dec
fbld
mov
nop
scas
popa
insb
out
lods
pusha
xor
ss
popa
shlb
add
pop
jmp
testb
lcall
add
jle
mov
ss
fucomi
dec
bound
ds
mov
inc
int
cli
daa
xchg
dec
push
adc
dec
fisttps
repnz
in
or
mov
es
outsb
fwait
inc
rolb
scas
xrelease
js
call
in
push
xchg
inc
lea
xor
ss
outsb
aam
dec
inc
pop
push
jmp
inc
add
xchg
push
shl
xor
sub
ror
lods
incb
jge
cmc
andl
roll
push
sbb
add
push
jecxz
outsb
flds
cmp
aaa
pop
sub
and
orl
popf
mov
or
push
cli
adc
jmp
and
pusha
pop
cs
dec
inc
jle
jl
popl
cmp
xchg
dec
mov
dec
mov
iret
fucomp
xor
push
rolb
and
mov
cmp
add
lret
stos
cmp
mov
inc
rcll
sahf
and
loop
ljmp
xor
dec
dec
mov
cs
cmpsl
mov
sbb
push
neg
xchg
mov
jp
mov
mov
xchg
xlat
in
lcall
frstor
mov
inc
test
dec
sahf
mov
dec
test
pop
cwtl
scas
dec
pop
add
push
lcall
pop
mov
xor
cs
pop
aad
and
shrb
test
leave
int3
sahf
into
rcll
sbb
jle
das
push
adc
iret
dec
xorl
pop
lods
mov
ret
add
adc
jle
cmc
call
iret
jnp
cltd
fmull
leave
ljmp
aas
daa
pop
jmp
rcll
cli
xchg
cld
mov
inc
dec
inc
sbb
sarb
push
pop
mov
scas
push
or
push
test
pop
xchg
pop
inc
insb
loope
stos
push
or
test
scas
add
enter
cmp
push
dec
dec
out
pop
mov
xor
mov
sbb
and
xchg
test
inc
lret
cs
push
test
loopne
mov
xchg
je
nop
pop
movsl
stos
sbb
roll
repnz
test
xchg
test
cmpsl
adc
out
jg
repz
jp
xchg
ja
push
inc
insl
jb
adc
movsb
cmp
testb
jl
in
iret
inc
cmp
cmp
mov
idiv
adc
sbb
mov
jle
fists
jecxz
add
inc
popa
cld
dec
mov
lds
pusha
aad
idivl
fcompl
mov
iret
or
fcoms
outsl
movsb
out
stc
pop
cmp
lea
adcb
mov
xchg
dec
leave
and
or
mov
add
sbb
mov
into
push
push
mov
pop
std
push
leave
ficoml
adc
sti
dec
dec
mov
xchg
adcl
pop
fimull
sarl
xchg
cmpsl
idivl
xor
sub
and
insl
outsb
push
mov
in
jae
push
std
xchg
sub
add
sbb
pop
js
loop
mov
in
mov
add
xchg
lock
and
dec
jb
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
push
inc
or
add
mov
push
inc
faddl
push
sub
sarl
loop
fistpl
or
insl
pop
sti
push
dec
fcmovnbe
mov
inc
inc
jmp
push
or
dec
gs
stc
paddusb
push
push
inc
adc
adc
mov
cmpsl
mov
repz
xlat
push
add
lret
insl
jl
pushf
pop
aam
xchg
insl
popa
or
xchg
ljmp
pop
sub
rorb
mov
inc
cli
mov
jno
fldt
mov
mov
push
ret
inc
mov
loopne
pop
in
adc
sub
jb
add
nop
pop
ret
movsb
cmp
push
push
inc
mov
cltd
mov
leave
cmp
mov
jno
adc
and
inc
data16
cmpsl
mov
mov
add
orl
out
loope
sarb
ja
lret
xchg
cwtl
dec
loop
mov
out
outsl
cmp
sbb
test
mov
add
jo
jecxz
out
leave
enter
repz
push
movsl
adc
and
roll
lret
and
dec
repz
pop
je
pop
mov
push
or
or
repnz
in
pop
mov
es
mov
inc
test
or
icebp
aam
cmpsl
jae
xchg
mov
jne
mov
mov
es
push
lds
sbb
sub
arpl
sub
xchg
js
inc
add
das
pop
adc
lret
pop
mov
jge
mov
add
mov
xchg
or
repnz
out
imul
mov
xchg
adc
ss
add
popf
push
inc
subb
pop
loop
push
daa
inc
push
pop
insb
stos
push
aam
ret
pop
mov
mov
inc
data16
test
pop
inc
xorb
out
or
and
or
stos
loope
cmc
cs
jecxz
xlat
mov
fists
icebp
and
mov
ret
dec
in
mov
push
leave
in
pop
mov
repz
xchg
add
xchg
mov
mov
push
hlt
stos
gs
pop
fisubrs
jno
mov
dec
icebp
inc
jmp
fcomps
xchg
ret
int3
fcmovu
jmp
fcompl
push
mov
xchg
adc
test
inc
mov
mov
fistpl
int3
jbe
push
sbb
pop
sub
mull
inc
pushf
pop
pop
aaa
mov
inc
inc
lock
or
into
push
jb
push
sub
xlat
dec
mov
mov
stos
inc
cwtl
dec
in
cli
pop
sbb
imull
into
sbb
pop
int3
loop
or
out
in
outsl
ss
imul
daa
adcl
mov
xchg
dec
fmull
icebp
and
inc
fcoml
out
out
sub
jns
fcoms
ja
jg
arpl
fstp
test
stc
xchg
scas
add
and
inc
cld
xchg
and
jnp
pop
push
inc
push
sub
xchg
mov
jmp
and
xchg
jp
sub
cmp
icebp
pop
mov
inc
in
scas
jnp
lret
jns
int3
pop
andb
lea
mov
and
loopne
inc
inc
add
pusha
imul
mov
cld
add
shrb
push
fisubrs
ss
dec
or
rcr
sti
in
fisttpl
std
sbb
jae
dec
popw
xchg
repz
call
fisttpll
push
push
inc
inc
in
dec
mov
out
or
inc
or
mov
cmp
or
and
fldl
jmp
push
push
sbb
mov
movsb
das
pop
aam
lods
push
jno
aad
pop
cmpsb
int3
push
addr16
push
and
adc
imul
lret
outsl
xchg
clc
xchg
mov
xchg
insl
xchg
or
mov
mov
in
fnstenv
icebp
in
fstp
cmp
fwait
xor
sbb
dec
push
icebp
lods
js
das
mov
jae,pn
xorb
push
mov
mov
std
xlat
arpl
test
insb
enter
loope
lock
cs
stos
cli
sub
mov
int
jmp
iret
in
or
fmull
add
int3
mov
popa
sub
xchg
sbb
mov
cmp
ja
push
insl
repnz
aaa
mov
pusha
daa
insb
sub
push
mov
loop
icebp
xchg
adc
jno
fstps
mov
jnp
outsl
rorb
and
outsb
jmp
sbb
sar
lock
ficomps
pop
inc
mov
inc
xorl
imul
xacquire
je
or
or
jbe
dec
jae
sbb
ror
or
mov
aaa
mov
mov
test
aad
inc
repz
xor
lds
push
pop
stos
push
data16
jo
fisubl
std
cltd
stos
xor
jbe
mov
sbb
push
pop
pop
add
adc
stos
xchg
push
cmp
loop
mov
aas
fdivs
lcall
leave
adc
add
mov
pop
es
aam
cmp
dec
jmp
out
inc
insl
pushf
mov
jp
ss
add
fmull
push
rclb
into
cmp
in
jmp
scas
ds
sti
les
lret
mov
iret
jnp
int3
iret
test
push
mov
out
xor
dec
sbb
pop
imul
fstl
add
shrb
fs
jp
add
rcll
sbb
sbb
mov
fcomp
and
imul
pop
frstor
lods
inc
loop
fimull
xor
inc
add
xchg
sub
push
adc
rolb
call
dec
dec
xor
mov
loopne
out
xor
in
jmp
loop
cmp
mov
call
cmpsl
test
xor
sbb
int
dec
xlat
icebp
or
mov
add
pop
ret
ljmp
jae
ljmp
push
mov
into
lock
sbb
inc
cs
push
movsl
pop
repnz
stos
add
pusha
push
mov
add
jmp
adc
and
mov
xor
mov
pop
and
jbe
test
cmc
xchg
int3
loop
dec
push
in
lods
inc
fwait
loopne
and
fwait
xor
loopne
rcll
movsl
cmp
xor
jnp
inc
xor
in
aas
aad
and
mov
repnz
cmp
mov
mov
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
push
and
mov
mov
fcoml
loopne
dec
lea
cmp
sbb
cs
loopne
addr16
inc
in
fildl
xchg
adc
adc
js
and
out
inc
outsl
stc
cmpb
mov
xor
dec
mov
insb
inc
add
mov
jmp
sub
push
out
std
fmuls
cmc
pop
lahf
cltd
out
sti
shlb
add
outsl
fldcw
inc
in
movsb
add
xor
imul
cmpsb
and
rolb
xchg
rolb
mov
jmp
sub
sub
sahf
jnp
xor
test
push
les
stc
xor
fsubl
pop
int
dec
jl
push
neg
pop
int
mov
lds
inc
ret
stc
insb
shll
xor
sar
push
mov
adc
mov
pop
fistl
dec
addb
ds
test
sbb
divl
cmp
mov
sub
call
pushf
xor
test
pop
jo
test
add
add
adc
pushf
pushf
adc
jmp
loop
inc
push
xchg
scas
fldenv
xchg
jmp
daa
and
push
jo
xchg
insb
mov
push
jbe
pop
scas
dec
adcl
sahf
fdivl
dec
icebp
pushf
cmpsl
jle
adcl
mov
adc
int
add
es
nop
jno
sbb
jbe
subb
push
sub
xor
xchg
add
fsts
dec
and
xor
test
in
ja
push
in
hlt
std
fsubrl
push
cmp
mov
xchg
loope
mov
sub
int3
fimuls
inc
ss
inc
add
imul
mov
pushf
push
popf
jo
xor
pushf
jge
jg
neg
insb
push
or
cmpsl
xlat
mov
hlt
cmp
lcall
movsb
jg
inc
or
pop
and
mov
sub
setle
and
jl
icebp
outsl
xchg
loopne
fdivrl
in
or
pop
xchg
xlat
clc
pop
fbld
xor
ljmp
movb
dec
test
xor
mul
insl
in
hlt
jmp
sbb
inc
jp
add
rep
cmp
scas
inc
scas
call
stos
jmp
sbb
and
sbb
hlt
jnp
and
in
enter
push
ds
fists
fstpt
je
imul
js,pn
ret
mov
sub
mov
movsb
nop
inc
js
stos
lods
iret
aaa
pop
push
sbb
in
push
and
inc
lahf
sbb
pop
pop
jb
mov
rcll
in
and
push
pop
xor
repz
xchg
out
sbb
mov
scas
aaa
andb
lock
sub
sbbl
insl
nop
add
jmp
ror
dec
out
js
mov
xor
pop
sub
std
mov
dec
mov
jl
js
xlat
mov
dec
ret
or
inc
sahf
push
xorl
aad
rorl
push
mov
mov
jmp
adc
pop
cmp
fwait
icebp
dec
cld
sub
xlat
pop
decl
shll
dec
pop
push
test
fwait
sub
mov
fdivrs
repnz
xchg
mov
rol
mov
xor
inc
aad
pop
popf
adc
out
adc
pop
push
ljmp
scas
push
sub
aad
mov
and
mov
femms
cmp
push
aas
inc
dec
test
or
mov
cmpb
jle
sti
adc
push
out
jnp
push
aas
scas
out
inc
in
lahf
pop
ja
pushf
push
out
int3
into
mov
int
xchg
mov
jl
jne
ds
and
sub
pop
les
xchg
mov
add
push
mull
add
movsl
sbb
aad
repnz
push
and
push
sub
ss
scas
rclb
lds
js
mov
inc
bound
cmp
push
dec
enter
sbb
fsub
pop
xchg
jl
xchg
adc
cmpsb
cmp
mov
rolb
in
mov
or
push
cmp
fisubl
outsb
dec
sub
imul
leave
jne
call
sbb
or
push
xor
adc
sub
aam
xchg
andl
imul
test
lock
mov
popa
ljmp
sub
ja
dec
xor
dec
out
sub
cmpsl
sar
pop
mov
sahf
fimuls
decb
cmp
fisubrs
shr
cli
iret
mov
lock
xchg
sbb
aas
xchg
pop
arpl
sarb
clc
insl
repnz
scas
fsts
fcompl
jo
pop
mov
rolb
daa
cld
push
outsb
adc
mov
pop
adc
xchg
or
test
jns
add
fimuls
jno
lods
mov
push
icebp
lods
and
insl
and
stos
xor
or
js
jmp
and
push
rorb
repz
out
pop
sar
fidivl
pop
xchg
jns
ss
std
int
lcall
pop
xchg
sbb
dec
lret
out
jbe
rorl
outsl
jmp
push
sbbl
std
pop
fnstenv
sub
adc
mov
cmp
frndint
lods
out
jl
aad
cmpsl
cmp
aas
in
into
xchg
imul
jmp
sar
mov
inc
xchg
test
lret
adc
cmp
aad
addb
sbb
test
mov
lock
cmc
xchg
filds
xchg
sub
fcoml
cmp
test
mov
movsl
ds
jmp
mov
add
out
gs
add
sbbb
and
cmpsb
ficoms
insl
jl
mov
sarl
pushl
dec
sbb
dec
jge
lea
sbb
push
pop
mov
pushf
loope
pop
adc
xchg
cwtl
call
aad
sub
test
add
add
aas
push
xor
jno
test
sub
sbb
cmp
lods
imul
in
jp
xlat
jmp
ljmp
cmp
adc
stos
adcl
sbb
pop
mov
or
outsl
imul
dec
add
pop
gs
pop
movsl
sub
outsb
test
jae
into
xchg
imul
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
dec
or
add
js
gs
pop
adc
movl
fdivrp
fs
js
lock
lcall
mov
fisubs
shlb
push
sbb
and
or
sub
adc
pop
add
pop
loope
stc
sub
pop
repnz
shl
inc
fs
test
shlb
mov
cmp
nop
sbb
xor
dec
repnz
cs
clc
adcb
adc
mov
imul
jns
jo
out
jp
ret
mov
pushf
add
outsb
loop
xchg
sbb
out
cli
adc
ret
inc
icebp
mov
add
loopne
pop
add
and
out
aaa
dec
insl
fimull
jo
adc
cmp
int3
cmp
stc
in
int3
push
js
and
jge
gs
jno
jb
push
aas
and
lds
loope
inc
jmp
xor
out
addr16
xchg
out
std
push
fnstenv
jg
jle
dec
or
fistpll
jl
mov
xor
repnz
mov
push
jg
mov
iret
mov
pop
add
pop
iret
cmp
rdpmc
pop
sbb
sbb
sarl
repz
orb
adc
jp
jl
inc
xchg
cmc
test
fisttpll
sbb
pop
mov
push
call
jl
cld
and
das
xchg
aad
lret
scas
stc
xchg
into
xor
inc
adc
and
dec
in
fimuls
pusha
mov
push
sbb
cmpsb
jle
loope
outsl
adc
mov
clc
inc
and
fsubr
pushf
xlat
mov
sahf
fildl
mov
sbb
cmp
cli
push
push
pop
jle
mov
mov
mov
popa
hlt
sbb
addb
jo
mov
xor
ds
adc
mov
inc
adc
out
xchg
cmp
and
jmp
mov
pop
adc
sub
push
mov
xor
inc
test
mov
cltd
mov
fistl
jp
mov
mov
adc
push
lods
and
and
cmpsb
jbe
addb
mov
xchg
mov
cmpsb
xchg
lahf
and
insl
lds
sti
out
cltd
data16
push
or
pop
into
out
lcall
in
xor
xsaveopt
xor
data16
add
xchg
lock
imulb
cmp
jno
mov
mov
roll
aas
or
cmc
mov
sahf
cmc
sbb
pcmpeqb
and
out
scas
xor
xor
mov
ljmp
cli
and
pop
xchg
mov
adc
xchg
push
sub
sbb
rcll
adc
fstl
push
xor
push
push
ret
repz
movsl
stos
dec
or
clc
inc
adc
mov
and
push
jne
jno
dec
jmp
in
loope
inc
xor
lods
jnp
dec
cmc
push
adc
sub
push
ret
or
jl
cld
fiaddl
aam
add
adc
hlt
loope
sahf
lock
mov
enter
push
lds
jge
pusha
inc
test
std
pop
popf
add
xchg
aaa
push
add
js
imul
or
sarb
xor
adc
sbb
sub
loop
daa
std
test
jg
icebp
into
inc
jne
test
std
push
out
je
inc
nop
pop
adc
sahf
mov
or
xchg
mov
mov
push
repnz
and
idiv
addl
dec
lods
test
ljmpw
sub
icebp
ja
and
les
addr16
jp
cli
stc
or
inc
mov
jmp
stos
cmc
pop
std
in
push
mov
xor
sub
aam
test
sbb
jmp
mov
mov
lahf
stos
insl
repz
sbb
out
test
pop
and
shrl
mov
cmp
fstl
mov
dec
add
mov
repz
clc
xor
imul
jmp
mov
and
mov
dec
fdivl
adc
rcrb
dec
popa
xchg
sub
hlt
jge
add
cmpsl
inc
imul
adc
aam
cmp
add
lock
out
inc
add
cli
push
mov
inc
push
mov
cmpsl
push
insb
mov
jp
mov
mov
pop
outsb
pop
mov
inc
in
mov
lahf
vpavgw
fists
adc
cltd
pop
outsl
and
cwtl
fidivs
xorl
mov
cmpsb
test
sbb
std
outsb
xchg
stos
roll
add
lock
in
or
mov
push
dec
mov
sbb
int
pusha
sbb
imul
out
mov
push
mov
fs
jle
ljmp
inc
mov
divb
push
ljmp
push
ja
inc
pop
mov
pop
dec
sbb
xchg
mov
loop
jbe
or
and
mov
inc
sub
mov
mov
xchg
add
mov
cwtl
or
lock
mov
inc
inc
mov
pop
stos
pop
adc
jnp
sub
repz
outsl
adc
jo
clc
aad
out
inc
sub
inc
push
andb
cmp
sahf
loopne
inc
je
jo
dec
icebp
mov
adc
jo
add
call
insl
xchg
cmc
pop
test
push
rorl
imul
fsubr
xor
xor
jecxz
test
or
dec
sub
mov
sbb
add
cltd
pop
push
mov
int
leave
clc
inc
std
lds
pop
iret
or
cmp
dec
pusha
dec
scas
mov
int3
pop
ficoml
movsb
push
mov
cmp
sbbb
mov
pushf
sbb
gs
or
pop
adc
pop
pop
into
xor
repz
mov
in
jo
into
mov
dec
or
mov
push
in
es
sub
push
pop
je
and
es
xchg
sarb
mov
mov
lods
inc
adc
aam
pop
mov
jno
aam
in
mov
daa
push
inc
push
adc
and
and
test
push
call
sub
adc
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
cmove
addr16
mov
cmpsb
mov
mov
mov
hlt
mov
int
or
test
pop
mov
or
sub
stos
into
jno
stc
mov
jo
mov
or
stos
cwtl
out
test
xchg
add
stos
out
cmp
daa
xchg
inc
cli
arpl
jno
add
test
sub
cmp
push
and
inc
cmpb
rorb
xchg
cmpl
cmp
dec
mov
enter
push
inc
jl
cmc
jmp
pop
jbe
cmp
bound
enter
mov
xorl
arpl
test
mov
into
fwait
loope
loope
fs
add
dec
xor
xchg
addb
adc
ja
rcrb
jae
rclb
cmpsb
cmp
in
movsb
pop
push
xchg
push
jmp
inc
fisttps
out
in
mov
dec
xchg
fsubs
ret
push
sti
mov
cmc
or
test
mov
or
jge
xchg
rcl
add
inc
sbb
pop
cld
insl
jne
inc
dec
and
aad
sbb
fcmovnb
outsl
sub
ret
movsl
addb
mov
push
sub
lahf
in
sti
or
jnp
xchg
push
daa
xchg
sahf
inc
jne
sbb
mov
jg
and
mov
xor
adc
test
mov
xor
sbb
cmp
push
jge
pop
jg
fcoms
or
loop
xor
push
cmpsl
cld
push
cmc
pusha
jmp
in
sbb
aam
jecxz
add
xchg
scas
mov
out
mov
ljmp
cli
jne
jl
pop
jmp
fdivr
cs
push
xor
je
dec
xchg
jg
sub
jle
loope
jmp
iret
adc
lret
adcb
dec
jno
je
shrb
aam
mov
push
and
in
xchg
adc
mov
cmp
mov
das
leave
sub
sub
in
or
je
xor
cmp
repz
adc
lret
stos
out
add
adc
jo
add
sbb
pop
xchg
pop
fdivrl
lcall
push
test
push
cmpsl
bound
testl
dec
mov
inc
push
fistpll
dec
fistpll
mov
cmpsb
movsl
pop
mov
arpl
test
test
cmp
sarb
inc
mov
addr16
ret
decb
push
xchg
adc
mov
lock
cmc
jp
call
push
jae
xor
fists
insb
sbb
dec
mov
push
js
aam
xchg
adc
pusha
outsl
idivl
mov
cltd
mov
lea
leave
dec
pop
sbb
dec
push
mov
cli
pop
cmpsb
and
sbb
stos
lret
lret
call
jbe
ds
pop
in
pop
data16
push
xchg
mov
sbb
sbb
dec
push
add
ljmp
arpl
and
cli
jnp
ret
cwtl
popa
call
cmp
inc
pop
inc
insb
ds
ja
arpl
es
push
hlt
int3
push
and
rcrl
addr16
test
push
loop
mov
sub
cmpsb
adc
jne
aas
jne
cmp
fmuls
outsl
stc
into
jno
jp,pn
push
xchg
enter
out
lahf
insl
push
arpl
sub
daa
add
mov
sub
popf
cld
cli
rolb
pop
push
fsts
lds
jmp
mov
sbbl
out
xor
mov
aas
and
test
stos
addr16
pop
xor
add
xlat
sbb
mov
in
loope
pop
btc
mov
sub
push
mov
add
cmp
xor
jns
mov
cmpsb
sub
ljmp
fcoms
ss
pop
ret
inc
and
enter
push
or
push
sti
hlt
rorb
int3
sbb
mov
mov
add
int
xlat
mov
loope
pusha
mov
add
inc
in
popa
cli
jae
imul
mov
mov
xchg
xchg
dec
lock
push
mov
mov
je
insb
or
jno
mov
pop
mov
add
push
loop
and
enter
push
xor
sbb
fcmovnb
mov
fldt
xchg
movsb
dec
and
cmp
mov
add
jo
subl
sbb
push
clc
stos
cmc
out
push
pusha
xchg
movsb
mov
aad
sbbl
jge
mov
aam
sbb
fucomi
fwait
mov
or
push
movsl
add
cltd
cs
fidivs
inc
cmp
std
cmpsl
repnz
lods
mov
inc
push
insl
mov
fldenv
in
fldenv
add
stos
jle
dec
nop
movsb
mov
sub
ljmp
mov
int3
push
adc
sar
mov
sub
addr16
sbb
addr16
nop
mov
cmpsl
mov
in
mov
inc
pusha
mov
js
pushf
jbe
dec
hlt
sbb
movl
in
je
or
lahf
jp
sahf
add
fistpll
jnp
adcb
addr16
fwait
sub
into
jmp
jo
fbld
dec
inc
pop
scas
adc
pusha
adc
clc
fsubrl
push
out
daa
mov
jo
mov
scas
inc
shl
adc
cmpb
and
jecxz
xchg
lcall
dec
divb
mov
add
shrl
sub
es
mov
cmpsb
dec
sbb
cmp
test
push
sub
dec
inc
loop
inc
mov
cmpsb
xlat
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
mov
loope
invd
add
das
stos
mov
mov
mov
scas
insl
and
xchg
mov
xchg
ss
mov
adcb
mov
sub
in
int
movsb
jmp
shll
and
int3
leave
cli
adc
call
adc
push
inc
leave
hlt
dec
sub
arpl
test
pop
xor
je
lret
fs
pop
mov
mov
repnz
in
stc
sbb
sbb
pop
loope
pop
popa
xchg
dec
in
pusha
push
sbb
fldt
rcll
hlt
popa
and
mov
jbe
leave
js
cld
loope
sbb
jp
es
jle
add
cmp
pusha
jno
xchg
out
or
add
lea
sarl
jp
stos
pop
or
dec
or
stos
or
mov
pop
inc
lahf
inc
xchg
or
push
les
sub
push
jo
aam
arpl
ret
and
mov
sub
add
js
jbe
ljmp
add
in
mov
xchg
ja
ljmp
fcoms
inc
fisubrs
sbb
fs
xchg
movsl
loop
add
push
subb
mov
enter
mov
mov
inc
dec
fidivrs
mov
dec
sahf
push
loopne
shlb
add
mov
jmp
adc
sbb
aas
push
sbb
add
push
or
std
ret
mov
mov
mov
or
pop
loope
jnp
inc
test
das
scas
xor
fwait
mov
aaa
ret
mov
or
xor
lcall
loope
fdivp
mov
mov
pop
xchg
cmp
add
idivb
dec
xor
cmpsb
daa
sub
arpl
insb
mov
jns
popa
inc
mov
loop
pop
fst
es
push
sub
jo
mov
std
rorl
nop
mov
push
stos
dec
inc
out
mov
pop
test
fmull
jg
out
in
pushf
adc
je
lock
cmp
iret
mov
fists
adc
xor
sbb
jne
dec
jmp
cmc
adc
sbbb
jb
sti
inc
xchg
movl
daa
dec
ds
push
xchg
mov
cmp
xchg
sub
cmpl
inc
adc
inc
mov
push
pop
or
xlat
pop
sbb
in
inc
fnclex
enter
fmuls
mov
out
fs
mov
inc
jb
out
push
repnz
add
fucom
mulb
imul
mov
stc
leave
mov
lahf
loop
iret
data16
sbb
test
ficoms
cmp
adc
inc
out
fnstcw
sub
xchg
xchg
sbb
push
add
scas
stos
dec
fcmovb
ret
and
ljmp
sahf
ljmp
cmpb
jle
and
adc
add
pushf
popf
out
adc
sub
push
mov
pop
xor
sbb
push
jp
out
pushf
xor
fsubrl
mov
pop
pop
movsb
or
test
ret
adc
push
xlat
xor
ss
push
add
ret
adc
xchg
pop
xchg
pop
sub
push
sahf
in
xlat
repnz
cmp
inc
int
imul
add
adc
or
sub
mov
jg
cmp
test
dec
pop
adc
sbb
adc
rolb
inc
lcall
inc
out
aad
mov
xchg
pop
addr16
inc
and
xor
mov
insl
sbb
push
movsl
push
cmp
push
pop
mov
push
xlat
jb
sbb
call
in
xchg
push
stos
add
or
add
lods
test
shll
mov
fiaddl
cmp
adcl
rcrb
arpl
fisubs
addb
das
lods
jle
ficomps
outsl
test
mov
loopne
sbb
xchg
mov
mov
xchg
sub
jg
mov
push
push
mov
add
pop
push
das
mov
daa
stos
aas
loopne
jle
cmpsb
add
mov
lret
test
outsl
roll
dec
ljmp
subb
push
daa
pushf
mov
insl
scas
or
jne
xchg
push
xlat
adc
xchg
add
cmp
and
daa
je
jbe
sahf
pop
jl
subb
xor
xchg
sbb
shl
pop
lods
inc
out
std
js
mov
and
stc
inc
mov
xor
lea
movsl
mov
cmp
xchg
push
and
add
out
mov
cmp
mov
jmp
sbb
cltd
jne
imul
jecxz
outsb
stos
jl
cmp
xor
js
adc
jle
cmpsb
jmp
stos
adc
mov
sub
out
or
sub
sub
das
and
icebp
rorl
leave
pop
mov
jns
inc
jo
push
test
pop
mov
xchg
cmp
cli
out
push
or
pop
out
or
push
rcl
sbb
movsb
pusha
inc
pop
stos
and
pop
lret
out
nop
ret
in
xchg
cmpl
mov
sub
ret
ret
loopne
adc
cmp
pop
and
ret
push
mov
pop
test
rol
hlt
pop
rcrl
sub
outsb
inc
stos
sbb
ds
and
int3
bound
lret
lcall
jg
pop
cmp
cmp
jmp
stc
push
mov
xchg
mov
lcall
mov
sub
mov
iret
scas
insl
jmp
fcompp
xchg
loope
ss
aam
popw
movsb
xchg
mov
imul
addr16
aam
sub
xchg
jp
fstpt
aad
lret
in
or
push
push
mov
push
dec
clc
jo
mov
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
outsb
xchg
mov
invd
add
push
jno
inc
push
and
or
out
xchg
mov
lods
shrl
sbb
push
out
int3
shrl
mov
out
jecxz
pop
arpl
mov
jne
jnp
xchg
push
clc
mulb
cmpsl
fwait
sbb
int
scas
fwait
mov
add
fstp
into
dec
jbe
notb
add
jb
lods
xor
dec
lahf
popa
sub
jno
std
push
inc
sub
bound
xorl
sub
orl
jb
nop
mov
push
es
or
mov
rcl
add
jl
pop
bound
and
outsb
xor
xor
lret
add
mov
jle
std
add
shr
push
jg
push
xlat
cmp
adc
or
int3
daa
lds
fcmovnbe
or
rcrb
filds
into
ret
add
aas
icebp
cmp
xor
fs
divb
add
iret
jl
sbb
sbb
push
xchg
cld
pop
xor
rcll
add
or
mov
fdivrl
xchg
int
xchg
das
pop
xlat
add
iret
scas
lahf
pushf
push
ja
int3
mov
sahf
fcomi
out
or
xchg
mov
imul
sub
sarb
sbb
mov
cmpsb
jp
subb
out
push
pop
aam
inc
mov
sub
and
xchg
repz
ficompl
xchg
scas
xchg
out
add
xchg
dec
cmc
je
shlb
je
mov
add
xchg
test
insb
or
add
addr16
fs
ret
push
xor
stos
and
adc
out
adc
and
inc
add
add
pop
xchg
xchg
call
fadds
push
jb
xor
nop
cmp
andl
pop
mov
scas
adc
data16
pop
jl
mov
xor
sbb
mov
shrb
lret
or
inc
inc
out
dec
sahf
inc
dec
xorl
loop
inc
cmpsl
inc
adc
rorl
sub
sarb
out
adc
mov
vandnps
out
adc
mov
testb
rcrb
mov
sti
insb
sub
cmp
jmp
ljmp
xchg
sbb
xchg
dec
data16
xor
cltd
mov
and
clc
bound
push
pop
add
idivb
cwtl
aaa
loop
loopne
scas
stc
in
insl
or
cmp
push
call
js
jg
inc
push
jbe
mov
out
movsl
add
lds
inc
ss
sbb
or
sbb
rsm
insb
scas
cmpb
sti
sbb
xor
repnz
sbb
or
sub
pop
das
inc
mov
rcrb
in
lods
imul
mov
neg
ret
loopne,pt
push
shll
imul
inc
cmc
cld
dec
mov
sar
in
pop
sub
ja
lods
insb
out
inc
decb
xchg
lock
sub
rcrl
or
dec
mov
je
push
insb
jne
mov
jl
insl
pusha
test
and
fildll
stos
into
std
sub
stos
push
jmp
scas
dec
daa
ret
push
sarb
cmpsb
lahf
xchg
or
cmpsb
outsl
lds
pop
xchg
adc
dec
fwait
lods
pop
inc
les
ret
in
out
into
mov
fbstp
jo
icebp
jae
cmp
in
subb
inc
call
js
mov
rcl
push
sub
cmpsb
les
fidivrs
bound
clc
add
stc
adc
mov
daa
decl
in
scas
cmp
fsub
pop
sti
sbbl
add
inc
cmp
cmp
cld
jno
ficompl
dec
xlat
int
inc
add
mov
mov
call
push
test
sbb
lret
jmp
mov
lret
jbe
jnp
into
mov
repz
mov
bound
adc
mov
xor
mov
inc
and
mov
xchg
xor
shll
enter
or
cli
pop
jmp
loopne
sbb
pop
mull
icebp
push
mov
in
cld
cmp
mov
sti
int3
pop
sbbl
fcoml
lock
shll
aad
inc
mov
ljmp
lret
aam
mov
or
push
cmpsb
inc
filds
nop
lahf
shll
or
out
insb
inc
sub
pop
out
lods
imul
dec
mov
cmpsl
in
jg
sbb
sarb
test
fmul
sub
xor
sbb
mov
cmpsb
leave
jmp
fldcw
dec
mov
lds
pop
cmp
xchg
leave
adc
cmp
xchg
pushf
outsb
ljmp
fxam
adc
ficoms
jmp
fistpll
jle
push
inc
loope
xchg
mov
test
ret
jns
loopne
and
stos
js
out
int
mov
push
or
cmp
pop
dec
jle
adc
mov
adc
push
dec
or
adc
testb
jle
sar
inc
xchg
cs
jmp
xlat
sbb
xor
push
sti
mov
inc
adc
fdivl
mov
mov
push
dec
arpl
orb
jp
fs
xor
xchg
aam
push
sub
add
addr16
cld
pop
data16
loop
lret
jno
mov
jp
ss
scas
mov
pop
jae
push
mov
scas
inc
pop
aas
leave
mov
mov
dec
xor
andl
ret
filds
enter
dec
add
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
andnps
sbb
jp
testb
gs
mov
and
addr16
ret
inc
test
sbb
push
out
mov
out
lock
dec
push
add
jno
test
sbb
int
outsl
das
mov
push
sbb
test
add
inc
mov
sbb
fadds
lcall
addl
aas
mov
retw
mull
insl
pushf
jne
mov
insb
into
test
lcall
cmp
pop
jno
in
into
xor
inc
inc
or
pop
sbb
sti
inc
pushf
inc
repz
inc
dec
popa
mov
jae
xchg
pushf
jne
adc
test
das
inc
loope
mov
adcl
cmp
jecxz
jnp
xor
js
fcomps
aam
das
adc
je
std
push
xchg
mov
adc
cs
xchg
es
fistps
xchg
push
cmp
sti
rcrl
or
loope
scas
out
packssdw
les
mov
or
int
mov
imul
lahf
jle
push
aad
rorb
dec
cs
cmc
push
addr16
sbb
mov
cmp
sbb
adc
frndint
mov
ja
mov
in
stos
jle
pop
adc
jbe
pop
and
fstps
incl
test
das
mov
push
in
cli
loopne
clc
add
stc
xchg
mov
mov
push
dec
icebp
push
fwait
cmp
sbb
mov
mov
xchg
inc
cmp
xchg
fildl
xchg
jg
outsb
call
in
cli
into
rcr
and
stos
imul
lock
push
dec
ljmp
sbb
lods
xchg
dec
mov
cmpsb
sub
cmp
shl
test
inc
mov
aam
jl
jo
mov
in
dec
push
aam
mov
lea
insb
and
sahf
addr16
inc
inc
cmpb
pusha
idivb
mov
ss
add
dec
lea
push
dec
dec
out
shrl
jae
rolb
lods
subb
mov
sahf
xor
mov
pop
insb
cmp
jno
lret
rorl
icebp
imul
popa
ficompl
scas
inc
xchg
sub
repnz
repnz
inc
inc
pop
xor
jge
push
dec
lea
je
xchg
das
shr
push
jne
jl
mov
mov
cmpsl
jns
les
rol
pop
repnz
push
sub
std
fs
adcb
dec
jo
ja
jp
mov
adc
mov
cmpsb
lods
push
lods
aas
or
mov
pusha
notl
lret
inc
insb
data16
sti
jle
cmp
jno
cmp
aaa
dec
sub
xor
fildl
dec
and
sub
jmp
jbe
repnz
ret
mov
push
mov
inc
and
in
notl
test
fbstp
and
ljmp
push
mov
push
or
mov
xlat
mov
adc
sbb
pop
sub
xchg
push
pop
lahf
outsl
cltd
ficoms
insb
xchg
pop
and
orl
push
jae
ds
push
dec
mov
test
enter
dec
pusha
in
movb
aad
jp
xchg
out
sub
out
mov
pop
inc
inc
sbb
push
fldcw
mov
out
lock
adc
shrl
sarb
movsl
push
add
adc
pop
lcall
add
mov
test
ja
jp
cmp
or
fwait
sbbl
mov
mov
fsubl
out
scas
pop
add
lret
mov
popf
dec
push
mov
clc
lea
repz
in
pop
out
gs
rorl
insb
enter
rclb
outsl
jmp
mov
mov
movsb
sub
push
cmp
je
push
shr
jnp
jb
scas
ss
repz
add
sbb
jo
or
push
clc
push
ljmp
test
push
mov
cmp
popa
dec
cmp
sbb
fdivrl
xchg
push
call
mov
mov
cmp
sbb
fistps
jb
dec
sbb
nop
flds
adc
adc
xchg
sahf
mov
sbb
pusha
mov
push
into
hlt
jmp
in
popa
outsb
adc
and
jnp
dec
push
adc
mul
sbb
xor
mov
shll
adc
xor
add
add
jl
or
mov
insl
test
push
push
and
repnz
xor
loope
jecxz
test
pop
pop
out
xor
mov
idivl
scas
xor
mov
icebp
sbb
add
psubusw
imul
scas
jl
loope
hlt
dec
aad
je
cmp
pop
push
fs
xor
lock
and
shl
imul
test
xor
xor
xor
jp
pop
dec
sarb
nop
ss
adc
sub
mov
mov
mov
ret
incb
ja
dec
pop
mov
in
out
fistps
in
fcoms
ja
aad
xor
mov
cmp
mov
xor
cwtl
jo
mov
fcompl
pcmpeqd
xorb
pop
icebp
je
fisubl
clc
hlt
es
cld
in
imul
nop
test
inc
out
jg
and
rolb
jmp
push
jo
add
and
les
jg,pn
jno
or
je
js
aas
mov
pushf
jmp
jecxz
pop
mov
stc
and
nop
cmp
pop
test
mulb
sar
push
adc
test
fs
inc
jno
ret
gs
data16
testb
ret
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
sbb
push
xchg
add
jg
jmp
in
inc
shrb
cmp
test
add
mov
subl
mov
std
into
sub
pop
mov
jmp
mov
stc
mov
push
dec
sahf
pop
push
and
cmp
adc
aad
insl
clc
push
sub
mov
cmpsl
into
fadds
pop
jne
inc
sub
lock
cmpsb
push
popf
jg
adc
pop
ja
in
mull
stos
lods
enter
sarl
push
or
stos
xchg
pop
test
pop
movsl
scas
popf
xchg
sub
lret
or
repnz
in
jge
xor
rcr
mov
decl
clc
adc
xchg
or
dec
cmp
jb
cltd
dec
push
lds
and
gs
mov
add
lahf
xchg
mov
mov
fidivs
xor
adc
leave
xchg
in
xchg
mov
gs
mov
in
xor
popa
stos
lds
mov
add
iret
mov
dec
adc
jecxz
addb
push
sub
mov
mov
dec
push
xor
lds
shll
js
lahf
es
mov
insl
xor
aam
into
int
dec
imul
push
bound
jl
push
inc
pushf
insl
lds
les
pop
and
xor
cmp
or
mov
std
lret
xchg
mov
mov
loopne
pop
clc
mov
movsl
hlt
fsubs
sub
out
xchg
shll
mov
pushf
bound
adc
aad
xchg
fldenv
fsub
xor
inc
dec
test
mov
xchg
orl
jbe
dec
sti
xor
xchg
jg
f2xm1
imul
add
ljmp
int3
ljmp
sub
dec
push
fnstenv
adc
push
add
dec
adc
push
mov
cmp
sti
jnp
cmpsb
push
jl
sbb
and
jle
and
fwait
or
testl
int3
jp
mov
out
push
push
xor
popa
xlat
pop
pop
or
xor
cltd
mov
movsb
inc
pushf
jae
mov
cli
sub
sbb
loope
push
mov
ss
mov
and
imul
enter
shll
jo
rclb
pop
dec
sbb
push
cmp
test
mov
push
pusha
sub
out
fadds
orps
push
cld
pop
push
fists
and
rorl
testl
jns
cmp
sub
popf
pop
jg
in
cmp
push
sub
and
aad
inc
push
cli
mov
pop
fistpll
rolb
das
lret
xor
test
cmc
xchg
aas
ret
loope
lret
les
jle
cli
test
inc
mov
jp
in
pop
mov
lret
inc
dec
rclb
mov
inc
jp
dec
jo
inc
pop
fdivrs
arpl
push
hlt
int
cmpsb
push
insb
mov
mov
pop
mov
xor
loopne
xchg
divl
jb
dec
push
or
rclb
sbb
loop
push
andl
fldt
pop
pop
out
cmpsb
push
mov
cmp
je
out
jnp
idivl
adc
dec
pop
cwtl
dec
mov
sub
cmp
or
loopne
mov
cmp
jle
push
inc
cmc
pushf
adc
jmp
data16
push
xor
and
rorb
aas
cmovbe
cmovns
dec
mov
and
xchg
testb
jmp
inc
sub
sub
roll
test
add
lea
dec
lret
stos
jae
stc
jl
xor
fs
pusha
sbb
mov
xchg
pop
roll
out
pop
push
cmp
std
sbb
ds
enter
add
sbb
inc
sub
enter
mov
std
xchg
es
jo
cmp
pop
test
xchg
jg
in
dec
aas
mov
stos
sub
dec
xor
ret
sub
cmp
xchg
adc
in
pushf
lock
sbb
hlt
int
cmp
push
cmp
jne
pop
lock
xor
call
cld
mov
jae
adcb
sbb
add
inc
ss
mov
int3
fcomps
add
sahf
cmp
mov
cs
int
and
leave
or
push
imul
nop
mov
hlt
xor
leave
mov
lds
cli
mov
mov
inc
dec
ret
incb
jnp
rcrb
pop
gs
pop
push
mov
rorl
push
cmpl
scas
or
mov
mov
adc
call
fcoml
mov
and
daa
adc
inc
cmp
and
xchg
inc
dec
ja
jbe
ret
cld
mov
mov
addr16
sub
cmpsl
sbb
fildll
dec
stos
subl
or
sti
mov
test
ret
iret
inc
push
cmp
ficoms
mov
arpl
mov
in
addr16
aam
jg
aam
mov
int
sbbl
xor
sarl
xor
adc
outsb
pop
or
dec
mov
hlt
pop
jne
mov
jecxz
nop
xchg
dec
inc
xchg
popf
int3
jecxz
andb
jecxz
loop
mov
mov
mov
ret
addr16
xor
xor
cmp
loop
lahf
inc
mov
inc
sbb
pop
jbe
in
xchg
cmp
pop
dec
xor
fdivrs
cmp
mov
or
mov
adc
in
inc
ret
xchg
mov
jge
sbbl
pop
enter
pop
cmpsb
dec
sbb
inc
jae
std
adc
int
cltd
mov
jecxz
dec
leave
mov
dec
or
test
mov
xchg
sub
stc
jmp
mov
xchg
mov
mov
xchg
scas
popf
invd
add
clts
cmc
jns
mov
fsubrs
or
and
and
pop
push
cmp
cmp
or
stos
push
psrlq
rolb
shll
in
out
jne
xchg
jecxz
mov
js
sub
adc
mov
cmc
sub
mov
xchg
ds
imul
test
pop
cwtl
push
push
xchg
stos
inc
mov
adc
mov
pop
sti
pop
jg
inc
fxch
dec
push
outsb
adc
dec
xor
jge
gs
push
add
les
stos
xlat
push
jmp
out
cmpb
loop
int3
add
pop
mov
shl
std
insb
mov
mov
pop
mov
aaa
dec
sub
outsb
out
cmp
inc
int
lcall
jns
xchg
inc
push
ret
pusha
ss
icebp
push
jno
xor
es
cmp
mov
mov
jae
popf
inc
into
mov
mov
imul
pushf
jno
stos
aaa
pop
inc
adc
dec
cli
dec
mov
jbe
in
hlt
xor
bound
lea
cmpsl
int
jae
lret
movsb
jbe
shrl
xor
xchg
pop
mov
dec
faddl
lds
stc
movsw
lds
dec
add
ret
lret
movsb
and
lret
xor
nop
dec
and
mov
movsl
insb
mov
mov
and
stos
cltd
add
movsl
jo
dec
std
ds
and
pusha
jle
shr
mov
insb
fstps
mov
lods
addr16
lds
rorl
aad
mov
push
mov
dec
push
cmpsl
pop
out
rcl
dec
sub
xchg
test
adcb
add
pop
mov
xor
jmp
cmp
push
inc
jo
stos
and
daa
jg
fsubrs
cmp
ljmp
jge
mov
mov
pop
mov
lahf
je
dec
push
sbb
mov
mov
pop
mov
scas
jbe
xchg
xchg
inc
mov
cltd
enter
test
cmpsl
jecxz
and
filds
jne
mov
fdivrs
loopne
shll
mov
inc
fbstp
xor
and
xchg
or
cld
cs
xchg
mov
es
sarl
jge
pushf
mov
mov
dec
lea
jae
cld
pop
xchg
mov
inc
into
cmp
addr16
cmp
and
jmp
outsb
add
xor
jae
push
cli
in
movb
push
sub
xchg
out
gs
fcomps
adc
lea
pushf
pop
lds
rcrl
and
pop
shr
xor
or
push
add
pop
out
mov
pop
aaa
dec
push
inc
mov
popf
sub
jb
mov
add
cld
push
aad
pminub
fcoms
xlat
fwait
add
ja
pop
ret
test
repnz
mov
mov
jmp
mov
sbb
lea
push
jge
scas
dec
int
loop
int
or
add
cltd
cld
lcall
sub
gs
lcall
mov
mov
gs
iret
ja
outsb
push
dec
addb
dec
pop
adc
push
mov
lock
iret
mov
jne
dec
mov
mov
mov
jl
dec
addr16
xchg
out
mov
inc
ss
scas
dec
loopne
es
cmp
filds
inc
aaa
shll
iret
jns
sbb
cmp
xchg
push
faddl
arpl
or
cmp
pop
jg
inc
or
fmulp
cmp
push
xchg
je
cmp
loop
imul
dec
or
pop
mull
pop
jne
dec
mov
jmp
xor
rcr
repnz
and
rolb
mov
or
rolb
iret
mov
jno
cmpsl
imul
inc
adc
scas
cmp
outsb
mov
pop
pop
fidivrl
lock
cmp
insb
sti
push
sahf
jno
and
and
push
in
mov
or
adc
or
movsb
ljmp
dec
pop
mov
hlt
jne
xchg
inc
bound
xlat
jmp
pop
adc
adc
jmp
stos
into
pop
mov
int
int
cmp
pop
nop
jmp
dec
adc
mov
int
ret
and
dec
xor
cmp
jle
pop
mov
aaa
lods
movsb
andb
cmp
jns
mov
sahf
outsb
divl
jb
adc
sbb
clc
sub
lahf
hlt
dec
fscale
cmp
iret
test
sbb
movsl
addl
jg
pop
out
cmp
jae
mov
cmpsb
std
lods
repz
ss
clc
in
adc
mov
cmp
mov
mov
sub
lods
clc
das
jle
pop
lahf
add
or
iret
xchg
decl
in
sbb
cmpsl
inc
addr16
jl
inc
cmp
cmpsb
test
sti
aam
fwait
pusha
or
loopne
int
sbb
hlt
sar
mov
popf
jecxz
dec
pop
jne
dec
sbb
pushf
or
pusha
sub
js
mov
adc
dec
outsl
mov
sbb
sub
mov
jae
jl
dec
adc
xor
jmp
subb
mov
loope
andb
les
call
arpl
xor
gs
je
repnz
mov
mov
inc
movd
mov
loop
cmpsl
dec
add
in
adc
push
and
add
jmp
xchg
jo
lods
daa
repz
std
stc
push
clts
cld
out
push
into
sub
sti
scas
cmpb
inc
xchg
roll
dec
sub
jbe,pn
sahf
sub
push
into
hlt
cmp
sub
ljmp
cmp
push
pusha
mov
fmul
lds
push
xor
cmp
jg
pop
mov
lahf
cmc
jo
or
fwait
jb
push
dec
mov
xchg
sub
jo
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
test
invd
add
invd
push
sbb
out
fcmovnu
mov
sbb
mov
in
decb
mov
xor
jmp
sbbb
or
cmpl
mov
adc
test
lds
dec
sbb
jmp
js
enter
call
mov
rcr
push
aad
sub
aaa
je
call
aam
loopne
inc
daa
mov
sub
pop
cmp
in
mov
adc
and
fidivrl
les
jmp
pop
popf
cli
cmp
xchg
adc
jge
lahf
jle
adc
mov
adc
mov
jg
sub
cmp
dec
add
fs
nop
ret
xchg
mov
jbe
je
shr
pop
pop
stos
dec
fdivl
aam
int3
add
adc
push
aad
cli
adc
xor
push
nop
cmp
insb
inc
sti
adc
in
inc
and
jno
sub
jne
out
call
mov
jge
insb
mov
mov
jle
in
xor
inc
jmp
xchg
jb
mov
cltd
cmp
adc
cld
daa
xor
xchg
es
xor
push
pop
test
and
mov
pop
int
cmp
lret
jg
cmc
loop
mov
cltd
test
inc
fs
mov
sahf
jns
mov
mov
mov
lcall
cmp
adc
pop
scas
mov
repz
scas
fs
bound
cs
sub
xor
shll
mov
lea
push
sub
or
sbb
sub
sbb
out
sbb
mov
and
mov
adc
pop
popa
push
xlat
cmc
sbb
and
mov
leave
inc
andl
insl
notl
stos
pop
test
fidivrs
and
pop
bound
pop
dec
dec
jmp
and
cltd
xchg
mov
push
pop
fsts
push
popf
bound
xchg
es
jl
addr16
loopne
mov
push
lods
mov
arpl
lds
or
lods
pusha
aas
push
fisubrl
aaa
fists
xchg
rcr
cmp
mov
std
dec
push
mov
sub
add
stc
xchg
movsb
mov
mov
hlt
aas
popf
mov
out
push
aam
das
ret
hlt
stc
jecxz
lcall
ljmp
dec
in
mov
cmovbe
or
mov
leave
mov
aas
jmp
sub
dec
loopne
je
mov
jmp
and
test
lret
gs
and
and
imul
sbb
lcall
mov
mov
enter
xchg
sub
inc
add
sub
mov
jl
cmp
ret
cmpsb
cli
aad
xor
push
jo
push
outsl
mov
js
loope
pop
cmp
rorb
orl
les
movsb
mov
and
sbb
xor
pop
xor
jmp
fidivrs
out
sbb
pop
lea
jno
pop
push
mov
icebp
mov
gs
jl
and
gs
inc
pop
mov
int
enter
cld
xchg
repnz
cmpsb
xchg
mov
pop
add
outsl
in
ficomps
inc
daa
add
xor
mov
adc
fwait
cmpsl
xchg
fisubrl
lret
fs
sub
loope
inc
insb
clc
xor
jmp
lods
enter
sti
nop
dec
dec
xor
movsl
jge
pop
shlb
mov
mov
xchg
pop
and
cs
dec
xchg
into
jmp
adcb
stos
cmpsb
pop
mov
push
push
lock
adc
daa
leave
fisubrs
out
dec
andb
adc
ja
xor
aas
arpl
stos
sub
ss
sub
jl
mov
sbb
dec
xlat
pop
fisubs
sub
aaa
xchg
pop
cmpsb
mov
scas
xchg
push
and
ret
loop
js
jecxz
mov
cli
loope
lahf
scas
fisubrs
enter
pop
adc
xchg
xchg
dec
mov
mov
cmp
push
jne
jno
cmp
movsb
push
mov
aad
mov
and
int
lret
mov
dec
ljmp
push
stos
or
pop
add
adc
dec
mov
outsb
jae
std
clc
shl
sub
xchg
push
out
pop
repnz
dec
sbb
inc
sub
cmp
dec
mov
sbb
mov
push
enter
inc
cmp
sbb
and
rcll
add
push
push
dec
xlat
add
jns
xchg
mov
xchg
jo
jne
rcrl
cmpsb
or
cmp
popf
clc
pop
adc
cmpsb
pushf
pop
or
jns
mov
pop
sub
jb
clc
dec
pmulhuw
sbb
xchg
sub
cmp
sub
push
jbe
xor
xor
xchg
xlat
stos
push
push
xchg
negl
cmp
scas
lahf
shll
adc
hlt
notl
ss
jae
sbb
ljmp
mov
iret
dec
cs
and
mov
addr16
std
xchg
mov
fildll
xchg
daa
insb
dec
sub
lret
repnz
inc
lea
or
add
pop
lods
jg
popl
dec
lret
jbe
loope
sbb
xor
push
out
cmp
scas
mov
mov
push
test
orl
add
mov
xor
cmp
sbbl
sarl
mov
movsb
test
and
in
adc
lods
push
subb
mov
jmp
sbb
loope
xchg
xchg
push
jg
popf
out
rolb
shlb
loop
cli
scas
xchg
div
or
push
push
cmp
rorb
xchg
adc
fnstenv
lret
push
shl
ja
dec
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
add
mov
add
packssdw
add
sub
pop
in
pop
inc
adc
popa
sti
sti
sbb
inc
outsl
cmp
sub
jbe
cld
mov
das
ss
aam
shlb
xor
jo
push
xchg
je
fcmovne
std
add
adc
or
sarl
cmp
sti
das
lcall
test
inc
pop
hlt
and
clc
or
ds
mov
enter
pop
lods
test
in
fcompl
int
ss
mov
gs
out
ja
inc
fstps
jne
sbb
or
imul
leave
add
mov
call
mov
sbb
xchg
dec
sbb
cmp
and
fdivrl
inc
insl
jecxz
pop
and
and
call
add
mov
popf
adc
shll
mov
xor
lods
push
aaa
push
inc
fadds
push
push
or
mov
into
outsb
xchg
dec
xchg
arpl
xchg
daa
or
sub
cltd
popa
mov
xlat
adc
xor
icebp
mov
and
xor
mov
cli
xchg
call
cs
outsb
cmp
push
bound
loope
push
lds
jg
adc
idivb
dec
pop
inc
pop
push
inc
xchg
xor
dec
add
popf
adc
dec
lock
xor
ljmp
fs
clc
aam
xchg
mov
jl
push
nop
and
outsb
push
or
cmc
xor
xor
je
cmp
loopne
xor
in
push
inc
imul
push
test
xchg
sbb
mov
or
pop
pop
mov
ret
cmpl
and
insb
call
int3
outsl
inc
mov
cmpl
insl
or
mov
pop
xor
lods
xchg
lcall
popf
dec
ret
push
lods
dec
sub
push
lods
notl
les
nop
jg
adcb
test
push
rclb
pop
pop
mov
icebp
sti
test
mov
sub
outsl
sbb
mov
jl
sbb
inc
mov
stos
and
push
pushf
sub
sub
pop
pusha
ss
and
outsb
cld
pushf
cmp
push
sub
pop
bound
rcrl
mov
push
xor
and
loopne
mov
int3
outsb
sti
push
movsl
mov
mov
push
dec
jle
sbb
xchg
out
lcall
cmpsb
mov
clc
sbb
cmp
adc
add
leave
icebp
xchg
inc
mov
xor
call
sub
das
dec
scas
pop
mov
sbb
sbb
pop
stos
popa
jbe
stc
jo
sub
je
push
push
push
pop
jge
out
incb
sub
and
aaa
xchg
or
push
lock
jl
push
ret
mov
popf
or
cmpsb
nop
mov
add
adc
stos
mov
es
dec
divl
mov
or
ss
xchg
inc
xor
popa
int
movsl
sbb
andl
sbb
mov
loop
jl
out
mov
das
jl
inc
mov
stos
cmpl
push
sbb
outsb
mov
jl
ret
testb
xchg
and
xor
dec
sub
lods
lahf
jae
xchg
and
mov
sub
iret
jae
or
mov
sbb
inc
xor
popf
std
add
dec
enter
pop
arpl
dec
mov
inc
sbb
inc
loop
sbb
lret
pop
cmp
push
inc
sbb
push
mov
sarb
rorb
inc
push
sarl
insb
xchg
int
cwtl
lods
add
lret
mov
xor
clc
out
jo
jb
cmp
cmp
repz
dec
or
jbe
cwtl
dec
xchg
sti
sbb
jle
imul
push
mov
decl
ds
rcl
dec
inc
cmc
arpl
enter
mov
jo
arpl
lea
in
dec
jns
fidivrs
dec
or
cli
int3
mov
arpl
cli
sbb
ja
ljmp
sub
push
loop
mov
push
jne
mov
mov
push
xchg
inc
sub
and
xor
cwtl
xchg
adc
in
andl
and
bound
dec
mov
insl
inc
mov
push
cmc
jo
push
loop
test
out
leave
sbb
lds
xchg
daa
cmpsl
fisubl
sarb
sbb
sbb
iret
hlt
sub
aam
cld
imul
repnz
ja
lcall
mulb
insb
stos
xchg
addr16
mov
clc
mov
movsl
testb
fistpll
scas
or
shlb
call
mov
mov
jo
jecxz
out
push
icebp
int3
mov
sbb
cs
lahf
push
aas
sbb
jmp
xchg
loopne
in
lods
jg
xchg
enter
cmp
enter
insl
shll
mov
mov
or
push
and
dec
mov
in
jp
and
cmp
pop
adc
cmp
xor
and
inc
lods
or
test
jp
pop
cltd
fdivl
cwtl
out
sbb
andb
mov
jecxz
add
lcall
psubd
insl
mov
jmp
pop
or
sub
jnp
sbb
pop
sbb
adc
out
scas
in
js
std
aas
jl
imul
lret
repnz
dec
sub
movsb
movsl
or
data16
lods
cmc
outsl
mov
add
add
cmpb
mull
and
repz
adc
inc
mov
adc
cltd
xchg
lods
inc
xchg
icebp
imul
jle
stos
push
pop
repz
and
inc
xchg
xor
fisubl
adc
rolb
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
ljmp
or
xorps
sbb
xchg
mov
pop
cmpsl
js
adcb
mov
add
pusha
mov
lock
cmpsl
out
inc
ljmp
nop
jbe
ret
cs
rorb
jge
lahf
stos
xor
into
loope
push
push
scas
or
dec
jp
jmp
sbb
push
int3
stos
imul
cs
out
mov
and
das
mov
pop
inc
pop
xchg
pop
mull
roll
into
xchg
fwait
cli
mov
push
xchg
pop
bound
mov
jne
lahf
mov
ja
ljmp
dec
and
jmp
nop
xchg
lock
mov
aas
push
and
and
rcr
repnz
mov
inc
cmp
insl
dec
add
std
cmp
and
adc
push
mov
xor
punpckldq
jmp
loopne
mov
jne
sbb
mov
push
scas
jmp
push
cld
push
popf
sub
push
adc
pushl
sub
mov
sub
or
scas
cmp
xchg
mov
out
pushf
fidivl
int
sahf
pop
test
repnz
fisttpll
cmpsb
addb
mov
daa
and
mov
inc
rclb
xor
mov
fdivrs
orb
dec
outsb
cld
fldenv
add
ss
aam
sub
cmpsl
aas
mov
andb
mov
repnz
xor
and
gs
mov
push
mov
jnp
pop
pop
push
jne
inc
jns
clc
sarb
jno
cld
shlb
cmpsl
xor
jb
enter
lahf
cwtl
loop
aad
mov
loop
sub
mov
fisttps
add
dec
push
jns
ret
mov
xor
dec
xchg
mov
pop
jg
push
sub
pop
jp
leave
subl
pop
mov
jae
xchg
xchg
dec
stos
jo
cmp
lods
jl
xchg
pop
xchg
push
addr16
mov
sti
or
xor
pushf
jno
pop
jno
sbb
stos
push
out
inc
cmp
xchg
hlt
or
pop
lcall
cmp
jg
stos
sub
pop
mov
mov
out
ror
flds
insl
scas
call
stos
jnp
ret
cmp
mov
fptan
dec
out
jnp
addr16
jne
int
mov
pcmpgtb
decl
enter
ds
cltd
adc
enter
xchg
mov
push
and
xor
dec
xor
orb
jp
push
mov
outsl
adc
js
jb,pt
outsl
mov
cmpsb
js
xor
out
adc
xchg
mov
cli
jg
sub
adc
jle
bound
pop
adcb
and
mov
fsubrl
outsb
and
cmc
out
mov
and
incb
add
inc
ljmp
mov
push
mov
adc
out
and
ret
int
outsl
jno
lods
fistpl
leave
dec
out
stc
push
jne
xchg
mov
add
ret
movsb
lcall
inc
mov
les
das
ror
stos
sub
add
push
xchg
shr
sti
dec
mov
jmp
ficompl
clc
jle
stos
sbb
mov
push
jno
stos
push
add
movsb
mov
sub
fidivl
mov
mov
lcall
icebp
sub
int3
cli
sbb
pop
clc
scas
pop
dec
push
or
mov
lods
pop
data16
mov
push
and
mov
dec
mov
pop
test
out
popf
int
fisubrl
adc
ret
ss
movsb
or
jnp
jb
mov
insb
lret
out
push
xchg
mov
mov
inc
out
xor
aam
cmp
pop
aaa
jae
mov
mov
adcl
out
int3
add
scas
pop
call
dec
mov
lock
inc
or
adc
jno
in
loop
inc
xor
xchg
nop
in
sbb
mov
cwtl
cmp
jg
cmpb
ds
mov
push
fs
inc
pushf
xor
mov
daa
stc
cmp
call
mov
not
subl
cltd
lea
pop
shr
pop
dec
dec
insl
into
push
cltd
scas
sbb
or
cld
loope
mov
add
dec
andl
dec
int
daa
stos
aaa
pop
xchg
inc
dec
sub
push
cmc
mov
cmp
pop
or
mov
inc
adc
dec
std
jne
test
outsb
into
sub
sbb
ret
xchg
jge
add
mov
pop
push
mov
lds
cmc
cli
aad
pop
adcl
test
inc
addl
xchg
orl
mov
js
mov
into
enter
pop
pop
imul
das
mov
leave
adc
insb
test
out
ds
xlat
adc
xor
mov
push
sti
xor
mov
pop
ret
nop
jns
or
add
stos
jge
mov
cmp
mov
sbb
mov
inc
sti
sti
jae
ja
loopne
mov
nop
mov
mov
das
je
jmp
jg
jno
mov
fistpll
sbbl
lahf
ret
adc
pop
pop
lea
push
cli
dec
clc
repz
inc
in
mov
lcall
icebp
push
jmp
dec
mov
mov
into
popf
lds
stc
inc
lods
orb
add
ret
fptan
push
inc
push
test
das
mov
cmp
popf
enter
mov
cld
mov
int
mov
je
cmp
adc
in
loopne
cmp
out
inc
repz
scas
dec
out
xor
in
lcall
jge
sbbb
adc
int
pop
or
inc
mov
jle
lcall
mov
mov
push
repnz
mov
and
mov
cmp
loope
xor
cltd
and
add
enter
push
aas
pop
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
psraw
pop
shrb
fldenv
add
stos
stos
jp
jmp
mov
imul
loope
push
sarb
shlb
fsubl
ror
cmp
add
mov
mov
add
imul
cld
negb
inc
or
es
sub
nop
outsl
fnsave
dec
stos
je
jnp
ficoms
in
fisubs
rclb
lods
jnp
dec
xchg
jbe
loope
movsb
add
mov
jmp
mov
cltd
xor
fbstp
out
pop
rcll
int3
xor
jo
subb
lock
mov
jl
pop
mov
cmp
mov
pushf
mov
xor
cltd
sub
ret
scas
stos
mov
dec
pushf
iret
pop
sahf
jmp
shlb
je
in
pop
mov
test
cwtl
jne
div
dec
xlat
int
inc
or
sbb
push
mov
mov
fstps
dec
inc
jno
xchg
lds
ret
popf
mov
movsl
testb
and
cwtl
sbb
out
in
mov
push
pop
push
cmpsb
sbb
mov
aam
push
pop
hlt
mov
in
adc
adc
arpl
hlt
test
out
mov
mov
push
push
inc
cld
jg
push
inc
adc
shl
stos
fisttpl
jb
lods
ret
aam
jbe
out
fmuls
mov
or
jno
xor
cmp
bswap
mov
clc
and
jno
ret
mov
mov
pop
loop
lods
mov
push
in
fs
sbb
jo
out
mov
test
cmp
mov
sti
jl
or
das
adc
dec
loopne
cmp
jne
xor
push
mov
and
nop
int3
test
mov
les
pop
push
pop
mov
jmp
push
call
jp
lods
cmc
pop
inc
xor
and
sbb
mov
clc
movsl
imul
arpl
or
je
inc
jbe
repz
stc
add
mov
push
dec
das
xlat
fsubrl
aad
mov
and
aaa
mov
int3
fucomip
dec
and
ret
ljmp
pop
fists
fcoms
test
sub
push
xorl
das
aad
scas
inc
mov
adc
pop
jp
mov
and
adcb
nop
idivb
add
mov
cmpl
mov
add
rcl
sbb
sbb
and
sub
pop
cld
test
test
aas
sti
push
jecxz
hlt
mov
push
das
xchg
sbb
mov
mov
repnz
and
push
out
or
mov
jno
pop
adc
add
scas
jle
mov
pop
mov
popf
mov
stos
mov
rep
sti
icebp
adc
into
or
cmp
scas
dec
fpatan
cmp
xchg
add
enter
arpl
adc
test
nop
add
adc
xchg
xor
sahf
lea
cmp
and
inc
ljmp
inc
lret
test
xchg
in
xchg
jmp
adc
adc
jge
rorb
nop
mov
sbb
inc
ljmp
outsl
sbb
lods
lock
jbe
lods
and
inc
cmp
pushf
out
mov
mov
push
and
mov
inc
aas
inc
es
das
xchg
testb
dec
cld
jg
icebp
leave
test
pop
jae
stc
cltd
xor
leave
cmp
mov
sub
push
adc
add
jns
aaa
shrb
sbb
test
test
jnp
adc
test
mov
mov
xchg
ret
cmpsl
in
and
sub
pop
dec
mov
adc
cwtl
jecxz
xchg
push
loopne
lock
mov
lods
pop
inc
lds
inc
aam
or
andb
jne
addl
pusha
repnz
ljmp
loope
mov
dec
call
add
repnz
jo
pop
cmpsl
pusha
inc
jo
es
inc
and
jmp
jp
subl
cli
or
jno
mov
scas
xchg
jae
sbb
ja
movsb
mov
daa
bnd
js
jbe
out
fisubs
mov
int3
into
sysenter
lock
xchg
pop
rcll
pushf
push
imul
loope
cmp
cwtl
cmpsl
mov
loop
inc
pushf
scas
scas
call
dec
repz
gs
sbb
lock
fsubrs
xchg
enter
sub
dec
fnstenv
in
outsl
mov
mull
xchg
or
xchg
test
pop
add
dec
clc
arpl
xchg
xchg
imulb
std
xor
push
insb
mov
add
pop
fcmovnu
adc
dec
dec
das
out
pop
adc
fs
movsb
fldt
in
test
ret
or
addr16
mov
out
imul
mov
into
and
ja
cmp
addr16
cmp
enter
jno
and
aas
jmp
jp
stc
pop
jbe
aas
xor
inc
xchg
int
sub
fldt
jne
sub
repnz
nop
mov
mov
mov
popa
imul
mov
mov
idiv
es
cli
std
adc
push
sti
sub
inc
gs
cmp
jge
jmp
ds
jp
js
enter
sub
out
cmp
mov
xor
js
scas
shll
jl
aad
neg
add
or
mov
ss
inc
and
addr16
dec
test
or
lcall
nop
je
scas
lock
les
je
jae
cmp
es
loop
fisubrl
and
push
or
adc
addl
aam
sarb
jg
add
ja
mov
lret
or
cmp
sbb
add
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
popa
sbb
dec
enter
or
cmovo
adc
mov
push
cli
pop
insb
addl
incl
adc
push
and
arpl
mov
add
cmp
sub
jnp
pop
adc
jno
pop
lcall
xchg
xchg
mov
add
pushl
push
das
xchg
xchg
jb
mov
les
add
add
mov
mov
cmc
sub
aam
mov
add
mov
dec
mov
mov
ss
mov
add
sbbl
lock
pusha
addr16
inc
mov
sbb
data16
inc
fwait
lahf
les
loopne
and
lcall
xchg
cmp
push
mov
pop
cmp
pop
xchg
lods
sbb
add
aas
jg
and
int
jge
ror
test
fmull
aad
xchg
cmp
jne
stc
push
rorb
lahf
pop
movups
mov
bound
shlb
push
mov
cmc
push
insb
loopne
iret
scas
push
test
sub
add
in
lahf
mov
testl
fists
rcll
in
mov
push
jne
jnp
popa
and
mov
adc
lret
call
jmp
out
jo
inc
mov
bound
adc
sbb
jo
scas
xchg
loopne
cmp
or
mov
aam
lea
fidivl
cmc
mov
add
stos
push
adc
mov
mov
push
out
jno
punpckhbw
stc
shrb
in
push
xchg
in
xor
xchg
mov
icebp
std
int
xor
movsl
push
loope
sti
fcom
adc
loope
lahf
jae
jae
push
pop
adc
add
push
inc
mov
fistpll
lds
jge
shll
dec
shr
xlat
push
popf
mov
and
mov
sarl
fidivs
ja
push
push
cld
jge
dec
mov
fsubs
test
stos
jbe
out
sbb
jne
fstl
push
je
daa
push
inc
fidivrl
xor
cmp
scas
and
xchg
cwtl
dec
and
sbb
xchg
jae
les
in
and
mov
pop
push
xchg
sbb
aas
sub
mov
cld
add
add
xor
xchg
xor
pop
mov
dec
jle
push
lret
mov
into
out
gs
pop
movl
loope
fsubrl
mov
mov
pop
jbe
or
dec
lock
ds
addl
icebp
pop
sbb
jle
jmp
sbb
scas
adc
mov
or
or
inc
xchg
pop
xchg
pop
imul
cmp
sub
lods
cmp
leave
dec
xor
and
mov
mov
scas
sub
ja
mov
rorb
dec
cmp
add
out
push
cli
fisubl
xchg
je
mov
dec
jno
dec
sbb
and
mov
scas
sbb
test
xor
mov
movsl
mov
or
sub
test
push
cmc
xor
push
leave
add
les
pop
cmpsb
push
fs
repz
hlt
les
aaa
sub
sarl
mov
pop
mov
loope
jg
xor
cltd
sub
mov
jp
mov
xor
outsb
int
popf
mov
pop
inc
test
ss
popf
test
mov
in
xchg
xor
ret
sbb
push
xchg
jle
outsb
fadd
sbb
fstpl
pop
xlat
jmp
testb
popa
xor
mov
mov
incl
orb
pop
fisubl
es
inc
loope
scas
mov
push
wrmsr
lcall
movsb
call
pop
cmp
mov
scas
and
add
mov
lret
mov
stos
insl
mull
inc
jecxz
ds
inc
and
jg
lods
inc
push
inc
dec
pop
dec
imul
test
clc
adc
sbb
popa
loope
xchg
inc
sbb
push
shl
das
dec
mov
sub
mov
js
mov
popa
push
stos
adcb
xchg
push
lcall
mov
subb
dec
mov
inc
lods
cli
mov
adc
xchg
cli
add
mov
and
das
ss
mov
jb
decl
dec
ret
or
push
adc
lds
jne
js
loope
ret
pop
mov
mov
push
insl
xor
fldenv
push
jne
aaa
fiadds
std
aad
mov
test
mov
mov
pop
call
ja
mov
fstp
add
jns
mov
xchg
jmp
pop
add
xchg
jns
mov
jb
push
mov
jl
loopne
pop
out
loop
and
jl
cltd
mov
ret
negl
fwait
dec
mov
ror
int
push
mov
es
adc
mov
push
xchg
cwtl
and
cwtl
cmovge
ficompl
cmp
mov
cwtl
push
fs
pop
push
inc
movsb
sub
ljmp
push
andl
jmp
jae
dec
jecxz
test
sub
push
nop
stos
jo
cmp
fnstenv
jnp
pusha
cmpsb
add
iret
movsb
hlt
jg
aam
mov
lds
adc
stos
mov
push
sarl
or
inc
jl
test
xchg
push
popf
mov
sbb
pop
sbb
push
lret
pop
int3
cld
shll
jge
aam
sbb
xchg
push
ja
cwtl
nop
test
mov
jbe
or
ret
or
sbb
es
lcall
cs
xchg
sbb
insb
xchg
mov
mov
jp
cld
lahf
dec
jmp
sbb
inc
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
enter
fisttps
invd
add
punpckhdq
imul
mov
mov
rcl
leave
mov
rcl
sub
bswap
and
data16
fs
movsl
pop
lcall
mov
sub
inc
aaa
add
or
push
ret
inc
pop
add
leave
jae
out
lds
xor
and
ss
cld
sub
or
adc
push
and
lds
test
das
jne
sbbl
push
jns
mov
repnz
push
test
cmp
jns
mov
outsb
pop
out
jle
sar
imul
and
inc
push
mov
fs
sarl
ljmp
push
or
lods
mov
and
aam
cmpb
push
ja
in
pop
jecxz
inc
mov
or
inc
add
push
dec
inc
mov
loop
aad
adc
mov
dec
jb
mov
outsb
mov
outsl
xor
push
cmp
jg
movsb
adc
stos
sarl
lods
repz
xchg
leave
out
sahf
mov
jae
popf
cld
jmp
xchg
cmpsb
fwait
cmpsl
jg
or
ret
out
add
xor
xchg
push
mov
jl
jo
xchg
sbb
outsl
stc
sub
mov
clc
icebp
mov
out
add
and
mov
xchg
mov
imul
pop
and
in
mov
xchg
mov
mov
bound
repnz
stc
std
fbstp
popa
insb
cmp
fs
or
dec
insl
add
cmp
and
shlb
nop
gs
sub
mov
and
leave
out
je
sbb
jmp
xor
xchg
shrl
pop
int3
mov
int
jo
mov
aaa
add
out
inc
in
adc
push
fidivs
into
push
push
push
xor
fidivs
mov
shlb
or
jo
shl
and
mov
sbb
out
jecxz
push
outsl
lea
out
repz
sbb
ss
adc
xor
imul
jno
mov
fsts
js
pop
test
imul
xlat
and
jge
jno
xor
das
xchg
pop
xor
cmp
and
and
hlt
xchg
loop
sbb
push
add
sbb
add
xchg
rorb
mov
dec
and
xchg
cmc
stc
sub
bound
cmp
pop
lret
mov
mov
sub
cmp
and
dec
testb
arpl
jge
mov
mov
and
ret
into
in
lock
mov
loope
imul
lock
push
dec
int3
jae
rorl
aaa
mov
mov
popf
ds
lods
sub
loopne
scas
pusha
or
movb
inc
and
mov
mov
jbe
xchg
fbstp
leave
sbb
shll
aad
mov
cmpsl
add
or
scas
sbb
or
cli
mov
ss
loope
push
add
inc
cmp
jmp
pop
repnz
ss
push
pusha
outsl
imul
aad
js
lret
stos
xor
mov
popa
or
cmpsl
or
mov
xlat
ret
call
mov
sub
cmp
in
jge
int
mov
inc
jo
xchg
frstor
and
push
mov
sbb
or
add
sbb
cmpsb
dec
xchg
cmp
xchg
roll
aaa
xchg
mov
mov
fnstenv
jmp
ds
cltd
sub
test
insl
inc
dec
in
lods
sti
in
jo
pop
leave
mov
xchg
mov
in
xchg
or
stc
lcall
enter
rclb
fwait
cmp
push
popf
jp
pop
fstpt
adc
jnp
adc
aam
pop
ljmp
xor
pop
mov
les
dec
mov
inc
and
xor
in
jle
orl
mov
int3
mov
sub
popa
xchg
jl
and
orl
fists
or
jbe
cmp
ficompl
sbb
pop
sub
mov
cmp
fcoms
xchg
in
push
pop
mov
jmp
insl
rclb
fcmovbe
jno
adc
sti
and
jae
scas
dec
jno
pushf
in
xchg
add
pop
cmp
mov
mov
mov
ds
pop
add
insb
lcall
adc
out
dec
popw
in
push
sub
pop
mov
jp
aas
sbb
push
cmpsl
inc
pushf
out
sub
adc
daa
jge
xchg
cmp
into
in
xchg
push
test
sbb
mov
mov
and
push
push
out
ja
in
repz
adc
insb
or
std
or
testb
addr16
orl
sbb
dec
popa
cmpsl
int3
and
and
pusha
and
test
icebp
mov
mov
sarl
scas
es
in
cmc
cmpsl
add
pop
dec
cmp
rcr
loop
sub
mov
insl
fistps
int3
jne
scas
pusha
mov
cmp
cmpb
add
add
lods
test
adc
in
or
pop
cli
hlt
in
and
and
cmp
in
cmpsb
fldenv
xchg
adcb
jnp
push
leave
inc
loop
adcb
lea
in
int
push
js
iret
loopne
mov
leave
inc
mov
and
or
cli
mov
movsb
xchg
test
cli
jns
push
aas
jecxz
fdivp
imul
jns
ds
mov
cmp
and
and
cmp
jne
inc
jmp
jb
xor
imul
call
andl
orb
fimull
dec
in
sahf
mov
inc
xchg
out
pop
test
aas
ret
jae
mov
enter
divl
cmpsl
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
psllq
push
lea
and
sbb
stos
xchg
les
and
xchg
mov
jns
mov
leave
ljmp
sarb
add
int3
gs
ds
dec
clc
into
imul
jnp
in
call
inc
popa
outsl
gs
daa
and
mov
imul
pop
xchg
mov
pusha
pop
pop
mov
xor
fcompl
mov
aam
adc
sub
and
bnd
gs
subps
jmp
mov
and
pop
mov
or
xor
aad
adcl
pop
mov
dec
fisttps
xchg
inc
cli
mov
xor
jno
cmp
popa
sub
fcoml
add
mov
aam
inc
jmp
rcrl
mov
fs
xor
push
scas
mov
add
scas
mov
icebp
fnstcw
scas
test
pop
lods
xlat
lock
pusha
ja
xchg
int3
addl
lea
add
cmpsl
subb
dec
icebp
pop
ficoms
sbb
push
pop
xorps
stc
fs
imul
push
in
aaa
loope
sbb
test
pushf
fwait
in
pop
and
inc
mul
into
sbb
xchg
test
ret
mov
xchg
or
std
add
mov
outsl
sub
and
fidivrs
addw
ds
jl
es
cld
inc
cwtl
xchg
jns
movsb
and
jo
call
xor
and
or
push
in
push
xchg
xor
cmp
mov
xchg
lret
pop
sub
daa
lret
mov
push
pop
dec
push
out
aas
push
or
sub
scas
aaa
fldenv
xchg
pusha
frstor
or
cmp
fstpt
or
push
push
ss
add
mov
pop
jbe
cmpsl
out
and
sbb
stc
fwait
arpl
sar
push
xor
test
cmc
testb
hlt
divb
out
outsl
leave
push
jecxz
mov
inc
out
cltd
lahf
and
fwait
sti
mov
xor
inc
popf
stc
dec
push
and
lret
mov
cmpsb
into
cmp
ja
dec
push
pop
add
adc
dec
arpl
sti
icebp
scas
orb
insl
hlt
test
lods
movsb
movsl
cli
mov
mov
aas
out
mov
push
loopew
es
mov
mov
inc
and
popf
fists
mov
mov
call
into
add
mov
push
inc
push
lds
inc
sub
test
rolb
addr16
andl
jmp
aas
mov
cwtl
lock
outsb
inc
sahf
ljmp
mov
mov
push
mov
fwait
loope
fcomps
sbb
sbb
jmp
mov
add
sti
sub
ja
repz
mov
lods
mov
jmp
jo
fstps
cld
pushf
loop
jb
subb
mov
jp
lret
dec
add
cs
cmpsb
cmc
es
push
inc
mov
shrb
test
adc
negl
mov
lcall
sub
xchg
pop
mov
movsl
pop
lret
outsl
jns
arpl
mov
adc
outsb
push
mov
rclb
pusha
and
cs
mov
push
lds
xchg
outsl
lret
out
and
mov
bound
arpl
xchg
jne
dec
fidivrl
fmulp
jg
popf
pop
outsl
cmp
cmp
insb
lret
xorb
mov
pop
jmp
pop
rcr
fcoml
shlb
cmpsb
jg
adc
cmpsl
xchg
mov
test
rcrb
lods
test
cmp
push
test
das
and
mov
loope
scas
xor
jbe
test
pusha
in
and
scas
lret
movsl
clc
iret
xlat
pop
mov
jl
loopne
xchg
and
dec
push
ljmp
je
add
pop
or
cmp
lahf
xchg
imul
loopne
jnp
mov
mov
sbb
dec
in
pop
dec
popf
push
cmp
xor
shlb
sbb
and
fcmovbe
out
js
mov
xchg
mov
push
dec
inc
xchg
pop
stos
jno
inc
add
jb
jle
push
xchg
push
or
int
xchg
ds
sahf
sbb
and
test
jb
sbb
out
xor
sbb
fldl
enter
test
mov
or
das
ret
xchg
xor
mov
pop
xor
in
push
outsb
fisubl
popa
jle
mov
and
nop
mov
andl
fisttpll
pushl
fildl
das
adc
in
xorl
sub
sbb
dec
cmp
and
xlat
xchg
sti
loop
test
rcr
je
mov
xor
gs
mov
push
fists
js
or
scas
cs
stos
lret
sahf
popf
data16
mov
imul
cld
cmp
inc
jle
sub
fwait
sti
fsubs
hlt
mov
pushf
iret
lock
adc
movsl
push
ss
into
xlat
inc
sub
outsb
push
dec
pop
cmp
dec
aad
ss
imul
std
and
and
scas
ja
cld
cmp
in
int
pop
faddp
sbb
lea
imul
push
cmp
sahf
dec
dec
mov
add
test
push
pop
out
insb
fidivrs
dec
movsl
sub
sbb
scas
jge
xor
sub
and
les
jmp
mov
repnz
mov
jne
std
cltd
pop
sub
fisubl
inc
test
lahf
mov
add
gs
jae
add
push
inc
mov
inc
xor
cmp
mov
cmp
pop
push
adcl
mov
inc
xlat
mov
das
mov
xchg
jbe
push
mov
aaa
repz
pop
or
push
mov
shrb
pop
adc
mov
les
pusha
cmp
jae
jne
add
xorb
mov
xchg
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
stc
xchg
lcall
add
gs
dec
dec
xchg
dec
popa
fdiv
jb
sarb
stos
sub
popa
in
pop
fcoms
xor
cs
and
call
mov
cmp
call
mov
mov
add
inc
arpl
cmp
push
notl
mov
cmpsl
outsb
lea
push
lds
in
data16
in
inc
test
dec
push
fistpl
mov
mov
das
cmp
add
sub
push
jne
inc
mov
cltd
jmp
pop
lods
test
sub
outsl
mov
scas
ficoml
fsts
cmp
int3
je
fisubrl
int3
popa
in
jg
gs
hlt
or
dec
push
jns
mov
into
mov
repz
mov
divl
iret
loopne
adc
mov
es
xchg
ret
scas
test
and
loope
aaa
je
mov
sub
dec
rclb
add
cmpsb
cmpsb
leave
mov
or
sbb
in
mov
js
mov
add
je
arpl
repnz
test
sbb
xor
and
pop
sti
sbb
jmp
xor
adc
loop
out
jbe
mov
cli
std
ds
jle
insl
fwait
xchg
pop
adc
push
dec
fmul
and
jmp
jle
data16
shr
xor
std
push
lcall
mov
stos
flds
pushf
cmpsb
mov
lods
insb
jp
rolb
test
sbb
cmpsl
push
std
ljmp
loop
movsb
stc
frstor
jae
cmpsb
andb
or
xor
lahf
cwtl
xlat
aam
xchg
shlb
inc
inc
ss
rolb
xor
pop
or
mov
sahf
jns
pop
xchg
jno
mov
xchg
in
jle
data16
and
pop
divb
lret
pusha
clc
and
push
cld
cmp
lea
sbb
data16
outsl
inc
ss
daa
cmp
mov
pop
stos
dec
fiaddl
cmc
daa
imul
js
mov
fs
nop
popf
sbb
das
push
mov
add
mov
lret
mov
mov
jmp
dec
xchg
pop
mov
shlb
inc
sbb
xorl
or
add
inc
pop
pop
jle
mov
pop
popa
lret
aam
adc
push
push
lahf
pop
add
daa
mov
jp
push
outsb
or
push
mov
push
fsts
pop
pop
push
imul
mov
adc
lea
push
mov
jae
pushf
lds
lret
jbe
fsubr
and
jbe
add
aaa
fldl
lods
jno
les
stc
hlt
add
inc
mov
cmp
jl
xchg
lret
jnp
imul
inc
xchg
add
mov
test
push
out
notl
movsl
lods
xchg
mov
jl
push
outsl
cmc
out
int3
dec
lret
fistpll
pop
sbbb
stos
pop
mov
jo
call
pop
mov
imul
push
cld
add
arpl
in
xlat
add
loopne
jle
mov
nop
ret
mov
cli
mov
sahf
xchg
inc
in
mov
es
xorb
push
and
clc
pop
movsl
mov
lock
test
sub
mov
dec
and
xchg
mov
movsl
push
mov
sub
sub
ss
fstpt
xchg
add
or
or
and
adc
push
bound
jl
fistpl
fs
sub
test
fcmovnu
int
daa
cwtl
pop
mov
inc
out
pop
cwtl
inc
or
and
mov
xchg
das
cmp
out
jno
lods
test
pop
das
ljmp
cmp
mov
jecxz
lea
dec
inc
sub
cmp
icebp
add
pusha
inc
pop
mov
pusha
test
stc
shll
movsl
lock
icebp
xlat
fnstenv
neg
insl
mov
mov
enter
xchg
cmpsl
jb
push
addr16
popa
addl
xor
sub
dec
and
add
pop
jecxz
gs
aas
test
in
loope
cmp
lahf
pop
lahf
icebp
add
std
test
mov
jmp
inc
cld
out
sub
movl
pop
repz
pop
mov
in
xchg
add
jbe
sbb
mov
or
sub
mov
dec
inc
mov
in
outsb
dec
lock
jg
fsts
sub
xchg
cwtd
jg
outsb
xchg
rcr
mov
in
xor
dec
out
mov
insb
ret
leave
sbb
jmp
mov
imul
loope
jno
in
lret
or
imul
popa
adc
inc
pop
ljmp
push
mov
shll
pop
sbb
sub
mov
decl
lret
jns
dec
inc
cld
into
sub
lods
jecxz
mov
mov
js
push
sub
in
mov
addr16
notb
push
add
sti
insb
xchg
out
mov
jle
and
scas
mov
int
adc
inc
and
rcll
push
int
lret
mov
jne
push
das
inc
push
mov
imul
push
adc
and
add
sub
mov
sub
pusha
adc
sbb
xor
cmp
in
jle
mov
daa
mov
roll
sbb
into
jle
leave
push
out
in
cmp
test
mov
dec
imul
icebp
ljmp
sbb
and
in
ljmp
cmpsb
jne
jg
ljmp
leave
in
addr16
cmp
jg
push
dec
mov
inc
inc
jns
popf
fwait
scas
fidivs
fdivr
sub
push
sbb
imul
xor
lods
or
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
pop
xchg
out
mov
movq
push
rclb
ds
es
mov
inc
mov
mov
mov
cmp
leave
clc
pushf
xorl
arpl
fstp
pop
ja
cltd
mov
inc
adc
jmp
and
sbb
mov
mov
jbe
in
xchg
inc
mov
mov
or
negb
bound
imul
mov
jbe
cmp
icebp
movl
sti
int
nop
cmpl
pop
andb
mov
daa
out
adc
pop
daa
sub
xchg
xchg
pushl
out
xlat
cmp
mov
pop
push
aad
imul
add
xor
lods
add
xor
jecxz
das
jecxz
rcll
cmp
mov
pop
icebp
stos
cmpsl
pop
je
mov
inc
sbb
lea
pop
popfw
fadds
stos
imul
stos
rcl
jmp
xchg
pop
sub
jle
and
xchg
push
and
rolb
mov
into
xor
scas
sbb
push
lret
jb
cmp
push
arpl
into
cs
mov
pop
fisubrl
or
mov
mov
not
xchg
add
out
push
icebp
xor
jno
lea
dec
mov
sarl
jle
scas
lds
push
push
jp
or
cwtl
mov
int3
aaa
push
sbb
leave
mov
ja
adcb
mov
xchg
repnz
movsl
hlt
fwait
mov
sub
mov
shrl
roll
xor
dec
stc
xchg
pop
mov
or
lods
les
cli
push
or
lods
gs
sbb
out
cmp
inc
and
test
pop
sub
es
clc
hlt
fwait
jns
and
fdivr
dec
idivl
pop
loop
mov
cmp
xchg
dec
cmpsl
nop
repz
push
and
add
mov
stc
mov
into
jmp
out
jne
cld
jmp
push
cmp
or
sub
xchg
adc
pop
insl
xchg
addr16
hlt
int
notb
xlat
push
push
xor
lahf
hlt
pop
repnz
fimuls
repz
movb
inc
vpextrw
imul
int
cmp
cmp
cs
pop
add
cmpsl
stos
xlat
and
and
pop
dec
push
inc
hlt
adc
xchg
sub
xor
jle
hlt
mov
cmpsl
lods
daa
insb
sahf
xchg
xlat
mov
cmp
jnp
push
pusha
mov
mov
jns
testb
mov
js
push
mov
adc
jp
sub
stc
inc
push
push
dec
dec
mov
call
clc
scas
pop
push
shrl
push
add
cmp
loope
fdivp
xor
add
aad
mov
outsb
js
push
or
movsb
sub
into
push
cmp
xchg
cltd
sub
out
inc
adc
and
inc
mov
sub
push
cld
push
or
lcall
ljmp
movsb
rcrb
mov
addl
jne
mov
xchg
mov
push
scas
mov
out
ja
loopne
imul
and
mov
leave
xchg
roll
lock
sub
cmp
mov
adc
pop
adc
sar
pop
pop
push
dec
div
push
or
gs
add
incl
xchg
adc
dec
cli
mov
sbb
jnp
shrl
bound
leave
push
insb
fxam
cmpb
jmp
ret
xchg
fcoms
and
push
cmp
fildll
lahf
mov
mov
push
jecxz
mov
mov
insl
and
mov
ffree
dec
add
cltd
jno
mov
stc
lods
cmpsl
cwtl
ljmp
imulb
int3
out
jmp
data16
in
ljmp
in
mov
inc
test
movsl
mov
push
pop
inc
stos
nop
xchg
fadd
lahf
push
cli
sbb
js
into
xchg
push
pop
mov
pushf
out
decb
or
add
jge
testb
push
test
cmp
mov
mov
sbbl
rcl
out
inc
fmuls
es
jbe
call
hlt
sbb
stos
sub
cmc
rcr
push
pop
xchg
lcall
xor
icebp
lods
loopne
fidivrl
and
das
jecxz
jg
jnp
icebp
mov
xor
push
xlat
ljmp
xor
test
mov
neg
cmp
push
add
aaa
lods
sub
fisttpl
sahf
adc
xchg
xor
out
mov
in
and
mov
mov
into
and
xchg
ret
clc
arpl
enter
enter
sbb
repz
mov
sub
jb
xor
lret
gs
mov
pusha
fdivr
faddl
out
cli
cmpsl
and
incl
lahf
sbbb
xor
movsl
sbb
or
jge
test
incl
dec
dec
add
mov
stos
dec
push
sti
sub
sub
push
imulb
ret
sbb
movsb
ret
andb
jp
icebp
std
std
xchg
xchg
lds
add
lcall
sbb
add
mov
ret
add
sub
cmpsb
adc
cmp
ret
jns
pop
fisubl
cld
xor
into
aaa
jmp
sahf
cs
pop
sti
cltd
or
aaa
ljmp
pop
ja
fdivrl
mov
popf
les
movl
and
pop
jae
outsl
xchg
sbb
cmp
jne
pop
or
lock
cmpl
shlb
mov
mov
aad
add
mov
cmp
daa
leave
out
lret
testl
rclb
and
pop
mov
fbld
mov
mov
push
int
cmp
mov
adc
mov
aam
scas
mov
inc
insl
sbb
ret
enter
mov
mov
inc
fldt
jge
xchg
push
rorl
ds
pusha
jl
lret
jb
xor
adc
fs
fldenv
mov
mov
int3
sub
pop
and
dec
push
sbb
cmp
jnp
cwtl
test
xlat
mov
sahf
cltd
cmc
mov
mov
lea
pop
daa
cmpsb
clc
aaa
mov
fidivrl
outsb
fwait
inc
mov
jmp
jno
xor
sub
push
jmp
insl
push
fildl
shll
outsb
orb
push
adc
push
jg
mov
rorl
jmp
inc
ss
add
jl
imul
in
ljmp
xchg
inc
and
sub
movsb
call
loopne
sub
fmuls
scas
fwait
sub
movsl
stc
outsb
sti
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
inc
jmp
mov
pswapd
xchg
pop
out
and
mov
out
shl
and
mov
test
cmp
cmp
jne
hlt
pop
adc
jmp
dec
sahf
xor
push
icebp
xor
ss
ss
aas
dec
test
sub
mov
out
push
fdivrl
sbb
sbb
dec
pop
xchg
scas
movsb
in
ljmp
dec
clc
aaa
mov
cmpsb
mov
sbb
push
sub
jo
xchg
mov
dec
ror
ljmp
ja
pop
and
push
pop
sub
lahf
push
jl
ret
call
jl
jne
or
cmp
and
mov
push
pmullw
mov
test
add
xor
movsl
lea
xor
in
cltd
push
cmp
mov
jl
mov
push
cmp
xor
mov
jle
xor
in
sub
imul
rcrb
mov
pop
mov
dec
jge
enter
sbb
fmulp
pop
jo
in
add
inc
adc
dec
stc
fwait
notl
rclb
push
sub
scas
lock
sbbb
mov
and
int3
and
inc
stc
sahf
xlat
mov
xchg
xlat
xchg
xor
pop
cltd
aas
fnstcw
cli
mov
fildl
negb
in
out
scas
stos
pop
cwtl
fidivs
in
pop
repnz
push
imul
jmp
inc
shr
inc
or
scas
gs
mov
cs
pushf
adc
pop
jl
adc
adc
std
sub
mov
sti
jge,pn
leave
and
test
push
fs
sbb
cwtl
sub
cmp
xchg
inc
sub
cmc
mov
and
gs
out
sbb
inc
mov
sbb
xchg
inc
lcall
mov
pusha
pop
add
jp
in
in
push
cmp
jmp
enter
dec
daa
mov
push
sbb
xor
mov
dec
sbb
imul
cmp
movsbl
xchg
jmp
nop
mov
addl
cmp
xor
jge
frstor
stos
xor
push
ret
and
mov
leave
lea
sub
pushf
pop
sbb
jmp
fidivs
out
aaa
and
jl
or
pop
xchg
sub
enter
stos
les
ds
adc
mov
sbb
sti
jo
gs
push
cmp
pushf
push
push
and
int3
and
or
pusha
jge
jo
xchg
fsubrl
push
fsubr
ficoms
jb
or
mov
push
pushf
jae
push
mov
pop
mov
imul
mov
movsb
xchg
scas
mov
flds
mov
rclb
sub
xor
xchg
vorps
xor
testb
cmp
sbb
cwtl
daa
insl
dec
jl
cwtl
and
cld
mov
mov
cld
test
jo
nop
adc
inc
fildl
push
test
icebp
dec
adc
and
mov
jle
sti
cmp
lcall
cmpsb
pop
and
jno
jno
adc
sahf
add
bound
pop
scas
and
cmpsb
bound
push
jbe
pop
inc
jmp
test
rcrl
lock
cld
orl
cmpsb
or
mov
fidivs
mov
movsb
movsb
sub
or
call
xchg
ret
push
shll
dec
repnz
inc
mov
movhps
add
or
stc
mov
adc
rcl
adc
ret
jmp
pop
lcall
mov
pop
dec
test
cltd
sub
enter
ss
data16
ljmp
xchg
les
or
ss
pushf
cmp
cmp
repnz
cmp
jae
loop
lcall
pop
push
or
xchg
adc
js
add
jp
lahf
and
movsl
jb
rcr
into
inc
mov
iret
jge
test
mov
mov
cmpsb
push
push
xor
popa
test
sub
push
dec
pusha
xor
jnp
push
cmp
sbb
mov
mov
addr16
push
add
xor
faddl
mov
add
dec
jmp
push
and
aas
xor
pop
inc
dec
jb
loope
push
in
push
out
xchg
push
cld
mov
jecxz
dec
insb
rcrb
aaa
repnz
cmpsl
jnp
cmp
ja
sbb
inc
inc
cmpsb
gs
push
jne
inc
mov
in
jp
adc
mov
mul
mov
or
sti
clc
stos
std
pop
dec
jne
cmp
loopne
pushf
sti
stc
das
cwtl
pushf
jbe
inc
aas
ja
pop
pop
cmpsb
or
jg
push
jmp
cs
bound
mov
test
adc
or
aam
outsl
push
stos
shlb
iret
xchg
mov
std
loope
jne
rclb
mov
repz
mov
stc
add
test
pop
xchg
fcomps
jne
shrb
lods
es
or
xchg
movsl
imul
sub
cs
cmpsl
scas
cmp
out
pop
jae
jae
fwait
mov
das
shrb
and
rcrl
filds
jbe
out
out
add
inc
xor
int
jae
pop
mov
xor
aaa
fs
sbb
addb
out
lret
leave
xchg
cmp
mov
push
push
insb
mov
insb
nop
int
ret
and
js
popf
jg
mov
jle
xlat
jp
cli
and
mov
popf
add
shll
popf
lods
gs
sbb
iret
xor
call
sbb
inc
jg
mov
xchg
aaa
repnz
loop
cmc
aam
mov
sbb
jno
xchg
and
mov
ja
mov
loop
jg
test
stc
test
aaa
loope
inc
mov
cmp
pushf
lahf
jge
fcoml
push
outsb
js
aad
pop
lcall
jp
inc
xor
pop
stos
fcmovnu
mov
xchg
and
or
jnp
xchg
ds
loop
mov
lret
mov
lahf
testl
jo
lods
ficoms
xor
xorb
bound
jb
adc
or
or
lret
aaa
aaa
out
bound
jb
ret
push
imul
lds
add
xchg
xchg
inc
xchg
fsin
xchg
sub
hlt
cmp
fdivl
imul
dec
mov
cmp
xlat
or
sub
jns
mov
mov
sbb
mov
cs
pop
xchg
adc
cwtl
fcmovbe
jne
popf
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
inc
lds
mov
ss
loopne
push
shll
in
or
fstpl
push
movsl
cmp
popa
jnp
pop
pop
shll
es
jns
lahf
fwait
pop
fdivl
lods
dec
inc
scas
movsl
push
cmp
int3
adc
rcrl
lret
dec
or
clc
nop
inc
and
stos
cwtl
sbb
push
dec
xchg
sub
ret
call
js
mov
xchg
or
xadd
cmp
stos
call
aas
jl
movsb
loopne
incb
in
dec
aam
loopne
dec
aam
rcr
mov
in
popf
cmp
sbb
sub
pop
fwait
add
inc
xchg
mov
aad
xchg
lcall
xchg
inc
lods
test
pop
mov
stc
test
cmpl
cli
add
je
cmp
xchg
jbe
push
or
ficompl
add
enter
not
adc
in
xor
sub
insl
out
mov
add
sahf
mov
xchg
data16
and
jae
andl
mov
lods
mull
add
fisubrs
enter
out
outsl
gs
adcl
xchg
inc
fs
es
jge
mov
in
mov
mov
lds
push
and
dec
push
or
std
fmul
pop
clc
add
dec
shrb
pusha
mov
test
cmp
and
fcomps
popa
popf
mov
outsl
lret
sbb
outsl
dec
repnz
lret
push
insb
inc
sysexit
ret
jbe
ss
cmpsb
dec
pop
movsb
les
movsl
aaa
jae
faddp
xor
cmp
inc
clc
scas
negl
dec
mov
mov
mov
lds
fidivrl
movsb
jnp
movsb
sti
nop
scas
jo
mov
movsb
lods
inc
xor
addr16
cmp
mov
aaa
stos
je
jg
jo
not
loop
xchg
adc
sub
cltd
jle
insb
push
dec
and
dec
pusha
lahf
stos
lcall
xchg
cmp
int
lds
pop
mov
adc
int3
mov
or
or
addb
rol
ja
jae
inc
fs
hlt
jg
push
shl
inc
jmp
mov
dec
and
clc
cmp
push
aaa
pushf
fucomip
scas
int3
scas
out
stos
add
pop
add
cmp
lret
idiv
jp
and
addr16
push
cmp
sub
xlat
add
loopne
xchg
pop
cmc
fnsave
cmp
lretw
push
inc
test
ret
lret
xor
arpl
and
inc
cltd
adc
ficoml
sti
daa
minps
jmp
aas
stc
push
jge
out
lahf
mov
xchg
lret
icebp
jbe
push
mov
jp
scas
imul
or
jbe
sbb
ds
out
dec
mov
les
push
ret
inc
jnp
cld
outsb
xchg
push
push
addr16
rcrl
xor
mov
in
xor
leave
mov
lea
jg
ds
test
xchg
inc
cmp
jle
outsb
aam
fsubrl
je
addr16
cld
sarb
je
or
popa
push
ljmp
and
jle
mov
cmp
movsb
lret
in
cmc
aaa
push
aam
pushf
rol
jl
clc
subl
cmp
aad
dec
jbe
xchg
adc
cli
daa
jl
and
cli
movsb
or
popa
arpl
push
cmpsl
fistpll
fadds
adc
movsl
mov
inc
popf
dec
add
dec
xchg
pusha
cmp
mov
xchg
movsl
ror
pusha
les
mov
lea
add
mov
pop
loopne
lds
push
idivb
push
das
ret
test
sub
adc
pop
mov
test
push
test
push
mov
add
and
cmp
je
pop
or
sub
stos
jle
subl
jno
addr16
xchg
inc
add
jno
loopne
cmpsb
pusha
scas
daa
push
xor
pushf
pop
clc
or
xor
std
scas
lods
in
dec
into
in
mov
xchg
add
ja
and
cltd
mov
mov
push
jge
movsb
cmp
andb
cmc
lea
push
rorl
call
sub
jns
lcall
mov
pop
jle
xor
lcall
mov
outsb
es
lds
sarb
inc
or
popf
xchg
pop
cmp
popf
call
push
pop
adcl
mov
sub
orl
icebp
pop
imulb
stc
out
adc
scas
aaa
inc
daa
mov
mov
push
sub
aas
jmp
rol
and
flds
lcall
mov
sub
mov
dec
mov
inc
mov
jns
push
or
mov
pusha
popa
scas
int
jmp
mov
iret
cltd
outsb
push
cmp
lea
jmp
xor
lods
in
jb
cld
xor
push
negl
dec
je
add
and
aas
sub
mov
mov
or
add
cltd
xchg
scas
and
sub
hlt
pop
jge
dec
fdivrl
mov
push
aad
jae
scas
xor
scas
sub
jno
pop
add
push
insl
mov
add
mov
cs
ljmp
jb,pt
push
and
xor
push
mov
lea
or
xchg
sub
ds
cwtl
inc
adc
jnp
and
fwait
repz
xor
sahf
ficomps
incb
and
pop
test
mov
jo
in
push
lret
mov
adc
mov
lret
adc
add
push
inc
xor
daa
imull
imull
aas
sbb
push
popf
hlt
adc
cld
xchg
lea
repnz
or
or
inc
aaa
adc
adc
jno
out
rcll
sub
xchg
xor
test
mov
mov
les
inc
pop
ss
adc
out
mov
pop
xor
xor
lret
lods
inc
enter
sahf
ss
imul
mov
les
faddl
jmp
fldt
and
xor
shlb
mov
xchg
loope
lret
loopne
and
push
mov
xor
pop
push
cmpsb
adc
push
cs
icebp
mov
mov
push
sar
xchg
ret
hlt
mov
popf
jno
lret
xchg
lahf
leave
mov
push
into
ficompl
adc
fisttpll
aaa
jecxz
in
jmp
shll
insb
pop
lods
lahf
repz
repz
test
cmp
push
leave
pop
rorb
sub
pop
mov
or
fs
sbb
inc
or
mov
mov
push
out
cmp
dec
sub
incl
mov
fidivs
loopne
mov
das
mov
nop
mov
int
mov
repnz
jmp
into
add
or
or
mov
and
pop
enter
jl
push
into
filds
lods
xchg
dec
mov
inc
push
mov
mov
leave
filds
push
push
or
aam
push
arpl
lret
ret
xlat
aaa
loop
in
mov
push
mov
or
dec
movsb
mov
out
adc
xlat
sbb
ss
loop
lret
push
jns
cwtl
add
push
pop
adc
aad
cmp
pop
mov
push
push
mov
adcl
aam
push
xor
movsbl
dec
push
in
and
sbb
ja
push
push
pop
dec
push
cs
cli
jge
pusha
fstpt
loop
movsb
push
mov
lahf
cli
fisubrl
adc
jno
lods
jno
cmpsb
dec
out
jmp
jno
repnz
into
or
dec
xchg
popf
leave
rcrb
xchg
sub
cmp
mov
cmp
mov
out
lcall
imul
cmpsb
ret
arpl
adcb
repnz
adc
lret
jb
inc
sti
mov
movsb
inc
pop
outsb
mov
iret
jecxz
cmp
mov
jbe
lcall
shl
pop
dec
adc
pop
pushf
pop
aad
aas
jp
out
sub
sub
mov
stos
inc
stos
cwtl
lods
lock
nop
cltd
add
inc
inc
sub
mov
lock
mov
xchg
stos
inc
js
aas
leave
xlat
shrl
imul
sarb
aam
inc
into
mov
mov
jle
mov
int
cmp
mov
pop
xor
cmp
icebp
fimull
sqrtps
inc
pop
ret
fistps
pop
xchg
jno
mov
into
sarl
lahf
call
call
andl
ret
lret
movsl
pushf
fimuls
popa
xchg
mov
lods
enter
mov
xlat
cmp
cli
int
pushf
pusha
fisttps
cmp
enter
push
es
iret
out
add
mov
rclb
push
rcrl
ljmp
xchg
adc
rcrb
or
arpl
scas
rorb
aas
jmp
sub
jmp
inc
loope
js
push
aaa
mov
inc
jmp
jg
mov
inc
cmc
int
lcall
dec
sub
adc
jbe
xor
push
rcrb
scas
mov
fwait
movsb
adc
inc
jg
add
mov
jo
push
ljmp
cmp
add
int
sbb
pop
push
adc
std
shll
outsb
pop
popf
addb
ret
xchg
out
sub
or
xlat
cmp
mov
mov
shlb
addl
sub
jle
mov
push
xchg
push
test
add
inc
roll
pop
xchg
dec
cmp
aad
lea
jne,pt
rcll
cmp
xchg
or
push
push
pop
mov
cli
jmp
rcrb
dec
cmc
lods
mov
mov
push
loope
call
dec
jno
sub
dec
in
jo
shrl
jp
gs
or
fidivrs
sbb
sub
pop
ja
scas
adc
push
push
pop
insb
in
push
xchg
stc
mov
add
jb
pop
aaa
jle
fwait
pop
aad
dec
and
imul
pop
mov
mov
stc
pushf
jno
test
mov
repnz
das
or
dec
mov
mov
stos
xchg
fs
jecxz
pop
aas
cmp
js
les
sub
mov
inc
leave
xchg
xor
jo
inc
orl
mov
iret
les
movsb
mov
mov
ljmp
test
pop
pop
jecxz
pop
jecxz
adc
xchg
jns
xor
aad
jecxz
cwtl
and
mov
jno
jnp
adc
mov
and
pop
loope
not
fidivl
lods
bound
push
inc
jno
out
xchg
fsubrp
fimuls
pop
fwait
iret
xchg
gs
add
int
push
stos
sub
mov
arpl
cwtl
jnp
or
pop
dec
sub
ljmp
or
xor
aaa
adcb
pop
sub
xchg
mov
pop
xor
outsl
adc
pusha
pop
push
ss
outsl
into
jle
aas
mov
push
insl
mov
cld
fld
jne
dec
mov
stc
sarl
jbe
sbb
and
shl
sbb
mov
inc
pop
mov
es
inc
mov
pop
into
sbb
insl
sahf
shlb
xchg
jne
ds
push
cltd
sub
sbb
add
push
repnz
sub
cmp
outsb
add
sub
lods
ds
or
or
mov
jmp
adc
mov
movsb
mov
and
xor
inc
and
sbb
cmc
in
aas
gs
iret
mov
mov
test
and
mov
scas
fcoms
mov
cmp
stos
add
iret
inc
mov
pop
xchg
sbb
adc
cmp
or
jge
dec
dec
lods
mov
adcb
mov
push
sub
outsb
js
sar
sub
sub
adc
pusha
add
jb
mov
je
pop
mov
mov
jno
push
xor
bound
jns
jo
hlt
insb
xor
ficomps
dec
or
rcl
nop
jle
push
in
addr16
push
mov
out
outsb
stos
xor
mov
mov
fcmovnbe
jl
out
insb
hlt
push
jle
aad
sub
out
pop
sbb
pop
sbb
fildl
dec
stc
movsl
dec
aad
add
addb
imul
call
popa
xor
roll
xchg
cli
push
jbe
outsl
add
cmc
and
mov
loop
sub
cmc
xchg
add
sub
dec
sub
dec
adc
cli
ret
xor
inc
loope
insl
lock
inc
xor
out
cmp
jmp
and
adc
and
mov
lods
and
cld
mov
ljmp
mov
gs
xor
pop
lods
xchg
lea
dec
mov
lds
xor
or
dec
sub
jae
fisttps
sti
sub
and
mov
mov
pop
xor
or
clc
scas
inc
sti
repz
mov
mov
and
sbb
outsb
push
ja
jae
cs
pop
scas
lods
add
dec
jnp
ret
sub
push
push
fldt
imul
insl
pop
pop
fsubrl
push
lea
insb
cltd
jns
cmp
mov
test
movsl
xchg
add
imul
push
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
push
dec
push
daa
in
adc
and
jmp
push
arpl
push
and
xchg
mov
ljmp
and
js
movsl
inc
stc
stc
cmp
or
dec
stc
imul
loopne
xchg
xor
bound
andl
idiv
ret
mov
xchg
dec
inc
popl
lock
outsl
sub
adc
jecxz
andb
rol
push
je
mov
and
xor
cmc
pop
stos
jg
sub
adc
jmp
xchg
cmc
ljmp
rol
out
adc
loope
adc
mov
mov
ljmp
stc
add
xor
jp
icebp
out
lahf
xor
xchg
shrb
les
xor
inc
add
scas
fildll
push
jno
xor
mov
fistps
ret
pusha
dec
aas
adc
gs
sbb
fcom
cld
fisubl
jecxz
nop
xor
ljmp
sub
add
add
sub
pop
mov
inc
pop
and
add
cmp
mov
pop
sub
jo
repnz
jl
gs
repnz
cwtl
cmp
inc
and
fcomps
int3
adc
mov
and
dec
ja
out
fildl
in
mov
repz
xor
dec
mov
xor
movsl
add
std
inc
jne
out
xor
or
pop
sub
les
outsb
xchg
das
pop
test
jle
sub
dec
push
dec
or
push
repz
cli
enter
push
lods
mov
ljmp
stos
aaa
mov
in
pop
ljmp
sahf
xchg
cmp
jb
xchg
imul
shl
xlat
out
jmp
lea
adc
cli
or
mov
lret
sub
push
les
jge
adc
pop
loope
jle
xor
cmp
movsl
es
mov
add
push
in
mov
pop
outsb
push
or
inc
xor
gs
imul
daa
push
mov
cmpsb
stos
sarb
cmp
lods
sub
mov
cli
sbb
sub
test
pushf
fnstcw
daa
and
cs
imul
popf
lods
and
inc
push
cwtl
push
mov
std
push
or
push
adc
push
xchg
into
sbb
cmp
test
pop
sub
out
fs
scas
ret
mov
push
in
add
lds
cmp
decb
ror
inc
push
sub
xchg
test
xchg
aam
add
adc
stc
repz
mov
push
ret
fwait
xor
or
xchg
dec
pop
add
lea
dec
push
and
xchg
stos
and
mov
mov
insl
mov
roll
xor
lcall
cltd
mov
xor
jbe
sbb
cmp
sbb
leave
in
or
es
mov
cmp
pop
fcmovne
pusha
inc
lds
mov
dec
sub
xchg
in
loope
in
mov
lds
cmp
xor
sub
jge
das
mov
and
or
scas
pop
mov
mov
or
xchg
sbb
lea
cmp
inc
mov
push
enter
rcr
in
test
lahf
aad
mov
add
mov
inc
xor
inc
mov
call
push
cmpsb
sub
rcrb
cld
lcall
mov
insb
cmpsl
icebp
fdivrp
mov
sbb
repnz
shl
adc
scas
or
sbb
or
ret
adc
insb
divb
cmp
data16
xchg
movsb
stos
sbb
mov
ret
filds
mov
jecxz
or
por
mov
inc
cs
lds
jl
jle
iret
push
jno
lret
rep
sub
mov
adc
movaps
xchg
push
aam
xchg
iret
repnz
xorb
rolb
pushf
stc
and
aaa
fistl
fdivl
mov
rcll
xchg
lcall
ret
popf
sub
dec
xor
mov
lods
adc
dec
xor
adc
rorl
int3
lods
sub
in
test
movsl
mov
sbb
cmc
inc
mov
pop
dec
gs
popf
ud0
aam
mov
xchg
push
inc
outsb
mov
sbb
xchg
lret
inc
scas
aam
outsb
sub
into
inc
cwtl
mov
dec
clc
and
loope
stc
cmp
ffreep
call
add
arpl
or
add
xor
lods
and
push
ss
aas
sbb
repnz
sbb
sbb
cmpb
pop
cmpsb
push
sub
mov
jo
mov
sahf
and
pop
les
jo
shl
repz
daa
ss
inc
or
or
jne
sbb
jbe
or
lock
js
pushf
roll
les
lahf
fstpl
jle
aas
dec
mov
and
fistps
je
sub
mov
sahf
in
push
aad
mov
jns
sti
push
fisubs
mov
jns
aam
shll
jmp
or
aad
lret
jno
pop
cmp
mov
and
sub
mov
lahf
xor
inc
fdivrl
xchg
stos
add
movsb
shll
push
loope
fists
stos
incb
gs
ret
nop
mov
xchg
xorb
mov
jecxz
adc
pusha
xlat
or
cmc
pop
inc
push
cmc
ljmp
mov
push
adc
enter
xlat
ret
addr16
pop
gs
mov
stos
jne
repnz
pop
sub
jo
mov
add
stc
pop
ret
popa
gs
xor
pop
sub
fisttpl
push
mov
and
ret
mov
sub
add
dec
test
xor
filds
or
and
es
shll
shll
insb
pop
inc
lcall
xchg
rolb
loopne
push
aam
mov
aas
mov
das
js
xorb
fs
adc
fsubrs
or
rorl
pop
scas
data16
lret
xchg
add
mov
fidivrs
and
xor
xor
xlat
sti
mov
fadds
pusha
ret
add
shl
mov
cmpsl
lods
mov
mov
mov
mov
mov
xor
imul
jle
in
bound
mov
or
daa
out
mov
push
insl
ds
in
lock
xor
push
sub
xor
in
out
xchg
cmpsb
and
mov
out
pop
mov
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
or
adc
and
jns
xchg
xchg
aas
stos
lods
adc
jnp
xchg
fsub
inc
stos
iret
cmp
xchg
pop
sbb
popa
in
cwtl
lea
push
test
test
ja
jnp
movsb
sub
push
outsb
aas
enter
xchg
movl
flds
pop
popf
and
fcompl
push
int
adc
xor
lcall
loopne
and
movb
stos
xor
js
cmp
subl
and
aam
hlt
jnp
in
test
dec
xchg
dec
jo
ja
push
xlat
mov
sub
into
and
mov
sar
mov
mov
les
push
stc
push
mov
adc
insb
dec
loopne
ljmp
cmp
dec
push
inc
push
ret
push
inc
daa
xchg
outsl
mov
dec
movb
or
lods
insl
jno
out
int3
arpl
inc
sub
push
sahf
jecxz
lea
nop
lret
or
stos
fnstenv
inc
test
adc
jge
mov
cld
mov
push
movsl
aaa
fidivrl
xchg
insl
sbb
ja
jge
mov
jl
adc
push
cmp
fs
sbb
push
mov
mov
negb
in
enter
stc
fwait
add
rcll
sbb
movsb
fmull
lcall
push
dec
or
mov
push
jecxz
cmp
mov
mov
mov
dec
cld
call
into
outsl
rcrl
dec
jbe
in
clc
push
push
je
rcrb
mov
rdmsr
xlat
mov
das
lods
jp
leave
jb
add
jnp
xchg
add
pop
and
in
inc
or
outsl
fwait
in
jmp
add
adcl
xchg
jae
sbb
mov
xor
and
sti
add
ja
push
arpl
xchg
push
mov
sub
jge
add
and
mov
xchg
lods
sub
adc
cmpsb
add
mov
addb
xor
mov
dec
jmp
adc
adc
inc
jge
push
xchg
mov
and
rcrb
mov
mov
aam
jnp
and
aas
and
or
mov
aad
or
jnp
push
sbb
jl
jp
inc
mov
jg
shrb
xor
loope
sbb
fs
xchg
mov
mov
pushf
into
jae
js
xor
mov
lret
or
mov
loope
cli
cmp
les
shlb
shrl
add
add
inc
xchg
cli
aaa
mov
les
xchg
js
pop
ds
mov
dec
fidivrs
mov
imul
pop
ds
into
sbb
ss
pop
push
shlb
test
pushf
mov
dec
enter
aad
in
lea
or
cmp
xor
jmp
gs
pop
mov
ljmp
pop
leave
cmp
sbbl
mov
jmp
xlat
jl
xchg
mov
hlt
imul
int3
push
mov
xchg
sbb
mov
out
dec
add
mov
push
push
arpl
iret
mov
mov
lea
scas
addr16
pop
int
dec
aaa
sub
repz
pop
or
repz
movsl
xchg
fwait
xor
jge
in
lcall
dec
and
pushf
mov
nop
ss
mov
mov
fs
sbb
pop
cmp
scas
cs
shll
add
xchg
aaa
std
mov
cld
push
lock
pushf
int3
push
out
cmpsb
dec
mov
add
orb
das
stos
push
dec
add
lock
add
sub
ret
ss
jne
fld
std
adc
xor
lods
dec
cmpsl
sub
pushf
std
jl
add
sub
push
scas
xchg
jle
test
les
icebp
lahf
mov
popf
or
xor
jmp
sbbl
pop
call
mov
cltd
or
or
add
inc
xchg
stc
or
pop
ficoms
cmp
rolb
push
xchg
mov
cmp
mov
mov
mov
out
pop
pop
fstp
adc
mov
fimuls
xchg
push
xchg
inc
adc
lock
enter
ror
mov
inc
shrb
jl
jge
xchg
js
in
imul
test
sarb
add
sti
fstpt
out
pusha
inc
mov
aad
fstl
ds
mov
shrl
je
mov
push
stc
sbb
add
out
mov
bound
mov
jnp
aas
pop
xchg
xor
sub
xchg
int
leave
jmp
test
jbe
popf
out
push
insb
daa
pushf
add
int
mov
jl
xchg
pop
pusha
push
ret
mov
insl
jecxz
repz
dec
pop
aaa
adc
call
mov
jle
in
pop
cwtl
ljmp
or
stos
inc
cmp
pop
pop
icebp
sbb
lods
or
push
push
and
cs
lahf
mov
push
cli
stos
cmc
in
sbb
test
cmp
or
jbe
sarb
or
sub
mov
test
lods
and
arpl
loop
mov
inc
xchg
pop
and
out
cmp
aad
movsl
adc
mov
in
ja
negl
shll
scas
mov
inc
inc
lds
adc
xor
cli
sbb
ret
pop
insb
inc
rcl
pop
lods
test
dec
sti
push
shrl
in
je
jp
and
add
lods
and
sbb
rcll
test
jns
js
pop
mov
aaa
jg
cld
xchg
in
mov
add
mov
flds
decb
cs
mov
addl
adc
inc
jae
inc
add
xchg
add
and
js
fnstcw
in
pop
xchg
mov
cmp
jno
xchg
pop
jg
cltd
and
push
div
xchg
sub
jno
icebp
mov
icebp
out
sub
lret
imul
pop
mov
aas
pushl
cmpsb
test
ficoml
sub
mov
add
cmp
cmp
push
add
add
test
adc
scas
inc
sub
fpatan
fiadds
sub
addr16
pop
cmp
push
add
jmp
mov
or
loope
mov
stc
sub
insl
lods
push
fdivrp
cmp
ficoml
iret
push
sahf
inc
sbb
xchg
lods
cwtl
les
xor
adc
out
testb
mov
cmpl
xchg
push
rcr
sub
dec
cmpsb
clc
addr16
xchg
int3
ss
mov
jmp
cmc
xchg
cmp
push
mov
adc
sahf
push
inc
int3
adc
and
lock
lods
movsl
xor
fadd
in
imul
inc
pushf
addr16
aas
xchg
data16
push
jge
jbe
popa
cmpsb
mov
pop
and
in
not
popa
dec
and
dec
in
sbb
mov
adc
jle
xchg
in
cmpsl
je
cmpb
dec
ljmp
orb
into
xor
xchg
xor
add
punpcklbw
sarl
sub
inc
xor
sahf
lock
pop
and
and
and
ja
setbe
lcall
notb
and
adc
adc
xor
sub
jecxz
lret
out
inc
xor
or
jmp
in
pop
mov
sbb
pusha
inc
mov
rclb
daa
loop
outsb
adcl
and
lock
in
jns
int
call
add
mov
push
je
dec
add
loop
je
sbb
add
popf
and
jns
aaa
pop
xchg
ret
lods
lret
movl
dec
add
addb
pusha
adc
in
in
sbb
adc
dec
leave
xchg
out
sti
pop
mov
push
or
fcmovnb
test
std
pushf
movsb
loopne
push
mov
jne
sub
sub
add
mov
or
outsb
xchg
sbbl
push
mov
lahf
mov
or
pusha
mov
std
cmp
sti
cmp
fnsave
pop
xor
xchg
mov
xor
in
cli
cli
pop
mov
push
popf
cmpsl
movl
sub
mov
jns
push
pop
andb
xor
movsb
mov
test
andl
and
insl
add
mov
and
gs
add
add
test
cmp
sti
jns
mov
stc
dec
push
shr
cld
cwtl
xor
dec
push
and
into
cmpsb
pop
mov
in
push
sbb
clc
dec
push
jns
sub
das
adc
cmp
mov
test
cmc
fnsave
out
movsl
mov
outsb
stos
adc
repnz
pop
stos
sbb
and
or
jmp
xor
xchg
push
loop
inc
test
test
data16
pop
lcall
xchg
mov
mov
dec
leave
fdivp
shrb
sbb
fsub
stos
adc
jmp
repnz
fbld
pop
add
in
pop
pop
fstl
jl
in
sti
enter
push
mov
rol
mov
cmp
mov
add
dec
mov
jge
iret
add
clc
stc
repnz
fwait
imul
lock
xchg
inc
mov
xchg
movl
pop
push
sub
dec
xlat
push
inc
daa
add
mov
push
push
xchg
shll
dec
test
or
loop
jbe
dec
addr16
jg
test
or
subl
arpl
sbb
dec
mov
das
pusha
outsb
loope
das
rcll
movsb
cmpsl
roll
out
dec
push
push
mov
imul
or
pop
inc
fs
in
mov
sbb
inc
sar
ss
es
es
or
lahf
into
cmp
lret
adc
mov
pusha
sub
xor
add
jns
into
sbb
jno
mov
divl
jp
shll
out
fidivrs
test
outsb
sbb
adc
jmp
cmc
fsts
aam
add
lret
xor
in
orl
addr16
xor
add
cmp
clc
fwait
lret
int3
adc
ret
imull
cmc
pop
sbbl
xor
shl
sbb
and
sub
sub
jo
adc
lods
dec
lret
mov
or
xchg
popa
gs
psubd
xchg
stos
jb
mov
filds
ret
insb
movsb
jl
call
scas
and
ds
pop
or
fbstp
add
test
roll
jl
pop
mov
movnti
das
iret
inc
lea
scas
fwait
int
pop
cmpsl
sub
cwtl
ret
mov
pushf
or
loop
inc
enter
mov
push
das
add
mov
pop
repnz
aad
mov
xchg
push
movntq
out
aam
es
pop
les
jno
pop
mov
push
inc
pop
sbb
or
dec
mov
push
outsl
loop
and
fldt
jmp
mov
lcall
mov
add
out
fadd
push
insl
clc
cmp
add
jae
mov
insl
or
loopne
mov
mov
adc
clc
push
mov
xchg
lea
dec
insl
pop
arpl
jns
pop
mov
popf
push
push
add
roll
icebp
push
stc
daa
test
xchg
adc
sahf
testl
dec
adc
xor
push
mov
mov
gs
lods
jbe
sub
cmp
sub
mov
and
fdivrs
imul
aas
mov
adc
sbb
jl
add
and
addr16
rolb
add
mov
sbb
sub
jo
dec
push
idiv
jmp
jmp
mov
ret
inc
or
aam
out
shr
nop
mov
cwtl
ljmp
inc
aas
out
out
mov
mov
mov
add
pop
or
ret
jno
in
das
pop
xor
inc
mov
jge
xor
dec
jnp
and
mov
int3
mov
push
dec
mov
cwtl
and
outsw
cmpsb
mov
and
and
movsl
popa
jg
mov
das
jl
out
sbb
in
stc
decl
jmp
adc
add
inc
lcall
push
shrb
loope
aad
jno
push
xor
and
mov
pusha
out
push
pusha
jl
sar
xor
lock
adc
and
hlt
dec
lods
mov
mov
and
out
mov
shl
sub
stc
and
les
movsl
or
push
outsl
mov
mov
pop
cmpsl
or
lahf
addl
addr16
sub
shr
dec
cs
int
cmp
mulb
insb
pop
ljmp
adcb
inc
mov
jecxz
push
enter
idivb
mov
aad
pop
xlat
xor
sub
lea
stc
sub
ret
add
cwtl
cmp
push
sahf
push
lret
stos
and
aad
fwait
mov
adc
test
shll
shrb
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
cmc
scas
xchg
pop
mov
setg
pop
cmp
pop
push
xchg
cmpsl
mov
inc
xchg
adc
jae
xchg
popa
fisttpl
clc
ret
insl
lret
or
in
cmp
pop
sub
jge
cmp
push
cmpsb
mov
jno
push
xor
xchg
push
dec
inc
es
lret
sti
add
pop
mov
es
fistl
lock
xchg
cld
cld
or
movsl
in
lret
mov
push
sub
inc
push
jo
sub
push
xchg
inc
es
dec
sub
and
or
adcb
pop
mov
xchg
fcoms
andb
mov
stos
xchg
pop
mov
shlb
jge
jge
push
out
cmp
jmp
pop
mov
dec
in
xchg
repnz
hlt
pop
or
sub
lods
dec
popa
sbb
ljmp
sub
js
xor
xchg
mov
jae
out
xchg
mov
test
sbb
or
mov
add
ja
pop
dec
insl
ret
outsb
cld
lret
cmpsb
pop
in
in
adc
imul
xor
dec
aam
jns
mov
repnz
pinsrw
push
cwtl
ret
in
in
ret
jbe
xchg
jle
inc
pushf
and
mov
jp
mov
enter
leave
xchg
in
cwtl
push
outsl
sub
lcall
push
inc
rcrb
mov
in
rcrb
jecxz
cs
push
or
fcmovnu
adc
imul
sbb
adc
pop
or
lock
ret
lods
sbb
sub
push
bound
push
fwait
xor
adc
cltd
pop
mov
jne
pushf
fwait
add
dec
cmp
js
cwtl
and
dec
xchg
sub
faddl
sbb
aas
sbb
dec
pop
jl
mov
pop
sub
movbe
out
push
pop
repz
shl
cmp
mov
mov
imul
add
mov
aas
fsubs
push
cmp
test
or
sbb
xorl
and
jns
xor
pushf
cmp
cld
adc
sub
push
lea
movsl
lahf
test
add
sarb
adc
jns
in
shlb
or
in
aad
ds
inc
xchg
insb
es
add
lcall
insl
xchg
clc
push
sahf
cmp
jno
cmp
std
mov
jo
jg
imul
pop
inc
xchg
lahf
iret
sbb
push
iret
jns
js
out
xchg
in
rorb
inc
outsb
lret
mov
xor
cmp
dec
jg
xchg
call
and
or
cli
add
and
imul
or
jno
sub
adc
int3
adc
sbb
jecxz
push
xor
fistpl
push
mov
push
test
out
push
xchg
mov
icebp
lcall
int3
cld
jnp
add
or
sar
test
pushf
sahf
sub
ljmp
push
movsl
test
mov
fidivrs
lods
enter
sub
cltd
xor
subl
mov
mov
sub
cmp
pushf
cs
mov
lds
and
es
jbe
mov
idivb
inc
vpacksswb
scas
movsl
add
sbb
sub
fisubl
addr16
insb
sbb
popa
xorb
sti
jmp
mov
test
stc
inc
push
xor
mov
sub
rolb
cmp
icebp
mov
mov
out
negl
mov
outsb
inc
jae
aad
dec
cmpsb
jbe
pop
int3
add
jae
jb
pop
xlat
add
mov
orl
and
shrl
add
lret
adc
adc
movsb
int
dec
jl
xchg
pop
mov
and
sbb
xchg
sbb
sbb
movsl
sub
or
icebp
jmp
cmp
nop
insl
xchg
mov
fs
xchg
sbb
sub
jmp
mov
push
adc
mov
cmpsl
xchg
inc
jno
sub
cmp
insb
xor
inc
pop
dec
daa
filds
loopne
jecxz
mov
out
scas
fldenv
mov
inc
xchg
out
and
xchg
test
sbb
pop
fists
rcr
pop
pop
and
inc
or
jb
mov
add
mov
out
fdivr
lcallw
out
mov
push
mov
in
push
sub
xor
ficompl
cli
add
push
in
adcb
sti
jmp
aaa
jle
mov
sarb
mov
sahf
add
mov
call
sbb
mov
jge
mov
stos
dec
jne
push
inc
ja
out
pop
xor
loopne,pn
push
dec
loope
mov
or
stos
add
push
mov
mov
mov
enter
or
push
xor
sahf
cltd
inc
negb
push
sub
popf
cmp
pushl
lahf
mov
insl
xor
aaa
mov
sahf
lret
repz
push
loop
ja
sbb
cvtps2pd
bound
mov
cltd
in
xchg
cmc
and
ds
adc
rol
ds
cwtl
clc
xchg
in
cmp
aam
repz
sub
mov
inc
sub
je
push
lds
aaa
les
or
dec
fisubrs
sarb
sti
out
xorl
push
xchg
dec
mov
sbbl
jno
out
std
cmp
mov
sbb
aam
jnp
push
test
rorb
ret
cmpsl
insb
pop
add
ret
jb
adc
mov
fstpl
mov
sbb
sub
mov
out
out
xchg
outsb
adc
pop
and
ret
or
fmulp
xlat
inc
pop
jg
pop
pop
mov
lods
cmp
lea
fisubl
pushf
fdivl
or
push
lret
mov
inc
cltd
pop
rcrb
push
insb
lds
push
aam
int
inc
in
out
inc
inc
ret
outsl
mov
cltd
jge
adc
push
repz
cmp
cmc
cwtl
sbb
loop
mov
mov
out
xchg
xchg
rcll
xor
adc
test
adc
mov
mov
sub
dec
movsl
add
test
shl
jae
addl
outsl
imul
mov
xchg
pop
inc
cli
jl
sbb
ss
pop
int
mov
add
jg
mov
cmp
sahf
pop
xchg
imul
pop
ljmp
lret
inc
lea
mov
ss
scas
adc
mov
loope
ret
jnp
mov
adc
add
jmp
jne
add
subl
xchg
in
fdivrl
mov
pmulhrw
lods
jns
or
and
cmc
lea
nop
cld
mov
inc
pop
xor
inc
jbe
sub
add
push
jae
adc
xor
xchg
mov
mull
lcall
fs
jmp
cmp
sub
mov
mov
ja
push
fwait
out
testb
and
jge
push
jmp
test
out
adc
in
jnp
pop
idivb
movsb
mov
xor
shll
mov
push
loop
xor
dec
int3
add
dec
xchg
pop
mov
mov
jg
std
xor
adc
and
cmp
inc
lahf
pushf
xchg
jl
mov
js
mov
int3
in
sbb
ret
out
subl
cmp
cwtl
xchg
xchg
pop
cltd
xor
test
mov
jecxz
orb
das
es
inc
and
xchg
or
arpl
es
mov
sbb
test
cs
fneni(8087
jnp
out
arpl
push
das
out
mov
mov
scas
arpl
les
fists
nop
fisubrs
sub
int
pop
and
sbbl
or
aas
in
lret
fisttps
sbb
lcall
xor
cmp
out
fadds
dec
js
or
lcall
fistl
in
jl
fs
and
fldt
inc
inc
mov
lret
mov
cmp
icebp
mov
ss
jo
insl
scas
cli
clc
cltd
dec
dec
adc
notb
cmp
aad
jae
repnz
mov
adc
jno
in
fildl
lret
xlat
ret
aas
fldenv
ret
pop
je
outsb
lahf
inc
subl
inc
addr16
out
pushf
int3
mov
mov
push
nop
lcall
iret
xchg
sbb
xchg
mov
xchg
cmp
push
addr16
jo
frstor
daa
cmp
sub
jmp
ret
cltd
js
pushf
push
jl
ljmp
je
data16
out
stc
lahf
xor
loope
cmp
xor
lods
mov
clc
cs
and
add
add
out
adcb
leave
rcll
daa
mov
sub
in
adc
add
cwtl
les
js
repnz
mov
cld
mov
mov
mov
push
pop
adc
scas
add
fbstp
jmp
sbb
loopne
mov
lret
xchg
add
jbe
leave
xorb
jb
imull
pop
in
ljmp
fistpl
ja
repnz
in
ds
inc
pop
addb
push
ret
shlb
fisubs
shr
pop
jmp
out
sub
xchg
loopne
addb
int3
or
mov
sbbl
daa
and
lret
push
addb
sbb
in
xor
cmp
jl
inc
movsb
cltd
mov
daa
repz
popf
mov
push
or
jecxz
pop
lcall
add
and
sub
loopne
mov
push
rol
add
lods
adc
jmp
and
popa
mov
gs
cmp
data16
xchg
dec
cmp
or
add
scas
inc
lret
add
lds
and
cld
push
ja
mov
inc
add
lock
pop
dec
jns
flds
xor
out
and
lods
sbb
cwtl
std
fldl
pop
push
mov
outsl
xor
inc
pop
inc
cmpsb
fcmovnbe
fs
rcrl
lods
std
cmp
mov
inc
or
sub
movsb
movsl
pusha
iret
xchg
mov
xor
dec
sbb
pop
pop
imul
pop
xchg
xchg
pop
mov
add
xchg
ret
and
cmp
lock
bound
ss
mov
adc
adc
movsb
cwtl
sub
lods
and
in
push
fsubrs
ds
cwtl
mov
push
gs
iret
enter
pop
push
cmpsl
je
out
pushf
or
ss
int3
sbb
xchg
adc
or
push
and
in
mull
mov
stos
adc
in
gs
and
lea
repnz
dec
pop
xor
and
jl
and
out
xchg
repnz
ret
enter
jl
mov
mov
push
pop
fsts
outsl
jb
test
in
gs
jne
call
mov
mov
pop
sbb
jns
mov
in
aam
xchg
pop
and
pushf
popf
jmp
mov
loope
mul
xor
dec
jl
mov
dec
repnz
mov
mov
jns
or
cmpsb
inc
fs
xor
xchg
sbb
sub
xchg
out
cwtl
adc
and
inc
in
or
fisttpl
mov
aam
push
xchg
js
mov
enter
push
mov
or
xchg
sti
divl
add
jecxz
sub
or
mov
dec
jno
shl
fmuls
stos
pop
xor
inc
scas
push
push
sahf
js
xchg
roll
mov
mov
mov
fwait
push
call
push
xchg
and
nop
test
aas
pop
fildll
inc
pop
sbb
or
push
lret
cmpsl
jb
mov
xchg
pusha
lock
push
enter
int
mov
bound
sub
mov
leave
lcall
enter
bound
mov
push
std
pop
rorl
xchg
es
xchg
mov
adc
icebp
xor
cmc
mov
popf
mov
daa
mov
pop
ret
out
call
out
push
sub
cwtl
dec
movsl
aad
push
in
fstpl
popf
xchg
orl
lea
sbb
lret
sbbl
std
enter
mov
aad
icebp
aam
jle
lods
add
and
mov
mov
in
cmc
cmp
cmc
imul
loop
push
lds
shrb
push
jne,pt
movsb
fistpl
push
adc
mov
outsl
cmpps
mov
les
out
aad
dec
adc
push
mov
inc
fbstp
ljmp
ss
js
les
push
aas
mov
ja
inc
dec
into
mov
test
stos
jmp
inc
out
imul
ljmp
dec
mov
cs
sbb
jne
dec
xchg
and
fimull
mov
mov
mov
pop
mov
adc
sti
repz
pushf
rol
ljmp
jne
inc
mov
sub
xorb
pushf
push
mov
push
inc
mov
into
loope
sti
aad
add
push
mov
dec
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
push
and
js
mov
mov
mov
mov
arpl
xor
int3
test
loope
dec
js
cmpsl
arpl
or
incl
outsb
cmpsl
repnz
push
sbb
clc
rorb
inc
xchg
in
in
sti
add
xchg
inc
popa
test
mov
pop
je
mov
js
or
outsl
pop
outsl
sbb
cmp
fidivrl
lds
sbb
add
push
xchg
popa
push
push
sub
jl
pop
dec
lret
sub
push
dec
les
inc
dec
mov
or
stos
test
mov
jge
std
sbb
cmp
jo
push
and
jl
scas
jnp
xchg
pop
jae
sarl
xor
mov
pop
fiadds
int3
int
lahf
pusha
test
dec
xlat
sub
xchg
insb
mov
and
push
jo
sti
pop
mov
das
stos
adc
idivb
cli
sub
fisttpll
mov
pop
push
popa
mov
inc
add
ja
cmp
mov
push
dec
and
xchg
pop
pop
mov
shl
mov
rorl
inc
das
or
xchg
jp
or
push
pop
and
call
loope
ss
arpl
into
loopne
add
adcl
shr
xor
loopne
cmp
pop
inc
int3
adc
jl
sbb
fs
or
sub
sarb
in
dec
cmp
push
dec
xor
push
jo
xchg
imul
mov
adc
adc
jmp
into
cltd
and
mov
dec
dec
jle
popa
inc
push
mov
mov
jbe
adc
cs
sub
adc
mov
dec
mov
outsb
movsb
cmc
in
adc
mov
loopne
stc
adc
push
add
xlat
or
test
adc
jns
inc
or
loopne
xchg
bound
cmp
outsb
ret
adc
fsub
cli
xor
or
fadds
subb
leave
and
mov
rclb
mov
mov
cwtl
adc
repz
adc
pusha
sub
mov
push
push
mov
cmp
orl
out
mov
xchg
bound
test
pop
adc
fsubrs
or
mov
push
push
xchg
inc
mov
dec
repz
add
add
mov
cmpsb
or
mov
push
out
push
js
jo
fsubr
ss
push
dec
jns
fistps
aad
pop
jnp
pop
int3
pop
pop
xor
push
into
add
jb
jmp
jmp
mov
sbb
xchg
je
in
xchg
or
dec
addr16
pop
inc
fists
lahf
shrb
loope
mov
es
rcl
or
xor
not
ret
addr16
xchg
aam
push
inc
push
pop
push
pop
push
jg
insb
xchg
in
daa
push
sbb
jmp
cmc
adc
mov
jb
fdivl
jecxz
aam
or
clc
imul
mov
mov
jmp
divl
sbb
or
cmp
loope
test
fmulp
test
mov
out
cmp
adc
lahf
les
fwait
dec
or
and
ds
pop
jl
pop
imul
add
mov
sbb
into
lods
int3
test
pop
pop
xchg
xor
jmp
pusha
inc
push
mov
dec
push
sub
leave
movsb
lods
and
cmpsb
inc
push
jns
ds
nop
in
mov
cmp
call
sbb
rclb
mov
lods
jecxz
push
pop
pusha
les
pop
lock
mov
push
mov
movsb
push
daa
ja
subb
fistps
mov
pop
sbb
jo
test
xlat
xor
push
fistpl
xor
out
mov
sahf
ficompl
or
add
lret
adcl
insl
leave
sub
enter
repz
cmp
or
and
imul
cmp
in
xchg
dec
test
push
outsl
sbb
cmc
lahf
jb
leave
out
in
es
in
test
enter
scas
mov
sbb
cld
or
test
int3
movsl
icebp
cmpsl
shl
data16
jmp
js
or
pop
cmpsl
push
cmp
test
mov
cmp
hlt
jo
mov
fbld
jmp
rcr
sahf
jb
jg
mov
dec
inc
cs
jle
mov
jno
ss
mov
xor
cmp
orl
rclb
in
push
fisttps
sub
in
lcall
ret
imul
xor
test
dec
sub
cld
addr16
ret
mov
jo
jae
out
mov
les
pop
aas
push
cmp
int
jg
mov
lds
lret
xchg
pop
jno
in
aas
or
pusha
decl
cmp
inc
pop
jp
sub
ljmp
ljmp
out
push
cltd
imul
cli
divl
xchg
sahf
and
xor
jg
cld
mov
pop
fstpl
pop
in
imul
sbb
cld
clc
or
ds
cmpsb
mov
sahf
sub
sub
jbe
xchg
movsb
fidivs
xchg
stos
pop
mov
mov
outsb
or
push
daa
faddl
jmp
mov
test
and
imul
mov
dec
sbb
cmp
stos
pusha
jns
popf
xor
push
dec
ds
arpl
das
int
inc
xchg
or
iret
or
pop
and
xchg
adc
call
fcmovnu
and
jge
lahf
adc
test
pop
push
and
and
add
mov
js
ret
lret
jns
lahf
arpl
lea
arpl
mov
pop
fstps
repnz
sub
mov
dec
pop
xor
push
jb
jl
aad
sub
jns
mov
pop
mov
ss
inc
mov
add
jge
adc
pop
cmp
jl
mov
leave
cmp
shlb
or
mov
shrl
stos
fistl
iret
iret
mov
js
cmp
xchg
fst
loopne
mov
jns
push
mov
decl
xchg
cmp
lds
out
jle
mov
jnp
adc
mov
rorl
repz
sub
pop
cmpsb
push
xor
sbb
mov
das
sbb
enter
js
fnstcw
pop
mov
and
outsl
jle
mov
push
or
arpl
popa
dec
xchg
rcll
xchg
mov
xchg
imul
out
adc
fisubl
test
imul
lret
leave
sahf
out
xchg
add
test
or
loop
mov
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
dec
mov
and
pop
push
int3
lea
clc
pop
loopne
adc
ja
cmp
sbb
mov
sub
lret
adc
xor
loope
jo
dec
inc
leave
in
stos
inc
fsubrs
or
add
arpl
mov
xchg
or
push
cltd
scas
sbb
in
sar
bound
mov
jl
xchg
rcrb
xor
add
pusha
pop
out
sbb
mov
fwait
inc
daa
nop
std
mov
cmc
lret
mov
cmp
int3
adc
xchg
push
mov
lods
ljmp
mov
sbb
popa
xlat
ja
adc
dec
jmp
lods
aas
add
add
test
push
cli
pop
negb
lock
aaa
mov
pushf
cmp
pushl
testb
xlat
insl
jg
pop
sbb
ret
call
outsl
ret
fisttpll
test
adc
lret
inc
push
dec
mov
inc
mov
and
inc
cmp
or
cld
xor
jno
cmpsl
xor
xchg
or
out
rorb
repz
es
push
nop
dec
jle
jp
lcall
adc
xchg
xor
inc
int
xlat
cmpsl
test
sub
push
add
daa
adc
js
es
pop
xor
orl
and
pop
or
cmp
mov
xor
sbb
push
test
adc
sub
ljmp
call
sbb
loope
inc
add
insl
shr
ret
shlb
xchg
dec
xor
inc
icebp
lea
out
out
dec
lret
push
shll
xchg
or
call
into
ror
popa
xchg
mov
aad
sub
pop
or
rcl
sbb
mov
psrlq
mov
cmp
fnstenv
aaa
dec
cmp
sahf
xor
popl
sbb
shr
push
repz
jmp
xchg
cmp
push
jns
dec
ret
xchg
lock
mov
add
adc
mov
push
into
pop
mov
pop
cmp
sub
and
mulb
sbb
lret
and
mov
push
test
das
inc
push
push
rolb
test
popl
unpckhps
out
fsts
les
pop
test
mov
inc
arpl
mov
cmc
or
push
addl
lods
repnz
cld
jno
mov
push
dec
je
inc
cmp
shll
sub
hlt
flds
dec
test
and
ret
dec
and
mov
inc
fbld
es
divb
sbb
push
pop
hlt
mov
sbb
pushw
sbb
xor
bound
add
outsb
jno
pop
insb
sbb
mov
fstpt
jae
sub
ss
adcl
push
out
outsb
jle
gs
sub
loopne
cwtl
stc
add
sbb
jle
pop
add
mov
loopne
xchg
push
sbbl
int3
idivl
imul
xor
and
and
je
lcall
repnz
sbb
or
push
out
inc
loope
cmpsb
in
add
pop
mov
push
bnd
rcll
and
das
in
cmp
pop
sahf
jge
aam
stc
cmp
mov
xchg
jg
inc
jno
filds
push
icebp
jnp
aam
xchg
push
call
dec
sbb
jne
in
cld
testb
lods
or
adc
mov
adc
push
pusha
jo
sbb
cmp
mov
ja
sbb
mov
daa
scas
aaa
popa
pop
lahf
sub
daa
addr16
or
inc
jbe
xchg
in
cmp
adc
jb
pop
mov
scas
xor
enter
flds
inc
add
jne
int
jno
cmpsl
mov
lock
xchg
addr16
inc
repnz
shrb
inc
xchg
xchg
popa
mov
inc
inc
jno
repnz
stos
mov
pop
sbbb
dec
jmp
ret
icebp
popa
xchg
xchg
fistl
out
rcrl
mov
ret
inc
adc
fdivr
scas
std
sbb
pop
push
xor
push
movsl
negl
mov
mov
cmc
add
mov
mov
iret
mov
inc
jne
mov
adc
xor
fs
outsb
int3
loopne
or
stos
mov
push
arpl
or
sub
or
mov
addr16
mov
push
cltd
popa
mov
popa
xchg
sti
xor
in
lds
cmp
ds
jecxz
movsl
adc
int
pusha
or
add
inc
push
sbb
xchg
mov
and
add
test
leave
sbb
vmread
pop
cmp
lods
adc
std
popa
push
sbb
push
sub
cmpsl
xor
pop
and
nop
aad
mov
push
sub
pusha
pop
cs
data16
add
jle
xchg
lcall
jge
loopne
mov
xchg
push
sub
lods
and
repz
xchg
cli
mov
dec
sahf
or
lcall
xchg
outsl
in
iret
push
and
pop
pminsw
xor
fdivrl
xchg
jnp
ror
sbb
push
loopne
les
cli
xchg
pushf
and
sbb
and
arpl
cli
pusha
inc
mov
jmp
shll
xlat
mov
mov
push
xor
cmp
inc
sbb
lret
and
out
mov
jl
push
push
repz
inc
bnd
add
pop
sahf
sbb
enter
decl
pop
in
inc
jnp
xor
stos
mov
loop
add
fwait
aad
in
add
xor
sbb
scas
jl
and
pop
push
cwtl
es
push
outsb
xorl
aas
add
adc
sarb
insb
and
inc
nop
pop
xchg
stc
lods
add
fs
xlat
mov
adcl
sub
mov
xorb
inc
inc
cltd
rcl
dec
ljmp
or
jb
pop
mov
movl
jg
int3
dec
jnp
jae
xorl
outsb
or
stc
push
js
fs
test
daa
jo
repnz
push
aam
or
movsl
dec
pushf
out
mov
xor
cmp
xchg
push
or
into
js
imul
arpl
out
mov
cmpsl
mov
cltd
mov
add
xor
xchg
jl
sub
inc
jno
cmp
dec
sbb
mov
sbb
inc
ficoms
es
xchg
inc
sbb
loopne
sbb
pop
fldl
and
and
and
into
int
push
popa
fildl
in
push
pop
cltd
cmp
test
lahf
jne
inc
data16
xor
test
lret
mov
mov
stos
xchg
jmp
sbb
push
adc
xchg
int3
xchg
nop
adc
and
xor
mov
insl
inc
test
add
sbb
popf
addr16
mov
and
fcomps
mov
in
mov
aaa
pop
rolb
pop
ficoml
push
ja
pushf
lods
mov
sub
repz
mov
jecxz
mov
repnz
xchg
lea
sahf
add
mov
adc
mov
jecxz
dec
cmc
jge
mov
mov
pop
mov
loopne
movsl
dec
hlt
pop
leave
xchg
cmp
dec
push
int
inc
dec
xchg
hlt
mov
test
test
cli
jp
insb
pop
test
mulb
and
push
in
leave
sbb
aaa
xor
and
ja
push
sub
mov
cltd
push
pop
movsl
roll
nop
add
iret
mov
outsb
lret
sub
inc
int3
mov
cld
shlb
adc
insl
jmp
lahf
lahf
sar
or
decb
fwait
imul
mov
xchg
add
lds
lret
xor
and
push
divb
pop
rclb
push
push
clc
jno
pushf
aas
mov
pushf
repnz
or
cmc
jo
add
call
pop
mov
int
dec
inc
mov
lret
aaa
cmp
in
scas
mov
test
clc
daa
fadds
out
enter
lcall
add
fsubr
add
cmc
aam
das
int3
dec
scas
add
sub
fadd
movsl
mov
loopne
inc
push
jno
cmp
enter
icebp
cmp
adc
lods
add
and
inc
jbe
sbb
stos
fstpt
xor
ror
aaa
pop
insl
mov
sbb
into
int
or
arpl
adc
mov
mov
cli
ror
inc
add
xchg
rolb
hlt
cmp
xchg
pop
jge
insl
jbe
sbb
dec
push
push
push
ror
push
mov
lock
inc
mov
stos
jmp
mov
add
cmpsb
mov
in
int3
mov
pop
dec
sbb
cmp
mov
jo
call
xor
inc
push
xor
mov
push
pop
cmp
test
rorb
imul
sbb
popf
xchg
fsubrs
pushl
addr16
mov
mov
pop
sahf
sbb
pusha
jge
dec
lcall
adc
cmc
lds
dec
push
jnp
inc
js
sbb
test
and
add
push
pop
in
dec
cmp
pushf
lods
xchg
cs
pop
sahf
adc
cmpsb
pushf
cmp
pusha
test
imul
ud2
mull
cmc
out
cmp
and
xchg
ret
push
data16
pop
xor
imul
xor
sbb
inc
stos
cmp
jle
leave
pop
pop
stos
jo
popf
addr16
lcall
je
cmpl
cmc
push
mov
xor
xor
sahf
lahf
sarb
xor
stc
orl
mov
jp
inc
repnz
loopne
and
mov
sub
or
shrl
js
dec
mov
jle
test
push
call
sbb
sbb
callw
push
pop
jb
and
arpl
adc
push
mov
xor
cmp
adc
pop
test
sbb
pop
rclb
jg
jns
xchg
imul
mov
xchg
jnp
cmp
sub
push
pushf
outsl
add
lcall
hlt
push
push
imul
xor
sub
xchg
pop
aaa
and
pop
rclb
pop
in
mov
jb
mov
inc
mov
xor
sub
xor
lret
fs
pusha
pop
imul
in
add
jg
hlt
cmp
and
and
scas
fcmovnb
cld
cmc
sbb
mov
mov
adc
andb
repz
imul
js
arpl
mov
pop
xchg
in
xor
push
xchg
sahf
mov
rcrb
insl
mov
jle
rorl
cltd
sub
pop
arpl
cmp
imul
push
pop
sub
push
mov
push
dec
sub
inc
adc
test
ljmp
setno
movsb
push
mov
xor
xor
orl
and
pop
pusha
jge
or
mov
mov
add
pop
leave
leave
mov
or
mov
aam
cmp
call
mov
rep
popa
dec
lea
scas
fildl
xor
mov
leave
jne
clc
loope
out
jle
push
inc
enter
inc
repz
inc
push
sbb
das
stc
fwait
mov
mov
add
sahf
call
out
fbld
pop
xchg
cld
cltd
ffreep
and
or
jmp
sub
xor
dec
push
sbb
push
js
inc
rcrb
sub
adc
leave
xor
mov
mov
ficompl
daa
adc
rolb
cmp
mov
jmp
orb
and
pop
adc
xlat
das
pop
loopne
jmp
and
push
push
shrl
jb
sbb
sub
mov
stc
idiv
cmp
sub
pop
xchg
pop
hlt
adc
mov
inc
adc
nop
or
mov
mov
leave
stos
push
sbb
test
add
pop
inc
out
cmc
aaa
test
and
or
push
sbb
iret
jb
jns
jo
aas
inc
pop
push
mov
outsl
frstor
adc
pop
push
rcl
inc
icebp
inc
cmp
aaa
clc
xchg
cmpsb
repz
sub
jns
lahf
mov
pop
lods
aaa
subb
out
lretw
dec
cltd
pop
sahf
dec
cmpsb
mov
rol
push
inc
loope
xchg
jae
mov
xor
mov
xchg
cmp
adc
jmp
jmp
das
pop
mov
xchg
insb
sti
inc
xor
call
cli
push
in
push
pop
cmp
xorl
pushf
rcl
sbb
jb
lcall
idivb
xlat
loop
test
aam
pushf
mov
popf
movsb
repz
js
sar
aas
cwtl
lahf
or
cli
sti
or
jmp
cwtl
popa
rcrl
sub
sub
xchg
lods
out
loop
cmc
jg
jg
leave
add
sub
cmp
dec
push
popf
xlat
roll
std
clc
out
sbb
push
push
lcall
push
push
mov
lret
mov
loope
insb
pop
lods
jmp
jecxz
stos
or
xor
popa
and
mov
mov
pop
and
sub
loop
and
or
sbb
sub
cmc
cmp
inc
test
dec
push
cmp
lds
fwait
aam
dec
mov
pop
gs
lret
sub
popf
add
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
aam
cs
cmpsl
xchg
jno
arpl
cli
mov
pop
sub
hlt
xor
nop
dec
xor
xor
rcrb
jbe
adcl
sbb
lahf
and
lods
jno
xchg
add
inc
js
lea
or
mov
nop
mov
adc
movsb
sub
adc
mov
jp
mov
mov
push
dec
mov
add
push
sub
dec
sti
push
movsl
cltd
loop
outsb
jp
aad
ret
mov
and
dec
xor
test
ds
mov
pop
dec
mov
pop
inc
gs
dec
daa
sbbb
addr16
nop
cmp
xor
out
in
sar
ja
repnz
jnp
rcll
aam
add
loope
je
adc
mov
loope
mov
ja
add
mov
push
xor
int3
arpl
imul
xchg
inc
jmp
sub
jmp
fisubs
int
xor
dec
push
mov
mov
andps
or
negb
movsb
xchg
push
sbb
mov
loop
mov
xor
mov
sarl
push
mov
ret
pop
mov
int
in
in
les
arpl
inc
mov
movsb
std
jno
lods
xor
insl
fists
arpl
pop
cmpsb
popf
inc
ss
mov
or
jae
sti
push
mov
incl
mov
or
lods
jns
dec
mov
mov
dec
aam
cld
pusha
sub
xor
xor
addb
cmpsl
dec
sub
xlat
mov
mov
adc
out
pop
mov
outsb
out
mov
xlat
jbe
or
push
push
xchg
add
das
xor
add
movsl
pop
mov
stos
sub
ficomps
adc
cli
jne
cs
test
mov
add
xor
fmuls
sbb
fsubr
sbb
pop
cltd
mul
insb
out
jg
es
xlat
fs
cmp
cmpb
push
lahf
inc
add
add
nop
or
dec
mov
int3
and
setne
sbb
sbbb
cmp
es
ss
jl
fdivrl
fsub
psadbw
rcrl
jmp
and
mov
into
xchg
xchg
lcall
jae
jp
nop
stc
fcomip
or
dec
inc
jno
sti
sbb
xor
jl
adc
test
idiv
pop
jnp
bound
and
xchg
jle
push
xor
push
fbld
add
jl
test
pop
popf
adc
cld
push
dec
fs
ljmp
jno
test
pop
cmp
adc
cmp
test
sbb
xchg
mov
and
nop
aad
or
aas
jnp
enter
punpckldq
jl
popaw
insl
int
cli
push
shll
lcall
leave
or
adc
push
sbb
call
femms
adc
test
or
sbb
mov
xor
loop
fisttps
xor
jecxz
adc
jge
cli
into
inc
push
sysret
adc
stos
mov
scas
jg
mov
sbb
movsl
fsubs
cwtl
jb
dec
sbb
push
cmp
push
mov
aaa
iret
sbb
and
hlt
mov
pusha
test
fldl
sbb
scas
addr16
xchg
clc
movsl
sbb
push
insb
js
add
sbb
cmpsl
inc
shl
push
push
pusha
sbb
cli
out
dec
sbb
in
das
ret
daa
adc
pop
jmp
inc
jae
jmp
out
mov
xor
pop
cli
cld
mov
cmp
cmp
mov
and
mov
mov
int3
mov
in
pop
cmpsl
mov
loop
ss
out
adc
into
mov
dec
push
fldt
aad
jge
mov
pop
push
add
imul
xchg
push
add
xor
or
push
mov
gs
dec
mov
cmp
test
jae
jmp
bound
xor
mov
mov
mov
and
es
dec
and
lods
push
call
inc
cmp
adc
jb
adc
mov
lahf
mov
out
dec
and
inc
roll
in
stos
sbb
dec
jp
mov
roll
xchg
and
pop
cmp
jae
mov
out
and
daa
shrb
ja
std
xchg
cmp
js
jmp
mov
fcmovb
test
outsl
scas
adc
mov
dec
aas
xchg
xchg
fnstsw
cmpsb
rorb
or
xchg
xor
aas
into
xchg
std
subb
cmp
mov
mov
ficomps
fwait
sarb
push
xor
std
outsb
adc
scas
cli
leave
cltd
mov
jnp,pt
test
lock
in
adc
xor
mov
out
sbb
add
xchg
and
xor
push
jg
adc
push
ret
dec
push
and
cld
adc
cmp
insb
xor
mov
loopne
aas
testl
into
dec
into
adc
add
push
push
ret
jmp
mov
jno
adc
dec
sahf
mov
mov
imul
mov
and
sub
ss
sbb
and
mov
stos
add
add
xor
push
sub
arpl
inc
es
mov
jbe
push
stos
test
sub
ss
adc
dec
push
incb
xor
push
leave
clc
pusha
inc
leave
sub
jae
jecxz
adc
cmpsl
mov
sub
sub
pop
mov
enter
or
mull
jl
data16
loop
sub
add
add
fisubrs
add
jg
pushf
div
push
sbb
sbb
or
andb
and
mov
sub
push
cmp
aas
or
enter
subb
fsubrl
aam
in
or
push
mov
clc
xchg
inc
or
adc
arpl
mov
sub
movsb
loop
or
mov
adc
jge
dec
ret
add
shll
push
fdivr
out
jg
adc
sub
in
popf
cld
pop
pop
ret
rorb
sahf
cmp
push
mov
sbbb
cltd
pop
sbb
xor
cmpsl
and
mov
and
dec
sbbb
test
and
xchg
mov
mov
gs
outsb
and
int
adc
addl
push
add
enter
or
adc
sub
jb
or
add
out
xchg
and
stos
lret
addr16
mov
xor
clc
cmp
push
xchg
fisubl
hlt
mov
mov
lret
cmc
test
pop
xor
int3
jae
pop
pop
pop
insl
jmp
adc
popf
sbbb
loopne
pop
adc
cwtl
push
dec
add
push
mov
stc
int3
inc
mov
insl
mov
jo
xor
pop
inc
movhps
aaa
cmp
add
jmp
xchg
push
js
or
jo
jmp
cmp
mov
cmp
dec
fstl
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
jmp
adc
addl
push
hlt
mov
hlt
fs
xchg
cwtl
fsubrs
xchg
sahf
xchg
mov
cmp
inc
push
sbb
aam
xchg
je
cmp
mov
in
aam
movsl
or
jno
fcomps
popf
jae
dec
lret
fcomps
mov
jl
fldl
pop
repnz
add
adc
and
jns
xchg
outsl
xlat
xchg
xchg
pop
cwtl
pop
sub
mov
js
pop
jge
pushf
shl
pop
cmp
imul
xchg
mov
inc
add
mov
incl
cmovbe
stos
adc
sti
or
faddl
cmpsl
and
cmc
mov
and
and
mov
jno
aam
out
fs
in
fldcw
adc
cmp
or
push
shlb
jae
xchg
cmpsb
push
xor
mov
cmp
je
mov
jns
mov
les
mov
jnp
pop
and
rcrl
mov
jg
mov
testl
fcmovne
xchg
add
fdivrl
lahf
lret
clc
imul
cs
sbbl
inc
and
and
push
adc
sbb
pop
aam
mov
adc
bound
loope
mov
jg
xchg
mov
test
pop
rcr
xor
inc
pop
mov
jl
in
cmp
testb
dec
add
jl
stc
js
inc
or
lds
and
xlat
lret
inc
int
jnp
jnp
xor
test
mov
add
push
test
ret
xor
add
mov
insl
lock
lret
mov
jbe
or
fisubrl
pop
mov
out
sbb
stc
test
lahf
popa
pop
push
xchg
out
lds
sbb
arpl
addr16
cld
xlat
ljmp
xchg
xor
add
mov
pop
inc
push
cmp
fisubrs
call
in
push
and
xor
outsb
push
jo
cltd
in
jbe
and
and
push
jp
mov
inc
dec
dec
mov
push
jo
dec
mov
sbb
pandn
dec
adc
div
add
mov
push
xlat
aam
mov
icebp
or
insl
inc
fnstsw
fcmovb
push
into
and
mov
jns
mov
adc
adc
shlb
lcall
xor
sub
ret
scas
cmp
inc
cmp
js
decb
mov
push
in
jb
sarl
dec
lock
mov
into
push
mov
fiaddl
in
jmp
repnz
inc
pop
mov
adc
stc
loopne
mov
andl
ret
dec
xlat
sbb
jns
lret
jns
sub
push
xchg
es
fisubrl
scas
mov
sbb
and
int3
aam
add
lea
out
sbb
das
xor
cmp
or
inc
ret
fcoms
sti
inc
movsb
push
xor
or
inc
test
adc
addr16
push
push
add
push
fucom
call
or
fwait
in
xchg
xor
lretw
movsl
aas
jmp
push
dec
ret
in
push
in
and
dec
cmp
mov
stos
mov
int
xchg
cld
inc
fnstcw
or
dec
adc
je
add
pop
dec
xor
loop
dec
mov
sub
adc
jle
add
or
int
jnp
fstl
stc
je
dec
arpl
jo
mov
loope
push
push
cmp
pop
sub
dec
mov
inc
pop
push
cmc
push
sbb
xchg
sub
sub
inc
out
push
jg
ret
mov
and
movsl
sbb
sahf
cwtl
mov
in
add
xchg
xchg
fmuls
and
inc
cmp
stc
pushf
addl
add
daa
cmp
pop
mov
pop
jns
jmp
and
pop
add
sbbb
mov
shl
stos
mov
fucomp
in
repz
mov
inc
mov
adcl
xchg
testl
sar
arpl
mov
mov
push
data16
jecxz
xor
xorl
ds
jl
sub
and
adc
pushf
fisubs
loop
pusha
jb
nop
xor
xlat
lods
or
mov
xchg
sub
imul
xor
mov
sub
daa
sbb
mov
pusha
xchg
jae
mov
stc
movl
jl
iret
adc
rcrb
ret
jne
leave
or
lret
inc
cmp
cmp
adc
inc
sti
jecxz
pushf
xlat
outsl
xchg
ds
fwait
or
push
or
aaa
ja
dec
jmp
shrl
jge
xor
or
dec
fstl
sub
mov
sbb
inc
cmp
pop
mov
shll
shlb
loope
mov
in
mov
adc
push
pop
pusha
pop
ficomps
jnp
mov
shll
sbb
leave
outsl
call
orl
rorl
cmp
fstpl
rcrl
mov
ljmp
arpl
push
push
adc
stos
lcall
insb
xor
and
fs
dec
xchg
mov
xor
jg
hlt
dec
mov
mov
shl
js
mov
imul
cltd
push
sbb
sahf
test
ret
dec
lods
cltd
dec
add
mov
lock
fldcw
stc
shll
mov
das
fisubrs
ret
mov
es
mov
lock
movsl
ljmp
sti
sub
sub
push
lock
loop
mov
jge
sub
jp
mov
push
sbb
imul
stc
ret
mov
pop
sbb
dec
pop
fsubl
imul
cld
mov
fucomip
xchg
xchg
lret
mov
inc
lods
mov
rorl
cmp
jl,pt
adc
dec
cmp
adc
cmp
daa
dec
xchg
icebp
and
test
xchg
pop
mov
inc
lahf
or
pop
jl
lock
mov
divl
pop
insl
lcall
mov
iret
subl
mov
fisubrs
mov
and
cmpsb
pusha
pop
mov
sub
inc
pop
popa
sub
movsb
inc
outsl
loop
jb
movsl
dec
pop
jae
cmpsb
sbb
cld
xchg
push
shrl
pop
dec
loop
xor
insl
nop
fs
adc
dec
int3
sub
cmp
xchg
xorb
lret
stos
mov
sbb
adc
insl
mov
dec
mov
daa
int
cwtl
adc
mov
fwait
lahf
not
jno
adc
ret
fsubrl
pop
push
js
and
dec
fadds
fsubl
imul
out
mov
ds
lods
mov
push
xchg
out
pusha
push
xor
enter
sbb
or
cld
sti
pop
mov
loop
icebp
xchg
movsb
pop
pop
inc
test
hlt
rolb
jo
fbstp
dec
dec
sub
sti
iret
imul
nop
icebp
xor
mov
mov
jno
pushf
popa
inc
adc
jmp
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
outsl
testl
je
js
push
mov
pop
inc
popf
xor
xchg
cmp
push
fs
sub
push
das
cwtl
sti
clc
out
pop
add
add
ret
cld
or
cltd
jp
mov
shl
push
dec
sub
orl
xor
out
mov
inc
daa
adc
lods
sbb
xor
mov
xchg
adc
sbb
leave
push
push
cmc
arpl
xchg
fisubl
aaa
sbb
or
mov
dec
jns
nop
cld
xor
repz
cmp
sub
adc
pop
mov
shrb
dec
gs
mov
test
popw
fsubl
adc
adc
jp
sub
mov
lret
ficompl
testb
fists
mov
mov
dec
shrb
add
leave
jge
pusha
sub
mov
movsl
movsb
jmp
insl
cmp
pop
push
xchg
fists
inc
jbe
xchg
test
fsts
mov
stos
mov
ds
push
addr16
test
scas
scas
or
push
xchg
cmc
inc
maskmovq
mov
xchg
pop
adc
adc
mov
add
movsb
and
sbb
shl
cwtl
jne
negb
pop
xor
sub
push
xchg
stos
out
dec
loope
cltd
add
lcall
popa
inc
sbb
aaa
adcb
int3
mov
xchg
lret
cmpsb
dec
scas
dec
pop
xchg
outsl
adc
or
jno
mov
xchg
stc
daa
jo
push
inc
movb
dec
call
pusha
imul
movsb
aad
cmc
repz
mov
negl
in
xchg
mov
imul
inc
insl
adc
loope
movsl
xor
fsts
mov
stc
dec
stos
scas
fs
add
cmp
cmp
cmpsb
cmp
lock
or
mov
ds
pop
or
push
shll
cmc
leave
mov
aas
inc
popa
mov
imul
mov
arpl
adc
mov
mov
pushf
inc
sbb
int
push
jo
in
outsl
pop
mov
sub
int3
jo
mov
xor
lds
jmp
getsec
fnstcw
dec
xchg
pop
pop
pop
xchg
or
ret
test
xor
insb
sahf
jge
icebp
fwait
xorb
insl
inc
adc
sub
test
loope
das
jge
pop
data16
call
mov
and
lret
cld
ljmp
jmp
mov
or
dec
mov
fstpt
pop
xchg
pop
lret
adc
rclb
push
sub
or
stos
mov
pop
addr16
sub
mov
inc
mov
mov
out
dec
cmp
mov
int
xor
mov
sbb
iret
repnz
divl
lahf
mov
loopne
aad
lret
loopne
scas
and
out
cld
sub
push
in
iret
dec
xchg
pop
sub
cmp
cmp
mov
data16
popa
cmp
out
inc
mov
sbb
add
inc
out
mov
xor
sti
loopne
xor
cmp
inc
gs
xchg
out
sub
jbe
inc
out
mov
scas
and
pcmpgtb
jl
movsl
sub
mov
ret
arpl
push
jae
mov
icebp
add
dec
aaa
int
or
and
outsl
cmp
adc
scas
xchg
test
xchg
xchg
add
mov
mov
in
cmp
aam
das
push
in
fdivl
sti
addr16
sahf
clc
cmp
and
mov
pop
test
pop
cwtl
pop
xor
sti
in
push
sub
call
ret
repz
stc
sarb
ja
imul
cld
popa
cmpsl
jle
sbb
scas
inc
mov
adc
or
lods
fwait
div
aaa
cmp
vcmpeqsd
push
adc
subb
dec
xor
filds
fwait
popf
test
sub
adc
lods
mov
push
or
jle
push
int
pop
adc
dec
jnp
push
jo
cs
lods
adcl
les
pop
dec
xchg
lods
or
xor
mov
nop
lea
loope
lds
jnp
into
and
add
mov
ljmp
sahf
scas
negl
xchg
mov
dec
or
inc
mov
stos
dec
das
add
add
mov
ret
pop
lcall
jo
stos
mov
mov
stos
jge
sub
lock
push
mov
mov
das
jecxz
mov
xor
sbb
test
and
enter
xlat
add
hlt
inc
xchg
outsl
loop
and
cmp
xor
or
pop
jbe
out
pusha
jo
and
outsl
aas
mov
ds
mov
mov
outsb
jns
xchg
xor
mov
cmp
cmp
arpl
jp
inc
fldt
nop
popf
aad
sub
enter
dec
inc
mov
mov
loop
mov
psubq
jecxz
hlt
jae
adc
pop
data16
popf
cwtl
imul
xchg
in
or
xlat
xor
pop
subb
cmp
imul
test
outsl
outsl
push
xchg
mov
push
push
xor
sbb
cmc
mov
mov
mov
out
fcmovb
jns,pn
in
xchg
xchg
dec
fwait
stos
or
push
sub
add
dec
inc
jb
iret
in
ss
sub
into
repz
cli
jmp
stos
adc
and
aas
mov
xchg
and
or
dec
das
xor
jno
pop
repnz
jno
adc
pop
dec
xchg
and
jecxz
test
xlat
xlat
xchg
aaa
iret
mov
inc
cmc
dec
aaa
push
mov
loope
xchg
xchg
or
aad
test
test
and
cwtl
cmpsb
push
jns
mov
int
aaa
ljmp
xchg
xchg
pop
inc
jecxz
test
out
bound
dec
fistpll
cld
or
dec
sbb
push
je
push
jg
loope
inc
sub
jb
aam
fcomip
or
jmp
xchg
sbb
sahf
aas
xor
mov
fsubrs
stos
jae
jecxz
or
mov
imul
mov
mov
lods
add
jg
fidivs
imul
adc
sbb
sbb
stc
fimull
pop
adc
add
clc
adc
stos
push
xchg
mov
mov
and
pushf
dec
decb
lods
daa
repz
xchg
hlt
test
cmpsb
mov
mov
sbb
into
into
fs
mov
adc
ja
pushf
inc
enter
or
dec
sbb
sub
sbb
inc
mov
sbbl
aas
in
dec
dec
aaa
dec
pop
not
sub
sbb
insl
imul
adc
mov
jne
je
fmull
xchg
hlt
inc
inc
fmulp
inc
mov
inc
lahf
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
test
add
add
and
sbb
pop
shrl
sub
jae
dec
sub
sub
test
imul
insb
arpl
add
shlb
int3
pop
es
adc
incb
fisubrl
andl
and
gs
pop
xor
push
aaa
pop
cmc
or
movsl
jg
scas
lea
pop
mov
adcb
mov
outsl
pushf
push
or
dec
jo
mov
frstor
fistpll
xor
or
dec
daa
mov
outsb
cmp
paddsb
jae
fldcw
add
stos
dec
dec
xchg
adc
movsb
rorb
popa
mov
push
add
out
icebp
add
xor
fidivs
in
add
mov
xor
push
push
add
in
jne
xchg
or
into
loop
mov
sbb
mov
scas
int
pop
les
or
jecxz
cltd
inc
dec
mov
lret
or
and
push
xchg
int3
js
and
cmp
xchg
jb
sar
rol
push
lret
push
push
test
daa
mov
jmp
stos
pop
int
cltd
xlat
and
sbb
fwait
and
inc
out
and
js,pt
adc
pop
jle
cld
xchg
fadd
sub
inc
jge
fstpt
aad
ret
jnp
push
sahf
push
pop
int3
cld
insl
mov
pop
fnstsw
mov
dec
lock
bound
repz
daa
sbb
fwait
sbb
ljmp
and
mov
js
aas
sub
and
aas
nop
push
pop
repnz
pop
mov
test
mov
pop
insl
add
shll
push
push
xchg
sub
rclb
push
xchg
stos
aaa
ds
test
xchg
stos
inc
je
iret
mov
das
pop
mov
test
sbb
sub
sub
xchg
or
sub
sbbl
xchg
xchg
xor
push
mov
cmpsb
fildl
loop
movb
inc
ret
in
jb
pop
push
and
mov
sbb
hlt
or
test
jmp
negl
insl
sub
into
out
orl
insl
insl
ror
aas
aam
or
dec
out
inc
sahf
pushf
xchg
mov
jg
add
cltd
stos
lock
loope
xchg
leave
test
mov
lcall
insl
hlt
xor
adc
inc
shll
testl
sti
sahf
fwait
mov
mov
mov
sbb
into
push
dec
adc
xchg
mov
mov
iret
jnp
loope
lds
fnsave
ljmp
sub
scas
call
xchg
insb
mov
mov
je,pt
outsb
fwait
pop
adc
les
orb
adc
and
push
and
xchg
mov
loopne
cltd
push
push
jo
ror
call
popf
sbb
dec
cmp
nop
loop
mov
and
std
xchg
xchg
mov
mov
cwtl
arpl
pop
sub
mov
movsb
das
sbb
lods
add
mov
movl
jecxz
xchg
mov
lret
lret
pop
add
in
and
add
repz
sbb
iret
xchg
leave
add
sbb
adc
xchg
inc
ss
sbb
push
inc
lahf
cld
mov
ror
xchg
imul
or
cwtl
popa
negl
mov
bound
pop
testl
in
ret
adc
pop
fcomip
sbb
push
insl
daa
jg
leave
fsubr
das
xchg
sbb
in
stc
bound
push
out
jno
insb
push
sahf
dec
addr16
dec
and
dec
mov
sbb
negl
add
inc
lahf
dec
jp
popa
sub
push
or
insl
fcomi
pop
inc
aad
push
xchg
insb
fstl
adc
loopne
mov
pop
ss
push
jl
test
fs
sahf
jecxz
out
test
xorb
sub
enter
mov
inc
dec
hlt
mov
test
cmp
mov
push
jge
sti
ja
sahf
add
xchg
inc
sub
xchg
das
add
jb
in
arpl
mov
les
dec
out
inc
in
popf
mov
mov
rcrl
dec
mov
pop
inc
lea
mov
sub
xor
push
cmpb
clc
lcall
dec
mov
pop
es
jne
call
mov
jl
mov
js
inc
sub
and
test
inc
dec
pop
dec
mov
inc
scas
jno
jo
js
int3
adc
cmp
cli
loop
divb
push
das
sub
add
stos
push
cli
aas
shrl
mov
ljmp
jecxz
mov
or
sti
dec
xor
leave
shlb
and
sub
adc
xchg
mov
add
adc
repnz
sub
aad
bound
add
inc
xor
dec
mov
lret
xor
mov
xor
push
int3
leave
repz
test
jge
ss
out
jbe
jbe
or
insl
notl
push
leave
and
sbb
lods
ljmp
out
lahf
cmp
sbb
pop
mov
push
fs
adc
ret
ja
jle
cmp
cld
xor
mov
mov
jle
mov
jl
push
repz
or
rolb
test
jns
notl
ror
sub
dec
dec
jmp
inc
dec
repz
mov
push
push
xchg
in
add
jmp
and
leave
cwtl
setg
or
aad
loopne
ds
sbb
xchg
sbb
lock
loopne
mov
pop
mov
xchg
ljmp
ja
add
pop
loopne
adcl
xchg
mov
aas
xchg
mov
xchg
adc
inc
jle
jb
pop
mov
adc
push
xchg
aas
mov
lret
xchg
pushf
jno
inc
out
xchg
mov
test
cmp
push
adc
shrl
aad
jg
mov
jne
or
add
mov
cmpsl
bound
jne
cmpb
mov
jbe
pop
insb
es
xor
aad
jle
mov
inc
in
ss
pop
xor
xchg
sarl
test
mov
cmp
cmpsl
xchg
imul
test
cmp
stc
cmc
inc
dec
inc
scas
mov
negl
in
cmp
jns
jno
sub
stc
bound
dec
inc
push
stc
jecxz
fucomi
in
shlb
out
sub
add
stc
das
cmp
push
push
jmp
movsb
sbb
repz
test
shll
test
in
mov
inc
push
xchg
test
fs
adc
sbb
xchg
sbb
test
test
and
lea
stos
and
out
add
ret
mov
lock
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
jno
or
div
jge
and
repnz
cs
cmp
cmp
jge
test
cmpsb
lahf
xor
ss
test
sbb
movl
out
and
and
lods
jmp
xchg
loope
mov
cld
shl
sbb
aad
lods
push
int3
mov
stc
push
add
fcoml
aam
inc
push
lods
or
int
push
cld
shlb
sti
jmp
mov
xchg
cltd
hlt
imul
sbb
pop
lret
sub
adc
sub
hlt
jb
adc
pop
loopne
mov
push
movsl
iret
pop
xchg
jb
dec
lcall
push
ret
cli
mov
outsb
ds
jp
enter
call
add
push
dec
ljmp
mov
add
bnd
test
sub
or
jmp
andb
das
mov
ja
push
pop
jge
cmpsl
clc
insb
in
fimuls
mov
mov
in
add
jge
mov
dec
fwait
test
dec
mov
pop
add
sub
fisubs
hlt
jnp
jmp
leave
dec
in
stos
outsb
sbb
add
adc
lods
inc
and
cmpsl
sar
inc
xchg
or
ret
mov
add
cmp
stos
push
or
fdivrp
xor
jae
mov
ljmp
sbb
imul
push
test
out
lods
mov
sub
lahf
mov
jno
lods
xor
push
xor
push
int
sub
push
mov
mov
xchg
push
cmp
mov
cli
insb
jle
pushf
in
das
add
add
in
cmpsb
add
std
pop
push
add
cmp
int
adc
cmc
scas
sub
xchg
insb
cmp
mov
adc
pop
xchg
stos
ret
and
mov
iret
in
sahf
cmp
test
call
cmp
pop
jg
notl
xchg
xchg
popa
pop
clc
dec
outsl
mov
repz
out
aam
pop
or
sbb
dec
adc
sub
shrl
inc
xor
mov
dec
xchg
sbb
fdivrl
push
fwait
dec
jecxz
imul
vcvtqq2pd
aad
xor
dec
sbb
stc
lea
jo
xchg
inc
jbe
sbb
push
sub
cwtl
sbb
outsb
jmp
out
outsl
mov
ret
rcl
data16
cmpl
test
add
inc
push
pop
adc
in
imul
and
frstpm(287
mov
push
mov
ds
push
js
movsl
popf
sub
adc
mov
shlb
and
jecxz
xchg
ret
cld
mov
jb
fwait
es
xor
xchg
lret
into
scas
cmp
jle
lods
sbb
xchg
jo
mov
fisttps
or
mov
pop
sub
and
push
loope
lcall
pop
bound
outsl
jnp
fdivrl
fstpt
or
add
ret
repz
push
dec
stos
mov
push
in
aas
pop
je
add
pop
add
cmp
lahf
pop
jge
jo
sbb
insl
or
inc
xchg
movsb
xchg
loope
xchg
dec
lods
stc
insb
aas
addr16
out
sbb
loopne
push
push
add
cmpl
xchg
sarb
push
icebp
mov
pop
mov
sbb
jmp
mov
flds
cmp
stc
inc
cwtl
xchg
xor
mov
pop
ja
push
xchg
dec
jl
decb
or
pop
rcl
mov
mov
mov
xchg
sub
test
add
mov
push
push
js
xor
mov
and
mov
xor
data16
push
xor
es
mov
pop
push
fldcw
mov
xchg
sbb
test
inc
ss
xchg
les
bound
out
jae
scas
loop
frstor
lret
test
jge
in
push
adc
in
sub
pop
ss
sub
sub
fnstsw
bswap
pop
cmp
sbb
in
ret
xchg
xor
xchg
xchg
xchg
add
mov
fstpt
in
ret
push
jg
out
jge
call
lahf
popf
adc
xchg
mov
and
and
adc
js
sbb
mul
ds
shll
jns
mov
pushf
jne
lock
je
adc
lcall
and
rorl
dec
jl
push
and
push
lods
loopne
outsb
sub
adc
jp
jns
lods
jno
or
data16
xor
out
inc
ja
cwtl
mov
jo
mov
mov
jne
outsb
in
xor
add
jl
repz
jno
cmovp
cmp
jnp
dec
into
ret
cmpsl
outsl
in
pop
cmovg
inc
dec
and
dec
sbb
movb
fistl
sti
std
fucomi
jbe
add
push
cwtl
ret
sub
pop
adc
int
clc
adc
dec
sar
loop
out
adc
je
in
jmp
and
adc
int3
loope
jecxz
imul
scas
lret
orl
dec
jbe
inc
mov
stc
mov
push
xlat
mov
sbb
mov
cmp
jle
pop
or
repz
cmp
jecxz
in
mov
and
lret
andb
div
hlt
push
xlat
jnp
inc
inc
mov
inc
cmp
data16
aaa
pop
xor
lcall
add
das
adc
sbb
pushf
cmp
adc
movsl
mov
insl
pop
loop
and
or
fnstsw
pop
mov
xor
test
add
xor
dec
bts
sub
xchg
push
out
dec
dec
and
ret
jge
fsubs
repz
loopne
xor
lock
pop
inc
or
test
add
add
lahf
in
imul
loopne
mov
add
imul
mov
sahf
mov
fldl2t
call
hlt
bswap
mov
dec
movsb
lds
daa
repz
lods
dec
fidivrl
cmp
or
aad
cmpsl
pop
decb
dec
sbb
adc
adc
test
dec
je
inc
int
fldl
in
xchg
jns
iret
dec
jle
or
push
nop
inc
daa
jge
test
subb
insb
fs
cmp
inc
ss
fsubs
into
shlb
jmp
jo
push
ss
xlat
mov
mov
int3
scas
gs
sub
aas
lea
rcl
xchg
daa
sbb
cmp
pop
cltd
mov
push
adc
fisubs
sbb
popf
jns
aad
stos
lret
ss
adc
ror
xchg
pop
addl
jbe
or
lret
sbb
adc
pop
out
das
mov
loop
mov
aaa
shll
adc
clc
pop
in
stos
cmpsl
sbb
sbb
scas
cmp
cli
jl
int3
roll
cmpsb
jecxz
add
inc
gs
pop
push
arpl
inc
adc
mov
jge
push
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
sbb
adc
addl
push
jb
inc
cltd
scas
fildll
fnstenv
sub
imul
test
fcmovnu
mov
out
shll
mov
sbb
fwait
inc
push
ret
push
jnp
pusha
subl
lock
lods
in
aaa
mov
aas
sbb
aaa
and
push
mov
push
cmpsl
jecxz
andl
sub
add
aam
and
mov
sub
lret
jge
popf
cmpsb
mov
leave
push
or
roll
int
popf
inc
jmp
shll
fisttps
imul
and
inc
lods
jb
shl
mov
les
leave
mov
popa
cmp
repz
imul
dec
mov
js
dec
les
xchg
mov
mull
ljmp
out
add
xor
std
iret
mov
aas
xchg
int3
pushf
dec
mull
mov
and
push
into
aas
and
cmp
lods
mov
in
pop
inc
mov
xor
cs
or
mov
push
sub
mov
dec
xor
cwtl
outsb
stos
mov
pop
cmp
adc
jp
xor
jl
cmp
dec
inc
or
xchg
aas
in
jae
pop
fcomp
shll
xor
ret
repz
arpl
inc
mov
aas
cld
pop
nop
mov
nop
mov
mov
out
jb
mov
mov
push
les
sbb
cmpsl
pop
mov
mov
leave
icebp
dec
xchg
inc
mov
aad
into
pop
int
or
xchg
pop
out
aaa
sbbl
push
das
addr16
mov
mov
inc
shlb
sbb
and
jl
data16
and
and
xchg
xlat
cmp
push
mov
addr16
mov
push
push
cmpsl
adc
jp
pop
popa
xchg
loopnew
cltd
mov
add
ljmp
push
or
sbb
sub
mov
hlt
aam
lock
cmp
repnz
jp
test
insb
lret
jo
popf
dec
outsb
jge
mov
xchg
sarl
aas
adc
pop
push
xchg
push
cmp
push
ret
cmp
scas
lcall
add
xor
or
push
pop
inc
hlt
rclb
imul
pop
stos
or
or
out
das
movsl
pop
cltd
arpl
push
adc
xchg
mov
or
push
out
clc
xor
rorb
mov
cld
dec
or
lcall
mov
cmp
andl
mov
mov
lret
jo
inc
fs
mov
or
cli
mov
xchg
dec
adc
ret
lret
loop
jno
sub
in
mov
inc
addr16
jg
adc
or
ret
mov
fcmovnbe
mov
es
loop
push
or
mov
pop
out
push
imul
cmp
push
pusha
mov
adc
lods
xor
mov
repz
jbe
pop
lds
hlt
fildl
sbb
mov
arpl
adc
pop
sub
xlat
loop
fisubrs
mov
mov
push
shll
jp
mov
nop
idiv
xor
and
adc
orl
fimull
or
cmp
bound
jo
pop
inc
push
or
jp
add
aam
das
fstl
pop
popa
dec
seta
cmp
cmc
scas
jno,pn
js
shr
fdivrp
sub
test
arpl
inc
fsubp
xchg
scas
jne
fbld
pop
mov
cmp
push
mov
add
jb
jbe
outsb
adc
ror
dec
fisubrs
cmp
imul
ja
imul
orb
packsswb
das
aad
dec
dec
in
out
push
jo
sub
push
mov
lds
mov
repz
cli
add
lock
cmp
nop
jmp
std
test
push
or
sbb
rcrb
xchg
test
pop
fdivrs
pop
repnz
push
inc
ucomiss
pop
subb
sti
jne
aad
cli
sub
xor
pop
sbb
divl
cmpsb
dec
mov
xor
daa
xchg
je
push
push
inc
mov
enter
and
jb
and
int
stos
loop
in
mov
stos
jle
jns
adc
mov
xor
adc
xor
sub
rcr
out
add
mov
mov
push
or
push
push
add
lock
pop
xor
hlt
std
inc
and
addl
mov
pop
mov
iret
aaa
mov
mov
push
jp
cmpsl
notb
lea
movsb
mov
incb
mov
dec
sti
bnd
insl
xchg
in
or
xor
push
push
pop
int3
loopne
nop
test
popa
icebp
and
arpl
adc
add
in
dec
cwtl
mov
fildll
cli
push
cmpsb
and
jge
pop
mov
or
cmpsl
xchg
shlb
sub
and
dec
clc
lret
xor
xlat
or
and
std
daa
mov
mov
insl
pop
xor
push
into
ret
push
out
gs
fidivrs
outsb
ss
popf
cmp
ja
movsl
addr16
aas
clc
out
push
out
cmpl
aad
mov
flds
pushf
adc
cmp
jp
jnp
xor
fisubrl
ret
ja
pop
sbb
lret
xchg
add
mov
mov
inc
into
xchg
hlt
popf
dec
sti
xor
rcrl
pop
pop
xor
lods
les
cltd
loopne
jp
movsb
scas
dec
xchg
jb
add
out
push
cli
inc
mov
xchg
dec
adc
mov
xchg
mov
sbb
mov
pop
push
sbb
mov
mov
dec
xchg
dec
sub
and
adc
and
adc
adc
testl
sbb
cmpsb
loope
out
jecxz
ror
mov
mov
jb
mov
push
mov
lock
jge
in
popa
dec
mov
dec
bound
test
out
push
ret
cmp
ret
das
inc
outsb
inc
rcll
iret
pop
pop
in
dec
add
fildl
cltd
mov
push
imul
sahf
enter
adc
daa
repz
jb
pop
ds
mov
das
sub
sarl
dec
dec
dec
mov
dec
push
push
lods
pop
sbb
ljmp
sub
mov
mov
push
adc
cmp
push
pop
fstpt
sub
lret
outsl
adc
ja
fwait
je
push
mov
and
movsl
mov
push
and
xchg
popa
and
xchg
dec
jbe
lea
in
data16
dec
pop
nop
ret
xchg
into
add
fwait
sbb
jns
sahf
sbb
outsl
mov
je
xchg
add
addr16
jo
in
mov
int
or
in
in
jno
push
mov
cmpsl
xchg
loop
push
sub
stos
inc
fstpl
pop
pop
out
je
push
sbb
adc
enter
fsubrl
mov
rorb
mov
ljmp
fucomip
scas
ljmp
ja
test
inc
xchg
fisubrs
jp
add
dec
cld
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
icebp
sahf
imul
inc
xchg
mov
cs
jb
lret
jecxz
push
xchg
push
xor
sub
ljmp
sub
cs
adc
in
jne
cmp
inc
cmpsl
lahf
fstl
pop
mov
ss
cmp
xchg
dec
mov
dec
xchg
loop
jle
push
push
dec
inc
lock
lahf
xchg
jle
js
sbb
xor
jo
or
cmc
mov
and
fsubrs
push
bound
int3
pop
or
scas
sti
out
add
push
lock
mov
into
jnp
or
repnz
sbb
shrb
dec
cmp
adc
imul
mov
add
add
xchg
and
inc
ret
fwait
cmpsb
jmp
fwait
lods
cwtl
jg
cli
out
dec
xchg
dec
imul
cmp
fmuls
jp
arpl
sbb
pusha
popf
xlat
jbe
popf
jnp
adc
lcall
jmp
adc
stc
out
adc
int3
aaa
and
jp
test
jecxz
test
ljmp
clc
xor
mov
xchg
pop
out
gs
jl
sub
stos
dec
pop
flds
cmp
add
or
gs
stos
or
add
mov
xor
sbb
stos
push
fwait
outsl
repz
cld
cltd
inc
repnz
push
pusha
fstps
lds
sbb
in
mov
orb
aaa
fsts
pop
out
adcb
mov
jnp
push
mov
jno
and
ss
cli
adcl
pop
aam
jns
scas
cmc
push
lods
cltd
les
mov
cltd
cmpsb
cmp
pushf
loope
sub
or
mov
rorl
inc
jecxz
fistl
push
xlat
pop
push
mov
inc
mov
outsl
dec
cmp
mov
sub
mov
fnstenv
xchg
adc
mov
cs
jne
inc
inc
cmpsb
push
add
rorb
hlt
scas
dec
push
mov
mov
lahf
loopne
xchg
cmp
pop
repnz
adc
outsl
sub
adc
push
rcll
test
and
xchg
inc
or
pop
xchg
push
or
jp
int3
add
xchg
xchg
fwait
sbb
jmp
or
pop
mov
dec
hlt
mov
addb
adc
mov
jno
lds
xchg
inc
icebp
hlt
adc
fwait
dec
push
cltd
rcl
push
cmpsl
scas
daa
shl
add
loope
adc
pop
ljmp
dec
stc
stc
adc
jecxz
fisubs
subl
mov
in
pop
xor
test
scas
cmp
and
cltd
lods
xchg
lds
mov
push
nop
out
adc
add
xor
cmp
cmp
adc
pop
cmc
and
dec
test
ficomps
out
inc
dec
les
or
dec
in
sahf
aaa
mov
mov
test
ljmp
jl
pusha
xchg
pop
inc
jmp
jbe
vmwrite
cmp
cltd
or
dec
call
stc
stos
push
mov
mov
jl
jmp
and
pop
test
xor
ret
shlb
ror
fistl
fwait
popf
xor
inc
jecxz
and
mov
addb
add
addr16
sbb
int3
cwtl
mov
mov
mov
test
sub
cmpb
lahf
out
sbb
mov
cli
sbb
negb
add
and
inc
enter
fstpl
dec
fidivrs
outsb
pusha
jbe
aaa
mov
cmp
ds
jmp
scas
cmp
leave
and
xchg
adc
in
decl
sub
add
mov
xlat
sub
xchg
js
push
adc
adc
mov
into
xchg
push
inc
push
repnz
jle
scas
ja
add
shl
rol
dec
xacquire
imul
dec
popl
pop
xlat
aam
das
int3
cmp
sub
loop
and
xor
mov
dec
ret
pop
xchg
dec
movl
movsb
and
xor
jp
aas
stc
cmp
je
adc
sbb
cmc
pop
mov
jmp
adc
sahf
or
rcrl
push
push
test
outsl
jle
cmp
cwtl
mov
or
push
insb
xchg
pop
push
lds
and
popf
rcll
jecxz
dec
js
xor
pop
int3
std
push
leave
pop
bound
push
sub
int3
mov
cmp
lods
rcr
add
cwtl
mov
loope
sbb
add
insl
xorl
adc
shrw
sbb
dec
mov
pop
fadd
imul
pop
mov
cli
out
ror
out
sbb
js
add
xchg
andb
jle
mov
inc
cmp
xchg
lds
stos
sbb
popf
or
nop
lods
fdiv
fistl
mov
imulb
rcrl
scas
jle
push
cmp
lret
sub
cmp
pushl
dec
dec
cmp
jg
jns
add
xchg
mov
imul
les
dec
iret
mov
mov
das
and
test
push
mov
fildll
rolb
xlat
xchg
insb
dec
mov
std
xchg
inc
push
push
mov
leave
js
push
neg
out
push
xchg
inc
mov
sti
jg
cltd
pop
sbb
sbb
rcll
jl
adc
or
jl
mov
cmp
aad
repz
rcrb
jmp
cmpl
dec
stos
in
packssdw
cmp
mov
pop
adc
mov
sub
xchg
sub
popa
scas
gs
test
xchg
outsl
pop
or
jae
inc
imulb
idivl
push
mov
mov
jbe
movsb
mov
add
xchg
pop
into
arpl
mov
pop
jno
dec
jl
and
push
imul
stc
test
and
push
or
xchg
cltd
cmp
mov
bound
inc
ss
mov
sti
int3
and
dec
movb
in
dec
addl
mov
dec
fwait
cmpsl
push
imul
shlb
inc
out
outsl
cmp
movsl
loope
wrmsr
fisttpl
pop
xor
xor
sbb
sbb
mov
sub
lods
cmp
add
in
lea
les
lea
push
jmp
mov
ja
and
push
mov
loopne
cmp
stos
pushf
imulb
aaa
add
xchg
repnz
jne
jg
pop
nop
out
pop
loopne
inc
sub
sbb
pop
add
in
out
lcall
lahf
enter
push
fwait
and
ljmp
push
lods
add
lds
lds
scas
and
push
popa
lock
aaa
mov
outsb
pop
push
fs
cmpsl
and
iret
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
mov
adc
addl
test
xchg
mov
lret
movsl
mov
ret
xor
scas
add
lea
out
movsl
nop
movsl
adc
or
cwtl
inc
into
aam
xchg
hlt
pop
cmp
clc
sarb
test
lods
out
faddl
aaa
push
sbb
cmp
fmull
scas
fucomip
cmp
jl
lock
cmp
repnz
push
cmp
pop
lret
inc
movsb
or
cwtl
aaa
pop
and
dec
in
inc
add
pop
add
dec
jo
or
pop
neg
sbb
cwtl
pop
lcall
mov
adc
push
cmp
fs
outsl
sbb
inc
in
imul
pop
dec
add
notb
and
mov
push
adc
sub
dec
pop
sub
cmpsb
into
inc
dec
sub
call
cmp
mov
daa
inc
sbb
xchg
pop
or
push
mov
push
jl
xor
sbb
sub
push
arpl
sbb
mov
imul
mov
fildl
cs
cmc
sbb
shlb
dec
inc
cli
pop
pop
cs
aaa
int3
popf
dec
xchg
pushf
scas
ja
mov
adc
out
rorb
cs
repnz
push
shll
or
xor
jge
ds
mov
stos
icebp
cmp
mov
das
inc
fisubrl
lea
mov
ds
jne
pop
inc
or
or
js
mov
push
jae
es
add
cmp
or
jle
push
adc
xchg
movl
cmp
mov
xchg
aad
mov
add
jo
fmull
andl
push
jl
jecxz
jno
call
ds
inc
xor
inc
stos
adc
mov
in
lods
inc
push
mov
fistpl
insl
aad
cli
add
mov
fstpl
push
push
xor
shll
xchg
aaa
movsl
pop
xor
or
cli
cmpsl
adc
mov
xor
imul
loop
or
pop
rorb
mov
sbb
jns
inc
cmp
fs
fisttpl
jmp
jg
cmp
adc
popf
sub
pop
aad
or
ret
mulb
fadds
fldcw
adc
ficompl
rcll
out
outsl
inc
push
xor
jmp
and
cld
in
mov
pop
dec
push
std
leave
rcrb
inc
pusha
jge
je
cld
mov
jl
cmp
add
aas
cs
mov
inc
adc
fisubl
pop
mov
sti
add
cmc
push
xlat
std
insl
sbb
cli
add
inc
sub
fisttps
loope
test
sahf
addr16
dec
jo
inc
xor
loope
mov
push
mov
push
jge
sub
add
mov
rcll
cmpb
mov
jns
ret
out
mov
je
jg
xchg
add
push
push
pusha
or
push
pop
mov
js
push
adc
add
pop
imul
jge
nop
jmp
mov
mov
inc
lea
fnstcw
in
push
popa
xchg
cmp
lea
aas
adc
pop
inc
or
fildl
ja
bound
stos
xchg
add
iret
inc
out
test
sub
inc
shr
mov
cli
rcrb
dec
scas
aam
out
jmp
sbbl
and
fsubs
aad
jns
test
fnstenv
cli
mov
orl
lds
test
addr16
mov
mov
cmp
lcall
cmp
in
dec
sub
popa
lea
push
mov
pop
pop
clc
ret
xor
ret
adc
js
mov
fisubl
rcrb
insb
jmp
stos
jmp
mov
ffree
inc
or
cmp
or
test
stos
into
xchg
sti
push
jne
inc
lahf
into
sbb
pop
sbb
loop
rcrl
and
sub
xor
mov
and
scas
enter
fimuls
in
rolb
jb
insb
gs
mov
lods
mov
lock
les
out
dec
je
aad
popa
ja
pop
xor
dec
mov
push
mov
xchg
jecxz
and
mov
lods
outsb
pop
dec
lahf
les
jecxz
fstl
fcoml
inc
dec
out
and
push
mov
orl
inc
push
jmp
add
cmpl
xor
bswap
fisttpl
push
lret
dec
mov
stos
pop
ret
inc
mov
mov
int3
pop
sub
cmpsb
sbb
int3
xchg
jae
popf
push
pop
enter
mov
out
pop
insl
mov
jmp
add
outsb
addr16
jno
dec
test
daa
jno
js
xchg
imul
xchg
imul
incb
pop
das
ja
jne
pop
notl
jno
into
movsl
add
adc
ret
pop
dec
lock
pusha
dec
or
jle
cmp
popa
sahf
fidivrl
int
adc
add
mov
cmp
andb
cmp
xor
push
sbb
mov
lods
mov
xchg
xor
fsub
mov
push
popa
es
ret
andl
mov
mov
repz
arpl
enter
rol
loop
jle
dec
adc
fwait
cmpsl
test
imul
out
popf
or
sub
mov
mov
ja
adc
push
push
and
sar
xor
mov
xlat
mov
jbe
cmp
lahf
fdivrp
ljmp
adc
mov
neg
and
sub
mov
sub
setb
jne
sahf
mov
push
push
sub
lds
into
jp
or
xchg
pop
push
inc
jno
xchg
cmp
outsl
cmpsl
add
sbb
ret
stc
mov
insl
leave
out
xchg
sub
dec
add
stos
dec
adc
push
push
or
hlt
cmp
fsubr
insl
in
push
jne
push
sbb
stos
movsb
or
xor
xchg
cmp
jbe
movsb
std
xchg
mov
jno
and
mov
movsl
je
je
mov
mov
xchg
enter
movsl
push
sbb
mov
pop
addr16
lods
jmp
mov
push
mov
pop
int3
shr
pop
lock
xchg
xor
arpl
cmp
mov
mov
hlt
xor
in
cmp
mov
sub
inc
incb
jl
fistpll
cmpsb
stc
scas
fcmovnbe
xor
shrl
fstpt
adc
push
scas
and
push
shl
mov
jo
push
inc
xor
push
shlb
mov
add
aas
push
imul
repz
jge
iret
leave
setge
and
lds
aaa
cmp
pushf
adc
test
aam
in
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
jge
mov
pop
cli
adc
push
adc
xadd
movsl
fstpl
sbbb
mov
pushf
jg
lcall
mov
xor
xor
fdivp
or
aad
adc
loope
or
sub
cmp
push
fcoml
cmpsl
nop
dec
sub
mov
adc
add
add
inc
cwtl
dec
or
out
mov
jge
pop
test
pop
xchg
lret
and
dec
sti
fwait
shlb
outsl
je
cvtdq2ps
lods
fstpl
push
pop
add
movsb
xorb
std
mov
sub
idivl
dec
push
lcall
cmp
or
cmp
push
cmp
inc
movsb
cmp
rcrb
mov
int3
push
repz
mov
int3
movsb
gs
in
fcmove
mov
push
aad
xlat
mov
outsl
iret
repnz
mov
inc
lods
sbb
mov
out
movsl
lret
out
hlt
mov
dec
sti
adc
lods
fs
xchg
push
pop
adc
shll
pop
fwait
leave
jnp
test
fs
lds
mov
movsl
xchg
in
fwait
lods
sub
or
jecxz
add
xchg
fists
add
jb
push
rcll
clc
in
and
add
bound
mov
jno
loop
dec
pop
testl
mov
pushl
sub
xor
mov
pop
iret
je
push
pushf
and
das
movsl
mov
jno
andb
popf
pop
jge
mov
mov
dec
cmp
add
pop
add
andb
jle
lea
outsl
mov
mov
fmuls
sti
fmull
dec
rcrb
jg
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
