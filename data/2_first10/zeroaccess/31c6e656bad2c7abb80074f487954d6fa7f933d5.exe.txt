push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
mov
adc
int
adc
mov
lea
push
repz
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
stos
mov
idivl
sub
or
and
cmc
lds
adc
push
xchg
mov
pop
inc
mov
cmp
decb
loope
xchg
or
add
or
pop
loop
mov
sbbb
cltd
cmp
aaa
gs
and
fs
notb
outsl
jg
xor
xor
cwtl
shl
pop
das
jge
pop
xchg
aad
lcall
popf
mov
xor
push
mov
jge
pusha
jmp
std
dec
adc
je
stc
and
and
lock
shll
push
in
les
cwtl
jmp
cmp
sbb
jno
and
sub
mov
fwait
punpcklwd
inc
cmc
push
inc
xchg
xchg
in
idivl
adc
test
fdivrl
addr16
divl
leave
xor
cwtl
into
xchg
ret
fsubl
fbstp
add
push
push
dec
pop
cltd
sti
aad
leave
jno
rolb
rcll
icebp
jmp
push
loopne
cmp
inc
pop
sub
mov
mov
add
sub
pop
sub
mov
mov
adc
iret
push
cltd
adcl
shr
adc
dec
inc
inc
loopne
push
dec
loopne
jno
insb
mov
aas
out
ret
mov
in
xchg
sahf
out
jg
movsb
pop
add
daa
movsl
mov
mov
xchg
divl
movsb
in
stc
cli
jns
add
fisubrl
adc
dec
xchg
xchg
xchg
aas
clc
cmp
into
cmp
mov
iret
mov
adc
insb
lods
movl
iret
ljmp
mov
jae
jmp
clc
stos
ljmp
adc
lret
cmc
push
jecxz
fsubl
fwait
pushl
aaa
mov
dec
es
mov
sar
mov
sbb
sub
inc
lahf
push
pop
fildl
push
xlat
scas
jle
scas
aam
push
aad
ljmp
mov
pop
push
xchg
testb
jo
js
ret
imul
jl
push
shrb
pop
pushf
int3
mov
xchg
pop
mov
stc
fwait
mov
cmc
cmpsl
nopl
sarb
leave
outsl
cwtl
xchg
or
pop
outsl
mov
lods
push
mov
lods
add
or
mov
jae
mov
push
sub
pop
pop
cmp
insb
sbb
daa
cmp
push
jg
imul
movsb
hlt
stos
popf
in
xchg
cld
out
mov
adc
repz
stos
rorb
cmpl
lcall
add
jne
push
inc
mov
mov
pop
xor
jb
jb
gs
fsubrs
subb
imul
and
nop
mov
fisubs
push
adc
and
mov
hlt
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
sbb
int
adc
mov
add
xorl
daa
icebp
fcom
ret
sub
lret
pop
sub
sbb
mov
mov
daa
adc
fbstp
adc
and
icebp
sti
push
cmp
cmp
pop
std
push
xor
iret
xchg
loop
loop
lret
imull
test
mov
push
cmp
je
ror
rcrb
mov
jno
or
in
dec
or
loope
mov
mov
ss
inc
sbb
ret
test
in
aaa
inc
jmp
dec
iret
lods
mov
xor
insl
mov
add
xchg
ss
xchg
mov
xor
shl
movsl
icebp
pop
xor
cmpsl
xor
out
sbb
mov
out
xchg
xchg
cs
out
popf
jns
xor
loope
cmp
popa
mov
jp
jbe
add
cmpsb
or
xchg
inc
insl
sbb
loopne
int
sbb
push
pop
push
jge
es
js
mov
xchg
adc
push
jb
add
push
out
test
push
fisubrl
lods
and
push
cli
rcl
push
cmp
cmp
pusha
or
mov
rorl
and
cmp
sub
shlb
mov
mul
outsl
adc
push
jmp
je
adc
movsb
fisubrl
xchg
inc
mov
movsb
mov
push
clc
montmul
cmpsb
orl
mov
or
and
test
fstps
mov
je
ret
or
imul
aad
mov
push
stos
testl
lahf
movsb
dec
insb
sub
in
add
je
inc
dec
push
push
push
sub
xchg
outsl
push
pop
jge
aaa
movsb
lcall
mov
lret
push
sbb
pop
mov
into
sub
push
test
rcr
pop
shlb
or
fcmovnu
jne
lret
pop
mov
adc
inc
out
mov
and
jns
fistps
sahf
repz
ret
fidivs
fs
pop
stos
jl
lret
test
inc
dec
fs
ja
cmpsl
or
pop
jp
gs
mov
lret
cmc
adc
or
out
jl
test
xor
imul
scas
dec
ljmp
nop
stc
push
inc
lods
adc
xchg
cmp
ja
repz
push
inc
add
dec
insl
push
pop
sub
inc
push
add
aam
cmpsl
les
push
cwtl
loopne
sub
xchg
insb
sahf
cmpsl
adc
insb
int3
pop
ljmp
mov
push
xor
cmp
aaa
push
xor
je
shrb
sub
bound
ret
data16
and
pusha
adc
add
adc
xchg
mov
xchg
jmp
fldcw
cmp
push
mov
cltd
popa
mov
sub
lahf
repz
sub
xor
in
pop
lods
push
mov
mov
ret
cmp
sar
scas
push
push
in
aad
movsb
sbb
mov
pop
out
scas
sbb
push
push
fwait
enter
push
movsb
sbb
cltd
bsr
push
sub
push
xchg
and
sub
pop
push
jmp
idivb
xchg
mov
call
xor
jae
push
popf
ret
cli
data16
inc
insb
sub
push
les
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
adc
adc
adc
adc
mov
cmc
push
xor
mov
std
mov
push
jno
in
inc
shll
fnstenv
mov
lock
xchg
shlb
lea
push
mov
rclb
cmp
mov
add
pop
ret
lcall
push
out
insb
or
daa
add
and
aas
aaa
out
and
int3
cmpsl
nop
mov
aas
es
int3
cmp
insb
fdivp
mov
out
jg
cmp
lahf
or
mov
test
fstps
mov
push
and
push
fidivs
in
mov
dec
cmp
mov
insb
dec
adc
push
lods
mov
repz
dec
iret
push
stc
mov
cli
shlb
xchg
xchg
cs
scas
outsl
nop
cmpsl
paddw
pop
test
shll
xchg
das
adc
cwtl
xor
inc
push
out
lods
lock
das
inc
pop
aad
out
inc
jg
in
sub
or
dec
imul
js
fdivr
mov
data16
dec
in
fistpl
mov
imul
in
insb
inc
or
fnstenv
sbb
div
out
adcl
inc
mov
fs
sbb
pop
punpckldq
clc
test
gs
jl
cli
dec
and
mov
pop
pusha
cltd
adcb
and
outsb
pop
dec
fnstsw
xor
fcmovnbe
mov
outsb
xchg
lret
fistpl
test
loop,pt
cmp
hlt
add
cmp
or
out
sub
insb
sti
xor
dec
xchg
pop
adc
jns
mov
inc
repz
ja
fdivrs
pop
cmpsl
arpl
xchg
inc
pop
and
jmp
int
cmpsl
fistps
mov
popf
xchg
aas
cs
and
sub
mov
xorl
nop
push
jmp
cmp
scas
aas
in
push
imul
sbb
je
lods
loopne
inc
loopne
lds
into
adc
outsb
adc
test
cmp
cmpb
lahf
mov
mov
jbe
cmp
popa
push
out
aaa
or
fcoms
sub
insb
cli
test
into
cmpsb
test
sbb
mov
xor
fcomps
add
test
bound
jp
xchg
cmp
cmpsl
adc
mov
cmp
nop
ljmp
adc
loop,pn
dec
test
push
jp
test
adc
push
insl
negl
shlb
clc
pop
and
and
sbb
dec
sbb
xchg
insb
pop
sbb
lock
and
xchg
mov
stos
cmp
pop
add
loopne
test
ficomps
lods
gs
add
dec
aas
xchg
fwait
sub
xorl
jno
adc
test
fnsave
aas
cmp
sub
std
popl
rcll
mov
pushf
mov
mov
cmp
ds
mov
nop
mov
ja
pushf
nop
and
sbb
out
mov
ja
out
ret
lods
inc
push
aaa
jmp
scas
int
fcoms
mov
cmp
gs
and
add
and
or
mov
pop
jl
jmp
sub
mov
sub
roll
popf
test
ret
bound
pop
jg
pop
nop
repnz
sbb
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
push
xor
mov
daa
push
sub
mov
or
inc
insl
or
scas
lea
add
dec
cld
std
mov
into
jl
cmp
push
jae
inc
fisubl
pop
xor
enter
imul
dec
xchg
lock
inc
xor
sbb
cmp
sbb
dec
cmc
xchg
mov
push
jnp
scas
test
int3
gs
fmulp
mov
mov
in
sbb
test
mov
fsubl
gs
fisubs
pop
adc
pop
inc
adc
popf
pop
pop
aaa
dec
dec
div
add
push
dec
insl
iret
sbb
xor
dec
jo
leave
or
pusha
sub
sahf
mov
xor
adc
rclb
sarl
test
orl
adc
inc
outsb
mov
or
mov
adc
out
aaa
lret
push
lcall
mov
pop
adc
fcomps
pop
jnp
fldenv
lcall
push
adc
std
push
mov
sahf
in
mov
mov
ss
clc
mul
repz
out
in
dec
mov
sub
mov
pop
aas
sub
int3
sub
push
mov
jecxz
sub
mov
fnstcw
mov
fists
lret
and
loop
roll
pushw
xchg
leave
std
add
fisubs
les
clc
add
jbe
pop
daa
push
mov
and
sbb
clc
inc
push
ljmp
repz
repz
push
shll
fisttps
data16
inc
xor
pop
mov
arpl
cs
into
dec
pop
jb
cmp
mov
push
inc
mov
dec
test
dec
dec
ds
adc
jnp
fs
pop
adc
lods
push
rcll
mov
movsb
out
int3
fdivrl
aam
push
add
test
push
jecxz
xlat
jge
dec
dec
inc
out
fstp
mov
mov
pop
sbb
jl
and
pop
lods
fisubl
sub
and
cmp
push
jo
adc
movsb
pop
ljmp
sbb
into
lds
cltd
inc
cmc
dec
lcall
fstps
mov
fcomps
xlat
inc
mov
inc
add
aaa
pop
std
jbe
add
push
push
add
cmp
mov
sbbb
xchg
pop
scas
addl
cmp
jg
jns
and
push
test
fwait
ja
jg
mov
dec
leave
ljmp
adc
add
xchg
lock
fwait
ds
mov
aas
lcall
ss
pusha
sti
pop
mov
jns
out
cmp
aaa
dec
pop
push
or
mov
xchg
inc
test
mov
mov
lret
pusha
hlt
or
mov
cltd
ficoml
and
push
cmp
iret
stc
mov
dec
ret
push
pushf
or
inc
out
cs
jne
gs
jns
dec
gs
sbb
ljmp
xchg
mov
inc
insb
add
push
and
inc
imul
out
or
loope
into
addr16
cld
dec
pop
ret
push
cmp
pop
and
in
repnz
inc
leave
das
test
mov
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
inc
and
notl
adc
adc
adc
rcll
fidivrl
sub
addr16
inc
fmuls
pop
dec
inc
push
cmp
jbe
inc
ret
fistpll
xor
push
movsb
negl
lds
lea
test
shrb
inc
and
xchg
ficoms
scas
mov
mov
mov
jecxz
dec
jnp
mov
xor
lds
ret
cmp
std
push
jge
jle
adc
pushf
setns
mov
lcall
packuswb
xor
in
dec
mov
jbe
xchg
cmp
jle
or
cwtl
sbb
push
es
jl
push
push
popf
jo
push
pop
add
jmp
imul
test
mov
stos
xor
xor
fcomp
fsts
in
nop
sbb
xor
jl
stos
test
jbe
mov
add
insb
pop
je
imul
add
iret
or
jmp
mov
out
mov
movsl
lret
pop
adc
sub
jae
inc
add
test
sub
pushf
xchg
fadd
jl
or
stc
and
cmp
hlt
enter
push
outsl
rcll
mov
cmp
arpl
loope
sub
arpl
rcrb
mov
loopne
clc
pop
outsl
rorl
pop
cmp
mov
lods
xor
ja
mov
mov
out
xchg
sub
inc
shlb
inc
outsl
cltd
jnp
sub
push
adcb
enter
push
xchg
xor
inc
inc
push
mov
xor
push
jae
add
lahf
fcomps
sub
mov
ds
xchg
mov
es
jecxz
in
pop
orb
sbb
jno
mov
mov
xor
test
sbb
bound
fidivl
arpl
pop
sub
bound
xor
add
xchg
push
nop
sub
dec
shr
or
push
scas
ret
sub
pop
xchg
jnp
insb
adc
mov
dec
cmp
mov
pop
shlb
inc
jp
fs
add
mov
lret
sti
mov
lcall
icebp
movsl
sbb
mov
push
push
sbbl
aad
xchg
cmp
dec
adc
stc
mov
fcomps
cmpsl
mov
mov
adc
push
xchg
sbbl
in
js
cwtl
ljmp
mov
or
fwait
imul
mov
push
xor
xchg
shrl
insb
xchg
xor
rorl
cmp
push
lds
pop
int
fnstsw
ret
int3
int
push
es
mov
dec
les
mulb
pop
sub
xor
xchg
cmp
and
fsubl
fistl
shll
xlat
loopne
xchg
idivb
cmp
jp
fmul
inc
iret
jle
pop
cltd
xor
push
stos
adc
test
sub
add
es
je
cmpsb
sti
jmp
xchg
dec
inc
addr16
jmp
mov
fcoml
add
outsb
lock
inc
xor
push
pop
loope
sbb
jge
ret
jp
or
xchg
adc
test
xor
adc
lret
inc
add
leave
mov
cmp
xchg
add
rorb
repz
push
or
or
cmp
repnz
add
iret
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
push
pop
xchg
js
out
adc
int
adc
ljmp
or
mov
add
xchg
cmp
pop
jns
ficompl
fadd
adc
sahf
movsl
jle
add
pop
jl
aaa
rorl
jbe
push
ss
cld
push
dec
das
cmpsl
cmp
inc
gs
rol
cmc
out
cld
or
nop
or
cmc
ja
xchg
cmp
push
js
fisubs
cltd
mov
or
pop
lcall
mov
pop
xor
enter
test
push
stos
adc
dec
sub
mov
ds
inc
pop
or
jnp
scas
pop
in
insl
xchg
and
repz
cld
cmpsb
fsubp
jb
sub
pusha
jnp
inc
sbb
pop
pushf
adc
dec
add
add
add
addl
inc
sbb
push
dec
dec
dec
or
inc
lret
or
in
shrl
xor
cmp
inc
daa
mov
xor
dec
stc
mov
cmp
aad
sub
mov
mov
dec
sarl
lea
aas
js
cmpsl
mov
ret
data16
pop
movsb
ds
jg
inc
mov
sub
dec
push
adc
js
sbb
out
out
mov
push
imul
xchg
jecxz
adc
aas
push
mov
add
scas
cmp
mov
jl
jg
mov
mov
shlb
add
ret
pop
aam
cmp
sbb
inc
adc
jb
ljmp
jl
or
add
xor
dec
mov
pushf
sbb
call
pop
and
mov
adc
push
xlat
sub
mov
fmul
push
inc
sbb
dec
xchg
imul
and
or
jmp
lods
arpl
sbb
dec
mov
pusha
pop
sbb
xchg
fs
lcall
mov
mov
mov
outsb
push
mov
xchg
mov
xor
out
in
cmp
pushw
cli
outsl
xor
and
mov
or
add
es
or
aad
xchg
cmpsb
mov
lock
and
inc
fimull
dec
pop
mov
fstpl
jle
mov
andb
inc
jno
popf
std
movl
jecxz
lods
ja
in
lock
arpl
stos
push
jmp
sub
push
test
setl
lea
xchg
jb
sub
xor
popf
add
scas
decl
lds
sbb
mov
into
adc
xchg
test
sbb
fcomps
cmpsl
scas
mov
shlb
sbb
bound
int
xchg
fisubrl
je
lret
fwait
loop
cmp
add
frstpm(287
sub
test
pop
sti
mov
fs
aas
mov
jnp
sub
test
aaa
jp
rorl
xorl
or
imul
and
cmc
mov
mov
and
mov
loope
nopl
adc
inc
pop
xor
in
or
inc
lret
stc
scas
loopne
lret
jo
repnz
sub
add
push
ficompl
inc
jne
jae
cmpsb
sbb
aaa
sub
lods
sti
push
jecxz
jo
mov
push
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
mov
stos
push
in
adc
int
adc
or
lcall
lea
out
pop
and
iret
ljmp
subl
cmpsl
mov
push
jecxz
xlat
fbstp
popf
dec
into
test
mov
pop
jnp
pop
and
mov
cld
leave
ljmp
imul
sarb
pop
shlb
test
dec
loope
orl
push
dec
ffree
xchg
scas
push
mov
loope
inc
push
sbb
sub
inc
add
outsl
sub
outsl
fistl
addr16
jmp
addr16
xchg
pop
mov
mov
xchg
dec
add
cmp
in
dec
and
aad
std
xor
jecxz
cli
fwait
dec
jae
dec
lds
push
out
mov
sub
mov
sti
shl
les
xor
das
push
mov
adc
or
add
or
add
test
pop
nop
outsb
or
dec
pop
cmp
hlt
add
testl
not
daa
add
daa
pushf
sub
push
cmp
pop
popa
loop
mov
decb
adc
mov
test
xor
sti
ss
sahf
ds
rcl
ja
pop
jno
or
movsb
insl
fs
movsb
pmovmskb
jbe
les
push
out
xchg
fimuls
xchg
out
cmp
and
fiaddl
and
fcoml
mov
iret
arpl
xor
les
outsb
jns
in
add
inc
sbbl
sub
and
adc
popf
mov
sahf
int
xchg
lahf
mov
sti
adc
faddp
inc
and
adc
mov
imull
sub
sbb
jo
mov
jae
rclb
je
mov
inc
jae
mov
jbe
popa
in
mov
orl
pop
push
outsl
lahf
push
mov
cmpsb
push
or
pop
cmpsb
and
loope
mov
das
leave
cltd
xor
jge
sbb
cmp
fbld
mov
sub
shl
sbb
andb
fisubs
data16
sub
lods
mov
push
mov
ret
or
push
ret
test
cmp
mov
push
ficoms
dec
loopne
cld
out
repnz
dec
mov
rcrb
inc
xor
lods
xor
pop
lock
add
std
shlb
data16
jae
inc
cmpsb
imul
mov
sbb
pop
lods
sti
in
mov
jg
push
movb
shll
adc
cld
mov
jge
int
xor
sub
sub
cli
ficoml
rclb
negb
aad
loopne
cwtl
pop
adc
or
bound
jo
jne
jo
xchg
sar
add
clc
add
cmp
ret
aaa
pop
movsb
mov
cwtl
movsb
sahf
jmp
scas
or
or
pop
pop
mov
fwait
sbb
js
stos
andb
dec
ds
push
mov
pop
mov
lret
test
xchg
rcll
stc
lea
cmp
popl
and
or
xchg
test
imull
mov
cmpsl
add
mov
jp
lret
lds
rorb
and
sub
ret
mov
cld
or
repnz
pop
xor
cmpsb
sub
mov
xorl
xlat
lret
clc
dec
xchg
push
xchg
sbbl
es
repnz
cmpsb
fisttpl
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
jmp
out
adc
adc
adc
mov
mov
pop
xchg
out
mov
xor
movsb
pop
rol
xchg
jns
lods
aaa
fnsave
ficoml
push
and
rolb
lods
adc
inc
add
mov
sub
jns
mov
add
into
movsb
and
cmp
jno
mov
sbb
incb
jle
js
push
test
xor
jb
cmp
dec
dec
gs
aam
jge
xlat
imul
mov
ret
xchg
mov
in
push
xor
notb
push
stos
pop
push
out
pop
mov
inc
mov
out
xchg
pop
pop
jne
and
inc
into
sbbl
push
aaa
std
jp
fcmovbe
int3
add
arpl
or
push
int3
loope,pt
jmp
sub
lahf
sahf
das
mov
js
hlt
adc
sbb
xchg
outsb
dec
push
adc
lds
adcl
cwtl
inc
mov
jle
mov
xor
xchg
bound
loopne
mov
movb
xor
sub
and
push
sub
inc
test
or
adc
lret
jne
outsl
or
out
inc
out
jmp
fldt
xchg
lea
xor
cmp
cmp
es
inc
in
dec
xorl
bound
mov
cltd
mov
aad
imul
xchg
jbe
xor
xor
clc
xlat
aas
test
inc
xchg
daa
push
mov
mov
inc
pop
test
call
push
dec
js
ret
pop
arpl
pop
imull
jnp
sarb
sbb
rorb
loope
add
pusha
into
fwait
ret
les
mov
ficompl
cwtl
leave
and
jno
and
test
pop
sub
jecxz
add
ficoml
fldt
test
sub
jp
sub
lods
pop
stc
adc
mov
and
les
pop
push
xor
imul
lret
mov
nop
rorl
popf
leave
les
outsl
adc
adc
dec
ret
adc
or
out
lahf
out
mov
testl
xchg
cmp
cmp
jmp
mov
shll
lock
xor
std
ret
mov
or
ficompl
sub
jmp
sub
inc
sbb
aad
jb
fs
fiaddl
dec
stos
fstpt
test
pop
mov
scas
jbe
push
mov
data16
jmp
rcl
fwait
movsl
add
clc
mov
push
cmc
jecxz
das
addl
aaa
outsl
and
mov
cld
mov
cmp
jmp
sbb
in
or
hlt
xchg
sub
lds
inc
pop
dec
sub
hlt
push
mov
inc
inc
sbb
gs
clc
scas
mov
or
cmp
movsb
fistpl
xchg
pusha
ljmp
pop
mov
cmp
xor
mov
pop
popa
jne
popl
inc
adc
jo
push
xchg
mov
xlat
push
loop
adc
sbb
int3
imul
jne
jnp
daa
sbb
mov
add
push
and
stos
pushf
jb
fisttpll
imul
or
pop
mov
out
ds
and
add
leave
fisubrs
test
addr16
pop
std
sarl
in
fsubs
adc
add
or
inc
loope
push
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
imul
ficoms
adc
adc
adc
or
xchg
cmc
ret
sbb
sbb
or
inc
inc
dec
pop
repnz
jns
xorb
gs
mov
jle
dec
pop
mov
cmp
repnz
pop
loopne
repz
dec
adc
loope
pop
int
sti
jge
mov
icebp
mov
push
mov
jns
dec
addr16
adc
lock
lock
out
push
loope
outsl
mov
mov
inc
jge
sahf
sbb
test
push
dec
add
or
lret
in
out
clc
or
xchg
cmc
into
jp
jg
repz
loop
mov
daa
push
js
cmp
mov
and
adc
xchg
outsb
dec
jb
xor
or
pop
jg
adc
fbld
cmc
xchg
lods
addr16
in
jo
imul
inc
dec
std
decl
and
and
cmpsb
movsl
call
imul
xchg
xlat
rcll
mov
aaa
ljmp
rcl
pop
cld
pop
jmp
dec
cmp
push
pushf
jl
test
andb
push
xchg
lods
rorl
xor
test
wrmsr
jmp
les
push
ret
jmp
out
jne
cmp
push
or
aad
leave
or
sbb
jnp
cmp
imul
sbb
in
ja
popl
mov
jnp,pn
mov
iret
add
cs
mov
push
mov
scas
movsl
aaa
push
lret
in
ret
inc
js
mov
xorb
fwait
aas
sub
in
mov
sbb
pop
xlat
or
outsb
pushf
xor
in
leave
xchg
sbb
je
adc
xor
nop
imul
cmp
hlt
or
lock
sub
out
ja
sahf
xchg
push
mov
imul
mov
es
and
packssdw
dec
inc
ret
js
xchg
shl
fnstsw
roll
loope
pop
adc
dec
cmp
add
mov
or
pop
cmp
imul
mov
or
or
mov
ss
sbb
add
dec
sbb
fwait
incb
adc
push
xlat
test
mov
in
sbb
imul
push
scas
and
adc
inc
sub
pop
out
stc
mov
jne
test
sub
mov
aas
sub
int3
loope
pop
fisttpl
sbb
add
lods
pop
cmc
cltd
xchg
shrb
fwait
mov
xchg
jecxz
jbe
sbb
out
lods
je
mov
jg
cmpsl
cs
mov
arpl
daa
out
xchg
dec
loop
mov
popa
jle
in
xor
shl
inc
mov
xchg
imul
das
sub
arpl
or
in
repnz
call
fstpt
push
ja
and
mov
cmp
nop
ljmp
cltd
or
fisttpl
adc
cld
mov
and
mulb
dec
outsb
pop
mov
aam
add
push
hlt
push
and
or
pushl
jnp
aad
cmp
push
orl
notl
inc
ficomps
sub
sarl
push
push
test
nop
mov
fsubl
cmp
xor
jmp
mov
shl
jmp
fmuls
sbb
out
add
int
adc
jg
imul
pop
push
aas
idivb
cmc
jo
into
pop
adc
jmp
ret
cwtl
scas
and
add
pop
ret
sbb
mov
push
sbb
mov
cmp
pushl
les
mov
mov
insb
and
je
test
cmp
add
fbld
jno
cmpsb
lods
add
enter
fsubs
adc
pop
andl
inc
lret
outsb
sbb
push
inc
mov
jecxz
xchg
pop
mov
xchg
lahf
cmp
movsb
xchg
leave
arpl
and
jmp
sub
lahf
jecxz
pop
lcall
mov
add
cmp
cmp
xor
enter
push
mov
mov
jge
aas
adc
sar
add
sub
sbb
cld
cmp
push
mov
mov
fnstcw
leave
push
xchg
mov
inc
mov
sbb
lods
pop
mov
or
adc
cmp
cmp
xchg
lea
add
out
ljmp
rorl
and
sbb
dec
lret
movsb
and
hlt
gs
or
xchg
xor
sub
fmul
fiaddl
loop
imul
mov
scas
sub
mov
cltd
stos
push
cmp
pop
mov
push
lahf
cmc
mov
mov
cmc
test
sbb
imul
loop
and
pushf
inc
xchg
shlb
jmp
into
ja,pt
push
aas
add
jge
sub
cmp
push
insb
sbb
cmp
mov
jmp
lcall
ds
lock
adc
mov
out
pop
inc
popf
mov
in
jg
cltd
sti
sub
cmp
testl
or
lcall
sti
or
pop
pushf
mov
mov
mov
movsb
push
pop
jmp
cld
pushf
aam
jbe
sbb
xor
icebp
add
mov
inc
mov
and
sbb
bound
xchg
ja
sub
sub
jno
inc
inc
and
jo
pop
aad
pop
jne
xchg
jle
mov
jne
dec
call
out
mov
lock
repnz
sbb
mov
call
xor
orb
jge
notl
ss
stos
xor
inc
gs
xchg
jno
fistps
loop
ret
hlt
mov
push
or
dec
sbbl
ja
xor
bound
repnz
loop
add
fisttpll
jb
cltd
mov
or
int3
push
mov
pop
xchg
imul
clc
fwait
pop
add
inc
mov
or
push
inc
mov
std
cwtl
add
mov
xor
push
rcl
mov
inc
xchg
mov
jns
or
fwait
xor
aas
roll
mov
inc
shll
cltd
arpl
mov
mov
jns
movl
adc
xlat
mov
ja
cmp
add
sbb
pop
sbb
adc
adc
fildl
mov
pop
mov
push
out
test
sub
mov
push
test
inc
lcall
fadds
lods
aam
lret
cmpsl
push
mov
fstpt
cld
movsl
mov
inc
sbb
lahf
mov
addr16
mov
in
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
lock
xor
adc
int
adc
imul
jmp
dec
and
repz
sub
xchg
repnz
sub
jecxz
adc
lcall
pop
imul
in
cmp
lds
mov
popa
adc
outsl
pop
shr
mov
je
sbb
or
push
mov
mov
or
lods
out
mov
repnz
lahf
loope
std
fimuls
push
stc
or
sub
stos
or
mov
push
je
add
icebp
out
inc
scas
push
jnp
mov
xor
xlat
jae
push
stc
adc
inc
mov
xchg
fs
inc
xchg
jns
and
into
iret
xchg
iret
or
mov
cmp
inc
push
push
and
insb
push
dec
dec
mov
mov
ljmp
adc
mov
push
push
test
inc
dec
lods
movsb
push
mov
cmp
jge
adc
stos
les
xor
jae
aam
out
dec
pop
add
ret
dec
shll
and
mov
loopne
in
movl
jge
jmp
xchg
mov
cs
jecxz
mov
mov
push
mov
xchg
pop
jnp
sbb
das
popa
and
mov
out
pop
popf
xchg
xchg
add
stos
adc
pop
jecxz
ljmp
xor
or
je
roll
cmp
xchg
in
ds
mov
inc
pop
pop
ret
lds
xor
cmp
aad
das
orb
aam
inc
pop
in
fsubp
in
cmp
pushf
mov
out
setnp
out
pop
mov
mov
push
nop
and
fimull
in
jle
xor
xchg
outsb
in
and
insb
test
into
inc
mov
cld
jge
fstpt
dec
pop
cmpsl
push
pop
fsubs
lods
ds
insb
fdivrs
shrl
cmp
adc
mov
aaa
xchg
imul
in
cmp
aaa
adcl
int
cmpb
cmp
bound
mov
and
pop
test
test
test
jb
imul
or
inc
std
jl
bound
ret
jg
mov
dec
and
mov
xor
mov
test
pop
jnp
push
mov
cltd
adcl
and
pop
mov
pushf
xorl
js
movsl
mov
push
sub
orl
xchg
lret
mov
js
mov
xor
js
add
and
iret
and
pop
cmp
pop
repnz
int
push
in
mov
xchg
jno
xor
shl
xchg
pushf
stos
sub
je
movsb
lock
mov
cwtl
mov
test
pop
imull
shll
dec
push
or
mov
lahf
jl
les
add
sbb
inc
rcr
mov
test
pop
and
negl
je
xor
shl
xorb
hlt
sbb
jecxz
or
dec
scas
jg
xchg
pusha
sub
aaa
std
cmpl
sbb
mov
jg
scas
inc
popa
ret
hlt
test
lcall
push
aam
dec
fistps
dec
xor
sub
xchg
nop
inc
cmpl
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
pop
mov
adc
int
adc
push
ss
cltd
xchg
jno
xor
sub
mov
js
lock
push
dec
add
mov
pop
add
jne
push
popf
adc
sahf
inc
lcall
and
leave
insl
adc
or
stos
xor
xchg
in
fimuls
mov
nop
rorl
pop
sti
xor
cltd
scas
mov
and
out
dec
nop
aaa
addl
xchg
add
mov
mov
clc
add
cmp
into
mov
push
jmp
xor
xchg
in
cmpsl
daa
xchg
dec
and
sti
in
mov
push
inc
mov
nop
lds
aaa
in
adc
aas
scas
outsb
int3
fsubrs
jo
call
or
dec
or
mov
data16
daa
sahf
addr16
imul
lret
dec
and
addr16
stos
adc
dec
notl
jnp
push
dec
cmc
or
adc
xchg
idivl
inc
loope
pmaxsw
cs
hlt
inc
mov
ljmp
shrb
adc
lcall
dec
lret
loop
mov
mov
push
dec
fwait
xor
les
push
jmp
insb
stos
jnp
add
jne
ljmp
inc
mov
jle
daa
dec
mov
fdivl
aam
inc
mov
adc
inc
test
ja
and
lea
mul
mov
or
inc
sbbl
xchg
ljmp
or
sahf
cmpsl
mov
jns
shll
xchg
repnz
negl
outsb
pop
scas
push
pop
jnp
xor
sub
mov
lret
adc
repnz
popf
push
movsb
into
mov
gs
cmp
lock
sbb
sub
jg
hlt
pusha
iret
imul
pusha
aas
into
loopne
or
ror
sub
in
adc
pop
mov
je
xchg
pushf
movsl
sbb
push
mov
xorb
cmp
es
mov
inc
inc
mov
sbb
out
rcr
mov
jp
or
mov
leave
mov
jp
inc
sub
test
or
xchg
cli
imul
push
jno
fistps
pop
mov
daa
dec
mov
add
inc
mov
jmp
or
or
xor
stos
in
shll
test
cmp
cltd
nop
outsl
pop
pop
xchg
shrb
icebp
and
cmpsl
cwtl
sbb
ds
andl
mov
insb
loope
cmp
fmull
adc
es
repz
mov
inc
jge
sti
pusha
mov
cmpb
icebp
enter
or
movsl
roll
lods
jle
or
push
inc
pop
jecxz
sub
scas
mov
mov
cmp
xlat
ss
jbe
pmullw
gs
inc
cs
jns
in
arpl
loopne
or
leave
neg
out
mov
divl
push
or
dec
aas
mov
push
inc
mov
out
imul
inc
cwtl
xchg
scas
in
jp
pop
and
sahf
sub
rcrb
push
push
pop
jno
xor
push
jp
pop
pop
jno
xor
pop
xor
adc
xchg
mov
inc
enter
mov
inc
adc
adc
fadds
mov
lcall
loop
aaa
adc
add
stos
stc
sahf
dec
lret
ja
cmp
popl
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
out
mov
adc
adc
adc
jo
xor
movsl
push
mov
mov
mov
test
pusha
inc
xchg
test
push
decl
dec
out
out
aas
mov
jbe
fsubr
repnz
inc
dec
add
addr16
scas
mov
addr16
test
lds
xor
in
fiaddl
inc
sbb
sti
dec
pop
inc
je
pop
cmpsl
outsb
in
outsl
insl
xlat
in
inc
dec
out
pop
loope
in
test
push
ds
mov
dec
adc
xchg
jne
fnstcw
inc
ror
icebp
or
sarb
in
sub
fwait
fs
xor
push
adc
loope
jb
in
in
sbb
lea
call
jbe
ja
mov
xlat
das
rclb
add
and
jne
sbb
loope
jbe
ret
ret
hlt
jne
pop
inc
stos
std
dec
fimuls
and
jmp
nop
inc
mov
xchg
sub
nop
sub
test
in
test
push
sbb
mov
and
dec
xor
or
movsb
mov
aaa
mov
lahf
vpmovmskb
pop
dec
rcl
mull
gs
mov
out
rolb
aad
ja
xchg
test
ja
cwtl
in
call
jg
jo
cwtl
out
jno
mull
sbb
jo
xor
push
sbb
inc
dec
sub
xchg
faddp
mov
sbb
or
fdivrl
or
movlps
stc
pusha
cmpsb
adc
adc
jp
rolb
cmpsb
adc
inc
or
arpl
les
sub
stos
xchg
jge
out
push
jno
adc
in
stos
add
and
add
sbb
shll
push
cmp
stos
fcmovne
cld
int3
fwait
cli
out
pop
hlt
push
xchg
cmc
cmp
and
mov
fists
shrb
lahf
cmp
fistpl
cltd
cltd
nop
jnp
sub
or
push
lods
push
or
push
addb
out
fadds
or
out
in
leave
aam
les
shl
jbe
add
add
push
es
imul
out
idivb
xchg
aas
sub
into
insb
or
xor
or
or
xor
mov
xchg
mov
jnp
push
and
xlat
mov
pop
jns
push
and
hlt
fwait
scas
mov
in
sbb
pop
stc
int
cmpsl
mov
movsb
dec
pop
mov
push
aaa
ja
and
testl
jnp
lods
ss
cmp
into
pop
lret
inc
orl
cld
scas
out
push
sub
cmp
dec
mov
js
sub
jo
sarb
std
and
dec
test
stos
mov
mov
aaa
push
out
test
sarb
call
pop
sub
xchg
ljmp
push
les
pop
pop
das
fcoml
sbb
mov
jg
sbb
out
xchg
add
adc
das
out
divl
into
cmp
and
stos
addr16
xor
push
cmp
hlt
or
pop
call
les
mov
loop
dec
repnz
js
hlt
mov
and
ja
loop
sbb
dec
inc
dec
and
in
jl
dec
and
inc
add
lcall
sti
sub
in
mov
cmc
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
sbb
push
mov
adc
lahf
dec
jb
ds
je
les
fcomps
and
int
push
nop
mov
mov
or
imul
mov
ss
fnstcw
dec
cmpsb
int
mov
xor
fbld
bswap
lret
ds
pop
lcall
andl
push
loop
mov
inc
xlat
mov
add
out
push
lea
xchg
ljmp
ret
imul
lds
mov
adcb
loop
bound
push
int
add
call
sub
js
sub
jmp
mov
cmp
ds
std
sbb
cld
jns
mov
bound
out
mov
xchg
arpl
xchg
and
ja
pop
jl
shrb
push
pop
movnti
push
xchg
xor
scas
or
adc
lret
punpckhwd
cld
sub
fdivrl
mov
jecxz
fidivl
sti
jb
mov
sub
cmp
addr16
add
mov
jae
and
mov
sub
sbb
push
add
outsb
xchg
repnz
inc
inc
xchg
pop
sahf
xchg
xchg
icebp
sub
bound
xlat
in
dec
stos
or
iret
dec
adc
cmp
jo
pop
jnp
scas
nop
adc
dec
rorl
adc
clc
and
mov
sar
or
push
fwait
mov
aas
ss
fcmovu
add
flds
dec
xor
mov
inc
loop
or
xor
add
jmp
jge
mov
push
pop
sti
lcall
shll
cmp
fmulp
adc
ds
or
sub
mov
sbb
nop
je
fcoms
jmp
jp
jecxz
mov
das
ja
or
push
cld
cmp
mov
popa
int
inc
sbb
sub
adc
and
fbstp
lds
je
sar
insl
or
mov
xchg
insl
out
cld
and
ds
loope
sbb
xor
ljmp
fisubs
cs
mov
and
lcall
out
jge
enter
mov
mov
lret
test
into
aam
aad
lahf
add
mov
int3
repnz
mov
leave
sahf
xor
cltd
inc
repz
or
fistpl
sub
pop
pop
jne
lock
dec
insb
test
cmpsb
cs
js
js
out
cmp
lcall
and
adc
and
in
mov
les
sbbl
xchg
loop
loope
icebp
add
sub
ret
mov
push
dec
dec
jp
or
fprem1
repnz
and
push
sub
fidivs
mov
fisubrl
mov
push
ret
enter
stos
pop
inc
xor
aaa
js
pop
dec
ret
inc
call
inc
daa
xchg
les
test
cmp
fstpt
ja
imul
adcb
add
xchg
xchg
sub
pusha
shll
cmc
fidivl
inc
iret
aas
shr
arpl
dec
in
mov
xor
jnp
int
adc
dec
add
ffreep
jo
je
sti
xchg
or
imul
fsubl
scas
xchg
mov
cmp
pop
cmp
mov
pop
clc
adc
and
inc
dec
pushf
pop
sbb
ficoml
or
mov
lods
sbb
jns
mov
out
adc
mov
pushf
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
orb
mov
int
adc
scas
cli
aas
ljmp
sub
xor
stos
pop
adc
add
xlat
imul
jg
mov
pusha
pop
sbb
das
lods
mov
repnz
lahf
push
jl
std
stc
clc
xchg
bnd
test
std
bound
xchg
call
pop
lahf
push
xchg
neg
mov
movsb
mov
loopne
inc
xorl
mov
jg
das
arpl
jns
cwtl
xchg
dec
imul
test
dec
stos
in
ffreep
mov
lcall
and
jge
push
push
xchg
lea
dec
xor
push
push
or
jecxz
pop
test
inc
cmp
add
inc
push
or
add
insl
nop
pop
sub
add
into
jne
jnp
shll
sarl
stc
jecxz
ljmp
dec
mov
fisttps
sub
push
arpl
xor
popa
cltd
int
int
pause
pop
pop
or
bound
pop
scas
daa
sub
rcrl
js
xchg
xor
or
bound
add
mov
xchg
jbe
mov
push
mov
jb
es
dec
out
data16
dec
push
xor
loope
ds
inc
enter
and
add
imulb
inc
pusha
ss
pusha
mov
lret
dec
mov
pop
mov
mov
rorb
cmp
push
arpl
cmp
jns
rcll
dec
dec
mov
push
and
cmp
cltd
pop
stos
cmpsb
pop
cwtl
cmp
push
sti
repz
pop
call
shll
lock
or
and
popa
mov
mov
sub
mov
mov
xor
out
dec
jp
sub
dec
andl
inc
je
enter
out
xchg
jp
jb
fstps
dec
pop
stc
pop
push
push
push
test
sbb
add
ret
repz
jge
xchg
inc
cmp
sti
dec
lds
fs
dec
int3
inc
dec
lcall
dec
add
movl
ss
stc
fisubrl
add
add
mov
cmp
loopne
test
xchg
aas
mov
cmp
add
test
xor
sub
sbb
enter
sahf
adc
mov
adc
insb
or
xchg
mov
inc
gs
ja
adc
movsl
add
xor
mov
int3
add
push
stc
arpl
shrb
jb
test
jnp
push
pop
mov
sub
fistpl
and
outsb
xchg
jp
jg
adc
fildl
and
loope
nop
sub
rcll
push
adc
shl
lea
aad
hlt
incb
cmpsl
jne
xor
add
repz
mov
adc
in
ds
imulb
pop
xchg
jmp
jne
and
pop
jbe
sub
dec
xor
data16
sarl
fmull
lods
mov
jp
into
sbb
adc
or
out
fadds
mov
or
sbb
insb
insl
mov
stc
test
inc
addr16
rorl
cltd
add
lret
sti
insb
add
xchg
mov
sub
adc
jecxz
sub
ds
jne
addr16
fcmovb
adc
mov
repz
inc
add
shrb
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
jp
js
test
adc
adc
adc
aad
loope
lret
or
fistpll
out
xorb
jg
dec
std
mov
repz
mov
cmp
outsl
push
sbb
fiadds
add
add
test
add
cmp
jge
cmc
outsb
jns
sbb
sub
sysexit
dec
push
hlt
fs
rolb
push
xchg
rcrl
mov
aaa
cs
mov
dec
test
mov
imul
add
das
ret
hlt
roll
shlb
lea
int3
ficoms
and
aas
sbb
mov
rolb
jb
dec
inc
pop
les
sbb
lret
mov
mov
lcall
adcl
cmpsl
xchg
arpl
inc
sbb
outsb
orb
mov
mov
sub
test
dec
jne
imul
sub
sub
testl
add
and
pusha
or
dec
mov
jg
cmp
sub
daa
mov
lods
fwait
sbb
or
bound
ja
loope
and
je
loop
insl
mov
fiaddl
xchg
adc
xchg
leave
icebp
dec
cmp
movsb
push
sub
xor
jne
daa
and
leave
push
xor
xchg
into
fidivrs
xchg
scas
out
das
xchg
add
cmpsb
jg
add
sub
jno
js
pop
cs
roll
mov
stc
in
in
inc
adc
push
loopne
insl
xor
sub
inc
nop
xchg
mov
xchg
in
mov
in
xchg
stc
xor
test
jne
stos
and
sbb
orl
pop
jecxz
xchg
stos
sub
lock
mov
out
test
pop
push
in
into
or
cmp
adc
mov
mov
push
loope
mov
std
inc
dec
bound
add
xchg
hlt
imull
test
rorb
pop
push
cmp
les
movsb
mov
jns
cmp
xchg
test
sub
and
rolb
clc
and
adc
rol
test
mov
arpl
outsb
xchg
dec
stos
add
push
jns
out
stos
pop
movsb
or
movsb
pusha
dec
push
enter
out
mov
sbb
or
daa
mov
pop
insl
jb
mov
adc
xchg
adc
push
adc
push
xchg
sub
push
in
subl
inc
stos
adc
adc
and
mov
out
jg
ud2
fcoms
mov
adc
add
fidivrl
jno
je
nop
stos
stos
or
lcall
or
jp
add
int3
pop
xor
push
scas
pop
cmp
icebp
cmp
push
cmp
shll
je
pop
sub
xchg
aas
push
sbb
pop
pushf
call
or
inc
or
or
mov
add
or
lock
adc
pop
enter
sbb
and
cwtl
pop
jae
cmp
shl
rcrb
scas
shlb
jmp
cmp
add
push
outsl
xor
xor
xor
fisubrl
fimull
jae
ror
push
clc
jbe
pushf
dec
cli
cs
mov
pusha
nop
mov
gs
cs
cld
test
xor
cmp
jle
add
add
pop
je
sbb
ljmp
inc
dec
jb
outsl
cltd
mov
mov
cmp
iret
popf
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
inc
jp
mov
int
adc
pop
aad
call
push
loope
imul
repz
movsb
jecxz
jno
jbe
lahf
mov
mov
ret
scas
jo
xchg
stc
xchg
in
cltd
dec
fsub
push
imul
cmp
mov
jecxz
pusha
sub
mov
pop
sarl
iret
add
loopne
stos
loopne
cmp
cmpsb
scas
jecxz
add
adc
leave
loop
outsb
lods
lret
mov
pop
das
insb
pop
mov
push
inc
faddp
scas
pop
fsubr
scas
adc
outsl
enter
cmc
inc
pop
mov
sub
jns
in
test
ljmp
inc
rol
and
std
add
enter
icebp
out
hlt
push
sbb
mov
cmp
addr16
clc
mov
sbbl
out
popf
adc
inc
or
push
mov
data16
jecxz
arpl
and
dec
imul
addr16
fistpl
sbb
sbbb
test
cmp
js
adc
dec
sbb
jge
and
hlt
adc
add
and
sbb
mov
jecxz
cmp
jge
mov
sub
xor
divl
out
xchg
icebp
lcall
fbld
pop
mov
adc
ds
sbb
jle
int
enter
sbb
andb
es
add
cwtl
scas
jg
mov
adc
cmpl
loop
cmp
outsl
out
fbld
fadd
jg
clc
std
adc
lahf
daa
aaa
ret
pop
sbb
out
out
ret
cmpsl
insl
nop
cwtl
adc
scas
jns
push
das
cmp
push
jae
cwtl
test
add
cmp
ljmp
hlt
jge
sub
xchg
add
es
scas
lock
push
mov
add
push
pop
xchg
cli
add
push
mov
sbb
rcll
xlat
mov
inc
movsl
or
aas
pop
dec
xchg
test
mov
add
test
rcr
mov
xchg
push
sbb
sub
mov
enter
cltd
gs
into
xchg
insb
dec
gs
ja
jmp
ret
cmpsb
test
xchg
ds
inc
adc
sub
sub
sub
stos
inc
sbb
mov
fwait
ss
xor
inc
out
in
rol
xchg
icebp
cwtl
int
int
jp
cltd
xor
popf
mov
daa
cld
les
jno
filds
cmpsl
std
gs
mov
push
xchg
or
push
loope
pop
inc
jmp
fwait
and
dec
cld
push
les
js
pop
aam
in
or
dec
cmp
je
sti
xchg
adc
pop
stos
shr
orl
in
movsb
iret
repnz
cvtdq2ps
lds
mov
shrl
xor
sub
cld
add
pop
fistpll
idivl
mov
test
xor
adc
mov
push
or
jl
jmp
outsb
inc
or
mov
sub
or
repz
mov
xorl
ds
leave
in
push
add
js
sar
jnp
leave
clc
push
aam
test
inc
test
aad
or
out
mov
cmc
mov
pop
mov
inc
jecxz
data16
loope
xchg
cmp
jae
mov
imul
es
in
daa
push
mov
mov
lret
push
std
mov
divl
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
or
sub
adc
adc
or
loop
sub
stos
xor
jno
xor
jb
sbb
dec
aas
inc
jne
stos
into
in
into
cwtl
les
notl
sub
call
in
lahf
dec
ss
sbb
inc
dec
push
cmp
xrelease
mov
pop
pusha
add
hlt
xchg
js
inc
xchg
loopne
repnz
ds
lahf
mov
add
les
ret
jl
push
inc
push
push
sahf
inc
scas
sbb
out
pop
scas
dec
stos
sbb
imulb
or
pop
adc
inc
jno
sbb
cmp
jno
pop
cmp
sub
cmc
pop
lret
xor
lods
dec
xlat
cmpsb
fistpll
jno
repz
scas
arpl
loopne
lods
lahf
daa
lock
dec
pop
hlt
ja
add
dec
lret
clc
add
addr16
lret
leave
push
cld
ljmp
adc
jo
adc
mov
sahf
sti
and
jae
jl
mov
jbe
fcomip
or
scas
fs
push
jl
fisubrl
outsl
pop
lods
dec
sub
cmpsl
jb
in
ret
xor
or
xchg
imul
int3
or
push
out
and
ret
fstpt
dec
mov
cmp
cmp
xchg
and
cmpsb
imul
jo
in
and
mov
icebp
data16
xchg
push
inc
aas
push
repz
enter
adcb
test
hlt
pop
cli
dec
or
nop
sbb
or
or
in
dec
dec
cmpsl
clc
jecxz
and
jge
xchg
fstpl
xor
iret
fwait
mov
icebp
div
repz
mov
decl
addr16
sbb
imul
sub
pushf
mov
js
repz
cmp
test
jmp
clc
sub
mov
jl
mov
filds
fldenv
xor
inc
add
es
push
ja
push
scas
push
movsb
sub
add
xchg
ficoml
test
and
jmp
cmp
push
lret
xchg
pop
jmp
inc
cmpb
daa
sub
sbb
add
push
dec
sbb
pushf
repz
imul
movsb
push
rorl
jecxz
mov
cld
xchg
mov
adcl
mov
sub
insb
ljmp
or
ret
divb
sbbb
lcall
pop
mov
or
sbb
in
mov
call
xor
pop
popa
push
push
add
mov
fldt
pop
fst
mov
out
push
fisubs
les
xor
mov
in
in
pusha
test
or
push
pop
xor
sbb
in
fisubrs
mov
add
push
adc
mov
add
cld
add
ljmp
ret
mov
mov
outsb
mulb
jo
pop
pop
xchg
cmp
push
lahf
daa
mov
jo
add
ret
std
dec
xchg
out
adc
lea
imul
mov
cmp
fwait
ret
ljmp
cmc
adc
cmp
ret
and
in
push
bound
rcl
insb
repz
mov
aam
push
mov
cld
call
lcall
aam
adc
fwait
inc
dec
int3
fiaddl
lds
sahf
add
fnsave
stc
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
and
repnz
cli
inc
dec
outsl
ret
rcll
lds
sub
push
out
cmp
sbb
lret
dec
jmp
jo
pop
sahf
cmpb
cmpsl
xchg
jle
out
pop
fs
mov
dec
dec
shll
loop
push
xchg
mov
push
lock
fisubrl
and
cmpb
mov
fs
xchg
xlat
leave
ljmp
ror
push
rcll
cmp
cltd
xchg
jno
ret
mov
inc
scas
add
and
mov
repz
adc
pop
lea
test
xchg
xchg
mov
lods
aas
adc
mov
sub
push
xor
or
mov
pop
cmpsl
or
adc
dec
lds
and
inc
mov
jmp
mov
rolb
imul
add
into
push
cmp
leave
jae
lret
jbe
movsl
or
and
rcrl
and
push
sbb
int
lock
add
negb
pop
mov
movb
mov
lret
sahf
jl
lds
cltd
in
cmpsb
ss
in
ret
sub
and
arpl
sub
aas
das
movsb
sbb
lcall
lret
call
and
rorl
adc
jb
mov
call
xlat
hlt
sar
sub
dec
lods
enter
jno
sub
sbb
cmc
xor
jno
pop
sub
movsl
xor
dec
fwait
mov
jp
fwait
icebp
mov
jge
je
sub
popf
bound
andl
xor
and
outsb
cmc
push
mov
shll
inc
cmc
leave
shrb
add
shll
out
sbb
out
jecxz
pop
addr16
jle
xor
fsubr
mov
sub
and
push
std
jae
sti
jl
ja
fisttpll
sub
jno
cwtl
xchg
dec
icebp
cs
into
scas
sti
outsl
fidivrl
testl
cmpsb
out
movd
jb
mov
push
sub
mull
test
adc
test
jecxz
cld
add
jb,pt
imul
jno
pop
pop
scas
dec
sub
in
pop
or
test
mov
jl
or
mov
xor
ret
jae
sbb
aaa
and
cmpsl
mov
sbb
fnstsw
lret
mov
xor
fwait
xchg
push
dec
lahf
int
jne
loop
cmovs
mov
xchg
cmc
jmp
push
sbb
sahf
ds
mov
sub
js
inc
push
andl
mov
fcmovb
js
ds
inc
add
and
jns
sub
repz
mov
dec
aaa
xchg
mov
nop
mov
mov
pushf
push
and
sub
in
arpl
int3
hlt
frstor
movsb
mov
bound
idivl
ret
int3
ret
or
aas
inc
cld
cmc
loop
mov
lea
arpl
stos
frstor
orb
mov
push
jmp
mov
sub
adc
out
or
pop
daa
and
shl
outsl
xor
mov
fimuls
icebp
jo
and
insb
mov
fdivrs
sub
adc
xor
jmp
addr16
jnp
xlat
xchg
out
leave
jl
bound
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
ljmp
adc
adc
mov
sub
leavew
mov
lahf
pop
push
ja
pop
dec
roll
lret
pop
push
popa
test
dec
stos
lret
les
xchg
xor
push
mov
lods
mov
mov
add
push
shr
xchg
outsl
out
inc
lret
ja
dec
scas
xor
lock
cmpsl
push
inc
movsb
mov
mov
push
jno
dec
push
in
addr16
sbb
repnz
pop
je
lcall
mov
fs
sar
es
lods
popl
cmp
jnp
les
cmp
daa
xor
mov
icebp
outsb
fs
inc
cmc
add
jo
cmp
inc
test
push
hlt
in
movsl
ds
add
pop
in
mov
jmp
aam
or
enter
movsb
xor
fwait
lods
mov
sbb
popa
fcmovb
mov
addb
jns
inc
jno
pop
sub
fistl
cld
in
orl
rorl
sbb
sub
jns
push
xchg
cmpsb
rclb
mov
dec
int
xlat
push
pop
in
push
xor
mov
jle
repz
fstl
in
dec
inc
mov
cmpsl
lahf
js
sub
jle
imul
test
stos
jge
dec
movsl
mov
xor
push
cmp
dec
les
les
dec
cs
fsubrs
adc
loop
in
mov
subb
mov
xchg
ja
int
adc
dec
pop
fistps
jge
sub
jbe
mov
pop
cmp
push
imul
pop
and
mov
scas
bound
das
push
ret
jg
nop
cmp
in
sub
push
fldcw
mov
lahf
jmp
fidivrl
test
push
mov
sbb
into
in
sub
fisubs
and
push
iret
push
pop
lods
leave
insb
cmp
in
sub
divb
mov
outsl
mov
insb
stos
mov
outsb
fcomip
dec
dec
cmp
fcoms
stos
pop
push
cmp
mov
and
test
adc
arpl
sub
adc
mov
jne
pop
mov
dec
add
add
sub
dec
int3
imul
es
mov
scas
rorl
or
push
and
movsl
jecxz
sbb
jg
in
rol
mov
or
fiadds
flds
rolb
sbb
je
push
mov
push
push
fst
mov
divl
xor
in
and
xchg
dec
mov
sbb
lds
or
and
shr
or
stc
pop
mov
sbb
mov
xchg
pop
fadd
scas
test
movsb
pushf
in
imul
idivl
aaa
not
not
loop
push
ljmp
xchg
and
mov
mov
hlt
cmp
and
pushf
es
sbb
mov
insl
jp
push
test
mov
or
mov
cmp
adc
shr
insl
push
mov
push
mov
shl
les
inc
cli
mov
jl
subl
cltd
mov
xor
shlb
ror
faddl
push
fistpll
iret
add
or
ficomps
add
jae
inc
mov
sarb
pop
imul
push
jg
jns
inc
into
inc
jno
and
aam
sub
and
ror
pop
mov
roll
ret
lods
pop
pop
jae
adc
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
les
dec
mov
int
adc
cwtl
xor
call
lcall
insb
xor
pop
and
mov
push
mov
ljmp
ds
lcall
pusha
xor
into
xlat
addr16
ds
popa
mov
fnstenv
xchg
aaa
dec
pop
mov
gs
push
push
xchg
hlt
xchg
mov
inc
push
jo
xor
mov
fldl
mov
out
shlb
inc
jne
repnz
or
push
imul
pop
jnp
aad
sub
adc
adc
repnz
popf
xchg
push
mov
xchg
mov
xor
aad
add
jp
inc
ja
add
and
push
fiaddl
mov
cld
rcl
and
mov
add
and
cmpsb
lea
xorb
xor
rcl
push
push
dec
jae
js
adc
mov
into
mov
fs
and
push
ret
push
jmp
xlat
addl
nop
add
outsl
in
sub
cmp
jnp
filds
pop
mov
and
je
push
sahf
inc
add
clc
push
out
pop
mov
cmpl
push
mov
push
icebp
lret
xor
cvtdq2ps
or
popa
adc
xchg
xchg
jbe
repnz
out
cli
inc
movsl
fs
lock
mov
ffree
jno
clc
arpl
out
sbb
imul
lods
leave
adc
cld
mov
mov
xchg
daa
xchg
pop
lods
int
enter
jg
fsubrl
xchg
mov
push
repnz
sbb
sbb
mov
fstpl
leave
jnp
flds
jmp
inc
cmp
jmp
pop
lahf
pop
and
fs
mov
hlt
int3
mov
mov
xchg
cmp
inc
lcall
mov
mov
xchg
xchg
or
ret
bound
test
cmc
xchg
mov
orl
fcmovb
test
insl
dec
mov
inc
mov
push
es
push
adc
notb
push
mov
adc
inc
cmp
call
dec
jg
inc
add
imul
dec
cmpsl
pusha
mov
mov
mov
push
psadbw
arpl
xor
cmp
push
mov
mov
or
outsl
mov
xchg
scas
mov
mov
in
fidivrl
lods
dec
int3
jb
in
or
mov
dec
mov
cmpsl
or
sbb
mov
sbb
mov
mov
dec
and
orb
or
pushf
add
jno
cmpsb
or
repz
push
mov
or
and
flds
pop
push
mov
sub
mov
rolb
jnp
inc
add
data16
or
xor
jmp
movsl
add
scas
add
arpl
mov
add
push
fs
mov
fucom
mov
fs
jl
nop
xchg
aam
or
push
jp
add
mov
pop
fisttpl
test
int
mov
mov
std
insb
mov
xchg
mov
cmp
sbb
pop
cmc
popa
jmp
incb
pop
hlt
jl
adc
add
mov
sbb
lret
jl
imul
dec
jbe
ss
adc
sbb
in
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
add
in
push
jl
adc
adc
adc
sub
aaa
clc
push
inc
mov
xchg
jg
sbb
pop
lods
lahf
adc
aaa
mov
adc
xchg
inc
negb
test
push
in
adc
and
pop
lea
mov
jmp
push
scas
ljmp
pop
jbe
xor
sbb
cmc
cmc
push
xchg
lret
imul
lret
jno
xlat
lret
rolb
inc
loope
mov
adc
es
ja
add
dec
push
jg
add
mov
arpl
fnstenv
pop
fisubl
inc
scas
loop
sarb
jns
or
mov
dec
add
dec
pop
add
call
repnz
sbb
sub
repnz
clc
fmull
and
scas
sbb
roll
subb
repnz
rcr
pusha
dec
sbb
aad
or
cmpsb
or
orl
jecxz
outsl
dec
stc
sbb
lea
aad
push
sbb
mov
cmp
push
mov
push
repnz
inc
bound
sub
push
jne
arpl
mov
mov
scas
lea
sub
or
push
aad
mov
mov
xor
call
aas
sar
inc
fisubs
xor
out
lahf
push
push
push
inc
jmp
adc
in
or
mov
idivl
stc
mov
mov
or
pop
idivb
in
lock
in
push
jg
mov
clc
cs
ret
fisttpl
aas
stos
jno
xor
and
jp
jnp
or
shrb
stc
scas
repz
out
scas
adc
or
shrl
mov
dec
test
or
push
add
and
inc
addr16
dec
inc
test
add
out
xchg
pop
andb
outsb
lock
add
cmp
mov
das
pop
cwtl
je
mov
idivl
push
and
jbe
imulb
mov
fisubrs
loop
in
loopne
mov
and
fisubrs
or
sbb
push
into
xor
repnz
loopne
mov
movsb
jmp
pusha
arpl
out
sbb
movsl
loop,pn
insl
and
daa
xlat
insl
inc
dec
xchg
test
jo
lcall
ret
into
iret
inc
lahf
jb
je
es
nop
fisttpll
mov
dec
jb
sbb
and
popa
cmpsl
xchg
sahf
mov
ss
push
inc
int3
and
or
fiadds
sub
repnz
fs
sarb
pushf
leave
sub
popf
sbb
cwtl
dec
add
aaa
fcmovbe
rcrb
bound
mov
rorb
add
sub
cmp
push
add
ficoml
adc
xchg
ss
or
xor
popa
xchg
lcall
lods
mov
or
adc
fmuls
push
es
push
aam
and
in
out
fmul
xor
lds
xchg
negb
cli
dec
jne
inc
cmp
scas
and
fidivl
pop
xchg
inc
adc
sbb
mov
rclb
gs
repz
sub
cmp
mov
inc
xor
pop
mov
and
jo
cmp
mov
cmp
ss
movsl
pop
push
sti
push
sbb
pop
sbb
or
dec
xchg
pop
bound
sub
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
jg
insb
mov
adc
adc
stos
lea
lcall
icebp
ret
inc
fsubrs
inc
pop
fcom
frstor
std
data16
adc
test
add
inc
jo
cmp
or
xchg
mov
fsts
pop
push
pushf
not
xor
ret
int
in
aad
jge
push
mov
inc
sub
adc
icebp
mov
mov
popa
lret
jecxz
in
xchg
sub
cmpsl
rorl
add
jg
and
daa
aas
sbbb
stos
sti
push
pop
push
xor
arpl
xchg
testb
cltd
in
stos
stos
adc
adc
xchg
sahf
mov
pop
sub
or
push
dec
jg
xor
mov
pop
enter
dec
inc
or
insb
jl
inc
cld
and
les
sbb
jno
dec
rcl
icebp
and
cmc
cltd
cmp
into
push
out
insl
mov
add
fcompl
into
cwtl
addr16
sti
sbb
jbe
and
test
sub
sub
lock
cwtl
in
jb
add
lods
popa
cmp
daa
loope
mov
sbb
push
mov
sub
xchg
mov
stos
mov
dec
insb
ret
out
sarb
push
lret
sti
jb
cmp
fbld
xchg
lds
movb
mov
stos
push
push
icebp
sbb
lock
jle
mov
adc
cmp
push
inc
xchg
ds
negb
into
test
push
jno
pop
mov
pop
pop
xchg
fisubl
lds
pop
jnp
insb
mov
jg
pop
or
ss
cmp
mov
xchg
ficomps
mov
pop
in
ret
add
enter
mov
loope
loopne
jmp
sub
repnz
repz
lods
loopne
and
jbe
fldt
cltd
dec
cmpsl
xchg
adc
mov
iret
or
cmpsb
push
loopne
popa
mov
dec
jnp
stos
fcom
or
adc
jo
pushaw
lcall
mov
loopne
pop
xchg
adc
out
pushf
adc
fnsave
push
lea
test
adcb
sarb
daa
negl
push
es
imul
ds
decb
mov
mov
xlat
jns
dec
jge
lret
stc
in
cwtl
daa
xchg
ss
adc
lods
adc
fdivrs
dec
stc
stos
or
and
arpl
cs
imulb
jbe
jle
cltd
loop
das
add
mulb
subl
pop
mov
inc
subb
repnz
call
or
xchg
outsl
push
add
mov
cli
add
sbb
pop
stos
push
in
incb
push
xor
leave
inc
cltd
xchg
push
adc
jecxz
cmp
add
dec
push
inc
popa
or
call
xchg
lea
nop
jecxz
jecxz
mov
xchg
xchg
or
push
push
pop
jmp
mov
stos
xchg
call
clc
and
jne
adc
aaa
dec
dec
pop
xchg
pop
sub
rol
inc
inc
xchg
xchg
mov
pushf
sub
std
xor
mov
jbe
insl
aaa
add
add
std
ja
vphaddwd
push
enter
jo
fwait
adc
and
inc
cs
aam
mov
pop
dec
test
or
in
in
scas
cltd
popa
clc
dec
jle
pop
call
fsub
cld
sub
les
daa
stos
dec
aad
orl
enter
add
add
jle
sub
xchg
mov
adc
mov
adc
adc
adc
pusha
jp
jecxz
push
adc
adc
adc
and
jmp
out
stc
mov
xor
jge
stos
push
fdiv
jno
call
iret
push
lods
and
adc
push
daa
mov
into
mov
or
push
lcall
ljmp
dec
cmc
in
lea
mov
mov
fstps
nop
xor
push
mov
mov
push
lods
xor
or
add
adc
push
push
pop
sub
outsb
mov
jl
pop
jb
mov
add
add
in
cltd
push
sbb
test
fisubrl
or
inc
pop
pop
mov
les
orl
and
pop
or
cmpsb
nop
inc
cmp
mov
lret
scas
cmovns
adc
mov
xlat
repz
add
pop
ja
mov
cld
xorb
clc
insb
sbb
push
shlb
je
mov
mov
lds
or
mov
scas
cmc
add
mov
sub
mov
flds
mov
dec
sub
mov
xor
inc
nop
rorb
cli
subb
scas
sub
pop
cs
xchg
push
or
push
pop
test
sbb
ret
pop
aaa
cmpl
popf
mov
sub
push
mov
sbb
xor
xor
cwtl
adc
pop
inc
xchg
jae
inc
mov
mov
lods
scas
push
mov
or
arpl
add
jbe
xor
pop
test
xor
xor
pop
int3
movq
xorl
pop
sahf
in
and
cmp
mov
xchg
in
in
pop
adc
bound
jbe
rorb
mov
mov
mov
movsb
in
scas
cli
iret
pop
ds
sti
adc
xchg
inc
push
mov
std
cld
adc
out
aas
inc
sub
inc
jmp
add
leave
es
jge
or
or
nop
roll
lea
mov
mov
sbb
arpl
cmp
shll
aad
and
andl
cmp
inc
rorl
pop
sahf
sahf
pusha
sbb
movsl
inc
insl
stc
xchg
sub
push
call
xchg
inc
push
sbb
jp
adc
pop
andb
xchg
in
bound
xchg
pop
mov
sub
ficoms
pusha
dec
iret
lock
pop
mov
call
pop
or
imul
ja
daa
mov
stos
ret
je
dec
jmp
insb
outsb
dec
sahf
out
mov
loopne
popf
mov
mov
prefetcht2
int3
mov
push
jb
or
fisttps
mov
xor
mov
fsubl
pop
dec
jg
jle
call
mov
cmp
and
xor
jne
pop
dec
cmpsl
loopne
in
push
icebp
loop
xchg
ja
xchg
loope
rol
lock
xor
push
mov
mov
dec
int
mov
js
push
loopne
enter
or
inc
push
xor
jnp
dec
je
and
push
mov
inc
leave
rcll
inc
mov
push
filds
shl
inc
inc
mov
mov
enter
stos
fs
cmpsb
dec
push
xor
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
dec
jb
jle
push
adc
adc
adc
jno
out
aam
mov
fnstenv
pop
scas
mov
cmpsl
lcall
push
jne
push
fdiv
loope
mov
push
cli
aam
push
test
repz
push
push
sub
les
jge
jg
jmp
dec
fisttps
mov
jae
aam
mov
pop
push
in
ja
aam
sbb
test
mov
shll
pop
inc
mov
cmp
xor
cmc
push
loope
nop
les
push
repz
fnstcw
pop
push
sbb
jp
or
out
and
add
mov
adc
push
mov
pop
scas
mov
inc
xchg
mov
ret
ret
outsl
or
test
ret
xor
inc
leave
or
mov
inc
ss
or
cmp
fcomi
outsb
pop
xor
mov
in
jo
in
das
sbb
jl
mov
mov
sarl
xchg
das
addr16
lret
cmp
sahf
jmp
inc
and
xchg
icebp
jo
xor
and
mov
xchg
jge
enter
decb
ljmp
fistpl
leave
lcall
adc
sarb
pop
jns
ja
adc
jecxz
and
push
dec
xor
xchg
fnstcw
mov
pop
xchg
rcr
aas
int3
lods
repnz
mov
pop
rorl
sbb
xchg
and
adc
adc
pop
mov
inc
xchg
dec
stc
jp
xchg
bound
dec
dec
loopne
and
ret
xor
push
pusha
clc
inc
push
jo
mov
add
xor
jge
sbb
adc
push
cli
lock
fsubs
mov
mov
fidivs
mov
add
movsl
out
je
loope
pop
movsb
sbb
pop
cmp
adc
push
jmp
test
add
dec
lret
fmull
push
repnz
and
mov
lcall
test
outsl
jae
mov
out
jge
je
or
in
and
repnz
adc
pop
push
or
xor
sub
and
add
mov
jno
test
dec
mov
xchg
sub
adc
mov
dec
mov
ljmp
nop
leave
jns
jnp
jne
mov
dec
cmp
mov
push
xlat
mov
push
mov
dec
mov
xchg
in
rclb
push
sbb
dec
mov
adc
lds
and
mov
pop
test
cmp
ja
and
out
adc
ja
je
mov
ret
dec
repz
js
sub
xchg
push
sbb
mov
push
jno
sub
xchg
push
test
push
out
mov
add
cmp
sbb
or
push
daa
ficoml
loope
insl
lret
push
out
jae
fistps
dec
outsl
insl
psubsw
lods
loop
mov
imul
pop
cmp
pop
mov
jae
add
nop
bnd
pop
gs
scas
cli
cli
jne
mov
stos
xor
mov
mov
jns
xor
adc
out
push
insb
adc
cmp
movsl
loop
xchg
jecxz
push
xor
xchg
pushf
mov
xor
movsl
mov
xchg
mov
insl
cmp
dec
dec
xor
or
jl
push
cmp
rcr
push
pop
rcll
mov
int3
pop
cwtl
nop
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
decl
adc
push
adc
adc
imul
cld
inc
es
cmp
add
add
aaa
data16
leave
dec
aad
mov
mov
jne
mov
xor
sarb
lahf
jle
dec
cltd
or
xor
jg
jge
into
iret
or
in
mov
pop
pop
xor
dec
bound
fwait
jg
xlat
dec
xor
enter
in
or
sbbb
out
jbe
adc
jl
jge
lcall
sarl
lahf
push
push
push
jecxz
xor
inc
movsb
inc
mov
stos
jae
outsb
test
loope
sarb
shll
jmp
ss
insl
push
ds
cltd
mov
imul
xchg
or
sbb
bound
iret
push
icebp
xorb
aam
cmc
pop
fsubrl
test
js
into
popf
push
adc
ljmpw
xchg
push
pusha
rorb
icebp
mov
js
jp
cmc
divb
push
imulb
fdivp
xchg
in
iret
andb
jns
movnti
push
fnstenv
icebp
test
gs
dec
sbb
and
enter
push
xor
mov
jp
loop
xor
lods
cmp
xor
push
mov
mov
lods
mov
adc
dec
loop
pop
outsl
out
sub
sub
shrl
in
cltd
sub
out
or
mov
pushaw
popf
clc
std
xchg
fstp
jno
or
fsts
in
in
mov
sub
mov
cld
loop
dec
testb
shlb
sarb
pop
out
shll
movsb
bound
sarb
mov
inc
cltd
movsl
rorb
mov
js
add
mov
cmp
mov
xor
mov
dec
dec
es
inc
xor
aas
pop
cmpsl
sbb
sub
pop
mov
sarb
xlat
js
jns
mov
jo
out
jge
sub
loop
xor
mov
cwtl
and
jecxz
sub
xchg
jbe
int
testl
mov
mov
movsb
mov
sti
cmc
into
int
mov
adc
hlt
jns
jno
jle
xchg
pop
xchg
adc
jnp
mov
mov
xor
mov
sub
inc
xchg
negb
fst
stos
cmp
push
xchg
pop
pop
ss
add
mov
mov
pop
lods
scas
dec
out
adc
enter
cmp
mov
mov
rorb
mov
test
xor
das
pop
cwtl
pop
cmp
testl
mov
push
call
ja
cmp
sbb
pop
loope
xchg
cmpsl
sub
add
sahf
mov
ret
flds
jmp
mov
decl
or
pop
jo
mov
jo
and
adc
pusha
js
xor
pop
mov
lods
jae
mov
cmp
sub
inc
repnz
xor
aaa
lods
add
cli
pusha
xor
mov
in
add
cwtl
outsl
push
ror
xor
lds
dec
mov
fiadds
sub
in
in
inc
and
xchg
push
orb
jae
add
add
iret
aaa
push
pop
loopne
and
imul
popf
and
imul
mov
xchg
fwait
pop
xor
popf
in
cmp
pusha
in
push
mov
pop
dec
push
aad
jg
xchg
mov
sub
das
test
fadd
call
gs
lods
rol
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
pop
xchg
or
xor
adc
or
dec
ljmp
fdivl
out
outsl
pop
outsb
add
leave
neg
in
lea
adc
dec
add
pop
cmp
jmp
xchg
push
psllq
int
popa
cmp
cmp
ss
mov
jmp
mov
lret
je
cltd
outsl
inc
out
xor
push
adc
in
push
lock
cwtl
or
inc
test
iret
sar
mov
stc
je
lods
sbb
and
mov
stos
cmp
aaa
sbb
clc
rcrl
add
jno
imul
push
cltd
push
mov
jecxz
push
jmp
std
mov
sahf
mov
stos
cwtl
sub
test
clc
adc
and
or
sub
sbb
cmp
fidivrs
sub
inc
aam
push
xor
sbb
mov
pop
sbb
jecxz
fidivrl
mov
xchg
mov
cs
shl
jb
lock
jle
mov
std
dec
cli
jge
enter
test
insb
sbb
fcoms
mov
ret
out
shlb
les
jg
mov
lods
inc
add
clc
ror
push
inc
dec
test
frstor
adc
push
lods
int3
in
aas
cld
mov
adcb
iret
test
inc
divb
shlb
ds
arpl
fcmovnb
clc
loopne
mov
fiaddl
mov
mov
sub
enter
adc
fmul
sarl
int3
dec
jp
or
filds
pop
shrl
xchg
loopne
xor
fcoml
xor
cmpsl
aam
push
mov
mov
or
xor
faddl
stos
in
add
nop
cmp
mov
imul
daa
sahf
pop
dec
push
idivl
adc
test
out
push
jnp
and
das
dec
pop
enter
bound
mov
adc
xchg
cmp
cmp
je
pop
mov
jb
mov
push
shlb
xchg
mov
stc
cmp
in
dec
cwtl
sbb
sahf
push
lea
ljmp
repnz
xor
aam
pushf
push
mov
mov
jle
insl
int3
sbb
xor
sub
cmp
or
or
cmpsl
dec
xchg
push
iret
pop
cmp
in
or
xchg
cmp
inc
mov
nop
insb
mov
dec
sub
sbb
ret
jns
xchg
push
sub
mov
fwait
xchg
roll
fwait
insl
adc
shl
aad
mov
in
dec
popa
daa
arpl
push
aaa
inc
and
jge
jne
jecxz
in
add
xor
out
add
fnstcw
hlt
pop
add
stos
cs
xor
xchg
cwtl
or
mov
mov
xor
pop
data16
lods
pop
scas
adc
lahf
xchg
pushf
mov
lods
pop
add
cmp
mov
push
or
fsts
shlb
scas
sbb
pushf
and
ja
in
and
cmp
mov
mov
pop
gs
dec
cli
mov
je
inc
aam
rorl
adc
notl
out
lods
or
out
lds
int
xchg
ja
cmpsb
clc
test
ret
aad
fsubrl
and
pop
dec
adc
dec
xchg
stc
and
fistps
shr
push
mov
lcall
fisttps
add
icebp
sbb
or
stos
jge
xchg
mov
cmp
decl
aas
imul
pop
xchg
loope
inc
mov
xchg
sbb
jb
xor
ljmp
xchg
in
inc
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
ds
adc
adc
adc
push
ljmp
cmp
in
out
lods
add
rol
outsl
js
mov
ja
test
out
lret
xor
push
push
es
mov
orl
xchg
stc
js
test
adc
clc
cmp
lret
mov
loop
fmul
aaa
mov
push
mov
out
sub
fistl
imul
sarl
call
add
add
loopne
out
shrl
mov
mov
cmp
fisubrs
andb
iret
test
fisubrl
push
cmp
and
dec
mov
lcall
int
outsl
insl
ja
pop
aad
and
frstor
xor
mov
sub
dec
jle
mov
xchg
jae
clc
test
hlt
faddl
imul
cli
inc
cmp
shll
das
pop
ds
vphsubbw
xor
orl
jb
aam
jl
int3
jl
jecxz
cmpsl
adc
inc
addl
sub
loope
jmp
dec
loop
xchg
in
or
add
iret
ljmp
les
xor
cmp
xchg
adc
into
mov
xchg
loop
mov
or
cld
es
aas
xchg
mov
jmp
fwait
es
adc
mov
add
cmp
push
xor
outsb
xor
sub
inc
data16
mov
xor
dec
and
movsl
loope
mov
mov
push
cld
xchg
movsb
sub
push
lret
testl
pop
filds
insl
loop
les
arpl
jno
xor
dec
push
int3
test
and
loop
adc
dec
adc
mov
aas
add
jne
sbb
lahf
mov
je
cltd
mov
sub
popf
pop
inc
mov
lahf
repz
sbb
popf
push
dec
loopne
popa
sub
adc
lods
bound
fstpt
sbb
insb
popf
sbb
lods
fnstsw
xor
push
imul
lods
pop
shl
ret
push
gs
or
xor
or
xchg
pop
in
lods
inc
fistl
xor
inc
ret
clc
lret
icebp
inc
push
icebp
dec
ret
pop
test
nop
push
mov
scas
call
jnp
mov
push
mov
add
sbb
sub
inc
push
jo
inc
cmpsb
xor
push
sub
and
lock
jmp
jb
mov
mov
ret
pop
xchg
ror
or
dec
and
and
lret
lcall
loop
sbb
cmpsb
jne
adc
stos
xchg
testb
aad
jmp
cmp
jmp
add
mov
xor
push
mov
imul
jmp
out
jb
out
cmp
stc
fldt
adc
dec
data16
mov
fwait
mov
xor
fldcw
mov
mov
dec
leave
js
xlat
and
lret
iret
clc
push
idivl
pop
add
sbb
sti
inc
int
ret
mov
lret
daa
jg
iret
sbb
imul
push
popa
sub
xchg
and
pusha
or
xor
sbb
and
enter
cmp
cmp
divl
daa
imul
mov
arpl
rcrl
sbb
or
add
push
into
dec
ret
stc
cmp
add
sub
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
or
push
dec
adc
xor
adc
loop
jecxz
fs
cmp
xchg
or
xchg
hlt
ljmp
add
cltd
add
loop
jo
mov
sahf
sbbl
mov
cwtl
pusha
arpl
in
mov
stc
mov
or
fidivs
mov
test
add
mov
push
lea
mov
cmp
cmp
sbb
sbb
mov
insl
inc
or
mov
pop
fsubp
test
adc
and
int
out
imul
ss
loop
idivb
sbb
addr16
xchg
adc
scas
jo
sbb
pusha
mov
sub
cli
fs
loop
aad
jge
pop
adc
adc
cmc
and
adc
enter
pop
insl
in
lods
add
and
orb
iret
add
gs
out
jae
push
inc
mov
xchg
mov
loopne
je
fnstenv
dec
mov
int
cld
sti
stos
inc
pop
dec
inc
int3
mov
in
les
std
pop
enter
jns
and
inc
mov
or
jno
into
pop
xchg
cmovno
jle
xor
cmpsl
cs
loop
mov
sbbl
dec
xchg
and
inc
aad
xor
push
jnp
adc
cmp
loopne
shll
mov
sub
popf
divl
push
dec
int
and
mov
lds
aam
lods
mov
pop
aaa
insb
rcl
mov
jl
dec
jmp
gs
sub
inc
mov
int3
fs
out
xchg
fldcw
jp
sub
lret
nop
test
push
xchg
xor
mov
sbb
lock
and
push
pop
dec
xchg
xchg
jp
ror
decb
fbstp
sti
dec
dec
add
pop
inc
fs
inc
jbe
ljmp
ljmp
fcoml
push
add
pop
cs
sbb
cmp
ret
aas
mov
in
cmpsl
lret
pusha
push
and
insl
pop
cmp
ret
lahf
and
shlb
mov
shrb
out
add
jo
or
data16
xchg
fldl
shrb
sbb
dec
mov
aaa
dec
or
jns
adc
add
mov
rorb
inc
insb
out
punpckhwd
mov
push
mov
xor
mov
lret
mov
xchg
or
pop
sbb
repz
bound
push
clc
lock
gs
pop
pushf
dec
lods
dec
inc
icebp
pop
sub
test
xchg
movsb
inc
adc
imul
inc
sbb
mov
lods
mov
mov
divl
call
call
xor
dec
std
fstp
xor
inc
pop
push
and
decb
xchg
adc
dec
rorl
data16
push
subl
outsb
ret
xchg
jno
jno
xchg
mov
and
leave
clc
rorl
int
dec
dec
and
jae
inc
xor
es
inc
in
lret
xor
mov
or
push
popf
cli
int3
fisubrs
popa
adc
mov
or
dec
xchg
pop
divb
xchg
test
test
mov
push
fsubl
or
push
mov
test
imul
lds
imul
test
outsb
and
or
es
or
lea
xlat
lret
pushf
adc
stos
loop
gs
mov
movsb
pop
aaa
enter
or
add
loop,pt
rcrb
push
fnstsw
adc
xchg
mov
ret
inc
add
mov
ficoms
xorb
mov
mov
jne
or
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
loopne
add
lods
adc
push
rorb
int
or
outsb
xchg
ljmp
sbb
aad
mov
bndldx
push
add
insl
and
push
jge
dec
mov
shl
sbb
das
lock
rcrl
xor
jnp
inc
stc
js
mov
xor
jmp
cmp
xlat
lds
push
ja
push
sbb
daa
push
pop
adc
lret
pop
jle
pop
or
imul
jge
jno
lods
jnp
lock
out
ljmp
sub
xchg
fadd
mov
pop
add
mov
nop
mov
sub
jnp
shlb
adc
dec
lret
adc
xchg
add
or
sbb
incb
aas
pop
imul
aad
sti
lahf
insb
data16
mov
xor
xchg
sub
dec
pop
dec
imul
enter
xor
pop
into
out
les
mov
xchg
inc
inc
inc
call
lds
sbb
pop
sub
jnp
outsb
xchg
ss
push
xor
sbb
cmp
test
int3
ds
cmp
out
outsl
fsubrl
sub
aas
cmp
push
testl
jecxz
jno
pop
mov
popf
notl
gs
xchg
xchg
insb
int
gs
pop
outsb
outsb
dec
int
divl
mov
xor
pop
or
mov
lods
scas
inc
xchg
vmovdqu
fists
repz
or
jbe
gs
sahf
iret
mov
mov
add
fxch
mov
mov
mov
mov
sbb
roll
daa
in
cmp
sbb
mov
and
sbb
rolb
jge
les
cwtl
pop
mov
mov
xchg
push
hlt
les
out
or
cli
xchg
push
adc
lcall
push
sbbl
enter
fisttps
in
ds
push
fwait
mov
xor
insl
xchg
cmpsl
fcmove
jmp
xchg
popa
fldcw
in
mov
jae
enter
das
sbb
in
pop
cld
addr16
mov
test
pop
inc
xor
push
inc
stos
add
outsb
sub
push
cmp
data16
imul
sub
incl
mov
and
inc
shlb
add
in
mov
jae
es
adc
in
lods
adc
dec
jne
pop
dec
pop
inc
cmpsb
pop
aam
sbb
push
pushf
sbb
mov
push
jmp
pop
dec
call
insl
fs
cs
mov
fistl
jp
push
and
imul
mov
call
sub
mov
sub
jae
or
repnz
xchg
out
icebp
add
push
push
push
push
ds
push
sub
jns
xor
in
int
in
les
cmpb
dec
xchg
cltd
bound
ficomps
lods
cwtl
push
movsb
pop
aam
fisubrl
or
sub
fwait
arpl
loope
fsubr
insl
loop
dec
push
jle
cwtl
stos
jge
pop
insl
call
add
out
fidivrl
mov
add
xchg
jecxz
adc
out
rcll
push
push
push
add
pop
mov
mov
xchg
inc
stos
pop
cmp
mov
leave
add
push
jle
sbb
push
pop
push
jb
subl
scas
test
jbe
dec
out
cmp
pop
jl
rcr
adc
add
dec
and
fcmovnb
inc
inc
stc
addr16
movsb
cmp
pop
mov
mov
sbbl
add
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
jle,pn
cmp
adc
adc
adc
out
xchg
arpl
ret
xchg
push
mov
lahf
mov
dec
jp
jl
push
mov
jp
xchg
jmp
jae
cmp
loopne
mov
push
push
in
ret
push
cmp
mov
adc
pop
lret
out
push
dec
inc
cmc
sbb
call
xlat
aam
pop
jle
inc
push
shrb
les
hlt
cmc
rclb
mov
aad
mov
jp
sub
pop
popa
call
and
pop
cmpb
push
and
fs
rcrb
gs
jl
insl
loop
lret
mov
daa
aas
xor
shrb
jo
scas
in
clc
popf
xchg
xchg
push
sbb
dec
xorb
mov
adc
scas
and
pop
lods
jnp
adc
xlat
pushf
iret
loop
push
test
pop
cli
mov
sub
and
pop
dec
jnp
bound
loopne
sbb
xchg
cmp
outsl
movsb
das
pop
cli
xor
sbb
sbb
scas
test
pop
cmp
lea
or
mov
sub
adc
cltd
xchg
dec
jl
aad
pop
mov
imul
pop
sbb
sarb
jmp
xchg
mov
sub
jmp
ljmp
jno
mov
mov
add
les
movsl
or
test
scas
popf
ret
mov
xchg
sub
adc
cmc
or
mov
sub
xchg
sahf
addr16
xchg
cmp
daa
push
xchg
lock
enter
sbb
xor
int
dec
ljmp
cmp
or
xchg
mov
in
dec
mov
movb
dec
sbb
ja
lret
je
sub
and
xchg
mov
jb
pop
aad
and
push
mov
cmpsl
imul
sub
push
mov
sbb
imul
scas
lahf
popf
adc
in
and
cs
cwtl
aad
or
pop
xchg
outsl
mov
pop
insl
jne
push
rcrl
push
test
and
repnz
cwtl
scas
jbe
outsb
dec
js
leave
mov
cmp
out
mov
mov
mov
outsl
jnp
stc
or
bound
fwait
xchg
notb
rcrb
dec
jae
iret
test
je
lahf
mov
cmp
sbb
das
add
mov
call
add
xor
lods
jge
pushf
jns
movsl
sbb
inc
repz
sbb
and
inc
adc
or
sti
inc
repnz
xor
push
popa
jo
pop
inc
xorb
mov
pushf
xchg
jo
mov
test
jge
adc
popa
loope
xchg
inc
sub
cmp
mov
mov
test
daa
scas
cli
pushf
lock
das
fnsave
shll
add
or
sbb
add
cwtl
cmpl
adc
rclb
in
std
pop
or
lock
lcall
and
adc
test
jno
imul
xor
dec
jnp
in
pop
movsb
lahf
call
cmp
arpl
cld
aad
lea
cltd
mov
in
ret
jge
push
jge
cmp
jns
popa
cmp
xchg
push
mov
lahf
dec
mov
test
lods
mov
add
fmull
jle
adc
fstl
push
mov
push
add
mov
adc
mov
pop
clc
mov
mov
and
add
rorb
mov
es
sub
push
std
jl
lret
iret
loopne
mov
cltd
sbb
inc
push
push
mov
ds
iret
stos
xchg
out
fisttpll
push
mov
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
inc
or
imul
adc
xchg
mov
nop
subb
pop
fisttps
pop
jmp
xchg
fiadds
scas
imul
popf
loope
xorb
leave
inc
popf
stos
shrb
push
mov
sbb
mov
push
xchg
and
lret
and
or
repnz
ficoms
pusha
ja
idivb
mov
jb
insb
sbb
lret
cwtl
jno
xlat
cmp
aad
and
sub
inc
inc
icebp
jge
imul
jp
push
xlat
dec
nop
test
xor
mov
inc
lods
cmc
inc
or
clc
iret
lock
fwait
xor
push
or
lods
ja
mov
or
sti
push
cmc
mov
xor
movlps
mov
fiaddl
lds
add
jle
xchg
or
fwait
test
sub
adcl
scas
loope
mov
aam
movsl
mov
inc
jns
cmp
stos
out
scas
xlat
push
jl
aam
inc
lock
std
lret
ds
loop
add
or
fildl
mov
jae
cmc
mov
xchg
sbb
mov
push
jne
call
fwait
mov
mov
xchg
mov
and
mov
popf
and
pusha
mov
ljmp
mov
cmp
sti
aad
cltd
xchg
sub
mov
rcrl
imul
jnp
ds
mov
insl
fldt
cli
pop
add
mov
test
loop
mov
je
dec
or
insl
shrl
xchg
iret
pop
ret
int3
addb
jo
test
pop
rcr
mov
imul
movsl
push
push
loope
inc
rclb
dec
out
adc
les
adc
and
mov
xor
ds
pop
push
std
cmpsl
mov
jne
or
std
outsl
xor
ret
enter
or
nop
lea
fiaddl
sub
outsb
inc
out
cmp
inc
sub
adc
lock
mulb
push
and
shrl
out
pop
mov
in
in
pop
fucomp
ss
shrl
subl
int
push
and
imulb
xchg
xor
mov
test
lahf
outsl
sbbb
push
leave
fidivl
mov
aad
in
rorb
cmc
pop
mov
cmc
mov
into
pop
bound
jle
sbb
enter
and
enter
imull
pop
mov
iret
lods
mov
and
jo
or
mov
dec
add
push
and
cmpsl
jbe
add
popf
addr16
aas
decb
loope
pop
fistpll
in
jl
ret
inc
jb
pop
lcall
ss
sub
fnstcw
stos
xchg
push
and
or
pop
mov
repz
lcall
negb
out
dec
sub
testl
std
push
loope
xchg
shrl
mov
sub
das
jnp
inc
into
dec
popf
jne
push
ljmp
xor
pop
cli
jno
ljmp
push
cltd
lar
cmp
hlt
arpl
mov
bound
scas
jns
rcrb
test
or
add
jo
loopne
cmpb
sub
push
jno
imul
js
cli
sahf
out
mov
lcall
addl
xlat
stos
clc
xor
push
in
shrd
xor
jmp
mov
popa
lcall
push
push
sub
adc
adc
adc
xchg
loop
fstp
fldenv
mov
into
pop
fnsave
mov
popa
xor
and
inc
gs
mov
or
cmc
xor
out
jae
lret
js
test
sub
and
cmc
hlt
sar
arpl
adc
int
add
adc
loop
repnz
jmp
out
push
popa
mov
orb
jbe
xor
nop
adc
jl
dec
ja
flds
mov
shll
xchg
inc
sbb
sbb
test
add
pop
jmp
sub
or
xchg
jns
add
mov
bound
xchg
stos
xchg
jbe
lods
push
mov
pop
rolb
orl
xchg
xor
jmp
jbe
lcall
mov
js
and
sbb
int
stos
into
xchg
ja
mov
test
sbb
mov
push
gs
sarb
sub
stos
push
arpl
lcall
sub
pop
dec
inc
cmp
out
dec
pop
sub
mov
dec
nop
mov
dec
ficoml
mov
cmpsb
out
push
das
or
or
and
or
loopne
loop
mov
cmp
adc
cld
jae
sbb
jle
dec
pop
jae
aas
dec
xchg
jnp
or
mov
aaa
mov
cmpsl
int
mov
ret
orb
std
sbb
out
mov
sub
mov
adc
mov
mov
push
call
pop
scas
int
cwtl
lcall
loop
mov
popf
js
mov
sub
add
std
xchg
pop
sub
sbb
mov
shl
push
stos
int
dec
cld
loopne
inc
aas
sarl
js
dec
icebp
mov
aad
outsl
pusha
pop
add
into
cmp
and
add
and
dec
dec
pop
enter
push
mov
sub
adc
xchg
shlb
adc
inc
repz
decb
push
xchg
xor
aaa
aad
jo
inc
shll
adc
ror
stc
int
sti
inc
dec
jno
adc
jle
mov
sahf
pop
ljmp
adc
mov
loop
int3
cmp
cmp
test
call
mov
adc
cmp
pop
inc
cmp
sub
fcoml
daa
dec
int
push
or
jnp
mov
lcall
inc
in
pusha
sub
nop
insl
mov
pop
jbe
jo
nop
cmpsl
mov
fucom
iret
movsb
in
add
xor
in
xchg
insl
pop
test
adc
mov
ds
pop
pop
sub
lahf
add
jmp
leave
rclb
pop
mov
ljmp
daa
dec
and
popf
mov
jp
add
mov
lock
in
mov
xchg
mov
add
in
daa
lods
xchg
and
sub
cmp
out
into
pop
mov
push
fmul
push
mov
dec
je
sbb
out
lods
mov
pop
outsl
mov
add
dec
jp
les
scas
mov
push
xchg
sub
cltd
xchg
mov
jmp
adc
jns
jl
shrb
ficoms
add
lret
jmp
xchg
arpl
pop
sub
pop
jle
dec
outsb
inc
sahf
cmp
fs
xchg
popf
jecxz
cmp
test
je
xorl
test
pushf
imul
inc
push
ljmp
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
fsubrs
fmull
adc
test
cmpsb
mov
cltd
mov
mov
in
arpl
fildll
push
fildl
sarl
repnz
mov
mov
addr16
cs
mov
push
jae
movsb
leave
mov
cltd
sysret
lahf
aaa
enter
mov
cmpsb
jae
jl
in
pop
push
aad
inc
xor
ret
sbb
pop
cltd
add
rcl
fcompl
jge
pop
mov
push
push
dec
cli
mov
int
cmc
sbb
cmp
dec
fcompl
mov
sbb
xchg
syscall
mov
sbb
mov
sbb
inc
sbb
sbb
cmp
jp
mov
fstpl
xor
mov
cmp
call
push
mov
cmp
jbe
mov
jl
testb
xlat
sub
jp
mov
mov
addr16
pop
jl
pop
jo
das
fisttpll
mov
test
pusha
cli
scas
outsb
in
add
das
sbbb
lahf
fcompl
stos
fwait
dec
sub
into
jl
lods
jp
loop
and
leave
push
subl
xchg
pushf
cmc
out
sahf
testb
cmpsl
ja
mov
pop
mov
in
adc
jmp
call
pop
pop
in
dec
xlat
sahf
xor
fwait
hlt
push
sbb
adc
mov
pusha
jnp
dec
dec
test
push
ds
ret
cmp
or
rorl
pop
mov
les
shl
adc
mov
decl
jmp
lret
dec
jae
out
rolb
and
int3
fdivp
into
fwait
cwtl
movsb
insl
cmpsb
lahf
icebp
insl
testb
jl
xlat
sbb
bound
int
out
ss
adc
dec
pop
adc
ret
nop
cmp
cmpsb
push
scas
out
mov
dec
cmp
into
imul
push
sbb
xchg
popf
xlat
aas
mov
in
cmp
nop
notb
or
lcall
int
in
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
push
pop
ljmp
movlps
fidivrl
test
dec
cld
mull
cli
mov
js
dec
stos
movsl
pop
sub
push
mov
cmpsb
fwait
jo
lret
pop
jmp
out
dec
ja
roll
lock
pop
or
push
fsub
in
test
je
sub
xchg
fnsave
mov
or
gs
cs
pop
ret
cmp
jbe
mov
or
rcrl
push
jbe
aad
xchg
jecxz
fwait
add
or
add
cltd
xor
adc
mov
dec
inc
movsb
mov
cmp
mov
loope
fisubs
aam
cmp
xchg
pop
xorb
mov
int3
and
cmpsl
add
push
jmp
cltd
sub
int3
in
cld
js
mov
jle
dec
add
mov
mov
push
jo
dec
cld
add
xchg
frstor
sbb
or
addb
lret
adc
inc
sarb
push
push
cmpb
aaa
push
out
jno
sbb
and
xchg
mov
mov
shrb
mov
repz
sbbl
sahf
jae
xchg
bound
sub
pop
and
mov
pop
addr16
push
push
in
add
inc
sbb
jae
and
cmp
pop
imul
mov
in
aam
lods
std
ss
cmpsl
or
push
jb
rcll
fistpll
add
loopne
fwait
scas
lret
push
stc
inc
clc
xchg
mov
and
imul
push
xor
nop
pop
lock
mov
dec
dec
add
ja
dec
jmp
and
mov
adc
add
and
mov
adc
mov
pushf
cli
and
pop
call
arpl
in
data16
add
les
inc
mov
inc
push
shrl
inc
push
cmpsb
inc
mov
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
sarb
movlps
adc
call
push
popa
jmp
icebp
in
mov
push
fsubrs
and
std
fcoms
pop
jmp
jmp
cmc
repnz
pop
mov
enter
add
inc
mov
sbb
addr16
add
adc
and
mov
push
jmp
cmp
dec
fisttps
mov
rorl
rorb
shrl
add
sbb
mov
jg
pop
xadd
outsl
pop
test
fs
pop
xchg
imul
dec
ss
push
pop
loope
xchg
mov
jae
sbb
dec
mov
sbb
imul
clc
stos
out
cmp
ret
push
sbbl
mov
les
cmpsl
dec
xchg
shlb
pop
xchg
sub
adc
mov
xor
sub
mov
orl
cmp
inc
pop
js
mov
xchg
mov
shll
stc
mov
adc
sbb
lahf
shll
loope
xchg
js
adc
mov
mov
out
jb
mov
xchg
sbb
xchg
xchg
or
pcmpeqb
ds
cmp
cltd
repnz
or
adc
xchg
xchg
test
mov
dec
shl
int3
inc
test
cmc
adc
and
fstp
cmp
push
dec
or
add
ret
mov
jb
mov
loope,pt
test
cmp
jl
jmp
les
clc
and
sub
dec
sub
pushf
ret
popa
adc
pusha
xchg
sahf
daa
inc
add
out
fisubl
cmpb
dec
dec
addr16
xchg
xchg
inc
stos
push
fimull
nop
xor
push
jo
and
sbb
dec
mov
bound
ds
xor
jg
movsb
call
pop
sbb
sub
fnstcw
add
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
or
mov
fmull
adc
outsl
or
loop
addl
xorb
in
push
hlt
adc
std
pop
int
lods
int
jnp
test
mov
xchg
sub
jne
aad
dec
and
bound
nopl
adc
pop
int3
pop
or
xor
pop
fisubrs
scas
lea
fsubr
adc
cmp
jmp
es
mov
mov
out
pop
clc
mov
and
sub
push
jno
mov
rorl
imul
aas
test
xor
push
xor
hlt
jle
push
inc
and
inc
out
xor
jbe
subb
sahf
cmp
mov
sub
xor
adc
ja
outsl
filds
imul
in
jnp
push
pop
xchg
fucomip
loope
xor
sarl
jns
icebp
les
push
gs
ret
pop
pop
add
add
nop
jmp
lods
hlt
mov
adc
jle
jp
mov
inc
push
ret
and
xor
mov
xchg
jno
sbb
mov
sti
sub
pop
adc
mulb
or
test
pop
enter
scas
out
ss
iret
inc
lcall
adc
into
inc
pusha
arpl
leave
scas
addr16
in
push
addr16
lods
outsb
sub
movsl
sar
ss
xchg
push
leave
inc
xchg
aad
mov
lret
scas
cwtl
pop
cmpsb
imul
leave
sbb
adc
rcl
lcall
mov
sbb
and
lods
jno
imul
mov
popf
xor
add
movsl
ljmp
pop
sbb
mov
fsubs
cld
lret
push
xor
xor
sub
je
arpl
xor
jl
xchg
jbe
push
mov
fstl
push
stc
movsb
imulb
xchg
jle
push
push
jae
into
fstl
pop
lret
xchg
push
arpl
and
push
add
fnstsw
pop
add
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
xor
in
adc
adc
movlps
xorl
dec
sub
sti
cmpsl
mov
shll
jne
mov
mov
popf
or
mov
imul
push
lret
xchg
adc
shr
aam
mov
test
add
fimull
push
dec
jns
inc
fnstenv
inc
mov
pop
mov
std
push
xchg
inc
out
out
sbbl
call
fcoml
jne
popa
adc
testl
sub
jle
cwtl
imul
pop
jl
test
add
sub
xor
jg
aaa
pop
push
lret
mov
stc
cmp
add
sbb
cld
dec
cmp
stos
push
fldt
shrb
mov
mov
cltd
jmp
jb
into
mov
movsl
cmp
xorb
daa
cmpsl
or
jecxz
subb
decl
aaa
xorb
pop
xor
sub
lcall
xchg
add
pop
sbb
scas
push
cmc
mov
jnp
push
push
sub
push
xor
dec
jb
hlt
jmp
fdivrp
add
andb
mov
pop
cmpsb
inc
lods
movsl
push
bound
stos
dec
pop
inc
cmp
sti
dec
aaa
lret
jecxz
dec
inc
aaa
mov
xor
xor
sub
notb
xor
pop
pop
push
stos
add
fwait
push
in
adc
push
push
jp
inc
or
and
cmp
dec
loopne
aam
xor
lcall
into
adc
popf
xlat
push
dec
push
jb
dec
mov
add
pop
mov
mov
jmp
inc
sbb
adc
divl
scas
in
int
inc
repz
or
add
xchg
cmp
jle
push
cltd
test
jp
xchg
cmp
push
adc
addr16
lahf
pushf
or
xchg
inc
jo
pop
fdivr
fsub
push
or
add
flds
add
int
and
jmp
es
pop
popl
pushf
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
lret
xor
cmpb
add
nop
repz
cmpsb
xor
dec
add
shl
lcall
or
add
push
call
fisubrl
mov
jg
ja
aam
dec
xchg
stos
jp
pop
xchg
inc
js
add
push
insl
cmp
jnp
imul
xchg
adc
popa
insb
xchg
adc
fimuls
adc
loop
mov
mov
fcmovu
adc
outsl
add
std
ljmp
adc
or
jae
sahf
push
sub
mov
inc
push
push
loope
sub
das
jmp
cmp
iret
aaa
and
ja
sbb
xor
push
cmp
inc
xchg
cli
insb
or
movsl
xchg
sahf
out
dec
sarb
push
scas
hlt
loop
imul
out
cmp
pushf
nop
or
out
clc
frstor
dec
add
sub
ret
sub
push
std
in
sbb
addr16
fcomp
xor
push
inc
out
mov
leave
sbb
cwtl
cmp
xchg
fstl
or
add
xchg
pop
inc
mov
arpl
jecxz
push
jge
mov
daa
gs
and
sub
addr16
lock
jno
cli
in
fs
xor
mov
and
pop
and
stos
orl
repz
std
loopne
lods
cld
push
setae
push
sti
jge
test
divb
loopne
jnp
add
mov
and
ret
loop
jmp
push
arpl
cld
mov
jmp
sti
jl
push
bound
enter
aaa
lock
lds
xor
std
xlat
pop
inc
sbb
sbbl
xor
lods
cmp
iret
fidivl
push
push
and
xchg
jmp
inc
mov
mul
inc
movb
repnz
incl
ret
cwtl
out
jbe
dec
out
dec
add
testb
out
mov
loop
or
jne
arpl
pushf
push
out
cmp
lahf
enter
je
je
das
lret
filds
lcall
ljmp
mov
shl
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
lcall
fmull
adc
call
jae
pop
fmul
enter
pcmpeqw
inc
divb
idiv
in
mov
inc
daa
data16
jl
and
inc
mov
add
in
daa
sbb
mov
arpl
stos
in
cli
repnz
adc
fcmovnbe
and
fs
xchg
inc
ret
mov
mov
ret
cmpsl
lret
push
adc
or
repz
negb
mov
bound
sub
test
jne
push
es
shll
ret
orb
xchg
add
sbb
mov
sbb
fwait
loope
push
pop
popa
xchg
sbb
or
jg
mov
mov
or
test
ljmp
test
outsb
jbe
sbb
shrb
outsb
outsl
lahf
jp
cltd
aad
inc
lods
loope
gs
add
sub
scas
fisubrl
jl
test
xchg
test
xorl
cwtl
xchg
mov
inc
mov
leave
or
test
loop
cli
add
pop
aam
es
mov
push
sbb
es
movsl
leave
adc
dec
ret
xchg
imul
cli
or
lea
cwtl
or
loope
dec
ss
into
push
jbe
dec
mov
mov
addr16
fmuls
pop
pop
xchg
movl
push
addr16
sub
loope
inc
mov
mov
aam
cmp
cmpsl
test
mov
fildl
mov
dec
pop
sbb
hlt
jns
push
fld
mov
push
call
popl
mov
and
mov
inc
lea
and
sub
enter
ljmp
or
cmp
push
and
xor
xor
push
or
mov
sub
push
pop
push
cltd
push
frstor
cld
jo
add
and
add
cmpsb
xor
fdivrs
testl
cmp
mov
push
cmp
xchg
filds
lods
and
sahf
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
shlb
xchg
outsl
outsl
aas
push
test
pop
dec
add
shlb
dec
sub
cmpsb
sub
adc
test
cld
dec
in
sarl
ficomps
gs
icebp
leave
aaa
sbb
mov
add
mov
ds
adc
sub
imul
dec
dec
lea
mov
jl
aas
aaa
mov
xchg
sub
divb
inc
inc
or
or
push
pop
pusha
push
adc
test
test
add
xorb
negl
pop
repz
cmp
mov
push
push
and
out
fwait
insl
adc
ljmp
sbb
mov
cmp
push
add
mov
push
repz
rcrb
dec
and
pusha
and
fbstp
dec
mov
xor
adc
cmp
test
js
or
add
popf
aad
or
shr
cmp
negl
push
loopne
out
mov
hlt
or
push
lcall
sbb
pop
or
sti
rcll
push
add
sub
sub
ss
pop
scas
push
cmpsb
int3
sbbb
cmpsl
push
lds
ret
inc
nop
mov
push
aam
push
push
xchg
movsb
dec
rolb
repnz
cmp
jmp
jge
adc
and
sahf
out
mov
xor
je
adc
bound
mov
inc
add
out
pop
fnstenv
imul
sub
add
shlb
and
dec
imul
sbb
stc
repz
mov
lods
ret
bound
adc
cmpsb
int3
mov
sub
fmull
jae
jnp
sub
sub
das
enter
out
movsb
pop
jl
es
adc
imul
test
mov
loopne
mov
jo
leave
mov
add
mov
sub
subl
hlt
push
cmp
push
mov
out
repz
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
lcall
mov
dec
sti
fidivrs
and
adc
outsl
pusha
jne
imul
sbb
mov
outsb
ss
cwtl
lods
cmc
loop
mov
sub
cmc
sub
jecxz
cld
cltd
mov
cmp
mov
popa
inc
or
mov
test
xchg
adc
pop
adc
aad
xchg
bound
mov
or
mov
mov
nop
mov
adc
mov
lds
movsb
push
imul
bound
js
outsb
push
es
push
daa
or
out
repnz
or
lcall
faddp
loope
nop
fs
hlt
jno
inc
in
dec
mov
incb
pusha
call
movsb
cltd
and
repz
dec
test
xor
sbb
das
sbb
push
xor
push
fldenv
aas
sub
imulb
hlt
test
shrb
mov
push
outsl
cmp
cmpsb
lds
jg
shlb
mov
mov
inc
inc
pop
xor
xchg
enter
enter
and
scas
stos
xchg
je
mov
and
jle
lahf
in
adc
out
mov
repnz
mov
je
or
jmp
sbb
add
shrl
stc
int
popf
jb
adc
fwait
mov
ret
es
pusha
js
and
jl
lahf
cmpsl
sti
in
push
shrb
cmp
dec
repnz
mov
mov
lahf
ret
mov
or
mov
mov
add
pop
aam
xchg
dec
adc
dec
aas
sub
push
gs
lods
popa
or
cmpsl
lret
add
stos
int
aam
mov
or
push
lods
and
push
fwait
movsl
inc
mov
stc
pop
out
test
pop
jle
pop
je
out
mov
xor
mov
movsl
and
std
fs
std
addr16
test
into
sahf
mov
push
rcrl
jb
test
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
fisubrs
mov
fmull
adc
aas
jg
call
js
test
call
or
pop
insb
inc
cmp
jecxz
pop
lret
repz
ljmp
mov
out
mov
inc
jns
cmpsl
push
fimuls
mov
das
shr
inc
dec
cltd
aam
xlat
dec
lret
popa
dec
mov
arpl
inc
lret
add
int
xor
or
out
jmp
or
pop
push
pop
jno
lods
outsl
mov
inc
mov
mov
fildll
dec
push
in
cmc
outsl
out
mov
leave
frstor
sub
imul
dec
scas
push
fisubrl
pop
lds
rclb
nop
movsl
jne
dec
push
jbe
fmul
and
cmp
xchg
andb
and
outsb
in
jns
rclb
adc
push
mov
lcall
sahf
ss
fs
pop
jb
mov
mov
lcall
add
mov
mov
scas
and
hlt
jmp
lret
cmpb
movsb
add
nop
jno
test
jp
or
jecxz
inc
shll
je
sbb
leave
or
adcl
xchg
clc
xchg
mov
sbb
notl
sahf
push
jne
lret
gs
jbe
sbb
add
in
orb
setne
add
fisttps
mov
jge
mov
adc
xchg
fdivrl
mov
lods
add
lock
sbb
call
sbb
xor
fistl
int
fdivs
push
xlat
sbb
mov
jle
loopne
xchg
dec
test
clc
pop
jno
fsts
and
jmp
jne
loop
mov
sti
adc
cmpsl
mov
adc
jno
jno
mov
mov
cli
inc
pop
aas
add
xor
xor
int
aam
fdivl
xchg
pop
sbb
fdivrl
dec
sbb
inc
lcall
inc
in
shll
push
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
xchg
hlt
push
push
cli
adc
fmull
adc
loope
and
lods
jl
jmp
mov
js
lods
xchg
push
int
sbb
andb
mov
mov
or
pop
notl
cmp
add
inc
leave
sbb
push
dec
lcall
inc
sbb
lds
cmp
lea
lahf
leave
add
ljmp
stc
jp
mov
cmp
or
inc
lret
popa
xchg
test
ret
mov
in
iret
scas
insl
push
cmp
sbbl
inc
inc
ljmp
pop
inc
mov
mov
imul
push
cmc
mov
cmc
out
xchg
iret
decl
loop
or
out
push
es
sbb
sbb
mov
dec
ret
sbb
mov
mov
scas
jmp
dec
loope
inc
dec
daa
and
dec
mov
xor
fsubrl
ja
leave
mov
rcrb
mov
xor
sbb
mov
push
jne
cmc
cs
fcomip
cwtl
mov
jle
mov
inc
test
jge
daa
cmp
loope
push
pop
das
mov
push
ja
cmc
and
sti
push
dec
or
add
mov
aam
mov
cld
aas
test
popf
mov
pop
mov
and
xchg
stos
idiv
int3
jne
mov
loopne
data16
add
jge
mov
mov
scas
adc
adc
jb
test
lea
push
xor
daa
shll
out
fildll
repz
pop
movsb
pop
add
in
out
and
cwtl
sub
push
mov
pop
in
fistpl
pop
sbb
pop
insl
bound
ljmp
out
out
dec
inc
sub
lret
cmpsb
xlat
lods
ss
incl
xchg
outsl
pop
xchg
jmp
mov
lret
test
in
adc
jge
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
dec
inc
xor
fmull
adc
rsm
mov
or
pop
das
aam
push
xchg
jge
out
pop
xlat
xor
inc
mov
mov
adc
in
lcall
cmp
imul
xchg
pop
pop
orl
and
mov
lahf
add
iret
mov
mov
cmp
mov
enter
xor
add
xchg
imull
mov
mov
pop
fldl
pop
or
repnz
shll
stc
rcl
pusha
pop
test
icebp
cmp
shl
lock
add
dec
lea
or
in
inc
or
sbb
mov
adc
jecxz
sahf
sub
push
add
mov
mov
pop
lret
xor
in
mov
test
iret
movsb
cmp
and
jg
decl
pop
or
repz
push
gs
scas
negl
push
popa
push
sar
xchg
mov
pushw
stos
jg
jp
push
xor
inc
rcrb
and
jno
outsl
fldenv
add
fst
push
inc
push
in
sbb
xchg
sahf
sti
cwtl
fiadds
sbb
dec
mov
and
jp
push
insl
cli
inc
pop
std
xor
xchg
xchg
outsb
jo
adc
lock
pop
adc
outsb
and
pop
enter
mov
dec
outsb
cmp
push
ds
lret
xchg
test
push
lcall
jle
test
andb
out
cmp
sbb
sbb
pop
call
and
stc
and
sub
inc
test
scas
fstpt
cmc
jae
imul
push
mov
add
push
sbb
adcl
jg
cmp
fbstp
iret
push
cmc
movsl
xor
or
rcrb
cli
call
fisubl
les
faddl
inc
clc
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
mov
jmp
inc
push
xchg
loopne
ja
flds
in
xchg
out
lea
jp
mov
cmp
xchg
or
std
sub
out
cmc
add
pop
in
push
ljmp
jnp
xor
pop
aad
pop
aam
mov
iret
das
dec
and
pop
mov
lcall
cmpsl
pop
cmp
stc
inc
dec
lods
aas
xor
insb
add
in
cmpl
inc
sbb
nop
fiadds
mov
outsb
imul
bound
mov
pop
inc
sbb
insb
xor
lahf
adc
shll
icebp
sub
adc
daa
xchg
mov
adcl
jmp
icebp
jg
call
cmp
imul
leave
or
xchg
cmc
mov
cmp
int3
cmpsl
leave
shll
repz
pusha
clc
push
pop
dec
sar
lods
enter
jmp
pop
sti
inc
mov
sub
push
dec
push
push
dec
add
fmull
inc
repz
xor
fmuls
out
mov
aaa
sbb
cmpsl
inc
xchg
shrl
push
jle
xor
cmp
and
xor
dec
lahf
xchg
mov
shr
jle
jmp
pushf
cwtl
movsl
and
bound
and
pop
mov
lods
mov
mov
aam
out
inc
outsb
and
pop
add
inc
sahf
andl
cs
xchg
test
push
push
out
sub
je
jne
inc
int
outsl
outsb
test
mov
cmp
rcr
mov
or
cmp
inc
pop
mov
testb
imul
outsb
js
in
or
out
xchg
sbb
inc
test
mov
sub
scas
cltd
loop
inc
or
fists
mov
mov
fs
xchg
mov
jo
xor
xchg
pop
outsl
enter
add
push
fisttpl
popw
subl
cmp
rolb
xchg
scas
popf
in
sub
clc
inc
mov
iret
jno
ss
sub
mov
xchg
mov
gs
push
in
lcall
ja
aad
add
xor
shll
inc
sub
sahf
js
adc
xchg
cmp
mov
cmp
jg
and
push
nop
fneni(8087
adc
adc
frstor
xor
int3
mov
xchg
inc
mov
cli
mov
hlt
lret
or
cmp
scas
jp
jmp
jl
jmp
movsl
cltd
scas
add
jne
js
sbb
mov
adc
std
cmpsl
shll
int
xchg
jecxz
mov
cmovae
push
es
in
mov
pop
mov
popa
sarb
stc
mov
je
insl
imul
xchg
cmp
jnp
xor
mov
psrld
push
repnz
jns
je
pop
lcall
stc
sub
sbbb
dec
and
mov
fmul
icebp
data16
dec
dec
mov
inc
or
pop
icebp
ja,pn
inc
je
into
xor
push
ficoml
or
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
lods
lods
insb
mov
adc
jo
adc
test
sbb
xchg
repz
sub
cmp
das
and
rcrl
dec
iret
ss
gs
dec
mov
movsl
dec
pop
dec
add
jne
ss
mov
dec
sub
cltd
sub
ds
rcll
or
push
pop
lahf
xchg
insb
push
jmp
dec
cmp
inc
cmp
fnclex
pushf
fisubrl
mov
xlat
xor
and
sub
fiadds
xlat
xor
iret
xchg
fimuls
fwait
push
test
mov
int3
in
cmp
push
test
mov
dec
push
mov
popf
rorb
inc
fcmovne
pop
add
cmp
xchg
mov
pop
pusha
mov
jne
jae
mov
stos
pop
cmc
mov
jb
xor
lods
inc
scas
push
sbb
push
and
push
inc
adc
fwait
jmp
pop
cmp
mov
mov
inc
jl
jle
rcrl
or
aaa
pop
pusha
cwtl
xchg
xor
ficoml
or
jg
mov
pop
mov
les
add
cmp
xchg
pop
dec
jge
sub
cli
dec
sti
xor
mov
and
gs
pop
xchg
notl
rcrl
lret
bound
add
pop
sbb
fadds
or
cmp
push
fdivp
sbb
inc
pop
add
mov
pop
ret
dec
push
dec
mov
xchg
adc
mov
mov
mov
or
adc
pop
into
pop
or
sub
sub
xchg
rcrl
imul
cltd
push
pop
add
sbb
xchg
inc
out
xor
pop
inc
insl
aaa
sub
cmp
xchg
icebp
movsb
push
jg
and
mov
addr16
push
sub
bound
fists
inc
xor
xchg
or
inc
data16
mov
or
mov
mov
jge
xor
and
in
inc
cmp
push
icebp
lret
or
decl
into
loope
clc
xchg
inc
dec
bound
push
mov
clc
add
movsl
mov
ret
cmpl
inc
push
addr16
dec
and
jns
popa
push
popf
mov
and
cmp
xor
test
leave
es
sub
stos
out
pop
dec
mov
in
mov
cmp
cmp
pop
or
add
mov
js
insb
out
aas
push
sbbl
subl
mulps
sahf
adc
sbb
ljmp
push
xchg
sbb
push
add
inc
fwait
loopne
lods
cmp
push
gs
mov
push
xchg
fildl
inc
push
push
inc
push
or
sbb
imul
push
dec
fnstsw
mov
es
andl
cmp
loope
push
jge
dec
test
cmp
mov
in
jp
imul
xor
jp
push
jecxz
pop
add
cmp
jmp
xchg
cwtl
and
jp
lods
and
sahf
lret
mov
mov
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
adc
adc
adc
adc
sbb
mov
mov
in
js
mov
out
sbb
addr16
sub
add
cmp
leave
dec
imul
sbb
mov
in
mov
push
sub
and
jb
xor
divl
lahf
or
cmpsb
jne
shlb
jp
dec
pop
dec
test
dec
pop
fistpl
rcrb
out
aad
xchg
jae
dec
insl
punpckldq
sbb
mov
loop
jne
lcall
fdivrs
popa
xor
das
stos
je
inc
mov
jecxz
popf
jg
inc
test
ret
mov
andl
daa
subb
mov
pop
mov
call
cwtl
in
lods
add
je
js
stos
sbb
data16
sbb
xor
scas
cmp
sbb
ret
xlat
jp
arpl
ss
je
push
sbb
idivb
fildl
scas
mov
xorb
mov
mov
int3
cs
movsl
dec
ret
inc
lret
inc
js
sarb
xcrypt-cfb
or
out
sub
and
sbb
push
out
mov
loope
es
cld
iret
movsl
and
sub
cs
ret
pop
jmp
stos
mov
repz
xchg
and
and
int
cmpl
xchg
jp
lret
dec
rep
add
xchg
jmp
xor
cmp
or
arpl
push
or
inc
push
push
in
aaa
into
pop
or
aam
mov
dec
ret
jle
jb
sbb
sub
inc
movsl
push
roll
idivb
sub
das
stos
test
movsb
loopne
call
push
fstl
sar
lret
icebp
pop
adc
inc
jg
xor
jnp
loopne
xor
cld
adc
jne
cmp
insl
clc
fistps
scas
and
lahf
cmc
stc
addr16
in
pop
push
popa
add
add
scas
cmpsb
or
pop
int
and
mov
adc
dec
and
test
lret
sti
loope
imul
mov
data16
dec
mov
cmc
js
jg
repnz
pushf
mov
sub
adc
xor
test
iret
mov
xchg
mov
cmp
lock
pop
lods
push
sarl
xor
in
jle
roll
notrack
sbb
les
test
arpl
je
fidivrs
test
pop
adc
or
sub
xor
xchg
loopne
rcll
mov
out
cli
inc
rcl
inc
imul
pop
jb
cmc
test
and
outsb
adcl
mov
out
lretw
mov
pop
cmp
add
ret
mov
cmpsb
rcll
mov
ret
in
test
mov
mov
dec
push
sbb
imul
inc
adc
popa
sub
aad
mov
lods
not
inc
jmp
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
sbb
stos
inc
fstl
adc
adc
rorb
sbb
cmp
or
lcall
mov
dec
subb
mov
mov
pop
pop
fistpll
gs
and
rolb
jle
cmp
loopne
das
push
les
in
rcrb
xchg
and
sbb
andl
hlt
aam
or
mov
rorb
pop
adc
and
push
sub
sahf
add
mov
xchg
call
call
mov
cld
bound
sbb
and
pop
insl
push
mov
jbe
subl
mov
in
dec
nop
mov
mov
push
fwait
push
or
pop
int
imul
pandn
xor
andb
sbbb
xor
lcall
repz
jecxz
movsl
adc
dec
mov
pop
lea
jl
pop
pop
mov
jb
inc
scas
sbb
mov
sbb
xor
pop
movsl
imul
ret
das
sub
push
mov
add
pushf
jecxz,pn
daa
test
mov
sbb
add
shll
ljmp
je
inc
jle
ficomps
jmp
scas
mov
cmp
in
push
and
sub
dec
fsubl
and
movsb
jg
xchg
incb
push
push
bound
sti
outsl
pop
xchg
mov
or
and
cli
xor
or
jb
mov
aam
xor
xlat
jmp
sbb
cmc
mov
out
jne
and
mov
sbb
xor
xchg
stos
inc
in
sbb
incb
pushf
mov
dec
in
test
add
add
pop
loope
xchg
stos
cmovle
mov
push
cmpl
loopne
push
pop
sbb
cs
test
xchg
test
add
and
xor
inc
mov
xchg
jne
xchg
lret
sub
das
ljmp
repnz
mov
mov
adc
loop
xor
sbb
xor
sbb
inc
int3
jge
ja
test
or
mov
cmc
inc
pop
into
aaa
lds
push
adc
adc
push
je
push
sub
mov
arpl
add
in
in
or
movsb
add
cmpsl
sti
xor
pusha
in
cmp
or
add
xchg
mov
aad
mov
int3
jmp
roll
xchg
cmp
shl
test
lods
sub
jl
pop
xchg
stos
and
or
jecxz
aas
mov
sbb
xor
mov
mov
cmp
lods
and
jg
ljmp
or
cli
push
xor
sarb
push
fistpl
xlat
inc
and
sti
mov
mov
inc
ds
cs
lock
mov
movsb
jl
int
xlat
sbb
fwait
shlb
xor
dec
data16
cld
adc
xchg
push
xchg
xchg
jnp
pop
jecxz
pop
sub
cmp
add
inc
xor
sbb
fldl
inc
in
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
and
lods
sahf
aad
adc
adc
xor
mov
leave
jae
adc
call
fidivrl
push
push
or
mov
sub
mov
lock
mov
sbb
cmp
sub
mov
frstor
dec
fsubl
mov
mov
test
out
faddl
add
dec
enter
dec
dec
sahf
push
jl
sbb
add
xchg
mov
ret
mov
call
add
pusha
xchg
inc
loope
popa
lret
push
mov
divb
ss
cmpsl
ja,pn
or
xchg
push
sbb
mov
mov
and
mov
lldt
mov
shll
mov
push
dec
cmpsl
dec
mov
in
lds
and
mov
test
inc
test
sub
xchg
pop
jns
ja
dec
or
in
lcall
xchg
sbb
fs
repz
xchg
int
pop
ret
cli
mov
ret
lock
add
sub
ds
pop
ljmp
cmp
or
dec
sbb
xor
aaa
rorl
daa
dec
hlt
test
push
out
and
scas
or
repz
adc
adc
mov
fdivrs
rorl
pop
inc
inc
lea
shr
jnp
into
nop
cmp
enter
enter
jb
loopne
pop
int
ja
scas
data16
cmpsb
mov
fists
fisttps
enter
subl
fnsave
jp
outsb
cmc
or
xchg
or
sarl
add
mov
jne
out
in
decl
pop
mov
adc
sub
or
cmp
and
jns
jl
add
popf
mov
lods
lock
test
cmpsb
mov
add
cld
movsl
push
or
dec
int3
je
mov
iret
jecxz
xchg
xor
push
lods
xchg
mov
add
std
orb
ss
push
mov
jl
lock
xor
test
sub
inc
mov
ds
arpl
pop
stos
loop
xor
jp
pop
imul
mov
es
outsl
mov
scas
add
mov
icebp
lret
lret
and
bound
dec
insb
aad
sbb
fsubrs
push
push
fs
mov
inc
push
incb
and
dec
int3
jle
cmp
push
cmp
pop
add
ljmp
mov
or
mov
les
bound
push
into
xor
popf
inc
sub
dec
xorl
mov
movl
bound
inc
adc
cs
ljmp
push
or
mov
notl
cmc
dec
mov
adc
mov
scas
jb
mov
mov
cmp
aad
je
sbb
jp
cmpsl
data16
inc
push
push
inc
cmp
nop
les
xchg
lret
ljmp
cmc
adc
pop
or
push
das
insb
pop
mov
dec
mov
cmp
stc
xor
sub
add
and
add
dec
loopne
aad
and
jne
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
push
lret
adc
jo
adc
xchg
outsb
sbb
mov
mov
pushf
sub
jle
lcall
sub
movsl
cld
sub
pop
out
sbbb
mov
movhps
xor
cmc
fnstsw
inc
or
inc
outsb
jo
sbb
das
movl
mov
imul
xchg
pop
subl
dec
inc
scas
rorl
fsubr
js
andl
sti
ret
cmp
test
call
iret
jbe
cli
es
imul
sub
adc
fdiv
into
adc
xchg
and
sub
cs
inc
imul
sub
mov
in
and
mov
add
mov
cmp
pop
push
xor
jg
fbld
ljmp
loopne
out
shlb
sub
dec
testl
in
mov
cli
ficoms
in
mov
add
push
add
sbb
out
inc
push
push
imul
inc
lret
stc
xlat
insl
push
popa
loope
and
mov
dec
lea
pop
push
imul
mov
adc
and
insb
lods
insb
jb
or
popf
jb
leave
jl
test
inc
mov
ret
sahf
aam
pop
adc
xor
push
sub
cmp
add
cmp
jmp
or
scas
jmp
mov
mov
and
xchg
imul
xor
fidivs
cld
popf
and
mov
push
stos
adc
dec
push
jp
pushf
hlt
rcrl
fisubrl
mov
push
lds
mov
adc
cmpsl
fwait
cltd
lods
in
add
or
in
mov
cli
jmp
int3
rorb
xlat
and
test
into
pop
or
fwait
insb
push
in
loopne
adc
or
xchg
xor
and
test
mov
mov
mov
adc
push
fadd
lret
inc
inc
mov
mov
insl
test
and
nop
fimuls
clc
lret
mov
iret
inc
andb
add
out
daa
push
popa
pop
fisubrl
and
adc
dec
xchg
dec
ja
push
out
into
sbb
test
jne
out
aam
mov
pop
insb
mov
mov
jecxz
inc
fwait
icebp
jp
pop
incb
cmp
inc
mov
cltd
sub
arpl
jle
add
mov
sub
fnstcw
mov
sahf
dec
lcall
fnstsw
in
mov
mov
mov
cmc
cmpsl
sub
imul
mov
lahf
scas
cmp
aam
sub
nop
and
call
in
addr16
jecxz
ljmp
push
cs
outsb
push
inc
sti
sbb
xor
xchg
cwtl
pop
cltd
xor
js
fcmovne
cwtl
push
mov
test
cmpsl
mov
xor
mov
rorb
cld
scas
add
mov
add
test
rorl
enter
pop
int3
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
ljmp
jge
daa
ljmp
jnp
repnz
add
test
push
jl
mov
pop
pop
lret
aam
sti
xor
dec
nop
jmp
xchg
sbb
pushf
sbb
xor
ss
and
fdivrs
ret
mov
daa
adc
inc
js
add
in
out
or
xor
jb
or
stos
or
test
xchg
pusha
push
jbe
and
jge
jno
adc
sbb
mov
lcall
xchg
cs
push
mov
sbb
xchg
incl
jl
loopne
and
icebp
shll
pop
ja
cmp
cld
xchg
adc
dec
inc
mov
inc
hlt
les
mov
shll
mov
popa
rcr
stc
lret
push
aad
cld
pushf
adc
mov
add
xor
fstl
loop
dec
dec
sub
jb
and
xchg
subl
push
mov
ljmp
or
movsb
outsl
inc
add
cmp
arpl
repnz
lahf
mov
add
push
aam
arpl
inc
sahf
into
mov
fstps
sbb
testb
seta
push
stc
or
add
mov
repz
jns
pusha
jge
lcall
addl
cwtl
ficompl
adc
xor
imul
xchg
mov
les
sbb
mov
sub
fmull
pop
ret
mov
les
out
aad
push
push
sbb
test
jbe
push
adc
aad
aam
mov
lock
push
xor
sbb
sub
ror
rcr
inc
sarb
dec
adc
lock
test
mov
dec
shlb
and
pop
fcmovbe
cmp
pop
nop
mov
jl
lret
xchg
add
es
lret
ja
fbstp
mov
push
xchg
cltd
pop
adc
add
jmp
jg
leave
scas
div
scas
movaps
stos
test
sub
sub
out
adc
push
add
cmpsl
sbb
inc
xchg
imul
aaa
test
sarb
jb
loop
cmp
dec
int3
imul
sbbb
fmul
xlat
sub
popa
cmc
xor
and
sub
xor
push
ja
dec
fmuls
outsl
sahf
aas
sub
fisttps
test
insl
or
sub
test
push
mov
std
sbb
or
pop
aam
ds
cli
jmp
ljmp
xchg
ljmp
pop
in
mov
fisttpll
loope
sbb
mov
fiadds
int3
xchg
xor
and
or
cld
cmp
add
hlt
pop
xor
cmp
popf
xchg
jbe
adc
mov
rorl
in
add
scas
mov
lods
out
pop
xchg
cmp
dec
insl
inc
bound
push
dec
or
cwtl
push
sti
mov
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
js
lcall
adc
adc
adc
xor
add
loopne
ret
sbb
jmp
sbb
mov
xor
xlat
jmp
pop
std
jge
xorb
fs
jae
push
pop
push
pop
sahf
arpl
addr16
cmpsl
mov
ficoms
push
in
aam
xchg
push
cmp
cs
iret
fs
ds
sbbb
dec
int3
out
xchg
cmpsb
or
sti
repz
jecxz
pop
movsl
xchg
mov
dec
jp
inc
dec
xchg
adc
push
mov
or
test
sahf
mov
int3
scas
andb
adc
arpl
inc
add
in
mov
pop
push
jmp
mov
loop
faddl
sbb
adc
enter
fidivs
adc
sbb
pop
loopne
out
xor
cmpsb
lea
lret
test
mov
jg
sub
pop
inc
push
and
fs
paddsb
fdivrl
lods
mov
jne
xlat
add
cmpsl
jmp
imul
push
pusha
pop
or
add
push
das
rol
and
shlb
cmp
cmp
cmc
aad
fldt
push
jb
jae
cmp
dec
aaa
daa
out
mov
sbb
enter
push
pop
mov
test
pop
lcall
mov
adc
adc
stos
cmp
sbb
mov
fcmovnb
paddusb
lea
addl
xlat
popf
ret
cmc
das
lods
and
pop
mov
out
fiadds
mov
cmp
mov
sub
adc
imul
push
pop
in
stos
ror
cmpsb
mov
loopne
out
stc
xor
jnp
aam
popf
call
aaa
and
and
add
pop
test
and
pop
jge
test
incb
fsubl
adc
pop
cs
loope
aas
ljmp
mov
enter
push
int
push
mov
adc
movaps
xchg
inc
push
xchg
out
sbb
jo
aas
inc
and
ja
sbb
pushf
ret
movsb
pop
pop
popa
push
lret
cmp
push
in
ret
out
rcrl
or
add
fcmovu
aam
repz
xlat
push
inc
std
nop
cmc
sub
lret
cltd
leave
xchg
xor
rcrb
sahf
loope
jecxz
popa
and
incl
mov
and
mov
and
cmp
sbb
clc
push
pusha
je
push
lds
cmp
sbb
dec
lahf
repz
aad
lds
ja
jp
stc
stc
mov
in
addr16
push
push
jns
icebp
bound
push
shll
cmpsl
mov
stos
mov
mov
mov
xchg
test
test
in
mov
in
arpl
or
xor
hlt
bound
ret
cmp
push
js
repnz
cmpsl
daa
xlat
test
xchg
push
scas
add
fidivrl
es
in
mov
mov
mov
push
fnsave
xchg
dec
ss
aad
outsl
or
add
inc
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
sub
je
push
mov
adc
adc
nop
pop
stos
loopne
pop
fimuls
xor
aas
cmpsb
push
fnstsw
dec
call
inc
mov
xor
or
jbe
into
movsl
pop
mov
out
ror
fidivs
mov
mov
cmp
sub
sbb
inc
shll
outsb
hlt
call
sbb
jge
sarl
add
repz
xor
outsl
out
xchg
rclb
jp
lahf
mov
aam
das
cs
hlt
mov
xchg
rclb
fwait
ljmp
xor
cmp
inc
dec
ret
sbb
or
int
xchg
sbb
cmp
repnz
mov
lds
in
mov
add
xchg
lds
fisubrl
mov
test
outsl
mov
jns
dec
mov
test
xchg
xor
loope
mov
dec
inc
adc
xchg
jecxz
aad
stos
push
jl
push
add
mov
or
cli
out
push
in
hlt
clc
xchg
xchg
mov
pop
xchg
pusha
aad
cmc
xor
cmp
or
nop
sbb
mov
dec
add
aam
into
or
iret
xchg
adc
cmp
dec
push
add
xchg
adc
sarb
in
pop
int
inc
or
add
mov
pop
xchg
fwait
inc
lahf
xor
fdivrs
aaa
jmp
icebp
mov
adc
popl
push
outsb
xor
dec
stc
cmp
cmc
push
xlat
dec
mov
pop
pop
in
arpl
xor
sub
addr16
and
ss
push
ret
fnstcw
jno
lret
jle
xor
or
insl
cmpsb
and
aaa
ja
or
ret
add
out
xchg
pop
xchg
mov
ds
mov
jg
insb
and
test
stos
and
jno
sahf
rcrl
add
std
inc
and
popw
repnz
js
and
ret
fildll
dec
dec
jg
scas
mov
jnp
les
cs
pop
push
mov
sti
pusha
xchg
sub
mov
aad
inc
sbb
sbb
inc
enter
mov
cmp
faddl
lcall
test
xor
int
adc
dec
mov
lret
icebp
sbb
mov
outsb
shlb
dec
add
stos
movsl
adc
mov
mov
popa
cmpl
or
paddd
xlat
lea
repnz
xor
int3
mov
cmp
push
or
inc
add
inc
push
or
sub
lret
mov
stos
into
inc
stos
cmpsl
mov
xchg
mov
pop
sbb
mov
aam
ficoml
mov
push
and
ljmp
lods
rorl
in
xchg
cmpsl
dec
ds
cmc
loope
cltd
js
push
cld
or
and
daa
cmp
cld
jns
jmp
mov
sub
push
jecxz
call
xchg
frstor
cltd
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
xchg
xor
xor
sub
movl
ficomps
sahf
mov
stos
jge
sub
sub
lcall
pop
dec
xchg
inc
pop
dec
in
jge
push
xor
mov
add
inc
cs
clc
bound
pop
mov
mov
out
adc
push
mov
jl
cmpsl
aam
inc
lea
stos
hlt
stos
push
jnp
scas
out
jp
xor
ret
add
sub
movsl
ds
out
or
lcall
std
aas
sahf
ds
insb
or
inc
dec
and
add
test
xchg
test
sub
shlb
adc
mov
in
int
inc
rcll
test
jmp
mov
add
aad
das
push
cmp
sbb
mov
fists
jg
inc
cmp
push
jle
mul
outsb
mov
out
push
and
in
push
mov
stc
jmp
inc
iret
movl
lock
stos
testl
idivb
lods
insl
out
lds
push
cmp
aad
inc
pop
in
xor
xor
adc
loop
push
mov
jnp
xlat
jno
mov
mov
pop
dec
scas
or
jmp
pop
das
xchg
aam
and
adc
cld
stos
add
aad
sbb
and
cmp
out
jo
mov
xor
loop
scas
xor
je
into
jle
shlb
lcall
and
jecxz
nop
in
in
adc
pop
or
sub
cmp
mov
dec
mov
ds
out
subl
adc
xor
cmp
cmp
sbb
lcall
aaa
xchg
test
das
xor
mov
cltd
inc
iret
test
jl
xor
xor
push
push
movsb
pusha
add
adcb
shl
je
arpl
jne
pop
imul
leave
adc
in
push
sbb
jge
insl
xor
jg
test
inc
fsubrs
xor
or
jo
loopne
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
xor
adc
jb
loopne
cmc
sbb
xchg
mov
sub
jp
cmp
test
decb
sbb
or
negl
cwtl
pop
mov
out
lea
or
or
mov
mov
ret
bound
js
cmpsl
fcmove
lock
and
jns
or
sub
sahf
movsl
test
int3
pop
cwtl
sub
add
jmp
add
loope
jl
in
push
sub
in
mov
push
lock
mov
into
sub
inc
iret
jno
aam
pop
mov
push
movsl
popa
and
jnp
and
xor
bound
mov
cmp
incb
pop
adc
cmp
dec
icebp
data16
xor
adc
mov
xor
mov
jecxz
addr16
in
sub
mov
push
sbb
jo
mov
jp
mov
and
or
je
cmp
adc
adc
movsb
je
fdivrp
adc
test
mov
mov
shll
sbbb
lock
fwait
lret
xchg
sbbl
cltd
sbb
loope
leave
test
bound
fidivs
xchg
add
jne
lods
xchg
das
outsl
fs
sub
in
sbb
fnstsw
lret
or
xchg
stc
pop
pop
cld
mov
addl
aad
push
xchg
scas
add
add
andb
cmpl
ret
xchg
test
mov
sub
mov
jnp
pusha
ret
cmp
stos
add
nop
das
in
les
sbb
pop
ljmp
lods
push
xor
inc
xchg
repnz
fiadds
lea
jb
mov
pusha
rcrl
call
out
adc
ffree
in
jmp
mov
sbb
cmp
cmp
mov
mov
cmp
adc
mov
negb
subb
sti
pushf
cli
mov
cmp
dec
mov
test
and
cmp
sarl
rorl
test
or
cmp
add
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
test
mov
stos
movlps
cmp
xlat
cltd
stc
mov
push
mov
inc
mov
lret
mov
movb
subl
sahf
mov
aas
mov
cmp
mov
insb
stos
pop
std
leave
xchg
cltd
pop
fcmove
test
lahf
dec
cmp
lods
stc
mov
in
mov
mov
addl
add
jp
stos
xor
cmp
sub
fdivr
adc
mov
shrl
xchg
xchg
jle
or
mov
jb
fstl
sti
das
sbb
pushf
fildl
dec
scas
inc
scas
pop
or
aas
or
inc
jns
dec
sbb
xlat
mov
lahf
fcoms
je
shrb
daa
mov
movsb
inc
les
stos
into
inc
jmp
sbb
jg
sub
mov
adc
test
adc
pop
pop
lock
lea
jnp
adc
addr16
clc
cld
fwait
sbb
imul
jb
pushf
adc
sbb
mov
cmp
popf
pop
dec
xor
loope
cmp
or
or
pop
arpl
out
jo
cmc
hlt
into
mov
adc
pushf
cltd
adc
xchg
jp
push
sahf
out
es
rcrl
xchg
mov
add
imul
fcomip
jo
pop
das
outsl
xor
pop
jl
push
sub
push
cli
repnz
or
cs
sahf
mov
das
adc
sbb
mov
pushf
sbb
xchg
movsb
cmpsl
roll
bswap
stos
xchg
jecxz
das
lret
aam
xor
negb
cmpsl
stc
paddusb
loopne
cmp
sub
jns
push
cltd
std
test
mov
xchg
inc
hlt
int3
cmp
cltd
fildl
cmp
stc
xor
adc
test
pushf
es
ds
xchg
dec
fisttpl
ficoml
pop
xchg
xlat
xchg
das
jl
dec
lahf
ret
sbb
dec
aaa
leave
xchg
cli
aas
mov
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
fs
xchg
stos
movlps
pop
lcall
and
cmpsb
sbb
ljmp
mov
add
xchg
repnz
addr16
rcl
daa
xchg
mov
movsl
lds
cmc
pusha
pop
call
inc
idivl
pop
ja
pop
adc
add
cmc
adc
icebp
mov
mov
leave
push
jne
das
movsl
das
inc
mov
popf
in
lods
daa
cmp
inc
add
inc
push
loope
lds
xchg
sbb
imul
test
jo
shlb
cmp
unpcklps
cltd
mov
fsub
hlt
xor
adc
add
or
sbb
fst
andl
lret
adc
gs
pushf
jg
ja
lret
pop
mov
lahf
pop
leave
jp
ljmp
mov
popa
aad
add
adc
mov
addb
outsl
mov
orl
int
push
pop
les
test
in
outsb
push
adc
fcomip
sub
add
jns
push
insl
repnz
stos
jns
jae
jb
das
xchg
filds
mov
sub
dec
movl
cltd
lahf
dec
mov
imul
ret
cmp
leave
in
mov
scas
sbb
test
xor
dec
mov
push
jmp
cmpsb
rcrb
ja
icebp
lods
lea
push
into
hlt
mov
fcompl
adc
ja
mov
aam
loopne
scas
mov
cmp
movsl
aad
pop
push
call
inc
adc
inc
les
popa
scas
dec
jne
data16
and
mov
pop
mov
in
fcompl
je
dec
xor
outsb
ret
push
lahf
sbb
loope
aad
dec
rorl
mov
enter
lret
mov
ret
and
sti
pop
leave
inc
inc
jge
push
sbbl
mov
cmp
pop
addb
js
repnz
or
and
or
inc
insl
sbb
inc
addr16
test
inc
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
mov
insb
mov
adc
stos
movlps
cli
cmc
mov
insb
pop
cs
xchg
lcall
mov
dec
cmpsb
mov
ret
adc
addr16
fisttps
sub
pop
or
or
loopne
aad
scas
xchg
jne
dec
outsb
mov
test
sub
adc
cmp
stos
outsl
scas
inc
lock
jne
jmp
data16
repz
push
out
sahf
add
out
pusha
and
dec
inc
cmp
lcall
fcoms
mov
cmp
mov
cmpsb
jo
jae
add
dec
xor
movsb
xchg
inc
cmc
scas
iret
movsl
stos
pushfw
mov
cmp
mov
sub
jmp
sarl
loop
shlb
and
repz
add
sbb
call
mov
xchg
cmp
cmp
imulb
aaa
push
test
or
ss
dec
daa
adc
adc
mov
loop
lahf
add
insl
push
adc
mov
loopne
ljmp
xor
mov
and
cmp
mov
push
or
mov
sti
jne
into
adc
stos
insb
cmp
jbe
push
mov
push
inc
mov
mov
outsl
mov
pop
call
dec
add
push
fwait
call
jne
stos
ja
sub
pop
call
into
icebp
add
je
outsl
int3
lods
cmpsl
mov
stos
es
mov
add
scas
push
mov
lret
sarb
jge
and
ret
gs
or
rcpps
call
jnp
xchg
push
push
mov
jo
mov
movsl
push
jge
les
dec
sbb
jmp
adcb
fadds
ret
int3
stos
push
jl
sbb
leave
pop
in
ret
arpl
test
subl
lcall
mov
test
orl
jmp
mov
add
mov
je
mov
hlt
sbb
inc
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
pop
fsubrs
mov
test
xchg
mov
out
stc
add
jne
out
mov
dec
pop
cmp
scas
fcmovnb
jnp
push
sub
push
and
or
jmp
add
mov
dec
jo
hlt
cmp
sbb
loopne
rorb
inc
mov
dec
and
mov
outsl
inc
aad
mov
xor
and
lods
fadds
adc
jle
shlb
push
xchg
jnp
rcrl
xor
ret
hlt
test
jb
ror
cmp
cld
pushf
jbe
xchg
addr16
sub
xchg
lcall
aas
in
popa
lret
jnp
jle
xor
dec
inc
loope
sbb
aas
fisttps
aad
pop
bound
mov
and
in
fidivs
cmp
test
repnz
jge
les
or
add
xchg
dec
jne
in
inc
pop
pop
inc
and
vpminsw
jg
pushf
hlt
das
and
out
cld
push
lea
lahf
adc
shl
xchg
inc
dec
sbb
cwtl
xchg
sbbb
sbb
cmp
add
lahf
aam
jne
xchg
and
sbb
or
ret
in
mov
mov
adc
sub
add
push
mov
aas
dec
sbb
xchg
add
arpl
hlt
in
cwtl
jl
pop
cmp
jg
rcl
ucomiss
cmp
ss
sub
xchg
xor
mov
sub
or
sahf
stos
inc
pop
mov
mov
cmpsb
shlb
scas
cmp
clc
sub
adc
mov
dec
fsts
in
lret
iret
aad
mov
xchg
mulb
fistl
std
sbb
mov
add
ss
into
imull
ret
jmp
jno
jecxz
je
in
inc
and
adc
mov
jecxz
or
jecxz
insb
int
push
sub
lret
inc
mov
pop
mov
lret
fbld
rcr
lods
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
and
js
ja
ljmp
xor
add
xchg
mov
jge
sbb
mov
movsl
stc
or
pop
mov
aas
ljmp
xchg
cmpsl
xchg
and
outsl
hlt
sbb
cmp
inc
xchg
sub
imul
xchg
jnp
jae
push
adc
mov
push
and
push
lahf
adc
push
popa
mov
lcall
fcompl
das
adc
sub
nop
cmpl
mov
or
and
ret
dec
scas
das
xchg
xor
fs
and
sub
sbb
mov
pop
nop
out
mov
adcl
mov
pop
mov
cli
ret
xchg
lds
in
mov
cmp
pop
push
fcoms
dec
je
fiadds
andb
mov
pop
dec
shll
es
mov
jae
repnz
movsb
mov
aaa
fs
mov
in
and
sub
add
je
push
or
mov
xlat
arpl
sub
cmp
pop
iret
jns
mov
xlat
dec
mov
push
mov
push
cmp
mov
insb
dec
xor
cmpsb
pop
clc
popa
ss
fnstsw
and
jmp
pop
in
push
sbb
push
add
sub
out
pop
js
adc
sahf
pop
dec
cld
mov
jb
mov
iret
loope
lods
pop
xchg
flds
add
push
jmp
push
mov
inc
cmp
sub
mov
mov
lret
and
leave
sub
pop
sub
add
roll
push
testl
in
and
adc
iret
enter
aad
dec
mov
add
dec
lahf
jg
pop
ds
add
call
inc
fildl
frstor
and
xchg
inc
xor
addb
pop
int
adc
dec
fwait
push
push
inc
xchg
adc
iret
jle
lds
nop
push
mov
or
rorb
mov
sub
test
test
imul
and
cli
pop
mov
push
lcall
push
pop
stc
mov
push
aad
addl
jnp
cmp
ret
ret
jnp
in
insb
daa
aaa
dec
insb
sahf
ficompl
arpl
mov
lds
add
cmp
cmpsl
sbb
mov
js
jne
sarl
sbb
dec
ds
lods
pop
xchg
arpl
addb
filds
lcall
call
mov
dec
lcall
push
pop
gs
aam
adc
sarl
mov
lcall
and
in
push
lret
mov
or
mov
daa
orl
in
test
jnp
rclb
repnz
lret
dec
jmp
cli
cmp
cmp
inc
mov
mov
or
xchg
push
mov
or
sbb
push
pop
dec
vmwrite
test
sti
popw
xor
cld
or
xor
adc
mov
sub
bound
lret
dec
cmp
in
fidivl
sbb
sarl
lock
xor
jo
fisubrl
movsl
xchg
add
out
flds
aam
jmp
imul
jp
mov
in
cmp
jl
test
and
mov
fadds
cmp
arpl
cmp
inc
dec
lods
les
psrlw
add
jae
repz
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
sub
stos
loop
adc
pop
adc
adc
jle
sbb
cmpps
ds
outsb
shlb
test
xchg
add
je
add
aaa
adc
ja
xor
jno
clc
addl
je
je
pop
call
mov
rol
and
addr16
jo
add
add
pop
lods
push
adc
outsl
xchg
jne
in
adc
pop
das
or
or
add
nop
popf
inc
cs
mov
xor
dec
sti
lret
in
lock
dec
out
ds
mov
inc
push
mov
scas
xor
outsb
adc
inc
mov
cmp
ljmp
mov
sub
cmp
push
inc
and
add
mov
xchg
and
fstp
or
mov
lretw
mov
sub
jb
cmovg
popa
scas
nop
fwait
push
pop
sub
lret
loop
aas
xchg
inc
movsl
in
mov
cmpsl
inc
mov
pop
stc
int
push
mov
inc
cmp
mov
xchg
dec
sbb
cld
aaa
dec
lret
push
divl
jnp
cli
lret
sbb
loope
test
xchg
mov
mov
xchg
lcall
lahf
inc
out
adc
xor
sbb
jmp
mov
and
jb,pn
jns
xor
aas
sub
loope
call
jae
mov
inc
mov
lret
movsl
and
ss
enter
adcb
or
sbbl
mov
and
scas
out
test
dec
jmp
adc
push
or
test
xlat
xchg
and
lock
dec
decb
xchg
adc
and
addr16
lcall
xchg
nop
adc
rcrb
jbe
psubb
loopne
daa
sbb
pop
pop
stc
add
xchg
or
out
lcall
jg
xchg
pop
or
loop
dec
pop
xchg
mov
aad
and
test
and
imul
pop
loop
ret
aad
call
and
mov
int3
add
cmp
fidivrs
lcall
push
loop
aad
sbb
dec
sbb
push
pop
push
or
or
sub
or
pop
repnz
pop
pop
pop
scas
mov
xchg
sbb
aad
add
repnz
push
sarl
mov
sub
dec
inc
outsl
mov
cmpsl
sahf
popf
mov
out
int3
pop
sbbb
ja
aam
push
scas
into
sub
xor
push
mov
dec
lods
daa
mov
push
sub
xlat
push
jmp
xchg
iret
mov
adc
cmp
lret
test
push
shlb
dec
pop
js
cmp
loope
pop
inc
fstps
andl
ja
outsl
andl
inc
repz
insl
mov
jg
pop
jg
jmp
sub
xchg
inc
pop
cmpsl
lea
dec
aas
xchg
cwtl
add
cmp
sti
push
inc
loope
lods
insl
ret
mov
orb
shrb
nop
fnstcw
ja
fmull
das
scas
in
jae
mov
std
cs
pop
inc
push
jmp
cltd
jns
sbb
int
loopne
cmpb
cs
sub
icebp
dec
into
add
das
cmp
push
add
or
cmp
out
jno
loopne
xor
inc
sbb
mov
mov
ja
push
popa
mov
sub
mov
mov
leave
cmp
jecxz
sarl
into
cwtl
mov
jae
jl
jb
fs
adc
mov
push
loope
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
lret
push
mov
adc
movlps
adc
loopne
sub
push
push
push
fs
shll
xchg
mov
pop
mov
push
xbegin
std
jb
mov
mov
sbb
loopne
fwait
mov
lea
adcl
push
sbb
xchg
lock
mov
cmp
fisubrs
jle
pushf
add
push
jmp
xchg
cmp
icebp
bound
sbb
mov
mov
seta
adc
xchg
into
or
push
inc
mov
cmp
push
push
lods
fs
push
mov
sub
fs
mov
jp
scas
jae
inc
jg
daa
push
dec
shll
mov
rcl
aaa
movsl
jle
mov
les
pop
in
mov
fldl
int3
adc
xchg
jnp
pop
out
push
in
xor
sarl
xchg
adc
sahf
push
xchg
outsl
push
mov
outsb
pop
cld
sbb
addr16
jmp
in
lret
mov
or
jae
fdivrs
push
pop
sbb
sub
push
mov
and
or
sub
push
xchg
rcrb
lret
and
xlat
push
arpl
adc
pop
adc
idivl
inc
lea
scas
les
clc
jne
mov
in
inc
clc
inc
and
xchg
movsb
in
sub
setge
call
cmp
out
movsl
mov
xchg
pop
sbb
data16
push
lret
stc
push
adc
xchg
outsl
je
out
mov
xchg
sub
pusha
mov
or
xor
rorl
pushf
int3
xlat
sbb
push
in
xor
sub
mov
jmp
push
repz
ret
or
cwtl
push
lret
mov
jl
mov
iret
call
cmp
push
fisubl
xor
hlt
bound
jne
or
mov
addl
dec
xchg
pop
lods
daa
cmp
mov
xor
cli
cmc
cwtl
in
repnz
pop
xchg
leave
cmpsb
cmpsb
mov
mov
push
fwait
ds
xchg
aam
inc
stc
jno
cld
ljmp
pushf
ret
test
or
fs
das
xor
xor
ds
adc
stos
dec
mov
or
into
mov
cmp
rolb
jmp
data16
jns
add
sarb
cmp
clc
clc
and
dec
sbb
in
insl
cmpsl
iret
mov
aad
push
cltd
lret
pop
aas
mov
ds
mov
flds
xor
mov
push
push
leave
jae
or
pop
pop
pusha
test
jl
fimull
ret
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
stc
and
adc
sub
dec
or
and
xchg
xchg
push
mov
aam
mov
cltd
mov
imul
pop
push
jo
sahf
ss
mov
mov
add
xchg
dec
push
into
and
pop
xor
insb
adc
cwtl
pop
pusha
fadds
inc
testb
js
sub
xchg
out
mov
push
or
mov
pushf
ljmp
add
nop
fdivrs
jbe
xor
popf
ja
push
and
dec
sti
iret
pop
mov
adc
and
pop
addr16
mov
xchg
test
mov
cld
add
xor
mov
ja
lds
incl
jge
jge
lcall
idivl
sti
js
pop
cmp
jge
cmpb
mov
cwtl
mov
mov
cwtl
lcall
dec
notb
jbe
out
test
adc
fisubrl
aas
mov
aas
mov
cmp
dec
mov
cli
jb
fildl
dec
fisubs
outsl
cmp
dec
out
ret
inc
and
cli
push
cmp
bound
orb
jl
xchg
insl
xchg
and
adc
pop
adcl
fucomp
ret
adc
les
adc
fs
movsb
sbb
mov
ficoms
enter
in
out
adc
dec
mull
sbb
repz
sahf
sbb
jo
loopne
xchg
pop
por
jo
dec
mov
data16
mov
fwait
push
rolb
push
mov
sub
push
iret
inc
cmp
lcall
daa
xchg
mov
sub
dec
jecxz
rclb
imull
push
mov
jl
test
fs
scas
lock
shrl
sub
sub
fisubs
stos
jg
mov
enter
call
cltd
cltd
addr16
repnz
ret
sbb
and
xor
push
sub
jnp
scas
mov
dec
mov
jo
aam
pop
dec
xor
or
bound
and
popf
and
fisttps
lea
xor
mov
shll
loop
pop
stc
repnz
jbe
shlb
sub
sub
cs
sub
jns
in
push
and
cmpsl
dec
adc
hlt
cli
loope
jecxz
xchg
pushf
mov
jecxz
xor
lea
cmpl
in
xor
enter
imul
dec
mov
in
aam
xlat
pop
mov
add
dec
cwtl
ljmp
add
cmp
inc
jb
aad
xor
fildll
push
sbb
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
mov
movlps
addr16
inc
xor
jle
and
mov
push
mov
push
mov
sahf
pop
lret
xchg
mov
jbe
xlat
adc
cld
sbb
loop
mov
andb
mov
inc
mov
loop
xor
sub
and
jae
mov
mov
xchg
dec
shlb
aad
scas
lods
and
adc
int
mov
xor
sbb
adc
inc
mov
inc
cmp
dec
into
jbe
ja
pop
inc
inc
push
test
cli
sub
jmp
cmp
cld
lods
ss
push
dec
jl
fcomps
gs
insb
push
out
pop
scas
repnz
loopne
gs
mov
mov
notl
jne
stos
mov
add
lret
je
dec
adc
outsb
es
jp
andb
dec
sub
xchg
xor
mov
pop
sti
mov
inc
es
mov
addr16
jmp
mov
int3
cli
clc
loop
cli
mov
scas
test
mov
mov
adcb
jmp
aas
sbb
ret
dec
inc
dec
addr16
inc
jns
push
rorl
out
and
popf
sub
mov
mov
sub
cwtl
and
or
and
xlat
cmp
sub
repnz
xor
out
stc
aas
cld
pop
xor
mov
out
cmpsb
xor
xchg
ret
shr
xchg
mov
sbb
cli
les
notb
xchg
mov
rcl
jecxz
jmp
fcomps
in
into
mov
pop
fdivs
mov
sub
sub
rorl
adc
mov
cmpl
ret
imul
out
sub
jg
add
cmc
imul
jg
xor
push
add
xor
int3
cmp
out
lods
cmpsl
sub
mov
mov
cmp
std
mull
iret
bound
and
sarl
or
sbb
popf
shll
pop
ret
xlat
jmp
push
lcall
lahf
jno
popf
jns
push
adc
push
dec
lret
aad
jg
leave
stos
pop
aas
push
jp
and
push
test
jmp
mov
xor
jl
pop
loope
pop
jno
test
adc
sbb
lret
adc
jl
mov
insl
cs
push
test
stos
out
mov
push
nop
sub
ss
mov
mov
and
mov
stos
push
sbb
ss
and
pop
mov
jbe
bound
xor
sti
jle
push
mov
pop
int
test
test
pop
out
or
dec
sbb
jle
ljmp
test
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
dec
or
mov
or
mov
cld
mov
ret
lcall
mov
xchg
fidivrs
cmp
stos
push
sbb
adc
fwait
xchg
mull
mov
loopne
int
cmp
pop
dec
fdivrp
outsb
insl
inc
mov
inc
mov
repz
ljmp
adc
add
pop
dec
aas
push
mov
xchg
or
sahf
negb
xchg
dec
xchg
mov
pushf
mov
fidivs
cmp
int3
push
test
add
hlt
push
shlb
pop
jnp
fsubrp
aaa
cltd
sti
mov
add
mov
pushf
addr16
cs
cmp
pop
imul
shll
or
cld
sti
push
addr16
jle
leave
clc
pop
rorl
cmpsl
add
lods
cmp
or
pop
lea
inc
xor
out
add
cmp
xor
push
in
cli
xorb
add
fbld
dec
leave
es
punpckhwd
lahf
mov
sub
test
add
iret
adc
jb
lea
mov
inc
inc
in
incl
add
or
adc
divl
sahf
cwtl
mov
xchg
or
int
inc
fsubs
bound
push
stc
lea
aad
push
imul
call
aaa
inc
stos
add
cmpsb
imul
cmc
and
addl
cmp
mov
pop
test
int
mov
xchg
jl
inc
inc
add
ret
add
jno
push
insb
lret
bound
xlat
movsl
dec
lods
addr16
mov
lea
stos
sub
cs
ljmp
mov
lcall
arpl
insl
lret
ja
shrl
jl
xchg
sbb
sub
pop
push
sarb
lret
bound
inc
mov
sbb
test
scas
xchg
pop
es
popf
mov
popf
lea
hlt
pop
mov
jg
test
pop
call
xor
xchg
aaa
inc
lds
mov
aas
lods
dec
mulb
popa
pop
test
dec
insb
insb
xchg
adc
popf
data16
cmp
loop
int3
fimuls
pop
mov
push
repnz
scas
push
cmpsl
mov
sub
jecxz,pt
xchg
pop
lcall
add
push
mov
sbb
adc
ret
inc
je
cld
mov
mov
std
jmp
and
add
mov
push
xlat
add
in
aaa
xchg
sti
sbb
scas
adc
leave
mov
std
cltd
sti
xor
iret
rclb
xchg
inc
pusha
jb
dec
push
movb
adc
jle
adc
or
mov
out
ret
adc
movb
orb
out
pop
xchg
jl
je
mov
mov
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
push
sbb
sub
push
or
rcrl
mov
add
xor
roll
xchg
push
ficomps
cmpsl
mov
js
inc
mov
pop
xchg
or
test
pusha
fsubrl
hlt
mov
lock
bound
scas
stos
cwtl
cltd
jp
add
sub
lcall
xchg
test
cltd
dec
out
dec
jle
xlat
sbb
mov
push
sub
adc
inc
imul
push
cmp
mov
mov
icebp
aad
mov
xorl
lret
pushf
mov
imul
orb
mov
xchg
and
or
xchg
std
jb
cmpsb
loopne
fnstenv
shrl
dec
jns
or
pusha
outsl
scas
pop
mov
imul
cmpsl
stos
movsl
inc
inc
in
pop
cmp
fwait
jb
sbb
sub
orb
push
xchg
insb
idiv
jmp
push
fistps
lds
and
sbb
mov
gs
adc
out
xor
jno
sbb
push
xor
push
push
in
mov
insl
fstl
out
in
jne
stos
lock
lret
lock
pop
pop
xchg
pop
js
jmp
mov
sub
pop
sub
inc
loope
ret
stos
push
pop
and
xchg
mov
push
and
outsb
stos
jmp
ds
es
int3
inc
je
xor
sub
adc
stos
sub
pusha
fwait
cmp
push
inc
add
mov
pop
lahf
inc
adc
jno
popa
mov
rcrl
shr
jecxz
mov
push
divl
xchg
loopne
pop
jmp
cltd
xlat
mov
cli
in
loope
add
inc
push
jecxz
push
sub
or
shl
out
fs
lock
fstl
out
sub
inc
adc
xchg
xchg
xchg
sbb
aad
ret
ds
inc
mov
repnz
pop
je
popf
inc
mov
cmp
out
pop
mov
dec
dec
xor
das
mov
arpl
lds
fwait
aaa
inc
adc
jle
in
jecxz
mov
sub
xor
mov
pop
in
cltd
out
lcall
sub
lds
mov
loope
hlt
repnz
add
in
cmp
jb
add
mov
mov
add
mov
imul
shll
inc
dec
ret
test
push
out
pop
xchg
test
add
ror
ror
aam
cld
out
mov
sarl
add
jecxz
cld
jb
mov
dec
loopne
cmp
inc
lret
in
fdivp
cli
movl
cmpl
arpl
push
cmpl
cli
mov
and
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
fstpl
jle
adc
or
inc
jge
sbbb
push
js
popf
dec
sub
ds
mov
cmp
pop
int
dec
aam
lcall
jnp
jp
fwait
mov
lods
dec
repnz
orb
push
cmp
outsb
test
mov
sub
mov
push
pop
cmp
into
lock
mov
loope
push
push
lea
xchg
inc
shll
add
int3
pop
test
das
cmp
std
dec
movsl
ja
neg
ret
mov
in
inc
inc
icebp
fimuls
pop
pop
jo
lcall
inc
call
outsl
inc
sub
xchg
insb
inc
mov
aam
xchg
fldcw
push
pop
mov
orb
inc
insb
dec
mov
mov
jno
orb
adc
icebp
jl
gs
inc
lods
aam
add
xor
and
sbb
mov
ja
xor
sub
cmp
sahf
sbb
fs
les
loop
scas
mov
xchg
add
inc
mov
repnz
out
les
add
out
mov
dec
and
ret
bound
or
insl
jb
dec
mov
mov
and
lods
sub
movsb
push
jge
push
add
popf
loope
fistpll
imul
push
les
add
fnstsw
test
cmp
pushf
lret
add
push
mov
int3
movsl
sub
mov
jg
sub
mov
sahf
dec
sub
fsub
jb
rclb
pop
das
sub
jns
mov
pop
jp
mov
jmp
out
dec
lcall
cld
mov
inc
je
jmp
orb
xor
faddl
mov
xor
test
cli
inc
mov
inc
enter
je
out
cli
cmp
pop
sub
lret
xor
xor
pop
push
bound
shrb
xchg
addl
xlat
xchg
sahf
dec
push
stc
adcl
mov
cli
jp
adc
cltd
jecxz
rclb
lea
inc
and
sahf
aam
sti
rorb
test
mov
mov
daa
xchg
subb
cmpl
adc
xchg
jmp
xchg
dec
fs
ja
orb
das
lock
jp
test
mov
pop
hlt
and
scas
scas
add
jmp
push
mov
xchg
inc
pop
iret
int
dec
jnp
mov
adc
negl
and
mov
cwtl
jbe
cmpsb
dec
loop
sahf
jmp
mov
pop
mov
sbb
push
in
add
das
mov
test
ret
ljmp
stos
mov
sahf
dec
pop
rcll
mov
loop
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
and
ss
lcall
push
cltd
sub
mov
movsb
mov
push
mov
fisttpl
pusha
movsl
pop
es
repnz
dec
in
cs
mov
enter
insl
push
pop
mov
in
shlb
pop
pop
rep
int
push
sbb
add
imul
cwtl
aam
or
icebp
clc
mov
scas
into
add
test
movsb
fs
jp
notb
xor
sbb
mov
and
inc
xchg
push
push
sbbl
out
dec
ljmp
stc
pop
xchg
aad
adcb
out
fs
aam
stc
sbb
sbb
notl
outsb
cli
fucomp
int
int
dec
lahf
in
adc
ljmp
mov
cmpsl
stc
imulb
pop
repz
jl
jmp
pop
aaa
int
lret
in
shl
push
ficoml
mov
arpl
push
ljmp
add
pushf
imul
aaa
scas
jg
fstpt
add
cmpsl
fmul
ja,pn
ja
add
aas
mov
cmp
outsb
cmpl
rorl
mov
sbb
sahf
push
loop
adc
jecxz
sub
popa
mov
dec
jbe
and
mov
push
push
data16
orl
hlt
dec
jne
call
out
push
aaa
sti
push
in
test
cmp
add
xchg
test
or
mov
ret
repz
mov
push
or
stos
ljmp
daa
mov
cmc
pop
data16
int3
rcll
add
sbb
or
push
mov
xchg
and
test
and
outsl
mov
fdivs
add
push
jle
cmpsb
repz
outsb
out
xchg
jge
sbb
dec
mov
xchg
bnd
pushf
stos
sbb
mov
jae
aaa
sub
bound
adc
loopne
push
dec
pop
xchg
lods
xor
dec
test
jbe
xchg
inc
lret
jge
xor
xor
add
dec
xchg
jnp
cmp
or
aaa
lcall
lods
imul
les
movsl
ja
jbe
or
into
rorb
xchg
lods
out
call
pop
dec
and
bound
push
stos
into
sahf
and
in
iret
leave
or
pop
or
test
das
xchg
cmp
mov
jnp
adc
sub
fisubrs
lock
mov
or
sub
in
je
in
xor
xchg
shl
pop
pop
add
subl
test
sub
xchg
pop
cmpsl
pusha
jns
fcoms
adc
fisubrl
outsl
scas
jb
mov
mov
add
mov
push
push
out
sti
outsl
cld
xchg
vpcmpgtb
loope
xor
ret
or
push
dec
add
ss
cmp
test
fucom
push
jecxz
out
mov
push
insb
out
push
inc
inc
ret
cld
dec
stos
push
pop
adc
in
and
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
lods
insl
out
inc
pop
adc
jp
adc
addb
je
xchg
jae
int
jge
xchg
and
loop
cmp
in
adcl
popf
xchg
call
dec
enter
rcrb
je
xchg
test
or
ss
cs
xlat
add
and
jle
stos
xor
inc
scas
inc
and
out
sub
dec
xchg
jl
lret
inc
sub
movsb
pop
add
cld
inc
aad
xchg
mov
add
cld
scas
fmull
insb
cli
std
sub
ficoml
iret
push
lret
repz
sbb
and
mov
fcoml
lcall
vpshlq
jns
leave
inc
and
xchg
xchg
mov
jae
fsubrs
imul
call
or
xchg
dec
push
aas
iret
insb
test
add
mov
mov
adc
in
inc
insl
dec
outsb
dec
dec
insb
mov
dec
in
dec
xchg
xchg
and
js
cmpsl
mov
jmp
movsl
push
imul
push
ss
scas
arpl
dec
mov
movsl
aas
push
sub
in
iret
jnp
cwtl
lret
cmp
mov
inc
in
lock
add
dec
sub
pop
mov
ss
lds
pop
xchg
in
mov
sbbb
nop
test
daa
or
insl
imul
xchg
mov
insb
or
mov
jmp
lods
in
pop
stos
fmuls
pop
jae
xor
xchg
and
dec
sub
pushf
test
lcall
and
mov
fimuls
dec
pop
cmp
xlat
push
cmpsl
stos
out
push
pusha
inc
mov
mov
out
and
push
mov
aad
je
adc
jbe
and
mov
jge
push
stc
inc
daa
pop
jg
push
outsl
mov
sbb
movsb
xor
js
jne
or
insl
in
xor
addr16
sub
jl
insl
test
pop
or
icebp
mov
xorb
push
popf
test
adc
in
insl
mov
adc
imul
test
in
stos
sbb
imul
fimull
into
stc
movsl
dec
outsb
mov
push
cmp
daa
push
sbb
jno
mov
dec
repz
sbb
js
fs
test
ds
cltd
lds
lret
sbb
and
cmp
inc
xor
nop
mov
cltd
mov
jle
cld
jl
outsl
pop
leave
call
mov
aas
lea
mulb
adc
adc
mov
fbstp
sbb
fnstcw
test
push
mov
aas
lahf
jp
or
and
out
inc
add
leave
stos
sti
xor
outsb
sarl
push
pop
mov
fsubl
loop
add
out
mov
mulb
ss
jecxz
cmp
arpl
out
enter
lcall
push
xor
jno
inc
mov
sub
repz
cs
repnz
fimull
cld
mov
add
inc
clc
roll
add
inc
hlt
adc
add
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
pop
mov
jp
adc
inc
push
into
xor
enter
fcoms
fbstp
lcall
jns
inc
adc
xchg
shl
sarb
sub
and
sub
inc
arpl
faddl
inc
inc
add
test
inc
loope
sbb
imul
add
out
bound
cmc
test
and
inc
cltd
pop
fimull
mov
stos
inc
inc
lcall
outsl
jae
and
add
push
subl
dec
mov
xlat
aas
iret
cmpsl
imul
xchg
cltd
and
outsl
scas
lret
in
aaa
loop
pop
arpl
cmp
mov
push
popa
aam
cmp
in
adc
in
aas
loop
jmp
adc
lret
sub
sbb
xchg
inc
into
mov
popa
lods
or
fsubp
insb
add
call
lock
rcrb
jbe
mov
adc
add
xchg
addr16
daa
outsb
imul
clc
rorl
fwait
movsl
dec
jp
dec
push
add
shll
mov
or
xchg
aas
js
cmp
push
ret
sbb
and
adc
insl
add
add
mov
js
mov
push
cmc
push
leave
repz
out
repnz
cmpsb
mov
mov
pop
inc
aad
pop
sub
xchg
scas
popa
xor
push
jo
js
addr16
pusha
cwtl
mov
jb
out
pop
outsl
test
xor
cmp
push
stc
push
ret
sti
adc
sarb
mov
sbb
repz
dec
push
pop
push
add
or
lods
sbb
cmp
jmp
mov
push
sbb
or
jl
mov
loopne
or
out
out
clc
adc
ljmp
adc
mov
sbb
add
and
xchg
cmc
in
daa
faddl
jbe
pop
mov
mov
lods
pop
mov
loopne
stc
mov
hlt
jae
mov
xor
std
inc
icebp
test
outsl
pusha
cmc
popf
sbb
cmp
dec
rclb
repnz
je
in
xchg
mov
negb
jns
call
pop
push
sub
mov
push
mov
sahf
addr16
enter
jl
adc
movb
ljmp
dec
dec
bound
push
cs
vmwrite
mov
mov
mov
push
test
icebp
pop
sbb
dec
idivl
xchg
jae
pop
mov
out
xchg
mov
ror
mov
xchg
or
jecxz
loopne
imul
inc
jnp
push
jo
cwtl
lods
jle
ds
fwait
popa
cli
mov
sub
in
push
push
test
stc
dec
in
stos
xchg
popf
out
dec
int
js
gs
iret
mov
push
sub
cmpsl
fnstsw
mov
mov
mov
outsb
sbb
mov
insb
xchg
cmpsb
dec
test
add
ljmp
mov
mov
popf
ja
xor
sbb
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
adc
push
adc
jp
adc
add
xor
daa
mov
jo
arpl
add
mov
sti
cmp
xor
cmpsb
lahf
in
jne
mov
xchg
mov
mov
push
sub
or
xchg
ret
push
in
adc
insb
adc
lcall
sub
sub
pop
sbb
cmp
out
mov
pop
pushf
insb
xchg
cmp
add
mov
add
fisttpll
xlat
out
pop
sti
adc
popa
insl
mov
fisubrs
push
or
mov
push
pop
adc
adc
inc
subl
fildll
inc
mov
xor
js
lcall
fdivl
neg
out
outsl
push
loop
sbb
lret
in
bnd
mov
cwtl
mov
sub
jne
cwtl
clc
ucomiss
sub
lods
in
imul
pop
and
shrl
mov
sub
mov
loope
outsb
popf
cwtl
dec
dec
scas
lahf
icebp
insb
clc
mov
inc
cmp
cld
inc
not
hlt
sub
sti
mov
pop
dec
xor
sub
dec
xchg
xor
sub
ja
push
sbb
es
or
insb
cmp
cmp
dec
xchg
sbb
outsb
sbb
pop
inc
lcall
or
xor
mov
xlat
daa
xchg
loop
into
lret
or
cmp
adc
scas
or
mov
mov
xchg
push
mov
lret
mov
daa
adcb
js
sub
lret
jno
sub
push
and
js
cmp
dec
rorb
mull
inc
or
loopne
adc
test
mov
pop
sbb
mov
sbb
sbb
jae
mov
fnsave
in
aam
and
popw
adcb
rcrb
cmpsl
jb
sbb
jne
push
xchg
push
mov
xor
sub
xchg
jmp
or
lods
nop
arpl
push
mov
inc
ret
repz
pop
bound
aam
ds
mov
mov
js
mov
sbb
insl
in
push
inc
mov
scas
loopne
xchg
adc
enter
daa
shll
loop
adc
xchg
push
pushf
cs
add
jb
adc
push
leave
xor
jo
fwait
add
sub
pop
lds
jl
push
es
outsl
inc
inc
dec
jg
hlt
cmc
cmp
or
pusha
cmp
out
sub
aam
xorb
mov
cmp
daa
jnp
stc
ret
jl
xchg
jmp
pop
push
mov
fucompp
jnp
mov
push
iret
test
lret
xchg
lods
int
or
lret
mov
push
ljmp
pop
cmp
leave
repnz
cmp
lds
mov
add
cmp
clc
mov
sarb
push
pop
incb
pop
or
in
lods
xchg
dec
ljmp
pop
ret
loope
rcll
push
inc
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
stos
jle,pn
inc
adc
lea
adc
mov
aam
and
jo
test
aam
rcrl
mov
into
jns
andl
sbb
inc
scas
test
xchg
pop
sahf
adc
mov
cmpsl
nop
pusha
lahf
mov
and
and
pop
outsb
dec
cmp
cld
lods
notl
xor
fistpll
jmp
inc
loopne
ljmp
sbb
iret
outsb
test
cltd
leave
adc
jle
divb
mov
and
push
xor
fisubl
jl
xor
popa
addr16
ljmp
mov
shll
pop
push
std
pop
out
sahf
dec
adc
add
jno
aad
stos
ja
pop
or
test
xorb
int
inc
and
xor
sbb
pop
add
xor
pop
mov
push
adc
loope
mov
mov
ret
into
push
mov
mov
mov
push
jo
mov
daa
out
xor
iret
push
test
jne
jnp
imull
rorl
xor
dec
xchg
test
push
repz
pop
pop
in
movb
test
adc
adc
push
popa
and
jp
ret
or
jns
ret
inc
notb
mov
xchg
mov
and
pop
rcrb
dec
lcall
sbb
inc
negl
push
jno
mov
xlat
sti
jle
stos
add
mov
pop
push
mov
movsb
sub
inc
xchg
ljmp
cwtl
outsb
push
mov
inc
insb
add
xchg
add
and
jns
imul
inc
mov
ror
adc
loopne
cli
mov
or
ficoml
xor
fwait
pushf
mov
jbe
add
imul
ret
outsl
fsubrl
lea
repz
and
jg
push
adc
or
arpl
loop
mov
int3
xchg
sbb
mov
fimuls
or
imul
mov
int3
je
scas
lahf
and
jp,pn
sbb
xor
push
push
fisttps
dec
sbb
or
push
xchg
ss
or
out
xor
push
add
jg
rcll
inc
pushf
jg
popa
xchg
xchg
add
sub
cld
mov
cmp
adc
sbb
loopne
or
push
movsb
stos
xor
mov
xchg
popf
jecxz
aas
cltd
xlat
push
icebp
pop
cmp
mov
sbb
add
aaa
adc
lret
jmp
jnp
gs
or
push
lock
lahf
in
iret
pop
ret
dec
or
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
mov
mov
mov
push
stos
iret
pop
daa
out
daa
aam
mov
cmp
xchg
push
loop
xchg
aad
xchg
loopne
hlt
jp
sub
mov
filds
imul
std
jne
cs
xchg
arpl
fmuls
sub
add
dec
sub
push
and
mov
cwtl
jmp
inc
mov
int
push
pop
scas
pusha
in
xor
out
xor
shlb
jmp
or
stc
xchg
jae
xchg
mov
pop
movsl
fmul
sub
es
pop
shl
dec
sahf
imul
add
jle
cmp
aaa
ljmp
orb
outsl
pop
cwtl
add
adc
xchg
add
adc
dec
and
scas
icebp
adc
in
jge
jne
push
cmpsl
ljmp
jecxz
lahf
in
lcall
out
lcall
inc
cmp
insb
rclb
movb
fsub
out
add
add
das
cmc
lret
push
xor
mov
cmpsb
out
mov
test
das
and
adc
mov
loopne
mov
movsb
push
sbb
cmp
pop
push
xor
stos
and
add
fwait
push
sahf
push
sub
push
sub
lock
xor
fsubl
push
mov
sti
arpl
dec
loop
aas
outsb
fadds
cld
add
iret
sbb
add
mov
sub
insb
and
std
ficoms
out
sahf
sbb
mov
mov
icebp
hlt
jg
clc
dec
add
mov
and
sub
popf
aad
xchg
push
jge
push
mov
push
js
mov
mov
jbe
mov
out
and
mov
outsl
arpl
movsl
jmp
rcr
and
jns
in
pop
push
ja
sti
js
decb
fptan
sub
or
pop
lods
iret
xchg
imulb
popa
into
insl
mov
cmp
addr16
xor
or
cmpsl
mov
leave
out
dec
xchg
cmpl
sbb
stc
sti
jo
in
rol
xor
jns
iret
sub
and
out
add
fwait
in
pop
in
push
imul
jne
mov
push
testb
pop
inc
loope
jb
ss
scas
lods
sub
outsb
sbb
push
insl
dec
divb
lods
adc
mov
es
cmc
sbb
incb
arpl
mov
call
neg
repz
cmp
roll
push
mov
mov
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
or
out
clc
fwait
inc
daa
test
inc
push
int
or
mov
rcrb
cld
cmpsl
dec
sbb
mov
or
imul
cmp
shrb
ja
lret
push
push
push
or
test
das
jb
cmc
into
mov
pop
dec
xor
sub
inc
jge
and
aam
or
inc
pusha
adc
pop
in
jg
repnz
adc
je
inc
cmpsl
inc
pushf
xchg
mov
lea
pop
popf
or
xor
pop
pusha
fbstp
les
in
adc
rclb
notl
lahf
mov
into
cmp
inc
push
les
ja
mov
jnp
ja
cmp
movsb
scas
sbb
leave
dec
lock
mov
xchg
jp
and
or
inc
inc
inc
push
imul
lds
scas
inc
xor
dec
and
or
xchg
nop
sbb
xchg
and
dec
xchg
fwait
sbb
clc
xchg
ljmp
and
stos
repz
mov
pop
das
jle
adc
xchg
in
mov
cmc
mov
test
xor
repz
cmp
dec
dec
rcrl
shrb
sbb
push
dec
sbb
push
nop
push
filds
cmpsb
mov
push
dec
xor
mov
lds
sbb
cmpsl
push
aad
cs
xor
pusha
ljmp
mov
xchg
push
dec
dec
mov
dec
out
dec
xchg
xor
mov
das
js
jae
and
loop,pn
xchg
outsl
lods
aad
sub
dec
sbb
sub
scas
test
adc
mov
rorl
addr16
mov
cmpsb
pop
xor
in
xor
rorb
enter
or
into
xchg
jo
mov
pop
push
mov
cmp
lock
sbb
sbb
mov
mov
fwait
addl
xor
xor
mulb
stos
inc
xor
loopne
xor
xchg
pushf
mov
roll
mov
mov
or
js
bound
repz
fst
xchg
push
xchg
sub
out
jbe
sahf
repz
sarb
lcall
mov
ret
psrld
mov
lods
or
add
cmc
jnp,pt
cmc
icebp
popa
push
mov
jge
out
int
fcomi
inc
clc
adc
dec
imul
movsl
orl
pop
mov
mov
lods
cli
icebp
dec
xchg
aam
xor
leave
fistpll
hlt
cli
push
push
outsl
jb
dec
mov
clc
fucomip
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
or
aaa
adc
lea
adc
add
lcall
cmpsl
cmc
arpl
xchg
outsl
dec
gs
pop
pop
mov
lods
adcl
jns
sti
or
sbb
dec
aaa
adc
add
xchg
lods
xor
cmp
add
sub
adc
ds
outsb
ds
rol
push
out
lea
pop
push
cs
jmp
dec
jge
or
mov
in
mov
dec
pop
in
shlb
and
hlt
fstpt
sub
adc
mov
sbb
and
sti
jle
repnz
sarb
jg
ss
and
enter
mov
addr16
mov
mov
cmc
mov
push
adc
add
xchg
scas
and
xchg
jne
negb
and
pop
cmpsb
lcall
mov
pop
std
pusha
aas
and
sbb
stc
inc
xchg
sahf
stos
dec
push
mov
ja
mov
mov
aam
out
sbb
push
notb
pushf
dec
mov
pusha
jbe
call
xchg
jae
add
adc
inc
mov
and
inc
cwtl
sub
pop
xchg
xchg
pop
adc
xchg
out
fidivrs
mov
jp
sub
push
mov
cmp
aam
mov
pushf
cltd
scas
dec
mov
nop
and
adc
movsl
repz
xchg
aad
fldl
fldl
gs
iret
xchg
or
je
pop
int
loope
cs
cmp
fwait
scas
mov
adc
lret
fiaddl
mov
xor
imul
sbbl
dec
push
filds
dec
repnz
sbb
je
xchg
jbe
les
fwait
pop
cmp
clc
and
pop
xchg
or
sbb
xor
mov
popa
push
addr16
mov
add
test
in
cs
and
outsb
hlt
jnp
enter
mov
lock
shrb
add
clc
fcomps
test
mov
adc
setbe
cli
cmp
xor
jae
or
push
popa
push
into
stc
jle
es
xlat
dec
call
dec
in
fdivrs
in
sbbb
notl
test
data16
sbb
xor
les
jge
xor
int3
inc
or
fisubrs
out
mov
loopne
jmp
pop
push
cmp
adc
cltd
mov
cmpsb
inc
xor
sub
jp
cwtl
and
in
pop
pop
xchg
pop
mov
sbb
subb
mov
repnz
js
insb
sbb
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
int
mov
lea
adc
pop
add
insb
cmp
and
les
aam
jmp
loop
stc
std
enter
clc
enter
repz
dec
and
ret
jbe
nop
enter
movsl
push
cmp
outsb
aad
sbb
xlat
lahf
xchg
push
dec
push
xlat
ds
push
shrb
and
scas
inc
into
daa
mov
and
mov
mov
lock
out
sbb
dec
push
lcall
jmp
push
adc
imul
sub
push
add
push
andl
cmpsl
repnz
es
push
cmpsb
rolb
addb
jge
push
bnd
cwtl
adc
bound
mov
push
test
pushf
test
jg
and
movsb
or
or
pop
sub
stc
test
lret
add
or
setae
rol
icebp
test
xor
scas
repnz
leave
test
dec
pop
inc
je
or
xchg
push
fwait
pop
jmp
cltd
jl
sub
je
sbb
cli
call
mov
fistl
jmp
call
push
fwait
mov
push
inc
mov
mov
mov
dec
call
mov
fldenv
hlt
stc
or
mov
or
push
scas
rcrl
cmc
hlt
cmc
cld
fisttpl
xor
divl
sub
xor
movsb
imul
jg
cmc
pop
sbb
dec
add
cli
int3
psllq
nop/reserved
mov
int3
scas
call
mov
popa
fimull
sub
push
fnsave
xchg
imul
mov
sbb
sub
sub
pop
push
sbb
adc
xor
add
dec
cmp
aam
xchg
shrb
mov
lea
or
arpl
movsl
sarl
xor
mov
pop
adc
stos
lock
arpl
pushf
sub
pop
fmuls
add
bound
je
and
xor
push
jno
push
ret
inc
cwtl
cmp
pop
or
cmpb
jge
lods
xchg
push
addr16
rclb
in
xchg
mov
mov
sbb
xchg
push
mov
add
pop
das
cld
scas
pop
ljmp
cli
pop
test
fimuls
sbb
mov
cli
insl
cmpsb
jecxz
fs
jg
sbb
cld
ss
cmp
cmp
cmp
ret
dec
inc
aaa
shll
es
out
cmc
xchg
dec
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
pop
dec
mov
lea
adc
das
dec
push
call
inc
aas
sbb
scas
push
mov
hlt
push
cmp
loope
mov
mov
leave
mov
test
stc
mov
insb
lcall
dec
xchg
mov
push
les
dec
in
sub
iret
pop
lcall
pop
add
mov
add
stos
or
push
adc
in
aam
add
push
adc
or
stos
jmp
nop
sub
stc
inc
mov
sub
xor
mov
jno
push
scas
jne
add
call
out
adc
stos
loopne
addr16
out
lahf
pop
add
mov
mov
xchg
mov
sub
popa
adc
sahf
dec
in
lock
cmp
mov
add
pop
jae
xlat
pushf
getsec
lods
jno
mov
fwait
icebp
dec
inc
mov
xchg
icebp
movsl
arpl
jb
adc
inc
addr16
mov
cmc
icebp
dec
enter
cmp
push
dec
inc
loopne
lret
pop
aas
sbb
enter
mov
pusha
xlat
sbb
jp
inc
mov
les
xor
cmp
pop
rolb
xchg
das
push
testl
inc
fdivrs
adc
hlt
add
aam
in
sbb
mov
mov
mov
xor
xor
fnstenv
add
dec
movsb
cwtl
inc
inc
cmp
xlat
jb
xchg
arpl
lock
cmp
mov
mov
and
fsts
test
xchg
gs
mov
out
cld
aam
sub
mov
cwtl
push
cli
sub
rcrb
movsb
test
ds
push
jmp
dec
fidivl
inc
dec
or
jae
xchg
out
xchg
repnz
push
xor
in
cmp
sbb
das
push
aaa
add
scas
fstpl
testb
jl
ljmp
hlt
js
add
lea
sbb
xlat
call
pushf
mov
frstor
minps
lods
leave
mov
and
test
mov
xchg
leave
cmp
and
fwait
cld
push
or
or
mov
mov
push
inc
push
repz
jbe
lcall
xchg
in
out
lock
mov
fs
mov
test
sub
pop
cmp
dec
popa
imull
neg
and
sbb
inc
iret
lds
cld
ret
mov
daa
or
test
jmp
in
xor
xchg
out
loop
rorb
fcoms
cmp
sub
inc
je
pop
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
lahf
push
push
daa
adc
lea
adc
fldcw
xor
add
roll
and
xor
ret
sti
scas
out
inc
ja
dec
movsl
dec
das
push
mulb
pop
jb
out
cmpsl
sub
mov
movsb
inc
cwtl
aad
in
xor
mov
fwait
jnp
xlat
inc
js
scas
pop
addb
nop
jnp
xchg
bound
scas
out
mov
popa
cmpsb
push
outsl
leave
and
sbb
out
mov
push
push
flds
xchg
mov
adc
add
ret
idivb
call
mov
fs
test
mov
adc
fwait
pop
ret
call
popf
mov
int3
lret
imul
mov
das
mov
test
shl
and
data16
mov
roll
xchg
mov
fimuls
repz
les
push
xchg
sub
test
arpl
sbb
jl
pop
dec
lods
shrl
sbb
movb
rclb
loope
orl
jbe
pop
and
sbb
rcrl
inc
adc
pop
lahf
popa
ss
ret
jle
testb
imul
and
xor
clc
pop
adc
inc
dec
in
fcmovbe
adc
push
adc
stc
mov
mov
jmp
mov
mov
lods
and
loope
ds
dec
lods
mov
das
lock
jl
and
daa
pop
sbb
insb
mov
or
pop
stc
cmp
aaa
jo
icebp
cmp
or
fildll
push
xchg
cmp
dec
push
sub
aad
rol
lret
dec
in
jne
in
or
pop
xlat
xchg
add
cmp
pushf
push
pop
lahf
pop
pop
test
std
and
mulb
call
jns
fwait
stos
dec
ret
es
movsl
mov
and
aaa
movsl
rorb
mov
push
adc
adcl
aaa
xchg
fucomp
std
push
test
stos
mov
pop
jecxz
loopne
lods
push
mov
mov
lcall
mov
decl
es
sub
xchg
mov
xor
jl
push
add
shlb
xorl
mov
pop
dec
cs
popf
sub
push
dec
scas
push
xor
test
and
cli
outsl
pop
push
outsb
mov
push
xchg
cld
pop
cltd
cmp
adc
shrl
lret
dec
stos
es
lahf
mov
add
cmp
cmp
ljmp
ds
test
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
sbb
jl
popf
sbb
pop
ds
dec
in
mov
idivb
mov
leave
fmull
ljmp
loopne
in
jne
lret
mov
sti
mov
pop
mov
rcrl
add
data16
push
add
lahf
int3
pop
jae
in
fnstcw
dec
sahf
mov
xchg
jo
mov
es
test
aad
pop
fdivs
je
xor
sub
ljmp
mov
cmc
js
mov
popf
dec
jecxz
mov
jmp
sbb
lods
data16
movsl
jecxz
cmp
mov
xchg
aas
movl
mov
cmp
adc
inc
sub
xor
fnstsw
test
into
dec
sbb
sbb
imul
sbb
mov
pop
rcl
sti
cmp
xorl
mov
fmul
popa
shlb
dec
lds
je
fmull
je
inc
hlt
add
add
or
pusha
add
dec
roll
push
push
stos
into
mov
movb
lcall
mov
cmpsl
out
mov
jbe
mov
push
lds
jb
or
lods
jmp
out
cmpsl
add
xchg
pop
mov
mov
cmpsb
pop
insl
inc
adc
std
lods
notb
out
insb
push
test
push
shll
or
jge
fnstsw
and
mov
call
shll
add
lea
mov
pop
jo
mov
fmuls
xor
imulb
call
jmp
rorl
jo
cli
xor
insl
test
cltd
into
and
mov
dec
sbb
cld
xchg
inc
nop
xor
fdiv
and
pushf
mov
xchg
in
pop
inc
jmp
data16
rclb
jo
call
fwait
mov
mov
push
out
cmp
test
pop
xchg
or
sbb
ret
mov
in
jb
loop
cmpsl
aaa
hlt
xchg
decl
cli
rclb
dec
and
scas
test
mov
inc
inc
rcrl
or
add
arpl
gs
clc
mov
addr16
out
push
jp
inc
insb
repnz
mov
shrb
mov
pop
popa
pushf
dec
test
ja
push
jmp
in
cmpsl
or
pop
adc
ss
cmp
adc
mov
pop
into
jecxz
push
mov
aam
ljmp
fs
fcmove
mov
sub
xor
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
xchg
js
sbb
adc
or
push
jl
ret
xchg
or
filds
pusha
or
cmp
into
xor
sti
je
push
rorl
mov
fwait
aam
pop
repnz
arpl
jle
repz
pop
test
pop
dec
pop
fs
shr
mov
lock
hlt
cltd
jne
or
jp
lret
jle
push
adc
mov
insb
out
cmpsl
scas
cmp
sub
adc
or
dec
stos
repz
pop
adc
pop
mov
out
leave
mov
das
insl
push
or
in
mov
add
scas
stos
xor
pop
in
pop
and
jno
xchg
popa
call
and
sbb
out
lret
jge
sbb
repnz
push
out
clc
jecxz
adc
cmp
lcall
cltd
xchg
dec
mov
fisttpll
loop
cld
add
dec
in
sbbl
sbb
adc
mov
mov
push
ror
fs
mov
adc
fidivs
sbb
pushl
fstps
mov
ret
mov
add
add
inc
dec
lahf
aaa
xchg
and
push
lds
adc
repnz
scas
inc
enter
loopne
cmpsb
pop
or
cmp
pop
push
xchg
and
mov
mov
jo
mov
mov
lock
ret
dec
pushf
push
int3
fstps
les
lds
out
xor
rcll
out
push
ss
aas
cld
into
mov
or
mov
add
cmp
xor
mov
test
adcl
jbe
fs
mov
fyl2x
xor
stos
test
xchg
dec
xchg
xchg
sbbl
and
insl
adc
pop
cmp
and
dec
pop
and
loopne
subb
push
std
and
mulb
inc
aaa
mov
inc
sbb
mov
stos
inc
mov
push
xchg
out
xlat
adc
clc
and
push
js
xchg
ret
pop
inc
add
arpl
push
cwtl
arpl
addl
iret
mov
in
addb
jb
sub
lock
push
dec
iret
fwait
cmpsl
add
cmp
jle
sub
cmp
loope
leave
inc
or
scas
cmp
dec
push
dec
cmc
ja
ret
fs
lahf
sbb
enter
test
imul
ljmp
mov
cmpsl
mov
jne
xor
jbe
pop
pop
mov
dec
or
clc
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
xor
fidivrl
mov
pop
add
and
push
ret
js
dec
rorl
aad
sbb
repz
xchg
adc
dec
cmp
jae
ret
fbld
dec
push
add
stc
in
jge
les
mov
icebp
icebp
cltd
cmpsl
xchg
std
cltd
ret
pop
and
pusha
int
dec
add
cmc
test
xchg
mov
insb
xchg
push
ja
pop
mov
ret
shlb
cwtl
jae
repnz
scas
cmpsl
or
adc
in
js
popa
jle
outsb
roll
add
subb
fistpl
out
add
popf
fadds
pop
or
cmc
out
pop
pushl
lds
addl
cmc
push
decb
rcll
loope
push
or
cmp
cmpsb
outsl
jnp
mov
imul
lret
repz
xor
inc
sti
jmp
adc
cltd
or
pop
adc
fimuls
aam
jb
insb
mov
in
jnp
xchg
add
leave
in
daa
or
arpl
lcall
jmp
mov
xchg
mov
les
jbe
ss
and
lcall
pop
fs
cmp
sub
mov
testl
inc
pushl
mov
cs
shrb
ljmp
aad
shrb
push
lcall
cli
or
mov
jp
dec
sbb
xchg
jp
call
inc
mov
orb
jno
push
xchg
xor
loop
jg
push
xchg
adc
sbb
or
mov
nop
jns
lods
outsb
enter
or
jno
pop
out
stos
stos
mov
inc
push
add
aas
das
ja
and
test
cld
or
loopne
cmc
mov
mov
cmp
and
xchg
sti
shrl
sub
xchg
mov
or
cmpb
sahf
add
icebp
inc
scas
sub
mov
mov
xchg
pushf
mov
push
push
in
adc
mov
sub
mov
imul
sbb
xchg
scas
or
cmp
mov
into
mov
in
mov
pop
pop
mov
dec
cmp
repz
adc
push
test
stc
aas
push
in
add
or
jo
adc
cmp
ja
xor
xor
add
dec
mov
movsl
sub
xchg
ret
and
xchg
mov
and
bound
jb
sub
shrb
enter
out
xchg
gs
sbb
xor
mov
xchg
jle
jmp
repz
push
or
wbinvd
and
sar
mov
xor
jne
incl
jbe
xchg
sbb
imul
daa
mov
inc
fnstcw
pop
repnz
mov
sbb
pop
stc
xlat
je
xchg
inc
scas
add
ss
fiadds
test
daa
mov
cmpl
leave
enter
dec
fstl
mov
ljmp
out
cltd
sub
or
mov
dec
fistps
add
js
imul
aaa
inc
xchg
mov
mov
jbe
or
dec
push
arpl
push
jo
xchg
fisubrs
mov
stos
lock
ss
in
mov
mov
fcmovbe
ret
sub
testb
xchg
pushf
and
repz
jmp
lods
and
mov
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
out
mov
mov
mov
call
popa
addb
popf
dec
jno
mov
js
testb
xchg
or
jmp
jg
push
repnz
leave
cli
adc
jo
and
test
and
inc
out
mov
sbb
call
mov
and
or
ja
xchg
xchg
sbb
cmp
or
movsb
cmp
sbb
hlt
sahf
lcall
push
xchg
dec
imul
loope
or
mov
and
cld
fisubrl
lret
pop
pop
add
and
dec
test
xchg
sub
dec
aad
mov
or
mov
ja
and
add
mov
jnp
or
mov
stos
cmpsl
xor
mov
aam
jo
and
sbb
in
jge
out
fcoms
insl
dec
icebp
or
pop
pop
fwait
std
push
cmp
in
movsb
jl
mov
inc
and
scas
decb
push
fldenv
cld
lcall
add
pop
sbb
in
jg
test
and
mov
pop
lcall
sub
mov
negl
xlat
sub
cmp
or
and
xorl
nop
lds
lock
jo
subb
ficoms
pop
arpl
cmc
stos
hlt
mov
clc
mov
cmp
xchg
mov
or
repnz
mov
lods
mov
and
push
ja
push
add
add
sbb
mov
mov
mov
pop
sub
popf
pop
stos
push
pop
pop
jmp
loop
loop
xlat
fs
adc
ss
xor
jge
outsb
sub
xchg
pop
inc
cmpsl
sar
mov
lods
in
sub
lds
imul
repnz
jno
mov
push
lods
test
dec
movsl
stos
jmp
arpl
mov
xchg
xchg
inc
outsl
sbb
dec
testb
mov
and
pop
xor
mov
adc
mov
cmp
lods
daa
rcl
lret
divb
xor
cmpl
mov
hlt
pop
mov
jecxz
leave
out
xor
push
negb
mov
popf
cld
ret
loopne
push
adcl
mov
dec
xchg
sbb
test
daa
ret
mov
xor
mov
loop
mov
adc
ret
cmp
clc
xchg
ds
jmp
paddw
enter
arpl
scas
and
shrb
insb
adc
dec
pop
mov
aas
cmp
roll
out
jns
inc
mov
push
jne
xchg
mov
jno
jecxz
mov
lea
or
mov
ss
mul
movsb
repz
sbbl
cmp
mov
pop
xor
testb
inc
lods
add
hlt
xchg
adc
adc
mov
aam
shll
mov
cmp
jecxz
pushf
dec
leave
cmp
loop
inc
lock
add
push
out
aaa
cltd
in
xlat
jl
jl
in
jp
repnz
insb
in
fdiv
stos
fsts
rcl
addr16
lret
pop
xchg
icebp
test
test
hlt
das
ret
jp
add
jne
loopne
sub
jecxz
pop
icebp
mov
lds
scas
clc
ds
mov
jno
and
ds
in
sub
xchg
test
dec
in
cmp
adc
mov
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
push
pop
adc
adc
stc
pop
sbb
xor
inc
adc
nop
shlb
out
adc
lods
mov
pop
push
sub
sbb
je
loop
lods
clc
out
add
mov
stos
add
sub
fimull
add
nop
push
cs
xor
add
adc
xlat
pop
fs
jbe
loop
cli
jne
mov
dec
out
push
pushf
roll
out
test
in
cltd
lret
pop
and
mov
dec
push
sub
jnp
adc
ja
sbb
mov
cmp
loopne
pop
xor
adc
xor
jnp
mov
lcall
cmp
fcomps
imul
loopne
adc
adc
popf
inc
pusha
in
add
or
data16
and
cltd
loopne
js
cmp
lds
stos
lds
imul
shll
push
adc
rclb
imul
repnz
jmp
pop
push
jmp
call
jns
insb
sti
aad
pop
add
out
mov
fidivl
out
in
fdivs
pop
adc
or
mov
leave
and
mov
pop
stos
jmp
cmp
push
xor
or
out
mov
cli
cmpsb
jge
sbb
sub
xor
xchg
fnstsw
jno
inc
xchg
repnz
mov
mov
mov
out
xchg
dec
mov
inc
mov
popf
rcll
sub
xchg
push
daa
scas
inc
mov
inc
in
sbb
test
ds
bnd
fwait
sbb
cmp
orl
inc
sahf
xchg
jns
pop
and
lret
mov
stos
sub
push
jno
int3
push
jnp
dec
and
aaa
add
add
or
pop
je
fs
hlt
mov
ret
div
mov
outsl
jb
cmc
push
lcall
mov
cs
mov
leave
adcb
jbe
lahf
ffreep
dec
jns
mov
push
loop
pop
int3
out
ja
psllw
jb
add
mov
jmp
xchg
out
push
xchg
test
pop
gs
stos
push
mov
and
dec
dec
mov
sbb
adc
push
rcr
enter
insl
adc
sbb
sbb
stos
dec
pop
insl
sbb
hlt
ss
jge
pop
or
aam
out
test
sbb
inc
mov
shrb
scas
popf
jp
pushf
decb
or
xchg
cs
aaa
jecxz
sub
jne
and
push
mov
pop
insb
fxch
cmpb
ja
push
cmp
scas
inc
xor
les
repnz
pop
shlb
jns
xorb
movsb
mov
xor
cmp
mov
push
adc
add
cltd
dec
push
mov
fiaddl
push
out
int
aaa
int3
fdivrs
rclb
lds
ret
adc
insl
pop
fs
test
paddq
dec
test
sbb
in
cmp
out
mov
test
nop
add
rorl
xchg
pop
jmp
add
ret
addr16
fcoml
and
dec
les
cmp
loope
inc
inc
popa
mov
xchg
push
daa
jmp
xchg
cld
push
mov
iret
testl
push
push
insl
xchg
addr16
add
ds
sub
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
mov
call
adc
jae
das
inc
xchg
cmp
sbb
into
add
or
xchg
stos
xchg
mov
xchg
mov
dec
ds
stos
sub
xor
sarl
adc
imul
aad
push
jae
shlb
cmp
push
and
dec
mov
push
scas
mov
cmpl
add
inc
movsb
cs
out
dec
lods
push
mov
sbb
daa
fisttpl
jle
xor
xor
hlt
cld
ss
add
bound
add
loopne
fisubrl
cs
add
and
in
mov
repz
cmc
add
cmp
push
sub
sub
addb
mov
mov
add
add
push
out
bound
int3
out
outsl
fwait
cmpb
ret
pop
jecxz
mov
mov
aas
ret
inc
imul
es
enter
xchg
sub
loop
mov
sbb
daa
jl
data16
jnp
dec
addr16
jle
xorl
add
in
stc
pop
rcrb
dec
jmp
pop
or
ret
fwait
dec
mov
ret
call
sbb
les
mov
test
mov
sbb
ret
inc
lret
add
int
pop
gs
test
subl
out
pop
rcll
fcmovu
inc
leave
aas
rcrl
pusha
inc
es
sbb
into
dec
shll
push
out
and
loopne
inc
inc
bound
push
push
jns
aad
rcll
mov
jae
cmp
fwait
int
mov
fists
and
scas
sbbb
test
nop
cmp
movsb
pop
mov
sti
cs
adc
les
sbb
xchg
lcall
cmp
mov
xor
dec
imul
jge
xlat
popa
scas
add
fs
fldt
inc
jmp
xchg
repnz
es
cmp
aas
inc
pop
frstor
pop
mov
xor
je
ss
test
lods
xchg
xchg
and
movsl
cmp
xchg
add
leave
lret
mov
sbb
mov
in
jae
jmp
cmp
adc
pusha
pop
sub
inc
shlb
hlt
pop
shrb
out
xchg
in
mov
scas
test
mov
xchg
sbb
frstor
mov
jl
add
inc
and
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
mov
adc
adc
fsub
mov
mov
mov
inc
sbb
dec
adc
shr
jb
pop
or
jle
push
pop
fstps
jne
pop
and
aas
dec
adcl
mov
cmp
adc
mov
push
out
push
scas
rcrl
dec
hlt
push
pop
fisubl
ds
xchg
mov
loop
jae
idivl
es
cmc
movsl
lcall
cmpsl
shlb
cli
inc
push
lahf
mov
inc
cli
lock
ret
inc
mov
adc
call
push
mov
sub
popa
ds
out
js
xchg
out
add
push
sbbl
mov
mov
fldenv
mov
fstpl
or
and
jp
cld
scas
cld
xor
icebp
insl
mov
lcall
mov
adc
sbb
stos
repnz
arpl
insb
xchg
xchg
into
dec
stc
jle
decb
je
fimull
in
hlt
push
mov
sub
jne
mov
fisubs
popf
push
sub
jns
dec
cmp
scas
or
mov
pop
imul
cmp
ret
mov
xchg
and
sbb
iret
inc
lahf
mov
or
dec
xor
mov
mov
cmc
pop
xor
cmpsb
popf
cmp
imul
pushf
mul
clc
stos
cld
xchg
jp
xchg
dec
mov
out
outsb
in
std
mov
jns
xchg
ror
add
les
outsl
fcmovb
jb
sbb
in
jno
daa
inc
mov
xor
add
test
fs
mov
shr
xchg
pop
aam
dec
jg
popf
fucomi
cmc
mov
hlt
stos
pop
mov
mov
stos
add
ret
repnz
dec
cwtl
in
xor
cmp
test
rcr
outsl
mov
das
mov
test
push
mov
pop
aad
and
fwait
mov
fsubrl
inc
add
dec
fsubl
jae
test
jmp
ret
mov
clc
mov
xchg
mov
mov
add
in
lret
bound
cwtl
push
mull
pusha
sub
std
in
ljmp
mov
xchg
dec
push
das
cld
cmp
cmc
push
mov
jecxz
sbb
cwtl
negb
and
mov
cmpsl
dec
mov
fimull
and
and
int3
bound
mov
and
stos
std
in
mov
test
push
aad
mov
xor
cwtl
fdivrl
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
iret
nop
js
stc
adc
adc
ljmp
in
aad
int3
aas
mov
shlb
mov
data16
lock
popf
inc
outsb
in
add
cmp
pusha
push
pop
mov
sub
repnz
icebp
cltd
pop
mov
pop
sbb
sub
stos
cltd
sti
imul
adc
dec
xchg
jae
add
add
stos
dec
pop
and
dec
lods
jo
xchg
movsl
xchg
subb
int
xor
test
mov
outsl
and
or
push
fsts
adc
sub
test
pop
in
cmpsl
cmc
add
stos
mov
idivb
int
ja
push
js
nop
fs
sub
fwait
lcall
fcomip
aaa
inc
cmp
pop
shlb
or
xor
jl
mov
sbb
andb
sahf
and
das
adc
xchg
cmp
or
sbb
xor
inc
and
daa
cmp
scas
lea
jg
iret
in
mov
dec
push
mov
dec
cld
and
cmp
cli
jo
mov
incl
fsubs
fisubrs
out
lds
pop
loopne
xlat
xchg
sub
push
sahf
dec
jnp
enter
gs
adc
mov
and
xchg
loop
mov
jo
and
pop
fcomps
int
mov
or
les
jp
lock
xchg
fildll
jecxz
sbb
xchg
test
stos
adc
movsl
pop
test
xchg
lods
push
cltd
gs
shrl
enter
and
push
mov
das
cmp
mov
sbbl
aaa
ficoms
lret
or
loopne
das
gs
fdivs
fdivr
mov
mov
pop
sbb
call
add
or
popa
int3
push
xor
mov
test
or
icebp
mov
push
lods
xor
cmc
push
cs
popf
dec
scas
or
iret
dec
punpckhdq
js
stc
pop
xchg
add
jmp
jnp
mov
pusha
test
cld
dec
jno
rcrl
mov
in
nop
and
inc
aaa
arpl
shrb
loopne
in
cmp
pop
push
xlat
and
fcmove
stos
nop
jnp
inc
popa
cmpsb
jecxz
dec
mov
je
inc
nop
mov
aas
jmp
or
jp
inc
imul
imulb
aam
or
mov
test
testb
sub
wbinvd
add
std
dec
fwait
arpl
sbb
xor
mov
cmpsl
xchg
sbb
xchg
test
enter
sbb
inc
pop
dec
jp
fdivrl
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
testl
adc
lret
aas
ljmp
push
or
mov
into
cmp
mov
pop
out
rcll
shlb
fs
mov
in
jl
mov
pop
mov
mov
in
mov
shll
lods
and
scas
popa
in
clc
xor
and
ljmp
cltd
enter
mov
lods
mulb
movsl
mov
xchg
jno
xor
cltd
mov
add
ljmp
push
adc
push
or
xor
mov
dec
xchg
mov
fs
add
xchg
daa
cmp
push
cmp
aam
and
or
iret
pop
inc
push
jns
sbb
mov
into
lods
mov
sub
outsb
dec
and
dec
add
imul
sti
dec
subb
cld
das
inc
outsb
xor
mov
pop
jnp
scas
in
in
inc
fadds
hlt
xchg
fisubs
add
mov
int3
jns
inc
mov
mov
ret
stos
inc
mov
cmp
inc
sub
ja
add
and
push
mov
insb
arpl
jmp
lods
pusha
stos
cmp
mov
aas
inc
je
xchg
add
push
popa
cli
mov
inc
stc
mov
in
xor
xor
sbb
push
push
scas
in
lods
pop
daa
popf
and
scas
dec
add
ficoml
mov
call
subl
push
and
jge
int3
pop
or
popf
mov
mov
les
in
popa
and
mov
and
test
sti
pushl
mov
sub
cmpsl
dec
inc
test
pop
out
jge
andl
ret
cmp
xor
adc
lahf
xchg
xchg
xchg
mov
test
bound
xchg
scas
mov
sbb
loop
and
or
jbe
jbe
icebp
jl
pop
lods
push
inc
add
xchg
xchg
stos
pop
out
hlt
jo
test
subb
leave
mov
dec
lret
xchg
dec
mov
push
pop
add
inc
sub
rcrl
xor
sbb
mov
test
push
out
fs
xchg
ljmp
repz
fiaddl
jno
adc
test
jmp
push
sub
cmpsl
les
sub
fcmovb
int
push
iret
adc
xor
into
out
fwait
xchg
jl
stc
cltd
push
add
les
inc
mov
xchg
shlb
ss
sbb
xor
mov
xchg
adc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
shl
xchg
xchg
movlps
fdivs
loopne
add
shll
shl
sbb
lcall
push
push
and
lahf
xchg
stos
loop
lcall
dec
sbb
mov
enter
lahf
sub
sub
mov
xchg
add
and
pop
pop
mov
xchg
neg
ror
sub
cmp
mov
and
lret
and
xchg
mov
cmp
push
or
and
int3
mov
xor
jle
mov
xchg
push
mov
stos
pop
push
lock
push
xchg
std
leave
xor
mulb
aad
repz
cmp
jns
enter
lret
aas
leave
jle
mov
addr16
mov
test
mov
or
test
fucomp
repnz
xchg
pop
fistpl
popa
or
vmovups
inc
orl
les
pop
lds
outsl
pushf
outsl
idivb
fldenv
popf
lcall
mov
sbb
adc
sub
cmc
push
dec
mov
test
lahf
fwait
mov
mov
add
push
mov
cmp
sbb
js
repnz
lea
pop
je
lcall
lods
inc
mov
jmp
gs
aas
pop
xchg
or
cmp
mov
xchg
inc
mov
push
sbbb
adc
add
xchg
adc
stos
push
int3
and
cmp
cmpsb
xor
jecxz
adc
and
jne,pt
stc
shlb
jo
mov
and
loope
ret
mov
xlat
cwtl
sub
lock
sarb
jmp
push
xchg
mov
push
push
les
out
add
cmp
push
xchg
ja
push
xchg
sar
jns
cli
rcrl
ret
sbb
pusha
iret
jge
pop
xlat
xlat
daa
sbb
mov
sub
sbb
inc
mulb
std
xchg
clc
cmp
sbb
insl
ret
orl
nop
adc
push
or
sbb
add
dec
mov
xchg
daa
cmpsb
js
testb
cmpsl
xchg
jb
add
push
std
sub
pop
jl
sub
loopne
mov
shl
push
into
xlat
sub
push
bound
push
mov
sbb
mov
jno
dec
iret
in
out
jge
mov
clc
sbb
xchg
or
dec
xchg
inc
mov
mov
ret
mov
sub
xor
jg
jbe
sbb
jp
shll
js
lret
ds
push
mov
lahf
ret
cmp
sub
int3
jmp
cmp
mov
out
push
lahf
scas
pop
inc
adc
push
shrl
shll
and
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
bnd
lods
add
adc
adc
dec
xor
mov
scas
clc
out
or
adc
jb
lret
stos
xorl
push
inc
jg
sbb
sub
add
pop
adc
and
sti
test
cld
es
or
pop
add
mov
jbe
aaa
push
mov
insl
inc
enter
sbb
sub
sbb
xchg
inc
popf
dec
out
jg
or
sti
pusha
xor
and
mov
jl
imul
scas
int
scas
ret
pop
adc
jge
mov
cmp
stos
pop
xchg
or
push
out
jl
pushf
ret
ja
inc
fsubrp
add
in
add
fisubrl
bound
test
sub
lds
xor
sbb
aaa
je
pop
push
or
pushf
push
sub
sub
shlb
xchg
or
fcoml
xchg
icebp
sub
insb
or
push
mov
adc
mull
pop
sbb
fwait
jmp
inc
or
test
mov
imul
adcl
ja
pop
sbb
add
push
dec
jo
loope
outsl
filds
mov
inc
or
add
push
and
mov
in
sbb
mov
or
lcall
sbb
shll
sub
jns
jae
jmp
or
mov
mov
fmuls
push
ds
dec
mov
adc
push
outsl
and
scas
outsb
and
shlb
inc
xchg
lds
popf
pop
pop
repnz
sbb
push
out
sbb
inc
mov
test
dec
mov
pusha
add
dec
mov
xchg
fisubrl
xor
repnz
scas
and
push
dec
push
adc
sarb
push
shll
lds
xor
addr16
into
and
sub
sbb
int
push
lea
les
mov
dec
andl
mov
pusha
or
cmp
adc
jo
loope
out
shr
push
movsl
in
shl
cmp
push
xor
stc
mov
popa
mov
xor
add
es
test
fnstcw
clc
aad
out
mov
sbb
shll
sahf
iret
xorl
mov
jle
dec
xchg
fdivrl
push
adc
int3
je
loop
repz
xchg
push
sub
xchg
sub
mov
cmpsb
ljmp
icebp
idivb
fldl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
sbb
adc
adc
and
in
sarb
pop
pop
or
dec
stc
mov
mov
lahf
sub
push
jo
out
testb
pop
jecxz
mov
pop
sub
inc
push
push
cmp
inc
inc
xor
test
xor
test
cmp
dec
fldl
cmp
sbb
mov
mov
nopl
je
mov
adc
inc
or
pushf
dec
inc
test
aaa
cld
leave
dec
jg
or
data16
popa
mov
cmp
inc
push
movsb
cmp
int
inc
fsubl
loop
daa
mov
xor
inc
arpl
imul
iret
mov
xchg
cmp
push
jg
gs
mov
cld
lds
subb
cmpsl
mov
push
pop
add
pop
push
mov
shll
push
dec
jp
cmp
mov
sarb
mov
or
add
cmpsb
dec
outsl
xor
fwait
push
sub
push
imul
jmp
data16
push
jns
or
je
adc
add
push
dec
int3
jno
jb
xchg
dec
pop
in
imul
popa
inc
xor
addr16
jp
adc
loopne
xor
pop
add
xor
pop
pop
ja
sbb
mov
ret
pop
add
ds
xchg
adc
mov
push
subl
fbld
xchg
push
popf
or
rolb
adc
inc
dec
jmp
mov
push
loope
push
mov
xchg
mov
fbstp
orl
mov
icebp
dec
dec
push
imul
xor
mov
and
cmp
sub
and
lock
add
xchg
mov
adc
pop
cmc
pop
dec
lods
mov
test
movsl
ret
push
inc
or
ror
jb
dec
fdivs
clc
lods
test
shlb
stos
mov
sbb
cli
xlat
and
lods
out
or
cli
iret
adc
jp
mov
dec
cmp
aad
stos
mov
ljmp
inc
outsl
ljmp
lret
pop
add
cmp
pop
and
add
stos
mov
fsub
fsubr
popa
sub
mov
push
sbb
sbb
mov
or
les
mov
ds
icebp
lret
sub
movsl
mov
or
fldt
push
test
dec
hlt
hlt
mov
inc
cmpsb
je
cmp
xchg
fists
orl
out
pop
pop
fucomip
sbb
insb
mov
enter
add
loopne
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
mov
xchg
movlps
test
je
int3
cmp
cli
mov
dec
lea
dec
inc
lds
add
aam
loop
push
xchg
push
ret
nop
and
cmc
cs
mov
push
xlat
inc
jns
jg
nop
mov
add
mov
inc
lret
mov
shlb
into
fsubl
stc
mov
jns
mov
movsl
cli
orb
jnp
in
fsubr
scas
add
adc
int
lods
jp
sbb
pop
addr16
sub
sbb
add
jmp
dec
push
lcall
adc
or
xor
and
stos
jmp
imul
pusha
jbe
cmp
xchg
cmpl
add
nop
lods
lea
jge
loop,pn
pop
out
pushf
outsl
int
pusha
mov
add
dec
outsl
out
mov
jnp
adc
inc
stos
fsubl
arpl
dec
pop
mov
jae
daa
cmp
repnz
dec
out
into
loope
jp,pt
mov
jo
ret
and
ja
cmp
aas
mov
xor
aas
popf
cmp
iret
adc
rcll
lcall
insl
sub
push
bound
xor
add
js
xchg
popa
loopne
cmp
mov
negl
add
es
outsb
mov
cmp
xchg
adc
cld
mov
lods
fcompl
jo
sbb
aas
rep
mov
sbb
adc
dec
leave
fdivrp
dec
imul
aas
mov
scas
insl
xchg
loop
push
imul
in
dec
jo
add
rclb
pop
andl
hlt
xor
les
inc
jbe
add
add
pop
lock
fcmovnb
notb
jecxz
sub
xor
push
out
sbb
dec
in
ljmp
adc
mov
sub
pop
stos
or
orl
mov
popa
pop
ret
mov
ljmp
inc
subb
test
mov
pop
mov
add
inc
push
inc
push
int
mov
repz
rcrl
sbb
and
xor
lret
pop
fmuls
pop
dec
mov
loop
popa
mov
lods
and
sub
popf
aas
mov
xor
pop
mov
inc
stos
pusha
stos
lock
cwtl
es
cltd
cltd
arpl
dec
loope
popa
mov
jecxz
iret
in
jecxz
xchg
and
pop
or
shrl
inc
pop
icebp
hlt
imul
push
xor
sbb
lea
push
dec
fisubrs
shl
sbb
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
mov
aam
adc
pushf
cltd
loopne
adc
cmp
and
in
pop
cmc
nop
cmp
insb
leave
fisubrl
sti
dec
push
stos
add
ror
push
rcrb
mov
ljmp
jbe
in
adc
xchg
or
mov
push
test
outsl
mov
or
or
dec
out
xchg
push
out
enter
xchg
sub
das
xor
pop
adc
data16
es
mov
incl
mov
pop
rcr
inc
insl
dec
fistl
cld
fmuls
sub
call
xor
jmp
pop
adc
mov
adc
jmp
loope
stc
or
je
clc
jge
mov
movsb
cmp
lock
aad
rorl
jbe
dec
loopne
rorl
jno
add
in
stos
xchg
addr16
jno
lock
jb
outsb
cmp
sub
lret
jecxz
shr
push
out
cltd
mov
sbb
cmpsb
pop
add
rcll
sbb
add
xor
pop
pusha
push
dec
loope
sbb
jns
aad
loope
in
icebp
fdivrs
jl
lods
cld
jo
jne
pop
movsb
stc
mov
pop
dec
pop
add
xchg
add
loope
cwtl
rcl
sbb
stos
or
addr16
dec
js
fistl
gs
test
clc
imul
popa
scas
mov
cmp
shlb
and
push
adc
clc
xchg
ljmp
sub
push
mov
inc
cmpsb
cltd
sti
fbstp
test
inc
test
lret
fmull
testb
jb
mov
jns
sub
loopne
pop
jecxz
sbb
or
dec
scas
push
test
inc
gs
cmp
js
add
push
inc
sub
push
mov
adc
pop
in
adc
ja
daa
mov
add
repnz
sbb
dec
xchg
insb
jl
es
mov
inc
sbb
mov
xchg
mov
jecxz
cmp
inc
lahf
adc
xlat
addr16
pop
inc
divb
pop
andl
pop
ja
xchg
mov
jmp
iret
xor
lret
test
xchg
les
or
icebp
jmp
test
jge
es
inc
jno
add
and
jae
in
ja
adc
movsb
aaa
push
out
cmp
outsb
js
mov
pop
push
xchg
push
xor
adc
lds
mov
push
adc
fwait
pop
shll
adc
in
xor
jle
stc
int
or
sbb
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
and
xor
rcll
stos
or
adc
jp
sahf
or
repz
add
das
repz
dec
shrl
repnz
test
adc
dec
adc
aas
popa
sub
pop
lret
inc
cltd
popa
pop
mov
xchg
jae
push
sub
xchg
mov
loop
xchg
jmpw
mov
cmc
add
xlat
and
and
xchg
and
add
lret
mov
mov
mov
lret
cmpsb
lret
gs
imul
in
ds
mov
into
ror
adc
lods
xchg
inc
movups
push
inc
out
add
das
push
dec
xlat
xchg
pop
scas
scas
push
mov
pop
sti
cmp
sub
xchg
ljmp
faddp
inc
mov
test
mov
int3
cmp
push
shll
pusha
rclb
lock
push
das
outsb
and
dec
cmc
sub
mov
loopne
adc
cmp
and
jns
mov
shl
rclb
push
sub
into
mov
push
pop
jl
add
lret
dec
scas
ss
cmpsl
jae
pushf
lret
fdivl
push
lahf
lret
jmp
dec
cmpl
clc
inc
jne
test
push
sar
inc
imul
sbb
std
outsb
fiaddl
cwtl
cmp
sub
push
shlb
cmpsb
stc
push
pop
and
or
cmp
das
mov
adc
or
pop
push
jbe
adc
cmp
daa
and
cmp
or
jno
push
in
sub
stos
addr16
cli
sbb
inc
and
add
outsl
mov
jo
rep
inc
inc
int
pop
into
xchg
scas
cli
jle
jno
push
or
pop
sub
fstps
flds
jmp
cmpsl
cli
sarb
int3
mov
cwtl
andb
pop
push
mov
in
push
icebp
iret
xor
mov
xchg
sbb
jp
leave
inc
je
add
incl
add
inc
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
lds
scas
into
adc
adc
movsb
pop
sbb
popf
xchg
in
add
loope
fmull
stos
into
fmuls
pop
xlat
pop
popf
add
xor
jns
or
xor
test
lock
mov
mov
int3
popf
pop
fsubrl
divl
mov
clc
shrb
leave
cmpsb
dec
ljmp
add
mov
mov
jl
mov
cmp
aaa
mov
sti
scas
movsl
and
in
int3
leave
push
jo
push
in
hlt
push
les
shlb
in
js
pop
adc
ja
jbe
or
mov
repz
testb
test
cmp
leave
insb
jns
push
sub
mov
out
jb
movsb
pop
add
fnstenv
xor
jecxz
cmpsb
stos
popf
jle
fincstp
sub
sbb
fwait
sbb
pop
pop
jbe
addl
in
jle
xlat
shlb
mov
sbb
in
jle
leave
cmp
shll
mov
imul
sbb
dec
cmc
jp
clc
cmc
daa
dec
insl
movsl
lret
test
pusha
aam
inc
fimuls
fildl
pop
sub
aaa
lret
dec
jg
jns
arpl
leave
mov
sbb
xchg
testl
cmp
xor
push
push
enter
fwait
push
cltd
or
push
xor
jno
js
inc
lret
mov
cmpsl
jo
scas
xor
mov
je
pop
jle
ret
aaa
inc
ds
filds
cmc
mov
sub
jae
add
jb
addr16
shrl
xchg
xor
inc
shll
push
mov
lock
mov
decl
cmp
lds
mov
daa
imul
mov
dec
sarb
cltd
mov
xchg
into
mov
popa
out
cmpb
inc
xlat
repnz
mov
dec
fcomip
push
push
jno
leave
in
lahf
test
imul
cmp
daa
mov
movsb
pop
test
pop
enter
mov
jg
cmc
mov
lock
mov
nop
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
xchg
add
mov
enter
fbstp
pop
lods
gs
pop
xchg
ficompl
sbb
sahf
pop
fisttpl
or
lret
jl
pop
mov
add
fisttpll
push
or
js
xchg
or
flds
inc
dec
pushf
adc
and
mov
or
jecxz
rolb
icebp
leave
stos
into
xchg
mov
shll
dec
cmp
jle
add
push
and
xchg
cli
inc
aaa
push
jecxz
cmp
cld
lds
jmp
mov
negb
fnstcw
fisttpll
push
push
inc
imul
std
dec
mov
mov
cmp
lods
shrb
xchg
sbb
push
outsl
push
ljmp
mov
push
mov
aad
and
push
lahf
in
xor
test
nop
mov
test
jbe
cmp
add
xor
xchg
sbbl
cmp
push
hlt
push
mov
mov
inc
adc
mov
pusha
mov
jecxz
imul
xor
ss
cld
mov
jg
adc
outsb
pop
xchg
test
cmp
jmp
mov
stos
jmp
in
js
xor
inc
adc
jne
adc
dec
add
int3
and
cld
mov
xor
push
mov
or
aad
xlat
call
jmp
or
ret
ffree
and
xchg
and
mov
xchg
dec
dec
into
sub
sub
jb
mov
lcall
or
xor
mov
mov
popa
mov
push
fildll
test
pop
add
leave
xchg
jnp
cli
add
gs
dec
stc
aas
gs
jns
adc
iret
les
jno
scas
js
inc
pop
pop
fucom
xchg
es
daa
pop
cmp
mov
push
cmp
sub
push
jl
repnz
add
sbb
es
incl
jmp
inc
cmp
rcrb
sub
fnsave
push
cmp
and
add
test
incl
add
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
jle
mov
enter
sub
stos
mov
loope
and
aas
sub
xor
mov
addr16
pop
leave
mulb
test
adc
movsl
hlt
dec
push
mov
push
push
adc
imul
imul
cmpsb
lret
mov
lods
ficompl
xor
add
notb
mov
lret
scas
notl
sti
mov
mov
push
mov
stc
mov
leave
cmc
fsubrl
mov
out
pop
sub
or
ljmp
jns
sbb
into
popf
mov
stc
inc
sub
mov
stos
mov
and
dec
xchg
jp
cltd
popa
fldl
shlb
sti
loopne
popf
adcl
loop
aaa
cmp
je
push
pop
mov
cs
push
les
int
sahf
xchg
popa
call
dec
int
ljmp
sbb
push
cwtl
inc
rorb
adc
repz
add
jae
in
cmp
js
clc
inc
xor
aad
inc
xor
ss
xchg
xlat
and
or
sarb
stc
xchg
jne
push
addr16
jne
in
cmp
mov
jg
movsb
sarb
xor
imul
ja
adc
das
jne
es
sub
pop
in
jno
icebp
mov
push
mov
xor
gs
cli
jecxz
mov
outsb
data16
inc
and
mov
push
jne
push
sub
mov
lret
push
loopne
sahf
pusha
pop
aas
insl
pop
mov
adc
inc
or
shll
lret
lcall
int
int3
les
push
jno
fsubrs
mov
outsb
into
ret
jo
lods
adc
into
push
out
cld
add
jmp
test
test
push
push
push
shll
xchg
adc
pop
jno
negl
mov
es
jne
jb
adc
enter
lea
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
push
adc
adc
xchg
fistpll
push
dec
loopne
mov
push
mov
jb
push
push
lds
mov
mov
add
pop
outsb
and
mov
es
insl
fbstp
mov
dec
pop
mov
inc
jae
lea
and
jecxz
enter
fwait
and
movsb
mov
cmp
imul
aas
sbb
xor
sti
ja
mov
stc
pop
sbb
js
mov
repz
sahf
sbbb
scas
cmp
clc
jg
xlat
into
imul
lock
pop
dec
cmc
mov
hlt
gs
lds
inc
dec
repz
in
ret
in
jmp
repz
aas
mov
xchg
ret
xchg
stos
iret
test
fiadds
test
into
je
ds
and
jae
cmpsb
sub
or
std
jne
jg
imulb
xchg
fwait
hlt
jo
pop
push
iret
adc
ljmp
xchg
dec
and
jo
fnsave
cmpsl
inc
xor
imul
loop
inc
ffreep
add
stc
fdivl
pop
sbb
mov
movsb
or
insl
mov
inc
jle
mov
and
addr16
mov
iret
orl
cmp
or
out
mov
adcl
push
xor
shl
cmc
dec
cmc
sub
icebp
adc
incl
js
gs
xchg
fcompl
addr16
mov
or
mov
leave
hlt
mov
lock
rcl
inc
inc
es
insb
pop
jo
frstor
mov
or
or
jae
adc
dec
cmp
xor
and
call
adcb
xchg
inc
push
andl
ljmp
inc
aas
dec
pop
ss
or
push
repz
inc
push
lods
sub
jl
test
das
int
adc
mov
or
loope
in
out
int
push
cmp
inc
call
les
sub
xchg
into
leave
ljmp
test
xchg
cmp
add
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
popa
inc
stos
jge
adc
adc
xor
inc
cmp
imul
std
in
xlat
jbe
jbe
cltd
pop
pop
andl
mov
xor
mov
lahf
push
outsb
push
ret
ret
in
loope
sub
loope
push
cli
lods
leave
cmp
sbb
mov
sbb
sarl
shl
scas
scas
mov
bound
mov
fsub
pop
out
into
test
or
or
clc
xchg
pusha
imul
or
pop
cmp
xchg
je
test
out
dec
adc
mov
mov
inc
stc
fwait
ljmp
dec
flds
ss
mov
mov
call
mulb
rorl
sbb
or
out
xor
push
in
inc
sbb
push
inc
shl
stc
adc
sbb
stos
xchg
mov
cs
clc
add
or
and
add
adc
aam
cmc
mov
xor
dec
lods
adc
sbbb
popf
insb
pop
jns
loope
inc
movsl
sti
and
adc
inc
mov
or
outsl
mov
mov
sarb
and
mov
or
mov
clc
sbb
rcrb
rcl
pop
lds
mov
sbb
cmp
xchg
bound
inc
lahf
push
mov
das
mov
mov
iret
lds
xchg
mov
hlt
mov
and
dec
push
xchg
mov
or
sbb
in
sbbb
mov
add
jne
arpl
jmp
sub
ret
rcrb
scas
push
inc
fcmovnu
xor
clc
sarl
pop
inc
hlt
fsubrl
cmc
jns
mov
cmp
fnstsw
hlt
orl
daa
adc
dec
inc
jne
add
and
sub
stos
mov
call
mov
and
sub
lret
movsb
or
sbb
scas
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
pushf
lods
xor
adc
fdivs
xchg
push
cwtl
sbb
or
hlt
lahf
dec
inc
ja
add
icebp
scas
inc
stos
sbb
push
or
loope
pop
sub
xchg
sbb
int3
stc
ficompl
jbe
scas
xchg
ffreep
cwtl
stos
bound
push
xchg
jae
cs
outsb
cld
pushl
sti
jecxz
cltd
in
int
out
mov
jo
negl
jbe
scas
scas
xchg
mov
push
test
cmp
jl
pop
push
sbb
std
mov
pop
push
cmp
lods
mov
sahf
movsl
cmc
push
cmp
dec
xchg
ds
sbb
mov
std
cli
dec
pop
pusha
sub
sub
test
loope
movsl
sbb
mov
mov
or
cmp
lods
fwait
gs
fisubrl
jecxz
popa
ret
xor
loope
xor
mov
xchg
jge
ret
dec
inc
rorl
ret
cmp
ja
test
pop
mov
in
jno
insb
xchg
xor
pop
xchg
rolb
test
xor
fldcw
mov
cmp
sbb
into
subb
in
out
shrb
xchg
sti
adc
cmp
je
lret
mov
mov
pusha
push
cmp
in
sub
push
call
shlb
sbb
stc
inc
dec
dec
pop
mov
rep
mov
das
mov
sbb
flds
cs
clc
les
add
and
in
mov
sarb
negl
sbb
xor
jns
aas
push
stc
adc
jns
add
add
movsl
cmp
out
jl
negl
mov
mov
adc
sti
pop
cwtl
clc
lret
mov
push
adc
jnp
cwtl
insb
cmp
rolb
loop
outsb
mov
ja
dec
adc
mov
xchg
iret
cli
das
push
adc
es
xchg
xlat
movsl
inc
jne
push
mov
xlat
pop
pushf
mov
fwait
cmp
lock
aad
xchg
mov
mov
lds
data16
xor
push
dec
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
xchg
push
mov
enter
mov
xchg
pop
dec
mov
lcall
loopne
insb
lcall
adc
sti
fdivr
inc
lret
aaa
int
pop
or
mov
jg
mov
in
mov
mov
dec
xor
js
daa
das
jns
adc
sub
mov
pop
imulb
fists
cmpsl
sub
mov
lds
or
sbb
sbb
add
jo
pop
mov
xchg
mov
enter
loopne
adc
push
bound
mov
test
idiv
aam
movsb
scas
cmp
adc
int3
test
add
addr16
cmp
push
push
xchg
imul
sub
jmp
pop
ss
mov
or
lods
pushf
sbb
int3
lods
pop
push
sub
jp,pn
or
lods
jb
int3
jle
popa
les
pop
pop
jnp
outsb
mov
and
repnz
mov
pusha
and
aam
shll
test
adc
aaa
inc
xor
jl
jg
pop
pop
xor
mov
add
gs
ljmp
push
and
xchg
testb
jp
aaa
scas
dec
xchg
dec
mov
shrb
sbb
mov
jno
or
push
addr16
int
popf
mov
lret
mov
bound
clc
cmpb
sbb
mov
fsts
mov
sbb
sub
js
xor
xor
repz
stos
mov
ffreep
frstors
sbb
mov
mov
mov
or
sbb
incl
sub
mov
cli
cmc
jge
call
jno
add
jo
add
lea
clc
or
add
out
dec
mov
or
rcrb
dec
sub
shrb
adc
push
or
cs
pushf
mov
pop
stc
push
clc
xchg
mov
out
inc
sti
shll
sahf
and
or
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
xor
adc
adc
lods
sbb
mov
lea
sbb
xchg
mov
ret
push
rorb
and
pop
in
inc
lret
jae
mov
sub
jge
inc
in
fs
mov
pushl
fwait
cltd
push
mov
jecxz
sbb
stos
mov
clc
add
adc
stos
xor
hlt
xchg
pop
pop
sub
sbbb
aas
stos
cmc
or
fists
mov
repz
bound
out
xchg
idiv
sub
decb
cld
xor
fdivl
push
outsb
std
adc
daa
cmpsb
xchg
mov
test
xor
jne
lds
gs
fcompl
lcall
sahf
repz
std
sti
adc
xchg
dec
add
loope
mov
mov
imull
inc
and
popf
inc
in
push
lds
jmp
call
cs
mov
sbb
push
pop
decl
mov
mov
or
mov
jge
push
js
dec
out
sbb
sub
int
aad
jl
push
shlb
push
fnstcw
sub
rolb
inc
ja
push
mov
or
lods
push
lods
xchg
inc
mov
cmpsb
xlat
jecxz
rclb
out
sahf
mov
dec
jg
mov
rcr
cmp
sub
rcl
or
emms
mov
fs
jnp
cmp
add
dec
jbe
mov
xor
xor
xor
jbe
mov
xchg
push
loopne
xchg
loope
jge
jae
pop
insl
pop
or
sbb
push
call
push
or
mov
mov
xchg
mov
lea
test
jb
das
out
xchg
out
inc
ret
sbb
imul
lods
sbb
in
inc
andl
push
fnstcw
pop
push
adc
insl
ficoml
mov
pop
or
int3
ljmp
es
push
stc
movsl
rcll
adc
pop
je
fs
pop
mov
xlat
out
mov
jb
sub
cmp
mov
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
xchg
adc
adc
adc
loope
mov
shll
cmp
ljmp
jns
xor
ljmp
data16
aam
mov
fisttps
pushf
xor
xorb
out
inc
inc
lock
push
or
clc
popa
shll
insl
mov
sti
jle
repz
and
sbb
xchg
pop
sbb
or
cmp
fistpll
in
addb
scas
pop
sti
in
cwtl
fnstsw
push
xchg
cmpsl
clc
mov
lahf
rcrl
popf
or
mov
cltd
stos
and
outsb
or
cmc
out
inc
jmp
adc
push
dec
imul
add
push
out
sub
push
cmp
cmp
loope
mov
jnp
inc
inc
test
or
adc
fcmovb
or
pop
cmp
scas
cld
les
push
push
xchg
adc
add
sub
mov
and
mov
pop
mov
fnsave
mov
cmp
mov
pop
sbb
mov
outsl
push
leave
imul
mulb
cmovg
cmc
jb
sub
jmp
inc
das
outsb
jle
fsubs
push
cmp
jge
jne
pop
lds
sub
test
es
shrl
adc
lahf
pop
mov
fildll
inc
cmp
fdivrl
sub
pop
xor
adc
sar
clc
es
mov
out
adc
pop
sahf
cmc
sub
nop
mov
out
mov
incb
push
mov
cs
mov
or
cmpsb
mov
stc
adc
sarb
scas
rcr
jmp
mov
hlt
rorb
mov
divl
test
out
orb
dec
pusha
ja
add
mov
js
mov
aam
mov
pop
pushf
jns
sbb
aaa
sbb
in
movsb
cmp
outsb
je
pop
popa
push
or
jge
int3
and
ret
stos
cmp
bound
mov
mov
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
pop
es
movsb
adc
adc
cmc
pop
jmp
shrl
insl
sub
jg
push
pop
sbb
mov
xchg
lock
test
cmc
cmp
mov
out
adc
pop
insl
mov
xor
cli
leave
loop
pop
fmul
sarl
inc
inc
pop
fs
lcall
icebp
in
das
cmpsl
loopne
jmp
pop
rcr
push
xchg
inc
add
js
mov
cmp
cltd
jb
cmc
sbb
cwtl
iret
mov
pop
mov
jl
pop
std
lds
inc
mov
sub
lcall
lahf
inc
mov
fwait
lods
mov
add
repz
xchg
mov
push
sub
call
xor
xor
in
test
mov
loopne
push
inc
xchg
ret
push
xor
movsb
and
mov
cmpsl
sub
shll
mov
rorl
ljmp
mov
xchg
cmpsb
xchg
lods
jecxz
out
sub
les
jns
xor
ror
add
jb
mov
jbe
dec
orb
dec
xchg
ljmp
repnz
mov
sahf
lahf
subl
loopne
xor
jp
gs
aam
adc
mov
mov
mov
insl
pop
and
jns,pn
jb
pop
or
mov
notb
cltd
dec
push
notl
xor
push
lock
roll
cmp
cmpsb
sbb
jge
jg
fidivrs
ret
scas
jecxz
mov
jmp
xorb
pop
pop
mov
pop
fwait
push
inc
arpl
add
into
roll
push
movsl
mov
aaa
ljmp
aam
out
jb
rorl
cmp
push
repnz
jmp
popa
or
xchg
lock
adc
loopne
jmp
sti
es
les
mov
push
or
cld
es
add
aad
pop
movsl
hlt
popa
xchg
dec
lret
nop
pusha
in
mov
repnz
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
inc
xchg
js
mov
adc
and
cli
das
test
sbb
imul
add
sub
sub
add
idivb
es
push
hlt
jg
out
add
inc
xchg
mov
bound
mov
mov
out
mov
lret
or
gs
xchg
xor
cmp
sub
shll
rolb
stos
enter
sbb
shr
int
mov
ret
mov
jg
int
push
xor
sub
dec
add
std
rcll
jmp
jb
faddl
fimuls
mov
out
shrl
int
mov
out
inc
dec
pop
mov
mov
xlat
nop
pop
inc
out
cld
and
jg
insb
jmp
push
ret
jp
rorb
jmp
movsb
movq
pop
mov
jae
jno
dec
sbb
mov
jnp
sahf
lock
pop
ds
mov
pop
push
cmp
loop
stc
aad
ja
add
mov
or
ret
out
jnp
addb
cwtl
cli
sbb
and
xor
push
dec
dec
xor
adc
dec
push
int3
xor
sub
repnz
test
movsl
push
stos
pop
mov
pop
sub
jno
in
test
fld
fsubrs
push
mov
mov
adc
push
xor
in
jge
jge
nop
addr16
mov
cwtl
add
data16
shlb
fists
les
bound
dec
jge
icebp
fs
dec
dec
cmpsl
mov
xchg
pop
fimull
pop
pop
sub
pop
sbb
mov
repnz
idiv
mov
test
sub
in
sbb
fwait
xchg
lea
std
jle
push
push
lds
jmp
out
pop
ja
outsl
sti
stos
jae
add
xor
push
jmp
addr16
and
and
enter
insb
fsubrs
inc
pop
adc
sbb
cmp
pop
daa
sbbl
and
stos
sub
or
pop
push
imul
insl
xchg
sbb
and
std
xchg
jbe
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
js
pushf
adc
adc
xchg
out
and
jns
adcb
pop
mov
pop
imul
xor
sti
lock
jmp
sahf
push
adc
adc
fildl
bound
das
dec
fisttps
jnp
mov
decl
jg
xchg
or
jae
xchg
dec
xchg
mov
jns
movsb
cwtl
inc
add
shlb
std
and
dec
sub
mov
aaa
sbb
in
pushf
pusha
testl
push
scas
lock
and
xchg
lea
test
fcoml
push
loopne
stc
mov
mov
lods
add
dec
call
inc
rcrl
in
push
lock
shr
or
out
orl
xor
push
mov
ss
loop
imul
rcrl
mov
mov
mov
rclb
fldt
sahf
inc
cli
daa
ds
cli
adc
fdivrs
cmpsb
mov
aad
das
push
rorl
clc
adc
xor
mov
adc
mov
cmc
orl
add
pop
dec
loope
ja
in
mov
cs
sbb
fsubrl
sbb
rclb
loope
mov
test
in
leave
add
mov
cld
pop
and
stc
inc
jge
loope
addr16
pop
outsl
rcl
inc
cmp
mov
clc
cwtl
inc
mov
ret
push
cmp
cmp
jno
test
sub
lret
ljmp
or
and
mov
repnz
or
lret
rolb
add
dec
aad
std
shlb
mov
jno
push
pop
inc
inc
mov
fidivl
xchg
push
jb
pop
or
cmpsl
out
iret
xchg
negb
fdivs
jo
outsb
push
leave
or
xor
sahf
mov
sbb
push
cltd
repz
sub
testl
dec
xchg
addr16
shll
sub
push
lahf
cli
push
xor
sbb
out
aad
je
inc
movsl
es
cltd
jmp
sbb
mov
decl
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
out
insb
sbb
movlps
jmp
lahf
insl
push
mov
jmp
jno
cmp
cli
mov
push
cltd
sahf
pop
xrelease
dec
pop
cmp
sub
xor
filds
sub
push
inc
inc
inc
sbb
mov
push
xchg
push
sti
dec
testl
pop
lret
cmp
dec
int3
push
mov
push
clc
mov
push
stos
mov
aad
lock
inc
imul
lods
mov
fnstsw
xchg
inc
ss
mov
push
and
cld
jo
mov
sarl
push
out
mov
and
sub
or
or
adc
and
dec
clc
mov
jecxz
mov
cmp
test
inc
fs
nop
scas
mov
dec
mov
call
mov
add
fs
in
push
test
pop
fistpl
jle
fwait
inc
mov
mov
fwait
xchg
int
jne
in
sbb
mov
mov
out
loope
pop
sbb
adc
pop
in
outsl
out
test
jmp
pushf
sar
loope
je
jb
pop
sbb
pop
jne
and
mov
fildl
cmp
mov
outsl
dec
push
jge
mov
xor
and
insl
mov
stos
push
fildl
mov
scas
shlb
mov
je
sub
aad
mov
cltd
insl
je
mov
icebp
sbb
test
fidivl
clc
xlat
js
in
mov
stos
inc
xor
and
cmpsl
outsl
nop
push
mov
hlt
push
scas
sub
add
pushf
dec
xor
add
dec
mov
mov
dec
das
mov
sub
js
sub
mov
push
mov
imul
fisttps
mov
lret
pop
gs
xchg
sbb
ret
lock
jle
dec
jno
ret
xorb
mov
push
aad
push
repnz
call
sub
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
push
sbb
rclb
adc
xchg
inc
or
repz
xor
mov
cwtl
repnz
mov
xchg
cmp
test
cmpb
xor
das
push
adc
pop
addl
mov
adc
sti
lret
mov
xchg
xor
sub
xchg
cli
sbb
imulb
jmp
addl
fwait
es
mov
mov
adc
push
pop
aam
inc
xchg
cmc
cmp
or
data16
dec
clc
jnp
sub
iret
mov
xor
addb
clc
ljmp
ja
xchg
fnsave
cs
jmp
ret
adc
lret
xor
mov
lcall
and
and
dec
shll
jne
ds
icebp
fcoms
cmp
or
test
add
push
and
aas
push
std
hlt
loope
into
mov
jno
ds
and
adc
enter
fiadds
and
gs
add
add
push
outsb
push
cmpsb
sub
aas
adc
shl
rcrb
or
sub
or
add
and
popa
imul
jle
mov
fisubrl
push
jo
jbe
mov
xlat
sbb
pop
test
dec
loopne
and
or
leave
ror
adc
inc
xor
adc
xchg
loopne
adcb
fdivrl
fwait
std
mov
push
mov
rcrb
jb
sbbl
push
stc
lcall
ja
aad
pop
push
push
sti
bswap
out
leave
sbb
mov
es
push
test
out
sbb
pop
xor
shl
cmpsb
insl
lods
fsubl
push
add
leave
ret
push
ja
and
stc
scas
cmp
rcrl
in
add
test
outsb
push
scas
stos
jns
cmpsl
xchg
mov
frstor
and
and
jp
mov
dec
cmpsb
jne
idivl
xchg
lods
mov
mov
push
and
dec
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
jns
js
xchg
adc
adc
iret
fstp
lock
inc
cmp
enter
mov
movsl
push
cmp
jle
jo
hlt
repz
roll
mov
aad
pop
clc
add
cmp
test
lcall
mov
repnz
insb
arpl
cmpsl
repnz
push
sub
push
popf
adc
ja
ds
mov
and
lcall
sbb
dec
sub
xchg
jp
inc
pop
adc
fstps
mov
pop
jno
dec
mov
and
dec
jmp
nop
or
mov
aam
or
in
mov
dec
into
mov
xorb
and
pop
jle
adc
jnp
pop
jecxz
adc
into
popf
inc
adc
push
add
and
push
and
inc
inc
ss
pop
or
mov
or
mov
je
arpl
xchg
rcrl
lret
xchg
mov
idivl
mov
mov
aad
push
out
or
ljmp
pop
clc
cmp
clc
stc
dec
and
rolb
daa
shrb
in
int
enter
jl
out
jo
andl
mov
das
mov
enter
das
push
sbb
sub
jbe
inc
mov
insl
jnp
repnz
and
add
mulb
in
pushf
xor
ljmp
out
push
pop
sbbb
and
mov
pop
xchg
sbb
addr16
sti
popa
mov
mov
std
mov
loopne
loopne
xor
adc
scas
into
dec
mov
sbb
or
and
mov
into
mov
sbb
or
ds
cmp
mov
adc
lahf
ss
aam
xor
movsb
icebp
addl
pop
dec
call
and
pop
and
jbe
push
cmp
popf
cltd
or
add
mov
in
bound
into
xchg
push
popf
xor
mov
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
dec
mov
adc
adc
ret
xchg
test
mov
push
out
and
mov
push
jno
addr16
aam
push
sub
adc
cmp
adc
mov
stos
cmpb
sbb
mov
popa
out
push
dec
xchg
mov
sbb
pop
mov
mov
ss
mov
aaa
nop
and
rorl
jmp
int3
iret
push
sub
aam
dec
add
sbb
pop
pusha
push
adc
call
lss
or
sar
adc
shrb
popf
xchg
add
jnp
or
repnz
jnp
or
jnp
shl
mov
stos
pop
stos
outsl
sub
cli
incb
lahf
pop
mull
repnz
imul
lea
mov
xchg
in
adc
or
aad
shl
nop
cmp
pop
scas
gs
fcmovnb
mov
test
push
xchg
test
ljmp
xor
sbb
stos
adc
enter
lods
xor
xor
fisttps
pusha
cmp
inc
jb
inc
cmc
hlt
neg
adc
adc
xlat
mov
into
imul
cmp
stos
out
mov
mov
mov
popa
movb
sbb
fwait
imul
push
shlb
into
test
xchg
pop
dec
daa
mov
in
adc
pop
ror
repnz
mov
std
pop
cmp
dec
jb
add
je
negb
mov
mov
mov
jo
jns
ret
test
in
mov
or
data16
and
xor
ss
cltd
mov
mov
js
and
jge
test
pusha
xor
icebp
aam
and
pop
adc
cmpb
xor
lret
outsl
pop
mov
sbb
dec
ss
rcll
jno
or
sbb
outsb
call
lret
fmuls
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
jmp
stos
adc
mov
pop
push
sub
pop
imul
jecxz
in
and
cld
scas
and
les
inc
mov
lds
xor
es
ds
cld
xor
rclb
jnp
push
popa
rorl
insb
mov
xchg
rcrb
push
and
push
lret
popf
aam
or
mov
ljmp
and
mov
jecxz
jmp
jmp
rcrb
idivl
cld
ror
push
loopne
orl
mov
adc
add
or
and
jae
fidivl
inc
sbb
mov
testb
arpl
das
insb
mov
rclb
xchg
test
fmuls
int
dec
sub
shlb
cmpsb
dec
jb
in
iret
dec
sbb
add
push
sarb
mov
aas
add
dec
or
getsec
push
call
enter
pop
mov
cmp
dec
aas
popa
cmp
arpl
insb
cmp
cmpsb
add
jnp
sti
dec
mov
test
xchg
sbb
xchg
and
fs
inc
push
shl
inc
pop
mov
push
xchg
xor
mov
mov
xor
lea
and
std
mov
adc
sbbl
sti
outsl
pop
and
sti
mov
cld
jns
xchg
add
jne
loope
and
or
mov
mov
xor
sub
fadd
dec
jmp
cmp
mov
pop
jge
push
jbe
pop
test
add
mov
add
adc
push
jbe
idivb
nop
fstps
outsb
cmp
pushf
out
test
adc
jne
mov
add
pop
pushf
xor
shll
sub
call
pop
rcll
push
lcall
dec
jne
lock
fmuls
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
int3
rol
mov
enter
imul
jo
mov
mov
adc
push
out
fsubrl
adc
mov
leave
adc
adc
jbe
outsb
or
ret
popf
js
mov
push
orb
loopne
add
cs
movl
or
add
icebp
sub
out
pop
cmpsb
sti
ja
and
push
fwait
sarl
cwtl
jmp
jp
outsb
adc
lods
cli
int3
and
push
dec
cmp
and
pop
adc
fisubs
push
mov
fstps
cmc
outsl
mov
jge
mov
gs
mov
mov
sub
sahf
xchg
jp
aad
bound
xor
enter
push
xchg
jnp
dec
mov
aaa
jne
mov
lock
adc
loopne
aad
bound
adc
lcall
into
out
aam
fucomip
stc
add
jge
dec
push
fidivrs
les
add
movsb
sahf
ds
cwtl
dec
push
push
push
test
mov
sbb
mov
xchg
lods
dec
and
leave
xor
jbe
add
pop
pop
test
xchg
add
loop
adc
cmp
popf
inc
loope
jl
repz
xlat
js
dec
add
repz
out
xor
push
mov
div
ds
or
data16
add
mov
and
call
xchg
das
mov
aaa
add
ljmp
pop
lahf
cli
sbbl
inc
js
sub
mov
out
cs
push
fs
pop
xchg
lea
mov
xchg
mov
push
cmpsl
sub
or
or
insl
hlt
jns
push
popf
xchg
sbb
add
inc
dec
push
mov
adc
cmc
mov
lods
xchg
sub
mov
in
stos
adc
inc
mov
inc
cli
je
cmp
add
add
rclb
ret
jmp
gs
test
jle
sub
int
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
in
insb
push
adcb
xor
fcompl
jns
xlat
sub
mov
push
dec
out
ss
adc
add
adc
cmp
dec
cli
adc
sub
rol
pushl
roll
jecxz
and
mov
and
sbbb
das
insb
jmp
push
and
imul
repnz
mov
pop
inc
jno
adc
add
mov
push
or
daa
adc
rol
pop
xchg
stos
mov
or
fiaddl
shll
insl
loopne
lock
fstl
push
fildl
repz
sbb
jge
xchg
and
lcall
icebp
mov
or
lret
mov
push
mov
in
xor
sahf
movsb
scas
ds
adc
cwtl
lcall
mov
cmp
inc
and
movq
movsl
lds
iret
sbb
add
mov
push
cld
push
test
imul
xor
iret
popa
sub
dec
test
mov
lcall
push
mov
pop
xor
pop
adc
mov
mov
dec
lods
mov
icebp
fmul
divb
add
call
scas
enter
mov
clc
rorl
and
icebp
rcll
dec
hlt
mov
andl
push
adc
in
cmp
pop
xor
in
int
push
cwtl
sub
in
push
fidivrl
ds
xor
cmp
xchg
sahf
addr16
dec
pop
stos
clc
stc
aaa
adc
mov
je
add
cmp
out
lea
push
jecxz
shr
jle
push
pop
jg
jae
lods
xchg
cld
jle
call
push
lds
out
inc
xor
movsb
inc
hlt
mov
xor
sub
outsl
cs
pop
cld
jp
and
call
pop
aam
add
nop
xchg
sahf
inc
mov
dec
mov
fld
push
mov
add
sahf
pop
sarl
adc
pop
and
mov
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
xchg
lods
or
adc
movlps
or
jmp
data16
sbb
nop
push
idiv
inc
pop
gs
imul
adc
and
xor
gs
sahf
dec
divl
jle
mov
inc
mov
jb
and
push
fdivp
pop
cmp
mov
xorb
mov
lea
loop
fsubrs
dec
add
inc
movsl
hlt
movl
push
mov
or
push
fsubrl
jns,pn
jae
pop
mov
cmp
or
stos
loop
lods
testl
jecxz
ljmp
pop
and
les
stos
sti
mov
xor
dec
cmpl
lcall
int
and
xlat
inc
mov
push
sub
add
imul
mov
sbb
adc
or
cmp
insb
sub
testb
int
arpl
mov
in
insb
popf
and
mov
xor
dec
mov
fsubrl
scas
push
xor
repz
jecxz
mov
rcrl
stc
mov
stos
pop
insb
mov
cmp
bound
movsl
xor
inc
inc
inc
cmpsl
into
lods
mov
lock
xor
sbb
cmp
add
outsb
mov
rolb
cmp
mov
cmc
pop
pop
in
bound
xor
xchg
ljmp
xchg
sbb
and
daa
mov
xrelease
mov
xchg
out
std
imul
fisttpl
cmp
push
dec
rorb
adc
xchg
cli
pop
lcall
cmp
add
inc
push
cmp
push
xor
stos
cmp
cmp
pop
ja
clc
outsl
adc
mov
mov
push
or
xchg
adc
sub
xchg
jae
jbe
jl
imul
mov
mov
mov
push
ret
push
cld
sarb
jbe
dec
lea
stos
jb
divb
je
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
dec
les
enter
test
push
mov
mov
repnz
loop
adc
xchg
push
mov
aam
das
and
dec
inc
fsub
int3
mov
test
stos
icebp
and
and
mov
mov
popa
jb
shrl
and
adcl
dec
push
fdivrl
cmc
add
sbb
mov
inc
pop
mov
sub
jns
mov
out
insl
add
xchg
and
test
xor
dec
stc
sub
sub
dec
cmp
pushf
imul
push
gs
or
rcrb
or
cld
pop
repz
repnz
mov
jne
mov
int
lock
adc
cld
lcall
ficompl
aaa
mov
inc
dec
xchg
or
dec
ds
pusha
fimuls
scas
cmp
jae
rclb
mov
popa
inc
lret
xor
jb
enter
adc
cli
and
xchg
jp
ret
push
mov
xorb
mov
into
mov
dec
mov
mov
push
push
inc
movsb
sbb
lock
ja
mov
divl
jmp
test
lcall
lea
mov
cvtdq2ps
inc
mov
add
cmp
push
popa
push
add
movsb
dec
lcall
jbe,pn
idivl
insl
ja
and
sahf
add
aaa
and
sub
pushf
push
mov
lds
lret
dec
pop
pusha
js
pop
rclb
mov
imul
test
adc
inc
movsb
dec
push
sub
sbb
xchg
or
jecxz
fistps
inc
insb
mov
movl
rcl
adc
add
pop
xor
or
movsl
cmpsb
lcall
stos
clc
fidivrs
mov
gs
push
dec
mov
aad
lods
sub
jl
pop
add
data16
test
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
fwait
enter
adc
adc
cmp
ja
test
xchg
sub
loop
imul
sahf
push
shl
jecxz
mov
cld
stc
jp
xchg
sahf
ret
cmpsl
add
pop
pop
add
cmp
xor
nop
dec
test
sbb
jecxz
xchg
cmp
insl
sub
mov
sbb
loope
dec
mov
insb
dec
jno
test
xor
jno
cmp
stos
pop
ljmp
pop
add
push
subb
push
aad
dec
sar
in
and
dec
sbbb
jns
lcall
dec
add
stc
outsb
call
cmp
shrb
arpl
test
ja
xor
ret
adc
inc
and
xor
daa
dec
xor
cmpsl
mov
dec
scas
pusha
fs
inc
adc
lcall
mov
xchg
xchg
je
xor
sub
in
mov
insl
lahf
lods
cli
mov
loopne
xor
loop
mov
cli
repnz
andl
lock
adc
lea
jne
mov
cld
push
xchg
add
add
sbb
push
negb
and
pop
and
pushf
or
ret
addr16
stos
lcall
xchg
xor
lahf
addb
bound
das
pop
stos
pop
pop
and
out
cmp
xlat
xorl
sarl
imul
sub
jle
data16
jne
fwait
xchg
enter
inc
loopne
popa
in
test
adc
sub
cmp
punpckhbw
sbb
mov
push
xor
fdivrl
sbb
lock
pop
dec
mov
jo
cmp
out
stos
repnz
imul
cwtl
negb
daa
gs
inc
cmp
jo
loop
pop
mov
stos
das
pop
daa
nop
inc
push
mov
mov
repnz
in
sarb
mov
insl
notb
lahf
inc
test
shlb
inc
jne
push
mov
ret
aam
push
mov
fdivrs
and
dec
test
pusha
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
adc
ljmp
movlps
jmp
push
jle
mov
lret
into
push
lods
inc
xchg
loope
movsb
repz
lock
fcompl
sub
mov
testb
out
jmp
or
sub
jmp
dec
cld
outsl
dec
push
das
int3
xchg
out
rclb
js
lret
inc
in
mov
lods
icebp
iret
and
or
pop
jns
lahf
clc
inc
cmpsl
cmp
push
enter
push
inc
add
cmp
aad
mov
cmp
in
iret
xchg
call
int3
and
inc
sbb
jnp
jmp
imulb
mov
xor
xchg
out
xchg
jecxz
add
mov
mov
dec
into
mov
push
imul
arpl
and
cmpsl
cmp
dec
les
int3
inc
aam
inc
mov
test
mov
inc
cmpsl
popf
jbe
jnp
cmp
xchg
sbb
inc
repnz
les
or
js
fidivrl
jns
mov
rorl
xchg
inc
add
jg
mov
dec
out
fucomp
aas
jmp
and
mov
adc
data16
cli
push
xor
xchg
jmp
jb
int
and
rclb
mov
scas
dec
mov
aad
sub
loopne
cmp
lcall
cmc
xchg
jge
push
imul
inc
sbbb
filds
mov
outsb
cmc
adc
mov
or
arpl
sub
sub
ficoml
jge
sub
add
ja
stos
mov
push
cmc
nop
ret
cli
mov
push
ror
ljmp
pop
push
idivb
adc
inc
pop
adc
les
sub
jmp
mov
jnp
inc
pop
loope
jl
push
sbbb
jae
push
out
mov
popa
mov
iret
fistl
push
repz
jp
push
std
repnz
mov
push
push
les
mov
pop
test
cmp
jg
loope
fiaddl
jecxz
mov
jns
xor
aaa
fistl
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
cmpsb
mov
adc
adc
rclb
mov
subb
mov
inc
xor
inc
ss
fdivs
shl
inc
mov
bound
fmuls
jle
notb
and
pop
xchg
xor
cltd
cmp
leave
enter
push
jl
pop
mov
xchg
inc
jb
dec
mov
pushf
nop
inc
mov
sbb
push
push
iret
xchg
outsl
repz
xorb
jns
xchg
in
xor
inc
xlat
notb
mov
cs
mov
dec
or
sahf
sub
and
inc
insb
push
dec
ds
andl
faddl
inc
lods
xor
lahf
andl
jnp
jb
xchg
mov
jl
pop
mov
lods
mov
cltd
sbb
inc
aam
inc
jnp
or
lock
xchg
jb,pt
std
pop
bound
inc
cmp
aas
and
dec
inc
dec
xor
pusha
jae
fmuls
loopne
xor
nop
insb
fdivrl
add
mov
sbb
pop
jno
test
inc
push
aaa
pop
push
or
mov
movsb
push
testl
sbb
lds
arpl
jnp
dec
jae
push
jae
sub
out
inc
mov
xchg
push
xlat
in
les
std
xor
mull
hlt
xchg
jnp
xchg
out
int
rorl
xchg
push
mov
xchg
mov
jg
imul
test
xchg
andl
ss
push
jmp
inc
fstpl
fucomp
gs
clc
jge
out
inc
jno
and
add
inc
dec
jle
subb
xchg
jge
adc
fs
leave
jb
shr
enter
cwtl
out
idivl
cltd
xor
mov
les
fisubs
jl
fisubrl
and
jns
xor
pop
xchg
push
sbb
mov
sub
jnp
lock
jno
push
enter
jmp
jns
sub
mov
ficoms
mov
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
or
enter
outsl
lret
inc
ljmp
in
cmpsl
in
roll
aas
fwait
jne
add
cmpsb
lock
mov
push
scas
jae
mov
in
sub
call
mov
pop
out
mov
fdivp
in
pop
movsl
push
insb
push
sbb
cmp
jmp
cmp
cltd
aaa
push
mov
jp
and
ja
mov
and
daa
pop
cs
jmp
sub
and
daa
daa
and
repnz
adc
rorb
mov
inc
rol
sahf
lods
aaa
ret
push
push
int
call
movsl
rcll
roll
and
pop
jns
popa
mov
in
cmpb
dec
sti
sti
dec
not
fs
sti
push
xorl
jnp
lret
scas
lea
xor
xor
ja
loope
divb
cmpsl
sarl
push
dec
lds
nop
aas
comiss
lcall
inc
sarl
andl
sub
mov
pop
sub
lcall
cs
je
lock
xchg
mov
out
fwait
jbe
push
std
and
fadd
shll
loope
arpl
sti
or
out
das
xor
sub
xor
into
orl
repnz
cwtl
cmp
inc
dec
je
xchg
scas
push
aad
jns
leave
sbb
adc
add
inc
out
nop
mov
xchg
shl
mov
ret
adc
adc
xchg
idivb
and
icebp
mov
fsubrs
inc
xchg
lret
lcall
iret
jno
mov
push
mov
enter
aad
mov
cmpsb
lock
sub
jb
cli
pop
cltd
out
movups
shlb
sub
or
or
sti
dec
dec
push
pop
and
cmp
les
imul
decl
push
pop
xlat
imul
mov
sbb
lock
out
mov
in
call
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
sahf
pop
sbb
gs
dec
pop
mov
sub
mov
insb
imul
popf
repnz
mov
cld
sbb
cmp
mov
sub
stos
xchg
sbb
push
jns
iret
lock
jne
aas
pop
cmpb
pop
in
stos
cmp
cmp
ret
and
iret
adc
movsb
lds
sbb
insl
mov
dec
xchg
outsl
test
inc
mov
xchg
fdivr
filds
and
aad
xlat
and
dec
out
loop
xor
stc
in
inc
and
stos
inc
shlb
mov
enter
pusha
out
mov
adc
addl
outsb
imul
pop
inc
shlb
insl
aaa
lods
mov
es
pushl
or
mov
scas
sbb
aam
sbb
or
jae
and
mov
fmuls
in
mov
ret
cmp
jp
mov
and
fisubrs
or
sar
sub
imul
pop
jo
addb
scas
or
in
mov
xor
mov
in
lea
jae
aas
push
jmp
cmp
insb
mov
push
or
das
push
mov
dec
sahf
ljmp
pop
and
cwtl
arpl
cli
mov
sbb
jg
or
and
sbb
jl
pop
mov
repnz
je
xchg
mov
jne
out
sti
mov
dec
and
xchg
fdivs
or
cmp
xchg
dec
in
pop
arpl
push
stos
nop
mov
or
movsb
addr16
faddp
mov
sarb
cmp
push
cmp
sahf
aad
cmp
add
and
mov
push
cs
jmp
xchg
scas
aaa
dec
lcall
rcr
dec
sub
cmpsb
out
ja
dec
rol
call
add
mov
push
testl
jle
add
and
pop
gs
pushf
jg
or
lods
js
fidivs
lcall
xchg
aam
sub
xor
movl
sub
mov
movl
jmp
adc
add
jnp
bound
ss
and
js
cmc
pop
adc
adc
lods
jnp
out
or
jnp
push
xchg
jne
aad
dec
xlat
out
dec
roll
movsb
ja
pop
sub
int
xor
insl
inc
and
sbb
jecxz
std
inc
ret
mov
loopne
js
sub
scas
xchg
aaa
pop
sub
clc
lea
push
mov
pop
insl
cmp
mov
pop
jmp
adc
dec
push
int
mull
stos
daa
aam
shll
fistps
cli
out
mov
push
push
negl
jp
adc
movsb
in
bnd
xorl
jo
jl
dec
mov
add
or
and
mov
jmp
call
in
pop
addr16
xor
insl
lcall
dec
pop
inc
addr16
lret
mov
mov
int
jo
into
sub
stos
xchg
test
mov
iret
sbb
jl
cltd
cli
mov
test
fadds
fisubl
call
shlb
shlb
cld
cmp
gs
je
out
mov
dec
adc
mov
xchg
mov
clc
addb
add
jns
or
outsl
dec
inc
shrd
fs
aas
adc
andl
and
pop
push
les
movsl
ret
cltd
cmpsl
mov
push
hlt
ds
movsl
clc
inc
das
sub
div
inc
repz
sarl
push
outsl
inc
jae
jecxz
stc
test
fdivr
cmpsl
mov
in
mov
xchg
movsb
jno
mov
nop
jg
adc
test
mov
repz
fimull
mov
xchg
in
cltd
add
test
cmp
xor
in
mov
sahf
dec
in
dec
sub
pop
pop
xor
xlat
enter
cltd
mov
cmp
ljmp
cmp
pop
sbb
repz
cmpsb
arpl
jmp
pop
xchg
xchg
sbb
int
pop
in
aad
sbb
jg
loop
test
test
decl
test
add
add
decl
decl
decl
xchg
add
adc
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
jae
or
ficoml
adc
push
cmpsb
inc
ljmp
rorl
inc
repnz
pop
dec
call
test
mov
mov
in
add
xor
je
mov
or
sti
pop
push
xchg
movsb
lea
daa
mov
pusha
js
cmp
in
sbb
mov
fldenv
lahf
adc
nop
shl
add
fisttpll
out
cmp
pusha
adc
stc
popf
icebp
xchg
fidivs
xor
pop
test
add
in
out
push
addb
sbb
cmp
cmpsl
addb
sub
jl
push
fmul
mov
xlat
pop
cli
push
shlb
push
fcom
mul
arpl
and
pop
sbb
push
mov
mov
jb
jge
mov
sti
enter
fwait
xor
clc
or
mov
lahf
xrelease
rcr
jg
xchg
mov
jle
cmp
dec
into
cltd
fs
lret
mov
sub
bound
fcoms
xchg
pop
scas
test
xchg
xchg
cld
je
and
mov
loope
xor
push
xor
fisubrl
mov
sbb
insb
arpl
enter
lcall
sbb
test
cmp
cwtl
xchg
loope
fdivrs
sbb
loope
inc
xlat
pusha
nop
add
daa
xchg
scas
or
xchg
jg
mov
test
mov
pop
mov
jno
add
int3
jns
adc
cld
pop
add
jp
sbb
jns
xor
in
roll
bnd
mov
popa
cmp
in
dec
mov
lods
jne
mov
xorb
pushf
in
fwait
and
or
lds
push
fdiv
nop
sbb
test
xchg
push
fwait
mov
lea
xor
xor
lods
push
shlb
cli
mov
shll
pop
out
mov
incl
sub
dec
push
pop
dec
jecxz
popf
inc
pop
in
inc
mov
sub
push
aad
adc
mov
popf
sbb
ret
aam
mov
cmp
subl
inc
popf
mov
or
loope
xor
sbb
sahf
loopne
cld
daa
lods
fwait
std
shlb
push
cmp
dec
int
movsb
call
mov
ja
mov
aad
addr16
inc
dec
add
xchg
cwtl
jo
or
dec
loopne
in
push
xor
sbb
movl
and
and
jno
mov
sti
sub
push
xchg
push
mull
mov
pop
in
dec
push
loope
aas
push
test
xchg
je
sti
scas
xor
subb
pop
in
into
sub
fsubs
fs
xlat
xchg
pop
dec
xchg
cmc
sahf
icebp
pop
cmp
dec
lret
and
inc
xorb
add
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
mov
adc
adc
call
insb
scas
mov
sub
daa
jo
rorb
aaa
sub
test
jae
aad
sub
negb
sti
adc
add
jae
mov
jne
inc
xor
sbb
or
popa
out
rcrl
cmp
pop
xchg
popa
in
mov
negl
adcb
jg
ret
add
or
and
test
and
mov
cltd
mov
pop
in
ret
cmp
mov
pop
xchg
mov
pop
repnz
mov
inc
sub
xchg
inc
or
jns
mov
popa
xor
jno
cmc
cmp
fdivrl
sbb
push
loopne
mov
mov
jecxz
inc
outsb
add
rol
and
popa
dec
mov
stos
adc
mov
bnd
xchg
mov
rcll
gs
mov
popf
clc
lock
fadds
shrb
adc
fs
lods
ret
push
xchg
in
adc
inc
shr
xchg
js
inc
lahf
cmp
stc
test
mov
inc
xor
incl
xchg
out
xor
adc
es
xor
aad
clc
daa
mov
popf
adc
lret
mov
pop
fs
out
jl
scas
ja
inc
jmp
cmp
sub
aas
incl
mov
jmp
or
stos
addr16
nop
int3
les
test
fcomps
mov
sbb
mov
xchg
sti
pop
lods
xchg
mov
inc
cmp
ds
adc
ja
jbe
arpl
sbb
insb
xchg
jo
cmc
mov
dec
fstp
mov
scas
jge
mov
cli
bnd
adc
rcrb
cltd
sub
jle
inc
sub
data16
xchg
imul
xor
sti
loope
push
rolb
sbb
imul
testl
repnz
sbb
test
mov
sub
jp
sbb
clc
stc
loopne
mov
mov
xchg
jge
or
adc
mov
xchg
ret
in
loope
cwtl
test
test
cltd
sub
es
ret
pop
push
add
aam
xchg
fdivrl
xchg
insb
sti
mov
lods
jmp
sbb
jnp
mov
mov
dec
movsl
test
mov
cwtl
push
shlb
idivl
fcmovbe
repnz
inc
and
add
out
arpl
mov
cmp
test
jl
or
mov
cmp
jae
xor
lahf
fnstsw
mov
xchg
jg
inc
mov
lahf
pop
nop
mov
adc
fnstcw
pop
xchg
pop
out
sub
sub
iret
sbb
sub
xchg
xor
dec
ret
mov
fstl
mov
xrelease
je
in
add
xchg
lods
in
push
inc
xchg
or
mov
fildl
push
adc
fcmovb
loope
addr16
lds
mov
dec
gs
repz
sahf
test
push
and
in
dec
cmp
das
pop
enter
jp
icebp
pop
enter
in
ja
sti
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
