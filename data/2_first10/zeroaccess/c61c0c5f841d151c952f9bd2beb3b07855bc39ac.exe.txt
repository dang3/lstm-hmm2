push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
insb
add
or
aaa
or
stc
shlb
cmp
addr16
gs
rcl
push
fst
xor
inc
popf
shlb
jl
rol
mov
pushf
push
push
jb
xor
dec
mov
dec
mov
and
bound
jo
dec
add
or
rcrb
inc
loop
push
rcrb
arpl
cmpsl
in
mov
sarb
push
cwtl
mov
jg
arpl
sbb
popa
nop
adc
jge
cmp
jp
mov
add
cmp
dec
push
loope
cmp
xchg
rorb
mov
arpl
inc
cmc
std
sub
inc
imul
xchg
fwait
push
adcb
aad
iret
mov
mov
sbbb
add
call
push
call
or
enter
stos
nop
shr
pop
cli
repz
bound
outsl
jo
cmp
inc
aad
mov
ss
or
aad
pushf
xchg
and
fbld
hlt
ret
xor
push
js
xchg
or
jns
jge
mov
jmp
call
and
out
add
jo
sar
movsl
mov
test
pusha
pop
mov
les
sbb
mov
push
inc
out
nop
or
test
mov
mov
arpl
inc
in
imul
jae
fnstsw
add
loope
adc
movaps
lret
mov
xorl
cmp
in
dec
sub
lret
sahf
and
add
mov
inc
repnz
adc
jns
jmp
dec
loop
sbb
mov
inc
pusha
dec
fisttps
repnz
lahf
outsl
xchg
sub
jns
mov
add
xchg
jle
xor
push
mov
xchg
test
cmp
push
sar
push
sbb
out
mov
dec
jg
push
rcl
mov
dec
and
jbe
sub
rcll
and
js
xchg
das
hlt
pop
std
out
mov
popf
test
es
and
or
mov
ret
mov
xchg
pusha
movsb
pop
into
stc
in
jg
cltd
popa
call
divb
and
jp
mov
xor
lret
stos
inc
into
adc
mov
cld
mov
push
jle
jg
mov
xor
repz
in
jo
jmp
decb
add
mov
adcl
add
jmp
jne
leave
imul
les
in
pop
inc
pop
divb
std
in
es
test
cmp
into
dec
jbe
imul
xchg
movsb
cwtl
inc
stos
inc
sti
cltd
adc
inc
aaa
in
pop
mov
dec
rolb
imul
iret
add
lds
loope
mov
and
xor
aas
inc
mov
aad
sahf
inc
pusha
xchg
mov
push
sbb
movsl
dec
sbb
es
mov
dec
in
ss
xchg
test
cld
and
inc
inc
xor
mov
or
sbb
aam
add
je
mov
stos
roll
push
popa
pop
mov
addb
pop
out
into
aad
test
adc
cmc
jae
mov
out
jmp
xor
sbb
adcl
test
jg
mov
incl
jae
dec
inc
call
aas
aas
and
push
dec
ret
popa
jne
xor
xchg
stos
outsl
pushf
pop
es
jp
mov
ja
jmp
mov
add
popf
nop
cld
push
rcrl
insb
or
cmc
dec
sub
gs
inc
movsl
ret
stc
loopne
lret
adc
adc
mov
cmp
cli
mov
push
mov
jg
cld
cmp
mov
shlb
ljmp
rorl
mov
sub
sbb
dec
lcall
addb
sub
aas
or
xlat
xchg
iret
pop
es
mov
les
inc
add
add
jae
sub
jmp
pop
out
jae
sbb
mov
mov
mov
jmp
add
out
pushf
fisttpll
adc
jne
mov
orb
ret
mov
jmp
cld
mull
stc
mov
cmp
add
inc
rcrb
pop
scas
jnp
arpl
cmp
das
pop
inc
ds
cs
push
sub
mov
ljmp
lea
mov
clc
cmc
je
pop
mov
lcall
pop
push
ss
aaa
mov
sbb
dec
and
lds
sbb
into
push
add
pop
cs
loopne
enter
jecxz
xor
cs
stos
mov
das
out
pop
dec
cmp
cmp
jp
lcall
insb
or
adc
and
int
push
les
ja
or
jne
xor
idivl
push
mov
mov
push
test
xor
jae
movsb
dec
push
pop
mov
shrl
push
sbb
xor
fdivl
daa
decl
repz
cwtl
ret
add
xor
add
jp
mov
lret
mov
into
lea
scas
xchg
bnd
outsl
fimuls
xor
fldcw
pop
lods
mov
lret
cmp
fstpt
jmp
addr16
and
stos
arpl
or
cmc
sahf
cmp
cs
jge
fwait
mov
dec
pop
xor
test
lock
das
jecxz
mov
push
xor
andb
dec
ret
data16
rcll
mov
mov
stc
push
mov
cli
shl
fcoml
add
leave
cmp
repz
lret
sbb
sbb
push
dec
cmp
into
adc
movsb
stos
lret
cmp
xor
mov
int
andb
dec
movsb
mov
add
popf
inc
gs
mov
ja
sbb
dec
cmc
fwait
mov
aad
lock
test
jbe
movsb
out
pusha
jecxz
pop
popf
sub
push
mov
int
pop
adc
xor
add
or
insl
call
adc
lcall
out
sub
dec
mov
rolb
shl
orb
fdivr
das
cmp
sbb
cmp
push
cmp
dec
dec
rcr
ret
sub
pop
dec
sbb
jg
leave
dec
movsb
fsubl
mov
into
data16
fiadds
mov
xchg
mov
test
pop
loop
gs
xor
insl
mov
pop
push
xor
out
push
mov
mov
cltd
add
data16
cli
adc
inc
in
add
rcrl
push
add
jno
mov
outsb
cmpsb
ret
call
enter
stc
sub
jnp
sbb
and
mov
arpl
adc
mull
notl
cwtl
add
roll
shll
cmp
test
jae
shlb
imul
stos
and
add
sub
shll
shll
mov
xor
adc
or
inc
xchg
jg
mov
mov
adc
inc
cwtl
mov
fldl
sbb
cli
fs
in
fdivrl
mov
mov
inc
mov
cs
cwtl
sbb
dec
mov
cltd
hlt
xchg
pop
fstpt
jge
ret
cmpsl
addr16
push
decb
or
std
addr16
adc
out
dec
xor
xchg
inc
push
xchg
adc
lret
pop
iret
cmp
daa
cmp
jb
out
xchg
inc
fstpl
jb
stos
out
xchg
push
jge
xor
mov
inc
in
js
das
idivl
xchg
xchg
lcall
mov
outsl
or
add
cwtl
add
enter
pop
out
stos
aas
add
aam
ja
jne
std
push
xchg
hlt
add
std
cmpsl
ror
mov
das
jmp
mov
jle
fwait
call
cmp
das
add
sub
mov
or
out
adc
dec
inc
in
jle
jno
cmpsl
aam
mov
add
or
mov
std
jne
pop
fiaddl
xchg
into
call
adc
ficompl
repz
push
xor
test
mov
push
sarb
and
dec
fwait
sub
ljmp
adc
ret
fiaddl
xchg
push
mov
int
jo
jle
cld
cmp
xchg
push
aad
or
dec
jl
cmovnp
dec
add
mov
dec
mov
imul
and
shll
insl
cmpsl
popa
lock
pop
mov
cmc
cwtl
test
add
mov
inc
inc
fmuls
imul
lods
or
pusha
andl
addr16
mov
lahf
int
scas
pop
mul
fadd
loop
or
push
push
mov
adc
inc
insl
inc
aam
push
popf
rclb
dec
or
push
and
xchg
cmp
cs
dec
addl
pop
sub
xor
in
xchg
xchg
push
loope
in
dec
enter
push
sub
pusha
movsb
out
data16
aad
pop
xor
ljmp
xchg
push
in
jne
adc
ljmp
push
fstp
add
fwait
sub
and
sub
lcall
mov
or
pop
adc
ds
ds
int
shll
aad
ljmp
push
inc
adc
xchg
insl
mov
pop
jne
bound
int
test
lea
into
aaa
mov
pop
dec
dec
jno
cmp
loope
push
lods
stos
les
adc
fidivl
das
jns
cs
sahf
xchg
xchg
into
cs
mov
mov
push
xchg
adc
push
pop
mov
aas
or
arpl
pushf
mov
loope
mov
xor
das
push
sub
int3
fidivl
int
sbb
stos
push
loopne
mov
push
cwtl
addr16
fmuls
iret
or
dec
arpl
fsubrs
mov
cltd
push
dec
push
cld
int
out
jmp
or
inc
or
pop
outsb
push
push
negb
push
push
jle
shl
cltd
mov
mov
scas
cmp
push
jge
lea
mov
lahf
loope
xorb
push
xchg
push
cmp
loope
cmp
adc
cmpsl
mov
jae
xchg
xchg
push
cmpsb
pop
mov
mov
cmp
icebp
out
popf
push
adc
sub
jne
lods
dec
xchg
aaa
jne
enter
push
lods
movsl
daa
loope
popa
add
insl
fidivrl
scas
in
push
xchg
adc
add
fwait
xor
inc
adc
loopne
and
xchg
jbe
into
fwait
and
jo
and
popa
dec
mov
or
movsb
jmp
adc
pushf
daa
adc
jmp
stos
dec
and
das
xor
pop
fwait
cmp
pop
jg
inc
inc
pop
lcall
imul
dec
pop
addl
ret
cs
adc
sahf
mov
push
repz
hlt
sti
dec
cmp
and
rorl
dec
das
fwait
stc
sub
mov
or
bound
in
dec
mov
mov
xchg
sarb
add
and
sti
xlat
rcll
icebp
mov
fisubrl
jo
imul
lock
popa
mov
dec
xor
jns
cmp
push
push
sahf
add
sub
mov
aaa
aaa
jnp
add
or
or
out
add
cwtl
adc
scas
stc
fcmovb
add
orl
lcall
leave
inc
lret
add
push
and
mov
pop
adc
clc
push
insb
jo
pop
cmp
or
outsl
adc
les
cmp
mov
cmp
pop
and
mov
cmpsb
jnp
mov
into
pop
fdivrl
out
jnp
flds
or
cltd
jmp
iret
xchg
mov
mov
clc
ss
lea
add
sub
adc
inc
ja
incl
insb
rcrl
sbb
sahf
sahf
jmp
loope
cmp
adc
jo
insb
mov
adc
into
ljmp
adc
or
mov
movsb
jg
dec
outsl
enter
test
inc
inc
roll
gs
jbe
push
in
push
pop
push
daa
mov
mov
ja
jne
icebp
rclb
jns
repz
push
push
mov
cwtl
mov
sub
lret
divb
xor
xchg
mov
inc
nop
setno
sbb
inc
sti
jp
jg
jns
test
cmp
xor
adc
adc
jb
xor
out
jbe
adc
mov
add
subl
jb
rolb
inc
lods
sub
sbb
or
cld
aas
add
xor
or
ds
xor
data16
add
int
das
test
inc
push
ja
mov
add
inc
movsl
xchg
cwtl
icebp
mov
mov
inc
das
popf
xor
ljmp
inc
das
pop
sbb
inc
lds
jne
xchg
mov
shll
test
jo
in
mov
pop
test
and
roll
push
clc
or
lea
jl
or
inc
mov
imull
xor
sbb
int3
sbb
push
leave
add
xor
scas
push
jns
scas
dec
mov
xor
xor
aad
pop
pop
dec
ljmp
notl
subb
mov
pop
ficomps
incb
cld
xchg
add
clc
mov
mov
inc
sbb
sbb
mov
test
push
fsubrs
fnsave
fnstsw
push
sbb
cmp
mov
mov
shll
rolb
lods
mov
ja
and
hlt
cwtl
adc
xchg
cwtl
out
jns
mov
subb
andl
jmp
push
dec
or
mov
imul
mov
and
mov
pop
ret
mov
adc
scas
xchg
cwtl
jmp
ret
sub
sbb
dec
lcall
push
dec
xor
add
inc
popl
sub
repz
cmpsl
roll
or
insl
xor
call
mov
shrb
jl
mov
movsb
loopne
out
sub
stos
mov
insb
pop
xchg
stc
mov
decl
xchg
dec
adc
inc
scas
hlt
jge
sub
push
jle
mov
inc
jb
imul
testb
clc
sbb
shrl
test
jge
pop
add
lods
sub
cmp
cmp
mov
lock
sub
shll
in
mov
movsl
jb
movsb
call
jb
add
or
in
push
mov
in
jo
mov
sbbb
xorl
cmc
testb
mov
in
scas
lods
pop
imul
cmp
scas
aaa
addl
sub
xor
adc
ds
dec
cmp
fadds
pop
mov
push
rorb
inc
dec
xrelease
dec
cld
and
sub
push
loop
add
andb
scas
xlat
pusha
cltd
loop
jno
adc
pop
cmp
call
xor
ret
add
mov
adc
pushf
sti
call
pop
out
mov
in
jmp
mov
bnd
rcrl
add
inc
add
mov
rcll
hlt
mov
int3
cltd
pushf
stc
push
cld
add
ret
fldt
pusha
and
in
ror
inc
sbb
sbb
cmp
xchg
add
es
scas
fwait
add
lds
test
xchg
lds
pop
push
dec
dec
inc
or
push
cmp
in
sub
in
add
rcll
and
dec
cmp
lock
pushf
fnstcw
into
cmp
stos
push
xlat
daa
orl
push
add
xchg
add
imul
cmp
lock
stc
sub
stos
xchg
arpl
sti
jno
enter
test
push
add
lds
ja
fsubl
pushf
dec
ja
pop
out
lock
in
mov
outsl
mov
movsb
adc
divb
adcl
or
ss
insb
jae
enter
roll
lret
push
or
adc
aas
mov
daa
and
lds
imul
ja
cmp
leave
xor
in
cltd
data16
mov
aad
cmp
xor
pop
imul
pop
lahf
cmp
add
cmc
iret
jmp
mov
push
mov
cmp
stc
enter
and
jno
or
sub
xchg
das
inc
ror
xchg
dec
sbb
rorl
aaa
sbb
mov
mov
inc
cmp
iret
pop
std
js
cmp
inc
loop
mov
in
nop
xchg
lcall
mov
pop
push
sbb
cmpsl
movsl
cmp
test
jp
fiaddl
clc
iret
stc
fs
adc
pop
inc
mov
fsubrl
jo
loope
nop
aaa
leave
mov
pop
pop
jmp
jmp
sub
pop
dec
out
sbb
sbb
sub
jg
cld
dec
fistpll
idiv
add
mov
or
mov
xor
pop
mov
stos
ret
add
int
cli
adc
mov
mov
cmp
out
mov
inc
adc
add
bound
dec
adc
jns
inc
push
lds
rep
dec
mov
das
dec
jb
push
adc
test
int
dec
mov
or
inc
or
sub
adc
outsb
repz
lahf
inc
cs
cmp
pushl
or
pop
mov
sub
jnp
ljmp
dec
cmovs
pop
les
sbb
add
or
adc
lea
aad
mov
and
push
add
jne
pop
hlt
ficoml
push
pop
cld
in
loope
arpl
shlb
insb
pusha
ret
jnp
aad
add
jmp
push
out
mov
cmp
xor
mov
imul
mov
xchg
sub
or
clc
js
jge
or
inc
nop
xor
jmp
mov
lea
stos
daa
in
jo
sub
fcmovnbe
mov
bound
dec
pop
testb
cmpsb
fistpll
lahf
and
sub
lods
dec
lods
cmpsl
mov
movsl
bound
sbb
fsubl
mov
andl
shrb
insb
ja
push
push
and
dec
out
idivl
es
hlt
call
push
add
pop
hlt
and
jle
fimuls
lcall
cwtl
push
add
mov
or
mov
pop
gs
jno
mov
pusha
clc
xchg
mov
mov
pop
movsl
ret
adc
rorl
bound
xchg
gs
mov
out
push
cmpl
rcrl
out
push
dec
repz
mov
mov
mov
fisttpll
xchg
out
cwtl
sbb
sbb
jp
sub
adc
lods
mov
jnp
xor
jecxz
mov
idiv
fsub
lahf
dec
cmp
rorl
xor
inc
jb
sub
inc
push
xchg
incb
push
pop
loope
sbb
mov
push
fidivrs
and
lds
ss
call
jo
push
sahf
lods
add
mov
add
xor
adc
xchg
pushl
jbe
push
jb
cmp
or
hlt
pop
mov
pushf
sbb
ljmp
cwtl
cmp
jae
je
test
lods
sbb
sbb
lods
jg
xchg
cmp
jg
inc
push
clc
push
add
jl
je
inc
add
inc
leave
adcl
xchg
lock
sbb
xchg
jae
je
aam
aas
nop
mov
das
jae
int
iret
push
stc
xor
icebp
icebp
mov
push
cmpb
pop
outsl
insl
dec
add
add
adc
gs
addr16
subb
aas
aaa
scas
andb
in
imul
sarl
mov
xchg
call
call
fldcw
sbb
xchg
xlat
dec
pop
pop
in
and
mov
sbb
jne
fsubs
dec
shlb
leave
adc
mov
sahf
jecxz
pop
inc
out
enter
ret
pop
into
jl
scas
outsb
outsl
out
dec
movlps
rcr
xchg
mov
lds
pop
js
mov
or
je
mov
cld
pop
lret
cmc
outsl
mov
out
pop
inc
out
cli
in
mov
push
lahf
jmp
cmp
mov
mov
test
out
add
xlat
mov
xor
es
rorl
ljmp
xchg
fwait
inc
xchg
int
out
insl
int
push
in
fs
lods
movsb
mov
cmp
push
add
dec
lret
push
mov
ljmp
data16
out
sbb
and
adc
cmp
or
in
clc
cmpsb
dec
call
movsb
xchg
add
ficomps
fistpll
fsubrs
cs
jle
into
add
mov
test
jmp
xor
inc
xor
pop
pushf
sub
test
out
and
sbb
popf
movsl
ljmp
decl
mov
xchg
rcrl
jb
popl
mov
jle
mov
sarb
xorl
push
xchg
dec
push
jae
in
fldt
je
inc
mov
frstor
pop
sbb
mov
and
inc
cmpsl
aam
add
mov
loopne
mov
les
jge
jmp
in
in
sahf
jno
test
out
sbb
sub
inc
adc
mov
push
sbb
jmp
pushf
mov
jo
fs
mov
pop
sub
es
std
push
dec
pop
into
sbb
or
outsb
push
pop
sbb
jecxz
jecxz
mov
add
or
add
xchg
push
aam
lret
dec
pop
pop
mov
adc
vfrczsd
idiv
dec
mov
cmp
push
out
dec
bound
mov
rcl
mov
movsl
test
and
and
xchg
push
loopne
xor
sub
xchg
packsswb
dec
cmp
push
push
pop
lods
out
cmp
fcmovne
xor
xchg
mov
jecxz
fnstcw
add
in
mov
dec
popf
test
push
xchg
jle
or
pop
fsubp
cli
pop
rorb
or
fdivl
adc
out
sbb
jg
push
or
pushf
mov
andb
sbb
jns
stos
faddl
mov
loopne
in
loopne
ljmp
imul
pop
inc
decb
call
jmp
mov
pop
sarl
stos
add
and
popf
sarl
mov
sbb
cltd
fwait
pusha
pop
adc
push
push
cmp
repz
int
adc
out
shlb
cmp
aaa
add
pop
sbb
push
xor
and
lret
mov
or
xor
pop
xorl
sar
sbb
add
jne
sub
xchg
pop
sbb
or
mov
adc
testl
outsb
lcall
lock
mov
sbb
ljmp
in
mov
adc
and
jge
lock
dec
jae
add
add
jecxz
cmpsb
sub
push
adc
adc
ret
shl
mov
popl
inc
push
mov
mov
sahf
ss
in
jp
arpl
mov
pop
icebp
or
jmp
adc
sbb
ficoml
push
cmp
mov
lds
fcos
daa
add
mov
mov
lods
pop
insl
sbb
mov
lods
sbb
add
mov
in
and
scas
or
push
cmpsl
leave
xor
cmp
sub
dec
push
sub
sub
aad
lret
xchg
lea
inc
sbb
fiadds
mov
and
pop
xchg
pop
inc
popa
idiv
iret
add
xchg
dec
push
mov
xor
subl
push
test
mov
stc
movsb
inc
jnp
std
pop
dec
sub
out
or
mov
sub
lods
inc
fsubs
push
add
iret
daa
adc
pop
cld
test
jp
cmp
aas
filds
cwtl
rolb
fdiv
mov
lock
inc
daa
leave
pop
jns
inc
movsb
mov
int3
adc
add
sbb
cmp
pop
jbe
and
adc
pushf
fidivrs
mov
dec
dec
ds
mov
dec
add
das
int3
rcrb
pop
test
dec
push
push
cmp
cwtl
mov
push
out
cld
or
cmpsl
mov
popa
add
mov
arpl
daa
xchg
int3
lcall
cmc
dec
xchg
sahf
ret
inc
and
fwait
dec
lods
xor
out
int
mov
stos
ja
mov
xor
insb
pop
jge
std
gs
pop
adc
dec
cwtl
xchg
fs
in
addr16
jns
mov
jb
dec
xor
cmpsl
pop
stos
fisttpl
xchg
sub
loopne
mov
dec
mov
mov
or
push
jle
test
push
aam
xchg
sbbb
sbb
mov
mov
dec
cmp
dec
test
in
xchg
mov
pop
dec
cmp
hlt
push
sti
sti
push
roll
push
and
movsb
imul
sbb
dec
dec
jns
lods
das
push
mov
add
daa
es
int3
std
dec
or
and
js
pop
call
adc
sub
je
inc
inc
out
testl
jge
loop
sbb
insl
dec
push
or
mov
loop
cmpb
adc
out
adc
pop
jle
mov
mov
scas
outsl
arpl
and
pushf
push
push
mov
hlt
int
shrl
sub
aam
add
pop
scas
addr16
inc
loope
inc
push
add
ficoml
add
gs
mov
adc
inc
mov
jmp
lcall
ljmp
sahf
out
incb
push
inc
dec
or
mov
loop
mov
arpl
jns
adc
pop
adc
mov
adc
cmp
and
adc
js
jo
pusha
shll
cwtl
loop
dec
push
shrl
outsl
mov
scas
mov
sub
lahf
sbb
out
mov
mov
fwait
dec
int3
sbb
xchg
jns
add
nop
push
or
adc
in
cmp
arpl
fcoml
xor
xor
enter
in
out
insl
inc
movsb
pop
add
clc
js
fucomp
push
lret
pop
and
push
mov
out
pop
jmp
sbb
enter
mov
push
dec
fmuls
test
fs
pop
jb
xchg
insb
push
das
sbb
dec
fmul
fdivr
fsts
dec
fildl
pop
dec
test
fnstsw
aas
push
or
lods
lret
jne
jp
push
xchg
mov
mov
fcomp
icebp
or
pop
mov
xchg
add
xchg
mov
fnstsw
sbb
call
movsl
sbb
pusha
push
rcl
mov
iret
push
inc
pop
cltd
testb
sub
mov
mov
push
inc
fistpll
jno
pop
push
mov
mov
movsb
and
arpl
aad
sbb
mov
xor
pop
add
push
jle
inc
lea
cltd
mov
fwait
sub
pushf
and
inc
jmp
aas
test
std
in
adc
or
inc
mov
ret
aas
add
pop
fists
sbb
std
outsl
arpl
fisubl
out
out
jge
mov
add
ja
fbstp
and
sub
push
add
add
mov
inc
pushf
pop
or
fisttpl
inc
aaa
pop
jp
in
lret
lock
test
cmp
sub
sarb
imul
fnstcw
dec
cmpsl
add
insb
leave
mov
push
jmp
xor
dec
loopne
stos
sub
lods
lods
sub
sbb
ljmp
jb
push
jl
lock
cli
iret
jns
adc
pop
add
and
and
adc
int3
into
arpl
inc
mov
sbb
popf
in
pop
fs
cmpsl
mov
mov
push
adc
mov
popa
mov
fs
xchg
js
or
aaa
mov
incb
sbb
iret
push
jle
mov
jg
dec
xchg
xchg
enter
insb
test
rorb
cld
mov
jecxz
fwait
xchg
div
sti
scas
push
cld
jae
bound
and
dec
sub
inc
mov
push
sbb
push
cmp
pushw
shll
aaa
xchg
nop
sahf
stc
xchg
lods
loope
fstps
dec
xchg
adc
sbb
inc
sarl
mov
cmp
iret
lds
loope
testl
leave
enter
push
push
xchg
xor
decb
cmpsl
cmc
mov
push
sti
pop
jmp
xchg
int3
mov
ds
into
adc
stc
mov
ds
lock
adc
lea
insl
daa
iret
add
dec
fdivrs
filds
sbb
push
and
into
mov
xchg
push
lds
jecxz
dec
cld
std
les
fcomps
ret
in
test
mov
imul
mov
jg
ss
imul
jle
push
mov
loope
pop
xor
xor
aaa
add
cld
repz
pop
js
stc
push
or
mov
testb
jp
je
leave
test
js
sti
mov
jl
and
mov
dec
stos
enter
shll
iret
push
out
jp
push
ret
ds
shl
mov
scas
dec
aaa
outsl
add
push
sbb
mov
pop
mov
push
sbb
add
lret
or
xchg
inc
leave
scas
push
sub
sub
dec
stos
scas
mov
sub
push
push
movsl
inc
pusha
xchg
mov
sti
fldt
inc
shrl
mov
or
xor
push
insb
les
xchg
fcmove
jecxz
les
sahf
and
fnstenv
popf
lock
jp
add
pop
lock
xchg
fcompl
dec
mov
lock
xchg
mov
loopne
and
mov
jb
and
shrb
sub
pop
pop
jg
cmp
pop
repnz
mov
and
mov
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
adc
jp
pop
jp
popf
xchg
loope
sbb
lcall
shlb
cwtl
sbb
and
mov
cmc
mov
pop
and
lock
adc
xor
jne
outsb
xchg
mov
lods
cmpsb
dec
dec
push
pop
pop
sbb
mov
rorl
lods
data16
sub
addl
push
xor
cmp
sub
sub
xchg
mov
sarl
jmp
push
sub
cmpsl
adc
dec
fs
shll
push
sbb
inc
in
lds
ja
out
lock
lret
jns
or
sub
xchg
dec
stos
add
dec
cmp
mov
icebp
out
sub
sub
jg
xchg
mov
dec
sbb
push
lret
mov
int3
int
fldpi
rcrb
enter
fstpt
jns
daa
adc
mov
outsl
jl
xor
mov
and
ds
push
inc
sub
xor
pop
aas
sub
mov
aam
and
mov
dec
fdivrs
add
ljmp
addr16
repnz
pop
mov
movsb
cwtl
cltd
or
ja
aas
inc
mov
push
pusha
aam
jae
pushf
inc
jae
lahf
mov
lods
sub
and
pop
popf
loope
roll
fs
mov
pop
inc
outsb
push
aam
sbb
xchg
add
js
jmp
xor
mov
dec
sbb
gs
cmp
je
lock
xchg
pop
jnp
dec
add
cmp
fmull
std
cli
mov
and
dec
ja
push
es
arpl
jmp
aaa
ret
push
jge
in
test
fisttps
pop
lods
cmp
jbe
stos
inc
in
xchg
jns
sub
imul
mov
push
xor
mov
lret
arpl
daa
sub
jo
negb
outsl
mov
jne
cs
sbb
in
subl
ret
adc
ljmp
cli
or
push
fsubr
mov
jp
in
inc
pop
and
lds
leave
out
inc
mov
popf
push
jge
int3
add
int3
lds
push
arpl
xchg
std
fnstcw
lea
outsb
jo
leave
es
imull
pop
iret
mov
pop
addr16
jp
add
push
mov
cmpsb
mov
cmp
mov
test
push
cld
inc
push
ja
test
xchg
sub
into
add
mov
fs
mov
rcl
adc
mov
add
and
andl
lret
or
fnstsw
mov
into
add
pop
mov
adc
imul
pop
jo
arpl
mov
adc
lea
and
xor
mov
daa
out
and
ret
push
adc
dec
push
add
loop
pop
mov
adc
xlat
push
adc
pop
sbb
xchg
nop
cld
and
cmpsl
in
pop
leave
mov
mov
and
jns
xchg
push
or
jp
outsb
or
clc
sub
incb
insl
push
sahf
sbb
dec
decl
fsubrl
xor
pop
mov
sqrtps
out
push
cmpsb
rcrb
push
xchg
lcall
xor
cmpb
mov
dec
dec
or
in
les
sub
dec
scas
push
aas
out
outsb
mov
xlat
out
outsl
stos
gs
pop
loopne
push
loop
mov
out
jl
nop
repnz
shr
add
push
and
lcall
push
outsb
add
ret
dec
dec
or
sbb
adc
fisttps
pop
sub
dec
and
jecxz
pop
push
imul
cmp
jecxz
dec
add
insl
cld
mov
xchg
sti
mov
imul
mov
or
or
inc
sub
mov
aaa
push
cmp
sbb
daa
fidivl
fcoms
and
mov
cltd
cld
imul
xchg
sbb
mov
cmpsb
movl
sub
fwait
or
push
push
cmpsb
fwait
pop
daa
je
test
mov
inc
cmp
or
imul
lahf
fs
push
pop
movsb
mov
cmp
add
or
insb
fs
adc
add
pop
enter
lret
mov
add
fdivrs
shlb
hlt
dec
daa
repz
sbb
inc
aad
adc
fcoms
jge
js
adc
adc
addr16
test
jno
insb
sbb
push
push
fisttpl
shrb
imul
mov
hlt
lods
mov
dec
adc
outsb
ret
mov
xchg
cmpb
xchg
pop
xor
xchg
inc
into
cwtl
pop
mov
mov
lds
in
out
mov
add
bound
push
aad
fwait
sub
sub
cmpsl
repz
dec
cmp
and
scas
jnp
cli
inc
or
cmp
pushf
dec
outsl
addl
mov
scas
cltd
or
enter
inc
in
adc
and
mov
arpl
test
lret
shld
dec
jge
les
xchg
adc
xchg
stc
pop
and
jle
std
xor
popf
daa
mov
inc
xor
sub
std
add
lret
imul
das
sbb
mov
xchg
sbb
ret
cwtl
addr16
insl
invd
push
and
enter
inc
mov
mov
test
pop
test
test
push
aad
out
rcrb
test
mov
and
cltd
fcomps
or
and
roll
mov
mov
cmp
xchg
test
idivb
mov
pop
pop
lods
movsb
push
mov
or
lds
sbbl
inc
sbb
add
popf
mov
insl
ds
jb
dec
cmpsl
inc
fists
inc
stos
sub
xlat
dec
push
mov
outsl
mov
pop
not
fldt
adc
stos
lea
test
mov
fldt
imul
xrelease
mov
jne
dec
and
retw
and
pushf
addl
push
into
sbb
add
sbb
xchg
addr16
adc
and
lds
sbb
fisttps
and
inc
into
aas
shl
inc
adc
push
in
in
fwait
pop
cmp
into
push
jmp
mov
aam
mov
sub
cmp
sbb
xor
in
cmp
addr16
cmp
data16
xor
movsb
adc
jp
xor
jg
xchg
sbb
xchg
hlt
clc
adc
push
and
arpl
mov
jmp
mov
rclb
mov
sarb
xor
xchg
lahf
mov
decb
fstpt
psrlw
push
jge
mov
loop
pop
push
mov
pop
ljmp
cmc
rcl
jle
in
cmp
mov
negb
addb
pusha
and
inc
mov
mov
cmc
cwtl
inc
mov
aam
mov
mov
push
push
shl
scas
dec
stc
orps
mov
pop
scas
hlt
inc
sbb
xchg
jns
jb
and
imul
jb
pop
xor
adc
sbb
push
sub
xor
je
enter
jmp
in
mov
nop
cmpsb
xor
push
pop
jne
negl
inc
inc
add
mov
xchg
verw
mov
jnp
ss
aam
popf
jno
lcall
dec
pop
addr16
sbb
add
mov
test
mov
mov
lods
inc
sarb
das
out
jp
mov
call
xchg
mov
fsubl
xchg
pop
push
in
cs
inc
push
ret
lahf
cwtl
rcrw
and
ss
sti
mov
rcrb
in
and
mov
push
div
daa
push
sub
push
jg
mov
xor
jmp
stc
pop
adc
outsb
sbb
fildl
addb
fisubrl
lret
mov
dec
xchg
fwait
mov
fwait
inc
cmp
out
popa
hlt
inc
scas
adc
int
stc
dec
test
mov
mov
jmp
in
mov
outsb
inc
and
lret
lret
loop
sub
std
pop
mov
cmc
ss
loop
jle
lods
aas
xor
popa
inc
jp
call
loop
lods
scas
or
dec
push
mov
bound
sub
std
jbe
inc
sbb
je
adc
push
mov
lods
mov
cmp
test
ds
mov
pop
mov
mov
mov
lret
push
into
nopl
dec
sub
cmpsl
sbb
ffree
fnstcw
cmp
ret
xchg
mov
movsb
sub
lds
cmp
adc
adcb
or
sbb
sbb
popf
mov
in
push
sub
mov
mov
lock
stos
and
cli
ficomps
lock
imul
pusha
jbe
jb
or
punpckldq
cmpsb
xor
push
xchg
fildl
adc
loopne
ret
and
xchg
sub
outsb
sti
and
lcall
dec
mov
push
xor
xchg
pop
mov
lock
sub
xor
mov
ljmp
dec
stos
add
or
mov
and
cmp
jl
aas
sbb
pop
jge
je
xlat
leave
lret
mov
add
into
jns
in
jge
push
adc
push
xlat
inc
push
push
and
inc
cmc
dec
les
mov
inc
into
add
and
fprem
mov
and
es
jp
adc
test
std
cli
jno
jns
inc
fs
sar
push
cltd
xchg
adc
insb
cmpl
cmp
pop
fsubs
mov
add
fs
or
mov
pop
scas
push
cs
mov
stos
mov
xor
loop
adc
lods
aaa
daa
sti
iret
pop
push
out
dec
stc
push
jg
and
sub
mov
sti
aaa
push
leave
inc
or
scas
fdivl
enter
and
dec
es
imul
inc
in
gs
cmp
scas
das
sub
aam
cmp
negl
pop
add
sbb
pop
in
jno
mov
mov
xor
aad
xor
or
movl
mov
sub
loope
scas
jbe
add
or
enter
dec
test
lds
pusha
test
pop
cltd
pop
cmc
mov
xchg
addb
inc
sar
out
xchg
mov
fldt
mov
test
cmp
mul
cmp
test
pusha
in
imull
mov
mov
movsb
mov
fidivs
popf
jmp
push
loopne
mov
and
call
and
cmp
fiadds
outsl
mov
mov
das
add
shll
sub
nop
jmp
push
cmp
aas
sbb
cs
out
sub
add
pop
add
jae
addl
inc
jb
rolb
xor
pop
xor
es
cmpsb
ret
les
mov
test
movsl
pusha
scas
fwait
rcrl
xchg
cmc
fmull
and
mul
sahf
in
orl
bound
mov
inc
in
lds
cwtl
arpl
mov
fadd
jno
pop
adc
inc
stc
je
inc
push
es
mov
lret
out
ret
fisttps
jb
das
scas
cmp
outsl
sub
sbb
fistl
movsl
dec
cmpl
cmpsb
push
div
pop
cmp
scas
popf
cwtl
pop
sub
push
arpl
ja
insb
fdivs
jg
mov
and
inc
popa
jae
lods
js
adc
push
fisubrs
pop
dec
in
leave
inc
mov
ficomps
scas
push
dec
dec
sbb
push
sahf
ljmp
push
popf
adc
fneni(8087
xchg
fcoml
scas
and
dec
popa
dec
xor
dec
push
adc
out
idivl
scas
dec
scas
inc
repnz
ljmp
jnp
cmpsb
mov
divl
mov
shlb
aaa
test
pop
out
aam
xchg
in
subb
jbe
ja
adc
mov
addb
fmull
stos
rolb
fldcw
cmc
xchg
add
sub
adc
iret
mov
or
popa
xchg
inc
test
sarl
ds
jae
mov
cmpsw
jo
mov
rcrl
dec
jecxz
repnz
mov
div
outsl
xor
repnz
jl
mov
cltd
inc
mov
adc
fsubs
sub
mov
bnd
mov
jp
dec
dec
lods
imul
scas
push
sub
testb
aad
adc
or
outsb
mov
jp
pop
scas
cmp
popa
cmp
cwtl
test
popa
mov
lcall
scas
or
mov
mov
add
inc
addr16
int3
fisttpl
pop
popf
cmpsl
pushf
and
xchg
std
mov
ja
mov
mov
pop
jmp
jno
xchg
in
jp
mov
sbb
aaa
dec
arpl
push
sti
push
cmp
xchg
sahf
push
cltd
sub
mov
cli
lret
sbb
testl
dec
cmpsb
xlat
shlb
imul
pop
fucomi
sbb
or
cmp
scas
test
mov
xor
push
jnp
repnz
popf
pop
mov
fmull
fisttpll
add
pop
movsb
sub
out
xchg
idiv
adc
sub
xor
leave
into
arpl
out
push
stos
mov
ds
les
dec
mov
je
mov
popa
popf
in
lss
out
fsubrl
pop
popa
jmp
outsb
and
iret
xchg
in
mov
pop
push
mov
push
pop
mov
out
bound
xor
shlb
lcall
mov
pop
mov
jbe
add
stc
xlat
out
out
mov
les
rclb
add
inc
inc
stc
sbb
push
mov
bound
hlt
daa
ret
rolb
out
and
jne
dec
and
notb
inc
sarb
pushf
sub
std
xchg
fcomps
pusha
lcallw
dec
push
addr16
pop
sbb
mov
mov
xchg
fwait
shrb
mov
cmp
and
or
inc
xchg
les
push
sarl
bound
int
fsubrl
fstpl
or
outsl
outsb
aam
adc
mov
and
dec
and
sbb
stos
outsl
xor
iret
xchg
xlat
sbb
pop
sti
fisubrs
cs
inc
push
pop
mov
mov
rcll
push
mov
mov
int3
stos
repnz
mov
jp
adc
inc
fdivl
jno
jns
sub
lea
or
sbbb
out
out
jge
dec
call
jae
or
xchg
cli
imul
mov
vrcpps
out
adcl
push
adc
dec
sub
sbb
mov
xor
pushf
aas
sbb
xchg
mov
sub
pushf
sub
and
push
xor
jmp
adc
mov
sbb
jno
push
cmp
push
pushf
jb
inc
xor
fstps
cmp
jle
add
adc
cltd
pop
lea
inc
xchg
dec
out
rorl
cltd
sti
imul
sbb
gs
adc
icebp
aaa
cmp
push
orl
mov
stc
test
into
sub
ret
shll
inc
int3
push
mov
out
pushf
scas
push
mov
xchg
push
cmp
mov
leave
test
faddl
or
adc
inc
mov
inc
shlb
push
icebp
adc
jge
rorl
js
iret
rorl
dec
fbld
repz
add
lods
push
cmpsl
mov
xor
mov
xchg
push
sbbl
mov
insb
dec
lret
pop
repz
mov
out
cmp
in
sub
dec
sahf
or
subl
in
cmpsl
mov
jp
sbbb
xchg
fsub
xchg
and
mov
mov
dec
ret
jecxz
insb
mov
test
std
jbe
ss
jle
sub
adc
mov
pop
idivb
xchg
xchg
add
test
dec
mov
and
jns
dec
repz
jbe
sub
test
mov
js,pt
add
mov
ja
push
ss
out
or
dec
jne
dec
mov
ret
cwtl
sbb
outsl
cmp
cld
add
int3
nop
cmpl
outsl
aas
lcall
fstps
adc
adc
adc
pusha
lock
mov
out
or
and
sbb
push
loop
sub
push
or
jb
inc
mov
and
stos
sahf
cmp
pop
xchg
sub
dec
scas
jb
rcl
mov
pusha
nop
pusha
xchg
insb
adc
push
cmp
xor
xchg
push
or
push
test
roll
mov
aas
xor
outsl
sar
in
imulb
inc
cmp
add
test
loop
mov
aad
aas
in
add
mulb
popf
xlat
sub
mov
xor
fmull
nop
int
out
test
xor
push
dec
xor
test
mov
inc
leave
pop
fisttpll
loopne
pop
add
lret
repz
push
pop
leave
jae
sbb
out
aad
addr16
enter
sub
enter
add
sub
push
cmp
cmpsb
cld
test
mov
sbb
cmp
jae
into
mov
pushf
fadds
out
fsubl
mov
pusha
movsl
faddp
dec
xchg
mov
clc
popa
push
xchg
xchg
or
addr16
jmp
push
frstor
ret
aas
insb
nop
pop
out
lahf
in
fdivrl
icebp
cmp
pop
push
es
cmp
xor
test
mov
jmp
lret
add
ja
adc
js
or
mov
mov
pop
sub
inc
jne
movsl
pop
sarl
dec
outsb
test
iret
cmpsb
sti
js
mov
xor
push
frstor
sub
imul
mov
test
jae
xlat
ss
lcall
push
mov
adc
shr
lahf
mov
mov
popa
or
repz
dec
movb
lock
out
hlt
pop
jmp
push
fucomip
jl
xor
sbb
ja
push
mov
stc
mov
outsb
cltd
insb
xchg
orb
ja
out
or
mov
inc
imul
adc
cld
jg
ss
fisttpl
pop
and
fistl
add
sbb
jle
mov
fcomps
or
lods
jo
imul
divl
mov
pop
dec
test
mov
xor
jecxz
fwait
aas
jns
sbb
xor
lret
mov
in
inc
imul
xchg
xor
insb
cmp
dec
xor
dec
sbbl
inc
add
xchg
mov
xlat
test
sub
aas
mov
add
lret
jp
fdivl
push
outsb
push
add
jle
cmp
cmpsb
xor
lret
fnstenv
ror
pop
mov
adc
outsb
pop
jp
or
shrl
popf
insl
imul
out
mov
mov
scas
dec
nop
pop
xor
mov
xor
push
xor
xchg
imul
push
or
es
jbe
rorl
jecxz
mov
fbstp
out
xor
popf
jp
test
adc
xchg
mov
sbb
xor
mov
adc
mov
loope
mov
mov
and
mov
adc
mov
and
jo
inc
sti
ficompl
xor
lods
lahf
mov
xlat
adcl
xorl
outsl
push
mov
and
out
aad
mov
push
dec
out
sbb
push
xor
stc
lret
in
sub
cmp
pop
add
add
adc
push
xchg
lahf
sbb
push
jnp
les
lods
pop
std
loope
push
scas
loope
cmp
je
or
clc
inc
cmp
mov
fs
nop
cmp
leave
insb
hlt
cltd
imul
js
pop
addr16
stos
lds
pop
mov
adc
mov
xorl
mov
cmp
sahf
add
inc
ljmp
sub
cltd
and
lahf
in
loop
add
stc
cmp
dec
adc
cmp
jp
dec
pop
ljmp
lcall
push
dec
pop
adc
shrl
stos
jmp
out
popf
loopne
aaa
orb
xor
inc
dec
lock
xchg
mov
dec
mov
in
inc
pop
inc
or
mov
jmp
aad
xchg
mov
ffree
jge
movsb
xor
cli
iret
aam
mov
in
mov
dec
push
sbb
jecxz
cmp
lea
fwait
sbb
dec
sbb
addl
push
inc
adc
mov
pusha
or
mov
sbb
cld
jecxz
fwait
movsl
or
out
mov
push
jnp
jbe
jp
test
push
jp
gs
push
xchg
xor
mov
xor
out
xchg
sbb
push
repz
mov
pop
pop
outsl
ret
inc
dec
pop
dec
cltd
mull
pop
and
cvtps2pd
mov
lret
neg
jne
xchg
xlat
add
daa
sbbl
xchg
and
test
popa
sub
xor
outsl
mov
aas
jp
loopne
and
dec
and
xorl
in
sbb
jne
cmpsb
lcall
pop
jo
jno
push
xor
out
fistpll
mov
rcll
pop
outsb
in
push
cmp
cmp
push
pop
hlt
sti
insb
rorl
out
fiadds
test
push
out
aaa
jmp
in
insb
push
loop
jg
push
pop
add
sbb
pusha
mov
sbb
add
fistl
dec
jle
jle
imul
mov
shrb
je
sub
cmp
cld
and
xchg
filds
daa
jnp
fwait
adc
cmp
xor
cltd
scas
fists
and
mov
add
lock
sub
imul
or
sbb
pop
in
fcmovbe
in
jl
dec
pop
sub
mov
or
clc
or
gs
pop
dec
testb
mov
inc
add
call
mov
xor
adc
scas
leave
adcl
jmp
icebp
inc
jp
dec
jge
nop
fcos
jnp
pusha
pop
popa
lret
daa
lret
push
in
call
or
je
repnz
sbb
data16
mov
adc
dec
dec
jg
inc
orl
cmp
xchg
inc
cld
xor
scas
stc
jle
dec
bnd
repz
push
fisttpll
jns
jle
test
in
gs
gs
nop
mov
inc
mov
js
dec
in
and
fs
add
push
pop
fisubrl
fsubr
pop
mov
in
push
dec
and
pop
insl
ds
mov
push
shlb
pop
cld
xor
cmp
pop
out
adc
and
mov
lcall
stos
pop
mov
pop
inc
in
xor
add
icebp
inc
xchg
jecxz
jge
mov
outsl
stos
push
inc
pop
mov
in
mov
adcl
jnp
pop
jno
inc
popf
fs
out
and
int3
ficoms
lea
fs
and
dec
push
xorl
mov
repnz
movsb
pop
cmp
xchg
xor
insl
xor
movsl
cli
xchg
outsl
gs
xlat
pop
mov
mov
cmp
pusha
leave
popa
push
push
jg
call
mov
pop
lods
orb
movsb
push
jne
push
and
xchg
pop
les
in
ret
stos
inc
jmp
pop
jmp
dec
loopne
and
pop
into
jecxz
inc
push
icebp
test
fdivp
xor
push
adcl
dec
cmc
push
mov
jp
xchg
mov
mov
test
movsb
or
dec
addl
stos
xchg
out
les
pop
popf
mov
aad
mov
lods
aaa
lret
cmp
mov
ret
leave
mov
ljmp
stos
loope
lods
mov
rorb
push
hlt
and
ficomps
stos
inc
lea
ret
cltd
hlt
and
in
add
cmpsl
dec
loop
loop
mov
dec
adc
hlt
cmp
imul
or
cmpl
addr16
push
xchg
jge
cli
add
pop
sbb
sarb
xlat
lea
stos
or
sti
mov
and
add
sarb
dec
or
stos
mov
shll
leave
and
sbb
mov
hlt
pop
xor
cld
or
mov
mov
jp
lods
cmp
lock
cmpsl
inc
sub
mov
js
in
clc
pushf
mov
mov
repnz
adc
data16
ret
inc
out
cltd
jne
inc
in
mov
sti
addr16
xchg
aas
sbb
push
xor
push
cli
adc
jp
data16
loopne
insb
loop
enter
push
arpl
outsl
outsb
fcmovnu
pop
mull
or
dec
push
or
xchg
rolb
lods
pop
loope
cwtl
adc
enter
jmp
addb
inc
lcall
pop
in
rcl
adc
push
pushf
dec
pop
das
retw
test
out
pop
xchg
xchg
push
and
pop
in
cs
adc
bound
pop
mov
dec
cltd
mov
or
gs
fnstcw
cwtl
jl
sub
dec
std
cld
loope
jp
dec
inc
std
fs
mov
outsb
rolb
adc
xchg
ljmp
add
push
add
and
jae
jno
sti
mov
pop
faddl
push
sub
std
sub
mov
loop
xchg
xchg
das
add
or
jne
push
scas
outsb
test
mov
xor
ret
mov
loope
push
or
mov
or
das
adcb
xchg
stc
lods
je
aam
push
sub
dec
or
cmp
push
jno
lcall
and
cmc
negb
adc
icebp
nop
int
mov
movsl
jp
out
add
out
in
rcll
hlt
scas
add
lahf
or
or
rolb
decb
sub
push
int
pop
sub
adc
mov
sub
sbb
shll
hlt
mov
dec
lock
loop
sub
scas
pop
mov
mov
fwait
mov
fs
pop
mov
lds
cmp
dec
aas
fimuls
mov
adc
daa
pop
pop
sahf
mov
sub
sub
std
jae
jae
add
sbb
scas
xchg
mov
rcrb
push
xchg
repz
imul
ret
call
ret
in
xchg
roll
imul
push
movb
sahf
popa
lret
add
xchg
sub
loop
jae
adc
sbb
xor
add
out
inc
mov
mov
fpatan
loope
mov
push
in
push
mov
mov
xchg
push
test
xchg
adc
ljmp
dec
mov
add
aas
sub
mov
or
sub
stc
into
sbbb
and
bound
in
xchg
sbb
xchg
stos
add
arpl
sub
and
daa
es
mov
xor
cli
mov
loope
xor
test
inc
jmp
mov
and
lods
dec
sahf
cwtl
xor
cmpsl
shrl
scas
aad
jle
mov
stos
es
xor
push
push
jecxz
fildl
sbb
ljmp
jnp
sbb
add
fsubr
pop
ret
dec
fbld
mov
stc
xchg
push
gs
push
and
jge
movsb
adc
mov
stos
cli
pop
cmpsl
pop
sub
mov
icebp
xchg
out
mov
fwait
mov
stos
js
and
jno
rorl
xor
dec
imul
pushf
in
and
pop
fimuls
fiaddl
jl
sub
adc
cmp
jno
inc
cmpsl
mov
jl
pop
test
imulb
cmp
jbe
fbld
repz
pushf
adc
cltd
add
jecxz
in
xchg
ljmp
pop
aad
lea
cltd
out
shll
mov
mov
out
sub
cmp
stos
pop
dec
es
sub
pop
dec
mov
xchg
lret
aad
and
hlt
jp
imul
test
sub
sbb
jmp
mov
pop
pop
clc
or
fmul
pop
mov
sbb
jb
pusha
stos
push
stos
stc
sbb
je
out
pop
mov
jg
popa
inc
psubq
sbb
push
addr16
or
mov
jg
push
sub
out
dec
out
ficompl
push
mov
cmp
out
fstpt
mov
jl
popf
in
loopne
dec
adc
pop
xchg
dec
push
lcall
xlat
fldpi
add
mov
in
add
jae
imul
add
pop
test
loopne
out
les
push
lret
xor
sub
insl
fstps
push
aaa
movsb
jle
lods
inc
mov
adc
into
aas
roll
push
in
fldlg2
adc
ds
in
cs
or
mov
gs
cs
xchg
stos
xchg
hlt
mov
push
xchg
xorb
pop
test
fiaddl
xor
adc
pop
sub
lock
adc
sbb
lds
xchg
lret
dec
jne
xchg
sbb
addb
in
jno
jo
in
enter
int3
xchg
inc
test
loope
ss
lret
dec
lret
sub
aam
mov
iret
int
dec
pusha
inc
fidivrl
pop
lahf
lcall
jecxz
fcmovu
and
cmp
xor
jbe
or
in
and
je
sub
fdivrp
dec
stc
stos
jo
xchg
or
arpl
scas
cmp
int
jecxz
mov
jge
jle
fdivrl
popa
sahf
imul
jecxz
cltd
orl
shl
jmp
mov
push
mov
inc
das
dec
push
mov
bound
hlt
fwait
scas
call
dec
fs
sub
nop
xchg
inc
loope
jns
ja
dec
insb
jnp
imul
cmpsl
sub
inc
cmpw
inc
aaa
pop
enter
fbstp
push
cwtl
jmp
sub
adc
pop
push
xchg
mov
callw
and
ds
movsb
and
test
fistpl
xchg
mov
insl
sub
xorl
pop
popa
xor
cmp
imul
add
nop
sbb
jo
mov
pop
mov
arpl
hlt
inc
cld
sbb
cli
and
out
lock
and
jle
mov
pop
cwtl
adc
inc
das
fmull
cmc
jno
sahf
mov
rclb
pushf
adc
sbb
inc
pop
pop
cmp
mov
xor
push
mov
mov
add
mov
sub
mov
roll
das
xchg
pop
sahf
push
pop
or
fnstenv
xor
sub
lea
mov
ficoml
xor
sahf
insl
pushfw
mov
lods
push
dec
aad
mov
adc
sbb
dec
inc
scas
add
adc
addr16
jo
xor
or
xor
into
xchg
push
scas
imul
dec
pop
xor
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
daa
pop
aad
and
sbb
jp
fisttpl
and
xor
ljmp
imul
cmpsl
and
mov
pop
out
jmp
popf
ds
jnp
lret
mov
push
inc
repnz
jb
cmpsb
mov
jno
bswap
and
xchg
je
daa
fisubrl
js
mov
dec
push
lret
loop
xlat
or
push
adc
aad
insl
ljmp
inc
scas
add
cmpsl
jno
fidivl
cmp
lods
xchg
cmp
hlt
mov
adc
lea
dec
mov
lods
xor
and
outsb
xchg
add
inc
xchg
imul
sahf
push
xor
out
inc
jg
loop
mov
jne
dec
je
jg
fists
fwait
insl
jge
ss
xchg
icebp
sbb
sbb
add
aas
pop
cli
mov
fucomi
enter
jg
inc
xor
xor
mov
andb
and
rcrb
cltd
ds
lret
ss
leave
jbe
in
ljmp
jb
hlt
add
push
icebp
push
pusha
pop
mov
dec
inc
pop
out
in
stos
push
sahf
sub
mov
fs
divl
pop
imul
iret
out
ja
fsub
in
outsb
push
jge
push
pop
jne
loopne
inc
jge
push
mov
xchg
xlat
shrb
imul
outsl
push
mov
out
pop
xor
popf
out
fstl
in
xchg
loopne
mov
push
test
add
cli
mov
call
cmpsl
cmp
std
imul
sbb
push
xor
mov
fsubp
pop
leave
gs
jae
cwtl
cltd
sbb
js
std
cli
mov
stos
pusha
pop
cmp
add
divl
mov
xor
jno
lahf
or
mov
pushf
push
cltd
push
xchg
cmp
pop
sbb
adc
popf
sbb
dec
mov
or
or
mov
ljmp
cmp
jo
mov
stc
sub
pop
xor
or
out
cmp
inc
pop
mov
lock
xchg
out
jno
jle
dec
inc
sbb
outsl
repnz
or
shrl
lret
stos
inc
popf
or
in
cmpsb
add
jle
lret
cli
sub
xor
adc
mov
sahf
xchg
mov
loope
jns
arpl
sbb
sub
inc
rcl
dec
or
cltd
add
push
popa
mov
mov
mov
inc
aaa
cmp
pop
jge
rolb
jo
xchg
repnz
and
enter
mov
ja
inc
pop
dec
xor
cmp
add
cmp
dec
repnz
shrb
fsubrl
sub
xor
setnp
mov
mov
cwtl
decl
mov
xor
mov
and
inc
push
inc
movsb
cmpsl
mov
push
negl
addr16
lods
mov
adc
cmp
icebp
xchg
adc
shl
jecxz
call
xor
cmp
imul
add
mov
fucom
jle
daa
imul
sub
inc
cmc
sub
mov
dec
mov
rcrb
or
sub
fwait
or
inc
sbb
adc
add
scas
ret
dec
push
xlat
add
pop
lret
or
cs
rcrl
mov
mov
or
xchg
aam
and
mov
sub
inc
inc
adc
fdivr
out
jbe
insl
lds
adc
imul
adc
shll
sbb
xchg
mov
and
je
int
dec
mov
aam
sub
mov
fisubl
jle
in
cmp
mov
stos
pop
icebp
xchg
xor
stc
xchg
sti
ds
ret
insb
nop
xor
cmp
out
bound
je
dec
aaa
sbb
and
ss
scas
dec
data16
clc
cmp
cmp
inc
inc
mov
push
xchg
js
mov
push
mov
enter
test
adc
push
ret
and
shr
das
dec
lods
adc
dec
repnz
out
data16
scas
jmp
mov
faddl
inc
push
jo
add
mov
loop
dec
fsubp
repz
out
mov
scas
addl
insl
insb
cmp
xchg
out
fists
or
inc
sub
jne
loopne
int
push
sbb
or
testb
xchg
fcomps
test
xor
xchg
sbb
aad
lds
enter
out
popa
fldl
jne
jae
cltd
dec
inc
ficoml
je
xor
xchg
pop
or
adc
lcall
sarl
xor
cmp
xchg
mov
repnz
pop
scas
xor
jae
test
pop
xchg
or
mov
and
lods
xchg
orb
incb
pop
into
arpl
adc
add
sub
mov
rcl
and
inc
movsl
pop
stc
mov
pop
cld
add
xchg
mov
mov
dec
scas
xchg
cld
inc
loopne
daa
sub
or
add
andl
jg
shlb
pushf
inc
xchg
jp
out
lcall
cmp
mov
push
sahf
lods
stc
inc
lret
xor
adc
push
std
jbe
daa
mov
inc
sbb
repz
pusha
jno
push
jmp
in
sti
cmp
mov
sub
jae
rol
xor
rcrl
and
jl
or
push
in
xor
test
insl
pop
sbb
loope
mov
idivb
setle
lahf
lret
dec
imulb
push
repz
lahf
scas
out
jb
mov
dec
mov
xlat
dec
mov
pusha
mov
mov
cmpsl
fwait
and
push
cmp
jl
fcoms
loop
add
call
daa
ret
dec
movsb
sti
mov
xchg
jmp
insl
mov
pop
stos
mov
outsb
ret
mov
scas
fcompl
ficoml
adc
xchg
push
shlb
push
pop
jbe
jmp
and
mov
jb
dec
jnp
sarb
into
filds
pop
cmp
inc
roll
cwtl
lret
cmp
inc
sub
dec
xor
stos
jae
add
or
imul
pop
leave
cld
enter
cmp
ret
cmp
jnp
rcrb
fs
andb
jl
imul
sbb
cltd
sbb
xlat
xchg
inc
jmp
adc
pop
repz
xor
mov
dec
xor
jns
je
hlt
push
lods
test
mov
cmpsl
loope
jmp
popf
je
fsubl
or
lret
xchg
movsb
je
push
xchg
cmp
lret
pop
shrb
out
sbb
adc
imul
mov
pop
aam
pushf
dec
adc
cli
mov
mov
les
cltd
cmc
lcall
xor
mov
jmp
lcall
xchg
out
and
lods
jno
xlat
jnp
pop
and
decl
xchg
xchg
lret
adc
ret
gs
add
negb
lock
xchg
aam
dec
pusha
cmpsb
xchg
xchg
js
vmread
push
in
mov
push
notl
shr
inc
jae
push
insb
mov
daa
adc
xchg
inc
pop
xchg
xchg
cmp
jno
addr16
bound
loopw
or
jle
stc
sub
sti
movsb
cltd
data16
cmp
repz
push
or
jmp
cld
cltd
xor
dec
dec
pusha
mov
test
inc
das
jns
aas
sub
not
and
neg
cli
xor
popf
cli
push
sbb
rorb
cwtl
push
loop
scas
test
push
imul
and
aas
dec
scas
jo
xor
mov
push
cmp
and
adc
jo
mov
jb
jecxz
cmc
jge
rorl
or
mov
xlat
fstl
stos
or
sbb
aas
imul
jecxz
ret
mov
es
test
or
fldcw
fldcw
pop
jo
cld
mov
mov
jg
push
xor
pop
aad
fnstsw
add
cltd
rcll
jns
sbb
push
push
mov
jb
loope
sub
dec
loop
arpl
arpl
ds
and
sub
adcb
push
shr
jp
ds
data16
orb
xor
xchg
inc
outsl
jae
sub
inc
shl
dec
rol
in
test
mov
lret
leave
scas
jle
out
mov
mov
sub
insb
fdivl
imulb
xchg
fmul
bnd
pop
mov
inc
mov
mov
jo
jne
scas
mov
mov
int
adc
enter
or
test
gs
ja
push
jg
lahf
xchg
xor
cmp
push
enter
sbb
movsb
xchg
mov
test
adc
xor
mov
insl
push
pusha
mov
test
mov
std
je
outsl
outsb
icebp
mov
andb
pop
lock
push
aas
sbb
and
mov
outsl
push
ret
leave
lock
and
mov
adc
inc
loope
cli
je
int3
dec
ret
je
rcll
mov
bound
push
stc
push
pop
fwait
xchg
imul
inc
aad
mov
mov
adc
pop
std
pusha
je
cltd
loope
pop
cmp
mov
mov
mov
repz
lret
out
test
repz
pop
pop
stos
out
in
or
xor
nop
sub
cs
leave
dec
std
jmp
test
jg
push
or
ds
mov
and
ja
popf
dec
mov
hlt
fsubrl
movsb
in
sahf
outsb
xchg
lret
std
insl
pop
lods
pop
xchg
pop
orl
test
sbb
cmp
sbb
push
pop
pop
add
fs
sub
or
xor
mov
xor
xor
jl
lods
jle
testl
xor
adc
dec
sub
rorl
std
sbb
adc
aad
fidivrs
cmpsl
outsb
test
cmpsb
inc
sub
adc
hlt
or
out
mov
frndint
dec
dec
outsb
or
enter
pop
mov
dec
lds
data16
push
and
sub
jp
add
pop
cmp
inc
in
lcall
clc
xchg
pop
add
jle
pop
jp
cmpl
xchg
mov
or
mov
mov
in
jae
sti
cmp
ret
cmp
mov
sub
ljmp
out
data16
cmpsb
sub
jae
aad
leave
call
popf
xor
imull
ret
test
xchg
std
push
sbb
pop
lret
or
outsb
and
pop
lods
inc
add
icebp
enter
mov
add
sbb
mov
into
inc
test
fsubrs
inc
add
sbb
sbb
jp
insb
fists
pop
cmp
loope
add
and
les
sbb
imul
rcll
test
aam
addl
out
push
mov
clc
dec
adc
and
insb
aaa
jle
cltd
repz
mov
fisubl
xchg
mov
divb
push
mov
xchg
lahf
cmp
jo
inc
jg
movsb
add
mov
dec
mov
ret
scas
dec
jnp
xchg
not
mov
inc
cmp
in
fmull
sub
sub
cmp
in
mov
push
mov
fld
lds
testl
stos
les
pop
mov
push
fists
sbb
loop
ret
jmp
pop
aam
mov
aam
iret
and
test
sub
mov
dec
push
cmpsl
jb
add
mov
xor
xor
repz
pop
push
arpl
and
mov
hlt
xchg
ds
outsb
sbb
inc
rclb
cmp
insl
inc
pushf
push
cmp
sbb
add
std
out
sbb
push
cmp
jo
and
and
or
ljmp
sbb
pop
or
cmp
repz
lahf
ljmp
sbb
pushf
sbb
test
loope
add
push
mov
dec
inc
sbb
std
or
and
mov
aad
inc
mov
repnz
jp
sbb
jg
repz
jb
ss
ret
add
push
mov
cmpsl
inc
jbe
xchg
xor
popa
jae
je
push
mov
mov
xchg
fwait
and
in
or
outsb
mov
jp
jno
xor
out
mov
shll
fisttps
jge
sbb
jbe
cltd
pop
lret
xchg
cmc
lea
sarb
test
pop
hlt
aaa
idiv
push
and
xchg
dec
inc
aas
add
push
mov
enter
incb
cmpsb
mov
jnp
arpl
lock
inc
adc
sti
jl
ret
aad
push
daa
cmpsb
mov
in
lods
adc
test
add
pop
lods
hlt
sub
sbb
jecxz
and
jae
les
add
popf
sti
mov
dec
ja
testb
jns
sbb
outsl
inc
xor
fwait
arpl
mov
or
pop
ja
inc
and
adcl
jb
xchg
add
adc
outsl
xor
xor
popf
mov
adc
mov
dec
jecxz
insb
lret
mov
and
enter
lods
lea
in
rep
push
enter
push
sbb
roll
ljmp
movsb
xor
adc
mov
and
push
mov
add
mov
fisttps
add
jo
push
xchg
mov
pushf
pusha
test
inc
or
push
jge
cmp
push
sub
adc
aaa
mov
push
fnstenv
mov
popf
mov
mov
mov
cmc
imul
js
cltd
inc
pop
or
les
pop
jo
enter
arpl
into
cmp
test
pop
loop
inc
xchg
xor
or
or
cmp
cltd
pop
loopne
xlat
sub
inc
lret
mov
sub
xchg
sbb
jne
xchg
inc
pushf
jle
loopne
mov
into
in
xchg
je
inc
pop
fdivrl
arpl
stos
push
add
sub
add
cmc
imul
jp
cmpsb
sbb
lds
dec
push
ror
inc
test
and
add
jle
push
mov
bound
jb
mov
mov
push
mov
addr16
mov
scas
dec
cld
mov
popa
adc
mov
std
fisttps
pusha
lds
pop
ficomps
rcrb
xorb
addr16
sbb
xchg
xchg
mov
inc
lods
pop
xlat
popf
xchg
jmp
push
pop
push
dec
or
xchg
xchg
mov
outsb
ror
pop
jne
adc
xor
jecxz
mov
jecxz
xor
xchg
sub
cmp
sbb
cmpsl
js
bound
adc
ljmp
dec
cmp
js
je
sbb
xchg
hlt
lods
lret
repnz
jp
push
mov
push
fistl
pop
pop
and
add
mov
in
cmp
mov
sti
cmpsb
jecxz
sub
cmpsl
mov
cmp
dec
add
cli
rolb
dec
adc
pushf
std
push
pop
shl
jnp
mov
jge
sbb
push
lcall
insb
shl
ja
arpl
pop
xor
inc
cmpsb
pop
shrl
xor
jmp
enter
ret
arpl
mov
sbb
int
rolb
clc
vshufpd
pusha
loope
jno
test
push
pop
movsb
in
test
cwtl
shl
ds
push
lea
sarl
ja
lahf
dec
jo
pop
les
pop
xchg
inc
adc
popf
and
mov
mov
mov
add
fldenv
enter
add
sbb
and
inc
xor
jno
negb
dec
xchg
daa
mov
jo
push
cli
lahf
das
es
sbb
cmp
scas
mov
pop
outsl
in
dec
xor
pushf
pop
pop
orb
js
or
in
dec
add
pop
xchg
or
lds
mov
into
cmp
inc
imul
pop
adc
dec
dec
stos
xorb
aam
aas
xchg
fcmovu
gs
inc
jmp
push
xchg
imul
sbb
fnsave
out
loope
bound
movsb
mov
nop
sub
cmp
aam
cltd
push
mov
sbbl
sbb
xlat
aad
stos
arpl
cld
mov
sbb
or
cmp
pop
xlat
push
lret
inc
jmp
out
sbb
xchg
lret
cmp
stc
xor
fdiv
push
outsl
mov
insb
mov
loopne
or
fstps
push
xor
lcall
push
loopne
pop
adc
hlt
dec
mov
jae
add
and
pop
mov
xchg
or
pop
out
mov
push
andb
mov
shlb
sbb
scas
addr16
pop
lods
fsubrl
or
add
call
cwtl
push
push
add
int3
jno
insl
or
das
cmp
testl
js
pop
sub
xor
out
mov
shrb
jae
ret
xor
inc
cmp
sbb
inc
leave
and
mov
and
aam
shll
daa
mov
icebp
sub
sahf
sub
xor
stc
addl
test
pop
pop
and
in
shrl
into
push
test
xchg
xor
dec
push
sub
std
lds
in
leave
je
stos
inc
movl
and
mov
xor
sahf
or
decl
or
cmp
subb
fisttpll
xchg
sbb
mov
mov
cltd
or
test
push
cli
xlat
jecxz
mov
in
insl
fistpll
pop
into
fstps
adc
fcoml
pandn
sti
jnp
sbb
jge
cmp
fisubrs
mov
in
out
bound
xchg
movsb
rcrl
fdivrl
es
out
xchg
xchg
idivl
bound
fsub
cwtl
test
add
test
mov
loop
movsl
pushf
pop
fucomi
out
das
pop
dec
and
mov
iret
pop
mov
cmp
sbb
jno
loop
xor
or
out
jnp
test
mov
ret
sarl
lret
xor
sbb
ljmp
fs
fcoms
jo
mov
inc
add
rcrl
dec
shll
mov
sub
aaa
and
and
ret
cwtl
xor
push
pop
mov
cmpsl
dec
xor
cmp
std
mov
add
out
sub
ja
popfw
rcrb
addr16
add
jg
lcall
xchg
ret
ret
push
xchg
add
mov
push
xlat
mov
ret
inc
mulb
dec
dec
jbe
fcmovnbe
or
daa
mov
mov
in
mov
les
iret
mov
add
mov
pop
arpl
push
insb
push
mov
lret
lods
in
dec
les
sub
jbe
roll
in
push
xchg
xchg
lock
inc
dec
insb
repnz
sub
loope
sub
xlat
xchg
iret
nop
in
sub
jmp
stos
cmpsb
ds
inc
jmp
jecxz
xchg
xchg
push
in
or
sub
add
pop
mov
movsl
mov
popf
shrb
cmc
dec
sub
fidivrs
mov
pop
sub
add
les
mov
dec
adc
idivb
add
add
lea
loop,pt
cmpsl
xchg
mov
fwait
xor
lret
and
sti
xor
xchg
mov
inc
dec
aam
fs
mov
scas
pop
popl
dec
jnp
cltd
iret
outsl
cmpsb
call
sub
and
xor
mov
jnp
test
sub
mov
dec
outsl
push
cwtl
jbe
and
mov
push
nop
loop
test
sbb
dec
sub
loop
mov
mov
fcomip
imul
push
jp
xchg
adc
dec
and
mov
loope
lahf
xlat
sti
xchg
cmp
mov
jo
cmpsl
mov
jge
lret
fisubs
lret
push
ljmp
lret
lahf
and
xor
mov
cli
pushf
or
cmp
cmp
es
lcall
mov
cli
rorl
dec
in
push
lahf
or
fsubp
jne
cltd
add
ret
add
jl
xchg
lds
shll
dec
movaps
ffree
mov
imulb
enter
inc
movsl
outsb
push
sahf
xchg
ss
and
ret
mov
fnstsw
or
sbb
lret
orl
jecxz
and
je
arpl
cmp
or
loope
into
fcompl
mov
test
and
push
or
dec
xchg
jbe
subl
addr16
inc
xor
xor
pushf
ljmp
int
jno
xchg
dec
inc
pop
mov
jbe
and
jno
jmp
adc
adc
lds
push
mov
pushf
or
frstor
pop
iret
mov
push
or
hlt
imul
or
push
and
mov
push
orb
ljmp
pop
mov
mov
jp
mov
inc
push
or
sub
dec
mov
and
shlb
inc
jnp
bnd
iret
adc
popa
fidivl
mov
test
push
jmp
xor
ret
push
push
out
insb
mov
rol
fildl
push
lret
loopne
adc
pop
movsb
sarb
sbb
pop
ror
jb
mov
mov
xchg
xchg
adc
jp
adc
xor
push
mov
mov
pop
in
arpl
mov
int
fsubs
lods
loop
xor
xchg
pop
ret
fadds
addl
movsl
movsl
int3
lds
ret
test
test
movsb
arpl
xchg
sti
loopne
cmpsb
icebp
jg
fwait
xchg
mov
scas
rorb
dec
ret
xchg
or
bound
imull
add
mov
in
mov
cwtl
leave
imul
das
mov
outsl
test
iret
mov
mov
leave
clc
jecxz
mov
movsb
or
fwait
loop
fcomps
fnstenv
fsubs
jmp
pusha
ss
add
and
push
outsb
dec
lods
daa
cmpsl
sbb
jl
jb
lock
inc
xlat
xorb
gs
lcall
pop
vmread
stos
mov
push
insl
xchg
nop
dec
inc
idivb
mov
lea
mov
xor
lods
jp
les
int3
push
mov
inc
pusha
enter
sahf
test
imul
test
jp
xor
mov
add
arpl
or
inc
and
push
cld
sub
jno
std
xchg
dec
jl
rol
push
clc
pop
adc
mov
movsl
out
inc
aaa
lret
out
outsb
fstpt
jae
mov
movsl
jmp
xchg
adc
sub
andnps
mov
inc
jbe
dec
rcrb
dec
inc
mov
mov
xor
pop
sbb
push
jns
xchg
gs
pop
fwait
jecxz
jae
mov
add
insl
xchg
stc
aaa
pop
dec
cwtl
fisttpl
rorl
cmpsb
mov
movsl
imul
lcall
sbb
sub
mov
pusha
jecxz
add
cli
cmpsl
cli
push
dec
jmp
cs
sahf
das
xor
sbb
repz
pop
mov
decb
adc
cmp
add
jge
bound
popf
rorl
test
push
mov
lds
xchg
and
cmp
das
dec
inc
cmc
pushf
inc
lret
loopne
movsl
mov
fadds
arpl
cmc
xchg
and
scas
ret
std
cld
jge
sub
fs
fnsave
sub
inc
mov
pop
mov
mov
dec
xor
repnz
aad
rorb
inc
or
pop
mov
or
fstps
cmp
jge
scas
loop
mov
movsb
xchg
push
push
adc
negl
push
mov
aaa
xchg
cwtl
sti
mov
into
cmc
mov
inc
mov
dec
adc
adc
inc
inc
sarl
xor
sbb
jbe
out
mov
mov
pop
fldcw
std
pop
lock
scas
rorb
dec
xchg
inc
and
jb
mov
shlb
fidivl
addl
mov
inc
outsb
rcrl
adc
jge
idiv
daa
call
jne
rolb
sti
inc
pmaxub
lret
leave
outsb
adc
ret
inc
inc
xor
add
mov
int
sbb
pop
pop
dec
mov
mov
loope
or
ret
lods
hlt
mov
imul
xchg
mov
push
sub
sbb
in
push
cwtl
sub
push
push
nop
das
das
cmpsl
insl
js
test
hlt
mov
or
xchg
arpl
xor
inc
fs
mov
fcmove
cltd
popf
pop
dec
sbb
or
mov
bound
xlat
fidivrs
mov
or
xchg
daa
std
add
pop
cmc
mov
ret
aas
push
enter
bound
fildll
jo
xor
and
orb
cwtl
lea
sti
lret
int3
dec
xchg
fwait
mov
sub
pop
test
sub
je
leave
push
jno
jp
jne
mov
fidivrs
cmp
dec
sub
mov
pop
mov
and
dec
mov
das
or
mov
cmp
imul
jbe
dec
in
mov
lcall
mov
dec
mov
orb
cmpsb
test
fwait
in
leave
jnp
outsl
pusha
and
adc
jmp
popf
pop
cmp
je
fistpll
loope
cmp
adc
into
push
mov
enter
pop
jae
in
dec
loop
decl
stc
dec
pop
adc
mov
sbb
popf
xor
mov
mov
xor
data16
les
lods
sti
enter
sub
scas
push
cs
shll
sub
test
pop
out
mov
les
in
jl
negl
pushw
mov
xor
sbb
pop
cmp
test
loop
sbb
jl
in
push
sub
fnstcw
xchg
cmp
sub
cld
sti
test
cmp
sub
xchg
mov
xor
inc
cmpsb
lock
gs
pop
xor
push
jle
pop
sbb
push
adc
js
bound
stos
jp
dec
and
and
xchg
mov
jecxz
ja
rcr
sti
and
pop
ljmp
push
push
es
sti
icebp
xchg
mov
out
mov
push
mov
rcr
jno
fadd
ss
fldl
ficoml
mov
pushf
sub
mov
cs
pop
cmpsl
fbstp
jne
add
sti
xchg
movsb
addl
mov
mov
xchg
incb
dec
xor
adc
mov
leave
mov
int3
in
fidivl
sbb
cmp
sbb
imul
jg
ret
pop
xchg
mov
aam
sahf
adcl
rcrb
test
jnp
data16
and
mov
stc
test
sarb
bound
jb
xor
jns
xchg
adc
sahf
inc
push
jno
in
mov
daa
or
or
xchg
pop
jmp
cmpsl
sahf
mov
cmp
and
mov
movsl
popa
cmp
cmp
daa
adcb
aas
aam
cmp
cmpsb
jns
push
xchg
fmulp
loopne
mov
xchg
pusha
pushf
cmp
loopne
pop
nop
mov
lret
jecxz
outsb
push
adc
ja
cld
push
lods
fcomps
fisubrl
mov
shrl
mov
pop
addr16
sub
leave
daa
fwait
das
test
mov
subl
sti
mov
pop
adc
mov
je
xlat
xor
dec
sbb
call
test
push
divl
and
push
xchg
out
cs
movsl
adc
lea
scas
sub
lds
adc
movsl
dec
cmc
inc
out
scas
push
test
mov
scas
popf
cs
mov
fidivl
inc
mov
fs
xchg
push
push
in
jmp
cmp
jge
inc
add
xchg
subl
push
mov
xor
pop
pop
out
or
pop
cmp
pop
xchg
adc
insb
mov
mov
fs
jmp
mov
out
in
add
dec
cli
inc
cwtl
jbe
clc
loope
aaa
es
in
lret
in
add
mov
sar
mov
ss
push
in
mov
aaa
push
mov
xor
push
rcrl
loop
nop
loope
jle
mov
cmp
sarl
add
leave
xchg
out
adc
or
or
xor
jmp
mov
cmp
inc
in
lahf
mov
xlat
mov
dec
cmc
xchg
push
mov
sbb
jmp
inc
push
mov
mov
test
sbb
std
aaa
add
push
bound
xor
inc
sbb
sub
xorl
sti
mulb
mov
clc
sahf
stos
test
xor
adc
push
cmpsb
insb
inc
ljmp
xor
insb
shll
xchg
inc
inc
aam
lret
sub
addr16
dec
jns
ja
inc
int
into
rclb
lea
into
mov
sub
mov
dec
mov
sbb
add
push
sub
cmc
jne
addb
hlt
xchg
mov
bound
and
movl
mov
shlb
cmp
iret
cwtl
jae
jg
inc
int3
out
adc
jb,pt
inc
stos
testl
or
shrb
pop
test
clc
sub
dec
loopne
insl
not
sbb
insb
lcall
lods
mov
or
and
jns
xchg
mov
gs
xor
iret
nop
jge
sbb
inc
mov
out
xlat
xchg
jg
les
jp
cmpsb
lcall
fwait
hlt
ss
adc
jg
xchg
add
fwait
inc
mov
ljmp
jecxz
cld
sub
call
pop
sub
dec
xchg
loope
insl
and
je
jge
push
jmp
or
daa
outsb
mov
cli
or
enter
cmpsl
je
push
call
pop
out
inc
ret
outsb
les
rol
je
test
loope
push
scas
inc
mov
filds
sahf
icebp
mov
movl
ss
or
dec
mov
dec
mov
inc
cmpsl
enter
loop
jo
loop
sbb
movsb
mov
push
cmp
hlt
negb
out
mov
in
movsl
shlb
daa
fnstcw
jo,pn
shrl
lret
sbb
pusha
addb
add
xor
es
jbe
ret
inc
mov
pop
fildll
cs
mov
xor
mov
loopne
popa
cmp
pop
inc
jnp
cmp
xchg
popf
inc
cwtl
mov
add
inc
fs
shlb
pop
dec
hlt
fwait
jg
cmpsl
add
decb
xchg
add
and
stos
mov
push
cmp
ss
jnp
pop
or
jge
xchg
es
divl
jge
daa
sbb
int3
cwtl
xor
lahf
int
out
test
fldl
pop
dec
mov
mov
xchg
sub
stos
fndisi(8087
cmc
in
icebp
fstps
imul
imul
pop
pop
sbbb
in
repz
popa
pop
pop
movsb
cld
inc
into
xor
jl
lea
and
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
stos
stos
js
add
jp
pop
jp
popf
addr16
outsl
inc
test
or
lret
out
add
pop
jp
mov
ss
jnp
frstor
xor
or
mov
pop
jl
pop
das
cmpsl
clc
jle
lock
jne
pusha
lahf
movsl
dec
mov
inc
jb
pop
loop
mov
jb
loop
mov
sub
icebp
movsl
in
das
mov
imul
ljmp
cmp
mov
mov
xchg
loop
dec
mov
jnp
adc
lds
es
nop
push
loopne
lods
lret
push
pop
cmp
push
scas
adc
inc
add
into
imul
aad
cmp
scas
jne
jl
adc
inc
mov
jne
repz
cmp
cmpsb
enter
xor
scas
je
adc
adcl
xor
xorl
jnp
adc
stos
xor
mov
and
mov
dec
xor
mov
jmp
imulb
xchg
inc
ret
jge
pop
mov
leave
pop
cmp
or
mov
les
imul
iret
mov
mov
movsl
in
sar
pop
push
push
addb
mov
in
push
mov
sbb
inc
pop
inc
mov
or
mov
push
fsubs
push
in
cmp
ljmp
sbb
in
mov
adc
adc
lret
or
mov
inc
lea
stos
sub
gs
loop
xchg
cmp
sbbb
in
fdiv
xchg
je
inc
rclb
xchg
push
cmp
dec
inc
outsb
xchg
sub
mov
fldenv
mov
mov
int
and
lret
fs
sub
xor
xchg
out
inc
leave
sub
fs
sbb
mov
or
dec
push
or
bound
test
shr
xor
out
mov
inc
mov
adc
mov
daa
imul
nop
mov
fwait
in
xchg
insl
mov
xor
cmp
xor
sahf
push
imul
pop
pusha
cmpsb
push
jl
dec
test
fsubrl
cltd
test
xchg
inc
loopne
hlt
mov
in
inc
cmp
mov
xlat
fwait
or
mov
cwtl
xchg
sub
rorl
push
lods
test
xchg
andl
jp
pop
lock
outsl
adc
clc
lcall
cmp
push
negl
sub
fidivl
shll
test
lahf
mov
add
stc
push
in
or
sbb
andl
shlb
cs
outsb
xchg
mov
or
xor
xorb
shrl
fimuls
andb
shlb
daa
testb
rorb
aad
mov
add
bound
js
xor
pop
mov
enter
ret
cld
fcmovb
sub
jmp
push
dec
push
and
mov
scas
rolb
mov
push
stos
add
lahf
pop
mov
push
adc
cmpsb
push
addr16
or
inc
push
ljmp
sbb
mov
dec
insb
popf
mov
mov
lods
add
jno
sbb
pop
gs
sub
jl
rcll
cmpsb
inc
test
and
dec
cmp
push
push
imul
adc
inc
jns
popa
mov
adc
rcll
mov
mov
lods
clc
cmpxchg
jno
int
sbb
mov
jb
popa
hlt
xor
cmp
xor
mov
fwait
lods
sub
in
cld
stos
fmulp
or
stos
adc
adc
ljmp
enter
push
rcl
mov
push
and
cmc
cli
nop
inc
cmc
sbb
fwait
sbb
xchg
lods
mov
and
negb
ljmp
out
call
decb
pop
bound
pushf
insl
shrl
lret
xchg
lret
xchg
cmp
inc
mov
mov
movsl
lahf
out
jne
je
push
add
shlb
iret
fst
int3
xchg
arpl
loopne
push
lea
jnp
mov
into
popf
pop
movsb
add
xchg
js
daa
imul
pop
xchg
out
add
shl
jp
les
lret
jecxz
push
mov
out
xchg
dec
sarl
leave
das
test
lods
fstpl
or
loopne
stos
xchg
xchg
mov
pop
lods
mov
aaa
stos
adc
mov
shlb
imul
in
push
jo
xchg
mov
adc
sub
sahf
mov
into
cmp
out
fsubr
mov
inc
inc
lods
scas
mov
mov
das
test
test
mov
sbb
jae
ds
dec
aam
fildll
nop
pop
xor
scas
dec
imul
jne
add
and
das
lods
mov
sar
push
push
add
push
inc
jae
insl
or
popf
or
inc
dec
jecxz
pop
pop
push
push
sub
aad
push
xchg
scas
mov
ss
and
shl
test
mov
inc
xor
mov
jg
aam
jp
stos
and
je
push
sbb
insb
dec
mov
lahf
add
or
jl
ljmp
lock
shlb
xchg
lock
repnz
ss
fwait
mov
fidivrl
nop
sub
enter
cmp
pushf
sti
cmpsb
adc
in
in
mov
sub
pop
imul
xchg
or
sub
shlb
mov
ja
adc
xchg
rclb
clc
in
in
jae
xchg
pop
dec
mov
xor
add
push
leave
lret
cmc
cmp
or
movsl
or
mov
sbb
sbb
jge
push
pop
scas
imul
mov
xchg
js
xor
add
mov
or
addr16
sub
mov
neg
xchg
jns
icebp
add
cmp
lahf
out
nop
xlat
out
lret
pusha
jbe
mov
add
int
ds
gs
push
stos
lret
aad
pop
mov
sbb
push
adc
and
sub
pusha
mov
jp
rcrb
cmp
insl
pop
push
iret
into
imul
stc
js
push
lcall
jmp
lret
push
aad
scas
das
cmp
inc
fldt
jg
sub
mov
pop
cmp
xchg
fsubrs
hlt
out
testl
adc
mov
lret
adc
mov
mov
jg
mulb
xlat
das
leave
mov
movb
pop
rolb
xchg
lock
mov
fsubl
cmp
out
fucom
push
les
out
jbe
loopne
pusha
arpl
xor
int3
idivb
mov
das
mov
push
sub
addr16
sbb
or
sbb
incb
imul
sub
ret
cmp
aas
cmp
fsubrl
adc
mov
sarl
in
lock
movsb
in
dec
jp
mov
dec
jp
inc
sbb
jg
and
cltd
pop
mov
cmp
sub
mov
jl
pop
fdivl
adc
mov
in
test
sub
mov
pop
xor
add
adc
and
pop
and
fbld
outsb
push
cwtl
sub
andb
scas
std
fs
adc
adc
adc
mov
movsl
shlb
push
outsb
out
pop
lahf
jne
clc
rcrb
dec
cld
jle
ljmp
push
push
gs
scas
scas
xchg
jl
cmp
ljmp
pop
add
sbb
pop
jne
inc
stos
in
xor
sub
jmp
popa
orb
adc
std
lods
fwait
sbb
mov
aam
lods
add
sub
jmp
sub
mov
inc
cmp
dec
ffree
movsb
adc
out
dec
addb
cmp
add
scas
sbb
mov
outsb
movsb
sub
loope
dec
pop
test
stc
dec
add
adc
iret
jle
mov
or
inc
fwait
mov
ret
clc
mov
decl
inc
jb
pop
and
outsb
mov
inc
out
mov
sub
std
insb
jle
imulb
sarl
out
outsl
mov
inc
fstpl
push
mov
fcmovne
inc
jecxz
xchg
mov
inc
std
fldcw
or
mov
popa
dec
xor
and
inc
xchg
sub
sub
dec
xor
addr16
xchg
inc
test
lret
and
jae
cmpsl
fisttpll
mov
popf
das
outsb
fsubs
aam
cmpsl
sub
cmp
adc
cmpsb
insb
sub
inc
bound
inc
mov
cltd
stos
xor
orb
int3
jno
in
dec
inc
jnp
inc
sub
fiaddl
scas
xchg
push
test
cltd
jmp
xchg
jle
mov
fcmove
mov
fidivl
inc
push
nop
push
in
sbbb
xchg
sub
and
fwait
or
inc
aas
shr
mov
push
mov
decb
pop
inc
into
sbb
in
push
mov
push
inc
or
fwait
mulb
imul
lock
jo
cs
push
fsubs
cmp
fmull
add
mov
jl
daa
or
cld
fldcw
lea
mov
jmp
nop
popa
repz
xlat
or
sbb
out
cld
inc
mov
mov
lcall
cltd
add
inc
inc
mov
dec
and
xchg
cli
mov
sbb
push
sbb
aam
int
int3
or
test
pop
aad
sti
cmc
lods
out
push
mov
mov
sti
into
test
add
adc
sub
fstpt
lahf
push
mov
icebp
cmc
lea
mov
les
stos
inc
stos
cmp
or
adc
repz
cmp
lahf
fisubl
adc
popf
dec
xchg
jo
sub
pop
adc
cli
xchg
mov
and
es
mov
cli
js
mov
sahf
fstps
and
repz
adc
ja
leave
jmp
aas
mov
stos
mov
int3
mov
and
leave
shl
mov
cltd
jno
stc
js
pop
jno
sbb
test
xchg
pop
dec
pusha
mov
pushl
lret
in
sub
inc
fdivrl
es
jne
add
test
sarl
mov
mov
mov
leave
push
dec
pop
or
dec
stos
sbb
pop
dec
out
pop
sbb
add
test
sub
repz
and
inc
sti
mov
hlt
mov
cwtl
push
mov
lret
fbstp
mov
adc
mov
ljmp
out
lret
out
adc
int3
fcomps
daa
out
mov
mov
aas
jae
adc
add
mov
aam
xor
rol
or
lcall
lods
mov
xchg
add
jl
xchg
ror
sbb
loope
cld
xor
cld
sub
lahf
jo
pop
ja
cltd
cmp
jg
push
repz
sub
xchg
jnp
scas
dec
cmp
add
rclb
testb
cmp
jbe
dec
call
fsubrs
insb
dec
mov
inc
xchg
push
ljmp
mov
inc
sub
pusha
mov
adc
inc
xchg
incl
mov
pushf
enter
xor
or
cmp
xor
push
push
mov
jae
shrl
fists
add
test
rclb
clc
cli
mov
and
in
inc
test
mov
sahf
jb
sub
into
xchg
movsb
out
mov
test
pop
push
xchg
daa
fstpl
pop
hlt
xor
dec
adc
mov
or
out
fmull
pop
pop
adc
sub
inc
or
pop
fs
cmp
mov
dec
pusha
insb
sbb
mov
movsb
aam
pop
movsl
divb
pop
int
rorl
dec
adc
aad
adc
repnz
mov
daa
and
adc
push
jle
inc
sahf
or
loopne
xchg
lcall
fnstcw
pop
push
and
enter
std
ja
or
mov
roll
mov
lods
mov
or
mov
loope
imul
das
out
bound
xchg
lahf
mov
push
and
mov
sub
xchg
xchg
enter
push
cmpsl
inc
fadds
stos
cmp
jnp
jae
lret
pop
pusha
jne
add
jno
pusha
daa
xlat
pop
and
push
mov
sub
insb
mov
setae
shlb
stos
fidivrs
test
lds
lcall
cs
das
hlt
xchg
das
adc
fwait
and
dec
xchg
int3
mov
or
shlb
sbb
outsb
cmpsb
mov
icebp
loop
or
stos
lea
cwtl
in
cmp
subl
push
mov
mov
shrl
xchg
push
sbb
and
repz
cmp
fucom
mov
mov
ds
adc
cmpsl
sbb
cmpl
in
mov
dec
mov
lods
xchg
daa
mov
jle
pop
lods
adc
xchg
sarb
jae
cmp
out
add
ret
shrb
sub
or
inc
loope
adc
push
popf
push
jae
adc
add
add
int3
jo
and
push
insl
xchg
scas
mov
orb
push
or
or
in
test
mov
pop
sub
cltd
dec
notl
imul
mov
pop
or
in
bound
push
sbb
mov
xchg
das
lret
call
stc
mov
sub
scas
sub
cmp
in
mov
loop
add
popf
adc
jns
arpl
in
add
xor
jle
inc
cmp
hlt
jno
push
and
push
int
jno
mov
add
mov
outsl
xchg
sti
aam
andb
xchg
testl
and
jnp
xor
repz
or
mov
adc
mov
add
decb
ror
push
dec
aam
cltd
sbb
jb
pop
sub
adc
jns
sub
hlt
xchg
push
in
push
and
leave
mov
outsb
cmp
xlat
loop
inc
fdivrp
adc
inc
sbb
cmp
or
fwait
mov
xor
in
mov
xchg
cmp
mov
aaa
push
ja
sub
inc
mov
jmp
int
sub
shlb
mull
xor
mov
cli
es
sub
adc
fwait
stos
sbb
mov
mov
scas
dec
mov
repnz
out
mov
hlt
sti
fnstcw
cmc
das
mov
pusha
mov
inc
pop
cs
pop
cmp
fcompl
jae
cli
testb
mov
mov
or
insl
add
adc
lcall
fisubl
mov
push
fdivr
aam
jo
dec
cmp
cld
fs
dec
jge
mov
lea
mov
sub
cwtl
jb
call
jnp
dec
js
aad
stos
mov
xor
loope
mov
mov
xor
mov
out
pop
enter
mov
xchg
daa
lea
pop
sbb
test
inc
psrad
ret
mov
lods
push
sbb
and
aaa
test
xchg
aam
imul
jge
imul
dec
mov
leave
jne
in
loope
pop
or
das
push
lcall
inc
jge
stc
or
sahf
cmpb
lods
jo
push
push
adc
pop
mov
push
xchg
gs
cli
fistl
dec
test
inc
push
push
adc
push
and
inc
test
push
push
stc
into
movsl
ret
lock
xorb
mov
xor
paddq
outsb
popl
sti
pop
call
aas
lcall
pop
push
jl
add
inc
pop
dec
xchg
push
inc
push
shll
xchg
push
movsb
lcall
mov
cld
lods
gs
ret
ljmp
icebp
push
push
add
ljmp
mov
pop
arpl
mov
lods
shrb
cmp
xchg
movsl
pop
call
das
shl
pop
or
ds
cmp
fstps
out
mov
or
popf
or
xchg
repnz
push
push
adc
movntq
add
push
jecxz
push
aaa
cltd
jno
stos
inc
pusha
in
sarw
inc
out
int3
outsb
mov
lods
xchg
out
dec
push
arpl
mov
xchg
gs
fcomip
loopne
loopne
and
and
iret
adc
mov
lret
jg
jne
movsl
das
aad
dec
push
pop
das
lahf
pop
lcall
cmp
and
jne
cmp
pop
outsl
push
loopne
mov
and
sub
mov
push
sub
dec
mov
fildl
das
ljmp
mov
jp
and
addr16
out
movsb
bndldx
rcrl
shrb
adc
inc
mov
ret
insb
xchg
add
test
subl
fidivrs
jmp
xchg
dec
fwait
or
stc
cmp
xchg
outsl
rorl
mov
into
out
pushf
cmp
fildll
and
jge
nop
mov
push
in
inc
data16
xor
jmp
stos
push
test
jo
stos
pop
cwtl
mov
pop
jle
loope
mov
cs
je
inc
call
es
dec
inc
sub
aad
mov
jo
outsl
push
outsl
orb
mov
mov
mov
clc
sbb
pop
aam
mov
ljmp
inc
sbb
cmc
mov
lcall
repnz
inc
sub
push
aaa
in
dec
mov
sub
mov
adc
jle
mov
mov
mov
add
dec
and
mov
fistps
and
cmc
std
sub
mov
scas
adc
xor
outsb
and
ficoml
loopne
fs
movsb
repz
leave
insb
ljmp
mov
inc
fs
inc
cli
cmc
mov
stos
jae
pop
xchg
fstps
int3
leave
mov
or
sti
mov
orb
mov
mov
mov
fcoml
and
dec
mul
ret
push
repz
and
cmp
js
dec
sub
and
jmp
push
mov
pop
jmp
lret
jmp
mov
call
fistps
test
dec
push
mov
popf
lcall
int
or
xchg
mov
bound
jecxz
pop
mov
push
push
inc
xchg
sbb
jg
in
gs
ja
mov
ljmp
lret
ljmp
stc
addl
fiadds
cmp
in
sahf
inc
sti
ss
jbe
scas
jp
xor
sbb
enter
mov
dec
jecxz
scas
pop
mov
push
out
xor
cmp
mov
push
sbb
inc
mov
dec
sub
cmp
or
into
adc
pop
jmp
mov
daa
sub
loope
push
in
sbb
and
imul
dec
dec
imul
mov
repnz
mov
sahf
xor
pop
adc
sbb
sub
or
mov
imul
shlb
push
xchg
cmp
jle
cltd
lcall
mov
jae
fcmovne
dec
mov
xchg
testl
repz
bound
insb
pop
xchg
inc
xchg
add
in
jne
popf
mov
or
enter
or
gs
lea
imul
lds
jne
pop
xchg
sub
sti
cmp
lds
mov
repz
sbb
xchg
inc
dec
mov
aad
mov
push
pop
or
ret
pop
aad
call
jno
call
popf
loope
test
inc
lea
and
daa
dec
add
cld
sarb
push
fdivs
jg
xchg
lret
jnp
or
fldl
popa
fs
pop
xchg
ss
fnstenv
decb
call
in
dec
hlt
test
insl
movsl
mov
test
mov
lods
mov
dec
mov
mov
add
jo
nop
xor
in
sar
movsl
mov
adc
cmpb
dec
sti
lods
and
test
lods
add
pop
xchg
add
inc
cmp
leave
ficomps
fsubrs
dec
sub
lock
faddl
std
or
xchg
shll
movsb
lret
dec
mov
ljmp
or
notb
xchg
xchg
push
mov
sub
add
cld
xchg
pusha
stos
add
das
jg
and
lahf
or
pop
in
shlb
lret
mov
jecxz
orb
divb
sahf
popf
scas
push
dec
mov
pop
lods
loope
push
and
xor
mov
mov
sti
mov
pop
pop
orb
shll
cmp
jmp
push
xchg
in
scas
fs
mov
or
outsb
adc
dec
xchg
sbb
push
adc
mov
xchg
je
adc
test
pop
cmp
pop
pop
mov
push
jge
sbb
and
test
push
add
mov
xchg
sti
sub
scas
cmpsb
enter
ds
sbb
pop
add
imulb
loope
adc
push
jnp
clc
cmp
xor
pop
std
loopne
xchg
insb
shrb
mov
mov
pop
dec
jne
scas
sahf
mov
jl
mov
add
int
cmp
sahf
and
mov
jg
lcall
inc
ljmp
shrb
push
push
xchg
int3
push
cmp
scas
inc
fs
fcos
fdivrp
cli
or
lret
mov
ds
movsb
gs
stc
pop
mov
pop
repnz
mov
into
repnz
ret
pop
xchg
out
sub
inc
out
inc
cmpsb
out
mov
mov
xorb
mov
roll
daa
jne
movsb
jnp
jno
in
stos
cs
dec
es
add
fbld
jo
bound
pop
lock
ja
lret
js
jl
lahf
and
fdivrs
mov
popf
std
jbe
lret
addr16
pop
packuswb
movsl
lahf
mov
jmp
sub
add
dec
aam
jge
pop
push
scas
clc
cmp
popa
push
add
aam
in
stc
cmp
jnp
pop
dec
loope
cmovae
mov
or
mov
lea
lea
push
icebp
push
mov
out
add
test
sub
mov
push
sub
loopne
repz
insb
out
loope
cwtl
mov
lcall
push
adc
data16
jb
inc
push
push
cld
mov
inc
call
mov
sbb
sbb
fs
dec
xor
outsb
pop
jo
mov
jnp
stos
repz
cmc
cmp
mov
jge
mov
sbb
das
rorb
and
pusha
adc
int
je
xchg
out
out
xchg
je
pop
xchg
movsb
subl
adc
mov
jmp
stos
jns
sbb
push
scas
adc
jecxz
push
mov
nop
push
rcrl
addr16
es
adc
mov
int3
mov
sbb
loop
icebp
movsb
jp
stos
movsl
adc
dec
pop
mov
sbb
test
sbb
adc
and
dec
inc
inc
xor
or
mov
cmp
leave
gs
popf
or
iret
jl
fstpt
pusha
scas
inc
inc
xor
shrb
rcrb
aaa
jge
rclb
add
jns
aas
add
push
test
mov
inc
jle
jmp
out
add
lea
add
mov
jmp
push
jmp
push
aaa
lahf
dec
mov
push
inc
es
subl
jp
xchg
enter
xor
cmp
pop
mov
or
add
ds
dec
pop
xchg
fdivrs
mov
jne
movl
jmp
fbld
imul
cwtl
xchg
test
cmp
das
leave
mov
mov
mov
cmp
scas
adc
fadds
enter
sbb
dec
dec
shrb
pop
dec
cld
jecxz
lahf
std
dec
cmc
mov
xchg
mov
push
xor
mov
into
cld
int
inc
or
or
popf
loope
ss
mov
pop
std
adc
sub
or
std
hlt
sub
pop
data16
sbb
mov
aad
pop
setge
out
mov
adc
adc
pop
lods
aam
mov
dec
pop
lret
jge
sbbl
add
decb
fs
pop
shrb
cwtl
leave
push
mov
mov
or
aas
xchg
lds
pop
inc
in
cs
jmp
xor
repz
fcompl
cmp
ss
outsb
cmpsb
int3
add
aas
popf
or
pop
mov
repz
mov
cmpsl
cmp
bound
jnp
popf
fwait
jl
jae
loopne
push
mov
mov
adc
ds
paddusb
xchg
int3
fisttpl
fsts
lods
in
aam
insb
and
inc
jo
jmp
sub
fiaddl
rcrb
dec
icebp
stos
dec
sti
aam
into
adc
test
sbb
mov
and
rclb
lret
in
int
jae,pn
add
shll
icebp
push
adcb
and
arpl
jnp
test
adc
push
cmp
addl
xchg
mov
vshufpd
hlt
pop
cmp
loop
fwait
pop
insl
or
sbb
lea
in
outsb
outsb
mov
xchg
sbb
push
lcall
scas
ffree
je
gs
sub
lret
mov
imul
pop
mov
mov
inc
fimuls
or
sbb
into
shrl
inc
add
sub
lret
rorb
mov
or
iret
clc
stos
popf
mov
mov
cmp
cmc
stos
xchg
pop
sub
mov
fimull
enter
movsl
xchg
mov
sahf
push
repz
ljmp
mov
dec
aam
mov
mov
or
or
mov
mov
mov
in
rcrl
aaa
adc
inc
fs
mov
sbb
xchg
popa
addr16
lock
out
cltd
mov
mov
or
repnz
aam
cld
stos
jge
xchg
push
das
add
or
xchg
dec
int3
xchg
xor
popa
repz
stos
js
cmp
jae
pop
aad
gs
in
mov
cmpsb
faddl
jnp
xor
shll
dec
sbb
rolb
push
out
add
push
cmpsb
lock
int
mov
in
sarb
push
popf
ja
adc
or
jne
push
sub
fidivrs
cmp
jbe
insl
lods
lret
xchg
fiaddl
imul
jb
sbb
sub
outsl
movsl
adc
stc
dec
into
mov
sti
into
sub
xchg
cmp
cmp
shlb
mov
test
xchg
stos
icebp
mov
iret
xlat
in
call
es
into
addr16
pop
adc
jmp
xchg
ret
cltd
loope
test
jnp
ficoml
out
lcall
and
lcall
sbbl
rcll
adc
push
pusha
lock
jns
loopne
xor
lds
faddl
xchg
shll
repnz
pusha
add
cltd
mov
sarb
inc
sub
test
stos
add
mov
lahf
inc
or
sub
stos
mov
inc
lds
cmpl
dec
jl
jecxz
lahf
mov
addr16
mov
pop
into
stc
adc
add
fcmovbe
and
sub
mov
jnp
data16
push
jge
mov
xor
scas
adc
xchg
xchg
incl
repnz
ljmp
sbb
mov
inc
cmp
aad
out
hlt
dec
mov
mov
iret
outsl
fistps
push
call
jo
or
fwait
cld
ja
mov
cs
mov
pop
int
add
repz
cmpl
mov
sbb
loope
fimull
mov
orb
push
cmpsl
mov
stc
inc
cmpsl
dec
mov
je
jno
or
sbb
fdivl
shrl
mov
je
jl
pop
aas
push
dec
cmp
int3
xchg
pop
xchg
fcmovbe
inc
jno
scas
mov
adc
or
pop
fidivrl
leave
xorl
jne
pushf
pusha
pop
xchg
test
xchg
mov
and
movsb
cli
inc
dec
jnp
lea
pop
dec
sti
test
bnd
mov
or
out
aad
adc
xchg
dec
dec
hlt
loope
and
xor
inc
inc
enter
sbb
shll
jp
mov
sbb
sahf
aas
rep
test
imul
or
and
jge
addr16
sub
sub
adc
jge
aaa
xor
mov
jbe
add
and
orb
ja
es
les
jecxz
fcoml
dec
shl
ret
and
imul
adcl
jbe
xor
scas
dec
pop
imulb
lea
inc
imul
cmp
jns
data16
sub
stos
lods
fnstcw
cmp
cwtl
mov
jmp
out
mov
das
and
xchg
imul
mov
and
add
xor
mov
pop
aaa
les
xchg
adc
nop
ss
cmpsl
add
data16
icebp
in
aam
call
clc
inc
push
lods
fildll
mov
mov
jmp
pop
cmp
into
loope
scas
inc
rcrb
shrb
cmpl
fadd
cmp
push
sbb
lcall
mov
or
xchg
mov
ja
gs
push
fidivs
test
int
shlb
adc
or
fldenv
jno
paddd
pop
xor
jne
ds
hlt
lret
in
out
inc
mov
frstor
add
jle
les
ja
nopl
cmp
mov
loop
in
inc
cld
inc
lods
push
shr
enter
sbb
vmread
sub
lea
mov
dec
das
or
test
lahf
jecxz
push
mov
fmuls
cmpps
xchg
cmpsl
push
rcrb
jmp
mov
adc
ret
loopne
sub
xor
adc
ret
sub
movsl
adc
push
mov
sahf
faddl
iret
stos
insb
insl
into
push
fcompl
lahf
iret
xchg
insl
inc
les
mov
sub
jnp
sub
insb
mov
mov
mov
and
movsb
mov
or
mov
push
dec
repnz
out
pop
pop
xor
leave
test
and
add
mov
lods
inc
stos
lret
jmp
pushf
arpl
int
repnz
mov
mov
pop
dec
sub
cmp
ds
aas
jns
or
mov
stc
push
add
push
sbb
cltd
push
rcll
addb
out
jb
inc
inc
out
daa
clc
or
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
jge
imul
jmp
jp
jns
mov
mov
sarl
adc
cmp
sub
mulb
lods
shrb
shrl
out
jge
xor
ret
outsb
sbb
das
xor
insl
fucom
cmp
jp
cli
out
test
xchg
dec
idivb
push
mov
inc
out
outsb
and
js
pop
popa
cltd
ret
xor
add
in
sbb
mov
aad
sbb
ja
sub
mov
sbb
out
fnstenv
push
jg
sti
orl
insl
dec
mov
push
in
movsb
push
daa
cmp
sub
pop
push
pop
xchg
pop
xorb
jmp
jno
incl
sar
js
test
fsts
mov
cmp
inc
test
pop
or
repnz
push
aad
add
dec
ja
js
or
or
test
movsl
fcmovnu
mov
aad
sub
or
jbe
xchg
loop
rol
call
fstps
jnp
push
sbb
clc
lock
cltd
add
repz
in
loope
cmc
pop
adc
push
jo
pop
std
mov
pop
std
push
dec
sub
inc
frstor
mov
js
inc
les
adc
xor
pop
call
rcrb
cmp
sbb
lds
scas
scas
out
sub
sub
fwait
push
popf
addr16
insl
inc
fstp
sub
xor
fwait
mov
push
push
mov
xchg
ja
ss
dec
mov
idivb
lea
out
or
cmpsl
pushf
jnp
aad
daa
icebp
adc
pushf
in
daa
cmpsl
mov
xchg
rep
shlb
inc
insl
pushf
cli
push
xchg
or
dec
cltd
int3
add
pushf
mov
sahf
push
mov
pop
ret
mov
push
pop
rclb
mov
in
inc
xor
mov
mov
xor
jae
inc
jl
or
scas
dec
mov
lods
inc
out
insl
fimull
out
mull
aad
setg
jbe
addr16
cmp
rcrb
mov
jb
xchg
adc
and
mov
and
sbb
cmp
nop
add
mov
add
addr16
pushl
shrd
mov
in
addr16
cmp
lods
mov
loopne
sbb
or
test
negb
mov
pop
xor
mov
mov
daa
mov
mov
faddp
addb
adc
xchg
cmp
xchg
test
loopne
dec
adc
outsb
rclb
stos
cld
shrb
sbb
mov
addb
iret
arpl
jp
rclb
cld
inc
cmpb
aaa
dec
cmp
out
cmc
adc
inc
mov
fwait
cmpsl
pop
mov
clc
push
sbb
dec
outsb
into
xorl
stos
ret
fs
xchg
mov
xchg
fsubs
lea
pop
das
sar
pop
mov
dec
daa
mov
sti
cmp
xchg
push
dec
popa
imul
inc
add
popf
data16
fs
jno
ffreep
bound
mov
movsl
lock
aam
sub
movsl
lret
out
adc
adc
push
aam
lods
repz
into
mov
push
lods
rorb
cmpsw
mov
add
inc
bound
mov
in
sub
mov
out
add
mov
jbe
adc
xchg
dec
sbb
sbb
pop
test
adc
sbb
test
das
inc
push
push
lock
mov
in
pusha
insl
enter
jae
das
cmc
std
xor
imul
or
mov
jecxz
gs
repnz
popa
pusha
pop
jge
mov
and
aaa
gs
es
movsb
adc
jmp
imul
inc
xchg
fisubl
imul
pop
mov
jg
fidivrl
shl
loope
loope
jl
jle
push
ja
addr16
sub
sbb
sbb
stc
lods
sbb
mov
mov
push
nop
or
dec
aad
and
mov
pop
or
and
push
flds
in
pop
out
test
jbe
xchg
pushf
xchg
fwait
mov
test
insl
mov
sbbb
xchg
std
cs
rcl
movsb
jecxz
xchg
jle
push
pop
xchg
or
dec
divl
jae
push
cmp
xlat
roll
into
das
push
xor
mov
add
and
dec
or
divl
aam
shlb
ja
mov
dec
addr16
xchg
in
mov
jno
in
hlt
fistpl
mov
loopne
jbe
std
add
push
push
add
sub
fidivrl
mov
std
jecxz
enter
sub
mov
mov
mov
sbb
sub
mov
xor
jle
mull
test
inc
int3
jle
shl
icebp
xor
mov
shlb
push
xlat
mov
icebp
inc
aas
inc
lret
and
sbb
pop
jp
xchg
in
mov
iret
jno
out
imul
loop
jnp
jge
roll
shlb
dec
adc
dec
das
pop
dec
gs
ret
pop
arpl
push
and
sbb
fidivs
ja,pt
fisubl
sti
dec
adc
enter
xchg
sub
fldcw
sbb
test
ret
jle
xchg
adc
inc
and
cmp
dec
lret
cmc
adc
jle
std
dec
out
cmp
sar
mov
sbb
ret
imul
cmp
ds
clc
mov
and
fiadds
sbb
shl
inc
dec
push
jb
add
mov
adc
lods
aad
adc
bound
arpl
mov
lock
cmc
aaa
mov
mov
cltd
mov
adc
push
xchg
stos
adc
jg
call
adc
out
data16
mov
das
sbb
cmpsb
cwtl
and
jb
lret
jbe
ss
scas
int3
sbb
xchg
add
adc
or
dec
mov
push
notl
jnp
lahf
mov
lock
sub
jp
ds
push
inc
std
xor
aad
inc
call
adc
ljmp
ficomps
pop
cmp
fdiv
mov
fs
scas
inc
push
dec
xchg
mov
mov
call
jno
out
lea
xor
cltd
push
mov
sahf
mov
fs
xchg
dec
addr16
inc
inc
adcl
rcll
sbb
push
jns
lods
enter
aaa
sub
nop
lods
xchg
cmpsl
sub
pop
nop
or
pusha
sbbl
cli
fisubrl
jle
daa
push
jbe
pushf
and
outsb
lahf
cld
nop
mull
jno
test
add
adcl
lods
jp
imul
push
mov
ret
cmp
add
addr16
mov
lahf
mov
mov
ret
mov
and
fisubrs
xchg
jecxz
xchg
push
orl
lahf
aas
mov
jae
pop
insl
cmpsb
test
lcall
repz
dec
hlt
popa
and
addr16
mov
enter
ljmp
push
xor
inc
mov
sbbl
aad
cmpsl
mov
int3
push
cmp
scas
jge
aad
stos
pop
stc
gs
repz
cld
jp
cmc
xor
pusha
out
arpl
sarb
ds
xor
clc
and
data16
xor
dec
enter
and
test
jns
push
mov
or
fnstcw
test
push
sti
add
jge
mov
mov
jmp
and
pop
std
lods
dec
shr
jae
sbb
jnp
dec
inc
xor
sub
jge
movsl
loopne
cmpsl
cmp
call
lods
inc
push
push
dec
fwait
sahf
mull
aaa
into
in
xchg
pop
and
xor
paddq
mov
mov
xor
decb
cmp
inc
and
lock
jge
arpl
into
adc
xchg
rcl
dec
leave
sub
imul
ss
jge
pusha
push
orl
out
mov
test
fwait
inc
pop
ret
add
rolb
cmp
or
rcr
inc
loopne
xor
addr16
jmp
sti
insb
popf
arpl
cmp
imul
jl
repz
lret
in
pop
jne
push
imul
fildll
lds
popa
xchg
jo
nop
xchg
inc
jne
pop
xor
mov
nop
jmp
pop
adc
fsubp
scas
ja
std
and
xor
es
mov
hlt
mov
sti
mov
cltd
in
gs
clc
insl
outsl
and
mov
push
fcomps
push
lods
std
outsl
xchg
cs
cmp
push
add
jmp
and
into
sbb
pop
xchg
sahf
stos
mov
scas
sbb
daa
fnstcw
mov
mov
ja
mov
out
xor
cli
mov
sti
pop
pop
pusha
push
sbb
clc
pop
loop
add
push
sub
xor
xchg
adc
mov
out
jg
or
leave
popa
add
leave
sub
cmp
cwtl
test
daa
adc
cli
out
dec
pop
inc
adc
mov
out
and
imul
xchg
lahf
dec
aad
jge
ret
pop
jmp
fists
aas
fists
insb
wrmsr
mov
jno
mov
add
mov
inc
adc
sbb
jae
lret
mulb
sub
mov
adc
clc
jg
inc
mov
shl
mov
lret
ror
es
xorl
fs
pop
lea
int3
dec
push
add
pusha
aad
in
test
mov
rol
cmpsb
cmpsb
push
es
mov
adc
lds
rorl
notb
inc
lahf
sub
inc
mov
mov
lret
sahf
and
dec
fisubl
in
icebp
inc
jno
sbb
gs
pop
loopne
xchg
push
or
bound
add
and
or
ret
insb
imul
jmp
ljmp
mov
jns
sbb
mov
inc
mov
mov
pop
and
fistl
dec
andb
aad
dec
mov
mov
mov
idivl
mov
dec
xchg
push
nop
push
jle
add
hlt
cwtl
insl
or
xor
adc
add
mov
push
push
aad
adc
dec
dec
cmp
lahf
or
add
mov
add
daa
jb
push
dec
stc
add
inc
and
insb
push
loope
pop
push
mov
push
dec
cmp
pop
xor
repnz
orb
iret
das
cmp
or
shlb
sbb
jle
jb
pop
add
out
cli
dec
outsb
dec
push
jge
mov
addr16
lock
xchg
mov
test
mov
pusha
loopne
and
or
pop
add
push
repnz
xlat
int
mov
test
cld
sub
jae
mov
aam
ret
pop
pop
adc
cmpsl
filds
xchg
sub
addr16
es
inc
sbb
rorb
jnp
sub
insb
jge
stc
mov
cltd
pop
in
mov
aad
xor
fdivl
dec
clc
sti
sbb
rol
aad
push
xchg
inc
lock
add
fstpl
or
in
xchg
hlt
xor
fwait
adc
xor
sub
addl
mov
sbbb
dec
in
xor
andl
jmp
dec
xorb
ficomps
les
pop
lret
repz
not
dec
cltd
sub
daa
dec
sbb
loopne
loopne
imul
pop
dec
jb
mov
movsb
call
jmp
xchg
xor
lret
rcll
repz
push
jns
cli
divb
mov
mov
fwait
out
or
cmp
scas
mov
cli
in
sbb
test
into
imul
add
push
sbbb
and
cli
add
mov
pop
pop
out
lcall
shl
arpl
je
out
into
fisubrs
inc
inc
shll
lock
pop
mov
sub
jmp
xor
negb
xchg
cmpsb
xchg
ja
xchg
xor
cli
xchg
mov
call
and
jns
sbb
and
fcmovnu
cmp
mov
and
pop
in
movsl
insl
fldcw
xchg
outsb
cmc
je
pop
daa
push
bound
sbb
push
mov
imul
fistpll
push
lahf
push
xchg
sbb
mov
pop
xchg
xchg
push
pop
push
in
pop
sti
jp
xchg
outsb
sub
mov
mov
mov
cmp
loop
mov
pop
xor
iret
fmuls
loope
cmpsb
repnz
xlat
push
negl
or
lret
mov
clc
adc
mov
mov
fldt
cmpsb
push
push
dec
ss
sbb
aaa
sbb
cmpsb
xor
inc
data16
loope
mov
gs
cmp
stos
inc
in
arpl
mov
testl
mov
mov
fstpt
and
lahf
jg
ljmp
pusha
jb
mov
lcall
fists
adc
cmpsb
jl
popf
aam
xchg
out
cltd
and
dec
dec
push
mov
loopne
jo
shl
sahf
bound
ja
lahf
cmpsb
xchg
cmpb
shlb
sar
mov
int
addl
out
ss
js
shll
pop
inc
cltd
cmpsb
push
test
adc
rolb
push
sub
xor
mov
pop
mov
and
xor
insb
fimull
cmp
mov
fcompl
lock
clc
setg
adc
jo
xor
push
dec
jle
fmuls
jne
mov
rorb
jl
loop
rcr
out
es
xor
iret
jmp
les
push
gs
inc
jmp
xorl
push
inc
mov
sti
pop
fisubrs
test
test
jg
loope
mov
jecxz
xchg
enter
loop
sahf
cwtl
mov
mov
loop
rorl
fsubl
fwait
or
ficoml
or
inc
push
loop
push
and
shrb
xchg
shll
push
and
dec
mov
pop
divb
inc
lods
adc
pop
pushf
push
cmp
in
sbb
mov
add
push
test
andl
cmpsb
je
xlat
clc
mov
outsb
sub
inc
xor
cs
mov
movsb
pop
sub
and
xor
stos
and
enter
cmpsl
ret
and
test
call
cmpsb
sbb
pop
mov
xchg
scas
in
add
mov
inc
xorl
mov
mov
cltd
pop
xchg
mov
int
clc
pop
insl
lods
xchg
add
stc
add
sbb
cltd
mov
and
jp
xor
push
adc
test
and
mov
mov
adc
push
shll
mov
fnstenv
aad
add
push
aad
arpl
pop
cmpsb
scas
outsl
sub
jb
dec
cld
aam
repz
dec
loop
sub
cmp
xor
enter
aas
pop
jp
fwait
cmp
cmp
cmc
push
ret
inc
and
dec
xor
jns
pop
xchg
jns
cmp
xchg
sbb
xchg
mov
ficoms
loope
pop
jnp
dec
sub
pop
scas
fwait
lret
sub
fcompl
push
movsl
mov
in
sub
sbb
dec
and
lds
roll
xchg
jecxz
pop
test
jb
adc
pop
sub
xchg
fwait
inc
decb
and
leave
fildl
cwtl
adc
ret
or
xchg
jno
ljmp
fidivl
sbb
fiaddl
inc
inc
sub
pop
mov
decb
into
add
jmp
in
ja
or
dec
push
imul
mov
out
mov
roll
fistpll
pusha
out
pop
sbb
pop
fcmovb
pop
imul
mov
xchg
cmp
enter
ficomps
in
cmp
js
sub
sbb
aad
insl
js
adc
sub
test
ja
jb
cmp
imul
push
fldt
jne
in
sbb
cs
dec
pop
mov
std
push
cld
ja
jae
popa
fistpl
lds
sbb
int3
std
push
fiadds
fisubl
hlt
data16
xor
aaa
data16
jb
xchg
dec
lds
pop
jbe
in
sub
mov
push
push
shrl
les
push
ss
insl
stos
or
shlb
push
shr
data16
push
mov
out
mov
push
sub
push
inc
push
sbb
jmp
aaa
and
xchg
pop
shl
xor
ljmp
movsl
mov
xchg
adc
jb
mov
shlb
sti
fwait
arpl
loop
sbb
mov
fmull
jle
add
cli
sub
adc
xlat
push
popf
xchg
sbb
in
dec
mov
mov
lea
push
inc
shr
dec
mov
xchg
add
xor
mov
jnp
imul
cli
sbbl
test
lods
leave
jbe
cmp
add
mov
sbb
arpl
sub
leave
sbb
jp
xor
ret
sub
sub
mov
loope
in
lcall
pop
lahf
mov
aas
sub
mov
stos
aaa
test
ja
push
cld
fdivrl
jo
sub
out
lock
push
movsl
jne
cmp
jb
or
adc
xchg
mov
aad
je
mov
jne
bound
xor
push
shlb
out
mov
pop
in
xchg
pusha
add
xchg
cmp
mov
pop
sbb
sub
test
lcall
mov
xchg
cmc
out
jmp
imul
bound
cmc
lcall
pop
mov
push
adc
in
and
stos
and
outsb
shrl
aas
ret
jge
jle
mov
lahf
inc
mov
stc
mov
fdivrp
stc
add
sub
push
stc
mov
lahf
hlt
xor
xchg
stc
loop
push
and
subl
ljmp
adc
sbbb
bound
sahf
stos
jl,pn
bnd
mov
pop
dec
loopne
adc
outsb
int
dec
clc
or
pop
icebp
mov
enter
jmp
enter
push
negb
ja
sbb
xchg
push
mov
sqrtps
mov
enter
out
es
popf
outsb
jo
or
pop
sbb
pop
jae
inc
dec
xor
leave
aaa
je
mov
push
adc
and
mov
call
nop
gs
adc
pushf
xchg
cmc
jg
mov
loopne
mov
and
add
push
add
cmpsb
sub
jne
and
and
out
ss
mov
sahf
scas
push
fdivl
out
imul
notb
sbb
sub
pusha
pop
ja
push
xchg
jp
xor
lahf
cmp
or
mov
cltd
arpl
scas
xchg
iret
out
out
popl
stc
and
pop
pop
pop
out
cmp
inc
sub
push
jne
mov
jle
cmp
int3
inc
imul
test
sahf
out
ffreep
orl
xchg
cmp
out
fiadds
pop
std
inc
inc
jecxz
lret
popa
mov
lods
into
insl
enter
inc
cmp
xchg
fwait
sub
mov
sub
or
scas
pop
pop
inc
dec
fs
aam
nop
inc
clc
mov
mov
mov
mov
les
aam
ficoml
pop
push
dec
push
orb
ret
movsb
icebp
mov
jnp
cli
or
lret
int
ret
pop
add
mov
dec
lret
dec
icebp
out
lds
dec
lds
lcall
arpl
sbb
fs
and
add
push
mov
mov
xor
in
pusha
xor
cmp
fwait
adc
fsubrl
rcr
inc
test
jl
stos
push
andl
and
fdivrl
dec
cmp
outsl
dec
jmp
jp
insb
mov
add
aam
mov
mov
ss
fidivrs
scas
cmp
cmp
or
in
mov
fiadds
int3
mov
les
sbb
fs
cmp
push
fsubrl
mov
pop
fistps
adc
clc
xchg
iret
fisubs
sub
aas
cmp
das
insl
xchg
xchg
cmp
das
jne
sbb
inc
xchg
add
dec
pop
and
out
enter
loope
adc
mulb
lcall
scas
loopne
sbbl
mov
sarb
pop
mov
sbb
inc
or
sbb
in
mov
sub
lret
adcb
lods
repnz
je
pop
aaa
lahf
cmp
push
jmp
cmp
add
data16
cltd
inc
ss
inc
idivl
jg
xor
inc
cmp
stos
dec
or
popa
pop
mov
int
sahf
test
cmp
clc
lret
loop
popf
ret
adc
leave
mov
call
and
pop
dec
shll
je
push
lret
and
loop
lahf
sahf
pop
mov
ljmp
push
cltd
out
test
repnz
lahf
mov
inc
mulb
pushf
xchg
lret
icebp
scas
adc
pop
push
repnz
ds
lahf
pushf
pop
adc
jl
mov
push
mov
dec
stc
push
push
xor
lods
mov
add
jecxz
cmp
sub
fmul
or
pop
pop
sub
sbb
xchg
scas
shlb
mov
xor
cmp
mov
test
and
dec
loop
pop
pusha
arpl
mov
js
or
add
xor
mov
cmp
data16
shll
push
sub
and
cmp
mov
lret
insl
nop
xor
push
ja
push
adc
mov
xor
std
jle
in
push
jp
inc
test
inc
into
jns
into
scas
dec
popf
les
adc
pop
push
adc
nop
test
sbb
cld
cmpsl
xchg
daa
in
jne
jbe
adc
ljmp
mov
or
add
sbb
lods
fld1
xor
mov
ret
pop
cli
sti
pop
and
push
icebp
sbbl
mov
xor
inc
mov
inc
in
dec
subl
sbb
fndisi(8087
pop
jns
jg
outsl
fwait
mov
in
or
ret
push
cs
std
inc
push
pop
cltd
stos
dec
leave
popa
movd
cltd
out
ja
cltd
adc
sahf
insl
lcall
fmulp
enter
adc
imul
fucomip
mov
enter
push
jge
inc
push
sahf
testb
push
add
leave
inc
daa
test
mov
add
in
mov
mov
enter
adc
or
es
jge
xor
outsb
jge
lahf
sbb
rorl
stos
out
xor
in
rorl
or
imulb
dec
into
popf
inc
into
fdivs
sub
or
in
pop
push
push
mov
sarl
jnp
add
rcrl
mov
pop
jno
mul
popa
stos
out
mov
test
rclb
imul
and
lock
dec
shl
jl
or
fldcw
and
xor
ret
pop
movsl
fdivr
push
ret
xchg
daa
repz
pop
daa
sub
popa
mov
and
ja
dec
and
mov
cmpb
dec
jmp
outsb
movsl
insl
into
subb
cmp
mov
mov
fs
mov
push
xchg
inc
xchg
je
int
js
aaa
xchg
clc
sub
in
test
leave
and
and
mov
sbb
sbb
jge
flds
dec
add
rcll
je
ret
sbb
rorb
mov
mov
cmp
push
or
add
sub
paddq
jl
std
jmp
jns
mov
pop
jnp
icebp
clc
call
cmc
dec
clc
cs
ret
sbb
dec
or
adc
jg
push
add
insb
sahf
mov
cmp
push
xor
mov
mov
mov
cmp
outsl
cwtl
mov
xor
jmp
ja
lods
popf
or
popf
dec
and
xchg
insl
mov
cmp
mov
sbb
fsubs
insl
xchg
pop
outsb
outsl
aad
cld
movsl
sbb
in
or
loopne
add
jno
outsl
and
xchg
popa
push
sti
sbb
fs
jp
add
std
shl
rorb
sbb
jmp
loopne
adc
adc
cmp
mov
and
jmp
in
add
push
popf
pop
mov
imul
movsb
pop
xchg
add
lods
pop
loopne
aas
ret
rorl
mov
mov
mov
js
pop
xor
cmp
insb
xor
cli
fs
inc
pop
arpl
call
push
jo
cmp
call
push
xchg
cmp
dec
insb
and
ds
out
sub
xchg
imul
in
hlt
call
int3
push
cmp
dec
lret
inc
inc
adc
repnz
mov
sbb
ja
mov
bound
cli
mov
or
stos
jbe
mov
outsl
fbld
aaa
push
add
enter
idivb
subb
daa
sub
sub
jno
aas
or
hlt
stc
imul
jb
ret
popa
inc
cli
mov
aad
hlt
sbb
adc
cmc
test
in
stc
inc
mov
mov
mov
adc
bound
movsl
test
fs
mov
aaa
push
ret
xor
enter
clc
sub
sub
mov
addr16
movl
add
pop
shlb
sahf
cltd
pop
cld
xchg
in
ror
cld
mov
or
xor
call
cmp
cmc
mov
xor
std
add
lods
push
mov
movsb
fcomip
inc
ret
outsl
sub
insl
add
dec
mov
jno
xchg
mov
dec
movl
movsl
psubd
inc
cwtl
hlt
pusha
jmp
sahf
ret
shl
cwtl
mov
andl
fsubl
cmc
mov
lds
push
cmp
dec
mov
push
jae
xorl
cmc
es
jmp
jecxz
decl
inc
pushf
xchg
inc
cmc
fisubrs
je
rorl
push
popf
fsubrl
push
push
push
sub
frstor
psrld
sbb
int
cmp
sub
mov
ljmp
lods
outsb
lret
in
sub
imul
xor
sti
or
orl
popa
dec
inc
mov
dec
xor
iret
lahf
fnstenv
sub
das
xor
loope
inc
push
xor
pop
test
jnp
jle
stos
jno
dec
sti
sbb
push
aad
cwtl
or
ret
pop
loop
jae
ljmp
mov
sub
inc
lods
sub
jno
mov
movsb
add
inc
int
or
ds
aad
popf
or
repz
xchg
imul
idivl
in
in
jp
or
sbb
xchg
lret
xor
jbe
fisttpll
pushf
jae
cmc
mov
cmc
repnz
pop
aas
loope
and
fwait
cli
je
xor
fisubs
leave
aaa
jb
adc
lahf
push
sbb
icebp
xor
jns
fdivrl
loop
jae
mov
jecxz
ljmp
out
testb
inc
popl
push
add
mov
clc
imul
cmpsl
pop
or
mov
xor
cmpsl
push
jbe
fisttpl
sub
pop
cmp
lock
or
fisttps
pop
fwait
unpckhps
pop
scas
mov
shr
jno
add
outsb
xchg
cmp
lret
addr16
pop
inc
dec
or
rorl
mov
outsb
push
add
fadds
popa
insl
aad
xor
pop
incl
adc
sub
or
jns
std
xchg
inc
rdtsc
insb
gs
xor
je
cmp
xor
inc
cmp
ror
xlat
leave
insb
lret
push
xchg
fldl
scas
insb
outsl
inc
sti
add
mov
jbe
lock
cmpsb
shlb
add
xor
shlb
pop
jo
jno
or
adc
into
jmp
pop
popf
mov
mov
loop
dec
jl
jb
pop
sub
subb
sub
jb
mov
push
push
jo
pop
mull
sub
mov
movsb
mov
push
shlb
push
test
arpl
hlt
mov
in
xor
add
mov
ret
out
xchg
mov
int
sub
lret
mov
hlt
fs
jbe
loope
test
pop
xor
inc
push
test
jb
cmpsl
pop
jbe
mov
xchg
push
push
mov
or
dec
push
adc
orl
stc
mov
das
dec
shlb
fs
and
or
icebp
pop
fsubrs
dec
out
out
push
xchg
aad
outsl
roll
icebp
popf
jmp
roll
gs
lods
inc
shl
stos
mov
cmp
xor
rcrl
pusha
mov
fiadds
or
scas
mov
add
mov
stos
or
lock
loop
pop
incb
xor
sub
pop
pop
fwait
notb
stos
cld
fs
push
push
or
jno
ljmp
call
notl
arpl
sti
sarb
add
mov
jg
cmp
mov
and
cmpl
inc
push
sahf
enter
jae
inc
pop
pop
xchg
dec
inc
std
jecxz
rcrl
jge
out
je
in
cmp
adc
cmc
outsl
sub
pop
jecxz
ss
loop
xchg
or
mov
jbe
fisubrl
data16
rclb
inc
mov
lds
xor
fimull
add
sbb
cltd
or
ficomps
outsb
push
int
xchg
or
in
add
test
adc
cwtl
sub
adc
inc
gs
ds
das
in
fstp
sti
add
jp
icebp
or
hlt
pop
loopne
jo
pushf
or
sub
jbe
mov
repnz
ss
in
inc
push
dec
and
xadd
pushf
mov
mov
fwait
lods
pop
sub
arpl
fdivs
mov
or
mov
stc
lock
push
jg
push
mov
js
push
dec
fbstp
movsl
dec
pop
sbb
ss
cmpsb
orb
mov
pop
jbe
jmp
insl
dec
push
test
mulb
js
lret
ss
mov
gs
lock
in
inc
out
adc
xor
idivl
imul
xchg
adc
lods
int3
lcall
int3
jnp
or
push
les
or
mov
inc
pop
adc
xchg
pop
mov
psraw
sahf
mov
or
lret
cmpsb
jo
test
in
sarl
sbb
sbb
jb
mov
imul
inc
xchg
in
sub
xchg
push
stc
jg
cmp
pop
dec
cmpsl
sub
pop
mov
jno
add
xlat
pop
outsl
jmp
cmp
pushf
daa
fcomps
jge
sbb
imul
dec
int3
sub
rclb
fildll
add
aaa
add
out
movsl
scas
int3
test
repnz
idiv
in
mov
adc
lret
lea
and
pop
rcrb
mov
mov
pop
pusha
cmp
xchg
xchg
inc
lret
pop
or
mov
scas
push
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
jne
jae
jp
sbb
jp
pop
sbb
sub
lcall
aad
ja
outsb
dec
ljmp
pop
rcrb
ja
sub
mov
scas
cmpsl
mov
mov
pop
and
sti
cmp
xchg
fdivs
lods
push
lock
mov
loope
xor
fdivrl
cmp
inc
mov
bound
mov
mov
ljmp
pop
cli
jl
xor
and
fstpl
or
sbb
jo
icebp
add
loop
cmp
jl
lret
shl
lret
shrb
xorl
fldt
fistpll
cwtl
es
out
adcb
scas
mov
js
daa
sbb
lock
shll
xchg
loopne
xor
cmp
mov
outsl
pop
push
mov
sub
or
pop
rolb
push
and
xchg
sarb
push
outsl
lahf
and
add
aad
jle
add
xchg
inc
xor
add
jae
xlat
dec
sbb
jmp
test
mov
mov
dec
push
push
sbb
pop
enter
fisttps
inc
dec
push
jge
xchg
inc
sub
dec
mov
hlt
repnz
inc
ja
gs
or
dec
stc
das
xchg
cltd
mov
popf
popa
dec
jns
dec
xchg
mov
repnz
outsb
out
std
mov
out
mov
push
mov
ja
or
fistpl
lret
sbb
int3
and
and
jns
jp
aaa
mov
mov
mov
in
stos
jo
mov
jno
ss
mov
sbb
pop
out
lret
shrl
cmpsb
push
push
hlt
aam
dec
push
add
cmp
cmp
imul
fs
lods
sbb
pop
jl
or
cli
inc
xchg
pop
xor
sarb
scas
mov
dec
xor
sbb
dec
cld
call
inc
xchg
lods
mov
xchg
fs
in
push
push
lds
pushf
lret
stos
cmpsb
adc
bound
test
push
test
fisttps
xor
mov
in
pop
inc
int3
out
lds
popa
je
xor
mov
sub
mov
push
stc
insl
cld
pushl
cmpsb
jbe
pop
int
not
cmp
test
test
gs
repnz
xchg
mov
sbb
or
mov
outsl
jb
lahf
dec
loopne
scas
sbb
pop
or
adc
bound
mov
pusha
out
divl
xlat
and
jmp
ljmp
jo
dec
cld
add
cltd
mov
inc
imul
or
sbb
or
xchg
lock
fs
repz
inc
sbb
mov
cld
adc
inc
pushf
sub
loope
jnp
lahf
fcoms
insl
add
outsl
cmp
aad
jp
mov
add
mov
sbb
pop
in
gs
sbb
pop
push
mov
out
dec
adc
pop
sbbl
mov
xchg
andb
cmp
loop
stos
mov
inc
repz
imul
and
cs
fisttps
sbbl
or
inc
outsb
sbb
sbb
aam
int3
adc
shr
mov
movsb
pop
mov
fcoms
scas
lds
outsb
int3
sub
cmpsl
push
sbb
cmpsb
das
std
inc
push
call
lcall
fbstp
sub
add
push
cmp
fwait
pop
popa
adc
jl
mov
jo
int
je
or
loopne
divl
cli
pop
mov
dec
pop
or
je
jecxz
xchg
shl
mov
jp
mov
loop
rorb
dec
mov
push
test
dec
mov
fs
push
dec
and
mov
fcmovne
cmp
sub
pop
dec
pop
jmp
mov
push
fs
cmpsl
addr16
mov
inc
dec
pop
pusha
inc
mov
ljmp
jns
lcall
inc
pop
jmp
or
push
jno
or
push
adc
sub
pop
xor
push
cmp
ret
cld
pop
sti
mov
leave
out
inc
xchg
clc
sub
test
jle
cli
adc
icebp
aam
sub
fwait
sbb
inc
xor
repnz
push
or
shl
dec
jns
pop
adc
and
mov
aas
ss
aaa
sti
jmp
test
stos
hlt
push
sub
mov
les
in
pop
cmc
jg
scas
xlat
inc
add
push
or
mov
pop
and
or
ds
pop
insl
xchg
lea
inc
pop
adc
lods
dec
call
dec
scas
jmp
shlb
cltd
lods
cmpsl
cmc
out
out
pop
aam
out
cmc
or
xchg
insb
test
dec
out
iret
fldcw
out
pop
mov
jb
lret
mov
insl
lea
dec
mov
fwait
js
int3
mov
push
adc
in
jnp
iret
pop
xor
adc
ljmp
add
addr16
sahf
pop
adc
jbe
mov
sarb
add
into
lahf
std
sbb
out
adc
jnp
iret
popf
jb
fs
vunpcklpd
cmpsl
sbb
xchg
in
add
test
push
mov
jno
movsl
stos
not
xchg
dec
sub
jecxz
mov
mov
repz
clc
cmp
mov
adc
sbb
mov
push
or
cmc
addr16
mov
inc
inc
imul
xor
xor
imulb
nop
adc
and
inc
push
xchg
into
or
cmp
in
scas
inc
dec
lea
mov
mov
das
in
mov
pop
sub
ret
int3
pop
adc
movsb
data16
fimull
mov
ds
lret
add
movsl
lods
and
hlt
test
iret
mov
xchg
cmp
pop
mov
jno
mov
xor
jbe
xchg
mov
stos
fucomi
add
lds
test
out
jb
rorb
aas
mov
aam
lcall
mov
xchg
test
repz
mov
push
dec
test
cltd
or
out
ds
sbb
fadds
out
lock
popa
pop
and
idivl
test
jns
push
aas
cmp
test
pop
data16
xchg
ret
sbb
dec
inc
fidivrl
push
cmpsb
xchg
cmp
dec
mov
lcall
push
pop
push
inc
adc
in
aad
scas
mov
sbb
mov
pop
inc
or
fistl
cmp
in
mov
dec
popf
pop
test
leave
scas
jge
cmp
xchg
inc
jns
rcrb
pop
xchg
mov
pop
cli
pop
sbb
arpl
repnz
adc
call
cld
in
xor
fdivrp
lods
adc
xchg
sti
pushf
sub
xor
mov
pop
shr
mov
jl
dec
jno
lods
mov
cmp
hlt
rep
roll
fs
cmp
adc
mov
lea
mov
nop
daa
sub
test
popa
xor
xor
popf
in
test
mov
mov
repnz
inc
inc
sub
adc
sbb
adc
pop
mov
mov
jae
pop
jbe
out
neg
daa
or
mov
cli
or
cmc
mov
add
mov
pop
mov
inc
imul
aad
ljmp
cmp
xor
insb
xor
inc
loope
jne
sbb
int
sub
nop
or
and
imul
inc
test
and
in
testb
repz
push
inc
and
out
xchg
lods
gs
in
mov
jno
dec
mov
cmp
mul
add
inc
test
adc
pop
or
push
sub
ja
cltd
in
int
ja
xor
push
adc
cmp
push
cmp
sub
cmc
xchg
xchg
pop
jecxz
bound
jno
cmp
ljmp
jne
sub
gs
aad
and
loope
iret
inc
xchg
addl
cmp
or
xchg
rorb
jle
push
stos
iret
sub
mov
mov
aam
inc
int3
cmpsl
stos
dec
test
push
dec
push
lcall
dec
lret
pop
in
xlat
fucom
push
adc
pushf
or
adc
addl
cmp
sub
es
es
jge
push
dec
mov
xchg
loope
xchg
ret
pop
out
sbb
mov
jae
mov
jecxz
cmp
pop
dec
jbe
jl
jo
pop
push
cmp
in
or
mov
xorl
ss
jmp
xchg
lds
mulb
daa
and
stc
shll
loop
pop
das
add
push
inc
jo
jbe
in
pcmpgtb
cli
insl
mov
test
jmp
dec
idivl
sahf
mov
std
loopne
pushl
out
aam
ss
inc
rclb
std
jae
insb
mov
and
in
test
cld
cmc
lret
or
fs
inc
lock
inc
push
xchg
shrb
fwait
repnz
or
es
or
sti
xchg
xchg
fcmovnu
cwtl
add
dec
lcall
mov
stos
enter
fisttpl
test
jae
lods
movsb
xchg
fstps
push
ss
xchg
sbb
inc
mov
mov
push
or
jecxz
lods
xchg
rcrl
lock
mov
data16
push
pop
sbb
mov
and
ret
and
icebp
push
fsubs
jl
jge
rcrl
jle
inc
shll
jl
cmp
mov
sahf
stos
pop
pop
mov
lods
ja
out
inc
xor
mov
jp
lock
testl
hlt
insl
mov
push
adcl
xchg
lods
add
cld
dec
imul
sub
jb
adc
ficoml
test
test
xor
xor
idivl
rcrb
divl
dec
loopne
mov
mov
and
sub
mov
fcmovnu
mov
movsl
xchg
xlat
mov
pop
pop
in
mov
ret
mov
iret
insl
cmc
and
lahf
pop
call
or
cmp
out
scas
movsl
test
add
pop
cmpsb
fdivs
loopne
sbb
iret
in
ret
inc
mov
repz
mov
sub
cmc
lds
sbb
fcomps
out
out
xchg
ret
ja
pop
xchg
out
bnd
sub
mov
int3
addb
lea
jle
and
fisubrl
pop
lcall
ret
pop
mov
mov
xchg
add
loope
push
mov
xchg
lock
lods
and
mov
outsl
and
or
jp
xor
xchg
cltd
xchg
xchg
mov
push
fldl
fnstcw
in
popa
pop
cs
test
mov
fcomps
aaa
mov
push
push
fistpl
push
es
pop
cmpsl
xchg
adc
add
xchg
fstp
sub
sarb
sahf
orb
inc
into
xchg
or
out
shrl
in
xchg
lret
push
je
ret
mov
addl
mov
mov
stc
mov
xchg
sbb
xchg
sub
adc
fs
mov
fwait
sub
lea
jecxz
mov
cs
sub
inc
xchg
mov
and
or
loopne
daa
mov
lods
cwtl
pusha
mov
fwait
daa
je
xchg
or
into
icebp
adc
sub
adc
insl
int3
or
aas
test
cmovbe
lret
pop
cld
lret
or
dec
lahf
addr16
cmp
in
mov
movsl
shrb
in
shlb
mov
lods
divl
dec
sbb
add
mov
mov
movsb
cmc
scas
loop
sbb
dec
xorl
mov
mov
in
and
cmp
cmc
cmpsl
andl
std
adc
jecxz
sbb
insb
inc
jge
leave
fistl
add
in
adc
mov
sbb
xchg
dec
js
mov
inc
adc
xchg
clc
dec
imul
loop
cmc
mov
xorl
mov
and
jb
mov
push
stos
lret
cmp
mov
packssdw
xchg
xchg
mov
jp
jp
xchg
mov
and
icebp
add
les
jl
cmpsb
dec
or
aad
sbb
scas
push
mov
or
inc
in
mov
jb
or
pop
das
sbb
mov
xchg
push
cld
xchg
jne
dec
lcall
sbb
mov
pop
rolb
test
jo
inc
fwait
nopl
aaa
loop
fs
dec
loopne
mov
sub
mov
out
cmpsl
push
inc
mov
cwtl
push
lods
cmp
gs
hlt
div
jge
add
jge
cld
in
out
push
js
sub
in
lret
jno
mov
push
pop
mov
arpl
xchg
sub
lcall
add
mov
cmp
mov
add
in
imul
fwait
pop
mov
je
incb
xor
ljmp
insl
repnz
jp
add
fwait
out
add
fdivl
jg
xor
push
mov
push
xchg
xchg
fxch
lret
enter
pushl
mov
sub
jge
in
movsl
pop
dec
cmc
adc
out
aas
jle
push
add
es
adc
inc
xchg
icebp
in
inc
mov
jl
or
pushf
imul
outsl
jns
je
int
mov
imul
ljmp
in
ficompl
repnz
in
aas
iret
jle
in
mov
jno
jne
pop
push
popl
pusha
fdivrl
and
jns
push
cmpsb
aam
dec
inc
adc
repz
shll
gs
rorb
mov
sub
push
xor
repz
cmc
lods
cmp
je
jnp
or
push
mov
in
mov
push
imul
fmull
cmp
adc
call
out
and
inc
mov
adc
arpl
insl
les
enter
sti
popf
jb
or
xchg
dec
lock
adc
lcall
decb
leave
fisubl
fldl
push
xor
sub
inc
shll
push
arpl
enter
jg
cmp
gs
je
cld
dec
fisubrs
test
sbb
push
xorl
push
pop
lods
or
in
mov
sahf
cli
or
int
xchg
push
mov
adc
adc
jp
jg
and
push
ss
xchg
xchg
or
aad
push
sub
cmc
iret
pushf
mov
cmpsl
into
je
and
fwait
out
inc
filds
cmc
xor
bound
fcoml
cmp
roll
cmpsb
cmp
add
clc
xchg
mov
pop
jmp
jns
cmp
push
sbb
outsb
jno
shl
sbb
pop
add
loop
ror
je
lret
movsl
push
std
cmp
ss
cmpsb
pop
mov
addr16
push
jo
xor
push
movsb
xchg
mov
aaa
fcompl
test
sub
out
call
inc
lods
pushf
inc
ds
in
nop
in
scas
mov
xchg
dec
jno
sub
adc
cmp
add
sbb
xlat
je
sub
sbb
mov
shrl
gs
pop
fildll
jle
std
jp
leave
outsb
mov
jae
rorl
pop
mov
arpl
shrl
jnp
dec
call
aaa
cltd
cmp
call
xchg
push
das
aas
cmp
push
dec
icebp
ret
jecxz
mov
push
sub
aad
sub
add
out
mov
incl
aad
mov
lahf
sbb
stc
sub
mov
pop
ficomps
movsb
pop
sbb
pop
jb
xchg
cmpsb
jmp
lcall
cli
pop
pop
fldenv
inc
jae
pop
cmp
mov
ret
xor
cmp
repz
jno
pop
ret
inc
pop
movsl
jb
xchg
ja
ja
add
andl
roll
pop
rsqrtps
pop
cltd
in
loopne
pop
push
in
xor
pop
rcll
mov
mov
push
mov
add
idivb
xchg
mov
or
mov
call
jmp
push
xlat
jecxz
int3
cmp
dec
cmp
in
inc
add
inc
sti
inc
lret
insb
das
mov
inc
jns
push
pop
hlt
std
push
imul
movsb
mov
mov
mov
bound
mov
testl
orl
sti
push
pop
rcrl
and
push
or
jge
adc
lret
cmp
rclb
out
adc
stos
test
xchg
inc
jo
xchg
or
test
xlat
stc
hlt
nop
cmp
sbb
je
pop
dec
sub
test
mov
insb
nop
ja
pop
je
inc
and
das
jl
data16
or
dec
and
lea
lock
inc
in
lcall
sub
test
dec
mov
in
jbe
cmp
inc
popl
ldmxcsr
jb
mov
jne
cltd
push
inc
das
test
mov
mov
pop
push
insb
leave
push
mov
mov
repnz
lods
rcll
outsb
pop
sbb
insl
mov
lea
jmp
rclb
leave
fnsave
je
in
dec
mov
xor
out
mov
movhps
shr
ret
inc
cmpsl
mov
imul
xchg
xor
mov
ss
adc
push
in
sbb
roll
lret
leave
icebp
xchg
mov
and
test
pop
je
into
subl
or
in
mov
sub
push
stos
pop
movsb
cmp
rep
sub
push
dec
les
lods
inc
in
jae
jle
push
mov
pop
mov
loope
loope
adc
cmp
adc
cmp
shr
sbb
clc
into
dec
stos
movsb
and
scas
sub
mov
jg
out
mov
cld
pop
subb
xchg
hlt
jnp
mov
jns
mov
or
mov
shrl
mov
cld
cld
cwtl
ficoml
lea
sub
cli
mov
pop
mov
stc
icebp
jg
pop
cli
cmpsb
js
push
rep
mov
or
jmp
das
stos
cmp
cmp
pop
cmpsl
cltd
cmp
xor
sub
unpcklps
hlt
adc
push
push
cli
into
xchg
divl
loopne
pop
or
and
jg
aas
mov
jae
xor
sub
or
xor
mov
cmp
jnp
inc
fs
cmp
pop
mov
push
or
int3
aas
fst
dec
xchg
push
push
ficompl
ret
inc
and
sub
sub
push
inc
xchg
sbb
lods
mov
push
lea
mov
stc
loope
jo
pop
push
lret
cmc
popa
rcr
in
iret
cmp
fsubs
pop
in
rorl
dec
into
push
sahf
rclb
and
dec
push
dec
negl
les
xor
lods
shrb
int3
mov
test
add
jecxz
test
movsl
and
popa
into
das
dec
data16
rcrb
shrl
into
popa
mov
iret
push
gs
cmc
popf
add
push
out
rolb
out
jg
or
mov
xchg
adc
mov
jbe
dec
ljmp
cmp
add
out
jne
in
inc
jecxz
movsl
pop
test
jle
cmpl
out
aaa
pop
gs
push
push
and
ja
lods
cwtl
fcmovu
mov
cli
adc
xchg
ljmp
sti
and
repz
gs
jb
jg
sub
arpl
or
and
mov
jb
cmpb
sub
fbld
call
dec
add
leave
mov
mov
add
iret
imul
add
sub
hlt
adc
sbb
loopne
arpl
pop
pushf
lahf
sub
nop
sbb
mov
cs
es
pop
call
mov
xchg
ds
out
cli
adc
dec
js
mov
inc
xor
push
pop
nop
rorl
hlt
cltd
mov
adc
add
fidivrs
lret
jno
or
out
pop
lock
push
ret
jecxz
sub
stc
in
xchg
add
mov
ret
fisubrl
aaa
xor
inc
in
adc
outsb
dec
pop
cmpsb
stos
ds
aad
xchg
add
dec
cli
shll
mov
mov
add
or
lea
mov
lret
or
xor
pop
inc
pop
cli
push
arpl
pop
push
sbb
inc
leave
inc
or
push
mov
xchg
lahf
dec
mov
test
or
dec
mov
es
movsb
mov
and
push
aas
sti
int3
or
mov
pusha
js
push
mov
pop
mov
cltd
add
rcll
jmp
push
cmp
ss
fadd
dec
push
enter
xchg
inc
scas
ss
nop
cld
sahf
and
cmp
fnsave
jae
std
loope
or
sbb
jmp
xor
xchg
push
cld
push
ljmp
push
stc
mov
scas
xor
or
and
mov
cs
daa
inc
jnp
cs
dec
inc
insl
in
ret
jl
test
sub
mov
data16
icebp
adc
sub
inc
enter
push
xchg
pop
adc
shlb
ret
and
cmc
push
mov
test
xlat
xor
imul
mov
mov
xor
addb
dec
mov
loopne
pop
rcl
pushf
xor
mov
dec
data16
out
hlt
jno
mov
xchg
cwtl
and
mov
popa
cmpsl
shr
aaa
push
out
mov
sbb
push
sbb
adc
jo
stc
adc
jl
and
rorb
adc
sahf
cwtl
fwait
dec
fdivrp
mov
mov
mov
rorb
test
ret
aam
lret
pop
test
stos
movsl
outsl
pushf
inc
bound
mov
in
jl
ficomps
clc
movsl
mov
push
aas
xchg
and
pop
lret
inc
sub
fisttps
mov
es
js
bswap
add
out
not
push
sub
or
push
cmp
xchg
dec
pop
jo
pop
lret
in
jb
mov
out
leave
mov
ds
or
mov
shll
pushf
mov
setae
lock
aaa
mov
aaa
jl
and
mov
mov
jle
bound
out
test
add
fildl
insl
loopne
and
iret
fdivs
jmp
scas
in
out
addr16
sub
xlat
and
test
je
out
push
add
cmp
repz
lret
popa
fbstp
push
pop
dec
pop
fcompl
cmc
pushf
mov
fs
pop
fstl
cwtl
sbb
push
mov
cmpsb
fwait
popa
in
xor
enter
dec
leave
mov
mov
and
add
pop
pushf
adc
psubb
enter
mov
push
stos
ret
and
inc
push
cli
rolb
and
je
jmp
fcmovb
push
pop
adc
sub
test
xor
cltd
hlt
pop
pop
daa
cmp
xchg
iret
fldl
push
mov
mov
mov
sub
push
inc
test
adc
fsts
and
addr16
or
pop
lock
jmp
cmp
mov
scas
dec
sbb
adc
fwait
mov
add
clc
xor
inc
dec
and
jnp
or
loope
push
dec
in
fildll
inc
ficomps
fsubl
sub
leave
bound
mov
adc
dec
imul
lret
or
jg
movsl
mov
or
fwait
stos
mov
adc
jnp
push
dec
rclb
and
and
es
adc
or
out
sub
sub
shlb
data16
fwait
int
jno
xchg
push
insl
push
test
test
out
push
arpl
mov
xchg
nop
inc
out
xchg
fcomp
cmc
xor
mov
cmpsb
jp
sti
outsl
cmp
stos
push
pop
xchg
dec
std
div
fsubl
cs
cld
loop
repnz
jo
sub
das
les
and
icebp
repz
xchg
adc
rcr
pshufw
mov
movsb
add
fpatan
fadds
not
mov
mov
icebp
sbb
in
out
out
sub
out
xlat
xchg
inc
inc
pop
dec
fdivrl
and
mov
das
mov
adc
gs
push
xchg
into
in
mov
cmp
test
lcall
test
xchg
shll
imul
clc
xor
mov
shl
nop
repz
xor
push
cmp
xlat
mov
test
mov
pop
xor
pop
scas
mov
xchg
xchg
scas
dec
andl
mov
push
or
mov
push
mov
dec
out
hlt
nop
and
pop
mov
ret
and
rcl
fisubl
mov
ja
rclb
xor
xchg
sub
iret
les
cli
inc
pop
mov
push
ljmp
cmpsb
push
lods
and
inc
mov
sti
xchg
dec
outsb
or
adc
in
push
into
jmp
cmc
add
inc
roll
cmp
push
mov
ret
sbb
fcom
mov
cs
imul
and
mov
cmp
jmp
mov
pop
sahf
outsb
mov
sub
lea
mov
lahf
bound
ficoml
decl
jno
in
cltd
xchg
insb
sub
dec
mov
lock
in
add
mov
push
enter
xchg
sub
mov
leave
add
rorl
fsubrl
dec
loop
rcr
lea
or
mov
pop
jo
icebp
stos
push
lock
or
dec
mov
adc
jle
jbe
mov
cmp
ret
inc
pusha
ss
mov
fdivrs
lds
push
dec
mov
cwtl
dec
cwtl
mov
push
pop
cvtps2pd
out
mov
mov
xor
push
and
cmpsl
clc
imul
adc
add
lret
scas
std
inc
adc
xor
jns
stc
xor
lahf
iret
out
decb
subl
mov
pop
push
dec
cmp
leave
mov
xchg
mov
inc
out
xchg
adc
xchg
fldt
out
pop
pop
xor
sbb
in
sbb
daa
inc
test
int3
lea
cwtl
imull
es
jle
mov
negb
popa
mov
pop
push
or
stos
scas
dec
add
mov
xor
ja
inc
call
nop
mov
movsl
shl
adc
jecxz
je
xor
and
icebp
call
add
cmpsb
popa
or
dec
test
mov
test
jmp
cmp
jne
mov
in
xor
inc
mov
mov
sbb
xor
jl
jl
dec
hlt
in
std
mov
or
out
lods
xor
pop
add
add
daa
incl
pcmpgtd
adc
jae
pop
push
pushf
out
ret
loope
adc
in
or
sbb
shl
push
or
jae
divl
sbb
push
arpl
push
jecxz
aad
push
test
cmp
mov
jae
pop
mov
push
pop
test
sti
inc
jg
aas
cmp
cmpsl
adc
lods
and
pop
mov
repnz
ljmp
inc
add
adc
imul
rclb
repz
std
inc
and
dec
jmp
imul
mov
xchg
test
and
adc
adc
mov
jae
pop
adc
xchg
mov
xchg
sub
outsb
mov
loope
push
xor
loopne
ss
pop
out
cwtl
push
add
sub
insl
and
cmp
subb
xchg
xchg
call
in
rclb
dec
jp
mov
add
mov
lds
daa
pop
or
pop
cmpsl
in
in
inc
imul
lds
jmp
push
pop
lcall
out
jg
jo
pop
jp
pop
leave
dec
std
pop
ljmp
aaa
xchg
insb
hlt
test
sub
mov
sbb
scas
sbb
mov
insb
xchg
stos
xchg
fcoml
and
add
mov
jecxz
es
shl
mov
pop
xlat
and
inc
inc
cwtl
cmp
aad
pusha
adc
loop
and
andl
cmp
lcall
xor
inc
inc
pushw
fs
jo
and
dec
aas
mov
es
jnp
ljmp
sub
mov
leave
lds
pop
loopne
jne
div
sbb
popf
dec
cmp
mov
push
jb
int
pushw
cmp
jbe
fs
xor
sub
mov
les
sbb
push
and
inc
inc
push
fdivrp
xlat
lcall
pop
push
fbstp
mov
inc
fadds
adc
mov
or
out
mov
imul
mov
xchg
lds
jne
outsb
clc
or
rcll
loopne
pushf
jns
or
push
fcmovu
pop
dec
dec
std
out
inc
xor
mov
mov
xor
int3
cmp
push
jecxz
lods
std
pop
pop
and
shll
xorb
or
insl
icebp
movsb
push
mov
iret
cmp
subl
push
mov
mov
mov
xor
mov
add
push
xorb
jle
imul
les
out
push
test
jo
adcb
sarb
ds
cmp
out
test
xchg
rolb
sub
push
aad
in
xor
mov
inc
lock
xor
scas
movsb
lahf
idivb
imul
mov
rcrl
ss
imul
adc
pop
aaa
sub
push
lods
mov
jmp
int
sub
jl
sub
fisubl
daa
or
fwait
loopne
mov
lahf
mov
push
xlat
and
dec
arpl
sub
sub
loopne
pop
jne
push
popa
insb
dec
and
and
rcrb
mov
jle
jbe
out
repnz
pop
mov
cmp
ljmp
or
js
xorb
inc
icebp
xchg
pop
mov
jae
lcall
pusha
data16
in
xchg
enter
aam
adc
sti
lea
outsl
mov
std
cmp
jnp
iret
rcll
imul
mov
xchg
push
and
popf
pop
mov
and
mov
fstpl
outsl
sub
popa
cmp
push
loop
xchg
dec
inc
out
fnstenv
xchg
sbb
pop
jmp
stc
inc
stos
decb
lcall
mov
sub
aam
lret
movsb
adc
add
jl
push
addr16
dec
push
idivb
jb
insb
dec
pop
je
sbb
lret
iret
jmp
loopne
pop
push
cmp
pop
push
out
adc
inc
leave
ffreep
push
adc
inc
test
lods
into
sahf
pushf
adc
andb
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
jge
scas
jp
or
jp
cwtl
jecxz
pop
addr16
cli
je
adcl
xor
adc
sbb
push
ja
jno
lret
sbbl
outsb
sub
push
mov
jp
jmp
cltd
cmpsb
clc
add
pop
shlb
add
pop
ja
aaa
leave
push
icebp
stos
faddl
int
push
fucom
pop
inc
mov
mov
pop
pop
sub
pop
jnp
sub
jbe
pop
lret
inc
push
mov
sbb
enter
jb
xchg
xchg
stc
movl
add
cmp
js
jbe
or
popa
fcomp
jae
test
inc
sbb
jb
or
pop
je
or
jmp
sbb
ret
out
popa
jae
leave
popf
inc
push
pop
mov
cmp
and
cld
dec
cltd
jno
adc
dec
jg
or
inc
lds
and
test
dec
xor
and
lahf
or
sub
push
xor
cmp
jno
push
and
push
sar
cwtl
adc
cmp
jmp
pop
and
mov
cmpb
stos
cs
pop
lods
mov
out
stos
sbb
xor
cmc
mulb
icebp
bound
mov
roll
mov
xlat
xchg
or
or
test
addr16
dec
pop
test
push
pop
cmp
fists
ret
sub
sbb
jb
popf
neg
jb
xor
mov
adc
addb
inc
pop
push
int
pusha
mov
insb
addr16
pop
sub
jmp
cmc
jae
fldenv
mov
cmp
mov
icebp
mov
sahf
je
pop
dec
cmpsb
and
fsubs
jns
adcl
mov
call
fmull
and
cli
add
jbe
jmp
jbe
stos
jae
inc
movsb
cli
fisubl
icebp
dec
fistpl
dec
pop
lock
clc
dec
int3
push
cli
mov
xchg
jp
inc
loope
dec
test
mov
pop
sbb
fiadds
sti
fwait
lcall
push
rorl
cmpsb
jb
dec
fwait
cs
ds
shrl
cwtl
popf
inc
out
lret
bound
addb
mov
cmp
pop
and
cmp
popfw
or
mov
or
jle
cltd
sarl
mov
or
nop
adcl
sbb
gs
frstor
mov
incl
mov
push
ss
jns
lahf
jo
bnd
jmp
ret
dec
mov
clc
nop
mov
out
lret
push
test
mov
in
dec
jo
inc
cmp
mov
scas
sub
push
roll
or
xchg
aad
add
xchg
notb
xchg
pop
or
jmp
pop
or
pop
imul
push
dec
and
xor
mov
adc
lods
imul
notl
jg
imul
insl
aad
fwait
loope
push
inc
data16
adc
mov
jns
push
mov
in
insb
scas
cwtl
pop
sub
iret
or
ret
mov
loop
push
pusha
adc
fcmove
ljmp
inc
xchg
or
add
dec
mov
or
insl
aaa
inc
sbbl
jo
pop
inc
insb
imul
ss
icebp
or
pop
push
mov
mov
mov
pop
jmp
sub
imul
mov
xor
jne
pop
jbe
inc
sbb
pop
fcoml
cmovns
mov
mov
test
adcl
test
js
pop
out
add
scas
ret
out
leave
es
sub
adc
jle
push
in
jae
incl
mov
lret
sub
cmpsl
insl
faddl
dec
or
int
mov
xchg
clc
mov
icebp
or
lahf
xor
aaa
push
pop
jp
dec
sub
and
sbb
movsl
repz
jge
dec
lds
xor
mov
leave
cmp
and
jp
mov
test
ss
xchg
inc
fwait
sub
mov
js
xchg
rolb
leave
fcmovu
mov
popf
jg
or
pop
outsl
push
test
push
add
iret
dec
lods
jge
sbb
dec
pop
ja
pop
vpminsw
push
or
hlt
pop
nop
push
dec
jnp
imulb
stos
out
cld
and
rorb
xchg
mov
int
mov
rcl
mov
mov
pop
mov
or
xchg
add
dec
and
jne
xor
dec
xchg
sbbb
gs
stos
add
mov
pop
mov
scas
shll
scas
xchg
mov
test
mov
dec
jecxz
mov
or
test
rcll
fs
inc
dec
popa
ret
sub
repnz
and
pop
jne
xchg
lret
dec
and
jne
push
sti
daa
shrl
lret
mov
int
push
xchg
fsubrl
sbb
dec
aas
insl
popa
adc
ret
cltd
mov
sti
sarb
divb
xchg
pop
cmp
and
mov
movsb
stos
push
xor
xchg
mov
mov
fdivs
fimull
js
mov
jnp
std
sub
pop
in
iret
mov
add
push
stos
xor
rcr
loop
mov
movb
cwtl
shl
jmp
mov
jns
outsl
push
pop
out
sbbb
push
clc
mov
shl
negb
arpl
pushf
adc
stc
repz
xchg
ficomps
pop
dec
mov
lahf
leave
jno
cmp
mov
jl
lods
ret
xchg
sarl
loop
or
lea
mov
pusha
xor
jnp
lea
add
mov
bound
test
cmp
fstpl
cmc
ret
addr16
sub
cmp
insb
xchg
sbb
pusha
or
mov
lret
loope
push
cltd
jo
in
jg
pop
jns
add
stos
xchg
int
cli
js
push
les
idivb
and
cmp
cli
dec
enter
inc
addr16
inc
adc
jns
rcll
stos
adc
xchg
mov
mov
shl
lret
lret
popl
mov
les
orb
adc
dec
inc
arpl
mov
aam
sbb
push
arpl
inc
cltd
xor
fsubrs
cmpsb
xchg
inc
popf
popa
dec
lret
fldl
cmp
stc
sbb
repnz
out
adc
cld
push
cs
cld
xchg
ja
imul
sbb
imul
movsl
dec
pop
xchg
jp
xor
mov
gs
inc
adc
cmp
loop
mov
loop
mov
mov
sbb
cli
push
imul
xchg
mov
sti
jg
jmp
mov
or
jb
popf
push
ret
add
arpl
scas
cmp
sbb
hlt
arpl
aam
ret
imulb
fsts
cwtl
mov
or
clc
sub
into
inc
inc
adc
lods
and
into
and
push
cmpsl
repz
les
fidivrs
les
enter
lods
mov
cmpsb
nop
lahf
mov
dec
jmp
test
inc
int3
adc
pop
pop
dec
call
pusha
sub
mov
hlt
jp
push
pop
inc
adc
and
xor
lahf
and
push
cmp
into
mov
popf
pop
xchg
cs
ret
adc
icebp
movsb
ret
pop
pushf
scas
outsl
jl
popf
xchg
adc
fcompl
and
test
xchg
mov
pop
inc
xor
cltd
nop
sarl
mov
push
cmp
jae
fdivrp
mov
loopne
push
dec
push
pop
test
imull
ljmp
sub
lea
push
mov
adc
mov
into
int
ss
daa
aas
negl
push
loope
sbb
mov
lret
out
pusha
addr16
or
idiv
inc
dec
jge
mov
fidivs
and
pop
pushf
cli
pop
scas
pop
test
fcomps
pop
jge
insb
inc
sti
inc
ds
and
cmp
xor
or
loop
fstpl
mov
sub
push
rcrb
pop
ret
lods
inc
xchg
ss
push
fs
out
call
cmovae
and
and
sbb
cmp
sarl
jbe
je
mov
mov
in
pop
or
psraw
shlb
ret
jge
xor
inc
and
pop
cltd
roll
inc
fists
scas
inc
lret
jle
mov
inc
adc
xor
insl
nop
fs
push
shlb
cli
sbb
shlb
in
cli
or
call
sti
mov
in
sub
xchg
std
cli
outsl
sbb
shrl
jle
dec
cmp
loop
dec
enter
mov
xor
push
xchg
nop
pop
add
hlt
jge
dec
pop
enter
xchg
or
mov
jns
in
cwtl
repnz
ds
sbb
jb
pushf
sbb
mov
mov
mov
js
mov
and
adc
arpl
mov
dec
or
or
je
or
dec
push
xor
mov
inc
lret
jne
mov
inc
pop
pusha
jns
mov
cmp
sub
cmp
adc
push
rcrl
mov
and
or
into
sti
mov
sahf
xor
sub
out
dec
divl
mov
mov
inc
pop
repnz
push
sub
jo
push
std
leave
jecxz
and
cwtl
pop
popf
imul
and
jmp
lods
push
push
int3
xchg
inc
jg
or
and
mov
ret
jo
cmpsl
cmp
push
mov
xor
or
mov
fsubrs
fmulp
pushf
cmp
inc
sub
lods
push
mov
pop
fistpll
lret
ljmp
and
fimull
cltd
jbe
in
and
add
and
mov
leave
add
ret
fcoml
push
and
dec
insl
xchg
mov
push
loope
jae
dec
es
mov
mov
testb
sbbb
mov
xor
shlb
pop
adc
mov
cs
out
dec
mov
jg
ljmp
mov
sub
sbb
clc
sub
nop
dec
es
pusha
push
dec
pop
lock
mull
or
lock
xor
pop
cs
jae
pusha
sbb
pop
jge
ret
xchg
out
bound
or
jmp
adc
in
gs
xchg
or
xor
push
cld
shll
pop
pop
dec
enter
jb
sbb
cli
mov
mov
popa
test
adc
dec
leave
popa
xchg
subl
push
sub
xor
jno
jns
cmpsb
in
inc
sub
mov
daa
push
dec
cld
push
mov
xor
inc
sub
mov
pop
cli
pop
clc
lods
push
lcall
ficompl
pop
inc
test
mov
in
mov
pop
and
mov
movsl
and
or
mov
gs
inc
imul
fcmovnbe
out
push
pop
and
test
push
adc
in
sub
std
dec
and
pusha
repz
out
cmp
inc
lret
fcom
popf
call
adcl
fwait
sbb
das
outsb
lods
lock
imul
and
cmp
mov
stos
dec
mov
scas
mov
enter
or
fcomps
testl
sbb
ret
xor
lret
enter
je
add
pop
cwtl
sub
pop
add
mov
add
pop
pop
stc
cli
test
adc
aam
xor
pop
aad
sub
xchg
adc
ss
cld
ret
xor
sbb
outsb
neg
dec
mov
cmp
je
test
pop
lock
push
adc
push
ds
into
movsl
pop
ret
ja
adc
and
push
xchg
lods
insl
jg
push
aas
into
hlt
push
and
push
lods
sbb
xchg
jnp
pop
pop
inc
push
push
enter
inc
dec
arpl
push
cmpsb
in
int
arpl
mov
cmp
insb
mov
jnp
das
lea
xchg
push
nop
ja
sbb
loop
ficomps
xchg
das
push
push
cmp
test
mov
pxor
ret
and
mov
gs
inc
jno
mov
mov
imul
hlt
rolb
insb
jbe
es
inc
call
bound
sbb
jecxz
xlat
sti
pop
out
push
dec
or
or
mov
xor
cli
roll
push
addb
dec
jecxz
arpl
mov
in
lock
or
or
dec
cwtl
arpl
dec
std
mov
call
test
test
jb
stc
loopne
cmp
cmp
mov
mov
into
sub
fs
jae
leave
inc
icebp
in
popf
sub
lods
ret
sub
sbb
int3
mov
push
push
inc
push
add
inc
nop
push
fmuls
idivb
mov
stos
mov
fidivs
aaa
jne
mov
cmpl
aas
add
and
cmpsl
pop
test
mov
push
cwtl
pop
inc
mov
je
mov
daa
cmp
lods
mov
cld
sub
sub
ss
push
jno
or
ret
mov
loopne
cltd
dec
xlat
push
add
cmp
movsb
cltd
adc
ficoml
pop
and
test
push
int
test
cltd
addr16
mov
incb
mov
out
repnz
ret
sbb
fdiv
adc
or
inc
push
xor
push
cli
subb
and
lahf
mov
frstor
ficoms
fstpt
fstpt
add
push
xlat
in
loop
lods
and
int
jp
data16
inc
jp
sub
pusha
sbb
into
sub
jecxz
ds
cs
clc
or
or
sbb
cmp
outsl
mov
lods
out
pop
clc
inc
and
movsb
inc
gs
adc
mov
pop
add
inc
hlt
sub
jbe
sbb
mov
test
addr16
ds
mov
iret
sbb
pop
add
sarb
xor
add
mov
iret
pop
fcoml
lcall
or
ret
push
in
outsb
shrb
mov
popf
testl
xchg
inc
jge
and
dec
clc
cmp
push
clc
jg
jmp
jp
pushf
cmp
movsb
sbb
cmp
testb
and
sub
sub
pop
lock
fisttpl
sahf
jmp
les
insl
out
mov
stc
test
cwtl
mov
sbb
xor
ss
jns
and
fs
popa
jns
xchg
mov
push
mov
in
stos
ret
dec
addr16
xchg
mov
push
outsb
inc
jecxz
outsb
addb
sub
dec
add
cli
lock
inc
jp
mov
xchg
shl
cmpsl
dec
mov
lods
mov
ficompl
mov
jo
fnstcw
add
fcoml
sub
xchg
xchg
jmp
daa
aam
ljmp
mov
stos
stos
jo
mov
jb
js
or
xchg
icebp
sub
cmp
sbb
scas
ljmp
jae,pt
cmp
add
fidivrl
aam
test
enter
sub
pop
sub
inc
pusha
cs
jae
add
xchg
sub
or
mov
fidivrl
fdivl
jp
dec
mov
jecxz
add
jno
rcll
add
mov
fwait
or
jmp
cmp
pop
mov
clc
gs
xchg
lcall
rorl
imul
xchg
dec
pop
push
out
jle
ret
jle
stos
aad
in
mov
cmp
outsb
negb
jbe
insl
lret
ret
push
mov
adc
es
or
dec
xchg
adc
cmp
mov
inc
fadd
fwait
shll
std
mov
cmp
mov
add
leave
mov
das
movsb
and
inc
adc
fadd
mov
inc
dec
shll
sbb
inc
push
lods
shll
and
les
xchg
imul
aaa
sbb
dec
lahf
mov
xchg
dec
mov
cmp
test
or
mov
cmpsl
pusha
cmp
iret
xchg
push
push
adc
pop
mov
pop
sub
sub
ret
cmp
fwait
jbe
adc
xor
xchg
mov
jo
mov
fcomps
loope
push
popf
push
and
adc
sub
les
aaa
movsl
rolb
into
and
mov
sub
jns
inc
push
outsl
rep
xchg
inc
push
outsl
lret
fldt
inc
in
push
push
xchg
sbb
lcall
jne
mov
insb
sub
int3
ret
andb
inc
outsb
jo
xor
and
movsl
mov
int
imull
in
fcmove
in
loopne
mov
out
cld
adc
test
adc
push
mov
push
test
push
inc
xlat
cmp
cli
aas
push
pushf
hlt
xor
sbb
inc
in
xchg
scas
dec
enter
test
popa
sub
ret
inc
sarl
push
mov
add
dec
mov
jo
add
shrb
movsl
push
scas
out
jns
cli
pop
imull
out
rclb
inc
inc
xlat
push
xchg
dec
lahf
mov
inc
scas
movsb
ficoml
add
adc
cmp
rcrb
jns
jp,pt
mov
sub
xor
fsts
and
jnp
inc
xchg
sub
adc
iret
test
xor
dec
gs
fsubs
jae
aaa
and
and
adcb
cmp
movsl
pop
cmpsb
data16
into
ret
jmp
mov
mov
bound
mov
lods
arpl
bound
adc
lods
fldl
xchg
dec
hlt
outsb
jb
mov
hlt
nop
pop
loop
fcoms
movsl
in
add
xor
in
push
mov
inc
cmpsb
repz
inc
daa
ret
imul
fsubs
les
jae
insl
push
xor
ret
xor
jmp
ret
enter
push
dec
mov
xor
xchg
mov
enter
pusha
lea
jmp
lcall
nop
mov
pop
push
idivb
sub
ja
push
arpl
sahf
divb
test
mov
xor
loop
cmp
arpl
mov
enter
enter
aaa
jae
fists
and
sbb
lods
ucomiss
jb
fdivrs
lret
jmp
mov
mov
testb
iret
inc
sar
imul
adc
subb
push
or
or
xchg
scas
push
out
inc
sbbl
andl
ja
xlat
or
outsb
jbe
add
popa
sarb
dec
mov
or
cmp
xchg
dec
out
push
fimull
sub
dec
dec
xor
pop
push
dec
cmp
shr
jg
pushf
or
loop
lret
pavgw
jmp
push
dec
mov
jb
mov
inc
aaa
movsl
mov
out
add
sbb
mov
pop
shlb
pop
out
fistpl
loope
jo
sahf
sbb
insb
pop
sbb
inc
daa
imul
int3
es
cltd
hlt
cli
adc
sub
sahf
out
shlb
mov
dec
fildl
pop
cmp
mov
sub
sti
sub
cltd
data16
popf
and
jno
sub
insb
fistpl
adc
std
fstpl
out
sahf
ret
std
or
insl
dec
or
mov
les
addr16
jne
shrb
rorb
cltd
and
lods
leave
jge
repz
stc
loopne
inc
xor
ret
xchg
gs
insl
loopne
inc
gs
xchg
mov
pop
adc
xchg
addr16
jmp
rolb
test
adc
add
fdivr
or
rcl
cwtl
pop
lds
lret
mov
ficoml
inc
pushf
cwtl
xlat
mov
inc
loop
xor
inc
lock
jo
fcomps
test
mov
sbb
test
iret
decl
pop
xor
xor
fstl
push
and
and
xchg
cwtl
jnp
jmp
inc
sub
andb
fld1
xchg
leave
mov
jo
and
mov
cli
adcl
push
xlat
cmc
test
cld
mov
dec
inc
scas
jp
mov
arpl
fidivrs
mov
mov
jp
loope
adc
cmc
inc
aam
pop
push
cmp
or
xchg
sbb
jns
adc
sbb
cmpsl
or
repnz
js
pop
lods
mov
cmp
in
pushf
lahf
push
testl
shlb
cmpsl
xchg
or
cmp
sbb
fs
xchg
lret
rcrl
and
xor
jbe
push
add
cld
push
xor
jo
rolb
int3
pop
leave
shrl
insb
call
push
gs
cmp
fsubrl
pop
cmpsl
and
or
out
idiv
movsl
mov
or
xchg
das
arpl
xchg
jns
mov
je
popf
cmp
inc
int
mov
sbb
adc
dec
leave
xorb
push
movsl
jge
fldt
mov
imul
mov
add
jbe
addl
dec
xor
xor
fistpl
jmp
inc
ljmp
aam
aaa
int3
inc
cmp
incb
add
sub
in
xor
xor
ret
jno
sub
pop
jle
pop
cltd
popa
sub
jg
fstpt
xor
cld
push
push
aaa
out
shrb
or
add
ss
and
xchg
fcompl
fmuls
pop
lea
shrl
scas
add
cmp
xor
adc
insb
sbb
sbb
sahf
lods
mov
inc
add
mov
test
jno
andl
aam
inc
jo
divb
daa
cmp
jb
and
xor
stos
xorb
or
sub
leave
mov
mov
adc
pop
pop
and
push
js
adc
out
dec
cmp
jmp
sub
cmp
lret
adc
mov
cmp
jecxz
je
cmpsl
ret
sbb
fsubr
lds
je
inc
mov
inc
mov
push
lea
jo
and
out
jnp
add
inc
ret
fld
rcrb
xor
call
icebp
add
add
add
cli
xchg
mov
aam
jecxz
add
out
mov
loopne
add
mov
inc
xor
stos
test
outsl
mov
insl
sbb
mov
push
dec
jg
loope
push
stos
es
sti
imul
mov
mov
jae
jbe
in
xchg
sub
xchg
inc
mov
ss
ret
push
mov
inc
jg
cli
test
sbb
inc
mov
fnstcw
xchg
in
stos
mov
jno
icebp
lods
xchg
test
xor
sbb
inc
repz
cltd
mov
and
xor
push
imul
test
or
hlt
mov
dec
pusha
movsb
js
pop
es
loopne
jp
inc
lods
test
scas
test
outsl
mov
xchg
pop
cmp
sbb
pop
push
jl
sub
sbb
xchg
test
cmp
pop
fnstcw
mov
mov
or
stos
movsl
xchg
and
outsb
pop
mov
push
rcrl
jnp
cmpsb
lock
and
iret
mov
scas
mov
add
fcoms
scas
adc
test
add
je
push
mov
xor
inc
dec
testb
insl
xor
stos
lods
rcll
in
cmp
mov
and
xor
arpl
inc
cli
cmp
in
sub
fnstenv
xchg
pushf
ja
cmp
mov
call
data16
out
in
jno
mov
imul
jne
push
jnp
pop
ficoms
loop
push
xor
pop
xchg
shrb
outsb
std
cmpsb
cmp
aam
or
rorl
mov
sbb
sbb
in
test
add
sub
and
je
sbb
into
hlt
jle
jecxz
jne
adc
lret
std
out
mov
out
inc
sub
ret
adc
pop
mov
movsl
sub
push
cld
aad
push
adc
icebp
addr16
dec
mov
in
test
or
data16
out
xlat
cmp
pop
xchg
xor
or
in
pop
repz
jnp
pusha
insb
fldl2e
cmp
xor
lahf
ljmp
incl
mov
ja
insl
test
je
cmp
adc
mov
inc
je
mov
push
push
pop
xor
out
lcall
mov
daa
lcall
popl
addr16
ret
mov
aas
push
push
repz
cmp
cmpl
popa
and
cmp
mov
dec
mov
rcr
add
outsl
push
rcl
cmp
xchg
cmpsl
rcrb
rolb
mov
sbb
jmp
ja
lret
mov
and
int3
aaa
insl
mov
jg
and
adc
out
fwait
mov
adc
or
jmp
dec
push
ffree
lcall
xchg
loope
or
cltd
xor
mov
fadds
mov
in
scas
pop
inc
testl
lds
mov
mov
mov
sbb
push
iret
shlb
hlt
in
div
jp
push
icebp
addr16
fmuls
pop
pop
js
divb
mov
mov
imul
dec
and
lods
into
dec
ljmp
out
push
out
push
or
push
sahf
bound
int3
cmp
adc
push
mov
xor
sub
sbb
pop
shrl
mov
dec
sbb
mov
mov
mov
pushf
leave
push
adcl
lret
jbe
push
sub
xchg
add
mov
sbb
mov
cs
jl
lahf
push
scas
cmpsl
test
dec
int
mov
cmp
sar
cmp
icebp
inc
xchg
inc
in
movb
inc
in
sbb
fs
stc
in
add
sbb
add
push
imul
andl
insb
nopl
call
sbb
cmpsb
in
xchg
in
gs
pop
fidivrs
ret
sbb
int
fnstsw
xor
jnp
je
jmp
add
push
xor
xchg
mov
jns
fstps
dec
mov
mov
cmpsl
test
vpmacswd
push
xchg
notl
leave
jbe
xchg
imul
mov
pop
push
xchg
or
enter
lea
imul
out
mov
sbb
add
xchg
in
xchg
jp
xchg
and
or
mov
stos
mov
dec
fwait
xor
mov
pop
pop
dec
mov
dec
dec
inc
cmpsb
cmpsb
push
pop
and
out
clc
dec
fisttpl
imul
pop
push
pop
cmp
sub
mov
das
mov
cmp
fs
in
or
add
cmp
test
xor
push
inc
push
repnz
mov
jb
mov
leave
adc
stos
mov
mov
stc
cld
mov
xor
sbb
pop
sbb
inc
call
jne
ret
cmpsb
xchg
rcrb
insb
test
add
mov
dec
jle
lds
enter
and
cmpsl
sti
ja
bound
xchg
mov
cmp
and
xlat
jmp
frstor
mov
cwtl
mov
cmp
test
pop
push
in
popf
lret
or
xor
les
cmp
or
js
jo
dec
add
push
ret
xor
xor
xchg
out
xor
enter
push
mov
icebp
dec
mov
std
push
pop
pop
cmc
mov
add
leave
and
cmp
dec
xchg
fcomip
lretw
mov
mov
stos
inc
dec
xor
xchg
jne
clc
addr16
fadds
pop
in
adc
fst
stos
movsb
in
rolb
jmp
shll
mov
sbb
addl
and
shl
enter
mov
in
aas
add
adc
cmpsb
sub
orb
subl
xchg
sbb
lds
iret
dec
daa
jno
mov
sbb
inc
mov
and
sbb
addr16
push
mov
das
add
adc
loop
and
sbb
pop
mov
push
cs
mov
pusha
jmp
popa
test
imul
pop
gs
data16
cmpsb
or
mov
cli
add
xor
mov
xchg
jecxz
repnz
adc
jmp
mov
movups
cli
xchg
iret
sbb
xchg
xchg
call
add
fdivl
bound
jno
test
add
je
sub
aam
mov
jb
sub
hlt
clc
xor
cmp
pop
cmc
sahf
scas
xor
push
ror
shlb
add
cmp
mov
cltd
pushl
inc
mov
out
jge
rolb
shr
divl
mov
daa
or
mov
dec
xchg
push
sbb
pop
push
std
inc
les
das
icebp
mov
gs
push
clc
xchg
fstps
cld
pop
das
dec
ja
std
sbb
fwait
stos
jnp
js
es
sbb
nop
ret
xchg
cli
sbb
jl
xchg
out
push
jo
in
cmp
mov
shr
or
aaa
jecxz
or
fidivl
in
fucom
femms
xchg
mov
ss
pop
add
adc
adc
jl
movsb
jl
ja
dec
daa
fldl
movsb
ja
adc
aas
aam
bnd
add
stc
cmp
jbe
out
test
cmp
and
adc
xchg
shll
in
xchg
mov
pop
ficoms
test
add
popa
mov
add
lahf
inc
mov
rclb
cmp
rcl
xchg
pushf
mov
mov
sbb
sbb
mov
jo
ret
cmpsb
mov
out
lahf
sbb
mov
inc
daa
pop
push
outsl
mov
add
dec
adc
mov
mov
push
pop
or
fisubrs
rorb
fildl
push
leave
mov
push
leave
push
movaps
or
mov
inc
test
mov
push
movsl
clc
test
popf
sub
xor
lret
ljmp
arpl
addl
test
out
adc
fmulp
out
cmp
pop
add
lea
vprotb
adc
xchg
xchg
bound
cmpsl
stos
fcoms
sub
inc
dec
scas
shlb
mov
mov
cmp
pop
call
adc
hlt
sub
xor
dec
push
add
xchg
adc
fwait
sbb
hlt
mov
jae
lahf
push
imul
outsb
mov
cli
loop
pop
dec
lods
dec
add
pusha
enter
fmulp
out
fsubrp
mov
adc
enter
test
sbb
sub
in
gs
jle
repnz
ret
test
xor
ljmp
pop
mov
lods
cmp
sbbl
clc
push
push
jo
cld
shrb
jb
std
out
out
movsl
push
and
jp
mov
aaa
sbb
es
je
dec
orb
int3
mov
out
cmp
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
int
das
in
mov
pop
jp
cltd
mov
jle
jmp
cmc
sub
cs
cltd
ret
loop
lds
loop
xchg
or
sbb
mov
jmp
mov
cmc
push
outsl
inc
movd
outsl
aam
jns
pop
mov
flds
lcall
jo
pusha
loop
cmp
lahf
or
loop
push
push
dec
lods
lea
and
nop
das
out
in
movsl
xchg
sti
repnz
ljmp
dec
gs
jmp
nop
lods
xchg
outsb
push
int3
jl
mov
lret
in
shrl
shrl
mov
cmp
into
push
inc
stc
out
dec
cmp
repnz
lahf
sbb
ss
inc
lock
mov
xchg
inc
aaa
cmp
fwait
cld
xlat
or
mov
aaa
sti
add
stos
fadds
push
rdmsr
mov
xchg
je
jmp
shrb
loop
repnz
jae
sub
out
adc
mov
push
lahf
pusha
jl
mov
fwait
xchg
div
mov
out
or
test
test
call
push
xchg
pop
push
js
sub
cmpsl
pop
das
fucomp
rcl
mov
and
lods
and
cmpsl
in
sub
ja
inc
psrad
int
mov
pushl
insb
xchg
push
dec
das
mov
mov
xor
divl
and
or
vmovdqu
jno
mov
ljmp
add
int3
cmp
out
sahf
dec
fsubr
out
and
xlat
aaa
add
outsl
nop
aas
xlat
clc
xor
and
fists
push
xlat
dec
fcmovu
loopne
cli
out
or
repnz
lods
lods
xchg
jbe
dec
pushl
test
cmp
neg
sub
popf
out
jne
subb
movsl
rolb
adc
dec
jb
jno
xchg
xor
pusha
dec
dec
fmull
jno
mov
xor
adc
add
add
loopne
cwtl
pusha
lcall
test
dec
mov
or
pop
fsubrs
orl
sub
arpl
fidivrs
sbb
test
add
fwait
iret
fs
in
inc
mov
cmp
inc
int3
fdivr
lds
dec
outsb
sbb
imul
sbb
imul
xchg
ds
call
pusha
mov
dec
int
and
pusha
add
push
xor
jbe
leave
xor
loop
push
add
iret
push
stc
dec
outsl
mov
or
pop
xchg
fists
rorl
fnstenv
jne
mov
in
scas
loopne
pop
jge
shrl
icebp
inc
xchg
das
mov
arpl
popf
xor
xchg
mov
repz
arpl
test
jbe
arpl
insl
push
and
dec
int
imul
lret
and
pop
adc
sub
or
popa
jmp
testl
icebp
rclb
cmp
inc
pop
cli
lret
sbb
mov
sub
repz
cs
adc
fistps
ret
cmc
push
scas
push
enter
push
fisubrl
jmp
mov
jne
cmp
out
dec
xchg
mov
mov
push
xchg
pusha
jno
aam
sub
mov
cmp
pop
xchg
adc
repnz
sub
testb
xor
in
dec
ss
cmp
lret
add
andb
mov
addr16
mov
movsb
stc
out
ljmp
pop
and
cltd
jp
daa
cmpsb
out
cmp
stos
jecxz
inc
pop
mov
mov
stc
loope
inc
repz
fcoml
pop
das
popa
adc
adc
mov
and
pushf
cmp
sbb
jae
and
mov
xor
push
add
js
dec
push
es
sbb
call
jecxz
rcrl
clc
pop
movsl
dec
xor
cmpsb
push
push
cmp
xchg
mov
aas
xchg
scas
dec
lret
fidivrl
ss
rdtsc
lock
into
add
jl
jle
int
clc
rcrb
aam
push
and
dec
and
mov
mov
out
stos
clc
mov
pop
mov
notb
cli
clc
push
psraw
adc
imul
out
das
addb
fcoml
sar
xchg
xor
add
jbe
sar
cmpsl
sbb
test
loop
mov
lds
sub
aam
pusha
mov
fwait
popf
cmp
or
decb
je
jnp
aam
fisubrs
and
idiv
cmp
dec
pop
dec
add
insb
pop
aaa
je
lahf
movsb
adc
or
xlat
mov
adc
and
imul
in
or
inc
fs
sub
loopne
jns
lret
pop
ja
pop
stos
push
mov
push
or
ficomps
sub
dec
ret
sub
mov
dec
add
gs
out
pop
jl
sub
dec
andl
gs
jae
out
jo
fcmovb
jne
jp
ret
sbb
cmp
pushf
inc
xchg
test
dec
loop
jb
and
xor
mov
out
fidivs
jo
in
lret
xchg
nop
push
adc
hlt
adc
test
mov
icebp
sub
or
adc
cltd
out
out
push
iret
loopne
inc
jmp
adc
movsl
lods
adc
xor
inc
je
sahf
out
sub
stos
pop
data16
pop
nop
xchg
inc
pop
fisttpll
dec
xor
mov
scas
insl
mov
lahf
outsb
test
ss
lret
push
mov
xchg
jnp
std
aad
mov
ds
cmpsb
ret
adcb
imul
idivl
jg
gs
sub
aad
aam
xchg
sub
push
lret
jns
hlt
mov
mov
fwait
rorl
mov
and
dec
in
sub
enter
mov
xor
jp
out
push
ror
and
push
adc
in
xor
and
bnd
std
fsts
push
push
xchg
mov
push
fsts
xor
cmpsl
dec
jge
xor
stc
pop
mov
fidivs
xlat
orb
adc
test
jne
mov
jge
sbb
jmp
jge
xchg
shr
adc
filds
jge
out
lret
adc
in
sbb
pop
dec
pop
jle
dec
lret
jge
bound
sub
testl
inc
jbe
ret
std
cmpsl
add
mov
inc
pop
mov
push
negb
xor
bound
cmp
test
lds
ja
jae
addr16
xorb
jecxz
pop
and
sub
or
push
stos
data16
daa
movsb
mov
push
xor
jne
shl
stos
push
roll
int3
loopne
sarb
lods
sub
cmp
int
fildl
xor
and
pop
jo
mov
sti
repz
shl
and
addr16
cltd
mov
and
aas
xor
inc
es
xor
negl
rorl
sub
cltd
imul
mov
inc
out
jecxz
rcll
fwait
and
xchg
popa
jae
pushf
cltd
and
jle
gs
and
out
aam
cmp
cmp
call
cmp
mov
mov
mov
addr16
les
xchg
test
xor
mov
pop
in
pop
lahf
xchg
mov
sbb
jnp
mov
or
push
and
mov
ret
mov
out
mov
test
cmp
push
sbb
pop
jae
movsb
mov
movsb
cltd
in
hlt
and
push
cld
ja
sti
pop
and
mov
arpl
xor
xchg
xor
add
mov
rcll
icebp
pusha
inc
or
out
jle
les
mov
xor
jnp
in
enter
jno
and
pop
pusha
loope
pop
inc
xchg
fmull
push
test
test
inc
dec
in
add
inc
xchg
enter
and
and
data16
int3
lods
xchg
mov
mov
inc
imul
push
stc
fistl
mov
sbb
insb
gs
inc
shlb
sbb
cmp
into
lods
movsb
jl
and
mov
call
outsl
std
int
cld
stos
lahf
addr16
pop
fmul
cs
jb
xor
adc
icebp
jmp
xor
std
jge
cmp
lret
jp
push
lret
pop
and
inc
icebp
or
jecxz
in
je
mov
mov
out
arpl
mov
mov
idivb
sub
mov
jbe
mov
push
mov
sub
fwait
mov
sbb
repz
divb
push
js
mov
repnz
subl
dec
lods
shrl
xor
fbld
icebp
fxch
push
jns
mov
mov
mov
cmc
lods
mov
fld
nop
ds
aam
sub
push
mov
hlt
jbe
sub
xchg
or
aaa
lcall
lock
mov
test
imul
and
scas
xchg
pop
dec
rcrb
pop
scas
daa
out
stos
stc
cmpsl
push
dec
and
test
mov
fsubrp
repnz
outsb
lods
lret
cmp
insb
add
stos
fldenv
sbb
sbb
xor
mull
push
stos
das
push
test
dec
sti
pushf
and
pop
inc
xor
shlb
fs
scas
clc
pop
fnstenv
cmc
outsb
lret
rcll
out
cmp
into
cmc
push
cmp
and
bound
iret
mov
sbb
out
xor
subb
js
mov
dec
stc
xchg
dec
mov
test
pop
out
sti
imul
mov
cmpsl
ret
shll
inc
fbld
adc
shll
fwait
hlt
int3
xchg
lds
xchg
xor
roll
je
inc
xlat
xchg
or
pop
lea
and
ret
shll
or
cmpb
out
jg
pop
jnp
inc
vmaxps
sub
jnp
mov
out
inc
inc
mov
fbld
mov
into
sbb
inc
arpl
subb
mov
int3
jo
xor
cld
sub
pop
repnz
cmp
test
mov
mov
shr
out
fwait
dec
fs
push
mov
jns
jb
cmp
pop
pop
mov
std
daa
sahf
adc
cmp
gs
mov
insl
push
pop
aaa
faddp
cmp
push
mov
add
pop
cmp
es
loope
mov
fcompl
cmp
xchg
pop
xchg
pop
jecxz
outsl
in
popf
push
or
enter
iret
xor
scas
cmp
sub
cmp
sub
mov
mov
movsb
mov
mov
sbb
fadd
sahf
xor
cmc
pop
jno
jne
jb
outsl
inc
jae
stc
insb
movsl
leave
sbb
pop
dec
mov
sub
cmc
mov
mov
jae
das
mov
lcall
ja
sbbb
push
cs
jg
in
push
enter
mov
jg
mov
xchg
lds
pop
cmp
into
add
shl
int
or
cltd
pop
fidivs
clc
add
lahf
arpl
inc
mov
xor
push
pusha
push
lds
stc
inc
or
outsl
xchg
xchg
scas
aaa
inc
lock
mov
mov
push
pshufw
mov
sub
into
xchg
repz
cmp
mov
mov
lods
jbe
rcr
cmc
pop
loope
dec
and
add
cli
mov
fisubl
popf
inc
inc
outsb
into
movsl
ss
push
add
scas
sbb
jge
fs
cltd
xchg
iret
push
icebp
icebp
push
out
cmpsb
pop
in
mov
loope
dec
mov
inc
popa
lret
fistps
and
jne
push
pop
jo
sbb
mov
lods
lret
or
cs
test
sub
movsl
xchg
push
pop
xchg
int3
js
sub
dec
jmp
stc
mov
xchg
loopne
cmp
and
mov
mov
in
xchg
gs
mov
adc
test
scas
jg
adc
into
or
shlb
fnstenv
mov
cwtl
ror
mov
test
int3
ja
js
pop
xchg
addb
xor
add
std
and
fisubs
lret
in
add
jp
mov
fidivrs
jp
jno
fcomp
loope
mov
push
push
popf
mov
pushf
hlt
push
and
pop
repz
aaa
mov
cmc
ficoms
loope
and
pop
sbb
xchg
mov
inc
dec
dec
bnd
js
mov
sub
or
adc
popa
aas
cmp
xor
cmp
movsb
out
xchg
rcrb
push
cs
pop
mov
add
es
and
test
insb
and
push
lahf
push
fldenv
xchg
inc
mov
stc
sbb
jno
sub
pop
mov
mov
mov
cli
pusha
jbe
pop
adc
insb
adc
xor
movsb
xor
sbb
js
push
loop
fst
lcall
xchg
mov
or
sbb
pop
dec
scas
inc
pop
ss
testl
hlt
sbb
sbb
in
lea
test
pop
je
mov
movsl
mov
outsl
pop
xchg
push
sub
push
pushf
push
test
popf
add
pushf
mov
add
add
xchg
pusha
sbb
rcrb
xor
or
jo
push
ja
push
cld
sbb
inc
daa
xchg
sbb
mov
xchg
insl
rclb
inc
js
sbb
aad
dec
dec
mov
fistpll
insb
add
insl
enter
sbb
test
sub
push
into
frndint
mov
push
dec
mov
jmp
add
or
mov
jo
or
sub
dec
pop
dec
push
addl
jmp
dec
pop
sbb
aaa
fstl
jbe
push
xor
mul
testb
scas
jbe
push
in
pop
pop
addl
or
insl
outsl
cltd
inc
jp
inc
and
popf
cmp
push
add
sbb
into
mov
or
in
addr16
lods
faddp
inc
dec
xchg
xchg
pusha
rcl
pop
xor
enter
inc
or
inc
push
call
repnz
cmp
sbb
ret
xor
xchg
out
pop
add
imul
mulb
mov
sbb
cmp
sub
push
xchg
jae
lds
cmc
comiss
ret
sti
jge
cmp
and
push
pop
testl
pop
xchg
gs
test
fnstsw
test
push
mov
out
test
xor
lods
out
mov
cmp
leave
aaa
aas
and
pushf
popa
xchg
mov
mov
inc
mov
cmc
push
pop
sbbb
xor
cmpsb
push
adc
ds
adcb
popf
add
pop
flds
das
jns
pop
sbb
aas
mov
sbb
push
xchg
icebp
xlat
into
lds
sub
mov
inc
into
cmc
and
jl
test
dec
sbb
add
mov
dec
push
pop
out
pop
in
pusha
bound
int
decl
shrb
jo
shr
sub
mov
add
sub
sahf
cmp
add
mov
orl
jbe
sbb
dec
or
mov
loop
loop
adc
inc
push
dec
sti
bound
fidivrl
clc
rcll
xchg
loope
or
cmpsl
out
push
into
adc
push
dec
sarb
sbb
cmp
aam
mov
dec
pop
enter
xchg
fucomip
fldenv
mov
arpl
xchg
xchg
add
inc
in
xchg
jle
push
jp
addr16
outsl
lock
cld
in
loop
xlat
test
ljmp
movsb
sub
mov
xchg
cld
dec
outsb
pop
popf
lock
jmp
pop
cmp
shr
loope
push
sub
arpl
mov
mov
adc
adc
aad
popf
mov
inc
stos
push
les
shlb
jmp
mov
jbe
out
xor
call
neg
fmuls
sub
mulb
mov
mov
lock
dec
fldcw
mov
adc
les
push
or
dec
push
pop
mov
xchg
in
repnz
xor
loopne
or
inc
cmp
lods
aaa
xchg
xlat
cmp
xchg
sbb
in
stos
in
fidivrs
sbb
push
mov
movsb
repz
ret
or
lods
pop
clc
cmovns
insb
mov
inc
push
xor
aam
sbb
loope
jns
shrb
inc
fcomip
pop
incb
mov
inc
or
out
cltd
inc
fcompl
jo
adc
xor
lret
popf
cmpb
mov
ret
xor
lret
fbstp
fbstp
dec
sbb
in
add
stc
rorb
int3
inc
mov
aaa
jo
aas
sarl
test
mov
xchg
clc
xchg
sub
xchg
pop
dec
leave
mov
xor
les
scas
push
cwtl
hlt
jmp
xor
les
inc
aas
xor
add
lcall
xorl
aad
inc
pop
sbb
sbb
sbb
inc
lods
data16
mov
vmwrite
dec
jno
rcrl
shlb
faddl
sbb
outsb
ss
mov
dec
dec
mov
inc
leave
mov
xchg
cmp
out
je
mov
lea
lods
fnstenv
dec
or
outsl
adc
dec
lds
sub
call
leave
test
popf
cmp
hlt
push
fldenv
xchg
or
jl
cmp
push
les
mov
push
mov
subb
lret
push
push
int3
fyl2xp1
push
imul
or
mov
jne
cmp
in
jl
fmuls
rolb
rcll
notl
fcoml
dec
push
mov
into
mov
cmp
fdivrl
arpl
es
in
push
jne
int3
xchg
pop
adc
and
lods
push
inc
inc
or
mov
leave
mov
clc
add
and
into
cs
out
movsb
rolb
in
pop
in
cmp
dec
ret
pushf
xchg
fsubl
cli
inc
cmp
rcll
push
pop
mov
mov
push
xor
out
add
fisubrs
xor
inc
out
js
enter
xchg
xlat
jne
pop
gs
pop
dec
pop
add
push
jno
cld
fnstsw
shll
mov
popf
and
pop
fsubs
es
in
lahf
arpl
mov
cmp
popa
scas
mov
xor
lods
inc
sbb
mov
jne
pushf
enter
mov
sbb
dec
adc
sub
sub
scas
sbb
push
popf
push
mov
mov
test
fadds
jnp
pop
rcrb
pop
cmc
xchg
pushf
jg
add
push
iret
mov
push
mov
cmp
mov
pop
vpsubusw
push
jb
push
icebp
ljmp
jmp
aas
add
inc
dec
xor
in
sub
xorb
mov
cli
lock
push
mov
pop
mov
push
and
jnp
aas
mov
imul
adc
xchg
or
pop
xchg
sbb
jo
sahf
pop
push
rolb
leave
cmp
imul
mov
add
push
cmp
cli
push
xor
icebp
out
jge
inc
cltd
xorb
clc
mov
iret
add
mov
ja
mov
jnp
aad
sti
clc
dec
push
lret
cmp
fwait
pop
mov
jg
jbe
ja
cmp
pop
sub
fdivp
sti
mov
cmp
and
in
jae
xchg
pop
pop
xchg
fistpl
adc
sbb
jmp
dec
lret
dec
fucomp
mov
pop
xor
scas
sti
pop
ret
or
fistpl
cmc
and
shll
add
lds
out
inc
cmpl
test
and
push
fisubrl
mov
and
inc
xor
fsts
cmp
insl
xchg
pushf
or
sbb
stos
aas
inc
leave
jle
add
addb
pop
sbb
pop
dec
jnp
iret
scas
jp
cmp
pop
cmpsb
lock
cmp
repz
inc
inc
or
mov
repnz
fldcw
dec
xchg
pop
mov
push
mov
xchg
lea
aas
nop
cmpsl
leave
jb
adc
popf
xchg
sar
jge
fistpll
aad
fistpl
icebp
push
add
pop
lahf
xlat
xchg
cwtl
jle
sbbb
push
loope
sub
sbb
mov
mov
lahf
mov
pop
mov
inc
addr16
push
fdivl
mov
xchg
icebp
lcall
adc
xchg
xchg
sbb
xor
les
jp
test
or
fs
leave
outsb
xchg
lods
inc
notb
out
daa
lods
mov
push
dec
enter
pop
xchg
insl
cli
mov
push
jo
xchg
push
hlt
xchg
push
out
movsb
shl
ret
fiadds
clc
fucomip
jae
xor
sbb
mov
xor
pop
sahf
andb
and
pushf
jle
sbb
pop
out
mov
push
pop
mov
in
mov
test
out
ljmp
adc
jp
adc
mov
cmp
dec
cmp
lret
jns
popf
sbb
data16
data16
push
dec
or
imul
stos
jns
sbb
mov
fsubp
mov
cmpsl
cmp
and
mov
pop
adc
mov
push
cmpsl
mov
lret
sahf
sbb
cmp
test
ret
scas
push
dec
pushf
pop
or
mov
sub
adc
stc
mov
lret
push
lods
xchg
ljmp
rcr
jl
xchg
pop
mov
les
fwait
bound
mov
ja
pop
icebp
pop
xchg
out
daa
jecxz
call
push
shrl
jg
adc
or
loope
cmp
adc
inc
hlt
sti
rorl
insb
addr16
lods
pop
std
xorl
inc
sqrtps
jnp
shl
mov
mov
aam
ret
xor
jge
mov
cmp
cmp
dec
movsb
pushf
xor
adc
cmp
jp
sub
cwtl
inc
pop
adc
ljmp
popa
jae
ss
lds
cmp
xchg
mov
jnp
adc
xchg
sbb
cli
inc
clc
mov
cmp
xchg
push
cmpl
xor
cmpl
xchg
out
stos
pop
inc
ret
ss
xor
mov
xchg
inc
jl
fs
sub
call
xorl
mov
ljmp
mov
mov
add
jbe
mov
les
ja
add
out
hlt
and
loop
ficomps
ss
add
daa
xor
push
xchg
pop
sub
and
lods
loopne
dec
shlb
imul
rcr
and
sbb
test
int3
sahf
or
inc
iret
xchg
push
push
inc
out
mov
sbb
stos
push
push
and
sub
push
loope
jp
mov
rcll
mov
cmp
iret
lret
fldlg2
aam
and
les
cmpsb
sub
popa
mov
outsl
cwtl
xchg
aam
outsl
dec
bnd
xor
dec
mov
aas
dec
enter
cwtl
xor
mov
mov
out
mov
xchg
xchg
dec
or
rcl
push
jp
hlt
roll
mov
fucom
shrb
test
or
je
sbb
pop
sbb
mov
int3
mov
movb
xchg
mov
addl
test
stos
cmc
pop
daa
outsb
or
mov
mov
sbb
mov
jae
mov
int3
in
push
mov
push
jmp
lcall
adc
cmc
mov
mov
jns
sbb
movsb
lods
mov
pop
xor
lock
rcrb
or
stos
test
dec
jo
jp
or
pop
sarl
cs
out
test
and
jecxz
int3
imul
mov
out
cltd
xor
int
stos
cmpsb
inc
icebp
add
jl
das
jmp
roll
xchg
mov
pop
inc
inc
pop
mov
xchg
push
and
rorb
jmp
dec
cld
dec
repnz
fwait
std
testl
sti
and
in
xor
bound
shrl
push
and
jne
push
jmp
adc
mov
rcll
adc
data16
mov
jno
sub
fsub
xchg
mov
jge
daa
pop
xchg
out
in
add
movsb
cmp
fimuls
rcr
js
and
cld
add
insl
cli
loop
adc
xchg
cmpsb
cmp
xor
lcall
jb,pn
loop
add
push
aad
or
mov
fwait
xchg
xchg
fldt
daa
in
dec
subb
leave
cmp
es
pop
test
xor
push
cli
add
or
rcl
push
inc
dec
lcall
test
inc
into
call
cmp
or
push
xor
jno
pop
adc
jae
push
adc
das
xor
fbstp
mov
aad
push
xchg
sti
cmp
push
dec
fs
int3
into
cmp
cmp
mov
xchg
sbb
adc
int3
daa
fldt
sub
fwait
cmpsl
mov
sbbl
mov
fisubl
hlt
cmpsl
dec
aad
in
push
add
test
pusha
xor
ret
sub
xchg
lea
sbb
jno
add
test
mov
movsl
push
push
adc
test
sub
or
xchg
mov
lcall
xchg
stc
fdivl
adc
sub
js
stos
sub
jnp
sbb
push
mov
mov
out
mov
es
scas
fwait
sbb
sahf
and
ljmp
xchg
imul
cmpsb
cmp
dec
stos
arpl
sub
cld
or
lods
dec
mov
cld
sub
stos
test
or
arpl
ror
xorb
xlat
sub
repz
jno
repz
cmpb
lahf
divb
sub
inc
int3
xlat
inc
mov
cwtl
les
rcrl
sti
mov
shll
fistps
lret
jl
cmc
adc
jecxz
push
dec
add
test
pop
lock
cs
add
pop
adc
inc
mov
hlt
pop
scas
pop
add
sub
aaa
push
sub
aad
and
out
jbe
sbb
inc
mov
push
inc
inc
push
and
and
bound
ret
and
pop
ss
adc
icebp
imul
fldl
cmp
add
push
push
imul
sbb
lea
push
jp
shl
lcall
popa
or
mov
loop
out
sbb
jno
scas
jb
pop
outsb
fwait
cmp
push
push
adc
das
ss
mov
out
mov
jmp
pop
and
mov
pop
sahf
test
pop
lea
sahf
push
adc
pop
shll
jl
jbe
jae
out
hlt
outsb
dec
insl
push
push
and
fisubrs
or
je
fistpl
out
adc
mov
or
mov
hlt
push
movsb
fnstcw
pop
push
mov
loopne
add
dec
cltd
mov
imul
imul
jp
sti
pop
or
jge
adc
sub
cmp
scas
and
stos
adc
sti
dec
out
add
mov
sbb
cmp
imul
dec
inc
ljmp
adc
bound
jbe
pop
mov
mov
mov
adc
lret
sbb
xchg
test
pushf
idivl
push
fidivrl
in
inc
and
mov
je
sahf
or
scas
addr16
push
movsb
andl
jle
jmp
js
dec
mov
js
repz
enter
or
aas
and
cmc
notl
adc
enter
dec
mov
and
dec
nop
and
in
pushf
xor
jno
xor
ret
dec
cmp
inc
xchg
imul
push
iret
cmp
lods
loopne
sub
and
fscale
mov
rorb
mov
inc
add
and
stos
aad
les
je
pop
aaa
mov
out
aas
inc
sbb
iret
add
mov
mov
int3
fs
leave
sahf
pop
sahf
lods
push
lret
sbb
mov
xchg
cmovs
mov
insb
mov
je
in
fists
mov
lahf
fisubl
cmp
roll
jg
or
cld
ljmp
lods
xchg
fildl
loop
xchg
es
aas
xor
aam
jmp
jns
mov
jno
cltd
dec
in
ljmp
and
int
jne
sti
in
mov
jle
lahf
jmp
andb
mov
jb
xchg
pop
fwait
cmp
dec
xchg
inc
push
orb
in
idivb
pop
fists
mov
xchg
std
inc
push
cli
ret
fldl
js
pop
data16
mov
mov
sahf
pop
adc
pop
mov
lret
xchg
and
pop
xchg
ja
std
sti
pop
push
pushf
mov
jno
add
enter
test
mov
fcoms
cmp
lahf
adc
lret
xor
fstpt
jbe
ljmp
inc
mov
das
popf
lds
in
arpl
stos
movsb
pop
mov
repz
in
sbb
pop
jb
cmp
sub
aad
mov
jp
mov
shll
sub
lea
in
pop
pop
pop
aam
push
lret
out
and
insl
cmp
mov
pop
stos
sub
mov
hlt
insl
stc
enter
xor
scas
enter
cld
jecxz
jmp
jl
jge
mov
sbb
add
in
pop
mov
add
aas
sbb
push
push
cmp
psubq
pop
ds
fwait
push
mov
hlt
mov
mov
shll
push
pop
mov
cmp
mov
push
int3
cwtl
adc
cmp
inc
cli
imul
mov
stos
push
and
adc
cmp
daa
fisttps
lcall
pop
scas
dec
fmul
dec
xor
xor
aad
ja
int
mov
rolb
jo
jmp
cmpsl
or
cmp
jbe
shll
lds
jl
xor
lahf
sbb
loopne
shrb
push
mov
popa
adc
bound
mov
sbb
push
insl
xor
xlat
sub
leave
dec
or
vcvttps2dq
jae
jl
imul
pop
xchg
daa
pushf
and
sti
cmp
lahf
dec
ror
js
jle
mov
sub
int
or
fsubr
xchg
test
mov
lods
xor
testb
add
sub
adc
sub
dec
shrl
jae
dec
imul
jp
or
jo
or
fnstenv
inc
divb
cmpsl
incb
fcompl
push
mov
popf
loop
imul
imul
xor
loopne
push
comiss
sti
lods
pusha
movsb
push
and
repz
outsb
int
dec
std
lcall
dec
out
shlb
bound
daa
cmp
inc
xchg
xchg
xor
mov
sbb
lcall
and
push
mov
js
fcomps
mov
add
out
shl
mov
pop
push
seto
inc
into
dec
jb
dec
push
push
mov
mov
mov
in
aaa
pop
stos
mov
pusha
test
int3
lcall
mov
stos
or
pop
pop
lcall
nop
out
fldl
into
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
ret
jge
or
jp
mov
mov
add
add
inc
into
xor
add
pop
shl
and
dec
mov
mov
dec
cmp
cmp
fsubs
js
test
sub
fcmovnb
mov
or
int3
sub
out
imul
mov
mov
and
mov
shlb
test
mov
hlt
adc
std
mov
adc
and
scas
mov
and
sub
adc
cmovb
mov
and
cld
rcll
gs
pop
xchg
or
cli
cmp
xchg
push
adcl
dec
fs
loop
in
fldenv
arpl
adc
xorl
jb
addr16
adc
fdivrl
jo
mov
call
push
data16
aad
das
inc
sub
pop
lea
push
cmp
mov
mov
lret
aas
sbb
dec
xor
xor
mov
and
xorb
mov
test
aad
cmp
xchg
jle
xchg
mov
xorl
es
or
rcrb
bound
push
test
xchg
push
in
push
and
jns
inc
insb
outsb
jno
clc
push
clc
je
lock
das
jo
fiaddl
cs
out
adc
cmp
fdivs
jno
push
rclb
ret
mov
sbb
mov
mov
scas
xor
xor
out
aad
lahf
mov
or
popa
push
aas
adc
lcall
pop
mov
push
fidivl
xor
das
out
push
mov
xorl
incl
and
imul
shr
sbb
push
or
cmp
inc
lret
xchg
add
dec
jmp
sub
mov
out
int3
sbb
bound
pushf
imull
adc
adc
out
adc
into
inc
pop
dec
call
fisubs
mov
xchg
xchg
and
adc
pop
les
dec
add
mov
std
add
sbb
fucomip
pop
cmpsb
bound
lcall
mov
pusha
loop
adc
std
sbb
shlb
sbb
or
jbe
jnp
and
rorb
fstpt
mov
insb
pusha
push
push
popa
mov
ss
xchg
jle
ja
xchg
in
sub
push
sarl
and
out
into
sub
out
popa
in
aas
insl
ljmp
das
divl
inc
add
mov
mov
std
and
std
sub
js
adc
sbb
cmc
jecxz
mov
movsb
adc
pushf
addl
jo
jnp
mov
fs
sub
xor
loop
or
inc
push
cld
clc
mov
iret
int
rcrb
std
dec
fs
jmp
aas
std
les
lea
mov
xor
test
jmp
into
addl
cld
sub
es
xor
aam
sahf
jo
stos
mov
jg
xor
xor
pop
dec
addr16
push
dec
fwait
and
hlt
aas
adc
out
pop
xor
sub
sarw
xor
sbb
mov
add
push
jns
scas
lods
sub
mov
popf
mov
cwtl
mov
add
sti
dec
aam
jb
and
cmp
xchg
das
inc
stos
negl
jg
cmpsb
pop
in
fnclex
pushf
cmc
iret
jbe
nop
ljmp
sbb
xor
jne
push
rolb
mov
mov
push
push
mov
xchg
call
idiv
int3
inc
add
xchg
scas
pop
cmc
das
mov
aaa
mov
push
es
push
addl
out
lahf
or
and
insl
mov
test
inc
push
fwait
sbb
inc
mov
jae
jns
arpl
sbb
lcall
push
push
sbb
inc
pop
inc
cmpb
sbb
and
outsb
mov
lcall
jle
call
inc
mov
or
and
add
dec
daa
sbb
add
adc
mov
add
ja
icebp
mov
es
pop
dec
xchg
and
inc
dec
clc
cmp
push
push
in
xor
popa
filds
ja
mov
les
out
xchg
ja
and
ljmp
lds
pusha
es
div
fdivrs
ds
imul
lret
or
sub
fistl
lock
call
jno
ret
jl
adc
push
push
xchg
je
xor
dec
loop
dec
inc
test
mov
mov
dec
outsl
sub
dec
dec
decb
mov
mov
mov
xchg
fisttps
xchg
pop
sahf
es
int3
cmpl
sub
xchg
repz
mov
and
jmp
stos
jno
add
hlt
xor
outsl
lret
test
push
mov
stc
insl
insb
int
push
cmp
shl
ljmp
lods
andl
mov
jo
sub
daa
hlt
sbb
push
into
testl
ret
sub
movsb
lahf
jae
mov
dec
rcrb
lahf
les
jno
or
test
inc
cltd
stc
nop
sbb
sub
xchg
ss
mov
push
adc
pop
xchg
mov
and
or
sarb
lds
inc
or
xchg
popf
cmp
xchg
movsl
mov
mov
arpl
push
cmp
rcll
movsl
aaa
mov
xchg
mov
xchg
mov
popa
add
fadds
in
adc
jae
and
incl
enter
dec
ja
mov
cld
add
cmpsb
or
movsb
sbb
int3
dec
adc
push
push
mov
cld
mov
rcr
daa
in
cmpl
ficomps
dec
pop
rcll
stos
push
mov
jl
fistps
xchg
je
xchg
or
dec
setge
adc
dec
imul
pop
xor
sbb
cmp
push
adc
ret
adc
jae
sbb
js
in
punpckhwd
pop
stos
xchg
adc
movsl
dec
ret
mov
dec
ret
arpl
in
pop
and
cmc
aas
out
out
cmp
mov
add
cmpsb
sahf
lds
xor
mov
mov
dec
lahf
sub
movsb
pop
mov
fiaddl
push
adc
mov
andl
xchg
call
enter
pop
xchg
popa
les
adc
cmp
and
out
mov
cmp
test
add
outsb
xor
fisubs
movsb
pop
lcall
je
cmc
psubsb
ftst
xor
adc
dec
mov
lock
xchg
mov
xlat
and
xor
xor
scas
mov
pop
jne
ja
dec
add
sarb
sub
add
lea
add
filds
stos
std
sar
in
ret
mov
push
cmp
pop
xchg
out
push
cmpsl
arpl
mov
xchg
insb
popf
and
jmp
cmp
test
daa
push
int3
movsb
ljmp
add
inc
cwtl
inc
mov
jecxz
es
pop
stos
or
arpl
dec
jp
mov
mov
fwait
cmc
repz
sub
mov
inc
and
pop
shrb
mov
mov
jle
movsb
xchg
dec
std
enter
pop
push
daa
pop
lahf
outsl
movsl
mov
mov
push
jp
sub
cmp
je
xchg
pop
pop
cmp
mov
data16
scas
and
movsl
shl
imul
icebp
dec
out
xlat
leave
fmull
sub
in
leave
push
pop
ja
jo
repz
cmpsl
inc
fdiv
outsb
or
mov
sub
sub
popf
addr16
popf
rcrb
cmp
xchg
sarb
xor
js
mov
mov
pop
mov
dec
xchg
and
ds
sub
sbb
test
gs
sbb
adc
movsl
mov
adc
ds
pop
mov
jle
inc
jecxz
fstps
jno
push
outsl
ret
fcmovnbe
or
mov
sbb
pop
pop
iret
push
insb
sbb
jnp
or
adc
outsl
xchg
lahf
mov
mov
call
js
or
cmp
xchg
mov
sbb
cmp
jne
lock
cltd
inc
mov
movsl
out
ret
mov
pusha
xor
sbb
push
fistpll
cltd
dec
int3
push
sbb
movsb
fwait
imul
mov
out
outsb
jb
mov
shrb
pop
icebp
shrl
pop
sub
mov
mov
sahf
adc
pop
sqrtps
pop
imul
pop
aam
daa
lock
sbb
sbb
push
cld
push
xchg
dec
mulb
repz
xchg
push
sbb
mov
adc
mov
xor
jl
sbb
ss
push
imulb
popf
sbb
add
push
es
inc
and
mov
cmp
push
lret
add
int
xchg
inc
jb
adc
lock
sbb
pop
pop
icebp
add
push
mov
xor
mov
sbb
or
lcall
cmpsl
mov
xor
mov
js
sub
lret
mov
adc
out
in
push
inc
sub
adc
movsl
int
sub
lods
pushf
push
repz
push
inc
out
js
push
xor
cmp
test
ds
mov
lcall
call
inc
lea
ja
sub
aam
pop
andb
sub
clc
sbb
or
out
outsb
adc
jp
pop
mov
dec
in
repnz
lahf
or
fsubrs
xchg
or
outsl
mov
daa
out
les
js
test
scas
sbb
adc
xchg
ret
dec
and
cmp
in
push
cmp
push
push
mov
aam
jecxz
pop
fstpl
ds
aaa
pop
lods
mov
mov
pop
lods
xor
pusha
lock
lods
mov
call
push
adc
mov
loopne
or
jns
fsubl
out
sbbl
mov
sarb
sbb
mov
mov
mov
scas
movsb
fldenv
push
and
cmp
add
out
pop
outsb
xchg
stos
dec
mov
outsb
jo
jmp
mov
mov
iret
jecxz
mov
in
sbb
inc
mov
andb
pop
int
shl
jmp
hlt
icebp
in
xor
mov
mov
stc
jp
inc
push
and
fiaddl
or
add
addl
cs
or
lahf
push
mov
outsb
aas
in
nop
imul
sub
add
insl
xchg
mov
loopne
push
adc
sub
mov
jne
dec
or
xchg
cmp
cli
add
push
popf
rol
mov
loope
icebp
pop
ljmp
mov
hlt
aam
je
cmp
and
pop
sbb
cmpsl
imul
lods
lock
inc
scas
pop
test
repz
rclb
aad
loopne
jle
pop
mov
aad
pop
insl
push
mov
insb
cmp
mov
test
scas
sbb
shll
pop
pop
sub
in
test
cld
push
ljmp
shl
mov
sbb
xchg
pop
clc
push
rcrb
in
into
testl
rorl
loope
lods
pop
xchg
ret
pop
mov
inc
xor
lahf
mov
mov
test
pop
scas
xchg
jle
icebp
mov
fisubrl
imul
lock
out
leave
sub
adc
xchg
lock
fbld
shrl
fsubs
jae
stc
and
les
xor
pop
xchg
lea
sbb
loope
mov
jmp
sub
js
nop
xchg
enter
xor
mov
popa
in
lods
cwtl
mov
cwtl
xor
test
mov
pop
into
jl
ja
popa
addr16
sub
or
mov
in
popa
push
in
fldenv
addl
aas
stc
icebp
mov
jg
mov
xlat
loope
int
dec
dec
aas
mov
pop
sbb
vmread
jg
leave
cmp
sub
inc
adc
lods
sub
movsl
fimull
aas
ds
xor
mov
and
add
test
test
xchg
or
cld
sbb
xor
cmpsl
enter
dec
push
int3
repz
jno
ds
and
jl
cmc
popa
hlt
ficompl
insb
lahf
cmp
or
shr
aas
adc
addr16
std
dec
in
ja
jl
mov
add
lock
cmp
pop
ret
or
or
mov
movsl
mov
or
int3
jl
cmpsl
mov
add
pop
insl
scas
mov
jecxz
mov
xorl
imul
xchg
dec
xor
and
mov
mov
xchg
ret
std
loope
mull
pop
ds
push
mov
in
sbb
rcll
add
aad
xchg
pop
jno
xchg
aas
leave
pop
xchg
push
enter
mov
prefetch
test
adc
sub
xchg
enter
mov
out
xchg
push
int3
adc
push
mov
addr16
iret
mov
cmp
mov
jp
ret
mov
int
jl
sbb
jmp
pop
leave
or
nop
sbb
stos
push
data16
inc
xor
cmp
scas
sub
sti
jns
insl
outsl
xor
cmpsl
dec
cmp
push
jl
stc
jns
push
inc
and
arpl
fdivrl
push
xchg
cmpsl
addb
jge
je
push
mov
or
cld
outsl
inc
je
imul
imul
jae
or
adc
arpl
ss
mov
cmp
lea
arpl
js
call
ljmp
and
filds
pop
mov
mov
dec
aam
das
xchg
in
nop
cmp
shr
notl
mov
out
or
lock
cmp
cmc
add
sbb
cltd
and
mov
push
lahf
adc
sbb
popf
jo
or
sbb
pop
pop
inc
jl
xchg
nop
sub
pop
sub
cltd
or
cmc
cmp
pop
jmp
dec
fxch
divl
dec
mov
imul
cmp
icebp
pop
xor
aaa
fwait
inc
andl
sarb
lock
insb
pushf
mov
and
jo
pop
fisttpl
popf
jle
sub
and
mov
sub
clc
cmpsb
test
adc
ds
mov
fidivrs
int
sbb
stc
xchg
push
adc
in
push
and
xchg
and
pop
or
ds
sbb
in
int
adc
push
aam
sbb
jne
ret
pop
into
arpl
fucomip
mov
xlat
sti
cmp
mov
repz
aam
repz
imul
insl
outsb
into
out
cmpsb
or
addr16
stos
ja
jl
out
dec
jns
cmp
inc
mov
in
and
cwtl
into
mov
test
mov
ljmp
popf
xor
pop
into
and
sub
jnp
xchg
imul
out
or
xchg
rclb
inc
jno
icebp
sahf
cmp
fwait
adc
lea
sti
mov
mov
push
jmp
insb
add
dec
sub
mov
push
leave
push
sub
pushw
mov
repz
addl
inc
xchg
es
sahf
adc
ds
andl
mov
sarb
jge
mov
xor
push
push
popf
and
sub
aad
pop
loop
mov
xor
mov
hlt
jb
cli
xlat
mov
xchg
clc
cmc
inc
adcl
inc
mov
daa
pop
mov
imul
aad
rclb
out
in
enter
xchg
adc
xorb
movsl
mov
xor
inc
mov
pop
jmp
cwtl
push
cmp
aas
out
imul
insb
dec
stc
push
imul
mov
push
out
mov
lret
mov
pop
popf
pop
add
movsl
dec
add
or
xchg
lods
sub
pusha
lds
mov
and
rolb
or
movsl
ljmp
push
mov
mov
sbb
nop
dec
mov
mov
xor
shlb
cmp
add
add
cmc
xor
cmpsl
inc
push
mov
jp
add
nop
aaa
out
ss
stos
mov
and
jo
unpcklps
lock
jbe
scas
xor
test
lret
andb
sar
mov
and
shrl
repz
inc
ljmp
jnp
outsl
ds
jae
stc
mov
fwait
mov
push
scas
sti
pop
mov
sti
dec
or
inc
cmpsb
xchg
xchg
push
and
adc
fdivrp
and
hlt
inc
mov
sbb
and
mov
dec
inc
pop
cmp
out
ljmp
push
aaa
outsl
lea
pop
gs
inc
and
jp
icebp
push
aam
mov
adc
cmp
push
popa
rcr
jo
lret
push
adc
inc
add
movsl
pop
gs
fnstcw
into
lcall
test
es
in
push
fmuls
jnp
pop
lret
adc
in
ret
xchg
push
out
or
xchg
sub
js
es
lods
xchg
fistps
mov
pop
mov
mov
sub
or
and
int
std
in
fdiv
pop
pusha
cltd
leavew
test
aad
jp
outsl
cmp
mov
add
fistl
lds
sarl
jg
dec
mov
insl
notl
sti
jne
andb
pop
repnz
xchg
dec
jns
lods
and
pop
gs
adc
and
or
push
mov
stos
or
sarb
imul
pop
in
bnd
mov
mov
stos
lods
test
sub
insb
test
or
movl
in
call
pop
outsb
cmc
adc
dec
test
jns
sub
add
aas
jo
sbb
and
scas
mov
jecxz
inc
adc
bound
xor
ds
fnsave
leave
fcmovbe
mov
fwait
data16
or
ret
push
inc
dec
push
xchg
repnz
into
adc
shll
scas
xlat
jmp
jo
xchg
lcall
lahf
lock
loop
loopne
lret
sbb
and
les
js
jg
adcl
add
fdivs
mov
inc
dec
int3
ds
scas
into
inc
push
pop
repz
lods
sub
outsb
and
and
mov
lods
psrlq
mov
pushf
push
inc
aaa
cltd
dec
gs
lea
fucomp
inc
ret
xchg
addr16
sti
ret
xor
das
push
mov
nop
icebp
sbb
mov
clc
pusha
inc
les
dec
cmp
mov
push
pop
mov
push
cld
iret
cmpsb
loop
add
mov
jecxz
incl
fnstenv
and
mov
incb
scas
or
cmp
cltd
lds
and
dec
adc
loope
iret
lcall
movsl
or
push
jns
cmc
xchg
leave
lods
dec
xchg
mov
ret
add
inc
mov
xchg
lahf
or
pop
lea
sub
push
add
inc
push
in
mov
das
inc
fwait
cmpl
cmp
cmpsl
into
hlt
xor
lods
mov
dec
push
sub
pusha
sbb
jbe
push
xchg
adc
ljmp
int
loopne
xor
xchg
adc
je
test
scas
push
xchg
or
pop
sbb
scas
sahf
mov
cs
xor
pop
lcall
pop
into
loopne
out
xor
std
lds
adc
je
cltd
fisttpl
adc
in
push
out
adcl
sbb
mov
rdmsr
not
sti
jle
inc
mov
std
cmp
mov
test
fwait
dec
lcall
and
adc
pop
sub
or
cltd
iret
push
aas
mov
sub
shrl
call
sub
cld
int3
std
inc
jge
ljmp
push
lds
mov
add
lods
rolb
repnz
adc
push
push
icebp
outsl
push
mov
pop
add
sub
imul
dec
xor
adc
mov
push
jo
clc
leave
lcall
call
and
test
filds
aam
adc
outsb
test
fistpl
cwtl
andb
insl
sub
rcr
shlb
rcrl
idivl
jo
xor
stos
cmp
cli
test
xchg
pcmpeqb
and
push
fnstsw
jp
push
lret
and
cmp
je
insl
add
push
cmpsl
mov
mov
sbb
pop
xorl
cmp
cmp
les
dec
pop
sbb
lcall
sub
lcall
lahf
sub
scas
hlt
inc
pop
test
call
and
call
or
jge
jnp
movsl
stc
cmpsb
xor
stos
pop
loope
adc
adc
xor
xor
jnp
xchg
sub
dec
cmp
ljmp
andb
ljmp
stos
pushf
scas
inc
push
mov
sbb
mov
jle
push
push
insl
loope
push
sti
adc
sbbb
std
mov
cltd
sti
jns
jns
dec
test
xor
out
loope
pop
jle
aam
loope
outsl
cmp
sbbb
int3
pop
dec
xor
pop
ficompl
movsl
and
push
cltd
inc
nop
data16
cmpsb
xchg
imul
mov
in
push
movsb
in
cli
sbb
mov
push
pop
jbe
and
adc
or
test
dec
jp
lahf
into
fstl
jecxz
pop
or
pop
nop
scas
rol
jmp
clc
stos
xchg
or
adc
mov
push
inc
ficoml
imul
lcall
dec
pop
test
cmp
xor
scas
out
bound
loopne
mov
sbb
ja
mov
in
into
cs
inc
stos
mov
mov
lods
cltd
data16
sub
outsb
out
cld
jnp
adc
jmp
xchg
sahf
cmp
ljmp
shll
sbbl
test
cltd
das
jecxz
inc
aad
cmpsb
ret
movb
ja
rcrb
cld
cmp
aam
xchg
nop
cli
xchg
pop
sub
and
cmp
fimull
jecxz,pn
movsb
push
in
mov
es
and
pop
filds
push
xor
mov
mov
jns
push
mov
or
and
jl
out
mov
jge
and
pop
xor
in
pop
dec
mov
pop
xchg
aaa
stos
dec
sahf
pop
mov
nop
shl
and
cld
iret
in
mov
jb
xor
push
xor
mov
adc
adcl
hlt
dec
mov
lret
adc
and
push
icebp
out
outsb
push
mov
push
fiaddl
and
mov
jno
shrl
pop
aam
sub
cwtl
dec
imul
xchg
hlt
or
sbb
adc
stos
mov
add
pop
daa
push
rcl
pushl
je
and
popf
xor
scas
push
mov
jg
push
push
cli
je
mov
mov
push
fcom
aaa
mov
xchg
sbb
or
sub
outsl
lea
inc
and
test
fcoml
xor
fiadds
dec
inc
adc
push
js
jo
sarl
clc
xchg
jb
mov
test
xchg
imul
jp
in
loop
lcall
push
aam
xor
ljmp
sbb
test
or
in
fndisi(8087
mov
pusha
pop
aad
daa
sbb
add
arpl
push
jge
sbb
mov
sub
and
aam
or
cwtl
xchg
pop
pop
push
dec
rcr
push
out
insl
js
push
inc
or
or
inc
gs
enter
notl
dec
jnp
ror
lods
cmp
mov
mov
mov
or
negl
add
cli
data16
and
lcall
loopne
jbe
or
xor
aas
jp
mov
mov
js
sahf
int
add
lock
scas
dec
lods
xor
sbb
pop
mov
pop
cmc
mov
ffreep
pop
ljmp
outsb
divb
jb
outsl
imulb
xor
mov
arpl
mov
xchg
daa
test
adc
insb
out
lret
jb
xchg
mov
inc
int
imul
dec
jl
adc
cltd
dec
jne
mov
xchg
push
lcall
jl
movl
xor
sbb
push
push
movsb
pop
movsl
mov
mov
xor
and
jb
sbb
mov
pop
rorb
add
mov
stos
jl
sub
int
cmp
pusha
jne
in
jne
mov
jl
rorl
and
fcomps
add
stos
nop
mov
lcall
cltd
test
loopne
std
push
repnz
rcrl
nop
xchg
mov
cs
nop
test
adc
push
push
xchg
mov
inc
fdivrs
mov
daa
or
jbe
jg
xor
xchg
loopne,pt
adc
sbb
insl
movsl
dec
les
push
cld
push
or
sub
daa
push
stos
inc
adc
or
sub
fstpt
stos
add
cmp
sbb
inc
data16
jnp
pop
sbb
fisttpll
idivl
fs
xchg
xchg
fwait
mov
test
jbe
push
in
aad
pop
mov
fstpt
imul
jnp
stos
ss
out
jp
sbb
fdiv
repz
fidivrs
adc
or
adc
pop
cmp
pop
lcall
adc
xor
mov
stc
ljmp
jbe
jmp
mov
addb
jae
pop
popa
dec
jno
repz
int3
movsb
cmp
jbe
jmp
cmp
insl
xchg
gs
inc
mov
hlt
js
jns
imul
nop
out
hlt
push
sbb
jmp
dec
inc
push
cwtl
lcall
adc
pusha
lret
jbe
enter
push
pushf
daa
in
fcom
int3
cmp
insl
cmp
lret
xchg
add
jns
scas
mov
xlat
sarl
cltd
stos
push
cmp
add
cwtl
lds
and
cmc
or
push
clc
xor
adc
xlat
lea
addb
mov
sub
xchg
das
jbe
dec
sarb
xor
add
sbb
out
and
shl
sub
mov
add
ljmp
dec
xorl
leave
add
mov
mov
xlat
dec
jp,pt
push
es
sbb
out
mov
or
mov
mov
ja
adc
pop
jo
inc
ret
cmp
decl
pop
or
stos
and
lods
sub
xchg
pop
mov
into
push
fldt
outsl
push
mov
je
lock
ret
push
ljmp
pop
addl
insb
cltd
ret
sbb
sub
mov
das
mov
ss
adc
dec
push
mov
test
push
mov
in
pmulhuw
inc
jp
jecxz
mov
insb
in
divb
dec
sub
add
mov
jp
shrl
sub
dec
cmp
and
stos
mov
insl
push
jecxz
outsb
adc
sub
mov
push
sbbb
pusha
jns
int
movsb
aas
imul
and
jmp
rorl
negl
lret
dec
es
dec
lods
xchg
flds
push
das
or
imul
dec
pop
mov
jmp
sbb
adc
leave
sub
cmovo
rcl
jns
pop
pop
je
imul
pop
test
adc
data16
insb
adc
mov
jle
hlt
clc
jle
sbbl
xor
mov
push
cmpsb
popa
cmp
mov
call
fisubs
mov
xchg
dec
leave
push
jno
dec
push
les
movsl
mov
int3
xchg
popa
insb
jno,pt
int3
in
and
push
fiadds
xor
push
stos
cmp
jmp
rorb
bound
mov
mov
add
dec
fidivrl
sub
and
bound
sbb
lret
fistl
repz
cmp
sbb
mov
inc
push
punpckhdq
nop
loope
push
pop
xor
pusha
sahf
roll
and
xor
push
pop
add
mov
daa
dec
push
push
add
xchg
and
mov
mov
cmp
jae
lahf
jp
mov
loop
hlt
lret
sahf
shrb
jno
or
jp
xor
pushf
loopne
xchg
dec
push
pop
jb
cmp
xor
into
add
cli
sahf
or
fcompl
fldcw
xchg
pop
sub
inc
fs
pop
mov
mov
push
test
mov
push
xor
push
into
jp
and
test
xchg
xchg
orl
jbe
jp
mov
push
sti
inc
dec
jns
mov
aaa
mov
mov
cmpl
sub
movsb
nop
xchg
dec
push
xor
sbb
nop
out
ret
adc
or
lret
pop
dec
push
pop
push
push
lods
and
jp
sbb
addr16
xchg
cli
psubd
jo
inc
or
test
sub
and
fisubrs
push
fadds
frstor
inc
sarl
jl
hlt
loop
mov
sbb
sub
mov
inc
xchg
outsl
arpl
add
imul
mov
adc
pop
repnz
out
dec
popa
adcl
and
mov
fwait
pushf
sub
add
dec
int
sbb
out
inc
or
enter
mov
aas
sahf
sub
mov
jp
add
xchg
cld
cwtl
ret
inc
leave
add
inc
cwtl
jae
pushw
ds
xorb
cmp
adc
dec
aad
les
inc
sub
pop
ret
or
sbb
pop
ljmp
mov
fidivl
or
sbb
jmp
shl
sub
sbb
push
negl
pushf
pop
mov
dec
mov
nop
sahf
lret
hlt
in
inc
and
jns
or
lret
push
add
xor
ret
leave
js
push
les
scas
fiadds
iret
jp
lods
and
stos
pusha
pop
or
ret
clc
cli
popf
enter
fistl
adc
and
pop
or
lock
add
insl
aaa
and
mov
pop
imul
jle
adc
sbb
es
and
jnp
mov
cld
aas
cltd
inc
popf
ljmp
scas
pop
or
jge
xor
adc
sbb
loopne
push
bound
lock
jnp
add
jge
mov
rol
out
divb
aaa
mov
repnz
inc
mov
sti
xor
loope
enter
mov
xor
xor
pop
fxch
jecxz
push
xor
mov
adc
cmp
dec
ja
and
cld
inc
mov
xor
push
inc
sbbl
into
mov
sti
out
xchg
popf
mov
into
in
test
ret
sbb
push
data16
pop
das
push
ret
in
cmpb
adc
dec
add
cmp
or
mov
fsubs
popa
xor
jmp
pop
mov
sbb
mov
cmpsb
dec
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fldcw
movsb
add
or
jp
leave
sbb
jns
and
mov
mov
mov
xor
mov
lcall
cli
repnz
xor
dec
scas
lods
fcmovb
push
mov
outsb
mov
roll
xchg
icebp
adc
add
pop
imul
pop
sub
test
mov
cmp
je
fiaddl
sbb
dec
fcmovnb
pop
mov
dec
cli
pop
in
aas
mov
je
cld
push
arpl
fldl
cld
push
sub
xor
push
ret
rclb
jp
rorl
leave
sbb
mov
push
cmp
imul
push
ds
dec
and
cs
sbb
dec
cmpsl
ljmp
add
fadds
dec
jnp
movsl
add
aad
jecxz
or
fwait
addr16
fs
jno
test
insl
sub
mov
arpl
pop
movb
jge
popf
fnstenv
mov
inc
gs
aam
mov
sub
inc
aaa
push
mov
push
leave
into
jecxz
dec
ss
inc
popa
dec
ds
and
cli
jmp
mov
dec
sbb
adc
and
mov
adc
cmp
out
inc
bnd
xchg
cmp
aad
stos
push
iret
scas
mov
xlat
or
push
movsb
mov
adc
or
and
andl
jp
mov
cltd
leave
out
shll
repnz
inc
scas
jbe
sahf
pusha
dec
xchg
iret
jmp
dec
pushf
sbb
pushf
jb
mov
or
lret
sbb
pop
add
cmp
sbb
push
jmp
int
mov
iret
stc
mov
mov
pop
sbb
fstl
cmp
test
jb
in
xor
mov
xchg
adc
cmp
callw
ret
or
jb
push
pusha
pop
aad
adc
dec
call
orl
jecxz
mov
push
aas
jae
cmp
jb
sub
sbb
mov
xchg
add
fnstsw
sub
sub
jns
sbb
or
pop
sub
sbb
sub
sub
jmp
adc
xchg
sbb
movsl
rcrb
test
sub
hlt
imul
mov
push
in
or
push
cltd
ret
stc
sbb
out
adc
jmp
es
jmp
mov
les
add
cmp
inc
adc
enter
add
push
int
jo
ret
icebp
jb
ss
outsl
ss
fldt
lret
lahf
lods
aad
imulb
lret
cs
sbb
inc
jmp
mov
cli
pop
mov
in
add
push
test
xor
dec
add
test
lods
orl
idivb
cmp
sbb
popf
inc
fadd
xor
pusha
rcll
lds
xchg
ljmp
cmp
mov
call
movsb
mov
js
push
mov
movsb
out
cmpb
cmova
xorl
dec
push
add
or
fs
in
sbb
out
js
test
test
test
ret
sti
jg
and
add
sbb
aad
lods
orl
sub
and
test
popa
pandn
fwait
and
mov
rcll
in
inc
aad
and
push
call
inc
les
sub
leave
fcmovnbe
int
out
jo
addl
sub
sub
lods
push
xchg
lds
test
lods
add
stos
adc
outsb
inc
push
sahf
js
stc
pop
pop
add
push
frstor
push
adc
or
push
test
push
data16
and
sbb
mov
dec
mov
xchg
add
cs
mov
mov
or
mov
or
imul
mov
lret
je
push
jge
jae
out
pop
gs
cmp
mov
dec
data16
pop
jns
pop
stc
es
inc
sub
ja
int
sub
ljmp
test
repnz
or
out
inc
loop
xor
mov
xlat
mov
pop
mov
sar
or
loop
lods
sub
sbbl
or
in
sbb
sbb
sub
cltd
cmp
sub
mov
jno
mov
orl
fdivr
mov
pop
sbb
adc
call
or
int
sub
subl
mov
jbe
lds
mov
pop
mov
cmpl
sbb
adc
mov
popf
xor
shrb
mov
xchg
imul
jnp
fistps
xor
xlat
mov
andb
xor
in
inc
dec
push
add
and
pop
or
pop
add
aaa
xlat
push
clc
mov
dec
add
fimuls
xchg
hlt
inc
rolb
push
pop
adc
fsubs
push
loop
pop
pop
or
dec
subb
inc
sub
scas
aad
rcrb
jnp
jle
and
popf
incl
xor
push
orb
fcom
sub
cli
jns
dec
ret
mov
mov
sub
js
inc
mov
arpl
and
sbb
stc
jmp
or
ret
pusha
or
xor
js
jae
sahf
js
js
mov
mov
lea
test
fistpl
loopne
add
jle
daa
in
dec
push
dec
adc
sbb
cmp
arpl
frstpm(287
mov
adc
ret
ret
mov
mov
jg
mov
cmc
push
mov
push
stos
xchg
data16
rolb
pop
jb
in
mov
loop
pop
imul
repz
in
imul
or
dec
stos
jnp
movsb
xchg
mov
adc
mov
ds
add
movl
push
adc
push
dec
test
and
mov
pushf
ds
push
adc
loop
movq
fistps
je
out
push
adc
repz
mov
imul
gs
sub
aad
xchg
ljmp
xlat
jne
jnp
ret
push
sti
push
ss
mov
fldcw
mov
xchg
jbe
mov
xchg
lcall
jo
icebp
xchg
sub
std
mov
xor
add
lret
mov
sub
sbb
icebp
jns
andb
add
add
mov
mov
mov
pop
insb
cwtl
mov
pop
sbb
sub
cmpsl
icebp
xor
xbegin
xchg
addl
sahf
jl
mov
jne
pushf
mov
mov
inc
push
shrb
jo
stc
xor
xor
das
imul
mov
dec
aaa
lret
pop
fdivrs
daa
fidivs
and
out
mov
inc
lcall
jl
and
das
sbb
scas
fs
mov
inc
insb
out
bound
loopne
jge
clc
jns
daa
cmpsb
in
ja
pop
fldcw
loopne
or
sbb
push
fcmovnu
fwait
daa
imul
lret
sbb
outsb
sub
and
push
rolb
pop
inc
xchg
dec
xchg
jge
inc
mov
jbe
pop
and
fcmovnu
fcom
fwait
dec
in
fcmove
in
dec
rorb
leave
push
or
inc
popa
lods
mov
test
dec
push
scas
mov
mov
and
outsl
jb
ljmp
cs
mov
std
or
jle
ljmp
pop
push
jle
xchg
xchg
lcall
cltd
loope
int
jns
ja
pop
mov
mov
dec
xchg
mov
dec
in
lods
das
and
xor
outsl
adc
xorb
js
in
xor
mov
stos
adc
xchg
xor
mov
in
outsl
cwtl
leave
push
pop
mov
test
movsl
push
cli
lods
hlt
inc
mov
sub
sub
divb
shl
push
int3
mov
into
clc
sub
jo
movsb
addb
arpl
mov
push
in
push
addb
push
xchg
enter
pushf
xor
xorl
fdivr
pop
repnz
jb
pop
loopne
jns
test
fisttpll
test
mov
jp
push
xchg
dec
jle
inc
stos
and
mov
dec
in
mov
or
adc
sbb
ds
pop
jae
dec
jge
es
pop
icebp
cld
popa
pop
loope
mov
aaa
mov
jbe
cs
les
sahf
into
push
out
into
mul
mov
mov
lea
ror
fcmovu
push
jge
loope
add
mov
scas
jb
xor
xchg
std
and
push
add
lret
icebp
mov
push
out
shl
mov
jg
jmp
in
adc
cmpsl
mov
arpl
out
test
push
inc
dec
ds
in
jns
insb
out
shll
lcall
push
adc
out
xor
xor
mov
push
adc
pop
dec
leave
adc
dec
and
ja
cmp
sti
loopne
xchg
dec
sbb
test
sub
fidivrs
jne
xchg
sub
lahf
lret
dec
jne
out
sub
mov
xchg
pop
test
mov
repnz
test
mov
fs
mov
in
or
sbbl
mov
je
fistpl
test
fstpl
pop
stc
cs
cmp
pop
inc
int3
test
stc
lcall
xchg
clc
add
push
xor
dec
push
popa
jns
loope
add
pop
pushf
loop
and
cmp
adc
mov
mov
clc
mov
cmp
xchg
inc
pop
cmpsb
mov
xor
mov
into
add
dec
in
add
push
push
pop
lahf
sbb
repz
sub
sub
sub
imul
push
push
repnz
dec
mov
fsubr
cmp
test
push
int3
cmc
adc
and
test
xchg
add
mov
mov
test
mov
arpl
sbb
lods
cmp
imul
leave
imul
mov
add
inc
int
fucom
fstps
in
je
mov
iret
mov
and
cmp
int3
insb
mov
fstpt
repz
dec
pop
and
jno
ret
or
push
push
sahf
or
add
test
addb
aaa
xor
mov
mov
jo
pop
addr16
cli
sub
nop
add
lea
inc
repz
pop
pusha
pop
dec
cmp
rorb
xchg
lea
aaa
call
int
jns
in
or
pop
mov
ja
push
and
fcoml
ss
imul
bound
pop
mov
pusha
or
das
scas
das
loope
jae
cld
xchg
divl
sbb
push
inc
mov
in
xchg
push
into
iret
iret
lds
test
dec
xchg
ret
jge
adc
push
or
mov
repnz
and
fsub
outsl
jmp
pusha
mov
sub
mov
inc
cmp
add
mov
scas
lahf
push
sbb
rolb
pushf
mov
jbe
inc
aad
inc
outsb
or
test
aaa
arpl
xchg
nop
push
aam
in
lcall
mov
dec
mov
sbb
rcrb
push
sbb
and
es
and
mov
aam
mov
xchg
inc
mov
pop
ret
xchg
movsl
sahf
in
fbld
xlat
jmp
jbe
add
add
and
int
push
ss
mov
clc
add
out
test
cwtl
mov
fcoms
aaa
aad
xor
cmpl
pop
loopne
ja
push
stos
or
pop
mov
orb
xchg
les
jge
ror
xchg
lock
sub
hlt
bound
mov
push
xor
mov
popa
test
jo
or
pop
mov
sbb
ret
aaa
insb
or
popf
mov
loopne
jge
mov
xchg
cli
fcompl
fcmovu
fnclex
xchg
bound
in
xchg
cmp
xchg
fisubrs
push
cmp
xchg
pop
add
pop
stos
cmp
ja
mov
mov
nop
or
icebp
sub
fs
outsl
mov
or
inc
pop
fsubl
shrl
mov
lds
mov
xchg
jecxz
js
inc
cltd
leave
xchg
call
inc
xchg
add
sub
ljmp
xchg
xchg
fadd
das
in
mov
push
sub
xchg
add
sbb
pushw
aas
inc
cmp
dec
xchg
scas
fildl
sub
inc
imul
push
movsb
scas
mov
and
xchg
int
fdivs
sub
pop
mov
es
arpl
lret
fisttpll
cld
cwtl
sub
pop
pop
mov
mov
mov
in
push
push
push
fisubl
cmpsb
and
jns
imul
pop
mov
mov
movsb
xor
fcmovbe
add
adc
loop
lods
daa
pushf
push
xorb
das
xchg
mov
push
hlt
jle
stc
jl
push
loope
hlt
aad
lods
hlt
jae
dec
popl
add
dec
and
pop
pop
mov
xchg
push
adc
cli
popf
inc
rorl
cmp
jecxz
xor
xchg
lret
cld
jb
adc
mov
int3
cmp
insb
pushf
inc
repnz
adc
cmc
mov
xor
lret
sbb
repnz
ret
mul
jmp
dec
das
movsb
aam
loope
imul
jno
cmp
jp
sub
in
jge
pop
push
stc
cmpsl
and
int3
scas
dec
dec
fs
xor
jae
ss
out
jne
inc
jl
mov
es
and
sbb
int
sbb
and
rol
daa
call
sbb
push
ret
inc
push
push
pop
stos
cmp
adc
xor
test
sub
push
out
cltd
notb
rcrb
nop
in
sub
push
xor
or
insl
or
sbb
mov
popf
or
pop
jecxz
loop
ss
fcmovnbe
and
or
pushl
cmpsb
or
in
mov
xchg
and
or
insl
hlt
jle
xchg
jge
pop
and
jns
jne
imul
sti
pop
jo
stos
pushl
fcomps
dec
jp
xor
les
out
cs
jl
xchg
dec
arpl
pusha
out
push
sbb
cmpsl
mov
test
adc
mov
push
scas
and
cmp
mov
gs
js
mov
mov
test
pop
mov
adcl
sbbl
dec
cmp
cwtl
mov
cmp
rcrl
fmull
xchg
mov
dec
fldt
add
adc
out
inc
and
push
or
aas
add
lock
out
xor
andl
and
push
push
sub
test
lock
sysenter
mov
mull
adc
or
and
and
in
lret
leave
mov
out
add
sahf
xchg
cmpsb
sbb
imulb
bound
mov
and
nop
or
mov
and
repz
lcall
mov
add
push
mov
loopne
sub
cmc
cmp
pop
or
cs
loopnew
sub
add
ss
lods
adc
push
and
int3
mov
push
add
sbb
outsl
cmp
loopne
sahf
dec
mov
rol
or
xchg
idiv
fldenv
cmc
cmpsl
cmp
popa
pushf
add
mov
and
scas
cmp
or
push
mov
nop
push
fldenv
daa
xchg
pop
insl
sti
call
xlat
push
jp
or
lret
imul
pop
test
cwtl
inc
jno
out
stc
pop
push
mov
cwtl
rol
arpl
xchg
stos
push
mov
mov
pop
je
imul
sahf
cmp
sub
mov
cmpsl
int
add
mov
sbb
push
dec
ret
decl
add
mov
mov
jno
xchg
int
in
or
pusha
add
mov
mov
sub
inc
mov
cmp
cmp
add
cmpsl
sub
push
dec
or
jns
cmovno
jp
mov
stos
lahf
and
dec
jl
ja
in
push
mov
roll
loopne
out
stc
sub
xchg
lahf
add
rcl
mov
xchg
sub
fsubs
mov
push
xchg
clc
fwait
pop
lods
aad
or
pop
and
loope
lods
or
pop
popf
mov
int3
jl
push
pop
pop
mov
js
xchg
loop
and
movsb
adc
lea
cmp
cltd
xor
in
pop
sbb
jae
push
fbstp
pop
and
mov
inc
cmp
or
js
mov
sbb
aam
push
xchg
jns
push
mov
aad
test
mov
scas
loope
sbb
lcall
adc
jl
lods
roll
test
repnz
sbb
leave
es
fisttpl
add
roll
adc
sahf
enter
in
fucomip
arpl
cmpl
lods
inc
or
dec
jbe
xor
pop
mov
daa
das
adc
jg
xchg
push
adc
adc
push
pop
jmp
or
les
inc
mov
stos
int
push
jae
test
cmp
xchg
andl
add
xor
cmp
cmp
popf
lods
xchg
sbb
fwait
xchg
or
push
jp
xchg
stc
mov
addr16
cmp
or
jb
fisubl
sbb
mov
jns
pop
addr16
pop
mov
fldl
jno
jbe
sbb
lcall
popa
sub
sbb
fstps
xchg
in
in
call
add
mov
loope
cmp
dec
lret
hlt
pop
cmp
inc
sahf
inc
push
movsl
movb
addl
stos
int3
adc
lods
adc
xchg
mov
loope
les
call
test
xorl
stos
cmp
and
pop
mov
cmp
aas
out
repz
adc
mov
aad
push
dec
imul
punpckhwd
cwtl
xor
pop
sbb
shll
sbb
jecxz
pop
loopne
pop
pushf
arpl
jne
push
xlat
lahf
pop
insb
sbbb
jnp
add
pusha
sbb
test
xor
adc
in
sub
out
aad
and
in
loop
je
mov
les
jg
or
daa
fs
dec
and
or
push
or
sarl
xchg
pop
out
faddl
mov
scas
xchg
das
cmp
pop
mov
outsb
ljmp
inc
or
cli
fisubs
repz
cmpsl
ja
inc
iret
xor
mov
es
andb
pop
sbb
loope
inc
sbb
mov
out
jmp
int
xchg
and
pop
mov
scas
test
daa
les
xor
sub
movb
push
popf
lock
jnp
xchg
repnz
pop
mov
iret
add
xchg
je
leave
mov
hlt
in
xchg
popa
mov
pop
mov
shll
add
ret
sti
lahf
mov
cmpsl
xor
xchg
je
addr16
or
xchg
push
out
cltd
shrb
es
mov
cltd
xor
cmp
inc
out
out
aas
pusha
repnz
int
out
inc
movsb
mov
push
push
out
adc
xchg
jb
scas
mov
sub
add
mov
cmp
push
push
lock
mov
fldenv
xchg
jg
pop
xorb
fcoms
jmp
leave
add
adc
jl
mov
lea
cmpsl
mov
adc
push
xchg
fwait
push
nop
pop
mov
mov
sar
sub
aam
mov
rcr
mov
adc
fistps
cli
xchg
sbbb
push
xorb
mov
subl
add
icebp
fildll
pop
imul
mov
mov
mov
xor
xor
cld
es
sub
iret
pop
and
sbb
and
push
add
and
and
loope
and
ficoml
pop
mov
lretw
clc
push
lock
and
cmp
shrl
repz
aam
in
and
aaa
or
imul
cs
xchg
ljmp
clc
inc
cli
nop
mov
shll
pop
outsl
mov
add
xchg
loope
cmc
mov
test
xchg
dec
xchg
mov
ljmp
xor
inc
jmp
sub
mov
std
xchg
sbb
gs
daa
kmovb
movsl
lahf
das
cmp
xchg
xchg
mov
mov
mov
cmp
mov
lcall
jbe
xchg
data16
subb
outsl
lds
pop
outsl
les
gs
popf
or
ljmp
test
cmp
movaps
cmpsl
addr16
mov
cmc
jg
and
test
adc
ss
xchg
int3
fnstcw
xchg
jmp
pop
aad
ja
mov
xchg
fisubrl
sbb
add
or
sbb
sub
xchg
cmp
insb
shr
lods
cli
rorl
inc
call
dec
sahf
xor
shrl
leave
or
nop
inc
test
cmpsl
insl
mov
fstps
adc
std
or
fdivrs
xchg
pop
ret
in
adc
mov
jg
push
lret
sub
pop
shrl
push
dec
outsb
test
in
out
sub
push
jae
sahf
or
stos
adcb
stos
adcl
out
popa
aam
ljmp
sub
fnstsw
sbb
roll
adc
fs
sbb
ret
adc
jnp
cmc
adc
gs
adc
jmp
mov
mov
push
add
fldenv
mov
dec
pop
mov
mov
push
mov
or
xchg
mov
sbb
jmp
sbb
sub
inc
pop
mov
and
and
jle
inc
cli
icebp
or
lds
mov
scas
mov
xor
gs
fidivrl
aas
loop
cld
sub
out
xlat
in
loop
daa
outsb
in
dec
cmp
or
iret
cld
push
cmp
ret
pop
and
sub
mov
call
inc
push
mov
movsl
out
push
ret
std
mov
pop
pop
js
fwait
jmp
dec
or
mov
pop
xchg
add
leave
sbb
dec
dec
scas
jno
pop
mov
imul
cmpsl
out
mov
addr16
mov
lcall
dec
adc
sbbb
cs
aad
jmp
inc
mov
mov
xchg
aaa
outsb
inc
adc
mov
adc
nop
sti
xor
mov
jb
scas
arpl
lods
cmp
cmp
cmpsb
js
js
fwait
jmp
and
lcall
add
es
inc
sub
scas
jbe
sub
push
cmc
lock
rcll
mov
lods
sti
sub
cmp
dec
add
mov
icebp
loope
aam
imul
test
hlt
pusha
mull
sub
sbb
bound
cwtl
xor
loop
test
shrl
es
call
loope
pop
mov
std
push
xor
pop
mov
mov
cmc
mov
push
pop
mov
out
sub
imul
or
or
jl
push
pop
aas
xchg
ja
push
xchg
push
jge
push
jne
and
inc
adc
into
out
sub
jnp
sub
repz
push
mov
popf
or
fsubrs
fstl
stos
mov
cs
scas
sti
cltd
sub
lock
cld
mov
xor
in
sbb
cmpb
ljmp
mov
jns
mov
push
pop
xchg
adc
mov
xor
dec
jg
enter
fimull
and
icebp
out
and
and
push
add
inc
arpl
lds
cmpl
adc
mov
jb
and
in
mov
dec
jl
lock
outsb
leave
cmpl
xchg
pop
das
mov
push
call
inc
jge
jno
jns
adc
mov
shl
mov
pop
ja
xchg
lcall
in
mov
mov
movsl
test
jp
inc
inc
sarb
in
cmp
fstpt
shrl
leave
popa
add
das
cwtl
js
and
or
sbb
outsl
dec
outsl
xchg
sahf
or
out
xor
mov
in
cltd
xchg
mov
nop
xchg
mov
push
imul
jo
lahf
out
pushl
popf
dec
clc
fs
clc
test
xchg
xor
xchg
dec
or
rolb
pop
xchg
push
sub
push
or
mov
dec
aad
or
pop
sbb
adc
cld
pop
mov
add
xchg
xor
pop
pop
mov
inc
or
xchg
movsl
pop
jnp
sub
inc
add
push
pusha
andb
push
sub
mov
and
xchg
scas
adc
sarl
push
rcrb
mov
ds
cmp
aad
fcoms
fadds
jecxz
cli
jg
int
es
adc
iret
test
mov
sub
mov
daa
inc
push
scas
iret
jmp
inc
xchg
xor
mov
aas
aas
cmpsl
mov
add
push
add
sbb
mov
addr16
xchg
sbb
in
push
icebp
sbb
js
sbb
in
clc
mov
outsl
jp,pt
lods
jns
lcall
adc
xor
xchg
call
test
push
dec
add
pusha
cmpsl
nop
cli
out
cmc
lods
loop
test
mov
add
fs
dec
loope
je
gs
jge
jnp
pop
dec
xchg
repz
dec
icebp
cwtl
add
int3
xor
or
fs
imul
mov
loop
and
mov
mov
jecxz
ss
in
cwtl
fnsave
mov
lock
push
sbb
ret
lods
sti
out
dec
xor
jp
sbb
and
loopne
and
pop
xchg
lret
push
stos
fldl
adc
or
aam
sbbb
loop
xchg
popf
in
or
dec
pop
popf
lea
out
cltd
jnp
push
stos
fs
or
mov
or
fiadds
icebp
sbb
sub
icebp
push
xchg
mov
insb
and
inc
icebp
add
xchg
int3
xlat
sbb
gs
outsb
xor
aad
xchg
sub
les
push
jle
repnz
sub
aam
adc
jno
sti
sub
lahf
xchg
mov
jno
call
sub
stos
daa
sub
inc
sbb
cwtl
add
dec
in
dec
fcomps
push
xchg
mov
out
mov
movsb
cmp
jge
inc
jmp
testb
sub
fmull
dec
mov
mov
xchg
fildll
mov
and
dec
insl
lds
push
xchg
fsts
and
mov
mul
jne
jne
in
ds
jo
mov
push
mov
in
or
fs
add
mov
fmuls
popa
lods
rcll
in
insl
data16
pop
gs
jecxz
hlt
dec
mov
adc
cmpsl
sbb
and
add
dec
in
pusha
in
cli
movsb
pop
xlat
adc
aad
fwait
jg
mov
and
mov
pop
push
xchg
mov
add
das
jp
lock
testl
lock
fisttps
jns
lds
divb
lret
scas
sub
push
in
push
push
sub
rcrl
xchg
addl
jge
ret
pop
call
mov
cmp
adc
dec
cmp
sub
and
inc
aas
and
bound
sarl
push
pop
push
loop
movsl
stc
xor
mov
jnp
test
es
push
rolb
addr16
cwtl
jne
addr16
lahf
pusha
add
or
push
fwait
mov
js
dec
inc
out
jg
xchg
mov
xchg
mov
les
mov
call
mov
mov
adc
dec
cmp
dec
and
out
cmp
lds
jnp
ficoms
xchg
add
pushf
and
jmp
testb
out
cmpsl
sub
push
sbb
sub
jnp
sahf
pop
jg
shlb
xor
cmp
add
sbb
push
loopne
cs
ret
aad
imul
dec
push
push
mov
jnp
mov
imul
jns
loop
mov
movups
push
dec
xor
in
ret
adc
sbbl
into
and
in
rclb
lock
or
dec
andl
jnp
int3
fistpl
pop
mov
loope
pop
imul
ds
jl
enter
dec
inc
jo
push
les
cmp
das
repnz
data16
or
push
mov
mov
mov
jb
loopne
jbe
fidivrl
lcall
into
lret
pop
add
fldcw
adc
into
aaa
fldenv
cli
or
jae
mov
into
add
xchg
pop
iret
sbb
das
adc
bound
data16
inc
cmp
dec
movsb
xor
xlat
sahf
mov
outsb
ret
pushf
addb
xorb
js
std
mov
insb
aaa
add
rcll
aas
sub
maskmovq
testl
jno
out
jb
scas
out
sbb
fs
scas
cmc
jmp
aaa
outsl
inc
inc
cmp
cmpb
cmpsl
jl
jp
cld
xor
imul
sahf
ret
jbe
gs
pop
pusha
clc
pop
dec
hlt
loop
xor
loope
inc
frstor
or
mov
and
push
ja
rorb
les
shlb
xchg
aaa
insb
cmp
mov
into
cltd
lock
sbb
in
out
data16
adc
dec
test
mov
sti
inc
xchg
ljmp
hlt
or
sar
arpl
xor
mov
iret
leave
jl
data16
std
push
adc
nop
fisttps
push
pop
xchg
dec
xchg
out
insb
out
xchg
lods
hlt
fucomi
int
std
dec
xchg
popa
outsb
adc
vmread
mov
push
xchg
mov
xchg
into
test
out
rcll
pop
xchg
push
sub
popa
inc
mov
mov
pop
icebp
pop
mov
dec
add
add
push
shrb
iret
das
sub
inc
xor
ret
fs
sbb
cli
xchg
or
aad
cmpsb
pop
jp
add
ret
lods
mov
mov
arpl
aas
cmp
push
cmp
data16
jno
mov
stos
jo
push
adc
into
pop
cmpb
cwtl
mov
enter
mov
out
mov
inc
dec
or
out
push
inc
int
fs
sub
cwtl
jae
xchg
xchg
mov
cmp
les
mov
mov
out
sbb
dec
mov
adc
ret
xor
cs
pop
lock
out
inc
push
inc
jno
add
and
scas
mov
dec
dec
push
mov
pop
stos
inc
inc
stos
xor
cmp
fnsave
cmovp
and
cli
lods
cmp
int
clc
jecxz
mov
test
leave
or
jle
movsl
adc
test
pop
or
sbb
mov
mov
es
fs
movsb
fs
ljmp
icebp
jno
push
xchg
sub
nop
fists
jb
pushf
inc
hlt
fstps
fcmovbe
cmp
mov
and
out
sub
icebp
push
add
cmp
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
rol
push
jp
pop
jp
lahf
daa
cmpsb
rcrb
mov
cmp
pop
in
fs
push
jo
dec
cmp
or
in
lods
mov
es
push
das
out
sub
adc
sahf
inc
cmp
iret
dec
stos
mov
imul
pop
add
mov
sbb
dec
pop
bound
mov
adc
mov
adc
add
sub
psubsb
pop
inc
lahf
std
enter
test
std
and
das
into
pushf
inc
pushl
or
pop
xor
sti
inc
add
andl
adc
jbe
ds
or
xchg
mov
mov
notl
ja
xorl
adc
dec
into
jmp
orb
mov
add
shlb
fcomip
add
sub
mov
pop
inc
sbb
out
cwtl
insl
out
sbb
mov
sub
aad
and
dec
jmp
jp
orl
arpl
mov
loop
enter
mov
dec
mov
add
jo
daa
push
jmp
pop
sbb
sbb
das
inc
or
xor
add
adc
imul
fcoml
cmp
pop
andb
mov
rcrb
pop
clc
push
jne
xchg
xchg
dec
push
or
xor
add
push
jnp
lret
mov
addr16
sub
ffreep
aad
add
ljmp
dec
scas
scas
out
and
cmpsb
cmp
push
xchg
mov
and
jmp
scas
or
mov
inc
scas
push
outsl
or
fadds
add
mov
jle
xchg
push
or
hlt
push
fdivl
mov
and
aas
pushf
das
fs
mov
push
jg
insl
pop
inc
lock
or
fwait
xchg
inc
jp
mov
pusha
push
lods
mov
xor
dec
mov
movsl
cwtl
xor
dec
cltd
lret
fchs
push
xchg
popf
add
inc
cld
enter
xlat
stos
pop
sbb
sbb
es
les
stc
adc
adc
mov
push
arpl
inc
push
shlb
orl
jno
inc
cmp
xchg
push
je
sub
inc
sub
mov
sysexit
and
dec
mov
fisttpl
frstor
add
fimuls
mov
cmpsl
pop
lds
roll
inc
outsl
arpl
out
push
cmp
push
cltd
xchg
addr16
divb
cs
lahf
dec
mov
fldt
pushl
pop
xchg
pop
and
call
jp
out
dec
shlb
mov
or
cld
push
lahf
inc
lret
pop
xor
xchg
dec
jne,pt
rcr
ds
xor
xchg
jne
dec
push
lods
jne
mov
add
mov
and
dec
sbb
and
cmpsb
mov
stos
xor
scas
mov
push
push
push
fs
js
pop
fstpl
push
insl
cs
shr
call
mov
sbb
inc
pop
in
dec
int
fnstsw
lret
test
sub
int
mov
imul
dec
rcr
mov
sbb
call
testl
mov
mov
popf
dec
inc
rorb
mov
aad
mov
rcr
loopne
sub
mov
push
fiaddl
cwtl
cmc
cltd
ret
mov
sbb
sti
sub
ja
mov
pop
scas
js
hlt
dec
cmp
loope
negb
pop
cmpsb
inc
add
loope
jnp
and
jp
xchg
out
push
sub
mov
movb
adc
lds
in
lock
sbb
pop
mov
ret
inc
stos
cs
popa
mov
shlb
pop
ss
cmp
dec
or
sub
sti
xchg
ja
xor
pop
xacquire
test
and
xchg
lret
mov
add
mov
mov
sbb
insb
rcrl
or
daa
fs
dec
int3
call
push
stos
push
nop
addb
inc
inc
test
pop
lea
bnd
dec
push
repz
pop
int
xchg
cmp
out
cmp
push
out
mov
std
lods
pop
jecxz
lret
mov
fsubrl
daa
push
pusha
inc
pop
mov
mov
mov
mov
push
jge,pt
rcrb
ja
mov
mov
mov
jae
jp
dec
push
mov
xchg
jns
push
ds
add
jecxz
pop
bnd
test
xor
stos
sbb
test
shlb
movsb
popf
cs
jbe
sub
sbb
mov
shll
sub
int3
fisttpll
and
outsl
fisttpl
movsb
in
outsb
push
aam
xor
int3
sub
inc
icebp
mov
jge
jne
pop
mov
pop
jae
xor
mov
int
and
pop
pop
aas
js
sbb
rcll
lcall
out
jbe
mov
add
loope
outsl
daa
das
xchg
or
dec
cmc
xchg
rcrb
mov
das
sub
or
cmpsl
ds
cmc
cmpsb
shrb
enter
xchg
mov
aaa
and
test
pop
jmp
sub
lret
mul
lea
xlat
test
push
pop
push
adc
lock
add
leave
push
mov
mov
outsl
out
sbb
gs
and
mov
and
push
fdivl
jg
jae
xor
lcall
cmp
mov
fistpll
or
stos
push
into
in
jge
and
rcr
bound
adc
sbb
fimull
aam
add
mov
rcr
repnz
pusha
sub
cmp
fstl
sbb
fs
push
dec
or
cltd
or
add
in
cmpsl
cmpsb
lods
scas
into
movl
mov
lods
and
and
lret
or
dec
lcall
je
leave
dec
push
push
test
fdivrl
fidivrl
push
pop
cmpsl
pushf
loope
mov
cmp
inc
movsb
jle
out
fs
inc
test
adc
clc
and
and
mov
xchg
mov
sbb
mov
fwait
jnp
fisubrs
adc
xchg
in
jnp
jp
rcrb
xor
and
jo
setl
push
pop
sti
movsb
push
mov
rcrl
aam
and
stos
roll
ja
or
cmp
sbb
lds
xchg
enter
jp
jns
scas
adc
xor
jg
lea
mov
xchg
mov
cmp
and
lods
out
repz
fidivrs
jne
lock
push
iret
shl
jnp
aad
aad
arpl
add
jl
xchg
ret
popf
in
out
mov
pop
cmp
cmp
mov
popf
sub
adc
push
call
movsb
out
pop
sbb
sahf
xlat
je
test
sbb
inc
test
xchg
pop
push
hlt
cmp
loop
scas
aam
stos
mov
push
pop
fdivrs
int3
pop
sub
pop
test
imul
push
andl
or
pop
pushf
jb
sbb
cmp
sbb
xchg
popa
lds
cmc
and
lcall
sub
in
cmpsb
in
push
jle
add
ficoml
xchg
mov
movsb
xchg
inc
repnz
sub
xor
imul
lret
rolb
mov
push
dec
sub
xor
xchg
push
scas
pop
and
fsubs
testb
push
rcrb
ljmp
sbb
movsb
hlt
pop
sub
adc
add
sar
xor
mov
into
repz
adc
in
movsl
mov
in
loopne
sti
adc
mov
mov
xchg
mov
adc
ret
adc
jnp
fbld
pop
mov
test
decl
ljmp
jae
xor
fnstenv
dec
sbb
add
fucomp
sbb
pusha
push
cltd
mov
out
or
or
dec
pop
cmp
push
jecxz
xchg
jae
mov
push
mov
loopne
pop
and
loopne
xor
jbe
daa
jns
in
xchg
popl
dec
or
mov
inc
test
or
push
shlb
nop
mov
addb
jmp
sub
stos
mov
push
sti
mov
out
jae
pop
mov
xchg
pop
cmp
push
push
add
es
sbb
jmp
and
inc
and
mov
xlat
ret
mov
ret
inc
int3
movsb
or
repnz
jno
mov
dec
push
mov
shlb
outsl
imul
lock
mov
push
notl
mov
sti
pop
push
xlat
loop
push
idivl
in
xorb
pop
cmp
lea
mov
xchg
xchg
loop
lret
iret
or
mov
dec
sbb
in
push
orl
je
xchg
or
pop
scas
mov
repnz
fcom
cld
test
test
in
sbb
outsl
sub
pop
sbb
pop
fsubr
rol
movsl
xchg
mov
push
cmc
mov
xchg
loop
pop
dec
mov
xchg
subl
mov
out
sbb
int3
sti
adcb
out
movb
in
push
movsb
test
cmp
jle
insb
aam
and
mov
gs
es
mov
cli
pop
ds
imul
or
movsl
clc
xchg
jmp
inc
pop
mov
fstl
adc
mov
lret
mov
je
loope
pop
addr16
cmp
and
mov
inc
cmp
pop
sbb
push
pop
clc
in
fistpll
subl
hlt
leave
xchg
cmpsl
test
jmp
cmpsb
mov
out
pop
icebp
out
ljmp
push
test
stos
incb
add
add
jp
jnp
movsl
sbb
mov
adc
and
cwtl
mov
aaa
fldt
push
fsubp
xchg
enter
pop
mov
repz
in
add
push
imul
dec
xor
xchg
lret
insb
iret
sub
andl
inc
dec
aam
sub
jmp
sbb
push
mov
lcall
sbb
jp
push
outsl
das
enter
dec
jg
shll
divb
push
sbb
push
ljmp
mov
cmpsl
mov
adc
dec
or
jle
mov
xor
ficompl
mov
ficompl
inc
dec
dec
push
sub
sbb
mov
aam
jp
call
pop
lods
jns
sar
inc
lds
mov
pop
cwtl
inc
jne
stos
jp
inc
sbb
add
stos
mov
into
inc
insb
jae
jo
sbb
adc
es
adc
pop
insb
pop
sub
xor
add
jb
mov
ds
scas
les
idiv
popf
push
aas
sub
sub
cmp
rcll
aam
dec
cld
insl
xor
shlb
push
lods
pop
jno
dec
imul
mov
outsl
sub
mov
push
into
jbe
in
xchg
dec
std
sub
loope
add
daa
mov
jnp
cmp
enter
out
aas
and
inc
imul
pop
inc
imul
xor
inc
jb
call
aaa
mov
mov
or
movsl
adc
sbb
xor
pop
dec
mov
mov
rcrb
ja
or
xchg
pop
dec
nop
inc
pop
dec
mov
clc
pop
jns
add
cmp
ja
push
push
cmpsl
cmp
xlat
push
test
pop
jge
and
xor
or
mov
adc
out
xor
mov
mov
out
push
mov
pop
loop
les
xchg
push
pop
push
xor
mov
sbb
sbb
pop
or
fucomi
add
sahf
fsts
mulb
adc
arpl
or
in
mov
mov
lcall
sbb
mov
dec
test
xchg
mov
xchg
sahf
mov
lods
test
pop
jae
fwait
xlat
xchg
jb
outsb
shr
daa
outsb
popa
aaa
out
cld
mov
add
imul
and
ss
jbe
int3
loope
scas
repnz
and
sbb
icebp
dec
inc
mov
sahf
push
pop
out
dec
gs
aaa
sub
push
ja
jo
ljmp
adc
push
insl
mov
xor
push
addr16
cmp
dec
fstpl
mov
add
cli
out
pop
xor
cmpsb
roll
pop
pop
mov
sbb
cs
lret
push
sti
jmp
inc
fwait
gs
sub
insl
push
sarb
push
xchg
addr16
jne
insl
mov
loope
inc
shl
jp
mov
mov
xchg
les
fidivrs
out
rol
mov
lods
iret
mov
dec
icebp
dec
sub
cmpsl
negl
pop
xor
push
shll
int3
jae
rcrb
mov
push
daa
lcall
stos
loop
loop
pop
add
cwtl
dec
xor
fnstcw
pop
fidivl
and
les
pop
dec
movl
sahf
xor
outsb
sbb
mov
pop
inc
xchg
je
adc
jl
aad
mov
pop
jmp
inc
repnz
mov
sahf
dec
pushf
js
aaa
and
stos
lret
dec
mov
mov
mov
jge
outsb
cwtl
push
and
in
gs
ds
sti
dec
jne
mov
jnp
jae
inc
cmp
dec
cmp
outsl
xchg
fwait
add
pop
adc
in
or
mov
xchg
stos
cli
and
pushf
bnd
xor
fistps
sub
les
mov
xchg
xchg
push
dec
cmp
add
not
sbb
cs
movntps
repz
adc
sub
je
cmpsb
les
mov
scas
jno
sbb
sub
orl
ficoms
push
cs
iret
and
mov
pmaxub
hlt
dec
ljmp
clc
adc
mov
cmp
icebp
loopne
and
add
lods
pop
ljmp
mov
in
scas
mov
out
int
dec
cmp
push
push
sbb
push
repnz
int3
cmpsl
jmp
push
sti
inc
repz
testl
gs
gs
push
mov
lods
inc
aam
push
pop
and
pop
xchg
sbb
ret
mov
mov
mov
xchg
adc
call
scas
sub
jmp
add
fs
xor
std
push
jecxz
imul
movsl
test
xor
out
or
std
push
dec
mov
fs
sub
xor
sbb
cmc
lret
xlat
test
inc
icebp
in
sub
pop
out
testb
aad
js
jbe
mov
jp
or
mov
pop
sbb
bound
dec
iret
inc
mov
fiaddl
lock
jl
push
sub
dec
fistps
fs
push
add
les
aas
sub
addr16
mov
or
push
inc
aas
ret
sub
shl
mov
mov
dec
arpl
dec
sbb
jns
dec
jne
les
scas
xor
sub
aad
lods
loop
sub
popf
adc
fs
fs
pop
jne
push
cmp
xorl
cld
mov
movsl
mov
lret
bound
test
or
out
inc
fcmovnbe
xchg
mov
adc
lahf
dec
sbb
mov
movsl
mov
dec
lods
js,pt
mov
lcall
jb
aas
push
stos
out
add
ja
adc
in
sbb
cmp
pop
test
xchg
movl
aad
cmp
shlb
and
mov
dec
pop
mov
mov
pushf
daa
sti
cltd
inc
xor
adc
shrl
and
xchg
mov
testl
adc
mov
push
fucomp
add
cmp
xor
js
lods
aad
cs
imul
sbb
test
or
addr16
repz
loopne
lret
mov
ja
sbb
sub
push
jmp
repnz
ljmp
dec
in
das
bound
xchg
inc
lock
fwait
sbb
dec
xchg
imul
mov
adc
push
jns
push
cmp
xor
and
fninit
repz
movsl
in
cmp
push
fcmovne
mov
and
fiadds
daa
js
jmp
mov
fimull
rolb
push
jbe
pop
addr16
psubusb
je
iret
pop
loope
fstps
fldz
je
loopne
jne
scas
sub
push
sbb
pop
jge
out
cmp
popa
decl
shll
add
jg
dec
add
lcall
cmp
xchg
int3
jnp
movsb
xchg
jne
mov
dec
fisubrl
imull
std
jp
mov
mov
dec
lods
fldenv
add
jnp
mov
sub
in
ds
lock
mov
adc
or
push
or
fnstcw
and
das
cmp
xchg
push
sub
or
xlat
jbe
adc
rorb
sbb
dec
dec
mov
ret
adc
sub
nop
cld
sti
fisubl
cltd
and
arpl
sbb
enter
mov
adc
push
je
inc
repz
inc
popf
mov
jns
in
push
popf
outsl
adc
lahf
fstpl
ret
stc
fldt
or
add
inc
push
inc
jle
or
stc
and
dec
cmp
lds
int3
nop
inc
jae
jmp
outsb
dec
xchg
push
sbb
cmp
data16
pop
pop
inc
cld
rolb
frstor
xorl
mov
ret
test
mov
clc
push
xor
jo
adc
mov
xchg
xor
lahf
push
sbb
and
je
stos
mov
lods
mov
mov
jecxz
dec
xchg
jg
xchg
xchg
mul
outsl
scas
ja
jmp
les
jg
push
sub
xor
cmp
jl
cmp
lock
xor
repz
mov
mov
sarb
xchg
jg
scas
mov
lcall
imul
dec
ja
sub
jg
outsl
pop
mov
cli
sbb
push
add
pop
push
stc
notb
iret
mov
jno
jns
rolb
pop
lahf
pop
lock
push
xor
jmp
mov
mov
adcl
jne
das
out
inc
in
fnstcw
popl
jne
adc
jg
xlat
imul
mov
adc
pop
dec
sub
or
pusha
out
out
sahf
mov
xor
mov
xlat
dec
out
push
mov
test
fimuls
jo
stc
jmp
mov
cmp
movswl
dec
inc
int3
lods
sub
inc
inc
mov
cmpsl
add
mov
pop
cmc
enter
lea
scas
and
pusha
fwait
cs
pop
jg
and
sahf
pop
orb
mov
adc
and
xchg
dec
sub
pop
xchg
dec
outsb
lret
mov
call
lret
pop
dec
push
movsb
jno
or
push
push
sbb
pop
add
or
movsb
fucom
divl
cmpl
sti
add
jns
cltd
xchg
int3
fcomps
or
lds
dec
out
push
dec
pushf
jge
sbb
jmp
test
mov
dec
cmp
push
jne
jle
faddl
shr
or
mov
mov
cmpsl
xor
bound
jle
adc
div
lock
add
sbb
pop
add
jo
into
movsl
je
mov
and
sahf
and
push
ds
inc
scas
sti
push
mov
lock
arpl
lcall
subl
out
test
fs
mov
or
mov
adc
aaa
pop
push
jge
adc
xor
loope
inc
push
mov
jbe
push
shr
cmpl
inc
sbb
iret
push
xchg
dec
xchg
pop
lcall
sbb
pusha
pop
fiaddl
pop
or
js
es
cmp
xor
adc
cmp
lock
dec
jno
pop
sti
ds
push
sbb
add
push
gs
fsubrs
and
test
orl
call
mov
cwtl
mov
out
dec
orl
sbb
inc
jge
xchg
lods
inc
in
pushw
adc
mov
sbb
mov
push
mov
lea
xor
mov
sar
stc
jae
add
mov
aad
mov
ja
loop
fadd
into
adc
xchg
adc
std
cmp
push
sub
insl
shl
loopne
cmc
orl
mov
pop
ja
jecxz
cmp
test
sub
inc
inc
mov
sbb
stos
dec
ss
popa
out
shrl
and
sub
mov
add
in
lahf
rcrl
push
aas
fiaddl
pop
in
push
xchg
xchg
lea
in
jg
push
pop
mov
and
test
insb
lods
jl
es
dec
and
mov
push
xchg
mov
dec
cmc
sub
je
mov
pop
jae
pop
aad
lods
mov
mov
lahf
inc
mov
sarl
or
shrb
das
adc
cltd
popf
mov
cwtl
sub
std
test
mov
call
push
jp
mov
and
add
mov
push
mov
sahf
mov
jo
or
and
cmp
sub
nop
or
mov
mov
imul
inc
aaa
call
nop
pop
inc
hlt
data16
mov
add
stos
clc
ret
popf
lock
push
xchg
push
leave
cmp
sub
mov
pop
jne
pop
or
mov
mov
loop
push
jno
xchg
ficomps
scas
js
aaa
fists
mov
add
lds
repnz
jne
outsb
or
inc
jb
dec
popl
fmuls
lods
pop
dec
in
inc
daa
jmp
bnd
lea
cmp
dec
stos
cmp
cmpl
rcrb
addb
dec
sub
fstl
jecxz
jp
aaa
ret
adc
mov
xchg
xchg
out
movsb
mov
int3
imul
push
in
xchg
mov
mov
pusha
push
dec
pop
cli
mov
test
or
sbb
cmpsl
inc
nop
add
loopne
fwait
cld
pop
xor
ret
dec
call
jne
pop
cmpsb
pop
hlt
inc
mov
les
pop
std
dec
mov
jno
out
mov
mov
lret
sbb
sbb
out
cs
mov
dec
gs
push
cmp
add
inc
dec
into
cwtl
rorl
add
xchg
mov
push
pop
aad
shrl
lods
or
xchg
and
adc
push
jmp
push
jns
mov
push
push
lcall
push
inc
les
rclb
ret
ret
pop
imul
int3
mov
in
pop
fldt
rolb
xor
pop
jg
jae
imul
loope
xchg
out
sahf
jae
insl
and
pop
aad
fists
cli
add
icebp
xor
ja
xchg
xor
add
movb
jmp
fmull
fdivrl
mov
xor
lret
add
and
addr16
xchg
inc
pop
int3
adc
sub
adc
cmpsl
hlt
or
dec
push
das
inc
cmp
out
test
outsl
arpl
jle
mov
mov
mov
mov
xchg
mov
ljmp
ret
jl
in
mov
xchg
popf
ret
gs
xchg
test
adc
dec
push
and
imul
fs
lds
cmovle
inc
std
das
dec
sub
push
test
xor
xor
adc
mov
fwait
xor
add
mov
mov
das
pop
mov
lahf
or
lods
in
in
pop
insb
test
inc
inc
pop
inc
sub
test
cltd
mov
mov
push
in
push
arpl
cs
loop
xcrypt-ofb
cmpsl
insl
mov
push
pop
add
sti
pop
les
mov
icebp
inc
ret
xchg
inc
mov
cwtl
jmp
mov
inc
cwtl
outsb
mov
out
aam
ljmp
mov
xchg
mov
sub
push
or
adc
in
daa
fmuls
sub
mov
and
add
sub
cmp
faddl
pushf
jnp
rcll
cmp
lahf
inc
in
adc
jne
pop
sbb
cmp
insb
mov
push
movsb
sub
jno
add
sub
jno
pushf
mov
imul
jno
adc
pop
xor
mov
sub
sbbb
jb
or
or
mov
fmul
sbb
jo
dec
rclb
mov
mov
jp
push
xchg
xchg
imul
push
dec
repz
test
push
repnz
cmp
jle
lock
mov
das
repnz
xchg
and
cmp
push
in
mov
xchg
add
push
mov
adc
je
or
mov
sarb
fdivs
sub
jb
int
test
or
out
insl
pop
adc
xchg
cmc
or
lods
mov
aam
dec
test
jecxz
mov
xor
inc
in
jb
fcmovb
add
cmc
jae
adc
push
dec
cltd
and
fisubrs
add
mov
mov
stos
or
lds
mov
hlt
jns
add
mov
subl
lods
jl
mov
pop
popa
test
lock
push
test
inc
inc
mov
gs
int3
mov
shl
rclb
outsb
add
sub
jno
cltd
call
push
cwtl
filds
sbb
lods
push
dec
add
clc
dec
pop
inc
cmpsl
scas
out
jbe
cmp
pop
adc
mov
mov
xchg
aaa
mov
dec
xchg
aaa
xlat
sbbb
bound
scas
pop
das
and
inc
int
addr16
pop
push
int3
shll
shll
adc
sbb
mov
adc
outsb
cwtl
fadds
xchg
testl
xor
negl
jo
cmpl
std
nop
jg
aaa
push
add
fidivrs
xchg
cmp
mov
inc
movsl
push
or
insb
or
dec
es
out
aas
cmpsb
sub
addr16
ljmp
mov
mov
fimuls
dec
mov
aam
lret
fdivrl
inc
pop
jns
cmp
mov
lahf
negl
inc
mov
jg
loope
lahf
or
ja
mov
out
push
sub
mov
aaa
mov
jb
xor
enter
aam
mov
test
xchg
cmp
push
jns
push
mov
test
mov
push
pop
add
pop
test
xor
out
cmp
bound
cmpsl
adc
push
or
cmpsb
test
mov
ret
add
out
into
xchg
movsl
movl
aam
rcl
mov
repz
jne
mov
lods
lods
xchg
test
loopne
xor
mov
mov
lahf
push
fcoml
push
or
xchg
xor
cmp
aam
jg
inc
mov
push
xchg
or
cwtl
daa
sub
mov
adc
sub
orb
cmp
xor
xchg
cmc
sbb
imul
ret
sahf
mov
inc
pop
inc
inc
in
sahf
movsl
hlt
mov
cmp
xor
push
imulb
inc
mov
cltd
cmp
fsts
data16
scas
add
ror
shl
mov
xchg
push
cmp
ficoml
xchg
xchg
xor
and
fbld
out
sbb
sub
xor
mov
addl
jbe
pop
and
or
aas
daa
sbb
sbb
and
jnp
mov
daa
in
mov
cmovbe
sahf
das
insl
and
xor
or
es
adc
mov
xlat
lcall
ret
mov
test
add
sbb
test
cli
push
pop
fstpt
icebp
das
add
les
cmp
xor
lea
xlat
ficoms
pop
addr16
lea
jbe
hlt
xor
fs
and
and
es
test
repz
lods
or
decl
and
cmp
sub
lahf
insb
shrb
mov
insl
stos
mov
sahf
dec
mov
ds
pop
insb
push
addr16
lock
cmpsb
gs
lods
shrl
jge
inc
repnz
insb
cs
sbb
adc
lds
sbb
push
add
inc
xchg
repz
outsb
dec
in
jecxz
loopne
in
push
cmc
pusha
andb
or
aad
xor
mov
std
mov
dec
xchg
pusha
push
dec
addl
clc
xor
sbb
fwait
sbb
imul
cmpsb
mov
out
xor
data16
push
std
or
divl
scas
inc
jmp
aas
loope
xchg
pushf
cmp
push
xchg
test
pushf
loope
adc
cmc
add
mov
out
push
pop
sub
xchg
insl
adc
lds
popa
or
mov
jo
xchg
sub
jb
test
lds
test
cmp
shlb
outsb
cmp
es
das
jae
cs
lds
shlb
cmp
ffree
xadd
scas
int
popf
cmpsb
cmp
mov
dec
or
aad
std
inc
mov
ror
repz
stos
outsl
fs
lods
pushf
cmp
mulb
inc
stos
sub
lret
mov
cmp
cmp
and
enter
and
inc
dec
shrl
cmp
in
xlat
dec
sbb
das
adc
movsb
jp
xor
out
sub
and
daa
jl
sub
shlb
or
inc
sarb
mov
sbb
loop
xor
mov
hlt
xbegin
adc
gs
mov
fiadds
shl
lcall
aam
sub
inc
rolb
addr16
fwait
and
adc
xchg
std
sahf
popa
inc
lret
mov
vmovddup
inc
bound
push
jno
mov
outsl
iret
les
icebp
movsl
jo
dec
inc
push
cwtl
fwait
popf
cmp
xchg
js
hlt
call
lock
das
ret
jl
mov
test
test
jmp
add
lods
orb
mov
repnz
mov
dec
mov
and
cmp
lcall
mov
scas
push
or
mov
addr16
fldenv
inc
add
dec
and
adc
dec
arpl
or
add
sarb
mov
outsb
xor
mov
repz
repnz
mov
add
mov
pop
push
sub
sub
outsb
push
into
inc
mov
add
jmp
sbb
lcall
flds
push
stc
aaa
pop
pop
test
bound
loope
dec
scas
adc
cwtl
push
xchg
pop
mov
out
and
stos
jbe
stos
cmp
ret
test
xchg
cmpl
in
outsb
xor
xchg
fs
cmpb
xor
push
xor
aam
push
and
ljmp
inc
dec
es
out
jl
fidivrl
ljmp
mov
dec
daa
mov
jg
xor
in
mov
mov
mov
xlat
idivb
clc
lcall
inc
orb
mov
xor
out
push
or
imul
insb
pop
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
fcmovnb
xor
pop
jp
ret
xchg
hlt
scas
jecxz
lcall
mov
jle
xor
push
into
in
repz
push
sahf
sbb
push
push
cmp
pop
leave
push
clc
loop
frstor
sub
lret
inc
or
mov
aas
or
jge
jae
jnp
out
out
hlt
dec
fs
rorb
fucomip
sub
repnz
dec
push
jmp
ss
jmp
xor
xor
lods
mov
mov
bound
out
dec
and
jg
pop
fcmovnbe
test
je
cld
xchg
and
dec
into
jp
cmp
test
cmpsl
xchg
push
adc
dec
repnz
and
mov
mov
test
mov
cmp
rdtsc
mov
fmuls
mov
lea
lods
mov
lret
call
loope
lcall
inc
mov
bound
and
mov
sarl
mov
fwait
icebp
pop
flds
xchg
add
iret
jecxz
test
lock
xor
call
mov
outsb
das
dec
dec
clc
inc
repz
jb
mov
fcoms
in
jbe
repz
int3
sub
lds
jmp
clc
push
inc
xchg
or
lds
arpl
add
popa
jge,pt
loope
je
pop
adc
cmp
sar
push
xchg
fwait
mov
fwait
or
movsl
or
stos
in
movsl
mov
xchg
mov
xor
gs
outsb
lret
mov
fwait
mov
je
je
cmc
leave
and
push
ret
pop
dec
lds
adc
pop
mov
cmc
add
jo
cmp
andb
or
add
stc
mul
in
rcrb
repnz
lds
inc
mov
sbb
add
ret
in
and
in
fsubl
mov
enter
or
lods
loopne
xor
push
pop
cli
xchg
mov
roll
lret
xchg
aad
xchg
mov
int3
outsb
int
xor
jns
mov
scas
cmp
dec
les
xchg
cmp
mov
sbb
add
xor
sub
inc
fcompl
lret
or
jp
cmpsl
pop
repz
and
or
or
push
mov
test
and
clc
sti
stos
insl
dec
rorb
jo
shlb
mov
sbb
pop
outsb
xchg
pop
or
mov
sub
in
push
xchg
aad
add
pop
in
repz
ror
sub
and
cmp
dec
dec
scas
cmpsb
inc
and
lods
movups
stos
scas
sbb
push
inc
dec
jb
mov
xor
add
mov
add
add
mov
sub
jle
mov
dec
cmp
pop
clc
jns
or
add
jo
xor
jo
rorl
repnz
jnp
in
pop
add
sbb
insb
lods
cmpsb
cmp
int
fwait
adc
sub
dec
jno
sahf
or
pop
push
fmull
xchg
and
adc
push
dec
aad
push
sub
cmp
hlt
add
into
loope
lock
lods
dec
lods
lahf
or
xchg
pop
jp
stos
inc
jnp
loop
ficompl
mov
adc
fstpt
xchg
dec
mov
xlat
lds
outsb
xchg
dec
outsb
lea
add
xchg
movsb
mov
aam
mov
lock
das
stos
daa
xchg
mov
add
pop
and
rol
xor
jmp
pop
mov
dec
cmp
iret
ret
loop,pt
add
scas
ljmp
lds
jne,pt
jg
sahf
in
dec
loopne
aaa
out
jbe
arpl
inc
cld
add
or
stc
cs
pop
sti
out
sahf
mov
mov
frstor
sbb
xchg
loope
mov
popa
pop
outsb
pop
mov
popa
jp
imul
out
mov
or
push
pop
sub
jg
fdivrs
cmp
and
movsl
inc
dec
add
or
mov
or
fisttps
les
mov
subl
cli
push
and
movsl
test
push
sarl
push
fwait
sbb
addr16
ret
jae
and
push
dec
shrb
pushf
push
inc
pop
and
mov
test
jno
loop
in
andb
dec
dec
mov
ljmp
loope
jge
shlb
ret
cmp
jp
bound
into
jne
movsb
mov
add
lds
xorb
out
jecxz
fdivs
xchg
pop
inc
rclb
pushl
gs
pop
inc
jne
out
mov
test
lods
dec
add
addr16
mov
pop
xor
mov
lret
cmpsb
lcall
adc
jp
xor
js
arpl
clc
out
negb
xor
cmp
hlt
hlt
mov
pop
loop
outsb
gs
jo
pusha
shrl
jge
jnp
pop
add
out
fwait
jp
jno
or
push
inc
push
aam
sbb
dec
int
ja
dec
fdivrl
mov
bound
ja
lods
leave
clc
addr16
dec
divl
popf
mov
cs
jg
jno
imul
into
jno
out
xor
push
push
push
xchg
call
pop
add
jmp
or
pop
mov
in
mov
movsb
add
cli
in
push
sbb
jns
jge
xchg
sbb
mov
mov
xor
mov
frstor
gs
test
mov
hlt
addr16
cmpsl
and
pop
mov
ds
push
rol
jnp
dec
inc
stos
dec
xlat
add
push
aam
popa
inc
mov
xor
lcall
xlat
popa
inc
shrl
cmc
mov
cmp
rorl
jg
xor
cmpsl
mov
inc
data16
pop
les
push
aad
lcall
inc
cmpsl
stos
sti
jl
push
insb
pop
repz
mov
push
xor
xchg
jge
int3
divl
push
add
sahf
jl
xor
lods
cs
jns
add
jns
dec
dec
shlb
mov
xor
outsl
pop
das
pushf
insl
xor
cmp
mov
fsub
and
jae
mov
cmp
clc
cmp
push
pop
pop
adc
sub
mov
incl
in
sbb
rorb
mov
arpl
xor
andl
sub
jg
cmp
jno
iret
or
mov
ss
sub
push
xor
adcl
outsb
cmc
push
mov
es
and
scas
inc
mov
subb
dec
test
and
sbb
mov
gs
clc
xor
je
lods
push
or
sbb
mov
sbb
xchg
dec
and
push
cwtl
xchg
mulb
testb
xchg
aam
in
xor
loope
mov
mov
pop
jbe
xor
test
rorb
push
sbb
jge
mov
add
push
mov
inc
cmpsb
dec
leave
lcall
movsl
mov
sbb
outsb
cmp
sbb
mull
pop
fimuls
cltd
cltd
inc
rolb
or
pop
jmp
insl
repnz
mov
mov
adc
inc
ficoms
fnstsw
mov
cmpsb
outsb
dec
je
sbb
xchg
dec
es
lahf
into
jne
push
insb
pop
cmp
or
add
enter
outsl
popa
test
or
pop
cltd
neg
lock
popa
jno
pop
lahf
sbb
fcomip
pop
lea
lods
pop
jmp
lds
mov
test
sub
mov
inc
xchg
dec
adc
add
xchg
adc
push
in
pop
pop
and
hlt
jae
or
mov
inc
mov
mov
fcoml
jns
xor
pop
ds
sub
push
repz
jge
xchg
sahf
and
iret
mov
mov
inc
cmpsl
mov
push
push
mov
xchg
das
pop
sbb
pop
adc
lcall
add
mov
rcll
mov
fwait
inc
outsl
jl
xchg
sbb
lret
adc
std
add
int3
jl
lock
xor
fcompl
adc
movsl
dec
das
jmp
loop
push
jge
mov
mov
and
loop
adc
movsl
cmp
sbb
mov
mov
scas
int3
subl
and
add
loop
add
sub
test
ror
push
push
push
lret
clc
nop
inc
popf
mov
insb
fs
xchg
imul
fstpt
pop
mov
push
icebp
fdivl
dec
lret
inc
mov
cmp
or
sbbb
add
cmp
mov
fldl
cs
fistps
out
cmp
sahf
popf
sti
into
pop
shrl
les
xor
mov
push
pop
mov
add
aad
std
loope
rcrl
or
inc
jmp
sbb
mov
int
mov
sub
int
scas
out
sahf
repz
dec
inc
nop
or
shlb
negl
in
push
mov
push
sub
pop
jl
fldl
lea
jmp
sub
in
rorb
repz
mov
inc
mov
cmc
and
push
add
sbb
addr16
sbb
pop
adc
icebp
iret
lods
xor
xchg
push
pop
cld
cmpl
adc
mov
dec
xchg
js
push
sbb
stos
arpl
call
bound
mov
aaa
lds
les
test
test
add
pop
mov
fwait
sbb
sub
fstps
pop
xlat
add
jl
mov
es
cmpsb
or
or
mov
mov
add
mov
jl
aas
cmp
nop
xor
or
push
pop
ljmp
xchg
and
testl
xchg
mov
std
mov
daa
add
in
fidivrs
in
pop
roll
mov
aaa
aas
push
loope
fcomip
sbb
and
jne
lds
arpl
ret
and
arpl
lret
dec
loop
in
in
inc
or
cld
push
xor
adc
shll
fmul
dec
gs
cmp
push
sub
aaa
pop
js
xlat
xlat
mov
pop
push
cmp
arpl
dec
or
cmpl
xchg
mov
idivl
lret
dec
arpl
addr16
jae
and
mov
es
out
pop
xchg
xor
cmp
stc
stos
inc
xor
test
push
inc
fiadds
lods
outsb
imul
bound
test
mov
jo
pop
jmp
mov
pop
cmpsl
cmc
inc
adc
ja
repz
aad
mov
insb
out
xchg
test
sbb
adc
fcompl
ss
sahf
fs
fcomps
bound
sub
ret
mov
fisttpl
fwait
inc
xchg
popf
enter
aam
loop
jp
stos
xor
das
inc
addr16
xchg
lods
xor
movsb
lahf
jbe
mov
mov
xor
data16
adc
push
dec
cmp
inc
ret
sahf
inc
dec
out
insb
adcb
outsl
cmp
add
rcrl
fwait
cmpsb
lret
aad
sahf
jecxz
cmpb
outsb
fdivrs
sbb
aam
sbb
mov
cli
cmp
jecxz
popa
test
push
lods
andl
test
mov
mov
mov
shll
addl
and
sbb
xor
pusha
push
shlb
and
std
std
clc
nop
mov
aas
cli
clc
bound
popf
push
lods
stc
pop
js
lock
scas
or
push
pop
adc
aam
mov
inc
and
bound
jp
movsb
push
xchg
fbld
jae
dec
jne
add
push
xchg
inc
cld
repnz
jo
ret
fstl
xchg
jbe
dec
xchg
mov
xchg
mov
cmc
adc
or
test
lcall
movsl
add
fxam
lods
xor
jle
pop
repz
or
add
push
xor
sbb
sub
xchg
push
push
pop
scas
nop
and
leave
mov
mov
mov
pushf
dec
sbb
out
and
sbb
das
cmp
shrl
lret
xor
filds
jle
mov
mov
mov
cmp
idivl
mov
addr16
call
imull
and
repz
or
cmp
test
mov
mov
push
mov
mov
in
fxch
cltd
decb
rcr
dec
mov
outsl
jo
add
fwait
or
rorb
imul
add
cs
shll
test
into
sqrtps
dec
stc
lret
arpl
lret
and
jge
lret
jnp
mov
dec
sbb
sub
pop
in
out
lahf
mov
sbb
outsb
pop
repz
pop
jecxz
daa
inc
or
fidivrl
jl
add
jne
or
out
imul
dec
leave
pushf
push
call
jbe
mov
aas
xor
in
pushf
sbb
daa
cwtl
out
mov
ja
cld
es
sub
mov
rorl
js
jp
shlb
ljmp
addb
push
loope
pop
mov
add
loope
pop
ja
jmp
xor
in
and
les
cmp
pop
mov
add
or
xor
mov
rorb
inc
aas
mov
icebp
cmp
movsb
pop
gs
data16
stos
iret
mov
push
add
jb
push
cld
mov
and
repnz
sub
and
push
add
add
sbb
jl
in
and
dec
xchg
pop
jp
cmp
pop
lock
dec
adc
clc
pop
lea
sbb
es
adc
sub
xchg
xchg
cld
pop
bswap
jb
sbb
dec
aas
jo
pop
shlb
jo
cmc
test
les
popf
mov
out
fcomps
ret
adc
xchg
stos
xchg
and
xchg
sar
or
push
and
add
add
inc
fdivrs
and
sub
js
xchg
cmp
push
add
cmpsl
in
mov
cld
shlb
rolb
and
sti
test
das
xchg
jno,pt
adc
sub
in
cltd
rclb
jne
adc
loope
insl
cmp
ja
adc
inc
in
ds
xor
stos
ja
loop
cmp
stos
jmp
out
subb
push
hlt
lock
cs
jne
adc
lods
stos
in
sub
out
mov
in
pcmpeqw
adcl
mov
aad
inc
and
divl
inc
adc
xchg
fstpt
sarb
mov
out
icebp
lret
rdmsr
fucom
lcall
aaa
arpl
add
and
sub
hlt
ja
cmpsb
test
mov
xor
jae,pn
dec
jns
sub
ljmp
or
xlat
int
mov
pop
xchg
dec
call
pop
loop
hlt
mov
ss
js
es
mov
jg
jne
pusha
insl
ret
sahf
icebp
movsb
dec
mov
test
leave
and
adc
data16
jecxz
ds
mov
insb
push
dec
out
and
xor
adc
inc
sub
idiv
mov
sbb
or
fistl
call
inc
inc
lods
es
push
add
sbb
mov
stc
ret
jo
add
pop
pop
inc
mov
arpl
xchg
int3
mov
jo
mov
mov
jge
shlb
dec
lock
jp
aam
aaa
pop
push
imull
adc
sahf
in
sbb
dec
add
inc
push
sbb
lods
adc
idivl
dec
dec
ret
hlt
lock
arpl
es
pop
pop
test
mov
mov
ret
mov
jne
xor
aad
cmp
sbbb
loopne
mov
xchg
out
jne
out
cmp
xor
mov
cmp
loop
dec
push
pop
into
in
jbe
mov
cmp
xchg
xor
jnp
cmpsl
pop
movsb
popf
adc
mov
or
je
jge
sti
pop
mov
pop
das
rorl
fs
cmp
mov
sti
ret
bound
ljmp
fisubl
insl
push
sub
movsb
ds
lods
cld
enter
xor
adc
leave
xor
fdiv
rcr
pushf
sbb
fwait
dec
mov
pop
popf
sbb
xor
pusha
test
and
scas
mov
cli
dec
testl
repz
negl
ret
push
cwtl
cld
jl
in
aad
aas
int
push
add
imul
xor
pop
push
xchg
mov
pop
in
sub
in
inc
adc
aas
dec
int3
jo
sub
imul
xorb
pop
jae
lret
jp
inc
cmpb
mov
clc
adc
and
cwtl
pusha
negb
test
and
fdivl
mov
sub
push
imul
xor
stos
ret
push
cmp
aaa
fcomps
ljmp
movsb
int3
ds
imul
xchg
icebp
xchg
jl
mov
ds
push
outsb
sbb
xchg
or
add
push
sbbl
push
pop
mov
andl
dec
mov
xor
dec
cmp
pop
push
sbb
mov
pop
es
das
and
push
ja
jbe
push
cwtl
fs
aam
scas
adc
pop
mov
in
xchg
lcall
fadds
push
in
cmp
push
cmp
dec
or
inc
inc
sahf
mov
jmp
repz
xchg
mov
xorb
ljmp
pop
pop
hlt
xchg
and
nop
or
push
push
jne
cld
fcmovbe
cmp
push
xchg
sbb
mov
mov
sub
rolb
movsb
pop
jns
sbb
inc
push
or
aad
cld
jae
push
cwtl
addr16
push
std
mov
test
jle
shlb
repz
mov
arpl
pusha
cmpsb
int
xor
lret
push
int
test
in
add
pop
int3
xchg
popa
out
jp
das
psadbw
xor
hlt
pop
pop
or
rclb
xor
daa
into
xor
ss
out
scas
aaa
loopne
push
mov
pop
lret
inc
mov
scas
enter
dec
call
lock
mov
ss
mov
add
outsb
into
or
xor
add
insb
xchg
loop
lods
add
je
pop
aas
adc
enter
repnz
dec
xchg
push
test
cmc
test
std
adc
lds
movsb
cmp
cld
sbb
xor
jne
lods
or
mov
test
push
cld
and
mov
mov
nop
and
adc
xchg
cli
sbb
push
xor
cmpsl
cmpsl
ret
dec
inc
push
and
subl
aas
adcb
jp
and
nop
stos
mov
mov
repnz
lahf
cmp
cmc
dec
push
movsl
lcall
sbb
rcrl
cmpsl
jge
jb
jb
pushf
mov
jns
push
pop
cwtl
cmp
insb
or
pop
pop
mov
xor
cld
dec
jle
fwait
lods
inc
sub
sub
hlt
mov
lahf
pop
mov
jae
push
dec
js
shrb
cmc
jmp
push
loope
sbb
lcall
sub
shlb
nop
mov
stos
and
jo
xchg
lea
dec
in
shlb
ret
jl
pop
adc
lods
xchg
movsb
sbb
neg
fucom
outsb
jge
mov
adc
je
ss
push
iret
and
rcrl
test
insb
cmpsb
push
popf
cmpsb
push
lahf
cwtl
mov
push
aam
rorl
jg
xchg
dec
std
cmc
cmp
pop
add
outsl
mov
lods
xchg
fs
mov
test
adc
fistl
xor
jmp
test
jmp
mov
repnz
mov
repnz
pushf
sbb
adc
aaa
inc
and
jno
add
push
arpl
pop
mov
sbb
pushf
cmp
movd
leave
jl
push
popf
cli
das
insb
mov
mov
fnstenv
jne
into
outsb
xchg
dec
sbbl
push
cld
jbe
popa
inc
in
fisubl
out
add
pop
clc
dec
push
cmpsb
add
push
xor
movsb
push
rol
lahf
dec
cmpsl
mov
icebp
xorb
scas
lods
fildll
push
push
dec
cmp
xchg
push
mov
fmul
fucomi
mov
fsubs
hlt
testb
ds
jmp
jne
outsl
mov
or
xchg
sbb
clc
mov
daa
stos
rolb
in
or
imul
sub
mov
flds
mov
mov
jne
or
pop
cmc
fisttps
sbb
scas
aas
mov
cmp
in
addr16
mov
mov
and
enter
out
lahf
xor
push
adc
loope
out
cmp
les
dec
sub
mov
inc
mov
jle
call
push
data16
pop
mov
push
adc
popa
sub
inc
jnp
sbb
sbb
xor
sub
aaa
imulb
push
jmp
sub
mov
mov
push
popa
xchg
lcall
adc
adc
hlt
mov
aas
or
pop
xchg
cli
filds
cmp
repz
test
pop
out
test
shlb
repz
pop
mov
mov
ret
repnz
dec
mov
lcall
lahf
imul
js
adc
xorl
inc
jmp
repnz
loop
sbb
dec
push
add
shll
pop
or
stc
lahf
lcall
lock
adc
aam
divl
clc
test
mov
add
outsl
lds
or
add
das
orb
mov
scas
xor
ss
or
ja
or
int3
mov
pop
in
nop
sbbb
lret
jno
add
in
xchg
repz
mov
stos
testb
cltd
mov
pop
test
sysexit
mov
inc
addr16
xchg
and
jecxz
and
jb
mov
aaa
int
sahf
lahf
jmp
xorb
pop
out
gs
xchg
adc
sub
push
aaa
scas
mov
jno
aad
ror
dec
push
inc
and
fnstsw
fs
push
mov
inc
repz
adc
mov
orl
cmp
mov
xor
icebp
in
out
clc
xor
mov
outsb
stos
les
movsb
jg
mov
add
xor
cmp
dec
std
dec
ficompl
add
sbbl
and
jbe
jle
cli
aas
aad
fsubrs
push
mov
pushf
mov
cld
adc
arpl
xchg
fmul
inc
lods
loopne
xchg
pop
call
pop
subb
xchg
enter
mov
les
mov
mov
jmp
jnp
arpl
rcrb
pop
add
testb
mov
mov
cwtl
jg
in
dec
test
lods
lcall
popf
ret
orl
loopne
lret
cmpsb
mov
clc
outsl
mov
fists
cmc
mov
mov
add
dec
mov
xchg
lcall
int
les
mov
mov
sub
mov
pop
fdivrl
mov
adc
subb
ljmp
xor
clc
jp
xchg
lods
movsl
stos
add
mov
or
push
xchg
push
loopne
dec
lret
pop
push
dec
pop
push
popf
and
orl
jb
and
pop
cld
jns
in
pop
aad
int
insl
xchg
insb
dec
and
scas
inc
sbb
into
in
mov
pop
inc
sti
mov
call
daa
loop
and
les
gs
pop
lcall
mov
inc
mov
sub
cltd
jbe
xchg
rclb
sub
repz
sub
xor
and
rclb
sub
inc
leave
fs
xor
pop
in
inc
inc
cmp
pop
xor
mov
insb
test
call
faddl
icebp
das
out
pop
or
mov
sarb
loop
lods
sbb
in
popa
nop
lahf
push
addr16
mov
dec
adc
ret
xchg
popf
nop
movsl
bound
outsl
loop
nop
icebp
inc
movsb
add
dec
add
fpatan
pop
mov
or
jecxz
in
jle
add
cld
sub
lock
pushf
xorb
add
adc
inc
jl
lret
add
insl
add
out
fwait
lods
and
sub
mov
mov
sub
ret
ja
sub
std
push
jb
fbld
push
out
add
xor
in
leave
je
jbe
cmpsl
shrb
cmp
add
push
dec
fisubl
mov
repnz
pop
pop
testl
adc
ljmp
cmp
imull
sbb
xorb
sbb
xor
aam
pusha
ret
negl
pop
push
lret
jbe
fsubl
shll
cwtl
jae
pop
aad
jae
inc
add
out
xor
push
jp
fsubrs
push
sarl
sbb
add
js
addl
add
inc
jne
xchg
lods
sub
lods
cmp
leave
jp
jmp
jp
lcall
pushl
fstl
push
repz
enter
pushf
test
xchg
jnp
push
idivl
out
sbb
call
inc
daa
pop
testb
xchg
aas
aaa
fs
push
fwait
test
adc
in
xchg
movsb
movsl
pop
push
ja
cwtl
sub
int
in
lods
lea
and
mov
inc
jmp
push
mov
mov
nop
inc
ljmp
aam
and
js
daa
and
pusha
movsl
fdivl
add
inc
icebp
jae
pop
xor
adc
rolb
std
xchg
movsl
mov
cltd
enter
cltd
push
pushf
mov
rcll
cmpsb
dec
imul
adc
sahf
pop
mov
je
gs
jecxz
aam
in
fstpl
sbb
add
mov
pushf
sub
hlt
and
ja
xchg
sbb
xchg
add
lods
js
insl
fdivrs
push
mov
jp
scas
cmp
iret
adc
gs
and
icebp
adc
mov
pop
outsl
dec
roll
sub
cmp
push
fimull
mov
mov
xchg
mov
push
pop
xchg
fs
repnz
stos
dec
and
cwtl
aaa
insl
push
mov
mov
push
outsl
les
push
inc
xlat
rcl
mov
inc
nop
and
scas
testl
sub
mov
orps
push
mov
lahf
stc
push
mov
or
cmp
pushf
xchg
loop
bound
pop
cmpsl
mov
int3
and
hlt
push
xchg
inc
cmp
cmpsb
adc
inc
movsb
pushf
jl
sbb
imul
mov
lds
ss
sahf
sahf
test
mov
lods
inc
xor
pop
rcrl
mov
gs
movsl
lret
push
cs
negb
ss
dec
incl
test
mov
lret
ffree
dec
push
cmc
dec
xor
mov
pop
dec
sbb
sub
mov
sbb
cmp
sbb
cwtl
adc
ret
lods
cmp
push
inc
repz
xor
cmp
call
insl
cld
pop
loopne
cmp
mov
out
cmp
lods
scas
jl
inc
fdivl
pop
dec
lea
adc
sub
inc
js
mov
std
icebp
iret
add
push
push
scas
outsb
and
cmp
subl
pop
or
jge
jo
or
mov
imul
pusha
movb
sub
inc
jbe
test
ljmp
cmc
andl
cli
adc
loopne
imul
dec
pop
repnz
lds
sbb
push
jbe
push
xchg
mov
sbb
lock
arpl
leave
mov
push
cltd
test
orl
cmp
rclb
xor
int3
inc
aas
dec
add
cltd
add
inc
cmp
je
cmpl
adc
adc
nop
mov
ljmp
xchg
iret
inc
dec
push
inc
pusha
nop
fists
icebp
test
xchg
lea
inc
mov
cli
xor
push
jns
and
cmpsl
outsl
shll
ss
ret
ljmp
fistpl
and
adc
mov
and
loop
or
xchg
mov
rcrl
sbb
xlat
dec
out
hlt
movsl
jmp
pop
sub
aad
push
pop
and
push
movsl
cltd
pop
or
push
aaa
leave
jle
lret
mov
inc
mov
mov
mov
dec
iret
mov
pop
sbb
or
ret
add
stos
push
mov
jns
pusha
mov
jae
sti
ds
fimuls
mov
js
arpl
ret
cmpsb
nop
sbb
xor
js
test
dec
das
sbb
popa
xchg
inc
sub
and
arpl
scas
lds
push
notb
pop
xchg
cmpsb
and
inc
xchg
add
mov
inc
inc
mov
and
sub
and
add
daa
fnstenv
jmp
add
aam
fwait
xlat
cmp
inc
insl
ss
pushf
addb
adc
sbb
rclb
in
mov
jns
aad
int3
pusha
lock
cmpsl
aam
clc
sbb
dec
push
mov
sub
jecxz
out
dec
xlat
das
enter
bound
adc
loopne
cmp
inc
mov
xorl
insb
and
push
gs
cmp
pusha
adc
scas
add
gs
pushf
int
push
jnp
mov
mov
push
inc
mov
daa
lock
adc
cwtl
or
sub
add
xchg
adc
sbb
pop
push
push
es
jns
lea
or
jg
std
ljmp
test
inc
inc
mov
mov
js
sbb
lret
sbb
mov
push
push
cmpsb
aam
fwait
or
fnstenv
andl
push
pusha
jg
hlt
push
aam
icebp
aaa
setns
movsb
xor
inc
jo
mov
ljmp
and
or
pop
hlt
arpl
insb
jns
jo
es
cmc
mov
adc
xor
xchg
xchg
xorl
pop
out
and
popa
insb
sub
dec
aaa
or
and
xor
les
lret
aam
add
adc
dec
aam
xchg
aam
push
cmpsb
stc
sub
push
cmc
jno
push
repz
fimuls
mov
cmpsb
movsb
in
mov
stos
jmp
xchg
pop
dec
push
iret
out
dec
pop
test
dec
shlb
pop
cmp
push
add
xor
adcb
and
and
and
push
inc
sub
pop
shl
mov
or
in
mov
pop
pop
dec
cmp
rcrb
lods
lds
out
and
or
or
fdivrl
sub
in
std
rcrl
and
iret
enter
aaa
repnz
insb
xchg
fbld
je
cmp
out
movnti
lret
mov
dec
pop
outsb
ljmp
push
outsb
imul
inc
insb
call
lock
sti
dec
dec
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
jge
or
jp
sbb
xchg
dec
lcall
stos
add
or
xor
mov
pop
adc
pop
mov
mov
aaa
fucomip
idiv
mov
add
jmp
mov
or
lods
inc
icebp
adc
sbb
jg
xlat
or
mov
jno
jno
int
imul
mov
dec
movsb
add
icebp
xchg
push
jbe
add
iret
add
mov
mov
mov
cld
pop
push
mov
sbb
xlat
mov
fs
adc
mov
dec
lods
xor
bound
out
push
cmp
rcr
ds
inc
and
cld
jno
fwait
dec
cmc
rorl
lahf
push
icebp
cli
xor
xchg
int3
jp
dec
shr
repz
mov
insl
sbb
int
cmc
cmp
das
fimuls
mov
jmp
cmpsl
xlat
cltd
mov
stos
adc
mov
mov
in
xchg
fisubl
pusha
jle
cmp
mov
mov
movl
lods
pop
lret
aad
jl
movsb
cmp
rclb
add
mov
add
in
ss
hlt
xchg
sarb
lcall
or
sub
inc
notl
mov
lcall
insl
loope
lds
les
nop
pop
or
adc
mov
imul
xchg
inc
fstps
xor
pop
jns
ror
push
xor
xchg
loopne
push
jno
add
add
loope
jmp
fmull
mov
mov
bound
pop
lods
inc
add
jbe
jb
xchg
xor
xor
xor
je
jecxz
aaa
xchg
sahf
lret
lcall
repz
cmpsb
push
jmp
dec
lcall
push
lods
in
movsb
jle
sarl
testl
mov
lea
mov
aaa
sbbl
leave
out
sub
and
ret
sar
cmc
push
lds
cld
das
in
and
fisttps
push
or
scas
xchg
or
insl
mov
std
cli
movsl
int
xor
out
aam
cs
pushf
clc
ret
lret
js
out
lcall
or
iret
jns
loope
xchg
scas
cmpsb
cmc
rcr
ljmp
inc
xchg
sbb
and
push
mov
sahf
bound
xchg
pusha
xchg
stc
repz
cmp
pushf
xchg
loopne
sub
push
popa
xchg
clc
mov
or
adc
xlat
stos
push
mov
mov
mov
rolb
jae
and
shll
sbb
fcmovnb
or
or
lcall
inc
pushf
daa
and
adc
out
sbb
dec
fbstp
cmpsb
lods
xchg
xor
fiaddl
repnz
lret
dec
in
outsl
adc
xchg
loope
add
jg
sub
xor
dec
js
std
call
in
push
lahf
dec
lea
dec
or
pop
outsb
adc
popa
push
jo
xchg
lahf
pop
mov
cwtl
scas
jl
sbb
out
lds
stos
movsb
inc
sbb
ja
out
xchg
jge
add
jp
loopne
call
dec
stc
outsl
cmc
sbb
dec
loopne
sar
aad
add
loop
sbb
xchg
pop
xchg
xor
sbb
arpl
xor
push
in
fwait
xchg
mov
dec
cmp
cmp
mov
or
xchg
lret
sbb
popf
xor
aaa
loop
fstl
fstl
imul
sahf
mov
jg
in
gs
cmpsb
test
xor
les
add
sub
mov
ret
mov
ret
add
das
pop
sub
hlt
xchg
rorl
outsb
sub
gs
mov
lds
dec
test
add
cmp
cs
je
loope
pop
aad
sbb
loop
les
les
push
push
dec
add
lods
lret
movsb
call
xlat
cltd
mov
cli
scas
shrl
xchg
jno
ret
sub
jge
test
in
cli
sbb
dec
xchg
xchg
lret
push
movsl
ret
fcmovne
mov
test
loop
mov
push
mov
pop
or
xor
sarb
cmp
sti
xchg
pop
mov
mull
and
pop
lahf
mov
je
cmp
lret
sub
push
cltd
arpl
cld
popf
dec
mov
xchg
inc
jg
repnz
dec
and
rol
mov
fiaddl
xlat
popa
scas
mov
mov
xlat
sub
in
jnp
stos
fidivs
flds
and
movmskps
out
push
sarb
pop
or
adc
icebp
xor
div
mov
xchg
cmp
push
in
stc
or
ja
incl
in
push
sub
inc
ret
or
mov
lods
test
lret
imul
arpl
or
adcb
or
lret
and
cmc
adc
pop
icebp
imul
nop
test
inc
sub
mov
pop
xchg
sbb
mov
push
xor
cli
arpl
movsl
sub
inc
shr
sbb
pop
sbb
in
insb
fnstsw
xchg
pop
mov
mov
dec
pop
daa
mov
jne
hlt
daa
rol
jecxz
push
push
bound
test
hlt
js
push
lret
ss
out
mov
pop
cmp
js
inc
arpl
stc
and
and
scas
sub
adc
insb
ficomps
or
les
jns
pop
repz
ja
in
maskmovq
sarb
stos
rcll
cwtl
lods
enter
xchg
jnp
jne
jp
push
aas
mov
leave
out
add
out
incb
ret
or
out
push
decb
bound
lret
addr16
lods
outsl
cmp
out
jmp
mov
or
push
mov
push
push
in
sbb
dec
inc
dec
out
cmp
pop
mov
fcompl
inc
enter
jmp
data16
xchg
pop
into
pop
mov
dec
scas
mov
loope
test
lea
mov
push
push
icebp
jo
dec
inc
cmp
cli
lds
iret
pause
cmp
repnz
jne
xchg
adc
sub
xor
and
rcr
roll
stos
inc
xor
sub
pop
inc
arpl
sbb
push
repz
in
dec
in
cld
fwait
cltd
scas
cmp
pop
jl
mov
and
inc
pop
sub
insl
sbb
std
and
scas
xchg
and
fldt
daa
push
or
jl
lods
aas
xchg
xchg
ret
leave
test
push
xchg
dec
cld
or
inc
sbb
jb
loopne
cltd
sarb
jne
lahf
push
pop
mov
pop
lock
sub
or
movsb
xchg
cmpsl
and
push
dec
mov
xor
test
pop
cmp
popf
xchg
dec
mov
or
ret
cwtl
sbb
jno
xchg
mov
mov
adc
or
xlat
mov
stos
push
daa
and
test
sahf
pop
xchg
push
push
aad
loop
mov
data16
iret
push
sbb
clc
xor
cmp
cmp
les
add
rorl
jecxz
pop
mov
imul
jmp
xchg
and
ficoml
in
pop
or
xchg
in
scas
xor
push
add
mov
sbb
cs
pop
popf
dec
jle
push
lds
out
xchg
inc
xor
inc
xor
pop
mov
sti
lods
addl
cmp
outsb
ljmp
hlt
jne
out
jg
test
mov
jmp
in
cwtl
push
adc
push
js
cltd
xorb
inc
xor
pop
das
mov
cltd
dec
in
jp
lret
xchg
ss
fldt
or
jle
mov
imul
pop
xchg
pop
xor
cmp
xchg
jnp
lea
lea
mov
in
mov
mov
sbb
frstor
pop
sti
mov
xchg
pop
stc
or
aaa
repz
and
jbe
std
unpcklps
and
cwtl
lret
xchg
sub
and
movsl
mov
daa
jle
pop
sub
test
push
jecxz
sub
sub
add
xor
ss
cld
xor
gs
xchg
int3
aad
push
mov
sub
cltd
js
inc
pop
repz
add
shl
jnp
out
repz
hlt
fdivrl
sub
jmp
adc
mov
insb
ret
mov
jl
aam
or
fwait
xchg
lock
into
and
sti
pop
or
ljmp
fs
lret
push
adc
lods
add
xchg
mov
add
xorb
and
mov
mov
in
pop
mov
mov
test
adc
sub
sahf
lret
fists
add
lock
jns
mov
inc
repnz
fnstcw
leave
repz
lahf
jge
mov
addl
pop
cmp
pop
jns
jmp
mov
xor
xchg
and
push
sub
cmp
dec
cwtl
adc
pop
test
mov
xor
add
sbb
push
insl
jge
cmp
cmc
or
clc
loope
xlat
dec
jo
sub
sbb
inc
repz
xor
sbb
mov
data16
inc
push
pusha
pop
jbe
fadds
mov
das
lods
sub
imul
jnp
fmull
test
test
or
loopne
xchg
out
jno
popf
lahf
push
jns
outsl
fldcw
and
mov
clc
outsl
sbb
pop
cmc
jo
data16
sub
lock
fwait
rcrb
scas
sub
dec
cmpsl
xchg
data16
adc
or
sub
pop
mov
shll
ret
dec
cmp
cmp
sarl
bswap
or
clc
call
sub
idivb
js
out
cmp
xorl
mov
js
inc
addr16
imul
jp
mov
xchg
and
xlat
jne
inc
cli
out
call
les
mov
insl
cwtl
cmc
add
inc
push
sbb
popa
and
insb
pushf
xor
call
add
push
adc
mov
popa
dec
sub
xchg
lret
jmp
out
stc
aaa
jae
int3
cltd
fs
outsb
sbb
dec
out
shlb
orl
cmp
addr16
mov
js
insl
icebp
popf
movl
outsl
ja
sbb
mov
push
or
fdivrs
inc
jmp
add
jle
movsl
xchg
addr16
loop
jno
das
xchg
pop
xchg
sarb
or
lds
mov
xchg
daa
add
out
add
dec
aam
scas
aas
aas
sub
pop
xorl
cmp
in
pop
mov
insb
sahf
ljmp
fimuls
mov
lods
mov
xor
pusha
and
repz
add
jl
aam
xchg
out
orb
out
scas
fistpl
int
or
jno
clc
in
mov
loop
stos
jmp
mov
fnstcw
lds
push
shlb
jo
pop
cli
mov
test
push
lods
lods
in
cltd
and
mov
in
mov
cmp
loopne
mov
fnsave
cmpsb
iretw
add
sub
pop
mov
mov
shrl
arpl
ja
mov
enter
popf
cmp
jnp
bound
mov
xor
adc
popf
push
push
inc
arpl
pop
fsubs
or
lods
sbb
out
jl
sub
mov
xchg
add
dec
add
sahf
cmp
inc
push
imul
or
add
cmc
xchg
sub
jnp
adc
add
dec
pushf
scas
push
cmp
push
cli
and
fwait
sub
lret
insb
dec
scas
push
xchg
xor
loop
mov
call
or
out
imul
ja
mov
mov
sbb
jmp
scas
and
xchg
sbb
xchg
es
aas
sub
cmpsl
cli
push
xchg
sbb
lcall
outsl
test
popf
lcall
mov
push
enter
sbb
jp
dec
out
sbb
xor
rclb
aam
jecxz
cmp
cltd
add
out
mov
fidivl
pushf
inc
cmpsb
add
mov
sbb
data16
inc
fsubs
push
inc
cmpl
loope
repz
xor
lahf
mov
push
xchg
add
mov
jl
mov
lahf
adc
lcall
push
imul
mov
adc
cmp
gs
sbb
inc
out
mov
fldenv
add
xchg
mov
mov
mov
fdivp
add
inc
add
scas
mov
addr16
sbb
dec
pop
ljmp
jbe
adc
mov
pop
daa
or
out
loope
push
addr16
loope
js
mov
fiaddl
inc
xor
lods
mov
cmp
jg
or
enter
jl,pt
push
movsl
repnz
mov
out
adc
loop
sub
repnz
shll
mov
leave
outsl
int3
cmp
shlb
adc
add
sbbb
jge
daa
jo
lds
adc
lcall
xor
fcoms
jp
in
hlt
lret
icebp
std
testl
enter
add
mov
push
cmp
xor
nop
adc
lret
mov
call
les
in
iret
mov
fisttps
mov
dec
fldt
adc
inc
es
imul
cld
mov
jne
int
mov
sahf
roll
cwtl
mov
push
mov
adc
jp
xor
cmp
leave
dec
inc
xor
jecxz
lock
xchg
sahf
sbb
pop
arpl
xor
cli
adc
pop
test
repnz
orb
jp
lods
mov
inc
cmpsb
fmull
mov
iret
loopne
jmp
inc
pop
daa
dec
mov
adc
pop
insb
sub
pushw
pop
outsl
pop
push
add
cmpsl
roll
aam
mov
sub
jb
fucomip
sbb
cmpsl
inc
imull
mov
mov
dec
out
and
cwtl
inc
adc
mov
pop
dec
xchg
inc
pusha
aaa
setnp
rcll
popa
mov
or
clc
out
imul
scas
adc
jg
mov
into
cwtl
test
mov
cld
lods
mov
in
push
ret
adc
std
xor
dec
jae
inc
arpl
cld
cwtl
out
test
out
sub
pop
mov
and
ret
out
sahf
test
jp
test
test
xor
cmp
mov
test
sbb
in
and
mov
dec
lock
shl
push
xchg
fwait
pop
int
out
and
xor
inc
xor
es
jmp
loop
cmp
rcrl
out
aas
jl
sbb
jo
add
lcall
adcb
gs
or
lds
dec
sub
fisubrs
testb
add
in
sbb
mov
ret
cmp
andl
orb
adc
in
jno
in
sub
cwtl
popa
mov
shll
xchg
push
jp
sub
jae
mov
movsl
push
xor
out
mov
vmovsd
push
inc
jle
or
sub
inc
cmpsl
nop
mov
addr16
push
in
stos
jmp
sahf
out
arpl
cli
jns
bound
mov
aam
add
and
lock
jle
mov
nop
and
xor
repz
fistl
subb
xchg
jae
mov
and
push
dec
xchg
push
xorb
lret
mov
xor
in
es
or
sbb
stos
jae
push
cld
push
inc
cmp
add
pop
les
ss
push
xchg
mov
test
cmp
push
xor
repz
push
adc
out
mov
sbb
ss
push
push
jo
movsl
pop
mov
and
xor
shl
pop
call
fmuls
sbbl
js
ds
call
loope
aas
hlt
mov
lds
pop
movsl
leave
leave
push
pop
sub
pop
les
and
xchg
lahf
jle
fs
shrb
aas
cmp
or
lahf
mov
jg
nop
and
loopne
push
addr16
stos
push
mov
or
insb
inc
les
inc
mov
dec
or
lock
repz
test
jno
add
imul
push
push
mov
je
mov
mov
outsb
push
sahf
in
pop
mov
sub
aam
jle
inc
xchg
mov
lods
jo
andb
enter
inc
std
lds
fdivp
jo
and
in
imul
std
or
loop
and
mov
adc
mov
xchg
mov
jo
mov
pop
add
lcall
sbb
mov
pusha
in
pop
xchg
ja
div
lcall
xor
ja
mov
imul
cmp
jge
add
stc
int
lods
fisubrl
fistpl
mov
push
arpl
in
inc
fimull
bound
mov
mov
pop
push
movsb
rclb
cmpsl
aas
fcomip
fsubrl
aas
in
push
mov
faddl
pop
mov
sarb
mov
je
dec
leave
bound
sbb
nop
pop
mov
in
lahf
dec
hlt
scas
stos
mov
pop
push
call
mov
daa
sbb
add
cli
daa
out
stos
mov
push
fcomps
cmp
rorb
fs
xchg
lock
in
lcall
cmpb
imul
pop
inc
fisttpl
xchg
sub
mov
inc
enter
jmp
shll
sar
hlt
push
push
pop
push
add
and
sbb
fsubrs
lea
nop
dec
aam
into
inc
movsl
movsl
pop
clc
sub
pop
jp,pt
repnz
aas
adc
push
es
cli
or
adc
jne
rclb
xlat
push
ja
xchg
enter
mov
faddl
lea
test
scas
xchg
or
mov
dec
lret
das
iret
jmp
pop
mov
out
sub
cmp
jg
mov
xchg
or
outsl
mov
ret
mov
cs
cmp
mov
in
gs
movhps
fsubrl
jmp
jno
adc
cmp
jnp
pop
scas
in
jb
and
scas
mov
dec
cmp
adc
cmp
inc
sarb
nop
xchg
imul
inc
sahf
test
cwtl
sbb
mov
add
and
dec
or
in
sbbb
testl
das
fs
jno
mov
add
test
mov
add
pop
rcr
aaa
in
les
adc
cmp
pop
xchg
roll
fisubrs
out
repz
fninit
and
in
cmpsl
sub
dec
jp
or
cmp
in
in
stos
negl
loope
roll
cmp
dec
imul
pop
ja
mov
jns
adc
xor
ret
add
aad
jae
lcall
iret
loop
lcall
cmpsl
xchg
jae
das
jnp
lods
adc
sbb
jp
inc
push
rcrb
cli
cmp
mov
add
outsb
cmp
in
cwtl
lds
and
adc
ljmp
sbb
repnz
lods
rclb
or
stc
lods
dec
sub
fmull
xor
mov
not
cmp
mov
rcrl
sti
stos
cmp
cmp
sti
nop
xor
cmp
jmp
jnp
repz
sbb
pop
aas
loope
or
enter
jge
call
fiaddl
lock
bound
in
imul
int3
cltd
xchg
mov
daa
add
mov
or
shll
xchg
lods
imul
jge
xor
sub
inc
xchg
shrl
lmsw
out
sar
lods
repnz
push
insl
mov
cmp
xor
cmp
add
cmpsb
mov
and
or
dec
inc
and
mov
in
jb
or
pop
add
inc
into
push
xchg
aam
push
sarl
jge
mov
mov
mov
xor
sub
ror
mov
mov
out
sub
sub
xchg
movsb
xchg
repnz
cli
dec
pop
aad
aas
cmpsl
lahf
inc
xor
movsl
repz
js
jle
gs
pop
and
jbe
jp
test
mov
dec
inc
imul
insb
lock
or
fnstenv
lock
pop
xchg
inc
mov
cmp
sbbb
hlt
push
mov
cmp
addr16
insb
jmp
mov
lret
int
sbb
stos
sbbb
insl
pusha
dec
lds
inc
les
xchg
stos
enter
push
sub
and
pop
andb
pop
xchg
lret
lods
aaa
and
mov
je
dec
rorb
pop
mov
jbe
bound
sbb
sub
mov
shl
mov
in
inc
jge
stos
add
sub
add
bound
popf
pop
mov
popl
jbe
push
mov
imul
andl
scas
mov
rcl
xor
push
mov
push
iret
jl
add
adc
lock
int
dec
and
adc
imul
mov
push
pslld
inc
cmp
fwait
add
cmp
inc
scas
push
mov
dec
pop
mov
lods
hlt
sbb
and
fdivl
mov
in
pop
sbb
mov
jbe
pop
xor
inc
sub
ss
fbld
fdivs
rcll
push
cmp
aas
inc
xchg
sub
scas
adc
mov
xchg
push
mov
lret
fmull
movsl
js
add
shl
push
or
js
test
or
popf
push
dec
and
push
mov
sbb
out
lret
sub
mov
push
enter
lds
imul
in
pop
outsl
add
cmc
inc
push
repnz
fistpll
push
lock
push
fnstenv
sub
popa
add
pop
outsb
jns
aad
iret
in
nop
push
cmpsb
pop
fs
mov
mov
push
inc
mov
stc
mov
jns
or
and
pop
xor
cmp
or
fnsave
sar
ja
aad
movsb
cwtl
int
scas
push
cwtl
mov
imul
push
aam
lcall
das
lahf
imul
sub
jo
or
repz
mov
andb
push
push
dec
adc
sarb
sbb
jnp
sahf
xchg
dec
cmp
call
jb
stos
scas
dec
or
test
leave
inc
pop
cmpl
xor
adc
jp
mov
dec
sub
test
push
adc
push
xor
push
lahf
ja
das
fcmovne
int3
sti
push
mov
push
shrl
mov
fs
push
pop
and
mov
fidivrl
idivl
icebp
test
jno
pop
lea
stc
pusha
sarb
aas
sbb
out
movsb
mov
testl
sub
mov
lahf
xor
mov
push
mov
and
dec
jp
xlat
int3
inc
cli
fdivs
insb
lock
call
rorb
pop
pusha
cmp
idivb
fs
xchg
or
pop
mov
int3
outsl
and
fbld
imulb
or
mov
mov
aaa
sub
sbb
add
pop
sahf
subl
aaa
cmp
dec
lret
mov
int3
push
adcb
mov
and
adc
jae
into
out
cmp
out
adc
decw
shr
fcomps
cmp
cmp
jbe
or
adcb
push
mov
xor
jp
sarb
call
fdivrs
push
add
in
add
js
or
dec
xchg
imul
fstps
insl
scas
mov
inc
adc
inc
cmpsl
cmp
es
pop
in
or
stos
mov
fstp
daa
or
in
jecxz
or
call
je
add
adc
cmp
js
dec
cmc
xchg
pop
jg
xchg
pop
jns
push
dec
add
sti
pop
lahf
pop
scas
mov
nop
xchg
hlt
inc
int3
or
out
lea
dec
das
mov
mov
je
fcomps
lea
sub
iret
stc
fcomps
dec
cld
adc
movsb
pushf
jmp
pushl
lret
sbb
xor
and
test
adc
cmp
inc
or
int
cli
pop
cmp
rol
mov
pop
sbb
xchg
scas
mov
mov
mov
jmp
mov
repz
push
fwait
imul
test
lahf
imul
fwait
pop
jge
jo
mov
jnp
aad
lds
xchg
mov
clc
insb
movsb
jl
cmc
aam
aam
push
and
sbb
mov
jmp
aam
inc
mov
mov
jne
sub
es
jmp
cmpl
std
dec
and
out
and
inc
mov
cmp
stc
cld
mov
aas
jnp
leave
mov
jno
adc
xlat
fildll
mov
out
shl
xchg
dec
ja
push
push
jo
mov
imul
nop
sbb
pop
and
push
icebp
sti
sbb
sub
push
xor
clc
jecxz
jge
bnd
sub
mov
movsl
cmp
fwait
gs
mov
stos
pop
mov
dec
adc
loope
iret
std
jmp
leave
push
outsb
lods
cmp
mov
jmp
cmpl
out
push
mov
mov
inc
jno,pn
orb
stos
out
out
or
icebp
mov
xchg
aaa
test
lretw
adc
aam
mov
jno
jle
jae
js
jp
loop
jns
mov
roll
dec
mov
pop
fisttpll
test
sbb
sbb
mov
cmpsb
jno
cld
pop
sahf
mov
fs
inc
mov
xchg
mov
imul
fdivs
jns
jns
cli
pop
push
mov
jnp
into
roll
push
xor
mov
int
xchg
aas
daa
movsl
and
in
xor
lret
sub
and
xor
dec
pop
or
push
stos
jge
jnp
xor
in
addl
mov
cmp
xor
adc
mov
sti
and
pop
lock
add
jb
rorl
incb
add
in
jae
mov
in
push
push
sub
mov
pop
mov
sub
dec
add
sarl
call
push
mov
mov
jne
movsb
repnz
stc
cmpl
fmulp
push
or
pusha
sub
in
dec
lcall
xchg
xor
sub
sub
lgs
in
jp
leave
cwtl
sbb
add
subl
mov
dec
cld
fs
mov
pop
lret
imul
mull
addr16
jnp
jo
test
jle
push
sub
fsubrl
add
stos
test
push
or
mov
or
leave
mov
cmp
lret
ficoml
imul
xchg
xor
jecxz
fnsave
adc
arpl
jbe
or
pop
pop
jge
bound
divl
jp
mov
int3
cmp
xchg
pop
imul
out
shll
lods
mov
mov
mov
pop
adc
enter
repnz
mov
mov
fcomps
push
test
xor
xchg
cli
or
mov
jns
in
and
push
dec
add
add
aas
and
lret
xor
jae
lcall
pop
dec
sub
pop
jns
jbe
stos
dec
push
ja
rorl
sub
pusha
aad
xor
cwtl
mov
dec
test
cmp
and
insb
daa
inc
ret
test
cmp
xchg
jecxz
lcall
sbb
test
pop
sti
in
rcrb
ret
cwtl
xchg
cmpsb
fsubr
and
xlat
insl
pop
mov
lock
das
cmp
enter
jl
outsl
dec
stos
xor
int3
mov
rol
cmp
jo
inc
push
mov
call
cmp
test
repnz
call
xchg
fld
lods
jbe
jge
popf
jecxz
cmp
mov
add
or
in
mov
fcomps
dec
mov
pop
lds
movsb
cmp
mov
jne
sbb
jbe
mov
pop
pop
in
nop
das
repnz
pop
fadds
push
jge
daa
es
xor
sub
dec
je
push
call
dec
jae
mov
insb
repnz
add
pop
sbb
out
in
dec
sbbb
mov
mull
jmp
sbb
mov
mov
in
pop
repz
div
fsubs
mov
stos
xchg
pop
or
repnz
rcll
subb
imul
jb
addb
fldenv
cmp
cmc
pop
xchg
jb
jne
fmul
int
and
dec
mov
mov
addr16
aad
sbb
lds
movsb
lods
mov
inc
cmp
loopne
sbb
dec
popa
push
repnz
repnz
pop
pop
inc
ljmp
gs
bound
stos
jne
inc
jae
iret
stos
icebp
or
je,pn
cmp
mov
frstor
dec
cmpsl
outsl
inc
jg
cmp
xchg
call
mov
xchg
adc
popa
mov
dec
add
dec
fs
mov
mov
and
gs
orb
in
mov
lds
jo
dec
inc
sub
dec
or
and
inc
or
rclb
stos
es
pop
lcall
mov
mov
orb
ret
out
jge
sub
xchg
fwait
lahf
stos
dec
push
arpl
inc
scas
fadds
lret
xor
add
jb
sbb
jle
stc
mov
sub
mov
cmp
jmp
cli
cld
xlat
push
fs
cmp
mov
cmp
loopne
daa
dec
mov
gs
xchg
fbstp
gs
pop
mov
jne
mov
mov
or
ljmp
out
outsl
adcl
mov
pop
cmpsl
cmpl
ret
mov
notl
insb
pop
adc
pop
cmpsl
add
daa
cltd
cs
mov
hlt
sahf
movhps
pop
loopne
or
js
sub
and
pop
jnp
mov
das
or
ja
out
jecxz
and
loope
or
mov
mov
insl
dec
pop
xor
mov
xchg
jbe
dec
out
cmpsl
pop
add
mov
pop
add
pusha
test
jne
push
adc
sub
das
test
in
decb
sti
add
or
pusha
jns
loop
jmp
xor
repz
test
fmull
outsb
adc
ja
sub
dec
imul
sub
insb
or
cmp
les
cwtl
int3
ds
cmp
ss
adcl
shrb
ret
pop
pop
insl
test
ljmp
mov
daa
sub
mov
sbb
shr
incb
adc
aas
test
sub
sub
pop
lods
call
pop
ret
adc
mov
pusha
jno
inc
adc
dec
mov
cmc
ljmp
jno
subb
pushf
xchg
pop
or
dec
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
cmp
and
inc
addl
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
