push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
addr16
jle
or
jle
fld
fcom
enter
leave
cld
icebp
fmulp
test
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
ljmp
rcl
loope
loop
mul
test
xlat
fsts
aad
ret
sarl
aad
into
cmp
testb
cld
loop
in
clc
call
iret
xor
out
repz
hlt
xor
into
ds
and
xchg
out
cli
out
mov
xchg
loope
divl
int
rcl
enter
test
les
fsubr
int3
shl
mov
lds
test
rolb
ret
repnz
loope
jmp
not
cli
stc
std
repnz
call
hlt
xor
cmp
cli
cmp
xor
xor
loopne
movb
lock
hlt
out
in
xor
xlat
hlt
cli
into
jmp
hlt
jmp
repz
in
jmp
and
in
jecxz
aad
xor
lret
fcmovu
out
cmp
mul
hlt
fprem1
xor
into
test
call
cmc
shr
fdivrl
cmp
sarb
sarl
loop
fdivrp
test
test
xlat
out
xor
lret
loopne
std
push
xor
jmp
rol
ror
rcr
fcmovnu
mov
cmp
add
jle
or
jle
aas
cmc
ret
sar
clc
int3
mov
in
into
fsub
xchg
shl
icebp
lock
leave
cld
test
idiv
out
out
ds
idiv
cmp
cld
out
mov
call
vpsubb
int3
sub
test
loopne
aad
call
loope
orb
test
cld
cli
lret
int3
ret
in
iret
cli
sar
xchg
xlat
xchg
sbb
int
into
rol
jecxz
fcmovu
out
hlt
cmp
out
cmpb
loope
in
in
stc
cld
mov
out
out
lret
ret
jmp
shr
fchs
ds
fcomip
mov
lret
in
call
mov
in
lret
xchg
out
ret
out
cmp
rcr
leave
xlat
in
lock
iret
sti
cmp
ljmp
out
xchg
lock
lret
lock
cmp
lret
repnz
enter
cmp
imul
test
xchg
or
sar
not
in
ds
xor
int
fcmovnbe
orl
mov
ljmp
call
shl
lock
and
enter
fsubp
cld
mov
sti
in
cmc
in
in
cmp
sar
sti
aas
cld
aad
ljmp
into
jecxz
jecxz
ljmp
xlat
out
shl
in
jmp
xchg
xor
loop
ss
lret
clc
cld
clc
fdivp
xchg
out
shr
enter
xchg
sar
xchg
xchg
div
shr
in
ss
loopne
int
aad
stc
cmp
les
int
int
xchg
enter
xor
jmp
not
in
rolb
leave
test
call
std
aad
in
xor
aaa
repz
cmp
in
mov
out
fimuls
fucom
jmp
into
in
fmul
aas
adc
ds
repz
ljmp
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
sub
jle
or
jle
nop
incl
int3
ror
fdivp
iret
hlt
loop
cmc
sbb
test
icebp
leave
mov
xchg
in
shr
idivb
das
xor
addb
sti
out
aam
aam
jmp
stc
ljmp
out
shr
int3
icebp
cmc
clc
clc
iret
loopne
fdivrp
ljmp
fdivrp
mov
fstl
lret
int3
aam
shlb
cmc
aam
hlt
in
fdivr
in
lret
out
leave
int
lea
aad
in
xor
shr
int
cmp
loope
mov
out
mov
cld
rolb
xor
fnstcw
shr
out
iret
out
shr
shll
test
and
int3
out
in
mul
ret
test
fdivr
hlt
out
clc
icebp
loop
mov
in
addb
out
icebp
rol
jmp
call
cmp
fsubp
mul
repz
test
int
out
ret
int
sti
mul
int
cmp
aam
cmc
cmp
test
out
std
rcr
lock
fcmove
out
into
aad
div
fld
adc
fxtract
cld
cli
cld
int
repz
xor
clc
in
int
ror
hlt
shl
loope
int
fsubr
sti
jecxz
loopne
loop
ficoms
ss
in
cmp
or
sti
mul
sar
and
clc
dec
fisttpl
xlat
clc
jecxz
xor
lock
hlt
adc
out
leave
stc
out
fcmovnu
out
aas
in
sub
icebp
sarb
aas
fmul
test
cli
rol
ret
fcmovne
xchg
cmc
mov
loope
int
cmp
jmp
cmp
jecxz
repnz
icebp
cmp
mov
loope
nop
repnz
rcl
jmp
hlt
in
clc
fcmove
ss
roll
jmp
orb
lret
ljmp
push
add
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
fninit
bound
jle
add
ds
fdivrp
clc
rcl
loope
int3
enter
rcr
lds
call
cld
ljmp
aas
repnz
sar
lock
rcl
mul
test
cmp
repz
sti
jecxz
sbb
mov
out
rclb
in
fsubr
loopne
fucomi
stc
in
fildl
mov
in
in
fcmovu
in
in
out
xor
xlat
xlat
lock
xor
fcmovb
mul
cli
loop
std
cli
loope
in
sub
leave
hlt
fidivrl
xlat
out
fucom
shr
enter
jmp
fsubr
shr
aaa
out
cld
cmp
lret
aam
sarl
loopne
fdivrp
aam
cli
enter
xchg
ret
xor
aaa
cmp
ret
roll
test
shl
in
aad
ret
cld
out
ds
cmp
xlat
rcl
idiv
mov
xchg
cli
nop
mov
sub
lret
sti
int
in
aam
cmp
adc
call
shl
lock
jmp
out
out
out
in
imul
jmp
imul
int
fstp
shl
mov
loopne
mov
jmp
hlt
cmp
int
loope
cmp
loope
mov
lret
repnz
mov
call
stc
repz
hlt
fdivrl
test
lret
icebp
stc
std
sti
xchg
out
ret
ss
int
div
out
repz
repnz
vfrczps
out
fisttps
rcl
in
lock
rcl
hlt
loopne
aas
icebp
cmp
orl
mov
icebp
iret
aas
icebp
cmp
fcomi
out
out
loop
fcomi
stc
xchg
in
fsubrp
int
repnz
lret
fnstcw
ds
std
and
test
enter
and
cmp
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
out
and
jle
or
jle
in
loopne
mov
jmp
jmp
std
iret
neg
repnz
cmp
cld
fld
int3
loop
mov
not
clc
sub
aad
cmp
out
repz
aas
rolb
ret
mov
mov
icebp
sar
mov
ljmp
aam
lock
cmp
mov
push
xchg
loopne
cmp
xor
cmp
rolb
loopne
out
xlat
jecxz
fcmove
mov
rol
rcl
out
loopne
xchg
orb
in
mov
lret
inc
repnz
out
lret
cli
cmp
ds
rcl
hlt
out
mov
fdivp
shr
aam
sub
shr
int3
push
fdivrp
into
filds
call
into
stc
icebp
test
xor
leave
call
cmp
shl
out
aam
cli
int3
fucomi
int3
shl
shl
aaa
iret
fincstp
imul
int3
into
cmp
loop
lock
in
leave
sti
int3
fdivr
cmp
ljmp
in
xor
les
xor
cmp
cmp
call
repz
rclb
iret
repz
std
fidivrl
cmp
loopne
fcomp
fsubrp
out
test
xchg
jmp
iret
push
aaa
iret
xor
ds
in
sarb
xchg
incl
in
or
rol
in
cmp
testb
xchg
call
jmp
jecxz
fucomip
in
fadd
cmc
cmp
jmp
sub
repz
lock
rol
mov
rorb
mov
fdivs
fidivrs
test
add
xchg
xchg
cmp
not
shl
aaa
repnz
call
into
ret
loop
fprem1
loopne
out
xchg
lock
fmulp
fsubrp
fdivp
lret
shl
cli
mov
mov
and
xor
orl
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
cmc
fistl
jle
add
in
repnz
into
sar
in
roll
loopne
fimuls
out
cmp
fcom
in
out
jmp
incl
repnz
jmp
addl
rol
sar
stc
in
rol
aam
icebp
div
ret
aam
leave
in
add
xchg
into
out
xchg
clc
leave
leave
aaa
jmp
out
aam
test
sti
stc
loop
ret
not
xchg
mov
repz
out
test
cli
cmp
iret
lret
loopne
out
icebp
int
cmp
sti
mov
call
ljmp
int3
hlt
xor
into
divb
addl
loop
sub
decl
ror
and
lret
iret
cld
aam
fmul
flds
ljmp
and
fucom
fisubrs
in
aaa
ss
cld
int3
out
icebp
fcmovnu
fdivr
fsubp
fildl
repz
vaddsubps
aam
xlat
in
idiv
fnstsw
repnz
fmull
lock
loop
ljmp
ljmp
rol
fdivr
cmp
mov
push
loop
sbb
ret
xor
lock
fucomp
clc
idiv
fildl
aam
lds
repz
int
xor
fcmovnbe
fstpt
cmp
cmp
test
mov
mov
lret
nop
mov
shlb
repz
fdiv
cmp
std
loopne
stc
aas
roll
mov
cld
lret
mov
ret
lock
xor
cld
call
cmp
out
mov
std
cli
in
leave
leave
in
mov
shr
xor
out
call
in
ror
xor
aad
addl
enter
out
out
jmp
div
lds
stc
sti
int3
int
test
lret
sti
jmp
ljmp
mov
adc
mov
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
int
sbb
or
jle
fcomp
adc
cli
into
xchg
sar
lret
out
rcr
cmp
cmc
jecxz
fisttpll
xchg
out
repnz
xor
out
in
cmp
stc
stc
rcl
rcl
and
sti
mov
out
mov
jmp
shl
imul
sarl
fdivrl
hlt
mov
into
dec
shr
shl
cmp
cmc
repz
repz
rcl
out
icebp
lds
fucomp
mov
lret
adc
shlb
fdivrl
xor
fcomp
lret
xor
out
shl
stc
rcr
xchg
in
in
loop
jecxz
out
std
call
aaa
lret
ss
in
in
hlt
rcr
repz
les
sbb
fimull
leave
int
repnz
xor
stc
out
testl
shl
mov
xlat
mov
iret
std
xchg
jmp
hlt
aam
fidivs
imul
fcmovu
faddp
movl
fisttpl
jecxz
les
out
jmp
xlat
cmpl
sbb
call
out
mov
fisttpl
cmp
cld
cmc
icebp
ffree
in
incb
dec
out
lock
in
xchg
out
hlt
jmp
call
ffreep
sti
lock
out
repnz
ljmp
lret
call
jmp
out
fcmovne
cs
shl
shl
fcmovu
loop
stc
mov
leave
lock
icebp
out
lea
iret
cmc
xor
repnz
fsub
ss
fdivr
aam
aas
xchg
int3
ret
adc
sar
in
jmp
ljmp
mul
xor
loop
stc
vpsrlw
xchg
loope
test
in
cmp
cmp
leave
fcom
add
rolb
lret
out
fnclex
in
out
mov
sti
xor
int
xor
ljmp
rcl
stc
ret
orl
iret
cmp
jmp
fstp
je
xchg
or
loopne
jle
or
jle
cmp
int
lret
xor
sarl
fyl2xp1
enter
testb
rcl
in
in
int
out
xor
shl
xchg
enter
repz
out
out
lret
xor
xor
leave
xlat
in
repz
loopne,pt
cmp
stc
in
ret
mov
std
call
shr
in
stc
cmp
int
fstp
loopne
int3
addb
test
xchg
adcl
fdivrs
clc
in
cmp
sar
rolb
out
or
mov
leave
lret
xor
shll
cmp
call
cmc
or
jmp
xlat
in
mov
in
out
repz
xor
cmp
sarb
std
out
decl
lret
clc
lret
decb
out
jmp
loopne
repnz
std
fiadds
cld
nop
enter
ljmp
cld
int
out
enter
lock
aam
repz
xchg
shl
enter
leave
xor
call
aaa
out
fsin
cmp
ret
imul
cli
enter
out
in
icebp
xor
ss
cmp
mov
repz
xchg
in
into
cli
in
int
shl
not
cmp
ror
sti
hlt
lock
ret
cmc
ret
repnz
cmc
sbb
std
loope
aam
xchg
rol
out
cmp
cli
leave
cmp
cmp
in
rcr
cmp
addl
out
int3
cli
lret
das
leave
mov
out
cmp
xor
popl
jmp
aad
stc
ljmp
cmp
stc
hlt
sti
loopne
ret
fmulp
xlat
test
incl
out
fdiv
jecxz
into
cli
ss
loopne
imul
ret
loope
fldl2e
hlt
fisttpll
sub
int
int3
cli
fstp
cmp
test
aad
jne
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
cs
push
jle
or
jle
ret
xor
clc
mov
int
fcmovne
shl
fimuls
enter
cmp
shl
sarl
xchg
hlt
orl
orb
aam
out
xlat
aam
sar
sti
loop
repz
ret
rol
jecxz
mov
out
iret
xor
out
out
fxch
loopne
repnz
int3
test
sbb
int3
xchg
std
int
loopne
div
loop
repnz
repnz
idiv
ljmp
fdivrp
clc
fcmovu
mov
lret
loop
xchg
aam
lock
lret
rol
cmp
test
fldpi
xchg
fcmove
out
xchg
in
ss
xlat
lret
repnz
iret
aam
mov
xor
fldl
loop
loope
rcl
aam
fcmove
in
ror
incb
in
cmp
jmp
test
jecxz
in
fmul
in
stc
cmpl
rorl
cmc
loope
orb
enter
xlat
leave
lret
cli
fxch
cmp
out
iret
ret
in
xchg
jmp
mov
in
out
xor
aam
leave
xlat
call
test
idiv
rolb
leave
fadd
in
adcb
xor
aam
int3
cmp
fiaddl
clc
and
int
loope
add
mov
imul
cli
lret
int
aad
and
mul
sub
or
iret
cli
dec
shr
fmul
lret
fldpi
out
sbb
lret
repz
cld
loope,pt
mov
loopne
leave
loop
adcl
cli
into
call
aad
shl
aas
aad
xchg
aam
test
rolb
lret
iret
sbb
sar
fadd
icebp
loop
in
in
nop
out
orl
out
enter
loope
flds
test
iret
lock
in
iret
xor
add
mov
mov
mov
jmp
leave
ret
int
int
mov
cmp
push
or
jle
rorb
into
lret
mul
aad
shl
in
or
cli
jmp
in
enter
shl
repnz
into
out
iret
ss
loope
repnz
rcl
jecxz
call
rcr
cmc
xchg
and
jmp
xor
fucomp
icebp
aas
cmp
iret
shl
ret
mov
jecxz
out
mov
in
xchg
divl
rcr
repnz
sar
aam
rcr
clc
leave
nop
out
leave
enter
or
into
xor
movb
sti
loope
in
cmc
ljmp
lock
int
in
cmp
fcmove
jmp
hlt
std
stc
fprem
ret
loop
mov
int3
xchg
xchg
addb
hlt
fld
int3
sti
lret
in
xor
aad
out
out
sti
xchg
loopne
loopne
enter
into
repz
fcmovb
iret
iret
std
iret
stc
loope
cmp
loope
in
testl
lret
int
aad
ret
cmp
out
loopne
repz
aas
loope
xchg
in
mov
mov
fucomip
test
ret
aad
in
std
fsubr
shl
in
test
call
fstl
in
call
aas
in
cmp
stc
test
testl
fmul
sub
mov
xor
aam
cmp
in
cli
iret
test
stc
in
stc
sbb
iret
icebp
mov
das
xor
in
aam
iret
aad
dec
test
rol
sar
clc
out
loopne
sti
out
adcl
shl
sbb
fcmovnb
loopne
sar
in
lret
jmp
sti
test
push
jmp
iret
lock
loope
les
mov
int
fdivp
fisttps
xor
jmp
jmp
clc
jecxz
cli
ffreep
test
leave
call
icebp
mov
out
shll
test
jmp
stc
xor
jmp
aam
mov
aaa
xchg
std
mov
jle
or
jle
sar
addl
std
adcb
fld1
xor
out
jmp
jecxz,pt
rol
leave
addb
jmp
jecxz
das
repnz
xlat
cmp
les
sar
cmp
cmc
mov
stc
cld
incb
xlat
jecxz
into
sti
aad
into
repnz
out
loopne
in
sbb
shl
cmp
cmp
aaa
icebp
fdiv
push
iret
test
repz
decl
jmp
xchg
fsubrs
call
out
aas
iret
cmp
in
xchg
test
mov
aad
in
clc
cmc
fcomp
aad
fmulp
fdiv
aad
ss
out
shl
leave
in
loop
int3
repnz
cmp
in
enter
rcl
fucom
ret
clc
mov
fdiv
xchg
cld
rorb
xor
cmp
sarb
cli
test
cld
fiadds
loopne
sub
xchg
loopne
stc
out
std
aam
cmp
sarl
ret
in
idivl
mov
add
leave
icebp
in
ljmp
xor
aad
out
cmp
jecxz
cmc
sbb
clc
mov
xor
xchg
loope
loopne
xor
xor
jecxz
add
jmp
in
loopne
mov
out
ljmp
enter
cld
clc
out
cmc
cmc
testb
sti
mov
int3
shr
out
clc
in
repnz
fcomp
idiv
lret
cmp
hlt
in
addb
lock
std
in
call
jmp
xor
cmp
fcmovnbe
cmp
fucomp
xchg
aam
clc
fcmovnu
loope
fisttpll
lock
fbstp
iret
out
cld
repz
fcmovnb
sar
jecxz
int3
cli
in
hlt
loop
repnz
aaa
leave
in
lret
out
fabs
push
cmc
not
mov
imul
adc
mov
jmp
xlat
rol
xlat
enter
push
jl
push
and
or
jle
lock
xlat
ret
int3
aam
out
sti
std
fucomp
rorl
jmp
lock
dec
in
fnstenv
cmp
cmc
ljmp
sti
cli
stc
cld
cmp
mov
in
loope
xchg
mov
leave
out
leave
out
hlt
fcmovbe
cmp
filds
ret
neg
fimull
jecxz
xor
in
into
cli
fcmovne
lret
cmp
repnz
mov
rcl
or
std
cli
int3
loop
std
xorb
stc
ds
out
fdivr
lock
aas
stc
std
test
nop
out
and
in
lock
repz
xor
cli
xchg
or
out
loope
lret
xchg
test
in
repz
xor
out
fdivrl
std
shl
sar
fadds
xchg
call
xor
cld
addb
shl
fcmovnu
vpavgw
lret
fdiv
adc
int3
fcomip
sti
adc
icebp
cmc
xor
cmp
lret
loope
test
xchg
xchg
fxtract
shl
int
loopne
fsubrp
in
repnz
jmp
out
xchg
movl
jmp
leave
cmp
stc
xlat
sti
test
loopne
ret
out
test
mov
xchg
shlb
jecxz
aam
jmp
jecxz
test
add
fimull
loop
decl
xor
out
cmp
icebp
clc
repnz
std
test
jmp
in
lock
out
mov
in
iret
in
clc
out
aas
rcl
fcmovb
out
mov
cli
leave
jmp
xchg
out
leave
loop
div
lret
leave
in
das
xor
aad
out
fcmovnb
ret
xchg
inc
xlat
clc
fildl
dec
cmc
cmp
in
out
into
ror
out
sti
ret
out
jecxz
test
cmc
loope
jmp
ljmp
jmp
cmc
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
shr
and
fmulp
fucomi
loopne
mov
out
ljmp
out
jmp
in
test
and
incb
lret
in
mov
xlat
cli
aad
aad
cmp
faddp
rol
imul
lea
out
lock
repz
cmc
cli
cmp
lock
cmp
imul
fst
int3
lret
out
lret
mov
icebp
in
cli
ror
fcmove
hlt
cmc
fcom
loopne
ret
shl
shl
loope
fldl
repnz
repz
aad
xlat
ds
lret
mov
xchg
out
into
xlat
test
clc
aad
shlb
fadd
fidivrl
loope
loope
fcmovnb
cli
ror
mov
sar
xchg
ret
xor
rcl
out
lret
ror
in
xchg
lret
loop
into
call
jmp
ret
shl
leave
int3
in
jmp
loope
idiv
fstp
lock
shl
mov
out
repnz
out
xor
cmp
into
cmp
test
in
aad
loop
xchg
call
ljmp
iret
out
ds
repz
mov
incb
fmull
lret
int3
fcmovnbe
cmc
cmp
out
fdivrl
cmp
loopne
out
int3
mov
xorb
into
jmp
xlat
aam
aaa
cmc
sar
rol
fstpt
test
inc
mov
in
lock
fisttpl
cmc
fld
aaa
xor
aad
out
cmp
cmp
cmp
ljmp
jmp
int3
std
mov
hlt
into
call
test
loopne
sti
in
std
lret
mov
ror
xlat
cli
cmp
iret
int3
ret
ret
icebp
fcmovu
fldl
in
aam
into
xor
out
xlat
ror
fcmovnb
ret
cmc
hlt
cmp
loopne
mov
add
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
dec
cmpb
sbb
or
jle
out
fmul
flds
lret
in
lret
sarl
in
cmp
shl
jmp
sbb
int
mov
jecxz
rcl
xor
xor
int3
int
fadd
fcomip
cmc
fcom
decb
nop
loopne
cmc
repnz
ss
fucomi
jmp
in
rcr
stc
out
xlat
aad
out
in
nop
fsubrp
iret
lret
clc
jecxz
out
ljmp
cmp
mov
fmul
int3
testl
xor
lret
xlat
ljmp
call
cmc
repz
xor
in
imul
in
in
cld
xchg
xor
stc
loop
int3
leave
out
out
out
stc
stc
aad
ror
mov
fmul
cli
out
mov
xchg
out
cli
rolb
jmp
jmp
in
lock
rcr
call
rcr
cld
aam
sti
ret
and
cmp
test
mov
cld
rcl
aad
xor
test
loop
adc
roll
stc
lds
xchg
out
lret
test
fcmovnbe
std
lret
fucomi
cli
cmp
in
cmc
mov
mov
leave
in
rclb
fcmovnbe
sti
hlt
loopne
rcr
repnz
clc
mov
fcmovne
fadds
ret
xchg
mov
xchg
repnz
call
out
ss
std
in
shl
jecxz,pt
repz
fcmovnu
xchg
into
out
fucomi
xchg
call
sarb
div
loopne
loopne
rcl
loopne
inc
xlat
loopne
in
fldl
out
out
out
into
out
fucomi
fdiv
shl
repnz
xchg
rcr
rorl
rolb
out
sub
rcl
int3
xor
xlat
fst
in
testl
out
loopne
xchg
into
incl
rcl
call
std
rcl
stc
xchg
or
test
popl
out
repz
mov
mov
xor
add
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
sahf
sub
sbb
or
jle
shlb
rcr
repnz
in
xor
cld
sti
fninit
xchg
out
decb
fcom
divb
ss
xor
iret
orb
mov
xchg
lret
enter
fnstsw
cld
lret
ret
fadd
out
call
std
out
mov
divb
cmp
int
stc
sti
out
dec
sti
aas
in
std
rcr
rorl
adcb
in
ljmp
stc
hlt
cli
out
lret
loopne
fdivr
add
jecxz
in
mov
orl
leave
cli
rcl
in
ds
aas
aad
roll
fcomi
mov
mov
and
out
leave
aaa
xor
rol
sti
aad
loope
call
jmp
addb
in
repnz
std
ss
cmp
fcmove
cli
int3
std
fadd
out
mov
jmp
jmp
aam
xor
push
cmp
fdivr
loopne
rcll
iret
clc
shl
in
call
jmp
in
out
repnz
test
sti
adc
lret
mov
cmp
in
mov
loopne
xchg
in
in
mov
in
mov
xor
enter
lock
cld
shl
in
idivb
fsubr
loop
xchg
stc
mov
shl
aad
call
clc
in
idivl
clc
test
fimull
sub
out
fcmove
fucomp
dec
fsubrp
ret
test
sbb
aad
lret
leave
mov
icebp
orl
leave
out
sti
jmp
jmp
repz
repz
test
mov
jmp
cld
cld
loop
xor
in
repnz
in
idivb
or
fdivrp
in
mov
int3
jecxz
out
jmp
fst
aas
test
repz
jmp
int3
enter
lret
int
stos
test
inc
jge
in
sbb
jle
add
mov
iret
clc
mov
in
aam
out
repnz
cmc
into
lret
cmp
repnz
fcmovnb
in
in
clc
adc
xrelease
clc
ss
not
ljmp
xor
mov
mov
in
fcmovu
in
cli
repnz
sbb
cmc
fcmovbe
into
xor
lret
fcomip
fcmovbe
mov
fucomip
addb
int3
test
out
enter
xlat
in
loopne
iret
out
roll
fdiv
sub
cli
enter
push
fdecstp
xor
cmc
sti
into
fidivs
ret
in
ds
aad
jecxz
loope
nop
stc
test
mov
ror
out
cmc
lret
cmp
iret
in
ds
sar
fld
jmp
in
rclb
in
cmp
cmp
out
xlat
cmp
ret
into
xlat
call
fildl
out
aad
ljmp
cli
jmp
sarb
enter
fcmove
out
fcoml
mul
icebp
repnz
repz
shl
cmc
fnstcw
rol
rol
icebp
test
rcr
mov
mov
lea
repz
xor
cmp
cmp
sar
add
aas
cmp
xchg
notb
cmp
xlat
jmp
out
aaa
int3
iret
int
in
sbb
mul
cld
call
jmp
call
aam
shl
cli
icebp
sar
xor
jecxz
std
into
dec
repz
dec
jmp
int
hlt
aad
cmp
idiv
aam
icebp
clc
fcmovb
mov
loope
call
hlt
in
das
xlat
fadd
hlt
cmp
rcl
enter
in
sarl
hlt
ret
xchg
fadds
test
out
idiv
iret
fdivrl
fnstcw
xlat
lock
fdivr
sbb
xchg
fldl
out
divl
stc
sub
fxch
hlt
in
cmp
xlat
cmp
std
out
mov
hlt
mov
iret
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
ljmp
ss
shl
cld
out
jmp
sbb
lret
clc
rol
cmp
into
cmp
cld
hlt
shl
stc
loopne
loope
ljmp
mov
mov
shrl
out
cmp
aam
repz
out
rcl
neg
clc
mov
sub
aam
xlat
out
ljmp
out
fnstsw
jecxz
ret
repnz
enter
stc
lret
loop
xchg
mov
int3
enter
clc
cmp
shl
loopne
repz
ret
mul
cld
in
and
xchg
xchg
fsubp
call
call
aad
cmc
repz
out
std
fucomip
ds
mov
in
xchg
into
lock
rcr
cmp
cmp
out
hlt
cmc
addb
jecxz
test
movl
cmp
shl
into
into
lock
cld
shl
idiv
test
mov
hlt
xor
ret
lds
lock
in
ss
shl
cld
into
repnz
stc
stc
out
hlt
fldl
mov
out
into
sti
iret
aaa
cmp
mov
mov
enter
and
call
jmp
cmp
aaa
rcr
shl
incl
mov
adc
out
fcmovnbe
clc
in
out
out
sar
rcr
rcr
in
xlat
clc
out
cmp
xchg
int3
in
stc
int
cmc
imul
repz
jmp
and
fucomi
and
lea
test
jmp
mov
call
jmp
xor
std
mov
xlat
aam
out
iret
lret
rcr
fcoml
out
sub
cli
repz
cmpb
fcomi
out
ror
mov
loop
xchg
mov
sub
shr
repz
aad
ljmp
ds
fsubp
aas
repnz
std
ljmp
xchg
rol
out
lret
cmp
out
sti
fdiv
or
imull
enter
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
sbb
insb
and
or
jle
int
call
test
in
mov
ljmp
enter
shl
ds
stc
aad
aaa
rcl
add
mov
fucomp
mov
ret
fsubrs
neg
cmp
rcr
stc
xlat
xchg
repz
xchg
lock
xchg
test
leave
cmc
xor
loop
jecxz
cmc
movl
rcr
aad
out
aam
leave
in
out
fidivs
sti
shl
xor
call
out
lea
repz
in
fidivrl
ljmp
stc
call
loop
enter
xchg
xor
out
dec
fucomp
adc
aam
out
in
fmul
mov
loope
into
call
xor
leave
icebp
in
div
aas
loop
loope
mov
incb
nop
loope
jecxz
hlt
ret
in
out
div
out
std
int
ds
fcmovnb
fldl
xchg
mov
cld
sar
fld
out
int
mul
repnz
out
aad
testb
out
fsub
xchg
int3
in
loop
aam
enter
mul
fcomp
cli
and
mov
cld
into
mov
enter
rcr
aam
loope
cmp
rcr
rorl
mov
in
int3
xchg
repnz
in
xor
call
xor
fildl
mov
les
std
fdivp
into
out
xor
vpminub
clc
not
std
int
fcmovbe
fsubr
clc
xlat
fcom
nop
std
loop
rol
cmp
in
f2xm1
sti
sar
cld
out
iret
loop
cmc
mul
jmp
out
add
mov
lea
rcr
rcl
cmc
aaa
ror
cli
xor
icebp
aas
fdivrl
test
sbb
stc
ror
iret
nop
xchg
xor
xor
divb
cmc
fucom
cmp
icebp
fcomi
loopne
sti
lret
enter
or
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
cmp
jle
or
jle
into
mov
in
jecxz
enter
int3
ds
fsubrp
ds
cmp
mov
dec
repnz
mov
jmp
clc
cmc
int
fadds
aad
int3
loop
mov
out
int
sar
divl
xlat
aas
xor
mov
call
fsub
jmp
in
xchg
in
sub
aaa
lret
lret
sbb
jecxz
fadds
fcomp
mov
xchg
xor
cld
jmp
lret
fabs
in
aam
fcomi
aam
mov
cli
lret
incb
cmp
in
cmp
rcr
lock
adc
lret
ret
orb
call
clc
leave
cmp
lret
out
lret
jmp
test
lock
test
xchg
fdiv
mov
sar
cmp
cld
enter
in
ret
testl
lret
jecxz
mov
icebp
cmc
cmc
sarl
cmp
cmp
out
jmp
out
mov
mov
xor
stc
in
xlat
fcos
cmc
repnz
loope
into
in
sbb
cmp
popl
jmp
cmp
repz
idiv
in
jecxz
test
aas
test
fxch
mov
int
xchg
jecxz
mov
enter
out
sti
rcr
sti
adc
fidivrs
fcmovnu
lret
int
ficoms
xor
leave
int3
jmp
jmp
out
call
in
lret
jmp
xchg
xchg
test
in
cmp
std
into
clc
sti
jmp
fistpll
sbb
in
out
test
out
jecxz
lock
repnz
fcmovnu
out
jmp
xlat
in
cmc
mov
mov
fists
test
enter
repnz
out
sar
xlat
cmc
jecxz
sarl
repnz
aam
testb
call
jecxz
imul
cmp
je
jmp
aam
int
aad
fldt
sbb
or
jle
sub
ss
cmp
loop
jmp
ret
cmp
mov
lock
lret
cmp
aaa
xlat
fcmovu
test
aas
jecxz
enter
mov
orb
call
cmp
push
out
into
shl
clc
xor
hlt
clc
in
int
in
cld
test
fisttpll
jmp
int
aad
xor
cmp
loop
iret
loop
orl
and
xchg
xchg
xor
ljmp
loope
into
cmp
ror
mov
cli
mov
into
shl
xchg
cmpb
shl
lret
in
shl
int3
aam
cmp
adc
fnsetpm(287
mov
repnz
shr
ljmp
in
xor
cmp
rcl
in
jecxz
in
test
into
in
in
xchg
rolb
lret
xor
xor
jmp
les
in
xchg
xlat
shll
into
xor
jmp
mul
aas
xchg
enter
mov
shl
add
repnz
cmp
aad
fdivr
aas
iret
ss
jecxz
loopne
loope
ljmp
test
xchg
xchg
xor
repz
inc
cli
int
faddp
rcl
out
decb
ljmp
out
fcmove
std
std
jmp
shl
in
flds
lret
jmp
fmul
int
aad
cmc
iret
icebp
xor
aaa
xor
dec
icebp
fildl
cmc
testl
aad
fbstp
mul
int
leave
lret
test
fnstsw
aad
ljmp
xchg
rcl
mov
fcmovne
iret
fcmovu
clc
sbb
in
mov
loope
ljmp
or
rorb
call
fdivrl
cmp
int3
test
cld
rolb
mov
lock
iret
cmp
lock
std
shl
cmp
rolb
mov
mov
jmp
aam
iret
int3
fst
outsl
fmull
test
jle
or
jle
in
xchg
shl
iret
xchg
loope
icebp
xor
fsub
clc
ds
cmp
repnz
cmp
enter
std
nop
rclb
leave
xor
shr
xor
std
in
cmc
rcl
sbb
fsub
mov
iret
std
mov
mov
icebp
xor
lret
leave
xor
sub
idiv
aad
ret
in
into
shr
mov
xchg
rcl
aam
fmul
icebp
loopne
ds
rcr
test
xchg
nop
int
leave
call
repnz
neg
rcr
jmp
aam
fadd
std
filds
in
std
repz
xor
shlb
shl
xlat
fucomip
into
rol
sbb
cld
out
xchg
mul
sti
test
xchg
or
in
lock
cmp
rcl
xor
in
ret
push
aam
loop
loopne
jmp
lea
in
sub
div
call
in
or
cli
in
lea
in
xchg
xchg
in
loop
repnz
fcomip
fucomip
fcmovu
sarb
xlat
leave
mov
faddl
jmp
xor
aam
cmp
test
and
clc
xchg
lock
loop
shl
ljmp
imul
aam
test
cmc
div
cmc
out
xchg
repnz
xor
shl
in
cmp
sbb
hlt
repnz
lds
std
repnz
int
hlt
iret
lds
call
cld
out
lock
xlat
test
loopne
iret
call
int3
stc
cmc
xlat
xor
icebp
jmp
idiv
rcr
cld
roll
fmull
or
ljmp
xor
aas
ret
hlt
xlat
fcomip
xlat
cli
mov
nop
cmc
int3
xor
sub
in
repnz
rcr
cmp
cmp
orb
ljmp
xor
mov
mov
jmp
ret
xlat
int
fstp
cltd
sbb
pop
and
jle
or
jle
cli
ljmp
testl
leave
stc
mov
shll
shl
hlt
xor
hlt
int
loop
in
frstpm(287
fmul
out
ljmp
fcomip
xor
rcl
enter
sti
cmp
in
in
fcmove
in
mov
int3
mov
jmp
decl
lret
fxch
not
fst
neg
shl
mul
ret
mov
hlt
xlat
fsincos
mov
in
rorl
rol
rol
enter
cmc
test
cli
ds
loop
testl
call
shl
cld
cmp
clc
rcr
aad
loop
cmp
in
testb
repnz
out
clc
icebp
int
in
lret
adc
loope
rcr
jecxz
sti
testl
into
int
sar
fdivr
aad
stc
out
cmp
fistpll
rorl
out
test
shl
fsubp
int
das
xor
in
xor
cmc
neg
in
ret
in
ffree
mov
jmp
xchg
out
addb
rcr
cli
sti
not
stc
ds
ret
std
aam
cli
out
test
xchg
xor
lock
sti
xlat
aas
cmc
into
aas
fucom
xchg
out
mov
cli
out
std
iret
xchg
hlt
sub
cld
cmp
leave
fcomp
cmp
leave
aad
ljmp
in
nop
icebp
xor
in
icebp
fcomp
add
call
mov
lret
in
sti
fsubrp
divl
cmp
in
leave
xor
stc
ss
jecxz
jecxz
neg
faddp
cld
aad
stc
sti
out
test
faddl
xor
lds
fincstp
cmp
in
aam
ret
repnz
mov
sti
mov
in
test
sub
cmp
jmp
xor
in
loopne
loope
loope
out
call
cmp
sar
out
enter
sarb
rcr
loope
lea
add
mov
mov
mov
jmp
rol
xlat
int
arpl
mov
mov
imull
jle
or
jle
ljmp
std
call
leave
jecxz
xor
cli
int
in
fdivrs
ret
loope
icebp
sbb
call
out
out
das
out
bnd
cli
and
aam
sbb
fimull
jecxz
in
in
rol
ss
repnz
fsubp
ret
sar
testb
int
mov
xchg
repz
xor
hlt
repz
fnstcw
not
add
xlat
call
fsubp
jmp
mov
jmp
fcmovnu
cmp
aas
aas
out
cmp
xlat
fchs
mov
in
mov
int
lea
aad
call
sti
icebp
lret
int
in
in
out
in
xchg
lret
in
ss
fcmovbe
in
aad
clc
xor
testb
sbb
mov
mov
loopne
rcl
xor
xor
loopne
out
testb
mul
mov
int
out
call
imul
repz
out
cmp
aam
fcmovu
hlt
cli
xchg
fscale
loop
out
loop
cmp
in
call
repz
ror
shlb
stc
in
neg
loop
int3
adc
jecxz
rol
int3
cli
lret
leave
jmp
sar
int
ds
loopne
fadd
flds
xchg
xchg
out
iret
xor
in
iret
cld
enter
cmp
clc
test
repz
cli
mov
ffreep
xchg
decb
ror
loop
cmp
cmp
aad
ds
lret
fneni(8087
test
in
out
div
int
cld
int
loope
xchg
ret
out
mov
sti
and
fucomp
shl
in
in
std
shl
out
xchg
fsubr
out
out
int
sti
aaa
xor
fucomip
dec
sti
fsub
clc
faddp
testl
xchg
jecxz
loop
cld
fucom
call
ret
cmc
xchg
out
xchg
xor
aam
inc
in
add
add
enter
ret
xorb
pop
shrb
jle
cmp
lret
xor
cmp
stc
loope
in
aam
test
orb
xchg
mov
repz
in
mov
fcmovu
aas
repz
icebp
in
not
jecxz
mov
ljmp
in
xor
cmp
call
cmp
clc
fcomp
mov
in
out
repnz
aad
iret
out
fdivs
fcmovb
repz
xchg
test
int
loop
in
repz
xor
cmp
aaa
xor
jmp
loop
fucomp
ljmp
lock
out
xchg
xchg
shr
cmp
rcl
clc
fld
cmc
hlt
fsubp
fcmove
out
cld
enter
xchg
in
shr
cmp
xor
iret
flds
iret
repnz
test
xchg
leave
xchg
repz
icebp
f2xm1
ljmp
into
hlt
fsubr
cmp
stc
in
mov
ret
cld
leave
fcmove
int3
mov
shlb
cli
hlt
sar
ds
ds
rol
loope
fidivrs
fadds
icebp
call
clc
jmp
lock
icebp
clc
aad
test
add
lret
xchg
xor
cmp
out
rcl
shr
vpavgb
div
test
int3
out
mov
iret
aaa
in
cmc
lret
out
cmp
lret
cld
loop
cmc
test
out
xor
lret
sti
std
shl
xlat
loopne
hlt
aas
ret
out
int3
iret
int
repnz
mov
cs
idivl
into
out
div
cmp
shl
stc
adc
int
rcr
aam
xor
fprem1
cmc
int
sar
ret
add
loope
fdivr
jmp
neg
jecxz
fdivr
fdiv
icebp
xor
stc
hlt
aaa
cmp
fnstsw
cld
loopne
in
loopne
jmp
std
orl
ret
repnz
hlt
hlt
fxch
sbb
rcr
rcl
mov
xor
jmp
leave
xchg
aaa
cmp
pop
into
das
jle
or
jle
xlat
fucomi
hlt
test
add
std
xchg
aas
repnz
jmp
aaa
int3
cmc
ror
icebp
cmp
sub
xchg
mov
roll
neg
ss
out
cmp
rcl
sar
adc
orb
cli
lock
fsubr
aad
xor
xor
aaa
sti
lock
int3
fidivrs
loope
jecxz
leave
fimuls
into
out
rcl
fnstenv
aam
into
cli
lock
rcr
rcr
in
fcom
mov
fstl
int
iret
xor
clc
fmulp
cmp
adc
xlat
enter
loope
fisttpl
rcl
xor
std
shl
repz
xor
cld
flds
loope
mov
les
stc
ror
das
fst
fucomip
fdiv
div
clc
mov
int
mov
cmc
mov
xor
clc
xlat
aam
leave
icebp
loopne
roll
ret
in
leave
lret
loop
jmp
repz
out
in
aam
rcr
hlt
out
test
xchg
mov
lock
repz
fsqrt
cmc
clc
rcl
xlat
mov
fadd
fimuls
stc
aam
ror
cmp
cmp
cmp
ds
in
loop
std
ffree
shr
in
rolb
aaa
fdivrl
jmp
add
mov
fucomp
nop
sti
incb
rcl
cmc
xor
aam
fsubrp
ror
rolb
enter
decl
fsubp
call
aad
stc
cmp
shl
cmp
test
icebp
mov
lds
push
enter
aam
cmp
rcr
sti
int
mov
call
cli
ljmp
aaa
sub
into
call
lret
xor
repnz
out
in
cld
test
icebp
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
shl
rol
stc
fcmovnbe
imul
ss
repnz
ds
loope
xlat
cld
orb
rcl
in
lock
int
fcom
fdivr
cmp
test
xor
and
xchg
ret
enter
into
rcl
out
repnz
in
stc
aad
adcb
xchg
jecxz
shr
fucomi
xlat
xor
ljmp
fdivr
xchg
fxch
in
enter
addb
cmc
ljmp
icebp
les
cmp
fldl2t
xchg
incb
shl
call
loope
ret
xlat
shl
loop
orb
std
out
imul
fnstenv
jecxz
out
std
hlt
into
cmc
rcr
adc
cmp
lret
incl
lret
in
cs
cmp
in
jmp
rcl
aam
loopne
clc
adc
repz
lret
lock
sbb
test
mul
shll
aad
aam
enter
into
std
repnz
xlat
test
jmp
lret
fmull
lret
int
into
clc
repz
cmp
cmc
aad
jmp
cmp
xlat
aam
ret
jmp
repnz
out
das
xor
fcomp
fidivrl
ds
fildl
std
leave
loop
jmp
in
out
fprem
aas
ret
ds
add
in
cli
jmp
out
lock
jmp
loope
loop
xor
xlat
in
out
hlt
cmp
fcmovu
lret
test
xabort
addb
xor
test
loopne
xor
xor
aam
testl
aam
loop
jecxz
mov
cld
mov
jecxz
aas
shl
ret
std
in
xlat
xor
loope
xor
fucom
testb
clc
in
ror
decb
cmp
repz
ds
stc
shr
out
aas
rcl
clc
decl
in
mov
xchg
repz
fsubr
aaa
cmp
mov
add
jmp
ret
enter
int
aas
icebp
jg
mov
jle
or
jle
cmp
iret
cmp
jmp
test
rolb
xor
xor
out
cmp
out
ret
cli
testl
xchg
ljmp
mov
cmp
icebp
rcr
flds
mov
std
iret
mov
aad
ljmp
jmp
sarb
inc
jmp
imul
sbb
int3
rcl
in
test
rcl
repnz
loope
xor
frstpm(287
xchg
loopne
hlt
mov
loopne
lock
fcomi
jecxz
jmp
cld
out
in
fcomp
ljmp
stc
jmp
xchg
out
in
out
xchg
hlt
in
div
cli
jmp
cld
loop
icebp
in
cmp
roll
int
in
jmp
test
into
divl
lock
ret
clc
hlt
aas
testl
std
call
fmul
aaa
call
iret
cmpl
lret
int3
out
cld
jmp
iret
cmp
aad
sti
repnz
out
aad
loope
repz
ljmp
in
in
aam
loope
cmp
call
cmp
fdiv
ror
aam
stc
loope
incl
ror
jecxz
lock
out
xor
div
fcmovu
xlat
rol
fcmovnu
cmc
in
xchg
mov
iret
ljmp
aad
in
rcr
lock
xchg
imul
cli
iret
fucomp
int3
hlt
in
call
fidivrs
filds
stc
sbb
fucomi
icebp
fsubrp
addl
clc
stc
imul
std
lds
cmp
into
xchg
in
xchg
jecxz
out
sub
cmp
icebp
int3
out
fidivl
clc
fidivrs
int
rcl
fdiv
mov
orb
test
ss
xor
in
cmp
fisttps
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
xor
outsl
clc
xor
jle
cmp
in
mov
sarb
repz
sti
cmp
testb
xor
dec
loopne
testb
decb
ljmp
loope
adc
loopne
out
idiv
out
test
nop
repnz
hlt
neg
leave
xor
repz
aad
std
sbb
cli
int
fmul
repz
repnz
lret
filds
ret
and
lret
jmp
shll
stc
out
test
ljmp
loopne
incb
xor
xor
in
xor
std
sti
frndint
cmp
cld
shl
fiadds
rorb
out
repnz
out
clc
fdivrp
lret
int3
and
out
xchg
loopne
clc
call
xor
fldpi
xlat
rcr
out
repz
cmp
fmull
cmc
cli
in
out
test
in
cmpb
xor
xor
iret
divb
cmp
cmp
loope
out
out
sti
clc
loope
in
mov
into
ljmp
fnstcw
ljmp
cld
mov
into
jmp
hlt
mov
in
into
cmp
lret
fisubrl
sti
iret
cmp
jecxz
xor
cli
fstp
loop
jmp
iret
mov
shr
clc
shl
aaa
cmp
fldl
rol
addl
enter
mov
xor
sar
aas
aaa
ds
aas
xlat
loope
stc
in
out
xchg
cli
fiadds
repz
repnz
cmc
ret
rol
add
call
mov
ficoms
cmp
les
fcmovne
repz
ret
out
cmp
cli
in
out
in
lock
enter
out
cmp
cmp
fdivr
aad
rcr
test
shl
mov
int
addl
in
iret
shl
leave
enter
mov
mov
mov
pushl
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
cmc
out
icebp
ds
cld
cmp
shl
nop
jmp
call
ds
fsub
testb
sbb
clc
out
mov
aam
repnz
in
call
cli
sar
shl
mov
fmul
sbb
jecxz
iret
xchg
icebp
out
xor
rcr
out
rcr
cli
in
and
cmp
fdivr
orl
fld1
repnz
cld
xlat
cmp
xchg
cld
fucomi
int
test
xchg
iret
int3
into
out
ljmp
clc
cmp
cmp
out
cmp
jecxz
add
mov
lock
shrl
lret
out
fmul
out
iret
fiadds
aam
enter
out
xlat
addl
cmc
sarl
sar
cld
icebp
ret
shl
xchg
xlat
into
nop
into
ret
adcl
icebp
idivl
icebp
int
fdiv
ror
cmp
in
sar
addl
xor
leave
cmc
cmp
test
int3
cmp
rcl
fcomp
shl
cmc
out
mov
loope
rolb
ljmp
iret
fnstcw
sti
in
loopne
call
iret
int
aam
int3
hlt
bnd
call
into
sbb
repz
in
nop
out
mov
in
xor
cmp
and
out
loop
rcr
in
into
in
out
out
test
loopne
lret
cmp
cli
cmp
aam
lret
addl
in
ljmp
int
fld
sti
cmc
icebp
cmp
loop
int3
in
xlat
aad
sar
test
cld
test
hlt
shr
sub
repz
ror
cmc
repz
jmp
rcr
in
in
fmul
incb
xchg
aad
xor
lret
in
std
into
addl
fmulp
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
shufps
xchg
cmp
cmp
jle
mov
loop
nop
mov
xor
ljmp
out
fdiv
cmc
aad
std
clc
xchg
loope
icebp
leave
adcl
repz
xlat
loopne
sar
les
into
cli
xchg
xchg
in
divb
cmc
xor
aam
lret
fstpt
int
xchg
xor
lret
stc
test
ret
test
iret
xor
fcompp
ror
loop
out
rol
sbb
orl
xlat
shr
in
test
shr
fdivrl
div
icebp
stc
icebp
and
fimull
mov
jecxz
shl
cmp
rcr
icebp
rcr
cmc
cmp
aam
shl
out
in
cli
std
repz
icebp
into
ss
jmp
jmp
aaa
loopne
ret
jecxz
xlat
jecxz
fimull
loop
xchg
xlat
xor
fucomi
out
jmp
in
test
rol
in
neg
stc
xchg
test
xor
xor
cmp
clc
xor
cmp
mov
call
repnz
sar
lret
lret
loopne
fstpt
xlat
leave
orl
int3
nop
aam
loop
xor
in
xor
shl
clc
in
xabort
fadds
out
xchg
or
call
movb
in
neg
sti
stc
mov
in
int
jmp
hlt
into
das
xor
jmp
aad
aam
repz
test
clc
iret
loopne
xchg
sar
xorl
fucomi
jmp
neg
out
cmp
cld
fcmovb
out
ret
test
into
out
adc
repnz
cmc
xor
aam
into
icebp
out
cmp
sar
jmp
jmp
out
lret
jmp
out
ret
out
out
ss
loopne
cmp
cld
lock
out
aad
test
loop
sti
test
mov
fmull
jecxz
int
lret
cmp
into
in
icebp
faddl
or
iret
xchg
xchg
shl
int3
ss
aam
fxch
aaa
ror
hlt
int3
fiadds
cli
sub
mov
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
ja
push
cmp
cmp
jle
test
mov
fucomip
iret
call
sar
cld
xlat
rcr
icebp
icebp
lock
lret
mov
xchg
out
lock
cli
cli
jmp
lret
into
sti
ror
repnz
test
lret
jmp
iret
sub
in
fcmovbe
icebp
lret
ljmp
cmc
test
xchg
jecxz
lea
in
into
cmp
ret
in
fadd
repz
aad
iret
fmull
in
loop
out
jmp
lret
aas
shl
out
ds
jecxz
cmp
out
sti
out
cmp
xchg
int3
imul
int
cmp
cmp
ss
loopne
cmp
loope
fmull
loop
xchg
out
ljmp
fdivrl
loop
aam
mov
sti
fxch
fcom
filds
test
cmp
mov
lret
out
aad
ds
fucom
fcomp
mov
out
std
in
in
ljmp
leave
into
ss
cld
out
incl
ret
add
in
in
adc
mov
in
xor
cs
int
out
icebp
test
out
in
out
fsubp
repnz
in
stc
icebp
shr
rcr
cmp
xlat
aad
cmp
ret
cmc
idiv
xchg
mov
imul
lock
lock
xchg
repz
out
cmp
in
in
jmp
stc
addl
fcomp
xchg
filds
ret
jecxz
fsubp
cmp
stc
loopne
ret
jmp
sti
fucomi
xchg
xlat
mov
jecxz
sub
stc
das
aaa
xor
incl
loope
in
in
rolb
std
sarb
jmp
clc
ret
and
xchg
mov
adcl
lret
inc
clc
fadds
sti
lds
xor
into
xor
shl
lds
aam
cmp
shl
mov
stc
fsub
sub
call
xor
cmp
fidivl
out
int
cmp
out
rolb
movl
jne
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
add
jle
add
aam
call
in
sti
lret
lret
jmp
cmp
cli
in
sti
rcr
clc
into
cli
ret
aas
rolb
in
into
out
lret
call
lret
xor
int
iret
aaa
in
fcmovnbe
rcl
not
xchg
cld
mov
lock
cmc
test
cmp
enter
cmp
div
stc
fmul
xchg
repz
enter
xchg
xchg
lock
aam
clc
aas
cmp
les
leave
clc
stc
xchg
in
fimuls
int
sti
fsubr
jmp
out
aad
ret
mov
sub
loopne
vpsubw
vpsadbw
sarb
lock
cmc
fprem1
ljmp
lret
jmp
vpsrld
out
fsubr
icebp
ror
into
repnz
loope
mov
or
nop
std
and
in
sub
lock
cmc
cmp
cmp
cmc
fmull
fucomp
xchg
xchg
call
cmp
aad
sti
cmc
cmp
clc
ss
xchg
fdivp
out
int3
into
xchg
int3
lret
xor
cli
cli
aas
clc
xor
loop
leave
test
enter
loop
mul
in
sub
jmp
fmulp
test
loopne
call
mov
orb
enter
cmp
cmp
into
incl
cli
in
dec
int3
out
fstp
sbb
in
jmp
in
in
clc
leave
xlat
shl
loop
lds
addb
lret
out
xchg
aaa
stc
hlt
xor
xor
repz
rol
xrelease
cli
shr
mov
cmp
in
stc
aas
rcr
sti
sarl
repnz
ret
fdivrl
les
xchg
lret
in
shrb
stc
in
jmp
aaa
cmp
xor
cmc
xchg
xor
loope
in
fucomi
int
in
filds
cmc
aam
in
ss
faddp
loopne
addb
aas
orb
xchg
aam
test
cmp
ljmp
movb
es
inc
add
add
lock
add
push
inc
or
add
xor
jmp
into
into
rol
rol
rcl
mov
or
dec
push
sub
cmp
jle
out
jecxz
xchg
leave
faddp
lret
rcr
loopne
xchg
int3
out
ljmp
int3
cmp
cmp
fcmovnu
hlt
cmp
fildl
in
mov
into
icebp
ror
shl
into
jmp
enter
out
cld
cmp
clc
jecxz
leave
or
loopne
xor
icebp
sub
iret
cmp
lock
int3
clc
cli
iret
iret
jecxz
cld
shl
test
loop
loopne
ret
jecxz
test
lret
aam
hlt
in
int
xlat
xlat
cmp
jmp
lret
out
repz
iret
cmc
cmc
divl
in
div
shl
shl
fdivrp
cmpl
mov
div
in
test
cld
cli
cld
lock
int
rcr
sarl
leave
xor
cmpl
roll
fucomip
fisttpl
adc
rcl
sti
cmp
cmp
shl
rol
jmp
lret
mov
xor
xchg
out
lret
in
lret
idivl
aad
fadd
cmp
add
mov
jmp
test
jmp
ljmp
fscale
in
in
idiv
shl
xchg
test
lock
fldl
int
fnstenv
fsubp
into
les
xlat
cmc
stc
int3
xchg
cld
nop
into
into
int
out
das
shl
ljmp
cmc
in
loop
flds
loop
lret
jmp
jmp
cmc
lret
fsubr
loope
cmp
fst
jmp
cmc
decl
addb
aad
leave
fdivr
hlt
into
xor
cmp
sar
fst
addl
mov
out
shl
int3
fucomi
shrl
repnz
idivl
xor
clc
cld
mov
in
fcmovu
fmul
adc
addl
sti
ljmp
lds
stc
sub
dec
xchg
repnz
xchg
aad
repnz
rcr
fmulp
aaa
int3
addl
in
loop
xchg
ss
fsubr
ljmp
hlt
ds
div
xrelease
ffree
leave
cld
iret
xorb
in
clc
and
out
int3
add
mov
jmp
ret
leave
lret
aad
flds
adc
mov
jle
cmp
jle
addb
std
decb
test
int
xor
repz
iret
or
in
loop
test
sar
icebp
loop
hlt
lock
lret
cli
icebp
aam
into
aas
cmp
faddp
jmp
out
icebp
loop
sarl
aad
repz
cld
aad
lret
iret
loopne
fisttpl
test
leave
int
jmp
fisttps
loope
in
rcl
lret
cmp
dec
sarb
cld
repz
out
call
lds
fdivr
cmp
leave
cmp
shl
stc
cli
sar
ljmp
xchg
xor
out
out
fcom
sar
aam
cli
cmp
leave
out
fcmovu
incb
incb
sarb
repnz
fiaddl
repz
addb
int3
adc
mov
repz
in
std
in
cli
in
aad
cli
ret
aad
fld
jecxz
cli
flds
adc
out
in
xor
out
lret
lock
int
shl
sbb
testb
ffreep
leave
mov
int
shl
int3
les
in
fmul
into
enter
sar
mov
loopne
call
xchg
xchg
out
xor
in
sti
cmp
enter
out
fcom
aas
aas
ds
icebp
repz
add
ljmp
xor
jmp
jmp
fcmovbe
cmp
in
cmp
call
int3
mov
adc
icebp
leave
ror
rcr
cmp
sbb
int
rcr
lds
mov
in
repnz
out
shr
ss
cmc
in
shr
cmp
sub
sar
out
dec
iret
fimull
stc
aam
fcmovb
cmp
sarb
loope
stc
fucomp
fsubp
and
in
cld
int
int3
test
fsubr
rcr
jmp
sti
in
stc
cmp
neg
roll
fcmovnb
out
loope
mov
ljmp
shl
iret
ret
std
sbb
lock
lret
call
repz
cmp
add
add
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
in
xor
roll
xchg
std
sub
jmp
aam
enter
iret
sbb
ret
div
shr
adc
mov
out
jmp
aam
stc
sarl
shl
cmp
fstpt
in
cmc
repnz
in
fisttpl
loop
shll
in
cld
fcomi
in
shr
cmp
fldl
fiaddl
lret
ror
stc
in
iret
xlat
fidivrl
aad
cmp
aam
fcmovb
xlat
fadd
stc
jmp
faddl
ret
xor
lret
jmp
divb
fcmove
jecxz
enter
leave
out
filds
xor
loop
xor
sti
not
cmp
hlt
loope
in
fcmovnu
ljmp
call
ret
in
out
jmp
std
rcl
adc
aaa
rcl
leave
call
loope
fimull
lret
ljmp
icebp
int3
test
cli
into
rcr
cli
loop
mov
imul
loopne
out
lret
out
into
int3
cmc
xlat
aad
addb
loopne
lret
jmp
fmull
test
shl
in
fneni(8087
std
icebp
cmp
loop
fstp
cli
loop
in
iret
icebp
orl
into
iret
cmp
fucomi
faddp
rcr
cmp
loopne
xchg
shl
out
mov
or
loope
div
xlat
in
ror
iret
cmp
cmp
mov
adc
mov
xchg
in
iret
in
leave
les
iret
repz
xor
fst
loopne
mov
fcos
int3
fiaddl
xor
out
call
jmp
ret
cmp
sbb
xchg
lea
out
rcl
sti
in
loopne
sti
cmp
sti
loop
in
fiaddl
ror
xor
jecxz
cmp
repz
out
clc
aaa
cmp
call
sti
fdivr
fmul
loope
out
rcll
div
out
cmc
cmp
hlt
loope
cli
shl
fcmovne
test
ljmp
int
aas
xlat
xor
add
mov
jmp
mov
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
lea
jle
cmp
jle
fucomp
loope
shl
clc
addl
mov
rclb
in
jmp
repz
into
cmp
rcr
out
call
mov
xchg
jecxz
xor
in
leave
sbb
addb
add
mov
loop
and
xor
lret
into
sarl
clc
shl
aad
repz
sar
lds
lock
in
in
lock
lock
into
out
cmp
aad
aas
add
test
xchg
mov
jmp
clc
xlat
aad
ljmp
sti
leave
fcom
mov
clc
into
loopne
lock
pop
shlb
cmc
out
xlat
fxch
sti
repz
fsubr
icebp
fcom
cmp
ret
clc
in
fisttpl
rol
lock
jmp
clc
hlt
addl
mov
sti
cld
loope
xor
cli
xor
in
clc
neg
out
in
sub
int3
lret
in
repnz
adc
stc
fsubr
ds
aad
fsubr
fcmovu
sar
movl
shl
xor
icebp
int
rcl
cmp
fldln2
in
cmpb
cmp
fdivp
out
fiaddl
nop
mov
int
shr
lret
int
iret
sarb
ret
in
fimull
loopne
test
into
int3
out
xlat
hlt
rcr
cmp
mul
add
call
leave
leave
mov
ljmp
cmp
shlb
lret
ror
clc
jmp
rol
out
ds
loopne
cmp
in
ret
jecxz
in
repnz
icebp
hlt
xlat
fidivl
enter
call
aad
iret
cmc
div
cmp
in
mov
icebp
mov
cmp
ret
repz
not
xor
out
hlt
xor
cld
sti
fsub
fisttpl
jecxz
test
icebp
repnz
into
ss
loope
cmp
rolb
loopne
jmp
fcmove
popl
vpaddusb
std
rcr
cmc
repnz
or
lret
clc
mov
out
aad
clc
fadd
fucomi
cld
mov
mov
jmp
enter
fcmovnbe
fcomp
insb
jae
fiadds
push
fcmovb
leave
jle
cmp
jle
rcr
fcmovne
ret
repz
xlat
jmp
lret
test
mov
xor
iret
shl
out
repz
jecxz
out
loop
repz
call
cld
mov
orb
cli
sti
lds
loopne
shll
out
enter
lret
orl
lret
out
shr
std
cmp
into
not
cmp
icebp
cmp
mov
int
ficoms
orl
in
fsub
test
ljmp
fld
xchg
shr
xorl
out
xlat
div
lret
stc
sarb
add
les
call
cmc
cmp
loope
jmp
repz
inc
jecxz
xlat
ror
jecxz
mov
and
sub
ljmp
xlat
iret
fld
in
repnz
mov
int
xchg
loop
loope
cmp
jmp
fcomip
jecxz
jecxz
cld
cli
out
testb
fst
aad
shr
xor
adc
test
loop
fld1
clc
xlat
ffree
xchg
aam
icebp
loope
fcmove
fptan
fcomi
cmp
cmp
hlt
fucom
in
in
test
xchg
mov
aad
aam
leave
cmp
xlat
ds
ljmp
add
fiaddl
fildl
xor
fucomi
aaa
fnstcw
out
cmc
cli
test
add
jmp
sbb
jmp
ss
sub
call
cmp
loopne
rcr
cmc
fst
fcomip
lret
cmc
aad
int3
cli
aaa
stc
fstp
aaa
cmp
sar
fldl
fdivrp
xchg
loop
std
test
jmp
icebp
xor
fsubrp
stc
loope
int
repz
call
xlat
mov
mov
mov
loop
ss
test
shl
idivb
ljmp
xchg
lret
lret
int3
fdivl
repnz
cmp
loope
stc
out
cmp
adc
out
lock
into
shl
in
aam
into
iret
aam
or
add
pop
jmp
aas
lret
ror
lahf
jmp
test
jle
add
out
aaa
sti
filds
div
std
jmp
in
fildl
mov
out
jmp
idiv
cld
shr
shl
fcomp
shl
call
test
cld
icebp
mov
loopne
addb
in
call
clc
iret
fcmovnu
fcmovnbe
xchg
fprem1
aad
mov
in
enter
int3
call
cs
cld
xor
stc
fldl
xabort
lret
test
mov
inc
test
jecxz
sub
cld
cli
fsin
jmp
int3
lock
jmp
mov
std
jmp
xchg
ljmp
cmp
lock
fdivrp
roll
add
lea
enter
jecxz
in
out
jecxz
in
out
sti
in
into
inc
mul
aam
loop
mov
in
fisttpll
lret
in
int3
aam
out
out
fsincos
repz
int3
rcl
test
les
mov
jmp
fsubr
int3
aam
fmulp
rcl
into
jmp
lock
sti
aad
ret
in
in
les
into
ljmp
iret
iret
int
fldl
out
orb
jmp
ljmp
leave
rcr
in
loop
in
rorl
call
das
aad
aad
jmp
xor
cmpl
jecxz
fisttpll
icebp
test
lret
repnz
fdecstp
jmp
clc
rcr
out
test
in
stc
addl
mov
out
in
ret
lret
cmc
aad
jecxz
in
lock
out
mov
cmp
mov
out
repz
lret
divb
out
aam
cli
fcmove
hlt
loopne
std
into
in
repnz
leave
aam
stc
fiaddl
hlt
cmc
icebp
xor
in
xlat
adc
int
in
in
icebp
fucom
call
xchg
loope
loop
call
cmc
xor
rcr
ds
cmp
sti
aad
fucomip
mov
enter
mov
sub
fld
rol
xor
lret
jecxz
testl
loope
nop
int3
in
aam
in
cmc
pop
ret
push
mov
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
repz
cmp
loopne
cmp
sar
shr
stc
mov
std
in
jmp
leave
jmp
in
ljmp
test
call
lock
test
loop
in
cmp
clc
jecxz
xor
cli
hlt
imul
int3
xor
in
test
cld
xchg
test
xchg
sbb
or
out
cli
in
in
out
leave
stc
out
repz
aad
decl
xchg
out
lret
test
into
out
hlt
fcmovne
aas
ret
testb
cld
fucomi
div
test
mov
loopne
sub
call
div
xlat
jecxz
shl
clc
clc
in
sti
sbb
lret
icebp
xchg
xchg
out
aam
stc
out
iret
rcl
sub
loop
call
stc
in
adcl
cs
stc
ljmp
cli
in
neg
stc
mov
cmp
in
repnz
jmp
jmp
int3
xor
leave
out
imul
int
repnz
aam
cmc
leave
enter
in
fnstcw
in
into
aas
std
cld
fsincos
hlt
xchg
rol
jmp
stc
xchg
in
xchg
mov
shl
shlb
cmp
cmpb
cld
jmp
enter
repz
hlt
repnz
fiaddl
cmc
icebp
hlt
int3
jmp
int
xor
xchg
enter
out
out
cmp
ss
fucomp
aam
ds
out
fucomip
out
out
test
ror
lret
clc
aam
xor
lret
cmp
cld
cmp
testl
std
repnz
fcmovu
lock
stc
cmc
sarb
roll
in
cmp
into
int3
in
xchg
loope
stc
ss
fmul
int
shlb
cmp
cmc
mov
and
icebp
mov
clc
lock
cld
enter
addl
mov
out
nop
lds
ret
enter
cli
iret
cmp
aad
fucomip
jecxz
test
sti
or
jmp
into
div
mov
and
or
jmp
ret
ret
rcl
aad
sbb
lods
add
jle
cmp
jle
call
cmp
aam
fucom
ss
in
lds
testl
shl
in
fcmovne
fcmove
test
mov
stc
clc
lock
loop
int3
xchg
mov
loopne
repz
cmp
aad
aam
cmc
cli
roll
incb
xchg
jmp
int
fst
stc
cmp
fimull
test
cld
fmull
fldln2
ror
fxch
ds
loop
iret
fsubp
cmp
orb
dec
jmp
dec
fidivs
shl
cmc
xor
int
rcr
ljmp
cli
xchg
std
out
out
rol
call
call
cmp
xor
fdivrp
cld
rcr
mov
lret
xor
jmp
fdivrs
cmp
xlat
shl
dec
cmp
loopne
xchg
xlat
loope
jmp
mov
enter
rol
idiv
in
stc
lock
aam
fcomi
ljmp
loope
lock
enter
rcl
in
jmp
idiv
into
in
out
not
in
mov
and
loopne
shl
dec
jecxz
jecxz
xor
das
lock
fcmovnu
not
test
repz
cmp
decl
loopne
fsubp
mov
clc
loope
xor
xor
shr
hlt
cmp
ffreep
test
std
stc
in
test
ret
cld
mov
xchg
out
repz
xor
sarl
cmpl
loope
clc
jmp
sti
xchg
mov
lret
in
jmp
loop
iret
fdiv
sti
in
in
jecxz
std
addl
lret
out
loop
in
into
jecxz
in
cmp
aaa
aad
ror
lock
lret
aas
aam
ret
cmc
roll
mov
jecxz
test
jmp
enter
hlt
in
into
ds
iret
cli
ret
fcmovb
leave
jmp
in
mov
cld
incl
aam
xor
sbb
jmp
cmp
loop
ret
mov
jecxz
in
shl
sti
fldl2e
lret
aam
std
idiv
fcom
hlt
rolb
in
lret
mov
rorl
sbb
push
mov
jmp
lret
aad
int
ss
roll
ds
sarb
adc
jle
ljmp
cmc
dec
icebp
iret
cld
cmp
hlt
adc
rcr
jecxz
f2xm1
int
std
mov
mov
rol
int3
xor
cmc
aam
aaa
into
repnz
leave
lret
stc
idiv
fimull
hlt
ror
shr
xor
idiv
icebp
fdivr
shl
xchg
cli
stc
lret
call
rclb
sarl
aaa
cmp
shr
icebp
jecxz
aas
fcmovnbe
fadds
leave
in
int
int
lret
in
divb
rcr
dec
repnz
test
rcr
loop
test
loop
out
xchg
int3
repz
in
xor
das
in
xor
lock
int3
repz
rcl
sar
jecxz
lret
in
mov
int3
xchg
roll
iret
out
das
sti
cmp
fdivrl
ret
test
fldl
test
aad
into
int
test
and
xlat
loopne
jmp
popl
test
cmp
out
out
jmp
cmc
cmp
test
div
loopne
shr
enter
repnz
out
repz
into
sti
sar
idivb
lret
icebp
cli
lock
rol
aam
aad
ljmp
mov
in
cmc
test
icebp
stc
jmp
ds
rolb
loopne
jmp
icebp
int3
imul
ret
call
cmp
fistpll
clc
mul
repnz
ljmp
out
ror
into
ljmp
sar
loop
out
in
out
neg
mov
cmp
hlt
pushl
lret
into
in
clc
xor
lret
sarl
jmp
out
test
jecxz
loop
in
jecxz
loop
in
repnz
in
ror
aaa
filds
ret
cmp
xchg
nop
iret
loope
out
call
rcl
cli
lock
aaa
cmp
in
repz
push
idiv
in
mov
sbb
out
xor
cmpl
lock
in
sub
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
loopne
or
loopne
std
mov
clc
loope
ljmp
fcmovne
in
cmp
incl
jmp
mov
jmp
in
jmp
icebp
fsubr
xor
fsqrt
repnz
mov
std
in
fsubp
repnz
cmc
xor
xlat
cli
stc
dec
repz
shl
repnz
lret
std
ljmp
xor
test
fcom
in
test
cmp
test
in
les
cmc
out
xor
out
in
div
cmp
in
sub
xchg
leave
sti
jecxz
mov
cld
loope
cmc
cmp
cmp
loope
sar
loope
ret
loope
idiv
xchg
xchg
xchg
out
mov
shl
loop
stc
cld
cmc
int3
fildl
mov
cmp
int
fucomi
decb
rcl
out
cld
sti
ljmp
loope
out
std
rcl
test
enter
aam
rcr
cmpb
shl
sti
cmc
aam
ret
mov
sti
lock
int
call
jecxz
jmp
aas
xlat
rolb
enter
testl
leave
lock
fucomp
in
enter
in
cmp
cli
lret
mov
loopne
in
in
xor
xchg
subl
cmp
ss
out
jmp
sar
les
hlt
shl
in
in
cli
out
nop
loope
ffreep
out
ret
sti
std
std
out
fildl
cmp
out
mov
sti
fadds
mov
fmul
sub
aam
rcl
cmp
shl
xchg
in
sti
out
out
fiadds
int3
das
cmp
mov
out
cmp
sar
shl
sar
mov
ret
ficoml
out
div
shll
int
icebp
in
div
iret
in
icebp
ds
out
cmc
out
loopne
xchg
fstp
in
test
in
in
repz
cld
mov
adcl
xor
mov
adcl
add
jmp
fcom
xlat
push
xlat
outsb
shr
loop
in
jle
adc
jle
clc
aaa
fadds
out
loopne
jmp
adcl
shl
enter
addb
cmc
fxtract
ljmp
adc
sar
clc
jmp
aam
icebp
lock
int
aaa
fcmovnbe
aad
cld
fcomip
imul
fucomi
mov
xchg
rcl
icebp
repnz
xor
test
in
std
out
loope
orl
into
fmul
aaa
iret
call
shr
repz
rcr
loopne
and
mov
ret
fcmove
jmp
cld
call
sti
fcmovbe
repz
mov
lret
mov
loop
fsub
aam
cmp
repz
sarb
icebp
jecxz
hlt
test
jecxz
xlat
fcmovne
ljmp
mul
hlt
out
in
clc
aaa
fcomi
cmp
out
sarl
test
jmp
faddl
xchg
loopne
lock
loopne
int
into
in
icebp
stc
fstpt
sti
aad
in
out
nop
out
loope
icebp
std
aad
fildll
xor
fxtract
in
aaa
cli
repz
sti
stc
iret
xlat
ds
dec
fyl2xp1
in
mov
jecxz
adcb
stc
fcmovb
call
xlat
cmp
repz
jecxz
mov
in
int
repnz
aam
into
xlat
ffree
repz
idiv
lock
faddp
xchg
loopne
fcomip
in
jmp
jmp
in
cld
ljmp
repz
hlt
test
incl
test
aad
cmp
cmp
fadds
clc
shl
enter
mov
into
iret
cld
xchg
rorb
loop
repz
ss
hlt
sarl
incb
mov
xchg
xchg
sbb
shr
xor
in
icebp
cmp
test
out
enter
hlt
repz
cmp
out
ds
rol
lock
lock
fsubr
movzwl
mov
and
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
loop
fincstp
fdivrs
adc
jle
enter
sub
lret
xor
enter
fxch
rcr
rolb
xchg
aas
out
clc
ljmp
cmp
lret
in
sti
cmp
stc
mov
lret
out
out
shlb
clc
jmp
fdivr
cld
idiv
cmp
add
fst
adc
xchg
in
xchg
leave
imul
cmp
xor
ss
or
lds
mov
decl
lret
xchg
mov
loope
cmp
cmp
jmp
ds
addl
jmp
std
int
xor
lret
shr
rcr
lret
cli
in
int
out
sub
icebp
shl
std
in
rcr
xchg
loopne
nop
mov
aam
shl
sti
repnz
fcmovu
jmp
out
shl
ljmp
stc
nop
xchg
iret
repz
div
in
in
out
cmp
std
jmp
stc
cmp
in
cld
fdivr
mov
in
icebp
jmp
xchg
xor
xor
iret
fsubr
cli
aaa
fcmovne
into
cmp
flds
ljmp
test
in
out
out
fdivs
std
out
std
stc
clc
ds
ret
fadds
std
mov
test
loop
call
fldpi
fsubr
cli
xchg
call
cmp
fucompp
out
rcl
into
cmp
fdiv
jmp
ret
call
in
fmuls
lock
xchg
xchg
out
int
cli
fadd
testb
fcomp
fiaddl
jmp
rclb
repz
hlt
jmp
test
sti
shr
sbb
fldln2
lea
aam
ror
ss
dec
int3
shl
addb
out
leave
in
jmp
ljmp
into
cmp
sti
xor
loopne
cmp
fdivr
fucom
mov
cli
loop
filds
aaa
out
xlat
aad
leave
test
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
jae
xchg
xor
add
cmp
rcl
aam
fcmovu
mov
leave
out
flds
into
lds
leave
cmp
fmul
cmpb
shr
sti
not
aad
fcomp
icebp
mov
fcmovnu
xor
repnz
xor
shlb
stc
fcmovb
test
in
ljmp
in
jmp
into
xchg
loopne
out
into
leave
clc
xor
jmp
aas
ret
ret
xchg
jecxz
dec
loop
mov
in
xor
clc
cmp
not
sarl
push
cmc
iret
ds
mov
in
jmp
loopne
int
lret
fsubrs
jmp
jmp
rol
fdivr
fdivp
loope
out
int3
iret
xchg
xchg
hlt
das
int
in
cmp
sti
out
icebp
clc
out
icebp
fsubr
leave
test
idiv
mov
rorl
cmp
fdivr
ror
icebp
cli
div
and
faddl
in
mov
sub
fpatan
leave
shr
fdivp
lret
fcmovnb
cmp
sarb
fadds
icebp
out
loop
out
xor
lock
div
idiv
lock
cmp
shl
fcomi
aas
cld
lret
xchg
loopne
cli
xchg
fstl
lock
cmp
ljmp
cld
ret
in
test
addl
out
call
call
cld
xchg
mov
ffree
stc
fcmovnu
orb
in
xlat
jmp
loop
out
cmc
aad
loop
ret
ret
xlat
leave
aad
in
fmull
xchg
iret
aad
shl
in
jmp
ror
out
out
call
in
xlat
out
call
fsin
lret
loop
out
test
cs
aad
jmp
rcl
loope
mov
loope
call
int3
sbb
aaa
call
add
cld
neg
icebp
sti
enter
sub
cmc
ljmp
stc
loope
aam
shl
and
ljmp
loope
shll
sar
push
ja
add
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
or
or
jle
add
adc
int3
aam
sti
into
in
sti
cmp
loop
iret
rol
hlt
ljmp
call
test
shl
lock
shl
cmp
cmpl
aad
fcmovnbe
shl
xchg
jecxz
enter
lret
lock
shl
cli
call
ljmp
mov
xchg
adc
ljmp
loopne
iret
sarl
ror
fcmovb
xlat
cli
cli
mov
mov
sar
xchg
and
out
leave
or
test
aas
faddp
fstp
loop
jmp
sti
int3
cld
fdivr
jecxz
rorl
out
divb
call
shl
fcomip
aas
lret
lea
loop
rorl
int
dec
cmp
fdiv
lock
fdivrp
or
loope
fisttpll
lret
sti
shl
xor
int3
ss
sbb
sti
xchg
in
xor
sub
xor
cmp
out
cmp
cld
and
sti
orl
rcl
icebp
lock
call
shl
cmp
xlat
std
test
xchg
test
call
icebp
xchg
out
clc
sar
cmp
iret
stc
jmp
add
cmp
mov
loop
call
ljmp
cmc
cmp
fstp
into
fdivr
fsubp
rcr
shl
clc
cli
test
loope
mov
hlt
leave
sub
fcom
fcmovnbe
xor
icebp
ret
fmul
cmpb
jmp
cld
sar
mov
lret
mul
shl
out
cli
in
jecxz
out
loopne
mov
xchg
ljmp
test
lret
fdivs
sar
cmp
div
ret
cmp
fidivrs
fmul
fdivp
into
enter
test
repnz
enter
cmp
xor
cli
roll
ret
vpaddusb
cld
out
ret
enter
iret
jecxz
iret
xchg
fsub
cmp
movl
jb
dec
jmp
aam
fadd
fstp
pusha
shl
es
xor
mov
jle
adc
jle
loop
out
sti
enter
xchg
cld
rolb
repz
hlt
fcmovnu
loop
addb
xor
sti
fmulp
test
in
clc
cs
rcr
xor
repnz
out
repz
mov
lea
aad
out
xor
aad
fnstcw
fucomi
cmp
out
fimull
mov
decl
xor
jmp
hlt
lock
shl
test
jecxz
in
stc
in
clc
enter
xchg
loopne
xor
xor
fsubr
loope
neg
cmp
repnz
clc
iret
rcl
out
fucomip
cs
ror
dec
out
out
int
ret
into
out
lds
std
jmp
int
int
iret
ljmp
cli
rol
cmp
rcl
ret
idiv
xlat
cmp
and
repnz
icebp
repz
loop
into
xor
stc
imul
or
cmp
stc
cmp
call
mov
loopne
loop
xor
jmp
in
loopne
vpsrad
cli
fmulp
jmp
out
in
shr
std
sti
aaa
repz
ffree
cmc
loop
aas
cmc
testb
fdivr
fisttps
aaa
lock
out
fidivl
sti
ds
loop
ret
shl
fmul
xchg
xchg
in
jecxz
sti
xlat
ss
loope
ret
in
lock
loope
out
fdivrp
jecxz
jecxz
jecxz
xor
sub
cmp
lret
cld
rcl
cmp
loop
push
int
in
stc
repz
mov
xor
lret
fcmovbe
sti
aaa
fneni(8087
lret
shl
roll
loopne
leave
ljmp
into
icebp
aad
aaa
lret
sar
iret
div
int
aad
loopne
loop,pt
aam
aas
lret
out
loopne
imul
ret
test
icebp
fabs
jmp
cli
lock
rol
les
loop
decb
xor
in
mov
sbbl
mov
addl
jmp
fcomp
fistps
je
xchg
ret
mov
loopne
jle
add
fdivrs
faddl
stc
shl
test
in
xchg
test
cmc
xor
iret
fsubrp
aaa
ds
push
loope
ffreep
aad
and
iret
shr
jmp
ret
xor
lret
jmp
aad
cmp
out
jecxz
mov
out
lret
sti
sar
mov
div
lret
sti
fcmovu
cmp
fcmovnb
fdiv
iret
xchg
call
iret
leave
int3
lret
imul
shr
repz
aad
shl
fdivp
xchg
test
cmp
call
lret
int3
repnz
xor
hlt
lret
repnz
not
out
repz
loope
fisttpll
loop
hlt
in
shl
ss
lret
div
cmp
std
std
in
icebp
cmp
in
ret
mov
xor
cmp
cmp
repnz
ljmp
mov
lock
clc
icebp
enter
divb
cmp
out
repnz
in
fnstsw
and
mov
cmp
out
fsub
int3
jmp
fcomi
jecxz
rcr
cli
lds
xchg
rcl
jmp
lret
lret
fsubrp
into
jmp
ret
cmc
loope
in
fucomip
mov
xor
repnz
or
fildl
ret
into
jecxz
xchg
repz
repz
lret
cmp
aas
sti
cmc
out
adc
test
out
test
rorl
imul
in
cld
shl
cmp
roll
les
in
mov
fidivl
ror
cmc
into
ror
hlt
int
ret
out
add
into
in
int3
icebp
sar
hlt
in
cmp
roll
in
sub
jmp
in
das
shrb
into
xor
addl
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
or
loop
jle
add
lret
loope
fldl
in
hlt
ror
xor
cmp
ret
cmp
in
call
xorl
out
fidivrl
out
fsubr
out
lret
int3
sti
cld
jecxz
fcmovnu
enter
lds
std
mul
aam
lret
cs
shr
shl
ds
test
int3
int
lret
fsub
jecxz
icebp
cld
ss
into
cmp
shl
fmuls
rcr
jmp
mov
lret
iret
iret
in
int3
xlat
repz
xlat
xlat
in
shl
hlt
cli
jmp
dec
mov
out
aam
repnz
lret
jecxz
vpaddw
in
aas
neg
out
aam
out
flds
cmp
xchg
ljmp
in
aad
hlt
shll
lock
fcom
repz
mov
imul
xchg
repnz
filds
aam
hlt
jmp
sar
enter
fadd
fisttpll
add
enter
leave
hlt
lock
repz
test
out
clc
test
add
and
into
xor
aad
fsubr
cmp
xor
inc
out
mov
clc
lret
mov
test
out
lret
hlt
cmp
cmc
std
xlat
repnz
roll
jmp
sbb
ficoms
into
in
xor
in
jmp
test
not
icebp
aad
mov
out
stc
loopne
xchg
aam
xor
out
xor
mov
xlat
rcl
aas
cli
lea
xchg
loope
aad
cli
aam
xor
aaa
aas
fcmovbe
cmp
in
lds
std
xchg
shlb
cmp
cli
lock
ds
in
fdivr
mov
fucom
loope
icebp
lret
mov
lret
out
out
hlt
xor
cmp
jecxz
out
shr
mov
enter
int3
enter
xchg
int
fdivrs
fst
je
adc
jmp
int3
rol
aad
pop
pop
movsb
or
loop
mov
adc
jle
loope
repnz
aad
lock
mov
mov
and
mov
shl
icebp
test
lock
repnz
ss
cmp
xchg
xor
repnz
ljmp
sti
leave
repz
int
shl
out
clc
test
mov
sub
mov
in
mov
faddl
out
test
loop
clc
roll
aam
fcmovu
fsubp
int
call
repz
fdivr
icebp
in
lret
ret
loopne
test
cli
out
mov
into
addl
faddp
fcmovnbe
cmp
icebp
hlt
fdiv
mov
xor
xlat
out
out
decl
xlat
stc
idiv
icebp
cmp
ror
clc
lret
cmp
hlt
call
in
xchg
mov
aad
cmp
in
roll
aaa
xlat
fldl
imul
sti
mov
icebp
cs
lret
xor
cmp
xor
out
out
cmp
loop
loope
repz
mov
nop
int
ljmp
fdivr
ljmp
aam
mov
leave
out
fcomip
xchg
icebp
sub
xor
repz
fucom
cmp
int
adc
sti
mov
sbb
std
lret
rolb
int3
lret
xor
aaa
aas
ror
idiv
ffree
cld
xchg
std
aam
addl
loope
jmp
idiv
int
jmp
xor
call
out
rcl
out
mov
sbb
stc
out
aaa
repz
out
loope
in
aad
fldl
fdivr
test
call
out
std
aas
shl
div
rcr
in
aam
out
fsubr
out
xchg
in
out
loopne,pn
rcl
lret
cli
aaa
cmp
loop
neg
repz
jecxz
jmp
out
lret
out
jmp
hlt
shr
hlt
imul
ds
lret
hlt
mov
leave
ffree
int3
lret
iret
push
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
sub
jl
jle
adc
jle
lret
repz
in
ss
stc
hlt
dec
repz
rcl
cmp
xchg
ljmp
in
hlt
das
repz
icebp
loop
fdivrp
ror
ffree
out
or
iret
xchg
lea
cmp
stc
call
ror
aad
int
hlt
fcmovbe
fadd
in
jmp
lock
shr
ljmp
ss
cli
int3
out
loopne
shl
clc
enter
aam
in
jecxz
repz
mov
jmp
repz
std
sarb
shl
lret
out
test
test
jmp
cmc
sarb
int
cmp
repnz
fdivr
xchg
ret
ljmp
int
leave
cmp
aaa
clc
aam
rcl
fst
aas
fcomp
xchg
jecxz
in
lock
xchg
xchg
and
repz
jmp
stc
ds
aad
clc
testl
rcl
xor
hlt
repnz
int
xor
fiaddl
out
leave
sti
mov
xor
out
cmp
repz
fsubrp
cmp
aad
mul
fiadds
test
nop
xor
repnz
int
stc
sarl
icebp
call
iret
loop
cld
jecxz
loopne
in
ret
in
hlt
aam
xor
out
xor
in
incb
clc
iret
loope
xlat
rolb
in
icebp
lock
cmc
aaa
out
in
enter
xor
iret
stc
jecxz
out
roll
ljmp
into
jmp
rcl
xor
ljmp
ds
out
cmp
cmc
inc
nop
mov
subl
iret
out
lock
repnz
sub
fchs
les
xchg
clc
mov
fiaddl
enter
jmp
cmp
rcl
loopne
rol
fcomp
orl
xchg
repnz
jmp
ljmp
xor
mov
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
cmpsb
fisttpl
jmp
jle
aad
stc
cmc
in
jmp
mov
aam
mov
xor
movl
jecxz
jmp
fldl
cmc
cmc
in
aaa
into
jmp
fcmovbe
rcl
lock
repz
test
ljmp
std
mov
in
popl
ss
shl
aam
cmp
lret
stc
icebp
cli
icebp
loopne
fcomp
hlt
sub
out
test
in
lock
out
shr
cld
hlt
int
jecxz
call
testl
aad
xor
aad
enter
hlt
sar
addb
cmp
ret
and
fmull
clc
das
jecxz
ljmp
fmul
shl
xchg
enter
cmc
lret
in
xchg
xchg
subl
cli
in
fdiv
icebp
stc
cmp
in
shl
xchg
std
icebp
jmp
into
jecxz
fnstcw
iret
shr
rcr
lret
rol
loope
cmc
xlat
test
loopne
neg
ljmp
xor
in
in
in
aaa
shr
add
lock
in
test
ficoml
in
in
cli
in
cmp
clc
int3
aas
cmp
lret
ds
ret
in
mov
out
testl
ret
cmp
enter
sbb
shr
in
cmc
fadd
jmp
lret
icebp
call
ret
cmc
enter
ljmp
cmc
aam
aas
out
lea
shl
nop
aam
repz
xor
test
loopne
or
cmp
enter
fsub
loope
loop
ror
aas
sar
enter
aaa
cmpb
sbb
filds
int
clc
mov
xchg
divl
fldz
int
cli
repz
cmp
clc
test
faddl
in
rorb
sar
sarb
fcmovu
les
out
into
addb
lret
out
inc
or
mov
nop
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
mov
jle
adc
jle
ret
repz
cmc
or
cld
sarb
cmp
cli
rcl
fmul
stc
fisttps
mov
in
xor
shl
fdiv
cmp
ror
stc
in
iret
orb
loop
sti
fmulp
shr
xchg
hlt
int
fucomip
fcmovbe
sar
fucom
fcomi
repnz
aam
out
int3
int
repnz
xchg
xor
rol
cmp
icebp
repnz
cmp
aas
fptan
rol
inc
loope
mov
loop
ljmp
shl
dec
clc
hlt
out
jecxz
cmp
fadd
rcl
xchg
std
sub
loop
call
icebp
in
cmp
int
hlt
sub
lret
into
in
sarl
test
clc
fsub
test
jecxz
mov
cmp
xor
hlt
out
cmp
cmp
in
jecxz
fcmovb
jmp
into
out
fdivrp
std
rclb
stc
xor
cmp
loopne
std
repnz
xchg
cli
mov
stc
sti
mov
ss
out
jmp
int3
loopne
stc
shl
ret
aam
loopne
lret
into
sti
in
orb
in
cmp
xor
cld
ret
std
aad
xlat
push
jmp
and
loope
iret
lock
in
loop
in
lret
icebp
xlat
xlat
loopne,pt
cli
loopne
xchg
jmp
test
clc
cmp
fld
icebp
icebp
into
iret
icebp
repz
xlat
and
fdiv
std
fildl
loopne
jecxz
aam
repz
cmp
fdivr
mov
leave
ret
les
jmp
std
ret
mul
out
jmp
repz
cli
cli
jecxz
jecxz
loopne
test
in
fcmovu
lret
mov
neg
ljmp
int3
clc
imul
sar
out
std
ret
adc
test
in
out
xor
shrb
xor
cmc
fnstsw
cmp
cmp
repz
repnz
icebp
fst
std
flds
fcomip
adcl
cmp
rcl
fmulp
into
ror
sbb
test
in
mov
jmp
aam
aad
fstp
movsb
ficomps
out
xor
add
in
xchg
xchg
test
not
loope
cmp
ret
in
xchg
jmp
test
out
fadd
aad
int3
cli
rcl
in
std
cmp
fadd
shl
mov
in
jmp
lea
repz
fsubr
fnstenv
out
fsubp
cli
addl
leave
repz
cld
orl
fdiv
int
xlat
out
cmp
filds
in
into
xchg
xchg
aaa
divb
ss
lret
enter
fcmovne
cmp
into
ret
out
addl
shr
das
fxch
sar
cmp
in
fidivrl
idiv
repz
test
aad
sbb
call
jecxz
repz
clc
cli
xor
icebp
cmp
iret
out
sar
ret
enter
cli
jmp
jecxz
loope
int3
xlat
sar
cmp
cmp
int3
fcmovb
fimull
xlat
fcomip
mov
int
xor
sti
rcr
call
out
loope
aad
ret
sti
cmp
lret
mov
sbb
aas
in
fcomi
cmc
xor
rcr
and
and
xchg
mov
loop
mov
ficoml
out
rcl
call
fmul
fnstcw
shr
sti
aas
aad
test
xlat
enter
jmp
cmp
pop
call
in
fcmovnu
call
icebp
aam
cmp
repnz
cmp
sti
and
cmp
lret
in
cmp
repnz
cmp
add
fiaddl
lret
aas
ret
rcr
in
std
mov
aas
cmp
loop
mov
fdiv
lret
mov
in
jmp
fneni(8087
in
ljmp
cmc
aaa
hlt
repnz
test
ss
cmp
in
fldl2e
addl
loopne
loop
cs
icebp
cmc
call
fstp
in
lock
fdivp
ljmp
in
iret
iret
into
cmc
jmp
repnz
leave
mov
jmp
ret
lret
enter
int
cltd
movsb
imul
cmpsl
cmp
stc
enter
adc
jle
cmp
repnz
fsub
rcr
mov
fcmove
in
shl
shl
shlb
in
repz
shl
std
xlat
repnz
rorb
std
out
loope
test
adc
cld
sarb
out
sti
jmp
jecxz
sti
out
shl
lret
fcmovb
fnstsw
fcmovne
out
in
iret
in
out
repz
repnz
aam
test
fucom
mov
cli
cmp
loop
loop
test
xchg
loope
call
fdiv
jmp
sar
rol
std
not
mov
mov
out
cli
xchg
icebp
cmc
jecxz
fcmovnbe
lret
cmp
cmc
in
sar
cld
idiv
xor
ljmp
into
repnz
ss
icebp
xlat
loop
in
aaa
cld
out
cmc
test
lea
neg
out
ljmp
out
clc
xor
aad
aad
rcr
hlt
cmp
xchg
lock
mov
fucomp
mov
in
in
repnz
int3
lret
shl
cmp
loope,pt
lock
in
in
test
fsubrp
icebp
xchg
sar
hlt
in
cmp
aad
stc
xor
repz
add
sbb
mov
ljmp
ss
hlt
repnz
fstp
fiadds
fisttpl
ljmp
out
out
rcr
xor
jmp
in
idiv
test
mul
sti
in
into
fimull
enter
cli
leave
cmp
cmp
test
cmp
cld
leave
cld
int3
std
loope
hlt
repz
aam
int
int3
std
cmc
enter
repz
shl
sti
fimull
dec
rcl
shlb
xor
stc
rcr
xlat
aam
loop
aad
fsub
aam
fmul
loopne
nop
rcr
loop
lret
ror
xor
cli
fcmove
loope
fmulp
adc
repnz
inc
out
mov
into
out
xor
ret
aad
iret
rcr
icebp
cmp
xor
rcr
repnz
cld
out
in
test
sub
add
iret
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
xchg
loope
aam
aad
jmp
clc
fdecstp
xlat
fsub
std
mul
ror
fisttpll
into
loope
aaa
ss
fdiv
hlt
cmp
lock
repz
fisttpll
jmp
iret
jmp
out
icebp
not
fadds
mul
cli
in
xchg
xchg
enter
jmp
out
idivl
ret
fcmovnu
cmc
iret
cld
aas
fcmovnbe
in
call
xchg
repz
vpcomb
jmp
lock
into
frndint
out
out
sarb
std
xchg
test
into
jmp
loop
ss
out
xor
fcmovu
loopne
ret
out
fimull
loop
in
xchg
jecxz
sub
lock
out
sarl
out
testl
testl
loop
fdiv
xlat
std
ds
shl
roll
fildl
icebp
lret
xchg
xor
xor
int3
lock
cmp
ds
mov
fdivp
sub
fmul
jmp
adc
xor
enter
int3
cmc
loope
fnstenv
in
xlat
ret
jecxz
int3
int
fcmovu
push
icebp
xlat
jecxz
xor
cmp
in
jmp
cmp
lock
cmp
in
enter
or
fninit
repz
out
into
in
xor
hlt
jmp
lock
fst
sbb
cmc
jmp
int3
fsub
leave
int3
nop
in
aad
ror
out
out
cmp
lret
in
rol
int
cmp
repz
lret
xchg
mov
clc
repz
int
lock
aam
sti
aam
out
jecxz
fcmovnbe
sti
in
out
into
fcmove
les
in
ljmp
ror
fcmovnbe
xlat
inc
in
int3
fimull
in
shl
xchg
test
test
les
std
enter
iret
mov
ret
into
xlat
xor
sarl
aad
aas
fcmovnb
cmp
jne
pop
jmp
int3
into
fmul
fsubrl
in
jecxz
jl
mov
jle
add
aam
xchg
decb
adcb
lds
out
lret
fidivrs
shl
sar
aad
jecxz
call
in
std
xchg
lret
call
test
rol
lock
repz
lock
loope
icebp
sub
fstp
enter
dec
icebp
fdiv
lock
incb
xchg
fsubrp
leave
fmul
rcl
iret
fnstsw
fdiv
sub
cmp
aas
addb
ljmp
loop
repz
int
int
clc
cmc
imul
rolb
xchg
sbb
repz
in
stc
aam
idiv
aad
fprem
icebp
aam
cmp
lds
jmp
in
loop
rcr
int
leave
ds
jecxz
test
fucomip
filds
in
test
cmc
neg
out
cmp
stc
cmp
shl
fdivp
iret
cmp
loope
out
test
leave
mov
cmc
cmc
clc
out
fcomp
out
icebp
hlt
into
int3
or
cld
mov
jecxz
mov
fucomip
and
mov
mov
in
lret
cmp
cmp
sti
lret
aas
aas
aaa
cmp
loope
cld
out
or
fucom
icebp
out
aaa
rol
in
stc
int
aam
int3
fidivrl
fdiv
rolb
cld
ljmp
in
out
cs
repz
sarl
int3
std
jecxz
loop
faddl
shl
xchg
xchg
int
cmc
shlb
stc
hlt
les
xor
shl
sarb
shl
fdivrp
adc
jmp
lret
loop
into
std
xchg
lock
aaa
ljmp
sub
test
icebp
call
stc
clc
clc
into
iret
lret
xchg
shl
jmp
iret
iret
lret
cmp
stc
ds
xor
ret
jmp
out
jmp
loopne
cmp
test
std
jmp
lock
ret
mov
in
mov
cmc
adcl
sub
add
ret
ror
aam
mov
push
and
adc
jle
cmp
in
lret
sarb
cli
ret
loope
movl
out
aad
repnz
out
sti
in
fdiv
xlat
loopne
fcmovne
in
cmc
loop
xchg
in
icebp
repz
xchg
hlt
in
jmp
enter
fneni(8087
loop
jmp
incl
repnz
jmp
idivb
ror
loopne
loopne
cmp
clc
test
xlat
idiv
std
cld
call
xor
in
fcomi
xorl
fprem
enter
std
xchg
ljmp
fldlg2
aad
shl
out
rolb
in
addl
rcl
icebp
in
in
lret
fcmovnbe
std
lock
fprem
fsubp
sar
test
enter
sar
mov
out
ret
cli
repnz
icebp
aad
neg
cmp
test
out
std
xlat
faddl
jmp
iret
aam
xor
call
aad
in
test
xchg
icebp
icebp
aad
ret
loope
ret
in
mov
call
int3
clc
cmp
cmp
loopne
push
xchg
mov
in
nop
or
stc
xor
repz
repz
and
ret
mov
fmulp
in
call
out
xor
idiv
out
stc
test
testb
out
sub
rcr
fcmovnbe
jmp
into
lret
lret
fidivs
sti
sti
clc
lret
int
lock
sti
test
adc
int
into
xchg
xchg
in
loope
in
in
shl
lock
cmp
in
roll
ljmp
loopne
loop
xor
fsubr
dec
sarl
out
rcl
shl
aad
not
std
in
cmp
sar
hlt
lret
hlt
xor
aaa
cs
aad
std
cld
xor
aas
jmp
loop
fisttpll
mov
cli
lret
ss
xor
in
cmp
xchg
xchg
adc
sub
add
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
out
mov
enter
loopne
jmp
fdecstp
cmp
incb
fsub
fneni(8087
nop
mov
test
xor
in
int3
ljmp
sti
aad
sti
test
add
fmul
in
lret
out
loope
lret
xlat
les
xlat
fneni(8087
xlat
sar
neg
in
lds
fisttpl
out
enter
ds
ljmp
jecxz
cld
xchg
fucomp
out
xchg
shr
vlddqu
jmp
fucomi
enter
sti
idivl
aam
fdiv
addl
loopne
xor
icebp
jmp
int3
out
rcl
ds
lock
inc
xlat
or
mov
fcmovne
aam
xchg
xor
lret
out
sti
not
iret
fdiv
aam
xor
xlat
ret
ror
stc
test
faddl
clc
enter
shr
out
lret
lock
cmp
shl
clc
fcmove
enter
lock
shl
sub
jmp
push
cli
aad
out
xlat
xchg
sti
leave
out
out
in
fisttpll
xor
xor
out
fstp
leave
out
in
cli
inc
aas
loopne
fcomi
std
mov
loopne
call
std
cmp
cmp
cmp
test
orb
xchg
jecxz
sti
fstl
hlt
out
leave
loop
jecxz
fsub
mov
enter
sti
fdivrp
xchg
divb
aad
call
fucomp
cmc
xchg
fldl
xlat
in
fcmove
in
rcr
hlt
xlat
xor
shlb
xor
fidivrs
cmp
aas
call
cld
iret
stc
repnz
call
ror
lock
leave
divl
fcomi
ret
call
loop
std
neg
loope
in
int3
in
in
xlat
lret
out
int
sti
in
out
fadd
imul
stc
hlt
test
mov
clc
call
out
jecxz
out
out
ret
iret
ret
out
repnz
roll
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
adc
add
sarl
sub
std
test
faddl
in
out
xchg
mov
repz
in
int
fdivp
fdivr
shl
loopne
ret
fnsetpm(287
out
orb
iret
jecxz,pn
ror
lds
jmp
repz
repz
loope
rorb
xor
xor
cmp
fxam
enter
fdivr
rcr
and
ljmp
iret
nop
addb
repz
shl
fdiv
clc
rol
repnz
xchg
xlat
cli
in
fcoms
test
hlt
into
xor
icebp
loope
in
hlt
fsin
repz
mov
orl
icebp
int
ljmp
jecxz
aad
in
sbb
test
ror
mov
rol
enter
shr
lock
cmp
stc
cmp
rcl
std
clc
fistpll
xlat
shr
fcom
in
in
leave
cli
aam
lret
aas
fnsave
add
rcr
out
sti
fdivrp
sub
call
ror
xor
test
idiv
ret
out
std
clc
ljmp
fcmovb
int
fsubr
fstpt
into
rcl
iret
std
std
leave
sub
fistl
xchg
lret
loope
std
cmp
call
leave
loopne
xchg
ljmp
int
xor
fdiv
stc
aam
out
fpatan
fadds
out
filds
loop
int3
in
lret
das
cmp
idivb
ljmp
call
orl
jmp
cmp
cmp
sarl
orb
mov
call
shll
lret
xlat
in
leave
push
cmp
push
neg
rcr
orl
iret
and
mov
leave
cld
cmp
fnstsw
cmp
rol
test
xchg
loopne
lret
out
jmp
jecxz
inc
or
add
add
iret
enter
int
xchg
cmpsb
push
ja
push
add
jle
add
mov
jecxz
fdiv
jecxz
lret
imul
shl
faddp
aad
ds
icebp
mov
in
leave
xlat
icebp
xchg
ficoms
cmc
fsub
aaa
fcomi
icebp
fdivrs
sti
loope
jecxz,pt
repz
lret
in
faddp
ret
in
in
jmp
xor
clc
lds
enter
incl
jecxz
mov
loopne
fptan
fsub
lea
out
stc
std
jmp
jecxz
rol
cmp
loope
mov
lock
call
sub
vpsubq
ds
not
ret
or
and
loopne
xchg
nop
aaa
call
repnz
iret
lock
lock
call
in
in
mov
stc
mov
out
icebp
in
lock
idivb
cmp
test
out
or
loop
xchg
out
in
stc
clc
out
fcmovbe
lret
cmp
shl
aam
enter
in
out
addb
cmc
fucomi
std
fdivr
cli
fmul
add
jecxz
cld
cld
in
fsubr
mov
lret
xchg
ret
cmc
clc
sarl
xor
fdiv
cmp
cmc
loopne
shl
cli
cld
mov
xchg
loope
inc
in
xor
fdiv
enter
lret
cmp
mul
movb
filds
std
in
aaa
fnop
fst
sarl
int3
cmpb
ret
loope
fucom
ret
mov
out
testl
call
xor
fdivr
fstpt
out
clc
iret
loope
cld
rol
fucomi
jecxz
in
or
test
test
xor
rcl
repnz
ds
sti
loop
aad
in
xchg
cld
jecxz
out
bnd
xlat
aad
int
aas
aad
sar
aad
movb
dec
std
sti
rorl
jecxz
imul
out
cmp
jmp
cmp
bnd
orb
xchg
iret
stc
lret
aam
fcomi
aam
lds
push
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
out
rol
in
mov
xchg
out
xchg
ficoms
ret
jmp
ss
into
jecxz
xchg
cli
stc
lret
and
iret
call
div
ljmp
fincstp
hlt
cli
test
xbegin
out
test
iret
ror
xlat
aad
out
fcmovne
shl
aam
adc
out
nop
cli
rcr
xrelease
stc
cli
ljmp
lret
cmp
ret
aad
stc
out
fcmovbe
loop
iret
in
aam
fsubr
cli
ss
fdivr
lret
fcmovnb
shl
cmp
inc
hlt
mov
fistl
xchg
loop
loop
sti
call
call
into
incb
sti
popl
mov
cmc
lret
stc
cmp
not
loop
test
cmp
repz
addb
out
test
neg
imul
jmp
shl
repz
test
jecxz
int3
jmp
xor
fcomp
clc
int3
loope
cli
fcmovnu
sti
add
mov
jmp
xchg
aam
clc
in
into
cmp
xlat
cld
lock
sti
std
rol
stc
jmp
icebp
nop
mov
xlat
lret
cmp
rcr
xlat
fsubp
in
add
aam
cli
addl
icebp
repnz
enter
lock
ret
cmc
loop
fld
test
fsubp
mov
xor
call
sarl
call
div
cmp
ds
aam
sti
in
mov
fcmovnu
xchg
mov
loopne
ss
xor
cld
enter
loop
aam
out
incl
call
xchg
jmp
ror
enter
cmp
cmp
test
std
iret
call
in
or
test
fdivp
neg
leave
fsub
sti
idiv
repz
fsub
filds
addl
fiaddl
xorl
je
mov
mov
mov
jmp
xlat
into
rcl
aad
fadd
mov
adc
jle
adc
jle
divl
cmp
fdivr
into
in
cmc
sti
std
cld
stc
std
add
test
fabs
enter
xchg
cmp
fistpll
cmp
ljmp
call
into
shl
out
xor
lret
repz
shl
ret
fdivrp
not
out
in
mov
rolb
sti
aam
clc
cmp
cli
loopne
sti
testl
out
xchg
lock
xchg
mov
aaa
sub
enter
int3
repnz
aad
sti
ss
loopne
fucom
fcomp
add
ret
int3
loopne
mov
test
xor
ljmp
clc
ffreep
rcr
rolb
fiadds
mul
xor
shlb
imul
not
ret
test
out
xor
out
mov
out
aam
cli
int3
int
imul
shr
cmp
cmpl
repz
les
xchg
mov
xchg
xchg
xor
xor
in
enter
loop
fucomi
lock
leave
hlt
mov
test
lret
fisttps
divl
out
lock
in
std
cli
ret
xlat
xchg
loop
test
cli
mov
mov
aad
xlat
not
out
std
fcompp
out
ljmp
icebp
ljmp
icebp
and
fmul
hlt
into
int
cmp
lock
out
sar
cmp
mov
test
icebp
hlt
jmp
int
clc
sub
sti
das
ds
jmp
shr
fdiv
fld
in
out
out
int3
loope
mov
out
in
into
fcomp
ret
xor
xlat
lret
cmp
ret
mov
ljmp
mov
mov
jmp
out
hlt
rcl
cld
cmp
xor
testl
cld
out
aad
xor
test
xbegin
in
sbb
in
icebp
leave
call
cs
xor
lret
int3
roll
rcr
mov
add
sub
add
ror
enter
lret
add
mov
jae
jle
adc
jle
lret
cli
and
fdivp
in
lret
repz
lock
hlt
fcmovnu
cmp
fdivr
std
and
addl
not
ljmp
into
fcmovbe
jecxz
cmp
jmp
test
xchg
aam
rcl
xlat
out
fdivr
cld
icebp
rol
xlat
test
shl
testb
loop
std
lret
test
xor
xlat
ds
int3
hlt
not
call
out
faddp
clc
in
cmc
jecxz
cli
jmp
out
xchg
out
rcl
ret
lock
enter
cmc
in
test
std
xbegin
std
addl
sarl
out
fadd
cmp
icebp
sar
fcmovnu
aad
cld
cmp
stc
enter
jecxz
out
loopne
call
xor
std
leave
rcr
fidivl
std
out
mov
cld
mul
jmp
mov
int3
div
shl
cs
enter
test
jecxz
aad
jecxz
loop
loopne
loopne
std
icebp
in
aas
jmp
neg
fidivrs
loopne
test
ret
test
mov
incb
repnz
xor
sarb
aad
rol
stc
fcmovu
mov
mov
mov
jecxz
or
lret
xor
repz
lock
fdivrs
ror
jmp
loope
adc
in
jecxz
ror
into
in
ljmp
fdivrp
loopne
in
clc
loope
loopne
xor
in
rcr
leave
out
aam
std
adc
lock
mov
xchg
in
ljmp
std
clc
in
cmpb
hlt
filds
rorl
fsubp
test
out
mov
iret
loop
xlat
fucomi
jmp
loop
repnz
mov
fsub
loopne
leave
fsubr
cli
fstp
std
xor
lock
out
aad
cmp
test
fdivp
int3
loope
in
repnz
jmp
adc
add
mov
mov
movsbl
xor
add
jmp
int3
enter
into
push
mov
jl
push
addb
jle
adc
jle
cmp
into
fmul
ret
cmc
sarb
cli
mov
clc
ljmp
out
sub
cmc
lret
ljmp
sti
fsub
xchg
xchg
shl
xchg
sub
lret
stc
cmp
fidivrs
int
lock
test
out
mov
std
jecxz
filds
lock
hlt
in
aam
aas
shl
cmp
fsub
fmul
lret
fcmovnb
icebp
rcl
cmc
aam
out
out
fstpt
int3
in
enter
fcmovbe
repz
std
icebp
aam
mov
out
repnz
out
cmp
hlt
mov
cmp
in
add
ljmp
loopne
xchg
mov
idiv
xor
xor
sti
cli
aad
cld
icebp
mov
in
call
enter
ret
imul
in
hlt
clc
loop
fstpt
out
test
test
out
xchg
fstl
ret
cmp
clc
std
fxch
ljmp
in
loop
aad
int
call
fmul
xchg
xor
aam
not
lret
and
aas
test
test
enter
jmp
icebp
repnz
aad
in
leave
leave
cmp
rolb
div
cmc
decl
mov
rol
xor
xlat
cmp
jmp
xlat
and
test
enter
in
int
in
mov
fst
imul
ror
leave
out
cmp
xlat
shl
fsub
jmp
loope
into
lret
in
cmp
xor
ss
in
fxch
xchg
fstp
jecxz
out
xchg
shl
hlt
into
fld1
test
rol
aam
loopne
std
fisttpll
loop
out
divl
xor
in
xor
cmc
cli
clc
cmp
cmp
cmp
xor
lret
std
lock
aam
in
std
aam
test
shl
in
leave
fisttps
rorb
test
push
add
movl
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
into
fdivp
cmp
imul
xor
enter
iret
sti
cmp
aam
shl
rcr
mov
test
vpmulhuw
addl
ret
iret
fcmovnbe
hlt
ror
cmp
neg
clc
cmp
xchg
in
xchg
rcl
vpsubd
aam
aam
cmp
mov
xlat
in
fdivr
fildl
hlt
sub
cld
ror
out
cli
adc
sarb
ffree
jmp
dec
fldl
xchg
xor
shl
in
fucom
fdiv
shl
clc
lds
call
out
loope
in
lret
cmp
aaa
jmp
cmp
jmp
lret
clc
std
repz
hlt
loop
or
out
lret
mov
fmul
out
hlt
sti
cli
int
in
fcmovnb
sbb
lret
test
filds
xchg
int3
xor
repz
in
push
rcr
mul
out
out
cmp
out
enter
icebp
fmull
jecxz
sti
fadd
fstp
cmp
fld
cmp
int
cld
fsubp
fiaddl
loop
mov
fucomip
stc
ret
push
xor
iret
ds
iret
rorl
lret
testl
into
cmp
jmp
aad
clc
fneni(8087
call
lret
xchg
loopne
lret
icebp
rcl
cld
int3
aas
call
rcr
mov
fimull
iret
ljmp
clc
xlat
div
int
int3
idivb
cmc
clc
sbb
xabort
loopne
shl
test
cld
mov
into
ret
icebp
int3
in
out
out
std
stc
out
sar
hlt
test
addb
fldl
xor
leave
bnd
addl
fadds
int
xchg
call
rcl
sub
int
fcomp
xlat
testb
jmp
loopne
jmp
lret
repnz
xor
hlt
idivb
incb
mov
mov
addl
jmp
int
fcmove
fstp
adc
js
iret
sub
jle
add
int
fcmovu
mov
fucomp
mov
int
mov
xor
fcmove
jmp
int
cmc
cmp
mov
xchg
out
mov
lret
xor
cmc
xor
jmp
cld
xor
cmp
add
icebp
jecxz
xor
clc
loop
into
rcr
in
hlt
call
shl
rcl
call
int
out
out
les
into
dec
loope
out
clc
into
cld
repz
icebp
jecxz
mov
nop
clc
incl
out
out
out
xor
in
cmp
lret
fidivrl
testl
mov
sti
idivl
cld
iret
out
in
rcr
enter
mov
sti
repnz
cmp
shr
div
repz
into
in
xor
int3
fsubr
inc
cmc
xor
loopne
test
xchg
jecxz
cmc
icebp
in
shr
cmp
iret
fst
call
sbb
sar
out
out
in
fisttpl
icebp
out
in
das
in
lock
out
cmp
stc
cmp
cli
xlat
test
xlat
mov
out
lret
in
std
iret
out
in
jecxz
xor
xor
in
call
enter
cld
test
faddl
xchg
cmc
into
ret
std
fmul
sti
lret
fucom
cli
loop
fmuls
ffree
fimull
ret
out
rol
repz
repz
ds
ret
jecxz
jmp
in
in
out
lock
jmp
aam
cmp
cmpb
lret
in
aam
lds
fildl
jmp
iret
in
in
repz
repnz
aam
not
stc
cli
jecxz
xchg
loop
std
cld
xchg
out
out
shl
repz
enter
loopne
rol
cmp
enter
sub
in
mov
xchg
icebp
in
fld
ror
stc
icebp
out
fmulp
lock
ret
sar
rolb
imul
mov
jmp
shr
lds
or
rorl
add
sub
add
into
aam
enter
fsubl
dec
pop
scas
fsubrl
aas
mov
adc
jle
icebp
into
xor
aaa
filds
shr
out
roll
sti
mov
shl
jecxz
test
xor
in
shl
jmp
fcomp
cmp
cmp
sti
jmp
xchg
in
in
in
loope
enter
cmp
lret
cld
ds
vpaddb
in
xchg
fcmovnbe
in
orl
xor
into
icebp
lock
idivl
addb
int3
jecxz
mov
fucomp
in
xor
fdivrl
cld
ljmp
cmp
jecxz
mov
loop
out
cld
test
lret
cmp
xor
cld
shl
aam
fiadds
incl
iret
xchg
xor
fxam
xor
int3
push
cmp
xlat
fsub
cmp
in
mov
std
fsubrp
loope
call
ror
iret
ffreep
inc
ds
ret
loopne
loop
enter
imul
jmp
ljmp
aad
cmp
into
cld
fnstcw
rol
jmp
sti
sbb
jmp
lock
ss
int3
into
repnz
out
push
shl
shl
fildl
fldl
cmc
shl
std
xor
in
ret
std
sar
loop
fcomip
lret
flds
int3
xchg
out
sbb
jecxz
in
jmp
std
aam
cmp
cmp
faddl
mov
icebp
jmp
shll
ror
div
cli
enter
cld
cmp
repz
mov
cli
xchg
int
in
into
hlt
loop
stc
fmul
aam
int3
cmp
rcl
cmp
std
icebp
mov
call
rcl
icebp
in
nop
xor
ret
fcmovnu
xabort
clc
cmp
not
std
out
rorl
xchg
mov
sub
xor
out
shl
div
shr
jecxz
test
sub
ret
jecxz
jecxz
stc
and
aam
shl
shll
cmc
idiv
repnz
int3
sti
xor
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
jne
inc
rorb
jle
fcmove
loope
in
fucomip
std
out
xchg
pop
vpminub
fnstsw
divb
cld
cmp
iret
aad
aas
fdivr
cli
mov
mov
lret
fucomp
test
int3
call
cld
cmp
hlt
fildl
in
xchg
in
in
clc
out
xor
test
fsub
mov
int3
out
enter
xlat
sub
std
faddl
out
sub
loope
loopne
mov
decl
test
iret
fcmove
imul
hlt
repnz
fstpt
std
loope
enter
mov
ljmp
cmc
in
cmp
ret
iret
fisttpll
call
iret
cld
test
fcmovu
repnz
sub
fdiv
jecxz
ret
or
orb
nop
shl
divl
out
shr
out
ljmp
repnz
aam
jmp
testb
loopne
ljmp
div
cld
neg
cmp
shl
std
call
xchg
in
fsub
test
loopne
idivb
icebp
repnz
aad
cld
sar
fcomip
into
sbb
int
loop
sti
out
ror
aad
call
into
out
jmp
aas
cmc
test
rol
dec
out
std
xchg
mov
mov
not
ror
sti
int
ljmp
hlt
hlt
repz
sti
mov
xchg
xchg
ror
xor
sub
ljmp
call
aas
imul
jmp
mov
jmp
cli
repz
xor
xlat
shl
out
xlat
fadds
into
fnclex
repnz
aad
fldpi
leave
call
fcomi
loop
out
jecxz
enter
lret
lret
jecxz
mov
adc
icebp
int3
ror
cli
aaa
icebp
fxch
ljmp
repnz
mov
loopne
mov
mov
test
ret
ret
loop
jmp
stc
out
in
aad
out
jecxz
aas
std
out
int3
leave
fcmovnu
in
mov
jecxz
call
div
cmp
xlat
hlt
xchg
test
out
in
mov
loop
add
rcl
enter
fucom
cmp
fnstsw
addl
stc
xchg
cmp
fmul
loopne
fstp
into
loope,pt
aas
sbb
lret
repz
leave
out
ljmp
lock
cmp
xchg
jecxz
in
enter
cld
shl
xchg
rcl
div
aad
aad
lret
cmp
xchg
call
test
inc
add
add
add
fadd
fcom
fld
pop
into
shll
adc
jle
fdivr
fucom
enter
out
jmp
iret
lock
xor
clc
ljmp
faddl
rcl
test
in
jmp
out
xchg
in
int
std
lret
aam
rcr
icebp
cmc
idiv
incb
test
nop
mov
jmp
leave
jmp
aam
std
loop
xbegin
enter
call
int3
int
out
out
int3
icebp
bnd
aaa
xor
inc
cli
int3
out
in
lret
fucomip
out
fcmove
in
int3
in
ljmp
sbb
leave
lret
loop
out
ljmp
loop
leave
xor
cs
cmp
repnz
enter
std
loope
xchg
out
out
shl
stc
jmp
xlat
cmp
loop
repnz
ffree
loope
std
in
sti
leave
in
faddl
rcl
iret
cmp
cmp
xor
xorb
sti
out
test
neg
jecxz
loope
repnz
leave
aam
aaa
fcom
aam
lret
ret
cmp
dec
xlat
mov
aad
enter
int3
in
cld
in
cmc
int
xor
out
out
call
in
cld
test
aam
cld
cld
loope
into
into
out
sar
ret
test
icebp
aas
adc
loop
xchg
loope
loop
enter
repnz
shl
ror
cmp
cmp
fcomp
repz
cmp
enter
vpsubsb
jmp
rcl
in
out
xor
xor
lds
xlat
xchg
clc
lea
test
shr
call
xor
cmp
cmp
rolb
fucomip
sbb
loop
enter
fcmovnbe
rcl
aam
into
rcr
lret
repnz
xchg
sti
in
out
repz
xchg
repz
ljmp
test
in
mov
fdivrp
mov
xchg
xchg
not
shrb
ret
fcmove
cmc
stc
cmp
into
sarb
repz
dec
mov
test
leave
popl
ret
repz
xor
ljmp
fdivr
aam
jecxz
xor
loope
xor
iret
jmp
ret
xlat
and
jecxz
test
mul
in
out
and
xchg
mov
out
ss
fprem
idivb
jecxz
in
testl
ljmp
out
rcl
aaa
hlt
out
shl
cli
fcmovnu
roll
mov
add
leave
aad
fsubr
out
rcr
fcmovnbe
cmp
stc
add
inc
cld
daa
test
inc
add
add
add
rolb
and
add
and
add
add
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
sub
xchg
jle
mov
rol
sub
aad
stc
fimull
hlt
int3
out
sarb
repnz
jmp
loope
fidivrl
leave
test
test
sti
jmp
in
jecxz
repz
repz
shl
leave
cli
std
iret
loopne
xlat
call
loop
xchg
test
jmp
shlb
lock
rcl
rcr
hlt
test
jecxz
faddl
loop
shl
test
call
aam
fucomip
fcmovbe
fsincos
and
rorl
fsts
jmp
repnz
dec
ss
test
ds
fninit
mov
in
fcmovnu
iret
jmp
into
aaa
iret
fucomp
into
fnstenv
loope
fsin
inc
out
xchg
int3
xchg
hlt
cmc
xor
out
int3
out
fcmovne
cmp
mul
xlat
shr
hlt
test
ljmp
aad
ss
into
div
sarl
repnz
cmp
std
out
out
xchg
aam
xor
shl
aas
fucomi
rcr
xor
fadd
loopne
in
jecxz
or
jmp
ljmp
clc
fdiv
bnd
not
aad
mov
rolb
aam
aad
in
lret
aam
divl
fidivrs
fcmovnb
xchg
std
vpsubsb
jmp
xchg
xchg
lea
jmp
icebp
into
jmp
out
ret
fabs
aas
cmc
leave
in
out
xchg
int
xchg
xchg
in
out
lock
cmp
shl
in
out
loope
jmp
xchg
icebp
int3
mov
divb
jecxz
enter
iret
cmp
shl
std
faddp
out
jmp
test
int3
adcb
ss
stc
cmp
int3
lock
out
cld
ret
lds
in
jmp
in
xor
cmp
lock
in
out
out
in
loopne
not
cmp
mov
mov
out
call
iret
xor
cld
in
jmp
lret
xlat
in
stc
fadds
in
fucomi
loopne
hlt
lret
in
ret
fildl
fdivp
repnz
repz
jecxz
cld
std
call
icebp
sub
aam
ss
enter
aaa
fsubr
jecxz
out
icebp
aam
mov
test
and
loop
call
clc
sti
rcl
leave
iret
cmc
test
ret
mov
mov
fcos
lret
stc
test
lea
loope
rcr
rcl
into
hlt
int
jmp
stc
rcl
rol
loopne
out
cld
std
decl
stc
xor
cmp
std
cmp
xlat
aas
loop
inc
cld
mov
adc
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
cmp
roll
sub
fimuls
lret
lock
in
leave
ror
faddl
jmp
stc
test
xchg
shlb
out
cmp
cmp
aas
rcl
cmc
cmp
mov
idiv
loope
out
ljmp
lret
xor
clc
out
out
cmp
out
sti
icebp
ret
cld
sbb
lret
test
and
ljmp
jmp
fucomp
aaa
fcmovu
cli
cmp
rol
aas
fisttpll
mov
enter
aaa
lret
fadd
pushl
dec
cmp
neg
xlat
cli
out
xchg
out
fsubrp
sub
jmp
int3
xlat
lret
vpslld
repnz
roll
mov
cli
xchg
xchg
rcr
in
div
clc
enter
lret
roll
jmp
movl
xor
das
sar
icebp
fdivr
cmp
in
cli
cmc
rcl
repz
stc
div
jmp
nop
loop
subb
rcl
divb
fxch
sti
aas
lret
idiv
test
rorl
movl
repnz
jmp
fmul
cmp
sti
imul
repz
xchg
jmp
out
jecxz
jmp
in
fdiv
sarl
lret
jmp
shl
loopne
xor
fucomip
mov
stc
mov
rol
xchg
repnz
out
fidivrs
cli
ljmp
ret
fucom
mov
enter
mov
test
lret
ret
out
cmp
in
loop
rolb
fdivr
jecxz
test
int3
xchg
aam
fsincos
xor
sti
cmc
fxch
cmp
test
fcom
orl
out
iret
rcr
xor
cmc
cmp
jmp
idiv
aas
sarl
loope
aam
orl
shl
notb
rcl
faddp
fldln2
fidivrs
hlt
xchg
aam
fisttpl
mov
out
das
ror
out
iret
mov
fidivrl
std
out
hlt
loop
roll
in
sti
fst
in
shl
out
hlt
jmp
ror
repz
out
fcomip
rcr
incb
in
mov
ret
test
sti
fmul
test
flds
in
and
mov
cs
aaa
jmp
int3
in
testl
out
leave
lret
jecxz
ljmp
aad
cmp
lret
ss
fadd
test
ret
jmp
loopne
xchg
int
xchg
call
cmp
fmul
fistpll
jmp
rcl
aad
aad
shll
jg
lret
jle
mov
cmp
fyl2x
jmp
fcmove
fstl
test
ret
shl
rcl
hlt
xor
leave
aad
fcomi
test
ret
aad
fdivp
loopne
repnz
mov
cmp
xor
repnz
cmp
aad
fadd
out
leave
fucomp
xor
fstl
jmp
clc
repz
cli
addl
div
cmp
nop
ljmp
not
cli
xor
in
out
call
ret
test
call
fidivrl
jmp
xchg
icebp
xchg
into
ret
in
aam
lret
leave
cmp
fidivrs
cmc
aas
xlat
out
clc
repz
mov
flds
int3
loop
cmc
lret
shll
in
out
leave
rcr
int3
xlat
aas
cli
in
leave
fst
or
in
loopne
repz
les
ss
fdecstp
incl
shl
aam
rcr
inc
out
lock
iret
ljmp
sti
aas
loope
shl
aam
jecxz
call
and
loop
xorb
aam
xlat
sarb
cmp
stc
sar
leave
sti
lret
in
out
jecxz
shl
mov
ljmp
lock
test
ret
inc
neg
jmp
loopne
mov
aad
int3
enter
fcmovnb
loopne
fcomip
rol
and
in
into
loop
or
ljmp
ss
loopne
fiadds
mov
leave
jmp
int
xchg
in
int3
mul
ror
int
aad
cmp
rcr
rcr
in
lret
sti
movl
out
in
xor
lret
iret
aam
out
cmp
sti
nop
fneni(8087
mov
in
enter
aad
add
aas
cld
ret
leave
out
fnsetpm(287
in
loope
shl
hlt
jmp
fsin
lret
inc
iret
std
cmp
sbb
fucomi
enter
repnz
iret
repz
fucom
cmp
cmp
cmp
icebp
mov
in
xchg
in
int3
out
xor
lret
jmp
cli
shl
lock
xchg
in
divl
aad
cmp
jmp
repnz
ds
int
fcomip
hlt
neg
fisttpll
mov
xchg
ljmp
cmp
fdivrl
and
ret
test
push
stc
mov
filds
ror
out
xlat
aad
int
ljmp
sbb
in
neg
mov
xchg
cld
repz
jmp
out
fdivrs
in
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
mov
scas
or
jle
cmp
and
test
ret
in
out
enter
fadd
ljmp
xor
out
lret
jmp
rcr
cmp
cmp
and
jmp
test
lret
cmc
cs
jecxz
cmp
ljmp
into
and
ljmp
rclb
fnstcw
lret
repz
rcr
shl
aad
fisttpll
mov
stc
in
lret
into
enter
test
aas
aad
rorl
in
xchg
loopne
faddp
ret
cmc
ljmp
fmulp
lret
rcl
loope
jecxz
xchg
cli
xchg
xchg
xchg
test
xor
int3
shr
aas
ds
test
test
ret
loopne
fadds
jecxz
iret
repnz
ljmp
aas
iret
sar
rol
ror
mov
testb
call
stc
sub
iret
fistpll
add
sti
cmc
roll
xchg
in
shl
out
cli
rcl
int
cmp
not
fmulp
xchg
ds
in
mov
leave
roll
mov
clc
in
neg
into
cmp
out
ret
aam
ret
jmp
out
test
rolb
ret
int
xor
iret
into
sti
out
aam
hlt
rol
stc
stc
jecxz
std
roll
clc
xor
std
clc
jmp
fcomi
into
int
fdiv
rol
mov
out
mov
incb
into
jecxz
shlb
ljmp
testb
loopne
fucom
loope
fucomi
enter
xor
out
out
div
ror
cmp
out
int
xchg
loopne
test
mov
sti
out
in
lock
xor
not
lret
into
aad
jmp
hlt
xlat
lock
sbb
mov
mov
call
test
int3
in
ss
out
jmp
in
out
fmul
or
in
in
cmc
xchg
in
repnz
stc
xor
cmp
int3
shl
xor
and
out
int
clc
mov
int
repz
out
cmp
ljmp
roll
sti
and
rcr
fcmovne
mov
sar
cli
aad
lret
fnstsw
and
test
hlt
std
out
xlat
xchg
fldlg2
jmp
jmp
repnz
out
jmp
out
fdiv
rcl
sti
fcmovnb
rol
jecxz
addb
mov
shl
out
shr
stc
clc
xor
fcmovnu
rcr
filds
mov
in
int3
mov
mov
cmp
cld
testl
add
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
aad
rolb
jle
add
ljmp
lock
xlat
rcr
dec
ror
into
ljmp
in
into
aam
into
repnz
repnz
fdivr
out
stc
or
repnz
mov
test
ror
cmp
add
faddl
decl
std
xchg
in
leave
enter
ljmp
cmp
or
leave
mov
test
repnz
jecxz
xorb
fcmove
cld
xor
fxch
std
cmpl
jmp
in
test
std
out
shlb
rcr
in
hlt
in
call
icebp
cmp
cld
loopne
out
out
jmp
mov
clc
divl
fdivs
cmc
lret
out
in
lock
jmp
loopne
std
cld
fmull
loop
sub
out
jmp
adc
out
loop
loope
addl
lret
out
out
lret
into
fstpt
in
call
fcmovb
ret
int3
sti
aam
ret
out
fdivrl
fcos
aam
rol
test
testl
into
in
in
sub
stc
fsubr
out
fyl2xp1
and
sti
xor
loop
test
lea
xchg
ffreep
cmp
iret
xor
call
clc
cmc
xchg
test
xchg
in
fisttps
idivb
leave
icebp
enter
lock
aaa
repnz
in
hlt
rcr
clc
loope
rcl
call
ror
ret
enter
fsub
aam
rcr
xlat
call
sub
shr
cmp
cmp
cmp
lret
fidivrl
lock
cmc
jmp
mov
into
in
xchg
icebp
imul
lock
into
cli
leave
std
and
jmp
fstp
cli
leave
aam
in
movl
loopne
ss
lret
int
lret
fucomp
cmc
cmp
filds
fneni(8087
fucomp
loopne
mov
icebp
int3
shr
loop
stc
cmp
jecxz
cmp
ret
clc
fsubr
fiaddl
out
cmp
lock
loopne
aad
cmp
cld
out
int3
fneni(8087
in
leave
into
faddl
sarb
int3
out
xlat
cmp
clc
xlat
sarl
repz
loope
fcmovu
flds
int
icebp
jecxz
xchg
into
out
lret
shr
clc
in
iret
shl
fsub
mul
testl
repnz
aaa
lret
neg
cmp
lock
sar
clc
ret
mov
out
into
test
test
jmp
xor
mov
jmp
rcl
rcr
fstp
aam
cmp
lods
sar
lret
jle
mov
out
fnclex
fdivr
fadds
mov
iret
cld
loop
xor
out
shr
int
fmulp
lock
loopne
enter
fucomi
and
adcb
aad
out
not
rcl
shr
icebp
loope
and
xchg
cld
int3
fdiv
xchg
enter
out
fdivr
fidivrs
loope
fmull
incl
out
in
into
shl
lock
ljmp
into
out
mov
aad
stc
stc
loop
mov
hlt
repz
aad
loopne
in
ret
cmp
fnstcw
out
lock
repz
sti
hlt
mov
int
call
lock
clc
fistpll
ret
jmp
addl
in
jmp
sarl
cmpb
jmp
std
test
ret
lock
cli
int3
loope
roll
xlat
loop
stc
repz
rcr
cmpl
sti
repnz
les
ficoms
idivl
xor
cmp
cli
loope
fst
repnz
sti
mov
mov
lret
nop
iret
cs
jmp
out
into
cmp
sbb
repnz
jmp
stc
fimuls
lret
out
xor
iret
fsubr
neg
aam
shr
in
xor
enter
cld
fst
xor
mov
mov
sarl
lock
sbb
rol
cld
xlat
addb
repz
xchg
aas
ss
ss
sarb
aad
aas
icebp
call
hlt
loope
and
stc
mov
xchg
lock
lret
in
sti
fstp
lret
in
add
rol
xchg
lret
cli
cli
clc
fsts
sub
idivl
xor
fidivrl
adc
ret
test
call
lret
iret
clc
lret
xor
ror
int
cmp
call
ds
loope
loop
test
call
aad
lock
aad
repnz
fstp
inc
roll
xchg
in
test
ds
leave
hlt
loope
fldl
jmp
mov
fucomip
shr
lret
cmc
repnz
cmp
dec
sar
sti
in
hlt
repnz
mov
adc
ljmp
xchg
nop
lock
not
xlat
int
fcmovu
clc
fnstsw
test
into
into
mov
fcmovb
test
nop
lock
fists
jecxz
clc
cmp
std
in
xchg
fcomip
ret
loop
jmp
icebp
icebp
aas
in
clc
ljmp
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
push
mov
jle
in
fdivrs
int
rcr
fdiv
xlat
lock
call
mov
in
icebp
mov
xchg
mov
std
ds
xlat
cmc
flds
in
std
mov
sti
int
xchg
xchg
fsub
loop
enter
not
leave
cmp
cmp
out
loope
fsubr
rol
leave
call
jmp
fidivl
sbb
cmp
fcomip
rol
lret
out
addb
out
xor
cmp
ljmp
test
aam
xchg
call
lock
mov
loopne
jecxz
shr
rol
enter
stc
rcr
fistpll
repnz
fiaddl
enter
jecxz
test
repz
lret
cmp
cli
out
fcomi
repz
loopne
cmp
jmp
out
cli
les
enter
lock
cmp
fsubr
not
icebp
ret
jmp
icebp
icebp
xor
pushl
jecxz
xlat
aam
ljmp
ror
cli
std
cli
loopne
fcomi
xchg
incl
repnz
out
test
aaa
aaa
std
hlt
fistpll
ljmp
xchg
leave
ljmp
clc
out
cs
cmp
ret
iret
add
test
cli
stc
mov
out
iret
fisttpl
int
in
out
int
xlat
ljmp
test
inc
stc
xchg
and
mul
in
icebp
sub
shl
xor
cmp
filds
in
mov
out
lock
cmp
xor
out
test
cmc
shr
mov
int3
mov
mov
div
out
repz
cmp
out
jmp
fucom
int3
roll
cli
mul
sti
mul
xchg
shr
xchg
in
out
out
ss
into
cli
fidivl
in
fadd
ret
out
sti
ret
in
xchg
cmp
out
xlat
call
out
into
in
out
lock
out
loop
out
cmp
cmp
cmp
shr
mov
sub
fmul
enter
int3
xlat
loopne
lds
test
decb
mov
int
out
shll
xor
clc
iret
cld
ljmp
clc
iret
test
call
fsub
test
sbb
jmp
not
clc
enter
lret
repz
xchg
mov
out
std
std
out
jmp
rcl
cld
repnz
loop
fstpt
sar
roll
loop
fxch
lock
adc
test
stc
cmp
out
cmp
cli
shr
cmp
rcr
out
jmp
test
or
or
lock
rcl
aad
rcrl
ja
add
jle
lret
lret
in
in
cld
out
rcr
add
repnz
std
stc
fdivr
xchg
mov
hlt
out
jmp
repnz
cmp
sti
call
aas
loope
sarl
test
fadd
in
mov
std
sbb
repnz
int
xor
sti
imul
xor
shr
xor
or
rcl
aam
div
xchg
fisttpll
in
ret
lret
fidivrl
xor
aam
jmp
roll
aad
cli
jmp
mov
dec
orl
xor
lock
cmp
loope
fidivrs
in
mov
out
out
xchg
in
jmp
ljmp
in
shl
and
loop
lret
out
nop
adcb
jmp
hlt
cmp
clc
in
fidivrl
loopne
aam
loopne
jmp
xchg
std
mov
filds
in
test
fsub
clc
fcomi
fisttps
out
out
xor
rorl
sti
shll
repnz
hlt
ds
fcomip
into
repz
aas
loope
in
out
fsubrp
fimull
lret
aam
ljmp
aam
sar
aam
in
fmulp
sti
filds
xor
iret
xor
sti
cli
addl
fyl2xp1
mov
repz
clc
cmc
ss
iret
clc
cmc
cld
rcl
icebp
fcmovu
rcl
sar
cmpl
mov
jmp
loopne
aas
out
clc
in
lret
cmp
test
lds
call
jecxz
out
out
int
in
xor
out
cmp
sarl
icebp
shl
ret
cmc
rorb
in
xchg
das
xor
in
shl
aam
xor
ss
addl
into
jmp
loop
fcomip
xor
cli
call
rcr
clc
iret
sti
hlt
xchg
into
int
fstl
call
lock
xor
call
fmull
xabort
and
test
icebp
imul
icebp
call
cmp
loop
out
cli
xchg
in
stc
fmuls
jmp
ljmp
aas
ror
jmp
rcl
testl
jmp
xchg
ljmp
icebp
ljmp
xlat
imul
aaa
xchg
repnz
mov
loop
jmp
xor
in
call
aaa
fstp
repnz
xchg
rol
std
hlt
mov
out
int
in
or
test
jmp
xor
in
lret
enter
jmp
idiv
aad
cli
xchg
test
fcmovne
loop
rclb
test
pushl
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
adc
cmp
sbb
jle
repz
ret
rcr
cmp
ret
loop
in
cmp
fsubrp
xchg
cs
cmp
loopne
cli
shl
cmp
ret
call
hlt
mov
jecxz
xchg
cmp
aas
fsubp
rcr
cld
aas
adc
and
mov
out
out
mov
aaa
repz
repnz
sarb
cmp
sti
mov
lret
mov
lret
xchg
mov
cmp
cld
cmp
div
cmp
test
stc
or
rorl
iret
jmp
std
or
lret
loop
ljmp
fldz
fld
xor
ret
loope
stc
jecxz
loopne
in
out
fsub
call
sar
cmp
sti
sti
cmp
ljmp
in
icebp
jecxz
loop
hlt
enter
shl
icebp
aaa
int3
std
out
sub
fsincos
idiv
fsub
shl
orb
fldl2t
clc
ds
repz
in
ret
xlat
xchg
xchg
std
into
out
rorb
jmp
rol
in
jmp
cli
sar
test
cmp
mov
fucomip
in
lret
fmull
das
out
aaa
fnstenv
cmc
test
cmp
repz
hlt
ljmp
shr
mov
cmc
repnz
fcomi
xlat
out
cmp
fstp
fiaddl
int
sbb
ljmp
int
clc
in
int3
lret
cli
shr
cmp
fdivr
lds
mov
rorl
mul
stc
int3
int3
out
fistpll
xchg
out
rcl
std
add
out
addl
shl
lock
fdivrp
test
jecxz
jmp
loop
cld
loop
orb
cmp
out
cld
aaa
flds
test
shl
fsub
addl
xchg
fucom
out
jmp
repnz
filds
clc
aam
sbb
test
mov
dec
cld
movl
movl
cmp
movl
jmp
mov
fstp
enter
imul
xor
pop
test
jle
xchg
xor
cmc
xor
into
lock
out
mov
xchg
fsubp
icebp
test
out
mov
shl
xor
in
fdiv
out
aas
aas
cld
icebp
rcl
ret
roll
lock
out
lock
repz
jmp
cmp
addb
in
pop
stc
loopne
ljmp
hlt
rcl
jmp
int
cld
sbb
jecxz
test
test
shl
sub
hlt
clc
aam
xlat
sarb
cld
out
movb
add
mov
imulb
loopne
fst
ret
aas
in
rcl
test
repnz
call
in
aam
lock
bnd
loop
stc
out
hlt
out
xbegin
loopne
nop
ret
enter
cmp
out
int3
lret
cmp
jecxz
shr
addb
out
test
aam
fucomip
jmp
leave
cs
cmp
xlat
stc
rcr
cmp
xlat
clc
out
cli
loop
into
std
fsub
int
cmp
out
jmp
sti
ss
sarb
fcmovnbe
shl
std
cmp
test
clc
lret
test
sbb
mov
xor
stc
ret
cmp
aaa
int3
or
cmc
clc
cld
xchg
nop
orb
cmp
cmp
shl
lock
into
in
in
std
hlt
roll
ljmp
xchg
xlat
das
out
rcl
lret
lret
faddl
cmc
in
sbb
iret
out
ret
lret
xchg
jmp
sti
frndint
dec
leave
flds
fcmovnb
ret
ret
lret
jmp
lock
in
call
repz
cmp
shl
out
out
fmull
out
test
into
in
xchg
ffreep
ret
xor
hlt
icebp
clc
cmc
in
icebp
cli
aad
ret
sti
stc
mov
sti
cld
xchg
in
xchg
xchg
cs
enter
shll
shll
fcomip
int
aas
fildl
cld
lock
repz
andl
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
int
aam
in
xor
jecxz
xor
aad
loop
lock
cld
loope
cmc
xchg
fsubr
fimuls
xchg
out
stc
lret
enter
fucomp
fcmovnbe
fcomp
out
cmp
fdivr
int3
jmp
mov
rorb
enter
cmp
shl
cmp
clc
rcr
aad
test
loopne
and
out
lret
jmp
fdiv
rol
aam
hlt
fildl
loopne
leave
mov
fsubp
hlt
in
cmc
out
fnstcw
rcl
vaddsubpd
cmp
fcmovnu
xlat
loope
enter
mov
fisttpll
out
xchg
add
cmc
fidivs
ss
icebp
cmp
int
rorl
mov
mov
mov
int
aaa
ret
icebp
jmp
xor
adc
fcmovnbe
ret
fmul
test
mov
test
lret
in
dec
fiadds
mov
stc
mov
ljmp
rcl
shl
sti
xlat
xor
div
in
aas
aad
int
neg
mov
aad
in
cld
nop
iret
fisttps
aaa
ljmp
shl
lret
xlat
fcmovnb
xchg
clc
cmp
test
ret
cmc
test
rcr
sub
lret
mov
rcl
icebp
jmp
les
loope
out
in
in
iret
jecxz
mov
ror
xor
sub
hlt
idiv
xlat
cmp
loopne
shl
aam
std
in
cld
ror
xchg
clc
lret
ss
xor
call
sbb
aas
ret
or
fucomip
mov
in
repnz
cs
in
icebp
aaa
iret
repnz
cmc
fdiv
vpmulhuw
lds
out
call
mov
aad
sarl
out
lret
repz
cmp
cmp
jecxz
xchg
lret
mov
int3
loope
test
leave
stc
in
vpsrlw
fcmove
or
jecxz
icebp
hlt
sbb
test
out
lret
icebp
call
cmp
hlt
xor
out
and
xor
aad
fdivr
enter
inc
clc
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
or
jle
sbb
jle
out
iret
out
fucomp
cs
in
fdiv
out
das
fcom
fsubr
fcmovnu
out
hlt
roll
loopne
mov
int
repz
call
out
aaa
ljmp
shl
ret
xlat
xlat
jmp
rorb
hlt
rol
fadd
fnstenv
icebp
fildl
mov
enter
ret
fsubr
hlt
xchg
aaa
fnstenv
lret
fdivp
xor
ret
iret
lock
fsubp
mov
stc
xchg
adcb
enter
cmp
in
shl
repz
cmp
hlt
ret
lds
not
in
in
xor
not
icebp
fmul
rcr
sti
stc
jmp
mov
xchg
mov
xor
rcr
rcr
out
icebp
in
cmp
test
icebp
in
xchg
fcmovnu
imul
test
int
shl
in
rol
int
out
out
int3
cld
int3
repz
sti
out
icebp
leave
leave
inc
fcmove
loope
stc
loop
int
in
rol
aad
icebp
cmp
cmp
in
lock
jmp
out
stc
mov
xchg
lret
in
jmp
out
std
aaa
aas
xor
fst
xchg
loop
ret
rol
fucomp
repz
cmp
lock
shl
repnz
lock
out
ret
stc
out
fcmovnbe
in
orl
call
fstp
out
adc
loopne
adc
in
cli
fcmovbe
in
mov
mov
lds
idivl
lret
xor
aad
fldl
xchg
xlat
in
enter
in
loope
sub
xor
shl
cmc
flds
xor
test
in
nop
int
cmc
mov
ss
rcr
leave
out
fdivp
les
stc
ret
sti
fdivrp
loopne
in
repnz
in
out
in
ret
leave
out
jmp
in
jmp
iret
not
xlat
std
cmc
cmc
out
xchg
cmc
hlt
shrb
cmp
fmul
stc
ror
loopne,pt
call
out
clc
call
mov
add
sarl
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
bound
stc
pop
ss
jle
add
out
mov
cld
iret
call
shll
out
rcr
in
out
in
cmp
and
lock
cmp
fadds
jmp
ljmp
and
add
in
mov
in
loop
fldl
out
lret
sti
hlt
jmp
stc
std
fdivr
out
loopne
icebp
cmc
stc
test
repnz
jmp
or
ret
jmp
in
enter
jmp
shl
aad
shl
fiaddl
fstp
repz
stc
out
shl
lock
hlt
in
ret
hlt
test
cmc
lret
ffree
call
icebp
in
idiv
xor
iret
out
stc
fdivp
in
jecxz
aas
cld
ljmp
fisttpll
aad
jmp
clc
shl
fucomp
fcmovnbe
repz
xchg
and
loope
sbb
hlt
xchg
aad
xor
repnz
rol
ds
cld
xrelease
fcmovu
int3
loope
fiaddl
iret
out
xor
out
cmp
ret
aaa
sarb
push
mov
enter
add
lock
shr
in
jecxz
iret
into
into
call
shr
xlat
jecxz
test
sub
test
stc
cmp
shll
xor
ret
aam
fadd
cli
cli
test
fnop
xchg
fucomip
lock
ror
aaa
in
cmp
repnz
ret
test
call
jmp
int
fxch
out
sub
xor
aaa
in
int3
cmp
sarb
shl
xchg
test
repz
movl
cld
out
fcomp
cmp
filds
fdecstp
cli
xchg
mov
jmp
cmp
std
cld
int3
bnd
icebp
hlt
rol
leave
mov
in
out
nop
iret
std
jmp
out
xor
xlat
cmp
aas
ret
aas
movb
mov
in
test
aad
clc
stc
cmp
in
in
add
lock
cmp
xlat
not
and
jmp
aam
enter
aad
cmp
and
iret
mov
mov
jle
add
sbb
loope
shl
lret
in
cmc
fucomip
in
lret
xor
stc
fdivrp
cmp
stc
xor
lock
sti
movb
in
mov
out
iret
iret
bnd
aad
faddl
ljmp
lds
in
vshufps
cli
fsubr
push
in
std
xchg
in
xlat
sbb
fmull
xlat
jmp
das
repz
fucomip
roll
filds
ror
and
test
aam
test
xor
cmp
cmp
and
out
and
bnd
aad
cs
xlat
xor
div
fld
not
fldz
enter
xchg
shll
xor
cmp
cld
lock
ret
mul
fimuls
mov
lock
repz
enter
fdivp
shl
test
shl
rol
cli
in
loop
sub
in
shl
xor
vpaddd
int3
xor
clc
icebp
iret
clc
out
cmp
xchg
out
int
xchg
test
int3
out
rcr
stc
in
cmp
mul
out
rcr
stc
fadds
lret
iret
dec
mov
jmp
xchg
fsub
shr
leave
ss
cmp
cmp
sti
clc
addb
jmp
lret
repnz
in
repz
in
cmp
out
sti
xorl
test
jmp
leave
mov
repnz
int3
xor
out
cmp
cmp
fdivp
cmp
repz
mov
out
mov
mov
xlat
out
cld
cmp
rol
cmp
sbb
addl
iret
xchg
loop
aaa
out
lret
std
repz
cmp
cld
loop
xlat
sar
fcmovnb
loop
in
mov
int
iret
xor
xor
sti
lret
rolb
cld
aam
enter
leave
xchg
out
shl
fildll
jecxz
out
out
ss
stc
int
les
dec
or
add
xorl
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
in
xlat
mov
fcos
xchg
fmul
loope
jecxz
xor
rcr
into
ljmp
rcl
clc
jmp
cld
loopne
ljmp
loopne
ret
in
lret
f2xm1
stc
leave
xor
repnz
rolb
ret
mov
mov
shl
loopne
loop,pn
out
lock
clc
dec
hlt
adc
roll
ljmp
into
fucomp
icebp
div
out
out
aad
aam
out
addb
aam
aam
jmp
in
in
ret
xlat
jmp
aam
cmp
jmp
shl
sbb
test
in
sti
roll
fmul
int3
repz
ds
fsub
mov
fmuls
and
out
ljmp
aas
sbb
cli
adc
cli
sti
std
imul
jmp
mov
jecxz
xor
out
cmp
loopne
cli
in
repz
cmc
testl
fisttpll
in
fcomp
neg
shl
inc
loopne
fprem
in
shr
test
out
out
cld
std
out
xor
xor
xlat
aad
hlt
loopne
cmp
sti
aas
test
ljmp
loopne
lret
ljmp
lret
clc
in
fnop
rcl
idivl
filds
rcr
xlat
lret
fadd
loopne
in
fisttpll
aam
fcomip
aam
ljmp
aad
loopne
std
jecxz
mov
int3
cmc
repz
icebp
xor
clc
lret
loop
icebp
icebp
hlt
cld
enter
lds
adcl
out
xor
out
idiv
test
flds
lret
std
cmp
shr
div
in
xor
into
icebp
aam
aas
cld
hlt
add
loope
fimull
icebp
fucom
in
icebp
xchg
xchg
in
das
clc
out
xor
rolb
fiadds
ret
hlt
std
rcll
out
cmc
jmp
sar
repnz
fcmovbe
ret
stc
pushl
call
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
dec
mov
or
add
rcr
in
in
shr
out
adcl
hlt
int3
fiadds
inc
loopne
cmc
rcl
test
ljmp
xor
clc
cmp
sti
fcom
fcmovnb
out
fcmovu
idiv
fld
enter
sbb
mov
mov
ljmp
out
mul
repnz
out
sarb
out
cld
aam
stc
jmp
test
sub
xor
cld
cmp
stc
jmp
filds
in
clc
enter
cld
loope
aam
das
cmc
xlat
lds
shl
ljmp
lds
addb
mov
iret
in
int
shl
ljmp
shl
cmp
cld
aad
fildl
ficoms
fcom
in
lret
into
cmp
call
rcl
fcmovnb
xlat
fmull
in
into
loop
div
cmp
cmc
icebp
enter
mul
jecxz
jecxz
enter
sub
test
xchg
mov
repz
xor
in
lret
clc
das
fxtract
jmp
iret
xlat
cmp
adc
loopne
out
test
ret
out
repz
cmc
repz
cli
cmp
fiaddl
cld
jmp
cli
hlt
int3
iret
xor
clc
fsubr
out
fabs
shl
mov
repz
fcmovu
mov
lret
in
cmc
out
stc
icebp
fstp
out
sti
cmp
hlt
ljmp
loopne
orl
aaa
iret
shl
xor
shl
in
aas
xlat
loop
rcr
and
ljmp
aam
repnz
cld
lret
call
not
ror
mov
cld
loop
out
aad
fsubr
ss
repz
loopne
xchg
out
std
faddp
out
xor
out
aas
rcl
in
lock
loop
cli
iret
hlt
cmc
cmpl
loope
xchg
loopne
and
out
int
int3
aad
lret
leave
xor
in
aaa
roll
int
addb
out
repz
aam
int
out
fidivrl
cmp
iret
aas
filds
cld
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
sbb
and
push
mov
jle
loope
mov
xchg
fdivp
jmp
into
out
xlat
repnz
shl
cmp
stc
loop
mov
cmp
test
out
xchg
jmp
das
cmp
jmp
std
iret
rcr
in
rcr
leave
fucomp
mov
fdiv
in
out
repz
iret
fcomip
int3
ljmp
cld
fcmovu
ret
cmp
test
jecxz
fsubr
jmp
repz
aas
cmp
fdivrp
filds
addl
rcl
out
xor
ds
not
xchg
stc
ret
incb
into
mov
in
sub
divb
jmp
cld
shr
clc
clc
test
cmp
in
fldl
iret
aam
sub
loopne
fdiv
fstpt
xlat
std
rolb
adcb
aad
fcmove
int
enter
lock
fabs
ret
in
loopne
out
int3
in
out
loope
xor
int
call
iret
rol
cld
cmc
sti
out
enter
jmp
out
in
shll
ds
repz
cmc
rol
leave
mov
cld
xchg
lock
cld
call
xlat
std
in
enter
rolb
aam
not
sub
shl
int3
in
shr
adc
loope
mov
stc
ljmp
repnz
out
xor
int3
int3
ljmp
xlat
rcl
mul
loopne
loop
lock
mov
out
mov
in
cmp
cmp
sar
addl
jmp
nop
mov
fmul
repnz
jmp
int
repnz
shr
ret
fadd
xchg
into
mov
loope
xchg
fsubr
sar
jmp
lret
in
ret
std
aad
mov
filds
in
sub
std
jmp
out
sar
cmp
in
mov
out
cmc
iret
rcl
jecxz
fucomi
cmp
cmp
sar
aad
loopne
cli
rolb
mov
mov
push
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
fiadds
ret
sub
repz
std
clc
cmp
fcmovnb
aam
cld
lock
sub
cmp
cmp
out
sti
in
iret
int
int
ret
fst
ljmp
lret
out
add
cmp
int3
out
hlt
out
cli
leave
divb
in
repnz
enter
jmp
xchg
xchg
in
out
rcr
sti
xor
aam
div
loopne
stc
fcmovnbe
xlat
loop
mov
xchg
test
leave
ret
iret
fstp
aas
lret
aad
add
hlt
fld
enter
in
dec
icebp
int
lock
jmp
rol
xor
aam
loopne
loop
std
aad
enter
enter
fildl
call
out
loopne
shl
shr
clc
fstp
fcomi
jmp
enter
fucomp
lret
repnz
shr
repz
leave
sarl
xlat
xor
test
mov
xchg
enter
repnz
hlt
ret
cmp
lock
test
call
fsubp
lret
fsubrp
sar
icebp
lret
out
fstp
hlt
cli
cmp
cmc
test
xchg
int3
ror
int
test
repnz
iret
idivb
out
int
out
rol
lock
loop
mov
orl
rcr
ret
repz
repnz
lret
fsubp
imul
repnz
fcmovnu
mul
ljmp
xchg
cmc
hlt
out
fidivl
stc
fucomip
jmp
ret
in
ret
and
jmp
mov
iret
xchg
jmp
cmc
aam
sarb
idiv
jmp
cmp
aas
mov
std
cmp
xchg
in
aad
clc
lret
out
in
iret
xor
loopne
loop
out
and
test
ret
in
sti
in
and
mov
les
cmp
sti
rcr
into
fstpt
in
mov
mov
fstl
cmc
fnstenv
shl
in
jecxz
shr
add
in
int3
test
out
xor
iret
ffree
int3
fdivr
cmp
addb
out
xchg
fldlg2
fmul
mov
jmp
in
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
out
outsl
jge
fdivrl
jle
loope
jmp
cmp
cmp
cmc
shl
orb
xchg
loopne
fcomi
mov
aaa
call
cmp
xor
lock
ljmp
in
mov
hlt
mul
aad
icebp
shll
into
out
mul
sti
fmulp
enter
test
int
aad
out
sti
out
addb
out
mov
out
int
enter
mov
fincstp
stc
icebp
lret
fsubp
or
mul
icebp
jecxz
mov
in
call
in
call
leave
out
aaa
in
ljmp
fucom
out
lret
cmp
enter
out
xor
lock
in
out
shl
xor
shr
dec
loopne
and
sbb
test
xchg
in
in
in
out
iret
idivl
into
rcl
in
stc
icebp
in
fcom
repz
loope
leave
loope
ljmp
jecxz
out
icebp
hlt
stc
xlat
rcr
testl
cld
loopne
mov
sar
jmp
loope
rcl
fadd
loop
cli
loope
mov
and
rolb
out
out
hlt
fmul
lret
sarl
jmp
and
xchg
fucomp
test
ljmp
fidivl
lret
call
aam
rcl
fcomip
rol
ret
ljmp
fsubp
hlt
ret
xor
into
icebp
cld
int3
repz
in
ret
int
loope
mov
hlt
in
hlt
xor
ss
cmp
xor
cmp
int
shl
icebp
test
aam
aad
mov
jecxz
lret
shr
out
jmp
into
ds
sar
adc
jecxz
jmp
enter
rcl
idiv
into
aam
out
idivl
out
cmp
inc
fcmovb
sbb
xlat
int
lret
test
xchg
mov
lret
out
jmp
ds
aam
sar
aad
test
loopne
mov
out
loop
in
xor
xor
into
loope
repz
test
addb
lock
xor
mov
adcl
xor
adcl
xor
adcl
add
add
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
adc
dec
mov
add
out
into
int
ss
jmp
sar
cld
sti
loopne
lret
std
in
jmp
in
ljmp
in
repz
iret
into
sti
fdivp
in
testl
nop
shl
xlat
stc
xor
shr
repnz
jecxz
cmp
not
out
fxch
test
xchg
out
jmp
int
leave
enter
cmp
fdiv
rolb
movl
addb
fdivr
xlat
cmp
into
fcomi
aas
sar
std
ror
xchg
xlat
mov
in
rorl
xor
jmp
neg
cmp
cmp
xor
fcmovne
cmp
lret
lret
out
bnd
shl
shll
rcr
aaa
out
fcomi
in
jecxz
xchg
rcr
rcr
call
repz
repnz
jmp
aam
lret
out
cmp
cmp
cmp
icebp
cmp
out
int
fcmovnb
loopne
lret
xchg
shl
cmp
div
lock
dec
test
shl
sti
decb
jmp
test
xchg
add
ror
aad
into
testb
leave
mov
out
xchg
out
xchg
jmp
mov
call
loop
out
out
shl
in
leave
xchg
in
cli
mov
out
rol
into
in
enter
sarb
addl
out
test
lret
out
out
ss
ffreep
addl
rcl
loopne
sub
and
lock
cmc
clc
in
imul
in
repnz
jecxz
in
ffree
loope
stc
out
fldl
fdivr
xor
jmp
aad
icebp
stc
in
loop
fcomp
ret
clc
ret
cmc
mov
lock
idiv
stc
lock
fstp
into
aaa
fsubr
cmp
test
cld
aad
fmul
in
lock
shr
xchg
jecxz
cld
cmp
fcmovu
cmp
fcomip
call
loopne
lds
or
test
aam
not
rcr
test
ffree
out
fcomip
fldl
aad
xchg
jmp
xchg
xchg
jmp
xor
je
movl
lea
jmp
iret
iret
ror
ror
xlat
fstps
pop
mov
inc
jle
ret
jle
cmp
lock
jmp
mov
mov
mov
int3
xor
repz
in
sti
in
hlt
repz
aam
icebp
fstpt
test
fucomi
fdivr
loope
in
mov
in
not
stc
enter
cmp
repz
cmc
stc
cmpl
jmp
icebp
fists
aaa
cmc
fcmovne
out
loopne
fcmovu
cmp
lock
adc
ret
cmp
out
std
cld
iret
out
das
shl
sarb
cmc
aad
fsubp
repz
mov
cmp
fdivrp
cld
rorl
cmp
cmp
hlt
in
enter
test
mov
bnd
lret
sarb
xlat
cmp
aad
xor
test
lock
cmc
rcl
enter
leave
in
adcb
leave
xor
in
repnz
cld
cmc
fmul
test
lret
lock
shl
lock
loop
sub
repz
repnz
lock
out
aam
cmp
add
jmp
faddp
or
out
rcl
fdiv
int3
jecxz
fsub
icebp
iret
cmp
faddp
cli
test
ret
leave
loope
out
test
xchg
xchg
out
rcl
loop
clc
ret
repnz
lret
repnz
in
sti
roll
ret
into
out
xor
into
stc
out
std
jmp
out
hlt
cld
ret
clc
out
in
or
cld
loopne
xor
neg
ss
out
out
fidivrs
sub
in
aas
shl
fsubr
mov
aam
mov
jmp
enter
fdiv
roll
aam
stc
fcomi
ljmp
out
rol
repnz
idivb
aaa
and
xlat
aad
jmp
or
addl
aaa
loope
cli
hlt
aam
fstpt
icebp
cld
ror
xlat
int
fists
rcl
lret
enter
in
fucomp
rol
loope
jecxz
sbb
lret
stc
loopne
xchg
hlt
loop
clc
xor
shr
xor
cmp
into
loopne
cmp
enter
xchg
out
orl
hlt
aam
in
icebp
lock
jmp
lret
ret
int
lret
in
aad
loope
xlat
sub
ret
jle
fcos
addl
mov
out
cli
sub
repz
int3
fdivs
loope
sti
and
idiv
test
sti
xchg
in
xchg
rol
in
cmp
fcom
aaa
jmp
aas
fcmovu
jmp
fdivrp
rcl
xchg
nop
int3
test
aam
shr
cli
iret
cmp
out
lock
aam
jecxz
in
in
in
icebp
jmp
shl
in
shl
into
lret
into
lret
leave
fsubp
cld
rol
rcl
mov
lock
clc
jmp
sti
lret
aad
jecxz
stc
in
loopne
cmc
mov
sti
lret
lret
call
out
call
loope
fdivrl
lret
loopne
out
vpaddd
xchg
std
xchg
test
jecxz
fdivs
icebp
ss
in
cmc
loope
test
iret
in
cmc
in
xchg
out
xor
sub
call
cmp
addb
and
xlat
cmp
loopne
jmp
hlt
stc
out
xlat
in
aaa
icebp
faddp
stc
clc
iret
fdiv
loope
out
cli
loope
jecxz
fisttpl
int3
lret
ljmp
icebp
cmc
mul
sti
add
ljmp
icebp
out
lret
xchg
in
ss
iret
xor
cld
lock
aam
cli
cmc
shl
iret
shl
rcr
xchg
enter
int
out
into
into
into
in
fdivr
ljmp
jecxz
out
test
cmp
mov
cli
rcl
hlt
clc
iret
iret
ret
sti
shr
aad
xor
hlt
in
sbb
aam
jmp
orb
std
mov
into
jmp
aam
lret
in
test
not
aam
std
mul
ror
in
leave
jecxz
iret
out
addb
xor
ret
sti
xor
ret
aam
clc
mov
cmp
enter
ror
ror
ds
aad
roll
in
xchg
xchg
shl
ss
lret
xor
loope
into
loopne
ret
add
dec
fdivr
xchg
in
shl
xlat
iret
icebp
into
call
jmp
cli
imul
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
imul
cmp
lds
out
out
jmp
fsub
ss
in
aaa
cmp
loope
sbb
rorb
test
test
int
test
fsubr
into
cld
sti
aam
rcr
cmp
ret
in
ret
mov
xchg
mov
loopne
lock
out
enter
rcr
cmp
in
rcr
ret
out
ret
mov
in
in
icebp
aaa
ljmp
jecxz
vmovq
cld
cmpb
fsub
mov
mov
divb
lret
in
leave
aad
into
into
cld
loopne
cmc
fcmovnbe
flds
mov
das
lock
out
jmp
cmp
ret
shl
ds
rcr
out
cli
jmp
iret
mov
ss
icebp
in
lret
jmp
idiv
idiv
jmp
lock
mov
in
mov
repnz
lret
out
cld
clc
aam
into
in
in
out
sbb
adcl
ss
lock
fmulp
std
icebp
in
into
fiadds
jmp
in
lret
xchg
lret
loope
loope
repnz
idivl
lret
cmp
in
test
enter
fxam
int3
xchg
mov
int
aam
cli
leave
rcl
rcl
test
in
cli
shl
loop
test
call
repz
xchg
in
stc
xor
in
xor
int3
int3
ror
loope
hlt
icebp
incb
jmp
testl
out
jmp
aad
aas
aas
dec
test
in
enter
out
test
out
icebp
shr
divb
fcmovnbe
cmp
fldl
in
stc
cmp
jmp
sti
ljmp
aad
lret
fcmovne
cmp
cmp
out
cmc
out
out
xlat
in
xlat
test
shl
repz
xor
jmp
cld
into
ljmp
aas
jmp
jmp
fmuls
shr
call
cmc
ljmp
xlat
cli
add
fsubrp
loopne
addb
div
repnz
out
sti
fxam
orl
sbb
pusha
mov
xor
add
jmp
rol
lret
fstp
aad
dec
jns
leave
test
sub
add
mov
nop
out
mov
shl
clc
repz
out
cmp
cmp
in
ss
test
hlt
aad
in
out
icebp
incl
test
ror
fistpll
fadds
cmc
test
int
jecxz
jecxz
mov
orb
cmp
cmp
stc
sar
ds
xbegin
ret
or
lock
call
xlat
xor
int3
stc
lret
cmpb
stc
lock
flds
jmp
lret
std
in
jmp
in
cld
lock
fsubp
cmp
in
jmp
int3
lret
xchg
mov
cmp
aad
repnz
cmpl
in
test
sub
call
fidivl
fst
ds
int3
sti
int
fildl
loop
mov
mov
int
fadd
rcr
shr
xor
icebp
sarl
aam
clc
fimuls
incl
cs
xlat
int
repnz
leave
out
jmp
int
xor
test
fsincos
in
in
ret
enter
lock
ror
sub
leave
loop
jmp
loop
in
xlat
cld
lds
in
out
jmp
xor
lret
cmp
roll
rcl
jmp
ret
fst
in
fsub
out
shr
out
repz
xlat
vpmaxub
aad
lock
repnz
cld
icebp
fmul
in
jmp
in
in
cmp
lret
cmp
repz
cli
fdiv
rcr
cld
int
stc
mov
xchg
xlat
loope
int
xor
aaa
std
out
or
xlat
jecxz
fsub
faddl
jmp
in
mov
xor
rcr
fdivrs
aaa
loop,pt
xlat
sti
rcr
fcomi
hlt
call
mov
sub
loop
ret
enter
sarl
fcmovnbe
cmp
int
aam
div
cli
cmp
in
div
clc
sub
out
cmp
enter
into
loope
cmp
test
in
in
iret
test
xlat
clc
cmp
iret
test
fucom
loop
xchg
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
xchg
mov
movsb
je
jle
ret
jle
xchg
test
fcomi
out
cmp
fmul
fcomip
out
test
out
test
cmc
xlat
leave
mov
fucomp
sti
loopne
call
out
xor
cmp
cmp
in
loop
xchg
sub
int3
mov
das
in
std
lock
aam
loopne
aas
cmpl
lret
mov
jmp
nop
ljmp
aam
fidivrl
shl
jecxz
call
jecxz
loope
cli
fcmovne
jmp
lock
clc
into
ds
out
in
leave
in
out
xor
shl
int
xor
out
cld
repnz
lock
aad
xchg
fstp
cld
cld
leave
in
ljmp
clc
shr
repz
icebp
out
in
loop
idiv
neg
fadds
lret
lock
ror
enter
jmp
icebp
testb
ds
clc
in
or
repz
aaa
aam
cmp
xor
in
loope
in
aam
ret
xchg
out
leave
in
xchg
jmp
int3
fiadds
xor
iret
lret
lock
hlt
ds
test
aad
cli
ljmp
mov
iret
rol
in
cmp
loopne
sarl
repnz
aam
mov
fucomi
out
ljmp
int3
cmp
fcomi
cmp
stc
jmp
rcl
in
fninit
loop
enter
into
lock
repz
das
lret
int
dec
cmp
not
aam
in
std
cld
in
jmp
into
mov
xor
stc
les
not
shr
addb
cld
xchg
fisttps
out
xchg
xor
loop
xor
cmc
push
enter
fadd
into
loope
test
fcomip
call
or
stc
in
cli
icebp
iret
cmp
sub
fcom
aam
test
hlt
sbb
aad
shl
stc
in
aaa
aam
iret
fst
loop
rcl
rcr
test
hlt
mov
stc
repz
repz
xor
idivb
orb
enter
jmp
rol
rcr
and
pop
sub
dec
jle
ret
jle
std
jmp
test
cmp
fucomp
fucomi
cmp
and
vcmpsd
cmp
addl
repz
ljmp
sub
rcl
fldl
std
clc
xchg
in
fucomip
mov
call
jecxz
in
mov
fcom
test
clc
in
ljmp
aam
into
int
lret
ror
iret
into
cli
cmp
adc
out
fcmovu
fsubrp
loop
lock
in
out
repz
cli
ror
repz
icebp
hlt
ljmp
xchg
rcr
loope
aad
xor
divl
std
icebp
adc
shl
std
add
mov
into
int
xchg
and
out
ss
rcl
cmp
std
stc
jecxz
rol
ret
aad
mov
repz
lock
icebp
ss
icebp
rcl
ds
icebp
faddp
test
mov
out
icebp
dec
xchg
into
shl
jmp
sar
cmp
loope
aas
fcomi
out
repnz
jecxz
test
iret
jecxz
xchg
rcl
sub
call
cmc
test
sti
fadd
and
ret
iret
std
loopne
jmp
loopne
in
cmp
out
jmp
xor
mov
loope
in
fcmovu
ljmp
mov
shrb
lret
in
in
in
rcl
addb
fcmove
jmp
enter
call
xor
hlt
fdivs
hlt
icebp
in
sti
shl
call
jmp
nop
loopne
or
in
test
call
int
and
test
into
into
cld
out
lock
clc
ss
in
std
fcom
ror
jmp
roll
repz
out
mov
jmp
xchg
cmc
xor
sub
xor
xlat
shl
jecxz
out
sub
xchg
call
mov
sub
cmc
cmp
stc
fcmovne
fcmovnu
out
icebp
ret
neg
rcr
loope
leave
enter
jecxz
rol
rcl
idivb
ror
in
out
fucomi
iret
test
in
fcmovbe
std
aad
loope
jecxz
icebp
and
xor
add
add
rcl
fstp
aad
mov
cmp
dec
jle
ret
jle
enter
lds
out
fcom
hlt
aam
cmp
fcomi
mov
in
xchg
lock
test
shl
jmp
idivb
in
loope
cmp
enter
clc
out
test
ljmp
ljmp
loopne
cmp
cmp
cld
int3
mov
loope
fiadds
fcmovbe
cld
aaa
sti
xor
test
fcompp
cld
mov
ljmp
test
lock
xor
int3
cmc
loope
aas
roll
vpaddd
icebp
rolb
in
xor
lret
cmc
stc
lock
cli
ret
xchg
fiaddl
xchg
testb
not
repz
jmp
lock
aad
out
out
in
xlat
fimull
repz
out
aam
in
lret
lret
shr
fcomi
jecxz
in
addb
shl
test
ret
leave
cmp
cmc
fsin
fcomp
aad
cmp
idiv
xor
xchg
into
loop
test
lock
call
cmc
idiv
rolb
jmp
icebp
test
and
out
stc
sarl
hlt
les
out
loope
test
loopne
mov
xchg
rcl
lock
cmc
cld
ds
fyl2x
hlt
loopne
in
add
rcl
mov
int
out
repz
sarl
neg
iret
int
jmp
lret
cli
not
cli
xchg
call
xchg
lret
xor
out
into
jmp
fdivrs
ret
imul
xchg
jmp
aad
mov
test
in
jmp
cmp
std
call
iret
shl
out
cli
lret
idiv
int3
jecxz
mov
shl
int
cmp
leave
iret
xor
aam
int
cmp
sti
out
lock
ret
enter
out
cmp
mov
shr
in
xor
divl
int
xlat
stc
imul
lret
and
lock
testb
fdiv
cmc
clc
int
sar
icebp
loope
clc
movl
lret
repz
xor
mov
add
cmp
je
mov
xor
jmp
ror
ror
mov
cmp
popl
jle
ret
jle
ss
enter
aam
cmp
fdivp
icebp
rcr
int
mov
repz
jmp
ss
out
hlt
sarb
iret
ret
out
mov
std
std
out
mov
repnz
in
test
shll
hlt
ss
ss
aad
fstp
aam
sti
cmc
mov
xchg
fadds
filds
aaa
icebp
ljmp
incl
cmc
mov
shl
in
call
ret
aaa
xor
sti
xor
in
fiadds
fyl2xp1
cld
rolb
nop
sub
aam
fcmovnbe
shl
out
flds
fildl
fdivr
fdivr
jmp
loop
jmp
fadd
int
ror
fsubr
ds
mov
mov
loop
std
fists
aaa
xor
rol
fstp
lret
aam
addb
test
hlt
xchg
or
adcl
ds
fidivrl
cld
fimull
fdivr
in
mov
jmp
mov
jecxz
cmp
fcmovbe
leave
flds
in
loopne
test
stc
stc
loop
lret
aad
xor
out
std
int3
aam
xor
iret
fcom
ret
shl
test
ret
into
mov
ljmp
in
sarb
xlat
ret
cmp
ds
rol
fmull
and
repnz
enter
icebp
out
xor
sti
out
fisttps
decb
xchg
popl
out
xor
ror
jmp
hlt
in
leave
test
fcmovnb
fmul
in
repnz
mov
xor
ljmp
iret
fld
fcomip
ret
xlat
mov
loop
out
sarl
xor
fdiv
out
rcr
clc
repz
loop
xchg
orl
xlat
int
dec
fcmove
cmpb
jecxz
out
mov
orl
mov
in
icebp
mov
iret
lock
fmul
hlt
rcr
int3
cmp
int
loope
cld
xchg
loope
stc
fucomip
xchg
cld
in
out
loop
loop
cmp
jmp
xlat
into
ror
fxch
flds
jp
pop
call
lods
add
jle
ret
jle
fstpt
cmp
iret
test
out
in
ret
lds
int
test
int
in
call
cmp
out
cmp
cmp
mov
cld
lock
div
jmp
hlt
fprem
ror
jecxz
xlat
jecxz
mov
cmp
std
push
lret
aad
repnz
xor
sarl
ss
vpaddb
ljmp
mov
cld
ljmp
in
cs
fdivp
aam
cmc
cmp
ds
sbb
in
ljmp
xor
das
xor
fucomi
lret
lret
leave
jecxz
fidivrs
lock
fxch
xchg
popl
rcll
into
fcomp
call
neg
adc
test
test
leave
fadd
jmp
int3
loop
mov
into
enter
cmp
in
cmp
ret
rol
test
jmp
mov
test
enter
xchg
into
icebp
lret
lret
repz
jmp
ds
icebp
jecxz
jmp
jmp
lock
xor
cli
fnstcw
cmc
roll
test
fdivr
xchg
fiaddl
rol
shl
lret
das
leave
aas
aaa
int3
in
stc
fdiv
ret
mov
xchg
into
clc
std
ror
jmp
ror
in
cli
xlat
xor
cli
aaa
sti
sti
cmp
idiv
mul
ret
cmp
aad
sbb
loop
jecxz
out
ror
lock
aad
shl
lock
lret
test
rcl
mov
test
ljmp
cs
stc
leave
icebp
fst
out
loopne
jecxz
fprem1
cmp
faddl
int
cmc
and
shr
stc
sub
repnz
ret
rol
fdivrp
xlat
xchg
orb
leave
int3
repnz
mul
cmp
out
repz
hlt
out
fdiv
in
ljmp
ror
mov
cmp
cmp
jmp
iret
std
xor
addl
cld
lret
mov
lret
leave
int3
div
lret
out
fcomp
cmp
div
repz
incb
int3
out
xchg
test
xchg
rol
cli
fmul
std
repz
mov
jmp
lret
leave
int3
aam
aad
fnstcw
ficompl
lcall
sub
push
jle
ret
jle
std
loopne
cmc
icebp
test
ret
mov
jmp
cmp
out
out
shll
divl
xor
shr
les
cmc
call
in
xchg
aam
aad
aad
in
cmp
aaa
out
sar
loopne
neg
addb
mov
adc
repnz
stc
into
mov
jmp
cmp
rcl
or
mov
test
std
loop
xchg
in
repz
leave
xor
jmp
addl
test
roll
xor
repnz
inc
rcr
rol
cld
loop
loopne
nop
loop
in
lea
call
fdivr
repnz
rcl
aas
repnz
hlt
out
xabort
loop
rcll
repz
aad
into
cli
loopne
test
add
loop
in
mov
loop
out
iret
out
loop
xor
cld
fsubr
xor
lret
xlat
in
ret
aad
xlat
ror
lret
aad
mov
int3
in
xchg
jecxz
xor
in
cmp
cmc
das
aad
jmp
shr
icebp
sti
loope
faddp
and
lret
mov
test
mov
out
cmc
fdivr
repz
icebp
add
in
les
xchg
int
into
shr
and
das
shl
call
ljmp
imul
xchg
mov
mov
fsubp
in
nop
mov
cld
aad
jmp
loope
cmp
fsqrt
call
lea
push
jmp
shrb
into
leave
fnsave
out
std
fiadds
in
ret
jmp
fcmove
xchg
ljmp
cmp
fldln2
lret
fdecstp
lock
loopne
fiaddl
jmp
in
cld
lret
call
mul
xor
int3
cli
fnstsw
cli
test
shl
hlt
out
mov
lock
aad
ret
xor
int3
div
in
loope
adc
xlat
fstp
not
lret
icebp
cli
loope
xchg
xchg
mov
xor
ret
mul
test
fdivr
mov
sti
xlat
loopne
enter
jmp
out
sub
clc
fstp
lret
out
cmp
cmc
mov
jmp
rol
int3
fmul
aad
mov
pop
mov
jle
add
rolb
mov
aad
mov
mov
shlb
fdivr
fdiv
aaa
ss
cmp
cmp
in
std
lret
in
fmuls
std
call
in
cmp
neg
rcr
fmul
stc
ret
xlat
in
loopne
icebp
and
fdivp
test
in
cmp
lret
cmp
cmp
imul
in
fstp
nop
into
int
loop
mov
cs
out
not
lret
into
fidivrl
int3
fdivrp
icebp
out
lock
loop
nop
jecxz
clc
in
stc
leave
rol
int
lret
aad
mov
ret
out
in
mov
nop
fmull
fnstenv
clc
aad
out
fidivl
ds
and
mov
mov
sub
jmp
rcl
out
shl
hlt
aaa
int
rcr
fcmovu
xlat
std
lds
out
mov
cmp
call
dec
shrl
iret
xor
cmp
fstp
jmp
fcmovne
repz
lock
in
xchg
loope
sub
sarl
call
jmp
xor
xchg
decb
sub
into
lds
into
ror
cmp
fadds
sti
sbb
test
fsubrp
int3
in
ljmp
lret
fsubrp
rcr
cli
fcompp
or
cli
call
loop
faddl
iret
xlat
into
aad
cld
ds
into
xlat
cmp
ds
xchg
xlat
jecxz
xlat
cli
mov
std
lret
cld
iret
xor
icebp
repz
neg
shl
hlt
idiv
fst
jecxz
sar
clc
cli
lret
rorb
shrl
aam
hlt
cld
cld
out
cmp
aam
repnz
fcmovnbe
enter
xchg
sbb
das
enter
jmp
int
rcl
roll
out
ljmp
xor
ret
shl
fnstcw
ffreep
test
loope,pt
imul
aas
lret
in
out
mov
shlb
cmc
lock
fstpt
aam
ret
out
fsub
xchg
fcmovnb
ljmp
mov
mov
fcmovbe
cmp
aas
call
out
out
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
pop
jle
ret
jle
lret
out
out
loopne
adc
lret
xchg
lret
divl
xor
in
xlat
ss
cmp
cld
shl
call
mov
lret
jecxz
out
shr
call
out
rcl
in
in
xlat
mov
sub
ljmp
mov
xor
leave
fst
jmp
cmc
shl
aad
sti
shl
int
out
fmull
lds
leave
imul
rcl
cld
fmul
icebp
sar
rcr
sbb
repnz
icebp
leave
ljmp
xlat
out
stc
out
ss
out
iret
roll
std
shl
sub
iret
in
and
shlb
imul
into
fmul
shr
fldlg2
cmc
cli
shl
call
loopne
fstl
hlt
repnz
xlat
jmp
ror
shl
sarb
sub
xchg
stc
cmp
jmp
shr
fisttpl
sti
leave
in
neg
aaa
enter
aad
iret
fadd
jmp
xlat
lret
mov
and
imulb
lret
stc
into
aaa
fld1
out
cmp
lock
mov
lds
addb
rcr
fldlg2
cmp
xor
fcmovu
rcr
loop
repnz
leave
call
xchg
stc
enter
call
cmp
shl
out
out
cmp
clc
fsubrp
jmp
jmp
lds
in
xor
ror
idivb
xlat
sar
in
clc
cmp
ds
jmp
mov
jmp
xchg
jmp
cli
leave
hlt
lret
std
or
cli
loopne
stc
cmp
leave
in
int3
xchg
loop
mov
enter
in
cmp
clc
lock
fimull
fld
xchg
xchg
xor
xor
xor
fcmovnu
cmc
aam
idiv
mul
xchg
mov
in
xchg
int
out
fdivp
icebp
test
das
aaa
in
aam
in
repnz
fcom
out
cmp
not
rolb
sar
int3
loop
std
icebp
cs
aad
aaa
clc
out
xor
mul
clc
incb
in
or
fdiv
lret
out
loopne
jmp
in
ret
rcl
sti
leave
in
shl
iret
in
stc
flds
jge
jmp
into
aad
vpaddusw
aad
js
jg
inc
fcomp
adc
jle
ret
jle
ljmp
mov
ret
lds
in
out
xor
cmc
in
std
roll
incb
xchg
in
test
clc
into
out
ss
aaa
div
test
xlat
fcmovnu
addb
loopne
fmulp
out
test
div
out
in
sti
icebp
lret
sarl
out
stc
jmp
test
ljmp
leave
jmp
hlt
cmp
ret
and
aas
enter
fsqrt
fucomip
bnd
int3
in
aad
xor
xor
iret
sti
ds
fdivr
std
mov
test
jmp
xchg
cli
shr
aad
loope
xor
ret
jmp
cmpl
add
lret
cmp
int
out
ljmp
xlat
fldpi
inc
cld
jecxz
jecxz
rorl
fiadds
xor
ret
jmp
lret
lret
out
cld
stc
sub
test
cmc
in
hlt
fxam
out
out
enter
jmp
fsubp
les
jmp
shl
int3
xchg
enter
idivb
ss
lret
iret
fcmovu
in
sti
aad
xchg
mov
mov
enter
and
lret
leave
in
idiv
rcl
ret
xchg
loop
std
mov
jmp
call
in
in
fdivr
aas
dec
loope
sti
cmpl
shl
shl
fcomip
jmp
repnz
loop
aaa
fcompp
rcl
cmp
rol
mov
out
test
fld1
addl
in
in
aam
sar
idiv
test
aad
shl
stc
decb
out
aaa
into
xlat
lret
cmp
test
hlt
out
idiv
test
nop
out
out
mov
out
jmp
iret
iret
aas
lret
cld
fdiv
loope
aad
xlat
call
in
ljmp
lret
icebp
test
ds
stc
cld
test
mul
std
xchg
out
out
imul
lret
cmp
out
cmp
iret
fucomi
repz
int
cmp
fsubp
xchg
jecxz
leave
int3
xor
add
imul
sub
jmp
aad
int3
fmul
fnstsw
data16
fcomps
jle
add
fldl
repz
sub
rol
rcl
ss
testb
ljmp
fdiv
in
ljmp
xor
fcmovu
ss
fcmovnbe
jmp
in
loop
xlat
rcr
xchg
loope
rcll
call
aad
repnz
out
shl
cld
mov
loop
ljmp
fdecstp
out
aas
loope
cmp
test
ret
and
in
loopne
out
ret
enter
in
int
lret
test
loopne
lock
fst
test
repnz
sub
in
aad
sti
sar
lock
filds
loopne
out
faddl
mov
divb
jecxz
idiv
flds
repnz
mov
jecxz
loope
lret
mov
lock
rol
repz
cmp
repnz
cli
jecxz
cli
ret
addb
into
loopne
aad
call
jmp
in
sar
xchg
aad
xchg
int
out
fildl
divb
ret
cmp
int
loopne
xor
xchg
in
sub
clc
in
xchg
xor
ljmp
stc
ror
les
xchg
stc
xchg
push
xchg
leave
fdivrp
nop
sar
out
ljmp
cmp
loopne
out
fucomp
testl
ljmp
rcl
loop
fcomip
repnz
in
or
test
mov
ret
shl
cli
cmp
jmp
rcr
std
loope
fyl2xp1
sti
loopne
test
in
fdivp
xchg
hlt
int3
mov
repnz
mul
hlt
ljmp
fcmovbe
cmp
adc
sbb
jecxz
mov
ljmp
cmp
cli
roll
mov
test
int
lock
out
jmp
repz
stc
clc
rcr
mov
xchg
lock
call
ror
shl
leave
rcr
adc
out
loope
cmpb
mov
in
jmp
mov
mov
jmp
int
iret
rcl
fcmovne
fnstcw
pop
inc
fwait
pushf
popa
jle
ret
jle
in
xor
int
fcmovu
cmp
xor
fcmovnb
fsubp
sti
lea
into
hlt
hlt
shl
enter
lret
hlt
loope
int3
into
ret
in
cld
repnz
stc
int3
repz
ror
hlt
ret
xlat
leave
int
in
repnz
hlt
fdivrl
sbb
fcmovb
shl
cli
mov
int3
or
int
in
in
fucomi
std
hlt
cld
ds
int
xchg
test
mov
sti
xchg
xchg
aad
ror
in
fdivs
fmul
int
std
cld
testl
jecxz
xchg
repz
shl
int
cmp
cmp
xlat
cld
repnz
fildl
out
std
xchg
aam
fdivrp
les
int3
fcmovnu
in
sarb
div
loop
xor
rol
xchg
leave
out
mov
mov
hlt
xor
jmp
in
cmc
cmp
fstp
stc
test
rol
mov
jecxz
test
nop
roll
cmc
out
stc
in
cmp
aad
sti
test
testl
testb
cld
cmp
xor
iret
cmp
roll
or
iret
fstl
fsub
xor
bnd
test
fdivrl
clc
sar
decl
mov
cmc
in
out
into
call
sti
fdiv
cmp
faddl
jecxz
nop
incl
lock
frndint
in
xor
repz
cmc
aas
loop
cmp
lret
aam
in
sti
mov
call
ss
rcr
cmp
cld
out
fneni(8087
call
out
call
int
int3
lret
icebp
aad
out
lock
loopne
not
jmp
fiaddl
ret
in
sti
xchg
jmp
repz
jecxz
rcl
fmul
aad
int3
sti
cmc
ror
add
xchg
repnz
stc
mov
ljmp
icebp
rcr
sar
into
cmp
fdivrl
mov
div
mov
mov
icebp
fcomip
fsubr
lea
stc
xor
stc
cmp
sbb
ffree
xchg
call
sbb
in
xchg
out
shl
xchg
sub
xor
cmp
jmp
int
int3
int
cmc
inc
cwtl
dec
xor
jle
add
shll
lock
std
dec
rcr
cmp
cmc
out
stc
loop
shr
addl
mov
das
xor
jmp
fdivrp
fst
repz
cld
out
test
clc
call
fchs
out
stc
jecxz
in
in
aam
aad
jecxz
divl
repnz
stc
ret
test
mov
rcl
stc
mov
shll
lret
loop
test
sarl
xchg
or
xchg
ret
loope
out
lock
xor
into
test
cmp
ret
mov
leave
out
in
aam
xor
ret
jmp
icebp
sti
fnstcw
xlat
sti
clc
aad
aad
in
cld
loopne
idiv
sti
ljmp
ss
enter
std
aaa
cmp
icebp
fcomi
sti
loope
orl
test
hlt
mov
leave
fdivp
enter
shl
out
cld
test
cmp
fxch
orl
in
icebp
aaa
hlt
enter
fcmovne
into
icebp
out
cmc
out
xlat
stc
in
cmp
jmp
xchg
xor
cmc
cli
cmp
cld
in
jmp
fadd
mov
cld
jmp
ror
repz
out
loope
in
ror
sti
ss
std
neg
loopne
roll
call
std
std
cld
loop
xor
ret
in
iret
cmc
icebp
ss
cmp
repz
loopne
jecxz
jecxz
ret
test
jmp
mov
and
fcomp
in
cmp
lret
std
sbb
loopne
sar
cld
hlt
aad
out
out
mov
int
iret
aad
ss
xor
stc
lret
cmp
addl
xlat
lret
in
call
xchg
shl
out
cmp
icebp
lret
imul
loopne
cmp
aam
fcomp
neg
in
in
lret
jmp
out
test
jmp
int3
aad
fidivrs
fadds
xchg
repnz
test
icebp
enter
lret
cmp
jmp
aam
xchg
rcl
xlat
loop
addl
aam
aaa
das
mul
out
repnz
ss
fcmovnu
aad
hlt
lret
leave
int
repnz
fucomip
in
xor
je
mov
jmp
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
int3
ss
out
shr
test
rol
ret
into
mov
std
icebp
test
in
in
jmp
hlt
enter
xlat
lret
mul
xchg
sti
fsincos
in
fsubr
xchg
in
adc
out
xor
hlt
in
shr
shl
decb
dec
in
stc
filds
int
in
lret
cmp
std
aam
icebp
xchg
mov
orb
mov
out
repz
sub
lret
cli
into
fst
test
rolb
and
shr
adc
out
div
cli
sti
cmp
jecxz
hlt
xor
vshufps
clc
repnz
hlt
iret
int
cmp
cld
lock
out
fadd
div
fldl
fsubp
adcl
repnz
cmp
sarl
push
stc
into
sarl
xlat
test
in
out
jmp
ljmp
sub
cli
cmp
cmc
ss
cmp
call
mov
or
fsubrp
loope
clc
fprem
repz
loope
fcomip
sar
aas
sar
xchg
sti
in
std
iret
leave
mov
xchg
aad
cmp
xor
out
into
loopne
sbb
icebp
movb
in
ljmp
call
cmp
ds
shl
clc
rcr
loop
mov
fdivrp
lret
repz
call
sti
xor
cld
cmp
shl
out
fcmovbe
rolb
or
xor
test
aad
aam
jmp
fildl
addb
and
jmp
xchg
out
test
loope
out
cld
ss
into
fstpt
addb
ret
mov
sti
out
jecxz
fsub
sti
in
jmp
not
aam
xor
aad
jmp
loope
stc
cld
test
call
ljmp
rcr
leave
inc
aaa
cmc
cmp
int
shl
cmc
out
xlat
mov
clc
in
ljmp
xlat
vshufps
hlt
sbb
aad
out
icebp
out
cli
mov
xchg
lock
in
aad
xlat
xor
fcomp
aam
cmp
addb
jmp
mov
jmp
ret
int
fstl
mov
jle
call
add
in
lret
in
xlat
loop
xchg
loop
mov
and
ljmp
jecxz
iret
idiv
jmp
clc
sti
shl
stc
xlat
test
nop
in
and
int3
in
enter
xor
sarl
cmp
aas
in
cmp
shr
mov
fucomi
repnz
call
lret
out
cli
iret
cmp
cmp
rolb
in
leave
ljmp
hlt
stc
aad
xor
ljmp
shl
mov
call
loope
out
jmp
sar
cmp
out
fstpt
aas
addl
std
repnz
out
lret
cld
cli
sti
ds
idivb
out
mov
into
lret
decb
int
rol
icebp
hlt
ss
repz
test
out
in
loopne
std
in
jecxz
in
aad
cmp
aaa
out
int3
cmp
cmp
in
std
hlt
in
sbb
orb
sub
call
in
ss
xor
xor
int3
clc
cmp
loope
iret
jmp
int
mov
in
and
stc
clc
fdivr
cld
jmp
loopne
lock
clc
orl
loop
out
xchg
loop
enter
lock
in
cmc
fnstcw
aas
cmp
into
addl
and
int
out
jmp
aad
shl
cmp
aad
jmp
cmp
xlat
jmp
repz
xlat
sti
clc
jmp
xchg
icebp
jecxz
fnop
into
call
cmp
idiv
not
in
fpatan
fdivr
neg
jmp
aam
xor
cmp
rol
fidivs
aaa
aaa
xlat
in
inc
addb
clc
iret
test
das
aam
cmc
call
shl
aad
call
fnstsw
mov
mov
test
divb
in
in
hlt
xor
fld
icebp
fdivr
loopne
fcmovnu
addb
sti
lock
jmp
cmp
rolb
mov
addb
xchg
mov
sub
aaa
int
aam
fxtract
rcr
cmp
test
jmp
int3
ret
int
mov
pusha
das
sub
push
jle
add
repnz
loope
add
flds
int3
in
jmp
sarl
rcr
ljmp
ret
fadd
fsubrp
fadds
repnz
aad
ror
into
sub
jmp
roll
xlat
fcomip
loope
repz
in
mov
test
out
xor
shlb
out
xor
sar
cld
addl
call
mov
cs
cmp
clc
repnz
std
jmp
and
ret
hlt
in
fisttps
xchg
out
divl
enter
cmp
call
sarl
cmc
cld
fucom
test
jmp
xchg
jmp
not
in
out
stc
rcl
loopne
lock
loopne
stc
shl
xchg
lret
clc
fucomip
nop
into
xchg
in
cld
leave
cmp
fnstsw
out
fcmovnbe
fsubp
call
fmull
and
call
xlat
push
fcomp
fsubr
aam
leave
test
movb
xchg
lret
rcl
out
repz
cmp
ljmp
ror
std
movb
nop
loope
ffreep
loope
lret
xor
cmp
repz
jecxz
jecxz
mov
in
in
repz
in
loope
out
cmp
std
jmp
cmp
roll
addl
jmp
into
repnz
test
icebp
clc
idivl
cmc
cli
movl
xor
xor
xor
adc
xlat
xlat
cmp
fadd
std
out
icebp
in
and
ror
xlat
shll
stc
cmp
out
rcr
out
out
hlt
sti
out
shl
in
jecxz
vpaddusw
jecxz
out
jmp
sub
ss
aam
in
rcl
repz
fmuls
mov
xchg
shrb
cmc
sar
out
imul
leave
cmp
repz
testb
sti
and
into
jecxz
mov
loope
repnz
jmp
cmp
fsincos
fsubp
xchg
and
test
lret
xlat
in
loop
xchg
lret
xchg
xchg
and
xor
shlb
lret
int3
add
out
lahf
sbb
sub
call
in
jmp
aad
iret
aas
rol
aad
push
inc
push
aas
add
jle
add
div
aam
iret
loopne
in
iret
out
int3
fsubrs
test
roll
rcr
test
out
ljmp
icebp
cmc
int
vpaddb
cmp
aad
jecxz
repz
mov
loopne
sti
neg
in
repnz
xchg
shr
shl
fdivs
clc
call
cmp
cmp
cmp
cmp
mov
jmp
addl
shr
ljmp
in
ror
cmp
out
in
jecxz
fcoml
icebp
out
jmp
out
fcomp
into
loope
ret
test
frstpm(287
std
mov
stc
xor
sarl
repnz
ror
test
orl
mov
repnz
out
div
cmp
shl
aad
in
sbb
hlt
in
out
loope
jmp
cld
adcb
hlt
into
call
jecxz
test
cld
stc
aas
xlat
ljmp
loop
loope
int
ret
leave
rcl
cmp
jmp
loop
cld
shr
icebp
xlat
loop
call
in
lock
addb
in
out
aad
out
loope
neg
add
in
enter
std
in
sub
sub
fdiv
cli
fsubr
xlat
ds
addl
cld
mov
fsts
aam
aam
ljmp
sar
stc
icebp
jecxz
loop
shr
loopne
mul
rorb
xchg
xor
aam
ds
cmpb
std
test
cmc
mov
out
enter
fsubp
xor
jecxz
xor
cmp
int
shl
cmp
sar
call
mov
int3
in
aaa
out
cld
cmp
int3
cmpb
idiv
in
out
sti
fdivr
out
hlt
xchg
xor
int
fstpt
lock
fidivrl
sar
loopne
cld
in
test
test
fstp
ret
out
test
out
xor
call
cli
cmp
loope
cld
testb
mov
into
adc
jmp
out
fcomi
out
cmp
loopne
test
mov
cli
movb
or
enter
repz
jmp
cmpb
int
cld
cli
icebp
ljmp
out
xchg
lock
iret
divb
out
iret
int3
cmp
icebp
idiv
loopne
cmp
rol
stc
cli
ljmp
loop
loope
mov
xor
xor
in
fstpt
xor
stc
fdivr
int
rcl
leave
div
decl
int3
sub
jmp
aas
into
lret
leave
aam
dec
jo
mov
outsl
jle
test
jle
shr
ljmp
enter
leave
repnz
into
repz
fadds
fdivrl
mov
into
rol
int
div
shl
int
ljmp
int3
rcl
xchg
jecxz
int3
test
lock
fiadds
out
lock
cli
cmp
cmp
loop
fidivrl
test
out
orb
test
fxch
into
icebp
in
repz
stc
aaa
ds
sti
cmp
test
orb
addl
lock
loope
sti
cmp
shl
int3
lret
in
int3
loope
mov
cli
icebp
fucomp
fdivrs
sarb
into
ror
ret
cld
std
int3
int3
loopne
icebp
out
aad
ror
in
xor
cld
shl
ds
shl
repz
div
ljmp
shl
and
in
ret
sti
out
iret
idivl
dec
loopne
in
div
std
mov
out
lock
mov
enter
xlat
aam
fmulp
cmp
imul
xlat
shr
aad
cli
ret
ret
stc
addb
xor
jecxz
int
in
enter
cld
shl
test
cli
ret
fsub
mov
out
test
imul
repnz
fdivs
cmp
cmp
hlt
xor
loop
ret
incl
fcmovu
incb
ffreep
leave
leave
std
sti
cli
xor
cmp
fcompp
xchg
cli
jecxz
popl
in
cmp
out
cld
cmp
xor
cmp
dec
call
lret
repz
cli
jmp
push
xlat
ret
repnz
rol
mov
fstl
xor
loop
fmul
cmp
ror
cmpb
std
fiaddl
in
into
lock
into
into
cmp
int
iret
leave
stc
xor
inc
ljmp
nop
int
adcb
aaa
jmp
xor
neg
xchg
out
stc
test
fcomi
mov
loopne
fld
out
in
int
fcmove
fnstcw
ret
test
jmp
fcmovu
mov
lret
ret
cmp
loopne
sbb
out
and
rcl
loope
neg
in
and
shrl
enter
ffreep
clc
shl
out
fdivr
fxtract
cld
leave
in
jecxz
cmp
out
repz
das
fmul
aad
stc
cli
aam
fdivr
shl
stc
icebp
shl
fdivp
loope
leave
lret
cmp
nop
test
call
mov
push
dec
push
jmp
int3
ret
int3
int3
sahf
pushf
mov
les
jle
add
out
lret
rcr
into
std
icebp
rcr
fdivp
fiadds
sti
mov
rorl
in
test
cmp
hlt
fsubr
repz
mov
sbb
test
into
repz
out
xor
cmp
aam
clc
lock
sti
xlat
repz
hlt
jecxz
lret
loopne
call
xor
cmp
fsubr
out
rolb
xchg
clc
mov
fucomip
std
cmc
lock
jecxz
jmp
cli
jmp
lret
icebp
repnz
fcmovnu
cld
lret
mov
xchg
mov
call
xor
imul
cmp
cld
lret
loop
fdivr
xchg
ljmp
loope
loope
cmp
xor
in
ret
xchg
incl
cmp
rcl
shr
jmp
fucomi
shr
lret
cld
std
faddp
repz
loopne
int
int3
lret
jmp
das
cs
shrb
xor
cmp
aam
in
roll
fsubrp
in
orb
aam
rol
lock
clc
xor
lock
repz
ljmp
call
in
shl
fidivrl
in
shr
rolb
std
jecxz
stc
inc
in
decl
loopne
aad
in
fcmovnb
jmp
cmp
jecxz
leave
fdivrp
cmp
iret
xchg
ljmp
out
enter
cli
hlt
rol
stc
jecxz
fmul
jmp
std
in
rolb
loop
cmp
xlat
stc
ror
idivl
cld
iret
repz
incl
cmc
les
mov
hlt
ret
int3
repz
cmc
clc
out
loop
fdivrp
fiadds
jmp
aad
leave
shr
out
std
in
hlt
std
in
out
cmp
fmull
nop
in
adcl
aaa
fdivrl
call
sar
jecxz
mov
test
in
fmul
xchg
fisttpl
cmp
cmp
hlt
ds
cmp
cmp
sarb
in
in
out
out
mov
jmp
xlat
fdivrs
aad
cmpl
cmp
in
lock
xchg
icebp
jecxz
call
into
iret
xchg
fdiv
sti
xchg
xlat
cld
cli
in
out
call
mov
out
cli
ret
out
int
cmp
cld
repz
out
aam
jmp
movb
in
in
cmp
in
iret
and
clc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
cmp
je
jle
add
aad
test
loopne
cld
iret
in
or
out
call
jmp
fdiv
int
xor
cmp
jmp
mov
sti
loope
out
iret
mov
repnz
jmp
in
repnz
inc
in
call
mov
xor
out
xor
out
cmp
ret
fcmovnb
xlat
fsubp
in
in
loope
jecxz
ficoms
clc
lret
loopne
fistpll
out
in
repz
in
int
in
cli
loopne
cld
incb
fstp
loopne
lock
rcr
hlt
out
neg
mul
mul
in
out
nop
shl
call
in
cmp
ds
ror
fdiv
ret
ret
or
ret
mov
mov
xchg
mov
test
aas
repnz
cmc
int
fsub
enter
faddl
shl
decb
in
std
enter
lock
fdiv
enter
fdivr
rolb
out
stc
test
leave
fucomp
lret
sub
fst
xbegin
and
sar
aam
jecxz
fcmovne
out
out
leave
loope
repnz
shl
fcmovnu
aas
fistpll
sarb
cmp
repz
xchg
rorl
fucompp
int
fsubr
inc
repz
aam
fld
cmc
repnz
jmp
lret
repz
in
out
in
aaa
ret
aaa
xor
lret
lock
fmul
in
decl
orb
into
hlt
out
les
clc
iret
repnz
out
call
out
fcom
jecxz
mov
aad
xchg
out
loope
lock
into
cmc
fxch
ds
ljmp
jecxz
repz
cli
mov
xor
int3
in
stc
into
cmp
cmp
stc
xor
in
fnclex
aam
sti
jmp
xchg
iret
cmp
sti
lret
cli
aam
in
aam
into
xchg
fnclex
jmp
out
orl
fmul
repz
out
jmp
loope
fcmovnu
out
adc
in
aam
jmp
cmp
call
out
cld
xlat
call
in
loop
cmp
mov
ljmp
xchg
xchg
shll
xlat
leave
cli
cmp
ror
jecxz
fadds
fimull
lock
in
aad
jmp
xlat
aad
iret
cmp
cmc
and
jmp
clc
xor
mov
call
test
rcr
divb
loope
rcl
stc
iret
aad
in
std
mov
adc
jmp
int
iret
rcl
aad
inc
xor
mov
jle
test
jle
fcmove
xchg
aam
or
in
into
lret
div
shl
cmp
test
mov
test
aam
loope
xlat
out
aaa
out
fstp
iret
ror
faddp
repz
fsub
fcmovnb
xchg
lret
jecxz
out
xchg
rolb
out
cli
cmp
in
stc
sarb
sar
out
out
fsubr
lret
out
out
mov
call
cmc
xor
cmc
sar
in
aam
std
mov
sub
out
mov
xor
jmp
clc
cmc
sar
std
repz
stc
fcomp
test
mov
cld
clc
enter
mov
loope
in
out
hlt
in
cli
sar
cmp
ds
ffree
rol
leave
test
nop
incb
enter
clc
cmp
idiv
cmp
xchg
out
cmc
cmp
std
stc
out
lock
lock
out
xlat
repnz
call
fnstsw
loopne
sti
cld
not
mov
xchg
mov
shll
leave
sub
hlt
aam
aaa
repz
aas
out
ret
ljmp
sti
cli
out
sar
xchg
out
stc
mul
in
cli
cld
call
adc
out
ds
fcomi
xlat
fsub
in
in
mov
out
out
repnz
lret
cmp
imul
idiv
sti
jecxz
rorl
out
test
call
in
out
cmp
sarb
faddl
or
fucomi
fsin
out
fcomi
decl
sti
xor
rcr
cmc
cmp
xor
jecxz
lret
test
fucom
xchg
sub
aad
xor
ss
sub
xlat
call
loopne
fcmovnu
mov
mov
idivb
jecxz
aam
call
loope
rol
stc
in
call
enter
fsubp
cmp
lret
jmp
out
loop
loopne
clc
ds
repnz
std
fadds
lret
in
out
enter
not
in
divl
ds
aam
jecxz
clc
repnz
loopne
xchg
call
xor
leave
ds
clc
repnz
fcomp
loopne
out
fcomip
test
in
in
das
clc
lret
hlt
in
fmul
not
std
aad
xlat
aas
vshufps
fisttpl
lret
sub
xor
hlt
lock
fucomp
loope
aad
idiv
loop
repnz
mov
mov
int3
mov
loope
das
cmp
rcl
aad
icebp
in
stc
fmulp
aam
call
in
addl
xchg
jb
add
add
jmp
mov
fcmovnu
or
sub
sub
jle
test
jle
leave
out
int3
fucomp
aaa
stc
aas
cmc
sub
and
incl
out
call
fmul
cli
aaa
test
mov
test
ds
into
enter
sti
rorl
int3
lock
in
neg
cmp
test
fdiv
fdivr
incb
call
sbb
leave
in
shl
in
cmp
cmp
fidivrl
loope
in
out
jecxz
iret
icebp
mov
out
leave
rcr
out
leave
fadd
out
iret
aad
fdivr
clc
testb
lret
iret
mov
enter
stc
rol
stc
aad
in
cmc
incb
adcb
fcom
hlt
hlt
repz
cmp
clc
out
stc
std
mov
fadds
xchg
iret
in
out
xor
out
fcom
std
shr
lock
sbb
cli
inc
ljmp
xchg
cmp
jmp
stc
out
aad
jecxz
fnstsw
iret
fiaddl
test
lret
std
out
xor
xchg
clc
aaa
fsub
sub
in
hlt
not
repz
testl
into
shl
adcl
aam
int3
lret
cmp
shl
stc
in
loop
xlat
sti
xchg
std
call
cmc
aam
out
in
out
sarl
shl
jecxz
out
in
test
in
lret
iret
aam
repz
icebp
in
icebp
hlt
lock
std
shl
jmp
loop
vaddsubps
xchg
in
jmp
int3
iret
hlt
aaa
cmp
fchs
sbb
sbb
call
cmp
cmp
cmc
clc
idivl
aam
fsqrt
stc
imul
std
cli
rcr
testb
test
iret
jmp
icebp
sti
in
jecxz
vcvtdq2pd
test
mov
and
lret
xor
int3
out
fdivrs
aaa
fcomi
test
icebp
cmp
into
std
adcl
cli
fcomp
clc
fidivrs
icebp
fnstcw
ljmp
mov
ss
jmp
cmc
out
in
in
cld
loop
fst
rcl
out
jmp
fsubr
jecxz
test
lret
rcr
cmp
sar
cld
cmp
in
push
fcmovu
rcr
lret
fisttps
xchg
iret
lock
idivb
aaa
enter
cld
aam
clc
repnz
fisttpl
xor
xor
aaa
cld
repz
push
not
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
pushf
cmpsb
dec
insb
jl
jle
add
lock
std
repz
in
int
enter
xchg
mov
mov
shl
lock
jmp
std
neg
sar
enter
sti
loop
dec
out
jecxz
in
ljmp
repnz
aas
ret
loopne
out
jmp
dec
loop
loope
shl
fnstsw
out
int
cmp
sti
cmp
cli
loope
out
hlt
mov
rcl
out
cmp
int
fcomi
repnz
aam
enter
orl
call
shr
out
loopne
std
loopne
in
into
roll
in
aas
test
cli
popl
ffreep
repz
fdivrl
sti
enter
fninit
xchg
repnz
mov
iret
int
sti
fucomi
xchg
ss
aaa
shll
jmp
clc
aad
icebp
hlt
xchg
xlat
xchg
int3
fucom
int
mov
ret
repnz
fdivrl
sbb
shl
in
mov
lock
jmp
ror
hlt
into
sti
cli
cmp
std
loop
stc
iret
call
loopne
jmp
std
mov
repz
test
cmc
cmc
jmp
cli
in
clc
rolb
int
int3
ret
jecxz
test
xlat
xor
stc
ss
aad
cmc
fsub
out
jecxz
mov
fldl
rorl
rol
shl
out
cmp
int3
test
adc
loope
addb
aam
into
jmp
stc
repnz
sarl
lock
sub
in
mov
stc
fadd
loope
leave
cli
jecxz
repnz
lock
loope
jmp
fiaddl
repnz
cld
test
in
int3
shl
jmp
xchg
int3
ss
out
lret
out
aaa
ds
shl
loop
hlt
jmp
aas
int3
into
mov
loop
jmp
repz
fstpt
fadd
fabs
hlt
xchg
addl
sti
mov
leave
lock
sub
icebp
in
cmp
fcmovne
loope
hlt
test
sti
roll
jecxz
sbb
loopne
repz
in
ss
aam
cli
aas
rcl
shl
xchg
in
test
in
mov
mov
mov
aas
iret
out
in
lock
repz
int3
iret
cmp
test
cli
mov
int3
mov
lock
repz
hlt
call
jmp
clc
loopne
loope
ret
loop
lret
lret
mov
xchg
repz
int3
lret
ret
vpaddb
push
repz
ret
aad
xchg
inc
lock
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
lea
jg
jle
add
sti
leave
sar
rclb
leave
aam
fdivs
test
inc
clc
push
stc
int
out
cld
orl
mov
clc
cmp
aas
fidivrs
roll
in
roll
enter
cmp
dec
loopne
clc
cmc
loop
jecxz
sbb
hlt
in
sti
clc
test
int3
shl
loope
fucomi
hlt
sti
xlat
shr
cld
test
hlt
rol
xchg
idiv
mov
clc
incl
fyl2x
xor
idiv
leave
sarl
jecxz
rcr
rol
ljmp
rcr
xchg
idiv
idiv
in
fdivrs
dec
ds
test
enter
xchg
fisttpll
out
aas
std
xor
repnz
fmull
sub
mov
jmp
lret
loop
loopne
iret
neg
fcmovbe
or
test
mov
int3
ret
out
call
clc
cmp
cli
lock
in
mov
sbb
cmp
fcmovbe
int
hlt
in
repz
aad
les
xchg
lret
imul
in
out
mov
xor
jmp
incb
cmp
fimuls
shr
popl
in
fidivrl
int
cmp
jmp
in
mul
flds
out
out
shl
out
lret
lock
in
das
lret
fstpt
clc
imul
fcomi
lret
xchg
roll
out
ret
ror
cld
repz
cmp
fdivrp
out
stc
in
in
sbb
imul
out
xchg
in
repnz
into
xor
lock
aad
in
repz
fadd
in
call
repnz
in
divb
hlt
rcr
hlt
hlt
cmp
ss
fsubp
loop
cmp
out
jecxz
jecxz
out
loope
test
shlb
out
xlat
fidivrl
aam
ror
cmp
fiaddl
mov
repnz
in
loopne
xor
xor
ror
cmp
cmp
in
loope
ret
cld
rorb
ljmp
xchg
cs
into
fcmovne
int3
aam
out
les
xchg
mov
rorl
ljmp
enter
fidivrl
aam
stc
stc
hlt
rcr
mov
xchg
xchg
icebp
mov
mov
in
cmp
leave
int
test
out
iret
hlt
test
orl
and
shrb
jne
mov
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
push
pusha
lret
jg
test
jle
out
out
cli
aam
loopne
loope
shlb
hlt
enter
mov
jecxz
out
loope
fucom
int
bnd
iret
cs
jmp
xlat
not
fadds
cli
in
sub
shl
in
loope
cmp
lret
cmp
cmp
shl
repnz
in
loopne
mov
xlat
ljmp
hlt
cmp
repnz
aas
fdiv
fcmovbe
loop
lock
std
ret
leave
fst
leave
fcoms
aam
xor
ret
vpsubq
lret
ds
cmp
shl
iret
xchg
cmp
fcmove
lret
xchg
int3
out
out
test
in
out
leave
xor
cli
fcmovu
int
rol
jecxz
std
in
in
stc
in
fsubrp
jmp
ljmp
into
rcl
loope
rcl
add
xor
loope
sti
shl
fucomp
in
out
fsub
xor
out
lret
fadd
jmp
cli
shr
fucom
in
ret
jmp
shll
lret
icebp
clc
test
ret
hlt
aad
mov
test
in
xchg
in
shl
aad
iret
cli
aad
icebp
fdiv
rcr
loope
mov
mov
shr
repz
stc
cmp
jmp
mov
leave
leave
in
mov
in
jmp
xor
fcmovnb
in
sar
ret
iret
clc
stc
out
cli
lret
idiv
mov
in
loopne
shll
ds
lock
fdivr
shl
aad
lret
std
nop
lret
xchg
loope
icebp
jecxz
cmp
stc
ds
stc
fcmovb
cmc
sar
cld
jmp
in
lret
out
icebp
lock
xchg
loope
call
clc
sar
cli
testl
ret
clc
fsin
decb
ss
repz
icebp
xlat
aam
int3
in
test
cld
cmp
cmc
fsub
test
out
lock
fsubrp
xchg
mov
enter
in
cmc
aam
sub
in
sti
iret
ret
shl
fcmovnb
or
nop
nop
xchg
lret
sar
xor
int
aaa
test
in
repnz
ljmp
repz
xor
cmp
out
repnz
aad
cmp
jmp
fst
repz
clc
cli
mul
jecxz
repnz
stc
das
shl
shr
in
not
xor
jecxz
sbb
test
xchg
out
xor
ror
stc
shr
fiadds
ret
div
leave
int3
call
mov
xchg
fidivs
ret
in
ss
loopne
sub
inc
call
add
add
ret
add
int
xlat
movsl
out
mov
test
jle
repnz
repnz
cld
xor
fiaddl
shr
call
xor
cmp
rcr
cmc
fcmovbe
aad
xchg
std
in
out
mov
incb
hlt
iret
ror
out
ss
cmp
cli
aad
testb
stc
fxch
cld
loope
in
mov
xchg
mov
iret
out
xor
ss
in
lret
iret
xor
leave
sti
fisttpl
sar
into
fimuls
ret
leave
xor
fsubr
repz
xchg
xchg
int3
rcll
cmp
in
xlat
call
sbb
clc
sti
decb
std
cld
out
loop
lock
xor
jecxz
out
stc
fmulp
ret
jecxz
xlat
enter
mov
fstp
iret
out
ljmp
aad
iret
int3
repz
ret
ret
call
loope
out
call
xor
xor
lock
in
test
fiaddl
fsubr
dec
mov
shr
in
iret
stc
out
repnz
in
in
loop
loope,pt
ret
cmc
sbb
ljmp
enter
repz
cmp
ss
rol
icebp
ss
cmp
cli
xor
cli
loop
decl
ljmp
aaa
out
out
loopne
iret
jecxz
leave
frndint
cli
std
out
roll
ret
sub
cmp
cmp
div
out
out
call
cli
into
cld
fadd
mov
aad
shlb
clc
repz
lret
lock
cmp
aad
incl
in
fcomp
lock
rcr
xor
xor
xor
xlat
into
std
out
out
fdiv
cmp
orl
jmp
out
fsubp
lock
loop
xor
int3
cmp
cli
leave
ljmp
std
cld
dec
sti
mov
fsubp
into
lret
hlt
divb
into
lret
call
fcomp
icebp
out
cmp
testl
in
lret
cmp
in
out
int3
lock
cmp
fcomp
cld
aad
test
fdiv
clc
jmp
mov
in
loope
xchg
test
call
fmul
int
shr
out
loop
out
lret
fsubrp
shl
shr
les
cmp
neg
lret
fdivr
cmp
cmc
xchg
repnz
fisttps
fcmovnb
dec
loopne
ljmp
rcr
repz
test
shr
loopne
jmp
int3
jecxz
orb
leave
hlt
sar
xlat
lret
leave
lret
fdiv
xor
stc
out
test
or
add
cmp
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
ljmp
into
repz
int3
cmc
fninit
call
loopne
int
in
ds
shl
fiaddl
xchg
sti
fisttpll
rcl
fdivrl
cmp
sti
cld
fsub
lds
div
fsub
pop
jmp
loope
into
out
enter
cmp
cmp
icebp
sar
out
clc
rcl
sti
xlat
ret
out
jmp
roll
ljmp
lret
aad
stc
icebp
xlat
xor
loopne
mov
mov
rcr
sub
stc
xor
ss
repz
aad
lock
cmc
xchg
mov
ss
cmp
repz
test
cmp
cli
in
cmp
in
call
in
out
into
stc
ret
jmp
cli
sar
fucomi
loop
addb
mov
mov
int
repz
cli
cmp
lret
shr
out
fucomi
repnz
in
out
faddl
xor
call
repz
clc
aas
cli
fadd
xchg
mov
sar
in
xchg
in
lds
enter
ror
in
cmp
sar
test
out
int
loopne
fmulp
hlt
cmc
lret
xor
fmul
cmp
fcmovu
sti
aam
call
loop
mov
sti
iret
icebp
jecxz
xchg
mov
fnstenv
xor
cmp
xlat
cmp
std
test
fadd
test
int3
out
into
loopne
cld
int
shl
out
jmp
cmp
cld
into
xchg
cli
out
inc
orb
rcl
clc
fucomi
cmp
aaa
ljmp
in
cmp
jecxz
fmull
clc
xor
rcr
xor
rcr
cmp
fildl
std
xlat
in
jmp
test
xchg
jmp
aad
xlat
fcom
aam
sti
shl
sub
clc
jmp
lock
aam
clc
icebp
rcr
icebp
loope
test
mov
in
loop
icebp
clc
ror
aam
fdivrl
cld
cmp
clc
add
call
fildl
cmp
ss
fsincos
ret
fmul
aad
sti
rcr
neg
cld
sbb
cld
loopne
out
lock
mov
lret
ror
xor
bnd
aas
shl
sti
fiadds
loopne
into
in
rorl
xlat
fstpt
aam
fcmovb
fdivrl
fyl2x
cmc
fcomp
mov
in
sti
fisttps
testb
xorb
mov
add
inc
or
or
pushf
ja
add
ret
add
int3
ror
fcomp
aam
aas
idivb
lods
or
test
jle
out
loop
in
cmp
xor
aas
loopne
aas
aas
enter
out
jmp
dec
xor
out
sar
icebp
shlb
aam
shl
std
std
faddp
clc
out
out
test
out
dec
out
jecxz
stc
xor
cmp
das
in
icebp
xor
aam
repnz
stc
ret
cli
in
xchg
call
xor
mul
cmp
ds
cmp
cmc
inc
hlt
sbb
fadds
fcomip
roll
aaa
enter
cmp
cli
cmp
fiadds
or
fmulp
xchg
in
call
in
ds
xlat
shl
cli
incl
jmp
nop
in
mov
jecxz
iret
iret
enter
jmp
cli
ret
sbb
aad
stc
addl
sar
shll
cmc
lret
sar
rol
in
out
jecxz
cld
enter
fneni(8087
xchg
in
xchg
icebp
out
stc
xor
call
sarl
sbb
movb
test
sub
out
out
cmp
div
in
neg
fadd
rcr
cmp
rorb
in
xor
shr
sti
in
int
aad
cmp
iret
rcr
jmp
test
call
mov
jecxz
int3
push
cmp
rolb
sti
sar
into
mov
xchg
fsubrs
imul
in
lret
lret
out
std
cmp
clc
jecxz
movl
in
xchg
xor
call
fnstcw
in
roll
fucomip
mov
clc
lret
lret
int3
xor
ret
fadd
cmp
cld
test
testl
lret
test
test
out
jmp
incb
mov
clc
filds
nop
sub
xor
xor
loop
in
hlt
imul
aad
call
lret
iret
out
repnz
cmp
std
cmp
fdivr
sarl
int
std
rorl
clc
mov
int
xchg
fcmovne
lret
in
fnsave
cmp
cmp
add
mov
rcl
rolb
repz
lret
fdivs
repnz
rcr
and
and
jmp
les
rcl
rcr
ss
rol
test
loope
cli
cli
div
loop
leave
mov
out
into
int3
cmp
hlt
mov
sbbl
add
push
call
incl
jmp
ret
rcl
aam
ret
sarl
lcall
test
jle
std
loop
in
roll
in
cmp
in
ljmp
xor
cli
out
jmp
fld
out
in
jecxz
leave
cmp
icebp
lea
enter
cmp
out
enter
rol
lock
cld
mov
into
lret
mov
sub
aad
loopne
std
in
xlat
test
mov
mov
xchg
sub
out
fmul
fcmovb
shl
int
out
cld
cmc
ret
fsubr
sbb
icebp
mov
jecxz
xchg
shrl
cmp
lret
call
loop
iret
cli
cmp
ljmp
and
mov
xlat
leave
xor
into
call
cmp
sbb
iret
addb
cli
mov
out
mov
in
int
das
out
in
rcl
aam
fsubr
ret
call
inc
inc
clc
out
loope
or
adc
neg
enter
xor
test
std
loopne
out
loopne
xabort
in
sti
xchg
xchg
jecxz
in
cmp
cmc
rcr
iret
cmp
fldl2e
xchg
aas
into
orl
xor
lret
cmp
idiv
cld
cmp
sub
stc
loop
loop
orb
divl
shl
cmp
cmp
sti
std
cmp
add
test
xchg
out
int
fcmovnbe
std
out
out
xor
hlt
iret
stc
rcl
in
in
loopne
call
lret
lret
loop
lret
cmc
xor
jecxz
cmp
lret
aaa
enter
sbb
xchg
out
xlat
loopne
shr
lret
jmp
jmp
stc
cmp
repnz
out
test
addb
test
hlt
xor
ss
aaa
fmulp
repz
xor
aam
loope
xchg
out
jmp
ljmp
fcmove
aad
idiv
cli
call
jecxz
xchg
mov
sub
jmp
enter
xor
xlat
rcr
out
loopne
lret
xlat
test
sbb
leave
repz
mov
lret
jmp
call
aad
cmp
out
mov
fstp
lret
in
mov
jmp
cmp
addb
repz
std
orb
mov
in
xor
out
enter
lret
in
rcr
jecxz
lds
out
mov
test
ret
cmp
jmp
call
test
loope
mov
push
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
mov
scas
xchg
movq
add
ret
imul
enter
lret
out
loope
jmp
jmp
shl
std
ds
rcl
fsubr
movb
xchg
in
fcmovne
icebp
shl
rcr
sub
roll
jecxz
in
or
xrelease
xor
jmp
shl
clc
out
rol
sti
ffree
lea
hlt
aad
out
das
repnz
cld
sti
aad
shl
ss
shl
clc
ret
call
loop
mov
xchg
icebp
int3
repz
fcomi
shr
aam
sti
int
out
add
xchg
xchg
cmpl
xchg
std
xchg
mov
loop
in
stc
cmp
out
cmp
out
fistpll
ror
and
xchg
fimuls
iret
aam
hlt
fsin
lret
ljmp
roll
fiadds
out
repz
in
cmp
fdivrp
jecxz
jecxz
enter
in
fisttpll
xor
cmp
sar
cmp
out
xlat
fcmovbe
aad
clc
enter
ret
mul
jmp
cli
out
xchg
lret
xchg
loopne
ljmp
fnstcw
iret
rcl
xchg
in
mov
mov
cli
repnz
loope
xor
repnz
loopne
xor
ret
cmp
sbb
xchg
out
jmp
into
mov
icebp
xor
in
std
cli
out
aad
xlat
add
ret
iret
hlt
mov
in
fstl
divl
xor
xor
in
lret
out
fildl
out
fisttps
cld
mul
in
loopne
xchg
subb
xor
cmp
repnz
out
sarl
lds
loopne
xchg
mov
iret
out
ljmp
lds
int3
mov
out
fsubr
in
rolb
shll
cmp
aas
clc
fcmovu
cmp
aad
in
call
jmp
in
stc
sarl
lock
jmp
neg
cli
hlt
fnstcw
sar
fcmovnb
call
out
jmp
leave
lock
out
stc
in
sarl
repnz
cmp
xlat
loop
into
std
fildl
mul
lret
out
aad
ljmp
cld
jecxz
cmp
ffreep
test
xchg
or
ret
xchg
into
lock
loop
in
call
icebp
sarb
in
fdivr
jecxz
fucomi
movl
in
cmc
call
in
sti
lret
shl
loopne
iret
fiadds
mov
mov
add
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
aam
jb
adc
test
jle
in
clc
xor
xor
jmp
aam
ret
ror
stc
loope
aam
jmp
enter
loopne
in
jmp
aam
cmp
ljmp
int3
shr
ret
xlat
stc
in
stc
mov
out
sar
fisttpll
fincstp
call
xor
clc
idiv
dec
test
fincstp
lret
ljmp
fxch
repz
loope
int
int
fisttpl
sti
mul
lret
fstp
and
repz
out
leave
into
in
shr
in
fdiv
xor
in
clc
mov
in
lret
out
test
xchg
iret
xor
in
cli
lret
jmp
sar
loope
stc
test
aad
jmp
loop
out
int
xchg
jecxz
ror
int3
cmp
aad
loopne
aam
mul
repnz
stc
and
int
call
xchg
jmp
xor
cmp
out
hlt
jmp
cld
repz
aad
aad
mov
xchg
std
xchg
jecxz
jecxz
clc
ret
sar
lock
cmp
std
ffreep
cli
and
ret
jmp
leave
int
int3
lret
int
in
lock
into
enter
shl
shl
repnz
decb
leave
cmp
ljmp
lock
fnstsw
aam
out
sar
ret
iret
aas
rorb
lea
in
xlat
stc
jmp
ds
cmc
into
shl
not
stc
lock
mov
movl
out
cmp
loopne
test
ror
mov
out
mov
int3
mov
out
aam
xor
cmc
clc
notrack
cmp
aam
jmp
in
enter
leave
rorb
xor
cli
fidivrl
shl
loopne
rol
loop
lock
test
mov
in
out
icebp
ljmp
cmp
rcr
icebp
fiaddl
cli
in
out
xchg
int3
jmp
mov
in
jmp
hlt
div
cmp
stc
cmc
fsubr
leave
cmc
xlat
orb
adc
xor
leave
xor
div
cmc
cld
loopne
ffree
fsub
std
in
int3
nop
enter
loop
repz
aad
xor
call
cld
fcom
idiv
cmc
rol
out
filds
mov
lea
rcr
leave
cmp
iret
dec
rcl
add
repnz
in
fsub
mov
std
out
out
xor
ljmp
sti
and
add
lret
repz
out
icebp
ljmp
inc
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
mov
or
adc
jle
add
fcom
repz
cmc
test
aad
shr
in
enter
lret
leave
lret
xor
cmp
in
cmp
fnstenv
fst
inc
cmpb
idiv
stc
dec
rorb
xor
in
iret
out
hlt
fdivr
rcl
roll
cld
int
icebp
out
sti
popl
jecxz
fcmove
out
enter
add
out
xor
rolb
fsubr
jecxz
fbstp
lret
out
in
fcmovbe
sar
cmp
ret
std
icebp
incl
les
std
divb
repnz
sar
cmp
cmc
fcmovu
ret
out
loopne
std
int3
mov
jmp
jecxz
lret
ss
iret
std
jmp
leave
ror
repz
shl
ret
lds
int
icebp
das
into
ss
xlat
imul
repz
fildl
add
mov
int3
adcb
lock
shl
int
cmp
jecxz
in
clc
out
fcmove
in
leave
xchg
loopne
aaa
int
aad
out
clc
fsubr
xor
loop
adc
fldl
leave
incl
xchg
jecxz
aam
repz
idivb
neg
cmc
xor
repz
out
repnz
test
test
fadds
ljmp
fldl2e
out
cmp
loop
test
xlat
cli
ljmp
jecxz
ror
lret
loopne
stc
int
fyl2xp1
clc
icebp
cli
leave
xchg
fmuls
loop
in
rol
repz
ret
jmp
icebp
rolb
repnz
ljmp
test
test
into
xchg
into
leave
repnz
aam
ror
repz
fidivrl
cmp
ret
fcmovu
in
int
in
mov
nop
repz
xor
rcl
shr
cmc
cmp
out
fcmove
lret
int3
out
xchg
nop
call
int
jecxz
out
aaa
xor
icebp
fistpll
and
and
ljmp
mov
ror
test
in
cli
fnstsw
jecxz
and
in
jecxz
xchg
ljmp
cmp
stc
jmp
cmp
sti
ret
out
out
jecxz
out
lret
decb
clc
cld
out
cmp
fmulp
ss
aam
clc
cli
fmul
test
clc
repnz
in
test
hlt
clc
shl
repnz
out
fcomip
mov
cmp
in
lret
xchg
xchg
aam
xor
xor
fucomi
aad
sarl
ret
push
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
js
push
nop
pop
jg
test
jle
idiv
fiaddl
and
test
xchg
out
lret
in
xlat
aad
call
rolb
jmp
call
xchg
mov
repnz
hlt
call
repnz
jecxz
fucom
out
cmc
icebp
fadds
mov
xlat
in
out
fdivrs
fldl
cmc
xchg
xchg
ret
out
in
in
into
decl
in
int3
cld
out
ror
int
loop
xchg
xchg
lock
shr
icebp
cmp
cmp
testl
out
sti
cld
out
jecxz
ror
into
jecxz
aam
cmp
xlat
cmp
fucom
sar
fsin
out
in
cld
xchg
loop
loopne
ss
ss
aaa
fcomip
lret
in
incb
loopne
or
out
mov
cmc
aad
imul
xor
rcr
ret
ljmp
out
std
mov
std
into
out
fdivr
cmp
mul
shl
loop
cli
addl
out
loope
in
ror
xor
cli
ffree
lret
or
cmp
add
jmp
out
iret
call
les
ss
sti
cs
cli
fnstenv
cmp
out
xabort
idiv
out
std
fcmovnb
ror
int
jmp
iret
int3
enter
shl
fadds
ljmp
mov
fimuls
loope
aaa
hlt
fnsave
rcl
fsubp
aas
roll
leave
mov
loop
call
shl
shrl
call
das
xlat
ljmp
test
xlat
and
mov
mov
jmp
in
cmp
loopne
fucomip
xlat
jecxz
jecxz
call
addl
adcb
shl
sti
aas
aad
fidivrl
int3
ret
test
enter
fisttps
loopne
aaa
fidivrl
aaa
cmp
out
aaa
cmp
jecxz
in
out
xlat
cmp
hlt
fninit
fmul
jecxz
in
out
mov
ret
leave
jmp
cmp
out
ljmp
vcmpss
faddp
lret
repz
mov
jmp
neg
out
clc
repz
lock
cld
stc
loop
ljmp
aad
out
rcl
fcmove
xor
clc
in
int
ret
stc
fld
loopne
xlat
mov
idiv
sbb
fsubrp
out
cmp
in
fsubrp
cmp
test
test
cmp
fadd
xchg
std
or
stc
mov
push
pushl
call
jmp
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
inc
mov
jle
add
out
rorl
les
int
jmp
in
idiv
out
fldl
f2xm1
jmp
shl
xor
repnz
ffree
rcr
rcr
fldl
ds
cld
jecxz
lret
mov
in
cld
fdivs
out
imul
test
test
clc
fcomp
cli
ret
cli
in
enter
enter
xor
in
aad
in
cmp
iret
fistpll
idiv
cmc
fisttpll
loope
dec
repnz
jmp
iret
xor
xor
out
out
rol
cli
rcl
out
ljmp
icebp
repnz
fldcw
sarb
fadds
aas
ljmp
mov
repz
sub
aaa
cmp
std
iret
out
jmp
or
rcr
xchg
mov
addb
enter
aad
test
loope
out
mov
int
enter
std
xchg
nop
xchg
ljmp
stc
sarl
fstpt
les
cld
leave
sti
out
leave
out
mov
test
int
ljmp
std
and
repnz
ret
rcl
mov
xor
shr
int
leave
std
repz
rcl
leave
leave
stc
mov
fadd
jmp
out
aad
xlat
sarb
in
cli
cmp
cmp
cmc
std
test
hlt
test
call
out
cld
leave
mov
cmc
imul
xor
in
cmp
int3
repz
shl
icebp
fildl
in
fiadds
into
ret
lret
aam
ds
fucomip
cmp
call
jecxz
jmp
std
test
les
int3
lret
stc
lock
repnz
lret
call
test
test
shl
fnclex
test
mov
xchg
mov
lret
fcomp
lret
lret
lret
icebp
fsqrt
iret
fstp
fildl
test
jmp
aad
cmp
cmp
fcmove
out
loop
int
loop
test
incl
fsub
xchg
and
stc
int
fsub
fld
lock
loop
in
mov
ret
fadds
repnz
jecxz
aam
in
cmp
jmp
leave
repz
incb
clc
in
addb
repz
fcomip
xor
lret
test
xlat
clc
test
xchg
enter
mov
cld
mov
xchg
repz
out
hlt
iret
addb
shl
test
jmp
mov
xchg
lret
sti
out
into
cmp
jne
jmp
enter
rcr
adc
lock
adc
jg
test
jle
fmul
aaa
in
loop
shl
jecxz
test
addl
sbb
std
out
mov
jmp
xor
aad
shl
fcmovb
div
lock
fcmovb
addb
int3
filds
jecxz
test
cld
icebp
stc
in
clc
shl
jecxz
loope
testl
lret
in
out
sti
jmp
fucomip
sti
icebp
aad
hlt
sti
mov
cld
in
sarb
ljmp
int
ds
ffree
loop
fld1
repnz
jmp
incl
not
fcmovnbe
lock
xor
out
mul
icebp
int
xchg
mov
out
cld
aad
loopne
dec
int
test
fcmove
xor
int
cmp
cmc
cmp
ss
icebp
sti
cli
repz
fadds
call
repnz
cmp
aad
mul
std
lock
cmp
aam
xlat
clc
out
cld
in
xchg
xchg
cmp
std
cmp
std
loope
cld
div
in
hlt
fsubr
xchg
out
repz
not
xor
loope
loope
aad
dec
jmp
testl
lret
out
fnstenv
aam
repz
enter
add
xlat
iret
cmp
int3
aad
vpsrlq
xbegin
out
clc
fdiv
rol
fsubp
in
cld
test
lock
test
out
iret
aad
sti
jmp
fcom
into
hlt
ds
mov
stc
aad
mov
add
div
in
icebp
lret
sti
aam
imul
faddl
leave
out
cld
mov
cmp
std
call
int3
xor
out
fsub
xchg
jecxz
call
xrelease
xor
stc
xor
aad
loopne
repz
ret
in
filds
sub
enter
sti
out
cmp
cmpl
cmp
fmul
into
rolb
ret
lret
ror
cmp
shl
cmp
cmc
clc
in
aad
in
loop
jmp
int
shl
ret
divl
push
cmp
stc
loop
fistpll
enter
fcos
in
fcmovu
sti
loope
xor
cmp
call
int3
fidivrl
fcmovnb
out
not
mov
test
mov
hlt
push
shl
aam
shl
shll
in
clc
loopne
lret
ret
not
cli
fdiv
clc
mov
enter
ljmp
cmc
aaa
xlat
iret
dec
std
fxch
into
mov
xor
add
jmp
rcl
rcl
aad
mov
fimull
cmpsb
aaa
mov
jg
test
jle
repz
aad
aas
xchg
loope
int3
jecxz
lret
not
clc
cmp
shl
cmp
imul
jmp
into
faddl
out
test
icebp
cmp
cmp
cmp
ds
fprem
mov
xchg
xlat
in
jmp
shr
fldz
lock
in
leave
ret
fcmovu
nop
int
repz
orl
fcmovbe
in
sarl
adc
rol
std
jmp
aam
int3
in
in
in
xchg
ret
shrl
out
cmp
fidivrs
cmp
ret
out
cmp
int3
jecxz
in
fucomip
call
neg
into
out
call
pushl
shl
leave
add
aad
fxch
lock
lock
ret
in
xor
cmp
cmp
cmc
loopne
aad
adc
cli
fmul
bnd
shl
repz
sti
cmp
fnstsw
cmp
xchg
mov
out
enter
sub
loope
aaa
fdivl
leave
cld
idivl
fcmovnbe
clc
xlat
in
aad
cmp
xchg
xchg
shr
xor
cmp
ss
std
rcr
std
clc
clc
mov
vpaddb
xchg
lret
int
loop
out
out
out
cmp
loop
cli
xor
in
in
stc
mov
stc
ss
fxch
fdivl
shr
sbb
test
out
int
nop
and
shr
cmc
ljmp
cmp
loope
loopne
xchg
loop
cld
loope
xchg
into
xchg
out
repz
lret
vcvttpd2dq
cmp
ret
movl
test
out
ljmp
cmp
icebp
into
call
cmp
xchg
cmp
xlat
cli
bnd
into
lret
cmp
cli
shr
iret
lock
in
stc
sar
std
rcr
cmc
fisttpl
shl
push
out
xor
icebp
rcl
hlt
sti
aad
aas
out
in
aam
lret
jmp
nop
out
xchg
xchg
aas
shl
repnz
in
xorb
fmul
sti
into
fdiv
ret
out
std
fdivrp
stc
loop
call
xor
int
xor
fdivl
jmp
fcmovnbe
testb
loop
jmp
cli
xchg
icebp
ret
jmp
ljmp
ret
jmp
fdiv
sti
test
in
adcb
cmp
shl
loopne
cmp
into
cld
cli
and
idiv
ret
out
mov
jmp
rcl
lret
rcr
ficoms
cmp
jg
test
jle
ljmp
das
xor
int3
cld
sarb
loopne
aaa
rol
rcr
test
loopne
mov
adcl
clc
xor
lock
in
rol
rol
ret
movl
lea
aad
leave
icebp
ds
shl
rol
lret
movb
aam
ljmp
lock
rcl
int
repnz
ret
sti
xchg
out
int
xchg
jmp
aaa
cli
in
clc
lret
divb
rcr
loop
rol
add
enter
out
into
lock
iret
lea
jmp
repz
out
fcmovu
xlat
cmc
repz
mov
lret
enter
iret
rol
xor
out
cmp
ffree
cmp
fdiv
fcomi
sti
cli
in
ljmp
int3
loop
in
xor
lds
xor
xor
ffreep
rcl
shl
fadds
std
mov
jmp
aas
clc
xor
xor
clc
not
sarl
sarb
lret
mov
xchg
and
sub
sar
cmc
out
ds
fstpt
into
inc
add
cmc
in
mov
loope
lock
aaa
fscale
jmp
xor
fcmovnbe
into
test
cld
lret
std
jmp
lock
xchg
stc
leave
enter
imul
loope
shl
in
lds
testb
icebp
out
icebp
xchg
xchg
mov
in
fdivs
out
xchg
fsubp
fisttpl
fdivr
in
loopne
stc
lret
leave
cmp
faddp
add
cmc
imul
in
out
iret
xchg
ljmp
in
out
jmp
loope
ds
stc
div
ret
xor
out
sar
aam
lock
in
in
cmp
dec
fdiv
aas
addb
fiaddl
ror
call
xor
cmp
repz
sti
int3
ror
loopne
clc
iret
aas
stc
ftst
xlat
not
mov
lret
int
fucomip
leave
aaa
leave
stc
fcmovbe
sarl
jmp
aas
cld
ds
in
jecxz
mov
aas
out
in
lret
ror
xor
cmp
aad
cmp
ss
xchg
ds
fsubr
int3
nop
jmp
fmul
fldln2
aad
icebp
rcl
cmp
fld
cli
rcr
mov
fadds
test
in
out
aaa
shl
shl
aas
ret
sti
mov
loop
xlat
mov
clc
int3
jecxz
repz
repnz
cli
enter
inc
add
in
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
bound
jg
test
jle
fstpt
cmp
ffree
in
ds
shl
loop
cmp
enter
addb
in
in
jmp
sarl
loop
test
call
out
test
dec
iret
lret
repz
out
int3
xor
jecxz
rcl
test
xlat
sti
out
mov
int
out
loope
rcl
ret
enter
cmc
icebp
loopne
repnz
cld
fmul
xchg
call
in
lret
cmc
int
in
xor
in
ds
xchg
aad
mov
test
fucompp
rcl
mul
int
sti
stc
cs
rcr
cli
loope
cmp
fucomi
call
lret
lret
mov
out
cs
imull
imul
fcmovnu
in
shl
aas
hlt
cmp
enter
flds
iret
xchg
sar
cmp
cmpl
std
cld
shl
ljmp
loopne
test
idiv
enter
std
ds
fmul
cmc
in
cli
stc
stc
stc
xchg
repz
aaa
in
sar
cmp
cmp
repz
fstpt
mov
ret
les
faddl
jecxz
out
out
jmp
shlb
sti
repz
jmp
cmp
mov
icebp
shl
into
cli
std
loopne
loopne,pt
cld
ret
ret
enter
out
faddl
mov
cmc
into
jmp
cmp
iret
repz
icebp
jecxz
icebp
out
and
into
out
int3
call
cs
out
call
ds
not
fcmovnb
sti
mov
in
in
out
ret
xchg
adc
subl
ss
enter
filds
out
call
mov
cli
lret
hlt
xchg
aaa
call
aam
in
cmp
cmp
add
cmc
loop
rcr
mov
out
lock
mov
out
stc
repnz
jecxz
inc
inc
in
call
ljmp
int3
in
in
cld
cli
cmp
cmp
rcr
jecxz
jmp
fisttpl
mov
into
not
enter
cmp
xlat
fdivp
div
sar
cmp
add
jmp
out
sub
in
xchg
hlt
call
call
fdivr
repz
cmp
in
std
call
xchg
shl
aam
lret
xor
aaa
call
shr
lock
fptan
loope
call
leave
aam
out
out
repz
ret
icebp
jmp
fdivrp
int3
out
pop
jmp
into
iret
xlat
xlat
into
xlat
fwait
in
mov
daa
jg
test
jle
ds
hlt
idiv
enter
loopne
jmp
fsubrp
call
call
cmp
loop
lock
jmp
mov
out
decb
fld
xor
cmp
in
cli
cmp
cmp
aas
sarl
std
rolb
iret
fcmove
in
call
jmp
xor
fcmovb
ror
ljmp
lock
jecxz
leave
fsubr
test
ror
in
out
hlt
out
aam
fld
not
in
orb
jmp
test
fcom
jecxz
xor
int3
jmp
ss
xlat
xrelease
orb
aam
cld
xor
out
iret
shr
test
roll
addb
xor
sub
sti
cld
enter
out
hlt
into
ret
fdiv
fdivp
ljmp
call
jmp
aas
cmp
ds
stc
inc
in
out
jmp
in
leave
adcl
int
fxch
cmp
cmpl
loopne
aad
out
out
ljmp
out
sub
enter
aaa
cmc
repz
test
fcomi
and
or
shl
and
ret
sti
in
cmp
cmc
div
fcmovnb
jmp
into
fildl
nop
xor
into
jmp
cmc
out
ds
sbb
fcmovnb
sbb
in
enter
out
incb
aaa
lret
in
out
jmp
cmp
rcr
jecxz
hlt
repz
fucom
cld
orl
ljmp
rcl
into
sarl
ss
fmuls
xchg
int3
mov
loop
xchg
test
enter
loope
loope
rcl
out
xchg
int3
loopne
xchg
leave
leave
into
ss
cmp
rolb
movl
loop
rcl
cmc
cmc
sub
ret
out
ffree
fiadds
loopne
incb
aaa
ret
into
icebp
cmp
cmp
cmp
hlt
shl
loopne
jmp
out
jecxz
loopne
std
cmc
iret
rcl
enter
cmp
ffree
fdiv
inc
fiaddl
in
int
shr
iret
pop
rcr
call
xlat
cmp
roll
test
fcmove
clc
mov
orl
cld
lret
iret
aam
test
int
cmp
sti
imull
enter
mov
mov
xor
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
sar
pop
jp
sub
test
jle
xlat
filds
out
icebp
ss
jmp
neg
cld
lock
ret
ret
fsubr
leave
xchg
in
call
sarl
out
cmp
in
cli
neg
aam
loop
mov
clc
int3
repnz
test
mov
ss
out
jmp
int
repnz
rcl
call
loope
mov
test
in
aam
ljmp
aam
clc
cmp
in
xlat
fiadds
enter
fists
stc
enter
ljmp
cld
clc
in
out
fnstsw
jmp
test
xchg
repnz
jecxz
int
cmp
repz
clc
out
cmp
out
out
test
call
call
int
repnz
in
not
in
fsqrt
loopne
dec
loop
ret
flds
mov
nop
in
ljmp
aaa
leave
sti
cmc
sarl
iret
fiaddl
cmp
loopne
mov
fists
leave
repnz
cld
leave
fdivrp
stc
loop
cmp
cmp
loop
in
xchg
loopne
fcomi
xchg
cmc
divb
repnz
xor
not
cmp
aas
ds
aam
enter
cld
int3
xor
sar
repz
in
clc
jecxz
std
sar
stc
ror
lret
loop
test
mov
in
cmp
fdivp
sti
sarl
sarl
xlat
ret
cld
lds
fsubrp
shl
call
enter
sar
cld
cmp
ret
sbb
mov
icebp
fcomip
int3
test
out
xor
cld
out
int3
xlat
fsqrt
aas
addb
loopne
icebp
xchg
xchg
shl
repz
jmp
ljmp
sarb
sar
cmp
std
addb
ljmp
cmc
in
into
repz
test
cmp
in
mov
into
into
lret
sti
std
iret
cmp
filds
ret
ret
loope
loop
mov
icebp
jmp
out
clc
out
int3
cmp
lock
fnstenv
ffreep
cmc
repnz
in
loop
shl
in
in
mov
stc
fsub
test
int
lds
faddp
in
lret
jecxz
xchg
cmc
in
int3
leave
cmc
lret
lret
repnz
repz
sar
ljmp
orb
out
cli
repz
jmp
adc
cmp
fisttps
mov
orl
add
jne
mov
pop
jmp
ror
ret
int
movsb
inc
push
xor
sub
jle
add
out
int3
ss
cmp
shl
fidivrs
cmp
into
int
repnz
cld
repz
in
jecxz
out
fdivl
cmp
repz
loope
fisttpl
in
mov
in
jmp
cmp
out
sti
lret
sti
aam
sbb
fsubp
loop
mov
test
fimuls
xor
lret
lret
fdivrp
iret
adc
aam
ljmp
jecxz
adcb
repnz
clc
into
hlt
xlat
lret
call
fdivrp
loop
jecxz
mov
loopne
leave
xchg
rol
xor
leave
rcr
jmp
out
faddl
loopne
mov
mov
loop
fld
xlat
cld
fdivr
into
shl
in
sbb
iret
flds
fmull
mov
in
int
iret
int3
cmp
aas
leave
xor
repz
jmp
lea
int
aaa
cmp
roll
loop
fadd
jmp
xchg
filds
aam
fcmovbe
cmp
ror
out
ret
filds
fcomp
leave
int3
fisttpll
in
int3
stc
out
into
cs
jmp
ret
cmpl
cli
fucom
rcr
lret
mov
call
leave
lret
imul
loop
testb
aam
cli
int
jmp
lret
xor
repnz
aad
out
in
loopne
rolb
repnz
test
fucomi
stc
cli
in
nop
in
mov
int
out
sti
out
out
cmp
aam
call
fstp
fiaddl
hlt
in
ss
in
fdivs
div
lock
fcmovu
sar
fcmovb
out
les
les
cmp
int3
lret
not
fidivl
fdivr
cmp
into
adc
out
stc
lret
lret
fldl
std
icebp
repz
in
std
out
not
test
hlt
hlt
loop
test
sbb
mul
clc
in
rcr
das
fucomip
fsubrp
std
test
cli
out
enter
shr
popl
cli
not
enter
cmc
cmp
addb
lret
ret
fsubrp
mov
adcl
rcr
repnz
hlt
loope
mul
sar
cmp
fucomi
mov
in
xchg
or
loop
ret
sub
cmp
int3
cmp
icebp
fsub
lret
lock
shl
xchg
jmp
in
out
aad
div
aam
aad
ljmp
add
int3
rcl
ret
fldl
jo
mov
jg
test
jle
xlat
in
into
roll
stc
int3
fildl
aad
lret
call
loopne
div
std
xlat
out
sbb
in
ffreep
adcl
sti
out
fucomip
sarb
testl
mov
in
xchg
rol
aad
rcr
fincstp
out
cmp
fucomip
lds
call
in
cmc
shll
in
not
cli
aam
cmp
leave
icebp
sti
aad
out
incb
dec
nop
in
test
rcl
in
out
cmc
enter
repz
fucomi
repz
cld
fiadds
mov
mov
xchg
jecxz
fxch
fcmovnu
call
frstpm(287
mul
ret
fdiv
orl
les
xor
fcmovnb
fcompp
out
hlt
cmp
ret
repz
mov
fildl
jecxz
xlat
cmc
enter
fdivrp
repz
cmp
loop
loope
xchg
xchg
xchg
xor
fidivrl
cmc
enter
fcom
loop
loop
hlt
xchg
jmp
test
jmp
mov
into
xor
xor
hlt
out
jmp
icebp
aas
int3
std
cmp
aas
cli
not
hlt
jmp
out
orl
loop
hlt
xor
enter
cld
cmp
in
repnz
rcr
out
leave
out
cld
mov
enter
out
fdivl
jmp
shl
in
cmp
sti
std
fcmove
test
mov
mov
adc
int
rcr
in
aam
sarb
stc
div
fcmovnb
cmc
and
mov
leave
icebp
iret
sar
cmc
xchg
xor
ljmp
aas
aaa
cli
int
loop
hlt
shl
jmp
mov
out
into
in
in
in
shl
fst
fcmovu
loop
enter
test
in
fcomp
mov
mov
or
imul
iret
lret
repz
lock
imul
cmp
loop
mov
in
mov
out
shl
cmp
in
adc
or
sti
idiv
xchg
aad
test
icebp
sti
lock
shl
in
jmp
cmp
enter
fsubrp
std
add
mov
xchg
in
enter
in
ss
leave
idivl
rol
faddl
xchg
loopne
call
into
loopne
test
ds
in
in
jmp
flds
vmaskmovdqu
out
rol
leave
fdivr
jecxz
aad
jmp
std
pop
add
jmp
fadd
aam
fst
fcoms
sbb
jg
adc
jle
add
sub
mov
shl
cld
loop
rol
stc
cmp
cmp
rcl
cmc
aam
rcr
loopne
loope
lret
jmp
mov
hlt
mov
int3
lret
out
xor
out
sarl
in
xor
fcomip
iret
int3
out
loope
rol
ljmp
lock
loop
xchg
mov
jmp
mov
clc
out
out
jecxz
cli
hlt
cmp
cmp
ret
test
xor
out
shl
jmp
cmp
cmp
ret
ret
shl
mov
mul
stc
cli
in
popl
loopne
cmc
xor
ss
rcl
lock
cmp
mov
in
xchg
sub
loop
icebp
cli
xor
into
fdivp
enter
cld
aad
shl
out
mov
stc
sti
out
fsubp
loopne
jmp
stc
out
fnop
jmp
lret
sti
sar
loope
clc
idivb
incl
fsub
call
xor
iret
lret
addb
jmp
mov
cli
cli
decb
enter
enter
leave
iret
int
ss
mov
jmp
mov
mov
xor
cmp
fistpll
cmpl
fistpll
testl
xchg
aad
aad
shl
fcmovb
iret
fldl2t
imul
jmp
loop
mul
mov
clc
cld
call
rol
cld
xor
cmp
xlat
sar
sar
in
lret
mov
shl
orb
cmp
enter
in
test
cmc
clc
mov
mov
lret
mov
test
xor
lret
stc
std
xlat
aam
adc
cli
adc
stc
leave
lret
out
ljmp
xor
aaa
cmc
fdivr
shl
cmp
aam
std
aad
xlat
cli
jmp
in
aam
repnz
call
repz
fprem1
cmp
iret
ret
xlat
in
int
out
lock
xchg
ljmp
cli
stc
xlat
lret
addl
out
mov
hlt
out
xor
leave
leave
cmp
shl
test
clc
aas
std
repz
lret
xor
ror
in
cmc
mul
int
xor
sbb
fldl
ret
call
mov
fsub
or
cmp
hlt
leave
stc
fdivl
fcomp
ret
xchg
hlt
cld
mov
lret
in
lock
lcall
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
pop
js
pop
xor
jle
add
in
icebp
test
xor
rcl
rcl
call
out
fiaddl
repz
aaa
repz
xor
fdivrs
sti
stc
fucomip
call
ret
in
xchg
xchg
adc
loop
ljmp
iret
shr
cmp
xlat
hlt
out
in
stc
jecxz
test
ret
xor
fcmovbe
cmp
out
ret
loope
mov
mov
repz
shl
fsincos
xor
cmpl
stc
in
std
aad
stc
mov
in
decl
cmp
jmp
rol
sbb
fildl
mov
add
shlb
in
in
xor
fcmovnbe
shl
ds
fmulp
shl
jmp
lock
mov
out
ss
ret
cmc
ljmp
out
lds
fldl
fsubr
ret
addl
clc
jecxz
shl
loope
rolb
xchg
clc
push
clc
or
lea
ljmp
out
repz
xlat
std
jecxz
mov
fldl2t
cli
jecxz
xchg
xchg
das
fdivs
cmp
aaa
stc
ss
cmp
stc
idiv
sar
loop
in
fistl
in
in
repnz
aam
ss
aas
loop
iret
sti
enter
sbb
jecxz
hlt
repnz
xor
cmp
cld
aaa
fdivrp
xchg
xlat
in
loopne
dec
jmp
notb
fcmove
xlat
cmp
xor
int3
test
fadds
sti
fcmovnb
stc
stc
jmp
and
cmc
xor
lret
fdivr
lret
cld
repnz
sar
repz
clc
orb
icebp
jmp
in
repnz
idiv
icebp
out
fmulp
idiv
iret
cmp
xlat
xlat
jmp
mov
fucomi
in
fldl
fadd
xor
ds
jmp
in
std
in
fld1
int3
mov
stc
shr
out
hlt
ljmp
shl
cmp
int
in
out
stc
mov
fmuls
fninit
out
repz
xor
cmp
lock
in
mov
enter
in
push
or
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
neg
daa
jp
aaa
jg
fiaddl
jle
rolb
in
icebp
icebp
cmp
leave
loopne
aam
test
rcr
mov
sti
out
in
lret
enter
int3
cmc
cmp
loopne
cmp
fnstsw
rcl
out
out
out
lock
cld
mov
xor
std
hlt
std
hlt
xor
cmc
xor
fsubr
jmp
xlat
ljmp
in
xchg
out
test
lret
not
fadd
icebp
loope
test
mov
std
sbb
fiadds
enter
neg
cmp
lret
cmp
rol
aad
sub
rorb
in
fdivs
ljmp
cmc
rol
sti
in
fcmovbe
aad
mov
into
mov
in
in
into
jmp
rcr
leave
jmp
cmc
cmp
in
test
call
mov
std
loope
test
mov
shl
out
shr
cmc
ds
repnz
cmp
cmp
addl
iret
std
shl
cmc
sarl
in
xor
fcmove
out
ds
flds
out
fisttps
jmp
hlt
shr
ss
out
xor
fcmovnbe
out
adc
jmp
lret
mov
loop
divl
shr
ror
xor
ret
flds
add
loope
fcomp
int
jecxz
icebp
icebp
fnstenv
shl
stc
stc
cmp
fstpt
mul
jecxz
aam
jecxz
fxch
in
lock
int
out
ljmp
sarl
clc
xorb
aas
fucom
cmp
lret
std
fcmovnu
test
lret
xchg
lret
lock
cli
cmp
cli
aad
cmp
cmp
fcmovnu
iret
call
out
xchg
xor
call
cmp
sar
filds
cld
mov
lret
or
icebp
shl
xor
fidivl
in
out
xor
cmp
test
mov
testb
call
loope
out
fsub
leave
cli
jmp
lret
in
repnz
cmc
ret
ljmp
lock
shlb
int3
fsubr
xorb
cmp
test
jecxz
fiadds
neg
sti
shr
xchg
loopne
shll
clc
ret
stc
clc
cmp
stc
sub
idivl
fcomip
ljmp
and
loopne
test
inc
add
add
cli
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
jns
stc
xchg
cmp
fiaddl
jle
xchg
xchg
loopne
cli
call
fcmovnbe
iret
in
test
out
in
loope
iret
fstl
div
leave
repnz
jmp
cmp
out
icebp
inc
ret
sti
testb
repnz
jmp
xor
lret
aam
div
xlat
aam
in
hlt
xchg
mov
fildl
decb
loop
cli
repnz
aam
loop
xor
ret
stc
test
loopne
xchg
repz
cmc
fcomip
shl
iret
cld
testl
loop
out
test
hlt
loop
aas
xor
rol
xor
fucomip
cld
loop
fneni(8087
aas
hlt
clc
mov
loopne
into
xchg
xchg
fcomp
fdivrl
cmc
fcomip
cmp
clc
fbstp
rol
call
cld
in
sti
cmc
call
int
in
in
divl
xlat
stc
aam
xor
cmpl
sub
testb
mov
into
cs
leave
cmp
out
adc
test
aas
aam
imul
mov
and
out
aam
in
sti
shl
ss
rol
enter
xchg
out
fisttpl
test
rcl
xor
shl
lret
mul
cmp
std
test
int3
mov
loop
fisttpll
hlt
jmp
repz
in
aam
imul
cld
test
cli
sar
cmp
les
out
nop
in
vprotb
cli
call
cmp
shl
cmp
lret
mov
fimull
into
xchg
enter
sti
idiv
cmp
xor
test
stc
jecxz
rolb
ljmp
jmp
xor
xlat
jmp
int3
loope
test
dec
aas
loopne
incb
das
rcl
in
cmp
ljmp
xchg
fiaddl
out
std
in
lret
mov
loopne
rcl
leave
call
int
imul
repz
div
sar
in
ljmp
iret
int3
cs
call
repz
in
mul
cmp
std
fucomi
out
fadd
clc
not
mov
int3
jmp
ljmp
sti
cmp
cmp
aas
mov
or
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
divb
cmp
fiaddl
jle
jmp
jmp
nop
rclb
xor
sti
fdivs
sbb
shl
repnz
in
in
jmp
xchg
xchg
jecxz
out
jmp
fcmovnb
fcomp
fadds
loope
sti
sti
std
into
flds
ficoms
sti
shr
std
ljmp
in
hlt
cli
mov
xor
ror
shr
out
fscale
in
repz
xor
cmp
xor
loopne
fisttpl
icebp
shr
icebp
lret
aad
stc
cmp
loopne
sbb
cmp
cmpb
in
out
in
hlt
icebp
shl
int3
leave
cmp
fdivp
aam
loopne
fimull
leave
in
lea
ljmp
cli
jmp
sar
aad
fcmovnb
xlat
loopne
in
in
in
mov
mov
fdivl
xlat
aam
aam
jecxz
ds
mov
mov
lret
loope
int
iret
sarb
fidivl
xor
fcmovnu
ret
shl
shr
xor
or
int3
xchg
call
cld
xlat
shr
into
call
rolb
leave
call
fiadds
hlt
aad
xor
cld
cmp
or
aam
hlt
rcl
fsubr
imul
fadds
xor
iret
xor
in
hlt
cmp
addb
loope
lret
test
mov
in
test
xor
ror
rcl
ds
cld
loopne
rolb
sub
fmul
enter
xchg
iret
loope
out
clc
aam
cmp
cmp
test
rcr
test
int
xchg
in
leave
int
hlt
int
shl
rol
xor
std
aas
fsubrp
in
repnz
in
icebp
and
stc
add
xchg
repz
xlat
xor
out
int
cld
loope
fadd
orb
mov
int
xchg
jecxz
idivl
stc
iret
div
cmp
cli
clc
sar
in
adc
mov
icebp
out
xchg
hlt
shr
in
cmp
ljmp
lock
loope
sar
cli
call
lret
call
lock
in
loope
inc
cld
rolb
cmp
sub
jmp
ror
rcr
ror
js
cmp
push
ljmp
add
cli
jecxz
ret
leave
sub
cld
call
loope
in
in
in
cmp
repnz
out
xor
test
fimuls
test
ror
ljmp
fdivrp
cmc
cli
test
out
out
in
mov
loope
loope
iret
in
cli
out
aaa
in
in
aad
aad
fsub
sub
enter
in
in
mov
fcmovnbe
into
xchg
out
xlat
lret
repz
cmp
aas
addb
mov
fld1
mov
mov
lock
shr
cmp
ss
leave
ret
not
fiadds
addl
div
out
out
fcomi
int
ljmp
aam
imul
ffreep
jmp
int3
std
lock
sar
aad
jmp
cmp
sub
out
out
std
hlt
fcmovnbe
hlt
xchg
in
loope
neg
xchg
or
int
xor
cmp
hlt
aam
cmp
xchg
repz
fisttpll
rol
cli
call
iret
rolb
ret
xlat
lds
or
in
loopne
xor
loope
jmp
ss
cli
fidivrl
cli
test
loop
test
dec
mov
jecxz
xchg
out
jmp
icebp
iret
int3
enter
or
std
fst
cmp
mov
mov
lret
repnz
test
out
xor
clc
fcmovu
test
in
fcmovu
add
repz
mov
int
lock
repz
int
xor
std
test
fadd
fmuls
in
nop
mov
in
in
int
xor
sar
cmp
fdivr
jecxz
out
std
lret
xchg
mov
aam
aaa
cmc
int
lock
int3
in
flds
std
int3
ret
rcl
shll
vucomisd
cmp
out
lret
aad
faddl
test
in
out
iret
mov
mov
enter
cmp
add
addb
jmp
int
xchg
rcr
hlt
cmc
in
in
lock
fcompp
fstp
loope
sti
fdivrs
int3
in
int3
mov
fucomp
iret
das
lret
aaa
call
cmp
out
movl
or
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
sub
jg
fiaddl
jle
add
cli
fidivrs
fld
and
test
int
ljmp
hlt
cmp
int
out
aam
repnz
loope
in
fcomi
in
mov
sti
in
repz
das
lret
out
cmp
clc
push
out
shl
test
rcr
xchg
leave
xchg
mov
shl
out
rclb
clc
cld
repz
cmp
cli
fisttpll
in
lret
loope
jmp
lret
jmp
cmp
loope
lock
cld
jmp
aad
into
iret
lea
repnz
enter
out
in
fnstsw
cmp
loop
in
in
aam
jmp
enter
lret
xor
xor
fdiv
shr
fdiv
lret
test
out
shl
jmp
dec
out
jmp
out
out
aam
into
out
aad
call
fucomi
out
sarl
aas
mov
call
in
xchg
in
fsub
enter
in
in
xlat
idivl
iret
in
repz
hlt
fsin
addl
in
xchg
loopne
xchg
test
out
cmp
cmpb
loope
hlt
loopne
out
cld
jecxz
out
fdiv
icebp
test
in
int3
lret
div
hlt
xor
aas
cmc
loope
idiv
cmc
mov
lret
sub
xor
int
cli
ss
lret
cli
sbb
aas
div
cli
inc
lret
fldl
lret
icebp
fcmovne
cmp
cmp
icebp
cli
and
call
in
xchg
adc
mov
loop
xor
ss
ss
aas
ror
hlt
fldl
add
dec
in
repz
loope
fsub
in
cmp
in
out
cld
ret
inc
enter
out
lret
xor
in
xor
icebp
lret
repz
fincstp
sar
cmp
xor
nop
cld
out
icebp
nop
divl
xor
into
cmp
in
ds
stc
cli
div
fadd
hlt
lret
ret
clc
leave
in
mov
aad
ss
sar
std
test
aas
repnz
aas
cmp
aam
fsub
mov
sti
leave
in
rorb
lret
aam
aaa
rcr
int
stc
cmp
out
fsubr
fisttps
loope
shl
aam
aam
fstp
cmp
rol
add
push
sbb
add
cli
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
dec
push
ret
jg
fiaddl
jle
cli
cli
aas
fdiv
add
repz
int
jecxz
mov
mov
in
ror
ss
cmp
jecxz
mov
out
loopne
in
stc
into
cli
call
xor
in
cld
fcmovnu
sti
leave
xlat
sbb
mov
call
fldl
into
ror
cmp
clc
jecxz
repz
jmp
std
fxch
fcmovne
hlt
xchg
xchg
fcomip
ret
cmp
cmp
rcr
hlt
std
fdivr
icebp
enter
loope
rcr
iret
nop
int3
icebp
xor
xor
in
out
out
enter
stc
stc
xchg
movb
lock
cld
xchg
int3
xchg
xor
out
into
div
call
cmp
neg
cmc
loope
fstp
repnz
xchg
out
jmp
into
aad
cld
lock
clc
repnz
shl
out
ret
jmp
adcb
jmp
jmp
xor
loope
cmp
test
enter
shr
aad
int3
aaa
call
fcmove
ret
out
fiadds
clc
mov
dec
mov
icebp
repz
jmp
lock
aad
xor
loopne,pt
fninit
aad
fsub
mov
loop
fstp
lret
enter
mov
in
in
cmp
aam
cmc
cmp
test
rcl
xchg
and
fmul
loope
addb
into
xor
jmp
imul
lret
loopne
clc
fsubp
loop
xchg
in
aam
in
lret
fcmovnbe
lock
int
cmc
lret
std
sarl
sbb
mov
stc
xchg
jecxz
out
fidivs
into
in
into
lret
int
rcl
cmp
div
ds
sbb
xchg
mov
xchg
jmp
sub
out
ds
shl
fdivrp
fmulp
call
lret
test
rcr
fld
out
aaa
enter
cmc
repnz
clc
repz
cld
xchg
mov
jmp
repnz
cmp
cld
cmc
call
incl
out
nop
out
das
rcl
shl
out
in
fnstcw
std
ljmp
clc
rolb
call
loopne
leave
xor
cmc
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
mov
lds
fiaddl
jle
fyl2xp1
in
xor
fistpll
cmp
shl
loopne
jmp
jmp
in
jmp
int3
loop
int3
stc
cli
loope
aad
sarl
std
xchg
cmc
cli
fstp
decb
xchg
in
leave
hlt
fnstenv
cmp
sar
cmp
fadd
in
les
hlt
repz
cli
int
clc
idivl
cmp
fsubr
ret
and
loop
jmp
ljmp
mov
rol
xor
std
enter
bnd
out
neg
ffreep
call
lret
mov
in
lea
lret
out
int
in
std
std
loope
ffreep
stc
mov
in
incb
shl
icebp
cmp
ds
int
in
out
loope
leave
clc
idiv
and
iret
lret
adcl
out
int3
cmp
ds
test
call
fsubr
jmp
clc
int
ljmp
cmp
cmc
ffree
aam
fsub
lret
fchs
loope
in
lret
jmp
lock
out
fldl
jecxz
mul
fcomp
hlt
decb
xchg
xchg
xchg
ror
into
in
iret
call
cmc
fadds
aas
enter
orl
out
int3
shl
ret
into
aam
xor
jmp
out
out
cmc
jmp
loopne
mov
icebp
cld
ljmp
cmp
out
clc
rcl
ret
sti
rolb
lret
lret
out
xchg
icebp
xchg
into
in
in
fcmovu
cmp
enter
sti
and
xchg
stc
ror
lret
xchg
repnz
sti
call
loopne
ds
out
in
in
mov
mov
sti
addb
cmp
aad
call
out
out
out
ret
clc
cmp
call
in
int3
filds
rcr
xor
xor
int3
cmp
into
rol
rolb
fcompp
lret
test
test
xor
cmp
in
fmulp
test
sarl
into
ljmp
in
lock
ret
out
adc
mov
mov
sti
ljmp
xor
add
add
sbb
add
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
ljmp
jle
add
das
out
int3
xor
cmp
cmp
xchg
addl
ret
lret
shl
xchg
out
cmp
sti
fcomp
xor
ljmp
loope
roll
int
xchg
icebp
aam
ss
sti
shr
ret
mov
jecxz
mov
ljmp
into
in
shr
clc
xor
repnz
cld
loopne
cmp
shl
cmc
ds
sar
test
ds
out
into
sar
ljmp
xlat
cs
addb
lds
int
iret
repz
xchg
out
in
out
out
mov
lock
int3
int
jecxz
stc
mov
fucomip
cmc
repnz
out
in
lock
ds
ds
roll
int3
out
mov
sar
int
aam
ds
not
jecxz
test
loop
std
aam
out
xlat
out
jmp
repz
mov
sub
in
lret
lret
in
shl
cmp
cmp
ret
in
out
mov
xchg
loope
loop
shl
lock
out
xor
lret
test
rcl
fsubr
mov
fcomp
xchg
addb
clc
aad
fdivr
imul
loope
ds
cmp
cmp
leave
frstpm(287
mov
out
adcb
lret
out
xor
shr
fldl
xlat
cld
jmp
cli
lret
vpminub
mov
stc
cmp
aaa
xlat
stc
icebp
aas
aaa
icebp
xlat
sar
addl
int
xchg
xchg
repnz
aaa
hlt
cld
lock
cld
std
cli
jecxz
faddl
leave
jecxz
out
xchg
out
aad
jmp
int
xor
aad
call
lret
and
loop
mov
cmc
int
shl
in
repnz
sub
jmp
in
mov
fisttpl
in
aam
in
sar
rcl
iret
cmp
addb
fcomp
mov
fiaddl
cmc
in
shrl
int3
aaa
jecxz
fdivl
out
cmp
loopne
out
out
icebp
fadds
xchg
out
iret
ljmp
out
imul
jmp
out
int
cmp
faddp
loope
sbb
ljmp
cld
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
outsb
enter
lret
fiaddl
jle
lock
sub
int
fnsave
aam
loopne
cld
aad
rcl
leave
stc
mov
movl
xor
std
aad
lret
cli
fsubp
shl
fchs
roll
fcmovnu
in
and
loop
leave
ret
xor
ljmp
decl
fucom
xchg
out
jmp
in
test
sar
repz
iret
ret
fcomp
aam
xlat
out
faddl
enter
iret
int3
ror
int
jmp
rcl
aas
mov
aas
jmp
fxch
popl
sub
hlt
cmp
out
cmc
in
rol
sar
jecxz
jmp
cmc
neg
movb
mov
aad
fisubrl
iret
shll
cmp
sarl
fadd
cli
sti
cld
fiadds
ljmp
ljmp
in
cli
xor
leave
jmp
xchg
cmp
shl
ljmp
in
aaa
cmp
lret
fcomi
in
icebp
mov
std
mov
lock
in
cmp
ljmp
addb
orl
in
loope
int
cli
fucomi
cli
jmp
jmp
faddp
cli
cli
call
repz
xchg
in
cmc
neg
shrb
idiv
hlt
cmp
inc
cmc
loop
out
in
sbb
call
aaa
xor
jmp
cmp
mul
sti
sbb
fsqrt
test
sub
in
nop
in
out
mov
cmp
cli
loopne
push
aam
fdivr
xchg
ror
out
stc
sar
cli
xchg
lret
hlt
int3
enter
fcmovne
cmp
fiaddl
aad
repnz
lret
fiadds
in
clc
fcom
clc
div
fmulp
lret
xor
add
test
xor
call
repnz
in
xor
enter
xor
fiaddl
xchg
std
std
jmp
cld
ljmp
add
cmp
fcmovu
xchg
hlt
jecxz
iret
cmp
xor
std
int
int3
out
stc
int
aad
repz
call
sub
cmp
movl
jmp
rcl
ret
fucomp
insb
fstps
lock
inc
cmpsl
test
jle
add
vpaddd
shrb
lock
aad
iret
ret
test
mov
test
mov
mov
iret
das
aam
int3
cmc
stc
shr
cli
ret
lock
std
lret
aad
into
lret
fmul
mov
fsubr
cmp
iret
cmp
cmp
clc
shl
std
test
addl
xor
call
mov
icebp
sbb
fimull
mov
mov
xchg
in
hlt
cld
aad
aam
out
sar
ds
cmp
aam
xchg
out
int
bnd
cmp
adc
aaa
ret
cmc
fnstsw
in
lret
and
lock
clc
jmp
aad
lret
shl
cmpb
ds
out
fiaddl
jecxz
hlt
shl
not
rcl
leave
cmp
clc
shl
fcomip
cmc
mov
popl
in
lock
cmp
xor
xor
cld
rcl
out
rol
testl
in
std
lock
xor
enter
not
stc
cmp
out
in
fcomip
cld
shl
in
cmp
mov
fucomp
sub
iret
ss
repz
aad
dec
sti
cmp
mov
out
xchg
lock
in
leave
jmp
fiaddl
rcl
iret
flds
in
std
in
mov
repz
in
stc
test
inc
cld
rol
ret
std
loope
xchg
out
fisttpll
int3
aam
lret
cli
cli
push
cmp
roll
fsubp
out
jecxz
loopne
loope
shl
xor
shl
lock
test
leave
mov
enter
int
repnz
aam
fidivl
repz
xor
iret
fcomi
shl
and
test
xchg
jecxz
sar
loopne
int
into
clc
cld
out
mov
xchg
lret
testb
hlt
cli
call
ret
fdivr
out
xlat
fcmovnb
out
and
loop
adc
repz
xor
aaa
jmp
cmp
add
add
add
sbb
add
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
call
loopne
loope
xchg
int
std
sti
cmp
std
cmp
shr
rol
repz
repz
faddl
sti
stc
ror
idivb
ljmp
ret
xchg
loopne
fsubrp
fildl
enter
sar
std
sti
jmp
div
into
cmp
fadd
jmp
loopne
xchg
out
jmp
out
adc
xor
ljmp
ret
loopne
div
stc
ret
out
in
fists
das
xlat
ss
ljmp
std
iret
out
rcl
addl
out
loope
clc
cmp
jmp
shr
ds
stc
aam
fimuls
in
cld
int3
loopne
call
ss
clc
fcmovnu
jmp
xchg
hlt
fiaddl
std
fisttpll
shl
xor
xor
out
repnz
cld
ror
stc
ds
imul
jmp
rcr
addl
hlt
repnz
fadd
neg
add
cmp
mov
fneni(8087
test
aad
lock
aaa
cld
div
out
std
cmp
jmp
ret
xchg
fdivr
sub
jecxz
out
fdivp
ss
cli
test
repz
jecxz
int
shl
test
lret
mov
orb
sub
cmp
jmp
sar
jmp
fnstcw
fistpll
enter
test
out
cli
mov
out
hlt
hlt
sub
in
aam
loopne
aad
out
into
fsubp
test
aam
in
mov
std
out
or
cld
imul
hlt
fidivl
cmp
aas
int
mov
stc
xlat
stc
mov
clc
jmp
fidivl
std
shl
fst
ret
shr
vpaddd
fisttpl
shll
fdivr
fsin
repz
div
movl
icebp
fmul
in
int
xor
cmp
icebp
jmp
into
fdivrp
jecxz
movl
xchg
xlat
out
hlt
leave
out
lock
not
std
cmp
cli
jmp
sbb
test
out
in
fnstcw
fdivrp
stc
stc
lock
mov
add
jmp
rcl
aad
loop
pop
sbb
ret
xchg
sarl
fiaddl
jle
fiaddl
test
mov
iret
cmc
jmp
rcr
xor
decb
sti
sub
in
xor
xor
lret
into
out
into
leave
fucomp
aad
roll
lret
mov
fxch
lret
fildll
xor
cmp
ror
lret
in
xchg
cmp
call
xlat
call
out
in
repnz
xor
lock
cmpb
fdiv
fisttpll
fxch
loope
into
mov
ret
xor
fstpt
out
cli
jmp
repz
lret
lret
shl
cli
xchg
rcl
icebp
xor
xor
aad
icebp
div
ljmp
iret
ljmp
enter
enter
mul
leave
cmp
out
aad
cmc
cmp
out
repz
mov
loopne
cmp
in
ror
das
loope
aam
ljmp
jmp
in
cld
xchg
xchg
les
cmp
xor
rcl
cmp
and
in
test
shl
fcmovne
leave
mov
xchg
rorl
cmp
int3
lret
neg
aas
in
ret
into
mov
fadds
fcomi
out
repz
aam
sar
repz
aam
ds
xor
fcmovb
aas
out
mov
fmul
fsubp
sti
nop
xchg
xor
out
xor
out
cmp
std
loopne
cmp
call
mov
das
lret
icebp
cmp
hlt
in
fadd
aas
aaa
sti
in
clc
cmp
into
xchg
call
xor
sub
int
enter
loope
incb
jecxz
iret
sbb
lret
into
out
shll
fcmovu
out
repz
int
cmp
iret
ffreep
repz
lret
out
test
test
mov
stc
rcl
cmp
lret
ss
loope
fiadds
mov
hlt
lds
in
loopne
xor
aam
lret
fxch
out
fxch
out
rcl
roll
jmp
stc
jecxz
shl
adcl
cmpb
neg
jmp
in
loopne
out
cld
in
loop
sub
stc
lret
repz
ljmp
jbe
add
je
add
enter
fstp
int
inc
dec
orl
jg
fiaddl
jle
test
cli
in
cld
cld
aad
test
lret
in
loope
shlb
cs
jmp
into
icebp
in
repnz
stc
cli
test
hlt
call
test
loope
mov
les
out
fucomi
fndisi(8087
hlt
aad
ret
dec
lds
icebp
mov
in
icebp
ljmp
icebp
fnsave
adc
test
lret
out
repnz
test
xchg
ljmp
fmul
loopne
shl
cmp
sarb
fdivrl
jmp
int3
mov
mov
jmp
call
into
xlat
or
loopne
jecxz
jecxz
lret
ror
inc
mov
xor
clc
cli
idivl
call
loope
out
in
les
in
hlt
nop
into
out
rol
int3
lret
cmp
cmp
clc
in
rcl
out
cmc
ror
sti
orl
aam
mov
out
sar
std
int
loope
aas
rol
loopne
mov
cmp
in
lret
xchg
nop
cmc
icebp
loop
call
neg
fidivrs
hlt
test
repz
incb
jmp
test
fld
out
cmp
dec
iret
out
clc
out
cmc
repnz
mov
in
aad
test
fdivr
hlt
ds
loop
neg
ret
out
out
enter
not
out
in
clc
fldl2e
shl
loope
repz
repnz
fisttpl
orl
xor
fstp
rcl
sar
icebp
stc
sub
xlat
fnstsw
fcmove
enter
decl
lret
out
shl
repnz
fcomip
repz
ret
test
idiv
aam
mov
rcr
lret
xchg
mov
rol
iret
lock
aad
cmp
sarl
fdivr
loope
imul
int
ljmp
xchg
repz
iret
sar
jmp
cld
aas
notrack
mov
repz
mov
jmp
call
in
out
neg
fidivl
int3
das
xor
loope
fst
lock
fcomi
stc
faddp
fsubr
out
xchg
xchg
loopne
int3
cmp
in
clc
fldpi
clc
loopne
neg
xchg
testb
out
loope
xchg
loopne
icebp
xor
xlat
aad
sub
cmp
movl
ja
movl
mov
jmp
mov
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
repz
sti
pop
data16
jle
add
clc
jmp
fstp
cld
rcl
repz
sbb
into
jecxz
in
xchg
int
lret
cmp
leave
std
cmp
inc
sti
incl
lret
vpmulhw
out
test
icebp
loope
xlat
fsub
iret
in
std
std
cmp
rcl
rcl
xlat
in
test
xchg
sar
addb
sti
fcmovb
clc
xor
fcom
idivb
ret
test
leave
in
xchg
mov
in
in
test
repz
aam
shl
cld
cld
rcr
sti
aas
fucomip
into
jmp
jmp
leave
nop
nop
out
adc
fcom
cmp
xlat
repnz
repnz
rol
sarl
ffreep
jecxz
std
loop
out
addl
rcl
icebp
icebp
leave
fcmovnb
idivl
clc
fdivr
jecxz
cli
cmp
testb
xchg
shr
cmc
fsub
jecxz
lock
cmp
cmp
aas
adc
cli
mov
xchg
ljmp
in
xor
in
into
fidivrl
ret
fsub
ret
ffree
aad
lret
loop
repnz
into
loop
ljmp
into
cmp
aad
cli
cmc
rol
call
adc
cld
jmp
call
into
repz
rcl
cmp
cmp
test
leave
jmp
fcmovnu
int3
xchg
xchg
xchg
in
shl
xor
jmp
ss
lds
ffreep
clc
and
test
call
fdivr
shl
sar
div
loopne
shl
aad
sbb
fxch
xchg
xchg
call
sti
stc
stc
aam
fmulp
lret
aam
into
in
shl
ret
mov
repz
mov
icebp
jmp
rol
rcr
into
cmp
cmp
mov
rcr
out
cmc
mov
call
in
in
loop
xor
cli
ljmp
test
sbb
aam
adc
fildl
rcl
in
hlt
clc
jmp
cs
rcr
rcl
xchg
movb
xchg
in
hlt
nop
std
mov
enter
out
repnz
xlat
adc
dec
loopne
cli
in
lock
in
mov
jmp
aaa
call
out
ret
shl
loop
neg
fadds
in
call
xor
lock
rolb
add
and
add
clc
jmp
aam
mov
int
rol
repnz
push
rolb
fdivrs
fiaddl
jle
idivl
jmp
and
cli
test
mov
out
movb
mov
aam
cli
aas
sbb
in
xlat
ret
icebp
jmp
loop
int3
jecxz
mov
repnz
cmp
xlat
stc
rol
imul
leave
cmp
fdivrp
icebp
loop
mov
xor
fdivp
cld
fildl
std
test
fcmovu
lret
repnz
aam
jecxz
jmp
cli
clc
incl
ret
idiv
testl
mov
xor
jmp
fsub
fst
sarb
in
rol
hlt
test
cmpl
xchg
sti
aam
out
hlt
das
in
not
lock
icebp
ljmp
orb
xchg
xchg
xchg
sar
in
hlt
ret
sar
leave
shr
cmp
cmp
sar
std
hlt
lret
cld
out
sbb
mov
out
icebp
shl
repnz
xlat
out
aas
neg
out
cmp
incb
jecxz
sti
loope
into
mov
lret
ljmp
cld
cld
fdiv
cmp
xor
mov
rcr
leave
in
out
loope
std
sub
hlt
out
xlat
in
in
xor
shl
incb
ret
in
testl
imul
into
in
iret
stc
cmp
ds
lock
stc
icebp
out
testl
in
xor
aad
in
sar
fucom
out
enter
ds
lock
std
rorl
lret
shl
xlat
ror
divl
leave
ljmp
leave
mov
in
out
mov
fisttpll
jmp
fsincos
xlat
shl
cli
enter
loop
cmp
test
ret
icebp
xor
test
aaa
out
aad
jmp
xlat
in
cmp
rol
jmp
in
in
in
jmp
loope
enter
jmp
repnz
lret
testl
shl
call
aad
cs
sarb
ss
dec
fcmove
in
in
iret
addb
jmp
test
lea
int
int
in
cmp
icebp
out
loopne
in
xbegin
lret
jmp
xchg
fisttpl
sbb
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
je
jne
sahf
fidivrl
fiaddl
jle
aam
ret
cmp
xor
neg
clc
std
in
icebp
repz
rolb
mov
xchg
fucomp
mov
enter
in
loopne
into
aad
ret
vshufps
int3
cld
popl
inc
div
int3
sar
call
sti
std
rcr
fsub
fsub
rorl
out
cld
hlt
mul
das
loopne
divl
xlat
xor
ror
out
aas
sbb
loopne
xchg
mov
lret
incl
xor
lds
ror
in
lock
cmp
shl
testb
mov
mov
out
shrb
cld
out
fst
xlat
cmp
testl
xchg
nop
test
icebp
shll
in
fcomp
rol
loopne
aam
add
incl
mov
fucom
xchg
test
fidivl
fsubr
sti
into
out
sar
sbb
xchg
loop
fmull
xchg
out
loope
xlat
shr
in
cmc
in
fcmovbe
sti
xor
xlat
fsub
filds
lea
sar
call
repnz
rol
test
fdiv
in
test
fimuls
not
xor
xor
loopne
in
cld
ret
test
addl
enter
out
in
shl
repnz
hlt
cld
repz
cld
fsub
rcr
in
test
cli
int3
jmp
mov
dec
mov
fsubrs
out
rcr
in
cli
lret
xor
test
loop
ljmp
in
xchg
rcr
repnz
bnd
fdivp
in
shr
cmc
fildl
fisttpl
cli
sub
xlat
lock
fmul
icebp
sar
add
xlat
lds
jmp
in
xor
clc
repnz
repnz
fstpt
hlt
aas
loop
cmp
cld
call
call
icebp
rcl
xor
repnz
jmp
clc
cmp
iret
xchg
test
xlat
ds
neg
mov
shl
repnz
cs
in
les
in
repz
hlt
iret
loopne
aam
fsubp
fsubr
jecxz
fmulp
sub
xchg
hlt
test
hlt
fdivs
shl
out
das
lret
sti
hlt
cmp
icebp
xchg
dec
out
in
test
cld
movzwl
sub
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
cmpsl
jge
mov
fdivrl
fiaddl
jle
test
jecxz
rcl
mov
in
divl
cmc
clc
ret
incl
xchg
addl
fsub
in
out
fcmovne
rcr
cmp
not
addl
fsubr
leave
aam
in
rcl
sub
in
cmpb
clc
ret
lock
stc
sub
xchg
mov
in
ret
cmp
ljmp
rolb
cmp
out
xchg
xchg
iret
aas
xor
sti
fmul
out
int3
clc
ljmp
mov
and
jmp
loopne
ljmp
repz
rol
aaa
in
clc
fsubr
out
xlat
jmp
imul
xlat
shr
call
repz
stc
int
iret
ss
ljmp
aam
mov
adcb
shl
int3
sarl
into
lret
cmp
int
sti
in
sti
call
xor
test
xchg
xchg
ljmp
cld
rcl
cmp
int
orl
sti
lret
xchg
aam
rol
icebp
lock
hlt
neg
sarl
addb
mov
out
repnz
repz
into
neg
out
fscale
jecxz
add
xchg
repz
orl
shlb
div
into
in
clc
iret
fcomip
aam
fsubp
enter
fucomi
lock
in
icebp
cs
enter
shr
std
jmp
int
fiaddl
mov
loopne,pt
roll
out
in
lock
aam
aas
into
div
in
sbb
fcmovne
movb
ljmp
repz
cli
aaa
mul
cmc
rolb
fscale
in
in
lret
out
jecxz
xchg
shlb
loop
lret
into
lret
in
sub
rcl
filds
stc
mov
shl
aaa
ljmp
lock
test
icebp
mov
cli
test
lock
in
xchg
shl
loopne
das
fprem1
jmp
fidivrl
roll
cli
cmp
xchg
cmc
repz
hlt
cmp
incb
into
call
xchg
ljmp
inc
add
shr
je
add
aad
ret
int
fistpl
mov
jg
fiaddl
jle
loopne
sbb
in
out
aaa
loop
in
lret
fstpt
in
loope
ds
ds
icebp
fcmovnu
mov
test
xchg
out
out
cld
in
jmp
int3
lret
into
lock
aas
call
loop,pt
xor
out
mov
out
lret
lock
ror
ljmp
hlt
shl
jecxz
clc
out
fndisi(8087
cli
cmp
call
sbb
div
out
iret
fdivrs
cld
cmp
icebp
in
in
out
les
cmc
cli
out
cld
in
mov
fucom
repz
fcomi
lret
lret
icebp
hlt
repnz
lock
loopne
int3
fdivrp
xchg
in
test
iret
xor
ret
cli
rcr
std
loopne
fdivrp
int
xchg
xchg
out
out
test
aaa
shl
in
xor
rcr
mul
test
loope
mov
call
lret
into
aam
shr
hlt
iret
std
iret
in
out
in
jecxz
fsub
in
jmp
in
rcl
int
das
ftst
out
fistpll
lret
cld
ds
fdivp
out
sub
call
int3
int
in
repz
xor
cmp
repnz
jmp
in
cli
repz
aad
mov
fildl
repz
in
aaa
ss
aaa
fcompp
stc
xor
aam
ds
les
lea
test
lock
lret
leave
hlt
jmp
iret
repnz
out
test
test
clc
mov
in
xchg
xchg
out
out
les
aad
into
aaa
xlat
rcr
rolb
or
cld
xchg
rcl
shl
fcomip
hlt
xlat
cmp
out
repnz
aas
cmp
rol
stc
in
out
xchg
loopne
das
leave
cmp
out
ds
jmp
iret
hlt
std
cli
cld
aad
xlat
xchg
filds
int
ljmp
jmp
fsubr
enter
rcr
int
xchg
out
mov
out
jecxz
loopne
out
test
idiv
not
repnz
loope
cli
aad
jmp
mov
jmp
mov
repnz
in
ret
ljmp
repz
idiv
xchg
cmc
or
xchg
xchg
in
into
in
test
in
shr
jecxz
xor
std
cmpb
aad
repnz
scas
xlat
xor
xor
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
imulb
jg
fiaddl
jle
std
leave
in
into
xchg
mov
mov
test
out
aam
clc
leave
sti
aam
icebp
lock
cli
fdivr
neg
test
fdecstp
fsub
loop
in
xchg
jecxz
in
rcl
call
lret
aaa
repz
out
aad
stc
cld
mov
shll
fcmovnbe
iret
clc
fsubrp
lock
cld
test
out
loope
xchg
jmp
out
xchg
xchg
fsub
cmc
ret
out
fdivrp
cmp
sbb
shl
aam
fadds
in
sub
fucomi
fdivr
lret
shl
cli
add
xchg
enter
leave
rorb
test
aad
xor
ljmp
into
bnd
call
sti
cmp
loopne
out
loope
xor
aad
neg
aad
jecxz
sti
std
xlat
loope
dec
fmulp
int
repnz
shl
xchg
xchg
int
shl
out
lock
cli
out
cld
icebp
jecxz
shl
clc
fst
call
fists
in
aam
cli
ret
call
fcmovnbe
cld
fildl
fiaddl
in
int
lret
rclb
leave
aam
repz
repz
sar
shl
lret
jmp
sti
jmp
hlt
lret
fsub
aaa
jecxz
xlat
fcmove
fistpll
ror
sar
ret
loopne
fucomp
fld1
int
into
in
icebp
xchg
cmp
jecxz
idiv
out
aaa
xlat
fcmovnu
loopne
sar
repz
test
mov
shr
call
xor
loopne
cmpb
cmp
aad
sar
jmp
in
out
std
ffree
fucomip
mov
fmul
aad
idivb
std
call
jmp
xchg
test
aam
xor
neg
into
int
xlat
jmp
loop
loope
aam
out
fimull
xchg
repz
mul
imul
cmp
adc
test
cmpb
mov
nop
sub
xor
xabort
out
leave
lock
shl
stc
aas
loopne
clc
test
movb
cmp
cmp
rcr
repz
aam
aam
xlat
vpsubusb
loop
cmc
lock
lret
out
clc
sti
cmp
icebp
cld
shl
decl
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
aad
aam
and
adcl
cmp
fnstsw
fcmovnu
jecxz
out
aad
fiaddl
decl
cmp
ret
cmp
in
cli
div
repz
sbb
clc
fadds
iret
test
int3
test
aam
lret
out
aaa
icebp
int
ds
ret
test
aad
in
dec
mov
adcl
aaa
out
fcom
out
int3
add
icebp
add
aam
mov
std
mov
call
icebp
ljmp
clc
xchg
mul
cmc
in
mov
loopne
loopne
mov
in
loope
out
out
icebp
sti
sar
shl
jmp
rol
hlt
ret
into
out
mov
lret
test
xor
cmp
fcmovu
aaa
cld
repz
sarb
shl
ret
enter
in
xchg
xor
call
cmp
cmp
into
fxch
fst
xlat
out
iret
loopne
repz
call
sar
not
cld
int3
addb
ret
ret
hlt
leave
test
cli
cld
jmp
repnz
hlt
sub
xlat
jmp
rcr
jmp
fcomip
ret
in
call
lock
xor
xor
fidivrl
in
xlat
incb
hlt
fdivr
in
fcmovbe
fcmovb
fcomip
xchg
rcll
iret
jmp
xor
ljmp
repnz
int3
loop
cli
loop
fsubrp
hlt
jmp
repz
hlt
out
jmp
adc
ret
in
or
iret
lret
out
xchg
pause
xor
ss
shl
xor
jmp
cmp
fdivrs
fisttpl
ljmp
into
cmp
into
cmc
int
call
shl
in
ljmp
xchg
repz
jecxz
bnd
rcr
iret
ljmp
aam
fldl
fcmove
lret
lret
into
cmc
sub
aad
cmc
xlat
lds
lock
shl
icebp
aam
in
sub
les
out
xor
hlt
enter
cmp
sti
lret
fdivp
clc
cmp
in
ret
push
mov
xchg
xchg
test
not
repnz
fdivr
in
in
fscale
testl
add
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
xchg
shrb
fiaddl
jle
in
cmpl
lret
shl
jecxz
incl
lock
icebp
jmp
not
fsub
cmp
xlat
cmc
leave
cmc
lret
loopne
int
out
fists
iret
int3
cmp
fyl2x
loope
cmc
into
in
fiaddl
in
out
mov
enter
addb
shl
cld
in
addl
mov
and
lret
xchg
das
stc
lret
cmp
lret
cld
fcomi
repnz
fstp
fildl
hlt
in
in
icebp
aad
fsubr
fmul
jmp
idivl
sarl
not
lds
mov
sti
loope
cld
test
icebp
out
xchg
jmp
hlt
aaa
shl
idivb
aam
repz
xlat
shl
sbb
rcl
sub
sub
cld
ljmp
loopne
fcmovu
in
neg
shl
cmp
out
test
ret
hlt
sbb
lea
aad
out
aad
in
clc
leave
ljmp
cmp
cmp
aam
fldl
in
loop
xchg
out
in
ss
cmc
repz
jmp
cmp
ret
sar
fildl
in
fsubr
and
shl
cmp
xor
in
sti
iret
int3
int3
shl
std
test
xchg
in
nop
test
out
cmc
ret
test
fucomp
std
leave
out
adc
loopne
aam
std
cli
ficoml
shl
in
xor
fcmovnu
out
clc
ljmp
fdivp
ljmp
out
shl
mov
ret
into
repnz
aaa
clc
rcr
aad
aas
testl
and
out
xchg
int
cmc
xorb
out
ss
sar
div
call
fstp
jecxz
rcr
cld
shl
xlat
out
lock
aad
call
jecxz
xchg
cld
in
loop
aas
xor
fnstsw
in
lret
int
roll
in
lock
and
in
in
mul
out
ljmp
fsubr
ret
in
fld
movl
sar
aaa
aam
enter
ret
stc
xlat
cmp
fcomi
aad
iret
fcmove
int3
loopne
xchg
mov
lret
ljmp
clc
add
jmp
int3
int
loope
sub
call
jle
jmp
rcl
rcr
in
test
mov
xor
jmp
lret
out
int
rcr
clc
repnz
in
icebp
sbb
out
xchg
out
adcb
out
rcr
into
aad
cmp
in
ret
fiadds
out
fstl
repnz
xor
idivb
out
xor
cli
ffree
cmc
shl
in
xchg
repz
jmp
call
lret
xlat
loop
cld
xchg
int3
fldz
call
stc
in
cmp
div
call
fdivr
ds
aad
ffree
sbb
lock
dec
out
enter
lret
jmp
jmp
fcos
mov
mov
rclb
fisubrl
in
in
fcmovnu
idivl
xlat
div
in
lret
in
in
ljmp
enter
clc
fucomip
aam
fsubr
fcmovb
fptan
aas
test
les
mov
out
in
out
in
aam
loopne
cmc
les
mov
stc
out
out
adcb
cmc
out
xor
sar
aad
jecxz
loope
in
aam
mov
jecxz
out
ret
in
fcomi
fbstp
loopne
repz
roll
clc
orb
and
lret
int3
cld
ljmp
std
iret
aad
fneni(8087
loop
cmc
int3
fldl
mul
xor
fnstenv
out
fdivr
sbb
fstp
clc
lret
int
ljmp
aam
repz
fidivl
shl
rcr
xlat
sarl
test
fcomi
roll
clc
shl
mov
in
lret
repnz
loopne
out
cmp
jmp
xor
cmp
fucom
in
call
fiaddl
icebp
xor
int3
not
fcom
cmc
out
out
fdivp
rcr
shl
call
xchg
xchg
lock
fldl
in
rcl
in
push
xlat
icebp
int3
ss
rol
out
out
rolb
fisttps
cmc
cmp
lret
cli
fcomp
fsub
int
call
in
cld
sti
stc
into
test
out
mov
out
out
stc
jmp
enter
fstp
int3
shl
scas
imul
mov
outsb
and
jg
fiaddl
jle
out
in
hlt
int3
fdivr
lret
sti
into
cli
test
incl
stc
leave
test
in
out
not
cmp
sub
sarb
std
cli
int3
clc
not
xchg
enter
out
fsub
sti
rorb
cmp
fdivr
repnz
cli
cmp
mov
sbb
std
fcmovnu
in
mov
adc
ret
not
in
cmp
cmp
mov
cmc
fcmovnu
mov
out
lret
sub
les
in
fdivr
out
sar
fstp
aaa
aam
sti
repz
mov
xor
aad
fcmovne
std
lret
out
icebp
sti
cld
sti
aad
sbb
ret
rolb
rcr
out
in
xabort
aad
fstp
aad
vpmuludq
in
loope
in
stc
ljmp
stc
out
ss
fdivl
iret
cli
out
cmc
roll
call
xchg
xchg
aad
out
int3
neg
shr
shr
lock
cmp
xlat
repz
call
loop
mov
mov
adcl
clc
aad
sarl
shl
fcmovnu
out
in
mov
fsubp
jecxz
out
xchg
xchg
lea
icebp
stc
repnz
loope
fsubr
incl
xchg
jecxz
sbb
repnz
testb
int3
cmp
aam
cld
sti
sar
shl
cmc
test
in
ljmp
out
call
repz
rol
fpatan
shl
in
mov
xchg
test
jmp
loope
fdivs
into
in
out
iret
std
aam
fmul
stc
rcr
cli
sti
mov
vpminsw
test
lea
icebp
cmp
out
jmp
xlat
fsub
in
jecxz
cmp
mov
cli
nop
xchg
mov
out
loop
fstpt
int
fnstsw
sbb
div
fadds
mov
out
vpsubw
divl
cmp
loopne
ret
cmc
mov
into
int
leave
shr
lea
lret
xlat
fucomp
lret
aam
out
out
mov
loope
loope
int
test
out
jecxz
hlt
jmp
clc
iret
aad
cmc
loopne
stc
fcmovnbe
in
std
mov
and
scas
xlat
jmp
lret
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
rol
stc
cmp
out
int3
repz
not
div
test
les
mov
jmp
sub
jmp
out
loop
rolb
ret
jmp
adcb
rcl
xor
lret
shl
div
ljmp
jmp
jmp
lret
jecxz
xchg
lret
cmp
cmp
fsubr
cmp
in
xchg
ret
loop
in
jmp
mov
shl
fsub
in
xor
out
in
iret
cmp
cmp
loopne
out
hlt
fisttpl
and
cs
cmp
cmp
lret
faddp
rcr
jmp
loop
mov
std
xchg
loop
out
lock
into
jmp
loop
out
fdivr
repz
testb
filds
ret
cmp
sti
cmp
clc
xor
aas
lds
ret
loope
call
mov
fmulp
div
in
hlt
shll
fcomi
out
addl
rol
in
in
into
fldl
out
xor
into
rcl
cmp
aaa
ss
lret
out
iret
sti
out
hlt
fdivr
cmp
sbb
xchg
fdivs
into
out
lock
shl
fildl
flds
xchg
mov
leave
iret
aaa
in
cmc
int3
int
vmovq
in
in
loopne
out
fiaddl
in
iret
imul
fadd
aaa
lret
aad
out
iret
repz
enter
lret
sti
jmp
dec
loop
out
out
xlat
out
fidivrs
cld
lret
or
rol
leave
fucomip
lret
fsubr
sti
loop
icebp
clc
in
ss
std
hlt
std
lret
lock
cmp
rol
enter
fmulp
loopne
shl
jmp
in
xor
ljmp
neg
jecxz
aas
fsub
in
jmp
clc
cmp
roll
stc
in
sar
fidivl
cmp
hlt
fstp
mov
mov
mov
mov
sub
out
shl
out
enter
iret
cmp
and
out
aas
orl
out
test
loop
idivl
out
icebp
lret
in
aad
in
repz
ffree
xchg
jmp
loopne
lret
xchg
lock
cmp
mov
jbe
jmp
lret
ret
in
call
fs
pop
pop
out
jg
fiaddl
jle
nop
loopne
mov
xor
clc
xor
lret
loopne
iret
loope
out
ljmp
xchg
ror
lret
cmp
ljmp
cmp
rcl
lret
xlat
lock
icebp
or
pop
enter
ror
clc
sar
loop,pt
test
xchg
ds
xchg
fcmovne
ljmp
call
shll
cld
cmp
sar
cmp
clc
fdivr
lret
call
in
in
sub
stc
das
clc
std
in
fcmovnbe
fcmovnb
ret
in
orl
std
mov
int3
jecxz
loope
xor
out
neg
lock
fcmove
test
fsubp
ret
cmp
rolb
in
lea
clc
in
ds
shr
icebp
aad
in
rol
jecxz
enter
cli
out
out
mov
int
not
shll
fcmove
iret
cmp
sub
cmpb
loop
hlt
ffree
jecxz
mov
lds
jmp
repnz
in
out
fdiv
aas
jecxz
stc
loop
test
mov
int
cmc
mov
cmc
aad
fcom
sbb
cld
out
ljmp
repz
loope
jecxz
fadd
enter
ds
iret
iret
hlt
aad
fdiv
rcr
mov
fldl
ficoms
lock
int
das
std
xor
fnstsw
sti
loopne
sti
sti
sti
jmp
mov
shlb
in
iret
loopne
sarb
clc
leave
loopne
cmc
enter
mov
lock
aad
cmp
cmp
filds
clc
mov
leave
leave
and
in
mov
xor
jmp
xlat
clc
int
icebp
cld
hlt
ret
fdivr
div
fsub
mov
jmp
shl
hlt
repz
ret
rcl
cmp
fcmovnbe
rol
fstp
out
cli
loop
xor
test
iret
xor
cmp
mov
int3
shr
shr
idiv
mov
ds
fdivp
ds
out
cmp
stc
aas
repnz
fsubp
loopne
mov
sub
lock
cmp
xor
fstp
sarb
iret
out
in
stc
testb
les
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
aam
ss
fiaddl
jle
cld
call
test
out
aad
cld
lret
cmp
or
mov
test
xchg
lret
hlt
mov
aam
into
cmc
out
mov
cmpl
clc
neg
int3
mov
int3
out
xchg
ret
leave
cld
test
xlat
ret
fsubr
jmp
rcl
out
popl
repnz
xlat
fdivl
aas
jmp
repnz
loop
cmc
fsub
aas
out
out
ljmp
shl
cmp
ret
aaa
shl
out
leave
fdivrp
cli
mov
ret
aam
xor
out
sti
clc
loopne
ds
rcr
fcomp
incb
mov
in
shll
xor
xor
jmp
stc
filds
lock
ljmp
leave
xchg
hlt
shl
out
loope
aad
xlat
repz
cmp
repnz
mov
enter
loopne
xchg
mov
out
cmc
int3
ret
clc
xor
ror
fsubrp
lret
div
rcl
out
fcmovnb
repz
std
mov
call
pushl
into
das
cmp
int
out
test
loop
dec
incb
in
loop
iret
leave
filds
repnz
aam
shr
fucom
ror
cmp
out
fisttpl
out
ret
icebp
rol
enter
call
out
xor
repz
vpsubq
std
sub
loopne
mov
in
fst
lret
cmp
jmp
fcom
leave
incl
loop
aam
in
enter
fmul
mov
std
in
das
ljmp
fucomp
shr
into
iret
movb
mov
test
lret
xor
xor
sar
stc
fadds
repz
fimuls
icebp
int3
icebp
jecxz
cmp
fucomp
ds
sti
cld
fndisi(8087
loop
cmp
mov
fcmovne
int
loope
sub
fcmovu
clc
lret
sub
int
fdivr
ret
mov
mov
loopne
or
aam
rol
int3
ss
adc
xlat
out
rorl
in
in
nop
iret
fst
repnz
in
enter
out
lret
cmp
cmc
out
repnz
push
call
add
xlat
mov
rcr
xlat
sub
sbb
xchg
hlt
jg
fiaddl
jle
les
nop
into
icebp
mov
sti
int
out
adc
iret
fcmovnb
out
test
in
loopne
in
test
in
jecxz
call
aaa
call
xlat
neg
loope
std
cmp
fchs
fisttpll
fildl
test
divl
jmp
cld
aaa
into
int
rcl
in
mov
in
fmull
out
loope
xor
jmp
out
int3
xlat
fdiv
lock
loopne
push
idiv
leave
out
in
jmp
cld
shl
ljmp
xor
out
ds
cmc
cmp
fcmovb
sbb
mov
in
fucom
into
call
divl
filds
adc
cmc
out
in
mov
decl
lret
xlat
out
fcmovnb
ss
rcr
sbb
cmp
lds
sbb
fcoml
shr
fdiv
icebp
cmp
roll
xchg
enter
mov
lret
out
xchg
mov
lock
xlat
fldpi
int3
sti
lret
cmp
shl
xchg
loopne
mov
fimuls
call
ljmp
ljmp
mul
adc
shl
enter
cli
mov
sti
xchg
jmp
idiv
cld
xor
fdivr
shl
int3
sti
and
cmp
aam
ljmp
fst
fisttpll
cmc
out
jmp
or
test
ds
test
iret
aam
mov
aad
aad
clc
xor
cmp
loopne
cmp
repz
int3
clc
call
in
xacquire
lret
shl
or
les
jmp
enter
repz
xchg
xor
call
aas
not
cmc
sar
loopne
mov
mov
xchg
int3
sub
out
xor
cmp
cmp
aaa
clc
shl
testl
decl
repnz
enter
ror
rol
stc
cmp
xorl
out
ret
sbb
fmull
out
loop
imul
fmulp
ror
sarb
cmpb
loope
cli
call
sti
mov
lret
ss
jmp
clc
lret
stc
sti
rolb
add
lret
xlat
aas
rcr
int
in
push
jecxz
inc
and
fiaddl
jle
clc
sti
in
fisttpl
out
fiadds
xor
xor
leave
lret
aam
int
fcmovbe
rolb
mov
fsub
icebp
iret
in
xor
out
lret
jmp
in
rcl
shl
rol
cmc
out
test
out
xchg
xchg
xor
in
stc
aaa
cmp
loop
ret
roll
ret
in
and
shl
xchg
in
aad
xor
std
ljmp
rcl
cmp
std
fcmovnb
lret
icebp
cld
ljmp
sub
cld
leave
into
aad
into
fsqrt
mov
push
mov
lret
leave
nop
fucomip
icebp
xchg
in
ror
in
aam
aaa
fdiv
ror
cmp
xlat
shl
fninit
test
fdivr
sti
out
in
int3
adc
out
fsubrs
ror
xor
shl
repz
loopne
cld
lret
mov
in
leave
fnstcw
call
loope
test
int3
ljmp
mov
das
les
cmp
rcr
fucom
cmc
dec
stc
mov
jecxz
xchg
div
stc
in
stc
fst
cmp
fadds
test
mov
cli
cli
repnz
loop
ss
in
enter
fdivrp
rcr
int
xlat
fildl
orl
sti
jecxz
sti
cmp
cmp
idiv
loope
fcmovu
shl
in
ljmp
in
mov
repnz
leave
fdecstp
xor
into
xor
shl
leave
fucom
in
cli
jmp
loopne
xor
lret
xlat
fcmovbe
in
repz
cmp
mov
lock
faddl
call
lret
repnz
ffreep
jecxz
leave
in
test
repz
out
hlt
out
int
cmc
repnz
sti
test
shr
rorb
call
std
int
loop
shl
call
hlt
cld
in
aad
hlt
fdivr
cmp
in
mul
lret
mov
aad
into
in
in
cmc
hlt
cmp
hlt
xlat
faddl
vcmpsd
out
xlat
jmp
repz
aad
xlat
cli
out
fmul
lret
rcr
add
jmp
jmp
lret
fst
mov
addr16
cmp
jle
add
cmp
add
clc
xchg
fcomp
addl
iret
hlt
out
aas
fst
or
loopne
std
cli
ljmp
mov
les
fstp
rol
fsin
fsub
clc
fadd
testb
fiadds
out
out
ror
sar
aam
sar
sar
rcl
fmull
xchg
fsubrp
std
loopne
repnz
das
aaa
jmp
aam
jmp
iret
out
std
sti
mov
clc
mov
in
loope
mov
repnz
jmp
clc
cmp
xor
call
repz
rcl
stc
fndisi(8087
xchg
movl
lock
in
jmp
xor
aam
xor
into
cmp
rcl
mov
loopne
test
in
shl
fiadds
lret
ror
lock
fistpll
in
rcr
ds
fiaddl
lret
out
leave
clc
not
sar
fdivr
leave
cmc
repnz
repnz
std
aam
mul
fldl2t
fsubp
out
int3
nop
aad
sub
fldl2t
hlt
out
in
xor
ret
int
fdivrs
jmp
out
lock
lret
cmc
int3
aaa
test
rcl
clc
hlt
mul
rcl
loope
loop
jecxz
decb
std
repz
rol
cmc
xor
jmp
in
repnz
ret
call
jmp
orb
clc
in
repz
call
clc
icebp
xor
incl
repz
call
ss
jmp
shl
cld
cmc
mov
sbb
call
neg
rcl
ror
cmp
enter
sar
cmp
jecxz
push
out
in
in
in
std
out
int
mov
div
xor
xlat
lret
fxch
icebp
test
ljmp
mov
call
stc
fyl2x
fst
lret
sti
iret
fnstsw
aaa
ret
fsubrp
loope
cmc
sti
stc
shr
rcr
shl
leave
int3
cmp
std
out
in
repnz
int3
cli
cmp
mov
sti
ror
mov
leave
in
jmp
repnz
leave
into
cmp
incl
les
addl
mov
cmp
not
repz
push
call
in
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
sbb
fs
fiaddl
jle
xor
xor
fdivr
cmc
clc
aad
cld
fimuls
icebp
in
mov
in
xor
leave
fst
idiv
stc
stc
repnz
movb
or
lret
int3
repnz
lret
neg
ljmp
in
ret
rol
lds
mov
test
jecxz
lret
rcl
aad
out
enter
rcl
lock
cmc
cli
enter
loopne
fcmovnbe
ljmp
jmp
in
out
fmul
xlat
loop
out
test
cld
fsub
int3
repnz
lret
imul
out
xor
cld
shl
xor
in
out
in
out
call
test
call
out
xor
jmp
or
cmp
filds
hlt
jmp
fimull
adc
in
jmp
iret
cmp
repnz
hlt
cmc
div
fdivp
cmp
rorl
cmp
cmp
lret
out
shl
ljmp
fsubp
loop
jmp
decb
repz
cld
iret
repnz
aam
sar
out
loopne
loope
cli
mov
test
test
repz
mov
jmp
fdivrl
ljmp
loopne
and
mov
rcl
jmp
hlt
xor
aaa
rol
test
aad
lret
in
mov
out
aad
fnstsw
cmp
rcl
cmp
test
aam
xchg
cli
mov
out
in
sub
ret
clc
clc
xor
lret
iret
repnz
cli
stc
ljmp
in
in
sub
repz
repnz
out
cmp
sti
faddp
fxch
aas
addb
cld
fucomp
mov
decl
jmp
int3
idivl
jmp
sbb
xlat
xlat
in
test
sti
mov
ljmp
ljmp
fcmovnbe
stc
into
shl
les
aas
inc
fisttpll
int3
loop
loop
mov
cld
out
fcmovnu
xor
xor
rorb
stc
xchg
cld
mov
loope
div
fucomi
int3
fdivrp
aas
fdiv
lret
stc
rol
test
xlat
xchg
xchg
jecxz
repz
das
ror
mov
mov
mov
jmp
lret
ret
fcmovu
fucomi
pop
test
cmpsl
add
jg
fiaddl
jle
int3
cmp
filds
and
rol
xchg
cld
xchg
hlt
xchg
and
loop
cmp
fxch
cmp
repnz
hlt
cmc
ret
sbb
call
in
xchg
rolb
sti
xlat
cmp
hlt
cld
fchs
dec
ret
hlt
fcomi
hlt
mov
mov
loop
shlb
loop
into
jmp
cld
loope
cmp
fmull
mov
loopne
fmull
out
in
leave
les
in
dec
cmp
cmp
test
out
aas
fisttpll
in
xchg
in
and
into
and
xor
in
jmp
jmp
test
ds
stc
jecxz
jecxz
xchg
loop
icebp
in
in
icebp
neg
enter
lret
divb
dec
int3
cmp
cmc
sti
cld
ret
in
mov
mov
lds
stc
jmp
int3
aad
hlt
aam
rcr
fidivrl
mov
loop
int3
enter
adcl
in
lret
cli
repnz
ret
test
mov
in
out
lret
loopne
mov
xor
ror
std
aaa
lock
std
cli
int
fldl
jmp
or
xor
fdivr
in
rol
std
lret
call
cli
lock
in
in
mov
xorl
stc
rcl
repnz
fcomp
fucom
loope
adc
fucom
les
repz
neg
fsub
cmp
test
ret
repnz
cmp
clc
lret
or
shl
test
cli
lock
hlt
hlt
cli
fiaddl
jmp
mov
loop
sar
xor
enter
divb
roll
fnstcw
call
in
repnz
xor
out
cli
xor
call
cmc
out
cmp
cld
std
sbb
fsubp
xchg
xchg
lret
std
test
das
out
xor
cld
repnz
test
cmpb
xchg
in
shrb
xor
xor
clc
lret
rcl
incl
repnz
fcmovb
mov
mov
xor
call
jecxz
hlt
repz
mov
test
loope
iret
testb
jmp
leave
aas
ret
vpcmpeqw
pusha
js
test
cmpb
add
ret
out
lret
fucomi
cmp
shl
test
aad
test
faddl
cmc
int3
rol
in
shl
cs
hlt
repz
sar
sti
xlat
add
xlat
xlat
idiv
out
fcoml
shl
int
ljmp
int3
adc
leave
lret
cli
cli
loope
std
int3
icebp
aam
xchg
rol
das
cmp
fdiv
cmp
call
repnz
imul
jmp
leave
fyl2xp1
lock
enter
in
cmp
in
std
cld
clc
addb
loopne
loopne
into
int3
xchg
adc
xor
fdivr
ljmp
sub
fcmovne
fisttpll
std
cld
cmc
out
fdivs
lret
fcomi
cld
icebp
repnz
test
in
loope
addb
into
in
int
out
sar
int3
cmp
aas
icebp
rol
clc
fcmovb
sti
sub
test
mov
not
out
out
cmp
cmp
aam
rorl
mov
xchg
decb
out
out
xor
stc
loope
cmp
test
lds
mov
enter
rcl
int3
jecxz
ror
cmp
out
rolb
xchg
addb
mul
fisttpll
lret
xor
shr
clc
xor
idiv
aam
fprem
in
loop
loop
mov
ljmp
cmp
fdiv
ljmp
stc
jmp
std
mov
fmull
xchg
aaa
sti
fst
in
aas
loope
fdiv
cld
test
mov
shl
out
enter
lret
repnz
out
out
idivb
hlt
fcmovbe
fnstsw
lret
xlat
out
out
lock
out
out
out
std
jmp
xchg
ljmp
lret
out
fmul
cli
xlat
in
loope
test
jmp
in
shl
call
int3
xor
aas
test
fsub
in
stc
imul
rorb
loop
lret
popl
out
ror
cmp
xlat
aas
xor
cmp
into
cmc
out
std
xchg
xchg
mov
mov
in
shl
fcomip
rcr
ds
mov
ljmp
loopne
iret
xor
jmp
int3
ret
lret
ret
int
int3
int
adc
nop
jmp
fiaddl
jle
fsubrp
aad
lret
sar
ror
cmc
hlt
hlt
fptan
xchg
fsubp
mov
call
ljmp
cmp
repnz
int3
lock
std
loop
xor
lock
lret
ret
xor
xor
cmp
into
cmp
aas
call
idiv
in
sti
or
out
aad
sti
lret
std
hlt
fdivr
cli
in
fisttpll
enter
mov
cld
incb
out
stc
repnz
into
cmp
std
out
cld
div
icebp
ror
sti
out
faddl
aam
aaa
sub
int3
out
aad
cli
xchg
fcmovb
fcomp
out
mov
subb
hlt
call
cmp
hlt
shl
cmp
testb
sti
in
adc
repz
in
jmp
shl
lock
shl
rcr
in
std
jmp
repz
fucom
test
cmc
repnz
ss
jmp
aad
fiaddl
enter
sbb
jmp
jecxz
cmc
lock
hlt
fidivrs
int
fdivrl
aam
mov
lret
lock
xchg
lock
int
cmp
test
call
jecxz
cmp
loope
mov
call
loope
fmulp
ljmp
icebp
aam
xlat
cmc
aam
test
mov
in
in
or
cmp
aam
cmc
xor
faddl
cmp
testl
mov
int3
test
ss
cmp
jmp
shl
repz
jecxz
lret
std
sti
lret
cld
sbb
out
lds
sti
fcmovnbe
call
sti
cmp
rcr
fldl2e
sar
fimuls
ror
xchg
test
clc
repnz
int
sti
int3
icebp
xlat
test
cmp
fdivr
adc
loope
xchg
faddp
xchg
loope
aaa
fld1
fst
cmp
jmp
fdivrp
ret
cmp
mov
test
incb
hlt
in
iret
cmp
repnz
loop
fadds
fmuls
rol
test
cs
fxch
int
sar
repnz
mov
in
mov
jmp
ror
aas
roll
ljmp
test
fiaddl
jle
test
jmp
repz
fcmovnbe
jmp
sar
jecxz
out
fucom
flds
repnz
test
shll
cli
cmp
cmp
loopne
leave
fxtract
xchg
xchg
out
out
out
leave
divl
not
lret
out
cld
aad
rolb
in
neg
xlat
out
ljmp
loop
shrb
fcmovnb
ljmp
aaa
out
filds
mov
addl
ror
sbb
clc
adc
fisttpl
test
rorb
in
aad
ss
test
mov
mov
out
fucomp
or
shll
iret
shlb
lock
shl
sar
test
mov
enter
orl
into
loope
cs
cmp
call
sar
adc
xchg
fmull
rcll
int
in
enter
std
fidivrs
enter
mov
lock
cmc
ret
int3
cmc
leave
clc
loopne
aaa
stc
lock
loope
test
addb
lock
int3
shr
sub
idiv
filds
fsubp
test
aas
jmp
in
mov
repz
test
fcmovnbe
mul
rcl
ror
aas
in
idiv
mov
sub
in
ljmp
aaa
fucom
aam
loopne
sti
test
loopne
mov
lret
loopne
lea
jecxz
cmp
into
fcmovnbe
in
lret
in
icebp
fcmovnbe
ret
loope
lret
jecxz
out
mov
int3
cld
xchg
int3
fbstp
sarb
lret
fdecstp
shl
in
sarl
fadds
xchg
mov
ret
iret
out
push
lret
xor
aam
call
lret
fucomip
lret
shl
ss
cmp
jmp
aad
lock
aas
neg
call
test
xchg
lock
call
ljmp
test
cld
mov
sti
addb
repnz
fucomi
shr
sar
cmc
cmpl
icebp
fdivrp
testl
or
add
add
into
aam
fmul
dec
cmp
dec
xacquire
fiaddl
jle
in
xlat
out
fistl
ret
in
out
cmc
jmp
lock
cmp
mov
lret
out
loop
shl
cs
jmp
lret
icebp
repnz
aam
faddp
loopne
ljmp
out
into
fdivp
rol
lock
das
out
sar
rcl
lock
clc
mov
fld1
ret
addb
cmc
iret
iret
shll
int
cmp
test
hlt
loope
cmp
jmp
iret
xchg
sub
loopne
shlb
leave
xor
sub
fstpt
lock
hlt
xlat
cmc
faddl
adcb
stc
jmp
int3
icebp
ljmp
stc
sar
cmc
xchg
or
fcmovu
repnz
mov
test
in
rcl
fxch
rcl
clc
loop
add
incl
mov
aaa
cmp
cmp
or
ds
jmp
cli
or
hlt
jmp
out
xor
shl
xor
leave
push
sti
adc
out
hlt
loop
test
jmp
ljmp
xor
out
xor
in
aas
cmp
sti
clc
testb
icebp
icebp
test
xor
cli
jmp
int3
int
ret
aaa
sar
mov
std
loope
call
jmp
jecxz
out
lret
aaa
iret
lret
out
jmp
jecxz
in
icebp
repnz
clc
movb
fdivr
hlt
in
sub
cli
in
ror
hlt
in
fchs
clc
out
test
test
aad
int3
adc
cld
out
iret
and
icebp
jmp
int
aaa
clc
fdivr
jmp
sbb
leave
fchs
add
loop
in
mov
lock
out
stc
stc
aas
in
aas
incl
test
jmp
jmp
xchg
aam
cmp
cmc
stc
shll
repz
jmp
int3
cli
int3
icebp
int3
loope
xchg
rol
int3
out
hlt
xor
hlt
in
test
shl
xchg
neg
cld
lret
mov
icebp
cmc
loop
in
hlt
lret
out
in
cmp
push
repz
fstp
cmpb
out
fdiv
mov
ret
fmul
lock
lret
divb
clc
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
lods
lds
jg
fiaddl
jle
fucomp
fimull
fucomip
jecxz
loop
lock
xlat
out
jmp
std
int
lock
cmc
cmpl
mov
fsubrp
loop
mov
out
leave
in
aaa
ljmp
loope
icebp
sti
in
jecxz
orl
fldcw
xor
sbb
cmp
cld
xchg
hlt
cli
out
test
test
cmp
shr
fidivrs
int3
fdivrl
lock
out
sub
xchg
mov
in
sub
cmp
jmp
enter
lock
repnz
lock
jmp
icebp
in
stc
out
sti
in
cmp
fninit
aam
loopne
fmuls
into
int3
loop
mov
in
leave
xlat
in
cli
hlt
cmp
repz
testb
out
loope
fimuls
aaa
int
iret
cmp
cmp
into
ret
sbb
ds
addb
out
cs
stc
fnstcw
rcl
jecxz
rorb
inc
cld
fcmovu
out
lret
xchg
ret
in
fxch
call
std
rol
sti
mov
out
std
int3
test
int3
loopne
jmp
ss
out
into
ds
shr
into
out
xchg
call
sub
lret
int
loope
xor
cmp
adc
sbb
ret
fiaddl
in
int3
out
sub
in
cs
enter
clc
out
shl
orl
ret
ljmp
call
ljmp
push
sbb
aad
clc
mov
xchg
xlat
aaa
hlt
into
jmp
test
fabs
stc
enter
test
lret
icebp
ljmp
aad
icebp
repnz
leave
cmp
loope
xlat
out
cld
lock
adc
leave
clc
ret
jmp
xchg
int3
xchg
shll
icebp
lret
cli
enter
aas
repnz
out
std
cli
mov
ficoms
lret
clc
imul
sti
stc
xor
aas
cmp
add
loope
into
out
jecxz
mov
int3
in
lret
out
in
loop
add
jmp
ror
rcl
stos
sub
insl
shl
jo
mov
fiaddl
jle
int
in
vpsraw
ret
in
loopne
in
call
sar
rcr
repnz
jmp
shr
ljmp
repnz
xchg
fbstp
das
fucomi
xlat
dec
xor
roll
shl
std
repz
neg
out
sti
into
leave
lock
aas
jmp
cmp
xor
aam
cmp
rcr
shr
fcos
xchg
std
repnz
loop
shl
aaa
fcmovb
aaa
aas
repnz
cmp
test
test
repnz
std
int
in
in
adc
fadd
cmp
cmp
not
out
cmp
addb
enter
jecxz
ljmp
lock
fdivr
aas
lret
cmp
shl
std
in
ljmp
into
xchg
clc
repnz
ss
xor
sarb
loopne
aas
out
aad
out
ljmp
jmp
xchg
xchg
test
in
fmulp
out
xor
roll
add
loope
cli
mov
leave
lret
vphaddbd
out
lock
cmp
ds
fndisi(8087
fsub
out
sti
int
ffree
test
nop
icebp
lret
call
sub
stc
aaa
out
in
rcr
fsubp
sar
cmp
filds
cld
xchg
mov
or
imul
into
into
jmp
fidivl
fcmovnb
fcom
xlat
call
hlt
loopne
in
lret
int
addl
cld
rcr
in
aas
aad
xlat
fdiv
fdivrp
call
ljmp
rcl
lret
xor
not
loopne
mov
add
clc
test
test
icebp
mov
in
xor
leave
xlat
in
lock
out
iret
in
rolb
in
in
decb
not
fptan
cmp
icebp
sub
not
in
mov
ret
in
xchg
jecxz
xor
out
loop
call
add
cmp
fdivr
fdivr
ret
loopne
fisttps
jmp
xchg
xor
aad
iret
xor
leave
out
aad
cmp
cmp
test
cmp
out
icebp
jmp
repnz
xor
out
aaa
fsincos
ds
fucom
loop,pt
ret
mov
test
lock
jmp
out
iret
clc
push
in
mov
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
sti
call
icebp
fistpll
rol
cmp
xchg
addb
call
repnz
repz
test
aam
cmc
loop
leave
mov
fsub
mov
fistpll
in
in
hlt
ss
shll
int3
faddp
xlat
std
enter
loopne
dec
or
rcl
xchg
icebp
ss
out
enter
and
out
ret
xchg
fisttps
jmp
iret
hlt
jmp
in
rcr
into
ljmp
lock
mov
not
loope
out
fdiv
fimuls
lock
xlat
std
cmp
ror
xlat
mul
aas
jmp
out
fucomi
xchg
xor
rcr
in
hlt
cmp
into
xor
shl
xchg
xchg
int
out
out
out
ss
aaa
out
idivb
xor
loope
aad
into
ds
and
xchg
in
xchg
std
lock
iret
into
iret
aam
in
out
cld
shr
testl
out
inc
icebp
cld
sar
popl
cmp
cld
cmp
out
dec
ds
lock
clc
ljmp
divb
in
sub
in
in
ss
neg
xor
sti
stc
fimuls
shl
in
repnz
aam
fprem1
iret
cmp
aas
test
std
adc
jmp
sub
mov
adcb
cmp
fcomi
cmp
aam
loope
fmul
rol
enter
call
fldl
aad
int3
not
cld
loopne
icebp
cld
stc
iret
in
hlt
rolb
enter
cmc
xorb
into
cmp
aam
int
in
sti
cmp
iret
repz
mov
ljmp
xchg
fists
enter
xor
repz
xor
repnz
fiaddl
cli
in
mov
in
cmp
sti
cmp
std
test
clc
mov
ret
sti
in
mov
fmulp
clc
lock
xor
out
inc
in
out
clc
ret
icebp
roll
in
repnz
xor
cmc
cli
jmp
ljmp
addb
mov
std
out
jmp
in
into
jecxz
xor
scas
xlat
mov
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
call
jg
fiaddl
jle
out
aad
cmp
ss
cmp
aam
aas
ds
aad
xlat
in
call
xchg
fdivr
sti
std
loope
xor
fiaddl
test
or
xchg
xchg
lret
stc
stc
ljmp
iret
ror
cli
std
repnz
into
test
shr
fsubp
sub
ss
hlt
aaa
leave
lret
loopne
or
loop
ret
ret
xlat
loopne
in
into
fiadds
loop
in
fnstcw
lock
lret
ret
loope
ljmp
dec
loopne
jmp
lock
lock
sub
cli
fcom
ftst
repz
leave
movl
xor
out
div
cmp
repnz
cmp
repnz
fadd
xlat
xlat
mov
neg
dec
fmulp
xchg
jmp
leave
enter
xor
aas
cmp
out
sti
call
clc
out
mov
xor
ss
repz
ret
fistpll
mov
fucomi
into
or
mov
fucomip
aad
cmp
cld
xor
aad
ror
fidivrs
cli
hlt
ret
into
enter
rol
fxch
rcl
cmp
ror
test
ds
rcr
mov
lds
xchg
icebp
in
aam
ljmp
shlb
xlat
shl
repnz
stc
xchg
cli
clc
mov
int
aaa
in
shl
icebp
int3
out
clc
repnz
in
filds
ds
or
loopne
aad
in
out
ror
iret
xor
repz
cmp
fsubr
ljmp
ror
or
loop
jecxz
int
cmp
rolb
les
out
fld
out
mov
loop
aaa
ret
aam
cmp
cmp
cmp
faddl
fisttpl
mov
out
sub
icebp
idivl
in
iret
cmp
out
loop
roll
mov
clc
mov
shl
ljmp
xor
jmp
in
sti
lret
icebp
in
or
ds
aam
in
clc
or
sti
loop
rcl
adc
aaa
aam
jmp
icebp
into
sti
rcr
aad
aaa
fcomi
repz
cmc
mov
in
mov
enter
divl
clc
jmp
enter
fcmovne
fst
or
pop
xchg
repz
aad
xchg
jg
fiaddl
jle
xor
out
lret
fldl2t
fucomp
in
enter
cmc
fcmovb
aad
repz
mov
fstl
loopne
fxch
shl
int3
xor
repnz
aad
repnz
loop
ds
orb
mov
in
repz
lock
fsubrp
loop
fsub
icebp
test
aad
dec
lret
lret
mov
sub
xor
cs
div
icebp
neg
loopne
hlt
rcl
fidivrs
fdivr
aad
lret
iret
fists
into
cmp
not
enter
sti
or
loop
hlt
fsub
in
filds
loope
xchg
loop
in
ljmp
lret
sar
ds
stc
fcmovbe
jmp
int3
shl
xchg
repz
in
aaa
xor
cmp
cmp
call
out
roll
ret
mov
nop
fsub
repz
xchg
in
xlat
shr
cmp
loopne
clc
cmp
idivb
rcr
cmc
cmp
in
iret
mov
call
out
clc
ss
in
into
ds
int
ret
fdivr
cli
mov
fisttps
mov
xor
aam
fsub
lock
icebp
loope
std
in
xchg
idiv
loopne
mov
xchg
mov
fpatan
cmp
testl
mov
cli
int
rol
filds
hlt
cmp
cmp
cmp
hlt
fdiv
rolb
fildl
out
lock
hlt
cmp
int
fcmovnbe
shr
shlb
in
loop
or
int
lret
jecxz
ret
xor
sti
aam
rcr
rol
cli
test
lret
clc
fiadds
fsub
in
int3
xor
shl
lret
ror
aad
enter
fsubp
and
xchg
aad
xor
ss
in
xlat
into
sti
cmp
addl
fiaddl
sub
ljmp
iret
xor
in
addb
leave
dec
loop
repnz
lock
jecxz
jecxz
leave
ljmp
and
aad
ret
in
mov
xlat
ror
into
mov
fsqrt
jmp
sub
fcom
cmc
jmp
loop
ljmp
sti
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
rcrb
add
int3
ror
xchg
loopne
aam
in
in
fdivrp
shl
cmp
and
xchg
fiaddl
into
icebp
loopne
jecxz
cmp
icebp
xlat
enter
cmc
cmp
repz
lds
jecxz
std
shr
xchg
ljmp
sti
fdivrl
sbb
aas
repnz
aad
in
iret
orl
loope
clc
sub
cld
cmp
stc
cmp
loope
in
xchg
cld
in
out
mov
xor
cli
repnz
fnstenv
and
in
aad
testb
in
fdivr
jmp
aam
out
in
fmul
cmp
sarb
fdiv
sar
hlt
xlat
orl
sub
jecxz
xor
fstp
fidivrs
aas
aas
cmp
sti
jmp
mov
mov
repnz
sar
shr
aaa
aaa
jmp
cmp
loopne
f2xm1
xor
ret
cmp
xchg
cli
xchg
int3
loop
xor
shl
out
out
repz
stc
fxch
in
sar
call
aam
ret
hlt
addb
xchg
out
cmc
div
ror
fnstenv
out
leave
repz
aam
xor
aad
xchg
les
test
fists
cli
out
stc
and
ret
cmc
loopne
icebp
div
ret
in
cmc
fadd
in
in
xchg
xor
cld
hlt
aad
fstpt
loope
xor
lds
test
test
mov
hlt
cmp
lret
xor
cmp
lret
cmp
idivl
icebp
iret
idiv
icebp
ljmp
sbb
repnz
lock
iret
and
loope
xlat
stc
cli
mov
shr
mov
shr
ljmp
rorb
loopne
out
out
sti
mov
hlt
stc
int
fucom
jmp
repnz
lret
fdivr
cli
call
out
aad
incb
repz
hlt
out
iret
repnz
aaa
ds
std
jmp
out
in
in
fldl2t
loope
orl
xor
stc
iret
aad
aam
fidivrl
cmp
cld
xchg
jecxz
fisttps
xor
into
cmp
in
call
ds
rcl
loope
testl
cmp
jbe
mov
mov
jmp
rcl
into
test
mov
addr16
cpuid
jbe
jg
fiaddl
jle
xlat
fsub
fsubrp
jmp
iret
in
rcr
cmp
int3
fdivrp
lock
xchg
sbb
mov
adcb
xor
int
rol
lock
vpand
ret
repnz
icebp
mov
stc
fdivr
enter
out
jecxz
in
sti
jmp
jecxz
out
ficoms
loopne
cli
cmp
xor
std
out
out
iret
shl
aam
add
fcmovu
fstp
in
repz
mov
fmulp
divl
xlat
repz
aas
lret
aad
loopne
out
aam
stc
xlat
addb
out
lret
xchg
fcmovne
xor
ror
fldl
clc
sti
loope
out
cmp
nop
rorl
out
cmp
in
lret
clc
clc
ror
int
icebp
shl
std
test
lret
in
test
iret
out
xor
cmp
in
lret
iret
rcl
push
xlat
test
repz
cmp
int3
into
ror
test
in
icebp
in
cli
in
ss
cmp
shr
loopne
sar
fiadds
int3
test
lock
jmp
rcr
aam
rcr
sar
cmp
out
shl
cmc
roll
mov
xchg
lock
xor
icebp
leave
jmp
xlat
fdivp
cmp
hlt
out
mov
out
jecxz
test
xor
call
in
lock
cli
cmc
loope
lock
incb
jmp
in
rorb
out
cmc
leave
ljmp
loopne
ret
xlat
test
fcmovne
and
test
lock
xor
aad
hlt
roll
loop
iret
loopne
xlat
rcr
and
rcr
mov
loope
shl
sub
jecxz
out
repnz
jmp
loopne
xor
addb
jmp
into
faddp
shll
aam
jmp
out
clc
loop
shl
out
out
test
lret
mov
jecxz
test
lret
xor
in
shl
cmp
repnz
mov
cli
lea
lock
aad
shl
fdivr
icebp
fdivrl
xchg
sbb
call
mov
test
repnz
out
shr
fmul
xlat
loopne
icebp
cmp
rcl
loop
fbstp
rolb
rorl
scas
xlat
mov
xor
jmp
rcl
leave
int
aad
or
out
pop
cmp
rcrb
jle
cld
loop
into
clc
mov
hlt
nop
lret
xor
adc
fstp
loope
cmp
addb
xchg
aad
enter
icebp
enter
rcr
stc
xchg
icebp
mov
hlt
incl
repnz
hlt
call
int
sarl
stc
std
mov
ror
adc
out
loop
jecxz
jmp
in
idiv
repnz
enter
hlt
stc
sar
hlt
ljmp
mov
loopne
mov
call
shr
lret
cmp
cmp
int
xlat
mul
rcr
call
incl
aam
aad
iret
clc
leave
fucomi
int3
adc
aad
test
in
iret
out
xchg
out
mov
int
fsub
call
aam
in
aas
into
cld
ret
fdivrp
repz
lret
test
int3
std
repnz
clc
xor
int3
cld
out
sar
fcomp
lret
cmp
hlt
clc
std
dec
out
lret
xchg
xchg
stc
in
std
stc
aam
clc
fsubp
cmp
sbb
xchg
in
jecxz
ljmp
fnstenv
leave
in
cld
out
sti
fsub
mov
cld
fimuls
out
incl
iret
jmp
fdivr
cmp
ljmp
mov
testl
sub
ret
xor
fcmovbe
cli
cmp
fnstenv
cld
clc
addl
icebp
int3
ljmp
ljmp
iret
fadd
addl
nop
cli
cld
fndisi(8087
out
icebp
enter
lock
lds
fcomi
add
repnz
in
out
aam
xchg
icebp
out
leave
sarb
fdivrs
int
sti
cmp
vshufps
xchg
test
rcl
imul
repz
ljmp
xor
out
sub
sbb
out
in
ficoms
cli
xor
into
xor
cmp
and
incl
nop
nop
ficoms
in
aaa
mov
stc
hlt
sbb
adc
out
repz
out
out
sar
xchg
xchg
clc
xor
fcmovne
out
cli
repz
faddl
xlat
mov
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
xor
jg
fiaddl
jle
std
aam
lret
xchg
sti
jecxz
mov
int
icebp
sti
fdivrl
lock
repz
hlt
or
sti
fdivr
mov
incl
rcl
lds
leave
clc
aam
in
in
cld
in
loopne
xchg
test
div
clc
ss
iret
cmp
cmp
jmp
cmp
loop
in
fcomi
mov
loop
loopne
mov
or
xchg
iret
shl
in
xlat
int3
sarb
cld
cld
out
ret
jmp
out
flds
xor
test
iret
fdivrl
clc
hlt
shl
sub
out
leave
jmp
fcoml
cmp
ljmp
jmp
out
out
loope
xlat
test
test
fcmovnbe
lea
int
enter
fadd
fdecstp
cld
fmulp
in
test
fcmovb
and
cmc
in
iret
sti
mov
out
aam
into
cmp
xlat
sti
cmp
in
loope
fcomp
loop
iret
aad
adc
lea
xchg
xor
ror
in
aas
fmul
in
sar
std
test
lret
sbb
iret
xchg
nop
in
xlat
cmp
rol
fsubp
leave
lret
shl
iret
repz
ret
movb
fmuls
xchg
in
shl
idivb
fcmovu
fistpll
xor
cmc
rcr
fcomp
jmp
call
jmp
xlat
out
int
int3
cmp
rcr
test
stc
mov
fprem1
jmp
stc
cmc
aaa
roll
cld
les
stc
enter
xchg
mov
loopne
ror
jmp
aas
addl
out
nop
cld
lret
hlt
orl
aad
iret
cli
sbb
cld
fisttps
jmp
jecxz
rcll
in
fidivrl
leave
out
ljmp
fdiv
sbb
out
mov
loope
imul
lds
lock
iret
enter
ret
in
loopne
stc
test
call
xchg
lret
das
cli
fcmovne
into
cmpb
in
shl
fdivrp
fiaddl
lock
xchg
nop
adcb
clc
ss
loop
xor
jmp
iret
ret
rcr
fxch
in
incl
sub
lahf
jg
fiaddl
jle
cmp
test
shl
ljmp
loope
loop
fpatan
fidivrl
ds
cmp
test
jmp
repnz
nop
int3
lea
xor
repz
fnstcw
fnstcw
shl
stc
aas
ror
ret
lret
mov
into
decb
out
hlt
neg
repz
rcl
fcomi
jmp
cmp
fcomi
in
xchg
addb
xor
fsubrp
ss
icebp
fnstsw
out
ljmp
enter
shl
shr
enter
xlat
fcmovne
jmp
cmp
jmp
mov
int3
lret
xor
xor
cmp
xor
dec
fcmovnb
idivl
shl
not
rolb
mov
or
shl
in
xor
stc
iret
out
ds
neg
cmp
addl
mov
and
lock
repz
aad
not
into
test
loope
std
enter
mov
sub
out
rolb
xor
call
cmpl
stc
ror
sti
cli
jecxz
mov
icebp
fsubp
mov
aam
in
in
das
shl
call
test
fmuls
ljmp
repz
into
fnstenv
aaa
ret
cli
aas
sti
fdivrl
leave
les
out
sbb
icebp
shl
ret
rcl
div
stc
in
shl
shl
loop
fldl
cli
fdivr
sti
shr
loope
lret
out
jecxz
fsubr
cs
fsubrp
out
fptan
into
ret
loope
out
out
call
out
out
das
clc
ss
ror
rcl
loope
cli
sarl
cli
ds
mov
loopne
dec
jmp
vpminsw
cmp
cmp
icebp
movb
test
loopne
fmull
int
les
out
int
out
sub
into
loop
roll
stc
loop
fnclex
mov
cmp
iret
lock
int3
iret
neg
fcomi
fptan
not
fiaddl
iret
int
int3
xchg
repnz
cmc
fucomi
cmp
xor
clc
idivb
bnd
std
xchg
out
mov
out
test
in
xchg
jmp
sti
xor
mov
jmp
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
sti
neg
cmc
fmulp
vpaddb
cmp
jmp
jmp
in
out
test
clc
cmp
ds
cmc
sar
or
lock
in
mov
call
aad
in
cmp
int3
cmp
clc
ret
sarl
sar
faddl
mov
enter
mov
ss
fdivr
fxch
repz
clc
shl
rcr
in
in
sub
ror
cld
int
enter
ds
cmp
test
repnz
fadd
or
in
xchg
ror
stc
cmp
cmp
loopne
fnop
cmp
shl
enter
mov
loop
out
repz
test
fdivr
xor
addl
aam
fisttpl
nop
lock
leave
jmp
stc
fmul
repnz
test
fcomp
fcmovbe
xchg
icebp
ret
ret
xor
aaa
cmp
fcmovb
in
fdiv
aam
loop
cmc
fyl2xp1
fmulp
xchg
mov
mov
sbb
clc
clc
xbegin
cmp
sarb
hlt
enter
test
or
aaa
fdivrl
ss
cmp
out
sar
cmp
test
stc
jmp
repnz
in
fcmovne
fst
cmpl
test
fadd
cmc
add
out
cld
test
rorl
xlat
cmp
std
fmul
lret
fsubrp
cmp
in
cli
out
loopne
in
rorb
aaa
icebp
into
into
in
out
jmp
out
ror
cmp
fadd
lret
repz
rcl
enter
ret
lret
shl
fidivrl
repnz
lock
stc
shl
call
fimuls
subl
lret
xor
loopne
std
shr
adc
fdivr
ljmp
jecxz
nop
xchg
jecxz
repz
into
lret
loope
incb
icebp
mov
stc
fdivr
jecxz
ljmp
jmp
lret
cmc
sarb
cmp
xchg
call
leave
aas
in
enter
in
cmc
and
aaa
out
neg
call
jecxz
out
rcr
mov
adcl
leave
sub
jmp
leave
rcr
fcomp
cmc
pop
fildl
inc
mov
jle
int3
xlat
sar
cmp
sar
aad
not
lock
vpavgw
mov
int3
ljmp
icebp
clc
div
in
icebp
aas
loopne
ret
sti
mov
into
mov
enter
aam
xor
repz
int3
fidivrs
ljmp
fadd
cmp
jmp
fiadds
ss
cld
repnz
idivb
test
sti
shl
aad
xlat
xlat
xchg
ret
xchg
ror
ret
in
cmp
int3
in
stc
out
iret
loope
xlat
stc
loop
idivl
test
nop
in
test
leave
das
leave
out
rol
sti
iret
icebp
cmc
cld
ss
testl
xchg
jmp
in
shr
divl
in
lret
into
in
sarl
in
ret
loopne
leave
xchg
lea
jecxz
jmp
icebp
cmp
int3
sar
xlat
loopne
iret
fstp
rcl
mov
fsts
fisttps
ljmp
ljmp
rcr
aam
incl
into
xchg
std
loop
xor
enter
cmp
add
fucomp
in
cld
fcmovnbe
jmp
test
aam
fadd
xor
call
shl
repnz
std
test
in
fnstsw
out
and
dec
xor
int
int
aad
hlt
neg
sti
xchg
repz
leave
ljmp
rorb
sarl
out
xlat
aam
in
adc
stc
ret
inc
stc
int3
repnz
aam
aaa
jmp
shr
xor
ret
fadds
cld
mov
ror
loopne
cmc
das
in
ror
shll
cmp
aam
repnz
shl
flds
nop
sti
std
iret
std
xor
clc
std
cli
cmp
int3
cmp
aas
aad
fildl
jmp
lock
loope
xor
jmp
ljmp
loope
idiv
testl
in
xchg
xor
cmc
loop
in
fptan
std
sti
idivb
stc
ret
fmul
test
mov
sub
shr
cld
xchg
in
aaa
ret
fcomi
cld
loop
int3
cmpb
aad
fsubp
mov
adc
in
addl
add
rcl
iret
aam
aad
sarl
cmp
jmp
fiaddl
jle
in
xor
int
jmp
into
cmp
sub
fldl
addb
aad
out
lret
fldl
hlt
test
xchg
fsub
fisttps
shl
repz
int3
sarl
in
repz
iret
sar
out
xlat
cmp
test
out
jmp
loope
out
xor
iret
repz
xor
out
loopne
in
and
cmc
lret
mov
int3
into
fimuls
rcl
out
xor
into
cmc
rcl
ljmp
faddp
leave
mov
fucomip
popl
lock
lret
cmp
ror
iret
shl
aas
sarl
repz
jmp
movb
in
imul
lock
stc
ljmp
roll
std
in
in
lret
in
filds
hlt
out
repz
hlt
lret
cld
in
cmp
shl
mov
fcmovne
in
xchg
add
loopne
fldl2t
xor
std
fidivrs
lock
loop
out
cmp
add
out
nop
mov
shl
in
cld
fmul
leave
int
cld
fsubrp
rol
shl
aam
in
in
in
enter
lock
cmp
into
fyl2x
ljmp
imul
jecxz
xchg
cld
dec
out
repz
hlt
into
out
in
xlat
cld
clc
aaa
leave
loop
aad
movb
fcom
test
orl
fsubrs
stc
cmp
shl
stc
cmp
mov
jecxz
in
fxch
orl
not
imul
fidivl
cmp
sti
out
loope
ds
jmp
xchg
mov
int3
hlt
shr
sar
enter
cmp
aam
neg
aad
out
fiaddl
jecxz
ljmp
leave
stc
dec
cld
cmp
cmp
lock
decl
in
xor
ljmp
test
sar
shl
mov
xchg
out
repnz
cmp
clc
cmp
repnz
cmpl
xlat
out
lret
call
loope
enter
repnz
int3
cmp
hlt
ds
ret
ret
in
mov
push
loopne
pop
clc
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
arpl
jg
fiaddl
jle
repz
iret
dec
shr
in
clc
cld
das
int3
out
xor
fst
out
shr
hlt
fxch
test
mov
fldl
lret
iret
cmp
icebp
int3
fucomip
fldlg2
lock
test
cmc
out
in
out
cld
jmp
imul
jmp
fdivp
loop
loopne
cmc
ret
mov
shl
xchg
loopne
loope
das
rol
xor
int
cmp
aas
sar
rol
test
loopne
sar
xchg
in
shl
cmp
cli
divl
enter
sar
test
neg
fcomip
in
mov
rcl
orb
jecxz
repnz
ljmp
fisttps
fsub
les
loopne
xchg
out
lret
cmp
rcr
cli
cmp
lock
stc
call
lock
out
mov
xchg
aas
jecxz
xor
in
lret
stc
fcmove
int3
cmp
cmpl
cli
into
into
fcmovnbe
loope
out
xor
cli
out
imul
cli
idivl
adc
in
jecxz
xlat
mov
jmp
sti
in
xor
fsqrt
ds
hlt
jecxz
aad
shl
shl
clc
cmp
test
hlt
xchg
lret
mov
out
cli
repz
fmul
aad
loopne
call
lea
mov
jmp
div
icebp
fxch
clc
iret
lret
fdivrs
in
repz
leave
test
clc
enter
notb
aaa
ds
loop
repnz
cli
test
clc
incb
in
ficoms
in
aad
icebp
rcr
fnop
roll
xchg
xchg
icebp
xchg
int3
not
das
cmp
jmp
fucom
shr
ds
fcmovnbe
cmc
ror
aad
cli
in
faddl
iret
in
jmp
aad
std
ret
in
aad
rol
movb
loop
mov
xlat
ror
sti
out
iret
fucomp
sbb
fcomi
adc
ret
in
sti
fcmovu
mov
xchg
aaa
fsub
call
sti
into
lret
test
iret
fcmovnbe
test
lret
popl
nop
repnz
lret
in
vpsadbw
imul
in
fdivrs
icebp
cmp
imul
jmp
rol
lret
ror
int
aam
jae
pop
and
jg
fiaddl
jle
std
in
mov
in
mov
hlt
out
rcr
sti
aad
hlt
jecxz
cmp
push
loop
xchg
out
repnz
fisttpll
sti
iret
cld
xor
jmp
cmp
icebp
xlat
orl
fcmovnu
in
jmp
aad
ret
xor
aaa
ljmp
shl
loopne
cld
adc
jecxz
call
xor
xlat
cli
cmp
ds
cmc
hlt
xchg
xlat
fmul
in
test
xorl
fnstcw
sub
aad
bnd
aaa
cld
out
cli
movl
loope
into
into
int3
hlt
lret
jmp
cmp
test
out
rcl
aas
cmp
mov
imul
jmp
xchg
loop
call
repz
out
in
repz
rcr
out
int
test
fld
loop
ret
in
movl
aaa
fadd
cmp
lret
in
icebp
loop
cld
ret
or
loop
iret
fsubp
repnz
lock
lret
fcmovnbe
fdiv
in
faddl
cli
cli
int3
fxch
in
mov
int3
cmp
clc
icebp
out
loopne
out
ret
loop
sbb
mov
mov
xchg
mov
cli
ret
cmp
fistpll
cmc
cmp
testb
enter
xchg
loop
int3
out
icebp
leave
in
jmp
idiv
sarl
loop
adc
lret
add
cli
out
xchg
call
sti
call
aas
out
aas
rol
repz
fimuls
mov
xchg
call
clc
fmul
jmp
sti
icebp
enter
loope
stc
roll
mov
xchg
xchg
and
lret
cmp
in
into
lock
iret
aas
xchg
clc
fcmovnbe
mov
stc
enter
loop
fdivr
std
mov
loopne
repnz
aam
aad
cmp
sti
aad
rcl
mov
loope
enter
xchg
mov
xor
xor
leave
cs
rcl
into
fsubr
lds
leave
lock
aad
call
stc
into
cmc
sar
in
addl
xchg
hlt
jmp
call
faddl
sar
cmp
jbe
jmp
int
lret
lret
int
mov
pop
sub
fiaddl
jle
loope
sti
into
leave
fsubr
iret
iret
mov
fldln2
jmp
aam
ffreep
shl
clc
repnz
stc
orl
int
rol
cs
rcl
iret
in
lock
ljmp
fcos
out
mul
xor
shl
xor
lret
fdiv
sti
xlat
shr
addl
loopne
dec
icebp
addl
xor
int3
lret
aam
fsubrp
fmul
inc
mov
xchg
out
flds
out
jmp
iret
out
in
cmp
test
fadds
loopne
cli
mov
icebp
orl
lret
shl
aaa
call
std
cli
jecxz
stc
shl
in
mov
enter
out
ror
int
out
shr
cmp
faddp
adc
icebp
enter
sub
fcmovnu
sar
int
xlat
in
cmp
fucom
roll
nop
ret
cmp
aam
int
adc
hlt
repnz
loopne
div
mov
jmp
fndisi(8087
nop
shr
ror
cmp
ss
icebp
cli
rcl
sbb
call
add
ret
mov
call
lret
sar
ror
cmp
aad
mov
fcmovu
rol
sti
call
loope
lock
xor
call
enter
iret
in
cld
rolb
decb
xchg
iret
in
ret
rcl
xor
cmp
roll
fcom
jmp
hlt
in
aad
iret
cli
loop
ror
cmp
fnstcw
cmpb
xlat
ljmp
fcoml
iret
ret
imul
cmp
in
std
add
jmp
cld
in
repz
lret
in
xlat
sti
repnz
jmp
sbb
fsqrt
lret
jmp
mov
icebp
fucom
mov
repz
lret
cmp
int3
cmp
fcmovb
rcr
out
mov
lret
shl
aas
out
aaa
aad
sar
xor
repz
shll
xlat
loope
mov
int3
mov
lret
sub
das
cmp
hlt
int
repz
test
pop
jmp
ror
ror
aad
inc
push
data16
jle
loop
shl
movl
int3
out
xor
repz
jmp
hlt
ret
cmpl
clc
nop
test
roll
cmp
repz
idiv
cld
fucomi
jecxz
in
cli
loop
call
adcb
lret
cmp
call
shl
rcl
mov
cld
std
repz
aaa
leave
out
cmc
lret
stc
int3
shl
repz
xlat
aam
aad
enter
incb
aam
xor
cld
out
push
out
repnz
jmp
test
stc
call
loop
clc
ljmp
call
loopne
fistpll
cmp
loopne
rcr
cld
test
icebp
into
clc
loope
xor
loopne
into
roll
in
std
rcr
xchg
xchg
test
out
ljmp
leave
ds
ret
les
mov
mov
out
test
fmul
loopne
shr
sbb
aam
mov
call
repnz
xchg
jmp
aad
cmp
fmulp
out
rolb
hlt
addl
xchg
iret
call
leave
cld
aaa
out
fdivrp
cmp
cmc
leave
cld
in
dec
mov
test
xchg
loopne
out
sub
icebp
ss
cmp
aam
loope
fcmovnu
fabs
test
mov
hlt
out
out
jmp
fnstcw
ds
int3
int
shl
cld
hlt
jecxz
cld
sti
xchg
jmp
ss
icebp
aaa
ss
ror
hlt
sti
fnop
incb
fsubr
out
repnz
shr
aad
xor
cmp
cmp
fcom
fmulp
stc
int
flds
out
cld
ljmp
xchg
out
fdiv
cmp
fstpt
cli
idivl
xlat
clc
aad
fprem
fld
fsqrt
sti
out
lret
loope
nop
xor
jecxz
into
jmp
cmp
shl
aad
mov
test
in
std
jmp
rcll
rcl
aam
cld
in
into
aad
xchg
cmp
lret
in
lret
ficoml
aas
shl
ret
xor
cmp
into
pop
leave
ret
push
mov
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
pop
push
frstor
mov
jle
add
cmp
clc
lock
xchg
roll
lret
mov
shll
cmp
loopne
loop
and
sti
addl
sarl
enter
cld
out
lret
ret
test
call
fsubr
call
jmp
jecxz
in
das
fsubr
cmp
icebp
neg
testl
or
out
out
shlb
enter
fcomip
ror
aam
sar
shl
fiadds
and
lret
lea
lret
lret
neg
jecxz
std
sti
div
in
decb
xchg
icebp
fcom
out
xor
ror
cmp
icebp
ret
call
cld
fsub
mov
lock
xor
in
lret
fidivrl
test
std
xlat
ret
aam
sbb
loope
rolb
das
stc
fcmovu
out
call
aad
rorb
fucomi
rcr
xchg
stc
fld
in
fdivrs
repz
cmc
repz
sar
loopne
fmul
into
ror
out
xor
jecxz
icebp
int3
shr
int3
cmp
faddp
out
mov
mov
out
leave
jecxz
sbb
shl
xor
in
ss
cmc
out
int
mul
aas
rcl
shr
ljmp
lret
cmc
das
lock
clc
stc
jmp
fcomp
xlat
jmp
fisttps
ror
imul
in
out
aad
hlt
fcmovnb
aas
jmp
fxam
mov
leave
lds
jmp
mul
les
int
sti
out
lock
fdivr
cli
xchg
testl
xor
aam
ljmp
ret
cli
aam
out
mov
fnstsw
and
mov
rcl
jmp
lret
repnz
into
cmp
fsubr
jmp
fimuls
sub
ljmp
ljmp
fcmovnu
loopne
lret
cli
mov
jecxz
adcl
push
lock
shl
cld
rolb
loop
leave
mov
jmp
rcl
loope
out
fcmovne
stc
ljmp
aas
and
stc
sti
shl
in
int3
call
repz
mul
jmp
iret
cld
sti
fnsave
in
sar
rcr
jmp
int3
in
out
in
in
loope
sub
cld
cld
fsub
cmp
cld
clc
xchg
xchg
test
jmp
xchg
ror
shl
out
leave
sti
xor
test
repz
stc
orl
leave
loop
in
cmp
push
push
mov
movl
mov
push
jmp
rcl
leave
leave
fst
fsubrl
std
sub
cmp
movaps
jg
pop
add
fcmovu
cmp
cmpb
fcmovnb
shl
cmp
fiaddl
icebp
in
in
cli
sti
in
fidivrs
loop
xor
sti
lret
mov
ret
out
in
inc
xor
cmp
int
loop
fcom
cmp
fildl
xchg
lock
mov
repz
ss
cmp
xor
ljmp
cmpb
loopne
loope
loop
out
int
mov
aad
loop
icebp
ss
repnz
lock
test
fcomi
xchg
fsubrp
lock
idiv
out
cmp
fnstcw
cmc
repnz
fcmovne
orl
jmp
test
lock
aaa
idiv
aad
out
shr
lock
cld
cld
in
ret
test
cmc
jecxz
int
lock
cmp
repz
int
sti
out
loop
leave
in
clc
fucomip
out
out
in
shl
repz
sti
out
icebp
fdivrp
fildl
fsub
aas
cld
les
in
into
out
call
sub
das
hlt
fmul
sti
loope
xor
in
aad
test
shr
mov
out
fmull
in
ret
repnz
jecxz
aaa
in
jmp
fst
aad
xlat
cmc
test
out
jecxz
test
mov
in
leave
sti
ljmp
cli
testb
repz
in
cli
call
icebp
jmp
loop
std
rcl
cld
cmp
in
jmp
out
leave
icebp
aam
fucomip
rol
in
lret
ss
xlat
cmp
hlt
lds
mov
inc
in
in
test
shr
shlb
fadd
jmp
clc
jecxz
icebp
hlt
in
out
repz
in
in
mov
xor
clc
repz
das
enter
lret
sar
out
out
nop
jmp
cmc
lret
aam
enter
fmul
in
neg
aad
icebp
testb
jecxz
mov
fdivp
in
shll
repz
aad
loopne
jmp
test
aas
clc
in
jecxz
fucomp
iret
lret
repnz
in
rcl
jmp
ror
cmp
xchg
loope
or
test
leave
mov
loop
rcr
leave
sarl
repz
lret
into
icebp
cld
cli
call
fimull
out
div
fnsave
into
int
out
idiv
int3
aas
fscale
cmp
les
fistl
aad
fldl2e
ljmp
cmp
rcl
cmc
aam
xor
mov
leave
cld
in
shr
ljmp
xor
lock
aas
rcr
cld
iret
clc
and
xchg
sbb
in
in
xlat
sub
aaa
mov
jmp
int3
iret
xlat
ffree
fst
loope
sub
mov
push
movsb
mov
jle
add
in
xor
cli
out
iret
out
fsub
loopne
test
loop
loopne
sub
jmp
ljmp
ffree
adc
enter
jmp
fcmovbe
int
in
aad
loop
xor
cmp
int3
repnz
test
lock
jmp
call
xchg
ret
loop
ljmp
loopne
icebp
lock
adc
fsubr
mov
xor
in
cmp
aam
std
std
fcmovu
test
fucom
fcomp
clc
mov
enter
xchg
jmp
xchg
xor
loope
stc
int
in
int
cmp
repnz
loopne
in
and
out
out
orl
out
jmp
in
imul
ds
in
sbb
cli
jecxz
aam
stc
mov
out
cli
leave
cld
incl
out
jmp
stc
not
fldz
in
repz
stc
test
out
test
xchg
ljmp
hlt
xor
call
in
testb
int3
lret
mov
icebp
mov
in
icebp
int
jmp
stc
sti
ror
out
cmc
out
in
shl
idivb
xchg
loopne
call
in
int3
sti
int3
idivl
fcom
cmp
fcmovnu
ror
enter
jecxz
fsubp
in
mov
in
int
leave
cmp
in
ror
ret
cld
jmp
sub
std
test
loop
mov
rcr
loopne
shl
icebp
fsub
loope
shl
loop
aas
test
adc
sar
ljmp
aas
std
faddl
in
testb
jmp
lock
into
fsubr
clc
repz
fdivr
shr
aaa
jecxz
hlt
icebp
enter
lret
enter
repnz
iret
test
cmp
loop
cli
jecxz
aas
and
mov
fxch
xchg
call
loopne
out
imul
xlat
aaa
ds
shl
hlt
rorb
mov
ljmp
in
imul
in
div
repnz
sarb
cmp
loopne
loope
loope
aad
and
leave
in
std
in
xor
out
cld
xlat
loopne
clc
cld
loope
rorl
out
in
in
out
in
in
jmp
out
fcomi
repz
aam
int
repnz
test
orb
lret
int3
lret
out
aaa
lret
div
fdivp
sub
out
std
clc
fdivr
std
orb
iret
aam
xchg
shr
cmp
icebp
sar
adc
cmc
cmp
jmp
dec
jmp
in
hlt
xor
iret
out
cmp
int
cmp
ret
ret
leave
out
clc
add
out
lret
mov
aam
shll
jmp
ret
ror
aad
and
ja
pop
cmpl
hlt
divl
clc
fistpll
cmp
or
sbb
in
fcmovnu
cld
inc
call
ror
repz
clc
cmp
xchg
sar
in
test
rcr
fmul
rorl
jecxz
ljmp
icebp
fdivp
cmp
sbb
mov
mov
fidivl
fsub
lret
aas
out
lret
shl
and
sub
int
mov
or
ljmp
in
cmp
hlt
fdivs
cmp
ret
movl
mov
decl
xor
fadd
cmc
cmp
jmp
out
loop
out
aad
cli
rolb
lret
jmp
clc
aaa
xor
test
sti
ror
sar
shl
mov
fldl2e
out
decl
test
cmc
aam
fidivrl
fcmovbe
sti
iret
test
enter
in
fmull
out
xor
loope
lret
shr
aam
cmp
rcr
sti
fsubp
cmp
fsubr
orl
xor
in
rcr
test
ret
testb
mov
out
enter
out
stc
fsubp
fidivrl
aam
repz
fcmove
out
out
decb
mov
in
xlat
fsubr
cmc
repnz
in
loope
fildl
mov
in
out
cld
test
xchg
jecxz
in
int3
enter
out
test
xchg
out
std
in
in
call
int
clc
lret
fcmovnu
int3
aam
clc
into
ret
cld
cmp
loopne
cli
out
xchg
lret
ljmp
div
cld
icebp
std
cmp
hlt
fidivrl
sti
lret
in
cli
rclb
xor
fdiv
cmp
loopne
shr
sub
rol
aad
fdivr
int
xchg
leave
iret
in
lret
in
out
int3
mul
lret
ror
out
cmc
fildl
ret
in
repz
fdiv
test
shl
xor
lret
rcr
ret
fadd
xchg
fdivr
ret
mov
adcb
icebp
loope
ret
lret
in
shl
loopne
fdivr
stc
repnz
test
loop
jmp
icebp
loop
xlat
fmul
out
fmul
cmc
into
repnz
bnd
cld
mov
jmp
out
nop
loope
ror
loop
test
ljmp
fld
decb
loop
out
xlat
not
ret
out
lret
xlat
rcr
in
fildl
clc
sub
not
mov
ror
loop
in
fdivrl
aas
jmp
out
sub
sti
aas
out
into
in
mov
mov
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
jmp
mov
jle
xlat
xor
jmp
stc
std
neg
jmp
iret
mov
std
in
mov
ljmp
cmp
iret
fidivl
out
rcl
fdivr
test
adc
fdivr
xchg
enter
out
lock
cld
rcl
ds
shl
loop
sar
xchg
iret
rorb
test
sti
iret
stc
shl
fadds
loop
loopne
jmp
lret
mov
jmp
fldl2t
xor
fucomip
ds
in
add
test
test
ror
xor
ror
in
cli
jmp
aad
cmp
clc
repz
xchg
mov
out
mov
shl
sub
in
in
leave
lock
repz
hlt
lret
lret
mov
bnd
lret
sarl
fdivr
fsubp
in
fucomi
clc
call
into
in
int3
repnz
loope
ret
lock
cld
cmp
lock
vcvttpd2dqy
rcl
leave
loopne
mov
cli
movl
lret
testl
fstp
in
jecxz
into
int
orl
cmp
cmp
fprem
rcr
out
neg
test
xchg
repnz
fucomi
fcmovnbe
lret
lds
jmp
out
iret
in
into
aam
in
in
repz
out
ljmp
xor
sti
leave
in
xchg
in
std
loope
aam
cli
call
fst
cmp
clc
test
xlat
out
cli
nop
out
repz
div
in
in
fmul
ljmp
repz
loope
lret
loopne
xchg
aad
div
shl
icebp
int3
aam
cmp
loope
in
into
ds
fildl
test
jmp
out
test
jmp
cmp
out
into
cmp
fld
repz
into
int3
out
call
or
xor
leave
stc
cmp
shlb
stc
in
in
xlat
call
rcr
repnz
lret
fcmovb
into
shl
div
shr
loope
cmc
aad
loopne
call
out
ljmp
aad
cld
int3
cmp
stc
test
cmp
test
ljmp
fld
into
test
iret
cmc
shl
out
fdivl
cmp
sub
aas
cmp
fimull
leave
into
lret
mov
iret
ljmp
cmp
in
icebp
fadds
aam
jmp
int3
in
leave
ljmp
rol
in
in
clc
ljmp
out
cmc
call
cld
xchg
ljmp
nop
jbe
add
cmc
add
add
aam
aas
aad
iret
aam
adc
mov
in
cmpl
add
fucomp
out
xor
lds
shl
in
out
aam
cld
aas
in
shl
loop
rolb
into
jmp
int
aam
fdivr
fdivr
sarb
stc
lock
into
repnz
cmp
in
fcos
loop
shr
or
shl
out
aam
ror
sti
sbb
aam
mov
lret
leave
mov
xchg
xor
xor
into
in
int3
into
out
fcomp
int3
jecxz
ret
mov
jmp
cli
xlat
loope
mov
mov
repnz
repz
rcr
neg
xlat
flds
mov
std
test
mov
loop
fsub
ljmp
fdivr
xor
xlat
sti
aad
cmp
jecxz
in
jmp
int
enter
std
sarl
shr
sti
fadd
jmp
ret
and
out
hlt
repnz
out
imul
cld
cmp
sbb
push
sti
ret
jmp
icebp
loope
test
out
hlt
aam
sti
jmp
cmc
xchg
cmp
clc
in
fdiv
int3
nop
loop
das
cmp
shl
not
shr
in
rolb
cld
loope
rorl
lret
ss
xor
loope
in
hlt
clc
aas
cmp
out
inc
sti
sti
sti
lret
mov
in
ljmp
shl
loope
std
ss
stc
aad
ret
jmp
stc
mov
repnz
xchg
shl
into
out
rcl
fdivrs
inc
fcmovb
loopne
cmp
stc
in
icebp
repz
ror
ret
shl
sti
cmp
iret
cmp
sar
std
fucom
sti
fiaddl
loopne
fists
rcr
xlat
shl
roll
icebp
mov
sti
lret
mov
lret
sbb
xlat
imul
stc
in
ss
aas
xor
shl
aas
out
in
cld
addb
shl
in
xor
cmp
ror
cmc
stc
fdivrp
in
stc
fucompp
sar
cli
test
int3
nop
lret
test
shll
adc
fdiv
enter
test
std
nop
fisttpl
xor
sarb
aam
fdivp
rcr
out
icebp
add
vcvtdq2pd
xchg
lret
jecxz
repz
xor
mov
repz
int3
fadd
in
aaa
fadd
sti
in
fcomp
out
decb
int
in
out
xor
dec
cld
addl
in
out
loop
in
out
test
vpor
loopne
std
shl
shl
stc
out
repz
mov
fscale
out
int
in
icebp
xor
aam
aam
lock
xlat
shl
jecxz
aam
call
loopne
je
mov
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
sti
or
lock
int3
xlat
cmp
cmc
std
rcr
loopne
cld
rol
clc
mov
icebp
out
jmp
fdivs
aam
aam
cmc
cmc
jmp
out
in
loope
loope
in
xlat
mul
ljmp
mov
xor
cmp
rcr
std
inc
incl
lds
les
aaa
leave
shr
out
call
jecxz
out
cmp
ljmp
rcll
int3
aam
int3
cmp
enter
loopne
and
cli
std
mov
mov
xchg
xchg
iret
incl
repnz
lret
xor
in
fyl2xp1
cmp
std
out
stc
cli
mov
in
mov
out
xor
lock
lret
std
jmp
repnz
hlt
sti
rol
lret
std
ffree
lock
aad
cmc
out
idivb
fsubr
idivl
icebp
rcl
rolb
fsubrp
in
in
int3
xchg
fmulp
ret
in
lock
aad
hlt
aad
out
movl
lock
fcomip
sub
cmp
stc
enter
fcomp
stc
loope
out
enter
in
nop
jmp
ljmp
hlt
hlt
ss
shl
rcl
cld
enter
in
in
mov
sti
int3
into
aad
repnz
in
cld
lret
ss
icebp
in
sarb
sti
lock
aas
and
std
fcmovnu
loope
rorl
loop
in
imul
aaa
shr
in
icebp
xlat
addb
jmp
fdiv
int
addb
aam
jecxz
fnstsw
loope
in
cmc
hlt
in
sbb
loopne
lret
mov
stc
out
xchg
mov
in
sub
out
fcmove
fxch
clc
lret
aad
icebp
clc
fnstcw
in
cli
sbb
or
xor
out
sti
out
xor
aam
hlt
cmp
cld
jecxz
ret
out
xchg
les
in
cmp
ss
ds
sub
repnz
rcl
ret
mov
testb
jmp
int
xor
int3
cmp
shr
faddl
xchg
lret
leave
in
int3
in
in
out
out
cmp
cmp
faddp
clc
xlat
or
out
std
adcb
rol
divl
lret
fdivr
xlat
loop
aad
fiadds
xchg
test
repz
jmp
call
in
repnz
out
jmp
cmp
lock
xchg
movb
or
ljmp
cmp
rol
xchg
xchg
ljmp
cli
in
test
ljmp
shl
fadds
sti
test
mov
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
sbb
push
out
fst
xor
into
xor
fdiv
fucomp
cmp
cmp
hlt
repz
fscale
sbb
fstp
sub
enter
sti
ftst
sti
xor
test
stc
sbb
in
loopne
out
xchg
icebp
out
roll
sub
in
fcmovbe
icebp
out
in
lock
cmc
out
enter
into
nop
into
loope
int3
int
aad
jmp
cli
fidivrl
ljmp
in
fsub
in
repnz
clc
clc
fdivrs
out
in
ds
icebp
adc
loopne
cli
dec
out
addb
enter
rcr
leave
ljmp
out
movb
fisttpll
jmp
xor
in
ss
ds
not
ds
out
mov
flds
jecxz
lret
mov
xor
cld
out
ds
fiadds
xchg
mov
rolb
idiv
fprem
sar
cmp
fimull
cmp
ret
out
repnz
shll
cli
ret
ljmp
repnz
sti
test
push
jmp
fiadds
xchg
in
fdivr
aad
repnz
fsubp
and
sti
lret
in
enter
repnz
rol
sub
cmc
imul
cmp
ss
sarb
sti
cmp
ljmp
ror
jmp
enter
icebp
cmc
int3
cmc
fadd
out
xchg
out
rolb
aad
leave
fcomi
fcmovnbe
iret
sub
iret
fadds
mov
cli
out
jmp
in
xchg
nop
xchg
call
jmp
xor
ss
fucom
jecxz
fadd
fcmovb
cmp
fdivr
jecxz
ljmp
xor
int
cmp
fucomip
fiadds
cld
jecxz
out
mov
out
ljmp
lock
lret
repnz
cmp
jecxz
jecxz
dec
sub
loopne
out
sti
int
loop
aam
cli
int3
ss
fcmovu
lret
lret
repz
sarl
repz
in
fstp
in
xchg
fcomp
ljmp
incb
lock
sbb
std
rcr
out
mov
cmc
xchg
aam
shrl
lock
ret
cli
repz
out
sti
out
mov
mov
divl
shl
idivb
lret
rcl
cmp
cli
ret
fdivp
sub
shrl
icebp
fsubrp
cmc
xlat
cmp
in
xlat
std
aas
ljmp
loopne
test
orb
xor
rcl
ds
shl
rcl
icebp
rol
lret
clc
pushl
mov
jmp
rcl
int3
lret
fst
fstl
jae
push
dec
jg
pop
add
leave
fldl
repnz
out
ss
int
icebp
sti
jmp
rcl
ds
cli
ds
in
ljmp
fisttpll
aam
iret
xor
cs
stc
jecxz
in
orb
imul
loope
sti
shr
mov
call
cmc
iret
clc
cmp
cmp
loopne
rcl
call
lock
decb
xabort
aaa
jmp
test
rcl
or
xchg
shr
xchg
in
iret
xor
fucomip
lock
rolb
in
hlt
jmp
call
sarb
incl
clc
cmp
aad
int3
lret
xchg
repnz
xchg
ret
in
shl
rcl
int3
leave
aam
in
ds
test
roll
decb
xchg
xor
cli
stc
jecxz
hlt
xor
sbb
out
xchg
mov
loopne
roll
jmp
fcomi
cmp
jmp
shr
aad
into
stc
sarl
clc
jecxz
clc
stc
xchg
out
call
loop
les
int
lret
loop
in
loopne
aad
cmp
fcomp
in
mov
ror
repz
fcmovu
leave
out
out
leave
sar
lret
in
xchg
mov
ljmp
test
out
loop
xor
jmp
hlt
cmp
cmp
fcomp
aam
loope
jmp
cld
mov
in
xchg
lock
shrb
jmp
in
imul
iret
into
ret
iret
icebp
rol
fdivp
loopne
lret
in
in
shl
xchg
rol
shl
fcmove
std
dec
in
xor
icebp
fadds
xchg
mov
test
filds
div
cmc
in
xor
out
repnz
leave
testb
shr
repz
out
fdivr
lea
xor
repz
xor
rcr
int
loopne
icebp
out
cld
jmp
leave
leave
iret
and
int
xor
enter
incl
test
loope
loopne
ret
loop
fucomip
fimuls
in
xor
stc
cmp
jmp
icebp
out
shl
clc
loope
jmp
into
xlat
in
loopne
xchg
ljmp
clc
repz
aaa
ds
sbb
shl
hlt
out
out
fstp
rorl
jmp
cmp
repz
aad
ret
mov
mov
xchg
mov
sarl
lock
xor
enter
filds
mul
cld
dec
and
in
rcr
ret
ss
in
stc
cmp
cmp
repnz
test
in
out
sti
mov
lock
xchg
xor
loope
sarb
repnz
std
aam
out
loope
incb
add
jmp
aad
fnstsw
repz
xchg
dec
subb
jle
jmp
mov
imul
out
in
into
in
sub
xlat
in
out
sti
jmp
in
hlt
cli
ds
fcmovu
loop
loopne
fmuls
xchg
xchg
xor
iret
cmp
aad
ljmp
in
ds
test
in
cld
lret
fisttpll
iret
jmp
fmul
rcl
loopne
add
xchg
nop
int3
in
xchg
lock
jmp
shl
cmp
sti
aas
sarb
loope
cmc
loopne
clc
mov
xchg
repz
in
xor
cld
cmp
cmp
call
out
and
neg
in
fmull
xor
rcr
call
cmp
out
test
fadd
sti
call
test
sub
into
fcmovu
out
aaa
clc
in
clc
rol
cmc
shr
ret
fsub
cmc
lret
in
leave
xchg
lret
in
rol
out
out
not
call
sti
out
fimull
out
enter
mov
lock
out
jmp
jmp
lret
repz
cli
cmp
lock
ljmp
sub
jecxz
cmc
lret
out
shl
shr
lret
cmp
cli
and
hlt
cmp
sti
cmp
ret
in
in
mov
sbb
out
lret
imul
clc
out
aaa
out
leave
fidivrs
cmp
aam
out
jmp
repz
clc
fsub
rorl
lret
rcl
xor
cmp
out
cmp
xor
in
and
fimull
int3
pop
loope
lret
fucomi
jmp
mul
sti
out
mov
xlat
sti
into
out
loope
repnz
out
mul
xor
xor
fcos
int
rcr
cmp
shl
test
rol
out
jmp
hlt
jmp
in
int3
rol
enter
iret
xlat
testb
mov
call
xchg
test
xor
ror
cmp
cmp
cmp
clc
mov
xchg
ljmp
xor
stc
repnz
out
sar
fadd
addb
xlat
in
std
repnz
jmp
jecxz
out
into
xor
xor
sar
loope
out
test
cli
jmp
call
test
out
mov
cld
mov
xor
xor
fcmovu
std
fsubrp
sar
cld
int
rcr
test
out
int3
out
leave
mov
rcl
jmp
cli
fcmovnu
out
int
clc
mov
call
test
addb
xor
out
iret
sti
ror
cmp
icebp
clc
xlat
loop
fsubr
test
filds
sub
sub
jecxz
rcl
into
ljmp
hlt
and
lret
ffree
out
loop
call
fcomp
jmp
fnstenv
aas
iret
icebp
cmp
mov
jmp
iret
aam
aas
aad
iret
aam
ljmp
dec
jno
scas
mov
jle
add
test
loopne
mov
mov
ror
int
call
jmp
cli
icebp
and
ftst
mov
xchg
mov
leave
das
int
cmp
in
aam
cmc
fcomp
loopne
not
test
cmpb
test
repz
lock
cmp
cmp
sti
cmp
fistpll
out
cld
jmp
lds
and
loopne
in
std
sti
ljmp
test
call
test
clc
jmp
mov
lret
cmc
call
int3
shl
sar
xlat
aas
sar
xor
test
leave
mov
icebp
lret
lret
aad
lret
ret
aam
in
rcl
jmp
clc
vpsubw
imul
jmp
fisttps
lds
sti
sti
int
clc
in
ret
xchg
aad
cmc
lret
sti
fcmovne
iret
xchg
jmp
test
out
jmp
ds
sti
iret
cmpb
enter
sti
mov
iret
cld
int
xchg
xlat
aam
int
xor
stc
lock
xor
loop
cmp
call
leave
mov
mov
orb
out
hlt
test
fnstsw
in
stc
std
rolb
test
repz
push
lret
cmp
aaa
lret
in
filds
rol
repnz
in
fimuls
addb
hlt
stc
ror
rol
aam
ffreep
mul
cli
mov
hlt
shl
fiaddl
out
or
out
xor
cmp
aad
shl
cli
repnz
neg
mov
cli
call
xchg
int3
xlat
loop
neg
xor
loope
cmp
inc
sti
fisttpl
enter
iret
loope
call
cmp
jmp
fdivr
aaa
repnz
test
jecxz
int
cld
aam
icebp
lock
jmp
aaa
out
fdiv
repnz
lock
rol
mov
jmp
fsubrp
loopne
clc
cmp
stc
ss
cmp
fcmovbe
loopne
cli
clc
clc
lds
shl
jmp
in
xlat
hlt
xor
lock
loop
stc
in
rol
loope
ret
out
out
xchg
dec
into
mov
fildll
jecxz
cmc
std
aaa
sti
fldz
int
repnz
sar
ret
mov
leave
mov
nop
cld
xchg
aam
ret
mul
call
aad
cmp
aad
xchg
shl
out
rol
fstpt
clc
cmp
cmp
shl
in
and
fadd
neg
xchg
sti
out
roll
sub
shl
in
lret
fdiv
rcl
fmull
xchg
adc
jecxz
call
xlat
aam
mov
add
add
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
mov
clc
jmp
add
ror
aam
out
ret
in
mov
sti
test
lock
int3
clc
lret
cmp
lock
repz
cld
mov
int
std
cld
fisttps
ljmp
stc
cld
repnz
call
aas
sti
or
incl
adc
rol
shr
cli
out
loop
repnz
xlat
ret
mov
call
fmulp
fisttpll
jmp
fidivrs
loope
ret
jecxz
cmp
fmul
into
rolb
xchg
xor
cli
aaa
hlt
idiv
rcl
clc
shl
loopne
xchg
div
in
decb
aaa
divl
rcl
out
shl
clc
jecxz
loop
mov
mov
test
in
xchg
adc
loope
out
divb
icebp
div
out
imul
add
loopne,pt
leave
bnd
int3
enter
mov
shr
call
out
cmp
std
fcmovu
push
hlt
jecxz
mov
into
loopne
adcb
cmc
fmul
xor
fcmovbe
hlt
xlat
loop
rolb
mov
test
cld
out
aad
out
aaa
idivl
stc
divl
cmp
cld
aas
in
xchg
call
std
mov
xchg
xchg
xor
lock
imul
in
stc
jmp
xchg
stc
jecxz
xlat
mov
fsub
jmp
aam
shrl
fmul
loopne
stc
not
cmp
test
cli
iret
ljmp
lret
imul
aad
cld
test
xlat
hlt
jmp
ficoms
out
repnz
test
ret
lea
xchg
icebp
call
lret
jmp
cli
out
aaa
cld
fadd
aad
aad
leave
sti
std
out
leave
leave
mov
fildl
cmp
ljmp
cmp
shl
lret
sti
int
lret
xchg
in
call
cmp
ror
loopne
stc
loop
cmp
cmc
leave
fsub
out
sti
ljmp
hlt
loope
out
aad
out
clc
int3
idivl
div
jmp
loope
mov
in
out
xchg
repz
hlt
rcr
xor
fiadds
aad
ffree
sti
mov
flds
cmc
mov
lret
hlt
int
icebp
in
out
lock
not
cld
out
out
out
mov
int3
out
leave
ljmp
int
in
rcr
rolb
sti
and
mov
fadd
mov
xchg
jmp
aaa
repz
cmp
out
in
loope
loopne
cmpl
bnd
ljmp
jmp
int3
ror
fst
mov
fcoms
push
jg
pop
add
loopne
sub
rcr
lret
in
cli
out
xchg
shr
ss
out
in
xlat
lret
ljmp
ret
cmp
mov
xlat
test
out
fdivp
and
aad
cli
aad
out
fstp
into
repz
loope
filds
testb
out
xchg
shr
sub
shll
fdivr
fmul
filds
test
mov
in
mov
xor
repz
jmp
int
xor
std
in
neg
and
ljmp
out
xchg
out
rcl
hlt
idiv
xor
lret
into
sbb
ret
cmp
mov
sar
out
lds
aaa
cmp
jmp
shl
sti
cld
repz
mov
mov
addl
lock
out
sti
stc
fnstcw
xchg
loopne
loop
in
loopne
xchg
xchg
shl
repnz
cmp
into
fst
lret
in
aad
sti
les
loope
in
ret
xchg
fcomip
imul
xor
xor
int3
aam
sti
ret
in
fmull
faddp
mov
fucomip
jmp
icebp
leave
lret
out
out
out
cld
fnstenv
mov
fsubr
sti
in
nop
mov
out
xlat
ljmp
cmc
in
loop
fdivrp
aad
loopne
out
sti
leave
mov
aaa
clc
cli
fdivp
loopne
cmp
fdivrl
aas
jmp
call
lret
out
shl
int
hlt
lret
aaa
cmp
fldl2t
ljmp
faddp
and
lret
loop
xchg
lock
cld
out
leave
aad
aas
out
icebp
shl
clc
jecxz
test
call
out
jecxz
loopne
xlat
sarl
jmp
fistpll
xor
sti
filds
cld
or
int
xchg
lret
out
cmc
ds
fiaddl
xchg
loopne
aas
loopne
test
xchg
ss
in
in
lret
loopne
aad
clc
int
call
in
jmp
mov
mov
lret
ljmp
imul
mul
ret
into
add
in
fildl
repz
shl
out
xlat
das
lock
repnz
jecxz
fdivrp
mov
into
jmp
aaa
jecxz
fcmovb
xor
clc
fnstsw
iret
fdivp
repnz
xlat
aad
mov
xchg
xchg
int3
out
cmp
cmc
lock
sti
sar
mov
loopne
movb
out
icebp
cli
shll
cmp
xlat
cmp
stc
and
jmp
clc
out
jmp
iret
loopne
loope
hlt
mul
xor
cmp
jne
jmp
leave
aad
aad
int
jge
in
and
bound
push
jg
pop
add
imul
cld
repz
in
loope
ret
fistpll
rol
xchg
fsubr
jmp
cld
xor
repz
leave
enter
stc
int
dec
test
jmp
xchg
mov
addb
call
ss
fcmovnbe
cli
fcomp
test
stc
mov
xchg
xchg
shl
rcl
out
ljmp
icebp
into
xor
stc
rolb
out
adc
xchg
loop
aam
cmp
ljmp
sarl
xlat
stc
mov
int3
loope
mov
int3
sar
mov
clc
aaa
sar
lret
loopne
testb
fsubr
xchg
faddl
ljmp
out
in
cld
enter
fcmovbe
rcl
cmp
ret
ret
out
lds
jecxz
out
int
jmp
xor
div
aam
fdivrl
int3
test
fcomip
in
std
mov
ljmp
xor
repz
lret
cmp
out
adc
sbb
call
rorl
int3
iret
xor
in
repnz
xor
inc
aam
test
fildl
jmp
out
rcr
jmp
cs
lock
fldz
rolb
decl
out
fimuls
xchg
out
shl
fnstenv
aad
repz
out
leave
cmp
repz
lock
hlt
addl
int
std
test
in
aam
div
hlt
sti
aam
ret
fistpll
mov
icebp
lret
roll
clc
in
out
cld
sti
lock
rolb
loop
clc
in
mov
leave
shr
orl
out
cmp
in
fcmovb
test
test
cli
or
in
mov
jecxz
aad
cli
mul
leave
cmp
sti
aam
fsubp
lret
loope
jecxz
mov
xchg
loop
xor
xor
and
into
out
hlt
loope
xlat
mov
out
jmp
xchg
decl
rcl
fcmove
int3
cmp
in
fiadds
clc
mov
xchg
mov
xchg
xchg
icebp
loope
in
sti
out
cmp
test
shl
test
shl
call
mov
out
or
sub
ss
lock
icebp
int3
clc
fucomip
cli
movl
lret
nop
div
out
sub
sub
int
into
lock
fcmovnbe
loope
mov
sti
nop
cli
test
xchg
sub
leave
cmp
ror
cld
fmul
lock
ror
stc
cli
ljmp
into
in
iret
popl
int
xor
cli
repnz
int
loopne
ret
fndisi(8087
clc
sti
fsts
jecxz
jmp
cld
xor
jmp
ret
les
je
push
mov
adc
add
jle
add
repnz
sar
sarb
in
enter
xlat
icebp
jecxz
ret
fxam
std
clc
call
div
xor
xor
ds
aad
sarb
cmp
stc
hlt
aad
hlt
fsubrp
xchg
xchg
mov
clc
lret
stc
cmp
into
ljmp
loope
out
test
repz
out
loope
rol
out
cld
aas
fsub
fdivr
mov
mov
hlt
aad
fisubrl
leave
repz
aas
ror
ret
cmp
cmp
test
in
in
out
iret
int3
add
in
in
in
lret
aad
cmc
icebp
test
in
mov
mov
leave
fdivr
int3
int3
xor
jecxz
cld
out
sar
loope
in
cli
fmuls
cld
fcomp
fiadds
int3
rol
not
int3
repz
cmc
cli
lock
shl
fcomip
fmul
or
fyl2x
std
lea
loop
int
ljmp
sti
xlat
aad
out
fucomp
aas
loope
stc
repnz
xchg
icebp
repz
loopne
cmp
aam
jmp
std
cld
test
mov
iret
repz
fmul
ss
aas
cmp
cmp
shl
cli
loopne
mov
loopne
nop
xchg
test
iret
xlat
lret
hlt
fdivp
in
fstp
cmp
into
rcl
cld
repnz
lret
xor
add
roll
repz
clc
icebp
ljmp
clc
frndint
in
lret
into
mov
aam
out
out
xor
in
aad
cmp
fiadds
imul
leave
fisttpl
mov
in
fsubrl
cmc
cmp
xor
cld
call
in
lock
test
adc
xlat
fdivs
in
fdivr
ds
loopne
rol
fcmovbe
fucomip
enter
in
lock
sbb
ss
in
lock
aad
std
repnz
sti
xlat
shl
idiv
fiadds
fxch
fcoml
into
in
jmp
ds
loope
in
stc
rol
ds
fcmovbe
call
int
xrelease
xor
xor
enter
in
aam
fidivrl
cli
test
test
jmp
mov
or
ret
int
clc
fucomi
cld
cmp
cmp
int3
div
xchg
jecxz
not
cld
out
jmp
popl
repnz
lret
aad
iret
sarb
ret
aam
lds
in
in
shl
rol
out
jmp
cli
rcl
cmp
fadds
clc
neg
iret
mov
into
aam
lret
cli
repnz
fucomp
ljmp
fdivr
ret
sbb
in
out
mov
mov
jmp
rol
rol
rcl
aad
add
or
jg
pop
add
xchg
shl
sti
into
hlt
aad
cli
repz
aas
test
call
xchg
fldl2e
int3
hlt
lret
xor
aaa
out
aam
iret
into
or
cmc
ret
and
clc
stc
aad
int
addb
xor
out
test
sar
faddl
shr
shl
xlat
jecxz
fdivp
adcb
xor
divb
cmp
iret
aas
ljmp
loopne
in
vpmovmskb
mov
into
out
fmulp
divb
into
lret
icebp
out
ror
fmul
int
fcmove
out
add
adc
in
loopne
rcl
loope
mov
sti
repz
out
xlat
flds
test
in
out
repz
ss
lret
not
aam
int3
xchg
aam
leave
mov
xchg
int3
int3
fldlg2
in
stc
sarl
loop
fiaddl
mov
cli
test
fucomip
icebp
out
rcl
xor
repnz
clc
sarb
rcl
cld
fst
out
fst
sti
testl
das
icebp
loop
cmc
out
hlt
ljmp
cmp
xlat
clc
test
test
lea
repnz
out
std
aad
in
ss
lret
stc
test
out
hlt
xchg
test
out
jecxz
lret
int
rcll
out
idivl
fadd
xor
lret
test
aad
faddp
cmp
lock
mov
enter
iret
cli
in
aaa
stc
repz
jecxz
out
repz
aam
ret
int3
stc
out
in
adc
xchg
aam
xor
jmp
leave
loope
clc
shr
std
ljmp
rcr
fucomip
xchg
cmp
stc
sar
lock
in
call
jecxz
cli
jmp
nop
mov
lret
xor
xor
in
fcmovbe
into
cmp
aad
testb
fiadds
int
out
aam
sub
ss
jmp
aad
out
mov
test
test
in
call
xor
in
icebp
div
fcmove
fdivrs
hlt
sti
mov
rcl
fisttpll
repz
mov
aaa
int
sbb
std
std
in
call
xchg
xor
xlat
in
cmp
xlat
f2xm1
aas
hlt
test
fsubp
ljmp
out
adcl
clc
cmp
iret
aam
rol
fcompp
fcmovne
out
sti
mov
sub
fsubrp
int
leave
cmc
jecxz
repnz
xlat
fnclex
cmp
ret
call
out
jmp
in
hlt
shl
ret
repnz
jmp
jmp
imul
neg
out
out
enter
or
fstp
enter
add
mov
pushl
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
shr
scas
pusha
mov
add
mov
jecxz
cmp
cld
fxch
xor
rolb
cmp
ret
and
int3
loop
test
int
das
xlat
lock
icebp
out
xlat
lock
into
roll
sti
out
test
cld
orb
xor
sar
hlt
aam
neg
cmp
clc
fiaddl
jmp
orl
xchg
test
xlat
sub
int
int
cmp
into
cld
xor
fcomip
rol
mov
std
adcl
repnz
lock
lret
cmc
iret
call
std
cmc
in
sti
call
fdivrp
loop
aad
aad
in
icebp
fst
iret
xlat
fnsave
dec
fstp
cld
fsubp
call
mov
repnz
int3
clc
fdiv
out
lret
jmp
rcr
incl
test
mov
jecxz
xchg
xchg
xchg
xchg
mov
hlt
sti
in
out
std
cmp
cmp
fiadds
fsub
leave
rorl
cmp
jecxz
fdivs
xor
out
testl
orl
into
in
clc
leave
stc
cld
shr
icebp
rol
xchg
mov
out
lock
ljmp
out
jmp
inc
cmp
cmc
test
iret
std
in
in
ljmp
cld
xor
int3
into
fldpi
cld
shl
loop
sti
loopne
cmc
jecxz
stc
fcmovu
std
int3
loop
les
jmp
int
fmul
imul
add
neg
cmp
stc
cli
stc
iret
loop
out
jmp
jecxz
out
in
cmc
repz
bnd
shl
sti
aad
sti
out
mov
in
shr
jmp
lock
leave
enter
div
xor
cmp
in
aas
cmc
loop
fincstp
cli
enter
test
cs
cmp
aam
fstpt
iret
fcmovnu
aam
addb
fsub
nop
repnz
xchg
xor
test
incl
rcl
std
div
rorl
jmp
imul
ds
std
lock
sti
jecxz
adc
xlat
orb
enter
sarl
iret
test
std
out
ret
loop
vpaddsb
call
in
leave
shr
aas
loop
imul
repnz
fildl
fisttps
xchg
rcl
in
ror
out
fdivr
ljmp
in
in
or
loopne
loopne
call
ss
clc
into
out
cmc
fucomip
fdivrs
addl
xchg
iret
fcomi
cmc
xchg
int3
iret
fcmovnbe
cmp
cmp
jmp
fsub
filds
loop
xchg
jmp
xlat
ror
fld
and
test
inc
xchg
pop
or
add
in
xor
ss
rcr
xor
lret
out
lret
cmpb
fimull
jmp
mov
aad
out
stc
ss
xor
cmp
rcl
lock
fmull
mov
ljmp
cmp
iret
repz
out
sarb
iret
addl
jecxz
xchg
cli
fucomip
repnz
icebp
mul
out
cmp
not
stc
icebp
hlt
cld
test
aam
fucom
in
loope
ffreep
iret
ror
lret
test
shl
sub
fdivrs
cmp
int
in
rcr
fmul
aad
stc
ret
adc
rolb
call
repz
loop
idiv
idiv
xlat
fimull
mov
loop
rcl
div
cmp
in
cld
aas
ds
xchg
cmp
clc
shl
decb
int3
xlat
aam
fldl
iret
clc
aad
aad
std
cld
fdivrp
in
fdivr
nop
repz
repz
aam
fdiv
cmp
fildl
shl
jecxz
jmp
ljmp
vpaddb
ss
repz
shl
shl
repnz
mov
stc
in
in
xchg
cmp
fcom
repz
int
out
fcompp
repnz
les
iret
xchg
loopne
out
jmp
idivb
loop
hlt
in
sbb
shl
xchg
in
fisttpl
in
xchg
in
in
in
hlt
aad
shr
ljmp
fcmovnu
xlat
test
xchg
loopne
mov
call
fincstp
out
in
jmp
test
aad
ret
cld
repnz
mov
shl
mov
sarb
aam
repz
iret
cmp
xlat
testl
cli
fstp
hlt
jmp
loop
leave
das
out
cld
cmc
std
testl
fisttpl
out
sbb
ljmp
out
xor
leave
sbb
cmc
jmp
not
aam
rol
fildl
out
sti
nop
addl
fsincos
repz
sti
in
std
in
out
dec
xchg
lret
cmp
icebp
shr
divb
icebp
fnstcw
loopne
add
in
out
xchg
ljmp
xor
cmc
fdivrs
repnz
test
ret
loopne
sub
incb
xlat
ss
xor
cmc
push
test
loopne
loopne
fdivr
xchg
sti
xchg
xchg
jmp
repz
aaa
cld
cmp
test
sar
mov
fisttps
xchg
xchg
call
cli
jmp
inc
aam
fcmovu
cld
jmp
mov
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
and
jle
add
inc
cli
sbb
out
in
xchg
lock
xor
aaa
aam
icebp
fdivrl
sbb
in
clc
loope
fsub
lret
loope
mov
loop
in
leave
int3
xchg
iret
loop,pn
ljmp
sti
test
cmp
lock
lea
leave
shr
loope
ljmp
ss
fstpt
addl
shl
std
mov
cs
das
ret
lds
cmp
lock
in
rcl
testl
ljmp
call
cmp
hlt
fcmovnbe
cmp
fcmovu
in
loopne
clc
jmp
fldpi
nop
stc
jmp
aad
xor
fxch
ds
xlat
fnstsw
loop
iret
ffree
ljmp
repz
roll
lret
cmp
icebp
stc
into
out
fcmovnu
fcomp
into
orl
in
in
aam
ss
aaa
xacquire
jmp
in
int3
ljmp
enter
fdivrs
hlt
std
incb
ret
hlt
lret
lock
mov
loopne
ret
fidivl
iret
xor
incb
push
rorl
mov
rcl
clc
aaa
aaa
ror
shl
sarl
cmp
sarl
mov
loope
addb
lds
xor
jmp
fcmovnu
cli
int
fdivp
repz
xchg
sti
nop
out
in
xchg
in
cmc
ss
into
out
sub
cli
int
test
aas
fstp
fcom
fucomip
fdivr
loope
iret
mov
out
ljmp
xor
cmp
cmp
rolb
sbb
enter
fcoml
neg
xor
shlb
xlat
cmpl
sbb
cld
shl
sbb
clc
dec
sbb
in
loop
iret
cmp
icebp
shl
fcomi
div
icebp
cmp
jecxz
cld
fiaddl
fcmovnb
leave
into
fcmove
into
cmc
cmc
in
lds
divb
fcomi
cli
cld
rcl
aas
rolb
fdiv
mov
xchg
mov
sar
hlt
in
cld
cmp
call
fadd
lock
ret
cmc
jecxz
enter
in
mov
in
xor
ror
fstpt
iret
cmp
cli
in
fdivrp
ret
cli
ljmp
dec
in
aam
call
sub
shl
test
xchg
decb
mov
out
lret
in
aad
aaa
repz
lret
ret
iret
hlt
shl
cli
incb
sar
fucom
iret
lock
hlt
sti
int
xor
fiaddl
fstp
aam
stc
ffree
clc
int3
clc
sbb
nop
mov
jecxz
aaa
divb
enter
xlat
ds
hlt
into
std
pop
leave
ret
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
push
jle
mov
aad
clc
int
int3
mov
in
fcomip
in
lret
xor
cmp
jmp
cmp
loop
ret
fucomp
mov
out
in
xor
divb
aad
into
ds
movb
nop
in
repnz
xchg
and
int
fcmovbe
into
out
loop
sarl
hlt
fcmovu
repz
lea
inc
xor
ret
iret
out
xlat
cmp
rcl
loop
ret
fsub
test
iret
lock
mov
ror
ss
fnstcw
aaa
ss
jmp
ret
fcmovu
clc
sbb
cli
rcll
loop
cmp
out
ror
push
lret
cmp
enter
mov
test
orl
in
les
iret
in
xor
repz
xor
call
out
in
in
aam
div
fldcw
sti
jmp
shl
fucom
out
rolb
call
fdivp
ficoml
das
aad
in
aam
cmp
rcr
loopne
cmc
std
enter
test
fdiv
xor
cli
sti
cmp
lret
rcr
and
cli
call
out
sar
xor
sub
cmp
cmpl
test
cli
aam
loope
sti
loope
xchg
in
into
mov
ret
ret
stc
cmc
ljmp
adc
loop
fcmovu
sti
movb
in
jecxz
cs
shll
into
lds
icebp
shr
addl
ds
fstp
lea
out
cmp
ljmp
cmp
aas
shl
mul
cld
jmp
std
fisttpll
mov
cld
enter
aas
out
repz
xchg
mov
fadd
xor
cld
sti
cmp
rcr
cmc
in
aaa
repnz
jecxz
mov
decb
into
in
call
int
clc
in
cmp
movl
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
mov
in
push
jle
add
shl
xchg
out
mov
shr
int
out
xchg
shr
leave
cmp
cli
xor
sti
in
out
mul
jmp
xlat
incl
repz
in
iret
cmp
hlt
xor
lock
clc
out
jecxz
jmp
ret
loop
loopne
ror
std
nop
divb
xor
ror
ss
int3
ss
xlat
cli
in
fadd
les
hlt
icebp
xchg
clc
jmp
ljmp
in
fcmovnu
jmp
rcr
out
lret
in
xchg
cmc
xlat
call
stc
out
cmp
int3
cmp
shl
repz
and
ljmp
lea
cmp
sti
ss
cmp
in
aaa
repz
cli
into
jmp
ljmp
jmp
cmp
loopne
rcr
neg
addb
nop
rcl
mov
in
call
lret
test
sarl
xlat
cmp
fsubrp
repnz
mov
test
ljmp
sti
cld
cmp
out
imul
mov
leave
mov
sti
rcl
fbstp
lret
repz
std
lret
icebp
fdivrp
ror
cmp
icebp
and
in
xchg
int3
xchg
cmc
fadd
fdiv
repnz
fldln2
cmp
ret
flds
mov
nop
xchg
div
into
iret
into
test
into
aaa
cmp
xlat
addb
call
neg
iret
xor
cld
int3
inc
cmp
loopne
xlat
repz
fcom
std
xchg
sub
xor
in
out
fucomp
fadd
ror
and
xchg
in
ret
enter
flds
xor
jecxz
fcmovnu
xlat
fcom
fcmovu
hlt
not
ror
ret
fildl
leave
int
jecxz
nop
divb
shl
mov
cmp
dec
sarb
cmp
fcos
neg
shr
testl
repnz
lock
repnz
out
hlt
orb
xor
ja
add
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
imul
add
cmp
cmp
shl
out
hlt
xchg
call
out
int
ljmp
cmp
out
cmp
cmpb
filds
lock
out
repz
sub
ljmp
loopne
loop
shl
frndint
cli
or
mov
jmp
cld
les
iret
in
sti
lret
rcl
roll
shl
stc
call
cld
icebp
jmp
ljmp
fidivrl
repnz
into
hlt
int3
fcmovu
test
mul
ret
call
fdivrp
faddl
std
xchg
shl
in
fdivr
enter
ret
icebp
out
cmpb
mov
mov
sti
xchg
shl
ret
cli
lret
repnz
sti
idivl
xchg
aad
fcmovnu
jmp
xchg
mov
xchg
aam
xor
xor
out
aaa
cld
test
rcl
aad
ror
cli
test
ljmp
jmp
icebp
in
in
iret
out
cmp
lret
clc
fucom
icebp
test
orl
call
out
xlat
cmp
cld
loopne
cmp
shl
stc
cmp
jmp
fiaddl
jmp
aad
ss
sar
cmp
aas
call
ljmp
adc
clc
lret
xlat
repz
fcom
lock
in
ret
rolb
cmp
dec
ljmp
xchg
hlt
jmp
cli
out
sar
testb
shl
xlat
xlat
test
fmulp
fiaddl
out
repnz
repnz
xor
repz
cli
int3
inc
clc
cmc
idiv
std
jmp
out
shl
ljmp
icebp
xor
ds
rolb
call
loop
bnd
shl
ror
lret
int3
call
sub
xlat
ror
ret
loope
fiadds
xchg
xlat
ss
xor
out
aas
shr
in
ret
cmc
loop
into
fsubp
lock
jmp
int
rcl
mov
jmp
ror
aas
int
int
jbe
repnz
and
add
aad
cli
out
repnz
clc
mov
lock
rol
cmp
into
cmp
fsubrp
jmp
cmp
rcl
lret
aas
out
sbb
into
repnz
aam
aam
xor
aad
cmp
xor
out
orb
mov
xchg
icebp
aad
int
lret
cli
call
hlt
xor
div
sar
loopne
mov
mov
in
out
mov
in
cs
clc
rcl
out
cmp
in
out
cli
jecxz
mov
loopne
testl
out
div
jmp
ljmp
loop
repz
hlt
mov
jmp
call
jmp
xor
shr
aam
cli
ljmp
ds
sti
clc
mov
shl
mov
in
xor
cli
out
aaa
std
rcr
int
cmp
aad
std
mov
loopne
xlat
aas
mov
ljmp
in
hlt
jmp
aam
in
loop
xor
fadd
sub
jecxz
cmp
iret
rol
int3
aam
aam
xlat
std
lret
fiadds
std
sar
fld
fucomi
lret
lock
xchg
mov
shl
xlat
xor
cmp
fucom
xchg
in
out
lock
sub
into
hlt
in
repnz
fnsave
lock
aad
aam
fisttpl
in
mov
std
ljmp
cld
out
ss
shl
into
fld
flds
ficoml
lock
sub
cld
int
rcl
ds
in
fmull
mov
jmp
in
in
shr
aad
aaa
int3
loopne
xor
hlt
xchg
out
fcmove
cld
mov
sub
fucom
sub
jmp
icebp
xor
cmp
fcom
sar
hlt
test
test
mov
fsubr
out
xchg
mul
test
cmp
into
fstp
fcmovbe
rcl
test
jmp
lret
xchg
fists
ret
sub
ret
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
out
repnz
sti
xor
cmc
adc
out
xlat
in
adcl
into
cmp
into
lret
cld
addl
jmp
int3
in
fcmovu
out
call
xor
jmp
shl
loopne,pt
neg
int3
mov
lret
loop
or
divb
ret
in
rcl
icebp
cmp
test
in
test
int3
int
int3
lock
in
hlt
iret
loop
test
xor
in
cmp
mul
clc
in
sub
in
rcl
lock
out
clc
out
movl
in
lret
ljmp
cmc
shr
lret
in
sub
cmp
ljmp
leave
lret
out
fmul
call
xor
les
std
out
cmc
into
into
sarb
shl
cli
loop
aad
cmc
std
in
std
loope
loope
shl
shlb
cli
rcr
cmp
stc
iret
loope
std
hlt
lea
int3
fmull
xlat
divl
out
hlt
xlat
shr
out
clc
iret
out
repz
cld
xchg
test
ljmp
lret
rcl
std
and
add
repz
std
cld
in
mov
lret
loopne
cmp
repnz
cmp
leave
cmp
int3
aam
out
in
sti
xor
jmp
mov
in
xor
lret
jecxz
lret
frndint
ljmp
loopne
cmc
sub
fcom
jmp
lret
mov
loope
in
xor
leave
int3
fxch
iret
into
stc
cmp
loop
hlt
cld
lret
fcmovu
in
xchg
mov
loopne
rcl
fldpi
ds
into
into
ror
ret
neg
rolb
orb
loope
jecxz
test
in
in
test
fcmovnb
jecxz
leave
xchg
xchg
icebp
jmp
xchg
jmp
ljmp
out
iret
std
sar
sarb
fsub
xchg
lds
xchg
loope
ljmp
call
adc
test
cmc
incl
iret
xchg
test
aam
in
cmp
fld
stc
cmp
cmp
sti
stc
shl
xchg
int
xchg
sub
ror
out
in
jmp
xor
fdiv
out
cmp
xlat
filds
nop
rclb
lret
xor
icebp
rol
stc
in
rcr
cmp
test
out
out
fmulp
cld
test
fxch
jmp
neg
clc
xor
roll
dec
or
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
sti
jge
lock
jle
add
aad
jmp
out
iret
xchg
iret
int3
xchg
clc
hlt
xor
stc
into
fcmovnbe
aad
out
aas
add
les
xchg
iret
cmc
loopne
enter
cli
aam
cmp
div
aas
aas
in
loop
hlt
test
mov
fxch
xchg
call
call
idivb
xor
in
cmp
test
xchg
mov
or
xchg
jmp
cmp
lret
into
loop
iret
neg
sti
out
cli
incl
mov
les
shl
enter
cmp
cmp
cmc
xlat
call
lds
fsubp
repnz
xlat
xor
int
sarb
sti
aad
neg
faddp
leave
out
cmp
neg
in
jmp
lock
cmp
fcmovnu
fldl
rol
in
cli
fcmovnb
xchg
sti
mov
lret
lock
in
xor
idivl
rcl
jmp
sbb
fdiv
std
lret
into
or
in
nop
sbb
aad
icebp
fcmovne
int3
out
fxch
stc
div
out
lock
int
stc
in
jmp
xor
clc
cmc
xor
into
ds
hlt
bnd
fcmovnu
sub
mov
xchg
xchg
shrl
out
int3
cmp
int
cmc
in
sarl
fildl
loope
mov
test
xor
hlt
cmp
sar
std
fadds
ret
mov
decl
test
out
jmp
stc
cmc
ds
aad
cmc
cmp
incb
cli
stc
enter
shl
mov
out
aam
clc
xor
roll
repnz
icebp
aas
std
cmc
ffreep
add
test
ljmp
out
enter
std
xor
fcmovb
sub
mov
ljmp
fiaddl
xor
fmul
aad
ljmp
loope
jecxz
idiv
mov
out
call
lret
xor
jmp
loop
cmp
fadds
fmulp
mov
sti
mov
xchg
rcr
int3
fdiv
cmp
sti
aas
icebp
and
fsubp
leave
enter
mov
hlt
xlat
sub
neg
fdivrs
lret
jmp
cmp
icebp
shl
ret
fists
int3
in
lds
ret
xor
xor
stc
ds
loope
test
rcl
icebp
fsubr
fiaddl
call
out
xlat
sti
xor
aam
int
repnz
jecxz
repz
sti
xchg
in
call
xchg
xor
add
or
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
jecxz
ja
pop
jbe
jle
add
iret
xor
int
in
int
fmul
aad
ds
in
testb
xchg
fucomip
leave
stc
cld
in
xor
lock
in
sub
sar
adc
mov
loopne
ljmp
lea
in
icebp
fxch
cmp
jmp
rcl
repnz
call
rol
cli
out
test
roll
fmul
out
aam
out
rcl
cmc
out
loope
neg
clc
loop
mov
jmp
cmc
xlat
xor
sti
sub
int3
in
cli
ret
addb
mov
lret
loopne
ljmp
fsubr
repnz
xor
cmp
clc
out
hlt
fisttps
mov
loope
enter
in
cmp
out
in
cmc
sar
cld
mov
into
mov
push
jmp
loopne
xor
cmp
repz
fdivr
out
adc
loop
ljmp
fucom
loope
out
enter
xor
xor
cli
lock
fdivr
testl
xchg
mov
loop
lea
aaa
fcmovu
aaa
lret
xlat
jmp
shl
loopne
mov
cmc
mov
into
test
repz
jmp
enter
jmp
repz
repnz
fdivr
cmp
mov
leave
xchg
in
int3
imul
test
call
clc
stc
cmp
aam
mov
cld
fadds
mov
sub
xor
ss
lret
sbb
clc
mov
mov
rcr
sub
xchg
leave
fcmove
icebp
rcl
hlt
ret
cld
incb
neg
int
lret
in
lret
test
sub
shl
icebp
out
fsub
test
shl
in
ret
fdivrp
in
in
int3
cmc
ror
in
sti
enter
cld
rol
shr
push
ds
add
int3
jecxz
stc
ljmp
hlt
out
std
fdivrl
xor
cmp
idiv
enter
jmp
and
loope
into
aam
aaa
fcmove
fcomip
loope
loope
stc
fisttpl
aas
idiv
out
loop
into
lret
xchg
shlb
cmp
aaa
fmul
xor
loop
rol
out
not
fsubr
repnz
into
jmp
iret
int
leave
aas
or
fdivr
xlat
ljmp
int3
mov
mov
enter
int3
loopne
int3
cli
test
sub
loop
in
lock
xchg
jmp
call
lret
int
hlt
clc
fidivrl
into
ds
jmp
lret
aam
aam
jle
aaa
dec
js
jle
add
fincstp
test
fcoms
test
shl
out
std
aad
shr
rol
sar
jecxz
ret
mov
mov
jmp
fiadds
xlat
in
in
out
lret
lock
cmp
loopne
ds
aam
stc
neg
addb
das
out
ljmp
ret
ror
mov
sti
jmp
xchg
cmp
int
aaa
xor
lock
leave
std
shr
rcr
sarl
out
sarl
out
aam
clc
mov
jecxz
rcll
enter
fdivp
clc
cmp
cmp
ret
fdivrl
fcomi
jmp
jecxz
fucomp
loope
adc
sub
sub
out
cmp
jecxz
xacquire
lret
lret
xchg
icebp
loope
xchg
in
out
repz
out
cld
fidivrl
shr
in
fcomi
div
ret
aas
test
fmulp
sti
ror
xchg
mov
leave
aam
cmp
shl
int3
sti
out
jecxz
rolb
xchg
int
fildll
sub
shr
cmp
cmp
into
in
cmp
testl
out
in
out
ret
stc
lret
cmp
call
fsincos
aam
out
std
in
out
lret
in
fdivp
orl
in
clc
jmp
fpatan
cmpl
orb
fmul
std
addl
ss
filds
test
jmp
orb
into
in
fsubr
sti
fucomi
leave
loope
xor
fld
std
std
filds
fxam
in
and
cmp
hlt
roll
sti
cmp
addb
clc
loopne
lret
leave
nop
shl
jmp
shl
xlat
ss
bnd
loope
fcmovnu
call
orl
jecxz
int3
clc
das
rcl
ss
int3
lock
fnstcw
cli
cld
sti
out
std
mov
in
out
iret
repnz
lret
jecxz
out
dec
aad
ds
fldl
call
flds
icebp
jmp
jecxz
int
idivl
lret
cmc
fdivr
rcl
in
xor
in
fdiv
lock
jecxz
vpsllw
lret
fcmovbe
sti
fdivp
aas
in
cli
in
aad
mov
in
in
mov
fld
out
jmp
out
sti
add
call
xlat
std
jmp
jmp
clc
cmp
in
cld
xor
aas
sar
testl
vphaddubw
jmp
into
lea
orl
jmp
int3
ror
int
lds
es
std
jnp
jle
add
lock
icebp
int
lock
fst
cmp
loope
sti
loopne
sti
mov
fstl
clc
fcmovbe
xor
cmp
aad
shl
fcmovnb
fcom
shl
test
call
repz
neg
sub
xlat
lock
ds
fdecstp
fmulp
stc
sbb
mov
hlt
shl
call
cmp
test
lret
sarb
jecxz
fldpi
jmp
in
out
aam
lret
fdivl
out
call
out
std
sti
aam
fstp
addl
loop
fincstp
repz
jmp
loop
cmp
shl
mov
in
and
lret
hlt
shl
repnz
aad
enter
xlat
sub
icebp
cmp
loop
in
out
out
fucom
mov
xchg
cmc
div
sub
out
xor
cmp
icebp
sti
stc
lret
clc
repnz
loope
ret
xchg
shl
mov
iret
xor
cmp
cmp
in
in
sar
xlat
faddp
hlt
out
in
nop
iret
orl
out
aaa
enter
in
into
aad
out
stc
xchg
faddl
mov
in
shrb
test
cli
f2xm1
out
int3
cli
not
aas
enter
lret
clc
in
incl
icebp
hlt
not
leave
cli
idiv
jmp
div
ret
test
xchg
cld
lock
xchg
xor
cmp
out
dec
cmp
enter
mul
into
fxch
mov
loopne
ret
shll
idivl
cmc
xor
repnz
in
fsubr
stc
cmc
hlt
ljmp
jmp
loopne
shll
xor
stc
sti
fnstenv
lret
in
icebp
std
in
loope
xlat
lds
in
out
nop
xchg
icebp
rolb
xor
leave
rcr
sarb
vpxor
fsubrp
leave
std
out
int
xchg
in
aam
idivb
xor
shl
int
loopne
fucomp
loopne
ret
cmp
leave
jecxz
enter
test
faddl
in
ret
sar
hlt
lock
roll
jecxz
cmp
adc
iret
rcr
into
aam
out
jecxz
std
fstp
or
roll
sbb
fisttpl
out
lds
ret
clc
jmp
cmc
std
int
cmp
fdivr
ret
orl
ret
in
in
ds
fcmovnb
ret
ret
stc
aam
and
out
out
xchg
sar
repnz
xlat
cld
idiv
xor
shll
enter
test
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
fs
lods
sub
add
add
cld
fdiv
in
fadds
out
lock
xchg
aas
sub
cmp
sar
shl
cmp
jecxz
rorb
std
mov
lret
out
int3
icebp
hlt
fucomp
cmp
stc
in
out
lock
rcr
movl
lock
xor
ss
rcl
sarl
fcomi
clc
sub
out
xor
aaa
call
lret
out
lds
loop
addb
enter
hlt
xchg
out
cmc
das
sti
sti
shr
jmp
aam
out
aad
repz
hlt
testl
repnz
hlt
xor
xor
enter
cmp
xchg
test
clc
std
fisttps
rol
ret
fcmovnbe
sti
cmp
into
icebp
cld
ds
icebp
loopne
cli
test
iret
out
aaa
repz
xlat
cld
rcl
xor
cmp
roll
xchg
cld
fldl
jmp
out
in
out
cmp
sbb
in
in
nop
and
xchg
in
cmc
xchg
iret
shr
jmp
fdivr
rcl
loope
test
cmp
in
jmp
test
xchg
mov
in
out
test
cmp
ds
hlt
test
std
int3
cld
xchg
lock
in
shlb
xor
jmp
hlt
rcl
cmp
ds
cli
test
out
call
nop
ret
fdecstp
fnstenv
ljmp
shr
sti
xchg
hlt
repz
int3
shl
repnz
loopne
cmp
in
lret
rol
in
cmp
loope
out
fucomip
idiv
lret
filds
sar
xor
cmp
in
stc
fcmovnbe
cmp
out
xchg
out
in
cli
cli
fmulp
xchg
repnz
call
aam
cmp
test
test
les
iret
out
shl
out
aam
xlat
in
fildl
loop
fxtract
ret
out
enter
xchg
std
mov
leave
cli
loop
xor
loope
aad
ds
hlt
int3
out
sti
mov
fimuls
xor
ret
enter
cli
iret
aad
cmp
push
in
xlat
fxch
stc
adcl
out
ss
cli
aaa
in
in
cmc
cmpl
test
enter
lret
call
mov
jmp
aad
into
roll
loopne
neg
xchg
ret
lret
jmp
aad
lret
enter
fcmovnu
push
icebp
ret
or
pop
add
jle
add
fsubrp
out
out
loop
les
iret
cmp
in
lret
fcmovnbe
std
aam
sar
loope
out
repnz
xchg
xchg
cmc
ss
in
aam
cmp
cmp
sar
stc
cmc
testl
ljmp
hlt
mul
cmp
jmp
rolb
mov
xlat
lret
mov
jmp
ret
cmc
cmp
cli
sarl
cli
icebp
in
sti
cmp
lret
into
jecxz
xchg
cmp
hlt
call
sbb
fnstsw
clc
std
aad
in
loopne
out
cld
jecxz
test
cmp
xlat
repnz
repz
cmp
rol
imul
in
loope
mov
mov
ljmp
cli
aaa
call
cmp
rol
in
xchg
cld
xchg
divl
cmp
aas
rcr
repz
repnz
clc
ret
test
lret
loopne
or
in
out
in
fidivs
ljmp
cmpb
aam
cld
jecxz
cld
mov
icebp
aam
leave
call
aas
roll
shl
in
fadds
out
fmulp
lock
neg
out
aad
loope
iret
cmp
mov
rcr
ds
lock
in
in
decb
rcl
cmp
fcmove
out
xor
loopne
ffreep
in
jmp
out
fucomp
out
lret
sti
in
out
xor
les
xlat
ds
in
out
cli
xchg
mov
icebp
ljmp
ds
ret
fsubp
inc
lea
lock
xor
into
cmp
cmp
cmp
jmp
mov
stc
lret
out
in
into
xchg
ret
into
aad
cmp
test
call
cli
loopne
std
xlat
stc
cli
repz
mov
push
in
loope
hlt
leave
out
hlt
aam
cmp
cli
jmp
loope
testb
test
ss
out
hlt
clc
sar
cmc
test
ret
lret
loopne
ljmp
mov
in
out
xor
repnz
aas
in
into
loop
repnz
call
lret
out
loop
shr
ret
jmp
sti
int3
fcomp
cmp
jecxz
mov
fisttpll
jmp
aad
xor
ds
sti
fcmovu
ret
aam
std
les
loope
shl
xor
stc
enter
int
loopne
add
mov
mov
xor
jmp
enter
int
enter
push
add
add
mov
add
add
rcl
cli
adc
enter
fsin
mov
iret
imul
aaa
jmp
call
sbb
loopne
clc
rol
jmp
fsubrp
mov
shl
iret
out
in
sti
aad
std
int3
cld
cmpl
lret
fsubr
fcomi
test
mov
in
cmp
icebp
cmc
call
test
call
mov
test
aad
hlt
cli
imul
std
fcomp
add
lret
test
leave
lret
loopne
in
xchg
iret
repz
into
out
in
enter
repz
in
out
aam
ror
mov
popl
aad
jmp
cmp
idivl
ror
ret
lock
into
std
out
loope
les
clc
jmp
cmp
adc
lock
ljmp
test
ljmp
xlat
lds
shr
cmp
cmpl
cli
loop
aam
ds
fxch
xchg
ffreep
shll
int3
clc
xor
aam
fnstsw
sar
in
loop
out
xchg
mov
test
xlat
lret
idivl
aam
cmp
loope
xchg
hlt
rol
leave
idiv
xor
mov
mov
xchg
mov
cmc
out
shr
hlt
shll
cld
lret
testb
idiv
loope
mov
ljmp
in
cmp
enter
into
iret
fdecstp
test
idiv
in
sar
mov
into
mov
in
cs
shl
cmc
xlat
bnd
cmp
xlat
in
mov
xchg
fiadds
aas
out
in
enter
cmp
icebp
jmp
cmp
xlat
loopne
mov
in
or
fld
lock
sub
int3
rcl
in
int
cmc
cmp
repz
jmp
clc
xchg
repnz
lret
loop
mov
ss
xor
aaa
call
ret
fnop
ret
stc
ffreep
leave
cmp
int3
lock
cmc
lret
ret
clc
cld
call
jmp
sbb
cmp
lds
repnz
in
out
jmp
clc
sti
fsubrp
icebp
imul
neg
rcr
adc
mov
fucomip
clc
mov
call
das
leave
ret
test
div
cli
cld
fdiv
out
fadd
test
orb
shl
enter
cmc
rolb
ret
les
fmulp
mov
enter
xlat
lock
fstp
jmp
clc
cli
fcmovu
leave
add
int
fcmovnu
icebp
xor
jmp
aas
lret
fcmovnu
xlat
aad
jno
in
subb
push
add
add
lret
xchg
in
xchg
in
repz
std
into
cmp
out
cmp
cmp
roll
ljmp
loopne
xchg
leave
shll
cmp
sti
aaa
jmp
jmp
addb
cld
mov
xchg
mov
int
and
in
fxch
idiv
cmp
int
loope
sti
int3
in
iret
stc
ret
fcomp
fcmovbe
in
mov
cli
into
repnz
xlat
xor
in
int3
aaa
out
ds
imul
icebp
loopne
fxtract
cmc
test
enter
in
out
shl
mov
mov
repnz
xor
xlat
out
in
cli
fsubrp
lret
ret
iret
fcom
out
jmp
xor
fst
mov
stc
xor
in
lret
iret
shl
fdivp
in
test
loop
lret
incl
repnz
cmp
rol
cmp
xchg
cld
loopne
std
mov
fld
loopne
fadd
lock
loopne
ret
ret
xor
jmp
out
xlat
loop
jmp
roll
jmp
loop
rcl
fsubrs
jecxz
int3
lock
in
sar
in
ret
or
in
loop
mov
adc
ret
ljmp
cmp
les
cld
adcl
lret
icebp
xor
int3
out
cmp
fcom
idiv
cmp
decb
mov
std
inc
sbb
xor
fidivrl
sbb
loopne
hlt
sti
cld
in
ret
loope
lock
filds
lret
into
in
fmul
repnz
faddl
fdivp
mov
ljmp
iret
mov
mov
ret
shl
vpor
adc
stc
fdivr
jecxz
and
xchg
mov
sti
test
int
lret
aam
shl
out
stc
xor
iret
cmp
in
xchg
rorl
nop
out
iret
xchg
cmp
xlat
out
aaa
jmp
jecxz
into
cmp
fcomi
and
mov
xchg
fucomip
leave
xlat
out
aad
rcl
fcmovu
rolb
jmp
loope
mov
shl
aad
xor
cmp
cld
cmp
loope
loop
loopne
jmp
loop
sti
out
repnz
rol
hlt
std
sti
aad
call
cmp
mov
test
hlt
mov
in
rcr
std
adc
adc
cli
jecxz
fcmovnb
int3
in
lret
in
ljmp
in
clc
into
adc
fsub
ljmp
push
nop
lret
jmp
cmp
mov
mov
jmp
into
enter
int3
fwait
outsb
mov
sets
push
add
icebp
addb
jecxz
enter
decb
call
aaa
fcmovb
cmp
fsubr
fiaddl
std
iret
mov
loopne
jmp
fiadds
and
loop
incb
fstp
lock
loope
int3
cli
ret
fstp
ljmp
out
fmuls
incl
out
int3
xor
iret
loopne,pt
fcos
test
cmp
aad
repz
mov
cmc
mul
fdivr
dec
xchg
in
loope
in
stc
in
std
in
cli
out
cmpl
cmpl
sti
mov
test
jmp
rcr
out
imul
lock
lock
addl
fdivr
test
xor
jmp
cmp
cmp
mul
ffreep
ret
loopne
fadd
fcomip
jmp
jmp
ret
into
out
xor
divl
std
icebp
into
cmp
rol
shr
test
lret
xabort
xchg
out
cld
xchg
out
ss
ret
xor
out
in
cmpl
sti
in
fsubrp
ljmp
and
cmc
in
out
hlt
fidivrs
fcmovbe
into
jecxz
into
idiv
inc
jecxz
leave
loope
push
lret
call
repnz
cmp
fdivp
jmp
cmp
shl
shl
adc
in
popl
nop
loope
repnz
out
int3
enter
fdivrs
ds
cld
and
loop
fmuls
call
leave
out
cmp
sti
ljmp
xor
cmc
fildl
and
in
shl
mov
loope
xor
jmp
in
jecxz
in
repz
movb
mov
clc
jmp
out
clc
adc
loopne
roll
fcomp
jmp
int3
int
out
loopne
ret
xor
out
cmp
hlt
in
sti
clc
loope
sbb
push
xchg
int
mov
mov
xor
call
loop
ds
aad
ffree
lret
fchs
in
test
faddl
xlat
repnz
xlat
lock
sub
fiadds
aad
dec
loope
xchg
shr
hlt
lock
call
lock
loopne
loopne
ret
cli
mov
addb
mov
ss
in
fmul
in
call
enter
jecxz
cmp
sarl
jmp
mov
jecxz
filds
sti
xlat
xor
cmp
aam
repz
imul
decl
add
add
iret
int3
into
fstp
pushf
mov
out
cmc
xchg
or
jle
add
mov
rcr
cmc
int
aam
shl
xor
cmp
cmp
cld
hlt
cmp
cld
fcomp
fimull
out
roll
enter
repnz
mul
test
incl
fisttpl
not
cli
int
cmp
int3
aas
cmp
call
dec
sub
shll
xor
clc
neg
loope
out
jecxz
fiadds
ret
sbb
xchg
loop
rcl
repz
clc
enter
cld
cmp
test
filds
jmp
lret
lock
fcmovnb
rorb
int3
jecxz
jmp
lock
loope
test
aam
cmp
mul
incb
xor
out
jmp
into
loop
in
shl
cmp
cmp
shlb
xchg
mov
cmc
test
in
loopne
sub
divb
ss
out
fincstp
fucomip
loopne
addb
int3
ror
cld
into
rol
xchg
into
stc
lret
sub
lret
call
rcl
call
imul
lock
fdiv
call
stc
rol
vpsubusb
or
shl
shl
fld
ljmp
loopne
mov
int
xchg
clc
into
fcmove
out
ljmp
out
xor
faddp
in
orb
and
shl
in
cmp
fucomp
aas
fstp
test
shr
ror
fcmovb
out
mov
mov
into
cmc
les
leave
stc
std
fsubrp
cmp
shl
jecxz
cmc
jecxz
leave
iret
out
popl
div
xor
out
out
xor
test
fprem
fucomip
cli
cmp
enter
ljmp
divb
jmp
xlat
addb
out
xchg
int
fstl
icebp
in
out
shl
lock
jmp
hlt
stc
jecxz
stc
xlat
hlt
jmp
stc
addb
out
shlb
fxtract
std
iret
fnstsw
xor
fsub
mov
fcmovne
shl
in
in
loope
out
stc
cmp
ljmp
cmp
cmp
ret
out
fsqrt
xchg
lret
sar
repz
xor
cmp
loop
out
neg
xchg
dec
rcl
lock
aad
fstpt
std
ss
lock
into
aas
idiv
loopne
cmp
test
loop
out
div
aaa
hlt
icebp
aad
cmp
mov
add
mov
mov
jmp
rcr
int3
ror
fcmovnu
arpl
adc
push
add
add
repz
ljmp
fcmovu
test
in
sub
iret
fxch
out
in
aaa
sti
cmp
iret
loopne
fcmovnu
loope
call
xchg
fcmovnu
hlt
ljmp
cld
shl
out
ror
aas
test
out
cmc
xchg
cli
mov
repnz
xchg
loop
ret
xor
lret
cld
out
fadds
fcmovu
hlt
fcmovnb
in
mov
enter
leave
int3
fucomp
out
neg
cmp
in
repz
clc
ljmp
adc
fcmove
testl
leave
into
jmp
std
sti
in
in
cmp
fcmovnbe
fnstsw
in
mov
mov
call
test
cs
in
xor
repnz
loopne
cmc
out
icebp
icebp
fidivrs
out
in
enter
xchg
test
lock
lret
int
cmp
sbb
test
mul
lds
nop
divb
shrb
ret
xor
int3
xlat
cmp
in
shl
lock
fdivr
repnz
int3
loope
ror
lret
lock
rcl
fdivrl
fistpll
cmc
jecxz
icebp
repz
fimull
mov
std
mov
repz
cmp
xlat
neg
jmp
rolb
jmp
nop
addl
cli
cmp
xor
cld
iret
hlt
test
ds
aas
cmp
or
out
out
repz
pushl
int
repnz
fsubr
clc
not
call
mov
rorb
clc
hlt
aaa
hlt
lret
jmp
in
push
rcr
filds
mov
shr
imul
shr
cmp
int3
aam
loopne
call
orl
jmp
ret
aaa
fcmovbe
rcl
cld
cmp
les
call
xchg
out
shlb
sar
cmp
xlat
cmp
cmc
sti
rol
fsincos
lret
cmp
fucomi
lea
ss
icebp
cmp
fstp
loope
test
sar
addl
enter
cmp
repnz
div
loop
sti
into
lock
in
sub
int3
xchg
jecxz
icebp
xor
out
aad
in
clc
fnsetpm(287
cmp
rol
hlt
stc
out
cli
out
fists
out
in
jmp
repnz
jmp
sti
repz
idiv
fsub
fsubp
sti
fcmovnu
out
fdivp
rcl
jecxz
into
out
shr
cmp
cmp
faddp
rcr
out
in
enter
jmp
enter
aad
leave
fnsave
cmp
insb
sbbl
add
lret
test
xchg
ljmp
into
cmp
aas
int
repz
fcmovbe
ret
mov
enter
repnz
loopne
sub
fsubrl
cmpl
ffree
loope
into
icebp
mov
jecxz
in
mov
in
shl
out
ror
and
xchg
out
xchg
fadd
fimull
in
into
cs
int3
xlat
lret
aaa
sar
shr
xor
sti
mov
clc
test
lret
jmp
jmp
out
repz
std
cmp
cmp
cld
testl
fmuls
in
cmp
xlat
out
jmp
stc
cmp
cli
test
cld
cld
shl
out
lret
icebp
fistl
aaa
fidivl
out
in
cmp
icebp
xorb
aad
xchg
aad
fldl
mov
out
xor
sar
xor
rcl
rcr
in
rcr
ret
xor
popl
xor
hlt
lret
int3
cld
sar
loope
cmp
neg
out
xlat
fdivr
loopne
in
jmp
call
into
shl
xlat
repz
cmp
decb
into
cmp
addb
into
cmc
leave
out
test
fcmovu
rol
in
mov
test
test
xor
cmp
cmp
loopne
aam
xchg
mov
xchg
xchg
das
shl
sti
not
cli
lock
xor
loop
mov
test
mov
xchg
nop
ret
enter
sti
out
cmp
repnz
repnz
ds
dec
stc
cmc
test
out
fisttps
xor
xlat
fdivr
ljmp
sarl
aam
in
cld
orl
mov
in
iret
ss
cld
aad
repz
out
stc
icebp
loop
xchg
jmp
std
ljmp
in
lock
int
iret
cmp
loopne
icebp
jecxz
shl
xchg
mov
in
ffreep
call
stc
repz
cmc
cmp
fdiv
cld
out
shl
cli
int3
in
int
mov
repnz
ror
fsubr
fdiv
aas
sar
int3
stc
push
fxch
int3
incb
jmp
icebp
cs
std
int3
ds
rol
iret
cmp
mov
out
out
test
shl
xlat
cmp
lock
jmp
sarl
sarb
cld
fisttps
sti
call
incb
out
pop
test
je
jmp
mov
int
sub
movsb
adc
jle
add
leave
iret
fmulp
in
lret
ds
mov
lret
imul
loope
sti
jmp
call
jmp
lock
loop
jecxz
test
fimull
shr
shr
in
aaa
cld
aaa
std
into
lock
cmp
mov
hlt
fcmovne
cli
rclb
inc
lret
lret
cmp
cld
fsubp
fdivp
fdiv
shl
icebp
dec
cli
out
call
leave
in
jmp
cmp
ds
test
ds
decb
jmp
out
xchg
loope
ss
xlat
sar
not
ss
sarb
stc
addl
rorb
icebp
xor
aad
cmc
lret
roll
xor
in
lock
out
fstp
loop
ret
out
repz
cmp
leave
rolb
xchg
sar
mov
jecxz
sti
ret
xchg
test
call
aaa
iret
icebp
into
out
fdivr
rol
and
out
out
std
cld
and
loop
loop
fldcw
lret
fsub
xor
sar
out
rcr
mov
iret
fucom
orb
xor
out
repnz
stc
rcl
cmp
mul
loopne
ds
mov
lret
out
test
rcl
cmp
in
fcomp
int3
cld
cmp
loopne
clc
in
mov
jmp
xor
fistpll
fdivp
fnop
sar
imul
std
idiv
out
int3
xchg
rclb
cmp
sar
int3
in
loopne
cmp
cld
ret
loopne
lret
out
test
in
jmp
lret
jmp
enter
cld
vcmppd
repnz
call
ljmp
sub
out
cli
cmp
leave
repz
hlt
add
test
aam
aad
movb
in
jecxz
mov
fldl2e
ror
loop
lock
dec
in
loopne
out
and
jecxz
shl
stc
out
fdivrl
shl
incb
out
xlat
out
fcmovne
aam
xorl
idivb
dec
aad
std
and
hlt
xchg
cmp
faddl
test
out
das
cmc
icebp
fldln2
fnstsw
repz
ret
loopne
cld
shr
loopne
loopne
cli
xchg
xchg
test
out
cld
fiadds
jecxz
sti
loope
clc
lret
xchg
repz
ror
xor
xor
neg
loopne
cmp
xchg
rcl
fdivr
xor
pushl
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
xchg
xor
jle
add
loope
loopne
loope
enter
shl
leave
fnsave
out
jmp
int
aam
out
out
in
jmp
in
fsub
repnz
fists
not
hlt
hlt
or
fdivrl
hlt
cld
idiv
loopne
jmp
iret
mov
test
xor
ljmp
iret
out
adc
std
fildl
rcr
in
dec
rol
clc
aam
fldcw
iret
in
div
fsubrp
icebp
cmc
ret
in
jecxz
fucompp
in
mov
fsubr
shr
cmp
into
clc
jmp
repz
mov
enter
cld
in
jecxz
lret
in
cld
icebp
cmp
cmp
iret
imul
cld
ds
aas
faddp
fisttps
loopne
shl
adcb
stc
repz
sar
clc
loop
xchg
mov
les
enter
aad
int3
in
cmc
out
ljmp
loope
xrelease
loope
mov
nop
test
mov
call
int
cmp
loop
cmp
test
mov
cli
loope
aas
icebp
call
aam
fdiv
clc
int3
cmc
cmp
mov
cld
fcmovb
cli
test
call
shr
repz
xor
out
enter
repz
xlat
xchg
int3
out
movb
xor
enter
ds
incb
rcr
fdivr
mov
fucomi
rorl
in
hlt
lret
xor
shl
cmp
test
ret
push
xchg
dec
xlat
int3
rcr
hlt
out
in
fcmovbe
enter
repz
xlat
ror
loopne
mul
int3
in
rorb
int3
push
int3
ror
ss
bnd
lds
filds
decl
iret
aaa
hlt
call
aaa
addb
aad
cld
leave
dec
mov
ror
loopne
xchg
das
hlt
int
out
aam
iret
jmp
fdivr
in
test
cli
xlat
int3
fsubp
rcr
cld
loope
loopne
cmc
das
leave
xor
ss
cmp
div
test
sar
rolb
out
lock
addb
ror
into
cmp
leave
fcmovbe
cmp
into
cmp
cli
fistpll
loop
test
rcl
or
loope
xor
fcmovb
in
aas
rcr
in
int3
aam
loop
jecxz
out
mov
stc
sub
jmp
lret
int3
cmp
aaa
aam
cmp
idiv
clc
fcmovbe
jmp
jmp
rorb
out
jmp
mov
leave
ret
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
lret
add
add
add
cmp
shlb
sarl
fdiv
addb
and
inc
into
int
out
mov
mov
call
xor
cmc
clc
lret
aam
f2xm1
testl
decl
enter
repnz
shl
xlat
sbb
cld
aad
cmp
loopne
jmp
int3
shr
xor
call
ror
incl
call
mov
fmulp
cld
int3
fldl
fdivrl
imul
ss
xlat
fucom
fmul
mov
mov
icebp
loop
jmp
shl
aam
aaa
call
ret
sti
cmc
loopne
roll
fdivr
loop
xchg
in
aam
jmp
cmp
jmp
aam
aas
stc
aam
iret
fsub
fsub
test
out
lock
aam
out
shll
shl
cld
aaa
mul
icebp
in
shr
fdivr
xchg
addl
lock
fcmovnu
lock
std
stc
repz
or
xor
loope
mov
ror
ljmp
lret
ss
xabort
aam
fimuls
out
test
enter
loopne
loop
cli
fadd
loop
test
ljmp
sti
cld
int3
lret
out
jecxz
lret
shll
cmp
fcompp
repnz
lret
addb
loop
mov
movb
xor
xor
aam
aas
fucom
fadd
icebp
fsubrp
loop
sbb
loope
ljmp
cmp
in
jmp
cmc
test
loope
cmp
fdivr
inc
out
ret
les
xor
xor
xor
int
fnstsw
ror
xchg
sti
xchg
and
mov
out
cld
decb
xor
rcl
stc
iret
std
ljmp
call
xchg
out
loope
iret
iret
jmp
test
cmc
out
fnstenv
aam
std
cmc
std
imul
mov
in
decl
out
xor
cli
enter
ljmp
cmp
clc
in
in
stc
sti
leave
in
fst
adcb
or
inc
add
add
add
aam
enter
fldl
push
xchg
nop
loop
mov
cmp
jle
out
hlt
jmp
ret
in
in
aaa
out
div
icebp
int3
out
in
fdivp
loopne
lds
lret
loopne
cli
xchg
std
hlt
testb
imul
repz
jecxz
sbb
cmp
leave
enter
fdiv
out
int
out
lock
out
in
imul
fmul
out
leave
rcr
in
repz
addl
mov
aad
lret
out
leave
lret
int
clc
sbb
jmp
sti
xor
in
xchg
aam
hlt
out
in
aam
call
aam
clc
ret
test
fmull
in
out
orb
jmp
int3
aaa
out
leave
out
adc
sti
aad
rol
xlat
in
call
xor
jecxz
jecxz
xor
cmp
icebp
aam
jmp
cli
loopne
testb
fsubrp
into
repnz
in
hlt
ss
iret
icebp
icebp
icebp
cmp
jecxz
icebp
clc
fcomip
xchg
loope
or
std
mov
shl
icebp
idivb
sar
test
ret
enter
loop
mov
shr
out
xor
lret
not
cmp
stc
enter
fucom
roll
xor
iret
cmp
lret
xor
div
call
in
lock
out
addl
fsubr
cmp
cli
hlt
clc
sti
fiadds
std
aad
in
lock
rorl
into
stc
jmp
shr
mul
cmp
cli
stc
std
cmp
aad
loop
in
test
sub
cmp
stc
fdivrp
jmp
out
cmp
rcr
shr
jmp
test
push
sub
lret
enter
in
loopne
sar
aas
adc
loope
leave
loop
test
addl
imul
in
out
or
roll
xchg
fsub
jmp
mov
jmp
hlt
rcl
aad
sti
in
rcr
sti
cld
call
leave
cli
fildl
xchg
lock
fnop
out
fcmovbe
cmp
fsub
aas
cmp
and
shl
jmp
test
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
cli
sbb
add
add
adc
cli
mov
in
in
call
out
jmp
loope
test
or
and
icebp
xor
lock
lock
cmp
loope
lds
ret
idiv
icebp
xchg
int
lock
loop
cmp
enter
lock
fsin
cmpb
ffree
clc
sti
ret
xchg
rclb
in
clc
aad
repz
ss
cmp
loop
incb
xchg
movl
cmp
fnstcw
int3
hlt
int3
int3
repnz
cmpb
icebp
loope
cmc
test
fisttpll
xchg
sub
les
iret
int3
lock
call
in
into
rclb
xlat
ljmp
cmp
lock
test
hlt
call
loope
xlat
lret
jmp
fildll
aaa
cmp
cmp
in
call
sub
loope
mov
xor
sarb
clc
test
lock
repnz
orb
call
mov
xor
ljmp
cmp
sti
fcom
neg
ljmp
aam
mov
aaa
int
iret
cmp
fcmovbe
int3
fidivrl
std
ds
xlat
in
xchg
in
in
lea
in
icebp
shll
fsub
cli
rcr
rcr
loopne
loope
test
fsubr
into
jecxz
xor
fcom
jmp
out
sbb
aad
shl
fsubp
icebp
aam
hlt
out
out
iret
xchg
out
xchg
mov
aas
xor
shrl
idivl
repnz
test
fstp
xchg
xchg
xchg
jecxz
cs
clc
in
xor
into
int3
cmp
fsincos
ret
loop
jecxz
dec
iret
lret
cld
test
aad
xor
lret
fnstcw
shl
cmp
stc
mov
nop
mov
in
out
out
and
xor
enter
icebp
adc
sub
fucomi
cli
enter
out
addb
cmp
cmp
repz
fmul
ror
icebp
cld
loop
mov
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
cmc
test
int3
in
fstp
in
lret
xchg
xlat
shl
xor
shr
fmulp
leave
loop
rcl
out
test
test
lret
lret
into
lret
lret
call
out
out
xor
loope
call
out
mov
repz
mov
adcl
repz
loop
and
addb
jecxz
std
xchg
in
xchg
loopne
bnd
rcr
fnstsw
idiv
add
out
fadds
int
in
jecxz
xor
cmp
repz
repz
sub
fisttpl
ljmp
xchg
fdivp
int
ret
aad
fcmove
int3
cmpb
shl
ret
xlat
jmp
call
adcb
in
lret
shl
cmp
rcl
aas
rol
fadd
jmp
fucomip
repnz
ljmp
in
lock
int3
aad
cmp
rol
neg
not
cli
call
jmp
out
aam
sub
stc
rcl
lock
stc
ret
xlat
repz
roll
incl
out
xor
jecxz
aaa
hlt
fabs
fcmovne
fnstsw
vpmulhuw
mov
lds
mov
ss
cli
hlt
das
cmc
out
rcr
ror
cli
cmc
faddp
fsub
jmp
lret
mov
mov
rcl
repnz
xor
fyl2x
in
iret
cmp
repnz
aam
fldl2t
add
mov
sub
shlb
lret
fst
aam
mov
shl
mov
fldl
ror
xchg
ss
cmp
out
div
sarb
aad
fcmovnb
aas
test
lock
xchg
loope
xchg
icebp
leave
fdivs
into
imul
aad
cmp
loope
xor
enter
std
cld
shr
int3
test
mov
call
xor
cmp
cli
aas
jecxz
roll
imul
cli
xlat
fsub
int
addl
loopne
orl
ret
fdecstp
xabort
rolb
add
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
testl
add
add
rol
fndisi(8087
fldl
test
addl
cli
into
fldpi
leave
clc
jmp
and
and
jmp
into
in
cli
ljmp
int
sti
rcr
test
clc
ret
fmul
into
int3
out
orb
in
leave
fldpi
shl
sarl
xlat
out
in
mov
movb
mov
aaa
cld
cmc
aaa
shl
shr
fxch
cmp
fdiv
in
in
int3
lret
cli
std
mov
iret
in
lock
xor
repnz
cmp
sar
mov
xchg
int
jecxz
lea
cmp
jecxz
in
aad
lret
ret
repnz
out
not
loope
leave
in
orb
xor
icebp
repz
jmp
in
cmp
shl
out
fdivrp
mov
fadd
sti
loop
test
leave
out
into
cmp
adc
cld
cli
mov
xchg
loopne
jecxz
lret
mov
out
jecxz
das
fyl2xp1
fdivrs
out
cld
lret
repnz
shl
lds
clc
in
mov
into
out
lret
xchg
mov
xor
int3
fsubr
fxch
cld
ljmp
in
xchg
out
test
iret
aaa
repz
jmp
cmc
iret
cmc
repz
fadd
sti
aas
in
mov
lds
lret
rol
ret
aad
out
int3
cmp
cld
roll
stc
fld
mov
std
out
mov
cmc
repnz
out
ljmp
fcmovu
add
loope
fimull
mov
jmp
into
int
cld
icebp
ror
xlat
fxch
shl
faddp
addl
mov
repz
shlb
cli
icebp
cmp
iret
repz
loopne
jecxz
fadd
mov
out
ffree
addl
repz
call
imul
adc
fsub
fdivp
sbb
loopne
fcmovnb
ljmp
repz
shl
into
fnstsw
cmp
jmp
roll
loop
fadd
in
in
rol
icebp
iret
loopne
das
call
adc
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
sar
incl
sti
rol
mov
cld
jmp
cld
in
xchg
xchg
jmp
lret
repz
cmp
cmp
test
hlt
call
repz
cld
xor
out
fucomi
out
ret
sub
or
xchg
lret
aad
leave
cmp
in
int
hlt
ror
sarl
lret
fadds
repz
mov
xor
stc
int3
call
cld
cmp
std
into
out
fcmovu
ljmp
icebp
in
lret
ss
aad
rcr
in
add
cli
in
call
test
sub
fucomp
std
xor
iret
fcomi
out
loope
call
sti
cli
in
loop
in
shr
int3
sti
std
xlat
cmp
cmp
shr
jmp
lret
lea
lret
out
roll
cmp
test
iret
jmp
in
out
cmc
icebp
cld
sar
sti
xchg
mov
icebp
xchg
loopne
aam
ljmp
test
hlt
addl
out
iret
ljmp
cmp
in
cmpb
cmp
fcmovb
cld
repnz
cli
std
addl
orb
cmp
xor
xor
filds
out
int
fucomip
fcmovne
out
enter
repz
aad
aas
idiv
loopne
sti
mov
xlat
test
lret
faddp
rcr
in
xchg
jmp
in
iret
cmp
addb
idivb
fstp
mul
lret
mov
shl
out
int
sar
divl
jmp
lock
rcl
in
call
in
xchg
fcoml
neg
ss
cmp
std
ror
cmp
out
test
ret
mov
jmp
loope
int
sub
stc
out
jmp
jmp
hlt
jecxz
in
lret
int
nop
xchg
sar
rclb
in
fucomi
fucomi
cmp
jecxz
sarl
fadds
lock
roll
mov
adc
add
loopne
add
xlat
cmp
ficomps
jl
inc
add
add
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
mov
add
add
xor
iret
enter
shl
sbb
fscale
mov
xlat
div
in
mov
lret
ljmp
lret
aam
out
lock
in
repnz
xchg
call
int3
into
test
lret
cld
lock
fsubp
mov
mov
repz
leave
int3
sti
lret
out
repz
iret
rol
faddp
sbb
sti
test
std
out
fildl
ror
ret
clc
fcmovu
repz
fcomi
aam
cmp
mov
fsubp
out
sub
int
aam
xlat
in
out
jmp
flds
icebp
repnz
in
ftst
orb
std
push
xlat
fxtract
repz
int
xor
loope
rolb
call
jecxz
out
in
mov
in
cmp
repz
aam
lock
jecxz
enter
xlat
loope
incl
ljmp
ds
xlat
jecxz
fld
fidivrl
fld
mov
xchg
mov
xor
ret
cmp
fsubr
in
repz
les
fsub
loopne
test
out
mov
out
cmc
out
cmp
cmp
jmp
cli
into
sarb
shl
mov
fcmovnu
mul
mov
in
roll
fcmovne
jmp
stc
out
cmp
xchg
xchg
fld
sti
mov
int
in
sub
hlt
loop
ljmp
fadd
xlat
hlt
aas
sar
cli
test
sti
repz
xchg
lock
shlb
cmp
fcmovnb
sarl
fdivrp
loopne
rcr
fcmovu
mov
xchg
ficoml
enter
rcr
ds
ljmp
testl
int
jecxz
iret
xchg
ss
cmp
ds
in
call
jecxz
xchg
hlt
mov
int
out
cmp
loope
add
test
lea
mov
rcll
aad
in
sarb
ljmp
shr
cmc
faddl
add
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
popf
cmp
cwtl
sub
jle
add
xchg
iret
out
test
into
fdivl
xor
cli
out
loop
loopne
rcr
and
sub
mov
xor
xlat
lock
std
std
hlt
fadd
cmp
int3
nop
ljmp
fldcw
xor
stc
lret
aam
or
cmp
rcr
in
in
call
mov
stc
ret
jmp
out
jmp
cmc
repz
cmp
ror
jecxz
lret
std
icebp
int3
out
aad
in
in
imull
rcl
sti
ss
lret
loop
out
cmc
aas
ffreep
shl
or
mov
mov
xor
in
divb
fstpt
cmc
sti
test
loopne
fucomp
in
rolb
iret
div
aaa
cmp
cli
out
cmp
sarl
test
xlat
xlat
leave
in
fsin
sti
fucom
fcomip
jmp
hlt
hlt
cmp
das
fnstcw
aas
sti
into
xlat
loop
iret
rorl
jecxz
loopne
nop
out
rolb
clc
fucomi
jmp
jmp
aam
cmc
xchg
repnz
test
iret
out
cmp
rcl
aam
cmp
fsub
hlt
fadds
fldl
lock
repz
das
repnz
fcomip
shl
loop
int3
aad
iret
iret
iret
fmul
test
lret
out
bnd
cmp
rcr
rcr
mov
sbb
hlt
imul
bnd
in
out
fxch
iret
aam
xor
loope
out
fst
fadd
fcmovb
mov
orb
jecxz
ftst
repz
cmp
fdivr
in
out
xlat
std
loopne
xchg
xlat
in
fists
ret
aaa
stc
out
fcmovu
into
fsub
leave
cmp
sti
aam
mov
imul
ljmp
xchg
out
xor
cld
cld
stc
ds
repnz
icebp
stc
in
lret
mov
xchg
lret
ljmp
in
icebp
xor
ds
test
rol
xchg
cmc
cld
mov
in
iret
mov
icebp
shl
sub
ljmp
ret
add
mov
mov
mov
mov
xor
add
jmp
rcl
int
ffree
fstpl
xorb
push
sub
jle
add
in
fldl
test
aad
in
icebp
cmp
sarb
fldln2
movb
in
cmp
std
shlb
neg
call
fldpi
shr
loopne
aad
xchg
add
shr
ret
aam
call
sarb
roll
aad
aad
xchg
out
mov
jecxz
out
in
in
not
cmp
sub
cmp
ret
lret
fcmovnu
lock
fisttps
xor
fsub
idiv
fsub
rorl
lea
repnz
imul
fdivs
lret
lret
fsubr
ret
in
aas
xchg
ds
stc
cld
xchg
cmc
out
sub
cmp
into
leave
std
cmp
clc
out
neg
rcr
call
xchg
mov
in
leave
repnz
cli
iret
cmp
aam
fsubr
cmp
movb
enter
loop
rol
into
enter
aaa
call
ret
fucomip
add
and
int
lret
loopne
loope
in
not
fcmovnu
in
cmp
sti
fcomip
aaa
in
ljmp
in
lret
ljmp
lret
fcmovnu
sbb
cmc
mul
ds
cmp
adc
into
nop
in
rolb
ss
cld
lds
cmp
roll
ffreep
aas
xor
fisttpll
shl
sarb
repnz
cmp
xchg
fdivr
fscale
enter
loope
iret
xchg
xchg
icebp
stc
fcomi
int3
das
fistpll
aas
cli
cmp
sarl
in
in
or
xchg
jecxz
out
sarb
cmp
repnz
fsubr
fsubp
lds
fsubp
out
mov
ljmp
clc
fadd
sbb
ss
fisttpll
int3
dec
in
icebp
test
mov
ss
icebp
call
fsubp
div
out
sti
mov
xchg
lds
fsubr
int
clc
in
stc
out
enter
rol
shl
cmp
je
mov
mov
jmp
int3
aas
rol
fst
fadd
ljmp
icebp
or
add
add
into
test
clc
int
rorl
xor
jecxz
lret
out
jmp
aaa
icebp
xchg
jecxz
ds
cmp
loopne
fbstp
sti
out
cli
into
cmp
cmc
sar
fldl
std
xchg
leave
int3
int
pop
ror
call
int3
jmp
sub
lds
out
into
call
in
hlt
in
xor
leave
idivl
in
lock
ret
vpsrad
jecxz
std
xchg
iret
icebp
sarl
stc
jmp
inc
cmp
xor
enter
xchg
or
ljmp
jmp
aaa
fdivp
loope
fcomi
ds
neg
in
jmp
xchg
cmc
lock
in
xor
call
fdiv
in
push
cld
clc
loope
aas
int3
mov
in
xor
cmc
iret
stc
cli
int3
ds
into
int
icebp
cmc
cmp
test
test
mov
int
lock
aam
lret
in
clc
lret
sarb
jmp
rcl
loop
cmc
aas
cld
cli
fucom
lret
mov
mov
in
not
xor
repnz
cmp
cmp
iret
in
in
out
mov
aad
rorb
sbb
int
shr
cmp
fsubr
cmp
fildl
loop
sbb
int
jecxz
fistl
rcr
cmp
sar
pushl
fdiv
test
shl
mov
xlat
mov
in
out
xchg
call
shll
cmc
lock
fst
rcr
ret
fimuls
loop
out
cs
hlt
cmp
aaa
in
lock
cld
lock
mov
lret
fisttpll
std
xchg
xchg
clc
repz
fcmovnbe
aad
cli
cli
int
xlat
loopne
addb
out
lret
cmc
loopne
shrb
rol
cmp
cmc
aaa
cli
repz
div
std
repz
jecxz
incb
mov
popl
bnd
cmp
cmp
lock
ret
les
loopne
fsubp
and
loopne
leave
lret
cmc
stc
out
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
pop
mov
add
add
enter
fidivs
cmc
in
inc
fdivp
in
iret
mov
in
xchg
adc
aam
ret
clc
jmp
xor
ret
loop
idiv
loope
jmp
fcmovu
fcomip
mov
repz
sub
jmp
xlat
aas
stc
rcl
clc
jecxz
and
faddp
fsub
jecxz
xchg
shl
shrb
icebp
fcmovbe
icebp
fadds
test
fcmovnu
xlat
in
stc
jmp
loopne
mov
in
in
aaa
cmc
cli
ffreep
neg
cmc
test
cmp
cmp
nop
test
icebp
shl
pop
loope
xor
roll
fndisi(8087
aam
std
repnz
leave
mov
rcll
xor
xor
not
shl
repz
fcomp
in
xchg
fstp
repnz
ljmp
clc
out
into
fsubr
loopne
loopne
shr
test
dec
ret
call
ffreep
repz
in
bnd
rcr
cmp
mov
flds
xchg
enter
faddp
fnstenv
fdiv
cmp
fnstsw
aam
into
xor
out
enter
out
ljmp
in
sar
call
repnz
into
lock
in
cmc
jecxz
aad
ffree
mov
mov
lea
fsubr
repz
icebp
cmp
rol
cld
in
cmc
ret
lret
test
int
leave
lret
rcl
lds
out
in
aam
testl
lock
xchg
sub
ror
cmp
bnd
fcmovnu
mov
out
test
loopne
loopne
int3
call
out
int
out
out
fcom
aad
cld
fyl2xp1
rcr
stc
jmp
jmp
nop
enter
jmp
lret
leave
repz
cli
cmp
aas
int
cmc
test
hlt
lret
mov
or
xchg
ljmp
aam
xor
aaa
and
hlt
mov
repz
lret
xchg
mov
das
rcl
repnz
fstpt
roll
repz
enter
in
cmp
shl
testl
add
aas
xlat
xlat
rcl
ror
fld
cs
and
testb
add
add
out
xor
cmp
rcr
out
cmp
mov
fmuls
jmp
xor
xor
out
fstpt
out
neg
rol
shl
mov
ret
clc
and
int3
xchg
shl
loope
xlat
rcr
out
lret
jmp
neg
neg
shl
test
mov
fmulp
ror
int
iret
das
shl
repz
incb
fadd
leave
test
clc
jecxz
xchg
out
cld
mov
fcomp
rcr
fsubp
iret
jmp
ret
fnstsw
xchg
jecxz
out
fucomip
mov
call
in
fdiv
cmp
leave
aad
fucom
hlt
test
repz
int3
lret
xlat
leave
iret
in
in
hlt
in
ss
cmp
iret
imul
in
out
mov
or
int3
cld
iret
loope
lock
lock
cld
jmp
lock
fmul
in
std
lret
sti
xchg
cld
rcl
int
out
aam
stc
cld
shr
into
cli
aam
into
aad
addb
fdivr
int3
xchg
shl
out
divl
fdivr
out
shl
cmp
stc
vshufpd
fstp
leave
out
xlat
cld
in
jmp
addl
cmp
hlt
stc
or
fimull
out
lret
out
int3
xlat
cmp
xlat
int
repnz
hlt
in
in
repnz
sar
test
repz
testl
repnz
out
fidivrs
ds
cmp
fidivrl
int3
fmuls
fucom
in
ror
aaa
iret
clc
ds
in
cld
test
fcomip
leave
ds
stc
mov
mov
in
stc
fbstp
cmp
aas
aas
aad
mov
aad
leave
stc
push
ror
shl
in
xlat
jecxz
into
cmp
rcr
fistpll
cmp
sti
loopne
repnz
jecxz
jecxz
rolb
aaa
ret
iret
ss
cmpb
out
jecxz
sar
aad
out
hlt
jecxz
mov
in
ret
into
fnsave
lock
fxch
aad
test
adc
in
stc
in
cld
jecxz
or
jmp
into
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
push
mov
add
sti
mov
fcmove
out
fdivr
in
cmp
fucom
rorl
loope
cld
mov
das
jmp
xor
cmp
out
adc
cmp
stc
test
mov
out
ficoml
xor
enter
aad
xlat
in
out
fiadds
out
jmp
popl
repz
fdivs
ds
leave
in
fxch
call
lock
into
fdivrs
xlat
icebp
xor
enter
test
hlt
out
std
std
fmul
or
jmp
xchg
xchg
xlat
lret
idiv
repz
repz
repnz
sar
out
out
nop
jecxz
xchg
rcll
clc
xor
call
ljmp
xor
fiadds
lret
loopne
dec
in
jmp
in
fsubr
idivl
cmp
ret
xor
test
into
test
jecxz
into
xor
in
aam
div
fdivrp
aas
fidivrl
ljmp
sti
cli
mov
xor
jmp
clc
repnz
aam
adc
fstp
loopne
in
xchg
lret
loopne
shl
in
ss
ljmp
cmp
in
shl
icebp
cmpl
cld
mov
in
movl
loopne
cmp
cli
jmp
ror
adc
ret
orl
in
jmp
xchg
xor
cmp
clc
int
icebp
int3
cli
aam
div
loope
aam
in
xlat
xchg
rclb
xor
enter
aad
aam
call
xlat
stc
mov
ljmp
icebp
lret
call
repz
xlat
in
fidivrs
cmp
in
fisttps
lock
lret
fstp
iret
icebp
repnz
clc
fmull
fcmovu
div
ret
loop
in
xlat
stc
fprem
rol
loope
fistpll
jmp
std
enter
in
std
hlt
aam
hlt
ret
repnz
fchs
out
loop
dec
adc
mov
push
pushl
pushl
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
shll
jle
add
cmc
stc
out
icebp
repnz
out
cmc
enter
ljmp
rcr
fnclex
adc
xlat
loop
int3
leave
fucomip
std
xchg
int3
out
fnstcw
rcr
in
lret
repnz
in
aad
in
shl
test
xchg
mov
les
lret
cli
int
icebp
add
clc
not
cli
fdivr
out
int3
sti
std
in
mov
shr
in
ljmp
fdivp
fdivrp
ret
cli
cmp
std
xlat
lea
in
mov
xor
aaa
lret
jmp
aam
fnop
test
sub
fcomi
lret
out
mov
aad
xor
aad
std
in
jmp
hlt
fnclex
incb
fdivrp
in
repz
repnz
shr
lret
leave
out
in
fadd
lock
jecxz
into
std
jmp
loopne
test
out
aas
ss
fcomip
ds
rol
and
out
lock
out
mov
out
out
fsubr
rcl
shl
shr
iret
into
in
sar
rcr
mov
int
repz
xchg
call
leave
cld
repnz
aad
out
in
lds
std
lock
fisttpl
rcr
cmc
xor
in
int3
ss
cmp
repnz
rolb
test
and
lret
mov
iret
out
jmp
idivb
in
cmp
sti
xor
out
nop
cld
lea
iret
xor
fdivp
ror
mul
addb
jmp
xchg
mov
rol
loope
in
into
cmp
std
aas
ds
xor
ds
sti
in
out
mov
out
fsub
xchg
cs
icebp
xor
in
int
hlt
neg
int
std
jecxz
rol
enter
out
incb
int3
xor
into
cli
icebp
icebp
cmp
ss
not
repnz
clc
cli
fidivrs
fimuls
nop
call
rol
int3
fdivrl
cmp
aaa
icebp
fdiv
cmc
ror
sti
test
enter
mov
in
fcmovne
test
aam
xor
in
clc
int3
hlt
cmc
ljmp
out
mov
jmp
vshufpd
ror
adc
push
fsubs
int3
mov
cmp
jle
fcmovbe
inc
ret
xchg
loop
mov
xor
hlt
ss
clc
lock
repz
hlt
xchg
out
xlat
std
mov
lock
shl
loop
fsub
int3
xor
aam
fcomip
addl
hlt
ljmp
int3
in
in
int
int
shr
jmp
fcmovnbe
aam
iret
sar
loopne
clc
test
out
std
out
sarb
out
sarl
leave
cld
xor
cmp
loope
icebp
cmp
in
enter
xchg
std
mov
mov
mul
divb
ljmp
push
into
cmc
in
fcomip
sar
xchg
cld
lea
int3
not
cmp
out
cmp
out
sti
cmp
repnz
addl
mov
ror
rcr
ljmp
shl
cmp
std
cmc
loop
sar
mov
xchg
orb
xor
ror
fsub
out
ret
loop
out
loop
push
xlat
loope
idiv
loopne
in
sar
lds
in
vpsubusw
fadd
out
icebp
test
aam
leave
xlat
xchg
mov
mov
rcll
int3
xor
ljmp
sti
hlt
aam
cld
hlt
cmc
std
addb
xchg
in
shr
iret
leave
cmp
jmp
fdivr
add
out
test
mov
int3
nop
mov
jmp
sti
repnz
fstp
std
fucomi
std
lock
jmp
xchg
stc
out
rorl
shr
fcmovu
dec
loopne
shl
rcr
shl
enter
xchg
jecxz
jmp
iret
xor
leave
in
neg
cmp
repnz
std
loope
sbb
mov
in
call
ljmp
jmp
std
ret
xlat
call
idiv
mov
out
call
mov
mov
out
in
iret
xor
out
fidivrl
lock
fucomp
mov
sti
lret
lret
into
loop
xchg
sub
xor
into
cmp
addb
clc
std
mov
fucomp
xchg
xor
iret
out
xor
out
testl
push
add
add
aas
ret
sbb
roll
hlt
pusha
call
add
cmp
hlt
std
repnz
xlat
orb
out
nop
lock
lock
xor
jmp
out
hlt
fiaddl
out
sub
lret
out
lret
sti
xchg
in
out
ljmp
fdivrs
testl
ljmp
aad
ret
cli
les
add
hlt
rcl
lret
fdiv
xlat
loopne
icebp
lret
hlt
test
out
int
out
ds
out
in
cmp
std
out
jmp
adcl
cmc
fstpt
into
lret
fadds
lock
fildl
mov
fmull
divb
neg
aaa
aad
out
cmp
mov
out
std
iret
out
xchg
not
out
fmul
in
xlat
aam
cli
cli
fdiv
test
jmp
int3
jmp
lret
jmp
iret
shl
in
jmp
cmp
rcr
test
rorb
fcmovb
mov
jmp
loope
xorb
ror
call
ss
cmp
jecxz
repz
enter
in
jmp
divb
xor
fdivr
in
cmp
int
xlat
icebp
shl
incl
int
cld
loope
mov
in
das
sarb
shl
fdivrp
into
int
out
rolb
shl
mov
xchg
xchg
cld
ficoms
rcl
leave
lret
hlt
fdivs
icebp
sarb
out
mov
ffree
fmuls
in
loopne
ljmp
sti
in
sti
aam
clc
out
lock
idiv
in
in
clc
shr
call
ret
stc
aad
clc
fptan
xor
rol
lock
xchg
fucom
into
int
clc
cmp
aam
cmp
cmpb
test
mov
ljmp
xabort
fdivs
not
cld
cmp
iret
cld
fstp
sar
icebp
mov
test
mov
mov
mov
out
test
aam
cmp
cmp
cmp
addb
fsqrt
fsubr
jmp
ljmp
push
add
add
ret
aam
rcl
sahf
xor
mov
cmp
add
add
jecxz
cmp
aaa
lret
hlt
xor
fdiv
clc
fdivrl
test
rcr
call
xchg
rclb
in
into
in
rcl
int
faddp
loope
cld
mov
popl
sub
in
out
loope
cmc
idivb
mov
out
fdivrp
mov
mov
out
aad
enter
sar
in
loope
fcomip
not
loop
mov
xchg
jecxz
rcll
cmp
enter
into
ljmp
xchg
in
in
jecxz
jecxz
std
cld
in
xchg
call
aam
cmc
repnz
out
movl
mov
iret
fdiv
out
xor
stc
cmpb
sti
cmpl
mov
call
nop
shl
cmp
int3
hlt
in
sti
ss
cmp
mul
cmp
test
out
int3
in
lret
call
ror
aad
aaa
out
int
repnz
ret
fistpll
fprem
leave
roll
lret
in
xlat
mov
repz
mov
loop
xchg
jmp
shlb
cmp
xor
in
loope
in
aas
call
leave
fucomp
sub
call
loope
int
cmp
cmp
enter
cmp
adc
repz
shrb
int
leave
xor
lret
out
shl
cli
clc
add
loopne
fninit
jmp
shr
lret
out
enter
xlat
lret
rcl
fucomi
ret
idiv
test
sti
ljmp
cmp
aad
cmp
leave
hlt
sarb
aas
in
loopne
cmp
or
xchg
jmp
leave
aad
fmul
fnstsw
jmp
xchg
test
call
call
out
xorl
leave
ror
hlt
ret
cmp
cli
testl
mov
aam
leave
repz
shr
xlat
fnstcw
fmul
testl
fsts
test
add
push
add
add
ret
mov
mov
push
scas
adc
jle
add
decl
lret
cmp
idivl
fldln2
out
test
test
call
xchg
int3
xchg
iret
repnz
fsubrp
fptan
fsubp
xlat
inc
aad
fsubr
neg
lret
mov
nop
jmp
xor
cmp
enter
shl
fucomi
fcom
rcl
ret
cli
ljmp
out
aam
xor
shl
lret
ss
sub
cmp
stc
ljmp
mov
test
loopne
ret
in
aas
aas
hlt
clc
cmp
fmul
cld
clc
clc
jecxz
jmp
jmp
cmc
rorl
rcr
out
jmp
jmp
in
cmc
aas
jecxz
idiv
cmc
hlt
test
test
lret
rcl
jmp
loope
in
std
rcr
aam
loop
fcmovnbe
mov
rcll
sti
ss
aas
in
jmp
in
cmc
ret
sti
sbb
int3
out
leave
mov
das
lret
out
xor
into
ret
repnz
add
in
hlt
mov
dec
enter
push
in
lret
neg
shl
iret
cmp
loopne
xchg
test
add
lds
lret
fdivp
loop
ss
sub
neg
aaa
cmp
clc
sti
loope
out
hlt
cmc
fsub
in
xchg
int3
enter
cmc
fcmovnb
fxch
cmp
std
sar
xlat
aad
addb
call
shr
in
rcl
out
jmp
loop
loop
jecxz
repz
in
fisttpll
leave
enter
iret
cld
call
stc
in
adc
addl
fninit
mov
fdivrs
cmp
lret
leave
leave
xlat
cmp
mov
leave
shl
mov
test
xchg
xor
lret
in
lock
std
cmp
cmp
sarb
cld
in
test
repnz
lret
into
repz
neg
repnz
clc
loop
sti
test
jmp
mov
aaa
fcmovb
sarl
out
into
lret
fdiv
in
in
loopne
aam
xor
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
in
mov
add
add
jmp
xor
lret
rol
shl
cmp
cmc
shl
ret
lock
leave
fimull
out
fcmovne
xchg
mov
das
lock
xor
enter
std
fcomi
cmp
in
enter
mov
aas
repnz
cli
in
neg
cmp
loopne
sti
sar
fiaddl
xchg
incb
int3
ljmp
clc
cld
in
out
xor
aad
fmull
dec
int
ss
aad
int
cmp
fcmovbe
cmc
clc
icebp
rol
ffreep
xor
addb
ljmp
testl
in
fmul
fisttps
loopne
sub
into
xor
cs
enter
hlt
ret
cli
fld
fdivp
cmp
std
icebp
lret
in
aad
aad
cmc
stc
out
cmp
fcmovnu
fnsetpm(287
rcr
std
out
mov
lock
into
out
iret
hlt
out
jecxz
int
not
jmp
call
std
fadd
jecxz
sar
xchg
icebp
out
xor
lock
jmp
rcl
sarl
aam
out
lret
mov
fsub
out
xchg
xchg
out
enter
idiv
repz
icebp
sti
aad
shl
cmp
in
in
in
xchg
rolb
sub
repnz
rcl
aad
iret
icebp
fst
in
mov
mov
jmp
cld
out
xchg
xor
aam
fmul
cmp
out
xlat
test
jecxz
stc
out
std
in
into
fsub
loop
out
out
clc
clc
xor
out
jmp
int3
rcl
sar
out
std
cli
add
fsub
icebp
aad
xor
fcmove
xor
cmp
in
or
xor
hlt
in
clc
int3
adcl
aad
cmp
hlt
leave
cmp
sar
in
iret
ror
repz
loope
mov
decb
out
out
out
loop
div
stc
xor
idivb
sti
shlb
vpsubsw
in
mul
jmp
repz
mov
jmp
xor
xlat
leave
sti
clc
hlt
test
test
push
pop
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
aas
pop
mov
cmp
jle
clc
cmpl
xchg
in
rclb
fidivl
clc
aad
f2xm1
std
cmc
repz
aam
repnz
jmp
jmp
iret
cmp
out
shl
clc
out
lock
clc
out
fmulp
mul
loope
ret
loop
mov
fdivr
mov
loope
cmc
call
lret
ljmp
adc
fisttpll
sar
sub
in
cli
adc
stc
push
push
call
imul
sub
fucomip
int3
int3
in
shl
jecxz
cmp
icebp
loope
stc
cli
test
std
loopne
cli
cld
faddp
mov
mov
xor
enter
aad
fldl2e
lock
out
fcmovnbe
xlat
mov
cld
out
mov
repnz
shl
aaa
shl
int
jmp
cmp
rcl
decl
shl
fldl
out
in
call
ds
add
jmp
out
in
fimuls
idiv
cli
int
fdivrs
cmp
cmp
aas
fdivr
lret
fdivr
repz
aad
mul
out
int
xlat
int3
ss
into
cmp
int
fldl
fiadds
aam
sub
int
xor
cmp
leave
jecxz
test
out
flds
adcb
in
in
xor
out
fsubrp
clc
std
loopne
mul
ffreep
out
test
xchg
xchg
and
loope
shr
in
enter
aad
fld
int3
ljmp
loop
loope
loop
in
fmull
loopne
shl
clc
lret
cmp
repnz
cmp
cld
aam
leave
faddp
mov
decb
out
ljmp
jmp
lock
cmp
in
repnz
mov
ror
fucom
xchg
divl
xor
in
jmp
fnstsw
xor
sar
xlat
roll
cld
loopne
mov
in
out
icebp
ljmp
cmc
test
aad
loopne
cli
jecxz
adc
out
fiadds
repz
in
jmp
sar
mul
out
pop
xchg
jmp
aas
int3
mov
std
int
pushf
jo
pusha
xor
add
cmpl
std
xlat
xchg
loop
cld
mov
cld
mov
cmp
call
incl
loope
mov
cld
and
in
in
jmp
repz
cmc
neg
rcl
cmp
mov
in
jecxz
fsub
test
in
xlat
xor
repz
loopne
aad
fisttps
out
and
xor
cmpb
cmp
vcmpps
sti
aad
enter
addl
das
out
sarb
xlat
jmp
aas
div
ds
imul
cmc
loopne
mov
fninit
leave
loopne
ljmp
hlt
out
cmp
stc
neg
sar
shl
roll
out
xlat
enter
fsub
jmp
int3
cmp
xlat
cld
loope
hlt
aam
ret
in
not
ret
aad
in
mov
lock
mov
mov
ret
test
sti
cmp
lds
mov
enter
lock
fsubr
xor
out
cmp
idiv
hlt
ds
aad
mov
out
out
sbb
rol
cmc
in
cmc
lret
std
icebp
shr
out
fnstsw
in
sti
mov
out
leave
lock
jecxz
mov
ljmp
ds
dec
out
int
out
jmp
fucomp
leave
lock
decb
jmp
cmp
ds
fdivp
adc
iret
imul
out
xchg
loop
movb
lds
fidivrs
ds
or
out
flds
int3
fimull
in
cmp
repnz
cmp
std
aad
jmp
fsubr
lret
mov
aam
shl
int
rcr
repz
out
fyl2x
jmp
test
std
out
enter
lock
jmp
cmp
cmc
int
std
cmc
ret
ror
fiaddl
std
nop
cmc
cmp
cli
hlt
aad
lret
cmp
fincstp
fdivrl
repz
mul
mov
into
fsubr
int
xchg
mov
out
xlat
out
xor
stc
sub
xchg
dec
jmp
lret
int3
fcmovnu
mov
inc
int
or
jle
add
fdivr
cmc
int3
sub
rcr
shl
ret
out
adc
test
out
orb
shr
repnz
xor
loopne
fcomi
addl
out
xchg
in
in
jmp
cmp
fcmovne
std
in
cmp
sti
cmp
xlat
repz
lock
xor
repnz
cmp
clc
bnd
rcl
testl
out
out
lock
ljmp
neg
jmp
loopne
loopne
loop
ror
xor
movb
int
jmp
xor
sar
rcr
xor
in
int
out
in
mov
fcomip
repnz
shl
into
cmp
rcr
roll
aas
decb
fsubr
int3
aad
das
sub
lret
bnd
xor
incl
addl
mov
jmp
rcl
stc
leave
xlat
int3
repnz
repz
in
div
into
test
in
repnz
ret
cmp
cmp
stc
iret
lret
jmp
icebp
icebp
adc
in
in
out
cld
fldl
xchg
aas
aad
jmp
out
xor
cmc
ffree
xor
nop
ljmp
xor
idivb
lret
cmp
cmp
fucomip
repnz
loop
cli
sti
ds
jecxz
lock
sub
rol
in
fucomi
cmp
ror
cmp
sti
icebp
cmp
flds
sub
xchg
call
mov
loope
repnz
rcl
ljmp
aad
mov
fdivr
fidivs
out
stc
xor
repz
cmp
lret
test
ret
fucomip
aam
sbb
test
mov
out
int3
xor
cld
into
enter
int
cld
lock
cmp
std
xchg
mov
jecxz
ret
cmc
in
cli
fcmovb
stc
aas
in
fincstp
xchg
mov
sub
shr
test
loop
repz
fld
aam
cli
shl
repz
shr
xchg
test
aad
loop
stc
mov
push
xchg
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
cli
loop
mov
cmp
jle
ret
xor
shl
aas
aas
sarl
clc
fldl
test
lret
cli
loop
ljmp
xor
cli
ror
cmp
aas
ret
cld
in
fsubp
xor
orb
lds
lret
div
into
loop
out
lret
out
out
xchg
repnz
out
in
ret
in
cmp
fstp
jmp
repnz
aam
in
ljmp
loop
enter
out
aaa
iret
in
imul
stc
icebp
into
iret
rcr
mov
xchg
cld
addb
jecxz
xor
aad
sar
aad
in
int
loope
sar
mov
jmp
mov
jmp
clc
shlb
in
leave
stc
loopne
cld
icebp
cli
loope
cmp
loope
lret
lret
cld
rcr
xchg
mov
repz
iret
cmp
ds
into
clc
loop
sar
loope
cmp
mov
xchg
ror
repnz
shr
icebp
stc
cmc
aam
hlt
lret
div
push
jmp
call
mov
aam
ret
in
cmc
sub
in
idivl
cmp
ds
into
jmp
hlt
cmp
cld
xlat
xchg
mov
loope
xor
clc
cli
jmp
loope
iret
aad
cmc
cmp
mov
iret
in
jecxz
in
jmp
jmp
in
sar
hlt
ljmp
loop
fsubp
fst
aad
cmp
stc
sti
aad
shl
fcmovnu
into
cmc
aam
clc
add
into
in
cli
sbb
nop
xchg
fsub
xor
sti
clc
ror
cmp
ret
repz
fimuls
in
fst
loope
xlat
hlt
fdivrs
cmc
in
out
aaa
lret
stc
loope
in
rolb
loop
sbb
shl
out
nop
xor
in
cmp
icebp
repnz
div
xor
test
shr
addb
divb
ret
call
lret
sti
fldz
loop
fdivp
call
xchg
jmp
cmp
xchg
xchg
xor
lock
into
fdecstp
hlt
jmp
fcmovnbe
les
xchg
call
imul
mov
jmp
aam
int
int
aam
xchg
inc
lret
adc
int3
add
add
xchg
loopne
int
fcmovbe
sarb
std
addb
xchg
std
mov
hlt
das
xor
aam
in
rcl
aad
in
cmp
int
ret
rcr
shl
fcmovu
ffree
mov
rcr
loop
out
leave
stc
repz
repnz
clc
fcmovnu
cmp
in
and
mov
repnz
ret
out
xor
neg
cmc
aam
ror
stc
cmp
loop
jmp
lret
in
icebp
lds
xor
fcmove
lock
sbb
hlt
test
call
in
mov
call
xor
std
std
iret
jmp
cmp
fld
lds
lret
lock
call
ror
aad
jmp
loop
fucom
mov
addl
call
in
xor
cmp
stc
into
ret
repnz
in
ret
int3
cli
jmp
ljmp
leave
xor
int3
cmp
fdivp
fiaddl
loope
in
mov
nop
jmp
ss
ljmp
into
test
mov
fcmovu
xlat
call
in
loopne
das
out
cli
cmp
ljmp
icebp
into
loop
roll
xchg
mov
loopne
stc
lret
fidivrs
idiv
fcom
jecxz
idivl
filds
shl
mov
das
loop
aad
lock
cmp
loopne
lock
enter
int
addb
cmpb
call
cmp
xlat
clc
cmc
repz
shl
test
loopne
ret
aad
lret
fcmovbe
mov
out
aad
sub
aad
iret
ror
shl
in
shl
out
dec
fildl
shr
xchg
into
clc
xor
mul
fxtract
sti
jmp
loope
mov
in
loopne
shl
rol
cmc
cli
ss
jmp
cmp
ljmp
std
std
xor
decl
ret
fstpt
iret
into
ffree
lret
out
xchg
test
pushl
rorl
or
push
add
add
ror
rcr
int
stos
outsl
int3
nop
cmp
repnz
add
add
mov
orb
sub
cmc
jmp
cmp
in
ret
fadd
ret
test
repz
rorl
adc
aad
lock
shr
in
into
ret
ftst
idiv
in
loopne
fisttpl
div
hlt
out
das
cmp
out
ljmp
fadd
in
test
lret
leave
ror
out
loopne
ret
xor
jmp
fstpt
fisttpll
out
iret
faddl
out
stc
sti
shl
cmp
shr
loopne
sarl
div
test
lret
mov
jecxz
fcom
sti
out
out
call
fiaddl
sti
mov
rolb
iret
jmp
icebp
leave
fsubr
cmp
mul
aam
mov
mov
aam
hlt
repnz
idivb
enter
int
cmp
flds
leave
in
out
lret
call
fldlg2
in
lret
icebp
aam
ds
call
xchg
mov
loope
adcb
stc
clc
fucomi
lret
int3
aam
xor
in
ret
cmp
xchg
fcmovbe
mov
test
div
shll
repnz
aam
out
sbb
mov
fsubrp
sbb
ret
mov
out
int3
stc
aam
cmp
std
iret
int
aas
icebp
iret
call
mov
fsubrp
mov
xchg
in
into
hlt
aad
in
cmp
out
aad
repnz
shl
int
cli
in
xchg
mov
into
repnz
call
loopne
stc
rolb
aad
test
mov
cmp
fmul
sub
out
imul
jmp
ds
repnz
jmp
lret
ljmp
xchg
loope
repnz
cmp
cli
aam
lret
ffreep
cmp
leave
in
testl
out
xor
in
std
fdivr
fistpll
xlat
hlt
fcom
rcr
or
nop
mov
call
into
cmp
adc
enter
add
ret
xlat
fmul
fmul
rcr
test
xchg
cwtl
fsubrs
jle
and
shl
xchg
ret
ljmp
cld
jecxz
jmp
enter
sar
rcr
aas
out
aad
fdivp
mov
int
out
repnz
test
int3
out
clc
in
in
sub
sbb
stc
iret
rcl
xchg
out
into
incl
in
xor
iret
rolb
cmp
rolb
lret
test
ret
aaa
int3
aad
out
enter
ljmp
out
movl
mov
vpsllq
out
sub
ss
out
int3
ljmp
shl
fxch
lret
jecxz
xor
iret
repnz
aad
sti
ret
leave
ljmp
lret
loop
ss
ss
lock
sbb
aad
cmp
rorb
fabs
mov
in
mov
out
out
fcmovb
call
in
sub
loop
aad
fsub
jecxz
fmul
loope
fst
aad
in
out
ret
fmul
cld
sbb
sar
out
test
fadd
cmc
loop
fisttpll
out
loope
repnz
cmp
clc
jmp
fstp
idiv
icebp
roll
clc
ret
lds
int3
int3
cs
lock
lret
cmp
out
cmc
and
in
fadds
out
fidivrl
xlat
into
ss
aad
cld
cmp
cmp
fdivr
sti
mov
loope
jecxz
nop
out
aad
call
lret
xlat
int3
cli
rcl
jecxz
in
repz
aad
stc
fsubrp
sti
loop
repnz
hlt
ret
xor
das
test
sti
loop
lds
test
icebp
in
in
int3
sub
int3
jmp
cmp
out
repnz
repnz
into
ret
in
popl
out
iret
cmc
icebp
call
stc
cmp
fcomi
cmc
jecxz
mov
out
call
jmp
int
sti
cmp
int3
xor
and
in
xchg
leave
fisttpll
lock
xor
xor
clc
into
jmp
test
pop
add
mov
jmp
rcl
leave
int3
leave
fldt
mov
jle
add
shll
loopne
clc
fcomip
ds
repnz
ret
jmp
sub
sti
mov
hlt
repz
hlt
lret
enter
icebp
cld
in
in
addl
jmp
enter
cmp
clc
sub
ret
icebp
sarl
jecxz
loop
lock
aad
enter
fmul
out
sti
loopne
cmp
lds
fimull
in
std
cld
lret
sub
ret
int
hlt
imul
cmc
lds
mov
jmp
incb
jmp
cmp
and
aad
cmp
test
in
xlat
std
fldl
jecxz
cmc
icebp
fadd
in
leave
fdivr
lret
cmp
inc
cmp
in
shl
mov
int
sti
mov
loopne
in
aam
jmp
neg
cmc
cmc
cld
cmp
shr
std
shr
stc
clc
cmc
int3
enter
loope
loope
loope
lret
call
int3
aad
shr
shl
fdiv
cld
aam
sub
ljmp
test
out
xlat
fnstenv
and
fcmovnu
ret
ror
xchg
test
xor
cmp
leave
sti
fnstsw
stc
ret
clc
enter
std
loop
shl
in
fidivs
shl
fcmovnb
fdivr
xlat
lock
cmp
repz
std
ret
fsub
leave
mov
lock
int3
shll
int3
enter
stc
shl
fmul
ret
loop
orl
out
addl
divl
xor
fadd
out
cmp
cli
stc
aam
vpaddd
jmp
cli
mov
xchg
xchg
in
in
out
into
cmp
shl
bnd
std
jmp
in
test
shl
sub
call
leave
xlat
out
in
jecxz
ss
ds
loopne
or
call
ror
call
ss
ds
fdivr
sar
loope
xchg
int
cli
xchg
into
into
ficoms
iret
lock
fdivp
stc
stc
cld
out
repnz
cld
mov
stc
incb
loop
in
mov
mov
mov
jmp
lret
ror
fstp
ffree
pop
fiadds
add
aad
jle
add
cmp
cmp
aaa
aaa
in
into
cmp
ret
loopne
ds
xchg
in
xchg
std
dec
xchg
repz
xor
aaa
cmp
test
repz
test
lret
fiaddl
shr
in
icebp
in
ret
jmp
in
loopne
cld
repnz
test
adc
loop
fiaddl
mov
cld
ss
enter
repnz
fcmovb
repz
cmp
cld
loop
jmp
fisttps
xlat
lret
int3
int
jmp
out
iret
lret
rol
cmp
stc
lret
leave
fisttps
xor
shl
div
rcl
iret
fdivp
ds
xlat
loopne
call
or
mov
leave
enter
enter
stc
fst
iret
fdivrp
test
xlat
jecxz
aad
clc
incb
xor
lret
in
call
icebp
cmp
cmp
out
cld
jmp
mov
xchg
mov
out
int3
aaa
cli
cmp
int3
cmp
fdivrs
std
cmp
test
test
mov
mov
lock
call
cmp
aaa
call
repz
cld
enter
int3
mov
xlat
shl
repnz
fstpt
in
clc
repnz
mov
test
shl
out
repnz
icebp
aad
xor
aam
xor
xlat
ror
out
out
test
nop
lds
xor
xor
cmp
rol
fadds
incb
mov
rcr
out
mov
fcmovnb
cmp
sarb
cld
test
add
enter
fisttpl
test
aaa
ljmp
cli
shl
test
loopne
leave
dec
xchg
int
xchg
shr
mov
jmp
in
faddp
ds
int
in
aam
loope
in
xchg
jmp
xchg
loop
repnz
aam
cmp
icebp
cli
shl
in
aam
xlat
fcmovne
ret
lret
rcr
faddl
xor
cli
in
call
ds
stc
neg
std
jmp
loopne
cld
int
mov
jmp
enter
int3
aam
pop
adc
fidivs
sub
cmp
jle
int
cmc
in
in
rcr
int
std
lock
cmp
and
fcomip
xchg
fcom
fcmove
addb
aad
int3
fcmove
hlt
out
aas
repnz
into
mul
icebp
call
mov
loop
fldl
jecxz
xor
aam
cmc
fcmovnbe
cld
aam
cld
loop
aam
shl
mov
out
shl
repnz
icebp
rcr
cmp
rcr
aaa
sti
repz
call
testl
shr
stc
in
jmp
fiaddl
aam
shr
repz
cmp
in
fdiv
ror
mov
icebp
lret
int3
in
enter
cmp
iret
shl
adc
faddl
fmulp
call
repz
shll
fcmovnbe
divb
fmul
dec
cmp
lock
in
jecxz
fdivrp
rolb
xchg
xchg
ljmp
idivl
imul
out
rcl
rcr
mov
xchg
rorl
out
cmc
fdivr
cmp
aas
or
cmc
fstp
mov
incb
xchg
std
xchg
xorl
fmul
lret
jecxz,pt
adc
mov
mov
leave
fmuls
out
xchg
int3
into
jmp
divl
xor
stc
lock
xor
lock
sti
jecxz
fisttpl
fimull
in
xchg
xor
leave
ret
fldln2
repnz
hlt
fiaddl
test
hlt
int
cli
loope
loop
test
cmp
in
iret
lret
std
stc
iret
loope
fninit
add
call
fadds
iret
div
xor
hlt
jecxz
out
in
cmp
stc
ljmp
ret
mov
cld
jmp
in
in
xor
jmp
jmp
ds
xchg
aas
enter
ljmp
lock
int3
ret
shl
cmp
fcmovnb
cli
rorl
in
mov
xchg
jecxz
ljmp
test
rol
sbb
clc
leave
cmc
out
fxch
xchg
std
xchg
out
or
int3
ljmp
aaa
imul
div
ret
fdivr
orl
lret
int
jp
fimuls
xchg
flds
jle
add
int3
lds
test
enter
sti
lret
out
cmp
cld
fcmovnbe
iret
sti
sti
adc
std
mul
fsubr
lock
int3
in
in
in
bnd
fst
ret
idivl
test
sar
jmp
movl
into
repnz
cmc
out
in
roll
xchg
out
call
in
push
jecxz
loope
in
call
int3
xor
sub
ret
idiv
out
cld
mov
fcoml
sub
fcmovu
hlt
or
int
fcomip
ret
shl
std
loope
clc
stc
lock
fcoml
int
rcr
or
cmp
adc
stc
loopne
dec
decb
fnstenv
fcmovnb
out
std
not
rcl
fadds
out
std
xchg
cli
sti
xlat
ror
fmull
test
sarb
std
cmp
loopne
faddl
mov
mov
mov
in
clc
lret
int3
loop
int3
frndint
clc
les
ret
mov
nop
xchg
into
mov
xor
bnd
faddl
in
fdivr
leave
test
test
in
int3
xchg
xchg
jmp
in
repz
ror
iret
sarl
iret
imul
rcr
jecxz
lret
jmp
mov
int3
fstp
stc
cmp
fdivr
rcr
cld
xchg
sti
ret
fmuls
out
repz
xor
enter
ror
out
aad
fsub
xlat
test
aam
lds
in
call
aam
repz
lock
imul
lret
ret
and
in
out
ret
fdivp
leave
loop
xchg
out
aad
out
aaa
cmp
fxtract
testl
call
or
fcmovne
rcr
jmp
call
sbb
aas
test
filds
in
jmp
fst
aam
icebp
ret
not
jmp
out
enter
ss
fimuls
xlat
loop
out
leave
jmp
out
int
out
repnz
ret
enter
jmp
lret
test
fstpt
xor
mov
add
jmp
aas
push
mov
adc
addr16
mov
fildl
jle
add
mov
cmp
in
in
aad
xor
shl
clc
out
cmp
icebp
cmp
out
ret
jmp
out
rcl
in
das
loopne
xor
jmp
lret
cmp
aam
cld
rcl
cld
hlt
rorl
leave
rolb
mov
into
cld
into
cmp
cmc
repnz
not
out
out
fisttps
lock
les
ror
in
out
leave
int
icebp
fstpt
sti
in
out
ret
xchg
fcmovnu
stc
testb
loope
in
aaa
cli
cld
sti
into
idivb
aad
addl
icebp
repnz
loop
xor
aaa
xor
xlat
lock
xlat
in
icebp
fiaddl
call
loope
adc
fcmove
xor
jmp
std
loop
stc
icebp
cmp
and
loope
in
out
rolb
shl
fxch
lret
hlt
fdivp
sarb
loope
faddl
sbb
loope
loopne
in
sub
lock
fistpll
sub
aad
jmp
pop
fcomi
cld
loope
cmc
xor
int3
rcl
mul
xor
repz
jecxz
clc
out
test
adc
testl
xor
out
xabort
out
rcl
cmp
rcl
repz
faddl
xchg
xchg
sub
in
out
xlat
fcmovbe
xor
call
test
shr
ljmp
loop
int3
cli
in
cmp
cmp
incl
test
cmc
lret
fmuls
mov
icebp
leave
aam
lock
neg
into
icebp
rcl
ds
fadd
shr
in
mov
rcll
out
fstp
repnz
fcomip
fnstcw
test
ds
leave
lret
mov
cli
fsubrp
ljmp
xor
out
repnz
cld
aad
fcomip
iret
fcmovnb
cmc
clc
in
in
int3
sub
loop
in
icebp
mul
out
ret
out
lock
fidivrl
clc
iret
in
xlat
xchg
aam
imul
in
in
cmp
xorl
int
ret
repz
lock
div
mov
jmp
enter
lret
jno
sbb
xor
mov
cmp
jle
cmp
xchg
clc
jecxz
test
out
mov
clc
ror
fucomi
idivb
rcl
ljmp
ret
jecxz
fmuls
repnz
xchg
xchg
lret
shlb
sti
iret
int3
in
cli
cld
aam
sarl
add
in
lea
out
call
stc
into
std
icebp
shl
stc
fabs
ret
adc
mul
mov
push
repnz
or
cmc
xor
shll
aaa
cmp
shr
cld
call
cmp
sub
leave
int3
aam
in
xor
iret
cmp
cmp
in
xor
sar
sar
cmc
xchg
std
rorb
out
enter
std
fcompp
icebp
cmp
clc
aaa
jecxz
cld
addl
mov
test
das
in
aad
xbegin
cmp
aad
rcl
cmc
ret
mov
stc
stc
cmp
add
int3
ret
clc
cmp
jmp
xlat
in
repz
aam
cld
in
out
test
iret
ror
xchg
xlat
sti
out
lret
iret
divb
lock
loop
push
fsub
addb
lret
out
fdivr
sti
in
aas
roll
sti
jecxz
xchg
fimuls
test
cmp
fmul
ljmp
in
rol
sbb
aas
addb
not
xor
cli
fyl2x
cmp
cmp
leave
int3
idivl
cmp
clc
inc
jmp
lret
fninit
loope
mov
sti
in
cmp
lret
fdiv
xlat
call
test
out
icebp
stc
out
xor
xor
out
out
and
fldl
fcmovu
call
test
xor
xor
fptan
leave
cmp
sti
test
out
mov
test
iret
lock
call
test
fsub
aas
enter
hlt
cmp
jmp
loop
mov
xlat
int3
jmp
xchg
out
fsubrp
das
in
out
icebp
jmp
out
hlt
out
repz
icebp
cmc
add
addb
icebp
iret
into
leave
xor
jmp
int
rol
fcmovu
fstps
outsl
inc
xor
add
add
xor
fcmovnbe
rcl
cmp
ret
xlat
sti
sar
mul
out
xchg
out
mov
in
rorl
out
icebp
out
int
rol
repnz
jecxz
fucom
stc
xchg
mov
xlat
out
iret
lret
out
cmp
out
fcmovnu
rcr
rcr
rcr
sti
lret
fcmovnu
int
test
loop
xor
loope
xlat
out
jmp
cld
sti
neg
in
cmc
xchg
aad
jmp
rcr
faddl
xor
in
lret
cld
sti
call
fdivr
iret
cld
in
mov
loopne
mov
dec
xchg
cmc
out
ljmp
fldl
test
addl
rol
rol
shl
xor
stc
cmp
jmp
int3
out
out
test
aad
xchg
mov
and
jmp
out
cmp
cmp
out
in
fmul
dec
lret
nop
fcoml
call
cmp
int3
fucomi
ds
and
xchg
mov
mov
aam
adc
aad
into
shr
icebp
fcmove
xor
stc
in
jmp
std
leave
iret
out
int
in
rolb
xor
in
ljmp
xchg
cli
cmp
orl
and
out
jmp
repz
iret
xor
clc
aas
cmc
test
cmp
addl
loope
lret
leave
ret
repz
icebp
loope
out
or
into
out
ffree
call
mov
lock
cmc
lret
into
imul
neg
clc
repz
xchg
jmp
out
jmp
xchg
mov
ret
lret
sti
into
cmc
repz
cmp
ret
mul
mov
ffreep
out
lock
loope
xchg
out
enter
std
fmul
sarl
cmp
ret
mov
clc
in
xchg
clc
int3
ljmp
leave
icebp
leave
ss
cli
out
hlt
icebp
idiv
test
out
add
ret
int
in
iret
hlt
ror
aad
out
lret
stc
hlt
lock
repz
testb
test
iret
shl
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
lret
ret
rcl
fcmovbe
lret
shll
in
push
nop
mov
add
add
aad
xor
sub
rcl
into
imul
stc
loopne
hlt
stc
cmc
fdivr
repnz
in
test
test
sti
ljmp
cmp
xor
lock
iret
std
idiv
aaa
xlat
sar
test
loop
fsubr
in
out
fisttps
xor
xlat
cmp
sar
out
fimuls
loopne
mov
xchg
hlt
ror
int
out
not
std
std
rol
sti
shr
test
mov
orb
call
out
fucomi
fcomi
jecxz
idiv
aad
idiv
mov
fdivr
in
int
int
xor
xor
not
jecxz
stc
mov
int3
enter
xchg
mov
loopne
icebp
das
fnstenv
ror
iret
cmp
addb
mov
cmc
adcb
aaa
repz
cld
loopne
cmp
test
loop
in
stc
lret
fimuls
divb
in
imul
in
icebp
out
neg
cmp
lret
inc
cmp
ljmp
icebp
lret
xchg
out
jmp
leave
sub
aad
imul
sti
cld
rcr
fucomi
loop
in
fimull
lock
addl
test
mul
in
out
xchg
fsubrp
xchg
int
loop
divl
repz
repnz
xor
cmp
fimull
sti
in
loop
lret
jecxz
int
icebp
ret
lret
lret
jmp
icebp
shl
aad
fucomip
lret
test
xor
xor
cmp
ror
lret
loop
cld
adc
enter
out
leave
leave
incb
idivb
out
aad
call
xor
xchg
cli
fmul
xlat
cmc
into
jmp
nop
lret
mov
out
xor
icebp
in
add
out
aam
in
jecxz
fdivr
les
loopne
mov
clc
mul
out
xor
clc
jmp
fdivr
repnz
repnz
cld
mov
test
out
fimuls
aad
jecxz
bnd
shl
out
cli
fimuls
mov
jmp
mov
aam
fstp
fcoml
sub
adc
add
xchg
mov
mov
hlt
loop
leave
xor
std
das
repz
leave
ds
loope
cmc
not
in
roll
xchg
aas
repnz
rcl
jmp
aaa
jmp
les
enter
jmp
int3
repnz
out
out
xor
div
in
cmp
leave
icebp
sarb
mov
mov
filds
xlat
shr
xor
fdivrl
aad
jecxz
jmp
fmul
or
shl
loop
into
jmp
aaa
xlat
fcomip
cmp
lret
cld
in
lock
adc
call
orl
ljmp
iret
idivl
fnstsw
lock
sarb
loope
neg
mov
test
fildl
cmc
lock
jmp
cmp
cmp
test
cmp
push
imul
faddp
rclb
shl
cld
in
xor
loope
clc
addl
mov
lock
ljmp
xor
repz
lret
fmul
faddl
add
test
mov
icebp
test
ljmp
aas
int3
shl
aas
rol
ror
dec
and
and
out
shl
cs
into
fnsave
ror
xor
stc
fsub
loop
ffreep
ljmp
mov
rcl
iret
ret
fsincos
fdiv
cmp
aas
hlt
rol
sbb
fsubp
ret
ljmp
xchg
lock
mov
shrb
repnz
cmp
leave
leave
sti
shl
rol
std
enter
sti
sar
enter
hlt
jmp
cmp
aas
repz
div
repnz
repnz
testl
mov
aam
sub
out
ss
in
xor
cli
int
iret
mul
out
ret
mov
mov
in
out
shr
in
ljmp
repnz
faddl
loopne
mov
stc
lret
xchg
repnz
lret
ror
aam
rcl
cmp
stc
sar
cld
in
sub
xchg
xchg
leave
lret
neg
repz
cli
hlt
out
in
ljmp
fcomi
xor
add
jmp
ret
enter
int3
or
test
jo
add
add
les
mov
enter
in
fnsave
ds
iret
ret
cmc
clc
aas
roll
xlat
loop
lret
int
iret
xchg
jmp
lock
out
test
push
adc
fyl2xp1
out
out
in
xchg
call
fnstsw
cmp
out
cmp
ret
xlat
mov
loop
mov
xchg
ret
lret
in
into
int
out
in
cmpb
addl
out
call
out
xchg
aad
ret
das
out
cmp
aad
sti
fidivrs
neg
rcr
aad
testl
test
ret
aam
call
cmc
repnz
div
aad
ljmp
xchg
repz
jmp
ljmp
iret
aam
sar
cld
sti
xchg
mov
mov
jmp
icebp
ror
int3
fcmovne
cli
divb
cmp
jmp
repnz
in
aad
in
mov
test
call
leave
cmp
cmp
fmul
cmp
fsub
in
xchg
clc
ljmp
lock
int3
aam
jecxz
jmp
cmc
sti
in
aad
rcl
hlt
ds
out
and
out
loope
lret
call
ljmp
cmp
fdivrl
cmp
out
cli
call
int
int
int3
cmp
out
out
mul
sarb
aas
clc
div
in
imul
mov
incl
in
xor
lock
fldcw
jmp
cmp
addl
fcmovne
jmp
cld
xchg
sti
or
ljmp
aad
xor
clc
rol
loope
add
mov
jmp
ret
shl
hlt
aam
std
cmp
loop
in
add
xchg
ror
fucom
adcb
shr
cmc
in
fdivrl
iret
addb
aad
sti
jmp
adcb
in
repz
stc
lret
iret
stc
aam
sar
cmp
aam
cli
aad
mov
in
fsubr
loop
iret
shl
in
jmp
fcmovnbe
stc
xor
loopne
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
nop
jecxz
sub
add
add
jecxz
jecxz
test
icebp
lret
xor
into
in
mov
into
mov
loopne
hlt
xor
aad
lret
sarb
xlat
icebp
loop
call
repnz
loop
loopne
sub
fnstcw
jmp
xlat
fucomi
loope
rcr
ret
jecxz
xor
int
jmp
ljmp
xor
jmp
div
inc
ret
sar
stc
fstp
jecxz
cld
addl
jecxz
div
sar
mul
xor
sti
out
adc
ffree
cld
jmp
cli
test
mov
loop
xor
fdivl
aad
icebp
hlt
in
out
fcmovb
test
rcr
xor
lret
mov
xor
cmc
fcmovnu
cmp
loop
ret
aad
sub
nop
shr
std
out
jecxz
out
ljmp
neg
in
in
test
jecxz
or
mov
icebp
jecxz
aad
cmc
lock
int
cmc
jmp
std
xchg
idiv
mov
ds
fucom
mov
in
fiadds
ss
fsincos
ljmp
xor
mov
fst
xchg
nop
test
out
sub
lock
testl
repnz
test
in
cmp
lret
vpmullw
sti
cmp
out
loope
cld
cli
aad
clc
lret
ret
loop
fcoml
test
out
cli
neg
in
stc
out
in
iret
cmp
in
xchg
ret
ljmp
std
call
nop
xchg
lret
shr
ret
ss
in
into
into
fincstp
cmp
fiadds
fsub
mov
shr
shl
xchg
mov
call
hlt
ds
dec
shll
testb
int
test
repz
out
jmp
icebp
fdiv
jmp
ret
std
and
lret
ror
lret
out
lock
ror
ror
rcr
std
cmp
ror
fnsetpm(287
repnz
and
mov
int3
nop
fsub
repz
fists
jmp
ss
add
icebp
shl
fcomi
sar
std
mov
iret
lret
std
repnz
loopne
in
int
cld
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
ljmp
out
in
shl
or
lret
out
out
cli
lret
mov
loop
cmp
cld
in
xlat
ss
xlat
cli
and
into
out
testl
int
mov
jmp
fcom
ljmp
sti
iret
test
test
loop
std
lock
shr
ret
ljmp
std
out
out
loopne
fcmovbe
int3
fxch
xchg
fmul
or
pop
ss
cli
div
out
lret
rcl
lret
sarl
out
repz
ffree
mov
mov
xchg
cmc
divl
in
ljmp
adc
xchg
fcmovb
repnz
ljmp
shlb
aad
call
cmp
mov
sar
fmull
shrl
aam
aas
lret
cld
fdivr
fisttpl
hlt
sti
mov
sti
test
fucomp
in
xor
aam
xor
aam
aas
ret
fcmovnu
ljmp
rolb
leave
aad
repnz
aaa
shl
repz
in
stc
test
mov
jmp
mov
in
call
loopne
ss
cmp
enter
xchg
leave
fstp
in
xchg
xor
jmp
cld
repz
xlat
cli
test
mov
loope
test
leave
loop
out
imul
lret
jmp
into
cmp
hlt
xchg
out
in
in
and
fmul
hlt
adcb
cmp
icebp
fsubrp
cmp
xlat
decl
xchg
out
test
shl
in
cmc
lret
ss
enter
cmc
rol
fcomp
loopne
mov
mov
or
jmp
loop
in
int3
cmp
call
shl
out
hlt
xchg
sub
into
and
ljmp
jmp
fidivs
out
ror
flds
icebp
call
add
shl
jmp
ret
sub
idivl
out
fcmovne
sti
loop
fcmovb
mov
aad
mov
test
iret
int3
pop
inc
xchg
sub
jmp
rcl
iret
aad
aad
pop
aaa
jp
test
sahf
in
add
add
aaa
lret
shll
fdivrl
repnz
cmp
repnz
cmp
hlt
out
test
jecxz
jecxz
fiaddl
aam
lock
hlt
hlt
cmp
sarl
into
iret
test
addl
sti
lock
test
iret
leave
enter
leave
cmp
fcomip
fdiv
std
aad
jmp
icebp
fsub
xchg
sub
out
aaa
ss
aam
out
sti
ret
repz
fmuls
mov
stc
repnz
fisttpll
cmc
lret
xor
cmp
xor
fcmovne
mov
xchg
in
jecxz
enter
call
or
ds
cmpl
movb
aam
xchg
lret
cli
fnstenv
xor
out
cmp
lret
in
loope
clc
loopne
aam
enter
int3
xor
xchg
shl
das
cmp
fpatan
leave
idivl
cmp
xchg
hlt
rol
movb
xchg
incb
stc
out
cmp
rcl
cmp
loope
test
shl
out
decl
xchg
xchg
in
loopne
loop
jmp
fld
cmp
rcr
shl
xchg
xchg
out
addb
hlt
fdivr
int
rcr
test
test
rolb
in
addb
loop
sarl
icebp
cmp
imul
cmp
hlt
shl
sti
cld
mov
out
fstp
mov
and
mov
jmp
lret
bnd
into
clc
ror
xchg
movb
sarb
loop
jmp
call
fsqrt
sti
xlat
not
aam
cld
fcmovnb
mov
test
out
in
mov
aas
sar
in
jecxz
xchg
mov
jmp
lret
loopne
nop
mov
idivb
fsubr
sarb
stc
int
lds
aad
stc
mov
test
out
out
iret
aam
jmp
cmpl
fdiv
rcl
fsubr
xlat
jecxz
lds
fsubrp
xor
mul
out
int3
out
lret
in
xor
fiaddl
mov
xchg
xchg
dec
jmp
iret
rcl
fcomp
aad
mov
xchg
fstpl
add
add
cli
cli
mov
shr
xor
ror
iret
xor
shl
rol
push
jecxz
call
loopne
rolb
into
lret
ss
xor
out
cmc
cmp
loop
ds
ret
mov
repnz
xor
rcl
ror
aad
in
rcl
inc
test
enter
in
mov
mov
in
fucomp
ljmp
cmp
rol
leave
test
loope
int
sub
icebp
lret
cmc
in
int
cmp
fdiv
jecxz
lea
rorl
into
div
lock
xor
out
aad
fsubp
call
mov
orl
lret
ljmp
cli
les
loop
aas
rorl
cs
hlt
iret
cmp
cmp
fdivr
test
loop
bnd
stc
leave
faddl
loop
xor
cmp
xlat
jecxz
cmc
fistpll
ror
cld
into
mov
ret
in
leave
lea
out
repnz
leave
cld
cmp
xchg
sar
xlat
orb
lock
or
xlat
repz
int
repnz
icebp
std
hlt
mov
sti
nop
loope
out
ljmp
xlat
cmc
fxch
aad
out
xlat
rcl
mov
mov
out
fimuls
xor
out
jmp
ror
clc
repnz
leave
xlat
addl
xchg
call
aad
xor
leave
shl
frndint
enter
sbb
ret
mov
hlt
in
ljmp
jmp
fcmovbe
xchg
rol
enter
jmp
fsubp
sub
out
xor
sti
sti
jmp
test
aam
ftst
fcmovbe
std
popl
out
xchg
test
hlt
call
sbb
cmp
mov
addl
test
test
call
jmp
cld
sti
fldl
loope
inc
in
scas
roll
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
iret
jle
rclb
repnz
add
lret
mov
shl
and
into
shl
in
xor
shl
hlt
fdivr
std
hlt
rcr
out
cld
mov
jecxz
into
lret
fucomi
aaa
loopne
neg
ret
cld
fildl
test
cli
cld
iret
call
in
call
lret
ret
repz
testb
jecxz
rorl
leave
rcl
ret
in
int3
leave
fucom
lret
sbb
fidivrs
xchg
xchg
xchg
out
aas
xlat
lock
fsubr
xor
cld
flds
stc
not
aad
cmp
int
or
mov
div
out
cli
sti
iret
lret
aam
lock
fcomip
loope
test
ljmp
xlat
icebp
cmc
aad
fcomp
rol
roll
xlat
xlat
out
lret
std
iret
lret
lret
shll
int
int3
cld
repnz
test
cli
mov
cmp
mov
lret
mov
fsubrp
out
repnz
idivl
fsub
aad
lock
not
sti
loopne
out
stc
neg
int3
loopne
jmp
repnz
xor
iret
ret
in
xor
call
iret
test
repz
testb
xchg
xchg
out
int3
jmp
shr
sti
fdivs
fiaddl
fdecstp
jmp
cld
out
in
mov
rorl
in
aaa
xor
int3
out
aam
cmp
in
test
std
lret
fmull
out
hlt
das
imul
cmp
cmp
cmp
in
fmul
test
aaa
jecxz
repnz
cmc
mov
call
nop
xchg
adc
in
icebp
fcmovne
shr
fstpt
shr
loop
sti
roll
loopne
into
sti
in
lock
aam
xor
aad
cmc
fstp
fsubr
ds
mov
call
shl
fsubrp
cmc
shr
leave
vcvttpd2dq
lret
shr
sti
stc
int
icebp
aad
mov
sub
out
jmp
jmp
call
int
repz
push
leave
loop
test
mov
push
repz
jmp
cmp
not
lret
aas
in
xor
mov
dec
inc
add
dec
jmp
int
ret
lret
aad
int
jmp
test
mov
cmp
jle
les
jmp
call
fdivp
jecxz
repnz
call
aad
jecxz
shl
out
fucomi
out
lea
iret
jmp
out
aam
into
cld
addl
idiv
div
shl
iret
fistl
in
fmul
fcom
repz
repz
stc
out
loop
stc
loopne
rorl
call
lock
sar
repz
clc
mov
stc
std
int
test
std
cli
cld
lret
aad
das
jecxz
shll
out
sarb
aam
loopne
clc
cld
shl
mov
div
fcmovnu
in
test
xor
xlat
repnz
icebp
in
sti
int3
test
ret
test
into
int3
shl
xlat
enter
jmp
sarl
fdivp
cmp
or
out
in
decb
xchg
add
rol
ljmp
fnstcw
fidivrl
call
incb
leave
xor
xor
iret
lock
ljmp
into
xor
loope
lret
mov
sub
imull
idiv
clc
rcl
cmp
addb
out
lret
xchg
shrb
xor
cmp
int3
clc
shl
lret
sar
clc
aad
testb
out
mov
aaa
div
ss
hlt
xor
and
rcr
sbb
movl
in
shll
divl
stc
loope
test
rcl
loop
fucomip
loop
roll
in
xor
cmc
ljmp
lock
fcmovnb
neg
cmp
jecxz
call
iret
jmp
sbb
test
clc
rcr
aas
cmp
jmp
fmul
fsubp
mov
xchg
mov
in
aad
out
out
into
out
stc
fldl
clc
sti
xchg
cli
xchg
mov
enter
icebp
inc
xor
repnz
std
sar
repz
jmp
icebp
cmp
aas
int
into
loope
into
out
jmp
jmp
fmul
xor
add
pop
mov
pop
pop
pop
leave
ret
