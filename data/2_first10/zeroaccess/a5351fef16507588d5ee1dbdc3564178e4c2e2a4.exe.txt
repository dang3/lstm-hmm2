push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
in
dec
in
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
pushl
cmc
pop
mov
xlat
push
add
mov
sbb
jnp
mov
fwait
cs
xchg
lret
cltd
mov
pop
lret
aad
popf
xlat
fimull
out
insl
mov
or
lock
inc
jb
sub
mov
adc
inc
fstpl
jp
mov
sub
je
jno
gs
roll
movsl
xor
cli
aam
call
pop
or
xor
jge
lods
inc
shl
xor
out
sbb
push
aad
xor
out
mov
inc
push
jp
sub
lods
nop
fdivr
pop
cmp
mov
mov
fdivrs
fs
fsubs
popf
add
loopne
mov
outsb
add
xorb
leave
inc
cmp
push
aaa
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
xchg
cs
dec
cli
jg
jle
jg
jle
outsl
cs
loopne
idivl
add
repz
dec
xchg
and
xchg
test
std
sbb
sub
es
fdivrs
in
leave
aam
rep
cli
sbb
aam
or
clc
vpgatherdq
or
lahf
scas
mov
dec
mov
mov
or
daa
pop
pushf
movsl
fs
in
and
or
and
jl
add
cmpb
add
cmp
sub
out
xchg
xor
cmpsb
mov
adc
data16
lahf
subl
sti
addl
cwtl
xor
in
dec
std
or
jb
ret
fs
or
bound
sbb
fucomip
rorb
xor
push
js
leave
xchg
mov
push
inc
mov
dec
inc
sbb
inc
jbe
ja
scas
jecxz
adc
movb
or
inc
in
mov
pop
xchg
js
push
gs
cmp
lret
add
daa
or
insl
pushf
pop
inc
cmpsl
out
push
int
mov
pop
roll
sub
xchg
repz
jecxz
mov
jno
cmp
xchg
cltd
insl
ds
scas
mov
cwtl
mov
daa
mov
arpl
in
push
cmp
push
cmp
or
mov
jae
jp
cli
dec
mov
aas
mov
mov
sub
frstor
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
test
jge
jle
jg
jle
dec
std
sbb
mov
movsl
andl
cli
lret
sub
imul
sbb
pop
pop
inc
std
mov
sub
sbb
shrl
enter
sti
jnp
cltd
cwtl
sahf
inc
jge
push
inc
jb
data16
gs
andl
cmp
inc
int
lret
and
sti
mov
lcall
adcl
cltd
sbb
sub
es
push
xor
lds
push
pop
jecxz
stos
and
xor
cmp
out
pop
and
arpl
stos
pop
roll
and
stos
aad
dec
cltd
add
mov
daa
sbb
aas
nop
push
jmp
mov
call
mov
js
adc
pop
mov
xlat
insl
jg
ficompl
lcall
test
jns
add
test
lds
addr16
lret
mov
jl
daa
gs
mov
out
mov
stos
cwtl
popa
pop
rorb
shll
xlat
push
dec
scas
das
adc
cmp
mov
sti
arpl
xor
icebp
mov
adc
xchg
dec
jae
out
add
ffreep
xor
jmp
lock
cmp
xlat
inc
lds
lret
out
outsl
into
outsl
push
lods
imul
fcmove
fs
and
ud2
mov
jle
xchg
sbb
test
frstor
inc
int3
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
mov
jle
jg
jle
cmp
negb
movsl
add
sahf
push
lock
add
clc
and
sbb
and
jp
loope
in
clc
insb
aad
jecxz
popa
ret
lock
ljmp
xchg
jb
comiss
xchg
jbe
leave
xor
sar
push
fdivr
mov
sub
mov
ss
sub
pop
push
test
loope
notb
and
mov
lods
dec
cs
xchg
cmp
xor
xor
mov
pop
in
lds
add
stos
jb
flds
jo
and
das
cli
ja
es
mov
lahf
jb
push
inc
ss
pusha
frstor
popa
es
or
dec
add
xchg
data16
jns
leave
test
leave
xor
push
popf
gs
adc
jge
xor
add
into
add
daa
in
mov
xchg
mov
cmp
call
iret
shr
shlb
cmc
push
push
or
jbe
push
xor
xor
shr
xor
das
stc
cmc
adcb
dec
dec
ret
scas
pop
mov
cmp
jno
lahf
aam
jp
out
cmp
fiadds
arpl
mov
ret
mov
cmp
das
mov
xchg
andb
into
push
repz
pop
pop
scas
dec
cmpsb
adc
aam
mov
mov
pop
mov
pushf
add
add
jmp
push
dec
xor
or
push
js
jle
jg
jle
adc
inc
pop
dec
ret
mov
pop
push
hlt
pop
or
aam
and
jae
in
aad
and
jge
or
jnp
call
ss
fists
enter
insl
fs
ret
addr16
loope
cmp
pop
push
das
je
or
sbb
cmpsb
mov
xchg
pop
mov
fimuls
push
and
xchg
xchg
jmp
repz
loopne
mov
repz
cmp
jbe
mov
push
inc
sub
dec
push
pop
push
mov
xor
jbe
mov
jno
fwait
test
inc
push
leave
pop
das
jmp
inc
aad
xor
or
jno
sti
pop
mov
adc
add
daa
or
sbb
pop
jns
sahf
cli
push
cs
sbb
ficompl
and
adc
and
pushf
push
sahf
sub
cmp
je
loopne
ljmp
les
xchg
lcall
int3
push
hlt
rcrl
movsl
push
pop
mov
clc
dec
cli
inc
sarl
repz
or
cmp
or
and
dec
xchg
cltd
pop
cli
jnp
xor
sahf
mov
lahf
fidivl
lret
pop
mov
popf
pop
ds
mov
in
loop
adc
out
cwtl
sbb
test
fucom
sub
jnp
mov
add
mov
dec
clc
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
mov
adc
jns
jle
jg
jle
mov
in
lods
push
push
or
lds
push
xchg
mov
sbb
hlt
jp
imul
adc
dec
int3
insl
mov
sub
addr16
shl
push
in
es
call
and
mov
add
adc
shll
jae
pop
xchg
aam
fld1
out
dec
clc
push
scas
sub
out
popa
cwtl
mov
mov
ljmp
inc
in
sub
cmpb
in
outsb
xlat
or
pop
inc
pushf
add
cltd
std
pop
mov
cmp
sbb
and
in
out
iret
xchg
lret
xor
mov
popf
lahf
fisubrl
popf
into
jmp
or
and
out
ljmp
xchg
xchg
ljmp
jg
repz
push
dec
sub
and
sbb
jl
or
lahf
adc
jg
das
xchg
mov
adc
fdivrl
adc
cmp
aaa
adc
iret
lcall
popa
xchg
outsb
inc
addl
data16
inc
jp
dec
nop
inc
dec
cmp
jno
pop
clc
pop
das
stc
jp
push
mov
adc
addb
imull
add
ret
insb
jbe
sti
xor
out
into
adc
les
inc
add
and
aam
shrb
adc
rorl
add
and
arpl
jle
int
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
pop
push
pop
jle
cli
jg
jle
xchg
and
mov
in
lods
js
cltd
jo
mov
mov
into
lds
sbb
repnz
mov
inc
jge
xchg
adc
mov
mov
test
stos
negb
lods
loope
xor
push
inc
inc
mov
mov
icebp
xchg
aaa
sbb
loope
xor
scas
push
rolb
jge
and
sbbb
fstps
and
mov
rcrb
and
ror
mov
inc
jl
scas
outsl
rolb
ret
in
xchg
add
sub
cmp
insl
sahf
lahf
mov
je
xor
jns
sub
sub
add
test
mov
and
add
or
add
loope
into
fstl
icebp
sbb
int3
push
ss
cli
imul
mov
pusha
and
lds
sbb
xor
aad
ret
in
cltd
call
add
loope
mov
lret
mov
or
sbb
pop
lods
insl
jb
rsqrtps
push
hlt
pushf
sub
cld
dec
iret
mov
ja
add
dec
fwait
jge
test
stc
push
xlat
test
mov
adc
pusha
dec
adc
pusha
data16
movsl
xchg
xchg
out
popf
outsb
mov
test
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
mov
inc
sub
es
aaa
mulb
bound
addr16
xor
mov
std
int3
adc
push
mov
lods
hlt
mov
aas
ss
adc
pop
mov
mov
mov
jbe
adc
fmull
jb
dec
cmp
pop
mov
push
mov
mov
xor
insl
pop
cmp
mov
cli
shrb
shl
xor
inc
xchg
dec
jp
movsb
push
jl
or
loopne
sbb
lods
xchg
fdivl
mov
and
inc
into
xor
inc
mov
or
mov
aam
mov
jecxz
lods
adc
xchg
add
loopne
mov
inc
mov
sbb
or
mov
pop
jb
std
ficomps
cmpsb
lret
test
sub
xchg
xchg
aad
mov
fildl
jno
jge
jge
cmp
push
fistpll
outsl
outsl
outsb
mov
fwait
lret
lcall
cmpsl
mov
cmp
fs
push
out
test
lock
mov
in
test
std
stos
addr16
or
dec
lods
dec
test
dec
rorb
and
gs
lods
roll
push
data16
in
int3
in
inc
incl
lret
mov
ss
fadds
mov
or
test
outsb
popf
mov
or
jb
scas
or
jmp
push
sbb
inc
call
add
pushf
add
add
dec
and
jno
push
mov
test
adc
jle
jg
jle
sub
mov
dec
fcmovnu
stos
cmp
add
out
cmovge
movsb
pop
pop
jnp
push
jb
shlb
jl
sahf
push
cmpsb
loop
loopne
or
adc
jecxz
mov
or
js
jmp
mov
mov
shrb
mov
or
sbb
leave
aad
adc
mov
jns
adc
push
xor
fdiv
lods
sub
or
enter
adc
scas
out
xor
repnz
lods
test
xor
je
jb
and
andb
dec
pop
insb
dec
test
cmp
inc
mov
push
push
and
or
pop
sub
rorl
pushf
loope
jbe
push
jge
and
int3
jp
pop
sbb
cli
jmp
xchg
xor
push
xlat
movsb
push
jae
adc
cli
rclb
cmp
das
mov
mov
loop
cmovs
jb
out
xor
add
jb
pop
or
cltd
mov
loopne
lahf
mov
xor
push
fwait
mov
cmp
inc
xchg
es
cld
sub
xor
ljmp
ret
into
repz
push
mov
iret
stos
sbb
sub
repz
mov
movsb
jne
fwait
add
xor
enter
testb
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
mov
add
cli
jg
jle
imul
daa
dec
popf
cli
push
negb
aam
test
push
mov
call
or
rclb
mov
mov
xor
sbb
xchg
cmp
ret
mov
inc
mov
dec
lea
sbb
scas
cmp
pop
add
jle
push
popf
and
sbb
inc
or
sbb
stc
add
or
aam
jb
fs
ljmp
das
cld
pop
sbbl
pop
repnz
in
cmp
in
iret
and
rolb
rol
in
daa
sarl
and
mov
cmpl
xchg
ret
xchg
lock
dec
scas
push
mov
pop
pusha
mov
jp
sbb
scas
dec
mov
and
sbb
aad
cmpsl
dec
mov
pop
popf
outsb
mov
add
rol
jae
jmp
push
icebp
add
and
mov
in
roll
mov
call
lds
ret
rcl
ret
dec
mov
fucomp
lds
lock
sbb
pushf
clc
dec
addr16
sub
mov
mov
imul
jle
jae
out
jle
test
push
mov
sbb
fs
mov
and
or
xchg
mov
and
shrl
loope
cmp
mov
inc
lock
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
inc
jns
shll
jle
cli
jg
jle
ret
mov
pop
pop
dec
test
int
aaa
lahf
mov
mov
pop
jle
fildll
lods
icebp
xor
xchg
repz
loop
aaa
mov
in
test
xor
hlt
dec
orl
jae
inc
out
shrl
mov
cmp
cmp
inc
push
cmp
xchg
paddusb
cvttps2pi
stc
in
mov
and
pop
addr16
sti
loope
mov
and
test
jmp
sbb
mov
pop
fadd
pop
xchg
inc
sub
dec
int
mov
and
sbb
call
lods
int
rcrb
out
jae
xor
shlb
lock
mov
test
push
mov
fdivl
in
enter
cmp
xchg
shl
mov
nop
imull
loope
cld
xchg
movsl
mov
or
loopne
fs
leave
pop
hlt
mulb
mov
adc
lret
sub
iret
or
cs
sbb
jbe,pt
fistl
inc
adc
setp
stos
fwait
aas
sbb
outsb
push
mov
fidivl
jg
pop
sub
xchg
xchg
xor
popa
or
test
sbb
mov
mov
data16
xchg
cmp
orb
nop
stc
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
sub
jle
cli
jg
jle
jbe
ds
sahf
sub
jo
sbb
jl
lods
xor
lea
or
int
and
pop
das
stos
and
mov
jle
mov
push
jne
mov
fnsave
out
jmp
adc
push
mov
jno
ss
aam
inc
jne
movsl
pop
ds
jecxz
out
cwtl
subb
dec
les
cmp
xchg
rorl
push
push
mov
jmp
fidivs
mov
andb
mov
dec
add
das
incb
data16
sub
ss
cmp
push
js
xor
push
inc
jno
sub
sbb
leave
fwait
inc
int3
inc
imul
xchg
mov
xchg
pop
iret
adc
push
adc
dec
mov
and
clc
imul
cli
jb
push
push
ljmp
repz
jb
push
leave
sbb
pushw
adc
xor
sbb
rcrl
xchg
sub
ret
cmp
jo
js
and
xchg
mov
dec
lds
inc
movb
xchg
adc
and
push
push
popf
adc
rolb
aas
cmp
rcll
jmp
movsl
cmpsl
imul
ds
lock
sbb
scas
add
mov
adc
rorb
adc
test
jmp
inc
push
jnp
or
push
adc
nop
dec
jle
adc
jle
jg
jle
mov
ds
fsubl
push
xchg
nop
scas
dec
xchg
inc
fwait
sub
movsb
xchg
or
mov
lock
push
dec
xchg
rcr
or
ret
fstps
mov
aaa
pop
dec
xchg
outsl
adc
mov
cwtl
mov
stc
bound
inc
sbb
in
cmp
seta
test
adc
add
dec
and
leave
push
outsb
nop
cwtl
cld
pop
loopne
aad
addr16
aam
sbb
mov
sbbb
ret
jl
mov
adc
xchg
jg
movsl
sub
addr16
sysret
pop
push
mov
pusha
mov
leave
inc
xor
cltd
ja
clc
out
mov
pop
les
cwtl
jne
sub
pop
push
inc
mov
lahf
xor
sbb
cmc
mov
clc
es
leave
scas
jbe
pusha
sub
pop
sbb
movsb
xchg
fisubl
adc
mov
std
sub
sub
push
mov
xchg
xchg
mov
je
sub
cmpl
into
and
jo
mov
in
shlb
push
negl
leave
xchg
cwtl
cmp
push
add
mov
in
pop
adc
mov
out
scas
push
sbb
sbbl
sbb
sub
or
test
pop
or
mov
or
cs
sbb
sub
in
movl
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
cmp
je
stos
or
jle
in
cmc
jns
cmpsl
xorl
in
cltd
sahf
bnd
loop
xchg
xchg
fcmovne
sub
lods
jecxz
in
cmpsb
arpl
fsubr
rcll
mov
jnp
jb
cmp
rol
fldl2e
push
in
jmp
push
insl
fldcw
stos
jg
stos
addr16
inc
ss
stos
mov
sbb
shrl
xchg
sbb
das
add
mov
dec
xor
and
cwtl
ljmp
fxch
sahf
iret
addr16
sarb
ret
aad
inc
test
scas
xchg
add
mov
test
sbb
mov
aad
mov
aas
xor
out
call
lea
cmp
es
je
xorl
ret
std
out
cwtl
lea
mov
mov
jo
call
aaa
icebp
xor
movsb
jecxz
xchg
cmp
shrl
in
repz
and
adc
cs
lock
or
cltd
pop
or
test
stos
jl
scas
call
in
mov
add
lea
test
lds
sub
jb
orl
sbbb
push
and
push
repz
gs
adc
pop
xchg
mov
inc
pop
add
jns
cmpsl
push
mov
mov
fwait
int
xchg
mov
mov
clc
mov
je
repz
jle
mov
inc
mov
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
jns
popf
in
or
cli
jg
jle
sub
sub
test
scas
inc
or
arpl
jge
jecxz
lahf
mov
cs
cmp
sti
aas
dec
sbb
dec
pop
xor
xchg
add
in
xor
pop
xchg
or
dec
loope
test
aaa
in
fdivrl
cld
scas
push
xchg
int3
nop
jmp
sub
fwait
loop
fs
cmp
xor
mov
mov
loope
test
mov
mov
int
test
fnstsw
mov
ljmp
gs
outsb
ret
and
divl
stos
inc
int
int
mov
negb
dec
movl
pop
cld
jl
push
sti
pop
dec
jp
pop
mov
sub
cld
jl
in
mov
divl
lret
and
push
sub
nop
aam
lahf
dec
arpl
push
and
xor
iret
stos
in
adc
xor
negl
cmp
and
sub
clc
jg
dec
lods
sub
out
sbb
jg
outsl
cmpl
clc
dec
and
jno
incl
out
pop
popa
inc
aam
fbld
ja
mov
mov
out
and
xchg
fmull
rcll
sub
fbstp
pop
rcrl
push
jb
xchg
int
cmp
and
int
out
jle
mov
pop
int
xchg
adc
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
add
jle
jg
jle
xor
sbb
xlat
insl
cltd
frstor
stos
mov
cmp
lcall
fxch
stos
mov
xchg
pop
pusha
and
add
pop
lods
adc
or
sbb
fcmovnb
dec
loopne
jp
gs
cli
ss
call
push
repnz
leave
ljmp
inc
movsl
imulb
xor
loopne
leave
dec
sbb
aas
xorl
clc
fs
ret
insl
sub
fcmovnu
mov
mov
add
pop
loop
pop
aas
mov
xchg
dec
lcall
or
arpl
pop
int3
dec
lret
lcall
test
mov
lret
push
pop
xchg
sbb
adc
or
in
pop
mov
xchg
mov
and
mov
enter
inc
jbe
mov
les
mov
nop
jnp
mov
fidivl
stos
lock
add
mov
lret
sub
lea
pushf
jbe
fldl
cmc
popa
push
cmpsl
mov
dec
addr16
testb
imul
je
fmull
adc
pop
inc
inc
movb
add
orb
inc
mov
dec
add
cs
stos
arpl
inc
test
jg
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
out
and
cli
jg
jle
dec
pop
mov
inc
ficompl
orb
js
rep
push
adc
pushf
lea
lock
cmpsb
aas
je
fisubrl
push
mov
and
cltd
jl
adc
inc
mov
push
xor
sub
xor
pop
add
loopne
in
fisubrs
xor
leave
mov
mov
xor
int
xchg
pop
xor
mov
mov
add
or
sbbb
test
in
jmp
mov
mov
divb
out
cmp
fisubs
xchg
mov
adc
icebp
dec
xchg
sbb
sbb
test
shlb
inc
mov
inc
out
pop
push
lods
and
adc
addr16
cwtl
jp
mov
push
call
or
sbb
bound
sti
or
test
xchg
setno
ret
pop
adcb
scas
push
and
stc
bnd
mov
clc
andb
adcb
mov
xchg
mul
pushf
popf
stos
mov
mov
arpl
fists
std
in
adc
xor
mov
mov
sahf
iret
scas
jle
jl
mov
cld
jecxz
stc
enter
ret
ret
dec
push
push
in
xchg
shr
dec
mov
xor
jecxz
pop
insb
les
call
mov
mov
add
pop
jmp
add
mov
adcb
pop
mov
jg
jle
loop
in
push
sbb
mov
push
xor
mov
push
push
lcall
pextrw
test
push
sub
popa
cwtl
and
ss
stos
adc
shl
push
mov
and
lcall
in
inc
fsub
jno
pusha
ja
sub
add
inc
fldl
js
pop
and
rorl
fisubrl
out
dec
and
out
fndisi(8087
jbe
mov
aad
rcr
call
add
aas
cmp
push
out
stos
pop
bound
cwtl
insl
movsl
decl
pop
cld
jmp
cmp
jg
xor
inc
cmp
ret
jp
lods
sub
sub
add
mov
pop
mov
add
orb
xlat
pop
pop
call
mov
push
movsl
mov
mov
iret
xchg
fisubrs
and
dec
push
out
pushf
fwait
dec
fidivs
xor
faddl
inc
xchg
dec
andb
add
out
xchg
push
jns
pushf
mov
fdivrs
and
fiaddl
faddl
ja
enter
fcomps
addr16
lea
adc
xchg
inc
dec
push
add
inc
inc
ljmp
push
test
and
roll
dec
or
sub
inc
dec
stos
mov
daa
notb
adc
and
mov
std
arpl
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
insb
in
adc
jle
or
dec
cmp
enter
test
mov
xor
out
fdiv
xor
lret
neg
jno
jns
add
mov
stc
jb
bound
push
int3
into
cmp
push
cmp
sbb
push
sub
nop
hlt
adc
sub
in
ss
mov
or
push
pusha
dec
sar
or
sub
inc
fwait
xchg
push
mov
xchg
jmp
sbb
mov
xchg
jnp
add
pop
dec
gs
sbb
stos
ja
push
test
ret
nop
test
gs
mov
in
sbb
loopne
sarl
dec
cmc
cmp
int3
adc
es
add
lret
mov
lods
inc
idivl
jb
push
and
mov
inc
inc
xlat
ss
aam
push
adc
push
cmpsb
jmp
cmp
push
mov
cmc
test
ficoml
cmp
dec
xchg
imulb
mov
jmp
movsl
insb
and
mov
xchg
jne
dec
repnz
xor
mov
mov
mov
scas
jg
inc
xor
mov
lods
rcr
aas
frstor
adc
dec
jne
add
xchg
mov
pop
bound
mov
out
jecxz
or
adc
rcl
fdivrl
stos
push
inc
and
imul
loopne
iret
push
mov
and
xor
sarl
xchg
repnz
jge
push
pop
xor
aas
pop
jns
jae
aad
stos
out
adc
mov
xchg
pusha
xor
pop
pop
lods
jmp
push
fcoms
in
sbb
lock
jl
out
scas
leave
add
xchg
loop
scas
inc
add
dec
and
fadds
mov
pop
add
add
dec
push
mov
xchg
add
push
imul
ja
outsl
xorl
push
mul
test
sahf
ror
mov
imul
sahf
inc
sub
mov
fstpt
inc
movb
ret
rolb
inc
orl
and
ret
popa
pop
arpl
xor
mov
test
in
mov
test
call
cmp
inc
stos
mov
mov
loope
or
lods
add
xchg
xchg
pop
and
mov
sti
fidivs
rcll
rcr
and
push
incb
sub
mov
scas
das
cmp
lahf
or
push
mov
fisttps
out
xlat
test
test
fmul
push
push
cmp
and
outsb
and
cmp
xchg
dec
mov
lahf
notb
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
sub
and
jle
pop
jl
jle
adc
add
sbb
mov
inc
in
adc
jge
test
inc
dec
push
jg
in
cmp
ss
jmp
inc
movsb
pop
xor
ret
xor
aaa
or
pop
jge
lret
scas
sbb
adc
pop
add
loope
sbb
ja
mov
out
lret
sti
cmp
rcrb
test
and
pop
jge
xor
fidivrl
gs
cmp
jne
or
cmpb
inc
mov
icebp
xor
ja
imul
and
idivb
pop
xor
rcll
enter
jmp
rcrl
rclb
cmpsl
dec
out
sarb
cmc
add
stos
sbb
cmp
jp
inc
jecxz
sti
jne
and
mov
insb
sbb
jl
shrl
push
mov
inc
aam
sbb
xor
rolb
mul
icebp
mov
xchg
call
and
inc
pop
loope
push
into
std
rorl
jae
insl
ss
lret
jns
mov
adc
repz
inc
pop
jbe
cwtl
pop
add
gs
js
ljmp
or
cwtl
add
inc
or
inc
push
insl
lahf
in
cltd
mov
fst
push
mov
sbb
cmp
xchg
sbb
xor
mov
jb
pushf
xchg
loop
xchg
fistps
or
mov
add
jne
ret
lahf
idivl
movsl
pop
pop
add
xchg
xchg
jl
jnp
fadds
inc
jp
and
inc
outsl
stos
xor
dec
ljmp
ja
fs
rorb
jns
mov
ljmp
cmp
cltd
mov
mov
aas
jae
cmp
aad
popf
xchg
rorb
push
dec
xchg
mov
xchg
sbb
sub
loope
into
pop
clc
aam
mov
xchg
fwait
pop
add
dec
and
shlb
pop
pop
mov
lds
inc
dec
pushf
ja
cltd
pop
test
daa
lock
inc
rcrl
jb
or
out
jg
dec
jg
imul
arpl
cmc
hlt
sbb
sahf
mov
scas
jg
mov
xchg
sbb
mov
xchg
cs
pushf
adc
movsb
cmp
xchg
dec
dec
mov
cmp
dec
add
push
pop
mov
xchg
mov
lret
ret
push
mov
je
std
inc
addr16
sub
push
push
mov
or
aad
shlb
jo
loopne
push
sti
xchg
jb
push
cmp
xlat
mov
out
mov
cmp
mov
sbb
arpl
adc
outsl
mov
fists
lods
scas
add
out
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
js
std
or
jle
pop
jl
jle
std
cmpsl
adc
jo
adc
leave
fwait
cmp
aaa
fcmovu
pop
lods
add
adc
jne
test
fucomi
in
ljmp
push
gs
adc
std
mov
jecxz
lret
les
dec
mov
pushf
jmp
dec
mov
mov
xlat
nop
fstl
ret
sub
jmp
jecxz
fidivl
and
push
in
jg
fwait
test
subb
mov
rol
xor
icebp
test
outsl
hlt
pop
inc
popa
xchg
mov
testb
lods
xor
sbb
push
sub
repz
dec
or
pusha
push
ss
sub
popa
and
add
dec
pop
jmp
arpl
or
icebp
sarb
test
lcall
scas
out
inc
push
imul
xchg
sahf
xor
push
xchg
ss
mov
fimuls
addr16
icebp
dec
ljmp
mov
int
cltd
add
lds
pusha
sbb
or
mov
jg
jne
cmpsl
mov
lcall
fsubs
cmc
xchg
xchg
es
out
ljmp
sbb
inc
test
pop
lods
int
lods
adc
aas
outsb
lahf
inc
ror
jmp
jl
xor
mov
inc
xor
mov
mov
fcoml
outsb
dec
pop
and
mov
sbb
and
pop
push
dec
jns
pop
mov
or
lret
gs
dec
sub
data16
mov
jecxz
cli
addr16
hlt
scas
push
or
aaa
popf
add
cld
adc
mov
push
xchg
xor
int
addr16
jmp
stos
and
xor
xchg
adc
js
fimuls
idiv
push
sbb
stos
testb
roll
loop
repz
shl
add
sub
in
cmpl
lcall
adc
mov
push
mov
in
testl
adc
pop
inc
xchg
push
add
adc
or
xor
pop
int
add
mov
test
out
movsl
xchg
sub
add
cmp
mov
or
pop
push
sub
mov
daa
out
sub
inc
xchg
call
scas
cmp
cltd
mov
arpl
pop
mov
mov
jae
cmpsl
sbb
pop
fcom
arpl
xchg
jge
in
cld
cmpl
cmc
js
inc
js
aad
lret
repz
aad
dec
out
loop
stc
and
rolb
xchg
imul
xlat
insl
cmpsb
repz
jl
sub
dec
dec
inc
pop
jp
arpl
fistpll
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
push
cmpsb
bound
jle
jl
jle
jne
jne
test
aam
jle
je
sub
ds
mov
test
pop
pop
push
or
or
push
dec
fcmove
jnp
dec
cltd
fcomip
adc
pop
and
movsl
dec
add
rcll
jne
lea
test
dec
aas
or
scas
adc
int3
call
and
fiaddl
mov
aam
enter
jb
mov
mov
xchg
or
gs
push
pop
xchg
adc
repz
nop
lret
add
xlat
pop
test
enter
lock
lahf
pusha
mov
lock
int3
xchg
xchg
test
xor
push
cmp
dec
xchg
fst
xor
rcrl
push
popf
adc
lret
lods
lret
call
leave
cmp
in
out
cmpsb
sub
jge
xorl
fs
das
add
and
mov
fdivrl
dec
test
and
xchg
and
lods
mov
pop
and
stos
gs
jns
cmp
rcl
add
and
cltd
sbb
sbb
dec
or
pop
mov
out
iret
sbb
iret
into
inc
and
or
lret
pop
scas
cmp
xchg
adc
mov
push
daa
shrb
push
sbb
inc
and
sub
xor
lea
dec
pushf
cmpsb
or
mov
int
cmpsl
jmp
dec
mov
push
push
mov
faddl
ds
pop
je
xlat
sbb
lcall
repnz
fidivl
xlat
mov
xor
mov
in
adc
adc
mov
pop
lahf
xchg
mov
push
enter
jnp
lahf
lret
sbb
or
fimuls
jne
dec
shrl
push
inc
mov
mov
mov
mov
xchg
lahf
mov
and
sbbl
aam
push
sub
jg
shrl
ja
pop
mov
les
mov
hlt
mov
push
dec
cmpsl
jp
cs
xor
lock
fs
push
scas
mov
daa
int3
sub
pop
pop
cmp
stos
jo
and
pop
jno
es
push
push
cmc
add
out
pop
mov
adcl
fidivl
data16
arpl
daa
cli
or
shlb
push
sbb
inc
push
scas
xor
aad
mov
in
subb
loopne
scas
jbe
xor
pushf
das
mov
adcl
mov
inc
notb
pushf
loop
sub
jbe
rep
inc
push
and
pop
movsb
sti
into
inc
mov
add
test
xor
fldl
mov
xor
jmp
add
dec
popa
jno
jne
xor
jle
out
repnz
pop
sbb
pop
jl
jle
aam
fdiv
lahf
jmp
sbb
pop
pop
jns
movsb
push
insb
cltd
lahf
jle
jge
sbb
out
outsb
mov
jne
cmp
aaa
andl
pop
push
repz
movsb
pop
sub
addr16
daa
pop
iret
ffreep
push
xor
push
pop
adc
mov
insl
sub
daa
push
imul
or
mov
rcrb
cmp
xor
clc
ficompl
dec
dec
or
push
dec
pusha
clc
jne
imul
fwait
outsl
dec
cmc
test
sbb
rcll
into
sbb
out
adcl
shrb
cmp
call
pop
outsl
cld
push
or
mov
sbb
popl
push
mov
orl
mov
xor
loopne
mov
leave
mov
sar
mov
les
cli
mov
inc
stos
push
push
gs
jbe
not
les
loopne
mov
dec
idivl
in
inc
lahf
pop
sbb
sub
pop
inc
adc
jo
mov
adc
fcomps
cld
jmp
cmc
mov
aam
sub
xor
cltd
lahf
stos
sub
dec
mov
subb
push
sahf
shll
pop
stos
mov
movsb
inc
loopne
repz
push
out
in
mov
les
aaa
call
adc
xlat
pop
ret
fildll
mov
in
fildl
adc
addr16
inc
jp
jg
xchg
mov
sahf
fstpl
or
mov
addr16
into
and
lds
xor
sbb
jne
cmpsb
mov
daa
sahf
je
fsubrs
adc
movsb
cltd
mull
mov
and
ljmp
rcrb
or
insl
dec
stos
pop
cmp
push
adc
sub
push
and
sbb
jmp
lret
es
inc
or
addr16
js
and
mov
xchg
stos
push
or
mov
out
dec
cmpsb
pop
ljmp
jns
ficoml
loope
outsb
jl
push
cld
mov
arpl
add
mov
jns
mov
sbbb
cmp
cltd
mov
iret
sbb
adc
scas
and
push
xchg
int3
lock
mov
ljmp
mov
jmp
aas
aad
lds
sub
cs
jg
repz
cmp
adc
mov
sbbl
idivb
mov
jae
sahf
mov
mov
push
sbb
imul
inc
ljmp
jge
mov
pop
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
dec
add
jle
pop
jl
jle
loope
pusha
ds
add
inc
mov
movl
das
push
xor
or
movsb
cwtl
xchg
popa
je
outsb
cli
sub
jmp
lcall
clc
rcl
fisttpll
outsb
push
ss
sub
jbe
iret
fcompl
in
jne
jbe
push
loopne
jl
push
cmp
inc
scas
nop
mov
jno
mov
adc
int
ud1
lds
fidivl
jo
fimuls
movsl
xchg
aaa
jg
stos
cli
push
testb
loope
outsb
test
int
outsl
jns
push
call
insb
xorl
mov
and
ljmp
test
mov
or
ljmp
movsl
imul
sbb
sarl
rolb
es
out
xor
sbb
add
ja
sbb
ja
jl
xchg
pop
mov
decb
lock
sub
les
and
jg
push
pop
dec
in
ja
clc
xchg
mov
sbbb
sbb
dec
lods
xor
dec
jecxz
push
jp
pop
test
and
pop
mov
or
xchg
lea
adc
mov
ficoms
mov
loop
ss
dec
xchg
rcl
fistps
and
xchg
loope
push
xchg
bnd
mov
jge
out
out
inc
testl
fidivs
in
cmp
pushf
lods
or
scas
out
and
jmp
mov
test
jbe
push
inc
pushf
push
cmp
ds
jecxz
inc
push
push
lods
cwtl
mov
and
bound
call
push
enter
mov
mull
xchg
ret
mulb
fsubrl
xchg
out
jl
mov
add
mov
stc
mov
in
add
out
stos
mov
stos
ljmp
in
insl
push
in
or
inc
xchg
fcomps
mov
lcall
push
push
inc
xchg
fcmovnu
dec
add
add
mov
adc
push
lods
shl
in
xor
or
inc
std
in
and
push
xor
ljmp
pusha
in
stc
add
xchg
cltd
decb
pop
and
xor
call
shrl
cltd
sbb
shl
dec
out
sub
jle
jns
and
scas
mov
lcall
xchg
imul
aaa
xchg
add
loop
jmp
sti
mov
hlt
jge
xchg
rcrb
lcall
mov
push
mov
js
xchg
rcrb
cmpsb
xor
cmp
mov
xchg
push
scas
sbb
mov
fimull
test
test
rolb
shr
imul
add
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
clc
icebp
adc
jl
jle
mov
mov
xchg
popl
rorl
add
pop
push
lret
push
inc
xor
and
mov
mov
rol
daa
and
in
arpl
xor
sbb
xchg
fcoms
sub
daa
and
test
add
clc
adc
or
cmp
mov
out
frstor
fisubl
jo
xor
mov
lods
inc
add
mov
mov
mov
mov
daa
xchg
pop
push
xchg
outsl
cs
lret
insb
push
mov
xlat
xchg
mov
mov
into
sarl
dec
ss
add
popf
push
ljmp
cmp
cmp
push
lcall
sub
es
sub
es
jmp
xlat
jne
xor
ljmp
cmp
maskmovq
jns
mov
sub
xchg
mov
xchg
inc
in
mov
sub
dec
adc
stc
xchg
add
fsts
jbe
out
inc
mov
sub
cwtl
ljmp
roll
lret
inc
jmp
gs
cld
xchg
outsb
in
push
and
rcrb
xchg
lods
std
jge
fmul
call
ret
enter
mov
pushf
mov
jecxz
add
xchg
jmp
inc
sub
mov
daa
inc
loope
mov
and
jle
cli
jmp
test
jmp
arpl
mov
xor
push
cmp
push
sbb
xchg
jnp
jecxz
jle
sub
loop
mov
push
and
mov
fstpl
pusha
sbb
and
inc
sbb
lahf
jg
mov
or
sub
xor
es
out
test
ja
ljmp
adc
insl
loope
mov
movsb
sub
stos
push
jb
imul
cmp
xor
pop
repnz
outsb
aad
nop
xchg
lret
lock
pop
rorb
pop
xchg
or
and
iret
jno
aam
shll
repnz
inc
cmp
and
and
lock
aas
xchg
je
daa
adc
insl
xchg
jle
imul
cmp
les
out
mov
popf
adc
xchg
xor
arpl
stos
cltd
scas
cmp
into
jnp
pusha
mov
mov
mov
dec
int
mov
lds
ret
imul
cltd
scas
add
xor
js
nop
adc
mov
ljmp
add
mov
les
push
gs
je
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
imul
and
pop
jl
jle
sub
or
jmp
inc
ljmp
call
cmp
lods
out
sbb
cwtl
shr
call
insb
pop
je
xor
adc
mov
mov
scas
push
add
jle
ja
cmp
jmp
jnp
mov
jae
mov
insl
out
test
or
mov
fstl
and
seta
jge
mov
lods
jge
addb
dec
mov
pop
dec
popf
mov
std
cltd
jle
mov
mov
pop
js
mov
mov
xorl
pop
lea
cs
mov
adc
xchg
cmp
cwtl
and
or
enter
dec
test
mov
addl
add
sbb
inc
imul
negl
cmp
pushf
or
sub
xor
nop
pop
hlt
bound
addr16
inc
out
push
jns
rcl
fwait
add
adc
int
adc
int
push
test
mov
mov
pop
fsts
cs
push
insb
lds
mov
xor
pop
xchg
mov
out
push
push
dec
bound
insb
test
inc
dec
mov
and
sub
lock
or
std
mov
out
mov
rorl
pop
rcr
jle
mov
imul
int
lret
and
insl
xchg
mov
sbb
pusha
cmp
jbe
jle
data16
push
lcall
jge
inc
adc
xor
ss
insb
cmp
and
push
inc
jbe
mov
jmp
sbb
mov
cmpsl
pop
pop
inc
jge
or
sbb
jb
int
in
cmp
adc
pop
xor
xor
cmp
out
lods
adc
jg
xchg
iret
pop
out
cmpsl
aaa
dec
cwtl
jno
scas
loop
in
jmp
in
and
sbb
jp
daa
negb
inc
mov
pop
jnp
into
and
std
shlb
mov
mov
add
in
out
add
jecxz
dec
and
std
test
pusha
xor
mov
mov
cmpsl
inc
push
out
lahf
outsb
je
insb
loop
xchg
push
popf
pop
mov
imul
imul
popa
mov
push
test
js
inc
clc
inc
cli
cmpsb
pop
scas
push
inc
mov
fcoms
stc
mov
jnp
lret
into
push
int
adc
mov
lods
dec
mov
mov
pop
and
mov
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
int3
xor
imulb
jle
jl
jle
or
or
xchg
ljmp
enter
imul
pushf
popf
jne
jle
nop
inc
pushf
mov
std
xor
int
faddp
loopne
cmp
xor
push
or
jnp
mov
sub
sub
mov
mov
mov
bswap
add
hlt
addr16
shll
push
cmc
dec
addr16
roll
push
jle
xor
cmp
call
xchg
mov
in
shl
fldl
fsts
jnp
in
dec
fidivrs
dec
rorb
aaa
ss
lea
pop
dec
fcmovnb
xor
out
ret
lods
mov
cli
xchg
cmp
jo
jecxz
lods
mov
xchg
mov
out
or
mov
push
mov
push
lods
das
mov
fwait
aas
cmp
leave
sbb
dec
push
jmp
push
ret
cmp
iret
pop
rolb
jo
mov
xchg
stc
lcall
push
xchg
lods
mov
xchg
pop
inc
pop
mov
pop
fs
popa
pop
inc
stos
lock
xor
pop
xor
jg
push
in
pop
push
sub
jb
test
mov
jle
jne
ss
scas
popa
sbb
push
pop
adc
pop
jle
adc
xchg
arpl
filds
add
and
push
js
dec
lret
popf
or
push
xor
lret
jns
and
xor
iret
or
cmp
jp
mov
pop
fstl
cmp
mov
xchg
xchg
movsl
packssdw
sub
out
imul
mov
lret
push
mov
out
insb
xor
std
outsl
inc
movsb
xchg
aam
mov
inc
dec
ds
call
es
pop
sti
ljmp
lret
enter
pop
inc
mov
jnp
jp
and
xor
dec
push
sarb
in
pop
mov
xor
imul
pop
sub
pop
push
icebp
nop
mov
int
mov
cmp
scas
fisubrs
pop
mov
les
adc
sub
cmp
push
push
inc
aas
pop
add
popl
clc
cld
dec
sub
add
lock
lods
lea
or
pop
out
and
dec
mov
mov
push
mov
jle
lods
repnz
cld
lock
test
imul
in
or
mov
mov
sub
ja
sub
xchg
scas
push
add
xchg
fisubrl
movsb
hlt
push
insb
jl
fwait
adc
test
ja
rcrb
or
xchg
shr
into
imul
xor
jge
popa
push
push
scas
or
int
jecxz
push
mov
xchg
decl
fsubr
incb
add
outsl
fisttpll
pop
fmull
xor
sub
pop
jl
jle
aad
mov
aaa
sub
mov
shlb
insb
xor
cmp
xchg
fmull
adc
stos
push
pop
fucom
add
std
inc
and
mov
sbb
sbb
in
adc
lret
cli
add
es
out
sub
das
push
in
stos
aad
loop
xor
inc
cltd
shll
and
fimull
add
mov
inc
scas
in
popf
dec
cmpsl
cmp
fstl
sti
sti
out
clc
cmp
sub
add
sbb
xor
mov
xor
popa
adc
xor
fwait
xchg
pop
jne
in
nop
cltd
scas
dec
inc
jle
mov
pop
jmp
mov
and
mov
xor
xchg
mov
or
mov
clc
pop
xor
jp
pop
nop
in
mov
or
jbe
hlt
sub
jle
popf
pop
incl
gs
push
cmpsl
push
fwait
ja
fisttpl
aad
xchg
adc
popl
mov
dec
cmp
add
push
mov
and
xor
sahf
or
cwtl
test
ss
mov
mov
cmp
mov
dec
inc
mov
mov
pop
es
les
add
push
fstp
and
adc
dec
mov
sbb
dec
decb
ss
xchg
fwait
pop
jg
pop
popa
xchg
test
xor
mov
test
stos
je
xor
dec
xlat
mov
fdivl
das
lahf
aad
test
pop
cmp
es
xchg
repnz
sbb
scas
cmp
fs
cmp
leave
mov
jae
aas
sbb
push
push
cmp
cmp
or
out
pop
xor
stc
out
shlb
dec
call
or
jmp
scas
mov
push
jle
adc
jle
mov
imul
mov
mov
in
inc
or
fwait
aas
push
xor
pop
and
sub
cmp
repnz
fs
jp
xchg
loop
fs
and
inc
push
xchg
out
xchg
xchg
adc
nop
mov
cmc
and
and
mov
inc
arpl
pop
push
outsb
mov
lret
or
fmuls
ja
sub
sub
imul
mov
jmp
push
out
test
cmp
js
cmp
mov
cmp
repnz
dec
jnp
lret
mov
out
or
jns
pop
ret
insl
xchg
jg
xchg
xchg
sbb
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
xor
jle
jge
jle
iret
pop
das
jb
js,pn
adc
ljmp
dec
cmp
je
mov
xor
xchg
inc
add
ljmp
pop
and
mov
jae
arpl
and
ret
mov
std
cmpsb
movsl
mov
je
out
sahf
and
mov
scas
pop
popf
push
jle
pushf
in
and
push
push
jae
lahf
adc
add
outsb
cltd
shll
add
mov
cmp
cmp
emms
add
inc
mov
or
xchg
pop
or
test
loope
push
adc
filds
push
loopne
lods
movsb
icebp
dec
lret
pop
dec
orb
xorl
pusha
mov
lahf
mov
push
icebp
cmpl
xor
mov
push
aam
int
lods
call
push
jb
test
mov
xlat
xchg
int
fcmove
xor
xor
push
test
sbb
and
and
jle
pop
sbb
dec
mov
xchg
bsr
loop
or
clc
shrb
and
fistl
stc
sbb
jge
adcl
and
mov
sbb
test
xchg
clc
jp
pop
lcall
fstl
out
dec
movzbl
mov
mov
push
mov
xor
scas
inc
push
push
sbb
lret
pop
push
add
lahf
lcall
lcall
inc
mov
int3
xchg
pop
lret
leave
push
push
in
dec
sbb
adc
movsb
out
cmpsb
sar
loopne
and
xchg
jnp
gs
test
inc
int
clc
lret
and
mov
int3
hlt
inc
pop
dec
cmc
in
xchg
fdivrl
lcall
jp
push
pop
jbe
int3
mov
in
ds
jg
pop
outsb
arpl
pop
test
and
ret
test
sbb
inc
sbb
scas
pop
and
jge
add
loope
inc
das
adc
dec
scas
in
jbe
test
jecxz
dec
ror
mov
pop
je
scas
or
inc
lock
push
test
imul
scas
shlb
pop
lret
xchg
mov
in
cmp
adc
movl
pusha
mov
cmp
push
mov
shll
xor
jge
repz
xchg
mov
ss
jg
jne
mov
stos
mov
dec
xor
jg
cmpsb
mov
and
or
cmp
jg
fisubs
pushf
fwait
sbb
call
enter
repz
mov
data16
sti
movsb
jne
sarb
out
jecxz
sbb
incl
jae
dec
cmp
rorb
or
aaa
cltd
jmp
mov
add
out
xchg
pop
sub
imul
repz
outsl
push
idivb
xlat
outsb
ja
sahf
pop
lods
xchg
jecxz
sbb
clc
inc
sbb
jae
in
cmp
pop
and
testl
inc
or
inc
cld
test
clc
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
mov
pop
flds
cmpsl
ljmp
add
dec
fildl
push
cmp
add
add
xor
dec
xor
scas
shll
jl
fcomps
dec
fsubrs
push
cmp
jno
push
sub
mov
xchg
mov
mov
fwait
push
cmp
clc
push
popf
inc
out
les
int
lret
ja
sub
inc
pop
xor
lock
push
sbb
pop
jns
mov
push
imul
mov
notl
and
dec
int3
xchg
mov
aad
add
outsl
or
ficoms
dec
cmc
dec
mov
cwtl
add
sub
repz
xchg
inc
mov
jae
dec
cmpl
cmp
fwait
xor
std
or
xchg
cmpl
movsl
stos
fstps
xchg
xchg
jl
shrb
xchg
jp
mov
je
in
add
push
inc
repnz
cmp
xchg
ja
adc
inc
jb
dec
xor
arpl
or
jo
pop
test
inc
dec
je
jge
dec
or
mov
nop
movsl
cmpsl
lcall
jge
je
xor
fldenv
mov
cmp
mov
cmp
push
outsl
inc
imul
jmp
and
pop
adcb
cli
jbe
sti
inc
sbb
pop
adc
faddl
adc
ljmp
cmp
add
xchg
dec
pusha
cli
sbb
dec
sub
push
mov
inc
scas
mov
and
and
mov
jns
cltd
dec
rol
inc
jb
movsl
push
stc
inc
jmp
dec
fsubrs
loopne
sarl
jecxz
scas
mov
mov
shll
loopne
pushfw
pusha
push
out
push
dec
or
jp
xlat
mov
dec
movsl
mov
test
shll
sti
and
es
xchg
sbb
adcl
pop
mov
jae
mov
insl
adc
jge
sub
pushf
add
inc
pop
cmp
test
clc
mov
mov
xchg
pop
sbb
insb
inc
push
imul
pop
repz
sub
sub
inc
ds
xchg
lods
leave
mov
les
jp
into
mov
or
xchg
negl
ret
test
jg
scas
lahf
insb
notl
jo
xor
cli
loopne
lahf
shl
or
repz
insl
inc
jns
xorl
mov
push
mov
push
inc
push
mov
mov
mov
add
and
mov
rorb
mov
cli
clc
sbb
jp
loope
add
jecxz
jnp
mov
xor
xor
inc
ja
cmpsl
jl
insb
jnp
pop
neg
testl
dec
xor
movsb
repnz
stos
lea
xor
out
lods
mov
xchg
or
mov
icebp
neg
jmp
jne
sub
test
test
mov
mov
cmpsb
xor
sub
jle
jae
push
pop
add
mov
roll
sub
or
sarl
fisubrl
lods
or
inc
mov
push
es
inc
aaa
out
jp
inc
adc
jl
adc
dec
jl
sbb
pop
jmp
adc
fistpll
fstps
movsl
ret
inc
and
dec
pop
clc
xor
inc
call
jb
dec
push
xlat
mov
add
lea
and
add
jo
cmpsb
hlt
in
add
std
loopne
iret
dec
adc
push
sbb
cltd
gs
mov
mov
adc
jmp
pop
and
adc
imul
cmp
cmp
mov
mov
push
and
fldz
mov
mov
imul
outsl
pop
mov
into
pop
cli
mov
mov
mov
xchg
insb
jecxz
repnz
sbb
pop
mov
jmp
xchg
mov
mov
lea
add
iret
daa
add
lock
mov
cmp
add
sar
push
mov
add
jns
popf
bound
add
and
inc
add
jmp
mov
and
mov
or
push
xchg
push
fdiv
sbb
jo
jo
fidivrs
sbb
gs
test
xor
scas
scas
in
pop
or
xor
data16
push
adc
mov
jnp
xchg
or
sbb
imul
or
sub
or
sub
cltd
mov
in
cltd
sbb
sbb
popf
hlt
ret
mov
movsb
rorb
shrl
das
sub
movsl
insb
in
cmp
xchg
push
lock
xchg
std
jnp
mov
xchg
into
enter
psllq
es
cmp
int
xchg
mov
loop
xlat
and
leave
lods
inc
test
fcomp
pop
mov
add
negl
les
cs
mov
pop
mov
dec
mov
inc
pop
popf
pop
bnd
mov
inc
test
xchg
adc
mov
nop
ja
data16
mov
pop
gs
push
ds
mov
insb
fmul
inc
xchg
or
push
imul
in
and
adc
jg
pop
rcr
int
pop
dec
adc
test
cld
add
mov
sub
push
mov
test
test
sub
inc
insb
xchg
adc
js
negl
pop
hlt
xchg
push
enter
loop
push
xchg
xchg
loopne
mov
mov
push
syscall
add
adcl
dec
int3
jp
arpl
outsl
or
movsl
arpl
outsb
sbb
mov
jno
sbb
or
andnps
test
out
in
jns
mov
sbb
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
pop
dec
mov
aas
jle
sub
jle
jp
rorl
fmul
and
das
xchg
bound
cmp
out
icebp
rorl
nop
inc
cmc
arpl
mov
dec
dec
fsubs
add
pusha
rep
cwtl
clc
and
xlat
jg
mov
sub
enter
outsb
dec
fstpl
push
cmp
xor
ret
test
daa
dec
dec
cmp
hlt
ljmp
mov
xchg
push
mov
jmp
push
lock
lea
loopne
inc
mul
cmp
and
sbb
mov
mov
pop
in
cmc
addr16
jecxz
mov
adc
ja
mov
pop
or
and
dec
cld
insb
xchg
add
add
sbb
lsl
or
lahf
mov
icebp
inc
insb
jns
adc
xchg
cmp
sub
aam
cmc
fildll
shll
lods
xchg
xchg
push
scas
shl
in
inc
adc
std
dec
xchg
adc
mov
pop
mov
dec
loop
inc
lret
xor
push
xor
mov
mov
cli
jecxz
std
cmp
in
pop
inc
pushf
lods
pop
hlt
adc
cmp
movsb
jle
and
insl
rolb
addl
int3
add
jge
jnp
mov
loope
xor
sbb
xor
or
mov
insb
xlat
pop
push
or
call
stc
or
dec
bound
movsl
cmp
movsb
shl
sbb
push
jl
out
in
jg
push
mov
notl
mov
mov
out
insb
inc
and
add
lret
lcall
clc
sahf
sbb
sbb
leave
jae
pop
shlb
arpl
cwtl
fcomp
mov
xor
out
adc
shlb
mov
outsl
pop
gs
inc
add
out
lret
mov
movd
outsl
cmpsl
mov
iret
cmpsl
imul
rcll
pop
js
lods
cmp
les
mov
mov
lret
xor
jge
add
push
dec
jns
leave
jecxz
rcrb
lret
sub
xchg
pop
add
cmc
jp
push
inc
inc
in
jnp
jne
dec
loopne
lcall
in
fiaddl
pop
inc
sub
mov
outsb
aaa
sbbl
inc
mov
pop
shlb
inc
sub
dec
gs
pop
mov
mov
inc
shl
inc
sbb
movb
imul
ljmp
in
inc
adc
ret
aas
mov
lcall
outsl
js
cltd
mov
sbbl
cmp
xchg
dec
cltd
popf
push
inc
fisttpll
adc
adc
addb
mov
scas
bound
repz
push
push
dec
test
jl
sahf
xchg
mov
out
add
inc
jmp
orl
pop
iret
stc
lretw
sbb
or
inc
and
jmp
mov
loope
or
lock
push
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
xor
mov
je
inc
fadd
xchg
mov
pop
mov
insb
add
sbb
xchg
mov
mov
cmc
loopne
add
pop
add
jp
jo
adc
jg
rcrb
fildll
rcrl
clc
insl
dec
or
mov
es
pop
dec
imul
ja
sahf
sbb
mov
pusha
push
sub
cmp
pop
jne
push
mov
xchg
mov
stc
xor
outsb
jo
js
repnz
adc
push
sub
in
nop
iret
popf
das
inc
out
ficoml
call
dec
cltd
cmp
add
cmp
cmpsl
aam
stc
icebp
jno
out
or
cmpsl
fs
cmp
shlb
push
lods
inc
jge
or
gs
xchg
cld
gs
hlt
mov
rcl
sub
dec
bound
xchg
test
dec
jnp
out
adc
fcompl
cmp
lcall
jl
xchg
lahf
orb
push
je
fbld
in
sbb
or
test
cmp
or
sub
add
push
jg
ds
sbb
nop
es
push
add
es
lahf
dec
scas
mov
push
jb
jecxz
mov
stos
push
inc
xchg
pop
jge
mov
lods
cld
scas
popf
rcll
cmp
mov
sbb
and
xor
and
fisubrs
pop
cmp
or
stos
jne
pushw
inc
dec
sahf
mov
iret
nop
ret
sub
adc
jbe
mov
xchg
and
and
xor
cltd
stc
add
jmp
mov
add
add
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
mov
jle
mov
gs
dec
cmp
cltd
int
mov
enter
sub
or
xchg
jno
mov
movsl
rcl
push
xor
sarb
inc
out
cld
sbb
daa
dec
in
pusha
mov
test
fisttps
test
xor
dec
push
fimuls
mov
pop
frstor
in
subl
dec
jno
mov
cmp
mov
pop
sbb
std
adcl
mov
xchg
mov
scas
mov
xchg
pop
les
xchg
daa
out
mov
sbb
pop
stos
das
mov
shll
repz
mov
or
cmpsl
pop
subl
or
stc
pop
mov
fcmove
fisubrs
xor
lcall
adc
shufps
pop
cmp
into
leave
repnz
and
test
or
inc
iret
fistps
sbb
lds
push
jne
cltd
and
pop
insl
adc
mov
pop
outsb
sbb
jge
inc
int
dec
in
push
lret
cmpsb
cmp
mov
lcall
inc
add
aas
test
lock
stc
repz
sub
hlt
stos
fidivrl
cmp
incl
mov
mov
dec
imul
cli
gs
xor
clc
dec
loop
fistps
sub
mov
inc
sbb
call
mov
push
lret
repnz
repz
mov
xor
or
mov
sub
andb
jmp
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
ret
hlt
push
cmc
pop
xchg
ret
popf
and
xchg
cs
sbb
sahf
shr
or
mov
lret
subb
sbb
push
pop
inc
and
jp
adc
sahf
xchg
fsts
xchg
repnz
pop
aas
xchg
das
in
stos
pop
jmp
repnz
add
mov
jb
lret
jmp
and
xchg
mov
int3
cmp
mov
movsb
ljmp
and
dec
faddl
jns
stc
mov
test
addr16
les
loope
dec
je
xchg
sahf
shl
adc
fidivrs
adc
popf
aas
scas
fwait
pop
enter
xor
insl
test
lock
aas
mov
or
sbb
push
or
mov
cmpsl
mov
pusha
adc
fisttps
and
pop
and
scas
loopne
arpl
adc
cmp
stos
mov
or
ret
inc
das
fwait
xchg
jecxz
push
imul
inc
popf
sub
pop
mov
adc
test
cmc
pushf
jo
inc
xlat
icebp
push
jo
pop
adc
sahf
lods
mov
or
call
lock
daa
pop
movsb
pop
jae
pop
jge
inc
mov
and
into
hlt
rep
popf
popf
lret
mov
pop
mov
stos
jg
cmpsb
pushf
aaa
push
adc
xlat
mov
adc
sub
outsl
mov
lods
xchg
jae
or
gs
cs
loope
fisubrl
popf
mov
or
pop
aad
mov
ss
clc
adc
popa
stos
bound
sbb
insl
nop
movb
adc
sbb
xchg
mov
call
test
jmp
and
in
popa
push
lret
xchg
push
pop
cmp
int3
les
mov
setb
mov
cmp
test
ss
aas
imul
ljmp
mov
jge
cmp
clc
popa
loopne
mov
cltd
add
aam
movb
in
testb
push
xchg
aam
or
mov
and
mov
shrb
mov
and
pop
add
notl
sti
add
scas
sbb
adc
call
pop
rol
cmpsl
cltd
test
scas
out
in
lea
and
push
xchg
inc
stos
test
loop
data16
jbe
ficoms
insb
or
adc
lret
lea
hlt
mov
xor
pop
insb
sbb
and
mov
sti
imul
and
stc
push
sub
daa
push
push
lock
cmp
nop
fs
lods
jnp
sti
mov
and
mov
test
pop
lods
push
push
ret
popa
or
jno
xchg
push
pop
jmp
sub
or
pop
jge
shll
mov
data16
push
push
cmpsl
dec
in
sbb
insl
dec
and
pop
pop
lcall
add
popf
test
psrlq
mulb
inc
je
adc
ds
popf
sub
test
push
outsb
mov
xor
cli
jle,pn
jne
jg
fidivrs
lock
popa
dec
dec
movsl
icebp
pop
or
fiaddl
xor
outsb
mov
inc
xchg
ja
daa
fmulp
push
out
ret
mov
stos
sarl
mov
dec
mov
lods
jbe
xchg
xor
mov
cmpl
add
out
and
inc
clc
jmp
dec
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
xchg
dec
mov
ret
add
xchg
fwait
loopne
jmp
lcall
adc
jne
xchg
inc
stos
push
test
xor
cmp
cmp
rcll
inc
xchg
inc
xchg
inc
pop
iret
sbb
sbb
push
subl
pop
mov
ja
and
loope
or
mov
dec
test
in
or
icebp
cld
scas
push
push
ficoml
cmpl
ja
popl
push
xor
push
mov
dec
fistpll
fwait
stos
aaa
xor
dec
jecxz
popf
or
mov
lea
xchg
mov
mov
call
popa
pop
add
jg
mov
cmp
or
dec
inc
sub
dec
dec
sbb
idivb
mov
pusha
aas
jl
shll
adc
adc
std
sbb
mov
jae
or
shll
jmp
xlat
push
and
repz
push
mov
fs
bound
add
push
or
popa
sub
dec
rcl
jnp
add
lods
mov
push
fwait
fwait
roll
and
jo
loope
push
addr16
dec
rcrb
or
cmpsl
ficoml
lcall
and
and
and
add
aaa
and
dec
and
addr16
out
mul
and
xor
jge
push
out
out
stos
mov
xor
pop
xchg
mov
cmpsl
pop
out
mov
inc
sub
stos
insl
jae
cmp
lods
or
xor
fwait
packssdw
rolb
loop
leave
fadds
push
in
in
dec
lods
jmp
addb
ret
jl
pop
pop
add
mov
ss
xor
mov
scas
bound
mov
cwtl
push
sbb
add
and
loope
add
add
scas
sbb
inc
rolb
loopne
xor
inc
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
pop
rcr
pop
adc
jle
add
push
lds
adc
insl
sbb
fstpt
outsb
out
mov
addl
gs
sub
fstpt
xchg
xor
adc
jmp
cmp
lcall
imul
ret
dec
inc
in
shr
adc
or
pop
cmp
push
pusha
fnsave
out
call
out
push
push
pop
scas
sti
ss
mov
clc
fisubrs
sahf
mov
gs
lds
pop
jbe
movl
loope
sarl
mov
mov
jbe
sarl
lret
fsub
scas
or
ljmp
push
push
stc
mov
stos
or
adc
outsl
mov
or
sub
xlat
jmp
pop
adc
subb
outsl
lahf
mov
cmp
stos
outsl
mov
andb
mov
mov
inc
fwait
test
lret
pop
mov
cmp
jnp
pusha
xchg
mov
push
pop
add
in
xchg
mov
lock
call
mov
adc
cwtl
mov
lret
jl
push
xchg
rcr
push
xchg
roll
fbstp
andl
and
repnz
inc
mov
xchg
jae
ljmp
mov
add
out
xchg
std
mov
faddl
cmp
fsts
iret
fsubrl
fistl
data16
push
dec
add
cmc
cmp
xchg
iret
push
mov
loopne
cmp
sbb
inc
shlb
xchg
pop
pusha
fs
in
sbb
xor
jns
or
xchg
cmp
addr16
pop
adc
cmpsl
jbe
jae
mov
stc
mulb
cmp
cmpsb
xlat
out
or
cli
add
movsl
push
pop
test
stos
mov
inc
push
in
inc
mov
push
popa
push
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
std
jbe
and
jle
add
in
mov
les
subb
jle
jmp
pop
into
dec
fxch
xchg
in
stos
jbe
lea
inc
xchg
pushf
xor
jmp
fists
xchg
pop
push
jbe
or
or
ss
fs
xor
xchg
scas
jl
xchg
into
into
loope
or
mov
leave
xchg
xchg
in
xlat
cmpb
sub
int
mov
pop
lahf
ret
je
outsb
stos
or
cmp
jge,pt
mov
stc
cld
ret
xchg
js
inc
fwait
jno
es
test
loopne
jp
cmp
std
mov
stos
mov
mov
sbb
mov
xchg
pop
outsb
aad
sbb
clc
inc
dec
add
cld
sub
adc
and
pop
and
les
inc
pop
jns
loope
stos
repnz
fucom
rcr
mov
dec
das
xor
push
icebp
mov
mov
xor
sub
rcrb
pop
cmp
rcll
xchg
mov
loopne
push
enter
rcrl
test
mov
sbb
arpl
dec
iret
push
fmuls
outsb
ffree
pop
mov
cwtl
mov
mov
jmp
sub
jge
mov
paddb
xchg
push
lahf
jb
lods
ror
gs
sbb
pop
movb
xchg
mov
xlat
mov
lods
rcll
pop
hlt
movsl
xor
gs
mov
adc
xor
dec
popf
pop
push
arpl
in
scas
mov
call
cmp
insb
sub
shll
arpl
fsubrs
test
and
mov
bound
stos
sahf
fidivrs
js
out
dec
jo
pop
sti
mov
popa
jb
test
sahf
arpl
orl
pop
jb
das
adc
cld
dec
ja
test
iret
cmp
or
push
jae
mov
add
test
cwtl
sbb
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
pop
lret
sub
jle
add
adc
push
int
fsubr
mov
cmp
mov
out
fistps
sub
mov
std
inc
sbb
mov
xchg
popa
daa
mov
call
jb
das
jns
mov
inc
xor
add
adcl
mov
mov
call
and
or
and
in
les
push
cmp
adc
dec
and
sbbl
fistl
sbb
out
push
mov
ret
in
mov
aad
repz
nop
dec
adc
mov
ror
lods
inc
nop
ja
cwtl
ja
fwait
call
jae
ret
mov
mull
pop
adc
fwait
in
mov
xor
jo
lret
sahf
lret
insl
out
fisubl
push
daa
fwait
aas
jmp
aas
fldl
or
mov
jo
or
xchg
icebp
subb
aad
push
mov
test
jle
sbb
inc
das
adc
mov
sbb
clc
xchg
add
jecxz
push
jnp
outsb
mov
in
push
mov
int
jne
dec
mov
insl
in
mov
mov
in
inc
or
test
dec
xor
adcl
fwait
lahf
addb
xchg
je
mov
enter
mov
adc
lahf
cmp
inc
xor
xchg
out
or
push
or
cmp
movsl
pop
faddl
jle
mov
push
mov
dec
pop
xchg
dec
rolb
mov
andb
out
imul
outsl
fisttpl
jb
xchg
pop
mov
mov
iret
dec
mov
hlt
dec
push
nop
outsb
outsb
jle
jns
loopne
or
jo
adc
or
inc
adc
dec
das
cmp
cmp
out
adc
push
sti
pusha
jecxz
fdivrl
in
xchg
imul
mov
add
push
cltd
sbb
and
fs
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
fidivrl
lret
and
jle
cld
xchg
inc
mov
adc
inc
inc
xchg
adc
cmpsb
dec
loope
push
dec
jne
int3
leave
fidivrl
std
inc
mov
pop
pop
xchg
shl
mov
cs
add
cld
xor
fstpt
icebp
sahf
in
xchg
out
mov
arpl
orl
inc
sahf
xlat
out
mov
cltd
mov
lcall
sbb
sub
cmp
jg
sub
mov
stos
test
jbe
mov
add
in
lds
mov
or
xor
out
insl
sub
inc
enter
in
xor
dec
mov
cmp
lret
cs
xorb
fstl
lods
arpl
mov
loopne
stos
imul
sarl
xor
jo
pusha
xor
subl
push
bound
adc
adc
mov
jecxz
fisubrl
loopne
inc
pop
and
sarl
sbb
and
rorb
fucomi
mov
add
cmpl
xor
rol
sub
pushf
pop
xchg
jo
mov
xor
mov
sub
lods
iret
xchg
idivl
mov
adc
lea
stos
mul
cmp
jae
dec
pushl
and
lcall
mov
arpl
ss
jg
inc
xor
mov
mov
sbb
mov
icebp
inc
pop
popa
push
push
bound
adc
adc
xchg
aam
push
aad
and
pop
imul
in
xor
mov
into
sub
mov
call
std
pop
cmc
sbbb
push
sub
inc
orb
movsb
dec
ret
inc
xchg
inc
scas
cmp
ss
sub
jmp
mov
lahf
nop
adc
lret
imul
sarb
in
adc
xchg
xlat
push
xor
loope
arpl
rorl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
lds
jle
and
jle
pop
fs
in
test
fcomp
sub
dec
push
daa
inc
aam
cld
int
fidivrs
jnp
sbb
fadds
pop
js
scas
pop
test
pop
push
ss
mov
cli
pop
sbb
mov
cmc
pop
enter
jg
leave
push
inc
imul
cmp
sub
imul
or
es
rolb
movsb
int3
jo
mov
mov
dec
lds
mov
mov
movsl
xor
aad
xor
pop
es
dec
cmp
xchg
xchg
cmp
subl
cmc
or
xor
xchg
sbb
sarl
xchg
out
sbb
imul
test
clc
inc
pusha
fbstp
cld
xchg
les
int3
jb
movsb
push
sbb
cld
jg
add
inc
stos
scas
or
jb
cwtl
or
jle
dec
cmpsl
sbb
pop
jnp
jecxz
lods
in
and
scas
jp
jo
out
fs
loop
or
cli
jbe
sbb
outsb
mov
inc
and
mov
add
push
fdivl
xor
sti
mov
cld
fldt
push
push
add
into
cmc
xor
mov
mov
push
roll
shl
scas
sahf
test
pop
out
test
dec
xor
lods
mov
push
loop
xchg
xchg
daa
dec
in
dec
xchg
lods
jne
cli
sarb
pop
mov
cmp
cs
pushf
idivb
dec
sub
cli
mov
jo
lahf
sbb
push
mov
cmp
fs
push
sub
adc
in
jmp
jns
cwtl
insb
xchg
pop
inc
fstps
ss
dec
sbb
leave
mov
std
adc
xor
adc
pop
cmp
push
xchg
das
pop
ret
dec
push
nop
mov
or
jle
cmp
out
mov
negl
cmp
sahf
pushf
add
sbb
gs
xor
enter
mov
adc
sti
ss
add
out
aaa
inc
add
cmp
jmp
pop
push
jg
xor
add
int3
mov
jle
and
jle
add
loope
inc
adc
xor
and
push
lods
ret
fisttps
push
and
mov
add
lock
xchg
mov
lds
fwait
inc
idivl
inc
imul
jmp
push
mov
jae
xchg
iret
add
add
andb
bound
dec
dec
cmp
or
ja
pop
addr16
mov
fiaddl
and
cmp
subb
ss
icebp
pushl
rclb
das
sub
cmp
lods
dec
lcall
das
sub
enter
lret
adc
lret
pop
adc
jo
push
inc
pop
fistpl
je
jl
push
xchg
cmc
and
pop
enter
cwtl
jge
mov
inc
addr16
aaa
xchg
mov
out
cmp
ret
pop
out
push
push
mov
leave
cmovnp
add
push
mov
ret
push
pop
bound
xor
cmp
or
rolb
and
fsubrl
dec
inc
mov
mov
les
push
movsb
movsb
shl
or
jecxz
mov
ja
fld
ficoml
mov
aas
call
mov
ret
fsubrl
aas
test
push
dec
adc
xchg
xor
fisubrs
dec
rcrb
adc
pop
adc
movsb
stos
pop
scas
loopne
into
add
cmp
arpl
ss
pop
cltd
movsl
xchg
pushf
faddl
inc
arpl
loop,pn
xchg
jl
adc
add
push
or
icebp
daa
xchg
mov
add
cmp
lods
adc
push
add
scas
xor
mov
outsl
cli
clc
pop
scas
pushf
add
mov
cmp
xor
xlat
mov
adc
hlt
imul
mov
mov
ret
cmp
test
aad
fidivrs
rcrl
lods
jbe
fmuls
mov
clc
and
cmp
xchg
pop
or
stc
in
xor
fimull
aaa
inc
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
inc
mov
jle
and
jle
adc
dec
or
mov
mov
push
sub
adc
push
pop
jecxz,pt
fidivs
scas
push
jo
fcomps
dec
aas
pop
jo
fsubrl
xchg
sub
jo
test
out
push
stc
lret
mov
popf
mov
pop
pop
adc
in
cmp
and
mov
sub
xchg
hlt
std
out
and
fsub
ljmp
aaa
stc
lret
pop
push
mov
lret
cmp
or
cmp
push
push
jo
sbb
int
clc
adc
dec
lahf
cmp
jge
cld
pmaddwd
out
mov
add
sub
mov
aaa
cli
test
xchg
mov
pop
bound
mov
in
mov
sbbb
cmp
sahf
enter
inc
xor
cmp
and
add
fildl
clc
pop
leave
hlt
repz
xor
outsl
imul
push
jae
andb
leave
ss
mov
cmp
sub
xchg
je
lock
mov
ret
repz
sbb
pop
test
cmc
cmp
add
sub
js
mul
test
dec
jmp
shrb
fsub
sub
push
outsb
mov
icebp
push
jmp
add
int3
insb
dec
mov
xchg
lock
xor
pop
mov
sbb
in
insb
sbbb
je
data16
in
mulb
push
push
addl
or
mov
into
mov
in
loopne
and
mov
in
add
sbb
jnp
out
adc
nop
mov
dec
imul
movsb
sbbl
int3
add
xor
popa
fs
outsl
mov
rcl
mov
stos
xchg
push
mov
jae
xor
mov
sahf
xlat
dec
adc
pop
rcll
imul
ss
add
mov
js
xrelease
sbb
ret
jecxz
js
add
test
fldcw
test
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
add
popf
data16
and
jle
and
push
or
repnz
int3
jne
lods
lahf
cli
lock
mov
sarb
adc
mov
imul
scas
xlat
dec
inc
dec
xchg
dec
jmp
mov
int3
mov
lods
jmp
inc
push
es
mov
mov
push
add
xor
adc
jp
adc
leave
shlb
fwait
in
mov
xor
scas
mov
xor
imul
xchg
test
push
nop
xchg
movl
cmc
lods
daa
mov
iret
or
rcl
stos
inc
or
xchg
mov
repz
les
push
push
mov
cmp
pop
mov
jl
call
jns
shlb
dec
dec
and
cmp
dec
jnp
xchg
xchg
mov
push
ficomps
lock
mov
lds
hlt
adc
inc
pop
mov
mov
jmp
popa
pop
or
push
lret
xchg
ja
jb
xor
fbld
mov
or
ret
push
xor
sbb
mov
pop
icebp
mov
add
or
test
addr16
push
push
pusha
xchg
andl
dec
pop
lret
out
out
cmp
cmc
push
iret
pop
jecxz
shrl
test
pop
push
or
cmpsb
add
ret
fwait
dec
sti
jle
jmp
nop
ret
aam
out
fs
fwait
negl
addl
sbb
xlat
testl
inc
insb
xchg
push
adc
sub
xor
push
daa
sahf
pop
mov
mov
repnz
dec
inc
mov
inc
dec
clc
push
ja
inc
dec
xchg
xchg
test
mov
inc
shll
xorl
push
in
jnp
inc
test
mov
xchg
jmp
pusha
or
fbld
lret
ljmp
adc
cmp
sub
lds
mov
xchg
mov
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
js
or
movlps
push
dec
mov
rol
mov
dec
popa
mov
add
ret
icebp
addl
out
adc
cltd
cld
sahf
jb
cmpsb
dec
test
scas
and
aad
and
testb
ficomps
jae
cmpsb
insb
sarl
cwtl
cmp
aam
jle
lds
stc
add
sub
dec
movsl
movsl
xlat
push
push
jp
fwait
movsl
cmpsl
lret
fstl
xchg
mov
arpl
mov
jno
xor
fs
jns
outsb
leave
inc
cmpsl
or
pop
sbb
cmc
enter
mov
ret
xor
in
aaa
aas
aad
or
cmp
mov
imull
jge
loopne
mov
fnsave
sti
fbstp
out
push
push
fdivl
icebp
add
into
aad
aam
xor
les
je
xlat
lahf
fidivs
cwtl
add
aas
dec
push
roll
lcall
stc
lret
and
fsubs
dec
pop
addr16
mov
fdivrl
imul
xchg
adc
or
bound
ret
out
mov
nop
test
fs
pop
inc
ret
push
loopne
out
xchg
xor
imul
ret
and
or
push
aaa
outsl
sti
mov
leave
inc
xchg
es
push
xchg
jne
int
sbbl
cli
mov
arpl
xchg
or
daa
cmpl
ds
adc
movsb
sti
jmp
xchg
pop
mov
push
cmp
sub
fisubs
dec
dec
dec
push
xchg
out
fisttps
pop
mov
scas
imul
shlb
xor
pop
push
cmpsb
fisubrl
xchg
adc
xchg
add
jns
mov
mov
xchg
cli
clc
or
fldcw
pusha
fdivr
sbb
fnsave
sbb
dec
jg
and
lods
inc
fcoml
mov
jl
lahf
dec
mov
push
push
xor
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
xor
xor
jle
and
jle
sub
rorb
mov
jo
test
sub
out
jne
sub
push
andb
cwtl
sbb
pop
inc
loope
les
mov
push
fnstsw
nop
fcoms
int3
lods
into
leave
pop
les
mov
adc
cmpsb
xchg
jmp
test
lods
pop
out
dec
stos
and
lahf
xchg
repnz
dec
iret
ret
out
aas
into
test
stc
sub
dec
inc
leave
in
icebp
ret
je
notb
mov
sbb
cld
lds
sbb
adc
imul
fs
js
sti
shr
inc
dec
out
add
mov
jge
cli
mov
lods
push
insb
testl
cs
test
push
filds
bound
les
xchg
repz
data16
or
je
repz
stos
leave
push
add
loope
add
ds
xchg
hlt
adc
cmp
or
clc
into
xchg
dec
lret
sbb
xchg
and
adc
xchg
jg
jno
scas
js
mov
pop
pusha
dec
pop
movsl
and
adc
sahf
add
loope
sbb
out
sbb
leave
push
dec
scas
pop
sub
sahf
enter
jp
adc
cltd
xor
fcompl
test
adc
loop
test
repnz
xchg
dec
push
jge
test
pop
sbb
cmc
lods
ret
stc
add
and
mov
sbb
sbb
test
jns
call
jp
sub
push
clc
jmp
push
ds
fcoms
jp
call
jne
fists
mov
dec
je
addr16
and
mov
push
pop
mov
add
add
push
fisttps
ds
hlt
icebp
pop
xchg
pop
push
push
sub
xor
aad
cmc
int
ret
cmpsb
xlat
and
mov
mov
fs
loope
jmp
in
add
inc
test
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
jp
xor
fnstsw
and
jle
fs
lahf
addl
adc
inc
test
lods
inc
push
test
xor
or
pop
stc
shlb
sti
insb
mov
lret
xor
insl
bnd
insl
in
je
jmp
cmp
dec
ret
insl
ret
sbb
xchg
lods
in
xchg
mov
test
divl
repnz
jl
add
lea
sub
pop
icebp
imul
inc
add
sub
int3
xor
xchg
pop
fwait
mov
sar
jl
mov
pop
mov
xchg
sbb
xor
or
or
imul
cmp
mov
mov
sub
call
adc
inc
leave
mov
in
and
pop
mov
push
leave
arpl
fldcw
cs
jecxz
mov
jge
xchg
mov
inc
or
jae
inc
lds
int3
bound
outsl
enter
mov
insl
dec
ds
scas
pushf
sbb
mov
pop
xchg
pop
stos
adc
fmuls
push
aas
cld
xchg
cmp
push
pop
dec
sbb
rcrl
push
sub
mov
dec
jmp
out
pop
inc
pop
xor
lods
xor
mov
jp
jnp
in
sub
adc
ds
jg
ss
iret
or
nop
push
push
adcl
cmpsl
mov
out
jge
inc
push
repz
xchg
dec
push
les
or
lahf
popa
mov
mov
add
fcoml
scas
gs
fwait
xchg
and
pop
iret
push
push
push
mov
jg
iret
pop
fisubs
xchg
repnz
into
jle
lds
nop
lods
les
dec
xchg
push
xlat
sub
mov
xor
cmp
push
addr16
inc
loope
int3
test
pop
push
sub
daa
cmp
inc
dec
dec
aad
and
push
inc
pop
gs
lret
rorl
push
mov
inc
leave
inc
inc
inc
adc
aad
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
push
adc
lcall
stc
repnz
sbb
lods
das
imul
mov
and
mov
inc
js
push
test
sub
xchg
or
mov
mov
shll
in
clc
xchg
mov
jp
sub
mov
or
leave
mov
mov
cmp
daa
loope
pop
decb
and
int3
dec
sti
and
push
je
and
rclb
xor
and
inc
xchg
movsl
xor
pusha
fimuls
mov
mov
and
mov
inc
or
adc
outsb
cmp
pop
int3
aas
bound
pop
in
add
sub
add
xchg
xchg
rcrb
jle
lods
push
loope
into
ja
lods
mov
je
or
sbb
sbb
xchg
mov
subl
inc
jge
cmc
mov
inc
and
or
loop
sarl
mov
jecxz
test
push
aad
push
fsubrp
dec
pop
bound
xchg
push
mov
out
xor
jae
dec
jp
sbb
add
scas
push
adc
sub
and
imul
push
push
ja
jo
fdivrl
lods
loope
xchg
sub
cmp
stos
negb
cmpsl
add
add
sub
repnz
in
xchg
mov
clc
in
call
test
inc
add
and
inc
and
roll
fcoml
pop
sarb
call
sub
cmp
lcall
jl
les
imul
xchg
mov
ss
out
dec
mov
in
inc
dec
dec
aam
in
pop
adc
sahf
dec
mov
shrb
shll
jno
fsubr
cmp
lods
push
in
jo
in
scas
xor
out
bndldx
push
mov
xchg
sub
out
mul
or
cmp
mov
add
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
clc
cmp
jle
jl
jle
or
inc
js
jae
adc
add
test
xchg
jecxz
and
leave
repz
lds
in
je
lods
aad
pushf
and
jle
push
mov
clc
xchg
shl
insb
adc
fists
lds
or
lahf
dec
push
js
lods
lahf
adc
pop
jle
decb
cmp
dec
lods
ljmp
addr16
pop
sbb
sub
xor
adc
repz
dec
sbb
mov
daa
mov
inc
push
and
pop
popf
fwait
pushf
adc
dec
mov
jle
scas
into
cmp
div
xor
inc
fldcw
mov
lds
icebp
ja
cld
xchg
push
fwait
pop
push
cmp
xchg
test
mov
arpl
scas
ss
repnz
aaa
add
bound
push
inc
xchg
test
movsb
mov
xchg
sbb
sub
mov
shll
std
mov
mov
jae
mov
inc
push
jecxz
xchg
adc
cwtl
aaa
das
add
in
xor
dec
test
push
retw
pop
sbb
je
push
xchg
in
test
mov
mov
and
aaa
je
cmpsl
aad
mov
lret
test
sbb
aaa
xchg
jb
inc
shrl
data16
jbe
js
in
xchg
mov
pop
mov
cwtl
jg
daa
sbb
std
roll
dec
cmp
sbb
shll
cmpb
lds
push
roll
push
in
sub
cmp
fwait
out
sbbb
loopne
shlb
pop
add
ret
fiadds
cld
repnz
es
add
data16
mov
in
lods
jp
sub
lret
and
ror
xchg
fwait
sbb
clc
or
jb
into
pop
dec
pop
cmp
mov
loope
and
arpl
in
in
cltd
xchg
xor
lea
adc
push
inc
das
fwait
push
push
in
cmp
mov
mov
cmpsb
jae
push
push
sbbl
jmp
lds
popa
mov
fisttpll
lret
jle
jle
cmp
sub
mov
mov
lret
mov
xchg
gs
fldcw
pop
pusha
aaa
hlt
push
fstpt
jno
mov
dec
aam
in
xchg
pop
loop
lock
pop
xchg
test
fcmovb
sarl
jle
push
push
cmp
xor
out
or
xor
sahf
lcall
lret
adc
aam
aaa
sub
jg
jl
dec
out
test
and
ret
stc
xchg
fs
and
xchg
mov
sahf
adc
lcall
jle
adcb
insl
jecxz
fldt
je
mov
daa
mov
mov
mov
push
xchg
repz
nop
out
call
clc
xor
add
cmpb
test
pop
add
imul
dec
pop
fidivrs
sbb
push
push
xchg
or
xor
cld
loop
xor
or
sub
mov
enter
pop
dec
push
push
repz
dec
mov
pop
loop
outsb
cltd
push
ret
fldl
fstpt
js
inc
jo
add
mov
in
mov
xchg
xchg
add
mov
test
clc
lock
call
lods
cld
pop
mov
adc
inc
adc
add
mov
mov
cwtl
mov
xchg
insl
jp
cmp
das
xchg
dec
ds
xor
mov
ror
jle
pop
shrl
mov
xor
enter
sti
pop
repz
inc
sarl
scas
and
in
gs
ret
sahf
leave
jne
and
lds
and
cmp
mov
lea
inc
cmp
xchg
mull
add
pop
out
push
xorl
outsb
movsl
adc
sbb
sub
xchg
imull
cltd
repz
xchg
test
imul
and
dec
scas
gs
or
sbb
jle
or
cmp
lret
cmovg
sub
pop
add
repz
lods
xor
cltd
sahf
sahf
cmove
cmp
std
nop
ljmp
or
cld
inc
je
adc
mov
inc
addr16
add
out
add
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
sahf
aas
fwait
leave
cmp
jle
cmp
neg
movsb
cmp
mov
ja
insb
jg
les
mov
fistl
mov
mov
repnz
repz
xchg
mov
cmp
scas
mov
sbb
mov
sub
into
insb
and
xchg
les
stos
inc
scas
into
and
cld
cmp
addr16
jnp
pop
in
dec
shr
ret
fwait
lods
adc
sbb
cmpl
clc
add
xor
jnp
outsb
addr16
fisttps
outsl
pop
lea
movsl
test
push
and
out
add
out
jno
push
imul
shll
mov
sarb
dec
mov
bound
call
mov
mov
dec
jl
jp
sub
outsb
mov
pop
push
xchg
adcl
xchg
hlt
clc
je
mov
xchg
hlt
scas
mov
shlb
std
push
out
inc
rcrb
mov
ljmp
aad
inc
leave
inc
mov
cmpsl
out
mov
adc
cmp
leave
jo
push
mov
inc
daa
inc
cmpsl
aaa
push
inc
push
add
loope
cmc
or
pushf
cmpsb
insl
in
cld
andl
push
nop
add
mov
pop
sub
es
xchg
sbb
pop
mov
jge
push
and
int3
lcall
je
js
sbb
clc
xchg
dec
mov
push
cltd
imul
cmc
add
sbb
sbb
add
dec
xor
cmp
jle
sbb
out
fmull
or
fs
cmc
lods
test
addr16
push
cmp
mov
dec
add
cmp
push
cld
enter
push
push
call
adc
sub
iret
rcll
out
cli
shrl
mov
iret
call
cmp
test
lahf
cmpsl
mov
push
sbb
in
out
data16
mov
pop
mov
loopne
mov
stc
sbb
mov
scas
fiaddl
jmp
mov
push
sub
dec
mov
repz
and
jno
pop
dec
stos
scas
fisttpll
sbb
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
mov
loopne
jle
jl
jle
mov
or
mov
dec
inc
mov
js
imul
inc
je
adc
sub
fnstenv
inc
jo
gs
outsl
or
xor
popa
je
test
mov
imul
outsb
lods
xor
xor
mov
adc
sti
movsl
aaa
jo
pushf
int
or
xchg
or
gs
and
fdivrp
les
das
stos
mov
in
loopne
daa
divb
adc
fdivr
ljmp
rorl
in
adc
pop
mov
inc
push
lcall
or
test
mov
lret
loopne
xchg
orb
pop
fs
insl
xchg
xchg
arpl
lods
subl
adc
adc
bound
pop
es
adc
test
cwtl
imul
mov
faddp
mov
xchg
sbb
sub
adc
call
aaa
sbb
int
inc
lret
dec
and
sub
imul
xchg
cmp
cmpsl
test
mov
add
sub
stos
lret
mov
out
mov
icebp
mov
pop
mov
push
clc
imul
jo
mov
dec
inc
in
arpl
mov
jno
outsb
scas
shlb
orl
cmp
ja
adc
sub
dec
sbb
les
cmp
shll
pop
add
mov
and
loop
mov
pop
cmp
mov
xchg
jno
sbb
pushf
or
pand
pop
adc
outsb
scas
xor
pop
lret
test
dec
aas
pushl
sbb
imul
pop
jmp
xor
push
push
das
loop
cmp
jae
mov
pop
xchg
pop
and
jne
jbe
jns
and
popa
push
pop
cwtl
xchg
jmp
cmp
loop
in
ds
test
stos
std
push
cmp
int3
bound
mull
cmp
cmc
xor
and
jmp
call
sti
ss
add
add
add
push
add
add
shlb
sti
ss
add
sti
ss
add
add
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
pop
mov
and
cmp
or
bound
cwtl
jl
mov
mov
pop
or
push
jbe
out
rcrb
sbb
leave
cmp
loopne
mov
repnz
fsubr
iret
mov
xor
lret
fsubrs
scas
mov
xchg
pusha
jp
inc
testl
cmpsl
mov
bound
outsb
loopne
outsb
clc
sbb
jne
pop
iret
fildll
sbb
inc
sub
arpl
jecxz
mov
cmp
cld
or
lock
loopne
test
add
idivl
daa
add
dec
lods
out
xchg
pop
iret
mov
adc
jecxz
push
iret
xchg
cli
xor
pop
or
xchg
pusha
jmp
bound
jne
je
out
shlb
aas
sbb
or
pop
xchg
cmpsl
lahf
lcall
mov
jecxz
aas
or
in
and
mov
nop
in
fwait
cmp
add
mov
das
outsb
mov
lret
mov
addl
enter
push
adc
daa
jl
push
push
subb
ret
hlt
loopne
lret
test
cmp
sbb
ljmp
in
push
stos
sbb
pusha
sub
cs
imul
sahf
cs
out
jmp
fiaddl
lret
jle
stos
add
mov
and
dec
outsb
sub
sbb
test
ret
or
fiaddl
pop
dec
inc
popf
fistpll
jge
sub
in
repz
repz
cmp
cmp
mov
rorb
insb
mov
leave
inc
push
sti
mov
xchg
pop
stc
jle
loop
jmp
das
mov
int3
jne
cli
je
dec
mov
adc
push
sbb
mov
movsb
inc
sub
popf
pop
pop
sub
aam
das
mov
pop
sbb
test
cmpsl
aad
mov
repz
repz
mov
sbb
and
lahf
sbb
adc
cmp
sbb
fmull
rcrb
cmpsl
fdivs
or
sub
and
mov
push
fwait
cmp
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
xor
jl
jle
andb
xor
lods
or
out
fsqrt
adc
adc
stc
icebp
mov
gs
or
jle
adc
in
ret
pop
enter
hlt
jg
mov
cmp
or
test
shrb
jne
mov
test
and
sbb
dec
icebp
adc
out
mov
fdivl
nop
mov
enter
mov
stos
int3
pushf
clc
cltd
xor
iret
push
xor
dec
inc
out
inc
or
mov
nop
orl
push
shll
into
es
mov
outsl
sbb
jno
pop
mov
sub
fldl
outsb
aaa
sbbb
pop
movsl
sbb
mov
into
or
enter
fstpt
adc
outsl
pushl
xchg
fwait
rorl
int3
sub
mov
in
idivl
movsb
sahf
pop
sbb
lods
lret
je
push
mov
test
dec
mov
pop
sub
shrl
xor
xor
sub
mov
aaa
and
cli
sbb
cmp
stc
mov
jg
or
lock
cs
pop
ds
nop
mov
jns
cmc
mov
cmp
adc
pop
jl
pop
loop
jae
add
shl
loop
lds
jb
fldl
out
add
iret
inc
xor
fsub
fwait
dec
inc
add
hlt
and
cmpsl
mov
push
scas
xor
movsl
inc
cmc
add
mov
pop
pop
pop
add
notl
fucomp
sbb
fsubs
push
jnp
fsubrl
sahf
pop
add
add
lahf
lahf
sbbb
aad
mov
dec
push
or
pop
and
xchg
daa
sub
mov
or
xor
rorl
aaa
mov
adc
push
addb
in
push
dec
pop
mov
inc
loope
lcall
out
mov
fnstsw
pushf
jns
mov
inc
add
xor
jg
pop
in
outsb
adc
jo
lcall
aaa
popa
sub
push
dec
imul
cld
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
jecxz
lahf
mov
jmp
jle
jl
jle
sub
jb
rcrl
aad
and
push
divl
mov
pop
adc
jp
and
adc
sar
xlat
push
dec
adc
inc
sbb
or
mov
push
xor
push
pop
cld
cld
fdivl
xchg
inc
test
sbb
jae
add
inc
jnp
jecxz
repnz
add
test
out
jl
iret
inc
inc
fcmovbe
movsb
cli
push
shll
add
push
scas
mov
mov
mov
aaa
xchg
push
stos
pop
push
sub
push
mov
fwait
call
push
inc
xchg
mov
cmc
jge
mov
cmp
xchg
mov
addr16
sbb
outsl
jne
insb
or
xchg
xlat
xor
sub
lahf
jmp
dec
adc
push
mov
int3
or
xlat
or
jmp
call
dec
jae
mov
hlt
cwtl
mov
popf
sbb
sub
aas
mov
inc
mov
rorb
mov
mov
mov
inc
mov
adc
test
sub
fs
push
dec
shll
notb
cwtl
cmp
int3
add
sti
fs
mov
xor
inc
or
loopne
push
daa
xchg
mov
mov
mov
fcomi
sar
sbbl
lahf
xchg
push
ffree
cli
xor
pop
idiv
testb
or
pop
aad
mov
cmp
mov
in
ljmp
imul
ljmp
push
jnp
mov
nop
fdivrl
xchg
dec
push
push
inc
push
adc
add
stos
push
push
lods
outsb
pop
imul
jp
sbb
xor
addr16
lds
inc
pop
mov
jge
mov
xchg
in
xchg
sub
mov
lahf
jno
xor
add
jns
ds
jmp
jbe
xor
and
sahf
push
gs
lods
loop
inc
or
hlt
push
into
out
pop
cmp
and
jnp
dec
or
pusha
mov
stos
cli
dec
cmovns
iret
dec
dec
sbbb
loopne
mov
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
fnstenv
mov
inc
mov
push
jbe
icebp
testl
dec
mov
pop
dec
shll
or
sub
xchg
pop
mov
xchg
cs
cmc
xchg
mov
pop
sahf
icebp
cmp
and
movsb
imul
cmp
push
dec
mov
xchg
dec
aad
inc
sub
xchg
sbb
cwtl
lcall
add
mov
lods
shrb
xchg
push
dec
xchg
repnz
push
xchg
inc
scas
aam
inc
mov
imul
and
mov
xlat
in
xor
stos
stos
mov
and
stos
outsl
or
int
sbb
es
test
in
xchg
push
jne
inc
push
iret
shll
mov
push
shll
jb
repz
or
xor
test
and
fstpl
clc
xchg
inc
fsubrs
push
adc
lds
jb
loop
cs
insb
xor
inc
mov
fbstp
insb
inc
mov
lock
jmp
loopne
imul
negb
negb
mov
and
xor
inc
js
pop
aas
mov
pop
imul
cmc
add
pushf
subl
inc
icebp
hlt
nop
jno
xlat
pusha
fnstcw
adc
mov
mov
shlb
imul
cmpsl
je
xchg
sbb
cmp
jl
mov
mov
insl
scas
bound
fdivs
inc
cmpsb
das
fiadds
in
pop
enter
jle
cwtl
xor
pop
sbb
xchg
cmp
xchg
leave
adc
jns
jge
movsl
jge
mov
jo
and
add
jae
lcall
icebp
inc
std
outsl
js
and
ret
loope
sub
push
shll
dec
data16
enter
xchg
repnz
mov
jge
in
popf
push
xchg
xchg
push
rcr
push
xor
mov
add
lods
xor
test
xor
mov
lcall
rclb
cmp
add
subl
fstpl
pushf
cwtl
repnz
call
inc
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
out
sbb
jle
jl
jle
das
pop
cmp
mov
jmp
mov
mov
into
cmp
push
adc
push
fwait
lret
mov
jae
push
mov
jg
jle
repz
push
cltd
sub
inc
inc
out
jecxz
cmp
insb
les
enter
lret
inc
xor
rcll
sub
dec
adc
jle
xor
cmc
xchg
xor
jno
int3
int
add
lret
andb
sbb
dec
cs
cmpsb
jnp
arpl
add
test
dec
or
cmpsl
sub
push
pop
jne
xchg
jno
pusha
enter
xor
leave
xorb
stc
jno
scas
cltd
test
dec
arpl
mov
push
sub
sub
pushf
inc
ss
mov
push
mov
ret
mov
sbb
and
ret
notb
fcoms
fs
dec
jge
xor
xlat
inc
leave
add
pop
arpl
push
pop
out
inc
lods
movsb
in
movsb
add
in
sbb
pop
mov
dec
adc
and
out
push
sbb
mov
mov
adc
in
in
cld
fs
sbb
adc
push
adc
mov
out
incb
xlat
dec
dec
out
mov
sbb
jo
mov
push
sbb
xor
xor
mov
stos
adc
inc
jbe
arpl
lock
outsb
jp
xor
xor
xchg
out
adc
scas
sbb
xchg
lea
out
nop
std
xor
adcl
xchg
and
add
test
jae
xor
dec
out
movsb
add
dec
mov
xchg
and
mov
repnz
mov
pop
jecxz
xlat
cmp
mov
mull
lcall
addb
mov
nop
push
outsb
push
gs
mov
nop
stos
jbe
andb
or
fildl
mov
sbb
std
mov
icebp
push
movsb
add
mov
stos
and
pushf
jecxz
jo
mov
mov
add
and
and
clc
xor
add
js
fisttpl
dec
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
out
xchg
bnd
cmp
sbb
dec
xchg
cmpsl
adc
sbbl
mov
fcoms
stos
push
mov
or
jb
mov
and
movl
insb
fs
enter
push
test
sub
repz
xor
loop
sbb
aam
in
fbstp
xor
lret
mov
repnz
insb
adcb
inc
enter
and
aas
cmp
mov
adc
dec
dec
inc
lds
sbbb
idivb
mov
insl
in
cs
xchg
movsb
jp
invd
push
push
add
pop
pop
ret
pushf
out
test
sub
sub
lcall
dec
or
out
lret
mov
and
mov
cli
mov
frstor
push
sahf
or
enter
ds
jno
icebp
insb
dec
cli
icebp
push
sbb
loopne
jno
test
push
sbb
fwait
lret
cmovbe
push
inc
xor
lods
lret
push
lahf
gs
outsb
insl
pop
jp
lret
xor
pop
sbb
xchg
aaa
pop
cmpsb
jne
cli
fdivl
jg
mov
jl
lahf
xchg
ret
pop
sub
stc
and
mov
out
popf
mov
pop
sub
jmp
and
jb
sub
xor
jnp
mov
scas
imul
mov
in
pop
ret
sbb
cld
cmpsl
inc
stos
cltd
in
mov
fstpt
dec
cld
sbb
int
mov
andl
mov
mov
mov
clc
push
jp
mov
lds
xchg
unpckhps
in
inc
ret
gs
lds
out
mov
iret
mov
les
adc
jle
test
adc
nop
push
xchg
jno
sub
lcall
pop
jns
mov
out
icebp
xchg
scas
popa
call
mov
and
or
mov
dec
lods
rcr
push
testl
jnp
sbb
mov
inc
lods
add
out
clc
test
imul
mov
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
mov
jle
cmp
fiadds
dec
fimuls
add
call
stos
dec
sbb
jecxz
hlt
xchg
pop
xor
fidivrl
inc
adc
dec
in
xor
xchg
mov
xchg
sbbl
dec
les
inc
add
mov
xor
fpatan
aam
repz
cmp
je
mov
stos
sub
sbb
xor
pop
fisttpll
push
add
xor
adc
mov
bound
sub
ret
jle
rcrb
bound
es
stc
test
andl
push
mov
xchg
sbb
and
pop
cmpl
call
add
dec
or
rorl
or
xchg
or
xchg
test
arpl
jg
pop
scas
fnstcw
mov
jmp
push
dec
pop
daa
xchg
mov
test
mov
sub
pop
push
pusha
jae
push
cmpsb
fsubrs
nop
mov
aaa
sbb
push
clc
dec
xchg
pusha
movsl
and
jg
mov
into
scas
jne
pop
jl
iret
addl
adc
popf
idiv
sub
pop
and
lahf
lods
jmp
xor
cs
in
pop
and
stos
xor
lds
inc
fwait
pop
lcall
ret
dec
mov
lds
push
mov
lock
scas
adc
inc
add
xchg
add
and
inc
add
sbbb
dec
jmp
fcmovnu
sarb
cmp
mov
outsl
push
es
aaa
mov
out
mov
mov
loop
call
and
jmp
movsl
gs
inc
repnz
dec
daa
cmp
test
pand
adc
jg
sbb
addr16
lock
out
mov
sub
xorb
in
icebp
xchg
xor
xchg
stos
dec
cs
sbb
jl
int3
xor
jae
out
loope
mull
push
xchg
pushf
inc
lds
pop
xchg
andl
jne
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
subl
jle
jl
jle
cld
and
popf
fs
dec
je
stc
ret
push
iret
cs
pop
inc
jo
test
imul
mov
mov
std
int3
inc
shrl
pusha
into
and
loopne
inc
fldcw
clc
cmp
in
rorb
mov
xchg
pop
mov
adc
pushf
nop
std
mov
outsb
not
je
dec
divb
addr16
hlt
mov
add
dec
in
andb
mov
pop
pushf
mov
xchg
mov
sub
jg
dec
addr16
or
mov
mov
ljmp
mov
aam
insb
mov
xor
sbb
les
sub
mov
aaa
cmp
push
xlat
xor
fwait
xor
sbb
and
repnz
xorl
scas
into
and
pushf
out
mov
jmp
mov
add
iret
pop
cmp
push
mov
pop
jecxz
xlat
inc
outsb
sbb
push
or
sbb
lret
es
xor
sbb
test
lahf
mov
add
push
icebp
ljmp
sbb
sti
jge
cmp
cmp
cltd
xor
addr16
cmp
push
iret
push
sub
push
ret
sar
in
sub
jge
popa
adc
xchg
mov
xchg
shll
jns
mov
loopne
adc
or
icebp
xchg
or
daa
mov
andb
cmc
lcall
cmp
cli
icebp
movsl
push
inc
fists
stos
mov
mov
cmc
sbb
jo
mov
xchg
test
dec
push
xor
push
inc
push
jno
rcrb
jmp
inc
mov
inc
jle
shr
pop
hlt
hlt
mov
imul
dec
adc
dec
imul
sbbb
std
cmp
andb
scas
dec
inc
push
out
jnp
js
pop
es
stc
aaa
mov
pop
out
jmp
call
imul
inc
imul
add
adc
shl
jp
rcll
push
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
xorb
jle
cmp
movsb
dec
jno
testb
out
jbe
ret
push
adc
cld
clc
cmp
xchg
mov
lcall
add
mov
rcr
int3
aam
jno
pop
movsb
dec
adc
loop
cld
pop
adc
daa
jl
push
pop
mov
pusha
pop
mov
sahf
ret
roll
imul
jno
dec
lods
mov
xor
mov
add
mov
fidivl
aam
or
sbb
test
jae
pop
inc
or
mov
out
sbb
dec
jl
insb
push
sti
jge
lahf
push
or
inc
aam
or
std
dec
int
sarl
add
add
lret
hlt
cmc
insb
cmp
mov
addr16
out
inc
push
jno
cs
fsubl
test
jb
into
popl
cmp
pop
mov
loope
ret
sbb
cmc
pusha
shrb
jmp
dec
cmp
sbb
ljmp
inc
sub
jno
int
inc
inc
in
popa
sub
pop
int3
or
add
inc
fistps
cmpsl
push
aas
jg
cltd
fcoms
je
sub
movsl
pop
imul
or
ret
mov
sub
xchg
xchg
mov
and
pop
xchg
lahf
aas
xchg
adc
and
enter
rcrb
stos
jp
rorb
in
into
add
mov
insl
pushf
mov
std
jmp
sahf
std
stc
push
imul
or
addr16
fcmovnb
dec
push
add
sbb
add
jo
mov
rorl
pop
mov
sbb
jge
into
jecxz
stc
mov
fdivrp
lock
pop
push
push
cltd
push
cmp
pop
mov
add
mov
fcomps
into
push
lahf
dec
mov
dec
push
inc
aaa
add
or
fsub
xchg
sub
divb
popf
and
lock
lock
lock
xor
sbb
out
xchg
inc
sub
or
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
cmpsb
xlat
aas
jg
sti
jle
cmp
mov
jecxz
out
inc
sub
inc
add
cwtl
push
je
cld
mov
push
adc
bound
pop
test
aaa
push
pop
mov
cmp
cmc
ja
mov
sbbb
xor
repnz
scas
and
sub
ror
movsb
mov
mov
hlt
sbb
aaa
add
sbb
and
jg
lods
cs
xor
pop
out
sub
or
in
shrb
js
ret
mov
inc
add
dec
xor
mov
jl
jp
xor
push
jmp
jb
popf
loopne
xchg
cmovle
sub
mov
rcr
pop
ja,pn
jns
inc
sub
jbe
cld
dec
inc
sti
add
and
mov
dec
cld
jg
mov
test
gs
add
mov
stos
mov
stos
cld
sbb
jno
sbb
pop
cwtl
loopne
in
jne
mov
sub
test
mov
jmp
popa
out
int3
test
xor
jns
aaa
add
repnz
movl
sub
inc
mov
jbe
scas
shrl
push
pop
or
jne
jnp
das
mov
xor
sti
jl
xchg
rcrl
pop
mov
daa
push
xchg
out
jo
jle
js
mov
fcom
xchg
pop
inc
repz
mov
shl
and
sbb
add
xchg
fyl2xp1
cmp
mov
mov
das
inc
jbe
cmp
xor
movsb
in
mov
repnz
cmp
cwtl
lret
sub
outsb
lock
jmp
iret
mov
mov
cmp
pop
pushf
dec
sub
dec
xchg
adc
std
leave
push
lock
fcoms
adc
jp
pop
cmp
mov
pop
add
mov
mov
popa
add
sbb
into
mov
iret
pop
loop
or
rcrl
outsl
scas
in
or
test
sub
ja
and
or
jns
pop
stc
insl
ret
int
pop
jnp
add
sbbl
in
sub
sub
or
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
jp
stc
jle
cmp
mov
shrl
cmpsl
arpl
cmpsb
outsb
mov
cmc
cmp
loopne
mov
cmp
dec
xchg
lea
or
sub
inc
inc
mov
sbb
mov
mov
lock
or
inc
push
or
mov
insl
rcr
popa
mov
rclb
mov
jp
fs
or
inc
xor
out
outsb
push
leave
fildll
xor
add
mov
shrb
lcall
int3
mov
lcall
mov
push
adc
shl
clc
js
fwait
inc
outsb
jns
movsl
mov
or
stc
or
dec
pop
aad
idivb
or
mov
imul
sarb
add
mov
in
inc
inc
in
pop
push
cmp
push
nop
aas
js
inc
cs
adc
inc
cmpsb
lahf
ja
ss
fcompl
push
or
jl
dec
sahf
imul
ds
pop
xchg
mulb
nop
inc
sub
xchg
std
insl
lahf
jne
and
mov
jnp
jp
iret
jnp
imul
push
jbe
push
inc
lahf
loop
push
inc
push
mov
inc
or
test
sarb
cltd
pop
or
fisubrs
std
push
faddl
in
pop
out
mov
jmp
cmp
sub
mov
sub
sub
pop
mov
insb
mov
movsl
sti
cmp
pusha
mov
adc
dec
dec
inc
dec
jl
arpl
pop
mov
in
pop
push
sti
dec
ror
inc
shrl
pop
lret
popf
lret
cld
pop
mov
or
stc
and
mov
sub
out
adc
fldenv
jp
xor
push
mov
cmpsb
cli
xor
mov
das
mov
sbb
push
cmp
repz
push
sbb
insb
mov
lahf
iret
or
bound
inc
xor
fidivrs
shll
out
out
sti
mov
dec
insb
popf
adc
dec
insb
sbb
cmp
fnstcw
cmp
out
pop
xchg
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
xchg
lcall
jl
jle
xchg
dec
adc
addr16
iret
leave
jl
mov
mov
movsl
cmp
aas
shlb
lcall
dec
bound
and
cld
jle
add
sub
pop
lds
rorl
mov
inc
std
jae
int3
dec
loopne
push
pop
pop
sub
mov
nop
inc
jle
stc
stc
jnp
mov
cmc
dec
fldt
jb
bound
cld
in
in
sbb
jp
lcall
xor
xlat
mov
jmp
jl
sbb
je
mov
ljmp
leave
icebp
xchg
xchg
mov
mov
repnz
pop
push
cmp
test
int
sbb
stos
js
lret
ja
repnz
mov
stos
inc
out
mov
push
aaa
or
aad
nop
out
addr16
lahf
inc
pop
jnp
je
scas
cmc
dec
sarb
stc
and
arpl
pop
shrl
dec
jecxz
sti
insl
sbb
fxch
adc
mov
fildll
xor
ficompl
mov
inc
cmpsb
adc
mov
gs
popf
xchg
xchg
xor
inc
sbb
mov
outsl
xchg
imul
insb
out
jo
js
aas
fldcw
insl
iret
aad
int
outsb
imul
sbb
ret
insl
inc
mov
xchg
xor
or
rolb
dec
repz
mov
pop
mov
insl
loopne
hlt
cs
mov
stos
xchg
lock
cs
adc
dec
dec
jp
clc
je
xchg
lret
cmpb
fiadds
cwtl
dec
fwait
adc
aam
add
ja
add
add
lods
call
mov
add
sbb
xchg
cwtl
dec
notl
inc
adc
outsb
xor
enter
vshufps
imul
xchg
aad
mov
mov
mov
inc
shll
lahf
adc
and
pusha
mov
mov
out
out
push
mov
push
adc
pop
rcrl
out
or
jl
scas
pop
add
adc
mov
out
ret
push
sbb
cld
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
rcrl
popa
xor
jle
cmp
faddl
inc
jbe
int3
push
ja
cwtl
nop
ret
test
xor
xchg
push
les
mov
insb
aad
or
mov
int3
int3
int3
out
mov
jecxz
inc
test
mov
mov
pop
or
clc
sbbb
dec
inc
pushf
and
mov
lock
inc
and
inc
movsb
rolb
pop
jmp
test
add
clc
mov
fmull
mov
mov
jge
sbb
cltd
mov
add
out
repz
sbb
stos
jge
pop
pop
fstps
outsl
mov
push
mov
ja
mov
push
push
jecxz
jno
sbb
adc
shrb
lret
pop
xchg
or
xchg
add
xchg
cmpsl
adc
test
cli
dec
lret
jge
imul
push
add
inc
ficoml
lcall
xor
stos
adc
inc
nop
scas
pop
lret
lds
mov
ss
sti
add
push
mov
mov
repz
jg
subl
addl
adc
inc
adc
inc
pop
mov
mov
test
pop
mov
pop
sub
popf
dec
xchg
sbb
dec
inc
add
rclb
out
repz
jl
pushf
sub
and
fisttpll
push
cmp
rorb
mov
xor
mov
into
and
test
jnp
fsubrs
jp
mov
add
mov
stos
stc
out
mov
gs
adc
mov
jnp
mov
cmpb
test
and
pop
jmp
mov
sub
loope
or
mov
popf
add
push
ds
clc
in
mov
pop
jecxz
sub
jl
cmp
mov
xchg
push
sub
inc
sub
test
mov
dec
rorl
popf
mov
and
jno
lahf
lret
cmc
rcll
leave
sahf
jbe
jge
dec
cmc
aad
les
mov
xor
add
pop
xchg
out
iret
stos
test
aam
mov
mov
push
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
add
fiadds
jle
sbb
stos
pushf
dec
jo
fmuls
inc
jns
add
fwait
in
leave
cmp
sub
mov
mov
addr16
fnstcw
outsl
mov
jge
push
cmp
jmp
xor
std
dec
add
in
xchg
int
fstl
pop
cmp
ja
mov
adc
faddp
fucomp
pop
popa
push
push
sub
aam
xchg
cmp
notl
imul
lods
test
clc
arpl
xchg
aaa
dec
inc
cmp
push
in
adc
cld
xor
aam
sbb
idivb
jp
push
pop
ret
imulb
push
rol
push
push
adc
imul
xlat
stos
inc
int
cmp
ja
test
sub
dec
mov
and
fimull
inc
out
jge
movsb
in
ds
xchg
std
cli
xchg
popf
lcall
push
xchg
idivb
loop
in
mov
rep
mov
cmpl
ret
mov
cmp
es
mov
out
jae
pop
scas
add
jle
ds
mov
jo
out
dec
mov
iret
mov
jnp
scas
mov
mov
cs
jmp
inc
or
insb
ss
sbb
fs
mov
nop
mov
scas
or
cwtl
sub
pop
fcmovb
pop
cmpsb
fadds
fsts
mov
lret
jle
or
gs
adc
call
and
xor
fisttpl
mov
xchg
pop
push
add
scas
add
lahf
push
stos
pop
xchg
ja
adc
fisubl
out
push
roll
and
pop
lods
sub
test
jp
and
push
int3
pop
ret
mov
dec
pop
push
rcrb
mov
nop
imul
mov
or
lds
add
adcb
in
imul
xor
add
mov
andb
hlt
rolb
jo
sub
jmp
push
pop
push
ljmp
pop
leave
xchg
xor
sti
cwtl
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
jle
cmp
aaa
out
adc
push
sub
lock
adc
xchg
pop
loopne
jo
fstpt
dec
dec
mov
adc
inc
mov
jecxz
jo
xor
push
mov
dec
pop
sub
test
add
pop
divb
icebp
mov
jge
mov
sti
cld
cs
shll
inc
mov
orl
cmp
insl
lcall
jo
add
stos
push
sti
repz
xor
daa
jno
aaa
add
js
dec
cs
push
pop
lea
mov
mov
fldcw
fbstp
push
push
sahf
push
les
sbb
pop
out
dec
gs
int3
mov
loope
insl
push
add
cmc
adc
mov
test
jmp
daa
pop
cmp
dec
mov
gs
push
mov
and
sbb
icebp
imul
and
fimull
pop
xchg
jmp
lds
jg
leave
pushf
push
pop
sub
shlb
pop
inc
xlat
push
sbb
mov
mov
and
orl
out
xlat
and
pushf
mov
rcrl
test
addr16
cmp
mov
insb
pop
repnz
xor
dec
cmp
sbb
out
faddp
nop
xor
push
insb
in
lcall
les
clc
out
mov
cltd
jae
jmp
daa
push
out
mov
mov
sar
add
and
mov
xchg
sbb
cli
into
es
fldenv
sbbb
jb
daa
out
and
movl
add
ja
jbe
das
xchg
sarl
out
outsl
mov
scas
add
outsl
stos
xchg
pop
lret
or
xchg
ffreep
jl
jbe
sub
adc
andb
cmpsl
out
jmp
scas
cmp
adc
xchg
add
mov
mov
in
jp
lcall
inc
xor
mov
pop
aas
inc
and
push
call
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
ja
cmp
jle
cmp
pop
iret
sbb
add
push
mov
arpl
cwtl
mov
jb
sub
repnz
push
mov
add
mov
lret
lahf
push
add
sub
adc
fcmovu
push
inc
push
jo
lret
ss
fstpl
pop
pop
mov
mov
inc
mov
out
mov
cli
fsubrl
fimuls
inc
xor
popa
rorb
mov
and
mov
mov
xlat
dec
fsubl
jg
inc
push
ficoms
or
cmp
movsb
mul
ljmp
imul
and
mul
filds
mov
test
in
xor
imul
push
jo
xchg
imul
mov
divb
sarb
rcr
lds
sbb
push
fnstcw
inc
push
add
cmpsl
cmp
rcll
fldenv
adc
mov
loop
push
sbb
cld
mov
mov
shl
dec
sub
jg
ja
push
or
dec
cmp
sbb
mov
jo
add
mov
mov
rorl
sub
add
and
xchg
adc
sbb
imul
mov
ss
imul
pop
mov
loopne
das
xor
cwtl
xchg
aam
and
push
roll
and
aas
ficompl
mov
addr16
ds
or
sbb
outsl
les
pushf
repz
jge
repz
dec
add
es
hlt
and
int
roll
in
sbb
pop
test
jae
add
pop
cmpb
aad
jp
stos
scas
mov
jnp
ror
lock
xor
test
inc
adc
jmp
or
add
dec
cltd
sub
js
sub
insl
mov
mov
ds
fidivrl
xchg
aad
scas
xor
mov
out
mov
ret
add
cmpb
jmp
push
std
dec
sahf
push
push
add
les
jle
cmp
dec
cmp
add
repz
jecxz
scas
in
cld
push
push
xor
lret
out
jle
std
jnp
or
notl
jns
popf
inc
adc
jl
pop
mov
inc
dec
mov
clc
push
adc
mov
test
stos
dec
ja
pop
ret
cmp
sahf
mov
sbb
int3
add
cmp
call
push
inc
test
jb
cmp
cs
in
sub
icebp
push
mov
int
insl
out
cmp
mov
icebp
dec
movsb
mov
ss
jae
por
pop
out
int3
nop
scas
mov
pop
xor
mov
clc
sbb
shrl
cmpsl
enter
scas
nop
add
adc
pop
push
out
xor
pop
jmp
enter
pop
popa
imul
sbb
push
jl
cmp
add
int
xor
jmp
mov
sbb
mov
sbb
mov
lds
inc
jno
sub
in
cmp
adc
scas
and
fnsave
push
mov
loopne
dec
movsb
xchg
xchg
sti
jno
xchg
dec
out
int
inc
sbb
les
and
test
mov
movsb
stc
xchg
in
mov
mov
inc
gs
jle
lret
sub
fildl
roll
pop
mov
incb
cltd
push
daa
in
add
popa
mov
mov
push
cmp
xchg
mov
inc
outsb
clc
add
ja
lea
bound
dec
or
dec
push
mov
in
cmp
addr16
fstps
repz
jmp
jle
sub
fistps
pop
jp
data16
stos
add
fwait
adc
icebp
push
fistl
mov
push
outsl
sbb
push
dec
xorl
sub
inc
inc
sub
rolb
addb
insb
in
pusha
pop
jl
and
lret
daa
sbb
neg
add
and
and
xchg
sar
ja
stc
pop
add
mov
shl
mov
sbb
inc
in
scas
roll
xchg
jmp
sahf
testb
push
repz
jae
ficoms
inc
or
inc
testb
jle
fldenv
or
jmp
stos
shlb
not
daa
jnp
pop
or
mov
out
addl
cltd
cwtl
js
js
pop
xorl
sbb
movsl
shll
std
push
mov
sub
jle
xchg
cmp
and
jle
xor
rcrb
xor
mov
push
and
mov
cli
cmpsb
loop
out
nop
add
stos
out
hlt
in
bound
pushf
jno
push
fnstsw
sub
jnp
cmpsl
push
je
popf
and
fstpt
sub
rorb
stos
push
sub
inc
add
cmc
mov
gs
push
shlb
lret
mull
fldcw
mov
xchg
jns
sbb
fistps
sbb
cs
mov
jmp
ret
testb
pop
mov
and
fistps
scas
mov
jmp
dec
sub
mov
imul
dec
in
loope
in
bound
pop
lret
sbb
inc
or
mov
cmp
xor
add
push
or
scas
sbb
gs
xor
out
pusha
inc
mov
lock
hlt
stos
push
daa
pop
popa
aad
xchg
mov
jmp
add
or
jne
inc
mov
mov
test
fmulp
divl
iret
insb
and
or
ljmp
push
jmp
int3
adc
mov
sbb
xor
divl
fistpl
test
int
mov
lahf
cmp
fdivl
adcb
rcl
xor
and
test
push
sti
adc
mov
jge
pushl
rorb
adc
mov
iret
cmpsl
push
push
pop
xor
ret
push
pop
test
repz
sahf
ret
xchg
and
fsubl
xchg
je
sbb
popa
pop
push
fcomps
mov
xor
sbb
bound
push
repnz
mov
nop
push
lahf
sahf
mov
shl
mov
test
cmpsl
mov
or
cmp
aam
pop
pop
or
pop
xchg
lods
xchg
push
add
aam
jmp
fwait
push
mov
mov
mov
pop
divl
jle
cmp
dec
pop
mov
jge
aaa
push
cmpsl
pusha
xchg
sbb
jno
mov
mov
out
or
lcall
aad
inc
jnp
les
out
sub
rcr
jae
es
pop
nop
daa
dec
vaddpd
adc
insl
push
pop
in
mov
pop
fwait
jle
dec
inc
rcll
xchg
test
ficompl
out
loope
cmp
adc
lahf
push
mov
mov
sbb
ss
arpl
sbb
cmp
xor
outsl
loop
ss
aad
das
fwait
aas
sub
outsb
into
divl
adc
sub
mov
xchg
in
dec
or
mov
aam
push
out
lcall
mov
xchg
xchg
adc
adcb
js
cld
push
cmp
dec
hlt
push
adc
mov
fmull
in
enter
inc
cs
cmp
fldt
jge
inc
pusha
stc
push
insl
clc
pushf
sub
or
sbb
cmpsl
or
mov
fcmovu
dec
dec
mov
arpl
fld
outsl
enter
flds
rorl
xchg
bound
jmp
sub
add
pop
cmp
adc
inc
inc
pop
cmp
mov
hlt
add
jo
lds
cmpl
jl
adc
fstl
and
xor
mov
sbb
adc
loopne
lcall
out
ret
cwtl
dec
adc
jbe
sarb
sub
pop
add
add
icebp
daa
clc
ret
aad
mov
inc
popa
into
in
mov
push
mov
or
sub
jne
or
ja
pop
mov
xchg
lcall
or
daa
scas
test
cmp
mov
aad
clc
or
adc
cmp
push
sbb
and
add
xchg
inc
push
push
xor
cmpsb
movsb
call
adc
or
lock
sbb
int3
xor
pop
lcall
and
add
fadds
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
adc
scas
jp
jle
jl,pt
jle
nop
fmull
fistpl
xor
mov
ja
inc
mov
repz
xchg
adcl
mov
pushf
pop
je
xor
rcll
push
fcompl
gs
das
push
add
addr16
popa
imul
push
adc
sub
jo
mov
sar
inc
hlt
push
dec
xchg
aam
mov
mov
jnp
lods
in
cmp
sahf
sahf
mov
mov
stc
xchg
in
push
fadds
pop
leave
ljmp
mov
les
aad
mov
dec
addb
add
xor
insl
rcrb
push
lea
jg
clc
sub
int
dec
add
dec
clc
lods
jg
mov
add
std
mov
pop
fdivrs
fisttps
nop
mov
stos
repnz
inc
test
into
pop
inc
es
fsubrl
es
push
inc
adc
inc
push
notl
ret
push
lds
push
or
pop
es
js
jne
mov
lock
nop
or
sbb
mov
cmpsl
push
jmp
outsl
dec
cld
xchg
jo
mov
xchg
fstpt
popf
mov
in
push
fcmovb
fists
lock
fmul
mov
cmp
callw
daa
xor
fwait
pop
not
sarl
cmp
js
sub
bound
lds
loop
subl
push
xor
popf
pop
addr16
mov
rol
jo
js
cwtl
and
decl
scas
xor
sub
ret
xlat
lret
std
js
or
fidivl
fsubrl
dec
sub
push
inc
jle
cli
mov
pop
popf
nop
jb
mov
mov
pusha
push
aam
add
testb
mov
imulb
ja
fisttpll
push
inc
insb
mov
sbb
mov
repz
fldpi
xchg
and
int
inc
out
mov
cmp
cltd
xchg
cmpsl
mov
lahf
insl
push
arpl
dec
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
std
adc
jle
jl
jle
inc
movl
mov
jns
jle
ljmp
cmp
sub
fnstcw
fsubs
adc
fwait
cmp
mov
sbb
push
ss
mov
and
faddl
pop
ljmp
mov
mov
mov
or
in
push
shl
adc
test
mov
lock
mov
mov
xchg
jae
ret
mov
mov
jecxz
jb
push
jecxz
dec
aam
dec
pop
stc
mov
cwtl
adcl
push
sub
dec
repnz
ret
and
cmpsl
dec
adc
mov
int3
push
push
sarb
repz
xor
into
push
push
stc
push
das
das
js
aam
push
jmp
sbb
sbbb
ud2
bnd
out
xlat
mov
pop
cmp
push
pusha
into
scas
lret
mov
push
sub
ljmp
or
sar
and
sub
sarl
mov
xor
jno
lods
iret
adc
or
bound
sub
inc
mov
frstor
nop
popa
and
push
inc
test
cmp
or
or
xchg
fcomi
fucomip
xchg
cmp
sub
in
iret
cld
and
xor
add
cmp
stos
leave
dec
lahf
and
jmp
leave
xchg
xchg
pop
jae
pushf
cmp
jge
mov
cld
sub
mov
fdivrs
sbb
sbb
pop
enter
mov
mov
lret
xchg
mov
and
add
cmpsl
daa
dec
lret
mov
icebp
out
cmp
ret
dec
pop
lds
movsl
mov
add
cmp
and
push
xor
sbb
imul
push
jae
sub
ljmp
pop
mov
fwait
call
inc
outsl
xlat
aas
add
cs
les
mov
jb,pt
and
cltd
cld
into
sbb
sahf
loope
insb
or
pop
loop
std
mov
mov
mov
or
mov
addb
add
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
les
lds
jp
outsl
push
sub
mov
movsb
pop
cmpsl
int
pop
dec
insl
or
and
fcmovnb
and
or
push
xchg
subb
imul
test
shr
push
cld
xchg
mov
enter
lea
xchg
inc
out
ljmp
rclb
xchg
std
push
and
and
fcoml
test
dec
test
and
leave
sbb
cmp
push
jl
fiadds
das
outsb
mov
test
mov
xor
js
call
outsb
push
fisttpl
stos
psrlw
enter
stos
pop
xor
pop
into
loop
jp
pop
mov
rolb
scas
inc
mov
lret
mov
lods
jne
and
pop
pusha
pop
adc
cwtl
jo
fstl
lods
cld
data16
clc
lock
adc
ret
jno
cmp
aam
les
pushf
add
pop
popf
in
inc
das
sbb
jmp
push
je
outsb
test
mov
and
lods
cmp
mov
movsb
mov
jge
sbb
imul
lcall
and
int3
xchg
xor
lods
cmpsl
cmpsl
test
dec
or
cmpsb
cmp
xchg
shrb
loope
cs
sbb
cld
cwtl
cmp
test
in
pop
xor
insb
xor
mov
push
inc
adc
jecxz
xor
outsl
clc
das
jge
jo
pop
inc
sbb
outsb
inc
jnp
out
aad
shlb
mov
fwait
pop
outsl
enter
mov
mov
pop
xchg
push
repz
or
adc
mov
sub
ljmp
faddl
add
cmp
mov
jns
jne
test
mov
sbb
shll
push
stos
or
movsl
ficoms
inc
mov
sbb
jmp
daa
cmpsb
push
out
fsubr
push
mov
in
cmp
lods
dec
adc
dec
addr16
jnp
popa
in
mov
aaa
cmc
mov
or
fwait
pop
dec
repz
mulb
out
fstpt
and
mov
jl
mov
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
neg
stos
push
in
pushf
jle
adc
jle
jbe
xchg
xor
stos
mov
mov
mov
dec
adc
stos
ret
arpl
sub
lcall
push
ror
jo
push
lods
lret
addr16
ja
out
stos
cmpsb
or
inc
or
popl
xor
out
lret
pop
mov
fmulp
adc
xchg
cbtw
push
pop
mov
mov
adc
sub
and
xor
cmp
pop
or
int
or
pushf
pop
cmp
lret
mov
xchg
pop
cmp
inc
add
and
xor
cmp
push
jmp
fdivl
adc
mulb
pop
imul
hlt
jb
or
sbbl
loop
xor
jb
pop
aad
push
sbb
imul
cmp
lret
rcrl
lea
cmp
subb
jge
ret
movb
jge
push
sub
cmp
xchg
jle
mov
jb
adc
jo
add
or
add
subl
push
or
mov
jmp
cmp
shll
xor
stos
cmp
shlb
adc
jle
pop
movsl
cmp
push
push
je
aam
cmpsl
sbb
jl
lcall
push
fisttpll
xchg
cmc
push
lret
pop
adc
into
inc
mov
sti
sbb
jae
cwtl
fiaddl
xchg
inc
lret
dec
stos
jg
xor
scas
outsl
and
test
push
inc
test
xor
mov
lret
mov
or
jmp
insl
push
ret
lea
rclb
in
mov
and
sub
out
out
dec
push
dec
divb
idivl
aas
outsl
in
push
jp
orl
cmp
push
popf
sbb
arpl
mov
pop
add
out
pop
and
loope
mov
inc
adc
mov
ret
loopne
lcall
dec
cmc
mov
out
loop
cwtl
dec
fldlg2
insb
add
lcall
pop
add
orb
and
imul
aas
inc
jns
fbstp
fistps
xchg
std
in
ja
xchg
std
into
push
fstpt
cmpsl
add
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
or
aas
jb
jle
adc
jle
jmp
popf
fcoml
push
lods
bound
mov
xor
xor
dec
insl
sbb
xchg
pop
push
jg
pusha
inc
loopne
lahf
stc
mov
push
sbb
lea
in
or
mov
out
lret
push
clc
mov
pop
testl
or
and
pop
mov
sti
out
xchg
test
mov
test
mov
stos
imul
pop
out
outsl
aad
mov
aam
xchg
push
adc
push
hlt
in
jo
shlb
mov
fmuls
mov
repz
popl
adc
dec
stos
push
mov
sbb
and
mov
mov
repnz
adc
mov
inc
outsl
add
gs
adc
xor
insl
pop
lret
mov
mov
mov
call
call
mov
or
push
xchg
ret
dec
sbb
mov
mov
lcall
testb
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
nop
mov
jle
adc
jle
mov
mov
cmp
push
out
dec
push
lret
pop
dec
jg
lret
in
pop
push
outsb
push
mov
add
rolb
ret
push
push
mov
fsubrl
sahf
out
dec
push
int3
cmpsl
push
pop
mov
xchg
daa
sub
cld
cmp
xor
mov
jnp
stos
xor
or
mov
loop
mov
loop
test
lea
icebp
adc
aam
fwait
sbb
pop
int
xor
mov
rcl
lret
fisubl
mov
rcrl
cmpsb
and
xchg
pop
mov
shll
lahf
int
or
xchg
mov
add
nop
stc
mov
inc
add
inc
outsl
inc
jmp
push
jae
ss
ret
push
nop
ljmp
adc
stos
jo
xor
scas
fsub
and
sbb
and
pop
dec
push
pop
mov
mov
test
sbb
inc
hlt
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
mov
jle
adc
jle
sbb
jo
in
pop
pop
ret
test
add
fdivrl
lea
push
xchg
xchg
push
scas
in
std
push
inc
push
mov
leave
scas
lret
rolb
inc
pop
popa
sub
fs
and
addr16
movsb
xchg
mov
out
dec
xchg
xchg
push
divb
stc
call
gs
popf
loope
push
loopne
xlat
aas
inc
add
cmp
mov
stc
cmp
adc
push
xor
stos
dec
or
add
xlat
fdiv
popa
sub
sbb
xor
rclb
repz
mov
js
push
pop
jmp
or
std
enter
fisttpll
mov
adc
sbb
cmp
rcrb
sbb
lock
nop
push
mov
ficoms
out
orb
cmp
pmullw
ret
dec
mov
jle
shl
cmpsl
sub
sbb
and
push
sub
pop
add
std
scas
push
cmpb
mov
cmc
dec
imul
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
icebp
xchg
in
push
or
and
and
loope
in
cmp
push
lcall
pusha
hlt
xchg
xor
mov
cld
dec
pop
aas
sbb
fistpll
clc
sbb
mov
dec
ficoml
jge
cld
loopne
xchg
push
ret
cld
aad
ss
push
ja
mov
jns
cmpsl
jno
or
xchg
insb
sub
push
movsb
inc
mov
insb
fxch
sub
sbb
leave
inc
jmp
mov
js
mov
add
fxch
pop
rcll
push
ficompl
sub
std
mov
add
inc
or
ficoml
out
mov
jbe
movsl
sub
inc
out
sub
xchg
pop
xor
test
xor
nop
subl
push
stos
push
mov
pusha
xor
test
imul
jbe
mov
loop
sub
mov
decl
outsb
int3
sub
sub
jmp
inc
cld
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
mov
jle
adc
jle
or
mov
xchg
jbe
mov
lret
mov
jno
add
cli
popa
push
dec
push
ret
mov
push
lret
lahf
push
and
pusha
imul
add
mov
jne
mov
outsb
jno
lcall
cli
not
mov
xor
cltd
jle
int
fs
jno
mov
mov
dec
pop
addr16
pop
add
add
add
ljmp
xchg
jge
push
dec
pop
jp
out
stos
cmc
insb
push
into
outsb
cmpsl
les
add
xchg
inc
js
popa
sti
cmp
pop
test
bnd
out
and
je
and
sub
pop
add
pop
jecxz
test
mov
dec
xchg
cld
dec
shrb
mov
ret
add
int3
leave
pop
xchg
and
add
test
inc
and
xlat
sub
int3
hlt
int
popl
adc
jae
dec
xchg
mov
dec
sub
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
outsb
xchg
jle
jno
popa
xchg
mov
xchg
dec
scas
add
cmp
mov
mov
lods
ljmp
repnz
sub
cltd
mov
iret
out
daa
or
adc
jae
loopne
scas
push
mov
sub
mov
lods
scas
jp
jbe
lahf
jge
add
pop
rcll
test
loopne
xchg
xor
sbb
cmpl
andb
and
andb
add
in
jecxz
pop
push
and
mov
mov
in
cmp
mov
es
jle
ret
out
or
imul
mov
movb
push
int
repnz
push
out
and
add
nop
mov
xchg
jle
push
mov
in
add
mov
pop
sti
inc
lods
pusha
xor
rorl
cmp
push
add
mov
jno
xchg
les
sbb
mov
test
and
fsubs
ret
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
mov
jg
jle
add
addl
sbb
dec
cltd
pop
xchg
in
js
dec
int3
mov
aas
sti
aam
pop
adc
inc
or
lahf
pop
lret
inc
lea
jb
jg
jp
lret
test
loop
inc
outsb
lret
dec
inc
mov
popf
loope
scas
jb
cli
push
ds
inc
mov
jle
jbe
or
xchg
outsb
in
add
imul
sub
clc
xor
fisttps
push
loop
jmp
dec
pop
mov
repnz
jmp
pop
test
xor
jg
sub
fbstp
adc
push
push
mov
out
enter
scas
repz
xchg
pop
sbb
xchg
xchg
xorl
push
xor
add
enter
add
xchg
push
es
in
pusha
adc
mov
aaa
mov
movsb
or
rcrl
fs
or
fisttpll
cli
push
adc
ja
icebp
jl
lods
pop
mov
test
sub
pop
mov
jp
ret
push
pop
push
add
cmc
movsb
imul
clc
jns
mov
push
dec
push
adc
push
loop
or
icebp
push
and
mov
dec
jns
in
push
rolb
mov
mov
adc
push
scas
add
shlb
add
aaa
add
lods
dec
jmp
fstp
jae
fildll
adc
out
gs
adc
or
daa
push
or
and
xor
mov
mov
xchg
push
sarl
jo
cmc
push
je
addr16
lods
fwait
pop
sbb
push
mov
add
inc
std
mov
sbb
adc
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
inc
insl
fcomps
mov
and
inc
push
ja
out
nop
call
mov
mov
push
xchg
test
xor
fdivrs
test
or
lret
and
and
push
jnp
mov
pop
ret
sub
mov
lock
inc
adc
push
mov
xor
insb
mov
ljmp
loopne
push
xchg
in
sub
cli
jle
xchg
shl
daa
test
dec
xor
and
add
lahf
push
fnstcw
push
fmull
shrb
mov
xor
mov
or
out
filds
int3
jge
imul
lret
mov
movsb
mov
addr16
rcll
cmpsl
xchg
pop
addr16
sahf
fidivrs
arpl
test
loopne
sub
vshufps
mov
inc
lea
adc
pop
mov
outsl
mov
or
aaa
adc
movsb
xchg
lds
mov
pop
jno
dec
pushf
test
leave
add
scas
popf
or
mov
sub
jp
sti
jge
dec
cmp
repnz
xor
jecxz
lods
loopne
movsb
push
pop
in
testl
shlb
fisttpl
push
add
xor
xor
mulb
and
push
sar
cmp
ret
cs
cld
sti
dec
adc
int3
mov
xchg
jns
inc
and
je
sub
data16
cwtl
jmp
and
and
and
addr16
xor
ret
repz
in
cmpsl
jae
mov
xlat
cmp
pop
mov
xchg
dec
dec
clc
jnp
stc
mov
xchg
mov
inc
fstpl
shrl
inc
or
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
cmp
mov
jle
jle
add
fdivs
imul
nop
xlat
sbb
jl
sarl
mov
iret
add
nop
jl
sti
pushf
mov
dec
icebp
sarl
fistpll
sbb
xor
mov
jl
mov
mov
inc
popf
mov
jmp
or
movsl
lcall
inc
or
inc
imul
in
subb
imul
pop
shlb
xor
and
push
mov
jns
movl
xchg
dec
leave
dec
xor
rcrl
and
cmp
leave
lahf
xchg
int
and
sub
add
js
fildl
cmp
push
ljmp
mov
adcb
cmp
scas
dec
das
jns
jb
sub
or
push
in
inc
sarb
sub
aas
into
jp
cmpsl
iret
addr16
dec
jno
xchg
mov
xlat
daa
stc
mov
movsb
sbb
sbb
das
cmc
imul
sbb
fistpll
inc
mov
fadd
push
add
pushf
or
out
hlt
lret
mov
sbb
xchg
pop
sbb
or
add
adc
add
mov
popa
stc
stos
outsb
cmp
cmp
add
jle
xchg
sub
addr16
lods
cli
jmp
mov
xor
insb
mov
jno
jg
movsl
popf
push
push
mov
mov
add
sahf
inc
leave
jb
outsl
sbb
sbb
cmpsb
push
pop
daa
mov
sbb
outsb
gs
call
cld
ja
popa
repz
nop
or
cs
loopne
cmpsl
shlb
mov
xchg
lret
ret
xchg
in
testb
mov
sub
pop
cmpsl
or
inc
popa
cmp
subl
scas
or
js
lcall
stc
push
rorb
cmp
ds
sbb
xor
icebp
fs
adc
cmpsl
stos
call
rol
fisubrl
jecxz
les
shrb
icebp
dec
rcrl
ficoms
cmp
xor
ljmp
jae
mov
inc
stc
mov
call
leave
adc
mull
cmp
xchg
fcmovu
push
cmp
shlb
add
test
sbbb
mov
or
jecxz
bound
mov
and
cmpsl
pop
hlt
add
inc
das
mov
adc
xor
repnz
dec
jg
loop
lret
inc
andb
imul
push
ds
jne
mov
int3
out
or
mov
cmp
jmp
loope
xor
daa
cmp
add
add
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
enter
jle
jge
jle
mov
ret
cmc
pop
daa
mov
stos
dec
mov
push
sub
push
testb
jnp
mov
add
rcrb
fs
je
inc
cmp
mov
test
scas
lahf
pop
fisubl
and
ss
out
lret
pop
imul
insl
push
jl
pop
sub
sti
fmuls
dec
push
xchg
jg
dec
ja
xchg
repnz
popf
add
inc
arpl
push
push
lods
sbb
xchg
sbb
sarb
cmp
or
inc
or
lcall
test
cmp
fdivrs
imul
iret
mov
mov
inc
stos
mov
xor
adc
dec
cmp
push
jmp
out
aam
out
in
add
and
mov
scas
xchg
mov
cmp
stc
sub
dec
adcb
repz
pop
cld
dec
push
int
cmc
and
jb
cmp
loopne
stos
xchg
xchg
jns
fcoml
xor
jbe
adc
xorl
cmpl
les
pop
test
in
inc
or
and
in
loop
xchg
jecxz
xchg
daa
pop
mov
jmp
fdivr
and
divl
call
add
lds
pop
loop
inc
leave
sbb
les
add
lahf
in
test
out
lods
in
bnd
sub
out
mov
pop
enter
sbb
sar
cltd
popa
dec
jns
cmc
jno
test
mov
push
out
fptan
loop
sti
push
mov
xchg
jmp
pop
xchg
cmpsb
addr16
incb
lahf
pop
pop
ds
xchg
cld
or
xor
adc
jno
mov
incb
scas
mov
push
push
cmp
paddw
sub
inc
and
aad
cmp
ficomps
and
inc
cmpsl
leave
fnstcw
sub
lock
push
xchg
arpl
ret
lea
push
sub
imul
rclb
mov
pop
inc
xor
dec
shrb
adc
mov
ficoms
and
dec
mov
sub
loop
cmpsb
pop
xchg
pop
fadds
das
das
lea
add
inc
das
mov
lret
popl
stos
mov
or
and
neg
cmp
mov
arpl
pop
sub
insl
jecxz
leave
jg
or
mov
add
fsubrp
pop
lret
fistl
ja
lock
andb
mov
jmp
cmp
fdivrs
mov
jecxz
in
popa
xchg
jns
push
pop
fwait
and
mov
fwait
mov
mov
into
jle
cmpsl
fcomip
mov
gs
out
inc
mov
pop
out
lahf
xor
fisttpll
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
add
stos
jle
jl
jle
mov
outsb
fsub
insl
sbb
sbb
imul
out
in
inc
cmc
in
xchg
mov
inc
pop
mov
cmpb
xor
jg
rcll
jmp
push
jns
xchg
jo
pop
xchg
lods
mov
sub
loope
mov
cli
and
sub
ret
popf
and
fistl
cmpsl
loop
cmpsl
shrb
arpl
enter
push
sbb
mov
mov
sbb
scas
mov
in
mov
jl
or
in
sti
pop
sahf
pop
pushf
add
rorb
or
ret
lock
addl
mov
dec
adcb
dec
jbe
addb
cltd
xor
pop
adc
fs
push
sbb
xchg
mov
ret
mov
mov
dec
sbb
push
cs
mov
sbb
jnp
or
addr16
in
out
xor
sub
lods
add
clc
mov
incl
add
sarl
add
adc
mov
sbb
lea
and
fs
mov
mov
mov
std
in
out
push
mov
xchg
lods
mov
and
aas
mov
and
in
mov
mov
das
dec
cmpsb
inc
int
les
cmp
insl
adc
cmpsb
jge
sub
mov
mov
aam
cwtl
dec
pop
pusha
jnp
inc
call
sub
xchg
pop
lock
sub
mov
jg
pop
inc
into
jp
cmp
fstl
test
imul
sbb
cmp
ret
or
movsl
outsl
xchg
push
sbb
dec
xchg
cmp
jnp
test
fs
fsubs
pop
lea
jecxz
daa
repz
mov
movsb
pop
sub
adc
les
xor
adc
in
popa
arpl
icebp
mov
repz
out
sbb
aaa
pop
insl
push
pop
fmull
sahf
enter
adc
ss
int
mov
mov
push
imul
orb
mov
ds
inc
jne
jl
xchg
int3
and
cmpsl
enter
data16
xchg
fimuls
mov
out
shll
add
pop
movsl
jmp
push
sbbb
mov
addr16
fbld
pop
or
cmpsl
fwait
outsl
dec
push
xor
clc
daa
js
jb
pop
pop
in
stos
scas
nop
cld
popf
pop
pop
fisttpll
adc
arpl
jb
hlt
shrb
sbb
dec
fisttpll
add
dec
add
inc
mov
jge
jb
dec
lcall
mov
les
scas
lds
aaa
pushf
xor
or
push
int3
rol
dec
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
push
inc
test
mov
jle
jge
jle
sarb
mov
ss
stos
inc
arpl
sbb
insb
sub
ss
jl
add
jns
adc
adc
sub
pop
sbb
movb
jle
testb
lret
xchg
adc
inc
test
mov
mov
add
or
jnp
pop
rol
es
sarl
push
out
adc
ja
insl
sub
sbb
mov
aaa
sbb
in
in
cli
ss
fdivl
cld
cmp
xchg
pusha
sbb
xchg
pop
push
daa
scas
or
sbb
mov
xlat
push
hlt
cmp
iret
aam
clc
ljmp
test
fs
lea
imul
add
stc
inc
xor
push
daa
test
mov
inc
pop
data16
jg
mov
leave
clc
cmp
popa
push
imulb
pop
push
sahf
or
shlb
addr16
push
call
xlat
insb
jecxz
popl
pop
fidivrl
outsl
int3
sti
mov
push
cmpsb
movsl
jae
inc
push
pop
mov
inc
int
ljmp
in
rclb
ss
push
mov
and
popa
add
cli
out
lret
sbb
inc
sti
dec
insl
fimull
or
sub
pop
lea
shrb
fisttps
jecxz
scas
mov
sub
pop
imul
stc
xlat
mov
xchg
mov
shlb
in
jbe
addr16
rcrb
jno
cmp
cmpsb
inc
js
sarl
shl
das
pop
nop
sub
xchg
mov
inc
movsl
stos
sub
aad
lods
cmp
inc
jb
gs
ja
sub
gs
into
pusha
leave
les
cmp
dec
add
xchg
sub
lods
xor
cmp
popa
add
xchg
xchg
int3
sub
rcl
gs
mov
idiv
out
add
lret
mov
aaa
jg
pop
mov
leave
jo
dec
jl
imul
pop
mov
addb
notl
fsubl
sbb
pushf
daa
mov
fcompl
lds
push
arpl
and
mov
pop
sub
mulb
push
std
loop
jbe
es
dec
aas
into
inc
rolb
das
inc
mov
andb
iret
ja
jecxz
mov
outsb
in
stos
lock
jecxz
push
mov
out
test
xchg
btr
sbb
sbb
fsubs
inc
insb
pushf
mov
or
push
xchg
aam
ss
insl
outsl
aam
add
icebp
mov
lock
adc
cmp
add
aad
leave
mov
mov
iret
int
mov
xor
sti
std
iret
imul
pop
xlat
mov
mov
xor
mov
jmp
or
pop
jno
xchg
add
pop
inc
fidivs
jle
lret
ret
imull
xor
test
mov
stos
inc
jecxz
mov
mov
mov
not
inc
ret
fyl2xp1
mov
add
andb
subb
add
pop
pushf
inc
xor
in
scas
lahf
and
or
sub
sbb
mov
stos
inc
xchg
imul
fdivrs
aad
outsl
sub
loope
and
jle
cmp
fidivrs
lods
xor
outsl
jle
movsl
dec
cmp
push
mov
push
sbb
inc
mov
mov
mov
cmp
sbb
popa
xchg
inc
xchg
mov
cmpsb
inc
push
dec
cmp
lea
or
movsb
je
test
add
into
pusha
adc
in
xchg
ficoms
push
std
rolb
inc
dec
mov
idivl
sbb
cmp
in
ds
and
xchg
lahf
fidivs
add
scas
out
push
fldenv
mov
jle
xchg
aam
mov
mov
arpl
xchg
or
pop
test
mov
pop
pop
and
idivl
lock
sub
adc
icebp
jge
leave
mov
fisubrl
inc
dec
les
xchg
mov
dec
sbb
sbb
test
pusha
icebp
push
lret
inc
into
mov
mov
push
xchg
mov
pushf
insl
cmp
and
inc
xor
sbb
cmp
push
scas
sahf
jbe
inc
or
fs
fmull
loop
sub
out
jecxz
add
out
dec
and
mov
pop
stos
aam
jle
xchg
push
jecxz
scas
lods
mov
jno
test
sub
lcall
xchg
mov
cld
or
out
or
mov
popa
jns
fstl
xor
out
loope
mov
outsl
decb
xor
imul
fucomi
insb
mov
rclb
popf
add
js
cltd
jp
aaa
lock
pushf
pop
movsl
cwtl
dec
sbb
mov
mov
imul
cmp
adc
clc
adc
sti
mov
mov
sti
or
push
or
jecxz
int3
cmp
xchg
lcall
inc
leave
xchg
out
out
js
repz
rolb
es
jae
test
je
dec
imul
add
mov
add
xchg
frstor
mov
xor
mov
add
adc
cmp
xchg
cld
xor
cmp
xchg
cmp
dec
push
addl
add
and
jp
cmpb
aaa
ficoms
dec
push
jmp
test
lds
icebp
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
sarl
fdivl
jle
add
jecxz
jmp
add
or
clc
mov
sbb
mov
int3
pushf
lods
inc
in
loope
daa
test
xchg
sbb
push
lds
ret
negb
sti
in
pop
xchg
add
fidivs
data16
sbb
mov
sub
loop
enter
dec
sub
mov
mov
jno
xchg
into
je
sub
fcomps
gs
scas
inc
scas
push
cmp
sub
mov
mov
repnz
jbe
mov
std
int
ret
outsb
cmpsl
cmp
mov
or
fcmovnb
inc
mov
and
jne
jl
mov
push
imul
subb
lods
inc
xchg
enter
test
and
or
jle
fsub
addl
clc
add
mov
push
dec
mov
scas
js
add
rol
fisttpll
xchg
xlat
sti
enter
pop
fsub
outsl
movb
dec
jecxz
push
sbb
jo
push
jecxz
xchg
fdivrs
into
out
in
fimull
out
mov
jo
test
call
push
shr
pop
add
out
fbstp
dec
lcall
jnp
outsl
mov
rol
or
cmp
jb
cli
push
in
jo
lds
inc
daa
into
mov
mov
out
scas
cs
popa
inc
hlt
lods
cli
mov
inc
xchg
pushf
sub
cmpsl
mov
je
inc
mov
cs
insl
xchg
ss
popl
lock
icebp
push
movsl
jbe
and
mov
fs
shll
call
fimull
push
outsl
adc
rol
out
pop
xchg
std
mov
sbb
test
sbb
int
mov
jnp
jo
jbe
mov
and
inc
enter
fs
mov
dec
xchg
clc
gs
cli
xor
into
cmpsb
scas
cmpsb
das
mov
dec
sbb
outsl
loope
cmp
jns
out
jno
notl
push
push
add
repnz
aaa
pop
jne
cmp
sti
mov
inc
testb
mov
test
popf
outsb
pop
test
adc
imul
jno
jmp
inc
jecxz
xchg
mov
gs
jle
nop
sbb
cmp
mov
sarl
fcoml
nop
popf
and
mov
sbb
adc
sahf
inc
push
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
sbb
or
aam
lret
fadds
fxam
adc
lcall
lahf
sub
jne
mov
out
fisubl
addl
dec
mov
or
imul
mov
or
stos
sahf
pushf
mov
movb
inc
fwait
dec
jae
std
stc
dec
lahf
divps
insb
xchg
jo
mov
test
aam
push
dec
push
inc
cld
dec
loopne
sub
sbb
jns
aaa
or
sar
push
jbe
movsl
or
sti
inc
outsb
add
xor
push
mov
pop
aas
jbe
shrb
or
and
subb
push
xor
inc
iret
add
mov
xor
jns
mov
xor
rorb
inc
repz
test
mov
scas
or
xchg
mov
sub
inc
dec
xchg
mov
jge
push
in
and
mov
lret
into
xor
ljmp
xchg
sbb
dec
xor
pop
insl
mov
fadds
jle
imul
cmp
insb
leave
dec
fwait
mov
mov
fildl
out
xor
ret
adc
dec
cld
in
inc
ficoml
sub
mov
repnz
mov
sti
shl
push
jmp
scas
lcall
sahf
and
cmp
cmp
or
xor
jne
movsl
sub
popf
mov
xlat
lret
fs
xor
in
and
insb
adc
fdecstp
stos
mov
add
mov
lret
out
movl
jl
enter
push
xor
cmp
xchg
fisttps
cmc
stc
mov
mov
pop
jo
sbb
fcomip
dec
js
inc
mov
outsl
cld
scas
les
sbb
adc
outsl
movsl
adcl
pop
daa
and
inc
adc
dec
jl
je
arpl
xor
je
push
je
scas
sbb
xor
and
sub
sbb
test
or
std
mov
adc
std
hlt
rol
jmp
or
xor
aad
jns
popa
cli
hlt
mov
mov
iret
adc
daa
jmp
jmp
in
push
js
pop
pop
repnz
call
int
test
fwait
arpl
sahf
repnz
cli
adc
jmp
add
nop
push
mov
xchg
push
movsb
das
dec
sub
mov
ljmp
shrl
fnstsw
dec
mov
add
jmp
add
fdivl
lock
xchg
pop
fcoml
jle
scas
jl
jle
je
mov
ja
incb
mov
fmul
addr16
cmp
inc
xor
mov
cmp
sbb
into
cs
ret
cmp
jnp
lods
subb
pop
sub
retw
sub
xchg
or
mov
mov
push
cmpsb
cld
xchg
mov
dec
mov
incb
rcr
sti
cld
call
mov
xor
cmp
aaa
rclb
or
rcrb
inc
pop
adc
shlb
sub
test
ret
adc
ss
push
push
dec
mov
lcall
push
shrl
test
dec
rol
sub
cmp
adc
sbb
psubb
daa
aas
rcl
and
xor
test
cmp
dec
or
sub
xchg
xor
pop
add
adcb
cmp
jle
push
jle
lret
cmp
mov
stos
stc
inc
cltd
in
jbe
adc
mov
fs
cli
or
jo,pt
fs
push
mov
in
jo
loopne
cmc
mov
mov
jnp
ret
mov
cmpsl
jb
mov
int
fimull
xchg
add
popa
jecxz
lea
cmpsb
sti
push
sbbl
testl
movsl
inc
xor
fdivrl
shll
mov
or
hlt
jle
sbb
xchg
mov
sub
mov
jmp
xchg
lock
pushf
fistps
xor
mov
lods
inc
sub
loopne
sub
and
cmc
mov
adc
or
sub
popa
in
ret
pop
mov
sahf
aas
mov
add
aam
das
out
inc
stos
inc
or
fnstenv
setg
or
xlat
or
sub
test
inc
stos
stos
xor
xchg
imul
push
addr16
aas
push
rorb
in
ret
cmp
sbb
ret
stc
lods
mov
enter
mov
sub
or
es
mov
dec
sbb
push
inc
add
outsw
in
aam
int3
fsubrs
leave
and
enter
insl
and
cmp
mov
push
dec
dec
adc
add
xor
sub
outsl
cmp
into
scas
in
push
lret
addl
cmc
mov
mulb
mov
jp
sub
rclb
push
lds
adc
pop
or
hlt
movsl
and
adc
es
dec
mov
mov
mov
jmp
je
push
push
lock
outsb
dec
mov
hlt
jmp
jle
scas
jl
jle
into
int
std
mov
xor
add
repz
popf
xor
xchg
inc
sbb
packsswb
and
xchg
xchg
push
mov
xchg
jno
jo
clc
je
dec
imul
mov
cmpsl
mov
cs
push
inc
lds
xor
rcrb
mov
mov
cld
push
in
xor
and
sarl
adc
cmovl
test
rorl
or
or
and
scas
mov
movsb
sbb
mov
insb
ret
leave
mov
fnsave
jnp
add
mov
jp
orl
movsl
pushf
faddl
loopne
mov
cwtl
aad
adc
cmp
cwtl
pop
push
xchg
into
jecxz
arpl
mov
xchg
mov
push
pop
insl
mov
push
jno
cmp
out
stc
sub
push
repnz
hlt
fnstenv
and
mov
and
pop
fcomip
and
push
pop
fwait
or
test
xchg
xorl
imul
push
jle
outsb
mov
arpl
cli
lahf
xor
cmp
fimuls
pop
xchg
push
inc
xor
xor
add
ret
out
lods
mov
cltd
mov
dec
cmpb
inc
xor
js
mov
in
xchg
xorb
xchg
pop
adc
pop
rclb
cmp
mov
out
popf
mov
ds
cmpsl
dec
add
dec
stc
push
add
push
movsl
rorl
xor
push
mov
cmp
shlb
int3
out
xchg
and
and
rcrl
scas
leave
pop
pop
movsb
hlt
ror
or
lret
inc
cltd
push
sub
pop
popf
sub
dec
xor
cwtl
xchg
mov
and
xchg
sti
cmc
push
pop
ss
or
mov
xchg
lods
xchg
lea
cli
inc
cmc
xor
je
mov
mov
mov
inc
mov
xor
call
jo
arpl
orl
sub
mov
popa
adc
in
int
or
lahf
xor
enter
sub
push
push
inc
push
scas
or
xchg
rcll
icebp
xor
push
mov
gs
adc
std
inc
mov
add
lcall
test
mov
stos
sub
cmpsb
pop
pop
mov
repnz
jmp
rclb
and
cmpsl
cmp
inc
xchg
sub
roll
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
scas
dec
lcall
inc
jle
scas
jl
jle
pop
hlt
aad
cmp
jae
cmp
pop
in
repnz
jae
test
decl
pop
dec
mov
xchg
sub
outsb
out
fcompl
cmp
loop
ss
fcompl
inc
mov
gs
pop
lret
add
jle
movsl
arpl
in
mov
lock
popa
cs
mov
sbb
mov
push
sub
and
jae
aam
aas
frndint
jge
mov
lcall
pop
pop
or
bound
xor
loopnew
or
mov
dec
loope
sbb
mov
dec
subl
ret
ja
inc
jmp
sub
and
jmp
sti
mov
and
aam
add
or
cmp
push
dec
dec
cmc
jle
incb
add
lea
inc
add
int
and
ret
mov
xchg
cmp
sti
cmp
pop
adcl
and
xchg
or
and
outsb
sbb
fs
jge
xor
sub
test
loopne
sbb
jb
in
std
cli
es
and
mov
incb
mov
orl
icebp
mov
inc
mov
ds
inc
adc
jae
add
cmp
inc
add
orl
sbb
push
stos
pop
popa
jbe
dec
es
sbb
nop
test
sbbl
adc
cmp
cltd
adc
push
cld
int3
sti
mov
stos
dec
mov
sahf
xchg
ret
cmp
mov
popf
vpbroadcastd
pop
int
inc
cltd
inc
pop
mov
pop
movnti
cmp
js
mov
outsl
imul
jge
and
add
jae
mov
int
pop
mov
cli
rcll
add
subl
roll
bound
mov
div
jb
fcom
icebp
test
mov
jns
loope
in
fs
cwtl
stos
pop
push
xor
fisubrs
pop
jnp
jnp
call
ss
inc
enter
daa
and
aas
in
out
jge
data16
dec
rcr
xchg
or
movsb
cmp
das
sbb
mov
out
push
sub
cmp
add
sub
fisubrl
cmp
sub
push
test
sbb
sbb
scas
jp
inc
push
ficoms
or
cmc
scas
jle
pop
cmp
jne
sbb
push
imul
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
lds
dec
inc
jle
scas
jl
jle
mov
jle
icebp
or
adc
fldt
dec
cmp
and
xchg
cmp
dec
ljmp
mov
sbb
dec
mov
pop
ja
push
mov
xchg
test
mov
lea
add
mov
aaa
test
jb
mov
or
in
nop
pop
xor
in
ficomps
loop
fisttpl
scas
lock
push
or
cmp
test
xlat
aad
or
or
inc
push
idivb
aaa
sbb
clc
xchg
xor
mov
mov
adc
std
ret
ljmp
shll
xor
call
push
outsb
xchg
mov
repnz
mov
and
cmp
inc
push
dec
or
stc
lahf
mov
xorb
dec
xor
es
jle
inc
cmp
pop
mov
mov
sub
leave
jp
jge
lods
cmp
lods
inc
dec
jecxz
data16
fwait
js
xorb
jb
mov
push
insl
dec
inc
add
call
fidivrl
jp
fisttpl
push
xchg
inc
cmp
rcr
xor
inc
xchg
xor
xor
fisubrs
mov
out
insb
clc
scas
getsec
shl
mov
pop
mov
push
mov
lea
dec
jmp
jmp
xchg
les
xchg
jo
and
cmc
pop
jnp
inc
fwait
cmp
jb
idivb
out
cltd
roll
jnp
fdivrs
bound
daa
pop
fisubs
adc
pop
leave
xor
fidivs
clc
mov
mov
cmpsl
sar
pop
repz
mov
lods
pop
data16
cmc
fcmovb
adc
mov
scas
jo
cmp
pop
adc
push
arpl
adcb
push
movsl
or
mov
xchg
cmp
mov
mov
jp
pusha
push
cld
fwait
in
data16
aaa
pushf
in
out
add
or
lods
imul
std
cmp
and
mov
clc
int3
outsb
mov
sbbl
sahf
mov
outsb
pop
push
cs
lds
inc
jmp
das
add
push
push
cld
das
incb
jno
inc
adc
call
jnp
repnz
aad
pushf
fistl
rcrb
addr16
divb
adc
scas
stos
mov
cmp
sub
pop
loopne
rorl
out
bnd
in
cmp
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
push
pop
aad
xchg
jle
jg
jle
dec
mov
jp
loopne
cmp
cmp
cmp
iret
inc
test
imul
push
adc
pop
mov
lock
pop
lods
inc
cmp
inc
cmp
push
movsb
popa
dec
ss
cmp
sbb
popf
enter
lret
push
lahf
cld
jnp
xchg
sbbl
gs
or
mov
addr16
lock
loopne
or
sbb
notb
insl
mov
inc
xchg
jmp
lcall
inc
adc
bound
adc
lcall
mov
icebp
sub
dec
lds
sbb
fs
repz
shl
push
pop
lds
sub
jp
lret
arpl
sub
or
test
lcall
cltd
adc
xchg
push
das
adc
test
in
xor
dec
xor
mov
or
adc
les
add
sbb
mov
in
aam
aas
or
add
and
addr16
and
aas
cli
mov
je
adc
push
loopne
inc
test
xchg
adc
push
inc
in
xor
cld
sub
cmp
push
sbb
outsb
arpl
cmpb
xor
and
stc
les
fiadds
loopne
rcrb
sbb
or
std
inc
pop
adc
les
jno
bound
or
inc
fisttpl
jbe
ljmp
mov
imul
sub
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
mov
adc
jle
movsb
jg
jle
sub
test
pop
out
and
shrb
dec
inc
pop
and
popa
inc
mov
mov
ret
jnp
mov
dec
mov
push
adcl
push
push
lcall
push
cltd
mov
sub
jmp
in
nop
pop
popa
mov
shrb
insb
jae
xorb
pop
mov
adcl
jbe
ss
mov
mov
inc
enter
jbe
int3
xor
mov
push
les
in
xlat
sub
lcall
or
cld
hlt
pop
arpl
mov
xchg
cmp
sub
movsb
mov
xchg
ret
adcb
je
inc
std
sbb
inc
arpl
mov
fdivl
push
insl
mov
repz
mov
in
sti
dec
mov
rorl
lods
daa
cmpsb
jnp
ficompl
xchg
sbb
xor
es
pop
push
inc
fwait
or
andb
rorl
nop
scas
jmp
adcb
pop
xor
sti
dec
mov
repz
in
lahf
dec
xchg
and
sub
mov
ljmp
jne
mov
lret
jae
xchg
xchg
in
test
fdivp
jl
out
lcall
repz
bnd
xor
lahf
andl
arpl
pop
jae
mov
jg
popf
mov
je
aam
push
icebp
lea
xor
xor
and
push
ss
ficompl
mov
inc
daa
xchg
xchg
int
dec
dec
push
popf
pop
mov
cmp
test
or
inc
cld
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
dec
lret
sbb
add
add
mov
rcll
sub
or
adc
mov
adc
push
out
mov
dec
ss
mov
mov
fimuls
ss
lods
je
hlt
jp
test
cmc
repz
mov
lods
aad
jb
add
and
dec
inc
xor
push
test
inc
test
das
xor
movb
repnz
jl
cmpsl
cmp
test
xchg
insb
outsb
mov
fisubl
lock
xchg
imul
push
jbe
and
sbbl
xchg
pop
dec
shrb
dec
cli
cmpsl
sub
push
mov
aam
test
imul
sbb
push
icebp
cli
test
mov
pop
xlat
mov
pop
xchg
inc
pop
stos
push
add
add
aaa
inc
push
stos
cmp
fwait
lock
aam
fstpt
andb
arpl
sub
add
push
pusha
in
jle
lcall
mov
rolb
add
cmpsl
sbb
cmp
in
pop
pop
shrb
adc
fmuls
fwait
movb
daa
sub
push
dec
leave
cmp
out
insb
sub
es
popa
fidivs
pop
rorl
dec
xor
lods
scas
test
shrl
das
fisubrs
sahf
add
repnz
test
mov
inc
sub
xchg
push
loop
dec
movsl
dec
pop
mov
sti
mov
lea
sbb
or
rcrb
ret
ss
leave
sbb
lds
inc
mov
xlat
sub
push
out
out
aas
and
adcb
mov
mov
mov
xchg
ret
and
aaa
jmp
adc
das
xor
jo
mov
xchg
rol
mov
rcll
push
sub
mov
lock
popl
lret
lret
xlat
push
push
pop
jp
je
leave
or
push
in
xchg
or
push
add
add
adc
mov
mov
push
sbbl
add
sti
out
xor
inc
cmovo
rorb
xchg
inc
xlat
inc
stc
sub
insl
fidivrl
and
mov
cmp
fimull
dec
mov
or
dec
mov
insb
cmovns
pop
or
sahf
push
stos
dec
mov
mov
mov
fdivrl
cs
insl
aas
scas
mov
mov
rcl
dec
xchg
les
jmp
add
aam
mov
movsl
mov
add
ljmp
rorl
mov
dec
mov
xlat
xchg
mov
pop
out
mov
loopnew
add
jno
test
scas
and
leave
sub
ror
and
sub
rcll
jg
imul
xor
xorb
sbb
mov
mov
sbb
xchg
add
push
out
xor
add
add
mov
roll
xor
aam
add
adc
dec
jo
mov
jae
leave
add
cltd
es
psubd
ret
xlat
es
pop
sub
cmp
cmp
push
inc
mov
cmp
sarb
mov
fsub
cmp
cmp
lock
call
std
fnstcw
push
mov
jl
push
pop
inc
ja
push
or
xchg
and
mov
mov
dec
dec
xchg
les
je
cmpsb
mov
mov
adc
scas
xor
mov
in
xor
loopne
insl
push
shll
test
fucomp
mov
inc
lods
adcl
lcall
pop
xchg
sub
jbe
in
sti
mov
pop
dec
je
or
popa
fists
cwtl
cmpsb
shll
fldpi
js
add
xchg
or
test
jg
scas
lods
sub
jo
je
mov
push
mov
sarb
add
pop
jae
or
pop
dec
or
or
add
mov
and
push
mov
test
int3
mov
jecxz
test
mov
adc
cmp
and
fwait
sti
pop
mov
adc
pop
mov
xchg
mov
pop
jbe
mov
in
cmp
mul
scas
out
mov
sub
scas
mov
jmp
xchg
pusha
inc
fcomps
loopne
test
mov
jo
shl
or
out
jno
shlb
cld
loopne
jle
push
sti
fimuls
ret
jle
add
les
pop
je
pop
out
sub
inc
fnstcw
imul
pop
cmp
mov
mov
mov
ss
clc
sti
stos
sbb
cwtl
in
pop
pop
ljmp
add
cmp
aas
fisubrs
ja
scas
mov
cmp
clc
movsl
lods
inc
cmp
mov
cmp
lret
adc
jge
push
add
add
cmc
insl
cmc
out
lcall
enter
sbb
xor
add
add
push
sti
cmp
add
xchg
js
push
lahf
fsub
jmp
aaa
push
cmp
adc
ds
addr16
fbld
sbb
jnp
es
sbb
in
stos
adc
inc
mov
popa
mov
pop
ret
mov
andl
loope
fldt
insb
lcall
ret
dec
insb
repz
sub
popf
pop
inc
test
adc
das
rclb
lcall
arpl
and
add
sub
jbe
inc
je
fmull
push
lods
out
sbb
sub
mov
pop
ds
jbe
sti
repz
ljmp
outsb
jg
scas
std
hlt
dec
inc
add
adc
mov
mov
gs
enter
mov
xchg
cwtl
fmull
xlat
mulb
xchg
daa
aaa
pop
ds
loopne
and
icebp
lret
xor
enter
imul
dec
lret
push
adc
shrb
add
jle
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
lret
lret
sahf
aad
mov
and
roll
in
xor
mov
add
mov
in
orb
cs
push
movsb
pusha
lea
pop
or
xchg
pop
sbb
push
hlt
push
xchg
inc
outsb
inc
rcrl
mov
sbb
fdivrp
imul
int
pop
js
dec
adc
stos
js
and
addl
insl
outsb
out
mov
insb
filds
and
push
add
push
inc
ss
push
bound
repz
jge
adc
add
test
adc
dec
rorl
daa
push
ret
fidivrs
xor
mov
ss
data16
jl
out
mov
shrb
aad
mov
xchg
mov
mov
out
inc
xor
pop
jmp
sbb
push
clc
clc
cmovp
cmc
call
adc
cmp
mov
int
push
push
xor
out
dec
roll
sbb
xchg
out
dec
fwait
mov
jns
add
or
and
scas
sti
jle
pop
push
pop
sub
sub
fadds
add
adc
inc
pop
loopne
jle
lods
xchg
add
pop
pusha
cli
mov
repz
fs
out
or
loope
hlt
int
je
xor
jg
fdivs
gs
push
or
rclb
and
in
mov
mov
je
sti
or
fprem
outsl
push
pop
dec
clc
out
push
pop
test
shrb
xchg
mov
mov
icebp
pop
sub
test
push
shll
add
in
or
sbb
pop
push
scas
movsb
jg
pop
fstpl
out
dec
add
add
cmpsb
sub
pop
fwait
adc
push
testb
js
ja
lret
dec
ljmp
clc
xchg
clc
fisttpl
inc
data16
inc
fnstenv
addr16
iret
pop
xorl
std
loope
lock
xchg
add
adc
mov
and
sbb
adc
jle
cld
add
add
negl
arpl
sbb
add
add
add
xor
pop
aas
sbb
pop
arpl
into
mov
dec
lea
inc
and
xchg
fs
inc
push
mov
xchg
clc
mov
push
and
adc
sub
sub
adc
and
add
fs
test
sbb
in
and
nop
xchg
aas
repnz
sbb
aam
aam
adc
js
xor
push
sti
jno
mov
fisttpll
outsb
dec
mov
mov
lods
ja
sbb
loope
gs
paddsb
mov
and
rorl
jae
rorb
jmp
mov
adc
iret
loope
xor
xchg
and
icebp
sbb
movsl
and
shrl
mov
mov
add
dec
sbb
push
jp
jo
and
les
ja
xor
nop
sarb
add
xor
push
jl
jle
insb
out
adc
fildl
add
addr16
mov
pop
idivb
push
pushf
rcr
jmp
or
inc
jecxz
aam
mov
jne
lds
in
inc
bound
lods
sub
cs
adc
repnz
mov
pop
mov
in
jns
out
lods
mov
xor
int3
push
pop
rcl
bound
outsb
aam
push
in
and
jbe
jge
mov
adc
test
pop
loope
imul
cmp
add
add
xor
mov
mov
mov
cmpsl
pop
adc
movsl
or
ror
gs
jle
cltd
mov
ret
push
add
js
popf
out
addb
jg
sub
and
mov
icebp
mov
cmp
dec
inc
mov
mov
iret
adc
cmpsl
pushf
mov
movsl
inc
cmp
or
add
add
mov
adc
in
xor
adc
push
faddl
add
idivl
icebp
scas
xchg
add
int3
scas
inc
imul
cmp
outsb
rcr
adcl
movsb
inc
sbb
js
loopne
or
xor
ljmp
ja
cmp
int3
icebp
sub
mov
loopne
daa
data16
jbe
mov
dec
sub
sbb
fwait
adc
in
fs
das
test
pop
repz
decl
jmp
iret
and
addr16
je
pop
daa
out
outsb
std
xchg
sub
mov
roll
mov
ficoms
pop
lret
fdivs
subb
mov
add
in
adc
jo
push
hlt
iret
lahf
sub
decl
je
test
inc
fcmovu
icebp
push
cmp
xorl
lahf
pop
add
fwait
add
movsb
int
adcb
push
xchg
add
xor
sahf
push
or
cli
pop
add
add
data16
jne
mov
lcall
add
add
and
push
sub
cmpsl
add
mov
rcrl
or
in
sbb
in
and
loopne
cmp
add
testb
rolb
adc
jg
push
movsl
sbb
jns
js
jnp
inc
mov
mov
sti
jl
in
lods
inc
push
shrb
sub
fcompl
sbb
pusha
xlat
jmp
sti
pushf
cmc
roll
shl
ljmp
sub
adc
outsl
pop
push
lods
sbb
sub
fcoml
cltd
inc
stos
add
movb
sbb
dec
add
leave
add
push
movsl
aam
add
add
outsb
pop
int
and
repnz
mov
jnp
cmp
test
outsb
cmpsl
ret
lahf
add
jo
inc
and
cmp
inc
loopew
mov
jg
jno
out
movsl
fidivrs
add
add
add
jnp
sti
xchg
lahf
mov
lahf
sbb
add
inc
add
test
arpl
jmp
cmp
or
inc
sub
cmp
xchg
cwtl
and
mov
push
arpl
mov
xlat
mov
jae
cmp
mov
push
orb
clc
enter
mov
dec
inc
mul
adc
push
sbb
cli
push
sub
mov
loope
adc
imul
lahf
jmp
mov
xchg
pop
cmpsb
mov
mov
les
xchg
dec
fimuls
cmp
pop
repnz
lea
pop
out
push
data16
mov
jns
loope
mov
insl
pop
inc
adc
daa
pusha
adc
stos
cmp
je
cmp
jp
cmp
add
pop
outsb
fnstcw
hlt
ljmp
and
cmp
push
push
rorb
xorl
xor
mov
jle
add
xchg
xchg
dec
add
add
pop
sarl
mov
aas
sbb
add
add
stc
push
mov
out
insl
mov
xor
push
mov
xor
inc
lea
lret
das
out
sbb
daa
outsl
push
mov
int
ret
mov
imul
gs
movsb
push
dec
call
insl
and
adc
rorl
dec
adc
aad
gs
mov
addl
adcb
imul
xchg
and
push
add
push
cmp
xchg
shrl
pop
pop
outsl
bound
arpl
stos
jp
ja
jo
sarl
xchg
ja
cmp
add
mov
fs
adc
es
ret
mov
movl
or
lock
xchg
dec
push
xor
push
call
ja
push
sub
sbb
hlt
mov
lahf
dec
js
hlt
mov
nop
mov
mov
shrb
dec
push
fidivrs
add
dec
mov
xchg
orl
add
add
repz
std
repz
push
fs
loopne
add
adc
dec
xor
jae
and
enter
jae
jg
mov
sub
fbstp
and
jne
retw
mov
mov
fwait
daa
xor
mov
sub
sub
sub
outsl
aam
inc
loop
js
fsub
shlb
ljmp
adcb
sahf
jmp
mov
das
cmp
in
insl
int3
adcb
aam
and
cmp
fildl
add
fxch
xchg
push
jecxz
out
mov
test
push
in
sbb
faddp
cmp
insb
mov
mov
mov
xchg
nop
pop
aaa
or
lods
add
in
icebp
inc
xchg
mov
pop
adc
inc
mov
out
in
stos
xor
inc
push
unpcklps
in
ja
mov
sahf
fisubrs
mov
cli
cmp
in
sbb
sub
shlb
xchg
out
int
andb
stc
add
add
lock
cmp
arpl
je
cmpsl
aam
daa
loope
add
pop
ret
mov
sub
inc
or
jmp
jmp
mov
ljmp
adc
adc
xchg
inc
xor
inc
cli
or
pop
jae
mov
cmp
add
les
pop
jle
cli
push
hlt
std
repz
clc
lahf
push
std
std
push
push
pop
adc
es
movsl
pop
fsts
bound
fs
lods
adc
sub
fisttps
movl
mov
js
xlat
mov
xchg
xor
insl
dec
xchg
dec
cmp
inc
lock
dec
popf
repz
addr16
scas
or
jmp
adc
and
sahf
pop
pop
rcl
outsl
arpl
mov
dec
sub
add
test
and
inc
pop
cltd
shl
ds
lahf
dec
dec
pop
out
out
cmp
out
mov
or
mov
shufps
pop
sbb
adc
adc
es
adc
cmpl
xchg
ficoms
mov
sbb
add
insl
lcall
mov
inc
sub
pop
and
add
xlat
jo
outsl
dec
es
test
out
push
inc
xchg
les
pop
mov
imul
mov
imul
and
sub
inc
mov
add
rep
ljmp
pop
data16
xchg
sbb
sahf
pop
jno
xchg
mov
cmp
scas
push
mov
shlb
and
nop
mull
clc
adc
bound
fadds
popa
inc
hlt
mov
adc
int
clc
and
jmp
jno
lret
cmc
fisubrl
shll
sub
lret
icebp
adc
imul
mov
mov
cmp
sub
xchg
cwtl
stc
cmp
mov
mov
cmp
cmove
repnz
push
mov
or
int
mov
jle
shl
xor
mov
add
imul
and
outsl
jbe
fcomip
icebp
sti
pop
fstps
jg
push
or
adc
fiaddl
add
lret
xchg
in
mov
incl
shrl
jecxz
add
inc
je
insb
in
arpl
jo
sbb
or
inc
bound
popl
cwtl
dec
je
cld
loope
xchg
fcomps
mov
sub
dec
repnz
popa
fiadds
stos
cmp
xchg
rclb
sbb
icebp
adc
xor
test
xchg
enter
fidivrl
dec
lcall
rcr
aad
jp
pop
push
sub
divl
inc
mov
addr16
inc
mov
mov
xchg
insb
mov
ret
jo
repnz
mov
insb
aaa
lret
mov
andl
fs
or
pop
and
sahf
pop
xchg
push
adc
xor
sbb
mov
adc
adc
add
jmp
iret
sub
mov
mov
dec
dec
xor
in
sahf
jns
mov
xchg
xchg
pop
fildll
mov
in
mov
es
add
add
sub
in
negl
sub
movsb
dec
adc
add
mov
fstpl
mov
movsb
push
xchg
int3
inc
call
imul
rcrb
jns
inc
sbb
cmpsb
cltd
aas
vmread
icebp
pushf
inc
aad
mov
push
push
or
cmp
jb
pop
push
pop
roll
loop
pop
stos
mov
mov
fwait
cmc
das
sar
mov
mov
add
rcl
pop
lahf
imul
push
adc
dec
cmpl
mov
sti
lds
data16
cmpsb
xchg
out
out
jmp
iret
arpl
lods
and
ret
adc
and
insb
jnp
in
inc
add
mov
pushf
cmp
leave
dec
daa
inc
pop
faddp
xchg
sub
push
lahf
subb
in
fildl
or
sbb
jecxz
push
xorl
dec
jne
testb
xchg
mov
mov
divl
fs
lods
std
fiaddl
pop
cltd
adc
pop
add
add
mov
stc
dec
push
fsubrl
push
fists
cmp
add
add
fs
adc
add
add
mov
call
scas
xchg
and
subb
mov
js
mov
out
jo
mov
cmc
cli
test
push
pop
xor
roll
adc
and
sbb
mov
dec
pop
dec
add
mov
cmp
cmp
jo
mov
xchg
xchg
sbb
inc
jp
lds
sub
sbb
dec
imul
mov
mov
inc
loope
pop
cmc
test
inc
std
out
addr16
jo
ds
fdiv
cli
js
xchg
dec
fldcw
insb
push
push
stos
adc
mov
pop
clc
jmp
mov
nop
jo
adc
aad
aad
loop
push
push
cmpsb
pop
jno
imul
inc
mov
add
pop
cltd
cmp
clc
adcb
pop
adc
mov
jl
dec
push
add
cmp
mov
push
push
push
mov
ljmp
add
or
std
pop
out
adc
mov
inc
dec
stos
pop
lods
leave
sbb
lea
pop
mov
xlat
les
sahf
inc
cmp
sub
mov
jno
lods
cmp
inc
sbb
dec
dec
mov
inc
incl
vandnps
dec
jmp
leave
mov
push
rcrl
int3
mov
stos
call
lock
and
cmpsb
repnz
and
lea
pusha
xor
and
fsubrl
cld
iret
sbb
lret
jg
mov
dec
add
jnp
repnz
ficompl
in
xchg
pop
jne
adc
mov
out
push
in
jnp
mov
outsb
jmp
jo
mov
and
sbb
jb
dec
jae
out
jne
jnp
dec
in
add
push
mov
ret
out
fildll
movsl
jecxz
insl
ret
cmp
dec
popf
xchg
push
daa
lcall
push
xchg
hlt
adc
lock
dec
mov
mov
icebp
and
mov
xchg
loope
scas
add
add
repnz
add
pop
lcall
les
movsb
mov
add
pop
test
xor
and
sbb
out
outsb
enter
hlt
fidivl
mov
iret
lds
test
xor
or
push
xchg
cwtl
xor
jl
in
daa
pop
adc
cmpsb
ljmp
pop
adc
mov
lret
in
lods
jge
cmp
jae
xchg
jg
in
inc
cli
test
test
inc
lcall
pop
pushf
inc
shlb
inc
sbb
icebp
cs
pop
jg
xor
jns
imulb
cmpsl
into
and
daa
cmp
jecxz
mov
sub
adc
fnstcw
pop
add
or
pop
inc
jb
add
pop
out
leave
and
jb
mov
test
lock
std
and
fildl
sub
mov
sbb
jl
sub
les
dec
xchg
add
add
add
mov
push
decl
pop
inc
and
dec
call
add
jo
cs
je
push
adc
iret
pop
jp
push
inc
ret
push
fidivrs
lahf
popf
add
addr16
mov
push
arpl
sub
lret
jmp
push
xor
in
test
pop
push
fldt
pop
sahf
or
test
jmp
adc
lds
push
sub
jge
pop
sar
cmc
dec
pop
lret
lock
push
jecxz
jl
fldl
es
adc
fwait
mov
out
movsb
cmpsl
mov
scas
mov
sub
fidivl
mov
adc
mov
push
xlat
push
or
mov
and
ljmp
jecxz
push
dec
fsubr
or
push
mov
mov
les
mov
imull
add
xchg
jno
sarl
cmp
add
stos
or
into
jno
jp
sbb
cltd
enter
out
dec
mov
dec
jno
sbb
sbb
addr16
loopne
xchg
push
and
add
add
jmp
in
push
sub
mov
add
add
dec
xor
je
and
cmpsb
filds
xchg
daa
jmp
sub
lods
shrb
mov
xor
adc
aam
xor
adc
aas
mov
gs
imul
mov
pop
clc
sbb
jns
test
mov
std
sub
add
mov
jle
ret
ret
pusha
in
bnd
inc
dec
adc
lock
jo
add
push
mov
mov
pushf
xor
daa
inc
hlt
in
xor
jae
arpl
sti
add
pusha
pop
mov
mov
sbb
fwait
push
xchg
cwtl
push
call
pop
dec
jge
mov
cmp
jmp
imul
xchg
xchg
les
fdivrs
pop
cld
jl
sub
xchg
ljmp
jbe
aad
xchg
pop
xor
adc
hlt
shl
xor
adc
mov
das
lods
int
dec
dec
xor
xor
jns
push
fisttpll
add
add
outsb
xor
mov
lcall
ljmp
lds
jno
jp
jecxz
sub
loope
jb
mov
xchg
push
mov
shl
mov
mov
idiv
das
popf
and
dec
shll
scas
jnp
sbb
je
lret
cs
ds
cmp
popf
jmp
xor
daa
or
jnp
in
fcomi
xchg
sbb
gs
mov
push
cmp
jl
pop
shll
sarl
icebp
loop
call
lods
in
mov
repz
or
cmpsl
loop
in
or
or
sbb
or
jbe
push
lret
in
cmpsl
lret
xchg
mov
adc
pop
adc
cli
mov
push
and
cmp
rcrb
jg
loope
aad
sub
inc
sbb
inc
dec
xlat
and
mov
dec
jno
push
dec
fiaddl
call
mov
insb
dec
mov
jns
clc
outsl
push
mov
push
inc
cmp
lcall
add
repz
ror
lock
jnp
xor
xchg
les
repz
jmp
add
push
cld
dec
xor
imul
into
sbb
sub
mov
sbb
movsl
call
add
ljmp
xchg
mov
and
rcrl
and
mov
and
stos
inc
mov
out
les
xchg
hlt
push
addb
mov
sub
jge
add
push
mov
and
pop
jae
nop
in
loop
jae
ss
inc
xor
loopne
jecxz
xchg
dec
je
dec
or
ss
js
lods
ret
dec
sti
mov
cmp
cmp
jno
mov
int
dec
xor
mov
lea
icebp
std
cmpsb
movsl
in
sub
mov
and
mov
push
in
sbb
inc
sub
mov
push
jge
popa
sbb
and
in
jo
sahf
xchg
jle
and
xor
add
and
repz
fisubs
filds
add
push
mov
sti
insb
cmpsb
daa
fisubs
push
dec
sti
sub
jmp
and
xor
lret
cmpsl
jnp
ljmp
sbb
mov
mov
ds
hlt
lds
or
push
mov
and
in
xor
pop
add
cmp
cmpsl
aaa
fistl
push
fiadds
in
mov
pop
cmpsl
fadd
insb
pop
int
scas
hlt
out
pmaxsw
pop
cmp
jne
sub
incb
xlat
loope
push
push
mov
stos
out
mov
je
pop
cmp
xchg
mov
mov
mov
jecxz
decb
jecxz
jo
ja
test
orl
pop
fistl
pop
es
cli
mov
xchg
repz
mov
cli
xchg
jns
jge
ficoms
push
push
and
add
jp
stos
incb
xchg
sbb
fstpt
dec
push
mov
pop
mov
add
out
sbb
lret
add
add
outsl
dec
lock
lds
gs
jmp
pop
imull
lods
push
fs
dec
lret
int3
ja
jl
adc
pop
mov
pop
lcall
icebp
lea
lods
leave
insl
and
imul
inc
sub
cs
lods
fldenv
pop
daa
lods
je
add
es
dec
lcall
and
pop
ss
std
in
movsb
in
xor
sub
cmp
inc
and
push
pushf
add
mov
fxch
lcall
sahf
outsb
jo
icebp
and
ja
mov
mov
lods
rclb
sub
jne
xchg
push
test
sub
push
jo
icebp
mov
mov
lret
push
cmpsl
xchg
and
out
push
pop
add
out
dec
scas
sub
mov
jns
mov
outsb
dec
mov
xlat
and
xchg
sub
roll
add
add
shrl
cmc
scas
sub
mov
push
add
add
movsb
cld
test
daa
sti
inc
lock
movsl
push
imul
sarl
ret
sbb
mov
and
cmp
cmpsl
lock
xchg
cmp
push
jne
xor
das
xchg
sub
out
rol
les
stc
adc
popf
pusha
inc
sub
pop
lret
jmp
xor
xor
int
push
gs
lahf
je
add
jge
xlat
outsb
pop
jo
sahf
sub
inc
roll
adc
inc
sbb
enter
sbb
push
or
cmp
fprem
inc
sbb
jns
or
fs
loope
ret
add
testl
addr16
xor
lcall
icebp
lret
sub
and
mov
add
pop
pusha
cmp
push
push
aaa
mov
iret
inc
xchg
mov
jns
test
add
pusha
rorb
cmpsb
mov
mov
insl
out
add
add
sub
das
out
repnz
mov
ja
lods
adc
xchg
lret
pushf
push
cli
orl
mov
jnp
push
mov
and
pop
xchg
jb
aad
push
div
xchg
mov
fwait
sti
sbb
shlb
imul
jecxz
cmp
push
xchg
sub
insb
inc
lock
aaa
imul
or
push
xor
test
mov
add
fistl
mov
jmp
inc
pminsw
lock
xor
push
aas
mov
cmc
clc
mov
rcrb
sbb
jne
xor
aaa
pushl
cmp
mov
insl
jae
daa
mov
bound
addr16
adc
ret
hlt
jns
cmp
iret
and
jp
cltd
imul
sbb
fnstcw
outsl
mov
aaa
jmp
pop
faddl
rcl
adc
ret
scas
lock
xchg
adc
add
add
gs
testl
cld
fisubrs
lock
add
mov
outsl
sub
xchg
push
xor
pop
daa
cmp
pop
lahf
pusha
cmp
jmp
js
movsl
push
out
dec
lods
movsb
fnsave
jmp
sahf
add
loopne
push
inc
jp
lret
in
pop
and
enter
pop
ret
jge
jo
stos
shl
popa
mov
and
popf
mov
sahf
mov
insb
pop
xchg
repnz
push
ret
arpl
in
mov
and
shlb
sbb
jb
inc
cmp
iret
push
fildl
lds
and
test
imul
nop
or
sub
add
shlb
bound
icebp
mov
dec
pop
adc
loope
or
cwtl
xchg
rcll
dec
xor
dec
sub
inc
sbb
push
sbb
clc
xchg
iret
sbb
jge
std
in
inc
lds
ror
gs
lods
imul
push
lret
jne
pushf
push
fcomi
outsb
sahf
jo
add
and
daa
lahf
mov
pop
das
cmpsl
sbb
add
imulb
aam
bound
push
fs
jecxz
add
mov
daa
add
add
add
stos
push
dec
lods
mov
xchg
sarl
xor
mov
addr16
lcall
loop
rcrb
test
enter
jl
xor
lahf
dec
bound
mov
push
testb
xor
ljmp
xor
pop
call
mov
cmpl
sbb
pop
jge
decb
sub
aam
pop
jle
fidivrs
xor
lret
sbbb
aad
push
xchg
cmc
notl
nop
mov
ja
adc
xchg
cltd
cwtl
loopne
push
push
sub
insl
sub
insl
outsl
data16
sbb
cmpsl
fcompl
scas
pushf
push
xor
sahf
shl
sub
dec
mov
mov
adc
xchg
add
add
fucomi
xor
inc
fnstcw
add
repnz
mov
bound
mov
mov
outsl
negb
pop
ficomps
pop
sub
xchg
sub
mov
test
inc
dec
or
dec
adc
add
dec
sbb
ds
int
cmpsb
popa
jbe
mov
hlt
shll
xchg
push
jns
stos
imul
cmp
mov
ds
adc
jg
outsb
sbb
push
xor
sub
sbb
aas
mov
repz
mov
cmp
loope
mov
inc
jno
mov
sub
dec
ss
mov
mov
mov
or
ss
jg
imul
rcrb
in
push
or
lret
cmp
push
std
lds
sbb
je
and
jp
lgs
sbb
mov
aaa
xchg
into
sahf
addl
and
lret
movsl
inc
mov
mov
add
add
add
push
inc
pop
jns
aas
loopne
sub
push
sbb
repz
add
push
shrl
cmc
push
ds
push
rcrl
je
fstpl
cmpl
inc
push
mov
ljmp
mov
stc
fucomi
add
stos
into
sub
dec
push
jmp
movsl
in
ret
pop
mov
cli
rclb
sbb
into
push
ficoml
lahf
addl
aas
dec
inc
jbe
ret
mov
addb
aam
mov
cmp
test
push
inc
push
insl
movsb
imul
fucomp
ljmp
daa
arpl
imul
or
pop
fisubrl
sbb
jp
push
mov
fincstp
in
leave
push
pushf
incb
data16
cmp
shrl
push
ja
aaa
mov
leave
mov
jo
pop
ror
inc
mov
je
mov
out
lea
out
jle
clc
inc
mov
pop
rorb
daa
loope
test
sbb
add
add
jnp
mov
mov
hlt
add
add
inc
dec
insb
mov
fmull
push
mov
sub
std
lcall
insl
xchg
shrl
sti
loopne
xchg
test
clc
sbb
es
add
in
or
pop
adcb
pop
pop
push
rcrb
pop
sub
aas
mov
or
mov
iret
outsl
aam
mov
mov
inc
push
cmp
inc
dec
clc
pop
jmp
pop
push
enter
mov
push
popa
bnd
loope
testb
xor
aad
test
mov
icebp
sbb
fsts
mov
jns
xchg
std
outsb
aas
add
ds
jg
imul
lret
sub
loope
ss
add
xchg
inc
sbb
push
cmp
inc
pop
and
push
mov
jg
xchg
les
iret
push
mov
and
add
inc
mov
add
imul
fdivrs
add
add
jne
lahf
mov
pop
sub
mov
cmp
inc
dec
lods
loope
test
jnp
test
sbb
pop
loop
and
dec
jg
cmp
sub
pop
or
mov
mov
imul
dec
or
push
icebp
xor
cmp
lds
push
push
aas
inc
arpl
pop
jns
out
mov
ficoms
loopne
push
test
jbe
std
aas
pop
pop
test
xor
add
and
aad
leave
pop
add
mov
xchg
cli
or
sysexit
dec
bound
mov
popa
push
xlat
xchg
mov
lods
inc
add
dec
cmp
dec
daa
sbb
fistps
xchg
scas
pop
pop
mov
fdivrp
pop
push
fidivrs
out
xchg
jnp
cmp
push
push
test
sub
dec
int3
sbb
mov
mov
add
xchg
mov
idivl
not
arpl
testb
add
mov
dec
xchg
jns
jge
mov
and
pop
test
add
stos
scas
mov
or
push
jnp
jmp
lock
mov
or
dec
push
popf
add
or
mov
loop
stc
push
mov
xchg
cmp
pop
pop
ret
das
sub
pop
jae
inc
dec
jp
repz
lods
dec
ja
and
pop
les
cld
pop
fnstcw
sahf
xchg
and
push
out
icebp
popa
pop
fwait
sbb
outsl
ljmp
lret
jae
cmc
sub
sbb
mov
les
flds
pop
xchg
pop
in
gs
add
pop
pop
mov
roll
adc
xchg
filds
out
or
je
jb
mov
in
div
sbb
divl
lret
add
and
mov
pop
inc
push
push
int3
and
fcmovnb
es
pop
cmpl
push
cltd
mov
in
mov
fsubs
mov
add
test
mov
fidivl
mov
xchg
testl
add
xchg
inc
pop
xchg
ficoms
jmp
mov
pop
jnp
pusha
fildll
cld
js
mov
or
fsubl
sbb
insb
ss
sbb
jns
fwait
inc
cmp
pop
rcr
mov
lret
sbb
std
leave
adc
cmp
cmp
dec
mov
inc
lret
or
fisubrs
pop
dec
mov
rcrb
or
or
pop
inc
ljmp
aaa
mov
popw
fisubl
inc
sub
and
repnz
sbb
xlat
mov
pop
leave
inc
and
ror
sbb
lods
movsb
repnz
data16
fimuls
mov
pop
clc
pop
sahf
jecxz
jecxz
push
inc
mov
pop
inc
fdiv
cmp
pushf
outsl
jge
cmc
sub
inc
vpaddusw
ljmp
inc
icebp
fnsetpm(287
jo
stos
repz
out
push
pop
xchg
jle
subb
insb
cld
push
mov
xor
pop
add
add
push
pop
push
jmp
shlb
mov
add
push
adc
adc
xor
mov
or
dec
or
bndldx
mov
jg
fisubs
jg
add
cmp
out
aam
arpl
add
aad
lret
jecxz
mov
std
sbb
xchg
mov
loop,pt
inc
rcr
mov
inc
rcll
cmp
dec
jnp
pop
sub
lods
push
movsb
test
push
push
ds
dec
mov
shl
xor
shll
xchg
push
push
xor
jg
gs
test
xor
sub
nop
inc
sub
lea
pusha
aas
add
fst
mov
pop
mov
inc
pop
jae
jbe
sub
rcrl
loope
clc
inc
pop
fldt
sbb
add
xchg
mov
ljmp
sub
push
fwait
pop
sbb
sbb
aam
dec
popf
popa
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
mov
add
add
dec
call
xlat
lret
int
and
repnz
into
push
or
gs
loope
shrl
adc
mov
mov
les
lret
xchg
pusha
ja
inc
mov
mov
jne
inc
push
sahf
dec
clc
mov
test
das
imul
cmpsl
popa
call
xor
and
inc
mov
sbb
jl
in
repnz
inc
test
sub
mov
daa
push
xchg
mov
sti
lahf
jno
mov
mov
imul
sub
cmp
inc
sbbb
repnz
inc
loopne
je
sub
test
jle
push
xchg
pop
addr16
add
cmpsl
pushf
stos
inc
out
cmp
mov
sbb
movsb
sub
in
pushf
repnz
out
sbb
cs
test
imul
andb
hlt
stos
stc
repnz
push
sub
add
das
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
ja
test
rol
iret
xor
setns
sbb
rcll
dec
xor
enter
or
loopne
push
xor
pop
call
shll
cmpsb
stc
shll
add
or
adc
addl
out
mov
test
hlt
lcall
fisubrs
jle
xor
xchg
lea
fbstp
adc
adc
xchg
inc
std
inc
mov
pop
test
dec
movsl
cs
mov
sub
js
mov
mov
xchg
add
jae
inc
jae
sbb
dec
add
loope
push
pop
pop
fsubrs
pop
ds
mov
movsl
and
out
push
mov
jge
dec
xchg
popf
push
repz
sbb
add
adc
and
sbb
sbb
mov
jecxz
fs
push
mov
add
or
daa
rcl
jbe
push
repz
stc
sbb
xchg
lcall
dec
add
add
aam
int
aaa
das
aam
sub
gs
add
add
sbb
push
push
mov
lods
adc
jg
pop
jmp
xor
fsubrs
out
and
sub
jo
loopne
xchg
mov
pusha
popa
loope
and
and
sbb
mov
js
pop
mov
les
xor
shrl
cmp
aam
and
addr16
arpl
pop
pop
imul
mov
cmp
jnp
add
notl
or
sbb
ds
adc
daa
sahf
xlat
add
insb
mov
jbe
mov
jbe
daa
aam
push
fnstenv
cltd
dec
shr
adc
jne
dec
out
and
stc
rclb
jnp
dec
aas
sbb
loope
sti
or
xor
ljmp
mov
mov
mov
sub
adc
icebp
adc
adc
ljmp
repz
add
pop
arpl
addr16
sub
sbb
cld
add
add
mov
mov
pop
xchg
les
xchg
push
or
add
push
fldcw
pop
cmp
loopne
sbb
xor
push
pop
mov
ret
movsl
push
pop
iret
cs
out
fldenv
scas
jae
cmp
jnp
push
xor
jne
or
mov
sub
dec
in
dec
add
subb
sub
fwait
stc
out
pushl
bound
stos
mov
shll
mov
adc
mov
sbb
insb
rcl
mov
ljmp
dec
pop
iret
fsubrs
inc
cmp
sbb
mov
scas
into
cmc
ret
es
push
loope
notb
xor
leave
or
xchg
pop
push
pop
cld
pop
mov
inc
rolb
push
cltd
jl
loop
sub
leave
ds
jns
pusha
push
repnz
add
out
out
pushl
xchg
xor
or
add
add
fisttps
addb
test
imull
ss
cmpsb
push
and
cmp
sbb
movsl
cmp
aaa
insl
mov
pop
inc
sbb
and
xchg
jbe
mov
lods
push
mov
lret
scas
mov
xchg
or
push
fcoml
inc
movsb
sub
clc
int
fstps
mov
test
stc
xchg
push
xor
cmpsb
and
inc
inc
addr16
hlt
push
dec
loop
dec
lock
insb
cmpsl
xchg
dec
xchg
stos
adc
pushf
shlb
rcll
pushf
insl
lret
cmp
dec
sub
in
jns
negb
ljmp
inc
and
sub
jmp
mov
shl
mov
push
inc
jno
loopne
out
jae
cmc
imul
cmp
mov
mov
decl
aas
insb
cmpsl
dec
fldt
jno
cmp
scas
stc
cmp
xor
addl
add
test
push
scas
mov
mov
or
add
add
mov
cmp
mov
fdivp
mov
fsubrl
sub
xor
add
mov
and
addb
sbb
outsb
pop
leave
push
movsl
fsubrs
lret
and
xchg
pop
cmpsl
imul
frstor
cmp
fildll
int
pop
fidivl
test
imul
rcrb
push
outsl
jnp
push
fucomip
es
xor
and
fldenv
adc
xchg
lds
xorl
lahf
stos
adc
mov
dec
mov
dec
add
jnp
popf
loop
enter
cli
jae
and
cmp
dec
ljmp
mov
push
cmp
push
movl
icebp
ljmp
ds
stc
xchg
xchg
xor
xchg
pusha
add
andps
loopne
xchg
add
aaa
xchg
and
movsl
mov
mov
mov
or
incl
add
mov
mov
test
adc
mov
dec
js
std
cmp
add
daa
jg
cmp
int
jmp
push
mov
xor
fisubrl
divl
xchg
ja
pop
mov
push
and
mov
rcl
mov
xchg
mov
mov
in
dec
xor
test
ret
push
stos
cmp
int
jno
or
pop
sub
xchg
xor
nop
mov
ror
mov
ja
adcl
adc
pop
xchg
movsl
movsb
mov
inc
mov
jb
ja
sub
xor
shr
mov
push
push
mov
ss
fidivrl
xor
mov
mov
fcomp
out
call
pushf
dec
mov
mov
cmp
jmp
repnz
cwtl
fimull
mov
sub
in
add
je
mov
xor
jge
add
fdivl
mov
mov
pop
pop
ret
add
lahf
testl
fdivrs
fldcw
cmpb
cltd
inc
dec
xor
mov
mov
rol
pop
and
outsl
shlb
add
mov
push
mov
adc
dec
push
repz
add
rorb
adc
and
push
add
xor
push
outsb
out
and
repz
adc
out
push
clc
push
cmpsl
push
mov
cmc
xchg
push
mov
pop
pop
push
sbb
mov
mov
push
jp
pop
loope
push
cmp
fwait
imul
xor
loop
pop
adc
push
pop
cmp
fsubl
stc
std
scas
mov
cs
and
scas
cmp
jg
stos
mov
dec
sarb
jmp
sub
mov
sub
xor
push
mov
adc
sbb
add
add
mov
mov
lods
imul
and
add
add
mov
push
push
inc
popf
testl
adc
push
jae
not
lea
bound
loop
xchg
ds
int3
aad
rcll
lahf
push
add
xlat
sub
subb
in
jp
pop
pop
loop
sti
adc
sub
jecxz
roll
add
adc
cld
es
lds
cwtl
push
xchg
xor
lea
data16
add
adc
xor
fldenv
jnp
push
test
pushf
fstps
nop
push
jnp
rcll
sub
mov
loop
out
lds
loope
lcall
or
imul
xor
or
scas
dec
out
jno
das
pop
into
lods
repnz
cli
and
pop
inc
dec
leave
sbb
dec
mov
mov
push
cmp
pop
les
loope
sub
and
cmc
xchg
push
and
insb
repz
cmpsb
mov
fimuls
mov
cmpsb
cmp
add
xchg
sub
scas
or
cmp
mov
sub
int3
add
add
push
imul
vpsubq
inc
push
pop
daa
lea
clc
pop
or
mov
bound
sbb
rcrl
sbb
adc
int
xchg
addr16
ljmp
dec
push
mov
mov
scas
into
add
cmp
addr16
jmp
aas
mov
pop
adc
pxor
enter
std
push
outsb
pop
mov
and
nop
inc
xchg
sub
jle
mov
pusha
in
out
jae
sub
sub
adc
mov
xchg
cmp
vpunpcklbw
push
xor
cmpl
jecxz
enter
sti
out
sub
mov
sbb
data16
repz
insb
sbb
pop
loop
int3
cmpl
ror
push
cli
movsb
jecxz
push
inc
insl
push
ficoms
leave
dec
hlt
fimuls
mov
repz
cmpb
and
or
or
add
add
hlt
fbld
xor
pop
roll
add
add
out
testb
cmp
icebp
repnz
fs
jo
adc
hlt
jns
mov
icebp
rol
sbb
jno
in
xchg
flds
mov
or
out
mov
push
fsubl
inc
aam
sub
xchg
jmp
leave
loope
and
sahf
pushf
sbbl
add
xchg
jb
pop
mov
daa
sub
rcr
leave
movsb
mov
inc
fucomi
xor
sbbl
cmp
mov
sub
movsl
jecxz
mov
cld
lahf
jmp
xor
and
scas
mov
daa
adc
cmc
inc
dec
movsb
fsubrs
xchg
popa
dec
sbb
mov
dec
mov
and
cltd
int3
subb
mov
scas
xchg
pop
push
nop
outsl
xlat
subl
inc
out
cld
or
movsb
jno
and
sub
mov
and
nop
add
add
into
fwait
add
mov
add
add
and
pop
pop
xor
stos
mov
push
add
cmp
cmp
cmc
popf
jg
dec
push
movsl
shl
aam
and
jle
sbb
insl
mov
mov
mov
cmpsb
lret
and
adc
xor
pop
mov
gs
in
cmpsb
lcall
or
loopnew
xor
xchg
sbb
aas
cltd
cmc
jg
add
mov
std
mov
xor
jle
mov
jmp
xor
call
in
lods
in
jae
sbb
loopne
sti
push
test
push
fwait
stos
sar
mov
add
fstpl
sarl
test
push
out
cmp
xchg
sub
insb
xchg
mov
mov
xchg
mov
shll
xchg
mov
push
inc
addl
cli
mov
inc
or
xchg
mov
push
push
dec
int
sub
xchg
push
js
jg
fidivrl
ret
iret
call
add
xor
mov
pop
sarb
in
jb
adc
add
pushf
test
mov
lods
or
mov
clc
push
jbe
pop
mov
xchg
repnz
jbe
in
push
dec
or
addr16
test
inc
imul
fldcw
aad
movsl
cld
adc
mov
mov
pop
adc
add
jno
dec
xor
pop
sub
inc
cmp
cmp
aaa
fcomip
dec
mov
mov
sub
ds
test
dec
inc
mov
add
lods
add
dec
cltd
ds
fs
dec
bound
mov
cmp
rcrl
rol
jno
dec
pushf
mov
inc
mov
add
jl
sub
fnstcw
out
divl
in
pusha
adc
inc
cmpsl
push
mov
xor
pop
inc
shlb
or
loopne
xchg
push
pop
pop
xorps
jp
mov
push
jne
cmc
stos
dec
outsl
cli
mov
cmp
enter
add
add
inc
out
aas
mov
rclb
pop
call
add
fisubl
lods
mov
data16
stos
dec
jg
jnp
add
sub
or
outsb
leave
jl
or
inc
pop
push
mov
cmpsb
std
cmp
fidivl
or
pop
lods
inc
add
ja
or
or
push
in
bound
jecxz
or
test
xor
movsl
mov
sub
push
sbb
sbb
mov
arpl
cwtl
sbb
stc
lods
push
out
jg
or
insl
push
in
test
cmpsb
mov
mov
lock
fstpt
ljmp
inc
in
insl
test
push
mov
mov
pusha
fcomi
xor
and
cld
aad
dec
mov
cs
out
test
xlat
cmc
mov
xchg
mov
js
in
sbb
sbbb
fnsave
jno
mov
xor
clc
stos
push
sarl
pushf
add
add
bnd
dec
leave
and
mov
add
pop
add
add
push
inc
outsb
movsl
ja
mov
and
faddp
and
sbb
loopne
std
loop
jo
movsb
cmpl
xor
or
lret
imul
add
pop
test
inc
roll
orl
sarl
add
cmc
cmp
xchg
lods
mov
fsubr
jmp
mov
push
adc
stos
mov
movsb
sub
jg
mov
pop
inc
and
push
mov
repz
cmp
sub
inc
push
nop
out
mov
mov
push
scas
iret
mov
pop
cmp
orl
in
nop
push
std
mov
dec
cmp
add
in
insl
stos
adc
mov
xchg
mov
sub
inc
or
adc
add
fnstenv
movb
dec
ljmp
into
cmp
xlat
pop
nop
mov
inc
dec
pop
mov
mov
jb
fists
add
add
in
out
ja
filds
call
add
add
mov
mov
pop
xchg
dec
push
std
jns
jecxz
sbb
push
sub
adc
nop
shll
jo
xor
cmpsb
sbbb
shl
add
fwait
cmp
adc
xchg
shlb
scas
lret
in
in
nop
idivl
shll
sti
mov
push
dec
mov
lret
divb
jl
jne
test
clc
outsb
insl
hlt
cmp
mov
insl
insl
sub
nop
cmp
xor
stos
mov
adc
data16
std
fcoms
mov
fs
cmp
push
out
dec
sti
inc
jbe
test
mov
or
lcall
pop
mov
lock
mov
cmpsb
xor
lods
stos
mov
xor
mov
mov
cmc
jo
adc
adc
insl
mov
dec
inc
lds
pop
aas
xor
aas
inc
sub
fucomip
rclb
add
scas
test
in
inc
push
or
dec
jns
or
add
mov
adc
sahf
das
mov
nop
dec
cmp
adc
mov
inc
std
lret
push
out
ret
or
mov
je
mov
daa
das
mov
adc
sbbb
pop
sbb
or
push
stos
ss
sub
xchg
ljmp
mov
ror
dec
sbbb
jmp
or
lock
cwtl
sub
shl
or
adc
xchg
jecxz
mov
lcall
out
pop
push
inc
pop
fwait
sbb
aam
enter
or
jb
add
sub
jle,pn
fidivl
add
lret
scas
xlat
mov
push
insl
cli
bound
xchg
mov
fisttpl
pop
jo
rorb
xor
cli
leave
pusha
dec
lock
pop
lods
sub
adc
and
add
inc
outsl
pop
push
leave
push
add
pop
int
stc
addl
add
jg
neg
pop
daa
inc
add
aas
hlt
or
add
cld
out
sbb
rcr
mov
xlat
pxor
jmp
in
sahf
mov
mov
inc
xchg
stos
arpl
je
add
sub
xchg
leave
push
dec
adc
loop
push
negl
xchg
pop
int3
iret
into
aam
jle
icebp
pop
loopne
dec
xor
mov
fwait
push
inc
pop
dec
mov
gs
leave
out
repnz
pop
popa
jecxz
daa
rcr
push
cli
add
or
jb
dec
dec
sbb
sub
mov
sarb
mov
loop
addl
lods
movb
lods
pop
push
jl
out
or
mov
cmpsl
addr16
pop
leave
xchg
mov
mov
out
jle
adc
mov
loop
iret
pusha
popa
add
jb
daa
pop
ljmp
pop
je
push
cmp
and
jbe
inc
cli
test
loopne
in
sbb
aad
sub
jle
add
cmp
sti
jg
cmp
je
adc
or
add
cs
andb
mov
xor
add
mov
cmpsb
pop
xchg
je
xchg
clc
or
mov
add
mov
gs
inc
cltd
rcr
jp
mov
and
lods
test
and
xchg
inc
fistpl
cltd
jae
cltd
adc
subb
mov
and
or
aas
dec
iret
stos
pop
lea
loopne
adc
sbb
and
or
cmp
xor
outsb
lods
mov
fadd
or
adc
cmp
es
dec
sti
in
rolb
loope
inc
cmp
iret
js
jecxz
fadd
adc
cwtl
loop,pn
or
leave
cmp
mov
popf
outsb
push
push
out
xor
pop
int3
ret
adc
rolb
push
mov
pop
aam
sub
jl
pop
pop
cmp
sub
sbb
in
jle
mov
mov
out
divl
push
add
scas
aam
jnp
fstp
fcompl
ja
push
add
sbb
add
bound
sbbb
mov
es
test
in
psubw
xchg
sub
add
dec
repnz
out
lret
mov
sbb
stc
pop
add
imul
sbb
push
push
negb
mov
cmpsl
imul
mov
ret
jecxz
xchg
fs
fldt
sub
pop
add
push
iret
daa
pushf
test
adc
ret
inc
push
dec
mov
rolb
cmp
psrld
mov
sarb
mov
fcoml
xchg
push
mov
mov
vpmaxsw
add
jo
outsl
stos
sbb
mov
in
daa
pop
xchg
stos
leave
cli
sbb
sbb
cmp
das
add
pop
fdivrl
cmpsb
xchg
push
les
subl
mov
pop
lock
dec
jp
shlb
dec
iret
lret
popa
arpl
add
mov
jno
std
outsl
mov
add
lea
jl
push
add
add
xchg
sahf
xchg
sub
clc
fimuls
mov
cmp
in
adc
fsubrp
cli
jmp
lret
sub
dec
lea
mov
jb
loopne
repnz
mov
in
arpl
mov
mulb
test
xchg
lret
xor
push
dec
push
or
mov
jecxz
imull
shlb
sub
repnz
lea
arpl
ret
data16
mov
loopne
xchg
add
repnz
sahf
das
mov
call
fwait
imul
add
add
out
pop
mov
lock
lds
jne
loopne
enter
sub
fdiv
jecxz
inc
in
cltd
cmpsl
pop
mov
jbe
lahf
mov
xchg
cmpl
push
enter
clc
fsubrs
mov
jg
sub
jae
gs
cltd
mov
mov
ficomps
mov
in
jecxz
mov
fs
jb
jo
pop
aas
adc
mov
outsb
bound
cmc
inc
insl
add
add
jmp
fnstsw
ss
or
add
add
fs
adc
mov
fadds
enter
mov
enter
mov
jnp
lds
pop
mov
xchg
cltd
test
xchg
movsl
icebp
mov
dec
or
fisubs
arpl
lcall
jmp
popf
out
lds
cmpsl
ret
adc
and
jno
dec
cmc
fcoms
dec
and
push
divb
jg
pop
rcrb
hlt
jg
xchg
sbb
mov
inc
mov
xchg
jmp
inc
lcall
arpl
mov
mov
xor
add
sbb
pop
mov
lret
inc
pop
mov
cld
popa
and
loopne
jge
pop
jmp
mov
outsl
es
lret
jle,pn
imul
inc
fsubs
jb
adc
cmpsl
pop
or
lret
data16
cmpsl
jno
mov
mov
rcll
ja
rorl
fucomp
stos
sbb
icebp
or
mov
xor
xchg
lds
rcll
or
add
add
fcoml
mov
adc
pushl
xchg
and
adc
push
push
lret
sub
mov
test
xor
movsb
xor
add
pop
pop
sbb
mov
mov
lods
pop
xchg
nop
mov
mov
in
scas
mov
cs
pop
cmp
mov
mov
xchg
dec
div
push
mov
pop
xor
push
mov
repnz
imul
mov
loope
add
cmp
mov
or
sbb
mov
nop
mov
and
js
cmpb
sub
cltd
cmpsl
fisubs
sub
addr16
in
repz
out
fidivs
cmp
xchg
cmp
imul
mov
sub
out
and
jno
hlt
in
mov
mov
and
dec
cli
inc
jg
int
xchg
lods
or
aam
dec
adc
add
add
inc
xor
adc
cmpb
sbb
jbe
ret
pop
xchg
rorl
arpl
inc
mov
imull
xchg
sbb
or
fildll
rcrb
cmp
push
dec
out
fisubl
push
rclb
adc
xchg
int3
mov
xchg
push
test
popf
inc
pop
mov
jle
icebp
out
lock
xor
pop
add
seto
and
es
push
movsb
es
mov
les
aam
ret
pushf
sub
add
negl
stc
mov
hlt
and
jnp
roll
out
inc
mov
sahf
aas
and
adc
and
push
mov
clc
inc
xchg
loope
mov
adc
out
xchg
xchg
sub
imul
sub
dec
aam
xchg
sarb
jo
mov
mov
pop
xlat
mov
lret
adc
xchg
inc
xor
subb
add
add
xchg
std
cmp
jle
fistpll
fisubl
adc
add
mov
xchg
mov
lods
lea
inc
jl
test
adc
cmp
mov
dec
sub
pop
push
mov
ficoml
lock
xor
cmp
push
loopne
cmpsb
repnz
and
nop
pop
mov
decl
gs
push
test
mulb
adc
fdiv
sbb
test
imul
mov
xorl
ror
rolb
fsub
mov
xchg
or
std
in
aaa
es
insb
sbb
outsl
dec
mov
xchg
sahf
out
push
imul
incl
mov
cmp
xchg
mov
loop
ja
sub
fucomip
pushl
pop
adc
cmc
xchg
ret
jg
push
shrb
mov
fwait
lods
mov
adc
scas
dec
add
ljmp
xor
add
test
icebp
jmp
push
aas
mov
add
add
iret
xlat
ficompl
inc
sbb
ja
sbb
add
add
push
or
gs
ficompl
andl
cmc
push
cmp
cs
xor
repnz
or
sbb
lods
push
xorb
cmc
icebp
sub
xchg
mov
jmp
inc
sub
cmp
insl
xchg
imul
jle
sarl
imul
pop
jbe
insl
jp
jecxz,pt
je
add
popa
pop
cmc
popa
lea
inc
cmp
cmc
sbb
cs
add
scas
stc
insl
iret
insl
adcl
or
ror
jmp
pop
cmp
fisubrs
repnz
add
xchg
outsl
mov
es
vpunpckhwd
in
push
loop
mov
mov
int3
sub
scas
pop
scas
mov
add
jnp
leave
mov
ds
cmpsb
mov
or
jl
xlat
fs
xor
jo
adc
lcall
rcr
mov
and
cmc
mov
sub
stc
ficoml
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
mov
add
add
dec
shl
lods
mov
iret
shrl
sub
aad
xor
inc
and
mov
fs
and
cmp
mov
add
popa
xchg
jns
test
jnp
push
enter
lods
xchg
js
insb
aam
or
loop
outsl
out
es
or
add
subb
inc
scas
clc
movsb
arpl
lods
add
mov
in
mov
repz
cmp
xchg
cmpsl
ret
jae
mov
lea
in
fimull
pop
lahf
mov
xchg
cltd
dec
aas
mov
xlat
sbb
cwtl
orb
hlt
mov
or
mov
repnz
and
lahf
and
sub
mov
lcall
sbb
shll
scas
cmp
imul
xchg
movsl
cld
dec
loopne
arpl
subb
jno
repz
push
es
add
sbb
std
sbb
stc
cld
or
aam
sbb
add
clc
lods
movsl
rclb
dec
jbe
enter
das
mov
mov
pushf
leave
aaa
xchg
sbb
xchg
in
cmp
jo
push
je
inc
ror
sub
lret
dec
movsb
sub
jg
repnz
or
xchg
mov
sarw
pop
sub
fstpt
xchg
mov
push
dec
and
push
sub
xor
pop
repnz
in
outsb
movsb
bnd
and
xor
fcompl
dec
and
es
sbb
pop
js
adc
das
mov
int3
xor
mov
movsl
ss
ret
lea
repnz
push
enter
test
sti
xor
aam
xorb
xchg
xchg
xchg
jno
pop
cmp
in
sarb
cmc
fstps
dec
mov
aam
or
std
fisttps
call
jg
mov
cmp
adc
fs
or
es
xchg
out
dec
mov
rcl
add
out
add
add
pop
test
scas
repz
cld
adc
loopne
das
sub
add
add
mov
in
pop
mov
ds
sub
or
pop
cltd
jg
sbb
inc
js
addl
mov
ss
in
xchg
fcompl
outsl
sub
fildll
dec
jge
repnz
jmp
mov
stos
cmp
xor
mov
es
mov
jns
cs
add
xor
loopne
jecxz
leave
mov
and
movsb
ja
stos
jb
fsubrs
pop
out
inc
lods
sbb
mov
pop
out
int3
clc
mov
lret
pop
ja
push
sahf
inc
mov
cmp
pop
xchg
pusha
lret
daa
cmp
stos
cmp
lods
mov
rolb
add
scas
and
xor
test
and
arpl
pop
call
fcomps
xchg
mov
mov
movsb
sbbl
adc
xor
or
ljmp
add
add
dec
pushl
sbb
add
add
ljmp
push
mov
call
stos
mov
xchg
dec
ss
call
add
data16
cwtl
pop
jle
and
pop
and
lds
xor
imul
sbb
pushf
push
in
ss
movsb
ror
sub
push
lods
push
sbb
pop
inc
jo
dec
inc
push
inc
stos
push
int3
ljmp
cli
xchg
mov
adcl
add
popa
mov
and
scas
pop
out
fwait
int3
test
or
pop
pop
scas
adc
inc
daa
mov
push
jg
scas
shrl
ror
and
jmp
nop
xchg
bound
xchg
mov
or
les
add
mov
mull
cmpsb
and
jnp
dec
imul
cmp
mov
cltd
dec
or
aam
adc
push
mov
push
fdivrs
test
mov
jge
ret
inc
or
in
add
pop
sub
inc
ja
pop
aas
dec
push
jle
xor
add
add
data16
xchg
pop
xchg
mov
std
loop
cmp
std
xlat
jbe
mov
rol
movsb
mov
push
pop
xchg
dec
pop
jg
scas
push
in
vpackuswb
cmp
pop
lods
jl
call
inc
dec
icebp
or
lea
pop
test
sub
fcomps
dec
cltd
mov
fsts
repz
mov
xor
mov
pop
inc
mov
jno
adc
mov
mov
adc
xor
decl
sbb
sub
sub
sbb
insl
cmp
loop
insl
push
addr16
lds
cs
mov
in
pop
mov
mov
hlt
rcrl
mov
repnz
sti
data16
fwait
pop
in
out
fidivs
adc
xchg
loop
std
cmpl
jo
lods
or
pop
dec
and
jo
push
fimuls
test
icebp
ja
xlat
testb
repz
jae
ja
div
mov
jg
stc
cmp
add
add
push
inc
push
push
cmp
inc
adc
lea
rcrb
aam
rcl
mov
jecxz
and
popa
xchg
in
movsb
std
les
jl
sub
push
dec
cmp
inc
jle
and
push
out
enter
jecxz
call
adc
arpl
int
int3
sub
stos
sahf
or
mov
mov
pusha
mov
fnstsw
jo
xchg
mov
cmp
push
xor
mov
xchg
adc
fistpl
mov
adc
lods
ja
lock
xchg
andl
lock
jo
mov
pop
dec
mov
jmp
sub
adc
adc
mov
inc
adc
decl
dec
mov
orb
sbb
or
in
fidivs
out
mov
stc
sbbb
enter
and
mov
add
shrb
cmp
lret
fstps
push
pop
leave
and
popf
add
add
cli
std
jg
push
pushf
dec
lret
insb
aas
sbb
add
xchg
dec
and
xchg
sbb
push
in
dec
leave
cmp
addl
xor
imul
or
mov
test
add
loopne
mov
bound
add
mov
jmp
leave
mov
pusha
mov
cmpsb
loopne
sbb
jb
push
mov
jecxz
leave
lds
ds
clc
mov
or
mov
add
out
inc
jecxz
fdivr
icebp
enter
jo
std
mov
mov
cmpsl
outsl
arpl
add
mov
xchg
les
mov
daa
xor
cmp
jle
xor
fwait
xor
push
fcoml
jle
rolb
xchg
mov
jp
mov
and
loope
fs
cmc
add
mulb
add
add
add
mov
std
incl
sbb
dec
cld
fimull
add
aas
lods
bnd
mov
arpl
fisubl
fadds
or
jge
adc
into
pop
cmp
sti
fstl
setb
in
jg
fcmove
mov
in
sahf
mov
mov
divb
sbbb
repz
movsl
dec
lock
dec
push
adc
add
loope
aas
mov
mov
fstpl
into
mov
sarb
mov
jns
inc
lds
iret
gs
aas
lods
mov
sub
aas
jno
cs
stos
lahf
xchg
cmpsl
out
cmp
orb
les
sbb
insb
rcl
fstpl
bound
imul
dec
pop
inc
imul
and
inc
pop
jge
mov
cmp
xor
and
mov
out
mov
ret
or
ss
push
adc
int
cmpb
into
fildl
cli
stos
aas
jmp
jmp
sbbb
add
push
es
jg
pop
or
xor
aaa
test
add
testl
mov
daa
xchg
jmp
lds
adc
or
or
popa
inc
scas
sbb
jnp
push
outsl
sbb
mov
push
mov
ljmp
xor
mov
cmp
push
iret
arpl
or
fadds
or
mov
jecxz
mov
push
add
iret
add
pop
stos
les
inc
insl
stos
hlt
cmp
fldl
stos
in
mov
push
push
cmp
sbb
mov
and
push
add
and
jae
jae
fcom
in
sbb
hlt
insb
fisubrs
sbb
adc
fwait
mov
gs
or
push
mov
stos
test
xchg
xor
punpckhwd
lret
mov
ss
arpl
mov
push
mulb
in
aad
xchg
mov
add
push
xchg
pop
filds
and
jge
testl
mov
aam
cmp
pop
add
add
or
dec
push
cmp
sbb
add
cmp
adc
pop
mov
xor
jmp
or
xor
add
push
inc
xor
pop
cmp
xchg
out
ret
mov
ljmp
scas
icebp
bound
jg
scas
hlt
das
loopne
imul
inc
mov
repnz
mov
mov
cmpsb
add
and
aad
fimull
popa
push
cmp
rolb
cmp
ret
imul
xchg
jecxz
sbb
jmp
dec
xor
jmp
xchg
das
movsb
adc
lods
or
xor
fs
mov
cltd
mov
outsl
xchg
cmp
daa
push
js
mov
aam
mov
pop
aam
mov
das
pop
xchg
notb
mov
in
lds
and
imul
xorb
lret
movsl
loopne
fs
jbe
and
adc
cwtl
lcall
lods
sbb
sbb
mov
das
fs
orl
ret
add
stc
lods
xor
mov
shlb
push
add
add
iret
xchg
je
aam
loop
push
xchg
or
movsb
adc
testb
or
push
dec
adc
mov
xchg
sub
repz
pop
and
dec
fs
gs
repnz
fcmovne
sti
sub
sub
mov
sbb
cmc
sbb
popa
xorl
rcl
push
mov
insb
adc
xchg
cmp
popf
pop
dec
int3
pop
adc
jle
sub
jno
inc
fwait
addr16
xor
sbb
ljmp
test
fs
xor
loope
out
mov
std
gs
fwait
ds
pusha
xor
popa
repz
pop
or
enter
sbb
aaa
push
mov
icebp
out
adc
jl
cmp
pop
addl
sub
and
loop
rcl
popf
pop
inc
cltd
shr
cmc
xchg
cmp
dec
fidivrl
stos
notl
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
mov
adc
or
lods
and
add
cmp
push
xchg
ljmp
pop
xor
and
sbb
out
xor
insb
imul
mov
mov
or
fprem1
add
ret
js
pop
leave
push
jbe
int
dec
js
pop
jl
inc
xor
ret
push
dec
arpl
pushf
ret
lcall
stos
outsl
ds
xchg
inc
jno
jbe
and
pop
int3
cltd
xchg
push
decl
dec
rcll
sub
pop
pop
xor
cmp
or
jae
or
in
leave
aad
mov
addl
cmp
imul
or
sub
hlt
sbb
cwtl
leave
push
shrb
bound
mov
mov
pop
inc
inc
pop
mov
lret
lock
ljmp
cmpsl
test
outsl
fidivs
mov
xor
cs
in
jb
add
add
in
out
stos
jge
or
stc
in
pop
and
add
popf
sbb
sub
cmpsb
ljmp
xor
and
into
mov
xor
pusha
xor
out
mov
cmovbe
and
pop
xchg
jmp
dec
outsb
fisttpll
xchg
inc
and
push
xor
rolb
xchg
jno
stc
les
mov
lds
mull
cmpsb
leave
xchg
test
mulb
enter
jne
int3
inc
gs
xchg
push
les
in
xchg
dec
std
cmp
cmpb
or
mov
shrb
mov
xchg
fcoms
inc
mov
ds
in
xor
js
mov
xor
cwtl
mov
or
out
arpl
jl
and
loopne
jb
sahf
stc
sbb
xor
dec
push
imul
loope
add
shlb
jmp
jmp
loopne
inc
imul
add
dec
or
out
xchg
iret
push
aas
lea
in
bound
add
add
dec
enter
cltd
insb
mov
icebp
mov
xchg
fscale
mov
out
clc
dec
mov
rcll
push
or
sub
jp
mov
repnz
cmp
mov
lcall
dec
push
daa
dec
inc
lock
adc
pushf
pop
out
fisubrl
popa
mov
mov
dec
std
pusha
enter
in
nop
or
and
into
adc
imul
daa
sbbb
loopne
lods
je
push
gs
xor
sbb
leave
or
fcomip
push
xchg
jnp
jbe
enter
fsqrt
dec
adc
jns
dec
and
push
stc
loopne
jl
pop
xchg
mov
jmp
or
pop
jo
mov
incl
sub
addr16
jmp
sbb
or
xchg
enter
cmpsb
add
repnz
pop
pop
ss
out
loope
xor
shl
xchg
mov
test
add
in
add
cmp
out
loope
jns
mov
and
add
std
mov
pop
xchg
scas
push
pushf
mov
pop
xor
cmp
shrl
jns
ret
in
add
xor
inc
add
out
cmpsb
add
inc
jge
push
mov
xchg
call
mov
mov
nop
add
and
sub
push
mov
ljmp
out
int3
ss
iret
sbb
xchg
aaa
xor
jnp
push
push
stc
ss
repz
sub
outsb
imulb
dec
loopne
mov
dec
cli
or
push
mov
int3
iret
fwait
xor
pop
dec
push
fsubl
mov
push
or
xor
or
push
push
in
add
push
test
push
mov
aad
xlat
loope
jns
jle
fstp
add
lcall
xor
imul
pop
in
out
and
push
push
add
cmp
loope
call
mov
add
add
lods
jg
push
mov
jne
imul
add
sbb
fcmove
pop
mov
call
loope
push
and
push
dec
es
pop
sub
data16
sub
ja
loope
sbb
and
inc
jne
dec
clc
sub
call
test
jle
add
decb
add
hlt
ret
stos
mov
arpl
sub
mov
mov
mov
enter
mov
cmp
cmc
idivb
fists
sub
mov
dec
xorb
mov
lock
mov
cli
and
out
loop
test
inc
fidivs
or
lods
pop
mov
mov
int
jge
fadds
fs
js
ds
fists
mov
popf
jbe
mov
xlat
add
fstpl
or
pop
sub
inc
hlt
inc
mov
add
add
jg
cld
ret
add
mov
mov
add
mov
pop
es
sbb
cmp
push
cltd
rclb
add
rcrl
shrb
pop
es
test
cmp
push
jl
repnz
es
jae
aaa
xchg
sub
das
jge
or
nop
sbb
cmp
movsb
push
jge
inc
adc
dec
loop
lds
movl
mov
jbe
push
xchg
shll
lods
dec
push
enter
sbb
imul
out
inc
lods
and
xchg
lahf
neg
jnp
lcall
add
clc
sbb
sbb
pop
jno
jns
setp
ja
shrb
mov
cmc
dec
or
bound
pusha
in
shlb
pop
adc
pop
sub
dec
mov
orb
push
dec
hlt
inc
out
shlb
cmp
and
imul
daa
enter
sub
sarl
xchg
sldt
add
mov
iret
mov
and
jecxz
jbe
add
add
test
adc
mov
jecxz
test
sbb
dec
mov
orl
inc
scas
in
mov
loopne
lret
cmpsl
adcl
insl
cmp
mov
nop
outsl
add
dec
dec
jne
aaa
sbb
mov
mov
xchg
stos
xchg
add
movsb
jns
notb
xor
mov
aam
push
lea
xchg
int
jle
or
andl
pop
lds
inc
into
xor
mov
mov
jecxz
dec
fadds
dec
and
adc
or
adc
and
lcall
push
out
push
insl
ja
mov
lea
add
jb
add
mov
test
int
xchg
sahf
pop
sbb
das
dec
pop
adc
outsb
scas
xor
cli
pushf
jg
mov
pop
pop
inc
fidivl
test
add
mov
jg
arpl
scas
and
jnp
add
add
cmp
xlat
xlat
in
testl
mov
ljmp
xchg
xchg
sub
lods
daa
inc
push
jmp
out
xchg
xlat
push
and
pop
out
or
jbe
adc
inc
add
loope
loop
in
pushf
dec
pop
sub
mov
mov
ja
push
sbb
cmp
lcall
enter
dec
or
jne
or
incl
mov
jae
hlt
mov
pop
stos
mov
fs
idivl
jl
dec
pop
rclb
repnz
lcall
xchg
mov
loopne
pop
stos
sti
popa
daa
or
ret
cmp
cs
jb
popf
neg
cmp
out
js
pop
sbb
dec
pop
arpl
add
fnstenv
sub
sbb
lock
in
add
jle
movsb
xor
xchg
ja
fwait
inc
pop
scas
pusha
sub
push
adc
inc
and
shlb
cli
clc
cli
clc
sarb
sti
mov
js
andb
add
in
xor
jb
fsubl
fwait
jg
sbb
mov
test
lcall
pop
dec
sub
stos
jmp
adcb
fs
xchg
adc
test
cmp
jo
add
roll
in
and
neg
jb
rcr
xchg
sbb
mov
movsb
leave
sbb
cmpsl
movsb
cmpsl
ljmp
mov
mov
arpl
sti
ja
test
insb
sub
les
stc
mov
xchg
aad
hlt
adc
pop
adc
dec
or
mov
imul
cmp
adc
cmc
scas
mov
lahf
shrl
inc
pop
push
jbe
loop
push
add
imul
and
out
cwtl
pop
pop
mov
inc
andl
xor
jg
rcr
xchg
out
sbb
add
and
mov
ds
pop
push
fstl
add
jnp
out
mov
xor
add
push
mov
movsl
rcl
jg
adc
es
add
xor
loope
mov
push
das
imul
jbe
jle
stos
adc
imulb
shr
jae
jg
sbb
pop
cmp
scas
int
push
in
pushf
xor
add
cwtl
ljmp
inc
sbb
repz
repz
je
call
je
xbegin
movb
test
pop
ljmp
mov
adc
or
into
xorl
mov
lock
mov
push
dec
cmpsb
lcall
test
out
mov
push
push
test
jmp
repz
pop
pop
adcl
loope
adc
pop
cmp
cli
sahf
push
cmpsb
push
dec
sbb
xchg
lret
and
daa
dec
xor
in
sbb
repz
push
mov
push
ljmp
stc
out
fisubrl
nop
addb
add
fs
es
data16
insb
daa
mov
daa
adc
add
cmc
aas
inc
lret
mov
cmp
les
add
or
pop
cld
mov
sahf
pop
fisubl
mov
and
adc
enter
xlat
lahf
ret
dec
sbb
add
mov
mov
psubw
mov
mov
sub
and
aad
call
push
maskmovq
testl
push
add
add
xlat
mov
cmp
adc
push
jl
inc
jbe
lods
data16
int
movsl
fmull
cmp
pop
pusha
add
stc
negb
inc
jbe
jbe
inc
or
and
js
outsb
scas
pop
pushf
mov
ljmp
sbb
or
rcll
pop
jne
ljmp
push
in
ja
popf
int
mov
xor
jae
or
cmp
pusha
lock
adc
adc
cld
sahf
iret
pop
testl
add
clc
mov
fldcw
add
ret
add
add
jmp
mov
mov
stos
or
test
mov
gs
dec
jo
xorl
add
test
iret
mov
fs
xchg
xchg
lcall
rcpps
xor
mov
repz
xchg
lret
scas
add
xchg
and
pop
fcoms
in
ljmp
mov
dec
stos
mov
or
xor
fiadds
add
outsl
inc
inc
lds
mov
outsl
xchg
jge
cmp
pop
lret
fcompl
lods
sti
lahf
test
dec
stos
pop
xchg
cltd
xchg
insl
cmp
imul
jge
mov
sub
and
clc
mov
mulb
test
xor
sahf
jo
adc
cmpsb
xchg
shll
aaa
mov
lods
dec
push
push
orl
push
cmpsl
es
repz
xor
add
add
and
push
sti
cmpsl
enter
push
push
sub
add
lcall
mov
loope
stc
dec
int
cs
cmc
jge
dec
ficompl
fsubr
mov
loop
ss
loopne
cltd
jb
pop
sub
pop
fcompl
cmpsb
scas
sti
imul
and
adc
sbb
or
mulb
sub
xor
les
adc
pop
andb
add
jle
imul
mov
ret
ret
into
data16
adc
lock
push
ja
test
cmp
xchg
into
push
dec
jmp
std
mov
push
mov
and
sbb
xor
cmp
pop
mov
fdivr
jmp
fstp
std
popf
jo
mov
mov
push
les
add
or
pop
stos
push
fwait
push
mov
cmpsl
xor
js
js
push
mov
lea
push
mul
push
and
and
stos
jnp
lods
jnp
or
jno
dec
inc
sahf
xchg
xchg
movsbl
add
add
mov
std
mov
dec
push
jmp
enter
add
add
repnz
jp
jno
nop
inc
jne
imull
mov
fdivrs
cmpsl
ret
lret
in
mov
mov
pop
je
insl
hlt
rcrb
pop
pop
sbbw
push
in
stc
ficomps
cmpsl
pop
sub
xchg
push
ret
mov
sub
mov
jmp
jns
test
xchg
sub
mov
add
and
and
pop
shl
cmc
sbb
push
clc
ficompl
daa
jle
push
cmp
shll
or
xor
and
cmp
push
xchg
dec
jnp
mov
call
pop
scas
scas
pushf
cmp
dec
aaa
fimuls
and
push
cmp
push
push
in
mov
cmp
cmp
xchg
pop
pop
sub
sbb
push
enter
xchg
fistps
int3
cmpsl
pop
add
push
mov
sub
lret
xchg
lea
mov
in
xor
cmpsl
lret
cmp
in
sbb
lds
xchg
and
inc
and
lcall
add
add
lahf
add
lods
cli
cmpsb
dec
jg
shll
std
inc
sbb
lret
or
roll
sub
mov
mov
sbb
out
leave
daa
leave
xchg
cli
test
mov
mov
sub
addr16
hlt
push
and
out
aad
xchg
sub
mov
dec
pusha
inc
popf
shll
outsb
int
push
xor
xchg
or
adc
repz
outsl
sbb
lret
xchg
xchg
sbb
sub
mov
dec
imul
int
gs
mov
in
cmovo
fdivl
xor
gs
cmp
cld
sbb
stos
lods
ret
pop
push
rep
ret
pop
and
loop
cmp
ret
pop
lret
inc
enter
mov
int
test
clc
adc
xlat
loop
fldcw
iret
xchg
inc
inc
pop
xor
out
xchg
cmp
lea
scas
inc
jb
push
pop
jae
xor
mov
add
fiaddl
ret
ficomps
cmp
lahf
insl
popa
mov
add
mov
cmp
shrb
xor
or
iret
cltd
or
cmp
repz
lock
xor
add
mov
popf
icebp
js
sbb
jb
lcall
or
dec
ja
leave
xor
xchg
std
adc
sub
fs
fdivl
out
sti
mov
and
daa
sub
aad
test
into
out
mov
sbb
and
mov
inc
int
and
add
in
inc
mov
sbbl
test
orb
inc
xchg
subl
fs
ss
fidivl
xorl
pushf
cltd
xor
xor
xor
fs
xor
mov
sub
mov
fistpl
mov
int
sbb
pop
out
test
rclb
dec
movl
add
arpl
ja
sub
add
into
dec
test
add
add
mov
lods
outsb
dec
movd
rcrb
sarl
xchg
mov
add
push
lcall
cmc
inc
mov
xor
nop
test
sub
pop
fildl
addl
mov
hlt
jns
dec
inc
and
dec
ret
cmpsl
fidivl
mov
xor
pop
mov
int
decb
das
fsubrl
mov
test
push
jae
in
lahf
sbb
push
sub
sbbb
js
mov
mov
dec
test
lea
nop
mov
inc
in
les
mov
xor
sahf
nop
cwtl
dec
movb
gs
leave
push
jg
push
sbb
and
inc
mov
aad
cmp
xchg
xor
inc
cmp
jns
pop
daa
and
insb
inc
ss
into
arpl
stc
dec
idivb
mov
dec
jae
repz
add
lock
mov
or
sbb
mov
add
movb
fcmovu
lods
leave
lret
jnp
adc
lcall
push
int3
mov
xchg
adc
fldenv
cld
inc
lahf
aaa
xchg
or
ss
xor
add
mov
cmc
nop
xchg
pop
loopne
or
loopne
adc
dec
dec
nop
sbb
in
fnstcw
int3
arpl
in
pop
inc
pop
adc
sbb
fsubl
mov
rclb
pushf
arpl
es
mov
lock
jae
jg
push
or
nop
mov
scas
mov
cmp
sbb
mov
sub
inc
cmp
inc
je
fdivs
fdivs
fimuls
jg
jne
enter
dec
dec
inc
fwait
pusha
stos
xchg
icebp
or
cmp
mov
mov
bound
xor
inc
lea
sbb
and
in
xor
cmp
mov
lahf
mov
mov
mov
add
sub
sti
pop
jge
neg
hlt
add
pop
mov
add
add
inc
cld
loope
mov
and
scas
or
xor
push
stos
add
xor
push
sub
ret
and
in
addr16
or
mov
inc
sahf
jmp
mov
adc
popf
cmp
or
mov
not
cs
rcll
std
jle
pop
push
and
mov
dec
fnsave
push
in
repz
mov
mov
sub
imul
insl
adc
mov
sahf
shr
mov
and
mov
add
arpl
imulb
fnstcw
fimull
stc
loopne
imull
lcall
nop
es
in
stos
fistps
xor
mov
add
mov
cmp
add
andl
lods
in
jbe
stos
cmp
sti
jnp
aas
aas
cmpsl
push
pop
icebp
push
mov
adc
jmp
adc
xor
pop
push
mov
and
xor
add
pusha
cltd
fsub
std
in
popf
in
stc
jmp
pop
loopne
xchg
mov
add
add
cwtl
or
jle
imull
out
pop
dec
jl
je
fs
mov
clc
and
jb
cs
ss
push
dec
pop
lcall
arpl
adcb
xor
mov
popa
lock
mov
cmp
icebp
push
lea
loopne
and
push
enter
jle
and
stc
fsts
mov
inc
jo
jg
dec
ss
clc
fsub
loop
adc
inc
mov
push
cmpl
scas
adc
xchg
ret
sbb
mov
or
push
xor
icebp
jecxz
fwait
cmp
jbe
mov
shr
jmp
xor
sub
cmp
popf
jmp
mov
dec
jno
jae
imul
inc
jae
xor
cmpb
jmp
pop
add
into
in
xor
xor
cltd
nop
movsl
int
mov
or
xchg
gs
insb
pop
inc
inc
add
fcoml
test
jns,pt
push
sub
add
jp
jnp
sti
xchg
jle
jp
lods
inc
inc
dec
and
xor
add
lret
mov
and
mov
pop
mov
or
adc
repnz
mov
cmp
insl
arpl
sbb
jmp
mov
faddl
dec
push
xlat
fimull
fidivl
sahf
cwtl
mov
xchg
mov
sub
sti
int
adc
jge
cmp
mov
mov
pop
shld
push
sub
push
scas
jl
pop
aaa
ret
movsb
pop
mov
mov
cwtl
dec
stc
mov
adc
bound
stc
pop
sub
mov
push
shl
aas
push
in
sub
adcb
add
jl
push
sub
lret
ret
repz
rcll
add
lcall
scas
push
inc
movsl
pop
jae
xchg
jmp
sub
and
movsl
xchg
fstpt
lret
ljmp
sub
popa
cmp
arpl
adc
cli
jl
movsb
sub
add
add
push
sti
decb
mov
ja
xor
add
adc
incl
cmpl
lret
add
dec
add
fdivs
ja
fcmove
fisttpl
imul
xchg
fldcw
pop
pop
and
outsl
gs
mov
js
pop
or
cmpsb
lods
dec
addr16
dec
adc
andl
leave
pop
and
mov
push
jle
outsl
inc
inc
mov
pusha
mov
pushf
mov
shrb
or
adc
lahf
test
push
dec
stos
mov
mov
xchg
jae
insl
outsb
jnp
fdivr
leave
hlt
test
mov
mov
mov
in
push
daa
cmp
or
cmpsl
jb
mov
inc
rcrl
cmp
xchg
inc
cltd
pop
inc
out
fldenv
iret
jge
lcall
pop
adc
jg
inc
mov
fistl
mov
lret
stc
mov
lahf
iret
add
add
cmp
xor
hlt
push
or
mov
add
pop
movsl
ret
ja
mov
pusha
adc
fistl
xchg
repnz
cld
std
dec
xor
cmpsb
lds
jl
lahf
xchg
bound
dec
inc
mov
lods
into
fadd
fstpl
sbb
test
out
sub
inc
mov
fcomip
and
mov
sbb
movsb
dec
in
mull
adc
jne
imul
lods
lods
adc
or
lods
cwtl
push
sub
data16
pop
jne
inc
mov
leave
in
mov
add
pop
cmpsl
sbb
lret
aaa
dec
pop
or
xchg
mov
sarb
inc
fmul
lret
out
lahf
aas
lahf
fwait
lret
pop
insb
subb
push
mov
sbb
scas
sub
sti
or
pop
push
lods
and
scas
xor
ds
dec
movsl
jmp
jmp
and
mov
add
sbb
pop
adc
out
or
pop
cmp
mov
loope
adc
mov
add
add
add
cmp
jge
stos
lea
shrb
or
add
add
lods
cmp
lods
aam
in
popf
movsl
lret
sub
xchg
jle
iret
test
xor
fcmove
jbe
icebp
das
pushf
outsl
nop
movsb
and
mov
rcrb
inc
rolb
les
add
leave
mov
pusha
mov
jp
or
cld
ret
fwait
sub
sub
mov
test
mov
movsb
jo
mov
or
xor
jb
in
mov
cmp
out
int3
pop
mov
xchg
mov
push
xchg
inc
leave
push
dec
jge
outsl
pop
mov
fildl
sbb
dec
cmpsl
repnz
daa
pushf
mov
pushf
test
das
pop
pop
xchg
mov
enter
sbb
push
and
test
mov
xchg
loop
sbbl
ljmp
add
mov
xchg
pop
outsl
xor
and
dec
add
add
rclb
nop
lcall
aaa
add
add
pusha
xchg
jmp
sub
adc
mov
add
hlt
je
sti
dec
mov
xchg
testl
mov
sahf
and
lds
push
jp
jno
dec
pop
cmp
mov
shll
push
rol
jb
pop
cmp
inc
jmp
and
cmp
mov
les
mov
inc
hlt
mov
pop
imul
es
outsb
fisttps
insl
or
push
lock
add
fldcw
mov
cltd
fsub
mov
repnz
or
mov
push
rorb
jge
push
xchg
push
outsb
leave
adc
sti
push
xor
ds
dec
jge
movsb
inc
adc
dec
xor
or
test
dec
fistl
mov
inc
setno
add
dec
sbb
test
ret
and
aas
ret
xchg
insb
pop
dec
or
add
add
jbe
idivl
or
rclb
add
cltd
inc
mov
cmpsb
jnp
jge
and
addr16
insl
cld
jp
popa
inc
xor
leave
mov
movsl
add
pop
fs
push
fcomip
in
add
fcomp
add
and
ja,pn
xchg
stc
fistl
ds
sahf
push
xor
test
push
xchg
out
in
aas
push
and
leave
adc
or
jge
push
cmpsb
ds
popf
pop
inc
fs
lock
xor
adc
jnp
inc
dec
sub
fisttpl
fisubrs
xchg
das
jg
gs
scas
fsub
inc
inc
insb
jl
pop
std
adc
sub
xchg
das
xchg
add
mov
shll
jmp
jg
mov
mov
mov
push
push
ret
lock
aam
ljmp
mov
cld
imul
rcll
sub
test
ret
out
lock
xor
add
add
outsb
sub
stos
fs
jmp
leave
aas
dec
xchg
movsb
fidivrl
add
add
push
cmp
lahf
rorb
sub
adc
xor
or
cmp
ss
pusha
and
dec
js
jae
jle
xchg
push
aaa
int
dec
out
jbe
aad
lret
dec
pusha
inc
outsl
push
pop
stos
dec
clc
sbb
jecxz
dec
pop
fiadds
mov
xchg
jp
dec
fcoms
jmp
inc
sbb
jp
outsb
jbe
test
add
pushl
das
pushf
mov
rclb
cmp
sub
daa
mov
push
testb
ficoml
jne
cs
lret
pusha
imul
add
push
jae
into
and
push
fimull
in
lods
fldt
or
clc
and
inc
pop
mov
in
add
xchg
xchg
aad
sbb
jae
out
insb
and
jno
test
jnp
test
sbb
add
les
scas
fistpll
outsl
gs
clc
xlat
push
fistpll
add
add
subb
add
movsl
ret
scas
push
sbb
push
xchg
mov
add
jmp
mov
add
stc
pop
je
mov
addb
stos
mov
mov
int
lahf
pop
jne
loope
lods
pop
movl
mov
mov
xlat
sub
in
out
cmpb
lock
xchg
jnp
subb
mov
xchg
jno
adc
or
adc
mov
or
push
add
aas
dec
imul
jl
fwait
mov
js
jecxz
arpl
xor
fsubl
es
aad
in
cmp
loopne
or
rcr
cmc
fcoml
add
jge
xchg
pop
xor
and
dec
sbb
jmp
mov
jne
hlt
xchg
ja
jns
sti
das
cmp
xlat
adc
xchg
xchg
cmp
push
rep
xchg
jno
xor
add
add
cmp
movsb
push
sbb
insb
clc
mov
cmp
add
or
dec
test
mov
add
ljmp
inc
xchg
out
or
xor
aas
in
cmp
add
icebp
stos
mov
inc
daa
pop
cmp
ds
sub
testb
dec
mov
mov
jecxz
mov
paddw
pop
jle
push
popa
pop
call
jns
mov
mov
xor
loop
push
dec
out
mov
jp
pop
xor
cmc
adc
out
mov
jmp
jae
insb
cs
add
cmpsb
and
and
imul
mov
push
or
xor
and
cwtl
stos
sub
jmp
movsb
dec
mov
push
sub
sti
popa
stos
cmp
out
xor
adcb
kmovw
mov
push
cmp
add
outsl
lret
mov
out
jmp
adc
jmp
add
add
sbb
dec
int
cmpb
or
sub
push
jp
adc
fs
dec
out
stos
inc
xor
xorb
ud1
call
sub
jp
pop
pushf
mov
hlt
insb
pop
pop
inc
rorb
stos
mov
xor
imul
add
inc
aaa
scas
xchg
and
adc
aas
adc
test
call
stc
adc
add
scas
in
lods
xor
jmp
popa
sbb
mov
dec
or
lods
mov
mov
mov
push
test
nop
scas
cltd
popf
jg
cli
and
stos
lods
lret
mov
sub
dec
push
lods
cmp
and
loope
repz
test
das
push
gs
mov
jg
lods
sub
push
movsb
loopne
cmc
xchg
cld
in
cmp
stos
adc
push
loope
mov
pop
sub
push
cmc
mov
mov
mov
faddl
add
add
repz
cmp
lods
repz
mov
or
cltd
mov
cmp
add
mov
push
pushf
cmp
sti
adc
imul
dec
or
aam
ror
shrl
popa
sub
dec
pop
push
sbb
js
xor
pop
sahf
inc
cltd
mov
cmpsb
test
leave
dec
jbe
leave
das
jb
xor
sbb
dec
lods
decl
out
fld
mov
push
jecxz
xchg
push
ljmp
pop
inc
mov
ret
mov
je
adcl
adc
push
out
inc
mov
out
test
ret
mov
ds
inc
push
dec
or
xchg
mov
adc
mov
movsl
mov
les
jg
xchg
jne
dec
sbb
push
push
mov
xor
xorl
sub
les
or
into
js
test
inc
pusha
js
xchg
cwtl
push
std
lahf
or
xor
mov
and
lods
inc
fsts
add
daa
push
cld
push
std
jmp
dec
push
mov
add
icebp
cs
add
loope
push
int
dec
loope
lods
or
pop
pop
shlb
sbb
mov
jo
xchg
mov
inc
movsl
lret
ror
dec
daa
js
jmp
repz
sbb
dec
iret
leave
adc
sbbl
mov
mov
cmp
aad
jb
add
int3
xchg
sbb
dec
idivb
hlt
pop
cld
pop
jo
cmp
lret
popa
pusha
mov
mov
push
aad
pop
pop
sub
cltd
jae
mov
inc
push
lods
pop
cmp
push
leave
mov
sti
or
dec
xchg
adc
ljmp
add
dec
lods
adc
xor
cmp
xchg
xor
jne
mov
pusha
sbbl
xor
jecxz
xchg
out
xchg
leave
adc
ja
stos
mov
sub
xor
loopne
sbb
push
int
insb
xor
xchg
mov
dec
push
add
sbb
dec
push
out
aad
or
add
add
inc
mov
sub
cmp
das
inc
int3
adc
or
cmp
arpl
xchg
rorl
cli
gs
push
bound
outsl
es
mov
packssdw
flds
mov
leave
outsb
popf
nop
pop
insb
push
into
into
mov
adc
andb
dec
mov
mov
std
data16
xor
cmp
movups
sbb
int
leave
jb
aad
cli
out
repz
mov
mov
mov
and
fistpll
mov
lea
stc
inc
dec
mov
ljmp
xchg
popa
mov
ss
lods
scas
stc
xchg
mov
das
push
xchg
scas
mov
shl
inc
loopne
aam
jle
sbb
pop
gs
lods
xchg
js
pop
lds
mov
cltd
icebp
inc
das
cld
adc
cwtl
mov
xchg
pop
lods
aad
lock
out
in
loop
mov
add
stos
add
push
mov
or
adc
cmp
add
add
out
fldenv
jne
sub
popf
push
inc
xor
pop
out
fdivr
jmp
imul
pop
loopne
jl
dec
popa
sbbb
insb
rolb
pop
sub
in
cld
std
xor
sub
aas
adc
pushf
mov
pop
mov
push
pushf
inc
dec
ret
push
shrl
dec
shll
dec
ret
and
sahf
pushl
call
mov
add
es
popa
mov
xor
ljmp
dec
fiadds
inc
sbb
mov
pop
xor
cmp
in
std
cs
lret
xor
popa
mov
mov
fldenv
dec
cs
pop
fnstcw
insb
stos
imulb
pop
clc
loope,pn
cmc
in
sub
or
push
or
add
jo
jnp
adc
jg
lods
or
je
xchg
scas
mov
nop
nop
imul
dec
js
push
mov
xor
cmp
call
mov
add
add
jg
xchg
orl
enter
add
xlat
pop
popa
push
out
fists
ds
jmp
xchg
fwait
inc
ss
xchg
lods
add
dec
lcall
pop
and
pop
pop
sbb
or
jno
js
repnz
es
mov
loop
lret
push
movsb
mov
mov
xchg
aad
fwait
mov
mov
mov
jmp
mov
inc
cmpsb
jne
pop
lods
jo
jnp
jl
roll
mov
inc
cmpsl
loopne
xor
jecxz
jp
rcrb
xor
cmpsb
das
dec
xor
nop
clc
fisttps
pusha
inc
aam
lahf
notb
loopne
leave
mov
sti
in
popf
insb
jne
inc
mov
pop
jge
adc
cmp
inc
test
fwait
testb
scas
jmp
or
scas
add
enter
popa
add
jecxz
inc
inc
mov
mov
fisubl
push
mov
sub
lcallw
or
and
out
fistl
push
pop
mov
mov
and
dec
lret
jmp
imul
aaa
je
nop
in
or
inc
add
add
jae
push
stc
inc
push
shlb
jl
mov
and
mov
imulb
pop
shll
xchg
sbb
icebp
dec
jle
xor
inc
and
push
push
clc
leave
xor
les
xchg
divl
hlt
and
sbb
adc
fists
cwtl
das
push
push
pop
cmp
outsl
outsl
das
ja
fld
sbb
xchg
mov
jno
push
and
mov
adc
ret
je
in
scas
jnp
js
pminsw
aaa
clc
cmpsb
mov
aad
push
jge
inc
mov
push
dec
std
sub
sti
call
and
insb
test
scas
push
mov
and
das
insb
or
sbb
movsb
mov
testl
xchg
addr16
and
dec
fsts
aam
out
scas
es
js,pn
cmc
mov
cmc
mov
imul
add
push
add
hlt
fistpl
jmp
add
lds
cmc
cwtl
xchg
push
sub
mov
add
add
push
add
jns
inc
jo
out
push
dec
out
add
out
xchg
jmp
icebp
mov
mov
inc
fsubs
mov
das
ret
mov
pushl
push
aas
push
jne,pt
in
mov
jnp
sub
sub
arpl
insb
push
lea
mov
shl
add
rcl
dec
lea
adc
inc
mov
das
test
stos
push
adc
mov
stc
or
mov
sahf
xchg
sahf
mov
add
lcall
mov
mov
imul
jle
push
aas
mov
mov
lret
stos
sbb
popf
int3
loope
dec
mov
roll
or
or
jp
adc
xor
loope
add
xor
insl
lahf
cli
test
adc
das
mov
shlb
repnz
jb
outsl
sub
sbb
add
add
jns
xor
jg
adc
inc
adc
add
sbb
dec
fldenv
push
sbb
das
sbb
xor
mov
xchg
jnp
test
cmp
sub
imul
rolb
jbe
adc
leave
and
nop
test
repnz
rcrb
cmpsl
sub
add
imul
scas
pop
mov
inc
clc
adc
cmc
xchg
test
xor
sub
aam
pushf
cmp
sbb
aas
xorb
mov
imul
jb
jns
mov
lret
cmpsb
adc
mov
sub
mov
jecxz
sbb
in
adc
mov
push
test
inc
add
mov
mov
aam
sbb
aas
push
jg
testb
bound
dec
mov
cmp
add
mov
lock
dec
fs
or
gs
pop
into
lea
add
js
ret
jg
decl
rol
fwait
xor
popf
push
inc
add
add
mov
mov
inc
in
mov
getsec
sub
int
xlat
fistpl
loop
leave
inc
xchg
das
jns
ss
lock
lahf
out
sub
aad
and
sahf
ja
gs
pushf
test
mov
sarb
xchg
cld
idivb
push
insb
xchg
xchg
insb
out
loopne
jle
dec
cmp
std
cmc
into
adc
test
out
adcl
les
in
sbb
and
pop
ljmp
test
adc
dec
push
jo
call
in
jge
enter
fcomip
mov
repz
outsl
and
scas
xchg
push
xchg
xor
mov
jb
nop
cmp
hlt
shl
xchg
es
and
or
cs
lcall
sub
inc
mov
loope
pop
push
push
int3
sarb
fcoml
loopne
inc
xor
inc
sub
repnz
lea
xor
or
scas
xchg
adc
cmp
add
das
mov
out
aad
in
popa
sbb
add
add
pop
xchg
fisttpll
and
imul
jnp
sub
mov
mov
mov
jle
daa
xchg
jno
outsl
jp
ss
add
mov
adc
int
vpcomq
sbb
adc
sbb
sti
sub
dec
jg
ja
imul
in
or
insl
lea
mov
cmpl
std
outsl
fisubrs
jnp
aad
lds
sbb
jecxz
inc
popf
xchg
out
sub
add
jmp
je
add
ja
or
pushf
and
scas
cmp
push
xor
push
cwtl
mov
xor
jle
dec
daa
xchg
mov
push
push
jmp
jmp
and
jmp
sub
dec
ljmp
cmp
mov
inc
daa
gs
data16
jg
arpl
stos
imul
test
sbb
lret
add
add
hlt
gs
dec
adc
inc
jae
dec
add
add
in
ljmp
xor
mov
lock
sbb
aas
pop
add
popa
cwtl
mov
test
out
sub
sub
shr
leave
pop
popf
push
popa
or
js
test
lods
mov
push
rclb
xchg
xchg
cmp
into
cmp
lahf
pop
adc
shlb
dec
je
xchg
inc
mov
dec
mov
mov
pop
incb
imul
popf
loopne
mov
and
ljmp
or
inc
cmpl
shlb
inc
out
insb
loop
and
adc
sbb
mov
mov
add
pop
mov
fstps
shrb
ret
adc
cltd
sbb
je
in
or
push
cli
cmc
mov
ljmp
xor
jle
and
cmc
add
outsb
xchg
std
and
dec
ucomiss
ret
add
add
aas
gs
pop
repnz
dec
add
add
push
mov
arpl
test
dec
inc
mov
repnz
sub
adc
jb
push
mov
dec
mov
lods
xchg
test
in
sahf
insl
decb
dec
jl
jae
cmp
adc
shrb
aas
jl
scas
lock
ja
pop
xor
rdpmc
arpl
add
sub
scas
movsb
add
jle
mov
test
xlat
movsb
test
sub
nop
fnstsw
aad
lock
inc
adcl
add
and
lret
out
mov
lods
cmpsl
ja
imull
insl
out
jb
ffreep
sbb
add
mov
cwtl
mov
mov
adc
sbb
sub
pushf
stos
cmp
dec
push
dec
lcall
bound
add
stc
out
test
ror
cmpsb
bound
imul
xchg
cmp
std
sbb
cwtl
movl
add
mov
out
fisttpll
lock
fisubl
add
pop
call
sub
roll
fnstcw
dec
je
in
sti
fs
or
pusha
popf
outsb
pop
rorb
out
jns
cwtl
fwait
pop
popf
add
inc
incl
push
fwait
inc
inc
xor
sub
dec
je
mov
sub
cmpb
ss
jne
mov
std
jns
loope
cmp
xor
push
lods
cli
fwait
sbb
loope
pop
sbb
loop
xor
fwait
mov
pop
cmp
push
jle
test
jbe
mov
popf
xchg
dec
in
cmp
nop
push
repnz
int3
mov
push
out
iret
lret
sti
xchg
stos
dec
fwait
negl
cmp
mov
dec
lcall
stos
xchg
adc
jecxz
add
jno
mov
and
and
into
stc
imul
jnp
lds
js
mov
lods
repz
jecxz
les
loopne
fiaddl
mov
mov
sub
xchg
arpl
ja
test
add
fildll
mov
ljmp
add
add
mov
and
inc
insl
mov
mov
pusha
out
aad
divl
cltd
testl
cmp
repnz
lret
incb
sbb
loop
dec
dec
and
xchg
pop
mov
push
jmp
shll
nop
sarb
mov
dec
xchg
mov
daa
and
add
add
in
dec
and
mov
loop
enter
jg
xchg
dec
es
inc
xchg
stos
jb
jo
leave
out
xchg
cli
divl
pop
inc
push
adc
insl
lret
mov
scas
sbb
sub
xor
dec
inc
mov
mov
jge
in
dec
push
and
mov
aam
repnz
push
mov
push
fucom
jo
test
xor
fdivp
outsb
cmpxchg
lret
adc
mov
mov
or
rcr
xchg
call
xlat
push
xor
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
ss
addr16
add
add
shll
rorl
outsl
push
shll
mov
lods
stc
repz
pop
fnstcw
xor
mov
fidivs
or
and
add
pop
jmp
jnp
scas
cmp
lods
pushf
mov
sub
fisttps
push
repz
sub
loope
popf
sbb
shll
push
dec
cwtl
and
cmpsl
std
push
fnstsw
addr16
inc
stos
gs
dec
fdivs
dec
xchg
shr
loope
push
and
and
fwait
pop
sub
lea
xor
jg
mov
in
dec
sub
loopne
or
xchg
pop
sahf
insl
sub
sbb
test
movsl
sub
xor
ja
xchg
movsl
cwtl
pop
ja
subl
int3
das
outsl
mov
test
or
aam
mov
lahf
inc
and
fidivs
loop
push
dec
mov
test
mov
loope
push
add
add
imul
out
mov
mov
aas
sub
dec
add
add
add
jmp
leave
add
xchg
lret
sub
incl
bound
popa
add
fisubs
jg
mov
popa
pop
cs
and
adc
add
or
mov
pusha
xchg
call
sbb
dec
add
xlat
pop
shrl
aaa
scas
insb
testb
pop
aad
clc
push
push
fsubl
push
xorb
or
mov
mov
adc
push
add
push
push
aaa
mov
out
push
mov
rolb
int
push
xor
call
xchg
insb
int3
sub
shl
cwtl
and
pop
cltd
out
mov
test
xlat
cmpsl
shll
ja
xchg
dec
daa
adc
push
fsubrl
outsb
pop
mov
push
stos
aam
pop
xlat
outsl
jb
cmp
lock
outsl
fs
pop
jns
sbb
adc
adc
mov
and
addl
lcall
stos
or
push
repnz
or
sbb
add
add
dec
stc
mov
ljmp
ds
add
add
push
adc
ret
in
mov
lret
sarb
ss
adc
inc
fucomi
adc
es
mov
int
into
and
mov
or
jl
xor
loope
call
mov
and
dec
push
mov
and
fisubrl
repz
fisttpll
add
cld
mov
es
gs
pop
adc
cs
push
mov
jmp
xor
int3
je
dec
or
mov
cwtl
cmp
stos
outsb
mov
or
bound
lret
ljmp
inc
cli
cmp
xchg
inc
aaa
out
adc
push
xchg
xchg
test
jbe
cmp
ljmp
stos
xchg
jb
arpl
push
mov
push
andb
sbb
xchg
lds
dec
jno
inc
cmc
fdivs
sarb
inc
nop
add
add
add
jg
cld
lcall
filds
add
add
lods
das
call
decb
leave
inc
push
mov
hlt
rcl
mov
ss
pop
iret
or
dec
das
inc
push
xor
xor
xchg
dec
pop
adcl
xchg
fnsave
push
and
pop
add
jmp
inc
xchg
iret
fs
and
dec
test
adc
mov
es
pop
scas
loope
rorl
xorl
es
sub
loope
sahf
jns
sub
cmp
out
subb
sub
jbe
push
pop
dec
pop
push
jg
dec
jg
into
jae
jmp
jne
push
hlt
adc
xor
lcall
mov
clc
and
movsb
dec
shll
std
or
inc
sti
jl
repnz
rcrl
or
movsb
mov
add
int
in
fcompl
mov
xlat
jecxz
enter
aas
add
adc
add
mov
xchg
mov
pop
sub
push
add
add
inc
mov
cmc
fdivrs
dec
xchg
jnp
mov
rclb
roll
xor
cmpsb
push
cs
outsl
lods
cmp
nop
aaa
loopne
popa
mov
jno
sti
mov
adc
fidivl
pop
xchg
pop
push
sub
movsb
cld
xlat
scas
lret
mov
push
xor
cmpsl
ljmp
fimull
mov
movsl
dec
xchg
in
sub
js
iret
dec
add
jp
lea
xchg
fst
or
jb
pop
and
push
jno
push
repnz
push
lods
and
and
pop
sbb
cmp
stos
std
cmp
xor
jns
adc
mov
sbb
sbb
xor
jno
out
jns
xchg
and
fidivrl
push
lahf
xor
mov
jo
js
inc
cmp
xchg
sbb
push
mov
sbb
cmpsl
das
add
add
inc
mov
push
push
jmp
push
mov
jno
push
add
add
jo
lds
sbb
jnp
or
stos
fcoml
popf
sbb
and
xchg
xor
jbe
insl
push
cli
xchg
vmptrst
stc
rolb
ret
lcall
std
xor
in
ret
repz
jnp
mov
add
daa
sbb
stc
cmpsl
xor
mov
lahf
ljmp
enter
inc
pushf
out
or
popa
aas
xchg
xchg
int3
pop
xchg
xchg
test
out
cltd
jl
ss
fiaddl
ds
and
ja
xor
lds
mov
js
push
std
or
aad
push
daa
fimull
mov
pop
les
mov
cmp
mov
mov
add
fneni(8087
cli
ja
jge
cld
adc
sub
rep
mov
pop
push
add
fsubrl
mov
out
cmp
ret
or
mov
test
push
push
add
add
xchg
lcall
or
mov
inc
jl
jno
sahf
add
pop
cmpsl
sub
int3
nop
mov
sbb
test
addr16
ja
outsb
push
shrb
outsb
int3
inc
inc
pop
xor
dec
jg
je
inc
mov
mov
xchg
int
cmp
cmovge
lea
jge
xor
xor
add
pusha
cld
ffreep
jmp
sti
stos
clc
fisubl
call
insl
mov
or
push
jecxz
xchg
aam
push
and
sub
iret
fdivrp
push
popa
adc
shr
ficomps
cmp
cmpsb
xor
adc
mov
jmp
ror
pop
pop
sub
mov
pop
ret
mov
mov
loopne
push
les
in
mov
push
mov
fistps
std
mov
bound
frstor
loope
movsb
shrb
stos
mov
add
push
shll
out
pop
pop
pushf
push
arpl
scas
fstl
add
add
inc
xchg
insb
call
add
pop
out
scas
mov
mov
dec
or
xchg
mov
mov
in
jg
and
test
addb
aad
in
jle
call
inc
sbbl
mov
xor
push
inc
add
aaa
add
mov
cmpsl
nop
subb
lea
and
lock
mulb
sbb
arpl
mov
andl
insl
jmp
gs
jecxz
ljmp
mov
movsb
mov
mov
cmp
lock
testb
jmp
hlt
imul
sbb
loope
scas
cmc
xor
sbb
xchg
orb
push
aas
lcall
mov
add
stc
push
cltd
adc
stos
sbb
add
add
out
lcall
hlt
mov
in
xchg
lcall
add
inc
cmpsl
xor
outsb
fisttpl
dec
paddb
cmp
cmpl
lea
jg
loopne
push
in
loope
jecxz
mov
aas
or
out
js
in
andl
stos
xor
pop
xchg
or
stc
call
push
out
pop
jbe
cmp
cmp
addb
fnstsw
daa
out
outsb
or
push
loop
lods
mov
xor
mov
xchg
pop
xchg
stc
inc
mov
fisttps
repnz
iret
xchg
inc
test
jecxz
subb
push
addr16
cmp
push
pop
pusha
jne
cmpsl
fsubrl
lcall
mov
das
ja
push
sar
sbb
jns
fs
xchg
xchg
sbb
repnz
xchg
xchg
lds
jbe
jo
dec
das
js
enter
xchg
aaa
mov
sbb
jp
in
cmpsb
mov
add
pop
push
or
fs
popa
mov
add
add
jbe
idiv
imul
jmp
lock
push
add
add
aas
or
stc
dec
cmp
mov
test
cmc
dec
dec
dec
adc
rcrb
in
outsb
shll
leave
add
xor
xchg
pop
hlt
jge
rol
aaa
jecxz
push
xchg
movl
das
fcomps
lods
add
fs
push
lock
rclb
inc
cmp
push
dec
fsts
sbb
xchg
xchg
fidivrl
nop
insl
outsl
cwtl
mov
cmpsl
scas
pop
or
aaa
cmp
imul
push
pop
mov
dec
pop
lcall
xor
test
mov
xor
pop
es
and
xor
mov
jl
in
movsb
mov
sub
subb
imul
cmp
stos
daa
mov
xor
aad
mov
mov
lods
pop
addb
fs
xchg
sarl
inc
adc
mov
pop
mov
add
add
fwait
cmp
stos
sarb
push
add
add
test
jne
ret
mov
jne
pop
and
sbb
push
mov
rcrl
fsubr
push
sub
shrl
das
outsl
and
outsb
in
jnp
nop
jno
mov
adc
xorb
pushf
inc
fildll
fwait
mov
dec
and
sub
dec
rolb
icebp
ljmp
xor
icebp
in
arpl
ss
imul
jmp
test
out
jecxz
cmp
lahf
and
jno
xchg
mov
pop
hlt
lock
push
sbb
flds
sub
out
stc
dec
adc
dec
inc
cmc
push
inc
mov
push
lods
mov
faddl
add
leave
sub
call
mov
cmpsb
fisttpl
dec
std
out
stc
in
out
push
imul
lods
push
call
push
sbb
ss
sub
adc
jns
out
add
inc
fadds
insb
sub
jo
rol
fisubl
popf
sbb
add
inc
push
clc
mov
and
hlt
bound
dec
mov
add
xor
ret
push
insb
pop
adc
jp
push
daa
add
xor
sbb
mov
je
shr
mov
push
clc
mov
push
outsb
pop
push
dec
push
addr16
add
xchg
pop
popa
xor
bound
add
pop
inc
dec
mov
xchg
or
in
das
fcoms
mov
inc
test
push
lea
xor
jnp
inc
scas
cmp
jb
xchg
push
leave
imul
aam
cwtl
cmpsb
inc
scas
pop
and
sbb
xchg
sbb
fs
insl
test
dec
aas
lods
dec
or
inc
mov
xchg
mov
push
icebp
stc
sahf
mov
and
bound
fmul
mov
test
loop
mov
mov
adc
loopne
inc
shl
sbb
push
xchg
orl
test
aad
jne
sub
call
popa
ret
les
and
cmc
jmp
add
add
shr
mov
arpl
jbe
jo
add
add
outsl
loopne
scas
mov
jle
mov
or
sbb
jno
jl
add
cli
adc
sarb
lods
fnsave
es
dec
enter
mov
push
and
or
cmpsb
sbb
sub
jb
out
and
testb
cmpl
stos
adc
sub
fidivs
xchg
shrl
neg
jne
sbb
and
xchg
jle
data16
push
icebp
cmp
stc
jp
into
fst
in
in
repnz
rorl
sbb
lock
xchg
mov
mov
les
adc
adc
jp
jp
clc
dec
add
mov
call
dec
xlat
testb
mov
loopne
and
pop
or
addr16
jge
mov
loop
icebp
xchg
mov
adc
inc
and
xchg
add
push
jge
add
add
mov
lds
aad
addr16
sbb
add
loope
andl
arpl
xor
sub
mov
cltd
data16
dec
mov
sahf
cmp
leave
cmp
movsl
xchg
cltd
cmp
or
adc
sbb
mov
or
jmp
pop
adc
inc
stos
add
cs
mov
out
cmpsb
adc
mov
loopne
mov
adc
mov
or
jo
sub
jecxz
mov
mov
andb
mov
add
sbb
andl
jbe
sbb
mov
adcl
out
xchg
inc
inc
insb
mov
push
pop
nop
xchg
xor
outsb
hlt
stos
pop
enter
xor
add
out
loope
mov
dec
mov
jl
cmpl
xchg
mov
out
ja
ds
and
rcll
outsl
mov
add
mov
and
das
cmp
pusha
mov
pop
add
add
xchg
lcall
mov
push
mov
int3
test
jnp
mov
adc
mov
pop
daa
or
lahf
pop
mov
add
bound
ret
iret
cwtl
fiaddl
pop
sbb
cwtl
mov
sub
jecxz
adc
add
or
stos
xchg
fdivrs
sbb
and
stc
lcall
sbb
loope
mov
inc
repz
xchg
dec
add
xor
cmp
mov
hlt
xchg
xchg
popf
mov
pusha
lahf
jmp
pop
push
adc
popl
je
lret
sub
adc
mov
into
mov
sbbb
jl
mov
dec
xchg
mov
jle
stos
icebp
test
mov
inc
cmpsl
inc
push
lods
inc
mov
mov
mov
cmp
addl
and
mov
repnz
insb
aam
add
add
movsb
jae
jnp
mov
ja
mov
cmpsl
ret
pop
add
add
pop
mov
sub
pop
xor
out
stc
imull
in
xor
cmp
imul
inc
mov
imul
fwait
es
inc
outsb
cs
pusha
mov
idivl
daa
iret
sbb
jg
xor
addb
mov
lea
int3
pusha
lds
add
adc
movsb
shlb
dec
mov
mov
pushf
mov
out
mov
jno
sbb
add
loope
jns
lret
mov
mov
mov
jo
sub
idivb
push
add
mov
sub
popf
cmp
sbb
repnz
add
shlb
fisubrl
lock
lcall
idiv
pushf
jno
popa
sub
mov
daa
and
cltd
cwtl
in
and
add
imul
fiaddl
pop
add
cmp
inc
pop
dec
fstl
add
add
xor
xlat
out
cld
cld
push
jle
test
add
dec
test
add
and
in
mov
je,pn
fimull
xchg
pop
mov
xchg
push
and
into
call
sub
es
mov
es
push
mov
dec
stos
xchg
negl
add
xchg
mov
lret
pop
dec
adc
fimull
shl
popf
or
test
cmp
sbb
call
and
mov
fs
jns
sbb
out
lcall
les
lret
mov
loop
sub
lods
lahf
sti
pop
mov
aaa
lahf
js
jae
xchg
or
lcall
sti
sbb
push
das
ja
ss
xor
adc
fsubrl
pop
or
jbe
lock
popl
inc
cltd
mov
mov
pusha
cwtl
jg
movsl
sbb
loopne
jmp
and
xor
sub
inc
negb
je
push
sbb
lcall
or
add
mov
mov
in
daa
mov
mov
add
or
and
or
and
testl
jl
push
pop
out
out
pop
fwait
hlt
loope
jl
push
add
rcrl
add
loope
mov
pop
and
and
push
mov
enter
leave
pop
push
mov
xor
lret
sti
adc
push
push
sbb
mov
in
fs
ret
xchg
cmpl
scas
push
pop
mov
and
push
shlb
sti
mov
out
stc
mov
pop
ja
or
movsl
insb
inc
adc
and
adc
mov
data16
add
mov
sbb
mov
lcall
cmp
into
int3
stc
or
pop
out
movsl
fstpt
in
xor
dec
xchg
cmp
imul
imul
cmp
int3
or
into
xchg
sbb
add
out
into
push
push
inc
lahf
mov
mov
add
lcall
mov
test
sahf
mov
xchg
imul
adc
sar
add
lcall
mov
pop
or
fistpll
push
mov
inc
das
dec
xchg
fstp
adc
negl
ret
cmp
lods
xchg
movsb
cld
mov
jp
inc
pop
mov
fisttpl
out
in
pop
out
out
inc
push
add
sbb
aaa
mov
ret
cmp
adc
lds
jmp
pop
jecxz
cmp
divb
js
rorl
sbb
addb
mov
sub
neg
data16
divl
xor
cmpsl
mov
jns
push
fdivp
cmc
idiv
mov
mov
ja
out
cmc
xchg
push
std
arpl
cmpsb
sub
dec
fcmovne
mov
insb
insb
xor
sahf
mov
mov
add
and
mov
jg
or
xchg
pop
add
add
mov
mov
mov
sub
dec
mov
mov
cltd
fildl
pop
into
xor
rolb
nop
add
rcrl
retw
inc
mov
cmpsb
sarb
sub
sub
cltd
aad
mov
int3
adc
in
mov
dec
call
data16
cwtl
pop
pop
nop
iret
nop
add
lcall
jecxz
inc
inc
inc
mov
sahf
shll
pop
adc
mov
into
cmp
adc
push
push
xchg
add
jge
xor
push
pushf
movsb
lock
loope
ret
mov
outsb
jmp
mov
mulb
cli
add
stos
or
insl
iret
mov
in
inc
inc
xchg
mov
adc
loope
sahf
mov
and
dec
mov
and
popa
popf
test
insl
ja
popf
jbe
push
sub
jge
lcall
sbbl
sbb
or
stos
jnp
sarb
popf
test
add
lahf
pop
cmpsl
jne
mov
jnp
pusha
add
add
xor
int
leave
push
sub
push
mov
pop
cli
lret
xchg
push
jnp
test
xlat
imul
cmp
and
out
add
mov
call
cmp
cs
pop
mov
aas
xchg
inc
jg
mov
int
data16
adc
dec
pop
stc
cmp
cmc
or
pusha
sub
shrb
mov
or
or
xor
xchg
rorb
test
mov
repz
cmp
pushf
stos
lcall
shr
jno
imul
sub
mov
cmp
sub
sub
dec
int3
mov
or
jnp
push
jbe
pop
stos
fmul
daa
push
aam
ret
xor
popa
addr16
push
ja
bound
rorl
loopne
js
inc
cmpsb
cmpsl
dec
ret
and
adc
pop
outsl
incl
das
rol
pop
sub
enter
xor
add
add
idiv
jg
sub
jg
popf
popa
add
add
roll
mov
addr16
push
addr16
outsl
cwtl
or
dec
pop
pop
pop
mov
jbe
fldl
xchg
fnclex
sub
insb
jae
xor
mov
sub
add
or
or
rolb
sub
jae
sbb
push
dec
imull
mov
jl
lcall
fadd
push
dec
outsl
cmp
push
call
ret
daa
pop
jns
and
testl
sub
push
loope
cld
push
je
notl
xor
push
inc
sub
dec
int3
loop
cmp
or
push
lret
repz
fsubs
imul
call
jbe
loopne
jne
popa
and
dec
int
xchg
pop
popa
and
adc
imul
rcrb
iret
je
and
shll
stos
sbb
mov
rol
mov
sub
push
movsb
test
out
out
pop
or
add
pop
mov
fstps
and
add
out
and
jl
sbb
mov
jo
addb
add
idivl
push
cli
mov
in
cmpsl
mov
dec
pop
adc
mov
mov
mov
cmpsb
insb
inc
cmc
aad
cli
leave
adc
popa
jno
dec
or
push
add
aad
push
mov
call
lret
pushf
inc
cmp
movsl
mov
gs
pop
pop
mov
loope
sbb
gs
inc
fdivrl
inc
cmp
ljmp
ja
aaa
lret
enter
push
mov
mov
adc
daa
hlt
mov
xchg
xchg
xorl
mov
xchg
xchg
divl
sahf
xchg
rcll
mov
fstpl
sbb
fistps
es
scas
aas
xor
sub
cmp
bound
daa
sbb
push
cmp
mov
add
adc
sarb
pop
bound
fld1
jp
popf
imul
add
add
repnz
movsb
jle
arpl
inc
mov
add
or
xor
ficompl
mov
xor
pop
cmp
imul
daa
cmc
mov
inc
inc
fdiv
or
ss
ret
mov
push
dec
jmp
jp
pop
hlt
jmp
loop
popf
pusha
int3
movsl
lcall
cmp
lods
test
std
add
into
jno
xchg
jno
ljmp
mov
subb
pop
and
cmp
test
aas
insl
push
imul
iret
je
ret
mov
or
in
outsl
clc
lea
inc
out
xchg
movsb
xchg
mov
scas
daa
push
mov
inc
bound
repz
xorb
fmuls
imul
loop
aas
es
and
mov
jg
mov
mov
fwait
test
in
dec
sub
cmpsb
mov
pop
insb
lods
jne
mov
inc
jmp
mov
pop
in
cltd
xchg
dec
pop
dec
jns
add
mov
stos
sub
stos
out
jmp
sub
aam
mov
add
outsb
mov
loopne
enter
stos
mov
mov
mov
pop
aas
fstps
repnz
adc
mov
sbbb
mov
xlat
test
mov
jns
data16
add
shrl
pop
pop
mov
outsb
pusha
xchg
cwtl
push
dec
popa
gs
or
push
fwait
or
test
xchg
cltd
cmpsb
enter
add
dec
dec
or
fxch
cmp
dec
daa
xchg
dec
mov
ret
push
mov
iret
add
fmuls
adc
lods
movmskps
jp
scas
stc
jecxz
pop
roll
jne
std
push
enter
xchg
cmp
push
mov
adc
jns
jg
push
mov
sub
jle
mov
int
push
cmpsb
in
or
aad
dec
or
popf
mov
add
add
xor
in
jnp
test
mov
insl
data16
adc
lock
out
cmpsb
lret
scas
add
add
mov
fnstenv
xor
inc
mov
add
add
mov
fistps
cmp
outsl
pop
cli
das
jae
mov
sbb
sahf
mov
int3
aas
lock
xor
or
and
ljmp
sbb
repnz
pop
xor
lahf
dec
mov
sbb
hlt
repnz
jbe
hlt
mov
cmp
sbb
pop
dec
cmc
lods
inc
lret
pusha
test
les
push
jp
xor
enter
cmp
dec
lds
push
push
adcl
test
add
sub
inc
push
jmp
mov
adc
dec
push
in
aam
mov
in
notl
out
jecxz
loop
mov
cmc
and
inc
aam
nop
pop
and
push
stc
xchg
test
sbb
sbb
sub
mov
out
arpl
cmp
inc
roll
lea
fstl
lahf
mov
jp
push
ja
repz
sti
in
nop
jl
add
add
cld
je
jbe
jns
sbb
push
cmpl
add
add
xchg
jae
cwtl
jmp
pop
pop
push
inc
mov
dec
jns
dec
lods
or
negb
jg
outsb
into
in
mov
xchg
or
int3
dec
cmpl
mov
mov
ret
addr16
jne
sti
pop
and
movsb
stos
mov
stos
rol
or
imul
add
sarl
push
fwait
in
test
lea
jp
bound
ljmp
inc
jns
and
sbb
inc
and
daa
in
imul
xor
gs
sbb
popf
lret
iret
mov
shlb
cmp
adc
mov
cmp
mov
or
push
add
or
nop
jns
lods
adc
lods
pop
jae
stc
inc
out
push
lods
fstpt
add
shll
arpl
notb
inc
test
cmc
cmpsb
cmp
add
push
cltd
jmp
fildl
or
repz
add
and
test
sbb
xor
sub
jg
aam
out
jns
jl
hlt
or
insb
clc
cmp
inc
stos
faddl
fwait
inc
aam
pop
shr
sbb
sub
adc
popa
rorb
mov
sbb
pop
loope
pop
sbb
adc
pop
add
sti
repnz
cld
add
xchg
cmp
sub
stc
or
into
mov
adc
ds
fcmove
push
fldt
pop
dec
push
cmc
dec
mov
ds
mov
cmp
dec
lods
mov
xchg
idivl
icebp
fistpll
fdivp
lcall
outsl
jb
and
inc
inc
gs
addl
cwtl
aad
jae
mov
or
sub
test
push
lods
dec
or
sbbl
roll
cmp
dec
cmp
inc
bound
mov
add
add
push
jg
dec
xchg
dec
and
pop
mov
add
mov
dec
add
push
sti
add
push
or
push
fsubs
mov
fs
es
push
pushf
sub
out
dec
cmp
or
fxch
lods
les
xor
pushf
mov
xchg
jle
cmpsb
test
and
in
lret
xor
repz
cmp
adc
inc
dec
xor
inc
adc
and
int
ljmp
jmp
jmp
xchg
mov
into
addl
dec
cld
mov
loope
xchg
jne
dec
mov
add
pop
xchg
push
lahf
bound
stos
sub
xchg
ds
aam
mov
mov
cwtl
loope
jo
mov
sub
inc
mov
lea
push
mov
pushf
xlat
fstl
in
cmpsb
call
or
loope
or
add
mov
mov
jecxz
mov
sbb
je
mov
add
iret
mov
fucomip
push
insb
xor
inc
rcl
add
imul
add
hlt
rol
frstor
shll
bound
push
pop
cmpsl
pop
movsl
and
movsl
out
adc
sub
xchg
stos
xchg
repnz
sbb
imul
push
adc
arpl
sti
lods
test
adc
sbb
jo
jb
imul
push
pop
test
fildll
mov
ss
sub
int
mov
xchg
mov
push
mov
int
loope
sub
dec
bound
aas
insl
inc
mov
pop
push
lret
dec
cmp
in
push
sbb
lcall
add
into
jae
stc
xlat
cmp
mov
cmp
scas
data16
das
push
test
push
inc
inc
shll
push
lret
push
xor
aam
loop
sub
cwtl
jle
xchg
fcompl
inc
test
lods
cltd
inc
ljmp
gs
test
lea
gs
lea
ljmp
sbb
add
add
dec
out
iret
jmp
aas
in
push
data16
add
add
and
jo
dec
jb
sbb
stos
outsl
and
inc
xor
mov
push
ds
in
std
sub
xchg
das
ss
call
cmp
dec
sub
cmp
push
mov
or
shll
hlt
daa
dec
fbstp
es
jb
mov
enter
push
add
scas
pusha
cld
jle
sub
scas
pop
push
sub
xlat
sbb
cld
xchg
lock
pop
xlat
mov
lods
cmp
cmp
enter
pop
dec
xchg
or
cmc
mull
in
scas
fldcw
sbb
mov
mov
push
mov
movsl
bnd
cld
fldt
adc
fistpl
pop
xchg
push
push
gs
pop
fcmovnbe
and
rclb
sub
insl
in
aam
mov
test
adc
lock
mov
and
je
push
adc
sbb
push
pop
cmp
in
lock
imull
jle
mov
add
add
std
cmpsb
pop
dec
sub
sub
scas
or
add
rol
jl
mov
loopne
xchg
dec
inc
call
xor
lcall
fcoms
sub
adc
out
movsl
je,pn
jmp
inc
call
repz
cld
iret
xchg
subl
shl
jbe
xor
xor
sub
jge
mov
push
js
shll
nop
push
push
fistl
sbb
or
testb
pop
fisubs
fwait
arpl
popf
jmp
pop
out
cmp
mov
jne
std
sarb
imul
sbb
sarl
movsl
jnp
jmp
arpl
hlt
push
mov
test
jmp
inc
out
or
sti
sub
sbb
mov
outsb
jle
loopne
scas
mov
inc
dec
testb
pop
ret
push
adc
ss
pop
loop
lret
vpcmpgtb
xchg
sub
adc
lods
push
or
sub
xor
addl
add
neg
std
sub
dec
subl
add
push
jmp
test
sbb
rcrb
mov
outsb
xor
pop
dec
xor
mov
lret
and
cltd
mov
mov
cmpsb
inc
nop
test
add
mov
sbb
sbb
fstl
lahf
loopne
pop
dec
cmp
add
xorl
cmc
xor
loop
test
and
scas
lea
push
dec
sbb
sub
xchg
cmp
or
sbb
call
mov
inc
add
push
mov
sti
inc
mov
std
jae
sub
mov
push
adc
dec
jmp
xor
sbb
mov
jge
pushf
add
adc
xchg
setge
or
pop
jae
cmp
test
push
dec
sub
jg
mov
lcall
lahf
xchg
pop
pop
aaa
dec
pop
mov
ss
xor
or
push
mov
rorb
addr16
fistl
add
add
cs
xor
cltd
mov
insl
add
add
inc
push
stos
inc
adc
out
cs
leave
jns
and
add
mov
imul
push
dec
mov
dec
aaa
cmpl
add
outsb
int
sti
out
shl
adc
lret
ror
stos
sub
fmull
xchg
nop
es
jle
inc
dec
mov
in
inc
daa
cmp
pusha
and
fdivrl
sub
lret
sub
orl
cwtl
mov
cmpsb
dec
js
rol
sahf
sbbl
push
fs
mov
mov
mov
shrb
or
insb
cmc
mov
mov
or
icebp
jbe
enter
jmp
push
ret
xchg
cmp
popf
sahf
mov
pop
movsb
cmp
stc
pop
mov
ja
jne
movsb
fisttpll
int
cld
cmc
xchg
andl
and
or
imul
lret
dec
add
add
ja
out
sbb
sahf
push
fisubrs
add
and
lret
xchg
pop
mov
call
ror
inc
add
mov
mov
jb
lds
xchg
xlat
inc
xlat
repnz
mov
inc
aas
nop
mov
cmpsl
outsl
enter
iret
into
xchg
dec
cmp
aas
loope
mov
daa
xchg
jne
jle
xchg
jbe
outsl
in
mov
mov
fcoms
mov
cmpsb
leave
rorb
pusha
xchg
dec
out
sbb
jg
ficoml
add
mov
incb
dec
mov
ds
daa
add
imul
sbb
and
ljmp
mov
roll
stos
icebp
jno
out
fwait
mov
movswl
dec
repz
mov
xlat
push
pop
dec
popf
pop
stos
xchg
jbe
push
pop
aas
js
pop
negl
add
pop
push
movsb
push
fmuls
in
pop
popa
test
das
popa
pop
and
jg
and
add
daa
sub
ja
mov
stc
lret
in
jecxz
add
add
mov
sbb
push
lods
xchg
lock
add
ds
add
lcall
push
aam
push
ljmp
xor
in
flds
inc
in
subl
and
mov
test
inc
aam
and
xchg
js
pop
push
push
mov
pop
cwtl
imul
fisttpl
cltd
pop
push
dec
sub
call
push
dec
call
jg
xchg
mov
and
xchg
jns
lock
push
fcom
push
rcll
loop
mov
xchg
adc
jno
jno
in
sub
mov
in
pop
jbe
pop
mov
jbe
jae
stos
sub
insl
mov
xchg
sbb
mov
std
loope,pt
rcll
sub
mov
fistpl
fcomps
mov
sub
inc
cmp
test
jp
insl
outsl
imul
add
int
mov
jnp
outsl
cmpsb
loopne
or
pushf
call
add
add
push
jno
xchg
js
xrelease
pop
dec
cmp
pop
add
clc
adc
shlb
pop
mov
fistps
pop
xchg
xchg
loop
mov
sub
imul
add
fsubrl
inc
insb
jb
mov
neg
lods
and
push
lock
in
cmpb
xchg
cmp
shll
add
inc
dec
mov
xor
rolb
jp
mov
out
pop
popa
and
fiadds
xchg
mov
xchg
adc
or
rcrb
in
sti
stos
jl
inc
subl
xor
cmp
add
dec
jne
iret
fldt
xlat
cmc
ret
cmp
fdivrp
push
xchg
and
mov
repz
xchg
into
mov
pop
mov
pop
lret
push
lcall
out
jo
mov
in
xchg
dec
jmp
dec
dec
adc
mov
add
cli
xchg
jle
push
je
cmp
int
jno
add
scas
idivl
out
movsb
fcomps
ljmp
jne
ror
lods
testb
notl
mov
stc
test
popa
push
add
and
or
xchg
cmc
pop
jbe
push
xor
int
or
mov
rclb
pop
sub
pop
adcl
jp
sbb
add
scas
sbb
out
mov
sub
xor
hlt
hlt
test
jns
scas
test
imul
mov
mov
pop
mov
xor
lret
xchg
in
jbe
ds
sarl
or
das
xor
ss
xchg
xchg
push
pusha
push
mov
push
jl
out
xor
repnz
cld
jb
mov
add
jge
out
test
loope
lahf
out
mov
stos
mov
and
sti
xchg
out
cmp
bound
pop
popl
add
inc
aaa
dec
fwait
jnp
aad
sbb
inc
test
add
in
inc
dec
cmp
arpl
rcll
test
std
xchg
mov
icebp
xadd
jns
jns
lret
ds
out
xor
shlb
jb
xor
push
mov
pop
adc
cmp
cmp
xor
push
jmp
mov
add
inc
push
add
pop
mov
insb
stos
push
pop
das
jge
push
push
mov
icebp
sbb
movb
adc
mov
lret
std
adc
jno
mov
loop
clc
fs
ja
xor
push
ja
jmp
lret
push
jecxz
xchg
sub
jbe
jne
fcmovne
or
dec
cmp
mov
hlt
aad
mov
hlt
pop
push
mov
sub
adc
iret
cmp
or
cld
call
cli
sub
stos
sbb
pop
cmp
and
adc
jmp
mov
insl
xchg
inc
mov
sbb
jb
out
out
add
add
std
mov
sub
jae
add
cld
mov
pop
mov
cmp
sarl
mov
xchg
jne
sbb
mov
sahf
loopne
std
aas
dec
lods
fsubr
and
sbb
jg
push
fcom
and
cmp
pop
rolb
repz
push
pop
shl
nop
push
xchg
push
mov
aas
sub
push
xor
jmp
adc
jbe
movsb
ss
cmpsb
adc
pop
inc
scas
gs
cmpsb
insl
and
insl
jo
inc
test
out
shl
lret
iret
dec
jmp
leave
mov
or
jmp
or
cltd
add
cmp
cmpsl
add
scas
faddp
movl
fistpl
and
pop
and
aad
std
push
fwait
lods
cmp
or
and
push
aad
stos
dec
mov
inc
push
jnp
rcrb
mov
or
sbb
insb
out
jg
add
adcl
xchg
fisttps
mov
sbb
je
add
int
pop
jnp
clc
xchg
cmp
repnz
pop
mov
sub
pop
jbe
push
push
lods
out
inc
es
xor
push
jl
daa
fldl
jg
xchg
xorb
xchg
lods
test
outsl
mov
sub
test
shlb
pop
sub
xchg
popf
xchg
stos
push
cmc
jle
inc
or
mov
xchg
lret
decl
daa
dec
inc
andl
sti
rorb
jno
dec
mov
add
mov
xchg
scas
sub
mov
sarl
mov
jae
popa
in
mov
add
cmp
mov
pop
inc
xor
dec
addl
mov
sub
movsl
loop
call
mov
adc
rcrb
fdiv
push
daa
popa
into
pushl
jae
xchg
jmp
addr16
and
test
loop
push
arpl
xchg
adc
jns
or
cmp
sbb
enter
cmp
add
add
bound
sub
sbb
jbe
add
pusha
and
jae
in
fdivrl
sbb
cmpsb
dec
jae
stc
out
mov
repnz
fstps
add
enter
xchg
mov
xchg
push
pop
ret
scas
js
sarl
jge
or
stos
sub
aas
push
xchg
or
aam
pop
shl
scas
sbb
cmp
ret
leave
push
mov
sub
lcall
adc
mov
das
dec
mov
aas
fwait
inc
test
push
mov
jge
dec
and
sub
or
lahf
std
pop
mov
into
pushf
cmp
push
push
cmc
inc
mov
in
jg
inc
adcl
cmp
sbb
test
push
cltd
fstpl
xchg
push
sub
jno
pop
imul
lock
fiadds
call
addr16
dec
insb
lcall
cmp
popf
xchg
ljmp
mov
psrlq
int3
xor
jp
movsb
dec
cmc
rclb
clc
call
aas
add
add
divl
in
sub
push
ja
add
inc
aam
addb
outsb
addr16
mov
jno
or
mov
cmc
cmp
dec
cli
xchg
sub
jae
jmp
xchg
adc
or
pop
cmp
arpl
or
mov
ret
pop
pusha
lret
mov
and
in
inc
rclb
mov
testb
es
jne
dec
es
and
sub
pop
jbe
outsl
iret
mov
mov
inc
sbb
cmc
mov
pop
push
or
fcompl
xor
pop
pop
push
pushw
mov
xor
fucom
adc
mov
xorl
lahf
cmc
inc
popf
push
mov
inc
mov
cwtl
mov
ret
mov
rclb
sti
data16
shrl
std
lret
test
jbe
fmul
cmp
inc
repnz
js
mov
lods
js
cmpsb
nop
ret
outsb
sar
adcl
mov
pop
minps
faddl
add
clc
fisubs
mov
mov
mov
or
add
iret
fcoml
dec
into
shrb
aaa
cmp
or
in
rorb
in
jae
cmp
fnsave
in
mov
inc
adc
negb
mov
sbb
pop
fwait
mov
pop
push
push
repz
xchg
jle
mov
sahf
mov
cmpsl
pop
sbb
sar
mov
pop
mov
mov
mov
inc
jp
into
lock
mov
lret
sub
mov
pop
stos
cmp
enter
add
sbbb
bound
mov
outsb
daa
mov
bound
sub
insb
test
repz
xchg
add
xchg
add
mov
xlat
add
in
mov
rcll
notl
dec
jo
mov
jbe
sti
sarl
xor
ficoms
sbb
idivb
daa
dec
rorb
add
add
mov
outsl
jne
ljmp
pop
mov
adc
add
lds
add
dec
mov
mov
lahf
inc
pop
mov
and
sbb
or
push
mull
sub
push
mov
lcall
leave
pop
mov
push
popf
ja
add
out
je
cmp
mov
stos
mov
ljmp
push
stc
stc
mov
repnz
jnp
jne
lcall
adc
fwait
arpl
dec
aaa
xor
enter
hlt
and
mov
rol
or
push
fs
std
dec
shll
in
xor
adc
jmp
and
lods
fs
jg
cli
cmpl
lods
test
jp
xchg
inc
rorl
call
add
inc
out
dec
mov
or
daa
leave
jne
dec
cmpsl
sarb
lret
nop
jnp
xor
mov
adc
icebp
xor
sub
jp
shr
jb
fists
add
add
add
orb
ljmp
jl
call
jp
add
mov
mov
ljmp
and
cmpsl
xchg
xor
lret
push
lods
es
rcrb
fs
sbb
insb
fdivrs
cmp
nop
cmp
into
cmpsl
add
lret
xor
xor
insl
xor
mov
pop
cmpsb
pop
dec
bound
push
popf
dec
pusha
jmp
arpl
pop
jecxz
push
adc
inc
pop
jle
adc
dec
push
pop
loope
inc
loop
lods
sarl
in
cmc
imul
jo
xchg
xchg
sbb
outsl
inc
scas
stc
fmull
adc
push
or
xorl
cmp
jae
mov
sahf
xchg
loope
ds
inc
cmp
cmp
add
sbb
xor
shl
mov
in
or
rcrl
scas
mov
jge
loop
pop
dec
add
sub
and
dec
lds
rorb
pop
xchg
mov
sbb
insb
jns
jecxz
imul
xor
jo
ja
std
stos
sbb
ljmp
add
add
std
adc
nopl
lods
push
xor
out
mov
addr16
fdivrl
xor
addr16
andl
test
pop
or
jp
es
xchg
movsl
cmp
insb
mov
dec
out
pop
jnp
in
push
add
push
mov
in
mov
daa
cld
mov
adc
stos
popf
push
pop
sbb
fcomip
pushf
mov
push
sub
mov
aad
xchg
cld
test
sub
cmp
pop
lods
ret
cmp
fsubrp
ss
mov
mov
jbe
or
pop
icebp
out
lahf
call
jbe
jns
movsl
mov
lret
and
mov
movsb
xchg
xor
pushf
addr16
mov
pushf
sub
popl
mov
or
pop
xor
sub
mov
mov
nop
add
sub
dec
xchg
jl
hlt
insb
inc
jne
pusha
decb
cmp
mov
add
add
cmpsb
push
sbb
nop
pushf
pop
jl
add
call
in
inc
ds
add
cmp
sbb
mov
mov
cmp
jge
pop
pop
jno
call
xchg
mov
xchg
push
pop
and
sbbl
or
repz
jmp
sbb
pop
xorb
imul
or
jns
pop
dec
adc
cmp
ret
xchg
or
aam
in
jge
loope
lea
pop
fidivrl
cs
mov
fucomi
aas
jno
xor
mov
fwait
test
js
and
std
stos
inc
popa
enter
fiaddl
pshufw
pop
or
adcb
cmpsl
sbbl
cmp
bound
sub
add
jmp
sub
xlat
cwtl
and
mov
sahf
sbb
and
ds
mov
fistpl
cmp
mov
or
addr16
mov
pushl
push
add
xor
cli
mov
inc
jo
jnp
jge
add
inc
insl
cwtl
sbb
andl
fs
pop
or
sarb
inc
mov
mov
stos
pop
leave
ucomiss
mov
sbb
dec
cld
mov
adc
mov
or
imul
push
sub
andl
rdpmc
test
sbbb
subl
sub
mov
fnstsw
jp
add
inc
fldenv
das
fimull
mov
jno
xor
js
imulb
in
jle
enter
mov
jo
sbb
stc
shl
subb
mov
add
fcmovne
sub
fdivp
shll
pop
push
xorl
and
and
add
filds
imul
push
ret
inc
imul
shll
add
push
adcb
jle
cli
popf
sbb
std
test
lcall
je
mov
jle
add
mov
popa
lods
dec
dec
in
insl
cli
pop
add
xlat
sub
nop
test
lock
xor
or
jmp
jae
shll
mov
push
xchg
daa
movsl
or
mov
add
xor
call
outsl
das
int3
shll
add
and
scas
xor
mov
cmpb
rol
push
push
out
jp
jne
jmp
mov
sbb
and
subl
jbe
inc
jbe
outsl
jge
test
std
cltd
xor
cmp
call
aaa
cmp
hlt
js
popf
jg
insl
fimuls
ret
das
pop
push
jmp
int
inc
xlat
xchg
mov
pop
lcall
aas
lahf
sub
or
pop
dec
push
gs
orl
or
loop
sbb
pop
add
inc
dec
insl
cmp
outsl
mov
xchg
cld
icebp
lcall
mov
add
add
xchg
xchg
jns
jmp
mov
lret
add
add
inc
mov
xchg
orb
pop
xchg
mov
aaa
lock
pusha
rorl
loopne
dec
xor
pop
push
rcl
shrl
int
xor
jecxz
jle
inc
push
into
addr16
pop
dec
dec
jns
iret
js
shrb
fiaddl
mov
rep
jb
dec
pop
cs
mov
xor
das
icebp
mov
in
in
loope
sbb
fldenv
test
mov
mov
sahf
pushf
mov
or
dec
mov
ljmp
int
mov
dec
into
push
or
xchg
cld
pushf
sbb
add
in
cs
or
cmc
sbbb
sbb
aas
nop
orl
in
jle
lea
stc
lret
jp
out
orl
test
xchg
inc
add
dec
scas
sbb
test
inc
xchg
cmp
aaa
call
inc
jl
nop
hlt
xor
popf
xchg
addr16
orb
ficoml
arpl
push
add
test
add
add
lcall
pusha
fldl
add
cmpsl
inc
dec
test
jno
push
mov
les
rorb
in
push
cmp
adc
iret
mov
ds
sarl
std
scas
mov
mov
and
mov
jns
mov
or
jmp
pop
jl
mov
mov
cmp
and
out
movl
fistpll
loopne
adc
addl
ret
lret
xor
push
xor
xor
jbe
jns
lahf
add
xor
aad
cltd
ds
xchg
test
push
sbb
push
je
int3
mov
adc
test
add
adc
sub
xor
mov
dec
add
mov
mov
movsl
dec
and
mov
icebp
gs
bound
dec
mov
rorb
int3
insl
sub
nop
mov
test
push
sub
stos
pop
add
add
mov
idiv
jne
iret
popl
add
add
sbb
cmovnp
stc
xor
add
loopne
mov
xchg
jae
cmpb
icebp
xchg
sti
adc
adc
sub
dec
arpl
popa
xchg
lcall
sub
test
lahf
lcall
sbb
dec
cmp
add
or
jl
inc
pop
lret
out
or
aam
lcall
call
xchg
test
cmp
mov
ds
add
adc
jecxz
fucomp
arpl
sti
push
mov
sbb
aaa
cmpsl
or
shl
lcall
gs
or
xor
sub
call
push
cltd
scas
or
imul
sti
mov
add
jg
les
jg
sub
inc
xor
mov
pop
adc
xor
scas
je
push
xor
inc
mov
addr16
arpl
add
fsubs
or
fldt
add
xchg
pushl
sub
jle
mov
add
dec
add
out
and
push
pop
mov
add
jg
xchg
adc
adc
sti
mov
inc
fcomip
aaa
xor
mov
cmpsl
loop
xor
mov
or
insl
and
jp
les
popf
out
dec
js
pop
push
mov
outsb
push
fsub
sbb
xor
mov
or
aam
pop
adc
jo
notb
adc
mov
mov
addl
subb
ds
push
inc
fdivrp
cmc
xor
add
pop
adc
adc
pop
push
mov
inc
pop
fdivrs
adc
pop
aam
xlat
jl
dec
mov
mov
jge
mov
xchg
cmp
shlb
mov
mov
and
pop
int3
mov
xchg
rorl
sub
shrl
jecxz
out
daa
punpckhwd
bswap
stos
mov
push
int3
fdivl
dec
sub
ret
add
mov
jge
std
sti
iret
ss
push
jno
orb
addl
add
mov
lret
cmpsb
jge
xor
jl
lods
adc
and
pop
adc
xchg
jnp
dec
ret
sbb
pusha
movsb
faddl
fdivr
dec
lods
jmp
jno
or
xchg
push
lret
inc
leave
lock
mov
mov
ss
rcr
inc
cmp
mov
lods
push
jae
fisubrl
inc
push
cmp
inc
stos
push
jo
movsb
sub
add
jo
and
int3
ja
in
pop
pushf
xor
popa
std
mov
stc
shll
mov
test
mov
aaa
lea
mov
lcall
mov
cmp
jmp
pop
fs
fs
or
js
mulb
mov
inc
push
inc
iret
and
fwait
mov
fsubr
test
pop
decl
test
ss
sub
ficompl
leave
adc
fs
mov
or
addr16
pushf
loop
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
lret
mov
inc
test
add
sbb
adc
fstp
in
sub
jmp
out
movsb
cmp
xor
inc
subb
repz
inc
mov
jb
cmp
lods
mov
dec
jle
decl
xchg
test
mov
mov
cs
xchg
test
shr
xchg
test
scas
out
fcomps
lahf
dec
dec
loop
mov
inc
jne
daa
movsb
fs
cld
enter
ret
movsl
sub
fsubp
iret
add
imul
hlt
pop
pop
lods
test
mov
insb
std
mov
shlb
and
imul
jnp
adc
fs
pop
cmp
cmp
dec
stc
cmp
fcoml
daa
scas
mov
cli
shrb
nop
xor
and
jno
jl
pushf
sahf
cmp
aad
roll
js
sbb
rol
push
adc
mov
pop
mov
add
add
mov
mov
sbb
add
je
pop
ljmp
call
mov
testl
or
xchg
jg
push
inc
lret
aas
scas
xchg
xor
lret
mov
popf
into
pusha
adcl
xchg
xchg
push
enter
test
pop
mov
cmpl
insl
mov
pop
aas
sub
stc
inc
fdivrp
imul
sub
adc
nop
mov
aam
lret
imul
cwtl
adc
sub
cmpsb
inc
arpl
loope
rol
popf
cltd
mov
addb
neg
insb
jecxz
arpl
insb
out
negl
mov
xor
in
lcall
mov
cltd
cld
and
push
pop
lea
ss
push
pop
dec
jne
aam
dec
pop
pop
mov
xchg
loope
cmp
daa
cmc
shlb
mov
scas
jae
sbb
xor
xchg
dec
add
add
pop
test
ljmp
lock
xchg
dec
or
push
xchg
add
fistpll
sarl
std
in
sarl
shlb
sub
xorb
loope
cld
dec
push
inc
addl
sub
sahf
pop
mov
popf
pop
jg
and
mov
add
or
lock
lea
sub
mov
dec
adc
push
cli
jno
push
and
dec
popa
js
xchg
pop
es
cmp
popa
push
rep
push
jg
icebp
xor
push
sarl
int
stc
fdiv
jbe
in
movsl
les
adc
addr16
dec
out
dec
push
sub
shlb
lock
push
out
pushf
cmp
add
jno
xor
xor
hlt
push
hlt
xor
cld
bnd
clc
movsl
add
out
arpl
mov
cmp
repnz
jl
call
std
ljmp
pushf
subb
push
rcrl
je
leave
xchg
repz
les
xor
pop
jb
xchg
nop
add
add
arpl
jnp
sbb
push
xor
lahf
rcrb
xchg
add
shll
or
sbbb
das
and
scas
cmpb
pop
jmp
cmp
adc
add
fisubrs
je
pop
mov
lret
push
jns
fcomps
test
xchg
inc
sub
pop
cmpsb
icebp
jnp
das
fimull
lods
shlb
ljmp
mov
sub
jp
hlt
add
push
and
fildl
test
or
mov
sub
adc
negl
jo
out
adc
ds
pop
shll
mov
in
push
xchg
int
andb
adc
xor
out
mov
and
pop
je
aas
imulb
xor
in
cmp
dec
daa
je
inc
in
loop
js
or
xlat
fstpl
pop
xchg
lcall
icebp
add
mov
xor
add
add
aas
or
mov
ds
dec
jmp
add
in
dec
ficomps
xlat
jno
test
sarl
and
daa
mov
cmc
insl
mov
adc
jle
jp
shlb
and
les
outsl
add
push
pop
nop
xchg
aas
out
fsub
jo
dec
jo
dec
fstps
mov
stc
mov
sub
das
cli
das
mov
push
sbbb
int3
xor
fcompl
sub
test
and
adc
jbe
cltd
andb
dec
loop
rorb
dec
ret
pop
jle
mov
mov
add
pop
clc
je
addr16
xlat
ljmp
adc
aam
mov
arpl
gs
add
adc
jmp
out
pop
and
fwait
dec
in
mov
adc
in
xorl
leave
sbb
xor
ret
pop
mov
sub
adc
add
push
outsb
fisubs
test
hlt
js
push
pusha
mov
add
mov
add
pop
fdivs
and
aam
push
xor
test
lcall
xor
jp
jbe
mov
xlat
cltd
fwait
push
sbb
cmc
xor
adc
roll
mov
fidivrl
pop
ret
inc
inc
mov
xchg
xorb
xchg
inc
mov
jno
mov
jp
mov
mov
pop
in
adc
xor
lret
lods
clc
xlat
ret
test
idivb
pop
xor
xchg
add
mov
imull
icebp
jbe
scas
scas
daa
xchg
dec
dec
aam
sbb
lods
fmull
dec
adc
cmp
leave
lea
inc
push
mov
add
push
leave
in
test
je
pop
cli
loope
insl
loop
loopne
adc
jae
dec
xor
ljmp
adc
push
cmpsb
dec
or
in
pusha
add
add
mov
jns
shlb
mov
add
mov
inc
popf
sbb
or
lods
insl
xor
add
add
xor
xor
jecxz
xor
int
ror
in
cmp
dec
dec
icebp
scas
in
mov
sbb
call
cmp
out
jle
mov
insb
decb
adc
mov
popa
cmp
mov
adc
bound
sahf
xchg
and
push
mov
jg
adc
xchg
testb
fwait
out
mov
gs
daa
popf
mov
dec
ja
mov
cmp
mov
inc
pop
mov
mov
jl
xor
dec
cmpsb
dec
inc
loopne
test
aaa
pop
cld
shll
inc
push
mov
out
cmpsl
es
jle,pt
lret
sub
ja
addr16
pop
adc
push
sahf
je
out
dec
and
dec
pop
push
jecxz
add
pop
dec
iret
jo
movsl
shlb
dec
cmp
pop
and
cmp
stos
mov
fs
add
add
int
fstp
iret
push
cmpsb
fadd
dec
push
mov
add
imull
inc
imul
push
rcrl
jo
mov
jle
inc
and
jmp
stc
jb
nop
cmp
inc
pop
test
dec
cmc
andl
lea
mov
into
ja
jp
or
add
shlb
enter
jecxz
cli
flds
jns
xor
insl
cmp
addr16
mov
pop
cmpsl
add
jecxz
mov
mov
arpl
ret
cmp
faddp
mov
jb
int3
sbb
mov
mov
xor
lea
jno
sub
dec
dec
or
je
out
jle
imul
ljmp
and
fnsave
jb
inc
wrmsr
fstl
pop
cltd
sbb
sbb
es
inc
mov
or
jb
nop
loop
dec
mov
sbb
lea
adc
sbb
mov
push
inc
pop
xor
cmp
dec
add
add
adc
std
out
ljmp
outsl
mov
add
lret
dec
out
push
and
and
add
pop
bound
xchg
sub
stc
std
outsb
data16
jmp
xchg
rcr
mov
nop
xchg
notb
lods
clc
popa
test
inc
mul
mov
imul
cmc
hlt
dec
movsl
push
call
fsubp
dec
mov
xlat
sub
pop
cmp
pop
mov
mov
push
stc
inc
jmp
and
cwtl
hlt
jbe
js
sbb
mov
xor
pop
sbb
cld
jo
les
into
sub
pop
and
pusha
inc
leave
sahf
test
mov
pop
mov
jle
jo
int3
rcll
shl
mov
js
pop
call
shrb
mov
imul
inc
jmp
iret
stc
or
pop
pusha
xor
inc
xor
cltd
sti
sub
lods
pop
popl
sub
test
push
arpl
fstpt
pop
sbb
add
lods
les
jnp
mov
icebp
cmp
lea
add
lahf
push
xchg
xchg
test
fnstsw
xchg
cmp
dec
jb
jg
les
into
pop
pop
add
mov
sub
arpl
push
sbb
mov
or
xor
lret
hlt
insb
cmp
aad
xchg
pop
push
int3
jb
ljmp
loope
in
dec
insl
sub
mov
nop
adc
pop
sub
pop
sub
test
mov
call
dec
sahf
int3
data16
or
call
mov
add
xchg
aaa
push
add
dec
rol
fimuls
lret
or
mov
ljmp
gs
mov
mov
pop
jne
ljmp
int
mov
pusha
and
adc
sahf
pop
adc
std
addr16
data16
aaa
push
sub
enter
rcl
cmp
dec
rcr
testb
mulb
inc
or
test
fcomps
add
mov
add
xchg
rcrb
ret
pop
loopne
shlb
jo
jl
jo
mov
mov
rclb
inc
out
pop
fldt
aas
stos
xor
fildl
jae
mov
lcall
mov
xlat
pop
mov
int
pushf
sti
pop
clc
mov
inc
dec
push
mov
sbb
sbb
scas
jb
sti
and
clc
xchg
sahf
popf
push
jnp
std
bswap
int
cld
test
mov
dec
sbb
cmpsb
xor
add
xor
cli
mov
loopne
mov
sub
mov
movsl
fiadds
mov
mov
cs
data16
dec
ret
loop
adc
xor
jp
popa
mov
clc
cltd
jno
inc
pop
mov
push
pop
gs
add
ficoms
stos
insb
jnp
push
mov
cld
in
mov
sbb
jno
ljmp
ja
out
imul
mov
xlat
lea
lea
add
ljmp
dec
mov
pop
mov
popl
add
add
xchg
repz
or
mov
data16
add
out
aad
stos
popa
adc
dec
push
mov
sub
sbb
sub
repnz
push
jne
arpl
push
fsub
cmc
adc
clc
fwait
out
push
or
xlat
mov
pop
xchg
mov
clc
push
sbb
sub
inc
add
push
pop
xor
xchg
pop
and
push
sub
popf
adc
mov
mov
mov
fldl
cmc
pop
xor
shl
mul
je
popa
xchg
inc
fidivs
push
in
ret
popf
int3
pop
pop
push
xchg
icebp
xor
icebp
push
rcrl
roll
jle
lock
sbb
jmp
std
test
push
outsl
loop
sbb
sbb
xor
xchg
ss
mov
bound
inc
lret
jecxz
xchg
in
and
in
incl
add
aaa
shlb
cmc
div
testl
mov
nop
add
add
ficompl
outsb
repnz
enter
adc
jge
push
cmp
pop
pop
rclb
insb
dec
mov
mov
ljmp
mov
cmp
and
cld
lods
sub
add
insl
jge
sar
push
pushfw
sub
call
dec
fnsave
push
sbb
or
mov
inc
std
xchg
add
fidivs
push
daa
xchg
mov
aad
push
mov
scas
cltd
push
repz
fs
lods
push
aad
fs
mov
push
xor
mov
push
ljmp
aas
repz
pop
filds
mov
sub
cmpsl
aam
adc
mov
push
xorl
add
pop
stos
pop
scas
mov
in
mov
xor
jg
mov
into
fcomps
repnz
movl
cmc
and
add
pop
push
nop
push
sahf
rcr
pop
adcb
pop
popf
push
mov
add
mov
add
loop
mov
rorb
xchg
aas
std
ss
pop
lock
daa
hlt
jmp
sbb
jl
movsb
and
repz
jecxz
cs
jecxz
or
out
outsl
dec
fwait
pop
out
ljmp
lods
xor
fiaddl
rorl
into
dec
das
pop
in
sbb
mov
xor
adc
add
xchg
add
imul
jne
mov
daa
shll
addl
std
jne
add
sbb
cmp
js
push
xchg
aaa
mov
mov
rorb
adc
and
bound
cs
ss
imull
cmp
push
cwtl
inc
cmp
ds
test
or
in
stc
inc
movsl
hlt
mov
jl
jle
ss
inc
subb
pop
in
push
test
ret
stc
lahf
xor
iret
insb
push
les
addb
add
arpl
cmpsb
jcxz
fimull
lea
add
mov
mov
in
addr16
pop
ja
fildl
pusha
mov
inc
call
pushf
movsl
mov
sub
movsb
orb
std
test
jp
fnstsw
fildll
adc
lds
movsb
dec
cwtl
out
vcmpsd
push
pop
fs
lahf
inc
repnz
aad
shlb
rcrl
sbb
test
xor
inc
shl
sub
mov
push
sahf
jbe
xchg
xchg
jl
daa
mov
mov
imul
cld
push
data16
ds
test
add
fsubl
cmpsb
pop
orl
push
sub
scas
test
aaa
outsb
push
rorl
adc
mov
paddd
dec
pop
in
arpl
push
add
clc
pop
clc
jmp
repnz
test
sti
lds
dec
lock
push
out
sub
les
push
xor
xor
inc
jg
push
inc
add
add
clc
jnp
jg
in
cli
enter
add
xchg
xchg
add
add
repz
mov
sti
andl
jae
sub
dec
ss
cmpb
and
rclb
decl
sub
ret
inc
push
jecxz
pop
lret
lock
ret
push
inc
andl
cld
adc
push
loopne
repnz
mov
hlt
cmp
mov
and
dec
xor
out
dec
push
mov
jge
sbb
mov
popa
pusha
inc
test
int3
stos
pop
push
mov
cmp
inc
subb
out
lret
ds
add
popa
push
shll
popf
imulb
mov
xor
jne
movsb
lret
cwtl
lret
dec
push
xor
setne
pop
cli
test
pop
xor
jge
rclb
jmp
adc
push
jg
arpl
in
inc
xchg
and
sbb
fs
repz
or
push
in
jns
mov
call
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
fiadds
inc
movsl
mov
pop
mov
inc
add
add
mov
mov
loope
or
jo
sbb
stos
cmc
adc
pusha
out
mov
inc
inc
sarl
data16
inc
icebp
cltd
dec
lret
lret
das
jge
push
sbb
rorl
inc
out
xchg
adc
mov
sarl
std
into
mov
pop
jl
icebp
out
std
mov
inc
and
add
imul
stc
test
mov
repz
mov
jecxz
ljmp
inc
pop
mov
cmc
inc
xchg
test
test
into
mov
insb
dec
addl
lods
add
sbb
dec
adc
and
sbb
insl
jecxz
loop
mov
sbb
cmp
jmp
lret
xchg
in
popa
jp
xchg
add
int
adc
mov
jbe
es
jl
sar
std
jle
pop
popf
scas
cmp
fimull
add
push
add
push
lock
mov
sub
inc
sub
cmp
mov
cs
mov
push
lea
into
push
jle
mov
mov
cmpsb
lcall
sahf
je
in
neg
scas
movsl
fdivrs
ja
sbb
or
cltd
sbbl
les
mov
es
and
enter
ss
jl
mov
cmpl
int
rclb
aaa
mov
pop
movsl
inc
rcrb
jo
neg
shll
pop
lret
fwait
xor
sub
add
jae
mov
mov
aam
int
jns
call
xlat
fwait
insb
stos
addr16
cmpsb
jp
mov
mov
dec
mov
sub
xchg
xchg
pop
lods
shrl
scas
cmp
loopne
push
filds
jge
adc
fsubl
cmpsl
mov
add
add
cwtl
or
stos
xchg
cmp
in
and
cmp
add
add
fstpt
out
dec
imul
inc
repz
inc
daa
dec
inc
add
and
in
xchg
adcb
xor
mov
push
outsb
aas
jecxz
lret
cs
ljmp
fldt
stc
dec
push
mov
mov
cmpsb
inc
inc
inc
das
clc
out
leave
das
cmpsb
jnp
ja
popa
repnz
sbb
and
push
adc
popl
jae
es
xchg
lcall
sub
sbb
mov
adcb
out
add
mov
pop
inc
pop
daa
cmpsb
mov
lea
iret
out
xchg
push
rol
push
mov
psrlw
rolb
push
pusha
or
push
ja
cmpsl
push
jbe
cmpsl
jns
mov
fcoms
jbe
jge
sub
pop
jmp
pop
lret
test
cmovae
ss
lret
sbb
frstor
ja
mov
push
mov
add
add
outsl
sti
mov
mov
jns
add
add
lret
test
sbb
int3
sbb
mov
cmp
test
insb
call
mov
addr16
mov
test
daa
or
mov
jp
dec
repz
nop
jp
inc
lahf
int
lea
mov
and
jge
and
push
je
subb
aas
nop
aaa
xchg
pop
mov
cmp
int3
aas
dec
mov
or
adc
addr16
dec
inc
je
scas
mov
jne
push
cld
push
xor
in
loopne
push
or
xchg
cmp
mov
push
pop
jge
cmp
das
cmpsb
hlt
pop
adc
jns
pop
shrb
fs
movsb
push
sbb
sub
repnz
mov
jno
sub
in
pop
pop
pop
sbb
push
adc
data16
mov
mov
pop
push
insb
jns
sbb
jle
add
dec
sarl
add
push
and
xlat
aas
dec
sbb
or
stos
cwtl
add
add
jns
pop
mov
mov
jmp
testl
mov
insl
jno
outsb
xor
pop
push
loop
rcl
into
jle
jle
xchg
enter
call
mov
mov
push
or
dec
mov
sbb
xorb
bound
or
loop
dec
arpl
lds
push
dec
ret
pop
jo
rdtsc
test
arpl
test
leave
xchg
xchg
jne
sbbl
xchg
pop
pop
push
lock
lods
jo
adc
loopne
shll
roll
push
cmp
mov
sbb
cmpsb
stos
push
xchg
in
fcompl
cld
fdivrl
cli
mov
xchg
out
addr16
fs
testb
fstps
jmp
popa
jp
adc
lahf
lret
push
mov
inc
push
inc
in
mov
in
add
leave
adc
or
jae
pusha
jl
les
add
outsl
stos
dec
into
cmp
aas
subl
sub
xor
jecxz
cmp
add
imul
outsl
vmwrite
popf
mov
add
add
cmpsl
outsl
sub
loop
pop
sub
add
cltd
inc
xor
push
jmp
and
add
repz
adc
out
jge
loopne
xchg
aad
in
jae
popa
push
mov
aaa
jmp
add
or
add
hlt
fisttpll
lea
adc
lods
push
arpl
jp
test
ss
inc
mov
arpl
test
mov
sbb
adc
adc
outsb
dec
call
push
inc
in
jno
sub
mov
popf
outsb
sbb
xchg
xchg
xor
add
xchg
push
xor
shrl
cwtl
sbb
add
shr
inc
cltd
nopl
and
dec
add
jnp
mov
xorl
jb
cmpsl
ret
jbe
sub
mov
scas
sub
mov
add
add
lret
sbbl
popl
push
sbb
add
add
ficompl
sbb
movsl
push
daa
icebp
movsb
enter
sbb
dec
or
dec
dec
test
sbb
mov
push
adcl
adc
pop
cmp
xor
inc
jnp
popa
lcall
test
lods
fildll
dec
push
add
mov
xchg
or
cli
pop
pop
jle
xchg
ljmp
or
or
and
ljmp
fidivl
push
nop
nop
movsl
jg
ja
adc
xor
shl
add
mov
test
jne
mov
fisttps
sahf
fsts
scas
cmp
pushw
sbb
in
cmp
fucomip
mov
inc
aam
jbe
xor
sbb
fwait
imul
nop
sub
hlt
shrl
fsin
mov
add
cmc
jl
cld
arpl
lcall
popa
pop
sub
mov
cltd
pop
cmp
cmp
add
mov
imul
movsb
and
lret
imul
or
insl
lds
nop
out
mov
imul
mov
idivb
hlt
arpl
add
push
fcompl
xchg
push
push
fisubrl
jns
and
aad
jmp
cmp
test
stos
and
xchg
mov
mov
jne
icebp
xchg
gs
cwtl
mov
sahf
push
into
jae
cli
rol
mov
lcall
ret
pop
pusha
popa
push
dec
in
xchg
lea
sbb
jle
vpaddd
in
mov
cmpsl
imul
loope
pop
sbb
lahf
icebp
pusha
inc
notl
jecxz
js
push
pop
mov
push
jne
mov
test
sahf
xor
xor
push
pushf
mov
add
and
jbe
enter
es
push
sub
sbb
mov
or
and
in
fs
push
cmp
mov
icebp
loope
add
add
mov
sub
lahf
mov
sub
add
add
adc
sahf
fidivl
mov
add
mov
mov
cld
pop
inc
mov
loop
fcompl
movups
ljmp
mov
clc
in
jmp
es
fdivrs
insl
movsb
jl
in
sbb
cmp
iret
lahf
fnstcw
cmc
sti
mov
push
addr16
xor
ret
sub
cli
rorb
cltd
sbb
shll
pop
sti
adc
neg
push
and
cld
dec
imul
scas
add
in
lods
pop
jae
sub
jg
mov
mov
fcmovnb
ss
andl
pop
mov
mov
or
lea
lock
jge
hlt
mov
sbb
cld
iret
xchg
mov
out
add
dec
ficomps
popa
mov
push
iret
cmp
dec
call
pop
push
or
jecxz
insl
enter
or
lods
cmpsl
add
add
ja
out
inc
sub
or
dec
out
push
les
add
cld
aam
mov
popf
bound
into
push
cmpsb
mov
xchg
mov
shrb
fsubr
inc
loop
mov
nop
sbb
insb
cmpsb
popa
jl
and
mov
fldcw
loopne
mov
fildll
push
adc
js
xor
inc
out
push
arpl
cmc
jne
pop
pop
aaa
adc
test
cltd
popa
and
lret
sub
ja
cmp
mov
mov
jmp
in
xchg
xchg
insl
and
ficoml
jmp
stos
mov
arpl
scas
mov
loope
js
sbb
cmp
mov
cld
mov
aas
scas
cld
inc
pop
pusha
mov
mov
pop
or
test
push
dec
aam
int
xchg
sbb
sbb
in
jbe
xchg
push
out
hlt
daa
orb
dec
pusha
pop
add
shl
icebp
push
divl
aaa
out
test
jp
lods
dec
xchg
jmp
add
add
pusha
test
mov
cld
mov
leave
sahf
add
add
add
and
sbb
xor
jnp
mov
dec
movb
dec
mov
adc
mov
adc
inc
std
sub
mov
loope
call
pop
stos
je
xor
mov
push
cmp
lods
icebp
aam
add
push
push
jmp
cmp
adc
pop
cmpsb
lods
lock
lahf
cmpsl
xchg
cmp
in
inc
push
cmpsl
pop
lock
lret
adc
sub
mov
mov
jo
adc
lods
pop
push
and
inc
push
or
cmpsl
mov
add
dec
push
mov
in
ljmp
xor
std
jno
in
mov
jnp
xchg
popf
popa
jp
lcall
jle
cmpsl
xlat
icebp
and
mov
sbb
add
xor
loopne
mov
mov
jns,pn
or
mov
jno
push
mov
add
add
mov
repz
repz
loopne
imul
add
add
sub
leave
jmp
repnz
xor
andl
xchg
xor
cmovo
in
pop
in
scas
mov
call
jmp
cmp
mov
mov
bound
fwait
adc
lds
mov
inc
mov
sbb
or
ljmpw
inc
cmpsb
mov
stos
add
shlb
and
add
ss
jmp
push
popf
in
inc
test
and
and
jnp
cltd
mov
sub
or
ficomps
adcl
xor
ret
and
mov
mov
jne
cwtl
stos
push
stc
and
cli
mov
int
outsl
push
ljmp
mov
pop
mov
pusha
sbb
call
ret
outsb
mov
sub
clc
pusha
fistpll
cwtl
std
icebp
add
add
mov
inc
inc
add
mov
add
outsb
adcb
pop
cmp
es
or
jge
addb
scas
cwtl
xlat
xchg
xchg
data16
pop
mov
cmpsl
test
mov
pop
pushf
loope
pop
adc
aam
xchg
stc
fs
xchg
xchg
hlt
test
mov
pop
mov
sub
jbe
outsl
mov
aam
push
fistpl
pop
pop
subl
rcl
push
push
stos
mov
out
imul
nop
icebp
or
imul
movsb
jg
ljmp
repnz
mov
jno
iret
inc
cld
add
aam
pop
fcoml
movsb
adc
mov
mov
in
loop
aas
outsl
loope
jge
popf
test
xchg
bound
lods
iret
arpl
and
sarl
outsl
dec
fcmovu
inc
cmp
insb
leave
iret
out
loop
in
test
vpextrw
pop
adc
insl
push
aaa
jbe
pop
in
jl
inc
popl
add
or
sbb
inc
mov
sbb
add
and
lock
addr16
shrb
ficomps
ljmp
rclb
fsub
jb
xlat
inc
je
sbb
out
adc
sub
cmp
xor
mov
or
cltd
dec
inc
dec
hlt
or
shrb
lods
dec
mov
jne
stos
aaa
push
adc
divps
push
outsb
inc
int
loopne
in
jne
cmp
cmp
lods
adc
and
insb
mov
sub
pusha
sbb
inc
xor
aad
mov
into
jb
jb
mov
cmp
pop
out
and
aaa
cmpl
aaa
lret
cmc
adc
test
push
inc
iret
addr16
dec
sbb
mov
mov
sarb
rorl
sti
sub
sub
xor
or
cmp
pop
ja
xor
rorb
andl
dec
push
cmp
add
add
inc
fdivl
push
dec
mov
frstor
add
gs
pop
mov
jle
pop
cmp
ret
jae
in
push
aaa
lret
lahf
data16
mov
fsubrl
test
jp
mov
mov
mov
das
fstl
stc
pop
pop
mov
push
jmp
int
inc
mov
jbe
or
cmp
cmpsw
orl
or
inc
ret
jnp
addr16
lret
pop
idiv
sarb
cld
test
xchg
arpl
pop
addr16
add
mov
clc
mov
movsl
dec
push
mov
push
bound
adc
iret
call
cmp
pop
jno
sti
out
orb
mov
popa
mov
pusha
mov
dec
pop
sub
mov
lock
stos
xor
cld
mov
mov
in
dec
not
lret
fistpl
dec
mov
test
inc
jns
mov
add
add
sbb
mov
sbb
inc
jnp
loop
add
add
mov
fstpl
sbb
imul
xor
fldl
and
inc
je
cwtl
outsl
sbb
insb
sbb
push
mov
stos
mov
cli
aam
dec
jmp
imul
insb
inc
xchg
jbe
jae
test
test
sbb
cltd
inc
or
hlt
lea
mov
lret
jp
push
or
push
insb
cmp
pop
jbe
or
dec
cwtl
inc
or
scas
repz
mov
jno
mov
lds
mov
pop
mov
mov
out
in
pop
test
dec
inc
push
xorb
or
jecxz
jl
xchg
and
in
dec
lea
shll
mov
jg
in
add
pusha
inc
jo
sbb
lea
push
sbb
mov
mov
xchg
mov
mov
lea
mov
add
stos
hlt
jmp
cmp
jbe
mov
movsb
add
add
inc
fdivrl
loope
loop
add
mov
dec
sub
dec
fwait
cmp
sbb
sarb
xchg
or
clc
xchg
sbbb
mov
add
sbb
cmp
mov
es
lock
inc
sti
pop
fisubl
lock
cmp
out
xor
xchg
mov
shlb
lret
fisttpl
dec
aam
imul
stc
std
arpl
adc
fwait
cmc
and
push
xchg
sub
andb
leave
push
cmp
pop
or
test
std
push
push
sub
in
sub
aaa
test
jbe
es
push
test
xor
pop
inc
cltd
cmc
fwait
out
mov
div
pop
jnp
sbb
mov
jl
fldl
lea
out
sti
fsub
testb
stc
cmc
das
mov
sub
dec
out
mov
ja
lcall
sbb
add
add
out
xlat
out
jg
in
xor
fld
or
add
in
in
push
lds
xchg
pop
adc
and
jmp
or
mov
mov
leave
cltd
sbb
adc
mov
cwtl
mov
jne
outsl
jl
xchg
dec
aad
mov
pop
notl
adc
sbb
push
gs
dec
int
call
pusha
xlat
sub
test
loope
xchg
mov
test
lock
lcall
js
jne
orb
cmp
outsl
lret
add
out
pop
jo
cld
mov
pop
jo
sbb
and
pop
xchg
shrl
xlat
sbb
lret
cmp
mov
mov
dec
dec
mov
mov
test
and
xchg
in
sub
aad
jecxz
out
sub
mov
out
mov
pop
mov
push
cmpsb
lcall
xor
pushf
mov
dec
adc
out
jge
mov
add
add
mov
inc
fwait
lds
jo
fldl2e
xchg
daa
sbb
icebp
cmpsb
add
add
xchg
sbb
sbb
jmp
inc
movsb
mov
ljmp
adc
dec
scas
xchg
mov
jns
rorl
add
dec
mov
xchg
mov
mov
pop
data16
rorl
cwtl
cmp
scas
jae
iret
movsl
mov
test
imul
mov
sub
xchg
in
pop
push
jb
jmp
vmulss
dec
sbb
mov
add
sbb
es
lret
loopne
faddl
push
cld
lea
xchg
mov
jnp
adc
pushf
cmp
xorl
xchg
je
mov
popf
dec
add
xchg
and
je
or
into
jecxz
cmp
outsl
xchg
xchg
iret
push
fiadds
dec
pop
pop
repz
ja
cltd
mulb
js
or
add
stc
outsl
mov
push
es
jno
sub
pop
pushf
aas
or
sub
jbe
jnp
add
add
mov
fadds
mulb
add
icebp
xor
mov
jnp
mov
jecxz
add
iret
or
cmc
jg
pop
dec
jbe
je
xor
lcall
stc
cs
jae
addb
aaa
stc
es
sbb
mov
pop
arpl
sahf
lds
mov
mov
aaa
movsb
dec
pop
jo
jle
adc
dec
lcall
ja
test
aad
xchg
push
call
aaa
dec
pop
lds
add
mov
sbb
sbb
xor
clc
mov
cmpl
and
xor
cld
push
lods
xor
cltd
xchg
xor
ret
stc
ret
out
push
mov
jno
cld
push
mov
loopne
pop
mov
cli
out
insl
stos
sysret
fwait
ja
dec
jg
lds
push
pop
test
hlt
dec
mov
cld
mov
jo
sub
mov
push
mov
cltd
add
add
mov
push
sti
jmp
push
mov
idivb
cmovno
test
add
iret
jle
jp
rol
pop
or
jl
cmp
mov
mov
or
mov
popa
add
pop
dec
ss
mov
mov
cmp
inc
aaa
push
and
adc
and
pop
jp
insb
leave
mov
lds
dec
xchg
jbe
sbb
daa
sbb
out
xlat
icebp
loop
shl
sti
pop
lds
loopne
xor
arpl
js
hlt
push
add
mov
push
xor
push
aas
push
or
add
adc
lret
in
inc
fadds
ret
call
mov
rcr
rcll
push
mov
ret
xchg
aam
and
jo
add
xor
xchg
pop
add
mov
add
xchg
ss
lret
in
sbb
pop
imul
nop
pop
fbstp
dec
xor
xorb
add
mov
jecxz
lock
adc
add
add
das
les
out
pop
lahf
inc
jmp
test
jae
inc
jo
lods
cs
mov
mov
jbe
adc
push
jb
stc
les
push
leave
ljmp
cli
or
adc
test
xor
xchg
push
jae
push
leave
jecxz
popa
xchg
cmp
fdivrl
subl
and
inc
outsb
orl
adc
out
cli
popa
jmp
cmp
push
sbb
rcrb
jge
mov
sahf
lods
movsl
mov
push
fstpt
lods
fdivrs
rclb
push
lcall
das
jle
xor
mov
xor
and
xchg
cld
pop
dec
adc
dec
xor
push
mov
xor
xor
pop
vpaddusb
int
fiaddl
cmp
dec
add
jne
sub
mov
add
sub
stc
rclb
sub
cmp
pop
jbe
insb
push
jb
mov
add
add
cld
mov
leave
pop
into
les
add
add
add
xor
dec
js
enter
int
fnstsw
out
ljmp
repz
mov
jbe
sarb
popf
xchg
insl
popf
jns
mov
jno
roll
ret
outsb
mov
mov
xor
rcrb
adc
daa
jbe
in
loop
out
in
fstps
sub
and
jbe
jnp
idivl
mov
sub
ds
loop
cmp
mov
test
gs
shrb
and
adc
leave
fs
pushf
pop
stos
adc
daa
in
sbb
and
std
mov
or
popl
cltd
sti
pop
scas
and
pop
and
ficoms
xor
bswap
add
pop
int
mov
push
test
loope
jae
es
mov
sti
iret
xchg
dec
inc
jmp
pushf
out
jmp
in
hlt
dec
push
aas
sub
mov
push
out
aas
add
add
out
cmc
mov
inc
icebp
popa
out
or
add
jne
sbb
ror
push
mov
jae
cmc
push
insb
nop
mov
sub
inc
cli
jge
sub
add
ja
pushf
adc
lret
and
mov
sub
push
gs
je
xor
push
xchg
push
push
mov
mov
rclb
jne
fwait
cmp
push
pusha
lds
sbb
mov
dec
mov
in
sahf
jns
dec
mov
fwait
cmp
in
fyl2xp1
adc
sbb
dec
cmpsl
and
sar
lret
rcrb
pop
sub
lock
pop
stc
dec
loop
lods
into
jmp
adc
sub
loop
sub
xchg
fdivp
cmc
scas
scas
mov
inc
mov
adc
push
rorl
cmp
mov
cli
repz
imul
xchg
jne
fcompl
ficoml
ds
sub
adc
icebp
push
inc
mov
int3
repnz
in
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
loop
cmpsb
shrd
add
sbb
push
cli
mov
xor
or
adc
sub
pop
ja
pop
in
jle
mov
mov
push
dec
pushf
add
test
sbb
push
out
jl
les
xor
pop
sub
movsb
pop
or
jnp
aaa
jbe
dec
dec
cmpsl
stos
int3
or
mov
mov
cwtl
xor
sti
test
push
jns
pop
pop
aas
jmp
in
xor
imul
out
dec
or
inc
cli
and
nop
xlat
dec
loopne
cmc
gs
sahf
adc
imul
fimull
out
aad
xchg
pusha
hlt
inc
leave
mov
pop
out
add
stos
xchg
cld
mov
jno
push
scas
mov
adc
mov
pop
jo
das
mov
addl
subb
mov
sbb
sbb
mov
mov
xchg
dec
push
pushf
in
jge
push
les
add
add
fidivs
loop
ljmp
jecxz
xor
adc
add
add
loope
rorl
push
pop
pop
int3
mov
mov
xor
sub
fs
xchg
mov
cmp
pusha
mov
xor
or
lock
pushf
rorb
jo
repz
jnp
mov
ror
add
jmp
add
add
test
gs
xorb
repz
pop
or
mov
or
jo
mov
aaa
inc
outsb
xor
pop
xchg
test
adc
jge
leave
mov
ljmp
aam
mov
xchg
cmpsb
pop
xor
repz
int
stc
mov
frstor
fsts
repz
push
jge
popf
dec
icebp
cmp
adc
clc
adc
cmp
jg
adcl
mov
jmp
fsubs
add
push
mov
jns
cmp
dec
fucomp
inc
inc
sbb
push
nop
in
xchg
sub
out
add
push
xchg
jg
jmp
std
mov
inc
lods
sbbb
add
add
into
out
icebp
pusha
ret
push
stos
lds
push
push
cmpsb
dec
outsl
pop
aas
mov
lcall
or
jge
pop
int
add
ds
notl
xor
adcb
mov
dec
and
xchg
int
lcall
xchg
inc
int3
jge
ret
insl
cmp
mov
mov
xor
jmp
adc
or
sub
test
repz
imul
mov
fisttpl
push
cmp
mov
leave
jae
push
mov
cmp
out
adc
aas
mov
push
mov
enter
repnz
fcomi
mov
sub
jmp
ss
out
adc
adc
push
adc
dec
clc
fnstenv
mov
out
lock
push
or
cmp
push
jmp
shrl
les
repz
std
icebp
sub
pop
ja
popf
xchg
outsl
in
jne
mov
push
jmp
rolb
add
xor
inc
mov
mov
add
add
mov
sub
dec
mov
inc
jnp
xchg
sarl
add
pop
fsubrp
xchg
mov
adc
daa
repz
mov
sub
mov
adc
clc
loopne
sbb
cli
push
mov
mov
xchg
add
xchg
movsb
or
leave
movsb
sbb
jle
es
sar
jo
mov
cltd
mov
lret
and
push
xor
into
repnz
decl
pop
cmc
ljmp
mov
movsb
pop
xchg
and
bound
inc
adc
jp
xor
jnp
or
fimull
lods
pop
ficoml
dec
adc
inc
js
subb
pop
xchg
add
or
rorb
jno
push
sbb
mov
inc
mov
cli
pop
pop
ljmp
sub
cmpsb
inc
add
inc
and
flds
add
push
pop
xor
cmp
inc
call
mov
mov
add
mov
and
outsb
fsts
sbb
or
pushf
icebp
xchg
cltd
imul
cmp
icebp
pop
loop
sub
pop
cmp
jp
insl
and
lret
pop
xor
add
shrl
mov
aam
mov
pop
and
sbb
gs
xor
popa
sub
mov
clc
push
and
orb
or
out
pop
in
cmp
inc
clc
call
jge
push
mov
mov
in
sub
fcmovne
sub
dec
xor
sub
popf
mov
push
push
mov
shll
mov
shlb
mov
dec
jnp
mov
xchg
push
pop
xchg
mov
dec
sarl
aad
xchg
xor
movsl
pushl
aam
adc
jle
mov
adc
dec
dec
pop
jnp
shl
or
test
add
mov
mov
lods
popa
mov
es
les
mov
arpl
insl
sub
add
out
mov
dec
sub
repnz
lret
and
addr16
shlb
push
fwait
mov
sbb
push
xor
orl
popa
mov
fwait
out
xor
pop
ret
nop
sbb
outsl
sbb
cmp
dec
in
xchg
hlt
xor
fbld
dec
enter
and
mov
cmp
mov
scas
rorl
cmp
xchg
shl
pop
hlt
or
je
add
sahf
xchg
into
inc
jle
cmp
cltd
push
daa
sbb
cwtl
or
mov
sub
fs
dec
mov
xchg
xchg
sbb
daa
mov
arpl
stc
inc
push
sbb
cmpsl
lahf
and
mov
outsl
scas
add
xchg
mov
pop
lret
arpl
negb
jmp
mov
shr
lahf
ret
dec
mov
mov
mov
add
add
clc
pop
stc
out
push
pop
bound
scas
sub
add
add
mov
jns
jnp
mov
mov
arpl
jb
mov
cmpsl
rdtsc
idivb
add
inc
ja
clc
and
jg
mov
cmp
push
pop
je
dec
dec
popf
popf
adc
outsl
inc
mov
xchg
xchg
push
push
outsb
icebp
cld
xchg
enter
mov
pusha
subl
loope
xchg
repz
aas
je
fmull
or
push
repnz
fisubrs
cmp
out
adc
outsl
in
cmp
mov
xchg
add
loopne
aam
push
addr16
rorb
sub
xchg
xor
cmp
or
int3
xchg
mov
mov
vhaddpd
ds
test
xor
cmp
mov
pop
add
knotw
push
andb
das
add
aaa
add
sub
or
push
gs
add
add
push
mov
lcall
push
xor
add
fistpll
lock
test
push
cmp
mov
mul
pop
pusha
inc
icebp
pop
add
mov
jge
test
or
divl
inc
adc
loopne
int3
mov
jp
cmp
popa
ss
into
fmul
dec
sub
jg
cli
and
push
pop
in
mov
pop
sbb
add
out
and
sbb
cli
popf
and
add
mov
sub
stc
pop
xlat
jb
xchg
cli
adc
nop
cmp
pop
inc
xchg
cld
cwtl
xor
xor
mov
sbb
pop
dec
loopne
cmp
fidivrs
pop
inc
add
sub
mov
movsb
ljmp
xchg
loop
shrl
add
filds
xor
mov
dec
cld
fisttpll
push
sub
push
inc
stc
aad
daa
js
adc
lahf
sub
adc
cmpsb
test
movl
lahf
add
int3
jmp
fnsave
add
xorl
insb
lret
notl
aaa
mov
add
pusha
sbb
and
push
loopne
xor
dec
mov
pop
lret
in
rcrl
jbe
sub
cwtl
test
rcll
stc
in
ds
loop
out
sti
jle
jno
scas
sbb
stc
xchg
xlat
adc
inc
push
jg
enter
mov
addl
sub
xchg
xchg
mov
in
inc
hlt
dec
into
cmp
jno
pop
jnp
test
pusha
jnp
out
int
loopne
push
xchg
jne
pushf
iret
mov
cli
stos
frstor
jmp
push
inc
dec
outsb
cmp
repnz
mov
test
cmpsl
int3
jle
push
add
mov
dec
mov
add
push
adc
test
xchg
push
add
push
mov
xchg
cmp
pusha
dec
push
and
jns
adc
out
mov
dec
and
mov
sub
and
jns
push
jno
and
or
xor
adc
sti
daa
add
add
pop
sbbl
fstp
rorl
repnz
cld
cmp
add
add
push
icebp
xor
and
and
push
les
outsb
and
arpl
cmp
pop
or
pop
adcl
mov
cmc
mov
movsl
inc
mov
jge
imul
hlt
mov
testl
gs
scas
add
lahf
push
leave
jl
adc
pop
outsl
mov
add
or
jle
add
mov
pop
pop
shr
and
xor
inc
dec
adc
popf
xor
test
scas
stc
call
push
pushf
int
push
out
imul
push
stos
xor
cmp
jne
outsb
mov
xor
cmp
insl
dec
mov
mov
inc
mov
iret
add
out
addw
mov
add
fldcw
lods
xor
jmp
call
inc
inc
or
scas
dec
mov
jmp
ror
jns
nop
mov
mov
enter
inc
fisttpll
mov
add
in
mov
jecxz
out
mov
xchg
aas
out
mov
add
insb
dec
mov
push
xor
stos
lahf
and
xor
dec
xor
les
in
add
jbe
and
cld
test
pop
pop
push
pop
dec
hlt
and
inc
pop
dec
cmp
popa
adc
mov
fmull
sbb
add
addr16
scas
push
xchg
cmp
mov
jmp
mov
mov
pop
sbb
pop
mov
addr16
xor
inc
jb
arpl
inc
aaa
cmp
adc
push
orb
cwtl
mov
or
jnp
ljmp
enter
cli
cld
xor
hlt
mov
adc
dec
push
add
inc
test
jbe
gs
adc
call
fistl
aaa
lret
xor
push
dec
outsb
push
ret
jae
dec
imul
lcall
fldcw
mov
aaa
ljmp
inc
movsl
call
add
push
xchg
test
jg
into
lret
orl
add
add
into
or
rorl
jg
jg,pn
jmp
scas
mov
lret
add
sarl
xchg
test
ja
add
push
or
das
pop
jecxz
in
jbe
fsubrp
mov
insb
es
loope
sti
in
mov
repz
mov
mov
cmpsl
xchg
cli
pop
or
mov
xchg
sub
inc
addr16
add
cwtl
js
push
lahf
aaa
push
aaa
out
or
jne
adc
mov
out
in
fstl
mov
cmc
mov
mov
mov
sbb
dec
iret
jno
mov
xchg
mov
jno
ret
adcb
mov
xchg
cmp
jae
mov
sbb
pop
push
push
and
mov
pop
popa
std
mov
sbb
dec
lods
mov
jo
and
stos
mov
xor
lock
in
lcall
jae
dec
mov
cmpb
dec
mov
add
insl
into
mov
mov
ljmp
and
mov
jae
stos
push
jl
hlt
in
jnp
mov
xor
rorl
ss
out
adc
pusha
jg
mov
mov
mov
incb
fstp
mov
call
jge
fistps
mov
cltd
dec
insl
jns
push
mov
cld
lahf
test
lods
insl
or
dec
sbbl
outsl
xchg
mov
mov
pop
sbb
mov
pop
xchg
dec
push
cmp
xchg
xchg
pop
xchg
loop
je
cmpsb
rorb
mov
jp
mov
cltd
dec
jne
add
mov
xchg
nop
xchg
push
push
mov
cmp
aam
mov
lods
mov
int3
jle
cs
add
ret
sbb
fs
rorl
imul
pop
jns
adc
mov
call
add
add
sub
jg,pt
dec
arpl
je
mov
add
inc
jge
popa
es
into
sar
out
nop
mov
clc
pop
call
mov
sbb
sbb
xor
mov
stos
mov
pop
xchg
push
ds
dec
xor
cmp
loope
mov
mov
dec
push
pusha
sbb
xlat
mov
aas
std
push
aas
add
ljmp
fnsetpm(287
jns
xchg
or
mull
popa
inc
ljmp
adc
jp
divb
jecxz
pop
popf
aam
pushf
sbb
int
adc
arpl
inc
cltd
fcoml
lea
cmpsb
ja
scas
imul
mov
push
xchg
shl
fidivs
scas
push
xchg
jo
in
call
iret
fwait
mov
mov
repnz
je
lret
arpl
push
in
mov
insb
mov
mov
push
cmp
cmpsb
shr
mov
cmp
fcmovnb
lcall
loopne
pop
sub
add
insl
sbb
outsl
mov
iret
xor
add
add
jne
mov
jns
test
das
sbb
jae
aaa
mov
mov
outsl
mov
cmp
popf
adc
cmpsl
clc
dec
mov
sub
aam
cmc
mov
xchg
lods
inc
scas
jbe
shll
and
push
es
mov
addr16
idivl
dec
out
mov
and
push
lcall
aaa
ret
cmp
aaa
pop
mov
cmpsb
xchg
push
imul
imul
mov
jg
or
iret
push
xor
lahf
cmp
push
sarb
mov
adc
xor
outsl
inc
xchg
push
mov
sbbb
push
dec
pushf
test
in
add
mov
ss
in
loope
dec
cmp
mov
mov
cmpb
sbb
test
adc
mov
lret
mov
aas
ja
outsl
add
add
inc
fbld
mov
pop
jo
stos
cld
pop
mov
add
adc
sub
push
ret
popa
cmp
sbb
cmp
dec
adc
inc
jns
andl
lahf
loop
imul
ljmp
xor
push
inc
pop
imul
xor
imul
shl
fimuls
and
in
xlat
pop
insl
fucomp
jmp
scas
add
clc
mov
dec
cmp
jp
dec
push
dec
les
loope
adc
movsl
sub
or
popa
xor
add
int3
and
mov
xchg
dec
ret
mov
jno
out
mov
xchg
push
sbb
int
inc
xchg
xor
jle
ret
jo
xchg
xor
add
pop
imul
dec
or
xchg
inc
mov
outsb
scas
mov
inc
sub
arpl
mov
xchg
xchg
pop
movswl
xchg
mov
fs
aam
mov
movsl
jbe
add
push
push
call
push
ja
mov
add
cmp
adc
and
push
in
test
inc
je
lea
stos
pop
lahf
cmp
outsl
or
sbb
clc
lods
sti
push
dec
add
add
inc
sbb
aas
add
mov
mov
jge
imul
xor
out
cmpsb
push
cmp
stos
fs
or
fisubrl
cld
pop
ja
and
mov
cltd
xchg
push
pop
xchg
push
cwtl
movsl
push
fwait
out
push
add
icebp
adc
aam
lods
dec
inc
push
sub
rcll
jae
push
push
mov
push
cmc
and
mov
pop
cmp
push
or
mov
add
or
sub
imul
repz
jge
mov
orb
xor
mov
test
into
mov
out
movsl
imull
ljmp
dec
aam
stos
xor
mov
lock
sub
insl
out
add
add
std
sti
leave
sti
iret
jmp
pop
fsts
mov
add
xor
push
into
add
ljmp
inc
shlb
clc
inc
push
shl
or
inc
add
test
leave
aam
iret
dec
cmp
imul
xlat
cltd
cltd
mov
sub
loopne
fwait
inc
andb
js
xor
mov
out
push
adc
mov
dec
ja
gs
mov
push
and
dec
fs
jb
insl
or
jnp
inc
cld
addr16
int3
fisubrl
or
ds
icebp
sahf
xchg
leave
testb
pop
pop
or
in
imul
ja
jge
mov
add
out
insl
lret
mov
xchg
popf
xor
cmc
mov
insl
cmp
add
mov
imul
cli
jmp
mov
xor
aad
roll
sbb
mov
jne
imul
leave
cmpsl
orl
leave
lret
dec
imul
das
mov
pushf
add
add
mov
xor
push
test
imul
adc
add
jmp
xor
lds
pop
and
pusha
pop
aam
sbb
jns
fs
shll
jg
out
xchg
orb
pop
push
lods
jg
movsb
aad
lock
pop
jmp
xchg
jb
sti
js
sbb
aam
jge
shrb
xor
push
sbb
das
mov
xor
xor
lret
fs
je
push
sub
or
test
fcomps
adc
add
mov
or
aaa
and
jmp
stos
mov
dec
xchg
sbb
imul
aas
ss
das
cmpl
into
jne
fs
cli
pop
out
xchg
leave
sub
pop
sbb
data16
mov
aad
fsubrl
out
in
stos
aam
cmp
fs
data16
dec
xchg
into
rcll
loope
push
popa
mov
xor
xor
inc
and
and
add
jg
mov
sahf
loop
add
rol
outsb
rolb
add
dec
mov
mov
mov
mov
sbb
pop
add
xchg
sub
fisubl
lock
repnz
mov
dec
out
sbb
dec
hlt
mov
push
cmp
mov
sbb
sahf
call
cmp
push
hlt
xchg
and
movsl
scas
adc
clc
dec
push
stos
and
inc
inc
or
xchg
push
push
lods
xchg
jecxz
jl
or
adc
inc
sub
mov
mov
mov
enter
pop
jmp
add
xchg
mov
sbb
inc
cmc
leave
imul
insl
int
pop
inc
cld
loope
into
mov
mov
ret
cltd
pop
test
bound
in
jne
or
adcb
std
shll
lock
fwait
sub
cmp
mov
push
and
push
ret
xor
adc
dec
mov
imul
fmull
add
in
add
xor
push
cld
pushl
cld
sbb
jae
add
add
or
leave
sub
adc
jmp
sub
repnz
jle
xchg
xchg
mov
mov
in
add
mov
ficoms
or
dec
inc
fnstenvs
sub
push
dec
and
sbb
jbe
out
xchg
stos
add
jo
fwait
loopne
mov
cmp
mov
faddp
inc
mov
jbe
push
mul
jns
addr16
cmpsl
adc
insb
or
push
in
fpatan
mov
jg
push
scas
outsb
iret
dec
jne
int
pop
cmpsl
cwtl
mov
and
fwait
push
jne
xchg
xor
out
outsl
std
std
xchg
fcomps
loop
jae
in
and
subl
dec
cmp
xchg
test
push
test
lock
inc
in
or
lock
imul
scas
cmp
mov
mov
ja
or
sbb
add
pop
jmp
add
xlat
pushf
shrb
lcall
xchg
lret
loop
ret
add
xor
pop
sbb
xor
cltd
mov
rol
add
xor
shll
sub
stos
jmp
or
fnstsw
ret
inc
fstl
push
jmp
cmc
into
daa
in
cmp
lahf
lods
js
jmp
stos
add
xchg
loopne
push
in
sub
imul
loop
inc
fnstcw
stos
aad
cmpl
mov
adc
cmp
mov
mov
cmp
fidivl
ret
call
push
sbb
adc
imul
fcompl
fstl
jle
jp
imul
xchg
cmp
mov
dec
out
sbb
xor
cmpsb
or
mov
or
lock
cld
mov
or
pop
xchg
xor
add
movsb
call
xor
xchg
lea
xchg
fcmovnbe
outsl
xchg
cwtl
filds
mov
xor
outsb
mov
add
sub
scas
mov
aas
scas
fxtract
xor
add
add
inc
jno
mov
and
xchg
inc
jae
fsubrp
aam
jecxz
test
mov
clc
inc
pop
inc
dec
inc
mov
push
jns
and
sbbb
xlat
sbb
das
mov
nop
fldt
jp
out
mov
jne
xor
lret
das
pop
jle
xchg
cli
adc
push
sub
sub
xchg
inc
stc
dec
nop
call
and
sbb
hlt
mov
inc
jl
inc
cwtl
ret
mov
pop
mov
loop
push
out
cmpsb
repz
lds
adc
arpl
aaa
sbb
mov
aas
push
fisttpll
xchg
cmp
and
in
inc
in
cli
insl
jae
popf
push
jnp
jecxz
mov
xor
mov
fstpt
stos
je
cmp
test
lods
push
dec
sbb
sbb
sbb
add
or
add
add
jne
jne
jg
loop
mov
push
add
loope
std
aaa
pusha
xchg
inc
fdivrl
sub
roll
loopne
xor
jl
fs
fildll
imul
jmp
in
inc
popa
ret
adc
shrb
mov
sbb
and
sbb
arpl
or
daa
fistpll
lret
adc
pop
push
sbb
add
stos
cmp
in
loopne
mov
adc
sarb
in
cmp
push
jbe
lods
mov
push
jb
jp
shlb
push
jmp
and
shlb
pop
mov
rcll
push
push
xchg
fcoml
cld
inc
loop
test
ret
je
ret
popa
cmpsl
jmp
jno
jns
iret
dec
inc
push
rcl
xchg
mov
sub
xchg
rcll
insl
mov
int
mov
sbb
sbb
sub
dec
or
cmpsl
clc
ds
xor
add
maskmovq
xchg
mov
add
sbb
mov
cmc
mov
ja
lds
add
test
insb
jnp
repz
sbb
pop
popf
loopne
pusha
std
push
fistpll
cmp
add
lcall
mov
das
bound
xchg
test
sti
out
stos
mov
pmulhuw
sub
mov
outsl
sarb
mov
je
mov
push
pop
push
xor
xorl
adc
jno
div
cmp
mov
or
scas
in
sti
or
jmp
push
xchg
outsb
in
and
scas
insl
fs
arpl
into
das
hlt
pop
xchg
xorb
adc
movsb
push
nop
ficomps
push
push
cwtl
int
std
lret
scas
stos
pop
mov
lea
jns
lahf
cwtl
movsb
gs
out
dec
mov
push
std
jne
aam
inc
dec
mov
outsl
cmp
pop
push
pop
push
pop
sbb
add
adc
pop
orl
mov
or
sarb
dec
jns
fadds
add
and
outsb
jle
lods
testl
movb
add
push
lret
and
sbb
out
add
xchg
fwait
xchg
aad
es
inc
rcll
stos
add
adc
in
push
outsl
jnp
and
push
push
lods
sub
sbb
xchg
dec
sbb
aad
stc
sbb
outsl
gs
std
mov
pusha
clc
pop
out
sub
sbb
jle
jnp
out
incl
movsb
pop
out
jg
fsub
pop
cmp
sub
and
dec
icebp
pop
or
cltd
lret
test
jp
rcrb
or
jmp
add
outsb
fnstsw
sub
xchg
fcmovnu
cmpsl
add
outsb
shll
fsts
lcall
sbb
sbb
stos
mov
mov
dec
mov
inc
sub
loop
in
out
dec
adc
xor
out
xchg
cmp
jp
jo
cmp
xor
ret
js
je
aam
pop
xor
add
sub
push
dec
add
add
mov
xchg
insb
daa
mov
add
setns
sahf
stc
aaa
pop
fistl
jmpw
or
push
mov
adc
nop
xchg
ds
ret
cmp
mov
rcl
les
inc
dec
add
cmp
and
mov
je
cmp
xchg
dec
jl
lret
jecxz,pt
pop
xor
stos
fcmove
mov
mov
js
xchg
rcrl
andb
mov
fwait
andb
cmp
rcl
jnp
push
cld
inc
dec
sti
dec
cli
mov
adc
mov
lret
addb
inc
pusha
push
inc
lock
xchg
xor
inc
jecxz
fcoms
out
cld
movsb
hlt
rcrb
pop
inc
into
mov
xchg
fs
jp
loop
sub
loop
imul
shll
pop
jne
out
aad
and
stos
dec
decl
inc
cld
sti
pushf
sarb
or
out
xchg
int
xor
inc
stos
mov
test
into
add
add
out
sti
xlat
in
aad
sub
jmp
add
mov
xor
xor
icebp
mov
aas
aas
lret
cmp
jge
dec
add
cld
mov
ja
mov
rcr
movsb
jne
mov
mov
out
pop
sbb
je
fidivl
mov
testl
lcall
or
mov
fxch
mull
dec
outsb
enter
mov
mov
mov
xor
xchg
jmp
out
mov
mov
in
nop
mov
inc
clc
orl
xchg
into
insl
sti
movsb
or
fwait
xchg
cld
xchg
xchg
jg
daa
icebp
mov
fistps
lret
das
insl
aad
sbb
lods
mov
adc
jae
jl
rol
and
loop
lods
sti
xor
js
jg
pop
leave
addr16
outsb
outsb
aaa
outsl
add
inc
jo
pop
std
cld
adc
sbb
dec
cld
dec
dec
cld
insb
lock
leave
dec
aas
sbb
ds
sub
cmp
jg
and
mov
orb
fwait
leave
add
add
push
xor
movsb
ds
mov
incb
lock
ret
jmp
adc
outsl
adc
inc
loopne
les
das
and
out
icebp
push
imul
idiv
fimuls
add
push
jns
stos
test
and
jae
push
lds
xor
pop
out
jo
jbe
pushf
xor
test
fs
xchg
mov
sahf
lcall
scas
daa
pusha
fstl
imul
insb
and
push
or
xchg
movsl
lods
mov
jle
lds
xchg
sub
rcr
scas
inc
sbb
and
data16
push
jmp
mov
je
aam
mov
add
fwait
and
inc
push
stos
aas
cmp
xchg
fisubl
pop
jge
or
mov
ljmp
mull
xchg
pop
stc
sub
push
add
mov
pop
push
rcl
sti
cmp
jne
mov
add
xor
fistpll
out
repz
fcoms
lret
fsubl
repz
add
add
mov
leave
xor
ss
or
or
cmp
imul
sub
mov
popa
sub
inc
push
dec
cwtl
ds
jp
dec
leave
popa
inc
mov
fsubr
add
cmp
sub
or
sarl
lea
aas
bound
or
mov
inc
out
adc
ja
xor
repz
jp
stos
ds
lret
scas
and
ret
push
movsl
adc
adc
fwait
sbb
aam
ljmp
sahf
pop
ret
pop
mov
push
or
or
mov
in
dec
xchg
shlb
pop
cwtl
and
adc
sub
xchg
sbb
test
xchg
and
lods
imul
mov
fwait
add
and
shll
fidivrl
sbb
test
iret
xor
and
loopne
shr
push
jne
sarb
and
add
add
mov
mov
jns
mov
movsl
lret
add
add
cmpsb
fisubrs
adc
inc
dec
jg
mov
push
sbb
addr16
dec
push
dec
popa
push
push
sahf
sub
dec
nop
out
xchg
mov
mov
test
lret
rcll
mov
push
insl
cmp
cwtl
lret
sti
sbb
mov
loopne
or
test
insl
mov
scas
mov
out
xor
out
out
rorl
enter
cmp
ljmp
nop
out
inc
test
push
fnstsw
xchg
lea
scas
mov
add
mov
ljmp
add
and
cmp
ret
rclb
ret
jbe
clc
clc
add
xchg
call
cltd
idivl
adc
xor
push
int3
xchg
and
dec
cmp
inc
adc
fstps
inc
cli
es
popa
and
and
shrb
push
lahf
xchg
and
cmpsb
add
add
enter
in
sbb
push
inc
jb
jmp
add
scas
mov
mov
cmp
je
push
pusha
xor
outsl
inc
pushf
lock
lea
mov
xor
adc
cmp
mov
in
in
ljmp
pop
fwait
sarl
jns
xchg
out
addr16
cmpsb
mov
cld
outsb
mov
cmp
dec
pop
bound
push
inc
cmp
jo
fsts
add
lret
jne
sahf
add
cmc
aad
sbb
aas
and
xchg
in
les
insl
push
add
in
das
cltd
adc
hlt
loope
lds
outsl
in
cmp
push
inc
sarl
lret
pop
mov
and
push
mov
mov
jl
scas
cmp
jnp
or
pop
push
add
out
insb
xor
sti
int
cli
nop
cmp
sub
rclb
mov
stc
fcmovne
push
addb
ret
jbe
and
scas
push
add
add
imul
cmc
call
inc
push
popa
jl
pop
xor
add
jl
xor
xor
loope
jns
out
mov
mov
add
js
xchg
xchg
push
push
adc
xchg
sti
sbb
mov
fstps
call
sub
push
lods
or
nop
leave
or
pop
cmp
pusha
mov
pusha
mov
mov
inc
lahf
les
cwtl
pushf
mov
je
sar
rcrb
push
lods
cmpsl
aam
xchg
psrld
add
or
call
push
cmp
loope
repz
xor
out
leave
cmp
adcb
repnz
and
inc
add
sbb
imul
leave
jp
jge
push
gs
push
daa
mov
mov
movsb
fstpl
fld
bound
jnp
sarl
mov
out
sbb
out
popa
leave
idivl
lahf
lret
into
es
add
mov
test
dec
xchg
mov
or
push
jne
add
movsl
mov
iret
sub
mov
sahf
mov
add
add
pop
loop
mov
jns
fisubl
data16
stc
addr16
loop
ds
push
arpl
repz
lret
pop
insl
in
rcll
adc
mov
dec
and
mov
fwait
inc
jge
cs
sbbb
mov
mov
add
testl
out
ljmp
jnp
stc
addb
les
cmp
push
sbb
xchg
mov
call
outsl
arpl
mov
push
clc
fwait
pop
add
push
sahf
fwait
pop
icebp
popf
sub
shlb
fadds
xor
dec
mov
adcb
xor
mov
mov
imul
pop
outsl
rorl
or
notl
call
imul
ja
mov
mov
inc
pop
push
jle
adc
mov
fidivrs
jp
loope
movsl
push
sub
or
xchg
sbb
mov
out
out
out
into
gs
cld
test
mov
add
add
lret
fisubs
scas
sub
test
jae
ficoms
sub
stc
jge
stc
divl
cmp
mov
lret
push
dec
xor
in
push
xor
out
movsl
inc
xchg
pop
loop
sub
lcall
in
bnd
ja
push
adc
inc
in
push
mov
mov
xlat
mov
icebp
in
push
jnp
mov
xor
dec
pop
insb
inc
loopne
subl
cli
lds
adc
push
insl
iret
add
frstor
ljmp
and
or
jb
lea
mov
loop
push
incl
out
jle
dec
adcl
aam
jmp
and
sub
mov
loopne
xchg
ja
dec
cltd
xor
jge
sbb
adc
jne
fs
and
js
loop
fsubs
push
clc
and
loopne
and
je
out
mov
cmpsl
in
cmp
rolb
add
aam
jecxz
test
mov
ret
adc
sub
mov
pop
dec
mov
pop
jno
mov
cmpsb
ds
fdivl
adc
std
inc
mov
test
shlb
pop
nop
mov
xlat
js
cmc
fwait
roll
test
dec
jne
xor
sbb
mov
jg
scas
pusha
push
faddl
xor
in
push
pop
jae
popf
repnz
ss
pop
sub
incl
ja
pop
mov
pop
xchg
and
js
or
mov
xor
sub
shrl
jge
and
push
aam
jmp
sahf
sub
and
jle
fisubrs
xor
popf
mov
pop
xchg
aaa
pop
popf
xchg
inc
mov
cmp
inc
adc
sub
fiaddl
mov
fidivs
xchg
bound
loop
sbb
xor
dec
in
lock
inc
inc
pop
inc
imulb
add
add
dec
daa
dec
das
outsb
imul
push
xchg
xchg
rolb
roll
add
sbb
roll
fbstp
loope
xor
jno
shl
je
test
leave
or
push
fildll
push
cmp
inc
mov
inc
and
xchg
cmc
fs
ds
mov
mov
lock
repnz
mov
ret
addr16
lock
fsub
cmp
je
xlat
into
inc
xchg
stos
mov
movsb
push
and
pop
sub
in
sub
loopne
cltd
cmc
imul
push
sbb
cmp
fsubrl
ret
dec
dec
cltd
pushl
mov
fidivrs
pusha
cmp
fldl
jp
loopne
inc
cmp
aad
sbb
sub
and
sub
pop
mov
dec
add
cs
repnz
test
enter
int
add
pop
xor
cmpsb
inc
bound
les
mov
lahf
insl
pushw
sub
add
call
out
lahf
ret
or
ds
ds
add
mov
sti
sub
iret
in
or
push
gs
lcall
ds
jb
xor
cltd
adc
addr16
jbe
and
jb
xchg
jmp
call
or
das
lock
shlb
mov
out
sub
sti
pop
or
test
scas
cmc
aas
in
adcb
dec
lahf
push
sub
add
sbb
pand
or
pushf
sub
jmp
push
lret
int3
mov
out
lahf
clc
or
lea
pop
imul
mov
in
orl
mov
repz
lds
jmp
stc
out
pop
or
cli
add
fiadds
lds
or
outsl
test
out
sbb
imul
dec
gs
inc
add
lods
cld
scas
pop
xor
outsb
lahf
add
iret
cld
inc
pop
adcl
add
add
neg
outsl
push
xchg
or
mov
add
add
mov
decb
push
xor
mov
add
pop
xlat
xor
aam
test
mov
pushf
xchg
sarl
dec
inc
mov
lcall
ja
in
dec
inc
call
push
into
lret
or
rorb
xchg
scas
xor
inc
in
xchg
inc
mov
cltd
jp
jge
fildll
js
sbb
push
loope
or
mov
shrb
fsubrs
or
mov
jecxz
adc
jbe
loopne
and
pop
mov
xchg
popa
sub
insb
lret
jmp
and
lods
push
int
pop
push
in
loop
aaa
inc
or
lock
ss
rorb
push
cmp
pusha
xlat
shr
mov
or
sub
mov
jbe
and
mov
scas
xchg
lock
xor
adc
jecxz
test
lods
fildl
sub
popa
push
sub
add
xor
add
sbb
sub
dec
sub
aam
add
sub
cmc
imul
and
mov
out
pop
dec
mov
arpl
scas
testb
std
mov
xchg
scas
inc
imul
test
sarl
repnz
arpl
push
xchg
add
fwait
or
xor
iret
nop
sub
hlt
outsl
jl
mov
shrb
fcmovnb
or
cmp
arpl
gs
lret
mov
cmp
mov
int3
push
sti
and
xchg
sahf
fistps
adc
popf
push
jle
sarb
jno
xchg
shrb
jb
push
sub
data16
repnz
or
aam
fsubrl
int
fneni(8087
ss
cltd
jecxz
repz
xchg
sub
sbb
cmpl
test
push
fldenv
call
mov
in
add
mov
lret
leave
pop
pop
or
sub
mov
push
push
pop
push
or
add
add
ds
jae
sub
add
add
add
mov
push
xchg
dec
cwtl
lahf
xor
fwait
lods
fdivl
sbb
dec
pushf
das
fstpl
ret
add
adc
shrl
stc
imul
sahf
fwait
dec
ja
jne
cs
or
xchg
std
out
les
pop
mov
cmc
pushf
mov
jp
rcrb
push
push
jmp
lea
leave
les
ljmp
cltd
daa
push
inc
xchg
cmp
dec
or
push
in
mov
and
movsl
jbe
icebp
fiadds
imul
add
adc
imul
jnp
dec
lahf
mov
mov
mov
cmp
jno
pop
jb
fs
aad
mov
xor
popf
daa
cmp
xchg
or
and
pop
inc
cmp
fldt
dec
movsl
jno
stc
insl
test
fimuls
cmp
in
cmp
inc
push
sub
jecxz
ret
pop
shlb
add
lcall
jnp
mov
add
js
outsl
std
ret
lods
sub
icebp
cs
mov
push
fninit
icebp
nop
mov
jl
rcrb
aas
jmp
les
in
pushf
jnp
imulb
sub
xchg
ret
pop
fdivl
lods
int
adc
dec
orl
popa
hlt
inc
int
or
stc
mov
jae
jnp
je
xorl
xchg
mov
xchg
rcr
mov
cmp
cmpsl
and
fs
xchg
cltd
outsb
movsb
mov
mov
out
mov
sbb
notl
negl
sub
push
ja
out
sarb
push
das
jg
dec
fcoms
push
sub
lds
lds
dec
cs
lods
xchg
xchg
icebp
pop
xchg
fidivrl
mov
mov
inc
pushf
scas
fs
mov
mov
mov
fmuls
and
loope
mov
clc
lods
pop
shll
pop
lcall
add
add
xchg
ja
push
jg
leave
or
pop
add
loope
add
add
es
cmp
shlb
out
inc
xor
sub
filds
xchg
imul
shll
out
mov
pop
cli
jno
pop
xor
addl
popa
daa
sbbb
hlt
mov
mov
out
dec
sbb
sbbb
sub
pop
pop
shl
sbb
and
imul
xchg
out
mov
fisttpll
mov
cltd
mov
incb
dec
out
add
imul
dec
fists
cmp
push
push
mov
frstor
stos
addb
cwtl
fcoms
mov
iret
add
icebp
push
jg
inc
rcr
in
xlat
test
nop
jns
push
je
xchg
in
rorl
mov
adc
fcoml
hlt
stc
mov
sub
aam
xchg
lret
popf
movsl
push
adc
lret
sbb
jno
inc
out
ss
adc
add
imul
xchg
movsb
cli
lret
out
add
add
pop
push
pop
dec
jmp
fwait
mov
shll
adc
mov
xor
mov
sub
pop
jbe
sarl
push
sti
sbb
addr16
stos
push
jmp
xchg
or
mov
adc
sub
jns
js
sbb
pop
jns
add
push
imul
adcl
sbb
nop
mov
xor
stos
mov
sbb
mov
lds
stos
cli
and
push
pop
movsl
addr16
into
fs
mov
mov
jo
inc
or
fsubl
es
cwtl
imul
pop
lret
lcall
cmp
mov
shll
mov
mov
mov
jecxz
frstor
pop
add
sub
jle
sub
mov
ret
sbbb
mov
or
roll
in
dec
mov
lret
jns
push
jl
fldenv
push
or
dec
add
add
psubusw
push
in
sub
add
flds
add
adc
aad
add
aas
gs
and
jl
inc
jp
sub
or
dec
xchg
pop
arpl
and
out
mov
or
xchg
cmp
push
lcall
inc
xor
adc
xchg
xor
test
fldt
cs
enter
out
aas
push
cmpsl
jno
mov
in
gs
into
xchg
and
loope
inc
mov
and
sbb
pop
inc
xadd
add
pop
mov
jl
add
data16
xchg
cmpb
add
mov
popf
mov
aad
setnp
sahf
mov
jp
out
ds
xchg
pushl
and
xor
jae
ds
xchg
xchg
xchg
aad
pop
bound
xor
adc
jnp
push
jmp
push
cmpsl
cvtdq2ps
aad
xor
test
lcall
cmp
pushf
test
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
call
lock
add
mov
aas
dec
scas
dec
sbb
jge
daa
aaa
pop
xor
push
and
cmpsl
rorb
lahf
cmp
add
nop
inc
xor
movsl
xor
xchg
stc
xlat
xor
xchg
call
or
cltd
mov
into
or
lods
scas
shll
jmp
push
cmp
fwait
inc
addr16
pop
or
mov
cmp
dec
outsb
ret
sub
nop
sub
cs
roll
pushf
and
mov
and
sbb
mov
mov
fldenv
bound
lahf
daa
pop
sbb
test
mov
mov
xchg
xor
sahf
mov
sti
mov
data16
xor
push
jecxz
es
test
push
xor
mov
jge
les
enter
stos
lea
and
push
rcrb
and
test
jp
lds
outsl
mov
push
mov
shlb
pop
dec
jle
jg
std
fstpt
pop
rcrl
cmc
fildl
add
push
pop
loop
lcall
dec
insb
mov
test
loope
or
jns
leave
sbb
mov
xchg
iret
negb
pop
push
xchg
mov
cmp
rcrb
outsb
mov
push
dec
inc
xor
or
scas
xor
jno
fcmovbe
movsl
mov
fidivl
sar
fimuls
pushf
sti
mov
pop
cmp
mov
cs
les
lcall
mov
jl
call
mov
mov
mov
rclb
or
cmc
test
fdivrl
lods
lret
push
adc
dec
lahf
xchg
scas
mov
in
scas
fs
or
pop
enter
ret
add
jbe
pop
xchg
inc
gs
cmp
mov
inc
xchg
cmpsl
fcomps
adc
sbb
ss
push
daa
lahf
xor
insb
mov
mov
pop
adc
add
cmp
ljmp
repz
add
add
divl
ret
dec
fildl
pop
repz
pop
dec
jno
imul
sub
jae
iret
add
test
adc
clc
or
sarl
ret
adc
mov
sub
ds
push
xor
or
jp
xchg
push
popw
push
inc
out
idivb
xor
cli
push
dec
shll
pusha
cltd
xchg
insl
scas
fwait
loope
sbb
ja
jp
aas
sbb
and
push
or
sub
mov
mov
mov
cmp
cmp
push
sahf
imul
in
xchg
icebp
nop
jl
addr16
insb
dec
in
out
xor
aaa
cmp
imul
jae
rclb
icebp
jge
imul
fwait
int3
rcll
push
push
lahf
popa
and
add
movsl
scas
jp
adc
sbb
push
cld
and
fstpt
jle
adc
ja
jg
jp
xor
add
rolb
mov
add
add
sbb
jmp
scas
inc
call
fldl
add
inc
ja
test
xchg
mov
cwtl
test
fwait
adcb
adc
sbb
or
pop
jo
int
cmp
jno
aas
hlt
cmpsb
movsb
fwait
mov
dec
pop
xchg
mov
sub
dec
mov
clc
jle
or
loope
bound
mov
add
in
sahf
and
lcall
add
mov
out
aam
jge
mov
jmp
fs
lea
xor
inc
push
add
push
mov
test
mov
inc
rol
push
cmp
repnz
mov
lods
and
dec
aam
inc
cmpl
cmp
push
push
leave
rclb
xor
pop
dec
invd
stos
mov
and
sub
out
fidivl
icebp
cmp
dec
sub
push
dec
pop
shrl
xchg
fisubs
cmc
jmp
cmp
xlat
push
sub
add
cmpsl
fimull
faddl
test
add
add
add
hlt
xlat
mov
loopne
sub
rorl
mov
push
aam
add
add
in
icebp
jmp
mov
das
scas
pop
xchg
loop
sub
push
xchg
mov
ss
cltd
mov
xchg
mov
mov
cs
or
ljmp
mov
in
dec
fisubrs
fdivs
mov
out
enter
popf
mov
or
out
adc
cmp
fs
and
sbb
xor
clc
xchg
pop
mov
out
fistps
push
hlt
jne
pop
jae
inc
int3
mov
xor
leave
push
or
rolb
mov
push
xchg
sahf
inc
lock
repz
in
aad
aas
fs
popf
loopne
adc
add
jle
xchg
add
stc
add
mov
add
outsl
mov
sti
push
add
inc
fidivrl
int
and
adc
add
jg
mov
lcall
fisttps
or
or
add
add
pusha
xchg
mov
test
inc
xor
insb
mov
xor
dec
lahf
pop
sti
or
andb
mov
jnp
mov
cmc
or
push
imul
hlt
sarl
test
mov
inc
add
mov
cmp
inc
mov
loopne
inc
sub
call
mov
lods
pop
push
inc
push
pop
fwait
aaa
mov
sahf
not
repnz
inc
or
aaa
popf
lcall
and
daa
or
xchg
sub
add
fldenv
and
lock
dec
fdivs
icebp
daa
mov
movsb
popf
cmp
gs
outsb
push
dec
xor
jno
or
addb
mov
sub
mov
xor
xchg
or
jmp
cmc
mov
sbb
and
xor
dec
cmp
jge
push
dec
mov
and
roll
add
sbb
jns
xchg
xchg
mov
enter
loope
add
mov
lods
mov
leave
fiadds
add
lret
pop
sub
adc
mov
pop
roll
sub
fidivl
and
stos
inc
mov
cs
jnp
lea
and
xchg
mov
sbb
inc
xor
jnp
mov
in
inc
dec
idivb
loop
loope
rcrl
dec
shll
cmp
arpl
push
out
decl
roll
sub
addr16
ret
xor
xchg
movsl
lods
mov
pop
add
mov
bound
popf
sbb
scas
fnstsw
das
jnp
sbb
xchg
mov
mov
out
xchg
loope
shlb
insb
pop
push
sub
repz
sub
fucom
enter
insb
loope
sbb
lods
mov
lods
adc
int3
jmp
pop
jns,pt
and
dec
mov
lcall
or
jae
fadd
fsubp
jnp
or
cld
les
loop
add
cmp
and
movsb
test
into
cmpsb
xchg
dec
addb
xor
mov
dec
cltd
cli
aad
sub
loop
mov
addl
fisttps
stos
sub
ljmp
add
and
cltd
lret
push
mov
pop
dec
sub
subb
mov
or
das
dec
aas
ja
dec
xchg
sti
xchg
gs
pusha
xor
xchg
cmpl
adc
push
leave
or
push
jle
or
mov
pushf
xchg
loopne
mov
test
xor
jmp
mov
push
int
and
cwtl
push
jns
or
add
cmpsl
fwait
sub
dec
jne
aaa
mov
mov
lock
fcomip
cmc
outsb
dec
outsb
shll
rol
inc
mov
loope
scas
cs
jae
jae
ja
xchg
into
add
insb
popa
add
add
sub
cld
cli
jle
dec
nop
xor
jbe
sbb
add
add
and
and
xlat
mov
and
add
dec
enter
dec
xor
xchg
push
or
mov
jge
scas
lods
or
data16
mov
add
or
jecxz
inc
mov
pop
movb
jmp
pushf
fistps
lahf
aas
arpl
jno
sbb
mov
cmp
dec
add
jle,pn
adc
xchg
adc
cwtl
outsl
cli
ja
das
lcall
call
or
mov
and
mov
aam
sbb
pop
popa
jne
mov
mov
loop
xor
cmpsl
dec
jp
sti
and
pop
jne
jecxz
cmp
scas
lcall
push
addr16
fcmovbe
lret
mov
bound
loopne
mov
ds
cs
sti
inc
fdivr
mulb
jno
jp
push
test
ret
bound
mov
and
stos
mov
xorb
imul
mov
mov
lea
pop
jbe
ja
sti
aaa
out
ja
aaa
sti
jl
in
add
cwtl
cmpl
out
or
push
mov
in
addr16
hlt
jae
adc
std
mov
imul
push
outsl
fisubrl
jns
push
cli
lock
xor
xchg
or
adc
out
mov
jns
sub
cwtl
popa
sbb
mov
or
mov
inc
jbe
jbe
inc
sbb
iret
in
pop
jecxz
and
push
fcomps
cmp
sbb
pop
ret
push
test
in
rclb
outsb
fsub
shlb
mov
pand
shrl
imul
fsubs
lret
fwait
pop
xchg
sub
iret
add
mov
outsb
out
mov
and
popf
fnsave
dec
adc
addr16
in
sti
incb
xor
fistl
or
xchg
dec
mov
pop
cwtl
mov
push
push
shll
ret
out
mov
pop
inc
outsl
arpl
pop
je
add
add
into
arpl
pop
xchg
aaa
pushf
push
adc
jae
in
add
add
dec
mov
in
pop
pop
sub
enter
xor
loopne
jae
adcb
jp
es
idivl
lds
or
jge
lods
cs
inc
lods
and
sti
and
loop,pt
lret
fisubl
mov
hlt
lea
rcll
dec
cmc
adc
cmp
dec
pop
ds
pushf
push
nop
cmp
and
test
xor
xchg
sub
pusha
jmp
leave
pop
stos
mov
fsincos
pop
xchg
mov
vpsubd
repnz
bnd
lret
dec
fdivs
insb
xchg
push
bound
stc
lds
pop
jbe
iret
jge
sti
cmp
inc
ljmp
in
dec
and
movsl
int
mov
int
icebp
cmp
sub
dec
pop
enter
push
ret
sbb
push
jno
push
xchg
ss
or
add
sub
push
or
add
add
ja
lcall
mov
ljmp
add
inc
adc
pop
cmc
fs
and
test
mov
jmp
out
add
js
mov
mov
sbb
mov
adc
aam
or
cvtdq2ps
int3
arpl
insb
jle
mov
in
cltd
andl
or
jecxz
mov
pavgw
stos
cli
xor
push
and
adc
pusha
insb
icebp
mov
xlat
mov
dec
lret
outsw
stc
call
dec
arpl
jne
das
leave
add
scas
repnz
mov
adc
fs
int
or
adc
out
cmp
push
pop
fwait
mov
adc
pop
mov
enter
push
pop
dec
mov
mov
inc
adc
cld
inc
mov
cld
inc
sbb
add
inc
clc
sub
imul
hlt
pop
jge
xchg
mov
add
cmp
out
mov
mov
fbld
add
repz
lock
jg
in
and
lret
movsl
fsubrl
add
add
dec
mov
adc
shr
jno
or
add
xchg
shlb
out
mov
negl
je
leave
outsl
shrl
inc
aad
jb
gs
mov
pop
xchg
pop
push
adc
mov
fisubl
jl
sbb
mov
cli
jp
sbb
xor
nop
mov
sub
and
enter
test
xchg
std
outsb
adc
mov
sub
ret
xorl
cmp
jecxz
fists
pushf
lcall
mov
jae
aam
xchg
decb
cld
loopne
and
xor
out
pop
loop
hlt
inc
dec
mov
jns
in
jns
add
enter
pop
lcall
cmp
negl
leave
fldl
fistpl
out
xchg
xor
in
int
das
mov
inc
fsubr
testl
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
scas
and
call
add
jle
push
adc
push
xchg
mov
and
lods
and
mov
push
xchg
push
push
adc
sbb
iret
mov
or
mov
stos
dec
inc
jo
addr16
repnz
lods
push
rcrb
stc
jno
test
lret
shr
out
std
ss
sbb
push
and
fxch
out
lea
jg
loope
push
shll
cmpsb
gs
cltd
dec
cli
cmpsb
pop
cs
imulb
mov
push
xorl
push
xor
lock
inc
mov
xchg
xchg
daa
mov
test
and
and
mov
xor
pop
push
stc
pushf
fwait
leave
outsl
ljmp
ljmp
sbb
inc
push
sbb
push
cmp
test
push
in
pop
sub
rcll
fcom
divb
or
testl
sbb
add
add
mov
dec
js
stc
mov
dec
int
call
jmp
add
dec
mov
ret
les
mov
push
mov
mov
push
xor
push
jae
or
ja
lods
pop
call
sbbl
jl
cmp
or
mov
pop
xchg
mov
jmp
xchg
sbb
repnz
adc
cmp
dec
mov
pop
push
test
xor
xchg
dec
incb
xchg
adc
repz
das
fistps
lods
adc
xor
ret
mov
mov
pop
xorl
js
cli
add
pop
mov
aaa
add
xor
repz
aad
sarl
mov
sub
aaa
mov
lods
mov
in
sbb
jp
test
mov
mov
orb
jmp
cmp
or
in
dec
xchg
cmpsb
inc
out
xchg
mov
pop
repnz
add
pop
std
pop
push
add
xchg
sub
mov
mov
add
insl
repz
fwait
jns
jns
aaa
mov
add
cwtl
shl
lret
mov
jno
into
mov
pop
test
mov
aas
movsb
inc
jmp
test
lret
mov
jbe
test
add
les
test
pop
es
jecxz
adc
test
push
inc
subb
push
add
sub
cmp
xor
mov
dec
sbb
outsb
add
test
outsb
mov
push
stos
imul
dec
push
mov
sub
cmc
mov
xor
pop
in
mov
sbb
jg,pt
xchg
jb
je
add
clc
cmp
insl
lcall
lret
stos
xor
insb
repz
nop
jae
inc
jo
cmpl
adc
jle
ret
sti
pop
xchg
loope
pop
in
loope
rorb
in
fwait
dec
cwtl
fstpl
pop
notl
xchg
dec
repz
sub
pop
ror
fiadds
add
add
mov
pxor
jnp
adc
jne
sti
jle
inc
inc
jmp
add
pop
fisubs
std
inc
dec
scas
xor
sbb
mov
and
add
jno
jmp
lds
add
call
pop
mov
pop
cmp
lret
pop
and
sti
js
ficompl
add
movhps
cli
andb
pushf
and
mov
push
xchg
sbb
xor
push
test
jb
shl
idivb
mov
xchg
ss
add
lds
pop
in
xchg
test
xorb
and
sti
mov
push
dec
test
mov
insl
sbb
pop
ror
mov
pop
stc
pop
cmp
scas
push
mov
mov
sbb
sub
movsl
xchg
add
adc
jo
std
sahf
jns
fmuls
pop
scas
mov
sahf
xor
jnp
jno
arpl
inc
jne
sbb
cmp
xchg
add
les
sbb
jle
adc
je
cltd
out
lock
rol
add
add
subb
fistl
das
je
arpl
inc
in
add
add
icebp
or
nop
gs
jl
ja
fxch
into
pop
add
and
je
push
scas
iret
mov
mov
jp
xchg
repz
adcl
insl
xchg
add
sub
scas
cmp
mov
sub
lds
jg
fmul
adc
popf
sub
and
lods
pop
jg
in
ret
jl
lea
mov
jo
jns
adc
aam
add
mov
lcall
cmp
adc
jmp
out
je
inc
mov
test
pop
jl
loopne
lds
or
pop
adc
addr16
sbb
cmpsl
leave
cmp
or
mov
xchg
mov
push
loope
cltd
std
and
jae
adc
or
xchg
xchg
loopne
das
mov
cli
cmpsl
cmp
push
and
iret
xor
aaa
mov
or
inc
adc
xchg
fmull
int
out
test
aad
sbb
inc
fistps
pop
cmp
jmp
add
jb
scas
decb
fisttps
inc
push
dec
in
add
add
test
test
inc
xor
mov
cld
cmp
jae
jb
insl
hlt
outsl
cmp
iret
sbb
andb
cmp
ss
xor
xchg
dec
xor
and
inc
pop
push
std
lret
lds
scas
jle
loopne
cwtl
push
ljmp
insl
sbb
pop
push
movsl
aas
add
repnz
or
fabs
das
daa
jmp
lret
add
sahf
es
or
adcl
xchg
mov
push
jae
and
divb
mov
out
daa
xor
outsl
adc
and
mov
mov
das
subl
push
adc
shlb
movsb
lock
pop
cmp
pop
mov
test
js
push
push
in
popf
loope
fisubrs
sub
imul
ret
lret
push
loop
pop
or
mov
add
xlat
mov
xchg
fmull
add
add
sbb
test
in
sbb
in
xor
repnz
std
pop
lret
sbb
iret
mov
lahf
jge
inc
lock
enter
jae
push
rcl
ljmp
stos
jge
lods
rcrl
jge
outsb
js
pop
sbb
sub
xor
out
sti
sahf
xchg
mov
push
fnsave
stos
jge
cmpsb
push
inc
sub
test
ja
into
insl
aaa
into
arpl
cmpsl
jo
std
inc
scas
neg
aad
add
inc
imul
dec
xor
pop
stos
imul
shll
call
pop
sbb
fidivl
stos
lods
fisttpll
test
loopne
faddp
fcompl
jg
mov
jmp
pop
sub
jmp
outsl
mov
sbbl
and
xor
pop
fisttpll
dec
mov
pop
and
leave
cltd
cmpsl
pop
mov
mov
add
lods
cmp
lods
aas
mov
out
mov
out
add
add
adc
jle
push
imul
pop
jge
sti
hlt
mov
push
fwait
outsb
jle
das
jo
sbb
xor
loope
insb
adc
sbb
cltd
jo
xchg
sub
and
mov
popf
int
pop
outsl
adc
sub
rcr
fs
cmp
imul
mov
add
adc
dec
or
push
xchg
aam
adc
xor
subl
jbe
mov
mov
stos
iret
jmp
cs
shrl
lods
inc
std
lret
and
xlat
sti
fwait
push
inc
mov
mov
adc
xchg
dec
mov
and
arpl
pop
mov
fldcw
rcr
popa
sbb
xchg
sub
pop
das
fidivrl
scas
pop
pop
mov
jmp
cmc
cmc
add
in
pop
or
call
xchg
mov
loop
fadd
sti
mov
jecxz
dec
xor
add
add
mov
add
loop
cld
cmp
pop
inc
xlat
imul
nop
adc
into
cmp
jmp
imul
xchg
movl
dec
cld
push
addr16
mov
sbb
lahf
cmc
popa
out
xor
addr16
xor
outsl
rcrl
or
add
xchg
out
xchg
xor
pusha
adc
and
ljmp
dec
ljmp
fisttpl
pop
adc
cmc
loope
xor
push
pop
shrb
mov
add
mov
outsl
test
js
dec
testl
push
mov
pop
fdivrl
xor
push
adcb
cs
push
mov
inc
bound
aas
or
roll
daa
or
loop
mov
dec
arpl
hlt
xchg
aam
fisubrl
pushf
scas
and
or
fstl
in
sti
loope
push
xorb
add
push
cmp
adc
neg
jge
xchg
jns
dec
or
pop
icebp
add
add
pop
sahf
xchg
adcl
in
ss
jg
test
jmp
pop
insl
std
push
add
pop
xor
hlt
xchg
mov
int
pop
call
xchg
mov
icebp
ret
cs
jmp
and
mov
lods
sbb
pop
icebp
test
sahf
add
jno
push
sbbb
and
in
pop
sub
mov
cmp
cmp
xor
jmp
repz
or
clc
adcl
bound
dec
adc
cmpsb
lods
mov
add
mov
jnp
push
xchg
adc
gs
movsl
daa
ss
movsb
pop
add
pop
test
jmp
mov
adc
pop
in
add
mov
movsb
lahf
ret
and
lret
pop
test
lret
dec
int3
loopne
icebp
arpl
and
sti
jle
sarl
mov
xchg
sahf
xchg
bound
sbb
dec
inc
test
mov
inc
sbb
icebp
sti
jge
dec
mov
pop
add
add
dec
sub
sub
fidivl
repnz
add
xor
scas
adc
fidivs
ljmp
push
sub
not
es
add
mov
imul
pop
cmp
inc
xor
neg
das
xchg
jae
cmp
sbb
sub
arpl
lods
dec
mov
popf
in
push
call
fdivr
adc
outsl
lret
dec
test
out
cwtl
inc
and
adc
jecxz
scas
mov
jmp
pop
inc
dec
movsl
scas
jge
fistps
pop
xchg
jmp
mov
push
lock
sub
or
adc
aam
stos
cld
sub
lcall
mov
insl
imul
push
scas
pop
movsl
enter
insb
mov
and
xchg
mov
cmp
dec
outsb
fsubs
dec
jmp
aaa
ds
test
and
ljmp
add
pusha
sarl
add
add
ja
and
aaa
divl
pushf
sbb
push
add
add
flds
hlt
pop
pop
and
jbe
jno
adc
gs
mov
jl
and
mull
jmp
pop
sbb
and
pop
jno
jmp
faddl
int
dec
jmp
ret
adc
or
stos
mov
push
mov
mov
test
enter
stc
jo
jnp
add
addl
jp
sbb
jo
insl
ret
das
adc
mov
push
add
push
scas
dec
xchg
movsb
out
test
frstor
mov
push
jecxz
pop
mov
sbb
scas
jnp
test
test
jg
lock
sbb
scas
mov
mov
cmpl
sbb
in
jl
repnz
aam
and
inc
rcrl
shl
jb
jo
stos
mov
pop
inc
dec
ret
sub
xchg
add
add
in
xchg
jecxz
jmp
mov
movl
add
add
insb
cmpsl
add
into
cmp
imull
inc
cld
in
mov
adc
adc
inc
mov
pop
popf
adcl
inc
andb
or
inc
mov
orb
jns
pop
cwtl
sbbl
cmp
addr16
pop
orl
xchg
repz
or
je
out
xchg
mov
mov
outsb
call
insb
js
shrl
dec
fwait
jb
sbb
fbld
lret
mov
or
pop
repz
xchg
clc
adcb
mov
xchg
cmp
pcmpeqb
dec
mov
xor
shr
cltd
cmc
fldt
dec
daa
dec
mov
roll
dec
pusha
pop
leave
pop
and
nop
pop
mov
testb
sub
test
cwtl
sub
mov
pop
aad
cmp
adcb
scas
jmp
pop
test
add
add
jne
pusha
popf
pop
xorl
add
add
and
scas
jmp
dec
inc
xchg
pop
inc
mov
inc
pushf
lea
lods
and
scas
cmp
aas
test
mov
mov
xor
push
push
jno
jae
test
sbbb
outsl
mov
test
xchg
jbe
dec
les
iret
inc
filds
sub
jnp
ret
jae
push
orb
adc
shlb
push
mov
mul
cli
add
adc
das
outsl
decb
mov
sbb
mov
lcall
cli
push
inc
cmp
pop
mov
fwait
cmp
imul
movsl
xor
push
mov
mov
pop
pop
stc
sbb
ret
sub
sub
cmp
aaa
or
es
mov
call
dec
dec
sub
sbb
fistl
xchg
nop
cmp
lock
mov
mov
mov
mov
push
dec
faddp
sub
add
imulb
mul
xor
mov
add
add
and
mov
push
jp
enter
jns
xchg
out
in
jb
call
push
lcall
mov
mov
cld
and
mov
enter
jp
jno
mov
mov
add
mov
inc
adc
call
add
add
rcr
add
inc
in
stos
jne
push
xor
pop
dec
dec
mov
into
pop
hlt
in
enter
dec
cmpl
outsb
test
and
cld
mov
cmp
stos
ret
aaa
mov
shlb
sbb
mov
mov
ret
out
dec
icebp
adc
mov
xor
or
cltd
aam
icebp
rcrb
mov
std
pop
jle
push
movsb
ret
inc
leave
fs
adc
rorb
xchg
insl
adc
mov
es
inc
out
push
jg
fdivs
sbb
push
push
lock
inc
xor
inc
aas
xchg
jp
pop
jmp
shlb
add
ret
add
xor
jb
jae
xor
or
jl
add
add
cmp
xorb
mov
adc
jg
pushf
fisttps
jnp
out
inc
adc
loop
or
inc
sub
mov
mov
sub
pop
fiaddl
pusha
xchg
roll
movsl
insb
mov
jns
pop
mov
lahf
fs
fdivrp
mov
push
mov
sub
and
lcall
loop
hlt
push
and
movsl
xchg
sub
push
xchg
mov
popa
jge
int
dec
pop
jge
jg
mov
sbb
push
out
pop
push
fidivl
ja
pop
cmp
sahf
leave
mov
clc
adc
xlat
testb
into
ja
popf
cwtl
ds
sub
je
mov
rcrb
into
mov
insl
push
or
cmp
scas
fmull
mov
fdivr
pop
sbb
lret
jmp
daa
lcall
add
add
ds
in
idivl
js
mov
add
clc
add
add
popf
mov
sbb
xchg
or
fisttpl
pushf
xchg
xor
stos
cmp
xor
call
cmpsl
test
and
fsubp
imul
jmp
lcall
push
ds
scas
add
leave
dec
outsb
xchg
jge
int3
and
jl
mov
jb
sti
mov
dec
sbb
fmuls
cmpsl
mov
shll
or
cmp
mov
adc
inc
jge
aaa
mov
xchg
or
sub
orl
xchg
dec
jle
mov
lcall
xchg
icebp
in
popf
pop
ljmp
das
push
add
cwtl
mov
lahf
bound
insb
add
scas
sbb
fldcw
dec
arpl
daa
inc
loope
mov
xchg
popf
xchg
jmp
icebp
ds
shlb
add
or
pop
jmp
and
je
out
cmp
add
add
jecxz
inc
cli
aas
into
lret
dec
por
xchg
add
add
sub
cmp
ficoml
xchg
iret
push
aam
jl
popa
andb
stos
sarb
xchg
adc
call
jb
sarl
js
test
stos
rcll
mov
push
dec
cmp
and
dec
sbb
cmpsl
sbb
xchg
jecxz
add
decl
mov
call
inc
faddl
arpl
imul
or
ljmp
or
fildll
aas
into
mov
clc
adc
fwait
xchg
pop
or
out
jg
addr16
xchg
sub
push
xchg
sub
mov
outsb
and
loop
cmpsb
sbb
adc
fsub
lret
fadds
push
int
mov
in
sub
jp
push
ljmp
dec
jle
addl
adc
mov
xchg
cmp
ja
add
mov
lcall
ja
ljmp
add
add
bound
push
ljmp
out
inc
adc
iret
jp
push
adc
rcll
mov
mov
jne
sub
lahf
aad
or
fs
pushf
dec
inc
int3
jl
cmpb
mov
dec
inc
mov
mov
push
lods
out
jbe
mov
in
dec
xchg
mov
jb
loopne
jnp
inc
xchg
xchg
icebp
shr
imul
icebp
sbb
cli
js
daa
popa
rcll
mov
daa
sub
push
mov
jmp
roll
mov
vpor
vpackssdw
mov
lock
ret
arpl
and
pop
in
aas
scas
dec
cli
cwtl
insl
insb
test
subl
aaa
mov
jns
cmp
push
sbb
add
fdivs
fst
xor
lods
loope
mov
mov
xor
jo
shll
aam
mov
andl
add
add
jae
cltd
dec
mov
jno
nop
sti
add
add
out
movsl
mov
in
mov
inc
sbb
mov
sbb
jg
loopne
loope
ret
add
adc
xchg
xor
in
subb
sarl
inc
sub
xchg
or
adc
out
sbb
shlb
arpl
enter
sub
daa
addl
leave
insl
imulb
xor
fistpll
jne
mov
loope
push
dec
imul
xor
out
push
adc
mov
mov
jg
push
sbb
stos
out
sar
pop
in
pop
fmull
push
dec
sbb
add
nop
nop
ficoms
cli
in
jno
stos
subb
and
push
mov
cmp
lret
fdivr
scas
cmp
dec
and
inc
ret
iret
popf
xor
je
fcompl
ss
flds
jnp
ret
push
lret
in
jmp
ret
xor
add
ds
into
nop
out
cwtl
jle
push
sub
dec
cmp
add
add
movsl
mov
nop
pushf
scas
sarl
jae
xlat
push
imul
lret
xor
inc
bound
adc
fistpl
mov
js
cs
add
mov
sti
jo
push
daa
scas
mov
daa
mov
cmp
sbbb
nop
outsb
add
xor
cltd
jge
inc
xor
rol
imul
xlat
es
aaa
out
add
lods
loopne
mov
test
fwait
repz
repz
std
cs
push
add
mov
and
mov
hlt
sar
fcmovne
adc
pop
sbb
jp
movsl
jno
scas
sub
cltd
ret
push
dec
sub
repz
or
mov
lods
in
mov
adc
cmp
lahf
fimuls
mov
pop
xchg
hlt
jl
out
outsl
rorl
out
pop
je
dec
cltd
sub
lods
push
add
add
test
jg
push
pop
push
mov
lcall
add
daa
cltd
call
add
or
scas
xlat
repnz
ficoms
test
mov
mov
sbbb
jle
and
test
cmp
das
hlt
inc
xor
mov
in
mov
lret
dec
push
cmc
and
xor
jp
out
data16
fwait
dec
mov
push
outsb
inc
sub
jg
insl
les
dec
insl
jo
cmp
ja
sbb
ljmp
aas
inc
icebp
sbb
pop
cmp
loope
jne
mov
inc
pop
xchg
sti
test
lods
inc
les
cmp
cmp
xor
movsb
pop
or
pop
pushf
fiadds
cvtps2pd
insb
cmp
jae
inc
cmp
ds
fisubrl
repnz
sub
push
mov
outsl
add
lds
cmp
add
adc
movsb
push
in
cmc
jne
sbb
js
subl
add
adc
or
arpl
jle
hlt
add
add
adc
adc
and
jbe
mov
xor
jbe
sti
lcall
jge
add
mov
into
add
faddp
inc
cmpsb
mov
sub
pushf
pusha
pop
inc
and
add
mov
sbb
lods
enter
repz
out
inc
pusha
mov
or
pop
stc
daa
cli
fnstsw
dec
in
inc
sbb
shrb
test
jmp
filds
mull
fldcw
adc
push
shll
inc
lods
bswap
add
cmp
xchg
jg
pop
out
fnop
xchg
push
fcoms
mov
popa
sbb
add
call
add
adc
sahf
fwait
aam
fimull
out
dec
out
jb
loopne
les
mov
clc
adc
dec
bound
cmpsl
pop
xor
add
sbb
shlb
aas
out
int3
mov
out
sub
incl
add
adc
arpl
inc
rorb
int3
push
fisubrl
sbb
sub
jle
mov
mov
notl
cmp
sub
je
jecxz
cmp
les
rolb
es
push
cmc
mov
mov
pop
and
pop
push
xor
xchg
popf
hlt
jmp
hlt
call
loope
xor
imul
out
mov
mov
or
cmp
push
fincstp
inc
pop
xlat
dec
xchg
cmp
pop
mov
add
jo
xorl
push
nop
push
js
mov
imul
inc
lea
pop
daa
imul
lea
inc
insb
mov
ret
jge
sub
sub
lret
mov
inc
daa
cmpsl
addr16
inc
jecxz
jmp
jecxz
fcoml
push
scas
dec
or
cmp
dec
dec
fidivs
out
jno
scas
jno
inc
fadds
cmc
pop
pop
jg
mov
dec
add
add
mov
lcall
add
add
ret
mov
mov
in
adc
pop
adcl
fidivrs
or
mov
lock
arpl
jbe
fisubs
lret
dec
mov
andl
sub
add
sbb
push
movsl
mov
mov
jge
or
mov
mov
mov
aas
xchg
add
lcall
xor
mov
ja
sbb
loopne
outsb
xchg
and
adc
popa
insl
fs
fucomi
jno
loope
cltd
cmp
inc
notl
inc
mov
sbb
mov
int3
fldl
sub
pmaxub
sbb
testb
xchg
pop
sahf
mov
insb
sbb
add
mov
xor
lret
out
cmpsb
mov
sub
push
cmp
jp
mov
lahf
mov
inc
and
shl
pop
andl
xor
cmp
add
add
ret
bnd
cmc
inc
stos
repz
jae
pop
scas
add
add
addl
mov
repz
xorb
nop
inc
jb
clc
stos
jecxz
pop
in
mov
add
pop
sbb
sahf
sub
or
popa
fadds
xor
aam
cs
test
clc
inc
fstps
mov
push
mov
xchg
adc
lods
lcall
inc
fstps
ds
cmp
dec
push
shlb
pusha
dec
mov
test
ret
scas
fldt
dec
popa
hlt
std
jno
mov
test
push
add
push
adcb
and
mov
push
dec
fsubp
hlt
inc
call
mov
imul
xor
jp
lock
push
ljmp
xchg
xchg
stos
xchg
pop
push
loopne
out
ficompl
ja
ja
pop
mov
pop
push
dec
xchg
out
les
popa
rolb
or
fisubrs
insb
jg
add
add
add
std
aaa
mov
shll
pusha
mov
add
add
mov
mov
stos
lret
stc
pop
cmp
jge
pop
inc
or
jp
lea
sbb
add
pop
fisubl
icebp
lahf
loopne
mov
xor
jle
jae
lods
sarl
inc
out
insb
lahf
lcall
out
jmp
cmc
mov
push
enter
int
imul
je
or
out
cs
xchg
into
enter
andb
cmc
out
jge
sub
mov
inc
cmp
mov
add
jle
and
fistpll
dec
sub
cmc
jae
div
into
push
xchg
jg
jmp
adc
or
push
stos
rclb
mov
stc
adc
cli
cwtl
xor
xchg
sub
xor
lcall
and
outsb
lahf
roll
outsb
test
stos
fwait
add
pop
out
inc
lods
and
or
mov
mov
insl
aam
mov
scas
add
scas
push
fistpll
add
add
ret
lods
jge
cwtl
push
mov
sub
data16
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
incb
aaa
inc
cmpsl
inc
mov
fcomps
add
add
jns
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
