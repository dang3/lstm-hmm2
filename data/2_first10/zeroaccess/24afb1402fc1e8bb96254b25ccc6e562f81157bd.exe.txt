push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
andl
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
adc
xchg
or
inc
mov
repz
ds
in
jp
or
jge
dec
inc
push
pop
sbb
neg
mov
sub
add
mov
mov
mov
cmp
cmp
lods
call
and
push
je
cmp
call
mov
sar
stos
mov
into
inc
jle
cli
jne
adc
push
shrl
lcall
lret
add
sub
bound
fs
fcmove
inc
adc
pusha
mov
jg
in
pop
add
outsl
lds
sub
in
testb
inc
adc
lret
pusha
lret
dec
and
addb
das
addr16
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
mov
jg
jle
jg
jle
and
push
xor
mulb
out
push
aaa
jnp
test
fmull
sub
jcxz
jmp
lds
xchg
or
or
bound
xor
pop
fstpt
xor
filds
jae
pop
push
mov
xlat
leave
test
test
mov
fwait
pop
adcb
push
mov
rcr
jb
sbb
adc
xor
shlb
fisubrl
cmc
daa
mov
pop
lcall
in
mov
clc
sub
clc
dec
cmp
xchg
sbb
ret
ret
pop
int
xchg
fldenv
jle
mov
push
test
dec
pusha
mov
jp
sbb
fdivrs
test
outsb
cli
loope
push
mov
inc
push
inc
iret
sub
add
inc
sbb
ret
xchg
popa
test
add
xchg
xchg
es
imul
cmp
jg
mov
inc
scas
mov
cmpsb
fwait
mov
aaa
ljmp
adc
stc
sahf
xor
inc
cmp
not
cmp
pushl
lret
ljmp
es
or
and
test
cwtl
dec
out
hlt
xchg
cli
clc
or
add
lret
shll
ljmp
sarb
test
adc
or
movsl
fwait
imul
outsl
and
xchg
divl
test
fsts
outsl
and
inc
les
sbb
xor
neg
jmp
cli
fcompl
jno
cmp
adc
cli
jg
jle
xchg
ljmp
mov
mov
pop
fdivr
mov
in
stc
insb
aas
das
pop
mov
push
mov
sbb
incl
out
gs
sub
jmp
or
mov
call
clc
xlat
add
xorb
lret
loop
push
into
fdivrl
dec
arpl
int3
inc
mov
hlt
cli
and
in
fistpl
pop
sub
fsubrl
mov
iret
out
lods
mov
gs
dec
push
push
jns
jl
int
mov
js
mov
mov
xor
inc
mov
push
lods
push
inc
xor
sub
idivl
add
ret
test
adcl
or
jmp
inc
sbb
imul
xor
movsb
imul
jecxz
gs
inc
or
movsl
cmp
lret
mov
inc
add
loope
mov
rolb
arpl
ret
repnz
fsubrs
les
push
push
out
std
cmp
leave
or
scas
lahf
xchg
xchg
incb
dec
iret
sbb
lds
sub
pushf
in
jnp
rol
std
pop
loope
dec
test
dec
xchg
cmpsb
adc
fwait
and
xorl
adc
cmp
dec
stc
insb
sbb
inc
fisttpl
cmp
lock
or
in
sub
pop
and
pop
xchg
pop
repnz
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
adc
cli
jg
jle
add
sti
adc
sub
sbb
cmp
mov
cmpsl
or
lahf
mov
xchg
dec
lds
push
xchg
ja
movb
jnp
mov
pop
fbstp
inc
fwait
dec
fidivrs
jns
incb
pop
mov
adc
loope
xlat
gs
inc
push
jp
mov
std
loope
push
pop
adc
aad
xchg
scas
jnp
mov
js
push
inc
test
mov
ror
lcall
vmovlps
jecxz
pop
sub
das
jg
lahf
dec
sub
call
nop
and
mov
mov
test
cltd
shrl
mov
or
aad
xchg
data16
stc
ljmp
add
movsb
push
adc
inc
or
out
push
mov
mov
push
fcompl
adc
xchg
xchg
sub
aaa
lods
push
mov
sgdtl
leave
shlb
ja
repnz
push
test
xchg
into
jmp
jmp
jae
inc
in
fsubrs
jne
or
inc
pop
nop
dec
push
jp
insb
pop
out
out
push
popa
scas
cltd
out
int3
loope
fsubs
jecxz
aas
cmp
stos
sub
in
lods
or
inc
mov
jmp
aad
stos
jno
lods
and
lea
lret
mov
jmp
xchg
mov
push
jo
adc
dec
cmp
jle
cli
jg
jle
int3
fsts
mov
mov
fsubrs
leave
fstpt
jb
pop
cmp
dec
jg
mov
pop
push
movsb
push
push
pop
mov
cld
pusha
adc
inc
cwtl
fs
mov
pop
lret
jmp
add
icebp
jnp
mov
push
mov
cmp
mov
outsl
sub
nop
dec
daa
adc
ja
or
test
pop
cmp
mov
ljmp
push
cmp
push
mov
in
jl
rcrl
or
xor
ret
rclb
mov
mov
mov
jb
or
jns
or
pop
loop
mov
lcall
xchg
cmpxchg
mov
or
sub
jmp
stos
dec
push
mov
add
scas
mov
call
addr16
in
lcall
fwait
push
je
stc
pusha
dec
jmp
mov
mov
test
lret
xorb
cmpsl
xchg
call
cmp
pusha
add
test
sub
subb
pop
inc
dec
scas
sbb
fwait
adc
faddl
stc
out
fists
pop
lcall
sub
mov
ljmp
ljmp
or
sbb
xchg
lock
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
adc
jle
jg
jle
aas
mov
into
imul
push
mov
loope
aad
shlb
inc
es
push
rolb
dec
inc
dec
adc
sbb
dec
push
das
insb
jp
pusha
ror
xchg
xor
imul
dec
or
test
outsb
fdivr
rcrl
orb
and
dec
mov
adc
fisubl
enter
jge
mov
test
add
int3
sub
inc
shll
cmc
add
mov
mov
sub
xchg
fsts
mov
test
sub
ret
out
addl
mov
lret
xor
ds
out
test
lock
cmpsl
ret
cmp
test
adc
pop
xor
jno
mov
stos
pop
xchg
decl
outsb
mov
push
add
not
ss
cmp
insb
xlat
iret
pop
mov
lods
lcall
or
aas
xchg
mov
out
jp
clc
int3
ds
sbb
or
sub
or
push
dec
xchg
xchg
inc
and
in
rcr
test
pop
jbe
mov
inc
jp
shll
incl
jo
clc
out
push
int
fstps
inc
in
mov
jmp
dec
sbb
pop
mov
rclb
movsl
cmp
fiaddl
icebp
or
inc
add
inc
aam
dec
clc
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
push
pop
jle
cli
jg
jle
pop
dec
lcall
add
pop
mov
xchg
cwtl
cli
jle
sub
ds
add
or
dec
lods
inc
cmp
jbe
jns
movsl
pusha
ret
cmp
out
icebp
iret
jg
push
imul
outsl
test
jae
dec
sarb
or
pop
leave
add
cvtps2pi
ja
fildll
movsl
ja
out
xor
and
mov
sbb
popf
or
outsl
sub
insb
inc
or
mov
js
fldt
inc
fldl
xor
jl
push
jl
pop
cmp
sar
mov
inc
cmp
dec
clc
pop
sub
out
hlt
lea
lea
pop
xchg
lcall
xchg
mov
xlat
call
pushl
mov
aaa
int
sub
insb
sub
imul
sbb
inc
mov
push
dec
scas
sub
les
push
xor
loopne
adc
mov
std
bound
fnstsw
pop
mov
mov
insb
sbb
pusha
out
scas
add
shll
and
adcl
notl
enter
mov
push
dec
fs
addb
fbld
cmc
jecxz
jecxz
ret
xchg
out
inc
xor
and
pop
mov
mov
cwtl
aas
lods
fs
cltd
sarb
call
mov
fs
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
push
inc
fst
arpl
xchg
pop
je
lock
or
rorb
sub
icebp
xor
xor
add
lahf
push
push
ret
inc
mov
adc
pushw
aad
mov
adc
testl
andl
std
sbb
std
pop
imul
scas
sbb
xchg
mov
mov
xchg
cwtl
ds
imul
mov
mov
xchg
cld
loop
out
mov
push
dec
ds
iret
mov
mov
push
js
mov
mov
cmp
into
cmp
xchg
rcll
adc
mov
les
mov
adc
jno
push
inc
push
mov
lret
or
lock
aad
daa
add
subl
repz
arpl
into
and
mov
adc
cld
fadds
mov
jp
mov
mov
movsb
cmp
cmp
push
dec
into
adc
bound
pop
punpcklbw
mov
pop
sub
shrl
mov
leave
gs
mov
sbb
sbb
xor
mov
imul
clc
iret
in
in
mul
xor
pop
xlat
add
dec
dec
into
and
cwtl
clc
call
add
ret
xchg
rcl
jle
pop
fidivl
or
mov
push
inc
inc
push
mov
add
jmp
cmc
dec
and
jno
push
mov
lods
jns
fistps
add
cli
jg
jle
xor
xchg
les
mov
lods
cmp
inc
mov
mov
sbb
push
mov
mov
je
jbe
inc
mov
pop
inc
and
mov
xor
imul
and
mov
adc
xchg
xchg
popa
and
mov
cmp
jne
std
push
pop
stc
popf
xchg
fnstenv
sub
adc
inc
dec
sub
mov
clc
mov
roll
mov
xor
mov
xchg
cmp
mov
negl
dec
in
andl
mov
addr16
pop
daa
lcall
mov
dec
cld
mov
jmp
in
mov
std
add
scas
cmp
jns
pusha
adc
adc
inc
outsl
cmp
loope
xchg
and
pop
or
xchg
dec
fisttps
popf
imul
cmpsl
andb
mov
xor
sahf
push
ficompl
add
and
fadd
sbb
adc
pop
les
mov
xor
arpl
cmpl
into
jno
mov
or
mov
lcall
xchg
in
or
mov
jns
call
or
dec
lods
mov
out
inc
fsubr
roll
aaa
lock
imul
imul
stos
das
lea
sti
lcall
int3
fimull
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
pop
or
adc
jg
jle
mov
inc
jle
sbb
imul
cmp
or
sub
mov
fldt
jmp
mov
mov
repz
adc
das
jge
cmp
rorb
dec
jae
stc
dec
jmp
icebp
int3
in
fisubrs
cmpsb
rclb
fwait
cmpsl
inc
ret
sub
add
push
into
cmp
sub
jnp
mov
das
pusha
push
dec
add
out
mov
adc
leave
add
add
fidivl
mov
ret
fdivrs
ficompl
dec
fisubrl
mov
mov
outsb
cmc
push
std
mov
xor
pop
jne
pop
lcall
cltd
and
pop
xchg
popl
ret
je
sahf
and
pop
or
lock
mov
and
pop
into
cmp
sbb
jg
xchg
in
jae
ljmp
mov
or
dec
out
ret
inc
mov
iret
mov
or
out
movsb
mov
xor
fsubl
and
fidivrl
mov
xchg
mov
icebp
mov
icebp
in
jne
gs
xchg
scas
sub
and
mov
movb
xchg
adc
hlt
xor
cltd
push
mov
js
imul
mov
cmp
cmp
shrl
out
ljmp
data16
out
imul
cmp
call
push
imull
adc
lock
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
scas
cltd
in
or
add
cli
jg
jle
mov
dec
rcll
cli
das
fists
or
push
std
dec
pusha
mov
add
popa
ss
and
pop
and
lret
sahf
or
addr16
jecxz
mov
sub
adcb
and
inc
fadd
bnd
and
or
or
lret
xchg
inc
adc
test
cli
or
frstors
and
les
sbb
stos
dec
in
jg
push
in
repz
int3
fs
mov
fnstcw
outsb
sbb
inc
sub
aaa
pusha
fs
pop
loopne
shl
out
neg
pop
sahf
sbb
ret
and
xchg
push
jg
or
out
jnp
push
fxch
dec
bound
in
mov
roll
xchg
cs
mov
iret
das
mov
mov
call
and
addr16
jle
pcmpgtb
dec
mov
mov
sahf
add
push
xchg
cmp
je
jle
stos
in
xchg
repz
mov
or
scas
stc
or
xlat
shrb
sarb
std
jne
in
add
mov
push
mov
test
aam
loopne
cmp
pop
lcall
push
ret
xchg
jo
jb
pop
loop
adc
sub
js
jl
push
cli
mov
ret
idiv
shll
push
mov
gs
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
je
push
mov
jg
jle
cmpsl
sub
je
push
add
nop
mov
aam
inc
cmp
sarb
mov
dec
add
pop
repnz
lea
out
fld
fisubrs
dec
int
idivb
loopne
pusha
mov
and
jmp
jno
push
cmp
or
xor
add
call
loope
inc
mov
jmp
scas
iret
repnz
into
dec
mov
aad
cmp
push
cmpsl
fcmovbe
mov
je
ret
loope
mov
enter
scas
subb
xchg
loop
pop
cmc
inc
add
push
xchg
bound
jg
cmp
in
lds
xor
into
pop
xorl
cmpsb
sub
and
daa
cmc
loopne
aas
add
add
test
inc
push
jle,pt
test
repnz
xchg
popf
imul
cmp
sbbb
adc
sbb
roll
mov
cmp
je
stos
subl
jae
inc
out
mov
std
mov
sbb
add
add
repnz
jg
sbb
or
xchg
dec
xor
lret
mov
dec
jne
push
ss
ret
rclb
icebp
popa
dec
mov
pop
filds
cmp
cs
sbb
scas
xchg
hlt
jecxz
or
out
lods
adc
mov
sub
sbb
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
cmc
out
cs
jle
jg
jle
mov
das
bound
pop
add
xchg
stos
push
jns
cmpsb
jns
xchg
or
jae
xlat
mov
test
adc
hlt
out
and
sbb
dec
mov
push
jp
push
bound
pop
cmp
lcall
pop
mov
jg
mov
shrb
ficoml
mov
movsl
daa
dec
cltd
pusha
aad
cmp
push
push
xchg
int3
incb
adc
cmpsb
or
scas
out
cmc
xchg
stos
out
add
push
jge
add
push
ret
mov
lods
push
or
cmc
cmpsb
mov
mov
jge
ret
push
push
mov
jb
xlat
outsb
cmpsb
in
dec
mov
lret
jmp
xor
lods
in
and
je
lret
mov
mov
les
gs
iret
and
push
jmp
cmp
ficomps
and
push
test
pusha
sub
out
dec
pop
repz
dec
xor
inc
movsl
aaa
test
or
or
mov
xor
sahf
mov
mov
inc
lret
dec
xorb
sub
sbb
pop
push
xchg
dec
xchg
jo
fcomip
insb
push
mov
aas
dec
aad
inc
leave
fs
xor
xchg
push
push
fidivl
lock
sub
into
push
pop
lret
and
add
cmp
scas
pop
movsb
jp
xchg
mov
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
call
or
jle
fidivrl
es
xchg
xchg
movsl
fsubs
jle
shl
xchg
gs
cmp
push
lea
push
test
inc
aas
pop
cmpsl
xchg
and
into
jne
addr16
dec
sub
fwait
cmp
mov
jbe
and
jecxz,pn
ss
insb
xchg
jnp
ror
ja
add
sub
add
aaa
fsubp
push
rcr
mov
insl
pop
lret
jno
leave
data16
gs
test
lods
xchg
mov
aad
movsb
mov
push
subl
inc
jmp
xor
push
test
insb
in
pusha
xchg
sbb
sbb
push
pop
rcrl
clc
pop
add
repz
popa
jecxz
cmp
stos
mov
cmpsl
push
or
out
in
pop
mov
sbb
mov
and
dec
lock
les
pop
in
push
jae
mov
aaa
cwtl
mov
or
lock
loop
into
ret
adc
clc
pop
mov
xchg
out
test
js
sub
add
movsb
jns
int
pusha
mov
cmp
aam
add
sbb
dec
xchg
bswap
pusha
mov
ja
lods
je
outsw
pop
push
imul
mov
rclb
add
and
and
inc
push
mov
mov
cmp
ror
dec
popa
xchg
inc
inc
jne
dec
xor
sub
or
outsb
inc
add
test
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
xchg
cld
loopne
or
cli
jg
jle
sbb
push
cwtl
jb
push
std
test
sub
cltd
gs
scas
sar
jecxz
out
fsubrs
jmp
mov
and
lea
rcrl
sbb
pop
dec
dec
daa
mov
add
sub
stc
jb
cmpl
imul
movsb
mov
fldenv
mov
in
arpl
lods
stos
aam
jl
lods
fs
sbb
xor
xorb
mov
fbld
mov
xchg
daa
lret
mov
xchg
outsl
xchg
mov
jp
mov
repnz
push
les
sbb
ds
imul
pusha
sahf
pop
shrb
out
xchg
stc
push
in
enter
mov
cld
adc
and
nop
ss
inc
fnstenv
mov
test
stc
add
jae
popf
dec
push
push
pop
sbb
fdivrs
mov
dec
push
filds
mov
and
fists
adc
mov
or
push
sets
mov
es
pop
out
andb
lret
jne
jbe
ret
sbb
or
idivb
movsb
sbb
add
sbb
bound
and
lahf
int
fwait
cltd
outsl
in
in
fcom
fsubrs
fcomps
cld
sbb
movlhps
or
push
cltd
ja
inc
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
cli
jg
jle
daa
inc
inc
call
insb
mov
lods
xchg
out
cld
inc
hlt
movsl
hlt
or
add
sahf
mov
negb
add
aaa
int3
fcoms
mov
jecxz
push
icebp
es
cmp
aaa
fldcw
mov
adcb
cmp
sti
loop
jae
int
xor
pop
lret
push
cmovle
push
jmp
jnp
xchg
ds
aad
ret
lcall
mov
inc
lret
mov
add
mov
test
call
xlat
cli
add
jle
sti
ss
clc
inc
jo
data16
jb
cli
repz
dec
xchg
ss
out
fldl2e
lret
push
jns
sbbl
lea
arpl
pusha
inc
and
or
ljmp
stos
arpl
imul
xchg
pop
mov
inc
mov
movsb
call
push
gs
test
lds
mov
add
ret
into
mov
aaa
pop
fs
mov
cltd
jns
inc
inc
pop
cs
cmp
pop
push
mov
movsl
loop
iret
enter
sub
or
js
lret
push
add
mov
decb
mov
sbb
repnz
lock
jne
jbe
or
test
cmp
les
adc
jne
xor
cli
sbb
push
jl
in
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
mov
jle
jg
jle
stc
xchg
inc
movsb
leave
inc
mov
and
add
adc
pop
iret
jmp
mov
and
pop
mov
cltd
jo
adc
jb
jg
sbb
sub
inc
leave
add
cld
test
lods
xchg
inc
fcmovne
stc
pop
dec
ljmp
pop
add
push
push
xor
out
pop
mov
push
aaa
inc
xchg
xchg
jne
out
shl
xor
sbb
pop
cli
inc
add
lods
jo
jle
and
incl
inc
lods
inc
js
mov
xabort
cmp
outsb
das
int3
call
xchg
out
add
push
push
push
es
shl
sti
xchg
data16
imul
pop
fsubrs
insb
mov
insl
cmpsb
cli
test
mulb
ret
mov
dec
pop
out
lds
shlb
jl
jp
fsubs
cli
mov
mov
das
lock
adc
test
xor
push
scas
incb
into
jnp
out
push
push
jae
addr16
mov
fcomps
sahf
cmpsb
jp
sub
enter
mov
mov
dec
pushf
xor
add
xor
dec
rcrl
data16
mov
pop
pop
xchg
sbb
into
aas
adc
inc
sbb
cld
mov
add
ja
rcrb
push
xchg
jae
pop
test
call
mov
mov
add
pop
jmp
add
mov
adcb
push
mov
jg
jle
xchg
inc
jnp
fdivr
jmp
in
pop
add
andb
fmul
clc
inc
clc
jo
jge
adc
ret
addr16
mov
jae
mov
jecxz
lea
pop
adc
pusha
mov
lret
lds
faddl
popf
call
jp
push
mov
inc
rcr
xchg
and
bound
leave
mov
fimuls
stc
mov
enter
jg
fwait
repnz
and
jo
ret
sti
cltd
flds
cli
jns
sbb
sahf
sbb
dec
jb
std
sarb
hlt
sub
dec
and
or
jnp
mov
xor
lds
mov
jbe
mov
bound
mov
lods
cmp
negl
push
pop
mov
sub
xor
pop
ljmp
sti
jg
rolb
jne
pop
pushl
mov
xchg
cmp
push
out
or
mov
aad
lods
inc
sub
push
cmpsl
shlb
ret
xchg
movsb
mov
xor
push
mov
and
jbe
es
cld
ss
inc
iret
pop
mov
shlb
push
mov
cmp
out
or
xchg
insb
cli
shlb
pop
inc
cld
mov
jae
pop
and
mov
sbb
xor
popa
ds
sbb
xor
pusha
xchg
loop
addr16
dec
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
xor
pop
jl
jle
xor
push
xchg
and
fyl2x
shlb
jecxz
movsb
fs
std
dec
xor
cmp
mov
sub
adcl
call
mov
jecxz
rcrb
sbb
out
sub
test
bound
or
mov
out
fsubs
dec
test
dec
xor
mov
add
inc
push
in
es
mov
sbb
cmpsl
pop
mov
cmp
adc
rclb
mov
inc
adc
repz
subl
pop
shrl
sbb
pop
xchg
mov
push
outsl
cmp
shll
nop
jae
aam
mov
sti
jl
clc
adc
push
xchg
rcll
push
cmpsl
addr16
adc
mov
sbb
ret
faddl
push
mov
ret
decl
popf
sbb
sbb
xchg
or
lcall
scas
data16
lcall
insl
dec
ret
adc
scas
ds
pop
or
pop
xchg
jns
jecxz
dec
adc
fsubs
jno
mov
push
repz
xor
push
int3
cmpsb
int
adc
lret
mov
push
repnz
dec
and
int3
xor
nop
je
das
mov
roll
add
pop
adcl
cmp
sub
xchg
daa
add
fcmovnbe
icebp
xchg
and
sub
jmp
insb
lods
lods
in
call
pop
loop
leave
lods
and
ds
sbb
mov
mov
pop
jbe
xor
jmp
sub
cltd
data16
mov
mov
cld
fadds
rolb
in
cmp
jp
cmpsb
aaa
dec
jns
xchg
lret
out
cmp
add
jmp
sbb
insl
adc
mov
or
out
mov
decb
pop
data16
jecxz
xchg
loope
ret
pop
xor
outsl
jo
jle
ss
inc
sub
lahf
push
lret
adc
pushf
lods
shrl
sub
sub
loop
dec
adc
dec
pop
ret
lods
lock
and
scas
mov
mov
mov
pop
adc
movsb
push
xchg
inc
lods
negl
call
mov
stc
ljmp
push
or
adc
mov
mov
movsb
sbb
aas
push
jo
xchg
leave
xorb
mov
xor
daa
mov
popa
in
ds
dec
or
push
jno
mov
xchg
xchg
and
rol
pop
popa
or
rcrl
cmp
dec
sahf
push
dec
mov
and
les
mov
int
outsl
bswap
ret
sahf
in
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
iret
push
push
and
jle
pop
jl
jle
insl
mov
psrld
rorb
jp
mov
add
sub
cmpsb
mov
ja
xchg
add
pop
push
push
in
dec
sbb
sub
into
mov
into
mov
mull
push
lret
xor
jp
nop
inc
xor
adc
lret
cwtl
outsl
xchg
sbb
jne
out
sub
mov
add
jo
jp
aam
dec
xchg
xchg
xchg
dec
stos
aaa
push
leave
push
imul
ret
fs
scas
and
loop
push
rorl
stos
xchg
stos
insl
mov
dec
imul
push
je
dec
shl
mov
add
xor
xlat
sub
mov
jge
lahf
hlt
repz
mov
add
test
mov
jno
add
xchg
mov
les
mov
imul
xchg
xlat
testb
mov
dec
stc
lock
fs
jae
inc
xor
outsl
mov
pop
add
mov
mov
adc
inc
stos
mov
popa
add
aam
lock
rclb
std
and
adc
xor
xor
mov
adcl
popf
mov
fldenv
xor
mov
sub
cmp
sbb
mov
pop
dec
outsb
jl
imul
je
or
addl
fisubs
outsl
icebp
cmp
xor
mov
mov
add
jns
xor
sbb
negl
xchg
addr16
fdivs
dec
jnp
pop
mov
scas
scas
sub
in
inc
inc
and
dec
jb
xchg
repz
mov
aam
push
imul
mov
mov
stc
sub
xchg
or
adc
out
mov
insl
mov
enter
jae
pop
inc
sub
mov
lret
insb
faddl
add
or
cltd
push
pop
into
push
and
sub
les
add
dec
scas
mov
xchg
insl
ret
push
jb
lds
lret
add
cs
dec
call
popf
mov
icebp
xchg
mov
push
in
jg
pop
fistps
ljmp
xlat
pop
dec
cs
inc
jle
push
push
ret
sbb
mov
mull
jb
sbb
jp
in
daa
into
mov
aaa
push
fists
int
adc
aaa
pop
stos
push
jae
adc
sbb
test
push
pop
xor
cmc
leave
push
jae
sti
push
adc
movsb
dec
aad
cmp
cltd
hlt
sahf
rcrl
jmp
cmp
rcr
cmp
lds
or
inc
and
xor
fxch
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
adc
or
jle
pop
jl
jle
testl
push
pop
arpl
adc
mov
cltd
sbb
or
movsb
sti
xor
mov
fwait
scas
test
xor
pop
arpl
sub
scas
cmp
cmp
popf
and
movsb
jle
xchg
mov
sbbl
fiadds
push
insb
in
les
push
int
inc
jne
push
cmp
jno
bound
aam
mov
pop
jp
xchg
pop
cmp
inc
push
adc
xchg
lahf
mov
and
dec
stos
pop
xor
mov
pop
sbb
test
shlb
cmp
dec
loope
fisubrs
je
out
xor
ret
enter
adc
xchg
jb
loope
push
das
pop
out
into
icebp
mov
dec
fimull
enter
aad
roll
rorl
mov
mov
or
mov
lods
sub
lahf
in
mov
cs
push
mov
xlat
fcomps
movsb
push
shrl
sub
pop
xchg
mov
bound
push
and
xor
cmp
lret
and
mov
repz
out
xor
mov
inc
jg
jns
add
ds
lret
sti
mov
test
dec
sub
xchg
test
jg
loopne
mov
xor
pusha
push
adc
testb
bound
pop
out
xor
sub
mov
out
push
out
mov
dec
dec
sbb
sbb
push
in
xor
shr
aad
pop
orb
pop
xchg
jbe
xchg
mov
pop
cltd
pop
pop
sub
pop
xchg
add
inc
push
add
mov
jnp
es
pop
mov
pop
inc
inc
jae
dec
bt
mov
das
cltd
cmp
pop
popa
popf
jae
mov
cmp
xchg
clc
dec
cld
push
scas
out
outsl
xchg
pop
xchg
test
stc
hlt
xorl
inc
xchg
int
add
sti
jecxz
sbb
sbb
mov
dec
or
rcll
movsl
movsl
lea
sti
scas
lods
jmp
aam
jge
mov
xor
inc
inc
adc
push
mov
insl
add
push
mov
out
outsl
pop
fists
vmovss
adc
sub
jbe
mov
scas
shll
cmp
pop
divb
xchg
mov
outsb
movsb
pop
scas
mov
push
shrl
arpl
sbb
or
in
das
pop
jge
fnstcw
pop
cmp
in
test
xchg
jmp
lea
sub
push
dec
sbb
fs
add
fistpll
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
sbb
jle
aam
jg
mov
xor
movsl
cmp
es
int
fbld
xlat
sbb
push
icebp
add
mov
js
dec
xchg
dec
in
mov
pop
jge
jge
idivl
mov
ret
sub
xor
sbb
mov
jmp
aaa
inc
out
outsl
and
jo
sbb
clc
mov
and
stos
sti
mov
pop
insl
jge
imul
cmp
cmp
outsb
fwait
xchg
nop
jae
jle
mov
into
jb
sbb
dec
jp
inc
mov
push
sub
shlb
mov
popa
dec
cmp
add
push
and
or
daa
jle
push
dec
mulb
sar
jno
sub
scas
pop
add
stc
jbe
inc
cmp
negb
in
jg
and
mov
jecxz
mov
jmp
xchg
insl
sbbl
push
shr
iret
cltd
jns
jl
xchg
pop
insb
test
sbb
enter
jbe
int
test
in
je
ja
add
sbb
mov
mov
pop
cli
xorb
mov
or
lret
or
loop
mov
adc
ljmp
test
pushf
xchg
out
pop
sub
subb
lret
adc
cli
sti
or
adc
ret
inc
fnsave
xchg
or
aad
push
inc
or
and
fisubrl
add
mov
cltd
xor
and
and
imul
push
adc
jg
jne
xchg
loop
jle
add
psubw
pop
xor
adc
mov
sarb
cmp
jle
push
mov
dec
and
mov
mov
push
sahf
xchg
mov
jg
pop
pop
mov
inc
repz
inc
fidivl
shlb
pop
dec
xor
dec
mov
insl
jbe
daa
xchg
test
mov
insb
mov
aad
and
pop
nop
jbe
int3
fcmovnbe
dec
mov
rcpps
pop
sahf
lods
adc
sti
or
mov
jo
imul
fisubl
or
pop
lock
insb
arpl
in
cmp
cltd
xor
clc
aaa
imul
movaps
fistpll
sbb
jbe
aad
push
ljmp
mov
xchg
xlat
arpl
cmpsl
jge
jg
xor
xor
jo
aad
addr16
hlt
jns
sbb
push
xor
dec
adc
sub
jmp
pop
imul
inc
mov
push
cmp
lds
jl
mov
xor
jmp
add
dec
popa
jno
jne
xor
jle
xchg
and
jle
jl
jle
dec
shll
push
adc
addl
stos
dec
push
cmp
adc
sbb
inc
dec
mov
sti
xchg
or
lods
cwtl
ljmp
xchg
int3
bound
mov
mov
test
inc
fs
jnp
cltd
fildl
stc
movsb
jmp
and
pusha
inc
adc
xlat
dec
or
or
movsl
out
imulb
pop
popa
jns
pushl
inc
enter
sbb
push
jge
enter
ss
jle
inc
pop
push
mov
xor
outsb
sub
iret
divl
mov
insb
xor
inc
mov
mov
dec
push
push
rorl
cmc
add
mov
jg
sub
cld
fwait
les
dec
adc
mov
sbb
cs
lea
mov
push
jmp
mov
mov
popa
in
clc
xchg
xor
sbb
and
dec
pop
leave
fistl
adc
outsl
loopne
rolb
call
mov
sbb
jmp
mov
pop
call
icebp
repz
xor
xchg
sti
mov
add
dec
pop
loop
xchg
adc
cltd
int
mov
imul
aaa
daa
pop
outsl
pop
sub
sti
mov
stos
xor
imul
cltd
push
in
bound
dec
fcmovb
fildll
adc
aad
mov
cltd
mov
insl
dec
sbb
and
lret
push
adcb
sbb
jno
inc
ds
cmp
add
push
push
dec
xor
mov
add
inc
or
push
mull
inc
repz
popa
mov
mov
add
ljmp
mov
push
movsb
pop
xorl
mov
hlt
das
aaa
aas
cmp
push
pushf
pop
fnsave
in
testl
shlb
pop
lea
push
cmpl
into
cwtl
mov
mov
xchg
scas
dec
fs
fcmovnb
xchg
iret
push
das
add
push
jbe
cmp
cld
or
push
dec
fisubrs
aas
pop
mov
stos
inc
pushf
ret
mov
fs
mov
jmp
out
cltd
mov
xchg
scas
xchg
cmp
mov
mov
clc
hlt
mov
or
push
movl
lods
xchg
test
mov
or
pop
push
popa
sbb
sub
les
and
jp
nop
mov
in
test
shll
mov
mov
push
mov
xchg
push
lock
les
jae
rolb
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
cli
inc
into
and
pop
jl
jle
add
jg
mov
xor
inc
sub
dec
decl
sbb
lds
or
mov
inc
sbb
insb
sub
addr16
cmp
sbb
jbe
pop
push
jno
fxch
out
jp
adc
outsb
lret
mov
push
fidivrl
push
cmp
inc
dec
gs
pop
lcall
sarb
push
lret
or
inc
aam
subl
cmp
pop
or
push
pop
push
testl
data16
pop
movsl
nop
pop
mov
fdivl
push
or
push
das
push
in
js
or
repz
and
mov
and
je
in
testb
dec
inc
icebp
jg
mov
movsb
mov
sub
mov
jae
lock
imul
inc
jmp
cwtl
xor
jp
cmpsl
pop
frstor
xchg
pop
int3
nop
inc
push
jmp
mov
adc
lcall
in
inc
cs
cltd
push
sbb
sbb
jle
popf
push
and
cmpsb
pop
add
add
lods
clc
mov
incl
sub
cli
mov
pushf
je
inc
test
lret
lea
shrl
mov
jp
adc
jo
sub
loope
sub
sub
scas
imulb
xchg
iret
out
jmp
ja
pop
or
ss
dec
in
push
pop
adc
frstor
sub
je
sbb
je
arpl
xor
jne
xchg
or
outsl
jp
dec
movsb
lock
cmpsl
xchg
pop
divl
push
jecxz
pusha
orb
jb
in
xchg
pushf
pop
push
lret
movsb
cmp
ds
es
adc
xor
call
adc
out
cmp
imul
dec
or
rorb
add
mov
sahf
hlt
ret
out
jle
loopne
jbe
fldt
in
mov
sub
ds
gs
in
daa
jl
push
aam
cmp
push
pushf
adc
in
push
dec
dec
xchg
outsb
aad
js
cmc
das
mov
jno
dec
pop
in
into
push
mov
sbb
or
jnp
popa
jne
and
mov
jl
addr16
xor
inc
fucomi
pop
push
lret
les
dec
int
add
jns
dec
fs
mov
mov
xchg
pushf
ret
or
negl
mov
and
or
mov
jno
sub
xchg
repnz
lret
addb
adc
mov
imul
nop
ss
xchg
dec
adc
inc
out
cli
out
jb
out
clc
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
or
jle
jl
jle
dec
push
cmp
xchg
add
ds
dec
in
adc
xor
push
fistpl
aam
ret
sub
sub
popf
jmp
inc
mov
push
mov
sbb
mov
das
es
cmp
in
subb
div
mov
push
mov
sub
push
mov
icebp
pusha
popa
or
mov
leave
clc
cmpsl
aas
imull
push
lea
addl
aaa
andl
lds
test
inc
icebp
aad
imul
xor
out
ja
push
xor
mov
jg
xor
addb
pop
add
push
jl
adc
dec
dec
bswap
dec
xor
push
rcl
jae
push
mov
dec
pop
pop
popf
sbb
push
cmp
das
jb
adc
insl
xchg
mov
xor
or
movsl
cmp
jp
add
mov
fsubrs
imul
ja
mov
int3
push
jae
movsl
jecxz
inc
mov
je
mov
mov
sub
aam
cmp
xchg
add
ja
xchg
add
adc
cmp
pop
out
ljmp
cmpsb
pusha
push
xchg
xchg
incb
jecxz
pop
cmc
imull
jecxz
mov
scas
cmp
cltd
sbb
inc
rcrb
mov
xchg
clc
mov
dec
movsb
add
xchg
push
push
enter
cmp
xchg
movsb
mov
sbb
out
lret
cmpsl
push
lret
sbb
fmuls
sbbb
std
mov
dec
fidivrl
sti
xlat
push
and
popa
dec
in
adcb
jno
pop
push
mov
jmp
lcall
cmpsl
push
movsb
outsl
push
ja
cmpsl
mov
lea
shr
fwait
arpl
pop
add
adc
and
pushl
xor
push
jecxz
xchg
rcrb
jnp
arpl
cmp
fdivrl
nop
daa
mov
pop
popa
push
dec
mov
sub
mov
mov
inc
jp
sar
test
xor
add
ds
and
pushf
mov
and
sahf
mov
xchg
add
leave
mov
add
cld
les
in
sbb
add
loopne
jl
sbb
aas
dec
sub
je
xchg
lea
push
inc
cmpsb
mov
jnp
jl
cmc
fnstenv
jns
sub
mov
and
cmp
lcall
mov
add
xor
push
pop
cmp
cmp
fdivrp
xchg
or
ja
dec
xor
jne
pop
xor
xlat
out
or
mov
fsts
in
pushf
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
in
mov
jle
pop
jl
jle
mov
lock
popa
jg
pop
and
mov
push
xchg
es
iret
aaa
inc
in
xchg
sbb
mov
enter
sub
out
mov
and
add
int
xor
add
cmp
cmp
pushf
push
sbb
mov
and
loop
jmp
adc
scas
push
call
mov
push
fwait
bound
clc
mov
jbe
mov
push
or
je
dec
leave
aam
negl
mov
insl
cs
decl
sahf
int
xor
in
cmp
fsubrs
sahf
shlb
scas
mov
inc
fs
push
adc
lods
pop
addr16
movsl
push
pop
xor
mov
stc
push
xlat
sbb
je
in
test
push
sbb
int3
lret
popf
lahf
aam
mov
sarb
xor
mov
loopne
mov
dec
add
aad
add
in
fidivs
test
dec
mov
inc
jmp
add
jnp
push
pop
and
int3
sub
sub
push
and
or
ja
adc
and
add
imul
mov
stos
adc
mov
cmp
and
push
ret
pushf
in
fistpll
leave
scas
inc
and
pop
pop
insl
mov
and
stc
fdivs
imul
fprem
sub
insb
mov
xor
mov
out
or
and
adc
cmp
dec
mov
add
movsb
push
cmp
or
test
std
in
push
sub
sub
mov
mov
pushf
and
inc
inc
test
sub
out
stos
into
and
aad
imul
mov
faddl
iret
adc
sbb
push
es
cmp
divb
lret
mov
mov
test
mov
cmp
in
cmp
lea
add
adc
mov
jle
addr16
lds
or
sarl
rolb
jbe
push
movsb
sub
add
gs
push
lcall
pop
sbb
addb
cli
scas
mov
and
inc
fsubl
add
sbb
jne
lea
mov
xor
xlat
cmp
cmp
inc
xor
das
cli
adc
popa
dec
xor
insl
stos
cmp
orb
jg
daa
push
and
sbb
mov
ljmp
nop
frstor
sub
sahf
add
roll
sbb
or
popa
es
sbb
scas
cs
popf
pop
sub
adc
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
push
sub
jle
pop
jl
jle
push
sub
enter
fs
and
push
xchg
pop
push
outsb
leave
pop
repnz
sub
pop
aas
pop
and
sub
test
mov
ror
sti
addr16
cltd
jne
lds
pop
push
mov
push
inc
shl
insb
mov
cmp
add
jl
nop
loopne
cmpsb
insl
dec
mov
sahf
shll
push
mov
stos
mov
outsb
mov
xor
xor
repz
shrb
orb
xchg
rcr
nop
out
push
sti
mov
daa
dec
mov
push
xchg
rcll
jae
fsubrs
ljmp
cli
pop
hlt
pop
je
jnp
lahf
mov
or
fadds
jmp
fsubp
psubq
jg
subb
jae
les
stos
subb
inc
add
jg
and
add
flds
adc
movl
adc
pmulhuw
cltd
jle
inc
mov
loope
mov
lods
cli
xchg
loope
mov
mov
pushf
fdivrl
add
inc
jmp
ficoms
out
inc
sub
imul
stos
xchg
lock
dec
push
pushf
dec
cmp
gs
cli
add
sub
push
lret
imul
mov
and
cwtl
sbb
iret
cmpsb
cmc
out
ret
flds
sahf
push
push
lret
ret
call
add
xlat
call
xchg
pop
imul
xchg
mov
mov
sub
adc
cmp
je
jp
ret
jae
xor
pop
mov
adc
sub
imul
notl
ss
out
xlat
mov
sarl
pop
push
popa
ds
jl
mov
test
addr16
clc
mov
mov
fwait
add
jle
dec
pop
test
in
daa
ret
fsubs
or
mov
in
mov
addl
outsb
mov
xor
sub
dec
dec
dec
ljmp
pop
mull
pop
int3
lahf
sub
mov
xchg
mov
xchg
sbb
addb
mov
enter
mov
sbb
std
lea
sbb
lret
add
inc
or
cwtl
call
fidivs
adc
lods
xchg
pusha
iret
sub
cli
jb
stc
je
js
xlat
fists
adc
jmp
mov
jnp
pop
pop
fdivrl
scas
xor
push
hlt
sbb
pop
jle
test
enter
bound
cltd
xchg
cld
inc
adc
mov
ficomps
nop
pop
rcr
add
std
imul
test
xchg
decl
fsubr
incb
add
outsl
fisttpll
pop
fmull
pop
sub
sub
pop
jl
jle
mul
lret
aam
cmpsl
lcall
rcrl
push
cltd
arpl
xorl
mov
stc
inc
adc
jg
orb
fxch
xchg
or
shll
in
dec
xor
jge
mov
push
pop
mov
mov
es
mov
cmpsb
fidivrs
ds
mov
push
jmp
pop
aam
lea
loopne
scas
movsl
bound
adc
ss
cmp
mov
repz
pop
fistl
pop
in
arpl
xchg
fnop
dec
xchg
jae
les
push
into
mov
jl
add
lret
stos
cmp
xchg
pop
or
add
stc
arpl
mov
loope
aas
xor
or
xchg
rcl
push
pop
ds
lea
mov
jno
xor
mov
fwait
jmp
pop
cmpsl
into
cmc
and
fistps
pop
inc
rcll
jg
ljmp
ror
add
inc
lock
jnp
sbb
or
adc
pop
xchg
pushf
in
mov
std
xchg
xchg
dec
push
mov
sub
xchg
sbb
sub
push
add
sub
jecxz
fwait
icebp
adc
shrl
gs
fldt
inc
xlat
ret
popw
and
pop
jnp
mov
adc
pushf
ja
stos
dec
les
pop
rcl
mov
and
lea
xor
and
xchg
mov
shrb
movsl
mov
lods
sub
ja
cmp
sbb
mov
mov
mov
imul
sbb
js
ror
lcall
popf
xchg
clc
sbb
out
call
jne
push
adc
subl
je
mov
in
mov
mov
loop
pop
cmp
out
loope
dec
ret
popa
mov
icebp
dec
insl
dec
jb
and
cli
mov
lahf
mov
insl
mov
dec
mov
pop
enter
pop
adc
cmp
stos
popa
jl
outsb
push
jae
jp
and
adc
cmp
scas
arpl
aas
cmp
dec
sbb
sub
mov
ret
iret
dec
shrb
dec
fadd
mov
xchg
mov
fnsave
cmp
clc
xchg
xchg
push
addr16
js
lods
pop
and
pop
pop
pop
scas
out
sub
out
int3
loopne
sub
je
xor
scas
jl
mov
nop
cld
fs
test
call
mov
sbb
popa
int
lea
adc
dec
dec
jb
push
or
mov
mov
or
xchg
adc
jns
pop
cwtl
int
cwtl
movaps
loop
arpl
jbe
jbe
mov
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
sbb
test
sub
jle
mov
test
js
or
call
popf
gs
std
popl
sub
xor
mov
imulb
test
pop
sti
xor
mov
lds
lret
and
stos
out
push
stc
dec
fsubl
push
cmpsb
mov
and
push
clc
outsb
in
fiaddl
mov
lods
sbb
xor
sti
cltd
sbb
loop
dec
cmpsl
push
shll
push
adc
adc
xor
fucomp
mov
and
jo
sbb
pop
test
jmp
ret
inc
scas
mov
mov
mov
jno
cwtl
insl
push
dec
inc
aas
into
fabs
aam
stos
lahf
inc
push
sbbb
cwtl
or
mov
loopne
lds
leave
mov
dec
inc
mov
add
push
cmpsb
fsubl
in
ja
idivl
dec
pop
movsl
lcall
or
xchg
ja
ss
push
popa
mov
jg
sub
mov
pop
add
inc
add
mov
out
mov
div
push
addr16
push
push
mov
outsl
aad
or
xor
mov
fs
in
or
inc
in
adc
divl
lret
and
repz
mov
xchg
pop
jns
pop
cmp
adc
jno
dec
shr
cmp
or
inc
push
js
test
adc
in
sub
outsb
lods
in
rolb
cmpsb
cmpsb
fdivr
in
mov
sub
scas
xor
push
push
movsl
ficoml
xor
inc
or
test
xchg
pop
aam
sti
outsb
dec
popf
mov
jae
fstp
adc
mov
mov
and
jae
aam
mov
xor
in
ja
out
and
add
mov
je
jge
int3
dec
push
jo
xchg
loope
in
dec
and
loope
cmp
in
ljmp
sub
cltd
aad
xor
out
fwait
dec
aas
mov
scas
ficomps
test
inc
mov
jbe
pop
inc
add
sarb
dec
inc
mov
test
add
fnstcw
leave
mov
mov
add
xchg
sbb
and
push
inc
dec
mov
push
pop
sbb
and
pop
aad
out
inc
cmp
mov
cli
xchg
and
ret
fistpl
pop
jp
out
jae
mov
icebp
outsl
jle
pop
fdivr
arpl
cli
or
dec
pop
mov
loopne
shl
or
adcb
stos
jl
loop
leave
sub
in
xor
jb
orl
pop
push
push
or
shlb
loope
and
loop
pushf
outsl
dec
fcoml
scas
outsl
xchg
fdivrs
push
xor
push
inc
lea
mov
mov
jns
push
pop
mov
fisubrl
jnp
lock
aaa
out
jbe
repz
aam
aad
jne
jns
and
pop
sbb
xor
cmp
aam
int
push
data16
pop
ret
mov
sub
lods
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
or
or
mov
mov
movsl
adc
imul
dec
adc
loopne
out
xchg
pop
jmp
mov
add
and
in
xchg
sahf
mov
cli
mov
lock
imul
clc
add
in
or
daa
or
sbb
dec
out
pop
jecxz
cld
test
mov
rcrb
push
xor
bound
vpmadcsswd
lds
cltd
lea
xchg
adc
nop
cmpb
test
and
push
arpl
outsb
fisubrs
and
dec
mov
mov
fistps
shlb
mov
mov
ret
sbb
sahf
mov
pop
fucomi
cmpsl
jg
in
sub
outsl
xor
push
jbe
adc
rcrb
filds
jnp
xchg
data16
aad
adc
pop
mov
lahf
adc
data16
xchg
jl
pop
cltd
outsb
xor
divb
insl
lea
dec
jl
call
outsb
push
xor
push
xchg
fldl
mov
mov
jbe
movsl
mov
sti
push
mov
mov
cmp
jns
sbb
pop
lahf
in
enter
imul
or
dec
push
xchg
shll
in
jmp
adc
cmp
xchg
and
cmpsb
cmp
mov
fsub
lret
pop
enter
pop
mov
jmp
mov
ljmp
push
dec
mov
shll
loope
mov
sti
jg
daa
jl
repnz
adc
dec
shrl
pop
mov
fnstcw
add
imul
cmp
xchg
rcrb
scas
lds
jbe
rolb
mov
fldenv
adc
inc
setno
lret
pop
enter
xor
sti
loope
mov
and
testb
fnstcw
push
popa
push
xchg
lock
mov
cmp
xchg
lds
test
inc
or
gs
lret
das
sahf
fistpl
icebp
imul
sub
dec
lds
adc
mov
testb
out
testl
rolb
mov
dec
cmp
pop
sbb
imul
cmp
mov
add
daa
daa
xchg
ss
pop
ret
push
out
and
pop
inc
push
mov
cs
push
aas
imul
pop
inc
or
or
ret
pop
divb
jmp
test
aaa
outsb
mov
sub
jbe
xchg
push
mov
in
repnz
dec
jl
and
pop
pop
bndldx
sub
inc
cmp
pushf
push
insl
pop
std
into
stc
xchg
jnp
leave
insl
xchg
aaa
lds
aad
mov
jmp
push
xchg
push
fldl2t
cmp
cmp
popf
pop
xchg
std
jnp
or
ds
xorb
jne
cmp
cmp
and
cmp
sub
std
cmp
rol
and
jmp
adc
lea
fnstcw
aam
jnp
xchg
add
insb
xor
neg
jmp
jne
sub
test
test
mov
jmp
in
xor
sub
jle
sub
adc
in
loop
mov
sbb
adc
lods
repz
pop
mov
insb
jb
sub
push
pop
sbb
arpl
add
hlt
mov
sub
sbb
or
sub
mov
lahf
ds
pop
loopne
xchg
je
mov
in
jb
hlt
andl
outsl
test
mov
outsb
xchg
or
rorb
adc
inc
xor
or
push
daa
xlat
mov
fisubrs
pop
and
sti
xchg
cmp
add
int
stos
int
scas
or
adc
xor
stc
loop
imul
mov
and
push
jge
pop
and
mov
cmpb
sub
in
cmp
ret
jno
mov
mov
mov
fildl
scas
aaa
mov
adcl
lret
jbe
mov
int
sbb
rcll
pop
rol
into
sub
and
or
mov
aas
cmpsl
sti
idivb
jge
cmp
xchg
jl
inc
leave
cmp
jmp
push
ret
xchg
mov
out
xor
cli
jp
pop
shll
mov
es
sbb
rcl
out
test
dec
pop
das
cmpsl
cmp
enter
loopne
jbe
scas
loope
test
insb
fiadds
test
cmp
push
enter
mov
mov
rclb
clc
fucomip
adc
test
add
dec
pop
push
repz
fadds
filds
inc
cli
fdivrs
add
add
sbbl
sbbb
out
int3
fcmovb
lock
xchg
stos
int
punpckhwd
xor
xchg
icebp
ljmp
sub
pop
push
push
ds
aaa
mov
lahf
dec
or
test
xchg
cli
ljmp
adc
mov
sbb
rolb
xor
dec
je
mov
fnstsw
lock
mov
rcl
test
jge
pop
inc
pop
or
xchg
or
test
lock
fmull
in
movsl
lahf
push
push
cmpsb
jne
inc
popa
and
aas
addl
das
movsl
insl
rcrl
movsl
shrb
push
xor
pop
stc
gs
mov
mov
cmp
mov
lods
pop
or
aam
xadd
dec
stc
sub
lcall
dec
push
fldcw
int
or
mov
insl
mov
inc
pop
and
popl
nop
add
cltd
test
sbb
ja
fisubl
fidivl
adc
sub
and
lock
fcomi
push
popa
adc
lock
in
addr16
in
or
in
pop
cltd
push
cmc
jns
sub
mov
xor
xchg
sbb
mov
pop
mov
cmp
movsb
cmp
xor
jecxz,pt
enter
cmp
insb
sahf
xchg
sti
jp
cmp
in
push
cmp
mov
loopne
icebp
scas
leave
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
das
cmpsb
cmp
jle
jge
jle
mov
cmpsl
and
sub
cmp
aas
fisubl
pusha
jl
out
or
jmp
sahf
out
std
xchg
or
cmp
dec
and
adc
push
inc
sar
mov
cmpsb
push
icebp
dec
insb
pop
inc
cmp
scas
das
jbe
ds
test
mov
cvttps2pi
dec
xchg
cmpsb
imul
cmp
mov
lret
and
pop
or
test
popa
rcll
add
scas
ss
nop
icebp
sub
and
cmp
sbb
jb
rol
dec
les
aam
pop
shrb
ror
repz
cld
fadds
add
imul
ret
cld
scas
xor
mov
outsb
outsb
faddl
and
push
push
scas
popa
mov
shr
stos
pop
lds
xchg
push
cli
sbbl
aas
dec
ds
xor
ss
mov
push
shr
push
pop
sti
mov
pop
iret
push
or
mov
stos
pop
xor
adc
lods
xor
lcall
mov
mov
loopne
out
jo
leave
inc
je
hlt
dec
push
clc
fwait
ret
daa
inc
ret
repz
stos
inc
jo
sarb
in
mov
add
cli
xor
sti
ds
and
dec
pushf
in
jns
adc
xchg
mov
jbe
mov
add
xchg
clc
test
rcl
repnz
xchg
repz
movsb
xchg
lock
lret
mov
stos
sti
add
push
cs
xor
fsts
in
test
loopne
pushf
inc
pushf
mov
imul
jmp
pop
pop
mov
adc
bound
movsl
sbb
ljmp
push
enter
xchg
xor
mov
jb
scas
cmp
push
mov
jle
test
pop
xor
ds
cmpsb
cmp
lock
in
js
enter
jmp
inc
inc
loopne,pt
cmp
xchg
stc
out
cwtl
sbbl
xor
movb
insl
int3
in
xor
xor
nop
and
mov
imul
push
lret
loop
orb
push
enter
jnp
fnstsw
mov
jno
jo
mov
notl
xchg
fbld
inc
and
imul
mov
pop
outsl
fwait
shlb
cmp
orb
sub
push
mov
mov
icebp
les
jmp
jb
mov
ljmp
and
inc
sbb
push
imul
stos
push
stc
cmp
cmpsl
aas
movsl
xlat
cmc
jnp
add
js
jge
push
and
or
sbb
popa
add
sahf
mov
imul
imul
jp
sbb
fsubp
cld
in
push
into
int3
or
js
pop
fistpl
adc
lods
push
jae
mov
push
loope
sub
cwtl
test
je
daa
inc
jmp
ds
mov
add
add
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
icebp
add
jle
mov
stos
xchg
inc
test
jmp
aas
in
lahf
sti
loop
ds
xor
cli
xchg
subb
adc
lods
mov
rolb
rcrl
addr16
enter
cltd
ja
cmp
mov
test
xchg
cmpl
rcll
fmull
jmp
mov
inc
ror
pusha
std
inc
mov
pop
mov
test
shl
sub
mov
or
mov
cli
cmp
sahf
xlat
data16
pop
sbb
pop
jns
scas
insl
mov
call
dec
loop
add
xacquire
jg
lds
dec
daa
test
mov
inc
out
mov
dec
test
js
int
pop
xor
fldcw
lret
sarb
bound
adc
xchg
nop
and
xor
stos
mov
cld
repz
fdiv
mov
or
ret
or
loop
jb
lret
nop
popa
jg
mov
leave
push
psrld
int3
mov
cwtl
mov
jle
mov
stos
xor
fldenv
lods
iret
pop
sub
sub
subl
cmp
shrb
test
cmpsl
ficoml
into
xchg
mov
jae
dec
daa
loopne
movsl
xchg
cmp
sbb
sbb
call
sub
ror
dec
loopne
testb
out
xchg
xor
nop
das
loop
mov
mov
jae
mov
je
arpl
outsb
gs
and
sarb
in
sub
or
lds
add
pmaxsw
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
data16
inc
cmp
mov
push
jmp
outsb
adc
cmc
insb
fs
inc
xor
aas
push
sub
cmp
mov
or
pop
mov
loopne
pop
jl
or
mov
mov
stc
mov
dec
movl
repz
cmp
and
or
ja
jnp
adc
mov
sub
sub
dec
fs
cmc
mov
jmp
test
push
xchg
stos
out
sbb
jecxz
ds
test
stc
cmp
lock
sub
lds
shlb
aas
stc
inc
fistl
pop
test
xchg
ja
ret
inc
stc
shll
mov
push
stos
sbb
gs
pop
lds
sub
adc
sbb
in
adc
shr
add
lods
fsubs
mov
out
shll
xchg
mov
xor
push
add
into
into
sub
loope
cmp
test
fisubrs
sub
aas
sbb
test
icebp
movb
mov
sbb
mov
push
xor
adc
mov
js
es
ror
xchg
push
xor
xor
mov
pop
cmp
and
bound
jbe
sahf
push
mov
popa
das
pusha
imul
enter
pop
inc
dec
cld
mov
ja
mov
dec
inc
cmp
scas
outsb
fbld
call
call
sbb
mov
dec
in
aad
enter
in
push
add
dec
rolb
pop
arpl
xchg
sahf
jp
dec
sub
or
enter
fucom
push
stc
mov
adc
pop
mov
and
push
aaa
inc
add
add
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
and
jbe
imul
loope
pop
adc
pop
and
push
ja
outsl
xchg
cmp
mov
pop
in
push
mov
dec
sub
pop
xchg
test
xchg
ds
sbb
fisttpl
mov
lds
dec
add
int3
or
add
fistps
ljmp
pusha
pop
sbb
loopne
or
pushf
loope
push
dec
push
clc
xchg
stos
jno
outsl
and
inc
add
fucomp
xchg
mov
mov
dec
mov
inc
int
cmp
dec
les
pand
cmp
pop
testl
int
lea
push
jb
int3
fadds
stos
dec
std
or
cs
loopne
je
jp
xchg
pushf
outsl
lahf
dec
mov
jbe
in
dec
jle
dec
mov
mov
and
cli
xchg
call
mul
add
adc
or
mov
mov
aad
jp
iret
gs
cmc
fimuls
sbb
sub
pop
mov
sbb
cmp
fnstcw
in
xchg
push
out
and
aas
inc
and
xchg
popa
ret
call
or
jle
mov
fadds
sbb
lcall
or
push
into
sbb
xor
call
sbb
pop
mov
push
mov
cmpsl
mov
push
xor
push
sbb
sub
inc
sub
pushl
inc
adc
push
inc
inc
loop
cmp
mov
push
packsswb
pop
pop
or
mov
popf
cmp
mov
in
test
push
lods
jmp
or
jmp
add
test
jmp
and
in
popa
push
lret
xchg
adc
jle
mov
ljmp
in
mov
scas
ds
lods
mov
les
jl
inc
test
aam
mov
mov
ret
shll
in
into
sbb
push
fsubrl
aad
in
loop
cli
pushf
lret
sbb
bound
jae
lahf
push
lea
dec
mov
and
or
xchg
or
das
ds
xchg
lods
jb
inc
xlat
cwtl
lahf
fdivrl
and
pop
data16
sbb
sub
mov
fldcw
xor
sub
push
into
dec
inc
clc
lds
mov
pop
push
cmp
mov
sub
sub
sub
pop
push
xchg
pop
add
out
out
outsl
inc
or
data16
test
enter
clc
xchg
iret
push
sarl
mov
or
stos
sbbb
in
dec
mov
call
mov
lds
push
xchg
xchg
pop
fidivl
mov
xchg
jl
outsb
push
xor
pusha
dec
mov
cmc
xchg
push
into
sbb
in
cmp
pandn
std
mov
cmpsl
stc
shll
mov
cwtl
addr16
cmpsb
addr16
or
cs
pop
ret
sar
cmp
push
rcll
mov
or
test
out
inc
insl
sbb
lahf
call
cltd
dec
mov
clc
xor
int3
pusha
lods
pushf
mov
out
pop
jbe
cmpsl
bound
aas
mov
data16
fisttpll
or
loopne
int3
fs
mov
movsl
push
lock
inc
xorl
mov
mov
mov
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
in
sbb
add
adcl
add
pusha
scas
xchg
hlt
sbb
push
aam
mov
sub
out
bound
or
mov
lods
xor
adc
sbb
aad
outsl
mov
ss
cli
aam
lods
sub
enter
xchg
sti
sti
dec
std
sub
and
js
mov
jno
jecxz
push
push
dec
mov
adc
imul
and
ss
inc
xchg
fs
push
in
scas
sbb
xchg
movsb
dec
push
dec
pop
cmp
js
out
out
mov
jg
jno
int
fdivrl
dec
pop
loope
add
cli
mov
adc
insl
rorb
jnp
std
test
cmp
mov
js
es
lds
loop
xor
push
push
mov
inc
sbb
sbb
cmp
sbb
dec
push
dec
or
inc
adcb
cltd
pop
push
push
dec
jecxz
mov
push
dec
xchg
adc
adc
jb
fdivs
or
int3
in
arpl
sbb
pop
aas
inc
popf
inc
int3
and
and
stos
dec
das
fwait
outsl
pop
dec
mov
mov
adc
xchg
adc
out
cmp
es
mov
push
daa
ja
clc
fstpt
dec
xor
pushl
fidivrl
aad
outsl
jo
bound
ds
aaa
jo
outsb
cmp
xchg
fiadds
daa
mov
xchg
mov
add
loopne
and
hlt
xchg
stos
sbb
adc
fidivrl
test
jl
fisubl
push
nop
mov
fdivs
in
fmull
sub
adcb
divl
jo
cmpsb
repz
in
jo
add
test
mov
enter
or
imul
fildll
add
cmp
lcall
xchg
lock
shll
inc
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
jp
adc
adc
jle
add
inc
cmp
xchg
enter
outsb
mov
fcomps
addr16
xor
das
mov
cmp
inc
insb
cwtl
es
stos
xchg
enter
push
pushf
out
rclb
test
xor
outsl
mov
aam
add
mov
leave
stos
pushf
mov
dec
adc
enter
lret
mov
push
mov
mov
out
rolb
jle
xchg
jl
sbb
xchg
das
popa
cli
or
push
ja
js
add
orl
inc
cmp
stos
jge
popf
shlb
xchg
xor
adc
and
test
repnz
mov
mov
fsubp
int
xor
adc
push
lahf
loop
or
rorb
xchg
mov
popf
dec
out
bound
jno
sbb
sub
pop
mov
or
cmpsl
pop
fdivs
pusha
sub
add
or
stos
xchg
cwtl
pop
enter
jmp
shlb
jl
mov
or
mov
mov
xor
sbb
pop
pop
jge
jl
adc
fwait
add
mov
outsb
jae
cmpsl
mov
imul
and
in
mov
lods
adc
inc
push
dec
or
and
ss
lock
push
xchg
cmp
ds
dec
pop
int
xor
push
and
outsl
push
pusha
xchg
out
mov
int3
and
and
rolb
mov
mov
push
push
mov
push
push
cmp
fwait
or
jmp
push
or
movsb
mov
sahf
aad
adc
adc
add
sahf
push
pop
aas
cmp
nop
push
add
sbb
hlt
mov
inc
inc
sub
or
mov
pop
mov
pop
test
cwtl
push
inc
push
icebp
inc
aaa
loope
test
or
in
sahf
sbb
mov
out
out
cmp
push
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
es
and
jle
add
fwait
adc
in
cmp
push
sbb
lcall
movsl
stos
jp
and
jnp
stc
gs
test
leave
pusha
testl
adc
fwait
cmpsl
adc
jle
ss
jns
int3
mov
jno
jo
lahf
inc
aaa
xchg
test
das
aad
push
fdiv
mov
jo
pop
cmpsl
subb
arpl
pushf
cmp
add
add
sbb
shr
gs
mov
push
pop
arpl
loop
rclb
fs
pop
jg
and
add
inc
loopne
jecxz
xchg
cmp
test
mov
loop
dec
or
push
mov
mov
mov
ficoml
fnstsw
mov
xor
sbb
lds
scas
xor
jae
jl
and
push
cwtl
imul
dec
and
pop
inc
xchg
scas
cmp
cmp
mov
add
push
xor
pop
xor
aas
es
sahf
lods
arpl
sti
outsl
aas
loope
push
add
mov
repz
in
sti
stos
in
lahf
pushf
cmpsb
das
lods
dec
mov
shlb
into
xor
jmp
rcrb
ljmp
inc
into
mov
frstor
decl
out
testl
rcrb
jbe
outsb
fcompl
popf
jne
fistps
or
fidivrl
fwait
cmp
xchg
mov
push
add
pop
jb
lret
mov
aad
xchg
jmp
enter
mov
clc
and
pop
mov
je
mov
push
ret
inc
pop
stos
or
mov
push
sbb
scas
dec
pushf
lret
add
cmp
push
and
or
add
cmp
xor
roll
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
pop
aam
pop
sub
jle
add
adc
or
push
and
aas
test
jmp
fwait
repz
in
mov
jne
push
xchg
ja
jl
mov
and
inc
push
pop
dec
outsb
push
and
push
iret
test
mov
bound
inc
lock
inc
out
cmp
xchg
int
sbb
xchg
negl
mov
add
adc
out
xchg
adc
xor
pushf
arpl
imul
inc
add
icebp
in
inc
loop
outsl
xchg
cmpsb
pop
cmp
es
add
mov
xchg
inc
fwait
in
mov
out
out
cwtl
aas
mov
add
cmpsl
mov
push
inc
rcll
loop
ds
lods
pop
lret
jmp
test
fildl
xor
mov
inc
mov
test
jnp
inc
cmpsb
filds
mov
mov
test
movsb
push
hlt
adc
push
clc
leave
in
sti
outsl
fs
js
mov
mov
sub
xchg
push
mov
sarl
cmc
xor
out
cmpsb
movsb
dec
pop
flds
cmpl
test
sahf
mov
jp
repz
pop
out
cmp
mov
lret
cmp
xor
sarl
ljmp
adc
scas
inc
push
jo
repz
rcr
sbb
pushf
adc
int
mov
mov
dec
cli
daa
sbb
xchg
xchg
iret
inc
fcomi
pop
push
div
mov
enter
mov
pop
out
jbe
sbb
lods
stc
scas
ja
add
dec
mov
loopne
je
cmp
jbe
fimull
xchg
int3
enter
jmp
leave
mov
sbb
cmp
hlt
dec
imul
leave
not
rcrl
xchg
jl,pn
mov
cmp
fdivl
adcl
mov
mov
shlb
fiadds
inc
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
ret
jle
and
jle
mov
addr16
in
mov
lahf
mov
dec
cmpsl
mov
loop
das
stc
sar
push
mov
enter
fidivrl
les
pop
jno
mov
cld
xchg
lret
data16
sub
adc
psrad
mov
sbb
xchg
jb
mov
rorb
outsb
inc
xor
inc
aaa
xchg
or
in
cmpsb
stc
cmpsl
jle
rorl
adc
inc
cmc
fwait
xchg
testb
loope
add
push
mov
mov
mov
adc
dec
dec
mov
aaa
adc
dec
pop
lods
inc
xor
out
dec
popa
test
out
push
movsl
ret
lret
xor
lahf
mov
sbb
push
sete
imul
xchg
or
cmp
bound
loopne
or
pop
push
push
addr16
mov
and
add
pop
fxch
mov
ja
loop
pop
adc
mov
mov
adc
push
mov
into
ficoml
pop
hlt
push
xor
cmpsb
pop
mov
dec
cmpsl
out
std
add
pop
ds
mov
mov
mov
sbb
pop
mov
lds
int
ljmp
sub
mov
xor
or
mov
mov
loop
addb
lret
gs
add
paddsb
loope
testb
mov
sbb
out
jl
jp
dec
fnsave
in
movsl
aaa
dec
iret
in
shrl
in
movl
fs
and
sahf
jb
add
pop
jmp
lock
ja
testb
jno
cwtl
inc
cwtl
lds
lock
in
push
add
add
or
test
rorb
pop
filds
push
dec
mov
scas
lcall
test
iret
out
pop
imul
repnz
add
shr
int
mov
dec
jle
or
imul
aaa
inc
add
add
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
push
enter
jl
jle
inc
jecxz
or
div
jecxz
mov
xor
cmp
sti
test
mov
ret
add
cli
es
jle
and
pop
insb
xchg
hlt
cmpsb
jmp
dec
cmp
sub
mov
pop
aas
push
jmp
fnstcw
outsb
mov
test
xor
scas
mov
fs
ret
or
xor
jns
addb
cli
mov
add
push
mov
lcall
in
sbb
push
mov
sbbl
xchg
add
sahf
imul
gs
push
xlat
int
aam
aam
inc
fwait
mov
jg
push
ret
dec
sbb
mov
clc
call
sbb
xor
out
clc
xor
jmp
mov
mov
and
mov
pop
mov
test
or
mov
into
test
and
pop
push
dec
movsb
adc
cld
mov
or
cmp
jle
lods
sbb
sub
or
addr16
cltd
jnp
xor
xchg
and
ret
push
pop
xchg
pop
mov
imul
add
out
inc
aaa
dec
cmpsl
push
arpl
std
pop
adcb
call
mov
inc
dec
cltd
lods
dec
test
and
or
aam
sub
xchg
ljmp
or
out
negl
mov
aaa
icebp
add
lahf
sahf
in
adc
shlb
mov
fcoms
xor
sub
cmp
fidivl
sbb
sub
and
fisttps
int
in
sarb
test
dec
cmp
xor
mov
lods
mov
mov
and
inc
or
inc
daa
and
sub
aad
xchg
insl
fisubl
loop
clc
push
movsl
push
in
aam
jmp
mov
sub
lock
xor
sub
jge
pop
jmp
push
sbb
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
loope
jle
and
jle
sub
sbb
mov
push
movsl
pop
sbbb
cli
jge
sbb
cli
dec
enter
cmpsl
lods
ljmp
jo
shll
decl
sar
mov
sbb
or
repnz
clc
jg
xchg
mov
std
add
mov
push
push
push
push
and
repnz
inc
inc
leave
jg
or
xor
out
out
ljmp
imul
add
aas
fstl
xor
xchg
imul
mov
sub
pop
mov
inc
insl
stos
push
push
imul
xor
mov
lcall
shll
or
jns
and
add
out
ret
aad
pop
inc
nop
mov
fdivrl
push
xor
lods
ljmp
sahf
and
ret
leave
pop
enter
xchg
mov
mov
pop
adc
inc
out
mov
rcll
dec
mov
pusha
sub
mov
das
aaa
jl
popa
mov
jae
or
in
repz
lods
mov
xchg
cs
push
dec
jns
push
repnz
data16
xchg
sbb
cwtl
sub
insl
dec
movsl
inc
xor
ja
fiadds
lcall
shrl
leave
push
stc
in
in
sbb
inc
ljmp
lock
xor
insb
jg
mov
int
hlt
xor
ret
sbb
sbb
and
mov
adc
mov
cmp
test
mov
inc
outsb
test
repz
lods
popa
addr16
loopne
fdivs
mov
lahf
lahf
movsl
rcll
push
jbe
push
bound
aaa
pop
popf
pop
xchg
dec
cmpsl
mov
lret
out
incb
nop
and
jnp
mov
repz
push
dec
movb
mov
sbbl
jmp
adc
bound
pop
movsl
adc
mov
push
cltd
or
aaa
inc
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
and
and
jle
push
inc
or
add
mov
mov
mov
bound
dec
cs
xchg
out
and
pop
sub
mov
fnstenv
add
push
std
cmpsl
mov
push
cmp
add
out
mov
mov
pop
cli
clc
ljmp
adc
xor
inc
popf
mov
jp
sbb
gs
std
or
test
cmp
dec
ret
sahf
xchg
jg
popf
xchg
ja
mov
inc
dec
sahf
push
dec
jae
dec
xor
or
push
addl
pop
lock
mov
fidivs
stc
adc
imulb
jbe
add
in
lea
mov
sbb
cmc
std
inc
dec
mov
ss
bound
pop
std
es
bound
aas
jns
mov
cmpsb
or
mov
jne
pop
movsb
cmc
xor
loope
aam
jmp
push
jnp
mov
lret
inc
mov
sub
test
outsb
xchg
lahf
aam
lret
scas
xchg
out
push
data16
add
test
stos
or
outsl
jecxz
fimuls
dec
ret
adcl
cmp
lret
lret
push
in
cmp
mov
das
xlat
sub
sbb
pop
jns
in
jg
cmpsl
jle
sbb
call
test
in
pop
dec
jl
pop
lock
shrl
mov
sub
xchg
js
push
rol
jle
aad
rcl
in
dec
in
jg
mov
or
inc
xor
xchg
call
dec
jl
cmp
mov
test
dec
mov
mov
mov
sbb
ror
jbe
lds
pop
jl
sub
lock
inc
pop
insb
popa
and
test
mov
jbe
es
or
jmp
cmpsl
clc
and
adc
ds
fbstp
test
fsubl
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
or
jle
jl
jle
xor
and
add
adc
js
dec
add
scas
and
add
pop
ret
lea
lock
leave
add
imul
sub
inc
in
xor
or
inc
add
test
mov
rcr
mov
sbb
jo
ret
lds
dec
mov
mov
cwtl
or
and
cmp
push
dec
xor
outsb
addr16
sub
rolb
ljmp
imul
mov
icebp
leave
dec
sub
rcrb
imul
sub
mov
out
jmp
fiaddl
ficoms
dec
push
jo
push
lea
pusha
mov
sub
popf
fnstcw
loop
std
mov
in
insl
sbb
icebp
shll
xor
popa
jmp
dec
aad
lods
ss
add
mov
inc
dec
jecxz
andl
cmp
jb
testb
adc
je
pop
int
push
pop
js
test
xor
jbe
mov
jg
mov
adc
inc
xor
dec
das
sub
mov
or
test
fmuls
and
and
mov
enter
ficoml
mov
mov
push
sub
xchg
mov
maskmovq
testl
aas
dec
test
sub
fldcw
jb
repz
xchg
movsl
imul
jmp
mov
cmp
repnz
repnz
shlb
js
ljmp
mov
sbb
inc
push
sub
push
sub
imul
mov
inc
insb
filds
sub
sbb
add
repz
pusha
cld
push
into
sahf
stos
sbb
mov
mov
mov
jns
sub
loopne
mov
jns
std
das
test
out
addr16
mov
sbb
inc
jl
or
xchg
and
and
sub
repnz
mov
pusha
adc
jecxz
jl
dec
sahf
adc
jg
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
sub
cmc
xchg
sti
push
ljmp
xor
pop
cmp
int3
fisttpll
sti
lcall
pop
sub
daa
push
pop
dec
lcall
dec
cmp
insb
neg
stos
inc
pop
pop
or
stc
outsb
or
scas
jl
xlat
loop
in
out
in
lret
dec
xchg
cltd
lea
inc
sar
add
push
aad
and
mov
enter
xchg
mov
jle
add
push
adc
mov
jmp
andb
js
sbb
insb
inc
jmp
push
ss
cmp
test
jg
lret
adc
pop
ficoml
stos
rol
sub
xchg
xor
or
xchg
push
int
fs
addb
sub
xor
jmp
aas
into
outsl
in
stos
mov
adc
lea
int3
jp
adc
adc
dec
dec
lock
stc
push
mov
adc
pop
adc
xor
fiadds
sahf
or
and
call
push
sbb
and
ret
mov
es
cwtl
adc
mov
adc
mov
rclb
mov
in
lea
sub
push
popa
jno
add
dec
sub
jns
push
andl
cmp
outsb
push
cs
rol
push
xchg
fs
pushf
push
ja
ja
cltd
adc
arpl
dec
push
mov
loope
arpl
push
rolb
popa
lea
loopne
out
pop
and
xchg
shr
es
es
xchg
adc
andb
fwait
rolb
fnstcw
movsb
push
xorb
cwtl
adc
scas
outsl
lret
mov
add
fildll
mov
out
inc
mov
push
cld
test
cmp
jle
jo
daa
imul
lcall
mov
inc
test
shll
or
xchg
sahf
and
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
out
mov
fistpll
and
jle
mov
push
mov
push
cs
xchg
dec
xchg
mov
fsubrl
and
lcall
cmpsl
outsb
cs
push
push
les
mov
in
and
ljmp
xor
hlt
inc
or
notl
lahf
iret
or
pushf
cmpsb
push
or
xor
loop
insb
cmp
cli
and
dec
pop
sub
gs
loop
jge
jo
leave
shl
mov
push
push
rcl
aad
jg
add
movsl
sbb
int3
idivl
mov
xor
mov
jl
fwait
sarb
and
or
mov
in
repnz
sub
leave
scas
arpl
cmc
shrb
add
add
notl
add
dec
stc
pop
cmp
call
or
mov
pop
mov
in
pusha
inc
sub
cli
or
les
add
mov
mov
or
pop
into
sub
jle
add
sub
ds
in
jb
xchg
dec
pop
adc
mov
rcrb
stos
mov
adc
in
clc
leave
mov
fcomps
outsl
outsb
hlt
dec
jge
in
inc
out
pop
jge
sbb
sbb
mov
je
subb
sbb
or
cmp
add
mov
sub
mov
outsl
jl
sbb
jmp
das
push
ljmp
lods
mov
cli
jb
inc
and
push
xchg
lcall
lock
and
mov
xor
mov
pusha
push
sub
pop
lahf
cmp
inc
jl
or
push
mov
xchg
js
dec
jbe
fbld
popf
rolb
loopne
dec
rol
jbe
dec
push
push
in
js
dec
cmpb
notl
hlt
and
sahf
xchg
add
dec
jg
xor
jg
outsb
add
dec
jne
cmp
data16
jl
in
test
xchg
pandn
movsl
jle
repnz
mov
pushl
jmp
lods
mov
outsb
xorl
pop
lds
jle
and
jle
fidivl
dec
and
iret
mov
xchg
inc
or
add
sub
mov
nop
pop
mov
xor
mov
cmc
or
in
lds
in
push
movsl
stos
shll
in
shr
cltd
cmp
lret
stos
cltd
sub
inc
leave
in
inc
and
call
and
mov
fcoms
mov
cmc
xchg
inc
lret
mov
popa
cmpsb
xor
sub
xchg
je
mov
cmp
sahf
insl
and
sub
or
xadd
push
out
insl
cs
repz
sar
repnz
fwait
addr16
pushf
mov
sahf
jb
addr16
mov
out
js
mov
jae
add
popf
mov
mov
dec
out
int
cli
pop
in
nop
lea
inc
sub
jns
cmp
pop
cwtl
inc
or
cmp
stos
cwtl
ss
mov
xchg
xorl
sub
dec
dec
in
mov
cmpsl
in
pop
or
ja
push
nop
adcl
js
sahf
int3
xchg
das
mov
xchg
filds
mov
inc
inc
dec
dec
insl
outsb
lret
in
decb
rorl
pushf
jmp
add
cli
lret
inc
test
bound
dec
jecxz
mov
fucomi
cmp
in
ja
jno
ljmp
push
insb
in
adc
mov
mov
inc
lds
push
jbe
push
notl
xor
push
mov
fs
call
fs
adc
inc
inc
xchg
jne
lods
fdivp
dec
jl
and
add
gs
mov
rcll
cld
les
xchg
stc
mov
pop
lods
rcll
sbb
mov
xchg
hlt
and
and
movsl
insb
arpl
bound
add
lods
xchg
cwtl
lea
xor
xchg
ja
aam
push
and
in
outsb
es
adc
cmp
mov
andb
and
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
dec
ja
and
sub
rolb
fcom
int3
out
test
mov
in
rcll
sub
push
cli
insb
rcll
or
jnp
jb
push
mov
add
dec
xor
inc
push
lds
int
xor
dec
fiaddl
nop
fdivrs
imul
mov
dec
sub
xor
idivl
xchg
xor
mov
xlat
or
and
sbb
xchg
test
jp
pop
pop
lods
mov
call
push
test
fcomps
jns
xchg
pop
sbb
mov
movsl
mov
ljmp
aaa
pop
add
and
popf
lret
insl
cmc
pop
out
je
inc
gs
mov
stc
call
inc
add
mov
loop
mov
add
fsts
out
pop
lret
push
lret
xchg
scas
fidivrl
or
xchg
lods
or
rcrb
ja
dec
push
ja
pop
and
jno
fs
enter
cld
mov
shll
xor
adc
mov
xchg
outsl
sbb
add
ret
clc
pop
mov
lods
hlt
mov
dec
inc
hlt
push
outsl
cmpsl
cmp
adc
push
inc
fcoml
jmp
mov
insl
and
add
pop
or
clc
or
xchg
sti
cmpsb
mov
sub
xchg
iret
pop
cmpsl
imul
jo
popa
out
fld
pushf
in
movsl
mov
xchg
fwait
out
xchg
dec
adc
mov
dec
mov
pop
test
mov
mov
lds
ror
arpl
jmp
bound
mov
push
xor
or
add
cmpsl
leave
lret
mov
and
xor
sarl
fistpl
hlt
dec
mov
sarb
fmull
int3
inc
xor
hlt
mov
fiadds
test
xchg
cld
push
ret
mov
adc
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
jecxz
testl
mov
cmp
aaa
dec
push
addr16
jno
mov
xor
mov
in
call
push
lds
cmpsl
xchg
mov
lret
mov
fidivrl
jno
pop
sbb
xchg
xchg
push
push
dec
aad
mov
rcl
or
pop
sti
adc
sub
aaa
jb
mov
push
lods
jle
cmp
test
shlb
push
sub
mov
lods
aad
jecxz
lahf
push
loope
es
orl
std
cli
sub
sub
dec
jge
jle
aaa
xor
or
cmp
mov
cld
or
push
xor
lds
jp
out
mov
push
les
xor
scas
pop
sbb
add
sbb
mov
rcr
jnp
ds
es
daa
cmc
or
icebp
test
dec
mov
xor
cmp
push
inc
dec
ret
cmp
xchg
jb
inc
stos
lods
mov
dec
outsb
int
jmp
mov
jae
mov
mov
add
cwtl
push
add
das
mov
cmp
scas
sbb
adc
shlb
pop
nop
and
orl
clc
add
jo
sbb
mov
aas
and
and
ret
xchg
mov
daa
pop
jae
in
repz
lods
sub
adc
add
rcr
in
cmp
stos
xchg
xchg
jne
mov
test
mov
push
or
cmpb
mov
adc
js
ja
outsl
jp
and
dec
push
mov
flds
lock
add
xchg
gs
mov
cltd
mov
inc
sub
icebp
sub
cmp
push
sbb
add
jbe
jno
cmp
adc
fsubl
cmp
jecxz
ljmp
pop
push
mov
aas
fs
xchg
sub
ret
jp
mov
dec
test
xchg
mov
lahf
cmp
test
xchg
pop
stc
adc
push
adc
clc
sti
jmp
jp
xchg
loope
mov
push
sbbl
jmp
lds
popa
mov
fisttpll
mov
cmp
jge
loope,pn
cmp
sbbl
gs
or
je
cltd
add
loopne
push
xchg
cwtl
lds
scas
mov
jns
lcall
cli
pop
inc
jmp
jmp
jle
mov
pushf
adc
jg
std
lsl
jno
rorb
cwtl
xchg
daa
inc
dec
sbb
stos
enter
mov
mov
in
inc
dec
ljmp
dec
scas
aam
imul
jmp
jle
pop
aad
lret
mov
pop
test
adc
sbb
js
ljmp
xor
pop
jo
push
xor
sti
dec
mov
inc
mov
sbb
cmp
jp
test
add
test
jns
sub
push
cmp
fsubl
mov
mov
fmull
out
and
pushf
ret
jp
les
push
ds
in
push
les
popa
adc
iret
and
dec
adc
inc
mov
dec
mov
add
and
fistpll
push
lods
mov
imul
int3
leave
push
mov
stos
mov
mov
sub
cli
dec
mov
leave
mov
data16
add
fsts
mov
ljmp
insl
mov
push
mov
pop
shrl
lds
mov
xor
decb
or
out
push
xchg
rorb
jmp
inc
aaa
les
push
xchg
lcall
outsb
mov
jbe
sarl
and
adc
push
cli
lock
pop
dec
stc
jns
mov
pop
mov
daa
lea
xchg
pop
ret
jg
push
cmp
jno
pushf
mov
add
mov
and
inc
out
sub
out
lea
add
cmp
insl
movsl
xchg
loope
in
adc
in
aaa
pop
mov
inc
jbe
inc
ret
ret
insb
in
sbb
insl
or
cmp
pop
lods
rcll
cmp
xchg
lahf
jg
xor
xor
pop
test
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
mov
loop
jle
jl
jle
and
imul
mov
xchg
mov
jg
xchg
mov
push
fidivrl
xchg
fcmovnu
movsl
sub
neg
pop
outsl
popf
popf
push
mov
sbb
andb
popa
icebp
std
sub
xchg
fcompl
mov
xchg
leave
out
jmp
sbb
sbb
sbb
enter
cwtl
cmp
xchg
divl
insb
lds
push
pushf
adc
hlt
rorl
hlt
loopne
push
sbb
cmpsl
pushf
add
test
in
sub
jno
mov
stos
hlt
scas
push
std
int3
sub
push
sbb
mov
lods
dec
movsl
push
mov
jge
pushf
out
popa
gs
popa
jmp
pop
jne
lods
or
movsb
out
jne
call
adc
aaa
testl
je
jmp
lret
addr16
mov
adc
test
cli
insb
int
gs
push
dec
movl
ret
xchg
in
mov
cwtl
sarb
cltd
mov
jnp
push
mov
dec
shlb
xorb
cli
in
xchg
je
dec
dec
xchg
lods
mov
and
cmp
cltd
sti
adc
xlat
mov
shr
dec
pop
push
sub
push
popa
mov
outsb
sbb
sub
adc
leave
test
mov
xlat
cld
mov
inc
mov
pop
mov
arpl
das
cltd
movsb
inc
adc
inc
outsl
cmpsl
stos
es
xchg
orl
push
dec
stc
test
cmp
mov
xchg
cmp
xchg
stos
movsb
fistpll
mov
lea
dec
pop
cmc
xlat
adc
stos
xchg
mov
out
xchg
les
js
inc
add
sbb
jge
pop
jmp
pushl
xchg
movsl
lods
sbb
arpl
sub
loopne
jnp
add
lods
jb
fiaddl
xor
push
scas
fisubrs
sti
in
mov
jae
mov
sbb
cld
enter
les
ljmp
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
div
scas
push
and
jle
jl
jle
test
shlb
dec
leave
mov
scas
stos
adc
mov
xchg
addl
jg
cmp
insb
push
aaa
inc
mov
icebp
xor
pop
and
mov
repz
inc
fs
mov
imul
out
aam
fwait
sbb
pop
pop
xlat
mov
les
jne
jb,pt
out
mov
jge
mov
mov
loopne
rcrl
mov
adc
xor
ja
inc
loop
inc
out
adc
push
and
out
sub
jge
aaa
mov
xor
mov
pop
lods
fs
lods
dec
jb
and
loope
xchg
in
jle
test
and
flds
fstl
sbb
nop
pop
scas
jl
inc
pop
jg
fdivr
js
cmpsl
lea
mov
sub
mov
xor
adc
loope
ljmp
enter
stos
dec
ds
push
and
hlt
movsb
mov
sbb
shrl
insl
cmpsb
in
movsb
fsub
repz
add
mov
or
pop
icebp
fimull
jae
mov
leave
andl
dec
pop
sbb
aad
xor
push
push
or
test
dec
mulb
inc
xor
leave
jecxz
jb
fstl
hlt
xlat
scas
pusha
icebp
data16
mov
lret
aad
fiadds
and
xor
aad
jno
cli
dec
pushf
lret
cmpsl
adc
or
stos
adc
sub
stc
clc
jns
xor
sub
fbstp
fmull
dec
cwtl
arpl
outsl
scas
push
adc
mov
xchg
scas
daa
mov
sbb
and
push
arpl
xchg
jb
sbb
dec
push
jne
insb
push
adc
or
mov
fldt
mov
imul
ljmp
dec
aad
jae
xchg
jmp
nop
xor
sbb
adcb
sbb
jmp
add
int
in
lods
push
out
mov
leave
lret
cli
insb
dec
mov
aas
out
popa
shll
jnp
xchg
inc
dec
push
lods
ds
nop
xor
ja
xchg
cltd
outsl
jp
jl
cmp
sbb
call
sti
ss
add
add
add
push
add
add
shlb
sti
ss
add
sti
ss
add
add
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
pop
sbbl
jle
sbb
shrb
sbb
add
inc
push
js
dec
movsb
insl
pushf
repz
jno
inc
and
jne
sub
mull
mull
fistpl
push
jecxz
lcall
adc
jge
sub
mov
iret
imul
lods
inc
loope
add
nop
std
or
pop
mov
jp
jnp
add
mov
sbb
xchg
int
pop
adc
mov
cmpsl
mov
fisttpll
cmpsl
xchg
pop
leave
push
adc
pop
scas
xchg
shl
mov
bound
pop
jle
mov
push
push
dec
enter
cwtl
mov
mov
lods
leave
movsl
fisubs
push
insb
cmp
xorb
lds
pushf
jns
movsb
or
pop
and
and
cwtl
mov
xlat
jne
pop
push
mov
pop
cmpsl
outsb
daa
dec
popa
mov
inc
sarb
aad
in
pop
lcall
mov
inc
scas
ret
and
aad
movsl
in
pop
rcrb
stos
xlat
jb
dec
cmp
lods
dec
mov
jnp
fldenv
mov
cmc
jmp
inc
cli
cmc
sbb
repz
sub
sti
sub
push
lock
jge
mov
sahf
out
fnstenv
mov
jns
pop
test
daa
pop
mov
add
jge
mov
jae
dec
movsl
int
adc
hlt
in
in
lahf
sub
mov
pop
movsb
adc
sahf
imul
pop
adc
and
cmp
jae
pop
or
daa
xorl
mov
dec
dec
xchg
jne
xchg
mov
jmp
pop
inc
mov
adc
jne
jae
push
pop
pop
or
iret
mov
mov
adc
jecxz
lods
imul
out
fimull
out
add
repnz
mov
xchg
mov
pop
xchg
xchg
sbb
push
jne
mov
sarb
push
inc
roll
inc
pusha
sub
enter
push
in
das
lahf
mov
xor
jecxz
add
add
test
add
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
out
push
in
jle
cmp
jo
push
pushf
or
ds
lock
daa
andb
xor
pop
pop
and
ja
mov
lods
or
pop
sub
pushf
incb
lcall
xchg
mov
mov
pop
or
mov
daa
xor
lock
and
mov
gs
pop
mov
rclb
lahf
mov
adc
jg
mov
push
xor
hlt
mov
ds
sub
jns
mov
pop
nop
into
fisttps
fwait
and
dec
movsb
mov
cmp
xchg
mov
fists
cltd
mov
add
shrb
clc
stos
push
xchg
decb
mov
popf
pop
into
push
jp
dec
das
or
stos
jl
xchg
fistl
test
cli
add
imul
test
jae
mov
push
int3
xchg
inc
and
aaa
in
leave
in
xchg
out
cli
jp
pop
xlat
dec
jo
lcall
sub
xchg
push
ds
jge
xor
mov
cmp
js
jae
popa
mov
jmp
cmp
sahf
sbb
dec
pop
lret
jbe
dec
xchg
inc
xor
out
sbb
je
mull
add
or
dec
mov
lret
add
pop
or
popf
dec
adc
negl
mov
ljmp
ja
orl
dec
sbb
rclb
inc
sub
push
sbb
cmp
mov
mov
cmp
data16
adc
gs
cld
test
inc
lahf
jg
add
mov
pop
sub
mov
fs
sbb
jle
push
mov
ret
cmc
fdivrl
pop
lcall
iret
inc
pop
sub
js
in
fsubl
shlb
pop
jg
lcall
js
lods
mov
movsl
jmp
or
enter
jmp
push
pop
sub
stc
adc
xchg
mov
mov
xchg
mov
std
out
cmc
mov
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
scas
mov
jle
cmp
lret
sbb
jp
outsb
inc
dec
fwait
mov
mov
sub
push
mov
xchg
inc
add
inc
ret
je
pop
xchg
push
sub
jae
sti
mov
mov
mov
push
push
mov
inc
sbb
xchg
loope
mov
maxps
pop
mov
pusha
shrl
or
dec
pop
imul
xchg
jo
xchg
pushf
divl
cmpsl
xchg
push
pop
pop
popa
sbb
jmp
and
mov
mov
pop
outsl
mov
jp
call
cltd
sub
xchg
jne
xor
xor
repnz
les
mov
scas
xchg
in
out
dec
adc
movsb
dec
cli
sbbb
shrl
mov
stos
mov
sub
out
ret
jl
adc
xchg
adc
cmp
mov
test
out
aam
sbb
movsl
fdivrs
out
mov
push
adc
jnp
scas
jle
mov
bound
xor
xor
or
test
out
xor
cmp
push
xchg
jp
pop
scas
sbb
mov
sbb
xchg
cltd
sbb
inc
adc
stc
inc
lock
in
aaa
int3
pop
add
roll
loop
or
or
sti
lcall
lea
mov
cmp
stc
mov
or
shld
jmp
pop
pop
cld
adc
mov
lock
loopne
loope
pusha
fcmovnu
xchg
cmp
fsts
or
or
mov
and
stc
sahf
xchg
add
mov
or
adc
push
test
fidivs
xchg
inc
addr16
sbb
mov
inc
jo
imul
and
dec
jl
push
mov
ja
ret
sub
mov
and
pusha
packssdw
mov
dec
rcl
and
inc
mov
jo
les
adc
pop
outsl
push
sti
or
loopne
mov
xchg
test
sti
cmp
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
and
xchg
adc
jno
mov
fdivrs
fwait
xchg
sbb
in
mov
testl
fisttpl
fs
icebp
popf
pop
push
sbb
lds
inc
ja
and
lea
sub
hlt
js
dec
mov
das
push
pop
mov
dec
push
mov
rcl
sub
sub
pusha
push
push
mov
shrb
out
inc
jnp
jns
dec
inc
divb
xchg
iret
je
pop
mov
mov
fneni(8087
xor
cmpsl
sub
jno
lahf
jno
jnp
inc
inc
xlat
sbb
mov
sbb
xchg
add
push
sub
pop
jo
in
or
xor
cli
pop
nop
notb
push
mov
movsl
xor
or
enter
movsb
or
sub
and
les
sti
xor
pop
lret
jmp
inc
addr16
dec
arpl
xor
add
pop
xchg
cli
lea
push
pop
out
mov
fldcw
stos
dec
jbe
lret
loopne
movsl
out
fistpl
and
lcall
lods
cmpl
xchg
call
inc
in
mov
ljmp
or
cwtl
adc
inc
in
ds
pop
flds
mov
in
push
sbb
jg
stc
inc
mov
mov
add
and
push
outsb
mov
aad
ljmp
mov
sbb
push
out
or
jne
push
adc
adc
fidivl
leave
fidivrs
iret
xchg
sbb
les
or
jp
scas
xor
add
call
rclb
adcl
mov
shl
lahf
pop
add
add
add
pop
pop
adc
mov
es
pusha
adc
xchg
lahf
pop
adcb
sbb
repnz
addr16
xchg
mov
arpl
sarl
fs
jl
shlb
adc
add
adc
movsb
imul
inc
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
sbbb
jle
jl
jle
sub
bound
ljmp
cmc
xchg
fildll
push
std
inc
push
fcmovu
ss
test
add
cmpsb
and
scas
rcl
iret
test
or
lea
jae
movsb
ja
cld
das
inc
sub
and
mov
xor
push
push
push
das
lret
mov
bound
jge
ljmp
sbb
test
test
fstl
outsl
jg
scas
and
and
pop
gs
negb
push
mov
int
add
jae
mov
mov
arpl
adc
sar
adc
sbb
pop
inc
leave
aad
mov
push
pop
mov
push
pushf
inc
sbb
push
cs
sahf
cmp
gs
add
ja
dec
push
int3
push
addr16
iret
nop
push
repnz
jnp
shlb
fistpll
test
movq
aam
dec
cmpsb
sub
mov
std
sub
test
sub
fists
push
push
into
jne
sbb
mov
rdtsc
aam
and
dec
shll
clc
dec
jle
push
hlt
fldt
add
jae
das
imulb
sub
mov
outsb
outsl
iret
push
xchg
cmp
lret
gs
xor
sbb
push
das
gs
mov
inc
push
outsl
cs
insb
pop
xor
xor
loop
dec
test
stc
mov
lret
push
es
fwait
sti
or
leave
out
mov
aam
sbb
idivl
push
imul
jae
lea
test
and
adc
and
jb
insb
test
imul
cmp
gs
test
xlat
add
push
outsl
sub
mov
ds
xchg
fnstsw
cmp
cmp
add
inc
popf
jl
loop
mov
pop
repnz
sbb
pop
sbb
cmp
cli
xchg
push
xor
scas
subb
dec
xor
icebp
int
mov
nop
in
push
sub
mov
mov
aam
aaa
popf
xchg
bswap
repnz
repz
inc
fimull
mov
dec
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
and
bnd
cmp
out
mov
inc
jmp
imul
sub
sub
pop
xchg
pushf
negl
jge
or
pop
aas
or
out
dec
push
xor
cltd
dec
push
daa
addl
mov
add
cmp
call
or
mov
test
adc
jg
in
pop
sbb
mov
popf
popf
cld
mov
sub
and
lock
pop
mov
inc
push
pop
sarl
mov
jle
jb
in
stc
add
sub
ret
push
pop
sub
int3
add
adc
jge
fstps
sbb
andb
fcmovnb
mov
cmc
gs
mov
sbb
aam
lods
lods
mov
mov
leave
test
lds
pop
test
scas
dec
sub
aas
cmpsb
mov
shlb
adc
lahf
jne
inc
push
sbb
jl
xor
push
jge
mov
xchg
xor
cmc
xchg
xor
mov
fstps
jbe
loope
orb
das
jne
or
or
mov
in
ja
jle
sub
jp
shll
das
inc
int3
jnp
cmpsb
and
iret
jg
movsl
jmp
mov
mov
cli
mov
dec
out
add
ljmp
out
lahf
nop
int3
mov
out
mov
insb
test
dec
xabort
dec
inc
inc
and
nop
jg
mov
push
int
int
xor
jge
das
cmp
pusha
add
inc
aad
inc
mov
stc
or
rorb
movl
mov
xchg
test
imul
add
ds
mov
hlt
adc
dec
andl
fcomps
adc
lret
sub
test
js
test
fidivrs
iret
pop
jl
jg
es
stc
dec
lret
int
das
test
push
mov
cmp
out
repnz
stos
out
cmpl
push
insl
push
dec
nop
or
add
add
filds
inc
daa
add
roll
cmp
dec
push
push
icebp
and
orb
jbe
dec
aam
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
pop
mov
jle
cmp
jae
rcll
push
test
and
push
scas
mov
lock
jecxz
push
adc
ds
shl
mov
lds
and
lods
in
arpl
cwtl
mov
jl
in
loop
outsb
adc
push
shlb
xor
jns
daa
cltd
notb
nop
sti
std
dec
stos
push
xchg
enter
test
test
sarb
notl
stos
or
ljmp
cmpl
push
insb
sbb
mov
loope
inc
enter
ret
fwait
add
jnp
pop
std
jecxz
ljmp
jne,pt
adc
dec
idivl
jns
ficompl
loop
pop
sarl
pop
push
loopne
adc
pop
aad
dec
ss
xchg
inc
cmpsb
mov
test
addr16
imul
cmpsb
sti
or
mov
xchg
push
mov
push
call
push
pop
xchg
dec
xlat
sahf
vfrczpd
aam
dec
inc
ss
push
or
fcmovne
and
insb
mov
xchg
aam
sub
out
in
cmpb
cmpsl
xchg
repz
leave
mov
cmp
inc
in
xchg
inc
dec
and
cli
test
pop
jne
add
sub
adcb
sti
stc
dec
sbb
dec
push
js
cmpsb
pop
out
mov
sub
cmp
ret
push
pop
xor
out
sbb
inc
daa
sub
or
push
and
nop
scas
push
inc
arpl
adc
push
mov
and
push
pop
inc
dec
cmc
inc
mov
xor
lock
and
mov
fldl
fadd
push
cmc
mov
xor
xor
inc
std
leave
mov
jle
cli
fistl
mull
xor
or
int3
into
fs
xchg
sahf
stos
mov
lods
push
pop
mov
push
lea
je
lock
sbb
loop
cmp
mov
cmp
mov
mov
or
test
push
pushf
shl
dec
into
push
jge
leave
lret
xlat
imul
icebp
iret
sbb
rclb
jmp
pop
mov
mov
jne
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
xlat
mov
mov
jle
cmp
imull
lock
arpl
cmpsb
mov
scas
dec
gs
stos
sarl
xor
das
fs
mov
mov
ror
cmp
adc
xchg
cmp
jne
bound
loope
repnz
dec
in
adc
push
stos
mov
jle
and
cmp
mov
ja
xor
lds
xor
jmp
sar
in
addb
cmp
int
xchg
add
add
orl
or
icebp
mov
setae
mov
cmpsl
sub
loope
cmp
pushl
sub
in
loop
scas
xchg
jge
int3
cmp
pop
push
pop
mov
aad
ret
cmpsb
add
mov
cwtl
mov
lahf
bound
push
test
cltd
pushf
fst
cmp
das
pop
jecxz
sbbb
call
jb
inc
call
clc
stos
out
adc
cmpsb
or
addl
jo
lahf
sub
popf
enter
aaa
and
in
mov
jb
mov
adc
das
xchg
dec
xor
orb
scas
mov
test
fisubl
mov
and
or
js
and
insl
sub
iret
sub
fidivrs
out
jns
cvtpi2ps
loope
clc
sub
loope
cmp
sbb
xchg
insb
sbb
mov
mov
add
mov
ss
jne
adc
xchg
aad
sti
cs
call
sub
out
mov
cli
mov
les
je
sti
mov
mov
add
shlb
insb
sub
mov
enter
mov
or
mov
mov
mov
jg
inc
adc
or
sub
adc
inc
jns
sbb
data16
jp
ljmp
and
dec
jmp
mov
dec
sarl
jle
push
hlt
and
enter
in
xchg
jnp
push
cmp
repz
repnz
xor
into
outsb
insb
push
sub
and
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
add
jle
jl
jle
fcoml
subb
movsb
je
test
test
ja
xchg
mov
add
les
out
jmp
mov
inc
xchg
xor
fiaddl
stos
mov
imul
jl
push
push
mov
or
out
pop
pop
addr16
sbb
cs
inc
in
bound
sbb
stos
les
out
sub
push
and
adc
dec
mov
pop
out
sub
push
pushf
mov
xchg
push
fwait
repnz
mov
xchg
dec
fdivr
movl
push
rcrl
scas
sbb
ss
mov
sbb
out
pop
rorl
jae
les
sbb
cmovae
imul
xchg
xchg
mov
ljmp
cmc
jne
cltd
mov
inc
xchg
jg
pop
or
test
or
push
fisttps
stc
jp
cmp
push
ud2
loop
pop
pop
test
adc
mov
sub
adc
xor
addb
lds
mov
aam
sub
xchg
subl
orl
inc
sub
mov
jbe
out
push
lahf
cmp
mov
js
fnstcw
push
push
pop
xchg
inc
sbb
inc
push
fwait
or
jp
in
adc
jne
outsl
dec
les
fdivrs
test
push
add
push
xchg
cmp
pop
pop
addr16
jmp
into
loope
sahf
mov
jnp
orl
ljmpw
jbe
xchg
mov
dec
cli
push
stos
adc
scas
in
jbe
xor
xor
call
adc
add
popf
or
push
dec
inc
jbe
adc
repnz
shlb
ljmp
jae
cmp
cmovb
jno
cmp
in
insb
lcall
js
popf
push
add
clts
int
xchg
fistl
rol
scas
ss
imul
insb
inc
or
pop
nop
or
jb
call
mov
push
rorb
testl
mov
mov
adc
rorl
add
dec
cmc
adc
fbstp
in
fcmovnu
jno
jp
sbb
cmp
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
bound
mov
jle
jl
jle
jge
inc
or
cmp
push
jne
push
shrb
test
jecxz
insl
imul
sbb
nop
mov
sbb
mov
adc
pop
je
sub
ljmp
mov
cmp
pop
or
pusha
movsl
mov
enter
adc
daa
imul
xchg
pop
lods
test
inc
movb
sahf
fwait
cld
sbb
cld
jae
xor
das
js
lock
loop
push
negl
mov
fnstcw
jecxz
nop
lock
or
adc
xor
inc
mov
and
and
mov
dec
mov
lret
mov
sub
adc
sarl
jo
in
jnp
and
inc
dec
pop
jle
push
mov
sbb
es
int3
data16
gs
nop
movb
scas
mov
pop
fsubrp
mov
jns
aam
pusha
leave
clc
repnz
mov
repz
add
mov
jle
pop
cltd
out
lahf
cld
movsb
pushf
ret
mov
dec
mov
push
push
mov
mov
sub
xor
insb
lret
pusha
mov
jns
in
sbb
gs
leave
nop
fistpll
insl
mov
push
adc
outsl
pop
cmpsl
repz
dec
push
mov
mov
cs
jo
sbb
jge
jg
pop
cmp
xor
push
sub
das
lea
addb
xchg
cmpb
enter
jns
xor
mov
mov
sbb
jae
sub
cmp
movsb
in
pop
mov
and
jnp
push
loope
mov
arpl
rcrb
sti
addb
inc
mov
or
imul
adc
adc
adc
sbbb
mov
mov
stos
dec
sub
lret
mov
loope
sbb
sbb
test
and
push
jge
xchg
adc
sub
sbb
shrl
cli
lea
aas
mov
sti
scas
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
adc
jl
jle
loopne
push
ja
popa
and
xchg
leave
setg
shrl
das
aam
push
mov
lret
andb
es
mov
jle
push
aaa
leave
xchg
cltd
rcrb
shl
mov
xchg
sub
shll
scas
mov
push
and
fidivl
mov
push
mov
cmp
sbb
in
cli
jmp
stos
daa
push
add
xchg
std
jle
mov
pop
sbb
sub
pop
leave
pop
xchg
sub
call
jg
clc
bound
rclb
pop
cmp
imull
in
add
sbb
jbe
bound
fsubs
call
jbe
rclb
outsb
xchg
inc
aaa
bound
push
pop
push
push
stos
std
cmc
mov
mov
lods
fadd
pop
xor
stos
mov
cs
inc
xchg
xor
jno
dec
es
xor
or
les
mov
rol
dec
mov
mov
mov
push
sbb
mov
inc
mov
std
shl
push
pop
jno
cld
fwait
or
fisubl
ds
and
pop
test
jg
sub
dec
shll
das
mov
xchg
mov
cmp
mov
std
test
and
fs
fistps
sub
mov
les
or
adc
push
sbb
dec
movsb
sbb
das
mov
ljmp
insb
das
shrd
test
mov
std
fldt
lcall
ret
into
les
lea
mov
or
and
or
pop
and
sbb
push
adc
mov
je
movsl
mov
in
mov
movsl
les
pop
push
mov
xchg
add
push
lods
cld
rcrl
pop
aas
mov
fidivrs
xchg
xchg
in
mov
or
test
repnz
xor
ret
ret
pop
mov
aam
ja
call
scas
or
ret
adc
xor
push
mov
xchg
lret
ret
test
pop
movsb
in
sub
inc
in
scas
shrl
mov
jmp
dec
loop
lds
push
jo
mov
sub
push
outsl
decb
jle
cmp
sbb
pop
leave
jo
and
adc
sti
aaa
sahf
fbld
aam
inc
sub
adc
sub
lds
sub
popa
insb
imul
ss
popa
cmp
mov
xor
jmp
test
and
cld
ds
adc
cmp
scas
iret
dec
in
push
pop
sub
lahf
dec
cmp
cwtl
dec
bound
push
in
pop
or
jl
xor
jge
mov
pop
jecxz
sbb
sub
bound
loope
outsb
xchg
sbbb
pusha
push
pop
push
jne
adc
adc
jp
test
fildll
fwait
pop
mov
filds
mov
dec
dec
lods
pop
cmp
arpl
loope
and
lods
mov
jmp
addr16
jecxz
add
addr16
es
jmp
jns
lock
push
push
push
fld
adc
jle
mov
xchg
ja
das
or
dec
fs
push
cmp
sbb
or
in
cmp
add
fsubp
gs
dec
xchg
inc
dec
pop
loop
fs
pop
scas
xor
inc
and
and
or
cs
lcall
pop
test
call
jle
jl
mov
pcmpeqd
xchg
test
jns
mov
leave
or
or
popf
mov
inc
dec
add
scas
fisttpl
or
inc
jne
inc
or
jbe
mov
imul
scas
dec
lcall
out
xor
lods
shl
jae
adc
inc
iret
mov
push
jb
in
cmp
rolb
and
jmp
sub
mov
pop
pop
sbb
loop
pop
cmp
fnstenv
adc
xor
xchg
loop
inc
mov
aam
mov
aas
or
inc
jnp
cmp
jnp
sub
adc
add
fs
rcll
neg
inc
sbb
jb
out
push
cmp
fmuls
add
lret
push
outsl
cmc
iret
sahf
outsl
xchg
cwtl
lds
mov
jae
adc
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
rcrl
and
adc
jle
cmp
jno
xchg
ja
jne
jg
je
rolb
pop
mov
test
movsl
jo
in
pop
arpl
data16
je
sub
subb
aam
lods
adc
cmpsl
jecxz
andb
es
push
mov
jmp
jno
xor
cltd
push
lcall
pop
imul
stos
out
mov
sbb
lock
pop
inc
jae
inc
sti
popf
das
je
pop
dec
aas
repnz
jbe
mov
mov
cmp
jp
cmp
fnstenv
xchg
cmpb
sub
int
or
mov
es
imull
mov
push
ss
in
add
gs
out
int
add
and
pop
cli
add
jmp
icebp
push
mov
nop
unpckhps
and
mov
lods
popf
jg
mov
pop
addr16
shll
ljmp
test
or
jae
jns
sub
popa
mov
xchg
aad
andl
fs
lods
in
xor
incb
inc
cmc
in
aam
stos
leave
fstpt
xor
push
xchg
in
repnz
in
or
mov
inc
dec
neg
xchg
pop
test
not
adc
sub
adc
xchg
hlt
repz
fcoms
mov
repnz
cmp
lahf
mov
das
add
sbb
and
xchg
gs
jp
lds
dec
mov
ljmp
adc
shl
adc
aas
loope
clc
pop
fcoml
cs
movsb
loop
adc
push
lds
xchg
imul
and
dec
push
dec
add
xchg
dec
mov
int3
sbb
pop
xor
popf
scas
xchg
lcall
xchg
arpl
mov
sub
imul
pop
and
cld
lods
loop
stc
jp
push
into
test
push
xchg
cmp
popa
icebp
rcll
lds
mov
test
cmp
test
psubsb
jmp
dec
push
jp
sbb
lcall
data16
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
cmpsl
fiadds
jle
dec
push
ljmp
dec
addr16
cs
jmp
mov
mov
movsl
add
xchg
cmc
pause
notl
dec
xor
mov
push
cli
pop
cmp
sub
pminub
inc
test
jl
stc
xor
mov
scas
shll
jle
fildll
in
push
adc
cmp
repz
sahf
add
jae
cmp
sbb
outsl
xchg
pushf
fsubr
add
aaa
cmp
jno
and
sub
push
and
or
jo
lahf
jg
aam
pop
mov
jg
or
outsl
fnstcw
jb
outsb
cmp
cli
cmp
push
pop
or
inc
mov
pop
sti
sti
mov
jbe
daa
fcompl
mov
lcall
lock
rcr
adc
and
mov
jne
push
lahf
popa
shll
xchg
ds
add
mov
es
stos
pop
iret
sub
scas
xor
xchg
cmp
lret
shlb
or
sbb
inc
push
popf
or
mov
add
stos
into
xlat
xor
xor
mov
fldl
lods
mov
mov
xor
stos
add
inc
pop
aam
mov
out
pop
dec
pop
mov
int3
inc
cltd
lret
leave
repnz
mov
push
sbb
pop
inc
jle
mov
sahf
gs
xchg
inc
sbbb
and
push
rorl
dec
sub
icebp
inc
mov
ja
bound
or
adcl
push
fcmove
adc
xchg
in
jno
mov
mov
in
addl
shrl
in
int3
outsl
cmpl
sub
mov
bound
cmp
lahf
fldl
lcall
pop
jle
mov
stos
outsl
aam
or
in
jns
ljmp
out
sbb
loop
cmp
xlat
mov
das
mov
addr16
fmull
xchg
or
icebp
int
lds
cltd
call
sub
xor
sbbb
adc
shr
add
add
mov
cwtl
mov
mov
cmp
dec
mov
cmp
test
nop
ljmp
jp
and
fisubs
in
rclb
push
in
mov
xchg
popa
incl
fstps
push
or
jl
xchg
xchg
sti
sub
shrl
jae
inc
dec
in
and
es
mov
dec
jnp
sarl
sahf
sub
xchg
in
adc
fsub
jno
sub
outsb
js
jbe
mov
sbb
xchg
xlat
in
sbb
xor
test
ficoml
or
mov
sub
xor
mov
repnz
je
and
dec
and
mov
fwait
dec
or
nop
mov
sub
sti
lods
enter
cmp
push
push
or
mov
rcl
cli
mov
aaa
jb
adc
cmp
das
lret
adc
mov
leave
mov
xor
push
xor
cmp
subl
mov
xor
je
jge
add
xchg
or
test
in
add
cs
outsb
xchg
fisubrl
pop
lods
loopne
dec
push
cmc
in
mov
shrl
movsl
cmp
aas
mov
test
push
or
test
scas
mov
scas
mov
out
sbb
arpl
inc
sbb
scas
xor
fs
jge
pop
out
cmp
das
inc
xchg
mov
std
and
andl
mov
ficomps
xchg
inc
lret
adc
pop
paddusw
adc
in
jae
adc
lcall
sub
push
dec
mov
lds
andl
add
decl
aas
popf
mov
lods
in
fsubr
cld
push
lahf
mov
cli
test
cld
loop
std
or
ret
and
mov
shll
movq
out
lret
bound
sub
pop
add
mov
push
push
int3
cli
cmp
sbb
iret
jl
jl
jns
pusha
adc
fistpl
aaa
inc
ficomps
insl
cli
mov
leave
push
sub
je
jge
dec
data16
pop
aaa
xchg
xor
sahf
sahf
fs
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
ret
bound
jle
jne
int
shrl
addr16
xor
pop
in
cmpsb
xchg
repz
jl,pt
push
mov
sub
imul
sbb
loop
jne
xlat
xor
jns
in
push
pop
and
sub
fsubrs
mov
jae
loop
mov
ret
adc
xchg
xchg
pop
or
or
jae
push
call
sub
push
repz
pop
in
sub
mov
sbb
ja
sbb
mov
repz
ds
or
xor
lret
inc
push
mov
insb
add
mov
xchg
dec
xchg
es
mov
jecxz
or
icebp
mov
jo
ja
adc
xchg
mov
test
sbb
lret
test
in
xchg
repz
loop
mov
xor
mov
repnz
les
push
pop
jno
mov
sub
jl
stc
jae
cs
sti
pop
sub
mov
imul
inc
clc
push
mov
or
insl
arpl
pop
fisttpll
xchg
mov
and
in
in
mov
addl
ljmp
mov
clc
fucomip
cmpb
sub
or
std
adc
mov
shlb
xchg
pop
add
mov
xchg
mov
loopne
or
inc
xchg
cwtl
pop
clc
adc
xchg
movsl
cli
xchg
mov
push
jo
js
push
pop
cs
insl
push
and
pop
movsb
outsl
mov
orl
lcall
inc
pop
js
mov
subb
inc
inc
jo
xlat
adc
pop
push
dec
shlb
push
cmp
lret
int3
sbb
xchg
jl
pop
dec
xchg
mov
jb
fisubrs
pop
mov
cmp
and
add
stos
xor
xor
fwait
sub
cmpsl
push
jb
fldcw
gs
ffreep
aam
in
push
inc
mov
ljmp
test
jge
add
dec
jp
mov
mov
cld
iret
push
mov
xchg
addr16
aas
pop
mov
jb
daa
pop
sub
xchg
jmp
push
std
dec
sahf
push
push
add
sub
mov
cmp
testl
faddl
mov
loope
cs
pop
or
movsb
movsl
out
popf
or
repz
subl
je
jb
and
out
jle
lods
ss
cmp
lea
mov
fimuls
stos
movb
out
out
aad
out
pop
mov
ljmp
mov
mov
dec
push
xchg
inc
adc
cwtl
std
mov
sti
mov
and
mov
sbb
push
push
cli
sub
fdivl
movsl
movl
mov
sahf
sub
lods
fdivl
test
in
mov
adc
mov
sbb
repnz
das
push
imul
pslld
fucomp
or
stos
daa
adc
fcomp
cwtl
movsl
jle
bound
push
iret
lgs
in
mov
push
gs
mov
lods
fiaddl
mov
jecxz
inc
xchg
push
mov
lock
push
fstl
mov
add
dec
xlat
je
jmp
lea
rolb
test
lods
call
mov
push
jl
sbb
push
pushf
nop
cwtl
rclb
ffree
mov
loope
or
faddl
or
push
sub
and
sub
sub
std
adc
lret
cmp
lods
push
test
push
enter
pushf
jg
cmp
jge
mov
jmp
xor
add
cltd
jecxz
mov
std
mov
xchg
and
stos
sub
shrb
xor
dec
movsl
xor
push
popa
stos
mov
and
add
sahf
pop
add
mov
rcll
enter
imul
adc
movsb
mov
and
push
pop
and
nop
loopne
and
cmp
mov
push
or
mov
inc
xlat
sbbl
or
dec
mov
mov
ror
dec
aaa
ret
xchg
sti
bnd
shlb
test
jno
into
jae
jg
or
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
push
adc
jle
cmp
cltd
adc
stos
mov
push
xchg
out
lods
xchg
dec
jbe
push
inc
mov
inc
lods
xchg
cmp
and
cmpsl
xchg
dec
rcrb
mov
jmp
call
stc
sbb
daa
sahf
ret
xor
dec
and
pop
out
xchg
mov
sbb
mov
jbe
insb
ficomps
mov
xor
inc
cld
inc
jb
es
shlb
xchg
ret
fxam
popa
nop
xchg
dec
mov
lods
dec
iret
pop
cmc
and
sahf
jo,pn
sub
test
movsl
adc
xor
or
andl
push
cmp
adc
mov
xor
push
psubusb
pop
les
mov
jno
aam
adc
dec
scas
enter
inc
mov
stos
jnp
aas
xorb
jecxz
dec
jno
mov
leave
pop
mov
mov
fsubrl
xchg
mov
xchg
cmpsl
pop
or
popl
lea
sbb
scas
int3
xor
sbb
lret
arpl
rolb
xchg
xor
data16
mov
xor
push
xor
stos
gs
lcall
add
int3
inc
fsubrs
dec
mov
ljmp
in
lret
inc
push
cmp
mov
out
cmpsb
xchg
mov
test
scas
dec
xor
mov
push
sti
mov
scas
mov
pop
call
hlt
sub
pop
sub
sbbb
popa
sbb
imul
lock
mov
ja
call
fcoms
push
icebp
jmp
lahf
jl
inc
imul
mov
hlt
mov
in
fistpll
pusha
xor
pop
mov
out
daa
xchg
cli
rcll
adc
mov
rcll
ret
shrl
stos
out
cmp
cmpsl
jae
sbb
pop
loopne
test
ret
ljmp
sbb
int
dec
and
pop
inc
mov
mov
inc
movb
or
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
fcompl
jle
cmp
aaa
cltd
inc
xchg
imul
ja
dec
nop
pushf
stc
lea
bound
dec
rcrl
push
rcl
cmp
nop
call
shl
lahf
xor
cmp
lds
jo
jecxz
hlt
jmp
mov
adc
ja
gs
mov
jne
or
or
mov
addr16
and
int
xor
mov
sub
mov
jecxz
push
in
js
int
scas
mov
popf
jge
je
or
xchg
inc
dec
adc
cmp
lret
pop
jp
cmp
adc
mov
stos
loope
popa
pop
xchg
mov
insb
sub
jge
push
pop
mov
push
data16
dec
imul
out
nop
pop
scas
xor
jnp
outsl
imul
shl
cmpsb
repnz
sahf
mov
mov
leave
ret
mov
xlat
aaa
adc
dec
pop
adc
dec
sub
imul
mov
rcll
mov
test
popa
jle
cld
incb
sub
clc
mov
add
or
mov
out
inc
inc
arpl
cmp
jbe
lret
addr16
lahf
inc
outsb
aas
es
mov
stos
pop
sub
dec
lds
pop
addr16
pushl
cli
aaa
mov
jp
ficompl
pop
mov
nop
mov
xchg
ss
outsb
jo
and
push
xchg
and
popf
pop
fs
mov
sbb
or
stos
lret
movsl
add
aas
loope
ret
aam
mov
dec
popf
lret
mov
daa
aam
mov
or
movsb
pop
lea
lret
xchg
into
pop
mov
dec
mull
mov
sub
cmp
data16
loopne
int3
inc
jo
popa
mov
mov
xchg
cmpsl
lods
cmp
andb
cltd
jp
inc
add
sbb
inc
mov
lods
mov
divl
shl
out
int
push
call
add
mov
sbb
out
test
jmp
inc
test
push
xchg
xchg
mov
aam
les
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
adc
jl,pt
jle
ss
mov
cwtl
leave
enter
push
outsb
mov
loope
andl
hlt
iret
out
push
mov
cs
and
out
push
lock
shl
xlat
mov
cmp
insl
call
pushf
push
movb
mov
lret
fwait
sub
int
jg
jbe
stos
hlt
push
inc
push
lret
pop
ljmp
jecxz
and
push
pushf
pop
aas
mov
or
xor
jns
xor
int
jo
ja
cltd
lods
data16
push
push
cmp
fdivs
pop
lea
xchg
outsl
daa
cwtl
push
insl
stos
xor
add
adc
sahf
jae
cmpsb
mov
jbe
mov
xor
int3
jae
sbb
push
out
ret
xorb
aaa
xchg
cmp
push
stos
jnp
add
mov
xchg
test
jbe
dec
push
mov
cmp
cwtl
pop
pop
xchg
adc
fdivs
sub
lret
stc
mov
mov
jl
cmp
test
push
mov
sub
addr16
pop
cmp
out
cmp
jb
pop
jge
cmp
scas
sbb
rolb
xchg
ret
mov
fisubrl
ds
leave
mov
mov
jge
sub
mov
jno
lds
lahf
stos
push
sti
lds
dec
andl
mul
jo
jnp
popl
cmp
shl
in
inc
mov
iret
mov
out
or
and
xchg
sbb
fmull
fs
inc
or
and
dec
lds
xor
js
add
out
mov
xchg
fistpl
mov
leave
push
sub
xchg
push
adc
pop
jle
mov
adc
jmp
lock
cmpsb
std
inc
movsl
mov
aam
add
test
push
lock
ja
add
xchg
and
jnp
mov
inc
mov
icebp
nop
out
cmp
dec
jmp
xchg
aam
jg
xchg
iret
imul
mov
pop
je
insb
lcall
sets
pop
push
movb
xchg
out
ret
ja
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
dec
xor
cmp
jle
push
loopne
jb
jle
mov
push
int3
dec
xchg
mov
or
sub
cwtl
jecxz
or
cmp
ja
inc
push
adc
fidivl
test
in
and
sub
jns
jnp
fdivrl
notb
repnz
xchg
test
scas
int
or
add
shll
sahf
push
jo
adc
xor
bound
mov
jge
push
stos
scas
lcall
scas
iret
add
icebp
mov
es
jno
pop
lods
imull
leave
cmp
mov
in
or
sub
mov
push
sbb
mov
stc
mov
mov
push
andl
js
test
mov
mov
lcall
jp
bound
scas
sbb
xchg
imul
ss
lret
test
jmp
in
orl
repz
int
push
jno
sbb
out
iret
dec
mov
dec
push
inc
mov
loop
mov
pop
pop
and
xorb
cmpsb
fcmovnb
cmp
insb
xchg
imul
xchg
cli
pop
and
xchg
adc
sub
and
lods
lds
imul
loop
pandn
addr16
sub
dec
out
insl
in
daa
mov
fiaddl
fdivl
cmp
clc
inc
sbb
popw
jbe
push
call
out
loopne
dec
mov
nop
fucom
jle
lret
mov
push
sbb
xor
hlt
xchg
push
jg
lret
mov
fbstp
imul
sub
fisttpll
imul
jmp
rorb
add
shrl
inc
and
push
and
xchg
mov
lret
aad
stos
pop
dec
shrb
jo
sub
inc
fdiv
ljmp
loopne
repz
lahf
popf
lret
mov
jo
test
sub
xor
repnz
cmp
notl
ja
or
iret
xlat
stos
xor
or
pop
sub
gs
mov
xchg
xlat
mov
and
fbstp
dec
cmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
ret
dec
mov
loopne
lcall
shrb
xchg
out
mov
ja
scas
ss
into
pop
das
out
cwtl
fdivr
outsb
sub
call
pop
das
iret
ds
jno
daa
sub
mov
inc
loope
xor
sbb
jae
mov
cmp
jb
popf
ds
je
loop
jo
fstpt
dec
lret
xlat
pop
jae
addr16
std
cmp
xchg
or
int
pop
xor
pusha
or
out
jge
inc
push
xlat
fadd
sahf
or
add
fcomps
sub
movsb
add
mov
imul
adcl
out
arpl
sub
inc
bnd
xor
jo
pop
scas
lea
sbb
lcall
and
jo
or
mov
es
push
or
inc
adc
sbb
enter
mov
lods
sbb
stos
sub
and
das
out
xor
jge
clc
push
int
and
fistpl
add
push
scas
mov
xor
mov
xchg
mov
cwtl
add
arpl
add
and
pop
pushf
add
shlb
mov
test
pop
sub
push
in
or
test
cmp
popl
divb
adc
aas
jnp
insb
fimuls
mov
mov
popf
dec
push
and
mov
cmpsb
out
sti
and
mov
outsb
cmpl
sub
loope
rorl
clc
scas
pushf
cld
mov
lods
sahf
mov
xor
test
int
fstp
dec
jle
arpl
icebp
mov
arpl
xchg
sub
inc
mov
add
mov
mov
mov
adc
mov
inc
ja
inc
test
sub
lea
orl
pop
loope
dec
pop
cmc
xchg
pushf
xchg
icebp
mov
addb
jle
shrl
mov
mov
shrb
or
jne
imul
jmp
sbb
push
cmp
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
idivl
mov
jle
adc
jle
movsl
mov
add
cltd
outsb
insb
mov
pop
cmpsl
push
push
icebp
pop
push
cmpsb
loopne
mov
ret
jno
cmp
les
dec
inc
mov
pusha
sub
imul
inc
repz
mov
pop
jb
cmp
lods
jg
mov
jae
mov
out
cs
enter
add
loop
mov
sub
adc
fs
and
jmp
pop
add
pop
xlat
inc
aam
cmpb
xchg
fsubs
push
repnz
xchg
in
pusha
mov
sahf
pop
popf
push
xchg
push
sbb
mov
mov
cmpsb
inc
sub
mov
call
and
mov
add
daa
xor
dec
dec
loop
adc
fcomp
push
jne
dec
push
push
cmpsl
or
js
sub
xorb
sarl
pcmpeqd
imul
add
or
out
mov
cltd
and
mov
loop
mov
pop
inc
pop
loope
mov
or
add
lret
cmp
dec
push
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
fiaddl
jg
popf
jle
adc
jle
or
lock
sbb
nop
shll
aaa
lock
mov
sbbb
mov
push
jns
or
mov
je
sbb
out
pop
sbb
movsb
andl
mov
in
xchg
jb
add
out
popa
push
loop
pop
lods
push
cltd
orl
outsw
inc
in
stos
adc
jbe
fnstsw
jmp
aaa
jb
mov
cmp
or
mov
in
cmp
leave
jno
cltd
xchg
xchg
mov
sti
in
popf
or
mov
push
cmp
cltd
fistpl
in
cmpsl
imul
jge
xchg
jmp
mov
pop
aaa
and
stos
dec
xor
pusha
push
imul
xor
adc
add
test
sub
mov
mov
bound
xor
cmpsb
lock
lret
std
mov
mov
dec
inc
mov
add
je
pop
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
call
lcall
shrl
mov
test
insl
mov
cmpsl
xchg
push
push
std
cmp
sbb
icebp
out
dec
mov
test
push
imul
dec
sbb
pop
cmp
push
dec
cmpsb
lock
hlt
push
outsl
stc
aad
mov
sbbl
iret
inc
xchg
mov
pop
adc
lret
mov
jnp
xchg
pop
repnz
sahf
lahf
adc
in
leave
jbe
cmpsl
and
mov
addr16
adcb
xchg
lret
lea
in
xchg
push
push
fidivrl
sub
ss
mov
cld
dec
shlb
repz
push
add
mov
sub
mov
notb
push
nop
sahf
cltd
push
xor
xor
xchg
sarl
jo
sub
adc
inc
rcrb
mov
pop
adc
add
aam
cmpl
imul
sbb
daa
into
lret
dec
mov
out
push
std
add
ret
mov
add
movsb
decb
or
add
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
in
outsb
fwait
loop
cwtl
jle
adc
jle
ljmp
xor
or
movsb
xchg
xchg
gs
popf
das
cs
mov
out
outsb
jl
int3
inc
add
lret
jb
ss
jne
jl
das
adc
addr16
mov
mov
mov
sub
and
in
popf
ja
sub
es
mov
je
inc
push
jo
stc
inc
sub
add
pop
lock
loope
mov
cs
jl
test
xchg
push
adc
aam
call
repnz
rolb
add
cmpsb
mov
mov
cmp
into
xchg
mov
sar
test
add
lret
dec
push
xchg
sub
xchg
mov
repnz
fcompl
hlt
jo
data16
sub
mov
outsb
test
cmp
mov
push
clc
adc
in
out
test
lcall
sub
dec
repnz
lods
and
addr16
mov
loopne
loope
cld
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
dec
mov
cltd
jle
adc
jle
adc
jnp
enter
xchg
fidivrs
or
inc
pop
dec
inc
inc
popa
cmp
mov
mov
push
add
leave
xor
out
and
stos
xchg
mov
int3
sarl
or
ja
xchg
mov
inc
dec
repnz
cs
in
mov
xchg
fisubrs
in
xchg
stc
mov
movsl
mov
dec
mov
mov
xchg
movsl
add
push
dec
fwait
jae
push
mov
xor
add
push
xchg
rcrl
lcall
pop
cmp
aas
mov
repz
cmp
xchg
push
pop
jns
nop
cmp
shl
add
adc
push
sbb
jp
jg
sub
adc
mov
push
mov
insl
xchg
mov
mov
sbb
mov
sti
mov
les
mov
xchg
and
cwtl
insb
pop
push
sbb
inc
mov
mov
inc
xor
popf
sbb
xchg
lock
mov
xor
pop
dec
mov
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
mov
imulb
call
test
add
dec
jbe
inc
popa
jb
pop
mov
loope
pop
cmp
pop
iret
jno
aam
lea
popf
ja
add
jp
xchg
arpl
cld
cmpl
sub
jecxz
adc
insl
pop
jb
movl
sbb
mov
fistl
sub
popf
sbb
iret
mov
and
shll
jmp
cmp
sbb
cmp
push
add
mov
call
jecxz
hlt
push
into
into
leave
jbe
jo
add
std
in
or
inc
push
int3
jl
insl
imul
popa
fildl
ja
add
sahf
out
push
pop
addr16
mov
hlt
fwait
and
pop
xchg
fst
push
inc
mov
stos
adcb
cmp
mov
fsubs
repnz
add
pop
xor
call
addr16
movsb
out
xor
fstpl
jbe
jmp
pop
xchg
push
in
adc
adc
mov
add
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
xchg
enter
jle
jg
jle
scas
fdivp
shr
int
cwtl
push
or
xchg
jg
add
dec
rcrl
popa
mov
pop
ds
dec
lea
in
sub
cmpl
negb
add
jecxz
sub
aaa
scas
sbb
bound
bound
mov
dec
mov
pop
ficoml
lock
sbb
push
adcb
es
sub
lock
push
sbb
jg
mov
incl
popa
xor
mov
jg
pop
jg
gs
lods
inc
mov
mov
dec
ljmp
hlt
dec
test
jl
pop
inc
sub
mov
adc
mov
dec
sarb
sub
jnp
test
sub
clc
cmp
fcomi
mov
in
mov
in
mov
pop
or
fdivp
push
mul
push
jmp
push
or
pop
sbb
int3
jne
inc
xor
or
inc
cmp
push
mov
aas
addr16
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
xchg
jle
and
fucomi
repz
mov
ret
xchg
mov
mov
inc
imul
push
stc
add
ljmp
xor
add
popa
cltd
pop
mov
aad
js
mov
mov
pop
int
mov
icebp
movsl
sub
adc
mov
fisubs
lods
inc
fstl
into
ljmp
shlb
mov
add
jae
ja
xor
nop
mov
aas
mov
mov
ret
mov
stos
rcr
add
into
jnp
xor
xor
add
xlat
jmp
test
mov
push
mov
mov
in
xchg
mov
push
les
leave
popa
or
leave
imul
lret
out
cmpsl
cmp
outsl
dec
std
in
iret
xor
insb
xor
mov
lods
jb
xor
push
sbb
push
or
push
data16
int3
xchg
mov
sbb
mov
sahf
cli
leave
mov
xchg
jecxz
pop
dec
and
ret
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
xor
jle
jg
jle
sbb
cmp
jns
hlt
icebp
in
mov
aad
lcall
dec
xchg
in
cmpsl
andl
out
dec
fimull
sub
xor
and
mov
ds
mov
inc
jo
int3
fisubrl
sub
and
iret
lods
cli
repnz
scas
inc
les
pop
jecxz
pop
mov
in
lcall
sti
jle
jns
popa
cmp
push
js
mov
mov
mov
jb
mov
std
cmp
or
cmc
jmp
pop
testb
ljmp
adc
push
test
push
mov
or
jno
shll
stos
paddusw
scas
or
add
orb
jp
pop
clc
adc
mov
sbb
adc
sub
cmp
shll
loopne
dec
dec
xor
mov
sub
out
addb
xchg
add
inc
mull
imul
bound
cltd
call
out
or
jp
leave
push
xchg
icebp
and
xchg
incb
sbb
adc
repnz
cli
out
movsb
cmp
jl
lea
stos
xor
bound
push
fsubs
cmp
xchg
lea
movsb
stc
lds
jo
stc
incb
std
mov
sbb
ss
mov
xor
and
sbb
in
enter
stos
adc
pop
int3
gs
div
inc
cltd
mov
pop
idivb
mov
adc
lahf
sbb
push
sub
push
icebp
repnz
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
sti
mov
mov
int
clc
dec
cmp
or
push
or
aaa
or
cmp
xchg
sar
cwtl
subb
fs
lea
das
mov
jp
ret
fsts
cli
adcb
mov
fcom
adc
dec
lods
fdivrl
xchg
cmpsb
dec
adc
clc
fsubp
dec
gs
es
add
repz
fdivl
adc
inc
mov
mov
gs
pop
addr16
stos
test
ror
and
es
pop
sarl
cmc
mov
xchg
dec
mov
pop
es
fiaddl
aad
xchg
testl
sbb
lret
orb
dec
add
aam
jnp
dec
cmp
add
mov
arpl
xor
scas
jg
pop
scas
scas
stos
lock
jns
mov
cmpsb
cmp
xorb
mov
inc
icebp
popa
mov
cmp
add
lcall
ds
pusha
inc
clc
xor
iret
xor
lcall
mov
and
dec
adc
xchg
push
pop
scas
xor
stos
cmp
add
xchg
inc
add
es
xor
and
mov
mov
mov
outsl
sbb
fwait
inc
lahf
ret
subl
fstps
jns
jae
pop
aad
and
hlt
lret
pop
fcomps
pop
shll
test
mov
and
movsb
into
bound
or
mov
or
ficompl
and
sbb
xor
nop
push
mov
aam
mov
xchg
aaa
add
aas
scas
mov
outsl
jb
cmpsb
adc
mov
cld
or
fadd
adc
in
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
ja
mov
jle
cs
push
lock
ljmp
mov
or
mov
ljmp
jnp
mov
lods
lds
nop
cmp
or
mov
xor
jg
pop
and
mov
push
push
call
ret
inc
mov
insl
lods
xchg
xor
add
mov
cli
enter
fs
fwait
in
xchg
mov
or
enter
fsubs
xchg
xor
insl
adc
loope
test
ja
into
fs
pop
mov
sbb
das
pop
lahf
mov
dec
inc
cwtl
push
cmp
lahf
jp
lods
mov
leave
push
lret
mov
sbb
cld
dec
adc
js
clc
in
inc
sbb
xchg
cmp
xlat
cwtl
cmpsl
je
lock
or
sub
enter
or
xor
jmp
dec
cmp
aad
dec
push
dec
mov
xor
pushf
repnz
div
shl
push
or
arpl
sub
cli
add
mov
pop
push
aad
pushf
push
movsl
jae
addr16
push
out
ret
rolb
lock
mov
and
out
inc
test
jnp,pt
mov
in
cmp
fsubr
in
std
popf
xor
das
or
leave
push
lock
rorl
mov
std
cmc
sbb
adc
jae
dec
or
push
xchg
je
lods
sar
popa
xor
nop
inc
cmp
or
jge
dec
dec
cmpsl
into
mov
xor
in
fiaddl
sti
and
stos
mov
ja
repz
fiadds
sbb
loop
fbstp
fs
push
and
fcomp
ds
mov
xchg
push
sub
mov
inc
das
xchg
inc
xor
pop
xor
lahf
add
int
or
fcom
mov
scas
fwait
sub
mov
je
ja
js
das
scas
andl
jg
sbb
arpl
inc
lock
or
sbb
jle
sti
push
cs
test
push
mov
mov
and
rep
fnstenv
arpl
in
ss
mov
lcall
or
sti
xor
test
gs
gs
xchg
or
dec
js
push
xchg
xor
jnp
jo
sti
add
adc
push
test
jge
xor
jecxz
loop
lods
add
rcll
mov
rol
ret
inc
mov
cmpb
jae
fisubs
push
mov
sbb
ret
cmp
jl
ret
arpl
jle
pop
lahf
out
push
xchg
shll
cli
mov
inc
lods
mov
jmp
dec
cmc
outsb
scas
pop
lea
sub
in
and
xchg
xor
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
lcall
jle
int3
pop
add
jecxz
pop
cmpsl
xchg
pop
pop
decl
jp
inc
sar
dec
insl
push
fcmovu
push
ret
into
ja
inc
sub
in
cmp
pop
out
mov
push
cltd
bound
xor
xchg
shll
xchg
push
notb
xchg
inc
push
out
pop
data16
mov
pop
push
dec
lahf
or
fwait
jge
int
mov
mov
negl
jb
bswap
and
push
sub
stc
dec
push
subl
sbb
cs
outsb
cmp
aas
cli
btr
push
test
cmpb
mov
sbb
fidivrl
setbe
rcrl
daa
dec
stos
inc
je
xor
add
inc
orb
pop
ret
js
stos
sub
adcl
arpl
xor
fiadds
sarb
jle
pop
add
and
jl
inc
js
inc
adc
ja
rcl
or
adc
dec
cmp
xorl
stos
int
movsb
fiaddl
mov
mov
mov
clc
lock
sbb
lcall
or
add
inc
cli
sub
test
add
bound
fsubrl
xchg
ss
cmpsl
push
aam
sti
mov
fisttpl
sbb
in
xchg
dec
sarb
stos
lds
sti
mov
stos
dec
inc
mov
pusha
jge
mov
pop
cmc
push
mov
mov
push
xchg
pop
push
push
push
roll
icebp
icebp
mov
and
aam
test
arpl
repz
and
mov
testl
fisttps
addr16
fs
ljmp
cwtl
push
pop
inc
lods
leave
mov
cwtl
repnz
popf
lock
pushf
aam
mov
sub
orb
and
dec
rclb
xchg
cmp
jnp
mov
push
imul
xchg
in
mov
sbb
out
subb
repnz
es
mov
imul
clc
sub
test
pop
sbb
out
pushf
cmpsl
xchg
cmp
push
js
adc
xchg
cmp
adc
adc
adc
stos
sub
sti
dec
mov
dec
or
cmpsb
jo
ljmp
in
cmp
pop
mov
in
clc
mov
sahf
aas
arpl
and
mov
cli
or
nop
xchg
sub
sub
shlb
sbb
dec
shl
mov
pusha
popf
mov
or
les
mov
cmp
and
aas
xor
sub
pop
sbb
sub
aaa
mov
push
test
notl
add
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
mov
stos
jle
jl
jle
mov
dec
lret
and
mov
xchg
xchg
dec
jne
test
mov
repnz
xchg
fadds
xor
pop
sahf
roll
xor
inc
inc
push
call
data16
mov
xchg
adc
mov
mov
inc
xor
jmp
jge
ret
jb
int
stos
dec
add
cwtl
push
shrl
push
lea
pmulhuw
sub
and
push
int3
inc
dec
imul
add
dec
hlt
push
cs
int
pop
sub
add
ss
dec
neg
jg
std
or
mov
faddl
insb
cmp
dec
mov
mov
mov
cmp
mov
rolb
pop
add
outsb
xchg
mov
xchg
test
jge
sbbl
je
testb
je
adc
sub
cld
xchg
pop
push
push
dec
test
aas
inc
pop
add
dec
repnz
jmp
mov
and
daa
int3
mov
jle
push
stos
in
repnz
push
cmpsl
and
pop
or
pextrw
arpl
dec
sbb
mov
sub
out
ss
xor
imul
jns
into
lods
inc
pop
out
push
test
mov
mov
fistpl
icebp
adcb
pusha
pop
and
lock
push
jecxz
pop
lahf
sbb
int3
push
push
add
dec
shl
cs
mov
je
fdivs
cmp
add
out
fwait
xor
or
or
sub
lret
into
xchg
dec
syscall
or
test
enter
mov
rolb
rcrl
mov
adc
shr
rorb
cmp
dec
das
adc
jg
popa
dec
jl
pop
pop
stos
push
bound
mov
adc
mov
dec
insb
mov
iret
cmc
push
fsubrs
fstpt
jl
lahf
xchg
pop
jle
push
fs
or
test
jae
pand
mov
call
adc
mov
jne
pop
pop
ds
and
imul
pop
fisubrl
mov
repz
add
inc
xchg
add
xor
lcall
and
push
in
stc
dec
into
call
xchg
imul
rcl
aaa
sbb
inc
aaa
aas
sbb
imul
inc
stos
ss
pop
jae
push
mov
lret
jae
dec
enter
insl
cmp
xor
out
mov
jns
cmp
add
sti
stos
je
scas
test
sub
mov
inc
xchg
or
mov
loopne
mov
fistpll
jbe
sbb
cmp
xchg
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
sahf
lahf
jns
mov
jle
jge
jle
out
push
mov
cmp
shr
sub
imul
iret
loop
call
or
add
cmpb
and
jmp
push
out
pushf
out
mov
mov
push
fadds
scas
and
movsb
pop
mov
pop
dec
and
xor
and
out
push
lds
push
test
adc
mov
mov
dec
sbb
xchg
ja
mov
mov
test
jecxz
or
or
enter
pop
mov
outsb
push
in
adc
mov
jae
or
pop
pop
leave
push
sub
in
stc
pop
sahf
call
cwtl
mov
add
jb
mov
shrb
lahf
call
or
push
std
push
out
push
daa
mov
jne
aaa
mov
jmp
mov
xchg
cmpsl
leave
sar
add
test
jbe
mov
inc
cwtl
push
out
xchg
add
pop
cmp
mov
cmp
and
xchg
pop
xchg
sub
inc
add
push
push
and
cmp
or
dec
push
sub
popf
adc
sbb
cmp
jmp
lret
sub
inc
mov
or
lods
out
cltd
mov
or
sbb
sar
out
out
outsl
insl
icebp
xchg
insb
inc
repnz
stos
xor
inc
sub
fcomp
mov
ss
cmp
movsl
loopne
jbe
enter
sbb
mov
movsl
popf
sub
and
cmp
mov
aad
pop
clc
pushf
add
dec
ret
pushw
xorl
dec
mov
mov
inc
dec
inc
sub
mov
or
and
mov
outsb
aas
icebp
aad
sti
stos
lods
imul
jl
orb
or
es
hlt
pop
mov
push
test
jae
mov
mov
xlat
pop
imul
and
cmpsb
aas
roll
pop
mov
addr16
inc
jmp
xor
scas
push
lds
push
lcall
stos
mov
sub
test
adc
and
loop
push
rcrb
pop
jl
inc
gs
mov
in
js
mov
clc
pop
xchg
xchg
xor
imul
lods
push
jnp
leave
mov
mov
pop
ds
mov
lret
loopne
fldenv
and
and
stos
movsl
js
xor
and
or
or
and
adc
sti
mov
movsb
loopne
push
mov
bsr
cmpb
inc
dec
pop
loopne
pop
xchg
jge
mov
out
dec
lock
xchg
sub
fisubl
je
push
mov
mov
testb
pop
dec
loope
or
jne
testb
test
sbb
add
or
pop
jno
xchg
add
xor
jle
jge
jle
sub
hlt
js
shl
repnz
mov
add
inc
dec
out
lcall
aad
mov
in
ror
in
fstps
out
repnz
mov
int3
out
rorl
lret
repnz
pop
xchg
shlb
imul
adc
cmpsl
mov
adc
add
loopne
in
xor
gs
ret
xchg
push
mov
xchg
mov
lods
ja
lret
aad
xor
pop
imul
scas
mov
dec
andb
mov
dec
fisttpll
xchg
jecxz
rorl
mov
sbb
inc
sub
xchg
bswap
hlt
sub
or
stos
adc
push
inc
fcmovnbe
cmpl
jne
sub
inc
pop
lods
lods
roll
aaa
insl
fdivrs
or
dec
push
jge
or
adc
stc
clc
dec
add
push
mov
lock
andb
or
pop
test
daa
xor
rolb
loop
xchg
sub
cmp
leave
or
leave
addr16
sub
adc
add
jae
stc
rorb
lret
iret
lret
or
jmp
dec
fiadds
outsl
sbb
and
call
inc
pop
inc
cmp
out
arpl
or
pop
adc
cmc
fwait
add
popf
sbb
dec
sbb
ret
pop
repnz
loopne
pop
adc
mov
out
div
cmp
sub
shll
push
sti
jge
pop
dec
add
dec
jmp
enter
sub
adc
and
cmp
jge
mov
add
ror
repz
push
mov
xor
mov
jbe
shll
and
je
mov
std
ffree
cmp
das
jo
rcrl
test
scas
sbbb
lods
mov
into
insb
add
cli
out
cs
das
sub
sbb
lds
xor
dec
nop
add
adc
int
xor
dec
jmp
dec
inc
pusha
jle
mov
adc
aaa
cmp
loop
jl
fwait
sbb
push
sarb
jbe
push
aad
repz
imul
int3
clc
xchg
mov
mov
add
cli
sbb
scas
push
pop
stos
enter
xchg
daa
aad
and
cmp
push
aaa
xor
sbb
mov
cmpsl
push
adc
clc
xchg
movsl
stos
icebp
push
mov
iret
dec
xor
mov
sub
jg
mov
hlt
ds
lahf
cmpl
repz
in
movsb
fiaddl
xchg
adc
lock
rolb
lahf
lods
inc
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
cmpsb
in
add
mov
jle
jl
jle
push
or
xor
sub
xchg
xchg
push
sbb
out
data16
cmp
cmp
addb
aas
aad
js
aas
cli
stos
sub
mov
sbb
pusha
inc
push
mov
jbe
mov
sub
inc
sub
add
mov
adcb
and
test
aaa
jg
push
mov
scas
outsl
push
outsb
lods
lret
scas
push
popa
mov
xchg
fs
add
imul
or
pushf
dec
mov
sbb
cmc
sbb
ret
xchg
and
add
aaa
sub
in
aam
loop
ret
dec
jbe
fs
imul
jg
mov
lods
hlt
xor
sub
mov
dec
jae
sbb
pop
jl
adc
jno
push
lahf
mov
negl
or
xor
jbe
dec
mov
int
pop
pop
adc
and
lods
adc
addl
sbb
sbb
or
add
sahf
cmc
push
enter
bound
xor
test
stos
xchg
iret
in
ss
jp
in
push
fs
sbb
fdivl
in
cmp
jg
or
setbe
add
cwtl
mov
hlt
xor
pop
ret
dec
loopne
shr
jae
cmp
sub
je
dec
jbe
hlt
ret
iret
popf
pop
or
sub
xorb
addr16
push
test
cmp
in
iret
fiaddl
or
imul
mov
adc
mulb
jae
scas
pop
adc
xchg
or
bound
xchg
leave
jge
rclb
test
cmp
les
pusha
sub
cmp
push
popf
add
xchg
pushf
mov
insb
insl
test
int
mov
adc
dec
cmp
or
cltd
lret
dec
dec
ret
adc
xor
pop
fldl
add
sti
inc
cmp
mov
shrb
test
xlat
jl
mov
fsubl
gs
insb
aad
sbb
dec
adc
pop
mov
scas
xor
mov
push
cli
andb
inc
fcoms
mov
and
and
pop
subb
test
fdivrp
mov
out
or
aaa
insl
bound
ret
hlt
das
inc
or
lahf
cmp
adcb
pop
cmpsl
and
jbe
lea
es
lds
adc
add
outsl
adc
js
add
mov
js
dec
or
adc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
dec
xchg
pop
popa
or
inc
xor
add
xchg
inc
in
or
sub
cmp
rclb
jecxz
inc
movd
enter
pop
inc
cld
icebp
inc
add
movsb
jae
push
xacquire
adc
outsl
enter
cwtl
xchg
sti
les
or
jb
add
lods
pop
js
or
nop
push
mov
imul
and
subl
int
pop
push
and
sti
addr16
add
jp
pop
arpl
push
push
inc
lahf
in
adc
mov
movsb
fdivl
push
adc
xor
cld
jb
xor
adc
mov
add
adc
mov
pop
filds
mov
mov
or
loopne
lret
push
dec
adc
cmp
movsl
pop
inc
sbb
icebp
xchg
notb
pusha
and
xor
push
sub
jae
popf
push
xor
aad
pushf
js
jb
jno
or
xchg
es
push
iret
dec
imul
pop
cwtl
gs
mov
jbe
sti
inc
lds
cmp
xchg
or
mov
push
decb
cmpsb
jge
mov
jo
add
xlat
rcrb
popf
jae
dec
or
or
pop
pop
imul
inc
add
arpl
push
lock
cwtl
std
inc
es
bound
jno
jmp
inc
cmp
lea
jb
insb
stos
negb
sbb
ljmp
push
mov
push
gs
adc
scas
lea
dec
mov
leave
je
sub
xchg
addr16
mov
iret
pop
push
jge
xorl
mov
jl
adc
stos
clc
sub
es
scas
sub
out
mov
sbb
sub
call
mov
lods
sub
jne
fists
mov
xchg
jge
sahf
push
mov
sbb
lock
jl
jnp
aad
inc
sub
iret
mov
jp
sub
mov
insl
pushf
aad
push
orl
push
clc
in
dec
dec
imul
hlt
and
cmp
ss
mov
xor
test
rol
mov
popa
cmp
or
pop
lds
dec
sarl
jno
sar
dec
movsb
lret
jmp
add
fdivl
lock
xchg
pop
ret
inc
aam
mov
jl
jle
leave
ljmp
lret
jmp
jne
cli
popf
and
xor
imul
push
add
mov
sub
iret
push
or
dec
cmpsb
pushl
jg
adc
lret
ss
aam
arpl
icebp
xor
icebp
or
in
jge
cmpsl
pop
jns
hlt
jmp
shlb
push
push
pop
into
dec
sbb
outsb
adc
in
inc
cmp
or
jp
mov
aam
inc
cmpl
stos
or
push
xor
or
mov
lahf
out
push
cs
stos
std
cld
int3
jnp
pop
ror
movsl
sbb
in
xchg
pop
in
data16
xor
push
dec
or
daa
fcom
jmp
lret
jo
inc
test
call
adc
pop
xchg
jge
scas
pop
pusha
sbb
je
pop
add
xor
xor
clc
icebp
sbb
std
inc
pop
mov
push
pushf
sub
test
mov
add
inc
mov
sbb
mov
ds
cmp
pop
aad
inc
xor
push
jb
aam
push
pop
push
enter
push
in
jge
push
scas
sbb
cmp
ja
adc
clc
arpl
jge
jge
stc
dec
jno
pop
insl
sbb
lahf
pop
sbb
lds
stos
push
jge
mov
dec
add
int
jb
inc
mov
in
lods
inc
pop
and
push
mov
pop
xor
ret
arpl
lret
push
push
pop
cmpsb
lock
ljmp
push
push
cmc
aaa
pusha
xchg
out
or
dec
stos
add
cmp
dec
push
sbb
imul
std
push
mov
jl
jnp
xchg
mov
enter
movsb
and
cmp
loope
and
mov
ss
addr16
int
addr16
dec
sbb
inc
jns
lret
sub
outsl
fistpl
test
stc
ret
aad
xor
test
adc
std
sub
bound
add
pop
call
or
sti
push
popa
stos
test
add
add
rorl
sbb
sbb
and
cmpsb
fs
xchg
lock
mov
test
push
xchg
or
mov
xor
imul
push
jns
push
out
push
mov
mov
mov
inc
int3
sub
test
mov
in
arpl
cmp
dec
jno
add
mov
mov
jmp
je
push
push
lock
outsb
dec
mov
mov
mov
jle
dec
xchg
adc
movsl
inc
int3
or
pop
test
mov
subb
mov
lods
xlat
jmp
add
push
out
inc
xorb
and
mov
push
int3
enter
mov
faddl
xor
sbb
lret
mov
sbb
fldt
push
lcall
shll
add
enter
in
mov
andb
stc
ja
or
movsb
aas
lds
jge
test
mov
or
inc
push
sub
movsl
jecxz
push
cmp
adc
sarb
lret
testb
add
sarl
push
insb
jo
jmp
push
je
imul
ret
xor
mov
cmpsb
pop
xchg
sarl
push
hlt
jmp
sbb
mov
repnz
and
enter
fidivl
dec
pop
test
jge
mov
xor
out
push
lret
push
call
xor
mov
iret
scas
enter
out
sub
cmp
sar
fldl
outsb
cmp
or
xchg
repz
sub
jne
stos
xor
dec
xchg
jle
inc
fiadds
sub
lret
lahf
jo
lahf
add
mov
cmpsl
xor
and
xchg
stc
fistps
ret
mov
push
cmp
ds
inc
shll
adc
outsb
xchg
stos
adc
mov
shrb
fdivl
mov
out
jl
lahf
daa
dec
push
jmp
add
in
dec
jecxz
loope
les
les
xchg
mov
daa
sub
fstpt
pop
outsl
mov
loope
ja
add
jbe
jae
mov
test
inc
neg
mov
rclb
lahf
or
push
mov
jl
mov
ljmp
loopne
pop
ja
cmp
js
mov
mov
dec
and
cmp
lock
mov
movl
jns
mov
fidivs
xchg
push
shll
lds
add
mov
sub
mov
cltd
mov
or
xchg
fldt
or
scas
data16
int3
push
mov
inc
int
cwtl
and
inc
push
je
xchg
pop
scas
xor
push
call
cmpl
imul
mov
imul
out
mov
dec
dec
push
mov
mov
inc
mov
jae
sub
iret
fdivp
pop
shlb
inc
or
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
inc
jo
sbb
jle
jl
jle
fwait
cmp
jo
aam
stos
pop
test
mov
jg
sub
out
xor
es
xchg
dec
push
jae
adc
sub
fstpt
mov
cmp
cs
push
cltd
cmpsb
jg
jecxz
push
lea
aaa
lods
movsb
stc
cmp
arpl
inc
mov
loop
xchg
pop
jg
fsubrs
ss
aas
pop
stos
cmp
and
repnz
fnstcw
jle
outsl
xchg
aaa
xor
addr16
or
pop
mov
and
addl
es
ret
aad
push
std
xchg
jb
or
sarl
sub
add
sahf
dec
adc
into
insb
fistl
je
pop
cmp
mov
test
jno
jno
jl
inc
testl
inc
cwtl
fcoml
inc
jo
test
out
aad
movsb
dec
aad
xchg
xor
pushf
jle
and
inc
decb
gs
inc
clc
or
xchg
mov
mov
add
or
push
jl
and
push
pop
mov
scas
xlat
push
lret
fidivl
test
into
sub
out
fnstenv
xchg
dec
and
in
jb
or
lcall
mov
fiaddl
push
push
or
in
and
mov
loope
aad
xor
in
sbb
sub
pop
bound
add
stos
stos
insb
or
sqrtps
pop
pop
jne
push
repnz
push
jns
imul
mov
mov
out
mov
xor
in
test
xor
pop
mov
or
sbb
mov
mov
mov
jp
jle
mov
dec
sbb
lret
cmp
mov
fcomps
and
push
into
jnp
dec
stos
or
push
inc
jno
push
or
and
jne
vmread
adc
push
pop
push
and
jmp
jmp
aam
cmp
fs
add
xor
xchg
xchg
sti
jl
xlat
int3
xor
adc
push
mov
rolb
or
sub
jge
pop
dec
fcoms
rcrl
sbb
cmp
add
insl
mov
mov
fisubrs
loopne
inc
sbb
add
je
and
fidivs
pop
add
js
outsb
out
movsl
push
fwait
fs
shll
dec
lock
push
into
cmc
push
inc
sbb
adc
repz
jno
jmp
push
ret
out
cmpsb
sub
gs
mov
pop
insb
jo
xchg
mov
ja
test
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
sbb
jle
jl
jle
cmpsb
mov
jl
aam
add
dec
test
dec
adc
add
lret
loop
push
test
rcrl
cmp
pop
icebp
sbb
pop
mov
add
les
xor
cltd
arpl
mov
pop
jnp
jbe
mov
add
std
xor
mov
out
stos
xor
mov
add
pop
sbb
push
and
lret
outsl
sbb
call
inc
pop
iret
xchg
or
aam
ljmp
add
mov
sbb
stc
mov
iret
cmpsl
bnd
test
cmp
push
inc
addr16
add
int3
cmc
cmp
push
pushf
loope
or
sbb
into
dec
jecxz
or
pop
dec
sbb
add
or
jge
push
push
mov
or
mov
mov
xor
sub
push
roll
stc
jo
lret
cli
cltd
ja
push
pushf
cmp
mov
loop
ret
add
push
cmp
fstp
cmpsb
xorl
imul
popl
pop
popa
jmp
aad
notl
inc
xchg
add
inc
out
xchg
inc
mov
dec
cmp
sub
xchg
pop
adc
lret
sbb
xor
jo
xor
jl
jle
inc
repz
pusha
cli
test
fs
mov
push
dec
xchg
hlt
push
vpavgb
arpl
das
nop
lods
rcr
pop
sbb
mov
inc
mov
js
fcoms
loopne
pop
js
mov
push
jae
sti
je
nop
je
or
outsl
ss
xlat
cmp
sarb
jg
mov
test
adc
cmpsl
cmp
fimuls
stos
cld
fcoml
subb
stos
or
xchg
loop
enter
xor
sahf
mov
mov
ret
xchg
int3
imul
fistps
call
sub
adc
fmul
sbb
les
add
popa
mov
cmpsb
mov
lods
mov
fucomp
sub
subb
call
leave
push
gs
sti
pop
and
sub
adc
sbb
clc
daa
push
mov
loop
out
xchg
cmpsb
shlb
sbb
and
cmpsb
ret
jo
pop
xchg
adc
scas
in
lret
nopl
xor
or
inc
push
adc
xchg
outsl
xor
jmp
pop
imul
lods
aaa
xor
scas
add
pop
movsb
je
outsb
jbe
leave
das
sbb
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
scas
sub
xchg
jle
jg
jle
rol
xchg
jnp
inc
repnz
and
int3
xor
cmp
cmp
add
idivb
pop
xchg
outsl
nop
pop
mov
inc
xor
sbb
xchg
inc
xlat
inc
cwtl
inc
ds
imul
xor
and
add
inc
dec
xchg
sub
and
insl
out
dec
rclb
mov
ja
pusha
outsl
ss
addr16
pop
ret
mov
shr
test
cmpsl
les
lret
aaa
data16
jo
mov
fsubs
xlat
push
jl
pop
mov
imull
cmp
popf
jecxz
dec
mov
and
lods
sub
mov
push
xchg
cwtl
nop
stos
push
pusha
jbe
mov
fwait
movsl
mov
in
adc
cli
push
mov
out
push
xchg
xchg
es
jge
call
adc
mov
push
jo
icebp
mov
lds
scas
int3
cwtl
mov
xchg
cmpsb
mov
sarb
test
mov
pop
sbb
into
push
add
add
xor
fnstenv
xor
pop
lods
jns
pop
out
dec
fsubr
cwtl
leave
enter
dec
mov
mov
leave
popf
xor
dec
ret
push
pop
in
rorb
mov
dec
out
mov
repnz
sti
icebp
or
adc
sub
test
arpl
cmpsl
sub
lret
iret
inc
dec
sti
arpl
jp
pushf
pop
out
lret
aad
sub
pop
dec
iret
jnp
pusha
out
arpl
outsl
dec
mov
jmp
std
iret
lahf
call
sahf
xlat
adc
ljmp
or
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
lret
jnp
dec
jle
movsb
jg
jle
shll
xchg
pop
adc
push
fdiv
sbb
pop
mov
and
jecxz
pop
js
mov
cli
pop
out
rclb
jno
inc
aas
mov
clc
push
std
or
mov
inc
dec
add
and
ret
popl
dec
xchg
push
mov
mov
mul
cld
rolb
leave
mov
sarl
lcall
mov
scas
pop
faddl
loop
notb
xor
mov
mov
sahf
rorb
aaa
mov
movsl
and
fidivrs
xor
scas
and
push
mov
popa
scas
jmp
mov
xchg
les
into
out
loope
xor
push
ret
mov
cs
aaa
mov
popf
push
sbbb
popf
cld
xor
mov
mov
sbb
iret
lret
sarb
fnstenv
popa
mov
adc
cs
or
js
lock
insl
lods
pop
int3
mov
push
mov
rclb
decl
test
mov
popa
sbb
jno
sbb
mov
test
adc
mov
js
xor
inc
xor
lret
call
and
ret
pop
je
repz
or
pop
pop
lcall
popf
ljmp
push
cli
push
fistl
int
loopne
cmp
push
push
mov
mov
push
aas
dec
mov
mov
cs
adc
pop
pop
dec
mov
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
add
add
add
bound
and
jb
sbb
lahf
stos
orl
push
dec
and
pop
ljmp
aam
mov
push
mov
dec
mov
xor
cld
mov
or
jp
pop
mov
test
pop
push
adc
inc
rorl
pop
push
lahf
inc
pop
imul
push
mov
mov
adc
dec
arpl
rorb
push
pop
and
push
pop
xor
test
or
push
inc
les
xor
adc
shl
pop
mov
mov
movsb
lods
cmp
push
pop
pop
lret
test
bound
fisttpl
roll
sbb
sub
leave
dec
daa
cmp
sub
xchg
sub
xor
aaa
or
mov
add
push
sub
lock
jl
and
adc
loop
push
add
sbb
ret
mov
shll
sub
add
push
pusha
in
jle
lcall
pop
loope
add
add
dec
pusha
xchg
xchg
loope
mov
pushf
inc
leave
xchg
imul
mov
dec
mov
or
adc
adc
sarb
sbb
dec
or
push
or
insl
insb
in
mov
int3
out
sbb
sub
and
int
xchg
dec
mov
lahf
mov
pusha
shll
popf
sti
xchg
popa
data16
push
mov
jle
cs
mov
add
pushf
stos
push
arpl
repz
pop
pusha
shl
jno
cltd
fsub
mov
mov
mov
xchg
xchg
dec
xchg
cwtl
inc
pop
xchg
cs
mov
icebp
in
loop
cmp
pop
xchg
scas
mov
pop
sub
test
push
push
jle
xor
stos
cltd
lahf
scas
sti
mov
mov
xchg
mov
cmc
shll
popa
subl
enter
xchg
push
in
cmp
xor
pop
leave
loope
pop
repnz
push
out
push
push
xlat
add
add
adc
mov
mov
push
mov
roll
add
daa
dec
cmc
aaa
fisttpll
in
xor
call
fstps
pop
mov
arpl
mov
fs
push
sub
in
out
mov
inc
xchg
outsb
pushf
inc
xor
mov
sbb
pop
cmp
push
test
push
bound
ljmp
inc
pusha
idivl
in
pop
nop
push
insl
out
mov
mov
push
mov
out
lds
xor
es
mov
fldenv
sub
fbstp
test
inc
inc
pusha
hlt
sub
jne
mov
shll
sub
pusha
in
push
mov
enter
iret
movsb
bound
cltd
arpl
cmp
cmp
int3
rclb
jo
int
in
test
movsb
pusha
je
push
leave
and
cmpsb
roll
or
ss
jge
dec
fadds
xor
sahf
inc
pop
outsb
jmp
or
mov
rcl
out
in
add
inc
fisubs
lcall
add
subl
roll
jle
jns
jmp
add
add
mov
loopne
out
xchg
inc
and
push
leave
movsb
or
fiaddl
dec
mov
enter
call
fdivr
shlb
xor
ret
arpl
lret
jae
xor
pop
and
jle
sub
dec
call
ret
test
ss
jmp
adc
mov
lods
enter
mov
mov
adcl
sti
ljmp
sub
jl
push
ret
jecxz
mov
jp
mov
and
xchg
cmp
jo
int
loope
inc
popa
adc
pop
ret
ja
cwtl
lock
sub
jecxz
shlb
mov
push
xor
adc
rcr
insb
xchg
sbb
mov
jecxz
mov
test
scas
out
imul
mov
add
mov
xor
jle
cmp
shl
notl
leave
out
popf
xor
sbb
int3
cmpsl
enter
outsb
mov
add
pop
jae
or
pop
dec
or
jae
mov
aad
add
ds
cmp
lock
push
daa
jp
arpl
lods
add
xchg
mov
data16
sbb
cmpsb
stos
sub
into
mov
jb,pn
call
aaa
push
xor
cld
out
insb
mov
insl
inc
inc
data16
mov
movsl
jo
popf
inc
mov
in
cltd
jge
sub
rcll
imull
dec
movsl
pop
int3
push
je
into
popa
les
inc
dec
jne
shlb
sub
mov
aad
dec
outsb
out
dec
iret
mov
mov
inc
adc
and
stc
cli
mov
in
in
cmpsb
lea
ss
inc
inc
mov
or
lret
pop
xor
mov
fisttps
pop
fdivl
jnp
add
adc
pop
dec
stos
pop
sbb
inc
xor
cld
push
subb
xchg
mov
and
icebp
mov
frstor
add
shll
jecxz
or
add
jg
cmc
insl
cmc
out
lcall
enter
or
sahf
cmc
add
add
cmp
outsb
pop
lods
out
sub
push
adc
aad
push
mov
filds
cmpsb
addl
jl
pushfw
mov
dec
dec
lock
rorl
stos
jle
adc
aaa
enter
cmp
adc
nop
sbbb
mov
sub
add
xlat
mov
test
mov
xor
cmp
fdivr
insb
pop
xor
push
lahf
xchg
xor
cli
mov
cs
pushf
popa
jmp
divl
loop
fcmovnu
lds
push
int3
mov
out
or
mov
popf
or
ret
or
lret
pop
ss
sbb
cmp
repnz
add
mov
clc
scas
push
movl
add
xchg
popa
or
cmp
test
cmpsl
jbe
mov
mov
fisttpl
add
add
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
sbb
sbb
ljmp
setbe
mov
xor
pusha
xorl
dec
jp
mov
out
ret
inc
fisttpll
sarl
in
out
jge
push
or
aad
adc
pusha
cmp
sub
mov
je
hlt
out
push
push
lock
sbb
add
jmp
cmp
add
out
fnstsw
xchg
xor
std
popa
lock
fs
lcall
xchg
pop
pop
or
ja
jecxz
enter
bswap
xchg
aam
adc
and
add
out
pop
out
xchg
jg
jmp
add
sbb
add
sbb
push
add
outsl
xchg
ljmp
imul
fnstsw
xchg
pop
sarl
cmp
add
iret
push
out
les
insb
cmp
mov
les
cmp
out
xor
shll
sub
add
add
jle
and
scas
sti
jle
pop
push
pop
sbb
mov
add
enter
scas
jecxz
shr
test
loop
mov
xchg
dec
jnp
cmpsb
push
lahf
mov
mov
clc
out
movsl
jb
or
or
cmp
cmp
adc
imul
repz
mov
shr
jne
sbb
push
into
ud1
cmc
sub
fnstcw
int3
xchg
ss
gs
daa
jae
pop
clc
push
out
and
sbb
sub
jno
int
mov
subb
popf
popf
rcll
cmc
sbb
test
adc
adc
mov
and
mov
movsl
mov
mov
add
or
sbb
push
aaa
test
mov
test
pop
loopne
std
jo
push
pop
push
aas
push
dec
inc
inc
mov
push
xchg
jmp
adc
cmp
mov
aaa
xor
rorl
cwtl
movl
add
lahf
fnstcw
ss
lahf
stc
bound
push
sbb
add
add
arpl
out
push
in
push
adc
inc
lods
mov
imul
jae
pop
mov
push
or
pop
decl
mov
xor
pop
push
std
jne
sub
ret
cli
fs
rcr
dec
lret
je
cli
mov
adc
xor
fcoml
xor
cmc
cld
dec
arpl
adc
out
pushf
out
fildl
hlt
lock
pop
jae
fnstenv
lods
ds
shrb
jne
adc
mov
jmp
in
shlb
andl
mov
call
std
jecxz
cmpsl
mov
mov
lahf
jo
mov
or
rolb
inc
ret
dec
push
cli
roll
or
pop
jecxz
adc
cmc
add
adc
aad
mov
sbb
jecxz
cmpsl
cs
pop
xchg
inc
xor
pop
mov
inc
inc
push
iret
sbb
dec
loop
push
add
add
push
jl
jle
insb
out
cs
daa
mov
add
mov
mov
mov
or
jle
pop
dec
cs
popa
scas
jecxz
and
pop
nop
adc
iret
mov
cmpsb
mov
inc
ret
xchg
adc
icebp
fldenv
mov
stos
shrl
roll
push
jp
punpcklwd
les
es
ss
in
pop
call
push
lods
lea
xlat
mov
push
cs
jo
pop
ds
mov
fisttpl
xor
sbb
mov
jnp
into
enter
rcrl
into
xchg
jb
cwtl
in
data16
divb
and
dec
pop
es
sbb
add
repnz
insl
and
test
or
int3
imul
shrl
pop
cmp
pop
popf
dec
xor
mov
and
scas
xor
push
clc
xchg
leave
mov
dec
sbb
xchg
inc
cld
cmp
xor
ret
and
cmp
adc
das
sub
dec
xor
test
dec
or
add
add
fwait
mov
in
xor
adc
push
faddl
add
adc
jae
rclb
xlat
ja
flds
int
movsl
pop
enter
mov
inc
sub
iret
shrl
movsl
shl
or
sti
or
dec
and
jp
push
mov
test
push
push
or
arpl
mov
dec
mov
repnz
mov
jne
in
xchg
shr
jb
pop
mov
cmp
repz
jno
xchg
xchg
dec
shrb
rcll
or
pushf
sub
push
cmp
in
and
mov
dec
adc
jmp
rcrb
movsb
mov
repnz
frstor
cld
add
mov
fisubs
je
mov
ljmp
xlat
jae
lahf
int3
ljmp
testb
mov
std
mov
jnp
lahf
lods
call
adc
es
add
aaa
data16
jne
mov
lcall
add
add
jns
int
stc
sahf
jae
sbb
repnz
xor
in
outsl
cld
jmp
mov
cmp
lea
es
repnz
adc
bswap
js
push
fsubrl
sbb
xchg
or
subl
mov
mov
insl
aaa
adc
push
loope
jle
inc
add
nop
ljmp
mov
push
cmp
pusha
dec
es
or
jecxz
add
iret
inc
jnp
int
adc
out
add
mov
in
in
dec
ljmp
pop
cmp
sbb
push
xchg
xchg
mov
jecxz
xchg
psraw
jecxz
sub
dec
mov
outsl
lock
mov
sub
fmull
jae
je
scas
and
mov
pusha
xor
pop
loop
aam
ret
push
xor
cmpsl
pop
xchg
outsb
aam
mov
mov
add
add
add
jnp
sti
xchg
lahf
mov
lods
sbb
add
add
out
sahf
cld
xchg
insl
pop
mov
sbb
fbstp
rclb
push
shr
lcall
imul
nop
or
je
sbb
fistps
in
push
aaa
cmp
or
mov
aaa
adc
sub
nop
add
xor
pop
mov
test
dec
mov
lret
cmp
das
fcoms
js
xor
mov
jno
sub
in
xchg
es
sbb
fnsave
jbe
fisubl
mov
mov
insb
sub
and
pop
cmp
ret
fs
push
lds
fs
scas
mov
cli
jp
inc
jo
pop
push
sarb
jge
test
add
cmpsb
mov
loopne
sub
sub
test
in
iret
pop
jbe
test
fldcw
mov
aad
push
push
jecxz
sbb
int
mov
xor
icebp
js
std
and
popa
mov
jbe
add
sub
pop
sarl
mov
int
filds
add
insb
xor
inc
push
incl
sbb
lock
mov
xor
stos
xchg
push
push
lret
cmpb
sub
rclb
fucomip
das
sub
cltd
out
fsubr
jnp
and
mov
cmp
xchg
insl
bound
adc
sti
and
subb
mov
cld
fs
sarb
xchg
mov
pop
cmp
mov
imull
das
adc
sub
mov
test
xchg
rorb
mov
mov
dec
repz
in
mov
shll
enter
das
in
das
inc
dec
stc
jge
mov
mov
scas
jg
mov
mov
jne
xlat
cmp
imul
das
jecxz
mov
mov
cmc
jl
push
pop
inc
mov
sbb
test
push
mov
fldt
push
add
add
repz
std
repz
push
cli
mov
add
inc
test
sbb
or
xor
mov
lods
mov
cltd
dec
mov
stos
jns
aaa
cmpsl
push
lock
fdiv
and
or
push
inc
pop
cltd
mov
or
test
je
jmp
sbbl
adc
pop
jmp
sti
ds
test
outsl
fs
jl
insl
rsqrtps
cwtl
mov
outsl
add
pusha
mov
push
popf
pop
js
mov
push
push
xor
pop
ss
mov
pop
inc
addr16
neg
jb
and
mov
pop
xchg
mov
aam
dec
and
jmp
scas
xor
and
xor
jns
fldcw
dec
push
or
out
inc
stc
adc
jecxz,pn
xchg
cltd
lret
scas
movsb
xor
jge
sub
xchg
jmp
je
inc
mov
out
cltd
rcrl
pop
sub
dec
loope
rcr
sbb
loope
add
add
lock
cmp
arpl
je
mov
add
add
add
in
scas
add
sub
and
sub
dec
pop
xchg
pop
push
in
pop
or
xor
adc
fs
xchg
sub
fcomps
cmp
xlat
xchg
push
mov
pop
gs
into
dec
adc
push
and
and
into
out
cmp
pop
adc
push
mov
mov
inc
inc
leave
int3
xor
mov
dec
ss
xchg
pop
add
cs
and
call
jl
mov
jg
jle
movsb
sub
cmp
cltd
push
push
loope
add
xchg
shll
dec
into
xor
pop
stc
cmp
lcall
fxch
sbb
js
cmpsl
repz
call
pop
pop
xorl
pusha
cmpsb
mov
ds
push
das
cmp
in
xchg
lock
rorb
movsl
test
cs
sbb
jecxz
dec
das
mov
into
xchg
push
adc
or
cmp
add
insl
lcall
mov
inc
sub
or
sub
add
add
xor
icebp
out
int3
pushf
ja
dec
jmp
out
test
pushf
and
ljmp
ljmp
imul
cs
add
sub
negl
cmp
or
xchg
jmp
mov
mov
ret
movsl
dec
sbb
push
loopne
out
int3
inc
aam
aad
sbb
push
push
jp
xchg
pop
lret
faddl
xchg
movsl
or
cmp
outsb
in
insb
int
mov
and
hlt
xor
mov
movsl
sarl
mov
add
fmulp
aaa
test
or
adc
adc
xor
mov
popf
xor
xchg
mov
shll
andb
push
xchg
std
scas
lret
stos
adc
mov
push
sub
dec
dec
iret
imul
stos
cli
fcomp
lods
sarb
push
xlat
push
or
ljmp
add
lret
xchg
in
mov
incl
ror
mov
add
mov
pop
dec
insb
jne
push
jbe
xchg
sub
popa
js
xor
in
scas
sub
pop
stos
add
imul
cli
int3
mov
cmp
das
and
mov
shl
bnd
cmc
enter
cmpsb
dec
rolb
fisubrl
rcrl
adc
pop
pop
std
push
push
fucomip
stos
mov
add
jb
test
aas
sbb
sbb
sbb
jl
insb
es
imul
out
in
pop
mov
adc
mov
and
test
vmovsldup
sub
lods
add
sub
jno
pop
out
mov
fldenv
jl
iret
in
jbe
mov
jno
xchg
xchg
dec
inc
xlat
add
mov
std
mov
ficomps
or
mov
cmp
imul
mov
mov
test
stos
rolb
add
add
sub
in
negl
sub
movsb
mov
aas
push
ss
add
jecxz
fsubrl
inc
mov
stc
inc
mov
xchg
jle
mov
popf
jp
fimuls
loopne
mov
mov
cmp
scas
pushf
das
call
vmwrite
iret
add
repnz
repnz
data16
jge
arpl
inc
orl
adc
pop
xchg
cs
add
imul
sub
sub
and
add
shlb
inc
es
fs
adc
xor
xchg
push
aaa
iret
mov
mov
adc
dec
xrelease
xchg
sub
fdivr
add
outsb
jge
sti
pop
sub
popa
call
aaa
out
jmp
adc
adc
mov
sti
sahf
ja
xrelease
xor
mov
cmp
mov
testb
mov
add
in
ja
mov
or
mov
imul
add
add
mov
stc
dec
push
fdivl
pop
ljmp
add
fs
in
jl
push
subb
lahf
dec
fstps
cmpsl
je
xchg
push
push
add
hlt
mov
scas
lret
in
fldt
lds
jno
add
aam
sbb
xchg
inc
je
repnz
and
adc
dec
and
faddl
adc
leave
divl
daa
mov
bound
mov
and
arpl
add
idiv
sbb
repnz
gs
push
xor
shlb
sbb
pop
mov
sbb
xor
std
repz
push
xchg
sahf
outsl
lret
in
dec
mov
pop
out
or
mov
jle
ret
lcall
sbb
dec
xor
call
ljmp
shll
sti
loopne
pushf
bound
pop
mov
idivb
ljmp
rorb
sub
popa
add
add
adc
push
push
push
mov
filds
add
add
int
inc
jns
or
stos
cs
inc
out
mov
aad
ror
sbb
xchg
or
pop
pop
mov
or
cs
fsubs
and
and
jno
jbe
in
jp
xchg
jle
mov
dec
cmpsb
in
dec
je
inc
mov
in
arpl
mov
insl
inc
shlb
cli
jne
test
mov
hlt
mov
pop
lds
js
stos
clc
rorb
mov
mov
lods
or
sbb
clc
xchg
push
mov
int
xor
add
shr
js
cmp
loop
inc
adc
jl
adc
and
out
push
iret
dec
jp
inc
fs
lcall
into
pop
sbb
out
xchg
push
cltd
mov
call
mov
and
cmp
dec
cltd
cmp
xchg
mov
fisttpll
mov
mov
sub
clc
int3
or
das
and
push
pop
stos
sub
add
out
repnz
add
pop
lcall
les
nop
dec
jg
out
add
fnstsw
or
repnz
pop
lcall
cwtl
jle
stos
jb
test
mov
mov
adc
dec
orb
outsl
or
and
jnp
inc
in
fidivs
rcrl
adc
or
or
iret
jl
xor
sbb
ja
sbb
pop
xchg
dec
pop
cs
ds
into
mov
repnz
js
lds
andb
repz
cmc
add
adc
pop
pop
shll
pop
lods
push
mov
add
repnz
mov
adc
mov
jne
in
mov
pop
in
out
bound
push
int
xor
dec
xor
dec
xor
lahf
sbb
arpl
and
aas
push
das
pop
pusha
adc
lods
mov
jle
lret
enter
aaa
sbb
dec
pop
push
nop
xor
mov
inc
in
out
daa
repnz
shl
mov
add
pop
mov
push
decl
push
sbb
dec
call
add
mov
icebp
sub
push
xor
xchg
push
testl
jle
int3
and
call
sub
push
sahf
mov
fiadds
pop
out
jmp
lea
arpl
or
pop
push
leave
das
fcoml
xchg
loop
add
add
imul
sbb
push
aaa
cmp
push
inc
mov
iret
movsb
xchg
push
out
jp
lret
das
push
xchg
aas
stc
cmp
aam
mov
jb
inc
adc
aad
jb
dec
xchg
test
sahf
xor
add
ja
pop
mov
sub
sub
test
cmp
dec
in
xor
mov
aam
adc
test
fs
pop
loopne
jp
xchg
push
jg
cmp
jbe
mov
jg
daa
xchg
pop
xchg
fildl
dec
cmpsb
sarb
fimull
out
mov
add
sti
adc
adc
add
je
push
mov
add
add
jmp
in
push
sub
or
add
add
mov
addr16
lds
cwtl
or
mov
inc
ret
xor
fiaddl
inc
push
jbe
loope
cmc
push
xchg
in
mov
aad
loop
xchg
rcrl
in
cmpsl
jb
shl
cltd
out
jne
out
jbe
mov
mov
popf
pop
mov
test
iret
jge
in
call
enter
push
dec
cmp
movl
jge
adc
mov
mov
pushf
jbe
lds
faddl
push
orl
inc
mov
sub
jmpw
sbbb
sbb
test
in
inc
out
fstpl
out
mov
fcoms
mov
test
out
mov
and
jae
jb
inc
shl
shrb
push
pop
xchg
les
ljmp
gs
inc
xor
xchg
add
shll
int3
jmp
pop
movb
ds
mov
aas
mov
cmp
add
in
add
add
outsb
xor
mov
lcall
ljmp
shrl
jp
inc
les
and
lods
jmp
mov
pop
cmpsl
push
cmp
shl
xchg
pop
loope
movsb
cli
pusha
push
jno
or
mov
ret
stos
sub
mov
adc
repz
mov
mov
sbb
fs
fwait
mov
inc
or
cmp
sbb
repz
in
std
out
adc
cld
bound
jbe
aam
dec
dec
fadds
and
xchg
into
mov
dec
inc
lods
inc
push
push
call
cli
cmp
shrl
dec
in
lods
pop
fucomip
lds
push
xor
call
outsl
fs
daa
bound
inc
cwtl
call
daa
sbb
xor
xchg
lcall
shrb
js
add
cmpb
xchg
sbb
add
adc
jg
inc
mov
data16
pop
mov
jb
test
lods
rolb
add
repz
ror
lock
jnp
xor
xchg
aas
vmulps
add
add
push
sub
outsb
and
mov
andb
xor
and
pop
pop
lea
fwait
fs
and
sbb
push
jge
sub
fdivrs
clc
mov
pop
xchg
test
sbb
or
xlat
in
dec
mov
outsl
mov
scas
mov
pushf
pop
std
or
xor
aam
xor
mov
adc
bnd
pushf
adc
lret
jbe
mov
ss
xchg
push
test
imul
or
pushf
xchg
stos
jecxz
cmp
push
add
or
mov
dec
xor
dec
xchg
xchg
sbb
imul
and
cltd
xchg
sub
mov
sbb
cmp
push
in
jno
jge
inc
jp
fwait
push
jne
inc
jle
or
stos
in
xchg
cld
and
sbb
lahf
stos
fwait
push
lcall
enter
cmpsb
daa
dec
jp
push
repnz
mov
cmc
mov
add
and
repz
fisubs
mov
add
add
lcall
movsl
adc
push
xor
xchg
adc
sbb
sub
mov
das
adc
scas
mov
into
adc
xchg
cld
rclb
dec
xchg
test
iret
stc
lock
scas
jecxz
mov
pop
sub
xor
arpl
enter
hlt
xchg
fists
xchg
incl
jg
sbb
mov
out
call
rorb
fs
mov
out
ljmp
pop
or
xchg
jg
fimull
fldt
cmp
fucomi
fs
mov
adcl
dec
dec
push
int3
and
push
enter
jp
add
arpl
mov
or
push
xor
cld
adc
out
test
add
imul
push
cmp
pop
rcrb
test
dec
lret
fsubrl
push
add
jb
js
enter
out
sbb
adc
adc
add
inc
mov
add
jae,pt
bound
mov
std
cmpsl
and
test
jo
js
sbb
loope
pop
scas
popf
lods
std
pop
dec
adc
dec
adcb
scas
insb
les
aam
inc
pop
cmpsb
or
lea
xchg
sub
mov
lahf
stc
pop
or
out
data16
and
jl
inc
jno
or
xor
add
loop
mov
sbb
testl
push
sub
mov
mov
insl
test
outsb
pop
addl
sub
xchg
dec
sbb
ljmp
adcl
dec
fwait
in
xchg
push
jmp
lods
cs
push
mov
cmc
sub
xlat
lahf
mov
lock
fmuls
cmp
mov
fdivrs
fstpl
mov
jb
or
jnp
mov
add
add
scas
push
repz
cmc
scas
sub
mov
push
add
add
insb
repnz
jnp
and
aas
lcall
push
cld
sub
or
mov
addr16
sti
aas
adc
mov
rcrl
mov
mov
push
mov
mov
or
add
popf
imulb
cmc
pop
loopne
adc
and
push
pusha
jmp
pop
sbbb
mov
jns
je
add
movsb
fwait
rorl
pushf
mov
add
in
ss
js
cli
sbb
add
fisubrl
fnstsw
loopne
ror
sbb
and
mov
pop
add
mov
dec
or
add
mov
mov
in
cltd
outsb
test
mov
nop
pop
test
push
sbbl
mov
es
adc
lcall
mov
or
fwait
mov
adc
fidivl
add
lret
pusha
rorb
cmpsb
mov
ret
out
add
add
inc
cmp
mov
or
mov
test
cmp
sti
insb
mov
adc
aaa
pop
mov
sub
mov
out
bnd
fidivs
dec
fwait
repnz
jp
xor
enter
inc
sbb
sub
loope
mov
cmp
fidivl
or
fwait
int3
sub
lods
jp
imul
adc
repz
or
bound
mov
test
adc
inc
or
sarl
arpl
out
inc
testl
lods
mov
fmuls
dec
bound
xchg
in
rorl
imul
loopne
ficoml
mov
inc
movsb
push
inc
stos
mov
test
out
test
inc
add
lcall
popa
cmc
push
fdivr
xor
push
xor
jnp
xchg
add
add
gs
testl
das
fmuls
lock
add
sbb
fdivrl
ror
notl
cmp
addb
outsl
inc
dec
lods
dec
and
fstpt
std
hlt
fwait
out
iret
cli
add
divl
and
push
mov
stos
cmpsl
sbb
pop
lret
push
mov
xor
mov
sarb
jl
ret
idivl
jns
sahf
mov
loopne
push
inc
out
andl
test
mov
mov
inc
inc
pop
sti
adc
cmp
mov
in
outsl
dec
iret
sti
rclb
inc
test
jg
aad
cmp
jecxz
push
adc
and
cmp
ljmp
and
mov
mov
imul
xchg
cmovo
nop
addr16
div
adc
and
mov
push
xchg
cli
push
repnz
pushf
shrb
dec
jle
cmp
sbb
mov
cmp
dec
icebp
out
fisttps
dec
mov
add
add
xchg
mov
mov
pop
das
hlt
add
ja
add
add
xchg
out
lods
popf
std
fists
in
inc
loopne
lcall
into
loop
xor
cli
popa
rorl
std
test
inc
pusha
mov
xchg
dec
cmp
scas
enter
lahf
imul
push
xor
notb
ja
xchg
xchg
fdivrl
fsts
out
jne
int
das
inc
adc
ljmp
adc
mov
shrb
push
jb
xchg
iret
jle
cmp
les
inc
fists
or
arpl
scas
xchg
mov
cmp
test
fildll
lcall
cmp
pop
jmp
jns
jle
mov
mov
insb
jae
xor
ljmp
ret
and
or
movsb
dec
icebp
push
lds
mov
daa
int
loop
xchg
mov
repz
mov
push
push
mov
cmp
ret
sub
ljmp
add
add
fucomi
xor
in
jl
add
add
or
add
fldcw
inc
jecxz
mov
xor
dec
cmc
insb
jb
cli
subb
mov
loopne
pop
aaa
call
es
xchg
lret
inc
and
pop
mov
and
fnstcw
daa
push
in
shr
mov
xor
or
dec
push
movsb
addr16
test
sub
pop
clc
decb
dec
or
cmp
xchg
outsb
jo
add
mov
fs
sub
repnz
dec
aad
inc
sub
adc
shrl
das
jae
adc
stc
stc
sbb
sub
in
into
lock
adc
and
xchg
push
shlb
lds
cmpsl
stos
je
outsb
push
into
fcoms
addr16
push
push
in
inc
push
push
shll
dec
scas
xlat
mov
ljmp
scas
mov
fstps
xor
jecxz
aad
rolb
add
jbe
push
inc
pop
jns
aas
loopne
sub
mov
aaa
xor
add
fldenv
dec
xor
and
xor
addr16
ljmp
push
mov
daa
pop
adc
sub
outsl
xor
mov
xchg
inc
shr
and
jb
lock
out
pop
flds
inc
lea
cmp
push
gs
adc
cmp
mov
shlb
rcrl
pop
mov
cmp
roll
and
popa
sbb
inc
pop
out
in
cmp
sbb
jge
cmp
ds
dec
shr
les
call
movsb
fistps
dec
out
je
pop
hlt
push
mov
outsb
sarl
inc
mov
imull
push
fmulp
xor
xor
jae
pop
ja
sub
inc
aaa
decb
jae
inc
nop
or
ljmp
adc
xchg
cwtl
sub
sbb
xchg
mov
cmpsb
cmp
jge
sub
shlb
add
cmpsb
sbb
jnp
mov
movsl
xchg
push
push
hlt
add
add
and
mov
std
cli
mov
xlat
inc
ds
and
pop
cmp
out
mov
fidivl
shlb
pop
aas
cs
daa
and
andb
xor
adc
pop
inc
pop
jmp
in
xchg
shrb
push
sbb
sub
pusha
out
hlt
jae
orb
pop
loope
ljmp
arpl
push
xlat
leave
mov
inc
stc
loopne
add
loopne
lahf
test
lea
push
inc
pop
out
bnd
scas
aas
mov
cmp
mov
cmp
sbb
out
push
minps
das
mov
mov
stc
mul
test
xchg
and
and
es
mov
mov
add
fwait
mov
jnp
xchg
xlat
out
jo
inc
sub
mov
call
push
xor
mov
mov
or
mov
sub
jae
sub
pop
arpl
and
inc
add
add
xlat
pop
xlat
jg
mov
mov
clc
mov
add
add
add
xchg
jmp
mov
subb
popf
aam
mov
aas
gs
mov
js
inc
imul
adc
mov
push
in
fwait
iret
lret
cli
in
mov
std
sbb
cli
out
add
fisubs
add
sbb
mov
popa
popa
mov
daa
add
imul
jbe
das
jle
fisttpll
loopne
movsl
movsl
push
mov
rol
pop
cs
orb
idiv
inc
add
jmp
loopne
bound
jge
loope
mov
xor
fcomp
in
push
fistl
movsl
inc
cli
out
add
ljmp
and
and
out
xor
cmp
lea
dec
ja
sahf
dec
dec
lahf
mov
insb
insl
pusha
hlt
outsl
les
loope
daa
and
sbb
inc
mov
enter
or
add
lock
insl
mov
add
add
fdiv
mov
and
lahf
jl
testb
add
rol
nop
and
mov
lea
dec
inc
xor
xor
jp
stc
sub
dec
mov
mov
jae
xor
orb
sub
std
js
sub
cmp
loop
mov
jne
iret
inc
fldenv
mov
push
mov
loopne
popa
mov
popa
jo
fstpt
or
xlat
pop
lock
jg
shrb
addb
or
bound
jns
leave
lahf
sub
push
pop
shlb
ja
outsb
sbb
mov
sbb
or
sbb
cmc
ret
sbb
xor
push
out
outsl
xchg
mov
add
dec
aas
out
ss
mov
sti
leave
insl
stc
add
adc
in
add
push
lds
cmpsl
xor
and
xor
sbb
pusha
pop
dec
adc
mov
scas
adcl
imul
pushf
and
add
test
mov
or
enter
add
and
test
cmp
mov
insb
mov
arpl
popf
or
loope
mov
ljmp
lret
and
test
int3
mov
loop
mov
repz
xor
jo
or
xor
pop
mov
pslld
rcrl
pop
iret
roll
or
addb
adc
add
fcomps
mov
xlat
imul
mov
gs
mov
mov
push
inc
aam
cs
push
lahf
stos
jmp
xchg
adc
popf
xor
pop
mov
jp
gs
mov
and
push
loope
add
or
or
aam
mov
add
jmp
idivl
arpl
insl
testb
pushf
in
in
add
push
mov
sbb
jle
int3
adc
stc
jmp
add
jmp
imul
lahf
repnz
add
jne
lcall
add
cmp
fwait
data16
adc
sbb
lods
movsl
in
push
scas
fwait
push
push
push
sbb
loop
cmp
xor
and
shrl
lret
dec
inc
inc
rolb
lock
lcall
mov
lret
mov
add
lods
test
nop
int3
mov
roll
dec
pop
and
add
loop
pop
mov
fldt
xor
rorl
jecxz
lock
outsb
lods
xchg
and
xor
mov
mov
rorb
ret
sub
pop
out
movsb
adc
and
mov
call
push
add
mov
inc
jns
leave
mov
rorl
int
out
xor
xchg
push
in
xlat
inc
add
es
cmp
out
roll
sbb
mov
ljmp
cmc
xor
imul
mov
pusha
adcb
add
pop
lods
pop
cli
cmc
cmpsb
lret
stos
jle
jb
stc
add
add
pop
push
js
addr16
mov
xlat
shrb
xor
add
popf
test
xchg
push
add
fildl
rcll
addr16
adc
xchg
pop
popw
test
insb
inc
mov
sbb
dec
cmp
push
lcallw
stc
push
and
std
jecxz
add
dec
and
mov
aam
jb
inc
ljmp
jmp
cmp
mov
xchg
and
aad
sarl
pop
inc
imul
loop
cmp
xor
outsb
out
or
jmp
in
addr16
push
mov
cmpsl
lcall
sbb
mov
sbb
inc
fs
adc
shrl
cld
jg
xchg
daa
repnz
or
and
test
bound
sbb
fwait
push
adc
cld
mov
cmp
movsl
shll
mov
fs
jg
mov
add
add
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
pusha
lret
movsb
sti
pop
sub
lods
mov
test
cmpb
es
insb
mov
mov
sahf
mov
icebp
test
jg
push
imul
lret
repnz
and
push
sbb
hlt
shrl
mov
movsb
pusha
sub
or
pop
stos
pushf
insb
inc
sub
push
pop
cmpsl
into
sbb
aas
subl
mov
mov
dec
xchg
add
inc
mov
lahf
cs
mov
mov
fdivs
arpl
shlb
pusha
outsb
pop
lea
aam
mov
ss
adc
push
cmp
hlt
arpl
mov
loopne
lods
xor
subb
repz
cwtl
fwait
push
inc
clc
and
mov
out
out
pop
adc
cmpsb
mov
mov
rol
fldpi
cmp
xchg
sub
sub
xchg
bound
sub
mov
nop
test
aam
int
aaa
das
aam
jnp
arpl
add
add
pop
scas
jbe
sti
and
and
or
jnp
inc
test
push
sbb
sub
and
sti
dec
and
cwtl
pop
mov
notl
fwait
aad
loopne
mov
sbb
dec
loope
sbb
and
pop
add
aad
cmp
rclb
add
sahf
pop
inc
addr16
adc
leave
mov
adc
dec
lea
test
cmc
jge
mov
push
xor
into
lcall
mov
mov
sahf
mov
mov
ret
bound
sti
fstpt
jecxz
inc
mov
imul
cld
push
xor
inc
enter
jae
jl
inc
imul
cmc
or
test
hlt
push
mov
aad
not
scas
stos
adc
inc
fstpt
push
sbb
loop
push
sub
jle
fstl
xor
mov
daa
or
xrelease
add
arpl
addr16
sub
pop
mov
or
cld
add
add
in
loop
cltd
adc
or
fwait
jno
repz
ret
rclb
stos
les
cld
mov
fcompl
subl
jmp
or
sbb
dec
mov
pushf
sub
or
pop
mov
imul
add
xchg
stos
jmp
and
push
lret
dec
bound
enter
js,pn
repz
int
mov
xchg
dec
js
scas
dec
test
flds
mov
jge
addr16
and
iret
shr
cmp
xchg
and
stos
pop
xchg
movsb
out
sti
lcall
bound
mov
bound
mov
test
push
cld
fmuls
loopne
mov
mov
loopne
sub
pop
rorl
and
xorl
test
sub
push
lea
hlt
pop
mov
mov
repnz
loope
add
add
out
out
pushl
xchg
xor
je
dec
fnstenv
add
add
aas
rcrb
test
faddl
jb
inc
cltd
cld
jp
cmc
es
xchg
xor
shlb
cmpsb
imul
aaa
jns
es
test
lds
sti
mov
dec
mov
sbb
call
ds
in
sub
adc
in
sub
xchg
lods
xchg
cltd
test
mov
cmp
rcrl
cld
fs
mov
inc
ds
sti
mov
inc
sarl
sahf
xor
push
push
ds
movsl
push
pop
outsb
inc
fwait
arpl
aaa
mov
out
push
sbbl
or
jge
push
sub
popa
inc
int
je
shl
icebp
fildll
jmp
jp
cwtl
cmp
inc
xlat
call
int
loopne
adc
imul
ljmpw
dec
into
nop
aas
outsb
push
dec
jno
mov
mov
add
add
push
scas
mov
dec
pop
addr16
add
add
fidivl
lods
pushf
movsl
rorb
iret
loop
rclb
les
sub
mov
pop
mov
sbb
mov
lahf
je
ss
adc
rorb
jg
imul
and
lret
cmp
idivl
dec
xchg
stc
cmp
mov
sbb
mov
adc
hlt
mov
pop
cs
imul
pop
out
and
rorb
or
cmc
or
sub
jbe
out
repnz
fdivrs
into
mov
lods
nop
inc
push
push
jecxz
jae
dec
or
insl
repz
inc
sbb
and
mov
sub
cmpsb
lea
lahf
mov
pusha
sub
into
pop
cld
inc
mov
testb
dec
repnz
xchg
pop
mov
mov
or
mov
push
fstpt
imul
sub
xchg
inc
ror
subb
pop
in
sbb
pushf
dec
orl
test
add
aaa
xchg
and
movsl
mov
mov
mov
adc
add
fwait
mov
sti
cmpsl
dec
jb
outsb
mov
loop
sbb
sub
das
mov
xchg
adcb
fisubrs
imul
dec
sub
jle
pop
add
inc
jnp
into
outsl
ret
push
adc
leave
int
pop
xlat
sub
pop
sub
stos
mov
adc
xor
jne
adc
xchg
in
daa
inc
jae
adc
pop
mov
and
mov
cmp
ja
popf
push
adc
insb
sub
rcll
push
or
mov
xlat
call
stc
pushl
mov
out
jne
aam
es
push
in
out
mov
movsl
stos
out
daa
adc
out
out
jb
sub
cmp
mov
idivl
xor
bound
fstps
stos
add
sti
inc
xchg
adc
cmc
pop
sahf
pop
andb
loop
pop
add
aam
fcompl
xor
add
add
mov
push
jg
mov
jl
add
ret
add
loope
fidivrs
jmp
mov
jp
mov
cs
js
fildll
sarb
pop
divl
fs
out
in
jmp
sbb
cmp
clc
xchg
sub
aas
cli
jno
or
add
loop
in
xchg
cmpl
pop
ljmp
dec
sub
add
inc
fwait
fwait
fs
jnp
xor
lock
cmp
cmpsl
sub
std
push
lea
jmp
push
jns
pop
and
fcoml
xchg
enter
aad
int3
mov
adcl
jecxz
xchg
shl
fisubl
mov
xchg
pop
push
stos
and
adcb
dec
test
lcall
les
in
cs
and
push
outsl
or
mov
loope
mov
fldcw
or
pushl
or
xlat
mov
clc
lcall
or
popf
and
icebp
mov
loope
insl
and
add
add
mov
mov
lods
imul
xor
movl
add
adcl
loope
rcl
int
stos
test
aad
js
add
xchg
shlb
or
and
xorl
cltd
dec
js
cmc
pop
pop
cmp
sub
jp
pusha
and
or
pop
pusha
fisttps
repz
inc
sbb
test
pop
or
fidivrs
lret
sti
adc
add
push
test
and
out
sub
add
mov
dec
xor
pop
pop
mov
push
ljmp
mul
pop
and
jns
inc
cli
sbb
cs
dec
or
sub
les
out
out
adc
jecxz
or
enter
aad
cltd
loope
ret
mov
mov
in
jl
ds
or
push
mov
fildll
in
enter
jp
xor
rcrl
xor
lock
cmp
inc
cmp
jb
cwtl
cmp
es
mov
add
xchg
sub
scas
or
cmp
add
push
sub
add
add
mov
andb
inc
js
cmp
jmp
into
ja
dec
loope
nop
inc
test
pop
cwtl
mov
addr16
sahf
sub
mov
lahf
pop
cmp
and
jb
mov
iret
std
cmp
xchg
inc
xor
xor
lcall
push
inc
or
decl
shlb
ret
xor
jno
jmp
sbb
stos
mov
xor
ss
xchg
outsl
rcrl
gs
fs
dec
faddl
jle
pop
test
filds
testb
shlb
pop
cmpsl
call
xchg
xlat
mov
in
pusha
and
in
or
xchg
lds
sahf
push
push
fcomps
xchg
pop
lea
lea
fcom
je
iret
sub
cmp
jmp
insl
jne
jmp
fstp
lock
and
nop
mov
fs
inc
das
jecxz
mov
xchg
jmp
mov
bound
enter
dec
ss
shl
adc
add
add
hlt
fbld
mov
roll
add
add
pop
or
aad
movb
jo
popa
stos
enter
arpl
or
dec
insl
xchg
push
fwait
out
popa
jp
jno
mov
adc
lahf
cmp
inc
test
xorb
lock
and
ljmp
or
xlat
and
notb
pop
adc
sbb
cmp
cmp
divb
notb
jns
aaa
and
mov
stos
scas
xchg
and
scas
lcall
xlat
add
imul
jle
adc
daa
enter
mov
ja
push
mov
sbb
aaa
mov
pop
jns
leave
lret
test
dec
sub
dec
gs
sbb
insb
push
cld
cwtl
shll
outsl
fs
xchg
leave
scas
mov
pop
or
xchg
inc
jle
mov
test
pop
pop
mov
stc
int3
cwtl
pop
sbb
add
mov
into
fwait
add
mov
jmp
add
hlt
divb
pushf
fs
push
outsl
add
jo
adc
push
or
lret
cmpsb
mov
das
shl
shrb
sub
aaa
dec
pusha
lds
lcall
adc
mov
mov
xor
les
jb
jo
repnz
movsl
xchg
es
or
int
fucomip
mov
xchg
mov
push
xchg
jecxz
inc
mov
cmp
andl
sbbb
rolb
enter
das
in
pop
or
scas
xchg
adc
add
mov
inc
mov
mov
pop
mov
cmp
lret
or
pusha
mov
adc
jnp
jp
js
es
and
pop
jle
pop
or
outsb
dec
jmp
addr16
sub
sbb
push
inc
frstor
mov
in
imul
lcall
sbb
add
add
xor
mov
pop
sarb
in
mov
add
add
cmp
sbb
xor
sarl
push
lret
out
rcll
gs
pop
in
mov
push
out
push
dec
ja
in
sbb
and
lock
cwtl
cmp
dec
aaa
roll
sbb
fldcw
and
jge
loopne
inc
jle
adc
repz
sub
add
iret
je
pop
fsubs
dec
outsb
out
mov
outsb
add
mov
mov
scas
es
mov
inc
ret
stos
add
data16
inc
fadds
fidivrs
scas
or
iret
ret
f2xm1
mov
pop
mov
jg
dec
push
in
sbb
add
sbb
leave
add
and
and
sbb
repnz
leave
xchg
jbe
lret
ror
out
inc
xor
out
pop
fimull
fbstp
sub
cltd
jne
sbb
jle
sbb
aad
ljmp
pop
xlat
push
mov
add
add
inc
out
aas
mov
shlb
mov
add
popa
ds
jp
sub
popa
mov
mov
xchg
pop
orb
stos
daa
xchg
and
cs
cli
call
jecxz,pt
leave
lea
jg
outsb
fwait
mov
fidivrs
daa
bound
outsb
imul
pop
lds
loop
pop
pop
loop
push
clc
push
stos
dec
xchg
les
sarb
cmpsb
or
ds
rorl
cmp
daa
mov
dec
in
std
aas
aas
mov
lock
fcoml
inc
movsb
fmull
imul
ja
sbb
cmpsb
ljmp
cs
cltd
fldt
or
mov
pop
xchg
mov
fstpl
xchg
cmp
sbb
das
icebp
xor
shll
ss
add
dec
xor
mov
pop
int
mov
and
and
cmp
sub
int3
ds
xor
or
pushf
xor
xor
insb
or
add
push
bnd
dec
leave
and
pop
and
pop
add
add
mov
fwait
and
test
imul
iret
mov
cld
mov
mov
lret
mov
ds
stos
xchg
fildll
rorb
in
fimull
sbb
mov
inc
cltd
pop
xlat
in
pusha
insb
jns
xchg
stos
mov
int
cmp
push
xchg
inc
jmp
adc
push
pop
cmc
mov
and
ror
pop
fstpt
cwtl
ret
gs
insl
push
addr16
out
mov
popf
hlt
aam
sahf
pop
dec
pop
fcompl
rcrl
mov
xchg
das
xor
sub
push
pop
out
inc
into
aaa
mov
sub
stos
loopne
imul
rorl
cmp
sahf
xor
aas
sub
out
aas
test
in
or
dec
push
mov
mov
xchg
int
xchg
mov
scas
adc
jl
outsl
cs
xchg
popf
pushl
push
mov
add
sbb
in
out
ja
filds
mov
imul
or
add
jns
ds
lcall
addb
dec
adc
jl
std
in
andb
or
fnstsw
mov
daa
jo
mov
bound
push
push
idivl
push
notb
sub
sbb
add
std
and
xchg
push
insl
push
pop
lret
sub
or
ja
cmp
push
outsl
cmpsb
jmp
inc
lcall
ss
outsl
test
shrb
clc
mov
cmpsb
fcomps
mov
xchg
pop
and
test
dec
mov
pop
add
loopne
xor
jp
in
jle
cmp
in
mov
and
mov
fs
bnd
xor
outsb
imul
mov
sbb
mov
lahf
mov
shr
fisttpll
pop
insb
xor
mov
sbb
add
aam
pop
subb
add
pop
in
inc
push
or
jge
out
or
add
loope
add
add
inc
sub
iret
jl
popa
xchg
adc
lret
mov
aam
leave
mov
push
sub
xor
jbe
out
jle
or
dec
pop
sti
test
sbb
xor
cmp
adc
push
lods
dec
hlt
mov
in
in
pop
mov
in
xor
sarl
jle
fidivrl
adc
jnp
enter
sbb
lret
push
out
cmp
jno
jns
sbb
adc
mov
jg
popf
inc
mov
clc
dec
jae
cmp
and
out
sbb
lret
aaa
jbe
clc
test
xchg
cmp
aaa
decb
inc
mov
xchg
ret
daa
dec
mov
imul
mov
ss
sbb
insl
pop
hlt
dec
jae
int
xlat
xchg
pop
sub
push
imul
xor
mov
jg
neg
pop
daa
inc
pop
daa
mov
add
fcomps
jle
lods
xchg
mov
jl
or
ss
or
pop
shl
call
xchg
add
aam
adc
ret
psubsb
add
mov
scas
add
jl
pop
lea
daa
jbe
sbb
std
fwait
shrb
in
cwtl
jns
popa
pusha
and
dec
shrl
and
movsl
mov
ds
insl
jg
fistps
imul
adc
mov
mov
push
outsl
cld
jno
push
add
jecxz
imul
inc
loopne
inc
or
insb
cmp
call
and
imul
loopne
inc
mov
mov
adc
push
jmp
icebp
test
mov
cmp
cmpsl
jmp
and
dec
jb
fwait
pop
or
dec
loope
xor
xchg
into
inc
es
les
xor
mov
fstl
scas
mov
sbb
testl
cld
xor
and
cmp
sti
jg
cmp
je
sahf
push
and
add
mov
loope
incb
repz
das
adc
or
mov
mov
mov
addl
adc
imul
cltd
mov
fwait
popa
repz
iret
and
fwait
pushf
test
cmp
fcoml
sbb
xchg
out
cmp
test
addb
in
dec
add
mov
mov
out
mov
sbb
or
jp
test
int3
and
jne
xchg
sub
xor
es
inc
flds
push
das
ret
sbb
mov
pop
xor
cmp
xor
cmp
popa
xor
jns
pop
inc
mov
cmpsb
dec
push
mull
xor
inc
push
movsb
clc
pop
call
push
and
adc
cmp
lret
inc
ss
xchg
rolb
or
and
adc
add
leave
jb
outsb
and
jle
shlb
pop
pop
pop
outsb
add
add
jnp
fstp
fcompl
aaa
xor
add
ss
mov
sbb
shl
cmp
lcall
test
std
mov
push
inc
mov
inc
fldz
jl
int
jae
xchg
jecxz
sarl
das
cmp
stos
or
mov
lcall
jne
push
cmp
mov
movsb
xchg
jae
fsubs
pop
dec
push
in
dec
test
movsb
add
js
mov
cltd
inc
xor
lret
sub
mov
jb
lcall
scas
adc
aam
sub
add
insl
shll
test
sbb
scas
push
arpl
mov
bound
sub
push
adc
jl
or
dec
les
lods
popf
dec
hlt
sbb
inc
test
cmc
out
cmp
cwtl
shl
pop
cmc
cmp
mov
push
shlb
repnz
mov
adc
repz
pushf
insl
ds
fs
xor
fstl
add
mov
jno
std
outsl
mov
add
adc
add
add
jbe
sbb
pop
jle
ss
add
sti
mov
lock
sbb
pop
aam
lret
je
mov
cmp
rclb
das
movsl
aaa
mov
gs
mov
and
lahf
fld
push
xor
addl
imul
mov
in
push
push
ljmp
test
loope
pop
les
and
ret
sub
call
in
repnz
test
das
and
inc
sub
test
dec
add
adc
push
pop
mov
push
out
pop
imul
xchg
pushf
mov
in
daa
or
pop
push
adc
jo
outsb
ljmp
shrb
dec
lret
out
out
sub
repz
push
pop
addr16
test
mov
insl
int3
and
and
mov
inc
add
add
jmp
frstor
add
add
fabs
lods
pop
xchg
insl
hlt
dec
lahf
sbb
repz
xchg
aam
sbbl
jb
mov
cmpsl
les
clc
or
or
xchg
cltd
ds
nop
or
orb
pushf
fistl
dec
push
test
sub
xor
adc
dec
fwait
and
or
loopne
js
aaa
rorl
sbb
nop
int
stos
aam
pop
call
in
add
repz
sbb
xchg
pop
adc
daa
call
mov
xor
mov
aam
add
mov
mov
mov
cmp
jmp
mov
dec
aas
cli
and
adc
aam
imulb
jle
add
push
test
xchg
cmpsl
cmp
xorb
xchg
pop
push
movsb
sub
mov
mov
jbe
add
cmp
cmc
inc
bound
sti
cmp
repnz
cltd
xor
pushf
sub
jl
sub
pop
fsubs
nop
add
add
xor
test
sti
and
add
adc
loopne
dec
jmp
lret
ret
inc
mov
mov
ss
outsl
mov
mov
pusha
sbb
jb
push
rcl
mov
mov
test
dec
xchg
ljmp
mov
repz
push
lods
pusha
in
inc
push
dec
xor
test
xor
cld
push
aad
imul
clc
adc
or
jns
sub
cs
shll
sub
out
xor
lds
dec
out
xor
movsb
ljmp
and
cmpsb
js
adc
dec
movsb
into
xor
negl
pop
subb
je
push
fwait
or
dec
pop
mov
inc
dec
pop
into
xor
enter
mov
inc
data16
out
fnstcw
out
fwait
adc
das
xchg
mov
test
js
cmp
loopne
mov
adc
sbb
rol
std
stos
xor
icebp
in
filds
jl
add
dec
cli
inc
jg
int
xchg
lods
or
cs
out
adc
add
add
fwait
mov
stos
jg
inc
or
cmpsb
mov
pop
dec
xor
mov
xor
sarb
jl
mov
dec
pushf
inc
movsb
movsb
std
pushf
xor
and
cli
inc
test
push
repnz
sub
in
push
int3
movsb
loop
sbb
repnz
and
or
push
add
lret
push
add
dec
aas
cmpsb
inc
int
js
jae
dec
mov
ljmp
pushf
aas
out
out
gs
inc
fstp
jno
mov
ficoms
mov
sub
mov
inc
dec
jecxz
clc
sub
push
aam
mov
sub
std
clc
hlt
xor
roll
daa
inc
push
sub
cmp
frstor
inc
enter
or
or
sahf
or
adc
les
and
jge
ret
addr16
fs
pusha
pop
cs
clc
xor
call
add
add
rorb
add
cmp
cmp
subl
out
add
add
xchg
std
cmp
jle
fistpll
fimull
aam
cmp
adc
add
add
xchg
int3
and
bsf
mov
or
sbb
xor
xchg
lcall
cwtl
jmp
add
jg
or
jne
pop
xor
fildll
or
icebp
push
dec
jp
pop
into
mov
cmpsb
or
adc
or
sarb
adc
fwait
popa
test
roll
sub
jae
mov
cli
mov
and
test
mov
vxorpd
mov
sbb
out
adc
mov
jp
fs
push
sub
or
adc
dec
incl
lcall
das
cmp
fcmovnu
movsl
add
testl
std
sub
mov
in
mov
fdivrl
push
xchg
loopne
push
adc
and
aam
inc
movsl
mov
aad
pop
dec
test
dec
add
add
add
iret
xlat
ficompl
inc
and
dec
pop
sbb
add
add
popa
inc
test
push
mov
scas
mov
mov
push
mov
inc
lcall
jae
imul
or
xor
and
fidivs
stc
pop
sub
fdivp
fcoml
push
pop
mov
jnp
ja
adc
pop
stos
out
xchg
les
cmp
or
sbb
int
jb
cmp
mov
movsl
or
cmp
pop
addr16
fsubrs
ja
jecxz
cmp
sahf
sub
insb
push
lds
sub
pushl
mov
fists
xchg
cmpsl
cmp
push
cltd
xchg
ret
mov
push
dec
aam
xchg
aad
adc
addb
leave
mov
hlt
adc
sbb
not
jp
sub
test
inc
ss
mov
es
and
stos
lahf
cmp
xchg
mov
arpl
push
xchg
xchg
xchg
fdiv
mov
add
sub
iret
outsb
jmp
push
test
fildl
and
adc
add
lods
push
add
xor
cltd
clc
mov
pop
jl
mov
shl
test
or
pop
clc
or
inc
rolb
ljmp
and
mov
fwait
loopne
js
je
push
pushf
clc
js
xchg
cltd
cmp
and
stos
mov
cmpsl
sbb
cmp
aas
adc
gs
movsb
lods
or
dec
pop
aad
repz
push
fldz
shll
cltd
add
cmpsl
cwtl
sbb
add
lods
stos
pushf
inc
dec
jl
mov
push
sarl
xchg
xchg
push
mov
int
aam
jp
mov
pushf
std
repnz
and
xlat
cli
enter
and
shrl
adc
outsl
inc
jle
mov
cmp
pop
mov
xchg
cwtl
xor
jge
hlt
sbb
inc
pop
test
rol
cmp
inc
aaa
pop
and
pop
iret
lret
jle
cmp
lock
cmpb
loopne
xorl
add
sbb
std
sbb
stc
cld
or
mov
call
add
sub
pavgb
imul
mov
dec
fdivl
inc
and
jns
aad
ds
out
jl
mov
dec
insb
repnz
pop
sub
xchg
sub
xchg
outsb
adc
lret
and
popf
xchg
flds
mov
in
sub
sbb
push
cwtl
cwtl
cli
or
xor
lea
into
cmp
mov
bound
lock
sub
and
test
std
sbb
jecxz
sub
fdiv
jmp
push
sbb
pop
dec
ljmp
xlat
aam
mov
repz
cld
rcrb
repz
sbb
fs
mov
jecxz
push
jnp
das
xor
lock
or
mov
ret
cmp
mov
mov
movsl
bound
dec
pop
rolb
sbb
pop
ret
mov
test
in
xchg
or
mov
mov
mov
rcr
test
sub
sbb
bound
add
negl
adc
pop
xchg
cmpsb
xor
sub
add
add
xor
sub
inc
xor
nop
pop
out
jecxz
pop
stos
lds
pop
pusha
dec
lahf
clc
ss
xchg
mov
pop
fsubrs
cmc
clc
fadds
mov
call
cmpsb
jecxz
int
test
dec
sub
xchg
mov
stc
mov
int
dec
mov
adc
adc
inc
lods
movsl
mov
or
ljmp
orb
std
pop
xor
mov
pusha
xor
fs
jmp
xor
dec
incl
popf
cmp
xor
sub
xchg
or
cmp
call
inc
dec
test
sar
iret
scas
mov
fs
push
jmp
jl
sub
inc
je
mov
jge
mov
bnd
mov
or
and
dec
outsl
xchg
mov
sub
in
outsl
push
add
add
dec
pushl
int3
push
fcomi
xor
add
add
data16
pop
or
icebp
ja
mul
jb
mov
ds
pop
jp
rolb
mov
mov
jecxz
adc
out
loop
std
ret
stos
mov
sbb
icebp
cwtl
in
xchg
mov
xchg
dec
int
pop
rcrl
or
jge
push
idivl
dec
dec
adc
test
dec
sti
lds
lcall
lods
push
add
sub
inc
mov
int3
or
test
arpl
test
mov
scas
mov
pop
xchg
xchg
jae
xchg
in
inc
mov
repz
pusha
push
xchg
aaa
pop
lods
insb
es
push
scas
js
push
stc
aas
sbb
inc
sub
ja
dec
loopne
mov
cmc
xchg
cmp
pop
add
or
loope
lods
inc
popf
leave
outsl
pop
mov
adc
jmp
pop
mov
ret
pop
stos
pop
dec
and
push
jg
paddw
push
push
push
scas
dec
adc
pop
mov
insl
xchg
imul
scas
mov
add
add
inc
ja
pop
aas
dec
push
xor
xor
add
add
jp
js
pusha
cmp
mov
bndldx
not
inc
mov
cld
shl
ret
adc
add
xor
pop
mov
lods
pop
mov
mov
xlat
fs
sbb
iret
jne
pushf
push
mov
data16
fmuls
lods
fsubr
xor
cs
jl
ss
pop
into
ds
es
inc
push
imul
orl
jae
mov
xchg
mov
jle
jecxz
addl
ja
add
jne
iret
jo
push
dec
dec
imul
lret
shlb
pushf
xor
pop
pop
mov
or
adc
inc
pop
or
add
inc
arpl
inc
xor
and
popf
xor
mov
mov
pop
in
dec
testb
push
dec
add
sbb
ret
pop
push
inc
cli
xor
xchg
mov
repz
jae
ja
div
mov
add
xchg
cmp
add
add
jae
sti
daa
jg
ret
mov
scas
std
pop
xchg
daa
adc
sub
shll
hlt
or
or
in
sbb
adc
mov
mov
test
pop
mov
pop
inc
mov
fcomps
scas
push
pushf
adcb
mov
xchg
dec
and
or
mov
xchg
popa
cmp
and
fiaddl
or
ds
sar
lcall
sbb
aas
dec
insl
lea
fs
jl
sbb
or
sti
ljmp
int3
sahf
arpl
add
push
xchg
aad
pop
push
fldenv
ret
pop
js
loopne
icebp
adc
cmp
push
adc
xchg
xchg
outsl
sti
bt
xor
les
mov
outsl
rcr
push
mov
mov
xor
or
sbb
push
mov
jae
xchg
adc
push
leave
js
iret
pop
fidivrl
adc
jge
mov
add
add
cli
std
jg
push
pushf
dec
or
stos
lcall
add
jns
sbb
cld
loope
aaa
shlb
jp
lock
push
sbb
mov
ja
notb
mov
sarb
rorb
xor
push
lahf
mov
jp
inc
test
inc
mov
sbb
push
out
dec
jge
push
out
mov
mov
mov
sbb
lcall
loopne
test
jecxz
sub
mov
adc
inc
sbb
mov
pop
cltd
mov
outsl
adc
xchg
fucompp
mov
pop
inc
mov
inc
sbb
mov
pop
sbb
xchg
push
mov
mov
mov
inc
mov
out
pusha
inc
inc
mov
hlt
mov
mov
out
jmp
data16
scas
or
in
jbe
in
and
dec
aaa
into
add
sub
into
dec
mov
aaa
int3
cmp
mov
pop
pop
sub
add
add
mov
std
incl
sbb
sub
add
sbb
pop
out
or
lds
in
add
mov
rorb
push
fisttpl
outsb
jle
pop
lret
sbb
dec
loopne
mov
ret
lods
mov
add
cmp
sahf
mov
push
mov
pop
scas
scas
clc
inc
lcall
and
and
push
je,pt
cs
imul
xor
mov
jecxz
pop
scas
cmc
jecxz
lret
xchg
je
sti
stos
mov
lods
dec
data16
mov
push
jl
sbb
ss
imul
inc
ljmp
cmp
pusha
and
jle
and
push
mov
addr16
stos
imul
mov
test
or
sahf
xchg
das
iret
setle
adc
les
loop
fwait
loope
out
push
pop
add
lahf
inc
push
stos
lock
jns
sahf
inc
push
jbe
test
push
cs
xlat
jns
mov
dec
pop
inc
lahf
push
ja
adc
nop
jg
aam
outsl
add
add
es
jg
pop
or
xor
outsb
xchg
dec
sbb
add
je
pushl
xchg
sbb
popa
loope
outsl
mov
add
sahf
xchg
in
sahf
leave
sub
xorb
sbb
sub
push
lret
lock
mov
pop
push
iret
call
stc
mov
xlat
rcr
hlt
ljmp
stos
jp
dec
inc
testl
jae
rorl
adc
adc
bound
xchg
cld
add
mov
in
jae
loop
or
push
and
out
cmpsl
mov
jne
xchg
or
pop
mov
movsb
mov
dec
dec
xor
rorl
sub
xor
pop
test
mov
xchg
jno
shll
iret
pop
sahf
cmpsb
cs
movsl
mov
lea
test
loopne
adc
insb
imul
imul
loop
lcall
lds
inc
out
test
sti
adcb
imul
or
pop
icebp
xchg
add
push
clc
or
dec
push
cmp
sbb
add
ss
sete
faddl
daa
inc
add
xchg
jns
les
add
mov
cmpb
ret
dec
push
btl
pop
add
pop
movsl
imul
test
or
imul
dec
inc
add
fstl
loope
xchg
mov
pop
into
mov
xchg
or
sti
or
leavew
jb
ret
add
loop
inc
or
dec
lock
jo
sub
xor
repz
and
adc
sahf
movsl
mov
sub
pop
sub
sub
shlb
sub
jne
pop
scas
dec
mov
pop
imul
pop
mov
dec
push
gs
adc
scas
add
and
std
mov
roll
ror
xchg
xor
arpl
add
aaa
mov
and
roll
add
stc
lods
xor
mov
les
add
pop
push
dec
sub
pushf
fistpl
fadds
js
sub
mov
or
stc
cli
in
pop
in
jge
push
int
out
cmpsb
sbb
test
lods
ljmp
loope
aam
pop
sbb
insb
rcr
jl
push
pop
nop
sub
ja
push
pop
aam
pop
fwait
insl
lods
inc
sub
push
or
stos
ret
pop
loop
jg
outsl
xlat
imul
xchg
xor
in
push
fcoms
clc
push
in
and
mov
test
hlt
iret
mov
call
jl
scas
cld
movsb
imul
fmull
cmpl
push
fs
aaa
shrl
push
mov
push
add
imul
mov
mov
jecxz
mov
daa
sub
dec
movsb
cmp
jo
mov
ficoms
stos
sbb
call
mov
pop
pop
add
add
adc
pop
pop
push
jl
hlt
push
push
pop
or
xchg
imulb
aaa
or
push
in
push
mov
push
pop
sahf
mov
rcr
aaa
popa
in
xor
cmp
negb
sub
loop
jl
mov
mov
add
ret
cwtl
arpl
push
jecxz
cld
adc
jno
dec
pop
mov
shlb
inc
in
mov
cld
lock
sti
call
cmp
jge
cs
enter
aam
pop
pop
cwtl
in
jne
xor
in
fmuls
sti
test
in
out
fwait
ss
fdivrs
test
fadd
mov
mov
lcall
jne
sub
mov
sbb
jg
mov
mov
lret
js
xchg
ss
in
pop
or
in
xor
int3
push
fmuls
mov
nop
out
dec
push
pop
rclb
es
push
adc
add
mov
out
stos
jge
or
test
sbbl
add
or
jmp
data16
cs
xchg
lret
xchg
and
sarl
enter
test
mov
and
mov
cwtl
jnp
jmp
add
jne
inc
push
dec
lret
inc
jl
pop
add
movsb
dec
movsb
call
mov
jmp
inc
xchg
stc
das
cwtl
stc
add
in
dec
push
adc
adc
out
daa
rol
pop
inc
push
mov
sbb
pop
inc
mov
fwait
xchg
jae
test
cmp
sub
mov
ds
mov
lret
add
mul
mov
out
or
out
and
jo
jns
jmp
lods
xchg
ret
mov
add
es
adc
xchg
mov
fwait
push
jne
mov
xchg
xor
push
fimuls
dec
lret
adc
cmp
push
out
inc
pop
mov
and
fwait
and
jns
fdivrl
add
sbb
out
xchg
iret
push
aas
in
dec
lret
in
bound
add
add
jns
jmp
lea
jae
outsb
jge
inc
xor
xor
jp
mov
xchg
add
or
icebp
scas
iret
leave
cs
mov
sub
cs
fs
sub
mov
dec
in
sub
outsb
ss
outsb
repz
cmp
add
rol
push
pop
pop
gs
xor
adc
lret
sbb
mov
sub
test
xchg
int3
push
dec
pop
popf
xchg
in
adc
imul
jo
sbb
loop
cmp
mov
iret
and
cmp
push
stc
call
cs
add
lock
in
jge
aad
xchg
jl
cmpl
xor
or
bound
subb
pop
xor
pushf
adc
pushf
or
adc
imul
pop
cld
loope
and
das
push
dec
fstl
sbb
inc
and
add
aam
add
cmp
out
loope
jns
adc
sub
and
add
jne
push
test
stos
xchg
xchg
insl
adcb
or
xlat
or
jnp
pop
sbb
and
xchg
clc
es
popf
insl
fstl
in
xchg
aas
dec
sar
ret
mov
sub
dec
int
cmp
orl
data16
fstpt
jae
mov
jge
pop
push
loope
dec
xchg
fwait
push
sarl
xor
and
jmp
jns
sbb
add
arpl
gs
dec
add
ss
clc
orl
and
pop
sbb
out
cmp
std
das
inc
fidivs
xchg
mov
js
mov
push
mov
or
sub
loope
enter
popa
jno
or
rorl
mov
dec
jl
xchg
arpl
adc
add
mov
pushf
and
lock
scas
cmc
hlt
hlt
pop
sti
pop
sbb
addr16
jg
es
mov
push
ficoml
adc
cmpsb
mov
add
add
lods
jg
push
mov
push
cmp
xlat
insb
and
add
aam
push
loope
mov
fadd
adc
or
out
test
shr
leave
xlat
inc
out
xchg
pop
xchg
jne
outsl
mov
lret
pop
jo
addb
sub
mov
dec
lock
mov
inc
leave
rorb
mov
aam
mov
es
dec
adc
mov
jns
into
sub
mov
jo
and
stos
push
insl
sub
pop
mov
add
into
pop
inc
adc
cmp
mov
add
out
cltd
rcll
shlb
shr
clc
inc
dec
jne
mov
gs
movsl
add
and
pop
insl
and
mov
add
pop
cmp
sarl
and
leave
pop
aaa
inc
push
rcll
mov
popf
test
cmp
mov
cmpsl
out
pop
std
std
xchg
aas
add
sti
mov
sbb
push
inc
iret
imul
or
in
mov
add
add
jg
cld
ret
add
outsb
jo
jno
add
add
sub
aad
inc
popa
out
mov
push
lret
sub
push
movsb
in
lods
mul
aam
inc
and
xchg
xchg
outsb
pop
push
outsb
aam
stc
xor
sbb
outsl
jns
mov
loope
fs
leave
pop
je
shlb
mov
add
fwait
addb
dec
cmpsb
jne
adc
adc
xlat
sbb
insb
cltd
pop
repnz
jo
imul
xchg
adc
pushf
xchg
and
cli
movsl
sbb
push
or
xchg
adc
add
dec
pop
lea
mov
lods
imul
imul
lret
mov
add
imul
loope
sbb
jmp
js
aaa
pop
inc
out
mov
cmpsb
sbb
sbb
mov
test
pop
mov
test
scas
or
fisttpll
cmp
sbb
into
sti
movsb
sub
add
add
mov
iret
mov
jae
mov
add
sbb
mov
loop
jle
imul
dec
mov
pop
jecxz
pop
pop
mov
and
sub
cmpsb
mov
icebp
push
pop
out
data16
push
dec
mov
mov
movsl
xor
test
jae
dec
add
movsb
pusha
xchg
or
push
out
rcrb
ret
out
push
dec
fidivrs
rcrb
imul
push
in
xor
pop
lret
sbb
pop
scas
test
pop
mov
inc
mov
mov
rcrl
pop
push
and
dec
nop
xlat
xor
rol
incl
and
jns
fwait
jnp
testb
dec
sti
mov
dec
xor
mov
sbb
leave
aas
bound
xlat
push
mov
sbb
fs
loopne
add
data16
pusha
and
lock
push
xlat
jg
fcompl
call
sub
pop
lea
adcl
add
add
mov
jg
arpl
imul
jnp
add
add
movsl
xchg
cmp
adc
popa
lods
inc
xchg
movsl
xor
jge
imul
adc
ret
rcll
enter
fdivrs
pop
enter
xor
mov
and
aaa
dec
test
test
xlat
xchg
lcall
lds
add
mov
sub
aam
adc
xchg
sub
pop
add
adc
dec
pop
sub
adc
adc
adc
push
ja
aad
cld
push
rorl
ss
movsl
lcall
cmp
xor
mov
addl
frndint
out
or
into
jge
pop
cmp
push
into
pop
stc
mov
bound
daa
push
xor
dec
push
into
mov
fwait
in
movsl
push
mov
cmpl
inc
add
pop
sub
adcl
or
sahf
icebp
pop
jno
cwtl
xchg
push
or
std
or
jle
jl
enter
jle
add
shlb
cli
clc
cli
clc
sarb
sti
mov
adc
daa
add
add
mov
xor
cmp
aad
ja
xchg
stc
or
mov
mov
dec
hlt
pop
das
outsb
add
inc
or
scas
mov
js
loopne
mov
cltd
sub
rol
popf
pop
ret
std
jp
subb
jl
and
inc
xor
cmp
cmp
adc
repz
adc
mov
mov
push
insb
in
jmp
aad
mov
cwtl
push
arpl
xchg
inc
mov
sbb
mov
popf
clc
jno
xlat
pop
jecxz
cmc
push
cmp
fidivs
push
inc
sub
mov
stc
fwait
sbb
inc
rcrl
mov
sub
pushf
int
add
push
iret
rorb
leave
push
dec
loope
lret
xchg
pop
inc
pop
dec
mov
inc
fwait
pop
xor
dec
sub
pop
inc
rcrb
stos
in
and
pop
andl
outsb
push
cmp
jnp
pop
or
cmp
add
add
jnp
out
mov
lods
mov
sub
add
movsl
es
dec
cmp
imul
dec
lods
dec
push
pop
fldl
add
sbb
cltd
adc
bound
push
enter
pop
add
and
imul
pop
rcl
cmpsl
pop
xlat
inc
fcmovu
cmp
outsb
dec
jle
dec
and
inc
fwait
cs
inc
daa
lea
mov
add
pop
inc
sub
adc
pop
pop
jge
sbb
call
push
xchg
sbb
push
cmpsb
data16
mov
or
push
mov
pop
rcrl
push
and
and
xchg
push
fwait
icebp
pop
popf
movb
sbb
jo
xchg
jbe
into
or
movsl
test
das
cmp
xchg
jecxz
sub
pop
or
xchg
aas
out
mov
icebp
gs
sbb
repz
and
mov
mov
push
cmc
add
add
es
data16
insb
daa
mov
js
pop
mov
add
add
sub
loop
call
fdivrp
mov
jnp
aam
push
or
js
rolb
fs
mov
mov
aas
pop
sti
mov
sbb
mov
jg
mov
subl
rcrl
jl
and
cmp
sbb
add
ret
clc
into
and
or
jl
xor
mov
fisubrl
dec
into
movsb
and
pop
in
mov
and
add
inc
sub
and
int3
scas
cwtl
and
data16
icebp
mov
sub
add
stc
cwtl
xlat
jg
fiaddl
push
outsb
sbb
push
loopne
mov
scas
inc
cmpsb
jg
xchg
mov
xlat
cs
push
stos
pop
jmp
mov
push
fcom
jnp
cli
pop
pusha
adc
mov
jbe
dec
dec
test
jb
aam
test
lods
cltd
ljmp
lods
add
cwtl
imul
add
clc
mov
fldcw
add
decb
add
add
push
jp
aas
push
or
push
mov
push
into
fidivrs
mov
sbb
mov
js
in
sbb
loop
movsl
out
adc
rclb
ss
jnp
aam
jb
daa
xchg
shl
in
pushf
xchg
ja
fstpl
xorb
mov
mov
push
inc
scas
mov
jno
and
or
dec
pop
cmp
push
sbb
push
dec
cmp
pop
cmp
adc
rcr
mov
or
fs
dec
or
movsb
addr16
sbb
ret
rolb
sub
sbb
enter
sub
push
insl
jb
call
dec
pop
lds
adc
add
mov
push
jge
incb
jle
inc
push
inc
in
dec
popa
mov
add
adc
mov
cmp
lahf
stos
ss
stc
shr
add
add
and
push
sti
cmpsl
enter
mov
pop
movsl
xchg
sub
add
arpl
xchg
cmpsb
adc
cltd
test
xchg
fdivrs
or
jnp
mov
cli
inc
mov
test
jecxz
mov
fs
push
int3
into
test
mov
in
dec
and
in
popa
xor
xor
mov
pop
or
imulb
addr16
stos
aad
clc
add
add
fisubs
jne
les
fsubp
add
jae
pop
rol
jae
cmp
rclb
stc
shl
stos
fst
in
hlt
js
imul
fwait
pop
sub
aam
sbbb
jl
in
jnp
dec
sub
mov
push
pop
pop
ror
scas
cltd
mov
shlb
pop
iret
std
mov
inc
leave
dec
gs
out
jg
popf
or
fs
ja
into
and
pop
xor
pop
bound
in
ret
hlt
jnp
orb
xchg
jae
pop
das
jae
dec
sub
jne
mov
stos
enter
pop
add
add
mov
std
mov
dec
push
fcmovnb
lds
sub
add
mov
xchg
adc
sarb
push
jae
call
jbe
mov
xlat
cmp
mov
jmp
into
pusha
inc
scas
sub
ret
xor
dec
out
gs
ret
rorb
add
push
filds
mov
mov
jmp
xchg
repnz
sbb
adc
mov
sbb
cmpsb
es
inc
sub
pushl
dec
mov
add
test
add
lods
fcoml
xchg
es
dec
pop
lret
xor
vmovntpd
fcoms
cmpb
xchg
mov
leave
fidivl
rcrl
bnd
aad
cmp
fcomp
jo
mov
je
daa
mov
loope
mov
ret
sbb
jge
push
dec
rorl
sar
pop
xor
or
mov
pop
xorl
mov
adc
jle
inc
lods
push
iret
dec
int
dec
mov
imul
add
lds
xchg
and
inc
and
lcall
add
add
mov
fidivrs
push
iret
ret
add
clc
inc
mov
pop
incl
test
je
int3
mov
addps
push
mov
jg
out
popf
push
fdivrs
xchg
adc
cmc
adc
clc
std
mov
ds
scas
fsubrp
pop
mov
bound
adc
sarb
ror
cmp
idivl
dec
and
mov
adc
pop
lock
jno
or
and
shll
roll
rol
fsts
hlt
pop
xor
fnstsw
sti
sub
jne
cs
bound
dec
pop
sub
push
imul
sub
and
mov
pop
or
xlat
data16
pusha
fucomp
and
sbb
incl
and
jmp
mov
and
and
movsb
jnp
pop
data16
lods
xor
push
sahf
xor
mov
push
mov
pop
fdivrl
sub
add
fiaddl
ret
ficomps
cmp
lahf
jmp
sbb
add
cmpl
mov
push
lcall
adc
sbb
icebp
xor
pop
mov
aad
adc
fistps
adc
lret
push
pop
scas
sbb
cs
xchg
repnz
pusha
inc
pop
and
cmp
lret
outsb
jl
pusha
ret
cli
jmp
cli
arpl
sbb
mov
imul
cmp
sub
nop
push
mov
arpl
mov
sahf
push
jns
pop
fidivs
xchg
inc
adc
jp
pop
sub
jg
cmp
add
pop
mov
mov
xor
and
sahf
aam
jecxz
outsl
je
sbb
sub
loopne
add
or
ficoml
dec
xchg
movsb
call
mov
cmp
pop
popf
or
fs
pop
add
fdivrl
xor
push
cmovo
mov
mov
mov
mov
xchg
mov
test
add
lods
xor
mov
cmp
xchg
cmp
loopne
das
add
add
xchg
pop
cmc
and
sub
adc
xor
pop
mov
sbb
cld
xor
into
push
sub
adc
jno
pusha
out
jbe
das
dec
sbb
push
bound
bnd
in
mov
jno
ret
push
les
push
or
jo
mov
int
push
nop
lahf
push
add
out
push
fidivl
rcr
test
not
hlt
lret
hlt
or
mov
push
nop
fbstp
shll
fucomi
into
inc
nop
cli
xchg
adc
mov
push
cmpsl
cld
incl
daa
inc
jns
ficoms
lea
push
ficompl
mov
loope
sahf
push
add
sahf
rcll
insl
fisubrl
mov
imul
repnz
hlt
inc
xchg
xor
fldl
aaa
mov
push
out
inc
dec
mov
add
adc
lods
mov
cmpxchg
mov
movb
into
inc
mov
push
pop
cmp
xchg
or
add
repz
sub
add
add
lret
mov
or
pushf
das
cmp
add
add
fdivrp
movsb
xchg
push
jg
popf
pop
ljmp
jmp
int
cmp
addr16
and
mov
cwtl
mov
inc
jmp
jne
aas
lock
inc
hlt
cmp
cmp
test
cmpb
pop
or
stos
aaa
pushf
aam
and
adc
setb
pop
bound
popf
cmp
incb
push
mov
xor
pop
dec
ss
jne
dec
adc
push
push
pop
and
out
outsb
or
push
or
scas
push
cmp
test
test
cmpxchg
ret
in
lret
push
out
inc
aas
out
mov
push
mov
sti
arpl
or
mov
cvtps2pi
das
ds
lret
cmp
xchg
sub
xchg
mov
shlb
int
icebp
filds
sbb
mov
or
or
push
jb
cmp
cmp
add
sub
sti
pop
jge
neg
hlt
add
dec
mov
add
add
inc
mov
cmp
lods
mov
rcrb
lea
push
mov
sti
pop
xor
mov
jmp
sti
mov
mov
adc
cs
cmc
mov
xor
cmpsl
jne
ljmp
sub
mov
out
out
mov
push
push
fdivl
sub
jle
dec
fidivrl
lret
xlat
add
jne
push
pop
cmc
sub
pop
mov
loop
xlat
xchg
add
sbb
jg
sbb
cmp
adc
outsl
sbb
sub
inc
ss
xor
daa
outsb
ss
outsb
dec
ja
mov
sub
ret
push
xor
out
mov
scas
or
pop
das
or
clc
or
push
loope
es
daa
cli
sbb
jg
clc
pushf
pop
fdivrl
iret
or
mov
dec
orl
pusha
cltd
fsub
std
in
popf
in
stc
jmp
aam
jae
mov
add
add
adc
mov
sti
dec
xchg
xchg
test
cli
repz
nop
push
leave
add
fwait
xor
sbb
inc
cmpsl
and
xchg
mov
xor
shrl
aam
push
rcrb
adcl
inc
mov
loopne
jae
lcall
or
ja
shll
imulb
xchg
mov
mov
stos
xchg
and
cmpsb
jae
iret
inc
jg
lock
int3
push
insl
mov
repnz
icebp
dec
mov
lods
xor
aad
int
stos
sub
mov
int3
xor
pop
sbb
in
mov
jp
nop
or
push
jb
test
imul
dec
lcall
in
mov
aad
imul
aaa
dec
mov
mov
in
gs
xchg
or
push
fmuls
repz
in
fdivs
stos
pop
jns
add
add
jp
jnp
sti
xchg
jle
jp
lods
xchg
pusha
mov
add
push
pop
sbb
adc
mov
jp
adc
mov
dec
out
sti
sti
inc
cltd
sti
and
imul
jp
aaa
jb
pop
push
sbb
mov
dec
icebp
cmp
mov
loop
push
ja
mov
mov
push
add
xchg
out
sbb
add
in
mov
mov
pop
xor
in
push
and
leave
popa
out
or
movsl
dec
mov
cmpl
add
jp
adc
xchg
out
push
xchg
lret
in
dec
cmp
out
imul
jns
sub
push
and
push
mov
sbb
xchg
and
or
cmp
jl
data16
cld
dec
inc
stc
sbb
mov
test
mov
mov
int3
stos
orl
sbb
sbb
pop
out
xor
sbb
es
dec
sbb
add
dec
movsb
lock
cmp
mov
push
sti
decb
mov
or
xor
add
lcall
add
adc
jno
mov
xor
cltd
push
xchg
movb
xlat
cmc
inc
inc
cwtl
or
fldl
icebp
sti
xchg
loop
out
aad
das
add
mov
pop
sbb
into
push
fiaddl
ja
out
mov
pop
push
dec
jb
jns
push
mov
push
subl
xchg
das
cmp
jnp
movsl
mov
lock
pop
into
aad
out
and
sub
mov
js
fdivrl
fld
xlat
aas
pop
add
imul
test
jae
add
lods
inc
mov
in
out
rcll
lea
out
aaa
sbb
js,pn
cs
dec
jp
das
mov
xor
sarb
shll
sub
pop
call
xchg
cmc
dec
mov
mov
icebp
cmp
shll
mov
sbbl
push
lret
outsl
movsl
sub
sbb
pusha
icebp
cmp
add
add
cmp
xor
hlt
inc
xorl
add
xchg
sbb
loope
test
iret
nop
inc
mov
rcrl
adc
mov
mov
jl
mov
add
orl
ret
xor
mov
xchg
or
push
push
xor
add
popa
inc
not
dec
xor
mov
rolb
jns
xchg
movsb
shll
and
aam
mov
lea
push
sbb
cmp
loop
loope
push
sbb
test
cmp
and
rcrb
je
fcoml
inc
mov
jecxz
insl
pushf
scas
add
or
and
add
out
push
mov
push
pop
cmp
lods
outsb
das
adc
xor
xor
adcb
lret
fmuls
mov
sbb
fwait
mov
ds
pop
mov
out
cmp
mov
mov
repz
loope
mov
adc
add
incb
ljmp
or
xlat
lret
add
add
ds
inc
jle
mov
pop
sahf
mov
in
xchg
in
push
mov
shlb
shll
in
push
cmp
mov
ljmp
xor
mov
lret
dec
adc
dec
in
shll
fisubl
adc
repz
in
cmp
fwait
dec
xor
add
loope
ds
mov
add
ljmp
add
repnz
int
jp
inc
hlt
push
cmpl
cs
ss
leave
subl
int
gs
stc
es
and
and
cli
lock
loopne
notl
xor
push
scas
xor
cwtl
sbb
pop
ja
mov
test
push
xchg
sub
arpl
fcompl
adc
repnz
insb
cs
repnz
ret
cwtl
shll
adc
and
sti
arpl
add
add
rclb
nop
lcall
aaa
add
add
xlat
cmp
jae
movsl
jge
int
sbb
ret
stos
xchg
mov
cmpl
xchg
xor
push
insb
fs
lcall
sahf
orl
sti
imul
mov
or
dec
repz
ds
dec
loop
cld
lcall
cmp
cltd
cs
xchg
jle
insb
out
cltd
adc
inc
sahf
dec
inc
or
push
add
aaa
mov
mov
testl
push
sbb
dec
adc
rorl
lock
jmp
and
jmp
fucomip
sub
hlt
roll
xlat
mov
mov
imul
dec
cmp
sti
and
insb
adc
xchg
jmp
out
cli
fwait
pop
mov
cmpsl
xor
inc
jo
xchg
jno
cmp
cmp
or
mov
sbbl
and
fcomip
or
mov
mov
das
lret
or
add
jl
dec
jbe
idivl
or
push
cmpsb
test
cmp
add
adc
jmp
test
pop
repnz
inc
push
mov
xor
pop
jmp
inc
and
cmpsl
xchg
mov
cmp
xchg
mov
pop
bound
mov
fmuls
mov
lea
mov
push
test
in
lcall
adc
je
pop
test
ss
daa
push
jle
cli
mov
pop
push
push
push
pop
xchg
scas
sbb
or
cld
mov
adc
insb
popa
mov
mov
imul
js
cld
sti
aaa
leave
das
scas
in
sti
pop
add
sti
mov
cmp
pushf
pushl
popf
jae
add
jae
das
nop
ficoml
xchg
add
and
movsl
adc
data16
aas
dec
push
or
sbb
testb
popa
call
insl
add
add
xchg
cli
outsl
out
loope
jo
inc
jo
push
mov
lahf
cs
bound
add
and
outsb
sub
stos
fs
jmp
leave
aas
add
and
add
bound
and
insb
xor
test
jg
aas
pop
mov
sub
xchg
cmp
inc
jbe
out
aad
cwtl
pop
pop
adc
mov
mov
shlb
push
jb
seto
bound
call
and
mov
int
in
inc
pushf
rcl
fisubrl
xor
test
fbstp
les
push
mov
push
sarb
repnz
aas
mov
js
xchg
pushf
push
push
jnp
pop
js
xor
cmp
loop
push
pushf
cli
dec
ljmp
sti
or
sahf
iret
adc
jg
or
cmpsl
idiv
push
jnp
cmp
repz
or
out
das
repnz
jnp
jle
push
pop
adc
jle
repnz
dec
ret
add
je
es
add
mov
xchg
sbbb
inc
xchg
ffree
or
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
push
ss
fistpll
add
add
cmp
cmp
lock
dec
xor
ret
lret
xchg
and
mov
mov
loope
and
jne
inc
add
out
push
movsb
sub
and
insl
dec
nop
sbb
jns
cmpsl
mov
mov
xchg
test
push
cmp
inc
repnz
test
jno
repnz
lcall
or
outsl
inc
out
imul
push
and
lock
mov
test
sti
sub
insl
dec
mov
mov
sbb
and
scas
inc
mov
jno
mov
insl
aam
or
push
int
jg
lock
out
sub
or
mov
cltd
sbb
dec
test
fnsave
mov
insl
adc
mov
sbb
test
adc
xchg
jmp
jge
bndstx
out
outsl
sar
outsb
cmc
sub
mov
fs
add
sbb
jnp
jnp
cmp
movsb
push
sbb
pop
add
in
add
add
or
jp
add
mov
xor
mov
insb
je
mov
push
push
rcrb
mov
enter
jmp
cmp
add
push
sbb
add
mov
mov
icebp
in
mov
cmpsb
dec
add
out
mov
sahf
pshufw
or
sbb
pop
pop
dec
daa
jp
lcall
mov
push
sbbl
shl
mov
or
mov
adcb
int3
cmp
aas
pop
popa
inc
xor
shr
add
pop
popf
or
lahf
mov
adc
sbb
xchg
leave
inc
push
pop
mov
add
and
and
ret
or
lea
imul
mov
adc
in
mov
sub
nop
outsl
test
lock
mov
gs
aas
and
push
fucomip
mov
hlt
cltd
ret
push
dec
jecxz
and
xchg
push
add
add
adc
jmp
jns
xchg
jmp
add
add
ss
inc
inc
movsl
sub
push
mov
mov
mov
mov
pop
sub
hlt
push
mov
push
xchg
test
push
push
lods
push
data16
stos
aad
jle
mov
push
stos
outsb
jmp
faddl
and
jle
adc
loop
sub
jno
mov
iret
test
ja
xchg
pop
or
push
inc
add
and
add
inc
mov
aas
es
cs
mov
sti
or
sbb
mov
and
add
dec
test
and
sbb
loop
or
xchg
dec
jae
inc
fidivs
adc
stc
xor
jbe
xor
fs
lods
lcall
mov
stc
gs
mov
cwtl
jns
mov
test
sbb
and
xchg
push
in
nop
into
dec
add
add
repz
cmp
lods
repz
mov
mov
cmp
add
adc
test
loope
sub
push
sbb
xchg
mov
jp
jb
nop
in
lret
mov
mov
jbe
test
pop
jae
jns
xor
aaa
outsb
outsb
pop
dec
dec
aas
pop
inc
mov
daa
dec
aaa
or
mov
mov
sub
add
mov
mov
xor
stos
inc
clc
std
adc
nop
mov
inc
xchg
and
and
mull
xor
adc
jb
fistps
push
jo
jmp
pop
push
sahf
pop
lret
push
loop
pop
mov
dec
scas
inc
lock
pop
lods
aad
jno
shll
int
mov
lret
gs
xlat
or
and
jp
cmpb
imul
fwait
xchg
cld
imull
cmp
jae
add
jmp
iret
xor
insl
punpckhbw
push
adc
cmpsl
inc
sbb
add
aas
daa
push
cld
push
std
jmp
dec
push
mov
repz
add
daa
lods
cli
ds
lock
pop
lods
nop
mov
les
add
or
cs
int
mov
xor
repz
jnp
insb
sub
lds
push
fwait
xor
push
ss
loopne
push
ret
out
cltd
lahf
push
imul
jmp
pop
sbb
and
jle
mov
test
lds
insl
sarb
cmp
mov
push
mov
lds
adc
mov
xchg
out
jg
sub
jecxz
fidivrs
das
out
mov
adc
mov
cmp
and
add
jecxz
insb
ds
pop
mov
fldenv
jp
test
lods
add
jg
push
inc
aas
mov
cmp
pop
iret
pop
mov
sub
fidivrs
adc
pop
test
scas
mov
xchg
mov
cmpsb
jb
mov
loop
mov
and
inc
pop
mov
ljmp
add
add
add
sbb
dec
push
out
aad
stos
inc
xchg
add
add
pop
push
mov
outsl
fstl
add
or
lret
mov
insb
add
xor
pop
scas
outsb
add
or
jl
mov
push
jno
sti
and
enter
jecxz
subb
mov
and
movsb
mov
xchg
test
jmp
pop
test
or
ud1
fst
mov
rolb
shrb
negl
cli
cmpsb
scas
outsl
outsl
in
sbb
adcb
pop
cltd
mov
scas
ljmp
mov
into
inc
je
stos
mov
fisttpl
leave
and
sarb
outsb
aas
fwait
dec
push
lods
into
mov
add
mov
shrb
mov
lret
stos
pxor
xchg
lret
jp
mov
add
nop
push
push
push
dec
rolb
stos
sub
ja
or
jecxz
inc
repz
movsl
outsl
jb
jb
add
fsubs
add
idivl
or
sarl
std
inc
add
add
jle
hlt
call
ret
nop
push
sub
sub
fisttps
in
dec
push
lahf
sub
ljmp
mov
add
bound
loop
jg
lock
dec
pop
add
mov
cmp
sbb
pusha
aaa
or
xchg
lret
dec
sub
hlt
lahf
insb
mov
mov
pop
cmpb
jb
xor
fwait
mov
das
loop
pop
mov
lret
sahf
enter
cmpsb
pop
add
lds
adc
hlt
dec
in
xor
pop
adc
inc
mov
cwtl
fimuls
cmp
mov
or
and
daa
sbb
inc
push
roll
aaa
rolb
in
and
cld
sub
test
insb
cmp
shl
jne
mov
sbb
daa
pop
stos
pop
dec
dec
sbb
push
xorl
or
or
clc
test
dec
pop
mov
and
rcrl
mov
ja
jg
xchg
orl
test
add
adc
add
mov
and
lods
pop
jmp
and
sub
push
xor
es
jmp
sbb
xor
mov
fidivrl
xorl
jno
cmp
xchg
xor
movsl
push
jo
push
jle
add
push
push
decb
xchg
push
xchg
lods
aad
jl
adc
idivl
fucomp
shrl
out
repz
push
outsb
fcompl
cwtl
mov
mov
or
jnp
pop
xchg
xor
lahf
mov
xor
xor
into
jmp
addr16
push
pop
cld
dec
sub
cmp
pop
mov
dec
sub
fistps
test
shrb
jge,pn
dec
dec
adc
mov
cmp
lds
inc
jle
outsb
push
mov
xlat
xor
sbb
arpl
xchg
mov
or
and
dec
lret
jmp
imul
aaa
je
adc
add
out
lret
rcl
sbb
jecxz
or
incb
inc
mov
cmp
and
dec
xchg
dec
jmp
push
imul
subb
imul
push
clc
adcl
repz
sbb
insl
mov
sbb
or
add
adc
fwait
adc
or
sbb
stos
fsub
xor
jnp
mov
mov
repnz
inc
lret
insb
and
pop
cmp
std
inc
insl
mov
inc
imul
cwtl
mov
jl
jns
hlt
and
sub
xchg
and
mov
test
sub
loope
in
push
inc
push
das
mov
js
gs
sti
push
push
nop
popa
add
mov
xor
int
mov
inc
jmp
idiv
ja
add
cmp
lods
ss
xchg
js
fdivs
jl
in
loop
das
inc
lds
add
lds
cmc
cwtl
xchg
push
sub
scas
and
or
add
add
lock
add
mov
pop
ret
ss
ss
jno
ds
fstpt
xchg
sahf
test
outsl
pop
mov
negl
sahf
std
in
push
fildl
pop
push
inc
push
and
insb
push
xor
xor
sbb
idivl
test
sbb
and
sbb
lcall
cmp
ror
dec
mov
inc
movl
outsb
inc
fnstenv
out
xor
push
stos
or
fisubrs
inc
xor
in
aas
sub
and
lock
xor
in
push
data16
andnps
cmp
cmc
pop
lock
adc
mov
jge
xchg
popf
xchg
or
or
xor
sub
mov
xchg
and
sub
cmp
cli
mov
add
subl
int
aam
stos
cmc
lret
int
mov
out
cmp
imul
mov
push
rcrb
hlt
pop
or
inc
add
add
jns
xor
jg
push
push
out
inc
add
add
insl
dec
imul
fistl
cmp
push
xlat
sbb
mov
data16
xor
lods
jle
or
sbb
push
out
stc
imul
inc
xchg
lcall
sbb
subb
sti
inc
loopne
es
xor
xor
mov
out
ja
call
loop
pop
sub
or
aas
or
mov
loope,pn
call
add
nop
adc
in
push
jge
rcr
sub
cmp
push
sahf
or
jno
ror
ret
adcb
imul
in
jne
lods
push
imul
test
addb
fucomip
jmp
or
and
orl
aam
lock
inc
push
jmp
xchg
inc
das
xorb
sbb
mov
cli
lods
push
loopne
mov
hlt
pop
je
scas
xchg
add
xchg
insb
jae
fidivs
mov
js
ret
jg
decl
rol
mov
scas
leave
push
inc
add
add
int
repz
es
mov
push
xchg
popa
pop
xchg
pushf
dec
lock
pusha
rolb
xlat
les
mov
aam
addb
push
cmp
fdivrl
stc
sahf
call
dec
in
or
out
lods
inc
rcrl
lds
insb
inc
jl
cld
dec
shlb
xchg
sbb
mov
xor
fcompl
inc
xchg
lea
and
data16
enter
and
cli
add
dec
or
or
rcrb
mov
or
pop
out
iret
test
pop
cmp
jnp
lret
inc
stc
rcr
sbb
mov
fdivp
dec
jb
arpl
call
repnz
xor
in
inc
dec
mov
adcl
ficoml
lock
mov
movb
sbb
jbe
sub
mov
test
in
sbb
sbb
xlat
pop
jmp
mov
rcr
jbe
add
add
das
mov
out
aad
adc
icebp
sbb
add
xchg
and
push
popa
dec
mov
xchg
or
mov
fnstcw
sub
fdivrs
or
sub
int
cmp
fs
add
and
data16
sub
popf
test
out
sbb
inc
cmp
push
mov
in
cmp
bound
int
mov
movsb
mov
movsl
cmp
sbb
lahf
clc
mov
push
jns
add
ficomps
shlb
xchg
addl
in
cmpsl
sarl
data16
and
mov
and
lock
ds
dec
sbb
leave
mov
or
sbb
int3
movsb
add
xchg
mov
imul
icebp
cs
or
sti
sub
dec
addr16
xchg
jle
aaa
sbb
mov
loopne
mov
inc
sub
lods
jecxz
pop
lcall
cmpb
jmp
mov
mov
inc
icebp
hlt
gs
dec
adc
pop
sahf
and
add
xor
xchg
cs
jmp
push
xchg
pop
cmp
mov
stos
subb
push
adc
aam
fcomps
xor
or
xor
sti
lret
outsl
sbbl
inc
jmp
and
repz
sarb
mov
rolb
scas
sbb
xor
mov
rolb
xor
sarb
and
ss
xor
mov
pop
xor
int3
xchg
rcrb
imulb
inc
fbstp
int
push
movl
out
inc
add
xor
adcb
addr16
adc
or
mov
jmp
int
push
scas
lods
xor
xchg
and
mov
mov
into
inc
or
dec
xor
dec
imul
int3
sbb
cmpsl
clc
insb
imul
insl
xchg
dec
xchg
jo
jo
mov
in
js
add
add
aas
gs
pop
repnz
dec
add
add
push
mov
mov
or
sub
mov
js
lret
pop
mov
push
ljmp
push
movsb
fs
jb
loop
mov
loopne
xor
ret
outsl
in
cltd
nop
dec
scas
int
in
das
cmp
pop
sub
mov
push
mov
pop
sahf
outsb
mov
xor
in
std
sti
push
clc
and
lds
stc
test
xchg
push
lahf
popa
test
inc
iret
dec
sbb
adc
mov
xchg
jb
jle
rcrb
cmc
incl
add
cmp
lds
sub
js
fdiv
push
shl
pop
mov
int3
push
rclb
int3
xchg
jae
push
and
add
cld
jmp
inc
sbb
mov
loop
push
mov
push
and
or
sbb
aam
pusha
inc
pop
mov
jmp
add
mov
out
fisttpll
lock
in
dec
add
add
cli
sub
fs
push
mov
jp
or
js
mov
sbb
jns
sbb
out
aas
cmp
roll
lea
or
add
dec
hlt
fdivrs
addr16
ljmp
and
pop
push
jl
paddq
pop
adcb
cmp
xor
jge
icebp
sub
push
push
jb
push
pushf
adc
fsubl
pop
dec
lea
adc
ret
lock
out
aad
sub
lock
xchg
aaa
fildll
aad
in
xlat
aam
sar
lahf
sub
out
pop
adc
add
insb
cmpl
cwtl
subb
xchg
cmp
inc
mov
mov
enter
xchg
leave
repnz
fcmove
mov
dec
div
outsb
es
sbb
cmp
test
push
in
ret
jmp
popa
idivl
add
mov
ljmp
add
add
imul
rcll
sbb
les
pushf
fldcw
repz
jl
fmull
sub
push
mov
cmp
mov
je
addb
add
adc
xlat
and
fstl
inc
add
jo
pop
dec
sbbl
add
mov
dec
xor
ret
xchg
dec
mov
fildl
push
int3
ret
test
mov
inc
aad
stc
xor
xchg
mov
or
xchg
pop
outsl
cmp
push
sbb
mov
xor
push
rol
mov
sub
adc
adc
fistpl
sub
imul
add
arpl
mov
inc
call
push
adc
inc
mov
jge
and
hlt
jnp
sub
imul
xchg
mov
mov
rcrl
jno
and
dec
out
arpl
sub
inc
push
mov
data16
or
pop
xchg
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
xor
xor
add
add
sub
rclb
ljmp
negl
mov
scas
sahf
frstor
loop
mov
or
orb
pop
push
in
mov
sub
sub
ret
jne,pn
pop
push
sub
mov
fdivs
enter
mov
lcall
or
fmulp
or
int3
stos
pop
or
push
xchg
dec
mov
xchg
jo
leave
in
jne
cmp
inc
test
rcll
das
xchg
cs
gs
jno
pop
dec
stc
stc
add
rorl
mov
negl
mull
sti
test
mov
sub
jecxz
stos
xor
pop
dec
sarl
push
mull
add
and
mov
lret
mov
push
ja
shlb
imul
stos
pop
sub
test
cmpsl
imul
js
stos
mov
sbb
add
cmp
imul
out
mov
mov
vrcp14sd
ret
dec
add
add
adc
outsl
add
cltd
cmpsl
pop
pop
xchg
fisttpll
cmpsb
dec
mov
decb
jbe
pop
pop
fidivs
push
mov
out
lds
orb
xchg
insb
cmp
or
push
xchg
loopne
jnp
adc
mov
jle
lods
fwait
adc
push
sahf
cwtl
push
stc
sub
leave
xchg
push
xchg
or
sbb
jp
sub
mov
outsb
or
pop
fildl
cmp
pusha
xchg
cmp
jg
jb
ret
mov
xor
ss
or
aaa
out
ror
data16
jg
sub
push
xorl
xlat
push
repnz
fisttpll
orl
push
push
mov
push
lock
aaa
push
fxch
lcall
fimuls
gs
push
xchg
mov
jle
cmp
cmp
jae
adc
dec
mov
out
jo
jmp
add
js
add
dec
stc
mov
ljmp
ds
add
add
xorl
iret
icebp
pop
mov
jg
out
imul
into
fstps
mov
cmp
xor
in
popa
inc
or
mov
cmp
mov
and
jecxz
pushf
jnp
dec
xor
push
addr16
in
pushf
pop
lods
std
xor
xor
aam
insl
int
add
outsl
add
sub
mov
ds
inc
in
stos
lock
hlt
jne
adc
adc
lods
insl
or
shrb
movb
mov
ret
std
insl
outsb
and
cmc
in
jge
mov
cmpsl
push
repz
or
mov
jo
cmp
fistpl
movsb
xchg
pushf
mov
jge
add
je
outsl
out
leave
and
lock
xchg
mov
test
clc
add
insb
jg
add
add
jg
cld
lcall
into
inc
dec
add
add
sti
jno
je
clc
mov
gs
pop
and
nop
mov
lods
add
movsb
jno
ljmp
loope
into
enter
fs
out
jns
adc
mov
or
adc
xchg
cmpsl
rcrb
xchg
rcl
stc
adc
test
cmpsb
push
rcrb
jg
inc
idivl
pop
leave
jb
push
push
mov
mov
outsl
pop
adc
and
ljmp
push
and
mov
leave
push
mov
movsl
into
ljmp
xchg
mov
pop
dec
mov
jle
sarb
in
je
mov
imul
loope
adc
jecxz
lods
loop
int
sub
dec
sahf
dec
movsb
sti
jae
test
dec
repz
cmp
pop
int3
pusha
in
rol
push
dec
movsl
mov
faddl
js
loop
xchg
stos
mov
mov
icebp
pop
std
or
mov
xchg
mov
pop
or
hlt
fmull
add
add
bound
clc
add
mov
inc
loop
mov
mov
sub
cmp
testb
sbb
in
arpl
movsb
mov
daa
nop
repnz
out
movsb
jle
lret
pusha
rcr
sub
in
dec
or
imul
popf
test
pop
pop
jecxz
adc
xchg
dec
pusha
pop
xchg
sbb
mov
lock
sbb
mov
imul
mov
pop
pop
push
lret
aam
aaa
mov
mov
test
push
ret
sbb
in
sti
adc
data16
frstor
inc
psllw
xchg
std
adc
pop
nop
andl
adc
rorl
fimuls
lea
ja
mov
jno
adc
inc
fdivrs
dec
clc
xor
sbb
repz
or
mov
flds
jle
add
add
inc
mov
push
push
jmp
push
mov
sbb
push
add
add
cmpsl
pop
iret
fstpt
push
jne
sbb
sti
jmp
jmp
lret
dec
loopne
aam
inc
clc
adc
out
je
mov
rcl
pop
mov
and
or
mov
andb
lds
jp
repz
pop
and
push
jb
insb
addl
pop
test
add
add
mov
aaa
scas
pop
add
xchg
dec
cmp
ret
inc
aas
idivb
push
and
std
cs
inc
add
xchg
or
cmp
dec
imull
hlt
cmpb
and
xor
cmp
mov
stc
jnp
dec
xlat
dec
add
pop
aas
fldenv
shlb
mov
mov
out
in
adc
mov
cmpsb
cmp
sbb
mov
leave
cmp
adc
jne,pt
pop
fwait
cmp
jbe
ds
test
xchg
add
add
sub
cmp
ret
or
sbb
or
add
mov
sub
mov
fisttpll
sub
mov
add
inc
xchg
inc
pusha
shlb
imul
fsts
idivb
sub
lds
out
and
cmp
jb
in
mov
or
mov
out
and
pop
faddl
outsb
xchg
fbld
mov
push
and
or
cltd
test
lea
add
mov
xor
out
dec
gs
mov
cmpsl
jnp
lds
pop
fisubrl
xchg
jns
jmp
fsubrs
faddl
xor
mov
mov
add
fcmovne
add
jl
vmwrite
orb
gs
xor
xor
adc
inc
and
and
or
jecxz
mov
mov
inc
push
hlt
lods
push
and
dec
add
lds
jns
add
movsb
repnz
sub
mov
mov
push
in
int
mov
dec
sbb
push
outsb
daa
cwtl
push
or
roll
add
or
push
shll
out
pop
pop
pushf
push
add
push
add
add
scas
daa
rclb
inc
out
cmc
imul
inc
daa
repnz
add
jecxz
std
pop
dec
xor
xor
cltd
jmp
iret
sub
and
jl
mov
adc
sbb
push
in
push
inc
sbb
cmp
xor
push
pop
in
mov
cs
sbbl
daa
xchg
sub
adc
fs
cmp
add
sub
xchg
xchg
lcall
xchg
jecxz
addr16
xchg
adc
mov
test
mov
dec
and
inc
lods
or
insl
scas
out
pusha
scas
push
mov
sbb
pop
adc
ja
sarl
adc
cmpsl
lods
sbb
out
sbb
in
rcrb
push
lock
aad
mov
mov
jle
stos
insl
adc
rcrl
fldt
cs
out
arpl
test
aaa
sub
cs
add
add
add
out
lcall
hlt
mov
loope
lcall
add
xor
and
pop
test
xor
mov
xchg
adc
pop
leave
stos
cmc
iret
mov
inc
inc
mov
push
arpl
jo
loopne
lock
fldl
push
jecxz
mov
sbb
loope
movsb
mov
sbb
dec
and
shrb
cwtl
push
mov
nop
outsb
mov
test
mov
cmp
into
inc
out
sbb
jb
push
dec
pop
and
dec
xchg
or
mov
or
arpl
cli
aas
cltd
js
mov
cmc
adc
repz
cld
jno
lret
push
mov
jl
gs
loopne
jge
push
test
mov
mov
inc
sti
push
add
xchg
insl
mov
cmp
lahf
xlat
orb
cli
ds
lea
mov
dec
cmp
pop
mov
mov
imul
dec
imul
jo
daa
test
add
jbe
idiv
imul
enter
push
add
add
negl
lret
shlb
xor
sub
gs
call
lock
mov
jb
pushf
stos
out
jae
mov
or
sarl
sahf
add
push
mov
mov
mov
mov
in
cmp
fs
dec
scas
xor
in
push
sub
push
cltd
sbb
ret
mov
mov
mov
sub
jmp
push
and
incb
outsl
mov
inc
loope
insb
xchg
jecxz
jecxz
jl
pop
mov
mov
pop
out
cltd
mov
das
shrl
mov
and
add
pop
inc
int
mov
xchg
cmp
enter
push
aam
dec
pop
repz
cltd
push
inc
fldl
lahf
push
push
cwtl
xchg
int
xchg
cmc
push
or
jns
sbb
in
cmc
jp
stos
and
push
lods
sub
push
cmpsl
out
and
push
scas
lea
pop
test
lcall
add
add
fwait
cmp
stos
sarb
push
add
add
loopne
push
xchg
pop
mov
adc
out
popl
sbb
iret
or
adc
pop
imul
cmp
or
cmp
clc
mov
inc
cli
icebp
mov
cltd
mov
test
adc
enter
insb
fists
test
mov
jo
jns
addr16
int
imul
movsb
push
lret
pop
or
add
cli
or
mov
test
jmp
sbb
mov
dec
fstp
iret
push
and
ja
mov
xlat
or
fisubs
xor
xor
jo
ja
jo
movsb
xlat
jb
cld
inc
aaa
adc
push
out
xor
jle
aas
loopne
das
aad
mov
mov
push
bound
inc
fisubl
mov
out
pop
popf
or
daa
push
or
scas
in
divb
shl
push
js,pt
les
add
inc
push
clc
mov
and
hlt
stos
mov
add
add
int3
ds
outsb
lret
test
xchg
xchg
and
mov
mov
sbb
insb
pop
inc
mov
push
xchg
repnz
dec
sub
pop
mov
fdivs
shll
or
jmp
ja
mov
out
ret
leave
jle
mov
mov
call
mov
sub
adc
cmp
les
mov
inc
add
jp
lret
sub
xlat
pop
cmp
xor
xor
mov
mov
out
in
inc
inc
adc
fs
insb
movb
call
jbe
test
push
in
cltd
scas
mov
loop
mov
in
jnp
push
outsl
das
js
ljmp
inc
in
ljmp
inc
mov
inc
xchg
xchg
push
ja
sbb
arpl
pop
dec
sbb
movsb
in
std
xor
and
clc
jb
imul
add
shr
mov
jecxz
movsl
xchg
jo
add
add
adc
ret
les
inc
repnz
in
xor
fldenv
dec
daa
int
insl
outsl
jne
sbb
mov
bts
jae
mov
sbb
add
xor
push
gs
aad
out
and
sub
pusha
adc
outsb
in
iret
or
hlt
in
and
inc
or
mov
je
movsl
mov
outsl
movsl
repnz
movsl
xor
test
ret
pop
adcb
lea
adc
mov
ja
dec
call
mov
mov
sub
popa
jns
dec
mov
and
jge
inc
lret
nop
insl
popa
ss
push
mov
push
filds
inc
push
or
repnz
iret
pushf
rcrb
sbb
int
cld
popl
gs
mov
pop
rcll
sub
test
lds
fsubp
pushf
mov
aas
out
adc
call
ss
icebp
mov
rcrl
add
mov
lds
aad
xorl
add
and
sbb
lahf
fsubrl
mov
cs
mov
mov
adc
add
aaa
lcall
cs
mov
aas
xor
xor
cmp
ds
pop
sbb
cs
mov
je
inc
test
mov
insb
notl
jno
daa
cmp
imul
aad
adc
jbe
inc
jl
xor
xor
mov
push
aaa
dec
adc
insl
pop
or
ret
ret
jo
or
stc
pop
pop
and
mov
mov
add
fs
adc
inc
int3
icebp
in
enter
stos
fbld
test
adc
nop
scas
idivb
loopne
fiaddl
inc
insl
jl
or
lahf
pop
mov
mov
mov
push
cmp
movsb
jb
enter
add
in
cwtl
xor
sbb
fistl
pop
mov
lret
lea
add
mov
and
das
cmp
pusha
outsb
ficompl
add
scas
mov
aaa
fwait
idivl
jns
push
lods
or
out
mov
xor
sub
jnp
fcomp
data16
jbe
cmp
mov
mov
cmp
inc
push
push
xchg
mov
pop
add
adc
bound
add
cmp
jb
imul
adc
cmp
bound
dec
mov
xchg
jno
icebp
push
lret
xor
mov
fwait
icebp
call
jbe
pop
pop
insb
aas
xchg
repnz
push
and
pop
dec
aad
scas
sbb
push
lock
dec
in
jo
pop
scas
cmpsl
notb
rcl
out
imul
in
popa
repnz
adc
ret
leave
xor
addr16
mov
mov
movsl
out
inc
pushf
cmc
nop
out
mov
fnstenv
mov
stc
je
sbb
cmp
sti
push
pop
mov
add
add
movsb
jae
jnp
mov
ja
mov
sahf
mov
jg
add
add
insb
inc
mov
sub
sub
mov
test
xchg
jg
sub
shlb
in
sub
and
push
xor
jo
xor
popf
out
xlat
pop
test
jne
sbb
sub
sub
test
gs
fs
xchg
or
push
or
gs
mov
popf
movsb
cmp
add
jecxz
aad
push
lea
pop
fsubr
jle
ds
dec
div
cltd
inc
dec
jmp
mov
int
mov
lods
test
mov
lret
mov
inc
jo
int3
fldt
in
cmp
dec
ja
fmul
push
inc
imul
mov
push
mov
int
imul
enter
jg
mov
daa
movb
and
jbe
cmpsl
rclb
inc
xchg
loope
xor
jno
dec
jle
cmp
cltd
fs
rcll
fsubl
add
xor
xlat
out
cld
lahf
push
add
add
in
cwtl
mov
jg
sub
rclb
xchg
scas
loopne
je
mov
mov
adc
or
movsl
push
xchg
cltd
aad
pop
in
in
clc
mov
jge
imul
test
addr16
mov
push
jecxz
push
ljmp
cmp
sub
bound
loop
sub
mov
xchg
pop
jecxz
push
stos
xchg
or
scas
cmp
and
dec
mov
mov
xor
adc
mov
sub
ret
mov
cld
and
cmpb
xchg
or
call
cmc
sbb
mov
mov
popa
fdivrs
imul
push
loopne
adc
aas
push
xchg
add
mov
stos
xchg
push
pusha
and
xor
fdivrs
jg
shl
dec
lods
xchg
add
mov
mov
in
lcall
ljmp
add
pop
jle
push
mov
xor
cmp
cmc
and
iret
dec
jp
movsb
aas
imul
in
out
mov
shlb
stc
dec
mov
sub
lock
ds
jbe
jecxz
inc
push
clc
mov
mov
inc
lock
out
clc
jg
repnz
call
rorb
fsubrl
notl
mov
adc
or
mov
xor
pop
mov
clc
mov
xor
imul
scas
imul
jne
push
out
xchg
and
adc
jmp
xchg
mov
inc
sub
not
shll
sahf
sahf
lods
and
mov
sbb
and
mov
xor
filds
or
cli
test
jae
ss
adc
mov
xor
lcall
mov
rol
xchg
or
cs
push
jl
rcll
lock
and
dec
ss
xor
pop
mov
fldenv
add
jmp
add
out
into
push
push
inc
lahf
mov
mov
add
jp
mov
dec
mov
adc
in
mov
ds
int3
ljmp
add
fs
jmp
lds
scas
stos
push
add
pop
repz
test
mov
jmp
mov
int
cmp
and
cmpsb
shrb
xor
mov
icebp
dec
mov
imul
sbb
lods
hlt
cli
ficompl
mov
pop
and
inc
lret
push
fnstenv
cs
sbb
pop
push
imulb
lahf
je
mov
or
mov
mov
scas
sbb
mov
sbb
jg
push
aam
ficoms
cmpsb
mov
fiaddl
sbb
add
fwait
mulb
jno
scas
sbb
inc
pop
and
push
dec
mov
jno
arpl
cmpsl
movsl
ror
mov
xchg
xchg
add
stos
mov
sub
cld
push
or
add
lock
jae
add
add
xchg
inc
shl
xlat
mov
jg
or
xchg
pop
add
add
enter
dec
cmp
ret
jbe
loop
adc
orl
pop
xor
inc
and
mov
seta
xor
sbb
div
push
icebp
push
dec
adc
cmp
push
jbe
inc
push
divl
mov
rcr
enter
lock
mov
xor
enter
loope
adc
ret
push
sahf
jp
popa
mov
push
jo
ret
add
add
push
xlat
inc
or
dec
inc
cmpsl
test
jecxz
movsb
cmp
pop
das
test
loop
inc
xlat
imul
cmp
pop
pop
and
idiv
mov
fsubr
jp
cvtps2pd
sub
mov
rcr
cwtl
cmp
test
sub
jns
jmp
int
sub
mov
xor
fidivrs
xchg
add
jo
std
mov
scas
shlb
mov
and
and
test
xchg
rcrl
cltd
aaa
gs
jb
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
xchg
cltd
sbb
add
add
scas
cwtl
test
adc
repz
cs
call
adc
loop
pop
mov
ljmp
pop
bound
imul
shr
adc
inc
adc
cli
mov
sub
popf
dec
sub
add
dec
xchg
wrmsr
mov
in
jae
fists
jo
shl
cmp
mov
ret
jb
out
pop
pop
leave
jo
mov
std
push
dec
repz
adcl
cmp
call
push
repnz
sbb
xor
inc
gs
shr
orb
es
repnz
fisubl
or
xchg
or
shrb
aam
add
fs
cmpsb
lods
mov
xor
in
jecxz
or
cmpl
out
sbb
ret
pop
cmp
stc
xor
mov
sub
lods
jmp
dec
add
add
idiv
jg
sub
mov
popa
add
add
inc
out
outsl
lahf
fabs
jns
adc
bound
lods
pop
shrb
xchg
loop
jp
xor
test
in
clc
mov
or
rorb
jge
jbe
xchg
jno
cli
ret
out
incb
push
jnp
daa
inc
jb
xchg
daa
pusha
cmpsb
mov
lret
and
in
inc
dec
int
mov
das
pop
mov
jne
inc
adc
sbb
stos
or
pop
rcrl
in
sub
inc
or
out
xor
jae
leave
inc
cltd
js
fisubrs
testl
cmp
or
cmp
jne
push
rolb
fstl
enter
cmp
pop
repz
loope
fbld
call
out
fucom
in
lahf
fistl
jb
jae
pop
sbbl
scas
inc
jge
inc
test
sub
loopne
inc
lret
jnp
push
fcomi
sbb
cmp
jb
mov
loop
inc
faddl
add
add
pop
mov
fstps
aad
mov
add
add
jg
jmp
es
popf
cmp
fs
stos
mov
lcall
ret
ja
cmp
filds
jbe
mov
add
mov
mov
ret
ret
xor
mov
mulb
das
add
in
ficomps
adc
mov
xchg
add
sahf
rcr
ss
mov
hlt
icebp
jae
xor
imul
mov
jle
jo
cmp
fwait
sbb
ss
dec
xchg
jo
fistl
pusha
ficompl
lret
mov
jle
or
dec
mov
cmp
xchg
push
loope
adc
leave
and
inc
sub
cmpsb
ret
mull
or
mov
cld
sub
cmp
mov
test
sti
jb
outsl
scas
stos
hlt
push
popa
dec
jge
sub
mov
fcmovne
sti
mov
insb
lock
jo
gs
jle
xchg
add
add
repnz
movsb
jle
arpl
add
add
loopne
out
outsb
cmp
imul
or
inc
cs
test
and
test
xor
loop
push
and
pop
and
test
or
stc
inc
cmp
subl
push
retw
adc
dec
add
or
pop
adc
inc
cmpsb
push
lods
stos
das
lsl
flds
mov
push
adc
xchg
cmp
inc
sub
inc
clc
push
lods
sub
notl
dec
jns
leave
xchg
imul
adc
pop
mov
fstpt
mov
stc
das
xor
pop
lea
push
das
sbb
jmp
jg
cmpsl
daa
loope
pop
push
cltd
pop
add
or
arpl
cmp
std
mov
test
mov
mov
pop
push
inc
and
jbe
add
pop
fwait
insl
sub
sbbl
xchg
inc
jbe
add
stos
sub
stos
out
jmp
sub
repnz
lods
add
add
outsl
js
rolb
mov
ret
cmp
dec
movsl
dec
scas
pop
ds
jecxz
lea
xchg
jbe
xor
xor
xchg
dec
jle
hlt
mov
cli
pop
add
insl
adc
mov
clc
pop
push
ss
xor
sti
repz
mov
inc
dec
decb
mov
shlb
mov
push
pop
xchg
addr16
imul
xor
sahf
inc
ja
popl
aad
repz
mov
stos
xlat
arpl
xor
xor
movsl
test
mov
push
cld
sub
notl
mov
insl
movsl
adcl
das
sub
cmp
jge
scas
repnz
xchg
fisubrl
cmp
add
xor
cmp
pop
mov
sbb
div
pop
insb
or
adc
ja
rep
faddl
jo
push
and
shll
fnstenv
pusha
adc
or
add
add
stos
mov
mov
pop
mov
xchg
sub
js
cmp
xorb
aaa
js
and
jns
gs
pop
clc
xchg
stc
mov
and
mov
push
adc
cs
push
popa
enter
mov
mov
shll
pop
cmp
xor
xchg
xchg
scas
int3
xchg
mov
xor
jne
ficomps
mov
pop
sub
subl
data16
and
mov
cmpsb
insb
sub
mov
outsl
fcompl
movsb
imul
lret
cmpb
xchg
loopne
add
sbb
mov
ficompl
sub
loopne
xor
fisubrl
daa
mov
dec
scas
xor
movsl
rclb
cmc
sub
cmpsl
pop
repnz
sub
mov
mov
dec
fs
je
xchg
mov
or
and
cmp
add
cld
je
jbe
jns
sbb
imul
add
add
pop
jl
sub
push
jno
ljmp
imul
cmp
sub
stos
inc
xor
add
dec
cmp
sub
push
cmp
scas
jae
xor
ss
mov
mov
adc
loop
lods
sbb
cltd
popa
cmpl
sbb
rorl
jns
dec
movsl
clc
xchg
mov
jno
lods
shl
pop
mov
je
jno
fsubrs
andb
push
dec
adc
jg
xchg
mov
fcoml
out
in
arpl
pop
mov
jge
int3
and
lret
mov
loopne
retw
mov
mov
adc
adc
dec
ret
jg
loopne
inc
and
or
mov
sub
pop
push
stos
add
inc
cmc
jns
shrl
pop
sub
js
add
or
mov
int
sbb
push
cltd
jmp
fildl
or
pop
nop
mov
add
add
movsl
cmp
and
mov
pop
and
cwtl
arpl
mov
and
dec
sub
rcrl
jo
push
stos
addr16
loop
mov
mov
add
fistps
mov
mov
pop
adc
xchg
sahf
out
dec
or
rolb
aad
sbb
push
sbb
bound
xor
into
outsl
mov
adc
outsb
mov
cmp
sub
out
jns
subl
test
hlt
push
int
movsb
mov
popf
and
mov
jnp
dec
xor
inc
cmp
inc
sub
cmpsl
and
mov
subl
lds
jecxz
les
sub
je
arpl
pop
rcrl
or
out
repz
and
sub
das
inc
sub
or
adc
pop
mov
mov
mov
push
jg
dec
xchg
dec
add
out
jl
push
add
pop
push
or
and
fcmovnb
fidivs
mov
fwait
cltd
je
dec
jecxz
cmc
insb
loop
pusha
sbb
add
xor
mov
cmpsb
std
push
add
mov
dec
in
mov
adc
sahf
enter
lock
outsb
sbb
mov
or
mov
test
add
mov
loope
pop
mov
xor
aad
xchg
cmp
hlt
ret
lods
outsl
mov
push
and
cmp
cs
sbb
mov
insl
shlb
lock
repz
jne
cmp
stc
fimull
xor
cmc
ret
push
int3
cld
or
jbe
iret
pushf
cmc
push
cmpsl
dec
divb
push
mov
adc
sbb
leave
and
push
aad
dec
sbb
mov
iret
ds
push
std
cmpl
mov
pop
lahf
xchg
push
xor
jno
mov
add
scas
insl
insb
xchg
add
mov
fucomip
push
insb
xor
xchg
inc
lds
add
scas
outsb
test
icebp
fists
pop
outsb
flds
add
cmp
fadds
mov
add
pop
ret
in
notb
push
push
je
mov
dec
imul
jnp
dec
nop
frstor
push
andb
sbb
or
add
sub
cmp
lods
pop
fisubrl
jbe
mov
adc
aaa
jle
int
mov
gs
mov
sahf
ds
dec
test
mov
xchg
in
aam
mov
mov
stc
inc
popf
pop
rolb
fiadds
jne
insl
ljmp
jl
stos
add
mov
int3
testb
test
xlat
daa
jb
sub
xchg
jecxz
aad
mov
jl
adc
and
mov
mov
xor
pop
jmp
lret
pop
mov
cmp
insb
jg
add
or
add
dec
out
iret
jmp
aas
in
push
data16
pop
inc
cmp
add
shrl
sbb
cmp
cltd
dec
inc
fcomip
push
sub
push
hlt
xor
lret
xor
call
pop
es
jp
cs
pusha
repnz
aam
out
cmp
nop
mov
xor
xor
inc
xchg
push
daa
sbbb
jnp
and
adc
cmp
stos
into
mov
inc
mov
dec
aam
adc
push
aad
cmp
out
cmpsl
sbb
xchg
imul
in
imul
dec
getsec
dec
cmp
sub
lret
xchg
fstps
out
ss
and
sar
add
loope
test
imul
mov
or
hlt
fcomps
rol
lahf
adc
lock
jmp
popf
and
mov
imul
mov
or
inc
adc
fcoms
pop
dec
add
add
std
cmpsb
pop
dec
sub
sub
dec
fmul
imul
add
fwait
mov
adc
dec
sub
adc
cs
jbe
cmpsb
decb
aas
or
pop
in
int
stos
aas
dec
int3
mov
imul
roll
cli
lock
iret
mov
push
aam
mov
fstps
jp
enter
pop
push
fisubs
add
jge
popf
je
mov
jg
call
push
addr16
jbe
xchg
jp
dec
sahf
mov
fists
shrl
inc
pop
mov
inc
push
nop
fisubl
adc
outsb
mov
xor
mov
adc
or
scas
sub
mov
call
push
add
xor
pushf
mov
dec
xchg
lret
push
xchg
inc
shll
xchg
xor
int3
movsl
jl
sbb
fidivl
inc
push
ljmp
sbbl
push
pop
sub
ret
adc
ds
test
in
lods
imul
neg
std
sub
dec
push
outsl
inc
ja
insb
add
add
push
add
xchg
adc
mov
in
push
push
scas
inc
stc
push
clc
loope
xor
mov
inc
sub
dec
sti
pusha
mov
icebp
xor
pop
es
or
mov
pusha
push
add
pusha
out
mov
mov
rcrb
cli
xchg
mov
gs
jl
adc
aaa
test
pop
inc
jmp
xor
test
ds
in
pop
xor
ss
sub
xor
cltd
push
and
fdivr
outsl
shl
fsubr
pusha
loope
fidivs
add
pop
ror
inc
in
popa
mov
push
pop
movsl
scas
add
enter
mov
fldt
stos
adc
jno
mov
jg
xorl
push
ds
arpl
fbld
adc
lods
add
xlat
loope
mov
sub
sbb
push
mov
mov
ret
inc
sub
add
add
cs
xor
cltd
bound
add
add
addr16
mov
xchg
and
out
pop
call
js
movsl
add
lcall
call
push
call
sub
cmp
iret
push
das
aaa
cmpsb
mov
inc
mov
or
shl
cmp
xor
push
and
int3
mov
mov
sub
push
ljmp
lods
daa
pop
lcall
test
pop
xchg
sarb
adc
or
mov
scas
push
arpl
and
pop
stc
in
mov
cs
addr16
push
push
cmpsb
fcoms
aas
sub
add
push
push
jno
and
xor
je
mov
xlat
add
inc
arpl
jl
mov
xor
or
int
add
in
dec
mov
dec
mov
nop
test
mov
pop
pop
aaa
data16
mov
inc
cmp
sarl
jl
shrb
repnz
pop
orps
lods
xor
add
add
ja
out
sbb
lahf
sub
outsb
add
add
or
jecxz
push
push
out
arpl
xchg
jbe
imul
mov
ljmp
cmpsb
out
add
pop
sbb
adcb
ja
adc
leave
xor
call
ret
pop
out
or
and
inc
cwtl
push
dec
bnd
mov
adcl
loopne
mov
inc
jnp
aam
pushl
out
jb
push
push
push
sbb
mov
or
fmul
xor
lret
fcoms
fwait
jp
iret
das
lock
test
movsl
xchg
sarl
les
loope
pusha
scas
jg
ja
mov
sbb
iret
js
cmc
mov
subl
and
mov
cltd
cld
add
push
push
mov
icebp
adc
mov
jnp
orl
lcall
xchg
imul
sahf
fs
add
fldcw
mov
add
add
sub
ja
mov
inc
add
add
jg
cmp
mov
cmp
xchg
pmuludq
jno
fisttpll
fiaddl
clc
mov
mov
sbb
cmp
mov
xor
notl
push
adc
ficoms
pop
add
pop
and
test
dec
push
fmul
sub
out
dec
pop
or
cmpsl
fldenv
aam
aas
sub
ds
nop
xor
movsb
lret
dec
fldt
push
out
adc
testb
dec
mov
jo
dec
push
or
inc
movzwl
sar
xchg
xchg
pusha
test
push
inc
jecxz
pop
mov
dec
add
adc
leave
dec
jne
jl
sbb
fbstp
adc
mov
dec
jge
das
iret
in
jns
jo
sub
sbb
xor
xor
cmpsl
inc
mov
inc
jbe
mull
pushf
aas
int3
xor
aaa
movsb
push
movsl
jl
subl
jl
mov
pop
aas
fstpl
and
add
add
cmp
jnp
outsl
cmpsb
loopne
bnd
call
add
add
fsubrl
xor
xchg
mov
adc
jo
mov
outsb
xchg
adc
xor
cmc
loope
lods
push
xor
popa
mov
lcall
lret
call
lss
sub
mov
xor
imul
mov
int
in
data16
push
lods
stc
or
lea
testb
xor
loop
int3
loop
scas
lret
not
movsl
aaa
inc
insl
push
pop
xchg
or
stos
sub
mov
jmp
std
lock
ds
xor
test
adc
icebp
sbb
and
pop
cmc
stos
xor
bound
inc
aam
jb
dec
add
jmp
pop
mov
jecxz
jae
inc
rolb
dec
cmp
xchg
pop
mov
ljmp
pop
push
and
frstor
xchg
mov
mov
xor
jno
rcl
inc
scas
adc
add
add
cli
xchg
jle
push
je
jmp
jno
add
mov
daa
test
xor
out
xchg
dec
stos
and
in
inc
jo
popa
jmp
sub
inc
push
sub
cwtl
divl
loope
lret
cmpsb
stc
add
adc
ret
add
mov
iret
sub
jae
cmp
cmp
inc
and
add
dec
nop
jnp
mov
cwtl
xchg
xchg
pusha
call
jns
dec
jmp
lahf
loope
dec
movsb
inc
mov
enter
in
leave
pop
call
not
mov
adc
cwtl
cmpsb
mov
and
push
jg
lahf
fdivrl
cltd
xor
test
adc
dec
inc
mov
xchg
jp
shll
fld
dec
inc
cmp
pop
stc
das
pop
inc
testb
push
cmpb
sub
pop
outsl
cmp
jno
adc
stos
shlb
pop
aam
aas
lcall
or
inc
sbb
or
sub
repnz
pop
add
add
fwait
jnp
aad
sbb
pop
xchg
bnd
add
iret
insb
mov
andb
sub
push
clc
test
sar
mov
jge
add
cmpsl
stc
or
cmp
jecxz
lods
rol
imul
mov
xlat
mov
fildl
xchg
ret
jl
imul
fsubs
jb
mov
adc
sbb
add
scas
adc
adcb
clc
shlb
fstpt
les
ljmp
or
push
rcrl
inc
dec
mov
or
loope
mov
adc
pop
mov
or
outsl
cltd
and
stos
dec
leave
jb
or
mov
imul
xchg
mov
icebp
mov
jmp
in
push
push
jae
aam
push
adc
push
mov
stos
loop
stos
mov
addr16
dec
jne
mov
pop
sub
add
lods
das
je
add
add
std
mov
sub
jae
add
mov
stos
add
arpl
loopne
sahf
mov
xchg
pusha
dec
repnz
sahf
mov
xchg
sub
insb
gs
cmp
jl
das
push
mov
jb
adc
add
pop
push
and
and
pop
or
push
addl
mov
xor
addr16
cmp
cmp
push
sbb
arpl
loope
sub
int
dec
mov
pushf
aam
in
movhps
jmp
push
mov
addr16
cli
mov
pop
sub
incb
pop
jmp
pop
je
sti
cmp
jecxz
std
push
jnp
dec
sub
daa
adc
jg
out
inc
fdivrs
mov
cmp
int3
lcall
sbbb
imul
sahf
cmpsb
add
shll
das
pushf
shr
sbb
mov
out
ror
sbb
cmp
pushf
scas
mov
enter
je
add
adcl
xchg
fisttps
mov
in
cmp
je
add
dec
addl
dec
mov
cmpsl
icebp
jno
mov
clc
insl
rol
inc
mov
and
popa
repz
out
out
pop
shl
jp
mov
sbbb
mov
inc
ljmp
xchg
pop
xlat
mov
dec
sbb
insb
jno
pop
arpl
xchg
movsb
aaa
inc
sub
and
sbb
inc
cmp
inc
scas
jg
adc
aas
mov
xchg
stos
ficoms
xchg
in
push
rol
testb
xchg
daa
inc
push
xor
mov
ds
pop
inc
mov
sti
cmpsl
pop
pop
daa
mov
mov
lret
mov
mov
cmc
push
jge
mov
mov
or
mov
or
jle
push
int3
scas
inc
mov
jge
cld
stos
push
adc
jbe
jmp
out
dec
out
mov
imul
add
bound
sub
sbb
jbe
add
lret
int
icebp
rorl
inc
sarb
dec
mov
mov
test
cld
add
add
lds
dec
mov
add
outsb
leave
mov
sbb
cltd
lcall
inc
mov
jp
mov
daa
dec
add
shll
aas
ljmp
enter
pop
in
xor
xor
mov
loope
repnz
aaa
jb
fwait
bound
or
or
jbe
fcompl
add
xchg
jns
test
mov
add
xchg
jbe
das
lods
imul
aas
push
outsb
mov
jg
loop
jmp
popa
push
pusha
and
out
push
add
jecxz
xchg
mov
xchg
aad
pop
in
shlb
fsubp
iret
shrb
mov
cmc
inc
push
push
shll
jne
movl
add
divl
in
sub
push
ja
add
jo
icebp
xchg
adc
cwtl
sbb
fs
out
inc
sahf
dec
cmp
lock
nop
sub
xor
gs
fidivrl
inc
ljmp
mov
push
rolb
out
jg
mov
dec
cmpsb
es
mov
pop
push
lret
sarl
sub
push
xchg
pop
sahf
mov
rorl
leave
stc
sbb
jbe
push
int
js
jno
jo
and
repz
out
incb
test
rorl
adc
and
data16
mov
andl
push
inc
scas
aad
dec
pop
sbb
sahf
mov
je
fcomi
out
pop
aas
rolb
sbb
in
lock
insb
jb
leave
push
adc
shlb
mov
fcompl
xchg
inc
enter
mov
push
inc
nop
inc
lret
ja
pmaxub
add
add
fisubs
mov
mov
scas
mov
add
sti
lret
call
sbbb
adc
sub
sbb
adc
pop
pop
rorl
pop
mov
dec
test
xchg
lods
sub
lret
pusha
rcll
push
mov
or
mov
into
fisubrs
cmpsb
aam
stos
xchg
mov
aad
arpl
lcall
mov
js
ss
xchg
dec
push
xchg
pop
adc
pop
addr16
lcall
pusha
nop
test
cmp
push
xchg
ficompl
pop
cli
es
xlat
push
faddl
cltd
aaa
pusha
lock
or
xchg
pop
xlat
mov
divb
loopne
xchg
fs
jne
hlt
dec
repnz
in
movsb
mov
out
lods
xor
and
push
addr16
jne
je
iret
mov
subl
xor
imul
push
mov
and
adc
xchg
xor
test
sbb
ljmp
fdivl
icebp
fldenv
add
add
mov
outsl
jne
ljmp
loop
xor
jns
add
ljmp
jb
in
sbb
mov
xchg
xchg
push
call
ds
and
fs
adc
scas
fbld
lods
out
push
lods
sub
lods
push
mov
int3
cs
adc
clc
pop
mov
lahf
xchg
xchg
mov
cmpsb
dec
mov
and
adc
xor
xchg
sub
cltd
jl
std
cwtl
jle
in
addl
cmp
mov
cmp
xorl
xchg
ja
dec
xor
jge
mov
in
rcr
addr16
or
dec
test
jl
cld
adc
rclb
scas
push
andl
push
stc
ja
testb
inc
or
jnp
cwtl
out
xchg
jg
in
xor
sbb
shlb
xor
push
data16
nop
lret
xor
movsl
mov
scas
fs
jmp
add
orb
ljmp
jl
int3
outsw
aad
jp
add
sbb
je
into
mov
out
fadds
das
or
out
xchg
and
int3
rcrb
add
out
jo
mov
scas
or
mov
testl
idiv
lea
pusha
mov
call
jmp
mov
ljmp
pusha
popf
mov
popa
cmp
xchg
jnp
jnp
mov
push
ss
mov
lea
or
mov
test
in
add
loop
jge
add
mov
fwait
pop
xchg
call
mov
jmp
mov
inc
mov
out
mov
mov
jecxz
cmp
xor
jae
mov
mov
data16
das
and
hlt
daa
add
ja
dec
clc
mov
cwtl
test
inc
popf
cmp
cmp
push
movsl
outsb
loopne
mov
repz
into
addr16
add
add
add
jo
ja
std
stos
sbb
ljmp
add
add
ret
lock
sub
jg
mov
rorb
push
lcall
sbb
imull
xchg
mov
cmp
mov
out
jl
inc
dec
rcl
xchg
in
lret
adc
sub
cmpsl
mov
pop
stos
repz
sbb
adc
mov
inc
or
mov
cmp
or
pusha
pushw
cltd
je
inc
sub
pop
repnz
lret
testl
push
xor
andl
je
mov
cmc
adcl
adc
mov
jne,pn
push
stos
cmp
roll
push
cmpsl
loope
add
add
shrb
into
jnp
jbe
stos
sbb
daa
push
daa
stos
xchg
add
aam
xchg
outsl
cmpsl
loopne
test
or
adc
xchg
mov
xchg
mov
ja
xchg
into
cmp
sub
pop
mov
sub
add
add
cmpsb
push
sbb
fisubs
jl
add
dec
lret
adc
int
or
jecxz
cmp
push
inc
enter
lcall
lods
in
jmp
outsb
push
pop
sub
int3
pop
jbe
repnz
sbb
xor
jne
xor
sub
subb
mov
les
xor
fyl2x
and
lods
jle
jb
push
inc
and
jae
jae
gs
mov
int3
xchg
lcall
idivl
push
xlat
dec
mov
icebp
fmuls
pop
and
adc
hlt
dec
xorb
notl
insb
mov
mov
pop
dec
xor
sub
mov
test
les
movsl
xchg
jb
int
lcall
or
push
push
sub
stc
fdivs
mov
inc
or
pop
imul
dec
rolb
sub
or
inc
ja
xor
test
inc
mov
mov
add
add
cmp
cli
mov
mov
jge
add
sbbl
fstp
inc
push
xor
jb
ja
shr
sbb
daa
mov
jecxz
sbb
outsb
jle
outsb
fcmove
daa
and
and
mov
into
fadds
fnstsw
jb
sub
mov
pop
jmp
mov
push
icebp
lcall
lret
xorl
push
xchg
lds
ja
rclb
jmp
cmc
lcall
fmuls
mov
dec
and
cmpsl
push
push
fcmovnbe
jns
sbb
lods
stos
add
pop
sub
mov
rolb
pop
mov
sahf
pop
mov
push
fidivrs
repnz
insl
movsb
and
pop
pop
add
es
sbb
scas
pop
pop
into
int
nop
jge
and
sbb
fmuls
cmp
push
repnz
add
add
test
lcall
js
xor
jle
add
sub
arpl
fs
les
shrb
and
push
dec
es
sahf
and
cltd
sub
outsl
push
popa
fistpll
popf
les
pop
xchg
sbb
inc
loop
pop
pusha
stos
pusha
mov
inc
adc
jno
sbb
sub
mov
and
cltd
adc
in
repz
or
xchg
scas
lretw
divb
adc
jno
sub
dec
notb
sub
or
push
pushf
add
cmc
cmp
addl
lcall
fstps
xor
sub
arpl
mov
mov
out
add
repnz
jnp
bound
mov
and
inc
sahf
pop
mov
aad
es
mov
int
lods
rcl
inc
enter
int3
icebp
in
adc
or
rolb
ret
jle
mov
jns
pop
xchg
fisubs
mov
popa
adc
add
xchg
xchg
jns
jmp
mov
mov
add
jno
ds
sbb
movsb
stos
xchg
idivl
or
pop
adc
sahf
jmp
mov
shlb
or
add
push
push
cmc
adc
into
sbb
ss
xchg
rorl
or
mov
jns
jbe
and
pop
push
adc
loope
lret
jmp
mov
mov
push
inc
es
enter
xor
rclb
aaa
js
inc
inc
xor
pop
mov
mov
mov
xor
push
hlt
lahf
add
jecxz
stos
cmp
inc
inc
add
shll
inc
shll
and
mov
sub
push
xor
push
and
insl
dec
fistpll
add
call
jg
sub
popa
add
das
add
cld
xchg
inc
adc
mov
xchg
leave
mov
test
add
add
add
lcall
pop
pushf
cmp
xor
add
aad
push
pop
fadds
test
mov
cmp
and
xorb
jne
pushf
xor
mov
jge
std
adc
js
femms
xor
dec
and
and
sbb
add
sbb
xchg
pushf
test
and
inc
sub
pop
test
adcl
popf
inc
int3
fcmovb
jno
and
pusha
popf
or
sub
mov
adc
mov
das
ret
lahf
fildll
test
lods
in
fcomp
or
adc
cwtl
and
cli
sub
add
xchg
test
cmpsb
cmc
and
inc
jb
sub
sbb
call
mov
loop
inc
sar
lods
ret
nop
sahf
add
imul
cmp
sub
int3
and
test
ret
inc
add
ret
dec
or
xor
std
lea
mov
or
add
add
mov
idiv
jne
iret
sub
add
add
dec
ret
leave
pop
add
pop
xchg
mov
ds
lret
sub
sti
popa
inc
pop
xchg
and
cmp
cld
adc
jns
data16
sbb
out
pop
ret
push
jns
sti
icebp
inc
ret
pop
out
dec
daa
xor
mov
cmpsl
lret
mov
fcomi
sbb
out
or
xor
imul
add
dec
sbb
cltd
out
fs
sbb
addr16
push
pusha
and
pop
clc
add
fucomip
xchg
into
push
xchg
pop
pusha
call
dec
mov
jb
and
repz
jge
loope
pop
push
push
repz
inc
mov
inc
and
sub
fsubrl
pop
cmp
out
dec
dec
fsubs
outsl
add
sbb
scas
cltd
fwait
ds
push
lods
addr16
enter
pushf
pop
pop
mov
iret
sbb
push
or
leave
lret
sti
andl
int
dec
cmp
aas
push
sti
lods
pop
cmpsb
jg
jae
dec
xchg
add
add
pushl
sub
add
lcall
add
add
dec
lret
add
mov
jmp
dec
inc
aad
pop
pusha
in
int
cltd
xchg
inc
xchg
imul
gs
movsb
cmp
test
lds
cmp
and
dec
daa
pushf
mov
stc
jns
and
ds
enter
cmp
loope
adc
lret
cmp
mov
loopne
popf
adc
lods
jge
xor
and
imul
in
aam
push
adc
push
pop
mov
bound
pop
dec
or
mov
jns
mov
and
mov
fimull
adc
daa
dec
cmp
jle
test
dec
lock
outsl
cmc
cmpsb
cli
popf
push
scas
or
inc
inc
stc
sbb
sub
mov
gs
jbe
mov
push
out
frstor
pop
out
sub
aam
mov
or
and
pop
cs
add
add
sti
iret
ss
push
jno
fildll
mov
add
add
sbb
fnstsw
pop
jbe
sahf
adc
cltd
jle
mull
scas
mov
and
in
es
shl
cwtl
adc
sarb
sbb
stc
fisubrl
jle
cmpsb
dec
dec
aam
inc
sbb
bnd
daa
scas
sub
rcll
mov
dec
jle
adc
jmp
data16
jae
fnstcw
pop
pop
sbb
inc
cmpsb
and
mov
sahf
fwait
cmpsb
icebp
push
inc
pop
or
xchg
ret
push
sbb
decl
je
insb
stc
mov
mov
xchg
jnp
xor
ja
pop
mov
je
pusha
test
jecxz
sub
push
insl
out
ret
test
sub
call
mov
add
dec
lea
shlb
cmc
pushf
in
dec
pop
pop
into
mov
jns
fs
cmc
mov
lods
rorl
sbb
pushf
movl
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
shll
add
add
arpl
mov
shll
cmp
in
inc
mov
popf
jecxz
and
add
mov
sub
jne
adc
dec
sub
mov
dec
ret
sbb
xor
sbb
ficompl
jmpw
fistpl
push
xchg
add
scas
xchg
test
nop
movsl
inc
adc
and
sbb
ror
aas
pop
or
jp
popf
aam
sbb
mov
push
xor
popf
cmp
pop
push
cltd
mov
sti
ja
sti
mov
gs
lahf
mov
mov
adc
pushf
jecxz
inc
out
pop
orl
das
ret
inc
test
mov
sbb
aad
and
pop
cltd
xlat
push
pop
cmp
subl
orl
xor
sarl
push
mov
xchg
and
addr16
ficomps
adc
sbb
add
mov
mov
mov
test
add
jl
push
lcall
out
imul
pop
cli
push
push
cmp
xor
jp
aaa
sbb
mov
or
mov
mov
or
mov
int3
and
rclb
shlb
test
xchg
xor
xor
xlat
xchg
or
cmpsl
xchg
cmp
sbb
or
sub
clc
push
cmpsl
push
sub
mov
cmpsb
loopne
xchg
out
jmp
jle
xchg
scas
pop
jo
je
sub
cli
mov
jecxz
mov
push
jns
sarb
dec
xchg
sub
xchg
fidivrl
cs
jg
or
adc
mov
or
jno
ret
or
inc
shll
aas
lea
cmp
fistpl
mov
add
xchg
lock
mov
adc
nop
decb
stos
xor
out
cld
fbld
rcl
imul
sbb
add
and
out
ljmp
lock
xchg
cmpsb
std
and
add
sub
sub
pop
mov
int3
fcmovne
aam
push
cmc
mov
mov
cmp
scas
lahf
mov
test
adc
out
and
stos
fsubl
inc
sahf
mov
leave
lret
push
es
aaa
mov
dec
pop
cmpsl
insl
push
out
inc
mov
test
push
out
daa
out
testb
pop
jecxz
out
decl
jge
aaa
pop
lcall
repz
mov
mov
loopne
cld
push
pusha
mov
out
add
pop
xchg
es
sub
aam
lds
xor
lock
pop
imul
cmpsb
xor
jecxz
mov
push
outsb
xchg
and
imul
add
jae
push
es
pusha
inc
jg
clc
cmp
cli
add
in
cmc
je
femms
and
hlt
sahf
mov
push
in
out
movsb
jnp
fdivr
mov
aad
and
add
arpl
jnp
sbb
push
xor
dec
push
push
xchg
add
testl
pop
scas
or
mov
imul
jo
test
and
jg
mov
into
sub
inc
jbe
movsl
jg
out
adcl
push
aam
sbb
cmp
mov
xor
mov
in
push
jg
sbb
dec
into
lods
fstpl
jle
cmp
cmp
add
add
pavgw
jge
mov
jecxz
push
in
lods
mov
push
test
mov
pop
xor
inc
xchg
sub
xadd
loop
or
daa
jmp
arpl
lods
test
lods
pop
sti
ds
cld
ja
stos
jecxz
mov
add
bound
fidivrs
push
leave
fildl
pop
mov
test
nop
aad
xchg
mov
add
and
fstpt
cmp
inc
jmp
mov
je
sbb
dec
lds
sar
fmuls
sub
mov
add
aas
or
mov
add
mov
add
mov
out
add
sbbl
stos
je
dec
repnz
loop
pop
jbe
ja
sub
leave
imull
pop
push
out
push
adc
jp,pn
subl
xlat
jb
pop
leave
xchg
mov
jl
in
cmp
out
cmp
mov
xchg
aad
jecxz
push
sbb
lods
ljmp
sub
sub
lock
or
stos
push
pushf
push
dec
stos
jnp
mov
push
mov
mov
fimull
mov
mov
adc
adc
inc
mov
sub
pop
mov
pushf
xor
test
sub
fucomp
in
lcall
push
xlat
cmp
or
lahf
and
adc
mov
xchg
jns
adc
cmp
lret
xorb
jecxz
jecxz
sarb
push
xchg
or
loope
sub
dec
mov
xchg
inc
push
dec
inc
add
add
push
outsb
fisubs
test
mov
pop
pusha
mov
add
mov
xchg
int3
dec
mov
test
adc
push
cmp
sbb
or
xor
and
jns
js
mov
in
and
data16
push
mov
and
popf
scas
pop
adc
push
ret
xchg
mov
mov
jns
jp
call
sub
xor
movsb
fstl
test
jno
insl
pop
sub
and
mov
push
popf
jb
ficoml
mov
sbb
fisubs
and
movsl
imul
jg
push
xor
xchg
mov
fldt
jns
cmpl
lcall
push
mov
cs
out
cmp
das
pop
xlat
insb
adcl
push
std
sbb
dec
push
inc
mov
imul
push
adc
stc
mov
psraw
pop
dec
lods
dec
dec
jp
mov
repnz
aad
sub
push
sbb
add
mov
jns
push
mov
mov
add
into
and
push
xor
inc
jp
stos
sti
push
cmp
ret
sub
jecxz
scas
inc
cmp
popa
insb
sbb
pop
mov
iret
mov
sarb
inc
pop
lods
mov
std
loope
addr16
sahf
xor
fimull
scas
inc
jmp
dec
lret
push
push
jmp
fbstp
ja
pop
pshufw
int3
xchg
scas
das
mov
popa
fsubrl
jae
and
out
dec
xor
and
sbb
pop
sbb
inc
sbb
sub
xchg
sbb
pop
pop
das
mov
iret
mov
adc
pusha
outsl
jle
xor
mov
icebp
sbb
mov
sbbb
and
aam
fnsave
add
jmp
adc
pop
in
test
js
lret
adc
and
out
test
in
leave
inc
fldcw
xchg
ja
lock
sbb
sbb
cld
lret
add
int
fstp
iret
push
cmpsb
fadd
dec
sub
test
push
add
add
mov
ss
sub
fcomps
jmp
sub
xchg
mov
jle
lds
and
inc
arpl
out
clc
imul
mov
inc
scas
rorb
mov
repnz
pusha
ljmp
imul
pop
pushf
and
scas
xor
push
xor
sbb
pop
mov
loopne
in
sbb
cs
popa
push
mov
and
mov
das
ss
inc
pop
pop
lods
in
push
jle
mov
inc
out
adc
xchg
fistl
push
or
cmp
jne
cmpb
scas
lds
push
mov
adc
and
cs
inc
dec
pushf
mov
fstl
sbb
inc
cmpsb
flds
inc
xchg
mov
mov
mov
inc
repz
mov
imul
ficoms
lahf
and
scas
std
out
ljmp
outsl
mov
add
adc
mov
out
sbb
adc
fwait
cltd
fucom
jp
adc
mov
in
push
gs
ret
imul
test
dec
lods
push
lock
push
cmc
fstl
cmc
syscall
mov
loope
movsl
adc
aaa
sub
cmp
sbb
pop
mov
mov
inc
and
aas
inc
stc
sbb
lcall
loopne
incl
xchg
out
xchg
mov
nop
out
push
push
sbb
mov
mov
push
and
adc
sub
push
inc
push
lret
insb
jp
les
cmp
dec
in
sub
cld
jg
jnp
sbb
xorl
add
fisttpl
jno
sub
lahf
lods
and
mov
daa
mov
ljmp
js
filds
cli
sub
pop
xchg
lcall
adc
adc
add
add
fistps
jb
add
lods
les
jnp
mov
icebp
das
jae
ja
lea
add
push
dec
push
subl
or
insb
ds
out
dec
xchg
cmc
mov
mov
inc
and
stos
dec
push
inc
xor
cmc
sub
inc
cmp
insb
sub
bound
stc
shll
push
out
loopne
push
and
ret
mov
cmpsb
test
cs
pop
in
outsl
pop
int3
push
les
fcomps
push
scas
add
rorb
push
push
jnp
shrb
cmp
fld
jg
pop
insb
test
scas
testl
add
sub
pop
scas
sub
out
adc
shrl
lods
xchg
xchg
fimuls
decb
sbb
icebp
xchg
das
lea
push
xchg
mov
push
ret
cmp
xor
add
mov
push
and
cmp
pop
rolb
stc
and
jg
pushf
or
pop
lea
sub
add
add
les
fcomps
add
adc
add
fs
es
mov
push
shrb
lcall
and
data16
inc
dec
cmp
jl
movsb
inc
fwait
lock
jle
push
out
sbb
mov
mov
xchg
pop
add
fiadds
test
rcll
js
in
jbe
and
jge
cmp
or
aaa
cmpl
or
adc
xchg
mov
pop
jl
mov
xorb
fcmovnu
das
xor
aas
adc
rcrl
in
xchg
adc
sti
aaa
cltd
dec
dec
dec
cmpsl
mov
les
sbb
push
movsb
cmp
lahf
mov
or
mov
push
cmp
cmc
inc
inc
adc
cmp
in
les
imul
mov
cwtl
outsb
enter
shlb
rclb
enter
xchg
xchg
roll
push
andl
test
jg
jle
or
sub
add
add
ljmp
dec
mov
inc
xchg
jle
add
add
pop
out
dec
ficompl
imul
jl
subb
movsb
mov
cmc
shrl
mov
dec
repnz
out
cmp
gs
repz
mov
cmc
roll
pop
je
movsb
mov
add
sub
mov
add
arpl
push
adc
scas
mov
xchg
fildl
lea
sub
lea
imul
mov
stc
cld
or
sbb
daa
lret
mov
in
push
mov
mov
ds
fisubl
mov
and
and
lods
faddl
ror
dec
add
andb
mov
mov
ret
adc
std
icebp
testl
stc
mov
mov
in
sub
ret
push
dec
movsb
pop
test
mov
dec
mov
lret
mov
xor
mov
ret
outsb
push
movb
add
inc
cmpl
add
aaa
shlb
cmc
div
testl
pop
adcl
add
mov
mov
mov
cld
sbb
fstpt
mov
jp
test
fcmovu
mov
jnp
stc
xchg
and
jle
dec
gs
xchg
aaa
jp
jae,pt
gs
std
ret
and
pusha
mov
fdivrl
sti
dec
adc
xor
adc
xor
test
mov
pop
add
pop
sub
sahf
es
into
data16
mov
arpl
cmpsb
mov
sbb
sub
testb
stos
test
iret
movsl
push
loop
xor
cmp
inc
fs
and
sub
inc
xor
adc
clc
fmuls
xchg
int3
scas
mov
mov
inc
out
arpl
pop
enter
pop
mov
les
outsb
movsb
lret
xchg
stos
dec
xor
push
or
movsb
or
mov
add
pop
push
nop
push
sahf
rcr
pop
adcb
or
add
add
push
outsb
rorb
lods
push
or
sub
inc
daa
movsl
sub
loop
sub
ficompl
jno
adc
cmpb
cmp
pop
or
adc
aaa
in
pop
cmp
push
repnz
hlt
rol
xorl
pushf
out
jle
into
push
adc
jecxz
mov
mov
pop
insb
call
xor
rcll
xor
lcall
movsl
mov
mov
scas
sub
pushf
nop
cli
aad
jb
aas
mov
cwtl
push
or
pop
jge
inc
xchg
les
pop
xchg
inc
lcall
sbb
cmp
dec
cmpsb
xchg
inc
pop
sahf
sbb
movsb
orl
xor
std
lret
xor
cmc
jge
xor
sub
xor
test
stc
or
sub
dec
dec
xchg
movsb
cld
sub
enter
mov
popf
add
add
arpl
cmpsb
jcxz
fimull
lea
add
or
or
xchg
cli
arpl
jge
xor
mov
lahf
test
pop
mov
stos
sub
sahf
out
and
sub
outsl
mov
fs
adc
ljmp
and
xorl
jecxz
adc
mov
sub
jp
xchg
loop
xchg
sub
or
sub
mov
or
and
pop
jmp
lds
pop
mov
xchg
or
into
int
xor
stc
and
dec
repnz
and
incb
cmp
and
mov
add
repnz
scas
insb
inc
mov
mov
mov
fadds
mov
adc
cmp
icebp
popf
and
and
bound
int
imul
stc
xrelease
stos
jle
jge
ret
mov
add
clc
jnp
jg
in
cli
enter
shlb
xchg
xchg
add
add
xchg
lds
sbb
xor
cmpsl
jg
call
jecxz
lods
je
cwtl
adc
stc
lret
inc
jbe
jecxz
adc
inc
xchg
cltd
mov
stc
push
push
pop
iret
sbb
sub
jp
pop
cmp
sub
sub
xor
loopne
stos
popf
into
mov
or
mov
cmp
sub
jle
shll
popf
add
fcmovne
inc
fidivs
ds
add
in
gs
pop
loopne
or
inc
cli
imul
scas
rcrb
inc
enter
ljmp
das
and
rorl
daa
pop
or
aas
jbe
mov
push
xlat
nop
inc
aaa
mov
jno
mov
push
inc
xchg
int3
push
inc
mov
mov
xlat
sbb
mov
and
out
jno
pop
call
shrl
popf
add
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
dec
arpl
add
sti
mov
sbbl
rclb
jmp
cmp
mov
sbb
imul
and
lods
adc
cmpsb
jg
cltd
addb
push
dec
dec
mov
fstpt
mov
cmc
subb
ret
rcrl
fimuls
fwait
xchg
sbb
imul
shlb
sub
and
cmpsb
jg
sub
in
roll
add
jg
test
adc
xor
mov
insb
into
notl
pop
sbb
mov
filds
dec
xchg
repnz
pop
aad
stc
adc
out
pop
shlb
xorb
inc
mov
mov
inc
adc
jbe
sbb
jne
xchg
pop
in
and
adc
insb
mov
loopne
xor
add
fstpl
or
pop
scas
xchg
mov
xlat
mov
sti
jne
fwait
xchg
add
add
add
jl
sar
std
jle
pop
popf
scas
out
mov
add
mov
push
xchg
shrl
lods
outsl
out
mov
cmc
cmpsb
sub
in
lods
loope
add
je
inc
inc
insl
or
lahf
pop
pop
jle
loopne
sub
xor
and
loop
cmp
int
cltd
mov
and
jns
out
cli
xor
daa
test
mov
xchg
repnz
mov
cmp
out
mov
xor
and
dec
aaa
mov
fsubl
pusha
lds
insb
lea
aad
fcompl
mov
nop
pop
inc
and
cmp
test
mov
arpl
cmp
iret
pop
aaa
insb
stos
pop
inc
push
enter
add
je
subb
sti
cmp
fmull
inc
add
stc
sub
loop
mov
int
cmp
into
push
mov
fisubrs
cmpsl
mov
add
cmp
cmp
in
sbb
popa
jmp
add
mov
jae
shrd
push
add
stc
in
das
outsl
dec
pusha
adc
jmp
mov
xchg
adc
sub
incl
pusha
cmp
inc
pop
ja
pop
inc
xchg
or
and
lcall
in
pop
and
adc
jmp
add
cwtl
in
mov
cld
mov
sbb
ss
jle
mov
adc
fdivl
nop
jmp
and
lret
fwait
cltd
jp
shll
mov
int3
cmp
sbb
xchg
lahf
inc
clc
pushf
sub
jnp
mov
mov
sti
fidivs
cli
cmp
lret
rclb
scas
xor
mov
outsl
out
call
popf
xchg
or
and
andl
and
mov
xor
xchg
xchg
push
sbb
test
fwait
inc
lret
fdivrl
add
add
outsl
sti
mov
mov
inc
add
xchg
add
add
loop
test
ret
xlat
pusha
jb
mov
jnp
jno
push
cs
aam
test
pop
testb
les
lods
fiadds
insb
ret
add
sub
call
jnp
xor
pop
sbb
les
or
jmp
pushf
cld
pmovmskb
pop
cs
int
sti
int3
into
les
cmpsl
inc
push
movsl
call
xlat
fdivrs
mov
mov
push
aad
add
mov
add
js
mov
xlat
std
xorl
leave
push
mov
mov
addr16
fidivl
push
pop
sbb
sub
lods
sub
addr16
inc
or
sub
sbb
cld
jno
sub
sub
dec
sbb
dec
adc
pop
rcll
jmp
stos
addb
jl
out
movsb
orb
out
test
ds
sbb
pop
les
xchg
cld
or
cwtl
cld
mov
sbb
add
dec
std
out
xlat
aas
dec
sbb
or
stos
cwtl
add
add
data16
enter
push
ljmp
pop
sbb
cwtl
mov
add
mov
mov
stos
dec
iret
push
test
xorb
imul
add
popf
mov
mov
es
sub
cmp
pop
fildll
or
scas
test
scas
es
sbb
cmp
cmpl
push
mov
push
cmpsb
ds
xchg
lock
clc
add
fwait
das
and
jo
out
and
mov
es
decb
sti
stc
orb
jne
push
fsubrl
push
xchg
sbb
clc
pushw
pop
in
sub
inc
bound
pop
scas
pop
dec
ljmp
cli
rorl
jnp
mov
dec
daa
movsl
dec
mov
inc
aas
pop
dec
xchg
xchg
neg
inc
mov
push
call
test
jge
jnp
sbb
jp
mov
add
mov
mov
jmp
test
cltd
add
add
push
daa
aam
or
fwait
mov
xchg
and
sbb
xor
mov
inc
adc
outsl
cmp
clc
popa
clc
scas
pop
flds
and
pop
iret
sbb
lock
sub
add
ja
in
cmp
test
xchg
jae
add
pop
sarl
test
je
mov
push
je
sbb
adc
jg
jb
dec
lods
push
das
stos
dec
jge
imul
inc
sbb
push
and
pop
mov
mov
xor
insb
sbb
gs
shrl
cmp
int
arpl
xor
sbb
shlb
ss
push
add
inc
push
push
lods
or
mov
pop
hlt
loop
lods
inc
push
stos
xor
push
addr16
lahf
dec
int3
imul
push
test
xlat
push
aas
sbb
cltd
or
jbe
mov
add
add
lret
sbbl
popl
xchg
xchg
mov
add
add
mov
scas
inc
adc
jo
clc
in
add
push
loopne
sub
dec
dec
mov
movsl
shl
addb
mov
lret
cmpsb
mov
jle
add
bound
fwait
mov
scas
jecxz
dec
iret
shll
addr16
lods
lock
push
repnz
cmpsl
mov
pushf
jle
dec
lea
cmc
xchg
add
ds
dec
dec
push
pop
daa
and
scas
add
add
fisubrl
gs
push
push
mov
mov
cmpsb
gs
xchg
insl
mov
testb
jge
add
dec
pop
add
jmp
dec
add
int
pop
daa
mov
sub
insl
test
movsb
or
loope
mov
inc
add
loop
leave
in
notb
and
jne
inc
outsb
xchg
jmp
push
xchg
ds
xchg
cmp
std
shrb
xor
insl
insl
mov
jb
fwait
cmp
cmpsb
add
add
imul
movsb
and
imul
mov
add
add
imulb
stos
scas
sub
incb
icebp
inc
pop
or
dec
jnp
xor
push
cwtl
xchg
pop
pop
mov
cmpsl
sbb
flds
sub
xchg
test
mov
sub
xchg
iret
add
insb
fxch
subl
addr16
push
mov
and
mov
adc
ss
sahf
cld
out
test
push
jp
shr
in
shl
push
fisubrs
es
mov
add
mov
or
push
sub
sub
add
subb
call
xor
out
jg
rorb
repnz
xchg
ret
lea
jns
push
fcmovb
sti
mov
push
sbb
jecxz
jle
sub
and
cmp
fiadds
adc
adc
lahf
xchg
shrl
fcmovbe
push
es
loope
xor
lea
shrb
sahf
lds
js
adc
icebp
icebp
pop
add
add
mov
sub
lahf
mov
or
mov
add
add
sahf
xchg
test
adc
add
nop
in
sub
les
addb
xor
into
shrb
adc
popa
mov
jge
in
aam
out
fdivrl
cwtl
and
shlb
repnz
mov
fadds
inc
push
std
dec
or
mov
dec
sar
xor
mov
in
imul
push
inc
ret
scas
inc
mov
mov
orl
inc
mov
push
lock
scas
mov
or
test
nop
test
and
sbbl
test
xchg
cmp
cltd
andb
mov
int
jae
xlat
jns
mov
test
xor
in
test
inc
mov
aaa
xor
cs
sbb
adcb
ljmp
aaa
cli
inc
dec
sub
mov
stc
sub
out
xchg
loope
xor
mov
add
ja
out
inc
sub
or
test
add
and
pop
xchg
jo
loop
mov
jge
cmpsl
mov
pop
out
pop
mov
mov
ret
add
jo
enter
adc
push
andl
pop
jg
loope
sub
in
sbb
mov
cmp
leave
ds
mov
movsb
cmc
lahf
mov
mov
nop
lret
mov
lods
inc
dec
hlt
cmc
pop
scas
out
fcmove
pop
test
add
out
xlat
lret
xchg
cmp
test
aaa
jno
add
aam
scas
sysret
xlat
xlat
mov
in
cmp
les
ds
mov
add
imul
imul
xchg
mov
pop
push
jo
jecxz
loopne
imul
dec
dec
xchg
sub
xlat
mulb
push
adcl
cmp
jnp
sub
cmp
aad
jae
mov
mov
mov
dec
cmc
sahf
sbb
out
pop
les
inc
sub
add
add
pusha
test
mov
cld
mov
leave
sahf
add
add
sub
jns
fsubl
insl
mov
mov
sbb
nopl
loop
bnd
rclb
push
loopne
lods
lds
iret
xorb
pop
sti
or
pop
les
xchg
scas
xchg
lret
jmp
jecxz
sub
xchg
dec
push
xchg
add
aam
test
sbb
lret
push
sbb
aam
mov
push
jg
stc
test
bound
push
mov
push
jg
movsl
mov
adc
pop
cli
xlat
imul
es
mov
sahf
frstor
xchg
or
jecxz
loop
nop
pop
adc
movsb
shll
xchg
daa
sub
andl
in
cmpsl
pop
popa
add
ret
je
sub
pop
mov
scas
mov
mov
sbb
jmp
mov
xorb
fs
mov
cmpsl
add
pusha
out
pop
mov
inc
mov
sub
dec
add
add
mov
repz
repz
add
into
lahf
add
add
add
es
jmp
jae
fdivp
fidivl
xor
adc
ljmp
les
pop
jae
icebp
dec
test
lcall
bnd
xor
sbb
pop
in
ljmp
push
pop
add
inc
sbb
cltd
jbe
icebp
mov
movsl
dec
mov
inc
inc
xor
std
sarl
inc
xchg
mov
push
test
push
mov
sub
pushf
and
xor
dec
das
enter
cmp
sub
mov
cmp
ret
ret
sbb
cmpsb
out
bound
aad
shrb
xlat
scas
mov
mov
lret
jne
icebp
jb
mov
inc
add
push
pop
nop
pushf
mov
inc
out
jnp
dec
jecxz
ds
sbbl
mov
and
mov
dec
insl
fwait
xchg
push
cltd
inc
sub
lea
mov
pop
popf
pop
dec
into
inc
add
add
mov
inc
inc
add
mov
add
fdivr
mov
shll
or
orb
mov
addl
dec
push
imul
adc
mov
test
rcll
popf
sub
inc
stos
inc
push
cmp
mov
fdivrs
ficompl
mov
jecxz
xor
mov
xchg
ljmp
xchg
dec
sbb
shll
xlat
in
sub
sbbb
test
shlb
repnz
lret
inc
imul
sbb
adcl
das
mov
cmp
inc
sarb
fistl
fcomip
insb
xchg
sarb
sbb
and
mov
insl
mov
cld
push
pop
add
in
dec
pop
pop
loopew
in
push
cmpl
and
jo
and
rclb
or
cmpsb
shll
popa
test
mov
jp
addb
add
std
inc
mov
inc
movsb
fsubs
add
orb
cmpsb
sbb
in
pop
mov
stos
jno
es
inc
push
pop
xchg
nop
rolb
mov
pusha
popa
in
and
adc
ficompl
pop
cmp
push
ds
cmp
push
mov
xchg
addr16
mov
std
push
mov
sbb
in
xchg
aas
add
ss
iret
jmp
sub
add
outsl
cwtl
lock
fiaddl
mov
lods
mov
stos
imul
sub
loopne
out
out
add
jae
push
adc
int3
pop
dec
xchg
push
push
lods
sbb
in
lods
jle
add
ljmp
insb
aad
push
mov
adc
cli
jmp
jp
xor
inc
or
xchg
mov
mov
stos
sub
xor
ljmp
jl
mov
leave
push
out
aaa
jae
xor
cmp
add
add
inc
fdivl
push
dec
mov
frstor
add
loope
fists
xor
outsl
mov
xor
jmp
gs
jg
add
dec
add
jmp
aaa
ret
dec
ss
xor
jmp
addr16
jbe
dec
mov
cmc
xlat
lea
aam
xchg
fimull
push
and
inc
cmp
mov
andl
outsl
mov
les
push
shll
cmc
sub
jmp
shll
rep
mov
push
js
adc
aaa
test
jmp
repz
pop
xor
jecxz
cld
xchg
sti
lret
sub
cwtd
mov
in
es
push
cmc
add
test
pop
fstps
iret
dec
mov
jb
out
clc
adc
loop
fs
sub
lods
les
scas
and
mov
test
imul
add
pusha
loope
mov
cmp
les
movsb
mov
sub
or
test
adc
mov
sbb
add
mov
add
push
out
aam
in
test
pusha
add
dec
je
out
mul
cmp
imul
add
and
inc
rolb
jp
inc
mov
add
in
in
clc
and
or
movsl
sbb
mov
int
jns
inc
cmp
xchg
arpl
neg
je
shr
xor
loop
gs
cmp
xor
and
add
add
sbb
stc
in
into
jnp
mov
dec
icebp
mov
pop
lret
pop
fldcw
and
jns
or
addr16
push
push
xlat
pop
mov
out
lahf
mov
bound
push
xor
cmpsb
ja
fwait
mov
lret
into
loop
cmpsl
push
push
mov
cltd
bound
or
xor
xor
inc
jge
mov
xchg
xor
aad
aaa
mov
push
ret
das
cs
paddsb
in
or
jecxz
push
adc
add
pop
test
stos
hlt
jmp
cmp
jbe
test
ds
out
add
add
repz
push
arpl
mov
roll
fsubrs
xchg
push
ret
out
in
arpl
mov
sub
or
and
mov
leave
mov
jle
mov
mov
add
pop
je
pop
imul
mov
sub
pushf
pop
loopne
xchg
mov
jmp
out
mov
test
xor
push
mov
inc
in
in
mov
inc
iret
lods
mov
into
mov
mov
and
dec
lret
xor
fldcw
xor
pop
jae
mov
jb
cmp
push
push
in
outsl
lea
inc
xchg
idivl
or
aad
movsl
cmp
push
jne
dec
mov
cs
in
ss
insb
sbb
mull
sub
sbb
sub
sub
ja
aaa
dec
cmp
add
sbb
xchg
pop
shll
jmp
sahf
cmp
mov
into
dec
xor
jg
add
add
out
xlat
out
jg
in
xor
fstps
shll
add
fstp
xor
stos
mov
push
stos
je
xchg
xlat
std
jae
mov
xor
push
xchg
div
xor
xchg
mov
cmp
insl
repnz
mov
movsl
adc
xor
cld
mov
mov
and
cmp
ret
outsl
mov
loope
je
sbb
mov
push
mov
cmpsb
mov
mov
icebp
pop
js
ljmp
xor
shrb
imulb
inc
int
sub
or
dec
nop
loop
scas
insb
xor
jnp
or
aam
outsb
and
loopne
push
push
or
lds
dec
lods
sahf
inc
pop
imul
jg
xchg
pop
pop
pop
ficomps
and
or
les
pop
lea
inc
dec
push
dec
out
mov
push
or
dec
push
cli
pop
adc
push
jge
rcr
jl
pop
dec
sbb
mov
movsb
leave
cmp
add
push
movsl
dec
mov
out
out
int3
ss
mov
jp
arpl
mov
fs
push
popf
add
add
mov
inc
fwait
lds
jo
fldl2e
mov
cmpsb
add
add
adc
mov
orb
fsubr
add
lcall
clc
and
xchg
sub
mov
sbb
cmp
pop
xchg
aas
sub
and
lods
and
mov
add
hlt
and
or
jbe
pop
dec
fstl
movsb
xlat
xor
in
dec
stos
clc
daa
add
xchg
mov
es
out
jne
lds
ja
dec
mov
cmpl
jo
je
jnp
int
scas
mov
add
popa
nop
enter
bound
mov
mov
xor
push
jmp
add
fistps
jo
mov
cmp
pop
stos
inc
divb
leave
or
sti
leave
xchg
aad
adc
aas
mov
sbb
push
mov
stos
and
sbb
cmp
push
dec
and
out
mov
cmp
add
lcall
std
inc
jne
sbbl
add
add
push
push
sub
xor
in
adc
xor
push
stos
inc
xor
mov
in
pop
adc
inc
iret
and
outsl
inc
jae
cmp
lcall
rol
dec
mov
jae,pn
out
cmp
add
add
adc
sbb
movsl
std
mov
int
xor
es
imul
les
mov
jle
sub
adc
fdivr
mov
sbbb
mov
mov
and
push
lret
mov
les
adc
int
xchg
pop
rcl
sbb
fdiv
pop
stc
push
xor
daa
test
ret
loop
sub
mov
adc
xor
adc
push
subb
sub
push
aaa
ja
mov
cmpsb
jl
mov
pop
xchg
mov
push
insl
aam
jae
fmuls
push
jle
xor
lds
add
lret
jnp
sti
jmp
push
mov
testb
add
add
mov
mulb
and
dec
subl
in
xor
movsl
mov
lea
sbb
enter
fisttps
les
jns
jne
out
mov
or
adc
data16
add
mov
sub
adc
fdiv
popa
xor
aas
arpl
push
andb
mov
dec
jb
out
lock
mov
data16
test
jo
cltd
inc
loopne
mov
arpl
les
and
outsl
mov
adc
int3
and
pop
into
mov
push
adc
test
xor
sbb
lea
push
sub
mov
cmc
xor
push
fnstenv
int3
in
mov
mov
rcrl
xor
mov
inc
lret
jl
mov
push
mov
push
popf
dec
shrl
popf
add
add
mov
jecxz
lock
adc
add
or
lods
lods
dec
inc
pop
sub
out
xchg
addb
push
xlat
xchg
pop
aaa
rorb
sbb
cmp
xchg
popa
add
mov
pop
mov
mov
push
dec
pop
loope
inc
mov
movl
add
mov
daa
test
test
and
lock
push
outsb
cs
jae
fistpl
xor
dec
popf
sbb
aas
cltd
dec
gs
xchg
out
movsb
add
adc
push
mov
sbb
and
fidivrs
leave
aaa
lods
clc
popa
ret
ret
addr16
mov
mov
push
cli
lods
or
push
out
popa
sbb
repz
push
aaa
mov
test
push
es
out
inc
push
nop
adc
xchg
fwait
int
idivl
fisttps
xchg
addr16
pop
xchg
aas
lea
push
add
pushf
dec
push
xor
xchg
and
loop
mov
inc
cmpsl
daa
cmp
add
add
cld
mov
leave
xor
mov
add
sbb
or
daa
outsl
dec
mov
stos
inc
add
pop
stos
xlat
imul
push
inc
cmp
ret
pop
rol
addl
sbb
add
sbb
in
call
loop
dec
adc
loopne
and
cmp
fidivrl
xor
wbinvd
fs
sbb
push
js
dec
out
adc
lret
shll
pop
push
lods
xor
or
dec
dec
xor
fwait
loope
cltd
sub
ljmp
cmp
loope
cli
adc
stc
cmp
outsl
test
mov
sbb
fadd
jmp
mov
gs
dec
cli
enter
fs
jl
pop
pop
je
leave
movsb
push
jae
loop
loop
pop
lcall
pusha
adc
fiadds
pop
push
sarb
sub
lret
movsb
outsb
jbe
std
lds
ffreep
ss
dec
or
int3
or
add
mov
dec
das
pop
out
cmc
mov
imul
fimull
lods
add
add
and
lea
mov
aad
push
pop
pop
sub
out
inc
lahf
test
xor
add
lcall
jns
and
je
movsl
lock
jle
cmp
sbb
add
mov
inc
lods
gs
or
loopne
hlt
cli
fsubl
sub
dec
imul
mov
roll
xor
jg
adc
xchg
loope
xchg
push
mov
mov
scas
movsl
xchg
hlt
adc
lcall
push
movsb
mov
mov
mov
movsb
sbbl
add
jge
push
nop
repnz
mov
addr16
pop
divb
gs
iret
out
movsl
ja
cmpsb
ret
push
pop
dec
mov
mov
fwait
pop
test
ss
stc
mov
pop
lods
mov
ror
imul
xlat
mov
push
cs
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
icebp
pop
dec
mov
add
mov
mov
push
sub
call
stc
mov
push
ror
and
add
imul
sub
mov
cmp
sub
xchg
pop
mov
jecxz
loopne
popa
jne
out
stos
sub
sub
icebp
pop
cli
xchg
rep
repnz
test
mov
mov
jne
jp
jecxz
jmp
dec
cmp
ds
rcll
sbb
mov
rclb
inc
shl
lods
loopne
xchg
jb
pop
mov
inc
sbb
lret
or
insb
mov
mov
mov
je
mov
mov
mov
aad
mov
lods
mov
mov
push
push
leave
mov
xchg
or
cmp
mov
fcmovb
shrl
xchg
jg
sub
cmp
add
cmp
lcall
fisubrl
daa
mov
test
add
fidivs
loop
ljmp
movsl
sbb
rclb
add
add
sub
in
or
adc
dec
xchg
cli
pushf
roll
pusha
in
and
mov
pushf
or
mov
dec
shlb
cmc
adc
inc
or
xchg
mov
outsl
adc
xor
adcl
xchg
xchg
sbb
xlat
inc
fwait
cwtl
dec
pop
pop
mov
ljmp
and
push
jnp
pop
stos
and
ss
or
xor
arpl
cwtl
ss
sub
insb
test
and
cmp
rcll
inc
xchg
aad
push
jae
cli
fdivrl
mov
dec
sarl
add
mov
leave
inc
ljmp
dec
repnz
cmpl
mov
sub
pushf
mov
into
mov
cmc
mov
jle
sub
cmp
sti
adc
daa
lea
sub
xor
xlat
push
xlat
add
fdivrp
mov
nop
jp
push
pop
loopne
add
push
xchg
jg
jmp
std
mov
addr16
sbb
add
add
cmpsl
mov
ret
sub
daa
call
pop
pop
inc
cmp
sbb
jp
mov
loope
fidivrl
aad
imul
je
cld
mov
pop
sbb
jmp
cltd
cmp
mov
addl
fadd
loopne
sbbb
add
mov
dec
out
sbb
ds
mov
or
add
inc
cmp
std
inc
js
sbb
das
xor
mov
or
jl
cmp
test
lret
cwtl
cmp
fidivrs
fcoms
iret
fs
pop
rcr
mov
std
xor
gs
jbe
push
push
lods
inc
inc
filds
fcomps
add
xchg
into
adc
dec
mov
push
cmp
stos
sub
jo
xchg
xor
add
mov
lea
mov
in
movsb
shrl
mov
mov
xchg
push
xor
add
add
xor
inc
mov
push
repnz
mov
add
or
das
es
push
adc
and
test
lock
or
sub
pop
das
cli
xchg
cwtl
std
mov
mov
imulb
pop
pop
jo
xor
ret
cld
in
outsl
call
cltd
into
sbb
sbb
sbb
or
lds
push
add
pop
stos
pop
push
icebp
fwait
mov
lret
mov
ret
xor
loope
shlb
add
ret
icebp
dec
push
rolb
in
sub
popf
mov
out
mov
push
ds
mov
int3
imul
mov
xchg
cmp
js
xchg
repz
filds
loop
pop
lock
push
ss
push
cld
imul
faddl
xchg
push
daa
adc
mov
gs
sbb
mov
mov
pop
popa
xor
lods
pop
add
add
xor
cmp
inc
call
sub
mov
add
mov
sti
sbb
jmp
mov
dec
sbb
or
mov
lahf
inc
add
mov
pop
and
pop
roll
cmp
jmp
mov
lea
testl
jp
aad
cltd
mov
mulb
insb
add
inc
stc
call
les
push
xchg
addr16
and
mov
mov
sub
mov
push
xchg
outsl
xchg
add
push
nop
xor
mov
in
fldt
xor
mov
popa
test
addr16
lods
inc
lcall
mov
test
ret
test
xchg
sub
in
fcomps
mov
add
push
xchg
and
daa
sub
jle
lret
sbb
mov
scas
loopne
cmp
xor
sbb
add
or
cld
add
rorb
out
add
add
jp
les
mov
arpl
js
sub
add
and
sbb
inc
cltd
adc
aaa
and
imulb
sbb
ja
or
mov
cwtl
mov
icebp
xchg
mov
xchg
fnsave
or
lods
cs
das
lcall
xorb
inc
or
sti
int
in
jb
movsl
jl
faddl
pushf
dec
dec
push
lds
and
adc
repnz
mov
adc
mov
dec
mov
clc
dec
dec
in
jle
std
popf
arpl
jp
bound
js
sbb
cwtl
add
mov
cmpsl
mov
mov
and
pop
pop
jge
mov
jb
and
cmp
imul
cmp
sarb
dec
sub
rcl
dec
loop
loopne
mov
mov
jbe
test
xchg
dec
fistpll
call
cmp
dec
sbb
shrl
pop
icebp
inc
popa
loopne
add
dec
or
pop
stc
out
push
pop
bound
cmp
add
add
js
and
idivb
mov
andl
lcall
cs
les
push
xchg
dec
xchg
xchg
leave
fidivs
cwtl
mov
fdiv
cmc
in
mov
pushf
dec
inc
jns
lods
packuswb
movsb
mov
and
xor
sub
jecxz
lods
push
or
xchg
cs
cmp
or
inc
js
rclb
ljmp
into
popf
sub
ret
mov
push
mov
lcall
cld
out
fstp
jbe
rcr
nop
sub
jnp
xchg
pusha
jg
mov
xor
insb
adc
or
outsb
repz
mov
push
leave
jo
jl
stos
dec
xlat
inc
in
loopne
add
adc
mov
ljmp
and
pop
mov
in
aam
into
bound
cwtl
dec
je
add
or
test
add
lds
cli
lcall
push
xor
add
mov
dec
es
dec
out
rcll
dec
add
lods
push
into
sbb
cmp
lret
push
xchg
mov
dec
mov
mov
cmp
jge
push
sub
pop
fildll
push
push
sbb
mov
cmpsb
pop
mov
sub
pop
incb
nop
lret
add
mov
inc
pop
ss
daa
pop
dec
cmp
fwait
dec
stos
jp
jmp
mov
sbb
xchg
loope
mov
cwtl
lods
jge
mov
dec
adc
add
jae
iret
aad
fidivrl
andb
push
xor
popf
jbe
pop
int3
loop
sahf
gs
addr16
dec
xor
lods
sbb
je
cmp
push
xchg
aad
add
dec
push
or
mov
pop
insb
lods
push
dec
inc
sbb
dec
push
pop
shll
mov
mov
fcmovb
pop
dec
mov
mov
pop
scas
mov
mov
mov
fsubl
add
xorl
insb
lret
iret
adc
mov
add
push
push
cld
rcll
dec
das
xor
aas
xchg
cmp
lcall
cltd
adc
dec
xchg
dec
mov
and
int
jp
adc
jge
sbb
sbb
push
push
and
mov
lret
fstps
rep
mov
cld
jb
xchg
sbbl
mov
xchg
jmp
mov
pop
ss
push
inc
mov
pop
add
push
adc
repnz
push
lahf
aad
sbb
cld
mov
inc
inc
in
pop
cmp
into
cmp
sbb
push
push
push
dec
lret
push
xchg
gs
fidivrs
loope
outsl
and
jp
fistpl
push
pop
and
jge
mov
adcb
mov
adc
iret
add
xchg
pop
jle
cmp
testb
iret
push
ret
sbb
sbb
in
adc
mov
stos
add
add
pop
sbbl
fstp
rorl
mov
add
mov
jne
inc
jl
push
inc
inc
sub
mov
and
pop
cwtl
out
sub
pop
xchg
outsl
add
push
mov
jne
mulb
add
mov
push
imul
sub
inc
cs
in
jg
xchg
ja
jmp
loope
dec
gs
aad
dec
out
pop
roll
in
xor
std
dec
push
or
enter
dec
mov
pop
scas
pop
jns
inc
mov
add
mov
ficompl
jle
insb
mov
push
xchg
lret
imul
sub
mov
cmp
push
push
inc
sbb
or
gs
gs
mov
fs
sub
lods
sub
fisubl
bnd
decb
lcall
pop
xor
aad
cmp
jecxz
jmp
xor
cli
rcrl
aam
adc
jbe
inc
testb
inc
inc
inc
push
sub
add
loope
mov
jecxz
out
mov
fiadds
mov
add
jle
mov
push
adcl
sbb
lahf
pop
fimuls
repz
in
lret
shl
pop
das
jbe
pop
icebp
in
add
dec
cmp
pop
inc
leave
lahf
test
cmpsl
hlt
mov
jno
mov
xchg
cs
icebp
mov
movb
es
mov
xor
xor
ss
mov
ficoml
call
mov
mov
adc
sub
ljmp
loop
jl
bound
int
cmp
mov
sbb
sbb
fsubs
push
jp
cld
les
or
enter
cmp
test
adc
enter
sub
mov
add
cmp
or
mov
add
adc
mov
push
jg
xor
test
pop
sbb
mov
mov
popa
inc
add
adc
inc
cld
xchg
call
fwait
stc
pop
in
push
fstp
aad
ret
add
add
std
test
jg
into
lret
orl
add
add
push
xchg
insb
sbb
adc
push
and
push
rclb
xor
fiadds
xor
and
or
fsubs
mov
sbb
jnp
push
ret
xchg
push
out
add
repnz
ret
mov
into
adc
push
test
bound
xchg
idivb
lret
and
inc
cmc
out
stos
add
dec
movsb
cmc
orb
shl
and
push
mull
test
loope
fisubrl
sub
out
popa
jae
out
jne
pop
loop
ret
adc
in
icebp
jmp
lret
xor
rorl
lods
push
mov
addr16
pop
jmp
push
test
loope
mov
adc
icebp
sahf
test
xchg
dec
inc
popf
adc
dec
outsl
pop
and
push
lock
push
dec
mov
inc
hlt
xchg
xor
push
loop
jne
push
mov
jg
ret
cmp
sbb
inc
sub
int
jmp
add
add
adc
in
lcall
jae
dec
mov
insl
lds
mov
add
cmpb
adc
lods
in
mov
and
cmpsb
je
jnp
ss
push
popa
sub
mov
or
xor
es
jbe
mov
sub
sub
lret
cwtl
daa
add
scas
push
fdivrs
mov
ret
push
mov
ss
dec
or
ljmp
push
lret
pop
mov
xor
cmpsl
jl
lea
cmpsb
fisttps
icebp
fildl
mov
stos
cmp
cmp
loopne
mov
push
int
int3
enter
jp
xor
push
jle
xchg
in
sub
adc
fidivrs
pop
lret
lds
and
pushf
out
lds
dec
iret
cmpl
and
lds
cltd
and
pop
insb
push
push
iret
push
jge
adc
pop
jmp
push
lea
pop
xchg
xchg
gs
test
mov
pop
and
cmpsl
mov
add
dec
or
jg
dec
arpl
mov
add
jecxz
call
mov
test
adc
cmc
push
xchg
out
stos
adc
jmp
cmpsl
push
imul
rcrw
rcrl
push
mov
push
es
push
std
sbbb
inc
andb
xchg
andl
mov
cli
adc
push
es
ss
mov
pop
or
fnstsw
aaa
adcb
mov
ja
stos
je
add
inc
clc
pop
out
pop
aaa
les
or
leave
fld
xchg
inc
mov
popf
loopne
jno
jmp
xchg
adc
adc
dec
popf
rorb
or
cmp
jp
dec
adc
enter
xor
sbb
inc
sbb
int
stos
notb
data16
pop
mov
movsb
subb
sti
in
jg
mov
mov
fsubrs
outsb
cmp
loope
or
sub
add
fimull
inc
dec
lcall
les
add
insl
sbb
outsl
mov
les
push
mov
add
test
stos
jmp
mov
or
push
xor
leave
mov
fwait
daa
fists
or
xchg
xchg
jo
xor
ljmp
shl
mov
dec
jb
jp
xlat
int
lods
mov
dec
mov
imul
cwtl
jg
xor
sbb
inc
cmp
and
mov
cmp
or
push
enter
jo
daa
ficomps
loop
mov
movsl
add
xor
xor
aad
sub
xchg
fwait
cmp
and
mov
jmp
and
loope
mov
xchg
xor
aam
dec
xor
dec
shrl
cwtl
out
test
push
jnp
out
dec
inc
sub
ljmp
ljmp
mov
add
dec
dec
cwtl
push
imul
jo
mov
rorb
xchg
mov
das
or
test
mov
jmp
add
add
inc
fbld
mov
pop
test
mov
add
mov
cmp
lcall
sub
loope
jne
mov
imul
jbe
cs
sub
push
sbb
jb
push
add
loopne
jb
icebp
iret
andl
push
mov
push
ss
or
sub
nop
add
outsl
lahf
int
test
insl
pop
mov
jo
mov
add
mov
sub
lods
test
addr16
sbb
int3
xorb
jmp
lret
imul
xor
mov
cmpsl
into
sub
xchg
loope
fnstenv
or
jno
in
pop
out
inc
out
movsb
mov
or
push
cmp
mov
sbb
inc
sub
sbb
int3
inc
fcmovne
add
sub
arpl
push
scas
sbb
inc
mov
mov
in
jge
mov
jno
clc
sbb
add
adc
shlb
inc
pusha
cmp
jne
cmp
add
add
fistpll
call
dec
jp
movsl
pop
mov
add
cld
lea
cmp
xchg
mov
ja
ja
shrb
das
xchg
test
cltd
mov
test
adc
fildll
xchg
aam
jp
mov
aam
dec
push
xor
shlb
dec
hlt
in
in
jg
jbe
add
cmpsl
lods
jb
or
dec
or
mov
jl
int3
je
fmuls
cld
clc
jb
push
jg,pt
xchg
sub
add
mov
jbe
bound
test
andb
outsl
and
in
pop
lret
pop
and
push
fidivs
insb
fsubr
fstl
cmp
out
test
sbb
dec
fcmove
ficoml
pusha
mov
push
inc
xor
mov
sub
ja
mov
data16
xchg
inc
dec
mov
sbbb
aas
sbb
popf
clc
pop
daa
cmpsl
out
or
push
adc
cmp
inc
cmpsb
pop
lea
mov
ret
data16
add
into
std
sti
leave
sti
iret
jmp
sub
aam
mov
add
push
mov
mov
adc
fiaddl
bound
dec
int3
jae
xlat
xchg
mov
adc
and
adc
cmp
sahf
xlat
sub
adc
negl
sub
ds
add
dec
push
adc
fstpt
sbb
pusha
pop
mov
add
pop
add
pop
repnz
popf
in
cmpsb
mov
std
and
cltd
mov
xlat
mov
dec
andl
or
lcall
aam
or
sbb
stos
scas
dec
pop
aad
jbe
jl
fistpl
cmp
sbb
sub
ja
cld
sbb
popf
add
mov
mov
shlb
lods
jp
movsl
fsts
data16
outsl
inc
mov
adc
or
add
enter
popf
bound
pop
cltd
xor
cmp
in
fwait
scas
iret
cmp
add
mov
mov
xor
sti
push
mov
add
rolb
xor
mov
enter
out
push
in
xor
sub
jb
inc
sbb
mov
sbb
int3
xchg
cmp
or
in
out
dec
int3
iret
lea
jo
dec
adc
xchg
jge
pop
out
lret
lods
cli
dec
mov
pushf
xchg
loope,pn
scas
nopl
mov
push
adc
dec
cmp
push
add
pop
inc
fstps
out
mov
and
add
add
movl
in
mov
hlt
push
and
xor
sub
daa
jbe
cmpsb
into
lock
out
outsb
mov
mov
mov
sub
loop
inc
push
xchg
sbb
mov
dec
xor
cmp
dec
cwtl
jns
mov
and
vxorpd
loopne
fiaddl
push
jbe
cld
les
fnsave
cmpsl
fisttps
add
add
jg
mov
sahf
loop
inc
out
outsb
outsb
rolb
add
cmp
xchg
or
sbbb
lds
insl
inc
pop
imul
jle
mov
dec
dec
mov
jge
push
sbb
int
fstpt
jae
int
mov
jbe
push
subl
aad
ret
jle
xchg
jae
rol
xchg
and
sarl
pop
xchg
int
push
and
jns
in
dec
repnz
xor
jle
xlat
sahf
and
imul
xchg
xor
push
pop
sub
mov
xchg
adc
xchg
jp
rol
and
xchg
or
sti
je
cmp
mov
sti
pop
cltd
ja
xchg
push
pop
adc
cltd
xor
jmp
cmp
sti
dec
outsl
fdivrl
popa
popf
dec
push
or
and
mov
push
mov
pop
pop
jbe
jp
mov
xor
sub
push
push
add
add
inc
enter
pushl
cld
sbb
jae
add
add
out
pop
cmp
xchg
or
lock
jne
rcr
push
jns
fcoml
push
xor
sbb
xor
cmp
popf
jecxz
adc
aas
sub
sub
cmc
dec
dec
xlat
xchg
outsl
push
or
jno
cltd
jnp
imul
mov
mov
loop
push
test
sahf
pop
xchg
shrb
pop
xchg
lods
ficoms
push
mov
cmpl
mov
movsb
push
cmp
add
adc
clc
scas
shl
or
rol
aad
push
rclb
cmp
dec
jb
mov
pop
dec
mov
stc
sub
sub
mov
push
aas
test
subb
iret
pop
loope
shrl
inc
out
repz
pushf
and
notb
inc
test
jle
and
jge
and
in
cmp
push
cmpsb
scas
aas
and
push
mov
test
add
add
pushf
shrb
lcall
mov
ret
add
xor
scas
cmp
xchg
pop
push
and
out
jmp
lret
cmp
sub
xlat
in
mov
and
mov
mov
cwtl
mov
rcl
pop
sbb
out
push
and
aam
mov
pop
test
and
xchg
lret
popf
or
cmp
push
fisubs
lods
out
leave
jl
mov
push
xor
lock
push
mov
mov
nop
and
push
jns
pusha
jae
shl
cmp
icebp
adc
mov
xchg
imul
xor
lods
xchg
mov
nop
clc
mov
iret
mov
sub
or
in
ss
popa
push
adc
inc
fisttpll
je
push
adc
shrb
inc
ret
jbe
jmp
jae
das
inc
xchg
out
mov
popf
cmpsl
mov
mov
cwtl
add
dec
out
repz
enter
movsb
es
dec
popa
add
add
test
mov
aas
scas
fsts
ret
add
add
and
xor
add
push
mov
in
dec
pop
pop
es
mov
sbb
sbb
in
xor
shlb
jle
outsl
mov
gs
or
cmpsb
sub
ljmp
sbb
and
int3
xchg
jp
or
cmp
sub
xchg
mov
pop
dec
fstpt
insb
fstps
mov
fstl
pop
leave
adc
xchg
adc
in
cwtl
and
jbe
mov
mov
sarb
xchg
sub
cmpsb
insl
pop
aad
rorb
jne
cmp
push
movsl
xchg
xlat
sbb
lods
sti
push
js
lods
popa
xchg
or
push
ret
popf
jp
sbb
jge
insl
cmpsb
jp
cmp
push
test
int3
out
mov
or
repz
fadds
or
dec
inc
mov
mov
xchg
call
dec
std
or
mov
add
jg
jne
jne
jg
loop
mov
pop
add
add
mov
xchg
int3
rclb
mov
push
cwtl
sbb
mov
dec
int3
sbb
and
loop
mov
mov
es
je
aam
inc
add
adc
and
shlb
push
sub
jmp
std
sub
cmpb
repnz
mov
icebp
cmc
gs
push
out
adc
push
or
sbb
sbb
pop
rol
jns
sti
mov
rolb
idivl
push
lahf
aaa
inc
scas
call
push
aad
jg
mov
ljmp
push
ss
ret
xor
sub
std
movsl
push
adc
testb
aaa
dec
gs
bound
mov
iret
fdivr
test
cmp
inc
inc
jge
or
xchg
ret
add
sahf
call
in
and
movsb
inc
cltd
lahf
ds
aas
lock
bound
outsb
stos
addl
aam
dec
enter
call
sbb
mov
cmc
mov
pop
xchg
add
add
sbb
out
adc
clc
in
int
push
pop
jp
sti
cmp
inc
xor
das
arpl
jge
fnstenv
es
push
add
mov
shlb
xchg
in
fisubrs
sbb
test
jecxz
sub
xchg
lock
jg
mov
sbbl
lret
stc
pop
jle
movsb
in
ss
add
out
mov
mov
sub
dec
mov
lods
sbbb
insl
rolb
lea
mov
stos
pop
or
int3
fnstsw
add
and
sbb
aam
sbb
mov
push
mov
mov
jae
dec
arpl
add
mov
pop
or
inc
mov
prefetch
shrb
adc
mov
out
inc
push
inc
and
stos
cltd
mov
mov
jl
andl
xchg
imul
div
daa
mov
decl
pop
mov
dec
mov
add
add
outsb
jle
lods
testl
movb
add
pop
idiv
mov
sbb
mov
mov
repnz
js
mov
lret
inc
push
ljmp
out
stos
rorl
int3
pushf
inc
add
push
inc
inc
push
pop
sub
adc
add
inc
repnz
mov
xor
sub
and
jecxz
dec
stc
bound
std
jnp
in
or
push
arpl
jge
punpcklwd
rorb
clc
and
xor
cld
sub
rcrb
mov
scas
test
jp
adc
fs
push
fs
mov
in
push
out
insl
pushf
push
aam
cmp
repnz
lods
stos
loope
mov
dec
pop
sub
jnp
mov
mov
push
and
repz
mov
mov
mov
stc
addl
in
jmp
xor
call
loope
stos
or
jecxz
imul
add
add
mov
xchg
insb
jmp
movl
add
fldcw
call
cmp
mov
lret
rolb
jmp
mov
sbb
sbb
faddl
sbb
std
dec
mov
pop
inc
jae
push
inc
in
clc
xchg
out
int
dec
call
jle
xlat
bnd
cld
in
stos
sub
shll
in
test
jno
out
or
adc
testl
and
xchg
add
es
xchg
sub
mov
push
popa
mov
cmc
inc
lods
loopne
or
push
dec
sub
xchg
out
mov
movsb
out
push
adc
inc
incl
mov
push
adc
pop
repnz
shrb
les
jns
arpl
lahf
icebp
push
lcall
stc
or
stos
fistpll
test
mov
push
mov
movsb
mov
sti
cmp
mov
xchg
nop
inc
or
xchg
and
ret
sub
jle
mov
int
add
add
out
sti
xlat
in
aad
inc
rclb
add
mov
loopne
ljmp
sbb
in
add
push
fwait
jecxz
ja
pop
dec
adc
push
fs
sbb
xchg
xchg
inc
and
repnz
mov
je
sti
lret
div
test
and
rorl
ljmp
test
xchg
js
fwait
mov
je
subl
enter
shll
xchg
in
gs
add
mov
data16
fadds
mov
adc
xchg
movd
inc
arpl
bound
es
add
push
mov
sub
xor
inc
lret
mov
leave
pop
xor
notl
jle
sbb
shlb
and
or
sbbl
mov
pxor
pop
sbb
mov
add
add
push
sub
cmp
jg
and
mov
cli
movsl
xor
add
push
insl
data16
xchg
negb
xor
lock
std
xchg
cmp
stos
mov
les
xor
nop
pop
or
cmpsb
push
and
imul
jle
bound
scas
jns
lock
mov
es
or
adcl
sub
jae
cmc
loope
rorl
pop
inc
negb
mov
xlat
pop
in
pusha
movsb
pop
popf
gs
cmpsl
mov
mov
xor
mov
ror
fimuls
adc
ss
inc
xlat
fisubrl
adc
adc
or
lret
insb
les
icebp
jp
inc
xlat
jge
jl
pop
pop
cmp
xor
sub
insb
test
add
fsubr
dec
pop
jge
ds
enter
cmc
test
sub
in
or
lahf
pop
inc
mov
and
filds
fcoml
cmp
repz
add
xor
fistpll
out
repz
fcoms
call
lret
add
push
iret
jbe
ds
dec
test
es
or
jnp
mov
fcompl
pop
sbb
cmpsb
mov
cmpsl
subb
js
inc
and
test
lret
dec
bound
jle
mulb
jp
mov
mov
xor
or
outsl
inc
dec
push
mov
or
xchg
pop
cwtl
pop
add
ficoml
sub
adcl
fsts
push
cmp
mov
or
inc
inc
inc
mov
loope
aam
inc
ret
push
sub
jmp
jg
out
test
jo
pop
mov
xchg
sbb
mov
sti
sub
and
inc
daa
push
popa
fmull
in
test
mov
ds
das
in
mov
push
test
ja
jmp
leave
jb
pop
mov
shll
fldenv
push
jle
sub
inc
test
mov
add
mov
mov
mov
mov
add
movsl
lret
add
add
inc
lods
xchg
jl
aas
pop
push
ret
pop
mov
jl
and
aas
jmp
je
xor
scas
mov
ds
shlb
sahf
fstl
sub
or
in
cmp
cmp
pushf
sbb
sub
cmp
insl
mov
or
or
and
imul
and
push
in
add
or
mov
sub
pop
adc
inc
lods
ret
fbstp
lds
fst
mull
add
sbb
adc
idivl
test
inc
aaa
add
push
cltd
xchg
ret
xchg
stos
mov
ja
cli
mov
jnp
inc
jp
sahf
mov
jns
and
and
jmp
inc
or
mov
enter
dec
xchg
fiadds
jns
cmpsl
sarb
and
sbb
mov
iret
mov
add
add
enter
in
sbb
push
inc
not
jecxz
stos
int3
add
add
mov
add
mov
lret
sbb
sub
jmp
mov
xor
lret
mov
ss
xor
outsb
mov
hlt
jmp
out
in
popf
xchg
and
jmp
jbe
fstpt
cmc
mov
add
sub
scas
popf
cmp
jl
jl
sub
adc
pop
rcrl
andl
dec
jo
pop
rcrl
sub
movsl
inc
out
cmp
pop
jae
adc
inc
push
xchg
jecxz
jg
cmpsl
xor
jge
repnz
xor
add
ficompl
sub
cmpsl
ds
sahf
push
xor
mov
or
mov
out
es
sbb
cltd
test
hlt
push
in
loopne
outsb
rcll
push
test
adc
clc
cmp
insb
push
push
push
sbb
fsubl
push
adc
xor
ret
pop
mov
jb
jbe
jmp
fisttps
cmp
push
push
lods
loopne
push
jg
mov
mov
xor
and
add
add
imul
cmc
call
inc
push
popa
sbb
int
add
pop
jge
pop
pop
add
dec
ror
jae
test
jmp
sarb
das
cmp
out
test
xor
das
cmp
enter
xchg
pushf
jmp
and
test
ljmp
repnz
fadd
mov
mov
inc
adc
mov
dec
pop
stc
or
mov
pop
call
cmp
lahf
push
sbb
adc
insb
out
aad
lret
sub
rcrl
xor
xchg
gs
outsb
stos
mov
loopne
cmp
or
sub
lcall
jno
pop
nop
cmp
in
cmp
xchg
mov
xchg
lods
dec
jae
stos
fildl
gs
mov
mov
lcall
lods
mov
pushf
jl
cmpsb
adc
movsl
popf
dec
xchg
popf
loop
rcrl
lea
add
sub
fmul
sbb
jae
xor
dec
jg
sbb
add
add
ja
iret
sub
mov
add
add
or
pop
push
das
jbe
lods
iret
je
loop
lock
pop
mov
mov
fdivrs
adc
mov
ds
leave
and
inc
inc
push
pop
insl
movsl
xlat
dec
inc
mov
inc
add
imul
inc
mov
inc
ss
lret
imul
push
ret
inc
ficompl
icebp
inc
sub
pop
adc
sub
xchg
pop
not
out
dec
xchg
add
in
rclb
mov
push
push
arpl
daa
popa
or
daa
mov
psadbw
xor
sahf
jl
roll
or
orl
adc
sbb
int
cmc
push
pop
jg
cmpsb
mov
bound
gs
ds
js
mov
mov
sbb
ss
and
sbbl
mov
imul
xorb
pusha
mov
sbb
loop
add
mov
out
out
out
into
gs
cld
test
outsb
mov
mov
add
add
xor
xchg
and
sbb
jno
sbb
jns
lcall
inc
jg
push
imul
repz
insb
jb
jno
ret
mov
xchg
scas
xor
jo
jns
adc
xor
pop
cwtl
or
fisubrl
mov
les
push
dec
dec
push
inc
out
sub
adc
addl
aam
das
adc
inc
jp
repnz
cmp
xchg
adc
cmp
jns
cwtl
scas
dec
roll
sbb
inc
inc
or
sub
add
rclb
aaa
fs
ret
psubb
fwait
mov
cld
adc
and
xorb
sub
pushf
push
dec
popa
lods
xor
adc
mov
jmp
dec
lds
add
xor
xorb
ret
add
cmpsb
dec
shl
xor
fisttpl
push
sbb
stc
inc
mov
aaa
mov
xchg
popf
inc
and
imull
add
movsl
push
or
add
loopne
and
je
out
mov
sub
add
add
pop
mov
jns
sti
sub
jl
push
mov
stc
pop
ljmp
lock
subb
and
mov
mov
js
adc
sbb
ss
lret
test
insl
mov
xchg
pop
loop
sbbb
aas
addr16
addr16
cmp
xchg
and
dec
int3
jecxz
mov
cmp
inc
sub
push
cmpsb
jnp
test
nop
scas
inc
pusha
call
int3
dec
arpl
jmp
pop
xchg
insl
push
cmp
inc
insb
cwtl
dec
lds
pop
xchg
push
push
scas
jmp
mov
je
out
aad
sbb
rclb
test
pushf
mov
jp
inc
push
cwtl
arpl
ror
xchg
lods
in
cmp
cmp
lock
or
push
mov
inc
push
popf
std
adc
sub
hlt
test
xchg
mov
add
out
cmpsl
xor
push
jns
adc
mov
jne
lods
aam
sahf
lret
push
add
add
dec
daa
dec
das
outsb
imul
push
xchg
andb
ret
roll
add
push
xor
aas
mov
or
add
add
leave
cmpl
and
aaa
sbb
aad
dec
fbld
in
lock
push
in
clc
xor
aas
cmpsl
jnp
cmpsl
push
aam
jle
movsb
dec
pop
dec
jno
cmp
mov
fsubrl
cmp
pop
add
jae
imul
or
popl
add
aam
pusha
xor
cmp
xor
stos
inc
xlat
stc
sub
dec
inc
pop
sarb
and
imul
ds
icebp
loopne
rcr
ficoms
jae
sbbb
test
ss
jmp
inc
aad
fdivrl
outsl
mov
and
fadds
pop
pop
movsb
mov
std
sub
inc
int3
and
dec
xchg
mov
call
repnz
jb
adc
pop
jp
imul
arpl
hlt
lahf
es
adc
lods
sub
aas
in
icebp
mov
fwait
shlb
add
add
popf
mov
lahf
ret
or
rolb
add
cmpsb
push
es
mov
add
cs
fwait
pop
xor
int3
mov
cmp
imul
or
xchg
mov
jbe
inc
sub
divb
push
push
push
or
or
dec
in
enter
or
imul
jmp
or
xchg
mov
and
test
movsl
and
dec
pop
es
pop
inc
pushf
cmp
pop
fildll
imul
test
and
ret
jb
out
out
sub
mov
cmc
pop
orl
adc
andl
dec
rcll
mov
out
push
sbb
bswap
mov
fidivl
faddl
push
or
pop
clc
roll
cmc
iret
lret
lods
mov
loop
add
push
adc
flds
stos
push
aas
push
lods
push
inc
rcrb
inc
cmp
bound
cmp
aad
insl
add
add
neg
outsl
push
xchg
or
fsubrs
add
imul
adc
aam
in
mov
pusha
sbb
sar
cmp
mov
mov
mov
xchg
mov
adc
ret
and
jecxz,pn
movsb
jnp
sbb
arpl
mov
lock
outsb
rcll
fdivrs
sub
dec
mov
insl
out
or
lahf
fwait
nop
sbb
pop
test
jae
cltd
das
imul
xor
mov
imul
outsb
add
dec
popf
inc
jp
rclb
ret
dec
pop
sub
bound
call
insl
cmc
daa
push
sbb
inc
mov
aas
call
cmc
imul
repz
pushf
xor
js
fidivs
not
inc
mov
out
sbb
mov
lds
enter
cmpsl
outsl
les
std
dec
lahf
push
mov
aas
cmc
xchg
dec
dec
loope
mov
jge
and
push
push
pop
adc
cs
xchg
addb
add
add
sbb
sub
dec
inc
imul
rcl
add
add
pop
aad
sbbl
test
push
mov
ret
test
jecxz
test
sbb
inc
test
inc
jg
repz
xchg
xchg
inc
in
xchg
fcompl
std
leave
xchg
sub
into
ds
lds
repnz
or
xchg
or
pop
adc
lea
mov
outsb
xor
xor
test
sahf
xor
addr16
repnz
mov
cmpsl
push
loope
rsqrtps
sub
mov
call
sub
sub
mov
pop
popf
out
jnp
mov
pop
push
jb
addb
inc
mov
and
mov
pop
hlt
fwait
insl
pop
or
add
inc
cmp
sub
es
pop
popa
mov
loop
rcl
subb
lret
jecxz
pop
inc
sbb
stos
add
popf
into
or
xlat
mov
xor
daa
and
fbstp
mov
cmpl
add
ds
jae
rorl
xlat
aad
add
fwait
sbb
and
fildl
loope
push
fnstsw
sbb
pop
add
aaa
pusha
cli
sbb
adc
icebp
xor
movsl
incb
ss
inc
ljmp
cmp
lret
testl
jns
lock
mov
std
pop
scas
call
push
icebp
mull
jb
stc
mov
xchg
std
lret
ds
pop
xor
push
pop
sub
sub
rclb
and
stc
fcmovb
jnp
cmpsb
call
loope
int
out
push
nop
pop
jg
sbb
cltd
imul
lods
arpl
xchg
mov
insb
mov
inc
mov
jge
mov
xor
enter
pop
inc
int3
adc
mov
push
sub
mov
or
lds
scas
push
ret
std
xor
inc
and
stos
adc
loopne
mov
pop
daa
out
push
fwait
andb
add
lcall
jnp
pushw
xchg
add
add
mov
enter
das
mov
pop
pop
add
and
push
adc
orl
mov
mov
imul
cmc
mov
test
lods
cld
push
andb
sbb
sub
xchg
xchg
push
push
dec
divl
dec
sahf
mov
or
xchg
js
push
xchg
sbb
cmpl
mov
xor
test
stos
int3
nop
mov
pop
dec
push
cs
call
lds
push
ret
xchg
jb
mov
neg
rorb
jo
cs
outsb
out
rcll
xor
mov
fisubs
mov
movsl
popa
aad
aas
pop
sub
scas
call
mov
cmp
inc
lods
cmp
push
outsb
pusha
daa
test
pop
push
mov
push
inc
sub
mov
pop
push
scas
mov
bswap
leave
cltd
cld
mov
notb
cmp
jg
leave
or
lods
pop
add
add
or
or
aaa
loope
xchg
imul
add
out
mov
outsb
jbe
shl
ss
rcrb
pushf
jae
loope
or
outsl
leave
test
adc
leave
fstpl
shll
mov
jle
sub
lock
push
cs
sub
in
sbb
mov
push
inc
repz
inc
or
incl
js
in
ret
nop
jo
iret
xorl
ror
mov
push
es
ficompl
push
jnp
lcall
insl
xchg
xchg
test
cmp
push
fwait
je
loopne
and
pop
cmpsb
je
mov
mov
shl
pop
pop
add
aam
test
sbb
sbb
loope
jg
pop
negb
add
and
test
iret
cmp
leave
xor
jp
add
faddp
sub
aas
lods
ljmp
sbb
aaa
push
xchg
cmp
mov
dec
dec
adc
lret
aas
insb
pop
pop
or
add
imul
xchg
movsb
rclb
mov
add
bound
jo
and
jle
mov
mov
or
jbe
cmp
lods
jmp
inc
xchg
rcrl
add
or
in
fs
sbb
pop
cmp
mov
sbb
jae
mov
roll
mov
out
cli
inc
std
jae
add
ja
loop
adc
jl
adc
call
dec
pop
and
jno
pop
jg
mov
xchg
or
mov
dec
adc
mov
push
in
adc
outsl
push
sub
mov
push
mov
and
mov
dec
or
jmp
adcb
std
cli
leave
adc
rcl
rcll
loope
cmc
loope
mov
sti
jno
lods
fsubrs
or
push
dec
xchg
insb
sbb
xchg
and
subb
scas
jno
pop
mov
xchg
sub
ret
lahf
mov
add
add
psubusw
push
in
sub
cmp
flds
add
sbb
ror
xchg
mov
cli
mov
imul
dec
xor
cli
loope
jle
pop
andl
out
push
sbbl
test
mov
push
inc
negl
jno
mov
repnz
or
dec
mov
mov
cmp
scas
mov
out
inc
repz
in
loope
or
jae
push
jns
mov
add
nopl
push
cwtl
and
xchg
xchg
pop
lea
sarb
jl
movsb
dec
push
scas
out
shll
push
adc
int
out
scas
push
stos
das
inc
leave
add
repnz
ljmpw
push
and
jb
inc
jno
or
pop
adc
mov
xor
enter
into
int
jmp
movsb
add
out
mov
dec
mov
adc
jno
out
ss
xchg
push
ds
pop
lahf
cs
xchg
stc
jl
xlat
ftst
sbb
adc
push
mov
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
mov
lock
add
sbb
adc
data16
pop
mov
neg
and
ja
sub
jno
out
in
imul
ss
shll
push
xchg
stc
imull
rcll
mov
cli
sbb
gs
xor
jnp
repnz
sub
push
sub
mov
jns
mov
xchg
sub
in
cmp
pop
mov
lahf
inc
mov
xchg
scas
or
mov
sub
adc
sub
pop
ret
pop
sti
push
popf
in
sbb
and
je
int3
movsb
lret
or
js
ret
jb
xor
and
pop
mov
out
shl
outsb
dec
loop
loop
xor
daa
xchg
insl
dec
add
and
loop
fcmovnu
mov
shr
sti
frstor
subl
jmp
iret
or
pop
jle
or
xor
xchg
jmp
mov
jne
mov
lods
ss
pop
add
add
jle
jg
std
fstpt
mov
cmc
fildl
add
add
fwait
jp
pushf
mov
sbb
fnstenv
jbe
fdivrs
cwtl
adc
lcall
cmp
mov
cmp
insb
out
fisubrs
rolb
imul
insb
orl
std
les
mov
in
dec
mov
xor
or
add
pop
cld
jns,pn
cmp
data16
push
mov
add
lds
pop
dec
and
xor
mov
and
jge
testb
fidivrl
mov
sahf
sbb
hlt
mov
stos
mov
test
or
je
pop
hlt
imul
mov
aam
dec
adc
xchg
push
int3
leave
jle
out
in
test
sbb
jbe
add
jae
clc
jg
dec
push
jns
lret
lret
lods
in
ret
dec
lcall
outsb
mov
add
cmp
ljmp
cld
inc
out
sub
faddl
add
movsl
xor
inc
inc
rcll
sub
dec
aaa
icebp
xchg
mov
cmpsl
mov
lret
mov
mov
xchg
mov
pop
xchg
push
aam
lods
sbb
scas
jg
les
mov
arpl
cmp
mov
rorb
inc
push
pop
sbb
ss
das
cld
call
xor
xchg
in
cmc
xchg
mov
leave
les
inc
jns
inc
pop
jb
mov
jle
es
mov
insl
icebp
mov
call
jbe
lods
leave
mov
fsubrp
jmp
sbb
dec
nop
sti
pop
add
retw
and
mov
mov
mov
push
loopne
cwtl
scas
call
mov
fcomps
xor
pop
leave
flds
and
icebp
jge
in
lahf
scas
sti
push
dec
cmp
cli
dec
mov
fcomps
adc
or
sbb
mov
xchg
xor
push
add
add
sbb
jmp
scas
inc
call
fldl
add
out
js
add
mov
lods
xor
sbb
push
mov
jge
or
xchg
xor
add
jg
stc
outsb
inc
or
inc
scas
cltd
test
adc
sbb
xor
mov
rorl
pop
inc
add
push
jl
sub
inc
mov
jmp
cs
jg
aas
dec
loop
fcmovnb
stc
mov
mov
in
shll
dec
mov
adc
in
lret
push
jmp
test
rorb
cmp
inc
or
lds
loopne
dec
xchg
dec
pcmpeqd
add
mov
mov
cmp
cmp
fs
mov
stc
cwtl
cmp
inc
das
jnp
fld
cs
jl
pop
adc
shl
mov
and
enter
ljmp
push
dec
aas
push
int3
add
mov
ss
scas
movsl
pop
scas
fisttpl
cmc
cld
repnz
in
fs
add
cmpsl
fimull
faddl
ficompl
filds
add
pop
mov
dec
or
outsb
test
push
std
aad
daa
sbb
sarl
mov
shl
mov
jecxz
sahf
movsb
dec
mov
imul
mov
fcompl
push
inc
loopne
stos
or
jo
nop
fldcw
pop
mov
das
jae
lret
xor
gs
std
daa
outsb
cwtl
nop
cmp
jmp
adc
xor
daa
lcall
jmp
inc
adc
cmp
jb
movsl
and
jae
xlat
lock
movsb
sbb
xor
clc
mov
mov
cld
dec
add
ss
jecxz
shlb
xchg
adcl
fwait
xor
insl
adc
cmpsl
pop
ss
add
sbb
pop
outsl
xchg
in
popf
pop
sti
pop
test
lcall
in
cmp
popl
and
arpl
outsl
int3
shl
mov
cmpsb
fmuls
sub
add
add
mov
lcall
fisttps
or
or
add
add
pop
cmp
mov
xor
aaa
out
outsl
jecxz
fs
rcrb
mov
or
fadd
stos
or
out
or
xchg
stc
mov
add
add
repnz
data16
jae
outsl
ficoml
stos
popa
in
pop
in
push
cmp
push
mov
mov
ficoms
das
aas
das
push
jge
jnp
xlat
stc
test
pushf
std
mov
dec
stos
push
sub
js
mov
mov
mov
stc
jmp
xchg
test
mov
mov
out
push
push
pushf
or
mov
sub
jp
es
xchg
orb
mov
or
and
in
iret
call
adc
bnd
cs
addr16
push
dec
jns
popl
pop
cwtl
es
stc
insb
xchg
cld
push
testb
inc
and
add
mov
jns
xchg
xchg
mov
mov
add
add
cmp
ljmp
int
pop
gs
popf
push
stc
xorl
dec
loop
out
add
inc
adc
stos
cld
out
jp
inc
in
iret
ljmp
push
or
fistpl
fwait
inc
sbb
rclb
pop
in
mov
rorl
lock
in
mov
rclb
insb
mov
adc
push
xchg
mov
fsub
lcall
mov
std
es
inc
out
or
pop
mov
xor
jbe
repnz
cmpsl
xor
jmp
gs
inc
lahf
jnp
mov
push
movsl
mov
lea
and
das
push
sub
sub
adc
test
pop
sub
push
mov
push
add
dec
shlb
pop
mov
inc
xor
rclb
jno
aam
ret
mov
add
es
test
dec
jns
and
sbb
xchg
push
dec
test
xor
add
add
fadd
fsubp
jnp
or
cld
clc
pop
mov
loop
add
push
adc
add
pop
fwait
enter
mov
add
mov
and
outsl
aam
add
xlat
std
jno
mov
lds
rorb
mov
jecxz
roll
insl
repnz
cltd
jmp
out
mov
and
cmp
adc
nop
jbe
aam
mov
loope
fxch
es
mov
mov
test
jo
aad
out
jne
jb
lock
popa
pop
insb
les
xor
subb
movsb
mov
and
jmp
push
ss
icebp
add
lahf
inc
jo
cmp
in
lea
ljmp
jae
clc
dec
mov
mov
pop
rorb
sub
push
xchg
xor
in
mov
sarb
fldcw
dec
das
mov
cmp
cmpsl
cmp
loop
mov
lret
push
dec
loopne
repnz
add
push
cmp
sub
cld
cli
jle
dec
nop
xor
jecxz
add
cmp
ja
aad
dec
mov
loope
push
sub
xor
stos
jg
sbb
jg
push
pushl
sbb
jbe
mov
pusha
jp
jge
adc
mov
insl
scas
imul
daa
pop
sub
add
int
incl
incl
hlt
sbbl
sbb
sub
adc
test
fst
stos
mov
jle
sub
sub
cmpsb
and
ret
adc
fstps
loopne
xlat
push
mov
arpl
ret
adcl
sbb
mov
xchg
pushf
xchg
sub
inc
cld
xor
pop
mov
je
movsl
pop
xchg
es
push
jo
push
shl
mov
out
xchg
mov
lcall
in
sbbb
xor
cli
mov
cmp
xchg
pop
sub
addb
add
lea
pop
jbe
ja
sti
aaa
out
ja
dec
jo
sbb
add
add
cmp
pop
jns
push
and
cmp
ret
sti
inc
fwait
dec
mov
or
stos
xchg
pop
rorb
cld
or
fistps
or
inc
in
fsubp
imul
loope
push
mov
cmovo
sbb
or
in
adc
lock
fistpll
fnstsw
enter
hlt
and
jecxz
cltd
and
cmp
xchg
dec
incb
fldcw
xchg
int3
sbb
xor
or
cmpsl
mov
push
cs
sbb
fbld
adc
mov
adc
shlb
mov
addr16
popf
xlat
faddl
mov
add
loop
jo
loopne
icebp
stos
jb
jne
push
rcr
xchg
push
xchg
pop
push
mov
addl
mov
sub
add
add
into
arpl
pop
xchg
aaa
pushf
and
add
add
orl
lods
mov
xlat
test
fnstcw
mov
adc
loope
mov
lods
sbb
jb
xchg
add
cmpsl
test
js
sbb
mov
subl
lret
popa
add
out
add
cld
and
cs
inc
fs
jo
pushf
loop
dec
cmpsl
pop
push
jb
lods
inc
cmp
loopnew
push
push
sbbb
test
sbb
mov
dec
fidivrs
mov
fistps
imul
add
adc
cmp
and
in
sti
sbb
inc
mov
push
popf
or
add
lods
aas
sbb
and
mov
dec
mov
gs
fld
add
mov
mov
fisttps
pop
pop
scas
xor
nop
cmp
sar
shlb
sbb
cmpsb
cld
push
rclb
cltd
cmc
adcb
fcos
pop
mov
add
out
add
cli
loope
mov
xor
in
push
sbbb
add
scas
fsubrs
mov
push
jl
xchg
mov
pop
jle
fcomps
ss
adc
leave
sbb
sbb
jmp
shll
out
int3
xchg
pusha
mov
outsl
les
xlat
or
mov
daa
mov
gs
iret
mov
add
xchg
jb
ja
push
or
xlat
fnsave
dec
push
sub
jge
jg
or
mov
cmp
jecxz
push
push
jns
inc
xchg
clc
add
popa
push
push
xchg
ds
mov
fs
orl
insb
or
sar
outsl
mov
inc
fwait
jge
cmp
ror
jns
std
mov
jne
ffree
out
xchg
fiadds
jae
ss
pop
inc
adc
clc
popa
pop
fiadds
test
mov
lock
test
cwtl
add
xor
jno
aas
lahf
mov
shrl
and
dec
add
add
add
lock
jg
in
and
int
sti
sub
add
add
out
mov
jg
popf
push
mov
mov
push
dec
lret
mov
lahf
dec
pop
ss
sbb
lds
cmpsl
mov
scas
mov
cmp
and
aaa
jnp
into
cmp
jge
fmull
scas
decl
push
jp
push
fs
push
or
das
sub
or
or
imul
inc
dec
add
mov
inc
lea
arpl
dec
mov
dec
ficompl
ret
cmp
pop
inc
adc
mov
rcrl
lret
call
cmc
jnp
sbb
adc
rcrb
sub
sub
bound
data16
stc
popa
jg
rcrl
adc
push
inc
mov
pop
cltd
std
stos
lret
sub
mov
sub
aaa
icebp
mov
cmp
aad
push
cmp
daa
mov
aaa
lret
mov
lahf
ficompl
jnp
add
add
pop
xlat
fistpl
add
loop
call
add
mov
push
xor
and
xor
jo
xchg
fsubrp
pop
arpl
xchg
int
push
leave
mov
add
movsl
mov
xchg
mov
out
leave
push
imul
jns
pop
mov
lahf
iret
cmp
jbe
scas
test
dec
xchg
push
test
cmp
mov
mov
add
mov
mov
leave
sub
rcr
sub
mov
and
jmp
into
or
orb
add
lods
fcompl
xlat
daa
jl
xchg
mov
push
mov
repnz
loope
in
loop
mov
xchg
aas
fdivrl
and
cli
xor
in
inc
aam
out
xchg
jp
lret
adc
mov
popa
pushf
push
push
in
cmp
push
int
les
hlt
aam
in
mov
jp
scas
push
imul
pushf
push
and
push
scas
ljmp
jecxz
jno
jae
call
xor
add
add
mov
dec
js
stc
mov
dec
int
pop
data16
ss
add
xchg
cmpsb
cmpsl
add
push
xchg
add
sbb
mov
dec
mov
jns
lahf
dec
shrl
or
iret
outsl
mov
jnp
xor
in
xlat
nop
roll
pop
pop
repz
in
movsl
inc
cmp
add
daa
cmpsl
ucomiss
lret
sub
ret
int3
loop
xchg
fstpl
dec
rcrl
mov
xchg
movsl
mov
pop
push
push
cli
pop
rcll
jp
arpl
adc
cs
divl
inc
mov
adc
sbb
flds
pop
mov
lods
in
push
sti
adc
mov
mov
pop
repnz
mov
sub
inc
cmp
cmp
jmp
hlt
xor
dec
repnz
aad
jg
mov
data16
popa
js
sbb
xchg
inc
aam
and
loop
push
shrl
iret
mov
jne
ficoml
pop
les
or
in
pop
add
add
insl
repz
fwait
jns
jns
adc
cmp
add
add
fs
inc
sub
sub
jmp
popf
pop
mov
out
mov
dec
mov
psubq
lods
clc
gs
xor
mov
sub
cmp
lods
add
mov
aad
movsl
stos
pop
int3
outsl
testl
adc
aaa
stos
fistl
fwait
in
movsb
and
jae
fnstsw
stc
cmc
xchg
and
xchg
test
inc
movsb
cltd
cmp
clc
stos
fidivl
jo
mov
sbb
or
add
shrl
dec
les
sub
mov
jle
mov
pushf
es
sbb
mov
ss
pop
loop
mov
test
and
clc
sbb
outsb
jmp
pop
aas
and
mov
pop
in
xor
or
shrl
pop
pop
push
add
cmp
lea
pop
addl
in
add
add
mov
pxor
jnp
adc
jne
and
or
add
push
cmpsl
popf
insl
in
rcll
loop
adc
pusha
ljmp
cs
jg
jbe
pop
push
sbb
notb
lret
xchg
mov
rcll
pop
jo
xor
or
adc
outsl
repz
xlat
mov
movsb
mov
or
sub
stc
fisttps
leave
and
aam
xchg
add
cli
in
es
cmpb
mov
ror
bound
pop
adc
scas
in
jo
push
jno
jg
sub
sbb
aas
lahf
idivl
adc
imul
push
sub
clc
adc
gs
fisttpl
inc
and
or
dec
loope
mov
rol
cltd
ret
in
xchg
je
pop
int
pop
sahf
sub
in
cmpsl
add
icebp
pop
cmp
cmp
dec
int3
push
enter
mov
fwait
je
jae
jle
cmpsb
and
out
lods
xor
aas
xlat
fistl
das
popl
outsl
movb
add
sub
jo
sbb
test
dec
push
jecxz
xchg
loop
add
aaa
mov
inc
or
clc
ljmp
call
lods
aad
popf
inc
mov
outsl
bnd
pop
cmp
icebp
adc
push
sarb
in
fimull
cmp
or
daa
lods
daa
mov
daa
mov
jno
push
in
pop
scas
jns
in
pop
fwait
or
icebp
inc
jl
int
jne
addr16
and
jge
out
pop
jne
and
xor
cmp
pop
add
inc
clc
test
hlt
bound
dec
mov
or
inc
push
scas
pusha
mov
jbe
jns
outsl
lahf
pop
sarb
paddw
rcl
js
dec
push
xchg
adc
insb
insl
jge
icebp
pop
inc
sbb
mov
sub
pop
mov
xchg
imul
mov
test
add
add
jb
scas
decb
fisttps
push
scas
jb
in
add
add
les
jo
or
cmp
and
out
std
or
cltd
mov
pushl
iret
test
pop
xchg
lds
sub
jnp
jp
pop
and
xchg
out
insl
mov
ds
mov
sahf
pop
and
push
push
enter
fldcw
rolb
jmp
insl
mov
or
jnp
jecxz
mov
sbbb
enter
or
adc
xor
movsl
inc
lret
test
adc
imul
inc
jne
xor
aas
cltd
and
lcall
std
push
in
jnp
push
insb
imulb
push
lret
inc
jge
jge
mov
sbb
jecxz
bnd
lret
test
xor
push
cltd
sub
fsubr
sbb
cmp
pop
pushf
loope
xor
sub
add
sarb
bound
adc
add
rcll
bound
or
lcall
icebp
mov
mov
imul
add
xlat
mov
xchg
mov
add
add
pop
sub
sarl
mov
push
into
or
add
xchg
scas
insl
dec
leave
cli
jbe
fcompl
jg
cmpsl
push
stos
or
fistl
sbb
outsl
in
scas
test
jle
xchg
cli
mov
out
icebp
ret
cmpsb
pop
xor
lret
out
push
xrelease
cmc
mov
xchg
rcrb
cli
cmp
mov
or
sbb
hlt
jnp
lds
add
sbb
mov
and
jbe
fcmovnbe
sub
popa
filds
insl
cltd
shl
mov
insb
rcrb
push
aas
mov
pop
dec
and
jp
cmp
test
cmc
xchg
loopne
mov
sbb
lret
out
js
push
mov
scas
jae
scas
mov
mov
jge
nop
mov
jno
lret
mov
rclb
sub
jae
add
or
jo
xchg
xchg
fcoms
fadds
add
lods
cmp
lods
aas
mov
or
lcall
add
stos
aad
adc
adc
aam
iret
lret
loop
push
mov
mov
jle
mov
int3
popa
xor
mov
addr16
pop
dec
jns
dec
sub
and
adc
and
jnp
and
pop
pop
lcall
int3
jp
push
imull
std
jne
in
mov
xor
sbb
add
jns
es
in
filds
push
mov
cmp
sbb
repz
and
cmpsb
mov
out
mov
movsb
int3
fisttpl
inc
loope
jle
dec
lea
and
mov
gs
hlt
ret
dec
shrb
push
test
test
sub
imul
mov
inc
loope
jno
int
mov
mov
mov
test
int3
add
sbb
mov
dec
and
gs
cmp
push
add
lds
mov
add
loop
fadd
sti
mov
push
xchg
pop
lock
add
pop
das
lret
aam
outsb
sti
mov
stos
add
test
cld
jle
bound
fldt
daa
xchg
mov
nop
xor
data16
mov
sti
test
sbb
pop
stc
mov
jmp
sub
mov
std
dec
shlb
mov
outsb
pop
fisttpl
jge
clc
cltd
xchg
xor
dec
int3
loope
out
sbb
std
jl
jae
add
ja
xchg
mov
js
mov
mov
popf
jge
imul
adc
test
and
sub
testl
into
cmpsb
jno
js
jno
inc
fcomps
cmp
ss
sub
fnstsw
mov
fdivr
add
mov
dec
in
cmp
shrb
movsb
negl
mov
gs
jp
xchg
jg
mov
dec
jns
jmp
xchg
mov
cli
sarl
or
leave
mov
lret
mov
add
add
into
adc
neg
jge
xchg
jns
lret
das
pop
icebp
add
add
push
lret
hlt
jno
cld
mov
or
mov
scas
xor
push
lahf
enter
adc
out
hlt
cmp
or
pop
lahf
jno
gs
pop
mov
pushf
push
jne
xor
dec
into
and
loope
nop
stc
fildl
popa
cmp
or
xor
loop
mov
clc
or
sub
sub
fisubs
sub
aam
fnstsw
cltd
xor
enter
sbb
aam
push
jge
lods
xchg
fidivs
insb
sub
repz
movsl
xchg
add
jmp
inc
in
mov
and
je
sarb
cld
std
jg
pusha
js
sbb
add
jb
addr16
mov
filds
fbld
cmp
xlat
mov
lea
add
hlt
icebp
xchg
rcr
clc
mov
test
repz
pop
mov
dec
out
test
scas
inc
adc
mov
in
cmp
pop
cmp
outsl
jg
jg
sub
fidivrl
sub
add
add
inc
dec
and
pop
sub
iret
cmp
xchg
fcompl
pop
xchg
lahf
cmp
add
inc
mov
aaa
fnstcw
mov
or
push
int
sub
cmp
sub
je
and
mov
mov
shll
loope
cmp
dec
mov
scas
jge
or
dec
pop
add
movsl
add
xchg
inc
clc
jns
pop
cld
jmp
jle
mov
iret
mov
pop
mov
mov
push
sti
test
loop
xchg
cmp
shrl
xchg
cmpsl
cli
push
aas
adc
out
ljmp
pushf
push
mov
lret
xor
jae
xchg
rcrl
jg,pn
xchg
iret
jmp
mov
mov
or
out
cli
ret
cmp
xchg
or
ds
and
fldcw
push
mov
add
mov
dec
popa
lahf
lahf
mov
add
dec
adc
add
add
ja
and
aaa
divl
pop
xchg
mov
add
mov
sbb
sahf
fsubs
mov
mov
jecxz
lret
jnp
sub
test
push
and
xchg
bound
ds
mov
repnz
mov
dec
xchg
pop
stc
pop
fcomps
xchg
pop
dec
push
faddl
movsl
in
xor
cltd
xor
sub
aas
fadd
adc
imul
fucom
leave
imul
jno
sub
pop
and
mov
bound
or
mov
dec
jl
ficoml
idivb
xor
pop
insl
cltd
dec
imul
ja
and
pop
mov
cmc
adc
fs
dec
cltd
faddp
lret
cmp
pop
lock
adc
jg
mov
and
das
daa
std
leave
or
mov
mov
push
mov
shl
cmp
push
push
jge
cmp
xchg
std
movsb
dec
add
add
mov
cmc
mov
ret
or
add
add
dec
fcomps
xchg
lahf
lods
pop
dec
shlb
mov
sub
jge
sub
adc
test
jmp
mov
inc
jg
xor
jmp
hlt
aaa
cs
pushf
or
movl
mov
pusha
popa
sbb
jmp
mov
push
sbb
rcrb
les
adc
and
mov
or
adc
cltd
idivl
out
cmp
out
cmc
out
ret
and
jg
jle
jl
and
stos
jmp
jp
stos
push
call
out
jmp
in
push
aas
push
or
lret
mov
fsubl
lret
xchg
mov
pushf
arpl
bound
subl
loope
sub
out
jo
sti
or
js
add
jb
ljmp
divb
mov
jmp
cmp
mov
std
dec
inc
inc
jmp
add
add
jne
pusha
popf
pop
sub
cmc
add
add
inc
into
adc
cmp
out
dec
in
pusha
rclb
sar
scas
sbb
dec
push
cmp
mov
bound
nop
out
push
cld
int3
mov
sub
ss
ret
bound
sbb
adc
mov
outsb
push
movsb
fcompp
stos
fwait
cmp
mov
in
mov
je
and
inc
push
mov
je
lock
rcl
imul
in
pop
add
pusha
mov
out
fistps
scas
jmp
repnz
mov
call
add
cmp
popa
test
sub
test
dec
sti
into
add
loop
cmp
pushf
mov
pop
jmp
xchg
rorb
sub
mov
and
pop
cmc
sub
sbb
aas
add
repz
fbld
and
dec
outsl
push
add
add
imulb
mul
xor
xor
add
add
movsl
cmpsl
sub
lret
bsr
inc
fmulp
mov
mov
and
and
cmpsb
pop
rorb
mov
ret
iret
loop
int
xchg
out
xor
stos
lock
dec
push
or
adc
ret
test
push
test
sbb
jecxz
and
cmc
jno
add
imul
dec
xchg
lcall
xor
jecxz
sahf
push
inc
mov
or
popfw
test
xchg
xchg
std
fld1
pop
fsubs
mov
popf
sbbl
mov
fwait
iret
push
pop
xor
jbe
lcall
jbe
jo
add
aas
xchg
loop
push
lods
mov
lret
push
mov
mov
popf
sbb
lret
shll
cwtl
dec
dec
cmc
sub
xor
jae
ds
pop
jp
jae
mov
jmp
es
js
es
call
lret
mov
mov
jge
adc
push
mov
add
add
add
xor
jb
jae
inc
cltd
insl
jns
testl
add
daa
xor
mov
add
adc
lea
and
push
xchg
sbb
adc
ja
jge
jmp
pop
cmp
jno
or
in
pop
pop
add
ljmp
dec
repz
add
mul
push
pushf
pop
mov
std
fldl
dec
mov
mov
int3
mov
out
sbb
adc
enter
xchg
sub
cmp
movsb
xchg
xor
mov
add
xor
cwtl
ss
pop
clc
cmp
sub
pushf
jl
xchg
inc
or
mov
sbb
xchg
mov
pushf
into
add
xlat
add
jp
outsb
rcrb
cmpsl
jl
mov
add
inc
jb
sub
or
in
xor
inc
jecxz
xlat
mov
ror
mov
xchg
push
mov
xchg
fwait
jae
enter
and
nop
fs
loope
and
insl
adc
add
adc
int
in
idivl
js
mov
out
sahf
cmpl
add
add
call
dec
es
movsb
jno
push
xor
fwait
inc
loopw
add
mov
xchg
aas
popf
sub
fiadds
shll
xor
push
xchg
or
cs
lahf
xchg
xor
inc
sub
mov
fildll
jle
out
mov
sti
xor
xchg
rorl
es
mov
adc
and
inc
mov
mov
stos
xor
add
sbb
dec
aaa
push
dec
jp
sub
rorb
lcall
inc
dec
cmp
sub
fwait
mov
jnp
cmp
cmp
popf
movsl
shl
jnp
adc
movl
mov
jmp
lahf
movsl
lods
fstpl
lods
movsl
mov
inc
jno
xchg
lret
jge
push
repnz
inc
adc
rol
andb
mov
call
cmp
or
loop
add
add
jecxz
inc
cli
aas
into
lret
pop
ja
xchg
xchg
add
add
adc
dec
push
jge
mov
fsubp
ds
adc
cmp
repz
sbb
adc
ret
or
push
mull
xchg
jmp
out
lock
into
jmp
icebp
clc
enter
fisttpll
mov
mov
sub
and
dec
ficoml
inc
push
sub
dec
dec
jp
mov
insl
sbb
mov
outsl
cmp
or
gs
add
inc
push
adc
or
stos
flds
cmp
sub
push
pop
lahf
les
sub
fistl
gs
push
mov
pop
and
imul
ret
mov
mov
sub
xchg
fildll
cmp
push
or
xchg
cwtl
fmull
jmp
sub
xor
stos
lods
xor
mov
mov
cmp
inc
insb
ret
mov
add
dec
orb
jo
inc
adc
add
lcall
or
mov
add
add
push
pop
inc
xchg
mov
pop
push
adc
jb
cmp
and
daa
sbb
stc
jp
in
std
dec
int3
std
mov
inc
pusha
xchg
ror
pop
lret
int
cmp
xor
mov
repnz
lds
lahf
sbb
dec
loopne
pop
aad
mov
sub
pop
adc
lcall
pop
out
xor
cmp
jl
rorb
push
adc
add
mov
ds
pop
les
inc
mov
outsb
enter
call
insb
or
xchg
xor
scas
icebp
lods
sbb
outsb
sbb
inc
xor
ret
sbb
mov
sbb
lret
push
xor
push
nop
lods
mov
outsb
cli
in
rol
cmp
push
movsl
stos
jmp
xor
cmc
inc
mov
aad
xchg
ret
mov
and
dec
idivl
pop
mov
jmp
pop
mov
dec
push
push
filds
add
aaa
jae
cltd
dec
mov
jno
jnp
stc
nop
sti
add
add
std
outsl
scas
in
mov
mov
shlb
test
out
mov
enter
or
or
mov
jp
sbb
mov
mov
mov
call
ja
xchg
insl
jnp
or
outsl
pop
cs
push
xor
dec
xchg
cld
lock
out
xchg
aas
mov
push
lock
pushf
push
sbbb
xchg
dec
sbb
pop
inc
lcall
xchg
xor
inc
pop
in
mov
je
xchg
addr16
and
xchg
es
les
inc
pop
mov
pop
pushf
pushf
jl
mov
mov
je
mov
xor
rcrb
out
jo
xor
inc
dec
mov
fstpl
push
or
jl
cmp
lock
sbb
js
pusha
negl
orb
je
bound
jb
push
repz
test
xchg
mov
cli
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
mov
cld
add
add
xchg
gs
lds
cmp
in
sbb
test
jbe
xor
sub
mov
or
push
cmp
adc
push
pushf
mov
push
xor
into
cmp
test
lea
shll
jb
pop
lahf
or
jl
jg
cli
pop
dec
xchg
test
xor
adc
adc
xor
mov
and
pop
cmp
dec
decb
sti
jp,pn
int
inc
adc
pop
cmp
and
leave
movsb
mov
adc
cli
imul
xlat
jnp
and
loopne
jmp
test
push
shl
out
subl
xchg
mov
ss
sbb
adc
imul
jo
pop
ret
pop
push
scas
call
or
xchg
dec
inc
call
cmpsb
sti
call
fists
mov
cmp
incb
inc
mov
outsl
jo
dec
popa
fadds
fwait
add
add
test
jg
push
pop
push
mov
lcall
add
add
push
ds
ret
mov
sahf
sti
sub
mov
cmp
jle
add
adc
fidivs
cmp
stc
pushf
jae
jne
mov
push
mov
add
jp
push
leave
icebp
outsb
pop
les
sub
cmp
dec
mov
insl
mov
inc
sti
leave
and
sbb
sbb
fisubrs
movsb
mov
or
pop
xor
dec
pop
fistps
xor
mov
stos
loope
xor
jg
jae
pop
jae
inc
adc
pop
mov
jb
pop
cmpsb
aas
negl
or
sarl
outsl
or
xchg
bound
adc
es
or
aas
add
in
add
jbe
jge,pn
leave
pop
sbb
fs
jbe
sti
out
lcall
inc
cmpb
xor
mov
ds
cmpsb
call
dec
out
xchg
mov
gs
roll
add
movsb
push
in
cmc
jne
sbb
js
repz
arpl
add
add
shll
out
ss
repz
dec
sarb
jnp
jg
inc
hlt
mov
fstl
ret
out
add
push
sub
mov
lret
cld
fwait
ret
jae
in
pop
push
push
inc
xor
lcall
testb
repnz
cmp
stos
dec
enter
adcl
dec
or
idivb
lahf
and
gs
sub
or
fildll
ficompl
xor
pop
pop
xlat
xor
inc
xor
dec
jne
icebp
push
push
push
es
jno
mov
add
jo
les
xchg
insl
cmp
cwtl
mov
inc
push
imul
adc
idivb
jmp
fwait
lds
cmp
dec
sub
inc
dec
xor
push
daa
insl
adc
xchg
sti
shll
mov
outsb
outsb
lock
jnp
add
cld
clc
jnp
in
push
into
mov
push
shll
add
add
out
shlb
aas
out
int3
mov
lds
mov
incl
add
mov
out
sub
adc
shll
pushf
scas
sub
gs
adc
xor
ret
loopne
adc
jmp
mov
or
sub
fwait
xchg
jnp
adc
dec
add
push
mov
in
lret
imul
xor
fisttps
add
scas
inc
xchg
rorb
xlat
cmc
iret
int3
or
mov
lea
pop
shll
jle
lods
sub
lods
cmp
outsb
mov
leave
movsl
jmp
lea
sub
xor
cmp
movsl
sub
loope
rcl
in
adc
pop
add
das
and
adc
ljmp
add
mov
pop
mov
in
xor
sbb
sbb
jno
sub
push
scas
mov
jo
aam
mov
out
cld
pop
inc
jmp
pop
arpl
add
fidivs
ss
imul
adc
imul
imul
push
jl
fstpl
add
add
mov
lcall
xchg
test
add
add
adc
js
and
daa
lret
pushf
or
dec
daa
jle
cmpb
aad
ja
pusha
addr16
cltd
xor
push
movntps
fadds
jge
xor
mov
dec
adcb
or
jnp
ja
push
sub
xchg
jp
in
cmp
int
fdivrp
fwait
subb
loop
mov
pusha
fstpt
pop
inc
stos
dec
xchg
rolb
cmpsb
xor
mov
ficompl
ja
fwait
push
push
pop
cvtpi2ps
fldt
mov
or
decb
xchg
cmpsb
lods
jg
outsb
data16
hlt
popa
sbb
xor
jg
jnp
push
fs
leave
neg
mov
xchg
sub
repz
stos
push
add
add
xor
test
dec
test
cld
push
loop
mov
inc
mov
pop
cld
cli
in
sub
lret
cmp
add
dec
rol
lret
clc
cmc
inc
stos
repz
lds
add
xor
add
lret
mov
mov
ja
mov
cmp
lahf
add
orb
clc
das
scas
push
inc
sbb
inc
jle
addb
push
jo
inc
jecxz
inc
sub
hlt
jne
int
sub
xchg
addr16
or
rcrb
neg
out
xchg
xor
ret
xor
rcl
lcall
or
pop
movsb
cmp
dec
scas
pop
pop
dec
mov
cli
adc
push
push
sub
bnd
iret
xchg
jle
add
das
sahf
mov
mov
or
push
loope
in
inc
out
ds
ja
gs
dec
cmp
call
mov
outsb
mov
divb
int
xchg
adc
lods
rcrl
bound
sub
sub
hlt
pusha
scas
ja
jl
cmp
xlat
xor
outsl
pop
jcxz
test
test
vorps
xchg
add
add
std
aaa
mov
shll
shll
add
xor
mov
dec
sub
inc
pop
stos
nop
call
clc
push
jns
jecxz
or
subl
es
inc
xchg
insb
mov
pop
cmp
cmp
jle
push
lret
or
inc
faddl
loopne
loopne
repz
add
mov
aam
cmp
lcall
push
jo
ds
xchg
add
push
add
test
push
lcall
dec
xchg
pop
sub
scas
lods
or
lea
addr16
scas
sahf
orb
pop
lods
les
pop
pop
imul
adcl
movsb
scas
or
loope
nop
cwtl
jge
inc
leave
rorl
adc
addl
sub
and
icebp
sub
jecxz
pop
push
dec
push
jae
lods
jns
test
mov
ds
dec
imul
mov
loopne
sbb
add
insl
aam
mov
scas
add
and
ljmp
add
cmp
gs
pop
lds
dec
lcall
cmp
fnsave
add
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
mov
pop
mov
orb
xchg
stos
and
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
