push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
adc
fidivrl
add
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
stc
sar
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
jmp
into
in
out
aad
repz
cli
xlat
hlt
loope
test
clc
test
iret
int3
xor
xlat
hlt
fxch
cld
xlat
fsubr
ss
int3
clc
in
in
aad
mov
into
adcl
les
into
repz
aam
cmp
repz
mov
dec
faddl
loopne
rcr
fxch
jmp
lock
loopne
out
in
into
hlt
clc
fstp
in
flds
cmc
xchg
fxch
jmp
fmul
lret
fdivrp
ljmp
xlat
in
ret
mov
out
sti
lret
lock
lock
fnstcw
neg
cmp
xlat
aad
std
sti
sbb
lock
loop
out
rcr
jecxz
std
in
fmul
rcl
into
fdecstp
repz
leave
in
loope
call
xor
xor
out
out
cmc
aaa
fmul
rcl
rcr
cld
clc
ret
in
stc
jecxz
xchg
addb
cmp
shl
xor
fcmovnb
cmc
filds
ljmp
cmp
hlt
enter
aad
std
std
fcmove
int
fidivrl
sti
test
fmull
loopne
stc
into
jmp
cmp
in
enter
ds
xlat
call
icebp
mov
mov
xlat
cmc
xor
ret
into
clc
fucomi
fscale
shl
xor
xor
hlt
in
jecxz
xchg
int3
int3
jmp
loopne
rcl
ret
fsub
mov
in
fcoml
sti
icebp
clc
fdivr
fcompp
in
cmc
fdivrp
loop
loope
cld
cld
rcr
loop
fmull
int3
jecxz
in
xor
enter
ss
hlt
sti
ds
call
loop
out
fdiv
out
into
icebp
lock
jecxz
aad
das
cmp
clc
ror
out
cld
cmp
push
faddl
clc
fdiv
out
lret
mul
enter
aam
int
loope
aad
cmc
loope
xchg
test
jmp
mov
xlat
xor
cmp
xor
repz
in
std
xchg
lock
test
hlt
out
les
xorl
sti
rcl
out
addb
ds
loop
addb
mov
out
cmc
ss
cmp
in
xlat
loope
out
sar
test
mov
fcmovne
fmulp
test
xchg
aad
in
into
in
in
call
cld
cli
les
stc
loopne
stc
xchg
out
decl
div
std
cmc
not
ds
cli
jecxz
loopne
mov
lds
adcb
repnz
aad
int3
jmp
int3
aas
in
rcl
aad
repnz
addb
repnz
in
in
iret
cmp
out
cli
rolb
call
int
fmulp
loope,pn
idiv
xor
cmp
int3
out
out
lock
repz
fmulp
xchg
call
sub
leave
ror
int3
aaa
enter
cmpb
mov
fdivrp
out
filds
jmp
cmp
ss
int
hlt
xlat
testb
cli
call
repz
ss
ror
cmp
hlt
cmp
ret
sar
fcom
cmp
loop
mov
shl
rcl
not
cmp
xlat
loope
ds
lock
mov
mov
sti
icebp
rorl
imul
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
out
popa
jb
addb
jl
add
aad
out
sbb
lock
cld
rcr
in
int
lret
call
les
in
stc
jmp
int3
std
hlt
aad
fucomp
rolb
mov
int3
in
mov
repnz
xor
cli
std
jmp
ror
ret
aad
leave
mov
in
sub
fdivr
xchg
out
jmp
jmp
cmp
clc
jecxz
ret
cmc
add
jecxz
xchg
shr
hlt
fistpll
stc
out
call
rcl
ror
fidivrs
sar
fucomp
mov
lret
leave
loope
lret
cs
idivl
in
cmp
neg
fistpll
fcmovnb
repnz
ljmp
int3
shl
mul
ljmp
cmp
addb
orl
xchg
lret
leave
out
enter
or
out
cli
out
and
in
std
and
cmp
shl
cmp
leave
aad
lret
stc
clc
cli
fdivrp
std
xchg
call
iret
iret
iret
cli
int3
inc
loopne
int3
out
cmp
shl
ds
sti
ret
call
xchg
nop
jecxz
xlat
lock
cmc
cmp
jmp
aam
fsub
cmp
xchg
test
test
xchg
orb
clc
cmp
out
aas
int
fidivrl
into
fcomp
ds
out
test
incl
xor
icebp
cmp
fucomip
int
test
fcomp
mul
enter
test
lret
iret
cld
out
test
ss
shr
fidivrl
std
cli
fnstsw
cmp
orb
mov
rol
out
xor
xlat
int
jmp
int3
int3
shl
lock
fadd
ffreep
aas
lret
std
int
fcmovnu
nop
xchg
lret
fdiv
rcl
lock
aad
clc
rolb
jmp
aaa
cmc
lds
ss
enter
test
ret
out
std
lds
mov
into
sbb
in
xor
leave
out
cmp
not
fdiv
cli
fsub
ret
neg
into
sub
xchg
out
lret
in
lock
in
fucom
rolb
ror
xchg
mov
lret
xchg
ret
in
int3
lock
iret
out
cmp
icebp
mul
jecxz
in
iret
rorb
int3
repz
clc
cli
cmp
aas
repz
neg
xchg
ds
repz
xor
aad
fst
out
enter
rolb
hlt
jecxz
xchg
mov
enter
mov
test
aaa
aad
into
div
cmp
cmp
cmp
jmp
cli
fisttpl
rol
sub
ror
cmp
std
shl
not
fildl
lret
mov
neg
les
repz
lock
xor
addl
in
std
fcomp
cld
iret
sub
enter
cmp
ss
fcom
ret
cmp
in
stc
in
jecxz
std
jmp
loop
cmc
rcr
test
xlat
std
cmc
xor
out
idiv
cmp
hlt
test
enter
fsub
repz
fdivp
rcr
int
div
aad
xlat
frndint
testb
aam
fmul
incl
das
ret
lret
icebp
jmp
in
aam
fidivrl
sub
jmp
in
aas
jmp
icebp
xor
aas
aaa
ss
ret
repz
enter
fcmovne
loop
into
int
jmp
out
out
clc
cmp
loope
cmp
aaa
cld
fidivrs
shl
testb
fsub
xchg
xchg
rcr
into
rcr
cs
lret
xlat
enter
cmp
addb
loope
int
mov
out
enter
fucomi
cmp
jmp
loopne
in
fndisi(8087
jmp
mov
jecxz
ret
xchg
int
mov
idiv
ljmp
out
lret
ret
sar
repnz
repnz
cmp
in
in
int
jmp
cmp
into
icebp
add
xlat
in
out
mov
in
jecxz
rclb
ljmp
icebp
in
cmc
repnz
std
rol
and
jmp
lret
enter
aad
sarl
call
int3
fdivs
mov
mov
inc
add
add
add
add
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
test
enter
jl
add
rcl
std
fdivr
repz
in
cli
out
into
lock
xchg
das
in
jecxz
clc
stc
clc
fmul
cmp
lret
repz
rcr
cli
mov
xchg
fsubrp
rcl
iret
rcl
rcl
aad
lock
rcl
fcmovbe
aam
aas
in
std
out
fiaddl
lret
xor
fcmovnu
repnz
fsubp
out
xchg
mov
mul
cli
mul
in
mov
int3
xor
cmp
lret
cmp
aas
mov
fsubr
addl
std
int3
cs
into
sar
leave
ror
xor
jmp
test
vpslld
test
int
loopne
icebp
repz
xor
enter
cmp
stc
clc
cmc
fucomi
fcmovbe
mov
icebp
leave
adc
ss
xor
lock
cmp
aad
aam
stc
ret
out
repnz
into
in
mov
out
ffreep
loope
shl
dec
loopne
add
repnz
loopne
fcmovnu
jmp
jecxz
jecxz
cmp
into
aaa
int3
fcmovnu
fxch
in
in
sbb
rcr
xchg
in
xchg
lret
shrl
std
call
in
ret
ret
xor
loope
bnd
aad
xor
xor
fdivs
leave
div
out
cmp
stc
rcl
fucomip
mul
aad
cmp
ljmp
enter
sar
fcmovne
xor
call
stc
ds
aam
out
out
popl
cs
fst
repnz
out
aad
shl
and
xlat
mov
ljmp
xor
xlat
cmp
shl
cmp
hlt
cmp
rol
xor
aad
mov
cmp
into
shl
in
out
shlb
aad
sti
cli
into
aas
out
shr
test
rol
jecxz
mov
fildl
xchg
jmp
cs
int
out
loope
sbb
xlat
lock
idiv
fsub
out
ffree
test
loopne
into
jmp
cmp
neg
jmp
repnz
cmp
rcl
cmp
flds
test
int
loop
lret
std
cmp
not
cmpl
hlt
aas
rcl
std
xchg
out
xchg
xor
cmp
stc
repz
test
loope
clc
cli
loope
fiadds
xchg
cmc
lea
cli
int
xor
lock
rol
rolb
fildl
repnz
jmp
xor
fdivrl
fidivrs
test
stc
cli
sbb
loope
ljmp
in
xor
aam
stc
call
ds
fiadds
fcomip
xlat
aad
int
out
in
mov
imul
test
shr
fpatan
xor
rol
jmp
in
test
int3
enter
out
fnstenv
aad
xlat
hlt
shr
cmc
fcmovnu
fcmovb
xchg
sbb
mov
xchg
adcb
sar
call
fdivp
roll
loope
fsincos
out
dec
xchg
jmp
and
cmp
lock
shr
lret
ror
add
in
in
mov
enter
jmp
in
enter
ror
out
cmp
ret
loop
into
mov
xchg
orl
into
cmp
shr
repz
xor
loope
rcr
and
fxch
icebp
fsts
out
lret
ljmp
leave
cmp
clc
rol
hlt
stc
mov
repz
mov
test
in
repz
clc
fsubr
cmp
in
in
frstpm(287
out
std
rcl
ret
clc
in
loop
in
jecxz
das
cmc
out
lret
rcl
cmp
xlat
cmc
out
jmp
in
lds
hlt
lret
xor
cs
fnstcw
ffree
out
ds
out
call
ds
std
lret
mov
repnz
loopne
iret
test
lock
out
loopne
std
hlt
loop
idiv
fimull
sbb
vpavgw
icebp
cmp
lret
aam
clc
fprem
xchg
ds
sti
clc
xlat
int3
mov
in
nop
jecxz
fsubp
loop
out
in
leave
stc
in
ljmp
rcr
cli
jmp
lret
xchg
int
xchg
jecxz
aas
enter
repz
xor
int
int3
repnz
mov
and
mov
orl
jmp
rol
aas
ror
daa
jae
iret
jmp
jl
addb
jl
loop
fxch
loop
icebp
jmp
jmp
jmp
out
ljmp
not
idivl
icebp
ret
fucomp
aad
stc
in
cli
xchg
fiaddl
enter
xor
flds
cmp
int
flds
repz
ljmp
cmp
xlat
loop
aad
loop
mov
fcmovne
call
fdivp
adc
shr
int
bnd
jmp
icebp
addl
lea
cmc
in
int
xor
out
lret
loope
cmp
test
shl
xchg
mov
jecxz
cmp
mov
out
stc
cmc
fnstcw
dec
aad
imul
loopne
out
out
xlat
mov
dec
lock
jecxz
lret
hlt
out
f2xm1
stc
cmp
shr
rcl
les
in
mov
jecxz
loop
int3
into
int
out
aas
loope
cld
repnz
mov
cld
int
jmp
xchg
icebp
call
std
xor
repz
jecxz
loop
loop
rcr
mov
xchg
call
lock
int
cmp
cmp
fadd
lds
ret
ljmp
jecxz
mov
in
cli
ljmp
aad
vpsubd
jmp
int3
out
lret
int3
xchg
cs
test
cs
clc
lock
loopne
ror
mov
sti
mov
in
fdiv
aaa
sub
aam
cmp
enter
cmp
aad
mov
out
out
iret
cmc
int
jmp
ljmp
cmp
out
loopne
xlat
loopne
loopne
sbb
rorl
shl
loop
into
fdecstp
icebp
loopne
cmp
sti
loope
fdivr
aam
in
mov
mov
xchg
aad
call
stc
enter
rcr
incl
sub
in
aam
iret
mul
icebp
enter
rcr
ss
sti
faddl
aas
in
cli
xor
int3
lock
rcl
rcr
jmp
sub
in
repz
stc
jecxz
lret
test
in
leave
ret
out
cmp
cmp
fcomip
loope
std
mov
mov
loopne
call
xor
cmc
sti
fstp
fadd
icebp
in
jmp
cld
icebp
in
test
shll
lret
clc
out
out
hlt
cmc
in
fsubp
cli
mov
loope
out
fmulp
cli
xchg
xor
int
ss
loope
fdivl
loopne
call
out
lock
out
aad
shlb
in
stc
imul
xlat
cmp
repnz
in
aad
fcmovu
repnz
hlt
fsubr
repz
les
enter
ss
idiv
into
rol
stc
out
cmp
cmc
enter
jmp
int3
xchg
cld
jmp
out
cmp
cli
lock
jecxz
ret
fdivp
mov
in
int
mov
loop
in
ds
clc
fnsave
test
shl
clc
fucomp
clc
loopne
ret
in
jmp
out
cli
lock
fucomp
into
sti
sbb
testl
incl
ret
aad
rcl
cld
cmp
cmp
fnstsw
adc
imul
test
aam
aam
cli
bnd
sti
call
sarb
add
fdivrp
jecxz
dec
shl
xchg
roll
ljmp
fcomip
aam
lock
mov
test
mov
test
icebp
ljmp
lock
loopne
std
cmp
hlt
mov
incb
nop
loope
repz
lret
clc
cmc
xor
cli
in
fiaddl
mov
addl
jmp
cs
int3
cmp
sti
fbstp
in
neg
mov
mov
fdivr
cld
loop
xchg
xor
out
cmp
fsubrp
fidivrl
rcl
shl
fadd
neg
call
loope
aas
fisubrs
jmp
enter
sar
cmp
xor
cmp
out
pop
mov
xor
leave
repz
fsubp
cmp
xor
lds
xor
add
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
and
jl
addb
jl
fsub
lret
ljmp
hlt
sti
ss
cmp
cmp
cli
clc
sar
fisttpl
jmp
rorb
lock
fucomp
cmp
dec
out
iret
std
icebp
sti
ds
test
int
jmp
sub
xlat
call
leave
enter
faddl
rcl
out
sti
lret
fcomi
test
aad
ljmp
in
fldl
fdivrl
loopne
in
jmp
out
nop
lock
leave
shl
loop
ljmp
fdivr
repnz
lds
in
nop
orl
std
cmp
lock
cld
rcl
lock
shl
in
stc
xchg
xchg
jmp
in
aaa
sub
into
cmp
shl
loopne
shl
dec
fildl
loop
mov
ljmp
out
leave
aad
fucomi
stc
jmp
cmp
out
rol
ret
hlt
mov
int3
jecxz
cld
shr
cld
fidivs
xor
call
clc
loope
jecxz,pt
aam
ret
sub
mov
in
std
fdiv
lock
repnz
loopne
aaa
leave
xor
stc
into
addl
out
jecxz
frndint
test
iret
jmp
in
leave
xor
ror
jecxz
loope
and
imul
aad
ljmp
jecxz
out
int3
ljmp
cli
cmp
cmp
ret
out
test
fcomp
xchg
lock
icebp
loopne
loope
jecxz
in
shr
loopne
sar
cld
call
into
jecxz
cmp
stc
into
mov
adcb
aam
idivl
int
in
fadd
loope
loop
jmp
sti
lock
ljmp
leave
cmp
in
aaa
sti
stc
out
lock
out
orb
ljmp
xor
aad
enter
cmp
aad
cld
out
test
repz
in
ret
leave
cmc
xor
sar
sti
cmp
repz
hlt
jecxz
mov
cli
orl
lret
ss
sti
idivl
in
cld
xlat
shlb
addb
fmull
roll
lock
cmp
rcl
rcr
lock
clc
stc
sti
jecxz
stc
hlt
idiv
cmc
fndisi(8087
mov
xchg
xor
in
rcr
clc
shl
std
hlt
cmp
repz
mov
out
fxch
jmp
xchg
hlt
out
cmc
fcom
aam
aad
adc
testb
cli
cli
test
mov
cmp
ror
stc
jmp
ss
mov
cld
fmull
leave
enter
loopne
icebp
xor
rol
shl
enter
loop
fsub
test
test
xlat
int3
out
xchg
in
xchg
shl
rcl
rcr
sar
aad
lret
fcom
out
rorb
movb
cld
mov
loope
xor
sti
repz
xor
xlat
sti
test
loop
loopne
ret
call
mov
subl
test
cmp
cmc
fnstenv
cmc
f2xm1
aam
test
adc
test
test
out
loope
loopne
xor
cmp
in
in
int3
lret
xlat
into
sbb
cmpb
jmp
lea
int
out
sarb
ss
cmp
iret
jecxz
ret
in
lock
mov
cld
leave
mov
ljmp
leave
jmp
xor
out
cmp
fcmovu
loopne
in
cli
inc
addb
nop
nop
in
lock
icebp
mul
ljmp
loopne
int3
sti
cmpb
loopne
xlat
mov
xchg
rol
jmp
cmp
xlat
lret
repz
ljmp
jmp
enter
lret
cld
in
hlt
jmp
xor
jmp
aam
fmulp
sti
fcmovnbe
hlt
testb
inc
filds
test
aam
cmp
fchs
cld
incb
jecxz
xchg
mov
cld
call
repnz
ror
out
into
lret
flds
repnz
rcl
cmp
cmp
leave
fucomi
in
int3
shl
jmp
in
out
jecxz
rcr
roll
loopne
shl
fdiv
aam
fdivr
in
fucom
xchg
test
loopne
ret
clc
cmp
out
fmul
ss
fidivrl
out
test
cmc
lds
hlt
loope
dec
xchg
xchg
test
mov
mov
mov
jmp
aam
into
lret
rcr
fstp
les
cmp
adc
add
out
int
lds
jecxz
cmp
clc
out
out
lret
fucomi
shl
cld
jmp
loop
clc
int3
out
iret
loopne
aad
out
test
into
cmp
rcl
cmp
ret
mul
mov
iret
fiadds
in
sarl
call
loop
out
aas
stc
jmp
jecxz
jecxz
mov
loopne
and
xor
sarb
out
repz
fldlg2
sarl
shl
cli
shr
jmp
out
int
in
in
shl
aam
sti
jmp
cmp
call
faddl
cld
lret
loopne
into
shl
sub
ret
xor
ret
ss
fsubr
std
fdivl
in
rcr
ljmp
jmp
in
aad
iret
in
out
out
iret
lret
test
in
rol
mov
fucomp
test
cmc
repnz
aam
in
call
stc
jmp
int
shl
test
lret
lret
addb
ss
cld
repz
sti
fdivr
out
lock
lock
lds
jmp
xor
cmp
loope
loopne
cld
sti
rcr
faddp
into
loopne
fsubr
in
aad
sti
sub
div
loopne
hlt
mul
fldl
and
std
test
xchg
xchg
in
ret
rcl
aaa
cld
call
in
adc
xlat
cmc
sti
fcomp
neg
out
sbb
mov
std
lret
xor
mul
aad
out
jmp
clc
cmc
out
out
shr
jmp
loopne
into
lock
in
out
aam
ljmp
xlat
cmc
repz
and
repnz
test
and
xor
aad
out
aaa
fcmovb
aas
cmp
xchg
out
sarb
mov
out
loope
ljmp
imul
jmp
adc
cmp
loopne
fucomip
out
call
loopne
lret
repz
cmp
loop
cs
ss
repnz
aam
testl
xchg
rcl
idiv
ljmp
loopne
sar
mov
stc
jmp
in
in
addb
aam
repnz
ror
ss
call
mov
mov
xchg
repz
aaa
fucompp
cmp
ss
out
sti
repnz
rolb
cld
test
std
fcomip
enter
cld
ss
in
out
loope
fiadds
neg
and
fsubr
mov
shl
in
int
enter
enter
xlat
fcmovnbe
into
out
std
xlat
mov
xchg
ljmp
shl
fmulp
hlt
loop
loop
leave
aam
mov
adcb
xor
lock
dec
out
cmp
repz
aas
sti
in
in
lret
enter
jmp
jmp
sub
shl
divl
int3
sar
xlat
xlat
sbb
ret
jmp
mov
xor
cmp
fcmovbe
repnz
rcr
sti
out
into
rcl
call
out
jmp
shr
les
aaa
sar
cmp
hlt
clc
xor
loopne
jmp
mov
nop
fucomi
icebp
call
fldlg2
shl
int3
shl
cli
std
repnz
fmulp
shl
ret
fiaddl
in
ss
xor
cmp
sti
xlat
repz
cld
ror
sbb
inc
lret
jecxz
mov
in
ljmp
fcomp
in
ret
adc
fadd
div
lret
in
imul
jmp
lds
jmp
call
fdiv
loope
aad
loop
sub
int
loopne
orb
fucomp
cmp
shr
fidivrs
enter
int3
clc
test
faddl
xor
lock
shl
cmp
fdivp
call
int
in
in
lea
xor
xlat
cmp
out
shl
flds
fsubp
in
hlt
xlat
out
ret
hlt
iret
ds
lret
shlb
fdiv
stc
aad
cli
aad
out
mov
clc
rorb
jecxz
loop
out
aas
repnz
fstp
clc
loop
add
xlat
leave
mov
pushl
shr
xor
add
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
push
loope
and
jl
addb
jl
in
out
cmp
or
xchg
cmp
xlat
hlt
std
in
fcmovb
in
jmp
jmp
repnz
clc
aam
sar
repnz
std
out
sub
ret
cmc
in
call
out
call
out
out
ljmp
sar
xchg
xor
fsub
aas
lret
fmul
ret
cmc
out
lock
shl
cld
fadd
xchg
jecxz
aad
in
fxch
cli
sti
cmp
lret
ds
fucom
fsub
fldl
ljmp
loop
sub
repz
cmp
xlat
hlt
repz
icebp
into
fmuls
out
les
rol
jmp
enter
aas
int3
cli
incl
in
ljmp
rcl
into
cmp
cmp
cmp
cli
lret
lock
loopne
repz
mov
call
sub
repnz
into
fnsave
imul
std
aas
fnstsw
lock
jmp
leave
mov
xor
in
ret
stc
repnz
rol
cmc
icebp
int3
into
test
call
std
mov
sti
loop
in
iret
in
icebp
xor
shl
in
sar
aam
loope
cmc
aad
out
rcr
icebp
aaa
loopne
iret
out
cmp
cli
aaa
leave
aad
in
iret
roll
aad
leave
addl
lds
sarl
aad
icebp
cmp
sar
rorb
leave
jmp
xchg
in
jmp
divb
xor
cmp
xlat
hlt
loop
test
jmp
out
ljmp
into
leave
iret
in
cmp
rcl
test
sbb
mov
call
in
call
shrl
cmc
clc
enter
enter
ret
hlt
inc
cli
test
lds
int3
rorl
cli
shll
cli
repz
cmp
in
enter
fstp
not
clc
ss
fxch
enter
ss
ds
testl
out
enter
in
xor
out
cld
fucomi
lock
std
clc
test
rcl
std
testb
cmc
jmp
fcmovnb
out
xlat
shr
std
sti
aad
hlt
roll
fisttpll
jmp
iret
jecxz
shr
out
jmp
cmp
fdivrl
lock
add
mov
jmp
mov
lock
ss
aas
stc
stc
jmp
cli
call
enter
icebp
xchg
jecxz
enter
les
std
fsubr
std
ror
fld
and
loope
mul
fists
aad
ljmp
cld
int
cmp
cmp
bnd
out
std
iret
lret
incb
int3
sub
into
lock
lret
xor
xlat
rcl
out
repz
jmp
xchg
lret
int3
mov
aad
std
sar
lret
xlat
call
add
xchg
or
std
ret
lock
xor
jmp
shl
into
xor
xor
hlt
xlat
shl
imul
mov
mov
cmc
repnz
sub
cmp
xor
in
loop
mov
fmuls
int
into
ror
xor
icebp
cmp
in
fidivl
testl
cmc
out
jmp
in
jmp
rcr
jecxz
ret
sar
out
xchg
icebp
jmp
shrl
ljmp
fcomp
shl
out
sti
testb
call
ljmp
shl
rcl
fcmovne
loope
ss
ret
testb
int
mov
jmp
xor
cmp
hlt
testl
jmp
int
into
lock
int
sar
iret
into
out
cmpb
shl
jecxz
sar
lret
cld
lea
mov
loop
ss
jmp
fcmovne
loop
aam
fsubp
cmc
or
mov
loopne
rorb
jecxz
hlt
lock
aam
cmp
fsubp
in
sub
jmp
xchg
into
enter
icebp
call
call
xor
dec
cld
jmp
sarb
enter
fidivl
mov
repz
add
fucomip
into
jecxz
fnstcw
in
jmp
leave
jecxz
cld
enter
fsubrp
enter
enter
fdivr
jecxz
cmp
test
jmp
leave
test
cmp
ror
loop
imulb
cmp
call
out
cmp
leave
out
cld
faddl
xchg
loopne
cmc
ror
icebp
ss
filds
enter
test
int
loopne
lret
hlt
iret
aaa
icebp
hlt
into
lret
fdivp
shl
stc
jmp
call
mov
mov
shr
stc
out
out
xor
int3
sti
int
repz
xor
in
fldl
fists
shl
int3
in
shlb
cmp
fscale
cld
stc
call
fcmovnb
xlat
movl
aaa
jmp
enter
in
sti
loopne
test
test
test
xchg
test
shl
ss
std
fdivp
jecxz
repz
inc
in
fcmovnu
out
std
decl
xor
lret
hlt
fsubr
sarb
shr
out
rol
shl
stc
orb
fdivr
xchg
xor
repnz
fcom
out
cmp
in
icebp
repz
out
lock
mov
xor
cmp
imul
fnstcw
cmc
ljmp
cld
push
ret
decb
out
in
call
out
add
loopne
or
mul
out
lret
mov
xor
repnz
cld
int
in
orb
in
mov
and
jmp
enter
cmp
xlat
shr
sti
imul
std
hlt
and
sti
mov
test
cli
xchg
in
call
shll
fstp
ss
lret
into
clc
clc
fdiv
loopne
enter
shr
fildl
xor
aaa
xor
stc
ljmp
std
xlat
jecxz
lea
jmp
rcl
std
ss
push
cmp
test
aad
out
enter
std
xchg
out
ret
sub
fmul
loopne
ror
repnz
in
mov
jmp
ret
out
cmc
std
divb
shr
fdiv
cmp
vpaddq
enter
out
xor
fsub
shl
loopne
into
inc
neg
lock
out
imul
les
jmp
xor
aad
aam
hlt
idivl
cmc
sar
cmc
int3
std
xlat
stc
clc
mov
ds
lret
rorl
out
loopne
xlat
fcomi
lret
lret
sti
fcmovnu
out
xrelease
into
iret
jecxz
out
cmc
lret
xor
int3
aad
fcomi
out
fcmovb
mov
loop
dec
enter
xchg
in
shrl
mov
jmp
into
push
sar
cli
stc
aad
lock
ret
leave
fsub
out
loope
mov
mov
call
xor
cli
aaa
in
aam
into
xorl
testl
or
in
mov
aad
rol
shr
cli
rcl
shl
fdiv
fcomp
out
out
lret
xchg
les
xchg
xor
ss
cmp
out
fcmovnbe
fldl
rol
jecxz
iret
fsubr
in
loopne
shl
hlt
shl
aad
in
std
stc
call
repnz
call
mov
rolb
divl
repnz
int3
lret
cmp
into
addl
xchg
jecxz
and
jmp
xor
out
in
cmp
flds
out
loopne
addl
das
in
ljmp
cmp
rol
mov
out
cmp
leave
leave
shr
leave
lret
sti
repz
aam
int
cld
fsubp
mov
neg
sti
into
in
in
ret
cli
repz
ss
sar
leave
cld
inc
mov
fadds
out
loopne
les
testl
fadds
xchg
lret
int
enter
cmp
cmp
in
out
ret
fdivr
rcl
faddp
std
out
jmp
xor
leave
cli
ror
jmp
int
shr
orl
leave
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
rorb
jl
addb
jl
xchg
aam
leave
fdivp
int3
fcmovnb
and
sub
ljmp
repz
rcr
clc
loopne
loop
std
loope
jecxz
mov
fnsetpm(287
iret
test
shl
lock
clc
ds
stc
mov
mov
stc
xchg
int3
icebp
icebp
icebp
aaa
hlt
cmp
out
out
int3
lret
int3
cmc
shl
or
fnclex
fisttpl
out
aam
in
fscale
into
cmp
cmc
sar
mul
cmp
cmp
fadds
divb
in
shr
in
fcmovbe
out
lret
int
cmpb
clc
aam
fdivrp
in
leave
out
mov
lret
ror
out
lret
neg
cmp
int
addb
loope
out
mov
out
sar
loop
icebp
lret
aas
xor
cmp
aad
std
out
in
jecxz
jmp
cli
cmp
iret
lock
div
in
int
fcomip
iret
addl
shl
fdiv
jecxz
out
jmp
or
lret
out
repnz
ss
shl
icebp
loope
leave
sti
mov
loop
int3
into
cli
xchg
nop
repz
hlt
cmc
test
cmp
addb
in
enter
int3
jmp
aad
call
in
fdiv
cmp
loopne
enter
std
test
aam
les
std
cmp
clc
sti
clc
fucomp
fdivr
add
jmp
in
leave
ficoml
test
test
fcom
out
shl
ret
test
xlat
adcb
shlb
shr
fdivl
shl
aad
cmc
fcmovnbe
in
test
fdivr
loope
aam
test
out
lock
imul
xor
icebp
call
addl
in
jmp
out
std
xlat
enter
xor
int
jmp
jecxz
sar
cli
xchg
les
jmp
ljmp
aad
repz
sti
into
cmp
sti
jecxz
loop
leave
fcmovnb
loope
fucomi
xchg
test
xchg
in
repz
in
lret
sarl
clc
and
repnz
fmul
loope
stc
xchg
fld
std
fcomip
bnd
hlt
int3
aam
cld
std
cmc
fadd
adc
xlat
cmp
neg
in
loop
mov
mov
aaa
xor
rol
fmul
in
fsub
loop
in
faddl
xchg
in
in
mov
incb
iret
lock
ss
aam
int3
fidivrl
or
xlat
test
cld
out
cld
mov
enter
jmp
aaa
aam
ror
ret
xor
xlat
cmp
fstp
mov
iret
out
cmc
in
sti
repnz
cmp
incb
test
fprem
loopne
sub
lock
ror
sti
ftst
fdivrs
cmc
ror
cmp
cmp
fcmovnb
flds
fstp
lret
nop
test
xor
stc
sar
in
into
lock
repz
clc
aas
not
rol
cmc
ljmp
mov
lret
loop
cmp
idivb
call
rcl
into
icebp
in
inc
xchg
mov
icebp
xor
in
into
lret
dec
aam
in
stc
jecxz
in
out
stc
sub
xlat
addb
jmp
std
imul
iret
not
cmp
out
loopne
sar
cli
out
fmuls
xchg
jecxz
loop
fdivs
cmp
leave
int3
sti
xlat
hlt
fadd
incl
decb
fsub
jmp
repz
hlt
ss
xor
idiv
icebp
fcomi
ret
aam
sub
sti
mov
shr
mov
sub
xor
in
int3
cmp
sar
in
lock
enter
mov
rcr
push
cmc
enter
shl
out
fxch
clc
fadds
test
jmp
cmp
test
lock
nop
ret
sub
sub
repnz
ljmp
lock
out
testb
std
out
orb
iret
sarb
into
in
stc
shl
jecxz
std
adc
jmp
icebp
xchg
rolb
lret
sub
rcr
fdivrs
out
sub
roll
fucom
loop
ror
mov
repnz
aad
fprem1
repz
xlat
hlt
icebp
rcr
in
rcl
adc
add
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
lods
pop
push
jo
and
jl
add
fsubrp
ljmp
in
lret
aam
fsubrp
into
clc
iret
rcl
in
cld
std
rol
jmp
jmp
xchg
cmc
xchg
cmc
fld
out
aad
div
cmp
shl
and
call
in
loope
mov
in
jecxz
out
into
fcom
hlt
cld
repnz
into
aam
shl
adc
test
in
mov
jmp
in
in
rol
sti
xor
xlat
cmc
out
sti
fnstsw
ret
lock
jmp
loope
sti
out
lock
xor
jmp
fmulp
repnz
cld
loope
shl
mov
xlat
cmc
test
jmp
mov
hlt
xor
vpsllq
out
jmp
lret
cmc
aas
and
mov
out
mov
xor
fsubp
bnd
rcr
cmc
clc
clc
rcr
fcmovne
cmp
in
aad
faddl
repnz
loopne
repz
cmp
sbb
jmp
loope
ret
loop
ficoml
sti
xlat
out
aad
fcomip
rcr
xlat
iret
cld
aam
out
loope
in
loope
in
out
mov
xchg
sub
cmc
lret
fcom
shr
cmp
lock
rol
xlat
mov
mov
fists
in
hlt
cmp
push
cld
fcmovb
out
std
testl
aam
cmc
cld
rcl
ljmp
in
filds
xchg
jmp
mov
out
lock
aam
icebp
shlb
clc
cld
cmp
idivl
loop
ret
jmp
in
out
movl
sub
fucomp
sar
repnz
clc
loope
call
iret
jecxz
loopne
cld
ljmp
in
enter
idiv
loopne
aad
cmp
idiv
in
ljmp
out
jecxz
not
out
fxch
cmp
in
sbb
aam
xchg
cld
out
in
in
icebp
ds
xor
ljmp
cld
stc
xor
xchg
call
fcomi
xchg
jmp
aad
in
xor
cmp
aad
out
hlt
fsubr
fsubrp
jmp
rorl
cs
xor
cmp
fcmovbe
cmp
aam
loop
leave
mov
leave
fucomp
test
xchg
out
jmp
in
cld
cmp
ds
cmp
test
call
mov
out
hlt
imul
call
lret
iret
shl
ret
in
std
mov
in
shl
jmp
xor
icebp
repnz
or
rcr
filds
in
test
xchg
ljmp
ljmp
test
ljmp
out
hlt
jmp
jmp
sarl
out
icebp
out
aad
cmp
clc
fadds
fldl2t
in
xchg
in
ret
lret
leave
stc
call
lret
in
shr
cmp
test
mul
mov
leave
mov
sti
lea
in
in
icebp
lret
cmp
fiaddl
xchg
aam
mov
xchg
xchg
test
cmc
xor
sti
fcmovu
out
ss
icebp
adc
test
enter
jecxz
int
in
lock
fcomp
int3
loop
enter
rcl
cmp
ret
clc
leave
loopne
icebp
or
rcl
loop
xlat
cli
iret
div
enter
shl
out
sbb
sbb
loop
xchg
call
lock
rcr
ror
out
aam
aad
in
hlt
fsub
loopne
loope
loope
fcomp
jecxz
fucomip
jmp
aaa
clc
hlt
ss
aad
stc
loope
out
sbb
fld
fildl
lret
icebp
nop
repnz
cmp
cmp
stc
cmp
sarb
sar
rol
xchg
fucomi
dec
loope
jecxz
int3
cmc
vpmulhw
rcr
cmp
shl
fadds
in
hlt
sti
leave
xchg
fdivrp
cld
lea
icebp
cmp
test
sarl
in
jecxz
loopne
mov
lret
cld
stc
out
jmp
iret
lock
cs
shl
lock
roll
fimuls
clc
lret
loop
fsub
aaa
iret
shll
cmp
in
int3
cmp
addl
movl
sahf
add
add
les
rcr
fxch
enter
out
jp
cmp
jl
addb
jl
ljmp
rcr
cld
xor
aas
cli
adc
sub
ret
in
call
stc
out
lret
cmp
jmp
incb
in
ret
test
addl
and
xor
in
cmc
lret
call
mul
xchg
fstp
loopne
in
cld
test
addb
fnstenv
cmp
xor
fdivs
std
jmp
cmc
stc
fdivr
out
loopne
std
and
out
icebp
iret
mov
iret
vpsadbw
aam
jmp
and
adc
fcomi
fdivr
ret
push
roll
sub
bnd
repz
into
shl
and
loopne
aam
out
ljmp
out
lret
enter
shr
in
cmc
aas
cmpl
rcl
clc
cmp
enter
lock
hlt
call
icebp
into
cmp
jecxz,pt
out
sti
lds
sbb
loope
loope
shl
out
xor
sti
int3
icebp
fneni(8087
xor
aas
shl
repz
shr
mov
cld
loope
xchg
int3
in
xlat
into
jmp
hlt
repz
cmc
sarl
loop
loopne
sbb
shr
repnz
aad
jecxz
icebp
fnstsw
sbb
lock
stc
jmp
out
call
into
repz
cmc
in
iret
fprem1
fdivp
fsub
std
cmp
hlt
fdiv
mov
test
in
xchg
lret
aad
enter
call
in
iret
in
in
ret
call
loop
jmp
shl
aam
sub
lret
xor
xor
jecxz
int3
cli
test
cmc
out
mov
stc
nop
sub
hlt
int3
out
xlat
lret
ss
lret
hlt
out
loopne
hlt
out
sbb
orl
lock
lock
cld
hlt
fcmovu
lret
ret
aam
sti
cld
cli
loop
std
repz
out
shr
repz
cmp
adc
mov
adc
stc
mov
out
int3
mov
hlt
jmp
stc
ret
fcmovnb
cld
rcl
fisttps
icebp
loopne
iret
cmc
lock
aad
shll
test
rcl
xor
xchg
fmull
nop
in
xchg
lret
xor
shr
imul
sti
cmp
aad
fadd
shl
shl
fdivrp
les
cld
int3
leave
lds
clc
int3
shr
aad
div
fcmovne
repnz
fstp
ret
idiv
std
in
in
test
xor
aam
enter
std
fcmove
fidivrs
fnstsw
filds
int3
mov
shrl
cs
rcr
cmp
ljmp
ret
cmp
xor
loopne
loop
stc
sub
into
into
idiv
fdiv
ss
std
cmp
aas
rcr
sar
movb
jmp
out
nop
in
aad
into
xor
fdivr
ss
aam
loopne
hlt
test
loop
fadd
iret
cli
mov
jmp
shlb
call
out
rol
icebp
enter
mov
in
shr
xor
shll
out
fnstsw
std
shr
cmp
fst
std
xlat
ffree
sar
fmul
mov
push
out
lret
call
cld
repz
cmp
shr
loopne
add
mov
loope
int
xchg
fmull
sar
shl
aam
xor
repnz
xlat
test
not
sar
test
fcmovnbe
out
into
in
test
lret
jmp
xlat
stc
lret
out
xor
cmp
flds
rorl
mov
out
xor
fsub
clc
imul
out
aad
rcr
sar
rcr
loope
testl
mov
lock
cmp
cli
cmp
ljmp
std
shl
mov
loop
mov
xor
shlb
leave
std
ret
fmulp
cmp
xor
shl
in
testl
das
out
aad
cmc
stc
out
leave
xor
adc
fstpt
cmp
jmp
loop
out
in
ret
in
leave
cld
fldlg2
repnz
cmp
ffreep
sti
aas
test
int3
decl
lock
xor
xor
icebp
ret
fucom
rol
sar
hlt
fxch
out
call
loope
repnz
mov
xor
jmp
enter
vpsubusb
sub
xor
mov
das
jl
addb
jl
iret
out
hlt
vpslld
repnz
iret
repz
fcmovbe
aam
div
clc
addl
shr
in
in
xor
ds
in
fcmovnu
loope
cli
repz
test
jmp
lock
in
int3
in
out
mul
fadds
incl
jmp
mov
lock
icebp
lock
aaa
sarl
int
rol
loopne
call
int3
into
out
rcr
lret
stc
cmc
int
in
std
ss
fidivrl
aas
fstpt
ds
repnz
leave
int3
sti
out
jmp
icebp
mov
aaa
jecxz
icebp
clc
out
aad
rcl
test
in
jecxz
sbb
mov
leave
in
sub
in
cmp
rcl
cmp
rcr
int3
rcl
mul
decl
fildl
xchg
aaa
loope
stc
hlt
stc
cmp
aas
fdivrl
xchg
loop
call
fndisi(8087
nop
shl
out
in
rol
xor
sti
cld
call
frndint
aas
cmc
mov
jecxz
std
xchg
dec
rcr
out
call
aaa
fldlg2
rcl
iret
test
test
fiadds
mov
in
fcmovne
mov
jmp
out
xor
repnz
into
iret
fiadds
int
addl
xor
in
aam
aaa
enter
repnz
out
lock
testl
in
xor
xor
lret
cmp
int3
std
cmp
rol
cli
mul
test
loope
mov
vpmulhw
ret
in
in
fnsave
ret
clc
clc
ds
stc
xlat
int
rcr
out
call
xor
movb
cmp
loop
sub
test
dec
sub
fstp
cmp
repz
adc
ret
loopne
test
ror
loopne
loope
call
out
cmp
f2xm1
repnz
fnclex
rolb
incl
repz
leave
enter
divl
loopne
idiv
fmul
shr
ffreep
or
jecxz
lret
xchg
aam
int3
ret
out
xor
cmp
lret
ret
ds
sar
xlat
cli
mov
sti
into
iret
jecxz
repnz
ret
shl
aad
sti
rcr
loop
xchg
jecxz
lret
mov
jmp
cmp
lret
enter
ror
int
out
fmul
fld
enter
out
int
fsubp
ljmp
leave
xor
iret
int3
sarb
fiadds
rcl
test
faddl
test
fmulp
aam
cmp
int3
out
xor
add
repnz
sar
in
loop
out
call
test
ss
leave
ss
cli
loope
decb
fucom
cld
not
cmc
fyl2x
xor
lret
lret
fadd
aam
leave
fmull
loopne
jecxz
shl
repz
clc
cs
sar
xor
xlat
std
out
in
stc
xchg
jmp
fadds
call
cmp
fxch
rcr
rcr
aam
xchg
cld
shl
out
fcomp
fisttpl
adcl
repnz
enter
in
std
roll
aam
mov
out
out
out
jecxz
ret
jmp
idiv
ss
repz
in
sti
sar
aam
cmp
xchg
ljmp
out
lret
neg
ss
out
hlt
in
fcmovnu
cmp
loopne
mov
out
fcoml
imulb
jmp
fldl2e
stc
out
cmp
cmp
incl
sti
test
out
int3
addb
ljmp
fcmovnu
aam
ret
sbb
loope
filds
das
xlat
out
ss
xor
fmulp
cmpl
xchg
loop
xchg
mov
out
into
ss
repnz
jmp
stc
leave
div
shl
loop
jmp
call
sti
int3
xchg
lret
int3
int
out
int3
fstpt
int
ds
mov
cli
xchg
fstp
iret
leave
out
xchg
fmul
imul
cmp
in
cli
fmul
cmp
in
cmc
ret
jmp
sbb
mov
ljmp
stc
rcl
mov
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
push
xor
les
jl
addb
jl
aas
loope
cmc
repnz
xchg
stc
add
lret
out
leave
das
ss
cmp
lret
repz
out
shl
in
cmp
orl
cmc
in
aaa
ljmp
fdivl
sbb
loop
test
fsubr
cld
lret
jmp
xor
iret
iret
cld
testl
sub
loop
cli
ror
cld
mov
out
in
call
in
stc
aam
sti
loop
rol
in
jmp
xchg
test
xchg
lock
sub
ret
lret
rcr
cmp
testl
or
shl
xor
aam
sti
sti
jmp
int3
stc
xlat
loop
movb
icebp
jmp
mov
cs
into
out
divb
into
idivl
aad
in
roll
jmp
mov
out
cmc
fcomi
cmp
lock
icebp
cli
cmp
repz
and
jecxz
jecxz
int3
loope
hlt
aad
out
repnz
enter
ret
not
cmp
clc
and
lret
lret
xchg
hlt
xor
iret
jecxz
aam
cmp
sarl
repz
fcmovnu
faddp
fnstsw
leave
movb
mov
dec
int3
stc
cmc
out
sti
in
out
out
hlt
sti
cmp
fdivr
repnz
inc
cld
cli
cld
jmp
loop
cmp
aam
pushl
cli
ror
cld
adc
mov
in
fucom
mov
push
jecxz
xchg
in
clc
fnstenv
fcmovne
lock
idiv
not
iret
lock
fsub
xlat
fdivrp
mov
loop
test
into
xor
cmp
xor
xor
icebp
fcmovbe
mov
flds
mov
jmp
repz
in
idivl
shl
aad
fildl
out
rol
mov
in
xlat
out
ljmp
cmc
int3
jmp
cmp
int3
ds
and
leave
in
call
cld
out
in
ss
rcl
out
icebp
std
in
sar
cmc
sti
cmp
xchg
decb
xlat
mov
into
les
xor
stc
cmp
rol
xor
idivb
ret
repnz
clc
mov
ret
mov
call
fstp
bnd
hlt
icebp
lock
std
fucomi
add
std
xchg
out
xor
xlat
stc
in
in
fistpll
in
cmp
std
out
clc
xchg
xchg
loope
or
hlt
cs
aaa
shlb
xor
cmp
fcom
clc
mov
fsts
rol
fdivrs
sti
cmc
fyl2x
loop
out
repnz
fdivrl
std
fxch
int
iret
mov
icebp
out
cmp
aad
rolb
jmp
ret
repnz
out
xor
xlat
shl
out
fdivrp
hlt
cmp
sti
jmp
adc
fmulp
mov
std
repz
into
ret
lret
std
call
test
rolb
or
enter
nop
ljmp
out
idiv
add
fscale
ret
repz
clc
neg
mov
out
enter
out
jmp
cmp
cmp
fst
movl
nop
mov
cmc
rcl
out
test
out
shr
loopne
adc
aam
xchg
test
leave
cld
fcmove
shr
loope
lret
xor
iret
xlat
in
incl
test
in
mov
loope
mov
loop
cs
cmp
clc
out
sar
cmc
rol
fstp
jmp
stc
hlt
test
or
xlat
repnz
cli
cmc
cmp
test
rcr
adc
test
in
test
xchg
shlb
iret
out
aaa
cmp
cld
fucomi
jecxz
cmp
rcr
out
aad
faddp
lea
adc
xlat
in
ret
fstpt
jmp
int
clc
std
in
xchg
cli
hlt
imul
incl
int
mov
jmp
rcl
xlat
jmp
fdivr
sub
cli
idiv
in
test
or
icebp
ljmp
rcr
xlat
xor
out
in
cli
in
fmul
lret
icebp
lock
lock
fdivr
iret
fadds
dec
or
sahf
add
add
iret
leave
ret
int
xor
inc
ret
dec
ss
addb
jl
cld
test
cld
enter
fmull
xchg
leave
imul
icebp
hlt
cmp
out
icebp
aas
aam
out
lds
mul
cmp
addl
fdivl
fld
divl
jmp
int
ljmp
fadds
neg
nop
loope
stc
jmp
idiv
call
clc
fucomip
clc
cld
xor
xchg
nop
out
enter
cmc
vshufps
sarl
rcr
push
jecxz
rol
fadds
jmp
xchg
jecxz
in
lret
cmp
fidivs
lret
cmp
shl
loop
cmp
fstp
ljmp
in
xor
not
iret
aam
hlt
rcl
jecxz
sti
xlat
hlt
orb
xchg
in
ror
fdivr
out
aam
int
ret
test
fnclex
xchg
test
xchg
out
divl
rol
int3
sub
jmp
and
mov
xchg
jmp
jmp
ss
cli
jmp
in
out
into
fadd
ffreep
cmpb
in
jmp
lds
repnz
xor
cmp
loope
fsubp
lock
std
fld1
loopne
rorb
cs
div
iret
stc
loope
std
sar
fptan
loopne
mov
in
ficoms
in
xor
cmp
xor
in
aam
repz
clc
cli
in
lea
mov
loopne
ret
loopne
ret
repnz
jmp
fadd
cmp
fcmovbe
cmp
xchg
in
icebp
mov
enter
xlat
stc
das
fsub
out
call
aam
int
test
idiv
rolb
in
fsubrp
xchg
jmp
xlat
lret
cmp
cli
cmp
cmp
repz
xchg
in
loop
jmp
int
icebp
in
out
fcomi
out
fistpll
cld
lock
cmc
test
ret
cli
lret
mov
out
lock
jmp
cmp
cmp
hlt
int3
rcr
xor
out
ds
mov
addl
xchg
div
xor
sar
cmp
out
leave
mov
jecxz
in
into
mov
out
cmc
fidivrl
adc
vpmulhw
jecxz
lock
test
cmp
int3
into
lock
fsub
call
std
les
out
in
ror
repnz
aas
jecxz
fcomi
mul
out
faddl
in
jmp
test
divl
jecxz
hlt
sti
aas
call
add
fcom
cld
rolb
clc
jmp
lret
repnz
divl
clc
loope
rol
aas
out
loop
leave
testb
out
int3
mov
xchg
ret
jmp
lret
int
ss
hlt
inc
aas
ret
repnz
fmuls
sub
shl
in
in
sarl
sar
neg
call
out
fiaddl
loope
jmp
aam
cmp
ds
repnz
out
out
in
mov
aad
out
imul
enter
out
cmp
shl
sbb
out
enter
loope
jmp
lret
enter
sub
ret
jmp
cld
aad
xor
jmp
fucomip
test
rcll
enter
clc
sti
xlat
cmp
in
ret
rorb
fldl
add
stc
iret
xor
neg
call
int3
int3
ret
rcr
cmp
aam
call
in
mov
out
lret
repnz
fistpll
out
cmp
aad
rcr
std
imul
in
out
mov
cli
jmp
call
icebp
clc
jmp
ljmp
xchg
int
mov
call
rol
in
clc
out
cmp
jecxz
call
ljmp
lock
repnz
in
std
cmp
cli
std
ret
jmp
xlat
cmp
mov
mov
cs
in
std
clc
out
loopne
jmp
aas
ret
in
test
int
ret
ljmp
cmp
into
repz
ds
xor
lea
jmp
rcl
int3
iret
rol
shll
or
in
cmp
jl
testb
into
mov
in
jmp
xor
ror
hlt
jmp
adc
cli
out
mov
jecxz
shr
cmp
cmp
rol
jecxz
clc
aam
xchg
int3
call
icebp
lret
lret
jmp
aaa
xor
std
sti
idiv
jecxz
jmp
loop
mov
int3
loope
repnz
loop
out
cmp
out
call
cmp
lock
in
cld
ljmp
fdivp
repz
loop
sti
cld
aam
cmp
xchg
xor
loop
mov
cld
fcomip
in
lock
stc
aam
loop
div
cld
adc
and
xchg
out
mov
ljmp
xchg
xlat
icebp
out
cmc
out
hlt
ljmp
std
out
xlat
jmp
fmull
icebp
mov
das
enter
stc
fucomp
out
cmp
cmc
cmp
cli
cmp
sar
shr
test
loop
aas
xor
icebp
int3
loop
jmp
rcr
jecxz
out
out
stc
rcr
test
orb
int
sub
xor
int3
cmp
repz
iret
sti
int3
xor
aad
hlt
fmull
xchg
aam
iret
fcomi
in
repnz
xlat
sarb
ret
in
xlat
jecxz
aad
mul
int3
neg
test
fimull
cmp
cmp
ss
into
lret
aad
roll
lds
or
lret
std
rorl
aaa
lret
jmp
and
rol
test
std
ret
icebp
call
xor
imulb
aam
cmp
xlat
jecxz
std
hlt
ret
lret
clc
call
into
out
rolb
clc
call
aaa
in
out
xlat
jecxz
test
add
sti
lret
loope
orb
shr
xlat
ret
fcmovnbe
ljmp
cmc
ret
std
call
jecxz
test
xor
jmp
out
out
cmp
xchg
xchg
test
xor
orb
xor
xlat
not
stc
lret
test
cmp
mov
ljmp
lret
ss
enter
adc
repz
cli
loope
cld
mov
repnz
in
in
clc
sarb
in
lret
cmp
sbb
aad
loopne
in
mov
repnz
xor
cmc
out
int
fnstsw
in
in
fdivr
cmp
xchg
int
out
jmp
mov
fildll
lret
fucomp
in
shlb
fucomp
in
in
out
call
xchg
jmp
int
xlat
lock
sarl
cmp
aad
sar
lret
cld
mov
adc
rcr
hlt
cmp
int
icebp
bnd
fdiv
cmp
cli
xchg
ljmp
nop
mov
les
cmp
shr
int3
repnz
add
cli
int
stc
ljmp
ljmp
out
neg
cli
testl
incb
iret
repnz
ret
in
iret
neg
lock
fsincos
cmp
aas
test
aam
fsubp
loope
testl
sub
jmp
cmp
cli
cmp
fmul
cmp
cmp
rolb
cld
loopne
in
cs
into
aas
repnz
out
sti
icebp
cld
repnz
out
fprem
jmp
adc
in
out
leave
rol
cmp
repz
cli
out
cli
sar
cmp
xlat
cld
mov
mov
shrl
ret
lock
cmp
cmp
clc
sarb
icebp
fdivp
std
ret
fsub
fisttpl
loope
shll
in
cmp
aad
hlt
fucomp
cmp
aam
cld
cmp
fcmovnu
ret
aam
fcmove
leave
call
ds
cmc
fcmovne
imul
iret
jmp
cmp
cld
fadds
div
fdivrp
enter
int3
std
int3
sub
sar
repz
repnz
aam
jmp
jecxz
aam
xor
jecxz
lret
xchg
aad
xor
aaa
ret
xor
jmp
aad
cmp
mov
cli
out
mov
int3
in
cmp
in
lret
xor
xor
loope
hlt
cmp
rcr
test
ror
or
std
test
into
sub
mov
movzwl
cmp
jmp
lret
rcr
int
orb
mov
sarl
jl
test
out
mov
jmp
call
xor
test
repnz
leave
ds
iret
call
xor
aaa
lock
testl
out
mov
iret
in
clc
xchg
lret
loop
jmp
sti
fsub
cmp
enter
cld
fidivs
iret
mov
out
fucomip
jmp
test
add
shr
not
rcl
cmp
icebp
aam
sar
aam
div
mov
int
loop
or
icebp
mov
icebp
icebp
fcmovnb
cmc
cmp
cmc
cmp
push
loopne
sti
test
rol
faddl
cmc
out
call
xor
fucomip
ss
fcmovbe
repz
movl
shll
not
leave
cmp
out
loope
lret
rolb
cli
fsub
and
ljmp
sarl
cmp
repnz
aam
ret
mov
or
in
mov
sub
cmc
into
ret
out
cmp
xor
ffree
test
and
adcl
in
repz
adc
aam
sarl
or
xchg
fdivr
nop
repz
cmc
imul
ret
clc
leave
rcr
sti
cmp
leave
shl
call
ljmp
xor
repz
rol
xlat
leave
enter
cmp
cmp
std
test
jecxz
lret
fsubrp
xchg
fsubrp
loopne
xor
ss
std
fdivr
lret
neg
lock
stc
loopne
fabs
and
lret
icebp
rcl
stc
cmp
out
in
repz
fstpt
loopne
clc
xchg
roll
xchg
iret
fucom
xchg
int3
xor
xlat
out
shl
repz
div
rcr
adc
lret
cmp
loop
test
ret
call
aad
hlt
ljmp
loopne
fsub
testb
in
rcl
les
cli
cld
fdiv
sbb
faddp
test
fdivr
xchg
cli
push
xor
ret
call
aas
in
loope
aad
sti
inc
ret
jmp
fisttps
out
in
fcompp
aam
in
fcmovnbe
aad
cmp
jecxz
xlat
ffree
lock
fldl2e
ret
lock
sub
in
ss
cmc
fcomip
out
roll
in
cmp
xor
enter
std
xchg
aam
loop
fsub
fst
sti
hlt
ffreep
cmp
fcmovu
repnz
mov
test
lret
shl
into
stc
ret
cmp
ret
aam
jmp
mov
out
test
test
call
out
ror
aad
sarb
clc
xchg
loop
fcom
ljmp
lock
into
loopne
out
enter
fsubr
out
fdivr
fucom
out
lock
jmp
in
out
jecxz
fcmovne
fists
icebp
ss
cli
aas
clc
aad
xor
cld
cld
xchg
clc
std
mov
out
rcr
hlt
repnz
ror
lock
out
in
loopne
roll
ret
in
fcmovbe
cmp
int3
mov
shr
xor
aam
dec
roll
roll
jmp
out
xchg
loope
div
lock
shll
lret
out
in
fld
clc
mov
cmc
jmp
neg
mov
cld
jmp
iret
loopne
stc
cmp
call
xlat
cmp
cld
out
fiadds
mov
int3
jecxz
not
enter
sar
clc
fsubr
cmc
add
in
fsincos
test
lret
into
in
das
cmp
cmc
cld
cli
call
in
aad
icebp
into
repnz
mov
fldpi
lock
in
test
lret
out
xor
rcr
jmp
ret
rcr
loope
std
cmp
mov
leave
rcll
jmp
rcr
jmp
aam
sarl
cmp
mov
sar
fdivr
and
mov
ror
in
xor
out
int3
xlat
fucomi
hlt
out
clc
ds
in
fcmove
xor
test
iret
in
out
sti
jmp
aad
lret
aas
hlt
ds
std
xor
fsubr
leave
loop
jmp
xor
ljmp
ds
fdiv
mul
mov
ljmp
out
fst
mov
movzwl
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
out
iret
out
xor
into
call
cmc
ret
sar
fdiv
repz
decl
ljmp
shl
int3
aaa
les
sar
repz
aam
sar
leave
lret
std
sti
sti
fucomp
out
jmp
shlb
xor
out
bnd
aaa
int
repz
xor
out
ret
iret
nop
in
repnz
out
ds
hlt
cli
int
test
xchg
call
stc
iret
xor
jmp
fcmovnu
shlb
fyl2xp1
clc
shl
icebp
sar
mov
xchg
sub
jmp
lock
std
shr
ds
lret
cmp
shr
fldln2
neg
repnz
mov
mov
test
cld
repnz
xor
xor
fnsave
std
fcmovnu
in
repz
aam
ret
jecxz
jmp
shr
xchg
hlt
fnstcw
repnz
cmp
loope
std
loope
sti
mov
jmp
nop
int
test
aam
int
icebp
clc
cmp
xlat
loope
aas
cmp
fildl
xchg
out
fildll
out
enter
iret
cmc
lret
sarb
xlat
lock
stc
shl
cli
test
sti
jmp
lock
ss
int
in
clc
std
hlt
sarl
ffreep
iret
hlt
into
cli
fildl
iret
loopne
mov
ret
xor
cmp
cmp
shl
ljmp
roll
int3
xchg
and
xor
cs
jmp
shl
sti
aam
aas
shl
testb
mov
fcomi
rol
repz
xor
cmp
cmp
ret
fcmovbe
mov
ds
lret
into
out
and
mov
aad
xor
aad
cmp
inc
sar
rcl
sarl
loope
test
sub
dec
orb
in
sti
divl
aam
fdivr
and
cld
idiv
jecxz
ffree
xchg
iret
icebp
lret
cmc
icebp
ret
sti
int3
fcmovnu
div
hlt
ret
cld
out
test
ljmp
into
rolb
test
repz
ds
hlt
mov
lret
mov
in
out
xor
xor
cmp
aad
shl
icebp
ds
fnstcw
test
xchg
xchg
icebp
repnz
xor
repz
fld
cld
lock
in
sar
xlat
clc
decb
nop
enter
in
leave
enter
aaa
icebp
fyl2x
int3
not
ret
loop
lock
test
or
mov
nop
mov
hlt
ret
ljmp
xchg
std
fdivr
neg
in
ljmp
ret
jmp
ss
clc
out
rcr
fiadds
not
std
test
lock
enter
enter
hlt
loope
sarl
cli
out
int
mov
lock
fucom
lret
loope
shlb
into
fsubr
idivb
cld
stc
fdivr
clc
fiadds
fimull
out
ds
not
cmp
dec
aas
ret
aam
loopne
clc
fstp
jecxz
loop
in
lock
fisttpll
aaa
stc
out
jmp
iret
fcomip
test
fucom
sti
incb
mov
shl
loop
int
cmp
cmp
shl
fimull
lea
fucomip
in
xor
lock
jmp
ror
faddl
fsin
xlat
std
loop
mov
mov
int3
loopne
cmp
cli
lret
out
clc
stc
loop
test
cmc
loopne
roll
mov
jmp
ds
out
aam
sti
sarl
icebp
icebp
repz
enter
test
in
fists
shr
xor
out
cmp
out
lock
loope
ret
flds
fdivp
int
xchg
icebp
shlb
ss
xor
incl
icebp
aam
leave
cli
mov
clc
jecxz
in
or
icebp
aam
shl
xlat
int3
into
clc
enter
fcomp
ret
fcom
xchg
jmp
repz
xlat
aaa
ss
cld
test
jmp
loopne
shl
loopne
mov
ret
fsin
test
xchg
jecxz
into
aad
repnz
fstp
adc
fcmovnu
ljmp
lret
hlt
xchg
das
fscale
sub
mov
jmp
jmp
rcl
rol
fstp
dec
lret
sbb
addb
jl
call
shl
idivl
lret
in
stc
loope
sub
icebp
ss
leave
fstp
fsubr
out
shr
xlat
aas
and
test
mov
cli
fmulp
test
in
xchg
lds
shlb
xlat
cmp
fistpll
sti
icebp
test
sar
leave
mov
ljmp
lret
xor
rcr
leave
xor
std
in
cli
loope
imul
cmp
rorl
mov
shl
aam
fsubr
leave
std
fdivrp
int
xor
aam
xlat
and
leave
loope
mov
mov
ljmp
fidivs
into
sti
sarl
jmp
stc
nop
call
repz
iret
xbegin
icebp
ret
icebp
or
incb
icebp
cld
jmp
aad
ret
out
out
std
cmc
not
cmc
hlt
push
addl
out
fsubrp
lret
cmc
repz
out
out
in
aaa
cmc
clc
fdiv
shl
rcl
lock
xchg
out
lret
jmp
in
shlb
out
xor
cli
out
xor
aam
fnstsw
mov
repnz
into
loope
cmc
lret
lret
call
aad
shr
ret
icebp
out
ror
jecxz
jmp
orl
repz
rolb
fldl
out
loop
cmc
ret
enter
repz
std
idivl
in
frstpm(287
out
std
test
sub
jmp
fsubrp
int3
sub
div
lock
int3
fsubr
cmp
rcr
in
stc
clc
enter
in
xchg
out
out
sti
in
std
fidivrl
icebp
int3
adc
repnz
leave
mov
loope
jecxz
das
sub
xor
shl
lret
cmp
fcomp
loopne
loop
loopne
stc
out
lret
loop
and
loopne
xor
lret
lret
aad
lret
fadds
sti
test
cld
fsubrp
out
rcl
ror
int
lret
aad
lret
ror
fdivr
cmp
clc
sti
jecxz
lret
in
mov
out
jmp
sub
cmp
movb
repnz
repz
out
int
in
leave
mov
jmp
leave
iret
out
imul
in
jmp
in
in
clc
test
mov
int
jecxz
leave
jmp
enter
out
cli
xor
in
clc
loope
loop
fdecstp
in
xchg
int
and
out
out
out
sti
lret
shr
ror
std
shl
test
std
rolb
cld
mov
lret
or
rol
xor
jmp
roll
xchg
std
std
in
lea
lret
fnop
fmul
ss
hlt
hlt
fisttpll
jecxz
xchg
fimuls
out
fcmovnb
icebp
lret
clc
in
shl
ret
aas
shl
cld
and
xlat
fucomip
out
shr
ljmp
shll
out
hlt
in
hlt
cld
xor
cmc
in
mov
in
mov
into
jmp
cmc
clc
loop
xlat
cmp
stc
cli
aam
test
rcr
out
xchg
xlat
leave
ljmp
out
xor
lock
out
cmp
std
ss
aam
stc
rolb
hlt
cld
incl
out
xlat
iret
int
ret
repnz
ror
loope
xchg
loop
shl
ljmp
repz
cmc
aaa
leave
call
into
std
repz
cmp
add
loop
lret
stc
out
call
mov
fmulp
jmp
cmp
int3
call
xchg
testb
cmp
loope
hlt
fcomi
sarb
sti
icebp
test
idiv
jmp
fiadds
fcmove
xorl
shl
xor
jmp
fdivrs
addl
hlt
sub
test
repnz
clc
lock
cmp
not
loopne
jecxz
repnz
call
fldln2
ret
int3
mov
xor
ret
out
xor
clc
shl
rol
stc
hlt
lock
ljmp
mov
test
rcl
cmc
into
jmp
sti
xor
ffreep
test
ds
shl
xlat
out
repnz
sub
cmp
xor
lea
mov
jmp
mov
lret
fnstenv
inc
insl
push
iret
jl
addb
jl
test
fcomip
shl
out
aad
leave
fucomp
int
rcl
in
fcomip
aam
leave
sub
cmp
out
out
in
fnstsw
ret
out
fucomip
ljmp
ljmp
out
ror
lock
lret
rcl
cmc
cmc
jecxz
fiaddl
sbb
loopne
mov
shrl
lock
mov
addl
fadd
addl
ljmp
iret
aam
repz
jecxz
vpmaddwd
leave
mov
iret
mov
mov
repz
xor
icebp
aaa
cmp
out
in
lret
fldl2e
in
hlt
std
sar
shr
hlt
out
fsubr
lock
lret
xor
cmp
sarl
in
cli
shl
aad
jmp
test
lret
out
mov
int
xchg
enter
cli
xor
ljmp
cld
leave
loope
cmc
cli
mov
in
fisttpl
xor
repz
enter
in
cli
aad
ror
out
sti
incl
loop
int
nop
in
cmc
sub
loopne
int3
xor
jmp
xor
hlt
repz
sub
in
rorl
in
jmp
icebp
cs
aam
loopne
repz
cld
sar
int
loopne
iret
repz
in
fcomi
cmp
repz
sbb
stc
aad
mov
in
and
into
or
into
fdivs
shr
cmp
std
cmp
repnz
call
in
ljmp
xor
mul
in
int3
lret
xor
test
shl
ds
stc
stc
clc
mov
mov
stc
sarl
ret
enter
ror
lret
loop
ret
fcomip
ret
in
std
mov
filds
in
loop
enter
cmp
fcomi
stc
out
xchg
les
sar
xchg
subb
enter
clc
enter
clc
lock
cmc
cld
jecxz
repz
test
fst
aad
repnz
call
into
in
sar
cmp
mov
lret
sti
in
fmuls
out
lret
fucomi
lret
xor
sti
loopne
orb
std
loope
xchg
xchg
xor
xor
fsubr
test
fidivrs
shl
fcmovbe
out
out
mul
rcr
or
fpatan
f2xm1
icebp
in
xor
cmp
fst
cmp
out
filds
cli
cmp
cmp
loopne
lock
mov
roll
cld
xchg
sub
enter
cmp
loopne
aam
cli
sti
mov
cld
fcom
cld
in
out
in
sub
leave
das
into
repnz
repz
icebp
fcomip
aas
call
clc
int
xchg
int
iret
in
faddp
ljmp
jmp
int3
cmp
loopne
sti
out
int3
nop
out
mov
nop
out
out
jmp
stc
fdivrs
not
clc
mul
jmp
call
shl
xor
in
fcom
clc
rcr
xlat
ret
xchg
xlat
enter
in
icebp
mov
jecxz
shr
cmp
lret
fmul
lret
sbb
div
clc
rcl
ffreep
xchg
loope
test
rorl
xor
test
repz
fdiv
fsub
ret
clc
call
roll
shr
xor
sti
ss
idivl
loope
loope
sar
jmp
out
in
in
icebp
ljmp
icebp
aaa
out
fdivrp
push
shr
xchg
aad
leave
jecxz
icebp
cld
sti
call
lock
imul
lret
cmp
in
jecxz
repz
aad
test
xchg
lea
xchg
jecxz
jecxz
ror
enter
cmp
aas
rol
frstpm(287
repnz
xchg
ficoms
int3
in
cmp
fcomi
out
repnz
cmc
fsub
xlat
std
loopne
out
xchg
int3
sub
xor
xor
out
loope
aas
jmp
out
ss
fsub
fcmovne
sti
fmul
sub
enter
in
leave
jmp
cld
out
int3
hlt
hlt
add
in
jmp
flds
leave
jecxz
loope
loopne
xor
cli
in
fsubr
rol
icebp
xlat
mov
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
mov
addl
int
xor
out
jmp
fcomp
in
icebp
div
orl
stc
in
in
out
xlat
repnz
fcmovnbe
iret
aam
cmp
clc
loope
fsubr
stc
ljmp
cmc
repnz
repnz
lret
aad
lret
aas
out
inc
aad
mov
mov
ret
jecxz
cmp
cmp
ds
iret
std
addb
fadds
sub
icebp
repnz
jmp
xor
shl
repnz
neg
fsubr
stc
fildl
out
xor
lock
out
into
aas
jmp
out
int
out
cmp
clc
jmp
mov
jecxz
or
fldl
aaa
stc
ljmp
rcl
div
lds
out
ror
ljmp
hlt
fnstenv
cmp
cmp
mul
aam
cmp
mov
int
xchg
aaa
fdivs
aam
cmp
rcr
in
aad
aam
xlat
idiv
leave
in
stc
lret
nop
out
xchg
in
cs
ret
int3
aad
sti
sbb
movl
cld
in
add
shr
in
rol
idiv
aas
xlat
aam
cmp
cld
incb
or
incl
jmp
shr
sar
ret
sti
xchg
jmp
sar
out
icebp
call
ljmp
clc
roll
xchg
repz
xchg
lret
iret
hlt
xor
repz
aaa
stc
shr
call
out
loopne
rol
rol
cli
fildl
into
mov
xor
hlt
ljmp
rcl
xlat
test
in
jecxz
out
ljmp
in
shl
leave
int3
cmp
cmp
ds
fyl2xp1
sti
cmp
fucomi
jmp
orl
hlt
leave
aaa
in
fidivrl
ret
filds
cld
in
fucom
sub
out
iret
xor
rcl
fcmove
lock
cmp
rol
faddp
test
cli
ljmp
jmp
xchg
xor
icebp
xor
jmp
hlt
fidivrl
enter
test
out
shl
ljmp
addl
cmp
clc
rol
cld
xlat
ss
ret
xor
enter
shl
out
fsubr
sar
idiv
icebp
icebp
rcl
test
out
std
lret
xchg
decb
jecxz
enter
clc
fcomi
xor
fucomp
cmp
or
in
orl
cld
int
jmp
cmp
fnstsw
loope
fcmovbe
flds
loop
icebp
sub
fdivr
ret
sti
cmp
stc
ret
testl
test
cmp
lret
jmp
fcom
sarl
test
mov
cmp
cld
div
xor
xor
sarl
fst
fstp
fsubr
test
hlt
into
loop
aam
test
repnz
stc
cmc
jmp
aas
ds
ds
test
enter
std
add
sub
fdivs
in
cmp
xlat
xlat
fadds
aad
xor
cld
int3
shl
aam
fsincos
idiv
jmp
jmp
cmp
lret
in
out
std
fyl2xp1
mov
std
fiadds
shl
xlat
ror
test
std
loopne
sub
fdiv
ret
rcr
test
mov
in
rcl
hlt
lret
sti
in
ljmp
rorl
lret
sbb
std
jecxz
jecxz
call
jmp
frndint
clc
lock
cli
stc
in
xchg
lds
int
cmc
iret
out
lds
std
sar
lock
fucomip
fsqrt
cmp
stc
cld
ljmp
xchg
aam
xlat
jmp
lret
fistpll
in
fstpt
fcom
fsubrp
ret
fnsetpm(287
test
cli
enter
in
orl
vpsrld
clc
ror
fxch
rcl
into
aas
xlat
roll
in
shl
rclb
lret
rcr
out
sbb
cli
aam
mov
pop
add
xor
add
jmp
ret
lret
enter
dec
push
xor
addb
jl
in
fsub
lret
int
ret
jecxz
lock
aad
stc
dec
aad
fcmove
test
std
test
stc
stc
iret
rclb
ss
repz
adc
aad
fdivr
fmul
movb
fimuls
not
ljmp
cmc
xor
testb
int3
popl
aam
ret
xor
clc
call
loope
jecxz
jmp
cld
mov
ffreep
ret
xor
hlt
cld
push
lret
idivl
aad
iret
rcl
jmp
test
mov
ljmp
aad
xlat
shrb
fsqrt
loope
idiv
int3
loope
out
neg
out
iret
fdivr
shl
fucomp
in
sub
clc
ror
in
cmp
fnstcw
lock
loope
cmc
idivl
mov
leave
out
cld
repz
int
cmp
cmp
cmc
iret
ret
sar
imul
jecxz
lret
cli
out
test
fsubr
out
hlt
out
stc
cmc
loope
cmpb
std
out
in
mov
mov
xchg
rol
in
cmp
cli
fdivrp
hlt
fsubrp
test
aam
std
loop
cli
rcr
xchg
jecxz
faddp
xor
in
fcom
cmp
loopne
cmp
repz
loope
cli
mov
mul
call
aad
iret
fcomip
xlat
out
in
jmp
rcr
loope
adcb
out
cmp
call
aad
rcr
in
lret
or
rcl
ljmp
out
test
cmp
iret
fadd
lock
jmp
int3
cld
int
call
call
xor
xor
loopne
jecxz
jecxz
adc
fcomi
cli
enter
iret
mov
fdiv
mov
int
lret
int3
aad
xor
fcmovnb
fnstcw
in
loopne
loop
into
in
not
stc
int
lock
out
stc
test
inc
test
xchg
filds
jmp
xor
cmp
cmp
cmp
loop
rol
loope
imul
cld
ljmp
out
repz
int
fdiv
shl
fcmovnbe
ljmp
rol
clc
addb
xchg
xor
aad
in
jmp
cld
xlat
loop
loopne
call
xlat
fdivr
lret
or
adcb
aad
cmp
stc
ds
aam
loope
fdiv
in
add
addb
jecxz
in
in
icebp
xor
fdiv
sar
aas
fistpll
xor
xlat
ds
jmp
and
hlt
rcl
enter
cmp
out
out
in
cmp
out
or
mul
test
cli
out
aaa
repz
xor
in
shl
icebp
int3
clc
fcmovu
sti
call
adc
fsubp
mov
in
addb
ret
jmp
shl
aam
fcmovu
loopne
out
fst
loopne
out
xchg
stc
mov
in
out
cmc
icebp
xor
in
cmc
xor
call
cmc
cmp
cld
xchg
int3
in
loope
mov
int3
aas
loope
xor
cmc
fnsave
cli
loope
fildl
cmc
imul
leave
out
in
in
mov
test
hlt
shr
ljmp
fdivp
clc
sar
lock
clc
rcl
ret
cmc
mov
test
sub
xor
leave
leave
cld
in
adc
icebp
fiadds
aad
sti
in
std
fmull
int
loop
shl
fbstp
shll
repz
cmp
fcmovne
in
leave
les
int
into
in
in
in
icebp
cmp
cmc
repz
hlt
ret
xlat
xlat
ror
addl
repnz
shr
imul
cmp
out
aam
cmp
vpmaxub
shr
mov
xor
int
lock
iret
cmc
in
idiv
repz
icebp
cli
aas
jmp
call
test
xor
icebp
lock
std
jmp
lret
int3
fneni(8087
stc
call
in
jmp
add
xor
out
aaa
in
into
hlt
enter
cld
jecxz
repnz
xchg
mov
int3
in
fmul
ret
ljmp
bnd
in
clc
mul
mov
xchg
fmulp
add
mov
jmp
ret
aad
lret
enter
out
fidivrl
add
aad
jecxz
aam
loop
jmp
ffree
aaa
ds
fdivr
repz
repz
iret
xchg
repnz
ljmp
loopne,pt
aad
faddp
jecxz
mov
aad
xlat
mov
mov
fcoml
icebp
fucomi
std
lret
stc
loop
ret
aam
orb
into
cld
incb
in
xor
fdiv
xor
loope
cli
clc
lock
into
stc
fcmovnbe
loope
test
mov
jmp
ss
lock
aam
cmc
sti
jecxz
cmp
aas
aad
neg
lret
ljmp
enter
xbegin
loopne
out
repnz
fucom
cli
stc
sar
int3
mov
or
fsub
shll
leave
xbegin
cmp
loopne
cmpb
jmp
cli
int3
mov
repnz
lock
jecxz
xor
fdiv
cmc
icebp
loopne
loopne
shl
cmp
ret
movl
loope
das
lock
rcr
addl
jecxz
cld
enter
sti
mov
lret
ljmp
cli
out
fnstsw
lret
fdivrp
roll
test
rcr
fstp
xchg
out
int3
hlt
xor
jecxz
sar
into
div
out
repz
in
bnd
cli
rcl
std
xchg
repnz
rcl
loop
in
aas
sarb
cld
repnz
incb
ret
loop
icebp
fsubr
shl
out
rcr
in
leave
loop
int
fdivrs
xlat
int3
cld
fsub
fcomi
shl
aad
neg
nop
icebp
lock
xchg
fidivs
out
aad
bnd
out
int
stc
adc
mov
sti
jecxz
icebp
repz
jmp
cmp
aad
loope
int
xlat
cmp
fcomip
mov
sti
stc
fiaddl
aad
lret
in
sti
clc
cmp
fidivrs
ljmp
mov
loope
hlt
loop
clc
mov
ljmp
hlt
xor
cmp
ret
in
shl
and
mov
mov
cld
lret
aaa
aaa
in
enter
loope
ret
std
fcos
test
call
loop
in
xchg
out
shl
in
out
ss
push
or
cli
sbb
sbb
mov
int3
repz
xchg
loope
ret
xor
sti
std
test
loop
faddl
in
out
jmp
call
fsubr
cmc
into
std
loope
iret
rcr
fmul
cld
rcl
in
shr
sub
sub
lds
cmc
rcl
out
repz
aad
call
xlat
fiadds
in
cmp
jmp
in
cmp
shl
addl
fucomip
xchg
xor
in
aam
fdiv
hlt
sub
fidivrl
decb
int3
in
or
enter
aaa
jmp
sub
cld
ss
aam
in
cld
cmp
or
int
jecxz
loopne
xor
ljmp
int
fcmovnb
fdivrp
cli
rcr
lret
nop
add
icebp
repnz
jmp
ljmp
mov
into
in
addb
rol
lock
imul
aas
out
in
or
sti
xchg
ds
jecxz
xchg
jmp
iret
fstp
int
enter
ret
sti
sti
cmc
ljmp
call
cmp
fucomip
addl
cmp
cmp
out
aad
roll
test
jmp
out
shr
repz
sti
cmp
xor
int
ret
sbb
in
sti
clc
sti
out
mov
mov
cld
cmc
rol
ret
jmp
xor
sti
xor
and
xlat
loop
jecxz
test
clc
fmul
loop
xchg
mov
xchg
xor
ror
lret
sub
int3
out
shr
stc
cmp
ret
aad
fadd
in
cli
mov
int
leave
std
test
ret
fnop
lock
ljmp
std
les
fmul
icebp
out
mov
jmp
cmp
cmp
ljmp
ret
loop
movb
ret
xor
lock
ret
aad
cmp
shl
loop
xlat
idiv
mov
movl
xor
mov
xor
add
jmp
rol
rcr
jbe
fsubl
ror
and
jl
add
ret
dec
sar
aas
cmc
stc
ffreep
call
lret
sti
iret
jmp
jecxz
int
lret
cmp
fnop
in
in
aam
jecxz
xlat
in
popl
in
repz
icebp
cs
fidivrl
leave
aad
cmp
ffreep
out
cld
mov
fsubrp
iret
out
or
ds
fdivs
lock
cmp
repz
fldl
jecxz
fists
out
xlat
fxch
ds
lret
ds
xchg
enter
and
out
xor
leave
lds
fmulp
ds
iret
sar
ret
in
xlat
iret
flds
aam
test
int3
out
cli
in
lock
aam
ret
out
out
loop
in
loope
int3
loope
test
shlb
fucomp
fcmove
ds
rcl
int3
fabs
neg
lock
and
loopne
repz
xchg
jecxz
cmc
rol
fldpi
iret
iret
fdivr
xlat
fld
test
rorl
out
fsubr
into
xchg
xlat
rcl
cli
lret
aaa
in
repz
fst
aas
rcr
rcr
ds
out
enter
xchg
mov
out
in
cli
idivl
out
cli
hlt
sub
test
aam
fstp
iret
xchg
shl
aad
cmp
out
std
loopne
int3
loopne
rcr
test
fimuls
sti
xchg
xchg
xor
int
lret
out
std
lds
test
test
xor
das
rcl
out
shlb
cmp
out
out
lret
and
cmp
out
xchg
mov
mov
in
ss
ljmp
rcl
loopne
xchg
in
lret
fcomp
rol
into
xorb
in
out
into
lret
idivl
cmp
xor
add
call
lret
iret
in
ljmp
in
ljmp
ss
hlt
mov
cmc
int3
orl
div
aam
cmp
jmp
cmp
cmp
testl
test
xor
in
fbstp
rol
test
ret
aam
xlat
fmull
in
jmp
call
repz
sub
repz
jmp
enter
cld
in
test
rcl
xor
in
int
cmp
not
cmp
jmp
jecxz
ljmp
out
loope
stc
in
repz
sarb
hlt
test
sarb
fst
loopne
out
loope
sar
int
shr
test
hlt
into
call
cmp
aas
sti
aad
test
stc
sub
int3
in
aaa
into
int
hlt
cli
jmp
fnsave
stc
rcl
ret
mul
leave
fcom
rorb
shl
iret
int
rcr
aam
fst
in
les
fsubr
leave
into
mov
loopne
iret
aad
out
out
leave
int
out
cli
loopne
cmp
xchg
sar
cli
test
mov
jecxz
lret
clc
xor
jmp
clc
fldl
and
enter
icebp
mov
aam
fcomi
neg
out
cmp
out
aad
stc
fdivrp
hlt
fiaddl
int
xchg
rclb
shl
repz
stc
clc
cmp
xchg
out
out
test
out
rol
int3
lret
icebp
fcmovu
testb
rcr
in
test
ljmp
cmp
sbb
cmp
in
int3
cli
xchg
iret
out
lret
icebp
jecxz
repz
cld
fcmovnu
sbb
mov
fcoml
call
leave
aad
repz
cmc
std
lock
in
cld
repnz
jmp
enter
jmp
loope
icebp
roll
clc
xor
shlb
cmc
cld
out
jmp
int3
lret
jmp
ss
lret
xlat
loop
std
fcmovnu
fucomi
xlat
mov
call
int
xchg
ret
xor
cmp
cmp
fdivr
lret
xlat
iret
cli
fcomip
inc
rcr
vpcomb
test
ljmp
add
test
cmp
add
clc
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
adc
jl
add
sub
idiv
std
ret
hlt
in
in
cld
lock
ror
hlt
lret
sar
roll
cmp
xchg
out
in
ror
lea
in
cmc
clc
iret
cmp
fcmovne
sti
ds
cli
out
shr
mov
test
test
shll
aaa
stc
shl
enter
lret
in
repz
xor
rcr
in
ror
nop
iret
loope
jecxz
jmp
ss
in
ss
fcmovnbe
lret
repz
fcmovnbe
clc
sub
fcomp
in
in
leave
cld
shrb
cmc
aaa
xor
lret
lret
fcom
cmp
icebp
icebp
loope
shl
jmp
loop
lret
mov
ret
xlat
into
fcmovne
xlat
icebp
sti
int
rcr
xor
test
jmp
cli
leave
mov
imul
icebp
out
repnz
ret
shl
cmp
ror
ljmp
ljmp
lret
out
int
out
fprem
xor
aaa
sub
aas
cmp
jmp
fcmovnb
test
xchg
int
shrl
lret
repnz
loope
lock
aam
shl
sbb
xlat
ljmp
xchg
aad
shr
loop
xor
xor
out
cmp
fdivr
hlt
loop
loop
jecxz
out
jmp
icebp
sub
rcl
ret
ljmp
stc
cmp
cli
faddp
aam
flds
and
sub
out
xor
fidivrl
stc
roll
loop
in
xchg
in
in
xchg
xchg
repz
rcl
sub
stc
into
adc
aam
rcl
enter
std
cmp
sub
leave
lret
hlt
out
std
faddp
lock
icebp
mov
fldl
cld
out
icebp
fucomp
aam
sub
clc
in
lds
rcl
loop
aas
rcr
call
mov
in
loop
jecxz
mov
sub
jecxz
ljmp
lock
orl
cld
jmp
mul
cmp
cmc
cmp
sti
out
call
loope
fidivrs
sti
idiv
mov
iret
loopne
leave
cs
cli
lock
cli
cmc
jecxz
ret
fcmovne
ret
loope
incl
ret
cmp
xlat
cli
cld
fsubp
in
repnz
xlat
out
adc
mov
jecxz
std
into
xchg
sub
stc
lock
das
clc
std
cli
fcompp
div
aaa
iret
test
cli
roll
mov
into
xor
xchg
repnz
sarl
loope
jecxz
out
test
cli
cmp
in
add
iret
lock
lret
xchg
ds
test
mov
ds
idiv
cmp
ds
jecxz
mov
xor
ss
xor
out
out
rcr
aad
ds
lds
mov
test
fucomip
out
fptan
sti
loop
std
rolb
in
std
fisttpl
ficoml
hlt
les
xor
xor
ss
cmp
xlat
xlat
shl
les
int
adc
loop
shl
out
cmp
test
in
ret
xrelease
out
cli
loopne
xchg
aam
aad
ss
cmp
cmp
ss
fcmovb
loop
in
xchg
xor
or
int3
jmp
aad
ds
cmp
loop
xor
cmp
or
std
add
int
cld
hlt
xchg
xor
aad
fstp
lock
lret
cmc
icebp
aam
icebp
testb
lret
repnz
lret
sti
into
stc
repnz
cmp
std
ret
xchg
leave
loop
xchg
fildll
sub
enter
ret
out
testl
jmp
test
in
fldcw
out
stc
jmp
idivb
jecxz
clc
cmc
aad
int
mov
enter
sub
fsub
not
idivl
int3
fdivr
cmp
cld
fxtract
cmc
enter
test
loopne
fists
xor
enter
jmp
aad
neg
addl
ret
in
int3
in
jecxz
hlt
rcl
jmp
xlat
shr
cmc
int3
sti
aas
ret
cmp
in
cmp
mov
fsubrp
leave
aaa
leave
xor
xor
aaa
cld
fmul
rol
cld
rorl
add
int
xlat
int3
int
cmc
or
idivb
lods
sarl
add
std
xor
test
out
cld
fdivp
jmp
fsqrt
in
int
xlat
cli
aam
fcomp
imul
xchg
fisttps
ret
xor
ss
lret
ds
int
icebp
ret
cmp
mov
cmc
hlt
mov
lret
xchg
in
test
int3
shll
fxch
cmp
leave
into
fcmovu
cmp
jmp
aad
fcmovu
std
fiadds
stc
rol
hlt
lock
jmp
test
ds
in
addl
xor
loop
clc
in
jmp
jmp
repz
test
les
orb
aad
cmp
cmp
int
cmp
ret
lds
call
fmul
iret
mov
iret
out
cmp
fnstcw
shl
cmp
test
ret
mul
aad
mov
mov
cld
xchg
xchg
sub
lock
enter
fldln2
cmc
sar
ljmp
fimull
std
incl
out
xlat
out
ljmp
aad
ret
rcr
and
xlat
cld
mov
lret
cli
filds
sub
shll
out
xor
aad
enter
lock
rcl
loop
lret
out
test
fcmovne
fldl
iret
fxch
cmc
xlat
iret
shl
into
fsub
rcr
mov
enter
mov
xchg
jecxz
mov
sub
stc
shr
out
in
cmp
icebp
cld
rcr
repnz
shl
cli
ret
jmp
mov
decb
xor
leave
xlat
cld
fiaddl
ror
test
imul
xchg
out
fstp
nop
out
shll
imul
xor
xor
hlt
out
rcr
jecxz
lock
loope
out
sub
test
out
xor
ret
out
jmp
vcvttpd2dq
xlat
aad
incl
into
loope
nop
sub
enter
repz
repnz
hlt
ret
stc
rol
addl
orl
fcmovnu
out
cmp
cmp
aam
mul
call
fimull
std
mov
call
ror
int3
jmp
repnz
loope
loop
out
iret
icebp
test
in
int3
loope
leave
sti
in
icebp
ror
leave
sar
clc
fdivr
loope
sar
fimuls
std
cld
xor
cs
hlt
out
lret
repz
div
fdivrl
sti
in
sti
imul
testb
cmc
int3
int
lret
fstpt
fildl
rcr
icebp
rcr
out
cli
std
shl
orb
ret
xor
sar
in
loope
jecxz
loop
shl
in
in
into
out
fmull
icebp
xor
clc
cmp
neg
cli
fidivrs
jecxz,pt
aam
loopne
fcmovu
mov
shr
iret
in
in
loope
xor
out
fdivl
shr
cmp
aas
sti
aas
rcl
cmc
test
nop
xchg
cli
xchg
int
xor
in
lock
out
test
cmp
icebp
rolb
jecxz
addb
xchg
loopne
ljmp
repnz
jmp
sti
push
rolb
lret
out
test
lock
mul
lock
shr
fsubr
shl
add
aam
int3
mov
lret
xchg
xor
ret
leave
cmp
sti
ret
sbb
xlat
ret
ret
stc
test
icebp
repz
in
xor
int
test
not
test
std
icebp
icebp
fcmovu
cld
lret
call
xor
enter
sub
xlat
lock
aam
lds
lock
loopne
lret
fsubrs
in
cmp
fisttpll
mov
lret
leave
mov
xchg
repnz
loope
fldlg2
lret
iret
fcom
cmc
cli
addl
in
ljmp
enter
rcl
fcom
shr
aam
xlat
sbb
fsin
mov
jmp
icebp
mov
into
hlt
icebp
lret
fcmove
sti
xor
loop
xlat
loope
jmp
sti
cld
fcmove
nop
int3
xchg
xchg
lret
aam
loop
clc
enter
loopne
in
fsincos
jecxz
call
fimull
test
out
cmp
fstpt
adc
idiv
fsub
loope
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
push
fdivs
adc
jl
addb
jl
mov
mov
in
bnd
sarl
fcmovb
fcmovnbe
xor
aaa
cmp
lock
fnstsw
xchg
xchg
std
cli
shr
call
loop
rcl
ror
repz
testb
test
test
sti
shl
in
aad
xor
xlat
int
ror
stc
ds
fsubp
and
xchg
lock
shr
rcl
cs
sti
fadd
in
fiaddl
shl
loop
xor
fcmovnu
mov
loopne
into
ror
lret
fsubr
clc
in
fst
int3
neg
repnz
cld
cli
mov
les
mov
aas
aaa
xor
rcl
sarb
xor
fidivrl
rolb
lret
in
ret
jmp
enter
repnz
fld
cmp
mov
stc
sub
xchg
aam
in
shl
sar
int
loope
loop
hlt
out
clc
hlt
hlt
loope
loop
out
fucomi
out
icebp
ret
cmc
repnz
cli
fcmovu
sbb
loop
loopne
ds
in
fmuls
rcr
jmp
int
shl
imul
xlat
cmp
fmulp
hlt
mov
std
mov
clc
addl
ret
xor
int
fcmovnu
cmp
in
test
fcmovnb
repnz
repnz
cli
in
mov
or
test
out
lret
xor
stc
cmc
fchs
out
in
in
loope
sti
in
int3
std
in
out
in
out
rcl
out
iret
cmp
cmp
aam
cld
in
shl
call
out
out
in
in
xchg
test
iret
lret
enter
clc
cld
fcmovu
into
aam
int
loope
jecxz
mov
sar
fldl
enter
cmp
xor
call
xlat
cmp
test
stc
and
repz
call
in
enter
fxtract
leave
cli
aam
ffreep
incb
int3
fsub
in
ficoml
cmc
jmp
icebp
int
in
icebp
hlt
cmp
repz
in
mov
sti
in
in
in
lret
out
sbb
ret
xor
hlt
cmp
frndint
cmp
xbegin
aad
jecxz
cmc
cmp
xor
out
cld
icebp
out
int3
cmp
aad
ret
cld
jmp
test
roll
into
in
loope
lret
xor
aam
icebp
stc
mov
loop
mov
enter
sti
lret
xchg
xor
loop
call
repnz
cmp
sti
loop
neg
flds
call
ljmp
out
shr
clc
cmc
rcl
iret
loop
not
test
roll
leave
out
repz
shr
cmp
cmp
test
repnz
cli
aad
xor
rcl
stc
clc
out
rolb
loope
in
in
addb
test
in
fprem1
rcl
fcomi
cld
lret
loope
loope
aaa
hlt
in
cmc
orl
enter
orb
xor
sarl
fdiv
cmp
dec
incb
xchg
and
cli
fcmovne
in
out
sub
jmp
icebp
lret
xor
std
xor
cmp
ret
in
enter
jmp
jecxz
enter
ljmp
in
aad
fcomi
in
cld
and
repnz
fcmovbe
in
xchg
fildl
out
xor
cmp
xor
cmp
idiv
lret
roll
frndint
fldl
call
cmc
lret
cmp
idiv
incl
jecxz
rcl
fsub
cmp
xchg
in
out
hlt
loopne
shl
out
sar
xlat
fst
int
aam
xchg
test
icebp
fsub
orl
jmp
cmp
out
icebp
cmp
cmp
testb
out
out
repnz
fsubrp
cmc
xor
xlat
shll
xor
in
ror
ror
fmul
cld
out
test
ret
ljmp
enter
repz
sar
sti
jmp
shl
jecxz
xchg
call
icebp
and
call
out
in
clc
aam
sarb
not
cmp
div
fisttpl
loopne
loop
and
sub
cmp
aam
ds
cli
cmc
lock
cli
lret
hlt
lret
out
clc
add
jmp
ror
int
fcmove
mov
push
insl
pop
stos
out
cwtl
repz
addb
jl
jmp
in
lret
jmp
cmc
shl
aas
aas
in
jmp
clc
lret
out
xchg
nop
enter
out
fcmovnbe
cmp
shl
lret
cmp
loop
jecxz
roll
sti
jecxz
addl
int
cli
xor
in
sbb
loope
neg
fnstsw
ljmp
xchg
out
hlt
xchg
mov
repz
fldl2e
loope
repz
out
int
mov
out
in
int
xor
ret
fstpt
xor
jmp
ljmp
sar
xor
fstp
in
call
iret
cs
aaa
xlat
enter
xlat
jecxz
jmp
iret
mov
in
xchg
vpsubb
leave
xor
xor
fadd
repnz
mov
loope
lea
jmp
xor
in
aad
int
repz
loopne
cmp
clc
adc
mov
lret
loop
jmp
aas
lret
hlt
out
out
fcom
cmp
cmp
loope
lock
repnz
test
sti
fsubr
cli
out
lret
xlat
cmp
iret
cmp
cmp
cmp
cld
loop
stc
fmuls
decb
das
lret
int3
cmp
aas
stc
ljmp
and
out
mov
call
rcr
ss
sti
cmp
xlat
loop
xor
out
cmp
xchg
int3
fldl
aad
in
cmc
fcmovu
int3
hlt
cmp
iret
test
sti
cmp
shl
hlt
pop
fucomp
xchg
rolb
xor
jmp
xlat
sarl
cmp
rcr
std
flds
jmp
xchg
call
cs
in
aaa
hlt
cmp
call
cmp
test
addl
rclb
clc
cmp
cmc
lret
ds
add
fildl
testl
in
in
repnz
cmc
into
lret
neg
into
addl
fmul
stc
xlat
call
out
addb
int3
stc
shr
aas
fcom
out
idiv
in
aad
lea
mov
div
cmp
in
fst
int3
iret
cli
aam
loope
sbb
fucom
test
call
xor
imul
lock
fxtract
test
jmp
sti
shl
and
rol
lock
roll
repnz
shr
aam
in
mov
fdivr
int
out
xlat
shll
cmp
sti
cmc
clc
hlt
sub
test
jmp
xchg
out
in
in
stc
cmc
lret
cmp
hlt
fcmovbe
loopne
in
ret
jecxz
loop
fdivrp
sub
xor
xor
fldpi
xor
repnz
cmp
iret
cli
lock
fdivp
cli
jmp
repnz
into
lret
fidivrl
shl
out
jecxz
sti
hlt
xchg
fdivr
incb
xchg
sub
int
loop
int3
clc
imul
int
aas
jmp
mov
loope
out
fcmovbe
nop
shl
shr
les
clc
fsqrt
cmp
std
aad
idiv
jecxz
mov
and
jmp
xchg
shlb
ret
lret
lret
lret
ffree
loope
std
cli
roll
shl
lret
loopne
xchg
ficoml
ret
call
enter
fcmovu
aam
out
fadd
ljmp
loopne
sbb
jecxz
fnop
out
fdivrl
sti
ffreep
aam
stc
sar
fildl
fadds
out
xlat
shl
lock
cmp
cmp
cld
sub
ret
in
mov
loop
ds
fcomp
cmp
lret
repz
decb
test
loopne
in
out
out
xor
in
leave
in
fucomp
neg
xlat
std
ret
rol
jmp
into
mov
iret
or
imul
xlat
jmp
fnstsw
in
fiaddl
ret
xchg
jecxz
in
out
xlat
repnz
xor
repz
aaa
ror
in
cmp
call
xchg
shl
xchg
out
into
out
aam
cli
aas
ror
shl
cmp
aam
icebp
fucom
sti
loopne
clc
leave
into
and
out
fcoml
je
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
repz
idivb
add
sar
jmp
rcl
aaa
shr
addl
stc
into
xchg
int
sub
in
xor
out
in
cmp
sar
loope,pt
repnz
loope
mov
into
xor
cmc
cmc
fstpt
ljmp
ds
ret
adc
enter
mov
cld
cli
out
lret
test
loope
shr
ror
lock
fcmovnbe
into
sti
cli
lock
fucomi
out
int3
cmc
lret
in
cmp
das
enter
cmp
out
xchg
lock
out
les
rorb
xor
aas
cmp
adc
cmp
fadd
loopne
in
ljmp
out
repnz
rcl
clc
cmc
add
fdivp
fadds
loop
mov
test
ds
xor
sub
aad
out
fucomip
icebp
fcmovnbe
cmp
rol
in
in
mov
xchg
std
repz
aad
jmp
xor
incb
test
rorb
icebp
ljmp
lret
xor
stc
clc
lret
fsubrp
shr
icebp
ret
fcmovb
ljmp
xchg
out
ror
clc
idiv
jmp
int3
icebp
jmp
out
xor
mov
hlt
lret
out
fcoml
loop
repz
ret
lret
ss
ljmp
fdiv
xchg
sti
jmp
int
mov
in
cs
lret
repz
cmp
or
cli
into
adc
mov
xchg
lret
push
out
xchg
jmp
call
repnz
jmp
out
into
lock
imulb
das
xor
cmp
loope
cld
loop
repz
in
out
int3
cli
jmp
in
rorl
out
out
out
jmp
shr
in
in
cmp
rcr
out
out
std
clc
rorl
loop
iret
int
shr
xor
shll
sbb
in
test
rolb
in
out
int3
clc
repz
cmp
cmp
in
loop
lret
lret
ret
out
xor
out
cmp
sti
out
fucom
fidivrs
ret
test
aad
fdivp
mov
nop
rcll
xor
cmp
out
into
aad
ljmp
fadd
lret
xchg
leave
jmp
test
xor
cs
cmp
idiv
xor
sarl
aad
call
ret
cld
mul
jmp
xchg
test
cs
lock
sar
leave
fucomi
in
hlt
sti
mul
in
test
les
add
mov
xor
repnz
leave
fiaddl
cmp
adc
cli
fadd
cld
jecxz
loopne
enter
mov
out
test
call
clc
iret
ret
idivb
fildl
mul
mov
shl
ror
aam
call
in
shl
lock
aas
fcmovnu
in
mov
in
lock
in
ret
in
lret
cmp
repnz
test
incb
out
leave
cli
fdivr
int3
in
ljmp
int
xor
ds
in
out
icebp
ret
in
xor
stc
addb
in
int3
aam
pushl
cmc
inc
int
repz
aad
std
fmull
fucomip
fimull
xor
in
idivl
loope
addb
lds
jmp
out
cld
xchg
ljmp
stc
in
lret
out
loopne
shl
repz
mov
ret
fcmovnu
in
int
aad
shrb
lret
xor
loop
stc
sar
cmp
jmp
cld
orb
adc
in
idivl
jmp
iret
cmc
fcomi
ret
cmp
cld
shl
decb
rorb
out
repnz
call
lret
cmp
adc
xchg
faddl
mov
aam
xor
cli
fcmove
std
in
ret
sarb
xchg
call
ljmp
int
in
int3
fxch
iret
icebp
sti
fldl
mov
out
or
in
repz
repnz
fcomi
sarl
out
addb
jmp
leave
int
icebp
in
bnd
hlt
aad
mov
add
mov
jmp
leave
iret
xlat
rcr
flds
cwtl
pop
dec
imul
mov
addb
jl
int
out
sar
aas
loop
aas
cli
in
mov
rcll
loope
xor
cmp
not
icebp
fucomp
hlt
fst
out
xchg
xchg
xlat
enter
loope
xchg
out
fmul
aaa
ss
enter
cmp
sar
out
call
clc
loopne
jecxz
xchg
cmc
loope
jmp
cmp
sar
std
or
bnd
sub
enter
mov
loopne
in
ret
jmp
cmp
sub
ds
fiadds
mov
xor
out
in
mov
shl
call
cmp
fneni(8087
ljmp
fisttpl
xchg
int
xchg
ret
lock
in
cmp
repz
clc
mov
mov
repnz
stc
enter
ror
fidivrs
cld
clc
fucom
neg
test
std
ret
fucom
ljmp
stc
shr
enter
hlt
xlat
loopne
cmp
repnz
fdecstp
xlat
loopne
in
clc
or
xor
rol
call
call
hlt
sti
addl
out
fmull
rol
cli
int
sti
cmc
repz
roll
mov
loope
mov
xchg
out
faddl
ljmp
jmp
addl
xchg
in
iret
iret
call
aas
cld
fadd
aas
fdivrp
lock
xlat
xor
mov
iret
test
lock
in
idivb
ret
rcl
fcomp
iret
cmp
fcomp
mul
xor
ret
mov
stc
out
and
xchg
xchg
jmp
cmc
in
aaa
cmp
iret
ror
repnz
mov
out
jecxz
in
nop
nop
out
lock
hlt
sub
jmp
enter
aad
aad
aas
fcmovnb
roll
mov
lock
jmp
cmc
jmp
cmp
fnstenv
in
in
rcl
fdivr
out
out
stc
lock
xchg
ret
hlt
not
lret
filds
addb
test
loope
hlt
cs
ret
in
cli
lret
std
imul
cmp
hlt
loopne
mov
sub
xchg
aad
xor
cmp
in
repz
repz
test
out
popl
out
lret
xlat
xor
cmp
cmp
int3
and
jecxz
sti
fchs
in
icebp
lret
shll
xor
lret
fcmovbe
lret
aad
ret
test
shl
test
fucomi
jmp
mov
in
call
xor
into
in
cmp
loop
addl
mov
jmp
cmc
sub
cmc
aad
repnz
fnop
test
bnd
out
lret
xchg
mov
mov
cmc
jmp
xlat
lret
aad
aam
fcmovnbe
shl
icebp
test
xchg
out
sub
iret
in
cs
lret
lret
xor
repz
xor
fucomp
out
ror
clc
mul
mul
jecxz
jecxz
xchg
icebp
aaa
ljmp
fucomp
fstp
int3
ret
fdivrl
idiv
fmul
cli
in
or
in
fcmovu
rorl
out
int3
out
in
cmp
fcmove
cli
ret
les
out
sti
fdivrp
fcmove
out
xor
hlt
xor
ret
int
fidivrl
div
shl
testb
or
xchg
repnz
jmp
sar
repnz
test
ret
addb
fldl
loopne
jmp
fnstcw
jmp
fldl
leave
mov
fsubrp
icebp
std
out
mov
std
out
in
int
lock
ss
repnz
idiv
rolb
in
out
out
test
into
jecxz
sti
in
cmp
jmp
std
ror
idivl
cmp
adc
ds
orl
in
xor
leave
cmp
hlt
sarb
fdivrs
lock
cmp
cmp
int
aam
xor
loopne
enter
cmp
fidivrl
aas
stc
in
shr
cld
xor
ljmp
sub
in
cmp
neg
stc
loope
sti
jmp
cmp
aam
cld
lock
fsub
lret
jmp
in
xchg
rol
test
xor
cld
ljmp
mov
jmp
leave
int
int
int
mov
aam
jns
fsubrs
cmpl
stc
fucom
out
cmc
loop
mov
loop
std
enter
in
jmp
fucom
cld
cmc
loopne
shl
loop
ret
cmp
fucomi
lret
cld
cld
std
nop
xor
cs
xlat
cmp
repz
sar
out
out
fmul
loopne
out
mov
aaa
repnz
aad
lret
fdivl
roll
clc
aad
aam
ror
aad
sub
sub
hlt
xor
int3
ljmp
out
std
testb
loope
iret
xor
das
shl
cmp
jmp
clc
ds
cmp
div
ds
testb
iret
loop
xor
jmp
repnz
sti
ljmp
fchs
fsubr
loope
test
loopne
int
out
shl
lock
aaa
in
leave
iret
xor
stc
aas
cmp
mul
cmp
fsub
fcmovne
call
adc
in
out
out
cli
sar
cmp
fprem
xor
fiaddl
ftst
enter
lret
stc
sar
fld
ss
into
rol
in
xchg
sbb
mov
test
in
in
cmc
aaa
sarl
repnz
cmc
loopne
xor
rcl
fiaddl
orb
call
into
in
lret
loopne
cmp
std
fdivr
repnz
stc
xlat
jecxz
dec
out
shr
xor
cmp
shl
hlt
in
fnsave
call
in
stc
ftst
repnz
rol
in
out
aaa
fcmovbe
cmp
xor
stc
rolb
mov
fucomip
rcr
in
mov
loopne
ret
leave
aam
lock
xchg
clc
loop
mov
sub
loope
ljmp
std
aaa
out
cld
aad
bnd
sarb
fcmovnu
clc
in
xchg
addl
xor
aaa
int
stc
stc
fcmove
cmp
aad
cld
call
test
in
loop
xchg
std
out
ret
call
iret
ror
fcomi
cmp
ret
cli
in
clc
call
or
lock
iret
cmp
repnz
xchg
fmul
mov
loopne
out
shl
sub
shlb
in
leave
fdivr
sti
int
cmp
in
testb
in
and
aad
xor
ss
cmp
cmp
icebp
shl
iret
icebp
mov
out
in
xchg
loope
in
in
xchg
jecxz
call
shl
hlt
cli
in
sti
jecxz
cmpl
hlt
shl
rol
xchg
cli
test
xor
fdivr
xor
rcr
lret
std
clc
mov
out
in
int3
xchg
call
out
repz
into
hlt
shl
test
xchg
fsub
in
std
addb
stc
leave
aam
jmp
std
ss
test
xchg
leave
rol
loope
in
cli
cmp
lret
jecxz
aam
clc
fcmovu
fsubr
out
lds
fadd
xlat
fsubr
loop
hlt
dec
and
repnz
test
xor
fsubr
loope
in
cmc
in
hlt
loope
clc
in
lock
mov
push
loopne
xor
aaa
xor
sti
stc
rcr
aad
clc
jecxz
cli
cmp
roll
fimull
repz
rcr
icebp
xor
fsub
ds
loopne
sti
out
mov
or
in
cmp
lret
fcmovu
repz
cld
into
fcmovnb
clc
repz
call
mov
in
iret
iret
out
jmp
loope
lret
loope
rcr
shr
std
out
mov
rol
nop
sbb
rol
xor
cli
int3
not
lock
repnz
aam
mov
out
mov
into
iret
shll
cs
int
int3
int
out
sti
stc
sti
loopne
cmc
out
cli
in
neg
fdiv
jmp
repnz
out
cmc
fcmovnu
fcmovnb
shll
ljmp
test
in
int
leave
test
in
xchg
xchg
jmp
jmp
cmc
aas
jmp
and
xlat
loope
adc
lret
cmc
xor
lret
ljmp
rcl
test
jecxz
adc
xchg
iret
jecxz
call
rcl
enter
clc
test
cmc
incl
sahf
add
add
aad
leave
lret
fstp
aad
mov
cli
aad
test
add
in
orb
xchg
ljmp
int
int
xlat
lret
into
lock
fcmovb
mov
fucomi
loop
out
nop
sar
call
fdivs
aas
rcl
xlat
cld
stc
loope
push
sbb
jmp
xchg
and
xchg
xor
loop
cmp
aaa
xor
shl
cld
sbb
fnclex
mov
ficoml
loop
aad
fnstenv
aas
shr
int
ret
cld
rcl
test
lret
in
in
imull
jecxz
cs
iret
aam
cmp
in
jmp
in
ret
ret
mov
in
stc
out
cld
enter
shl
xor
repnz
ds
in
sbb
imul
mov
lret
iret
xchg
stc
ljmp
clc
fcmove
rcr
sbb
loopne
repnz
int3
test
xor
rcr
fcomi
aaa
repz
enter
les
repnz
icebp
mov
mov
leave
out
repz
in
cmp
into
fiadds
ret
sti
sbb
fsubp
sti
loopne
loope
ds
hlt
cli
cmp
std
repnz
cmp
xlat
imul
ret
xchg
fdivrp
jmp
out
lock
rol
lret
cmp
repz
fildl
incl
jecxz
leave
cld
addb
not
cmp
fidivrl
xor
aas
jmp
mov
mov
ret
out
loop
in
jmp
out
aad
fmul
out
cli
fistpll
cld
stc
in
fabs
hlt
in
jmp
aam
xor
jmp
clc
repz
cld
fdivr
jmp
xchg
testb
jmp
xor
shl
fscale
jmp
ss
cmp
div
clc
xchg
rcr
in
xchg
loop
shl
roll
int
sti
jmp
clc
cmc
fdiv
call
loop
fst
test
mov
in
mov
enter
mov
xor
cmc
cmp
into
cmp
jmp
in
repz
jmp
inc
test
loope
cmc
out
out
stc
jmp
cmp
ss
cld
out
div
fcmovne
jmp
enter
test
out
jecxz
xor
call
xor
repnz
cmc
ret
clc
loopne
fsubr
fucomip
call
jecxz
stc
ljmp
out
neg
std
std
ljmp
mov
mov
aad
lret
xor
in
call
in
aad
into
imul
mov
rcr
enter
in
ror
call
cli
enter
fildl
repz
test
mov
in
out
shr
out
in
into
jecxz
loope
aam
fadds
fstl
xor
leave
cmp
divb
xor
stc
lock
hlt
cmp
in
cld
decl
repnz
sti
jmp
jmp
sar
cmp
inc
xchg
leave
mov
stc
xor
xor
in
repz
not
clc
loopne
test
rcr
jecxz
std
jecxz
jmp
sti
test
icebp
int3
ror
lret
call
clc
sar
fdivr
dec
loop
mov
sar
iret
xchg
test
ret
hlt
aaa
ror
xlat
shr
cmp
fsub
cmp
mov
out
ljmp
shl
xorl
in
jmp
lret
cmp
in
out
cmp
jecxz
aam
sti
ljmp
and
shlb
ss
cmc
cmc
out
in
cli
or
cmp
xlat
div
cmp
loope
shr
jmp
jmp
into
iret
sti
lock
fucomip
lret
cld
cld
cmp
rcr
xchg
jecxz
xchg
xchg
dec
call
ror
out
xor
cmc
ds
ss
in
adc
addb
repz
out
iret
hlt
cmp
in
stc
sar
jecxz
rcr
cmpl
repz
lds
cli
repz
ror
ret
aam
ss
stc
cli
ret
into
fcmovu
ds
loopne
ftst
orb
fdiv
hlt
xor
in
call
repnz
test
loop
aam
ret
in
ret
nop
xchg
aas
aam
not
fdivr
out
clc
ljmp
fst
cld
call
xchg
mov
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
jl
mov
add
lock
out
shlb
lret
not
in
cld
test
cmp
test
xchg
jecxz
call
shr
cmp
cld
loope
aas
cmp
lock
mov
std
ret
std
loop
test
mov
xor
aam
in
out
fcmovnb
cmp
hlt
repnz
cld
xchg
and
lret
loop
lret
xor
sti
loop
out
repz
iret
fcomp
cli
aad
rcr
fstp
enter
fsubp
cld
popl
sub
ret
mov
repnz
xor
mov
xlat
int3
call
out
xchg
aam
xor
int3
lock
call
repnz
ds
ret
and
cld
loop
enter
aaa
xor
xor
int
cli
cmp
cmp
sarb
xchg
int
adc
xlat
sub
cmp
xor
sar
cmp
repz
aad
jecxz
xchg
sti
aam
int3
ljmp
xlat
in
cmp
imul
fndisi(8087
sti
aas
fdivr
ret
out
call
fcomp
repnz
call
aaa
into
ret
stc
shr
lret
ds
sti
aas
aas
ret
lds
out
and
out
shl
lret
fdivrl
fstp
loope,pt
cmp
fdivr
fdivr
fucom
lret
xchg
out
mov
movl
div
jmp
test
std
sar
jmp
enter
roll
out
imul
fcmove
in
repz
fldz
aad
test
aam
lock
int3
lret
out
lret
repz
stc
lret
xor
cmp
out
loope
fsub
leave
testb
cli
dec
fnstsw
cs
xlat
cli
cli
jmp
stc
jecxz
in
out
aas
sar
addl
lret
enter
fidivl
int3
jmp
fcmovb
out
fld
mov
hlt
xlat
out
in
sar
fiaddl
in
fucomp
cmp
ljmp
repnz
neg
mov
out
lea
aad
lock
cmp
out
sar
shl
cli
cmp
loopne
mov
in
jecxz
dec
cmc
ret
shr
out
fdiv
repz
cmpl
jecxz
incb
repz
sub
lret
out
divl
lret
clc
cmp
xlat
lock
lock
int
test
out
fptan
fcmovbe
jmp
iret
lock
idiv
in
not
stc
jmp
in
cli
ljmp
in
les
aam
out
fst
stc
shl
out
div
fmulp
test
mov
loopne
call
icebp
imul
out
stc
int3
cmp
fstpt
stc
stc
mov
fisttps
jmp
ror
stc
sar
clc
xor
call
shl
aad
cmp
ror
aad
int
shl
std
xchg
adcb
hlt
xor
call
shl
xlat
cmp
addb
int3
jmp
repnz
fcmove
into
hlt
clc
not
div
and
loopne
fimuls
lea
shll
ret
les
in
aam
loope
std
mov
jmp
sti
les
in
xor
out
ss
loopne
rcr
in
cli
loopne
hlt
hlt
xchg
ret
mov
dec
ror
loopne
divb
divl
out
hlt
cmp
sar
fucomi
xchg
in
cli
fdivr
rorb
xor
loope
aad
repnz
xlat
fnclex
loope
repz
shl
xor
lret
cmp
in
xchg
rcl
clc
addb
fmull
clc
int3
idiv
stc
stc
repnz
out
test
icebp
in
std
enter
fstp
clc
mov
sti
rcl
icebp
fidivs
repz
jmp
iret
int3
shl
rcr
cmc
cmp
mov
out
incl
in
lock
enter
call
cmp
mov
jecxz
sbb
loope
not
aad
in
idivl
ss
cmp
xor
lock
cli
leave
fcmovu
shr
test
fidivs
in
loopne
cmp
aam
leave
int
cmp
rcl
lds
out
fcmovne
iret
iret
cmp
movb
jmp
xlat
aad
rcr
fstp
fdivs
jl
addb
jl
in
in
int3
out
ror
lret
fcomi
cli
shr
cmc
repz
flds
icebp
xor
aaa
aam
ss
aam
in
and
out
leave
out
cld
jmp
xchg
into
into
ss
clc
hlt
xor
jecxz
mov
loop
loop
sti
dec
out
call
repz
clc
ror
dec
sbb
in
test
fsubrp
out
sbb
faddl
ljmp
iret
stc
clc
cmc
ljmp
hlt
jmp
lea
out
aas
in
xlat
out
ss
int3
out
out
stc
loop
out
loope
repnz
test
fcmovnu
clc
adcl
not
out
into
div
cmp
ds
aas
lock
in
ljmp
mov
ftst
ss
aas
enter
cmp
ret
mov
sub
mov
int
xor
icebp
dec
cmp
std
mul
ret
xchg
jecxz
cli
out
int3
cli
mov
div
cmc
stc
cmp
ljmp
ds
rorb
in
rorb
rol
lret
test
rcr
fdivrp
fildl
and
in
xlat
shll
in
repnz
jmp
cmp
icebp
repnz
cld
shl
mov
mov
icebp
mov
in
out
ror
call
xor
cmp
cmp
loop
mov
xchg
shr
xor
shr
fcom
clc
cmp
cmp
mov
xchg
out
iret
adcb
cmp
cmc
icebp
rcr
int3
cmp
rcl
out
leave
fdivr
in
in
cld
icebp
loop
cmc
xor
stc
in
cmp
sarl
out
loopne
aam
loope
sub
ffree
jmp
cmc
aaa
cmp
dec
cmp
sti
fdiv
lds
imul
std
test
fmull
cmc
imul
sti
cmc
into
fdivrs
sti
clc
aaa
lock
in
enter
test
lret
loope
xchg
sar
stc
loope
test
sar
call
mov
jmp
lds
iret
clc
ret
cmp
fstpt
loopne
in
rcr
cmp
clc
clc
cmc
fld
loope
fmuls
out
xlat
ror
aaa
iret
into
fxch
out
iret
sti
jecxz
rcl
fabs
out
out
lea
xchg
fnstsw
in
jmp
fld
out
shl
cli
or
mov
sti
xchg
icebp
out
int3
loopne
jmp
fst
int
iret
loope
ret
fmul
fabs
out
aam
ret
loope
test
mov
jecxz
out
in
repz
cmp
out
rcl
lock
idivl
out
mov
out
jmp
int3
nop
xchg
jmp
jmp
shlb
fcomp
aad
ljmp
in
aam
out
fstp
iret
fsubr
add
aad
ljmp
ror
repnz
in
fcmovnu
flds
in
mov
loop
out
xor
sti
enter
faddl
roll
fsubr
testb
cmc
icebp
repnz
jmp
out
rcr
cmp
rolb
sti
shr
aad
out
in
icebp
in
idiv
stc
in
xor
int3
sar
shl
cld
enter
rorl
fcmove
cmp
enter
out
test
ret
in
int3
in
sbb
cmp
ror
jmp
enter
loopne
repnz
fmull
call
in
icebp
icebp
cmc
out
int
enter
roll
lock
fucomi
jmp
out
lret
ret
sti
fsubr
cmp
stc
int
idiv
stc
in
aam
jmp
call
out
in
out
out
cli
test
fcmovnu
cli
testb
jmp
aad
jecxz
in
lret
sub
cmp
shl
xlat
xlat
test
cmp
loop
cmp
out
in
out
lret
aam
xlat
lret
iret
repnz
add
out
jmp
cli
mov
rorb
fdivrs
in
mov
jmp
jmp
ds
leave
fstp
ret
lds
ret
jl
add
out
aaa
call
fdivrp
fcmove
ds
jmp
xchg
repz
call
aad
sti
out
shr
shl
xchg
rcr
sti
lret
lock
aad
hlt
loop
fcomp
shl
fnstsw
div
loope
fincstp
fsub
rcr
in
mov
fucomp
loop
into
shl
shll
cli
addb
rorl
iret
loope
jecxz
faddp
loopne
aad
not
lret
fyl2xp1
incl
addb
xchg
lock
lret
int
fadd
ror
mov
fcomp
sti
fucomp
int3
test
out
lret
shll
icebp
cmp
sti
sar
fdiv
into
int
loopne
fldl
in
fucomi
in
leave
test
or
xor
in
fcom
in
fcomip
hlt
cmp
sti
std
jecxz
mov
aad
clc
out
out
out
fists
out
jmp
addl
leave
call
loope
fsub
loope
into
das
icebp
shlb
cmp
fst
call
cli
sbb
repz
stc
loope
nop
call
xlat
cs
leave
lock
icebp
out
imul
ljmp
rcr
test
orl
decb
xor
cmp
aaa
lret
sar
fdiv
out
in
fucomip
xchg
mul
in
fsubrp
sti
ret
hlt
xchg
xor
neg
xlat
xlat
leave
jmp
test
vpsrld
out
aad
icebp
jmp
call
loope
stc
lock
xor
lret
idiv
ret
testl
call
repz
not
iret
xor
int
aas
cmp
rolb
xlat
test
out
loope
jmp
aam
aam
out
lret
aaa
int
out
mul
int3
int3
std
iret
les
fcomi
std
mov
test
out
bnd
lock
cmp
cmp
loope
fstp
cld
ljmp
cld
orl
in
into
cmp
neg
into
in
lock
aad
in
call
fstp
int
fcomip
loop
call
cmp
in
fucomi
int3
fdivrl
shl
test
fprem
fsub
cld
repz
test
ds
lret
int
lret
cld
aam
addl
cmp
in
jmp
out
mov
mov
sub
into
leave
int3
fyl2x
cli
call
out
ret
in
jmp
in
out
jmp
aaa
rcl
fpatan
ljmp
icebp
xlat
lock
cmp
push
xchg
out
jmp
in
rcl
xor
mul
divl
rcr
cld
ss
fldl
repnz
mul
leave
mov
ljmp
xor
jecxz
leave
in
xor
call
test
rolb
mov
shl
sub
out
stc
xor
in
aad
lock
sti
ret
idiv
push
test
mov
sub
aad
into
repnz
fdiv
cmpl
fcmovu
fsqrt
aad
fcmovb
decl
loop
ljmp
cmp
icebp
xlat
fadds
incl
iret
mov
into
ss
cmp
cmp
into
cmc
rol
in
mov
int
cli
iret
test
in
rol
out
shll
int3
aaa
repnz
sti
fcmovbe
out
lock
fucomi
lret
fsubr
int
in
sar
xchg
lret
shr
jmp
lock
ds
fdivp
loopne
sti
in
in
fadd
orb
fxch
out
repz
stc
rol
sti
xchg
stc
xchg
enter
int3
loopne
loope
into
fcmovnb
jmp
jmp
sti
vpmaxub
rcr
test
repz
lret
xor
lock
imul
lret
call
shl
mov
lock
mov
xor
xor
repnz
clc
ss
clc
rcr
cmc
cli
jmp
int
xchg
into
jecxz
mov
repnz
repnz
fstpt
cmp
loope
frndint
rcr
out
mov
repz
jecxz
aaa
enter
aas
sarl
cld
xchg
fstp
ljmp
xchg
icebp
loop
sub
fcomi
xlat
cmp
int
cli
cmp
add
add
jmp
ror
int3
fcmovne
inc
clc
adc
inc
in
test
xchg
jl
addb
jl
fmul
shl
xor
in
std
jmp
mov
int3
std
mov
in
jecxz
hlt
fstpt
repz
cmc
neg
ffreep
neg
cmc
sti
out
jecxz
loop
fiaddl
hlt
cmc
lret
ss
fsubrp
in
aas
in
cmp
test
int
out
fdiv
std
iret
in
in
lret
jmp
xlat
adc
aas
sar
stc
out
test
out
shll
jmp
aad
lret
hlt
loope
test
test
repz
ret
lds
fmul
leave
repnz
and
rcl
xchg
roll
call
out
iret
iret
fsubr
aaa
das
neg
iret
cli
rcr
iret
in
test
std
mov
imul
cli
loopne
lret
in
filds
fstpt
fcmovu
hlt
int
lret
test
jecxz
fsub
nop
out
iret
int3
repz
cmp
cli
xor
ss
sar
std
ftst
mul
hlt
and
out
into
mov
xchg
xor
ljmp
fcmovbe
hlt
lock
in
test
movb
fyl2xp1
jmp
hlt
aam
cmp
ds
test
loop,pt
out
aad
out
mov
in
out
cmc
rcr
out
out
iret
cmp
or
inc
in
call
out
loope
loope
jmp
xchg
int
xlat
in
cmp
enter
sti
icebp
in
loop
ret
repnz
xchg
jmp
out
lock
jmp
sti
jecxz
test
cmp
orb
rolb
xlat
loopne
neg
jmp
rol
in
xor
in
std
mov
jmp
cli
lret
into
xor
in
ror
icebp
xlat
into
stc
repz
cmp
sti
out
loop
lret
addb
out
rcl
int
shlb
clc
out
cmp
rolb
mov
in
fdivp
xor
fldl2e
ljmp
cmp
repz
stc
xchg
xchg
jecxz
lock
shl
aad
jecxz
cmp
fucomp
shl
iret
xchg
fcmovnu
ret
les
xchg
xchg
mov
into
loop
lock
sar
fsubr
call
repz
in
jecxz
jmp
iret
jmp
shl
leave
cli
sti
fsubr
cmp
neg
fucom
into
repnz
aas
repz
ret
mov
rolb
fcomip
enter
in
lock
int
icebp
faddl
xor
loop
enter
lret
loope
imull
fpatan
fnstenv
lret
loopne
stc
cmp
hlt
fisttpl
out
cmc
xchg
shl
xor
rcl
repz
decb
faddp
loop
out
mov
rol
xlat
in
vpxor
sar
aam
cmc
ret
aas
xchg
xor
aas
loopne
leave
jmp
lret
xchg
xor
aad
sub
cmp
shl
hlt
cmp
out
repnz
hlt
call
xchg
jmp
das
xor
int
sar
aam
out
fsub
stc
cmp
rcr
mul
xbegin
out
ret
sub
int3
cli
cli
jecxz
cmp
repz
cmc
call
cmp
cli
int3
test
xor
sti
in
aad
cmp
hlt
sarb
adc
rolb
mov
das
int3
out
in
fmul
aaa
neg
fucomi
neg
xchg
rcr
clc
sti
xchg
std
fdivrp
mov
jmp
clc
hlt
call
shl
repnz
aam
in
fcmovnb
fsub
iret
repnz
ds
ljmp
ljmp
aad
aam
out
out
leave
loope
leave
in
into
jmp
lret
xor
int3
repnz
ss
sti
in
loop
loope
test
enter
incl
in
int
clc
rcl
clc
hlt
ds
rol
add
std
fmul
lock
ror
out
in
lret
dec
fdivr
fcmovne
std
fsubp
neg
ret
clc
imul
rorl
repnz
xor
in
cmc
fbstp
ljmp
aad
and
test
clc
xchg
mul
out
aaa
test
adc
ds
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
divb
mov
lcall
fsubp
repz
loope
ficoml
shr
shlb
cmp
out
shl
shl
loop
leave
add
xchg
mov
test
cld
orl
out
fistpll
lock
lds
loop
stc
lret
fldz
in
iret
fsubrp
in
lret
iret
shr
fcomi
in
sarl
into
std
into
clc
loopne
jecxz
shl
stc
in
test
mov
in
xchg
cs
fldlg2
out
xlat
xor
fcomp
cmp
cmp
in
leave
ret
int
fcmovb
faddl
aad
stc
call
xor
out
ret
vpmovmskb
xchg
ljmp
out
in
loop
cld
fidivl
cmp
fdivrl
rol
ffree
ret
and
loope
into
loopne
jmp
repz
loope
std
hlt
test
addl
int
fisttps
xor
enter
fcomp
clc
aas
in
into
not
icebp
cli
sub
clc
fsubp
in
jmp
xchg
in
xchg
xor
loop,pn
stc
shr
shl
out
ret
in
rol
shl
cld
aam
out
out
fildl
vpslld
cmp
fistpll
into
rcr
repnz
stc
jecxz
cmc
xchg
call
loopne
into
call
xor
les
hlt
loope
sar
repz
aad
fdivp
add
testb
aam
ftst
leave
aad
into
aas
repnz
out
fld
in
rcr
ljmp
fdivrp
in
xor
aad
test
rcl
xchg
jmp
fcomp
frstpm(287
fstp
out
in
xor
cmp
fdiv
idivl
roll
cld
in
addl
fcoml
shr
ret
sar
cmp
rcr
sarl
hlt
inc
neg
fisttpl
xchg
loopne
ljmp
in
sarb
ljmp
stc
fcmovbe
jmp
fucom
jmp
fxtract
cmp
cld
rcr
std
lret
in
xchg
xchg
shr
call
mov
shr
mov
cs
sti
enter
cmp
aam
ret
mov
call
ljmp
hlt
shl
mul
out
fcomp
rcl
fsubp
ror
or
xchg
mov
ror
xlat
clc
enter
xor
cmp
std
out
cmp
sti
dec
int
xchg
lret
mov
iret
in
out
in
cld
jmp
ds
sti
stc
vpaddusw
movb
jmp
sub
stc
cmp
sarb
jmp
cmc
fst
loope
repz
repz
jmp
in
mov
xchg
in
ds
loopne
xlat
out
fidivrl
xor
lds
fcmovne
in
xor
std
out
rcl
xor
xor
repz
in
div
neg
loope
shl
loop
fsub
xchg
std
loope
in
enter
xor
repz
fucomi
jmp
cli
fcomip
xor
ret
loop
xchg
test
lret
ret
out
int
test
add
xor
ret
cld
fucom
test
jmp
loop
not
out
aaa
cmp
sarl
out
ret
fcmovnu
ss
aas
fiadds
orb
leave
shl
cmp
out
out
aad
loop
icebp
std
lock
or
or
lret
xchg
shlb
fdivp
fidivrl
aad
incl
test
repnz
mov
repz
out
repz
cli
lret
fdivrp
lds
shr
loope
xchg
shl
repnz
loop
fidivs
out
aaa
in
fcmovne
hlt
clc
int
aad
test
int
sub
loopne
mov
shlb
idivb
out
in
or
iret
inc
add
hlt
out
into
in
int
repz
out
out
dec
xor
cmp
xor
enter
into
cld
in
out
cs
int
stc
stc
out
cmp
jmp
into
dec
rcr
in
hlt
fucom
call
xchg
sti
or
cs
in
cmc
hlt
rcr
xlat
lock
in
and
stc
cli
mov
enter
hlt
xchg
repz
xor
loop
int
sti
in
lock
ret
orb
test
jl
decl
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
sub
pop
push
sahf
jl
addb
jl
clc
xchg
test
xchg
rorl
leave
lret
aaa
icebp
in
ss
sar
ds
in
in
fdivrp
mov
rcr
mov
divl
not
lock
leave
int3
out
neg
fscale
rol
cmc
mov
ret
jecxz
loop
mov
out
jecxz
loope
out
sub
repz
int3
std
xor
hlt
xchg
cld
test
stc
out
out
fisttpll
into
clc
frstpm(287
xor
rcl
fcmovnu
repnz
xchg
jecxz
xlat
out
mov
mov
xor
int
xor
neg
cli
cmp
test
icebp
mov
hlt
fdiv
int3
lea
in
xor
repnz
fmul
call
out
cld
std
addl
fcomp
out
lret
lock
in
loope
in
in
in
xor
fmulp
out
cmp
std
mov
stc
out
enter
repz
sub
ss
leave
out
into
aam
add
call
flds
fldcw
rcl
repnz
ljmp
div
enter
in
in
ror
mov
shrl
jmp
fcomi
sbb
idivl
aam
in
fcmovne
iret
iret
jmp
int3
out
lock
lock
fdiv
cmc
lret
xor
mov
hlt
sti
sar
ds
mov
les
lock
std
leave
repnz
loope
cli
out
sti
loope
test
fcmovb
test
jmp
iret
loop
aam
lret
in
std
imul
repz
fdivp
repz
cmc
sti
addb
sub
jmp
sub
out
out
std
xlat
ret
in
testb
fadds
xchg
fcmovb
aaa
cli
lret
fcmovnbe
icebp
loopne
loopne
fcmovnu
ret
test
mov
lret
into
into
and
in
lret
lock
fcomp
xlat
shl
in
aaa
in
xchg
div
sti
std
out
rcll
into
repz
cmp
fcmovbe
dec
stc
fildl
fsubp
clc
mov
xor
ret
iret
ret
sti
cmc
neg
sub
imul
xlat
out
out
aam
lret
cmp
enter
cld
aas
fcmovnbe
addb
xchg
out
test
xor
cmp
rcl
fcmovu
enter
std
cmp
iret
rcr
sti
fcmovu
jmp
mov
test
ret
ret
hlt
cmp
ror
ljmp
orb
xchg
int
lret
lock
cmp
cmp
sti
shl
adc
int
fisttpl
xchg
sub
jecxz
cli
xor
aad
loop
clc
shl
neg
xchg
and
mov
out
xor
clc
xor
xor
stc
cmc
int
cmp
cmpb
loope
clc
aam
ret
lret
out
cs
fcomp
aam
mul
cmc
into
repnz
rol
cli
xchg
orl
in
shrl
xor
jecxz
cli
in
hlt
leave
rol
xlat
int3
loope
std
lock
mov
in
xor
repnz
cmp
ds
repnz
ror
jmp
out
lock
into
xor
into
aam
call
fdivrs
sti
loop
neg
testb
shr
out
loopne
aad
cmp
jmp
and
fdiv
rolb
xchg
jmp
shrl
fcmovnu
std
aas
ljmp
loop
aad
leave
sti
xchg
int
fmull
iret
rcr
icebp
int3
ds
aad
fcmovbe
loope
loop
lret
loope
mov
lret
ret
cmc
dec
ss
iret
xor
in
lret
xor
fcmovb
lock
les
sti
lret
test
clc
repnz
cmp
jecxz
jecxz
stc
ret
fsubp
jecxz
mov
aaa
aad
xor
in
fdivp
enter
clc
fiaddl
adcl
cmp
cmp
out
fsubr
addl
aas
ds
enter
lret
test
loope
out
iret
icebp
xor
test
and
out
add
fcmovnbe
leave
fstp
std
std
or
jecxz
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
xchg
jmp
in
neg
into
stc
aas
jecxz
lock
jmp
fmuls
in
int
fidivs
leave
fdivrl
int3
fdivr
into
fcomip
inc
repnz
xlat
fildl
std
int3
rclb
enter
cs
aaa
clc
hlt
aas
xor
rol
test
orb
int
xchg
cmc
lock
leave
aam
fcom
mul
out
ljmp
bnd
hlt
fmul
int3
xchg
call
into
out
in
hlt
fnstenv
repz
cmpb
movl
leave
iret
int3
repnz
in
cli
repnz
loope
aas
cli
test
ret
loope
lret
mov
lock
out
aad
out
in
loop
fcmove
icebp
repz
fdivp
jecxz
mov
loop
out
clc
jmp
xchg
fidivs
call
out
cmc
loope
fsub
fidivrs
loope
loope
lret
test
mov
sub
shl
loop
les
cmp
cmp
hlt
xchg
xlat
out
dec
call
int
ss
cmp
sbb
loop
out
cmp
fcmovnu
add
loope
cmp
sar
mov
xor
ret
enter
repz
incb
repz
out
fdiv
aam
mov
fildl
xor
div
stc
cld
fcmovnbe
call
addl
loopne
clc
xchg
xchg
xchg
mov
rol
cs
out
fadd
repz
in
cmc
ret
test
enter
int
loopne
aam
xor
iret
aas
ss
cld
cmp
ret
stc
fimuls
in
loope
in
sarb
leave
xor
leave
sti
out
sar
ds
xchg
loopne
int
in
rolb
ror
out
fcomip
aam
aad
fcomip
rol
repz
test
mov
test
loopne
cld
rcl
ror
clc
cmp
aam
int3
icebp
fidivl
in
cmc
mov
iret
call
into
xor
xor
cld
jmp
cmp
hlt
addl
xchg
clc
adcl
ret
ret
ss
rcr
bnd
cmpl
lret
orb
sub
repz
xor
cmc
ljmp
icebp
into
into
fcmovnu
ftst
mov
lret
mov
ljmp
xor
das
cld
leave
cmp
and
rcr
loope
pop
fists
int3
int3
out
call
into
shl
loopne
faddp
ds
jmp
int
jecxz
int3
fcmovb
in
test
rol
aam
repz
sti
cmc
jmp
cmp
repnz
repz
ljmp
shl
xchg
into
repz
shll
out
stc
aaa
loope
addb
sti
clc
enter
rorb
jmp
iret
xor
fucomip
std
out
out
fdivp
aam
rol
sti
mov
test
test
add
stc
loop
in
divl
shl
lock
cli
cmp
fdivrp
out
mov
iret
lock
out
in
repnz
sar
int3
iret
repnz
sbb
loope
clc
repnz
mov
out
jmp
clc
into
xor
fxch
shl
xlat
test
call
sti
cld
jmp
mov
out
xor
lds
ror
xlat
out
aaa
loopne
loopne
out
cmp
in
lret
in
xor
xchg
lret
aaa
xlat
ret
sti
leave
cmp
lock
addb
into
mov
fsubrp
call
out
in
fcomi
enter
cmp
and
test
out
leave
xlat
ljmp
fdivp
enter
ror
fst
aas
clc
cmp
stc
out
repz
int
in
in
shl
in
ret
iret
cmp
fmul
in
cli
fdiv
test
loop,pt
in
cli
cli
jecxz
xchg
mov
std
ljmp
in
jmp
ret
cmp
sarl
shr
aad
push
lock
call
xor
fcom
int
sar
repnz
and
xlat
shr
mov
idivb
mov
and
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
out
mov
jl
flds
jl
in
loope
rclb
cmp
icebp
not
cld
ss
jmp
into
cld
fdivrl
repnz
test
mov
std
mov
rcl
aaa
in
std
fdivrs
in
cmp
aas
rcl
into
icebp
and
in
lret
fsub
or
push
div
ret
lret
std
sar
xlat
rcl
icebp
std
out
div
test
lret
out
add
iret
fsub
fists
lock
rol
xor
lock
shl
rcr
ret
aam
or
incl
faddp
cs
sarb
jmp
add
aad
mov
loopne
fmuls
das
test
xlat
int3
in
jmp
cld
repnz
test
out
mov
ret
hlt
fnstsw
mov
call
ss
cmp
cmp
rcr
imul
cmc
jmp
aam
out
fcmovu
int3
lea
out
xor
sar
shl
adc
mov
aad
addl
shl
jmp
sub
ljmp
int3
mul
repnz
addl
in
xchg
sub
lret
out
fucom
idivb
cmp
add
mov
out
xchg
jmp
shr
ds
repnz
cli
lret
out
cmp
fcomip
in
xchg
cmp
rcr
xlat
in
out
fimuls
call
clc
cmp
aaa
out
lret
xor
roll
stc
jmp
mov
fidivrs
ljmp
clc
ljmp
cli
fiadds
enter
in
ljmp
jmp
test
fcmovnbe
xchg
ffree
ffree
incl
incl
into
clc
fcom
leave
std
loopne
xor
xchg
xlat
stc
icebp
iret
in
mov
loopne
clc
enter
lret
cli
lret
repz
out
into
rcl
fadd
test
out
shll
in
jmp
into
cld
sub
clc
rcr
clc
jmp
rorl
jmp
nop
out
repnz
sar
out
xor
cmp
std
flds
rcr
mov
enter
xchg
addb
sar
cmp
out
ss
out
in
repz
frstpm(287
xlat
ret
mov
mov
aad
in
cmp
ss
filds
loopne
fsub
addb
and
and
clc
hlt
stc
int3
out
xor
enter
aad
roll
enter
ret
shr
lret
int
ss
repnz
ds
stc
ds
fstp
shl
jecxz
mov
xchg
out
cmc
lret
cmp
stc
clc
fcmove
clc
ffree
ljmp
fcomp
loope
fmulp
ljmp
divl
xor
repz
cmp
cmp
cmp
hlt
shl
incl
cli
out
int
ljmp
cmp
int3
das
cli
clc
ljmp
inc
mov
fdivrp
cld
jecxz
fimull
xor
xlat
clc
aad
cmp
ret
rcr
in
ljmp
mov
fimull
sub
shl
xor
aas
out
enter
icebp
jecxz
lock
in
rcr
in
ss
int
shlb
cmp
aas
clc
jmp
fxch
leave
test
rcl
cmp
stc
shll
out
cmp
cmp
aam
sti
out
in
lret
decl
iret
ret
int
fcmovu
sti
cmp
test
loop
loopne
out
ljmp
shl
cmc
sar
hlt
int
in
repnz
test
cmp
enter
out
ljmp
lret
aaa
xor
int3
xorl
sti
mov
xlat
test
les
loope
repnz
in
int
cmc
in
cmp
hlt
cmp
rcl
in
ret
xor
inc
xchg
mov
std
lea
rcl
xor
hlt
std
stc
aas
shl
in
fcomip
fst
fxch
hlt
fisttpll
mov
xlat
lret
jmp
lret
rcr
iret
repnz
xor
cld
xchg
xlat
mov
sbb
into
push
add
xor
jmp
ret
lret
ror
lret
sub
sahf
in
ds
xor
lods
jl
flds
jl
repz
sti
xchg
nop
mov
xor
xor
cmc
fdivr
rcr
in
cmc
fdivrl
loope
test
mov
in
sar
iret
mov
fnstcw
repz
xlat
aaa
cli
xlat
cmp
lret
fcmovnu
ret
hlt
loope
fldl
lret
icebp
lock
aaa
lret
in
xor
cmp
sub
stc
fnstcw
sar
stc
jmp
ret
test
mov
out
fists
shr
in
fsub
cmp
cmp
repz
mov
stc
vphaddubd
aam
cmc
rcl
jmp
ss
in
addb
rcl
mov
call
test
ds
hlt
rcl
fcmovnbe
out
rcr
std
loope
test
loope
decb
xor
xor
aam
lret
aas
stc
sti
shlb
rcl
jmp
test
sti
test
jmp
repnz
out
icebp
jmp
clc
icebp
in
xor
xlat
test
sar
loopne
fucomi
out
ljmp
shlb
in
out
int3
aas
cld
jecxz
cli
lock
aam
stc
aam
iret
in
out
mov
imul
div
divb
test
into
rol
cmc
mov
imul
clc
int3
icebp
rcr
xchg
enter
out
cli
stc
hlt
cld
std
repz
neg
test
stc
sbb
loopne
jmp
hlt
lret
fadd
ss
shl
cmp
ret
out
fmulp
out
clc
jmp
jmp
cmp
leave
roll
stc
div
fdivrp
stc
std
ljmp
test
les
lret
aaa
stc
ljmp
idiv
cli
ret
test
ljmp
jmp
in
in
xor
aad
in
rolb
mov
xchg
jecxz
loopne
out
cs
in
repz
cmp
xlat
aam
icebp
cmp
fucomi
jmp
cld
in
loopne
lock
jmp
cld
push
repz
fsub
call
jmp
addb
aad
aaa
std
int
iret
fstp
in
fidivrl
xchg
cli
flds
enter
aaa
sub
cmp
lret
call
in
cli
cmc
cmp
enter
fcmovne
in
in
iret
icebp
xlat
jmp
cmp
call
inc
lret
jmp
cmp
and
test
imul
loope
cmc
fcmovbe
jmp
in
cmp
aad
aam
mov
rorb
fsub
icebp
repnz
in
ss
fbstp
fcmovnu
iret
lret
in
aas
mov
leave
int3
fyl2xp1
std
in
out
out
aas
in
aad
aas
stc
lret
fdiv
icebp
neg
jmp
orl
repz
out
aaa
in
leave
out
cmp
xor
div
ror
ds
cmpl
or
jmp
rcll
les
incb
jecxz
repz
sti
sbb
int3
jecxz
icebp
in
shl
fcmove
xor
cmp
fdiv
clc
sbb
hlt
and
movl
sub
in
in
leave
das
in
lret
stc
out
std
sarb
mov
int
cli
lret
repz
in
fxch
in
cli
repnz
xchg
icebp
add
loop
sbb
in
mov
jmp
rcl
sar
icebp
xor
xor
jmp
jmp
repz
out
ret
ljmp
hlt
loopne
cmp
vpavgw
out
incb
shl
repz
cli
loope
aas
cmp
fldl
mov
loop
imul
shl
cmp
cld
lret
xor
fcmovnb
call
aas
mov
hlt
xchg
or
mov
test
xchg
icebp
aad
rcr
xor
jmp
cmp
repnz
lock
enter
loop
xor
xor
out
in
cmp
ror
fnstsw
lock
fimuls
cld
repnz
out
stc
repnz
cmp
cmp
je
jmp
iret
aad
aad
aad
aad
mov
push
sbb
jl
flds
jl
out
ret
ret
test
in
out
call
div
stc
in
cs
sub
repnz
fcmovne
aas
cli
fiadds
sti
mov
ret
out
mov
sub
lret
repz
shlb
aaa
cmp
std
fst
int
stc
xchg
jmp
ljmp
ror
jecxz
fsubr
cmp
cli
cmp
sarl
cld
stc
fdivr
push
dec
xlat
lret
lret
icebp
mov
ror
shl
jmp
fincstp
lock
aad
cmc
fcmovbe
cmc
jmp
test
leave
jmp
xchg
lret
hlt
aad
jecxz
out
fcmovnu
icebp
jmp
icebp
and
in
and
in
cmp
popl
clc
out
aad
shr
leave
incb
in
test
fsub
aam
clc
adcl
sub
ret
jmp
aad
fdivrl
fprem1
xchg
leave
sar
std
in
ror
in
xchg
rcl
out
xor
clc
fst
hlt
ljmp
fiadds
ret
into
in
std
ljmp
neg
cmp
lock
idivl
repnz
into
out
repnz
xlat
fimull
call
ljmp
clc
fcmovnbe
div
xlat
jecxz
repz
call
leave
enter
lock
lds
in
repnz
flds
sub
xchg
loopne
xor
xchg
mov
loope
repz
shl
cmp
sti
cld
or
cli
shr
std
and
shl
in
in
lock
xor
int
int
cli
in
out
addl
addl
sub
shl
cli
div
lret
aaa
cmp
cld
repz
stc
in
test
and
cld
jmp
lock
out
jmp
lret
cmp
rcl
int3
repz
fadds
int
clc
xor
rcll
aam
rcr
cmp
cmp
and
sar
testb
fxch
iret
leave
xchg
loopne
imull
out
xor
shr
clc
enter
cmp
fnstsw
loope
cli
ret
int3
in
loop
xor
cs
stc
call
aas
filds
into
repnz
mul
xlat
fcmove
lret
out
mov
vcvtpd2dq
repz
out
sarl
fmul
ret
out
fdivr
shl
cmc
mov
xlat
std
ljmp
mov
xor
ret
test
int
jmp
ds
or
in
loopne
jecxz
jmp
out
jmp
xlat
xor
out
sarb
rcl
cli
iret
cld
cmp
cmp
test
incb
xchg
iret
sub
out
enter
fnstsw
cmp
fldl
loopne
sti
cld
loop
loopne
roll
leave
enter
repz
rcr
aas
fiaddl
loopne
sub
out
rcl
xchg
xor
in
in
in
fsubrp
cmpb
aad
jecxz
orl
in
nop
xor
xor
xor
jmp
shll
ds
movl
lret
xchg
cli
cld
jmp
xlat
out
repnz
imul
aam
lock
sar
aam
loop
in
lea
cs
xlat
aad
int3
ss
sti
sarb
sarl
mov
mov
sbb
in
lret
lret
in
in
in
loopne
cmp
cmp
xor
lret
sbb
jmp
hlt
aam
jmp
xlat
hlt
out
jmp
into
fdivp
in
cmp
int3
mov
into
jmp
ficoms
lock
enter
cmp
push
test
rol
lret
call
les
aad
in
iret
int
lock
clc
repz
mov
aam
decb
int
xchg
iret
vpslld
lock
cld
shl
cmc
cmp
xlat
cmp
fisttpll
int
ret
cmc
out
iret
int
repnz
int3
aas
cmp
adc
cmp
loop
fucomi
cld
in
int3
out
lea
loop
cmp
cmp
loop
sar
ret
in
iret
lock
xlat
in
jmp
cmp
mov
mov
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
sub
jl
add
out
lret
ror
cmp
jmp
clc
mov
neg
xchg
stc
clc
repz
in
lock
icebp
cmp
div
fldl
out
stc
stc
idiv
xchg
into
out
lret
out
in
int3
cmp
loopne
cmp
cmc
xchg
fisttpll
fucomp
in
xchg
loope
ds
cmp
in
ljmp
repz
aas
aad
in
mov
fdivr
sbb
test
mov
mul
in
int3
hlt
call
stc
ds
out
cli
rol
shr
fmulp
fmul
lret
mov
shl
cmc
loope
iret
into
xor
xor
out
int3
icebp
int3
ret
cmpb
fnstsw
in
leave
shr
rorl
mov
iret
leave
cmp
not
shl
cli
test
loop
mov
clc
jmp
out
test
aam
jmp
out
repz
ret
fcmovnbe
into
cmc
enter
fists
repnz
ds
lret
int3
aad
stc
aad
cmp
not
call
fadds
shr
call
xor
leave
cmp
in
out
loop
in
cmc
adcb
aad
fdivr
loope
fdivrl
fucom
cli
adc
fsubr
sbb
in
faddp
call
enter
out
fldl2e
repz
sbb
mov
icebp
std
mov
in
enter
call
iret
icebp
aam
int
jecxz
xlat
hlt
fucom
fxch
lea
out
in
out
loop
in
xor
lock
shl
jecxz
cmp
ffree
mov
out
loopne
ljmp
jmp
std
cmp
int3
div
ret
std
rcr
neg
enter
mov
loop
shl
ljmp
xlat
clc
cmp
fmulp
jmp
loop
clc
lret
addl
call
icebp
ret
out
div
out
jmp
xchg
mov
sar
hlt
in
xor
aad
out
neg
loop
lock
cmc
loopne
xchg
mov
shr
lret
cmp
out
rcl
fdivr
aam
aad
fsub
jmp
loopne
fucomp
addb
out
cli
cs
xor
loope
lds
out
aas
dec
stc
fmul
stc
rcr
call
sub
xor
icebp
ljmp
repnz
ret
cld
in
enter
lea
int3
jmp
repz
lret
cld
fprem1
leave
out
loopne
fiaddl
in
sub
fcmove
faddp
mul
cmp
ret
into
loope
stc
xchg
fcmovu
iret
loop
xchg
loope
int3
cmp
sarb
repz
xlat
cmp
leave
jmp
test
test
rol
cld
rcl
in
int
jmp
cmp
loopne
repnz
cmc
cli
aam
cld
rcr
test
test
into
xor
std
cmp
iret
aas
shr
loopne
loop
cli
out
call
cs
cld
xor
in
int
jecxz
out
not
loop
ljmp
out
fcmovu
xchg
inc
ds
aad
fcmovbe
aam
fsubp
std
in
sbb
repz
out
mov
fcmovnu
fmulp
jmp
ss
clc
repz
lock
shl
sbb
aas
rcl
leave
xchg
out
fmul
int3
mov
loopne
ds
jmp
fcmovbe
fucomip
cmp
clc
into
rcr
inc
fsub
idiv
sti
lret
out
lock
sub
das
xor
std
jmp
out
lock
rcl
cmp
and
cld
mov
popl
shl
fdiv
cmp
in
cli
loope
repz
clc
cmp
fisttpl
cli
mov
fidivrs
ljmp
sarl
jecxz
xlat
testl
cli
fpatan
jmp
xchg
call
hlt
cmp
std
shl
imul
loope
xchg
sti
fucomp
in
xchg
in
lock
out
xor
repz
fstp
idivb
xchg
ret
int
mov
nop
nop
out
mov
out
ljmp
add
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
cwtl
dec
pop
and
jl
cli
shl
aaa
fbstp
cmp
repz
rcr
cmp
cmc
xbegin
nop
int3
and
shl
out
fdiv
cmc
aad
flds
int3
xchg
fxch
cmc
jecxz
mov
addb
cmp
lret
cs
sti
aad
rcr
repnz
ffree
in
int
fcmovu
fisttpl
hlt
fmul
out
fnstcw
cmc
out
lret
loope
out
rol
out
loopne
stc
mov
int3
xchg
shl
in
divl
clc
int3
in
std
cmp
shl
cmp
jmp
call
mov
xor
out
les
out
loop
cmp
stc
jmp
mov
mov
clc
jmp
jmp
adc
fidivrs
jmp
mov
int3
cmp
rolb
int3
int
xor
cmp
cmp
aam
loope
cmp
std
mov
out
in
out
cmp
fcom
out
fdivs
mul
out
int3
fsubp
out
xlat
xchg
fstp
xchg
out
ret
imul
div
aam
iret
stc
and
sti
cmp
jecxz
cmc
lret
enter
rorl
stc
fcmovnu
neg
rcl
fucomi
cmc
xlat
ds
test
cli
and
xchg
jmp
shr
in
jmp
rcl
int
ljmp
loopne
std
stc
aad
in
jmp
shl
loope
mov
jecxz
shlb
repnz
stc
fnstcw
aas
into
aad
ds
fiaddl
in
out
fiadds
ljmp
hlt
out
iret
sarb
movl
in
xchg
sbb
div
hlt
in
repnz
fdivr
frndint
aam
loop
sbb
loopne
sbb
clc
fmulp
ljmp
xlat
cmc
in
sar
ljmp
rcr
loop
out
mov
fimuls
out
jmp
jmp
loop
fadd
shl
testb
into
in
xchg
loop
icebp
fsubr
into
rcl
fabs
out
mov
xor
cmc
ljmp
fidivrs
in
addl
jmp
into
lret
xlat
out
ss
int
sar
repz
sbb
in
fcomip
shr
repnz
sti
aaa
not
ss
roll
fsub
mov
cld
sub
ror
iret
ss
ds
div
out
out
neg
hlt
stc
jecxz
loopne
xchg
xchg
in
in
lock
int
rcr
fmulp
adc
rcl
fucompp
leave
loopne
cld
out
in
sti
int
adc
out
lret
rcl
clc
cmp
cmp
in
and
call
out
repz
aaa
cmp
lret
in
idivl
cmc
loop
jmp
out
loopne
into
int3
in
fldl
test
in
out
rol
lock
cmc
mov
ret
iret
fdivp
test
jmp
out
aad
shl
int
cmc
into
sarl
call
xchg
in
out
jmp
fst
aam
jmp
repnz
loop
fdecstp
in
jmp
cli
jecxz
test
aam
ret
fcmovnb
leave
jmp
ss
loop
test
aam
jmp
fimuls
aad
cmc
idiv
fcmove
in
sub
inc
mov
fsub
iret
xchg
jmp
int
lret
ds
enter
out
stc
cli
repz
clc
in
sar
xlat
aam
mov
out
roll
das
xor
shr
aas
shl
cmp
out
cli
ds
cli
out
loopne
in
int
test
into
xchg
xchg
shl
cmp
sti
repnz
idivl
in
adc
fcmovnu
int
in
fstp
in
call
call
lret
cmp
loopne
fcmovu
fdivp
jecxz
repnz
lret
in
fcmovbe
repnz
in
stc
cmp
sti
test
cmp
fsubp
aam
cli
lret
test
mul
call
fdivp
mov
add
mov
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
es
pop
cld
mov
jl
xor
cs
stc
into
enter
aam
rcl
cmp
not
out
cmp
fucomi
mov
test
repz
out
into
enter
aad
cld
out
neg
mov
in
out
mov
out
lret
mov
call
call
ffreep
mov
cmc
xchg
xchg
movb
xor
in
call
jmp
ret
cld
aas
neg
and
mov
mov
xchg
ror
xor
aam
sar
sarb
hlt
in
xor
leave
mov
orl
xor
fdiv
aas
cli
call
shl
out
mov
rolb
leave
ljmp
xor
cmp
xlat
div
ds
iret
repnz
test
inc
cli
test
repnz
hlt
in
ljmp
cli
hlt
cmpl
ret
adc
hlt
test
in
jecxz
lret
test
sub
divb
cmp
repnz
sbb
ret
fcomip
loop
testb
in
shr
in
xor
xor
cmp
ret
div
f2xm1
rol
cmc
ljmp
jecxz
in
in
in
out
fprem
call
out
out
test
popl
ss
clc
call
fxch
fdivrp
ret
rcl
repz
roll
test
addl
cmp
neg
fadd
fdivp
hlt
shr
test
loopne
mov
int
int
ret
xor
adc
repnz
loop
xchg
cld
loope
decb
into
xor
cmp
rcl
cmp
fdivp
fxam
in
testl
hlt
shl
ljmp
aam
out
faddl
push
fcoms
test
repz
fsub
aam
in
lret
call
sti
flds
jmp
in
rcll
fmul
cmp
xor
or
ret
in
ret
repz
fisttps
in
shlb
cmc
icebp
fdivp
cmp
loop
rcl
sbb
ljmp
out
lret
int
fcomp
cmp
call
ret
xor
ret
jecxz
xchg
mov
and
mov
loope
repz
shr
cld
aaa
fsubp
addb
fcmovnb
out
mov
xor
rol
cli
cmp
out
mul
leave
div
fisttpll
out
cld
mov
loop
out
std
div
aas
aam
repz
aas
xor
std
cli
ljmp
loop
mov
shr
enter
xlat
aad
jmp
into
ret
cmp
ret
fcmovu
in
ljmp
in
rcl
hlt
hlt
fxch
repnz
jecxz
fiaddl
lret
decl
mov
div
xor
stc
aam
jmp
lret
loopne
sti
jecxz
loopne
mov
orl
mov
leave
cmp
xor
cmp
lock
and
std
in
sbb
std
jmp
in
enter
jmp
out
xor
rcr
ffree
loop
fcomp
out
fisttps
and
mov
lret
jecxz
icebp
jmp
fstp
stc
int3
into
test
in
sar
sar
test
nop
repz
aad
repz
cmc
enter
cmp
loope
cmc
xlat
addl
ljmp
ss
fyl2x
fadd
xor
iret
sbb
cmp
rcr
cmp
cmc
jmp
or
in
xlat
icebp
lret
ljmp
jmp
xlat
sar
rcr
ret
fxch
int
repz
shl
xor
loop
cmp
xlat
in
cmp
ljmp
neg
cli
enter
cli
fsubp
rcr
enter
xor
out
in
sti
lock
rcl
out
fistpll
idiv
mov
sti
xchg
mov
iret
int3
xor
std
out
jmp
in
fneni(8087
adc
shl
repz
call
out
xor
xor
add
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
in
cmc
iret
xchg
div
int
iret
fst
cld
loope
loope
sar
test
aad
imul
decb
out
cld
lock
xor
clc
cmp
aaa
jmp
icebp
xlat
sbb
icebp
std
vpsadbw
xchg
in
mov
mov
in
cmc
div
dec
enter
shl
out
loopne
mul
in
fcmovbe
test
fisttps
into
rcl
xor
in
xlat
icebp
test
xor
add
cmp
leave
enter
loope
roll
rol
rcr
leave
cmp
fcomip
test
cmpl
or
rcll
aam
loope
leave
aad
out
cmc
ds
shl
clc
addl
jmp
mov
fisttps
loop
xlat
sar
ljmp
cmp
lea
int
into
shl
in
in
into
icebp
into
std
hlt
and
hlt
xchg
cld
aam
out
mov
sti
orb
out
std
lret
cmp
iret
loop
cmp
sub
ror
in
fadds
hlt
jmp
stc
out
shr
cmp
aas
lock
xlat
sarl
cli
fst
out
in
mov
fdivrp
std
nop
hlt
mov
das
jmp
aad
cli
aad
xor
rcr
aas
fdivr
and
out
sti
xchg
xchg
xchg
call
clc
xor
ljmp
ss
bnd
hlt
out
out
fildl
into
xor
xlat
les
cmp
cli
std
sbb
cmp
call
lret
sub
nop
hlt
mov
shrb
int
clc
aad
iret
cmpl
loop
lock
int
dec
fiadds
iret
iret
not
aam
aad
out
jmp
fnsave
out
icebp
ret
in
repz
mov
xchg
jmp
call
aaa
enter
in
repnz
shr
int3
loope
xchg
loope
fst
jmp
jmp
in
loop
fninit
cmp
cmp
rcr
cmp
into
shl
call
lret
iret
ficoms
xor
f2xm1
cmp
fdivr
addb
cmp
fucomp
ficoml
xor
ljmp
aaa
clc
iret
lret
into
repnz
in
std
test
loop
out
lret
das
rcl
shr
iret
hlt
fcomp
ret
xlat
xchg
jecxz
decl
out
out
shlb
enter
cmp
leave
xor
int
shl
in
xchg
lock
fmul
xchg
roll
int
rcl
shl
repnz
in
call
shll
fldz
ret
fmull
mov
xchg
sub
xor
out
cmp
cmp
clc
shl
sar
test
xchg
rcr
cmp
std
fisttpll
xor
out
xor
std
cmp
in
les
lret
in
in
out
divl
ror
xor
fcomp
in
cli
cmp
roll
jmp
hlt
cld
lret
ret
cli
cli
sar
cli
clc
stc
sti
iret
sar
push
jmp
mov
lock
test
rcl
cmp
hlt
icebp
xor
in
repnz
cmp
out
inc
in
and
jecxz
xchg
ss
cli
cmp
leave
sar
fcomip
cld
cmp
mul
fxch
lret
loopne
and
in
int
cs
out
icebp
iret
jmp
cld
cmp
xchg
jmp
in
xchg
jmp
aad
test
repz
fcmovnu
cmp
cli
cli
mov
aas
orl
ss
hlt
shr
cli
idiv
sar
repnz
fidivrs
fld
clc
cmc
clc
addb
out
repnz
loop
std
cmp
out
fidivrs
frndint
not
lock
fcmovnu
loopne
enter
icebp
cli
cmp
loop
aaa
fdiv
repnz
cmp
loop
cld
cmc
xchg
in
incb
shl
leave
out
out
in
cmp
call
mul
in
xchg
fdivr
clc
loop
in
repz
sub
xor
fadd
iret
ror
out
leave
xor
fcmovbe
test
fsubrl
inc
add
add
add
add
or
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
xchg
inc
jl
flds
jl
ret
ljmp
shl
int
in
cmp
icebp
into
out
stc
xor
push
rol
fcomip
fucomp
lret
fldl
shrl
clc
in
int3
call
fcmove
adc
out
addb
std
shl
std
in
into
jecxz
repz
sti
ffreep
lock
clc
sti
in
xchg
std
or
test
cmp
jmp
lock
ss
add
and
xchg
or
xchg
and
loopne
in
not
int3
fdiv
clc
stc
int3
repz
jmp
fiadds
call
xor
xlat
fcmovnb
hlt
aas
in
idiv
shl
shl
cli
std
int3
xlat
jmp
jmp
loopne
lds
icebp
icebp
stc
clc
cmp
not
lock
test
mov
fisttpll
jmp
ret
cmp
sarb
ror
icebp
int
cmp
rcl
loope
leave
out
call
nop
iret
repnz
call
fnstsw
loopne
loop
hlt
loop
xor
xlat
int3
rol
rolb
xor
aad
cmp
std
fcmovbe
rol
stc
xchg
rcr
mov
fimuls
aaa
icebp
repz
int
fnstenv
rcr
idiv
out
ffree
shl
cmc
in
mov
incl
aaa
sarb
clc
ss
or
cld
xlat
fsub
addl
call
ret
out
icebp
lret
into
shl
repnz
fcmovnbe
jecxz
loopne
sbb
jmp
lret
into
rcr
mov
out
hlt
xor
aas
repnz
loop
cld
ds
fsubp
fiaddl
lret
xchg
loopne
xlat
lret
xor
cmp
icebp
icebp
aad
test
fcmovu
cld
jecxz
in
out
test
hlt
shl
repnz
cmp
shl
decl
lea
fldl
ss
fdivp
loop,pt
ret
shl
into
les
out
in
ret
out
out
xor
aad
rcl
leave
in
aad
adc
lock
in
lds
adc
lret
in
xor
in
aad
fcmovbe
int3
jecxz
aas
fadds
aam
out
mov
addl
enter
sti
iret
or
sbb
icebp
jmp
std
mov
icebp
lock
shll
jmp
iret
cmp
cld
fdivr
in
int
xlat
fdivr
rcl
cmc
leave
stc
idiv
ret
repz
repnz
xor
out
fst
fadd
fdivs
std
jecxz
fdivr
ret
in
addl
mov
hlt
jmp
idivb
cmp
roll
cmp
ljmp
sbb
imul
fsubr
cmp
cli
jmp
ror
loope
ret
test
iret
mov
call
call
cmp
into
cmp
jecxz
rol
out
cli
out
mov
in
in
rcll
xlat
leave
ss
xor
sar
repz
shl
lock
jmp
out
iret
in
lret
out
shl
iret
cld
ljmp
jecxz
fldl
incb
cmp
shlb
aam
xlat
leave
cli
flds
ret
lds
lea
fmulp
xor
jecxz
fldz
ljmp
shl
fdivr
test
cmp
mov
jecxz
xor
cmc
clc
idivb
cmp
xorl
test
test
les
rorl
xor
cmp
into
out
cmp
loopne
inc
ret
fadds
addb
out
shl
fucomp
leave
out
aaa
sarl
fcmovnu
xchg
cli
lret
in
faddl
mov
fdivp
xor
fsubrs
fneni(8087
cmp
icebp
neg
fsubr
loop
testl
into
out
in
icebp
repz
cmc
fistpll
aas
aas
and
jecxz
lret
in
lret
fdivrp
enter
out
ret
xor
iret
xor
cmp
ffree
rorl
add
aam
aam
fstp
fisubrl
push
int3
rcrb
jl
flds
jl
xor
in
loopne
cli
add
fucompp
mov
iret
fcmovu
out
enter
xlat
loope
shl
sti
rcl
call
loope
xchg
fsubr
ror
xor
xor
cmp
dec
cli
rol
loopne
lock
mov
mov
lock
enter
imul
cmp
ljmp
aas
ret
clc
incl
out
aad
in
icebp
in
leave
out
rcl
repnz
aam
ss
icebp
sti
call
mov
loopne
into
rcll
loopne
not
in
enter
test
xlat
cli
sbb
loope
stc
xchg
enter
cmc
ss
shl
lock
int
stc
cmp
cld
in
aam
loop
lock
fdivr
jmp
cmc
in
sti
vpsubusb
iret
xlat
icebp
sarl
ds
ret
cmp
fucomp
fucomip
out
push
mov
out
xlat
clc
cmp
into
ljmp
decl
test
shr
iret
int3
in
iret
int
lret
fptan
aad
iret
in
dec
roll
in
fcmovne
adc
xchg
fadd
icebp
in
lret
xlat
out
fst
fstpt
test
cmc
shl
fcmovu
int
shl
enter
out
enter
xor
shl
fdiv
repz
xlat
clc
out
in
cld
lret
int
iret
icebp
xor
aad
in
jmp
lret
in
ret
sti
into
icebp
repnz
test
mov
int
mov
xchg
fcomi
mov
xor
in
icebp
stc
icebp
shl
cmp
rcl
xlat
rolb
jecxz
cld
int
loop
fdivr
ffreep
stc
in
fdivr
out
jmp
cmp
aas
inc
sti
mov
mov
addb
iret
in
jmp
ss
fcomp
test
ret
int
adc
orb
repz
lret
fistpll
fcmovnu
xchg
shl
sbb
call
jmp
rcl
ljmp
cmp
or
icebp
call
cmc
orl
mov
loopne
loop
lock
shl
sti
idivb
icebp
in
loopne
aad
aam
fisttps
call
out
in
hlt
out
call
in
mul
aam
sar
xlat
test
xchg
decl
fnstenv
xor
loope
cmp
ljmp
mul
idiv
into
fmull
cmp
xor
sarl
fdivr
shl
cmp
sar
jmp
repnz
call
call
out
shr
jecxz
loopne
idiv
jmp
popl
shlb
in
xor
stc
cmp
icebp
ds
rol
fadd
ds
jmp
out
int3
incl
call
enter
fincstp
in
aad
aad
aas
shl
aam
shr
rolb
xchg
mov
jmp
xor
loope
out
cmp
div
adc
out
orb
jecxz
out
iret
std
lock
cmp
ret
lock
and
rolb
leave
fidivs
ljmp
cmp
sti
fsub
repz
std
xchg
stc
lret
ffreep
fcmovu
mov
loop
ror
shl
sar
divl
stc
in
cld
mul
shl
fldl
ljmp
xor
xor
jmp
fdivrl
and
stc
cmpb
fmul
cld
sti
loope
mov
cmc
les
xor
xlat
fdivrs
sbb
cld
cmc
fcmovbe
out
ret
vpsubd
loop
cld
lret
call
cmp
xor
in
sti
shl
cmp
repnz
imul
test
repz
clc
out
enter
fidivrs
ljmp
div
fscale
jmp
loop
out
mov
jmp
jmp
int
cmp
cmp
sti
into
xlat
aad
test
fucom
cld
inc
jecxz
out
cli
fiaddl
ljmp
clc
idivb
xchg
rol
ror
call
into
fiadds
xlat
xor
stc
cmp
fcomi
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
push
dec
jl
lret
jl
xor
ret
out
xlat
fdivrp
aam
mov
rcl
out
into
sub
int3
out
cmp
icebp
fcmovbe
cmp
call
fadds
int
iret
enter
enter
divb
sbb
imul
ret
fcomip
xlat
xchg
orl
sar
out
cmp
icebp
shr
aam
testl
test
int
ljmp
rcl
hlt
lock
aam
mov
lret
mov
cmc
clc
clc
std
out
out
sub
shl
lock
clc
mov
lret
sti
std
cld
rorb
xor
in
out
icebp
int
cmp
xchg
mul
lret
lret
divl
loop
ret
div
fcmovnbe
sti
ljmp
flds
fsubr
in
mov
in
sub
in
test
cld
cld
xor
ljmp
ljmp
in
orl
ljmp
fcmovnbe
iret
out
hlt
test
ret
in
stc
imul
in
cmp
xchg
int
leave
stc
cmp
lret
cmp
xchg
call
xchg
jecxz
jecxz
xor
out
jmp
hlt
addl
std
clc
fxch
ds
cld
loop
push
aad
shrb
xor
cmp
cmp
stc
shr
lock
repnz
out
mov
call
in
out
ss
fcmovnb
sti
fidivrl
sti
aas
cmp
cmp
fsub
rorl
lret
lock
mov
out
ret
xor
xlat
in
std
in
cli
out
fiaddl
cmp
jmp
nop
loopne
rol
sub
in
rcl
fnclex
aam
ret
ds
enter
int
out
jmp
mov
out
aam
lret
lret
cmp
cmc
fadd
ds
loopne
loope
in
and
mov
int
iret
xor
cmp
ret
ffreep
test
loop
or
shr
shll
out
int3
ror
fcmovu
repnz
loope
aad
sbb
lock
xlat
lret
cli
mov
lret
lock
cmp
xor
repz
fcmovu
cmc
xchg
mov
incb
aaa
aam
cmp
xlat
out
fdivrl
aas
addl
hlt
mov
mov
ljmp
jmp
cmp
cld
idiv
lret
loope
inc
lock
int
shll
ljmp
fcomi
lds
sti
imul
out
lock
ret
int
in
std
call
rolb
addl
rclb
repnz
enter
fcom
in
test
cmp
orb
shr
int
out
ljmp
lock
in
shl
hlt
idivb
in
leave
in
cld
in
hlt
repz
in
xor
cmc
ds
ret
loop
shr
out
in
div
ror
in
cmp
std
cmp
int3
fldl
out
out
loopne
in
fmul
xor
int3
jmp
sar
shl
fsub
clc
loopne
jecxz
ljmp
cmc
cmc
in
xor
hlt
clc
into
fdivrs
roll
repz
mov
mov
repz
repnz
into
lret
std
cli
leave
xlat
and
ffree
lea
loopne
out
shr
in
jmp
cld
jmp
jecxz
loop
icebp
loope
rcr
in
cmp
int
cli
out
push
lock
ret
repnz
fcmovbe
not
in
loope
cld
aam
lret
jmp
in
cld
xor
shl
xor
xlat
shl
lock
sar
testl
in
sti
jmp
rcl
cmp
call
fcomp
shl
xlat
out
in
loopne
lret
pop
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
sbb
jl
lret
jl
call
rcl
xor
call
loop
into
aas
aam
rolb
shr
push
mov
out
stc
cmp
cmp
aam
sbb
loope
fcmovnb
incl
xchg
out
shl
mov
xor
aam
xor
enter
repnz
idiv
ror
std
vpmulhw
in
shr
cmc
in
into
into
cmp
out
sti
test
lds
jmp
fucom
ffreep
loopne
aam
out
fmulp
cmp
adc
fistpll
ret
addl
xchg
shr
stc
lock
jmp
lock
loopne
jmp
leave
fucomip
mov
filds
int
fcmovne
lret
movb
fdivr
fcmovbe
xchg
clc
fsub
and
lock
lret
icebp
fucomp
into
cmp
into
fcomp
cmp
test
fcom
out
fprem1
jecxz
int3
std
repz
rcr
idiv
cmp
icebp
call
into
cmp
filds
loope,pt
aad
sub
aam
cmp
aad
fsub
rcl
jecxz
ret
aad
loope
int3
jmp
jmp
in
clc
fnstenv
in
ljmp
jecxz
ds
xchg
in
int3
fdivr
xchg
out
nop
cs
call
ds
call
rolb
jmp
xchg
fmull
std
das
out
clc
rcr
ret
clc
sti
xlat
cmp
sti
out
in
fucomp
loop
mov
fcomi
int
lds
ss
out
xor
lret
fst
movl
loopne
mov
repz
fdivs
fucomi
fcomip
loope
jecxz
xchg
div
cld
out
leave
int3
enter
in
aam
repnz
in
rcl
xlat
int3
rolb
fstpt
loope
aam
lret
cli
xchg
mov
lret
in
cmp
xlat
loope
xor
out
idiv
repz
jecxz
out
mov
xlat
clc
call
out
into
fdivrp
cmp
cmp
sar
lock
stc
loope
enter
repnz
shr
lock
out
int
aad
in
aam
call
clc
repz
lret
call
mov
out
shr
test
xlat
ljmp
in
repnz
std
mov
aaa
loop
aaa
cmc
xor
sti
cmc
jmp
rolb
ret
jmp
repz
rolb
imul
repnz
repz
neg
ret
int
clc
aas
loope
neg
sti
out
test
mov
lret
mov
ret
shl
sarb
fildl
ret
lret
flds
xchg
shll
jmp
cmp
cmp
rcr
ret
jecxz
loopne
mov
fucomip
shll
cmp
or
iret
into
add
fmull
test
mov
mul
lret
jmp
sti
cli
sar
aas
jecxz
cmc
call
xchg
loopne
mov
leave
xor
ror
cmp
xor
leave
adc
sub
faddp
cld
aam
jecxz
lret
mov
out
into
xchg
xor
shr
out
out
aas
rol
sarl
fidivrl
movl
fdivp
mov
loope
xor
icebp
fadd
fdivr
sti
cmp
cld
fidivrs
and
mov
xchg
mul
sub
jmp
fcmove
loope
int
std
sti
aas
xchg
leave
cmc
xchg
in
test
ret
aad
loopne
lock
fldt
aad
aam
cmp
inc
idiv
test
std
xlat
loopne
jecxz
mov
repnz
loope
cmc
xlat
iret
xor
xor
in
aad
cld
call
rcl
repnz
jmp
mov
test
jecxz
icebp
cmp
cmp
shr
fdivrs
ffree
loop
cld
clc
add
cmp
xchg
call
xor
cmp
cmp
cmp
loopne
mul
fsub
mov
mov
out
pop
out
mov
cs
inc
inc
lock
dec
or
push
xor
mov
add
jmp
jmp
aad
shlb
push
neg
test
jl
add
ss
cmp
repz
sarl
loopne
fimull
in
nop
lock
jmp
fdivs
aaa
loope
aaa
addl
xlat
in
xchg
aad
ss
leave
stc
fcomp
out
xor
in
fistpll
iret
cmp
loope
mov
in
in
in
xchg
fdiv
int
rcl
call
loope
int3
xchg
test
rolb
out
lea
fdiv
ljmp
sbb
sar
std
sti
aad
orl
aam
rcr
repz
clc
faddl
in
cli
mov
xchg
dec
lret
rcl
stc
das
idiv
sti
shr
aam
idiv
fcmovu
into
ffreep
aam
ret
inc
testb
cmc
ret
out
fcmove
repnz
icebp
fdivrp
aad
hlt
ds
movb
in
test
repz
fmulp
sar
sar
stc
xchg
xchg
mov
test
aam
xor
repnz
shl
in
leave
hlt
aas
cmp
fcomp
adc
decb
xchg
repnz
lock
leave
jmp
xbegin
fdivrl
adc
xlat
sti
mov
in
fxam
icebp
mov
repz
out
cmp
cmp
ss
cmp
xchg
cmp
cld
test
leave
in
mov
jecxz
jecxz
cmp
clc
xor
cld
fcmovbe
ffree
adc
fiaddl
mov
mov
cmc
les
ss
shl
xor
sbb
aam
test
loope
in
lret
aad
ljmp
loop
in
icebp
fildl
loope
clc
orb
shl
icebp
into
out
sar
fistpll
lock
ror
icebp
fmul
aam
or
lret
mov
mov
out
loope
int3
lock
out
lock
ror
cli
roll
cli
sti
fpatan
lock
shr
in
leave
repz
hlt
xor
icebp
fdivrs
xor
addl
xchg
fsubrp
mov
cmp
cmp
fucomip
jmp
test
repz
cli
test
dec
popl
out
rcl
out
cmc
fucomi
jmp
stc
cmp
stc
les
fldl
xlat
xlat
int3
sarb
cld
fidivrl
hlt
aad
ljmp
cmc
test
filds
lret
xor
out
cmp
stc
idiv
cmp
aas
cli
cmc
addl
out
out
ljmp
repnz
std
loopne
hlt
cmp
stc
loopne
stc
jmp
stc
jmp
test
xchg
and
fcom
fcmovbe
aad
out
repz
out
test
rol
vpaddsw
test
xor
out
xor
rcl
into
icebp
sar
adc
sti
cmc
aam
cld
int
sti
nop
out
ss
xor
repz
fsubr
aam
jecxz
in
loopne
clc
out
int3
out
hlt
xor
out
das
out
div
icebp
jmp
out
sti
cmp
sbb
test
shl
in
iret
repnz
loop
shll
fcmovu
push
lock
mov
lret
xchg
loope
aam
lret
jmp
xor
out
vpslld
cli
repnz
lret
cmp
loope
ljmp
jmp
sti
cli
clc
jmp
cmpl
loopne
test
loope
std
out
shl
xor
int
aad
xlat
leave
cli
lock
fcos
cmp
in
in
enter
into
jecxz
xchg
aad
xor
out
out
ljmp
out
cmp
fndisi(8087
in
and
orl
in
out
ljmp
in
fdivrs
rol
cmc
adc
clc
lea
loope
xor
xor
in
leave
lock
hlt
idivb
iret
out
hlt
std
mov
mov
mov
cli
fdivrp
or
aad
int
ss
hlt
cmc
fucomip
ret
neg
out
fadd
test
add
add
rol
aad
aad
fcmovne
scas
push
mov
scas
cmp
mov
jl
lret
jl
cld
jmp
int
into
cmc
xor
ljmp
jecxz
cli
sar
cli
orb
jecxz
xchg
mov
mul
das
leave
mul
enter
std
fildl
loopne
clc
std
fsubr
xchg
in
test
into
icebp
cli
repz
clc
clc
out
call
clc
aam
stc
loope
aad
cmp
out
leave
rorb
sub
aam
repz
lret
aas
cmc
fpatan
test
call
xchg
out
stc
ret
icebp
lock
ss
ss
cli
aam
aam
fcmovnu
test
mov
out
les
repz
into
loope
cmc
jmp
ret
in
rol
fcomp
jecxz
decl
out
repnz
aad
loopne
in
in
lock
div
xlat
repnz
mov
repnz
test
test
fimull
in
in
shrb
enter
aas
cli
cmp
out
shl
cmc
jmp
mov
iret
out
test
cmp
sti
xlat
ds
mov
inc
jecxz
cli
cli
xchg
xor
xor
in
xor
int
in
fsubp
rol
jmp
in
fimuls
lret
leave
out
repnz
aad
std
fst
rcr
fucom
movl
ljmp
rol
clc
call
fidivs
roll
out
out
in
loope
sti
jmp
out
aaa
cmp
ljmp
jmp
loopne
rol
xchg
shl
sti
cmp
loopne
rcr
icebp
repz
cmc
loope
clc
leave
test
fdivrp
icebp
cmp
xor
in
cmp
ds
aam
jecxz
addb
leave
fdivrp
loopne
xchg
xchg
in
hlt
out
shlb
sarb
iret
fdiv
aam
shr
sti
into
xchg
xlat
out
test
fcmove
jmp
loop
lea
cmc
clc
fcmovne
int3
sti
call
jecxz
xor
out
xchg
xor
enter
lret
leave
in
cmp
in
leave
cmc
cmp
aad
xchg
aas
sbb
xchg
aam
out
xlat
call
repz
jmp
out
cmp
dec
testb
mov
lock
icebp
lret
icebp
icebp
sar
in
out
std
cli
mov
repnz
lret
lds
int3
in
jmp
hlt
ret
fdivrl
fiaddl
jmp
mov
mov
shl
into
lret
jmp
test
repnz
fadds
repz
cs
shr
repnz
in
cli
std
cmp
cli
aam
cld
hlt
in
out
mov
out
iret
lock
hlt
xor
fstpt
aas
out
fucomi
ret
out
aad
clc
out
iret
or
in
aam
int
fmul
lret
cli
xlat
sar
mov
loop
in
int
mov
ret
ljmp
aam
cmp
jecxz
xlat
fcmovu
test
testb
out
out
jecxz
test
cmc
iret
aaa
rol
loop
sbb
aam
out
xchg
out
decb
test
repz
out
cmp
shr
aas
stc
shr
fmul
call
clc
int3
std
nop
shl
ss
out
xor
fcomp
fdivrp
fstp
addb
xor
out
loope
in
hlt
out
int3
sar
fdivp
xchg
fadds
fcmovnbe
mov
fsubrp
out
das
ljmp
in
iret
rcl
cmp
xlat
leave
sti
or
into
xchg
out
xchg
into
ret
ss
in
in
jmp
xlat
cmp
repz
faddl
std
jecxz
xor
fcmovne
shl
fcmovnu
fstpt
out
fst
stc
testb
xchg
fmuls
aaa
repnz
cmp
lret
fdivp
out
int3
iret
rolb
xchg
mov
loop
fdiv
lock
jmp
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
test
jl
add
into
ljmp
in
aad
ret
loope
adc
jmp
cli
test
repz
jmp
repz
fld
leave
les
fucomip
jmp
roll
repz
loop
mul
into
repnz
in
loop
sub
int3
jmp
cmp
in
shl
sar
in
clc
enter
in
mov
mov
int3
int
cmp
cmp
clc
aam
mov
in
test
xchg
loope
cmc
aad
lock
lret
iret
sarb
fstp
xlat
orl
iret
repnz
leave
shr
cmp
int3
icebp
lret
sti
lret
lock
testb
xchg
loopne
cmp
imul
int
out
xlat
not
fdivr
test
aam
jecxz
leave
clc
call
xor
leave
les
xor
aam
aam
lret
test
ds
jmp
fmul
out
test
mov
repz
cmp
aad
xor
cmp
out
fcmovnu
shl
jmp
out
out
clc
test
call
mul
loope
enter
cmp
fcmovnb
fucom
out
loop
stc
int
std
loopne
aas
rol
aad
lock
fnstsw
in
sbb
shl
mov
test
int3
shl
aas
iret
iret
cmp
out
fsin
cmp
loope
shl
aam
enter
mov
xor
aaa
int3
cmc
aas
shr
xchg
aad
loope
stc
int3
fildl
shl
repnz
xor
cli
repz
dec
clc
hlt
fxch
fucompp
jmp
fmull
jmp
xor
das
divb
xlat
cmp
jmp
fimull
incb
stc
ffree
out
cmp
std
cli
clc
ret
fcom
leave
nop
test
xor
repnz
cmp
cmp
into
ret
fcmovne
cli
in
orb
call
aad
cmp
loop
in
addl
incb
loope
iret
sti
cmp
leave
aad
cmpb
ds
xchg
sar
fisttpl
nop
cli
lock
iret
not
repnz
shl
jmp
mul
out
ds
cmp
movl
cmc
hlt
lock
ror
cmp
fdiv
cmp
sti
test
loope,pt
ret
stc
fmuls
call
in
sti
xor
ror
out
rolb
sti
lret
lret
icebp
int3
fucom
rcr
icebp
cmc
in
xor
ss
in
and
in
adc
sti
xchg
xchg
jecxz
std
lret
out
lret
cmp
neg
xlat
jecxz
hlt
ret
jecxz
and
rcr
out
test
jmp
in
dec
cld
xor
int
cmp
out
test
mov
out
rorb
int3
cli
lret
cmp
ds
test
leave
add
std
call
lret
iret
sti
lret
enter
cld
rcl
fsubr
clc
mov
fucomip
mov
loopne
loop
stc
xor
ror
fsubrl
rcl
cmp
iret
test
std
enter
lds
lret
mov
leave
leave
loopne
xor
xlat
fdiv
std
in
cmp
rcr
hlt
xchg
sti
nop
cld
cli
test
adc
xor
out
std
icebp
aam
out
std
in
stc
loopne
decb
roll
hlt
test
out
cmp
std
int
in
lock
xlat
fmulp
test
or
test
in
stc
divb
aad
cmp
shl
cmc
ror
fcomp
xchg
jecxz
iret
xchg
into
lret
out
int
cmp
lret
into
stc
sar
in
test
loope
mov
leave
aaa
out
aas
cmp
clc
shl
mov
out
jecxz
fiadds
in
cmp
fidivrl
xor
xor
mov
add
jmp
ret
int
lret
sub
rcl
fs
lret
jl
loope
fdiv
xchg
shr
icebp
ljmp
cmp
fcomip
leave
shl
int
call
repnz
sub
xor
leave
call
into
cmp
out
sar
sar
sbb
ffree
loope
orb
xlat
fucomp
cmp
add
test
loop
repnz
clc
out
popl
out
iret
fdivrl
sti
int
rcl
cmp
fdivrp
jmp
rcr
repz
in
iret
stc
xor
icebp
into
cmp
cmp
out
aad
shr
in
int
lret
xchg
jmp
ror
in
xor
ljmp
neg
fcmovb
cmc
jecxz
std
loopne
test
in
aad
fdivrs
ror
div
call
hlt
call
fsubr
lret
jecxz
rolb
ret
xlat
fdivp
cld
out
xor
in
call
fiaddl
out
shl
enter
out
in
cmc
idivb
rcr
iret
sar
cmc
in
out
iret
shl
enter
ss
xor
cmc
fdivrl
cli
mov
xchg
mov
xchg
call
lock
cmp
adc
out
mov
fdivr
fcmovb
fucomp
xchg
aam
hlt
fsubr
out
div
call
cmpl
cmc
loope
fsubp
loopne
loopne
idiv
loop
repnz
out
aaa
xlat
int
loop
in
out
cmp
out
ret
lret
test
xchg
xchg
jmp
xor
fstpt
shr
loope
fscale
fdiv
roll
out
test
repnz
stc
lret
aaa
out
idiv
jecxz
not
rolb
fadds
cmc
xchg
ds
xor
fcom
std
fdivrs
out
hlt
cld
std
xchg
adc
idiv
stc
fdivr
leave
xchg
loope
out
jecxz
xor
ljmp
iret
ret
lds
in
loopne
in
call
mov
mov
in
jmp
stc
in
cmp
into
repnz
cmp
fdiv
out
in
cli
fucom
mov
cmp
fstl
lock
xor
hlt
cmc
adc
ret
repnz
mov
loope
test
ljmp
ss
ror
int
test
aas
in
testl
fildll
xor
cmp
aad
hlt
icebp
sar
in
loopne
cmp
loopne
shl
in
fadd
test
ret
stc
leave
stc
jmp
fsubr
aas
adc
fld
aad
cli
ret
stc
jmp
into
mov
aam
xor
cmc
out
lock
stc
lock
xlat
test
orl
xor
in
int3
ljmp
rcr
fcmovnb
rcl
jmp
loopne
repnz
repnz
in
int
shlb
cld
rcr
jmp
test
adc
rolb
sbb
lea
xor
call
rcr
repnz
loopne
sbb
add
icebp
lret
cld
lea
out
in
xor
xor
rcl
out
aam
repz
icebp
rol
cmc
test
test
in
orl
mov
cmp
shl
xchg
test
testb
lret
leave
bnd
int
lret
ss
cmp
roll
ret
ljmp
icebp
out
hlt
int
ret
div
std
cmp
cld
aam
cld
xlat
into
loopne
rorl
out
jmp
test
lock
shl
xor
loopne
fdiv
sbb
rclb
out
out
out
cmp
addl
repnz
test
out
out
enter
divb
loop
not
sarl
ss
repnz
repz
cmp
sti
std
ljmp
icebp
xchg
fnstenv
loop
iret
shl
cmp
cmc
stc
fdiv
inc
addb
in
sti
sub
mov
jecxz
mov
mov
mov
jmp
ds
int
int
int
mov
xor
mov
icebp
mov
add
ret
into
in
fdiv
ss
repnz
dec
call
jmp
mov
mov
jecxz
int3
call
cmp
clc
icebp
xor
std
repz
xchg
clc
fisttpll
iret
aad
int
int
in
into
out
jmp
iret
int3
shl
rcr
jmp
mov
xchg
into
ror
stc
jmp
iret
cmc
call
ror
shl
xchg
in
cli
in
xchg
rorl
fld
cmp
clc
xbegin
aad
and
aad
in
clc
std
leave
clc
mov
in
hlt
aam
cmc
cmp
cmp
xlat
lret
stc
jecxz
mov
leave
fdivrp
loope
out
repnz
xor
int3
ror
fdiv
test
adc
addb
in
vpaddw
xchg
shl
nop
xchg
ds
shr
lock
cmp
repnz
shl
test
cli
fincstp
enter
mov
cli
mov
fbstp
aam
cmc
fdivs
fstpt
fincstp
std
cmp
roll
mul
jecxz
out
stc
mov
in
xchg
cmc
rcl
aaa
ret
jmp
fidivl
cmp
cmp
roll
mov
lds
mov
add
cmc
cli
cmp
fadds
fidivrl
into
call
cmp
fucom
or
jmp
lock
shl
repz
fdivrs
div
not
fucom
mov
sti
clc
ljmp
shl
out
les
jmp
clc
fcmovnb
or
fdivrl
call
out
jmp
jecxz
jmp
repz
icebp
int
call
clc
clc
cmc
fmul
mov
std
inc
fldz
imul
out
fmul
fsubrp
repnz
aam
rcr
fiadds
int3
test
lock
jmp
int
ljmp
fucomip
fadd
in
sarl
mov
repz
icebp
xor
leave
shr
into
int
in
sar
mov
test
mov
fcomi
in
ror
rol
fcmovnu
iret
lock
fcmovnbe
cmc
lock
rorb
std
rorl
in
clc
ret
fldlg2
fadd
fsubrp
cli
loope
cmp
int
in
and
mov
int
sar
icebp
sar
ror
out
jmp
hlt
fnstcw
ljmp
xchg
test
in
int3
lock
fucomip
aad
cmp
fsub
cmp
cli
mov
out
xor
lock
xor
aam
int
loope
mul
fucomi
mov
loope
test
icebp
in
test
in
call
in
fistpll
cmp
test
loop
fsubr
std
loopne
fcomip
xor
shr
sti
aam
loope
lock
repz
and
xchg
fimuls
xor
in
cld
jmp
clc
test
shl
leave
fsubp
in
out
xchg
cli
out
int
cs
shrb
out
cmp
xlat
fstp
test
ljmp
xchg
repnz
in
lock
xor
lret
in
leave
mul
cli
hlt
sbb
lock
mov
int3
cli
into
test
and
repnz
cmp
sti
ret
and
aam
cmc
aas
mov
test
in
repz
in
enter
std
cmp
rcl
rcl
mov
lret
iret
xchg
int
mov
loop
lock
loope
in
xlat
in
test
rol
out
fildl
in
test
out
fcmovnu
hlt
call
cmp
jmp
mov
jecxz
lock
rol
call
out
lock
int3
shl
incb
xlat
call
adcl
in
cmp
xor
in
lret
cmp
sti
out
stc
icebp
fdivr
loop
enter
cli
iret
repz
idivl
loope
fidivrs
hlt
repz
adc
and
fcmovu
xchg
mov
ds
lret
ret
sarb
leave
cld
std
into
movzwl
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
push
xchg
or
jl
add
xchg
mul
testl
lea
in
ljmp
clc
cld
stc
clc
fadd
cmp
mov
into
fmul
loope
out
ror
fmul
aad
cmp
rcl
mov
mov
xchg
mov
shrb
hlt
in
out
out
std
fistpll
int3
sar
cmpl
in
jmp
cmc
sub
rcr
sar
enter
loope,pt
testb
incb
into
mov
loopne
lret
ljmp
rcl
adc
cmp
mov
std
ret
ret
in
std
mov
jmp
aad
aad
cmp
fsin
loopne
aas
les
xchg
mov
into
lea
cs
stc
ror
cmp
out
in
shl
repnz
cli
fmull
movb
shl
fprem1
std
fabs
sub
out
into
call
call
out
aaa
ror
fxch
sub
in
sti
int
cli
lock
rolb
leave
fsubp
icebp
out
icebp
mov
mov
lret
cmp
call
cmp
cmp
les
repnz
jecxz
int3
iret
sub
cmpl
cli
cmpl
sti
fiadds
jmp
cmp
icebp
int3
cmc
fucomi
incb
shl
fildl
mov
repnz
test
jecxz
jmp
repz
enter
rcr
test
mov
ret
fmuls
orb
stc
enter
lock
cmp
cmp
fnstcw
repnz
and
icebp
loop
out
loopne
xor
out
int
aad
call
jecxz
out
neg
ret
ljmp
fiadds
aad
shl
out
std
cld
ds
in
out
xlat
out
xchg
out
leave
jecxz
in
repnz
xor
jmp
ffree
ss
lret
hlt
add
ljmp
mov
loopne
xor
leave
clc
out
out
cli
enter
cli
mul
idiv
clc
aas
repnz
call
xchg
enter
sub
imul
lret
sti
loopne
shl
ds
out
aas
lret
cli
or
out
loop
repnz
fcmovnb
fyl2xp1
xor
ljmp
fdivr
loope
xchg
loopne
stc
orb
icebp
xor
in
hlt
leave
fsubr
fdiv
fdiv
rol
in
ret
ror
repnz
in
fxam
sti
mov
fsubp
subb
xor
in
enter
ror
cmp
aaa
ss
fdiv
sti
repnz
mov
loopne
xchg
into
aaa
clc
xor
stc
lock
call
fcmovnu
aam
cld
loopne
mov
fxch
repnz
in
div
fcmovnb
das
out
cmp
ds
xlat
xor
fsubr
mov
ds
mov
jecxz
lds
aaa
xor
cmp
into
cmp
ret
add
fmul
sti
repnz
loop
rol
int
int
cmp
fstpt
testb
jmp
dec
in
rcll
cmp
int3
into
in
leave
lret
loopne
icebp
loopne
fstp
hlt
test
sti
cld
mov
cmc
enter
xor
icebp
cli
fsubrp
loop
out
addl
ljmp
ljmp
ss
cmp
cmp
aad
fmuls
out
jmp
iret
repnz
out
hlt
fcmovbe
hlt
xor
fidivs
std
fdivr
cmc
test
frndint
incb
jmp
fnsave
divb
fucomip
int3
in
cmc
std
sti
fcomp
loopne
test
mov
jecxz
xchg
shl
out
loope
cmp
cmp
div
xor
cmc
lock
out
fcomi
ljmp
jmp
std
xchg
jmp
cmp
shr
cmp
loope
call
lock
call
icebp
lret
jmp
out
lret
hlt
stc
iret
cmp
aam
in
roll
dec
rcr
in
inc
cmp
jmp
aad
enter
fsts
jo
fdivs
jl
add
test
subl
repz
jmp
call
xlat
xor
mov
rcr
mov
addb
cld
loopne
ret
xor
clc
jmp
loope
repz
fiaddl
ret
incl
jecxz
fldpi
cmp
cmp
jmp
cmp
repz
fnstsw
fmul
jmp
loopne
cli
incl
rcl
xor
cmp
in
out
out
faddl
mov
fld
out
aas
iret
icebp
imul
jmp
fcmove
shr
repnz
in
icebp
ret
fucom
fmul
into
in
in
ror
out
in
fldl2e
cmp
repnz
fdivrl
aas
loopne
fcmovnbe
fdiv
fneni(8087
fucom
xchg
std
mov
ret
out
in
jmp
xlat
aad
aaa
shl
cmc
clc
lock
std
mov
std
enter
lret
xor
in
fsubp
hlt
out
std
cli
into
icebp
cmpl
jmp
int
jecxz
int3
lret
aam
out
stc
leave
fmul
repnz
int3
aam
ljmp
repz
lret
ljmp
mov
into
mov
aam
fldln2
cmp
ret
test
mov
std
faddl
aad
xor
xor
leave
ljmp
fcmovu
iret
hlt
loope
in
sbb
lret
fisttpll
cmp
leave
into
call
testb
loop
jmp
mov
shl
jmp
repnz
in
aad
and
adc
call
loope
call
shrb
call
sar
int3
rcl
ds
fcmovnu
neg
add
fucomp
cmp
hlt
shrl
jmp
cmp
std
icebp
stc
std
stc
fidivrl
in
aam
lret
leave
fcmovnbe
out
or
int3
cmp
fcomp
xor
hlt
fcmovu
cmc
test
add
repz
repz
sub
in
aad
out
aad
shr
cmp
cmp
ret
cmp
fucomp
into
in
out
fsub
repnz
jmp
repz
std
in
bnd
xchg
jecxz
iret
out
xchg
lea
mul
ret
enter
std
std
loope
sar
fndisi(8087
mul
std
test
std
fisttps
xor
out
lret
iret
jmp
jmp
cmp
sti
icebp
icebp
sar
fyl2xp1
test
sti
loop
fucomp
nop
out
int3
shl
clc
xor
in
in
sarl
cmp
stc
cli
ds
out
mov
lret
shl
aaa
int3
rol
sub
fmul
std
cmp
fdiv
aad
rcl
xlat
fld
in
lret
fisttpl
in
ljmp
lock
int3
aad
loope
clc
in
ret
xchg
cmp
cld
xchg
cmc
and
stc
repz
repnz
in
repz
loope
icebp
jecxz
cld
rolb
nop
out
sub
in
xor
iret
in
hlt
repnz
sti
rcr
std
repz
aas
mov
lret
mov
in
loop
test
repnz
fdivrs
out
cmp
ret
hlt
decb
jmp
mov
xlat
call
not
in
fcomip
cmp
in
xlat
in
jmp
jmp
fildll
sub
xlat
aad
cmp
in
cli
loope
rol
leave
out
sti
fadd
int3
incl
into
xor
xlat
sar
fnstenv
hlt
lret
int
out
loop
xlat
out
xor
in
in
in
ror
in
sarl
in
rcr
idivb
sbb
rcl
xlat
inc
jmp
fmuls
lret
iret
loop
xor
cmp
sti
shr
aas
cmp
in
mov
out
out
xchg
ret
hlt
enter
idivl
repnz
or
ret
cmc
xchg
loopne
ds
lea
icebp
xor
div
clc
jmp
xchg
cli
aad
cmp
xlat
sbb
fcmovnu
xchg
out
repnz
int
aad
call
fsubr
int3
std
neg
fst
out
leave
imul
in
in
mov
loopne
repz
call
clc
inc
jmp
lret
xlat
aas
fst
fcmovne
mov
imul
lret
jl
iret
repz
lock
fadd
in
lret
std
cmc
lock
lret
ljmp
cld
roll
iret
iret
incl
hlt
mov
out
xchg
loopne
mov
fidivs
clc
cmp
cmp
cmp
cld
sti
cmp
lds
ret
std
in
lret
int
shll
ss
les
jmp
aad
loopne
rolb
lret
test
test
xor
cmp
cmp
adc
in
lock
test
ljmp
mov
xor
les
out
repnz
repz
fdivr
rol
jmp
incb
fimull
jmp
out
aaa
aas
sar
aad
out
rcl
cmpl
aam
xor
lret
aas
repz
xlat
ret
repz
add
test
sub
vpmulhuw
call
stc
aad
loop
cmp
lock
loop
call
std
call
xchg
cmc
jmp
fcmovbe
not
fadds
fcmovnb
fstp
in
out
addb
repz
shl
out
lock
notrack
repz
repnz
sarb
std
xchg
loop
iret
out
cs
xlat
aam
dec
stc
fdivp
loop
jmp
fsubp
enter
mov
xor
ret
ss
fprem
in
testb
ffree
loopne
out
loop
rcr
repz
jecxz
xor
out
rcl
aas
ds
fucom
idiv
orb
enter
iret
sub
in
stc
icebp
std
ds
out
xor
shl
sti
stc
stc
shl
subl
stc
repz
lret
test
ds
cli
fyl2xp1
clc
out
cmc
loop
jecxz
test
int3
shl
in
jmp
in
cld
lret
rcr
clc
rcl
aad
sbb
enter
lret
int3
iret
mov
in
in
cmp
in
std
lock
fdivr
cld
loop
roll
in
lret
call
stc
cmp
stc
loope
stc
clc
fistpll
lock
jmp
mov
jmp
iret
repz
fsubrp
xor
out
lock
aaa
lret
lret
ds
lock
fisttps
sbb
adcb
repnz
cmp
fnstsw
rol
fnstsw
out
mov
in
aam
dec
xchg
adcl
iret
xor
aas
fstp
div
out
test
repnz
shl
iret
xchg
rorb
icebp
loopne
not
repz
stc
in
loope
sub
cli
jmp
fiaddl
repnz
cmp
cmp
in
fucomp
icebp
aam
aad
ret
std
hlt
test
xlat
mov
in
shll
fnstenv
stc
in
rcl
ljmp
cld
rcr
and
test
aas
rcl
sub
rcr
test
rcr
movl
xchg
iret
icebp
mul
iret
lds
repnz
ret
sti
cmc
loopne
shl
les
in
mov
shl
in
iret
lock
in
loope
xor
xchg
stc
iret
xchg
mov
imul
shll
sti
xlat
ss
int
cmp
jmp
cmp
loopne
out
fcmovne
in
out
stc
repnz
xor
int3
in
pushl
not
sar
addb
ljmp
repz
out
out
in
xor
fdiv
int
sti
iret
hlt
sub
ffree
sti
fcmovnu
lret
iret
nop
loop
add
in
cmc
jmp
into
cmp
int3
ds
fadd
test
add
sti
loop
rcr
repz
cmc
repnz
xlat
lret
repz
xchg
aam
loop
enter
fldl
cmc
aad
stc
out
cld
std
fnstcw
cmp
in
fimuls
mov
cld
nop
fimuls
out
xor
out
cld
fcmove
ss
sarl
out
mov
jmp
rorb
test
lcall
jmp
int
into
fcmove
fst
aam
lods
push
add
xchg
mov
lret
jl
mov
ret
xchg
hlt
leave
xor
out
fadd
in
lret
clc
cli
sbb
in
rcl
mov
cmp
orb
sub
out
enter
cld
xlat
std
lret
xor
xchg
cmp
loopne
loopne
sti
clc
les
xchg
into
leave
shl
lret
cmp
out
cmp
test
stc
icebp
mov
std
test
mov
lret
fisttpl
lret
lock
cmp
int3
in
int3
fmul
aam
cmp
shl
cmc
fcmove
xchg
dec
filds
repz
fstp
repnz
lret
rcr
iret
cmc
ds
lret
neg
enter
nop
xchg
sub
jmp
cmp
stc
call
in
rcr
std
addl
decb
out
jecxz
fsubr
lock
rcr
loope
fdivr
cld
ret
fst
std
test
out
out
icebp
into
in
xlat
jecxz
lret
in
fcmovu
icebp
aam
ss
jecxz
out
loopne
aad
fadd
fadds
jmp
lock
in
cmp
cmc
cmp
stc
call
idiv
and
leave
mov
fmulp
out
xlat
out
into
cs
loope
jecxz
aaa
test
shl
fst
cmp
fucomi
xor
jecxz
ds
leave
fcom
cmp
out
and
addb
out
cs
int
in
std
sti
icebp
leave
cmp
ds
std
xchg
test
sti
ljmp
loop
lret
into
cmp
enter
lock
xlat
vpsubusb
cld
xchg
out
mov
hlt
fdivs
xor
sarl
cmp
xorb
fprem1
stc
lret
repnz
iret
out
repz
loop
repz
in
cmp
rolb
mov
out
jmp
xchg
loop
sub
xor
iret
cmp
cli
icebp
mul
ds
loope
mov
stc
repz
int3
aad
shl
aam
bnd
enter
neg
jecxz
call
xlat
shr
addl
repz
lret
repz
fdivr
in
into
icebp
xor
sti
int
out
test
repz
jecxz
fsubrp
mov
in
jecxz
dec
xor
in
lret
cmp
neg
rolb
cld
call
mov
icebp
ror
into
ljmp
loop
cmp
rol
ljmp
sbb
iret
lret
in
sub
int
sar
icebp
xor
ds
sbb
out
out
loopne
xchg
shr
ror
loopne
ror
ljmp
cmp
out
repz
test
sub
xor
lock
imul
aad
icebp
icebp
clc
addl
ret
fdiv
faddl
jmp
in
fptan
icebp
cmp
test
repz
neg
out
rol
fnstsw
fdiv
mov
nop
icebp
jecxz
rorl
iret
stc
aaa
div
jmp
cmc
cmp
cmp
ret
jecxz
std
loop
f2xm1
ret
ror
hlt
iret
cmp
in
cmp
cmp
rol
repnz
cmp
out
fincstp
divl
enter
fcmovu
ss
ret
cmc
fdiv
lock
rorb
cld
rcl
jmp
fdivrs
shr
out
aas
cld
int
iret
sar
in
orb
icebp
lret
jmp
enter
aas
repnz
shr
out
in
fdivr
movl
mov
ljmp
cmp
xlat
hlt
lret
sarl
loop
filds
in
cld
test
rcr
shlb
iret
cs
lret
xor
ret
lret
repz
sti
loope
jecxz
or
cmc
int
ss
hlt
int
sarb
ret
xchg
les
xrelease
lret
cmp
les
test
xor
cld
fsubrp
cmc
loop
ret
sti
loopne
sti
ljmp
xor
ss
clc
jmp
dec
jmp
out
test
mov
lret
xor
in
lock
jmp
cmc
rorb
adc
roll
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
dec
mov
jg
lret
jl
in
cmp
aaa
repz
aad
lock
mov
sti
sub
xchg
aad
xor
ret
in
xor
loop
out
aam
addb
int3
lret
cld
int
lret
xor
sti
ss
jmp
cmp
aad
not
test
enter
fiaddl
shr
sti
shl
stc
in
neg
rcl
cmp
out
jecxz
clc
loope
leave
mov
testl
ror
aad
cmp
in
std
lret
ret
cmp
xor
in
cli
int
lret
in
hlt
loopne
int
xor
stc
in
aam
repnz
rol
aad
mov
lret
enter
jecxz
xchg
in
leave
xlat
xor
iret
iret
leave
ror
cli
jmp
lock
roll
pop
repz
in
xchg
cmc
ret
jecxz
leave
lock
int
lret
ljmp
jmp
jmp
out
rol
loope
repnz
aaa
std
out
lock
cmp
iret
aas
cmp
xlat
xchg
mov
loop
repnz
cmp
std
aas
loop
fdiv
ret
xlat
lret
out
divb
icebp
hlt
out
xor
in
int3
ror
sbb
loope
cmc
sti
jmp
fucomp
xchg
xchg
rcl
in
lret
in
loop
hlt
in
sti
enter
int3
int3
ret
cmp
dec
in
loopne
into
orb
aam
div
shl
aas
iret
xor
faddp
rol
rolb
mov
sti
rcr
loopne
jecxz
in
jmp
neg
shl
cmp
fadd
roll
in
xchg
sub
ljmp
ljmp
hlt
aam
faddp
xchg
aam
stc
out
loop
aam
repnz
cmp
stc
fucomi
sar
ret
repz
shl
shl
shl
mov
out
mov
into
test
enter
xor
fidivrl
in
cmp
cld
aas
cmc
addb
jecxz
fcmovu
mov
aam
idivb
int
fcmovb
clc
in
iret
xchg
fsubr
out
fsub
ljmp
loope
sub
test
clc
std
aaa
sub
cmp
jmp
fmulp
enter
orb
icebp
iret
aam
fnstenv
call
div
mov
cmp
lret
out
fiaddl
int3
aam
ss
cmp
rcr
cld
repnz
jmp
mov
in
mov
loopne
xor
loop
neg
call
neg
jmp
loopne
mov
in
test
jecxz
out
rcr
cmp
fsqrt
std
ret
ret
and
in
fmul
out
leave
xchg
mov
leave
hlt
in
xor
enter
fstp
cmp
std
sar
fcmovnb
mov
lds
jmp
cmp
movb
aad
fstp
cmc
jmp
mov
and
fadd
cmp
out
xor
mul
test
mov
aad
enter
test
xor
xor
cmp
in
lret
lret
shl
lock
aas
cld
aad
aad
adcb
lock
ljmp
lock
sub
in
iret
xlat
clc
rcr
sub
sar
addb
jmp
int3
rcr
div
rol
in
shl
jmp
fsub
enter
int
call
int
out
leave
neg
ror
ffreep
cld
out
bnd
out
cmp
cld
filds
cli
neg
cmp
pushl
shr
rol
imul
call
mov
cli
xchg
lock
aaa
jmp
cmp
repnz
loopne
fmull
rcr
xchg
cs
loopne
shl
xor
stc
into
shr
cmp
rolb
out
loope
lret
hlt
jmp
ror
xor
leave
neg
cli
aam
ljmp
ret
lret
imul
cli
test
out
lock
jmp
out
lret
stc
icebp
idiv
xlat
mov
jmp
ror
ds
ret
or
xchg
pop
je
add
lret
jl
jmp
call
into
out
cmp
cmp
cmp
fildl
loopne
std
fsub
in
loope
leave
xor
repz
std
call
rcl
fildl
jmp
loop
lock
cld
mov
repnz
int
ss
call
loop
sar
in
test
xchg
int
loop
inc
jecxz
cmp
lret
hlt
enter
out
cld
xchg
ret
cli
enter
out
xchg
mov
jmp
stc
stc
repnz
ds
into
neg
incl
ljmp
xchg
fsubr
lret
out
stc
cmp
sar
into
cmp
shl
repz
loop
fucomip
lret
mov
lret
in
xor
fabs
enter
cmp
fcomip
lret
xchg
jecxz
jmp
xchg
out
xlat
out
shrl
cmc
aad
cmp
cmc
repz
cli
fdivrl
faddp
repnz
les
jecxz
xor
lock
icebp
fadd
leave
cmp
out
cmp
in
shl
xchg
ljmp
iret
lret
ror
jmp
fmul
jmp
loop
rol
jecxz
cld
ret
std
mov
rcr
iret
shl
out
out
out
rcr
pushl
xlat
hlt
cmc
aas
and
sar
loop
loope
out
sub
repnz
out
int
iret
sub
shl
rcr
idivl
jmp
out
rorl
in
fcmovnu
rcl
out
test
imul
aad
xchg
fcmovbe
in
mov
test
out
call
aam
lret
stc
aam
cmp
xor
fdiv
test
test
inc
fucom
xlat
in
repz
ret
sub
aaa
loop
cmp
cmp
into
cmp
sarl
clc
test
aam
or
rcr
xchg
loope
aad
fdivs
fnstcw
cmp
std
sar
aad
test
loopne
mov
leave
ss
xor
shl
fildl
rcr
test
in
mov
fcmove
shr
in
das
in
jecxz
jmp
out
sar
into
test
in
fisttps
or
cld
test
shrl
fsubr
ljmp
xor
sar
jmp
orb
rcr
xor
lret
ljmp
aaa
idiv
mov
roll
std
out
xchg
les
int
ss
in
in
cmp
std
sarl
hlt
cld
std
out
nop
clc
mov
call
out
lock
cmp
lock
testl
loopne
mov
out
out
rcr
fdivp
cmp
aad
in
std
les
std
rcl
aam
aam
cmp
ror
int
ret
fsubr
in
shl
lds
xchg
repz
cmc
xlat
enter
std
cli
cmp
in
aas
ljmp
xor
jecxz
loope
ljmp
int3
lret
cmp
in
aad
cld
hlt
fidivrs
idivl
in
out
cli
stc
orb
cld
in
int
vpsadbw
cld
cmp
faddl
addl
test
lock
ret
xor
shr
repnz
aad
int
into
out
cmp
rolb
xchg
repnz
out
clc
fcmovne
jecxz
sti
in
rcr
xchg
ds
fcmovb
out
stc
mov
loopne
xor
cmp
aas
xor
mov
fcmovnu
sti
in
ror
xor
cmp
aam
out
jmp
call
fdivr
adc
sti
fprem1
in
rorb
mul
leave
xor
xor
icebp
cmp
fdiv
repz
mov
mov
out
int
call
xlat
repnz
hlt
or
out
mov
leave
fucom
loopne
xchg
fmulp
iret
sub
divb
cli
ds
int3
cmp
shl
shl
hlt
iret
mov
xchg
enter
cmc
mov
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
comiss
pop
push
jg
lret
jl
jecxz
repnz
aaa
hlt
enter
ret
mul
jmp
jecxz
rcr
lock
hlt
lret
xor
lock
fcmovnb
iret
test
xchg
std
out
mov
xor
repz
hlt
cmc
aaa
fcmovbe
xlat
rcr
out
fadds
mov
loop
xchg
rol
aaa
jmp
shll
std
icebp
ffree
cli
sbb
test
fmull
std
decl
aam
xor
lret
leave
repz
repnz
in
loop
fadd
test
test
fucom
clc
in
mov
repnz
mov
lret
cmp
repnz
les
in
ljmp
xor
ror
hlt
cmpl
jecxz
jmp
int
or
cld
ret
repnz
xor
lock
aad
stc
aam
ljmp
mov
out
int3
sti
ljmp
iret
iret
jecxz,pt
xchg
sti
repz
fimuls
roll
in
xlat
call
repnz
out
jmp
mov
in
rcl
enter
cmp
out
stc
std
ljmp
rcr
fldl2t
ret
sub
fstl
loopne
xor
fmulp
hlt
cmp
hlt
out
jmp
fcomp
loopne
addl
cmp
jmp
shl
fcmovu
cmp
ffreep
xchg
in
out
jecxz
in
call
ret
out
std
rol
leave
xchg
in
mov
repnz
int
lock
loop
in
int3
ljmp
sub
sar
cmp
out
cld
xor
loop
loopne
cli
idiv
out
call
ret
fmul
shl
leave
jecxz
hlt
cmp
fdivrp
adc
xor
xor
repnz
mov
mul
ret
xchg
in
test
cmp
shl
std
rcl
lock
filds
xchg
in
shr
adc
lock
loop
jmp
fnstenv
sti
fldl
fst
xchg
jmp
aam
rolb
shr
int3
call
in
hlt
std
cmpl
neg
loopne
hlt
mov
aas
sub
out
xor
test
loope
iret
out
loopne
jecxz
shl
icebp
hlt
enter
out
int
divl
std
cmp
testb
out
orb
out
shr
into
jecxz
clc
not
cmp
fadd
push
into
loop
rcr
shr
aam
in
out
mov
mov
icebp
lret
ljmp
repz
jmp
sbb
loope
ljmp
fucomp
cli
into
iret
test
in
mov
sub
sti
fistl
sub
icebp
enter
lret
aas
enter
clc
rolb
faddl
loope
int
icebp
rcr
int
jmp
cmp
test
xlat
fsubp
jecxz
mov
call
rorb
int3
shll
jmp
cmp
cld
in
fldl
testl
int3
xor
xor
frndint
sar
loope
in
out
test
ftst
cld
fsincos
ljmp
iret
leave
out
cmp
int
in
aad
idivl
mul
test
cld
adc
xchg
cld
mov
aad
aam
in
cmp
int3
ffree
aas
bnd
out
lret
loop
out
test
mov
fcomip
rcr
jmp
fucomp
enter
neg
sar
fstp
cli
jmp
iret
xchg
aad
xor
out
fidivl
int
fiaddl
lock
aam
repz
xor
jecxz
fsubp
ljmp
loop
jmp
into
stc
fcomi
fdivrl
mov
dec
ljmp
xchg
lock
aam
cli
out
in
fcomip
shl
in
aam
add
data16
add
ret
ror
fstp
fcmovnb
in
mov
shll
jg
lret
jl
sar
clc
lds
mov
in
ljmp
jmp
lret
out
xlat
cmp
xor
divl
fmul
cmc
ret
xlat
aas
xchg
int3
cli
call
leave
rcr
cmp
enter
test
fdivrl
xabort
jmp
loope
int
nop
enter
repnz
sti
ror
aam
fst
sti
out
fcomip
out
loop
cli
int
out
fmull
xor
ret
repnz
out
loop
cmp
aam
jecxz
cld
in
fdivr
mov
ljmp
cmp
repnz
rcr
out
repnz
jecxz
jecxz
hlt
loope
clc
lock
in
aas
in
ret
lock
std
neg
fdivrl
ds
ljmp
fmulp
cmc
shl
hlt
hlt
loop
stc
cmp
enter
clc
clc
out
jecxz
enter
lret
in
out
in
neg
rcl
xor
std
idivb
aas
cmp
cli
iret
cmp
aas
jecxz
hlt
fsubp
sbb
mov
cmc
loop
cs
icebp
test
out
xlat
adc
cmc
fninit
clc
lds
rclb
enter
icebp
jmp
fmul
cmc
fstpt
rol
xor
out
out
lret
xlat
aam
xor
rcr
xor
testb
sub
iret
sub
repnz
ds
iret
in
clc
fdivp
out
testl
ret
xor
neg
sti
call
rol
ds
jecxz
ljmp
shl
in
ds
aad
aam
in
call
repnz
add
lret
lret
aad
loopne,pt
imul
jmp
hlt
into
sti
icebp
out
icebp
cmp
std
testl
xchg
jmp
ret
int
out
out
stc
xlat
lock
loop
cmp
aam
jmp
mov
test
int
ljmp
cmp
cmp
fdivrs
mov
out
in
cli
fcmovu
xchg
jmp
lret
cmp
cmp
leave
out
fsub
cli
mov
xchg
jmp
clc
fcmovnu
call
xor
in
fdecstp
sti
aam
xchg
stc
sar
out
loope
cmp
roll
das
leave
xor
enter
clc
sti
cmp
fcomi
lock
loope
mov
std
sti
in
mov
out
rol
sti
call
adc
icebp
aas
call
xchg
enter
fcmovnbe
cmp
aad
std
incl
in
mul
movb
shl
ret
sti
clc
xor
dec
adc
cli
repnz
fdivrp
sub
lret
xchg
nop
enter
aaa
aad
lret
rcl
idiv
loope
test
hlt
fsub
out
nop
rorl
leave
in
sarb
fmul
cmp
loop
cmp
roll
fmuls
loopne
xlat
aaa
xor
iret
aaa
out
enter
into
stc
and
add
int3
loope
popl
ljmp
jecxz
test
std
cmp
std
mov
ror
in
lret
frndint
aaa
lret
cmp
cmp
in
cld
xlat
clc
mov
lea
xchg
xchg
cmc
xor
lock
cs
cmp
or
jecxz
jmp
fcomip
loop
clc
imulb
stc
in
jmp
cmp
ret
sti
stc
test
call
inc
in
xor
cmp
filds
rcr
repz
fcmovnu
in
mov
in
loop
ret
int3
xor
in
in
xlat
aas
cmp
cmp
in
xlat
cld
mov
int3
mov
jecxz
nop
shl
jmp
xor
sti
shll
test
cli
std
loopne
loop
shl
fdivr
stc
in
enter
into
lock
loop
jmp
lret
repnz
roll
call
out
xchg
mov
test
add
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
mov
lret
jl
fcomip
cmp
lret
aam
fdivrl
loope
sti
sbb
cmp
cli
enter
adc
cmp
in
fdiv
cmp
ss
fcomp
out
test
in
enter
int3
sub
xor
in
int
clc
cmp
loopne
ror
jecxz
cmc
orb
mov
cli
test
shr
div
loope
shr
leave
fcomi
rcr
cli
sbb
loope
leave
xchg
ret
orb
rcl
imul
hlt
lock
into
fidivrl
fnstsw
mov
mov
out
cs
div
repz
in
std
sar
mul
ret
out
mul
orb
out
cmp
out
aam
xor
shr
cli
xlat
aad
out
xchg
out
loopne
lock
jmp
icebp
aam
iret
std
out
lret
int
repz
stc
loope
jmp
ljmp
lret
in
in
lret
cmp
in
cmpl
xor
call
xchg
add
shlb
aad
out
rcl
repz
in
xlat
fsubp
sar
shl
std
jmp
test
out
test
shl
clc
xor
out
ljmp
ret
cmpl
jmp
rcr
in
ss
xor
aaa
enter
repz
aam
jecxz
cmp
sub
in
shl
shll
int3
aad
call
xor
ret
loopne
test
clc
fldl
xor
out
hlt
std
sarb
faddp
shl
not
in
div
icebp
jmp
fninit
mov
int
loop
fmulp
fdivs
hlt
icebp
test
incl
aam
out
neg
out
out
in
jmp
in
sub
out
loop
repnz
aam
fsubr
repz
jmp
in
stc
loope
fdivr
in
lock
xor
jmp
xor
ljmp
roll
les
lock
out
xlat
cmp
cmp
fdivr
sub
mov
loopne
adc
loopne
mov
in
cmp
fcmovb
fcmovnbe
cmp
aam
ds
out
sti
jmp
in
icebp
in
out
cmc
loopne
in
fcom
in
shl
aam
cmp
rcr
rcl
loop
fsubp
sbb
cld
cli
sbb
out
lret
shl
iret
shr
fcmovne
fdiv
repz
idiv
ret
movl
out
loop
aaa
cmp
inc
fstpt
ss
aas
std
icebp
cmc
loope
enter
into
out
ss
cmp
cmp
cmp
lock
repz
cli
jmp
and
ror
fnstenv
sar
xor
hlt
cmp
repnz
div
shl
testb
ror
mov
roll
shr
cmp
xor
hlt
jmp
vpsubsb
xchg
std
shl
or
in
das
xor
fdiv
sti
ds
std
rcl
cmc
in
enter
in
xor
int
cmp
leave
cmp
cmp
cld
sar
in
sarb
cli
imul
jecxz
mov
in
out
clc
xor
cld
cmp
vcmppd
aam
call
loop
in
fiaddl
ret
shr
out
xor
aas
cld
iret
rolb
std
fdivr
in
fisttpl
out
stc
hlt
leave
rcr
neg
std
icebp
cld
ret
stc
ret
in
xrelease
jecxz
mov
in
out
fldpi
cmp
out
inc
std
cmp
iret
fdiv
sar
leave
loope
loopne
cli
out
cli
mov
aad
loop
in
int3
out
sti
fcomi
iret
rolb
cmp
fcomp
shr
rcr
add
shll
cmp
lock
lock
int3
repnz
jecxz
mov
fsubr
cli
xchg
ficoml
int3
ret
shlb
out
xor
cmp
xlat
std
fmull
enter
out
jmp
sub
rcl
enter
rorb
test
adc
add
inc
call
jmp
rcl
rcl
roll
pusha
xchg
adc
jl
fucom
in
fmuls
sti
mov
ljmp
ret
xor
cmp
jmp
clc
fcmovu
repz
sti
hlt
fninit
sub
in
icebp
xchg
sub
out
fdivr
ds
sar
lock
sti
ret
fstp
flds
hlt
call
out
clc
hlt
fsubr
int
ret
int
test
out
lret
xchg
lret
rol
loopne
stc
fidivrl
ror
out
jmp
loop
into
sar
jecxz
clc
out
in
mov
ljmp
cmc
ret
xor
mul
fstpt
int3
std
aad
mov
test
orb
out
xor
ljmp
aad
shl
sarb
sar
in
int
les
adc
stc
into
out
movb
clc
ds
mov
xchg
das
fsubr
out
lret
neg
cmp
aas
loopne
mov
out
in
jmp
test
ljmp
enter
cmp
div
icebp
stc
adc
div
loopne
cli
int
shr
lret
xlat
lret
frndint
out
in
push
out
in
in
jmp
sti
fcmovne
test
clc
ljmp
leave
cmp
lret
int
sti
cld
roll
xchg
cld
rol
in
stc
in
sti
fimull
out
in
sti
out
idiv
leave
fnstcw
cmp
enter
lds
aad
ret
ret
xor
cli
std
lock
in
out
leave
xlat
test
decl
mov
out
fxch
cmp
in
cli
aam
cmp
sub
clc
loop
xchg
in
xchg
aad
xor
in
into
rol
sarb
lret
repz
rcr
cmc
jmp
cmp
fcomip
fdivp
jmp
mov
in
icebp
ljmp
and
test
fidivrs
mov
loop
call
jmp
ljmp
fsubp
jmp
std
out
loopne
int3
repnz
shlb
sub
cli
int3
call
in
mul
cmp
loop
cmc
hlt
xchg
cli
cld
repz
shr
fcmovu
shll
in
cmp
jmp
cmp
ds
loop
loope
test
or
cli
fsub
aam
loopne
fdivs
aam
lock
icebp
sti
enter
enter
xchg
cli
lock
in
lret
sarl
rcr
aam
into
xor
repnz
hlt
or
fimull
shr
xor
shr
sar
sarb
rcr
in
test
lret
jmp
jmp
fsubp
vcvttpd2dqx
std
fdivrp
int
cmpl
sar
cmp
mov
test
cli
call
cmp
out
aam
addb
int3
fsubr
xchg
lret
sub
jmp
fmul
cmp
lret
iret
test
test
cmp
shlb
fnstenv
cmp
lret
neg
sar
xlat
in
shl
cli
fidivrl
xlat
movl
cmp
hlt
cmp
out
jmp
repnz
int3
cmp
cmp
test
in
and
in
into
test
cmp
clc
cmp
aaa
cmp
into
clc
sar
rcr
cmpl
fmuls
out
stc
loopne
out
call
imul
int
fcomip
cld
jecxz
fcmovnu
iret
cli
shr
aas
xor
in
aad
call
lret
lock
flds
adcl
in
into
hlt
loop
in
xlat
sti
clc
neg
int
cli
orb
clc
loope
iret
incl
ss
sti
cmp
stc
fdiv
fcmovu
xchg
mov
nop
fldl
repz
fidivrs
cli
sarb
int3
into
idiv
hlt
adc
xchg
loop
xlat
loope
repnz
lret
leave
lock
loop
sbb
and
faddl
call
add
lret
ret
int
jle
rcr
pop
fistl
sbb
lret
jl
xchg
cld
nop
ret
lret
int3
stc
cmp
ljmp
ret
aas
aam
cmp
jmp
ret
mov
cs
aaa
rcr
fsubr
cmp
lock
aad
cmc
loope
xchg
int3
repnz
lret
in
repz
repz
and
jecxz
jmp
out
jmp
lret
in
addl
lock
int3
repz
adc
ret
mov
leave
in
lret
mov
shl
ret
int
cli
stc
call
aad
fdivr
ffree
mov
test
test
xlat
xor
out
cmp
icebp
repz
cmp
sti
in
call
into
incl
xor
aaa
ret
in
xor
fdivrl
sti
sub
ret
call
std
ljmp
adc
rcl
in
hlt
sti
lock
loopne
clc
test
jecxz
jmp
addb
cld
into
shl
leave
int3
aaa
std
std
repnz
sar
in
or
rcl
mov
icebp
cld
fisttps
aam
lds
cli
icebp
call
rol
shl
shl
ffree
cmp
sti
loopne
or
rcr
cmp
aas
clc
int
cli
ret
lds
fildl
int3
out
enter
fnstenv
into
shll
cld
ffreep
cli
jmp
cmpb
loop
sbb
xlat
loopne
or
jecxz
fdivp
shr
out
sarl
rcl
rol
stc
fstp
test
addl
fmul
fldz
div
call
int3
cmp
shl
fdivrp
int
fcomp
in
out
call
sti
neg
jmp
rcl
cld
out
cld
mov
fadd
addl
in
int
into
in
cmc
aaa
xlat
aam
in
std
jecxz
into
cli
xchg
hlt
loopne
imul
fdivrp
std
test
aaa
sub
lret
ljmp
rcl
out
ror
addb
mov
fnstsw
into
out
out
aaa
ror
sti
fucomi
iret
neg
sbb
cmp
repz
loopne
loopne
xchg
xor
aaa
lret
neg
lock
cmc
ljmp
ffree
cmp
neg
jmp
mov
shr
in
int
stc
hlt
xor
int
sti
cmpl
clc
hlt
in
leave
mov
incl
out
rcl
fildll
shr
leave
icebp
std
clc
repz
iret
ds
addl
loope
std
nop
mov
int
lret
jmp
fcmove
stc
cmp
ret
jecxz
test
fildl
loopne
lret
ror
lret
cmc
lret
in
ret
jecxz
stc
shr
jecxz
test
enter
fcomip
shl
fcom
jecxz
ret
shl
fucom
out
xchg
test
xor
aam
in
aaa
idivl
in
cmp
out
test
fcomip
out
fucomi
out
adcl
sti
std
iret
out
enter
in
movb
loope
roll
repz
ljmp
stc
imul
idivl
ds
xlat
call
call
loop
xlat
icebp
cs
iret
xor
ljmp
fst
clc
aad
fiaddl
lret
icebp
in
jmp
loop
xlat
icebp
idiv
ror
iret
roll
test
in
ljmp
subl
int3
cmp
rcr
sti
shl
cmp
and
out
in
test
jmp
mov
out
mul
cmpb
fcmovb
fsubp
ds
mov
xchg
in
imul
iret
rol
in
clc
sti
jmp
cmp
in
clc
stc
not
cld
repnz
loopne
fadds
jmp
divb
cmp
aam
sar
loopne
fucom
fcmovb
leave
fcmovne
in
xchg
cli
shl
sub
fcom
enter
fsubr
int
out
aam
out
in
clc
loop
in
into
into
test
idivl
lret
ljmp
inc
in
mov
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
rorl
jl
add
repz
repz
cmc
in
cld
cmp
jmp
lds
icebp
lret
lock
xor
xor
int
sar
rcr
sbb
int
mov
icebp
cmc
shl
int
sarb
xor
testb
fmulp
test
fadd
jmp
rorl
out
enter
in
loope
ret
fyl2xp1
loopne
mov
jmp
loopne
out
jecxz
fisttpl
in
int
xor
divl
fcmovnbe
fxtract
adc
repnz
test
and
nop
repz
shl
bnd
call
in
cmpl
jecxz
fucomi
test
sti
nop
int3
shl
filds
out
idiv
jmp
repz
cmc
jecxz
filds
jmp
sub
ss
cmp
xlat
test
jecxz
mov
cmc
incb
loop
loop
xor
fcomp
out
aas
xor
hlt
shl
jecxz
sti
fucom
in
in
dec
iret
jmp
sub
out
in
fnstenv
fyl2x
cmp
xor
loop
test
rolb
jmp
xor
xor
jmp
aas
rol
shl
ret
xchg
in
xchg
fmul
out
ror
ret
ss
into
cmc
loope
icebp
xlat
and
loope
mov
mov
loop
leave
lret
int3
xor
ss
sub
call
out
out
leave
loopne
in
int3
jmp
fucom
shll
hlt
cmp
repz
out
loope
sti
cmc
out
in
vucomiss
ss
cmp
out
repnz
mov
int
fucomp
xchg
repz
ficoms
jecxz
iret
xlat
cmp
cmp
stc
lock
cli
cld
std
out
cli
ljmp
iret
xor
jmp
cmp
fucomi
adc
cmp
cmp
adc
cld
call
out
lret
out
aad
aaa
neg
fucomip
add
out
leave
out
int
testl
das
shl
std
fmul
lock
sti
f2xm1
and
fstp
leave
ret
jecxz
lret
rcr
lock
in
in
cmp
aad
in
aad
fdiv
cmpb
aad
fdivr
out
or
mov
sub
stc
sarl
out
fcom
icebp
jmp
jmp
into
mov
xchg
int
out
jmp
lret
xlat
in
loopne
ds
incb
or
cmc
hlt
cmp
cmc
lret
iret
cmp
aam
cmp
icebp
repnz
jecxz
call
shr
incl
out
neg
aaa
out
in
repz
ret
ffree
std
inc
addl
in
ljmp
xor
icebp
out
loopne
ss
in
test
sub
in
int
stc
fsubr
shr
fxch
into
aad
sti
test
rol
cli
sti
xchg
int
rclb
cmp
ss
jmp
aam
cmp
mul
fcmovbe
loopne
out
ret
int3
jecxz
cmc
nop
xor
lock
cmp
cmc
ljmp
rolb
xchg
out
mov
iret
rol
iret
jmp
sub
clc
test
fimull
lret
call
in
das
aad
shlb
sti
out
call
test
out
fsin
inc
int3
xchg
test
cli
cmp
clc
lret
in
xlat
aam
repz
test
jmp
loopne
out
in
jecxz
ss
ljmp
rcl
out
aam
cmc
enter
clc
loop
cli
repz
ret
cmp
cld
cmc
cmp
aad
loop
ret
frstpm(287
call
dec
rolb
leave
stc
fcmove
rcl
sti
ss
lock
out
cli
loopne
mov
rorb
xchg
mov
test
call
ror
int3
aaa
aas
out
repnz
loop
adc
cld
mov
xor
lea
mov
jmp
into
int3
ret
ds
jge
jae
inc
mov
jg
lret
jl
fsubrp
fstp
jecxz
lret
sub
aam
aam
in
ss
stc
xor
cmp
fsubr
decl
mov
enter
out
in
lock
mul
loop
hlt
jmp
xchg
cmc
cmc
dec
xor
hlt
lret
int3
rcl
ljmp
hlt
int3
lret
mov
out
test
ffreep
aam
xlat
ffree
cs
lock
out
out
test
test
rol
xchg
xchg
int
repnz
cmp
iret
ds
cli
fucom
shl
fimull
jmp
vpsubb
hlt
out
lock
ds
fldl
fsubr
mov
repz
fnsetpm(287
cmp
fistpll
fidivrs
sbb
cmc
cli
leave
testb
xchg
ljmp
sar
fcomip
les
repnz
xlat
sbb
sti
test
shr
lock
out
clc
cmp
out
rcr
in
fucomp
mov
xor
mov
int
out
jmp
leave
shr
lock
in
test
sarb
testb
mov
mov
jmp
xor
iret
rcl
sti
aas
hlt
roll
test
xchg
xchg
xlat
not
sti
sarb
cld
lock
mul
loopne
loope
mov
int3
jecxz
jmp
rcl
jmp
out
rcl
aaa
shl
add
fdivrl
stc
mov
aas
or
jmp
stc
out
fnstcw
cld
cmp
shl
cmc
aas
cmp
mul
loop
cld
clc
mov
mov
fldl2t
shll
aas
cmp
clc
rcl
ret
xchg
fsub
xchg
jmp
loopne
xchg
fcomip
in
repnz
std
into
roll
addb
testb
mov
jmp
repnz
lret
out
ss
cmp
fxch
xlat
stc
xchg
fucomp
out
fmuls
xchg
jmp
hlt
out
das
test
fdivr
cmp
cmp
into
fcmovnu
xchg
fcoms
out
xor
xor
xlat
ds
out
fstp
div
std
repnz
loop
in
in
in
xchg
not
jmp
std
jmp
out
cmp
shl
enter
cli
loop
ror
xchg
shr
iret
enter
jmp
sbb
addb
mov
loopne
int3
enter
fdivp
shl
jmp
int3
xlat
xor
fcomi
iret
cmp
ds
fsub
xchg
mov
enter
mov
loop
test
repz
hlt
jmp
fadds
jmp
fisttps
xchg
lock
aaa
std
aad
lret
fucom
ret
lock
rcl
out
xlat
decl
fdivp
into
int
rol
hlt
out
in
stc
lret
clc
ffreep
stc
loopne
cli
enter
fcmove
sar
jmp
ljmp
cmp
sti
in
shl
loope
aad
call
in
mov
sub
in
xor
out
jecxz
cmc
jmp
jecxz
mov
lret
lret
xchg
out
in
in
das
cmp
jmp
out
fldln2
shl
sbb
aas
ret
ret
div
or
clc
test
aam
divb
xor
cmp
jmp
clc
fcmovb
icebp
sar
in
out
loope
xchg
in
loop
cmc
aad
cmp
ss
in
rcr
iret
xchg
shl
aam
fmull
adc
in
rcl
lock
cs
cli
div
stc
clc
sti
roll
sti
fmulp
loop
fiaddl
leave
shr
aaa
cmp
ds
in
test
movl
rcl
fnop
icebp
out
aaa
cmp
clc
push
aas
stc
repnz
loopne
std
mov
sub
ret
ret
lock
repz
lret
aas
in
neg
aas
incb
out
xchg
repz
loop
incl
jmp
mov
jmp
lret
ds
fcmove
fisubrl
and
jl
add
lock
fucomp
fcmovnbe
ret
aam
roll
fxch
out
into
loopne
icebp
aad
loop
fcmovnu
into
lret
lock
loop
into
cld
lock
xlat
jecxz
and
vpsllw
xor
cmp
fdiv
jmp
out
repnz
adc
cmp
orl
loop
lret
fsubr
cmp
cli
clc
cld
rcl
cmc
enter
in
lret
into
fdivp
aad
ret
in
aam
xlat
aam
fcomi
ds
cld
in
cmp
fildl
int
jmp
cmp
int3
int3
out
cmp
div
clc
sar
aam
in
vshufps
in
mov
aam
xlat
sti
ss
ljmp
in
xchg
in
test
out
loop
rcl
ror
in
fsubr
out
in
fdivr
rcl
cmp
idiv
loopne
leave
shl
les
out
mov
ror
fcmovbe
aam
cli
fstp
enter
sti
in
in
loopne
mov
nop
loope
iret
cmc
jmp
fidivl
divb
cmp
testb
and
in
xchg
jmp
xchg
ljmp
fidivrl
fsubr
sti
cli
mov
xchg
std
mov
in
faddl
fincstp
cmc
ljmp
hlt
repnz
adc
fiadds
ds
out
rorl
jmp
shr
cli
out
cmp
lret
cmp
std
in
call
repz
in
lret
faddl
loopne
hlt
xor
cmp
int
lret
ffree
cmp
test
out
mov
fsub
xchg
repnz
hlt
in
aam
out
lret
enter
out
ffreep
cmp
fmul
out
test
int
leave
lret
cmc
fdivr
jmp
dec
mov
std
loopne
jmp
not
aam
shl
cmp
cmp
hlt
out
lret
loope
lock
loope
clc
jmp
lret
aaa
ljmp
out
jmp
stc
aad
aam
mov
fld
test
lock
cmc
nop
repnz
in
rcl
out
cld
cld
hlt
in
fdivr
hlt
stc
iret
into
idivb
repz
fldl
xor
xor
ljmp
int
aas
fsub
fcom
out
stc
int
loop
into
ror
in
in
jmp
aam
std
fdivr
add
ljmp
jecxz
mov
ss
icebp
aad
loope
aam
mul
mov
enter
jmp
xchg
lock
xor
xor
jmp
xlat
cmc
repnz
loop
fstpt
mov
clc
cld
test
repz
fidivrl
iret
rolb
out
ds
in
call
and
adc
int
cs
into
cmp
fcmovnu
aad
iret
xlat
fldl
aad
ret
test
hlt
int3
sarb
cmc
icebp
stc
ss
int
in
sti
fadds
adc
fmul
movl
xor
in
in
in
clc
cmp
stc
std
sbb
jmp
and
icebp
jmp
xlat
xor
aaa
xor
clc
stc
sti
fdiv
jecxz
cmp
in
out
mov
fnstsw
xlat
in
clc
cld
sarb
fdiv
in
fst
rol
ds
fimull
fsubrp
fucom
aaa
ret
ret
aaa
aam
cmc
fstp
rorl
mov
xorl
ljmp
ret
jecxz
out
adc
call
ljmp
shl
call
cld
incb
loop
in
call
rol
int3
aam
rcl
lret
cmp
cmp
xlat
clc
addl
sbb
xchg
enter
out
rcl
into
ljmp
in
sti
repnz
aam
sar
xchg
xchg
in
xor
in
xor
repnz
cmc
aaa
rcr
shl
jmp
add
add
ds
rcr
fsubr
push
mov
sub
lret
jl
fcmovne
mov
call
xor
loopne
xor
out
std
aas
loope
int3
adc
ds
fsub
in
xchg
icebp
lret
mov
xor
rcl
in
hlt
hlt
fstpt
fdivr
int
aas
in
neg
fcomp
leave
repnz
fimuls
repnz
cmp
std
fdivrp
int3
lret
std
filds
sbb
mov
lret
mov
in
in
icebp
xor
lret
int3
iret
fldz
loope
cli
xchg
lret
out
ror
jmp
rcl
in
jmp
icebp
fcmovu
ret
fucomi
in
call
int
nop
sti
addl
sub
xor
xlat
int3
not
aas
aam
cld
rolb
fsts
out
xor
fdivr
int3
xlat
repz
fistpll
aad
addb
loop
test
ljmp
cld
mov
aaa
cmp
ror
cmp
cmp
cmp
in
xchg
incb
jmp
mov
icebp
shr
lds
cli
aad
into
xlat
lret
icebp
cmp
aas
not
out
loope
ret
cld
out
fimull
lret
not
aam
xor
cmc
in
in
sar
in
incl
in
loopne,pt
rorl
cmc
aaa
aaa
out
xlat
in
call
rolb
int3
enter
fiadds
leave
xor
lock
in
shlb
int
ljmp
lret
sbb
in
xchg
out
xchg
mov
sti
aam
cmc
sarb
repz
out
jmp
lock
fadds
xchg
fiadds
lock
xlat
ror
sar
incl
out
rorb
shll
cli
repnz
int
in
ljmp
cld
loope
ror
fsubrp
jmp
fsubp
iret
out
out
stc
jmp
cmp
loope
or
shl
adc
loopne
xchg
ret
bnd
into
out
jmp
repnz
icebp
rcl
aam
cld
xchg
into
leave
shr
test
sub
ret
leave
out
lret
adc
lret
out
aad
shl
loop
fisttps
roll
fcmovne
ljmp
faddl
fadds
iret
enter
test
in
idivl
out
leave
aam
ss
adc
rolb
sbb
aam
test
nop
repz
lock
lret
xor
lock
out
test
out
mov
jecxz
clc
out
or
shr
xor
ror
icebp
repnz
xor
idivb
cmc
shr
aas
add
cmp
shl
xlat
enter
and
enter
loop
idiv
aas
clc
loope
ds
in
aam
cli
fyl2xp1
out
mov
int3
shr
lock
cli
fsub
out
ljmp
in
std
ftst
int
int
xchg
shl
loopne
cmp
in
in
and
bnd
cmc
out
in
mov
mov
ljmp
out
sti
rcr
ss
cld
cld
lock
idiv
ds
mov
out
repnz
stc
out
call
out
sti
in
shl
cmc
cmp
shl
xabort
sti
loopne
enter
xchg
lret
stc
aaa
jmp
cmp
ds
neg
ror
shl
inc
fucomi
out
nop
in
fists
in
shlb
aad
stc
fst
repz
sar
lds
idiv
xlat
in
decb
xor
xlat
icebp
cmp
aam
aad
xlat
jecxz
mov
int
xchg
loop
in
xor
iret
out
aad
lock
add
ret
shl
fxch
int
out
out
cld
xchg
loope
hlt
shl
repnz
into
hlt
fadd
icebp
idiv
repz
std
in
fadds
xchg
mov
out
ds
jmp
xor
cmp
in
in
jecxz
vcmpps
cld
test
out
loopne
out
lret
repnz
ss
sarb
repnz
sti
adc
or
cmp
mov
jmp
fcmovnbe
int
loope
insl
lahf
pop
and
jl
add
xlat
in
cmp
icebp
fdiv
repz
loopne
stc
fcmovbe
ljmp
xchg
jmp
in
cmp
hlt
jecxz
cmp
hlt
aas
aam
rol
in
jmp
std
out
xchg
out
rcr
icebp
out
lret
fcom
test
std
jmp
sbb
test
loopne
mov
lret
sub
enter
out
xor
repnz
ret
enter
xchg
fcmovne
fmul
xorl
fcmove
lret
sti
rcl
fdiv
in
loopne
ljmp
call
lock
aaa
out
jmp
in
test
fdivr
mov
rclb
sub
sub
sti
out
lret
cmc
in
cmc
cmp
cmc
out
lret
fdivr
xchg
in
jecxz
loop
into
repz
icebp
ror
call
lock
out
hlt
aam
cld
decb
enter
out
in
aam
ljmp
repnz
enter
fnclex
mov
mov
lret
sti
cmp
hlt
aam
in
roll
clc
lret
ljmp
shrb
fsincos
sar
cmc
xlat
out
rol
loope
rcr
out
adcb
in
xlat
rcl
lret
lret
xor
aad
loope
repnz
xchg
fsubp
mov
int
xchg
call
cmc
cmp
cli
std
ret
add
fcmovnu
xchg
test
cld
loop
std
jmp
in
mov
imul
cmp
in
int3
into
adc
loop
cld
ret
inc
into
fsub
or
aam
out
rol
iret
cmp
leave
fndisi(8087
clc
cmp
jmp
lds
or
sub
cmp
call
aam
into
jmp
in
fsubrp
xor
jecxz
icebp
cs
lret
hlt
test
testl
fsincos
lret
call
xor
cli
lock
idivb
cmp
lock
hlt
shl
xchg
sti
mov
xchg
in
iret
jmp
repnz
cmp
rolb
rcl
sti
jmp
call
fidivs
out
cmp
fld
jmp
into
ss
cmp
jecxz
out
sbb
in
mov
std
into
shl
ret
fucomip
fpatan
stc
xlat
fnstenv
fcom
addb
clc
xchg
mov
xlat
aam
iret
loop
hlt
xor
aam
shl
test
rolb
in
in
mov
loopne
icebp
call
int3
iret
xor
sar
cld
and
jecxz
cmp
jmp
loope
int3
loop
std
repnz
icebp
rcr
loop
jmp
orb
into
xor
iret
icebp
cli
lret
std
ss
clc
fcmovnb
ds
ljmp
shrb
divb
call
sarl
aad
cmc
repz
into
filds
enter
cli
rclb
out
xor
cli
cmp
dec
lret
int3
lock
rol
xchg
stc
in
ficoml
jmp
jecxz
aaa
int3
out
lret
call
adc
repz
stc
fcmovne
mov
repz
loopne
cmp
in
repz
fcmove
sar
int3
shl
aad
cld
jmp
mov
incl
cs
cmp
rcl
stc
imul
repz
sti
cli
fcmovb
idiv
in
hlt
xchg
addl
jmp
shr
repz
roll
fmul
enter
test
out
xchg
out
cs
xor
jmp
imul
fiaddl
in
in
lret
jecxz
lret
cld
orb
xor
stc
lock
int3
cmp
call
lret
fadds
xchg
fnstsw
int
into
das
sti
stc
ds
loope
loopne
stc
fdivrp
fsubr
lock
test
lock
out
icebp
aam
stc
aas
loope
enter
jmp
iret
iret
sarb
aad
aad
pop
sbb
add
add
lret
jl
into
inc
out
ret
cli
add
jmp
shr
xchg
cs
loopne
xlat
in
into
repnz
div
xlat
jmp
in
test
int3
loop
aam
xor
repnz
xlat
aad
jecxz
std
cmp
ljmp
in
jmp
cmp
call
testb
fdivrp
lret
sti
iret
fsub
icebp
int3
in
repnz
iret
int3
cld
leave
leave
loopne
std
fsubr
ret
leave
rcr
out
fsub
sub
fucomi
int
repz
repz
out
cmp
aam
lock
out
movb
test
addl
cld
xor
leave
shl
cmp
in
in
mov
sti
int3
xchg
in
jmp
cmp
out
ror
fneni(8087
sti
cmp
fdivrl
mov
in
mov
in
lret
out
xchg
jmp
out
xor
fsubr
shl
sbb
sar
sbb
call
in
sti
roll
div
xor
sti
hlt
ss
jmp
fxch
cli
fcmovne
lock
jmp
ljmp
mov
jecxz
cmp
lock
cld
test
cli
repnz
lret
decl
xchg
aas
out
ljmp
sarb
clc
cmp
ret
fcmovnbe
cli
addb
out
jmp
xor
enter
repz
hlt
icebp
cld
fadd
sti
jmp
clc
loop
in
xor
repnz
sti
cli
in
fnstsw
not
imul
in
adc
ret
fsts
fmulp
jmp
cmp
shll
jmp
test
mov
lret
shrb
call
jmp
sbb
hlt
mul
out
and
cmp
fucomp
cld
test
xor
ljmp
aam
repnz
lret
cmp
cmp
leave
loop
mov
mov
decl
das
iret
in
hlt
shlb
out
ljmp
addl
sbb
out
std
fildll
icebp
out
jmp
cmp
in
lret
cmp
aas
out
hlt
cli
mov
fsubr
out
out
xchg
mov
cmp
out
stc
xlat
in
cld
jmp
mov
xchg
jmp
ror
fsubrp
loopne
cli
xor
ljmp
in
aam
filds
std
mov
shll
int3
in
int
stc
sub
out
in
addb
shlb
jmp
fidivrl
shl
enter
std
in
in
ds
mov
in
icebp
sub
int
out
icebp
jmp
shl
ffree
test
rol
cli
std
clc
or
xchg
in
loope
out
fdivrs
repnz
loopne
rcl
fiadds
ret
flds
xchg
int
leave
ror
repnz
fcomp
aaa
lret
loope
shl
fucomp
call
test
enter
in
xor
fnstenv
enter
ds
test
xchg
fdecstp
stc
mov
fcmovnbe
xchg
shr
fimuls
fmul
leave
lret
aad
in
in
iret
testb
ret
xchg
decl
in
xchg
xchg
hlt
test
idivb
in
int
test
aad
in
lret
in
leave
iret
adcl
repnz
cmp
xlat
cmp
out
clc
clc
in
cmp
sti
ljmp
ficoml
out
jmp
cs
cmp
sarl
jmp
int3
leave
mov
into
bnd
call
shl
sub
in
fcomip
out
ret
enter
fimuls
in
lret
out
in
jmp
fsubrp
in
aam
out
testb
in
loopne
int3
adcb
loopne
xlat
vshufps
loope
cmp
iret
jecxz
rorb
xchg
cld
cld
loop
hlt
vshufps
ljmp
cmp
xor
sbb
jmp
loopne
mov
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
mov
ss
add
lock
xchg
test
int
int3
ss
cmp
dec
int3
hlt
aad
ret
cld
mov
call
out
xchg
in
sti
into
test
sbb
repz
fcmovb
les
cmc
out
xor
cli
fcomip
xor
cmp
sbb
aad
idiv
test
int
lret
mov
fsubrp
jmp
xor
sti
out
fdivrl
divb
loope
icebp
in
and
ret
test
leave
iret
aam
icebp
hlt
aam
jmp
rcl
fucomi
and
in
fcomip
out
mov
enter
out
xlat
ljmp
call
loop
xchg
loopne
mov
faddl
mov
nop
div
lock
hlt
fstpt
cld
stc
fcmove
icebp
test
aad
repnz
loopne
mov
add
out
lret
out
nop
out
int
enter
cld
cmp
icebp
shl
out
cli
loopne
xchg
in
fcom
mov
xchg
fucomip
xor
lret
aam
not
lock
int3
div
std
rolb
xchg
xchg
lret
loop
cmp
int3
cmc
rol
vpsubq
fadds
loop
test
xchg
ljmp
xor
rcl
idiv
icebp
xchg
out
fdivp
xchg
lret
into
out
xchg
lret
jmp
fcmovnu
enter
rcr
aas
cld
iret
in
idivl
rol
not
loop
testb
lret
xor
cmp
out
ljmp
fcmovnbe
jmp
and
int3
leave
ror
test
xor
in
out
into
clc
cld
in
fcomi
iret
ljmp
sar
hlt
fucomip
popl
test
int3
out
int
sarb
ds
icebp
cld
sti
icebp
shl
mov
loopne
mov
lret
out
aam
cmp
in
cmp
jmp
fidivrl
in
filds
fimull
ds
in
xor
xor
aad
cmp
ljmp
rcr
fdivp
idiv
fisttps
xor
rcl
int3
sti
cmp
std
repz
cmp
ret
add
mov
out
xchg
leave
call
lret
xor
repnz
cmp
repz
sti
stc
push
icebp
aas
out
ret
int
int
mov
loopne
hlt
mul
shr
test
std
loope
fiaddl
cmp
adc
mov
std
jecxz
addb
aad
out
cmp
out
icebp
shr
out
mov
ljmp
nop
sub
cs
ljmp
hlt
out
loop
incb
into
std
loopne
xrelease
ljmp
rcr
out
test
fincstp
sti
orb
ret
aaa
jmp
lock
in
faddp
sarl
loope
fmull
icebp
xchg
xchg
in
call
xor
idiv
fxch
cmp
xlat
mul
jmp
lret
fldz
xor
cmc
in
cmp
iret
xor
std
fdiv
ret
fsubr
stc
mov
fcmovne
enter
loope
hlt
ror
repnz
out
std
repz
test
stc
call
fmulp
out
fdivp
lret
lock
div
rcr
fdivrl
and
loop
leave
xlat
out
imul
rolb
in
iret
loopne
idivl
not
dec
jmp
and
incb
loop
jecxz
leave
call
lret
xor
hlt
lret
aas
in
loopne
cmp
loop
std
jmp
in
out
in
aam
jecxz
ljmp
fadd
lds
in
leave
mov
orl
icebp
mul
in
idivl
out
cmp
int
and
lds
nop
int3
in
mov
out
cmc
icebp
out
in
cmp
int
div
cmp
inc
xor
jmp
mov
repz
cmp
cmp
lret
cmp
jecxz
stc
aam
ljmp
xchg
xchg
repz
enter
fidivrl
jecxz
clc
fcom
fucomip
aam
loopne
lret
ror
loopne
sub
xor
ror
cmp
out
cmc
aas
cli
shl
enter
call
int3
loop
fsubr
das
call
clc
aas
aam
and
hlt
shl
test
orl
int
xor
fcmovne
cmc
cmp
sar
cmp
call
ret
clc
nop
shr
lock
xor
xor
call
repz
fadds
mov
and
cmc
ljmp
cmp
push
movl
jmp
into
rol
aad
rcl
jmp
jno
scas
and
jl
xor
fptan
ljmp
int
cmc
cld
aad
addb
repz
xchg
out
xor
enter
jmp
clc
aam
call
flds
loop
out
iret
sti
out
addl
aaa
in
aam
repz
ret
mov
mov
stc
sbb
sub
loope
xchg
call
ret
clc
icebp
stc
cmpb
fcmovnb
add
fnstcw
loopne
addl
repnz
ljmp
std
roll
jmp
enter
out
out
into
ror
lret
iret
lret
xor
xchg
std
flds
xchg
jmp
cmc
int3
ret
cmp
cli
aam
fcomip
in
aas
idivb
xchg
shl
fisttpl
out
in
stc
xor
idivb
int
call
test
icebp
ds
std
hlt
cld
out
in
std
ror
lret
rcl
out
cmp
aam
ds
faddl
fcmovnbe
out
enter
stc
std
out
enter
lock
xor
rol
aad
hlt
cli
icebp
cmc
std
xlat
hlt
rolb
xlat
cld
int
mov
icebp
rcll
xor
call
sarl
shl
aam
cmp
ret
clc
lret
fisttpll
fdivp
enter
cld
lock
ss
aas
cld
shl
icebp
fsin
fiaddl
lret
nop
div
sub
out
aam
xor
fdiv
rol
neg
jmp
iret
iret
or
lea
jmp
les
lock
jmp
ljmp
leave
into
mov
shl
test
lds
out
fpatan
inc
sar
xlat
aam
enter
movl
shlb
fdivr
cmc
cld
fdivr
cmp
cmp
mov
ret
enter
roll
lret
in
int
cmc
clc
cmp
rcr
xor
shl
out
sub
xchg
rcl
imul
cmp
fdivr
repnz
ror
shl
lds
in
test
test
aas
out
into
fmul
in
clc
sti
lret
cmp
int
sar
fadd
sti
addb
filds
in
idiv
int
lret
fxch
xor
in
in
dec
cld
into
loopne
fucomp
shl
out
xor
stc
fdivr
lock
testl
test
into
aam
enter
cli
xor
addl
loope
fcmovnu
cli
xchg
jecxz
jmp
xor
stc
in
lock
addl
xchg
jmp
xchg
into
mov
aad
ret
repz
cli
fst
loopne
iret
cli
ret
jecxz
in
ret
loopne
sti
call
test
in
leave
out
fsubr
mul
in
out
fldl
test
in
enter
into
jmp
in
out
jmp
cmp
cmc
loop
icebp
loop
cmc
lea
xchg
loop
ds
out
ror
loope
lret
lds
enter
stc
mov
lock
sub
sti
iret
out
leave
aas
xlat
cmp
jecxz
shl
in
call
loop
fsts
jecxz
into
aad
cmp
divl
in
repnz
fstp
hlt
clc
test
stc
test
xlat
cld
fdivr
std
iret
cmc
in
xor
rol
jecxz
std
fmuls
ljmp
repz
sub
aaa
aad
ljmp
fdivr
lret
testl
aad
xor
in
cli
xor
icebp
shl
div
loopne
out
out
xchg
fiaddl
ret
sub
shl
in
aad
ljmp
fcmovbe
xlat
sub
ljmp
das
jmp
clc
int3
fdiv
cmpl
add
repnz
repnz
xchg
loop
in
test
sar
div
ret
loop
cmp
in
xor
cli
jmp
aas
out
cli
std
testl
in
xchg
shl
shll
in
lret
int3
cli
neg
fdivrl
cmc
aam
aad
in
mov
clc
xchg
xchg
iret
in
ret
xor
repnz
aad
xlat
cmp
rcr
and
incb
loope
lret
cld
call
jecxz,pn
test
cmp
aam
xor
aas
std
fmul
cli
lret
into
out
out
divb
enter
cs
out
sti
out
aad
fcomp
cmp
test
lds
xchg
int3
fucomp
in
nop
hlt
in
in
xor
vcvtdq2pd
jmp
inc
cld
test
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
pop
out
std
push
sarb
add
cmp
add
int
les
loop
jmp
fcom
xor
in
shr
rol
fsub
fnstsw
rcr
cmp
fadd
fst
call
std
in
shlb
ret
divb
iret
cmp
iret
ret
in
idiv
xchg
mov
icebp
shl
cli
cmp
jmp
repnz
ret
aam
add
jmp
decb
ret
rol
sti
repz
repnz
test
repz
std
fcomp
ror
sub
call
hlt
xor
aam
int3
sar
fadd
loope
into
cmc
cmc
lock
jecxz
sti
idiv
loop
adcl
int
xor
cmc
cmc
stc
loope
int
xchg
cld
test
cmc
sti
cld
rcr
in
in
call
test
fcomip
leave
cmp
into
sar
hlt
repz
fcmovu
hlt
mov
xchg
call
out
aad
xlat
xor
ror
cmp
cmp
fcmovnb
rcl
call
fsubr
enter
in
xor
xor
out
iret
shl
fcmovne
cmc
in
fdivr
loop
fisttpll
fmull
call
rcl
ds
int
fistpll
rcr
cmc
add
jecxz
out
shl
jecxz
cmp
ret
cmp
stc
rcr
xlat
cmp
cmp
aad
out
loopne
cli
xchg
in
test
rcr
into
aaa
out
hlt
aaa
lret
shr
ljmp
in
cmc
cld
xchg
jmp
inc
jecxz
out
das
jecxz
in
jmp
fchs
into
cmp
sarb
repnz
inc
loopne
fdivr
enter
faddp
cmc
ljmp
mul
cmp
shl
loopne
lret
mov
xchg
faddl
sub
aaa
aaa
fdivp
rcl
icebp
cmp
aas
and
hlt
xlat
fcmovnu
loop
out
rcl
sar
shr
aaa
ror
repz
loope
aas
out
rcr
cmc
shl
loopne
jmp
mov
out
std
int
xor
aad
aam
fucomi
std
fnstsw
cmp
push
out
sti
not
std
loop
in
fiadds
into
in
iret
clc
aam
leave
out
cmp
sub
fsubrp
fdecstp
in
sti
sti
lret
mov
ljmp
icebp
cmp
test
rol
mov
lds
xchg
into
call
vshufps
aam
aad
stc
fiadds
xchg
int
stc
cli
loop
repz
out
ror
ljmp
lret
lock
and
add
fsub
call
imulb
jmp
out
stc
fcom
rol
out
hlt
decl
out
int3
repz
lret
fld
stc
xor
cmp
lret
ds
sti
out
fisttpl
int
ljmp
ror
ror
ss
shr
cmp
ljmp
jecxz
mov
in
loop
fdivr
rorb
cmc
iret
lret
fnstcw
cld
sarl
repz
std
cli
cmc
int
int3
ljmp
lret
int3
sarb
fmul
out
stc
cmp
cmp
hlt
sti
fnstsw
mov
filds
xchg
iret
in
out
enter
out
repz
cli
mul
lds
sti
jmp
add
addb
aam
cli
cmp
sar
stc
xor
repnz
in
mov
nop
lea
aad
ljmp
cmc
stc
ds
xlat
mov
out
lret
sti
shl
fsubrp
rcl
aaa
hlt
xor
xlat
enter
aam
ret
cmp
enter
and
test
leave
icebp
imul
cmc
xor
cld
lret
fucomip
ffree
cmp
faddl
in
xchg
call
les
repz
aas
int3
loopne
repz
add
ljmp
mov
jecxz
in
sarb
loopne
aas
cmp
fsubrp
addb
in
std
mov
out
xor
leave
fcom
hlt
into
in
roll
xchg
std
lret
aam
out
call
in
enter
lret
mul
rcr
out
cmp
and
cld
rolb
jmp
sti
out
addl
shl
ss
stc
adc
xchg
mov
xchg
mov
jmp
xchg
ror
mul
cmp
cmp
aam
call
in
repz
aam
enter
lea
test
aad
xor
aam
sub
out
neg
in
jmp
lret
icebp
nop
out
xchg
mov
xor
into
fcomi
idivl
lock
idiv
int3
test
adc
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
les
add
cmp
jmp
aad
clc
cld
loop
lock
cmc
bnd
in
out
cmp
fndisi(8087
roll
repnz
out
lret
mov
shr
shl
xor
cmc
fld1
int3
repnz
sar
int3
cmp
rolb
test
in
adcb
cmp
cmp
out
std
cmc
cmp
and
out
fucom
ljmp
lret
lock
ljmp
sti
int3
stc
loope
int3
rol
jmp
loopne
fucomip
test
xchg
jmp
repnz
cmp
fdivp
dec
test
repz
lock
lret
out
fsubp
fdivp
nop
jecxz
int3
int3
cmp
fstpt
loope
in
rol
lock
fdecstp
fcom
test
sti
enter
in
leave
lds
idiv
cli
fdivl
cli
rcr
cmp
ret
std
inc
fsub
jmp
sti
out
nop
int3
leave
adc
out
sarb
shlb
lock
call
out
std
rcl
rcr
movl
out
loop
imul
aam
xlat
out
call
rcr
lock
cmc
xlat
loop
sub
out
mov
ljmp
dec
fmul
ds
loopne
fmul
mov
in
xchg
xchg
nop
mov
xor
jecxz
xlat
xor
stc
cld
stc
cmp
xor
repnz
in
hlt
cld
std
mov
std
loopne
out
roll
in
int3
repz
xor
aam
fildl
call
in
lret
and
aaa
fmul
fmul
cmp
in
repz
in
xchg
loop
in
rolb
in
leave
loop
in
hlt
jmp
cmp
in
lret
stc
mov
int3
leave
xchg
fst
xor
xor
or
sbb
stc
fucomip
lret
loop
in
xlat
in
cmp
out
in
aad
cmp
test
sar
mov
loope
fsubr
addb
xor
cli
into
enter
fsub
jecxz
xlat
not
cli
mov
sti
in
call
les
aaa
leave
xlat
out
lret
xor
fidivl
cli
fcmove
jmp
call
fisttpll
in
into
stc
sti
fsubr
repz
in
std
and
std
out
test
movb
xor
into
aad
xor
hlt
cmp
cmp
cmp
cmc
ret
jecxz
xlat
loope
fcom
out
out
enter
shr
cmp
enter
cmp
iret
test
lock
cld
rol
jecxz
jmp
sub
mov
icebp
aam
iret
ret
out
enter
cmp
mov
std
loopne
sti
movb
in
rcl
rcr
xor
in
cmp
cld
jecxz
repz
in
cs
clc
out
repnz
in
icebp
ljmp
or
ljmp
mov
iret
int3
fcomi
idiv
fcomip
idivl
out
aam
enter
int3
cld
out
fsubr
hlt
ror
jmp
xlat
enter
in
into
cmc
icebp
xchg
jmp
xchg
xchg
shlb
out
jmp
mul
fnstsw
cmp
clc
fcomip
fcom
fnop
loop
xchg
in
enter
xchg
orl
jmp
div
cmc
sarl
fcmovbe
in
popl
int
shr
hlt
repz
aad
call
neg
fdivr
loopne
xchg
cmp
repnz
shr
rcl
in
cmc
ss
in
fcmovne
lock
test
in
aas
out
jecxz
loop
std
lock
ret
xor
call
xlat
iret
shr
div
add
fcmovnb
shr
mov
ret
fisttps
xor
repnz
in
out
out
ss
cmp
adc
rcr
mov
xchg
xchg
imul
aaa
into
fnstenv
imul
xor
xchg
cli
leave
in
les
out
out
repz
aad
jmp
shl
loope
cli
jmp
fcomp
mov
loope
popl
stc
lock
cmp
jmp
lret
ljmp
ljmp
incl
ds
hlt
cld
out
sar
loopne
lock
xchg
out
test
out
out
lock
in
call
hlt
ret
fbstp
clc
repz
addl
mov
jmp
into
imul
loopne
xor
cmp
in
in
lret
stc
lret
loopne
sar
fsubp
fiadds
fcmovu
loope
ret
repz
xlat
xor
ds
addl
divl
bnd
xlat
ror
fcmovu
fcmovne
sbb
repnz
push
lret
jg
add
jecxz
clc
out
xchg
xchg
shrb
in
fcmovne
aam
xor
fsubrp
lock
cmp
cld
sub
int
lret
nop
test
xchg
ljmp
fidivs
in
out
aad
cli
out
aad
out
xchg
cli
rcr
out
sub
out
call
out
iret
loope
filds
sti
mov
test
out
jmp
xor
lock
shl
into
idivl
lret
in
ret
out
aam
in
mov
test
jmp
int3
cld
cld
out
out
rcr
ss
aas
shll
cmp
sti
stc
shl
aam
stc
cmp
ljmp
int3
loop
jmp
lret
sti
flds
shl
stc
mov
xchg
out
loop
xor
out
xor
aaa
cmp
std
rcl
sar
fldl
aam
testl
jecxz
aaa
std
cmp
out
lret
divl
aad
cmp
cld
test
out
shl
sub
repz
in
int3
ljmp
into
fdiv
jmp
std
orl
in
loop
clc
into
loope
lock
clc
test
sti
xlat
test
mov
lret
test
addb
cmp
aaa
les
idiv
iret
repz
cmp
decb
icebp
mov
test
xor
xor
iret
fcmove
call
stc
test
aad
mov
cli
fadd
mov
hlt
int
rcl
repnz
xor
lret
hlt
shl
lock
ret
out
mov
mov
not
jmp
call
aas
out
out
loope
xlat
in
clc
sti
icebp
xchg
int
loope
xor
shr
mov
loope
cli
clc
lock
add
faddl
repz
xchg
in
cmc
test
ljmp
clc
sar
rorb
flds
rol
ss
hlt
cli
xor
jmp
testl
fxam
nop
incb
xor
cmp
xor
ds
sar
repnz
cld
out
lea
filds
enter
lock
aam
dec
test
stc
out
fldl2t
fcmovnu
loop
mov
mov
into
ljmp
fcmovnu
cli
call
ljmp
ret
fmul
fmul
out
into
loope
addb
xor
cmp
cli
hlt
sarl
sti
repnz
rol
clc
out
in
out
xchg
das
ss
cmc
shl
cmp
int
out
aam
test
xchg
sti
cli
mov
loop
aad
xor
xor
roll
rcl
flds
int
out
in
in
cli
test
inc
in
lds
sti
clc
clc
enter
sar
std
ret
aas
fadd
fdiv
sti
stc
out
fadds
divb
into
cmp
hlt
loope
cmp
fdiv
cli
test
in
mov
repz
jmp
cli
flds
repnz
ds
cli
ror
cld
loopne
mov
cmp
leave
repz
repz
out
repnz
cmp
fiadds
test
mov
shl
stc
std
cmp
call
clc
aas
rcl
hlt
lret
clc
mov
ret
jecxz
enter
lret
fcmovnb
cli
aam
cmp
jecxz
out
out
and
cmp
out
cs
hlt
leave
shr
out
into
in
std
icebp
rcl
idiv
mov
fmul
into
loopne
mov
ret
lds
in
jmp
icebp
aad
testb
add
lock
icebp
in
clc
clc
into
fcmovnbe
fsubrp
cli
xchg
loopne
ret
in
test
adc
icebp
ret
shl
lock
jmp
shl
fsubp
in
repz
test
mov
lea
out
loop
sar
in
shl
into
xor
cmc
xor
fcmovnu
fsubrp
incl
iret
xor
int3
shr
aaa
into
int
ss
or
cmc
ret
xlat
cmp
test
xchg
or
lret
in
ret
ss
iret
std
int3
jmp
cld
roll
cmp
xor
xor
div
fdivrl
lock
jmp
lret
movb
rol
xor
int
repz
out
cmpb
iret
rcl
leave
addb
xor
repz
xor
cmp
in
aaa
cmp
repnz
xlat
stc
fdiv
ffreep
loop
cld
ds
iret
mov
lock
jmp
leave
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
fmulp
xor
xor
cmp
dec
test
idiv
xchg
fucomip
xchg
aam
in
sti
jmp
icebp
mov
hlt
xor
int3
lock
rcl
in
cmp
cmc
out
cli
cli
test
repz
out
icebp
aam
out
rcl
clc
cmp
aad
iret
fndisi(8087
cmp
neg
loop
hlt
mov
fmull
iret
jmp
leave
jmp
aas
loopne
aam
icebp
neg
lock
out
sti
loop
lret
into
adc
cmp
repz
cmp
loope
ds
shl
fsub
mov
ljmp
mov
aas
repz
shlb
jmp
repnz
in
cli
lock
aad
fcmovne
mov
iret
jecxz
jmp
das
enter
fcmovne
enter
cli
repz
neg
fildl
fdivr
rorb
les
div
jmp
in
into
sub
fdivrs
ds
lret
lret
repz
shr
in
lock
clc
ljmp
fstpt
aad
mov
mov
shl
sti
cld
clc
hlt
lret
int
rcr
in
stc
cmc
lret
jmp
jmp
leave
int3
ss
call
cmp
loopne
sar
rol
loope
in
xchg
icebp
aaa
cli
call
cmp
aad
cmp
enter
cmp
lock
jecxz
shr
out
xor
cmp
shl
test
xlat
rolb
fcmovne
stc
int
call
call
jmp
cmp
rol
shl
fst
ret
cli
aam
cld
jmp
xlat
loopne
xrelease
cmc
ss
aad
sti
sub
clc
ss
jmp
out
out
test
fmul
xchg
loope
out
fstp
cs
cmp
fcomp
cmp
fmuls
into
in
jecxz
out
mov
shr
ret
cmc
fxch
rcr
cmp
out
into
cmp
shr
clc
les
icebp
repnz
xor
aaa
aad
rcl
shll
icebp
out
stc
and
sti
xchg
loop
testl
rol
xor
aad
into
ds
shr
rcr
fucom
jmp
mov
rorl
in
fmul
rcr
loope
cmp
sti
idivb
test
clc
stc
xchg
std
xor
fcom
pushl
cmp
rcl
xlat
repnz
leave
cld
cmp
jecxz
sub
fcoml
out
out
lret
out
fcomi
icebp
fadd
out
repz
xlat
out
loope
fcmovnb
ljmp
lock
icebp
cmp
cmp
mov
aad
cld
decb
in
test
xor
out
idivl
clc
lock
test
shr
ret
call
mov
call
icebp
xlat
in
shr
adc
aam
cld
fcmovu
lret
lret
fdivr
nop
lock
hlt
in
aaa
sar
std
cmc
cmp
fdivrs
hlt
rolb
aad
hlt
test
in
iret
ret
aaa
ret
not
ljmp
aas
cmp
fcomi
aad
in
call
int
aaa
repnz
leave
loop
out
sti
jmp
test
shl
std
stc
jmp
out
icebp
xchg
cld
xchg
loopne
call
test
clc
lock
cmp
roll
clc
xchg
sti
cli
call
imul
call
xor
cmp
cmpb
addl
loope
mov
div
icebp
call
lret
call
rcr
fcmovbe
loope
loopne
stc
sti
lea
rcl
xor
fldl2e
call
cmc
and
imul
cli
add
mov
ljmp
call
clc
hlt
out
rcl
repnz
xchg
loope
leave
int3
iret
jecxz
ljmp
fsubr
int
in
stc
icebp
idivb
neg
fsubp
fcmove
adcb
out
repz
lock
out
aad
cmc
repz
std
jecxz
incl
in
std
rcll
jmp
cld
cs
stc
rcl
cmp
jecxz
call
xchg
jmp
xchg
in
sub
in
xor
leave
cmp
cmc
fadds
mul
lret
testb
fcomip
xor
icebp
call
repz
sbb
test
jecxz
in
jecxz
in
test
loopne
into
cmp
sub
cmp
lock
mul
hlt
ret
xchg
stc
lret
xlat
in
fmull
lock
cli
ret
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
xrelease
mov
aad
jl
add
fstpt
ret
iret
dec
into
loop
in
lret
xchg
fadds
xor
leave
call
out
aas
enter
hlt
addb
out
leave
std
mov
loope
lret
into
xlat
in
fcmovnu
cli
cli
sti
fstpt
aaa
out
aas
call
icebp
enter
in
in
rol
cmp
cmp
rolb
xchg
cmc
out
fsub
ret
mov
fsubr
std
cld
loope
shl
lret
xor
jecxz
xchg
flds
mul
xchg
loope
std
std
in
into
sar
cmc
jmp
cld
jmp
loopne
inc
loop
jmp
cld
iret
call
xor
icebp
icebp
imul
int3
fidivl
sarl
rolb
std
test
mov
ror
iret
int3
xor
into
call
aad
jecxz
idiv
xlat
jmp
xlat
cld
sti
call
icebp
aaa
in
cmp
in
repz
repz
clc
out
fistpll
fld
in
fld
xchg
leave
jmp
test
int
cmp
out
fucomip
cmp
adc
aam
iret
cld
nop
orl
xor
fnstcw
cli
ljmp
std
leave
movb
repz
xchg
xchg
imulb
cmp
cli
out
std
not
lret
aam
stc
in
sarb
cli
cmp
fimull
shrl
lret
sar
ffree
lret
fdivrs
hlt
test
sti
shl
jecxz
sbb
jmp
xchg
jecxz
repz
lret
int3
aaa
clc
fsqrt
xor
xlat
mul
sarb
hlt
aam
jecxz
and
fdivp
repz
sub
int
xor
shr
shl
neg
in
xor
cmc
aad
leave
out
cli
or
mov
shr
xor
aam
ss
stc
into
repz
out
iret
shl
aad
cli
vpor
fsubr
xchg
in
loope
shr
fmul
int3
shl
cmp
aad
fincstp
aas
call
loopne
mov
mov
jecxz
cmc
ret
lret
int
iret
out
clc
xor
in
cli
loopne
fldl
fcom
int3
int
divl
repnz
fxch
out
fincstp
out
aad
enter
xor
repz
ret
fchs
int3
fdivr
shl
into
mov
shll
sar
cmp
lock
push
ret
cmp
clc
roll
mov
loope
not
in
repz
mul
stc
not
rol
into
addl
in
xchg
ljmp
in
rcl
repz
aam
fadd
out
or
xchg
fcmovnbe
cmc
out
aam
enter
int
clc
iret
dec
repnz
imul
mov
fdivr
loopne
out
loope
mov
jmp
iret
in
shl
cmp
shl
into
test
stc
dec
xchg
lret
cli
lret
jecxz
out
loopne
loop
lret
out
iret
sti
lret
repz
rcr
cmp
lret
lea
repz
cmc
ljmp
shr
neg
fcmovnb
not
sti
mov
cmp
xchg
out
call
fsubr
call
out
icebp
sti
cmp
ds
lret
decb
jmp
sub
ljmp
int3
or
ljmp
ret
mov
fcmovu
icebp
icebp
xchg
out
out
shl
shl
imull
cld
rcr
cld
into
sti
fiaddl
cmp
into
or
das
in
in
cmp
icebp
icebp
not
jmp
icebp
fadds
hlt
mov
out
cmp
aaa
sar
into
fsincos
enter
cld
xor
xacquire
mov
jmp
rol
lret
sti
repz
sar
clc
cmc
faddp
shl
inc
cli
in
iret
fiaddl
sub
hlt
ror
cmp
cld
aam
xlat
icebp
stc
loopne
cmp
hlt
ret
cld
out
xchg
test
jecxz
xchg
enter
stc
div
out
shr
lret
cmc
cmp
loope
xchg
ret
ret
jecxz
mov
std
icebp
popl
cmp
in
ss
in
loope
aam
ror
inc
xchg
ror
lret
fmulp
in
int
jmp
fcomi
xor
fistpll
ds
out
call
xchg
loope
lret
hlt
rol
hlt
lock
aad
lret
rcr
cmp
aam
fcomip
rcr
mov
xchg
ret
ss
sti
out
jmp
int
adc
loopne
test
jmp
addl
iret
xchg
call
repnz
stc
cmp
in
lock
test
loope
lock
loop
fucom
fnstcw
repnz
mov
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
aad
sub
mov
jg
add
in
cmc
cmp
fiadds
mov
out
xlat
sub
in
fcmovne
sti
aas
in
not
sti
sti
out
clc
cld
lret
fcmovnu
fdivp
hlt
shl
sub
sub
loop
std
aad
cmp
lock
in
in
int
clc
mov
fsubr
enter
xor
aad
cmp
add
out
aad
mov
flds
loope
ret
ret
xor
stc
out
ds
jecxz
std
neg
jecxz
clc
rol
lret
fld
in
out
out
mov
imull
leave
imul
loop
aad
fdiv
idiv
fdivrp
in
aam
jmp
loopne
ret
in
iret
faddl
shl
sub
sti
cmc
lret
cld
aad
cmp
jecxz
sarl
shr
loopne
call
shl
fbstp
loop
cli
enter
loope
out
sti
shl
sbb
xchg
sti
shl
xchg
sub
leave
out
cs
jmp
sar
rol
incl
std
pause
icebp
loope
lds
xor
out
int3
leave
out
shl
or
hlt
aad
jecxz
cmc
xchg
ffreep
in
mov
shl
rol
aad
lock
cmp
iret
lock
movl
xchg
xor
mul
leave
xor
xlat
into
out
cmc
in
cld
aam
xlat
in
incl
in
in
rcl
jmp
lock
xlat
loope
test
repz
jmp
enter
cld
mov
in
repz
ds
cmp
jmp
fmul
rol
lock
repnz
testb
loope
fidivs
lret
jmp
xor
jmp
inc
movl
sti
std
xchg
repnz
sub
xor
cmp
fsubr
sti
aas
cmp
rcl
shl
mov
jecxz
aam
leave
sti
and
loope
hlt
loopne
test
stc
int
xlat
lock
mov
addb
repz
cmp
hlt
cmp
call
repnz
test
test
xchg
icebp
aam
iret
sub
shr
loope
cmp
fcmovb
aam
sti
incb
lret
xchg
in
clc
xlat
out
xor
out
sti
aad
fdiv
add
loopne
cli
in
jmp
out
mov
xlat
xlat
jecxz
repnz
cmp
cmp
cli
xchg
in
xchg
jmp
ljmp
out
mul
lock
int
stc
faddl
out
cmp
in
in
out
test
mov
rol
jmp
sarb
in
cmp
in
aad
test
jmp
mov
sti
stc
int
mov
imul
loop
clc
leave
cmp
cmc
fsub
sarb
shl
out
sti
lret
mov
rcl
cmc
aad
in
lds
leave
fsubrp
rcr
dec
les
roll
lea
int
rcr
int3
ljmp
cmp
imul
loope
rcr
xlat
lret
aad
mov
loop
repz
jmp
out
repnz
cli
aam
std
loope
in
out
xchg
call
fldl
loopne
shl
iret
jmp
leave
xor
shl
out
loopne,pt
mov
loop
test
jmp
loopne
in
int
repz
jmp
sbb
loope
fscale
test
test
xchg
loop
test
in
int3
lret
loopne
icebp
in
jecxz
aad
ljmp
call
loopne
jecxz
xor
lret
rcl
int3
repz
loope
repnz
out
test
xchg
ljmp
fsubr
divl
lock
into
in
hlt
stc
loop
mov
cld
lret
loop
or
test
test
ror
jecxz
stc
ret
aas
ds
cmp
aam
fcmovnb
jecxz
aam
loopne
call
mov
divb
lret
ret
xor
fmul
ss
fcomp
push
loop
testb
xchg
test
int3
shl
cmp
ror
rcr
icebp
in
shl
testb
xchg
repz
faddp
not
out
fstp
cmp
cmp
ds
into
fadds
sbb
jmp
lret
ss
icebp
cmp
in
shl
hlt
rcr
icebp
loope
lock
xlat
in
int3
shl
jmp
xchg
mov
imul
xor
xor
sbb
icebp
decb
cld
stc
ret
mov
repnz
int3
idivl
cmc
ss
cli
cmp
ss
cld
xor
ffreep
sbb
or
rorl
shr
cmp
ljmp
cmp
rol
scas
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
sub
fistpll
add
sti
cmc
out
enter
std
xchg
hlt
jmp
xlat
xor
int3
out
jmp
ret
cld
vcvttpd2dq
shl
xchg
clc
out
nop
fucomip
repnz
std
leave
jecxz
clc
fucomi
icebp
sarb
clc
fdivrp
fiaddl
loopne
lock
repnz
iret
lret
cld
incb
fcmovnb
out
loope
neg
xchg
repz
xor
cmp
enter
lock
icebp
addb
faddp
xchg
in
sub
enter
into
out
out
cmp
rcl
hlt
test
hlt
fcmove
lret
cld
lock
repnz
xor
call
aam
icebp
rol
idiv
mov
enter
in
in
sti
rol
jmp
fmulp
jecxz
hlt
clc
add
sti
cld
out
test
into
rorb
fnstenv
into
out
das
fstpt
aam
aad
test
roll
mov
lret
test
out
cmp
cmc
jmp
xor
jmp
xlat
jecxz
out
xchg
cmc
fdivr
loope
test
xchg
xor
imull
clc
enter
aad
loop
repnz
out
mov
in
ret
in
imul
call
xor
xor
ds
lret
clc
iret
test
xchg
ror
aaa
xor
shl
out
hlt
out
cli
int
xor
ret
mov
addb
shl
lret
sar
int3
shr
std
hlt
lret
cmp
xlat
fcomip
cmp
in
out
in
fmull
mov
stc
repnz
fsub
out
in
rcr
in
test
leave
les
loop
xchg
int3
out
hlt
cli
into
imul
lret
cmp
cmp
fndisi(8087
and
test
hlt
hlt
or
into
xchg
int
call
ror
fnstcw
cmp
pushl
adc
rcl
clc
fimuls
int
lret
icebp
int
aad
xor
xor
cmc
cmp
cli
sti
rol
in
loope
in
iret
fldl
in
fucom
idivl
rol
cmp
in
lock
cmp
mov
out
enter
hlt
shr
stc
cmp
int
fsincos
lock
shl
loope
hlt
sti
addb
std
xchg
jmp
stc
rcr
out
cmp
test
stc
mov
enter
stc
shr
lret
call
fnop
jmp
stc
shl
fst
mov
cld
lret
fcmovnb
leave
test
fmuls
cmc
jecxz
shr
shll
std
cmc
loop
in
cmpb
aas
rol
mul
out
mov
loope
mov
loope
iret
lret
imul
repnz
fldln2
ljmp
in
out
sub
mov
call
out
jmp
leave
hlt
aam
out
fdecstp
shl
aam
out
faddl
mov
iret
repnz
in
aas
out
sti
ss
rcr
into
clc
incl
orb
fldlg2
lret
in
cmp
fldl
aas
loope
clc
leave
cli
enter
leave
int
jmp
cmp
ffree
loop
in
repnz
lea
repz
xor
fidivl
enter
shr
repnz
sarl
test
fnsetpm(287
sbb
stc
ljmp
fistpll
cmp
aad
stc
out
ror
jecxz
lea
test
icebp
ss
fst
aam
shr
ljmp
leave
stc
fdivr
jmp
iret
xchg
loopne
in
xor
fdiv
aam
loope
shl
loopne
into
flds
cmp
lds
out
in
test
aad
rcr
cld
enter
fcmovnu
fcmovnu
nop
xchg
shl
aam
aam
int
sti
call
out
fidivrl
clc
rcl
mul
out
xchg
repz
sub
neg
cmp
in
repnz
cmc
sti
fdivr
out
adc
rcr
sti
xchg
in
xor
in
clc
fxam
rol
rcr
not
lock
repz
mov
in
test
in
xchg
or
mul
lret
aad
fdivr
clc
fdiv
lret
sub
fsin
sub
rcr
int3
ljmp
cmp
ljmp
repnz
loope
cmc
fstp
fcmovu
fmull
mov
into
aas
xor
xor
int
cmp
jmp
xlat
cmc
loop
in
cmc
sbb
stc
cli
out
out
in
fnstsw
xchg
out
hlt
int3
into
sarb
lret
cmp
in
adc
mov
lret
mov
jmp
iret
int
ret
fstp
sbb
test
jg
add
sti
xchg
jmp
enter
shl
fcomi
fcom
rcr
shr
ffree
test
xchg
cs
xlat
int3
aaa
iret
icebp
cld
incb
repz
movl
rol
sub
lret
out
cli
fcmovnu
int3
fstp
inc
aad
out
cld
out
aad
fisttps
jmp
int3
ret
cli
cmp
lret
lret
fistpll
fldl2t
add
test
in
popl
xor
int
jmp
and
ret
jmp
fimull
out
int3
repnz
jmp
shll
icebp
cli
fcmovu
repnz
loopne
out
testb
addl
enter
in
fnsave
int
jmp
sar
ds
fcmovnb
ds
loope
rorl
clc
aaa
cmc
shr
enter
out
fcmovnbe
fdivp
rol
test
in
cli
mov
in
shr
shl
lret
imul
push
loop
rcr
shl
rolb
fadd
filds
out
cmp
shl
jmp
out
and
cli
cli
cli
sti
leave
fmull
xchg
int3
lret
leave
repnz
ror
hlt
ljmp
rolb
out
loop
call
shl
jmp
and
in
sti
shl
xor
ljmp
shrb
in
shr
icebp
out
ds
shr
shl
shl
out
xchg
call
xchg
xor
jmp
aaa
in
jmp
icebp
cmp
fst
fsubrp
loop
iret
mov
mul
xlat
aad
hlt
in
out
into
out
cmp
neg
hlt
shl
div
sbb
sub
fcoml
cmp
cli
fiaddl
ffreep
lock
cmp
shl
mov
fisttpll
in
xor
sti
cmc
lret
loop
jecxz
repz
out
ret
sti
loop
xchg
xchg
lret
shr
fcmovbe
cld
clc
cld
clc
rcr
in
xrelease
int
lret
mov
out
rcll
xor
in
jmp
fdivrl
ret
in
in
sub
out
das
shr
not
in
xlat
ss
xor
not
fldl
stc
mov
xchg
rorl
leave
int
aad
fcmovnu
fdivp
rcr
xor
sti
neg
enter
rolb
enter
clc
jmp
lock
lret
loop
out
xchg
cmc
lea
aaa
int3
cmp
aam
cmp
ffree
fcmovnb
div
std
addb
test
repnz
enter
aaa
icebp
stc
jmp
inc
roll
test
mov
std
addl
cmp
xor
ret
out
cmp
call
test
loopne
adcb
shl
jmp
clc
shl
shlb
mul
roll
xchg
fsub
ret
xor
enter
cmc
std
loope
test
xchg
rcr
ffreep
xchg
shl
loop
loopne
shr
ss
lock
cmp
test
fst
lds
stc
lret
mov
shl
int
iret
in
enter
cmp
ds
test
jmp
enter
jecxz
out
vpaddq
cmp
ss
aad
loop
fndisi(8087
repz
jmp
test
xchg
sub
icebp
cmp
into
int3
cld
cmp
icebp
fiadds
fdivr
addl
std
xchg
out
ror
fdivp
lret
jmp
repnz
cli
iret
int
lret
in
ror
cmp
leave
sar
int
jmp
rcr
cld
in
ss
call
ror
fsubr
cmp
out
mov
std
fucomi
xchg
test
fldt
aam
clc
aaa
cmp
aam
into
enter
ret
jmp
pushl
in
jmp
fsubr
ljmp
out
lock
fadd
in
test
jmp
and
out
lret
jmp
or
int3
aam
xchg
loop
xchg
xchg
iret
mov
aad
out
xlat
int
out
xlat
ds
shr
addb
shr
icebp
jmp
mov
shrl
iret
int
sti
repnz
repz
int
ss
leave
shr
aas
cld
lret
out
fcmovne
jecxz
xchg
lock
enter
call
bnd
lret
clc
cld
loop
ret
sti
hlt
mov
addl
mul
je
xor
add
jmp
rol
sarl
rcl
mov
sub
add
ret
sar
jmp
xor
ds
in
leave
rcl
stc
leave
ds
faddl
stc
rcl
cmp
aas
idiv
out
aam
icebp
fadds
mov
adc
out
in
les
stc
out
repnz
fcmovnu
in
fcos
loop
faddl
int
out
shr
in
mov
int3
ret
lret
std
fdivrl
sti
out
cli
icebp
rcl
hlt
clc
fmuls
lea
aaa
in
fdivr
lret
aad
loopne
sar
movl
rcl
nop
out
xor
ror
hlt
loope
imul
loopne
xor
ret
fsubr
in
into
cmp
lock
aaa
int
aad
jmp
ds
sbb
rol
cmc
test
fildl
mov
xor
lret
cmp
rcr
into
cmp
rcr
idiv
in
in
sti
mov
sti
xchg
rorl
call
cmp
cmp
loop
repnz
rcr
fcmovnu
leave
test
xchg
loope
test
mov
aas
into
out
in
rol
iret
leave
push
div
ds
aas
into
jmp
std
fmuls
shr
shr
xlat
xor
lock
out
shl
aad
in
rcr
repz
mov
cld
fmul
fnstsw
sub
xlat
cli
cld
leave
ss
out
dec
icebp
bnd
loope
ret
clc
fcmovnu
icebp
mov
xor
cli
iret
fidivs
rcl
fadd
mov
enter
cld
stc
nop
adcb
stc
lock
enter
loop
loope
shl
sti
xchg
hlt
ret
out
jmp
out
shrl
hlt
ror
sti
lock
enter
loop
loop
fcomp
sub
ret
lret
incl
in
shr
into
lret
cmp
in
in
hlt
xor
int
cmpb
cld
repnz
out
loop
test
lret
repz
out
jmp
aas
ffreep
cmp
and
out
test
fsubp
aad
rcl
out
rol
lret
idivb
cmp
loope
repz
fstp
mov
icebp
loopne
jmp
ffreep
loop
cmc
call
cli
repz
cmp
fsubp
stc
cmc
mov
xchg
mov
icebp
xchg
xor
div
icebp
int
loope
shl
repnz
xchg
clc
fsubp
int
out
fsub
xor
fucomp
fadd
cmp
aam
loope
sti
fstp
les
orl
in
cmp
icebp
cli
icebp
cli
cli
cld
sbb
repnz
cli
rcr
lret
mov
aad
in
int3
int3
leave
int3
shr
rcr
fadds
and
std
loope
out
out
xor
hlt
lret
rcl
jmp
out
shl
mov
out
jecxz
xchg
out
fbstp
in
sti
out
ret
sti
into
icebp
hlt
cmp
faddp
dec
loopne
repz
into
ss
aas
enter
cld
sbb
in
stc
in
fucomi
mov
push
repz
shl
in
rol
ljmp
into
rcl
shl
in
test
repz
shll
out
sti
xor
xor
lret
fdivr
les
mov
fucompp
loop
lret
out
aam
repnz
enter
repnz
cmp
cmc
out
flds
loopne
xchg
jecxz
in
cmp
in
xor
into
xlat
test
ds
lret
out
lret
or
ror
enter
enter
sti
fstp
test
repz
sti
clc
fprem
testl
jmp
roll
icebp
fdivrp
shr
decl
out
test
xchg
out
ljmp
aad
loope
repnz
mul
cmp
xlat
loopne
lret
loop
xchg
xchg
jecxz
icebp
xor
out
xor
cmp
int
in
loopne
aad
clc
in
jmp
loope
filds
lret
jmp
cmp
lret
aad
fld
fprem1
ljmp
jmp
roll
out
lret
enter
rcl
xor
rcl
fcmovnu
xchg
loope
out
loopne
icebp
in
aad
out
repz
repz
idiv
sar
in
xchg
iret
jmp
repz
fadd
lret
aam
fstpt
cmp
cmc
jmp
fstp
test
in
into
leave
loopne
cmp
leave
int3
in
fsubr
std
iret
rol
lock
orb
mov
out
mov
in
in
xor
repnz
xor
out
mov
jmp
iret
aad
aad
push
xchg
repz
add
cmc
int3
repz
lock
ret
fmulp
mov
int
neg
ret
repz
shr
icebp
in
fcmovne
fabs
rolb
leave
jmp
loop
loop
iret
repnz
out
repz
loope
shl
out
aas
aad
aas
fsubp
in
mov
mov
in
stc
fcmovu
icebp
repnz
cmp
ss
out
mov
aam
xchg
loope
in
shl
mov
xor
xor
cmp
aam
dec
repnz
and
in
in
fstp
jmp
xor
in
fstpt
das
jmp
cmp
fdivr
loop
fldl
xchg
jmp
loope
cmp
xchg
xor
xor
cmp
fucomp
loope
sarl
sar
les
fst
sti
orb
mov
xrelease
out
aad
out
test
out
ror
adc
sar
mov
mov
jmp
hlt
icebp
fcmovnb
aad
aad
fdivp
loope
shlb
jecxz
ret
xor
jmp
icebp
enter
lock
sub
int
leave
out
out
out
out
ds
cmp
repz
test
leave
in
lock
jmp
aad
icebp
out
sti
div
ret
roll
fld1
stc
int
fcmovne
in
repz
fdiv
xlat
call
ret
rcl
incl
jecxz
aam
div
iret
rcr
into
into
jmp
test
xlat
loop
sbb
incb
in
repz
xor
das
aaa
lock
call
fcomip
fsub
sbb
test
mov
repz
in
divb
ror
rcl
jecxz
ret
aad
xchg
fisttpl
movl
fcomp
fcomip
aam
cld
in
test
loop
loop
aam
std
fcmovnbe
loopne
test
faddp
lret
out
stc
stc
xor
std
cmp
xlat
in
clc
in
out
aam
rcr
mov
sbb
test
fidivs
in
into
shl
shl
imul
cmp
aas
aam
cli
les
jmp
enter
ss
jmp
loopne
shl
fcos
add
xchg
filds
lret
cmp
rcr
cmp
std
ret
mov
lret
and
sbb
std
fadd
ss
cld
fucomip
cmpl
lret
call
cmc
shl
lret
ss
aad
cmp
rcr
testb
mov
out
fdivp
ror
out
sub
int3
out
in
cmc
cmc
cmp
roll
cld
sbb
test
xor
rcl
shr
hlt
rcr
addb
test
ror
in
jmp
xlat
lock
lret
loope
div
xchg
repz
xchg
faddl
ret
ljmp
iret
int3
repnz
cmpl
sti
adcb
stc
vcvttss2si
in
lret
ss
incl
xchg
clc
test
ljmp
dec
ljmp
lret
enter
in
cmp
cmp
fisttpl
fucom
out
or
enter
cmc
lock
jmp
push
aas
rcl
xor
and
test
shr
xor
icebp
xor
out
clc
enter
in
movb
test
lock
cmc
cmc
jmp
int3
not
aad
aam
cmp
cmpl
test
incl
orb
in
clc
int
out
ds
test
add
xlat
dec
xchg
lock
sub
hlt
repz
lret
fiaddl
mov
int
ljmp
cmc
out
iret
aaa
xor
loope
xor
fucomp
aad
out
fmull
loope
xchg
loop
das
leave
fmulp
aad
cld
clc
int3
sbb
cmp
jmp
mov
clc
in
enter
in
ss
in
fcomp
fdivp
icebp
into
cmp
stc
out
test
lret
sbb
loopne
icebp
rcl
in
das
fdivl
fsubrp
lret
loopne
xchg
out
mov
in
nop
cmc
loopne
aam
repnz
xor
shl
sarl
fld
cmp
mov
popl
imulb
xor
fcmovnbe
out
neg
in
sbb
sarl
fnstsw
loope
hlt
test
lret
fmull
hlt
clc
hlt
iret
out
cmp
cmp
cmp
icebp
cld
repnz
add
mov
mov
pop
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
jg
std
add
into
fstp
test
int
les
add
iret
repz
fdivs
aaa
cmp
cmp
not
iret
cld
fadd
in
aam
jmp
cld
xchg
repz
xor
cmc
enter
out
test
jecxz
fadd
call
in
incl
xor
lret
sarb
sar
out
fmul
idiv
cmp
enter
repz
in
xlat
sbb
test
in
sub
jmp
fimuls
shll
cmp
aad
fdivrs
in
iret
ret
lds
rorl
nop
clc
jecxz
xchg
loopne
test
xor
cmc
out
into
ds
fucomi
cld
xchg
cld
test
ror
xor
shr
rcr
into
cmp
fdivrl
repz
in
roll
ret
ret
test
ds
into
in
int3
ljmp
icebp
cli
cld
loope
jmp
test
lret
test
in
das
xlat
lds
into
jmp
int
cmc
cmp
cld
xchg
ret
cmc
lret
enter
in
aaa
imull
aam
repnz
hlt
cld
lret
cmp
std
repnz
test
mov
int
aam
lret
out
sti
cmp
enter
roll
sbb
lea
jecxz
shl
int3
stc
fldz
in
shl
dec
repz
rcr
out
in
fimull
lret
fsub
xor
call
test
ss
mov
imul
stc
xchg
int
lock
out
xlat
xor
out
int3
int3
xlat
shl
cli
incb
in
out
loopne
iret
aad
lret
int
aam
addl
cmp
loopne
lret
mov
out
lock
call
xor
fmul
fdivr
std
sti
lock
ret
call
jecxz
iret
mov
aam
leave
xor
ss
sti
cli
ljmp
xchg
lret
jmp
enter
call
aaa
aaa
rcl
lock
into
xor
fadd
in
shl
testl
ljmp
sti
jmp
jmp
iret
out
cmp
rcr
aas
cmp
adc
rcr
repz
call
leave
fsub
dec
out
cmc
rcr
hlt
faddl
mov
test
mov
repz
iret
sar
out
shr
loope
cld
aad
lds
mov
mov
loope
xchg
lock
in
int
cmp
fcmovnb
int
cmp
out
in
hlt
loope
fincstp
ljmp
in
mov
in
imul
in
leave
cmp
in
ds
aad
ret
in
in
orb
test
jmp
test
ds
xchg
jmp
ljmp
cs
rol
int
enter
loopne
out
fptan
loopne
fcmovbe
mov
loop
testb
repz
mul
out
in
shl
call
ret
sar
jmp
mov
test
in
in
cmc
rcl
in
enter
cmp
ss
cld
test
add
repnz
aad
ret
rol
clc
ror
aaa
std
cmp
aad
in
ds
stc
fcmovbe
mov
int
and
aad
out
xlat
xor
int3
lret
aam
out
ds
clc
repz
lret
icebp
mov
adc
rcl
into
cli
out
leave
not
fcmovnu
idiv
out
ffreep
repz
ljmp
int
aad
xor
out
xor
out
neg
cld
jmp
cmp
out
ret
cld
xchg
leave
cli
jmp
fnstenv
ror
cmp
std
into
ljmp
xchg
call
in
int3
jecxz
nop
fsub
out
cmp
cmp
hlt
out
iret
shl
fiaddl
clc
fucomp
in
test
aam
xor
leave
rol
sti
cld
ss
cmp
call
aam
mov
out
in
iret
mov
in
xchg
loope
xor
cmc
cli
xor
neg
idivb
sarb
repz
ret
out
sub
repnz
in
ds
cmc
out
lock
stc
sar
jne
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
jno
lret
jg
std
add
aas
clc
cmp
in
leave
xchg
or
icebp
into
out
aad
loope
rcr
rorb
fdivr
xchg
lea
xor
aaa
ljmp
repnz
out
test
cld
jmp
hlt
xchg
jmp
aam
icebp
iret
leave
std
out
cld
cli
cmc
sbb
aad
xlat
cli
cld
xchg
out
call
aam
xor
xor
stc
call
jmp
jecxz
xor
jmp
enter
out
cmp
fucomp
aad
hlt
cld
aad
incb
cld
out
sti
into
in
fmull
cmc
test
std
cmp
sar
rol
test
sbb
rcr
mov
out
int3
icebp
fcmovnu
rcl
into
aam
repz
imul
and
aas
shl
xlat
out
fiaddl
shrl
lret
lret
cld
lret
int
cmp
test
lock
rolb
fsub
ror
in
icebp
xor
loopne
icebp
repnz
cmp
rcl
xlat
xchg
xchg
stc
aas
stc
mov
mov
loop
ds
ss
clc
xlat
shr
in
fiaddl
filds
ljmp
lds
shr
hlt
icebp
sarl
jecxz
loope
test
in
fsubp
loopne
out
sti
out
out
cmp
xchg
jmp
call
cmc
fnstenv
cmp
aad
xlat
cld
std
xchg
jmp
xchg
test
sti
ljmp
bnd
and
mov
out
lea
mov
aad
xor
fnsave
hlt
cmp
sti
ds
fdivr
sar
jmp
test
int3
loopne
shr
sub
int3
in
shl
shl
and
ret
ret
fdivr
fcmove
in
decb
cmc
shr
int3
ret
not
repnz
jecxz
out
sar
icebp
fimuls
in
loopne
int
and
ror
idivb
iret
xor
sar
sub
sarl
icebp
cli
repz
test
into
xlat
in
xor
in
lret
int3
loope
cli
fcomi
repz
fisttpl
mov
mov
icebp
lock
clc
shl
aad
cmp
jmp
rcl
repnz
test
mov
neg
call
repz
out
ljmp
fdivl
int3
idiv
into
sti
clc
cmc
repnz
fimull
incb
int3
xor
in
div
xor
lret
xchg
loope
hlt
fiaddl
cmc
in
out
xlat
shl
int3
icebp
hlt
in
stc
into
repz
fdivrp
in
lret
xchg
xchg
in
xchg
jecxz
lret
xor
fldln2
aam
rcr
in
cmp
test
lret
ficoms
mov
jmp
out
fcmovnbe
fucomp
decb
xor
clc
fdiv
shl
in
icebp
lret
fmul
in
jecxz
cld
aam
repnz
test
clc
cli
out
xchg
icebp
jmp
ror
cmp
jmp
iret
in
ret
std
xchg
test
in
adcl
ss
ror
cmc
hlt
fld
xchg
mov
stc
lret
jecxz
into
mov
xor
in
hlt
fdivr
into
cmp
in
test
enter
or
aam
ret
cmp
aam
shl
xor
rorb
lock
in
jmp
lock
aad
cmp
filds
icebp
loope
sti
jmp
mov
and
xlat
jmp
cmp
fadd
ret
mul
repz
int3
cli
test
icebp
in
iret
xchg
xchg
lret
jecxz
aam
in
cmp
out
clc
sti
xchg
xchg
ljmp
test
xchg
out
loop
xlat
iret
shl
repz
xor
xor
cmp
sti
rolb
xchg
test
out
into
ljmp
cmp
cmp
std
shl
fdivp
lock
mov
out
in
out
std
fisttpl
loope
imul
cli
out
xlat
in
fsubr
rcr
shr
cmp
xlat
in
cli
mov
cmc
cmp
push
aas
fcmovne
and
mov
mov
jmp
jmp
enter
fstp
fstp
adc
jb
fimuls
cli
jg
std
add
roll
lret
xchg
ljmp
cmc
lret
sti
ror
rolb
ret
loop
test
in
shl
lret
stc
leave
jecxz
out
repz
cmp
cmp
sbb
call
out
lret
lret
lret
loope
ret
lret
jmp
fdivrl
aad
div
cmp
xchg
movb
std
mov
jecxz
xor
lds
int3
clc
fdivr
loope
lock
ror
mov
clc
testl
iret
in
mul
int3
lret
imul
aaa
jmp
in
call
test
icebp
cmc
test
repz
fcmovnbe
cmp
fucomi
fmul
loopne
hlt
ffreep
fmull
mov
loope
shrl
loopne
repnz
rcl
int
fdivp
cld
jecxz
sub
cmp
fisttpl
out
in
into
jmp
xlat
cmp
movb
rcr
call
loopne
in
std
out
mov
in
xor
shl
shl
ljmp
rcl
fmull
idiv
xchg
jmp
into
jmp
fmulp
not
ret
xor
xor
xlat
out
push
cmp
faddp
leave
in
in
jecxz
test
rol
rcr
lock
sar
test
iret
clc
rcl
jmp
leave
loope
enter
call
jecxz
out
repz
xor
stc
loopne
test
mov
cli
call
xchg
jmp
shlb
rol
call
std
iret
xor
std
loopne
sti
mov
cmp
xchg
in
out
shrl
divb
aaa
cmp
mul
aad
aam
in
xlat
cmc
sar
out
cli
shr
iret
icebp
xchg
fidivs
icebp
iret
int3
xor
int3
jmp
aas
addl
inc
xchg
in
or
rolb
icebp
in
aad
into
lret
or
int
aas
and
call
int
out
rorb
xor
clc
idivb
xor
lret
test
icebp
mov
out
jmp
xchg
icebp
fucomp
xabort
in
ljmp
aam
fidivrl
fadd
fucom
loopne
in
mov
mov
ret
lds
lret
aam
out
jmp
loopne,pt
fucom
fsubp
sbb
decl
cmc
xor
ret
cmp
repz
xor
jecxz
jecxz
roll
int3
out
sti
mov
out
xor
aad
fsubr
icebp
leave
ds
sar
cmp
sarb
fiaddl
cs
repnz
divb
icebp
int3
std
cmp
roll
in
loope
icebp
addb
ss
rcr
cmp
ror
aas
jmp
fimuls
ljmp
aaa
shl
fdivr
repnz
xlat
cmp
cli
xlat
in
sti
iret
iret
out
jmp
out
lret
xorb
out
cmp
lret
fsubp
out
incl
lret
shl
lret
aad
fsubr
loope
test
cmp
lret
ljmp
vpsrad
shl
into
cmc
icebp
fdiv
iret
repnz
les
lock
out
xor
rcr
in
xor
ss
into
fcomip
sti
leave
movl
out
lds
clc
cmc
xlat
xor
out
stc
rcl
std
in
call
enter
call
xor
shrl
fdivrl
fucomip
jecxz
cmp
clc
std
lds
idiv
fdivp
ljmp
xor
jmp
in
xor
lret
loope
iret
loop
rcr
std
int3
enter
incb
xor
lret
out
out
jmp
cmp
ror
sar
sti
in
std
jmp
and
int3
in
cmp
lret
out
int
loop
aas
fadd
in
ret
in
sti
in
test
mov
xchg
test
lock
sti
sub
leave
rcr
in
fdiv
loop
cmp
rorb
cld
icebp
cli
in
fimuls
fcmovne
hlt
into
ljmp
sbb
idiv
fsubp
mov
int
repz
leave
fcomi
clc
cld
out
hlt
lock
cld
mov
xchg
add
add
aad
rcr
fstp
sbb
push
sub
add
hlt
rol
ret
leave
mov
test
mov
shr
mov
xor
into
jmp
aam
cmc
call
fdivr
in
fisttpll
div
out
ret
ljmp
fcmovnb
out
ret
out
sbb
out
in
xchg
jecxz
vpsraw
repz
repnz
cmp
cmp
mov
fabs
xchg
test
loope
in
xchg
xchg
shr
sti
fcmovnb
cld
neg
test
shr
test
fsubr
jecxz
iret
fmul
mov
in
loop
fmul
cmp
call
aam
test
ret
testl
out
mov
shrb
stc
stc
lds
aad
shl
xlat
jmp
rcr
out
loopne
lds
mov
in
fadd
loop
enter
iret
into
fdiv
cmc
cmp
into
inc
out
mov
fstp
in
jecxz
in
out
mov
fstp
div
fsubr
cli
clc
clc
xchg
fstp
out
lea
in
aad
lret
repnz
idivb
repnz
cmp
rol
in
sti
mov
in
das
xor
filds
rol
sar
sbb
sub
fsubrp
lret
aaa
vpmaddwd
xor
loop
repnz
sti
in
mov
repz
stc
ss
repnz
aad
lret
out
jecxz
xchg
in
fiadds
iret
aad
cmp
leave
fidivrl
test
fnstcw
rcl
cmp
sti
mov
add
mov
mov
out
in
into
stc
shll
out
cmp
jmp
add
rolb
ljmp
out
out
imul
lock
neg
idivl
icebp
lret
jmp
loope
or
sbb
sub
xor
in
lret
lret
bnd
cmp
stc
fcmovb
ffreep
lret
in
flds
sub
xor
rcr
cmp
aad
shl
fimull
repnz
out
in
aam
repz
jmp
ret
icebp
lock
sar
fadd
in
out
and
sar
jmp
jmp
shr
aam
jmp
shl
cmp
fdivrs
stc
cmp
loope
icebp
out
jmp
loopne
leave
cmp
cld
cmp
call
dec
aad
fstp
in
std
loope
out
std
nop
test
leave
cmc
in
in
xor
call
addl
xchg
ficoms
iret
shl
lock
leave
fbstp
ret
xor
not
and
fisttpll
in
mov
sar
call
fnsave
rcl
rcl
icebp
shl
jmp
test
jmp
shl
in
into
icebp
lret
out
icebp
fsub
into
mul
ret
ret
in
ret
mov
aas
int3
in
fsub
stc
out
ss
stc
fstpt
inc
div
jmp
loop
ror
enter
out
loope
ljmp
cli
icebp
aam
shl
cld
cmp
cli
mov
stc
mov
jecxz
call
sarb
fyl2xp1
aam
shr
clc
out
faddl
aam
loopne
loopne
enter
shr
xor
cmp
cld
aas
std
xchg
fcmovne
std
mov
aam
sti
out
out
repnz
cmp
aad
sti
repz
sti
fcmovnu
fildl
aad
out
jmp
shlb
int
ljmp
loope
clc
mov
in
test
mov
ret
das
aad
test
xor
out
xlat
aas
cmp
push
addl
int3
out
xchg
cmc
xor
enter
out
aaa
xor
fadds
in
xlat
fdivrp
int3
loope
ret
fcomp
mov
loop
ss
into
aad
fdivs
aaa
test
cld
cmp
xchg
aad
xlat
nop
mov
mov
xor
lret
in
imul
aas
out
ljmp
call
ret
cld
xor
nop
xchg
xor
in
lret
int
fnstsw
in
in
roll
into
out
rcll
jmp
xor
into
int
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
cli
out
and
test
cmpsb
add
lret
ds
fcmovnbe
lret
in
jmp
leave
ret
jmp
in
out
xchg
in
aam
jmp
fmul
xlat
sti
cmp
ret
loop
cmc
cld
test
in
cli
enter
int
out
hlt
xor
repnz
lock
rcl
out
xchg
jmp
test
xor
ror
aaa
jmp
rcr
lock
cmp
rcl
ret
xlat
fdivr
lret
stc
enter
xchg
repnz
ror
xor
iret
stc
fcmovu
in
sti
clc
orl
icebp
sub
sar
cmp
cmp
rcl
iret
div
stc
test
jmp
clc
rcl
loop
into
xor
jmp
in
xor
lret
ffreep
cmp
test
filds
call
rcr
xor
xor
in
iret
cld
cmp
lock
enter
ds
rol
leave
lds
out
sti
lret
sti
cmp
rcr
add
test
repz
xchg
call
repnz
out
ljmp
test
cmpl
xchg
xchg
ror
adc
in
fmul
icebp
out
sti
neg
int3
stc
repz
loope
or
aad
xor
xlat
shr
aaa
repz
loop
aas
cld
loop
std
ds
shr
xchg
rorl
xor
in
cmp
loope,pt
icebp
sarl
sbb
out
lea
incb
iret
in
clc
xor
cld
ror
jecxz
jmp
out
stc
icebp
iret
sti
xchg
call
shl
cmp
enter
call
out
xabort
aad
hlt
cld
loopne
xchg
in
int
int
fxch
jecxz,pt
sbb
mul
ljmp
or
cmc
jmp
fdiv
sar
cmp
filds
call
rcr
nop
xchg
fdiv
icebp
ss
sub
stc
ss
in
ret
jmp
mov
sti
call
enter
lret
iret
jmp
hlt
int3
call
jecxz
test
jecxz
aas
lret
ror
and
not
vpsrlq
stc
xor
stc
fnstcw
vpmuludq
bnd
in
out
addb
ds
out
aad
out
fildl
xchg
roll
neg
fucom
decl
lds
shll
fdivrl
ror
roll
out
cmc
clc
loopne
jmp
in
jecxz
xchg
test
loopne
call
loopne
fdivr
into
repz
cld
decb
int3
loop
jmp
shl
cmp
in
int3
sbb
lock
mov
test
hlt
int3
cmp
ljmp
in
lock
test
jecxz
out
out
movb
loopne
call
hlt
cmp
loop
test
mov
ret
cld
loopne
ror
sub
jmp
cmp
fstpt
fdiv
adc
ret
call
xor
das
shl
cmc
repnz
fnsave
cmp
aas
incl
testb
jmp
int3
xor
xor
rcr
test
fxch
fucomip
out
mov
sub
in
jmp
cmp
neg
hlt
clc
cmp
cli
xchg
cmp
xchg
repnz
int
shl
ljmp
cmp
in
clc
clc
sbb
fdivr
loopne
test
leave
fucomp
int3
cli
xchg
jmp
iret
aad
xlat
repnz
cmp
rcl
aaa
ret
iret
repnz
hlt
test
fcmovne
into
cmc
cmc
jmp
hlt
repz
fcmove
cli
loope
int3
loopne
ret
mov
in
sti
ljmp
int
leave
jmp
jmp
xlat
loopne
repz
in
out
in
xchg
sub
aaa
iret
iret
repnz
aam
idivb
sti
ret
cli
int3
aam
loopne
enter
fisttps
iret
out
fyl2xp1
cmp
xor
cmp
test
out
in
loop
in
out
int
sub
jecxz
ret
out
int
clc
repnz
lock
cmc
lock
call
in
cld
sub
ret
aad
ljmp
rol
out
loopne
mov
inc
in
daa
test
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
loope
in
mov
jg
cmpsb
add
fucom
mov
loop
hlt
in
call
int3
xlat
lock
cld
icebp
rcr
out
stc
mov
enter
sub
sarl
lock
xor
in
hlt
sarl
loop
cmp
mov
sub
leave
fdiv
enter
int3
int
out
shl
lret
not
in
cmp
shl
icebp
aam
call
enter
mov
xchg
lret
ss
cmp
cmc
xor
out
cli
ret
lock
stc
neg
mov
jmp
nop
xchg
xor
ret
lret
cli
cmp
loope
test
rolb
icebp
loop
rorb
divl
cmp
roll
rolb
iret
mov
cmc
in
in
icebp
imul
in
out
test
mov
ljmp
xorl
out
leave
out
cmp
clc
clc
out
cmp
rol
fisttpll
cli
loopne
jmp
loope,pt
stc
aad
cmc
repz
sti
cmp
loop
fsubp
in
mov
fists
xor
cmc
out
cmp
aam
shl
call
add
lret
xchg
dec
mov
mov
hlt
xor
cmp
cmp
not
sub
repz
fsubp
sti
sti
idiv
xor
test
shll
ror
rol
out
ljmp
fincstp
rcr
jmp
enter
in
mov
rol
xor
ljmp
xor
fldl
sarb
les
xchg
loop
stc
out
enter
cmp
loope
in
std
ljmp
test
cmc
jmp
addb
clc
ror
cmp
sti
repz
fcomip
hlt
in
filds
inc
iret
test
xchg
fucom
int
shr
cmp
int
jmp
aam
or
ret
in
hlt
mov
xchg
faddl
in
fdivp
into
ss
std
enter
sar
rcl
int
fiadds
loope
ljmp
mov
ret
jecxz
xor
aad
xlat
fabs
aam
aas
loopne
out
test
mov
in
xchg
fimuls
loope
vpmovmskb
out
std
loope
shl
cmp
loopne
shl
clc
call
lock
rcr
clc
lret
cmp
xlat
shl
fcmovnu
xchg
call
decl
in
xor
aam
aam
fdivs
ljmp
loopne
add
clc
jecxz
nop
repz
iret
call
lret
clc
repnz
cld
jecxz
faddl
call
test
jmp
xorb
loop
ret
iret
lock
int3
cmp
cmp
xlat
flds
out
rolb
repz
ret
leave
jmp
lret
int3
adc
shl
jmp
lret
stc
test
iret
mov
out
shll
in
hlt
xor
in
xlat
cmp
fiadds
lock
cmc
lret
fsubp
lret
std
int
stc
ljmp
ret
in
fstp
sar
test
mov
jmp
icebp
jecxz
fdecstp
xor
jmp
stc
sti
sti
std
out
cmp
aam
filds
movb
loop
clc
in
sarl
std
ss
rolb
loop
loopne
fimuls
call
loope
cld
rol
lds
loopne
enter
xchg
out
lock
xor
sti
std
icebp
sarl
aam
sarl
stc
aad
mov
ljmp
rcl
ds
rcl
sub
fcmovnbe
sti
cld
out
iret
cld
neg
xor
jmp
jmp
rcr
test
loop
ljmp
cmp
cmp
cmp
xchg
sbb
incl
cmc
sbb
lret
rol
aad
icebp
enter
lock
sar
loop
aas
fdivr
lret
xchg
shl
jecxz
icebp
lock
in
stc
repnz
ds
fdivrp
addl
repnz
mov
aaa
into
sti
xor
ss
sti
div
enter
rcl
repnz
fucomip
cli
loope
ljmp
in
lret
ss
ror
sbb
fcmovnbe
fcos
fsubp
roll
xlat
aam
lret
rcr
lret
shl
cmp
aad
loopne
orb
xchg
int3
mov
mov
movzbl
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
xor
jl
add
rol
out
bnd
hlt
cmp
jecxz
ds
jmp
inc
mov
out
out
shr
cmp
aad
aas
fcomip
aad
cld
clc
xchg
in
sar
std
loopne
stc
mov
ror
xchg
sar
cs
repnz
fdivrl
shl
shl
cli
enter
mov
out
out
das
xor
cmc
sarb
lret
in
out
into
call
faddl
mov
out
rol
xor
sti
rcl
cmp
icebp
or
aas
out
hlt
fadd
test
xlat
xlat
decl
out
in
shr
in
mul
xlat
leave
repz
out
aas
cli
ret
jmp
rorl
enter
int
fsubrp
ljmp
rolb
int
xchg
loope
adc
leave
out
cmp
sar
int3
fcomip
shl
out
ljmp
xchg
xlat
ljmp
sar
int3
cmp
sbb
in
leave
test
lret
int
lret
call
fldl2e
aam
xchg
leave
xchg
fsub
jmp
shl
lret
imul
rol
fmulp
shr
in
aam
loopne
mov
out
call
mov
aam
rol
out
shll
stc
clc
fdiv
xor
not
rcl
stc
decl
mov
shll
xor
std
lock
rcr
xor
sbb
mov
sbb
xchg
in
shl
ret
ss
cs
enter
loopne
loopne
jecxz
out
xchg
addl
jmp
int3
hlt
int3
int
aam
cli
loop
fcmovnb
in
and
aas
lret
mov
test
mov
rorb
lret
lret
lret
or
hlt
cmp
ror
sti
jmp
jmp
jecxz
int
vshufps
call
into
rolb
hlt
out
fpatan
cmp
fcomip
shll
leave
fcomp
cld
shl
cmp
shl
loopne
mov
jmp
clc
fsubr
in
in
ret
shlb
aaa
enter
xorl
hlt
test
mov
cli
out
ljmp
shrb
call
aam
cmp
cmp
cmp
clc
cmc
int
out
call
ss
out
cmp
cmp
enter
out
lock
loopne
ret
mov
sbb
xchg
addl
fcmovne
cli
sarb
divb
fcmovnbe
repz
leave
loopne
or
int3
in
ret
xor
xor
clc
ror
aad
cld
aas
sbb
out
aam
cld
shl
lret
in
fcomip
xchg
iret
aad
shlb
ror
fsub
roll
clc
std
incb
mov
cmp
int
xor
loopne
fnsetpm(287
repz
cmc
iret
cmp
cld
shl
xlat
cmc
fcomip
aad
int
into
clc
test
xlat
icebp
int
ss
xor
hlt
clc
cmp
xor
fdiv
rcl
fcomi
int3
repnz
mov
div
cmc
jmp
cmp
cld
iret
lock
xchg
aas
mov
jecxz
cld
ljmp
loop
shl
into
in
lret
sti
ljmp
xor
mov
loop
decl
ds
shll
cmc
repnz
aad
call
jecxz
cld
jecxz
cli
test
incb
xchg
lret
xor
ljmp
ds
cmpb
ret
in
in
loope
nop
jmp
xlat
int
out
into
cmp
fiaddl
leave
orb
jecxz
out
mov
ret
fdecstp
fadd
xor
sarb
cld
cmc
xchg
ffreep
in
leave
loop
out
ljmp
mul
fidivs
xlat
hlt
xor
fdiv
sar
loopne
ljmp
shl
xchg
xchg
sub
fdiv
lret
cmp
lret
sti
stc
roll
std
fmul
into
and
ror
in
iret
call
fmul
cmp
lock
aad
out
in
loop
adcl
clc
hlt
out
sarb
sar
stc
filds
xor
out
jmp
shl
xor
iret
idiv
clc
cmp
rcr
jmp
loope
jecxz
mov
lret
mov
nop
ror
in
xor
sti
stc
fcom
lea
mov
mov
xor
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
mov
xchg
jg
cmpsb
add
jecxz
shl
sar
icebp
test
mov
mov
les
xor
fstp
jmp
in
cli
loopne
sti
sti
shl
out
fxch
int3
clc
call
rol
ror
out
in
repnz
std
lock
hlt
jmp
repz
mov
int
ds
ret
ror
ds
sub
sti
loopne
cmc
leave
icebp
orl
xor
cmp
sarb
shl
shl
stc
sti
roll
iret
or
test
rcl
call
repz
cmp
sar
sar
aam
cli
in
ficoml
aam
sti
lret
enter
cmp
fstpt
enter
out
shl
xchg
adcb
loop
fdiv
fnop
div
into
xor
cli
into
cmp
loopne
ret
lret
sti
ljmp
repz
ljmp
xor
test
xlat
enter
mov
mov
hlt
int
fcmovnu
ljmp
out
imul
xchg
xchg
aam
imul
iret
xlat
cmp
std
loop
out
sti
rcl
mov
in
int3
xchg
out
sub
shrb
fst
int
shl
int
hlt
cmc
xchg
loope
lret
test
out
xchg
test
repz
leave
cli
cmp
iret
call
idiv
mov
fcmovne
lret
xchg
out
icebp
in
ret
xor
cmc
rcl
loope
int3
sbb
in
adc
cmp
into
cmc
int3
neg
ljmp
jecxz
loope
fdiv
lock
rcr
or
frstpm(287
addl
shr
ljmp
cmp
icebp
in
dec
cli
loope
test
mov
shr
leave
idiv
out
cmp
out
out
jecxz
cld
out
enter
fimuls
mov
cs
repz
aaa
xor
cld
or
sti
idivb
cli
call
call
cli
mov
les
fcmovnu
cld
aaa
fucomip
fdivrs
jmp
ret
jecxz
cmp
mov
xor
out
iret
ljmp
into
jecxz
mov
enter
int
adcl
repz
into
out
aam
cmp
std
sti
jecxz
xlat
in
enter
cli
xchg
lret
mov
adc
shrl
repz
repnz
loopne
cmp
fucompp
fdivr
leave
fiaddl
xor
neg
loop
aas
aam
fcmovnu
jecxz
out
clc
loope
call
shl
vpsubb
jmp
cmp
loop
aas
idiv
jecxz
testl
xchg
repz
repz
xor
cmp
enter
shr
out
stc
leave
out
test
in
mov
xchg
ror
cmc
out
in
ret
lock
cld
fcomp
in
push
sarl
incb
xchg
jmp
xor
lock
clc
sub
in
in
lock
cmc
cmp
ljmp
cmp
testl
hlt
out
rol
cmc
rcl
jmp
call
sti
inc
fsub
testb
mov
xor
rcl
hlt
out
hlt
neg
addl
mov
leave
jmp
test
sub
jmp
fistpll
cmp
cmp
aam
ds
aam
mov
fcoml
shll
test
aad
cmp
hlt
loope
jmp
sti
ljmp
mov
rcr
aam
shlb
shr
testl
mov
int3
aad
out
cli
lret
int
cmp
jmp
ret
xchg
ror
jecxz
hlt
test
out
int
fcmovne
into
stc
in
in
shl
loopne
in
enter
sti
mov
shl
ftst
in
cmc
cmp
cli
cmp
xchg
in
loop,pt
loope
xchg
fiadds
xlat
jmp
int
xor
sti
cmpb
push
in
ret
enter
xchg
mov
int
lret
cmp
mov
lock
add
test
xlat
xchg
int3
mov
in
out
aad
in
lret
aad
xlat
inc
fdiv
rol
leave
orl
dec
or
xor
mov
jmp
leave
mov
lret
mov
add
int3
fnstcw
jl
add
rol
mov
orb
clc
out
hlt
jmp
sti
out
loop
cmp
fsubrp
loope
fadd
jmp
bnd
xlat
rcl
aam
out
cmp
clc
and
fstp
jecxz
sub
in
loopne
mov
repnz
iret
in
xor
jmp
fcompp
jmp
cli
shl
aam
neg
sbb
push
out
aad
shll
xor
cmp
xlat
std
in
in
addb
shr
stc
ret
fucom
std
in
fsub
cli
shr
repz
ss
hlt
in
fcmovnbe
xor
xor
roll
addb
loopne
xor
sarb
repz
fcom
out
repz
neg
out
xchg
jecxz
stc
icebp
in
leave
out
xor
lret
div
xor
cmp
lret
sarb
aam
out
fildl
fcmovne
bnd
ret
cmp
repnz
repz
not
loope
aam
loop
in
mov
fldl
rcl
aaa
xor
xor
fcmovu
xor
xlat
ds
test
mov
cld
icebp
mov
out
lret
rcl
into
imul
ss
xlat
int
loop
sar
shr
mov
xchg
call
out
rcr
xor
cmp
lret
int
cmpb
fildl
int
fiaddl
out
rcl
enter
cld
xlat
fcmovu
sarb
loopne
loopne
std
shl
stc
in
shll
call
fdivr
test
stc
sti
cmp
leave
ljmp
ror
xchg
lret
cmp
lret
shl
loope
in
aam
enter
xchg
loopne
xchg
int3
icebp
into
not
cli
lret
fcos
dec
ret
in
mov
ljmp
ror
mov
add
ljmp
aam
divb
in
stc
rorb
iret
fimull
sub
xlat
aam
aaa
cmp
aad
shl
iret
repz
adc
call
lret
rcl
hlt
out
das
clc
loopne
iret
clc
ror
sarb
cmp
out
fildl
xlat
test
fmulp
in
xchg
mov
out
xorl
xlat
enter
shl
call
int3
in
out
shr
stc
test
fcmove
out
nop
shl
stc
enter
dec
xor
fcmovnb
out
fsub
out
testl
xchg
iret
lock
lret
aad
push
cmp
lret
ret
incl
icebp
loope
shl
loopne
lock
xor
jmp
and
aam
out
in
in
in
icebp
in
into
xchg
aam
les
call
in
rcr
in
test
aad
std
out
lock
xchg
lret
iret
jecxz
xor
repnz
adc
adc
call
mov
cmc
jmp
cs
repnz
sbb
fisttpl
fisttpll
out
out
int
fdivs
out
std
in
sti
fdivrs
cmc
rcl
rol
mov
xlat
loopne
out
stc
int
enter
call
in
cmp
enter
loopne
not
not
fcmovne
out
xchg
mov
rcl
call
fcmove
xor
ret
test
mul
out
orl
repnz
lret
rcl
iret
call
sar
repnz
jmp
lock
fld
lret
into
aaa
das
icebp
lret
lock
loopne
aad
loop
ror
out
lret
in
fldz
xor
out
ror
leave
aad
rol
ds
rorl
out
iret
fsubp
lret
xor
loope
cmp
jmp
cmp
lret
shl
in
repz
div
sbb
shr
xchg
fsubr
xor
clc
divl
enter
into
fistpll
std
fidivrl
repz
out
decb
mov
shl
shll
xor
in
fsubr
leave
loopne
inc
enter
fstp
test
addl
in
out
fmul
hlt
ss
aas
ret
shl
and
out
into
in
int
mov
aam
out
repnz
cld
div
iret
fnstenv
call
sti
xor
ret
ljmp
hlt
xor
cmp
lret
in
std
lock
adc
test
lret
mov
repz
jmp
aad
rcl
fst
leave
pop
push
ficompl
lcall
in
lock
xor
int
int3
ds
stc
cmp
test
fnclex
mov
fdivr
ror
out
cmc
icebp
cmp
out
out
xlat
sti
loopne
icebp
icebp
xlat
adc
or
in
out
jecxz
iret
call
int
jmp
cmp
test
test
hlt
ret
jecxz
std
jecxz
iret
fmulp
call
ljmp
cmpb
faddl
int
out
in
cs
aaa
rcl
rcl
jmp
rol
lock
int
test
faddl
dec
loop
int
in
ret
iret
lret
cmp
into
aas
jmp
sarb
fdiv
cmc
in
cli
mov
mov
int3
ljmp
cmp
fcmovnbe
not
int
stc
aad
mul
fdiv
idiv
icebp
into
lret
shl
in
xor
xor
repnz
cli
aad
ds
cmp
enter
loop
loopne
std
ljmp
icebp
neg
cli
call
test
cli
cli
std
sti
cmp
ret
clc
call
xlat
xor
lret
sti
shl
cli
cmp
rcl
loop,pt
xlat
filds
xchg
jmp
cmp
into
cmp
lret
in
ret
xchg
in
enter
int3
aad
into
lock
in
leave
xor
jmp
sbb
in
out
repz
clc
fucom
fadds
mov
out
leave
mov
jmp
int
int3
sar
stc
std
out
fucom
lret
lea
faddp
jmp
cs
clc
ror
sar
std
lock
xchg
clc
in
loop
lret
lea
loopne
xor
in
lock
cmp
in
aas
ds
cld
cmp
xlat
movl
jmp
in
rcr
into
clc
stc
in
cmc
aas
sti
out
fidivrl
aad
cmp
stc
sarb
ljmp
repnz
out
cmp
fcmovu
lock
sar
jecxz
rcr
lret
xlat
hlt
fucomp
and
cmc
shr
sub
lock
fidivrl
int3
idiv
aad
rol
faddp
jmp
lea
out
ror
int3
xor
sti
repz
out
int
aas
lret
cmp
in
in
call
std
cld
mov
aad
loope
out
in
jmp
loop
cmp
loop
shl
ror
loope
in
loop
cld
shl
in
aam
fld
in
jmp
sti
aam
and
xchg
xchg
xbegin
fcomip
loop
lock
int3
out
call
cmp
clc
jecxz
repnz
in
xlat
ds
addb
call
lds
loopne
int
out
fstp
xor
std
cli
out
aam
in
cli
fisttps
int3
hlt
enter
xor
not
loopne
in
in
hlt
cmp
loope
loop
std
stc
jmp
adcl
iret
iret
jmp
call
test
into
sbb
fadd
xor
test
lret
out
sti
out
aaa
sar
jmp
shl
std
repnz
in
jecxz
cmp
aad
fldlg2
aad
hlt
lock
sarb
shr
loope
cmp
sar
int
enter
jmp
fidivs
vpmulhuw
sar
out
aas
xor
loopne
mov
fiaddl
orb
xor
fcomi
fmulp
or
rcr
ds
enter
jmp
in
nop
mov
lock
repnz
lock
iret
in
vpminub
fdivrp
aad
push
testl
cmc
sub
cli
lret
fndisi(8087
repz
fcmovnbe
xchg
jecxz
sar
ret
std
loop
in
lret
mov
aad
repnz
fmulp
fdivrp
sti
stc
xchg
enter
stc
shl
lret
lret
mov
out
shl
rcl
fst
neg
cmp
xor
cli
adc
loopne
in
xchg
hlt
xor
fdivs
cmp
stc
cmc
leave
aad
repz
cmc
icebp
in
aad
aad
lret
jecxz
loope
cld
rcl
shlb
enter
jmp
aas
cmp
fstpt
shr
idiv
fmul
out
fcmovu
shr
shl
xlat
ss
hlt
cmp
shr
ror
idivl
test
clc
in
mov
lret
jmp
repnz
icebp
repnz
sar
rcr
aas
in
mov
mov
out
lret
fldl
clc
shr
fdivr
xor
add
add
jmp
leave
sarl
rcl
int
mov
stos
ljmp
add
out
jmp
fdiv
fiadds
sti
ljmp
loopne
aam
in
jmp
aaa
cmp
fst
cmp
jecxz
jmp
int3
fsubrp
repz
xchg
in
rcr
cmp
out
ss
addb
int
xchg
out
lock
xlat
xor
lret
iret
clc
int3
cmpl
filds
mov
fdivr
xchg
xchg
xchg
sub
shl
out
fdivr
lret
jmp
call
in
imul
clc
stc
stc
add
fsubr
cli
icebp
stc
mov
out
in
test
in
aam
rcr
fistpll
fidivrl
fscale
add
test
test
sti
mov
cmc
ret
xor
out
hlt
shl
cmc
out
jecxz
xlat
loope
std
fcmovnb
fdivr
jmp
aad
jmp
xor
fsub
cmc
mul
out
icebp
ffreep
in
mov
enter
enter
out
stc
test
loope
faddp
into
loopne
addl
shr
iret
jmp
cld
in
iret
cmp
div
ret
cmp
fadd
mov
fmulp
loope
lock
mov
lret
ror
in
stc
out
aas
iret
sarl
mov
fcmovnbe
lret
xor
aad
hlt
ljmp
lret
stc
into
std
hlt
shl
lock
lret
clc
fucomip
fstl
loop
xor
xlat
shl
repz
fstp
rcl
stc
fcom
ret
addl
repz
div
repnz
fcomp
cmp
sti
rcl
loop
shl
loopne
std
test
jmp
cmc
lock
aad
out
sar
xor
cli
icebp
test
icebp
loopne
mov
xchg
out
lock
out
fchs
fldz
std
fxch
enter
jmp
cmp
aam
xor
lret
shr
enter
icebp
cmp
loopne
rolb
call
fisttps
int
xor
iret
repz
enter
add
repz
test
in
jecxz
loope
into
call
jecxz
xor
xor
cmp
testb
lret
in
shl
idiv
cmp
into
cmp
cmp
ret
cld
cli
and
loope
call
shll
xlat
cmc
call
cmc
fcmovnu
aas
push
mov
out
leave
lret
lret
lret
mov
icebp
imul
in
std
out
in
cmp
jmp
aad
sar
out
in
lock
shr
test
lret
out
enter
sar
idiv
cmp
stc
out
aam
fadds
test
xchg
xor
icebp
xor
aas
lock
xlat
int3
loope
fisttps
neg
fisttpll
loope
das
into
xor
shl
cmp
repz
cmp
fbstp
fld
ds
stc
xlat
jecxz
int3
faddl
lock
ss
stc
out
rcl
ror
shl
shl
fsubr
test
jmp
ror
xlat
rcl
into
idiv
in
call
sar
fprem
rorl
fsub
mov
ljmp
cmp
int
aaa
cmp
in
cli
sti
sti
cli
in
std
in
shl
cld
xor
out
aaa
aad
into
repz
inc
cmc
test
shr
jecxz
call
out
xlat
cmp
icebp
lock
inc
loop
fisttpl
mov
mov
shr
enter
fcmovne
int3
testl
fadd
cld
loope
jmp
out
xchg
stc
aad
fucomip
out
cmpl
std
rolb
in
xchg
rorb
clc
clc
cmp
lret
ljmp
fdivp
ds
jmp
les
fmul
sarl
iret
cmp
in
out
fdivrp
in
aad
xchg
mov
and
mov
leave
test
cmp
xlat
fcomp
testl
xchg
loop
icebp
mov
xor
repz
cmc
repz
xchg
mov
shl
enter
aad
jmp
aad
shll
ret
call
enter
xchg
cld
xor
aad
shl
fdiv
sar
cld
out
xchg
div
mov
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
ds
fucomi
std
mov
rcl
lock
int
lret
jecxz
in
into
mov
fcomi
call
decl
lret
cmp
out
cli
std
aad
cmp
in
hlt
in
fdivp
call
in
cli
loop
shll
imulb
lret
int3
rcl
fsub
std
stc
repz
fdivr
fsubrp
out
mov
hlt
xlat
aad
call
not
xor
fst
fld
repz
stc
testl
hlt
stc
fdiv
out
fcomp
cmc
lret
faddp
repz
aad
int
xlat
loopne
call
ror
out
out
cmp
rcl
sti
cmp
rolb
clc
loop
test
mov
xor
sub
loop
xlat
lret
iret
cmp
cmp
les
fxch
stc
orb
shr
aam
ss
lock
xlat
aam
jecxz
sar
fcmovnbe
aam
or
jmp
in
rol
cmp
enter
cmp
out
ret
clc
std
leave
repz
xchg
fsub
mov
stc
icebp
loopne
iret
lret
sti
lock
shl
stc
std
fdivr
aad
ljmp
addl
ljmp
cmp
aam
test
aas
leave
in
and
into
fdiv
loope
int3
leave
lret
aam
lock
sbb
aam
xlat
aad
test
sti
std
mov
out
cmp
in
push
clc
repnz
call
loope
in
popl
into
ljmp
cld
aam
shl
testl
addb
leave
ret
jmp
lret
cmp
ds
adc
loopne
sub
int3
out
in
repnz
jmp
cmp
loope
iret
int3
ds
aad
in
int3
jmp
orb
clc
lret
frndint
loopne
cmp
not
xlat
decl
cld
loopne
shr
fucomip
lret
fstp
cs
cmp
fdivrs
fpatan
iret
loopne
rcr
adc
fcmovnb
mov
out
ret
xor
into
idivb
loop
sar
out
addb
out
xchg
xchg
into
shrb
out
out
fidivs
cmp
sarl
sti
fimuls
mov
lea
sar
fidivl
aad
std
aad
addb
jecxz
aam
fsubp
out
icebp
xchg
in
xor
aad
divl
test
ret
cld
ffree
jmp
into
mov
cmc
in
test
lock
jmp
aam
xor
out
std
mov
ret
std
in
hlt
int3
loopne
divl
cmp
adc
clc
repnz
fisttpll
std
icebp
mov
jmp
aad
cmc
xor
lret
test
cmp
push
fsub
loope
mov
loope
mov
aaa
xlat
shll
cld
out
aaa
repnz
fdivrp
rol
sbb
shr
test
into
xchg
ficoml
lret
out
xor
cmc
rcl
enter
std
int
xlat
ret
shr
and
jecxz
iret
out
in
sub
xor
xor
call
cld
loop
cld
aas
shl
fdiv
cli
mov
lock
aaa
lock
aam
int
cmp
or
aad
jmp
stc
jmp
into
xchg
xchg
out
xor
enter
cmp
in
cmp
xchg
leave
leave
fisttpl
jmp
in
imul
xor
ljmp
xlat
int3
cmc
sti
clc
cld
test
imul
fsubr
fdivrp
loop
addb
xor
out
ljmp
test
ret
jmp
ret
loopne
shl
xchg
out
ds
shr
das
fcmovne
leave
in
loopne
ret
fsubrp
sbb
fdivp
in
in
out
test
in
call
lret
fcmovbe
lret
out
clc
icebp
loope
in
fsincos
enter
loop
cli
xchg
jmp
int
in
ret
cmp
aad
roll
xlat
jecxz
mov
xchg
xor
repz
mul
out
dec
int3
addl
hlt
lret
xchg
fiaddl
fxch
fdivs
hlt
int
int
fucom
iret
std
lock
cli
out
std
enter
int3
je
movl
jmp
sarl
rcl
rcl
rol
ret
clc
dec
subb
jg
cmpsb
add
aad
out
sti
lret
aaa
icebp
cld
in
jecxz
loope
test
loope
rolb
in
lret
out
into
xlat
out
lock
cmp
sti
int
loop
test
clc
hlt
movl
fdivp
hlt
ljmp
clc
sar
mov
xchg
out
out
in
xor
xor
enter
out
lret
sub
loop
test
sti
test
lret
std
std
xorb
enter
std
repz
fcmovnu
cmp
jmp
fimull
fimuls
xor
clc
xor
enter
repnz
ret
test
test
in
dec
enter
in
cld
imul
xor
loop
xor
jmp
shl
hlt
xchg
out
icebp
mov
lock
leave
jmp
sarl
lret
xchg
adc
mov
in
loop
lret
mov
not
aam
repz
neg
cld
repnz
add
cmp
std
rcl
out
ret
mov
out
lret
in
int
cmp
aas
cmp
out
idivl
fcmovnu
jmp
in
enter
stc
test
std
int
out
sar
sti
out
iret
xlat
std
enter
out
sar
add
ffree
sti
out
out
out
icebp
not
shr
jmp
sarl
rolb
in
hlt
xlat
enter
leave
icebp
jmp
sub
jmp
cmc
cmc
repnz
std
sar
out
ret
jecxz
repz
aaa
sarl
in
out
cli
xlat
cmc
neg
test
cli
rcr
in
mov
mov
rcr
out
fdiv
iret
aaa
out
aad
stc
incb
loope
ljmp
in
cmc
xorl
xor
ret
incb
aas
aad
rcr
in
cli
xchg
fildl
shll
xor
out
in
lock
ljmp
les
lret
int
xchg
ficoms
sti
xor
out
jmp
shl
test
hlt
idiv
ljmp
hlt
das
lret
out
xor
cmc
int3
call
fcmovu
sarb
test
fdivr
cld
in
movl
fcom
xlat
leave
rcr
loopne
shl
cmp
jecxz
rol
fucomp
lret
into
loop
xchg
in
jmp
jmp
cmp
cmc
in
shl
shl
sarb
rorl
xchg
repz
aaa
enter
repz
in
adc
aam
fsubr
jmp
loope
or
out
out
in
icebp
loopne
jmp
repnz
jmp
call
fadd
add
leave
test
mov
imul
jmp
sti
ljmp
push
test
fdivr
std
sub
jmp
icebp
in
rol
xor
iret
cmp
shlb
vpsllq
adc
jecxz
addb
subl
fxch
cmc
clc
repnz
loop
div
aad
loop
fsubr
jmp
xchg
int3
cmc
mov
stc
xor
repz
shl
cmp
cmp
in
in
cmp
aam
rcr
in
jmp
adcl
aad
aaa
cld
shr
jmp
cmp
out
ret
enter
in
mov
in
fbstp
lock
out
repz
test
roll
sti
in
push
mov
leave
iret
and
xor
hlt
in
int3
cld
cmp
stc
xlat
lock
stc
add
clc
ds
xor
jecxz
lock
fcmovnbe
in
fbstp
iret
cmp
ffree
fdiv
cli
ficoms
repz
out
xor
lret
cmp
fdivr
out
out
fcom
cli
out
cmc
cli
out
mov
addb
repz
shr
out
cmp
cmp
stc
hlt
fst
jmp
faddp
in
rcll
cld
cld
aas
fucom
cmc
out
idiv
lock
xchg
fcmovnb
in
icebp
cld
std
jmp
cs
out
jmp
sar
neg
test
mov
out
lret
fucomip
in
iret
out
cmp
jmp
cld
cmp
out
in
hlt
fldl
loopne
xlat
stc
jmp
dec
cmp
out
test
fisttpll
out
aad
hlt
leave
lea
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
das
fistl
inc
add
jl
int3
cmp
cld
icebp
int3
ret
aas
aad
flds
ret
add
cmc
shr
in
out
repnz
in
fucomp
int
lret
lret
sbb
cmp
testb
push
xchg
fnstsw
lret
fcmovne
ftst
repz
cmp
rol
xchg
stc
in
aam
fldl
mov
in
xlat
ret
xor
std
std
divl
icebp
leave
fucomi
jmp
loope
xor
iret
enter
lock
fadds
sti
out
jecxz
addb
in
shl
shl
in
les
cmc
ss
cmp
aaa
fmul
loope
cmc
clc
fnop
jecxz
cld
stc
lret
xchg
cli
std
jecxz
xor
loopne
cmp
divl
cmp
fdivrs
aam
in
mul
enter
fdivrp
nop
mov
lret
enter
shr
loopne
int3
in
fnstsw
lret
jmp
out
fstp
sti
loop
aad
rol
out
lock
rcr
cmp
fucomp
fcmovnu
test
jmp
ljmp
mov
leave
ret
ret
sti
clc
fsubr
loop
loopne
movb
sbb
clc
xchg
test
xor
das
ljmp
std
clc
out
aam
add
ds
and
std
aam
out
shr
out
leave
enter
out
shr
sti
incb
jmp
call
rcr
in
ljmp
idiv
clc
in
rol
stc
std
repnz
lret
xchg
enter
int
xor
out
jecxz
out
cmp
cld
cld
repnz
xor
in
std
fcmovb
fcmovu
fcmovne
leave
cmc
out
repz
fadd
ljmp
ljmp
shl
cmc
cli
faddl
and
loop
jecxz
ljmp
out
ret
loop
out
xlat
in
jmp
ljmp
aaa
ljmp
out
aas
int
ljmp
adc
fprem
lret
fdiv
shr
test
sub
fxch
lock
iret
lock
cmp
jecxz
in
hlt
cmp
ljmp
xchg
xlat
xlat
xor
aaa
out
repz
xor
aam
cli
out
xor
xor
sti
mov
icebp
loop
fdivp
xor
enter
repnz
aas
sbb
jmp
mov
xchg
rolb
repnz
xlat
or
mul
xlat
leave
jmp
mov
jmp
loop
out
fsubr
call
cli
aad
cmp
cmp
fnop
fmul
push
sti
ret
clc
lea
cmc
test
cmp
fbstp
in
jmp
fcmovb
adc
hlt
enter
loop
cld
in
std
fdivp
in
into
xor
fcomp
neg
shl
hlt
lret
loope
add
inc
repnz
cld
in
mov
std
out
iret
xor
xor
int
cmp
out
cmp
mov
hlt
mov
incb
iret
lret
sar
in
out
int3
lock
and
cli
out
sarl
cld
adc
call
out
xor
cmp
cmp
fadd
sti
sti
loope
fcmovb
in
mov
in
ljmp
into
stc
ss
fnstsw
test
cmp
call
loop
iret
out
out
orl
std
ljmp
out
aam
hlt
neg
mov
mov
shll
hlt
idiv
out
cli
icebp
in
cmp
cmp
fsubp
stc
std
cli
fimuls
adcl
loop
aad
enter
addb
lock
in
jmp
loop
xor
fcomi
xor
ljmp
sarl
xchg
test
test
mov
rol
enter
jmp
repz
ljmp
xchg
bnd
std
rclb
iret
repnz
iret
ljmp
rcr
leave
test
loope
mov
in
loop
into
iret
lret
fstpt
cmp
loopne
rcr
enter
mov
icebp
iret
fsincos
hlt
in
iret
cmc
xor
rcl
test
add
add
cli
in
popl
loop
in
ror
shr
lret
in
cmp
ret
test
test
xchg
int
cld
fmulp
mov
rorb
leave
fdivl
loop
dec
mov
imul
jmp
ret
fcmovnu
aad
inc
pop
inc
pop
cmp
in
lods
mov
jl
add
sar
repz
lret
mov
jecxz
aam
ror
add
fst
jmp
loopne
xchg
into
loop
in
test
cmp
cmp
leave
fdiv
idiv
cmp
cli
in
sub
out
test
mov
rorb
in
divl
in
shl
fildl
out
in
addb
das
out
fsubr
xor
cmp
lret
push
xchg
call
fsub
mov
aam
xor
cmp
xor
int
rol
fucom
cmc
mov
push
ljmp
int
xor
mov
idiv
cmp
std
stc
repz
rolb
jmp
repnz
int3
mov
sti
int3
int3
out
sti
repnz
loope
mov
loope
cmp
cld
lret
int3
enter
ret
fsubr
cli
div
cmp
hlt
xlat
fucomip
out
lret
and
out
loop
ljmp
in
icebp
fmulp
cmp
ffreep
out
out
faddl
call
shll
cmp
div
fcomip
ror
rcr
loopne
cmp
mov
xchg
xor
in
fcmovbe
aaa
fcomp
loopne
cmp
cmc
cmp
cmp
stc
cli
jmp
mov
mov
rcl
xor
fadd
repz
fstp
in
test
addl
ret
sbb
jmp
lret
in
xor
stc
into
cmp
cmp
aam
loopne
loope
ds
jmp
lea
jmp
fcmovne
repnz
lock
ljmp
fcmovbe
out
aas
cld
fsubp
fsubr
out
test
lret
xor
iret
hlt
cmc
cmc
xlat
aas
sar
cmc
in
fadds
aas
out
out
std
test
loop
test
ss
leave
aad
cmc
aam
fdivr
cmpl
aad
loop
out
in
into
in
in
ljmp
aam
cmp
aad
sti
out
xchg
testl
out
iret
out
xor
in
stc
cld
fdivr
cmp
aas
rcl
cmp
in
call
xchg
jmp
xor
xlat
into
cmp
aam
out
cli
cli
cmp
loopne
lret
mov
iret
aad
jmp
iret
aaa
xor
aad
in
cmp
xchg
out
mov
xlat
out
jmp
call
clc
ljmp
repnz
out
repnz
cmpl
jecxz
mov
mov
jmp
loope
repz
cmp
repz
fmul
rcr
dec
fimuls
vpsrad
cmp
ljmp
int3
out
rcr
in
xlat
loopne
neg
test
shl
cmc
loopne
in
shlb
in
aam
enter
aas
sbb
xchg
repz
ljmp
xor
call
iret
cmp
fcmovu
aam
aaa
rcr
repz
testb
fiadds
hlt
lret
ss
aam
cmc
out
stc
div
iret
ret
shl
leave
sti
in
xchg
lds
fdivs
xor
shr
cmp
cmp
jmp
idivb
repnz
cld
jecxz
xlat
out
cmp
xor
in
rcr
cli
cld
test
xchg
in
mov
int3
fdivrl
int3
mulx
aad
loope
in
aaa
lock
cmc
sub
call
mov
stc
jmp
out
icebp
shr
xor
repnz
sar
fdivr
addb
test
jmp
xchg
ror
ror
sub
aad
out
cld
cmp
stc
xlat
clc
ds
push
ret
loope
test
mov
iret
shr
cli
aaa
leave
rcr
shl
out
sar
aad
fadd
jmp
enter
shlb
out
lret
out
aam
sti
stc
jmp
sarl
loopne
rorl
in
cli
test
out
shll
in
aad
clc
jmp
aam
rcl
in
xchg
and
ret
ljmp
aad
enter
stc
cmp
roll
fcmovne
sbb
icebp
test
out
ds
out
int3
clc
in
clc
xor
shr
loop
fdiv
cmc
cli
faddl
out
loopne
out
int
cmp
fcmovne
call
int3
lock
fst
loop
cmc
call
cld
mov
mov
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
mov
loopne
in
cmp
in
jmp
fcmovu
ds
aas
out
out
loope
filds
iret
ret
xor
aaa
ret
xor
in
fstp
shl
out
cmp
and
in
test
mov
clc
in
inc
test
sub
int
leave
rcr
int3
aad
cmp
loop
mov
loope
jmp
mov
fdiv
adc
aam
fucompp
out
jmp
out
icebp
out
fneni(8087
xchg
lret
std
cld
test
lret
les
xor
call
sar
cmp
out
out
cmp
out
mov
mov
int3
cld
clc
icebp
mov
enter
xlat
rol
cmp
int
xchg
loop
fisttps
mov
aas
ds
bnd
add
out
ret
repz
cmp
in
int3
loope
in
rol
shl
ss
int3
neg
out
out
hlt
in
sti
aad
in
xchg
fsub
loop
jmp
hlt
jmp
in
out
fstpt
repz
in
mov
loope
mov
cmc
leave
jecxz
clc
xor
das
xor
shl
aam
lret
in
ds
enter
mov
in
out
rcl
hlt
aaa
shr
hlt
aad
clc
xor
xor
cmc
rcr
fiadds
in
out
decb
icebp
xchg
ret
shl
lret
aaa
std
into
shl
aad
out
sti
shl
addl
int3
repz
int3
shlb
cs
rcr
std
enter
fdivr
rol
ljmp
xchg
out
cmc
leave
out
cmp
shr
lret
ds
stc
int
stc
testl
mov
out
not
repnz
lret
out
stc
cmp
call
xchg
faddp
or
test
mov
in
mov
aad
sti
repz
jmp
in
aas
jecxz
in
iret
hlt
out
mov
leave
loop
lret
sbb
fisttps
fsubp
xor
repz
fdivr
int3
call
int3
cmp
fbstp
lock
mov
int3
leave
xchg
aam
ss
mov
cmp
fcmovbe
jmp
in
repnz
icebp
loope
jecxz
flds
jmp
sarb
fcmovne
vcvtpd2dq
ljmp
clc
xlat
testl
fsub
in
in
out
fcmovne
jmp
lret
cmp
call
out
repz
fstp
xchg
repnz
xchg
lret
loopne
das
cmp
clc
in
cli
clc
out
jmp
out
call
xlat
in
in
int
enter
xchg
stc
cli
stc
cld
jecxz
in
iret
mov
mov
std
aad
in
xor
stc
loopne
cmp
faddp
ds
cli
stc
in
enter
into
out
jmp
ret
cmp
clc
fcmovne
cmp
fadds
mov
cmp
mov
out
lock
into
rolb
loop
clc
stc
cld
add
in
enter
aam
aad
out
cmp
ror
enter
int
xchg
shl
enter
lret
rorb
shl
lret
iret
shl
out
fsubp
ds
cmc
cli
out
cmc
out
in
clc
enter
out
ljmp
rcr
lock
ljmp
ret
popl
out
call
jmp
jmp
jmp
cmp
frstpm(287
vpsraw
cmc
ret
enter
fucomi
ljmp
icebp
aam
mul
int
std
lret
fstp
test
incb
call
ljmp
xor
loopne
in
int
shr
enter
sar
testl
call
xor
idiv
iret
leave
icebp
ror
in
jmp
repnz
sbb
jmp
lret
xchg
leave
xchg
icebp
call
call
hlt
cmp
cmp
aas
cmp
call
adcl
aam
das
leave
icebp
repnz
call
cmpl
sarb
out
rcl
test
xchg
cli
xchg
faddp
int3
lds
cmp
out
jmp
clc
aam
clc
cmc
incl
hlt
out
fcmovnu
ljmp
mul
call
call
add
in
stc
sti
aad
enter
fadds
out
divb
in
fmul
cli
filds
in
aad
cmp
sub
out
out
test
ret
add
int
fst
fcmovne
xor
or
mov
jl
stc
out
lret
into
enter
cmp
call
xchg
fmul
lret
loopne
loop
enter
out
iret
das
rcr
in
std
ljmp
in
hlt
enter
leave
fcoml
rcl
sar
in
aaa
enter
out
test
repnz
repnz
stc
out
and
int
lock
int3
lret
in
imul
xor
lock
push
iret
iret
loope
adc
ret
sbb
out
out
fsub
hlt
sub
loop
icebp
into
in
aad
jmp
neg
ret
decl
mov
mov
icebp
sti
xchg
out
xor
hlt
cmp
sti
lret
repz
hlt
hlt
addl
mov
xchg
aad
ljmp
out
cmp
sarb
xlat
cmp
out
test
std
iret
call
in
int
cmp
in
aas
cmp
ret
sti
out
mov
fimuls
int3
xchg
xor
cs
iret
loop
repnz
fnstsw
repz
std
in
xchg
and
lret
xchg
call
cmp
repz
cmc
int3
out
in
cmp
cmc
aas
testl
fists
leave
ret
stc
xlat
xor
cld
cmp
shl
int
not
orl
out
jecxz
rolb
aad
jecxz
fnop
xor
sti
std
hlt
hlt
fnsetpm(287
aad
shl
cli
test
add
cmp
clc
aaa
aam
ljmp
cli
enter
add
orb
stc
sti
iret
xor
fcmovne
enter
repnz
ds
xchg
cli
fldl
lock
cs
cli
call
iret
out
aad
in
loope
test
enter
xchg
sub
fdivr
xor
std
out
repz
rcl
loope
out
fildl
in
out
xlat
jecxz
jmp
into
xor
cld
aam
fidivrl
sti
cld
in
jmp
jmp
cs
fdivs
aam
shl
ljmp
repnz
out
repnz
jmp
aaa
sti
fnstsw
ljmp
xlat
repnz
in
in
into
test
sub
std
hlt
in
into
aad
rcl
and
cld
fsubp
jmp
sti
jmp
fiaddl
ret
divl
imul
ljmp
stc
clc
rol
int3
loope
cs
loope
ret
cli
cli
repz
cli
xchg
cmc
xchg
aad
in
clc
mov
jmp
into
aad
clc
shl
out
enter
xlat
and
ret
aas
cmc
fld
in
fmulp
sti
icebp
cmp
out
cmp
cli
cmp
jmp
iret
out
jmp
aam
sti
fdiv
sar
sti
aad
int3
int
xchg
out
out
shr
clc
int3
iret
cld
xorb
dec
ret
cmp
fdiv
fsub
jmp
mov
cmp
int3
xor
not
cld
xlat
call
jecxz
cmc
cmc
and
fdiv
fsubp
and
mov
fdivp
cmc
lock
into
xor
aam
cmp
out
shl
sti
aas
ds
clc
cli
mov
rcll
lock
cmc
enter
ret
mov
loopne
aam
jecxz
xchg
in
xchg
xchg
jecxz
repz
xor
xor
int3
repz
icebp
loopne
and
testl
in
dec
out
jmp
cli
int
shl
lock
clc
ret
icebp
shl
ret
jmp
leave
jmp
out
mov
shr
lock
xor
cmp
cli
std
cmp
fdiv
mov
mov
jmp
xor
aad
aad
repnz
ds
loopne
into
loop
fcmovnu
stc
call
leave
loop
out
aaa
jmp
xor
in
cmp
fildl
mov
cld
orb
xchg
in
ljmp
sar
ljmp
ret
xchg
int3
in
or
hlt
jecxz
aam
in
hlt
fcom
sti
aas
loopne
xchg
loope
ljmp
loop
xchg
xor
into
lret
std
lret
cmp
std
jecxz
ds
in
ljmp
std
mov
mul
xlat
aaa
fld
enter
enter
rol
frstpm(287
ds
xlat
fcmovnb
mov
out
addl
icebp
fcmove
fucomp
leave
call
ret
add
lret
ret
fstpl
fidivrl
pop
cmovb
add
rcr
rcr
xchg
clc
fucomip
jmp
mov
ror
sub
fcmovu
clc
int3
std
push
out
fdiv
stc
jmp
out
rolb
rol
cs
clc
std
cld
fidivrs
ret
sar
test
cli
in
iret
int
in
leave
mov
in
cli
fnstsw
out
hlt
in
add
test
cld
jecxz
in
test
aaa
ljmp
loopne
and
stc
sar
fmul
aad
stc
cmp
ror
fxch
loop
cmc
aad
leave
out
cld
out
aam
loopne
cli
stc
fisttps
cld
rcl
out
repnz
test
std
sti
cli
xlat
xchg
loopne
enter
mov
sub
cmp
and
cmpb
clc
dec
in
rcl
mov
cs
sti
in
in
cli
cmc
repnz
icebp
out
loopne
into
sarb
std
repnz
mov
dec
int3
mov
in
sub
jmp
cli
jmp
lock
in
xchg
rolb
xchg
orb
xor
sti
out
fsub
xor
repnz
into
lds
fstl
ljmp
test
lret
rol
cmp
fcmovbe
enter
loopne
in
addb
cmp
sti
jmp
enter
ds
fdivr
jmp
sub
test
rorb
shr
cli
xor
fdiv
in
out
xor
fsub
fsubr
call
int
test
cmp
xor
loopne
ds
aas
loope
repz
loope
mov
mov
incb
cs
aam
in
sar
ds
aas
call
test
xlat
loopne
loope
jecxz
mov
fndisi(8087
out
xchg
call
rcl
fdivrs
cld
aaa
loopne
cmp
sti
imul
enter
int3
xchg
cs
iret
icebp
fdivr
into
aas
lock
aad
icebp
hlt
hlt
fdivr
stc
in
jecxz
jmp
rolb
xor
xlat
iret
enter
hlt
int3
repnz
sti
out
shr
lret
int
xchg
loope
lock
iret
out
enter
fdiv
cmc
cmc
out
in
xchg
loopne
xchg
hlt
int
lret
in
in
lret
repnz
xor
aaa
xor
repnz
xlat
stc
cmp
loope
sti
fadd
out
jmp
hlt
ljmp
not
cld
cld
div
cli
stc
test
xlat
testb
ror
aam
sarl
sarl
fcmovne
cmp
dec
aam
cmp
enter
mov
cmp
leave
ret
cmc
jecxz
lret
xor
cli
aas
shl
lock
loope
fadds
mov
out
lret
jmp
lret
jecxz
fcomip
cmp
lret
aad
test
lock
nop
mov
xor
bnd
fsqrt
repnz
sti
std
sti
ret
mov
leave
ljmp
leave
xor
cmp
in
ror
int3
icebp
cli
in
loope
jmp
jecxz
cld
call
call
icebp
jecxz
out
pushl
iret
fdivrp
fdivrl
jecxz
rol
push
stc
ljmp
xchg
cmc
leave
aaa
jmp
out
xor
enter
aad
faddp
ret
xchg
jecxz
cmp
xor
repnz
fadd
cmc
int
aam
xlat
std
iret
sti
out
shl
in
in
mov
lret
xchg
int
leave
iret
fidivl
fmul
fnop
out
rcl
ror
fdivr
mov
xchg
out
shl
lock
out
aad
lret
iret
cld
int
loopne
addb
fcmovnb
nop
rolb
xor
int3
jmp
xor
cmc
rcl
std
mov
lds
sti
ljmp
cmp
xor
cmc
adc
hlt
cmp
out
fdivr
xlat
int3
fucomi
addl
jmp
enter
lret
aam
int3
jecxz
roll
hlt
ret
loop
mov
in
divb
cmc
xor
jmp
fcomi
cmp
jecxz
aam
xlat
clc
fmul
out
xchg
fdivr
jmp
xchg
and
sarb
hlt
cmp
iret
xor
jecxz
or
aas
lock
loop
in
sti
addl
stc
fnstenv
aad
ss
icebp
rcl
xlat
in
cmp
pop
leave
ret
mov
jmp
aam
fcmovnu
mulb
xchg
aam
jg
cmpsb
add
mov
mov
sub
shll
aam
lock
stc
int
cld
repnz
leave
xlat
ret
clc
enter
fcmove
dec
divb
xlat
xor
cmpb
fiaddl
ljmp
fnstsw
ljmp
stc
aad
out
xor
rcl
clc
lds
lret
fninit
icebp
fdivp
cmc
in
test
out
ror
icebp
rcr
into
in
test
test
call
orb
out
ret
cs
aas
fcomp
int3
rcr
aas
hlt
rcl
xchg
mov
jecxz
jmp
int
sub
hlt
ss
ljmp
ret
lock
sbb
loop
loop
loop
jecxz
xor
lret
cmp
fdiv
cmp
xor
loope
mov
jmp
out
enter
test
in
loope
sub
lret
fstp
jecxz
aas
jmp
xlat
sti
testb
mov
out
adc
ljmp
fld1
ljmp
aad
adc
testl
cmp
cmp
leave
in
repz
xor
aas
xlat
stc
stc
in
lock
mov
icebp
jecxz
xor
out
std
iret
cmc
aaa
jmp
out
int
loope
into
addb
cld
addb
lock
hlt
sti
aad
aaa
ds
std
ljmp
test
mov
lret
mov
in
iret
jmp
rcr
rcr
xor
xor
lret
fdivrl
in
fmul
cmc
enter
sti
mov
lock
repz
ret
aad
in
cld
cmp
cld
fsubrp
cmpb
mov
mov
aad
enter
sarl
fdivp
aad
div
lock
ret
lret
mov
lret
lock
jmp
aaa
out
icebp
jecxz
xor
rol
hlt
out
call
test
rcr
out
mov
into
into
hlt
jecxz
xor
fnstcw
shl
cmp
std
sti
cmp
addl
loop
ljmp
fnstenv
loope
out
in
hlt
ds
add
clc
jmp
iret
xchg
repz
xor
out
out
hlt
int3
repz
hlt
in
test
ljmp
out
int3
xchg
enter
out
sar
aas
repnz
shr
in
out
cld
mov
cld
in
jmp
sub
ds
filds
cld
shl
out
out
or
xchg
sbb
icebp
xor
aaa
iret
jmp
sti
fistpll
in
std
idiv
mov
lret
fucomp
into
loopne
loopne
loop
jecxz
std
idiv
clc
cmp
sar
loopne
out
cmp
stc
stc
lds
fstp
int
sub
repz
ret
fsubrp
lret
jecxz
push
shl
mov
rolb
iret
out
mov
shl
lret
jmp
cmp
repnz
in
idiv
jmp
out
in
jecxz
rcl
xor
lret
shl
ljmp
aad
ret
cli
fadds
aam
xor
out
repnz
fcmovu
adc
repz
fadds
out
leave
clc
out
in
mov
repz
icebp
loopne
leave
shl
xor
std
aad
lock
loope
repz
movb
idiv
repz
ljmp
repz
xlat
cmp
ds
fprem1
loop
loop
sti
mov
xchg
repz
in
xor
lret
aaa
rcl
aas
faddl
ljmp
in
xchg
xchg
not
loopne
shr
ror
int3
ljmp
movb
cld
int3
lock
xor
rcl
lret
int3
xor
int
enter
jecxz
fucomip
sti
jecxz
adc
in
loope
and
icebp
cs
cmp
fdivr
jecxz
std
out
test
call
lock
into
enter
int
repnz
divl
fcmovu
aad
sar
xabort
stc
mov
hlt
in
not
jmp
xor
enter
repz
cmc
in
leave
sti
fcmovne
inc
int
test
jmp
dec
out
icebp
cmp
loopne
cmp
incb
fprem
leave
into
cld
cli
xchg
int
jmp
rcr
leave
sar
into
ds
aas
fadd
mov
in
mov
in
xorl
cmp
je
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
popf
pushf
sarl
jg
cmpsb
add
in
in
shr
fdivrl
cmp
loopne
rol
mov
xlat
leave
xchg
cld
test
fsubr
sub
sar
repnz
fcmovne
cmp
cmp
fcmovnbe
stc
add
loop
imul
fimuls
xor
xor
ror
xor
into
aam
clc
sti
cld
jmp
call
lock
loope
xor
iret
sar
repnz
int
adc
cmp
hlt
fld
out
sub
test
ljmp
aas
cmc
aas
ljmp
cmp
fucomi
cmp
int3
cmc
sarl
repnz
lock
not
ss
rcl
ret
loopne
out
xchg
stc
fcmovb
idiv
icebp
in
test
cmc
fcmovbe
out
int3
sti
cli
cmp
cli
jecxz
dec
push
fdivp
xchg
rol
loop,pn
fidivrl
aam
loopne
aam
sar
cmc
in
neg
int3
out
loopne
int
loope
lret
iret
hlt
aad
int
cli
cmp
test
mov
and
enter
in
bnd
repnz
not
in
adc
loope
test
sub
cli
jmp
ljmp
in
ss
cmp
sar
call
test
fcoms
lret
fstpt
cmp
int
sti
ljmp
hlt
hlt
clc
out
fdivr
rorl
in
aam
aam
fcmovnu
cmp
loop
sar
out
xchg
out
sti
icebp
lock
aam
cs
cmp
fsubr
in
jmp
xlat
std
rcl
xchg
rolb
fmulp
xchg
call
xor
int
icebp
aad
stc
into
cmc
cmp
mov
lret
std
jecxz
cli
mov
in
std
std
xor
lret
or
ret
stc
mov
sub
aad
jecxz
out
shl
clc
cmp
fistpll
loope
aas
sub
ds
filds
xchg
mov
xchg
sub
rol
cmp
idiv
std
sti
aam
cmp
jecxz
cmp
loop
in
sti
lock
lret
test
sarb
cmp
cld
repnz
enter
xchg
fsub
mov
lea
xor
stc
lret
cmp
in
in
loop
into
loop
mov
imul
lret
ret
out
fcomp
fld
ljmp
leave
ret
jmp
into
aad
hlt
rcr
jmp
call
hlt
rcr
rcl
out
fst
cmc
in
repz
in
enter
xor
cmp
fcmove
rcl
shl
testb
xchg
int
xor
out
aaa
in
aam
adc
ds
mov
int3
iret
std
int
sub
ret
fcmovnu
xor
lret
cmc
aad
test
repnz
lret
jmp
sti
fsubr
jecxz
rcl
repnz
clc
ljmp
cli
test
hlt
roll
in
xchg
and
xor
out
call
sti
lock
in
fcomp
lret
in
sti
fldl
out
int
ss
shl
jmp
sti
fdivr
fdivp
aam
jmp
icebp
xchg
fcomi
into
icebp
xor
out
sti
fucomp
repnz
cmc
in
iret
cmp
lock
dec
mov
into
mov
repnz
xor
cli
int3
jmp
call
fiadds
aam
decl
shr
aaa
lret
ss
lds
lret
cmc
fnop
cmp
xor
ret
xchg
mov
add
lret
int3
fst
clc
imul
fcmovu
test
std
rcr
roll
iret
out
mov
xor
in
iret
lret
rol
in
in
in
sbb
fsubr
mov
into
test
and
icebp
int3
lret
xor
aaa
jmp
mul
lret
loopne,pt
fcmovnbe
mov
dec
and
test
test
xor
clc
out
out
sarl
lock
enter
ret
aad
leave
sti
addb
out
in
xor
in
aaa
in
ljmp
sar
rcl
fucomp
leave
xlat
les
int3
int
rol
aam
aam
aaa
fcomip
cld
cmpb
loope
out
out
fucom
lea
xor
ss
xor
addl
jmp
mov
jmp
iret
aad
aad
adc
lea
jecxz
jecxz
test
jg
cmpsb
add
sar
test
xchg
fstp
aam
lret
sar
fiaddl
xor
out
lds
neg
out
fstpt
xlat
icebp
rorb
xlat
clc
fneni(8087
out
ljmp
loop
jmp
loope
sti
aas
int3
lock
test
jmp
fiaddl
int
xor
xor
xor
imul
adc
clc
rolb
jmp
test
ficoms
in
in
cmp
cmp
rcr
roll
call
xchg
mov
shr
aaa
ljmp
out
cmp
iret
cld
shl
mov
xchg
cmp
fst
sub
out
leave
xor
enter
loopne
sbb
rcr
xor
ret
xchg
jmp
divl
xor
cmc
ds
icebp
cmp
and
xchg
rol
lret
in
int
sar
in
out
cmp
shl
fcompp
ffreep
in
enter
lret
hlt
or
aad
xor
enter
fistpll
aad
and
shr
loopne
mov
cli
xlat
out
int
test
into
out
out
xor
clc
in
out
ljmp
test
stc
shr
aam
iret
xchg
int
ss
clc
out
cmp
out
loope
out
shl
rolb
hlt
lret
icebp
in
mov
ror
loop
jmp
iret
div
sarl
ds
loopne
ljmp
lret
lret
loop
sub
enter
in
shl
loope
clc
stc
in
rol
into
stc
idiv
mov
leave
loop
sti
repz
in
imull
sub
ror
xlat
int3
stc
cmp
cmp
lret
sar
out
cli
enter
out
mov
xchg
into
jmp
aaa
leave
xlat
std
ljmp
loopne
cmc
xchg
in
idiv
in
std
cld
cmc
call
int
icebp
cli
fdivr
out
sar
aam
rolb
neg
ljmp
ds
lock
fnstsw
out
ror
out
call
leave
xlat
iret
ficoms
ljmp
ror
cmp
aad
ret
out
aad
leave
hlt
aam
out
mov
orb
hlt
aaa
int3
jmp
xor
sar
stc
loop
roll
orl
lret
xlat
loop
sti
repz
aaa
hlt
jmp
std
fmul
lds
dec
mov
lret
xchg
out
xchg
loop
out
aaa
std
hlt
xor
hlt
ror
aas
fcmovnb
repnz
fsubr
jecxz
call
xchg
lret
out
das
in
cli
lret
repz
in
sbb
cli
cmc
in
jmp
jecxz
fneni(8087
in
lock
sar
repz
dec
fiaddl
fucomi
fcmovb
mov
repz
out
div
repz
in
jmp
xlat
sarl
cld
sti
out
lds
loope
ror
xor
cmc
into
in
shr
sti
out
cmp
fdivr
jecxz
fadd
iret
ljmp
sub
ror
out
jmp
cmc
adc
idiv
addl
in
test
in
shl
in
out
loop
sar
in
cmp
call
addb
fucomi
mov
in
call
div
icebp
int3
f2xm1
idiv
xchg
repnz
int
lds
cmc
aam
sub
cmc
hlt
sti
rcl
clc
jecxz
cmp
cli
stc
and
sbb
std
enter
lret
jmp
xor
into
lret
lret
in
shr
enter
jecxz
ljmp
sub
enter
int
icebp
sar
jecxz
into
loopne
jmp
sti
clc
mov
test
mov
out
aaa
fstp
fnstenv
cmp
push
fsubp
cmp
aad
call
mov
xchg
cmp
in
into
enter
icebp
jecxz
test
loopne
loop
rorl
stc
loope
ljmp
xor
lret
out
rcr
cmp
ljmp
rolb
sbb
xchg
cmc
ffreep
cs
lret
in
xor
jmp
fsubp
roll
cmc
xchg
xchg
ljmp
xor
int3
ds
shl
not
hlt
mov
leave
sub
test
out
mov
xor
fcmove
sar
loopne
fsubrp
aas
cmp
in
leave
jecxz
push
call
add
int
int
mov
fidivs
push
jg
cmpsb
add
in
lock
xchg
xchg
into
icebp
out
leave
in
ror
out
rol
int
sti
leave
aad
int
shl
mov
xlat
iret
xor
iret
out
shr
aas
aas
roll
mov
aam
std
in
fstp
xchg
imul
call
xlat
fsubr
int
imul
clc
ds
std
repnz
jmp
loopne
loope
xchg
ret
in
iret
lret
fnstsw
xor
out
xor
roll
jecxz
in
mov
ret
mul
xlat
clc
cmp
lret
into
fmulp
adc
cld
int3
mov
fucom
mov
sub
xor
ret
xor
lock
fadd
xlat
inc
out
int
int3
loope
in
xchg
xchg
in
shl
out
iret
stc
aaa
rcl
shl
cmp
out
std
and
ret
iret
out
into
iret
aaa
fldlg2
out
out
in
in
cmp
jmp
mul
sub
fmulp
mov
clc
mov
in
das
call
leave
out
out
cmp
clc
ljmp
ror
icebp
out
test
mov
xchg
jmp
repnz
into
call
cmc
xor
ret
icebp
repz
sti
test
aad
fimuls
cmc
repnz
out
in
repz
aam
ds
int
sar
call
in
stc
enter
in
lock
out
cmp
enter
loope
jmp
shl
call
ljmp
jmp
cld
cmp
aas
into
stc
stc
lock
sar
lock
ljmp
icebp
xor
test
dec
lret
aas
fadd
out
cmc
loop
fld
mov
out
loope
xchg
hlt
out
into
xor
xor
hlt
repnz
int3
xlat
repnz
cmp
call
ljmp
jmp
fdivr
iret
fnstcw
xlat
or
les
xchg
in
mov
xor
mov
sub
into
hlt
iret
in
cmp
aad
loop
jmp
xchg
icebp
in
cmp
enter
out
in
fst
cmp
cmp
rcl
cmpb
filds
std
cld
iret
in
lock
aad
out
repz
into
shl
out
ds
orb
xchg
loopne
out
rcl
cmc
xor
in
or
sbb
rcr
cli
adc
in
enter
call
in
shl
cmp
cmp
adc
lds
loope
sti
fsts
jmp
xor
int3
xor
out
xor
clc
int3
lret
adc
cli
cmp
mov
clc
lock
sar
sub
sti
fpatan
aaa
std
cmp
ret
out
stc
loopne
testb
in
int3
jmp
lret
shr
xor
sarb
fdivs
roll
xchg
int3
loopne
mov
enter
xor
cmp
std
hlt
int3
addl
ror
out
les
cs
xlat
aas
int3
roll
xor
enter
mov
mov
xchg
loopne
xor
lock
xor
cld
iret
neg
aas
ds
loop
loopne
sbb
enter
loope
xrelease
iret
divb
rol
jmp
aad
fstpt
cmc
mov
xchg
aad
in
jmp
iret
test
adc
xor
fucomp
hlt
clc
shl
icebp
shl
repz
xchg
jmp
fcom
jmp
test
jmp
aaa
cmp
loope
rcl
inc
xchg
icebp
iret
xchg
int3
out
rcl
cmc
xor
sub
fcmovb
stc
and
neg
jecxz
out
in
cli
sbb
out
repnz
repnz
cmp
clc
xlat
ffree
fsubr
in
dec
jmp
loope
ljmp
int3
int3
cli
rolb
rorb
loopne
fcmove
in
mov
mov
int
clc
aam
repnz
lock
xlat
aam
lret
int
fucomi
std
int
orb
lock
repnz
ljmp
out
xchg
xchg
cld
cld
lret
in
ret
leave
ss
lds
call
repz
fscale
cmp
fucomi
ret
call
call
repnz
out
int
dec
cmc
in
out
xlat
into
rcr
fiadds
loope
nop
out
in
or
cmp
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
icebp
jecxz
jmp
cmp
enter
cmp
idiv
cmp
fucom
loop
test
in
ror
xchg
in
ss
int
rcl
lock
cld
loope
fcmovnbe
loope
rol
hlt
fstp
mov
out
mov
xchg
shl
shl
rcr
std
into
stc
ss
in
int
rcl
mov
imul
loopne
jecxz
test
aad
lret
jecxz
out
xlat
leave
enter
aam
cmp
fdivrl
div
ret
lret
mov
shr
out
xchg
icebp
shll
in
in
xor
add
ds
std
test
filds
imul
loop
aad
cmp
int
loope
cmc
cmp
rolb
iret
lret
xchg
cld
pop
shl
icebp
xor
leave
jecxz
fsincos
repz
std
cld
leave
in
lret
cmc
shrb
ds
stc
fcomp
xlat
enter
cmp
ds
stc
ds
fldl
nop
fcmovne
lock
cmc
shl
repnz
stc
std
cli
xor
ret
aas
out
enter
cld
ret
ficoms
lret
ss
int3
cmp
inc
in
in
adc
cld
loopne
xlat
test
sub
loopne
xor
aad
cmp
fxch
in
addl
call
xchg
roll
aad
repz
xlat
ljmp
fcom
cmp
in
xlat
in
fcomp
mov
filds
jecxz
sub
jmp
xlat
fdivrs
std
loop
sti
aas
in
ljmp
rcr
out
in
in
sti
fsub
repz
clc
cmp
flds
xchg
fucom
mov
repz
popl
rcl
loop
xlat
lret
fldz
vpmulhw
repz
mov
stc
loope
into
out
out
in
in
jmp
out
xlat
std
xchg
aam
out
loop
in
test
in
hlt
cmp
lret
ret
shl
roll
cld
mov
out
xchg
rcr
ljmp
enter
shl
cmp
aad
aam
xchg
out
in
flds
iret
fucomip
out
xor
hlt
imul
cmp
lret
test
loopne
leave
orb
loope
loop
aam
cmp
repnz
sarl
rcr
cli
not
add
xchg
loope
fimuls
hlt
cmc
sub
in
out
enter
fucomi
test
lock
or
rolb
in
xor
out
ss
out
aas
fdivrp
fcomp
testl
loop
das
enter
call
cmp
in
out
aaa
ret
ret
mov
loop
test
loop
sti
xchg
in
fstpt
in
dec
fcmove
cmp
rol
clc
shl
lea
int
out
ljmp
cld
leave
cmp
fxam
in
repnz
fucom
fimuls
lea
shl
in
out
ror
lret
rcl
loope
fsincos
loope
out
int
mov
in
lret
xchg
in
xor
ljmp
cmp
aad
shl
lret
lret
out
out
int
cli
icebp
repnz
iret
iret
lret
cmp
xor
ss
out
adc
out
fistpll
fdivr
jecxz
nop
loope
decl
in
out
cmp
fadd
lret
cld
int
fiaddl
mov
call
in
int
rcr
int
cmp
in
lock
sub
cld
xchg
in
lret
orl
xor
ss
jmp
ror
cmp
xchg
xlat
fsubr
cld
call
leave
call
int3
out
cmp
sar
ds
std
mul
lret
and
xchg
in
loop
fmul
ror
ds
cli
roll
aam
imul
jecxz
icebp
lret
xchg
cld
loope
hlt
shr
repnz
out
cmp
cmp
aad
cli
addb
xchg
cmc
sub
cmp
iret
cli
out
call
lock
out
in
mov
jmp
shl
int3
ret
xor
into
div
cld
cmp
cmp
hlt
shl
rol
leave
ffree
jmp
int
in
xor
repnz
in
sarl
hlt
in
mul
rolb
jmp
in
notl
nop
xchg
lret
loop
aam
leave
cmp
xorl
jmp
mov
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
mov
cmpsb
pop
jg
cmpsb
add
icebp
faddl
ret
loopne
mov
shr
lret
jmp
mul
out
into
jmp
test
adc
faddl
call
out
in
in
sar
cmp
cli
cmp
neg
cmc
aam
test
testl
lret
jmp
aaa
in
lock
cld
fidivrl
jecxz
fcomp
repnz
sti
neg
fsubr
adcl
neg
xor
out
xor
shr
out
cli
lret
shl
sti
icebp
jmp
stc
out
jmp
int
clc
std
imul
repz
loop
fisttpll
mov
das
out
ss
not
enter
fidivrl
out
stc
ret
cli
test
jecxz
cld
leave
xchg
mov
in
cmp
sti
leave
fcmove
cli
roll
call
in
xchg
ljmp
lret
cli
repz
jmp
fcmovnbe
incb
stc
shlb
clc
cmp
repz
lret
hlt
ret
out
xchg
icebp
rcr
vpsubsb
test
aad
leave
in
in
shr
aam
fdivrs
fadd
ss
sar
cld
cld
ljmp
hlt
bnd
xor
out
neg
fildl
xchg
int
orb
leave
enter
repnz
hlt
enter
loop
cmp
loop
xchg
in
or
int
call
std
repnz
rol
ret
hlt
hlt
in
fiadds
lret
not
in
lret
sar
jmp
rcr
loop
sbb
xlat
loope
ret
ljmp
lock
xor
cmp
iret
jmp
ffree
ret
cld
xabort
and
int
in
lock
jmp
cmp
cmp
int3
inc
cli
aam
jmp
ffreep
lret
loop
addb
xor
out
clc
cmp
sti
lock
aam
out
fnsetpm(287
loop
sti
in
cmp
in
cmc
aad
out
aad
cld
in
cmp
lret
stc
out
fucomip
fists
rcl
fsub
repnz
out
lret
ds
cld
cmc
aas
in
mov
ficoml
enter
rol
call
sbb
clc
cmp
fld
jmp
fisttps
in
vpaddq
cmc
xlat
out
cmp
xor
loop
or
fmul
in
in
loopne
fdiv
loop
rcl
aam
aas
loop
lock
loopne
orb
nop
xchg
aaa
call
cli
fsubrp
aad
rcl
repnz
test
ljmp
in
out
ljmp
icebp
repnz
icebp
int
xlat
cld
out
ds
mov
jmp
jmp
loope
mov
xor
out
lock
lret
int3
fcomi
int
stc
filds
int3
mov
lret
lret
xlat
into
aad
stc
std
cld
cmp
fdivrl
rcl
lret
testb
sub
out
xlat
fcomp
mul
icebp
sarb
into
out
ret
xchg
ret
test
testb
into
shr
repz
out
clc
lock
lret
fucomip
repz
out
ds
ffreep
cli
out
fucomi
out
lret
xlat
loopne
sti
out
call
lock
shl
shr
in
cmc
test
mov
addl
lock
lret
call
cmp
test
out
cmpb
lret
in
iret
nop
xchg
sti
rcr
cmc
mov
out
hlt
int
fldln2
into
and
fcmovbe
aam
sbb
xlat
mov
fcmove
jmp
ljmp
jmp
xor
stc
addl
fmulp
out
ret
fcmovbe
ljmp
int3
fcomi
out
stc
sarb
aam
rcl
rol
fcomp
roll
cld
sti
mov
xor
std
in
in
sub
loope
jmp
fadd
test
dec
out
jmp
lock
lret
clc
cmp
aam
icebp
icebp
cmp
clc
shl
jecxz
loop
sti
xchg
in
xchg
lds
out
ret
aam
xor
out
xor
ror
stc
xchg
test
sti
loope
test
test
jmp
xor
loop
ss
out
cmp
lret
cmp
loope
clc
cmp
add
ret
pop
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
sub
jl
add
sbb
int
fiadds
int
mul
ss
cmc
roll
clc
out
flds
fimuls
aad
int3
out
cli
lret
iret
fcmove
adc
repnz
in
int
mov
test
test
filds
and
xlat
ret
mov
xchg
shlb
in
ret
shll
cld
cmp
cli
aam
aas
out
lock
xchg
fimull
adcl
ljmp
cmp
cld
aad
sar
in
loope
sti
faddl
shl
jmp
cmp
aam
std
jmp
test
movl
out
rcl
cmc
repz
stc
sti
xlat
fmul
icebp
incl
testb
leave
in
lret
loopne
jmp
out
out
shr
clc
lret
aad
into
in
fprem
in
testl
in
out
shl
in
icebp
in
lock
out
ljmp
icebp
jmp
lret
loop
mov
fucomp
lret
cmp
repnz
aas
icebp
clc
loopne
shl
ffreep
out
sbb
stc
jecxz
int3
out
out
xor
fdiv
cmc
out
lret
sar
loopne
stc
loopne
std
rcl
leave
aam
mov
dec
in
lret
xchg
fcoml
ror
int3
stc
jmp
test
icebp
fdivrp
shr
mov
fld1
iret
nop
or
imul
repz
sub
icebp
loop
cmp
loop
xchg
into
mov
xchg
in
out
xlat
aaa
cmp
fiadds
rcl
ds
rcl
test
shr
shl
jecxz,pn
fstpt
cmp
shl
xor
sbb
mov
xchg
mov
sub
lret
into
stc
aaa
cmp
out
out
fsub
test
loope
adc
sar
repz
divb
out
ljmp
and
fstp
leave
aad
ds
jmp
lock
in
shl
xor
call
rcr
cld
out
loope
fiadds
fimull
cmc
ret
shr
into
out
sar
lret
call
in
ds
stc
icebp
fdivrs
mov
loopne
call
xlat
xor
lret
lret
cmp
not
cmp
std
loopne
fiaddl
jmp
divb
xlat
ret
cli
hlt
jmp
sar
rol
test
in
int3
jmp
mov
out
jmp
lret
rol
test
cmp
test
fxch
idiv
test
fmulp
aas
divb
ror
lock
cli
out
sub
movl
out
in
loope
mov
ss
jecxz
out
rcr
fincstp
jecxz
stc
loop
in
call
lret
out
clc
fcmove
ljmp
roll
lret
jmp
xchg
int
xor
divl
xor
out
call
ds
stc
clc
std
cli
les
cld
mov
xor
in
cli
xor
fucomp
out
adc
addl
loop
in
clc
and
fucom
sub
out
aad
clc
sti
in
loope
sti
rol
in
fimuls
loopne
sti
jecxz
out
test
shr
xor
jmp
jecxz
aam
fucom
sar
aam
in
dec
in
fcmovnu
out
lret
iret
ret
ljmp
push
fldl
in
orb
sub
xlat
xor
icebp
icebp
lock
cld
lock
mov
enter
xor
in
lock
cmc
cld
ds
rol
rorb
in
in
xchg
xor
cmc
fst
fsub
cli
into
iret
fsubp
in
rcr
mov
int3
fdivr
incb
int
ret
hlt
idiv
repz
loopne
fnstcw
cld
jecxz
fiadds
shr
xchg
call
int3
cmp
cli
cmp
aaa
int3
aas
out
repnz
xchg
sub
repz
enter
stc
loop
aam
jmp
nop
jmp
les
aaa
shr
ss
sarl
idivl
cld
call
int3
loope
nop
lret
andb
aam
xor
add
add
aam
rcr
fcmovb
mov
fstpl
mov
fs
cmpsb
add
shl
fxch
xor
int
in
fucomp
aam
out
cmp
mul
in
jmp
ret
mov
xor
sarb
fcmovnbe
cmp
aaa
ret
in
shl
leave
mov
int
xchg
lret
adc
cmp
fcomi
ss
cmp
cmp
cli
repnz
mov
mov
mul
in
std
in
cmc
cld
in
ss
aad
cmp
ss
ds
ret
cmp
ffree
ret
vpminub
out
loopne
nop
jmp
ret
stc
cs
out
enter
sarl
clc
hlt
xchg
call
enter
jmp
in
fxam
jmp
enter
aad
out
fcomip
rol
cld
sbb
std
mov
out
aad
cmp
idiv
iret
fdivrs
cmp
incb
iret
sti
test
std
iret
jmp
xor
out
xor
cmp
xlat
in
ret
rcl
out
ret
cld
leave
jecxz
test
xchg
loope
xor
in
shr
shll
ffreep
repnz
jmp
lret
mov
iret
jecxz
into
in
cs
sub
xlat
jmp
hlt
stc
cmpl
fucomp
out
lock
xchg
call
loop
cmp
stc
fdiv
not
icebp
cmp
mul
jmp
orb
out
fxch
das
call
lock
loope
rolb
jmp
loop
xchg
call
fcom
in
out
aaa
clc
cmp
jecxz
int3
icebp
cmp
hlt
xchg
ljmp
in
mov
in
aad
leave
in
stc
lret
lret
rolb
xchg
cmp
jecxz
fcomp
and
iret
xchg
iret
das
fldcw
xor
cmp
cmp
xor
iret
aas
in
cmc
fiadds
fsubr
out
fdiv
iret
lret
faddp
rcl
in
xor
cmp
loopne
in
enter
lret
out
mov
mov
ljmp
fcmovnbe
out
adc
lock
call
fmul
out
out
fsub
int
int3
xor
stc
shl
cld
sar
out
out
repz
leave
jmp
lea
sub
cs
aas
fidivrl
rcl
fnstsw
out
testl
mov
xor
call
loope
cmpl
hlt
repnz
enter
call
out
lock
jmp
lret
fucomip
lret
ljmp
out
lret
std
mov
shl
xor
out
lret
fsub
loop
sar
aam
loop
loop
ret
stc
in
sti
loope
xchg
out
shrl
cmc
lret
xlat
call
test
flds
xor
test
call
divl
cmp
stc
fcmovnbe
aam
leave
fsubp
in
leave
out
mov
icebp
repnz
loopne
xlat
xor
out
jmp
in
neg
rcl
rcl
mov
sar
fiaddl
rcr
mov
das
xor
xor
rcl
sti
and
and
lret
out
std
out
add
loopne
aaa
fxch
sar
call
fildl
mov
lret
in
mov
in
lret
in
xor
iret
cmc
int3
in
ljmp
in
add
jecxz
cli
fmul
icebp
xchg
int
lret
out
repz
xlat
fucomi
sbb
fcmovb
fdiv
adc
in
mov
icebp
sbb
repnz
cld
std
ss
fcomp
clc
fadds
cmc
lret
fmuls
ror
ret
aam
call
rcr
fsubp
ret
les
out
cmp
repnz
hlt
cli
lret
in
xor
call
rolb
mov
mov
mov
aaa
lret
call
fdivr
out
out
cli
repz
mov
out
mov
xchg
mov
xor
sar
fdivr
lock
fiadds
aad
xchg
out
in
jecxz
enter
std
leave
loope
cmp
rolb
leave
in
loop
loopne
fxch
test
call
repz
hlt
cli
in
lret
int
out
cmp
aad
xchg
ljmp
shl
repnz
fdivrs
cs
ljmp
aas
roll
std
out
xchg
fsubp
xor
fldcw
aaa
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
shl
movsb
imul
add
out
sti
cmp
cmp
aas
hlt
repz
xchg
mov
fisttpl
loop
in
ret
fabs
lret
cmp
cmp
loopne
hlt
in
fadd
jmp
out
xor
in
cli
fcmovbe
lret
fucom
cmp
ret
aam
lret
popl
mov
xor
int3
cmp
in
out
xor
cmp
cmc
aas
cli
aad
fcomp
lret
fdivr
lock
lock
sar
repz
sar
not
sub
aad
lock
testl
iret
aad
repnz
aad
std
sar
cli
aam
loop
hlt
loop
cmp
jmp
fcmovnu
mov
icebp
mov
nop
repz
cmc
in
lock
hlt
cld
cmp
into
rcl
fld
ret
xchg
jmp
les
xor
fscale
xor
cmc
testl
loop
int3
ffree
ljmp
shr
out
icebp
iret
loope
stc
cmp
rcr
out
loopne
lret
enter
div
lret
in
rcl
cmp
testl
xlat
stc
xchg
lret
cmc
lret
xor
out
xor
lret
std
in
call
ffreep
les
jecxz
lock
out
sub
stc
sarb
stc
shr
xor
hlt
leave
cmc
loopne
out
nop
into
fldl
aaa
xor
stc
div
enter
ret
shr
ds
out
loope
test
cmp
aad
cmp
fdivr
cmp
in
not
aam
loop
call
mov
cs
cmc
lret
sar
cs
in
aam
loop
aam
leave
dec
in
cmc
ror
jecxz
xor
lret
clc
fstp
loop
cmc
xchg
in
aam
jmp
in
lock
adc
call
ret
stc
loope
cld
rcr
repz
stc
test
rcl
fiadds
leave
aad
iret
call
aad
xor
mov
stc
in
test
fcmovu
out
std
loop
iret
lret
enter
cmp
ss
lock
test
test
aad
orb
rorl
ss
lock
cmp
int
xchg
in
std
call
out
xchg
shl
ljmp
idivl
jecxz
adc
ror
out
jecxz
call
cld
mov
cli
rcl
cmp
cmp
cmp
cmp
sti
cmp
fcomi
call
fadds
das
jecxz
neg
test
cli
aad
fcmovb
test
jecxz
sti
rolb
xchg
mov
lock
ljmp
ret
fcomi
in
jecxz
hlt
sbb
clc
xchg
icebp
std
mov
fldln2
repz
lock
out
cmp
aad
addl
jmp
in
test
xchg
test
loopne
sarl
cmp
or
fistpll
xor
fdivr
mov
lret
fsub
test
in
aam
ljmp
enter
sarb
repz
fdivr
iret
loope
iret
jmp
jecxz
cmp
repz
cmp
std
sar
cmp
addb
shr
incl
shr
int
in
into
repz
int3
in
vpmuludq
shl
aad
fdivr
out
test
int
into
in
out
lock
xor
call
jmp
out
out
cli
adcb
out
xor
rcl
repz
in
fucomi
loop
fldl
icebp
ljmp
in
hlt
xor
lock
aad
ret
loop
out
loopne
out
faddp
jmp
loop
fists
ljmp
cmp
cli
xrelease
fdivrp
sti
popl
mov
shl
ss
enter
xor
fnstenv
neg
shl
cmp
stc
ret
mul
fcmove
clc
fndisi(8087
nop
cld
xchg
sub
int
lock
lret
fdivr
cmp
sti
sti
test
fxtract
aad
shl
iret
jecxz
shl
iret
adcb
cmp
test
sbb
adc
ffree
loopne
shr
test
in
cs
int
repz
std
hlt
aad
aam
aad
fucomi
sti
mov
loop
sub
stc
ss
int3
out
repnz
fsubrp
fmulp
ret
add
jmp
int
ret
fcmovu
add
dec
ret
bswap
outsb
jg
cmpsb
add
fisttpll
loope
xchg
loop
in
in
lret
lret
cmc
leave
icebp
std
cmp
xlat
aad
filds
testb
jecxz
into
lret
ror
sar
divl
ds
ret
add
aad
repnz
out
cld
leave
lret
cld
mov
shrb
hlt
out
aam
xor
rcr
rcl
repnz
test
jecxz
fdiv
out
into
adc
xor
jmp
call
stc
cmp
ret
rcr
test
out
repnz
fcmovu
shl
in
rol
mov
fcmovnbe
xor
cmp
sar
ffree
cli
mov
xlat
in
repz
int3
jmp
fsub
enter
jmp
rcl
aam
iret
aad
in
cli
std
not
rcr
orb
xor
int3
out
jmp
cli
hlt
xlat
ret
idiv
clc
idiv
std
xchg
int3
out
jecxz
in
div
repz
fstpt
fyl2xp1
testb
rol
jmp
xlat
hlt
rol
rcl
into
out
aad
lock
ffreep
or
rol
sti
lret
hlt
iret
in
sbb
out
xlat
cmp
loop
leave
icebp
cmp
ds
cmp
mov
jmp
out
out
in
rcll
out
cmp
mul
leave
cmp
rcr
rol
in
repnz
fadd
mov
fucomp
int
hlt
aad
icebp
ret
fstp
aad
movb
stc
test
shr
call
out
lret
icebp
fiadds
repz
neg
imul
aam
fdivrs
fisttps
fmul
loopne
das
in
repz
in
enter
iret
div
sbb
mov
mov
xchg
int
ret
sarb
xor
fdivrl
in
repz
ljmp
jecxz
enter
in
xor
sar
aas
lock
loopne
xlat
xchg
hlt
xchg
in
out
xbegin
call
out
out
cld
cmp
loope
loope
not
jecxz
roll
mov
int
jmp
icebp
fnsetpm(287
fstp
mul
sbb
stc
rol
repz
and
nop
rclb
xor
out
cmp
idiv
aas
xlat
fadd
fld
or
rcr
enter
cli
iret
movb
roll
in
std
in
fcmovnb
rol
in
nop
iret
xor
repz
enter
sar
inc
xchg
loop
lret
enter
mov
jmp
xchg
int3
sub
in
leave
neg
cmp
iret
out
xor
ljmp
enter
in
jecxz
in
cli
loop
icebp
enter
imul
xor
xlat
stc
out
out
test
aas
out
fsub
in
mov
repz
jmp
out
out
shr
sti
xlat
lock
cmc
dec
hlt
fcmovb
testl
orb
into
cli
neg
int3
iret
loopne
xor
hlt
sar
orb
incl
fld1
cmc
shll
int
jmp
cmc
sti
push
ds
in
jmp
dec
test
loop
stc
out
cmp
enter
out
leave
out
jmp
mov
int
call
repz
cmp
shl
call
clc
addl
iret
in
jecxz
shr
out
xor
stc
sti
sti
jmp
aam
cmp
icebp
not
repz
fcomip
in
incb
loopne
in
repz
lret
iret
xor
clc
cmc
aad
cld
stc
hlt
mul
leave
mov
mov
xchg
std
adcl
cmc
cmp
cmp
xchg
test
lret
test
loop
iret
das
sub
xor
fsqrt
ret
addl
sbb
icebp
nop
jmp
xor
int
in
aad
fcompp
fdivp
aaa
add
jecxz
loop
loopne
faddl
lds
clc
repz
enter
ljmp
test
adc
cld
fcmovnb
nop
int3
test
in
rol
jmp
into
lock
ret
cmp
call
shr
ret
clc
fisttps
out
mov
jmp
lret
std
sarb
iret
repz
aas
cld
aas
adc
mov
std
fadds
sub
div
jmp
lock
repnz
jmp
clc
jecxz
int
imul
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
aaa
dec
call
jl
add
jecxz
push
xor
icebp
iret
shl
shll
call
fdivrl
ds
cli
cli
inc
test
loop
aam
jmp
cld
rcr
aam
out
cld
div
ds
sar
mov
out
loopne
in
mov
xor
ret
repz
in
int
lock
loopne
fucom
int3
mov
clc
addb
out
cmc
rcr
int
ds
fadd
rol
cli
mov
iret
cmp
ljmp
xor
call
filds
jmp
jmp
lea
xchg
xchg
out
in
call
cmp
ljmp
adc
cld
leave
xchg
nop
test
shrl
enter
xlat
roll
out
out
in
out
into
mul
sub
sub
xor
shll
cmp
cmc
jecxz
fdiv
xor
loopne
fisttps
int3
iret
enter
cmp
fdivr
rol
mov
clc
test
out
loop
loope
loop
in
in
fincstp
sti
call
fcmovnu
cmp
in
out
mov
xor
in
ret
xor
icebp
into
xor
into
hlt
stc
fnstcw
cmc
fcos
fcmovnu
fcomp
into
out
sbb
xor
cmp
ljmp
push
xlat
and
mov
std
mov
jmp
into
out
in
enter
fucomip
out
shr
cmp
xchg
fst
leave
sti
in
decl
call
leave
cmc
aam
fdivrl
std
cmc
cmc
shl
rolb
out
sti
xchg
call
int
aam
lret
lock
loopne
add
cmp
in
mov
test
stc
stc
leave
call
cmp
in
out
ret
xlat
enter
mov
xchg
jmp
cmc
ror
xlat
clc
into
cmp
stc
shl
fsubr
cld
cmc
flds
in
mov
shl
aad
sar
sub
hlt
lret
in
jmp
in
ds
ds
enter
rcr
out
xor
neg
xor
ljmp
in
icebp
cmc
in
cli
in
xchg
mov
xor
xor
cmp
lock
aaa
into
cli
int
testb
leave
out
mov
lret
in
std
icebp
lret
repz
std
cmp
cmp
fcmovu
ret
lea
loop
in
adc
jecxz
cmp
fcmovb
fndisi(8087
jecxz
not
fstpt
fildl
in
mov
repz
jecxz
das
aad
ss
stc
aad
int3
fadds
shl
lds
fcmovnbe
cld
out
jmp
jmp
xor
shl
iret
aaa
stc
out
loopne
cmp
aam
jmp
lret
ss
cmp
in
fcmovb
ret
roll
in
fcos
call
mov
in
lret
out
lock
cmp
cli
icebp
ret
aas
idiv
call
or
mov
in
in
out
leave
fcomi
cmp
cmc
enter
loopne
jmp
jecxz
fdivr
std
xchg
mov
int3
int
ror
cmpl
jecxz
out
jecxz
ljmp
in
shl
out
in
int
xor
testl
test
cli
iret
in
out
leave
sti
mov
fdiv
lds
repz
lock
jmp
into
out
sti
call
jmp
xchg
orb
fcmovnbe
idivb
icebp
fninit
int3
jecxz
test
fldl
jmp
mov
jecxz
int3
out
aad
cmp
clc
std
fisttps
incl
or
stc
cld
cmp
aad
test
int3
int3
xlat
neg
mul
clc
ljmp
xchg
icebp
xchg
icebp
lock
shl
aad
aas
call
add
cmc
in
out
cld
mov
in
lret
out
iret
sti
ss
cmc
fnstcw
shr
cld
test
repz
jecxz
in
in
cmp
orl
cmp
neg
clc
aad
int
repz
lock
cmp
fdiv
ljmp
aam
iret
enter
loop
roll
test
ljmp
jecxz
lock
mov
addl
jmp
jmp
vpsrlq
rcl
aad
xchg
mov
in
cmpsl
sbb
jg
cmpsb
add
shl
cmp
fidivrl
int3
in
ret
out
in
ds
int
addb
ret
fnstcw
aas
mov
fmull
fistl
out
xor
cmp
out
leave
cld
sti
fdiv
cld
repz
repz
jmp
std
cmp
enter
lret
shl
jecxz
call
loopne
fnstsw
sar
sti
std
test
mov
test
xchg
ret
iret
in
xor
enter
cmp
xor
in
xor
fcmove
ret
lock
fldl
sub
hlt
aaa
icebp
xlat
iret
loopne
repz
fld
aad
in
lret
test
loopne
xor
repz
cmp
cmp
sar
testl
ljmp
das
int3
xor
call
lock
sar
loopne
addb
std
loop
fucomip
loop
jecxz
test
std
cmp
sti
repnz
ret
sti
aas
in
and
in
in
test
out
ljmp
ror
ss
fnstsw
addb
test
testl
das
in
fprem
enter
jecxz
out
adc
dec
out
cld
test
mov
sub
hlt
clc
aam
shr
clc
fsub
jecxz
aas
cmp
xchg
jmp
fldl
icebp
in
into
shl
loop
neg
sar
xlat
fcomip
cli
idiv
xlat
hlt
hlt
incl
loop
ret
loopne
mov
out
xor
idivl
dec
cmp
rol
test
xchg
out
mov
in
aad
sub
into
ret
neg
stc
cmp
fdiv
or
cmp
incb
jmp
int
loope
lret
stc
iret
icebp
cmp
rol
test
test
xchg
jmp
lret
rcl
jmp
ror
cmp
cmp
fdivrs
shr
sti
cmp
fucomp
clc
int
in
xchg
xor
ljmp
int
neg
xlat
xlat
ljmp
loopne
jmp
fdiv
shlb
fldl
fisttps
jmp
in
std
rolb
lock
cmp
xor
int
repz
loopne
out
enter
loop
int3
fmul
xchg
lret
fcmovbe
cld
aad
hlt
leave
int
ror
hlt
fdiv
sti
in
fmul
neg
iret
cli
mov
mov
cs
out
xor
cmp
enter
fdivrs
aad
shl
fsubr
stc
xchg
lock
int3
repnz
enter
ss
int3
ds
stc
fst
aaa
hlt
cmp
orl
ret
aad
fmul
xlat
fnstenv
sti
clc
add
test
in
jmp
int
in
ljmp
jecxz
xor
sub
cmp
roll
shl
clc
ret
loop
test
icebp
jmp
xor
cmp
into
loopne
xlat
fiadds
out
mov
mov
int3
jecxz
loope
icebp
xor
xor
leave
ss
jmp
fdivrl
xlat
shl
mov
fucomp
ljmp
iret
test
aad
xor
xor
lret
enter
in
cmp
sti
sbb
fcmovnu
fstp
jmp
clc
lock
fst
adc
in
dec
loop
in
fmull
cs
out
into
std
cld
out
fchs
lock
lock
icebp
stc
cmp
jmp
mov
decb
out
shl
shr
jmp
in
lock
jmp
in
mov
icebp
repnz
jmp
out
into
shl
aam
sarl
icebp
addl
cli
std
fsubrp
repz
out
repz
xlat
stc
jmp
out
in
xor
xlat
xor
test
imul
fdivp
repnz
xchg
lds
into
sub
not
call
shl
cmp
fisttpll
cld
out
rcr
loopne
int3
fdecstp
std
lock
lret
cmc
cmp
cmp
sti
inc
jecxz
loopne
out
lret
call
xlat
neg
loopne
jmp
stc
cld
fcmovnu
cmp
loop
int
iret
stc
shr
addb
aaa
fstp
cmp
ss
fsubp
aad
in
int
jecxz
mov
loop
loope
xor
xlat
sti
shll
shl
lds
je
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
xchg
jl
add
rcr
hlt
fcomip
fcmovb
lret
adc
call
divl
repz
out
cmpl
fcomip
test
xchg
incl
ljmp
cld
shr
clc
rcr
mul
lret
sub
out
int3
lret
jmp
in
xor
int
cmp
notrack
xlat
ret
cmp
fcmovnbe
mov
lock
out
iret
out
ret
aad
fidivrl
out
aas
in
int3
ret
orb
xchg
icebp
xchg
mov
sarb
jmp
cmp
repnz
hlt
xchg
mov
or
and
or
into
in
clc
xor
leave
test
out
fcmovnbe
fdivr
cmc
enter
leave
sti
cmp
rcr
into
in
leave
xor
fbstp
cmp
cmc
repz
xlat
cmp
fsincos
mov
jmp
repz
mov
xor
cmp
out
std
enter
cmp
faddp
cli
xlat
in
in
fcmovne
mov
add
hlt
stc
ljmp
int3
jecxz
cld
out
hlt
xlat
ret
mov
mov
lret
sti
clc
xlat
enter
ss
fxch
shl
fld
out
xchg
bnd
lock
out
enter
out
enter
xor
aad
cmc
ret
xchg
jmp
jecxz
hlt
jecxz
out
in
cmp
jmp
out
sti
add
fldl2t
xlat
call
loop
int3
fmul
lret
in
xor
cmp
enter
xor
cmc
shl
enter
lret
mov
out
cmp
shl
rcr
fdivrl
xor
testb
enter
fdivs
xor
int3
cmp
repnz
vaddsubps
cld
hlt
fisttpl
xchg
mov
sar
das
repnz
cmp
ljmp
repnz
test
xchg
mov
xlat
int3
xor
les
fstpt
jecxz
ds
fucomp
test
icebp
int
aad
out
out
aam
ret
idivl
int3
leave
dec
int
aad
mov
loope
fsincos
jmp
xchg
in
out
fldl2e
lret
in
out
cld
rcr
loope
ds
stc
or
int3
cli
loope
jmp
enter
in
in
iret
cmp
repnz
xchg
lret
in
fscale
jmp
jmp
int
int
hlt
lret
or
fdivr
ds
sar
cmc
clc
fcmovnb
in
mov
leave
shr
loop
ret
aaa
enter
ret
xlat
fdivr
ljmp
out
mov
repnz
stc
lock
idiv
std
aas
cmc
lret
test
inc
xor
into
loopne
in
out
xor
xor
lock
aas
fdivr
fcomi
std
fadd
in
out
int3
in
xchg
call
shr
enter
push
aaa
aas
xchg
sti
vcvtpd2dqx
leave
sti
lock
xchg
xlat
aaa
in
lock
das
jmp
add
loopne
or
int3
mov
xor
call
imul
int3
fiaddl
hlt
jmp
sar
adc
out
cmp
cli
push
std
cmp
in
inc
and
lds
icebp
adc
sub
icebp
aaa
aam
repnz
fcmovnbe
std
xchg
leave
xchg
xchg
loop
lret
lret
std
mov
ret
rol
cli
fildl
rorl
cli
stc
into
ljmp
loopne
stc
int3
out
xor
jmp
clc
clc
in
cmp
hlt
fucom
jecxz
iret
xchg
lock
fucomip
std
repz
repnz
ret
out
out
xchg
xchg
loope
cs
ljmp
jmp
aas
ds
enter
out
loop
jecxz
add
sub
in
cmp
out
ljmp
fcmovb
loopne
test
call
xchg
call
test
int
cmp
roll
mov
out
jmp
fsubrp
les
enter
ror
loopne
test
fcmovb
xor
lret
iret
jmp
aad
repz
jmp
cmp
aad
fsub
repnz
ret
lea
xchg
iret
shr
loop
loopne
lret
cmp
icebp
out
xlat
hlt
cmp
loop
add
mov
out
nop
cli
mov
loop
into
int3
out
cld
aam
cmp
sti
aas
in
les
rorb
out
xor
idivl
and
mov
orl
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
rolb
add
jge
jl
into
clc
call
out
addl
repz
std
xlat
rcr
cli
in
in
repnz
loope
loopne
mov
jecxz
jmp
aaa
sti
iret
cmp
cld
add
jecxz
movl
jmp
mov
jmp
xlat
xor
enter
cmp
jmp
cmp
in
hlt
sti
in
ror
enter
in
out
addl
out
into
sar
test
lock
fiaddl
int
sti
testb
cmc
ss
fxch
lock
cmpl
out
flds
mov
out
xchg
out
aaa
shrb
cmp
cmp
stc
int
int
ret
jecxz
out
jmp
out
std
fcmovnbe
cmp
ret
and
loop
xchg
xchg
in
loop
iret
ret
lret
sti
fmul
xor
cld
fcomip
movl
loope
lock
call
int
fst
lock
loopne
sbb
jmp
imul
xchg
fldl
shr
hlt
fcmovb
sar
lret
hlt
cmc
ljmp
loopne
push
in
jmp
mov
ror
jmp
fld
hlt
hlt
push
repnz
sarl
xlat
xor
mul
fcmovb
out
iret
xchg
jmp
mov
loop
out
out
shl
div
xor
loop
cmp
cmp
not
in
loop
clc
fiadds
in
rol
iret
xor
aaa
cmp
xlat
hlt
lret
stc
stc
lds
mov
bnd
aam
test
repz
clc
jmp
cmp
in
ljmp
aam
sbb
loopne
int
xchg
in
enter
leave
cld
xor
rcr
cmp
test
test
filds
loope
xchg
in
jecxz
in
xor
xor
fcmove
cmp
out
jmp
hlt
test
mov
fsubrp
aam
iret
aaa
iret
cli
iret
idivb
inc
call
xlat
repnz
out
cld
neg
in
mov
cld
shr
nop
int3
jmp
ljmp
sub
aam
clc
vpavgw
mov
loopne
lret
xor
leave
into
jmp
repnz
clc
cmp
loop
fadds
test
cli
int3
xchg
xchg
xor
out
xlat
repz
repz
stc
jecxz
rol
repz
fucomp
lret
mov
mov
xchg
aad
ret
sarb
jmp
leave
fsubr
in
sar
clc
out
ret
jmp
fisttps
rol
leave
in
repz
sti
shr
aam
cli
adc
repz
test
std
aad
in
loope
mov
xchg
into
in
xor
out
fincstp
roll
push
out
ret
dec
loope
in
in
xor
xor
out
out
lret
cmc
xchg
fucompp
in
call
out
into
aad
aad
xor
lock
fcmove
cmp
fsubr
jecxz
cli
hlt
cmp
ljmp
out
cmp
aad
cli
int3
not
cli
xlat
cld
sbb
fadd
sbb
rol
in
loope
lock
lret
jmp
lret
xor
addl
out
iret
fidivl
out
stc
sarl
mov
out
icebp
adcl
sti
stc
cli
loope
fmul
fildl
xchg
into
out
sub
out
call
int3
sbb
cmc
std
xlat
test
mov
mov
loope
lret
mov
shl
test
xor
cmp
sbb
roll
fmul
lock
test
shr
loop
clc
int
into
in
sar
out
iret
cmp
fucomi
out
fildl
test
loop
cmc
xlat
ffree
neg
sti
lret
faddl
add
mov
out
sbb
leave
xor
in
jmp
cmp
fcomip
cmp
cld
aam
enter
mov
lock
in
lret
lock
shl
out
and
testb
faddp
shr
out
leave
repz
lret
test
cmp
cld
rcl
aad
in
cmp
mov
mov
lret
loop
cmp
call
out
sti
loope
iret
sti
cli
mov
mov
cli
sbb
out
in
in
shrl
out
lock
out
in
in
in
in
ret
shl
ret
cmp
rol
cmp
cmp
aad
cmp
in
jecxz
int
sti
mov
jecxz
std
test
lret
call
int3
cmp
std
lret
cmp
or
mov
addl
xor
xorl
movl
sbbl
jmp
rcl
int3
fstp
arpl
test
mov
push
jle
jge
jl
clc
ss
leave
repz
test
out
repnz
out
into
ljmp
lock
not
neg
fsubrp
out
sti
mov
ficoms
aad
cli
jmp
cli
iret
repz
loop
clc
repnz
loope
inc
lret
and
mov
xor
cmp
jmp
fsub
icebp
fcom
mov
jmp
xlat
call
fsubp
xchg
in
sub
out
shll
out
cmp
lret
shl
clc
iret
fcmovnu
orl
test
test
fmulp
cmp
lret
fucomp
cmp
ror
test
ret
test
in
lret
loope
call
mov
xor
sti
in
aaa
clc
clc
aas
cli
cmp
sbb
test
cli
fldl
icebp
out
mov
fnstenv
cmp
xlat
in
hlt
fst
cld
xlat
mov
ffreep
sub
into
mov
sub
xor
xor
fdiv
rol
stc
push
jecxz
shr
jmp
mov
lret
iret
ret
xor
iret
xor
cs
shr
loopne
add
ds
out
mov
loopne
test
xchg
int3
fstp
shl
sub
out
xor
cmp
cld
std
into
loope
rcl
movl
icebp
sub
jmp
out
mov
cmp
repnz
adc
loop
out
loope
fildl
out
out
in
lret
sub
cmp
aam
out
out
std
fiadds
ss
out
sti
jmp
in
jecxz
ljmp
xlat
shr
call
sti
xchg
xchg
mov
xlat
in
lock
aam
cmp
icebp
fdivp
stc
lds
sti
jmp
test
ffree
loope
in
lret
std
cld
icebp
cmp
aam
shl
cmp
rcr
fcomp
enter
shr
enter
jmp
cmp
fstpt
stc
iret
stc
ret
rcr
clc
shr
sti
idiv
jmp
out
mov
iret
fnstenv
fcmovnbe
out
fucomp
aad
sbb
ds
cli
mov
loop
in
fsubr
icebp
int3
in
clc
ljmp
xlat
int
repnz
out
faddp
out
cli
loop
rolb
rol
out
jmp
in
int
addb
fiaddl
sub
cld
fsubp
leave
aam
clc
int3
jmp
fnsave
ljmp
adc
xchg
cli
sbb
mov
lret
xor
cmc
enter
repnz
aad
out
icebp
stc
test
int
lret
mov
ret
call
or
mov
test
sti
and
iret
fists
out
clc
into
repz
lret
rcr
rcl
test
jmp
in
out
xchg
shr
cmc
sub
clc
loopne
rolb
rcr
jmp
orb
cmc
ror
in
sar
in
ds
jmp
in
ret
aam
ds
in
xor
jecxz
shr
xchg
cld
cmc
out
aaa
fcmovnb
fdivrs
ljmp
imul
shl
sbb
fmuls
loope
jmp
fcmovnu
xlat
std
dec
aam
std
cmp
loopne
repnz
repnz
mov
out
mov
int3
out
lret
bnd
fadd
ret
ret
ret
fisttps
test
ror
xor
fsubr
lock
ds
lock
bnd
faddl
subb
imul
out
fcomp
shl
into
repz
lret
mov
repz
lock
cmp
fmul
or
clc
iret
fadd
loopne
ljmp
in
iret
xlat
cmp
cmp
fmul
std
rol
xlat
out
jecxz
out
fisttps
out
cmp
icebp
out
roll
cmp
test
test
in
shr
jmp
sub
ss
stc
hlt
enter
inc
std
out
xchg
xor
fdiv
rcr
repnz
ds
xlat
test
xor
fcmovne
ljmp
cmp
out
rcr
int3
out
stc
std
std
jmp
leave
stc
mov
in
lret
nop
jmp
aam
aad
rcl
xor
cmp
rcl
add
test
ror
in
in
loop
xchg
out
icebp
repz
jmp
ss
cmp
cmp
cli
loopne
addl
enter
in
mov
lock
xor
cld
shl
clc
cmc
cli
ds
cli
not
int
enter
repz
out
sar
in
out
adc
lock
xchg
fs
add
push
dec
add
movl
jmp
xlat
enter
enter
xchg
rol
in
arpl
lret
or
jl
loopne
in
cld
sar
lds
cli
xchg
imul
fmul
ror
repnz
div
ljmp
aad
stc
leave
hlt
fldl
xor
in
icebp
enter
call
clc
ret
xchg
bnd
cli
cli
out
mov
in
out
ljmp
out
stc
in
rcl
flds
vpaddd
xchg
out
jecxz
jmp
xor
lock
shll
out
sti
xlat
loope
aam
loope
decl
fimull
aaa
loop
xor
std
cmp
cli
cli
fistpll
fnstsw
cmp
jmp
out
cmp
out
out
rcr
bnd
cli
in
in
shl
cmp
cli
loope
fmuls
int3
jmp
ljmp
cmp
fcmovne
out
or
loop
cld
lret
ret
mov
mov
iret
xlat
repz
repz
sar
cmp
iret
sarb
fidivrs
mul
cli
fdivr
stc
in
fcmovb
xchg
loope
decl
lret
div
iret
cmp
cmp
fcmovbe
repz
orb
and
subb
jmp
lret
neg
repnz
loope,pt
xchg
enter
rcl
in
ljmp
rcl
sarb
ljmp
mov
in
fmull
mov
cs
lret
ss
cmc
repz
loopne
out
sub
repz
shl
lock
std
lock
aad
out
stc
inc
xchg
out
jmp
fildl
xor
lock
stc
icebp
aad
sar
aas
cli
fidivrs
cmp
icebp
leave
ret
std
lea
cli
shl
jmp
lock
in
sti
neg
cli
mov
mov
fcomp
fldpi
in
std
test
xor
mov
cmp
jmp
fdivr
test
in
test
out
roll
rol
ss
iret
loopne
clc
aad
cmp
mov
out
rcl
xchg
xor
ror
jmp
fucomp
xlat
stc
cmp
in
in
roll
mov
mov
cli
mov
ljmp
cli
aam
loope
int3
loopne
ret
int3
cmp
std
lret
dec
clc
cld
xchg
sub
xchg
ror
cmc
loopne
sarl
cmpl
aas
incl
jmp
jmp
repz
rcl
fiadds
shl
rolb
loop
mov
and
out
call
cld
icebp
cmp
inc
hlt
xlat
ljmp
lret
roll
hlt
aam
hlt
ljmp
cmpl
iret
xchg
xor
loopne
in
cmp
xor
fnstsw
shl
sar
hlt
orb
in
repnz
sti
out
cmp
in
cmp
fcmovne
fcomi
clc
lea
mov
fld
int3
shr
repnz
leave
cmp
into
hlt
jmp
neg
ljmp
icebp
out
sub
fpatan
std
cmp
addl
faddl
clc
repnz
cs
std
cmp
cld
in
flds
fsin
test
fucomi
fadds
nop
out
lret
xor
sarl
ss
into
repz
in
test
enter
jmp
icebp
loop
ror
int
stc
aad
lret
jecxz
cmp
fiaddl
test
std
test
das
jecxz
cmp
repnz
iret
clc
cmp
sti
aam
sub
loope
xchg
fisttpl
jecxz
xor
rcr
aad
iret
cli
cmp
aad
jmp
fcmovnbe
mov
out
ret
fldl
shl
cmp
shl
cmp
ret
test
shl
not
xchg
roll
fstpt
ror
ss
ds
icebp
roll
xchg
lret
lock
into
lock
aad
icebp
out
cld
xor
int3
into
loope
cld
cli
ret
mov
mov
or
xchg
jecxz
sti
out
cmp
idiv
loopne
aad
vpsrld
int3
addl
into
ret
jmp
cli
cmp
fiaddl
loop
lret
jecxz
iret
cli
shl
les
aam
sub
imul
sti
cmp
fdivrp
sti
testb
test
shr
in
aad
in
fidivrl
in
repz
fnstsw
enter
out
lret
icebp
jecxz
lret
in
shrb
sti
hlt
in
cmp
movl
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
decl
adc
jge
jl
aas
hlt
aad
roll
in
xchg
cmp
xor
fld
jmp
shr
std
shl
rcl
jecxz
jmp
icebp
orl
ss
cmp
div
into
hlt
in
in
addb
cli
fcmovu
jmp
lret
and
jmp
das
fcmove
incl
test
loop
in
filds
fidivs
in
sub
cmp
lock
loopne
fld
aam
mov
hlt
fmull
xchg
jecxz
in
out
bnd
int
rcl
fidivrl
in
out
jecxz
repnz
cmc
out
clc
aam
roll
mov
xor
xor
fcmovnu
fdivr
ljmp
fdivr
sub
cmp
xchg
ret
jmp
aam
ss
aam
rcr
rcl
std
mov
or
jmp
int3
rcr
iret
cmc
ss
clc
fdivl
loope
or
in
fcom
in
mul
xchg
sti
mov
out
call
cs
aad
std
adc
out
clc
loope
xchg
icebp
in
mov
clc
xor
fucomp
cmp
sbb
shl
jmp
cmp
mov
repz
ss
loope
sarl
aam
mov
leave
fstp
enter
mov
xchg
call
aaa
icebp
fstp
lret
jmp
in
in
fucomi
fst
addb
decl
xor
in
shl
iret
into
out
lock
xlat
aas
sar
in
cli
lret
cli
xchg
addb
subb
stc
lock
in
enter
ds
stc
cli
fxam
clc
loopne
mov
sbb
iret
jecxz
stc
idiv
shr
fcom
xor
cmp
ds
xchg
clc
and
fcomip
int3
jmp
fcomip
shl
enter
clc
call
xlat
fdivrp
rcl
aad
call
ret
jmp
int
xor
shl
lret
jmp
int3
fnsave
clc
test
xlat
mov
clc
lret
mov
mov
shlb
stc
in
cmp
loopne
cmp
out
les
fists
rcl
into
enter
int
xor
repnz
in
out
cli
loopne
mov
cli
loop
xchg
cld
out
shl
stc
ss
shl
shr
cmpb
hlt
shl
mov
leave
in
out
xchg
xchg
addb
xor
xor
into
jmp
adc
rol
iret
std
xlat
fcmovb
fdivr
mov
enter
mov
fmul
xor
ret
icebp
fidivs
in
fdivrp
incb
xchg
fmull
call
repnz
fcomip
ljmp
test
cld
fsubr
fsubp
cli
ret
in
lret
ret
ret
aam
lret
faddl
cli
cld
idiv
aad
aad
loop
in
add
fidivs
icebp
xlat
test
dec
sarb
xlat
std
loope
test
loopne
xchg
ror
in
lret
in
xlat
xor
lock
idiv
ljmp
enter
fdivr
std
enter
faddp
bnd
in
xor
in
test
add
sti
stc
jmp
out
shl
xor
ret
icebp
xor
xor
sti
cmp
stc
cli
shr
test
addl
int3
mov
mov
nop
cld
loope
in
shrb
lret
loopne
clc
and
in
sti
hlt
jmp
xor
hlt
rcl
in
in
fcmovnu
xlat
out
hlt
ss
fld
fninit
cld
out
lret
xchg
mov
jmp
repz
divb
lret
shr
cmp
ffreep
in
in
icebp
fisttpll
sti
out
into
hlt
shr
cmp
sarl
fdiv
leave
repz
fdivrp
popl
cs
xor
out
cld
hlt
fdivp
fcomi
test
rol
mov
fcmovnu
lret
xchg
jmp
in
lret
repnz
in
xlat
cmp
in
cmc
jmp
in
icebp
roll
lea
fsub
rcr
jmp
fnop
test
aad
out
neg
inc
mov
out
xor
cli
icebp
out
hlt
sub
in
cld
repnz
mov
loopne
nop
xchg
mov
repnz
out
cmp
cmp
jmp
in
lock
fcmove
enter
test
lret
test
xor
cmp
sbb
ret
loope
fmul
into
mov
repz
xor
xor
out
lock
fcom
jmp
mov
test
dec
loope
mov
call
jmp
cmp
mov
mov
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
into
hlt
leave
pop
jle
jge
jl
cld
jecxz
aas
lock
out
fsub
mov
leave
fmulp
iret
ror
aam
imul
in
jmp
cmc
fsubp
out
std
repz
and
out
cld
das
aaa
repnz
mov
iret
sar
xor
lret
test
lret
nop
sti
xchg
cli
xchg
out
lret
in
jmp
faddp
ret
out
out
clc
sbb
add
stc
int
out
ficoms
not
das
shr
ss
fidivrs
div
in
addl
adcl
out
idiv
fdiv
rcl
fcom
int
fyl2x
sub
fcomi
mov
loop
in
xchg
int
xor
ss
leave
icebp
cmp
in
aas
shl
in
icebp
sar
out
cld
in
iret
enter
shlb
xor
repz
int
xlat
fld
test
stc
in
in
fists
int3
xor
aaa
std
xlat
ror
shr
sar
mov
sbb
int
orb
aad
hlt
jmp
cmp
call
test
in
in
shl
int
neg
sbb
ret
test
cmp
clc
cmp
add
ror
mul
in
jmp
sti
xchg
ljmp
xor
repnz
cmp
fcomip
cmp
addb
mov
std
loope
adcb
fptan
out
fmulp
std
int
imul
fiaddl
orb
out
xor
aam
enter
not
cld
test
cld
jecxz
aad
repnz
in
enter
loop
out
lret
in
int3
cmc
int
sti
fdivrp
ffree
adc
ljmp
in
int
jmp
call
int
lret
jmp
jecxz
cmc
mov
faddp
test
cmp
shl
in
fcmovbe
icebp
out
aad
repz
sti
iret
loop
sar
fcomip
jmp
mov
out
xor
stc
xor
call
sti
in
fsubrp
xchg
sub
loopne
sti
mov
xchg
jmp
aaa
lret
out
mov
std
fiaddl
leave
hlt
fsubr
std
faddl
ret
shl
xor
lret
xor
in
clc
in
out
cli
fdivr
xchg
fmulp
out
in
xchg
xchg
hlt
clc
cld
ds
in
in
enter
fsub
movb
xor
xor
enter
aad
icebp
lret
ljmp
stc
ret
icebp
jmp
jmp
xor
ljmp
rolb
mov
xchg
mov
shl
out
jmp
fdivr
aas
ss
push
fdiv
stc
mov
int
in
std
leave
ror
addb
in
ds
cmp
neg
fldl
jecxz
loope
std
shr
rcl
aam
rcr
cmp
repnz
out
ret
fcmovnb
repnz
cmc
in
loopne
fildl
into
enter
xor
cmp
iret
dec
cmp
fst
jecxz
rorb
in
xchg
ds
in
in
fcmovbe
lock
std
int3
cmp
aam
sbb
lret
fcmovnu
in
in
test
cs
in
lret
cmp
out
xor
fcom
hlt
ror
fstp
xchg
int
rcl
mov
not
xor
cld
cmc
int3
in
xchg
loop
enter
mov
shl
fdivp
clc
in
fnop
out
int3
leave
std
cmp
out
mov
lret
stc
cmp
enter
cld
loope
xor
sti
cmp
out
out
ror
loope
cmc
mov
sbb
faddl
int3
jecxz
iret
loop
cmc
icebp
in
repnz
in
loope
loop
out
sti
loop
loope
out
xchg
out
not
ret
clc
mov
sub
sar
into
loop
xchg
out
vpcomuw
in
in
fsub
out
in
std
std
ret
not
aas
in
out
faddl
in
in
shl
les
xor
aas
sub
repnz
loopne
jecxz
lret
out
in
icebp
xor
lret
lret
cmp
out
in
cmp
cmp
fucomip
fucomp
fdiv
aam
faddp
sub
mov
jecxz
loopne
out
test
int3
cmp
fst
ds
sar
lea
cld
ror
xchg
test
xlat
lock
in
cmp
incb
test
ljmp
in
rol
aad
shll
fdivl
aas
test
hlt
cld
fsubr
jmp
into
xchg
fidivs
hlt
sti
cli
fnsave
call
or
add
fs
add
adc
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
cmc
adc
sbb
jge
jl
cmc
rcr
ret
sti
loope
fadd
rol
sub
clc
and
loop
loope
lret
icebp
in
jmp
cmp
cmpl
testl
jmp
jmp
rcl
hlt
xlat
ss
loope
loopne
fiadds
jmp
std
ror
fsubr
cmc
in
in
in
jmp
add
adc
ret
aad
std
stc
call
in
aam
enter
lret
out
idiv
rcr
xor
out
aad
jmp
clc
lret
jmp
out
in
sub
out
out
cmp
sub
into
test
aad
shl
mov
out
and
in
rol
loop
clc
ljmp
fadds
aam
xlat
lea
xchg
int3
xor
int
call
rcr
sti
cmp
out
aad
jecxz
enter
in
loope
iret
into
xor
sub
fadd
enter
fld
out
jecxz
repz
movb
lret
sub
xor
stc
in
xor
hlt
xor
cmc
flds
in
mov
mov
hlt
xchg
aad
lret
shll
divb
aas
aam
into
into
aas
fiaddl
out
loop
mov
aad
lret
cmp
repnz
rcr
std
fcmovu
sti
loop
fldl
popl
shlb
jmp
in
aam
cli
aad
out
not
call
fisttpll
into
repz
jmp
out
in
out
aas
aaa
lret
iret
out
mov
out
incl
mov
out
icebp
out
out
shl
cmc
cmp
repnz
cmp
aam
sar
idiv
loop
mov
out
int
cmc
shr
out
aad
lds
cmc
ror
les
imul
fsubp
nop
lret
cmp
xchg
rol
iret
in
cmc
shll
fldl2t
xabort
cmp
in
fincstp
fdivr
fimuls
mov
xchg
xchg
loopne
into
xlat
fcomi
shl
aas
fdivrp
or
ret
sti
jmp
sbb
orl
xor
jmp
ss
ss
ds
xchg
fcmovnu
xlat
test
cld
fcoml
shrl
fsubp
repnz
in
clc
lret
in
dec
jmp
in
lret
std
in
repz
jecxz
shl
clc
lret
shl
ds
fcomi
repz
clc
lea
mov
mov
leave
jecxz
xor
int
int3
shr
cli
rolb
sbb
mov
lock
lret
ror
aad
in
icebp
jmp
ror
cld
roll
test
fildl
ljmp
icebp
int3
xlat
fldln2
std
out
inc
fcmovb
loopne
jmp
rorl
jmp
rcr
shl
lock
out
xlat
cmp
fstp
xchg
out
loop
repz
hlt
hlt
fidivrl
in
ss
xlat
cmp
lock
fisttpl
jmp
std
loope
iret
ret
shr
sti
jmp
fistpll
cmp
std
xchg
mov
loopne
sti
testl
xor
clc
xlat
ror
call
shl
xor
in
icebp
fcmovu
aad
in
loopne
loop
std
xchg
orb
fucomi
enter
push
cmc
sbb
and
loope
fdivr
std
leave
fsubp
shl
das
in
bnd
into
loopne
ret
shl
std
test
test
xlat
mov
clc
ret
jmp
loop
repnz
jmp
rcr
loope
fdivrp
stc
test
test
fabs
xchg
in
test
cmc
aad
loope
out
cmp
not
ljmp
test
lock
lret
lret
lret
hlt
xlat
iret
loope
repz
repz
fucom
int
cmc
sub
aad
loop
lret
lret
cmp
repnz
std
cmp
aad
in
stc
std
iret
cli
lret
movl
aad
cld
ss
cmp
in
clc
fmuls
jecxz
xchg
iret
in
in
loopne
in
xlat
clc
repnz
in
icebp
incb
lock
in
ret
incb
mov
shll
out
xor
fmul
shl
stc
hlt
int
fcmovnb
loop
ret
fchs
cld
loopne
incl
call
lret
leave
shll
out
jmp
adc
add
xlat
aad
lret
fadd
loopne
decl
xor
sub
fadd
loopne
fneni(8087
loop
cmp
cmc
testb
mov
repz
rcl
icebp
ss
lock
shr
hlt
in
fptan
loope
sbb
nop
jecxz
mov
in
xor
fmul
lock
les
hlt
jne
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
sub
and
jge
jl
ss
adc
out
cmp
jmp
int
test
jmp
shr
into
ljmp
in
enter
cli
loope
in
shr
jmp
test
in
ljmp
int3
clc
out
lret
rolb
in
mov
cmp
out
mov
mov
sub
aas
in
clc
xlat
fxch
aas
jmp
roll
faddp
sub
mov
iret
std
repz
test
jmp
aaa
into
std
ret
int3
aas
cmp
addl
test
cmp
ss
loopne
ror
in
jmp
in
mov
rcl
jmp
loop
mov
ret
aaa
iret
iret
neg
jmp
add
out
stc
in
frstpm(287
stc
test
shl
int
aam
xor
repz
cmp
ljmp
cld
shl
out
ffreep
stc
mov
loop
xchg
out
xor
ret
fcomp
shl
cmp
ds
not
xchg
rcr
jecxz
int3
ljmp
cmc
stc
fsubr
lret
rcl
sub
and
stc
test
or
decl
xor
xor
jmp
filds
test
out
lret
cli
mov
clc
loopne
xchg
out
jecxz
xor
ffree
aas
loope
cmp
repz
rcr
jecxz
add
in
in
ljmp
shr
in
cmp
rcr
fdiv
repnz
leave
in
fisttps
nop
cmp
rcl
jmp
out
fstpt
lret
cmp
testb
xchg
iret
int
nop
xor
out
xor
vshufps
lock
loop
xchg
xlat
loopne
int3
ret
lock
cld
call
in
leave
shr
aaa
loope
stc
ret
inc
cmp
cmp
cld
test
clc
jecxz
or
loop
repnz
int3
cmp
cld
loope
aam
cmc
jecxz
aas
mov
jmp
icebp
cli
leave
xchg
xchg
in
jmp
aad
xor
cmp
call
loopne
adc
leave
ret
xlat
in
std
xchg
xchg
mov
xorb
into
aaa
xor
aaa
clc
rcr
repnz
aas
clc
rcr
lock
fst
adc
rcr
xchg
cmc
lock
call
hlt
ljmp
leave
out
in
movb
iret
jmp
xor
int3
iret
xor
aas
hlt
ljmp
cli
xchg
imul
in
sub
fisttpll
ret
in
idivb
cmp
fcomp
rcl
out
cld
ffree
test
lret
in
xchg
xchg
in
in
into
jecxz
cmp
out
in
std
in
std
rolb
clc
lds
jmp
shll
xor
sar
iret
lret
loopne
lock
addb
test
ljmp
enter
cli
roll
jmp
out
test
repz
stc
jmp
cs
sti
in
sti
repz
icebp
xchg
clc
xchg
test
stc
fsub
in
fstl
fidivl
repnz
inc
sti
fpatan
std
xlat
fdiv
rcr
jmp
fucomip
orb
ror
xor
iret
jmp
cli
aad
filds
ret
mov
int
orb
loop
out
jmp
aam
fmul
loope
loope
call
lret
into
ret
orb
shr
repz
ss
xor
int
hlt
rcr
mov
enter
out
int3
addl
les
sti
cmp
iret
sar
ror
int
neg
enter
jmp
fmull
call
int3
hlt
ror
aas
stc
loopne
cli
cmp
stc
cmp
fimull
clc
out
icebp
rcr
in
in
icebp
iret
int
sarb
fdivr
cmp
in
loope
test
jmp
mov
faddp
xor
jecxz
jmp
xor
jmp
ret
ret
stc
ret
ret
stc
fmull
out
loop
lret
in
fxch
out
jmp
cld
cmc
jecxz
in
ret
les
cli
ljmp
out
repz
out
adc
in
fiaddl
jmp
in
mov
shr
fnstcw
repz
fnstsw
icebp
sti
jecxz
mov
jmp
ffreep
icebp
cld
faddl
lock
out
repz
out
loopne
addb
shl
sub
hlt
aam
lret
lret
cmp
jmp
out
mul
mov
cli
loope
jmp
icebp
repnz
cld
aaa
cmp
clc
cmpb
fld
leave
fxtract
jecxz
fisttps
jecxz
in
ds
xor
in
aad
mov
incl
jmp
int
iret
rcl
fsts
fs
adc
movsl
xchg
and
jl
add
cmp
std
roll
leave
jmp
out
xchg
xchg
mov
xlat
ret
xor
cmp
in
lret
xor
sti
fdivp
xlat
leave
enter
int
leave
faddl
rcr
int3
cmp
xlat
out
add
stc
jecxz
add
repnz
out
into
int
in
hlt
xor
cmp
in
ds
sarb
repz
lret
loopne
mov
out
rolb
int
in
std
cmp
fcmove
cmp
shl
rol
ret
fsubrp
fsubr
loopne
shl
lock
rcl
jecxz
shl
fucomi
in
shl
lock
cmp
in
in
and
enter
out
fldl
fxam
sti
int3
aas
call
ret
loop
leave
in
flds
xchg
faddl
ss
ss
fcomi
fsubrp
loopne
in
cmp
fdiv
loope
mov
or
in
iret
loopne
in
out
enter
stc
into
shl
jecxz
in
sti
cld
leave
fisttps
jmp
enter
cmp
ret
sar
clc
inc
xchg
fiadds
leave
icebp
into
out
fnstcw
lds
repnz
into
stc
fdivrp
clc
fxch
fsubr
fmull
jmp
test
into
cmp
std
fcmovu
sti
jmp
ljmp
xor
int
fsubr
jmp
rcl
sti
fmul
stc
cmp
cmp
enter
fsubp
test
clc
cmp
jmp
mov
aaa
fcomi
out
sti
cmp
iret
cmp
cli
test
stc
mov
rolb
cli
call
out
sarb
das
sti
jmp
ss
in
aad
aad
lds
in
cld
or
mul
cmp
xlat
icebp
aas
ljmp
in
repz
iret
std
into
xchg
shl
ret
out
call
test
cmp
out
test
into
ds
call
jmp
xchg
jmp
shll
sarb
cmp
jmp
leave
out
int
xchg
stc
in
out
stc
iret
cmp
cmp
test
rol
mov
sub
into
lock
icebp
xor
leave
out
test
hlt
cmp
cmp
cld
rcr
cli
fildl
ror
shl
lret
repz
in
int3
enter
and
aas
test
ret
cmp
enter
loopne
lea
clc
ljmp
in
idivl
stc
call
rolb
int
xor
clc
loop
int
xlat
test
std
cmp
fdivrp
mov
jmp
xor
sti
enter
aad
shl
out
cmp
neg
enter
fcmovu
cld
into
call
stc
xor
out
out
out
clc
xor
loope
ds
rcl
xchg
leave
std
fld
test
roll
ljmp
clc
idiv
int3
loop
aam
std
in
cld
xlat
int
jmp
adcl
leave
lret
jmp
repz
fmul
not
adc
in
xchg
iret
in
iret
in
out
out
int3
xlat
cmp
int
into
int3
cld
addb
inc
testb
in
aad
xor
lret
out
cli
fsub
fdivr
in
aad
in
cmp
incl
movb
iret
sub
enter
idiv
xor
out
in
ffree
aas
cmp
mov
cld
sti
mov
ljmp
int
ljmp
fmul
out
cmc
shl
aas
lock
jmp
xchg
lret
filds
lret
ss
cmp
jecxz
repz
fdivr
jmp
enter
in
icebp
in
hlt
not
enter
fdivrs
clc
inc
faddl
out
out
lret
loop
jmp
test
clc
loope
int3
cmp
loopne
fdivr
lock
loopne
in
sti
out
in
jmp
in
into
neg
jmp
iret
cmp
in
lret
into
in
cli
ret
jmp
std
in
out
out
in
in
xchg
aas
int3
lock
in
xor
cmp
sti
call
jecxz
aas
fdivrp
and
jmp
mov
xor
div
out
shl
enter
roll
orb
jecxz
xchg
cmc
ss
out
vpsubusw
call
iret
jecxz
repz
lds
shl
cmc
loop
ror
lock
int
repnz
cmp
cli
loopne
shl
shl
repnz
lock
loop
sub
fnstsw
ret
fcmovu
ss
jecxz
stc
cmp
mov
ror
int3
jmp
cmc
cmp
hlt
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
in
icebp
fsub
cli
cmp
aas
out
fdiv
aas
ds
ljmp
imul
jmp
sub
call
out
rolb
loop
out
loopne
clc
enter
test
test
int
aaa
into
leave
sarl
cmp
jecxz
out
loop
test
rcr
idiv
mov
nop
lock
into
sti
jmp
sti
ljmp
sarl
shl
test
enter
in
fadd
lock
cli
cli
cld
shl
hlt
cmpl
movb
faddl
mov
out
fdivs
ljmp
cmp
call
cld
loope
mov
in
xchg
in
xor
repnz
ss
loope
aad
loope
in
jecxz
aad
aad
out
fisttps
in
xor
aaa
ffreep
adc
into
loope
mov
test
out
xchg
in
cld
xchg
in
icebp
rcl
ljmp
loope
ror
neg
icebp
stc
xchg
fidivrl
sub
out
fucom
jecxz
out
lock
in
sti
aas
cmp
push
jecxz
adc
fsubp
mov
out
xchg
xchg
lret
int
into
ftst
sarl
out
flds
sbb
std
incb
loopne
cmc
int3
into
clc
ljmp
jmp
mul
sbb
mov
in
sar
ror
xlat
icebp
fidivrl
int3
cmp
sar
test
sti
leave
neg
in
sub
fimull
aaa
cmp
xor
idiv
iret
clc
cld
aad
clc
hlt
mov
in
xchg
loop
mov
fmul
in
jecxz
xlat
xor
cmp
in
loopne
ret
lock
mov
rol
shlb
cmp
into
test
call
xchg
ds
mov
lret
out
mov
cmc
out
xor
shl
or
roll
jmp
lret
ljmp
call
int3
sti
add
shl
addl
and
out
sti
mov
jmp
xor
cmp
into
loopne
cmc
xlat
fstp
test
aam
fiaddl
std
in
int3
in
repnz
xlat
cld
call
aad
fstpt
or
fmulp
stc
lret
int
ljmp
lret
fmul
jecxz
cmp
addl
test
loope
iret
aad
xor
lret
iret
sti
aad
cmp
cmc
rol
mov
jmp
fiaddl
and
lret
in
loopne
div
sar
aad
sti
fninit
rcl
jecxz
cmc
repnz
stc
mov
jmp
out
ror
int3
aaa
cmp
lret
enter
mul
roll
mov
icebp
push
call
iret
into
lret
cmp
shl
ret
into
add
repnz
out
test
int3
jmp
jecxz
rcl
leave
fidivrs
ljmp
xchg
enter
xchg
mov
loop
ror
clc
out
cli
cmc
loopne
ret
xor
loop
aam
rol
in
mov
xchg
fiadds
in
iret
in
int
cmp
xchg
mov
xlat
rcr
and
enter
jecxz
xor
fucomp
repnz
lret
loopne
fcomi
cmp
in
out
addb
xor
xor
cmp
cmc
call
repz
ftst
xchg
in
loope
std
jecxz
mov
out
ljmp
aam
repz
sarb
ds
ret
loopne
icebp
jecxz
xchg
jmp
fcmovne
call
loopne
out
clc
incl
fcmovu
out
iret
iret
loopne
mov
in
xor
int3
fistpll
fcomp
sub
in
cmc
stc
not
rol
cli
f2xm1
xchg
sub
int3
cmp
shl
int
aas
fld
fucomip
leave
in
xlat
fsubrp
cli
in
xchg
in
addb
into
xor
std
fmul
iret
lock
fmulp
std
jecxz
mov
loopne
mov
ret
cmc
repz
jmp
cmp
ss
fcmovu
sbb
lret
jecxz
fmulp
rorb
lds
out
shl
fdivr
cmp
into
sti
test
xor
cmp
test
stc
mov
out
rolb
enter
jmp
out
icebp
loop
loopne
fcom
cmpb
xchg
incb
rcr
sar
int3
in
ljmp
cli
ds
xchg
cmc
ftst
jmp
rcll
lock
test
fscale
out
jecxz
in
mov
out
fucomp
nop
repnz
xlat
xor
jmp
rcl
aad
aad
rolb
push
adc
jl
add
cmp
std
in
stc
fcomi
test
cmc
aad
test
call
xchg
jmp
clc
cmp
shlb
lret
sbb
fcmovnu
flds
sti
leave
mov
loope
jmp
ret
cmc
into
out
clc
int3
ror
iret
sti
cli
loopne
loope
div
loopne
fcompp
mov
fcmovnu
fcomp
fsubr
xor
call
sarl
aam
repnz
cmc
cmc
shl
aam
int3
fneni(8087
out
cli
in
mov
out
out
out
int
in
ss
cmp
in
imul
leave
hlt
mov
ffreep
mov
in
out
loop
hlt
fstpt
iret
repnz
xor
cmp
hlt
fmul
in
repnz
fcmovnu
out
mov
iret
repz
enter
out
fdiv
out
test
addb
movb
mov
shr
ds
stc
out
cmp
leave
jmp
clc
out
into
cmp
test
fcmove
mov
fsubp
mov
shl
ss
shr
aaa
cmp
idivl
aas
adc
div
cmp
sar
mov
aad
int
into
call
icebp
cmp
hlt
mov
cli
popl
xor
cmp
aad
repnz
fdiv
into
into
out
fcmovbe
sar
cmp
out
in
lret
shrb
in
icebp
leave
imul
fiadds
fadd
loopne
xchg
fcomi
loop
or
ror
icebp
cmp
shl
out
sub
icebp
loope
ret
sbb
in
in
fcmovu
addl
in
aaa
cmp
in
idiv
sti
cmc
loop
out
in
xchg
leave
repnz
fdecstp
cmp
fnstenv
aas
loopne
rcl
test
rcr
sub
mov
dec
iret
cs
clc
sar
iret
sti
call
jecxz
loop
in
hlt
inc
loop
icebp
mov
lock
cmc
in
in
xor
lret
fidivrs
ret
sti
mul
jmp
loopne
fimuls
and
xchg
loope
ss
leave
sti
xlat
out
fsincos
addb
std
enter
int
int
out
iret
stc
dec
lret
sub
lds
fdivr
cld
fadd
lret
mov
cmp
jmp
rcr
ds
vpsrld
fcmovnu
fadds
icebp
out
xchg
ljmp
xlat
out
rcl
fcmove
sti
icebp
shl
loopne
xchg
neg
in
mov
mov
int
lret
out
cld
out
into
in
in
leave
lret
aaa
int
std
cmp
xchg
cmp
div
test
jecxz
incl
xlat
icebp
cmp
xor
cli
out
ffree
rcl
cmc
or
test
out
xchg
iret
cs
leave
leave
xor
in
fxtract
fmul
xlat
aam
in
out
aam
cmp
addl
in
lret
jmp
clc
xor
aam
cmp
clc
lock
testb
out
clc
loope
shl
cmc
sub
clc
cli
cld
xlat
xor
lret
lock
in
ret
xlat
in
mov
leave
fmul
xchg
into
loop
aam
sti
lock
aas
iret
repnz
hlt
loope
shr
aam
mov
and
cmc
into
repz
test
roll
xchg
lret
leave
ss
aas
cld
int3
sti
sar
iret
out
fildl
jmp
xchg
jmp
loope
out
divl
sti
xor
ss
cmp
and
aad
jmp
or
lret
ficoml
test
icebp
hlt
loopne
repnz
icebp
hlt
faddp
test
sti
stc
cmp
fdivrp
out
rcr
xchg
in
repz
rcl
in
hlt
out
loope
repnz
loopne
leave
fimull
enter
lock
aad
in
out
jmp
jecxz
enter
std
in
shll
iret
out
int
out
xor
iret
xlat
test
cmc
rol
fucomi
enter
movb
das
xor
out
xor
xlat
xor
sti
fimull
les
nop
in
cmc
test
int3
iret
xor
out
cli
clc
ret
adc
leave
ljmp
loopne
mov
rol
sub
repz
int
cld
cli
cmc
test
test
mov
in
lret
xchg
lret
in
cmp
stc
ror
cmp
xor
aam
jmp
cmc
orb
xchg
into
xlat
ret
xor
call
jmp
aad
cld
repz
sti
cld
fildl
cld
std
rcr
lea
in
ljmp
rcl
loope
aad
stc
clc
sti
testl
cmc
xor
inc
lods
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
int3
ljmp
cmp
xlat
fdivp
call
int
cld
sti
lret
ljmp
call
ljmp
aas
rorl
out
loope
into
in
out
das
xor
xlat
fdivr
lock
into
lret
lock
ljmp
xchg
out
fxch
aam
sti
cmp
aam
loopne
sti
out
aam
enter
xchg
jecxz
loop
loop
lret
sub
cmp
faddl
ret
test
fldl
rcl
in
xlat
repz
repz
cmp
int
shl
cld
cmp
xchg
mov
sub
in
shlb
shl
cmp
fdiv
test
fdivrl
enter
loopne
ffreep
out
stc
repnz
xor
fcmovne
aam
push
sti
cli
cmp
dec
ret
mov
mov
fcmovnu
addb
hlt
fdiv
fstpt
jmp
int3
aas
rcl
ds
fiadds
lock
icebp
das
aad
out
leave
cmp
lret
out
fdivr
out
xlat
frndint
jmp
xchg
repz
test
sar
fadd
xlat
in
in
jmp
and
jmp
loop
clc
out
jmp
out
xchg
aaa
int
sub
cmp
cmp
cld
fst
shr
fsub
fsub
mov
aam
icebp
xchg
fmul
fsubr
repnz
cli
stc
ss
fidivrs
cmp
aad
sarl
fcomip
fcomi
leave
ffreep
mov
adc
jmp
xlat
stc
out
xlat
cld
cli
idiv
loopne
hlt
cld
mov
xlat
lret
test
lock
ljmp
clc
int
sar
aas
out
adc
cli
lea
loope
cmpb
into
fcmovnb
lock
into
cmp
rolb
fcmovb
out
in
jmp
nop
jmp
ror
repz
fadds
aas
cmp
rol
out
fldln2
in
les
icebp
hlt
cmp
icebp
jmp
ds
cmp
shl
xlat
cmc
addb
fisttpll
xor
fdiv
fstp
int3
shr
aas
icebp
addb
cli
in
out
xchg
in
jmp
cmc
out
int
cmp
push
int3
in
fld
shl
fidivrl
out
nop
rcr
repz
xor
in
xlat
shr
xor
in
jmp
aad
loopne
aad
out
enter
mov
test
mov
xchg
xor
das
lret
sti
aaa
in
repnz
fxtract
repnz
sti
incb
fdivp
jecxz
in
xor
xor
fucomi
aam
std
iret
ds
clc
ret
int
mov
out
loop
les
ljmp
repnz
aam
sbb
fcomi
std
aam
test
in
cld
mov
lret
xor
cmp
loope
repz
loop
aad
lret
mov
flds
lock
sti
lock
out
adc
in
iret
repnz
out
xchg
in
fsubrp
mov
shl
fyl2xp1
test
aas
sti
ss
cmp
cmp
fldl
out
jecxz
in
into
jmp
jmp
aam
fsubr
out
aam
out
test
aad
mov
lret
into
repnz
ss
xor
mul
dec
roll
sti
incl
jmp
in
xor
into
xor
aam
jmp
addb
in
loop
movb
jmp
clc
cmp
clc
ss
cmp
dec
fsub
cmpb
xlat
call
xchg
test
shlb
xor
in
xlat
lock
enter
lret
rclb
call
div
leave
xlat
rcl
sar
xor
imul
xchg
orb
ss
lret
enter
fcomip
sti
xlat
cmp
jmp
fcompp
iret
out
lock
cmc
sub
xor
fistpll
lret
ljmp
test
lret
loop
incl
shlb
cmp
out
hlt
rcr
rol
sar
sub
out
jmp
call
aaa
iret
leave
int
int
xor
icebp
in
cmp
icebp
loopne
hlt
fcmovb
test
orb
aam
stc
sarb
xor
ret
rol
movl
cmc
xor
out
lret
fxam
fnstsw
shr
xlat
shl
ffreep
xlat
test
fucomp
out
fmull
in
out
into
aas
xlat
out
sti
enter
out
in
cmp
sti
stc
xlat
rcr
out
cli
icebp
mov
xlat
push
mov
xor
jmp
ror
ror
rcr
frstor
pop
sub
cmp
sarb
jl
add
repnz
fcmovnb
xlat
sti
rol
in
test
ret
clc
fcmove
mov
nop
fdivrp
adc
mul
xor
out
aad
loopne
test
out
jecxz
jecxz
ffree
in
mov
in
or
aad
ss
lret
cli
xor
in
sti
idiv
fmull
xchg
aad
in
lret
out
repnz
out
aas
ror
dec
lds
jecxz
jmp
lock
out
shr
lock
in
ffreep
fadds
out
call
in
loop
jmp
icebp
xor
aad
ss
hlt
cmc
xor
shl
iret
inc
clc
call
out
fucomip
ljmp
out
in
out
jmp
fbstp
sti
cmp
jecxz
flds
mov
loopne
fcmovbe
aaa
aaa
adc
loop
mul
loop
neg
loope
ret
cld
test
sub
leave
cmp
repnz
fistpll
repz
loop
neg
mov
mov
mov
loop
incl
enter
cli
aad
cmp
fcmove
sti
ljmp
fcmovnbe
ljmp
icebp
enter
shl
repnz
in
ss
test
shl
shl
jecxz
xchg
cli
fdivr
std
out
shl
jmp
xor
stc
cld
aaa
out
shl
clc
mul
in
ret
jmp
ret
jecxz
mov
fdivr
repz
aam
fdivr
sarl
hlt
leave
fcmovne
cmc
neg
test
std
roll
out
shrb
call
shl
test
xchg
xlat
stc
cmpl
mov
icebp
add
sub
loop
cld
lret
hlt
adc
hlt
xchg
vpsrld
xchg
xchg
out
loopne
lock
xor
call
lret
lock
not
xlat
shl
xchg
mov
mov
fstl
fcmovne
in
repnz
cmp
sar
repz
rcr
rol
iret
mov
mov
iret
hlt
xor
out
lret
lret
jmp
in
les
xchg
fxch
sub
cmc
out
test
loope,pt
lret
cmpb
std
std
ds
in
cld
xchg
in
out
lea
enter
out
idiv
cld
cmpb
and
loope
jecxz
loopne
or
mov
cmc
repnz
das
xor
aad
aas
lds
fcom
decb
fmul
cli
rol
in
repnz
aad
jmp
sar
jmp
fucomip
lret
push
repz
add
jmp
loop
iret
push
xor
ljmp
icebp
adc
cmc
shl
cmp
aam
xchg
jmp
into
stc
out
cmc
jmp
sar
fmul
iret
shl
adc
jmp
fcmove
cld
or
cmp
fcom
cmp
loopne
xorb
fdivr
sti
aad
xchg
sub
lock
aaa
cmp
int
ror
add
in
dec
jecxz
loop
lret
vprotw
xor
jmp
out
cmpl
orl
leave
rcll
icebp
in
aad
leave
cmc
fstp
fsubp
repnz
xlat
loope
loop
sti
mov
jmp
cmp
lret
repnz
stc
ffreep
loop
shr
cld
sub
jecxz
shl
hlt
rcl
fmul
idivb
rcr
aas
fsub
aam
not
mov
fisttps
lock
shll
int
aam
out
cs
addl
xchg
fucom
shr
in
fcoml
jecxz
fmul
cmp
loop
sbb
mul
jmp
in
jmp
leave
stc
not
jmp
ror
cli
xor
aam
cmc
rol
xchg
ret
cli
icebp
mov
mov
jecxz
rol
aad
imul
ss
repnz
stc
mov
mov
shlb
in
not
cmc
rcr
fscale
xchg
ret
test
xchg
sarb
icebp
fcomp
int3
lock
and
in
in
stc
neg
mov
xchg
xchg
ret
int3
int3
repz
xor
fyl2x
iret
loope
jmp
leave
cli
jmp
int
les
lock
fdivrp
repnz
iret
cld
cmc
fildl
out
testl
xor
cs
aas
fstp
fcmovbe
loop
ds
fsubp
idiv
mov
int3
sbb
jmp
adc
xchg
fstp
int3
into
xchg
mov
rol
aaa
fadds
ret
push
jmp
lret
ds
lret
rol
loop
pop
in
sti
sarl
jl
add
xor
jmp
aam
faddl
ds
addb
ljmp
lret
cmp
aaa
cmp
xlat
rcr
out
shl
rolb
leave
loopne
lret
lret
and
iret
jmp
cmc
xor
in
fmul
cmp
aam
xor
fld
fildl
fsubr
clc
into
jmp
fucomp
out
sub
jmp
cmp
fcmovnu
neg
fadds
test
out
out
cli
xchg
cmp
fnstcw
cmp
lock
loopne
ds
fdivr
fdivr
jecxz
lock
cld
iret
int3
mov
xor
in
out
aaa
out
shl
sti
fucomp
loopne
rcr
in
jecxz
fisttpll
cmp
call
jmp
shr
shlb
cmp
out
loope
cld
ljmp
out
ficoms
lret
idivl
std
xlat
std
fistpll
loop
cld
xlat
hlt
fildl
in
loopne
out
int3
in
shl
out
xor
mov
fnstenv
jecxz
test
ljmp
xchg
popl
jmp
xor
fcmovnbe
int
lret
in
xor
xchg
ljmp
jmp
enter
cld
repz
sar
sti
loope
lret
mov
xchg
ret
div
out
int3
ljmp
shl
in
ds
jmp
mov
mov
mov
xor
fcmovu
cmp
std
sub
cmc
iret
fiadds
faddl
rclb
repnz
out
lret
sarb
hlt
iret
repz
cld
ljmp
out
fsubp
movl
ljmp
out
rcl
in
sti
mov
mov
leave
out
sar
out
in
lock
repz
sti
cmc
aas
ret
cli
mov
loope
ljmp
neg
ljmp
shl
add
stc
rcr
les
mov
roll
out
lret
xor
xor
cmp
ret
xlat
test
mov
mov
lret
neg
mov
xchg
xor
out
clc
hlt
xor
ljmp
ret
sbb
ljmp
icebp
cmc
xor
das
ljmp
aam
clc
into
loop
out
fmul
fadd
int3
popl
sub
xor
fucomp
fdiv
leave
fnstcw
cmp
cli
loope
xchg
fiadds
xchg
ds
fdivs
hlt
fincstp
repz
out
shl
faddl
repnz
stc
enter
out
in
push
enter
repz
hlt
out
sti
int
shl
out
ret
shl
mov
lret
out
cli
in
adc
jmp
ss
lock
cld
int3
out
ljmp
ret
into
repz
xor
aad
lret
and
cmp
mov
push
ret
leave
xlat
out
repnz
cmp
cmp
sar
filds
les
call
in
cmp
in
div
ds
ret
fprem
out
ret
hlt
fcmovne
out
lock
icebp
out
cs
int
cmp
shr
stc
xlat
ror
stc
idivb
mov
call
test
xor
in
cmp
repz
rcl
ftst
enter
testl
in
jmp
enter
rcl
loop
inc
in
rcr
call
jmp
xchg
sub
shl
cmp
das
ss
lret
cmpb
repnz
fdivp
ret
out
pop
shl
in
das
leave
aad
sti
cmp
aaa
call
into
cmc
in
and
loop
test
sar
xor
ret
in
ss
out
cmp
ds
loope
idiv
loop
loop
lret
or
fcoml
xor
iret
icebp
enter
cmp
fsub
and
cmp
cli
xchg
in
rorl
out
in
clc
int3
cmp
cmp
cli
cli
xor
mov
clc
fsubp
cli
rcr
ffreep
ror
idiv
div
cmp
repnz
cmpb
out
cli
loop
test
fsubr
sub
hlt
call
div
out
imul
fmul
testl
mov
cmc
xchg
xor
lock
lret
cmc
aad
call
sar
ret
mov
fdivr
mov
cld
int3
int
test
lret
std
cmp
rol
repz
sti
loopne
mov
mov
mov
mov
repz
das
repnz
stc
lret
ljmp
fst
cmp
leave
out
decb
shlb
lret
mov
push
jmp
rcl
mov
neg
repnz
cmp
jl
add
sti
repnz
aad
repnz
in
cld
rcl
idivb
std
add
loop
mov
out
std
out
test
jmp
fdiv
out
cmc
loopne
hlt
filds
hlt
push
loope
in
mov
mov
hlt
ret
hlt
aad
std
enter
cmp
ret
aam
mul
cmc
or
std
xchg
fisttpll
lret
lret
cmp
out
in
out
fstp
ror
in
cmc
jmp
mov
mov
in
ret
into
into
iret
ror
lret
fnstcw
sti
xor
lock
test
lea
jmp
dec
test
aam
fincstp
int3
hlt
cli
int3
loop
shl
shl
xlat
adc
and
mov
vpavgb
repz
fcmovnu
clc
in
neg
fucomi
out
fcmovnu
mov
hlt
cli
lret
xlat
cld
test
iret
in
in
std
cmc
cmp
jecxz
fcomp
hlt
push
repnz
int3
ljmp
lret
xlat
int
aaa
shll
sbb
jmp
loop
fsub
ljmp
rcl
repnz
std
test
cmp
repnz
rol
leave
and
iret
fadd
loopne
xor
clc
cmc
std
in
aad
loope
loop
out
jmp
flds
mov
repnz
int3
into
repnz
rcr
rcr
out
rcl
loopne
jecxz
call
out
mov
mov
loopne
xlat
ror
fsubr
cli
rcr
into
fptan
cmp
cli
enter
cli
repz
fcomip
icebp
repz
int3
fcom
xlat
fstp
push
into
addb
mov
repnz
jmp
xor
aam
sti
fidivrl
fcmovnb
iret
icebp
addb
out
fcoms
loop
cmc
aad
sub
std
cli
rcr
ret
enter
in
enter
test
xor
xor
xor
std
sti
aaa
sar
ror
fldl
ret
fxam
xchg
lock
mov
xor
lret
leave
iret
shl
sar
cmp
cmp
rol
rcl
mov
loop
jmp
cli
in
nop
adcb
sti
ss
cmp
aad
rol
out
add
aad
test
xchg
rcl
imull
in
neg
out
sti
repz
into
out
inc
ror
loope
xchg
fdecstp
xor
fadd
rcr
int
std
loopne
cmp
in
aas
mov
shl
lret
ret
in
in
enter
clc
in
mov
ret
test
sti
mov
loopne
rol
xor
sar
int
rcr
cmp
loop
cld
mov
std
int3
cld
loopne
ds
call
xor
ffreep
fsub
enter
testb
out
shr
ror
lret
aad
ljmp
in
lret
fimuls
lea
call
idiv
ds
div
iret
stc
rcl
jmp
mov
in
and
loope
sub
shr
lock
fstp
idivl
fisttps
lret
int3
in
in
cli
leave
fstp
cmp
lret
icebp
addl
xchg
faddl
repz
loop
shrb
clc
out
int
xor
fsubp
cld
adc
sti
in
jmp
icebp
xor
ret
shl
clc
frndint
cmp
xor
rcr
fld
fcmove
lret
fisttpll
out
int3
cmp
cmp
call
iret
xchg
mov
addl
int3
ror
jmp
rcr
cld
inc
test
clc
fdiv
jmp
xor
fcomi
imul
cmp
sti
into
aaa
into
test
rcr
out
add
sti
mov
cmc
in
xor
call
loop
faddp
lock
test
loopne
cli
xchg
ret
icebp
out
in
xchg
test
repz
in
icebp
idiv
loopne
repnz
sti
jmp
loope
aad
leave
std
test
shll
int
lret
in
vpor
int
loopne
sti
fdivr
xlat
std
movl
shr
mov
enter
shl
cmc
sar
stc
sar
loope
cli
loope
aad
jmp
xchg
icebp
lret
ret
repnz
aad
cmp
aam
loopne
into
imul
xlat
test
fabs
clc
jmp
out
ret
xor
cmp
fmul
in
fadd
test
stc
orl
cmp
leave
loope
icebp
test
fmull
cld
test
fucomp
aad
lock
call
jmp
jmp
int
mov
cmp
xchg
pop
aas
leave
jle
jge
jl
in
ss
fdivr
aam
in
ret
icebp
ds
lock
clc
fsubr
cld
mov
call
lock
ret
rcr
leave
aad
fmul
cmc
rcl
cli
out
clc
ret
aad
in
xor
cld
in
int3
aas
xor
jmp
sar
out
ror
ret
fdivp
ds
xlat
cmp
std
fisttpll
stc
fucompp
in
std
cmp
ret
ret
aas
mov
addb
sti
icebp
ljmp
aad
cmp
cmp
lock
ret
rol
fst
jecxz
mov
xchg
into
repz
lock
cmp
aad
repnz
call
loopne
sub
jecxz
clc
icebp
hlt
jmp
loope
incb
in
mov
nop
int
int
in
rol
out
ss
das
lret
rol
not
adc
in
fcmovbe
xor
shl
in
out
cmp
enter
loopne
cli
repz
test
mov
enter
aaa
xor
clc
fcmovbe
out
fucom
iret
fcos
lock
mov
fadd
faddl
fidivs
int3
xor
sti
into
stc
fcomip
rolb
icebp
out
loope
jecxz
lret
lret
jmp
out
fsubrp
icebp
sub
fsincos
cmp
xor
in
addb
jecxz
jmp
int
out
xchg
fdivr
cmp
cmp
int3
xor
jmp
in
xchg
fmull
in
shr
int
ss
rcr
rcr
fucomp
loope
shl
mov
loop
in
fiadds
lock
clc
lret
faddl
iret
flds
fmuls
into
mov
jmp
loop
sti
shr
xor
enter
mov
xchg
jmp
lret
ror
hlt
cld
stc
aam
std
ror
test
jecxz
cli
orb
cld
loopne
fdivp
int
aad
aad
out
repnz
div
and
iret
faddp
mov
loop
mov
out
into
xchg
mov
loopne
in
sub
cmc
shr
in
cmp
cmpb
fdivrp
aas
fucomi
fimull
mov
fdiv
cld
sub
aam
ljmp
cli
fcmovb
cli
aas
in
aad
jmp
loope
aad
ljmp
aaa
cmp
clc
repz
cld
clc
aad
xchg
shl
sub
cmp
ljmp
into
rcr
std
jmp
int
test
fdivr
int3
std
sar
in
shlb
into
lock
mul
orb
cmc
loopne
int3
xor
out
jmp
aas
fdiv
stc
shl
ds
cli
les
xchg
sub
xchg
jmp
icebp
cmc
loop
lret
int
not
aam
std
lock
test
mov
rcr
xlat
xor
vpsubw
sar
jecxz
cld
jecxz
in
cmc
lock
clc
mov
loopne
xlat
sti
cli
fldlg2
div
ds
ret
test
rol
jmp
ljmp
xchg
das
shrl
call
lock
fdiv
rol
cmc
cmp
movb
lret
rcr
in
hlt
ror
enter
push
fsubp
testb
mov
into
in
shl
into
iret
out
repnz
cli
cmp
rol
std
out
fcmovbe
lea
fsub
mov
xor
jecxz
int
ss
cld
cmp
jecxz
lock
cmc
ret
into
icebp
xchg
lret
xchg
xor
hlt
fcom
ss
ljmp
mul
cld
fnstsw
in
jmp
mov
int
repz
shll
loop
push
out
shlb
mul
aam
hlt
fprem1
in
call
xchg
lock
neg
call
xlat
fcomp
ljmp
leave
jmp
ret
mov
rcl
xor
cmp
fcmovnu
cmp
jecxz
cli
aas
aam
rcl
mov
jecxz
int3
jmp
leave
cmc
in
ljmp
sarl
hlt
cmp
cld
fsub
jecxz
testl
hlt
out
enter
cmp
loope
and
rol
call
xchg
nop
xchg
adc
cmc
ror
xor
out
int3
cmpl
iret
fstpt
addb
fimuls
hlt
sti
ret
imul
enter
iret
loopne
incl
out
mov
loop
jmp
xor
iret
filds
cmp
ret
jecxz
loopne
or
cmp
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
push
jge
jl
in
aam
aad
icebp
jmp
roll
cmp
fadd
ljmp
xor
in
ss
hlt
sti
into
leave
cmp
in
xchg
aas
cmp
call
lock
call
hlt
icebp
jmp
int
shl
cli
jmp
aad
loope
leave
mov
ror
lret
jmp
aad
idiv
repnz
fdivp
cld
sti
mov
sar
xlat
xor
xor
shll
out
aam
faddp
cmp
rcl
roll
ljmp
xchg
int
aaa
cmp
fdivs
call
in
test
addb
jmp
int3
not
shrl
lock
stc
int
into
loopne
adc
ds
loope
mov
fsubp
jecxz
in
repnz
hlt
shlb
lret
sti
fcomi
fucomi
push
jecxz
aas
in
test
icebp
sub
in
xchg
mul
xor
call
into
cmp
repz
cmp
jecxz
lret
cld
std
xabort
ljmp
out
aad
enter
sarl
into
clc
std
cld
addb
out
std
in
faddl
xor
cmp
fidivrs
lock
repnz
lret
filds
in
xchg
das
mul
jmp
lret
sti
clc
ljmp
or
in
cmp
xchg
in
enter
loop
cmp
loopne
std
repnz
in
cli
lret
mov
lock
cmc
out
fst
cmc
cmp
sti
into
test
cmp
in
out
loopne
mov
mov
aaa
int
cmc
lret
cld
lret
cmp
addl
call
out
out
in
shl
aam
rcl
in
cmp
lret
icebp
fadds
loopne
loope
in
ret
iret
lret
out
stc
sti
out
mul
aas
fmulp
out
aam
cmp
cmc
out
decb
in
mov
mul
loop
out
leave
ljmp
cmc
add
stc
loope
repnz
mov
aad
shrb
test
out
xlat
in
shl
loope
repnz
popl
in
mov
divl
ss
fincstp
neg
icebp
aam
repz
not
lret
testb
ret
cs
into
rol
cmp
cld
xor
shl
aaa
filds
decl
fsubp
xor
leave
int3
hlt
fnstenv
sti
xlat
xor
cmp
test
in
out
lret
icebp
lret
xor
int
enter
fcomip
cmp
aad
out
shr
ret
jmp
in
das
xor
fcomip
sarl
shr
rcr
sbb
ret
mov
out
out
divb
loope
int
repnz
fincstp
into
int3
shl
lret
fcos
std
xchg
jecxz
loopne
into
out
ror
in
clc
iret
cld
into
sbb
test
jmp
ffreep
xchg
int3
int3
test
cmp
sarl
cmc
fcomp
into
lret
xlat
testl
orb
in
lret
out
into
repz
cld
rcl
fsubr
icebp
loopne
mov
xchg
out
dec
xchg
mov
fcomip
sub
idivl
ljmp
out
into
test
adc
xchg
test
std
sar
xchg
out
rcl
xlat
into
cmc
shlb
shl
shl
test
rcr
ljmp
out
mov
ljmp
in
fstp
cmp
xlat
incl
bnd
in
loop
shl
mov
call
cmp
cmp
stc
sar
cmp
sti
ljmp
aaa
shlb
jmp
loope
iret
cli
repnz
rcr
stc
mov
lock
nop
adc
cs
out
int3
lret
loop
lds
xchg
sti
idiv
lock
in
int
shl
shrb
rcr
rcl
int
cmp
fcmovbe
fsub
loopne
repnz
in
jecxz
ljmp
in
xor
cmp
hlt
in
rcl
out
fsub
stc
orb
orb
cmc
lret
rol
shr
cmp
repz
inc
sti
out
mov
enter
out
hlt
clc
repz
fdivr
fdiv
ljmp
aas
loopne
test
mov
leave
out
loope
xchg
ret
icebp
xor
lret
neg
cmc
int
in
loop,pt
mov
aad
int
iret
into
jmp
loopne
int
les
mul
jmp
cmc
ss
loopne
aad
clc
out
loopne
out
cmp
mov
mov
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
or
cmp
add
shlb
ss
stc
out
not
into
sbb
loope
ret
shr
fsubrp
icebp
repnz
out
xor
in
cmp
idiv
cmpb
loope
xchg
xchg
rclb
in
lock
out
aad
out
xlat
loopne
clc
cmp
out
call
xchg
in
call
ljmp
jmp
out
xlat
cli
mov
fsub
incb
repz
xor
out
xor
ss
lret
cld
loopne
xlat
in
lock
hlt
repz
sti
mov
in
mov
repz
cmp
jmp
shll
enter
clc
sti
orl
jmp
std
cmp
lock
int
fcmovb
loope,pt
aas
jmp
call
repnz
in
call
cmp
aaa
cli
jecxz
fsqrt
sar
ds
in
mov
in
lock
shrb
xlat
leave
xor
aas
into
aas
cld
std
fcmovb
cli
addl
std
in
repz
fcomi
clc
hlt
repz
ds
loopne
lock
in
jmp
repz
lret
xor
out
in
cmp
and
loop,pt
std
aam
incb
in
mov
jmp
jmp
aas
shl
int3
out
out
lock
in
ds
cli
testb
rol
cmp
lret
cmc
idivl
cmp
fdivrl
adc
aam
lret
out
iret
mov
repz
out
hlt
xor
shr
cmp
cmp
test
mov
in
mov
cmp
int3
aad
shl
loope
fdivr
fsub
les
fucomi
sub
xchg
xchg
lret
loop
sub
cmp
int3
fnclex
lock
xchg
call
loop
loopne
mov
loop
int
sub
neg
xor
ljmp
aam
fcmove
xchg
aam
cld
fsub
in
xor
xor
enter
ljmp
ljmp
jmp
aaa
lret
in
out
sar
std
ss
sarb
call
test
in
in
int3
std
repnz
enter
aaa
lret
fmul
inc
ret
sti
in
ret
int
in
xchg
ljmp
fcomp
aas
out
xor
xlat
aas
cmc
ret
out
vfrczss
xchg
lock
lret
in
iret
out
ds
neg
xchg
test
fsubr
leave
clc
iret
loope
lret
or
test
fadd
ss
sbb
test
mov
leave
lret
lret
out
repnz
ljmp
stc
ljmp
aad
fdivp
enter
shl
cs
xor
icebp
fxch
fnstcw
ret
div
loope
loopne
out
in
lret
xchg
int
hlt
shlb
aam
cli
idivl
cmp
fst
hlt
ds
test
fsub
in
lock
fst
repz
cmp
lock
rolb
clc
mov
lret
mov
out
sti
sti
ror
aam
flds
repz
fildl
out
in
jmp
in
aam
int3
cmp
loopne
in
out
sti
std
rcl
loope
into
out
jecxz
in
rol
sub
hlt
jmp
out
out
icebp
call
cmc
rol
not
mov
lea
enter
int3
aaa
ss
adc
out
mov
xor
leave
repz
shlb
fsubr
int
clc
in
sarl
ret
push
loop
clc
sti
lret
int
call
shlb
incl
std
ret
incl
test
in
in
ljmp
rol
idivb
cmp
int3
lret
stc
test
xchg
test
in
lret
jecxz
addb
shrl
lret
clc
lret
cmp
std
into
fcomi
sti
hlt
fucom
xchg
enter
jmp
test
roll
ss
std
jmp
cld
sti
cld
cmp
std
jmp
mov
jecxz
in
nop
xchg
iret
cmp
enter
fucomi
ds
aad
lds
out
mov
mov
hlt
aam
xor
sti
xor
lret
jmp
not
into
cli
xor
out
and
out
sub
shlb
fdivrl
loopne
stc
test
ret
in
add
lret
repz
icebp
out
xor
in
test
cmc
fcomi
stc
xchg
call
leave
cld
jmp
mov
mov
xor
lea
cmp
jne
jmp
int
ds
int
lock
sarb
jle
jge
jl
roll
aad
shll
cmp
fabs
cmc
stc
ds
addb
aam
fidivrl
divb
cmc
rcr
fpatan
stc
rcr
rol
loop
loop
loop
mov
xchg
rcl
xor
in
shl
clc
xor
int
cli
aam
roll
cli
lret
loopne
addl
jecxz
repnz
div
xlat
xchg
rcr
jmp
call
fcomp
loopne
jmp
ret
jecxz
ljmp
out
sar
icebp
aas
or
call
loop
in
rorb
sti
ret
aam
fbstp
loope
cmc
sarb
sti
rcr
cld
call
in
ljmp
cmc
loop
lret
out
ffree
cmp
in
and
mov
in
enter
fmul
xlat
jmp
out
shr
idiv
icebp
test
out
out
out
mov
into
jmp
std
div
ds
std
add
loope
cli
rcl
neg
fcmovne
lret
in
ret
repz
repnz
fcmovnu
in
faddl
xchg
leave
loopne
lret
into
orl
in
lds
adc
repz
cld
loop
cli
leave
in
lret
icebp
xchg
shl
call
std
f2xm1
repz
aam
ret
test
fstpt
mov
ljmp
ds
aad
shl
cmc
sarl
jmp
out
ret
fistpll
testb
shl
cld
in
loope
xor
call
aad
cmp
in
test
repz
test
hlt
in
fstl
lret
out
rol
in
stc
cmc
fucomi
fldl
jmp
clc
mov
mov
and
int
xor
adc
icebp
into
fucom
sarb
fstp
xchg
idiv
cmp
filds
xlat
out
out
idivl
xor
ds
in
lock
in
clc
loop
div
mov
mov
test
xchg
fcomip
xor
hlt
rcl
lret
cmp
cmp
int3
fst
cmp
repnz
ret
out
call
out
clc
cmp
icebp
in
int3
not
int3
cmp
jecxz
add
lret
faddl
mov
hlt
xor
cmp
call
fistpll
out
xlat
mov
mov
faddl
sar
not
xor
imul
shl
into
icebp
hlt
div
rcr
mov
call
cld
int
out
fcmovne
iret
jmp
rcl
xlat
hlt
test
test
ljmp
fdivp
in
sti
xor
std
std
cld
int
fucom
stc
xlat
mov
lret
mov
aad
out
cmp
aad
cs
iret
hlt
cmp
cli
stc
out
loopne
loopne
shl
xlat
enter
cli
stc
cmp
fxch
fdivr
shl
fucompp
xlat
std
lret
ljmp
fdivp
xchg
xor
jecxz
rcl
repz
in
and
cli
hlt
jmp
loop
fisttpl
ljmp
in
div
in
iret
fcmovne
rcr
div
repz
xchg
loop
std
in
out
addl
in
call
ror
in
jecxz
iret
fndisi(8087
stc
loopne
ret
mov
loop
lock
aad
repnz
call
repz
cld
rol
jmp
leave
sbb
loopne
in
lock
xor
icebp
cmp
out
in
rcr
cmp
loope
test
xchg
lret
xchg
xor
aam
clc
mov
xor
iret
ds
xchg
rol
out
xchg
cmp
fsub
in
out
fcom
ss
sarb
rol
shl
jecxz
in
loope
sti
lock
out
xchg
sub
fld
clc
cmp
fsubr
rolb
clc
lret
xchg
fimull
mul
in
lret
lret
sti
cmp
xchg
clc
loop
mov
clc
xchg
icebp
mul
fucompp
cmp
sarl
xlat
ror
xchg
in
call
out
ss
in
cmc
repnz
sti
sti
xorb
rol
shl
call
and
or
sti
ss
out
in
repnz
cmp
out
cld
mov
out
xor
shr
cmp
cmc
aaa
ljmp
cmp
fdivrp
faddp
aam
jmp
lock
ror
lock
xor
icebp
shl
out
or
hlt
rcl
rcr
fstp
int3
cli
cmp
out
iret
adc
iret
jmp
xor
fdivp
ffreep
cmc
lds
in
mov
mov
pop
xor
jmp
int
enter
int
lds
xchg
fnstsw
jge
jl
and
icebp
iret
in
hlt
icebp
cld
cmp
flds
hlt
loopne
xchg
xchg
ret
divb
enter
cli
int
aas
repz
sti
sub
in
mov
jmp
call
leave
xor
in
lret
clc
cmp
sub
xchg
fld1
test
std
clc
xchg
fdivrp
aad
in
loope
sarb
out
enter
lret
shr
jecxz
into
cld
mov
ljmp
in
xor
clc
into
neg
in
shl
jecxz
in
mov
out
fcmovne
lea
fidivl
iret
ss
sti
int3
fcompp
mov
faddp
xchg
fldl
jecxz
into
rcl
xor
xlat
sti
loope
loope
loope
ret
vpsubw
or
loope
fmulp
out
rol
cmc
test
in
sti
leave
clc
fcmovb
loope
cli
idiv
fcmovu
cli
xbegin
mov
out
mul
int3
jmp
out
sti
cmp
std
call
repnz
mov
enter
out
addb
repz
ds
sarb
cmp
lret
filds
shl
xor
ljmp
cli
cmp
in
test
jecxz
in
stc
in
addl
iret
fidivl
cmp
repnz
clc
xlat
fcmovb
fadd
in
in
in
in
out
in
xchg
out
out
ret
shl
cli
shl
cmp
int3
std
int3
ret
jecxz
into
dec
testb
ljmp
jmp
loop
xor
enter
icebp
sti
and
in
into
or
out
fsubrp
lret
aaa
sarb
lret
roll
int
out
test
out
cli
mov
aas
jecxz
jecxz
repnz
sti
cli
jmp
lret
repz
lock
ljmp
mov
sti
lret
in
in
sti
fdivrp
fidivrl
loopne
roll
xlat
iret
neg
test
enter
out
int
rcl
enter
cmp
loopne
loopne
out
jmp
loopne
repz
in
lock
cmp
ss
fcmovnb
sar
aam
xchg
jecxz
fisttpll
and
into
aaa
out
in
call
cmc
loopne
cmp
sub
jmp
mov
shr
aaa
xor
cmp
in
hlt
fptan
ret
fcmovbe
mov
div
out
in
xchg
addl
lret
cmp
ret
cmp
ds
idiv
mul
cmp
nop
xor
sti
testb
test
fildl
mov
out
imul
leave
call
std
out
fsubp
shl
test
test
sti
ret
loop
cld
loop
loop
cmc
loope
icebp
sub
ljmp
fnstsw
jecxz
loop
test
mov
xchg
lret
rorb
ret
shr
repz
in
clc
ret
int
test
out
fxam
test
xlat
jecxz
xchg
into
xchg
cmp
xlat
hlt
xor
fcmovnbe
sub
aam
aas
add
testl
lret
repz
stc
clc
aam
ljmp
aad
sbb
xor
in
rcr
xor
clc
ret
lret
aam
push
sti
shl
ds
div
fisttpl
mov
iret
xchg
in
aam
lret
cmp
out
cli
stc
shr
ljmp
repnz
out
mov
iret
in
cmc
icebp
hlt
cmp
fucomi
shl
clc
sarb
aam
out
std
in
into
out
xchg
call
int3
out
xlat
enter
repnz
sar
mov
out
clc
cli
sub
test
leave
shr
xor
xor
xor
fidivrl
icebp
addl
stc
fsub
icebp
xchg
xchg
loopne
icebp
out
xor
stc
repz
jecxz
ds
out
jmp
test
fdivr
mov
fucomi
mov
ror
out
aaa
out
das
int3
xor
out
fcmovnbe
incl
aam
mov
call
loop
idivl
iret
repnz
shr
aam
xor
rcr
fcmovbe
in
ret
ljmp
fsubp
in
into
cmc
sti
jmp
cld
and
stc
out
fmuls
out
jecxz
xchg
aad
xor
xor
in
call
int3
in
sbb
int3
in
jmp
int
int
xor
jmp
fdivrp
hlt
in
lds
ret
jmp
fsub
call
icebp
repz
enter
ljmp
ret
sbb
in
lret
in
stc
mov
pop
jmp
ds
ror
aad
fistl
loop
shrl
outsl
test
loopne
jl
add
xchg
into
out
shl
xor
iret
cld
repnz
icebp
hlt
fildl
jmp
test
faddp
jmp
xlat
loop
out
repnz
jmp
addb
test
test
mov
shr
repnz
lret
ds
stc
in
fstpt
cmp
lock
mov
loopne
std
int3
into
in
ret
enter
out
ror
ret
ds
loope
jecxz
std
sub
mov
jmp
cs
jecxz
das
out
aam
idiv
ds
icebp
incl
lret
orl
cmc
out
in
ss
xor
fsubr
cli
std
loope
aam
ljmp
shl
sub
xor
cmc
repnz
int
fnsave
fdivrp
clc
iret
test
repz
fmull
out
jmp
out
xor
idiv
repz
cli
fcomi
stc
stc
test
lea
loopne
into
xor
ret
call
icebp
into
cmp
cmp
stc
mov
std
loope
in
sar
xor
div
aaa
clc
aam
repnz
fnstcw
mov
fisttpll
iret
fstl
shlb
in
fbstp
out
in
test
cli
cld
fcompp
clc
fmul
adcl
xlat
enter
iret
loope
xor
rcr
in
into
in
jmp
fdivp
in
cmc
fxch
ss
ffree
sar
cmp
in
orb
push
and
jmp
cmc
xbegin
clc
stc
rorb
mov
into
lock
in
lret
xlat
ror
jmp
sbb
addl
xchg
out
out
int
into
loop
lret
out
cli
hlt
cli
int
ret
shl
std
fmull
iret
loopne
lock
in
enter
fnstenv
aad
test
loop
mov
enter
fdivr
out
xchg
out
int
iret
xor
hlt
stc
ljmp
xchg
ds
out
mov
int
imul
jmp
ror
int
repnz
out
call
mov
mov
xor
in
cmp
fscale
enter
aas
xchg
fdiv
mov
jmp
popl
nop
shl
enter
aad
cld
lret
add
fcmovb
vpmacssdd
test
int3
shll
out
into
fucomip
neg
into
xor
loop
addb
mov
int3
ljmp
icebp
aaa
in
shl
aad
sarl
roll
mov
fucomp
cmp
shl
inc
stc
xlat
ss
leave
rcr
out
cmp
loope
fcmovnu
lret
jmp
xchg
cmc
in
lock
in
int3
lret
cmp
cmp
loop
into
ds
jmp
jmp
cli
out
mov
fcomip
mov
in
aam
fcmovne
sar
aad
repz
loopne
cmp
jmp
fdivr
sti
lock
in
loope
stc
enter
clc
out
lret
repz
cld
jecxz
mov
aas
in
lret
jecxz
mov
lret
cs
stc
int3
stc
in
enter
cld
icebp
rolb
loopne
sti
in
loop
shrl
out
int3
cmp
lret
sar
fcomp
out
aas
cmpb
test
fmul
clc
iret
faddl
out
shl
vpsubd
hlt
ffree
fdivrp
bnd
clc
adc
repnz
mov
out
test
xor
lret
int3
in
in
in
int
call
cmc
testl
jecxz
mov
call
ret
leave
out
out
int3
std
lock
icebp
hlt
out
loope
and
repnz
test
repz
xchg
xchg
xor
fnop
icebp
in
xlat
out
cmp
aam
ffreep
out
mov
sub
xchg
orb
lret
int3
stc
fsubr
ss
hlt
add
roll
cmp
aam
jmp
xchg
call
aam
aad
std
lock
loopne
int
aad
aas
fcmove
sbb
stc
mov
repnz
xor
out
rol
cmc
clc
out
iret
ljmp
clc
xchg
fimuls
mov
stc
repnz
hlt
lret
clc
aam
enter
icebp
xlat
addb
fstl
lock
cmc
idivl
aad
cmp
jmp
loopne
testb
aad
in
faddl
call
lret
icebp
ljmp
stc
std
lds
sti
out
int3
rolb
int3
ds
cs
lret
cld
xor
cmp
aad
ret
ret
clc
out
call
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
fwait
das
push
mov
pop
add
xchg
sbb
jecxz
xor
out
fdivr
fdivrs
cmp
add
shr
jmp
testl
shl
test
lret
out
jmp
jecxz
ret
vpsubw
orl
loopne
call
dec
shl
cmp
sbb
xchg
ffree
in
ljmp
repnz
cmp
sti
sar
hlt
fcmove
rcl
lds
aas
loope
test
xchg
out
xchg
lret
call
fld
hlt
enter
jmp
ss
out
std
ret
mov
std
xchg
sub
fdivrl
int
rol
fcmovnu
repnz
in
loope
enter
out
test
ret
cmp
lock
aam
shl
mul
shr
leave
stc
ret
test
mov
repz
fnsetpm(287
xor
aad
loop
loope
mov
dec
testl
xor
cmp
cmp
xlat
int3
loopne
not
test
in
jmp
jmp
xchg
cld
sub
sub
into
in
imul
call
sarl
shl
iret
ffreep
mov
fsub
mov
in
rcl
lret
iret
jmp
ret
leave
enter
repnz
ret
test
out
cli
out
xchg
repz
fsubrs
rcr
lock
out
cmp
loope
cmc
addl
cmc
test
shr
out
leave
stc
cmp
repnz
lock
aad
in
std
out
out
out
ljmp
iret
lret
in
hlt
in
cmp
repz
sar
aas
clc
cli
xor
jmp
hlt
inc
into
repnz
stc
leave
lock
stc
loopne
in
shl
fld
xchg
fcompp
in
mov
mov
loopne,pt
fcmovne
lret
ljmp
aas
rol
out
ffree
test
test
into
popl
in
ror
int
cmc
cmp
enter
test
xor
sti
fxch
fimuls
vpsllq
lret
xor
xor
fcom
lock
jmp
ror
iret
into
shll
fxch
jmp
cmp
hlt
imul
ret
lock
ret
sti
loop
addb
xchg
ror
out
out
xor
xor
ffree
enter
sar
out
out
stc
std
test
in
int
enter
out
aaa
aad
in
cmp
cmp
idiv
clc
cmp
loopne
out
rorl
lret
int3
mov
mul
rcr
stc
xor
pushl
f2xm1
cli
test
rcl
ljmp
mov
enter
xor
xor
in
ljmp
sti
add
fiadds
fmul
fucomi
out
fdiv
out
sub
loope
iret
cmp
out
enter
inc
rcl
cmp
repnz
testl
in
repnz
div
call
std
sar
sar
leave
out
fucom
shr
repnz
icebp
lret
out
fcmovbe
out
stc
cmp
lret
jmp
mov
in
shr
fld
hlt
std
jmp
cmpl
in
cmp
fiadds
lock
into
loopne
vaddsubps
out
leave
sti
cld
cli
imul
mul
ds
aas
cld
fucomip
out
iret
orl
xor
fstpt
ds
shl
fsubp
fiaddl
mov
clc
fadds
out
cld
aad
jmp
sar
ret
xor
fxtract
les
loope
sub
call
ss
ljmp
aad
aas
ffreep
test
nop
xor
out
cs
call
out
aas
repz
jmp
stc
decb
xor
cs
stc
not
ffreep
cmc
jmp
jecxz
mov
jmp
aaa
ss
lock
in
movb
fcomip
jmp
jmp
ret
jmp
jmp
fdivr
xlat
loope
ret
rcr
not
call
lret
xchg
and
xor
shr
enter
repnz
xor
ljmp
rol
test
rcl
test
icebp
repnz
fst
call
ljmp
aad
filds
int
mov
xchg
sub
ror
out
shl
filds
repnz
fstp
incl
in
in
fucompp
not
mul
sti
std
ljmp
cld
cmc
call
xor
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
outsb
sub
jle
pop
add
loope
mov
das
mov
clc
cmp
ret
rcl
out
ffree
sti
mov
int
fsin
in
in
cmc
stc
icebp
cs
xor
out
xor
in
idivb
fdivp
fxch
fsubr
leave
std
repz
jmp
lock
jmp
bnd
shr
xchg
icebp
fidivrs
jmp
test
leave
xchg
mov
xor
aaa
xlat
lock
cli
out
hlt
out
clc
into
cld
test
fmull
mov
sub
shr
int
std
leave
cld
cld
into
call
faddl
sti
ljmp
or
xlat
faddp
xor
cli
xlat
cmp
iret
std
fiaddl
jecxz
fchs
lock
xlat
cmp
in
stc
ds
cmc
fiadds
adc
lret
leave
mov
lret
mov
cmc
lret
enter
int
neg
shl
lock
xchg
shl
xchg
cld
lock
int3
out
lock
sarb
jmp
call
cld
mov
test
or
int3
fadd
lret
loop
int3
in
xor
call
cmp
in
xchg
aam
jecxz
mov
cmc
loopne
iret
xor
fcmovbe
enter
jecxz
repz
cmp
aad
loop
lret
fndisi(8087
out
xchg
xorb
loope
fstpt
das
cs
loope
cmp
loopne
fmull
xchg
in
imul
int
xlat
fcmovnbe
cmp
rcr
sti
cmp
lret
lock
out
cmp
test
loope
out
in
out
rcr
cmp
cmp
inc
xchg
orb
cld
in
xchg
adc
in
into
rcr
div
ljmp
idiv
cmc
cli
or
xchg
xchg
jecxz
xor
test
ds
test
lret
lret
out
nop
loopne
leave
lret
in
sar
clc
fmul
sar
rcr
rol
jecxz
lret
loopne
cld
mov
lret
ss
in
int3
cmp
repnz
cmp
sbb
fiaddl
mov
cmc
out
int3
repz
repnz
cmp
cmp
test
out
shr
mov
aaa
xlat
cmc
out
cmp
out
lret
ljmp
hlt
xchg
incl
aam
shlb
cmc
leave
cli
fmulp
and
xchg
jmp
clc
out
in
xchg
out
xor
leave
in
cmp
rcr
xlat
sti
clc
sbb
orb
xchg
xchg
ss
enter
std
call
loop
int3
ret
mov
hlt
sti
les
loopne
iret
int
int3
jmp
xor
repz
sti
shl
adc
push
mov
sbb
in
faddl
cmp
fcmovnb
imul
fcmovu
cmp
fcmovne
sarl
rol
std
clc
call
int3
cld
loopne
lret
iret
int3
xor
xlat
call
in
rcr
idiv
in
testb
mov
xor
rol
lret
lret
repnz
ret
out
out
std
rclb
das
hlt
cmc
rol
call
out
std
shl
stc
in
jecxz
jmp
icebp
call
rcl
leave
les
out
fsubp
cmp
aas
repnz
loopne
ret
inc
cli
xchg
in
orl
int3
repz
iret
jmp
xlat
out
iret
neg
jmp
out
loop
xchg
leave
jecxz
or
ror
xlat
std
fucomp
fdivr
sbb
aad
shl
ret
jecxz
mov
lret
mov
shr
clc
repz
xor
fdivrp
mov
or
sub
sub
repnz
stc
int
fdivp
fiaddl
test
out
ljmp
loop
fldl2e
out
fucomp
in
jmp
cmp
aas
clc
hlt
aad
xchg
lret
fucomi
out
int3
ffreep
jmp
cs
fcmovbe
iret
into
cld
ret
hlt
fcmovnb
in
iret
jmp
clc
mov
xchg
repnz
repnz
xor
stc
hlt
mul
out
ret
leave
repnz
xchg
mov
adc
imul
cmp
clc
hlt
aam
aaa
in
out
std
adc
stc
xlat
fcmovu
call
decb
loopne
enter
out
cli
out
int
fsubrp
sti
roll
fdivr
iret
fadds
ret
clc
ljmp
not
cmp
not
test
roll
daa
test
inc
add
add
jmp
lret
ffree
fst
in
notl
fsts
out
jle
pop
add
neg
loope
in
jecxz
mov
ret
rol
xor
jmp
ss
fnstcw
rcl
fadd
jecxz
jecxz
int
clc
movb
jmp
in
ljmp
xlat
iret
out
not
clc
int
in
out
test
jmp
enter
out
imul
cmp
adc
fdivr
orb
cli
iret
mov
test
mov
aaa
vpsubusb
rcr
aam
clc
ljmp
enter
lret
fcmovnu
out
shr
int3
hlt
sarl
les
fucomi
fcmovu
clc
cmp
stc
jecxz
xchg
sub
lret
aam
sar
out
xchg
jecxz
out
rol
xor
out
out
call
test
loop
cli
aam
and
clc
stc
into
mov
jecxz
aaa
sub
leave
int3
cli
repnz
rcl
repnz
fstp
sti
fmuls
out
into
jecxz
loopne
jmp
sarl
fucompp
and
enter
mov
shl
jmp
int
leave
ret
cmp
jmp
std
rcr
cld
test
cmp
test
fadds
repnz
out
enter
and
sar
cmp
ror
cmp
mov
divl
call
call
loop
mov
into
in
hlt
out
call
xlat
or
sar
div
out
sti
in
loope
shl
mov
int3
fdiv
rol
lock
shr
adc
ret
ret
mul
in
addb
ss
cmp
enter
cmp
rcr
jecxz
hlt
aas
repnz
fstp
xchg
out
xchg
mov
ljmp
into
ret
out
rolb
sti
fcmovu
lock
int3
fsubp
loop
in
jmp
rcl
xchg
test
call
incl
shll
int3
into
out
lock
ss
fsub
test
int3
in
ret
fldl2t
ret
loope
orb
iret
cmp
divl
clc
hlt
lret
icebp
shr
cmp
shl
out
in
fildl
lret
vpxor
lock
sarl
orb
out
fsub
cld
mov
xchg
shl
ret
jmp
std
adc
xchg
mov
fmul
aam
stc
lret
in
out
std
ljmp
out
into
stc
icebp
rcr
idivl
jecxz
jmp
mov
fmul
shr
int3
xchg
int3
rcl
jecxz
int
int
rcr
idivb
cld
icebp
out
cmp
xchg
out
or
repz
in
enter
fxch
repnz
int3
aam
fdiv
shl
cld
sti
orb
cli
lret
repz
cs
clc
aam
out
fndisi(8087
jmp
sti
rcl
cmc
shl
adc
out
fcmovnbe
std
enter
call
out
jmp
loope
xlat
lds
fadds
mov
call
xor
cli
ror
icebp
cmp
fabs
xchg
movb
fisttpll
out
ljmp
repz
orb
xchg
into
ficoms
xor
iret
in
enter
cmp
fiaddl
loop,pt
ljmp
iret
mov
hlt
in
xlat
out
neg
jmp
fnstsw
sti
aaa
lock
jecxz
repnz
into
out
std
mov
enter
std
call
cli
flds
mul
ret
mov
mov
adcb
das
in
in
int3
aas
fucomip
fdivrp
shl
ret
into
xchg
stc
shr
test
call
xchg
leave
jmp
int
ror
icebp
repnz
in
leave
jmp
int3
sbb
mov
leave
out
clc
hlt
les
sar
clc
fdiv
cmp
fsubp
xchg
hlt
fiaddl
cld
loopne
in
xchg
int
loop
lock
shr
shl
cmp
ret
fcos
cmc
jmp
fimuls
ds
in
div
rcr
cmp
out
roll
rcr
test
in
stc
lret
enter
xchg
in
aad
fmul
cmc
icebp
loopne
shl
shl
ret
shl
out
out
cmp
in
shlb
idiv
fdivrs
aaa
aas
xor
or
out
rcr
out
cld
rcr
mov
mov
cli
into
fcomip
repz
lds
out
and
xlat
addb
popl
nop
sub
in
ret
cmp
fcomi
iret
cld
out
in
inc
loopne
test
sub
sbb
cmc
add
add
ret
int3
ror
aad
lahf
mov
outsb
js
cmc
jle
pop
add
out
enter
jmp
mov
out
call
ror
out
sarl
repz
out
sar
out
fiadds
mov
mov
not
clc
out
aad
cmp
out
ljmp
addl
in
jmp
in
clc
icebp
cmc
fcomi
fadd
iret
stc
sti
fld
xchg
iret
in
cld
shl
loop
vcvtsd2si
cli
repnz
sti
fdivp
loope
fildl
loope
and
xor
out
leave
into
sar
std
int3
test
cmp
neg
and
in
xchg
sub
sub
sarb
out
in
lret
int3
addb
cmp
mov
mov
in
xor
repz
in
cs
loope
cmp
decl
xchg
xchg
mov
into
aaa
cs
imul
out
ljmp
div
fucomp
mov
jecxz
call
ljmp
fcmovne
out
std
cmp
jecxz
fst
mov
fcmovu
addl
enter
icebp
cmp
hlt
fiaddl
loop
flds
cli
loope
out
mov
imul
test
sub
xor
test
rol
lret
xor
cmp
fld
fnstcw
shr
into
in
enter
loope
mov
loop
xchg
les
stc
xor
cmp
lret
stc
xor
shr
call
out
in
mov
lds
int3
into
fldln2
sar
and
sar
xchg
fiaddl
fimull
icebp
aam
in
hlt
ror
cmp
idiv
repz
rcl
in
out
vpmullw
roll
rcl
rol
out
imul
fmul
out
stc
fst
ret
iret
mov
cld
test
in
shl
lock
shrl
shlb
sti
shll
xlat
cmp
into
fcmovbe
rolb
jecxz
nop
enter
in
rcl
aaa
aam
jmp
in
test
rcl
test
aam
out
stc
rcr
ffree
mov
aas
loop
hlt
ss
cmp
hlt
cmp
fcmovnbe
add
sub
aam
iret
out
int
and
int3
sarb
in
out
sar
cli
shr
stc
roll
orb
iret
in
xor
xor
ret
fcom
lret
fadd
ds
shl
shl
mov
out
int
out
jmp
hlt
jmp
iret
sti
loope,pt
stc
ret
rcr
xchg
fmul
jmp
in
icebp
jmp
loope
int
in
clc
fcmovnbe
lock
out
lock
stc
clc
loope
loope
clc
cld
ljmp
mov
repnz
out
iret
ss
ss
cmp
clc
repz
int
loope
jecxz
xlat
fsubrp
shr
clc
lock
out
in
ret
sti
shl
call
jecxz
jecxz
lret
incb
shl
repz
xlat
repnz
shl
aad
fdiv
loope
jecxz
xchg
xchg
xchg
xchg
lock
xor
in
dec
int3
fdivrs
roll
jmp
loop
in
loop
and
repnz
jecxz
lret
cmc
mov
aam
jmp
repz
ror
sar
aad
mov
lret
jmp
xor
stc
ret
push
enter
in
in
cli
neg
test
loope
fdivr
sti
repnz
aas
das
fcom
loop
clc
ljmp
aas
fcmovbe
addl
out
shr
nop
out
shl
int
icebp
xor
call
jecxz
cmc
ds
sti
div
test
mov
repnz
cmp
hlt
sti
cmp
xlat
cmp
sarl
aam
cli
aas
lret
sti
ljmp
icebp
shr
out
aad
std
aaa
ss
cmp
ret
jmp
jecxz
fiadds
repz
in
hlt
fcmovne
neg
icebp
aad
iret
ret
loop
roll
mov
jmp
idiv
lret
std
cmp
fcomp
ret
jmp
sar
sar
aam
sti
fcmovu
icebp
roll
xor
jmp
xor
cld
fdivrs
xor
cmp
faddl
or
cli
dec
call
repz
in
out
in
icebp
cmpb
sarl
in
xchg
mov
rorb
icebp
loop
cmp
sti
rcl
ljmp
out
loop
rcr
test
stc
mov
int
mov
jmp
cmp
into
cmc
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
cmp
clc
jle
pop
add
les
ftst
or
fsubrl
loop,pt
enter
stc
fcomp
sti
out
shl
rorb
xchg
fadds
das
aad
enter
int
sti
sar
lret
shl
xlat
jmp
out
in
or
in
jmp
nop
loopne
icebp
sarl
shl
hlt
call
aad
shr
cmc
cli
in
cld
faddp
xchg
shr
ds
jmp
ret
xor
in
repz
fcomip
sti
loopne
fsub
fimuls
test
into
lret
sti
xor
div
icebp
out
ss
idivl
cld
jmp
fisttpl
xchg
out
mov
jmp
aaa
cmp
cmp
fdivr
aad
cmp
sub
stc
fsubrp
lret
lock
ljmp
lret
int3
lock
cmp
test
clc
mov
cmp
out
ret
repz
sti
cmp
rolb
enter
fisttpl
out
into
in
shlb
out
cmp
cmp
lock
sti
cmp
cmc
loop
xlat
mov
fcmovu
in
shll
hlt
out
cmc
sar
fcmovu
out
aad
test
iret
rcr
rcr
ljmp
rcll
cmc
call
sarb
lock
out
ret
in
in
into
test
repnz
cmp
in
ds
lret
fstp
fstp
add
les
ljmp
fnstenv
lret
fsin
xchg
jecxz
aad
aam
enter
jmp
in
repz
icebp
xor
xor
in
repz
loope
loop
in
aam
ret
loope
fnsetpm(287
jmp
out
ss
lret
lret
hlt
iret
cmp
lock
loopne
into
roll
cmc
mul
flds
lock
out
shl
repz
cmp
fucomi
fdiv
out
loope
vshufps
in
out
jmp
and
lret
sub
in
clc
into
ljmp
loopne
mov
sbb
out
ror
test
loopne
in
jmp
sub
in
std
fdivp
icebp
sar
shl
lock
xchg
xchg
xchg
in
xor
jmp
int
lret
ret
adc
mov
mov
mov
sub
in
jecxz
in
in
enter
jmp
aas
xchg
shl
cmp
sbb
test
sub
aam
sar
hlt
ds
shl
std
lret
mov
xchg
ljmp
std
repz
cmp
in
sar
iret
xchg
aad
ret
jecxz
jmp
shl
int
xor
idiv
jmp
icebp
aas
neg
jecxz
test
int
loop
jecxz
fsubp
div
repz
xor
fsubr
lret
sti
roll
fstp
fistpll
orl
xchg
ret
xor
out
iret
not
cmp
cmp
aam
adc
xchg
int3
in
int3
in
icebp
out
aam
repnz
idivb
xor
in
lock
rcr
out
fdivrp
xchg
out
fucomip
loope
out
ljmp
cmp
cli
test
fadd
aam
in
mov
out
aam
divb
fcmove
shr
fdivrl
ror
test
lock
out
fadd
jmp
lret
add
sti
shl
in
enter
mov
cmc
out
ds
repz
icebp
std
into
cli
shl
xchg
ljmp
repnz
xor
xor
cli
xlat
out
xlat
icebp
int
out
xchg
fnstcw
std
ffreep
lock
lret
test
cmpl
in
jecxz
xor
ss
int3
xor
ret
cli
orl
lret
std
aam
sub
repz
aam
aam
repnz
into
ror
aad
cli
test
loop
decl
sub
out
in
icebp
ss
sarb
icebp
icebp
sbb
idiv
enter
out
mov
vpmullw
stc
repz
cmp
cmp
lret
icebp
hlt
cli
add
sar
fcmovne
mov
repz
ror
xor
fsubr
into
dec
xor
ds
loope
mov
leave
lret
in
repz
fabs
lds
cli
xor
repnz
fsub
cmp
xor
filds
loopne
xor
aad
out
aam
xor
cmp
fdivrl
fcomi
addl
xlat
mov
in
xchg
mov
ljmp
sarb
sarb
mov
rorl
lret
into
mov
xor
ss
aas
cmp
cmc
add
add
ror
aas
aad
iret
rol
adcb
gs
cmp
add
dec
rolb
ret
out
jecxz
into
repnz
shr
aaa
fstpt
lock
ljmp
incl
ljmp
loope
cmp
fcmovbe
ljmp
lock
lock
cld
in
out
icebp
cli
fcmove
fsub
out
fldl2e
jmp
stc
out
fldz
aam
loop
cmp
fsub
xlat
hlt
fistpll
jmp
test
repz
test
fmul
adc
add
out
orl
xor
xor
ftst
dec
enter
icebp
hlt
cmp
aad
testb
xchg
jmp
xor
out
aam
aam
icebp
sub
in
cmp
repz
loopne
xor
fcoms
and
ret
lret
icebp
repz
fdivp
sub
fadd
fadd
in
fcmovu
repz
in
fnstenv
cmc
sar
clc
iret
repnz
stc
cli
stc
std
stc
cld
sub
out
loop
out
xor
xlat
ret
enter
leave
lret
xor
cli
loope
fildl
fucomip
out
rol
rcl
loop
hlt
cmp
stc
divb
cmp
adc
loope
fdivr
std
out
in
iret
out
out
xor
clc
divb
cmc
fmul
rcr
cmp
out
movl
out
iret
lret
shll
shr
jmp
iret
iret
icebp
aam
shl
hlt
cmc
loope
sti
test
stc
in
fcmovnu
lret
icebp
cmc
out
xor
cmc
aam
cmp
std
shr
in
shl
jecxz
cld
test
fmul
jecxz,pt
xchg
nop
repnz
iret
xor
aam
cmp
clc
loope
fcmovbe
xlat
cli
in
std
movl
xor
lret
jmp
lret
rcr
leave
lock
test
and
icebp
iret
enter
fdiv
sti
ret
cmp
push
jecxz
dec
into
jecxz
shl
rcr
ror
enter
fmul
xor
in
out
xor
jmp
stc
adc
aas
lret
mov
mov
leave
cmp
out
enter
jmp
sar
ret
fnstcw
repnz
loopne
testl
jecxz
repnz
shl
ss
int
fdecstp
xor
clc
flds
testl
enter
rcl
fucomi
xor
ss
sar
fcmovu
lret
jmp
ljmp
jecxz
loopne
rol
rcr
xor
fidivrs
cmp
hlt
rcr
rcr
jecxz
mov
lret
stc
stc
aad
into
idiv
cmp
cld
cld
rol
out
test
ljmp
sti
xchg
int3
mov
int3
xor
lock
cmp
repnz
call
in
ds
xlat
sti
out
out
rcll
neg
les
cli
fst
enter
int
mul
fcmovnu
mov
out
cld
cld
cli
neg
addl
cmp
into
stc
out
testb
mov
out
std
ret
in
test
shr
call
fdivrl
mov
ljmp
loope
rclb
xor
ror
iret
stc
clc
cmp
rcl
call
out
xchg
shl
repz
shr
ret
sar
ffree
fldl
test
aam
iret
aam
cmp
out
jmp
ljmp
mov
test
mov
aaa
cmp
cmc
fidivrl
hlt
cli
cmp
iret
mov
xchg
mov
and
fucom
shr
enter
icebp
xor
inc
iret
rcl
fcmovbe
test
rol
leave
neg
jmp
loope
xlat
iret
ret
ljmp
sub
cmp
repnz
testb
fbstp
out
in
cli
repz
ror
faddp
cld
int
in
test
jmp
ret
and
xchg
std
xor
into
fsubrp
enter
in
cmp
shl
int3
ret
addb
leave
in
mov
out
rcl
in
out
aad
jmp
cld
cmp
cli
testl
fcomip
stc
divb
leave
in
loope
aam
ret
loope
std
aam
loop
in
call
test
out
xchg
stc
jmp
fcmovb
aaa
in
ljmp
clc
fsub
not
enter
shr
ret
hlt
lock
ljmp
enter
shl
repz
in
lret
ret
ljmp
decb
rcl
aam
xchg
jb
add
roll
add
add
add
pushl
cmp
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
push
call
jle
pop
add
test
cmp
vpmovmskb
mov
mov
into
icebp
in
call
int
cmp
ret
clc
out
aad
cld
loope
ret
mov
iret
mov
out
int3
enter
fst
fistpll
cmp
sti
iret
cli
lds
in
fcmovu
jmp
rol
test
fcmovnu
cmp
int
rolb
xlat
int
icebp
repz
test
ret
fld
fdivrs
aas
cli
cmp
repz
aam
out
std
cli
xchg
repz
imull
jmp
lret
clc
ret
ds
in
xchg
dec
sbb
into
call
cmp
in
jmp
shr
ret
mov
aad
hlt
lds
fmull
xlat
jecxz
shll
int
ret
fcomip
sar
inc
jmp
xor
lea
vmaskmovdqu
repnz
lret
aas
fdiv
aam
fld
out
in
jmp
fsubr
lock
jmp
xor
adc
ds
inc
in
std
lret
jmp
aad
sub
loop
cli
out
xor
test
in
incl
adc
das
out
iret
fdivr
fdivrs
lret
fstp
sbb
incl
in
mov
cld
test
repz
lds
aam
cli
cmp
rcr
call
cld
xchg
out
in
int
xor
rcl
lret
fmulp
ss
faddp
sar
cmp
fldl
out
lret
clc
xchg
in
int
ror
shl
jmp
aam
test
adc
loope
fsin
xchg
cld
fcomi
mov
orl
sub
rcr
stc
icebp
call
iret
out
clc
mov
loope
test
fdivr
xor
sub
into
xor
in
cli
call
fdivr
fabs
clc
loop
mov
jmp
in
xor
ret
into
div
aad
int
std
incl
in
faddl
jmp
mov
shr
xor
not
icebp
repnz
vmovq
addl
xor
out
lret
mul
aad
out
shl
xlat
cmp
test
aas
sti
iret
ret
mov
icebp
das
in
aam
jmp
int3
cmp
sar
repnz
xlat
clc
out
orl
ds
lret
in
aam
iret
cld
loope
out
fcomip
out
repnz
lds
into
xchg
jmp
adcl
repz
out
xor
sub
mov
call
xchg
iret
test
jmp
loope
shll
lret
lret
cli
rcr
int3
aad
cmp
clc
fdiv
xchg
out
icebp
xchg
in
sub
jmp
hlt
loopne,pt
roll
jmp
int3
loope
test
icebp
sub
out
ret
clc
out
cmp
cmp
loope
idivl
fprem1
ljmp
loop
jmp
lock
out
repz
fsubp
or
addb
iret
xchg
nop
movb
jmp
loop
enter
rcl
and
aad
mov
hlt
ljmp
call
jmp
fcmovnbe
aam
lret
ret
ds
loop
addb
incb
into
repz
shr
repnz
lock
test
mov
or
xor
in
call
in
ds
test
fistpll
ret
lret
fiaddl
xor
xor
in
lock
sar
aas
out
xlat
repnz
cmc
ljmp
std
int
leave
ss
cmp
not
repnz
xlat
cmc
fstpt
aam
sbb
jmp
iret
jmp
mov
loop
aad
sti
das
repz
out
fst
into
aad
lock
jmp
out
fmul
rorb
stc
hlt
xor
fsubrp
clc
rcr
lock
xchg
frndint
fdivr
decl
repz
in
idiv
stc
filds
icebp
aam
stc
std
nop
loop
roll
idiv
enter
fdivr
xor
aas
int3
addl
fisttpll
jmp
ss
lock
out
out
loopne
and
repnz
sti
loop
mov
sbb
lret
adcb
in
iret
cmp
std
add
test
leave
mov
mov
loop
out
jmp
iret
movl
and
movl
movl
movl
or
jmp
rcl
aad
aad
fstp
sub
cld
cmp
push
retw
jl
add
in
out
in
rcl
xlat
aam
shl
test
mov
int3
cli
shll
fucomip
sbb
sar
jmp
test
fcomip
in
cld
jmp
les
cmp
loop
fcmove
xlat
loop
aam
lret
out
std
in
test
cld
xchg
aaa
aaa
divl
repz
lret
imul
lock
cld
jmp
mov
clc
mov
out
lret
xor
ret
shr
call
fmul
xlat
idiv
enter
mov
jmp
lock
call
cmp
ror
in
rolb
aad
call
xchg
shl
hlt
xor
iret
cmp
icebp
fcmovnbe
int3
sti
fucom
neg
out
aad
int
mov
jecxz
shll
rcr
fdivl
cmp
clc
shl
leave
cmp
mov
sti
in
std
mov
stc
xor
fnstcw
in
mov
fmull
test
xchg
jecxz
mov
imulb
shl
iret
leave
cmp
cmp
cld
fmulp
sar
rcl
cli
loop
fmuls
out
out
test
lock
cmp
fidivs
fsubrp
cmp
mov
fcomp
cmp
test
sub
in
std
ljmp
loope
fidivrs
test
in
test
jecxz
lds
call
call
loope
sar
aam
sar
and
orl
aad
cmc
lret
iret
clc
shl
ret
repnz
rol
lds
mov
xchg
xor
stc
divb
idiv
enter
clc
std
cli
mov
ds
xchg
loopne
cmc
int
ret
out
in
aam
in
icebp
out
cmp
ss
fneni(8087
fadd
in
sub
mov
mov
lock
iret
xlat
repz
div
cmp
loopne
jmp
lret
jecxz
out
mov
lea
enter
xor
sarb
rol
testb
nop
fcomip
fsubp
cmc
call
cmp
call
clc
lock
into
jecxz
leave
out
ror
loopne
mov
aad
shr
ss
int
cmp
into
sbb
iret
rcl
out
ljmp
in
fisttps
jmp
out
lock
sar
in
hlt
shl
jecxz
cmp
clc
loope
cli
mov
call
clc
fnsave
rcl
testb
div
cld
loopne
test
xchg
out
shr
nop
out
into
out
xor
repz
test
std
fidivrl
and
jecxz
rorb
in
call
test
ljmp
loop
clc
out
loope
ljmp
sar
leave
loop
int3
enter
iret
out
addl
int3
in
in
divb
ret
out
repnz
int
repz
shl
testl
std
test
xor
cmp
fstp
xor
loop
in
test
mov
out
in
test
aam
sti
mul
ror
leave
call
fld
test
loope
cld
sti
mov
out
fnsetpm(287
out
add
ror
iret
int3
test
clc
fsqrt
in
shl
mul
aas
ds
std
sti
int3
shl
ret
ljmp
int3
jmp
cmp
test
cmp
mov
fsubp
in
in
loopne
fdiv
xchg
cld
out
xor
sti
jmp
ds
out
xor
test
in
rol
int3
in
iret
mov
into
xchg
sub
aad
neg
fdivrp
cmc
sar
divb
test
fnclex
repnz
std
in
popl
xchg
ret
xlat
into
fnsave
int
sti
xlat
cmc
std
iret
sarb
jmp
fcmovu
mov
cmp
xor
shr
in
jmp
ret
icebp
ret
fdivr
loopne
cmc
sti
in
call
out
fidivs
leave
shl
jmp
cli
out
xor
rcl
add
mov
idiv
out
dec
out
xchg
xchg
sub
shrl
repz
ss
xlat
cmp
repz
test
test
mov
adcl
shl
fxtract
cmp
fld1
ds
lret
repnz
fxtract
aad
int
int3
jmp
jmp
call
lock
fcmovu
sar
aas
lock
cmp
aad
xor
mov
fxch
push
xchg
xchg
jmp
leave
clc
cmc
fidivl
int
and
fsubr
cmp
rolb
repz
cli
test
lret
aaa
iret
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
inc
cli
pop
and
jl
hlt
cli
call
sar
testl
iret
sbb
mov
xchg
ret
call
cmc
xlat
into
repnz
fdiv
out
rorb
out
imul
loopne
loop
loope
jecxz
sti
int3
xor
into
clc
mul
cli
aam
lret
mov
loope
imul
out
loop
cs
loopne,pt
hlt
cmc
cmp
fildl
in
mov
fdivrp
xchg
hlt
ret
call
aad
xlat
fdiv
xor
loop
shl
shl
mov
aas
mul
xor
in
fidivrl
repnz
in
ror
cmc
neg
incb
jecxz
in
int3
int3
mov
xor
ret
xor
stc
bnd
in
or
jmp
lret
jecxz
mov
xchg
xor
enter
in
ss
out
cmp
test
into
ret
test
mov
hlt
in
ljmp
xchg
in
mul
in
hlt
cld
stc
fcmovbe
out
fadd
push
test
add
mov
xabort
fcomi
cld
xlat
imul
jecxz
aad
fcomp
ret
mov
lret
fildl
ret
loop
repz
iret
xor
in
hlt
into
in
enter
ret
std
loop
cmc
iret
shl
in
fnstsw
in
clc
repz
shr
out
ds
stc
and
loopne
mov
dec
roll
shl
jmp
into
jecxz
fcmovnbe
sarb
sub
stc
loopne
lret
loop
shll
aaa
lock
aam
hlt
rcl
cmp
cmp
xchg
xchg
in
fimuls
loopne
shll
aad
cmp
fnop
loopne
lock
fcomip
cmp
hlt
lret
lret
cld
mov
shr
xchg
jmp
loopne
leave
fdivl
fsubr
jmp
rol
rolb
xchg
in
cld
call
ret
repnz
repz
aam
out
xchg
in
mov
in
out
in
out
jmp
xor
hlt
in
sti
hlt
test
ds
ror
int3
jmp
fcmovbe
mov
lock
jecxz
aaa
in
rcr
leave
xlat
clc
aas
fcmovbe
into
hlt
cli
stc
in
rcl
jecxz
addl
ret
iret
fdiv
aad
cmp
cli
fcmovbe
icebp
jecxz
stc
neg
lret
mov
ds
ljmp
iret
cmc
sub
jecxz
rcr
hlt
in
fcmovne
fcmove
xchg
leave
fldl2e
out
ljmp
clc
sti
repz
clc
fprem1
sti
leave
mov
fadd
call
in
cs
aad
idiv
cmp
xlat
aas
into
icebp
icebp
sti
loope
call
jecxz
test
clc
fdivr
std
sub
clc
sti
aad
mov
fdivp
int3
out
out
jecxz
bnd
cmp
int3
in
repnz
out
aad
enter
in
xor
test
cld
mov
fdivrp
fimull
xchg
iret
test
fsubr
iret
fbstp
test
orb
stc
out
mov
stc
ret
fcom
lret
icebp
xor
test
repnz
icebp
xchg
icebp
cmc
leave
shr
aam
call
in
ljmp
mov
fcmovu
leave
test
iret
rclb
xor
out
rcr
into
sarb
ljmp
mov
lret
leave
out
or
out
icebp
out
out
hlt
repnz
cmp
out
cmp
fdivr
repnz
out
xor
test
repnz
sti
repz
out
addl
leave
in
mov
into
jmp
loope
rol
out
cmp
cmc
roll
icebp
aam
mov
fadd
lret
out
jmp
in
mov
iret
jecxz
cmc
lret
xor
repnz
stc
in
in
roll
in
cli
clc
std
repnz
int
out
das
aaa
shr
cmp
int
rcr
cmp
icebp
cmp
out
loopne
fmul
jecxz
or
in
ljmp
ret
shr
mul
iret
int
out
cmp
hlt
fiaddl
test
mov
out
int3
mov
xchg
test
out
ss
jmp
in
ss
repz
fsub
mov
mov
enter
xchg
mov
cs
sub
xor
in
out
add
rol
fdivrp
jmp
repz
xlat
xlat
rcr
icebp
enter
loope
neg
hlt
out
xchg
roll
iret
cli
icebp
lock
in
int
sub
in
leave
out
ljmp
repnz
jecxz
call
iret
out
xchg
mov
add
jmp
aad
fstl
fs
jl
jle
pop
add
enter
std
not
ss
fstp
lock
hlt
ret
out
test
mov
ret
int
xor
shl
xlat
icebp
call
xlat
fadd
xlat
sar
xchg
leave
in
leave
in
loope
das
xor
in
ljmp
cmp
out
cmp
cmp
in
in
lret
shl
stc
xlat
jmp
lret
ds
out
lret
loop
sub
addl
clc
lret
in
sarb
flds
xlat
ret
jmp
aas
test
out
in
fmull
jmp
sarb
aaa
ss
flds
loopne
jecxz
sti
in
fdivp
repnz
ds
clc
call
rcr
rcr
hlt
shl
xor
neg
xchg
fcomp
xchg
repz
iret
out
loop
cmp
ljmp
stc
fsubp
cld
ret
loopne
jmp
aam
stc
fucomp
out
int
leave
ror
clc
aad
enter
fsubp
fld
stc
loopne
cmc
stc
ret
filds
mov
addl
xlat
shlb
cmc
clc
jecxz
sar
xor
cmc
aad
mov
ror
in
loopne
ss
fsubr
not
fmul
idiv
out
jmp
fcmove
fiadds
repz
aad
shl
cmc
icebp
jecxz
rolb
mov
rcll
iret
in
aad
cli
fst
lret
out
sarl
xchg
rolb
xlat
into
nop
lret
loope
loope
xor
xor
cmp
repz
fidivrs
fidivrs
xlat
aas
loopne
repz
mov
roll
mov
mov
fstpt
out
cmp
adc
lds
ret
orl
out
enter
cmc
cmc
icebp
shl
lock
cld
out
neg
fldl2t
mov
fsubrp
into
jmp
leave
cld
cmp
hlt
repnz
sub
test
out
out
fadds
iret
in
not
iret
call
enter
into
idivl
call
loop
std
jmp
shll
ss
out
repz
cmp
icebp
shl
cmp
out
fadd
repnz
mov
leave
addb
mul
jmp
jmp
lret
xor
incl
flds
int3
shr
aas
ret
out
das
clc
aas
cli
cld
cmp
aam
jmp
in
lret
testb
in
rol
fcmovnu
cmp
neg
cld
or
out
in
clc
stc
in
jecxz
fcmove
out
xchg
jmp
call
ss
xlat
ror
div
test
call
mov
mov
cld
xchg
int3
hlt
iret
sti
aaa
out
aaa
enter
loope
std
fcomip
out
into
test
and
loope
xchg
into
ds
into
iret
into
icebp
xor
cld
xor
lock
rorb
iret
mov
std
in
fdivp
out
int
ret
div
cmp
cmp
loope
neg
shl
clc
not
mov
cli
test
aam
xor
sar
lret
cld
stc
cmp
icebp
ljmp
jecxz
loope
out
cld
sti
jmp
xchg
in
ror
lret
cmc
out
cli
leave
lock
in
in
ret
ret
fstp
cmp
loopne
xchg
shl
xlat
in
hlt
repnz
fdivs
cmp
into
repnz
test
movl
into
int
xor
aam
clc
cld
cmp
cmp
mov
jecxz
into
lret
out
jecxz
ror
idiv
jmp
idivl
fpatan
out
iret
out
aad
loope
ret
mov
sub
aad
shl
icebp
cmp
cmpl
shl
neg
loope
mov
dec
mov
xchg
out
enter
in
rcl
aaa
in
cmp
fsub
repz
test
cli
lret
add
int
in
ret
sub
cmp
xor
sar
xor
mov
hlt
loopne
jecxz
ror
jmp
out
shr
lret
xor
roll
xor
ret
fiaddl
out
vpmacsww
sub
in
xor
cld
not
jmp
fyl2x
ret
fsubp
aad
filds
xchg
xchg
xchg
xchg
iret
ret
icebp
cmc
into
int3
xlat
cld
lret
loop
hlt
fiadds
call
into
fmul
repz
out
idivb
iret
aad
aad
repz
lret
shl
les
enter
hlt
int
lds
repnz
shl
lret
repz
jmp
sti
cmp
fst
cmc
orb
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
sub
pop
xchg
jle
pop
add
mov
out
cld
in
stc
sti
rcl
sbb
xlat
jecxz
fcmovnu
inc
mov
ljmp
in
cmc
das
iret
aad
sub
ret
lret
in
int3
int
ret
out
mov
rcl
fmulp
shlb
rcl
out
lret
sar
cmp
sti
jmp
in
loopne
lock
in
aad
in
jmp
cmp
fst
sbb
decb
test
int
fcomi
int3
pushl
fdiv
cmp
out
adc
enter
in
out
lret
test
lock
xor
cmp
jecxz
adc
sti
roll
fmulp
call
ror
fdiv
xor
aaa
ror
repz
ret
mov
shl
test
jmp
repnz
xor
std
fdiv
int
in
cmp
repz
div
movl
shl
sub
xor
aam
repnz
loope
fcmovnbe
int3
shl
cli
sti
int
in
fcmovbe
in
xchg
jmp
into
call
rcr
ljmp
test
fisttps
xor
clc
lret
xor
repnz
stc
lret
cli
leave
xchg
jecxz
addl
repnz
in
stc
leave
jmp
stc
iret
cmp
ret
std
aam
aam
fisttps
repz
into
xor
ljmp
adc
out
hlt
in
in
ds
out
iret
mov
shl
rcl
icebp
lret
cmc
aas
in
repz
rol
not
xchg
sbb
mov
int
aad
leave
int
aam
jmp
fmul
loopne
std
stc
cli
in
xchg
mov
and
xor
aad
loop
aaa
loopne
dec
hlt
fdivr
lock
aam
loop
out
mov
ljmp
into
ror
ror
sti
into
aam
ret
call
loope
in
mov
in
xor
ss
call
les
aad
in
fisttps
ret
int3
clc
xor
aaa
int
loopne
ret
shl
call
fucomi
fimull
aam
cmc
out
ret
jmp
ds
xlat
loope
test
clc
jmp
iret
xchg
dec
in
int
xor
in
in
cmp
jmp
hlt
out
xchg
fsubp
adc
out
clc
repz
xor
xlat
shr
aam
lret
ds
aas
std
out
cld
orb
int3
shr
sub
in
out
enter
jecxz
cmp
faddl
loopne
ret
mov
call
aad
aaa
rcr
in
aad
cli
leave
cld
rcr
hlt
fucom
in
addb
cmp
cli
sarb
fcmovnbe
sbb
test
imul
in
cmp
in
into
mov
fcmovnb
into
les
repnz
stc
test
rcl
jmp
sti
jmp
std
mov
shl
xor
rcr
cmp
cld
xor
aas
loope
out
sti
std
test
idiv
out
in
mov
leave
sti
test
int
ffree
fld
fsubr
out
out
jmp
jmp
out
into
stc
in
cmc
cmc
shr
jmp
clc
cmp
xchg
addb
out
loope
out
xor
sti
mul
aad
call
repnz
fiadds
fcoml
aam
ss
cmp
out
in
fcmovnb
stc
loope
ret
mov
test
loopne
loope
repnz
stc
icebp
shl
sar
out
icebp
fmul
aad
rcr
rol
fdivp
clc
xchg
hlt
in
jmp
int
repz
clc
in
xlat
aaa
jmp
stc
not
sarb
sub
test
les
iret
out
repz
cmp
xor
cs
xor
lret
out
faddl
aad
faddl
lea
int
xlat
jmp
xlat
cmp
icebp
loop
aam
mov
mov
fsub
loope
out
repz
sarl
in
out
ljmp
cmp
fmul
loope
stc
loope
jecxz
add
loop
enter
sub
stc
hlt
aad
sar
cmp
addb
std
rcll
lds
out
fdivl
fucomp
ds
ret
in
cld
in
fsub
fdivrp
fiadds
repnz
xor
sti
clc
aaa
ss
cld
xlat
repz
fxch
popl
xorl
add
movl
cmp
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
pop
mov
jl
add
out
mov
int3
xlat
shr
sub
cmp
int3
in
in
shl
cmp
jecxz
add
into
in
std
jmp
cmc
int3
lret
xor
cli
out
fcmovb
fcmovne
iret
cli
cld
cld
aad
cmp
fsub
repnz
jmp
cld
int3
fdivp
aam
cs
in
cli
lret
cmp
lock
xlat
fldl
and
mov
xlat
xor
sti
aam
lret
aaa
xor
repnz
out
cmp
faddp
rcr
out
add
rorb
shl
in
cli
in
jmp
repz
cld
ds
fld
stc
sub
mov
call
out
xor
in
sti
sarb
rcl
iret
rol
loope
sub
cld
stc
clc
fcmovnu
out
xchg
xor
out
int3
cmp
lock
repnz
cmp
out
hlt
fcom
out
ljmp
repz
stc
call
int
fsubr
cmp
mov
mov
cli
int
stc
mov
jmp
das
cmp
iret
in
in
in
fsub
cld
out
fpatan
fucom
out
hlt
mov
sti
in
out
mov
loop
out
xor
mov
clc
sti
ror
stc
cmp
rorb
mov
out
std
xchg
add
out
rcr
aam
rcl
fcom
fnstsw
dec
in
xchg
test
loope
in
out
cmc
clc
cmp
fyl2x
aam
ds
loope
decb
mov
mov
xchg
int
fcmovnu
rol
fcom
loopne
repnz
loopne
roll
std
rol
rolb
cld
fmul
cld
test
adc
test
aam
jmp
mov
loopne
div
shl
loop
cmp
fneni(8087
enter
loope
sbb
lret
leave
ljmp
out
or
ror
sar
fdivrl
fstp
loope
shl
shl
cli
loopne
std
filds
test
into
jmp
call
into
leave
lock
fstp
ret
aas
fcmovnb
repz
clc
mul
mov
out
nop
shl
int
enter
rol
in
in
sti
xor
in
in
cld
faddp
out
in
mov
out
into
xchg
lret
xor
out
aam
fcmovnbe
cld
cmp
cmp
repz
cld
leave
aas
mov
nop
xchg
xchg
les
das
lret
cmc
ljmp
fldl
lret
xchg
xchg
xchg
cmc
repnz
int
in
cld
fdivrl
icebp
shr
icebp
xchg
aam
sub
int
loope
cld
mov
xchg
mov
loopne
divl
in
imul
cmp
int
les
orl
xchg
mov
jmp
idiv
mul
neg
icebp
cmp
clc
loopne
incb
xchg
clc
enter
enter
cmp
cmp
repz
stc
repnz
ds
stc
clc
mov
adcb
int3
imul
lock
cmp
sbb
fcom
rol
xchg
out
int
and
cs
enter
cmp
cmc
xchg
rorb
clc
int3
mov
mov
loope
xor
rol
in
out
aad
ljmp
loopne
xchg
std
movl
leave
imul
loop
fcmovu
cld
loopne
hlt
fcmovnb
out
shl
fimull
mov
aam
xlat
enter
sti
shl
ret
test
call
mov
in
das
shl
sti
int3
xor
cmp
fcomip
sti
fcmovu
sbb
repz
lret
test
xchg
in
aad
ljmp
jmp
int
sarl
ds
test
cli
ds
fucomp
adcb
iret
in
int3
ror
shl
ljmp
stc
xchg
test
ljmp
rcr
lret
imul
cmp
repnz
clc
faddl
fcomip
jmp
in
iret
in
lret
lret
sbb
aam
clc
sbb
xlat
ljmp
and
lock
in
int3
cmp
cmp
neg
xchg
hlt
cld
neg
out
sti
in
xor
xor
aam
test
aad
fcmovne
loopne
call
xlat
xchg
cld
loopne
repz
aam
icebp
fmul
fxch
int
cmp
fucomip
repnz
xchg
fdiv
mov
int
std
loopne
repnz
out
jecxz
repnz
xor
les
in
ror
std
idiv
aam
in
neg
shl
test
xlat
cmc
out
std
sti
fdiv
cmp
loopne
in
fiadds
push
clc
and
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
pop
xchg
mov
jl
int3
test
in
fadds
out
out
fstpt
rcl
fiadds
test
loope
clc
into
bnd
ljmp
ss
jmp
hlt
out
testb
mov
fucomp
fmulp
out
icebp
div
aaa
leave
clc
xor
dec
int3
rol
loop
in
jmp
in
leave
xchg
lret
shl
ret
cmp
int3
fdivr
icebp
in
loopne
add
std
out
lret
sub
aam
iret
in
fsubr
shl
fscale
cmp
cld
loope
xchg
fmul
mov
test
xor
out
out
xlat
cld
in
cmp
clc
aad
stc
iret
jecxz
test
mov
in
fdiv
aad
shl
in
in
fmul
in
cli
cmp
idiv
sar
jmp
enter
leave
fisttpll
lret
lock
enter
cli
clc
idivb
movb
faddl
shll
cmc
aam
hlt
cli
xlat
pushl
fcmovnbe
aas
cmp
aad
loopne
aad
mov
rorl
lret
int
clc
shlb
repz
rcr
sarb
repz
cmc
sub
loope
addb
iret
fdivrs
int
loope
loopne,pt
shl
test
decl
dec
call
ret
lret
fnstsw
out
sar
rolb
mov
jmp
xor
xor
cmp
faddl
sub
orl
fsubrp
out
stc
in
xor
clc
stc
iret
in
fcmovu
sbb
loop
rcr
repnz
int
enter
in
lret
int
ljmp
fdivp
stc
roll
test
jecxz
int
aam
lret
ret
repnz
into
cmp
cmc
xchg
in
lret
cld
fadd
iret
cs
lock
xlat
xor
ret
repnz
cld
sti
nop
orl
hlt
std
div
enter
cmp
shl
repnz
hlt
lret
cmp
fistl
jmp
into
xor
aad
loope
enter
xchg
ljmp
lock
test
fcmovne
stc
in
aad
out
loop
fucom
ret
movl
shll
leave
aaa
ret
cmp
stc
cmp
test
mov
jmp
shl
xchg
xchg
aam
int3
ret
out
jmp
cmc
in
or
xor
addl
fsub
int3
cmp
cld
inc
cld
icebp
stc
addb
in
int
mov
int3
out
idiv
clc
jmp
div
ror
fcomip
std
fucomip
int
ror
into
lret
ret
out
in
aam
lret
in
enter
cmc
rolb
fmulp
neg
loop
stc
cli
ljmp
jmp
ljmp
xchg
add
in
test
lds
call
shl
lret
cld
lret
call
std
adc
sub
loope
mov
repnz
lock
rol
out
xor
fdivr
fsubp
div
shl
cld
rcl
repz
mov
fmul
fsub
dec
mov
in
shl
imul
sarl
call
iret
into
fiadds
fsub
mov
int3
fmulp
mov
out
in
lock
int
cmp
faddl
sub
out
mov
ljmp
rcr
rcl
jecxz
adc
leave
fmul
xchg
test
ljmp
fldpi
lock
aaa
call
cmp
fsubp
neg
testb
loope
loope
hlt
faddp
int
in
clc
out
cmp
aas
not
stc
rorl
in
sbb
cli
fsub
xor
cmc
clc
in
jmp
ss
fsub
xchg
clc
int3
std
xor
shr
aaa
in
divb
fcmovnbe
aas
loope
loopne
jecxz
std
clc
or
enter
cs
jecxz
out
xor
stc
cmp
jmp
in
lock
stc
sar
ljmp
ljmp
lret
out
xlat
cmp
leave
sarb
out
shr
rcl
cld
jecxz
incl
lock
adc
lds
shr
xlat
ljmp
ret
les
test
loop
mov
test
test
cmp
fcmovnbe
cmp
icebp
fucomip
out
cli
adc
mov
jmp
leave
aam
rcl
aam
insb
leave
xchg
lret
movsb
jle
pop
add
std
or
cld
test
test
jmp
out
cmp
aas
fcomi
out
vpaddusw
in
clc
cmp
std
jecxz
in
mov
jmp
clc
loop
stc
xor
std
fucomi
fcmovnb
adc
xchg
std
aad
std
stc
clc
lea
shl
sub
in
ljmp
lret
cli
faddl
jmp
xchg
out
idivb
ret
xor
in
mov
in
imul
out
std
ficoml
jmp
divl
jmp
rolb
loopne
mov
int3
mov
mov
in
hlt
repz
aam
dec
fdivr
cmpb
std
decb
decb
lret
aaa
loope
vpslld
sti
int3
call
aaa
cmp
fucom
into
mov
fmulp
loope
jmp
cmc
repz
out
in
rcr
iret
int3
in
shl
mov
aam
out
movb
mov
idivb
in
cld
hlt
and
idivb
std
stc
jmp
repz
xchg
hlt
sub
ret
out
shl
aad
sar
loopne
in
aam
jmp
iret
out
aaa
cmp
hlt
cmc
repnz
loopne
rcl
ljmp
nop
adc
hlt
in
cmc
aam
out
in
in
enter
iret
out
cld
ret
sar
sbb
neg
test
shr
mov
in
rcl
xor
sti
xor
cmp
incb
ret
out
jmp
jmp
ss
lock
stc
repnz
fcom
hlt
lock
hlt
rolb
sti
out
lret
jmp
jmp
fsubrl
xor
xor
in
sti
loope
in
cmp
cli
test
out
xchg
int3
in
in
fsubp
xor
xor
enter
sti
xor
test
icebp
cmp
stc
in
fucomip
loopne
xchg
and
enter
into
in
in
jmp
loop
xlat
lret
dec
enter
repz
shr
lret
in
clc
fsubr
out
ljmp
into
sti
xlat
mov
xlat
jecxz
out
jecxz
fdivp
aad
ret
int3
xor
in
ljmp
iret
ret
ret
out
std
test
loope
fmuls
test
sub
int3
sbb
sbb
mov
cmp
loopne
loop
xchg
nop
imulb
leave
fdiv
aad
fnstsw
ds
out
cmp
loopne
jmp
fsubr
sub
aam
xor
ss
fcmovnbe
aaa
in
mul
loope
fnsetpm(287
mov
roll
ljmp
shl
aaa
int
fcmovne
lret
cmp
loop
aad
xchg
ret
lds
mov
xor
cmp
iret
imul
enter
not
cli
out
loop
fadd
clc
mov
cli
cli
in
cmc
xchg
shll
repz
in
cmp
sar
cmc
imul
shl
xchg
loope
in
test
cli
ljmp
repz
cmp
loope
lret
lock
loop
xchg
xchg
lret
rcll
call
in
xor
lret
std
testb
leave
out
stc
mov
loope
lret
ss
jmp
cmp
repnz
cmc
in
sar
push
cli
mov
fsubr
std
in
mov
ror
int
fdivr
cmp
std
lret
loop
cmp
lret
xchg
cld
jecxz
xchg
mov
iret
jmp
sti
out
sar
aam
fcomip
cmp
mov
ret
fucomi
out
mov
aad
out
xor
not
shl
in
cmp
in
loop
div
cmp
fdiv
in
std
stc
in
orl
cs
fstp
fdivr
in
fcmovnb
ffree
mov
sbb
loop
call
jmp
ss
fcomp
ds
shl
loopne
ljmp
aaa
imul
lock
loope
icebp
roll
hlt
ret
out
or
test
repnz
call
cmp
out
out
roll
enter
pop
repz
int
out
jecxz
cmp
fnstcw
rorl
fimuls
xchg
ret
sub
out
fldlg2
repnz
aam
repz
and
loopne
iret
int
loope
clc
out
sar
loope
div
ds
aas
addb
sti
in
int3
cmp
ror
lret
fcomp
xor
aam
sti
xor
add
movl
jmp
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
ret
test
and
fsubr
mov
out
xor
xor
in
in
flds
iret
ds
add
loopne
or
xchg
sti
repz
rcl
out
into
rcl
ds
mov
mov
fmul
lea
ret
enter
mov
fdivrs
into
int3
rcl
fsub
loope
cmc
in
mov
lret
loop
out
out
jmp
in
cmc
cmc
leave
stc
jmp
fdiv
ds
mov
fimull
jmp
aaa
hlt
out
xlat
cmp
in
jmp
cld
ret
cmp
fimull
xchg
mov
loop
in
aad
fadd
ss
std
shl
shl
test
fimull
shl
loop
hlt
fstp
cs
cli
sar
ret
out
lds
fildl
out
xchg
loop
ror
repnz
fnstcw
cmp
icebp
in
sti
cmp
stc
xchg
rol
lock
leave
out
int
repnz
cli
xchg
ror
leave
xor
out
lock
out
out
aad
in
iret
cmp
sarl
fnstsw
sarb
mov
rol
hlt
out
out
iret
fildl
shl
xor
out
xor
mul
repz
clc
jecxz
lock
cld
sub
icebp
loop
lret
divl
xor
cli
sarb
jmp
div
lock
ret
loop
int3
fmul
mov
test
lock
enter
repnz
sar
rcr
into
lock
repnz
loope
rol
sti
ftst
cli
jmp
mov
out
out
into
cmp
fsubr
enter
in
aas
cld
xchg
incl
xchg
in
repnz
repnz
fmul
jmp
ljmp
stc
ret
lds
loopne
hlt
aaa
lret
out
repnz
leave
out
fdivr
cmpl
loop
out
clc
mov
loop
int
icebp
loop
repz
cmp
in
in
hlt
jmp
loope
aam
mov
in
xchg
out
xchg
aad
jmp
neg
call
cmc
in
int
iret
loope
leave
leave
mov
jmp
enter
enter
jmp
ss
jmp
stc
cli
ret
icebp
test
in
div
out
int
leave
out
xchg
lret
xchg
xor
hlt
cmp
sti
cmp
aaa
cmp
ret
out
jecxz
rcl
mov
rcl
in
lret
iret
repnz
xor
out
ret
int3
leave
aaa
into
hlt
aas
int
iret
fsubrp
sar
mov
sbb
icebp
loop
jecxz
ss
leave
addl
roll
leave
out
addl
xlat
cmp
cmp
fsubr
xorl
test
lret
loopne
sti
iret
xchg
call
ret
jmp
cmp
cmp
into
ds
fcmovnbe
std
jmp
out
test
fsub
iret
std
adc
divb
aam
cmp
cli
cli
xorl
lret
clc
call
xchg
mov
aam
lret
fsub
lret
int
cmpl
test
into
icebp
cld
iret
call
out
sub
shr
call
ljmp
fldl
fmull
test
sub
jmp
xor
aad
cli
aad
shl
shl
neg
out
fsubr
ljmp
out
in
aad
ss
fcmovbe
stc
jmp
in
addb
into
iret
xor
in
out
into
cld
lret
ljmp
rcl
cld
fdivr
cli
cli
fcmove
out
fsubp
xchg
ds
stc
in
rcl
test
cmp
add
jecxz
in
fsub
jmp
mov
leave
imul
sub
stc
in
in
cmp
int
loop
frstpm(287
ds
in
ror
shl
jecxz
xlat
repnz
ret
ljmp
test
clc
jmp
fucomip
cld
jmp
int3
loop
lret
ror
fcomip
stc
fmul
test
rorl
cld
jmp
out
lock
rcl
icebp
fst
lret
repz
sti
mov
aam
fld
sti
out
mov
xchg
iret
icebp
out
into
out
lret
xor
les
leave
cli
neg
stc
inc
aad
and
out
add
test
in
cld
aam
ss
shl
fadds
int3
and
lret
fldln2
clc
aad
call
in
neg
not
leave
fcmovnb
hlt
int3
jmp
fiaddl
in
out
icebp
cli
into
cmp
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
andl
pop
add
rolb
testb
loop
xor
fsubr
in
int3
cmp
incb
loop
in
out
int
mov
aad
shl
out
stc
mov
ror
cmc
clc
loope
mov
test
shr
xchg
call
xor
repz
fsubrp
aad
rcr
aam
xchg
loopne
lock
xchg
hlt
neg
cmc
xor
cmc
in
pushl
enter
adc
rcl
jmp
int
jmp
lock
aad
in
lret
fcmove
in
icebp
cli
fnstenv
into
ret
jecxz
lock
fcom
iret
pop
test
lret
aaa
cli
out
rcr
ds
add
cmp
in
ljmp
rcr
lock
int3
in
rcl
jmp
fcomip
out
fcmovnbe
int3
fadd
ret
in
aam
jmp
icebp
into
int
lret
xor
repz
xor
lret
aad
addb
lret
popl
call
cmc
jmp
cmp
aam
aas
iret
clc
sti
leave
lret
in
out
sar
roll
cmp
roll
loope
shr
fld
loope
leave
lret
jmp
lret
sti
out
cmc
fcmovu
clc
ds
fiadds
div
ffreep
call
xchg
out
into
loop
repz
xlat
into
hlt
clc
ret
into
std
rol
push
or
in
loopne
test
shl
loop
aam
std
aaa
aaa
push
roll
ds
in
cmp
iret
aas
ret
clc
fdivs
fsubp
not
vpmulhuw
fstp
loope
leave
mov
lret
iret
in
cld
rcl
in
cs
aad
leave
out
fsubr
shl
out
jecxz
ret
sti
sti
fdivr
in
leave
mov
in
mov
repnz
in
cmp
fdivrp
loop
shl
fsub
mov
mov
rcl
enter
cmp
sti
in
fldl
test
out
nop
repz
faddp
sub
repnz
ss
sar
int3
test
hlt
xchg
hlt
loope
out
mov
enter
fmul
in
iret
jmp
lret
xor
in
std
inc
in
sti
mov
fimull
in
xor
aad
cld
shr
lret
addb
cmc
shl
fdivr
jecxz
loop
mov
aam
jecxz
shl
or
lock
leave
cli
rol
loopne
std
test
fcmove
add
shl
out
call
loop
out
test
mov
hlt
loopne
loop
loop
test
aad
fdivr
iret
xor
cmc
fyl2xp1
incl
in
int3
sub
shl
shl
aaa
lret
fsubp
shl
ret
ret
jecxz
xlat
leave
xchg
mov
out
ljmp
xor
shl
aad
ljmp
cmp
in
test
xchg
in
test
icebp
xor
cs
ror
cmp
idivl
mul
idiv
sti
test
in
fcmovnu
mov
lret
aaa
lret
call
cmp
stc
ret
call
cli
ret
adc
fcomip
iret
xor
in
repz
xor
into
fsubr
test
aam
fxch
lea
xchg
cmc
ret
loope
vpaddq
ljmp
mov
jmp
xlat
xor
xor
in
repnz
icebp
repnz
mov
mov
rolb
clc
cmp
fbstp
ss
rcr
cmc
rol
fmuls
in
cmc
ljmp
aas
leave
cmp
aad
and
enter
fucom
in
mov
in
out
lret
rcl
leave
in
rcl
repz
cmc
sar
shl
out
and
neg
mov
lea
repnz
shr
cli
shl
aaa
rcr
int3
aam
jecxz
loope
orl
jmp
shl
lret
into
cmp
out
ljmp
ret
ffree
enter
mov
out
stc
loope
int
loopne
xlat
out
enter
cmp
loop
idivl
mov
fisttps
nop
jmp
ljmp
lret
ret
cmc
roll
or
leave
fdivr
in
test
aaa
xor
lret
leave
jmp
into
ret
repnz
incb
cli
test
lret
rorb
in
hlt
shlb
leave
lret
jge
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
jmp
leave
sarb
int
leave
jle
mov
popa
xchg
or
jl
cmpl
xor
cmp
loopne
fmull
div
shlb
icebp
div
aad
sarl
cmc
repnz
call
cld
in
call
jmp
idiv
jmp
repz
idivl
out
cmp
xor
in
leave
cli
jecxz
int
hlt
call
idiv
aaa
hlt
out
cmc
loopne
in
int
into
fsubr
clc
ljmp
xchg
in
fmuls
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
