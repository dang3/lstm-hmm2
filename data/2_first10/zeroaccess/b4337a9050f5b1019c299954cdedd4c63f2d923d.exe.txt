add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
pop
or
cmp
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
cmpsb
in
sti
cmpsb
adc
xorl
adc
sbb
inc
add
dec
pop
inc
add
add
mov
adcl
jmp
inc
in
xor
inc
in
xchg
cmp
jl
mov
mov
or
jmp
push
mov
adc
loopne
not
ds
sbbl
rorb
sbb
aaa
jae
fs
and
lret
call
jae
mov
sub
push
rolb
adc
cmp
js
sbb
subb
sub
pushf
scas
mov
jge
loopne
push
cmp
outsl
and
or
xor
int3
in
lds
leave
arpl
pop
xchg
fcomps
clc
jns
pop
loope
repnz
idivb
sub
or
lds
jb
push
ljmp
push
push
js
ds
into
dec
add
jmp
jbe
lods
mov
jl
push
test
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
xor
call
jl
jl
mov
movsb
arpl
xchg
repnz
out
push
mov
loopne
or
aad
and
or
adc
jbe
into
push
mov
sbb
adc
sti
jb
cmpsl
jp
pop
sbb
jmp
les
mov
adc
xor
cmc
pop
rcrb
jge
mov
int3
outsb
pop
icebp
mov
mov
cmpsl
pop
sub
mov
cmp
mov
push
xlat
loope
scas
mov
sbb
lds
shll
sbb
sbb
repz
scas
fimull
sahf
add
xor
jge
pop
push
and
testl
dec
in
icebp
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
test
jle
jl
jl
jl
fimull
test
add
hlt
or
sub
jb
push
scas
jno
mov
mov
mov
dec
in
daa
xor
push
sar
or
cmp
sub
mov
jnp
ficoml
js
add
nop
dec
jl
int
incl
test
mov
arpl
inc
bound
dec
mov
lahf
pop
stos
rolb
lods
add
xchg
imul
in
xchg
fists
jb
jg
xchg
mov
and
fidivrl
sub
sub
in
cld
mov
ds
mov
shlb
mov
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
or
sahf
xor
jl
jl
jl
icebp
repz
mov
xchg
cli
imull
fs
add
loopne
push
xchg
leave
or
dec
mov
jno
rclb
ficomps
pop
and
xlat
sub
outsl
insb
xchg
jbe
push
xchg
aas
stos
jp
fimull
mov
ljmp
aaa
fwait
jnp
ja
xor
mov
movl
jmp
mov
lcall
xor
ljmp
fistpl
ljmp
out
sbb
shrl
adc
cmc
repnz
pop
das
popa
xchg
pop
cmp
fisubrs
int
sbb
std
push
jmp
mov
sbbl
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
movsl
mov
jl
jl
jl
cmp
fistpll
dec
lea
and
or
pushw
xbegin
fs
push
pop
mov
std
push
mov
pop
mov
out
push
mov
scas
cmc
push
test
mov
or
xchg
xchg
imul
xchg
jno
pop
daa
mov
mov
pop
inc
sub
aam
push
popw
sub
inc
pop
cmp
mov
push
xchg
stos
or
test
imul
jmp
in
cli
push
or
cmpb
mov
mov
stc
lahf
pop
jb
add
pop
nop
jmp
lock
dec
mov
push
aas
mov
ret
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
mov
lcall
jl
jl
push
out
xor
mov
roll
inc
in
mov
psraw
sbb
sahf
test
inc
daa
rol
ds
sub
inc
fbld
cmc
dec
mov
imul
cmpsb
hlt
push
nop
xor
iret
fucomi
jo
xchg
pop
addl
mov
lds
xor
jge
mov
jmp
mov
out
inc
insb
iret
sub
and
cli
enter
scas
nop
lea
out
pop
loopne
ret
out
lods
lret
dec
pusha
and
inc
ja
cmpsb
mov
aas
aas
jae
fwait
outsb
xchg
inc
pop
xor
push
fwait
lret
adc
and
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
cmpsl
data16
jl
jl
jl
sub
add
test
xor
clc
out
andb
ds
jb
sbb
movsb
push
inc
addb
daa
jmp
push
inc
call
leave
lcall
xor
test
ret
sub
xchg
fimuls
xor
cltd
inc
dec
daa
mov
das
aas
push
jmp
push
pop
dec
int
gs
or
cmp
ja
dec
jne
dec
lds
cmp
aam
or
mov
fisttpll
loope
cmpsb
sub
lret
push
pop
bound
fwait
daa
popf
mov
stos
movsl
cld
das
testl
cld
scas
xchg
pop
sar
test
adc
mov
jne
call
jmp
cld
mov
mov
dec
mov
aad
mov
jl
jl
jl
jno
sbb
dec
icebp
add
mov
and
scas
fistpl
dec
jne
push
and
rolb
xchg
nop
inc
dec
movsl
mov
add
push
ret
popa
or
pop
loope
xchg
shl
stos
add
out
dec
test
cmp
inc
push
das
imul
hlt
push
xchg
push
push
jne
lahf
inc
outsl
repnz
jge
inc
in
xchg
les
icebp
inc
or
aas
scas
sti
pop
shr
lea
popf
fisubs
push
cli
iret
dec
jbe
sub
and
test
test
insb
pop
mov
push
fdivrp
mov
mov
cmp
popa
mov
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
imul
mov
in
pusha
rcrl
add
xor
push
cmp
jno
icebp
int3
lock
hlt
and
movsl
fmuls
movsb
mov
das
pop
out
adc
std
inc
mov
lahf
cmpsb
popf
int
ds
and
jmp
jne
into
xor
push
jne
adc
pusha
jmp
or
xor
imul
scas
fmull
adc
repz
popf
sbb
outsl
int3
aam
std
aas
clc
pop
rolb
sbb
xchg
sub
dec
in
inc
in
mov
jg
cmp
insb
pop
xchg
mov
lds
mov
imul
xlat
mov
and
mov
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
sub
adc
sbb
jl
jl
jl
xorl
cs
cwtl
mov
cmpb
mov
jmp
out
int3
insb
ret
pop
or
mov
adc
sub
daa
jmp
ret
and
adc
fbld
xor
push
sarb
call
cmpsl
into
jo
popf
enter
sbbb
clc
dec
ljmp
cmp
movb
or
mov
inc
xor
addb
push
inc
and
add
sub
rcrb
nop
lods
enter
loop
stos
push
inc
xchg
je
repz
dec
jo
cmpsl
pusha
mull
mov
imul
adc
inc
in
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
aas
jae
jne
jl
jl
jl
fsts
out
pop
cli
and
or
jae
cmpsb
jae
inc
js
add
fwait
push
xchg
subb
inc
mov
push
jo
mov
movsl
mov
xchg
push
lret
cmpsl
js
lret
icebp
lret
sbb
ja
push
rcrl
sahf
jmp
fnstsw
or
stos
sub
xchg
xchg
mov
xchg
rorl
add
mov
adc
mov
dec
and
sub
sub
insb
push
js
mov
cmpsl
dec
dec
jecxz
mov
inc
jns
es
outsb
stos
dec
mov
loopne
loope
testl
dec
or
or
lea
mov
push
pushl
jmp
pop
jecxz
xchg
mov
jb
daa
sub
jl
mov
fstps
leave
add
pop
cltd
mov
push
inc
addr16
outsb
ret
pop
xlat
pop
in
push
test
ljmp
jge
icebp
jns
mov
mov
mov
test
and
cltd
push
cmp
mov
mov
sti
cmpl
push
pop
mov
jmp
sub
out
rcrb
and
mov
popa
mov
pushf
cld
int
xchg
push
popf
test
jle
push
xor
pop
clc
hlt
jg
pop
movsl
jle
sbb
sahf
out
jns
cmp
add
cli
setns
xchg
push
and
pop
mov
data16
cltd
mov
lods
push
aas
pushl
jmp
or
mov
mov
push
int3
xchg
xchg
int
sbb
jl
jl
jl
pop
out
push
decl
les
cld
lds
aas
aad
xor
imul
mov
and
fsubs
clc
xchg
js
std
repnz
fcomps
cld
sbb
shlb
mov
adc
jae
in
and
int
mov
movsl
jnp
cmpsl
jge
rol
jb
xor
jnp
call
test
jns
ret
test
xchg
cmp
adc
push
mov
sub
gs
xchg
xchg
cmp
add
lods
or
xor
push
mov
iret
sbb
cmp
scas
mov
jl
aaa
icebp
xor
xchg
mov
fs
jmp
out
in
ja
call
inc
cld
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
std
pusha
ja
jl
jl
jl
jne
fisubrl
int3
inc
in
xor
cmpsb
jge
pop
xchg
jnp
ljmp
sar
cmp
mov
loop
sarb
xor
fmuls
iret
xor
rcrb
js,pt
mov
in
jp
inc
lock
add
hlt
jecxz
sbb
into
leave
loopne
test
arpl
lea
or
popf
sbb
popf
mov
mov
ret
fucom
out
cmp
incb
imul
push
lds
mov
andb
mov
add
lret
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
jbe
jl
jl
jl
jmp
test
xchg
cmp
mov
arpl
inc
xchg
pop
test
xor
and
cmp
mov
out
rep
bound
mov
sub
xchg
aas
add
mov
sbb
inc
add
test
adc
data16
repz
dec
cltd
test
jecxz
xchg
leave
cmc
sub
xchg
push
andb
cs
cs
shll
and
es
cmp
lds
jp
aam
or
and
jo
mov
mov
mov
int
mov
fcos
mov
call
movsl
mov
mov
mov
jmp
xchg
sub
cltd
cmp
mov
repnz
aaa
fmull
jl
mov
arpl
push
daa
pop
mov
xchg
ds
cld
sbb
xor
stos
dec
xor
inc
add
inc
dec
pop
mov
rcr
push
bndldx
sbb
dec
movsb
push
jg
sub
xchg
jl
dec
int3
cmp
pop
jne
jnp
mov
inc
push
aas
arpl
jmp
lea
pop
bound
adc
lods
in
lahf
mov
popw
dec
mov
mov
mov
je
arpl
cmpsl
xchg
mov
add
cmp
adc
cmc
adc
imul
mov
out
adc
xchg
mov
push
or
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
lock
or
jl
jl
mov
nop
mov
fiaddl
in
pop
mov
sbb
fsubrl
add
sahf
pop
fwait
orb
inc
icebp
xchg
ss
cmp
fcom
das
dec
jge
mov
dec
add
jge
fcoms
jge
mov
test
sub
lods
es
rcr
jg
fwait
loopne
xchg
shll
mov
inc
insb
ficoms
in
insl
xor
nop
pop
sub
and
xchg
and
or
outsl
mov
mov
xchg
mov
pop
ss
and
rol
mov
out
out
js
and
idivb
cmc
mov
xor
add
mov
jmp
and
rep
lods
sti
pop
xorl
repnz
dec
or
jl
jl
sbb
jg
push
and
push
mov
clc
mov
addb
test
dec
dec
xchg
fs
pop
rcll
jle
int3
lret
xchg
mov
pop
outsb
jge
fwait
jno
adc
lfs
sub
mov
idivb
jno
mov
ds
mov
pop
shl
adc
adc
cmc
adc
push
popa
inc
pushf
add
aad
or
or
enter
mov
fisttpl
lea
push
rcrb
pushf
inc
mov
lret
test
mov
enter
sbb
mov
lods
cld
push
xor
mov
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
pushf
ror
decb
jl
mov
pop
fcmovnbe
in
add
hlt
mov
xor
lcall
arpl
push
pusha
sbbb
into
mov
jns
mov
jg
shlb
bound
les
sub
insl
cmp
iret
inc
fldcw
xchg
mov
loope
data16
jp
iret
sbb
push
pop
shlb
insb
and
das
and
xor
lahf
ss
scas
in
cmp
push
or
testb
js
push
test
push
dec
jnp
mov
sub
jae
adc
add
add
dec
in
arpl
push
mov
pop
and
mov
adc
daa
mov
rcl
std
sahf
ds
jmp
mov
mov
xor
jmp
fsub
mov
clc
mov
mov
popf
and
jl
mov
stos
dec
mov
mov
push
gs
aam
mov
aaa
xchg
pop
sub
push
or
shll
lods
call
outsb
push
jmp
sbb
push
mov
pop
out
pop
adc
lods
adc
ret
mov
movsb
inc
in
repnz
xor
gs
mov
scas
dec
add
outsb
jp
pop
mov
pop
in
into
sar
loope
subl
push
mov
enter
cmp
iret
adc
rclb
pushf
mov
div
sub
inc
mov
dec
dec
pushf
movsb
mov
testb
mov
cmpsb
ja
push
xchg
jo
xor
mov
ret
mov
jmp
pop
fimuls
cltd
push
mov
fsubl
or
jl
jl
dec
cltd
filds
sbb
mov
mov
sbb
insl
roll
xchg
push
jl
out
arpl
xor
add
push
insl
cmpsl
or
or
sub
pushf
push
or
arpl
sbb
mov
negb
in
fldln2
jp
hlt
lods
addb
push
repz
mov
sub
cmpl
inc
jmp
addr16
lods
subb
jb
gs
xor
mov
dec
mov
cmp
or
dec
test
push
xor
mov
inc
add
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
subb
js
nop
or
jl
vmread
mov
jbe
faddl
push
aaa
mov
add
add
insl
das
fmulp
out
out
sbb
push
mov
mov
mov
inc
sbb
push
data16
sub
pop
push
enter
mov
inc
shr
mov
bound
jg
push
pop
cltd
xchg
fwait
enter
jbe
bound
shlb
or
sbb
sbb
shrb
sbb
lds
cmp
dec
sub
mov
mov
fwait
pushf
xor
outsb
mov
inc
jle
bound
ss
inc
cli
cmp
push
add
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
push
dec
mov
or
jl
jl
jl
fldl
stc
lods
fiadds
repz
es
pop
push
fstps
iret
add
popa
sub
xchg
xchg
add
popa
pop
cmpsl
mov
and
cs
scas
mov
out
inc
mov
mov
xchg
jnp
bound
lcall
movsb
mov
adc
mov
test
dec
cmp
cmp
xor
push
pop
jg
sub
andl
fwait
scas
sbb
adc
lahf
or
add
fnsave
popa
push
cmp
fxtract
jl
repz
add
xor
push
dec
aas
push
sub
sbb
into
add
add
test
sti
mov
stc
mov
jl
mov
loope
sbb
adc
imul
jge
psubsw
xor
jns
xor
mov
popa
xchg
jge
mov
jne
in
pop
testb
icebp
push
and
xchg
out
fidivs
aaa
cmpsb
addr16
hlt
nop
push
out
sub
adc
shrl
dec
push
jge
sarl
into
mov
dec
daa
inc
jae
xor
mov
addr16
and
ljmp
pop
enter
cwtl
aas
gs
jbe
leave
in
xor
dec
adc
das
ss
dec
or
std
out
and
mov
test
mov
jle
jo
xchg
xchg
jo
jg
dec
xor
add
jmp
dec
jge
cmpb
jge
push
loope
pop
lahf
adc
jl
jl
jl
sub
push
fcomps
roll
cmp
ja
dec
in
sub
mov
sub
mov
xchg
int
add
xchg
fdivrl
outsl
mov
adc
xor
xor
mov
jne
jp
pusha
jecxz
out
jmp
rcl
jmp
add
adc
outsl
cmp
mul
inc
gs
add
xchg
cld
test
sahf
adc
xchg
test
data16
shlb
push
fimuls
adc
sbb
in
hlt
movsl
fwait
mov
add
aaa
cmp
cmp
pop
add
cld
jle
lods
popa
xor
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
dec
hlt
jne
push
jl
into
jg
jl
mov
call
nop
mov
fstpt
lods
loopne
lahf
mov
fistpl
add
cltd
arpl
xorl
xor
or
mov
decb
pop
mov
jnp
lcall
pop
mov
xchg
scas
mov
push
sahf
lcall
je
sub
pop
xor
jo
loop
jl
mov
jns
or
sub
stc
pop
fwait
mov
xchg
xchg
test
ss
ja
jmp
jl
roll
adc
pop
add
mov
imul
pop
lock
xor
jno
cli
jp
mov
movsb
jno
pop
inc
push
mov
push
and
dec
arpl
aam
lahf
push
push
les
push
shlb
dec
orb
sti
cmp
xor
push
rcl
nop
andl
ret
fsubrl
fbstp
push
sbb
movsb
adc
les
popf
shlb
adcb
push
mov
ret
jmp
imulb
call
mov
adc
outsb
pop
ror
pop
or
daa
aas
out
insb
aas
ds
loop
jae
enter
into
lods
ljmp
add
add
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
popf
push
mov
dec
add
jg
jl
je
fisttpll
add
add
aas
in
inc
push
mov
jne
and
inc
lea
fcompp
mov
mov
jne
pop
fisubrs
jecxz
cmp
cli
loop
dec
jge
mov
mov
xchg
dec
lcall
cmpsb
cmpsb
xchg
mov
mov
mov
jmp
ljmp
pop
stos
mov
imull
xchg
je
mov
int
pop
inc
sub
cmovg
test
push
stos
pop
mov
je
mov
adcl
hlt
andb
popa
mov
and
pop
mov
lahf
push
int3
ja
mov
push
sub
xor
add
and
pop
sbb
fwait
lcall
cltd
sub
idivb
cmc
clc
rcr
jns
popa
cmp
fs
in
sub
adc
dec
sub
out
popa
cmp
sub
xchg
mov
sub
cli
cmp
jle
in
imul
cwtl
popa
leave
lea
movsl
cli
push
rcll
scas
roll
arpl
cwtl
movsl
push
dec
xchg
imul
jb
in
fidivl
lods
fwait
call
jbe
pop
mov
jmp
jno
in
cli
insl
cmpl
mov
jl
jg
jl
pop
ja
jnp
int3
outsl
and
pop
ret
push
or
mov
push
subb
and
pop
and
mov
xchg
lret
cwtl
dec
addb
xchg
xchg
mov
lods
xchg
lea
pusha
xor
mov
test
subb
mov
aam
pop
add
add
push
pop
jne
adc
and
and
outsl
and
adcb
mov
lock
pop
jns
push
adc
dec
lock
or
pop
sub
mov
orl
push
repnz
lret
pop
fst
push
cmp
push
jle
mov
fwait
test
adc
cmp
mov
fldt
popf
lock
iret
pop
sub
test
sbb
les
and
and
sub
cmp
movsb
pmulhw
xchg
out
add
push
in
jbe
xor
sub
jle
mov
cmp
adc
shlb
jp
mul
call
push
xor
xor
mov
fwait
or
mov
std
adc
scas
shlb
bound
into
fadds
stos
sbb
pop
push
cmp
dec
add
inc
aas
out
outsb
push
mov
out
outsl
jbe
mov
pop
pop
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
ret
sbb
add
jl
jl
xchg
push
add
ja
sub
pop
lret
or
arpl
pop
mov
int
fdivrp
rclb
mov
add
push
dec
aam
push
and
in
add
jcxz
hlt
inc
std
rolb
sbb
push
and
loopne
fidivrl
inc
jno
les
mov
fcmovnbe
adcl
or
dec
jns
jnp
clc
shrb
xchg
mov
sub
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
out
xor
hlt
jl
jl
dec
adc
rcl
out
aam
cs
imul
imul
xor
outsb
add
fisubs
dec
cmpsb
add
es
fsubl
and
sahf
push
sub
add
repz
testb
push
cmp
xchg
pushf
and
or
outsb
arpl
mov
lea
test
adc
outsb
sub
in
adc
add
fs
sbb
jle
and
loop
jae
in
push
jo
cmp
adc
imul
or
xor
cmp
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
imul
jl
jl
sub
push
xchg
jge
cwtl
add
push
cmc
mov
xlat
fistpll
dec
cmp
push
push
and
inc
sub
std
addr16
push
xchg
ljmp
sbb
pop
cmp
and
ret
ffree
test
dec
movsb
dec
pop
dec
int3
les
dec
fcoml
jg
dec
mov
xor
repnz
les
pop
arpl
stos
pop
stos
mov
jno
lods
mov
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
cld
lcall
jg
jl
dec
hlt
fldl
hlt
test
out
loop
xorb
inc
out
and
mov
sbb
insl
les
loope
nop
push
popf
je
dec
pop
popf
in
mov
je
and
ret
cli
ljmp
loop
xchg
std
xor
icebp
jae
clc
sub
jno
test
dec
ss
adc
sbb
and
adc
movsl
rcll
jnp
dec
jbe
push
fs
nopl
out
add
aas
pusha
jge
cltd
scas
in
lock
inc
popf
int3
lock
inc
cmpl
sahf
and
clc
lea
mov
fucomi
jo
loopne
ds
mov
out
faddl
jle
push
fisttpll
jp
sub
out
mov
adc
cs
inc
jno
fxch
arpl
push
aam
sti
and
cwtl
fcoml
push
push
outsl
sbb
shrb
mul
push
addr16
adc
mov
cli
inc
inc
or
sub
std
add
in
fwait
push
in
or
stos
icebp
test
xchg
mov
ljmp
rcrl
or
push
inc
mov
mov
xor
mov
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
mov
mov
into
pop
jl
xor
jl
dec
es
or
sahf
jb
inc
xchg
add
sub
sbb
sti
sub
ss
inc
cmc
xchg
xlat
gs
mov
mov
lods
movsl
xor
pop
jnp
mov
test
popa
mov
rcrb
arpl
lock
ret
and
inc
jnp
xchg
dec
rolb
ret
cmp
lock
sarb
sbb
ss
push
aas
in
pop
leave
cmpsl
mov
jecxz
stos
je
xchg
cmp
rcr
shlb
xchg
data16
js
shlb
add
pop
loopne
pushf
das
pop
cwtl
jp
add
inc
jle
fcoms
mov
cmp
sbb
sarl
xchg
lret
sbb
dec
cld
and
push
scas
cmp
das
je
and
outsb
push
cs
in
ds
in
leave
mov
mov
js
nop
mov
mov
mov
pop
add
clc
fwait
sbb
adc
sarb
mov
and
out
mov
fstpt
mov
sbb
loopne
xchg
cmp
ljmp
inc
fmull
cmp
and
scas
dec
lret
jmp
ret
mov
sbb
adc
inc
add
push
cld
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
fldenv
mov
xor
jl
sub
es
test
fidivrl
jnp
movsl
xlat
mov
into
fstpl
sbb
test
movsb
jge
mov
and
and
pop
repnz
mov
xchg
mov
dec
xchg
scas
in
cmp
loop
iret
jmp
popa
inc
or
jns
iret
pop
pop
and
jle
xchg
adc
sub
daa
cmp
outsb
sub
cmp
xchg
enter
negl
stos
mov
movsl
xchg
iret
sbb
cmc
xor
int3
sbb
push
call
adc
test
inc
into
or
fs
cmpsb
cmp
out
jle
je
xchg
arpl
cltd
inc
or
jl
sti
sbb
loope
icebp
pusha
xchg
sbb
sahf
out
mov
xor
mov
stos
xchg
sti
dec
dec
stos
aas
cwtl
add
jb
inc
cmp
push
adc
pop
cmovge
cmpsb
mov
push
loopne
lods
popa
jne
or
sbb
push
lds
mov
and
dec
push
sbb
dec
fstl
sbb
and
add
push
popl
or
pop
inc
mov
xchg
in
mov
add
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
xor
jl
xor
jl
xchg
sub
cli
mov
jo
adc
pusha
je
inc
sbb
xchg
ja
sbbb
xlat
xor
sbb
ds
mov
fbld
nop
sbb
xor
xor
mov
ds
sub
std
rolb
pop
in
loop
mov
mov
dec
into
aas
dec
add
sub
cmp
pusha
xor
mov
push
push
cs
lods
sub
adc
xchg
cmp
inc
divb
scas
iret
pop
jne
js
aas
nop
mov
int3
scas
fidivrs
fbstp
mov
inc
or
jp
or
vpcmpgtd
xlat
inc
cwtl
lret
and
fadds
test
icebp
fwait
nop
mov
rorl
pop
dec
dec
and
outsb
or
mov
clc
xchg
and
mov
aaa
arpl
cmpsl
adc
add
cmp
rcrl
sbb
cmp
nop
test
adc
pushf
mov
das
ret
push
sub
push
adc
cmpsb
push
sti
push
movsb
es
sub
ret
lock
mov
test
jp
jb
adc
inc
aas
xchg
les
addr16
mov
sbb
push
in
push
push
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
sbb
jg
jl
or
adc
insb
scas
pop
xchg
icebp
jp
movb
daa
inc
and
ss
sub
or
mov
pop
push
xacquire
xchg
dec
clc
push
sub
xor
je
jp
dec
cs
fdivl
sbb
and
hlt
add
mov
cmp
mov
jecxz
enter
xchg
imul
cwtl
add
sbb
je
cltd
jo
jmp
push
or
subb
ret
pop
jle
fbstp
mov
xchg
mov
test
adc
jecxz
pop
imul
and
sbb
mov
imul
cmpsl
faddl
leave
cmp
loopne
dec
sub
cmp
or
imul
sbb
testl
dec
adc
lret
scas
add
fnsave
sbbb
fdivr
adc
cld
sarl
sub
and
scas
mov
inc
cltd
call
je
mov
mov
addl
dec
xchg
sbb
shll
add
jnp
inc
imul
mov
pop
leave
scas
loope
test
mov
adc
dec
call
add
add
add
add
cld
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
cmp
ljmp
jl
hlt
jmp
or
sub
je
pop
jp
push
aam
mov
cli
sub
xchg
mov
rclb
jo
jbe
xchg
shrb
mov
iret
outsl
jnp
inc
adc
loop
shr
ss
inc
fadds
sub
jo
dec
add
mov
ret
movsb
jb
outsb
cwtl
jb
shll
push
sti
push
divb
mov
test
jb
xchg
cmc
push
clc
xchg
adc
sbbb
push
fs
mov
test
mov
outsl
cmp
xlat
aad
mov
or
adc
clc
xchg
andl
push
jge
repz
mov
cmpsb
ds
test
cs
mov
or
mov
cli
popf
mov
xor
push
xchg
fildll
add
fdivl
and
test
pop
je
mov
mov
pop
bound
enter
cmp
mov
fcomps
repnz
inc
mov
stc
fisubrl
icebp
in
or
repnz
das
and
xorb
lods
insb
cld
les
aad
and
mov
pop
aas
mov
mov
inc
cwtl
sbb
add
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
jecxz
ficompl
jg
jl
aaa
lods
pushf
les
test
in
in
inc
jge
sti
cmpsb
mov
and
and
orb
mov
cmpb
adc
push
pop
inc
push
dec
daa
lret
je
push
ret
ret
xchg
dec
and
mov
cmc
inc
sbb
sbb
jbe
or
xchg
cmp
divb
je
cltd
xlat
dec
shrb
add
push
sbb
lods
adc
lcall
roll
pop
mov
test
aam
pop
cmp
xor
std
cmpsb
testl
and
pop
inc
xchg
push
cmp
dec
int3
jmp
xor
dec
aas
adc
inc
arpl
xlat
pop
cmp
int
xchg
xor
mov
push
adc
cli
arpl
popa
inc
je
int
int
mov
add
add
or
es
inc
lahf
xlat
jno
mov
or
lea
aaa
or
mov
test
fldt
lcall
lcall
in
sub
jae,pt
pop
jnp
sbb
fwait
sub
fcomps
imul
jge
pop
lock
psraw
out
frstor
or
mov
jle
jl
xor
jl
lods
pop
push
fwait
je
pop
ja
push
xor
imul
lret
pop
hlt
daa
adc
push
cs
insl
enter
mov
push
test
test
movsb
and
xchg
or
ret
outsb
jne
int
mov
sti
dec
cwtl
pop
iret
fsubs
push
mov
ss
pop
xchg
mov
pop
sub
adc
push
sub
push
xlat
cmp
icebp
rclb
scas
jno
test
adc
jecxz
les
pop
cmp
or
pop
ds
nop
stos
cmpb
and
dec
cli
mov
in
daa
push
int3
daa
cmp
sti
loop
or
mov
push
aam
push
cmp
push
push
cld
ret
fsubrs
xor
pop
test
rolb
mov
cmp
jge
cmp
sub
das
ljmp
lock
enter
imull
movsb
push
stos
mov
or
adc
mov
fstpt
out
or
enter
mov
into
add
fnstenv
call
aaa
test
adc
xor
jo
adc
inc
jge
in
insb
xor
push
cmp
push
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
in
inc
push
push
cs
in
or
fstp
lods
enter
cmp
jp
or
pop
jne
sub
add
stos
aad
sub
pop
out
sub
dec
sub
cwtl
icebp
out
mov
fisttpl
mov
inc
ds
xchg
cs
loope
mov
cmp
test
or
lcall
loope
das
sarb
xchg
test
dec
mov
dec
add
scas
outsl
adc
xor
inc
or
xchg
push
xor
fiaddl
mov
bt
xor
jecxz
sti
cmp
fsub
lock
aas
jg
or
shl
mov
push
cmc
push
jbe
cmpl
mov
mov
mov
cmp
cli
into
lahf
jmp
inc
jno
and
sbb
sub
lods
or
mov
test
nop
cmpsb
pusha
jg
test
fnclex
aad
and
stc
and
test
jns,pn
add
icebp
shlb
push
mov
xchg
or
nop
cmc
mov
jbe
inc
stc
mov
sbb
inc
and
iret
mov
scas
lcall
inc
out
daa
mov
fisubl
shlb
cmp
call
inc
adc
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
je
jae
mov
jl
xor
jl
xor
arpl
mov
lds
es
push
faddp
stc
push
inc
xor
rolb
mov
add
xor
lods
jb
mov
jl
adc
mov
inc
cld
mov
add
cmpsl
lret
stos
jg
jno
push
dec
les
xor
in
dec
repnz
fdivrs
shr
outsb
popf
sbb
lock
sbb
pop
jge
xchg
sbb
mov
pusha
test
gs
rolb
mov
mov
fisubs
incl
in
test
leave
ficompl
out
mov
pushf
loop
test
lcall
xor
fildl
fucomi
pop
insl
pop
xlat
pop
fstps
loop
pushf
imul
jbe
cltd
xor
pop
lods
fadds
push
sahf
add
shll
cltd
int3
ss
aaa
mov
inc
push
pop
jbe
push
push
sub
xor
sub
fdivp
cmp
aas
jns
dec
cld
mull
cld
mov
jl
stos
inc
xlat
cmp
jg
lock
dec
ds
jo
mov
pop
shlb
icebp
xor
xor
pcmpeqd
addb
sbb
pop
mov
movsl
or
fcoms
dec
xchg
adc
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
mov
stos
adcb
cmpsl
inc
ds
xchg
or
addr16
cmp
scas
push
sub
push
mov
jg
inc
mov
jmp
inc
sub
pop
jnp
sub
xlat
int3
shrb
gs
pusha
add
adc
push
sti
xor
lock
jo
or
mov
ss
sub
sahf
push
gs
push
scas
and
sub
mov
sbb
jns
decl
push
ja
sahf
mov
pop
aam
pop
pop
xor
inc
jl
mov
scas
jnp
into
daa
jl
xchg
pop
out
push
clc
xchg
or
lock
lahf
cmc
popa
inc
add
push
mov
hlt
mov
movsb
jmp
out
or
adc
test
mov
test
negl
cmp
mov
dec
cmp
lcall
mov
push
shlb
mov
or
out
push
dec
movsl
inc
lds
mov
test
daa
in
jo
pop
adc
or
jg
das
pop
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
or
arpl
pushf
push
mov
inc
and
movsl
idiv
pop
aas
out
popa
enter
dec
jp
cltd
add
hlt
imul
mov
dec
sbb
cmp
sbb
shrl
xor
cmp
dec
aas
addr16
stc
dec
lds
fucomp
pop
jnp
dec
gs
stos
adc
push
fsubrs
mov
push
and
add
sub
inc
push
lods
or
addr16
leave
push
data16
adc
xorb
mov
push
mov
int3
cmp
inc
fwait
mov
lea
mov
outsl
in
rcrw
mov
out
sbb
xchg
lcall
jne
in
sbb
test
mov
fiadds
pop
adc
fsubrl
mov
test
and
xor
mov
mov
jae
add
pusha
push
les
ss
fcoml
iret
subl
les
enter
into
call
mov
mov
rorl
mov
mov
jbe
xor
push
xor
mov
idivb
in
and
add
jb
cmpsb
popf
arpl
sub
in
mov
mov
jmp
or
push
cmp
dec
rcrl
sbb
adc
jl
out
decb
insl
stc
arpl
jp
jnp
push
xlat
mov
push
icebp
les
and
sub
jg
or
cwtl
sahf
flds
or
pop
mov
aaa
dec
xor
mov
ljmp
sub
shlb
jne
add
mov
mov
roll
inc
stos
xchg
repnz
cltd
scas
xor
cmp
dec
adc
mov
xor
mov
push
arpl
pop
jg
loop
xchg
aad
mov
mov
lods
out
stos
mov
pop
negl
test
xchg
fwait
or
or
int
enter
sub
sbb
or
dec
mov
mov
adc
mov
lock
jo
loopne
pusha
test
xchg
xchg
call
ljmp
xchg
insb
jmp
inc
hlt
inc
sub
testl
jle
sbb
loopne
jge
mov
push
rcll
sub
sub
shll
add
cwtl
pop
dec
sbb
xchg
sahf
scas
rcrl
fucomi
cld
xor
and
mov
add
rolb
rorl
scas
xlat
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
mov
ret
sti
scas
adc
jl
jg
jl
cs
or
pop
or
and
and
lret
push
or
sub
adc
fistl
sub
or
inc
pop
rclb
push
cwtl
and
mov
sub
push
xchg
pop
xor
loopne
jge
pop
es
subl
movsl
pop
or
push
pop
mov
pushf
xorb
xor
jae
xchg
push
pusha
push
or
mov
mov
scas
sbb
xor
xor
into
lret
push
scas
repz
jne
int
stos
pushf
in
fstpt
cmp
push
mov
cmpsb
xchg
sub
xchg
lods
xchg
test
dec
or
leave
fmull
pop
sbb
pop
arpl
lock
int
repnz
and
sarb
fmul
dec
nop
icebp
int3
and
xchg
jp
pop
psubusb
jbe
enter
cmp
sbb
and
lret
push
test
jle
pushf
dec
rcrl
push
jmp
jl
xchg
je
mov
dec
jle
jne
mov
sub
testb
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
jno
sub
cmp
pusha
xchg
mov
pop
add
xchg
out
cmp
loopne
cmp
ja
cmp
jl
and
and
dec
shr
out
dec
xchg
outsb
add
lea
bound
mov
inc
icebp
scas
lods
or
ret
aam
mov
xchg
frstor
int3
in
and
fs
lret
and
enter
in
lret
and
aas
mov
int
ss
fimuls
pop
and
mov
jg
add
xor
stc
call
pop
dec
aad
pop
ficomps
in
push
add
adc
or
and
mov
mov
in
xchg
dec
pop
pop
jle
stos
or
out
dec
lret
sbb
stos
push
pop
in
and
enter
push
adc
xchg
jge
fiaddl
dec
mov
stos
cmc
icebp
call
mov
xchg
insb
stc
mov
or
aaa
cli
ds
imul
push
push
push
dec
fists
fldcw
fsubl
sub
xor
filds
pop
addr16
cmp
mov
enter
nop
inc
push
sub
lret
mov
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
add
sub
jl
jl
loop
dec
jmp
lods
loope
call
loope
adc
adc
cmp
adcb
jp
repz
enter
ss
adc
cmc
cmc
andb
dec
gs
push
lods
jno
dec
jae
cwtl
ds
cmp
xor
xchg
dec
ret
fldl
adc
cmp
nop
or
inc
pop
fdivrl
in
jecxz
sub
fistps
inc
lock
mov
pop
push
sbb
gs
je
mov
inc
js
add
xchg
push
mov
popf
xor
clc
pop
pop
xchg
leave
std
mov
add
je
xchg
cmpsl
test
inc
lea
aam
ret
inc
outsl
js
sbb
jmp
lret
dec
fnstenv
mov
fisubs
mov
into
mov
pop
data16
jmp
push
sahf
mov
imul
leave
mov
out
mov
in
xor
add
add
icebp
in
fs
jns
adc
jne
push
lcall
jl
jl
loop
mov
lret
mov
xchg
int3
xchg
push
ja
mov
scas
xchg
popf
cmp
xor
test
or
or
and
cmp
stos
xor
pusha
gs
mov
ja
jmp
aas
dec
lock
adc
sbb
add
or
or
sbb
loop
pop
cmp
inc
cld
cmp
int
test
and
push
dec
rorl
das
fcoml
dec
xor
mov
dec
mov
stos
push
iret
mov
icebp
fcmovbe
jb
insl
dec
mov
xchg
fiaddl
pop
ror
aas
ror
mov
lds
push
mov
ljmp
and
add
push
push
push
jbe
lods
test
push
bound
cmp
cmc
movsb
push
pop
cli
inc
sbb
inc
icebp
and
jbe
jle
mov
lret
arpl
cmpsb
loopne
and
pop
mov
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
rcrb
jl
bound
mov
stos
mov
inc
push
iret
jne
imul
or
fidivrs
scas
dec
scas
arpl
cmp
mov
sbb
ja
inc
or
sahf
int
nop
mov
mov
inc
jno
jp
inc
add
or
sbb
and
mov
mov
or
in
mov
xor
mov
xchg
into
pop
call
xor
adc
shll
sti
adc
movsl
cmpsl
es
cmp
scas
lea
push
inc
into
dec
in
pop
rolb
xor
popf
sub
outsl
jecxz
or
mov
daa
push
repnz
negb
movsb
mov
sub
out
push
fcoms
jae
mov
mov
in
in
sarb
push
clc
scas
pop
addr16
aas
push
inc
and
faddl
negb
addr16
rolb
fidivrs
scas
jmp
div
mov
and
or
mov
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
mov
sbb
jl
lret
lcall
jle
je
mov
mov
mov
movsb
rcr
fldl
imul
lods
xchg
imul
mov
cmpsb
xor
fmulp
jne
and
mov
lcall
push
movsl
mov
mov
std
dec
jo
xor
out
data16
daa
cmpl
repz
xchg
jp
add
mov
dec
dec
ljmp
shlb
lds
ret
aam
adc
cmp
mov
push
js
sub
sub
in
pop
ret
pop
lods
push
subl
call
jnp
mov
cmp
adc
mov
push
pop
push
cmp
jg
push
lret
imul
fiaddl
faddl
nop
and
mov
push
xor
xor
sbb
or
sbb
ficompl
loop
sub
xchg
mov
push
shl
test
jg
sub
sub
adc
ret
fwait
scas
add
cld
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
cmp
cmp
jl
sbb
jl
mov
xchg
inc
xchg
mov
outsl
pop
aad
push
sti
push
xchg
daa
sbb
aas
cmp
sbb
push
test
out
shll
and
mov
and
inc
shrb
dec
xor
movsb
pop
out
xor
out
xor
push
or
lahf
inc
je
divb
cld
int
sahf
mov
jne
divl
mov
sub
stos
adc
add
pop
xor
sbb
shll
or
lods
mov
mov
push
decb
in
lods
fmulp
inc
loope
dec
cmpsl
aad
adc
popa
dec
xchg
push
jnp
pop
push
push
sbb
lret
pop
mov
pusha
or
push
push
fbld
add
dec
sub
mov
repnz
fwait
aas
dec
xchg
les
ds
cmp
lret
mov
fs
imul
sti
test
stc
mov
or
xor
int
mov
jb
mov
lods
mov
xor
sti
pop
inc
xor
add
orl
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
add
sub
jl
jg
jl
loope
adc
adcb
outsb
sar
xor
popf
push
inc
shll
adc
jo
push
popf
cmp
adc
dec
rorl
clc
jmp
pop
fistl
out
jg
adc
stos
outsb
push
cld
mov
fwait
jns
xchg
test
or
gs
shrb
cld
jbe
ret
decb
mov
push
pushf
and
stc
setg
ds
pop
jl
pushl
jo
pop
push
xchg
cmp
jb
mov
pop
cmc
xchg
add
xor
ja
dec
sbb
scas
stc
add
in
icebp
cmp
xchg
fidivrl
add
outsl
and
ror
cmpsl
cmp
xchg
aad
lods
jno
fiadds
adc
jo
dec
ret
dec
mov
inc
and
cmpb
cmp
insb
jge
xchg
mov
pusha
mov
mov
aas
cmp
stc
inc
test
test
push
sub
sbb
arpl
mov
lret
loopne
mov
mov
mov
mov
mov
mov
test
jmp
pop
loope
sbb
lret
mov
cmp
cmp
sbb
jl
mov
sub
adc
cmp
or
mov
xchg
and
jnp
ljmp
rorl
out
outsl
inc
jl
mov
xchg
pushf
movsb
dec
addl
mov
in
jle
push
or
jg
and
sub
clc
dec
add
mov
xchg
rcr
push
push
divb
pop
shlb
aaa
lea
cld
or
jae
push
cmp
int
loope
and
cmp
xchg
cmp
adc
call
pop
xchg
mov
int3
mov
push
stos
xor
push
dec
popf
addr16
cs
cli
inc
cmp
xchg
int
into
dec
push
lea
out
test
dec
bound
cmp
xor
and
mov
stos
outsb
mov
jl
mov
loopne
jp
xor
ret
hlt
int3
xor
mov
insb
subl
sbb
inc
or
test
add
add
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
loopne
cwtl
popa
subb
jl
jg
jl
aaa
cld
mov
adc
sarl
push
data16
pop
mov
jge
add
aaa
test
xchg
imul
cmpsb
mov
pop
mov
arpl
jmp
mov
mov
and
sbb
rolb
clc
inc
xchg
in
ficoms
push
jl
sub
jg
sbb
add
push
movsl
mov
push
push
addr16
sar
add
xor
inc
stos
int
clc
mov
dec
subl
jl
pop
cwtl
in
pop
mov
popf
adc
inc
cmpsb
shrl
pop
sahf
push
les
enter
out
push
notb
roll
fimuls
and
loope
mov
mov
push
outsb
jge
das
sbb
xchg
addl
sbb
inc
stos
and
fstl
push
pop
mov
mov
mov
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
xor
push
jl
jg
jl
int3
ret
xorb
jp
sbb
cmp
xchg
sub
sub
loopne
mov
gs
aad
pop
repnz
shlb
inc
les
popa
cmpb
jecxz
fstl
mov
scas
mov
lret
lock
mov
fs
jle
sub
lret
pop
leave
insl
cmp
inc
je
fisubl
xchg
sbb
xchg
cmpsl
imul
mov
fmul
xlat
inc
mov
push
stos
and
mov
sbb
fsubl
movsl
repz
sub
dec
jecxz
cmp
repnz
cwtl
xor
xchg
adc
lods
dec
and
jmp
or
mov
test
fdiv
bound
bound
cmpsb
push
fwait
mov
dec
pop
push
xchg
bound
mov
or
add
test
pop
pop
das
jbe
xchg
add
mov
pop
jae
lods
pop
and
push
xor
pop
mov
cs
xor
jp
inc
bound
or
pop
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
adc
cmp
and
jg
jl
mov
jb
cld
xor
add
sub
push
push
mov
inc
cmpl
xchg
pop
aam
movsl
and
sub
push
jae
iret
jmp
push
pop
jp
fmull
int3
pop
cmpsl
or
lds
cld
jb
fwait
jmp
inc
adc
and
xchg
push
lods
stos
add
mov
adc
nop
mov
outsb
sbb
adc
cld
iret
mov
imul
int3
or
pusha
in
dec
shrb
imul
insb
sbb
or
push
adc
adc
mov
inc
mov
cmp
push
sar
push
jecxz
int
pop
cmpsl
ss
gs
inc
scas
mov
test
cli
or
push
sub
mov
pushf
push
push
add
cmp
cmp
mov
push
repnz
adc
ret
sbb
sub
add
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
addl
jl
or
push
sahf
add
les
dec
mov
fists
inc
stc
cs
mov
mov
add
arpl
mov
sbb
lcall
lods
data16
cmp
mov
jb
fscale
adc
pop
push
daa
cltd
xlat
lods
jp
push
xchg
fstl
pop
xchg
or
test
jle
jle
test
cmpb
sti
fbstp
adc
cld
jno
lahf
sbb
mov
stc
mov
xchg
out
push
out
hlt
or
mov
mov
lods
inc
lahf
leave
in
dec
mov
test
daa
push
rep
mov
push
add
pop
out
push
dec
add
addb
arpl
mov
inc
cmpsb
dec
icebp
dec
xor
jp
clc
andl
dec
cmpsl
mov
mov
mov
xor
jne
aad
stos
cwtl
dec
xchg
scas
std
add
sub
add
sbb
inc
add
or
mov
jne
addl
jmp
push
repz
adc
cwtl
loope
and
jg
jl
or
int
inc
js
icebp
ss
or
xchg
rcrl
push
push
jge,pn
cmp
das
mov
outsb
pushf
jne
lods
loope
nop
mov
out
xchg
sub
mov
popf
add
mov
mov
fdivs
jns
movsb
adc
loop
std
sbb
jp
ret
pop
insb
rolb
xchg
stos
bound
dec
das
iret
push
and
mov
sbb
pop
xchg
sarl
sbb
js
cmp
outsl
out
dec
fwait
mov
inc
addl
push
orl
test
ja
xor
ficoms
xchg
xchg
push
xchg
sarl
xchg
xchg
mov
mov
cld
pop
sbb
pop
stos
lahf
or
mov
pusha
mov
call
jmp
sti
loope
jle
gs
in
add
jae
pushf
lret
popa
out
cwtl
mov
cmpsl
xlat
sbb
mov
jecxz
and
pushl
jmp
xchg
pop
cmpsl
inc
adc
sub
push
mov
jl
jg
jl
in
ds
xor
inc
jecxz
test
cmp
jnp
mov
and
add
push
add
hlt
fidivrs
xor
test
jb
addr16
push
repnz
mov
pmuludq
xorl
inc
xor
jmp
mov
fwait
adc
or
scas
ja
cltd
or
std
arpl
insb
imul
mov
jns
daa
push
fs
dec
shrb
or
mov
sub
mov
pop
cmp
lods
sbb
addr16
stc
adc
and
pushf
jl
mov
outsb
xor
xor
paddd
cld
adc
jle
gs
mov
inc
jne
xor
repz
mov
enter
mov
dec
ljmp
adcl
cmp
ds
cmc
sbb
fldt
pushw
fsubr
call
test
je
sbbl
lea
push
mov
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
and
jl
jg
jl
movsb
jl
push
fldcw
jb
mov
add
mov
pinsrw
sti
xchg
mov
mov
inc
pop
sbb
mov
mov
jb
add
orl
out
mov
popa
mov
push
dec
adc
push
pop
movsb
dec
xchg
xchg
dec
test
xchg
ss
inc
add
fwait
xchg
jbe
adc
scas
sub
jae
mov
imull
mov
add
inc
mov
pop
and
jg
adc
push
jo
mov
push
jno
rcrl
cmpsl
or
scas
sub
inc
mov
ds
mov
push
pop
push
inc
inc
enter
daa
cltd
jnp
adc
insl
dec
sarb
xchg
xchg
mov
dec
add
and
push
gs
stc
outsl
mov
jp
mov
cmp
scas
mov
ffree
inc
xor
ja
scas
je
add
push
jmp
sub
jge
jge
fnstenv
mov
jnp
jl
or
popa
dec
push
repz
inc
add
leave
add
int
or
dec
mov
fucomip
lea
pop
nop
jae
add
leave
jns
and
mov
mov
jb
popa
cltd
lcall
adc
idivl
inc
xor
inc
in
test
and
jecxz
repz
popa
imul
adcl
ret
sub
or
xor
rorl
adc
ss
mov
and
xchg
insl
in
jno
mov
les
icebp
lods
pop
in
inc
test
mov
xorb
jmp
add
jecxz
in
add
insl
pop
lods
jge
inc
data16
js
inc
jl
add
push
jge
je
inc
icebp
and
jns
xor
add
mov
je
pop
in
xor
cltd
sbb
mov
sub
mov
push
iret
cmp
jne
adc
cmp
sbbb
add
add
jmp
in
adc
aaa
sub
jl
or
bound
addr16
ficoms
push
add
lods
std
cld
sbb
pop
mov
adc
daa
adc
dec
pop
jae
mov
pusha
add
out
jae
sbb
mov
dec
jl
test
popa
les
addr16
add
cmp
jnp
xchg
loope
mov
sub
cmp
or
or
sti
dec
mov
push
sub
push
mov
jl
repnz
in
inc
cmpb
sbb
push
push
lcall
jae
mov
inc
scas
and
in
pop
aad
adc
shll
adcb
jbe
xchg
cld
movsl
pop
aas
fcomps
push
pop
xor
add
pop
ljmp
cmp
pop
insb
push
sub
push
loop
outsl
jnp
adc
and
or
pop
add
arpl
sub
stos
add
cmp
ficompl
fistpl
sub
ds
xchg
ds
xor
repz
decl
clc
add
loopne
test
inc
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
fwait
mov
xchg
sbb
jl
or
dec
jne
mov
cmc
xchg
out
jae
fbld
lahf
cmp
cwtl
shr
jle
push
jb
fcomps
mov
fidivl
xchg
dec
push
xchg
mov
sbbb
xchg
jle
mov
loopne
inc
ret
push
and
ja
mov
pop
stos
cli
adc
orl
sbb
dec
xor
adc
sub
push
fwait
sbb
push
ss
outsl
loop
clc
jo
fnsave
idivb
add
mov
mov
mov
pop
outsl
iret
push
dec
in
xchg
mov
jp
mov
scas
jnp
scas
dec
xchg
fwait
in
push
sbb
mov
mov
xchg
cmp
aaa
cmp
cltd
dec
push
cmp
mov
adc
adc
dec
int3
out
lahf
mov
xchg
sub
sbb
test
rcrb
test
in
pop
mov
add
cmpsb
jmp
sahf
or
decl
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
pop
call
or
cli
lret
jg
sub
mov
leave
adc
push
xchg
cwtl
shl
out
cs
jmp
pop
dec
or
dec
xchg
dec
or
mov
dec
mov
repnz
jbe
sub
mov
mov
arpl
loop
movsb
pop
add
enter
push
sar
lret
dec
insl
sub
insl
ret
movsl
push
test
inc
sub
sbb
aam
fwait
divl
sarb
jae
inc
in
dec
jns
addb
or
dec
pop
sbb
mov
insb
jmp
popf
clc
and
fmull
std
jb
out
pop
sbbb
aas
outsb
mov
in
xchg
jp
mov
cmp
out
popf
sbb
stos
xlat
and
push
sbb
push
es
fistpl
xchg
jnp
pop
aaa
mov
pushf
push
repnz
xchg
scas
leave
fimuls
mov
sub
mov
in
add
loope
sub
mov
cs
xor
sub
adc
dec
rolb
enter
add
xchg
out
std
push
gs
repz
mov
daa
cmp
jg
jl
les
push
mov
xchg
sub
push
xchg
jno
int
mov
sbb
pop
jno
push
push
adc
cmpsl
mov
sbb
sub
push
sbb
int
dec
push
adc
fisubs
mov
adc
sbb
push
and
fisttps
xor
aam
sbb
ret
pop
and
mov
std
pop
mov
xchg
repz
ficompl
cmp
add
ret
inc
negb
cltd
cmp
mov
pusha
adc
add
outsb
and
or
cwtl
out
out
adc
clc
imul
loop
das
push
xchg
sub
jp
ret
enter
xor
adc
faddp
loope
adc
loop
in
mov
lock
scas
mov
clc
inc
push
adc
test
sahf
arpl
in
fs
dec
xor
cltd
mov
mov
in
repnz
push
shll
pushf
gs
inc
jmp
mov
daa
or
loope
popf
pop
add
in
stos
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
arpl
jl
or
rcrb
adc
cmp
jl
cmp
jne
inc
pop
and
test
int3
jl
ja
pop
fnstsw
bound
pop
jae
and
cmp
jmp
ret
test
or
lahf
cmpb
xchg
or
inc
mov
clc
add
pop
or
and
mov
or
in
testb
shrb
xor
movsl
or
mov
dec
dec
push
push
fwait
testl
fbld
adc
inc
mov
imul
mov
in
aas
enter
or
in
data16
xchg
mov
add
and
mov
notl
cltd
xor
out
lcall
mov
std
inc
out
aas
int
add
je
mov
adc
faddl
ss
pop
pop
add
inc
mov
mov
jne
jle
inc
and
xor
cmp
ret
adc
xor
add
xor
add
xor
add
xor
daa
add
add
lret
mov
insl
lods
test
jbe
lds
jl
jg
jl
insl
add
sbb
cltd
push
pop
mov
lahf
mov
shl
jmp
std
adc
mov
fstpt
lea
scas
pop
js
jmp
aad
push
stos
xor
imul
adc
std
mov
and
dec
ficompl
rorl
into
das
mov
mov
movsl
pop
ret
out
sbbl
lods
cld
aaa
cmc
sbbb
pop
xchg
orb
rcrb
shl
mov
arpl
test
icebp
icebp
mov
popa
dec
mov
push
lcall
in
jp
enter
cld
cmpsb
scas
sbb
aam
cmp
pop
jmp
sub
dec
or
rcrl
fcom
shlb
inc
sub
adc
adc
sbb
mov
movl
clc
ss
mov
xchg
dec
mov
aas
jmp
loope
mov
inc
jle
cltd
mov
push
out
push
jge
popf
iret
scas
mov
test
inc
or
cmp
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
or
jl
or
test
je
sbb
ficoms
cmpb
or
lods
call
ja
sbb
hlt
dec
mov
outsl
dec
adc
call
notl
inc
mov
mov
push
mov
sti
jle
fdivrl
xor
mov
into
into
xor
adc
in
repnz
addr16
stos
mov
mov
jb
and
xor
lods
arpl
loope
dec
ja
loop
scas
fs
jo
mov
push
int3
je
shlb
mov
xchg
and
inc
adc
cmp
xchg
fiaddl
and
xor
movsl
lods
fdivrs
lods
call
shrb
cmp
push
es
jo
es
outsb
ret
lock
sbb
iret
jle
test
push
andb
sub
out
inc
sti
add
addr16
xor
enter
or
hlt
fldcw
pop
pop
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
rorl
and
push
jg
jl
inc
inc
jmp
into
push
xlat
xchg
shll
mov
mov
push
sbb
cmp
jmp
outsb
cmc
jp
sub
jl
loopne
sets
or
mov
je
mov
ljmp
cmc
addr16
sti
pop
aam
repnz
int3
pushf
or
jb
jp
lret
inc
fucomi
outsl
cmp
pop
mov
push
cwtl
sub
icebp
xchg
jbe
mov
mov
sub
rcrl
js
sub
rol
xchg
cmc
mov
mov
cmp
gs
jg
adc
lahf
mov
xchg
stos
or
es
mov
sbb
adc
xchg
int
aaa
sar
dec
ret
sbb
fistps
push
jmp
shlb
cwtl
ror
out
sti
stos
jae
pop
adc
iret
inc
aam
iret
xor
mov
out
jecxz
andb
push
in
pextrw
xchg
cmp
lret
rorb
push
xor
add
insb
pop
xor
clc
push
ret
int3
repz
sbb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
aam
das
xchg
cld
cld
jnp
cld
add
xor
lods
or
popa
pop
or
lahf
test
inc
cmp
enter
jmp
scas
xor
inc
pop
mov
push
leave
dec
push
adc
dec
out
fisubl
sbb
pop
loopne
cwtl
inc
push
jg
jbe
aaa
lock
icebp
jl
mov
shll
or
mov
das
push
jg
sub
xchg
xchg
push
jp
xor
xor
daa
lock
pop
adc
dec
ss
and
add
mov
rcrb
aas
in
popa
ds
cmp
pop
gs
jmp
fstps
roll
and
cwtl
xchg
mov
inc
je
loopne
out
push
pop
cmpsb
mov
and
push
mov
or
inc
mov
sub
fimuls
cld
jp
psrld
jbe
mov
sahf
outsb
lock
jnp
aaa
aas
xchg
bnd
in
es
je
sub
sti
lock
jae
push
sub
inc
or
popf
es
mov
xor
add
movsb
flds
xor
fstpl
xchg
xor
jg
jl
sbb
jbe
test
sbb
inc
cmpsb
push
pop
aaa
sub
mov
push
fwait
arpl
push
cmpl
add
loope
ss
jge
push
arpl
imul
pushf
push
mov
in
push
add
cmpsl
and
shlb
fisubl
mov
sbb
push
fisttpl
cli
pop
cmp
add
cld
adc
imul
popa
push
out
mov
xchg
in
or
pop
xchg
pop
out
outsb
stc
cmp
xor
jne
repz
aad
mov
cmc
mov
mov
out
stos
mov
mov
clc
scas
jmp
fs
lds
sub
xor
mov
push
sbb
mov
xchg
and
mov
ret
imul
push
xor
and
push
rcrb
lret
xchg
mov
xchg
adcb
ret
cmp
push
xor
mov
add
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
lret
dec
mov
jl
push
jg
jl
fnstsw
sbb
out
arpl
adc
out
mov
inc
fisttpll
xor
xorl
cmp
xchg
test
ret
idivb
jmp
repnz
sub
inc
cmc
vmovd
push
pop
pop
mov
lods
lcall
mov
sub
fists
xor
ret
fmuls
lret
fcomp
lea
test
xchg
rcrl
and
cwtl
sbb
or
sub
lret
shl
lret
or
push
stos
in
test
jnp
inc
sbb
adc
fldenv
loop
mov
aas
mov
test
add
xchg
sub
aad
clc
sti
xor
lea
jg
bnd
in
lods
and
sub
or
inc
mov
jbe
and
shrb
xchg
ret
clc
cmpsb
mov
jbe
jne
aaa
int
jg
nop
xor
stos
or
sub
adcb
sub
in
inc
sti
sti
orb
out
fld
add
sbb
rolb
add
push
add
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
stos
mov
pop
xor
jg
jl
loop
rol
shlb
mov
mov
setnp
out
xchg
push
xor
cltd
mov
call
xor
ss
push
cld
and
jecxz
ret
jne
cli
fldenv
repz
inc
loope
push
popa
loope
add
shlb
pop
sub
xchg
jb
sbb
daa
cmp
les
outsl
xchg
test
decl
data16
fs
sahf
ss
mov
xor
xchg
xchg
addr16
pop
call
pop
cwtl
or
int3
testb
fsubs
push
push
xchg
inc
stos
fisubrs
stos
xor
xchg
mov
add
pop
sub
pop
leave
mov
sbb
je
mov
cld
xor
mov
sub
ret
jbe
out
shlb
push
nop
mov
sub
lret
mov
mov
mov
xchg
inc
mov
jnp
rorl
push
push
dec
mov
js
shlb
mov
mov
inc
xchg
div
mov
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
mov
xchg
xchg
jl
push
jg
jl
sub
pop
jb
out
lds
xorl
push
xchg
out
test
outsb
inc
mov
add
sbb
lahf
dec
mov
push
mov
cli
cmpsb
ror
or
pop
cmp
adc
jae
fidivs
into
sbb
in
nop
ja
lods
rcl
das
cmp
cmpl
mov
inc
fs
sbb
and
and
js
imul
inc
mov
push
push
hlt
inc
add
add
pop
out
mov
clc
mov
jmp
xor
mov
insb
inc
pop
loopne
mov
and
jg
dec
and
clc
sbb
sbbb
xorl
std
fidivrl
rcrl
mov
sbb
jnp
in
je,pn
cmp
clc
fwait
lods
push
leave
mov
push
fisubs
rcrb
scas
jae
mov
test
push
cmpsl
jb
jp
lods
adc
lret
shrl
ficomps
cmp
inc
lock
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fbld
jl
push
jg
jl
push
fs
ds
add
pushf
sbb
stos
outsb
std
mov
jp
stos
call
push
jns
scas
dec
sti
scas
dec
mov
inc
gs
add
mov
mov
or
push
int
pop
daa
cwtl
mov
sbb
adc
das
push
jae
inc
lcall
add
aas
sbb
stc
add
pop
push
jbe
lret
movsb
push
sbb
jns
xchg
push
add
mov
pop
jnp
inc
xor
push
les
push
adc
aam
repnz
pop
js
scas
out
push
lret
outsl
loopne
sub
push
ret
pop
orb
adc
or
adc
add
ret
and
repnz
push
push
pop
jno
shlb
rcrl
sti
sbb
loopne
xor
jb
add
or
jp
pop
popa
push
inc
pop
js
leave
inc
mov
out
fsubrl
xchg
sbb
xor
xchg
jge
add
cld
loopne
fdivrl
out
out
xor
mov
or
inc
clc
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
mov
lea
sub
cld
stos
push
test
aas
mov
mov
imul
and
inc
int
inc
pop
cmp
inc
pop
jbe
xchg
pop
mov
xchg
or
cs
sar
iret
fcomip
jmp
stos
in
icebp
cld
les
daa
xchg
xor
push
mov
mov
add
sbb
int3
aad
mov
mov
adc
lret
push
mov
daa
sti
push
ljmp
cmc
mov
into
and
cmp
ja
psrld
add
inc
jle
mov
jmp
xchg
nop
ret
mov
insb
mov
loopne
sti
sbb
mov
imul
xchg
mov
daa
neg
mov
inc
rorb
lea
les
adc
ja
fs
and
cmpsb
lahf
lea
jl
roll
lret
movsl
inc
cmp
lahf
mov
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
xchg
shlb
leave
jl
push
jg
jl
repz
repnz
daa
dec
loope
push
and
lret
ja
adc
test
cmp
xchg
aas
inc
jge
mov
mov
mov
cmp
add
scas
fisttps
ljmp
push
mul
cmp
test
mov
sub
pop
cld
hlt
aas
and
rcr
jg
into
cmp
clc
out
mov
dec
nop
sub
aas
test
or
push
push
sub
mov
push
imul
aad
out
daa
in
jb
or
mov
ds
aaa
fisttpll
xchg
sub
mov
test
test
loope
ficoml
dec
mov
xor
sub
jb
and
push
or
or
cmp
pop
add
add
adc
popl
ds
leave
test
das
cmc
inc
jl
cld
cwtl
and
inc
mov
outsl
jg
pop
cmp
repz
idivl
add
clc
xchg
fsubs
mov
in
dec
hlt
and
insl
add
inc
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
in
sbb
jl
push
jg
jl
mov
adc
stos
add
ret
inc
lds
cmp
inc
lahf
push
and
lods
gs
addr16
mov
push
pushl
jbe
cwtl
nop
pop
cli
and
inc
jl
xchg
mov
jbe
outsl
pushf
pop
hlt
add
imul
push
fidivs
dec
adc
out
xchg
mov
push
pop
fwait
jge
xchg
scas
pop
push
sbb
sub
gs
loope
mov
mov
or
or
adc
sub
push
push
xor
pop
push
mov
jmp
into
fmul
jl
mov
lea
inc
sbb
pop
adc
sbb
gs
andb
lret
or
cmovl
cmp
dec
sbb
mov
sub
mov
add
shlb
les
incb
stos
mov
aad
jp
pop
mov
jle
or
ss
in
fwait
insb
out
xchg
mov
rorl
and
xchg
rclb
sub
xchg
ljmp
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
or
lret
jl
mov
jle
sbb
jnp
out
outsl
dec
cmpl
adc
je
fstl
icebp
dec
pop
xor
out
dec
daa
push
adc
adc
xchg
cltd
mul
imul
xchg
jle
push
xor
jbe
dec
xor
cmp
cmp
into
test
sarb
mov
dec
fwait
int3
inc
push
sarb
es
adc
mov
sbb
pop
bound
lea
das
js
data16
cwtl
loopne
jno
mov
rcll
adc
add
imul
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
fiaddl
jae
jl
mov
ds
inc
dec
cltd
inc
sbb
mull
bnd
mov
sub
inc
lret
sbb
fwait
sahf
gs
cmp
add
aam
stos
outsl
adc
mov
push
jno
out
jae
cmp
xor
vmovdqa
mov
call
sub
mov
lods
ret
addr16
sbb
fidivrs
dec
pop
hlt
mov
movsb
loopne
sarb
faddl
roll
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
inc
or
cli
loope
pop
cmpsb
movsb
lret
cmpsb
leave
loopne
inc
pusha
dec
sarl
fcmovbe
cmc
call
xchg
add
pop
xor
sub
loop
out
xor
xor
sub
cmp
xor
shrb
hlt
dec
sbb
mov
xor
inc
mov
enter
inc
das
es
mov
test
fisubl
pop
rcpps
into
cmp
aam
cmc
mov
lcall
aam
cmp
push
dec
mov
loopne
mov
xchg
test
mulb
sbb
lret
adcl
je
shll
push
mov
and
xlat
ljmp
outsb
fs
fisttpll
nop
aam
pusha
in
xchg
jb
pop
mov
inc
add
mov
shlb
call
lods
adc
dec
pop
leave
cli
and
ret
cmp
rclb
mov
imul
dec
arpl
shl
jge
test
fwait
pop
lods
lock
loope
fidivrl
pop
stos
push
xor
cmc
mov
xchg
sub
jl
or
imul
rol
jo
mov
xorl
mov
andl
xor
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
imul
jl
daa
jg
jl
repz
aam
mov
insb
je
les
cli
push
fnstsw
cmovnp
aad
gs
fnstcw
faddl
lods
mov
mov
aaa
push
insb
mov
push
fisttps
xchg
push
inc
in
inc
sti
push
pop
das
mov
rcrb
xchg
xor
or
addb
adc
pusha
push
mov
jecxz
dec
and
sub
mov
jg
push
std
aad
xor
adc
dec
push
mov
mov
push
pop
mov
pop
mov
cmp
mov
insb
mov
sub
pop
jp
lret
mov
and
cmpsb
add
sbb
in
fildl
movb
fst
leave
add
enter
shlb
lcall
xchg
cwtl
cmpsb
and
sub
pushf
pop
jo
xchg
fistl
dec
xchg
sti
mov
xor
inc
push
cld
icebp
mov
stos
sbbb
mov
pushf
pusha
mov
lods
faddp
and
popa
int
xor
add
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
inc
jno
jl
daa
jg
jl
mul
lds
and
mov
mov
jl
dec
sbb
xchg
stos
je
mov
sbb
add
add
lcall
sub
pop
mov
or
inc
cmp
xor
adc
jge
jle
inc
xchg
cmp
mov
or
cmpb
inc
jns
orl
dec
mov
js
jmp
ds
gs
js
test
out
cli
roll
hlt
mov
lcall
cwtl
jae
fistpl
cmc
xchg
jl
arpl
ret
lret
mov
call
xorb
call
push
test
sub
push
ret
xor
rolb
int
cmp
adc
std
mov
xchg
sub
mov
sbb
incl
repz
test
mov
add
mov
mov
sub
in
push
xchg
sub
dec
dec
loope
lods
inc
pop
adc
ficompl
add
popf
mov
hlt
ficoml
cmc
sub
orb
mov
inc
mov
add
inc
xchg
add
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
out
xchg
add
cmp
jl
daa
jg
jl
adc
cmp
or
lods
repnz
or
inc
adc
call
ret
inc
dec
cltd
and
repz
cmpb
nop
loopne
push
xor
movsl
xchg
adc
adc
push
arpl
out
push
stc
and
clc
xchg
pop
cmp
call
xchg
pop
inc
ret
and
fildl
adc
ds
and
inc
mov
inc
in
mov
jns
out
loop
cmp
inc
and
xchg
jmp
add
push
repnz
pop
add
pop
mov
rolb
movsl
jg
or
insl
inc
dec
out
cmpsb
dec
push
cmp
cli
shrl
lcall
bound
lret
sbb
cmpsl
jo
fs
push
hlt
in
cmp
mov
mov
mov
aad
or
fwait
shrb
daa
cmp
xchg
cmp
fwait
and
sbb
xor
adc
adc
xchg
pop
int3
pop
cld
icebp
sysexit
out
shrb
outsl
bound
inc
stos
xchg
add
push
push
sub
cwtl
jns
in
aam
fmulp
add
jae
pushf
frstor
lods
sbb
mov
cli
jmp
push
jecxz
subl
call
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
mov
jl
jg
jl
sahf
dec
push
push
and
arpl
jne
sub
adc
loopne
mov
jg
insb
shrl
xchg
inc
or
and
mov
pusha
inc
lock
lods
xchg
jbe
xor
cmpsl
repz
pop
pop
or
roll
test
cmp
pop
out
cs
inc
dec
fcomp
js
xchg
sub
add
pop
gs
sub
push
push
xchg
inc
cwtl
fldcw
leave
in
mov
repnz
lods
ror
fcmovne
pop
inc
and
js
fldt
sbb
inc
hlt
adc
inc
mov
jno
shll
test
dec
and
cmc
add
cmc
pop
or
scas
aaa
icebp
xchg
adc
outsb
pusha
lods
in
or
xchg
xor
std
jl
push
adc
sub
inc
sub
push
cltd
xchg
pop
jecxz
ret
js
out
mov
hlt
add
push
fsub
and
sbb
imul
jecxz
and
cs
mov
adc
sub
and
cs
out
push
jbe
jne
push
push
mov
rorb
cmc
pushf
cltd
and
nop
mov
or
or
imull
pop
or
xor
inc
push
push
rcrb
cs
inc
aad
mov
mov
adcl
add
xor
jmp
add
in
arpl
cltd
jp
fldenv
mov
jl
lret
jl
scas
shll
lock
xchg
inc
xorl
pop
dec
bswap
push
or
inc
in
addr16
or
dec
hlt
and
or
adc
mov
stos
mov
out
loopne
addl
push
repz
jo
push
and
int
cmp
mov
adc
xor
sbb
lods
cmp
fsubl
and
xchg
pop
dec
mov
and
mov
shll
add
bound
cmp
or
pop
lahf
pop
addr16
inc
xor
call
lods
cmp
push
ficompl
outsb
pushfw
imul
xor
stc
or
jl
stos
into
insb
out
sbb
or
dec
aaa
inc
sbb
jmp
dec
lcall
dec
inc
inc
dec
inc
push
lret
in
xchg
cli
cmp
push
cmp
and
addr16
imul
mov
ss
cwtl
repnz
mov
mov
sub
jo
xchg
xor
loope
aam
inc
cmc
jl
xchg
push
jo
outsb
sub
jle
mov
loop
imulb
mov
sbb
or
out
hlt
ja
adc
dec
cmp
loope
notb
xor
repz
cmp
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
pop
adc
xor
adc
shl
inc
push
jne
or
sub
in
push
sub
mov
leave
cmpsb
cmp
pop
stos
add
cmpsl
pop
add
push
scas
lret
fldcw
loopne
or
test
xor
ror
or
aaa
jno
out
xchg
dec
std
xor
xchg
lock
inc
leave
cmpsb
daa
jbe
adc
iret
stc
rcll
ljmp
and
push
aad
cmp
inc
mov
in
loope
push
push
icebp
out
outsl
flds
in
addr16
jne
jne
pop
jg
cmc
mov
push
pusha
ja
dec
xor
mov
xor
clc
push
imul
bound
sub
push
xor
add
and
lods
shll
lods
xor
pusha
cmpsb
add
add
push
add
inc
movsl
shl
dec
xor
sbb
or
push
push
or
pushf
sub
sbb
idivb
xor
pop
push
icebp
pusha
outsb
fsubs
pop
mov
or
int3
jl
daa
imul
cmp
shrb
popf
push
mov
adc
and
mov
ja
ds
testl
mov
shll
mov
aas
int3
call
pop
je
mov
jmp
jmp
xchg
test
loopne
bound
add
andl
jl
lret
jl
mov
aad
cmp
jns
stos
xorb
cmp
les
stos
mov
sbb
fimull
in
cwtl
scas
imul
sahf
cli
out
mov
int3
add
imul
add
imull
shr
and
push
cli
js
loope
mov
mov
scas
cmp
adc
or
xor
mov
iret
sub
lahf
sarl
lea
dec
repnz
mov
mov
imul
int
mov
mov
cli
bound
lds
pop
adc
bound
xor
mov
pop
pop
popf
fstps
mov
pop
xchg
movsb
imul
xor
mov
test
stc
rol
lret
dec
mov
pop
sub
adc
mov
mov
adc
xor
addr16
jb
inc
pop
and
push
stos
repnz
lcall
sbb
shll
adc
sbb
mov
pop
sub
shl
fwait
bound
mov
mov
and
or
out
cwtl
push
fcomip
jne
mov
jmp
aam
rolb
pop
fs
jge
fisubrs
in
stos
les
jg
jl
fwait
not
mov
fistpll
dec
mov
stos
mov
fildl
lret
mov
mov
pop
addr16
shlb
inc
pop
or
xchg
push
inc
mov
gs
inc
repnz
xchg
les
cmp
sub
jo
cmpsb
inc
ss
in
mov
or
inc
scas
push
dec
scas
int
shrl
adc
or
mov
or
test
addl
mov
shrl
mov
mov
or
nop
dec
stos
xchg
nop
xor
test
mov
mov
push
mov
sbb
push
test
xchg
stos
pop
jp
push
cltd
sub
icebp
movsl
pop
and
cmp
dec
xchg
syscall
inc
cmpsl
jo
into
es
pop
cmp
mov
jl
xchg
xchg
cmp
aaa
push
mov
arpl
or
aad
mov
pop
dec
insl
ljmp
push
pop
mov
cmc
inc
movsl
push
jp
add
popa
sahf
mov
sub
push
out
ss
movsb
arpl
ds
dec
imul
ret
mov
loopne
std
pop
mov
and
mov
jno
xor
push
mov
jp
ret
enter
adc
ret
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
outsl
and
loope
add
pop
add
xor
pushf
or
outsl
add
pop
shll
jle
js
sti
pop
jns
sub
mov
in
cmc
aaa
or
cld
lods
push
sbb
adc
ret
enter
cmp
cltd
jge
mov
dec
lock
add
adc
aad
or
test
xchg
stos
xor
sbb
js
ret
int3
sbb
push
adc
and
mov
scas
jnp
in
nop
jbe
push
xor
adc
sti
frstor
add
push
andl
sub
dec
push
cmpsb
cmp
pop
cmp
sahf
loopne
fdivrl
fsubs
mov
fistl
sub
fwait
int3
xor
jge
push
and
nop
sub
repnz
jno
das
adc
ss
sbb
cmp
add
adc
rcl
push
aaa
aam
inc
je
dec
mov
notl
aaa
mov
iret
fldenv
jns
ja
daa
gs
dec
fildll
jo
sarb
stos
jnp
jb
sbb
mov
in
clc
pop
lret
pop
sub
xor
ja
movsl
mov
in
mov
test
movsb
in
int3
mov
sar
inc
pop
and
fistl
jno
xor
jno
xchg
mov
jmp
adc
jmp
in
popa
fldenv
addr16
aaa
xchg
or
mov
inc
repz
test
mov
js
mov
cli
add
xor
ja
add
add
dec
mov
cmpsb
scas
jl
push
insl
xor
cli
ja
mov
scas
mov
sahf
push
and
shll
lcall
fmuls
xor
in
ljmp
lret
cmpsb
push
jg
pop
lods
mov
sahf
mov
jle
fs
mov
jecxz
mov
cs
push
mov
jne
sahf
or
mov
dec
or
loopne
mov
imul
sub
pop
mov
cmpsl
add
add
aaa
ljmp
and
sbb
movsb
in
pop
lcall
jg
dec
mov
mov
mov
lea
push
push
push
sbb
jno
jo
xchg
sahf
sub
mov
mov
pushl
in
cmp
push
scas
pusha
dec
out
pop
xor
xchg
dec
dec
cmp
mov
cmp
shlb
cld
or
cmp
or
ss
and
inc
xor
and
andl
sub
test
and
loope
dec
adc
push
mov
and
addr16
outsl
enter
pop
and
mov
or
add
fs
xchg
in
xchg
dec
push
dec
mov
inc
xor
icebp
inc
popf
pushf
sub
pop
pop
int3
jge
inc
or
decb
lock
lahf
cmp
push
add
das
shl
push
fistpll
or
clc
inc
mov
shlb
pop
cmp
dec
jle
push
test
mov
orb
jg
in
cmpsb
jae
aas
or
out
jg
imul
test
aad
or
push
dec
mov
fisubl
xchg
jmp
mov
xchg
add
jmp
pop
push
xchg
add
aam
notb
mov
jl
pusha
lret
jl
fidivrs
scas
lds
jne
frstpm(287
xchg
xchg
jns
jns
dec
les
ds
cli
inc
inc
loopne
fnstenv
sti
jnp
mov
in
jb
mov
lock
push
in
lret
imul
test
mov
and
xchg
and
sub
jno
xchg
sub
inc
xor
shlb
jg
push
mov
int
jno
daa
xor
inc
js
sbb
sarb
xor
movsl
es
or
mov
cs
pop
add
aaa
dec
mov
cmp
mov
das
mov
sbb
into
sbb
stos
push
lcall
imul
mov
rcl
fwait
dec
jne
mov
inc
leave
dec
pop
pop
jl
push
push
push
stc
inc
dec
sbb
pop
je
call
adc
mov
lret
sbb
fwait
xchg
popf
lods
xor
sub
sbb
sahf
lods
sbb
xor
outsl
cwtd
mov
orl
lock
mulb
testl
push
inc
mov
sahf
int3
mov
out
mov
shrb
addr16
xchg
std
iret
subb
fisttps
push
icebp
stos
sarb
mov
xor
repnz
fadds
push
stos
adcb
loopne
cs
inc
mov
lret
or
mov
jne
adc
cld
out
aad
imul
mov
pusha
pop
jno
lds
adc
in
mov
imulb
popa
sarl
movsb
xor
test
xchg
movsl
xor
jl
sti
jl
mov
xor
loopne
jg
flds
adc
int3
xchg
sti
ror
or
jno
inc
enter
mov
fwait
mov
sub
daa
sub
add
out
mov
lret
and
je
out
mov
shrb
je
sbb
push
fisubrs
mov
mov
sub
aaa
pop
aaa
mov
cltd
adc
mov
mov
je
mov
mov
sarb
fdivrp
sbb
adcl
pop
mov
js
test
lret
out
int
and
inc
or
rorb
in
jmp
mov
nop
in
mov
pushf
jg,pt
xchg
ret
stos
inc
xchg
clc
cmpsb
inc
sub
add
mov
or
int3
repnz
popa
xchg
inc
call
pop
mov
mov
sbb
call
neg
lcall
and
fisttpll
lods
leave
mov
int3
scas
cs
sbb
shll
movsl
cmp
vpcmpeqb
dec
stos
mov
add
cmp
mov
xor
in
push
subb
mov
sub
cltd
lret
inc
outsb
jb
loopne
mov
das
jp
sarl
jbe
inc
in
imul
int
inc
cmpsl
lcall
add
push
and
aaa
in
nop
cmp
cli
popf
jno
xlat
outsb
adc
xchg
mov
aad
pop
add
inc
call
xchg
ret
popf
test
lahf
adc
sbbl
mov
push
int3
lods
mov
mov
dec
cld
dec
imul
and
add
xor
popf
adcl
adc
mov
ret
sub
lcall
mov
and
pop
mov
pop
add
jmp
jns
inc
aaa
adc
imul
pop
push
inc
insb
call
pop
mov
loop
test
cmc
outsb
fs
dec
jae
adc
jo
xchg
js
pop
push
jb
sbb
push
cmpsl
jmp
cmp
dec
imul
xor
pushf
xor
xchg
pop
add
mov
std
test
int3
mov
jp
imul
jno
mov
rolb
pop
push
pop
xchg
mull
arpl
sub
sbb
addr16
dec
loope
dec
sbb
cld
jg
cwtl
push
fs
sub
xchg
or
idivl
inc
pop
outsl
and
inc
test
in
push
mov
scas
loopne
std
push
repz
test
hlt
xchg
rcll
push
ds
roll
adc
popf
dec
scas
lods
dec
xchg
jge
cmp
sbb
push
or
jbe
pop
out
das
dec
mov
gs
xlat
mov
arpl
cs
shll
add
push
sti
mov
xchg
mov
cltd
push
push
js
mov
cmpsl
hlt
leave
fucomi
in
dec
inc
out
jmp
popa
adc
xor
in
imul
cli
inc
insl
in
push
ret
mov
add
enter
and
mov
and
int3
dec
adc
loop
and
jo
mov
hlt
imul
mov
int
ljmp
fmuls
cmc
imul
stos
loope,pn
mov
ja
add
xor
push
jne
xlat
dec
lcall
mov
call
shll
add
jb
xchg
mov
scas
mov
iret
fstpl
push
xor
sahf
cmp
push
mov
out
push
jo
add
mov
mov
push
cmp
subl
ficomps
pop
push
xor
sbb
pop
cld
cmpsl
movsl
mov
push
and
adc
sbb
push
pop
popa
movsl
sbb
or
or
movsb
or
mov
fisttpll
cmp
adc
fnstcw
mov
pop
in
dec
lods
arpl
lret
std
popa
stos
jns
jl
push
movsl
or
mov
imul
aam
mov
add
testb
in
loop
xor
jnp
bound
loope
xchg
dec
lods
clc
fidivrl
mov
adc
xchg
std
stc
and
je
pextrw
pop
pop
icebp
mov
or
popf
jmp
sub
jo
repz
mov
out
inc
loope
fwait
lock
aad
mov
out
or
mov
sbb
lret
in
push
movsb
fmuls
ds
bound
inc
cli
jb
pop
imul
fiaddl
adc
cmc
je
cmp
xchg
in
mov
sub
stos
sbbb
inc
dec
pop
xor
sbbb
les
dec
es
jb
out
fstps
aas
lret
adc
mov
mov
dec
cli
mov
imul
sti
imul
mov
add
push
mov
aam
cmc
sbb
inc
insl
aaa
fadds
stos
iret
aad
pop
loope
mov
rorl
out
cmpsl
jne
ss
movsb
clc
ds
cs
cmp
rorl
lcall
sbb
jmp
sbb
cmpsb
lods
mov
lock
test
xor
in
pop
fstp
scas
dec
lds
sbb
jle,pt
loopne
mov
int
xchg
ds
insl
shlb
or
xchg
je
jp
das
xor
add
add
sub
in
jo
inc
mov
dec
mov
and
dec
out
enter
jno
lahf
sahf
pop
out
mov
jne
adc
and
scas
loop
jae
sbb
in
fwait
shl
mov
jmp
je
jb
addr16
pop
mov
sbb
dec
outsb
xchg
pop
cmp
xor
call
xchg
dec
lahf
xchg
stos
divl
xchg
fisubrl
push
arpl
mov
sysexit
scas
lcall
das
sub
cmp
inc
jbe
fwait
or
fistps
xchg
int
in
cmp
dec
sbb
mov
dec
sarb
push
push
lret
mov
ret
cltd
inc
add
outsl
enter
movsl
popf
stos
and
sub
mov
xchg
jge
sub
sub
xor
cli
or
jmp
mov
out
mov
fisttpll
mov
jle
and
mov
push
jbe
loop
cmpsb
das
fistps
push
mov
xor
stos
gs
jge
jmp
mov
jae
femms
jmp
adc
lcall
push
xchg
js
push
lds
mov
in
push
push
icebp
cmp
mov
hlt
into
push
test
lret
pusha
scas
lcall
rcll
and
sbb
in
icebp
ljmp
repz
cmp
addr16
pop
xor
add
mov
add
pusha
inc
mov
xor
sbb
or
dec
jmp
mov
pop
xchg
ret
stc
jo
mov
push
dec
shlb
rcrl
stos
push
inc
or
mov
shr
fcomip
cmp
pop
inc
xchg
inc
mov
popw
aaa
sbb
dec
gs
inc
adc
add
cmp
addr16
push
scas
dec
add
jecxz
add
and
inc
jl
sti
scas
mov
jg
test
pop
aas
lcall
push
in
fildll
dec
stc
mov
sub
mov
fwait
pop
out
mov
jb
decl
cmp
xor
mov
rcr
cmpb
cmp
mov
add
lods
adc
fbstp
ja
lret
sbb
sbb
outsb
adc
outsl
or
push
popf
cmp
mov
mov
insl
sbb
and
push
test
stos
stc
les
inc
pop
jne
pop
lock
or
xchg
mov
sub
lock
xor
jle
jecxz
pop
cmpsb
addr16
movlps
scas
test
mov
out
pop
pop
jnp
cmp
lret
mov
aaa
push
jae
cmp
shlb
loope
jae
pop
orb
das
push
rcrl
ret
jge
shlb
sahf
cmc
in
popw
mov
xchg
lahf
lods
mov
and
sbb
adc
mov
dec
cmp
jmp
in
fs
and
cmp
icebp
aad
xor
bound
aaa
mov
jl
fsubr
xor
daa
sbb
adc
add
fs
mov
aam
inc
ret
dec
adc
out
add
and
add
xor
mov
mov
lods
daa
jb
aam
pop
call
das
in
imul
lock
enter
cmp
xor
in
stos
sbb
mov
mov
cmp
addl
gs
or
std
pop
pop
mov
lds
dec
enter
and
jge
out
mov
aam
push
aas
ret
push
lahf
sbb
sbb
popa
call
pushf
or
pop
or
outsb
mov
bound
outsb
sbb
or
jmp
push
pop
and
imul
std
imul
iret
imul
es
pop
test
mov
dec
divl
xchg
mov
mov
pcmpgtb
fwait
mov
std
cmpsb
jmp
sbb
imul
pusha
repz
test
or
aas
cmp
aas
and
pushf
into
ss
sti
data16
imul
add
push
mov
roll
push
test
dec
pop
push
sbb
aaa
push
cmc
pop
scas
xor
fwait
jecxz
inc
mov
jge
sbb
mov
imul
mov
ljmp
xor
clc
pop
xlat
mov
cs
mov
and
lahf
jecxz
out
cld
imul
mov
aas
enter
sbb
dec
pop
jae
inc
mov
test
add
fdivrs
jb
cwtl
xchg
sub
lods
scas
lock
lods
test
xor
cmp
stc
pusha
cmc
mov
call
lret
mov
insl
loopne
adc
ss
movsb
adc
sbb
addl
cltd
dec
jl
cltd
orl
mov
push
jp
shlb
mov
cmpsl
cmp
test
loop
xchg
cmpsb
adc
rorl
shll
cltd
cli
push
mov
divb
push
push
icebp
lds
iret
fidivs
jmp
and
into
jp
lret
movl
xor
cmp
imul
xchg
pop
xor
mov
pop
add
gs
je
sub
fistps
outsb
sbb
pop
jbe
in
adcb
push
in
mov
cmp
imul
stos
mov
sbbl
imul
imul
mov
push
push
and
lods
mov
call
mov
fnstenv
test
add
push
mov
sub
inc
lcall
cmp
mov
lods
in
mov
stos
not
jg
xchg
daa
scas
xlat
mov
adc
stos
mov
shlb
mov
jmp
lods
rcrb
mov
jge
addb
and
popf
lcall
xor
jne
shll
inc
outsb
mov
in
sbb
cmpsb
jno
ss
add
nop
test
sbb
ds
mov
mov
adc
jp
testl
cwtl
add
sbb
jb
movsl
or
mov
pop
mov
push
call
idivl
mov
insb
outsl
inc
add
dec
jecxz
arpl
arpl
or
ds
add
lahf
push
jbe
sub
fnstenv
push
mov
scas
inc
imul
jnp
loope
insb
jmp
or
sbb
into
cmp
jp
out
jge
dec
in
fdivr
xor
lods
or
lods
cltd
inc
popf
jne
dec
aaa
in
aam
andb
or
add
mov
push
cs
dec
inc
mov
in
test
scas
out
rorb
adc
movsb
inc
shr
mov
shll
aas
push
aad
les
int
xchg
xor
jns
and
shll
sub
cmp
sbb
arpl
scas
lea
lcall
push
cmp
std
xorl
mov
adc
fbstp
rcrl
stos
inc
sbb
rcrl
mov
test
incb
mov
testl
in
xor
or
push
ret
leave
jl
or
xor
mov
or
jo
lret
pop
or
push
adcb
aaa
lret
mov
sbb
out
xchg
lcall
sbb
cmp
push
xchg
mov
sub
xchg
sbbl
inc
xchg
xchg
xlat
jb
lods
adc
sub
in
int3
xor
in
xor
mov
idiv
call
mov
cmp
jno
push
xlat
lret
add
pop
and
in
fwait
pop
test
mov
mov
or
das
ret
and
fsub
out
push
adc
insb
ljmp
cmp
sub
push
xchg
cmpsb
dec
adc
imul
jge
push
pop
insb
mov
shlb
ja
or
shl
sbb
xchg
inc
stc
add
and
sbb
ret
jne
enter
test
popa
cmpsl
and
cmp
xchg
dec
or
cwtl
mov
jbe
cmp
sbb
add
mov
insb
adcb
sub
and
icebp
push
cmc
add
jp
and
xor
in
inc
xor
jae
sbbb
mov
push
and
test
dec
lock
pop
pop
add
ja
mov
add
ds
push
inc
call
movsl
mov
mov
fcompl
mov
int3
adc
into
gs
and
jne
loop
addb
mov
test
std
popf
lods
cltd
or
mov
xchg
fmuls
or
push
mov
xor
ja
add
inc
movswl
imul
jno
or
ja
jns
xchg
or
ret
xor
sub
pushf
jnp
pop
sbb
hlt
jge
jmp
inc
jmp
jo
out
repnz
decb
inc
lret
jae
sbb
inc
mov
sub
xchg
fwait
aad
pop
add
dec
xchg
arpl
mov
es
lock
out
and
cmc
lock
xchg
nop
mov
mov
mov
inc
pop
fldcw
ds
xor
cmp
or
test
mov
xchg
dec
jno
push
adcb
mov
push
or
cs
add
scas
idivb
mov
mov
add
clc
or
pop
and
or
mov
popa
or
mov
push
movsl
jae
sbb
inc
mov
add
in
ss
or
pop
in
testl
out
out
add
and
add
fistl
mov
stos
iret
enter
fs
mov
ja
fwait
mov
test
add
hlt
leave
cmp
mov
out
cmpsb
push
xchg
lcall
in
ret
lret
push
mov
rcrb
ds
and
xor
inc
adc
jb
nop
imul
fsts
pavgb
pop
out
outsb
fsub
roll
loope
arpl
xchg
or
call
daa
sbb
lret
in
push
dec
mov
les
cs
mov
mov
sub
fildl
aas
mov
rorb
test
fwait
int3
mov
xlat
lret
int
orl
out
push
out
jg,pn
mov
bnd
mov
setle
arpl
lret
outsb
sub
int
aad
pushf
add
cmp
std
lods
sbb
xor
mov
push
lods
cmp
inc
pop
and
out
popa
xor
fadds
pop
pop
imul
xchg
add
jg
cs
std
dec
jmp
add
jo
xor
mov
data16
pushf
bound
mov
mov
push
pop
sbb
loop
clc
xchg
sub
test
sbb
cwtl
fcomi
xchg
stos
loope
dec
fwait
repz
adc
test
dec
fildll
xchg
adc
lret
sub
leave
test
cmp
pop
jne
icebp
mov
inc
ret
mov
outsb
stos
jbe
clc
mov
sahf
aad
or
test
mov
pop
sub
stos
push
jns
ja
pop
dec
push
fidivl
xchg
sub
jns
push
cwtl
cmp
xchg
in
xor
int3
movsb
lea
loopne
scas
xchg
or
push
insl
repz
dec
test
inc
cld
add
insl
and
pop
cmc
mov
loop
mov
mov
sub
dec
sahf
push
pop
shl
jne
xlat
sbb
xor
cmp
ss
jmp
adc
push
mov
pop
lea
jle
add
pop
in
jno
sahf
jae
dec
into
sbb
loopew
jo
movsl
mov
xor
mov
mov
in
jns
xor
test
mov
xchg
mov
cwtl
xlat
jge
sbb
cli
cmp
insb
cmpsb
inc
add
inc
jae
jp
jmp
mov
cmp
clc
sbb
addb
loop
xchg
lock
mov
jle
icebp
pop
xchg
dec
and
jmp
sbb
cmpsb
inc
or
jge
popf
push
in
push
sarl
imul
inc
test
push
push
xor
mov
and
stos
fwait
call
inc
out
inc
loope
fmuls
lcall
daa
mov
adc
or
arpl
mov
mov
inc
movsb
cmc
pop
ds
pop
in
popf
pop
es
shlb
cmp
and
ljmp
jecxz
das
jg
pop
out
mov
jae
pop
adc
sub
sbb
xor
jg
mov
jnp
scas
cld
pop
fistpl
jecxz
push
mov
ret
xchg
xor
pusha
js
jmp
jl
and
aas
test
adc
js
movsb
cltd
dec
inc
dec
stos
das
frstor
dec
gs
sbb
scas
xlat
imul
mov
xor
mov
push
push
imul
dec
push
cmc
stc
addr16
loope
sbb
popa
xchg
fucomp
and
inc
aam
lods
cmp
fimuls
hlt
jmp
jo
mov
push
out
outsl
push
push
push
cmp
test
popa
pop
cmc
xchg
jg
fwait
pushf
jae
sbb
mov
iret
jo
dec
dec
adc
jno
mov
jnp
cs
jecxz
test
mov
dec
cli
pop
mov
sub
loope
es
or
jbe
or
xor
fidivrs
jmp
jo
sub
adc
gs
jb
out
xor
xor
pop
cs
xlat
test
sbb
pop
jne
cli
mov
out
cmp
xchg
ficomps
popf
adc
movsb
insl
rcrl
ror
lcall
ret
pop
into
imul
mov
xor
pop
pushf
mov
arpl
call
iret
aam
and
mulb
cld
inc
jg
push
push
aas
test
cli
popa
enter
sub
fwait
decb
sub
xchg
or
bound
push
outsl
addb
lret
add
ret
addb
fidivrs
xchg
or
add
lret
sbb
push
rcll
out
or
pop
shrl
push
xor
mov
jbe
pop
mov
xchg
fistpl
andb
imul
ss
fwait
xchg
aas
into
adc
inc
es
push
out
loop
push
xchg
movsl
in
push
mov
out
loopne
dec
mov
cmpsb
in
stos
and
push
aas
and
inc
sub
push
sarb
mov
imul
and
or
stos
pusha
push
or
cmp
shrb
add
jge
xor
add
push
sbb
repnz
nop
add
mov
mov
inc
flds
imul
add
rorb
or
pop
faddl
pop
xchg
mov
mov
pop
cmp
ret
sub
mov
jl
in
mov
and
pusha
push
int
mov
ret
jecxz
leave
in
pop
xor
repnz
popa
sbb
lahf
xor
sbb
addr16
fdivr
sbb
mov
mov
inc
mov
dec
out
jbe
jmp
add
cmp
out
adc
xchg
mov
inc
mov
and
pop
fistps
push
data16
and
pop
mov
cmc
gs
cmp
aaa
stos
nop
sub
dec
xchg
lahf
int3
popf
pop
in
push
and
xor
push
pop
or
push
sbb
sub
or
mov
mov
sarb
sti
add
scas
popl
iret
scas
mov
clc
mov
loop
add
xlat
arpl
mov
dec
imul
gs
pop
mov
add
rorl
faddl
dec
push
and
inc
and
jmp
aas
or
scas
pop
pop
decb
push
mov
push
fsts
mov
leave
imul
xchg
insl
pop
or
int3
mov
pop
pushf
leave
fadd
movb
adc
jnp
int
ficoms
jo
or
add
and
add
imul
cmp
mov
leave
dec
mov
adc
popf
cwtl
push
jae
push
push
fdivrs
fdivl
imulb
add
jl
inc
push
xor
aaa
xor
pop
mov
mov
out
es
mov
je
add
xchg
jo
js
cmp
dec
test
mov
sbb
adc
adc
cltd
jmp
decb
jbe
adc
cmpsb
xchg
cmc
jmp
test
xchg
xchg
in
xchg
mov
dec
cmp
xchg
mov
dec
xchg
adc
ret
push
ret
pop
jae
out
xor
xchg
sbb
hlt
je
out
xchg
cltd
ja
pop
xchg
aaa
adc
push
icebp
pop
daa
mov
ror
cmp
inc
mov
out
or
or
xor
xchg
stos
lock
icebp
mov
bound
fildll
mov
xor
push
or
insb
out
xor
mov
xchg
or
stos
mov
mov
ljmp
jl
push
cmp
inc
cmp
fimull
sarl
daa
repz
inc
cmc
mov
stos
fdivl
sub
stos
sub
adc
mov
cmpsb
dec
xor
rol
sti
mov
test
adc
xchg
roll
loopne
shr
icebp
aas
adc
push
xchg
jnp
aas
dec
daa
enter
call
rorb
add
inc
jns
sahf
mov
stc
or
dec
push
data16
xor
push
fwait
mov
in
inc
dec
andb
mov
mov
fwait
pop
sti
out
stos
decl
iret
mov
ljmp
adc
aad
mov
pushf
loopne
mov
mov
jecxz
or
in
ss
sub
test
jns
jbe
mov
mov
sub
scas
jecxz
pop
sahf
pushf
test
xchg
xor
dec
or
mov
sub
sbb
xor
mov
insl
fcmovu
xlat
ljmp
into
cmp
push
and
addr16
mov
lahf
inc
aam
outsb
fwait
rclb
stos
adc
inc
in
test
test
popa
notl
mov
mov
std
mov
sti
push
out
pop
pushf
and
testb
dec
mov
sub
cmp
mov
push
or
adcb
dec
lods
dec
pop
pop
lcall
push
lcall
push
add
repz
inc
icebp
in
mov
xlat
push
lock
push
mov
jmp
push
add
inc
cmpsb
mov
jno
outsl
sub
fnstsw
mov
dec
ja
sub
ds
sub
mov
push
xor
clc
push
pop
jns
xchg
scas
pop
cmpsb
aas
add
mov
dec
lods
add
sbb
sahf
mov
lods
sti
inc
mov
insb
frstor
sbb
daa
add
scas
push
cli
out
lret
aaa
fcoms
jae
loope
dec
jbe
shlb
push
jle
add
aad
test
adc
mov
outsl
cmc
les
cmp
xor
ja
sub
mov
insb
lret
or
pop
jl
lock
or
fwait
dec
mov
arpl
dec
loope
jp
sbb
add
aas
js
clc
adc
aaa
fchs
cmp
call
into
pop
enter
lock
sbb
jns
lods
jne
popa
mov
jbe
daa
push
dec
call
xor
cld
inc
pop
repnz
xlat
xchg
mov
insb
cmp
sub
cmpsb
xor
pop
pusha
decl
or
call
fnsave
push
or
popa
ret
pop
xchg
bound
inc
lds
repz
fidivs
pop
or
mov
lock
loop
ja
lcall
add
int3
and
stc
mov
or
jle
jmp
pop
add
or
push
out
fcmovbe
inc
lods
lock
fs
gs
aam
mov
inc
addb
je
ss
inc
sbb
ficompl
xchg
cmpsb
jbe
lock
fs
mov
jecxz
bound
shll
movl
add
inc
jmp
fs
imulb
push
inc
stc
jg
aas
adc
mov
mov
pusha
imul
in
xlat
push
ja
cmp
adc
cmp
jbe
icebp
popa
and
fs
scas
lods
or
out
sbb
aad
lods
in
das
fstps
or
xor
cmp
pop
mov
xor
testl
std
inc
ss
adc
add
fs
repz
in
imul
imul
lock
aaa
int
pop
popf
xor
es
mov
adc
pop
insb
add
bound
mov
js
add
das
ljmp
scas
and
fidivrs
sub
negb
dec
mov
imull
subl
lret
outsl
test
pop
mov
pop
cmpsb
loop
and
mov
ljmp
mov
stc
mov
jp
cmpsl
add
sbb
mov
xchg
out
fmull
cli
rolb
xchg
cmp
aam
push
stos
cltd
xchg
stc
jecxz
sahf
xchg
sbb
or
cmp
int3
dec
movsb
ja
sbbl
scas
or
aaa
icebp
xor
dec
mov
xor
and
push
push
mov
outsl
shrb
notl
mov
xor
into
loopne
cmpsb
cs
push
mov
sub
jge
shl
xchg
mov
loopne
push
sar
cli
sahf
mov
xor
bound
subb
xor
dec
or
fwait
mov
pop
push
lcall
imul
cmp
jbe
aas
add
cmp
pop
in
fs
scas
loop
aam
xchg
jnp
call
inc
sbbb
pop
fstpl
aad
imul
arpl
ljmp
jmp
test
or
mov
mov
push
cwtl
into
in
gs
loope
sub
adc
iret
lds
cltd
in
sbb
test
mov
dec
and
popf
das
add
pusha
sbb
and
leave
in
sub
test
jns
cltd
xchg
push
cmc
mov
inc
aam
pop
mov
jnp
mov
jb
jge
jmp
adc
flds
push
setge
je
cmp
add
outsl
movsb
daa
jbe
idivl
mov
int3
sti
hlt
sub
add
mov
and
adcb
sub
bound
popa
inc
mov
jge
popa
ljmp
jl
fwait
int3
mov
das
jnp,pn
dec
jmp
les
jbe
fs
movsb
sbb
mov
inc
mov
daa
ljmp
dec
leave
testb
mov
pushf
mov
mov
add
cld
cwtl
adc
cmc
push
jp
in
push
movb
mov
xor
and
rorl
inc
mov
aad
mov
movsb
push
out
packuswb
dec
aad
mov
and
insl
hlt
cmpsb
push
out
or
sbb
mov
push
cmpb
jmp
jno
mov
popf
shlb
jle
mov
dec
mov
imul
adc
lods
mov
subb
cld
lret
dec
push
out
sbb
xor
popf
lcall
fidivrs
testl
std
and
daa
jmp
pop
add
push
add
scas
inc
aaa
mov
and
les
int
cld
nop
in
aas
fs
stos
mov
sub
popf
jbe
cmp
push
or
in
repz
pop
aam
das
enter
mov
inc
mov
pop
dec
addr16
mov
adc
dec
aas
and
sbb
jg
jne
cs
inc
repz
cmc
cmpsb
fldl
loopne
cld
je
push
in
inc
mov
mov
push
adc
mov
push
dec
test
lods
lahf
loopne
faddl
decl
stos
and
pop
cmpsb
call
mov
fstpl
jl
push
mov
into
sub
ret
push
scas
or
pop
mov
scas
pop
push
aas
movsl
mov
in
pusha
pop
mov
rcrl
push
or
repnz
xchg
icebp
mov
loope
insb
cmp
ret
stos
pop
ds
mov
int
mov
or
push
xor
orb
jg
imul
dec
jp
stos
cmpsl
inc
pop
or
xchg
into
mov
std
ret
fdivrp
in
je
and
add
inc
mov
cmp
test
add
in
bound
cmpsb
and
mov
cld
lret
adc
jae
dec
outsl
cltd
leave
cmpsb
je
ret
mov
sbb
and
cmpsb
je
ljmp
mov
test
cmp
pop
lret
pop
dec
rolb
stos
decb
adc
mov
out
jb
adc
lret
lret
lcall
adc
xlat
push
mov
inc
fisubl
ret
imul
push
iret
arpl
fstpt
leave
fldcw
jno
mov
jmp
shrl
lcall
daa
push
mov
or
mov
je
mov
add
sbb
or
cs
xorb
pop
movsb
outsl
xor
add
fcomip
or
xor
mov
daa
cmpsb
sbb
mov
add
jae
push
or
std
repz
aas
cltd
call
daa
dec
andl
cs
int
lret
pop
jae
sbb
ret
xchg
xorl
jge
in
jge
mov
xor
leave
dec
and
pop
imul
lret
xor
outsl
sar
loopne
inc
jge
data16
sahf
push
and
adc
cmp
jge
xor
imul
test
adcb
push
filds
leave
leave
and
mov
fnstsw
jl
xchg
ret
aad
loop
jnp
les
or
adc
shll
imul
sub
inc
lock
cld
mov
insb
aaa
push
rclb
popa
push
enter
jbe
jbe
push
xor
loopne
neg
jo
push
repnz
aam
cmp
repz
lock
out
pop
mov
dec
rcrb
bound
lcall
add
push
inc
xchg
push
xor
enter
les
lahf
pop
mov
rcrb
sbb
adc
rol
hlt
push
aas
or
pushf
dec
cmpsl
push
mov
adc
pop
sbb
inc
mov
add
ret
cmp
insb
jge
div
xchg
out
sub
std
rcr
mov
test
or
outsb
sub
add
aam
negb
loop
stos
mov
push
rolb
mov
push
pop
sub
fldt
push
adc
bnd
arpl
mov
cs
addr16
cltd
fldl
lahf
xor
stc
mov
xor
jbe
insl
dec
lock
jmp
std
push
xchg
pop
out
push
xor
xor
scas
iret
test
jbe
add
popa
inc
js
mov
inc
xchg
cmp
js
cltd
xlat
mov
mov
push
xor
and
adc
mov
cmp
lahf
inc
lock
cwtl
xchg
stc
ret
push
pop
imull
cmpsb
sub
or
mov
push
fidivrl
dec
add
add
sub
sub
jns
cmpsl
mov
mov
or
inc
cmp
lea
aas
icebp
int
mov
rorb
mov
cmpsl
mov
sahf
nop
in
mov
adc
loope
imul
shrl
and
cmp
mov
cmp
orl
sub
andl
jnp
outsl
out
das
mov
xor
data16
scas
popa
xchg
test
shrb
push
scas
push
inc
icebp
scas
cmp
pushf
push
ljmp
pop
les
push
add
mov
or
mov
lret
aas
cli
loop
adc
inc
aam
shll
push
xchg
pop
out
dec
xor
jmp
ficomps
stc
push
int3
sbb
lcall
jle
or
xorb
js
mov
push
cmc
adc
nop
movsl
cmp
sti
fs
jg
pop
mov
adc
cmp
fidivs
push
xchg
sub
movsl
sbb
nop
xchg
cmp
jg
sub
call
int
adc
bound
sbb
hlt
or
popa
sub
addb
and
lcall
mov
insl
je
stos
mov
adc
out
dec
mov
mov
nop
sbb
cld
aad
test
inc
adc
cmc
cmp
pushf
outsb
rcll
add
add
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
or
add
rolb
add
or
add
xor
add
pusha
pop
add
loopne
add
adc
add
sub
add
pop
or
adcb
cmpb
add
mov
or
adc
add
lock
addb
add
add
add
add
add
add
add
in
push
add
in
push
add
add
addb
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
add
add
add
pop
add
test
add
lcall
xorb
add
loopne
add
add
add
add
add
add
add
incb
add
insb
adc
add
add
subb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
inc
or
sbbb
addb
add
add
add
add
add
add
add
outsb
or
xorb
addb
sbbb
cmpb
add
mov
add
add
add
add
add
add
add
rorb
add
jae
add
call
add
add
add
add
add
add
add
jmp
add
add
add
add
sbb
subb
add
dec
add
addb
add
add
add
add
add
add
add
repz
add
add
js
add
add
add
add
add
add
add
or
adcb
add
test
add
rolb
bound
add
fadds
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
xor
add
push
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
or
add
add
add
add
add
add
adc
add
in
add
add
add
je
add
or
add
in
add
add
add
jle
add
sbb
add
in
add
add
add
cwtl
push
add
adc
add
in
add
add
add
stos
pop
add
adc
add
in
add
add
add
mov
or
add
add
add
add
add
insl
add
push
or
add
add
add
add
add
jbe
add
or
add
add
add
add
add
jg
add
or
add
add
add
add
add
mov
add
or
add
add
add
add
add
xchg
add
adc
add
in
add
add
add
adc
add
in
add
add
add
and
add
add
add
add
add
lods
add
push
or
add
add
add
add
add
add
adc
add
in
add
add
add
pusha
mov
add
in
add
add
add
push
add
push
or
add
add
add
add
add
add
adc
add
in
add
add
add
mov
add
push
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
cmc
add
adc
add
in
add
add
add
incb
add
or
add
add
add
add
add
pop
add
push
or
add
add
add
add
add
adc
add
or
add
add
add
add
add
sbb
add
or
add
add
add
add
add
add
pop
add
inc
add
xor
pop
add
pop
add
aaa
add
add
xor
dec
add
cmp
push
add
add
dec
add
add
add
push
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
or
inc
add
push
add
xor
add
add
add
push
add
add
add
inc
add
add
add
xor
push
add
dec
add
add
inc
add
add
xor
pop
add
inc
add
add
pop
add
add
or
push
add
push
add
add
add
dec
add
push
add
push
add
or
pop
add
dec
add
xor
aaa
add
inc
add
add
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
add
dec
add
pop
add
dec
add
push
add
xor
inc
add
add
pop
add
add
add
cmp
cmp
push
add
add
add
push
add
pop
add
xor
add
add
add
push
add
add
dec
add
xor
xor
pop
add
add
pop
add
aaa
add
add
add
add
add
add
inc
add
add
inc
add
pop
add
add
cmp
cmp
push
add
xor
add
pop
add
push
add
add
add
push
add
push
add
add
add
add
add
push
add
inc
add
pop
add
push
add
pop
add
add
xor
inc
add
pop
add
pop
add
add
push
add
xor
inc
add
inc
add
add
push
add
xor
pop
add
or
push
add
add
xor
pop
add
push
add
inc
add
pop
add
add
add
dec
add
pop
add
push
add
push
add
add
xor
pop
add
push
add
dec
add
inc
add
dec
add
add
jmp
jle
js
aam
stos
xchg
fsubrl
add
and
add
ds
cmp
dec
cs
fwait
dec
lods
adc
mov
nop
sbb
inc
int3
loopne
loop
sti
je
ja
xchg
pushf
jmp
shll
sub
push
fisttpl
cmp
scas
cltd
mov
dec
mov
sbb
aaa
cmp
jl
push
fldcw
scas
fistpl
adc
cmp
loopne
rcl
cltd
xchg
inc
je
inc
lods
aas
out
xor
dec
nop
sbb
xchg
repz
les
orb
rolb
lret
and
lret
inc
loope
mov
inc
popf
lods
add
test
jb
les
enter
push
adc
stos
pushf
pop
test
push
or
mov
scas
in
aad
mov
xchg
xchg
jbe
in
mov
mov
aad
xchg
test
fimuls
scas
jmp
jl
push
mov
sub
subl
push
mov
cld
cmp
or
clc
cwtl
lahf
jns
push
or
addr16
inc
push
pushf
arpl
or
mov
lds
ja
movsl
lret
xlat
xchg
mov
xorb
jne
cld
cmp
mov
cmp
sbb
xchg
sub
jo
fnstcw
notb
xor
leave
xchg
scas
xor
fidivs
mov
outsl
xchg
jmp
push
mov
inc
adcb
aad
movsl
or
fsubrl
xchg
adc
ret
push
lahf
repnz
sub
loopne
aas
pushf
clc
xchg
test
jne
decl
xorl
test
mov
xor
cwtl
push
outsl
inc
int
adc
mov
es
aad
and
enter
sbb
ret
ret
dec
sbb
jbe
xor
pop
sbb
out
ljmp
dec
mov
daa
es
sbb
xchg
jle
dec
xchg
pop
js
cs
jo
pop
adc
jnp
clc
pop
cmpsb
mov
stc
mov
hlt
mov
lret
dec
lds
xor
dec
cltd
hlt
jne
add
xor
rclb
xor
push
out
inc
xchg
mov
aaa
sub
mov
jge
call
mov
and
pop
stos
cltd
dec
xchg
xor
ret
mov
inc
adc
lea
jge
out
or
and
out
out
xrelease
pusha
test
adc
movsb
sti
push
sbb
rclb
fists
in
pop
in
cmp
adc
dec
mov
inc
cld
stc
loop
xor
test
stos
fcoms
ficompl
mov
mov
mov
and
xor
adc
fnstsw
insb
xorb
rol
mov
test
jg
inc
aas
pop
in
repz
add
movsl
dec
xchg
out
inc
into
mov
adcb
into
pop
lods
lret
popa
mov
fstpl
xor
or
fcom
and
dec
test
jge
loope
push
sub
cmp
adc
mov
adc
mov
test
into
rolb
add
mov
pop
or
xchg
xchg
mov
lods
xchg
push
mov
movsl
or
outsl
loop
rcrl
push
sub
mov
mov
in
rorb
sar
loop
ret
rcrb
gs
cld
pop
aad
dec
cld
dec
jb
pop
sub
pusha
sub
pop
ja
mov
lahf
pop
sbb
testl
fdivr
test
ds
repz
push
not
inc
inc
mov
xchg
bound
loop
push
enter
push
push
or
mov
icebp
data16
or
cmp
inc
jns
je
mov
push
in
mov
adc
fisubl
sbb
mov
cmpsl
mov
fiaddl
test
les
fdivr
nop
ja
scas
jge
stc
out
push
flds
lahf
xchg
addr16
lods
dec
mov
cmc
cwtl
ret
inc
sti
xchg
inc
sahf
dec
cmp
cltd
push
adc
push
inc
cmc
jg
push
xchg
les
mov
hlt
fiadds
or
shll
adc
es
ja
negb
mov
es
lods
xchg
mov
add
add
mov
inc
lods
cltd
sbb
xor
mov
cmp
cli
enter
clc
inc
xor
add
adc
ja
loope
jmp
frstor
pop
fs
loope
pop
jecxz
lock
push
negb
stos
adc
pop
leave
cltd
sub
inc
xor
jbe
cmc
push
push
mov
push
outsl
cmpsl
ret
jp
mov
push
stos
fwait
dec
mov
push
inc
mov
shlb
push
and
cwtl
push
xchg
cld
leave
cmp
ss
or
push
mov
cltd
xor
pop
push
ljmp
mov
mov
stos
int
push
mov
adc
add
mov
or
lods
in
jo
xchg
pop
aaa
aam
xchg
sbb
daa
ja
dec
sbb
fstpt
pushf
mov
je
and
push
mov
aad
rcrl
hlt
inc
out
insb
mov
push
adc
mov
jb
repz
and
xor
cwtl
add
mov
inc
push
stos
push
push
notb
pop
int
cwtl
arpl
xchg
and
lock
sub
addb
mov
adc
fcmovnb
cli
imul
insb
mov
inc
js
adc
sbb
scas
and
mov
icebp
jno
and
push
xlat
bound
dec
enter
push
mov
mov
fsubrp
lock
jno
xchg
add
adcb
cli
pop
or
aaa
das
pop
sahf
popa
fists
imul
adc
dec
jne
shr
out
popf
shrl
aaa
adc
push
insl
pushf
in
jge
sub
ret
int3
pop
mov
jge
inc
repnz
pop
xor
sub
movsl
mov
insb
or
push
push
loope
and
cmc
dec
daa
jne
test
adc
shll
test
test
es
mov
jns
gs
xor
out
jb
sbb
xchg
cmp
xchg
stos
lods
movsl
add
add
ss
xchg
or
sub
and
cmp
shrb
std
daa
and
mov
pusha
ror
loope
ja
add
pop
add
pop
popa
xor
loop
fs
jg
andb
xchg
arpl
ja
sti
push
sbb
mov
mov
pop
jp
mov
and
insl
sub
xchg
cmpb
and
xchg
roll
push
movsb
inc
sub
les
and
subb
pop
cmp
mov
push
push
cmp
jnp
jb
jg
add
mov
std
add
cmp
pop
adc
sub
pop
popa
leave
inc
pop
xor
push
push
xchg
mov
mov
addb
int
cmp
fsts
or
in
and
xor
mov
in
mov
dec
jmp
sbb
cmpsl
push
es
xchg
fcomi
out
jne
hlt
jmp
popf
es
imul
mov
loope
sbb
xor
mov
pop
inc
lahf
mov
insl
outsb
mov
dec
sbb
flds
cltd
adc
aaa
jbe
cwtl
xor
es
xor
shl
sbb
insl
fstpl
aaa
aam
sbb
sub
into
ja
mov
popa
cmp
outsb
xor
jmp
jne
loopne
mov
cmp
push
and
lahf
fnstcw
push
add
das
mov
lret
sbbl
daa
ja
sbb
lcall
scas
adc
mov
loope
scas
sahf
and
adc
mov
cmp
pop
out
jg
push
fstpt
decl
jg
lret
gs
lock
jne
mov
jbe
rclb
push
inc
sti
cmp
inc
sub
xchg
xchg
jb
cmp
ljmp
push
inc
mov
popf
sub
push
les
test
arpl
flds
xchg
mov
push
cmpsl
gs
ss
rcr
psubq
fcompl
negl
sbb
int
out
dec
mov
adc
jo
or
xorl
xor
cmp
je
dec
scas
sub
ret
jns
jecxz
int
cmp
add
loopne
sbb
jmp
mov
shrd
mov
or
cs
lods
movsl
cmp
cmp
bound
and
in
pop
test
aaa
cmp
cmp
push
or
aam
sub
push
loopne
popa
mov
mov
movsb
cmp
cmp
mov
lahf
mov
shll
popf
jae
test
xor
stos
notl
push
or
xchg
sbb
orb
repz
lcall
sub
jl
or
mov
popa
repz
imul
pusha
add
mov
lret
test
loop
cmp
aad
cmp
sbb
iret
lea
cmp
pop
push
jg
xchg
lret
sub
mov
stc
in
add
inc
fisubrl
ljmp
hlt
push
das
xor
enter
test
and
ss
mov
jae
testl
xchg
enter
and
pushf
shlb
mov
and
mov
scas
iret
push
mov
out
xor
insb
test
jb
adc
or
lret
loop
dec
cwtl
add
xchg
push
in
sti
test
mov
dec
xor
decl
dec
pop
notb
and
clc
mov
lret
push
stos
popa
mov
inc
mov
jecxz
cmp
outsl
mov
lret
fwait
ret
dec
pop
fwait
push
aad
orb
or
mov
or
mov
mov
xor
jmp
js
cmp
inc
cltd
lods
inc
sub
jp
jo
out
xor
mov
and
rorb
push
movsl
icebp
lret
xor
mov
arpl
xor
mov
aaa
scas
adc
cwtl
insb
jne
dec
pop
push
cmp
xor
pop
sarl
pushf
sub
mov
lods
inc
icebp
inc
mov
sbb
repnz
in
sbb
gs
jle
cmp
mov
outsl
dec
sahf
repz
rcrb
cmpsl
jno
pop
xchg
inc
dec
mov
mov
andb
leave
idivl
pop
sbb
sahf
sub
lea
or
mov
adc
push
cmpsl
jbe
lea
cmp
std
jno
enter
lahf
mov
jbe
int3
daa
das
enter
xlat
lcall
hlt
cld
fldl
mov
rcrl
pop
bound
ja
xchg
bound
push
mov
neg
adc
push
mov
sub
pop
xchg
fistl
loope
mov
xlat
and
scas
out
cmp
ljmp
mov
adc
in
mov
xor
addb
sbb
mov
jns
mov
cmpsl
les
out
leave
dec
stos
jmp
mov
mov
ds
mov
and
rcrb
test
sahf
fwait
push
inc
pop
adc
mov
fwait
pop
dec
divb
test
mov
mov
aad
sbb
xchg
push
mov
inc
gs
jb
jp
cwtl
fwait
xor
sarb
and
in
pop
add
sbb
sti
leave
xchg
sbb
sbb
and
cli
in
imul
and
in
fsts
das
dec
push
out
xchg
movsl
dec
in
mov
outsl
test
shll
xor
push
out
mov
fildl
or
and
or
rcrb
test
cmp
push
mov
or
xor
loopne
ret
fiadds
jmp
xlat
das
sbb
dec
into
popa
cli
xorl
push
cmp
ds
sahf
inc
mov
ret
sub
mov
push
cmp
xchg
fcoms
lea
adc
mov
scas
ds
test
xor
mov
or
subl
cmc
push
mov
adc
dec
dec
in
sub
cmp
add
inc
repz
cmp
arpl
xchg
jecxz
fwait
mov
test
repnz
mov
pop
inc
mov
sbbb
cltd
repz
fsub
std
jmp
cli
pushf
mov
lahf
hlt
adc
cmp
cmp
sub
jecxz
xor
shll
mov
std
jno
xlat
push
out
sbb
stc
cmpsb
xor
aas
or
stos
loopne
mov
loopw
mov
cld
dec
mov
adc
sub
call
pop
inc
push
xor
lcall
lret
mov
add
add
pop
mov
cmp
and
and
add
out
and
sbb
xor
push
test
fadds
adc
dec
push
bound
lret
dec
fistps
cmpsl
pop
loop
and
push
pop
dec
push
insb
fs
into
inc
jb
es
test
into
scas
mov
testl
pushf
dec
clc
lret
aam
cli
xchg
mov
dec
scas
mov
call
fiaddl
sub
addb
cld
test
push
mov
sbb
push
xor
ljmp
mov
les
xor
ljmp
mov
fwait
xchg
mov
in
int3
mov
cmp
mov
mov
push
sbb
insl
pusha
push
outsl
cltd
mul
aas
push
stc
lret
loop
sahf
ret
cmp
xchg
fstpl
sti
les
mov
inc
jno
notb
pop
cli
jecxz
add
mov
stos
or
sub
lds
fstp
js
in
loop
fildll
in
pop
add
leave
fistpl
mov
adc
outsl
add
outsb
jl
lsl
je
mov
lret
lret
xchg
jo
jnp
adc
sub
sbb
add
imul
adc
pop
jg
rcrl
mov
rolb
daa
mov
pop
jl
mov
lds
xchg
ljmp
std
mov
or
sub
cmpsl
add
dec
sbb
mov
inc
leave
faddl
mov
xchg
rorb
sub
xchg
and
pop
mov
pop
mov
xchg
gs
ficoml
shll
mov
subb
inc
scas
inc
ljmp
cmp
repz
stos
fidivl
addb
fs
push
sbb
sub
stos
jb
in
ds
xor
out
js
enter
and
push
inc
insb
xchg
ds
jg
sub
repz
pop
sti
test
into
pop
bound
or
in
orl
jl
adc
popa
xor
scas
and
jmp
and
scas
sub
cmpl
lock
jnp
dec
notb
xchg
out
int
jp
push
fnsave
mov
pop
xor
cmp
ret
mov
mov
jp
mov
sbb
sahf
xor
mov
and
inc
push
test
and
mov
pushf
out
pmaddwd
inc
ret
loop
jl
lahf
sub
jle
xor
cmp
movsl
popf
jno
icebp
xor
xor
cmp
inc
sbb
orb
sub
mov
lret
int3
ss
stos
push
mov
stos
sbb
cwtl
aas
xor
ret
iret
pop
mov
xchg
mov
inc
push
stos
xchg
rcl
sbbb
aad
pop
jmp
sbb
dec
lea
mov
leave
mov
add
push
jb
outsb
loopne
mov
xchg
imul
adc
adc
cwtl
bnd
out
fmull
or
lcall
cs
pop
sub
jno
jg
aas
js
xchg
pop
adc
nopl
or
add
mov
jle
mov
cmc
lock
es
inc
inc
pop
mov
push
loope
xchg
in
notl
scas
jbe
iret
add
dec
fsubl
push
mov
dec
mov
mov
sbb
jbe
mov
push
add
ss
scas
add
mov
in
imul
cli
movsb
inc
outsb
or
ljmp
das
push
cmp
icebp
daa
lret
push
insb
mov
das
fsubrl
push
adc
sbb
sbb
inc
in
inc
aaa
and
pushl
mov
movsl
cmp
punpckhbw
sahf
movsl
sub
mov
adc
data16
out
inc
fadds
cmpb
mov
icebp
jp
enter
out
jle
mov
test
sbb
shlb
loop
push
sub
lods
ret
mov
arpl
inc
mov
cmp
mov
xor
jp
negb
mov
fistl
clc
cmc
mov
loope
mov
xchg
ret
jo
add
mov
mov
je
pop
outsl
mov
xchg
pop
and
inc
or
shlb
push
mov
pop
dec
pop
sbb
outsl
mov
xchg
mov
mov
mov
xchg
es
sti
lods
xor
push
mull
fwait
icebp
mov
and
mov
inc
stc
test
fs
stos
dec
pop
imul
aam
mov
int3
adc
mov
or
push
pushf
sub
adc
ljmp
xchg
mov
lock
aaa
stc
stc
fcoml
data16
ja
and
test
or
xchg
jnp
adc
fisubs
jmp
xchg
pop
sahf
jbe
jae
adc
movsb
jb
insl
mov
xchg
adc
jae
fdivrs
sbb
add
dec
jg
xchg
jae
out
nop
ja
dec
mov
dec
jg
add
jb
push
mov
sbb
jecxz
push
rorl
push
sbbl
hlt
jae
jg
sub
inc
and
pop
daa
push
sbb
push
lods
or
pop
arpl
push
in
cmp
mov
adc
mov
xchg
fbstp
in
test
addb
cmp
add
adc
cwtl
into
xor
ja
adc
cmp
insb
sub
mov
insl
insl
push
sbb
test
stos
dec
pop
mov
and
inc
aam
jb
nop
xchg
call
lcall
adc
mov
call
mov
or
mov
adc
pop
popf
cmp
pop
fcmovnbe
cmpsb
out
nop
adc
lock
dec
ret
je
xchg
lahf
cmp
test
popf
mov
stos
cmpsl
sbb
jecxz
pop
data16
cmp
pop
mov
mov
test
stc
and
movsl
jge
inc
mov
cmc
fs
xchg
das
test
imul
in
in
out
cmovns
adc
aam
shrb
jbe
or
out
out
fists
mov
fsubr
and
test
pop
push
lahf
adc
imul
clc
mov
in
es
out
xor
or
pop
jmp
mov
cld
das
sub
jecxz
mov
into
shll
jge
jae
fildl
add
add
repz
movsb
adc
movsb
mov
add
sar
add
push
pop
add
jecxz
pop
dec
push
scas
push
sbb
aad
mov
or
xchg
xchg
leave
adc
ret
addr16
dec
js
out
inc
repnz
imul
clc
test
push
mov
mov
dec
mov
frstor
or
cwtl
push
out
loop
stos
ret
sarb
in
cmpsl
int
sahf
pop
jbe
pop
push
lods
dec
mov
xlat
xchg
sarb
sbb
cmp
cmp
jns
pop
les
mov
add
add
push
push
sti
pusha
in
mov
inc
mov
repnz
jbe
mov
in
xlat
pusha
cmp
pop
in
ja
daa
inc
and
xlat
mov
iret
repz
fdivs
jne
shlb
or
and
xchg
divb
mov
jnp
int
mov
or
cs
pop
mov
outsl
cltd
addr16
fistps
test
jmp
iret
out
imul
jp
addb
fcmovb
aam
or
mov
das
sub
push
jp
ja
lcall
lcall
mov
inc
mov
and
push
mov
push
insb
inc
pop
imul
loop
sub
ss
movsl
pusha
jns
adc
push
and
fisubrl
sub
cli
sub
pop
pop
adc
sbb
sbb
adc
jg
popf
test
ret
xlat
sbb
ja
fadds
dec
lods
jl
mov
inc
pushf
bound
lahf
or
cmp
or
test
push
add
aad
mov
sub
sub
xor
mov
ret
or
call
lahf
into
outsb
fs
pop
sub
xorb
add
and
in
push
cmp
inc
mov
xchg
in
scas
pop
sub
out
out
pop
xor
jbe,pn
ljmp
cmp
add
mov
lret
pop
xorl
pushl
jecxz
in
xchg
inc
adc
es
lcall
pop
test
pop
pop
dec
lahf
push
mov
shll
int
adc
test
popa
aam
jg
sbb
inc
sub
nop
inc
dec
xchg
add
inc
into
hlt
dec
subl
data16
ror
xor
into
mov
mov
add
cs
push
or
pushl
jge
in
je
sub
test
sbb
and
push
popa
in
xchg
clc
xor
cltd
adc
push
in
and
ret
jae
mov
sbb
int3
xchg
pop
jle
pop
mov
test
shlb
xor
mov
or
outsb
test
push
cmpsb
fstpt
ds
pop
js
daa
pop
pop
bound
pop
fiaddl
loopne
cwtl
cli
adc
push
fimull
pop
inc
mov
loope
cmp
fstps
mov
les
xor
lcall
mov
scas
ja
test
sbb
push
adc
test
inc
mov
aad
mov
enter
push
pop
lock
iret
cld
scas
adc
jnp
jnp
ror
jne
cmpsl
lret
push
mov
jae
or
inc
or
xchg
push
daa
dec
ds
aam
push
or
mov
adc
add
jne
scas
jmp
cli
cmpsl
scas
std
jne
dec
addl
jge
jbe
push
dec
mov
inc
dec
lea
mov
sub
ror
sub
frstor
pushf
das
popf
orb
or
inc
lahf
jno
fistl
jbe
clc
hlt
or
inc
mov
sub
mov
mov
dec
rcll
rcll
jl
sub
mov
sbb
sbb
mov
xlat
add
loopne
xor
fstpl
ljmp
pop
subl
aas
fs
mov
jns
ds
sub
cli
adc
xor
push
mov
cmp
cmp
cli
mov
add
or
dec
cmp
pop
and
adc
push
mov
pop
mov
mov
or
xchg
bound
sub
int
test
fisubs
int
mov
or
inc
std
shrb
stos
mov
pop
imull
sarl
scas
sbb
inc
push
pop
pop
xchg
and
enter
adc
cmp
mov
push
cmpsb
iret
pusha
or
push
shll
xchg
ljmp
rol
adc
fsubrl
in
push
jmp
jo
jp
ja
sti
dec
dec
pushf
stos
and
jp
or
and
mov
outsb
ret
add
or
popa
xor
out
inc
push
scas
loopne
fstps
or
fwait
pop
int
in
out
jg
loopne
int3
pop
xchg
jb
mov
adc
out
or
fsubl
repnz
stos
lcall
pop
sub
cmp
xchg
popf
ljmp
push
inc
pop
popa
cmpsl
jp
sub
lods
imul
cmp
jle
fcoms
rorb
stc
outsl
call
imul
aaa
jbe
pop
inc
mov
dec
leave
popa
jnp
pop
js
jns
aaa
jns
adc
mov
pop
or
cmp
orl
sub
and
mov
pop
daa
xor
in
testb
sub
sbb
add
cld
aas
pop
in
mov
dec
movsb
push
dec
mov
in
mov
fmull
hlt
or
fisubs
lcall
pusha
aaa
dec
jns
push
pushf
test
stos
sub
or
movsb
sub
out
bound
popf
adc
xor
mov
push
sahf
xchg
mov
dec
sub
in
faddl
push
cmpsl
outsb
mov
movsb
pusha
lock
xchg
lret
mov
push
xorb
sar
cli
decb
arpl
mov
pusha
add
mov
data16
push
fiadds
mov
rep
mov
fdivrs
loop,pt
das
arpl
or
dec
cmp
bound
jne
push
iret
pusha
test
outsl
mov
rcl
sub
dec
dec
dec
xor
mov
popf
mov
mov
pop
dec
ds
inc
lods
std
ja
insl
add
cmpl
ljmp
test
shlb
xchg
cltd
jo
fstl
mov
les
sub
rolb
xor
test
pop
mov
push
mov
andl
call
idiv
ficoms
inc
and
push
jnp
sub
add
pop
add
scas
and
push
xor
imul
push
xchg
xchg
jmp
adc
je,pn
inc
sub
push
jecxz
push
mov
inc
inc
test
xchg
pop
xchg
mov
pop
mov
in
cmpsl
adc
dec
cmp
push
sahf
pusha
add
mov
imul
xchg
pusha
mov
jmp
push
mov
outsl
cmpsb
sti
xor
aad
movsb
mov
dec
sbb
and
std
xor
or
sbb
sti
mov
mov
push
push
addr16
jb
mov
lds
jecxz
dec
xor
cmp
inc
loop
fildll
ss
and
mov
mov
stos
out
lret
add
mov
xor
dec
cs
mov
inc
push
rol
lcall
aas
lds
sub
pop
insl
lods
mov
xor
lods
sub
js
out
xchg
js
xchg
push
dec
imul
fists
mov
mov
push
les
sti
cmc
aam
mov
outsb
icebp
add
lret
out
punpckldq
fldt
mov
xchg
xchg
mov
test
pusha
clc
js
cmp
mov
push
outsb
dec
mov
xor
fildl
push
adc
jne
popa
dec
sub
jmp
xor
cwtl
out
pop
fstps
adc
cmpsl
pop
cmpsl
rorb
cmp
mov
es
xlat
pop
mov
push
gs
inc
outsb
popf
cmpsb
sbbl
out
sti
std
rorl
and
in
add
scas
mov
lock
adc
dec
repnz
es
jg
mull
out
mov
inc
mov
push
insl
clc
cmpsl
test
adc
mov
movl
test
jmp
xchg
jge
jno
xchg
cwtl
cmpb
jbe
sbb
mov
pop
sbb
and
shrb
in
nop
fisttps
arpl
push
sub
pop
push
data16
cmp
pop
test
movl
mov
mov
pushf
xchg
add
pusha
cmp
imul
enter
sbb
aaa
xor
mov
in
data16
jl
lock
mov
jecxz
shl
aam
das
movsb
icebp
or
mov
mov
or
imul
rolb
fbld
mov
mov
push
mov
adc
das
add
jbe
push
push
notb
mov
mov
in
pop
sbb
test
out
sbb
loope
mov
push
xchg
and
xchg
out
subb
push
insl
jb
jno
cmp
ljmp
in
fsubr
notl
int3
inc
inc
cwtl
aas
roll
dec
pop
push
jbe
leave
cltd
mov
mov
cmp
or
push
pop
sub
rclb
daa
jmp
add
in
mov
cli
daa
das
fdivr
xor
jge
jmp
hlt
jmp
out
jge
xor
sti
aad
pop
add
testb
repnz
mov
mov
int3
add
mov
xchg
pop
xchg
inc
or
mov
pop
or
test
insl
xor
jp
out
rep
inc
stc
or
fnstsw
adc
push
push
push
dec
fmull
pop
cmp
rcll
add
pop
daa
cmpsb
or
xchg
mov
shr
mov
ss
sbb
jmp
push
mov
mov
ret
pop
test
lret
push
or
dec
add
cmp
rcrl
pop
incl
sbb
les
jl
cmovb
mov
mov
add
mov
int3
xor
or
pop
push
out
rorb
stc
je
rorb
movsl
push
ret
pop
rcll
call
push
sub
subl
ss
out
out
xor
and
sub
mov
pusha
les
adc
sbb
shll
sbb
subb
xchg
dec
xchg
pusha
fdivrl
push
xor
scas
cwtl
bound
mov
mov
andl
nop
lock
sbb
ret
and
daa
jecxz
push
data16
xchg
push
inc
mov
pop
lahf
arpl
paddsw
mov
sbb
hlt
jle
es
mov
out
popa
push
or
into
pop
add
lock
ja
jp
mov
shll
cmp
ss
push
jo
and
clc
mov
pop
add
bound
add
xchg
stos
and
xor
iret
insb
cmpsl
icebp
out
imul
sti
and
cld
adc
sub
inc
add
cmp
jg
lds
test
sbb
gs
imul
pop
jb
sahf
push
mov
insb
inc
mov
or
mov
popfw
push
movsl
push
cmc
repnz
nop
iret
test
clc
jle
xchg
and
lods
adc
adc
and
or
add
nop
ja
or
imul
jl
pop
pop
cltd
jns
lahf
in
push
push
out
pop
iret
xor
xor
lds
out
sub
add
inc
shll
stos
in
leave
clc
stos
aam
shrb
pop
sub
mov
sub
cmp
mov
pusha
cltd
pop
fcomi
mov
int3
in
jns
mov
cltd
cs
inc
outsb
out
or
mov
fsts
jae
or
ret
xchg
xchg
cmp
sub
xchg
mov
int
ret
out
pop
arpl
loop
sub
cmc
push
xchg
pop
cwtl
test
fmull
xlat
dec
ret
clc
xor
in
jns
or
cmp
in
and
lods
mov
in
mov
loopne
add
mov
dec
popf
dec
xor
pop
xchg
mov
or
arpl
lcall
cs
outsb
pushf
ds
neg
sub
out
jnp
jg
jne
icebp
aad
hlt
iret
ja
int
push
loopne
push
int
scas
dec
mov
pushf
jo
iret
mov
pop
bound
int3
add
jl
sbb
jo
and
or
mov
je
mov
pop
and
xchg
push
or
cmc
push
loope
mov
orl
jmp
mov
dec
cmc
mov
out
lods
jbe
leave
push
std
and
push
mov
dec
cmp
sbb
andps
ret
out
sbb
mov
shrl
ss
notb
xor
add
push
inc
or
pop
cltd
shrl
xor
pop
add
mov
sbb
test
std
cmc
cmpsb
xchg
cmp
inc
stos
loope
pop
loopne
cmc
jge
aad
lret
es
fisttpll
fdivr
ds
loope
movsl
loop
push
leave
dec
cltd
pop
pop
xorl
mov
xor
push
cmp
jo
call
pop
mov
into
das
and
mov
add
push
dec
push
adc
test
int3
mov
repnz
adc
idivl
xor
or
xor
or
icebp
pusha
mov
push
pop
popf
mov
testb
cmpsb
or
in
dec
pusha
push
cmp
decl
dec
jl
mov
cmp
cltd
cld
xchg
sarb
xchg
xor
jl
jg
jecxz
sub
imul
das
push
leave
lods
pushf
mov
pusha
repz
push
push
xchg
push
cmp
aas
enter
mov
adc
mov
mov
jb
push
das
adc
xchg
sub
pop
sar
sbb
and
mov
and
fwait
ljmp
jno
cmp
mov
inc
mov
lahf
inc
in
mov
rep
in
inc
mov
cmp
xchg
in
inc
or
mov
jp
loope
pop
jb
out
mov
imul
js
repz
xlat
add
add
inc
jl
das
in
ljmp
mov
ljmp
xchg
int3
sub
jmp
das
and
xor
test
cli
jo
add
inc
mov
mov
in
flds
lds
fwait
sbb
cvtdq2ps
fistl
push
cltd
cmp
push
sahf
inc
mov
mov
jae
sub
and
das
nop
test
mov
dec
jae
mov
xor
lahf
or
mov
scas
data16
mov
cmpsl
dec
inc
imul
xor
mov
dec
sbb
adc
dec
das
jg
out
inc
out
dec
jo
fwait
cmp
inc
inc
dec
push
push
push
rcrl
mov
clc
adc
sbb
pcmpeqb
sbb
insl
hlt
or
push
inc
lods
movsb
movl
xor
pop
jmp
stc
xchg
cli
repnz
or
xor
enter
jg
cltd
movsb
sub
sbb
mov
add
pushf
adcl
xor
xchg
mov
cmp
inc
clc
push
push
out
jnp
inc
cmp
adc
mov
ja
shll
or
iret
test
inc
int3
dec
xor
ja
loop
xchg
aaa
test
and
and
xor
mov
xchg
aas
and
push
popa
mov
lahf
cmp
pop
test
xor
mov
icebp
and
push
ljmp
bound
jg
scas
mov
hlt
dec
and
cltd
jge
fiadds
lods
loope
xchg
xor
subb
push
repz
sub
ret
stos
push
push
mov
jns
xor
mov
mov
clc
cmp
test
adc
add
cmp
sbb
mov
shlb
dec
ja
xchg
les
pop
fsubrs
roll
cmp
inc
iret
in
add
xchg
inc
mov
iret
sub
xor
push
shll
test
adc
ficomps
or
out
in
cmc
mov
loope
ret
lods
int
mov
add
loop
adc
push
pop
mov
pop
mov
mov
cmp
daa
outsb
jbe
cli
mov
add
mov
or
leave
icebp
and
and
xchg
mov
aas
mov
mov
sub
icebp
pop
xor
adc
adc
jnp
push
add
std
mulb
dec
fistpll
leave
stos
push
cmp
dec
hlt
add
and
pop
lods
xor
or
pusha
loopne
sub
xor
fcoml
inc
pop
test
add
cmp
xchg
ja
mov
ficoms
loope
daa
jmp
add
fadd
sbb
jmp
fadd
outsb
xchg
inc
jno
scas
bound
push
push
adc
stos
mov
leave
imul
std
push
xor
mov
jge
subl
sub
jae
dec
jp
lods
jl
sub
pop
xor
cltd
inc
sbb
dec
stos
sbb
test
inc
outsl
dec
push
dec
jecxz
inc
push
sbb
pop
inc
fdivl
enter
ss
and
vcvtdq2ps
jp
mov
pop
cmp
sub
inc
xchg
mov
pop
lods
movsb
call
in
ja
push
pop
lahf
addb
sahf
add
popa
jecxz
push
jb
out
lock
xchg
das
adc
mov
pop
cmc
subl
cwtl
push
lds
frstor
push
inc
stc
push
xchg
xchg
adc
or
and
test
js
jnp
or
repz
push
cmpsb
adc
xchg
mov
pop
lea
sahf
rcl
xor
pushf
roll
push
nop
cs
mov
shlb
scas
push
inc
xchg
and
mov
push
mov
mov
mov
loop
ss
shlb
pop
inc
bound
movsb
loop
push
or
xor
andl
push
lret
mov
mov
or
jp
mov
push
ja
jg
cmp
insb
std
out
out
ds
in
mov
mov
ffree
shlb
loopew
push
or
cmp
push
ss
loopne
pop
xor
adc
loope
les
cltd
add
and
push
cwtl
cmp
mov
and
test
cli
push
add
xlat
mov
das
int3
push
sti
pusha
adcl
es
psubusb
jle
cmp
jae
cmp
dec
sbb
fwait
mov
cli
in
jb
sub
mov
inc
jns
into
mov
repnz
rol
push
into
mov
inc
aaa
mov
ljmp
push
sbb
inc
inc
sub
movsb
adc
or
mov
dec
mov
or
sub
and
outsb
hlt
xor
mov
cmpsb
xor
data16
pop
fs
int
cmp
stc
xchg
inc
and
leave
mov
jae
jmp
mov
enter
out
cmp
mov
cld
mov
pop
je
pop
xchg
push
jecxz
cmpsl
fs
data16
iret
push
sub
jp
dec
pop
std
cmpsb
insl
sarl
fisttpll
data16
ss
add
sbb
mov
add
in
jle
ret
repz
std
jle
loope
mov
pop
sahf
mov
popa
add
and
add
ss
and
pop
lock
scas
sbb
fs
insb
and
xchg
das
fst
ds
add
leave
mov
mov
fimuls
jno
mov
ret
or
fsubr
add
lahf
in
loopne
scas
sbb
jae
cmpsb
pop
xchg
sub
sub
mov
ret
mov
sbb
push
lret
lret
fdivrp
push
inc
push
nop
daa
mov
cmp
loopne
popf
mov
arpl
pop
jbe
or
sbb
xchg
leave
pop
das
into
jmp
sbb
sub
push
jl
push
inc
pop
xchg
movsb
fcoms
fdivl
cwtl
out
ljmp
cmp
into
imul
lods
sar
scas
push
stc
pop
mov
fst
adc
sbb
dec
test
mov
sbb
pop
jmp
std
inc
push
stos
cmp
scas
adc
cs
xor
scas
mov
add
cmpsb
xor
mov
push
das
jp
out
lcall
or
mov
jne
cli
add
xchg
ss
sti
js
xchg
in
outsl
jecxz
inc
rcl
mov
ljmp
aas
adc
in
inc
inc
ret
and
jle
push
cwtl
stc
lds
or
sub
hlt
jae
in
mov
lea
jle
adc
pop
or
gs
pop
les
cmpl
xchg
test
or
push
addl
cmp
mov
push
clc
jno
in
push
mov
mov
or
mov
adc
cmp
lods
add
push
lock
scas
mov
out
mov
das
or
push
cmc
add
inc
adc
jmp
xchg
aaa
add
gs
loop
push
call
jne
test
idiv
mov
jl
add
adc
movsl
lock
push
ss
xchg
lock
cmp
mov
sub
cmp
jmp
pop
adc
sub
int
xchg
adc
and
adcb
loopne
cmpsb
jmp
mov
pushf
insl
inc
push
add
dec
scas
pusha
jmp
xor
aaa
xor
mov
cltd
addr16
inc
push
outsl
pop
sub
dec
mov
xor
enter
cmc
cmp
inc
cltd
xlat
stos
xchg
mov
push
ret
in
cmp
jae
mov
int3
gs
pushf
out
xchg
push
stc
push
test
repnz
adc
lret
jnp
push
movsl
inc
insl
dec
sbb
jl
or
mov
and
sti
gs
fidivl
push
mov
pop
mov
cmpsb
lcall
daa
ljmp
mov
xchg
ret
and
add
int
jmp
xor
je
mov
dec
insl
dec
push
jae
sti
and
mov
ljmp
mov
push
cmp
push
inc
fists
mov
xor
nop
cmpsb
mov
jno
inc
into
pop
or
std
xor
add
sbb
repnz
add
pop
enter
sub
dec
hlt
add
and
jno
ja
adc
es
dec
das
cmc
cmp
cmpsb
outsb
sar
xchg
pop
xchg
cli
les
jae
jne
sbb
lret
js
dec
jmp
jl
pushf
es
call
and
test
scas
mov
mov
enter
movsb
clc
add
popa
jae
loopne
jae
int
pop
jl
aaa
les
inc
jb
xor
sbb
and
es
leave
sub
call
movsb
cwtl
pop
push
jno
test
jge
cmp
push
mov
push
cmp
add
pop
cli
mov
les
dec
sbb
mov
rorb
decl
xor
ret
dec
sub
push
movsb
mov
addr16
push
mov
sahf
cmp
stos
pop
loop
jae
add
push
outsl
mov
nop
insb
push
push
jb
iret
popf
adc
inc
mov
pop
cmpsl
pop
cmp
sub
pop
mov
ss
popf
into
mov
aad
xor
fcmovu
add
scas
dec
dec
pop
push
ret
inc
push
and
inc
int3
dec
xor
hlt
sbb
xchg
arpl
lret
je
jl
cmp
jmp
add
rorb
pop
je
dec
jbe
loopne
out
cltd
push
outsl
and
call
sbb
rcll
pop
movsb
dec
test
or
repz
int
gs
and
imul
jmp
mov
out
push
icebp
loopne
cltd
xchg
inc
sarb
mov
loope
loopne
pop
into
jp
lds
pop
fstps
test
nop
fisubl
mov
ja
pop
shld
int3
int3
mov
inc
push
mov
jb
jne
inc
lahf
rorb
filds
test
mov
iret
sbb
in
aam
push
out
jnp
sub
push
in
jae
sbb
add
std
loopne
stc
cmc
test
jno
shlb
aad
jb
into
xchg
mov
lds
mov
xlat
clc
aam
mov
cmp
shrb
cmp
sti
dec
test
test
jnp
sbb
mov
push
inc
inc
cmp
cmp
xchg
xor
aam
fprem
sahf
ret
pop
xchg
xchg
pop
fildll
jl
ret
dec
sbb
xchg
mov
sub
cmp
lds
sub
push
or
out
push
testb
or
push
add
arpl
popf
aam
out
push
and
jns
mov
cmp
iret
pop
stos
push
cmpsb
push
pop
andl
hlt
jno
add
lret
movsl
movsl
ljmp
daa
clc
nop
sahf
pop
inc
insl
out
xor
and
push
arpl
sbb
loopne
pop
rcrl
jmp
stos
pop
push
xchg
jecxz
mov
pop
mov
jg
push
pop
out
fcoms
adc
cmp
xor
ss
lods
push
dec
fldenv
out
mov
inc
mov
jnp
cld
pop
insb
gs
dec
xchg
lea
aaa
xor
decb
movsl
in
adc
repnz
xchg
or
xor
xchg
arpl
mov
ss
xor
fcoml
xor
mov
iret
mov
sahf
out
mov
xor
cwtl
jmp
dec
mov
bound
inc
xchg
jmp
cmp
and
cmc
xchg
arpl
pop
addl
rol
ja
aad
pop
add
and
add
dec
scas
movsl
sbb
dec
loope
mov
inc
aaa
jmp
jnp
arpl
idiv
sub
into
and
insl
dec
insl
xchg
outsb
jecxz
sbb
int
loopne
addr16
adc
loopne
loope
and
fwait
fs
pop
or
mov
mov
cli
xchg
in
jb
inc
and
fcomps
xor
mov
pop
xchg
test
sti
or
xchg
repz
xor
ficoml
xchg
xor
xchg
popf
inc
mov
fdivrl
movsl
shl
movsb
stc
or
arpl
repnz
iret
push
fisubs
or
dec
adc
fisttpll
fwait
mov
adc
sar
and
sbb
mov
and
daa
xchg
pop
jmp
mov
lea
in
outsb
ret
xchg
rolb
pop
cmp
ljmp
pop
jno
push
sbb
movsb
mov
dec
and
push
pop
cli
push
loopne
jg
pusha
subb
lock
push
pop
jle
add
pop
pop
jp
push
cmp
xchg
shll
inc
lea
scas
test
js
cmp
pop
and
xor
movsl
xchg
pop
jbe
add
loopne
inc
push
sbb
inc
and
mov
and
movsl
fnstsw
cmp
mov
push
iret
push
adc
push
pop
sub
enter
xchg
in
push
push
cmpb
adc
or
xor
pop
gs
fimull
add
xor
cmp
sub
in
repz
hlt
mov
mov
incb
mov
pop
push
int
scas
cwtl
cwtl
xchg
mov
jmp
int
xchg
dec
shrb
and
adc
repnz
in
xchg
aaa
mov
inc
jmp
stc
pop
cmp
clc
push
int3
xlat
js
jb
pop
pop
dec
add
jnp
insl
add
mov
xor
xchg
loope
leave
ljmp
cmpsl
aam
loop
in
inc
jl
sub
loope
xchg
lea
movsl
push
pop
addl
dec
sub
push
xchg
into
jp
or
dec
sub
add
mov
xchg
adc
int
add
clc
inc
cltd
les
dec
stos
cs
fldenv
pop
jmp
addr16
mov
lds
aaa
xchg
sti
sarb
jo
or
or
lock
movsb
in
jp
popf
nop
xor
movsb
fldt
idivb
ss
je
sahf
pop
lods
or
mov
stos
cwtl
xchg
les
inc
mov
filds
xchg
andl
js
clc
scas
xchg
mov
call
sub
pop
push
mov
sub
jmp
xchg
shrb
ret
add
sub
dec
jmp
shr
dec
ja
int3
mov
and
adc
xor
imul
shrb
dec
push
jecxz
cmc
push
sbb
xchg
lock
xchg
sahf
in
fists
mov
into
push
fiaddl
push
sbb
lods
cmpsb
scas
jmp
les
bound
stos
addr16
testl
cmp
aam
inc
inc
jge
mov
xor
mov
lret
adc
inc
xchg
inc
lods
cmp
adc
in
shll
test
sub
imul
pushf
arpl
lret
add
bound
ret
add
xorl
leave
sub
repz
mov
out
jecxz
mov
dec
xor
or
scas
mov
adc
jmp
dec
mov
mov
lods
aaa
mov
stos
lcall
xchg
adc
jle
fistps
mov
ret
popa
stos
je
inc
cmp
jg
loope
faddl
mov
mov
cwtl
inc
js
out
aam
jns
inc
mov
adc
push
cmp
xchg
and
js
xchg
js
leave
sarl
dec
add
psubsb
xor
or
push
aad
adc
fisubrl
dec
cmp
adc
push
fldt
jbe
mov
adc
add
xor
xchg
bound
push
call
xchg
daa
xchg
loope
popa
sbb
fnstenv
mov
popf
pop
mov
pop
cmp
repnz
cmp
out
or
sbb
fdivs
push
xchg
or
orb
sbb
push
adc
cmp
dec
es
xor
inc
add
mov
adc
outsl
das
mov
movsb
sub
nop
rcrl
test
push
das
test
dec
jbe
shll
cmpsl
mov
out
cmp
pop
ds
lods
cld
sar
push
cli
push
cwtl
js
mov
test
jg
xor
in
inc
mov
pop
cmp
xchg
leave
out
pop
fidivs
testb
std
pop
push
lahf
lds
and
jge
iret
jmp
cmp
scas
jg
dec
fisubrs
aaa
imul
lods
jne,pn
push
add
add
adc
sbb
inc
outsl
cltd
das
xor
aas
or
inc
xchg
pop
mov
mov
jnp
cltd
or
stc
xchg
inc
shl
push
mov
dec
mov
push
and
lods
push
adc
cltd
and
hlt
ja
xlat
out
and
jns
or
pop
jnp
jg
mov
jp
enter
negl
lcall
mov
mov
stc
and
adc
adcl
stc
dec
js
test
mov
mov
les
movsl
xor
jns
mov
pop
dec
pusha
push
mov
sub
pop
jge
fwait
sbb
int3
dec
lods
daa
cwtl
push
test
cmp
inc
clc
xlat
mov
sbb
cmpsb
sub
push
dec
jnp
fstpt
xor
out
xor
xchg
ret
lret
in
enter
mov
xchg
add
dec
loop
ljmp
loope
push
push
mov
jns
roll
fcmovu
adc
hlt
fistpll
adc
and
ds
ret
bound
fnstsw
xorb
add
lds
or
pop
std
in
aaa
mov
mov
sub
add
xor
outsl
jbe
sub
lods
addr16
scas
imul
out
rcrl
and
sub
push
inc
mov
pop
adc
das
out
xor
jno
cmp
dec
enter
sbb
xor
jo
in
lahf
gs
mov
or
jbe
pop
gs
xchg
fwait
in
pop
pop
jne
add
scas
pop
subb
xor
add
clc
sahf
out
or
pop
adc
imul
add
pop
and
mov
cmp
in
jo
mov
adc
cli
outsl
cmp
mov
xchg
test
pusha
call
fs
popf
popf
test
mov
rclb
push
jecxz
push
and
sub
or
and
lret
outsb
out
ss
mov
lods
mov
stos
xchg
aas
cwtl
rclb
clc
jp
and
inc
lock
sub
add
xchg
or
jg
lods
inc
mov
nop
sbb
icebp
cmpsl
add
jmp
cmp
out
adc
gs
sbb
xor
mov
push
testl
lods
rcl
push
fildll
xor
dec
adc
dec
lcall
pushf
int3
push
jns
rcrb
cmp
inc
inc
shll
adc
scas
adc
xor
mov
or
sbb
scas
out
xor
hlt
inc
loope
stos
sbb
and
rclb
outsl
push
jmp
iret
fwait
pop
add
ja
mov
fwait
mov
cld
and
clc
dec
sub
adc
cmp
jnp
leave
test
fsts
jecxz
jecxz
cmp
jle
popf
data16
sti
cmp
jnp
or
test
jnp
xchg
add
out
mov
push
addr16
push
out
xchg
insl
adc
push
dec
clc
mov
int
fwait
cltd
mov
mov
pop
xchg
out
mov
or
adc
das
in
pop
addr16
mov
sbb
lods
aam
int
fnsave
or
test
scas
sbb
pop
loope
std
jge
cmp
outsl
repz
lock
jne
jbe
jle
aaa
imul
xchg
popf
es
cmp
and
mov
es
mov
add
je
fcoms
jb
push
jo
ret
call
frstor
lahf
jbe
cmp
ljmp
lret
jb
mov
rcrb
stos
mov
or
mov
loop
fimuls
movq
std
inc
cmp
pusha
pop
cmc
mov
into
xchg
fists
jbe
sbb
add
fiaddl
inc
dec
cmc
scas
ss
inc
inc
push
loopne
lret
fcomp
dec
mov
cli
push
addr16
sbb
xor
loope
jne
addb
movzwl
and
jns
repnz
mov
je
push
cltd
jns
adcb
cmpsb
sbb
or
jo
out
jle
test
mov
or
int3
sbb
mov
lahf
das
jp
push
popf
dec
lods
lret
loopne
bound
sbb
mov
daa
cs
sub
push
dec
dec
dec
adc
push
jae
pop
inc
nop
loope
inc
xor
pop
sbb
testl
and
pop
popa
movsb
ret
gs
test
stos
mov
dec
pop
test
outsl
sahf
ljmp
loop
dec
or
xchg
sahf
out
daa
out
and
sti
mov
scas
lock
inc
cltd
dec
jge
pop
mov
ja
pop
pop
loop
cmpsb
cld
cmp
int
clc
lcall
xchg
outsl
inc
push
mov
aas
das
lods
mov
jmp
insb
shl
xor
fsubl
dec
sbb
in
cmc
jl
lds
dec
int3
pop
mov
xor
test
rorl
leave
dec
into
mov
insl
sub
push
push
outsb
in
mov
sbb
inc
adc
mov
stc
push
js
aaa
mov
popf
mov
mov
push
xor
leave
pusha
pop
adc
hlt
xchg
inc
into
jae
adc
jbe
lret
test
add
data16
xchg
adc
fistpll
jo
ss
jecxz
lret
adc
sbb
add
adc
pusha
mov
mov
pop
sbb
fistpll
in
push
and
sti
cmp
outsl
aam
adc
push
push
jae
pop
clc
jecxz
dec
jle
repnz
jge
cli
cmp
push
leavew
shll
loop
imul
mov
sbb
pop
aaa
and
jp
jns
push
insl
or
xchg
cmp
orb
out
xchg
xchg
test
adc
or
cmpsb
cltd
xor
cmpsb
inc
mov
sarb
divl
mov
jl
fstl
jl
mov
mov
mov
push
xchg
sbb
cmp
adc
jge
cwtl
push
inc
iret
jno,pt
cltd
cmpsl
shlb
jnp
lds
dec
ret
loope
mov
bnd
inc
push
push
addr16
iret
lahf
inc
adc
dec
aad
push
cltd
mov
push
inc
sbb
lret
xor
push
popf
or
lods
iretw
ds
enter
dec
jp
sbb
pop
test
jge
mov
pop
xor
mov
adcb
aaa
jl
cmp
inc
xor
and
push
mov
jge
negl
in
pop
test
jo
xchg
cmpsb
xor
pop
mov
stos
mov
pop
jae
test
xor
and
fnstenv
mov
rcrb
jp
push
stc
add
mov
and
pop
mov
adc
mov
jle
aad
mov
in
xlat
mov
out
mov
std
xchg
add
jge
xchg
aam
add
xchg
inc
dec
and
sbb
daa
sub
adc
add
or
test
jge
mov
fisubrl
mov
fsubrl
adc
aam
pop
jmp
mov
lret
xchg
mov
pop
cmp
jmp
fcoms
popf
inc
cmp
outsb
aam
dec
sarl
lea
mov
mov
repz
add
xchg
fldenv
sti
loopne
rcl
sbb
sub
mov
mov
push
lds
mov
dec
and
mov
xor
mov
pop
insl
dec
cwtl
mov
in
jge
fcomps
jns
sub
insl
dec
and
imul
jmp
and
pop
dec
ret
mov
pop
sub
rclb
mov
test
scas
pop
dec
in
mov
fmull
cmpsl
clc
das
subb
aas
icebp
popf
pop
jg
jbe
and
in
in
jb
outsb
fnstsw
sahf
int3
or
popf
lret
leave
das
aam
xor
fistl
inc
pushf
int3
call
clc
mov
ljmp
lock
mov
mov
cmp
je
pop
pushf
push
lahf
addr16
sahf
lock
sarl
xchg
daa
icebp
out
xchg
icebp
mov
out
aad
adc
sbbb
lock
and
add
adc
fsubrl
adc
mov
lea
mov
xchg
or
sbb
insl
loopne,pn
cmc
bound
adc
jae
movsl
test
sbbb
pop
xchg
sub
xor
cmp
icebp
xchg
xchg
pushl
in
lds
add
setge
negl
sbb
inc
lock
xlat
fwait
icebp
mov
fadd
or
xchg
bound
or
nop
and
daa
adc
cmpl
lds
insb
jmp
jns
loop
nop
xlat
add
pop
mov
cmpsl
pop
movsb
aaa
add
cmp
pop
or
hlt
dec
cli
add
fcompl
cli
cmc
mov
fisttps
dec
xchg
xchg
pusha
inc
out
add
dec
ffreep
cmpsb
push
jmp
rcll
xchg
or
xchg
pop
je
adcb
push
push
push
add
cmp
icebp
rolb
repz
xchg
inc
lahf
movsl
xor
push
aas
in
mov
lods
add
loop
jle
repz
dec
xchg
pop
bnd
imul
ret
jbe
imul
mov
insl
ljmp
mov
hlt
test
or
test
pushf
incl
insl
pop
mov
push
cmpb
xlat
aas
mov
dec
add
jns
lahf
dec
cmp
xchg
jmp
mov
mov
stc
mov
fbstp
sbb
loopne
fnstsw
cmpsl
ljmp
cmpsl
or
scas
fs
add
and
push
repnz
frndint
cltd
adc
mov
int3
xchg
sarl
aam
lahf
jle
shlb
sti
sbb
mov
insb
ret
adcl
in
xchg
mov
orb
daa
incl
pop
mov
es
and
cmp
scas
xchg
lahf
in
or
dec
and
mov
dec
jbe
shrb
adcl
push
dec
jp
lret
cltd
sbb
mov
push
test
push
push
pop
xor
jp
cmp
push
psraw
xor
jg
enter
mov
ja
aam
fwait
xor
inc
pop
mov
cmp
add
pop
cwtl
add
fmuls
pop
mov
jno
sbb
or
aam
push
cmp
out
push
mov
push
loopne
sub
jle
mov
mov
mov
negb
enter
pop
fnstenv
or
sbb
jecxz
lea
fwait
nop
mov
das
xchg
aas
mov
pop
xchg
iret
scas
mov
test
mov
lret
jbe
push
sti
popa
adc
sub
pop
stos
jl
lcall
push
pop
xlat
lds
jnp
idivl
dec
sub
inc
loop
mov
out
ret
daa
data16
pop
sub
xor
idivl
arpl
or
mov
es
aam
es
dec
call
sbbb
pslld
fsubrl
into
or
sbb
cvtdq2ps
je
cmp
les
jo
stos
cmp
sub
js
pop
test
jl
jg
je
out
call
fstpt
adc
jns
add
dec
icebp
ss
jmp
push
mov
nop
sub
ficomps
je
data16
ja
ret
test
je
dec
sbb
leave
mov
inc
clc
jb
es
sub
lret
subl
imul
cmp
jg
shll
clc
test
cmpsl
sbb
or
int
push
sbb
push
cmc
mov
mov
lea
sub
test
ror
sbb
jp
mov
cmpsl
cld
ret
addr16
pop
lock
sub
push
push
ret
push
clc
dec
imul
loope
push
push
out
jg
mov
fidivl
rol
sub
or
jg
rorb
bnd
sub
jecxz
inc
xchg
inc
sbb
pop
or
fwait
mov
es
cmpsb
out
pushl
sti
repnz
sbb
or
out
and
lea
xor
xor
pop
sbb
or
iret
jbe
xor
dec
aaa
lea
sbb
mov
lods
cmpsb
pop
pop
lds
mov
mov
rcrl
into
inc
pop
jne
and
push
jnp
into
insb
mov
inc
pop
xchg
clc
pop
cmp
loop
mov
sbb
push
sub
mov
scas
in
jecxz
jns
bound
jp
mov
inc
outsb
sub
cmp
test
repnz
mov
push
xchg
pop
add
xchg
shl
sar
xchg
out
pushf
and
mov
xlat
and
adc
cltd
rol
out
sbbb
out
mov
js
insl
faddl
arpl
xchg
mov
adc
xchg
lock
push
addr16
adc
loope
popa
and
adc
divb
push
adc
fbld
fsubrl
mov
mov
cmp
into
mov
pop
add
adc
arpl
mov
lea
jmp
shll
lahf
repnz
dec
mov
adc
and
sbb
and
subb
lret
lods
aas
outsl
lret
orl
sbb
adc
fnsave
and
aas
xchg
fwait
dec
sub
xchg
aam
jno
pop
adc
xchg
add
push
inc
cmc
enter
loopne
xor
or
mov
stos
or
cmp
mov
dec
sbb
sub
ret
cmp
jo
aaa
or
outsl
xor
out
ja
or
add
mov
testb
jmp
mov
pop
jecxz
sar
mov
lahf
inc
sbb
or
push
mov
add
fcmovu
jae
inc
in
mov
sbb
cmp
mov
push
dec
dec
test
shrb
mov
xchg
loopne
aad
fs
mov
iret
mov
fcmovb
push
sub
jne
into
call
pop
add
push
aaa
into
in
sti
daa
push
adc
xchg
ja
das
shl
inc
adc
mov
mov
pop
mov
sub
mov
lcall
int3
dec
daa
stos
scas
xor
dec
inc
test
out
jg
out
adc
cli
rcll
lcall
sbbl
gs
stos
gs
push
cmp
aad
ror
or
fcmovb
mov
pop
call
xor
loope
icebp
mov
in
mov
repz
add
pop
add
es
mov
xchg
je
filds
dec
in
repz
jp
std
dec
rcrb
fwait
cs
push
mov
dec
in
cmp
pop
std
or
jl
push
cmc
std
out
jmp
xchg
scas
cwtl
popa
push
and
pop
jne
mov
push
dec
push
scas
pop
gs
icebp
je
sahf
nop
cld
subb
pusha
mov
popa
cld
mov
mov
dec
jbe
jg
cwtl
xchg
push
jmp
cmpsb
nop
sub
loop
xchg
add
sub
inc
jns
jno
pop
insb
and
das
dec
add
popf
gs
mov
call
pop
in
or
or
add
xor
pop
mov
or
shlb
xchg
inc
cmp
ret
fsts
cmpsl
scas
inc
fnstcw
addr16
mov
mov
pop
arpl
pushf
lret
mov
jl
in
xor
jle
and
jmp
roll
aad
insl
aaa
mov
es
push
shll
cmp
out
push
les
into
in
cmpsl
lcall
ret
std
sub
mov
sbb
dec
cmp
inc
push
sar
insl
mov
lahf
test
adcl
inc
out
mov
in
repz
xor
das
mov
fwait
rclb
dec
sub
push
jg
mov
data16
lret
and
dec
outsl
leave
add
into
fs
dec
lret
mov
add
pop
es
adc
inc
and
out
inc
dec
jne
dec
std
rcl
in
rcll
or
stc
and
jne
clc
push
lods
in
pop
lret
sahf
int3
cltd
and
into
and
dec
sbb
or
stc
ljmp
sub
clc
rolb
xchg
and
jmp
mov
dec
pop
adc
xchg
sub
mov
mov
js
mov
scas
out
cmp
ja
in
in
pushf
cmp
mov
mov
inc
xchg
test
lods
outsl
xor
xchg
out
pusha
and
mov
shll
cmp
fcmovb
enter
push
lret
lock
inc
call
stos
repz
movsl
sbb
lcall
movsb
push
mov
fcmovnbe
push
cli
jecxz
aaa
push
xlat
mov
repz
shl
pop
sub
in
adc
jno
ja
mov
into
out
add
lret
outsl
nop
jle
es
or
ds
out
test
cs
pop
bound
jae
sbb
mov
xor
jns
in
btrl
and
inc
cld
pop
into
mov
test
pop
lret
or
lea
sub
or
ds
insl
ret
fs
mov
xchg
into
fsubl
pop
add
pop
pop
mov
mov
outsl
insb
pusha
test
daa
or
cmp
fdivl
dec
adcb
xchg
and
push
fsubrp
push
xchg
sti
jge
and
enter
test
xchg
mov
push
xchg
add
jo
sbb
sub
popa
enter
lahf
or
loope
in
sahf
inc
cli
add
shll
daa
scas
inc
cld
mov
or
jb
add
sub
add
ljmp
xlat
js
jmp
add
inc
bound
popa
test
inc
push
shll
lcall
fisttps
push
imul
add
mov
enter
jmp
push
mov
aad
mov
mov
lahf
push
stos
push
mov
fmuls
sbb
test
std
int
sub
sbb
jno
ja
jle
mov
loopne
inc
cmp
xchg
push
ret
xchg
or
dec
pop
sbb
sub
adcb
jns
test
test
mov
int3
push
shr
int
mov
negl
cmp
or
fcomp
and
xchg
dec
aad
jne
mov
in
add
sub
xchg
add
xor
adc
inc
cmp
lret
lds
sbb
sub
lods
fs
sbb
mov
icebp
aaa
fcomip
jge
stos
add
pxor
fst
push
in
inc
outsb
mov
push
lea
push
add
in
push
pop
lret
daa
sarl
and
loopne
fistps
sub
sub
push
cmp
in
movsb
inc
and
mov
outsl
hlt
jnp
fwait
xchg
or
lods
sbb
cmp
mov
inc
rclb
jne
mov
jp
pop
ja
push
mov
jns
dec
sub
bswap
add
bound
dec
mov
gs
xchg
xor
pop
push
lods
in
sbbl
movsb
fstps
addb
adc
mov
and
scas
test
scas
or
stos
sub
mov
outsl
js
or
out
xor
sub
add
lret
jnp
movsb
cmp
stc
mov
xlat
xor
stos
pop
movsl
mov
xchg
dec
or
data16
test
sub
sbb
into
in
inc
insb
cmp
stos
sub
out
movsb
addr16
push
sub
ret
and
add
xchg
jp
repz
insl
imul
js
in
mov
or
js
mov
insl
addr16
inc
add
in
xlat
in
cmp
pusha
xor
call
cmp
cltd
outsb
pushf
xchg
jle
mov
jle
pop
lea
arpl
lea
hlt
xchg
cwtl
pop
xchg
cmc
popa
aas
xchg
and
jp
mov
adc
push
pushf
inc
dec
push
jnp
popaw
in
repz
jmp
pop
rcrl
outsl
imul
sti
mov
fdivrl
push
icebp
push
lea
repnz
negl
loopne
add
enter
aam
cld
pusha
mov
sbb
xchg
cmp
popa
cmp
jecxz
add
xor
cmp
popa
sub
mov
push
push
mov
fcoms
xchg
jb
rorb
icebp
inc
inc
push
jbe
push
aam
add
ret
mov
xchg
popf
xchg
jno
xchg
daa
adc
sbb
aaa
flds
jne
and
jp
shlb
cmpsb
test
jge
jno
in
push
dec
mov
pushf
test
adc
xlat
aad
outsl
jge
popa
cmp
mov
ja
mov
aas
jb
lret
push
and
jno
push
imul
jnp
mov
cmp
out
cmpsl
outsl
cmpsl
cmpsb
mov
aad
adc
cmpsb
mov
mov
xlat
mov
rclb
add
and
add
inc
or
pop
and
jp
sub
cs
outsb
adc
testb
filds
bound
xchg
xchg
cmp
add
adc
jbe
ja
adc
xlat
fnstcw
xor
rcll
mov
fwait
mov
popl
jmp
daa
jns
outsb
cmp
xorb
rcrb
dec
jns
das
sbb
cmp
int3
pop
xorb
adc
lcall
adc
jo
jmp
repz
test
insb
clc
aam
pop
repz
cmp
pop
adc
int
nop
dec
jnp
daa
xchg
mov
bound
out
sub
push
and
int
lcall
call
adc
sti
loope
push
push
mov
xchg
mov
add
orl
mov
lea
mov
xchg
test
mov
sub
push
dec
cmp
or
movsb
xor
int
scas
mov
movsl
sbb
inc
xchg
adc
xchg
sub
jo
add
xlat
adc
push
scas
jno
cmp
or
call
ret
dec
xchg
xor
jnp
shlb
into
mov
test
bound
ret
test
pusha
adc
test
xchg
xorb
mov
jmp
inc
sbb
dec
add
ret
aaa
iret
push
mov
mov
or
lods
or
pop
imul
jl
insb
jg
jg
fcmovnb
aas
stos
pop
enter
lret
jno
push
das
xor
jo
pop
lcall
lahf
add
call
repz
mov
sbb
ljmp
sbb
dec
jmp
xchg
aam
pop
mov
std
mov
std
cli
out
inc
adc
cmp
lods
out
sar
pop
mov
arpl
dec
scas
rorl
pusha
shlb
shll
mov
xorb
push
fwait
rcrb
push
movsb
pusha
dec
xchg
or
jl
mov
stc
outsb
push
lock
xlat
jae
jnp
pushl
jno
add
mov
add
daa
sbb
das
fcomp
mov
into
xchg
or
stos
xorl
lret
adc
push
nop
dec
scas
push
xor
or
hlt
lahf
ja
push
jae
add
cmpb
cs
mov
and
add
sub
inc
int3
fimull
sub
jmp
out
clc
inc
or
mov
xor
jp
loop
fisttpll
roll
xchg
sbb
aaa
sub
dec
lret
inc
in
xchg
or
lret
sbb
and
xor
inc
fstl
scas
cs
pop
push
cmc
stos
repz
jo
pop
in
lret
mov
mov
out
stos
mov
xchg
push
sub
xor
and
nop
fisubrl
xor
fidivl
cmp
xchg
icebp
adc
std
mov
enter
adc
mov
and
popa
push
dec
pop
sbbb
dec
add
adc
push
cmp
cmc
xor
push
lea
enter
les
ficompl
pop
sti
xor
idivl
push
add
lods
mov
lods
rcrb
inc
iret
xchg
xor
into
xchg
inc
out
movsb
push
rdpmc
and
add
mov
fstps
cmpsl
ficomps
mov
and
pop
sbbb
push
or
pop
aad
or
xor
scas
test
in
xchg
test
mov
pusha
stc
push
sahf
and
jbe
xchg
test
aam
cmpb
and
sbb
jge
ljmp
sahf
in
cmp
mov
rclb
call
add
add
adc
or
xchg
mov
shr
in
ret
psrlw
sub
push
daa
sbb
add
into
movl
in
pushw
xor
and
arpl
mov
bound
ret
xchg
scas
test
or
popa
mov
sbb
jp
rolb
sub
in
jp
sub
mov
adc
xchg
sbb
mov
sbbl
sub
lods
inc
and
notl
mov
nop
lahf
xor
pop
lret
subl
scas
adc
loop
sub
mov
mov
pushf
cmp
push
adc
sahf
out
shrl
in
inc
mov
movsl
movsb
pop
int3
xorb
xchg
cmp
mov
stos
rcl
add
jns
sbb
fwait
nop
lods
jae
ret
add
faddl
mov
jecxz
sti
sarb
adc
pop
mov
fincstp
cld
roll
sbb
pop
push
pop
or
pop
cmpsb
mov
xchg
mov
es
fcoml
sbb
imul
incb
mov
fidivrs
sbb
lds
push
lahf
ret
in
adc
mov
repz
addr16
lds
cli
dec
adc
add
call
jne
jmp
sub
outsl
rorb
inc
test
xor
push
testl
add
inc
cmp
jge
popf
adc
cld
pop
sub
sbb
fisubrs
inc
dec
loop
cmp
jns
cli
ds
leave
shl
cmpsb
inc
push
and
pop
push
aas
adc
push
fcomi
sarl
fistps
enter
fidivrs
je
or
push
test
xchg
testl
insl
cmc
push
cmp
mov
inc
pop
in
push
hlt
adc
clc
adc
in
pushf
mov
lcall
cmc
dec
sbb
and
add
jb
mov
and
lods
rolb
and
gs
in
push
mov
pushf
fiaddl
or
sub
adc
add
push
mov
out
pop
jecxz
inc
mov
sbb
aaa
xchg
mov
xor
or
and
dec
pop
pop
in
sbb
scas
pop
jbe
sbbl
mov
lock
push
and
mov
mov
sbb
arpl
out
sub
ja
lock
dec
nop
arpl
iret
xchg
enter
lods
sub
scas
scas
push
nop
add
fildl
bound
mov
mov
adc
fidivs
stos
sti
stos
ljmp
xor
outsl
cmpsb
enter
pop
fmul
adc
adc
xchg
sarl
sub
int
decb
ficompl
sahf
out
or
xchg
mov
xor
jns
daa
sub
jecxz
insb
cmp
add
add
pop
mov
pop
es
mov
fildl
add
pop
add
out
add
in
das
repnz
xor
pop
cmc
and
fdivr
cmpsl
fwait
sbb
and
lahf
sub
dec
adc
pusha
pop
inc
push
xchg
inc
stc
testl
push
cld
dec
pusha
pop
jb
mov
mov
fwait
push
sbb
ret
insb
mov
pop
mov
ret
test
insb
mov
xchg
dec
andps
into
icebp
jbe
shlb
cmp
cmp
push
stc
jne
and
cmpsb
aam
inc
loop
int
sbb
inc
xlat
sbb
cmp
cmp
mov
pop
mov
adc
pushf
lea
sbb
icebp
add
js
insl
aam
xchg
mov
jmp
sarl
fistps
imulb
mov
mov
jg
push
cmp
and
mov
pop
jp
inc
fcomps
mov
pop
adc
cmpsl
lret
or
xlat
sahf
popa
out
jg
cmc
arpl
xor
ss
mov
daa
fldt
or
repz
add
leave
xlat
jle
pop
mov
ret
popf
inc
cmp
and
cli
xor
xchg
dec
mov
cmp
mov
mov
xlat
fstps
push
gs
and
mov
adc
test
cmp
dec
mov
xor
jle
and
lahf
mov
out
sbb
shll
divl
jno
inc
xor
das
sub
mov
and
jmp
and
pop
loope
loopne
cmpsb
inc
jns
je
adc
push
popa
or
out
lods
pushf
clc
fdivrs
inc
loope
push
pop
inc
lea
idivb
dec
push
inc
adc
jno
flds
xor
sbb
lods
mov
dec
pop
repnz
cmp
xchg
adc
fsubrl
push
push
mov
fs
dec
adc
outsl
mov
test
js
xchg
imul
cmpsb
outsb
xchg
xchg
pop
adc
addb
in
dec
fs
lcall
mov
into
sbb
pop
pop
or
push
adc
ret
push
adc
mov
pop
mov
call
rolb
xor
fidivrl
orl
dec
imul
test
jb
repnz
xor
xchg
xchg
cli
add
dec
stos
jbe
sub
push
push
sbbl
push
out
mov
movsl
loope
cmp
add
insl
dec
cwtl
jb
test
dec
sar
cmpb
rcr
adc
je
movsb
or
mov
dec
pop
popf
sbb
lret
cmp
cmp
sub
in
pop
inc
jno
movsl
jp
jae
push
dec
sbb
in
das
sub
dec
pop
dec
ds
pop
sbb
pushf
jecxz
adc
scas
xor
inc
popf
xchg
jge
sbb
ja
push
pop
aaa
mov
mov
loop
stos
sub
mov
xchg
push
cmp
sub
lock
into
std
dec
push
clc
cmp
sbbb
or
das
add
cmpsl
and
ss
cli
insb
test
ljmp
std
scas
iret
out
or
jmp
and
out
adc
test
push
sbb
rol
pop
mov
sarl
adc
add
and
xor
or
mov
roll
push
pop
pop
mov
outsl
sbb
lods
add
lock
or
mov
mov
xchg
push
xchg
mov
mov
lcall
outsl
and
push
adc
pop
insl
mov
sub
in
lea
int
pop
add
dec
dec
fldenv
jns
sbb
enter
jbe
mov
pushf
sub
cmp
lods
add
ret
sub
pusha
lea
xchg
or
out
jmp
mov
and
mov
subl
int
repnz
add
pop
mov
mov
aam
roll
test
push
mov
xchg
push
movl
jecxz
das
inc
rcr
or
in
loopnew
mov
call
adc
fcom
subl
pop
jno
xor
dec
filds
movsb
lods
iret
sbbl
rcrl
cmp
adc
jnp
mov
mov
in
fdivs
add
ja
jo
or
xchg
add
pop
lods
inc
inc
jne
pop
aas
mov
jbe
ds
add
sbb
sarb
mov
ljmp
xchg
xchg
cmpsl
stos
mov
fsubr
es
sbb
shrb
test
frstor
dec
hlt
rorl
test
cmp
dec
insb
xchg
ds
and
or
cmp
jl
fstpt
pop
inc
dec
gs
aas
arpl
je
arpl
sub
xor
jge
pushl
add
sbb
rcrl
add
sub
xchg
push
push
pop
aas
xchg
movsl
cltd
stc
stos
cmpsl
pop
cmpsw
ret
dec
dec
call
sbb
cmpl
pop
mov
and
gs
sub
in
dec
jne
mov
fsubr
inc
sub
scas
jg
xor
sarl
das
jle
mov
xor
sub
push
rorb
sub
and
jns
test
inc
mov
movsb
xchg
pop
icebp
testb
in
std
stc
adc
scas
sub
jo
dec
or
xor
rolb
into
dec
aad
rol
lcall
aas
and
add
mov
addr16
xchg
scas
and
jnp
jo
sbb
adc
ds
out
orl
jb
outsb
addr16
ficoms
iret
jle
sub
mov
or
pop
mov
movsl
int3
rcrl
or
add
mov
clc
mov
aam
fldcw
mov
negb
pop
xor
pop
push
mov
xchg
je
cmp
adc
movsb
pushf
mov
cs
stos
mov
inc
xor
add
add
out
mov
mov
fbld
mov
dec
pop
pop
lods
push
pop
fwait
movsl
push
sub
mov
pushf
mov
lock
mov
jge
arpl
in
mov
push
xchg
pop
dec
xchg
mov
shl
and
pop
orl
xchg
rcll
sub
pop
dec
testl
or
mov
test
dec
icebp
add
sbb
test
sub
cmc
pusha
out
xor
mov
mov
add
add
add
mov
xchg
pop
loopne
dec
add
and
add
lret
push
adc
pop
loopne
push
push
cmpsb
and
or
cld
pop
leave
lea
jle
cmpsl
popf
es
sub
cmp
xchg
jmp
add
les
fcmove
int
test
jne
ja
pop
stos
bound
cmpsb
add
dec
inc
lds
test
in
cltd
enter
mov
mov
mov
xchg
fildl
ret
mov
mov
xor
and
xchg
icebp
jnp
pushf
gs
iret
fisttps
mov
or
arpl
mov
std
inc
dec
iret
push
xorl
adc
in
mov
popa
in
lea
paddb
jb
ror
rcl
dec
xor
sti
and
aad
insl
or
add
imul
out
cli
jmp
out
jmp
xor
dec
push
add
dec
lahf
sbb
mov
mov
jne
fdivl
pop
jno
add
adc
aaa
in
test
pushf
lret
add
jbe
sub
pop
jp
adc
lahf
pop
xor
clc
sbb
dec
pusha
out
add
sub
xorb
lea
dec
ss
add
mov
test
cmc
dec
pop
and
inc
sarl
lock
mov
out
loop
sti
inc
cwtl
enter
ljmp
xchg
cmp
fildll
pop
shlb
push
std
cmpsl
xor
pop
aam
lcall
cmpsl
scas
bound
in
xchg
aam
popa
inc
psllw
mov
repnz
push
or
add
lods
or
test
out
adc
sahf
int
pop
mov
addr16
jmp
femms
cmp
jno
insb
mov
add
add
pop
push
jmp
add
add
stc
add
shlb
lret
mov
jl
data16
lock
sti
pop
into
adc
fsubrs
xchg
pop
out
mov
jle
sbb
adc
xorl
cmp
sbb
fildl
xor
jns
sti
mov
clc
mov
and
es
lcall
aas
xchg
sbb
add
jns
lret
mov
jl
sahf
in
data16
xchg
aaa
test
jmp
sti
jp
popf
mov
jne
int3
mov
push
cmp
cwtl
fcomip
adc
push
inc
popf
stc
sbb
das
sub
adc
cmpsb
shlb
xor
lcall
add
into
mov
fstps
out
fidivrl
push
popa
mov
mov
daa
shll
xchg
das
jl
mov
cmp
les
int
jne
adc
push
lret
add
cmp
aam
dec
adc
out
inc
outsl
cwtl
dec
popf
pop
lods
mov
aam
inc
pop
jbe
cmp
popa
add
fistpl
lret
xchg
arpl
fnstenv
mov
sahf
out
jmp
in
test
and
push
jae
test
xor
mov
mov
adc
mov
cmp
jl
loopne
lcall
lret
sub
ljmp
push
mov
and
fsts
mov
mov
sub
inc
mov
clc
ss
or
loop
cli
lea
mov
divb
dec
xor
loope
mov
in
xchg
mov
bound
mov
jns
pop
mov
cmc
rcrb
ja
pop
or
add
pop
fimull
rolb
jbe
sub
and
mov
xor
jle
cmp
orl
sbb
leave
in
mov
movsb
mov
xchg
cmp
push
or
inc
dec
stos
rolb
gs
mov
xchg
pop
daa
push
dec
push
mov
pop
ficoms
xorl
jmp
dec
mov
cs
jle
push
mov
xor
mov
inc
push
add
jae
js
lret
ss
test
out
test
xlat
fcmovnbe
push
sar
lahf
adc
push
add
adc
push
movsl
ja
aas
stos
mov
rorb
ljmp
shl
jbe
mov
lock
mov
xor
inc
adc
insb
scas
je
mov
fimull
cli
or
addr16
orl
pusha
scas
sbb
in
add
bound
cmpsl
lret
in
hlt
loope
jmp
xor
enter
cld
mov
cmp
cmp
test
not
cmp
push
add
loop
pop
mov
data16
pop
push
aad
into
popf
es
lea
add
mov
adc
mov
xchg
insb
mov
inc
test
aaa
cli
pop
mov
mov
adc
fidivs
xchg
sahf
xor
jbe
pslld
iret
fadd
mov
mov
adc
popf
fmuls
orb
mov
cmp
sahf
xlat
in
jp
sbb
test
push
or
sbb
jne
mov
lea
xor
cld
mov
fldenv
fcoms
xorl
inc
mov
icebp
cmp
data16
sbb
fadd
sbb
andl
and
jo
add
in
addr16
push
stos
aad
push
sahf
jg
jns
icebp
sahf
scas
rol
ret
popa
pop
sbb
jmp
mov
mov
ljmp
or
adc
mov
sti
pop
inc
ret
sub
hlt
js
pusha
repnz
repnz
adc
das
mov
lret
ds
jnp
cmpsb
pop
pop
xor
pop
faddl
push
cmpsl
mov
idivl
jo
mov
sub
mov
sbb
pop
mov
dec
dec
ja
push
lahf
cmp
sbb
dec
mov
aam
dec
push
shr
mov
lret
test
ficoml
or
ja
imul
inc
cmp
mov
divb
mov
test
pop
lea
std
test
sbb
and
and
dec
jge
dec
int
clc
hlt
scas
aam
aad
and
xor
in
xlat
ds
rcrb
cwtl
ficoml
jg
mov
dec
lock
push
and
imul
or
dec
mov
sbb
jns
ja
push
insl
sub
inc
das
or
cli
stos
push
mov
or
pop
pop
add
cmpsl
out
stos
test
dec
stos
loope
or
scas
push
adc
mov
or
out
in
xchg
push
add
add
add
aas
pop
push
jb
stc
mov
jb
mov
add
and
add
xchg
lock
push
and
in
push
pop
dec
jno
jmp
xchg
ret
insl
xor
in
jbe
mov
sbb
loope
outsl
cmpsl
inc
xor
mov
mov
inc
arpl
or
repnz
fstpl
sbb
mov
lods
mov
dec
xchg
mov
in
scas
mov
push
jb
inc
and
jle
rorl
fucomip
in
xchg
stos
mov
pushf
and
incl
push
inc
aad
push
mov
cli
push
sbb
mov
xor
pop
daa
daa
in
es
jle
in
bound
mov
cmp
dec
aaa
adc
dec
daa
pop
iret
or
pop
pop
jecxz
push
fwait
jae
ffreep
push
cmp
dec
dec
icebp
jbe
pop
lret
push
mov
jae
pop
cld
sbb
hlt
cmp
xor
xor
xor
ja
mov
dec
pop
push
cmc
out
xchg
mov
push
and
ljmp
mov
fucomp
pushf
out
arpl
arpl
mov
and
mov
cs
fisttpl
outsl
int
dec
enter
lahf
cmp
push
add
xor
cmp
addl
add
out
or
adc
jg
mov
sub
or
push
lods
xchg
mov
out
pop
fs
js
dec
cmp
or
xor
mov
lea
out
es
js
mov
jno
popa
push
xchg
sub
push
pop
xchg
jbe
call
js
dec
or
fldenv
clc
or
jno
lds
and
je
out
pop
ret
fiadds
jl
xchg
and
pop
adc
mov
jecxz
or
sub
or
hlt
cmp
das
insl
mov
mov
cwtl
add
jmp
pop
enter
pop
shrb
fmuls
xchg
imul
cmp
leave
jmp
sbb
fs
sub
sti
push
cmp
ret
sub
pop
jns
lea
test
jp
int
movsl
or
dec
dec
jbe
mov
inc
jmp
clc
xchg
in
push
fnsave
movsb
sbb
push
jmp
imul
and
dec
into
xlat
mov
mov
test
pop
mov
mov
sub
mov
xor
ss
and
sub
rcr
mov
test
cmpsb
loope
dec
mov
in
or
or
push
or
aaa
and
xor
mov
pushf
xor
or
dec
out
movsb
std
push
sub
aaa
sub
mov
add
push
adc
in
jecxz
leave
xchg
js
repz
add
push
popa
sub
push
ds
and
push
lea
nop
imul
roll
outsl
add
mov
sbb
push
adc
add
inc
push
out
mov
mov
daa
mov
xchg
inc
pop
das
or
cmpsl
in
jl
add
sub
jne
aaa
xchg
push
pop
js
sub
and
pop
shl
xor
pushf
and
xchg
mov
out
outsl
or
in
in
nop
loopne
lret
stos
jae
mov
inc
addr16
std
aam
sub
jnp
pop
lds
or
mov
xor
cmc
mov
inc
pop
jbe
cmp
mov
dec
lret
cmp
jle
je
push
jns
pop
pop
push
xchg
xlat
pop
adc
and
cmp
cmp
test
pop
shl
push
jle
test
dec
insl
popl
jle
mov
mov
push
jo
xor
adc
popa
rclb
popa
lea
int
imul
mov
stos
adc
add
cmp
loopne
adc
test
out
lea
cmpsb
dec
sbb
je,pt
mov
pop
lahf
out
add
pop
cmp
stos
mov
jg
or
mov
sub
mov
rclb
pop
loope
sbb
mov
fiaddl
lret
cmpsb
outsb
sub
test
dec
pop
sub
mov
call
xor
push
fnstcw
mov
dec
sbb
sbb
xchg
mov
mov
clc
mov
imul
icebp
and
jns
xchg
and
cmp
adc
not
mov
lahf
push
fcompl
enter
ss
mov
insb
fistpll
lahf
stos
dec
sub
movsb
or
or
movsb
ljmp
test
gs
xor
fistps
and
test
or
xchg
sbb
ljmp
test
sub
in
mov
scas
mov
jae
adc
rcr
jae
cmc
sar
dec
lea
cmp
cmp
push
and
jae
ljmp
cmpsb
popf
pusha
mov
dec
sbb
dec
pop
cltd
loope,pn
mov
or
popa
jbe
sub
in
xlat
xor
push
mov
push
mov
mov
add
xor
xchg
mov
test
and
add
insl
iret
scas
leave
pop
fwait
push
jp
add
hlt
inc
push
fcompl
push
inc
lods
ss
mov
add
fistpll
test
jne
lcall
es
into
cmp
fsubp
mov
dec
adc
js
xchg
xchg
push
outsb
repnz
jle
sbb
loop
mov
std
jne
adcl
push
xchg
lock
sbb
mov
out
or
adc
or
pushf
xchg
inc
adc
pushf
cmp
lock
and
mov
sbb
in
loopne
sbb
lock
repz
out
mov
lret
cmpsl
mov
add
enter
stc
xor
xchg
mov
mov
sub
dec
push
daa
ror
push
cmp
jnp
and
xchg
lahf
sbb
jp
aas
pusha
mov
xchg
jg
lock
and
mov
mov
xchg
sub
xchg
cld
lcall
je
fstpt
aam
leave
xor
fdiv
and
xor
xchg
xor
clc
mov
adc
shrb
pop
out
push
out
fcompl
imulb
lds
mov
test
mov
dec
jne
xchg
add
into
cmpsb
mov
adc
pop
imul
in
mov
imul
sarl
mov
sti
or
jae
aam
stos
push
jne
jae
ljmp
add
push
lea
into
out
popf
adc
jns
rcll
add
and
mov
jmp
fsubrl
lret
xor
inc
xor
push
jae
inc
clc
or
fistl
ret
fists
out
adc
mov
icebp
std
jl
shlb
mov
sarl
rorb
pushf
pop
and
lods
cmpsb
insb
arpl
push
cmpsl
pop
data16
xchg
pusha
push
das
testb
mov
push
insb
inc
pushf
push
push
xchg
call
scas
push
stos
ds
mov
push
cmpl
ss
shll
and
mov
mov
mov
sbb
call
fucom
push
mov
lock
xchg
sbb
outsb
fcom
inc
cwtl
call
std
mov
imul
mov
inc
mov
std
loop
pop
sbb
scas
insb
inc
xor
mov
je
pop
jnp
in
mov
cs
push
xchg
sub
out
pop
adc
mov
stos
adc
in
test
xorb
mov
ds
jp
adc
sbb
test
pop
adc
dec
fwait
std
mov
xchg
mov
push
inc
enter
mov
test
outsb
aas
add
in
mov
xlat
pop
mov
fisttps
mov
sti
and
jnp
das
xchg
jnp
xchg
enter
les
sti
xor
push
mov
mov
shlb
xor
sbb
xchg
and
leave
jp
mov
mov
scas
aad
and
or
adc
jp
mov
jb
and
daa
je
mov
mov
sbb
xchg
fldt
andl
inc
fidivrl
xchg
pop
cmpb
jmp
subl
adcb
pop
mov
gs
cmp
arpl
inc
adc
pop
iret
push
repnz
or
loope
xchg
std
pop
lods
adc
repnz
scas
stos
into
jno
cwtl
mov
mov
jns
scas
push
outsl
sbb
mov
sbb
add
loopne
pop
cmp
inc
pop
rcrb
push
fldenv
sub
inc
cmp
ss
mov
fsubl
pop
inc
xor
cli
pop
iret
add
xor
add
or
add
cmpsl
mov
pop
dec
pop
and
repnz
sbb
pusha
out
out
sbbb
xchg
or
loop
xchg
push
aaa
mov
xor
outsl
adc
mov
repz
fwait
clc
mov
sbb
jle
int
enter
lock
or
push
pop
or
mov
stos
dec
push
and
mov
pop
sarb
mov
rcrb
mov
cli
pushf
into
sbb
mov
cmc
lret
fidivl
jmp
adc
pusha
mov
cwtl
stc
in
rcl
out
push
insl
sub
push
dec
dec
aas
in
fistpl
xchg
xchg
cmp
jle
and
xor
cwtl
push
or
pop
pop
mov
sub
scas
pop
inc
rorl
and
nop
loope
repnz
hlt
jns
cld
out
mov
fidivrs
stos
jge
pop
push
shll
inc
daa
sbb
pusha
shrl
add
inc
leave
add
std
fwait
cmp
loop
xchg
adc
add
cmp
jns
dec
fidivrs
pop
mov
xchg
adcb
inc
hlt
and
sahf
mov
xchg
jbe
loopne
sub
lods
jge
jb
xchg
cmp
sahf
or
shr
shll
clc
outsb
enter
decl
pop
addr16
bound
add
fistpl
sub
adcb
cmc
stc
push
pop
pop
push
push
sbb
xor
add
mov
mov
stos
movsb
cwtl
and
pop
test
dec
adc
enter
xchg
stos
dec
lcall
iret
and
stos
rorb
xor
sub
in
mov
shlb
rcll
loopne
es
cwtl
jecxz,pn
cld
lods
xchg
sub
xchg
sbb
push
sub
push
sbb
pushf
addl
lock
sub
mov
xchg
and
jne
into
lds
mov
cmp
popa
jmp
xchg
out
jmp
push
arpl
popw
xlat
shll
add
add
cmp
roll
idivl
cmc
enter
notb
fldenv
dec
lods
lods
or
add
stos
cmpsl
mov
fisubrl
les
mov
scas
xor
es
cmp
pushf
or
jb
push
xorb
test
mov
out
std
pop
enter
jle
rcr
xor
cltd
popl
mov
je
inc
insb
push
mov
movsb
mov
or
movsb
ret
push
lock
and
push
mov
or
mov
jo
arpl
in
jbe
inc
mov
mov
inc
arpl
inc
sub
std
js
fisubrs
aam
and
adc
rcrl
fsubr
int
jbe
dec
pop
cmp
sbb
adc
jecxz
xchg
jb
dec
mov
push
inc
jne
stc
lock
sub
inc
insl
jbe
xchg
jae
cmpsb
mov
dec
mov
out
int3
sub
and
jmp
ja
daa
jno
cmp
addr16
jno
enter
test
rdpmc
mov
or
xchg
lret
xchg
nop
cli
mov
in
nop
pushf
adc
jle
sbb
fistl
push
mov
fs
jne
add
out
xor
add
sbbb
add
pop
mov
repz
add
in
nop
sbb
aaa
add
cwtl
sub
popa
cmp
imul
shlb
add
les
inc
mov
mov
mov
mov
sbb
bound
pushf
add
mov
les
rclb
xor
or
cwtl
xor
xor
pop
test
xchg
out
aad
xor
jmp
lret
xlat
sbb
mov
rol
cmp
cltd
add
adc
cmp
pop
pushf
xlat
cmpsl
test
sbb
inc
or
int3
xlat
jbe
fbld
cmp
test
push
adc
insb
faddl
mov
mov
stos
inc
dec
pmaxub
jge
xor
add
push
inc
pop
test
dec
es
mov
add
add
sti
mov
ds
ret
dec
cmpsb
cmc
lcall
mov
pop
fidivl
subb
pop
cs
int
rorb
pop
dec
scas
notl
pusha
pop
rdmsr
sahf
int
fcmovnu
push
movsb
pop
dec
and
fmul
mov
sub
mov
adc
popa
clc
cmp
test
xorl
mov
insb
pusha
in
sbb
add
sbb
js
hlt
cmp
out
into
push
imul
sub
mov
dec
push
and
xor
dec
shrb
addl
pop
std
mov
dec
pop
sub
xchg
mov
sbb
outsl
push
and
fstpl
stos
sub
add
nop
inc
jmp
ror
mulb
fldenv
jp
cmp
daa
icebp
and
mov
test
add
iret
xchg
out
adc
jns
push
fsub
mov
pushw
movsl
or
outsl
mov
insl
idiv
jmp
jnp
test
push
push
into
adc
pop
mov
aas
lret
xchg
mov
addr16
xor
cli
imul
push
dec
out
cmp
clc
inc
add
into
fsqrt
gs
xchg
push
sub
fs
aas
mov
push
sar
outsb
cwtl
repz
sub
jo
addr16
fstps
repnz
jmp
adc
mov
test
and
sub
sbb
push
dec
xchg
push
and
pop
adc
add
and
into
mov
repnz
sbb
lret
addb
lea
xor
or
pop
clc
sub
sbb
rol
cmp
mov
daa
xchg
dec
js
pop
mov
cmpsl
mov
cs
push
jg
cmpl
xor
sub
cmpsb
pushf
imul
push
movb
dec
add
mov
lods
in
pop
sbb
mov
stos
xchg
rcrl
cmp
adcl
xchg
out
cs
mov
lss
es
mov
fildl
clc
mov
xor
jle
pop
jecxz
test
ja
jne
cmp
and
nop
sahf
pop
lret
test
adc
or
jne
addr16
cmpsb
mov
mov
test
xchg
imul
into
jmp
lock
and
jno
xor
mov
iret
popa
out
out
xor
push
push
orl
js
int
mov
ret
mov
mov
iret
cmp
dec
cltd
xor
inc
push
scas
dec
shl
mov
popf
stos
xor
popa
shlb
lgs
jg
rorb
je
push
cmp
mov
fwait
xchg
jno
push
xor
xchg
sbb
aaa
jbe
jns
fstl
inc
scas
sbb
cmp
sbb
adc
and
outsl
addr16
sbb
sbb
ss
sub
mov
mov
jne
scas
lret
fsts
sub
sub
and
add
rcll
test
dec
and
lock
pop
jae
adc
push
adc
pop
pop
push
test
lods
mov
mov
jge
cmpsb
jp
test
cmp
dec
scas
sti
or
xor
stos
hlt
fwait
push
sub
insl
cs
add
push
mov
dec
mov
or
icebp
sahf
clc
jmp
add
push
add
movsl
ds
fisubrl
pop
lock
lret
fldcw
ja
rorb
hlt
mov
adc
xchg
pushl
cli
xor
test
icebp
push
outsb
loop
nop
lahf
cld
fdivs
lods
xor
xchg
aad
mov
out
ja
cli
xchg
or
inc
add
mov
jecxz
fstpt
jmp
sbb
rcrl
jb
cmp
mov
fs
xor
test
stc
sbb
sbb
xchg
jae
xor
mov
cli
and
sbb
pop
mov
fsubrl
xorl
ret
das
inc
les
mov
cmp
jle
lods
xchg
xchg
movsl
add
mov
in
ret
in
or
jno
rorb
bound
mov
mov
cmp
pop
sub
not
sbb
mov
fcompl
fisttpll
mov
inc
sub
push
mov
sbb
pushf
shll
xor
movsl
mov
mov
in
ja
sti
test
mov
out
pushl
or
mov
adc
jg
roll
push
fists
jmp
aaa
js
test
inc
inc
pop
xorl
popl
enter
insl
push
xor
nop
cmc
inc
cmp
test
push
ficompl
test
aad
fildll
push
and
adc
lret
mov
loopne
mov
jno
add
shrb
jbe
sbb
mov
jns
sti
jnp
xor
fistpll
in
out
push
xor
jge
bound
jae
lods
bound
into
in
stc
push
lock
jmp
inc
cmp
pop
push
or
fs
and
lods
mov
mov
mov
cltd
pusha
imul
cmpsb
push
mov
imul
mulb
or
xor
jp
stc
ljmp
clc
dec
jbe
in
mov
mov
dec
int3
repz
in
and
mov
mov
mov
pop
mov
ret
adc
ret
shll
lcall
xchg
not
pop
int3
in
testb
movsl
mov
and
cwtl
ret
test
loop
mov
add
fwait
ss
mov
aam
loopne
sbb
into
jnp
adc
push
loope
jl
les
xchg
fnstenv
lret
jo
in
cmpsb
bnd
movsb
cmp
or
cld
pop
push
mov
mov
repnz
sub
mov
sub
fsubs
mov
fs
inc
daa
clc
outsl
fisttpll
sbb
xor
ficoms
mov
mov
in
cld
and
adc
sub
pop
sbbb
or
sub
xchg
mov
push
pop
pop
cmp
dec
adc
pop
mov
repnz
mov
cmc
ja
adc
jne
cmp
mov
out
jns
lahf
cld
or
mov
mov
jge
adc
sub
repz
jns
decl
rorb
pop
sarl
xor
vandnps
outsb
rclb
dec
push
pop
cmpb
add
add
inc
incb
push
jecxz
arpl
jp
popl
add
mov
loop
loop
lret
outsb
mov
add
in
or
or
aad
rol
cmpsb
rorb
fs
mov
dec
cmpsb
mov
insl
jecxz
lock
dec
movsb
cmpsl
or
xchg
lds
cmp
leave
sub
shlb
movsl
lahf
outsl
inc
incb
lods
pop
pusha
jnp
les
push
jae
pop
jnp
test
out
cmpsb
movsb
stos
cwtl
jecxz
cmpsb
push
dec
dec
cmc
pop
sbb
add
sub
add
shrl
fwait
or
jno
stos
fidivl
mov
hlt
das
inc
bound
or
xchg
fcomip
cmp
lds
jne
nop
out
jbe
test
fnstsw
cli
loope
mov
mov
push
aam
loop
and
adc
dec
push
es
lahf
lds
mov
std
xor
xor
in
scas
jge
dec
in
rclb
imull
movb
jp
shlb
and
fisubl
cmp
rolb
push
jo
inc
in
xchg
addr16
shll
push
jge
jne
in
push
jb
xchg
rcll
push
outsl
aam
add
es
popf
xchg
int3
lea
test
jmp
lahf
mov
outsl
inc
movsb
cmpsl
push
cli
enter
cmp
rcll
xchg
lods
xor
iret
test
nop
xor
inc
inc
push
repz
add
fisttps
ss
mov
movntq
pop
into
fdivr
out
mov
pop
js
aad
push
inc
mov
or
loopne
sub
out
jp
inc
jae
sub
cmpsl
or
xor
sub
dec
test
mov
mov
leave
mov
dec
shr
insb
in
stos
or
jp
mov
mov
ss
inc
sets
pop
ficomps
imull
mov
stos
mov
insb
rcrl
sbb
js
dec
repnz
pop
scas
popa
out
in
mov
mov
sbb
xor
pop
add
mov
rep
fnstsw
push
mov
subb
add
in
lea
cli
rolb
ss
jle
or
xor
aaa
xchg
cmpb
push
popa
xor
js
pop
xor
pop
add
in
js
outsl
sub
lock
pop
and
jecxz
mov
sbb
repz
xrelease
mov
mov
pop
adc
adc
sub
pusha
cmp
sbb
movsb
mov
xchg
into
int
cltd
loope
pushf
xor
leave
aaa
add
fldenv
mov
push
icebp
scas
sub
add
cltd
xor
add
jg
out
or
sub
push
loop
cltd
or
lds
clc
pusha
inc
sbb
int3
mov
int
push
ss
adc
mov
pop
fidivs
sub
leave
repz
jmp
sbb
test
cmp
jo
scas
inc
test
inc
xor
in
cmpsb
jmp
ds
inc
xor
roll
test
xchg
fwait
xchg
dec
mov
jnp
dec
dec
cmp
jbe
jmp
clc
cwtl
push
mov
mov
dec
out
pop
push
push
repnz
jnp
test
pop
scas
or
cmp
out
pusha
cmpb
call
pop
mov
pop
je
loope
rorb
popf
push
mov
pop
fs
jle
out
jae
ffree
cmp
jne
xchg
in
addb
fistl
adc
jecxz
movsb
lods
pop
fwait
cmp
stos
cmp
popa
out
inc
js
sbb
in
mov
imul
xchg
or
popf
jno
fcmovnbe
sarb
fdivs
or
outsl
push
and
out
pop
fcmovbe
enter
int3
fildll
or
cmp
in
or
dec
sub
inc
mov
scas
xor
cmp
das
add
pusha
xchg
and
mov
pop
or
movsb
mov
xchg
int3
out
cmp
and
mov
mov
sub
aam
and
hlt
in
daa
mov
mov
cltd
dec
adc
dec
addb
sbb
xchg
mov
and
cld
cmpsl
mov
out
adc
xchg
repnz
jp
ret
mov
mov
call
aas
stos
mov
mov
push
pop
mov
jnp
inc
push
mov
cld
nop
push
jnp
push
popa
cmp
mov
pop
loop
outsb
mov
mov
scas
sbb
sub
mov
jmp
fs
fwait
mov
or
xchg
fcoms
add
test
cmp
xlat
inc
out
ljmp
mov
repnz
data16
shll
push
test
data16
pop
xchg
stos
loop
test
cmp
xchg
cs
sbb
jmp
mov
aad
aam
or
sbb
xor
mov
inc
mov
push
into
adc
cmp
in
and
mov
or
int3
xchg
stos
shll
or
xor
sub
test
xor
pop
pop
sbb
cmp
mov
aad
adc
mov
stc
dec
jle
push
out
fldenv
lods
and
fnstsw
aas
mov
jle
repnz
mov
xor
js
insl
push
mov
mov
mov
icebp
insl
xchg
fsub
mov
data16
loope
pop
stos
lcall
jae
push
inc
cwtl
movsb
call
mov
sub
lret
inc
into
and
adc
fcmovb
into
int3
into
or
cli
int3
or
arpl
jmp
out
sbbb
cld
data16
mov
add
push
push
mov
cmpsl
test
pop
jle
clc
mov
das
out
mov
ljmp
fwait
adc
aam
testl
xchg
push
stos
mov
outsb
cmp
pop
ret
push
cmp
and
jmp
pop
xor
dec
xor
mov
adcb
je
pop
test
ljmp
mov
jno
xchg
cmp
fcomp
cmpsl
incl
std
jns
fbld
add
xlat
inc
lahf
jmp
jne
iret
out
push
inc
lahf
loop
arpl
arpl
mov
ljmp
sub
mov
add
xor
sub
push
jecxz
cmpsb
adc
mov
test
xchg
and
aaa
add
and
add
cmp
mov
iret
xchg
fistl
into
lcall
adc
mov
mov
sti
xchg
jmp
xchg
push
jl
fsub
push
push
lret
scas
and
or
imul
xchg
sbb
aaa
popa
in
and
inc
mov
push
jp
lods
imulb
addr16
sbb
or
rcll
or
out
out
jecxz
xchg
scas
inc
cmp
cltd
test
add
inc
idivb
pop
lahf
movsl
xchg
fadds
mov
rdmsr
dec
stos
sti
add
push
push
jne
dec
add
lds
sbb
jmp
out
scas
jne
xor
fadd
stc
add
sbb
jp
xor
xchg
push
adc
sub
scas
push
std
dec
dec
and
cwtl
pop
pop
jmp
out
iret
add
sub
jmp
and
jne
lods
enter
mov
loope
mov
divl
sbb
es
shll
insb
paddsw
mov
bound
push
push
sub
mov
mov
cmpsl
lds
lahf
or
arpl
hlt
or
lods
inc
sbb
inc
pop
xor
and
enter
push
loopne
repz
rcr
das
mov
or
push
filds
cwtl
jb
movsl
clc
in
sbb
cwtl
cmp
push
lret
push
dec
inc
and
hlt
mov
aad
cmp
push
push
mov
shrb
sbb
mov
adc
push
and
pushf
mov
lahf
push
mov
xchg
mov
cwtl
movsb
jecxz
lcall
or
xchg
lcall
and
xlat
daa
sub
call
dec
xchg
popa
into
fdivrs
fsubrl
and
xchg
mov
fs
shrl
jb
sbb
pop
shrb
add
loopne
lds
ja
and
sbb
daa
mov
sub
enter
jecxz
leave
cmp
adc
gs
jns
or
cld
add
std
mov
lds
push
hlt
test
js
mov
sbb
jg
fisttps
popf
jae
cmc
mov
jecxz
xor
mov
mov
scas
aam
imul
and
fcoms
or
and
push
ja
std
sbbb
sbb
jg
xchg
divl
in
push
ret
out
dec
jmp
inc
push
and
push
mov
sbb
fildll
and
sarb
fsub
jmp
mov
arpl
mov
sbbb
stos
imul
sub
jbe
sub
popf
rcrb
shlb
adc
lds
in
jne
les
push
int3
cmpsb
mov
divb
add
mov
inc
mov
adc
sub
xchg
add
xchg
push
cltd
icebp
dec
inc
cmp
mov
popa
dec
mov
xchg
push
ret
arpl
pop
pop
enter
sub
les
xchg
andps
mov
or
dec
or
hlt
fs
xchg
cmp
sbb
rcrl
std
adc
je
aad
nop
xchg
mov
movb
gs
in
cmp
arpl
jnp
push
aaa
lret
imul
adc
imul
sbb
std
popa
cmovp
sub
xchg
sub
dec
fmuls
xor
insl
pop
mov
loopne
push
mov
mov
arpl
push
pop
notb
or
test
cli
push
fcoms
insb
shll
into
jb
mov
or
jne
hlt
push
pop
les
aam
dec
mov
nop
fidivl
test
dec
push
lahf
mov
fstpl
fidivrs
xor
in
pop
test
stos
fistpl
xor
lods
insb
jnp
sti
insl
dec
iret
jg
imul
or
inc
cs
mov
pop
sbb
jle
lahf
push
fstl
loope
lahf
fcoml
pop
xchg
fimull
movsb
test
std
pusha
lock
push
cmp
sub
in
rorw
push
sbb
rcr
sbb
pop
jb
int
fldt
leave
or
ret
mov
push
push
push
mov
jne
ds
movaps
mov
test
add
ja
xlat
xor
mov
daa
push
je
push
clc
sarb
ud2
dec
jg
sbb
fucomp
scas
and
push
iret
xchg
frstor
or
mov
mov
cld
mov
jge
jecxz
pop
loope
adc
dec
add
sbbl
out
popf
dec
iret
xchg
sbb
dec
jmp
or
repz
sti
inc
mov
daa
adc
push
lret
imul
pop
pop
dec
fwait
hlt
sub
test
mov
mov
jecxz
scas
pop
dec
jp
pop
and
loop
dec
stc
mov
jle
sub
cmp
mov
adc
and
fimull
inc
inc
mov
arpl
lcall
test
incb
pop
mov
insl
fistpl
push
sti
pop
fistpll
sarb
dec
mov
les
les
cld
into
xor
xor
out
mov
rol
mov
cmp
sub
fs
sbb
pop
jmp
mov
cltd
push
out
mov
lret
sub
repnz
loope
imul
mov
addr16
pop
xor
dec
imul
lock
mov
rcll
sbb
mov
cmp
mov
in
scas
mov
out
imul
std
cli
dec
sub
ds
test
stos
rorb
or
mov
lods
xchg
subl
test
xor
add
push
fisttps
sysenter
ja
xor
stc
sub
jb
call
gs
outsb
ds
shrb
scas
jbe
adcl
mov
mov
sbb
xor
dec
leave
scas
jnp
xchg
mov
seta
and
and
xor
mov
js
in
jmp
aas
test
mov
push
xchg
sahf
sbb
nop
repnz
sbbb
les
test
cmp
cmpsb
sbb
inc
jns
inc
inc
lret
loopne
adc
or
pop
imul
or
ds
cmp
xchg
enter
mov
sub
movl
add
add
popa
jle
pop
lods
into
fisttpl
test
das
add
and
add
dec
test
insb
es
sti
scas
into
aad
out
push
adc
vpavgb
mov
loopne
loope
pop
xchg
les
lds
mov
mov
cmp
jle
or
lcall
sub
out
dec
pushf
xchg
xlat
mov
jle
xlat
imul
movb
cmp
ljmp
jno
add
fsubr
and
or
jmp
and
add
or
xchg
das
push
cli
jp
sub
adc
in
cmp
fadd
movsl
loope
pop
mov
imul
add
rcrl
or
dec
push
sbb
mov
int
lods
cmc
in
rclb
sub
push
pusha
sbb
ficomps
and
adc
push
les
ja
aam
popf
popf
arpl
in
and
hlt
in
repnz
aaa
fs
mov
jl
andb
lods
mov
addr16
fwait
mull
jae
xor
fs
xor
sbb
es
xchg
mov
test
and
lahf
push
sbb
mov
mov
adc
out
push
push
sub
jae
mov
enter
lds
sub
cmp
outsl
int3
add
hlt
addr16
xor
xchg
mov
jmp
push
jnp
jae
pop
inc
cli
xor
jb
repnz
jbe
sub
mov
arpl
js
cmp
mov
jg
dec
inc
mov
pop
jmp
push
add
subb
je
repnz
cmp
aas
mov
push
xchg
out
pop
cmpsl
and
jo
inc
in
xchg
xchg
pusha
test
mov
dec
sub
stos
cmpb
dec
or
push
push
jo
rorl
jge
add
sbb
or
popa
lock
sbb
cltd
xchg
test
out
int
ds
lret
xchg
mov
sub
das
rcrb
mov
cmp
loope
mov
or
pop
lock
lock
cwtl
and
stos
insb
popf
adc
sub
les
mov
xchg
out
pop
cmp
pop
add
xchg
scas
adc
ja
arpl
mov
jns
scas
stos
jecxz
adc
add
shlb
ret
fdivrs
push
jecxz
cmc
mov
inc
jge
xor
dec
add
idiv
push
fistpll
adc
in
sha1msg2
ds
cmp
xlat
iret
push
xor
mov
inc
adc
mov
dec
add
inc
add
mov
out
stc
mov
cmp
pop
cltd
sbb
pop
std
pop
jle
mov
inc
fs
std
pop
outsb
adcl
mov
daa
loop
push
pop
inc
and
fwait
add
cmp
pop
pop
jle
xorps
test
dec
sbb
icebp
mov
dec
clc
mov
shlb
mov
jb
xchg
jo
movl
fwait
rclb
dec
rorl
ljmp
mov
mov
add
fsubrp
or
das
jne
mov
pop
or
push
adcl
bnd
cmp
push
mov
push
fsubrs
daa
add
icebp
imul
sbbl
inc
or
xor
enter
testl
daa
fwait
fldl
cmp
xchg
add
push
xchg
rorb
inc
adc
mov
stos
stos
cmp
or
mov
cmp
seto
outsb
fadds
push
add
mov
xor
cmp
xlat
push
cmpsl
sbb
loopne
jg
pop
pusha
jecxz
stos
xor
bound
push
jne
mov
movl
shl
das
mov
mov
lds
add
mov
int3
js
aas
jne
mov
test
stc
les
push
xor
dec
stos
in
cmpsl
mov
ret
sbb
popf
mov
mov
mov
cmpsb
jge
jl
notb
lds
mov
mov
jae
pushf
push
iret
or
jbe
sbb
xchg
and
cmc
add
cwtl
lea
cmp
loope
repnz
pop
inc
jb
ljmp
and
mov
xor
sub
adc
pop
sti
inc
or
std
and
fwait
and
inc
mov
and
sbb
sarl
shl
addr16
inc
aas
mov
cwtl
and
mov
mov
mov
xorl
ucomiss
or
cwtl
arpl
pop
mov
and
pop
xor
sbbl
push
sub
inc
sbb
shl
in
push
ds
int
lcall
test
xor
mov
sti
mov
lret
add
xchg
dec
sub
gs
popa
ficoms
fcmove
dec
dec
push
hlt
shll
sbbl
or
subl
xor
mov
into
test
sarl
jp
or
cmp
jbe
aad
push
sbb
shl
lcall
mov
mov
mov
jp
ret
stos
inc
stos
xchg
and
ret
push
inc
shll
fcomi
and
sbb
ds
and
xchg
pop
xorb
xchg
xchg
or
aaa
fwait
popf
je
pop
fmull
ret
ds
xlat
stc
adc
or
fcmovbe
int
imul
add
inc
cs
test
sbb
and
lea
xor
pop
in
aam
insb
aas
push
push
adc
inc
imulb
fstl
jns
pop
adc
ret
popa
jbe
add
fdiv
outsl
iret
xchg
jno
xor
sbb
adc
lahf
dec
xchg
adc
cmc
mov
inc
jno
lret
adc
adc
dec
mov
mov
pop
mov
ja
addr16
mov
mov
push
dec
jae
bound
sbb
inc
mov
lret
jmp
mov
insl
mov
pushf
pop
addl
fisttpll
add
mov
add
dec
xchg
xor
pop
mov
dec
xor
sub
in
xchg
xlat
mov
aad
mov
xor
sbb
repz
lock
sub
xchg
sbb
xor
pop
push
dec
lahf
outsl
add
dec
push
fimuls
xor
jle
idivl
lret
inc
jl
add
mov
sbb
test
xchg
jmp
pushf
sbb
push
sahf
fidivrl
add
or
add
and
add
orb
inc
in
xchg
cmp
rclb
stc
add
mov
mov
and
mov
pop
pop
add
addr16
rclb
nop
adc
daa
mov
in
stc
dec
pop
inc
ss
add
xchg
arpl
pop
and
inc
outsb
fimuls
dec
sub
lea
lock
lret
mov
out
int
fs
push
dec
outsl
mov
movsb
jns
xchg
lods
imul
adc
roll
aad
cmp
pop
shl
adc
sub
sub
int3
sarb
mov
rcll
pusha
mov
outsb
xlat
mov
sbb
movhps
out
jbe
outsl
popaw
xchg
pop
lock
jo
sub
incb
or
dec
add
mov
les
arpl
inc
mov
sahf
fisubs
lret
idivb
fldcw
push
mov
fidivl
out
push
cltd
int3
je,pn
or
popa
fstpt
jecxz
jle
push
ret
push
jno
and
mov
lock
sahf
jecxz
sahf
cwtl
or
xchg
cltd
insb
sti
pusha
mov
ficoml
mov
dec
mov
or
fld1
dec
out
ljmp
inc
popa
or
leave
in
sbb
aas
test
jae
sbb
or
movsb
aad
mov
std
dec
inc
push
lods
mov
fdivrs
mov
into
xor
sbb
mov
test
inc
cmp
add
ja
jae
add
icebp
into
lods
dec
sub
xor
dec
fsub
rsm
sbb
dec
loope
mov
adcl
jno
fisubrs
mov
dec
pop
xchg
mov
std
or
adc
cltd
dec
pop
pop
or
sub
roll
mov
sbbb
test
shrb
pop
loope
and
adc
cmp
jl
mov
call
rorl
add
mov
jmp
push
fidivs
fstpl
add
rolb
daa
movsl
and
jns
loop
imul
dec
or
cmp
adc
sbb
xor
mov
jmp
dec
jae
aaa
mov
push
mov
and
pop
out
mov
lea
addb
daa
pop
in
inc
hlt
gs
ror
dec
push
cmpsl
insl
dec
mov
cld
mov
cmp
and
lock
scas
dec
stos
movsl
les
movb
cmpsl
jo
xchg
out
insb
fldcw
test
lods
sysret
mov
repz
imul
aam
mov
pop
inc
jns
jecxz
mov
jp
iret
lock
js
dec
adc
test
loope
jnp
mov
push
loope
negl
outsb
sbb
inc
pop
aaa
xor
adc
mov
mov
movl
sti
add
mov
shr
cmpsl
and
in
das
mov
jmp
in
push
addr16
outsl
fadds
test
mov
loop
add
pop
or
aam
cmp
sahf
into
and
xchg
test
dec
sbb
outsb
push
dec
cmp
dec
ret
inc
test
sahf
inc
push
test
jnp
imul
pop
mov
push
sbb
popa
lods
lea
daa
jge
cmpsb
mov
dec
dec
movsb
jae
xchg
mov
dec
shr
lock
add
imul
cmp
xlat
jo
mov
cmp
negb
add
pop
push
inc
adc
xchg
mov
adc
ss
add
hlt
push
mov
mov
aam
dec
sbb
out
scas
adc
ss
sub
das
mov
cli
xor
cmpsl
fwait
stc
jmp
dec
xor
mov
cwtl
sub
stos
jecxz
ds
mov
aad
sbb
mov
inc
cmpsb
and
or
xchg
inc
or
add
mov
lcall
hlt
fsubrs
add
pop
inc
cmc
inc
push
test
xor
ds
mov
xchg
fcomip
cmp
lods
mov
sub
lods
dec
xor
cmc
test
sub
mov
mov
dec
add
iret
in
fldenv
sbb
insl
xchg
data16
daa
lock
out
cmp
sahf
pop
movsl
stc
or
xor
std
push
sbb
xor
push
xor
cmp
fwait
shrb
jns
int
mov
popf
mov
outsl
cmp
movsb
std
push
cli
add
adc
cs
inc
or
lods
sub
xchg
int
lods
xchg
les
js
out
fcomps
fsubrs
and
imul
out
xchg
mov
shrb
adc
adc
int
dec
sub
insb
inc
hlt
fldenv
or
int
rcll
push
xchg
loop
and
ljmp
mov
mov
dec
mov
push
jp
loop
stos
sbb
jne
cld
fldcw
inc
fsubs
movq
rolb
sub
int
cmp
or
jp
lahf
inc
int
sbb
insl
lods
rcrb
push
std
jb
inc
pop
pop
hlt
push
repnz
insl
dec
mov
sub
pop
in
cmp
jge
sti
arpl
ja
test
in
into
add
xlat
loope
pusha
addr16
pushf
outsl
or
imul
mov
lret
adc
pop
mov
lods
ja
cwtl
add
inc
mov
leave
mov
or
repz
lods
adc
pop
outsb
cltd
xchg
xor
xchg
cmp
ljmp
sahf
mov
fidivl
nop
xor
sbb
adc
out
pusha
les
push
sbb
sarl
scas
sub
in
inc
bound
dec
sbb
mov
aad
mov
xor
mov
push
xor
ljmp
ja
inc
fcmovb
push
dec
cltd
inc
das
repz
mov
push
outsl
pop
in
cmpsb
and
mov
add
push
repz
mov
iret
notb
xchg
xor
xor
aad
dec
pop
sbb
dec
xchg
inc
arpl
cmpsl
testb
adc
in
pop
nopl
pop
cmpsb
sbb
push
mov
cmp
and
pop
sbb
mov
xor
clc
popa
jae
pop
pop
push
idiv
adc
add
add
push
add
ja
xchg
popf
mov
sbb
cmp
add
push
inc
fptan
adc
jno
push
mov
int
add
out
inc
cs
fldcw
adc
int3
dec
ljmp
push
into
notl
lods
and
loopne
out
popl
lret
aam
bound
test
pop
xchg
push
arpl
dec
pop
mov
adc
mov
jmp
jns
test
out
loope
lret
adc
dec
mov
pop
push
sub
sub
xor
mov
cltd
icebp
es
lret
ja
test
fsubs
frstor
push
pop
cmc
js
sub
add
add
sbb
adc
shrb
and
adc
testl
mov
out
aas
dec
add
and
ret
mov
pusha
sbb
pop
popl
xor
cld
dec
lds
cmpsb
adc
xor
fs
ja
lcall
hlt
lea
xor
test
lret
stos
mov
or
xor
popf
sbb
pop
mov
adc
mov
mov
sti
jle
xchg
test
das
movsl
sub
mov
dec
lcall
fldenv
fidivrs
and
pop
inc
or
mov
pop
pusha
lods
mov
jne
dec
aaa
ds
fimull
mov
mov
lods
ds
sbb
lds
xchg
bsr
test
stos
scas
push
ds
xor
xchg
mov
pop
xor
mov
loopne
arpl
inc
lock
inc
aam
xor
mov
add
loop
inc
dec
cmp
lahf
repnz
or
in
outsb
jmp
push
sbb
mov
fistps
dec
inc
and
jl
fdivrl
or
inc
fmulp
sub
inc
fisubrl
add
mov
xor
xchg
into
rol
mov
aad
add
jb
mov
scas
jge
das
lcall
divl
pop
js
outsb
add
mov
xchg
leave
test
adc
mov
cmp
sbbb
inc
rolb
mov
cmpsb
and
or
mov
roll
push
xor
mov
in
jo
js
inc
pop
mov
lods
mov
rcrb
or
push
fdivl
jle
cvtps2pd
add
pop
mov
cmp
aas
leave
data16
insb
pop
cmpsb
rorb
popa
push
inc
pop
movsl
clc
push
pop
sub
or
sbb
xor
mov
mov
and
pop
jo
sub
dec
sbb
cltd
rorl
shrb
in
hlt
add
inc
cmp
pop
aaa
lock
in
jl
mov
fwait
cmp
push
inc
sbb
movsb
pop
enter
inc
clc
xchg
xor
add
jmp
jno
cmp
out
mov
stc
or
adcl
sub
ss
lds
outsb
lea
cli
mov
jp
ja
shll
mov
cmp
ret
sub
jecxz
and
xor
daa
jae
adcl
add
and
in
pop
jp
ljmp
xchg
fstpt
das
insl
jmp
mov
push
addr16
or
out
pushf
mov
cmc
sti
mov
fidivs
or
aam
arpl
sbb
jg
cmpsl
mov
and
mov
cmc
rorl
or
inc
enter
inc
in
add
aaa
mov
bound
aam
and
lock
pop
push
inc
or
popf
enter
mov
test
push
dec
xchg
ficompl
sub
daa
push
nop
mov
loop
jge
clc
cmp
insl
dec
into
nop
and
stos
mov
hlt
mov
enter
fistpl
repz
fs
dec
xchg
pop
fdiv
inc
fisubs
jecxz
psubw
xchg
sub
inc
add
mov
inc
in
outsb
iret
inc
test
jne
lahf
jne
mov
lahf
jecxz
lret
adc
push
sub
adc
cwtl
adc
iret
cmp
and
js
pop
test
sub
dec
push
sub
xlat
cli
je
scas
ds
or
push
or
mov
xchg
inc
ja
je
cmpsl
sub
adc
sub
popa
add
inc
enter
inc
dec
pop
push
das
jge
mov
lock
sub
insb
dec
mov
inc
add
loopne
aas
fmull
mov
jns
sub
sbb
jbe
inc
pop
inc
pop
pop
stc
pop
int
movsb
in
push
cmpl
cmp
jno
testb
or
lret
loop
lods
mov
mov
pop
push
hlt
mov
out
pop
adc
repnz
stos
push
adc
adc
adc
and
adc
pushf
mov
lock
test
int3
movsl
out
mov
mov
aas
inc
inc
addr16
call
inc
push
inc
in
ret
cmp
jecxz
jle
adc
clc
cmp
adc
xchg
sbb
cmp
sbb
out
movsb
fs
pop
mov
lret
pop
sub
inc
xchg
icebp
outsb
lds
test
mov
ss
in
dec
cmp
xchg
lret
popa
dec
mov
xor
inc
jg
ja
pop
pop
xor
push
aad
mov
popa
ds
mulb
dec
or
cmp
out
add
xor
bound
cwtl
pop
ja
repz
lock
das
cmpsb
pop
loope
nop
mov
adc
sub
mov
daa
aaa
sahf
sbb
rolb
push
arpl
aas
test
cmp
fidivs
fstl
cmp
testb
ja
push
imul
sub
dec
cmp
test
test
mov
int3
jl
jno
pop
xchg
loop
and
or
sbb
mov
pushf
in
dec
mov
push
xchg
mov
or
lret
rolb
mov
lea
out
in
sub
sbb
ja
or
mov
add
imul
cmp
lea
bsr
mov
jno
std
fidivrs
inc
sbb
cmp
xchg
nop
les
adc
popa
imul
aas
and
mov
setns
or
dec
mov
test
shlb
outsb
dec
or
sarb
add
add
mov
sahf
and
xlat
in
ret
add
and
add
outsl
pop
inc
and
movsb
add
dec
loope
inc
pop
nop
jbe
xchg
cltd
mov
jb
xchg
clc
sub
test
sbb
mov
cmc
hlt
sbb
add
inc
in
mov
clc
push
lret
adc
and
fwait
in
and
xchg
in
rorl
cmpsl
dec
lds
dec
pushf
in
fwait
xor
insb
subl
and
lods
xchg
add
or
ret
loop
jo
fwait
lcall
je
fildll
xchg
scas
push
outsl
in
inc
mov
movsb
scas
add
mov
aas
mov
addr16
push
adc
mov
push
lods
sarl
adc
stc
pop
sub
xlat
lods
mov
mov
test
cmpsl
imul
enter
jb
inc
cltd
lock
fisubrs
lods
xchg
adc
jmp
loopne
cmp
test
int3
in
int3
mov
std
inc
pop
int
push
lahf
or
fistpl
mov
xchg
inc
sub
aam
rolb
popf
xchg
leave
mov
mov
adc
mov
xchg
cld
jae
lods
xchg
jo
xlat
ss
dec
daa
sbb
dec
repz
mov
push
gs
push
sub
arpl
push
ljmp
mov
push
sahf
pop
xor
adc
push
jbe
mov
mov
in
dec
orl
push
ret
or
adc
mov
mov
xchg
in
xor
pop
mov
sbb
cli
into
cmp
sbb
adc
lods
sub
movsl
test
scas
inc
inc
xor
sti
lods
pop
cmp
out
clc
jp
sbb
sbb
adc
std
and
pop
xlat
incb
dec
push
jno
cltd
insl
jmp
pop
or
in
inc
xchg
adc
pop
sub
mov
ss
cmp
dec
jg
sub
lods
sbb
pop
push
imul
cli
bnd
lcall
pop
mov
mov
lock
dec
clc
xchg
lds
sub
fdivrl
insb
pop
inc
push
sbb
clc
mul
enter
adc
mov
mov
mov
xchg
fwait
mov
jg
rol
mov
aas
or
sub
and
rclb
loop
imul
inc
mov
xchg
out
sub
add
xor
repnz
stos
stos
std
push
cmp
cltd
jns
mov
hlt
dec
push
sbb
daa
out
xor
jo
fwait
add
addb
lret
dec
aaa
lret
jecxz
bound
xor
js
mov
mov
gs
cmp
sub
xchg
mov
mov
adc
xchg
push
push
leave
leave
inc
jb
loopne
out
test
iret
lock
mov
imul
les
fimull
mov
dec
sbb
ss
sbb
cmp
sbb
dec
call
arpl
into
jnp,pn
loopne
fistpll
jp
sbb
push
and
enter
pushf
cmp
jl
test
sub
dec
cmpsb
shlb
in
ret
sbb
loope
daa
sub
pop
mov
lods
jle
jo
pusha
popa
mov
cmp
lret
sub
insl
lea
rcr
mov
scas
xor
je
jb
xor
js
mov
dec
push
insl
mov
jecxz
cmp
lcall
dec
push
sbb
cmpsl
outsl
test
cmp
pusha
enter
aam
sub
outsl
hlt
sahf
out
mov
and
ret
or
int3
dec
inc
test
xchg
or
das
pop
push
jg
int
jecxz
pop
pop
sbb
aaa
in
movsl
mov
push
adc
insb
mov
add
lods
inc
shrb
sub
xor
inc
cld
fistpl
push
enter
loope
xor
pop
daa
cld
jmp
add
in
loop
jns
push
add
ja
les
mov
pusha
jg
cmp
notb
jnp
inc
sub
pop
lods
push
inc
pop
push
fwait
mov
cmc
push
and
sub
mov
add
dec
lods
or
sbb
pop
ret
sbb
jbe
jecxz
mov
in
dec
xlat
or
mov
test
mov
in
xchg
scas
idivb
mov
inc
int
leave
pop
sub
je
loop
aad
pushf
jl
lods
icebp
inc
adc
pop
jl
fnstsw
jecxz
aam
sbb
cmpsl
call
xor
flds
add
aas
mov
cmpsb
loopne
push
clc
fidivrl
outsb
push
insb
xor
or
add
ds
iret
inc
push
sbb
pushf
fimull
lea
adc
and
mov
mov
mov
les
cs
adc
mov
xchg
lea
jnp
push
inc
imul
in
imul
mov
xchg
pop
sbb
jnp
xor
push
adcb
push
or
dec
jnp
jnp
scas
mov
sti
leave
stos
mov
mov
cmp
divb
pop
ret
or
out
pop
xor
lret
lock
adc
mov
adc
dec
xor
das
sbb
xchg
popf
ds
sbb
sbb
xor
lret
lahf
xchg
inc
dec
fbld
push
inc
or
add
cld
popf
js
xchg
insl
dec
test
jle
js
add
sub
lret
inc
pop
enter
xor
les
std
jge
cmc
stos
test
sbb
es
jne
jg
add
pushf
mov
adcl
popa
mov
lret
sub
fs
xor
pop
sbbl
jmp
push
jb
sahf
out
dec
cmp
cmp
jl
data16
cwtl
dec
pop
pop
int
inc
mov
lea
inc
test
mov
xchg
stos
fimull
in
pop
jbe
xchg
lods
push
pop
popa
pop
inc
popa
sub
and
xchg
pop
into
sub
pop
shrb
pusha
adc
movsb
divl
ds
xor
sbb
xlat
adc
pop
mov
and
andb
mov
mul
add
loope
loope
adc
mov
cmp
mov
mov
inc
pop
mov
xor
and
mov
add
jl
jne
int3
loope
pushf
xchg
out
in
sub
ss
ret
xchg
adc
mov
cli
cmp
mov
or
add
and
add
ljmp
xchg
sbb
add
mov
and
test
pusha
sbb
jmp
mov
push
add
cmp
add
popf
pop
negl
int3
inc
insl
cld
lret
lret
pop
or
ret
mov
push
adc
and
test
push
lret
negl
divl
je
out
inc
jl
insb
cmpb
xor
iret
inc
dec
push
call
loopne
and
and
push
push
mov
mov
or
int3
out
xor
and
xor
add
sub
int
inc
jl
pop
mov
pop
imul
inc
mov
dec
js
pop
int3
loope
loop
lret
xchg
loope
xchg
or
xchg
xor
aam
adc
sbb
rorl
lds
or
dec
sub
insb
std
in
test
xor
xlat
jg
cmp
fimull
lcall
cli
pusha
int3
jne
and
inc
mov
dec
adc
insl
mov
stos
stos
jmp
loopne
or
fadd
in
dec
pusha
pop
stos
fidivl
xor
bound
int
aad
mov
adcb
lea
je
gs
jecxz
pop
sub
and
jno
or
sub
dec
ljmp
add
jne
hlt
cmc
nop
rcll
icebp
pop
xor
idivl
movsb
push
insl
loope
repz
mov
xor
lahf
mov
leave
cmp
fidivrs
adc
call
outsl
jbe
mov
xor
sub
icebp
adc
sbb
daa
dec
lcall
je
jge
arpl
pop
test
xchg
add
idivl
xorl
adc
loopne
xchg
mov
rclb
js
fnstenv
mov
lret
mov
ds
mov
ret
or
gs
sahf
ret
stc
aaa
ret
fdivrl
push
lods
sbb
xor
mov
mov
adc
cwtl
mov
loopne
push
js
mov
cmp
lods
fdivrs
or
in
dec
popa
or
loopne
pmaddwd
lods
pushf
inc
imul
mov
xchg
jg
or
mov
ret
loop
imul
into
mov
enter
bound
ljmp
sbb
imulb
dec
nop
test
pop
jl
sbb
add
cmp
mov
sub
dec
or
push
or
insb
dec
push
cmp
aad
push
sbb
cmpsl
xlat
push
xchg
cmp
in
sbb
cmpsb
push
push
jns
sbb
sub
test
xor
fndisi(8087
data16
in
mov
xchg
stc
xchg
loop
mov
dec
or
pop
jp
push
add
sti
pop
pop
xchg
pop
jg
push
xor
push
push
push
inc
jnp
push
mov
fildll
cmp
xchg
lea
push
dec
push
or
jbe
ret
lods
jle
or
cwtl
mov
push
jmp
xchg
mov
cmc
ljmp
cmpsl
stos
mov
sub
and
adc
out
fistpl
in
std
xor
push
adc
mov
movsl
std
filds
jne
dec
push
add
sti
movsl
testl
cmp
adcl
fwait
mov
pop
in
cltd
xor
sti
ljmp
sbb
stos
leave
or
pop
mov
lods
shll
bound
mov
cmp
es
ret
jns
xor
mov
mov
inc
push
lcall
or
push
aas
jns
sbb
repz
add
or
arpl
popa
push
and
mov
fisttpll
iret
cld
jne
adc
popf
push
jmp
sub
and
je
or
mov
popf
fcomps
inc
jo
inc
pop
cltd
lea
cwtl
cli
and
fwait
mov
repnz
sub
cmp
lds
and
lea
js
fistps
push
loope
outsl
cmp
in
mov
cs
dec
fldl
fildl
or
jge
mov
enter
daa
rcll
pushf
loop
test
mov
add
adc
movsb
xor
fimull
ficoml
in
out
dec
push
mov
add
nop
std
insb
mov
cmp
mulb
popa
hlt
in
rolb
cld
xchg
push
cmpsl
push
and
mov
incb
imul
push
xor
pop
arpl
nop
mov
and
pop
lahf
jg
fiadds
fmuls
ret
and
jne
nop
lret
loopne
mov
sbbl
jne
adc
clc
xchg
nop
in
insb
imul
push
sbb
dec
leave
and
mov
stc
adcb
in
and
lret
xor
inc
outsb
mov
out
pop
cmpsl
sahf
xchg
push
jbe
dec
mov
outsl
gs
out
mov
imul
mov
shlb
xchg
das
xor
push
jnp
out
mov
clc
pop
shrl
xchg
fmulp
test
popf
test
dec
ficompl
mov
ja
push
mov
movsb
cmpsl
cmpsl
fcoms
add
loop
xchg
in
cmc
adc
xor
cmp
cltd
inc
mov
test
and
inc
adc
fistpll
popa
adc
mov
jg
jge,pn
adc
dec
push
push
mov
or
pop
pop
and
or
or
lret
loopne
add
mov
push
es
test
xor
je
sbb
mov
out
xchg
or
sub
or
outsb
pushf
gs
ret
cmovg
sub
pushf
cmp
mov
lods
loope
jno
sub
mov
adc
xor
je
scas
in
and
cs
hlt
mov
test
adcb
daa
mov
pop
xorl
stos
lds
iret
testl
adc
shr
and
jecxz
mov
fiadds
mov
pop
test
pop
push
push
push
popa
fiadds
inc
bound
int
dec
das
push
xchg
dec
ficomps
lahf
inc
rorb
sub
sti
inc
repnz
mov
adc
jmp
aaa
and
insb
push
lods
stos
xchg
int3
pop
mov
sarb
mov
fnstsw
xor
test
and
out
mov
cmpb
pop
pop
inc
add
and
add
lods
mov
stos
movnti
mov
jecxz
inc
mov
add
stc
xor
out
cmp
mov
out
push
sub
aad
jns
jmp
pop
sub
push
jbe
add
lea
scas
lock
push
sub
fwait
lods
or
push
pop
adc
inc
or
out
inc
test
xor
mov
sarl
outsb
rcll
sub
and
adc
popl
pushf
std
rcl
daa
pop
data16
mov
in
adc
in
or
inc
test
aas
xchg
mov
cmp
sub
jle
mov
aad
dec
pusha
xchg
shrb
pop
jne
mov
mov
push
jmp
popa
jae
andb
aas
mov
cmp
sub
or
icebp
leave
lret
in
aaa
out
mov
js
jae
call
dec
mov
test
mov
repnz
xor
scas
fnsave
test
sahf
mov
xchg
out
cmpsb
idivl
lods
pop
dec
loopne
dec
loop
mov
out
rclb
ss
adc
adc
sbbb
or
aas
popa
cmpsb
dec
imul
sub
or
fisubl
xchg
pushf
push
inc
jle
mov
dec
in
fisubl
cmp
add
xchg
roll
popf
data16
add
imul
mov
cwtl
in
xchg
mov
mov
popa
jg
xor
cmpl
mov
inc
xchg
dec
js
ljmp
jecxz
ljmp
pop
out
sbb
cli
fxch
fmull
inc
xchg
mov
sbb
orl
jp
leave
addb
jae
jno
addl
pop
xchg
andb
jl
filds
fsts
test
jmp
int
xor
mov
xchg
mov
pop
and
xor
cmp
inc
push
mov
cmp
xchg
aaa
fmull
ljmp
cmp
or
and
sub
jmp
cmp
and
cld
popa
popa
cwtl
or
push
mov
xor
rcl
scas
lahf
mov
pop
push
notl
cmp
and
fwait
sbb
ret
loope
push
cmpsb
ja
movb
fsubl
cmpsb
inc
jle
mov
add
std
dec
add
push
push
sbb
sub
popf
or
lea
add
in
inc
lret
jo
jecxz
in
jmp
xor
add
shlb
dec
adc
pop
cmp
push
mov
outsl
cltd
cmp
out
icebp
lcall
jge
andl
call
xchg
xor
sbb
lret
insb
push
mov
test
xlat
and
rcrl
and
xor
dec
aaa
mov
or
ficoml
mov
and
pop
pop
xchg
cmp
push
leave
std
ret
jl
cmc
xchg
and
xchg
loopne
into
pushl
mov
neg
rcl
mov
xor
lea
inc
xor
out
pop
mov
xor
mov
repz
xor
adc
int
sbb
shlb
in
cmpsl
inc
addl
mov
adc
push
std
push
add
sbbl
mov
jg
lods
ss
pop
in
repz
call
jle
js
mov
lods
mov
cmp
scas
addl
adc
or
push
sbb
or
gs
lahf
pop
aas
scas
cmpsb
and
mov
les
shlb
and
ds
push
pushf
sahf
pop
lea
repz
leave
inc
stos
xor
jne
lea
adc
fcoml
mov
movsb
arpl
dec
and
and
mov
lret
ret
test
test
adc
ljmp
cmp
cmp
mov
data16
mov
xor
push
js
int
and
repz
int3
sub
xchg
add
pop
hlt
adcb
sarb
subb
movsl
sbb
lret
xlat
lds
fstpt
fwait
cli
jae
and
cltd
dec
imul
fstps
rcrl
insb
add
cmp
xor
js
push
ljmp
cmc
sbb
lret
rcr
and
out
in
mov
daa
cli
int
mov
cwtl
repz
or
cmp
push
xchg
jno
enter
outsb
out
adc
mov
shlb
push
jnp
inc
push
mov
jno
into
cmpsb
sub
dec
push
out
pop
in
rcrl
jb
ss
dec
push
mov
dec
out
in
sbb
pop
pop
jmp
loopne
push
mov
add
mov
stc
mov
cltd
ljmp
lret
shrb
hlt
adc
ljmp
xchg
jne
in
or
xlat
xchg
and
fsubs
test
andl
lahf
fstl
sub
popf
mov
mov
jecxz
ret
into
adc
adc
sbb
and
xor
movsb
and
pop
cmp
xor
sub
xor
inc
push
adc
or
bound
mov
push
enter
add
out
pop
xchg
lret
or
cli
dec
aad
fstpl
in
xchg
bound
pop
js
ret
cmp
dec
insb
jbe
push
mov
push
popf
push
rclb
jp
repnz
dec
ret
loope
cwtl
push
mov
arpl
sbb
mov
adc
loop
movsb
out
jge
push
jl
push
out
out
pop
or
ja
addr16
inc
sbb
jae
and
nop
push
add
test
adc
adc
mov
mulb
fxch
and
lcall
add
loope
and
inc
sbb
dec
scas
adc
xor
imul
dec
jae
mov
and
add
xchg
sbb
and
and
jno
mov
pop
out
push
ja
dec
mov
inc
jp
cmpsl
add
xchg
mov
int3
mov
dec
push
stc
movsl
into
inc
jmp
jmp
pop
ret
jnp
push
lret
clc
xchg
loopne
dec
inc
cmpsl
jmp
les
adc
leave
jp
adc
push
nop
divb
xchg
js
adc
repz
cwtl
jae
bound
aam
in
aas
mov
add
xchg
mov
mov
add
insl
les
mov
jae
and
add
and
add
and
lea
lea
js
sbb
push
add
push
int3
adc
mov
mov
or
imul
xor
sbb
sbb
test
add
lods
lods
aam
clc
or
inc
mov
loop
pop
jmp
xchg
mov
pop
rcll
pop
nop
daa
push
dec
mov
aad
out
aaa
in
pop
adc
mov
scas
push
dec
xchg
mov
outsl
outsl
or
lret
cmpsl
or
jae
lds
outsb
ret
imul
sarb
mov
jne
imul
push
dec
inc
insb
sbb
outsl
xchg
subl
movsl
fisttps
incb
test
outsb
xor
jns
mov
add
push
xor
jo
test
popf
jl
sbb
std
shrl
xchg
fnstenv
in
sub
insl
loopne
gs
fisubrl
jae
je
stos
repnz
fstps
or
dec
loop
mov
cmp
push
les
xchg
into
mov
outsl
out
push
imul
gs
test
ljmp
movsl
sbb
scas
xor
imul
fldenv
je
xchg
push
ljmp
es
aaa
jp
sbb
dec
pop
xor
mov
mov
call
std
mov
pop
jmp
dec
stos
lods
mov
push
pop
dec
in
cmp
mov
movsb
sarl
adc
leave
jge
xchg
or
lods
loope
push
and
sbbb
mov
imul
mov
inc
jmp
fstpl
adc
int3
loope
int
inc
jge
sarb
roll
hlt
ds
add
fsubs
cmp
xor
dec
push
or
arpl
arpl
dec
imul
pop
fwait
jg
pushf
xor
cmp
lock
icebp
pop
fistps
sahf
or
inc
add
orl
jp
xchg
lock
es
inc
dec
loop,pt
inc
add
inc
fistpll
push
int
add
sarb
cmp
jg
ret
stos
push
test
adc
xorl
adc
outsb
stos
xor
and
xchg
sbb
sub
dec
add
xorb
repnz
cmp
pop
fwait
aaa
jno
jecxz
jg
and
nop
movsl
popf
leave
sub
sub
adc
mov
test
sbb
dec
sub
mov
mov
adc
jne
pop
lcall
data16
adc
dec
in
add
mov
inc
hlt
outsb
push
push
jb
cli
scas
out
and
push
pop
or
push
aas
xchg
test
out
pop
cmp
pop
in
cmp
sub
xchg
add
lahf
sahf
cmc
movsl
xchg
xor
pop
jmp
adc
sub
or
cmp
inc
loop
sbb
out
stc
pop
jo
dec
lods
mov
out
pop
jle
lahf
scas
mov
nop
jp
ret
pop
loopne
cmp
dec
jns
add
mull
out
je
push
cmp
notl
rcr
cmpsb
mov
inc
fucomp
or
mov
icebp
mov
inc
xor
pop
ret
pop
xor
popa
mov
scas
cmpsb
popf
lret
dec
loope
test
cmp
fcmovu
inc
push
mov
cmp
cmpsb
and
fisttpl
stos
dec
sbbl
and
jae
es
arpl
push
int
out
xlat
cwtl
out
sbb
pop
fwait
and
clc
inc
fcomps
popa
lods
gs
sbb
in
sbb
ret
inc
sbb
jp
push
dec
xchg
xor
sub
adc
inc
pop
push
fprem
push
stc
pop
dec
shlb
pop
loopne
subl
xor
popf
std
mov
mov
roll
push
subl
pop
aam
outsb
stos
inc
aaa
inc
lret
outsl
jne
push
jae
push
out
rorb
inc
lret
sbb
xchg
mov
xor
adc
cwtl
cld
repz
and
stc
adc
push
and
or
xchg
push
adc
ja
jmp
scas
loope
pop
das
arpl
and
fnstcw
pop
jge
xor
int
or
negl
fmulp
icebp
aaa
and
leave
dec
arpl
and
lahf
fiaddl
cmp
stos
mov
dec
stos
dec
cmpsl
xchg
pop
imul
push
inc
test
test
ret
out
test
mov
sub
push
jp
sahf
or
and
adc
adc
mov
sbb
mov
cmovg
insl
out
out
stos
jle
pop
data16
insl
mov
js
sub
ljmp
jo
out
hlt
aad
dec
aaa
or
xor
mov
cmp
pop
push
jmp
xchg
jno
jg
pop
jecxz
nop
jmp
sar
out
clc
mov
sarb
ret
ret
dec
test
jo
test
cmpsl
ss
dec
dec
add
dec
pop
xchg
mov
std
mov
outsb
ljmp
ds
xchg
cmp
mov
mov
lods
mov
lods
xor
fwait
and
fnstenv
or
test
jge
arpl
dec
repnz
sbb
les
mov
js
add
mov
mov
mov
sarl
push
xor
mov
rclb
add
cs
iret
mov
rcll
mov
mov
loop,pn
imul
fucomi
pop
fistps
dec
imul
jae
push
pop
rcrl
mov
popa
mov
int
movsb
and
and
pop
ja
xor
mov
call
lea
aam
dec
pusha
mov
pusha
aad
push
jo
ret
rsm
mov
hlt
sti
sbb
je
push
adc
das
mov
mov
mov
jecxz
xor
popa
inc
inc
mov
lret
cwtl
or
jp
xchg
dec
inc
pop
lods
out
cmp
or
lock
and
bound
xchg
or
clc
add
sub
push
fwait
sbb
inc
aam
mov
mov
test
mov
bswap
jle
sbb
es
pusha
xor
jle
mov
lahf
xchg
push
mov
sbb
stos
xor
hlt
push
das
sub
mov
cmp
dec
jp
clc
or
es
or
add
fldt
cmc
test
shrb
jae
inc
jmp
add
add
cld
jg
and
lcall
pop
add
es
mov
sbbb
icebp
mov
xor
jns
addr16
aad
mov
push
scas
fiadds
push
sbb
mov
aaa
jns
mov
js
mov
pop
inc
mov
cmp
ja
pop
repnz
out
and
lahf
jg
arpl
int3
adc
add
xor
orl
sub
test
arpl
mov
dec
out
into
std
rclb
cmp
mov
push
arpl
ret
and
mov
sub
push
mov
loopne
pop
or
pop
add
cmp
mov
sbb
push
dec
adc
inc
loopne
mov
nop
and
jl
mov
xchg
dec
jmp
or
inc
jl
iret
dec
mov
lock
repnz
mov
jmp
je
xor
pop
sub
sbb
xchg
nop
test
mov
xlat
push
mov
add
int
fdivl
sbb
adc
xor
adc
jne
push
mov
pop
xchg
sub
into
inc
in
push
jo
push
add
pop
inc
orb
ja
repz
xchg
hlt
xchg
adc
sub
xor
std
mov
scas
rorb
imul
mov
or
ret
adc
pusha
outsb
xor
jne
pushf
incl
mov
xor
clc
std
push
add
xor
inc
jl
jnp
or
sbb
hlt
sub
idivl
mov
adcl
sbb
sub
out
mov
sub
jl
lcall
sub
pop
push
push
inc
sub
call
jecxz
pop
push
or
xchg
mov
inc
repnz
testb
dec
aad
frstor
jnp
xchg
pushl
sub
inc
cmpsb
adc
repnz
xchg
jp
mov
test
cs
xchg
or
pop
or
dec
clc
cld
lret
mov
clc
sub
ja
loopne
cmp
mov
nop
mov
sbb
movsl
es
gs
repz
jb
jp
and
push
cmpsb
icebp
shlb
lods
das
pusha
dec
cs
repz
aad
in
mov
loop
shrd
test
data16
lods
repz
aaa
xchg
lds
push
and
bound
cli
fst
xlat
cmpsl
test
test
mov
je
adc
out
add
jne
lcall
rcll
lea
fisubl
cwtl
add
push
fwait
mov
or
mov
mov
enter
mov
push
or
ja
sub
cwtl
jmp
fld1
pop
repz
add
rcpps
pop
and
cli
dec
scas
fwait
lahf
daa
ret
insb
mov
lods
out
pop
pop
mov
iret
rcl
add
pop
aam
sbb
aam
jne
xchg
inc
sub
mov
add
push
xor
call
push
ds
mov
inc
dec
cmp
push
in
das
lods
cmpsl
int
pop
je
lret
andl
mov
xchg
or
test
xor
fs
xchg
movsl
and
dec
fwait
test
enter
nop
push
jmp
fwait
imul
int3
adc
cli
imul
nop
loop
fdivr
and
mov
insb
cmp
add
scas
repz
push
test
inc
fisubrs
aad
aas
xchg
int
dec
push
adc
outsl
fildll
lods
adc
popa
sub
mov
or
clc
inc
adc
mov
inc
and
fistl
mov
shrl
movsb
add
jle
dec
test
shlb
sbb
cmc
aas
xchg
xor
xchg
repnz
pop
sbb
inc
repz
sldt
adcl
fcomps
cmp
js
push
mov
inc
rclb
fsubp
cmpsl
rclb
cs
ljmp
mov
or
out
fs
imul
add
sbb
loop
adc
popa
push
xchg
mov
or
shll
shlb
or
and
pop
jns
cmp
leave
jo
push
scas
xorl
cmp
mov
inc
or
mov
dec
cmp
pop
dec
sbb
adc
push
jmp
ror
ret
jbe
scas
data16
int3
mov
xlat
jne
push
bound
outsl
insb
test
lret
pop
std
jp
jp
fdivp
push
push
data16
enter
sub
lcall
pop
loopne
inc
mov
mov
pop
add
lret
fcmovb
push
dec
mov
mov
push
mov
sub
inc
pushf
adc
ss
mov
xchg
lods
rcrb
cmp
pop
insl
les
outsb
js
lret
fildl
dec
mov
movl
stos
xor
cs
mov
data16
je
shrw
ficomps
sbb
dec
inc
push
mov
in
je
push
dec
pusha
jno
pop
movq
repz
enter
adc
sbb
arpl
sbb
lea
cmp
jno
int3
mov
insl
inc
sub
adc
lods
or
adc
std
mov
das
xchg
push
mov
adc
xor
fbld
fsubr
xor
mov
les
sub
sub
addr16
int
and
aad
daa
jle
fildll
pushf
cli
and
adc
pop
pop
pusha
jecxz
mov
iret
mov
and
pop
ds
aas
xor
mov
enter
inc
cmpsb
vmwrite
test
pop
and
jo
xor
push
inc
int
xlat
aad
jae
mov
push
ret
jnp
js
jae
lahf
lcall
cmp
add
inc
in
add
jle
loopne
jecxz
ss
or
jge
rorl
or
or
rcrl
push
xor
movsl
rcll
imul
pop
jg
or
nop
lea
mov
mov
sub
vpcmpgtb
leave
push
push
test
fstpl
push
xchg
fldt
mov
xchg
xor
dec
dec
cmp
fstpt
jge
add
pop
cld
and
shr
xor
stc
out
inc
std
fidivrs
movsb
dec
pop
idivl
add
pop
add
mov
unpckhps
jo
inc
add
mov
xchg
mov
xlat
adc
add
stos
inc
dec
xchg
andb
scas
fisubrl
cmpsb
jge
inc
js
jp
call
repz
sub
test
fldcw
push
frstor
xchg
jg
inc
xor
es
shrb
sbb
dec
mov
fsub
and
out
sbb
inc
imul
and
xchg
mov
ret
mov
push
adcb
insb
ss
test
xchg
cltd
sbbl
dec
pushl
push
push
jg
xor
lahf
frstor
inc
jb
sub
insb
push
pop
push
movsb
xor
ljmp
inc
add
les
scas
pop
or
out
fwait
andb
cmp
push
adc
or
cwtl
and
ficoms
iret
rcrb
xchg
xchg
mov
aad
sub
subl
xlat
mov
mov
mov
ja
mov
push
sub
xchg
xor
jno
cli
test
lock
cmp
pop
je
xchg
icebp
add
sbb
mov
in
sub
rcll
inc
inc
aas
cmp
in
add
push
sub
stos
mov
mov
xor
ljmp
or
ds
stc
push
jns
cmp
or
sub
sbb
ja
sub
andl
bound
add
out
pop
scas
loope
repnz
mov
xor
subl
data16
enter
enter
jle
add
iret
mov
sub
jb
push
mov
and
or
inc
pusha
dec
pop
pop
pop
push
sti
fwait
scas
lds
test
popa
jle
jnp
mov
xchg
pop
xor
pop
mov
outsb
in
test
pop
cwtl
pop
pop
and
push
sbb
jae
sub
xchg
cmp
push
push
sahf
aad
sub
push
fsts
mov
ds
mov
shr
pop
pop
ret
and
push
outsb
ret
xchg
cmp
xchg
and
mov
in
sbb
aam
scas
xlat
mov
cwtl
or
or
pop
or
stos
out
movsb
and
pop
ss
outsl
hlt
paddusb
inc
push
fisttpl
push
push
repnz
or
jo
pop
aaa
or
lods
out
push
mov
pop
mov
lcall
lret
insl
and
dec
jp
push
and
pushf
mov
stos
adc
pop
popf
pushf
mov
repz
or
hlt
push
lahf
ljmp
or
out
les
fs
out
cld
movsl
add
fsts
mov
jle
sub
xchg
out
enter
dec
pop
add
push
icebp
hlt
or
fisttps
shll
inc
not
arpl
rorb
pop
xchg
xchg
dec
out
xchg
cmp
ds
add
dec
addr16
fucom
cld
xchg
cmp
mov
jne
das
dec
sar
adc
in
mov
inc
popf
sub
clc
lret
les
into
adc
out
cmp
call
xchg
or
and
in
mov
test
stos
dec
push
push
cmp
ret
pop
ss
cwtd
jne
repz
inc
jge
pop
inc
push
add
pop
pop
jl
das
push
or
cmp
xchg
sbb
add
cli
or
pop
xor
scas
shrl
cmp
cmp
cld
xchg
push
inc
adcb
dec
mov
repnz
cli
sub
pop
mov
and
incl
or
scas
leave
pop
jne
inc
test
sbb
movsl
push
push
pop
mov
lock
push
jnp
jb
jecxz
xor
outsl
test
jo
icebp
cltd
inc
mov
int
mov
mov
in
mov
or
stos
add
rclb
cmp
push
lea
imul
ss
xor
sbb
sti
scas
and
fadds
jp
lahf
fs
je
dec
pop
imul
sbb
loopne
ret
mov
cwtl
aam
out
jb
dec
push
mov
in
vandnps
test
pop
dec
ret
mov
dec
movsb
fldl
ss
aam
punpcklbw
or
shl
ja
jae
or
mov
jnp
push
push
cltd
sbb
xlat
jb
clc
sub
xchg
or
xchg
mov
pop
test
inc
jg
xchg
addb
lahf
mov
ret
xchg
inc
mov
cli
stos
inc
mov
data16
lret
inc
mov
imul
not
ja
or
insl
mov
lret
xchg
aad
jae
cmp
arpl
outsb
movsb
inc
jne
pop
pmaxub
rcr
jmp
mov
jl
jo
mov
or
push
mov
fsubrl
xchg
adc
sbb
outsl
or
repnz
les
test
insl
sub
jecxz
insb
jp
sahf
and
pop
or
sbb
push
adc
js
xchg
ret
cli
loopne
stos
push
sub
and
lahf
jns
stos
xor
iret
sub
jl
jp
rclb
out
in
xchg
push
fs
fidivs
scas
mov
jl
jp
xor
and
in
mov
inc
fs
mov
pop
and
movsl
xchg
popl
mov
fwait
dec
cmp
test
divb
add
lret
out
out
and
dec
push
xorb
push
cmc
mov
dec
cmpsb
xor
fisubs
or
pop
cmc
xor
stos
insl
out
mov
xchg
ret
rcr
push
ljmp
xchg
inc
inc
push
lea
fidivs
shl
pop
test
js
cwtl
adc
sbb
dec
inc
adc
inc
loope
xchg
les
hlt
pop
nop
jb
push
inc
sbb
add
xchg
push
lret
lret
fmuls
iret
iret
push
test
and
inc
sub
stc
outsb
or
fidivrs
js
sub
add
imul
mov
jle
xlat
and
out
push
lea
aad
xorb
inc
and
xor
aad
sbb
ficompl
and
out
lahf
das
or
inc
and
mov
ds
cwtl
push
xchg
rorb
into
dec
dec
loop
call
lahf
icebp
or
cmp
shlb
shl
sub
mov
cmp
push
mov
sar
sub
int3
xor
lret
ja
daa
inc
call
into
add
pop
add
xchg
sub
leave
push
int
imul
or
dec
int3
stc
ret
sbb
stos
rorl
jnp
add
ret
or
stos
xchg
movb
inc
andb
xchg
sub
xchg
js
les
ljmp
jge
repz
call
add
jae
add
popa
jle
cld
push
push
mov
pop
in
push
ror
xlat
mov
xor
inc
pop
push
cmpsl
xchg
cmp
sbb
mov
sub
pop
pushf
decb
lods
mov
and
pop
sbb
inc
in
in
and
xchg
pop
adc
loop
adc
sahf
dec
mov
dec
jo
lds
xor
xor
in
stos
maxps
lds
inc
xor
xorb
std
arpl
pop
adc
test
jns
loope
in
fisttpll
cmp
and
jl
jns
push
sub
gs
lea
fyl2x
cmp
mov
pop
push
sti
or
cmpsb
lea
push
movsl
pop
jmp
lret
lds
pop
movsb
inc
out
std
xor
add
pop
aad
sub
sbb
jne
pop
sub
add
fsubr
mov
out
mov
inc
dec
sub
sub
rolb
js
xor
mov
sbb
loop
push
ss
or
adc
mov
movsb
or
add
enter
jnp
or
sub
inc
jo
aas
nop/reserved
test
and
in
mov
cli
push
mov
movq
out
xchg
lds
lahf
stos
hlt
lcall
xor
xchg
cmp
test
add
ss
xlat
jmp
add
xor
cmp
loop
push
pop
pop
cmp
jnp
das
ds
fdivrs
pop
xor
jl
sub
arpl
shrl
and
movsb
ljmp
inc
adc
and
cmp
and
leave
int
loope
mov
inc
aas
mov
pop
addr16
pop
jae
jmp
xchg
in
mov
test
mov
stc
fstps
loopne
lret
sahf
push
jbe
cmp
aad
int3
pop
arpl
jmp
mov
repnz
xlat
cmp
test
xlat
dec
xchg
addl
clc
or
mov
jae
dec
lahf
xor
out
mov
jmp
int
lods
mov
imul
xchg
out
cmpsl
faddp
adc
pop
jmp
jns
lcall
xorl
jmp
xchg
cmp
pop
inc
and
mov
pop
shl
scas
jecxz
cmp
xchg
xchg
cmp
sbb
mov
pop
jb
inc
iret
mov
push
int3
and
scas
ljmp
xor
sub
cld
test
xchg
mov
pop
int
sub
mov
pop
les
pop
or
ret
xor
push
cmp
call
add
in
lcall
mov
ret
stos
mov
outsb
aaa
cmc
out
cmpsb
jbe
mov
adc
sub
cmp
sbb
movsb
dec
cmp
mov
xor
mov
xchg
push
xchg
call
cmp
sbb
insb
cmpsb
xor
loopne
cmp
mov
int3
xor
cli
mov
out
into
jno
mov
or
jne
shll
popa
aaa
lcall
xlat
xchg
xchg
loope
xchg
out
mov
fisubrl
jo
xor
push
mov
out
lods
fwait
out
mov
lods
test
jl
adc
dec
sbb
iret
or
add
jb
xchg
aaa
insb
dec
pop
sub
mov
out
cmp
mov
leave
cwtl
dec
mov
dec
push
ret
push
xor
sub
xchg
pop
jge
ja
dec
xor
imul
push
mov
xchg
lret
jecxz
xor
loope
fidivrs
adc
dec
pop
inc
bound
pop
add
jle
enter
mov
mov
das
jge
cld
imul
sub
std
push
adc
out
int
rcrl
jae
pop
xor
ja
or
stc
leave
jo
inc
dec
stos
int3
add
leave
mov
data16
das
xor
push
sbb
popa
lret
and
mov
adc
lcall
and
outsl
mov
into
dec
xchg
xchg
clc
sub
mov
int3
dec
mov
and
out
xor
pushf
push
push
push
jle
xchg
inc
flds
stos
aad
jae
mov
cwtl
ja
sub
push
nop
je
jb
int
ret
ret
aad
pop
pop
lcall
or
push
cmp
movsl
shlb
adcl
cmp
add
js
iret
jecxz
mov
scas
idivb
push
mov
int
cmp
addr16
cmc
mov
inc
sti
shl
mov
xorl
push
fbstp
ljmp
sub
std
mov
add
popf
inc
sbbb
arpl
mov
call
insl
jg
cltd
inc
mov
cmp
jo
cwtl
test
adc
jmp
icebp
repnz
sub
mov
xchg
ja
into
sub
in
sbb
cltd
and
lcall
dec
push
scas
xchg
dec
dec
pop
mov
sub
push
pop
in
xor
test
mov
pop
lcall
mov
jp
mull
mov
je
mov
jae
and
outsl
mov
fsubs
add
cs
mov
mov
es
mov
jb
imul
or
cli
add
pusha
scas
fwait
mov
push
imul
inc
adc
adc
sub
insb
cmpsb
test
enter
jecxz
es
in
stc
cmp
fsubrp
cmpsb
mov
adc
loope
ss
jmp
or
jo
hlt
add
stc
cli
daa
jbe
and
inc
dec
outsl
shlb
dec
cmp
rcll
inc
nop
pop
xchg
dec
cmpsl
imul
aad
pop
or
jae
repnz
xor
pop
popf
mov
dec
fwait
adc
jo
nop
mov
add
add
in
and
aas
fcomip
out
or
lods
outsl
jecxz
add
and
add
mov
sti
repnz
mov
cld
or
insl
int3
insl
test
hlt
or
xchg
nop
in
test
adc
inc
xchg
cmp
lea
dec
jae
fsubs
adc
lret
sbb
leave
inc
pop
negb
mov
adc
cmpsl
lods
bound
insb
and
jmp
pop
movsl
or
in
imul
or
sahf
mov
add
and
pop
sub
mov
shrb
inc
mov
pop
lock
arpl
push
aaa
or
xor
and
jmp
int
ljmp
add
ja
cwtl
pusha
roll
mov
inc
mov
mov
icebp
push
adc
aad
mov
mov
jge
push
mov
jno
or
shll
push
pop
jnp
mov
sub
in
fs
mov
sbb
pop
fndisi(8087
push
fadd
sub
push
cmpsb
inc
push
push
sbb
xchg
xor
ret
add
aad
roll
add
popf
and
cwtl
filds
cmp
push
and
outsl
xchg
lret
sub
ret
je
popf
negb
cmp
mov
adc
enter
ret
mov
or
stos
xor
test
push
xor
mov
xor
xor
pop
pusha
or
loopne
push
orl
dec
popa
es
cmp
and
and
add
inc
sub
dec
out
or
push
fwait
daa
mov
xchg
cli
cld
pop
mov
in
cmpsl
je
mov
jns
pop
mov
insb
fisubl
leave
fmul
mov
mov
jno
hlt
mov
rcrl
ds
add
mov
mov
rclb
sbb
mov
add
pop
scas
sub
mov
xlat
cmp
ljmp
or
inc
das
cmp
mov
mov
lds
fbstp
shrl
mov
add
nop
daa
inc
mov
push
xor
sub
cs
xorb
cmp
xor
mov
and
mov
mov
push
dec
cmpsb
sub
cmpsb
idivl
inc
shrb
ss
les
rcll
inc
cmc
faddl
pop
sub
or
mov
pop
mov
shlb
int3
mov
sbb
out
or
jmp
pop
jecxz
daa
jo
dec
xor
adc
pusha
out
dec
rcrl
mov
repnz
mov
xchg
popa
sbb
inc
into
test
push
cltd
jb
out
and
or
imul
xchg
loopne
and
dec
jp
int3
ss
xchg
cmp
dec
test
hlt
pop
loopne
sub
loope
sub
fwait
cmp
test
aad
add
xchg
and
insl
test
xorl
cwtl
daa
xchg
mov
dec
out
or
sar
push
popa
xchg
xchg
push
mov
sbbl
filds
sbbl
mov
push
inc
aas
push
mov
jecxz
or
sti
cmpsl
xchg
and
lds
cld
imul
test
outsl
sbb
insb
adc
in
push
outsb
es
mov
into
cmp
lods
es
xor
xchg
fsubr
pop
cmp
cmp
xor
lcall
std
outsb
mov
out
movsb
fdivr
outsb
mov
pop
cmpsl
mov
push
xchg
call
in
imul
add
mov
push
ds
fdivs
fidivs
pop
sub
cmc
in
hlt
jno
sub
jecxz
sbb
arpl
repnz
pusha
jecxz
dec
repnz
or
dec
adc
cld
sub
es
sbb
jns
sbb
imul
mov
fadds
aam
sahf
fisubrl
xchg
dec
pop
push
fs
pop
inc
insb
jg
popl
lea
insb
add
cmp
shlb
inc
pop
push
imul
sbb
stos
xlat
test
mov
xchg
jge
enter
nop
int3
push
dec
adc
jae
ss
cld
xor
push
and
mov
jl
ljmp
jmp
or
aam
mov
mov
sbb
mov
push
mov
mov
cli
roll
in
je
sub
sbb
xor
in
and
je
cmp
sbb
fidivrs
xor
outsb
roll
je
xor
xchg
cmp
scas
stos
mov
fnstsw
lock
push
add
xchg
les
adc
cmp
in
bsr
inc
orb
das
out
sahf
and
ljmp
scas
mov
movsl
mov
idiv
xor
out
mov
in
rolb
xchg
movsl
jecxz
and
jmp
pop
ja
dec
fwait
xor
pop
and
mov
repz
xlat
loope
or
ds
andb
out
mov
imul
cli
or
adc
out
aad
cltd
mov
ja
xchg
push
fs
rorl
add
pop
imul
add
addl
fisttpll
fsubr
int
lock
mov
ljmp
addr16
pop
sbb
push
out
mov
cmp
pop
xor
xchg
xchg
cld
jnp
and
jbe
jg
into
sbb
fcoml
out
js
mov
rclb
fmuls
jnp
jno
jl
push
sub
jl
out
aad
and
test
popf
and
cmp
lock
lods
das
mov
sub
aam
addb
stc
movsl
popf
aas
mov
les
push
xor
add
loopne
loop
and
outsl
jns
dec
icebp
ret
sbb
into
mov
rorl
and
test
iret
ja
push
cmpsl
lcall
jo
xor
push
xchg
dec
mov
stos
xchg
sub
in
mov
mov
jne
mov
sti
daa
mov
mov
rolb
xchg
add
pushl
inc
xchg
mov
adc
xor
hlt
pop
pop
add
decb
dec
lahf
ret
hlt
pop
jb
in
pop
test
mov
jle
cs
or
je
jmp
icebp
dec
mov
mov
mov
and
mov
das
dec
lock
jbe
jb
push
jnp
dec
and
pop
adc
xchg
push
jb
sbb
ret
pusha
imull
mov
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
mov
xlat
lea
jmp
or
add
pop
add
mov
cli
pop
cmp
les
mov
xchg
popf
or
out
gs
call
fdivs
lcall
cmp
pop
loop
les
daa
mov
mov
sbb
inc
pushf
loop
dec
gs
jne
push
imul
in
loopne
movsb
lret
stc
daa
jns
popa
sub
adc
popf
or
jno
add
xor
leave
shl
mov
call
pop
dec
add
or
mov
jle
mov
into
adc
pusha
xor
sbb
add
xchg
mov
stc
and
insb
mov
push
cmp
and
sub
push
aad
stos
mov
int
inc
aaa
leave
stos
pop
scas
bound
les
cmp
jae
adc
jb
orl
in
xor
mov
dec
cmp
mov
adc
outsl
cmp
push
imul
and
stos
adc
jno
clc
test
jb
add
scas
pop
dec
sbb
stos
mov
xchg
inc
or
mov
cmp
test
sbb
mov
mov
gs
lcall
sbbb
bound
dec
hlt
lds
icebp
loopne
lahf
xchg
mov
daa
jp
and
movsl
or
enter
fcomi
inc
or
and
adc
push
in
jb
sti
scas
xor
or
cld
leave
sub
inc
test
popf
add
cmp
stos
cltd
in
sbb
cmp
cmp
sahf
out
lret
sbb
inc
and
cmp
or
call
ja
pop
movsl
test
test
dec
test
cli
addl
sub
sti
mov
xchg
or
pop
inc
ret
loop,pt
jmp
adc
push
xchg
jecxz
sbb
cmpsl
jmp
loop
enter
inc
call
xchg
lcall
into
fstl
jae
or
clc
dec
jg
fcoml
sbb
nop
psrad
ret
aaa
push
test
dec
je
pusha
adc
mov
loopne
pushf
popa
adcl
ret
rcl
and
js
cwtl
mov
push
data16
je
std
push
cmp
sub
scas
sub
add
rolb
popa
scas
sbb
cmpsl
mov
sub
push
inc
loope
fisubl
rclb
jl
adc
loope
je
scas
dec
fbstp
cmc
inc
lahf
cmpsl
or
push
imul
imul
daa
or
or
insb
adc
pop
lcall
jecxz
or
or
pop
and
or
push
jmp
cli
out
rcrl
leave
sub
jns
mov
jns
bnd
mov
test
sti
in
jns
je
sbb
jb
add
jecxz
xlat
sbb
pop
push
loopne
and
push
pop
sbb
mov
and
jo
cld
adc
dec
stc
add
mov
movsb
dec
or
pop
mov
pop
cwtl
in
stos
popa
mov
dec
data16
cmc
lret
sbb
fnstcw
mov
mov
dec
repz
enter
fnstenv
div
inc
out
adc
sarl
jbe
adc
jne
ljmp
outsb
and
xor
stc
leave
dec
jecxz
pop
repz
call
stos
lret
aad
leave
push
es
jno
addr16
cmpsb
addr16
adc
inc
cli
cmc
xchg
repz
xchg
and
jno
popf
mov
or
push
lds
mov
jge
mov
or
mov
cwtl
pushf
in
add
out
insb
mov
xchg
push
cwtl
leave
dec
pop
cmp
cmp
mov
lahf
sbb
andb
test
jmp
jmp
mov
mov
pusha
jle
int3
mov
scas
add
test
dec
aas
lcall
icebp
xor
mulb
aas
jmp
test
push
xor
ss
aam
aam
dec
sbb
imul
pop
mov
shrl
pop
and
stos
xor
sub
or
in
xchg
mov
orb
sub
sub
nop
mov
dec
mov
push
push
lcall
out
push
call
aad
add
fucom
js
dec
cld
imul
out
mov
ja
aaa
add
shr
sub
out
pusha
sub
mov
sbb
add
stc
lret
pop
in
pop
fisttpll
inc
test
call
and
test
sub
stos
and
daa
scas
mov
mov
lahf
mov
jl
adc
push
cmpsl
rclb
mov
dec
mov
dec
add
popf
and
inc
mov
push
adc
push
aas
mov
cwtl
jl
sarl
fbld
mov
rorl
inc
popf
test
in
ficompl
bound
xor
rcrb
mov
dec
xor
sbb
ss
fsubrl
pop
imul
mov
add
sub
les
push
push
int3
shlb
mov
jg
ljmp
jae
fwait
mov
int3
dec
aas
or
fisubrs
sub
call
adcb
das
shlb
inc
outsb
xchg
dec
test
aas
addr16
adc
sbb
dec
xchg
sub
mov
lock
mov
xor
jp
cmc
mov
sahf
push
leave
lds
jnp
in
and
test
or
outsl
setno
mov
arpl
jno
cmp
xor
and
cmp
out
sbb
fbld
lahf
js
dec
pop
pop
jmp
sbb
popf
daa
test
adc
dec
add
xchg
push
xchg
inc
data16
jp
imul
loope
or
push
lcall
arpl
inc
jmp
repnz
jp
sbb
inc
les
fst
jle
imul
ss
sub
lcall
mov
inc
add
or
and
sarb
dec
push
minps
sahf
shlb
testl
sbb
mov
jmp
cmp
jecxz
aad
pop
push
and
cld
jns
or
loopne
ja
leave
sarl
dec
and
jae
aas
imul
jnp
dec
outsl
adc
mov
mov
jae
add
jg
stos
mov
popf
xor
and
add
sbb
xor
adc
repnz
jne
gs
cwtd
push
aaa
enter
lret
sarb
enter
inc
add
int
and
lds
incb
outsl
mov
add
inc
pop
in
stc
push
dec
sub
sbb
and
outsb
das
sar
scas
ret
pop
out
adc
mov
dec
mov
push
orl
xor
xor
addr16
adc
out
outsl
jle
es
jnp
jge
xchg
lahf
ljmp
mov
ljmp
test
lcall
or
lret
stc
lods
sbb
or
cmc
mov
cmp
mov
cmpsl
sub
loopne
nop
sub
cld
jnp
arpl
adc
lods
pop
mov
or
mov
lret
mov
jbe
fstl
sarb
loope
dec
cltd
dec
or
add
movsb
mov
xlat
mov
daa
addb
add
dec
inc
insb
jo
shrb
gs
mov
movsl
hlt
outsl
icebp
lret
mov
mov
movsl
test
je
jbe
adc
mov
scas
notl
jnp
mul
addb
out
xchg
mov
in
in
push
adc
add
stos
dec
mov
cmp
jecxz
push
mov
stos
mov
clc
jno
push
jo
fsubs
into
icebp
repnz
nop
jmp
push
ficoms
mov
sbb
push
jae
not
nop
mov
pushf
and
add
dec
pop
bnd
aas
pop
daa
test
add
mov
lock
repz
insb
adc
pusha
test
mov
lock
fsubr
enter
inc
cmpsb
stc
push
or
pop
sbb
pop
fcomps
call
add
out
mov
pop
xor
fistl
stos
adc
mov
dec
enter
xchg
loopne
and
out
sbb
mov
daa
arpl
jecxz
andb
mov
mov
push
cmp
fldt
stc
inc
inc
std
ret
sbb
imul
xchg
loope
mov
xchg
loope
lods
orl
xchg
iret
mov
push
dec
shl
and
sar
mov
sub
sti
outsl
movsb
add
adc
out
mov
mov
inc
cmp
sub
xlat
adc
leave
xor
and
std
fs
sbbb
push
mov
mov
leave
or
into
or
popa
push
xor
cld
sbb
adc
out
scas
and
or
ja
mov
call
repnz
lds
push
aad
pop
xchg
rclb
inc
pop
adc
pop
sbb
add
mov
mov
mov
mov
shll
shrl
xchg
int
sbb
add
inc
or
push
or
std
xchg
js
lret
icebp
cmc
sub
pop
cmp
sbb
mov
inc
hlt
pop
mov
pop
fstp
add
sbb
aas
in
hlt
pushl
jp
xor
xchg
data16
aaa
dec
cli
or
in
add
push
fidivrl
xor
add
dec
mov
sub
sbb
sbb
mov
mov
push
inc
nop
repz
test
leave
cmp
std
rolb
idivb
mov
shlb
and
iret
or
je
shll
pop
lahf
mov
data16
hlt
mov
add
lea
xchg
sbb
and
mul
mov
fcoms
out
inc
sbb
jns
dec
pop
sbb
sahf
push
ja
sbb
aad
sahf
stos
pop
cmp
test
addr16
aas
dec
int
test
cmp
sub
in
imul
ja
pop
sbb
repz
rorl
push
arpl
jl
mov
int3
push
dec
hlt
mov
stc
xor
cmp
pop
mov
jl
pop
mov
cmovns
or
xor
repnz
int3
mov
mov
xchg
pop
pop
cmp
pop
mov
lods
lret
cmpl
lret
dec
out
jge
xlat
leave
movsl
ja
xchg
sbb
in
xchg
add
or
dec
jp
and
dec
loopne
aas
dec
add
in
outsl
mov
shlb
inc
imul
fisttpll
pop
mov
jle
sub
stc
test
int3
mov
or
pop
lret
push
inc
and
jge
xchg
mov
mov
loop
aad
das
sub
jns
xor
imul
andb
pop
std
add
pop
mov
mov
ja
movsl
xchg
int3
stos
dec
xchg
fistl
pop
aad
pop
stc
jmp
lds
adc
cmpl
loope
push
clc
cmp
fs
and
mov
jle
sub
push
cmpsl
sbb
popf
xchg
inc
inc
test
jbe
aam
inc
jge
ret
mov
mov
and
rorb
dec
fldcw
imul
int3
dec
fs
mov
dec
idivl
lret
cmp
mov
dec
shlb
ljmp
adc
sahf
clc
xor
insl
sbb
incl
fisttpll
adc
mull
dec
ljmp
sub
jb
xchg
call
out
cmp
mov
cltd
hlt
and
add
cmp
add
test
pop
add
sbb
fsubp
sbb
add
pop
sbbb
xchg
pusha
inc
outsb
mov
imulb
cwtl
mov
jne
dec
fsubl
stc
mov
sahf
xchg
lock
sbb
jecxz
les
cld
pop
or
std
sbb
and
enter
mov
sub
mulb
ret
test
push
add
adc
fs
mov
sbb
ljmp
mov
jmp
leave
and
daa
mov
les
xor
psubq
inc
jecxz
mov
lods
cmpsl
sub
stc
xor
call
shll
je
ss
lcall
jb
es
lea
lcall
dec
mov
push
js
ljmp
subl
pop
dec
out
mov
sbb
gs
movsl
jge
lds
in
pop
rcr
push
mov
arpl
xlat
lcall
xchg
xorb
cmp
jmp
ret
cmp
pop
sub
mov
loopne
pop
mov
mov
add
je
out
cmp
repnz
mov
pop
xchg
sbb
add
pop
add
xchg
sahf
int
jp
xchg
lods
push
inc
push
pop
mov
or
xchg
sbb
ja
sub
mov
out
inc
sub
jno
lock
xchg
int3
dec
int3
sbbb
pushf
dec
pushf
push
and
add
inc
fidivl
icebp
sahf
mov
and
xchg
and
mov
imul
andb
pop
jle
pushf
jbe
movsl
mov
jnp
stos
add
jbe
pop
sbb
stc
sub
popa
in
mov
fstps
fisubl
sub
into
popf
mov
ds
out
add
xor
xor
icebp
inc
sub
ret
mov
cmc
cmp
and
xor
add
jge
inc
inc
call
xor
push
mov
adc
aas
daa
xchg
icebp
inc
mov
movsl
outsl
movsl
roll
out
jnp
cli
fs
jbe
in
adc
test
in
mov
cli
adc
jmp
pushf
pop
and
xor
out
int
ljmp
jno
fst
push
push
lea
cmp
mov
sar
sarb
add
imul
dec
loope
sbb
jne
adc
jg
imul
sarb
lock
pop
pop
mov
jbe
bound
repz
test
out
loopne
push
into
shl
ljmp
xor
push
xor
filds
jnp
fdivl
jg
aaa
xor
xchg
gs
fs
xchg
stos
jle
cld
out
es
stc
or
shlb
pop
outsb
sub
pop
dec
sub
lods
and
adc
mov
test
test
pop
pop
jb
js
xchg
add
cmp
repz
push
jge
mov
adc
mov
push
daa
inc
sbb
jno
out
add
xor
fidivrs
pushf
push
lock
and
out
out
and
stos
loop
pop
imul
in
xchg
sbb
bound
mov
xlat
xchg
or
cmp
fwait
cmpb
daa
call
fsubrl
mov
jle
sar
add
lret
movl
cld
mov
mov
cmp
xor
aad
pop
leave
or
pop
and
sub
mov
sub
fwait
dec
dec
add
aad
fcomi
dec
addw
mov
adcl
ja
push
incb
lea
xor
add
jnp
jp
ds
mov
mov
pop
ret
shlb
arpl
xlat
jbe
or
push
repz
mov
fdivl
push
das
adc
mov
loopne
repz
std
neg
xor
ret
ja
xor
lret
mov
cwtl
fldenv
mov
adc
imul
repz
test
pop
jbe
out
mov
lock
push
ja
ja,pt
inc
push
in
std
je
test
mov
mov
ret
ja
add
jb
ss
or
movsl
jmp
mov
add
or
and
insb
jo
leave
mov
push
xchg
jae
sub
fs
jg
jle
jo
push
lds
sbb
insl
test
pop
xchg
adc
xor
cmp
scas
mov
imul
jmp
bound
addr16
adc
add
mov
or
pop
pop
dec
push
jns
jl
mov
int3
es
sub
mov
xchg
je
add
inc
push
notl
and
mov
dec
adc
rcrl
dec
jl
dec
insb
insl
nop
mov
pop
jle
lods
inc
mov
push
popa
subl
dec
cltd
inc
add
xor
cwtl
jae
sahf
xor
lret
in
insl
std
std
add
jae
cmc
xchg
jbe
add
dec
pushf
fsubrl
ret
push
cmp
notl
pop
mov
dec
push
jbe
sub
je
adc
sub
scas
cmc
mov
cmp
jl
std
sbb
xorb
inc
aam
das
jo
jl
stc
imulb
pop
std
xor
xchg
std
shrb
out
xchg
inc
shll
imul
dec
jp
sahf
sbb
or
stos
test
icebp
int
push
psrlw
xchg
cmp
mov
mov
mov
cltd
xor
push
addr16
clc
or
mov
cwtl
adc
pop
push
xchg
fwait
push
or
xor
lds
mov
jo
pop
pop
inc
and
jb
jge
push
xchg
push
movsb
pop
or
aaa
mov
out
cmp
cmpsb
ja
add
andb
into
lea
adc
adc
aam
and
in
int
sahf
outsb
or
sub
cwtl
and
xchg
jae
mov
jb
rorb
adcl
pop
sub
je
add
xor
lods
mov
jl
and
adc
pusha
into
fildl
push
ds
xchg
iret
or
ficompl
xchg
std
xchg
test
aas
lea
test
adc
xor
push
xor
sub
mov
std
xor
bound
xlat
loop
jns
into
inc
sbb
bound
ss
dec
jp
out
add
test
fsub
insl
test
jae
add
in
lea
loope
pop
in
cmp
js
push
jno
mov
cmc
test
imul
sub
adcb
xor
fdivl
xchg
sub
outsb
jg
es
out
stc
xlat
fs
jno
popa
mov
mov
jle
into
mov
xor
cwtl
pop
cmp
xchg
jb
mov
inc
dec
xor
cli
movsb
push
shrl
adc
out
mov
dec
sbb
icebp
ret
idivl
and
dec
scas
ret
enter
and
js
xor
and
pushl
outsb
out
pop
leave
outsb
add
enter
push
icebp
and
idivb
repnz
mov
shll
xchg
sbb
xchg
or
mull
push
push
outsl
sub
nop
je
mov
decb
cmp
jbe
and
pop
dec
xor
aaa
mov
sbb
enter
in
jl
or
stc
push
mulb
adc
push
out
xchg
shlb
xchg
test
pop
lahf
inc
adc
mov
lods
xlat
ret
xor
mov
add
aad
pusha
cld
jne
scas
adc
xchg
mov
add
and
add
xchg
adcb
or
pop
add
xor
stc
js,pt
aas
pop
add
and
sub
int
mov
add
mov
fdivs
loope
out
xchg
mov
inc
insb
scas
inc
loopne
insl
push
lea
iret
movsb
or
jnp
push
and
outsl
push
stos
ss
fadd
cmp
mov
jmp
mov
jno
xchg
xchg
fmuls
cmp
adc
js
sub
mov
adc
stc
xor
inc
jl
push
filds
jmp
add
stos
or
lahf
scas
out
sbb
sub
jg
pop
shll
in
inc
push
test
mov
jmp
ret
adc
in
push
out
mov
imul
repz
ret
pop
mov
push
out
or
cmp
cmp
jae
cmp
imul
jns
int3
push
adc
or
pop
hlt
jo
sub
add
imul
xlat
test
imul
aaa
xor
call
jo
aad
sub
movsl
dec
into
pop
jno
repnz
mov
jl
inc
flds
outsl
pop
mov
pusha
pop
or
xchg
mov
push
sub
push
dec
push
movsb
or
xchg
xor
jns
mov
mov
mov
mov
mov
lods
cmp
out
cmp
mov
divb
push
jo
in
test
sub
pop
loop
add
sbb
cli
cltd
xor
inc
jmp
loope
mov
je
add
inc
ficomps
sti
inc
push
pop
dec
push
cwtl
dec
lret
adc
add
mov
fidivrl
lods
adc
mov
stc
aad
sbb
andb
xor
clc
in
or
mov
xchg
mov
movl
mov
push
orl
xchg
rorl
sub
or
jmp
mov
or
xchg
test
bound
add
stos
call
iret
ror
mov
movsb
cwtl
cs
ret
movsb
xchg
jl
fstpl
pusha
pop
fldl
add
pcmpgtd
sub
subb
test
stos
mov
xchg
shlb
inc
inc
lods
push
stos
std
or
push
push
jae
inc
orb
xor
outsb
inc
adc
inc
cmpsb
dec
mov
xchg
fistps
loopne
das
and
test
aad
inc
dec
iret
das
and
stos
test
mov
mov
fcomps
ljmp
mov
jmp
into
and
xchg
fcomps
or
pop
dec
iret
mov
sub
lock
adc
push
loope
xchg
inc
das
jmp
cld
cmp
movsb
out
sub
pop
push
cmpsl
icebp
test
push
sub
movsb
arpl
rorl
lock
sbb
jge
stc
jb
jge
jo
inc
sbb
cmp
cmovo
mov
stos
in
push
faddl
cmp
xchg
push
mov
aaa
imul
fadd
mov
or
ljmp
lahf
jecxz
test
ret
jae
mov
outsl
test
std
mov
leave
cmp
sub
cmp
int3
in
push
aam
mov
xchg
sub
pop
arpl
add
sub
sahf
dec
adc
fsubrp
pop
jge
xchg
xor
mov
push
das
test
jge
inc
les
xor
jnp
fmuls
movsb
in
sbb
lahf
movsl
mov
les
outsl
cltd
iret
xchg
andb
ja
jecxz
and
xchg
xchg
aaa
ret
xchg
xchg
push
jo
stos
mov
mov
mov
cmp
ficoms
jp
divl
testl
loop
push
push
sbb
and
movnti
and
enter
jge
xchg
aad
jo
and
xchg
mov
cmp
lcall
gs
ja
aas
jnp
cld
push
mov
xor
cmpsl
jns
sbb
ljmp
add
iret
out
imul
cmp
inc
pop
out
popf
leave
stos
test
cli
push
push
push
in
daa
jns
into
data16
out
cmp
lcall
cmpsb
inc
xchg
int3
std
inc
xor
movsb
scas
dec
xchg
dec
leave
and
cmp
ja
lahf
filds
adc
jns
aas
cmp
jmp
ds
arpl
shlb
mov
mov
jp
push
sub
stc
xchg
lcall
add
push
push
add
add
cld
and
mov
in
shrb
pop
cmpsl
rcrb
sub
and
mov
jne
scas
push
shr
dec
mov
insb
lcall
repnz
scas
andl
rcrl
mov
cmpsb
mov
mov
sbb
and
jmp
jp
imul
xchg
sbb
lds
xorl
in
push
repnz
imull
add
push
inc
pop
or
popa
lahf
sub
outsl
aam
pop
xchg
mov
mov
fisubl
in
pushf
test
shll
jne
push
out
repz
aaa
lcall
inc
aam
stos
dec
aam
in
xchg
rcrl
or
xchg
dec
and
test
je
mov
mov
ret
jb
insb
paddsw
inc
push
icebp
sbb
int
cmp
push
add
jnp
int3
call
stos
imul
push
jno
mov
cmp
hlt
jb
clc
lret
data16
lods
fwait
and
std
int
pop
jecxz
xchg
pop
jnp
andb
clc
and
int3
mov
xchg
dec
inc
xchg
xchg
enter
fisubrl
cli
push
dec
leave
push
jo
test
mov
test
mov
jle
fmuls
cmc
jl
pop
pop
or
sub
adc
vmwrite
call
cmpsl
push
mov
push
lahf
xchg
sarb
js
inc
in
loope
inc
push
xchg
cltd
ja
inc
xorb
push
ljmp
repnz
daa
sbb
push
lret
adc
in
jl
jge
mov
xlat
fdivrp
pop
cmp
dec
and
aam
loope
addb
mov
adc
jmp
mov
ja
dec
add
mov
or
push
jl
or
inc
mov
jno
aad
push
scas
fucom
jno
pop
orl
mov
scas
push
mov
add
add
mov
mov
aad
add
and
add
mov
sub
sbb
ja
nop
mov
add
sub
cltd
sbb
pop
int3
sbb
xor
push
stos
repz
imul
in
push
mov
sbb
mov
jno
jne
or
pushf
or
mov
pop
cmp
js
or
and
xchg
cmp
fcompl
in
outsl
js
addl
pop
loopne
sbb
jle
dec
inc
xor
add
mov
and
push
mov
mov
div
mov
push
pop
fisubs
xchg
and
fwait
hlt
cli
jle
push
icebp
int
sub
inc
xchg
add
push
in
bswap
push
aad
xchg
sbb
stos
mov
negl
aaa
rcll
adcl
sbb
push
rcrb
pop
rol
aas
and
lds
in
lret
cmpb
fldl
dec
daa
inc
aad
add
bound
cmc
push
loop
pop
xorl
por
imulb
insb
dec
mov
scas
jne
dec
in
insb
shll
or
movsb
in
cs
or
paddsw
cmc
or
or
jbe
lret
pop
adc
roll
aad
pop
ljmp
sbb
ret
imul
shr
adc
xchg
mov
mov
lods
adc
jmp
or
ja
iret
imul
adc
add
push
out
mov
scas
loop
fsubr
cmpsl
lahf
cwtl
cmpl
push
xor
or
leave
inc
call
mov
jb
dec
inc
ror
sbb
dec
fsubrl
xchg
xchg
jp
fsubp
mov
dec
add
test
jo
loope
xor
stos
sbb
mov
lock
rorl
cli
inc
mov
loope
jp
mov
aas
ljmp
mov
mov
stos
add
sbb
push
dec
test
jae
fcoml
sbb
aam
fdivp
push
imul
je
xchg
adc
stos
gs
lods
movsb
popf
mov
insb
adc
cmp
lret
push
push
fs
sbb
or
imul
and
pop
lods
movsb
and
fstps
mov
inc
mov
sub
aad
pop
imull
lcall
mov
xor
and
jp
cs
into
adc
jno
ja
xor
daa
pop
inc
je
push
andl
idivl
popf
and
mov
clc
data16
insb
in
iret
fnsave
sub
cmp
mov
aaa
adc
stos
pusha
xorl
and
shl
ds
pop
pop
notl
stc
call
lret
insl
add
cmp
daa
ja
pop
dec
in
adc
mov
pop
addl
gs
xchg
jl
or
imul
mov
sbb
mov
jp
inc
and
pop
push
test
and
jno
or
scas
rcrb
rorb
ds
mov
lret
adc
mov
daa
lahf
int
push
fdivrl
lock
ss
incl
xchg
sub
inc
jne
aam
pop
js
ror
mov
pop
lcall
push
jle
pusha
icebp
and
or
xchg
inc
sub
rorl
inc
ljmp
add
lds
lock
cmp
sub
xlat
mov
xlat
movsb
mov
xchg
jle
cmp
and
outsb
aaa
pusha
loope
mov
sub
icebp
and
and
clc
call
cmp
push
cmpsb
xchg
mov
in
repz
and
pop
xchg
cwtl
in
outsb
mov
mov
jno
cmpsl
les
fstpt
int
or
jae
cltd
arpl
pop
lret
or
sti
lea
sub
test
test
popl
ret
in
xchg
pop
xor
push
pop
test
xor
movsl
out
pop
inc
inc
add
mov
mov
stos
push
iret
lcall
pop
dec
in
adc
xor
test
daa
cwtl
shrb
cltd
xchg
cli
cmp
mov
scas
lea
rcll
xor
lock
cmp
jge
dec
leave
mov
dec
cmp
je
imul
repz
int3
or
cltd
aas
cmp
fdiv
in
adc
movsl
in
popa
and
jbe
leave
lcall
xlat
testb
pop
pop
add
lret
inc
ficoml
mov
cmpsb
arpl
nop
inc
cmp
mull
mov
mov
jbe
jle
lret
loop
pushf
shll
std
inc
loope
lods
adc
outsl
cmpsb
imul
btr
pop
dec
fsubl
sub
add
repz
scas
pop
movsl
xor
imul
cmp
push
stos
push
xor
and
fildl
push
ffree
jne
and
int
in
aas
dec
pop
pop
mov
pusha
xchg
mov
mov
xchg
mov
data16
push
out
or
int
adc
mov
push
push
fs
mov
inc
call
dec
sbb
jecxz
mov
shll
mov
or
push
xor
loop
jno
out
push
mov
dec
test
or
stos
fdivs
sub
and
nop
mov
sbb
repnz
lret
push
outsl
push
inc
loopne
out
jne
arpl
insl
jnp
jo
cli
addr16
test
dec
cmp
call
xchg
jnp
adc
rolb
sub
popf
shll
jbe
aam
inc
roll
loopne
cmp
jb
mov
xchg
jecxz
sbb
sbb
cmp
lock
sbb
popa
mov
enter
xchg
jg
pop
fstl
jp
data16
adc
pushf
je
mov
dec
jne
rol
add
into
pop
pusha
pop
xlat
sha256msg2
xlat
out
inc
dec
ds
push
sbb
int3
sbb
pop
dec
xchg
inc
enter
or
ret
scas
pop
xor
ljmp
or
mov
sub
sbb
cmp
mov
popa
jecxz,pn
int3
lods
loop
mov
jp
lahf
jnp,pt
cltd
adc
and
xchg
int3
lods
sub
aam
fwait
push
mov
adc
std
sbb
inc
mov
fstl
in
movsb
dec
dec
imul
sbb
outsl
pushf
insb
ds
bound
jecxz
mov
fs
push
jmp
cmp
mov
add
add
add
add
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
push
add
push
xor
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
addb
add
add
mov
cmp
cmp
cmp
mov
add
add
add
ss
ss
ss
add
add
or
