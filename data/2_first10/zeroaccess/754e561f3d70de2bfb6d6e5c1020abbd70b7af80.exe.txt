push
mov
sub
mov
mov
jmp
adcb
shrl
jle
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
fisubrs
aam
jl
out
adc
and
jno
mov
je
hlt
out
cmp
and
in
pop
nop
outsl
andl
xchg
das
sub
dec
mov
std
cmpsb
push
in
cmp
xchg
add
stos
insb
xor
push
shrl
ficompl
icebp
cmp
sub
int3
addr16
cmc
shlb
sub
push
sbb
je
cwtl
aas
or
adc
das
sub
lahf
data16
adcb
xchg
add
jne
ret
iret
push
adc
cwtl
cli
loopne
hlt
repz
aam
inc
imul
cmpsl
xchg
pop
leave
enter
mov
dec
cmp
out
sub
aam
popf
les
jmp
xor
cwtl
outsb
xchg
sbb
xchg
fdivrl
popf
out
mov
imul
jae
dec
sub
iret
and
fists
jle
out
push
xor
pop
adc
mov
jmp
mov
mulw
inc
rorb
push
fsubrl
xor
inc
mov
push
mov
pop
fstpt
mov
inc
cmc
and
sarl
int
pop
sbb
jle
mov
add
adc
bound
das
pushf
sub
xchg
nop
jo
lock
je
push
xchg
pop
das
xchg
les
sti
scas
xchg
sbb
jmp
sub
jp
out
or
pop
int
ror
fmuls
test
mov
out
jmp
rcll
pop
jecxz
xchg
and
jp
jno
lock
adc
adc
les
or
lcall
lcall
imul
xor
into
or
stos
jae
cld
mov
sbb
jmp
addb
sub
repz
add
stos
ljmp
jp
incb
pop
push
pop
cs
push
sbb
add
lret
cwtl
in
mov
mov
in
sbb
nop
xchg
and
dec
push
mov
scas
test
test
outsl
add
cmp
or
mov
adc
dec
pushf
and
pop
pop
flds
mov
sub
fistpl
adc
in
scas
inc
lret
inc
jmp
fimuls
aas
xchg
insl
test
pop
pop
mov
out
push
ss
clc
cli
loopne
lea
xchg
daa
daa
pop
adc
adc
shrl
arpl
inc
cmc
or
fcmovu
shll
dec
push
dec
jmp
in
adc
cmp
adc
mov
out
lret
mov
cmpsb
rcll
cmp
rclb
aam
mov
xor
lock
cmp
ds
popf
insl
jo
arpl
jo
jmp
sti
adc
jmp
mov
jle
das
push
push
aas
sti
adc
ret
and
and
outsl
int3
aam
rorl
jmp
jo
arpl
xlat
pop
hlt
pusha
imulb
loopne
dec
xor
xchg
push
xchg
sub
in
xchg
inc
pusha
cmp
mov
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
repz
cmp
jge
jle
jge
jle
push
or
pop
jno
inc
mov
mov
out
movsb
sbb
lds
pusha
and
jns
and
aas
subl
fwait
addl
cld
sbb
xor
inc
sub
jmp
inc
loop
cmp
cwtl
mov
mov
cmpl
mov
inc
adc
sub
inc
inc
clc
popa
push
and
xchg
push
pop
loope
daa
xor
std
iret
int
adc
xchg
sub
add
imul
bound
cmp
adc
and
and
mov
push
adc
divb
ds
int
mov
mov
call
add
adc
std
lock
push
jo
xchg
add
xor
fadds
fdivrl
pop
cld
mov
sub
ss
cmpsb
pop
stc
xchg
imul
loope
or
dec
test
cmc
lahf
add
test
add
mov
leave
inc
sub
and
cmpsb
and
mov
shl
or
add
jbe
les
inc
in
aas
enter
test
push
insl
adc
mov
je
js
ror
jmp
call
stos
bound
dec
stos
outsb
shlb
insb
test
sub
and
pusha
and
mov
mov
cmc
jbe
stc
dec
adc
jnp
adc
mov
cmp
and
cmp
jmp
jle
inc
sbb
je
out
popf
jge
popf
lahf
sub
clc
xchg
mov
mov
mov
push
test
hlt
out
sub
cmp
inc
inc
icebp
adc
sarb
int
imul
mov
xchg
push
std
xchg
xchg
dec
pop
popf
ja
hlt
jmp
inc
jnp
loop
mov
stos
fidivrs
sbb
sbbl
sarl
xor
adc
inc
scas
int3
sbb
hlt
pop
in
gs
adc
cmp
mov
loopne
sbb
cli
adc
adc
enter
xchg
push
inc
mov
fldenv
or
mov
ss
sbb
cwtl
pop
aaa
jmp
shl
sub
test
cli
stc
and
xor
bound
pop
cmp
fldl
daa
or
aaa
xor
jmp
stc
cmpsl
jp
cmp
and
ss
inc
inc
and
xor
repnz
or
movsb
push
pop
mov
dec
mov
clc
and
imul
adc
cmc
sbb
push
and
pop
je
ss
dec
leave
xchg
push
mov
xchg
jb
lock
aaa
mov
xchg
nop
test
or
jle
cmc
adc
loopne
adcb
mov
dec
sbb
push
mov
cli
js
adc
xor
data16
sbb
cmp
and
mov
sub
dec
mov
test
sbb
daa
push
sub
push
add
cld
xchg
dec
jo
mov
or
ret
imul
dec
popa
sbb
lods
push
bound
mov
sub
xor
jp
mov
lds
dec
jmp
mov
xlat
lea
pop
push
mov
and
in
popf
ja
add
mov
sbb
xor
jle
jmp
dec
add
cmc
into
and
add
or
add
or
ss
cmpsb
repnz
sbb
hlt
push
shll
inc
rorb
fs
fcompl
pop
or
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
mov
jle
outsl
jge
jle
mov
shll
mov
add
add
stos
pop
fsubrp
xor
mov
inc
dec
xor
mov
icebp
mov
popl
push
mov
add
cmp
xchg
cmc
cmp
mov
inc
push
lret
test
call
and
lea
xor
imul
jecxz
and
cmp
cmp
push
scas
add
add
out
cmp
cmpsb
lea
pop
lcall
add
ss
mov
sbb
mov
cmp
mov
bound
enter
or
js
mov
mov
or
mov
cld
arpl
xchg
jp
testb
mov
add
cs
stc
lock
xchg
adc
arpl
addr16
inc
xor
je
data16
xor
pushf
push
lods
clc
mov
mov
imul
sub
mov
jge
in
fmulp
xor
in
mov
cwtl
sub
out
enter
jnp
std
jg
add
inc
aas
lcall
int3
inc
pop
ljmp
add
ret
and
or
xchg
or
mov
aam
insb
cmp
ss
daa
clc
push
nop
push
nop
mov
hlt
add
les
jmp
adc
xor
rorb
jmp
xchg
add
out
popf
es
sar
fcmovbe
stc
mov
bound
in
sub
sbb
iret
cmpsb
mov
cwtl
pop
pop
push
repz
xchg
js
test
pusha
mov
pusha
mov
mov
cmp
xchg
leave
and
mov
ds
sahf
xchg
es
lcall
xlat
push
push
fldl
mov
sti
push
movsl
data16
push
mov
push
push
inc
xor
clc
cmc
inc
cmp
sub
push
xchg
into
cmp
lods
push
dec
out
repz
mov
lret
jne
jp
xchg
pop
sbb
mov
cltd
jno
pop
rol
imul
fwait
scas
ss
push
lods
scas
pushl
mov
ret
cmp
pop
jne
push
lods
fildll
ret
and
and
aad
leave
mov
dec
mov
and
aam
mov
cs
push
repnz
test
int
mov
xchg
ficoms
cld
jg,pt
ljmp
mov
sub
xchg
mov
dec
lods
lods
inc
cli
jle
xchg
inc
lds
cwtl
icebp
in
push
pop
enter
push
xchg
stos
push
mov
or
faddl
iret
add
add
sub
pop
sbbl
adc
dec
and
pop
sub
aas
dec
push
mov
xchg
mov
popf
insb
mov
pop
or
insl
das
int
arpl
mov
ss
inc
mov
iret
add
cld
and
test
add
adc
xorb
enter
pop
add
mov
mov
out
fadd
in
dec
stc
sti
outsl
xor
cmc
jno
push
cwtl
es
sahf
inc
fadd
and
and
adc
aaa
push
xchg
test
ret
mov
sub
call
pop
icebp
dec
arpl
mov
sub
xor
xor
pushf
rcll
jno
inc
fwait
xor
in
or
std
and
or
push
push
test
ss
inc
push
jmp
xchg
sahf
orb
jo
push
pop
add
enter
pop
popf
cmp
aam
dec
xchg
jns
lds
xchg
andb
sahf
movsl
xor
or
sbb
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
inc
xchg
stos
adc
jle
outsl
jge
jle
aad
push
in
std
outsb
iret
sbb
jl
xlat
test
adc
or
lcall
ret
mov
scas
sbb
mov
add
lret
xlat
out
mov
cmp
or
jecxz
cltd
mov
jmp
test
sbb
push
into
xchg
insl
or
sbb
jnp
mov
xchg
dec
jno
addl
mov
lcall
or
ficoml
mov
scas
xor
sahf
sbb
push
fisttpl
bound
pop
sbb
jge
loop
les
pop
mov
int
xchg
cmc
fnsave
push
xor
pop
mov
mov
or
mov
mov
jp
loopne
and
outsl
sbb
jp
ss
adc
xor
test
shll
cmpsb
jnp
mov
ds
jnp
shll
push
jns
jge
leave
push
push
push
sbb
xorb
fldt
lar
lcall
nop
inc
gs
push
in
add
inc
and
xor
int
mov
in
fcoml
stos
std
sbb
cmp
pushf
aad
lock
test
xor
or
lods
rol
mov
es
fwait
pop
sbb
sub
mov
pusha
jmp
sbb
jmp
pop
push
adc
dec
xlat
lret
div
cmp
aad
rcrl
insb
cmp
mov
popa
push
jne
jle
mov
push
and
test
sub
add
divb
fs
lret
jmp
inc
iret
cwtl
inc
jle
mov
mov
out
ret
push
lods
inc
daa
jno
icebp
xchg
jo
cmc
aad
ret
push
sbb
aas
idivb
leave
inc
rorl
out
cwtl
mov
or
push
scas
xchg
jl
icebp
test
dec
cld
out
mov
and
lcall
mov
cli
test
roll
call
cmp
mov
mov
xlat
and
or
nop
pop
js
push
imul
in
in
jb
repz
andb
js
cli
fldcw
jl
outsl
dec
sub
insl
inc
add
shrb
imul
and
mov
jae
mov
mov
push
loop
leave
dec
mov
int
call
mov
cmpsb
xor
adc
jns
add
enter
sub
in
enter
inc
jecxz
je
cmpsl
out
add
push
test
inc
push
or
sub
pop
xchg
aad
inc
xor
mov
add
sarl
lret
xor
inc
movsb
mov
push
jg
or
pop
jnp
daa
jle
or
mov
xchg
notl
mov
xchg
ret
push
mov
aaa
xor
push
cmp
andb
xchg
jns
pop
ficoms
icebp
cmp
mov
lcall
or
cmp
mov
hlt
and
xor
xor
jmp
xchg
xchg
xor
and
and
aaa
inc
std
jne
sub
cltd
sbb
mov
cmp
fcmovu
sahf
lahf
add
daa
mov
sbb
sbb
rcrl
pop
sbb
shll
repnz
push
scas
mov
not
arpl
outsl
std
mov
push
xor
rcr
test
out
iret
cld
and
jmp
inc
mov
cmp
jo
aas
sbb
cltd
pop
shrb
lret
les
test
incl
inc
clc
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
sbb
add
outsl
jge
jle
stos
les
adc
inc
adc
aam
jne
clc
fildll
std
fldt
adc
outsb
xchg
scas
push
lret
cmp
gs
shlb
jne
lahf
lods
clc
ret
insb
adc
cmpsw
repnz
ret
mov
jecxz
xor
pop
cmp
inc
xchg
into
adc
mov
lock
loopne
dec
mov
pop
xchg
mov
sbb
inc
imul
pop
jmp
lock
sbb
add
mov
movsl
sbb
mov
sbb
inc
mov
inc
xchg
mov
scas
imul
fwait
add
sub
mov
pop
or
stos
ret
cmp
push
loope
jge
dec
push
and
or
mov
lcall
test
pop
mov
in
scas
test
cld
dec
pop
and
push
jb
mov
pop
call
lods
pop
dec
pop
or
add
in
outsb
adc
lods
and
in
adc
pusha
xchg
jae
mov
pop
pushf
cmp
pop
mov
mov
jl
jecxz
fdivrl
fists
mov
and
add
mov
pop
push
adc
inc
je
push
shll
js
pusha
jno
insb
mov
addr16
jne
push
loopne
sub
or
call
call
jl
mov
ret
pop
sbb
sbb
pop
stos
ret
add
cmp
outsl
into
jno
xchg
movsb
add
lock
mov
xchg
jmp
lods
inc
push
xlat
in
mov
xor
xor
hlt
pop
sbb
js
scas
mov
lcall
sub
mov
arpl
repz
lods
ss
cmp
push
fmull
mov
mov
sarb
cmp
push
sub
mov
in
cmp
lds
icebp
scas
pop
inc
jb
cld
in
dec
shrb
out
mov
cwtl
hlt
cmpsl
clc
adc
dec
mov
enter
push
adc
add
push
and
cmp
rcrl
gs
inc
pop
jno
mov
fsubs
mov
mov
adc
inc
inc
mov
mov
push
push
leave
je
add
aaa
add
pop
movsl
repnz
pop
mov
cmc
ja
jo
in
cmp
sub
adc
pop
or
dec
mov
push
xchg
outsb
test
xchg
mov
movsl
xor
aam
outsw
lods
sub
cmp
xor
mov
fimuls
sbb
cmpsl
cmp
imul
repnz
pop
pop
lret
adc
stc
mov
outsb
mov
mov
mov
sbb
and
push
enter
dec
sbb
cmp
sub
adc
pop
xchg
outsb
addb
xor
pushf
xlat
cmp
test
dec
das
xor
xchg
xlat
les
sub
xchg
push
inc
xor
inc
sub
dec
bswap
mov
les
ja
into
fwait
sub
jns
sbb
and
mov
inc
insl
clc
les
ffreep
test
jns
xor
cmp
and
orl
stos
dec
xchg
pushf
jl
xor
rcrb
xor
and
stos
cli
stc
lods
ljmp
js
xor
xor
xchg
mov
mov
and
and
mov
mov
jmp
inc
das
xchg
loop
pushf
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
and
cld
cmp
jl
cmc
aam
shrl
or
test
cli
fsts
lret
push
imul
shll
cmpsb
movsb
aas
test
jl
push
xchg
repnz
adc
fcoml
pusha
cmp
sub
adc
mov
les
jo
mov
repnz
scas
sbb
in
pop
push
or
jl,pn
sbb
pop
pop
sti
mov
loope
push
in
mov
inc
adc
xchg
outsl
and
stc
cli
rclb
mov
stos
sbb
inc
pusha
pusha
mov
subl
cmc
jb
adc
fists
cmc
cmc
nop
mov
fmull
insb
jbe
mov
mov
or
dec
jb
push
mov
js
lods
add
push
test
mov
nop
xchg
loop
mov
inc
bound
push
lods
push
fidivl
cld
cmp
pusha
xchg
xor
sahf
ficomps
and
mov
adc
mov
fdivrs
xchg
xchg
imul
lret
jnp
pop
insl
pop
andb
xchg
xlat
xor
and
mov
jbe
add
mov
int
loope
cmp
in
adc
cmp
ds
pop
mov
imul
into
jp
jb
mov
pop
clc
arpl
insl
jl
jl
pop
inc
adc
and
cwtl
jo
roll
rcr
pop
xlat
dec
das
adc
cmpsl
cmp
sub
sub
adc
wrmsr
sti
pushf
fcmovnbe
mov
sub
sbb
mov
rcr
pop
mov
xchg
lret
ljmp
lret
insl
cmc
and
loopne
int
xchg
mov
pop
stos
imul
xchg
jmp
pop
imul
inc
mov
pop
ljmp
and
repnz
or
inc
jne
in
jg
and
cmp
repz
inc
push
mov
loope
or
daa
cs
adc
or
test
lcall
adc
outsb
fcoml
pop
movsl
clc
cmc
mov
inc
lret
js
xchg
xchg
adc
es
je
xchg
hlt
in
lods
cmp
xchg
push
sahf
push
cmp
xchg
or
std
push
pop
jge
out
push
or
leave
push
xor
xor
inc
in
clc
xchg
mov
std
add
imul
push
into
mov
jg
js
xchg
push
cmpsb
test
cmpsb
and
sbb
mov
sub
mov
and
test
cs
sbb
jp
stos
cs
std
sub
testb
in
fisubrl
popf
in
gs
lods
cmp
movsl
lret
pusha
inc
jl
push
jns
sbb
mov
adc
movsb
sahf
push
and
cmp
add
mov
push
ret
aam
mov
sub
adc
jl
dec
out
sub
shrl
xchg
call
adc
aaa
cmp
lahf
cli
clc
pushf
xchg
add
enter
call
inc
fmulp
clc
pop
mov
mov
inc
popa
dec
push
cmp
mov
mov
and
jbe
sub
jno
aam
and
outsl
test
inc
inc
out
cli
ror
push
mov
xchg
xchg
int3
stos
dec
push
or
jmp
test
xor
pop
xor
push
or
fsubrl
mov
adc
cmp
das
data16
xor
pop
xchg
stos
ljmp
xor
cwtl
mov
bound
mov
hlt
xlat
fs
dec
mov
ret
adc
in
or
add
out
inc
push
dec
jle
jno
jmp
aaa
imul
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
and
jle
outsl
jge
jle
ficompl
insb
rorb
lret
test
out
mov
adc
adc
test
jle
mov
pop
iret
mov
and
insb
mov
sbb
jmp
push
jne
or
jae
rorb
add
dec
and
ds
xor
inc
daa
mov
cltd
das
xor
jo
cs
adc
inc
loop
std
je
dec
mov
push
sub
push
dec
adc
xchg
cmp
js
mulb
out
push
inc
hlt
push
ret
pminub
lcall
push
adc
dec
xchg
pop
into
rolb
pop
mov
xor
movl
xor
iret
push
cld
enter
out
xchg
inc
dec
insl
rclb
sub
and
jge
add
arpl
out
in
lea
test
cmpsl
xor
test
lock
rclb
fcmovb
lds
push
inc
lahf
sti
xchg
cltd
loop
sti
cmpsl
add
dec
jl
xchg
adc
lcall
adc
fnstenv
rorb
inc
mov
xor
ljmp
fsts
mov
and
xorl
out
fstl
movsb
rclb
and
mov
dec
rorl
jne
ret
mov
lods
bound
cmp
ss
or
int3
repnz
sub
push
mov
mull
add
pop
cmp
cs
jo,pt
xchg
lods
fcmovnbe
je
mov
lock
int3
cmpsb
test
test
addr16
shlb
mov
lds
xchg
fdivs
push
dec
jp
outsb
out
pop
test
pusha
into
jne
add
xor
test
fcmovnu
bnd
mov
in
push
adc
cmpsb
js
movsl
out
ja
xorl
jg
bound
jge
push
cmc
jns
mov
stos
mov
jmp
jb
mov
xor
test
add
dec
ljmp
sub
fdivl
mov
dec
rcrb
jle
sahf
dec
or
add
and
outsl
mov
lods
mov
stos
and
aaa
pop
add
loopne
xor
sahf
xor
xchg
andl
sbb
or
pop
stc
sub
stc
outsl
lcall
jp
movsb
icebp
dec
mov
xorb
outsl
fcmovnbe
push
mov
xor
adc
dec
inc
xchg
sub
push
movsl
rorl
cmp
mov
mov
lds
adc
sbbl
add
lea
jle
dec
or
insb
or
inc
je
dec
setl
and
push
aam
ret
inc
je
aaa
push
daa
inc
mov
loop
sub
loope
movsl
and
push
sahf
jmp
push
scas
xor
dec
sti
stc
adc
imul
out
jmp
fcoml
cwtl
mov
lods
rclb
mov
fmull
inc
rcrb
xor
out
sub
fiadds
std
loop
cmc
fidivs
sub
adc
jmp
xor
or
insb
sub
movsl
jns
dec
lret
sti
push
cmpsl
lcall
hlt
enter
movb
push
sbb
or
jg
sub
mov
sbb
xor
adc
icebp
cmp
out
push
mov
lock
jnp
shr
std
in
pusha
xchg
push
shll
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
mov
jle
jge
jle
ljmp
out
stc
inc
inc
or
movl
pop
xorl
cmc
adc
cmpsl
mov
jecxz
sahf
xchg
add
ret
aaa
outsl
fprem
scas
cwtl
dec
push
jae
cmp
pushf
aad
rolb
sbb
jb
xchg
jle
nop
sub
push
sbb
jmp
stc
fdivrl
mov
jne
imul
and
ds
mov
jmp
fisubs
and
jle
inc
sbb
lea
cmpsl
ficoms
sub
jns
pop
mov
or
cmp
cmpsl
jo
pop
adc
push
sub
mov
jmp
xchg
xlat
inc
xchg
fwait
popf
rcll
rcl
lods
rcll
dec
push
xor
fnstsw
nop
xchg
pop
mov
insb
cmpsl
push
push
add
dec
pop
mov
ffreep
adc
popa
dec
dec
mov
sbb
jge
sub
inc
in
call
xor
loope
test
xlat
jge
sbb
js
les
lret
mov
jns
pop
ret
adc
adc
imul
cwtl
cmpl
mov
faddl
mov
lods
test
cmpl
lock
mov
rol
mov
nop
insl
int
push
mov
inc
lock
xor
sbb
jmp
mov
jbe
in
mov
testl
and
and
push
xchg
cmp
mov
test
xlat
data16
sbb
pop
cmc
mov
inc
push
imul
repnz
rcll
add
shll
aas
icebp
cli
test
mov
jns
push
push
lea
mov
mov
mov
or
or
mov
mov
mov
sti
add
xchg
xchg
scas
mov
cwtl
ja
mov
int3
pop
xor
push
inc
mov
lret
sub
lea
mov
push
adc
lds
mov
push
add
insb
addl
sbb
add
and
lods
xlat
arpl
imul
adc
inc
pop
pop
xchg
loopne
add
scas
ljmp
es
notl
daa
das
test
add
arpl
xchg
jge
repz
in
cwtl
pop
adc
pop
mov
outsb
and
xchg
add
cmpsl
repz
cmp
pop
sbb
js
mov
fdivrp
jno
cwtl
cmp
dec
jne
dec
xchg
mov
pop
cmc
adc
mov
xchg
addps
lods
mov
in
out
hlt
xchg
lods
fs
pop
push
cltd
sub
lock
add
out
cs
int
ds
inc
mov
sbb
pop
mov
mov
dec
lcall
int
jne
out
cmpb
push
xor
fyl2x
lahf
mov
cmpsl
or
jp
stos
xor
aam
mov
push
mov
push
sbb
mov
fs
das
or
lret
xchg
sub
mov
aas
inc
hlt
lods
jo
das
jp
pop
dec
and
jbe
inc
add
hlt
mov
fbstp
testb
shr
adc
cmpsl
adc
sti
into
mov
mov
cmp
xchg
push
int
int3
hlt
paddsb
sub
in
sbb
int
pop
stos
lcall
fidivrs
call
fists
es
cmpsl
jbe
pop
pushf
adc
or
ret
mov
mov
push
sarb
cwtl
cs
sub
insb
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
jno
mov
xchg
jle
outsl
jge
jle
pushf
mov
jno
or
sbb
out
ret
fildll
jle
inc
ja
push
and
andl
pop
jmp
popa
shlb
adc
sub
jp
jns
mov
or
inc
jecxz
inc
inc
mov
fs
add
sub
cmp
xorl
inc
addb
ret
mov
jmp
imul
mov
xchg
push
loopne
test
adc
aad
scas
out
es
pop
add
xchg
stos
or
lcall
push
mov
adcl
rorb
cmpsl
fs
xlat
stc
movsb
mov
in
add
add
fimull
notb
jecxz
cmp
ss
jmp
in
repz
sbb
sub
dec
aam
mov
decb
jge
outsb
lods
add
mov
sub
test
push
test
pop
push
loope
fdivrs
and
out
outsb
movsb
and
jbe
mov
fdivrs
cmpsl
daa
lds
dec
xchg
aad
cmpxchg
sbb
mov
mul
fcoml
lock
cmp
mov
cmp
enter
inc
jbe
jl
fistps
mov
std
popf
and
mov
xor
push
loopne
jno
mov
push
dec
sbb
mov
or
das
sub
sar
push
pop
dec
sbb
add
mov
mov
daa
iret
push
int3
mov
xor
cmp
add
xor
adc
push
bound
inc
or
out
xchg
push
test
mov
xchg
jecxz
push
xor
leave
push
mov
ret
adc
jg
and
sti
loope
and
jle
dec
pop
mov
lods
mov
repz
push
push
add
pusha
stos
xchg
addr16
loopne
das
int
and
inc
movsl
and
push
sub
scas
xor
lods
mov
test
mov
cmp
dec
or
mov
push
jg
and
rorb
popa
and
cli
inc
nop
sub
lods
push
sahf
add
aas
pop
mov
jnp
fidivrl
test
in
cmp
and
push
daa
mov
fnstenv
movsl
cli
inc
fimull
lock
test
insl
cli
sbb
aam
outsb
inc
icebp
xchg
xchg
inc
mov
shlb
ja
or
bound
test
jbe
or
and
into
sahf
stos
lret
imul
insl
mov
xlat
popa
pop
scas
dec
out
jnp
add
das
mov
xchg
mov
leave
subl
das
mov
hlt
das
lret
sub
pop
inc
lret
daa
aaa
cmpsb
inc
shlb
loopne
or
mov
cwtl
sbb
xchg
cmp
dec
cmp
sbb
xchg
jmp
mov
dec
or
out
xchg
leave
dec
fstl
nop
dec
dec
popa
movsb
pop
ficomps
sbb
add
dec
xchg
adc
mov
test
push
clc
and
addl
mov
pop
or
aas
data16
aad
push
loopne
mov
adc
or
xchg
adc
sbb
and
leave
and
inc
sub
arpl
sbb
mov
sbb
fisttps
lods
int3
mov
jmp
outsl
ret
push
aad
mov
out
add
repz
adc
rcr
sbb
out
loope
in
sarl
flds
jge
xchg
jbe
stos
les
pop
mov
xlat
xor
iret
test
aam
sub
xor
repnz
adc
fcmovnbe
pop
outsb
arpl
mov
jp
stos
ljmp
jge
cmp
test
int
int3
cmpsl
out
leave
xchg
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
sbbl
jle
dec
imul
inc
sub
lods
test
mov
insl
repz
sub
ret
fadd
xchg
cwtl
cmp
cmpsb
call
shlb
rcrl
or
and
test
push
pop
cmp
popa
xor
xor
loope
aaa
js
movsb
jle
xchg
or
lods
repz
out
adc
fnstsw
insl
sti
cmp
sub
sub
cmp
das
ljmp
lahf
std
out
ds
cli
mov
cmp
ret
flds
scas
push
ret
imul
in
add
mov
std
dec
insb
mov
inc
rcll
mov
test
jp
and
das
call
icebp
pop
mov
pop
lock
jbe
pop
enter
lock
or
les
test
sbb
addr16
push
jno
xchg
das
es
testl
aaa
arpl
shlb
jno
rcrl
mov
cmp
test
insb
cs
and
cmp
push
and
nop
jb
cmp
fs
sarb
out
adc
lret
sbb
popa
fisttpll
inc
ja
push
cmp
mov
popf
xor
push
fs
dec
push
test
addr16
testb
jne
dec
pop
clc
inc
mov
pop
fisubl
sahf
push
sbb
outsb
stc
loope
xchg
insb
cmpsb
mov
movb
imul
jl
fldl
adc
loop
aad
mov
mov
clc
imull
cltd
xor
cmp
js
pop
inc
mov
lock
pop
add
push
and
jecxz
xchg
mov
ss
sub
sub
sbb
movsl
xchg
test
mov
pop
fdivs
int3
lods
pop
adc
mov
popf
mov
and
ljmp
out
jp
popf
jp
pop
cmp
sbb
push
xor
and
jge
and
fcomps
test
mov
cld
mov
adc
cmpsb
mov
mov
sti
sub
cmp
enter
cld
pop
add
frstor
cld
pushf
clc
cmp
mov
aad
jp
inc
test
repnz
movsl
lret
and
shlb
scas
sub
mov
pop
das
ljmp
iret
outsb
jne
loop
lods
sub
adc
push
loope
orb
std
lahf
mov
ret
cmp
push
lods
aad
jbe
jae
xchg
nop
aad
mov
mov
xchg
mov
out
dec
stos
mov
push
or
data16
leave
adc
mov
pusha
imul
in
push
jns
into
out
mov
mov
mov
jmp
call
fmuls
mov
insb
inc
les
test
lret
out
jmp
filds
jmp
and
push
or
mov
push
call
lods
add
sbb
mov
insb
insb
gs
mov
sub
xchg
adc
out
pushf
mov
repz
and
sub
cmp
push
push
jl
push
jp,pt
mov
dec
sbb
cmp
fdivl
repz
jl
mov
movsb
push
repz
das
cmp
adc
xor
popa
xchg
mov
sub
iret
cs
xchg
pop
jae
adc
jmp
mov
mov
add
int
pop
push
pop
fs
testl
ss
clc
testb
pop
jmp
xchg
cmp
roll
test
inc
sub
mov
movl
gs
int
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
sub
jle
jge
jle
cmp
cmp
cmp
mov
cmpsl
lret
mov
aaa
mov
iret
adc
lea
std
dec
lock
std
xchg
fwait
mov
popf
jge
push
cmp
pop
decb
scas
xor
inc
out
mov
ficomps
sarb
xchg
movsb
cltd
pop
ljmp
out
fimull
mov
mov
adc
in
pop
mov
fwait
cmp
pop
cmc
and
scas
cs
aad
popf
cmp
adc
enter
push
xchg
cli
loop
xor
jmp
pop
inc
xchg
jle
test
inc
inc
ret
arpl
pop
rcrl
cmp
or
inc
xorl
imul
movsl
jg
inc
xor
ror
pusha
cmp
pop
pop
pushw
jns
mov
stos
inc
std
cld
nop
arpl
into
cmp
mov
bound
and
dec
lret
out
dec
out
sub
add
mov
push
pop
jle
sbb
testb
pop
cmp
stc
or
mov
mov
jo
or
mov
sub
dec
pop
idiv
nop
jno
or
leave
outsb
out
cmp
aas
subl
inc
and
pop
push
fnsave
xor
lods
jnp
lea
adc
adc
sbb
popa
sbb
fidivrs
sti
and
inc
jg
movsl
rolb
fadd
nop
mov
stos
jns
mull
jp
ffreep
fidivs
push
push
std
mov
xor
ds
cmp
gs
mov
ret
cmpb
cmp
cld
sub
jae
xchg
sub
jns
sub
idivb
inc
cmp
xchg
sbb
inc
dec
pop
loop
loope
out
lds
mov
bound
pop
rclb
mov
movsl
test
mov
enter
les
inc
test
mov
shl
sub
loop
pop
mov
setnp
mov
in
add
cmp
loopne
add
or
les
mov
lods
leave
iret
outsl
inc
pop
mov
adc
jp
inc
in
lea
nop
push
sbb
push
loopne
loope
push
push
call
rcrb
shl
arpl
shr
pop
idivl
nop
testb
or
stos
dec
cwtl
int
mov
lret
add
fidivrl
lret
push
dec
xchg
fimuls
repz
or
dec
lods
adc
dec
mov
and
out
cmp
xchg
bnd
inc
add
xchg
push
repz
mov
notb
stos
insl
or
cmc
xlat
sahf
pop
xchg
enter
in
sbb
xorb
nop
inc
popf
or
in
add
mov
adc
shr
aam
jae
shr
xor
test
sub
push
lods
pushf
insl
xchg
xchg
cltd
iret
daa
adc
in
cmc
sbbl
xor
in
jbe
sbb
pop
pop
aad
fcoml
mov
push
in
in
mov
pop
cmpsb
xor
frstor
jno
xchg
adc
enter
stos
mov
mov
xor
xlat
mov
insl
pavgb
insl
jecxz
leave
out
stos
rcrb
cmpsl
out
pop
js
pop
pop
xor
jge
and
das
and
and
inc
xchg
xchg
test
cltd
jb
shll
xchg
in
push
cmpsl
dec
ret
mov
pop
mull
add
cmp
adcl
jae
stos
outsl
jecxz,pt
inc
jl
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
lcall
jge
jle
inc
dec
xchg
in
xorl
js
pop
out
loop
fwait
lods
pop
decb
xlat
xor
pop
jecxz
add
pop
mov
xor
jmp
lds
inc
mov
ret
popf
ja
mov
sbb
pop
jno
adc
pop
arpl
push
xor
cmp
orl
je
mov
pop
inc
and
jmp
adc
lds
insb
push
out
adc
push
mov
mov
ja
xor
vmovntps
fldcw
stc
iret
movsl
insb
aad
push
aam
mov
sbb
ljmp
hlt
rcl
out
add
lds
push
das
sub
into
dec
cld
nop
add
push
sub
int
xchg
lock
mov
sar
pop
clc
or
dec
cmp
xchg
aam
add
or
inc
pushf
out
push
sbb
dec
sbb
scas
into
scas
sbb
push
sbb
xchg
pop
mov
repz
mov
stos
in
mov
pop
mov
fdivr
ret
cmpsb
shlb
punpcklwd
push
sti
push
inc
mov
add
push
cli
inc
cmp
nop
mov
aam
add
in
sbb
cld
sbb
out
sbb
sti
jp
js
pop
aam
add
pop
mov
fmul
mov
inc
inc
hlt
add
adc
dec
add
inc
pop
pop
mov
push
arpl
xchg
lahf
mov
and
sbb
pop
adc
jp
jge
ja
or
aas
inc
or
xchg
add
xor
sub
xchg
mov
sbb
or
add
cltd
cmp
cld
cmp
xchg
enter
push
pop
sub
pop
adc
out
xor
jbe
popf
mov
leave
repz
leave
mov
jae
mov
mov
sbb
out
cmc
ffreep
addl
rclb
jl
mov
jae
jbe
leave
or
fdivs
into
popa
mov
xchg
lods
xor
mov
jmp
in
out
mov
rcrb
xchg
sbb
dec
sub
push
pop
and
leave
mov
nop
sbb
rcrb
inc
cmp
rorb
jns
aaa
lahf
nop
in
loopne
into
loop
test
ret
dec
dec
sub
in
jbe
aas
in
add
nop
data16
lcall
aas
das
mov
je
fisttpl
pop
lahf
ret
dec
sbb
cmpsb
and
sbb
mov
jg
out
fisttps
and
xor
mov
sarl
push
jnp
pop
andb
mov
insl
loope
mov
push
lock
das
xchg
add
add
and
sub
xor
fsubs
dec
subps
jno
scas
js
push
cwtl
ljmp
mov
inc
and
inc
xchg
enter
push
inc
mov
je
mov
ss
or
mov
cs
adc
add
bound
popf
sbb
fildl
mov
sbb
cmp
out
mov
mov
aad
mul
aam
jecxz
test
addr16
xor
xor
dec
adc
fsubs
rcrl
cmp
dec
sti
dec
xor
xor
jo
adc
adc
gs
push
jnp
adc
adc
outsb
cmpsl
mov
dec
out
std
adc
outsl
loopne
xor
mov
dec
sub
push
pusha
daa
or
repnz
push
loope
mov
cli
movsl
adcl
in
jns
inc
ds
xchg
cwtl
aad
outsb
pop
push
cmpsb
scas
and
jp
pushl
lea
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
fld
and
outsl
jge
jle
cmc
fdivs
cld
jo
lock
in
insb
add
mov
les
ljmp
mov
push
cmp
jecxz
fimull
push
push
push
and
mov
fbstp
ret
in
sbbb
lods
pop
xlat
mov
stos
mov
aas
add
mov
fbstp
loope
sub
fcomip
adc
test
inc
int3
mov
xchg
mov
aaa
ja
sub
cld
gs
mov
inc
in
jae
mov
loop
roll
xor
popa
pop
mov
test
cld
iret
outsb
mov
add
push
fstps
inc
aad
mov
inc
fcomp
stos
ljmp
pushf
sub
xor
xchg
sbb
aaa
mov
rep
outsl
sub
or
jge
pushf
adc
enter
cld
iret
inc
in
add
xor
cwtl
mov
sub
js
cmp
cmp
lods
mov
aas
sbb
rcll
adc
mov
pop
aam
jg
insl
inc
dec
cltd
cwtl
sub
out
mov
cmpsl
lods
mov
movsl
push
xor
cmp
sub
jbe
xchg
stos
mov
fimull
add
adc
xchg
pop
sbb
icebp
push
insb
push
pop
mov
icebp
inc
les
mov
pop
xor
sub
sbb
fistps
xchg
mov
mov
andl
sub
jle
in
sub
jl
cmp
cmp
dec
push
push
aam
dec
std
imul
repz
jge
adc
bound
adc
add
jnp
insb
push
std
mov
add
jnp
mov
lods
sarl
mov
test
sub
and
mov
add
mov
or
adcb
repnz
adc
pop
jno
das
xor
pushf
xchg
es
add
adc
jp
pop
fbld
neg
das
mov
fmuls
mull
mov
lea
daa
sbb
dec
mov
or
call
inc
sarb
or
adc
gs
jae
fsubr
inc
cmpsl
aam
or
pop
clc
mov
mov
fimull
cmp
cmp
mov
ja
jae
dec
push
out
imul
or
mov
sub
inc
ljmp
adc
jp
dec
dec
andb
mov
pop
add
mov
testb
xor
fcmovbe
imull
push
xor
xchg
arpl
mov
outsl
daa
arpl
popf
dec
jnp
mov
jl
push
movsb
xchg
shlw
shll
xchg
rcrb
das
add
incb
inc
inc
hlt
loop
jge
movsl
mov
dec
inc
and
mov
add
add
pop
mov
mov
in
ja
sub
idiv
mov
cmpsb
add
sahf
add
mov
push
jmp
fsubrs
into
lcall
icebp
jg
lds
cmp
add
xor
ret
pop
pop
add
xchg
cmpb
in
hlt
mov
cmp
fdivl
jp
push
icebp
adc
mov
mov
lahf
cmp
in
jne
mov
jbe
cmp
testl
or
add
cwtl
and
pop
pop
leave
cli
mov
xchg
popl
das
es
jno
repz
dec
arpl
out
mov
xor
sbb
jnp
lods
cwtl
arpl
pop
clc
xchg
dec
jo
pop
dec
into
ret
scas
clc
pop
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
add
lods
addr16
push
cmc
test
rcrb
inc
insb
dec
adc
push
aad
pop
movsl
mov
xor
jmp
cwtl
in
test
push
add
or
jg
popa
dec
lods
cld
daa
ret
pop
testb
sub
ljmp
popf
mov
shl
fimuls
add
pop
push
call
lods
dec
shrb
mov
cmp
inc
lods
in
setns
xchg
pop
pushf
pop
or
int
loope
imul
enter
xchg
pop
sbb
mov
pop
loopne
arpl
punpcklwd
push
push
dec
ja
ficomps
xchg
inc
das
fdivrl
cmp
mov
fldt
inc
xor
repz
mov
jb
pop
imul
mov
out
inc
xor
enter
js
mov
sub
lcall
sub
les
mov
stc
dec
mov
ljmp
loopne
mov
sub
pusha
pop
cmp
hlt
stc
enter
add
or
insl
xorb
add
ss
add
cltd
xor
pop
insb
pushf
movsb
int
jbe
lods
test
test
call
sbbl
mov
push
iret
js
testl
sbb
mov
movsl
jo
cmp
ljmp
ja
jmp
in
sub
fwait
or
in
outsb
fs
in
cmc
lock
fs
mov
sahf
xor
add
outsl
mov
in
shrl
inc
adcb
fwait
jge
stc
cltd
push
fldt
xchg
pop
and
rorl
push
sahf
inc
or
mov
insl
addr16
int3
xchg
sub
or
shrb
rcl
xchg
shrl
mov
stos
out
daa
ds
mov
mov
jb
pop
popf
xlat
cltd
xor
js
scas
push
inc
pop
mov
mov
hlt
flds
jge
loope
mov
add
pop
jl
add
loope
xor
aam
addr16
mov
mov
mov
cwtl
mov
dec
scas
cmp
lods
das
subb
fidivl
xlat
int
in
testb
sub
mov
scas
pop
arpl
stos
or
shrb
jle
ljmp
lock
adc
or
bound
pop
aas
mov
mov
dec
xchg
push
push
ss
mov
fcom
sbb
and
andb
pusha
lcall
mov
sti
rcll
daa
gs
movb
das
nop
or
push
out
pop
xchg
and
dec
jle
pushf
lds
xchg
sbb
jl
daa
push
lcall
pop
xor
xor
jmp
pop
and
in
mov
or
int3
sbb
pusha
loop
repnz
xlat
loope
mov
add
xor
enter
stc
gs
inc
out
insl
jecxz
pop
mov
adc
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
loop
scas
mov
sub
xor
jle
push
iret
dec
jne
jb
xchg
decl
popf
dec
xchg
add
je
roll
cltd
not
pushf
es
pop
cli
cs
lds
sub
inc
inc
dec
les
shrl
sub
pop
lods
lret
mov
or
movsb
xchg
scas
xchg
inc
xchg
ss
cld
ss
sbb
das
or
jnp
mov
sub
jo
and
notl
and
pop
movsl
xchg
loopne
pop
mov
shll
add
or
sbb
add
or
aas
dec
call
adc
popa
cld
cli
ret
mov
out
push
add
inc
addr16
addr16
adc
ffree
jecxz
dec
pop
lds
xor
inc
inc
inc
push
popa
nop
bound
hlt
push
sbb
cmpl
popa
sti
ja
int3
fisubs
push
dec
lcall
lret
ret
adc
arpl
push
out
push
repz
xchg
mov
mov
fsubl
cli
ljmp
push
push
cmp
popf
insl
je
fildl
lods
mov
dec
xlat
mov
repz
xor
mov
xlat
adc
mov
js
dec
aaa
rcll
push
lret
hlt
mov
icebp
lret
outsb
in
inc
mov
stos
cmc
loopne
jg
mov
mov
ss
call
dec
aas
pushf
lret
aad
cs
push
rorb
add
dec
sub
push
mov
mov
sub
cmc
insl
gs
xchg
les
push
sbb
jecxz
jecxz
and
cmp
dec
aad
pop
jg
cmp
dec
inc
or
enter
adc
pop
xchg
movl
pop
mov
ffree
sub
xchg
sbb
push
mov
adc
cmp
xor
into
movsl
cmp
repnz
or
push
or
sbbb
sub
push
push
mov
fwait
jns
xchg
mov
sub
lret
pushf
adc
pusha
push
or
dec
lret
xchg
push
mov
sbb
add
les
mov
jle
mov
rcl
std
out
jmp
fiadds
xchg
xor
adc
cli
repnz
cwtl
mov
mov
adc
enter
jecxz
add
mov
icebp
pop
jae
push
inc
outsb
test
popf
dec
add
add
je
idivl
cmp
ret
ljmp
cwtl
sbb
aas
inc
adc
mov
xor
adc
lods
fsubrl
push
cmp
sub
movl
gs
xor
cwtl
aas
outsl
les
fistps
mov
cmpsl
scas
jmp
imul
jmp
jne
cmpl
jg
xor
mov
gs
jne
ds
sahf
loope
ficompl
jns
jb
lods
scas
out
fsub
push
lock
inc
iret
or
out
jg
pop
icebp
faddl
shr
push
sldt
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
jg
sbb
pusha
mov
js
xor
pop
lods
aas
xchg
hlt
push
ds
movsl
push
adcb
xchg
mov
sub
sbb
ret
jbe
stc
mov
lods
cmp
jp
jo
test
int
add
or
mov
scas
mov
push
loop
jecxz
es
lret
sbb
xor
or
fwait
jae
sarl
add
call
cli
inc
or
mov
cli
test
insb
dec
push
jns
dec
pop
xor
lds
out
arpl
pop
xchg
cmp
outsl
test
xchg
pusha
lea
push
fbstp
cmp
imul
push
lds
pusha
or
xchg
outsb
pushf
repz
and
sbb
outsl
stos
imul
jae
push
stos
rolb
jbe
lcall
jg
push
icebp
lods
into
mov
push
jp
fisubl
jnp
or
cld
dec
push
pop
sbb
mov
or
push
xchg
mov
xchg
dec
lcall
or
push
lret
push
addr16
ret
jp
cmp
xchg
adc
sti
repnz
and
dec
and
aam
push
adc
in
adc
or
cmp
loop
jo
out
das
pusha
adc
adc
mov
cmpsb
jmp
xorb
jbe
into
mov
push
xor
pop
pushf
insb
or
sbb
jae
or
ret
in
repz
jb
mov
add
lds
test
insl
mov
std
addb
jmp
repz
in
leave
sub
lret
mov
cmp
mov
xchg
insb
inc
imul
lret
in
jne
aaa
sub
cmpsb
mov
cmp
mov
out
addr16
jmp
pop
je
sbb
shl
movsb
add
inc
fwait
push
or
sub
inc
add
std
mov
xor
mov
bound
xchg
pop
daa
adc
out
daa
orb
or
popf
loopne
xorl
in
inc
mov
push
sub
mov
and
xor
cmp
pop
loop
xchg
popa
cltd
leave
xchg
test
call
cmc
sbb
fxch
in
mov
mov
xchg
aam
push
in
xor
subl
incl
mov
jg
jle
jns
imul
scas
das
ja
aaa
pop
mov
dec
adc
pop
jnp
sub
pop
leave
and
sbb
stos
mov
inc
and
mov
mov
test
test
mov
mov
in
add
mov
loop
fldcw
cmc
mov
fsubr
mov
mov
sbb
enter
mov
dec
das
xchg
cmpsb
imul
iret
push
inc
mov
lea
popf
add
testl
fdivrl
push
cltd
int3
mov
daa
adc
or
insb
cmpsl
jmp
adc
je
dec
loope
push
sbb
pop
out
cmp
in
add
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
cmp
jle
xor
jle
sahf
add
mov
aaa
jnp
aas
xor
xor
push
imul
mov
pop
mov
push
pop
xchg
cmp
xlat
xor
or
loopne
divb
sbb
aas
imul
cmp
mov
dec
sub
test
or
lcall
xchg
sbb
mov
xlat
and
sti
aam
shlb
and
push
fsubs
loop
adc
ret
xchg
sbb
in
in
xor
out
dec
cmp
sub
pop
hlt
test
rcll
jns
cmp
xchg
lret
push
lcall
pop
or
fsubs
sti
and
test
aam
test
daa
icebp
sub
test
sub
movsl
jg
pop
dec
add
popa
std
cmpb
inc
mov
adc
mov
std
mov
mov
aad
xor
jle
sbb
into
outsb
add
inc
jmp
xchg
std
shlb
xor
mov
ja
es
fs
sub
mov
dec
leave
push
jo
pop
fs
cmp
sbb
dec
mov
out
sub
cmp
outsl
adc
mov
test
xchg
je
mov
daa
fldenv
pop
dec
fstpt
adc
xchg
jmp
sbb
imul
sub
mov
xor
or
push
icebp
out
fiaddl
fldenv
cmp
jmp
jmp
jns
inc
jnp
jle
scas
loop
xchg
hlt
arpl
xchg
pop
cs
out
jno
lds
xor
clc
sbbl
ja
aaa
fisttps
mov
pop
enter
ja
in
mov
iret
or
cmpb
push
dec
push
addr16
jl
dec
mov
sub
fsubs
dec
push
push
cld
pusha
fldl
or
jns
insb
idivb
mov
and
jno
idivl
call
cmp
xor
je
xchg
mov
and
popa
push
lret
ljmp
cmp
sbb
inc
mov
mov
jmp
mov
in
test
add
ja
call
in
cmp
sahf
jo
dec
add
push
push
shll
xchg
test
je
cwtl
shrb
or
push
cmpb
pop
push
and
stos
or
lods
repnz
in
repz
cmp
cmp
test
lret
add
out
xor
jl
test
aam
sub
pop
add
lahf
insl
push
dec
inc
sbb
aaa
ds
nop
lahf
and
push
iret
mov
inc
pop
in
inc
mov
mov
xor
test
imul
sbb
inc
pop
icebp
push
xchg
pusha
sar
dec
test
mov
pop
ret
sbb
dec
cs
insl
and
call
push
push
lahf
fwait
cmp
pop
or
lret
int3
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
outsl
je
cld
das
jle,pt
xor
jle
repnz
imulb
outsb
jne
roll
test
aas
adc
push
or
lods
fsts
mov
stos
jnp
pop
dec
or
lcall
ret
cmc
push
cmpsl
pop
and
out
sub
xchg
fldcw
jle
fisubrs
js
test
pop
sbb
call
push
lcall
lock
in
and
pop
cltd
test
sbb
inc
in
ret
sub
inc
xchg
and
int
popf
js
dec
xchg
jecxz
mov
sub
inc
or
scas
mov
ja
pop
mov
inc
inc
mov
shrl
cltd
pop
mov
jp
sahf
xor
bnd
fists
and
push
addl
xor
sub
ret
xlat
fnstcw
daa
jecxz
pusha
aam
cmp
ljmp
into
xchg
xor
inc
rcrl
add
lock
push
mov
aaa
rorl
dec
dec
pop
mov
cmp
xchg
xchg
fwait
lock
cmp
adc
ud0
loope
adc
mov
imul
mov
mov
lods
test
jnp
cmove
fmul
fwait
and
dec
mov
mov
push
rclb
in
mov
push
rcl
test
cli
lea
fldl
and
test
scas
cmp
mov
loope
insb
mov
and
jne
xor
aaa
loope
ret
push
or
xchg
mov
mov
icebp
xor
es
out
dec
sti
cltd
or
into
leave
repz
push
cltd
pop
sbb
pop
pop
or
mov
mov
mov
sbb
bound
mov
pop
loop
aaa
icebp
xchg
sbb
sahf
mov
dec
sbb
in
jle
xlat
lret
sbb
sahf
test
mov
push
xor
sbb
xchg
xor
xchg
dec
xchg
fcmove
sbb
mov
ds
jmp
fidivs
xor
and
mov
jb
mov
jne
cli
mov
into
push
mov
inc
es
rdtsc
adc
jae
dec
cmpsl
pop
scas
jmp
in
push
jae
lahf
orl
cmp
outsb
scas
cmc
pop
sub
jl
xchg
in
inc
jge
add
cmpsl
adc
test
outsl
xor
xor
ljmp
mov
sub
dec
jl
push
xlat
lods
xor
jo
lcall
loop
mov
inc
nop
inc
andb
not
repnz
jge
aam
xchg
sbb
push
adc
or
xchg
sub
loopne
push
fwait
in
dec
cli
cmpsb
int3
cli
addl
out
movswl
ret
or
push
out
xchg
mov
aam
pop
xor
xor
daa
out
push
and
jns
ja
sbb
adc
push
push
push
cmp
idivb
sub
popa
shll
test
adc
addr16
imul
fsubrl
dec
push
fisubrs
xchg
and
fimull
add
add
jno
ja
shrb
inc
cmp
cmp
jle
mov
pop
repnz
stc
sbbb
xor
adc
mov
pop
popa
xchg
pop
shlb
jge
cmp
iret
ret
mov
push
cltd
loope
dec
popf
imul
jns
stos
mov
pop
jb
mov
fisttpll
xor
daa
lods
jae
cli
pop
xchg
jnp
mov
xor
or
sbb
add
sti
mov
ds
fisttpll
loop
mov
fdivl
adc
lds
cli
neg
je
mov
sub
into
xchg
stos
das
pop
xchg
jb
mov
in
or
inc
cld
jle
movsb
nop
int
leave
xchg
pop
mov
pushl
jmp
pop
xchg
je
inc
push
insb
int3
sbb
lds
repnz
pop
cwtl
cmp
test
mov
and
inc
nop
sub
push
xor
cli
repnz
jb
or
sub
xlat
push
enter
cmp
jnp
lahf
push
scas
adcb
dec
movsl
push
stos
pop
test
jp
and
clc
mov
and
xchg
pop
fsubrs
adc
cwtl
mov
jg
push
add
pop
xchg
cs
mov
mov
popf
mov
mov
gs
mov
add
test
iret
xor
mov
pushf
hlt
xchg
test
movsl
sub
dec
mov
fiaddl
or
arpl
cltd
xlat
add
push
mov
jl
xchg
xor
dec
movl
push
idivl
push
arpl
ss
mov
or
push
aam
inc
cmp
pop
aas
and
and
or
mov
andb
push
fisubl
sub
out
std
cmp
cmp
mov
push
push
imull
mov
adc
adc
sti
jae
fisubrl
push
cmp
dec
sbb
fstps
and
mov
cmp
or
dec
sbb
sub
and
adc
jmp
sbbb
sbb
pop
hlt
fistpl
pop
inc
xchg
outsb
jle
addr16
pop
mov
cmp
out
jmp
mov
cmpsl
mov
mov
mov
ret
addr16
out
std
pop
jle
mov
dec
mov
data16
dec
mov
shlb
nop
repnz
iret
ljmp
iret
mov
ds
cmpb
fmull
arpl
jae
cmp
xor
sub
gs
int
rorb
cmpsb
lret
xchg
xchg
cmpsl
nop
pop
scas
fidivs
lods
insl
xlat
fs
and
jecxz
gs
jl
jae
sub
movsl
pop
pop
dec
dec
xchg
lods
add
push
nop
inc
add
sub
adc
push
jno
call
outsl
jno
push
sahf
incb
mov
xchg
add
add
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
insb
add
jle
jge
jle
sbb
mov
out
inc
mov
dec
dec
jmp
sub
mov
test
mov
push
xor
mov
xchg
sub
jae
stos
andl
jge
cmp
xchg
enter
les
xchg
ret
xor
into
cs
out
push
xchg
aas
loop,pn
shl
out
das
lock
ret
xor
push
stc
xchg
pusha
outsb
push
cmp
out
in
cs
call
push
mov
std
int
pop
fucomp
push
and
and
cmpsb
add
cmp
cmp
cs
sbb
xor
and
stc
jmp
dec
push
xchg
adc
mov
inc
mov
sbb
fsubs
pop
insl
cmp
push
fisttpll
xor
jg
cli
pop
push
mov
push
scas
dec
mov
pop
xchg
cs
pop
add
inc
jne
imul
fildl
cmp
sbb
sub
or
inc
add
sbb
fwait
rcr
xor
adc
sti
jns
loop
ret
xchg
shl
and
dec
mov
test
sbb
test
mov
ds
cmc
dec
dec
add
test
xor
mov
pop
sub
jne
dec
adc
ss
fs
and
mov
jge
enter
arpl
das
xchg
mov
xchg
mulb
test
sbb
cmpsl
enter
jnp
mov
mov
xor
push
les
sbb
aaa
jb
lret
xor
clc
cmovle
shlb
shlb
pop
mov
sbb
mov
sahf
jo
jge
dec
jb
xor
adc
lods
adc
rolb
inc
daa
aam
pop
jns
mov
loope
sbb
fcom
cmp
pop
sahf
sbb
sub
cmp
int3
lret
hlt
mov
push
or
cwtl
test
mov
rorl
jb
je
mov
cltd
js
leave
mov
push
push
xchg
inc
mov
jge
test
int
jnp
mov
iret
bound
push
jne
sub
aam
adc
mov
notb
pop
int3
mov
xchg
jg
inc
mov
push
xor
sbb
fimull
sbb
cs
pop
mov
sbb
xor
popf
jle
xchg
and
inc
or
gs
sti
and
xchg
push
inc
fcoms
push
sub
lret
mov
mov
shrb
repz
inc
or
pop
pop
jmp
mov
add
jl
jbe
xchg
sub
mov
xchg
fstl
dec
sbb
insb
mov
lods
inc
mull
stc
push
xchg
add
sub
dec
ret
pop
insl
ret
fsubrs
jl
js
cmpsb
xchg
dec
outsl
loopne
roll
xchg
add
mov
mulb
fisttpll
sti
mov
and
pop
cmp
sbb
cli
push
or
daa
test
cld
pop
lods
rolb
fdivs
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
dec
fisttpll
jle
fistpll
push
mov
fucomi
bound
cmp
add
cmc
insl
xchg
jo
adc
cmpsl
popf
xchg
or
test
inc
mov
xchg
dec
out
cmc
rep
std
xor
jp
mov
fmull
inc
mov
lods
dec
mov
test
pop
xchg
mov
add
adc
addr16
add
xchg
fs
inc
inc
inc
pusha
fadd
movsb
shlb
test
iret
xchg
pop
inc
popa
or
andb
sarb
push
loope
push
sbb
cmp
mov
pop
or
dec
pop
jl
mov
and
fbstp
lods
pop
addl
cltd
or
add
scas
test
mov
push
call
lods
add
ret
and
stos
and
cmp
dec
lods
and
decl
cmpsb
aaa
addr16
daa
mov
js
lret
jge
jnp
cmp
test
push
idivl
jle
lahf
pushf
loop
jne
add
mov
xchg
or
push
lods
out
stos
sbb
push
pushf
add
dec
out
adc
sbb
mov
dec
mov
xchg
mov
es
cmp
mov
adc
movb
sbb
push
subl
into
and
push
out
mov
xor
push
and
jno
add
inc
fnstsw
push
mov
adc
cwtl
pop
and
shl
and
pusha
and
cmp
jbe
orl
dec
nop
xchg
sbb
ds
dec
xor
fbld
cmp
test
sub
mov
jge
lock
andb
push
out
push
andl
sub
iret
push
cmc
es
mov
pop
lods
scas
addr16
cmpsl
test
sub
lret
outsb
addr16
mov
punpckhbw
cmp
xor
mov
shr
pusha
sbb
lods
cltd
sahf
cmp
mov
pop
loope
cli
cs
adc
pop
imul
int3
bound
imul
fisubl
bound
xchg
lds
cwtl
sbb
sarl
and
ret
outsl
sar
movsb
pop
mov
out
mov
jno
mov
jae
fcmovb
outsl
add
push
fstpl
je
pushl
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
aad
mov
jle
and
inc
fstps
movsl
pop
js
inc
es
push
cltd
movsl
mov
and
mov
cli
inc
out
cs
movsb
and
adc
in
pushf
add
adc
std
test
mov
push
mov
movsl
mov
or
in
test
jecxz
test
mov
push
add
rcl
or
jmp
mov
mov
mov
inc
mov
jb
out
sar
stc
inc
test
or
icebp
daa
sub
mov
es
sub
pushf
mov
push
scas
loopne
sarb
cmp
shlb
shl
sub
call
inc
jp
pop
xor
fists
dec
enter
nop
fmuls
shl
mov
mov
jg
test
push
stc
mov
aam
and
je
addr16
aaa
xor
push
inc
aam
mov
push
xor
xor
pushf
repnz
int3
sub
lahf
mov
bound
js
stc
xchg
leave
jp
loopne
pop
in
cmp
sbb
xchg
sahf
test
or
inc
or
xor
push
dec
or
repz
mov
lock
loopne
inc
aam
jb
xor
lret
pop
xchg
jne
cmp
aaa
dec
cmp
mov
sti
sbb
mov
pop
outsb
pusha
jns
inc
in
popf
in
sub
lret
adc
inc
lds
push
cmpsb
push
popf
mov
add
cs
idivl
popa
scas
jne
or
mov
jmp
test
xor
inc
std
mov
or
jmp
jns
filds
mov
dec
xchg
adc
jg
imulb
mov
pop
sti
icebp
adc
fldl
rclb
add
push
rcr
leave
mov
movsl
dec
fdivl
rcrl
popf
in
cwtl
xor
out
out
mov
sbb
pop
in
iret
push
jg
adc
das
mov
pop
arpl
bound
rolb
daa
imul
mov
sub
fisttpl
addl
repnz
cmp
mov
leave
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
out
jno
mov
and
jle
aad
mov
clc
push
jle
clc
das
xchg
in
movsb
insb
xorb
and
enter
mov
movsb
cld
push
inc
jbe
add
pushf
fldl
ret
cmpsb
bound
jb
add
pop
test
cmp
add
jmp
ret
and
iret
test
div
push
mov
fs
cwtl
pop
mov
movsb
mov
cmp
push
and
fwait
xlat
pop
mov
scas
pop
mov
jns
loope
repz
insl
inc
into
fidivs
add
fwait
mov
xchg
sbbb
or
mov
lahf
loope
cmp
lds
ret
lcall
mov
or
xor
es
sti
inc
dec
mov
sti
mov
lea
shlb
sub
outsb
in
mov
xchg
std
imul
outsb
shrb
mov
and
das
sub
or
bound
ficoms
out
aam
push
mov
cmpb
in
into
jp
andb
inc
or
push
ficoms
xor
hlt
leave
ja
lcall
cmp
mov
mov
lea
in
icebp
jns
call
daa
icebp
xor
repz
add
push
loop
dec
and
enter
into
cli
pusha
ds
pop
xor
xlat
fimuls
pop
push
ds
dec
push
inc
lods
xchg
add
jle
push
sarl
sub
fisubrl
stc
in
mov
mov
movsb
xor
mov
jl
mov
test
dec
sub
sbb
cmp
xlat
sub
adc
out
decl
loope
mov
in
cmpl
xlat
mov
je
sub
mov
mov
push
push
mov
aad
xchg
or
sub
mov
and
fimull
jl
movsl
cmp
xchg
nop
push
in
jecxz
imul
mov
in
ret
cli
jl
outsb
cmp
insl
sahf
mov
daa
inc
shll
mov
add
dec
xchg
repz
stos
lcall
std
and
sbb
dec
jb
adc
sahf
sub
arpl
adc
dec
push
bound
mov
nop
cwtl
nop
sarb
jnp
mov
sbb
mov
in
std
and
pop
scas
dec
mov
js
fmull
ja
stos
mov
stc
xchg
jp
fistl
xor
push
jmp
lcall
repz
and
ret
fnstsw
stc
pop
push
lret
aas
addr16
mov
addb
fcoml
pusha
outsl
lret
mov
fmul
insl
pop
repnz
xor
xchg
mov
mov
leave
sahf
out
imul
mov
inc
and
into
mov
mov
cmpsl
aaa
inc
add
add
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
add
fcom
push
iret
jle
and
jle
xchg
adcl
in
dec
lods
jbe
inc
sub
or
rcr
mov
int
inc
dec
test
andb
fstpt
in
not
push
int
mov
setnp
adc
dec
mov
cmpsb
ss
xlat
xlat
fisttps
iret
sbb
sahf
xchg
bound
sub
push
pop
cmpsl
cld
mov
faddp
mov
add
inc
ret
loope
scas
sub
xchg
iret
add
xor
push
xchg
jnp
mov
imul
cmpsl
stos
iret
frstor
push
xchg
xchg
insb
mov
pop
repnz
xchg
loopne
add
fistpll
sbb
mull
jmp
push
sbb
pop
mov
add
cs
xchg
gs
push
loop
pop
cli
cmp
or
test
std
xlat
sbb
lods
push
inc
in
fstpl
jnp
shl
fisubrs
test
cmp
adc
sub
shlb
inc
sti
mov
cmpsl
pop
adc
jne
pop
dec
ret
es
mov
pop
jno
cmp
pop
and
add
push
xchg
ja
or
mov
push
xchg
aas
hlt
inc
sub
ret
mov
mov
sbb
inc
ret
xor
mov
aaa
test
mov
dec
sbb
dec
xchg
cmp
mov
jno
mov
fstps
xor
aas
mov
out
rorl
push
divl
aam
adc
insl
call
jnp
insl
outsl
ss
mov
imull
jl
xchg
jp
fdivp
cli
cwtl
inc
mov
cld
sbb
sub
mov
sub
jle
cmp
std
pop
ret
xchg
or
sbb
in
ss
pop
aam
ja
fs
mov
push
jp
movl
or
cs
dec
iret
adc
into
and
rcr
js
div
icebp
push
iret
and
mov
cmpsl
xor
jecxz
sti
push
out
adc
xchg
lret
pop
sbb
or
mov
jle
jne
cmp
sbb
xor
mov
movsb
lods
out
push
mov
out
fnsave
negb
ret
stos
ss
add
into
cmp
and
fwait
or
add
fisubs
fs
ja
inc
clc
loopne
jnp
mov
or
jg
inc
mull
cmp
inc
xchg
jge
pop
das
lds
out
sub
shl
mov
mov
lods
lret
mov
push
cmp
data16
movsl
mov
sub
mov
pop
lcall
or
pop
daa
pop
divl
add
cld
cmpsl
jle
aaa
xlat
sub
aaa
lahf
mov
and
mov
ss
ds
testl
scas
mov
and
inc
xchg
xchg
out
jp
xor
aas
push
idivb
cmpsl
xchg
insb
adc
lods
push
inc
loopne
adc
mov
cmpb
jne
mov
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
jp
mov
and
jle
sahf
mov
lods
push
dec
adc
xchg
mov
std
fiadds
daa
fildll
push
jae
mov
or
lcall
fisttps
and
jp
and
stos
decb
daa
pop
add
mov
movsb
scas
arpl
fbstp
add
jp
or
mov
mov
mov
xor
shrl
jmp
in
adc
sub
in
fsubrs
mov
cmpl
cmp
push
lret
mov
in
mov
sbb
jle
inc
movl
pushf
adc
mov
mov
dec
insb
inc
push
pop
push
dec
pop
push
cmp
mov
inc
cld
mov
xchg
addl
lds
jle
std
test
pop
int
pop
cltd
sbb
jg
push
cltd
sub
sub
mov
pop
xlat
scas
jne
imul
shrl
xor
and
das
bound
dec
int
xchg
mov
mov
mov
xlat
jae
fists
faddl
test
mov
outsl
pop
jl
std
pop
push
mov
xor
mov
mov
sbb
mov
inc
movl
ja
ljmp
sub
mov
lea
popa
adc
add
scas
cmc
ljmp
out
sub
cmp
or
sub
test
lahf
addr16
cmp
inc
jno
repnz
xchg
mov
cmp
movsl
sbb
dec
rorl
es
test
jne
mov
or
shr
and
pop
adc
cmp
in
movsl
sahf
cmp
into
sarl
jnp
test
shrb
adc
mov
enter
mov
mov
adc
lret
loopne
push
pop
ljmp
xor
stc
dec
loopne
fisubrs
adc
scas
inc
stos
push
sbb
push
insl
insl
inc
out
jle
pusha
daa
jbe
xor
xor
gs
inc
pop
dec
push
pmaxub
sahf
mov
sbb
xchg
sub
jmp
cmpsb
cmp
jnp
jmp
mov
xchg
push
nop
loop
std
add
stos
pop
mov
inc
sbb
xchg
jp
pop
popf
jp
es
in
insb
inc
jo
shl
fstpl
sub
pop
jecxz
loope
mov
aad
lock
je
fistl
adc
addr16
insl
test
jae
dec
mov
lock
lret
nop
pop
mov
lock
sarb
jo
push
dec
xor
pop
sbb
xchg
xchg
lods
jmp
imul
rcrl
add
and
fistl
pop
adc
pop
push
jbe
clc
imul
and
jne
mov
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
sub
imul
andl
jecxz
sbb
daa
push
loope
jb
mov
mov
adc
and
push
lods
out
pushf
ds
push
inc
loopw
jp
sub
sbb
sub
and
in
negb
in
stos
and
ret
xor
sbb
jae
cmp
icebp
sbb
fptan
fwait
cmp
push
loopne
pushl
call
mov
in
mov
cmp
adc
add
enter
and
mov
repz
push
lods
les
addr16
jecxz
inc
imul
xchg
xor
sarl
add
rorl
jne
mov
push
in
push
push
lret
cmc
ret
out
jb
jge
ret
add
adc
stos
pop
pusha
insb
mov
push
dec
mov
pusha
jno
or
or
xchg
addr16
xor
adcb
sub
dec
xchg
mov
mov
outsl
jae
push
pop
cmpsb
inc
sbb
jecxz
mov
mov
lea
mov
and
stos
dec
and
ficomps
sar
mov
sbb
xor
adc
mov
mov
mov
ret
nop
sub
lcall
clc
xor
inc
in
xor
xchg
add
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
fcoms
jg
jle
test
sub
jg
push
scas
xchg
fdivrl
je
and
mov
and
jnp
aas
xorb
lret
xchg
add
sub
xchg
sub
or
loop
out
lods
cmp
inc
cli
test
js
dec
ficompl
pop
gs
dec
inc
cmp
mov
cmpsl
mov
mov
mov
cmpb
adc
pop
and
in
data16
push
js
inc
scas
movsl
lock
loopne
adc
jle
shll
xchg
pop
imul
or
ret
xlat
dec
sub
or
or
into
or
in
lret
xlat
iret
inc
sub
cmp
fistl
loope
or
fistl
mov
or
inc
call
push
jl
mov
jmp
inc
les
aaa
mov
adc
jbe
sar
test
push
or
push
lods
loop
sub
mov
pop
jp
in
lock
mov
add
lret
popa
mov
xchg
jbe
je
sahf
mov
xlat
push
pop
jns
adc
and
setne
inc
and
or
rcr
push
mov
aam
cmp
push
loope
stos
mov
leave
xor
xchg
iret
xchg
sti
xor
andl
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
mov
sbb
inc
pop
popa
clc
xchg
out
pop
or
pusha
shrb
ret
jbe
jns
lods
xor
inc
mov
push
mov
gs
inc
shr
stc
adcl
sarl
int3
inc
dec
xor
shrb
inc
data16
xlat
mov
imul
lret
loopne
sbb
cmp
out
iret
out
dec
add
add
and
lret
dec
mov
rcrb
sub
push
fdivrl
aaa
xchg
sub
rcll
test
loope
popa
and
loop
fdivl
xchg
and
or
pop
inc
imul
gs
push
sbb
fcoml
dec
setno
stc
add
loope
dec
pop
mov
in
inc
push
pop
ds
aas
jnp
mov
ss
in
shl
stos
jl
dec
stos
fisttpll
pop
imul
jae
std
fcomps
stc
pop
js
jno
or
sbb
sbb
adc
adc
xchg
lret
push
jae
fdivrl
push
scas
mov
add
and
push
ds
nop
data16
pop
out
push
ljmp
and
rcr
jg
insl
xchg
lret
ret
dec
mov
dec
or
add
fcmovb
inc
hlt
std
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
dec
icebp
jns
in
sarb
in
jle
adc
xlat
rdpmc
arpl
jb
xor
subb
lcall
add
jp
inc
or
or
xadd
cltd
fwait
push
or
outsl
sub
mov
icebp
and
std
andl
ret
xor
pop
jecxz
dec
or
aad
pop
movsb
rep
mov
add
sti
jecxz
bound
hlt
lret
mov
pop
dec
adc
sub
pop
aaa
dec
xchg
stos
ds
lock
test
sahf
movsb
insb
dec
jmp
imul
inc
fstpl
xor
ret
mov
mov
push
jnp
pop
add
add
jmp
dec
mov
leave
aas
lahf
mov
cmpb
movsl
int3
shll
jecxz
iret
jle
pop
mov
xor
out
push
cmp
jne
or
xor
sub
adc
adc
xchg
and
sbb
or
mov
mov
and
icebp
sub
popf
pop
insb
iret
inc
xchg
mov
repz
push
jbe
jns
fisttpll
icebp
lods
jl
fwait
jne
and
mov
mov
insb
and
mov
and
test
aam
montmul
cmpsb
push
gs
add
in
ret
cmp
roll
jmp
adc
test
or
sarl
in
jle
imul
and
es
mov
lcall
loope
mov
icebp
cmp
adc
js
scas
fistps
xor
dec
das
adc
xor
xor
sarb
xor
arpl
iret
dec
in
insl
clc
cmp
xchg
or
mov
add
mov
test
mov
fiadds
pop
pop
add
push
fdiv
sub
cmp
out
xchg
pop
push
aas
cli
xor
jae
in
xor
rorb
push
fwait
das
insb
pop
test
jl
add
lds
fimuls
int3
lds
cwtl
sbb
ret
je
lea
loop
xor
sbb
pop
inc
push
fs
fmull
pop
jne
in
pushf
and
add
ret
std
pop
fidivl
lods
xor
lods
enter
stc
loope
lds
fsts
mov
clc
inc
loopne
mov
dec
dec
xor
and
push
outsb
fistpll
int
sbb
jle
xor
stc
aaa
hlt
psrad
rcrb
sub
or
jge
loop
inc
xchg
int3
jb
mov
jo
iret
mov
jo
out
xchg
push
nop
xchg
or
fnsave
cli
push
or
pop
xor
pop
mov
fs
shrb
mov
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
shll
sarl
in
jle
mov
jl
xchg
mov
pop
cmp
incb
mov
call
popf
cmp
and
addr16
jp
scas
mov
add
xchg
cmp
adc
in
ja
jo
js
and
les
loop
mov
lcall
sbb
xchg
std
je
add
aam
lret
xchg
add
mov
or
jno
push
pop
xchg
inc
lods
xchg
jns
xor
xor
lret
idivb
jg
ljmp
sbb
sub
push
cmp
xchg
test
je,pt
loopne
dec
dec
or
mov
in
clc
adc
xor
jne
repnz
sti
fnstcw
ds
and
jae
cmpsb
xchg
mov
ret
aad
or
enter
xor
cmp
add
aam
push
lcall
mov
inc
add
mov
mov
adc
push
push
outsb
lea
testl
mov
push
xor
fdivrs
jge
or
and
push
dec
jbe
outsl
popa
outsb
ret
loop
push
loop
cmp
bound
es
jnp
mov
pop
xchg
and
punpckldq
fiaddl
sub
into
fiaddl
push
mov
mov
pop
push
loop
jge
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
dec
mov
cmc
scas
fidivrs
in
jle
ret
stos
mov
mov
xor
xorb
loope
pcmpgtw
aaa
cli
pop
ficomps
mov
pop
mov
sub
inc
sbb
push
cmpsl
mov
fldenv
add
jecxz
fcmovbe
push
mov
xchg
std
test
sbb
inc
inc
add
lret
add
or
dec
add
or
sbb
stc
fsubrl
fnsave
xor
mov
iret
stos
shlb
loop
cmp
cmp
lahf
test
cmp
lret
xchg
int
mov
aam
xor
ret
sbb
mov
xchg
mov
pop
mov
mov
adc
lds
movsb
stos
mov
push
scas
outsb
xchg
inc
mov
jge
xchg
ljmp
fs
cmp
xor
jmp
repz
xchg
mov
pop
fimuls
cs
cli
mov
pop
js
mov
mov
frstor
push
push
cmp
mov
sub
xchg
enter
dec
add
dec
in
mov
pop
dec
lret
jo
cmpsb
addb
ljmp
test
hlt
fldenv
sub
int
cmp
ds
xchg
xchg
repz
ret
fdivrs
imul
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
movsb
das
ficoml
jle
in
jle
andb
repnz
shll
je
insl
orl
lcall
stos
push
xor
dec
mov
jle
mov
cmp
dec
in
jbe
popa
dec
fisubrs
xor
cmpsb
mov
sbb
cmc
outsb
adc
int
cld
repz
push
lret
enter
enter
stos
jmp
pop
cmpsl
inc
dec
test
imul
stc
and
add
push
xor
ficomps
daa
jo
cwtl
lret
insl
mov
dec
push
xor
or
mov
imul
loopne
clc
adc
rcrb
push
pop
popf
daa
dec
js
fwait
icebp
addr16
xor
cmp
sarl
dec
push
adc
mov
cmpsl
ret
or
dec
adcl
stos
xchg
sub
loope
stc
lret
sahf
fs
test
aas
jg
mov
loop
pusha
cli
dec
repz
test
ja
xchg
fsub
push
or
pop
enter
lahf
je
and
call
jge
outsb
or
jbe
loope
aaa
iret
mov
pop
add
std
leave
ret
and
sbb
sahf
mov
mov
hlt
dec
cmp
jecxz
or
ja
pop
mov
shl
adc
xor
cmp
je
mov
addl
jmp
mov
jmp
xor
xchg
xor
jmp
cli
fnstsw
in
jle
or
inc
je
and
jbe
adc
adc
andb
push
out
adc
dec
mov
push
shr
xor
movsl
cmp
jns
jl
clc
mov
pop
mov
test
mov
inc
pushf
sbb
jno
cld
mov
push
mov
repz
cmp
and
push
add
dec
or
or
movsb
int
out
xchg
sbb
ljmp
xor
aas
test
xchg
out
fcompl
lcall
jmp
cmpsl
pop
int
scas
addl
outsl
mov
dec
pop
insb
je
push
adc
xchg
pop
xchg
push
sbb
add
loop
mov
mov
cmpsl
cmpsl
push
loopne
int
pop
add
xor
imul
leave
push
pushf
cmpsb
push
mov
push
push
sbb
dec
rorl
xchg
imul
add
stos
xchg
pop
push
add
test
enter
add
lods
rolb
testl
mov
and
or
push
sti
addb
xchg
leave
lahf
loopne
rcl
or
push
or
insl
adc
cmp
mov
imul
pop
cmp
stos
stos
mov
mov
cmp
test
lcall
call
in
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
hlt
sbb
jle
jge
jle
jnp
addr16
inc
push
cs
in
lret
and
push
mov
or
loopne
add
loop
sbb
xchg
push
dec
sti
or
fisubs
cmp
pop
loop
jmp
stos
or
dec
jge
stos
inc
das
adc
and
mov
cmp
xchg
or
xlat
jle
xchg
andl
stc
jne
xor
dec
ret
ljmp
dec
scas
sub
jecxz
shlb
jg
nop
inc
push
insl
into
insb
and
les
dec
mov
lods
jnp
xchg
lret
xchg
daa
jo
cmp
sbb
inc
dec
pop
or
adc
and
push
push
outsl
xor
cmpsl
mov
je
mov
nop
imul
iret
cmp
pop
sbb
mov
inc
and
and
aas
std
nop
aaa
popf
mov
sbbb
int3
xor
and
nop
pop
fadds
or
push
test
add
add
inc
mov
jg
loopne
push
shlb
add
xor
dec
adc
mov
push
ja
cmpb
mov
lods
or
fs
add
ds
shlb
ret
aam
add
rcll
ret
jb
dec
rcll
cld
shrb
push
xchg
insl
iret
std
test
int3
pop
sbb
fisttps
jbe
inc
inc
and
sbb
aaa
mov
mov
adc
and
push
shrl
sbb
popf
inc
nop
push
aam
jle
scas
ljmp
sub
in
pop
xorb
pop
sbb
sarl
pop
addr16
mov
cld
push
xchg
dec
sub
cs
mov
pop
cld
mov
adc
cltd
out
sub
loope
cld
sbb
lret
orb
inc
adc
mov
xchg
adc
scas
lcall
int
sbb
cltd
push
mov
sub
push
lret
mov
test
jp
jg
push
nop
addr16
add
dec
xor
mov
out
scas
call
loop
push
cmpsl
mov
add
loopne
pop
lock
fsubr
cwtl
fisubl
imull
inc
sub
daa
jmp
xlat
push
mov
mov
loopne
add
push
push
lods
fiadds
or
pusha
mov
rcr
mov
fisttpll
mov
sbb
xchg
xchg
rorb
jmp
and
test
xchg
int3
mov
jle
xchg
cmp
push
inc
xchg
loop
lcall
dec
ss
imul
test
and
inc
in
xor
sub
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
shrl
jle
jge
jle
jge
rorl
out
loop
cmp
fistl
lahf
mull
pop
mov
int3
jnp
clc
mov
xor
rcrb
pusha
and
cmp
rol
pop
mov
pop
rcl
add
mov
pop
adc
mov
ficoms
mov
sbb
xorl
mov
mov
mov
or
stos
push
push
adc
mov
je
xor
jbe
mov
popf
std
lret
aaa
sbb
leave
jmp
xorl
xlat
shl
mov
mov
mov
or
cmp
mov
idivl
sub
and
cltd
ja
jmp
inc
int3
mov
loope
jmp
mov
cmp
cwtl
ret
les
pop
frstor
mov
popf
es
inc
lock
dec
jo
mov
and
mov
loop
or
push
jg
in
adc
cs
lea
fsubl
xchg
cltd
xor
or
inc
push
jno
fwait
cmp
adc
popf
sti
stos
mov
outsl
xchg
push
sti
mov
or
mov
fimull
mov
mov
mov
xor
stc
add
jo
lcall
test
std
sub
popa
in
pop
inc
sbbl
and
xor
jle
lods
daa
clc
inc
imul
cmpsl
cmc
out
push
pop
push
jge
scas
clc
xor
dec
or
jne
xchg
fidivrl
fdivrs
stos
sub
inc
mov
xor
jg
and
xor
fcmovne
dec
pusha
inc
stos
add
in
data16
mov
jl
sbb
jnp
mov
jns
inc
push
xchg
push
les
test
insl
xor
scas
fistl
mov
lods
sub
or
addr16
loope
cld
or
fcompl
aas
mov
ficomps
mov
fnsave
lcall
push
je
hlt
mov
negb
mov
pushf
pop
push
lea
sub
xorl
mov
adc
pop
xchg
int3
cwtl
sbb
cmpb
dec
cmpl
scas
add
int3
adc
fdivp
inc
adc
fistps
hlt
mov
xor
jbe
shl
aas
cs
loope
cmpsl
repz
mov
lock
pop
loopne
rcr
daa
push
jae
lret
xor
mov
mov
mov
xor
aam
and
xchg
inc
mov
sbb
mov
cmp
jl
fwait
cs
cmp
mov
jbe
add
fbld
fstpt
stc
add
cmovno
mov
sti
sub
or
jo
stc
jns
xor
sbb
and
add
or
sbb
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fst
xchg
sub
in
jle
jge
jle
mov
mov
cmpsl
mov
mov
filds
sti
out
pop
movsl
ljmp
lcall
stc
mov
mov
xchg
push
push
cmp
mov
rcr
and
test
stc
xchg
inc
insb
pusha
sbb
xor
int
dec
or
mov
and
push
pop
addr16
pop
sbb
push
sub
aas
int
jecxz
mov
or
sbb
out
cmp
push
mov
add
dec
movsl
cmp
icebp
ljmp
int3
pop
push
outsl
sbbb
add
fmul
loopne
sbb
popa
mov
sub
pop
hlt
xor
jecxz
mov
push
xchg
mov
add
lcall
dec
lea
inc
mov
movsl
and
lea
mov
shrb
std
lcall
in
test
jge
mov
negl
fs
iret
lods
pop
lret
pop
cmp
outsb
sbb
fildl
xchg
jbe
add
lock
enter
pop
cmp
fbstp
pop
ds
or
push
mov
xor
pop
mov
and
sbb
xor
jbe
adc
outsl
out
push
xchg
push
dec
adc
fdivrs
sub
adc
pop
jbe
andl
xorl
aad
xorb
pop
loope
decb
data16
sarl
jl
shlb
push
or
jb
stc
jnp
loope
pop
repnz
js
sbb
sub
push
stos
and
cltd
in
push
sub
lea
xchg
inc
aam
pop
sbb
mov
fists
pop
dec
inc
jo
pop
scas
push
popf
repz
aam
jns
xchg
cmc
mov
lods
push
in
mov
imul
mov
inc
cli
cmp
mov
sti
xchg
cwtl
jno
scas
nop
adcl
push
mov
and
pusha
lods
adc
es
lcall
pop
dec
cmp
mov
in
sub
add
mov
rorl
gs
test
and
push
push
int
cmp
push
repnz
and
xor
mov
movnti
lcall
shl
jp
cmpsl
push
mov
cmp
daa
fimull
mov
inc
xor
add
mov
push
push
repz
push
mov
aam
das
fnstcw
push
jmp
and
cltd
cs
sub
imul
mov
bound
push
mov
mov
jo
cmp
jno
lahf
sub
adc
ret
cmp
cmpsb
dec
cmp
imul
js
mov
sub
add
out
sub
test
push
add
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
mov
xlat
inc
je
jle
jp
jle
add
mov
out
aas
js
jnp
movl
and
imul
sub
dec
jo
inc
mull
clc
out
pop
test
ja
pop
call
data16
enter
mov
in
xchg
fistl
gs
call
shlb
ret
xchg
cmpsb
mov
pop
lea
dec
dec
movsl
in
adc
pop
shll
enter
lcall
lcall
out
test
sub
lods
in
fdivrs
int3
test
ss
fdivrl
and
xchg
xchg
icebp
jp
or
jo
push
clc
jmp
jo
mov
mov
mov
sub
out
lods
stos
adc
lods
sub
enter
xchg
clc
lock
cmp
ret
mov
jb
pop
punpcklwd
pushf
lcall
adc
or
cmp
movsb
xchg
adc
add
sub
outsl
adc
lea
cmp
cmc
cltd
push
jl
inc
aad
push
xchg
dec
jno
call
repz
inc
fsubrs
subb
das
xrelease
in
push
repz
ds
cwtl
rcrl
sub
sahf
pop
add
jl
addr16
jnp
mov
fsubl
cli
fiadds
sub
movsb
in
mov
cmp
rcll
dec
sub
dec
sbb
gs
inc
mov
push
cmp
sbb
mov
pop
fwait
aas
or
jl
fsubrs
pop
int3
or
enter
or
push
les
repnz
sbb
mov
insl
test
scas
dec
mov
xchg
jb
lret
jae
out
int3
mov
imul
push
pop
lods
jecxz
stos
jne
lock
enter
pop
in
jb
jp
xchg
test
insb
repz
ret
adc
ja
mov
mov
shll
fidivrl
dec
ss
or
inc
and
fisttpl
cmc
jbe
inc
in
fistps
cmp
pusha
and
loope
dec
insl
es
push
dec
inc
lahf
xor
rolb
jle
jecxz
xchg
mov
lret
xchg
push
js
inc
seta
stos
and
and
sbb
push
mov
cwtl
pop
fsubp
in
fwait
mov
test
je
xlat
jp
adc
jbe
mov
inc
dec
ja
and
lods
mov
cmp
pop
movsb
fdivrs
jmp
dec
in
cs
inc
pop
xor
mov
add
adc
test
in
mov
jp
imul
ret
gs
ret
inc
ja
mov
dec
xchg
and
adc
test
movb
mov
mov
mov
jmp
enter
enter
sbb
mull
shlb
dec
jo
jle
jp
jle
test
std
jge
push
jne
cmpb
adc
repnz
mov
cltd
mov
and
push
jg
shrl
lret
arpl
xchg
aas
push
push
xchg
adcl
push
sbb
js
daa
push
pop
ret
jl
mov
je
pop
push
push
in
notl
and
sbb
jne
mov
sub
test
outsb
lret
pop
sub
jno
lods
push
jnp
xchg
inc
cs
inc
scas
push
cwtl
sub
in
push
insl
std
inc
repz
xor
jns
cmp
mov
pop
scas
iret
sbb
filds
lock
pop
cmc
dec
dec
pop
jae
fisubs
sub
cmp
inc
lret
fadd
call
cmp
movsb
ret
pop
mov
shrl
shl
pop
jmp
out
movsb
jae
xchg
ret
jp
aad
cmc
out
add
stos
cwtl
push
call
mov
pusha
mov
lds
aas
jecxz
jbe
mov
mov
sbb
sbb
fmull
cmp
pop
mov
dec
cltd
jge
mov
repnz
sub
push
ficoms
pop
clc
mov
es
dec
and
lret
in
and
cmp
cmp
jo
aas
push
bound
mov
sbb
insl
or
mov
or
inc
or
push
add
inc
loopne
aam
mov
jmp
pop
int3
movsb
arpl
jo
popa
dec
mov
stos
popa
fsts
pushf
mov
dec
mov
mov
in
push
mov
nop
push
or
inc
imul
inc
outsl
cmpsb
jb
sub
push
push
jo
gs
sub
stos
rolb
cmp
rclb
fnsave
or
xor
dec
jle
cld
xchg
hlt
jg
mov
data16
push
loopne
orl
adc
pop
dec
les
dec
add
dec
jg
xor
add
lret
xor
xchg
pop
sub
xchg
fidivl
outsl
xchg
or
push
and
bound
adc
es
std
pop
std
jge
pop
mov
outsl
xor
imul
sbb
xchg
inc
dec
mov
movb
lcall
fisubrs
andb
insl
mov
jne
pop
or
cli
xor
xchg
testl
mov
sbb
jecxz
bound
or
ja
and
pop
push
jmp
pop
mov
int
push
add
jb
jle
mov
xchg
pop
out
xor
lret
push
leave
int
js
xchg
outsl
std
gs
aas
inc
in
push
cmp
push
xchg
setno
xchg
jmp
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
or
lret
jl
jle
jp
jle
xchg
pop
and
movl
test
push
jae
enter
lea
xor
std
add
fdivrs
xchg
repz
scas
cld
sub
lret
ja
arpl
jo
mov
les
out
add
loopne
movsl
sbb
cltd
jbe
cltd
dec
mov
andl
add
cmp
aaa
popa
mov
cmpsl
stc
push
ret
or
mov
mov
out
cltd
fnstenv
cmp
push
add
adc
jge
mov
jae
jg
or
and
roll
test
or
ficompl
sbb
cmpsb
mov
addr16
and
mov
mov
hlt
dec
cmp
iret
dec
pop
test
ss
sub
icebp
push
pushf
test
jp
call
mov
adc
mulb
sbb
jg
fwait
jnp
sub
mov
xor
cmp
mov
push
jb
outsb
mov
and
sahf
adc
mov
scas
insb
insl
push
ficomps
lods
or
cmp
push
inc
daa
mov
pop
test
rorl
pop
inc
push
jl
fdivrp
addl
repz
inc
int3
fwait
imul
out
mov
ret
adc
fsubs
ja
xchg
mov
aas
cs
lcall
in
mov
mov
call
pop
add
pop
dec
push
idiv
stos
xchg
pop
jnp
orb
push
pop
inc
in
in
scas
lods
push
sub
dec
pop
or
dec
jno
jo
ffree
push
dec
fiaddl
rorb
cltd
xor
loope
sbb
cmpl
inc
fcmovnbe
push
popa
sub
inc
jo
aaa
sarl
leave
loop
jmp
lods
cli
dec
mov
mov
test
or
lret
popf
pop
lods
push
test
repz
sub
mov
push
lock
adcl
loop
std
outsl
loope
outsb
push
jae
mov
dec
aaa
push
ret
in
inc
movsl
cmp
push
push
pop
xchg
mov
push
xor
ret
loope
or
cmpb
sbb
hlt
mov
jne
pop
dec
jne
clc
mov
mov
adc
jg
xor
ds
xchg
scas
mov
arpl
add
stc
and
jnp
jno
pop
ret
push
add
imul
cmp
and
xchg
test
mov
les
fidivl
xchg
dec
xor
rclb
jae
test
mov
add
sub
lods
cmp
mov
loop
mov
lock
divb
jb
sti
cmc
hlt
cmp
push
cmp
shrl
xchg
sbb
mov
sti
pop
call
push
insl
fdiv
lods
xlat
cltd
icebp
aaa
pop
inc
out
out
jg
mov
jmp
in
notb
sub
jecxz
scas
js
jle
jp
jle
mull
push
adc
ficoml
ljmp
inc
inc
mov
adc
pop
sub
cmpsb
outsb
inc
in
mov
rorl
aas
or
sub
in
inc
cmp
lds
jns
mov
enter
enter
cmp
sub
inc
sti
call
fdivrl
and
enter
mov
sub
loop
adc
and
cmc
in
shrl
call
xchg
mov
out
cld
lock
or
hlt
lret
popf
shlb
mov
inc
dec
xchg
sub
push
push
and
adc
imul
jno
dec
sub
sub
cmp
clc
popa
dec
or
insb
dec
mov
sub
sub
adc
jb
xor
push
fnstenv
mov
mov
ljmp
into
cmpsb
mov
sbb
push
jbe
sti
adc
adc
movsb
sarb
mov
inc
mov
hlt
push
fbld
stos
mov
setl
mov
mov
dec
fstps
xor
xchg
xor
cmp
movsl
mov
pop
mov
xor
repnz
popf
and
mov
enter
mov
lahf
jbe
sti
push
mov
xchg
push
inc
jmp
pop
repnz
cmpsl
pop
push
push
or
xor
dec
hlt
sub
minps
xor
and
sbb
push
repnz
cmc
movsb
movsl
cmp
dec
mov
lahf
imul
sub
push
movsl
cwtl
imul
outsb
dec
cmp
jno
sahf
xor
pop
repnz
repnz
test
sarl
fisubrl
repnz
loopne
jne
xchg
aas
push
imulb
cmp
les
cwtl
inc
fwait
lods
sbbb
aaa
push
xchg
fcoml
stos
div
es
jge
push
mov
jnp
pop
mov
or
pop
push
ret
mov
jne
or
aad
xlat
cli
mov
mov
call
addr16
push
cwtl
mov
fsubs
mov
es
cltd
inc
into
xor
lret
int
mov
xchg
mov
aad
ret
mov
sub
fnstsw
inc
shl
and
shrl
dec
leave
pop
jbe
in
popa
cmp
inc
das
dec
stos
aam
clc
sbb
pusha
add
jbe
shll
movsb
lahf
adc
mov
idivb
gs
or
lds
xchg
adc
ds
mov
scas
push
negl
cwtl
or
xchg
xchg
pop
jae
pop
loop
ds
and
xor
mov
loopne
push
icebp
mov
add
test
adc
add
clc
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
hlt
jle
jp
jle
cltd
js
cltd
nop
nop
std
hlt
push
leave
jne
call
mov
push
pop
ret
stos
sbb
loopne
rorl
lret
in
mov
ja
jae
xor
adc
sbb
std
call
sub
call
int3
jbe
ret
and
mov
mov
push
sub
cmp
pop
inc
push
mov
sub
pop
push
mov
clc
push
push
loop
inc
fs
cmp
loope
adc
lcall
push
push
loopne
dec
adc
addr16
subl
scas
lret
movsb
les
out
xlat
int
xor
mov
outsl
in
jl
adc
add
push
push
notl
xor
push
add
pushf
icebp
inc
int3
sbb
sbb
add
jns
rcll
sbb
add
xchg
rcll
in
fs
mov
mov
std
fs
dec
ret
test
fwait
lahf
test
xchg
enter
or
mov
adc
sub
faddl
lea
fbld
outsl
repz
mov
addr16
insb
sbb
stc
jno
jbe
mov
divb
int
lds
orb
xchg
inc
notl
fcmovb
leave
add
or
ror
cli
jecxz
ss
dec
ds
bound
xchg
lock
adc
cmp
add
leave
in
lcall
xchg
pop
aas
sub
mov
push
cli
mov
xchg
sbb
xor
dec
mov
add
fimull
adc
push
repz
cld
sub
dec
push
insl
dec
cmp
rorl
inc
test
push
and
pop
xchg
outsb
je
int
or
dec
add
cli
and
mov
into
imulb
xchg
sbb
push
out
cltd
push
imul
adc
pusha
jo
push
sub
fidivl
jno
and
ljmp
jmp
adc
insl
mull
bound
adc
mov
fldenv
mov
das
sub
dec
rcll
fistl
data16
adc
test
nop
mov
mov
dec
xor
gs
pop
lret
out
inc
mov
in
dec
pushf
pop
iret
nop
icebp
icebp
negl
sub
mov
xor
xchg
or
std
test
push
aas
jnp
xor
aas
scas
jo
jbe
scas
dec
stos
mov
lahf
das
lds
cltd
insb
arpl
inc
rorl
aad
test
jb
out
jnp
lret
jmp
mov
xchg
mov
aaa
test
push
fistps
call
inc
icebp
jmp
lahf
icebp
sub
gs
mov
add
andb
repnz
sar
cmp
mov
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
pop
add
jle
jp
jle
or
mov
nop
xlat
mov
push
and
insb
mov
aad
lock
int
cmpsb
sbb
cwtl
sarl
add
shll
inc
sbb
loop
adc
mov
push
mov
or
sub
sbb
sub
jne
mov
mov
sbb
jns
out
orl
pminsw
push
and
test
cmp
xchg
lods
int3
mov
stos
push
ret
imul
daa
lret
fxch
adcl
scas
lret
cmpsl
push
cmp
xlat
outsb
popf
xchg
test
cmc
jp
pop
dec
sub
rorl
and
movsl
jae
mov
test
cmp
mov
xchg
xchg
mov
mov
cmpsb
ret
xchg
negb
xchg
call
scas
jne
xchg
sub
ja
hlt
out
mov
cltd
push
cmp
loopne
scas
lds
xchg
hlt
mov
sbb
seto
inc
jbe
jg
inc
mov
sbb
xchg
cmp
push
fstl
and
hlt
mov
rorl
int3
add
lods
mov
cmp
lods
mov
sbb
xchg
vmovlps
mov
pop
push
fnstsw
cwtl
loopne
popf
adc
out
xor
out
clc
pop
cmp
mov
lea
push
mov
loope
mov
mov
gs
in
jae
or
fiadds
cmpsb
jg
mov
out
fwait
addr16
push
pop
popf
pop
popa
jbe
xchg
out
pop
and
ds
pop
shr
pop
mov
add
test
and
lret
mov
inc
or
mov
add
in
test
jnp
int
mov
enter
aas
mov
lret
fdiv
mov
push
push
mov
stos
mov
lret
cmp
inc
push
scas
sub
mov
or
cld
fneni(8087
adc
sub
sbb
inc
lea
cwtl
cmp
out
sbb
cli
fbstp
push
or
pushf
and
incb
mov
clc
mov
inc
pop
inc
fdivl
add
lds
cmp
gs
das
in
lods
andl
pusha
lret
xchg
cmpxchg
nop
push
dec
int
fwait
mov
add
mov
sbb
fmuls
addr16
cmp
enterw
and
adcb
xor
mov
pop
ljmp
popf
inc
pop
or
das
dec
ljmp
adcl
dec
ljmp
push
inc
sub
faddl
adc
xchg
movsb
and
popa
lret
inc
nop
test
je
sub
mov
jge
xor
sub
lahf
outsb
out
movsb
add
dec
clc
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
jno
push
jb
jle
jp
jle
add
fdivs
daa
fisttpl
rcll
mov
jbe
and
push
pushf
in
cmp
inc
add
test
and
out
iret
fisubs
push
jbe
sahf
shl
mov
sbb
stos
lock
outsb
in
movsb
push
das
addl
test
push
test
xchg
fnsave
pop
fiadds
jge
mov
mov
pop
jmp
dec
inc
or
std
nop
lods
loopne,pn
fdivrl
add
sbb
jne
sub
mov
cwtl
mov
sub
adc
lods
jg
kunpckbw
mov
sbb
mov
mov
cli
icebp
icebp
popa
and
les
adc
orb
xor
loopne
scas
rcrl
jge
popa
adc
sub
mov
jmp
sub
addr16
sbbb
adc
and
cltd
int3
inc
push
adc
mov
cmp
cs
sub
fwait
daa
sbb
inc
iret
in
lods
or
stc
movsb
or
pop
cmp
lcall
je
leave
and
lret
fbld
movsb
pop
cmp
in
add
inc
popf
jecxz
adc
loop
sub
out
sub
jbe
jmp
fidivl
dec
adc
adc
or
sub
push
pushf
mov
inc
push
adc
in
fcompl
pop
jns
push
bound
dec
jge
add
push
das
adc
push
cmp
adc
dec
xchg
xor
pop
push
int
ljmp
negl
inc
add
or
repz
bound
nop
imul
out
lahf
arpl
shll
cld
push
jnp
xlat
sbb
xchg
xor
test
sbb
sti
jne
add
jg
jmp
sbb
cmp
dec
orb
adc
inc
dec
adc
outsb
push
sub
or
dec
pop
jns
sbb
lahf
cmp
add
shrb
push
mov
xchg
mov
cwtl
or
test
test
inc
jno
xchg
loop
add
dec
mov
pop
adc
jns
mov
das
dec
inc
aaa
push
cmp
push
stos
stc
popa
not
arpl
mov
xor
and
adc
or
mov
mov
in
test
and
arpl
push
cmp
leave
mov
dec
outsb
leave
imull
or
or
inc
add
lods
cmp
adc
and
inc
mov
imul
pop
and
call
cs
cwtl
xchg
adc
xor
cmp
packuswb
clc
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
add
sar
add
xchg
xchg
cmp
pop
sbb
cmpsl
fsts
cltd
mov
mov
sbb
js
push
scas
cmp
mov
pop
test
inc
fwait
mov
sub
xchg
scas
xor
adc
push
inc
and
sbb
or
les
mov
cmp
pop
xchg
test
std
mov
iret
inc
filds
cli
push
in
mov
loop
das
cmp
in
push
mov
xor
dec
fsubrs
adc
pusha
in
ds
andl
movsb
insb
cmp
setae
gs
sub
cmpl
or
sub
lcall
cld
and
sbb
filds
sbb
popf
es
dec
gs
inc
mov
loopne
test
mov
mov
inc
data16
xchg
and
stos
pop
loopne
repnz
fcomps
es
cltd
mov
mov
push
pusha
xchg
jge
push
out
xchg
insb
sahf
dec
clc
subl
cmp
push
testb
fs
mov
test
cltd
mov
add
movsb
in
stos
adc
mov
cmp
out
out
sarl
cld
add
mov
lds
mov
adc
mov
inc
mov
sbbl
es
pusha
ret
idivl
repnz
loopne
inc
push
mov
jge
mov
shl
pusha
lcall
repz
and
push
scas
in
push
sub
sub
dec
leave
fmul
imul
mov
out
mov
mov
mov
mov
div
call
imul
jp
sub
push
leave
roll
addb
cmpsb
jmp
bound
pushf
jg
scas
xor
or
fs
add
add
ret
sbb
orb
jne
insb
pop
inc
pushf
mov
lahf
xchg
in
pusha
mov
mov
jbe
add
cwtl
leave
daa
hlt
jle
push
in
jbe
or
or
mov
xor
inc
mov
inc
movsl
cld
in
popf
iret
das
jae
lret
mov
subb
sub
sbb
mov
sub
dec
rcl
lret
fstps
shll
jbe
int
xchg
jg
test
sbb
int
in
mov
in
sub
dec
and
adc
jb
add
xchg
fsts
pop
pop
aam
dec
add
imulb
dec
jg
push
sbb
in
ss
jecxz
adc
add
sub
sbb
pusha
cli
xor
dec
xchg
cmp
xor
stc
jle
cmpsb
das
push
rclb
push
pop
adc
add
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
clc
jle
jp
jle
sub
mov
push
mov
xor
pusha
icebp
sbb
push
test
cli
in
sbb
inc
test
xor
ss
or
mov
push
test
jbe
call
mov
in
mov
add
dec
xchg
push
fistl
mov
ret
or
mov
inc
mov
add
add
pop
cli
and
push
sub
mov
sbb
sbb
sahf
scas
fmul
dec
pop
cmovp
sub
enter
sub
cli
and
push
stos
push
mov
in
push
hlt
xorb
and
std
jno
lret
stos
aad
add
cmp
jle
dec
cmpb
ds
jo,pt
pop
outsb
mov
loopne
fdivl
inc
repnz
xchg
stc
fwait
test
push
sbb
inc
inc
les
nop
test
adc
hlt
adc
or
cmpsb
mov
gs
outsb
repz
jmp
int3
sub
leave
mov
push
and
inc
push
vphaddubq
iret
lods
dec
fisttpl
loop
fiaddl
jge
xchg
push
adc
cmp
mov
insb
jo
pop
rcll
stos
cmp
mov
arpl
rcl
cmp
pop
xlat
aaa
std
jl
arpl
xchg
xchg
in
cltd
inc
nop
out
imul
cmp
cld
dec
jle
xchg
aad
js
cmc
inc
popf
mov
cmp
push
popa
xchg
cmpsl
xchg
int
push
mov
orl
fdivr
pop
aad
dec
lahf
pop
out
out
cmpsb
sbb
adc
stos
sub
jbe
mov
rclb
xor
and
imul
pop
push
push
mov
dec
pop
push
rcrb
scas
icebp
adc
movsb
or
mov
out
xchg
add
pop
fwait
jp
sti
add
outsb
clc
negb
pusha
add
fs
mov
or
out
nop
jo
sub
fwait
mov
cmp
inc
fsubr
mov
mov
ss
sub
int
dec
mov
sbb
jne
mov
xor
pushf
lods
mov
sbb
push
dec
pop
insl
jl
fs
sbb
out
adc
in
pop
fcoml
notb
inc
mov
jl
leave
mov
add
push
jnp
xchg
cmp
mov
incl
inc
mov
add
les
push
in
pop
adc
lret
and
stc
jno
and
cld
fdiv
jno
nop
outsl
imul
jno
fistps
lods
or
add
aaa
subb
xor
test
sarb
xor
mov
inc
shr
mov
push
into
test
dec
jge
mov
jge
nop
xchg
push
loopne
mov
cmp
loopne
lods
push
inc
popa
stc
xor
xor
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
sub
mov
xchg
jp
jle
sti
int
cld
adcl
addl
test
call
lods
test
jno
push
or
add
lea
or
jle
mov
adc
ret
insb
cmp
cwtl
inc
mull
aam
cmc
and
xor
fs
sub
hlt
mov
cli
push
or
in
fistpll
insl
insl
neg
adc
inc
adc
or
mov
in
cli
addl
addr16
mov
cmp
xlat
cmp
add
jo
icebp
cmc
sub
push
adc
scas
jmp
fistpl
movsb
and
push
mov
pop
sbb
lea
insb
jbe
adc
mov
mov
jo
aam
mov
lock
jns
cmp
dec
fistl
addr16
outsl
nop
arpl
call
xchg
fs
xor
dec
and
push
and
in
dec
fstpl
jge
jmp
ret
jae
mov
fs
mov
outsl
xchg
push
out
in
sub
es
jmp
xchg
sarb
sub
frstor
pop
aad
push
bound
dec
insb
test
and
mov
rolb
or
ja
stos
jp
xchg
ret
push
out
popf
rolb
jle
adc
es
fisttpll
mov
jbe
mov
shl
push
pop
sbb
popa
in
rorb
cmp
lods
add
inc
loopne
imul
pop
shll
pop
inc
adc
hlt
daa
fists
sbb
xlat
lret
jp
outsl
repz
add
xor
sarl
xor
fs
mov
insl
mov
sti
xchg
lret
popa
push
pop
mov
mulb
mov
pusha
insl
daa
adc
ja
movsl
icebp
adc
mov
xchg
and
mov
dec
jl
sahf
lock
sub
cli
xchg
inc
xchg
cmc
addr16
shll
outsb
dec
add
lahf
ljmp
imul
ljmp
lret
push
fstpt
jle
add
and
inc
or
bound
mov
test
test
in
stos
xchg
cmp
mov
mov
data16
and
insb
inc
fldenv
and
jl
mov
push
push
cmpsb
jge
scas
xor
push
ret
lcall
sub
xchg
cmp
test
sbb
mov
stc
out
add
cmp
push
imul
push
lds
bound
xchg
xchg
push
inc
lods
xchg
test
mov
mov
sbb
or
jae
or
insb
push
pusha
imul
sub
out
xor
ss
loopne
add
lcall
dec
inc
inc
js
jp
scas
loopne
nop
rorl
add
add
dec
xor
mov
loop
into
xor
xchg
push
popa
sub
jle
jge
jle
ficomps
push
loop
push
jns
test
push
frstor
imulb
jo
inc
lahf
jo
dec
push
adc
mov
push
enter
icebp
mov
sti
dec
sbb
ljmp
scas
aam
scas
jg
shll
hlt
pop
inc
dec
and
sti
adc
ret
or
jmp
jnp
mov
sbb
xor
out
cmpsb
scas
inc
mov
fadd
stos
xor
sub
mov
adc
xor
push
js
gs
add
nop
sub
stc
pop
push
dec
loope
mov
fcmovnb
sub
rcll
mov
into
xchg
imul
sahf
scas
mov
enter
mov
sub
xchg
ret
xlat
fstpl
in
es
cld
loop
pushf
sub
and
lahf
js
push
arpl
fwait
cmpsl
push
or
test
sub
scas
sub
movsb
inc
pop
jg
test
jecxz
cwtl
jp
push
movsb
cmp
and
sbb
cmpsb
mov
in
add
dec
inc
adc
push
fstpt
outsb
add
mov
xor
dec
shll
rorb
lret
arpl
pop
movsb
inc
sbb
test
hlt
xchg
cld
test
cmp
ret
jmp
cmp
and
xor
mov
push
push
inc
pusha
and
xchg
mov
pop
jmp
fwait
xlat
jp,pn
rcrl
sahf
popa
push
inc
stos
xchg
dec
mov
fisubl
loopne
pop
pop
int
enter
fadds
int3
sub
mov
dec
movsl
xchg
std
inc
and
inc
xor
fcompl
popa
lods
sbb
mov
scas
inc
cmp
pusha
out
aam
scas
scas
inc
xchg
jl
fidivrs
bound
and
ret
mov
popa
fistps
mov
xchg
fisubrs
xor
lret
fidivrs
fldl2t
add
jecxz
push
je
sub
lret
insb
jg
jae
imul
inc
add
sti
sbb
les
adc
xor
inc
cmp
cld
lcall
xor
lret
incb
mov
add
pop
inc
dec
cmp
push
idiv
shrb
cmp
and
or
movsb
mov
cmpsb
jno
pop
adc
sub
sahf
and
jo
xor
jle
sub
adc
cmp
cmpsl
dec
ljmp
sub
scas
and
stos
cwtl
test
inc
out
inc
adc
or
push
lods
cltd
insl
fnstcw
rol
xchg
or
gs
push
cltd
push
or
inc
js
cmp
mov
adcb
hlt
ret
jno
ljmp
lcall
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
repnz
sbb
jle
jl
xchg
lret
adc
jmp
jl
clc
cs
jae
imul
mov
dec
xchg
out
sub
inc
pop
fisubrs
in
jno
mov
test
adc
data16
and
jle
ja
mov
insl
and
bound
xchg
mov
add
sbbl
ja
adc
icebp
lock
mov
aaa
or
and
imul
or
sub
stos
mov
sbb
andw
arpl
les
scas
ret
jp
in
lea
ds
in
adc
cmp
inc
aas
pusha
stc
stos
or
rclb
leave
pop
jecxz
je
and
lds
cwtl
add
cmp
lret
adc
dec
xchg
jae
cltd
call
fnstcw
stc
inc
arpl
dec
shll
push
out
scas
dec
popf
rclb
jl
scas
and
inc
jbe
repz
xor
aam
movsb
lahf
jbe
iret
xchg
rcl
inc
das
cmp
fcmovb
shr
mov
add
nop
cmp
mov
push
mov
call
in
xchg
sbb
sbb
or
leave
fldenv
mov
mov
shll
inc
jne
fimuls
mov
and
and
inc
sub
data16
ss
jecxz
xor
jl
repz
sub
out
dec
call
out
loope
add
inc
sbb
jno
movsl
hlt
mov
cmp
push
in
jle
cld
stos
leave
test
call
mov
mov
fidivl
xor
inc
pop
enter
xor
pop
vmovntdq
js
out
shr
jns
pusha
dec
sbb
sbb
scas
fsubrs
cltd
outsl
lds
mov
sub
lods
mov
rorb
in
push
pop
xor
es
sbb
daa
pop
sub
nop
sub
cmp
sbb
test
xchg
dec
fadds
hlt
rcll
push
add
testl
sti
fmulp
cli
dec
mov
insb
add
sub
sbb
inc
repnz
jmp
mov
mov
and
stos
loop
outsl
sub
enter
icebp
dec
ret
cmpsb
adc
mov
je
add
pusha
shlb
jmp
lahf
or
repnz
in
call
add
js
cwtl
popf
cmp
pop
js
adc
push
test
push
test
pusha
mull
xchg
xor
arpl
gs
add
out
xor
inc
insb
mov
and
or
fcmovnbe
fsubr
js
mov
fwait
int
ds
mov
into
fstpt
ds
fwait
enter
popf
frstor
rolb
orl
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
push
es
jle
jge
jle
insl
cmp
add
nop
adc
mov
inc
out
xor
or
mov
lea
sbb
push
lods
mov
sub
sub
push
adc
popf
ljmp
popf
push
outsl
mov
push
push
lea
sub
decb
ds
stos
jo
inc
or
cli
fnsave
or
insl
sbb
mov
mov
mov
imul
leave
aaa
xchg
pop
adc
mov
lcall
sbb
arpl
mov
std
aad
lea
pop
adc
cmp
rcrl
stc
nop
push
xchg
xchg
push
sub
adc
sahf
ds
leave
gs
sbb
adc
sub
nop
insl
or
xchg
fsubl
mov
mov
lea
imul
jae
inc
xlat
imul
adc
repz
cmp
xchg
stos
lcall
push
outsl
mov
add
sub
scas
lock
and
repnz
inc
js
int
jns
xor
inc
mov
cmp
cmc
xchg
push
lea
cmp
push
pop
inc
cmpsb
sbb
loopne
in
fisttpll
push
gs
movsb
add
jne
jns
imul
out
movsb
mov
push
fcomp
push
shlb
jo
and
lret
push
cmpsb
mov
repz
add
mov
push
jno
icebp
pop
mov
ljmp
pop
shl
add
and
sarb
imul
lock
inc
lds
inc
jo
dec
jo
cmp
push
mov
adc
shlb
inc
push
push
sub
movsl
jg
jp
mov
mov
or
aam
insb
lret
icebp
add
clc
aam
xchg
imul
scas
fldenv
or
mov
push
or
push
insl
sbb
mov
sbb
mov
fwait
data16
xlat
rcl
xor
test
xchg
cmp
and
out
inc
xor
and
xor
mov
push
or
scas
sbb
lods
mov
cmpsb
scas
sub
fnsave
cmp
sbb
inc
xor
add
lret
adc
mov
imul
arpl
pop
and
stos
das
push
push
ds
jne
cli
pop
lods
nop
cmpsb
push
pop
xchg
flds
jmp
cmc
clc
xor
into
mov
or
xlat
push
loop
rorb
repz
cmp
inc
add
xchg
sahf
inc
in
adc
mov
inc
sub
mov
adc
pusha
sbb
out
mov
outsb
mov
inc
jne
dec
scas
imul
das
shll
xor
inc
and
ja
add
movmskps
jne
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
cmp
ss
into
andl
std
fdivp
and
push
jnp
mov
fdivrl
inc
pop
popa
mov
mul
mov
mov
inc
rclb
adc
stc
out
dec
test
cbtw
fnstenv
sub
lret
cs
cmpsl
rcrb
cmp
shlb
jmp
test
fs
cmpsb
std
push
and
std
or
cmp
je
lods
mov
inc
lret
ret
mov
sub
ja
das
adc
mov
hlt
inc
enter
es
or
mov
push
sub
iret
or
loop
mov
aad
jae
insb
cmp
sub
mov
shlb
les
mov
test
sub
mov
mov
lods
push
scas
mov
shlb
cs
enter
cltd
in
test
fidivl
lods
sbb
and
jne
hlt
ja
pushf
xchg
shll
sbb
movsb
pop
mov
cmp
inc
int
mov
pop
data16
push
dec
scas
xchg
cli
pop
push
push
push
push
lcall
jmp
xchg
loop
shrl
je
mov
std
push
push
sbb
pop
divl
js
xchg
icebp
je
pop
mov
mov
pop
sahf
ret
addr16
cltd
faddl
jmp
jno
push
xor
outsl
adc
nop
data16
inc
jo
xor
mov
stos
in
cmp
inc
loope
je
push
popa
inc
outsb
jg
aad
cli
pop
int
xor
aaa
iret
adc
clc
rcr
addl
jns
inc
jns
jg
push
fnstcw
or
adc
leave
imul
mov
enter
mov
clc
mov
mov
jo
dec
cmp
loop
cmpsl
mov
jmp
call
xor
or
mov
test
jns
cli
out
push
push
jne
inc
addr16
scas
and
mov
stc
lcall
mov
and
outsl
test
std
iret
dec
mov
add
repnz
shll
cli
rclb
mov
jb
inc
push
xchg
in
std
push
fiadds
inc
pop
sbb
adcb
jbe
cmpsb
pop
lods
icebp
fs
lods
mov
sti
mov
out
sub
push
mov
mov
adc
rorl
jmp
cwtl
clc
popf
lods
adc
inc
push
loope
inc
sub
rorb
jecxz
andb
or
adc
repnz
jae
add
ja
mov
inc
cmp
fwait
adc
or
rclb
xchg
sahf
sbb
or
in
rorb
push
add
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
xchg
inc
loope
xchg
jle
jge
jle
loope
testb
mov
test
das
fimull
shlb
in
dec
aas
dec
mov
es
jmp
mov
fcmovnu
idiv
mov
rorl
fiadds
push
cld
pop
inc
jmp
repz
sub
cmpsl
jno
in
imul
gs
jb
out
lahf
loopne
adc
and
push
jns
sub
jmp
lea
dec
xor
movsl
xchg
mov
imul
jge
out
pop
cmpsb
fisttpl
mov
hlt
mov
imul
test
mov
xlat
cmpsb
repz
inc
dec
pushf
fnsave
inc
movsl
pop
mov
mov
test
adc
mov
clc
in
icebp
dec
xor
pop
jge
xchg
je
or
cs
xor
dec
fldcw
aad
aas
scas
lods
outsl
and
imul
xor
repz
sbb
or
in
pop
adc
bsr
notb
jno
jne
hlt
shlb
cmp
xchg
iret
push
or
test
mov
orl
and
cwtl
add
das
pusha
add
sbb
xchg
jmp
or
xchg
mov
push
ljmp
mov
push
pop
dec
push
xchg
push
mov
mov
mov
aad
adc
int3
test
xchg
adc
jbe
sbb
push
sub
rol
cmpl
cmp
jle
gs
fidivs
pop
pop
repz
in
fisubl
mov
adc
push
hlt
pop
jae
push
test
rcrb
shlb
inc
das
js
adc
cltd
mov
std
test
mov
mov
ja
in
ss
andl
loope
jo
loopne
sbb
mov
xor
not
shlb
jge
in
xchg
or
xor
mov
jae
add
js
xchg
lea
je
push
sbb
jae
leave
dec
xor
xchg
gs
outsl
add
stos
jnp
outsb
sbb
adc
add
repnz
xor
das
sbb
mov
aad
push
sub
pop
pusha
inc
ret
mov
xacquire
push
decb
xor
mov
nop
xor
xchg
out
mov
sub
dec
push
mov
add
leave
push
mov
push
fdivs
or
jb
ljmp
adc
scas
push
sub
sarb
push
test
leave
in
out
pop
cltd
movsl
xchg
mov
or
cmpl
rorb
xlat
jae
cmp
ss
fcmove
and
inc
sbb
jg
and
mov
xchg
repnz
mov
dec
sbb
int3
out
add
cmc
lods
inc
sbb
adc
lea
xchg
popf
jae
repnz
mov
mov
xchg
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
cmc
pop
out
sub
jle
jge
jle
and
pop
push
push
pop
mov
in
popf
outsl
outsb
or
jle
jo
and
pop
div
sub
insw
xchg
stc
xchg
es
cmp
add
lret
sub
ljmp
dec
jb
outsb
cmp
rclb
dec
mov
jo
imul
pushl
sub
das
andl
xchg
cmc
jnp
test
mov
int
or
cmp
add
mov
add
mov
clc
push
jno
lods
mov
movsb
shl
sub
cld
inc
push
icebp
lods
mov
lods
dec
pop
inc
movsl
mov
xchg
mov
jecxz
pop
les
inc
pop
push
sarl
mov
cltd
dec
loope
mov
jnp
cmpsb
xchg
lods
nop
push
adc
add
data16
mov
aas
test
gs
xor
mov
outsl
xor
adc
addr16
addb
cwtl
fadds
leave
dec
lds
sarl
xor
mov
inc
and
sar
add
andl
jnp
dec
jmp
subb
jo
testl
pop
sbb
mov
sub
or
adc
in
cmp
je
ja
jbe
cli
push
xchg
sub
inc
int3
int
ja
out
gs
insb
cmpl
and
cmpsl
mov
sarl
xor
jne
aaa
xchg
stc
inc
inc
and
ret
scas
aad
rcll
insl
divb
xchg
xor
mov
outsl
inc
mov
out
ret
fnstsw
sbb
int
dec
sub
xchg
arpl
ja
fwait
enter
xchg
and
test
or
dec
loope
outsb
adc
mov
jmp
ljmp
sub
pushf
addb
insl
loop
adc
xchg
sti
push
pop
mov
cmc
inc
or
popf
fs
int
pushf
subb
dec
sbb
fs
inc
push
cld
xchg
cltd
xchg
adc
in
loop
cmc
adc
das
pop
das
ss
pop
insl
das
inc
mov
pop
and
adc
scas
mov
test
lret
loopne
push
out
pop
jmp
sti
stos
in
push
cmpsb
loopne
cmpsl
cmp
rol
xchg
aas
popf
dec
faddl
pop
lock
cli
dec
shll
pushf
arpl
inc
xor
inc
les
mov
fisttpll
cli
mov
popa
adc
xchg
not
push
scas
mov
outsl
ret
xchg
aas
test
leave
xchg
inc
push
mov
or
inc
jbe
mov
aam
and
xchg
inc
shrl
cmpb
scas
cmp
pop
lea
gs
adc
mov
adc
mov
aad
xor
cli
in
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
jl,pn
sub
jle
adc
push
pop
mov
mov
add
in
outsb
sti
jge,pn
xlat
jbe
fsubr
xor
arpl
xorl
and
ficomps
daa
or
pop
mov
fisubl
sub
js
pop
and
sub
shlb
mov
add
mov
push
ja
and
into
enter
mov
cmpsb
sub
mov
pushf
xchg
mov
test
mov
mov
or
dec
xchg
push
xchg
sub
jns
inc
add
pop
inc
xchg
stc
ret
xorl
add
je
aam
xor
sbb
fnstenv
out
aas
mov
loop
sub
inc
xchg
mov
addl
icebp
push
pushf
dec
je
jmp
xor
and
adc
adcl
adc
xlat
xchg
jge
mov
pushf
incl
inc
jmp
add
push
ja
add
adc
movsl
xor
push
shlb
dec
pop
add
loop
jns
mov
jg
hlt
shr
lds
popa
sbb
and
bound
xchg
xor
arpl
lea
test
pusha
icebp
and
scas
xor
fmull
clc
mov
and
incb
lods
jp
iret
add
out
aam
dec
xorb
mov
pop
cmpsb
lock
adc
insb
xchg
ret
inc
pop
aas
xor
mov
idiv
xor
nop
adc
pop
xchg
cs
xor
or
mov
xor
fcmovu
inc
jns
into
lods
data16
repnz
mov
jbe
lcall
int3
pushf
rolb
xchg
popa
pusha
mov
pop
xorb
xor
push
addr16
push
add
ret
stos
cmp
out
jbe
sub
addr16
test
lahf
adc
mov
pop
shrb
imul
arpl
movsl
xchg
repnz
bnd
xor
mov
add
or
jno
in
fstpl
je
add
and
out
adc
pop
test
imul
add
add
sbb
hlt
pop
pusha
xchg
or
add
add
jo
and
dec
dec
jbe
inc
push
pop
rolb
enterw
pop
add
mov
out
ljmp
outsb
push
push
sub
test
jecxz
call
add
jp
pop
add
mov
insb
jmp
out
adc
or
imul
int
movsb
repz
incl
rcll
xchg
jns
test
xchg
push
xchg
insl
in
adc
mov
sub
stos
lcall
adc
in
shl
data16
jns
pop
sbb
jg
pop
jne
push
jae
frstor
push
outsl
cld
pop
iret
xor
lea
jmp
das
subb
mov
xor
std
enter
lahf
jle
jge
jle
xor
ficomps
and
adc
xchg
popa
push
dec
and
pop
dec
mov
lods
lahf
dec
popf
dec
popa
inc
stc
adc
xchg
outsb
xlat
or
orl
or
cmp
xchg
sahf
add
pop
jg
adc
mov
scas
out
ret
icebp
push
dec
aas
mov
scas
push
bound
push
mov
inc
sub
scas
ljmp
imul
and
add
sbb
adc
mov
mov
inc
mov
xchg
into
addb
pushf
ja
iret
mov
or
fdivr
inc
inc
movsb
mov
dec
test
sub
movsb
and
jne
fbld
cmp
jo
dec
jns
or
nop
jp
xchg
push
repz
out
rolb
sti
daa
or
dec
ljmp
sbb
js
out
dec
mov
pop
mov
inc
cmc
rcll
lret
push
test
sub
imulb
dec
mov
out
cmp
flds
jp
xor
fsubs
xchg
in
jb
daa
adc
div
jae
decl
add
js
out
movsb
xchg
jno
jne
shlb
inc
sbb
push
dec
or
lock
dec
dec
movsb
sub
ja
lock
scas
nopl
jg
mov
fldl
lea
pop
insb
sub
sahf
sub
loope
imul
lods
or
sbb
push
sub
push
popf
mov
shll
imul
sti
xor
xchg
cwtl
and
cmp
iret
aaa
insb
mov
cld
dec
fiaddl
mov
jns
or
ja
jl
mov
jne
xor
push
jns
loope
xchg
icebp
jns
jae
jp
pop
or
psubsb
movsb
mov
pop
js
mov
mov
jg
sbb
je
fcompl
es
fildl
test
xor
pop
aad
mov
dec
xchg
out
jb
jmp
dec
loopne
inc
xchg
jne
sbb
imul
push
mov
into
call
es
jp
rcr
sahf
call
into
xlat
orl
out
shll
add
int3
imul
and
jb
sub
sbb
clc
outsb
and
jmp
pop
dec
pop
pushf
dec
test
insl
stos
out
pop
cwtl
xlat
idiv
insb
iret
aad
das
adc
cld
lcall
pop
mov
sub
jmp
mov
fs
mov
outsl
lcall
mov
scas
popf
pop
dec
popa
add
rcr
xchg
jmp
mov
hlt
jge
aam
cvtps2pi
and
mov
mov
jmp
repnz
adc
aad
fcoms
pop
jge
lcall
fisubrs
adc
cmp
cmp
orb
sbb
insb
fwait
jl
xlat
dec
cmp
adc
std
mov
or
sub
bound
pop
push
adc
pop
inc
push
les
cmp
mov
cmp
pusha
push
pushf
ljmp
insl
jl
cld
jmp
mov
in
es
aaa
icebp
or
cmp
scas
in
push
cmp
push
pop
and
pop
jbe
call
shll
xor
jae
fs
add
bnd
dec
pusha
push
cltd
sbb
mov
or
sbb
call
rcrl
sahf
sbb
gs
cmp
sbb
loope
adc
lods
mov
push
les
cld
rcrb
les
push
js
add
into
push
lock
adc
xchg
divl
mov
jmp
lock
cmp
jns
add
outsb
ret
sub
das
cli
sbb
xor
sub
cmpsb
sti
mov
lea
jns
cltd
ljmp
add
mov
push
xor
push
es
and
xorl
pop
and
jns
mov
pushf
pop
in
test
sbb
cmc
xor
pop
mov
jecxz
mov
mov
orb
cld
jae
xchg
mov
dec
in
mov
das
xchg
fcmovnbe
outsl
imul
push
addr16
daa
hlt
cmp
mov
sub
notb
xchg
fcmovb
xor
bound
inc
ficoms
insb
jno
push
daa
outsl
sub
cwtl
adc
jle
jbe
lcall
pop
in
jns
cmpsl
sub
sbb
pop
aam
and
push
fcmovne
popa
mov
xchg
mov
push
out
sub
push
cmp
add
cmc
not
jb
dec
cmp
outsl
jae
dec
shlb
jp
mov
sbb
cmp
es
jbe
xchg
sub
pushf
add
cltd
xlat
sti
lds
ret
jno
stos
cltd
adc
std
in
sub
shl
adc
out
add
push
mov
inc
div
and
scas
lahf
cld
pop
or
shl
insb
mov
cmpsl
sti
pop
inc
dec
sub
mov
inc
adc
outsl
or
stos
mov
adc
xchg
cmp
hlt
aam
jns
xchg
pushl
cmpsl
out
push
loop
arpl
ret
pop
cld
mov
hlt
shll
cmpsl
add
outsb
inc
and
aad
in
mov
sbb
jp
mov
shl
mov
rorb
inc
cwtl
je
scas
les
adc
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
cs
xlat
inc
xor
jle
xlat
cmp
jecxz
xor
imul
aad
cmpsl
pop
jp
ret
rcr
add
inc
gs
fcoms
imul
in
cmp
cmp
mov
pop
pushf
jg
loop
aad
xchg
pop
and
cld
outsb
adc
stos
inc
jmp
fldcw
lods
les
mov
pop
mov
add
fcoms
loopne
cwtl
pusha
jle
xchg
iret
in
cwtl
cli
int3
pop
add
addb
jnp
arpl
and
aad
jne
and
in
ja
dec
int3
and
fildll
xchg
mov
mov
dec
mov
aas
aad
push
rclb
cmp
sahf
lret
pusha
orb
mov
mov
test
adc
out
aaa
scas
bound
in
bound
xchg
adc
mov
and
movl
cli
adc
pop
divb
pop
jbe
lret
fadd
sub
cmp
xchg
mov
stos
popf
dec
iret
cmp
outsb
lods
das
xlat
xlat
add
push
mov
jge
std
subb
sub
and
repz
jb
xchg
inc
call
pop
sti
mov
outsb
nop
mov
mov
push
mov
loope
lds
push
push
stos
andb
addr16
lock
jbe
sahf
cmp
jno
gs
mov
push
pop
divb
cmpsl
movsb
aad
lea
mov
repz
aad
or
insb
sub
aam
dec
in
push
lcall
push
ror
jb
adc
add
arpl
or
into
fcmovb
mov
out
cwtl
imul
data16
pop
repz
or
lret
shl
adc
inc
adc
sub
push
int
sbb
imul
lea
cmp
bound
lock
fstpt
mov
and
dec
aam
mov
mov
imul
dec
imul
clc
push
adc
xchg
mov
sbb
mov
add
mov
fs
jp
sbb
add
stc
xchg
mov
lahf
pop
jb
mov
jmp
push
lds
movsb
cltd
push
and
insb
arpl
icebp
stos
scas
mov
sbb
aas
enter
push
mov
sbb
lds
mov
sbb
bound
adc
lods
pop
out
xchg
sbb
xchg
hlt
fwait
stos
push
movsl
out
decb
cmp
cmc
mov
add
add
scas
ss
pop
xchg
movl
cmp
lds
pop
std
mov
ds
push
roll
add
out
inc
sbb
mov
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
jmp
xor
inc
aas
movsb
jle
push
jg
jle
ds
mov
dec
xor
sub
mov
or
xchg
imul
lds
fcomps
push
xchg
gs
lea
push
push
jl
nop
and
stos
mov
dec
popa
cmp
addr16
in
addb
adc
mov
das
aaa
add
xor
mov
jne
dec
es
mov
sub
push
jp
test
jecxz
dec
ret
pop
push
sub
mov
xchg
cld
lret
dec
and
mov
aas
mov
call
out
mov
pusha
sub
or
in
movsl
xor
mov
or
and
rolb
adc
scas
out
movsl
mov
mov
push
push
aam
and
and
sbb
xor
or
xlat
movsb
push
xor
adc
shlb
add
out
imul
and
mov
push
std
or
mov
add
addl
mov
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
int
iret
movsl
jle
push
jg
jle
inc
stos
xchg
nop
in
inc
dec
pop
xchg
mov
adc
mov
inc
pop
pusha
xchg
fnstenv
xor
lret
mov
adc
rcl
into
dec
shl
pop
pop
outsb
dec
mov
out
xchg
inc
test
sub
shrb
inc
xor
imul
cwtl
loopne
shl
jns
stc
inc
fwait
dec
rclb
insb
cmpb
push
call
out
pop
ja
fldcw
jae
adc
cwtl
jns
mov
add
jo
fs
ljmp
dec
into
dec
repnz
orb
sbb
outsl
push
out
ret
lcall
fs
add
cmp
lret
inc
or
mov
leave
jle
xchg
mov
add
or
insb
imul
push
roll
popa
enter
clc
int
push
icebp
cmp
repnz
stc
lods
mov
fxch
stos
mov
insl
test
cld
cmc
pop
or
jbe
pop
lock
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
sbb
push
jg
jle
mov
mov
dec
hlt
xor
gs
jbe
sbb
arpl
pop
fsubrs
mov
andl
push
jne
xchg
testl
push
dec
ret
aaa
sbb
xchg
and
stc
sarl
addr16
fidivrl
jns
aad
out
mov
test
jno
test
aam
in
cmp
pushf
push
mov
jl
mov
and
xchg
fnstcw
scas
push
pop
fisttpll
pop
clc
cmp
out
popa
and
aam
push
data16
cld
orb
pushf
or
jae
fstl
push
gs
cmp
push
inc
incl
mov
jp
and
xor
addb
cmp
inc
dec
mov
cld
cmc
mov
int
mov
inc
in
sbb
cwtl
ja
repz
jb
dec
loopne
aaa
arpl
test
arpl
inc
subl
loop
add
cmp
add
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
push
and
push
jl
jle
ds
jl
notl
sbb
lret
mov
mov
subl
gs
addr16
lret
mov
stos
cli
lret
sub
fadds
jb
sti
push
repnz
aam
nop
mov
mov
daa
fcmovb
jno
sub
testb
aad
xor
and
mov
jns
mov
mov
xlat
jo
inc
sub
adc
add
nop
or
rcr
xchg
in
xor
pop
push
push
mov
push
test
mov
out
insb
mov
cmpsb
ret
mov
ja
adc
fs
adc
mov
inc
int
push
enter
cmp
dec
push
mov
xor
mov
mov
fs
push
adc
stc
call
pushf
mov
mov
sub
fldl
mov
adc
mov
adc
into
bound
sbb
xor
es
and
add
aas
sbb
jns
or
push
adc
shlb
dec
inc
mov
xchg
mov
in
adc
into
xor
cmp
fwait
and
xchg
xchg
or
adc
icebp
jge
xor
inc
inc
dec
mov
popf
jae
out
pop
arpl
push
mov
inc
out
enter
movsb
mov
mov
lret
cwtl
outsl
jmp
mov
fildl
inc
jne
test
andb
popa
enter
sub
push
sub
xor
iret
cmp
icebp
imulb
or
cld
inc
je
int3
scas
outsb
insb
or
mov
mov
subl
fdivrs
dec
xchg
pop
push
out
jecxz
enter
mov
inc
jmp
fwait
lea
stos
leave
add
addr16
push
enter
out
ds
add
add
xchg
aas
add
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
pop
mov
std
in
and
push
outsl
loopne
xchg
cmp
dec
aad
sbb
jo
push
cmp
push
stc
add
or
inc
rcll
cld
fcoms
jecxz
fldln2
sub
fs
out
sub
in
dec
cli
inc
scas
pop
jg
cmpsb
sarb
sub
and
xor
mov
icebp
outsl
push
bound
repnz
xor
mov
mov
jl
pop
mov
nop
add
cmp
icebp
mov
repnz
push
and
lret
insb
push
dec
and
adc
js
mov
js
test
js
mov
cs
lret
mov
jmp
xchg
aad
in
aas
cltd
andb
out
mov
rcll
sub
xchg
jbe
or
sub
int3
popa
popa
enter
or
imul
jbe
test
out
rcrl
xor
or
mov
subb
mov
movsb
xor
fwait
xchg
and
or
mov
adc
jo
das
jae
out
hlt
jg
jle
cltd
cwtl
lahf
push
jle
jmp
pushf
aam
and
inc
mov
push
xchg
push
je
push
push
pusha
dec
mov
cmpl
test
movsl
dec
mov
xchg
sti
stos
sbb
pop
les
pop
stc
data16
add
nop
cli
dec
sub
cmp
cmp
loope
jge
orb
or
adc
aad
lcall
add
or
repnz
jge
inc
dec
test
mov
cmp
jl
mov
inc
cli
mov
or
fstpt
inc
das
cltd
jecxz
push
push
add
stos
sub
and
adc
dec
insb
out
dec
adc
mov
jmp
enter
pushf
xchg
pushf
test
push
or
fcmovu
push
test
push
push
aam
in
fs
popf
pop
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
lret
jmp
enter
test
clc
ss
sbb
push
fs
adc
and
push
fldcw
inc
scas
out
cmp
jecxz
loopne
mov
hlt
pop
or
cmpsb
scas
mov
iret
sub
dec
lret
fs
adc
fs
xor
xabort
jmp
pop
scas
mov
loopne
mov
add
ret
pusha
scas
add
lds
icebp
lret
pop
adc
xor
jo
xor
dec
pop
arpl
imul
push
loope
cmp
leave
sbb
cmpsl
pop
push
movb
ret
inc
rolb
or
cmp
dec
out
aas
sahf
into
stos
sub
shll
jne
pop
cwtl
push
sbb
icebp
ss
or
addl
xchg
xor
into
pop
or
je
movsl
insl
adc
lcall
mov
xor
dec
cli
rclb
testl
pop
xchg
andl
add
xchg
into
mov
adc
xchg
add
sahf
inc
lret
jp
lret
int3
inc
mov
iret
adc
andl
je
out
aad
pusha
cmp
test
or
dec
stos
stos
xor
xor
dec
test
mov
jg
fdiv
gs
or
scas
and
add
jno
lods
and
push
fsts
xchg
fst
pop
pop
dec
mov
ret
ja
ret
fists
adc
xor
push
mov
sahf
mov
pusha
movsl
mov
sbb
dec
loope
iret
addl
mov
mov
fdivp
into
js
inc
cld
scas
pop
cmp
or
insl
test
iret
add
pop
xchg
popf
sbb
mov
cltd
jle
lods
cmc
or
or
add
mov
jecxz
push
aam
mov
lret
and
mov
out
xor
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
dec
stos
pushf
into
sub
cwtl
lock
push
xor
jo
jl
sbbb
cmp
mov
push
insl
arpl
or
inc
inc
ffree
test
or
ja
stc
jo
pusha
mov
aas
mov
test
repnz
jge
sbb
jae
lds
push
fidivs
and
popa
aam
xor
mov
jecxz
lret
addl
scas
fs
dec
mov
dec
xchg
pop
in
adc
inc
ficoms
shll
sub
fcoml
lcall
es
adc
dec
pusha
imul
je
aaa
lods
std
mov
sub
dec
pop
mov
shl
sbb
pusha
mov
aad
cs
or
cmpsl
data16
pushf
sbb
test
std
inc
inc
in
scas
aad
sbb
pop
cmp
cmpsl
clc
add
test
jno
cmp
stc
fadds
addr16
or
mov
test
and
popa
xchg
cli
add
flds
push
pop
mov
cmp
outsl
fisttpl
lret
and
insl
sub
std
adc
stos
in
sub
imul
lretw
out
outsb
inc
mov
dec
nop
xor
xor
pop
mov
shrb
dec
test
lods
inc
or
stc
test
shlb
mov
inc
loopne
push
mov
mov
movsb
leave
xor
mov
cmp
jp
pop
test
shrb
mov
mov
xchg
and
cmpsl
arpl
adc
xor
inc
mov
inc
data16
jl
or
lods
xchg
jge
xor
adc
or
mov
fcompl
and
pop
popf
cli
mov
xchg
mov
ret
pop
aam
jo
push
cmp
push
das
jge
pop
ficompl
push
xchg
popa
ja
xor
test
ret
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
sbb
jge
scas
stos
jle
lods
jl
jle
adc
ret
nop
dec
mov
fbstp
adc
jnp
inc
movsl
shrb
shld
dec
xor
push
lds
add
js
ret
xor
aaa
jae
xor
std
fcoml
movsb
and
push
cmc
fnsave
loop,pn
lea
jecxz
mov
push
push
push
gs
lock
pop
mov
xchg
jbe
mov
dec
and
and
mov
dec
mov
shrb
xor
out
push
cltd
in
sub
add
jg
in
cmp
shll
mov
mov
jne
into
movsb
fdivp
leave
sub
fisubl
rcr
js
sbb
mov
stos
dec
hlt
dec
mull
sbb
pushf
call
inc
jecxz
mov
jo
add
jns
out
nop
dec
jmp
leave
and
iret
xchg
sti
aas
icebp
loop
push
fidivrs
mov
popa
mov
insb
daa
cmp
jl
sub
sbb
cmpsb
aaa
test
imul
mov
repnz
pop
jnp
inc
rolb
pop
pop
sub
rcr
xor
loope
push
mov
es
addb
and
jmp
test
aas
pushf
sbb
outsl
sub
dec
divb
clc
ja
mov
sub
lods
roll
rcll
jo
int
cmp
ja
iret
in
into
vmaxss
loopne
mov
jecxz
mov
mov
mov
btrl
shll
inc
repnz
fists
loop
pushf
mov
or
outsb
add
mov
jae
in
lea
xchg
jecxz
sub
pop
lcall
xor
cmp
mov
int3
lea
into
cmpsb
es
cli
and
mov
std
push
sbb
sub
pop
adc
cmc
mov
jae
sbb
aad
add
cmovno
mov
das
idiv
xchg
fdivl
les
pop
rcll
pop
in
push
adc
mov
idivl
outsl
in
test
pop
jae
push
repz
dec
pop
lock
jb
or
lods
and
xchg
in
mov
xlat
scas
dec
mov
imul
ja
inc
mov
mov
enter
mov
xchg
or
fisttps
jno
mov
or
mov
cmp
lret
test
adc
mov
movl
subl
mov
addl
jmp
insb
xchg
xchg
in
or
add
jle
lods
jl
jle
push
xchg
cmpsl
adc
inc
les
push
mov
push
mov
xchg
xlat
mov
mov
pop
inc
stos
and
nop
fprem
mov
cld
mov
pop
and
jo
lret
lcall
test
mov
jo
sub
push
sbb
leave
mov
scas
lea
arpl
mov
mov
adc
jecxz
jne
out
test
jnp
lds
xchg
pushf
inc
rcrb
add
in
sbb
xchg
sbbl
cmp
mov
aaa
jae
sti
pop
clc
sub
ret
hlt
dec
mov
paddsw
mov
shll
add
xor
jecxz
stos
jae
push
xchg
inc
cmpsl
push
inc
add
addr16
push
js
cmp
fwait
dec
mov
pusha
int3
add
pop
arpl
adc
xchg
fnsave
out
dec
cmp
adc
jbe
hlt
ss
lret
add
jns
push
movsb
repz
sahf
push
cmp
outsb
fldcw
lea
clc
adc
jo
mov
xor
xor
push
add
out
ret
xor
add
loopne
jg
inc
mov
out
into
adc
cmpsl
adc
cmp
xchg
cmpsb
lock
in
outsl
out
outsb
mov
inc
pop
pop
jg
pop
and
mov
add
mov
adcb
sbb
cmc
adc
adc
cltd
imul
rorl
mov
mov
pop
sub
out
push
xchg
inc
mov
push
fiaddl
mov
test
xchg
dec
dec
outsb
outsb
add
sbb
cmp
daa
dec
pop
aam
dec
fildll
or
in
or
int
fstpl
addr16
sbb
test
testb
imul
mov
or
pop
rcll
mov
pushf
shll
xor
and
push
negb
sub
ret
ss
les
ds
loopne
rcrb
mov
inc
mov
mov
push
gs
push
cwtl
xchg
cmp
add
orl
adc
push
mov
lods
jbe
pop
lret
adc
js
pop
mov
inc
lods
dec
jbe
sub
mov
daa
sub
cs
xorl
push
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
adc
in
mov
mov
jle
jl
jle
fwait
mov
pop
pop
add
mov
lods
xor
sub
popf
jp
out
imul
xor
or
jae
clc
daa
inc
popf
scas
mov
and
mov
fstpl
push
rcl
jp
movsb
inc
and
mov
mov
imul
mov
mov
sbb
fdivr
inc
jmp
jae
nop
ret
fs
sarl
pushf
test
inc
mov
std
addr16
xchg
mov
push
arpl
adc
mov
mov
xor
ret
sub
loope
mov
sbb
xchg
and
push
nop
outsb
lods
add
pop
je
or
mov
push
cmc
mov
mov
jne
in
rclb
enter
cwtl
pop
and
add
pop
lods
and
loop
imull
sbb
jg
inc
mov
pop
jne
mov
jb
mov
mov
sub
out
push
repz
dec
ret
aad
sub
or
pop
mov
sbb
test
aam
xorb
jns
loopne
inc
addr16
js
repz
bound
aad
jge
sti
fidivrs
sub
leave
sbb
adcb
cwtl
add
sub
gs
test
int
insb
clc
push
mov
cli
inc
data16
test
push
cmp
or
outsb
cmpsl
inc
pushf
jg
imul
mov
imul
inc
imul
xor
mov
movsl
or
add
jno
inc
sub
fnstcw
icebp
lcall
out
cwtl
xchg
mov
faddl
outsl
data16
or
sahf
dec
jo
xor
xlat
xchg
das
insl
and
or
es
das
xchg
dec
sub
hlt
xchg
or
pop
xchg
repz
scas
jo
out
insb
popf
jbe
ret
adc
arpl
cmp
fiaddl
aad
test
mov
add
ljmp
imul
js
in
cmp
repz
mov
in
fs
dec
pop
test
lods
mov
or
mov
pusha
dec
pop
mov
lea
cmp
cmp
mov
dec
inc
mov
or
jle
aam
shrb
or
jno
dec
mov
xor
dec
sarl
dec
jne
adc
mov
mov
mov
shr
add
add
sub
arpl
sub
scas
ret
shl
fstpt
jl
jle
repz
xorb
test
mov
add
hlt
dec
adc
jae
cltd
xor
adc
in
or
lcall
dec
mov
pop
pop
cmc
sub
es
jge
cmp
int
dec
mov
ficomps
cmp
sub
jo
stos
stos
cmp
int3
push
xchg
mov
mov
mov
mov
iret
inc
push
movsl
lock
pop
call
lods
test
add
inc
lret
loopne
lahf
push
and
nop
dec
fnstenv
inc
mov
push
out
push
jnp
mov
scas
ja
nop
push
inc
inc
outsb
add
mov
sub
cs
lea
notb
out
sub
xchg
sbb
jb
cwtl
fmuls
dec
inc
outsb
push
stos
jg
xlat
jnp
pop
inc
sub
inc
or
push
lods
rorb
les
inc
inc
rcll
and
scas
enter
int3
frndint
mov
mov
mov
fst
sub
mov
or
test
outsl
cmp
jae
jg
sbb
aaa
push
lret
sub
ljmp
pop
xchg
mov
jl
in
stos
and
mov
jne
sub
test
mov
cltd
mov
push
xchg
pop
ret
out
cltd
cltd
pop
inc
mov
push
xchg
fiadds
add
jnp
js
mov
and
xor
dec
push
sbb
or
sub
out
dec
xor
shll
jle
inc
or
fisttpll
cmp
sahf
movb
aad
jae
xchg
inc
adc
mov
lock
inc
movsl
push
rcrl
adc
shlb
mov
gs
faddp
adc
lock
fbld
push
adc
or
push
mov
push
gs
pushf
stc
cwtl
jbe
les
jo
aad
jp
inc
insl
test
adc
sub
cpuid
sub
testb
add
movsl
cmp
mov
xchg
test
int3
lret
mov
sub
out
push
cltd
stos
pop
inc
push
jl
lods
int3
mov
mov
adc
adc
es
nop
cmp
ss
mov
inc
xchg
adc
dec
mov
jmp
outsl
push
ret
fists
or
jae
xor
dec
in
xchg
push
neg
int3
test
or
inc
je
cmc
imul
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
hlt
jb
mov
jle
sub
or
imul
adc
dec
insb
inc
mov
lods
inc
ds
jae
inc
xor
cmpsl
ja
dec
ss
push
sbbl
out
aam
decb
cmp
push
inc
movsb
xor
adcl
pop
push
push
sub
sbb
mov
fsubr
adc
fmulp
xchg
cmovns
xchg
cmpsb
adc
sub
repz
in
jg
mov
cli
mov
fisubl
outsl
ljmp
adc
jns
push
outsb
leave
xchg
jbe
sub
je
lret
mov
les
aas
jge
xor
adc
aam
inc
push
sbb
push
and
shll
mov
stos
cld
cmp
pcmpeqd
add
pop
and
scas
add
test
std
mov
lods
dec
je
sahf
or
fucomp
xor
pop
xor
jmp
sub
into
inc
mov
pop
xor
ljmp
pop
rcll
mov
lods
ret
lea
lret
stos
out
add
cwtl
orb
test
add
or
jae
jle
std
mov
jno
sub
int3
shll
sub
push
testl
pop
push
xchg
add
inc
pop
inc
xor
insb
aam
mov
mov
mov
mov
sbb
mov
cli
ja
jmp
or
in
cmp
mov
cmpsl
mov
movsl
mov
pushf
cmp
push
insl
jl
test
mov
or
mov
or
scas
cwtl
dec
mov
jg
inc
out
xchg
jns
xchg
aad
adc
stos
imul
add
cli
test
scas
mov
add
pop
pop
inc
push
gs
insb
inc
jl
and
nop
xor
call
clc
pop
jmp
inc
incl
lret
pop
dec
movsl
movntps
jp
xchg
dec
data16
mov
mov
pop
push
out
sub
mov
jae
ljmp
push
xor
sbb
lods
js
scas
push
adc
shll
test
test
shrb
iret
popf
shll
mov
dec
lds
xchg
sub
int
addr16
push
cmp
lcall
loopne
add
test
mov
inc
pop
mov
mov
or
add
jp
push
sub
jecxz
cld
mov
aas
inc
cmp
hlt
orl
push
xorb
out
xchg
sub
adc
pop
mov
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
fistl
insl
jl
mov
add
lods
mov
fiadds
std
mov
repnz
or
pop
aaa
mov
es
pop
ret
out
push
push
mov
into
hlt
out
xchg
and
xor
jmp
sub
add
jae
pop
lds
leave
aad
gs
insl
popf
in
push
sbb
scas
int
lods
mov
ret
inc
in
jo
mov
test
pop
or
jle
shrl
cmp
mov
push
add
call
mov
dec
jmp
add
or
inc
push
and
push
mov
lret
push
xor
out
data16
cmp
adc
mov
xchg
iret
and
push
sti
xchg
xorl
popf
mov
movsb
dec
iret
nopl
in
jp
jbe
pop
dec
cmp
dec
xchg
idivl
add
loopne
stos
lock
add
cmpsl
mov
mov
xchg
xor
hlt
pop
and
mov
and
lods
mov
cmpsl
jo
std
gs
jge
test
cwtl
jge
cmpsl
mov
mov
arpl
pop
jne
imul
vpsraw
das
pop
sbb
pushf
pushf
sub
jb
addl
add
loop
mov
jno
sarl
pop
jns
adc
mov
mov
scas
iret
sub
jecxz
sbb
mov
aaa
dec
sbb
loope
mov
sub
jle
jb
ja
arpl
mov
or
inc
mov
push
test
les
push
xor
fnstenv
leave
jg
xor
jb
fimuls
lock
int
push
mov
mov
orl
sub
pop
jbe
daa
sub
fistpl
ds
daa
cmp
and
mov
mov
jns
imul
sbb
push
dec
daa
cli
mov
inc
pop
pushf
shlb
aas
push
in
jg
popl
stc
sbb
ret
sub
in
add
cwtl
jo
mov
ret
rorb
jle
icebp
pop
idivl
push
mov
shll
or
shll
pop
sti
or
std
mov
popa
mov
sbb
popa
push
jecxz
jae
fildll
or
pop
iret
lds
movsl
nop
aaa
lret
inc
adc
inc
cld
xor
adc
inc
add
add
add
add
adc
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
insl
fdivs
jle
jl
jle
inc
jne
ret
pop
shll
jnp
fildl
xor
mov
xchg
insl
xor
cmp
mov
cli
lret
adc
orb
pop
add
fsubr
les
mov
cmp
mov
dec
stos
xchg
ljmp
loope
cmp
ret
rcll
xchg
mov
and
fld
inc
jno
shl
push
iret
aas
sub
inc
cltd
or
cmp
xor
mov
das
jns
data16
orb
loopne
sub
add
enter
cmpsb
and
jbe
jg
add
fsubl
pop
push
sti
xchg
pop
jle
fistps
pop
adc
add
fdivr
daa
int3
adc
pop
mov
push
xor
mov
insb
dec
es
popa
rcrb
xchg
aas
jns
mov
or
sbb
pop
dec
ret
in
or
adc
add
orb
cld
std
sbb
movsb
mov
cld
outsl
lret
js
adc
and
dec
add
dec
jmp
adc
push
mov
inc
fnstenv
cmpsw
enter
cmp
in
mov
mov
test
jns
pop
das
stc
jne
jecxz
stos
in
and
mov
loopne
xchg
inc
pop
or
fdivrp
mov
in
and
aam
mov
and
pop
inc
popa
and
pop
test
sub
fdivp
mov
jge
hlt
jnp
int
sub
jmp
inc
pop
sub
xchg
cmp
push
dec
inc
push
mov
cmp
xchg
jae
mov
aaa
lcall
pop
js
xchg
xlat
cmp
push
out
test
loope
lea
sbb
xor
vcvtdq2pd
xor
xlat
or
mov
popf
les
stos
cmp
pop
xchg
jl
stc
fcmovb
int3
movsl
aaa
or
fstpt
pop
mov
jp
test
sub
sub
ja
cmp
popa
mov
enter
cld
clc
xor
mov
push
das
fnstsw
addb
push
sti
mov
scas
mov
mov
add
or
rcll
xchg
jg
add
int3
and
xor
inc
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
jmp
pop
dec
or
jg
jle
sbb
or
fstpt
jbe
inc
rolb
adc
fadds
pusha
int3
xlat
aaa
mov
arpl
sub
adc
cmp
mov
test
adc
in
mov
jae
xchg
pop
dec
mov
push
xchg
data16
rcll
and
or
stc
fcmovu
fstpt
stc
lods
dec
sub
push
and
das
mov
cmp
push
aas
xchg
aam
lret
test
jle
jmp
outsl
mov
fidivs
faddl
stos
popa
ret
xchg
mov
mov
fistps
or
imulb
je
stos
addr16
aaa
mov
sub
push
lcall
push
mov
cmpsb
ljmp
jbe
pop
fistpl
inc
out
pop
sub
fsts
cmc
jl
imul
cmpb
lcall
adc
sbb
jmp
dec
add
fcomps
sbb
mov
inc
mov
adc
push
xchg
adc
mov
sbb
mov
mov
ja
xor
lods
fstpl
cmpsb
and
fsub
in
in
out
out
pop
or
or
cltd
sbb
push
je
mov
pop
sarb
movsb
int3
mov
mov
test
mov
sbb
adc
cli
stc
cwtl
mov
clc
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
ror
mov
jle
jg
jle
repz
repz
xchg
push
cmp
shl
ds
mov
sbb
arpl
cmpsb
movsb
jmp
in
jg
push
sub
rep
cli
scas
push
sbb
xor
jbe
pop
xchg
and
sbb
or
aam
jg
cmpsl
pop
stos
addr16
jae
fcmovb
aad
pop
sbb
inc
mov
inc
jle
mov
subb
ficompl
jecxz
jmp
push
lods
inc
in
mov
ret
jo
stos
ja
mov
pusha
mov
mov
clc
xor
jbe
or
xor
sub
inc
or
movsb
or
ss
fidivrl
adc
imul
or
mov
xor
insl
rorl
fdivrs
jb
notl
dec
sub
mov
outsb
mov
cmp
mov
std
cmpsl
ret
in
jmp
mov
xchg
stos
mov
adcl
in
push
dec
pop
cltd
jl
xchg
es
stos
outsl
mov
into
xchg
lods
fmuls
in
sub
clc
mov
xchg
je
mull
pop
push
sbb
mov
nop
cmp
mov
add
or
jle
lock
ds
out
lods
iret
dec
mov
test
orl
jg
cld
sub
sub
jmp
xchg
push
outsl
daa
rcll
add
sarl
push
mov
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
les
cmovne
icebp
jg
jle
faddp
in
out
stos
pusha
cli
sti
jno
jp
jno
and
lret
inc
aaa
mov
add
or
mov
and
xchg
jmp
dec
and
inc
jbe
adc
jle
add
pop
adc
cmp
mov
out
lret
mov
sbb
or
or
pop
mov
clc
cmp
jmp
cld
pop
jp
lods
push
fists
mov
mov
cli
dec
repnz
and
jg
jle
and
mov
sub
sbb
push
andb
imul
push
mov
in
movsl
jns
mov
xor
bound
pop
popa
ret
push
mov
and
lock
jp
mov
adc
repz
jl
dec
pop
sub
outsl
cmc
or
test
add
cmc
dec
popa
cs
fisttps
pop
into
shlb
popf
nop
mov
cmp
push
pop
cmc
adc
mov
sbb
xchg
or
jle
or
rcll
adc
inc
or
aas
mov
xchg
outsl
insl
sbb
sbb
cmp
repz
cmp
and
dec
fisttps
push
add
add
das
roll
gs
cmp
nop
das
scas
cmovno
lea
dec
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
jo
aaa
mov
jle
jg
jle
mov
jl
pop
loope
daa
push
inc
pushf
lock
push
out
push
mov
inc
sbb
and
aaa
loopne
cltd
pusha
mov
hlt
or
push
out
dec
out
mov
jg
mov
cmp
rcr
dec
std
jle
inc
bound
insb
push
orl
mov
movsb
sbb
or
xor
int3
xchg
hlt
shr
inc
loop
fstpl
push
sub
sar
scas
imul
cmpsl
mov
test
push
je
jl
push
cmp
sub
int3
in
loop
pop
outsl
ja
jbe
jns
fxch
pop
rcrb
pop
xchg
push
cmp
subb
adc
or
mov
mov
out
jg
dec
mov
xchg
inc
cmc
mov
sub
leave
bt
cs
jnp
rcll
jo
aam
sbb
cmpsl
xchg
sub
adc
in
xor
jle
mov
imul
push
mov
jbe
xlat
adc
mov
arpl
fnstcw
xor
negl
adc
jp
lods
inc
jle
sti
jle
and
and
sub
lea
sbb
sti
sbb
lea
cld
lock
in
pusha
fstpl
cli
add
mov
sahf
stos
outsl
pop
mov
xor
mov
push
or
addr16
dec
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
push
inc
jle
icebp
jg
jle
pop
xor
ljmp
jecxz
cli
imul
ffree
cmp
cmp
mov
sbb
ss
ret
sbb
aas
cmc
sbb
xlat
in
mov
cmp
pop
test
xchg
loopne
sub
cli
scas
rcl
push
xor
dec
mov
lret
jmp
loopne
ljmp
lea
dec
push
sbb
pop
jnp
not
mov
push
icebp
and
movsl
mov
not
inc
ret
jecxz
movl
test
cltd
inc
mov
jmp
shll
test
add
mov
inc
jbe
mov
test
fdivrl
imul
movsb
add
push
or
fldt
faddp
jmp
cmpsb
push
fwait
in
pop
mov
fsts
int
int3
jbe
inc
into
jmp
pop
jo
les
xchg
out
jns
inc
popa
das
push
dec
fcoms
fyl2xp1
insb
xchg
lods
gs
mov
xorl
or
cmp
int3
pop
ja
sti
pop
jg
xchg
divb
shrl
mov
or
pop
movsb
sbb
daa
subb
jb
in
int
lahf
in
add
mov
adc
repz
shrb
imul
sub
ficomps
mov
cmp
pushf
and
mov
movsl
or
std
jne
sbb
or
and
inc
or
pop
cld
decl
jmp
ljmp
jo
fidivs
into
stos
and
jle
jg
jle
fwait
mov
out
jns
fstl
fildll
and
jae
test
mov
and
in
mov
xor
nop
cmp
xlat
adc
cs
hlt
inc
or
add
mov
lds
in
and
rcll
std
test
ret
inc
shlb
xchg
aas
xor
dec
fistl
add
sub
xlat
ret
add
lcall
fs
jb
add
test
sbb
mov
inc
or
aaa
test
es
cwtl
lea
fs
xchg
jle
addr16
popf
push
sub
xlat
pop
add
insb
add
push
pop
jp
xor
pushf
adc
fwait
sub
icebp
mov
outsl
fmul
addl
les
jae
push
lret
ret
pop
sub
sub
push
and
sub
aam
outsl
jg
pop
xlat
in
mov
push
pop
mov
or
ljmp
dec
aas
dec
sub
dec
mov
aaa
lret
lcall
xor
add
xor
gs
mov
in
cmp
out
mov
push
adc
and
add
bound
xor
mov
push
and
cltd
xor
push
add
mov
icebp
sub
xor
xchg
mov
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
pusha
lds
arpl
lcall
xor
pushf
test
xchg
jecxz
js
pusha
lret
ja
gs
pop
and
movsb
pop
pop
sbb
mov
shrb
lret
jb
ret
mov
push
loopne
mov
lret
cmc
leave
mov
sub
loop
aas
dec
jmp
enter
mov
sti
jne
mov
shll
lds
add
shrb
mov
fdivrp
inc
lret
pop
lcall
pop
outsb
ret
cmp
frstor
mov
mov
xlat
out
sahf
adc
insb
inc
lret
sbb
sbb
stos
push
iret
cmp
inc
cmp
cli
jae
cmp
inc
out
cmp
sub
movl
xor
loopne
imul
enter
sbb
mov
cwtl
sub
in
add
subl
push
push
pop
adc
jbe
mov
cs
loope
movsb
mov
xchg
adc
mov
push
jne
cmp
xor
hlt
movsb
cli
cmc
jae
ror
gs
inc
mov
stos
or
pusha
xor
mov
sub
pop
lcall
cltd
mov
in
aas
mov
mov
or
mov
in
xchg
fnstenv
xor
mov
jae
loop
add
idiv
das
clc
and
cmp
cmpsl
inc
push
jmp
xchg
cltd
pushf
mov
insl
cwtl
stos
dec
mov
aaa
mov
pop
dec
adc
pop
dec
xchg
inc
int3
dec
loope
stc
inc
mov
movsb
cs
inc
sti
es
and
add
call
pushf
lret
dec
out
inc
pop
xor
jns
mov
les
cmp
xchg
ret
add
call
jg
out
js
movsl
icebp
mov
push
iret
aam
xchg
dec
xchg
dec
push
test
dec
ret
cmpsb
and
mov
into
sahf
nop
clc
enter
mull
pop
pusha
mov
dec
cmp
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
cli
ljmp
jl
jle
jcxz
xor
cwtl
fidivrl
inc
int
movsl
sti
daa
add
lea
xchg
cmp
and
lock
pop
xor
mov
data16
repnz
hlt
sub
inc
loop
loope
fstps
test
push
dec
std
test
add
sahf
pushf
pop
jae
fnsave
push
cmp
and
imul
cmp
push
cmp
shll
mov
push
jnp
addr16
add
sbb
pop
mov
sbb
and
mov
movsb
int
or
cli
adc
inc
cmp
jno
imul
cld
inc
cmp
shll
mov
mov
xchg
sub
repnz
cmp
rcl
pop
dec
sub
xor
cltd
sub
jl
repnz
jmp
sbb
cmp
cmpsl
dec
xor
pop
pop
cmp
popf
lahf
cld
sub
jle
test
movsl
shlb
and
in
jecxz
rcrl
lds
xchg
in
inc
mov
cmp
nop
sub
add
call
mov
dec
sbb
push
add
mov
xchg
jb
test
inc
out
cmp
jo
cmp
inc
and
jl
jo
icebp
adc
sti
push
scas
and
repz
inc
sbb
jecxz
or
inc
pop
inc
adc
mov
inc
jnp
cwtl
inc
mov
dec
or
sar
sub
fs
push
push
cmp
cmpsl
push
cld
push
insl
cmc
test
mov
mov
or
mov
pop
sarl
test
push
jl,pn
inc
aas
cltd
aam
add
pop
loope
jg
nop
aam
jns
push
dec
inc
imul
xchg
mov
adc
jns
mov
es
and
ret
jne
mov
add
jmp
mov
imul
cmp
jle
jl
jle
jg
push
xor
push
xor
sub
mov
hlt
dec
into
mov
xchg
dec
mov
mov
add
insl
add
mull
mov
inc
jae
cmp
nop
notb
popa
mov
or
push
int
js
add
out
inc
mov
fs
sti
mov
pop
cmp
mov
das
addl
stos
out
fdivs
inc
fcomps
int
and
mov
call
test
pusha
and
jae
fcompl
adc
iret
pop
pushf
add
bound
push
mov
bound
mov
sbb
or
mov
rcrb
popf
xor
dec
lcall
xor
jmp
cmp
lcall
pop
leave
outsb
fcoms
jns
push
scas
ret
imul
test
sub
mov
sbb
push
pop
inc
fld
jp
push
stos
nop
or
rorb
js
mov
insl
incb
fsts
mov
stc
xchg
insl
shll
sub
pop
jmp
mov
sub
jp
bswap
clc
fistpll
sbb
pop
into
gs
addb
push
add
test
inc
adc
add
push
xchg
ss
xchg
ja
push
movb
sbb
loopne
fldt
mov
mov
adc
mov
cmpsl
push
jnp
add
jns
ret
je
xchg
sub
loope
daa
fwait
popa
or
dec
add
hlt
pop
jne
xchg
arpl
xchg
repnz
push
lret
mov
push
sub
sbb
addr16
sub
xor
test
lcall
mov
test
lods
xchg
mov
insl
mov
hlt
test
sub
std
je
inc
mov
repnz
leave
xchg
add
pop
xchg
lret
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
aaa
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
sub
or
xlat
add
incl
add
cs
ret
sbb
lret
enter
ret
faddl
push
call
shrb
into
or
adc
cmp
and
repz
xor
xor
dec
adc
sub
test
cmp
dec
jae
lds
and
adc
mov
flds
jecxz
sub
mov
in
sub
call
into
lock
mov
mov
inc
push
fwait
rolb
mov
mov
dec
vmovaps
iret
divb
repnz
pop
mov
push
cmpsb
mov
jno
in
in
addr16
das
ret
sub
push
add
or
jo
lds
inc
mov
call
test
mov
cmc
rorb
dec
sub
push
int3
mov
jne
lea
decb
mov
pop
ficoml
in
jle
lcall
mov
add
incl
add
and
add
data16
insb
loopne
pop
jge
adc
push
outsb
or
sub
jl
dec
enter
out
xor
gs
lods
fcompl
add
pop
xor
in
push
cmovne
dec
mov
pushaw
dec
js
fs
adc
fnsave
and
lods
in
pop
jb
movl
ljmp
sbb
fisubrl
pop
and
das
inc
das
lahf
mov
out
ljmp
push
in
out
cmc
scas
xchg
addr16
arpl
sar
cltd
ja
loopne
sbb
repnz
adc
dec
xchg
scas
lock
or
repnz
std
mov
das
adc
test
nop
push
and
sbbb
cmp
mov
lret
ljmp
loop
in
jne
daa
lret
xor
pop
leave
outsl
iret
add
adc
mov
mov
push
and
mov
incl
add
cmp
mov
out
dec
out
xchg
push
scas
aam
repz
sub
xchg
jp
js
mul
sti
add
and
imul
dec
imul
cmp
add
cmpsl
lods
or
add
shl
jnp
in
sub
ja
adc
inc
push
aas
inc
fstpl
std
js
dec
inc
nop
es
inc
inc
ja
pop
or
lcall
inc
mov
test
mov
inc
xlat
fcoms
jl
cmp
aaa
out
jecxz
push
in
cmp
roll
dec
pop
int3
pop
in
sub
ljmp
movsl
sbb
mov
mov
and
test
adc
dec
ret
notb
mov
ss
adc
dec
sbb
lods
and
ds
add
cli
pop
popf
cmp
cwtl
pop
mov
cwtl
push
pop
loop
jmp
or
mov
push
lahf
in
scas
xlat
stc
mov
add
subl
roll
shlb
add
add
add
jmp
gs
or
jb
clc
xchg
adc
dec
mov
ljmp
in
push
xchg
mov
add
sahf
cmp
cli
xor
add
jne
pop
push
xchg
out
loopne
sub
lds
ret
xor
lahf
lds
nop
in
incb
and
mov
mov
lret
in
iret
dec
mov
out
add
push
xchg
inc
dec
mov
stos
inc
gs
shrl
pusha
fdivrs
adc
ja
iret
bound
ret
les
iret
addr16
imul
stc
mov
scas
pop
call
sub
icebp
std
jnp
aam
inc
mov
sub
js
stc
xchg
dec
sti
cmpl
das
add
pop
xchg
call
rorb
inc
fsub
ljmp
mov
hlt
dec
mov
ds
stos
inc
adc
adcl
xor
jae
fld1
cmp
pop
pop
jno
pop
jae
or
pop
dec
or
jp
in
arpl
add
incl
add
xlat
sbb
js
int3
aad
mov
repz
and
outsb
or
add
repnz
pusha
test
jecxz
ret
sti
xchg
inc
test
push
lret
into
add
stos
testb
rcll
inc
lahf
dec
mov
out
rolb
ficoms
rcll
insl
pop
fbld
popa
imul
mov
jns
xchg
pop
sti
jl
and
jle
add
das
stos
rorl
sub
dec
xor
dec
es
sub
jecxz
mov
icebp
enter
and
mov
insl
push
out
mov
in
push
lret
jecxz
mov
pop
fsubs
push
inc
jecxz
call
jb
push
jp
iret
pop
cli
fisubs
and
pop
movsb
repnz
out
xlat
jne
ja
pop
imul
out
pop
dec
ret
dec
push
mov
inc
fadds
pop
add
popf
xor
jno
mov
mov
jbe
add
cmc
insl
cmc
out
lcall
enter
push
xchg
outsl
faddl
add
add
add
in
cmp
push
out
mov
fidivrs
outsl
push
pop
xor
je
xor
xor
push
into
cltd
mov
sbb
push
add
int3
dec
test
hlt
lea
fucomp
js
lods
jge
jne
ficomps
int3
cmp
sub
mov
and
popa
mov
jbe
push
movsb
xchg
out
push
jae
pop
dec
inc
nop
xchg
inc
scas
mov
repnz
adc
shrl
xor
rcll
sub
stos
iret
fisttpl
sahf
or
daa
xlat
add
xchg
inc
and
pop
repz
push
xchg
popf
fs
adc
xchg
ss
sti
mov
pop
arpl
into
fsubs
sub
inc
cmp
popf
push
jbe
mov
mov
xchg
jge
mov
jns
out
jnp
stos
or
cld
inc
or
sub
push
ds
sub
xchg
xchg
dec
adc
lret
mov
xchg
loopne
jle
add
outsl
jle
aas
mov
cmp
popa
fldl
add
add
add
push
in
out
das
negb
cmp
jbe
cwtl
idivl
inc
mov
jg
jle
scas
mov
cli
mov
stos
lds
dec
mov
push
mov
dec
clc
fisubs
cmpl
movl
xchg
imul
out
xchg
jno
das
xor
scas
push
sbb
gs
inc
cmp
inc
mov
aad
and
repnz
stos
imul
and
mov
ret
je
xchg
add
jp
dec
not
sbb
ja
mov
pop
inc
mov
pop
imul
test
and
and
scas
outsl
je
dec
sbb
dec
mov
push
in
addr16
xor
and
jmp
shlb
sub
outsb
xor
dec
mov
or
test
test
sarl
test
dec
sbb
lcall
or
and
scas
sti
jle
pop
push
pop
cltd
adc
pusha
fiadds
add
add
add
jo
les
test
mov
mov
push
cmp
push
and
idivb
dec
cmp
inc
mov
cwtl
sbb
scas
sbb
sti
xchg
out
loopne
push
frstor
hlt
mov
aam
js
dec
cmpsb
dec
mov
dec
dec
mov
xchg
inc
inc
fmuls
jg
cltd
nop
inc
popa
jae
sbb
add
mov
cmp
addb
pop
inc
sub
lcall
mov
aad
and
jb
jbe
les
clc
add
lds
call
std
fimuls
mov
fstl
jge
insb
insb
jmp
cmp
sbb
movsl
and
xlat
xor
pop
sar
jo
inc
push
out
sub
repnz
jmp
lcall
cmp
mov
sbb
lahf
stc
cmp
cmp
lret
movsb
jae
mov
xchg
dec
add
ss
pop
xlat
outsl
movsb
xor
dec
push
fisttpl
sbb
lahf
fnstcw
ss
lahf
stc
bound
push
jg
filds
add
add
add
xchg
sbb
mov
js
out
and
mov
cmpsb
fdiv
xchg
fisubrl
pushf
out
adc
and
push
stc
and
adc
sbb
std
jle
loopne
cmp
or
sbb
mov
jbe
in
test
sbb
scas
add
wbinvd
cmp
enter
push
cld
test
outsb
scas
fiadds
bound
or
shlb
mov
mov
test
es
or
jge
movsl
xor
daa
mov
sti
jge
ja
lods
mov
push
sbb
fs
inc
leave
pop
or
std
arpl
sbb
mov
mov
push
dec
add
push
or
push
inc
adc
lret
add
out
mov
cwtl
push
lds
popf
aaa
adc
imul
arpl
xchg
adc
popf
enter
shll
fsts
dec
pusha
adc
sub
and
add
push
jl
jle
insb
out
adc
loopne
add
add
add
jle
out
ja
pushf
inc
sbb
inc
out
and
sbb
lahf
testl
mov
dec
pop
jmp
lret
pop
mov
xchg
xchg
xor
adc
pop
es
add
stos
insb
outsb
imul
icebp
into
icebp
jg
xchg
std
out
pop
mov
cmpsl
add
stc
stc
aaa
fadd
in
sub
and
iret
out
mov
aad
cmp
jne,pt
mov
or
adc
dec
cmc
jmp
hlt
xchg
jecxz
cmc
sbb
pushf
rcr
cld
mov
insl
jbe
xchg
mov
fs
lcall
addr16
jle
or
mov
cmpb
out
or
aad
loope
xor
scas
outsb
fs
pop
out
jp
out
ret
adc
mov
sbb
sti
xor
sbb
fsubrl
sub
mov
hlt
shlb
outsb
xor
add
fwait
mov
in
xor
adc
pop
loope
add
add
add
adc
in
imul
jg
arpl
xchg
jae
pop
lea
aad
sub
mov
and
adc
scas
push
cwtl
fwait
mov
push
cld
mov
push
sarl
xchg
loop
sub
mov
xchg
aas
inc
popf
cmpb
mov
mov
out
sub
movsb
add
or
push
mov
imulb
mov
fld
mov
dec
mov
jnp
movsb
insl
push
lds
out
testb
rol
xchg
xchg
xlat
push
jecxz
popa
fwait
out
pop
lcall
add
pop
mov
dec
das
addr16
in
popf
loop
mov
pop
js
fdivrl
pop
cmp
mov
cmp
fidivrl
adc
pusha
mov
xchg
jns
ret
pop
jecxz
push
push
sbbl
arpl
lret
adc
ficompl
aaa
data16
jne
mov
lcall
add
incl
add
xor
sahf
sahf
xor
data16
cmp
sti
or
sub
lea
int3
in
les
pop
repnz
pop
sbbl
popf
cmp
jnp
mov
sahf
arpl
adc
pop
sub
into
add
loope
mov
adc
lods
dec
scas
loop
mov
imulb
cli
lahf
sahf
xor
inc
outsb
mov
push
inc
adc
icebp
mov
mov
cmp
inc
lret
lds
push
test
gs
ror
mov
mov
inc
and
dec
cltd
je
mov
xor
fcompl
jl
fs
movsb
cmp
out
loope
aam
cmp
mov
or
cmp
mov
rorb
xchg
xlat
ja
jp,pn
lahf
imul
xchg
int3
cltd
int3
cltd
and
dec
dec
adc
jg
xchg
lret
push
dec
push
cmp
and
lods
adc
inc
loopne
out
shlb
add
add
add
jnp
sti
xchg
lahf
mov
imul
add
add
jge
decb
repz
in
andl
xlat
cmp
jle
test
push
jge
sbb
adc
stos
pop
mov
push
push
cmp
push
dec
in
mov
mov
ret
loopne
pop
sbb
sarw
out
adc
fstpt
xchg
push
adc
add
cmp
test
jno
sub
fisubs
and
jl
lock
test
adc
sub
adc
xchg
xor
popf
aaa
xchg
push
xor
fdivrl
mov
repnz
divb
stos
cwtl
or
jmp
repz
in
lea
inc
push
mov
push
jge
scas
hlt
mov
pop
xchg
jne
enter
adc
fsts
insb
inc
cmpsl
test
aam
cld
scas
mov
dec
xlat
or
test
pop
dec
in
loope
aas
es
xor
adc
cmp
xchg
add
pop
sarl
mov
jmp
incl
add
xor
scas
jmp
int3
mov
mov
popa
nop
test
mov
mov
ffreep
out
and
push
pop
cmp
inc
aas
push
lods
icebp
movsb
push
pop
out
cmp
or
adc
and
xchg
fistpl
xchg
test
mov
xor
insl
push
scas
sbb
mov
sub
mov
push
push
faddl
cmp
arpl
aad
jae
xchg
sub
dec
xchg
mov
roll
mov
loop
aam
mov
adc
jle
or
sti
mov
push
imul
xchg
pop
xchg
imul
scas
test
xor
push
xor
ret
cmp
nop
push
idivl
cmp
xchg
je
clc
push
call
div
add
pop
setge
sub
js
add
repz
std
repz
jbe
pop
pop
in
add
add
add
lret
xchg
lahf
add
cmp
jl
mov
test
mov
inc
shrb
pop
ret
jmp
pop
and
mov
add
pop
mov
testb
call
dec
dec
addb
cld
pop
add
inc
mov
imul
inc
push
gs
sub
cmc
cmpsb
inc
dec
or
jge
push
inc
add
dec
push
ret
enter
mov
stos
add
pop
jg
push
ljmp
mov
int3
cmp
jnp
sub
in
out
xor
mov
decb
add
mov
pusha
stc
add
fidivrs
ljmp
rcll
movsl
dec
fdivl
stc
fdivrp
push
test
jno
shlb
addr16
cmpl
mov
jae
lret
imul
inc
mov
xchg
pop
push
pop
jmp
push
adc
mov
add
in
sub
cmp
arpl
je
push
add
incl
add
loop
pop
cmp
popa
mov
jb
into
out
cmp
xchg
or
ror
push
cmp
mov
lea
mov
aas
lea
add
jge
sub
sbb
adc
jp
fstps
dec
cmp
addb
mov
test
mov
xor
test
mov
or
or
insb
outsl
add
aad
sarl
fldt
jmp
lahf
lock
pushf
inc
out
movsb
sbb
mov
dec
sub
push
mov
adc
xchg
push
in
out
xor
pop
xor
xor
xchg
xor
push
cli
push
rorl
inc
adc
jnp
xor
inc
repz
daa
sub
sbb
cmp
hlt
roll
enter
fwait
aad
xchg
push
out
or
iret
jge
pop
ret
push
cld
pop
jb
sbb
loopne
push
xchg
dec
push
ljmp
add
mov
mov
sub
hlt
adc
out
add
add
add
dec
aas
sbb
pop
sbb
aas
inc
pop
int
inc
in
mov
call
xor
cltd
pushf
jnp
sbb
and
mov
inc
inc
ljmp
adc
je
mov
pop
mov
leave
and
negl
jmp
shl
xor
xchg
cmp
jecxz
testl
ds
cmp
scas
insb
fwait
orl
rclb
negb
imul
sub
push
sbb
pop
mov
aaa
sub
lret
imul
pop
adc
dec
sahf
fsubs
jno
add
hlt
and
adc
mov
or
adc
int3
jp
jb
sahf
bound
inc
xchg
or
cld
inc
ljmp
jle
xor
movsb
repnz
cs
sbb
or
inc
push
push
lods
bound
imull
sub
push
sti
cmp
add
xchg
in
mov
incl
rcrl
iret
cwtl
push
call
add
imul
data16
clc
adc
les
sbbb
mov
cli
popa
inc
ret
cmp
jg
push
push
lea
sbb
mov
mov
push
xlat
ja
movsl
inc
popf
cmpsl
jbe
pop
ja
cld
repz
fstp
scas
ficoms
test
fisubs
inc
popf
cmc
sbb
jb
cwtl
jns
push
and
fwait
icebp
ret
inc
cmp
mov
inc
and
ret
pop
call
data16
xchg
ss
lret
or
cs
xor
out
jbe
mov
mov
and
xchg
bound
xchg
or
js
mov
fmul
aas
and
xor
scas
xchg
les
push
push
daa
scas
call
xor
sbb
pop
lods
test
xchg
mov
jge
push
cmpsb
int
push
add
adc
pop
xlat
aas
hlt
jmp
ret
and
and
pop
mov
enter
inc
js
add
sub
in
negl
sub
movsb
cld
iret
jnp
push
jmp
add
scas
pop
call
inc
pop
or
in
sub
xlat
cli
jae
fs
add
mov
or
je
inc
gs
js
daa
sub
loope
loop
mov
xor
dec
mov
pop
sub
decl
sbb
cmp
ljmp
cmc
ret
lret
into
stc
ret
mov
ds
push
and
pop
lds
cmp
pop
hlt
stc
jbe
clc
sbb
or
adc
mov
jae
push
dec
lods
cs
les
jle
mov
xchg
and
stos
add
mov
mov
pop
addr16
cmp
pop
idivl
addr16
mov
xor
jg
xor
jecxz
jge
sbb
jmp
push
jmp
movsl
test
loope
mov
mov
popa
mov
mov
repnz
push
sbb
inc
shll
fcomp
cmp
jg
add
mov
stc
dec
push
fdiv
les
add
add
add
cmp
popa
cli
sbb
leave
and
fnstsw
push
fdivrs
movq
fisubrl
nop
mov
data16
adc
mov
movsb
test
ljmp
outsb
hlt
popa
sarb
xor
inc
nop
shll
adc
mov
std
sbb
outsl
dec
mov
sub
imul
lret
pop
int
xor
shlb
pop
push
xchg
sub
inc
and
mov
stc
inc
out
in
stos
xor
inc
loope
test
stos
mov
test
mov
pop
testb
popf
inc
insl
push
bound
shll
insb
je
pop
dec
int
fs
adc
push
mov
dec
lods
movsb
mov
add
clc
js
addl
mov
xchg
push
ret
jae
adc
into
sub
movb
mov
pusha
test
sub
cmpsl
pop
sub
add
adc
push
push
push
mov
lret
add
incl
add
xchg
clc
inc
fcoml
sbbb
jl
lds
sti
pop
insb
fsubr
stos
pop
xor
pop
jecxz
dec
repz
sub
mov
xchg
xchg
jmp
es
mov
and
jne
fbld
xchg
je
mov
loopne
fwait
in
pop
mov
or
cmp
fwait
push
aam
xor
les
and
ja
test
xchg
mov
testb
push
enter
je
ja
int
aad
lahf
add
adc
pushf
sub
xchg
xor
push
lea
push
and
aam
repnz
dec
jl
pop
mov
xchg
pop
mov
ss
test
pop
add
jmp
and
test
mov
cmp
and
xchg
or
xchg
pop
cmp
enter
lret
and
stos
inc
jo
test
sbb
push
push
cmp
add
repnz
add
pop
lcall
les
adc
notb
add
incl
add
ss
ret
movsl
inc
aaa
test
popf
test
mov
imul
sti
xor
ja,pn
movsl
outsl
xchg
movsl
mov
fldenv
cmp
mov
js
in
xchg
inc
std
mov
rorb
mov
lcall
insb
xchg
cmp
or
lods
mov
push
mov
mov
pushf
aad
jbe
hlt
xor
pop
jmp
test
mov
clc
adc
aas
sarb
lahf
push
or
cli
sbb
push
cmp
xchg
mov
sub
int
jecxz
jno
mov
stc
and
and
out
cwtl
jns
adc
pop
sbbl
in
pop
push
lcall
jmp
repnz
ja
adc
popf
int
add
inc
fs
shl
dec
icebp
out
push
sub
cmc
loope
fwait
sub
les
sbb
sub
jecxz
add
mov
push
decl
fildll
cmp
push
in
add
incl
add
jne
jge
aas
sub
sbb
fisubs
sbb
jb
push
inc
jno
rcrb
test
jae
lds
repz
enter
dec
inc
aaa
add
stc
inc
mov
push
adc
loope,pn
out
test
xchg
les
sub
inc
lds
mov
xchg
cltd
in
push
adc
xor
orl
mov
xor
add
push
insl
shl
test
in
into
pop
in
idivl
inc
cmpl
mov
loop
in
mov
add
arpl
aas
or
jae
jmp
test
push
inc
push
fwait
mov
das
ds
repnz
icebp
mov
dec
sbb
cwtl
jmp
int
push
or
mov
inc
mov
outsl
xchg
push
or
outsb
insl
mov
pop
popa
stc
fldl
dec
popa
push
stos
add
jmp
in
push
sub
out
push
out
add
incl
add
je
push
rcr
add
mov
xchg
mov
dec
test
add
loope
test
xor
and
adc
test
cmc
sbb
xor
push
fisttpl
mov
push
fsubl
xor
pop
mov
adc
xchg
fcmovb
jo
sahf
cmp
mov
femms
push
dec
cld
pop
repz
sub
cltd
bound
cmc
in
mov
or
mov
into
lea
xchg
mov
lock
sbb
lret
xor
popf
mov
and
dec
loop
xor
mov
clc
mov
mov
dec
movsl
sti
mov
out
addr16
outsb
sbb
pop
dec
int
out
das
or
mov
cmp
inc
jbe
mov
mov
bound
les
nop
mov
inc
loop
sub
jl
arpl
in
aam
aas
add
outsb
xor
mov
lcall
out
add
incl
add
sub
call
dec
fadd
sbb
push
jb
es
out
pop
ja
dec
outsl
out
into
or
mov
imul
mov
sbb
add
sub
daa
stc
faddl
sub
cmp
hlt
mov
movsl
ljmp
ret
bound
mov
fwait
in
fadd
dec
in
inc
and
jnp
shll
jo
xchg
or
fcompl
push
pushf
sub
mov
subb
mov
push
out
push
pop
loopne
xchg
lock
sbb
inc
js
out
mov
data16
icebp
rorb
adc
fisttpll
sub
sub
dec
xchg
mov
addb
fsubrl
stos
cmpl
div
mov
idivb
lret
fdivr
out
add
cli
adc
push
jo
inc
imul
jmp
adc
adc
pushf
add
inc
ror
lock
jnp
xor
xchg
cmp
add
incl
add
pop
dec
xchg
cmpsl
push
adc
xor
dec
cltd
lcall
mov
push
rorb
mov
inc
icebp
push
xchg
inc
and
or
xchg
hlt
mov
jne
scas
push
pop
sahf
sbb
xor
push
xchg
mov
push
cmc
jne
addr16
aam
jne
xchg
pop
pop
or
aaa
ja
and
add
cmp
xor
stos
push
fimull
pop
xor
add
je
in
inc
xchg
lods
fmull
push
movsb
or
jns
fstpt
or
jmp
ja
inc
jmp
inc
test
push
pop
push
cmp
dec
dec
add
and
jae
fcompl
adc
movb
test
iret
loope
test
orl
mov
push
or
sub
adc
or
test
lret
adc
lds
ficomps
out
push
inc
jg
outsb
add
repz
fisubs
push
popa
daa
dec
icebp
add
incl
add
adc
jp
xchg
push
push
jno
push
stos
xchg
mov
loopne
cmpl
scas
mov
xchg
xchg
xor
data16
dec
in
or
insl
or
pushf
bts
movsb
test
adc
idivl
jbe
or
mov
add
inc
push
addl
cmp
inc
pop
xchg
and
orl
imul
or
lret
ss
call
cmp
jp
lret
fsts
cwtl
mov
jo
rorl
adc
or
xchg
repz
mov
jbe
pop
xor
mov
xchg
sub
pushf
mov
xchg
mov
cmp
xor
push
or
push
mov
cmp
pop
faddp
test
jno
lret
imul
fbstp
call
fdivrp
add
and
push
cwtl
add
out
sbb
dec
adc
iret
dec
repnz
incl
add
or
cmp
jb
popf
out
or
sub
insb
ficomps
stc
xorl
push
movsl
popa
test
repz
loopne
add
aas
mov
sbb
adc
inc
repnz
or
jl
lods
dec
fwait
stos
and
inc
cmp
sub
lahf
int3
or
pop
jl
roll
inc
jae
adc
mov
jp
mov
dec
imull
dec
mov
loop
adc
mov
aad
insl
or
mov
or
or
outsl
push
xor
push
cmp
rol
jno
push
out
lcall
lods
test
inc
inc
xchg
shrl
repnz
push
push
cli
sub
push
aaa
aaa
dec
fwait
pop
inc
xor
fwait
sbb
jne
imul
aam
xor
cmp
sbb
add
addr16
out
push
popf
clc
push
add
not
cwtl
mov
pop
movsb
jo
add
scas
push
repz
cmc
scas
sub
mov
dec
repz
incl
add
inc
out
fucom
adc
pop
or
jmp
rorl
dec
pop
mov
jge
lock
scas
jo
jle
bound
stos
dec
call
dec
shlb
add
test
fbld
sbb
rcll
mov
es
add
icebp
mov
lea
pop
mov
xor
lret
clc
sbb
adc
adc
enter
cmpsl
sahf
inc
sbb
dec
inc
nop
daa
imul
movsl
shlb
inc
adc
or
lock
jp
jmp
stos
enter
jmp
fs
mov
in
popa
push
sti
mov
js
xchg
dec
jns
push
push
insb
xchg
xchg
xchg
fimull
push
dec
and
in
iret
stos
sti
push
cmp
cli
mov
dec
xor
dec
les
cmpxchg
in
imul
sarb
outsb
xchg
jmp
add
pusha
rorb
cmpsb
mov
cld
push
dec
hlt
add
incl
add
es
loope
stos
xchg
push
popf
cmc
std
jecxz
imul
adc
mov
and
inc
popf
or
loop
inc
sbb
scas
repnz
xchg
les
jle
gs
mov
mov
mov
mov
dec
jmp
mov
lret
mov
hlt
popa
lret
jecxz
cmp
sbb
lcall
pusha
jne
dec
repz
imul
push
xchg
mov
inc
inc
cs
xchg
shrb
pop
addr16
cmp
js
cs
out
mov
mov
cltd
repz
jnp
lea
rcll
inc
mov
std
leave
pop
call
inc
es
in
and
lock
lcall
and
and
sbb
adc
inc
pop
mov
popf
push
adc
xor
lahf
xchg
gs
int3
sub
insl
push
ds
jl
and
push
add
push
add
gs
testl
push
push
dec
cmc
add
incl
add
popa
sbb
bound
ljmp
mov
lods
xor
mov
mov
idiv
push
and
mov
xor
xchg
pusha
les
leave
std
call
push
mov
or
imul
je
sub
mov
mov
imul
std
addb
and
popl
jnp
dec
xchg
inc
sub
outsb
int
icebp
icebp
cmp
pushf
negb
js
lds
pop
mov
enter
daa
xor
xchg
xchg
push
imul
lods
test
or
int3
aaa
add
jne
repnz
adcl
sbb
in
outsb
mov
mov
test
dec
pop
jecxz
scas
in
sbb
out
mov
mov
fdivr
push
rcll
dec
push
mov
jne
xchg
add
xchg
mov
mov
pop
das
dec
sub
lock
testb
incl
add
cmp
sub
xchg
int
inc
mov
add
shll
iret
add
jno
inc
sahf
sub
ds
icebp
pop
fnstsw
sbb
pop
jb
dec
out
push
gs
out
xlat
fcmovb
inc
divb
in
sub
in
jb
adc
imul
out
xor
lahf
and
inc
ljmp
inc
pop
enter
shlb
sub
inc
rcrl
xchg
arpl
orl
jl
push
sub
mov
jmp
xchg
ja
mov
mov
fwait
dec
test
int
loope
iret
pushf
popf
fimull
shll
mov
imulb
outsb
into
xchg
cmpsl
cwtl
dec
or
clc
inc
mov
cmp
and
and
leave
in
popf
sti
xlat
loopne
xchg
jb
mov
nop
xchg
xor
bound
repnz
mov
add
add
mov
fucomi
xor
lret
repnz
testl
add
lods
sub
test
xchg
mov
das
and
mov
push
stc
and
out
mov
loop
pop
xor
pop
mov
jae
stos
add
std
inc
or
mov
and
push
jb
lahf
ja
inc
jecxz
jle
subl
pop
lea
lret
cmp
and
adc
lcall
inc
lcall
lock
mov
add
add
pop
out
cmp
popf
push
push
mov
xor
incl
xchg
sub
xchg
repnz
rcrl
int
scas
divl
subl
rcll
sarl
cs
call
xchg
cs
xchg
xor
or
gs
popa
rcl
arpl
and
dec
pop
adc
aas
lods
or
cltd
jmp
js
xchg
xchg
lds
xchg
bound
mov
add
push
inc
pop
jns
aas
loopne
sub
es
inc
clc
add
incl
add
das
mov
mov
add
bswap
sub
xchg
mul
adcb
pop
rorl
add
jge
xchg
lret
in
notl
xor
sub
mov
push
in
fcmovnu
jne
xor
xor
outsb
and
inc
xor
mov
addl
mov
pusha
data16
and
push
push
jge
jnp
stos
in
inc
out
call
xchg
repnz
xor
fwait
inc
or
rcll
or
cld
inc
ds
xchg
or
jmp
cwtl
aas
add
addl
pop
mov
adc
sub
lahf
or
daa
add
sub
int
mov
es
mov
dec
xchg
push
pop
ss
push
mov
addb
cmp
or
lock
imul
sub
sbb
add
jnp
mov
cmp
fldl
add
incl
add
mov
dec
mov
insl
movsb
int
fcoml
add
es
xor
popa
jno
and
dec
push
ret
sub
or
ds
push
cwtl
outsb
push
enter
mov
xchg
mov
sbb
stos
mov
mov
into
scas
ljmp
pop
sbb
jno
sar
add
add
push
mov
aaa
arpl
xchg
jp
addr16
fs
in
lock
or
jge
shlb
sahf
std
imul
jp
cmp
outsb
or
clc
ljmp
jp
out
popf
or
or
addb
pop
lcall
test
adc
push
in
stos
mov
xor
xchg
lret
jmp
jecxz
lret
adc
inc
into
and
ret
out
sub
test
aad
fwait
inc
lahf
lds
inc
leave
xlat
pop
dec
mov
or
sbb
cmc
idivb
xchg
mov
imul
gs
fs
add
incl
add
pop
push
mov
in
push
xor
or
jmp
lret
pusha
shrb
xor
negl
dec
mov
out
xchg
xorb
imul
sahf
xor
pop
out
mov
mov
sarb
mov
cmp
enter
popf
mov
mov
mov
dec
fmulp
popa
dec
es
shll
lcall
aam
addb
sbb
mov
out
sub
dec
orps
push
std
mov
int3
push
dec
dec
xchg
out
mov
out
dec
fistl
inc
fsubrl
ljmp
cmp
insl
rcrl
loopne
nop
adc
sub
sub
push
dec
sub
ret
jg
xchg
cwtl
sub
fldt
test
fcom
cmp
xor
sub
bound
lret
push
or
sbb
pop
inc
insl
sub
fdivs
add
fdiv
mov
mov
add
incl
add
dec
in
fidivrl
mov
shrb
je
jle
xchg
pop
int3
std
mov
sub
cmp
les
pop
add
cmpsb
ljmp
and
cli
cmpsb
mov
mov
fs
popf
addr16
outsb
push
test
xor
push
or
out
addl
test
jbe
sbb
mov
or
sbb
icebp
inc
pop
iret
push
xchg
push
mov
jae
iret
jp
cmpsl
inc
push
hlt
sahf
adc
mov
ss
jle
mov
mov
test
into
test
movsl
mov
rol
aaa
pushl
inc
cmpsb
cmp
pop
push
fisubrs
add
fcmove
into
jecxz
ret
flds
out
ljmp
mov
in
leave
sbb
mov
inc
mov
popf
je
adc
test
aas
dec
in
add
and
push
dec
xor
dec
xor
test
mov
fiaddl
cld
add
incl
add
fwait
mov
mov
mov
pop
roll
loopne
sahf
repz
push
test
and
cmp
mov
inc
xor
inc
push
sub
nop
out
or
lret
ret
aam
mov
call
push
push
jns
pop
mov
push
adc
stos
fmuls
pop
lret
push
mov
sub
push
sti
sar
sahf
jp
addr16
daa
push
pushf
shrl
push
clc
lods
mov
cmp
int3
cltd
pop
dec
mov
lcall
xchg
push
mov
fsubrl
ljmp
repz
lods
loope
out
push
dec
dec
imull
outsb
xor
insl
push
adc
scas
insl
mov
leave
popf
jns
inc
dec
inc
lds
std
rol
cmpsb
pusha
imul
pusha
add
mov
cmp
pop
loopne
xchg
int
push
hlt
rcr
in
ja
sbb
adc
shl
subl
mov
jmp
imul
lahf
repnz
lea
add
incl
add
addr16
dec
repz
dec
add
jp
or
fbld
or
jno
mov
pusha
int
in
xor
mov
inc
imull
mov
iret
fucomp
adc
scas
sbb
jecxz
adc
xchg
push
push
jmp
ret
test
fs
sub
xlat
int3
fs
sbb
pop
cmp
add
ficoml
aas
xchg
movsl
in
xlat
call
push
and
sub
test
test
clc
lahf
jo
sub
mov
popf
push
sbb
jmp
mov
push
test
lret
test
and
mov
ret
lea
dec
and
fmull
dec
pop
arpl
out
pop
sarb
dec
dec
notl
sbb
enter
xchg
lods
lret
int
push
out
cmp
neg
push
mov
and
iret
mov
and
add
nop
mov
add
pop
lods
pop
cli
cmc
cmpsb
lret
testl
add
int3
jecxz
adc
cmp
std
mov
aad
gs
shll
shrb
xchg
cmc
mov
jns
stc
fbld
shlb
adc
jge
out
ret
pop
fsubrl
and
lret
dec
fisubs
cmc
in
mov
xchg
lahf
lahf
lcall
jo
sub
mov
aam
dec
or
fwait
dec
fisttps
dec
or
xor
int3
cmc
ror
push
cltd
jbe
outsl
testb
inc
ret
xchg
pusha
mov
mov
add
stos
outsl
jne
or
addr16
jmp
std
push
mov
clc
ret
lahf
loopne
push
outsb
je
ss
cmp
shl
sub
jne
dec
outsl
add
rorl
dec
pop
ja
ljmp
push
mov
fistpll
int3
inc
sahf
mov
mov
dec
push
add
stos
cltd
inc
popf
jae
out
xor
aas
incl
add
add
add
pop
cmp
sbb
xchg
stos
fwait
stc
scas
pop
cmc
mov
add
mov
jo
pop
arpl
test
subb
popf
dec
insb
adcl
or
cmp
andb
cltd
sub
sub
mov
insl
out
in
dec
idiv
sub
and
popa
stc
pop
add
pusha
dec
add
dec
sbb
sub
sbb
cld
cmc
jcxz
stc
icebp
cmp
sbb
push
shlb
pop
bound
bound
add
mov
inc
cmp
mov
ret
mov
push
hlt
sub
shrl
push
adc
mov
das
js
and
xchg
and
or
cmp
in
loop
and
jecxz
sbb
loope
fwait
insb
call
sbb
fsqrt
cmp
cli
outsb
add
cmp
pop
pop
cs
lods
pushf
fnstcw
sub
push
jg
aad
negb
jl
add
aam
int
aaa
das
aam
lock
add
add
add
gs
mov
cli
pop
jge
shrb
sbb
icebp
xchg
xor
arpl
pusha
inc
xor
or
or
sub
out
loop
in
sub
out
add
push
outsb
ret
or
in
push
scas
cmp
out
mov
repnz
repz
in
mov
cmp
pusha
enter
or
ss
cmc
out
dec
mov
cmp
loope
xlat
cmp
adc
mov
xchg
mov
int3
and
sub
fisubs
nop
imul
scas
shll
lahf
cmp
sub
push
jecxz
jecxz
mov
push
mov
jb
jg
std
add
mov
pop
pop
add
fs
stos
test
repz
dec
pop
stc
dec
mov
mov
inc
icebp
mov
xchg
mov
cmp
enter
push
mov
adc
add
pop
arpl
addr16
sub
lock
add
add
add
add
and
ja
lcall
mov
mov
mov
cltd
sbb
pshufw
nop
mov
mov
cmp
cmp
daa
jecxz
in
inc
xchg
mov
jl
pop
add
cli
push
outsb
pop
mov
nop
jp
mov
ret
pop
outsl
mov
in
lods
les
rolb
fwait
sbb
mov
mov
cmp
cmp
xor
inc
aaa
inc
loop
inc
mov
jo
mov
leave
mov
shl
mov
fs
loopne
xchg
loop
inc
jmp
cld
jb
dec
fsubrl
add
jmp
mov
dec
sub
cmp
scas
mov
testb
and
mov
cld
das
pushf
mov
testl
sbb
call
mov
mov
inc
and
out
xorl
mov
out
cmp
cmp
pushl
xchg
xor
push
psubsw
add
add
add
add
and
test
repz
inc
gs
or
nop
fidivl
inc
popf
andb
sahf
inc
fwait
mov
mov
add
js
popa
enter
shrl
and
test
loopne
xor
repz
sub
mov
clc
cltd
mov
jnp
jl
cmpsb
mov
daa
xchg
ss
je
mov
nop
rcrb
int
push
pop
and
sub
fldl
lds
mov
imul
jge
iret
ja
jle
dec
push
loop
add
dec
mov
inc
les
fldt
lea
stc
sub
or
lods
jae
inc
hlt
inc
mov
lahf
or
mov
int
inc
cmpsl
dec
inc
imul
dec
inc
mov
dec
test
xchg
mov
addb
in
dec
fisubrl
fistl
cs
scas
repz
and
add
push
scas
mov
in
xchg
incl
add
or
loopne
or
push
stos
dec
push
outsl
out
out
test
xchg
data16
jne
jo
nop
imul
ret
inc
adc
test
test
or
mov
je
jl
jo
pop
das
xor
dec
enter
mov
xchg
and
ret
fs
movsl
dec
add
int3
dec
mov
cmpb
fsubp
xchg
in
jg
stos
sub
mov
cmpsb
mov
iret
lock
inc
movsb
and
push
out
adc
xchg
mov
orl
movsl
push
lret
int3
shlb
aam
out
movsb
test
push
push
dec
icebp
pop
jo
popa
or
lods
jge
fisubs
push
cmp
xchg
ja
and
stc
pusha
add
jae
xor
xchg
sub
add
imul
icebp
or
inc
loopne
cmp
je
push
add
mov
rcr
mov
push
mov
push
fsubp
mov
aaa
xchg
and
movsl
mov
mov
mov
popf
mov
add
add
add
add
push
cmpsl
dec
xorb
stos
xchg
xchg
jmp
orb
outsl
fstpl
mov
fldenv
adc
ret
iret
xor
sub
lods
mov
xchg
leave
or
mov
incl
in
dec
sub
cmp
sub
nop
mov
sub
cmpsb
lods
or
sbb
sub
jo
pop
scas
imulb
repz
pop
mulb
xor
shlb
dec
add
fldcw
xchg
sbb
repnz
dec
and
rolb
add
jne
mov
sub
jne
mov
or
mov
int
adc
mov
dec
and
jge
daa
cmp
das
add
cwtl
lock
ss
cmp
xor
push
mov
add
popf
adc
leave
mov
sub
push
das
push
pop
cs
cmp
imulb
stc
cld
out
mov
aam
add
adcb
add
fdivl
mov
xor
add
add
mov
inc
es
add
cs
fistpl
testl
mov
sbb
adcl
mov
adc
push
xor
and
pop
dec
and
es
iret
fidivs
push
cmp
popl
sarl
sahf
dec
fs
push
imull
movsb
iret
in
push
dec
pusha
lock
jle
xor
repz
mov
in
jns
mov
jmp
std
js
iret
jns
leave
xchg
data16
sbb
xchg
sub
xchg
sbb
jns
jb
push
cld
adcl
sbb
add
or
push
arpl
inc
push
jo
xchg
test
sbbb
test
jmp
inc
mov
jmp
push
mov
add
std
jmp
scas
aam
in
add
add
add
mov
mov
lods
imul
mov
push
add
incl
add
lods
push
xor
stos
inc
cmp
lret
xor
cmp
leave
sbb
push
ljmp
xlat
pop
sarb
aad
cmp
xchg
in
idivb
xor
mov
sbb
inc
inc
pop
push
push
ja
rcrl
jge
cmp
lods
add
leave
add
test
xor
sbbl
in
xor
xchg
jp
mov
cmpsb
mov
int3
xor
cld
mov
das
sti
jecxz
orb
xchg
int
mov
xrelease
mov
sbb
out
gs
test
mov
movsl
adc
jae
sbb
dec
mov
dec
jge
test
push
sarl
cmp
shlb
add
repz
xchg
push
lret
rcrb
xchg
inc
adc
adc
test
js
out
push
cli
xor
inc
sub
and
mov
popf
aad
mov
mov
test
out
xchg
sub
scas
or
cmp
call
pop
add
incl
add
add
adc
in
xchg
mov
les
sbb
mov
cmp
dec
sub
mov
scas
je
movsl
inc
push
inc
and
sub
js
cld
pop
adc
ja
pop
rolb
adc
mov
subb
xchg
mov
shll
mov
aad
push
lahf
inc
sbbb
lock
cmpsl
outsl
mov
jmp
aad
outsb
lods
cli
fmuls
imul
lret
div
scas
ljmp
movl
sub
ljmp
fstps
ret
fwait
lret
mov
je
jae
adc
repnz
negb
test
adc
outsb
push
mov
jmp
jge
or
xchg
xor
lahf
pop
adc
mov
pop
fistl
xor
xor
mov
jecxz
jae
ja
push
xchg
clc
jl
inc
add
hlt
fbld
in
push
or
add
add
add
popa
cmp
mov
mov
dec
push
pushf
and
fcmovnbe
xor
push
cmp
out
int3
scas
shll
xor
int3
jg
fst
test
inc
mov
in
add
sbb
stos
cmp
mov
jnp
dec
adc
ret
jnp
sub
bound
push
lcall
pop
mov
pop
adc
ljmp
clc
stc
mov
xchg
mov
xor
mov
push
movsl
pop
xor
movsb
shrb
pushf
inc
insl
sub
lcall
setns
inc
fcmovnu
pop
repnz
repnz
or
pop
nop
sbb
xor
sbb
push
repz
pop
dec
mov
cmpb
push
xor
icebp
icebp
jnp
ja
dec
or
push
and
test
add
adc
mov
mov
movsl
fucomi
notl
cmp
lock
sar
dec
rcrb
add
add
into
fwait
add
mov
or
add
add
js
sar
daa
mov
cmp
lret
xlat
ds
inc
pop
dec
pusha
or
jg
movb
sbb
rcrb
pusha
fsubrs
std
pushf
adc
inc
dec
inc
les
mov
pop
aaa
inc
xor
imul
icebp
mov
adc
mov
sub
mov
sti
ljmp
scas
jb
ja
clc
mov
jns
outsl
loopne
sbb
icebp
mov
fcompl
xor
fs
rcrl
fdivrs
daa
les
inc
bound
ret
in
notl
cmp
mov
dec
and
xor
iret
cmp
dec
stos
mov
jge
or
pop
lcall
cmpl
std
mull
fwait
pusha
mov
add
xchg
mov
inc
xor
cmp
lcall
lcall
daa
add
xor
mov
pop
sarb
in
inc
cmp
or
add
add
add
lret
cld
mov
and
push
test
test
addl
std
xor
ret
lret
xlat
scas
lret
sbb
fidivs
jle
lock
xor
cmpl
inc
mov
xor
xchg
sbb
xor
inc
mov
in
xchg
insb
ds
inc
xor
xchg
es
pop
or
push
pop
inc
jl
cmpsb
les
jp
and
cld
fmull
aaa
fwait
add
popa
std
pop
and
or
and
xor
in
mov
pusha
mov
jl
inc
inc
inc
lret
lea
add
pushf
sarb
mov
addr16
lret
outsl
xor
adc
cmp
cmp
cld
dec
stos
imul
mov
iret
jp
or
add
movq
call
cmp
push
inc
shrl
mov
mov
lcall
and
add
add
inc
out
aas
mov
rolb
frstor
or
add
add
add
add
push
xchg
add
jge
aad
lcall
inc
lcall
pop
push
push
pushf
test
insb
pushf
push
in
dec
pusha
int
shll
and
int3
out
pop
into
dec
inc
pop
scas
lods
jecxz
cmp
imul
push
or
and
and
mov
sbb
cmp
fists
and
clc
jmp
int
pop
sahf
orb
pushw
insl
mov
ss
mov
sbb
inc
aam
dec
es
fbstp
mov
adc
sbb
shrb
incl
xchg
xor
sbb
test
sub
stos
outsl
aad
sbb
imul
fldt
and
sbb
andl
imul
inc
ja
and
xchg
adc
xor
daa
fisttps
add
bnd
dec
leave
and
xchg
int3
mov
or
add
add
add
cmp
jne
dec
push
xor
sub
loope
int
std
mov
add
shll
and
dec
pusha
clc
stos
cmp
mov
mov
addl
mov
leave
push
sbb
sahf
je
movzbl
outsl
aaa
xchg
jl
jo
sti
cmpsb
pop
jbe
nop
cs
inc
cmp
aas
sbb
pop
sarb
push
cld
ljmp
mov
mov
jo
lret
cmp
cli
popa
das
mov
ret
mov
and
add
sbb
mov
sub
in
jmp
add
adc
fsubs
nop
int3
pop
pop
push
scas
stos
loopne
or
xchg
stc
loopne
cmp
jb
jg
bound
enter
sarl
repz
adc
cmpsb
sub
aam
xchg
cmp
jmp
xchg
lret
sub
mov
fcmovb
mov
sti
dec
pop
pusha
inc
ret
jecxz
ss
mov
add
in
out
ja
filds
loope
pop
xor
add
dec
out
inc
or
mov
jle
jns
xchg
rcl
push
xlat
out
xor
mov
cltd
and
repz
insl
inc
clc
out
push
bound
fbstp
add
scas
mov
lods
js
mov
jbe
hlt
dec
ret
xor
push
aas
sahf
cmp
inc
stc
dec
push
sbbl
push
mov
out
push
mov
ror
push
sub
push
scas
sti
ffreep
out
outsl
call
andb
insl
xor
fnstenv
shr
out
shlb
out
sbb
sub
out
rcrb
mov
adcb
cmp
fisttpl
setge
shr
cs
xor
xchg
popl
xchg
sahf
push
pusha
aad
mov
ret
gs
add
xchg
imul
push
rcll
add
add
pop
in
inc
push
or
push
das
xchg
xor
add
incl
add
pushf
gs
mov
insb
pop
jge
and
fists
pop
jmp
shrl
ljmp
adc
cmc
sub
mov
mov
pop
int
sarb
neg
inc
ss
pusha
int3
hlt
int3
push
test
jmp
and
pushf
mov
std
mov
cld
and
sub
mov
sahf
fs
dec
ret
fcomps
inc
dec
loop
int
mov
mov
mov
jmp
mov
inc
or
jecxz
call
dec
cmp
subl
popf
jnp
jle
xor
mov
cli
lcall
dec
sbb
jmp
and
mov
loop
mov
loop
xchg
stos
inc
jg
cmpsl
loopne
mov
pop
mov
mov
test
shrl
mov
outsl
iret
sub
in
ljmp
add
jg
neg
pop
daa
inc
xchg
xor
incl
add
inc
test
cs
mov
inc
fildl
aad
sbb
stos
or
push
xchg
es
popf
popa
gs
shl
jo
sbb
rcll
dec
sub
iret
adc
dec
fstl
arpl
cmp
inc
ret
in
mov
sbb
sbb
cs
in
xchg
xchg
mov
insl
lahf
inc
jge
mov
push
and
cmp
rcl
xor
inc
push
roll
mov
cwtl
fmuls
sub
outsl
ljmp
ds
scas
lods
cmc
mov
test
lcall
cmp
add
push
repnz
or
movsl
and
outsb
scas
inc
jbe
dec
inc
push
mov
lock
cmpsl
xor
jle
popf
mov
andl
hlt
lds
das
xchg
shll
push
pop
mov
inc
js
mov
mov
push
mov
leave
orb
out
add
sti
jg
cmp
je
aaa
and
add
add
add
lods
jl
je
mov
dec
arpl
shrl
test
sbb
ret
xchg
push
sbb
xchg
popa
lcall
xchg
decl
jg
jge
call
jb
cmc
out
adc
inc
int
les
add
imul
xor
adc
leave
mov
pop
add
xor
xchg
inc
clts
sbb
test
xor
fidivrl
jno
push
or
push
jnp
cmc
adc
pop
mov
clts
sub
loopne
pop
add
mov
inc
push
xor
ds
rclb
push
inc
xchg
jg
sahf
xchg
aam
xor
jae
popa
push
subb
push
add
push
dec
adc
cmp
xchg
je
dec
rclb
inc
stc
dec
cmpsl
adc
fmuls
push
pop
insb
stos
jge
mov
add
jnp
fstp
fcompl
pop
jle
je
adc
add
add
add
xor
aas
cmpl
ret
arpl
jae
imul
xor
sahf
jp
cmp
xchg
ljmp
or
rcr
push
cmp
xchg
je
loop
out
or
sub
movsl
sub
rcll
in
xchg
test
mov
mov
mov
pop
mov
push
addr16
mov
jecxz
insl
and
fwait
scas
hlt
and
cmpsb
cmp
data16
xor
andb
jl
cmp
jmp
into
jg
ss
fidivrs
jmp
jmp
arpl
adc
filds
xchg
cmp
adc
fistpll
jge
clc
dec
mov
leave
fisubrl
adc
stos
mov
or
cmpsb
pop
pop
xchg
enter
cmp
jbe
flds
push
sti
popa
sbb
and
or
adc
idivb
mov
xchg
out
mov
mov
jno
std
outsl
mov
add
push
pop
adc
adc
add
add
add
sbb
loop
int
loope
popa
dec
es
xor
mov
pop
mov
ret
adc
push
cld
rep
cmp
sub
flds
in
mov
cld
test
lods
sub
nop
data16
fwait
sti
pop
or
rcrb
out
push
push
mov
cmp
and
movsl
mov
mov
imul
pop
ret
out
mov
pushf
ret
jmp
in
and
pop
arpl
les
call
jns
sbb
push
jl
jmp
pop
pop
sub
fcmovb
push
hlt
out
mov
imul
mov
inc
loopne
add
fcmovu
aad
icebp
or
fwait
outsl
in
and
mov
mov
stos
sub
movsl
sahf
hlt
lods
xor
cmp
inc
pop
mov
xor
jl
test
mov
mov
shlb
andb
add
nop
idiv
mov
add
jmp
fldl
pcmpeqd
add
add
mov
jbe
inc
ss
fists
mov
sub
mov
dec
in
pop
mov
gs
je
mov
sbb
jp
test
add
mov
lcall
xchg
sbb
les
imul
out
sbb
rcrl
pop
mov
mov
or
xor
push
xor
xor
rorl
sbb
pop
cmp
daa
sbb
cmp
add
jo
mov
mov
mov
fisttps
sbb
dec
inc
lods
in
test
xchg
xor
adc
pushf
pop
jo
cmpsl
inc
aaa
mov
addr16
fwait
out
dec
jne
scas
push
pop
xchg
out
xchg
cwtl
sub
dec
movd
scas
call
pop
xchg
in
adcl
in
sahf
test
push
push
push
xchg
xchg
lret
outsl
push
xor
add
add
xor
test
inc
mov
add
incl
add
out
aaa
inc
jno
pop
daa
add
fstpl
popa
sarb
pusha
std
insl
dec
into
pop
dec
into
aas
xor
xor
mov
repz
jns
add
pusha
push
mov
mov
xchg
inc
test
jge
inc
cmc
push
jle
arpl
test
jae
int
sbb
stos
rolb
pop
ret
lock
mov
idivb
fwait
xchg
cltd
sahf
rcrl
scas
adc
and
cmp
out
in
movsl
ss
lcall
and
xor
jp
jo
sbb
mov
push
xor
sti
cld
movsb
xchg
mov
ret
enter
out
jo
cltd
adcl
out
push
xchg
test
stos
jmp
or
out
pop
xchg
jecxz
jno
ds
inc
xor
lods
inc
ljmp
push
and
dec
lret
dec
adc
dec
cli
inc
jg
int
xchg
lods
or
lcall
incl
add
mov
insl
shlb
fwait
jle
cmp
stos
pushf
lds
cmp
push
add
inc
xor
xlat
shr
push
pop
shll
addb
sub
repz
arpl
scas
jae
fcoms
push
fiaddl
mov
mov
push
push
daa
outsb
mov
repnz
lahf
push
ljmpw
aas
sbb
mov
jmp
xor
or
subl
lods
les
push
icebp
jbe
frstor
sub
enter
loope
incl
pushf
nop
push
jo
into
mov
or
aad
jmp
in
movsl
cmp
adc
adc
sbb
inc
out
out
dec
repz
add
sbb
adc
divl
js
jno
lcall
mov
fxch
add
cmp
test
movsl
fwait
or
mov
stc
mov
data16
cmp
add
xchg
std
cmp
jle
fistpll
ss
cli
pusha
in
sub
add
incl
add
sub
pop
bound
dec
popf
pop
cmp
jo
or
cs
orb
bound
cmpsl
daa
mov
sti
sub
and
xlat
sbb
jns
imul
push
adc
shll
push
test
xchg
insb
jle
fsubrl
inc
cmp
leave
lods
mov
add
lea
cmp
popf
pop
pop
idivb
pop
hlt
lahf
sbb
mov
and
in
sbb
pop
imul
mov
fsub
jbe
pushf
pusha
pop
add
dec
jge
push
adc
xor
xlat
sbb
leave
sub
cmpl
imul
sub
sub
or
mov
push
test
lahf
pop
inc
pop
mov
mov
inc
mov
sbb
psraw
xor
xor
movsb
and
aas
cmpsl
cmpsb
ret
mov
cmp
sbb
add
iret
xlat
ficompl
inc
repz
pop
daa
pop
add
incl
add
sub
clc
mov
enter
sub
fbstp
jge
fsts
mov
xchg
adc
jnp
xchg
cmp
clc
int3
loop
jnp
movsl
popa
les
adc
out
jg
and
clc
mov
daa
imul
sbb
mov
dec
outsb
pushf
loopne
xchg
adc
cmp
mov
popa
jne
and
stos
and
scas
and
imulb
mov
cmpsl
add
pusha
cmpsl
cli
pop
or
cmc
imul
lret
dec
mov
xchg
push
pop
mov
mov
jecxz
cmp
inc
mov
stc
sub
dec
sbb
push
sbb
imul
jmp
fidivl
mov
pop
mov
lock
sbb
lret
lock
jno
sti
fwait
sub
dec
mov
shll
mov
add
sub
iret
outsb
jmp
push
test
and
sbb
add
add
add
mov
xchg
aam
jbe
mov
in
data16
or
shlb
lock
jmp
xlat
mov
imul
pop
das
sbb
flds
aam
cwtl
mov
mov
dec
fcoms
out
idivl
out
fldl
xchg
int
idiv
ja
ret
inc
insb
or
pop
push
or
rolb
addr16
pop
jge
push
bound
mov
lods
push
pop
pop
jmp
inc
into
hlt
mov
or
ds
movsl
lock
sub
in
inc
ds
adc
out
cmpsb
xchg
inc
mov
pop
dec
ds
out
xor
ret
test
lret
xchg
jns
jo
mov
jns
scas
mov
jle
aaa
sbb
mov
push
lods
cmp
or
push
loop
pop
clc
pop
insl
orl
hlt
push
push
shl
mov
xchg
push
sub
xor
sbb
std
sbb
stc
cld
or
in
mov
add
add
add
pop
ja
add
std
push
cmpsb
shll
sbbb
sub
fidivl
jo
xchg
outsl
movsb
arpl
sahf
inc
push
test
fwait
sbb
xor
test
mov
arpl
cli
flds
jns
nop
jge
movq
lret
mov
xor
or
mov
mov
mov
rcrl
rep
add
or
mov
pop
in
cs
dec
rcll
pop
mov
jae
mov
popa
inc
movsb
aam
test
push
ljmp
pop
fildl
dec
mov
in
subb
mov
cs
dec
mov
inc
test
pop
pop
mov
add
jns
fwait
and
ljmp
jle
and
or
xor
inc
dec
jecxz
mov
push
popf
bound
das
xchg
notl
jle
aaa
sbb
add
pop
test
scas
repz
cld
adc
push
frstor
add
incl
add
cld
adc
addr16
fs
inc
mov
dec
or
pop
xchg
lea
in
jbe
sbb
mov
cmpsb
sbb
loopne
xor
fcoml
enter
fdivl
repnz
jno
xchg
xchg
gs
push
jnp
aas
add
add
out
aas
xchg
adc
sub
sbb
xor
sbb
test
add
stos
cmp
mov
push
dec
mov
push
inc
popa
daa
push
decb
stos
stos
test
sbb
xor
dec
lods
sbb
sub
mov
push
push
xor
sbb
jne
xchg
test
mov
mov
popf
sbb
jno
test
inc
das
in
outsb
mulb
js
push
popa
lahf
push
call
mov
push
movsb
in
adc
cmp
lea
pusha
mov
and
negl
cs
cmpsb
pushf
sub
pop
sti
scas
leave
adc
mov
mov
dec
pushl
popl
add
incl
add
call
dec
lock
insb
add
adc
push
stc
loopne
mov
dec
sbb
sti
xor
cmp
imul
inc
out
push
stc
jge
in
pavgb
ljmp
and
push
arpl
sbb
push
push
mov
add
push
das
dec
mov
xchg
adc
ret
inc
aam
cmp
sahf
lret
mov
mov
sub
push
push
addr16
push
inc
dec
jp
imul
mov
daa
mov
add
add
mov
rorl
sahf
fdivs
sub
popa
mov
push
testb
pop
bound
loop
inc
pop
jmp
cli
shll
scas
icebp
lods
push
insl
lea
and
push
pop
dec
popf
pop
adc
or
adc
shrl
push
ljmp
in
lret
mov
jge
mov
add
inc
ja
pop
aas
dec
push
mov
and
add
add
add
dec
sbb
test
icebp
subl
sbbl
out
mov
inc
psubusb
test
in
rcrl
xchg
int
sub
jge
mov
or
mov
dec
rep
push
sbbb
inc
jg
imul
push
cld
and
push
movsl
mov
and
shll
pop
cltd
aas
xchg
fistl
aaa
scas
into
mov
enter
subl
enter
stos
mov
fdivs
movsl
rcr
repz
lods
ret
jg
inc
mov
jge
push
xchg
dec
loop
mov
fyl2xp1
movsl
movsb
imul
mov
push
fdivrp
push
xchg
lahf
dec
xchg
pushf
mov
cmp
cwtl
pop
lods
sbb
div
sbb
mov
nop
push
pop
inc
pop
jge
inc
add
fwait
or
jo
mov
dec
ret
and
inc
and
iret
jo
int
mov
add
xchg
jae
ja
div
mov
aas
cmpsl
pop
and
add
or
sub
test
xchg
das
jg
in
mov
lods
icebp
stos
out
rcrb
movsb
test
xchg
and
out
xchg
mov
and
inc
mov
fisubl
test
add
aad
cld
pop
fisttpl
add
pop
adc
out
pop
stc
loop
cltd
in
test
ds
fildl
leave
inc
test
jp
mov
fwait
xchg
push
and
xchg
mov
push
ja
xor
mov
test
int3
popa
sbb
ljmp
sub
push
ds
mov
sbb
cmp
jb
lods
std
jmp
scas
ret
sbb
xor
out
jnp
adc
imul
rol
cwtl
mov
shlb
adc
adc
shrl
mov
inc
cmp
mov
sub
jo
and
adc
lods
dec
addl
add
add
cli
std
jg
push
pushf
dec
inc
movb
add
add
lods
adc
push
xchg
das
dec
xor
pop
mov
push
pop
mov
xchg
mov
cmc
sub
iret
mov
iret
icebp
ror
into
sub
lret
inc
mov
pop
inc
aam
add
loop
mov
iret
dec
add
inc
addb
mov
or
ficomps
sbb
xchg
xchg
ss
push
scas
test
sbb
lcall
rcll
pop
lahf
pop
sub
addl
xchg
sbb
sbb
dec
js
lcall
fnstcw
pop
cmp
leave
inc
and
dec
in
inc
stc
inc
pop
icebp
xor
loope
dec
and
lcall
enter
outsl
mov
cmp
inc
xchg
or
dec
add
scas
adc
push
mov
add
scas
mov
cmpsl
imul
lcall
xchg
in
add
add
mov
std
incl
sbb
in
add
add
add
add
mov
dec
stc
in
pop
jmp
jecxz
pop
dec
sub
fsubrp
xchg
fstps
jg
xchg
xor
jmp
or
and
lret
fisubl
sbb
jmp
lds
mov
or
leave
pushl
test
lods
sub
aam
lods
sub
and
cmc
sbbb
pop
xor
popf
fisttps
jmp
idivl
fimuls
inc
arpl
mov
cmp
fisttps
out
push
sub
rcr
cmc
cmp
or
sub
pop
jecxz
dec
adc
loop
add
push
sub
and
push
add
lret
dec
fnstenv
in
idivl
cld
inc
jle
jmp
test
ret
jge
aad
dec
jle
and
sbb
fsubrp
xchg
out
inc
rcrl
enter
scas
dec
adc
xchg
xchg
add
icebp
sbb
push
es
jg
pop
or
xor
clc
mov
and
add
add
add
lods
and
jnp
push
add
jmp
sbb
call
lahf
jecxz
or
clc
jg
data16
pop
or
or
ret
adcl
push
xor
jbe
inc
arpl
ss
test
aas
pop
and
loop
cmpsb
sub
scas
pusha
dec
jbe
test
push
lods
lock
mov
dec
jae
pop
loop
jmp
xor
out
incl
and
cwtl
mov
sbb
add
call
jno
xor
roll
pop
repnz
ficoml
lods
repz
scas
jge
ds
fimull
jecxz
loope
mov
ja
mov
add
daa
lods
add
xlat
jecxz
in
push
xchg
in
inc
pop
dec
imul
pushf
enter
xlat
rorl
fidivrs
and
adc
repnz
dec
xlat
addb
stc
es
add
or
dec
push
cmp
and
add
add
add
movsl
cmp
cld
cmp
jl
and
adc
orb
mov
dec
mov
es
jmp
push
push
out
popf
mov
jne
inc
xchg
push
insb
push
cltd
iret
pop
bnd
inc
in
xchg
dec
in
loopne
dec
insb
push
loop
icebp
clc
hlt
sbb
sub
lds
arpl
ds
roll
xor
mov
adc
jae
test
mov
cmp
negb
dec
repz
ret
ds
movsb
repz
in
xor
or
ret
leave
sbbl
push
repnz
or
leave
imul
add
cmp
dec
jp
sarb
adc
jne
popa
fcoml
xchg
pop
add
orl
aaa
inc
adc
adc
cli
addr16
das
xchg
jle
pop
mov
add
add
stc
lods
xor
mov
insb
cltd
sbb
add
incl
add
loope
mov
ret
imul
mov
mov
push
lods
pusha
pop
loope
pop
leave
xchg
adc
iret
repz
jb
std
cwtl
sub
cmpsl
pushf
movsb
nop
imul
xchg
jbe
pop
in
ds
cmp
inc
push
inc
test
pusha
and
dec
ficompl
push
inc
xorb
ljmpw
jmp
aad
sbb
dec
fsubl
push
mov
jmp
out
lds
lods
adc
and
cmp
jo
nop
lret
inc
mov
jno
les
jo
lds
inc
inc
mov
mov
sbb
out
push
mov
mov
xor
into
push
xor
jg
jb
insl
jnp
jecxz
fimull
test
sbb
adc
loopne
loopne
mov
fidivrl
ficoms
stos
sbb
call
mov
sbb
add
incl
add
pop
add
mov
jle
pmaxub
mov
push
xchg
mov
das
push
notl
nop
push
adc
hlt
in
jno
hlt
shlb
rcrb
push
cwtl
out
mov
mov
xor
daa
sub
subl
sbb
scas
xor
xchg
fbstp
mov
arpl
or
loopne
inc
sub
mov
andb
or
pop
movsl
push
out
ret
pusha
cli
fstl
shll
ja
ss
icebp
mov
fs
fwait
add
gs
icebp
inc
mov
stos
std
test
fidivrl
nop
xor
inc
daa
mov
mov
add
sbb
fnsave
adc
and
jb
out
outsl
jecxz
add
call
popa
mov
pusha
xor
pop
jg
std
xorl
add
mov
out
stos
jge
or
clc
lock
and
add
add
add
lcall
cmp
inc
addr16
push
iret
jecxz
fwait
das
mov
xchg
stc
in
pop
and
pusha
in
mov
sbb
jno
sub
xchg
mov
js
mov
push
mov
jmp
into
lea
lea
int3
and
movsb
loop
cmp
test
ljmp
mov
jmp
scas
insl
sub
xchg
mov
xor
fisttpl
lcall
and
into
fwait
in
imul
xchg
stc
bswap
imul
dec
das
mov
push
sbb
mov
stos
test
add
mov
filds
xchg
fcoms
adc
mov
sahf
ss
mov
popf
cmp
scas
mov
dec
clc
icebp
sub
outsb
popf
sub
dec
push
xor
fldcw
cmp
xor
mov
add
add
sbb
out
xchg
iret
push
aas
fwait
cs
aaa
sbb
add
cmp
adc
adc
push
or
cli
testl
scas
scas
das
mov
inc
xchg
mov
cmp
movsl
stos
push
inc
test
int
adc
out
loope
xchg
mov
cmc
lahf
stos
push
outsb
hlt
xor
inc
push
lea
pop
rorb
nop
xchg
adc
sahf
call
or
sarb
fbld
xchg
add
aas
push
subb
loope
jmp
jbe
cmp
mov
xchg
xchg
inc
xchg
xchg
xchg
dec
xor
test
cmp
sbb
popf
or
stos
mov
xchg
rcll
data16
jge
movsl
aas
sbb
stos
inc
mov
jnp
sub
fimuls
faddl
inc
into
fwait
popf
fadd
outsl
call
or
scas
jg
cmpsl
mov
ret
movsl
jae
arpl
pusha
xchg
add
sbb
add
add
in
add
cmp
out
loope
jns
adc
pop
push
sbb
add
incl
add
push
fisubrs
roll
or
sarl
mull
jne
cmp
mov
lret
fiaddl
dec
fisttpll
into
add
xor
lahf
pop
ret
push
stos
jmp
push
dec
cmp
cmp
adcb
cmp
test
js
vphsubdq
pop
xor
push
sbb
gs
sbb
mov
ja
or
jle
hlt
mov
push
rolb
dec
lods
jb
add
xchg
imul
and
xchg
loop
push
and
ja
int3
out
ja
scas
mov
push
daa
sub
scas
xor
xlat
jae
loopne
mov
adc
jns
je
add
xchg
std
leave
push
test
call
sahf
pushf
push
sbb
cld
cmpsb
lret
xor
sbb
mov
add
lods
jg
push
mov
stos
imul
add
add
add
out
sub
test
mov
jbe
inc
inc
fwait
shll
pushl
ljmp
dec
adc
xchg
dec
fisubs
in
lahf
cmp
or
push
ljmp
inc
mov
std
scas
les
cmc
outsb
fisttpl
fwait
lcall
lods
out
or
mov
pop
outsb
mov
adc
push
es
es
andl
fs
sub
lods
sub
loope
loope
xchg
cmpsl
inc
adcl
push
ja
cmp
inc
pop
and
xor
rcrl
aam
lods
mov
mov
mov
pop
leave
adc
push
mov
stos
es
lea
fucom
dec
push
jnp
test
test
call
mov
cltd
pop
and
push
mov
sbb
jns
std
mov
leave
loopne
loope
fadds
add
loopne
sti
mov
cmp
xlat
jmp
add
jg
cld
ret
add
and
push
sub
add
add
add
pushf
mov
ds
inc
dec
les
bound
cltd
or
or
je
dec
push
rclb
aaa
lods
out
aas
push
lret
inc
mov
jl
nop
loop
in
jne
test
in
lcall
leave
pop
jge
xor
rcrl
mov
xor
pusha
jo
addr16
mov
or
inc
mov
inc
dec
jp
outsb
mov
aas
fistpl
lahf
add
test
mov
mov
ret
cmpsb
pop
mov
movsl
push
rcrl
pop
xchg
imull
jl
aas
fdiv
mov
js
in
arpl
popa
jno
mov
and
mov
fdivrl
jge
negl
lahf
jmp
mov
nop
xor
or
les
mov
inc
imul
popa
or
jle
jmp
das
mov
in
aaa
mov
jae
push
inc
push
and
rorl
jno
jl
push
inc
loope,pt
sbb
fwait
je
jns
rolb
ret
mov
iret
mov
sub
push
incl
add
js
pop
daa
out
cmpsb
xor
push
push
xchg
dec
xor
ljmp
adc
out
rcll
ljmp
push
and
add
pusha
repnz
mov
fwait
les
pop
cmp
xchg
out
or
insb
fdivl
hlt
or
repz
sub
sbb
pop
lahf
ret
jnp
inc
fcmovnb
sub
and
pop
mov
push
aad
lea
and
stos
stc
scas
sub
fnstenv
popa
cs
adc
js
xchg
jne
repz
mov
lds
adc
mov
mov
inc
dec
xchg
lahf
mov
fdivp
stc
sub
xchg
jae
add
jp
mov
pop
mov
sarl
fwait
mov
out
aam
enter
ficoms
xchg
add
aas
and
mov
aaa
out
jmp
lret
int
or
jg
arpl
outsb
adc
add
incl
add
js
xor
pop
sbb
les
mov
mov
mov
mov
dec
cmp
dec
push
scas
and
and
mov
cs
aam
xchg
imul
sub
lds
in
jle
xchg
test
inc
pushfw
sbb
mov
cmp
inc
cmc
push
xchg
xchg
dec
loope
lcall
cmp
cmc
addr16
fwait
out
adc
pop
or
cmp
sbb
mov
mov
outsb
cmc
das
bound
or
rorb
test
ss
pop
jl
push
or
lods
xchg
inc
cwtl
xor
in
dec
adc
xchg
repnz
cmp
mov
mov
jg
sbb
mov
es
popa
leave
inc
cltd
adc
push
cmp
mov
sub
mov
mov
roll
add
add
xor
clc
cli
clc
sarb
sti
mov
xor
adc
add
incl
add
test
out
and
or
cmp
ja
add
push
dec
jae
cwtl
cmp
or
or
ret
jmp
nop
aad
xchg
or
sub
idivb
out
or
adc
call
fs
push
les
popf
pushf
inc
dec
cmp
pop
inc
jae
dec
adc
pop
dec
in
popa
in
rcl
mov
add
push
or
rclb
ljmp
scas
jae
mov
shrb
pop
dec
jno
pop
mov
or
push
ljmp
pop
insb
adc
jae
pushf
cmp
xor
jmp
in
inc
push
xor
xchg
push
cli
aad
mov
dec
mov
xchg
stc
icebp
add
sub
mov
push
outsl
inc
jl
jmp
xor
out
aaa
mov
andb
test
imul
mov
cmc
cmp
incl
add
push
add
jne
data16
push
inc
sahf
fstps
fdiv
cltd
bound
inc
pop
jb
in
scas
ret
out
ja
or
sub
daa
xchg
add
add
push
out
adc
iretw
xor
and
cmp
adc
movsb
mov
mov
sbb
aad
inc
push
das
sbb
cmp
mov
ret
mov
add
dec
rorb
xchg
icebp
pop
cld
pop
push
mov
out
fsubr
inc
and
sub
shlb
inc
xor
sbb
and
fs
mov
scas
lea
adc
sbb
outsl
lock
test
lahf
movq
scas
ret
cmpsb
sbb
sbb
xorl
nop
sub
sub
push
jmp
jmp
ret
mov
jg
shlb
and
dec
inc
mov
dec
cltd
adc
sub
adc
jl
popf
fmuls
adc
add
fs
es
data16
insb
daa
mov
lds
add
incl
add
sbb
lods
mov
inc
adc
push
cmp
xor
add
or
notl
loop
lods
sbb
fdivrs
add
popf
pushf
dec
sub
xchg
shrb
xchg
xor
xchg
ljmp
mov
lock
mov
hlt
pop
outsl
pushf
outsl
pop
or
push
loopne
daa
pop
lods
xor
jno
push
addl
addr16
scas
call
in
jno
dec
lret
cwtl
stos
cmp
and
adc
inc
aas
sub
jmp
and
call
ret
mov
mov
cld
scas
das
stos
enter
inc
sbb
leave
subb
js
ja
add
sbb
aam
push
xchg
pusha
cli
mov
fsts
push
insl
sahf
jne
mov
mov
hlt
mov
ja
sbb
mov
mov
mov
dec
cwtl
aad
cmc
sub
fmuls
pop
lcall
add
clc
mov
fldcw
add
push
add
incl
add
int
lahf
clc
fisubrs
xchg
sysexit
pop
int3
lcall
sbb
mov
pop
jmp
adc
cpuid
std
cwtl
mov
push
cmp
sub
call
stos
sbb
jnp
mov
mov
mov
xlat
xlat
mov
iret
and
add
cld
std
xchg
xchg
repnz
mov
aam
pop
aam
xorl
cmp
mov
jno
push
gs
pop
mov
int
ret
sub
out
or
add
inc
fiadds
pop
test
fs
adc
cli
push
scas
sbb
xchg
push
hlt
ret
aas
pop
cs
mov
dec
jmp
out
inc
mov
cs
jp
stc
pop
repz
sbb
xchg
pop
inc
shll
pop
or
add
icebp
cltd
outsl
ret
add
andl
jg
xchg
out
cld
jae
push
pop
cmp
xchg
dec
or
add
and
push
sti
cmpsl
enter
xor
add
incl
add
add
mov
lahf
aad
mov
shll
mov
scas
xabort
cmp
sub
dec
pop
sahf
inc
popa
cmp
sbb
repz
add
or
in
scas
pop
sbb
sub
int3
jge
xor
in
push
mov
fistps
test
sbb
xchg
inc
or
or
aam
dec
mov
and
xchg
outsl
mov
inc
lods
popa
cmp
push
cmpl
xchg
ss
adc
rolb
mov
jae
jp
jp
mov
dec
or
jo
leave
cmp
clc
cmp
ljmp
jb
jmp
out
mov
lock
je
cmp
cld
mov
push
cmp
jg
sub
shll
push
aas
fldcw
xor
scas
mov
decb
add
add
mov
std
mov
dec
push
ffree
mov
push
xor
add
add
add
inc
test
iret
jns
movsb
js
pop
dec
lahf
jecxz
add
lea
fs
fldt
mov
repz
sbb
xchg
mov
adc
add
xor
insb
in
sti
mov
es
jnp
or
aaa
ljmp
cmc
mov
fwait
jmp
or
adc
mov
fs
cmc
gs
lods
mov
stos
adc
jo
xor
push
jo
scas
scas
sub
push
in
shl
push
lods
insl
cltd
sbb
mov
pop
addb
jge
mov
dec
int
dec
aam
pop
adcl
iret
dec
adcb
pop
mov
push
pop
dec
pushf
sarb
mov
mov
add
lods
pop
and
arpl
or
pop
scas
and
adc
dec
out
xor
notl
rolb
add
lds
xchg
and
inc
and
lcall
add
incl
add
xlat
scas
mov
int
sub
mov
or
bound
xchg
movsl
out
and
dec
jecxz
iret
into
sbb
aaa
add
jns
mov
xchg
mov
mov
or
push
xchg
cmp
xor
div
cmp
jge
sub
inc
rcr
dec
sbb
mov
and
mov
jmp
sbb
out
jne
pmaxub
das
and
lock
mov
enterw
add
iret
imul
fiaddl
xor
fsubs
adc
ret
cmpsl
jl
mov
sarb
push
xlat
xlat
xchg
aas
and
push
mov
aad
push
push
repz
icebp
int3
gs
mov
push
ljmp
aas
jl
mov
pusha
mov
pop
pop
sti
and
xchg
sub
sub
fwait
add
pop
pop
push
cltd
stc
ror
adc
scas
mov
fiaddl
ret
ficomps
cmp
lahf
idivl
adcb
add
incl
add
push
push
out
or
ficompl
test
lock
cmc
pop
mov
cmp
mov
outsl
scas
mov
push
pop
jp
orl
cmp
std
pop
pop
loop,pt
pop
jl
bound
cli
push
aaa
add
cli
add
loopne
inc
push
jae
pusha
sbb
rorb
or
adc
in
icebp
rol
pushf
mov
sti
movsl
imul
call
xchg
insb
dec
test
sbb
cld
push
movsl
inc
mov
arpl
sub
or
jmp
test
mov
xchg
mov
mov
adc
mov
adc
or
add
int3
sbb
fs
jg,pt
mov
adc
lock
and
and
in
and
adc
dec
bound
add
lods
xor
mov
cmp
cmp
xor
add
add
add
push
inc
xchg
ja
sbb
push
xor
inc
cltd
mov
sub
rorl
jno
xchg
mov
outsb
ja
jecxz
xor
and
pusha
push
push
push
mov
add
inc
aaa
dec
movsb
aaa
add
aam
in
jl
mov
aas
loopne
adc
jne
mov
pop
push
pusha
and
clc
mov
xor
mov
push
inc
lock
pop
xlat
rcrl
clc
imul
sub
cmpb
adc
push
and
ljmp
jge
sahf
adcb
inc
xor
jae
add
adc
cmp
push
lock
ljmp
imul
ss
mov
rcl
popf
xor
test
jecxz
and
pop
xchg
imul
repz
or
out
sbbl
aaa
fildll
jle
shr
pop
pop
stos
jp
repz
add
add
lret
mov
or
addr16
dec
or
add
add
add
jge
cwtl
push
out
jle
pop
mov
add
add
enter
push
xchg
int
jnp
test
add
mov
inc
dec
push
mov
xor
push
adcb
lds
imul
in
mov
insb
pop
repz
mov
lcall
inc
in
pop
and
xchg
inc
cs
iret
insl
mov
orb
xchg
cmp
xchg
jmp
cmp
adc
pop
xor
fisubl
jp
popf
cmpsb
xchg
adc
jl
fiadds
sti
push
in
adc
scas
je
adc
mov
push
loopne
fdivl
test
push
xchg
call
lcall
pop
clc
outsb
pop
std
and
test
out
sbb
cld
or
nop
pushf
mov
scas
adc
out
and
rol
xchg
sbb
xor
xor
cmp
cmp
add
sti
pop
jge
neg
hlt
add
test
incl
add
xor
xchg
ja
stc
repz
jg
repnz
add
jb
jl
and
pop
or
outsl
andb
sub
pusha
lahf
or
mov
and
in
int
pop
dec
ret
mov
popf
pop
out
aad
cmp
pop
mov
fldcw
mov
jae
jge
jns
andb
in
adc
mov
shl
decb
add
repnz
aaa
int3
fisttpl
or
fsts
and
mov
jmp
mov
and
dec
bnd
shrl
push
hlt
and
cmp
movsl
ss
rcl
xor
push
push
mov
sub
insb
sub
jbe
mov
roll
fimuls
push
aad
push
enter
mov
jle
iret
in
test
popa
test
addr16
sbbl
in
inc
add
fsub
std
in
popf
in
stc
jmp
xchg
sub
or
add
incl
add
std
lret
cltd
movsl
ficoml
push
jmp
push
pinsrw
xchg
jmp
push
sbb
addr16
in
test
fcoml
sbb
ret
push
test
sbb
popa
shll
inc
sbb
sahf
sarl
int
ss
filds
sbb
je
ljmp
or
adc
jl
mov
xchg
je
adcl
pushf
inc
mov
shl
out
repz
push
in
mov
cmp
loop
push
xchg
push
pop
pop
fnstsw
inc
push
nop
push
cmp
jge
stos
jg
leave
dec
xchg
scas
stos
pop
push
movsb
call
outsl
mov
rorb
repz
aad
mov
mov
ret
mov
jne
outsl
aad
mov
xlat
cmp
lahf
cmc
pusha
movsb
mov
add
jp
jnp
sti
xchg
jle
jp
lods
les
loope
pop
aaa
add
incl
add
cmp
mov
arpl
es
pop
mov
lock
cmpsl
pop
lret
out
cmp
xchg
imul
mov
int
pop
mov
xchg
lods
pop
jo
or
pop
pop
icebp
and
or
jns
mov
imul
sahf
sti
cld
push
inc
lahf
or
sbbb
mov
icebp
jno
enter
add
outsl
movsb
jge
xchg
adc
outsl
gs
imul
xchg
ss
cmpsl
pop
aaa
and
das
jp
inc
jmp
jge
loope
add
pop
les
mov
les
mov
test
dec
sahf
divl
cmc
lahf
and
subb
clc
cmp
call
or
int
cltd
adc
adc
aaa
stc
pop
xchg
ret
sbb
popa
pop
push
lret
test
mov
loop
loopne
les
xchg
inc
xchg
xor
and
pop
jge
jp
lret
xchg
jecxz
sub
add
push
sti
decb
mov
mov
incl
add
add
idivl
push
sbb
add
cltd
in
pop
scas
cmp
test
sbb
lret
cmp
lds
int3
fisubrs
imul
adc
sbb
fucom
or
adc
das
mov
xor
push
mov
je
jg
jbe
cmp
mov
fnstcw
iret
das
es
fwait
ds
stos
xor
jae
icebp
shlb
notl
mov
fstpt
mov
add
cwtl
ljmp
sbb
shr
jae
in
vhsubps
sub
push
sbb
adc
sub
ja
ja
loope
ffree
scas
stos
xor
pop
push
cmpsb
xor
dec
pop
repz
cltd
ud1
pop
lahf
or
mov
popa
repnz
inc
adc
adc
cwtl
add
dec
inc
lret
insb
out
sub
inc
sub
push
ret
cmp
xor
hlt
jb
repnz
add
add
lahf
cmp
xor
jge
pop
mov
pop
jecxz
dec
xor
push
fimull
push
xchg
mov
lcall
xor
lods
push
addb
inc
int3
loop
lods
pop
cwtl
std
out
scas
mov
lds
pop
add
mov
xor
lcall
fdivp
and
insb
js
lret
repnz
xchg
xchg
mov
jns
addr16
push
inc
icebp
push
dec
in
mov
push
or
addr16
cmpb
js
mov
popa
int3
pop
adc
fcmovnb
jge
push
sbb
xorl
int3
scas
dec
addb
adc
mov
fwait
lret
dec
mov
and
jl
movsl
test
ja
imulb
notl
in
cmpsl
mov
stos
out
push
fcomps
adc
pop
xor
jb
sbb
push
push
iret
repnz
xor
fcmovnb
repz
inc
add
cmp
jge
stos
lea
shrb
mov
add
add
incl
add
fsubr
inc
push
cmpsb
xchg
or
in
out
fsubrs
mov
mov
xchg
lds
test
cmp
std
aaa
push
push
push
push
xchg
sbb
inc
fldenv
mov
lcall
or
dec
sub
cwtl
sbb
lea
and
cmp
mov
adc
movsb
jge
or
adc
repz
cld
pop
or
sbb
xchg
bound
xor
xchg
and
movsl
fstp
cmp
cs
xchg
pop
enter
sub
movsb
int3
sarb
jns
in
ret
xchg
and
cmpsb
test
fnsave
inc
fs
pop
shrb
je
mov
cmp
int3
cmp
les
push
cmp
shll
adc
out
xor
divb
rclb
nop
lcall
cmp
add
add
add
jecxz
sub
negb
jb
dec
jl
push
sbb
add
jp
repnz
push
jnp
xchg
jno
inc
jmp
and
ja
mov
or
cmp
inc
call
imul
mov
cld
lahf
xorl
shrl
xor
data16
sub
int3
imul
and
lea
bound
enter
mov
adc
stos
or
movsb
pop
fs
xor
jo
lahf
inc
adc
and
mov
je
xchg
cmc
xor
inc
xchg
cld
mov
scas
movsb
adcl
mov
push
cld
and
push
cmp
jmp
aas
inc
dec
pop
hlt
adc
arpl
icebp
das
mov
cmp
inc
int3
push
aad
ret
jnp
enter
and
jp
push
fwait
xchg
in
push
stc
inc
popf
push
inc
into
enter
sbb
add
jbe
idivl
or
in
fbld
incl
add
inc
fs
out
int
add
or
jae
add
cwtl
movsb
mov
rcrb
shrl
movsl
sbb
testb
test
jnp
movsb
xor
fdivp
insb
shll
push
cmp
mov
mov
xlat
jnp
aas
shll
out
xchg
mov
fmulp
cli
adc
gs
in
clc
addl
adc
daa
es
in
ja
jg
addr16
push
mov
xchg
int3
jp
jecxz
je
nop
mov
jnp
or
inc
aad
mov
adc
jae
jl
pushf
rorb
jae
mov
push
and
icebp
add
ret
fwait
mov
and
enter
mov
fstl
dec
cmpsl
rcl
sbb
lock
popa
cmc
sbb
in
je
cwtl
incl
int
sti
xchg
jns
ret
xchg
or
and
lret
add
sub
adc
and
outsb
sub
stos
fs
jmp
leave
aas
push
js
add
add
and
mov
clc
push
xchg
add
cmp
nop
decb
lock
dec
lret
lcall
nop
push
cwtl
icebp
ss
popa
cmp
cmc
sub
lcall
xor
add
add
lcall
popa
sub
je
jae
xchg
jg
ja
outsl
cld
aam
inc
stos
push
in
xor
stc
enter
xchg
ja
cmp
out
jb
jp
xchg
mov
xor
movsl
insb
push
adc
mov
adc
mov
clc
out
dec
repnz
inc
inc
dec
repnz
add
cmp
adc
mov
push
test
shr
sti
dec
aad
mov
adc
call
fmul
fdivl
mov
adc
or
inc
inc
jg
ljmp
aas
xor
rclb
out
sub
jno
popf
out
hlt
xor
mov
aam
cmpsb
fcoms
xor
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
mov
add
add
add
dec
cwtl
lea
int3
int3
xchg
or
les
pop
into
mov
dec
push
and
xchg
loopne
xchg
aad
cmp
mov
push
adc
aam
fs
int3
mov
xorps
bound
add
bound
mov
push
mov
or
test
hlt
adcb
or
mov
mov
mov
stos
fidivrl
das
movsb
and
xlat
push
cmp
cmp
outsb
mov
and
add
adc
in
lret
in
jl
lock
ss
cmpsb
add
mul
sbb
pop
push
or
rol
push
lods
rorl
enter
inc
jo
dec
in
pop
fidivl
andl
sub
mov
jge
xchg
sub
xor
and
add
pop
dec
cmpsb
pop
cld
rcrb
push
cld
xor
push
loope
and
dec
gs
xchg
out
vmovaps
rorb
xorb
jb
mov
add
sbb
jnp
jnp
cmp
movsb
push
sbb
or
mov
add
incl
add
notl
aaa
pusha
push
lock
into
mov
jnp
mov
outsb
cmp
sbb
xor
mov
test
arpl
push
and
pop
sbb
and
lcall
pop
sub
xchg
push
push
jge
xchg
subb
jb
ss
out
dec
push
fdivrl
cmp
es
mov
popa
xor
ss
inc
sub
push
cmp
pop
stc
inc
pop
les
shlb
cli
fs
add
testb
push
sbb
xchg
leave
adc
xor
fimull
imul
xor
sbb
or
push
data16
lret
sub
into
mov
movb
pop
loope
mov
lret
loop
enter
ds
in
gs
shr
or
mov
in
jg
lock
add
add
adc
jmp
ret
aas
add
incl
add
outsl
pop
movsb
mov
call
shlb
not
push
mov
inc
fmuls
fistps
movsl
mov
push
addr16
enter
xlat
pop
adc
sbb
or
mov
je
push
les
imul
add
jne
add
scas
mov
test
ja
rorb
ja
insl
jb
ja
stos
sub
adc
adc
int
daa
mov
fxtract
inc
sbb
pop
xchg
mov
aam
push
mov
jecxz
iret
mov
sar
mov
rolb
lods
lahf
scas
mov
ja
sarb
sbb
mov
out
pop
leave
inc
mov
lods
lock
fsub
imul
outsl
sbb
jl
shll
adc
cmpsb
ss
add
pop
cs
inc
cmpsb
adc
and
push
ja
js
scas
xor
enter
add
add
repz
cmp
lods
repz
mov
fsubrl
add
incl
add
xlat
das
int
cmp
cld
cwtl
lods
mov
cld
mov
lods
ss
testl
dec
cmp
dec
arpl
in
lret
popa
fldt
pushf
inc
cmp
xchg
xchg
xor
addl
stos
cmp
mov
push
ss
loope
and
call
jecxz
or
mov
out
pop
std
cli
mov
out
repz
adcb
xor
leave
push
lods
mov
mov
inc
adc
sub
enter
shrl
xor
mov
sub
movsb
xchg
icebp
inc
mov
fdiv
cld
scas
insl
idiv
xchg
pop
xchg
add
rcl
add
push
aaa
cmpsl
test
jne
mov
stos
xchg
mov
inc
sarl
mov
mov
xchg
mov
xor
mov
sti
cmpsb
mov
or
das
pop
adc
aas
daa
push
cld
push
std
jmp
dec
push
es
cld
inc
add
incl
add
jb
sbb
subl
inc
mov
lcall
add
push
repnz
inc
jg
pusha
push
aad
jb
xor
cmp
inc
mov
push
mov
dec
jle
xchg
sub
arpl
pop
inc
subb
loopne
cmp
mov
mov
xchg
pushf
js
xchg
dec
imul
xchg
or
dec
fcompl
imul
mov
mov
clc
mov
das
data16
out
rorb
mov
inc
mov
fistpll
xchg
xor
inc
cmp
push
jb
xchg
pop
inc
push
mov
mov
cmpsl
and
adc
push
xor
fidivrs
or
mov
in
jb
ljmp
xchg
jns
mov
and
jns
hlt
ljmp
aad
xor
adc
sub
pop
popf
je
fldt
add
dec
push
add
sbb
dec
push
out
aad
arpl
add
incl
add
push
out
pushf
insb
int
lret
push
mov
hlt
mov
push
jae
or
push
ficoms
test
or
inc
outsb
idivb
dec
je
jmp
add
outsl
divb
push
or
xchg
jne
cmp
imul
inc
outsb
sub
xor
sti
pop
test
lods
cmp
pop
dec
jae
pop
xchg
xor
push
or
fsubrl
xchg
add
test
jae
sbb
mov
mov
inc
cmp
and
mov
xlat
fs
test
cmpsb
and
push
sbb
fistps
mov
andb
pop
xor
mov
sti
push
arpl
pop
sbb
data16
ss
dec
nop
cmp
scas
data16
cmp
ficompl
pop
dec
mov
push
out
ja
arpl
stos
add
push
mov
or
xchg
sub
add
incl
add
jecxz
push
cmp
ret
mov
in
iret
cmpsl
mov
inc
pop
subl
mov
cld
repz
in
sub
sub
mov
outsb
xchg
in
adc
addb
xchg
pop
insb
call
mov
or
xchg
jnp
jb
and
mov
push
mov
adc
xchg
loopne
sbb
adc
sarl
mov
inc
lret
das
pop
jmp
push
or
mov
stc
std
cmp
mov
jne
test
push
in
mov
orb
and
mov
xorb
sbb
ds
movsb
xor
in
or
sbb
xor
movsl
push
adc
sub
cmp
iret
cmp
mov
mov
nop
inc
mov
push
xor
fldt
stos
mov
lahf
bound
cmp
mov
hlt
rorl
out
addb
add
add
jg
xchg
orl
lret
add
incl
add
sarb
jle
cmc
in
cmp
into
leave
xor
xchg
xor
jp
and
bnd
dec
outsl
add
mov
in
adc
test
aam
mov
popf
mov
adc
mov
mov
adc
cwtl
fcomp
xchg
cmpsb
jns
cld
inc
mov
ja
cmp
inc
xchg
sub
add
fstpt
or
inc
mov
in
xor
mov
adc
shl
stos
mov
addl
orb
loope
test
loope
es
add
adc
mov
outsb
cs
stos
xor
mov
mov
mov
out
push
popa
mov
cmpsb
jmp
xchg
mov
shrb
jno
cmp
sarl
hlt
shll
pop
sarl
ja
xor
aas
push
lret
das
sbb
add
add
add
stos
ret
xlat
mull
movsl
adc
push
popa
dec
mov
sbb
add
add
push
dec
lret
jmp
imul
aaa
je
int3
add
clc
inc
add
incl
add
mov
or
jno
cmp
dec
sbb
adc
ret
push
xlat
pusha
pop
idivl
sub
outsl
loop
fsubp
jp
addr16
pop
in
dec
xchg
mov
push
fcomps
leave
xor
push
or
pushf
pop
cmc
pop
es
push
movsb
push
sahf
jbe
mov
insb
movsb
xchg
loope
mov
in
mov
push
push
inc
sbb
add
ret
repnz
mov
mov
rolb
loop
clc
ja
xlat
push
mov
adcl
pandn
lret
mov
push
sub
inc
fcmovne
cld
jnp
int
daa
mov
xchg
mov
hlt
iret
push
xlat
xor
lcall
inc
and
inc
or
adcl
inc
addl
jl
adc
push
in
adc
int
filds
or
cltd
outsb
js
add
out
jecxz
insl
incb
lds
cmc
cwtl
xchg
push
sub
inc
add
incl
add
pop
mov
mov
pop
daa
out
adc
mov
pop
sti
outsl
pop
loope
movsb
filds
mov
pop
sub
sbb
xchg
mov
lahf
push
cmp
fwait
neg
outsb
or
mov
inc
std
aam
push
and
inc
dec
jo
xchg
ss
add
out
mov
roll
lods
sub
jb
pop
push
push
push
pop
xlat
pop
jbe
ss
nop
repz
ret
push
xchg
call
sbbb
ret
gs
iret
repz
insb
cmp
ds
repz
in
xor
mov
sbb
sar
in
push
lret
adc
cmc
addr16
movsb
lea
xor
test
xchg
ret
ficoml
adc
jns
pop
or
cmpsb
sbb
push
push
jmp
nop
imul
jg
pop
es
jl
sub
cld
sbb
loop
insb
xchg
add
jns
xor
jg
pop
lock
incl
add
sub
lahf
test
push
lahf
mov
mov
jp
roll
test
rorl
or
lods
xchg
adc
loopne
jnp
popf
outsb
sbb
test
mov
icebp
dec
testl
dec
sbb
insb
cmc
in
mov
sub
orps
jmp
ds
movsl
inc
cli
adc
push
sub
ljmp
loope
scas
mov
sub
push
inc
sub
andl
scas
loope
or
iret
mov
aaa
xchg
and
mov
stos
lock
dec
loope
movsl
adc
ja
idivb
fs
iret
push
andb
mul
lods
repnz
pop
fists
jle
jge
pop
inc
add
out
adc
jle
call
rorl
out
into
jbe
xchg
popa
xchg
hlt
daa
lea
imul
pusha
loopne
js
ret
jg
decl
rol
dec
hlt
jo
cmc
dec
add
incl
add
add
je
pusha
stc
lods
hlt
sbb
or
pushaw
movsb
leave
lret
fcmovnbe
adc
add
lret
cmp
ret
xlat
jbe
and
mov
stc
repnz
dec
rorb
sahf
ja
sbb
lret
push
sub
outsl
aad
xchg
arpl
enter
jp,pt
lock
inc
sbb
sbbb
xor
sahf
rolb
or
aaa
mov
stos
jo
jp
sti
push
inc
push
das
jbe
addb
jp
xor
pop
xchg
fwait
into
std
pop
pop
je
and
ret
mov
cltd
pop
bound
adc
lret
in
mov
jne
jg
pop
or
jne
lret
rcl
mov
mov
loopne
nop
add
loop
cltd
sbb
int3
mov
jne
push
adcl
cmp
repnz
insb
cmp
xchg
dec
jo
adc
mov
out
aad
je
aam
dec
add
incl
add
cmp
cs
and
insl
iret
shlb
out
fisubs
fwait
add
pushf
push
into
test
test
testb
rolb
jge
popf
dec
sub
ljmp
scas
sub
cmpsb
idivl
lods
inc
mov
xor
hlt
lea
mov
fwait
xchg
loope
aam
out
cli
pusha
mov
push
enter
int
test
push
inc
in
pop
cmpsb
loop
sub
dec
cmpsl
jne
std
scas
lds
add
cmp
addb
adc
aas
sub
jg
push
out
je
icebp
lods
testb
xor
sti
sbb
sbb
add
sbb
pop
push
mov
out
push
pop
cmp
sti
xchg
or
iret
cmpsl
and
cmc
imul
fdivr
mov
mov
cmp
lret
mov
hlt
sbb
cmpl
cli
jecxz
outsb
mov
adc
pushf
add
hlt
gs
dec
adc
adc
repz
add
incl
add
or
mov
sbb
jg
arpl
xor
enter
ja
jns
pop
cltd
rcll
gs
push
mov
dec
mov
mov
pusha
push
cs
cltd
add
test
flds
add
add
je
test
ret
stos
stc
adc
sub
sub
cltd
and
mov
push
into
adc
stos
mov
jp
or
mov
mov
sbb
out
xchg
push
insl
mov
dec
leave
or
out
imul
ljmp
xrelease
mov
and
pushf
rcrb
out
mov
push
movsl
imul
dec
inc
jge
daa
push
sub
into
in
push
jae
and
inc
cmp
inc
mov
cmp
push
pop
mov
mov
adc
loop
lock
xchg
std
xchg
mov
add
aas
gs
pop
repnz
dec
add
incl
add
xor
imul
and
pop
lret
mov
pop
jb
xchg
jmp
lock
xlat
jmp
xchg
sub
mov
xchg
add
mov
or
fs
mov
lret
loope
out
stos
test
aam
pop
mov
add
stc
insl
xchg
mov
outsb
mov
int
out
stos
lds
lock
inc
jb
mov
jg
or
adc
je
jle
mov
cwtl
push
lahf
leave
fidivl
mov
mov
ret
dec
shrb
sbb
cmpsl
xchg
std
out
cltd
bound
jmp
cmp
cwtl
xor
test
seta
and
jecxz
and
movsb
xchg
gs
pop
scas
ret
test
popf
cmp
rcrb
iret
call
arpl
test
fwait
xchg
les
push
xchg
rclb
add
mov
out
fisttpll
lock
add
add
add
sbb
out
aaa
iret
mov
dec
out
cmp
cwtl
mov
adcb
add
inc
es
outsl
mov
testl
cmp
adc
ret
pop
dec
cmc
mov
add
mov
jecxz
inc
mov
jmp
test
sar
cwtl
mov
dec
andl
inc
sbb
gs
mov
pop
adc
cmp
add
add
push
in
rcrl
repnz
aad
sbb
mov
mov
xchg
ja
cmp
insl
daa
mov
hlt
mov
imul
mov
rolb
xchg
xor
lret
cld
sbb
repnz
fnstsw
mov
cmpsl
sbb
or
push
fwait
mov
lcall
push
mov
jecxz
divl
aam
push
inc
push
or
ret
add
add
sbb
icebp
push
outsl
insl
mov
or
or
inc
aad
pop
push
mov
loopne
xchg
cmp
fildll
mov
ljmp
add
incl
add
xchg
scas
dec
stc
scas
sti
push
bound
enter
inc
mov
sbb
sub
pop
hlt
test
inc
cmp
pusha
xchg
mov
xchg
jl
std
xchg
sbbb
jnp
hlt
inc
es
push
div
mov
jmp
fnsave
popa
lcall
jmp
inc
nop
sbb
out
scas
fnstenv
mov
mov
outsb
inc
xor
sbb
pop
outsl
add
lods
sbbb
andl
jns
xchg
outsl
sub
inc
les
fisttpl
insl
movsl
jp
dec
push
jns
xchg
pusha
jbe
ss
pop
jp
test
mov
and
xchg
loope
int3
sub
mov
cmp
add
mov
mov
jbe
repnz
xchg
jae
jbe
sub
xlat
ret
repz
ljmp
xchg
dec
imul
add
add
jmp
out
aas
jo
sahf
jb
sbb
mov
incl
add
leavew
xor
dec
mov
cmp
sbb
int
leave
inc
repz
mov
sbbb
bound
cmc
add
ja,pt
lret
sbb
popf
jae
outsl
xchg
pop
add
cmp
mov
stos
cmp
in
mov
adc
loopne
mov
pmaxsw
scas
fwait
xchg
push
and
and
push
mov
fimull
cmp
mov
jl
pop
mov
test
ret
push
and
cmp
shrl
xor
std
pushf
cmpsb
rolb
cmp
in
sub
fiadds
loope
add
rcrl
adc
xor
sub
jge
loop
ret
fadds
cmpsb
push
js
mov
clc
xor
sub
stos
mov
jp
mov
inc
adcb
and
cmp
ja
gs
dec
and
jg
leave
add
pop
sub
sbb
lods
bnd
pop
and
mov
test
cmp
imul
out
mov
mov
int
leave
out
dec
add
incl
add
stc
mov
iret
mov
push
push
pop
mov
fsubrl
mov
sub
fiadds
dec
insl
xor
les
ret
jnp
decl
dec
nopl
es
sbb
pop
imul
rorb
or
lods
packuswb
jl
mov
xor
mov
mov
or
subb
push
shrl
mov
std
sbb
icebp
xchg
xor
cmpb
stos
mov
not
outsl
dec
sahf
pop
fildl
lahf
jg
std
cmp
mov
icebp
outsb
pop
mov
ja
or
divl
faddl
int3
es
loope
mov
das
setle
push
push
mov
sub
lret
out
sahf
xor
fisubl
ljmp
sbb
adc
cs
outsb
movsb
andb
aad
inc
push
or
mov
mov
add
js
add
dec
stc
mov
ljmp
in
push
add
incl
add
in
out
rclb
jle
cwtl
test
xor
cmp
call
add
lahf
jecxz
daa
je
sub
push
mov
inc
into
je
sub
mov
sbb
das
adc
cmp
in
xor
ret
or
loopne
xchg
jp
mov
pop
movsb
mov
inc
cmp
add
ja
xchg
jo
pop
pushf
pop
sub
and
dec
fwait
repnz
push
test
dec
iret
data16
add
mov
pop
test
mov
sbb
lock
mov
in
cmpsb
cmp
pop
jmp
jo
clc
ficoml
out
sbb
gs
vpsrlq
jns
rcl
xchg
dec
cmpb
jle
jg
js
pop
adc
mov
shrb
in
add
push
rol
or
pop
mov
mov
sbb
add
jg
cld
lcall
pop
in
push
add
incl
add
xor
test
xor
pop
pop
mov
mov
jnp
cmc
sub
mov
xchg
sbb
pop
adc
or
fwait
iret
sti
lods
ss
mov
fs
push
js
pop
inc
das
mov
add
sub
mov
ljmp
mov
fidivrl
pop
arpl
and
in
sar
cwtl
inc
aas
in
fdivr
mov
mov
cs
int3
cmpsl
adc
jne
sub
push
mov
loop
sbb
ljmp
call
pop
pushf
pop
xchg
pavgw
adc
loope
out
pop
jnp
daa
insb
shrl
sbb
sbb
orl
cmpsb
xlat
cmp
data16
pop
sti
xor
mov
xchg
lods
push
dec
lds
mov
jae
fwait
inc
push
shlb
cltd
scas
insb
pop
pop
popf
stos
dec
fcoms
push
cmp
sbb
loop
loopne
repnz
mov
add
mov
xchg
mov
pop
pop
push
jmp
add
incl
add
repnz
dec
jp
add
add
mov
jl
cwtl
outsl
mov
mov
mov
xchg
and
inc
cmpsb
sti
adc
add
and
dec
jnp
cmp
js
jl,pn
xchg
ja
mov
sub
xchg
cmc
repnz
pop
xlat
jg
shlb
jne
mov
ret
dec
sub
gs
sub
or
cli
fistps
enter
loop
pop
cmp
xor
fcoms
xchg
pop
js
inc
pop
inc
call
mov
cmpsl
shll
push
fsub
in
and
xor
leave
pop
sti
push
lcall
mov
sbb
int3
mov
or
test
sub
dec
push
pusha
and
xchg
xchg
mov
jmp
jb
push
pop
fwait
mov
shlb
or
adc
cmp
push
push
mov
mov
cmc
repz
add
inc
mov
push
push
jmp
push
mov
add
incl
add
sbb
fadds
jg
fs
cmp
cmp
popa
mov
push
jbe
test
mov
pusha
lods
shll
adc
mov
and
pop
push
aad
adc
xchg
mov
aaa
ret
mov
cmp
dec
daa
sub
jb
push
shlb
out
inc
xchg
cmpsl
in
idivl
xchg
push
jmp
push
orb
inc
add
pextrw
sub
sbb
sti
inc
out
xchg
outsb
inc
mov
or
add
push
adc
push
cmpsl
push
inc
orl
inc
add
mov
lods
stos
ss
popf
mov
mov
push
or
gs
mov
jle
packuswb
or
sbb
idivl
or
dec
add
pop
jb,pt
mov
movsb
data16
out
push
arpl
ret
jle
popf
popf
mov
cwtl
dec
xchg
or
mov
add
add
sub
cmp
ret
or
das
jge
pop
jmp
add
add
xlat
lret
imull
or
jmp
push
mov
pusha
mov
sub
push
jnp
ja
mov
shl
jb
and
inc
shl
in
pusha
lcall
jg
mov
adc
sbb
test
sti
bswap
arpl
inc
sbb
mov
pop
jae
rol
shrb
mov
push
pop
jo
insb
in
and
or
testb
orb
rorl
fsubrs
jmp
mov
add
nop
push
adc
mov
push
xchg
aad
adcb
mov
sub
clc
ret
sysenter
inc
mov
adc
or
mov
fnstsw
rcrl
jge
outsb
xchg
mov
es
mov
xchg
mov
mov
imul
jmp
sbb
mov
lods
add
or
push
shll
out
pop
pop
pushf
push
jnp
call
add
add
jo
clc
push
mov
movsb
xchg
dec
cwtl
hlt
cmpsl
andl
insb
jmp
stos
inc
mov
ss
repnz
cltd
jl
fs
pop
adc
popf
mov
or
mov
adc
imul
popa
test
movsb
cld
test
std
imul
cs
mov
fcmovnu
inc
xor
xor
pop
pop
mov
xor
lods
aam
mov
enter
xchg
pop
or
daa
scas
xchg
clc
shlb
pushf
mov
ja
add
pop
adc
push
adc
mov
loop
mov
add
les
lds
xchg
push
les
fldenv
mov
add
popa
les
sbb
movsl
into
subl
jmp
ljmp
dec
ljmp
out
mov
repnz
fisttpl
or
dec
add
lret
mov
dec
arpl
lea
jge
jecxz
add
out
lcall
hlt
mov
add
add
add
add
fwait
inc
xchg
mov
mov
xchg
pop
imul
aam
imull
in
inc
mov
cld
mov
test
test
aas
dec
ret
adc
mov
mov
cmp
out
inc
cltd
icebp
dec
pushl
std
divb
dec
push
mov
jecxz
dec
orl
loop
popf
mov
cmp
xlat
sahf
mov
outsb
sbb
mov
enter
and
or
cs
inc
and
push
loop
ljmp
fwait
and
mov
or
out
push
mov
and
jmp
mov
xor
sub
and
and
or
into
sbb
dec
push
adc
dec
aas
adc
sub
inc
fstpt
nop
adc
roll
mov
hlt
push
cmpl
lods
shr
in
js
loopne
pop
sbb
insb
insb
pop
insb
adc
bound
imul
in
xor
add
add
add
jae
fdivr
stos
or
fadds
scas
gs
iret
sbb
jge
std
dec
stc
and
sbb
js
jae
shlb
ljmp
hlt
pop
in
sti
fmull
loopne
inc
mov
push
or
inc
movsb
aas
outsl
mov
ja
cmc
cltd
adc
adc
adc
fwait
out
popf
aaa
inc
je
iret
sbb
push
repz
ror
jmp
add
push
or
mov
fnstcw
decl
push
subb
jecxz
repz
add
jecxz
mov
jne
add
pop
mov
scas
inc
outsb
insb
bound
dec
mov
mov
mov
mov
pushf
pop
mov
enter
pushf
insl
js
dec
jp
shll
inc
or
ja
sub
dec
mov
sbb
test
push
dec
push
stos
aaa
pop
adc
std
jnp
cmp
addb
add
add
fwait
cmp
stos
sarb
in
add
incl
add
jno
fs
jne
lods
scas
addr16
out
mov
and
jmp
mov
xchg
mov
and
cwtd
push
int
arpl
ss
pop
pop
sub
or
mov
jp
sbb
pop
mov
fwait
aad
mov
popf
push
dec
add
pop
mov
xchg
inc
and
sub
and
xchg
enter
xor
jle
stc
adc
pop
adc
jge
xor
inc
pop
cmp
add
adc
and
test
cmpsb
xor
test
ljmp
data16
dec
adc
jle
aam
and
sbb
int
xchg
add
push
sub
ss
shll
aaa
stos
out
inc
mov
pop
or
andnps
pushf
add
inc
out
sbb
sbb
sbb
add
mov
test
add
add
clc
mov
and
hlt
scas
lea
in
add
incl
add
or
das
push
jmp
push
lods
push
xor
sbb
mov
and
push
shrb
pusha
xchg
mov
mov
ret
lret
cli
mov
cs
add
add
iret
sbb
scas
mov
loop
mov
inc
and
push
push
inc
jl
inc
test
leave
inc
mov
dec
sbbb
popa
fwait
inc
mov
call
outsb
loop
mov
inc
hlt
incb
inc
inc
and
stos
jns
jle
dec
inc
outsl
orb
imul
xchg
jmp
les
call
adc
imul
dec
loop
and
shl
sub
pushf
fnstcw
xor
addr16
dec
fcom
mov
inc
fdivrs
sarl
int
xor
inc
xchg
outsb
mov
ss
xor
xchg
mov
jno
or
sbb
lahf
ljmp
dec
in
sub
scas
xchg
push
adc
out
mov
jp
jecxz
add
incl
add
jmp
cmpsl
dec
xor
ja
mov
mov
call
xor
call
nop
dec
fldcw
dec
sub
les
or
add
mov
aas
mov
repz
cld
lock
out
das
lcall
or
fwait
dec
sahf
sbb
sbbb
mov
out
cli
dec
xor
xlat
fisubs
push
cmp
or
inc
pushf
or
and
mov
sti
ror
movsl
pop
pop
adc
mov
mov
test
std
ret
xchg
pop
sub
jl
inc
push
icebp
mov
mov
ret
mov
add
lret
and
inc
mov
add
stos
cmp
jle
repnz
inc
loop
mov
dec
arpl
mov
jo
xchg
mov
or
add
sub
imul
and
mov
adc
test
or
fdivs
in
scas
mov
incl
add
in
loop
sub
imul
in
adc
adc
jp
jae
std
mov
pop
subb
add
push
mov
and
sbb
add
inc
add
adc
inc
or
adc
mov
iret
pushf
push
mov
jb
in
push
push
daa
stos
xor
cmp
je
mov
incl
cmp
push
fisttpl
adc
lret
cmp
test
fldenv
mov
stc
fucomp
in
shrb
inc
ljmp
push
sbb
mov
pop
shrl
loopne
out
mov
jae
jge
inc
cs
or
adc
negb
xchg
into
or
xchg
pop
mulb
sbb
lret
mov
lahf
sbb
popf
xchg
insl
add
inc
push
jp
cmp
movsl
sub
xchg
sub
les
incl
add
mov
and
das
cmp
pusha
mov
pop
add
incl
add
dec
std
decb
pop
push
lret
jno
aad
pop
add
mov
sbb
pusha
xchg
add
icebp
push
imull
xlat
adc
and
mov
inc
inc
pop
shlb
jo,pt
sbb
mov
outsl
lods
sbb
rorl
lret
cmpsb
mov
mov
stc
xchg
dec
stos
pop
cs
jbe
lret
loopne
fldl
es
cmp
pop
cmp
and
push
out
mov
lock
daa
adc
cmp
jb
xchg
sbb
std
jmp
adc
and
out
mov
cmp
and
mov
dec
push
leave
leave
ss
scas
add
or
roll
adc
mov
mov
pushf
fcoms
push
xor
inc
cmp
je
pop
addr16
cmpb
mov
xor
popl
pushf
push
and
stos
cmc
adc
pushf
stos
or
fsubl
mov
ja
mov
push
movlhps
pop
add
incl
add
mov
add
or
repnz
repnz
push
cmpsl
ja
pushf
inc
out
loopne
arpl
movsl
data16
outsb
pop
daa
sub
push
sar
push
insb
sub
or
fimuls
les
in
fwait
aas
mov
roll
push
or
xchg
fnstenv
enter
cmp
pusha
pop
subb
mov
xor
push
repz
push
fdiv
or
cltd
cld
mov
adc
das
mov
jle
sub
add
sti
sub
or
xor
mov
lahf
mov
mov
popf
mov
push
cmp
mov
js
mov
iret
test
addb
pop
sub
xor
fcomp
rorl
test
rorl
mov
cmp
cmp
loop
dec
xor
xor
nop
lahf
test
movsl
push
add
xor
xlat
out
cld
daa
mov
and
incl
add
push
mov
pop
push
pop
cmp
cmpl
xor
sbb
xor
cmp
test
cmp
bound
cwtl
test
bound
movsl
lock
jne
shl
je
cmp
adcb
outsb
pusha
movsb
push
cmp
pop
inc
mov
xchg
sti
stos
xchg
xchg
dec
das
inc
out
out
stos
sarb
out
testb
stos
mov
jl
xchg
xor
push
aaa
xchg
insl
or
xor
push
jae
jg
scas
mov
sbb
cwtl
in
andb
xchg
mov
cld
scas
cmp
sbb
sahf
imulb
test
in
pop
int
and
aas
mov
rcr
ret
inc
cmpb
sbb
aaa
jae
lret
xor
jge
loop
inc
ja
inc
movsl
jb
adc
insl
xor
ret
pop
and
stos
in
mov
jp
mov
mov
in
push
jle
ficomps
add
add
add
inc
aad
cwtl
stc
mov
sbb
ljmp
mov
sub
mov
ret
int3
mov
pop
mov
aaa
in
cmp
fiaddl
jo
and
mov
pop
in
leave
or
fcoms
ret
ja
inc
sub
in
pop
ja
mov
sub
loop
xchg
das
xchg
js
popa
inc
add
push
aaa
adc
cmp
int3
and
popa
mov
sub
stc
popf
mov
ret
and
adc
jmp
jns
stos
sbb
daa
push
adc
sbb
fsubl
cmp
jnp
mov
xor
cltd
or
clc
adc
xor
jnp
pop
or
ljmp
xchg
mov
mov
inc
adc
psubb
flds
iret
leave
jl
gs
add
push
into
push
push
inc
lahf
mov
frstor
add
add
add
arpl
sbb
mov
xchg
insb
insb
out
jecxz
jne
sbb
inc
subb
xor
pop
jecxz
push
add
cmp
xchg
xor
scas
push
sub
mov
addb
loop
sub
mov
movsb
jge
ds
mov
faddl
sub
mov
push
cmpsb
jmp
pop
sbb
dec
xchg
cmp
fldt
sbb
stos
stos
jno
out
adc
inc
ret
cld
addr16
mov
ds
dec
sbb
divb
test
xchg
in
popa
mov
mov
xlat
mov
xchg
aaa
mov
push
and
scas
outsl
jge
push
xor
adc
or
push
adc
push
cmpsl
cltd
push
mov
jecxz
jae
sub
pop
shll
lock
incl
roll
ds
test
das
cwtl
mov
xchg
jbe
mov
pushf
popl
movsl
stos
in
in
xor
shll
add
xchg
inc
shl
xlat
mov
jg
or
fsubl
add
add
add
mov
adc
sbb
loop
mov
rcll
add
jmp
movl
push
lahf
mov
ds
jmp
outsb
push
das
xchg
popl
sbb
call
lahf
adc
push
xchg
je
and
pushf
sbb
stos
pop
xchg
push
out
popa
dec
lds
xchg
inc
jg
jle
loopne
repnz
lods
cltd
stc
andb
sub
mov
mov
dec
xor
enter
xor
and
sbb
sbb
sbb
mov
sub
mov
scas
and
or
gs
ja
cwtl
pop
and
mov
or
pushf
rolb
push
sbb
test
jle
adc
jle
dec
jge
stos
icebp
add
jle
les
aam
call
sarl
adc
lods
add
lahf
pop
cmpsl
jne
mov
sbb
icebp
add
add
add
push
test
icebp
adc
jg
sub
mov
or
shlb
pushf
sub
mov
lret
or
in
enter
mov
incb
rcrl
mov
xchg
push
sub
in
js
lahf
xor
sub
xchg
and
adc
push
dec
in
and
adc
inc
mov
lea
stos
shlb
daa
aad
ret
lods
jb
test
subl
mov
rorb
cmp
mov
cli
sbb
jle
sbb
test
push
imul
jl
push
test
adc
add
cli
and
push
jg
add
jo
inc
scas
ds
sub
mov
inc
xchg
sbb
and
mov
push
dec
test
cmc
inc
adc
mov
in
cltd
js
and
push
pop
movsl
sub
sahf
mov
dec
add
idiv
jg
sub
lods
sbb
arpl
add
add
add
pop
xchg
jg
xchg
and
xchg
sub
insb
jnp
and
fld
popf
scas
lret
pusha
push
inc
arpl
and
jge
xchg
cmc
mov
fisttps
andl
xlat
add
sub
mov
pushf
ljmp
fdivr
adc
subl
shrl
mov
test
sub
mov
iret
xchg
hlt
sbb
outsb
pusha
or
adc
dec
ret
daa
ja
addr16
bound
dec
cli
adc
insl
mov
sbb
cmp
ret
stos
repz
nop
cmp
lock
adc
aas
loope
fsubl
mov
mov
jnp
sub
pop
scas
push
jl
xchg
push
pop
jae
xchg
enter
and
mov
cmp
pusha
jno
push
and
popf
xor
clc
xor
fwait
mov
mov
cwtl
or
mov
or
add
pop
mov
fstps
aaa
movsl
fldenv
incl
add
sti
insl
outsl
in
fnstcw
cmc
cmpsl
arpl
fildl
movsl
cmc
stos
xrelease
into
insb
fbld
mov
lds
or
or
or
rorb
lds
insl
push
popf
jne
movsb
loope
xchg
dec
xor
cli
out
adc
lret
imul
fs
sbb
jmp
test
xchg
xchg
dec
add
fisttps
pop
out
mov
inc
and
dec
sbb
jge
dec
push
fdivrp
sahf
cltd
jnp
sbb
adc
gs
cltd
repnz
inc
sbb
sub
push
ds
movsl
outsl
dec
mov
lcall
and
cmp
adc
fs
int
mov
ja
lcall
cmc
jb
or
stos
in
sub
cwtl
bound
fadds
adc
out
cltd
and
mov
add
repnz
movsb
jle
arpl
or
fsubs
add
add
add
jmp
pop
fnstcw
mov
add
mov
sub
mov
notl
dec
add
lret
push
jb
fbld
addr16
in
inc
mov
in
or
jge
mov
sahf
xchg
or
sbb
adc
dec
pushf
or
fucomp
xchg
out
xchg
xchg
or
mov
aad
xchg
add
add
pop
adc
aam
shlb
fsubs
add
cwtl
leave
fldcw
notl
lock
cltd
lret
xlat
mov
insb
es
inc
ret
push
jbe
cmp
push
int3
decl
dec
rolb
mov
std
push
sub
cmp
sbb
xor
scas
dec
fdiv
aaa
lret
test
xor
outsl
test
or
scas
cwtl
jae
enter
sahf
dec
mov
add
jmp
sub
xchg
push
outsl
imul
add
incl
add
popf
sub
jnp
dec
cmp
es
fwait
scas
ljmp
iret
fldl
sbb
in
cmp
dec
outsl
test
nop
lahf
mov
lods
adc
clc
pop
cmpsl
xor
adc
dec
in
test
in
mov
pop
mov
mov
lods
mov
andb
out
or
mov
mov
mov
xor
xchg
push
roll
jne
cs
out
je
push
cmpsl
popf
xchg
jl
inc
push
push
jge
and
mov
mov
popa
xchg
inc
stos
ucomiss
or
fsubr
mov
test
and
xchg
jnp
mov
and
jge
jne
cmp
pop
mov
test
xchg
outsl
adc
dec
sbb
loope
es
stc
mov
subb
icebp
aad
sbb
xchg
mov
test
pop
fxch
loope
ljmp
add
add
mov
fnstenv
aaa
add
add
add
add
push
lret
mov
jns
lret
scas
jle
js
xchg
js
add
cmp
and
cmp
mov
and
divb
jns
pop
cli
pop
add
inc
add
mov
imul
sahf
pop
or
test
movsl
call
jnp
pop
xchg
xchg
cmp
test
mov
stos
sbb
xchg
push
sub
push
push
pop
sahf
outsb
xorb
dec
lods
js
adc
aas
lea
push
jbe
andl
divl
sub
addr16
imul
jecxz
mov
sbb
cmpsl
mov
xchg
xchg
jmp
jl
in
or
movsl
xchg
gs
test
out
aam
lret
push
pop
inc
or
cmpsb
mov
aam
fwait
jnp
shlb
mov
pushw
ror
add
add
fisubs
xor
shr
xchg
fwait
les
cld
je
jbe
jns
sbb
jmp
das
cld
aad
add
incl
add
cltd
pop
mov
mov
sub
insb
pop
xchg
and
ficoms
movsb
inc
jnp
mov
ret
sbbb
pop
push
fsts
stc
lret
ss
jbe
xchg
fwait
push
xchg
aas
aas
xor
mov
out
movsb
xchg
aas
lds
repz
aam
leave
xor
sub
jle
das
fnstenv
sbb
gs
sub
mov
mov
jo
xor
inc
mov
jns
inc
jp
movsb
cmp
xchg
mov
push
xchg
aas
imul
push
ljmp
arpl
out
push
mov
stc
sbb
outsl
xchg
mov
mov
jmp
xchg
cmc
add
stos
or
sub
pop
dec
mov
roll
jge
enter
jo
sub
imul
jp
xchg
jbe
add
cltd
jmp
fildl
or
leave
mov
add
add
add
sub
js
sahf
imul
sub
fisubrs
mov
inc
jle
sub
sbb
pop
sbb
or
sti
pop
popf
push
mov
xchg
cmp
pop
inc
test
cmpsl
ss
hlt
push
lds
cmp
pop
sub
addr16
insb
sbb
xorb
imull
lahf
pop
sti
shlb
sti
out
jns
and
sub
mov
fisubl
dec
je
loopne
inc
xchg
cmp
jne
pop
hlt
mov
lahf
sbbb
addr16
mov
rolb
sti
add
cmp
push
pop
iret
loopne
mov
pop
xor
sub
jo
leave
nop
dec
sbb
das
xchg
or
mov
mov
test
cvtdq2ps
movsl
es
jns
lock
outsb
cmp
sub
mov
cmp
cmp
out
cmpsl
mov
cli
mov
mov
or
adc
lahf
test
fcmovu
adcl
add
add
push
jg
dec
xchg
dec
push
insl
aam
shrl
add
add
add
das
mov
clc
add
xchg
lahf
push
sbb
mov
inc
cmp
mov
dec
push
jnp
leave
data16
in
sbb
and
jne
jmp
mov
enter
call
inc
test
xchg
pop
pop
fcoms
test
sub
or
outsl
pop
shl
fwait
pop
xchg
stc
jo
add
cmp
dec
faddl
mov
in
jo
dec
dec
xchg
outsl
mov
std
jns
test
or
cmp
mov
xor
add
mov
xchg
hlt
sub
push
push
cmc
cli
mov
jne
mov
stc
arpl
pop
aad
xor
movsl
aas
or
inc
jle
sub
movsl
inc
mov
add
orb
mov
xor
adcb
sbb
ret
jge
mov
pop
jns
arpl
mov
lea
mov
add
mov
fucomip
push
insb
xor
jno
out
in
imul
incl
add
push
ljmp
mov
fnstenv
xchg
push
test
orb
add
jbe
cltd
mov
add
stos
ds
or
out
inc
mov
pop
pop
lret
cmc
ret
cmpsl
sub
int
mov
pop
xchg
pusha
push
popl
and
add
sbb
iret
push
aad
dec
cltd
sbb
push
enter
call
inc
push
pop
and
add
pop
xor
add
push
xchg
test
subl
inc
and
dec
mov
adc
push
adc
mov
gs
mov
xchg
orb
cwtl
adc
dec
das
xlat
test
adc
addr16
mull
nop
fisttpl
and
test
int3
mov
movsl
mov
movsl
and
adc
daa
inc
push
mov
in
subb
xchg
add
imul
inc
add
dec
out
iret
jmp
aas
in
push
data16
add
incl
add
mov
movsl
or
rclb
stc
sahf
xorb
xlat
sub
adc
fucomi
cmpsb
jp
add
mov
stc
ds
mov
jl
in
push
cmp
xchg
scas
outsl
xchg
ds
pop
add
xchg
ds
inc
ffree
out
int3
mov
add
mov
inc
out
lods
pmullw
popa
pop
enter
leave
sbb
jo
jp
insb
enter
push
aaa
icebp
jecxz
inc
loop
or
inc
insl
xor
mov
inc
add
and
cld
jecxz
mov
jae
sub
in
loopne
and
stc
arpl
pusha
andb
and
andb
imul
bound
jae
movsl
sbbb
in
ret
push
ret
dec
stc
push
inc
mov
sub
cmp
repnz
call
mov
out
mov
mov
push
dec
ror
push
lcall
inc
psubsb
dec
es
add
add
std
cmpsb
pop
dec
sub
sub
sub
stos
shrb
add
add
add
decl
fimull
inc
out
aad
cmp
sbb
lret
fucomi
iret
in
movsl
cmpsb
leave
xchg
test
jns
add
sub
or
lods
jne
jo
sahf
pop
cmp
cwtl
inc
jmp
push
sti
in
ret
jge
mov
in
scas
bswap
xlat
je
lds
adc
add
clc
int
lea
lods
mov
sub
pop
push
sbb
or
mov
jp
fisubrl
add
adc
int
xor
xchg
mov
sub
or
cmp
inc
mov
xor
aad
dec
push
adc
and
inc
lcall
fcmovnb
add
mov
lods
fsubr
aad
repnz
xchg
aad
cmp
aaa
sbb
insl
mov
bound
pop
dec
sbb
ja
add
neg
std
sub
dec
or
fwait
stc
iret
outsb
add
incl
add
pop
add
xor
sub
cmc
push
mov
test
xchg
sub
sub
lock
lar
test
ret
jae
jne
jle
jg
cmc
pop
push
or
add
sahf
and
sub
je
pop
mov
fsub
je
or
stos
imul
pop
psubsw
loopne
jecxz
jmp
mov
testl
sub
sbb
dec
lret
dec
inc
repz
aad
loop
divl
popa
jmp
pop
xchg
rolb
cmc
shr
adc
aad
inc
add
jp
rcl
push
mov
scas
dec
bnd
ds
testb
or
cmpsl
mov
lods
mov
fsubrs
mov
cmp
pushf
clc
ret
jns
aas
sbb
pop
add
test
lock
add
add
cs
xor
cltd
daa
mov
add
incl
add
sbb
mov
add
mov
or
loop
adcb
push
xchg
dec
aas
ficoms
scas
push
jns
mov
pop
fwait
sbb
dec
and
int3
repnz
dec
jg
sarb
jl
sbb
cmp
pop
mov
les
in
popf
push
and
arpl
aam
sbb
stc
fcmovu
mov
xchg
inc
and
shlb
mov
mov
and
cmpsb
cld
ficomps
jbe
lods
sbbl
int
lcall
aam
fstl
insb
das
into
or
loopne
repnz
cmc
sahf
jo
jo
and
inc
and
pop
inc
xchg
cli
add
sub
das
in
adcb
das
in
mov
add
cli
roll
add
sbb
mov
ja
and
lahf
add
ja
out
sbb
xchg
jo
add
add
add
xchg
cs
dec
sbb
repz
mov
mov
test
push
cmp
fwait
sub
lret
decb
fsubl
add
lahf
cli
ljmp
and
sbbl
movsb
cmpsb
test
call
ret
pop
shll
out
inc
adc
les
mov
pop
mov
pop
sbb
std
es
inc
sub
xchg
xlat
pop
test
jno
mov
push
sub
mov
test
aad
adc
and
jb
scas
and
rcrl
vbroadcastf32x8
adc
xlat
pusha
push
addl
lock
jle
mov
mov
cmpsl
sbb
xor
mov
lds
into
pop
idivl
stc
cli
add
sub
ja
mov
cld
aas
mov
incl
add
stos
xor
xor
and
pusha
out
sbb
jno
cmp
inc
push
arpl
adc
push
fisubs
and
and
xor
scas
sbb
repz
je
imul
sub
push
cmpsl
cmp
cmpsb
jo
or
cmpsl
pusha
int3
je
ds
inc
jns
or
insb
adc
insl
lret
mov
inc
ds
push
xchg
mov
adc
dec
jl
mov
cmp
repnz
dec
fs
dec
in
repz
lret
fwait
mov
andb
int
mov
and
and
ss
ja
lcall
jmp
in
push
mov
jmp
mov
rol
lods
xchg
aas
enter
mov
adc
mov
in
mov
js
shrb
cli
in
stos
push
lods
sub
scas
in
cmp
int
mov
jnp
outsl
cmpsb
loopne
xor
add
incl
add
dec
ss
int
lret
cmp
rcll
fsubrs
pop
sub
sbb
cmpl
xor
xchg
xor
xchg
add
ljmp
pushf
cs
xchg
jmp
in
fsubrs
sbb
xchg
mov
jo
lret
jmp
adc
out
or
roll
pop
xchg
lods
and
inc
push
adc
cli
xchg
iret
cltd
dec
loope
test
add
lahf
pop
pop
test
xlat
je
icebp
ja
cmp
mov
jae
adc
cmp
sbbb
js
fs
rorb
in
xor
ss
lahf
movsl
movsl
sbb
jle
push
inc
xor
push
mov
dec
mov
out
xor
push
push
jb
je
sbb
push
stos
mov
jbe
lea
push
pusha
and
sbb
xchg
push
mov
cli
xchg
jle
push
je
xchg
pop
mov
lret
add
add
add
cld
push
jo
loopne
imul
pop
outsb
inc
dec
jbe
adc
mov
leave
mov
stos
push
leave
divb
add
pop
test
pop
mov
pop
mov
pop
sub
hlt
xchg
ret
xor
xchg
xchg
mov
mov
dec
sub
cmp
xlat
jb
scas
adc
imul
and
sbb
cmp
xchg
rdpmc
mov
and
es
pop
mov
shrb
or
bound
ss
add
dec
and
dec
in
cmp
sahf
mov
pop
inc
gs
xchg
loopne
xchg
cmc
in
out
push
sti
test
into
icebp
in
nop
mov
jne
addr16
rorl
cmp
adc
push
jp
push
mov
fwait
das
fsubr
iret
andl
xlat
decb
push
jg
push
ds
jae
ret
mov
inc
aaa
dec
fwait
jnp
aad
sbb
push
leave
je
add
add
add
add
jae
in
pushf
fldcw
mov
call
sub
imulb
cmp
shl
add
test
shufps
pop
or
push
jmp
lret
repnz
pushw
dec
mov
call
testb
adc
inc
sbb
daa
stos
stos
add
mov
xchg
enter
jle
inc
les
lret
insl
outsl
mov
jmp
in
sbb
mov
adc
jp
jmp
testl
mov
call
sbb
mov
stos
mov
mov
jmp
aaa
movsl
mov
fs
jg
daa
inc
fsubs
inc
cmp
pop
dec
scas
inc
fwait
outsl
jnp
inc
std
mov
test
mov
jecxz
pushf
shrl
sub
add
orl
inc
fcmovnu
pop
dec
mov
mov
bound
mov
std
mov
sub
sbb
incl
add
lods
rcrb
dec
loopne
cmp
cmp
imul
push
cmc
in
ret
inc
inc
addl
xor
xchg
mov
xchg
mov
fadds
std
or
xchg
js
mov
gs
inc
or
jg
cmpsl
dec
and
jbe
dec
cmp
andb
out
sbb
jno
stc
push
test
xor
dec
cwtl
inc
cmpsb
paddusw
clc
cld
mov
test
scas
xor
cli
in
xchg
sub
out
out
in
cmp
stc
and
inc
andb
fs
xor
lret
int
lahf
aas
and
and
enter
push
sahf
out
insb
push
mov
cmpl
cmpb
push
ds
push
push
out
fldl
outsb
mov
fidivrs
cli
pop
jo
cmp
ja
ljmp
test
adcl
xchg
fisttps
mov
or
jbe
add
add
add
popa
popa
in
and
loopne
adc
mov
sbb
cmp
jecxz
ror
cmpsl
cld
test
fsts
inc
test
lea
fdivrl
test
cmp
fdivrp
mov
pop
lods
adc
test
les
daa
cli
dec
fstl
ret
xor
jl
xor
dec
pop
repnz
mov
cli
push
mov
in
rolb
leave
cli
and
pop
push
jmp
or
adc
mov
or
dec
sti
les
fists
push
mov
push
xor
xchg
mov
add
cli
mov
mov
or
icebp
push
xchg
pop
dec
fidivs
and
sbb
test
mov
inc
pop
xor
sub
cmp
add
mov
cmpl
or
jns
mov
ds
addr16
cmpsb
jmp
jmp
and
xchg
lret
cli
add
add
add
bound
sub
sbb
ja
add
add
add
mov
andl
aas
out
push
lahf
ret
dec
jmp
or
movb
les
cmpsl
out
rorl
push
dec
push
lcall
shll
or
push
out
xchg
fs
jae
mov
inc
jo
push
jmp
cmp
lds
jg
cs
and
enter
and
aam
fmull
sub
sub
adc
sbb
mov
push
insl
jle
jg
das
js
leave
jno
sbb
mov
mov
jns
push
into
lahf
stos
ljmp
loopne
add
cmc
dec
xlat
mov
push
cmp
test
rcrl
mov
sar
mov
vpshaw
std
out
mov
jl
dec
mov
or
aad
lock
out
ja
nop
mov
jle
and
je
inc
in
pop
pop
call
add
divl
in
sub
lds
add
add
add
jge
xor
ja
xchg
pop
in
in
xor
mov
sbb
jl
lods
test
lock
outsl
sbb
aas
inc
out
xorl
addl
cmp
mov
jg
push
mov
push
sub
cmp
or
adc
mov
pop
cs
cwtl
lea
jno
push
clc
sub
sub
sarl
mov
movsb
orl
jb
iret
cmove
pop
jno
push
iret
lods
ret
jno
lock
adc
dec
in
sub
adc
lcall
ret
loopne
cmp
pop
sub
es
sub
push
sahf
push
shlb
cmp
xor
and
or
cmp
ljmp
pop
repz
push
push
lds
mov
bound
mov
fld
push
and
fistpll
or
add
add
fisubs
mov
mov
arpl
add
incl
add
insl
mov
xor
lret
jns
mov
mov
lahf
imulb
fs
in
ret
mov
mov
sbb
out
mov
xchg
shl
fcompl
vmovups
pop
jp
mov
out
sub
es
dec
push
add
filds
fcomip
fwait
xchg
lahf
arpl
iret
imul
lea
mov
lcall
jge
and
rolb
je
mov
inc
mov
mov
add
push
add
jb
or
fcomip
jle
sbb
cltd
lods
add
jmp
push
sub
add
pushw
cmp
push
sbb
sbb
sub
jmp
jecxz
daa
or
outsb
ds
mov
fsubr
les
pop
insb
mov
dec
inc
iret
inc
xchg
mov
add
insl
sub
shlb
mov
pop
lods
in
ret
jp
add
add
add
daa
jno
pusha
xchg
icebp
push
pop
xchg
mov
dec
fdivs
ds
add
loop
sub
jo
add
jbe
loope
cltd
stos
daa
popa
adc
mov
xcrypt-ofb
cmpsl
jmp
and
daa
test
xor
adc
cmp
into
dec
ret
int3
dec
jne
pop
jecxz
popf
add
in
rcrl
jecxz
out
popl
or
adc
inc
adc
sbb
clc
mov
inc
inc
cmp
dec
clc
push
sbb
add
lods
sub
jg
cltd
add
dec
rcl
xchg
mov
push
pop
jnp
outsb
adc
imul
ja
stos
add
and
fstps
repz
pop
pusha
rol
fisttpll
and
mov
cmp
add
cli
repnz
fimull
mov
jle
xor
xchg
jle
sbbl
xor
into
inc
xchg
stc
outsl
mov
popa
mov
add
add
testl
test
incl
add
jo
jns
lea
nop
cmp
mov
jmp
lcall
xlat
sbb
push
out
sub
lock
int
xchg
jne
comiss
pop
jno
push
push
mov
xchg
mov
mov
ret
mov
sub
mov
test
aam
add
ljmp
adc
outsl
push
sbb
xor
out
lahf
xchg
out
push
pusha
sbb
mov
test
out
insb
fdivrp
push
cmp
cli
xor
fisttpl
iret
or
imul
out
lock
mov
pop
pop
mov
insb
pop
rcll
sub
clc
in
mov
lret
and
sahf
adc
dec
jecxz
aaa
les
fldenv
fidivl
je
mov
mov
fnstenv
and
jbe
pop
add
jo
ja
std
stos
sbb
ljmp
add
incl
add
aas
in
xchg
sbb
lahf
or
xor
arpl
test
add
rorl
pop
add
pop
mov
fdiv
lock
cmp
xchg
imul
aas
mov
jne
sbb
mov
sub
test
mov
fs
adc
push
outsl
addr16
repnz
jle
sbb
inc
imull
das
mov
jecxz
jo
loopne
stos
outsb
pop
mov
call
sub
das
lock
ret
jae
nop
jno
cmpsb
sub
sub
lea
jns
cmc
rorb
dec
je
aas
in
inc
jno
enter
and
pop
inc
std
fldcw
ja
lea
popf
adc
sbb
push
dec
mov
imul
outsl
imull
mov
sub
mov
push
adcb
sbb
xchg
push
aad
mov
pop
sub
pop
sbb
push
sbbl
js
dec
add
add
cmpsb
push
sbb
into
ljmp
add
push
xor
cltd
mov
add
and
xchg
jns
popf
jge
pop
sahf
xchg
mov
ds
in
addb
xchg
push
dec
cmc
mov
jbe
push
sbb
movsl
test
mov
pop
pop
mov
pop
leave
or
rcrl
adc
xchg
add
xchg
inc
jl
insl
pop
inc
repnz
sbb
mov
int3
in
int3
jl
mov
arpl
adc
out
pop
out
fwait
push
push
mov
jl
cld
jns
jg
mov
cwtl
rclb
lds
aad
out
cmp
mov
movsb
hlt
push
mov
negb
mov
fadds
call
ficomps
fs
pop
push
lret
sbb
xchg
lods
movsb
add
pop
int3
xchg
mov
test
push
imul
fisttpll
cld
cmc
int
inc
add
outsl
inc
dec
add
cmp
cli
mov
shrl
add
incl
add
dec
jne
in
xor
jns
repz
pop
fs
and
ficomps
pushf
cmp
das
lahf
jl
in
push
xchg
sti
int3
and
das
sbb
or
mov
movsl
cltd
incl
or
mov
and
sub
das
jl
shll
stos
js
sbb
andl
jne
jb
mov
stc
or
cmp
sarl
jle
jmp
outsl
sbb
mov
mov
and
lea
xchg
les
dec
fs
in
mov
call
add
fstps
xlat
les
adc
aam
push
inc
clc
or
pop
jb
bound
mov
sti
sub
mov
jo
pop
cltd
push
adc
mov
mov
test
call
mov
cmp
std
xchg
dec
icebp
inc
je
jno
mov
adc
add
add
test
lcall
xor
jg
add
add
add
icebp
mov
out
stos
ljmp
in
mov
lods
rep
popa
gs
cmp
jp
cwtl
test
add
idiv
mov
jns
push
inc
rcrl
mov
jbe
push
sub
pop
data16
cmp
jae
push
adc
loope
xor
mov
xchg
xorb
or
and
jecxz
jns
mov
cli
sbb
or
lcall
pop
mov
lahf
in
pop
mov
push
decl
test
pop
pop
dec
loope
mov
jnp
mov
cs
add
jmp
mov
ljmp
lcall
push
loope
add
popf
jbe
add
cmp
mov
lret
sti
xlat
loope
cmpb
lods
xchg
lods
sub
add
xchg
xchg
jns
jmp
mov
cmp
add
add
test
loop
sbb
outsb
loop
andb
mov
push
sahf
cmp
mov
inc
mov
das
add
jge
ja
das
idiv
loop
lea
iret
xor
mov
out
mov
mov
std
push
add
test
pop
icebp
mov
adc
out
mov
lret
flds
push
jno
xor
adc
fidivl
cltd
dec
leave
adc
stos
inc
inc
rcll
or
push
into
stos
or
fnsave
arpl
mov
jno
out
push
adc
out
mov
or
mov
out
imul
jle
icebp
test
push
cs
sbb
mov
inc
cltd
mov
jne
lods
push
dec
rep
js
inc
aam
jno
lahf
loop
stos
outsb
rcrl
inc
fisubl
lds
and
lods
stos
fistps
push
add
lcall
test
addl
add
or
dec
incb
enter
inc
subb
insl
mov
shrb
pop
ljmp
dec
jb
mov
jp
std
pop
mov
out
or
mov
call
and
adc
icebp
int3
jle
xor
add
sub
mov
aas
mov
cmp
mov
pop
push
inc
loopne
xor
cmp
xchg
repz
pop
push
dec
lock
ret
mov
pushf
xchg
push
lcall
or
es
mov
lods
jge
jl
ljmp
adc
in
sbb
fwait
jnp
sbb
pop
jge
jb
and
in
xchg
popl
or
mov
mov
pop
sbb
adc
dec
js
aad
adc
mov
int
ss
xchg
cmpsl
icebp
daa
push
adc
sbb
jno
xor
popf
mov
xchg
xor
adc
jl
cs
idiv
jne
iret
jne
mov
add
add
add
cmp
xchg
imul
dec
jp
dec
jl
mov
dec
sar
mov
mov
in
mov
nop
rcrl
ret
das
imul
int
testl
xchg
jle
dec
jmp
loopne
inc
cld
shrb
aam
mov
fisttpl
es
je
mov
insb
rorl
sub
jle
shrb
xchg
cwtl
out
jecxz
fsts
push
adc
pop
cli
cmovns
outsl
iret
shlb
ja
imul
sbb
negl
std
xlat
push
rcrb
push
fwait
lea
xchg
mov
dec
add
ss
push
or
movsb
out
jns
stc
addr16
cmc
fistl
push
adc
mov
insb
lds
call
inc
in
jns
sbb
rorb
ds
mov
cmpl
xchg
pushl
sub
or
mov
incl
add
sbb
mov
push
add
dec
push
and
icebp
out
mov
les
xchg
movsl
fadds
test
rcrb
rcrb
xchg
xchg
nop
inc
daa
add
lods
notb
outsb
push
mov
mov
inc
call
in
xor
mov
into
inc
sbb
and
mov
pop
mov
push
mov
push
movsl
aam
pop
adc
mov
fidivs
insl
cmp
lret
lret
setne
sub
mov
lds
or
mov
dec
jae
je
dec
mov
inc
fwait
test
shl
adc
add
xchg
test
dec
pop
arpl
cld
imul
cmc
cwtl
xor
add
pop
xor
je
xor
fildl
mov
stos
dec
fimull
sbb
sbb
pop
mov
sub
dec
stos
pop
push
add
sti
iret
ss
push
jno
icebp
add
incl
add
imul
or
xchg
test
neg
pop
add
sub
sub
lock
xchg
pop
into
lahf
int3
mov
xchg
mov
daa
cli
fmuls
cs
cmp
push
adc
into
cwtl
xchg
je
pop
mov
repz
in
jmp
or
add
mov
cwtl
mov
mov
ss
pop
idiv
daa
and
jno
andl
hlt
lret
dec
pushf
jg
mov
fsubr
stos
lods
sub
pop
sub
push
call
daa
xor
lds
xor
vmread
mov
jne
dec
sub
test
sub
xor
sub
mov
sub
fsubrl
add
push
scas
sub
int3
sahf
push
mov
mov
outsl
cmpsl
inc
stos
popa
fidivrs
jge
out
test
mov
lret
ljmp
subb
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
out
xchg
add
add
movsl
sbb
lahf
dec
stos
iret
jns
and
and
pop
mov
test
and
cmpsl
shl
movsb
mov
sahf
cld
sbb
push
xor
pop
push
cmpsl
mov
sahf
push
cwtl
call
es
and
xchg
insb
cmp
inc
ljmp
mov
and
sahf
pop
xor
ficoml
decb
jno
jne
in
xorb
xor
jmp
or
push
sbb
mov
xchg
loope
push
test
adc
loopne
adc
jne
jmp
jecxz
in
repz
pusha
push
push
mov
je
jb
xlat
push
daa
or
mov
arpl
mov
test
jg
inc
insb
xor
xchg
xchg
in
cmp
imulb
fcmovnbe
mov
popf
and
xor
mov
ret
fidivl
imul
add
mov
mov
loop
into
mov
add
incl
add
xor
scas
xor
jp
jns
sbb
ljmp
aas
xor
cmc
push
xchg
mov
xchg
dec
mov
cmpsb
mov
jp
insl
cli
jle
cmpsl
cs
jecxz
add
cmp
cli
jnp
std
xchg
lcall
adc
cmp
repnz
ja
scas
push
push
push
push
sub
xor
push
mov
lret
mov
jmp
jns
add
xchg
mov
sbb
mov
xor
es
lret
pusha
cmp
ja
sbb
ret
dec
inc
fsubrs
ja
test
aaa
out
mov
mov
inc
sbb
push
mov
loop
cmc
xchg
leave
mov
xchg
mov
lds
cmc
and
pop
out
stos
push
scas
mov
adc
push
sbbl
lret
jo
jge
in
scas
push
sbb
mov
popa
fstpl
stc
bound
lds
call
arpl
and
out
ljmp
lock
xchg
inc
cmpsl
ljmp
add
add
loopne
lcall
xchg
xor
pop
in
sahf
xor
fstl
sub
xchg
push
pop
lcall
xor
out
jecxz
xchg
xor
les
loopne
pop
out
jge
jno
in
or
ja
lret
andl
sbb
jb
or
inc
sbb
jno
mov
dec
ljmp
xlat
xchg
jb
or
xor
mov
add
leave
icebp
enter
or
icebp
loop
push
dec
inc
push
add
aam
outsb
mov
imul
push
int3
jno
jae
push
pushf
cs
rorl
push
fstpl
test
push
sub
insb
cmpl
in
aam
test
or
push
pop
call
popa
mov
dec
cmp
movsl
repnz
lcall
mov
in
imul
push
jnp
sbb
push
xor
outsl
adc
incl
add
ds
popf
lea
inc
ror
xchg
jecxz
hlt
add
fucomp
xor
cmpxchg
add
jmp
or
adc
adc
clc
pusha
enter
repz
add
push
inc
adc
mov
cmp
movsb
push
ss
sahf
mulb
pushw
jo
stc
mov
xchg
mov
into
jns
inc
jecxz
add
sub
xchg
add
mov
les
mov
and
mov
mov
jnp
dec
xor
orl
out
fisubrs
ret
or
sub
add
mov
push
pop
inc
jle
gs
or
pop
test
mov
movsl
push
ja
popa
adc
fisttpl
adc
push
adcb
and
mov
sub
jo
fld
dec
sub
inc
add
aas
ds
push
mov
sub
add
push
aas
or
mov
popa
je
les
add
add
mov
mov
mov
mov
dec
mov
pop
ret
fdivrs
lds
or
in
mov
or
jne
push
ja
jo
xchg
add
inc
lcall
jmp
inc
mov
ds
sbb
shrb
cmp
xor
pop
pop
jb
inc
sbb
pushf
frstor
sbb
test
stc
popa
or
test
movb
mov
cmp
xchg
mov
es
rol
jne
xor
test
push
imul
cmp
adc
cmpsl
es
iret
mov
lock
shrb
cmp
stos
jmp
mov
inc
mov
inc
fisttps
or
cwtl
sub
call
lods
mov
cmp
push
sub
rorl
xlat
or
push
add
insb
fidivl
bound
mov
mov
add
incl
add
and
add
push
and
sub
addr16
loop
jo
xor
inc
mov
incl
mov
xchg
xor
inc
mov
fbstp
fidivl
inc
je
adc
stos
sub
mov
xchg
in
test
push
lods
jae
imul
fisubs
roll
movb
or
aas
ds
mov
shlb
loopne
xchg
scas
add
roll
xlat
imul
dec
lahf
mov
das
jno
sarl
js
sub
jmp
ret
leave
dec
int3
cmp
fs
sahf
adc
push
cld
cmp
repz
dec
add
je
hlt
nop
xchg
es
add
cmp
add
in
mov
mov
inc
fwait
adc
pop
ljmp
pop
push
call
inc
xor
cmp
mov
jns
outsl
mov
add
add
add
fs
push
sub
ds
rclb
cmpsl
push
mov
xor
pusha
arpl
pop
test
mov
mov
mov
mov
sub
jno
adc
in
mov
fimuls
push
pop
push
cmc
inc
aas
inc
add
call
pop
push
subl
cmc
adc
xchg
cld
cmpsb
into
daa
add
sbb
rorl
cwtl
adcb
fnstsw
push
insl
xchg
mov
adcl
repz
cmpsl
xchg
mov
xchg
dec
lret
int3
fisttpl
idiv
out
add
mov
outsb
pop
mov
cwtl
imul
mov
cli
lock
fs
iret
jne
in
mov
xlat
mov
dec
lock
sub
rorl
arpl
mov
xchg
iret
sub
popf
pushf
add
int
fstp
iret
push
cmpsb
fadd
dec
shlb
add
incl
add
push
lods
mov
dec
int3
idivl
adc
out
xchg
clc
fwait
pop
xchg
mov
popf
add
sub
enter
aaa
or
sti
push
pop
iret
push
mov
mov
iret
adc
dec
mov
fimuls
add
mov
out
push
and
push
and
shrl
xchg
out
into
sbb
inc
out
sbb
push
inc
out
out
and
fwait
inc
aam
jb
in
repnz
adc
mov
mov
cmpsb
stos
and
fcomip
mov
adc
pop
dec
loopne
jl
mov
shlb
sub
hlt
es
push
and
stc
sbb
cld
xchg
aad
je
jecxz
popf
imul
xor
dec
sub
xchg
jbe
call
fists
ret
movsl
aaa
movsb
push
mov
dec
pop
jno
out
je
mov
push
mov
add
adc
std
out
ljmp
mov
add
incl
add
add
xchg
lods
mov
mov
pop
cld
cli
cmp
popa
dec
leave
add
mov
or
repnz
jl
inc
pushf
push
enter
jg
movl
xchg
aaa
pop
mov
and
hlt
xor
adc
cmp
notb
dec
lock
sbb
sbb
xor
fildll
mov
pop
rolb
ficompl
loop
in
sbb
call
mov
rcll
cli
adc
xchg
or
xchg
orl
test
test
or
stos
pop
jl
lods
pop
xor
mov
sbb
inc
into
sti
adc
xchg
js
xor
loop
or
xor
adc
inc
mov
aas
retw
rcll
addr16
divl
inc
xchg
loope
adc
and
pop
clc
xor
out
or
lret
loop
hlt
dec
testl
lods
les
jnp
mov
icebp
bound
add
incl
add
and
inc
outsb
dec
incl
pop
xchg
dec
sub
sub
jmp
jno
das
pop
sti
and
cmp
dec
jnp
outsl
sarl
test
sbb
scas
lock
sub
fdivrs
loopne
icebp
roll
jno
jne
jmp
adc
sub
cwtl
sub
push
xchg
mov
push
mov
fldl
les
or
xchg
sub
bound
lea
in
icebp
subl
es
adc
dec
push
fsubrl
mov
inc
or
xchg
xor
stos
xor
xchg
int
xchg
push
pop
adc
fxch
enter
and
and
inc
or
xchg
pop
push
mov
ret
int
imul
jg
repnz
inc
or
je
add
adc
inc
imul
loopne
push
mov
fcoml
sub
mov
add
add
les
fcomps
add
add
scas
popl
add
add
add
adc
pop
cmc
lahf
rep
mov
cmp
arpl
lret
dec
sarl
add
test
mov
and
fidivrs
pop
or
lfence
inc
lea
inc
sbb
in
adc
jp
jne
pop
or
hlt
mov
lret
adc
shlb
jno
jmp
outsb
or
xor
repnz
ljmp
movl
fsub
notb
test
hlt
sbb
push
mov
pushl
sti
jae
dec
jb
xor
sbb
sbb
popa
mov
fisubrl
lret
or
loopne
fwait
mov
xchg
inc
ljmp
lods
frstor
sbb
cmp
mov
imul
jns
inc
add
cs
aas
mov
scas
sub
ljmp
dec
mov
iret
in
lods
nop
add
incl
add
pop
cltd
jns
inc
das
mov
stc
and
cmp
inc
clc
pop
cltd
xchg
addr16
iret
mov
pop
mov
ret
and
repnz
jg
addr16
sbb
in
or
pusha
dec
cli
mov
sbb
pop
iret
mov
mov
cmp
test
stc
pusha
adc
xor
lcall
cmpsl
and
aam
push
not
fisubrl
mov
into
mov
aaa
lods
shrl
iret
cltd
addr16
sar
les
mov
xor
pop
mov
dec
inc
and
adcb
rcrb
repnz
rclb
cmc
mov
in
push
movsb
xor
jl
out
cmp
push
jl
adc
add
cs
push
in
outsb
mov
sti
fcmovb
xor
daa
pop
xchg
call
jns
sub
inc
pop
and
push
mov
sbb
cs
aaa
shlb
cmc
div
testl
aas
lods
xchg
add
incl
add
cli
cmp
push
test
xor
push
push
out
add
xchg
fs
shrb
jne
mov
cmp
push
cmp
mov
ljmp
cmpsb
lods
push
sbb
mov
cld
jnp
jmp
ret
inc
sbb
pop
addr16
push
jo
adc
cmp
sub
sbb
or
cwtl
imul
jns
data16
sbb
iret
mov
andl
and
roll
cltd
mov
icebp
xchg
jmp
adc
adc
xchg
mov
imul
stc
shrb
xchg
flds
and
add
lcall
jg
push
xor
dec
push
inc
cmp
pop
xchg
xor
ss
push
or
je
cmp
cwtl
jbe
dec
jg
cmp
and
push
dec
push
pushf
popa
sbbl
gs
scas
cli
sub
xor
add
push
sahf
rcr
pop
adcb
shrl
add
incl
add
das
and
fs
daa
add
insb
xor
mov
out
scas
sarl
lret
addl
push
cli
ss
mov
mov
and
std
fsubl
sbbl
orl
enter
test
es
ficoms
rcrl
pop
dec
aad
jnp
dec
and
in
addb
es
push
movsl
clc
cmp
std
or
lods
push
add
lods
add
or
and
xor
stos
es
call
fs
stc
cmpsl
stos
jg
push
dec
insb
lods
xlat
notl
test
xchg
mov
dec
inc
xchg
clc
out
std
lret
cltd
or
shll
adc
push
pop
xor
and
sub
pop
and
mov
push
lods
mov
int3
test
movsb
adc
dec
push
add
arpl
cmpsb
jcxz
fimull
stos
xchg
add
incl
add
ja
repz
push
cmpsb
ljmp
pushf
aam
sub
sub
xchg
popf
mov
sarl
ret
pop
inc
aaa
xchg
mov
dec
pop
sbb
das
arpl
pop
pop
mov
mov
mov
insb
mov
shr
cmp
je
sub
ja
sub
cmp
push
push
push
and
imulb
sbb
mov
mov
das
ficoml
in
shrb
rcrl
jg
jl
loop
push
pop
stos
lahf
sbb
scas
shrb
shlb
fnstcw
mov
or
sub
stc
mov
into
or
cmp
or
addr16
pop
push
out
jl
dec
test
mov
stos
mov
fwait
aad
fsts
scas
mov
push
fs
in
lods
into
lods
ret
push
scas
push
mov
or
xchg
and
xor
ja
xchg
add
lods
xor
lock
clc
jnp
jg
in
cli
enter
arpl
add
incl
add
pop
cmp
inc
xchg
loope
or
pop
int3
je
stos
outsb
cs
mov
adc
inc
icebp
push
mov
hlt
idivb
add
call
mov
pop
xor
push
push
fwait
inc
imul
dec
stc
dec
lods
repz
in
fstps
andl
cwtl
xchg
and
add
sbb
mov
test
add
ret
loopne
mov
arpl
lods
rep
fwait
and
iret
pop
outsb
mov
aaa
dec
pop
xchg
sub
jmp
xchg
fbstp
push
mov
cmp
out
imul
inc
xor
adc
lock
dec
int3
mov
and
into
aam
pop
xchg
movsl
and
fs
ljmp
cmp
adc
lods
rorl
fidivrl
jmp
add
movsl
cmp
shll
fst
adc
adc
lret
aaa
xlat
daa
sbb
cltd
xchg
mov
ljmp
cld
gs
mov
test
add
incl
add
test
or
xchg
pushf
and
push
inc
inc
ljmp
sub
in
cmovne
adc
jmp
cmpsb
sbb
aad
out
mov
dec
xchg
pop
lcall
jb
bnd
push
mov
cmc
adc
out
cmp
and
orb
jne
into
and
xchg
mov
aad
and
sub
xchg
xchg
sbb
sub
jp
xor
pop
adc
ret
dec
sub
stc
add
enter
fwait
jbe
test
jecxz
ss
mov
fsubrs
mov
push
fs
test
mov
dec
add
xchg
je
push
enter
out
xor
cmp
out
dec
shll
sub
arpl
jmp
or
notl
out
cwtl
xor
push
pop
xchg
lret
cmp
sub
push
ficoms
mull
fidivrs
in
repz
out
add
jl
sar
std
jle
pop
popf
scas
sub
xchg
add
incl
add
pop
jmp
mov
push
lret
push
les
push
lock
push
add
sub
jnp
jns
out
popf
fadd
jns
pop
push
ret
in
xlat
cmpsl
lock
loope
xor
inc
mov
insb
add
arpl
mov
pop
jmp
push
rorl
dec
jl
popf
aaa
outsb
fstl
mov
fdivrs
push
out
nop
xchg
inc
pushf
and
fisubs
xor
dec
jl
rorb
out
or
inc
fiadds
jg
lcall
inc
sbb
pop
jne
cmpsb
out
or
repnz
xchg
cmp
scas
in
inc
push
xchg
and
aad
xchg
xor
add
push
loopne
ret
mov
xchg
and
lret
mov
mov
sahf
dec
mov
xchg
push
dec
push
lds
jmp
mov
sub
shl
push
sub
add
cwtl
or
stos
xchg
cmp
in
dec
cmpsb
xchg
add
incl
add
cs
in
outsl
enter
test
jmp
leave
mov
sub
inc
push
pop
mov
mov
pop
lods
movsl
fcoms
pop
mov
and
cmp
push
fildll
orb
in
and
in
xchg
push
push
gs
movhps
cmp
divl
andl
pop
or
and
addl
pop
std
sub
mov
divl
mov
lret
sub
add
add
stos
out
inc
lods
xor
push
int3
test
int
repz
je
xchg
es
ja
loope
pop
and
or
shlb
sub
mov
jo
mov
sbb
bound
ss
pop
pop
pop
mov
mov
into
sahf
jnp
pop
mov
push
insl
mov
loop
push
dec
xor
je
pop
push
fwait
mov
add
sub
jl,pn
fwait
and
popa
mov
xorl
movsl
cwtl
add
incl
add
adc
dec
dec
adc
dec
xlat
mov
les
in
mov
adc
add
sbbb
outsl
mov
in
lods
mov
xchg
jae
push
push
inc
movsl
int
push
mov
fcompl
ss
mov
cmp
outsb
hlt
lods
and
pusha
jmp
or
inc
jp
jo
ljmp
inc
or
incb
out
push
and
and
loope
mov
sbb
cmpl
cmp
pop
fs
and
imul
out
cmpsb
addr16
push
lds
mov
popa
xchg
push
inc
mov
aaa
sub
push
dec
in
mov
mov
sbb
inc
add
jnp
cmpsb
outsl
and
pop
and
std
sti
sub
jno
sub
addb
sub
cli
or
add
mov
or
mov
push
and
xlat
aas
dec
sbb
or
movsb
cltd
add
incl
add
clc
lea
fwait
rorb
jo
daa
nop
bound
push
mov
pop
xchg
test
outsl
adc
cmp
sbbb
adc
mov
xchg
xchg
test
sbb
test
push
jb
cmpsl
test
mov
mov
push
div
mov
push
inc
cltd
cmp
shll
daa
sbb
icebp
push
sti
sbb
jne
hlt
xor
roll
pop
add
pop
ret
test
mov
std
sbb
lcall
mov
sbb
pusha
sti
sbb
inc
xchg
jo
jnp
stos
lods
rcrb
into
rclb
repz
jns
lods
xchg
mov
outsl
add
pop
das
in
lcall
push
xchg
cli
loope
out
outsb
xchg
inc
xor
lods
cs
push
push
cmpsb
sub
pop
mov
add
dec
incb
dec
mov
sub
jnp
aad
aad
imul
outsl
vmwrite
mov
add
add
lods
and
jbe
mov
clc
jge
and
dec
ljmp
popa
test
leave
push
fdivs
fcmovne
aam
dec
popa
add
mov
xchg
push
inc
test
pop
mov
pop
jmp
out
lcall
adc
and
repnz
mov
enter
fcoms
sbb
shlb
mov
outsl
jge
mov
loope
sbb
arpl
shll
lds
pop
fs
mov
lods
xor
out
pop
imul
imul
pop
push
cmc
add
xor
mov
cmpl
mov
fcoml
std
xchg
sbb
imul
dec
shlb
xchg
in
cmp
cmp
mov
stos
add
dec
mov
fdiv
sbb
ds
cld
dec
lret
add
add
lret
sbbl
popl
inc
mov
fwait
add
incl
add
into
movsl
mov
cli
pusha
mov
in
sbb
scas
mov
cmp
cmp
xor
jne
jns
or
and
add
and
add
sub
push
or
xor
jns
test
incb
icebp
cmc
arpl
xchg
dec
out
std
adc
inc
xchg
and
add
sbb
xor
aam
pop
push
xchg
or
sbb
mov
xor
jmp
xchg
nop
xchg
mov
push
or
adc
sbb
or
icebp
add
xchg
lret
sub
adc
mov
or
lea
mov
and
jmp
xorl
add
cmc
shl
push
dec
clc
out
sub
sub
jmp
or
enter
dec
and
cmp
push
in
cs
sub
inc
mov
cmp
and
sbb
add
mov
imul
movsb
and
inc
pop
ja
mov
add
add
outsb
loop
and
ljmp
sub
or
xchg
jne
scas
aam
mov
fsubl
loopne
inc
cld
xchg
shrl
adc
pop
push
insl
cmp
aaa
xchg
in
dec
shrb
lret
das
es
xchg
xchg
mov
dec
dec
fstpt
jns
cmc
dec
leave
push
in
mov
in
into
xchg
lret
lds
lods
cmc
adc
icebp
lds
xchg
dec
repz
fs
es
mov
iret
and
cmp
pop
icebp
xchg
jae
pop
sahf
add
mov
movsl
jae
out
stos
dec
daa
imul
mov
ret
popf
test
out
cli
lret
mov
dec
dec
lock
pop
push
adcl
xchg
jae
movsl
ds
cmp
xchg
or
mov
jge
scas
data16
xor
and
push
loope
adc
add
mov
sub
lahf
mov
test
mov
add
add
and
clc
shl
outsl
clc
out
cmp
lret
hlt
insl
mov
xor
jge
and
test
pop
sbb
rcr
jle
sbb
mov
jle
aas
pop
hlt
pop
mov
pop
add
and
jns
cmp
or
in
adc
dec
sbb
mov
bound
sub
inc
loop
out
xor
imul
das
outsb
enter
ret
loopne
mov
cli
pop
pop
pusha
iret
jbe
mov
stos
inc
or
into
pop
aad
cmp
xchg
jnp
mov
ja
ja
fistpll
cmc
push
xchg
jl
sbb
inc
mov
gs
sub
adc
loopne
sbb
jmp
mov
push
inc
xlat
push
jge
in
mov
jae
adc
stc
mov
or
adc
stos
mov
dec
xchg
cmc
cmpsb
ret
mov
orb
in
in
mov
or
inc
jl
out
push
test
push
cltd
sub
out
inc
sub
or
add
add
incl
add
mov
int
les
pop
and
je
pushl
pop
adcl
jge
lock
lds
cmp
and
hlt
rcl
adc
nop
xlat
inc
xchg
xchg
inc
icebp
dec
and
out
jmp
cld
fcompl
mov
repnz
daa
sahf
and
es
mov
and
rcl
int3
je
mov
add
mov
cmpsb
inc
lret
shlb
jge
mull
and
leave
mov
stos
xchg
mov
sub
dec
mov
pop
cmpsl
sbb
xchg
loop
enter
sbb
mov
adc
into
xchg
int
ds
pop
jne
mov
and
push
repz
mov
add
rolb
xor
jp
push
js
jge
mov
cmp
cmp
adc
add
pusha
test
mov
cld
mov
sahf
lahf
add
incl
add
mov
and
scas
sub
dec
jmp
xchg
xor
sbbb
outsl
inc
pop
inc
les
mov
mov
push
shl
stos
cmp
lahf
xor
cmp
loopne
gs
pop
lret
ss
fnstsw
and
cli
in
push
rorl
jnp
testb
mov
mov
xchg
cs
shl
pop
cli
mov
sub
adc
adc
mov
outsl
addr16
mov
pop
add
jg
cmp
jmp
lods
cld
mov
cmp
cld
shll
xor
add
add
repnz
pop
push
ficompl
xchg
jle
lret
stc
movsb
mov
sub
push
insl
scas
icebp
ds
mov
mov
test
pop
mov
xor
xor
and
cmpsb
push
mov
adc
ss
mov
add
mov
repz
repz
sbb
popf
mov
add
iret
adc
sbb
outsl
push
xchg
sub
mov
jo
mov
in
dec
sbb
aad
xlat
jb
push
popf
sub
loopne
inc
ds
mov
add
loopne
mov
xchg
xchg
sub
push
push
add
jle
dec
imul
or
or
loope
flds
lcall
pop
mov
sub
popa
jmp
sti
fnstenv
cwtl
pushf
push
mov
dec
js
pusha
lret
dec
cltd
fsts
scas
and
rcr
cs
or
mov
dec
push
in
jnp
scas
push
push
dec
out
into
call
fiadds
cmpsl
cmp
xor
sub
scas
adc
out
jno
and
xchg
adc
and
in
data16
jb
mov
sub
cmp
mov
pop
mov
and
repnz
mov
jae
movsb
mov
mov
inc
inc
add
mov
add
dec
jge
pop
dec
adc
sub
lock
sysenter
inc
jo
shlb
lds
jno
mov
out
loopne
inc
cmp
in
xorl
sbb
sbb
ds
into
sti
xchg
in
inc
inc
adc
pop
adc
jo
and
flds
sub
leave
add
jp
repnz
pop
fs
ds
aaa
xor
mov
aaa
mov
int3
out
sbb
stos
clc
addr16
jl
mov
mov
lods
imul
je
cmpsl
push
movsb
jmp
aaa
test
iret
out
pop
and
test
mov
andl
pop
fisubl
push
fidivrl
sbb
add
iret
hlt
add
clc
cmp
fsubrl
jo
pop
aaa
outsl
leave
jae
loop
fwait
leave
sub
clc
loopne
sub
or
sbb
inc
mov
xchg
push
incl
add
adc
iret
xor
lcall
inc
mov
loopne
stc
ffreep
jnp
aad
cmpsl
inc
cmp
and
sub
adc
add
jb
cmp
mov
mov
cs
test
xchg
inc
mov
ffreep
mov
mov
cmp
adc
pushf
fcompl
popl
stos
pusha
mov
filds
cmp
dec
subl
gs
inc
mov
in
shll
in
es
or
leave
adc
clc
sbb
lods
sbb
mov
lea
adc
popa
mov
push
jl
push
repnz
pushf
fwait
dec
inc
push
pop
jge
hlt
xchg
inc
dec
inc
scas
and
jo
push
mov
pop
cmp
pop
xchg
es
mov
fidivs
bswap
loope
sub
cltd
fisubl
cmpsb
aaa
push
inc
sbb
mov
pop
sub
lcall
ret
fisubl
and
cs
rcrl
push
inc
fdivl
push
dec
mov
lcall
add
xchg
aad
call
push
and
scas
les
test
cltd
jl
sub
popa
in
int3
add
stos
cli
cmp
mov
add
nop
cmc
mov
jo
fsts
jne
aam
jnp
dec
dec
imul
hlt
xchg
xor
mov
fcomi
aad
push
loop
push
out
test
jge
jns
andb
pop
shlb
nop
insb
pop
xchg
test
dec
hlt
ja
ss
xor
jae
jmp
jmp
sbb
sub
mov
mov
stos
cli
int
or
mov
and
push
xor
enter
dec
stos
push
jp
inc
stos
pop
adc
dec
out
popa
mov
fcoml
add
aam
inc
pop
inc
mov
mov
aad
in
mov
xchg
mov
push
adc
loopne
ljmp
mov
call
push
add
add
adc
mov
sbb
inc
hlt
cltd
movsb
add
incl
add
psrld
mov
sub
and
push
jo
push
int
mov
mov
sub
testl
inc
repz
pop
adc
stos
dec
gs
pop
mov
stos
sbb
and
jne
dec
adc
lods
xchg
scas
or
rclb
sbb
jns
cmp
mov
aas
cmp
daa
sbb
and
lods
ss
jecxz
in
addr16
cmp
xor
add
icebp
fucomip
nop
addl
inc
ret
fwait
cmp
out
inc
popf
inc
stc
push
jae
lods
popf
shlb
ja
ret
insb
or
fdivr
jnp
xor
repz
jne
aaa
cmpsb
xor
dec
fs
xor
mov
xchg
sub
lret
fbstp
insl
xchg
insl
and
pop
fwait
ljmp
xchg
mov
sbb
mov
xlat
xor
xchg
push
dec
cmp
out
inc
inc
jno
cli
add
add
add
stos
hlt
jmp
cmp
jbe
jmp
pop
add
add
add
mov
arpl
hlt
pop
cmpsl
inc
xchg
mov
xchg
pop
aad
mov
jbe
sub
jecxz
mov
test
clc
leave
push
div
fidivs
loope
arpl
ja
push
pop
dec
mov
fcompl
outsl
mov
and
add
test
push
inc
sub
pop
shll
ds
pop
xchg
in
mov
scas
mov
jno
pushf
jp
jg
pop
rcr
push
add
fsubs
shlb
adc
jno
xchg
jmp
inc
sbb
mov
in
test
push
mov
and
popf
imulb
cmpsb
andb
out
in
sub
inc
fcomi
dec
push
push
mov
dec
and
ret
pop
push
call
leave
adc
pop
fildll
insb
mov
cmpsb
xor
iret
outsl
icebp
mov
fs
scas
cli
and
sbbb
jo
add
push
nop
out
xlat
out
jg
in
xor
fxch
int3
mov
xchg
cmpsb
add
incl
add
xor
repz
lea
add
aam
fsub
nop
add
pop
fadd
test
outsl
push
push
xchg
cmp
or
pop
xor
mov
dec
addr16
inc
sti
arpl
les
xchg
xchg
or
int3
imul
sbb
shll
sbb
popa
jg
ror
push
adc
jbe
lcall
push
lods
mov
mov
cmp
sbbb
int3
adc
mov
push
pop
cmpsl
jno
xchg
dec
fidivrl
dec
mov
lret
push
pop
push
mov
xchg
dec
dec
add
mov
subb
adc
jmp
fwait
inc
mov
jl
push
or
push
fildll
mov
lea
ret
stos
sub
mov
mov
dec
daa
insb
jl
sbb
rolb
and
xchg
mov
lds
sbb
pop
fbstp
fldl2e
xchg
mov
sahf
xchg
cmpsl
add
incl
add
and
cmp
or
lea
fisubl
push
sbb
or
jne
cmp
into
sbb
mov
lds
addr16
pop
andl
inc
mov
dec
mov
insl
aaa
cmpsb
insb
xchg
je
cmp
mov
mov
loope
cwtl
xchg
arpl
inc
pop
outsl
sbb
push
call
jnp
pop
jb
xchg
movsl
nop
push
cmpsb
out
pop
push
pop
lcall
pop
ljmp
mov
cltd
add
add
xor
daa
dec
hlt
mov
subl
fadds
push
pop
pop
int3
xor
mov
adc
pop
cmp
aas
add
xchg
jbe
pop
lret
in
test
cmovs
and
vpaddsb
iret
push
cmp
jecxz
adc
adc
add
mov
fadds
xchg
test
add
add
add
xor
inc
clc
repnz
dec
stc
adcl
repnz
inc
in
xchg
int
xchg
pop
pop
add
test
dec
xchg
or
sub
ss
test
mov
mov
mov
lcall
mov
pop
pusha
push
push
cmp
or
xchg
ficomps
fwait
cmpsb
lret
jle
add
jl
dec
arpl
loopne
dec
dec
or
leave
dec
in
and
pop
in
cs
add
add
push
je
or
addb
mov
repnz
xor
mov
std
jl
int3
sbb
mov
adc
xchg
dec
aam
xor
ljmp
shr
fs
jae
addr16
fcomi
add
ret
test
push
out
decl
rcrb
cmp
add
add
add
mov
push
sti
jmp
push
mov
testb
add
incl
add
push
out
fcoms
jae
jno
jl
add
jge
xor
nop
xor
fs
xchg
insb
insb
fsts
sub
inc
cmpb
insl
or
lcall
out
xor
lea
roll
push
xor
call
insb
testb
rcrl
jne
movsl
stos
add
das
xchg
xor
add
negl
push
les
add
stos
lret
mov
jnp
jmp
mov
stc
jl
mov
push
dec
ljmp
xchg
mov
shl
scas
hlt
in
aaa
xor
pop
insl
and
popf
add
jle
adc
scas
pop
jo
ret
in
mov
out
sub
fwait
out
cmp
lock
xchg
subpd
aad
pop
dec
jle
lods
xor
faddl
cld
bound
aaa
imul
mov
mov
add
jecxz
lock
dec
xor
add
add
lds
xchg
lods
pop
stc
movsl
iret
pop
inc
push
enter
pop
inc
pop
rep
xchg
sbb
inc
lods
sbb
mov
rolb
xchg
enter
jns
das
jg
out
mov
out
and
xor
or
les
mov
add
popa
orb
ljmp
std
pop
cmpsb
les
pop
xor
psubq
dec
add
xchg
cmpsl
sub
pop
lahf
push
mov
jns
xor
sarb
jmp
mul
lahf
popl
shlb
sub
adc
sbb
jp
cltd
cwtl
inc
jecxz
movsb
lcall
xor
ror
mov
xchg
pushf
push
inc
je
pop
out
dec
xchg
not
jl
in
idivl
and
jne
mov
daa
ds
inc
push
cmpsb
stos
cmc
sti
inc
loop
sbb
or
out
cmc
sahf
dec
sbb
mov
cld
mov
leave
div
cmp
xchg
stos
add
incl
add
stos
pop
cltd
and
push
lods
xchg
pop
aad
ss
xchg
cmpsb
sbb
insb
popa
leave
les
inc
stc
scas
push
sarb
int
dec
dec
push
pop
add
xlat
fwait
mov
ucomiss
mov
pop
sub
push
arpl
in
or
in
hlt
js
add
lret
xchg
xchg
cmpl
stos
ds
adc
call
mov
das
out
les
jmp
stos
pushf
aad
pop
mov
sarb
out
cld
add
jecxz
push
in
mov
pop
jge
push
inc
dec
xchg
orb
stc
xchg
xchg
loop
adc
mov
xchg
scas
push
xchg
mov
xorl
data16
push
pop
lods
mov
mov
mov
xchg
rcr
into
sbbb
xlat
mov
mov
add
in
adcl
mov
icebp
cmp
shll
cltd
les
mov
dec
das
pop
out
cmc
mov
or
pop
sbb
incl
add
orb
aad
mov
pop
lock
push
or
jo
stos
call
add
xlat
sub
dec
inc
pushf
jle
jne
mov
sub
cmpsb
mov
mov
insb
movsl
ljmp
xchg
lds
ror
in
idiv
loop
cwtl
xor
subl
in
xor
into
rcrl
lret
cmp
cs
lds
cltd
jmp
sub
mov
roll
aas
cltd
push
xor
or
hlt
bound
mov
push
out
movsb
sbb
dec
aas
jg
sahf
push
popf
fimuls
push
icebp
and
rcr
test
mulb
cmpsb
mov
in
jl
mov
loopne
fcomip
outsb
cmpsl
and
dec
insb
movsb
xchg
in
cmp
cmpl
add
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
pop
rcrl
add
add
add
xchg
js
test
cmp
stos
test
cmp
jnp
xchg
jecxz
mov
adc
jne
add
add
xchg
inc
mov
cltd
js
inc
les
lret
jmp
fistps
lahf
fisubrl
sahf
add
ljmp
dec
lret
cmp
insb
push
nop
add
push
lahf
jge
lahf
data16
outsb
bound
jne
mov
arpl
cmp
xor
push
push
nop
xor
cli
icebp
mov
push
gs
xchg
mov
in
fsubs
sub
mov
roll
aas
mov
stos
push
lcall
sbb
insl
lods
jge
jl
mov
in
cmp
jb
out
inc
clc
insb
ljmp
push
or
xchg
fnsetpm(287
in
mov
imul
sbb
test
mov
test
add
add
fidivs
loop
ljmp
rorb
add
incl
add
mov
loope
test
and
jae
scas
cmp
jne
fs
push
jmp
sbb
popf
jnp
movsl
ja
inc
mov
push
outsl
jno
cmp
popf
and
lock
arpl
dec
dec
scas
add
push
outsb
add
and
bndstx
cmp
xor
ljmp
ljmp
iret
es
in
lock
addb
pop
cmc
sbb
adc
or
mov
mov
adc
jg
pop
adc
pushf
adc
dec
sbb
popf
arpl
pop
test
jg
mov
stc
xchg
shl
mov
subps
adc
mov
mov
fptan
dec
test
clc
jno
lods
js
aaa
aad
jb
or
pusha
loope
enter
cld
push
jb
mov
inc
mov
mov
sahf
cmp
add
add
xchg
jg
jmp
std
mov
clc
rcrl
incl
add
aam
addr16
leave
sub
mov
fdivrl
xor
movsl
sarl
or
popfw
and
sbb
imul
loop
mov
mov
dec
add
jae
shrl
and
mov
mov
dec
cltd
scas
fadds
or
push
jl
sub
outsl
lods
cmp
or
stc
pop
cmp
add
rclb
das
mov
xorb
data16
pop
popf
xor
jmp
pop
jl
sbb
jbe
rorl
mov
insb
xchg
xor
fincstp
mov
jbe
mov
in
push
push
xor
and
mov
and
lods
inc
in
fdivrl
popw
sbb
leave
jl
add
insb
xchg
or
pushf
adc
pushf
xchg
pushf
mov
push
rcrb
dec
sub
sti
mov
cs
subl
imul
add
xor
inc
mov
cmpsb
mov
incl
add
or
pop
xor
repz
xor
dec
push
sbb
roll
call
cmpsb
push
mov
or
movsl
lret
mov
arpl
xor
fimuls
outsb
outsb
in
inc
cmp
lock
xchg
or
jle
push
push
xorl
mov
add
mov
enter
int3
dec
dec
addr16
jge
push
add
stos
cmp
mov
pop
ret
xlat
movb
imul
pop
fxch
adc
loop
xchg
in
out
inc
inc
imul
pop
adc
aaa
and
sbb
push
lret
xchg
jg
inc
mov
sub
pop
cmp
loope
sub
mov
int
in
mov
popa
inc
push
mov
jne
repz
aam
inc
dec
mov
push
lods
fcomip
je
mov
popf
adc
mov
loope
popa
inc
add
xor
cmp
inc
call
push
mov
add
cmp
adc
dec
iret
arpl
pushf
mov
jo
movsb
lret
jne
push
dec
dec
mov
test
addl
jmp
xchg
xor
push
and
pop
jns
int
insl
jns
add
mov
add
sbb
inc
xor
dec
xchg
inc
idiv
jl
push
hlt
push
or
out
cld
clc
ss
add
leave
or
mov
out
iret
and
cmc
dec
pop
adc
add
push
icebp
leave
cli
leave
xor
insb
push
push
and
and
mov
mov
push
cmp
and
fcomps
cwtl
push
mov
mov
daa
add
fs
fwait
imul
repnz
out
jge
or
nop
and
int3
pusha
and
in
es
fs
jb
mov
cli
mov
pushf
inc
xchg
std
mov
push
mov
popa
mov
push
shlb
jnp
mov
push
fstl
es
les
mov
arpl
cmp
mov
add
into
je
add
int
jle
addl
test
sbb
and
lcall
sbb
lahf
or
dec
pop
repz
pop
out
stos
lock
int3
mov
cmpsb
mov
inc
or
outsb
and
in
addr16
hlt
sub
stos
rorl
mov
sub
sub
push
xor
fdivrs
inc
mov
scas
sub
or
out
mov
iret
movsb
mov
push
dec
mov
les
js
xchg
out
jge
fbld
out
outsb
jns
sbb
scas
push
orb
jbe
push
and
imul
mov
adc
stos
pop
and
push
popf
adc
loop
xchg
pusha
push
sub
clc
jbe
adc
mov
out
sbb
inc
and
xchg
arpl
dec
or
pop
stc
out
push
pop
bound
ljmp
add
ret
popf
sub
push
cmp
imul
mov
imull
cmp
mov
mov
cltd
xor
lea
sbb
push
mov
fdiv
es
mov
push
nop
inc
imul
and
clc
add
pop
in
std
notb
call
hlt
xor
hlt
out
inc
mov
rcrb
push
xor
mov
jae
pop
mov
mov
adc
inc
push
aaa
lds
jns
arpl
es
hlt
test
pop
lret
pop
xchg
dec
and
jns
lret
sub
or
xchg
mov
or
push
xor
mov
xchg
adc
sarl
push
sahf
cpuid
push
repnz
mov
incb
inc
dec
ja
fnstsw
lret
cmpsl
mov
add
loopne
sahf
in
jb
sbb
clc
mov
add
lds
cli
lcall
push
mov
add
jbe
aaa
aas
js
xor
xchg
pop
fimuls
cld
in
mov
jne
mov
adc
cmp
jg
push
push
push
xchg
push
out
icebp
test
pop
push
stos
imul
fcoms
out
sarb
insl
cmp
mov
or
loope
and
cmp
iret
xor
movsl
mov
int3
push
fstpt
popf
loope
inc
test
and
pop
lcall
or
les
cmp
pop
xchg
and
cmp
and
cli
adc
xchg
sbb
cmp
je
sub
mov
scas
pusha
in
cmp
insl
sbb
rorb
mov
int
ds
mov
adc
adc
rorb
mov
jl
jo
bound
pop
add
and
inc
fs
test
fidivrs
xorl
add
jne
mov
int3
insb
lret
mov
add
jns
sbb
sub
jbe
loope
mov
mov
in
std
cmp
add
push
dec
mov
cmpsb
sub
std
adc
cltd
mov
add
xchg
mov
movsl
hlt
add
test
es
sbb
lahf
xor
push
fldl
jo
dec
adc
scas
cmp
cld
shl
and
jne
push
out
mov
addr16
and
push
mov
sbb
jle
pop
repnz
push
xor
inc
mov
loop
call
aad
stos
repnz
movsl
pop
pop
push
xor
inc
gs
addr16
cmpb
sub
sub
icebp
loope
jne
push
cltd
sub
push
mov
pop
outsl
lds
test
xor
gs
stc
sub
nop
aaa
push
stc
jp
pop
and
sub
xchg
into
fs
mov
cmp
addr16
pop
fstl
dec
jge
sbb
movsb
add
pop
sbbl
fstp
rorl
pop
aam
xchg
add
shlb
adc
iret
dec
es
mov
stos
xlat
stos
inc
test
je
xchg
test
add
or
mov
push
aad
lods
repnz
adc
mov
sub
pop
daa
push
dec
inc
xor
test
and
pusha
mov
add
or
sbb
jae
into
sub
sahf
sbb
ret
mov
notb
mov
pop
into
cmp
and
aam
push
sub
xor
pop
out
inc
push
fisubl
testb
sbb
jmp
or
xchg
outsl
mov
xchg
xor
inc
xor
outsl
and
incl
arpl
cltd
sub
jge
jl
mov
sub
imul
outsl
dec
mov
xor
pop
dec
add
in
mov
jecxz
out
mov
cs
mov
incl
add
sub
push
dec
jbe
lret
sbb
jb
pop
int
sub
xor
dec
dec
rorl
adc
jnp
jmp
inc
xor
xchg
dec
ja
mov
xchg
xchg
inc
xchg
dec
cli
and
dec
fldt
fisubs
mov
mov
je
jg
push
push
je
mov
stos
inc
addr16
push
jle
lods
inc
mov
shl
add
les
mov
pop
sahf
inc
sub
jo
lahf
mov
movsb
mov
jle
sub
popf
sbb
icebp
add
mov
lcall
lock
mov
pop
push
jmp
xchg
sbb
sub
mov
cmc
mov
push
in
or
pop
loop
jge
in
dec
and
pop
push
daa
rcll
and
xchg
inc
adc
mov
and
add
std
test
jg
into
lret
orl
add
add
shlb
ljmp
notl
cmp
inc
imul
nop
fidivrl
dec
ss
fdivl
rol
stos
mov
and
imul
mov
sub
fdivrl
mov
stc
dec
mov
fisttps
mov
dec
mov
rcrb
push
cmpsl
or
xor
sbbl
ret
dec
pushf
es
mov
lock
rep
xchg
or
loop
jmp
adc
xchg
add
xchg
push
sub
jb
add
cltd
or
xchg
add
adc
mov
jae
sbb
push
xchg
mov
push
lcall
push
pop
in
repz
ja
hlt
pop
int
pushf
mov
and
mov
xchg
dec
sub
mov
iret
jo
cmp
out
popl
and
adc
xor
mov
add
lock
in
lcall
jae
dec
mov
push
fistpll
incl
add
mov
stc
cltd
ds
pop
sub
inc
cmp
loope
push
movb
xchg
mov
jmp
enter
aas
lods
aas
arpl
sub
xor
gs
mov
mov
xor
or
xor
jae
out
cli
sbb
in
jae
cltd
popa
push
lods
adc
movsb
out
and
popa
ss
dec
xchg
pop
mov
call
mov
cltd
js
mov
jns
dec
movsb
mov
out
enter
pushf
xchg
pop
dec
jae
and
icebp
lahf
cltd
cs
adc
or
dec
cmpsb
cmc
mov
lds
fcoms
roll
push
dec
bound
adc
sub
insl
test
insl
pushf
push
and
mov
pop
adc
shl
clc
or
xor
add
sub
sub
dec
jecxz
scas
push
insl
mov
push
dec
fisttpl
in
lea
jb
pop
cmc
add
sub
jg,pt
dec
arpl
bound
add
add
es
ret
mov
xor
leave
shr
xor
in
push
push
aas
test
enter
loop
mov
aad
adc
aam
push
xor
movsl
pusha
add
sub
sub
test
cmpsl
xchg
adc
sub
dec
xor
mov
sbb
fwait
mov
jg
jecxz
mov
call
iret
push
fwait
jb
out
sbb
mov
shlb
bnd
mov
dec
mov
push
or
or
fbstp
enter
push
fldl
mov
into
sbb
mov
pushl
cmpsb
add
push
xor
hlt
popf
popa
stc
movsl
fcompl
fstpt
xchg
leave
out
inc
repz
popa
or
fildll
mov
out
sbb
int3
mov
dec
out
cli
data16
repz
sub
cmp
jp
stc
and
or
add
jne
insl
sbb
outsl
mov
mov
bound
mov
add
sbb
sti
add
testb
scas
popf
aas
push
inc
addr16
sbb
mov
out
fnsave
mov
xor
out
cmc
push
leave
pop
idivb
sub
pop
aam
imulb
mov
or
jno
cmpsl
repz
xlat
loop
mov
inc
dec
xor
push
lods
outsl
xor
imul
into
and
popf
cmp
fcoms
mov
lret
mov
insb
fisubrl
mov
outsb
insl
inc
lods
sbb
jb
out
cmpsl
popf
add
dec
and
jb
lds
subb
jbe
cs
aas
cmp
shl
lahf
lea
pop
push
mov
das
das
sub
pop
adc
xchg
mov
sbb
bnd
jae
xchg
sub
push
dec
ret
or
adc
std
repz
daa
or
add
inc
fbld
mov
pop
lds
cmpl
dec
lahf
cmc
mov
imul
mov
sub
and
sub
xorb
mov
fsubl
rorl
dec
cltd
pop
jne
stos
rcl
mov
ljmp
in
add
stos
fs
ud2
insl
xor
cwtl
in
popl
jnp
xorb
hlt
cmp
pop
addb
cs
loop
stc
pop
cwtl
mov
mov
jo
xor
daa
and
rorb
mov
shl
jb
push
mov
jle
mov
mov
jl
xor
mov
test
pushf
shll
sub
inc
and
gs
cli
jl
push
jnp
mov
jmp
pushf
ret
lahf
ljmp
jg
mov
cmp
push
xor
loop
push
jns
subb
sbb
push
push
call
fsubl
add
add
add
jns
mov
cmp
lret
sahf
cmc
dec
sub
jbe
mov
pmulhuw
dec
shlb
sahf
mov
fdivp
std
mov
rorb
pop
in
idivb
push
fbstp
or
sti
test
mov
pop
pushl
movsb
dec
pop
inc
mov
rol
jb
insl
sti
push
mov
xchg
gs
cmp
rcrb
adcb
or
mov
data16
mov
lods
cwtl
popf
mov
cld
mov
push
mov
bound
mov
sbb
mov
push
sub
out
outsb
data16
cmp
sbb
scas
mov
jmp
stos
push
sbb
push
sbb
jnp
lret
mov
mov
loope
imul
bound
lret
jle
push
cli
ficoml
cmp
mov
push
xor
faddl
into
std
sti
leave
sti
iret
jmp
movsb
pop
bound
add
incl
add
stc
aaa
cld
jne
test
adc
in
insl
push
aad
dec
xchg
ja
and
or
test
xor
arpl
add
dec
add
jg
mov
insl
cmp
dec
and
in
push
pop
adc
inc
pusha
cmp
inc
push
inc
mov
sub
int
lock
xchg
mov
inc
dec
sti
jecxz
pop
int
xchg
mov
jle
daa
jbe
mov
sbb
daa
jcxz
addb
mov
mov
or
cs
add
mov
cmc
insl
or
sub
enter
scas
daa
in
rorl
push
and
outsb
mov
adc
dec
lock
xchg
pop
icebp
sub
adc
or
pop
mov
sub
je
add
xlat
insl
mov
ljmp
sbbb
mov
je
mov
add
mov
mov
xor
fstpt
dec
jle
add
incl
add
call
movsb
pusha
ja
cmpsl
out
imul
mov
or
jle
adc
pop
ss
sets
in
mov
pop
flds
inc
dec
cli
mov
in
daa
scas
sti
or
adc
pop
mov
into
sbb
stc
rcl
sub
test
into
jp
mov
and
xlat
add
mov
jns
icebp
xor
popa
test
xor
imulb
les
scas
add
in
je
scas
inc
xchg
add
call
call
test
imul
xchg
stc
jg
ret
jp
subb
sbb
xor
fsubl
push
push
mov
cmp
je
popf
inc
rclb
pop
add
adc
pop
fdivs
loope
fs
iret
or
adc
pop
sbb
or
add
in
sbb
fwait
mov
or
jg
mov
sahf
loop
aas
pop
xchg
cwtl
jge
add
incl
add
mov
cmpsb
jg
pop
add
mov
jne
jmp
sbb
lcall
scas
cwtl
jmp
adc
xchg
mov
adc
lahf
xchg
fidivrs
push
jns
or
inc
sub
test
inc
out
jnp
add
dec
xchg
cmp
dec
xchg
sub
addr16
jecxz
shlb
test
int
aas
inc
shll
xchg
mov
or
inc
fs
sahf
xor
mov
notl
sub
ss
dec
insb
sub
inc
bound
mov
push
sbb
dec
xchg
mov
stc
pop
xchg
add
sub
ret
mov
mov
clc
lods
aad
mov
dec
ss
sub
and
mov
add
xchg
shlb
cmp
icebp
dec
xchg
pop
mov
ja
xlat
push
xor
xor
push
cld
pushl
cld
sbb
jl
add
incl
add
lahf
mov
xchg
jbe
cwtl
jmp
imul
sbb
cmpsl
mov
shl
je
jno
int3
dec
sub
shll
mov
rcrb
mov
add
mov
movsb
shr
push
and
popa
cld
jle
cmpsl
stc
pop
sbb
mov
xchg
mov
add
or
add
mov
pop
cli
jge
daa
cld
hlt
push
mov
inc
data16
shlb
fcoml
xor
aaa
aad
xchg
decl
incl
inc
inc
sbb
pop
sub
and
rorl
in
sbb
xor
push
outsb
clc
mov
movsl
jp
mov
insl
shr
xchg
test
sbb
loop
mov
ficoml
xlat
sub
push
and
jo
xorb
adc
in
or
lret
addr16
and
sbb
adc
add
cli
cmp
repnz
xor
lods
fisubs
xchg
adc
add
pushf
shrb
lcall
movb
add
incl
add
pop
inc
fcmovb
mov
jp
cmp
cmpsb
ljmp
jecxz
jmp
cmp
outsb
add
ret
testb
or
and
in
or
sti
mov
dec
idivl
aas
and
jns
push
scas
xor
movsl
push
andl
dec
repnz
push
addb
adc
lcall
dec
daa
repnz
in
mov
sub
in
add
scas
lcall
mov
fldl
inc
xor
scas
lret
mov
ljmp
into
mov
inc
addr16
dec
pop
out
imul
iret
in
stos
cmp
push
int3
adc
mov
call
insl
xor
jnp
jecxz
aam
cld
add
lret
dec
push
mov
test
adc
ss
push
jbe
pop
adc
sahf
ud2
dec
testl
sahf
dec
jns
dec
lock
add
add
test
mov
aas
scas
flds
ret
add
incl
add
add
aaa
inc
mov
movsl
pusha
mov
jp
xor
insb
xchg
adc
test
fwait
jbe
pop
xor
out
divl
push
sub
add
flds
sub
mov
movsb
lret
scas
ds
orl
push
orl
loop
das
cmp
and
cmp
daa
xor
jmp
orl
sarb
pop
lock
inc
imul
push
add
into
es
and
cmp
hlt
out
sub
inc
stos
dec
les
movsb
inc
shr
mov
mov
lea
xchg
jmp
dec
mov
int
sub
push
xchg
pop
mov
je
mov
movsb
decl
int3
jo
or
mov
or
add
mov
imul
or
in
cs
jb
lahf
imul
mov
jg
aas
or
jg
jne
jne
jg
loop
mov
mov
incl
add
cmp
or
push
inc
shll
push
cld
xchg
popf
mov
adc
jo
jle
add
mov
push
ss
std
jge
add
push
xchg
shll
lahf
mov
fdivs
pop
add
int3
inc
aas
aad
jb
sbb
push
xchg
xlat
xchg
repz
sbb
aam
aaa
jns
push
insl
icebp
and
mov
xlat
push
mov
test
xchg
iret
out
repz
cmp
rcll
lods
jecxz
stc
leave
addr16
les
push
dec
add
push
lcall
push
xor
and
cld
mov
pop
mov
mov
cmp
sbb
enter
sbb
mov
push
filds
dec
cli
mov
mov
ja
dec
daa
les
mov
mov
fmul
cmp
add
xor
pushf
mov
les
mov
xchg
jb
outsl
xor
cmp
insl
loope
add
dec
pop
mov
cmc
mov
lret
add
incl
add
adc
xchg
mov
nop
inc
fsubrs
ljmp
ss
dec
clc
add
push
xor
pushf
dec
aam
and
sbb
push
pop
mov
cmp
out
aaa
xchg
div
cmpsl
adc
xor
push
inc
pop
call
adc
pmuludq
popa
repnz
in
imul
outsl
sbb
inc
xchg
add
pop
cmp
mov
mov
test
dec
sbb
xlat
mov
cld
sarb
mov
lret
sahf
jg
jbe
andb
lret
les
pusha
mov
mov
inc
imul
add
push
test
popf
hlt
adc
mov
add
lcall
lret
loop
xor
fdivrs
pusha
fwait
iret
pop
xchg
inc
fmuls
jno
mov
cmp
push
shrb
add
and
outsb
jle
lods
testl
movb
incl
add
inc
xchg
dec
jae
and
fwait
pop
push
pop
out
mov
or
jnp
pushl
adc
jp
inc
add
inc
xlat
cmpsl
adc
inc
push
gs
inc
jle
xor
sub
hlt
int3
sbb
adc
cmpsl
jecxz
and
push
mov
xchg
aad
cmp
push
sbb
sbb
add
iret
dec
xchg
cmp
sarl
aad
push
in
dec
imul
xlat
or
sub
xor
loope
push
inc
in
inc
cmp
mov
dec
pop
decb
jecxz
xchg
push
xor
sub
rcll
ret
push
xor
stos
or
lahf
and
mov
sub
decl
xchg
loopne
inc
ja
rolb
cmp
out
mov
fcompl
mov
mov
sarl
add
mov
xchg
insb
sbb
sub
incl
add
jle
cmpsb
and
out
mov
clc
cmpsb
fidivl
pushf
ds
and
sbb
cmp
adc
ja
popf
mov
jne
lds
shlb
insb
movsb
inc
xchg
pushf
std
hlt
inc
push
lds
dec
push
adc
ret
lret
lods
add
inc
xchg
cmp
out
movsl
or
fs
lcall
cwtl
dec
js
pop
sbb
mov
pop
mov
sbb
lcall
mov
ja
in
movsl
sbb
mov
push
call
cs
pop
stos
cmp
push
cmp
xchg
add
dec
add
ret
sbb
int
setb
pop
push
mov
mov
inc
sbbl
push
loope
cli
cld
sub
dec
call
in
mov
fs
fldcw
lods
subl
ror
jb
add
out
sti
xlat
in
aad
movsb
dec
pop
jmp
incl
add
mov
mov
test
mov
loopne
lcall
or
mov
push
adcl
mov
jmp
pop
mov
outsl
xchg
xchg
sahf
pushf
inc
fcom
insb
cmp
das
xor
xchg
insb
or
push
xchg
push
shr
divl
movb
ret
mov
arpl
add
xlat
jbe
add
inc
test
fistps
sbb
push
inc
mov
pop
hlt
xor
mov
icebp
xchg
lods
loop
push
fucomip
add
ljmp
push
inc
arpl
push
inc
and
imul
or
outsb
lods
test
inc
xor
fstpl
xor
popa
scas
lds
mov
jmp
stc
shll
cmpsb
pop
sti
negb
repz
jg
and
mov
leave
jmp
dec
loopne
mov
push
dec
dec
rcrl
ds
sub
cmp
jg
and
mov
loop
scas
inc
je
add
incl
add
fisttpl
lds
mov
lret
fdivr
add
xlat
pop
adc
lock
sub
push
loop
inc
lds
push
scas
ret
cmc
insl
seto
int
jp
dec
out
pop
xor
push
lret
stc
inc
rorb
movsl
lock
xchg
cwtl
jp
pop
aam
aam
jl
lock
movsl
adc
rorb
lcall
insb
pop
or
dec
pop
jle
mov
or
sarl
cmp
stos
push
sub
and
jbe
push
jno
pop
or
int3
sub
mov
mov
gs
xchg
scas
sub
xchg
clc
fucomp
mov
enter
mov
lret
ret
lds
dec
cli
aam
mov
mov
pop
add
pop
cmp
cli
mov
xchg
outsl
adc
xor
loope
cmp
dec
or
xor
cmp
aas
dec
cmpsb
bnd
push
lahf
add
xor
fistpll
out
repz
fcoms
cmp
xlat
jae
add
incl
add
xchg
add
in
adc
insb
jp
sub
xor
xchg
aas
lcall
decl
sbb
and
add
divb
sub
jnp
cmp
xchg
out
cwtl
inc
fistpll
xorb
xchg
adc
aam
and
sahf
cmp
in
popf
inc
js
mov
xchg
or
cmpsl
js
lds
stos
mov
gs
xor
sbb
sbb
outsb
inc
cmp
cmovae
ret
test
lea
xchg
fidivl
sub
lea
xor
lea
aad
lods
imul
mov
iret
mov
lods
xor
cmp
test
cmc
adc
inc
adc
dec
imull
inc
pop
aaa
pop
mov
sbb
mov
fcompl
and
pop
cltd
cltd
hlt
cmp
push
movsl
adc
xchg
mov
or
xor
add
add
mov
mov
push
lret
add
incl
add
mov
jae
jl
ret
dec
into
aas
sub
jns
sub
je
out
jnp
inc
inc
add
outsb
inc
mov
xchg
xor
and
rol
sub
pop
in
mov
negb
sub
adc
popl
lds
leave
xchg
push
jle
and
push
in
inc
lahf
outsl
sbb
enter
mov
mov
mov
pusha
call
fcoml
aas
call
ss
cmpsb
js
popf
mov
jmp
pop
test
popf
and
popa
xor
inc
es
leave
fdivs
xor
sub
push
in
xchg
sahf
jge
aaa
lods
sbb
dec
inc
mov
pop
loop
and
cld
mov
dec
cmp
mov
inc
lcall
nop
fistpll
ficompl
loop
mov
ficomps
repnz
cmp
mov
push
adc
cmp
add
enter
in
sbb
push
inc
dec
xchg
or
jno
add
incl
add
inc
xchg
fstpl
jb
add
stos
xchg
ljmp
int3
mov
inc
cmp
std
test
insb
sub
stc
stos
std
adcb
push
mov
repz
cmpsl
mov
sbb
test
popf
test
sub
sbb
je
mov
in
ljmp
xor
lea
xor
mov
jb
mov
sub
xchg
add
dec
jnp
pusha
mov
add
js
mov
xor
fldl
mov
mov
enter
pop
stos
scas
clc
push
xchg
or
xor
fdivrl
xorb
lret
cmp
jmp
adc
addr16
cmp
or
shll
inc
inc
mov
orb
cmp
mov
adc
push
js
outsl
push
mov
hlt
jne
inc
sahf
cs
and
scas
jecxz
dec
add
imul
cmc
call
inc
push
popa
xlat
mov
add
incl
add
in
cmp
stos
es
or
out
arpl
push
mov
dec
sbb
addl
mov
outsl
out
std
pop
inc
fdivs
adc
push
push
testl
add
aam
lods
cmp
push
fiadds
push
subb
mov
loopne
jg
cld
push
xor
xor
and
xchg
mov
fsub
stos
pop
pop
inc
insl
ss
addr16
cmp
xchg
xor
adc
add
cmp
push
test
leave
sub
or
fildl
pop
stc
adc
mov
add
aad
test
in
dec
out
je
adc
lea
ds
jle
cmp
pop
mov
xchg
mulb
out
inc
imul
out
movb
adc
sbb
xor
mov
in
mov
push
fs
sar
ret
movsl
inc
rolb
inc
stc
shll
movsl
mov
iret
sub
cmp
cmp
add
incl
add
mov
dec
filds
xchg
loope
popf
stos
rcrb
stos
fidivrl
or
pop
mov
pop
inc
push
inc
push
in
dec
call
notl
ljmp
incb
add
push
nop
ret
ret
push
push
loop
mov
aaa
jl
cmp
rorl
fidivs
jmp
push
lods
lahf
cmp
ja
imul
mov
sbb
rorl
cmpsl
cmp
lcall
cltd
mov
scas
mov
lods
dec
add
or
push
into
jno
lahf
and
fcomp
inc
mov
cmc
repz
lods
repz
inc
in
iret
xchg
imulb
repz
js
insl
lret
xchg
mov
ss
push
push
rcr
xor
loope
or
mov
sub
mov
popa
jno
push
jl,pt
dec
push
iret
ja
inc
mov
xor
pop
out
jbe
adc
rorl
add
out
into
gs
cld
test
iret
add
incl
add
jbe
dec
mov
cs
gs
adc
aad
fs
stos
clc
pop
test
xor
rcr
fisubs
jb
es
hlt
ret
cmp
mov
push
mov
or
push
xchg
and
adc
cli
cmp
dec
jecxz
mov
or
aaa
jno
cltd
cld
stc
outsb
nop
mov
cmp
push
xchg
push
or
xor
dec
cmp
mov
jle
out
xor
xor
leave
xor
sub
mov
pop
pop
jns
or
aad
inc
and
adc
mov
daa
popf
in
xchg
or
jae
insb
ficoml
mov
filds
dec
mov
cli
outsb
mov
icebp
jmp
or
jo
or
test
jae
int
ret
cmc
lods
sub
xor
loopne
and
je
out
mov
mov
rolb
add
add
add
les
xchg
addr16
arpl
jbe
push
lods
les
lret
insb
insb
jo
push
pop
jmp
adc
scas
cld
sbb
loope
cmp
fmull
out
sub
pop
aad
dec
push
imul
in
scas
xor
cmpsl
mov
xchg
gs
lahf
in
pop
incb
ret
lods
xor
nop
fstps
xor
xchg
push
push
pop
fdivrl
inc
out
lret
aam
pop
out
xor
jnp
leave
mov
pop
adc
push
lods
repz
pop
fdivs
arpl
xor
loopne
into
popa
or
das
inc
sub
push
lret
in
or
idivb
mov
lcall
add
sahf
arpl
fcompl
ret
cmc
and
das
out
xor
inc
pop
mov
jno
push
in
repz
add
add
dec
daa
dec
das
outsb
imul
push
xchg
jo
mov
add
add
add
mov
es
sbb
popa
jecxz
mov
mov
hlt
int
loope
cmpsb
in
aas
ja
ljmp
das
insl
in
adc
adc
outsb
xlat
jnp
cmpsb
sbb
fcoms
incl
je
push
adc
movb
mov
xchg
mov
mov
jo
lret
inc
mov
mov
fdiv
jbe
popf
rorl
pop
sbb
and
mov
adc
popa
sti
sahf
jbe
cmc
push
out
fs
mov
es
mov
adc
pop
mov
mov
pop
outsb
fs
cmp
icebp
dec
push
rcl
jns
pushf
mov
xor
add
lcall
data16
pop
or
movsb
repnz
jmp
loop
xchg
or
jb
cmpsl
imul
pop
jno
lds
push
cmp
cwtl
stos
popf
lcall
xchg
add
popf
mov
lahf
ret
or
rolb
add
add
add
fnsave
cs
ffree
or
stos
bound
sub
sbb
xor
into
and
test
cs
xlat
add
aas
rclb
in
loope
adc
shll
adc
xchg
add
add
pop
repnz
dec
in
mov
pop
unpcklps
fisubs
shlb
inc
inc
add
or
xlat
outsb
sub
je
popf
inc
jecxz
xor
mov
rcr
stc
xchg
push
mov
add
sbb
fidivrl
lods
cli
xor
out
pushl
popf
add
sbb
sahf
jl
fwait
imul
imulb
xor
cmp
stc
lea
fnstsw
aad
cs
sub
push
push
pop
clc
xor
dec
mov
push
mov
aas
jmp
mov
mov
mov
pop
xchg
or
imul
add
add
mov
inc
stos
shlb
push
ss
pop
adc
pop
cwtl
mov
pop
imul
sub
movsl
pushf
xor
in
lret
je
jmp
cld
js
repz
mov
mov
mov
cmp
mov
mov
dec
sub
fildll
in
push
xchg
scas
xchg
cld
inc
adc
xor
mov
jno
mov
repnz
enter
das
mov
rclb
neg
cmp
and
jns
xchg
xor
sbb
add
xor
test
cmpsl
mov
push
push
sti
cltd
xor
rolb
pop
in
xor
add
ficoml
scas
cmp
push
int3
into
scas
dec
nop
xchg
xor
cmpsb
test
cs
mov
out
push
mov
scas
scas
inc
cmp
sub
xor
add
sbb
sub
dec
shl
and
imul
add
xlat
mov
insl
add
sbb
je
fstps
test
daa
push
call
dec
pop
pop
mov
mov
pop
fnsave
jns
test
repz
mov
shr
sahf
push
repnz
add
ret
inc
add
push
test
xor
stos
adc
popf
in
fisubrs
incl
mov
xor
jle
add
or
pop
imul
xlat
and
xchg
shl
pop
ret
or
pop
imul
cli
stc
iret
in
mov
out
jns
cmp
call
jo
and
popa
rorb
inc
inc
test
ret
adc
cmpl
sbb
jge
aad
xlat
adc
push
xor
dec
fsubrs
cmp
rcr
sar
lret
movsl
dec
dec
mov
cmp
pop
shll
pop
leave
loop
insl
stos
repnz
scas
pop
jb
sub
cld
sbb
mov
pushf
adc
ds
jae
cli
lods
mov
add
incl
add
and
xor
mov
push
push
jg
push
xchg
das
or
jbe
std
dec
push
dec
test
dec
test
test
shr
std
fidivrl
add
xchg
mov
push
xor
add
int
inc
loope
sbb
xor
push
fmull
dec
mov
faddp
jl
cmpb
cmp
jp
icebp
cltd
lret
and
or
push
or
jle
stos
mov
orb
loop
inc
repnz
xchg
loopne
bound
inc
in
jno
push
jp
iret
out
pop
in
lods
gs
iret
in
loopne
sahf
xor
mov
shl
test
test
push
mov
mov
outsl
popf
pop
cmpsb
jg,pn
and
fucom
and
daa
fs
shll
jo
xor
xchg
mov
and
xchg
inc
adc
fmull
add
push
sti
es
lock
add
add
lcall
jnp
lahf
data16
addr16
add
incl
add
xchg
xchg
xchg
mov
sahf
cmc
and
jno
jl
fcmovnb
push
mov
hlt
xor
jne
out
outsl
jecxz
mov
adc
pop
xor
add
test
aad
add
push
mov
fistl
clc
into
mov
addl
rorb
int
and
xor
data16
cmp
add
addl
negb
out
add
xor
stc
jmp
sub
mov
jecxz
das
mov
add
xchg
sbb
jb
xchg
lcall
in
sub
jnp
xor
sbb
mov
sub
mov
shlb
lods
add
add
dec
push
sbb
push
and
or
pop
mov
insb
or
cltd
xchg
test
pop
dec
subl
xor
outsl
into
lods
lcall
add
cmp
jg
leave
or
shrb
add
add
add
es
add
mov
loopne
xchg
adc
daa
and
or
cs
je
lods
icebp
sbb
pusha
pop
sub
incl
inc
mov
js
mov
rol
and
jns
cmp
pushf
and
sbb
test
cmp
xor
mov
out
imulb
mov
lret
mov
cld
aam
imul
cmc
loope
adc
or
imul
jno
dec
leave
insb
leave
add
repnz
and
fiaddl
adc
dec
inc
add
pop
cmp
push
fstps
sub
int
mov
dec
rol
or
lock
add
inc
push
loop
sub
cmp
inc
jns
sbb
pop
add
sub
push
xchg
inc
adc
xchg
incl
or
je
ds
sub
jne
cmp
imul
sub
sub
add
int
out
out
imul
nop
xchg
movsb
sub
inc
jnp
fadds
add
add
add
leave
call
mov
sub
daa
daa
or
add
fistpl
test
clc
add
nop
pop
inc
inc
push
pop
sahf
fbstp
lods
inc
mov
out
mov
popf
pop
aas
xor
lods
mov
jno
negl
add
adc
imul
and
mov
in
jp
sub
push
xchg
imul
movsl
ret
arpl
pop
push
dec
pop
fcoms
cmp
xchg
imul
leave
and
add
xchg
cld
aam
arpl
roll
bound
std
push
out
loope
lock
jne
arpl
sti
xchg
xchg
and
test
fidivs
test
imul
sbb
sahf
and
jge
push
inc
xlat
push
and
shrb
sub
mov
sahf
push
mov
pusha
inc
sub
in
mov
mov
outsl
pop
sbb
mov
add
add
psubusw
push
in
sub
xchg
flds
add
add
add
test
push
pop
push
outsl
adc
dec
inc
not
mov
in
cmp
shll
pop
mov
mov
cmp
test
popf
fsubrl
fs
insl
popa
jns
imul
jns
je
fimull
mov
pop
shl
nop
mov
cli
std
ret
inc
ja
mov
cld
fcompl
mov
jp
sbb
add
pop
insl
push
cmp
jo
int
imul
nop
pop
call
dec
cmp
jae
mull
and
and
and
jbe,pt
xchg
jns
pop
scas
push
rclb
hlt
mov
pop
sub
shll
and
subb
mov
fildl
jbe
in
rol
push
mov
jle
aaa
sub
adc
gs
stos
add
dec
mov
in
lea
sbbb
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
or
add
add
add
rorl
stc
xchg
xchg
pusha
push
std
pop
cmp
push
mov
scas
popf
sub
adc
loopne
shll
adc
xorl
jae
inc
dec
rorl
out
xchg
pop
in
lcall
dec
fistps
add
jns
or
pop
inc
jns
pop
ds
jno
stos
pop
mov
test
cmp
xchg
xchg
adc
cmp
leave
lret
cmp
testl
cli
sahf
sbb
int3
out
fisubrs
negl
test
mov
adc
pop
fcoml
jno
dec
mov
mov
sti
outsl
pop
adc
xor
decl
xchg
push
push
in
outsb
imul
fstpl
addr16
mov
jb
daa
and
xor
imull
sub
push
xchg
mov
das
inc
sti
jb
xor
adc
pushf
negb
test
xchg
fisttpl
cmp
je
arpl
add
jle
jg
std
fstpt
sub
mov
fildl
add
add
add
std
enter
cmp
stos
and
pusha
adc
dec
cmp
mov
sbb
popa
inc
mov
sbb
out
jmp
and
fxch
shll
shll
stos
adc
pop
mov
rolb
insl
fwait
push
mov
sub
jo
add
jns
dec
dec
sub
lock
cmp
scas
out
out
pop
fsubl
pop
xor
cmp
mov
sbb
or
adc
add
fisttpl
jg
mov
push
outsl
xchg
das
ss
mov
ret
jne
or
out
xchg
sub
add
jge
and
mov
push
test
in
adc
inc
sbb
dec
and
jne
negl
and
gs
or
repnz
xchg
sbbb
out
in
push
pushf
xchg
sbb
push
loopne
dec
orb
push
js
jge
inc
or
cmp
ljmp
xor
popa
faddl
add
add
add
adc
push
popf
mov
xchg
jmp
lret
rcr
cmp
cmp
adc
outsb
mov
fs
insb
jmp
xchg
es
movsb
bound
outsl
loopne
mov
movsb
mov
cmp
xchg
xor
mov
xchg
xchg
xchg
dec
or
sti
imul
pop
xor
data16
insl
in
dec
popf
xor
lods
cmpsb
inc
into
pop
cmc
cli
daa
and
mov
bound
movsl
push
mov
sub
dec
mov
bound
unpcklps
pop
pop
cmpsl
stos
cmp
js
std
ss
xchg
pop
adc
outsl
push
cmc
mov
cld
push
pop
and
movsl
mov
dec
out
sbb
ja
aam
inc
dec
sti
daa
lret
push
jae
jmp
mov
and
inc
mov
dec
inc
xchg
sti
pop
fisubl
outsb
cmpsb
adc
pop
or
loop
jl
add
sbb
jmp
scas
inc
call
pusha
fldl
add
add
add
xor
stos
std
in
scas
das
adc
cwtl
cld
decl
sbb
xchg
sahf
or
aad
inc
sub
mov
add
sbb
and
push
jg
imul
push
sub
jb
adc
jne
out
addl
cmc
jne
mov
gs
into
outsb
mov
rorl
mov
xchg
das
dec
aaa
adcb
xor
sub
pop
mov
xchg
fistl
and
xchg
add
dec
pop
int3
xchg
fdivr
jbe
push
pusha
cld
aam
and
rcrl
loope
pop
push
mov
imul
lret
je
enter
cmc
repnz
lahf
jle
ret
inc
je
and
movsb
mov
lahf
cmp
mov
inc
xorl
push
shrb
sbb
or
dec
jne
sub
test
add
push
out
faddl
cmc
adc
add
incl
add
jecxz
adc
daa
or
and
imul
in
fs
xor
add
adc
jle
adc
xchg
mov
div
popf
into
cmc
stos
mov
pop
sbb
lods
sbb
gs
push
pop
xchg
adc
dec
add
jb
inc
js
cmp
vpaddw
or
sub
lea
mov
out
lahf
sbb
loopne
sbb
mov
scas
rcrb
pop
jnp
sbb
popf
clc
fsubrl
jecxz
cmpsb
xchg
cwtl
je
outsb
pop
dec
daa
out
mov
inc
int3
mov
dec
or
cld
cmp
xchg
xchg
cmc
daa
ljmp
loop
sbbb
out
cmp
mov
xchg
enter
jb
pop
and
push
repnz
nop
mov
mov
rclb
cli
sub
xor
jg
mov
lcall
fisttps
or
pop
filds
add
add
add
sub
adc
or
ret
fisubrs
ja
es
cs
sbbb
xchg
sub
fdiv
je
js
jo
scas
pop
in
pop
fisubrs
in
jo
daa
pop
adc
sub
sbbb
or
mov
fcmovne
scas
xor
fs
lahf
and
ja
mov
cmp
adc
in
icebp
or
sub
mov
mov
jne
wrmsr
loop
add
andb
dec
mov
test
repz
lret
test
push
cmp
fwait
movsl
test
iret
push
lds
mov
jecxz
adc
jns
out
loope
pop
xchg
adc
mov
mov
mov
jl
repnz
xor
inc
xchg
mov
mov
lds
out
shl
in
mov
and
sarb
sbb
add
add
mov
jns
xchg
xchg
mov
sub
mov
incl
add
sbb
inc
jl
out
out
adc
movsb
inc
mov
or
ja
insl
lea
inc
xchg
out
adcl
cmp
das
orb
mov
dec
insb
lcall
iret
jmp
sub
jae
das
stos
or
lods
inc
stos
in
lock
cmpsl
mov
leave
pop
cmp
daa
fwait
insb
mov
push
sarl
push
rcl
arpl
sbb
push
into
add
in
outsb
push
mov
pushf
push
xor
or
comiss
sbb
arpl
ficomps
mov
sub
or
xchg
out
adcl
sub
pop
aaa
inc
imul
mov
inc
jbe
dec
mov
movsl
inc
lock
xchg
jmp
sub
xchg
push
jmp
les
repnz
sub
js
into
lods
push
cmp
imul
shrl
sbb
jae
fadd
fsubp
jnp
or
cld
les
add
incl
add
ret
jo
inc
xchg
add
mov
mov
dec
sbb
dec
xchg
hlt
cmp
add
add
insb
sub
icebp
pop
adc
sti
jnp
jo
dec
push
jmp
push
lcall
call
jo
mov
ljmp
push
mov
movsb
or
roll
jno
cli
pop
call
addb
cli
loope
adc
cltd
pop
in
dec
das
push
dec
shll
cmp
inc
nop
fsubs
jb
add
repz
add
xor
lods
aad
jl
clc
mov
aas
dec
inc
clc
daa
sbbl
mov
xor
jns
insl
xor
push
mov
clc
adc
pop
ja
mov
inc
mov
push
outsl
sahf
pop
lcall
push
sbb
xor
dec
cmp
std
cmp
mov
pop
xchg
push
mov
adc
lds
and
add
sub
cld
cli
jle
dec
nop
xor
vcvttps2dq
add
incl
add
add
aas
add
das
sbb
ret
push
call
jle
xchg
in
sub
add
insb
mov
dec
mov
movsb
into
inc
push
shr
into
cmp
cmp
adc
pop
fistl
or
iret
jo
stc
daa
lods
adc
jae
stos
rdgsbase
fidivrl
hlt
das
cmp
out
add
int
mov
push
mov
mov
adc
sti
hlt
js
imul
addb
cmc
pusha
rol
xchg
clc
or
cmpl
xchg
xchg
aad
ret
iret
or
jle
js
std
jg
test
mov
sbb
add
adc
movsb
push
jmp
inc
aaa
stos
test
or
mov
inc
inc
pop
inc
vprotw
add
daa
xor
jne
lods
setae
mov
mov
out
push
mov
gs
add
ja
sti
aaa
out
ja
test
add
incl
add
nop
sub
pop
movsl
aad
in
pop
ja
xor
addr16
mov
lret
fs
inc
int
js
test
movsb
mov
pop
dec
nop
insb
js
rcrb
testl
push
pop
cmp
push
je
daa
jl
and
mov
lea
xor
jp
dec
imul
das
je
lods
ja
cwtl
rolb
push
and
push
mov
add
bound
and
clc
sub
jno
mov
mov
out
outsl
arpl
fsubrs
sbb
xor
data16
sbb
cmp
sbb
cmp
cmp
push
mov
popf
cld
movsb
mov
sarb
cmp
or
rcr
int
test
mov
push
sbb
and
js
and
pop
add
into
arpl
pop
xchg
aaa
pushf
repz
pop
in
add
add
add
mov
sarl
sbb
sti
mov
and
jns
mov
rclb
sti
pop
add
outsb
pop
sbb
xor
fildll
pop
lret
sbb
mov
aaa
sahf
add
sbb
js
sarb
clc
andl
cmp
pop
and
inc
or
pop
repnz
sub
adc
push
inc
cld
push
sub
add
shlb
leave
cmp
dec
leave
or
xorl
cmp
inc
fs
dec
jo
jp
out
jl
mov
popf
pop
mov
daa
mov
test
in
or
xchg
cltd
pop
push
adc
out
push
ss
inc
jnp
scas
mov
mov
lds
push
jmp
out
mov
mov
sbb
inc
sbb
and
inc
lea
popa
mov
or
popa
sbb
mov
out
add
ja
lcall
mov
cmp
add
incl
add
stos
notl
mov
xor
scas
cmpsb
dec
pop
jae
push
lds
or
adc
jecxz
jne
stos
mov
mov
test
rcrl
ja
cmpsb
lahf
mov
frstor
ret
pop
jo
adc
test
and
shlb
sub
pop
scas
dec
adc
out
dec
jbe
repnz
int3
incb
mov
xchg
mov
adc
dec
xchg
cmovne
or
mov
sbb
lea
and
push
lock
jae
adc
lahf
xchg
insb
shll
jb
inc
sub
xchg
and
inc
push
or
xchg
xor
fcmovnbe
addr16
xchg
xor
scas
stc
data16
les
outsb
lret
sysenter
pop
sub
mov
cli
rcll
aas
sub
int
dec
mov
push
cmp
leave
sbb
repz
lock
jg
in
and
sub
add
incl
add
imul
pop
lds
sti
push
jmp
lret
xchg
mov
fs
and
inc
push
xchg
popf
push
movl
mov
cmpsl
fcoml
jb
stc
jbe
mov
jecxz
jg
xchg
xchg
repz
fcompl
lea
push
ret
ret
rclb
lret
mov
xchg
pushf
dec
xchg
clc
push
inc
push
xchg
ret
sbb
mov
inc
sbb
inc
jno
and
lahf
cltd
mov
loop
xchg
lods
mov
cmp
pop
es
fistpll
adcb
jle
jp
jmp
or
adc
xor
xor
ret
push
jo
and
lcall
sarb
push
mov
test
and
lret
testb
shll
mov
xor
ret
lock
sti
arpl
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
pop
jmp
add
add
add
inc
jg
inc
loope
imul
js
scas
in
sbb
shr
lods
test
pop
sbb
enter
add
mov
push
rcll
cli
ror
in
outsl
xlat
sub
push
cmpsb
mov
leave
push
pop
or
int3
je
nop
pop
mov
push
mov
push
enter
sub
inc
or
mov
pushf
and
rcrl
xor
dec
dec
mov
aas
or
sbb
or
mov
sahf
and
pop
data16
push
xor
fisubrl
push
cs
loope
xor
sarl
dec
insl
add
mov
hlt
cs
subps
push
mov
jp
push
jge
lea
jb
jbe
jmp
xchg
sub
xchg
xchg
xor
add
adc
js
pop
shlb
cmp
insl
add
mov
dec
js
stc
mov
dec
int
pop
jp
fs
call
add
jnp
xor
sbb
sbb
or
gs
sub
pop
outsb
sbb
add
mov
lahf
sti
jmp
adc
jle
jo
shlb
jno
pop
mov
sub
mov
mov
and
in
dec
cltd
mov
mov
aad
ret
int
xchg
xchg
out
addb
in
jo
leave
loop
mov
jb
mov
xor
jge
lods
test
stos
dec
mov
cld
test
jp
in
lret
adc
add
cwtl
xchg
leave
push
out
add
pusha
ja
push
adc
in
scas
or
xor
imul
pop
xor
pop
sahf
add
stos
mov
inc
sbb
xor
jl
push
xor
dec
jne
fcmovnu
shrb
movsb
mov
pop
push
lock
neg
xorb
jnp
mov
mov
mov
pop
insb
fildll
fwait
jns
jns
mov
add
incl
add
push
lahf
addr16
fildl
cs
inc
aas
xor
test
jns
xchg
sub
or
xchg
push
jne
shr
les
mov
mov
pop
into
dec
dec
cmp
or
xor
push
jmp
push
xchg
loop
shrl
stos
negl
cmpsb
push
fwait
dec
outsl
fwait
push
aam
inc
out
cmc
dec
into
jnp
call
jnp
fs
jecxz
movsb
jecxz
ss
into
jns
mov
fstpl
negl
in
std
mov
arpl
sbb
insl
out
in
cli
dec
je
loope
test
call
xchg
jb
jmp
enter
dec
cmp
xchg
cs
adc
ja
cmp
sahf
jne
sarl
mov
push
shlb
and
lods
or
inc
rcl
in
clc
rcl
mov
xor
clc
cmp
push
xchg
xor
xor
push
add
mov
pxor
jnp
adc
jne
pop
mov
add
incl
add
pop
cmpsb
sub
insl
or
inc
mov
dec
aam
clc
cld
jecxz
pop
inc
out
pop
push
es
add
bound
clc
cmp
mov
push
sub
adc
dec
inc
or
jae
pop
dec
cmpsb
les
mov
roll
inc
lahf
add
mov
pop
in
lcall
jb
and
shr
out
jae
ds
ss
rorl
mov
loop
out
and
cmp
jns
aas
fwait
mov
ret
inc
imul
mov
int3
enter
and
xor
cwtl
or
cmp
pop
aad
jl
push
mov
dec
aad
and
sbb
sbb
mov
jg
sub
test
call
lods
daa
cmp
pop
pop
cld
sti
ret
xor
sbbb
pop
stos
add
mov
cwtl
mov
inc
les
mull
stos
cli
and
mov
out
lods
xor
aas
xlat
fistl
das
int3
sub
add
add
add
xchg
mov
xorl
sub
mov
pusha
stos
adc
adc
pop
int3
ficoml
cmc
add
scas
cli
or
mov
dec
addb
sbb
add
pushf
and
std
ss
xor
jg
arpl
adc
inc
insb
xor
stos
test
or
aas
dec
mov
int3
ret
cmp
mov
adc
jae
adc
mov
or
out
insl
push
or
jne
std
xor
mull
lock
aam
fs
adc
lahf
jbe
xor
mov
push
movsl
lret
cmp
push
lret
leave
in
mov
mov
sbb
push
sbb
clc
dec
int3
aad
inc
fstps
sbb
fstl
adc
scas
sub
sbb
or
mov
push
inc
jo
js
jecxz
andb
insl
sub
add
jb
scas
decb
fisttps
xor
pop
push
in
add
incl
add
mov
fisubl
jmp
push
push
mov
incb
jmp
icebp
les
push
inc
xchg
in
cmp
inc
push
pop
out
sbb
and
adc
push
cld
xchg
pop
mov
in
cld
insl
loopne
xor
mov
out
sub
pusha
xchg
sub
dec
dec
xchg
push
test
pop
lods
and
ret
ljmp
lret
fldln2
adc
dec
clc
or
arpl
push
cmp
stos
mov
adc
dec
movsb
adc
add
mov
aad
jg
lea
test
mov
cmp
cmp
loop
adc
jno
std
xchg
in
stc
mov
stc
adc
gs
jp
rorl
cmp
add
in
dec
sub
dec
push
dec
out
push
and
xor
mov
xchg
xor
adc
in
fcomps
mov
stos
add
add
add
xlat
mov
xchg
test
add
incl
add
mov
imul
inc
lock
mov
cmp
int3
decl
xchg
ljmp
jnp
xor
lret
aad
xor
inc
sub
mov
cmp
enter
loop
jbe
ss
cmp
popa
sub
mov
aas
in
xor
inc
push
popf
ja
adc
imulb
xchg
sub
xchg
rcll
cmpsb
jno
rcrb
adc
xor
in
xchg
mov
sub
or
push
rol
sti
test
jns
inc
jmp
mov
aam
add
pop
test
mov
push
in
movsl
xlat
and
aad
lock
mov
push
aam
test
jbe
out
cmp
xor
lret
and
leave
jg
lahf
popf
cmp
mov
icebp
pop
notb
and
jne
outsb
loop
mov
outsl
or
inc
add
mov
aas
mov
outsl
mov
incl
add
jno
fmuls
jo,pt
push
xchg
jne
lret
in
scas
dec
pop
jl
enter
fwait
paddq
je
out
shr
je
inc
call
fisubl
jnp
push
xchg
mov
cmp
imul
adc
stos
test
aam
jb
sbb
mov
cmp
adc
sub
aas
rcrl
sub
daa
out
mov
mov
leave
or
movsl
inc
or
shll
fidivl
xor
scas
test
jge
in
lret
mov
mov
leave
es
test
shll
aad
xchg
xchg
pop
insb
sar
lods
lea
add
cmpsl
jl
dec
jnp
jae
test
iret
push
aam
popa
adc
inc
sub
sbb
sbb
xor
pusha
rcl
lret
sub
scas
add
in
ss
dec
outsb
sahf
lods
adc
je
xchg
ja
sbb
in
push
add
mov
sti
mov
aad
test
dec
out
add
incl
add
or
cmp
pusha
cmpsl
aam
push
in
iret
cmpsl
sbb
jns
push
mov
insb
loopne
out
loope
lock
ret
mov
insl
pop
pop
sarb
adc
add
adc
out
push
js
in
and
cmc
dec
push
jg
rclb
std
loope
arpl
in
std
mov
aas
xorl
or
pop
pop
jge
cwtl
cmpsb
xchg
insb
aas
cld
jbe
or
jo
ljmp
jp
sbb
xchg
or
lods
and
and
xor
cmp
xchg
jne
sbb
repz
jns
mov
or
dec
bound
cli
aam
jns
insl
std
sbb
jbe
iret
int
mov
mov
pop
mov
fsubl
jp
mov
xor
lcall
ja
lock
jge
hlt
sub
test
movsb
fidivl
xlat
test
in
or
or
add
stos
cmpsb
cmp
add
add
into
adc
neg
jge
xchg
jns
and
movsb
dec
lock
incl
add
sbb
push
jle
mov
xchg
stos
sub
inc
jno
xor
sub
sub
cli
aad
push
or
and
pop
mov
imul
xorl
test
mov
lcall
ljmp
aam
movb
out
or
pop
dec
call
imul
aam
adc
inc
rcrb
xchg
cmpl
or
popa
mov
push
mov
dec
xor
fbld
fs
dec
sarl
xor
sub
push
scas
les
jns
inc
cmc
test
icebp
xor
daa
std
pushf
loope
mov
pop
or
cld
pop
cwtl
jl
and
addb
xlat
jle
inc
xchg
repz
add
rorl
cmpl
pop
fwait
push
mov
push
cmpsl
insb
testl
shll
call
cmp
pop
cmp
outsl
jg
jg
sub
ficompl
icebp
add
incl
add
stos
adc
cltd
sbb
imul
adc
xor
jb
sub
xor
mov
xchg
fcmovu
loop
and
dec
sbb
push
xor
cmovle
push
dec
hlt
inc
ljmp
mov
lock
aad
icebp
jl
inc
xchg
pusha
jl
scas
add
sub
cwtl
add
pop
es
ss
sarl
pop
int
and
push
data16
pop
movsl
or
add
and
insl
inc
dec
xchg
mov
mov
into
sbb
scas
dec
in
mov
lock
mov
dec
mov
sbb
dec
dec
leave
insl
jmp
adcb
cmpsl
addr16
add
inc
imul
push
or
xchg
iret
lahf
shrb
shrl
cmp
xor
jno
or
xchg
mov
je
in
in
pop
pop
dec
jno
add
ja
and
aaa
divl
out
jo
dec
repnz
incl
add
or
cltd
jb
inc
mov
fwait
sbb
movl
add
jmp
int
dec
pop
sbb
ljmp
sbb
mov
mov
mov
subb
fisubl
mov
fsubs
jmp
adc
out
lock
out
lret
jmp
testb
xor
cmc
mov
enter
push
inc
inc
gs
pop
sub
lahf
jmp
adc
aam
push
dec
adc
add
cmp
xchg
adc
repz
pushl
addl
test
jb
stos
xor
mov
inc
inc
push
fdivl
int3
cmpsb
outsb
inc
rcrl
test
dec
mov
jae
and
xor
aas
mov
stc
arpl
pop
push
jmp
sbb
out
dec
lds
sahf
in
filds
mov
add
mov
cmc
mov
push
repz
incl
add
cld
std
hlt
mov
jl
scas
add
stc
or
adc
cmp
loop
push
sahf
mov
fcoml
imul
fisttpll
test
and
shr
dec
inc
mov
push
out
mov
pop
mov
mov
bound
arpl
or
shrb
inc
icebp
in
pushf
sbb
xor
cmpsl
lret
repz
push
pop
hlt
and
inc
repz
pusha
add
add
nop
inc
pop
dec
cmp
or
repnz
fs
repz
and
or
xor
stos
xor
push
cmc
mov
sbb
inc
jge
test
mov
mov
iret
add
ds
int3
imulb
dec
push
addr16
add
out
cld
dec
lods
lods
mov
daa
cmc
adc
pop
js
shr
ret
addr16
and
rcl
sbb
sbb
sub
jle
jne
pusha
popf
pop
sbb
hlt
add
incl
add
dec
jge
out
cmp
pop
out
mov
lcall
sub
subl
jg
or
pop
mov
xchg
adcl
test
mov
and
inc
fstps
cs
shll
xchg
popa
jecxz
aas
out
or
sar
fmuls
mov
lock
and
jae
stos
push
xchg
xchg
jbe
daa
push
fwait
pop
shl
add
mov
add
cmpb
out
insb
and
mov
mov
or
sbb
aaa
push
jo
lock
xchg
aas
out
xlat
mov
psubb
je
lds
adc
xor
in
aaa
cli
vaesenclast
lret
push
push
jecxz
int
push
and
mov
adcb
pop
in
xchg
test
dec
mov
inc
pop
lret
cmp
pusha
movsb
jne
shll
test
popf
pop
and
fnsave
push
add
imulb
mul
xor
int3
dec
cmc
add
incl
add
shll
and
repnz
cld
xchg
cmp
add
ds
add
or
mov
daa
lret
mov
out
movsb
jne
push
push
xor
repnz
rcrb
fisubrl
and
ret
clc
dec
and
mov
push
pusha
mov
mov
or
push
subb
aam
add
pop
lahf
xchg
jl
push
lea
pop
inc
call
into
push
nop
lods
scas
xor
xlat
movsl
fcmovnb
data16
arpl
mov
loop
push
rcr
push
scas
leave
movsl
push
movsl
cmc
lcall
fdivs
jo
mov
cmp
outsb
sbb
inc
mov
icebp
adc
test
sbb
movsb
push
popa
mov
call
mov
jle
sbb
sub
pushl
insb
ss
push
scas
mov
add
shrl
add
add
xor
jb
jae
out
int3
popa
inc
testb
incl
add
xchg
cmp
ret
inc
inc
xchg
cmp
mov
and
dec
mov
movsl
repz
decl
popf
jl
mov
xchg
jl
js
fxch
in
sbb
scas
cmpsl
mov
jbe
cs
and
nop
lea
mov
or
and
out
out
push
jle
sarl
mov
xchg
cmp
in
mov
iret
rorl
push
mulb
inc
pushl
divl
andl
out
push
out
xor
fwait
loop
out
lret
sub
dec
mov
sub
mov
out
and
fcoms
aaa
mov
jne
stc
adc
inc
dec
aad
aaa
movl
sarb
pushf
fsubr
lcall
push
das
inc
sub
sub
mov
jge
xchg
and
xor
lea
add
ds
in
idivl
js
mov
adc
mov
testl
add
inc
and
or
add
decl
inc
cs
outsl
jno
std
mov
mov
mov
sbbb
addb
jmp
jecxz
and
dec
add
pushf
sbb
lods
call
aaa
jns
mov
out
inc
push
sbb
mov
sti
pop
loopne
das
mov
sub
xchg
rcl
mov
shl
pushf
jns
push
sub
or
movsb
ds
mov
add
push
push
push
js
jno
cmovae
sub
mov
sbb
xlat
mov
mov
push
jo
aas
ret
mov
and
ljmp
xchg
adc
cld
loope
push
and
pop
dec
dec
scas
inc
jl
aad
mov
shl
inc
sbb
mov
fsin
lret
stos
cmp
push
or
dec
pop
dec
mov
ret
loope
or
bound
jle
add
pop
es
inc
cli
aas
into
lret
cmp
jg
clc
add
incl
add
push
pop
ffreep
push
loop
sub
mov
xchg
clc
xchg
pop
adc
pop
push
adc
jle
inc
sti
test
xchg
mov
jmp
mov
lock
out
cld
stc
loope
shrl
cmp
rcl
jo
cmp
inc
adc
std
sub
movsb
mov
jecxz
dec
dec
xor
int3
sbb
int
mov
and
pop
out
sub
mov
push
xor
mov
outsb
test
jnp
jmp
movsb
popf
in
pop
ret
in
loop
pop
jnp
push
jb
mov
and
out
or
sbb
sbb
push
sti
cltd
push
xchg
aam
adc
mov
cli
mov
imul
cld
ljmp
scas
or
stos
push
xchg
jae
cmpb
or
stos
popa
das
adc
or
addr16
mov
lcall
inc
mov
dec
inc
stc
add
incl
add
shlb
sub
jne
lar
jg
insb
jnp
mov
jmp
jmp
add
lahf
adc
xlat
pop
andb
out
lcall
mov
and
hlt
jmp
inc
adc
jne
add
imul
sub
push
into
xorl
mov
rep
test
rorl
cld
int
in
jle
cs
ret
dec
aam
or
aad
call
je
int
stos
jecxz
lods
adc
fldenv
fwait
imul
lahf
dec
xor
adc
outsb
cs
jl
imul
lds
jg
jp
or
sbb
mov
jge
clc
addr16
xchg
sbb
and
inc
stos
mov
adc
insb
push
decb
pop
shrb
sub
lea
shl
pop
add
jae
cltd
dec
mov
jno
or
lret
add
incl
add
fwait
std
jmp
loop
sbb
sub
out
xchg
dec
ret
push
aad
cmc
fcompl
dec
loop
or
or
imul
jp
ret
cmp
aaa
sub
jb
les
xchg
out
js
sahf
and
cmp
xchg
adc
or
lahf
xlat
movsb
stos
or
hlt
mov
push
push
negl
loop
or
pushf
push
and
xor
add
push
xchg
notl
xor
movsb
add
xchg
sub
lods
dec
jns
mov
les
pop
jecxz
xchg
and
test
xchg
jmp
jae
mov
push
mov
push
fadds
push
lahf
aaa
cmpsl
sbbb
mov
mov
repz
inc
sub
fwait
mov
fsts
add
inc
movsb
jae
xor
lds
pushl
lock
mov
jno
fimull
jl
xor
xchg
cmpsb
stc
in
add
push
into
nop
out
cwtl
jle
push
sub
dec
sub
sti
add
incl
add
mov
addr16
xchg
sub
dec
loope
cmp
pop
mov
cmpsl
xchg
lea
xchg
and
jnp
lea
or
jae
je
mov
mov
mov
les
testb
and
shlb
jo
idiv
iret
test
mov
clc
xchg
stos
mov
ds
dec
pop
icebp
std
stos
loope
xchg
idivl
shrb
scas
mov
mov
pop
mulb
add
daa
cld
sbb
inc
addl
stos
stos
xchg
fidivl
mov
gs
lods
pop
imull
xchg
ljmp
add
cmp
scas
cmovge
and
stc
pusha
mov
pop
insb
test
cmp
dec
lcall
rol
fmul
sbb
xchg
pop
push
pop
mov
mov
stos
pop
shlb
or
cltd
lret
in
pusha
lret
xor
out
add
test
jg
push
pop
push
mov
inc
cld
add
incl
add
push
push
mov
mov
call
loope
and
data16
pushf
stos
cmp
aas
mov
sub
cmp
imul
or
addr16
dec
xchg
out
scas
je
cmp
adc
sarl
aas
adc
out
outsl
cmp
in
pop
rorb
out
jns
jge
dec
push
and
xor
fwait
lcall
mov
xor
jno
cmp
mov
pop
out
mov
mov
test
ret
xor
es
mov
int
gs
sbb
push
xor
fiadds
nop
enter
mov
dec
popa
and
and
mov
inc
cli
mov
sbb
sbb
jo
xchg
mov
or
xchg
mov
sti
nop
scas
dec
xchg
dec
adc
and
sbb
mull
movsb
sub
mov
int3
iret
or
mov
lahf
pusha
add
movsb
push
in
cmc
jne
sbb
js
mov
add
incl
add
jns
adc
jbe
outsl
rcr
dec
or
js
das
sbbb
fisubrs
pop
call
lods
lock
adc
mov
sub
xor
mov
xchg
and
push
jno
mov
daa
mov
mov
inc
roll
and
or
mov
addl
jo
sbb
cmc
sbb
jge
xor
xchg
int
out
pop
shlb
loop
sub
sbb
and
push
xchg
in
cs
dec
aaa
les
jmp
push
mov
inc
xor
inc
and
test
divl
pop
popf
divl
dec
mov
stos
repz
jnp
mov
mov
out
test
loopne
fildl
add
mov
push
test
adc
nop
or
pop
aas
movsl
test
insl
xchg
mov
mov
in
imull
xchg
inc
test
lea
in
enter
push
aas
jns
push
mov
adc
sbb
shlb
aas
out
int3
mov
adc
lods
cmp
incb
add
add
add
fwait
jl
lret
xchg
push
inc
xchg
push
cmp
outsl
fwait
cmp
mov
cmp
cmpsl
js
xor
jbe
vmwrite
roll
std
xor
out
cmp
sbbl
mov
mov
xor
inc
mov
clc
add
daa
dec
fistps
repz
adc
dec
pop
cwtl
hlt
ret
ret
xor
inc
and
stos
out
push
mov
outsl
popf
dec
add
rcll
sub
subb
repnz
daa
sub
add
push
xor
jno
outsl
lret
scas
movsl
inc
std
leave
enter
xor
sarl
xor
iret
push
inc
lahf
test
arpl
mov
ljmp
dec
mov
out
imul
sub
pop
lret
test
push
xchg
pop
jmp
mov
rcrl
or
mov
and
ror
int
incl
add
add
add
adc
aas
dec
hlt
movsb
test
popl
out
shlb
add
leave
xchg
call
mov
lods
jge
push
addr16
fisubs
pop
pusha
jns
dec
cmpsb
mov
outsb
mov
in
or
les
fildll
movsl
push
lock
adc
ficompl
mov
sbb
jb
scas
xchg
cmpsb
push
movsl
aaa
sbb
mov
in
test
shrb
cmp
pop
les
fsub
or
xor
pop
loope
push
lods
sahf
rcll
adc
add
insl
test
pop
icebp
jle
adc
je
or
cmp
add
loop
cmp
push
add
xorl
std
lret
int3
push
in
fdiv
add
cld
int
jmp
sahf
jnp
jmp
pop
mov
xor
push
mov
mov
mov
mov
cmc
int3
aaa
add
ret
bnd
cmc
inc
stos
repz
cmp
add
add
cs
lahf
cmp
sahf
addr16
fdivr
add
inc
fimull
sub
jle,pt
sub
loopne
clc
xchg
mov
mov
out
aaa
inc
iret
adc
mov
cmp
into
or
in
addl
rorb
les
daa
and
mov
je
leave
cs
popa
inc
fwait
mov
in
mov
lods
mov
cmp
and
fcoms
jg
sahf
sub
std
repz
call
paddb
les
lds
scas
dec
xorb
jae
and
cmc
pop
in
repnz
imull
jl
cld
aas
leave
into
push
rcll
inc
bound
jge
xchg
loope
pop
mov
mov
test
mov
iret
sbb
mov
mov
bound
add
std
aaa
mov
shll
push
cmp
add
incl
add
add
or
in
push
outsb
test
pushf
pop
pop
jmp
test
out
mov
mov
mov
mov
cmp
or
pop
or
jno
call
es
jae
mov
imul
fwait
loopne
dec
push
shlb
dec
push
fdivs
fucomp
mov
dec
inc
rolb
movsl
jns
mov
pop
nop
fadds
ja
popf
pop
inc
loop
gs
jmp
push
xchg
xor
ljmp
lods
push
je
out
pop
xlat
xchg
fistps
adc
imul
mov
xchg
stos
and
cmpsb
xchg
cmp
pop
adc
mov
fstpl
mov
js
int
pop
outsb
aam
sbb
dec
adc
mov
add
push
pusha
icebp
inc
pusha
mov
push
cltd
jne
pop
dec
lds
test
enter
mov
add
insl
aam
mov
scas
add
dec
or
add
add
insl
mov
sti
or
dec
mov
les
mov
or
xor
stos
fstpl
push
jmp
mov
imul
mov
adc
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
mov
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
cli
mov
popf
push
xlat
stos
dec
mov
pop
fs
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
