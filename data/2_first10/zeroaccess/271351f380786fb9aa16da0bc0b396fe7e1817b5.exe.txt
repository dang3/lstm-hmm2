push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
mov
repnz
jl
jl
xor
jl
adc
and
popa
pusha
shll
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
cli
push
mov
in
mov
movsl
or
sub
ffreep
scas
pusha
fisubl
push
xchg
sub
mov
pusha
dec
repnz
fsts
fsubrp
jno
and
pop
mov
frstor
shlb
mov
sub
cltd
popf
aad
dec
mov
inc
cmp
int
mov
adc
std
cmp
xchg
ja
aaa
mov
mov
xor
or
enter
lods
inc
sahf
mov
xchg
fcomp
pop
cli
inc
imul
andl
ja
mov
xchg
mov
mov
xor
inc
js
xor
arpl
mov
jne
mov
jnp
repz
iret
test
dec
int
das
outsb
mov
xchg
ficompl
mov
xchg
mov
xchg
adc
sbb
mov
cmc
sarl
jle
sarb
dec
cmpb
ja
push
bound
inc
mov
js
mov
and
addb
outsl
push
ljmp
ljmp
mov
add
cmp
mov
ror
stos
push
in
leave
adc
pushf
je
shlb
jmp
adc
rcll
cmp
les
in
jb
lds
adc
popa
push
push
sub
stc
push
daa
mov
rcr
fdivl
imul
loop
or
xchg
rcrb
loop
cmp
cmp
jle
xor
and
sbb
lret
mov
cli
fstpl
adcl
add
xor
xor
jb
mov
mov
mov
add
or
jg
mov
lret
add
xor
xchg
lret
movsb
or
xor
lods
dec
add
lock
imull
mov
adcl
mov
lcall
or
jnp
sbb
dec
xchg
push
lret
in
sbb
push
jle
sub
out
push
icebp
jb
pop
pop
cmp
dec
and
and
fistps
cmp
insl
out
add
adc
jle
and
pop
aaa
sarl
mov
lock
jbe
mov
cs
bound
imul
or
xchg
daa
pop
mov
add
imul
inc
in
out
push
and
outsl
clc
rolb
scas
mov
ds
mov
addb
xchg
aad
test
clc
xchg
or
stos
sar
pop
iret
rcrb
pop
jns
inc
mov
cmc
push
mov
xor
dec
lcall
jb
daa
dec
scas
repz
push
mov
mov
je
mov
lea
and
cmpsb
cmp
xchg
daa
push
je
adc
in
test
fcmovu
in
mov
sub
adc
or
int
lods
sub
xchg
daa
adc
fcomps
icebp
lds
cmp
mov
stos
js
push
in
sbb
cmpsl
mov
xchg
test
inc
fwait
fldcw
popl
popf
jl
cmp
addr16
mov
ret
push
neg
outsb
push
lods
loopne
adcb
sarl
add
sub
fldenv
ljmp
lahf
dec
pop
xor
cli
rolb
cltd
hlt
jnp
cwtl
divl
out
int
jno
mov
inc
aaa
dec
mov
jae
push
or
lret
lret
mov
cmpsb
repnz
or
fsubrl
push
push
or
fst
xorl
dec
sub
mov
and
push
mov
xor
mov
cmp
scas
xor
mov
jg
sbb
out
xchg
cmc
out
lods
adc
inc
mov
rol
jo
insb
sbb
aam
popa
fstl
push
mov
mov
outsl
or
data16
es
xor
popf
ret
in
xchg
inc
outsb
ret
fsubrs
adc
mov
test
adcl
and
cmp
clc
cmp
addr16
lods
sub
cmp
pop
lahf
es
scas
push
pushf
xor
sub
pop
jmp
cmpsb
xchg
push
jbe
xor
data16
jecxz
or
mov
dec
mov
mov
push
push
jnp
cmpsb
sub
push
add
adc
mov
test
jle
mov
jge
mov
mov
lea
dec
sbb
in
stc
push
push
push
mov
loopne
sbb
fistpll
ret
hlt
sbb
orl
nopl
push
enter
adc
loope
cmp
sub
dec
inc
cmp
xor
mov
idiv
sbb
rorl
ja
dec
and
or
inc
insb
shlb
jl
or
or
insb
pop
movsl
fsts
jno
cltd
int
add
addl
jge
add
and
jle
mov
das
cld
cwtl
scas
adc
adc
push
inc
adc
xor
das
push
in
sub
add
addr16
rol
dec
iret
or
inc
and
fldt
ljmp
adc
jmp
lret
and
int
cli
fnstcw
push
adc
cmp
mov
scas
sti
fistps
ljmp
aas
int
xchg
jne
popf
jg
xor
pop
mov
scas
call
sbb
push
ja
aaa
cmpsl
mov
push
shll
sbb
push
mov
imul
hlt
movsl
add
pop
push
sub
sarb
mov
aas
mov
sti
sub
add
int3
hlt
adc
rorb
lods
sub
mov
inc
inc
adc
and
xor
pop
loop
xchg
leave
inc
mov
xchg
jge
jae
and
adc
idivb
mov
mov
jbe
rolb
jns
popa
leave
stos
add
adc
dec
pop
mov
inc
xor
pop
pop
test
std
or
sbb
imul
dec
pop
cwtl
shlb
aas
cmp
outsl
pop
add
cmpb
stc
dec
cmp
or
dec
jno
outsl
sbb
or
shr
loope
gs
or
push
adc
inc
mov
scas
or
xor
pop
dec
imul
sahf
lea
jge
mov
addr16
fiadds
stc
lds
data16
es
jnp
scas
popf
lret
cli
pop
mov
fstps
jae
repz
dec
push
ss
rclb
xor
mov
sbb
out
mov
dec
cli
adc
mov
repnz
mov
leave
bound
adc
ficompl
hlt
inc
adc
pop
aad
push
popf
jge
shr
rcll
push
loope
aas
mov
cmpsb
data16
xchg
jp
lods
fsubl
inc
xor
cli
or
hlt
pop
xchg
imul
push
push
sbb
jmp
mov
test
or
jne
xor
sbb
or
mov
roll
ds
xchg
mov
repnz
ret
mov
scas
bound
and
push
xchg
test
mov
rcl
test
pop
sub
mov
mov
ss
or
mov
popf
test
iret
loopne
and
or
repnz
or
xor
push
add
mov
pop
stos
xchg
xor
sub
cmp
xchg
aam
dec
xor
pushf
sbb
cmp
in
pop
inc
or
lret
subb
movsl
cli
test
out
add
out
es
push
or
pop
push
adc
shl
loope
mov
out
stc
outsl
popa
cmp
mov
and
pop
and
pusha
cmp
fadd
daa
push
jmp
insb
cltd
cmp
jecxz
ja
mov
pop
int3
xlat
call
jb
mov
pop
lods
push
in
mov
or
sbb
stos
sahf
cli
fcompl
mov
loope
js
sub
je
push
mov
pop
jns
jae
sub
fs
stos
in
cmp
xchg
rolb
xorb
xlat
dec
test
push
sbbl
stos
jno
aad
add
outsb
jb
pop
xor
ds
sbbl
add
fs
int3
sub
mov
mov
fisttpl
sbb
andl
or
xor
inc
mov
mov
mov
dec
push
loop
repz
icebp
loope
sbb
pop
cmp
and
mov
xchg
lods
pushw
cltd
aas
jle
sti
dec
sahf
inc
adc
pop
dec
inc
jmp
jns
cltd
xor
nop
dec
jp
or
sub
xor
out
sbb
push
mov
jge
repz
outsb
mov
mov
xchg
inc
push
adc
cmp
sti
or
stc
inc
inc
jmp
and
or
aam
jmp
inc
movsb
or
mov
and
shlb
or
cwtl
in
sbb
push
dec
and
add
sub
jp
and
inc
jne
or
mov
mov
or
loope
sbb
jae
loopne
add
push
out
jne
mov
pop
inc
mov
pop
stc
arpl
push
mov
pop
subl
mov
or
rorb
add
gs
insl
and
inc
mov
push
insb
mov
test
or
hlt
jae
xchg
and
mov
mov
xchg
inc
notb
cmpsb
icebp
jns
fcmovnb
mov
addb
es
popa
xchg
dec
repnz
sub
or
xchg
jl
sbb
mov
adcb
jg
xchg
jle
in
jb
sahf
jl
xchg
sbb
lret
movsb
imul
sbb
aas
sbb
cmpl
test
dec
mov
insl
dec
stc
cmp
inc
or
insb
ret
decb
xor
es
or
sub
ljmp
and
mov
pop
fadds
hlt
leave
mov
repnz
push
xor
rorl
jbe
out
scas
add
or
pop
add
push
je
jecxz
push
inc
adc
jo
push
sti
int
ret
mov
es
mov
push
pop
jl
int3
cltd
ljmp
or
cmpsl
in
xchg
pop
mov
pushf
xor
xor
and
aam
out
shrl
rcrl
pop
sbb
addr16
stos
cmpsb
add
pusha
or
jle
xchg
into
push
dec
xchg
sub
add
mov
add
lcall
stos
push
test
dec
mov
pop
inc
and
jbe
cltd
or
lods
outsl
das
push
pushl
xor
xorb
movnti
pop
mov
nop
aas
sub
mov
out
pusha
or
fwait
push
repz
cmp
mov
test
lods
push
incl
cmpsl
xor
ljmp
rorl
ds
pop
pop
in
mov
negb
inc
jmp
and
cmc
popf
and
movsb
stos
call
mov
or
fdivs
xchg
stos
nop
std
jns
stos
xor
stc
xorb
into
sbb
out
insl
fbstp
shll
adc
xlat
xorb
cmp
xor
cmp
aad
jge
enter
fstl
jl
scas
ret
dec
lock
fisttpl
cmp
mov
jae
cmpsb
in
pop
popf
clc
ds
xchg
dec
pop
jb
mov
movsl
int
fwait
leave
pop
scas
mov
dec
inc
push
fmull
lods
ret
outsl
shrl
cmp
sub
loop
jne
sbb
xlat
int3
xor
clc
mov
lahf
pusha
cmpsl
test
popa
xchg
orb
shrl
jmp
repz
mov
mov
jmp
pop
jge
mov
ficoml
jb
adc
ds
fists
cmova
outsl
mov
xor
mov
add
imul
xor
and
sarl
add
mov
pusha
cld
mov
je
icebp
add
testl
sub
fwait
jl
neg
pop
inc
mov
lods
fistl
jl
sbb
mov
stc
pusha
xor
or
rorl
xor
mov
adc
adc
lret
test
sbb
mov
or
dec
call
jge
repz
pushf
test
movl
mov
or
cmp
mov
loopne
call
sbb
pop
insb
inc
adc
and
ret
and
add
jb
sub
rcpps
fs
dec
es
add
scas
enter
ret
and
negb
add
xorl
sbb
inc
insl
fcoms
xchg
in
ja
insb
pop
inc
add
dec
or
mov
sub
push
pop
cltd
adc
cmpl
nop
cmp
pop
mov
mul
popf
lcall
adc
sbb
sub
jo
mov
cmpsb
xor
push
aas
stos
cbtw
jnp
cmpsl
push
pop
lret
punpckldq
pop
push
leave
stos
mov
mov
rol
insb
popf
and
xchg
in
pop
push
push
out
pop
push
cs
lret
aam
or
in
inc
jle
pop
dec
addr16
push
in
nop
mov
movsb
pop
jae
aad
pop
and
lret
inc
fcomps
mov
sbb
adc
mov
dec
cmp
dec
and
and
mov
jmp
cli
xchg
xor
pop
sbb
sub
test
xor
push
pop
lret
insb
or
mov
adc
js
ss
push
clc
jnp
add
xchg
sub
repnz
movsl
cmp
mov
sub
adc
sub
shl
fildl
into
mov
cmpsl
pop
idivb
jecxz
jle
aas
push
jne
les
sbb
sub
loop
push
popa
mov
dec
out
jo
gs
add
movsb
sub
call
adc
jmp
rorb
iret
dec
scas
in
inc
sub
in
aam
jnp
mov
xor
mov
in
xor
xchg
adc
cmp
rcr
enter
pop
inc
rcll
pop
push
dec
pop
es
fsubrs
std
inc
lret
xor
mov
int
iret
loope
xlat
scas
nop
sarb
in
adc
inc
sbb
js
lahf
mov
xlat
inc
dec
pop
stos
jg
pop
fsubrl
hlt
pop
adc
mov
push
pop
mov
pop
jl,pt
cmp
repz
sub
xor
adc
and
jno
ljmp
xor
pop
loopne
lea
inc
stos
popa
cmpsl
daa
fwait
cmp
jb
fdiv
in
push
cmp
inc
sub
lcall
fisttps
adc
ficomps
repnz
push
popa
aad
or
movsl
adc
fwait
add
mov
sbb
popf
jnp
xor
inc
ss
out
aam
scas
cmp
jle
inc
in
enter
andb
popa
jl
mov
mov
pop
pusha
loope
push
or
dec
mov
nop
cmp
jp
outsb
ret
adc
aad
ret
in
daa
xchg
push
loop
mov
xchg
leave
jno
mov
out
and
push
xchg
jp
scas
sti
pushf
fs
rcrl
sub
mov
and
fs
pop
cmp
pop
pushf
jg
and
sahf
fwait
dec
fwait
lds
in
jge
icebp
repnz
mov
cwtl
adc
pop
subl
cli
mov
std
mov
mov
push
arpl
add
dec
sub
or
shrl
mov
out
push
mov
mov
psubsw
rcrb
jg
pop
movsl
and
push
test
fimull
sti
daa
icebp
cmp
lods
ret
test
and
jns
ret
and
sub
std
xchg
or
lcall
or
mov
pop
dec
std
and
dec
or
sub
stos
in
lods
popf
cmpl
xchg
add
mov
mov
pop
daa
fstp
xchg
mov
cmp
scas
xor
jge
push
clc
or
lret
rcrl
and
stos
pop
int3
imul
add
cmp
mov
mov
add
xor
out
inc
adc
push
pusha
mov
lods
cs
and
dec
xchg
loope
jecxz
cmp
es
mov
xor
daa
xor
mov
out
mov
imul
cmp
pop
icebp
lea
mov
sahf
add
pop
outsl
out
lods
sub
sbb
cmp
and
fadds
rcrl
xchg
dec
adc
mov
icebp
xchg
adc
mov
aad
in
int
fsubs
rcr
and
shrl
out
mov
push
xchg
pop
sbb
xchg
push
pop
mov
fwait
subb
lods
ljmp
add
add
insb
dec
movsl
add
out
adc
dec
test
ret
jo
and
xchg
std
shrb
xchg
sbb
test
mov
ds
js
dec
imul
sti
adc
insb
dec
int
fs
xor
dec
std
je
mov
jmp
fldl
mov
jns
lcall
fsub
dec
xchg
pushf
push
adc
in
std
xor
aas
leave
scas
fists
mov
jne
sbb
push
add
cmp
xchg
jno
mov
push
xchg
pop
jae
in
xor
or
sbb
sbb
inc
test
fisubrl
mov
fisubs
mov
pop
cmpsb
mull
int
subb
cmp
lods
insb
divb
push
xlat
adc
sub
inc
scas
out
nop
rcr
sub
repz
inc
adc
add
dec
repz
mov
cwtl
loopne
xor
out
out
loope
imul
cmc
jecxz
test
adc
les
mov
cmc
mov
xchg
mov
sbb
or
and
or
dec
or
cmpsw
mov
int
cmp
mov
rcr
push
insb
out
push
out
les
xchg
pop
outsb
jecxz
imul
cmp
scas
adc
cmp
enter
movsb
add
and
and
leave
mov
nop
jno
xor
iret
or
sbb
nop
cs
mov
mov
sbb
push
addr16
mov
push
xor
das
daa
jnp
or
cmp
in
loop
ret
in
test
fdivl
xor
push
lret
and
or
in
andb
call
add
ret
add
mov
ret
sub
xchg
jbe
jbe
mov
das
inc
xchg
movb
out
jo
in
cltd
loope
arpl
adc
adc
inc
das
push
push
out
dec
adc
dec
adc
xor
cmc
jo
repz
fiaddl
ficoms
cmp
adc
das
fwait
lahf
sbb
mov
or
add
sbb
fs
hlt
xchg
mov
mov
fildl
adc
leave
shr
in
cmp
cld
mov
push
out
insl
cwtl
xor
fists
jg
imul
push
mov
jmp
mov
or
mov
jg
stc
jo
sbb
mov
fmuls
je
mov
fs
dec
std
cmc
lods
sbb
aas
inc
or
and
out
into
mov
rcl
jge
push
mov
sbb
std
or
push
nop
adc
or
sub
mov
cmovns
arpl
and
push
out
les
xor
jb
lock
shll
jmp
pop
mov
das
jmp
fmul
loop
add
push
push
jnp
arpl
lock
dec
adc
inc
test
aas
or
sub
inc
roll
aad
add
outsl
and
mov
mov
xchg
pop
xchg
mov
add
add
jmp
icebp
pop
and
dec
cmc
mov
pop
shl
pop
shlb
adc
xor
add
mov
lods
rcll
jne
out
inc
imul
ds
or
add
push
mov
lock
sbb
dec
lods
jb
fsubl
dec
xor
push
push
imul
popa
sahf
sbb
inc
adc
push
rcrb
and
je
jg
push
pop
rclb
or
jo
pusha
jae
lret
lret
movsb
je
lret
push
mov
push
test
fwait
dec
adc
outsb
out
pop
call
scas
sub
in
in
insb
mov
mov
adc
pop
jno
adc
fsts
fcomp
cltd
mov
jmp
cmp
dec
jae
jle
jp
pop
pop
int
push
fstpl
nop
in
insb
jg
mov
mov
aas
cmp
in
push
imul
fdiv
int
xchg
adc
nop
movsb
out
stc
popf
jl
inc
inc
mov
test
test
repz
jp
ss
mov
sbb
sbb
push
mov
sbb
adc
xchg
mov
arpl
shll
inc
push
sbb
ds
pushf
aaa
jecxz
leave
popa
addb
lret
sub
stc
scas
mov
mov
leave
test
ja
cmpsl
xchg
push
xor
andb
mov
rclb
sbb
sbb
adc
ss
cmp
sub
adc
add
into
add
call
bound
aam
pop
mov
mov
or
xor
dec
cwtl
lods
test
sub
mov
imul
or
and
fmuls
xor
cmp
rcrb
lret
mov
faddl
orl
aas
mov
xchg
xchg
rolb
leave
dec
pop
cmpsl
push
data16
sub
enter
fidivrs
ja
stc
mov
xchg
outsl
call
push
and
outsb
mov
aad
rcrb
mov
cmp
jbe
xchg
xchg
test
and
add
int
push
adc
fisttpl
out
add
into
adc
sub
test
jbe
shl
add
push
es
inc
lahf
cmc
mov
cmpsb
ds
push
mov
sbb
cwtl
lods
pushf
mov
push
mov
stos
cli
shll
icebp
rclb
test
xor
lahf
jecxz
sub
push
sbbb
push
xchg
rcll
lea
adc
mov
push
loope
pop
adc
aas
mov
xchg
jl
ret
jmp
data16
cli
pusha
clc
je
xchg
lock
pusha
out
call
mov
shr
popa
cltd
inc
push
lret
fisttpll
xorl
and
in
sub
fiaddl
in
push
pop
cmpsb
or
push
loopne
mov
outsl
roll
jg
sahf
jns
ror
push
int3
xorb
cld
aaa
inc
pop
and
and
sar
sub
arpl
or
ss
jns
pop
lea
push
jle
icebp
insl
push
mov
std
lahf
aas
mov
mov
or
and
rorl
test
cwtl
bsf
cwtl
sub
inc
ss
xchg
pushf
dec
iret
add
mov
add
aaa
out
test
push
pop
pop
lret
icebp
out
nopl
sbb
adc
and
sub
lds
cltd
mov
shrl
addr16
xchg
and
sbb
inc
push
jo
push
sbb
xorl
fistpll
sbb
cltd
cmp
push
clc
pop
push
rol
or
jle
repz
inc
add
jg
imul
repz
sahf
pop
stc
test
test
imul
subl
jle
push
outsl
out
xchg
push
inc
xchg
cs
jae
jecxz
sub
roll
mov
jl
sub
pusha
push
rcl
mov
pop
jg
stc
xchg
out
shr
mov
scas
imul
mov
aas
test
xor
add
sbb
insb
outsb
or
cmp
fadd
pop
or
sbb
sbb
stos
clc
movsb
scas
push
inc
ljmp
mov
je
addr16
jp
ja
movsb
test
js
xor
push
mov
sarl
inc
add
testb
mov
cmp
leave
and
xorl
call
cmp
enter
push
testl
pop
dec
mov
sti
std
push
in
mov
testl
or
gs
dec
enter
and
cmp
loopne
push
dec
lea
xchg
int
arpl
pusha
sahf
and
inc
bound
imul
mov
lret
cmp
and
jb
sub
jp
fsubrs
movsb
test
aad
scas
inc
jne
test
int3
in
cmp
mov
repnz
pop
xorl
cmp
adc
loope
hlt
shl
and
or
jmp
jae
pop
xchg
mov
ret
or
push
or
mov
pop
dec
sahf
xchg
shlb
es
push
dec
cmc
push
push
pop
or
dec
xchg
xchg
jl
dec
ficompl
scas
lods
cltd
mov
push
fldl
mov
cli
jno
stc
outsl
cld
add
pusha
jbe
pop
xchg
dec
test
or
and
shl
fdivs
test
add
arpl
addr16
adc
iret
addb
arpl
or
test
lods
mov
lds
inc
test
sbb
sub
int3
cmp
aad
jno
or
dec
loop
lcall
jne
adc
fldl
cmp
xor
popa
and
xchg
repnz
imul
stos
adc
clc
pop
sub
jg
add
cmpsl
movsb
cltd
ret
jecxz
into
or
jle
es
cmp
xchg
mov
mov
or
lds
dec
outsl
ds
pop
ja
pop
call
lret
mov
mov
jecxz
sub
mov
ss
push
cld
push
mov
ljmp
sub
mov
jo
fwait
lds
gs
sbb
sbb
in
push
adc
pop
xor
into
ja
pop
dec
pop
divl
add
cli
idivb
pop
shl
xchg
jne
js
cmc
test
mov
cmp
add
ror
iret
jnp
enter
jne
mov
push
ror
dec
clc
dec
and
mov
jecxz
dec
inc
xor
inc
mov
adc
and
call
test
push
fcoms
stos
pop
test
fldcw
and
inc
xchg
sub
lahf
cli
imul
filds
mov
lret
pop
stos
pop
idivb
mov
and
mov
js
sbbl
and
in
icebp
jp
enter
mov
in
cmp
pop
xchg
mov
jecxz
xor
clc
addb
pop
xor
imulb
leave
lcall
inc
jl
ds
cs
in
xor
sbb
xchg
sbb
imul
call
fdivrl
sarb
movsb
shlb
xchg
out
mov
sbb
mov
adcl
fcomps
mov
jp
pop
add
cltd
sbb
push
test
rorl
pop
pusha
aaa
sub
cmpsl
add
mov
inc
ror
adc
xor
das
add
js
hlt
mov
aad
ret
push
ja
jg
mov
sbb
leave
sub
cmp
mov
pop
inc
xor
into
mov
mov
cmp
popf
fistl
pop
push
cmp
cmp
mov
pop
push
scas
stc
pushl
add
inc
ret
call
mov
shr
xchg
aam
push
mov
pop
and
cmp
jge
mov
leave
iret
mov
enter
sub
mov
dec
loope
imul
jmp
push
sti
cmp
mov
dec
jecxz
int
xor
lcall
fwait
mov
xchg
shll
add
mov
stc
decb
xchg
xchg
lcall
subb
pusha
mov
or
dec
out
cmp
cli
call
mov
xor
jbe
xor
mov
popf
dec
jns
and
fwait
lods
int
lcall
sahf
inc
std
add
es
push
addr16
jle
out
subb
insl
add
fsubrp
add
mov
lret
push
xor
inc
mov
mov
arpl
imul
addr16
pop
dec
add
pop
and
cmp
ret
mov
add
cmc
sub
jmp
loopne
repnz
sbb
jecxz
adc
scas
mov
dec
call
mov
icebp
inc
arpl
adc
push
inc
pop
popf
leave
sti
lds
outsb
scas
dec
xor
shll
mov
xor
xor
outsl
or
dec
mov
sub
jnp
insb
addr16
lahf
lds
lods
shr
enter
jo
out
push
jle
pop
clc
inc
pop
pop
repz
nop
lea
mov
aam
roll
js
lahf
jnp
jnp
addr16
imul
fwait
lock
insb
pop
rol
and
mov
scas
push
das
icebp
xchg
lods
aam
stc
cld
fmull
mov
jmp
dec
inc
imul
xchg
cmp
dec
pop
ret
fldcw
add
jmp
hlt
inc
rorl
sub
outsb
xchg
cmp
adc
lret
dec
sub
es
jg
inc
aam
cmc
or
les
inc
imul
shr
out
mov
dec
jbe
sbb
push
fwait
mov
out
stos
xlat
mov
sti
pop
xlat
scas
inc
ja
adcb
test
sub
stc
add
lods
mov
lods
ss
cmp
leave
xchg
nop
test
pushf
push
test
mov
int
out
aam
pop
stos
pop
je
add
xchg
sbb
add
xchg
cmpsl
loopne
push
and
aas
enter
mov
inc
push
es
mov
push
jb
mov
aad
add
xchg
sub
lret
ss
push
inc
pop
sbb
into
xchg
add
add
inc
int
xchg
pop
mov
add
sub
jle
mov
loopne
and
inc
movsl
pop
lcall
addr16
pop
mov
lea
int3
mov
loop
mov
in
push
jecxz
into
inc
imul
jno
xchg
inc
add
cmpsb
std
daa
cmpsb
fwait
out
sub
inc
popa
cs
cmp
inc
inc
jecxz
lret
dec
fs
push
adc
popf
push
dec
std
adc
jge
pop
inc
loop
push
mov
cmp
mulb
ficoms
inc
outsb
ss
ljmp
pop
jge
jg
push
push
popf
push
js
repz
div
addr16
cld
nop
in
sbb
fs
mov
or
outsb
shll
out
pushf
outsb
mov
fmuls
dec
mov
inc
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
jl
dec
pop
jl
icebp
xor
scas
ds
out
cld
adc
into
cli
jecxz
mov
lea
xor
sub
subl
push
adc
mov
fs
mov
roll
movsl
dec
jae
je
mov
or
decl
fldt
dec
xor
xor
push
jns
push
mulb
push
jae
sbb
jge
and
mov
clc
loopne
cmp
call
mov
rol
xchg
lods
xor
subb
or
cmp
jecxz
jle
mov
rcll
pop
cmp
mov
aas
cltd
adc
fsubs
dec
cmp
jb
push
call
sahf
ss
push
mov
mov
scas
ja
pop
xchg
or
jl
leave
clc
popa
repz
add
push
gs
daa
cmp
push
and
xchg
stos
testl
jo,pn
insl
icebp
mov
inc
jmp
idiv
ret
out
inc
int
inc
pop
adc
lock
outsl
ljmp
lret
pop
cmp
pop
ret
xchg
or
lret
stc
lahf
lods
add
pop
mov
lea
dec
mov
insb
and
jno
andl
aaa
test
aas
jge
in
mov
jle
arpl
std
sbb
sbb
fisubl
frstor
mov
dec
mov
cmpsl
cwtl
test
fwait
dec
push
or
jmp
in
or
sub
push
aas
jp
les
or
outsl
lods
inc
or
push
lret
das
sub
and
repnz
add
push
jno
out
fsubl
movsb
ret
cs
int
push
jo
sbb
push
mov
mov
outsl
stos
out
je
cwtl
xchg
mov
rcl
addl
lret
push
mov
jl
push
mov
mov
in
dec
pop
notl
xlat
pop
cmpsl
xchg
xor
jecxz
shrl
inc
leave
je
jg
dec
bound
sbb
and
fstpt
or
std
iret
mov
adc
pop
mov
sub
outsl
pop
xor
int
xor
and
sbb
sbb
mov
mov
lcall
sarl
in
movsl
dec
sbb
xchg
inc
xor
adc
subb
mov
xchg
mov
in
aam
push
push
bound
pop
xorl
sub
iret
mov
fldcw
cltd
pop
call
adc
adc
pop
js
clc
push
outsl
adc
repnz
lds
popa
addr16
mov
mov
aaa
jg
jecxz
out
lret
pop
sbb
mov
cmpsb
mov
adc
push
in
dec
pop
xchg
sub
lock
push
sti
lret
hlt
mov
lock
loopne
fisubl
jae
push
fnstcw
ret
movsb
movsl
iret
xchg
xchg
and
push
inc
aas
xlat
mov
jb
and
out
je
leave
fsub
push
shll
fcmovb
addr16
xor
fcomps
xor
jmp
cmc
mov
lret
mov
push
mov
adc
mov
addl
xchg
fildll
mov
lods
xor
daa
jno
clc
repnz
or
insb
pop
out
pop
and
push
fsubs
xor
adc
mov
add
mov
stos
add
fs
jnp
std
push
lret
lcall
mov
add
sbb
inc
jle
lea
pop
cmp
pushf
xchg
mov
cmp
xchg
sbb
ljmp
lods
dec
xor
xor
loopne
dec
or
leave
movl
ljmp
into
fiadds
sbb
pusha
mov
enter
and
out
pop
pop
push
sbb
inc
mov
testb
in
outsb
inc
cs
jmp
cli
sbb
mov
inc
jne
mov
mov
clc
xor
outsl
push
xchg
ljmp
test
jmp
and
xor
and
push
sbb
shl
xchg
mov
ds
sub
mov
setle
mov
mov
sub
sub
or
in
jp
loop
adc
add
cmp
rcrb
sbb
ss
mov
mov
xlat
mov
cmc
push
sub
pop
sub
fildll
arpl
sbb
jge
adc
stos
jl
movsl
mov
add
sub
add
mov
jns
cmpsb
popa
pop
xor
fldcw
dec
add
test
inc
sahf
mov
dec
pushf
jge
insl
gs
rorl
push
push
lds
sbb
sbb
mov
xchg
inc
cmp
xor
das
xchg
inc
jnp
cmpsl
mov
xchg
jae
sar
dec
sub
cmp
mov
shl
or
lret
push
xchg
mov
inc
dec
mov
outsl
scas
loopne
ds
or
ret
andb
or
ret
stos
in
mov
mov
and
mov
popf
pop
or
clc
in
hlt
movsb
fsubrs
xchg
mov
sub
lds
daa
xchg
decl
aam
lods
inc
repz
fdivrs
jl
ljmp
pop
dec
mov
cmc
jl
fisubs
adcb
add
xchg
fildll
in
scas
and
jnp
xchg
mov
js
shlb
int3
jbe
sub
rcr
ret
pop
inc
repnz
loop
pop
addr16
imul
add
lock
add
iret
cli
cltd
cli
sub
cmp
loop
lea
sbb
cmpl
and
dec
lods
mov
jae
lock
into
and
clc
xchg
loop
pop
and
out
push
leave
scas
or
push
in
cwtl
adc
daa
call
dec
pop
push
fcoml
push
jo
ret
mov
cwtl
das
xchg
pop
add
or
pop
stos
xor
clc
xor
out
mov
xchg
ret
xor
push
pop
push
xorl
out
push
xor
fwait
loopne,pt
les
jmp
addps
std
divb
inc
add
mov
aaa
mov
adc
jmp
mov
sbb
xorb
cmp
dec
mov
mov
in
shl
loope
fs
and
push
mov
and
adc
sub
adc
pushf
je
mov
mov
inc
pusha
mov
jns
mov
pop
xchg
pop
mov
sbb
sub
add
stos
ret
mov
std
je
ss
ja
push
push
dec
dec
bsr
imul
ss
jg
lcall
test
push
inc
lret
test
push
inc
sahf
nop
out
data16
mov
mov
dec
and
push
mov
xlat
xor
jp
xchg
fucom
xchg
sub
aas
sub
ret
stos
lods
loope
mov
shlb
call
xlat
mov
popf
or
mov
inc
inc
and
pop
push
mov
sti
sub
push
push
lods
lcall
ret
les
aam
popf
inc
xlat
mov
cmp
lock
or
cmp
add
pushf
sahf
call
push
enter
mov
aas
cmp
mov
adc
inc
ljmp
push
icebp
adc
cmp
shrb
inc
or
loope
ja
sub
mov
xchg
lea
leave
arpl
fbstp
inc
sub
or
xchg
mov
pop
fwait
popf
pop
or
xchg
sub
scas
inc
xor
shrl
bnd
xor
sbb
sahf
xchg
imul
sub
cmpsl
mov
mov
cmp
fwait
in
adc
mov
iret
inc
imul
imul
sub
in
sahf
sbb
inc
adc
mov
movsb
sahf
push
scas
movsl
aaa
lods
pusha
jnp
dec
out
xchg
add
addr16
js
mov
ret
test
cli
ret
hlt
push
sahf
mov
xor
jge
loop
flds
dec
imul
mov
mov
popf
sbb
pop
xchg
enter
lods
push
mov
add
outsl
cld
fldt
mov
inc
call
aaa
mov
or
bound
jmp
or
mov
or
mov
out
aam
jno
ret
adc
adc
jno
xor
sub
adc
xor
jne
stos
dec
pop
aas
pop
sbb
iret
inc
hlt
incl
xor
pop
mov
adc
in
aad
fwait
call
into
mov
or
fildl
xor
ds
jmp
cli
jecxz
xchg
cmp
mov
pop
xchg
mov
dec
rolb
or
dec
int3
and
jge
icebp
ljmp
mov
stos
cmpl
sub
shrl
loopne
ret
lahf
push
push
inc
stc
push
je
lock
fdivl
sub
sub
icebp
xrelease
insb
inc
int
mov
test
push
jg
fcomi
mov
xor
adc
pop
insl
xchg
imul
insb
mov
fwait
inc
std
out
fnstcw
sub
mov
adc
add
imul
outsb
jbe
leave
ss
cmpsb
nop
lods
and
push
imul
jo
push
inc
insl
pop
inc
adc
cmp
gs
jne
dec
xor
add
lret
jl
add
ds
imul
ds
std
sti
sarb
test
jl
fiadds
sbb
mov
xchg
imul
mov
daa
test
mov
push
mov
aaa
push
loop
fidivl
stc
adc
jle
inc
out
outsb
pop
jbe
inc
imul
add
xor
mov
or
sub
cmp
add
sub
push
mov
addr16
sub
mov
inc
mov
mov
adc
and
or
xor
push
add
popf
xchg
in
mov
pop
sub
or
imul
or
mov
add
xchg
xor
jae
xchg
cs
cld
sbb
andb
xchg
std
and
lods
and
shrb
scas
test
lret
and
adc
je
fadds
inc
sub
add
popf
push
and
lret
imul
add
push
dec
out
xchg
mov
xchg
inc
shrl
fs
push
mov
int3
aam
dec
mov
pop
xor
jp
xor
lret
call
mov
pushf
fsubrl
imull
push
xor
add
sub
cmp
movsl
xchg
push
jno
push
or
add
gs
and
mov
stos
lods
dec
inc
addb
aad
jg
fsubr
js
sti
add
push
ljmp
cmp
daa
les
stos
cli
cld
jg
mov
cmp
and
cmp
setg
movsl
ret
inc
and
adc
in
dec
jl
orb
xchg
pop
push
dec
and
push
xor
ficoml
mov
mov
mov
push
fucomp
clc
mov
mov
shl
stc
pop
xor
clc
sub
fadd
add
cli
rorb
mov
push
outsl
push
sub
cld
das
iret
xchg
jmp
cmpsb
fdivrl
xchg
mov
inc
sbb
mov
sub
and
cmp
das
sub
in
and
cli
xchg
sbb
mov
push
rorb
pop
cltd
sub
sti
loop
call
test
push
mov
pop
mov
inc
arpl
in
jo
test
inc
fldenv
lcall
shl
adc
sbb
nop
cmc
bound
sbb
cmp
mov
aaa
xchg
ud0
dec
push
jne
pop
add
popf
scas
inc
popf
movsl
mov
cmovl
imul
lock
pusha
inc
adc
pop
cmpb
adc
movsb
cmp
dec
push
popf
inc
std
imulb
fmulp
xlat
jae
mov
pop
jle
add
shrl
sub
loope
icebp
pop
mov
scas
fisttps
aam
inc
addr16
lret
jne
sbb
movsb
adc
push
pop
popf
popf
into
or
cmpsl
sub
mov
xor
int3
ljmp
add
mov
pop
shll
pop
sbb
addr16
pop
xchg
loopne
sahf
sub
sub
adc
lods
mov
lahf
cmc
in
mov
lds
movsb
adc
cs
add
lcall
les
js
nop
cld
jns
es
or
scas
mov
add
arpl
or
or
inc
or
aad
xchg
test
cs
adc
rclb
enter
push
js
cmp
gs
fnstsw
push
movsl
pushf
adc
scas
jb
enter
shll
xchg
jae
xor
repnz
mov
pause
sahf
cmp
fistpl
mov
push
cmc
mov
rorb
add
pop
add
push
jne
sub
fidivrs
pop
insb
in
mov
lds
jg
idivl
xor
jbe
call
dec
lock
mov
testl
mov
gs
out
ljmp
sahf
xor
fisttps
test
leave
iret
jl
or
inc
add
sti
dec
lea
push
mov
and
loope
clc
add
arpl
xchg
jbe
pop
movntps
sub
pop
data16
push
dec
fdivrs
mov
mov
rorl
test
add
sbb
xor
out
sbb
loopne
cmp
testb
dec
sbb
sub
int3
sbbb
lea
in
lea
sub
jne
bndldx
outsl
fs
xchg
in
loopne
cmp
sbb
arpl
loope
mov
popf
xchg
inc
mov
lcall
add
insb
mov
fistpl
jecxz
inc
jl
or
daa
cmp
scas
xlat
cld
jne
aas
sbb
push
push
push
jo
cmp
pop
mov
mov
sarb
arpl
lret
sbb
cmc
pushf
dec
enter
hlt
and
sbb
cli
aam
iret
popa
lahf
xor
enter
or
repnz
sub
or
js
pop
add
outsl
mov
and
mov
fsubl
cmp
jne
lret
cmpsl
xorl
add
jge
xchg
jnp
ss
mov
fdivr
ret
test
mov
or
or
rorl
push
xor
test
cli
or
jg
sahf
xor
sub
mov
ja
cmovl
sub
mov
adc
adc
mov
mov
add
push
add
jnp
xchg
xor
mov
mov
cmp
ss
push
aam
sub
jl
call
push
scas
and
sub
jge
ss
cmp
scas
in
lea
call
jae
mov
daa
leave
cmc
xchg
xor
clc
les
xchg
gs
xchg
push
lods
repnz
js
imul
popl
sbb
sbbl
icebp
cmp
fistl
lods
push
cmp
or
out
insl
pusha
jo
push
adc
push
aam
pop
mov
jl
loope
sbb
push
js
sbb
jo
lds
inc
jl
ficoms
lret
sbb
cmpsb
leave
jmp
ret
and
fcmovu
xchg
sbb
mov
mov
lret
xor
jne
mov
inc
out
or
pop
lods
movsl
iret
fs
push
testb
ret
sbb
sub
pop
popa
cli
sti
repz
mov
insl
mov
mov
addr16
push
int3
adc
add
pop
dec
sub
and
cmpsl
pop
outsb
arpl
mov
adc
fbstp
inc
push
jne
xor
add
sub
mov
out
sbb
test
pop
test
push
xor
dec
icebp
or
lcall
add
jmp
gs
clc
push
int3
test
jne
mov
push
or
xor
dec
fstpt
mov
rorl
dec
mov
enter
cmp
hlt
pop
in
pop
pushl
push
mov
inc
daa
and
jmp
jns
frstpm(287
adc
lcall
lret
ret
stc
push
pop
push
call
sbb
lret
jg
orl
mov
insl
add
pop
ud2
jno
ror
add
fiadds
cmpsl
push
addr16
dec
push
inc
and
mov
mov
pop
jmp
jae
xchg
les
push
push
fldl
iret
out
out
mov
lock
xorl
push
dec
fstpt
scas
testl
push
hlt
cmc
lcall
add
test
fs
fwait
mov
sub
and
and
xor
mov
out
std
mov
push
push
jno
xor
mov
push
push
loopnew
or
lret
pusha
test
jb
inc
in
inc
add
adc
aam
ljmp
dec
dec
or
push
push
loop
inc
mov
mov
fwait
movsb
mov
fwait
dec
inc
xchg
pop
pushw
cmpsb
cmp
hlt
and
sbb
sbbl
popw
cwtl
mov
fptan
and
jns
rolb
inc
out
xchg
adc
adc
or
cmpsl
rcl
out
stos
sti
imul
lahf
in
in
lcall
lods
pop
ja
mov
push
cmpsl
mov
in
jnp
push
ja
scas
lods
dec
fcoml
xor
cs
ss
les
or
cmpsl
mov
loopne
adc
sub
mov
or
sbb
stc
jg
adc
sbb
sbb
xchg
shll
mov
clc
lock
push
call
cmp
movsl
dec
jo
lods
add
xor
xor
ret
daa
fstps
xchg
and
std
stc
cmc
outsl
sub
ja
ret
fbstp
jne
cwtl
nop
ss
sahf
lods
jno
iret
cmp
mov
jl
xchg
and
ret
ljmp
and
lods
cld
pop
adc
mov
mov
pop
adc
or
fimull
int3
jno
std
xlat
lahf
bound
test
fwait
push
mov
push
xchg
call
cmp
jl
repnz
fstl
push
mov
shlb
sbb
out
xor
cli
or
xchg
mov
shrb
cmp
push
push
pop
pop
lret
add
mov
sbb
fcoml
cltd
jmp
mov
sbb
xor
push
sub
cmp
in
jg
dec
jo
xor
popa
pop
sbb
loop
movsb
aas
ret
cmp
subl
push
jmp
divb
aas
out
lea
inc
mov
inc
jbe
dec
fxch
in
ret
cli
adc
dec
ljmp
cmp
push
out
adc
mov
sbb
xor
mov
inc
das
xor
jae
and
mov
cmp
loope
fsubl
add
call
mov
push
sbb
sahf
lock
xchg
mov
aam
sbb
into
sub
inc
mull
addl
pop
jns
push
daa
inc
and
cmp
divb
mov
icebp
push
mov
mov
dec
xlat
inc
xchg
sbb
xlat
mov
mov
cwtl
jae
cli
mov
xchg
lds
jb
sub
rorl
lret
adc
fstl
je
sbb
test
data16
pop
cli
insl
sub
and
fwait
dec
dec
filds
fwait
lret
push
pop
inc
ficomps
mov
adc
jg
pop
les
mov
mov
cltd
and
aam
add
jnp
pop
les
fucomp
xchg
jge
outsl
fdivl
add
jp
mov
mov
xchg
lret
inc
testl
out
jl
repnz
sbb
clc
jo
jne
add
sbb
ss
orb
lret
push
add
xchg
test
jae
or
and
scas
xlat
scas
or
jnp
jg
and
dec
mov
mov
sti
fildl
sti
or
scas
mov
mov
jbe
rcrb
fwait
outsl
sub
es
push
pop
adc
inc
lcall
and
cmc
outsl
xchg
and
lea
mov
addr16
cwtl
psubsw
pop
movsl
adc
push
sbb
cmc
scas
out
std
cltd
aam
mov
inc
jmp
loopnew
mov
push
rolb
jno
mov
add
dec
les
aas
dec
js
pop
imul
call
pop
mov
paddusb
push
dec
clc
inc
enter
imul
ljmp
mov
mov
hlt
scas
sti
jmp
inc
adc
jecxz
ja
lods
mov
aad
cs
cmp
fildll
xchg
out
std
sarb
mov
sub
sub
shr
mov
decb
push
iret
dec
lock
std
xchg
pusha
lods
int3
push
insb
or
mov
leave
xchg
daa
jge
les
popa
mov
insb
push
push
popa
pop
movsl
jp
and
push
outsb
add
jb
pop
push
inc
xchg
das
and
mov
inc
inc
mov
lcall
xor
lcall
xor
push
mov
push
mov
ret
mov
cmp
push
imul
scas
pusha
jb
dec
repnz
sbb
adc
cmp
push
dec
and
dec
xchg
pop
mov
gs
repz
pop
loop
or
sub
jno
aam
js
jne
dec
mov
call
dec
les
rolb
arpl
aaa
scas
mov
iret
in
mov
pop
rclb
je
subb
test
imul
out
sbb
fdivr
inc
inc
int3
in
fs
dec
nop
push
adc
es
std
xchg
pop
out
scas
data16
xchg
mov
arpl
es
cmp
outsb
sahf
das
xchg
xlat
shll
jno
int3
xchg
adc
daa
lret
stc
or
mov
pop
lahf
fcompl
aas
adc
xchg
test
std
push
or
mov
mov
enter
xchg
arpl
ret
test
push
loop
push
fidivs
mov
xchg
mov
mov
in
jle
fs
stos
scas
push
test
pop
mov
pop
icebp
pop
cmp
mov
pop
sahf
lret
aaa
mov
rcl
aad
fidivs
inc
xor
pushf
ja
out
je
sub
dec
adc
pushf
mov
and
jmp
xchg
sub
out
jge
aam
loop
aam
out
in
into
bound
popf
idiv
lret
and
fs
popa
les
subl
arpl
ret
inc
arpl
out
sbbb
rclb
ss
arpl
mov
lock
out
lcall
cmc
fldcw
jle
adc
mov
lea
mov
cmp
cmc
mov
loop
sahf
stos
adc
jb
scas
lods
cmp
mov
pop
adc
lock
adc
pcmpeqd
bound
sbb
cmpsl
stc
push
push
sub
pop
adc
mov
mov
dec
inc
iret
pop
lret
lock
ror
ss
lds
fwait
inc
adc
mov
call
or
int3
pop
pop
xor
in
popa
and
dec
or
pop
xchg
mov
inc
lret
xchg
fmul
or
mov
xchg
and
jg
or
mov
fdivrs
data16
xchg
pop
shrl
nop
dec
jno
icebp
mov
aad
scas
and
pusha
sbb
test
and
xchg
mov
ret
push
cmp
shl
jle
ss
stos
mov
ret
xchg
dec
jb
xlat
pop
or
xchg
pop
aam
jno
push
rclb
adc
in
frstor
push
push
and
push
shll
dec
jecxz
sub
mov
int
and
sub
xchg
push
mov
movsb
cmp
pop
adc
mov
test
push
mov
xchg
and
into
stos
or
mov
and
sub
loop
cmp
and
add
push
xchg
jnp
rolb
mov
sbb
fldt
mov
stos
and
hlt
loope
rolb
mov
push
or
jno
jle
lcall
shrb
popf
and
icebp
inc
inc
imul
xchg
mov
add
std
fcmovnbe
mov
mov
push
adcb
outsl
jmp
cltd
sti
jae
and
jnp
push
pop
mov
push
outsl
pop
aam
test
outsl
repz
push
and
scas
imul
sub
inc
loop
mov
sbb
shufps
add
imulb
pop
bound
out
mov
pop
mov
sub
aad
mov
out
shl
rcrb
sbb
les
outsb
and
push
cmc
sub
mov
and
pop
fs
dec
push
cmp
jle
hlt
pop
pop
repz
aad
jnp
inc
push
or
ja
out
mov
add
orl
jle
outsl
enter
push
sbb
xchg
add
fcomps
mov
inc
or
lods
mov
loop
mov
insl
jge
mov
and
shlb
into
sti
push
fs
dec
inc
adc
push
es
icebp
nop
mov
or
jge
frndint
add
cs
cltd
mov
xchg
jae
test
mov
sbb
out
mov
adc
mov
mov
dec
les
mov
xchg
inc
and
jnp
movsl
int3
lock
push
lcall
aad
pop
cmp
arpl
mov
sub
cmc
hlt
dec
jo
jp
cltd
fwait
xor
inc
rclb
sarl
js
sbb
inc
pop
cmp
sti
scas
into
or
lcall
cmp
test
mov
js
ret
mov
xor
dec
shlb
inc
cmc
mov
pop
dec
or
adc
sub
lret
push
inc
push
cmp
adc
ss
ljmp
dec
sub
out
imul
hlt
cmp
ret
aam
enter
pop
mov
xchg
bound
aad
aaa
jnp
les
mov
mov
adc
mov
aam
insb
sahf
adc
adc
sub
gs
cmp
mov
lods
imul
pop
outsb
jle
inc
cli
add
adc
push
adc
push
outsb
mov
jne
sbb
aas
mov
push
cld
pop
mov
and
jl
sar
es
imul
loopne
test
or
sbb
nop
js
mov
aas
nop
jge
outsb
adc
in
shrb
cmp
test
sahf
mov
mov
mov
je
cmc
inc
push
xchg
push
xor
push
xor
cmp
mov
sti
lcall
and
mov
jl
inc
mov
fsubr
jbe
aad
in
cmc
inc
dec
mov
rorl
test
push
mov
push
scas
popf
bound
sbb
cltd
sbb
dec
dec
inc
cmp
sub
shll
js,pt
push
addr16
adc
in
sbb
mov
mov
subl
lcall
push
mov
or
mov
stos
mov
mov
mov
loope
insb
push
mov
and
fnstcw
cmp
or
jno
cwtl
lods
push
std
repz
xchg
outsl
xor
xchg
in
xchg
cwtl
or
enter
subl
inc
imul
xchg
sarb
rorl
lcall
cmp
and
inc
cwtl
cmp
jae
or
mov
add
jg
inc
pop
mov
scas
pop
out
jg
pop
repz
inc
outsl
mov
cmpsl
cld
adcl
fisubl
jp
std
lcall
repnz
jnp
scas
scas
push
das
dec
mov
daa
enter
jns
imul
int3
pop
rcll
stc
push
lret
ss
out
daa
jge
shrl
fimull
arpl
inc
add
adcl
orb
test
mov
dec
xor
data16
pop
pop
rclb
and
lods
sub
dec
push
out
cld
add
ja
test
jg
xor
mov
or
push
add
jb
push
add
xor
ljmp
pop
arpl
or
and
add
xor
test
nop
sub
rcll
adc
fisttps
daa
inc
insb
daa
cltd
mov
or
sbb
nop
mov
mov
into
and
imul
mul
mov
orl
rcll
push
je
sub
insl
pop
pop
cmp
sbb
loopne
dec
pop
out
jge
jmp
push
and
mov
inc
add
jmp
fiaddl
sbb
dec
int3
push
jecxz
dec
sub
inc
ret
cltd
add
dec
xor
dec
outsb
imul
repnz
in
je
scas
fwait
pop
sbb
pop
mov
push
divl
es
mov
repz
inc
cltd
scas
and
daa
sbb
lcall
lret
mov
cmp
push
xor
dec
push
repnz
je
out
pop
pop
push
inc
mov
stos
mov
idivb
lock
push
xor
loopne
mov
enter
lock
movsl
ljmp
mov
lret
neg
adc
push
pop
sti
dec
ss
pushf
enter
adc
push
mov
mov
scas
mov
dec
mov
popa
fstpl
jg
xchg
sbb
arpl
xor
loopne
imul
in
cmp
in
jnp
or
mov
je
push
popa
add
xchg
pushf
mov
in
pop
daa
push
pushf
jle
jecxz
mov
dec
ljmp
mov
pop
addb
cmpsb
stos
ds
stos
sub
sti
dec
lret
mov
jae
lds
adc
int3
sar
aam
sbb
sbb
push
xchg
cmp
sub
pop
xlat
mov
dec
shl
mov
sub
scas
xchg
inc
rorl
mov
cmp
mov
aad
int3
mov
pop
cwtl
xchg
and
pop
mov
mov
std
mov
popf
out
fimull
cmpsl
out
lcall
fsubrl
inc
dec
scas
repz
mov
sub
les
mov
ret
jns
or
xlat
xchg
add
cwtl
jno
and
rcll
aaa
addr16
xchg
dec
xchg
imul
sub
aaa
enter
inc
pop
sbb
fucomip
mov
xchg
sbb
ret
shr
in
jbe
inc
adc
inc
cmpsl
adc
jno
adc
pop
mov
xchg
add
pop
xor
ret
outsl
sbb
sub
shr
or
pop
test
pop
negl
int
pop
pop
dec
sti
add
mov
inc
add
dec
and
add
mov
sbb
mov
cmp
pop
jl
dec
mov
mull
fwait
inc
das
je
pushf
push
bound
mov
xor
cmp
or
mov
pop
ja
fstpl
mov
mov
fildl
inc
push
rcll
insl
addr16
inc
pop
xchg
imul
popa
mov
icebp
addb
and
push
sahf
into
test
dec
cmp
imulb
cmp
mov
xor
mov
push
xor
cmp
add
xor
cmp
or
fdivrs
sbb
pop
xchg
and
test
dec
cli
mov
mov
xchg
inc
xor
js
psubb
cli
movsl
inc
or
or
repz
xchg
bound
add
jl
dec
dec
stos
stc
push
inc
push
cmpsl
movb
mov
dec
int
outsb
movsbl
aad
fadds
out
or
lret
int
addb
hlt
xchg
push
inc
test
jg
pop
pop
les
xchg
and
gs
out
pop
pop
push
mov
push
cmp
adc
mov
lea
flds
mov
fsubrl
cli
jge
sti
std
insl
adc
sbb
sbbl
push
or
push
dec
cs
or
movsb
mov
sub
push
imul
bound
stos
popa
jo
mov
xchg
fisubl
dec
pop
jge
mov
inc
daa
jle
mov
pop
insw
popf
popf
push
push
add
lret
add
das
loope
jp
and
cmpsb
cwtl
mov
iret
sbb
call
insl
fistps
loopne
test
jl
jmp
iret
shlb
test
pop
adc
jno
add
shl
add
aas
push
cmpsl
mov
mov
adc
gs
xor
cltd
mov
loopne
cmc
push
fwait
lahf
mov
rcl
cld
sahf
stc
out
faddp
push
fstps
fstps
and
adc
sarb
std
adc
add
push
cmp
inc
adc
sub
adc
ret
push
add
jb
xor
shrb
pop
jne
xchg
clc
xorb
cmp
xchg
aad
add
cmp
cltd
int
mov
insb
aad
jno
sub
inc
daa
jnp
cmp
push
out
stc
int3
notb
or
addl
sbbb
lods
stos
push
cld
sbb
inc
test
popf
dec
repz
or
sti
xor
sub
ret
enter
sub
aam
popa
lret
aad
call
or
mov
jecxz
das
lds
mov
sbb
scas
mov
ss
xlat
xor
pop
sub
in
and
insl
jl
mov
scas
scas
arpl
mov
inc
dec
pushl
sub
push
jae
push
xor
xchg
cmpsb
cmp
jae
push
ret
mov
sub
dec
xor
adc
mov
lret
mov
adc
fwait
inc
aas
add
or
pop
add
add
dec
das
push
in
push
pop
xchg
sbb
mov
jge
inc
or
sar
test
inc
andb
push
inc
fildll
dec
leave
inc
xchg
testb
jbe
pop
sub
in
or
aas
in
or
adc
sub
fildl
jno
fsub
movsb
xchg
mov
rcll
jge
mov
lcall
inc
mov
sbb
push
out
mov
mov
dec
inc
loope
shl
cwtl
mov
les
lds
shlb
cmp
stos
sti
cmpsb
ficomps
ret
sub
jle
pop
sub
fcompl
jge
jne
sbb
cmp
mov
mov
push
mov
xor
and
std
pop
jmp
hlt
or
shrl
xchg
iret
cli
cltd
mov
push
dec
sub
lcall
xor
in
lods
push
sbbb
jle
or
fcmovnb
push
lods
jns
fwait
js
movsl
xor
stc
fists
adc
xor
stc
mov
clc
or
inc
ret
and
adc
dec
mov
adc
jno
loop
dec
movl
lahf
pop
jl
pop
and
xor
mov
mov
jle
pop
xchg
repnz
in
iret
std
adc
xchg
jnp
push
out
jne
inc
xchg
sbb
fisubrs
cmp
idivl
mov
and
cs
jge
jae,pt
mov
in
xchg
push
push
dec
jnp
insl
and
aam
outsl
cmp
or
nop
out
mov
and
inc
int3
addl
jbe
mov
xchg
mov
shlb
fwait
xor
and
lahf
jne
jae
addb
dec
jae
das
sbb
pop
push
inc
jne
test
and
ss
out
ds
imul
adc
jmp
gs
bnd
add
aam
stos
xor
lret
inc
sub
andl
mov
dec
out
fwait
outsl
xor
lods
bound
rclb
push
pop
xor
dec
and
and
dec
and
cltd
sub
add
mov
fninit
in
and
adc
decb
inc
insl
pop
leave
mov
and
inc
fwait
jno
ficompl
cmp
daa
ret
sub
addr16
scas
jo
ja
iret
jne
out
mov
out
iret
dec
pop
mov
hlt
int3
pop
push
and
push
mov
into
pop
lahf
xchg
push
andl
dec
ds
daa
rcrl
aaa
pop
scas
aas
cmp
ja
inc
std
in
les
cld
xchg
icebp
pop
ja
sahf
sbb
mov
lret
jb
jno
popf
cmp
adc
outsl
outsl
push
push
stos
fisttpl
pop
sbb
mov
sti
pop
repnz
or
ret
fadds
popa
pushf
arpl
stos
mov
sbb
cmp
xchg
xchg
movsb
jg
add
dec
sbb
mov
xchg
lock
dec
test
leave
stos
rcll
xor
in
sbb
xor
cmp
imul
in
or
int
aad
or
and
fcoms
mov
in
jle
dec
cmp
movsb
shr
repz
cmp
jae
push
sub
daa
adc
xor
or
ret
mov
jns
mov
adc
dec
stos
stos
cmp
cli
cmpsl
enter
push
pop
cli
stos
mov
repz
cmpsl
mov
mov
out
mov
cmp
mov
push
or
test
dec
dec
fadds
idivb
out
inc
push
js
movsb
js
shrl
fld1
and
sbb
xchg
dec
push
jno
cmc
test
inc
mov
xchg
and
jnp
cmpsl
xor
enter
sub
cs
mov
pop
dec
dec
pushf
sbb
mov
mov
mov
cltd
mov
mov
es
push
fbld
xor
add
jecxz
sub
mov
jb
and
cmp
xchg
jnp
jg
imul
fcmovnb
mov
fisubs
inc
or
pop
loop
mov
lods
cmp
add
push
sbb
cmp
pop
fdivrl
mov
mov
dec
cmp
daa
inc
mov
xchg
popf
xchg
pop
shr
jg
popf
mov
mov
fdivs
popf
cs
or
movsb
mov
sub
xor
push
stc
sub
loop
mov
pop
mov
xor
hlt
arpl
nop
cmp
mov
ret
orb
stos
pop
popf
mov
lcall
xchg
inc
or
stc
mov
mov
mov
xor
arpl
add
mov
movsl
hlt
mov
or
pop
inc
add
xlat
sub
inc
stos
movsb
add
js
adc
lret
bound
js
mov
or
jmp
mov
or
pop
sub
push
lea
fiadds
mov
das
inc
push
jmp
scas
fidivrl
push
inc
loope
cmpsb
ljmp
fxch
mov
pop
fiaddl
std
push
shlb
xchg
bound
xchg
jge
lds
or
loop
rorb
pop
mov
cli
int3
les
pop
mov
inc
loop
mov
add
addr16
vpmaxub
or
mov
mov
std
xchg
push
lahf
mov
out
sbb
sti
mov
enter
repnz
xchg
aaa
sbb
sbb
push
insl
mov
jle
mov
mov
xchg
fmul
outsb
mov
out
js
or
scas
mull
dec
inc
lret
popa
jne
test
shrl
lods
sbb
mov
loop
cs
and
jp
push
ljmp
xchg
jle
ds
mov
out
jge
mov
shll
mov
mov
inc
loope
icebp
xchg
lahf
inc
mov
movsl
popa
std
stc
jns
mov
push
cmp
mov
decl
imul
mov
push
movsl
sarl
add
pop
inc
stc
adc
in
and
stc
dec
xchg
in
jmp
lret
pushf
iret
idivb
out
inc
lret
push
adc
pop
inc
fstp
fnsave
push
testl
andb
test
push
das
dec
enter
xchg
jmp
inc
pop
aas
pop
cmp
inc
sbb
sbb
mov
and
ret
cmp
sub
lds
adc
test
fcoml
jmp
dec
sub
imul
xor
xor
hlt
dec
mov
xor
pop
fisubs
mov
loope
sbb
push
mov
cmp
lcall
pop
jl,pt
push
imul
call
sbb
aam
enter
mov
imul
aam
or
add
mov
jecxz
repnz
es
int
pop
jae
fldl
das
mov
loope
mov
push
jg
mov
adc
and
int3
cwtl
loope
pop
mov
xlat
sbb
leave
sub
xchg
cmpsl
movsb
js
orb
or
mov
test
mov
xchg
pop
aam
das
sub
aas
hlt
jnp
or
enter
loope
cmp
add
outsb
aad
inc
pop
inc
jl
mov
call
pop
and
pop
cmp
jnp
test
and
and
push
jno
rorl
pop
or
mov
jae
std
cmp
mov
stos
cmp
mov
dec
push
and
inc
rorb
xor
pop
cmpsb
sub
xchg
lcall
imul
outsl
sbb
xor
andl
out
in
out
or
adc
movsl
imul
pop
push
out
mov
sbb
mov
stos
nop
repz
cli
pop
lcall
js
adc
cmpw
mov
stc
movsl
mov
shll
mov
mov
push
and
xlat
insl
mov
pusha
aad
insb
mov
jae
imul
jb
fmuls
jbe
lods
in
in
push
fwait
enter
int3
jno
push
ret
cs
mov
sbb
cmp
mov
inc
fldl
mov
cmp
test
mov
sbb
ds
mov
std
stos
jge
sbb
addr16
fisttpll
mov
push
mov
cmp
scas
mov
test
pop
dec
pop
or
jns
jge
jae
shlb
pusha
stos
lds
xchg
mov
in
enter
and
orl
out
jno
stos
xor
pop
jmp
cmp
shl
push
mov
dec
dec
xor
fsubs
test
and
ja
stos
inc
jno
sbb
adc
out
adc
adc
sbb
and
jns
dec
or
cltd
in
sub
fstpl
cmc
pushf
outsl
push
or
xchg
add
pop
es
sbb
sub
or
test
jne
les
cmpl
aad
mov
int
inc
repnz
push
das
out
iret
out
ds
mov
jp
cmpsb
fisttps
ret
adc
sbb
xor
mov
ljmp
jecxz
mov
cmp
fcompl
xor
xchg
outsb
mov
inc
test
lret
sahf
sarl
mov
mov
cmp
js
loope
push
add
sub
lcall
in
and
cli
movl
inc
scas
jmp
xchg
cmp
jnp
push
xchg
fs
test
mov
adc
xchg
jge
sbb
adc
jo
pop
enter
shl
jecxz
std
jbe
sahf
cwtl
fisubrs
pop
jge
repnz
cmp
or
and
sub
into
mov
mov
cmp
pop
lcall
dec
in
icebp
aam
lds
pop
xchg
cmovl
cli
sub
push
into
iret
ficoml
jmp
testb
and
xchg
iret
xor
inc
mov
mov
testb
stos
mov
cmc
push
mov
pop
imul
jno
popf
sbb
xchg
dec
add
jmp
aaa
adc
popf
add
int3
popa
out
adc
pop
sub
push
or
sbb
xor
aaa
ljmp
jnp
sbb
inc
imul
lods
inc
or
jae
addr16
std
dec
test
mov
popa
mov
outsl
insb
js
out
mov
jle
or
add
inc
pop
pop
xor
jmp
xchg
rcr
and
nop
movsb
jl
sahf
pop
pusha
sbb
out
jne
int
insb
arpl
gs
add
je
push
push
gs
pop
and
pop
or
cmp
arpl
out
jns
jmp
push
fabs
and
mov
inc
loope
call
xlat
decb
fdivrl
push
sbb
fistpl
loopne
lock
inc
adc
mov
mov
mov
mov
dec
shlb
pop
das
push
notb
xlat
jmp
jo
sub
test
jne
in
movsl
in
frstor
or
jl
jns
stc
or
pop
mov
lods
mov
mov
inc
cltd
lock
bound
dec
xchg
aas
fadd
sbb
ret
dec
lret
in
iret
and
push
xor
jge
data16
pop
rclb
add
dec
mov
dec
xorl
negb
and
sbb
mov
cwtl
mov
lahf
fdiv
mov
insl
xchg
fs
fdivrl
pop
icebp
ljmp
stc
jl
fs
dec
dec
lock
stc
pop
aad
rcll
sub
jne
rorl
sub
fidivl
dec
xchg
ret
inc
mov
pop
insb
scas
push
push
or
adc
xchg
stc
inc
cmp
sbb
sub
lods
and
ljmp
push
xchg
ficompl
mov
mov
notl
xchg
mov
mov
movsl
push
or
sub
in
iret
daa
jno
ja
mov
stos
cmp
js
sti
push
shll
divb
cmp
daa
pop
dec
adc
mov
je
cmpsb
inc
pop
cltd
jbe
dec
into
inc
dec
aad
lock
out
or
add
xlat
dec
movsl
push
imul
leave
lret
add
fnstenv
ja
lret
push
adc
sbbl
push
cmp
inc
mov
jo
imulb
shrl
dec
call
sub
cmp
push
mov
pop
stc
dec
jbe
lods
adc
jbe
jbe
sbb
js
lcall
lahf
subl
sub
mov
cwtl
fstpl
push
ds
adc
mov
cwtl
adc
jbe
and
roll
inc
pushw
iret
lds
jmp
cmp
orl
mov
outsl
adc
repz
das
cmp
les
ds
jnp
pop
shlb
jl
sub
arpl
jbe
in
adc
cmc
mov
mov
adc
or
pop
test
pop
jb
fistpl
ja
and
mov
gs
mov
pop
add
enter
xor
repz
xor
sti
cmp
ss
cmp
jo
mov
and
xor
xlat
out
xor
pop
rol
sbb
outsl
popl
jmp
sti
xchg
pusha
stos
fwait
movsb
pop
dec
clc
jno
mov
push
mov
pop
push
movsl
shll
bound
sbb
rcr
lds
inc
mov
arpl
sub
cmp
sbb
js
out
int
dec
inc
adc
hlt
push
sahf
mov
cli
sbb
sbb
xchg
xchg
and
or
fidivs
dec
or
in
inc
fmull
dec
inc
loop
int3
andl
cs
adc
cmc
gs
sub
idivb
cmc
outsb
insl
push
adc
bound
popa
mov
jns
pop
fidivrl
imul
fnstcw
movq
iret
clc
push
xor
mov
push
leave
mov
out
in
sbb
in
jg
out
pop
jg
icebp
loope
dec
dec
cmpsb
sarl
test
mov
mov
rclb
nop
psadbw
xchg
mov
cmpsl
lock
sbb
movsb
lret
xor
test
sub
gs
mov
popf
jnp
ds
mov
mov
adc
xor
in
test
jmp
stc
inc
adc
and
fsts
cltd
adc
cmp
mov
aad
push
and
lret
push
inc
and
sbb
test
repnz
mov
in
xor
in
arpl
cs
pop
push
rcrb
jbe
outsb
and
jno
pop
sub
push
fmull
pop
aaa
push
add
lods
jno
cmp
jl
data16
mov
dec
adc
xor
fistpll
lods
imul
lods
dec
enter
dec
and
in
out
dec
adc
int3
fwait
lret
jae
mov
dec
pop
xchg
loop
loop
fbld
mov
int
mov
and
addl
hlt
loope
imul
repnz
scas
movl
pop
adc
testl
daa
or
dec
inc
shll
in
pop
fistpl
sub
xchg
repnz
movsb
pushf
ljmp
mov
push
dec
sbb
add
inc
adc
int
insl
cmp
gs
add
out
push
xchg
subb
iret
push
movsb
push
adc
xor
add
lcall
fidivl
test
fcmovbe
adc
or
push
dec
shll
call
or
pop
stc
or
add
mov
testb
pop
xorb
mov
ret
sub
xor
and
setle
nop
popa
xor
mov
inc
and
out
lcall
jb
push
fwait
cmp
pop
sub
neg
mov
pop
stc
imul
mov
push
jge
xor
andb
inc
cld
fidivrs
lcall
sub
std
mov
xor
loopne
pop
sbb
mov
je
jecxz
stc
cltd
add
pop
jmp
leave
fwait
mov
pushf
incb
add
clc
sub
mov
pop
fcmove
pop
call
test
pusha
xlat
ret
pop
daa
adc
loope
repnz
ljmp
test
out
jmp
or
or
int3
in
test
mov
jnp
mov
mov
mov
jno
test
or
jle
push
testl
fwait
xchg
enter
sbb
mov
sub
cmp
in
push
pushf
ja
inc
pusha
pop
and
or
out
shrl
pop
aam
loope
mov
dec
mov
ss
in
out
jns
loop
jmp
fisttpl
hlt
jecxz
and
mov
mov
lret
pushf
cmp
ret
mov
dec
add
xor
out
into
xchg
fcomi
or
or
cld
loopne
mov
pop
shll
ss
js,pt
add
mov
jbe
pop
into
push
pop
push
xchg
jns
jb
inc
add
mov
mov
aam
mov
cltd
into
mov
in
inc
xchg
sarl
push
aaa
cltd
push
lods
cltd
imul
add
mov
cmp
sub
nop
mov
mov
xor
mov
fdivl
mov
push
xchg
cmp
ror
mov
and
cltd
xor
imul
imul
lahf
jle
imul
jbe
popf
out
scas
outsb
add
xchg
jns
adc
movsb
fucomi
jle
test
out
sub
push
add
pushf
jae
and
push
xor
dec
pop
xchg
sahf
shlb
xorb
cmp
rcrb
ret
pop
int3
push
int3
mov
pop
xlat
cmp
jge
inc
bound
cwtl
mov
imul
lret
push
sub
pop
mov
push
sbb
cmp
call
adc
cwtl
pop
xchg
xor
lods
ss
adc
clc
xchg
rcrb
mov
fchs
inc
xlat
ss
inc
out
xchg
and
ds
cmp
fldcw
inc
push
out
pop
dec
or
sbb
mov
jl
loopne
mov
cltd
ja
mov
push
outsb
inc
and
test
out
and
xlat
xchg
inc
push
sbb
xchg
cmp
adc
into
inc
pop
in
jne
inc
insb
inc
fbld
and
into
ja
cwtl
int3
test
femms
fcompl
cmp
sub
sub
jp
sub
pushf
inc
out
jnp
insl
imul
movsb
lahf
xor
pop
jne
and
mov
mov
cmp
push
adc
das
loope
xchg
divb
fimull
stc
sbbl
push
popf
adc
roll
sbb
push
xor
sbb
icebp
aam
pop
clc
sub
pop
sbb
lds
mov
call
aad
push
dec
pop
aam
xor
dec
push
mov
out
adc
in
popf
arpl
sub
jbe
dec
je
sahf
jae
ficoml
cmp
sbb
and
iret
and
jo
push
xor
lods
movsl
jecxz
mov
test
data16
inc
pop
test
xor
and
xchg
or
pop
test
lock
mov
loope
std
sti
out
dec
aas
js
call
ficompl
fmulp
repz
adc
imul
lock
ret
sbb
push
sub
cltd
mov
sbb
lds
addb
repz
pushf
mov
dec
les
data16
movsl
push
mov
push
and
mov
push
cmp
gs
idivl
xchg
fsts
fsts
and
add
hlt
adc
inc
and
pop
stos
out
mov
fstpl
dec
mov
out
fwait
xchg
sbb
inc
push
fsubr
inc
lcall
dec
sbb
jmp
mov
fwait
xchg
xchg
jno
int3
movd
fisubs
xor
mov
out
cmpsb
lock
scas
mov
enter
sbb
lods
movsb
movsl
cmp
push
pop
outsb
insl
popf
out
xchg
xlat
bound
adc
and
in
dec
lds
cmp
mov
push
xor
dec
lret
and
or
stos
sub
out
jns
dec
aam
add
fsubl
loope,pt
mov
es
pop
sarb
jle
cmp
outsb
add
mov
mov
pop
ss
sbb
sub
sbb
xchg
cwtl
pop
xchg
push
adc
adc
or
inc
jp
enter
and
imul
push
sub
dec
cmp
mov
sub
roll
cs
sarl
addr16
mov
xlat
lret
pop
lock
mov
add
and
mov
jnp
sub
mov
or
movsb
test
jo
add
fisttpll
pop
pop
add
mov
fsubrl
fdivl
mov
pushf
jp
cmp
lock
scas
in
pushf
cs
lret
test
dec
jne
repnz
mov
fisttps
fdivrs
outsl
lods
mov
mov
dec
in
movsb
xchg
dec
adc
xchg
in
sbbb
js
cmp
xorb
and
xchg
cld
adc
pop
fwait
mov
push
lahf
inc
cwtl
cmp
lock
stc
in
es
push
iret
xchg
inc
and
jb
mov
push
sbb
mov
das
jns
fstp
bound
js
subb
aaa
loope
mov
out
sbb
jne
or
aam
push
es
pop
sbb
faddl
insl
pop
mov
sbb
jne
dec
cmp
pop
loope
adc
mov
scas
rorb
push
insb
sbb
or
ljmp
sub
movl
dec
mov
fwait
rcll
dec
jbe
int
xchg
leave
fwait
daa
sub
dec
inc
pop
dec
loop
adc
adc
add
repz
mov
jge
inc
xlat
or
mov
mov
sbb
mov
xchg
repnz
xor
xchg
pushf
sub
addr16
cli
frstor
xchg
repnz
imul
push
arpl
gs
jge
or
mov
pop
aam
cmp
mov
cltd
es
jne
out
pop
or
sbb
leave
xor
mov
and
cli
les
xor
xchg
out
mov
jmp
inc
jmp
xchg
jle
lds
shlb
push
incl
addr16
lret
stos
xchg
mov
es
push
cmpsb
and
jl
out
scas
pop
scas
shl
aam
mov
call
sbb
sahf
and
jp
or
mov
jl
fisubrs
xor
add
or
cmp
pop
in
int
jnp
enter
sti
sbb
pop
mov
xchg
incb
js
enter
cmpsl
loopne
ror
cmp
xor
fiadds
jl
xchg
pushf
add
adcl
xchg
int3
jo
bnd
fwait
dec
mov
outsl
mov
cwtl
push
mov
cmp
jmp
xchg
jb
or
mov
cmp
imul
jmp
ss
xor
iret
pop
dec
push
dec
xchg
dec
scas
shl
sarl
or
mov
repz
push
inc
insl
sub
jp
fisubrs
and
xor
sbbb
les
mov
sub
mov
pop
movsl
xchg
pop
dec
out
mov
mov
sub
pop
lock
push
aas
idivl
cld
jecxz
in
xchg
mov
fsubl
pop
ljmp
loopne
xor
jbe
ss
pop
sbb
pop
test
cmpsb
jns
dec
or
or
and
adc
xchg
arpl
mov
pop
push
popf
inc
mov
sub
cltd
dec
inc
sbb
cmp
sar
nop
jmp
jnp
ret
shrb
cs
xlat
push
hlt
popf
inc
mov
test
test
inc
sub
cmp
push
push
icebp
aam
mov
push
pop
jg
icebp
mov
out
int3
pop
inc
lods
jo
loopne
add
inc
xor
mov
xchg
mov
xchg
mov
or
push
mov
jmp
lcall
mov
or
adc
xchg
fsubrl
sarb
int3
sub
hlt
add
add
adc
xor
daa
xor
mov
pushf
cmp
call
lahf
sub
jne
rorb
mov
mov
adcl
fdivs
mov
mov
iret
aam
addl
and
inc
lds
adc
dec
pop
pop
mov
cmc
adc
cli
aas
inc
mov
popa
rclb
dec
enter
lcall
and
xchg
and
jle
int3
dec
scas
sbb
test
out
jae
pop
xorl
sbb
lods
push
je
pusha
bound
fcom
adc
subb
movsl
xor
or
repnz
xchg
loopne
scas
mov
cmc
adc
in
lret
lds
push
push
leave
inc
push
sti
test
rclb
js
pop
cmpsl
xor
movsb
jge
push
mov
add
test
mov
jle
into
out
xor
xchg
leave
sti
push
imul
sbb
push
jecxz
loop
jle
cmc
jno
push
xlat
push
fs
cwtl
sub
lahf
cmp
dec
out
imul
mov
jmp
pop
push
mov
cli
daa
ds
inc
fcoml
scas
cld
mov
push
cmpsb
mov
roll
mov
gs
dec
xchg
dec
cmp
cli
xor
pop
cmp
sub
int3
outsl
in
pop
dec
adc
fisttps
sbb
cmp
push
push
jb
fildl
or
ja
sahf
das
push
adc
std
and
ret
dec
xor
aaa
and
sahf
inc
shlb
mov
push
and
shrb
fdivr
mov
leave
jp
xorl
data16
add
sbb
subl
sbb
into
and
lahf
mov
aad
xor
adc
push
cmp
addr16
mov
repnz
xlat
cmp
push
lret
rdpmc
fs
daa
or
daa
call
aas
xor
jp
icebp
arpl
outsl
mov
stos
rol
es
fs
jno
xchg
ljmp
dec
test
fwait
fwait
mov
fistl
inc
vandnps
addr16
cwtl
sub
in
lds
lret
sbb
push
xor
aas
mov
pop
ror
add
repnz
jbe
or
cmp
xor
fimuls
pop
fdivrs
out
repz
fidivrs
out
fstpl
mov
hlt
cmc
lahf
and
lret
and
fisubrs
sub
and
sub
mov
out
inc
jmp
loope
ja
sub
bound
mov
pop
cmp
adc
lret
orb
push
push
and
push
jno
leave
cld
fs
aad
dec
pop
stc
leave
loopne
lcall
fisubrl
push
push
push
divb
and
shl
pushf
jae
xchg
or
pop
inc
stos
sbb
loopne
xchg
fsubl
scas
lret
cltd
fsubl
sub
push
and
rcrl
inc
rcll
pop
jecxz
cld
sbb
out
outsb
inc
dec
jg
je
ret
push
pusha
or
sbb
pcmpeqb
and
mov
mov
ds
cmp
xor
add
inc
movsl
shr
out
cltd
sarl
inc
push
pop
dec
call
out
loopne
mov
gs
int3
jp
shll
aaa
imul
aaa
test
aam
dec
sub
addb
dec
sbb
xchg
jg
sub
jns
lcall
clc
cmp
mov
lds
and
imul
repz
mov
jno
popa
sub
dec
std
dec
das
out
sbb
sar
mov
cltd
pop
jmp
mov
inc
filds
aad
sbb
inc
jns
and
out
outsl
pop
nop
dec
iret
jecxz
mov
jg
cmpb
cmc
and
push
clc
repz
add
add
add
add
rolb
adc
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
push
xchg
dec
pop
jl
movsb
push
mov
push
repz
jmp
adc
jecxz
inc
mov
mov
arpl
adcl
and
add
jno
inc
sub
in
repz
jg
cmp
sarl
es
shll
and
jnp
jge
dec
or
xorw
mov
sahf
cmc
ret
out
pushf
adc
test
mov
iret
push
inc
lds
sbb
jbe
xchg
add
out
test
xor
insl
cs
test
inc
jle
jne
pop
inc
lret
dec
repnz
insl
dec
push
xchg
cld
jl
sub
mov
add
sub
hlt
xorb
jns
cltd
cmp
int3
test
add
call
adc
out
sub
mov
fistpll
inc
aas
js
xchg
add
or
push
lea
nop
fmull
outsl
mov
out
test
adc
popf
xchg
jbe
stc
in
into
leave
shufps
jp
mov
pop
cwtl
movsb
adc
sbb
mov
mov
out
and
loop
in
sahf
adc
add
div
sarl
adcl
inc
pop
fcomps
push
mov
cs
std
insl
inc
notl
int3
inc
cwtl
inc
out
cmp
mov
scas
pop
bound
js
add
lret
ret
in
sbb
pop
int3
xchg
or
pop
dec
and
push
push
rol
loop
mov
aad
inc
roll
ds
and
or
push
mov
in
jmp
das
bound
or
mov
sti
xchg
out
je
test
add
rcll
popf
fwait
add
scas
xorb
movsl
movsl
xlat
dec
gs
and
loope
int3
sbb
std
ret
cs
imul
hlt
fdivs
pop
inc
addr16
xor
mov
xor
mov
sub
jb
xchg
inc
push
shlb
and
add
loop
xchg
xor
mov
popf
fbstp
cmp
aaa
jo
push
mov
mov
and
push
lds
xchg
push
out
js
sbb
mov
sahf
xchg
inc
jmp
adc
jbe
and
fwait
cmp
mov
push
cmp
fidivrl
mov
shrl
jbe
push
or
xchg
out
imul
insb
lea
popa
jmp
lret
pop
xchg
ret
and
jnp
iret
inc
aaa
loope
cmp
push
in
mov
bound
test
shl
xchg
cltd
mov
jge
adcb
incl
add
mov
lahf
sbb
test
adc
mov
fstl
ja
mov
aas
xchg
mov
pop
xlat
push
addr16
insl
mov
stos
xchg
xchg
push
popa
in
inc
mov
mov
fs
jle
push
js
dec
sbb
jb
test
cmpsb
bound
mov
push
push
xor
hlt
nop
loope
mov
test
mov
dec
aaa
cltd
mov
imul
loopne
lds
fisubrs
jge
loope
int
je
fldenv
mov
add
scas
mov
jbe
add
lahf
jle
and
rcrb
rcrl
cmc
jp
adc
aas
das
mov
int3
stc
mov
pop
xchg
xchg
mov
test
mov
lods
mov
test
dec
arpl
jb
aaa
out
xchg
scas
gs
mov
in
xor
dec
pop
rolb
lock
sub
cmp
inc
adc
cmp
out
xchg
addb
xor
dec
daa
push
in
inc
mov
scas
insb
inc
mov
lods
pop
mov
mov
orl
iret
fbld
movsb
xchg
iret
movsl
jge
push
jno
adc
or
add
mov
fnstenv
imul
stc
mov
mov
loopne
inc
xor
hlt
ret
push
aas
adc
incb
stos
pop
es
ficompl
push
popa
inc
or
lret
cli
sbb
daa
bound
bound
push
sti
pusha
cmpsl
or
mov
ret
xor
and
mov
jae
sub
and
dec
stc
xrelease
ss
ljmp
push
std
mov
jae
pop
enter
sub
repz
out
dec
subb
sbb
xorb
dec
cmp
xor
jo
je
ficomps
test
xor
cmpsl
dec
push
adc
mov
and
les
jns
andb
fldenv
mov
dec
and
into
insl
pop
sbb
sbb
mov
das
aas
push
mov
mov
pop
xchg
aam
cld
xchg
mov
sub
xlat
daa
out
jbe
mov
adc
or
lods
xchg
fsubr
cmp
outsl
outsb
movsl
dec
movsb
or
xor
add
paddd
xchg
sbb
push
lret
or
jo
ljmp
scas
aaa
out
push
repnz
ljmp
cld
cmp
imul
movsb
loope
or
ja
fbld
mov
and
fstl
adc
in
cs
jne
jbe
and
std
cmp
mov
mov
xchg
xor
and
pop
mov
pop
in
mov
mov
xor
mov
mov
daa
fistl
sub
les
mov
cmp
lret
in
pop
ja
pop
cmp
pop
add
push
push
jmp
movsl
imul
jb
enter
mov
daa
imul
and
xor
test
cmp
in
sbbb
adc
xor
lea
les
outsb
in
mov
and
std
xor
pop
push
loopne
and
cmp
jecxz
or
in
jg
in
jmp
mov
shrb
and
pop
or
outsb
pusha
inc
push
faddp
and
aas
scas
inc
xor
es
push
dec
stos
and
scas
dec
push
push
aas
xchg
mov
sub
mulb
imul
sbb
mov
jns
fimuls
sbb
cli
js
and
sub
jns
les
mov
jnp
cmp
xlat
iret
stos
rcrl
iret
incb
sbb
dec
inc
inc
xchg
inc
test
xor
rorb
pop
in
mov
adc
jmp
adc
jmp
mov
fdivs
movsl
mov
cmp
lret
out
mov
cltd
imul
rorb
insl
and
inc
repz
lods
dec
test
fwait
icebp
hlt
xchg
adc
mov
push
out
sti
sub
mov
fistps
ljmp
mov
movsl
out
jb
push
or
mov
pop
flds
inc
mov
insb
inc
lock
pop
jne
clc
xchg
cmp
or
aas
and
sahf
mov
push
sahf
popa
dec
ljmp
data16
out
rcll
xchg
pop
jl
aas
xchg
shll
inc
roll
add
xchg
subl
adc
pop
js
xchg
int3
es
sub
pop
into
add
loope
or
in
in
push
mov
xlat
in
inc
sbb
sarl
inc
sbb
inc
mov
stos
xchg
inc
mov
test
pop
cmc
pop
adc
adc
insl
cltd
xchg
orb
or
inc
push
sbb
add
pop
hlt
shlb
jle
add
test
sbb
pushf
shlb
movsb
subl
dec
movsl
add
movsl
rol
push
shr
adc
mov
mov
hlt
cmp
jmp
es
loop
loopne
dec
inc
clc
daa
mov
dec
addr16
fldl
pop
fbstp
test
pop
mov
inc
lret
add
xor
add
and
sbb
aas
jle
test
lret
loopne
repz
mov
out
sti
mov
popa
jns
xorb
pop
adc
das
sahf
cwtl
testb
cwtl
popa
xchg
fnstcw
jge
mov
enter
push
clc
sarl
dec
orb
xor
aaa
mov
jp
pop
mov
pusha
adc
cmpsb
cld
push
aam
xor
mov
into
enter
push
flds
mov
push
mov
mov
or
gs
xor
push
mov
jg
sti
scas
xor
lret
and
comiss
lret
xchg
daa
fdivs
outsl
cmp
lea
mov
movntps
dec
jg
outsb
dec
movsb
js
insl
sbb
push
push
popf
xchg
shrb
sarl
int3
ljmp
shll
adc
mov
call
jnp
fsts
push
pop
pop
daa
stos
xor
aas
xchg
stc
les
int3
jp
cmp
sbb
int
push
jae
test
test
lock
mov
cmp
add
and
addr16
and
pop
jl
xlat
ret
sub
fisubs
mov
adc
dec
push
mov
repz
mov
xchg
arpl
pop
mov
into
mov
clc
xchg
ret
ja
in
or
pop
fbstp
push
inc
inc
sbb
jge
xlat
add
repnz
icebp
sbb
faddp
aaa
fnstenv
aam
ljmp
dec
lret
loop
jno
xor
filds
jnp
imul
jge
xlat
lea
cli
negb
lahf
test
insl
mov
fbld
ret
inc
inc
xor
xchg
xchg
and
popa
mov
push
pop
mov
pop
loope
mov
jne
pop
mov
sub
es
xchg
jne
pop
call
jg
out
fwait
dec
pop
imul
inc
daa
in
stos
sub
jg
jg
cmc
cmpsb
mov
or
cli
js
fsubl
lcall
mov
cmp
mov
jne
cmp
xlat
loope
stos
stos
push
mov
push
les
movsb
insl
mov
and
add
jl
clc
sbb
inc
lcall
adc
sub
movsb
lds
mov
jmp
lds
push
mov
pop
int3
xor
xor
adc
loopne
test
jbe
lcall
test
insb
subb
imul
pop
push
mov
loopne
adc
inc
shlb
cmp
jne
int3
cmpsl
into
repnz
xchg
xchg
scas
sbb
dec
aaa
daa
jae
lcall
adc
movsb
inc
mov
jge
ret
insb
dec
insb
das
adc
test
test
test
push
mov
mov
jge
movsl
data16
push
bound
loop
mov
xchg
jp,pn
dec
push
icebp
test
mov
inc
out
pop
ret
or
ret
dec
les
mov
xchg
pushf
ss
jbe
cmp
inc
and
test
mov
pushf
push
pop
mul
fsubs
movsb
or
lret
fwait
pop
mov
cmp
mov
xor
fwait
xchg
shlb
dec
aad
sbb
test
xor
xlat
jb
fneni(8087
mov
es
cmc
pop
adc
test
mov
adc
push
and
xor
adc
leave
not
pop
pop
xchg
out
push
cmpsl
mov
sub
pop
aas
jbe
jbe
adc
andb
jge
sbb
stc
cmpsb
lret
pusha
mov
adcb
jg
stos
jbe
test
fs
jg
push
out
mov
iret
xor
sub
mov
sub
jge
cmc
andl
add
imulb
dec
or
pop
enter
aaa
cld
adc
adc
call
testb
sbbb
movsb
lahf
ds
sub
or
jno
or
popa
xchg
xchg
xchg
loop
and
je
and
mov
mov
mov
cmc
and
sub
cltd
lods
scas
or
int3
pop
xchg
jb
shll
jl
pop
dec
test
decl
in
sti
add
jne
cmp
int
mov
loop
lea
cmpsl
push
inc
mov
enter
scas
add
inc
lret
adc
repnz
sahf
movsl
push
dec
stos
ds
repz
and
inc
lcall
add
sbb
push
sub
les
xchg
sbb
push
inc
mov
xor
mov
in
dec
inc
mov
mov
mov
hlt
mov
xchg
sarb
lcall
sbb
xchg
sbb
and
movsl
fwait
mov
test
pop
cli
xchg
outsb
push
lcall
lcall
pop
push
das
push
push
jo
mov
sub
sahf
mov
xchg
mov
jecxz
add
add
push
leave
fstpt
fdivl
ficoml
testl
stos
call
xlat
mov
push
pop
andb
xchg
xor
and
jnp
add
push
jbe
sar
aas
loopne
cmp
int
and
inc
mov
cmpb
and
inc
adc
or
sub
outsl
adcb
insl
rolb
xchg
push
fldt
int
cmc
movsb
je
repnz
ljmp
jl
clc
int
loopne
pushf
xchg
clc
mov
sbb
mov
xchg
lods
mov
inc
cltd
jp
pushf
cmp
jnp
jge
add
xor
pop
or
jne
nop
or
dec
roll
les
adc
movsb
and
inc
mov
xchg
fldenv
sbb
xchg
jae
dec
sti
imul
push
jmp
repnz
aas
in
cmpb
and
push
aas
fwait
adc
or
cmpsl
mov
shll
add
repz
mov
push
ljmp
xchg
and
cltd
dec
mov
insb
adc
cmp
lods
sbb
pop
into
movsb
add
sarl
xlat
andb
insb
push
xchg
testb
das
inc
mov
xchg
add
repz
xchg
or
aas
cs
jbe
sbb
dec
mov
add
in
ficompl
lods
push
jp
loope
lret
or
out
pop
nop
add
dec
inc
arpl
pop
xchg
repnz
sbb
into
mov
adc
and
insb
pop
jmp
jb
aad
pop
je
or
and
and
cltd
jmp
fstl
jecxz
add
fnsave
cmp
in
inc
lahf
popf
leave
dec
sar
jp
add
mov
cs
sub
cmp
cmp
pushf
push
pop
push
sbb
mov
inc
ja
sub
sub
cwtl
or
rorl
cmp
incb
test
cli
or
mull
xchg
adc
stos
mov
xlat
repz
xchg
jg
push
dec
inc
and
cwtl
scas
orl
insl
call
dec
dec
imul
in
sbbl
sub
cmp
adc
lcall
cld
cwtl
sub
push
dec
rcll
dec
lret
and
lock
cmp
pop
mov
lods
shrb
jmp
lcall
cmpsb
and
js
add
cmp
and
fcoms
inc
test
inc
push
out
or
mov
aad
xor
xchg
push
in
cmp
add
xchg
outsl
xchg
lcall
in
stc
adc
or
std
sub
cltd
jp
gs
iret
jge
push
nop
shl
or
pop
push
inc
dec
jbe
push
push
dec
clc
pushl
int3
fs
sbb
sub
jp
dec
movups
movsl
stc
lret
inc
repz
jmp
jecxz
outsb
jecxz
fwait
jne
fists
loop
pop
push
sti
inc
pop
jns
sub
std
adc
pop
mov
loope
iret
in
mov
jo
add
loopne
push
aad
lret
jb
cwtl
mov
dec
xor
inc
pusha
push
aad
in
sbb
mov
ret
sbb
popf
outsb
dec
es
stc
dec
fcmovnu
jbe
ret
js
mov
mov
stos
lahf
stos
call
or
mov
cmp
sub
xchg
notl
dec
sti
mov
sbb
shlb
out
outsl
test
pop
lea
out
push
mov
inc
aas
cmp
aam
inc
cld
inc
cwtl
cld
add
mov
aaa
and
test
inc
mov
loope
inc
loopne
into
call
int
and
sub
in
xchg
and
inc
addr16
int3
dec
add
pushf
lcall
jmp
add
inc
lahf
lret
shl
leave
jg
push
iret
je
xor
push
sbb
filds
fstps
imul
jae
xchg
push
or
into
cmp
xchg
mov
inc
popf
and
test
ljmp
xorl
in
mov
loop
xor
in
add
or
xchg
push
push
push
mov
mov
adc
std
jnp
dec
repnz
xor
push
cmp
cwtl
lock
test
xchg
pop
jnp
outsb
push
inc
stos
inc
xchg
add
pop
add
cmc
lods
ficomps
cmpsl
push
xor
push
outsb
imul
jnp
mov
cltd
out
test
push
lret
pop
mov
ret
testb
pop
and
add
sbb
push
dec
sbb
mov
pushf
scas
dec
pop
jecxz
pop
icebp
fsubrs
jnp
dec
out
mov
js
push
out
push
cmp
push
sbb
pop
popf
mov
insb
dec
push
aad
into
pop
pop
nop
inc
test
in
sub
and
popf
push
sub
push
repz
or
ret
lret
mov
daa
push
xor
mov
mov
xor
push
sbb
ljmp
cmpsl
int
and
add
adc
xchg
daa
adc
lcall
mov
push
hlt
arpl
aad
mov
aaa
xchg
sahf
mov
add
dec
imul
imul
test
dec
pop
jmp
mov
stos
imul
pop
std
and
ficoms
mov
negb
shrl
pop
mov
mov
push
out
iret
mov
std
movl
mov
add
xchg
add
or
movsl
mov
lds
arpl
jmp
mov
mov
les
pop
lds
mov
cli
inc
mov
and
xchg
pop
inc
test
leave
shrl
test
mov
and
mov
jo
adc
addr16
out
cmp
add
repnz
xchg
adc
xchg
inc
push
pop
sub
or
clc
sti
fmuls
pusha
imul
fnstcw
push
push
mov
dec
ds
push
clc
jge
adc
leave
mov
mov
divb
mov
ret
out
mov
add
movsb
mov
push
dec
push
and
xchg
pop
std
in
or
jb
cmp
push
mov
ljmp
dec
addb
sbb
fldenv
lods
gs
cwtl
dec
sbb
lahf
addr16
pop
stos
jmp
mov
and
mov
pop
sub
ljmp
call
jmp
addl
mov
movsb
xorb
outsl
repz
mov
inc
inc
mov
hlt
inc
pop
mov
mov
insb
dec
jnp
pop
push
push
xor
jmp
jecxz
popf
jge
push
pop
aaa
test
adc
stos
fimuls
add
jecxz
xchg
mov
sbb
fstp
jne
loope
sub
les
mov
sti
jg
cmpb
movsl
mov
inc
fadd
pop
sub
jne
push
idiv
in
decl
mov
pop
xor
sbb
xchg
mov
mov
push
sub
js
lcall
mov
and
inc
movsb
mov
mov
popa
jno
popa
subl
js
push
ja
and
dec
cld
je
inc
xorl
sub
mov
jbe
add
xor
mov
pop
lods
mov
aaa
sub
sub
ret
es
fimull
icebp
inc
scas
xor
pop
sbb
flds
in
out
in
inc
orb
cmp
dec
fisttps
pop
fistpl
push
stos
sbb
xchg
mov
cld
test
movsl
fyl2xp1
cmpsb
enter
dec
and
cmp
popa
xchg
mov
fstl
and
scas
rol
cmp
adc
ss
aaa
decb
xchg
clc
xor
aaa
out
push
adcl
mov
cmpsl
add
sahf
pop
mov
test
jne
out
cmp
insb
push
sbb
jmp
loopne
jge
fdivr
add
addb
sahf
loope
repnz
fwait
cmp
test
xchg
sbb
loop
lods
call
pop
mov
sbb
xchg
xor
mov
xlat
lods
repnz
mov
aam
frstor
push
daa
cmp
cltd
mov
cs
jmp
int3
jno
scas
cld
adc
fsubrs
add
dec
inc
sub
les
adc
wbinvd
arpl
sbb
inc
sub
adc
into
cmp
movsl
jecxz
out
mov
jg
xor
scas
aaa
dec
inc
cmp
addr16
test
rclb
cmp
push
sbbb
dec
jl
pop
inc
test
pop
push
xchg
or
mov
pop
adc
mov
icebp
ret
shrb
mov
mov
mov
sbb
dec
mov
repz
call
lods
mov
insb
mov
popa
adc
add
inc
enter
jb
jbe
clc
lods
dec
and
cmp
test
cmpsb
incb
stos
cmp
and
sbb
push
mov
loop
jb
inc
inc
gs
add
popa
call
inc
dec
mov
push
dec
or
xor
popf
and
bnd
mov
sahf
arpl
aam
xor
bound
mov
inc
lods
jb
mov
insb
and
je
ret
repz
je
fidivs
sbb
out
popa
inc
mov
jb
xchg
jb
mov
sub
sbb
in
jg
sbb
pushf
scas
test
repnz
and
imul
adc
xchg
push
mov
adc
sub
push
push
scas
mov
dec
mov
mov
or
loope
mov
sbb
test
fadd
sahf
cli
cmp
adc
or
and
int
in
xchg
xchg
sbb
and
fcmovnbe
loope
cmpsb
mov
out
mov
jl
iret
es
ljmp
push
imul
and
mov
cmp
rcll
pop
fs
mov
inc
ds
xchg
push
ret
fstpt
add
test
lret
dec
and
pop
ss
cmp
add
js
or
fwait
fiadds
pop
js
sbb
rol
jmp
mov
push
sub
addr16
outsl
cmc
mov
cltd
push
inc
adc
lret
cld
test
rorl
repz
cmp
pop
and
cmp
sbb
dec
fnstenv
into
mov
xor
repz
sub
lretw
mov
and
inc
jge
mov
popa
xchg
stc
pop
mov
ljmp
cwtl
pop
aaa
insl
jle
xchg
add
jmp
cmp
mov
arpl
bnd
pop
and
jp
add
cmpsb
mov
stos
pop
cli
lret
incb
popf
ss
sub
lods
lret
mov
jae
jae
bound
pop
sbb
xor
jp
arpl
push
insl
cmp
push
and
inc
xchg
cwtl
shl
lea
cmp
mov
push
ret
push
mov
insb
sub
sub
jg
pop
repnz
mov
add
xchg
cltd
insl
or
push
scas
mov
cmp
fldt
lcall
cltd
adc
es
ss
xchg
sti
icebp
sub
in
inc
iret
sbb
add
in
mov
inc
cs
dec
sub
push
pop
enter
pop
inc
das
mov
sti
outsl
rcll
mov
mov
sahf
imul
arpl
mov
adc
popa
jge
dec
sbb
imull
sbb
xchg
cmpsb
mov
test
and
dec
sub
scas
out
movsb
pop
mov
fdivp
xor
out
xchg
mov
xchg
lds
das
add
inc
out
test
xchg
hlt
sbb
lret
add
jge
pop
orl
add
adc
add
cmp
add
dec
sbb
and
imul
stos
outsl
add
mov
mov
fstp
shr
stc
xor
adc
bnd
out
xor
xor
mov
gs
loop
sti
scas
jle
xchg
and
das
mov
pop
pop
dec
push
ficompl
mov
ffreep
adc
adc
xchg
fidivl
xor
mov
jns
push
stc
ffreep
imul
notb
push
stos
clc
jl
call
add
loop
imul
xchg
lcall
roll
daa
imul
ljmp
popa
inc
sbb
or
xor
sub
decb
or
outsl
jns
loopne
ja
imul
jmp
fwait
lods
es
scas
fdiv
gs
in
jbe
sbb
loope
mov
ret
cmpsb
imul
and
js
push
sbb
mov
std
xchg
push
icebp
lods
lahf
movsb
loope
cmp
xchg
mov
jl
lds
inc
sbb
dec
bound
iret
inc
jae
clc
mov
or
sbb
adc
add
or
pop
jmp
js
rclb
jmp
icebp
or
in
add
call
pop
or
out
push
mov
mov
rorb
dec
mov
jno
cmp
mov
rorb
mov
xchg
int
shl
cmp
add
push
pop
add
sbb
int
enter
mov
jecxz
imul
adc
mov
ds
iret
mov
clc
sub
icebp
popa
in
test
int
daa
and
movsb
mov
icebp
and
lret
sbb
imull
je
pusha
iret
pop
dec
out
xor
popa
lds
cltd
push
jmp
mov
xor
sbb
or
push
mov
cltd
lret
push
xlat
push
jge
push
mov
ret
ja
cmpl
cs
mov
xchg
lock
cs
dec
lds
das
mov
xchg
movsb
and
xchg
test
mov
test
lret
and
pop
mov
adc
pop
inc
fs
xor
aaa
push
sbb
ret
xchg
lcall
into
lds
xchg
or
out
pop
inc
out
icebp
push
pop
cmpsb
mov
fdivr
in
and
mov
sub
cmpsl
pop
movsb
mov
cmpsb
shr
dec
call
inc
jbe
jne
inc
inc
push
push
inc
jne
push
push
cmp
aaa
mov
into
pop
mov
add
mov
cltd
push
add
add
and
fsubrs
fwait
adc
xor
in
lahf
imul
jo
jb
lods
and
cmpb
lahf
shlb
mov
cmpsl
or
xor
pop
lock
or
add
pop
mov
std
dec
movsb
loope
sbb
ja
sub
sub
outsb
mov
jge
sbb
mov
test
fldt
nop
fld
into
pop
in
push
jg
and
push
in
mov
sub
xchg
cmp
mov
stc
push
fldl
pop
push
fs
push
cmp
lods
imul
jl
sub
push
cwtl
pop
int
ja
xchg
dec
fidivl
mov
loope
adc
bound
jno
js
or
or
mov
int3
cmc
pop
mov
iret
mov
int
pop
not
mov
testl
je
mov
outsl
lahf
fwait
imul
neg
pop
adc
gs
xchg
mov
pop
jno
pop
push
aam
into
dec
mov
jb
xchg
jmp
xchg
jmp
ficoml
and
pop
popa
shr
fists
test
je
std
add
imul
clc
iret
icebp
or
mov
nop
push
pop
das
jl
aad
mov
push
mov
imul
insb
fdivrs
les
ds
pop
or
arpl
pop
cmp
outsb
mulb
push
or
mov
pminsw
cld
fimuls
push
xchg
or
fistpll
mov
lea
pushf
push
mov
add
pop
cmp
mov
jp
sub
test
adc
test
sub
lahf
inc
and
add
pop
xchg
pop
mov
roll
push
and
fwait
mov
sarb
jns
dec
mov
pop
movsb
fcomps
ret
shll
insb
adc
popf
inc
mov
insl
mov
lds
stos
xchg
addr16
movsl
pop
mov
clc
out
mov
cmpsb
pop
fistpl
dec
cltd
ss
push
mov
lds
mov
sbb
test
sahf
outsb
test
pop
pusha
testl
sbb
push
add
jg
imul
jmp
clc
mov
jnp
aas
in
shrl
or
lods
pop
or
xchg
jmp
adc
andl
fadds
inc
sbb
stos
sbb
jae
aad
cld
rol
jecxz
sub
std
mov
inc
loop
movsb
pop
sub
mov
mov
negb
adc
pop
dec
mov
inc
fisubl
out
hlt
lods
stos
cltd
out
xchg
pop
mov
stc
mov
ss
fbstp
pop
popf
aam
imul
enter
in
cmp
lahf
sub
inc
jmp
mov
cmc
test
fidivs
les
mov
lcall
js
popa
adc
inc
mov
push
cmp
fstpt
xor
adc
mov
dec
sbb
cltd
lds
shlb
hlt
pop
dec
jle
popf
rorb
mov
fadds
add
arpl
lock
jnp
sarl
add
cmpsl
mov
insb
fisubrs
jbe
lea
mov
outsl
push
jo
addb
jbe
int
jle
and
mov
xchg
mov
dec
mov
mov
mov
dec
mov
popf
mov
adc
push
and
icebp
mov
sub
aad
cmpsb
shll
aad
jl
mov
or
mov
lods
push
lahf
mov
mov
pop
in
sbb
lock
test
sarb
jl
xchg
mulb
mov
and
dec
iret
adc
std
push
xchg
jecxz
or
movsb
sbb
cltd
pop
sbb
and
decb
xchg
bnd
cltd
iret
test
sti
jle
and
sub
push
jbe
xor
cmp
scas
icebp
mov
notl
loopne
or
das
das
pop
or
dec
orl
or
or
mov
ljmp
mov
xchg
jns
inc
jmp
mov
out
ljmp
push
scas
or
ret
pop
imul
and
cmp
or
jge
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
jbe
push
mov
pop
jl
imulb
int3
jno
jno
sub
aam
div
mov
mov
lcall
xor
test
pop
add
stos
call
imul
rcr
notb
pmuludq
imul
mov
dec
orl
xor
inc
inc
test
faddp
fnstenv
pop
scas
add
add
cmp
dec
mov
pop
stos
daa
mov
mov
add
imul
xchg
movsl
loope
ret
sub
xor
dec
xchg
ret
aas
or
out
ja
iret
adc
fs
dec
addr16
call
insb
and
into
cs
xchg
or
sub
xor
xor
jnp
out
xchg
mov
stc
cmp
dec
scas
mov
dec
cwtl
sub
popa
push
pop
jnp
adc
mov
sbb
leave
rolb
in
xor
jle
pop
xchg
int3
in
inc
aad
push
andb
enter
shrl
push
sub
jp
dec
enter
mov
add
push
adc
popf
push
jns
out
mov
pop
inc
in
pushf
inc
cmp
xor
dec
adc
sti
aad
and
xchg
xchg
jae
shr
jmp
movsb
push
fstps
adc
lea
jge
std
out
ret
mov
or
lods
popa
shl
mov
add
mov
jl
xchg
mov
hlt
mov
aaa
mov
cmp
xchg
test
inc
cmp
ret
cli
add
mov
sbb
jne
mov
sub
xchg
jno
sahf
into
add
cli
fnstenv
fcmovb
sub
std
out
cltd
orb
add
nop
pop
out
adc
and
mov
mov
das
aam
dec
out
xchg
and
push
movsb
cmc
xchg
loope
ljmp
mov
das
mov
lods
fcomip
mov
jb
push
pop
repz
mov
mov
das
jecxz
into
mov
or
adc
mov
stc
pop
pop
inc
nop
adc
sbb
xor
push
mov
daa
push
repnz
cli
lret
out
stos
popa
lcall
cmpsb
daa
cmp
add
fs
mov
dec
mov
mov
lcall
sahf
push
scas
dec
addr16
filds
sub
mov
dec
push
sub
pop
jnp
shrl
inc
mov
imul
out
test
jmp
cld
ficomps
out
nop
cwtl
aaa
or
jg
pushf
add
mov
int
sbb
test
pop
stos
stos
ja
or
sub
test
xchg
or
xchg
mov
jbe
inc
inc
push
add
neg
mov
mov
mov
sbb
outsl
ss
fcom
xor
mov
xor
lret
xor
dec
popf
inc
es
pusha
jb
outsb
adc
aas
repz
push
add
pop
sub
push
or
lods
and
xchg
cmpsb
sub
insl
xor
out
icebp
cmc
jo
inc
sbb
xor
jp
sbb
adc
jae
cmp
iret
mov
xor
inc
inc
pop
cmpsl
cmpsb
xchg
pushf
sbb
js
fistps
jae
or
mov
pop
jno
aam
movsb
push
test
add
loope
notl
imulb
and
leave
insb
mov
shrl
mov
lahf
inc
xchg
xchg
sub
pop
cld
mov
jmp
call
xchg
push
imul
adcl
ficoms
decl
and
movsl
stos
sub
mov
add
test
dec
add
add
pushf
add
push
in
dec
mov
jge
or
or
pop
mov
adc
xchg
popa
jns
pushf
rclb
int3
pop
scas
out
cmp
or
xchg
add
ljmp
inc
cltd
dec
test
pop
inc
bound
or
push
dec
icebp
pusha
sub
push
cmpsb
dec
push
insl
mov
inc
ljmp
fnstenv
fnstenv
rorb
dec
repnz
push
sub
add
outsb
loop
andb
sub
pop
add
and
shl
popa
and
sbb
ljmp
push
stc
push
inc
out
add
loopne
jnp
and
fsubrl
mov
rolb
mov
stos
jae
mov
rcl
xor
aaa
cltd
mov
pop
out
insl
cmp
pop
mov
fdivs
mov
pop
mov
daa
popf
fcompl
inc
mov
lea
jo
xor
aam
lahf
mov
ljmp
lcall
sbb
inc
push
inc
push
and
loope
mov
mov
jl
cmp
repnz
stos
daa
xchg
out
fidivs
sub
cmp
or
sbb
push
push
jecxz
fbstp
jle
call
dec
stc
and
loop
pop
mov
icebp
mov
xor
loope
and
xor
popf
pop
lret
negb
fsts
xchg
mov
dec
dec
lods
mov
or
dec
in
mov
jp
add
daa
mov
div
jnp
inc
xchg
adc
filds
lret
movhps
lret
add
mov
fnstenvs
pop
je
test
add
jle
loopne
shll
mov
jp
popa
stc
adc
pusha
add
jg
and
mov
aam
shlb
fwait
and
xor
inc
or
sub
add
aas
jbe
cmp
xchg
or
xchg
pop
mov
cltd
jno
imull
cmpl
imull
mov
mov
loop
pop
add
fucomip
cmp
sub
and
xchg
and
das
out
aad
mov
int3
fisttpll
fs
push
pushf
dec
mov
or
pop
je
iret
out
jns
ficoms
push
aam
mov
and
loop
loopne
and
mov
mov
lods
leave
pop
lcall
jnp
cmp
mov
add
fisttpl
pushf
mov
or
enter
or
popa
lcall
mov
jmp
adc
jae
stos
sbb
insb
add
js
push
pop
jl
add
std
std
xlat
scas
stos
je
out
or
jb
pop
in
lret
and
int
add
sub
cmp
push
xorl
jbe
pop
subl
cmp
jl
pusha
mov
inc
xor
ljmp
sbb
insl
pop
mov
pop
rcrb
mov
sub
dec
ja
cmpsl
sub
adc
pop
pop
xchg
in
lds
outsb
pop
int3
push
pop
test
push
push
pop
mov
dec
pop
stc
fldenv
add
sub
mov
push
pop
xchg
movsb
xchg
lcall
nop
jl
imul
mov
subb
jbe
jbe
repz
mov
jns
sub
xchg
mov
jg
cmp
mov
mov
rcrb
cs
rolb
ficomps
pop
mov
add
shl
cltd
addr16
repz
mov
hlt
out
cmpsl
std
xor
jae
lahf
push
stos
dec
inc
test
jle
cli
lret
out
jbe
lea
push
fdivrs
sub
adc
push
and
pop
push
notl
push
or
jecxz
push
scas
pop
fsubp
add
arpl
in
out
xchg
pusha
jbe
jno
rclb
test
xor
insb
push
jno
lret
add
lahf
dec
jo
push
inc
lret
aas
push
or
push
scas
testb
pop
lret
int
jno
insb
addr16
dec
xchg
xor
jmp
xor
xor
adc
out
jge
jmp
aas
out
jecxz
ja
test
sbb
sub
cmp
test
xor
add
xchg
inc
xchg
pop
ljmp
xchg
inc
mov
cmpsb
aam
jno
dec
mov
push
mov
mov
js
sbb
and
jno
movsl
lret
roll
xor
scas
adc
mov
or
jp
push
inc
insb
ficomps
dec
aam
xchg
inc
cmpsb
leave
push
repnz
inc
orb
dec
das
scas
push
add
enter
jns
adc
jbe
pop
std
addr16
pop
mov
lea
mov
js
mov
mov
aam
fwait
add
aas
mov
jno
fwait
test
mov
xor
jns
sub
dec
push
stos
mov
sbb
pop
rorb
sub
movsb
add
jg
add
sbb
stos
sub
jnp
decl
arpl
insl
outsb
arpl
mov
and
imul
jg
pop
lods
or
sub
cmc
pushf
shlb
lock
lret
loopne
out
iret
jo
pop
out
out
add
dec
or
inc
fwait
inc
mov
pop
ret
sahf
into
inc
push
push
aaa
std
inc
insb
xchg
out
sub
loopne
les
mov
adc
leave
bound
xor
imul
push
mov
mov
imul
cmp
mov
xchg
dec
push
adc
lea
and
aad
jle
daa
pop
stc
je
pop
inc
or
inc
shll
jns
sub
inc
adc
add
adc
call
push
mov
outsb
rcrl
std
jle
push
add
mov
ret
leave
add
in
pop
and
xchg
add
mov
adc
and
add
shlb
mov
dec
pushf
cmc
test
mov
mov
int
add
jp
or
or
fldt
jp
int
sbb
push
adc
adc
enter
lahf
movzbl
push
mov
pushf
lods
dec
push
gs
mov
leave
or
and
imul
mov
ja
ljmp
dec
ja
lods
xchg
mov
aam
sbb
dec
mov
pop
iret
pop
aam
les
push
and
jb
fmuls
iret
lock
mov
add
jecxz
fs
jne
push
push
test
rcl
xchg
xchg
inc
cmc
loop
pop
iret
push
xorl
aad
sub
and
in
mov
sub
rclb
adc
push
stc
sbb
enter
sub
xlat
mov
dec
inc
lock
subb
and
repz
xchg
mov
idiv
nop
mov
adc
in
pop
sub
sub
and
negl
or
sub
das
call
dec
lock
push
sbb
js
inc
sahf
xchg
adc
sti
add
sar
sub
push
imul
sub
sbb
xchg
int
js
shl
jnp
adc
test
push
push
cmpsb
jne
and
push
inc
lods
mov
pop
orl
xchg
lods
daa
loop
xor
cmpsl
jbe
sub
sub
mov
jne
lret
and
mov
dec
sub
fistps
jnp
int
insb
leave
xchg
fisttps
xchg
les
fwait
cmp
jmp
mov
movsb
fstl
shll
adc
pop
es
and
in
xchg
test
jp
xor
dec
loop
lods
cltd
rolb
dec
jns
jo
push
ja
mov
shll
xchg
push
imul
stc
ljmp
std
lahf
mov
jno
addr16
pop
adc
inc
adc
sbb
cmp
sub
mull
aaa
inc
jg
dec
mov
pop
ret
sti
adc
cmp
dec
add
pop
jge
mov
adc
mov
mov
lahf
mov
push
sbb
push
loopne
lock
mov
movsl
scas
cmp
out
push
repnz
mov
dec
mov
adc
lea
jns
inc
je
mov
fildl
aas
jle
sbb
loope
xchg
adc
mov
outsb
adc
outsl
dec
fwait
ret
icebp
lea
dec
aam
xchg
jbe
iret
add
dec
ds
push
fwait
mov
add
repz
cmpsb
mov
inc
cmpb
out
cmc
rolb
push
xor
inc
aas
push
pop
xlat
bound
cmp
in
outsb
push
cmpsl
mulb
push
je
xor
sbb
or
into
jns
mov
mov
sarb
push
insb
pop
add
push
add
lahf
daa
fsubrs
cltd
inc
dec
fucomp
inc
out
stos
xchg
cmp
mov
jo
sub
pop
lods
in
mov
fwait
add
adc
jge
mov
lahf
cmpsl
int
mov
inc
scas
in
stos
loopne
lahf
loop
adc
arpl
mov
shlb
in
daa
sahf
lds
mov
xchg
outsl
ja
stos
mov
ds
mov
jnp
ret
sbb
adc
xchg
add
repnz
ja
sbb
or
rcll
movsb
mov
adc
add
mov
xor
out
mov
adc
fwait
je
rcrl
sbb
adc
cmpsb
stc
mov
int3
daa
fnstenv
xorl
je
imulb
das
outsl
cld
out
loop
daa
fldl
fcmove
add
test
fcoms
inc
cmp
sub
dec
cli
jns
mov
in
icebp
fdivrl
xor
push
outsl
inc
push
nop
dec
inc
push
jbe
int3
adc
dec
mov
add
cmpsl
mov
xchg
jb
add
push
pop
and
mov
movsl
je
clc
bound
test
or
mov
and
fsubr
jmp
inc
cwtl
ja
outsl
inc
mov
sbb
add
add
nop
ret
mov
das
sbb
jo
inc
mov
and
jns,pn
and
shr
scas
push
mov
leave
sbb
add
mov
bnd
scas
lods
scas
out
dec
in
jl
out
jp
scas
sbb
nop
xchg
clc
add
in
and
sbb
sbb
jnp
cmp
mov
and
loop
mov
cld
push
push
movsl
xor
pushf
mov
sub
stos
pop
cmp
in
out
test
add
xchg
dec
rcll
cmp
push
out
stos
dec
leave
fs
movb
cmp
daa
aad
rcll
adc
mov
xchg
popa
sbb
or
sub
jmp
pop
cld
inc
mov
sub
out
jne
dec
std
push
mov
mov
testl
pop
mov
mov
gs
mov
cmp
xchg
dec
and
ret
adc
push
pop
idivb
sbb
add
mov
fdivr
mov
mov
pop
sti
jecxz
cmp
mov
push
and
jae
mov
dec
notb
fcoml
mov
mov
sub
and
adc
sbb
or
flds
outsl
xchg
mov
xor
out
push
ficompl
sbb
jno
fwait
cmp
orl
mov
mov
rorl
shl
push
test
stos
mov
push
add
gs
in
fwait
sub
dec
je
mov
sahf
xchg
lods
aas
add
mov
bnd
fcompl
fisttpl
mov
movsl
cmpsl
jnp
lret
shll
jb
jne
push
inc
popf
xchg
mov
repnz
mov
ret
icebp
sub
mov
or
jle
jmp
int
mov
push
and
add
mov
and
shrb
inc
inc
loop
nop
in
add
pop
mov
or
xchg
lods
add
inc
test
mov
pop
inc
cltd
ret
or
out
inc
insb
aam
cmc
movsb
cld
inc
xchg
xchg
fsubl
in
dec
sbb
xorb
je
sub
inc
and
pusha
ljmp
dec
cs
sub
jecxz
loopne
xor
xor
insl
or
hlt
xor
in
add
dec
or
adc
inc
push
imul
pop
adc
fs
cmpl
rcll
xor
xor
sbb
adc
and
out
xor
mov
mov
lock
test
add
mov
fs
hlt
push
mov
mov
push
out
jmp
pop
lahf
inc
jns
mov
jmp
jmp
adc
lods
test
xchg
in
enter
cmp
lahf
in
hlt
lret
sub
popf
aam
mov
mov
adc
sbb
mov
inc
lcall
sbb
jb
push
imul
shlb
test
cmp
mov
cld
dec
mov
or
sbb
push
gs
pushf
xor
subb
jecxz
sub
and
ds
pop
mov
xor
cs
inc
jb
cwtl
and
add
lods
or
xchg
and
inc
push
mov
mov
jl
ret
mov
xchg
dec
rcll
dec
jo
stos
inc
pop
sbb
nop
imul
popa
sbb
lret
mov
shll
clc
insl
lret
inc
adc
inc
test
dec
jle
hlt
pushf
cltd
or
shrl
mov
ljmp
in
fisttpl
jae
sbb
movsb
mov
ja
das
cmp
dec
mov
pop
sub
loop
stos
fwait
ja
repnz
scas
xorl
gs
mov
loope
xchg
test
cmc
popf
xor
xchg
cwtd
cmp
test
pop
cwtl
xchg
cmpsb
sarl
mov
adc
pop
adc
lods
imul
or
nop
fldcw
ja
pusha
std
stos
jmp
into
cmp
mov
cld
fucomp
mov
and
shll
jne
decl
outsl
or
fld1
mov
jmp
or
testl
jo
adc
dec
repnz
arpl
push
push
nop
push
out
mov
into
lods
sbb
pusha
stc
xchg
cwtl
add
sub
ja
bound
loope
daa
sub
stos
ficomps
push
inc
movb
int3
sbb
sbb
cmp
or
xchg
pop
xor
and
and
push
call
push
lods
fwait
lret
xchg
aas
leave
add
add
mov
dec
cmp
cwtl
jge
add
popa
mov
fnsave
sbbl
in
pop
xor
stos
xor
jmp
cli
jmp
cmp
fildll
pop
pop
sbb
and
loop
into
outsb
inc
cmp
out
into
lods
inc
inc
lea
fs
adc
jp
cmpsb
cwtl
xor
in
pop
dec
inc
fs
lods
mov
icebp
add
pop
fwait
mov
lods
gs
es
mov
cltd
insb
pop
adc
lahf
cs
mov
arpl
dec
mov
lods
push
or
shrl
push
jecxz
pushf
cmp
xlat
or
adc
xchg
insb
mov
push
hlt
mov
xor
inc
dec
xchg
push
popa
inc
mov
xchg
test
sub
ret
pushf
sbb
outsb
add
sahf
mov
cs
adc
std
adc
mov
call
jbe
clc
repnz
adc
adc
aaa
aam
and
testl
in
mov
mov
loopne
addr16
popf
cmp
push
mov
sbb
fiaddl
orl
mov
cwtl
jno
push
das
sti
xchg
mov
pop
pop
fistpll
out
xchg
add
ret
ljmp
fsts
adc
enter
rol
into
js
mov
cmpsl
fcoms
add
mov
xor
xchg
sub
mov
and
mov
cmp
cld
enter
lret
rcr
pop
fisubl
mov
scas
sbb
bound
or
das
outsl
dec
xchg
mov
mov
popf
jmp
jge
inc
aaa
imul
push
lea
xchg
sbb
jle
dec
lea
scas
data16
or
xlat
or
add
scas
pusha
imul
je
shl
push
jge
lock
mov
or
or
push
cmp
ja
push
inc
enter
daa
jne
pusha
xor
out
pushf
push
sbb
push
xor
adcb
inc
in
imul
dec
inc
data16
cmpsl
jnp
cmp
and
ljmp
pop
fldl
jbe
sub
insb
cmp
dec
fbld
sbb
xor
insb
arpl
je
int3
out
ret
mov
roll
lcall
sbb
lock
pop
in
pop
jmp
fnstenv
sbb
mov
test
push
loopne
xchg
mov
adc
in
testb
push
push
jns
enter
adc
mov
repnz
inc
jle
in
test
xorl
mov
add
ror
jle
cmpsb
push
push
xchg
fwait
sbb
out
sub
pop
sub
add
and
imul
sahf
ret
insl
les
loop
mov
and
push
cmc
and
test
push
popa
loope
dec
out
pop
arpl
sub
pop
sbb
mov
add
xor
arpl
jmp
movsb
inc
push
add
adcb
mov
mov
bnd
les
sahf
dec
lea
in
into
fnsave
leave
jno
mov
lods
jmp
xchg
push
mov
jl
stc
push
or
or
jb
xchg
xchg
and
mov
or
mov
mov
imul
xchg
pusha
sbb
dec
aaa
roll
movsb
subl
fstps
adc
es
and
mov
pop
mov
jmp
or
ss
dec
sbb
cmp
ds
sarb
shrb
push
push
int
mov
mov
and
shll
in
mov
xlat
sarb
negb
fwait
jp
adc
mov
nop
ss
test
jb
adc
mov
int3
inc
data16
lods
push
xlat
jmp
pop
jecxz
xchg
jb
sub
cmpsl
mov
imul
inc
imul
outsb
add
xchg
or
fs
and
outsb
cltd
data16
jmp
in
loope
mov
cltd
add
sbb
loop
dec
call
je
lahf
or
test
addr16
inc
or
push
imul
jbe
loop
roll
ficompl
sbb
stos
jge
aad
dec
xor
mov
xor
xor
ds
fmuls
repz
inc
ficompl
mov
test
in
jp
fists
ds
cmc
push
insl
in
pushf
and
push
mov
mov
in
fistpll
ds
pop
adc
jecxz
cmp
cmc
movsb
push
insl
xor
sub
add
sbb
or
popa
subl
push
imul
pop
mov
mov
xchg
inc
ljmp
mov
jns
xor
mov
in
push
iret
out
jmp
xchg
rorl
and
and
inc
enter
pop
sbb
icebp
arpl
push
test
or
repnz
aas
test
dec
fisttpll
popf
push
jecxz
jle
dec
loopne
pop
dec
imul
push
ret
or
fs
fldcw
cmpsl
jb
fisttpl
icebp
hlt
ret
xchg
roll
fs
xor
imul
lret
mov
loope
mov
out
xor
or
sbb
jns
les
insb
test
xor
int
lea
daa
ret
sub
movsb
cs
rcrl
into
or
mov
outsb
jmp
into
or
xchg
cli
mov
pop
lret
fiadds
inc
js
mov
jne
in
jnp
fisubrs
inc
and
push
add
xlat
inc
andl
inc
inc
add
pop
jmp
pop
or
loop
call
inc
adc
aad
inc
push
arpl
sub
jg
mov
jmp
xor
push
cmpsl
imul
mov
mov
or
jp
and
lcall
inc
mov
or
sbb
sbb
and
sub
jmp
sub
mov
movsl
outsb
shr
mov
sub
in
sub
pushf
xor
sub
sbb
add
and
jge
or
add
fnstcw
xchg
xchg
dec
scas
jl
pop
pop
mov
or
cmp
xor
pop
fsts
dec
insb
dec
stos
aad
scas
inc
enter
mov
icebp
lret
add
xor
dec
mov
ss
jno
mov
es
sub
nop
hlt
dec
xchg
adc
es
xor
xchg
icebp
sbb
in
mov
sbb
dec
imul
pop
repnz
dec
pusha
pop
lret
sub
mov
iret
add
mov
mov
or
mov
adc
dec
inc
push
push
xor
hlt
adc
bnd
jno
cmp
jl
jns
add
pop
js
in
add
ljmp
jb
cmp
push
jae
adc
lds
dec
xchg
xchg
push
push
cmp
xlat
mov
cltd
pop
mov
call
pop
push
cmpsl
cmpsl
jmp
movsl
dec
dec
das
and
mov
or
insl
sub
test
or
lods
imul
out
js
add
shr
pop
dec
cmp
lock
fisubrl
jb
and
or
ljmp
push
add
gs
cmc
add
mov
jns
ret
pop
gs
add
or
rorl
push
xor
rcrl
pop
imul
sbb
aas
imul
cmpsb
fadd
fstpl
loopne
outsb
sbb
mov
add
stos
dec
cmpsl
cmp
pop
idiv
push
push
or
orl
mov
pop
cmp
popf
rorl
cli
push
sbb
pop
mov
xchg
xlat
imul
orl
push
or
ss
dec
inc
arpl
rcr
sbb
sarb
push
cmp
adcl
pop
loope
cmp
cmp
ret
push
or
dec
inc
push
jmp
xchg
mov
mov
mov
cmpsb
mov
lock
imul
popf
add
and
sbb
orb
insl
ds
push
arpl
ljmp
andb
mov
jbe
jne
ret
jns
lds
jne
sbb
das
sbb
and
insl
inc
mov
push
push
sbb
mov
test
inc
pop
mov
in
jae
xchg
div
mov
xchg
cs
add
xchg
xor
fldt
shrl
lock
ficomps
mov
adc
lret
xor
add
sbb
pop
xor
push
push
pop
xchg
stc
rcrl
insl
outsl
inc
mov
mov
or
jno
push
lods
stc
xor
inc
shl
inc
inc
mov
lock
jae
fs
or
lea
dec
gs
ja
arpl
repnz
bound
pop
aad
shrb
push
xchg
in
adc
lods
mov
xchg
pop
pop
adc
jo
mov
les
pop
int3
cmpsb
mov
push
xchg
adc
xchg
stos
push
fsts
and
pop
xor
xor
mov
imul
jle
xlat
cld
mov
inc
xlat
fstp
pop
add
repz
xchg
jnp
imul
dec
lods
jnp
out
or
icebp
icebp
and
mov
sbb
dec
or
xor
add
dec
cmp
pop
notb
in
int3
xchg
je
outsb
cmpsl
jle
add
push
mov
push
push
pop
fs
push
cli
jbe
imul
inc
push
pop
mov
or
cltd
xchg
pusha
mov
inc
jbe
stc
inc
test
push
gs
jns
out
ss
lret
jge
enter
sub
sub
add
outsl
lcall
jae
and
mov
or
dec
ret
loope
popa
jns
outsl
and
inc
or
push
outsl
fistl
out
mov
sbb
jno
loopne
sbb
das
jbe
into
lds
fidivs
xor
inc
xor
adc
pusha
lahf
fidivl
jge
hlt
dec
aad
push
and
icebp
mov
scas
dec
xor
xlat
cmp
sbb
and
cmc
lea
adc
adc
loopne
repz
aam
insb
cmpl
dec
inc
or
mov
ret
or
and
pop
mov
or
jnp
mov
out
js
lret
mov
cmc
or
pop
cs
mov
sub
pop
ds
push
in
pusha
ja
add
lcall
add
jbe
int3
dec
xor
adc
outsb
push
fiadds
enter
imul
adc
fsubl
xchg
rol
dec
adc
fadd
lret
mov
in
jp
out
jmp
ret
sub
stos
inc
lret
fwait
scas
adc
push
test
out
mov
rolb
pop
or
jnp
fstpt
stos
loop
push
jb
cld
ret
push
insb
adc
add
lods
sub
insl
jge
mov
jp
scas
push
add
sub
cld
je
jbe
push
xor
dec
divb
cmp
xor
ds
shll
sub
cmp
xchg
pop
pop
repnz
xor
mov
pop
xchg
xchg
stos
inc
pop
shll
xchg
mov
mov
dec
push
sbb
push
hlt
add
mov
scas
sti
push
arpl
mov
xor
fisubs
jp
pushf
sbb
xchg
arpl
sbb
pop
mov
jbe
fistps
jns
mov
inc
mov
sub
js
daa
negb
inc
insb
lret
dec
fildl
std
testb
test
imulb
int3
ficomps
jp
mov
pop
xchg
adc
xchg
pop
test
mov
in
popa
jne
xchg
or
xor
nop
je
cld
mov
and
mov
out
jecxz
test
xor
test
sbb
mov
into
cmp
jae
repnz
data16
dec
out
mov
or
lds
pop
add
jbe
cmp
jmp
std
stos
push
jmp
pop
test
sub
int
cmp
push
lods
inc
add
nop
adc
scas
int
jp
add
enter
dec
fstl
cmp
mov
pushf
icebp
loop
jb
cs
mov
jg
xchg
enterw
dec
adc
ss
mov
cld
int3
adc
jmp
cmp
data16
add
dec
leave
ss
into
sbb
data16
mov
dec
daa
pop
adc
xor
ljmp
pusha
imul
pop
lcall
xchg
cmp
pop
sub
add
xchg
inc
mov
mov
fists
pop
int3
mov
sbb
dec
insb
push
adc
xor
in
inc
push
lcall
fdivs
flds
xor
fadds
into
cmpsb
stos
sub
testl
mov
sbb
adc
pop
ret
andb
sbb
inc
idivl
fwait
or
loop
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
jne
sub
jl
pop
jl
dec
movsl
jle
jl
xchg
popa
hlt
jmp
es
cmc
in
add
dec
xor
ljmp
in
push
fiadds
pop
mov
lcall
jo
and
pop
loope
lods
fldcw
and
js
dec
xor
lock
cmc
mov
lock
xchg
cwtl
pop
sub
and
sbb
pop
and
repnz
cltd
sbb
cmpsl
dec
pop
sbb
xchg
push
cmpsl
sub
push
cmc
ds
das
sub
cmp
push
or
fdivs
add
mov
bound
xchg
mov
sti
sub
outsl
inc
inc
sti
rsm
and
movsl
fists
add
insl
out
push
icebp
in
jnp
xchg
inc
mov
andl
mov
fimuls
adc
xchg
mov
and
cmp
cmp
sbb
in
cwtl
out
inc
and
cmc
enter
xor
jmp
and
repz
push
mov
jg
in
stos
inc
mov
adc
fimull
xor
inc
cmpsb
and
xchg
add
xchg
cli
mov
adc
pushl
jmp
mov
pop
dec
loopne
inc
clc
cmp
jo
inc
inc
and
dec
rcrl
mov
sbb
xorl
mov
mov
mov
jmp
cwtl
inc
push
push
out
dec
sbb
xlat
sahf
int3
pop
orb
cs
xchg
test
pop
mov
jae
repz
pop
fsubs
jmp
lahf
stos
les
inc
dec
mov
dec
out
inc
push
in
jl
jno
fwait
inc
xor
mov
fs
repz
hlt
faddl
push
cli
or
jae
mov
dec
test
jb
dec
lds
jg
push
mov
mov
std
lret
mov
fcoms
call
divl
sub
jge
js
mov
jge
xchg
aaa
js
jo
jb
cmpsl
jb
popa
add
push
test
jae
jo
pop
or
daa
sbb
popf
jns
xor
insb
loopne
mov
dec
out
fwait
mov
fscale
in
movsb
data16
inc
fdivrl
lcall
sbb
js
fs
out
je
sub
int
inc
cmp
shlb
pushf
int3
out
mov
push
adcb
sbb
aas
pop
fwait
sub
inc
mov
fstl
sbb
and
fadd
push
int
jbe
add
lret
xor
pop
add
cmpsb
xlat
pop
ss
mov
and
pop
push
push
push
cmp
jmp
jb
fmuls
xor
scas
or
mov
enter
mov
loop
pop
push
jmp
and
out
mov
lds
sarb
xchg
cwtl
xchg
addl
test
aam
cmp
jmp
cmp
sub
sub
adcl
das
jae
mov
sahf
ljmp
stos
jmp
std
mov
out
stos
clc
es
pop
mov
icebp
and
cmpsl
cmp
daa
cmpl
jl
mov
jecxz,pn
inc
insb
or
adc
sarl
jbe
jl
jle
xor
addb
fmuls
movsl
gs
cmpsb
xchg
aas
scas
aad
mov
mov
jbe
jl
adc
popa
outsb
lods
pop
jno
dec
adc
jb
mov
loop
sbbl
nop
adc
fsubs
push
dec
add
ror
out
call
push
mov
call
mov
mov
icebp
or
xorps
rep
les
jecxz
push
jns
clc
repnz
icebp
mov
int
std
das
add
cmpsb
inc
adc
ljmp
fstpl
xor
das
xlat
test
adc
jae
push
iret
mov
outsl
push
xchg
cmp
xchg
das
jp
popa
xor
jbe
in
mov
push
pop
jb
out
jb
sub
cwtl
test
addr16
shlb
hlt
sti
mov
jl
test
mov
dec
hlt
mov
push
gs
jae
icebp
adc
lss
sbb
adc
mov
or
adc
out
faddl
mov
mov
shrl
jl
push
xlat
sbb
rcr
pop
cmp
movsb
sub
mov
fcoms
test
pusha
fwait
aam
cmp
add
ljmp
sbb
push
xchg
cmp
jp
scas
mov
push
das
and
mov
jb
pop
int3
leave
movsb
mov
test
xchg
sub
scas
dec
push
into
dec
and
xor
imul
lock
cwtl
sub
nop
pop
sbb
and
mov
add
bound
mov
mov
lcall
push
push
call
adc
les
jo
mov
dec
push
jmp
je
mov
mov
jnp
jb
inc
pop
and
push
pop
pop
pop
add
push
mov
adc
out
dec
lahf
fcom
popa
leave
mov
jl
in
mov
aaa
ficoml
mov
fsubrs
lods
shl
ljmp
decb
mov
dec
add
ss
dec
aaa
xchg
xor
iret
xor
loope
push
mov
sub
cmp
loope
push
fists
push
clc
or
int
jmp
cld
addb
and
or
jmp
lock
sbb
or
xorl
or
dec
add
add
mov
ffree
sub
or
push
mov
mov
mov
sub
mov
inc
xorb
inc
mov
outsl
das
and
insb
mov
lods
xor
jb
xlat
cmp
outsb
iret
xor
jnp
sti
pop
ret
pop
or
adc
cli
xchg
xor
mov
pop
les
movsb
add
adc
fstpt
je
xor
mov
fs
xchg
adc
mov
pop
bound
out
pusha
pop
mov
mov
xchg
or
out
mov
or
mov
cmp
shll
popf
int3
ss
fcomi
cmp
xchg
pop
insb
sti
add
repnz
sub
mov
sub
aas
dec
mov
mov
mov
xor
cwtl
xor
dec
jl
dec
sub
xor
push
into
xchg
shr
xchg
xchg
xchg
outsl
jo
test
adc
ja
add
mov
and
xor
dec
shll
push
repz
repz
xchg
cmp
cld
cmp
xor
loope
mov
ljmp
sub
jmp
adc
jmp
xlat
jns
mov
and
mov
ror
movsl
inc
ds
es
scas
and
inc
jno
or
inc
filds
out
cs
ds
and
repnz
mov
lock
push
jae
sub
pushf
push
sub
fstp
dec
sbb
jp
push
movsl
out
jns
push
jle
mov
pop
cmp
xchg
pusha
push
mov
xchg
and
vmovaps
imull
mov
nop
inc
inc
dec
sbb
jecxz
scas
lahf
pop
adc
mov
out
sub
imul
push
adc
push
lods
jle
mov
test
and
jg
sub
pop
cmpsb
pop
push
inc
adc
ss
dec
adc
lret
push
or
mov
lods
js
pop
jne
mov
sbb
inc
add
dec
push
cmc
out
sub
dec
dec
sub
mov
cmp
xor
lea
xchg
stc
or
aad
fisttpll
lods
mov
lahf
mov
xor
or
in
inc
leave
jne
scas
out
inc
cmp
sbb
push
adcb
mov
out
and
repz
lret
inc
inc
mov
leave
push
jge
jp
jns
push
fndisi(8087
inc
pop
fcomi
pushf
int3
mov
iret
xchg
les
fmull
jl
nop
and
sub
push
lock
pop
dec
lods
fiaddl
lret
adc
arpl
jmp
cwtl
repz
dec
movsl
leave
xor
or
pop
cmpsb
push
testl
frstor
pop
jbe
push
push
clc
add
mov
xor
shl
mov
test
insb
jbe
es
ficoms
mov
pop
mov
fdivl
xchg
sbb
or
jnp
ficoml
mov
jo
in
loopne
je
add
lea
xchg
add
lods
pop
pop
das
jb
mov
pusha
push
dec
or
movl
xchg
cmova
sub
outsb
fildll
je
mov
mov
adc
in
jbe
pop
mov
inc
push
stos
les
xorl
bnd
dec
jae
faddl
nop
adc
sub
lret
das
inc
movl
sbb
dec
movsb
cli
and
jno
push
icebp
inc
movsb
sti
push
mov
cltd
shlb
cmp
sbb
jl
xchg
dec
push
loopne
jb
div
test
sti
arpl
int3
sub
clc
and
pop
mov
adc
lahf
push
jg
xchg
adc
jae
shll
imul
mov
sbb
lds
gs
cmc
mov
mov
xor
lret
inc
fdivr
aam
pop
xchg
fldl
into
dec
cltd
dec
adc
xchg
mul
subb
mov
dec
pop
es
cmp
or
adc
lock
dec
and
sarb
adc
popa
xchg
pop
pusha
dec
cmp
mov
lahf
loope
pop
or
push
xchg
adcb
xchg
and
aam
es
ja
data16
in
pop
push
in
add
lock
sbb
imul
mov
lea
in
loope
into
test
mov
out
dec
jp
stc
fdivl
inc
mov
dec
rcrl
cmp
leave
push
lock
xlat
xrelease
lret
push
scas
js
xlat
and
test
mov
rolb
loop
pop
das
sbb
loopne
push
cmc
mov
fcompl
cld
mov
imul
call
sbb
rcl
lock
sbb
and
jb
lods
lds
inc
inc
pushf
cmp
mov
mov
and
dec
and
sar
addl
ss
or
jp
loope
or
sub
or
dec
or
cld
xor
jecxz
sub
pop
mov
pop
aad
call
mov
push
imul
xor
pop
gs
negl
mov
sbb
sbb
mov
xchg
ss
and
arpl
push
loop
xchg
lds
adc
mov
jb
mov
mov
lcall
cmp
aam
pushl
inc
stc
inc
pop
in
push
mov
imul
xor
pop
fisttpl
and
add
pop
daa
inc
test
cmp
call
push
jo
addr16
sbb
or
fmull
mov
in
push
pop
leave
fisttps
xor
inc
cmp
xchg
shlb
xchg
push
outsl
sbb
push
xor
gs
cltd
xor
xchg
idiv
pop
dec
lods
mov
mov
dec
jmp
call
bound
out
mov
push
cs
divb
sub
ffree
je
stos
push
stos
sbb
dec
pop
mov
sbb
sti
jl
arpl
jb
arpl
aaa
mov
idivl
inc
pop
xor
shl
inc
lcall
setl
push
cmp
adc
lcall
ja
sub
ljmp
mov
lea
pop
sbb
cwtl
bound
push
fisubrs
stos
pop
movsb
fldt
ljmp
mov
adc
cmpsl
outsl
xor
clc
jmp
or
xlat
stc
push
bnd
fdivrs
add
out
nop
dec
in
dec
lahf
lcall
pushf
test
push
jbe
rorl
nop
test
cmp
inc
xor
mov
and
or
fistps
loopne
jmp
or
xchg
inc
in
jae
and
pop
mov
sub
adc
xchg
jle
adc
ret
push
mov
enter
shrb
mov
mov
cmp
mov
idivb
ret
fs
in
sub
jmp
fs
xor
outsl
and
dec
mov
inc
adc
xrelease
jbe
inc
jecxz
ja
pop
into
push
repz
mov
and
push
in
in
clc
mov
jno
jne
dec
in
add
aad
inc
pop
cld
adc
imul
out
xchg
and
and
add
loope
test
inc
sbb
mov
pop
fstpt
xor
jbe
ret
or
mov
xor
and
pop
push
pop
xor
ss
dec
sbb
movsl
or
fldl
jge
clc
or
jmp
mov
loop
rolb
movsl
scas
cmp
int3
push
test
jae
xchg
cmp
xchg
js
dec
jo
xlat
dec
fwait
push
hlt
adc
and
popf
push
mov
mov
loope
cmp
pop
adc
fcom
jae
bound
dec
xchg
xchg
loop
ficompl
data16
jns
sbb
insw
and
sti
stos
xchg
xchg
sahf
lret
int
push
mov
push
negl
out
cli
in
popa
pop
push
mov
mov
cmc
fldcw
into
push
sbb
or
cmp
xchg
pop
shlb
mov
stos
ljmp
dec
add
int3
imul
xchg
lcall
cmp
cmpsb
loop
push
adc
push
fst
mov
repz
dec
dec
test
lods
mov
testb
in
pop
shl
add
cmp
xorb
jmp
fs
arpl
rcll
inc
icebp
dec
scas
gs
sbb
and
lock
pusha
mov
out
inc
mov
stos
mov
das
and
scas
pop
sbbl
cmp
scas
xor
push
ret
and
lcall
lea
cmp
por
xchg
mov
mov
arpl
xor
push
dec
mov
xor
inc
push
push
pop
inc
mov
sbbb
sub
push
test
cmp
addr16
adc
sbb
testb
shrb
ljmp
inc
push
aaa
xor
jmp
xchg
dec
push
adc
out
pop
mov
xchg
jne
push
mov
xor
loopne
or
push
mulps
repnz
push
loope
ret
dec
mov
adc
inc
call
decb
arpl
mov
pop
mov
sahf
stos
cmp
lret
pop
test
xor
mov
jno
sti
out
mov
fucom
dec
addb
mov
mov
nop
dec
cmp
int3
shld
add
leave
cmp
lea
or
ret
fdivrl
xor
outsb
gs
in
fwait
jb
daa
sarb
jnp
dec
cmpsl
sub
jnp
xor
aam
jns
sbb
lods
mov
je
sbb
mov
sbb
xorl
adc
cwtl
loope
mov
mov
movsl
jb
cld
push
sbb
sti
test
in
lds
mov
pushf
push
cmp
pop
cmp
aad
sbb
xor
imul
lcall
insl
sbb
pop
mov
sbbl
inc
mov
cmp
lret
and
push
scas
ss
imul
std
in
mov
popa
dec
xlat
inc
ret
adc
add
push
inc
pop
scas
sub
sub
ret
imul
cmpsl
stos
repz
lcall
aas
out
movsl
icebp
fcom
mov
sub
mov
arpl
rorb
xor
cmpsl
jl
mov
sub
sbb
cmp
out
dec
fsubs
add
mov
push
pushf
pop
cmp
xor
andb
sbb
fists
pop
push
iret
bound
stos
pop
push
add
xchg
jns
xchg
in
inc
fld
test
xor
and
xchg
dec
stos
popa
dec
fistpll
jns
sbb
xor
add
out
jns
leave
sub
xchg
jmp
mov
mov
xchg
ficompl
rolb
loop
mov
stos
fmul
repz
sbb
std
cmc
xor
sub
dec
pop
sarb
inc
sbb
push
out
push
rolb
xor
mov
fbstp
pushf
mov
jbe
jle
out
push
adc
or
pop
add
pop
loope
out
cmc
cmp
add
stos
xor
push
xchg
lods
sub
rcr
push
enter
in
inc
fistl
lret
std
mov
fstpt
pop
adc
mov
insb
sub
inc
out
or
insb
or
pop
fcmovnb
jl
cmp
test
mov
popa
jp
cld
cmc
inc
mov
mov
push
pop
mov
sbb
add
inc
dec
shlb
lock
int3
lcall
or
xchg
push
adc
pop
xor
dec
cwtl
push
xor
mov
mov
jl
add
push
lods
in
sub
pop
add
add
sahf
nopl
pushf
jp
jno
lret
jno
js
imul
inc
mov
jmp
mov
addr16
call
in
jmp
aam
gs
add
loope
xlat
jge
adc
adc
fidivrs
mov
mov
popf
ss
push
cld
loopne
andb
daa
xor
dec
push
and
pusha
xor
mov
cmp
loopne
mov
in
std
xor
dec
aas
cmp
mov
in
aam
push
fdivrp
popa
aam
test
das
jecxz
bound
dec
sbb
and
rcl
and
int
es
mov
in
test
push
dec
sub
ja
cmpsl
sub
testb
mov
dec
push
sarb
popa
sub
adcb
cmp
add
ret
pusha
xor
inc
lock
jle
outsb
jbe
xchg
dec
cmp
test
lahf
mov
movl
or
das
loopne
movsb
scas
jne
loopne
in
mov
xor
xchg
or
mov
dec
popa
scas
lea
call
les
addr16
mov
fidivrs
mov
aam
aaa
sbb
shll
leave
sub
push
icebp
aad
iret
jns
aas
mulb
inc
sub
xor
jge
pop
aaa
fiaddl
mov
adc
sub
fucomip
je
inc
stos
xlat
jae
xchg
add
dec
and
lret
push
xchg
leave
push
repnz
xlat
sub
sar
loop
and
add
xor
mov
mov
stos
sti
daa
imul
xchg
mov
and
loop
std
jbe
xchg
add
mov
push
daa
or
outsl
and
fsubrs
test
adc
std
mov
lret
jns
addr16
sahf
xchg
test
outsb
jns
jno
ret
cmpsb
sbb
out
add
cltd
push
sub
into
aaa
mov
jle
daa
push
dec
dec
les
xchg
mov
cmc
pop
fldl
adc
loopne
pop
sbb
popa
and
negl
mov
addb
in
jl
jnp
inc
js
push
xchg
sub
adc
mov
or
je
loope
std
add
xchg
jae
stos
jno
ss
stc
cmpsb
out
imul
adc
nop
dec
decl
fimull
sbb
mov
cmpsb
xchg
mov
jns
cmp
in
jae
scas
add
cmpl
dec
pusha
negl
lods
out
jecxz
xorb
ss
leave
gs
mov
mov
push
and
lret
sub
mov
mov
dec
pushf
xor
jae
push
jmp
aas
xchg
push
jb
pop
mov
sub
mov
out
push
leave
mov
sbb
in
add
mov
ret
std
das
pop
mov
ja
cmpsb
clc
or
cmc
add
test
push
insb
jnp
adc
mov
outsb
pop
dec
mov
cmpsl
ja
inc
adc
dec
cmp
std
jno
inc
leave
fiadds
in
inc
sbb
lea
int
sbb
scas
add
mov
frstor
cmp
imul
fnstcw
jae
and
cli
andl
xor
mov
or
cltd
mulb
add
imul
inc
push
mov
adc
lods
xchg
pop
arpl
aam
or
clc
xchg
pop
cmp
out
rorb
pop
sbb
in
ficoml
jno
int3
div
cmp
jno
lret
pop
cwtl
dec
push
fisttpll
cmp
push
push
movsl
cmpsl
shl
outsl
adcl
sub
sub
jge
out
pop
mov
pop
comiss
push
mov
ljmp
cmc
inc
mov
dec
push
and
cmpsb
sbb
pop
rcll
sbb
dec
cmp
sub
push
insl
push
inc
and
sub
and
push
sar
pop
jl
fdivr
inc
sub
and
pop
inc
jle
test
mov
xchg
pop
repnz
divl
mov
jle
icebp
roll
adc
sub
pushf
lods
pop
sub
popf
xlat
filds
lock
inc
mov
push
mov
sbb
dec
push
or
in
mov
neg
test
testb
pop
cli
aas
dec
imul
push
les
jnp
inc
adc
dec
into
mov
push
mov
out
out
jecxz
mov
jnp
pop
mov
sti
sbb
jo
mov
adc
std
popf
into
rcrl
test
mov
pop
jb
mov
in
cmpsb
les
cwtl
ljmp
out
in
sub
in
stc
push
inc
sti
inc
hlt
add
jle
insb
jmp
sahf
xor
dec
add
mov
jo
popa
cmp
movsb
roll
mov
mov
loope
jno
and
les
icebp
mov
jne
iret
in
xchg
incl
lock
xchg
gs
jne
incl
sar
and
insb
jmp
and
or
frstor
xor
dec
cwtl
mov
out
lret
pop
loope
aaa
pop
lock
jle
sub
lahf
lret
sahf
data16
cli
sbbl
imul
mov
arpl
mov
mov
gs
push
jo
and
cmp
inc
rcll
mov
jmp
add
xor
mov
gs
daa
fnstcw
add
cltd
fisttpll
inc
lret
xor
imul
xor
sbb
lods
fdivrs
push
dec
jmp
xchg
xor
cltd
xchg
test
cli
cmp
push
int
jle
and
call
imul
ficoml
dec
adc
inc
pop
add
scas
cmp
push
push
adc
dec
test
add
and
loope
mov
ljmp
mov
mov
mov
adc
sbb
sarl
sbb
lods
or
cmpsb
push
aas
pop
push
mov
and
sub
xor
ss
mov
call
popa
mov
je
mov
cmpsb
sbb
lret
push
rcrl
int3
mov
lods
inc
sbb
test
jne
adc
pop
aam
js
push
add
mov
push
mov
push
cmp
jp
dec
cmp
int
cmp
popa
or
rclb
in
dec
cmp
ret
popf
popa
push
jmp
jmp
add
int
jno
mov
daa
sub
sarb
mov
ss
inc
inc
jo
aaa
jno
jg
pop
adc
mov
test
into
push
fs
jae
mov
dec
mov
xor
dec
ret
push
shll
mov
inc
mov
push
test
pop
jecxz
js
inc
imul
inc
xchg
loopne
cli
sti
mov
mov
adc
jae
cmp
adc
jno
repnz
dec
in
push
sbb
or
cmp
outsb
cmpsb
xor
dec
test
iret
or
ret
xor
std
ret
iret
jo
mov
add
mov
out
jp
movsb
call
fsts
xchg
dec
ret
mov
dec
push
lods
jp
out
push
mov
cmc
adc
push
orl
jge
jno
dec
adc
push
aad
and
ds
mov
outsl
mov
lods
fcmovnu
int3
sti
dec
lea
xchg
xchg
mov
loop
das
cwtl
xchg
add
stc
fs
cltd
dec
outsl
jp
stos
add
xor
xchg
xorb
iret
cmp
sbb
mov
or
sub
ljmp
sbb
rcll
jecxz
je
arpl
das
lcall
jl
outsb
add
insl
loope
cmp
gs
pop
mov
pop
sarb
xor
mov
nop
xor
js
or
push
in
inc
dec
xor
and
sahf
iret
pop
arpl
rcl
bound
xchg
stos
mov
and
int
push
mov
jo
nop
aaa
mov
jnp
push
cmp
gs
dec
mov
sub
push
push
jns
mov
mov
outsb
xor
int3
rcl
push
ret
loope
int3
jo
lods
testl
adc
xlat
mov
cmp
lcallw
fisubl
dec
leave
test
and
pop
adc
xor
aad
iret
cltd
gs
or
psubq
mov
in
loope
out
movb
in
roll
pusha
les
add
popf
cmp
hlt
popf
jne
mov
dec
loope
push
nop
loop
cli
int
int3
ret
cwtl
lret
aas
fcmovb
dec
lea
inc
inc
leave
popa
jb
jge
pop
jns
mov
or
movsb
mov
push
mov
mov
ja
fs
or
cltd
adc
adc
and
xchg
jge
xchg
sub
cltd
mov
in
aad
push
imul
cmp
xor
or
shlb
popf
pop
fcoms
imul
clc
fwait
xchg
repnz
pop
lret
mov
cmp
ret
sub
mov
mov
mov
ret
int3
sti
jecxz
stos
std
loopne
mov
xlat
nop
pop
fcoms
mov
flds
aaa
adc
dec
mov
sbb
lcall
push
pinsrw
int
icebp
sbb
cli
mov
pop
fstpt
xchg
rorl
adc
pop
dec
add
or
inc
dec
js
or
dec
test
xchg
add
loop
or
push
push
inc
jmp
push
mov
lods
jo
arpl
ljmp
pop
push
mov
push
mov
rcl
dec
mov
gs
add
and
mov
daa
jns
mov
sar
lods
push
mov
loope
sbb
xchg
pop
lods
xor
insb
push
dec
scas
mov
adc
sbb
das
mov
xchg
sahf
adcl
or
das
ret
mov
sbb
cmp
nop
sub
je
sbb
inc
mov
ja
cmp
jbe
out
mov
mov
mov
xor
insl
cmp
in
sbb
cmpsl
ja
movsb
mov
add
jb
lret
cmp
scas
dec
push
or
or
jge
or
mov
subl
fildl
pop
je
lods
loope
addl
in
sbb
xlat
outsb
pop
out
fsubl
cmp
fimull
es
cmp
mov
jmp
aam
dec
clc
dec
mov
jno
test
and
ret
jmp
add
cld
js
and
push
pop
std
mov
incl
cli
pop
test
clc
pusha
push
out
les
pop
sbb
pusha
outsb
xchg
fmuls
sbb
in
and
leave
rcpps
pop
cmc
dec
out
or
and
cld
mov
cld
mov
xchg
fsubs
fidivl
add
sbb
in
shlb
fadds
pop
rclb
push
fmull
jle
leave
lcall
int
das
cld
jp
mov
xchg
js
sbb
cmp
andl
lds
push
xchg
popa
sub
xor
cmp
addr16
or
mov
pop
out
pop
jnp
iret
fs
lds
and
rcll
test
fsub
repnz
cltd
jg
push
leave
mov
scas
aaa
push
jge
cmp
mov
mov
in
sub
scas
sub
cli
testb
sbb
mov
and
gs
sub
incl
test
xchg
pop
idivb
out
in
shrl
mov
add
in
mov
fmuls
xor
fdivl
pushf
jnp
rorb
fstl
pop
roll
mov
mov
cli
jl
fimull
into
inc
adc
or
xorl
adcl
add
sbb
into
test
or
fcmovbe
clc
test
sbb
mov
mov
shlb
in
cmp
stos
pop
mov
fwait
xor
xor
es
jbe
pop
inc
push
fs
out
loopne
cmpsb
sub
incb
add
push
aas
push
emms
mov
call
loopne
mov
adc
mov
or
xchg
dec
mov
sbb
mov
push
adc
mov
in
sbb
cmp
mov
dec
stos
pop
insl
jb
int3
gs
pop
lahf
push
mov
repnz
jbe
jns
inc
xchg
int3
and
out
roll
cli
out
aas
sbb
ret
les
aam
outsb
dec
or
xchg
lds
adc
inc
mov
jbe
or
addr16
pop
sti
gs
push
inc
leave
push
out
push
dec
jmp
sub
fcomip
mov
cmp
repnz
jle
les
mov
add
mov
lahf
loopne
pop
jnp
incb
mov
out
mov
jb
shll
pop
mov
mov
pop
push
sbb
jecxz
jo
push
mov
fmul
rol
and
cltd
inc
fmuls
or
rcr
addr16
mov
xchg
xor
daa
inc
sub
sbb
outsb
aad
inc
sbb
negl
push
add
or
outsl
ficompl
stc
loope
mov
inc
or
and
pandn
mov
fcom
outsl
adc
mov
mov
xchg
icebp
push
sub
sti
cmp
mov
test
sbb
jle
insb
pop
and
aad
je
jae
shll
inc
shll
cmpsb
scas
rcr
jno
lods
jbe
das
flds
jo
lock
add
xor
loopne
sub
push
imul
mov
imul
add
jecxz
mov
pop
mov
push
leave
std
ret
jae
lods
hlt
cmp
jno
xor
pop
cmp
mov
outsl
pop
je
lds
jge
outsb
mov
stos
mov
in
pushf
fsts
push
mov
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
add
aaa
sub
jl
inc
pop
jl
inc
or
aaa
xor
adc
daa
int3
and
je
mov
inc
orb
js
inc
scas
jno
outsb
fsub
popa
das
mov
xchg
scas
xlat
fmull
jge
arpl
mov
add
mov
orb
shll
jo
mov
xchg
push
dec
mov
lds
mov
push
adc
mov
jb
and
test
jns
es
movsl
mov
xorl
mov
sarl
test
xor
inc
andb
mov
lahf
stos
push
xor
gs
sbb
aas
iret
fisttpll
jb
in
jecxz
pop
cltd
xor
dec
jp
cmc
inc
cmp
iret
out
xchg
cmp
es
adc
test
jg
imul
pusha
clc
or
cltd
pop
pop
push
mov
subb
jo
aas
add
pop
ffreep
jae
push
in
filds
lcall
lods
sarb
mov
inc
sbb
inc
add
mov
cld
stos
icebp
push
fwait
xor
mov
pop
clc
pop
inc
pop
sbb
sub
mov
std
sbb
loope
cmc
jae
mov
loopne
out
xor
push
repz
loope
sahf
int
mov
add
push
jae
inc
adc
xor
leave
test
imul
cmpsl
mov
or
dec
aam
cld
pop
pop
cmp
mov
fistps
fildl
mov
lock
cmp
xor
inc
pop
fidivl
or
mov
cmp
insb
adc
jnp
jmp
bound
mov
push
cwtl
mov
mov
lea
repz
jb
dec
adcl
inc
das
ja
es
xor
sub
lcall
test
or
xlat
adc
mov
sahf
in
adc
sub
cwtl
mov
xchg
frstor
jns
pop
mov
push
mov
mov
mov
pop
shrb
mov
add
movsl
cmc
loop
mov
xlat
shrl
xchg
repnz
sti
shll
cmp
fidivl
and
repz
mov
xlat
and
mov
ss
aas
aam
mov
repnz
arpl
insl
inc
jnp
cld
int3
pop
push
mov
push
arpl
iret
xor
mov
arpl
fimull
jb
or
test
sub
mov
or
cld
call
push
inc
fwait
inc
or
jl
push
nop
daa
int
in
out
dec
popf
push
leave
sbb
jge
ret
mov
push
add
imul
sbb
ret
or
pop
lock
push
push
int
imul
int3
inc
jb
divl
test
push
xchg
loope
loopne
xor
add
xchg
sahf
pop
xor
scas
imul
jae
pop
jnp
sbb
in
and
or
int3
push
call
xor
adc
adc
mov
loop
push
pop
push
addr16
mov
jnp
popf
es
push
insb
or
or
xchg
add
sarl
mov
xchg
pop
popf
sahf
adc
inc
jl
mov
push
pusha
or
outsl
xchg
sbb
in
pushf
sbb
imul
sbb
mov
sbb
in
scas
test
jmp
pop
out
xor
add
dec
adc
ret
and
in
xchg
loopne
mov
pop
push
pop
push
bound
sbb
subb
sub
mov
repnz
and
sub
stos
sub
sub
pop
fwait
and
and
inc
mov
aam
adc
jge
jno
mov
fsubrl
popa
aaa
push
and
xchg
or
push
pop
pop
mov
pop
aad
add
or
mov
lret
push
sub
out
icebp
dec
or
and
cmpsb
adc
dec
pop
loopne
push
pop
aam
test
xchg
and
inc
sahf
icebp
mov
inc
lahf
jae
incl
je
rcrl
das
dec
adc
notb
pop
daa
je
pop
mov
push
std
xchg
inc
dec
repz
mov
cmp
adc
pop
jbe
jnp
js
rclb
inc
or
mov
cwtl
pop
mov
sahf
jno
jle
jge
fs
mov
scas
sahf
ret
xchg
xor
or
and
xor
push
cmp
sub
or
movsb
or
fnstenv
sbb
ret
outsb
sub
inc
pushl
xor
test
add
jl
lret
scas
cmp
xor
pop
inc
in
ja
jg
enter
call
test
popf
sbb
mov
push
jge
add
mov
cmp
in
fwait
dec
inc
jae
mov
ss
mov
mov
scas
dec
and
adc
inc
mov
out
into
push
mov
jge
js
ret
js
pop
inc
cmpsl
pop
imul
mov
mov
insl
push
xor
xor
das
test
inc
push
or
inc
mov
sbb
cmp
les
pop
inc
imul
fcoms
cli
stos
xor
mov
pop
lea
imul
into
addr16
mov
fwait
cmp
jl
jns
cmp
mov
push
xor
mov
pushf
push
popf
add
mov
shll
rclb
jl
jb
xorl
mov
in
xor
dec
outsl
popa
das
pop
imul
cmp
adc
mov
inc
inc
aam
mov
adc
dec
cvtpi2ps
ret
cmc
sub
aad
addr16
fdivrp
pop
je
add
jno
dec
pop
jae
add
scas
int
cwtl
bswap
add
jbe
mov
cmp
ret
mov
lcall
insb
jno
push
popf
cld
pop
sahf
mov
stos
lds
mov
xchg
jnp
pop
data16
mov
into
dec
sahf
stc
push
cld
pop
out
sbb
adc
mov
aad
out
add
sbb
ja
in
adc
cltd
or
enter
cmp
dec
incl
aad
dec
cmc
mov
movsb
sbb
ljmp
movsl
fistpl
pop
jmp
dec
mov
mov
cmova
fs
jg
pop
scas
ret
push
lods
pavgb
rclb
xchg
mov
pop
sbb
and
imul
xchg
je
sbb
fwait
cmp
shlb
jmp
xor
adc
lahf
mov
jmp
arpl
pop
hlt
pop
mov
testb
inc
sub
sti
out
xchg
push
stos
pop
sub
js
cmpsb
push
cmpsb
mull
mov
aaa
popf
shrb
call
std
xchg
push
push
lmsw
out
pop
insb
test
adc
cmpsl
jp
xor
cld
lret
mov
xchg
sub
sub
lret
or
jge
inc
inc
inc
lahf
fnsave
xor
or
dec
mov
dec
sub
xchg
mov
clc
ja
mov
push
and
jmp
mov
icebp
mov
dec
aas
push
out
jno
adc
repnz
aad
jge
imul
push
cmpsl
dec
or
dec
cmpb
jo
inc
cmp
dec
and
xchg
add
gs
dec
cld
jle
popl
test
xlat
dec
push
inc
fcompl
iret
lea
aam
mov
lea
and
jle
aam
push
add
cmp
mov
in
addr16
pop
testb
in
mov
add
add
pop
jno
and
scas
mov
into
adc
filds
lock
mov
test
push
and
mov
bound
mov
aas
cmpsb
mov
push
dec
sbb
vcmppd
mov
sahf
lods
and
iret
pusha
push
push
fst
pop
rcll
jae
xchg
xor
adc
mov
js
xchg
repz
incb
push
jae
mov
or
ljmp
pop
or
sahf
jl
je
cltd
pop
cmp
adc
and
push
sbb
push
mov
dec
incb
pop
inc
cmp
lds
out
push
xlat
int
je
lret
stos
cli
sbb
push
aad
push
daa
sti
push
cwtl
xchg
sbb
sub
jns
ja
or
int
js
jnp
mov
xchg
in
inc
jnp
pop
gs
cmp
popf
ret
add
pop
outsb
in
mov
fsubs
sub
cli
or
xchg
jae
mov
in
loope
cmc
icebp
mov
jg
popa
outsl
adc
add
out
hlt
incb
sub
cmp
insb
jnp
xor
and
lcall
sbb
movsl
ja
movsl
sti
enter
arpl
scas
dec
sahf
dec
ja
movsl
cmp
test
pop
xchg
mov
fcomps
sub
mov
xchg
hlt
cltd
add
xor
sub
ja
jge
inc
aad
sub
xorl
and
jnp
ror
xchg
mov
push
mov
fs
leave
sbb
mov
aad
lods
xchg
xchg
jnp
adc
jp
pop
xor
out
or
insb
aaa
lods
hlt
sbb
stc
loope
pinsrw
jge
in
dec
cmp
lock
addr16
subl
out
inc
add
pop
loope
jo
cmp
xor
stos
mov
test
daa
fcompl
lahf
mov
xor
cmp
insb
mov
mov
adc
ret
sbb
add
std
pusha
mov
mov
jns
call
iret
clc
in
xchg
rol
loop
sub
movsl
xchg
xor
cs
push
outsl
sbbl
insb
sub
mov
div
sub
adc
fmul
push
insb
fmuls
push
jnp
jmp
adc
jno
scas
ljmp
jp
jmp
lcall
mov
sbb
outsb
int
xor
or
pop
mov
add
pop
aaa
fsubs
cltd
push
push
xchg
lods
insl
out
imul
adc
popa
leave
pop
sbb
mov
fnstcw
pop
add
cmp
mov
xor
push
xchg
faddl
pop
insb
mov
or
or
pop
dec
cld
or
dec
mov
and
out
fldt
mov
mov
adcl
scas
fistl
sbb
sbb
lret
mov
fmull
sub
lret
and
mov
jmp
xchg
sub
inc
pushf
and
mov
push
into
xchg
les
hlt
ret
lock
pop
mov
push
jb
loopne
ljmp
pop
jl
in
jmp
dec
mov
shll
or
add
sub
sbb
jne
test
sbb
inc
dec
push
test
pop
add
cmpsb
sbb
outsl
das
out
bound
mov
lret
fcomp
sarb
mov
ja
ds
inc
cmp
lods
out
adc
xchg
pop
mov
call
fcom
cmp
mov
or
add
xchg
ljmp
or
mov
or
es
loop
push
adc
or
pop
xchg
fsubrs
xchg
mov
bound
vmread
add
jnp
cmp
xchg
daa
jp
ja
test
adc
scas
fisubs
adc
mov
cld
jl
dec
push
iret
pop
and
adc
shlb
adc
lcall
aas
js
or
movsb
adc
jge
push
lock
insl
dec
popa
push
push
mov
jle
js
stos
sub
mov
mov
dec
push
sbb
inc
lahf
fwait
neg
stos
mov
fwait
adc
fistl
jle
test
lcall
into
fadds
dec
lea
lock
movsb
mov
mov
mov
push
sub
mov
add
jno
xchg
lea
into
arpl
test
inc
xchg
push
xchg
test
call
sbb
popa
fldcw
scas
mov
stos
fbld
outsb
cmp
dec
and
sub
inc
repnz
cmp
cs
cmp
cli
and
mov
mov
clc
jns
sbb
imul
js
fistpl
xchg
imul
or
loop
inc
sbb
jns
inc
mov
stc
sbb
push
int
or
cmc
xchg
xor
pop
ds
test
mov
mov
pop
js
sub
jne
push
mov
inc
or
push
dec
mov
fs
and
lock
jg
mov
mov
xor
cld
dec
mov
push
lcall
xchg
pop
es
dec
dec
jne
jp
ds
in
inc
fmuls
mov
popf
loop
push
sarb
xchg
mov
aaa
adc
push
sub
scas
xchg
adc
or
fldcw
jg
xor
xor
andl
inc
inc
ja
jle
inc
pop
adc
mov
dec
loop
cmp
rcl
lock
ds
insb
rorb
lods
jg
and
popa
je
rol
out
or
out
and
int
sti
cld
inc
adc
add
cwtl
in
mov
add
cmp
das
xlat
sbb
jbe
xor
stos
sbb
inc
addr16
mov
sahf
or
inc
shlb
xchg
es
adc
mov
push
movsl
jb
lock
js
cltd
mov
je
xor
or
dec
fnstenv
lar
movsl
les
dec
push
lea
jo
sub
rorb
xor
rcrb
mov
mov
xchg
pusha
cli
sub
push
and
add
inc
push
int
add
rolb
rcll
arpl
iret
inc
loop
movsb
cli
xor
xchg
jge
inc
jb
mov
sub
pop
cld
imul
jg
jl
xchg
pop
mov
div
lea
or
xchg
sbb
notb
or
fbld
xchg
cwtl
push
jb
pop
pop
inc
lret
cli
mov
jo
adc
mov
loopne
mov
fwait
pop
rcll
dec
mov
mov
aas
mov
test
inc
cmp
add
cmp
psubb
adc
xchg
jmp
jne
xchg
sbb
leave
dec
ret
cwtl
xor
insb
shll
stos
hlt
xchg
mov
mov
xor
cmc
outsb
mov
inc
dec
xchg
idiv
cli
push
add
rcll
jno
cmp
pushf
int
lock
fnstsw
fstps
mov
mov
ret
shlb
inc
rcrb
or
cmp
cmp
test
push
mov
das
mov
mov
stos
mov
test
mov
xchg
xchg
lea
cltd
xor
cmp
mov
push
push
testb
jl
das
push
jnp
in
mov
dec
jae
fcomps
fdivrl
add
xchg
and
sbb
adc
and
inc
xchg
lds
pushf
mov
ljmp
inc
ficoms
outsl
out
out
mov
pop
je
cmp
mov
pop
ficomps
inc
cmp
loope
and
jns
or
xchg
push
hlt
leave
in
popf
lods
push
sbb
in
mov
aaa
fucompp
lea
int
add
test
cmp
push
movsl
inc
xor
xchg
scas
add
divb
mov
sbb
and
les
subl
cs
inc
and
aad
pop
cmp
cmp
loop
outsb
ret
div
push
xlat
fadds
jp
int
dec
dec
mov
mov
mov
pop
mov
cmp
daa
fldcw
fistps
push
dec
mov
ss
xor
in
punpcklwd
mov
mov
sbb
jae
jmp
jb
fmuls
mov
sbb
pop
push
movsb
push
or
aam
mov
lret
out
jl
out
enter
cli
hlt
cltd
mov
push
aas
sub
test
ds
out
and
test
mov
test
repz
pop
and
push
inc
mov
dec
decl
dec
cld
mov
daa
aam
jne
push
lret
adc
jg
mov
iret
mov
out
into
jns
sahf
or
sbb
cmp
shll
nop
or
ret
and
mov
ffreep
lods
sahf
int
mov
dec
out
jae
cmp
cmp
jp
icebp
rcrb
loop
pop
dec
dec
xchg
int
mov
cli
xor
inc
mov
fbld
add
or
inc
mov
hlt
mov
test
sbb
push
imul
fldl
pop
xchg
dec
pop
push
and
push
data16
aaa
mov
add
mov
sahf
mov
popf
mov
cmp
sbb
imul
dec
dec
cmpsl
dec
push
int
inc
out
mov
fistpll
lock
and
adc
pop
and
lea
xchg
xchg
jmp
in
in
cmp
push
cmp
imul
data16
ja
enter
dec
ljmp
movsb
repnz
inc
int
push
push
sbb
cmp
xchg
scas
jg
lahf
lock
jmp
cmpl
pop
subb
push
and
pop
or
xor
cmpsb
mov
mov
lcall
cwtl
xor
movb
or
jl
inc
pop
xchg
or
aaa
loopne
or
ret
scas
lret
mov
fsts
idivl
in
leave
inc
cmc
scas
dec
or
mov
adc
mov
sbb
stos
lods
aaa
push
jl
inc
cmp
xor
cwtl
jl
inc
push
and
adc
es
dec
mov
mov
dec
sub
jle
es
dec
jle
dec
pop
adc
mov
movsl
mov
in
mov
push
mov
pop
xchg
pop
xchg
dec
pop
inc
frstor
and
pusha
shll
add
lods
gs
mov
divb
enter
xor
test
pop
out
cltd
jecxz
xor
lds
clc
cmp
pop
fwait
cmc
sbb
sar
push
add
in
mull
adc
shl
lods
jl
xchg
mov
inc
push
mov
stos
or
xchg
inc
int3
sbb
lods
shll
lods
mov
les
aad
push
mov
mov
pop
sbb
fsubrs
sbb
stc
test
inc
push
push
inc
mov
fstpl
mov
add
pop
xchg
mov
clc
push
sbb
fsubr
add
xchg
rcrb
das
loopne
dec
pusha
lea
int3
sub
pop
xchg
call
test
clc
fldln2
insl
mov
jns
in
aaa
mov
test
mov
push
repnz
adc
ja
jp
cli
dec
fmul
push
pop
dec
nop
dec
mov
xlat
mov
jl
inc
negb
dec
sub
add
cmp
jg
aad
pop
cmp
mov
mov
and
add
xchg
and
dec
xchg
or
mov
xor
js
xor
sub
inc
out
sub
sbb
movsl
mov
cmp
outsb
test
sbb
and
add
push
dec
lods
sbb
leave
mov
cs
jnp
sub
in
ffreep
jnp
and
pop
or
fnstsw
scas
mov
outsl
or
mov
jne
outsb
lret
jp
stc
mov
or
mov
xlat
pop
shlb
repz
xor
lock
and
clc
dec
inc
addr16
bound
push
in
fsub
cmp
fs
aas
cmpsb
sbb
push
xorb
aaa
pop
shll
xor
out
in
mov
arpl
and
dec
lcall
mov
mov
sbb
xor
pop
fdivrl
mov
cmpsb
sarb
mov
sbb
xor
pop
add
xchg
or
pop
push
add
clc
loopne
sbb
mov
ljmp
mov
and
cltd
fs
aam
fsts
sbb
roll
sub
cltd
mov
or
fstl
adc
mov
mov
fiaddl
movsb
into
xor
dec
pop
jecxz
scas
fnstsw
mov
cmp
xorb
lret
sub
mov
scas
mov
xchg
stos
fwait
inc
sub
inc
xor
xchg
cmp
mov
xor
imul
mov
dec
mov
sub
push
stos
js
push
mov
adc
xor
push
adc
mov
shl
sub
adc
jg
mov
xor
jbe
fadd
sbb
add
sbb
xchg
aad
fldl
adc
adc
mov
jecxz
frstor
mov
push
pop
ret
leave
clc
or
test
sar
js
push
cli
sub
or
aas
insl
lods
in
push
adc
sti
lahf
scas
cmp
call
xor
jl
or
sub
out
in
loop
cli
xchg
insl
lea
push
add
jmp
and
xchg
pop
or
cltd
push
mov
fwait
mov
aam
arpl
add
jo
mov
xchg
sti
push
sti
cmp
xchg
adc
xchg
xchg
es
loopne
inc
test
loope
repnz
sub
pop
push
push
sti
mov
jo
clc
mov
fcompl
pop
or
repz
inc
push
sub
gs
pop
jl
bound
imul
mov
xor
mov
insl
cmpsb
jl
fiadds
repz
ss
sbb
cmc
fisttpll
dec
xchg
jne
adc
jns,pt
and
lea
pop
je
lret
enter
cwtl
pop
push
or
push
sub
mov
int3
bsf
imul
cmpsb
inc
lock
cmp
xchg
pop
insb
cltd
push
mov
push
mov
jae
sub
jge
pop
pop
and
or
enter
les
out
xor
fidivrs
add
fcoms
lock
push
or
mov
pusha
fucomp
add
test
inc
cmp
imul
jne
and
push
icebp
pop
push
mov
jae
adc
lock
dec
add
push
adc
lret
pop
mov
fdivr
cmpsb
fnstsw
lock
push
dec
rolb
imul
out
iret
pop
mov
and
dec
sub
xor
out
repz
je
adc
mov
aas
int
fisttps
enter
sbb
push
sub
popf
inc
shll
xchg
cmpsl
push
mov
mov
and
stc
ret
add
or
jp
adc
xor
test
pop
cwtl
jecxz
int3
int
xor
lods
jmp
push
cli
mov
iret
sbb
jbe
in
lods
cmpb
ljmp
jge
movsl
and
loop
lcall
sar
push
test
push
in
jle,pt
stos
push
fcmovbe
rolb
or
gs
out
out
shll
outsl
out
out
lret
cmp
cmp
jno
mov
sub
pop
jno
fs
and
outsl
sub
loopne
sub
pop
cmp
inc
mov
aaa
fisubrl
andb
sub
inc
andl
mov
rcrb
or
push
mov
into
mov
xor
jae
sbb
fstl
push
je
add
les
subl
ja
in
sahf
iret
stc
jbe
mov
pop
sbb
pop
pop
jg
adc
andb
xor
ds
das
push
imul
jmp
popa
imul
in
daa
loopne
push
js
pop
mov
cmpsb
mov
sub
dec
inc
in
or
pop
popf
ret
loope
nop
fwait
fs
fsubrl
mov
jae
cmp
outsl
filds
lea
pop
mov
cmp
outsl
mov
lret
in
pop
outsl
dec
cli
out
inc
test
jo
in
sbb
and
cs
addr16
loopne
mov
mov
ret
je
mov
xor
int
mov
xchg
inc
jge
or
pushl
push
xchg
jno
mov
icebp
sti
inc
push
test
fwait
arpl
lock
ljmp
int3
mov
pop
push
cltd
cs
lea
and
cmp
push
ds
xchg
shr
xor
call
jmp
push
shr
push
xchg
test
addr16
rcrl
mov
daa
mov
jbe
sti
xor
ja
inc
sub
std
popf
mov
in
inc
jg
xchg
cmp
mov
adc
aas
dec
test
and
mov
mov
repz
mov
cmpsb
ja
inc
mov
popa
add
dec
inc
clc
daa
fucomi
sbbl
and
outsl
pop
mov
adc
arpl
inc
add
xorl
dec
arpl
cmp
adc
adc
repnz
testb
cmpsl
inc
dec
jo
call
jbe
es
or
add
inc
mov
mov
or
add
in
das
fsubrs
fstpt
hlt
in
mov
jno
fs
push
xor
or
inc
xor
dec
xor
stos
jbe
daa
inc
cltd
shr
rcll
mov
mov
sbbl
xlat
test
negl
add
sub
sbb
cmpsb
xor
addr16
sub
jle
inc
mov
push
sarl
sti
call
and
cmp
and
call
mov
mov
fdivrl
lea
out
enter
or
xor
and
pop
inc
add
pop
jle
jo
lret
cmp
out
sahf
test
push
xchg
push
and
push
push
inc
out
jno
jmp
pop
aam
jns
xor
xchg
test
pop
push
fists
in
mov
sub
mov
pop
add
sub
xchg
repnz
lret
leave
inc
pop
mov
ret
push
icebp
mov
push
cmp
lds
jg
xlat
scas
jl
test
pop
fwait
loop
ja
inc
cmc
mov
pop
adc
jnp
js
scas
inc
and
lods
push
add
cmp
test
cs
movsl
mov
cmp
sub
and
and
es
scas
je
hlt
out
jecxz
jo
scas
aam
xchg
adc
and
jns
jp
out
orl
ss
mov
imul
loopne
daa
mov
mov
add
push
lcall
outsb
push
loopne
adc
cld
pop
lods
pop
imul
lea
outsl
jp
dec
jns
movsb
cwtl
dec
fcomp
mov
je
adc
test
jnp
je
push
cltd
hlt
aad
cmpsb
ljmp
cmp
icebp
aas
mov
bound
mov
popa
push
cmp
push
loopne
jae,pt
cmp
xchg
xchg
imulb
lock
loope
addr16
aas
mov
in
stos
jo
push
mov
mov
add
xchg
xchg
jl
popf
testl
loopne
mov
cli
jp
pusha
lds
inc
cmp
out
lock
gs
and
sub
insl
mov
aad
sub
and
sbb
add
push
jg
mov
lods
push
ret
fbld
or
lret
mov
or
xor
rorb
pop
fldlg2
mov
and
jge
mov
sahf
ficoml
sub
pop
mov
push
shrl
pop
clc
clc
inc
fidivl
adc
dec
ja
or
fisubrs
into
fistpl
mov
aad
iret
adc
in
cmp
insl
icebp
daa
inc
sub
test
into
fwait
ja
subb
je
add
xor
adc
dec
jns
adc
add
enter
mov
outsl
pop
cmpsb
testb
ss
mov
and
or
sbb
jne
xchg
mov
pop
xchg
or
daa
stc
shll
loopne
in
int3
popa
shl
push
pop
fldcw
sarl
cltd
pop
sbb
les
aas
in
jge
sub
or
test
and
xor
inc
pop
pop
fcompl
lahf
icebp
or
jle
dec
aam
cmp
xchg
out
sub
mov
les
hlt
cmp
callw
jle
dec
or
adc
adc
movsb
sti
pusha
shl
lret
daa
insb
sub
dec
push
and
pop
lds
cmp
clc
aaa
mul
enter
out
dec
pop
push
clc
les
xor
stos
adc
add
nop
push
subb
inc
mov
jg
loope
adc
or
and
push
xchg
in
in
int
push
fidivs
inc
add
push
sub
jnp
xchg
xchg
add
push
jge
lods
lahf
cmp
mov
pop
pop
js
xor
ficomps
imul
sub
movsb
aam
or
pop
xor
mov
stc
jns
jecxz
call
cmpsl
fs
ret
insb
loope
in
mov
pop
jl
incl
fwait
jle
xchg
push
jge
sub
jbe
in
sti
or
mov
pop
stos
mov
pushf
stc
test
xchg
mov
lcall
mov
lods
or
loop
cmp
lea
rorb
insl
addr16
aad
inc
and
xor
xchg
fisubl
insl
sti
adc
ljmp
dec
int
xchg
mov
pop
inc
hlt
scas
std
loope
ja
push
sbb
adc
leave
mov
mov
and
aas
and
add
pop
add
je
ret
imul
sahf
sbb
or
js
sub
cmpsl
das
or
adc
cmp
push
fstl
js
fs
xchg
jb
repz
add
push
hlt
rorl
sbb
das
frstor
icebp
sub
out
lret
aas
mov
mov
lahf
inc
cmpsl
es
jmp
lahf
lahf
cs
lret
insl
mov
add
aas
jbe
mov
add
icebp
std
repnz
aas
or
push
scas
js
imul
cmp
jmp
jbe
call
jno
stos
pop
out
push
jp
mov
pop
aaa
adc
xlat
push
mov
hlt
add
sbb
loopne
andb
jp
mov
add
daa
js
or
aaa
adc
ds
loop
push
pop
add
mov
jbe
xor
cmp
xor
inc
sbb
inc
xor
push
xchg
inc
pop
pushl
aad
loopne
mov
pop
pop
pop
jae
dec
push
and
mov
rcrb
data16
out
dec
add
data16
pop
insl
stc
les
mov
shll
mov
sbb
test
inc
fdiv
sub
cmpsb
mov
rorb
mov
popa
sub
stos
aas
mov
xor
sbb
add
loop
xchg
pop
jno
cltd
icebp
sbb
mov
insl
out
aad
mov
inc
jecxz
fistps
vmaxpd
xor
sbb
pop
jmp
mov
push
mov
enter
xor
andl
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
call
jl
inc
pop
jl
ljmp
pop
xchg
lods
cmp
fisubrs
push
inc
sub
mov
or
in
lahf
dec
sbb
add
mov
cmc
mov
dec
jle
sub
fmul
into
in
push
lock
xchg
xchg
jmp
dec
in
movsl
sbb
arpl
mov
outsb
xchg
imul
pop
cmpl
cmp
shlb
lret
jno
jl
test
mov
jmp
std
push
pop
mov
js
jle
xor
leave
cmp
mov
sbb
sub
jmp
test
insb
clc
inc
mov
leave
pop
jle
cmp
iret
sbb
mov
push
dec
inc
stc
dec
int3
push
adc
stc
xor
cmp
mov
rclb
adc
adc
xchg
jnp
out
xchg
je
or
xor
dec
or
aam
jns
leave
ret
hlt
add
xchg
jmp
in
es
js
cmp
dec
sahf
leave
push
and
dec
jbe
loop
jnp
loope
cld
mov
stc
lods
cmp
repz
movl
loope
iret
sti
imul
in
adc
cmc
jbe
jbe
iret
and
mov
sbb
ja
push
loop
xchg
in
xorb
jp
iret
mov
idivb
adc
mov
xchg
loope
cmc
push
pop
xchg
sbb
ret
stos
call
and
add
xor
in
cwtl
jmp
jmp
icebp
jp
mov
sbb
mov
cmp
xor
rol
sub
clc
or
repz
cmc
mov
pop
sbb
popf
xchg
jecxz
pop
pop
mov
cmp
inc
pop
jl
push
pop
iret
inc
cltd
je
outsb
cwtl
xchg
jmp
call
lret
xchg
enter
std
lcall
dec
cltd
add
es
mov
push
aas
inc
shll
push
or
dec
or
les
int
jb
pop
into
xorl
ffree
xchg
fidivrs
add
cmp
xchg
test
inc
xorb
mov
sbb
out
lahf
call
inc
enter
xchg
xlat
and
outsl
cmp
shlb
scas
push
jnp
mov
push
lret
rorl
jns
call
lret
pop
and
outsb
in
test
lret
inc
mov
pop
mov
sub
dec
push
outsb
sbb
sbbl
gs
aas
jl
pushf
or
jne
iret
loop
adc
cmp
adcl
xchg
cwtl
insb
lock
jb
inc
jnp
or
jle
movsl
xchg
mov
xor
je
sub
mov
mov
std
in
subl
aaa
inc
lcall
mov
out
jno
movsl
inc
std
xchg
jbe,pn
add
sbb
xchg
mov
pop
leave
int3
jl
sbb
fs
jb
iret
cmp
jecxz
xor
push
sub
sbb
sti
inc
pop
xchg
mov
and
adc
cmp
jg
negb
inc
fs
stc
cli
cmp
pop
adc
pop
xchg
xchg
or
mov
stc
adc
cmpsb
int
ja
add
sbb
cmpsb
xchg
adc
cmp
or
stc
nop
xchg
sbb
jle
in
dec
dec
push
cmp
push
aaa
iret
adc
push
xorb
mov
sbb
mov
mov
int3
sub
or
pop
sti
push
jmp
ja
popa
pop
nop
jmp
lea
cltd
sbb
dec
jl
mov
pop
shrb
cmp
daa
scas
xor
jecxz
push
nop
clc
lret
or
daa
mov
loopne
xchg
in
out
add
int3
fxch
popl
or
xor
jmp
das
pop
je
push
pop
arpl
mov
dec
leave
mov
sbb
sub
fstp
mov
mov
dec
xchg
fcmovnb
adc
daa
lret
push
mov
push
pop
in
and
xor
js
in
sbb
xor
fcmovnbe
xchg
or
and
sbb
xchg
pop
cmp
mov
arpl
mov
lcall
cmp
jl
add
imul
adc
xchg
test
lods
pop
xchg
clc
aad
push
fsubl
scas
daa
into
dec
sbb
sar
cmpsl
mov
cmp
adc
cmp
add
lods
fisttpll
dec
add
pop
clc
mov
into
push
out
cli
les
pop
mov
mov
pop
and
pusha
inc
into
enter
mov
and
mov
pop
aas
push
gs
std
jb
mov
mov
stos
mov
and
insl
adc
xchg
scas
cmpsl
push
je
aad
ret
cmovbe
dec
std
fidivrs
imul
or
mov
pop
in
dec
adc
mov
add
imul
cmp
shlb
xchg
ljmp
sub
or
add
shrl
push
fldenv
dec
bound
add
mov
cltd
lods
popa
mov
pushf
jae
push
xlat
cltd
dec
push
jge
dec
push
addl
xchg
scas
adc
mov
std
or
lds
xchg
mov
cmpsb
jb
pusha
or
fadd
pop
pushf
popf
sbb
dec
loop
dec
mov
lahf
dec
mov
push
push
xor
push
sub
loopne
sub
dec
into
ds
and
insb
jbe
mov
cmpsl
data16
sub
add
dec
inc
ja
pop
xor
inc
sub
incl
sub
or
mov
rcrb
mov
aaa
xor
in
xchg
adc
ljmp
ljmp
sti
repnz
add
ret
test
das
mov
mov
dec
scas
adc
dec
js
loope
mov
jmp
xor
jne
jo
inc
andl
mov
or
and
sub
les
xor
pop
mov
cs
cmp
jg
xor
xlat
ret
jmp
jb
sub
in
filds
ret
stc
imul
gs
pop
inc
add
sub
imul
getsec
xchg
out
cmp
and
mov
in
mov
sbb
xlat
vsubsd
stos
testb
add
loope
in
xchg
jmp
dec
pushf
stos
fst
jnp
mov
mov
lods
js
cmp
mul
xor
mov
les
pop
adc
idivb
or
or
mov
mov
xorb
cltd
sti
dec
cmpsl
popa
sbb
jle
dec
mov
xchg
nop
js
mov
hlt
repz
loope
andb
das
add
je
or
inc
repz
je,pn
fmul
mov
xlat
dec
flds
lcall
cmpsb
dec
mov
push
jge
cmc
jnp
gs
loope
andl
mov
dec
or
lds
aas
pop
into
fsubs
rorb
out
add
and
rcl
dec
and
cli
imul
adc
movsb
loop
shlb
insb
mov
inc
leave
cmp
inc
dec
and
add
fcmovb
and
xorb
jecxz
mov
mov
roll
sub
sub
sbb
inc
sub
test
pop
lret
push
jns
nop
cs
int3
jg
mov
addr16
jo
add
shrl
jnp
arpl
into
mov
das
dec
int3
enter
in
out
popf
jp
dec
jl
clc
mov
lea
cmp
out
out
test
pop
sbb
xorb
inc
jg
mov
add
popf
push
mov
imul
cmc
aaa
xchg
aad
lret
lahf
pusha
mov
insl
adc
push
cmpsl
outsl
es
andb
push
cmp
jg
xor
jno
rorl
jbe
xor
nop
nop
adc
in
sti
add
and
in
jae
xchg
dec
mov
push
fists
pop
sub
push
stos
out
adc
movsl
and
addr16
sbb
out
icebp
test
ret
les
out
and
sahf
push
add
sbb
mov
pop
cmp
and
pusha
xlat
lods
mov
into
inc
adc
lods
test
sbb
jns
pop
call
fwait
jae
mov
jo
sub
imul
into
aam
ret
jbe
test
out
test
mov
push
ja
xor
fistl
or
push
add
mov
bound
imul
mov
sbb
adc
jecxz,pn
mov
jge
pushf
test
mov
push
sbb
push
xor
inc
sbb
sahf
or
cld
arpl
cli
sbb
pop
inc
mov
lahf
faddp
xlat
outsb
push
jae
mov
dec
cli
jne
popf
ret
and
or
or
dec
inc
adc
pusha
mov
push
dec
inc
mov
jp
cwtl
aaa
mov
and
filds
xor
cmp
imul
ljmp
ficoml
mov
lea
jge
lcall
jg
ss
inc
call
jp,pn
popf
shlb
in
subl
cmp
out
notl
sbb
and
or
sbb
lock
in
push
and
push
push
in
xchg
orl
iret
sub
lcall
mov
dec
pop
cld
mov
jp
xchg
mov
push
out
jle
and
xchg
pusha
aam
pop
data16
inc
fistpl
in
push
add
fnstsw
ret
fneni(8087
rclb
dec
lods
push
mov
add
lret
insb
pop
push
mov
outsl
cmpsb
das
pop
cmp
stos
ja
faddp
mov
int3
pop
and
mov
add
sbbl
into
mov
je
int
lds
and
xchg
inc
xchg
inc
fwait
and
lret
xor
cmc
out
movsl
dec
sbbb
out
mov
xchg
inc
idivb
cmc
push
sbb
jo
fdivp
mov
ljmp
lods
jne
sub
push
arpl
cmpsl
nop
andb
jb
test
mov
loope
ja
ss
loop
leave
adc
add
add
pushf
and
sti
inc
pop
sbb
dec
fbstp
fimull
dec
mov
dec
andl
jnp
cwtl
iret
outsl
movsl
push
mov
xor
sub
aaa
cmp
mov
pop
in
insb
xor
fcoml
inc
pop
jmp
shll
or
sbb
test
dec
popf
incb
cmp
sbb
jecxz
dec
jb
pop
iret
lret
loope
fbstp
dec
syscall
cmp
mov
push
arpl
and
aas
insl
lods
push
test
xchg
pop
mov
xor
inc
sub
jl
outsb
outsl
in
jge
mov
stos
inc
inc
rcrb
movsb
cmc
jmp
jne
jp
inc
mov
add
mov
icebp
xor
jno
iret
lcall
lret
jno
data16
gs
and
push
test
stc
push
inc
jle
in
sub
cwtl
repnz
movl
mov
test
or
repnz
and
hlt
mov
fwait
inc
aaa
mov
xchg
aaa
idivl
adc
pop
cvttps2pi
push
or
cmpsl
ds
sub
aas
mov
push
lods
cs
mov
add
lods
pop
jnp
xor
push
out
push
cmp
push
jno
mov
xor
sub
sub
push
test
filds
jle
lock
pop
mov
add
jb
cmp
jnp
mov
lret
es
mov
sbbb
cmp
adc
lret
cmp
pop
cmpsb
xchg
mov
orb
lcall
in
sti
xchg
ss
sbb
or
cmpsl
dec
xchg
mov
sbb
pop
xchg
jo
xchg
call
imulb
out
scas
into
pop
ja
push
pop
mov
mov
pop
mov
lret
dec
clc
adc
in
inc
mov
mov
push
sti
nop
dec
out
mov
inc
sub
movsb
xor
dec
pop
dec
mov
cmp
mov
cmc
xor
cli
fcomip
js
nop
mov
dec
test
repnz
rcll
call
pushf
pop
jae
xor
ret
daa
inc
lcall
adc
xchg
test
dec
sbbl
adc
fcomps
sbb
loop
or
xchg
out
aaa
pop
mull
stos
aad
push
test
xchg
sub
and
mov
jle
fidivrs
outsb
xchg
jne
xor
in
sahf
push
das
mov
inc
out
push
aas
push
xor
js
adc
sbb
in
mov
xor
cld
fmul
sbb
mov
or
mov
sbb
and
test
xchg
jmp
in
xor
lret
xorb
jnp
into
xchg
stos
fmul
mov
pop
xchg
fs
imul
jns
jb
movl
aam
pop
aas
out
dec
nopl
test
fmull
fnstenv
rolb
mov
pushf
imul
fldenv
sbbb
test
ja
out
mov
fmuls
enter
or
call
xor
mov
cltd
mov
cmp
les
add
icebp
inc
adc
shrb
repnz
inc
in
mov
and
mov
in
fmuls
int
mov
pop
lea
push
cmp
in
dec
cli
cmp
sbb
push
sub
pop
push
mov
out
dec
mov
mov
or
xor
stc
sti
rorb
in
mov
test
xchg
sub
and
lret
jo
mov
xorl
out
sub
rcrb
push
xor
rcrl
add
push
push
adc
xlat
pop
sbb
and
int
ficompl
xchg
dec
stos
sub
push
dec
push
scas
leave
cmp
cld
push
mov
xchg
dec
cmp
mov
sbb
fldenv
fidivrs
imull
outsl
sbb
sbb
xchg
mov
test
or
lcall
loope
mov
sbb
cmp
es
sbb
mov
push
rolb
pop
pop
xchg
sub
inc
and
or
sbb
jbe
xchg
sahf
in
pop
pop
into
dec
or
stc
stos
mov
mov
scas
loope
cmp
pop
xor
jo
jl
sub
pop
mov
int3
mov
xor
pop
sarl
or
rcll
loope
xor
or
and
push
jmp
or
stos
push
jns
fnstenv
push
cmp
repz
sti
jp
pop
stos
cmp
ds
sbb
popa
cmp
ss
test
loope
sub
pop
pop
sbb
shrb
popf
ds
loop
dec
mov
mov
pop
adc
pop
push
xchg
mov
jmp
jg
jge
jne
sub
dec
sbb
lds
mov
stos
push
repnz
cltd
clc
inc
das
movsb
dec
enter
addl
jecxz
fisubrs
pusha
iret
mov
ljmp
xor
repz
jmp
es
cmp
sub
gs
xchg
cmp
add
pop
enter
mov
call
mov
inc
lret
ds
fisttps
loope
xchg
in
mov
aam
mov
xchg
xchg
push
mov
cmpsb
xlat
jle
pop
mov
jo
jg
cwtl
xchg
dec
push
or
nop
jae
into
rcl
pop
pop
mov
push
push
cld
dec
gs
lods
add
fcmovnu
and
fldt
out
lret
mov
insb
cld
jno
dec
aad
jae
pop
or
test
dec
inc
std
daa
push
cmp
lahf
fnstenv
add
aas
sub
cmp
mov
roll
in
lods
mov
cmpsl
mov
sbb
clc
in
jge
into
pop
cmc
pusha
xcrypt-ofb
cmpsl
stos
pushw
fidivrs
push
pop
mov
out
push
lds
push
movsl
sub
out
push
push
lods
pushf
adc
cli
daa
mov
insb
adcl
add
sub
clc
sub
mov
lea
sub
mov
jb
xor
jo
jb
xchg
roll
movb
out
push
add
and
pop
sub
icebp
mov
xchg
cmp
mov
shr
or
cmp
xor
int3
aaa
jmp
fsubr
mov
add
sahf
imul
movsb
mov
jmp
sbb
dec
std
jmp
aam
push
xchg
push
fisttps
mov
das
imul
in
xchg
test
mov
inc
or
mov
sub
mov
cld
pop
addb
xor
shr
mov
adc
insb
std
shl
jl
pop
pop
movsl
jbe
pop
dec
sti
jecxz
mov
xchg
rorl
or
mov
mov
sub
cmp
out
add
sub
add
testl
mov
dec
out
xlat
adc
cltd
fmuls
test
js
scas
aas
mov
lods
fldcw
loope
sbb
cmc
adc
popa
rorb
ret
mov
cli
stos
jle
mov
rcll
jb
sub
push
add
shlb
push
xor
push
bound
mov
push
test
aaa
out
sbb
push
push
pop
cld
fidivrs
xorb
push
insl
cmp
jmp
das
imull
pushf
pop
in
std
push
dec
xchg
mov
lds
sbb
push
testl
sti
or
inc
mov
psubsb
jb
pop
push
scas
ja
inc
or
adc
cmc
mov
xchg
roll
ret
mov
pop
loopne
in
lods
inc
pop
cmp
imul
pop
mov
daa
cltd
jnp
ret
je
out
fistpl
dec
or
das
sub
data16
xor
fmull
jae
mov
dec
push
jle
in
and
mov
mov
adc
add
mov
pop
loope
cs
mov
xchg
aam
imul
jne
sub
insb
iret
repnz
inc
clc
mov
xchg
enter
jo
loopne
scas
push
dec
popa
lahf
aad
fisubrs
int
add
adc
pop
sar
das
orl
insb
in
pop
push
jg
les
push
push
add
fdivrl
idivb
test
mov
out
cld
mov
cs
fsubp
icebp
orl
sub
movsb
pop
in
enter
test
dec
lcall
fistpll
adc
popa
dec
andb
push
inc
addl
add
mov
aaa
and
jg
cmpsl
frstor
jge
xor
jno
adcb
cmp
add
inc
add
test
in
sbb
sub
js
mov
xchg
adc
loop
shl
sub
in
shll
arpl
pop
in
dec
cmpsl
xchg
ss
enter
pop
js
dec
pop
rorl
xchg
mov
and
push
xchg
mov
lock
mov
sub
lock
adc
jns
pop
pop
and
adc
push
dec
ret
daa
push
mov
push
imulb
icebp
mov
push
sbb
pop
inc
in
xchg
and
jg
lcall
mov
lahf
jecxz
dec
push
jae
xor
add
dec
ret
and
clc
jnp
push
lcall
shrl
adc
sub
sub
sbb
mov
cmp
fnstcw
icebp
sub
jnp
and
adc
call
mov
mov
fidivrl
test
mov
fs
push
ret
and
test
into
mov
xlat
mov
push
stos
xchg
insb
adc
clc
popf
rcll
and
sub
push
lcall
rcrb
xchg
push
push
in
inc
leave
adc
lods
push
mov
jnp
cwtl
int
ds
or
sub
inc
pop
add
or
sub
xchg
lea
mov
add
stos
push
sbb
jne
mov
xchg
int
pop
jle
push
inc
rorb
dec
xchg
les
shrb
sbb
mov
cmc
mov
andl
adcl
adc
inc
mov
lds
orl
iret
scas
sub
lock
jns
popf
sahf
cmpsl
xchg
jmp
fidivrl
jno
sub
roll
dec
jns
xchg
mov
adc
stos
cs
adc
xchg
or
shr
pusha
mov
fsubl
xchg
imul
stos
pop
mov
outsb
and
iret
mov
in
movsb
repz
out
movb
adc
jp
mov
ja
test
mov
sbb
js
das
sub
enter
ficomps
mov
xchg
adc
cs
enter
std
mov
add
and
dec
push
stos
xchg
cmp
jb
xchg
addr16
xor
in
pop
arpl
mov
mov
popf
ljmp
pop
loop
xor
clc
mov
xchg
add
jne
mov
dec
push
movsl
aas
xchg
lods
insl
in
stc
insl
cmp
mov
fisttpl
pop
outsl
pop
sub
movsb
add
xor
lds
jo
cli
cmc
xchg
pop
pop
cmp
movsb
push
aas
ffreep
lods
adc
rolb
out
mov
cmp
mov
test
lock
mov
repnz
mov
dec
sbb
and
test
and
jb
push
mov
pusha
push
pop
jbe
movsb
cmp
into
pop
cwtl
xor
cmp
jne
xor
lock
sub
push
popf
mov
mov
pop
add
sub
and
dec
out
xchg
sub
sarl
or
movsb
adc
xor
pop
lahf
push
sub
xor
outsl
and
lods
jo
push
gs
add
cmp
fists
repz
xchg
jge
out
push
mov
sti
testl
sbb
sub
lahf
mov
mov
pop
mov
js
fwait
ret
mov
cwtl
and
xor
cmp
pop
gs
imul
out
mov
mov
lods
into
test
dec
mov
hlt
cmp
aas
xor
or
fisttpl
pop
repz
mov
cmp
mov
insb
loop
divb
addr16
mulb
push
data16
aad
cmpb
sub
aam
arpl
pop
pop
loope
mov
repz
xor
imul
add
lcall
iret
add
mov
ret
cli
mov
mov
dec
fsub
sub
movsb
add
inc
mov
and
inc
lahf
pop
push
aam
xor
in
lds
leave
pop
xchg
mov
lods
cs
leave
incb
push
mov
or
cmp
shlb
lock
mov
fwait
xor
xor
pop
xor
mov
mov
shrl
int3
cmpsl
fisubrl
and
push
and
push
push
sarb
jne
aas
movsl
xorl
stos
push
mov
push
je
in
xchg
pushf
jne
inc
sub
cmc
pusha
cli
mov
sbb
lret
rorl
testl
xchg
loopne
gs
fstl
in
gs
sub
xor
xor
xlat
dec
lods
jge
xor
movd
cltd
cmp
cmp
mov
pop
pop
cltd
iret
cmc
sbb
aam
btc
iret
inc
fnstenv
mov
das
jl
pmullw
into
mov
cmp
dec
scas
jp
call
dec
xor
add
cmp
lcall
inc
out
adc
sbb
frstor
push
or
hlt
enter
ljmp
mov
push
ficoms
pop
orl
fcoml
push
rorl
sub
jl
scas
sti
mov
pop
add
aaa
inc
cltd
jns
sbbb
enter
dec
shlb
inc
jecxz
jb
inc
push
test
xchg
push
mov
popf
adc
jno
sarl
icebp
sbb
push
loop
adc
push
movsl
ret
xchg
jo
pop
ljmp
stc
dec
jg
out
and
repz
adc
dec
test
lods
or
repz
mov
fildl
xchg
nop
mov
in
xlat
mov
and
jo
add
mov
add
pop
mov
sbb
repz
syscall
push
push
das
lods
mov
hlt
ds
rolb
ret
scas
xor
dec
test
sbb
enter
push
imul
mov
outsl
es
test
dec
and
in
and
xchg
inc
xlat
sbb
xlat
mov
lds
mov
cmpsl
dec
out
out
aas
negl
sub
push
out
leave
out
fnstenv
gs
xor
lret
push
mov
adcb
xchg
pop
aad
xchg
push
mov
sbb
xchg
insb
mov
aas
lods
mov
cmp
cmp
sub
data16
xchg
jp
mov
pop
push
adc
lret
mov
cmpsb
lahf
push
jbe
xchg
xor
or
shlb
sub
lret
arpl
dec
push
arpl
xor
mov
inc
lods
add
inc
mov
push
mov
lret
cmp
pop
js
out
movsb
cmp
xlat
ret
inc
imul
jns
and
inc
add
cmpsb
adc
ret
in
fcompl
lods
push
loope
and
loopne
push
jae
clc
sub
cmp
ljmp
mov
cmp
lock
xor
dec
mov
jns
push
adc
fiaddl
sub
or
jmp
imul
add
pop
cltd
aad
gs
test
rcrl
aaa
xlat
mov
popf
jns
xor
stc
or
std
sbb
lock
mov
lret
xchg
adc
or
notl
pop
sub
out
rolb
cmp
adc
mov
push
ret
sbbl
imul
rcl
les
jnp
lret
pop
push
mov
push
aam
sub
push
in
rorb
adc
cli
xlat
nop
dec
or
loop
push
popf
imul
cmp
mov
enter
aas
dec
push
lods
mov
push
fldcw
sar
lds
movsb
sbb
mov
push
add
mov
pop
sub
mov
data16
pop
cli
in
dec
test
jge
mov
lea
dec
in
mov
shrl
pop
push
pusha
jle
into
loop
cmovb
lahf
rol
sub
jp
int
cmp
fistl
ret
ret
nop
mov
or
iret
fcoml
orl
mov
jle
jno
sbbl
mov
sbb
les
jbe
js
ret
jne
jnp
aad
jmp
fiaddl
fs
lret
mov
and
mov
pminsw
mov
negl
aam
lods
fwait
sbb
xchg
mov
jl
into
test
sbb
loopne
lret
pusha
push
mov
mov
mov
pop
jb
inc
and
sbbl
push
add
fimull
pop
sub
mov
mov
sbb
dec
push
cmpb
ss
jmp
cwtl
push
sti
fistpl
mov
sub
adc
or
aam
stc
push
iret
mov
mov
jg
push
jns
icebp
rol
shll
cmp
cmp
int3
jnp
cli
jmp
sbb
mov
dec
loope
lret
xchg
xchg
xor
pop
and
ret
push
xor
pop
cmp
loope
xchg
mov
imull
jo
stos
lods
int3
fiaddl
mov
mov
push
fwait
dec
inc
daa
imul
mov
popf
lret
mulps
jae
pop
dec
xor
dec
dec
or
in
aam
movsl
pop
in
xor
jbe
sti
xchg
inc
xlat
pusha
cltd
out
jae
hlt
push
sbb
dec
subb
jge
push
mov
jle
ret
sub
cmp
or
and
sub
adc
adc
mov
jle
pop
test
push
aas
stos
pop
lcall
inc
pop
int3
push
imul
xchg
sahf
les
mov
int3
pop
mov
inc
lds
and
jnp
lret
insl
fstps
xor
add
je
or
cmp
xchg
inc
jmp
popf
push
pop
mov
outsl
mov
imulb
push
mov
fcoms
pushw
inc
in
xchg
test
mov
ss
xor
xchg
adc
fsubrs
jg
out
popa
jle
mov
mov
jno
cmp
pop
dec
mov
push
fisttps
jmp
jbe
shl
inc
int3
push
ficoml
xchg
loope
push
mov
add
repnz
push
das
movsl
xchg
inc
push
dec
enter
dec
xchg
ds
add
in
dec
push
loope
ss
push
mov
fcmove
xor
repnz
or
fldl
mov
sbb
xchg
inc
push
sarl
int
jg
loop
cltd
bound
inc
fstl
loope
stos
test
inc
out
loop
jg
test
ss
daa
loop
jecxz
dec
loope
inc
lods
movups
mov
and
dec
sbb
or
cmpsl
mov
mov
jmp
push
mov
sub
jo
xor
xorb
sub
add
push
xor
push
inc
in
shlb
push
jmp
add
xchg
push
mov
lahf
mulb
and
sbb
jne
mov
sub
or
in
jl
lret
mov
shrb
ss
ret
mov
jno
jl
push
or
aas
out
leave
sub
clc
xor
add
inc
push
push
clc
mov
daa
mov
sbb
sbb
insl
aaa
adc
sub
das
pop
andl
push
fimull
fucomi
add
add
cwtl
and
mov
outsl
and
mov
shlb
enter
mov
out
push
in
js
sbbb
daa
jnp
sub
mov
cs
imul
xchg
test
rcr
jnp
cmpsb
and
fsubl
xchg
neg
fbstp
orb
jae
arpl
sub
daa
shll
adc
push
pushf
icebp
or
push
mov
pop
in
orl
mov
popf
test
and
dec
scas
rcll
popa
inc
sbb
outsl
mov
mov
adc
fcmovne
ja
repz
pushf
or
roll
dec
jb
dec
mov
mov
jne
mov
pop
and
sub
fdivs
lds
hlt
shlb
xchg
test
leave
sbb
mov
mov
xchg
jle
fstp
and
pop
rol
out
scas
inc
lret
mov
mov
mov
rol
push
push
addr16
fmulp
ret
ficompl
addl
and
inc
dec
hlt
cmpsl
repnz
cmp
hlt
inc
jns
or
lock
cmpsb
inc
iret
scas
push
sahf
cmp
xor
xor
jno
add
test
push
mov
ljmp
push
mov
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
bound
shrl
dec
xchg
mov
xor
cmp
cmpb
xor
into
sub
mov
dec
adc
mov
or
xchg
lea
lret
ss
in
mov
sbbb
xchg
js
mov
out
into
movsb
lea
cmp
xor
pop
mov
je
loop
inc
or
pusha
lock
ds
ja
fnstenv
mov
or
ret
adc
add
mov
mov
jp
xor
das
sbb
lock
xchg
sahf
mov
cmc
or
mov
gs
dec
movsb
in
lret
push
in
mov
scas
dec
arpl
out
out
ljmp
and
xchg
cmp
pop
adc
adc
loope
push
enter
sti
cmp
and
cmp
sahf
sbb
cld
jne
mov
mov
inc
adc
mov
inc
daa
arpl
std
mov
rclb
icebp
addb
mov
and
iret
js
inc
mov
and
mov
lock
mov
add
jnp
cmc
mov
fstpl
les
xchg
pop
mov
jecxz
lret
repnz
dec
shl
sbb
inc
je
push
test
insb
sub
jo
std
xlat
stos
daa
aaa
fdivrl
mov
into
add
push
mov
bound
bound
pusha
arpl
out
testl
std
arpl
jp
jmp
pop
cltd
push
imull
push
jbe
pop
loopne
jo
xor
jnp
pop
lahf
addr16
enter
xor
daa
fiadds
mov
mov
mov
mov
adc
mov
mov
xchg
pop
icebp
jg
lahf
xor
iret
xchg
mov
fnstenv
in
mov
xchg
lret
fsub
fs
es
xor
ret
test
mov
jecxz
int
ds
aad
cmpb
xchg
xchg
repz
pusha
mov
push
add
outsl
pop
mov
lods
lea
adc
fists
inc
inc
fisubrs
cmp
aaa
or
cltd
pop
popf
push
test
ss
shlb
mov
lcall
das
lods
icebp
mov
orl
mov
cmpsb
xor
bound
mov
sbb
xchg
ja
mov
lcall
adc
sbb
cmp
xchg
lahf
xchg
sub
fwait
popf
iret
inc
ds
mov
les
mov
jae
les
in
push
xchg
aaa
data16
and
dec
pop
mov
adc
insb
ficomps
sbbb
adc
jo
push
xor
xor
dec
cltd
pop
cmc
push
xchg
fnsave
movsl
cmp
mov
sub
push
mov
lods
stos
adc
stc
mov
jl
inc
lret
xchg
pop
inc
mov
andl
mov
pusha
insl
jp
inc
dec
lods
jnp
bound
cmp
icebp
aas
test
in
stc
lock
loope
cli
push
hlt
inc
jns
or
sub
cmp
mov
or
jne,pt
mov
insl
andb
push
mov
std
repz
xchg
push
xchg
jmp
test
pop
push
and
movsb
in
push
xchg
testl
jb
sbb
jle
dec
jne
jae
jg
fnsave
shlb
mov
inc
sub
std
or
gs
pop
roll
or
adc
sub
out
jnp
mov
add
or
std
outsl
js
mov
fnstenv
push
sbb
test
fnstsw
push
pusha
inc
fwait
daa
xchg
bound
fistps
or
jp
push
movsl
xlat
adc
mov
sbb
sti
dec
cmp
not
or
clc
xlat
insl
andb
xor
fnstsw
dec
incb
add
ds
in
push
sbb
pop
xor
push
mov
dec
jae
xchg
pop
push
insb
ret
mov
subl
sub
or
mov
cmpb
add
xor
xchg
adcb
loopne
mov
pop
clc
out
test
add
fdivrs
call
mov
cmp
lahf
sbb
inc
icebp
rolb
gs
adc
sbb
jno
jmp
in
loop
push
inc
add
sub
xchg
fsubrl
cmp
out
or
mov
ljmp
aas
test
mov
cmpsb
sub
outsl
notl
andl
adc
mov
sbb
mov
push
dec
and
mov
into
imul
inc
pop
bound
lahf
fimull
frstor
data16
test
nop
rclb
pop
add
pushf
nop
iret
lods
outsb
movsb
pop
jae
mov
outsl
aas
out
inc
cmp
hlt
pop
je
pop
pop
adc
jae
push
test
sar
cmp
cmpsl
fwait
jp
and
pcmpgtd
popa
pop
push
les
mov
stos
cs
xchg
xchg
rol
repnz
fiaddl
pushf
jb
jb
mov
mov
pop
xor
test
cltd
jmp
xchg
test
lock
ret
xor
pop
push
mov
cmp
mov
rolb
sbb
in
lods
inc
rol
xor
ljmp
sbb
cli
in
jnp
cmp
mov
xchg
jnp
dec
sbb
mov
pop
pushf
inc
or
movsl
and
dec
cli
cmp
sbb
mov
rcrb
jbe
push
xor
aam
mov
or
scas
aaa
push
sub
popa
pop
mov
std
adc
adc
dec
loope
fnstcw
stc
scas
jp
sub
cmp
xor
sarl
or
mov
fistpl
sub
jge
adc
xor
sbb
mov
add
xchg
push
jg
loopne
hlt
mov
stos
mov
ds
add
xchg
sub
cmp
ret
pop
xor
mov
adc
test
xchg
loope
mov
aam
mov
push
cmp
out
ljmp
outsl
cmp
push
in
inc
outsl
pushf
pop
cld
xchg
lock
pop
cmc
imul
cmpl
pop
cmpsb
cmp
arpl
lea
inc
scas
aad
aam
inc
rol
fdivrl
cwtl
mov
jno
int3
addr16
jbe
mov
inc
in
pop
bound
scas
mov
ret
mov
jp
popf
jae
adc
or
into
inc
cld
pop
clc
adc
jl
adc
jnp
outsb
in
push
xor
jp
rcrb
ret
dec
fildll
cmp
pop
shl
add
lods
jae
push
push
sbbb
ffreep
mov
dec
xchg
lods
stos
daa
pushf
push
outsb
dec
imul
xor
decb
push
adc
xchg
fucomp
inc
aad
and
mov
jp
pushf
fistpl
addb
xor
das
cs
jg
std
aas
inc
inc
ja
jae
in
hlt
fimuls
mov
cltd
outsb
test
repnz
inc
and
dec
ljmpw
and
xchg
sub
push
lahf
jb
cltd
fstp
xor
subl
mov
je
adc
cmp
packssdw
mov
xor
lcall
jnp
inc
mov
cmp
sbb
xchg
xchg
jb
in
sub
add
mov
bound
dec
fwait
ror
push
adc
das
sbbl
xchg
out
pop
loope
call
flds
inc
jae
dec
aaa
adc
jno
js
or
or
ss
test
jmp
imull
mov
ds
arpl
test
call
sub
xlat
sahf
stos
stos
or
lea
mov
int
dec
arpl
xchg
mov
call
push
popa
push
aas
divb
sbb
mov
adc
xchg
jmp
add
daa
adc
and
mov
xchg
loopne
mov
cltd
jle
jp
pop
add
les
dec
enter
or
push
lcall
pop
inc
inc
icebp
fwait
xchg
movl
mov
mov
das
lods
jne
sub
xor
xor
iret
idivb
mov
repnz
rclb
xchg
fcoms
outsb
xchg
inc
mov
mov
mov
mov
pop
xchg
mov
xor
pop
pusha
mov
and
fnsave
gs
or
jo
int
jecxz
dec
stos
jecxz
or
xchg
adc
movsb
jle
sub
daa
test
inc
movsl
fisubrl
add
sahf
cmp
or
push
sbb
cmp
fistpll
bound
inc
fs
mov
mov
fucom
push
lods
in
mov
enter
xchg
jmp
sub
mov
iret
test
add
and
add
popa
or
xchg
xchg
cmp
adc
xor
scas
or
jg
xchg
and
jg
or
scas
fcoms
or
test
xchg
dec
ds
aas
jecxz
xchg
adc
test
pop
dec
xor
adc
rclb
pop
or
pop
inc
xor
fisubrs
sub
sub
ljmp
xlat
testl
jl
cli
ljmp
push
cld
int3
fistpl
or
hlt
repnz
and
pop
popf
and
mov
or
sub
or
push
clc
pop
das
mov
stc
cmp
xchg
add
dec
jne
lcall
jle
jle
enter
or
mov
clc
addr16
enter
xor
jg
jge
ret
add
stc
ss
cmp
mov
add
inc
stc
out
cmp
pop
enter
mov
and
jg
testb
jle
or
enter
add
out
dec
and
inc
insl
inc
lret
mov
jbe
xchg
cmpsl
xchg
mov
xor
adc
aaa
sar
or
mov
out
add
xchg
cmpsl
add
pop
cmpsl
pop
aad
mov
and
xor
hlt
cmp
add
into
cli
std
mov
fimull
mov
or
ficompl
sub
sub
lcall
inc
pop
mov
xor
mov
inc
add
ljmp
outsl
popa
je
push
jmp
or
jae
fsubr
rcrl
test
xor
fisubrs
aaa
shl
daa
mov
sub
hlt
pusha
and
jecxz
mov
dec
cmc
icebp
cmp
mov
or
data16
mov
popa
or
pop
add
push
in
imul
cmp
repnz
mov
iret
mov
sub
inc
out
xchg
dec
inc
int3
xor
repnz
in
cmp
lret
rcll
fcompl
mov
arpl
in
loop
hlt
lods
aas
xchg
aas
cmp
cld
mov
pop
gs
popf
add
sti
push
sbb
outsb
or
je
adc
xor
ret
ret
in
jns
adc
cmova
cli
jg
fcmovb
sub
jne
push
pop
push
sarl
mov
ss
mov
cmpsl
cmpsb
into
cmp
jmp
pop
jne
or
cwtl
inc
mov
jle
push
pop
xchg
test
push
and
xchg
std
insb
fs
rcrb
sbb
pusha
movl
jno
lea
lret
lods
push
sbb
xor
adc
mov
push
mov
fnstcw
pop
jge
das
cwtl
pushf
cmp
sbb
sbb
push
ja
das
mov
cmpsl
outsl
pushf
stos
arpl
cld
daa
movsl
cmc
bound
clc
xchg
int3
sub
ret
in
push
adc
xor
mov
cwtl
xchg
iret
aaa
popf
mov
jmp
or
and
add
call
mov
xlat
arpl
jg
dec
lock
cmc
dec
andl
call
mov
pusha
xchg
in
sbb
mov
pop
xchg
jg
idiv
mov
pop
push
mov
cmpsl
jbe
sbb
cwtl
and
adc
pop
xchg
pop
mov
xchg
rcrb
jecxz
in
cmpsb
mov
sub
add
inc
repz
mov
lods
jecxz
in
mov
adcl
or
daa
mov
sti
xchg
inc
shr
sub
pop
add
repnz
nop
addr16
xchg
pop
add
mov
lock
xchg
stos
mov
xchg
test
and
stos
cltd
leave
mov
adc
jmp
add
mov
jecxz
in
and
dec
repnz
shrb
shll
sbb
enter
jae
or
push
adc
dec
out
mov
cmc
or
shr
sbb
mov
and
lret
dec
add
cmp
jne
xor
sbb
lcall
and
pop
lods
push
out
pop
cmp
inc
pushf
mov
inc
xor
gs
sbb
mov
fbstp
shll
and
and
fstpt
or
pop
jns
roll
std
jo
xlat
ret
add
jl
dec
mov
lods
sub
daa
cwtl
addr16
add
ja
pop
mov
push
leave
cld
mov
je
push
and
xor
jecxz
jmp
mov
dec
sub
xchg
dec
lahf
out
push
dec
out
test
dec
test
dec
daa
int3
dec
aam
dec
push
incb
fucomp
sti
sbb
jg
mov
mov
mov
sahf
adc
xchg
jns
call
clc
aam
das
repnz
lds
in
jo
pop
xchg
mov
mov
lods
or
ficomps
push
pop
adc
lock
rolb
aad
enter
ret
dec
clc
lods
dec
sti
es
mov
jge
shrl
mov
xor
xchg
lret
or
cmp
push
pop
gs
add
in
mov
adc
xorl
mov
sbb
je
sub
fcomps
negb
jl
or
push
add
cmp
outsb
cmp
lret
movsb
out
sub
mov
inc
jo
mov
fistpll
insb
das
inc
sarb
ret
cmp
enter
enter
pop
push
lcall
mov
mov
jmp
imul
test
jecxz
gs
mov
dec
ret
stos
outsb
js
inc
mov
and
cmpsb
adc
cli
pushf
cltd
mov
rorl
pop
movsl
popa
jbe
jge
rcll
mov
add
xorl
scas
sti
jb
movsb
mov
add
inc
and
and
ss
mov
and
clc
mov
sbb
in
ja
clc
fwait
jp
push
loope
pop
pop
dec
test
lock
sbb
push
push
dec
arpl
and
jb
call
dec
adc
xor
test
mov
xlat
or
fbstp
pushl
cmp
test
insl
push
jne
jp
cmp
xor
adc
jne
dec
scas
addl
aam
and
and
movsl
sbb
fistpl
enter
dec
or
lock
jp
and
outsb
je
push
pop
push
shl
es
jo
push
xor
pusha
jns
leave
enter
and
push
and
insl
xor
mov
loopne
dec
imul
es
cltd
pop
out
loope
pusha
sbb
jp
out
sbb
fsubrs
std
rcl
hlt
ss
mov
dec
iret
out
jae
pop
sbb
jns
pop
not
mov
cwtl
outsl
lds
mov
or
mov
lock
pusha
xlat
sub
adc
sbb
mov
nop
clc
aas
ds
mov
leave
cmpsl
inc
loope
xchg
js
adc
ror
fxch
je
jno
lcall
gs
je
divps
insb
push
xchg
cmpsb
test
js
notb
or
ds
or
stos
mov
pop
inc
sbb
lods
push
ret
cmpsl
inc
sub
in
or
jmp
xor
inc
sub
movsb
sahf
cmp
popf
mov
cli
pop
xor
xchg
dec
xor
outsb
insl
dec
lods
scas
out
push
ljmp
out
scas
addr16
repnz
shlb
sub
jmp
push
xor
mov
push
jb
pushf
mov
xor
jmp
jecxz
subl
icebp
mov
in
or
mov
xchg
das
repnz
js,pn
test
fs
in
cs
int3
mov
aad
xor
jmp
imul
sbb
adc
stc
sbb
scas
add
dec
mov
lock
out
leave
rcrb
dec
cmovne
lahf
sub
mov
in
mov
sub
sub
mov
pop
jmp
nop
shlb
mov
mov
jp
and
push
pusha
dec
cld
jmp
or
call
xor
into
cmp
push
add
lret
push
subl
or
es
cld
cmp
dec
xchg
cmp
inc
sbb
clc
sbb
add
adc
aam
into
in
shlb
cmpsl
clc
stos
pop
out
ds
pop
mov
pushf
bound
das
pop
dec
hlt
pop
cmp
std
push
xor
push
xchg
cmpsl
fnstsw
es
insl
dec
push
stc
rclb
mov
jnp
int
mov
pop
imul
test
fs
push
push
dec
daa
sbb
testb
clc
mov
fdivrs
dec
cltd
pop
fisttps
push
in
fidivrs
nop
les
cld
lds
bound
lods
jno
mov
insb
cmpsl
outsl
lock
repnz
adc
or
roll
lahf
xor
xchg
and
cmpsl
ret
xor
xchg
xchg
mov
aad
xor
adc
or
pop
pushf
mov
dec
xchg
push
les
push
xchg
scas
jo
mov
mov
dec
outsb
xchg
jae
pop
pop
ds
and
lock
dec
sti
pop
dec
out
ficompl
mov
movsl
lods
and
repnz
push
mov
movsb
sub
gs
dec
xchg
push
pushf
pop
and
in
jl
loop
imul
imul
sti
iret
and
iret
into
jecxz
jp
sbb
push
int
jo
push
fisttpll
in
shr
mov
jnp
mov
pop
loop
cwtl
xchg
jg
call
mov
out
pop
sti
add
or
setbe
inc
loopne
push
xchg
mov
enter
lds
jbe
xlat
pop
pop
sub
dec
cmp
adc
mov
mov
inc
or
sub
sub
xchg
jno
pop
movsbl
adc
xor
es
sub
int
xlat
adc
insl
movsb
adc
loopne
repz
and
cwtl
mov
bound
mov
xchg
jae
loope
les
incb
idivl
test
cmp
jg
popf
repnz
test
pop
xchg
dec
pop
jne
test
int
jl
mov
and
mov
nop
fstl
outsb
and
xchg
cwtl
pop
and
cmp
mov
in
inc
movsb
xor
in
ret
fstpt
push
or
popf
jmp
sahf
xchg
or
dec
push
leave
and
mov
dec
mov
mov
call
xor
xchg
call
outsl
aas
sub
mov
push
sub
or
js
insl
sub
mov
inc
ficomps
stos
or
dec
inc
fstpl
dec
cmp
inc
inc
mov
and
xor
mov
and
push
mov
stos
pop
lock
add
test
push
and
divl
sub
jne
xor
jmp
push
nop
or
xchg
lcall
out
mov
and
std
das
jecxz
ljmp
cmp
testl
cmpl
mov
xor
and
push
jns
dec
or
add
shlb
mov
leave
sbb
in
cmp
xchg
std
or
cmp
dec
mov
ret
mov
sub
cwtl
xor
subb
cmp
cmp
rcll
jbe
popa
pop
sbb
enter
bound
dec
scas
cmp
sbb
pop
xchg
jno
ljmp
popf
clc
cmp
pop
mov
and
and
lds
mov
or
sbb
jno
mov
stc
gs
jle
push
lret
outsb
jnp
sub
xor
or
fldcw
jno
adc
xor
dec
loop
movl
xchg
hlt
movsb
and
loope
push
ljmp
sub
mov
into
test
mov
dec
xchg
push
call
idivl
mov
add
xlat
test
mov
xor
jb
imul
xorl
mov
leave
jne
movsb
sbb
stos
pop
pop
bound
jb
sub
mov
or
int3
xchg
scas
and
in
xor
xchg
mov
stos
popf
jno
jmp
push
les
cmpsl
and
push
cli
popf
sbb
add
inc
mov
inc
test
xchg
mov
es
ds
sbb
sbb
fldt
mov
or
xor
cmp
cli
push
xor
cmp
mov
push
inc
insb
int
sub
cmp
mov
testb
fldenv
test
test
mov
push
cltd
in
movsb
inc
dec
and
dec
mov
int3
in
shlb
outsb
sbb
pop
push
xor
xchg
lds
into
add
rcrl
or
xor
roll
jbe
imul
repz
pop
pushf
dec
out
out
in
jb
add
test
test
adc
scas
xor
jae
and
ja
inc
in
rcrb
sarb
cwtl
adc
add
dec
imul
lods
ja
lahf
in
movsl
adc
popf
jo
int
pop
test
test
repnz
aad
and
pushf
jo
cmp
loope
clc
and
jp
add
xchg
jns
scas
xor
sub
dec
xor
mov
js
adc
jno
popf
icebp
icebp
mov
jmp
cmp
scas
cmp
bound
dec
gs
lods
mov
jnp
aam
jb
pop
xchg
sti
mov
inc
stc
add
jno
shlb
ret
ja
xchg
outsb
sub
es
pop
add
push
testl
lea
sbb
mov
mov
rcrb
dec
jb
or
and
xchg
fidivrl
xor
subl
aad
rcrl
xchg
sbbl
cmc
cmpsl
mov
call
xchg
test
scas
mov
push
jl
es
popf
xchg
xor
jnp
or
and
dec
push
test
and
pop
cld
xchg
or
push
lods
in
fsubrs
mov
popa
and
or
lods
dec
pop
int
out
inc
ret
loope
mov
mov
dec
das
push
mov
cmpl
dec
jge
pop
stos
cmp
jp
ljmp
pop
aas
fwait
xor
xlat
sbbl
orl
cmpsl
adc
loope
mov
sbb
cmp
shll
and
leave
cwtl
fidivrs
inc
and
movsb
pop
scas
popa
movsl
aas
leave
mov
mov
or
cmp
sub
cli
fisttps
mov
movsl
mov
lds
mov
dec
or
mov
push
adc
dec
adc
pop
inc
clc
nop
incl
xchg
std
mov
ret
mov
sbb
inc
es
cmp
mov
dec
decl
mov
popf
dec
scas
sti
fwait
cmp
mov
aad
cld
inc
mov
enter
dec
shll
loope
insl
imul
mov
xor
lcall
std
data16
imul
xchg
shrl
imul
mov
mov
pushf
cmpsl
pop
data16
iret
mov
sub
callw
cmpb
and
jne
and
sti
stos
mov
inc
lods
ficomps
and
fistpll
imul
push
xor
ret
jge
mov
aad
add
jmp
cmp
call
cmp
jge
ret
int3
int
and
jno
mov
adc
xchg
mov
push
push
sbb
add
loope
jb
aam
mulb
aaa
push
out
pop
xchg
shll
push
cltd
sbb
cmp
int3
mov
into
test
addb
hlt
pop
ror
es
insl
xor
push
pop
ret
pop
jp
sub
cmp
sarl
mov
out
sub
rcl
lea
jecxz
mov
sysexit
js
insb
movsb
sahf
pushf
pop
sbb
dec
test
je
push
xchg
enter
inc
add
cli
shl
aad
mov
and
mov
test
or
xchg
cmp
xor
pop
push
loop
rcrb
mov
xchg
mov
fldenv
enter
ret
adc
inc
pop
sahf
les
adc
ljmp
into
xchg
push
mov
movsb
test
es
lock
lods
loopne
inc
adc
mov
xor
hlt
add
jno
xor
xchg
mov
rcl
jecxz
pop
xchg
cli
popf
mov
push
data16
sbb
mov
cwtl
xor
out
flds
push
add
sbb
or
call
shl
xlat
test
insl
adc
hlt
xchg
push
icebp
dec
movsb
sub
fst
hlt
sub
test
xchg
pop
clc
fdivrs
sub
adc
mov
inc
jge
test
das
push
fucom
call
xchg
or
or
aaa
pop
cmpb
scas
mov
jb
gs
rolb
int3
dec
scas
sbb
cwtl
pop
mov
stos
ss
test
add
pop
pop
lods
add
dec
fs
jmp
jmp
xlat
jnp
es
nop
push
or
dec
stc
cld
sub
mov
add
aad
aaa
adc
es
int3
movsl
repnz
je
add
shll
mov
xchg
xlat
rorl
inc
jle
cmp
iret
dec
inc
ss
push
mov
pop
adcl
and
sbb
pop
jns
sbb
add
push
pop
and
cmp
pushf
adc
loopne
jae
dec
push
notl
add
js
loop
mov
sbb
push
mov
xchg
jecxz
push
stos
push
dec
push
enter
and
repz
fisubs
popf
stc
push
adc
lock
clc
pop
and
dec
out
xor
sbb
xchg
lock
ret
mov
pop
cmpsl
xchg
cli
push
andb
xchg
popf
jnp
je
adc
xor
cld
xor
jo
pop
jns
stos
add
push
mov
cmc
repnz
adc
add
cmc
mov
mov
mov
lods
or
fnsave
push
sbb
mov
push
pop
dec
lock
xor
mov
repnz
inc
push
push
mov
xchg
pop
mov
into
cmp
movsb
or
rcrb
mov
mov
pop
shr
pop
stos
mov
or
lods
fst
sbb
push
mov
int
mov
pop
andl
push
push
outsb
insb
in
mov
jnp
jp
add
push
adc
clc
xor
cmpsb
add
ret
movsl
lcall
xchg
aad
pop
int
andb
jl
cmpsb
mov
out
iret
out
jmp
jbe
in
in
xchg
aas
shlb
lds
sbb
xchg
jbe
push
aaa
stc
pop
cmpsb
mov
in
fxtract
mov
jp
repz
pop
cmp
ds
pop
lea
aas
mov
mov
data16
mov
xor
mov
mov
punpckhwd
dec
lcall
out
and
xchg
outsl
movsl
push
inc
das
and
notl
sub
pop
fwait
push
in
les
xlat
mov
fistl
adc
notb
cmpsb
or
cmpsb
push
jecxz
cld
mov
cmp
mov
add
push
orl
popa
scas
inc
sub
shlb
lds
sbb
out
das
mov
das
movsb
insl
nop
fwait
imul
adc
jecxz
cs
cltd
jmp
daa
cs
outsl
inc
push
xor
aam
testl
imul
jge
and
mov
aas
inc
fildll
pusha
imul
aas
and
arpl
aam
leave
in
fwait
inc
lods
push
sti
stos
mov
repz
outsb
pop
addr16
or
dec
cmp
inc
sbb
scas
xor
dec
dec
mov
pop
lods
outsl
xchg
cmp
mov
push
push
xchg
cwtl
push
mov
mov
ss
movb
test
add
out
fildl
lods
xor
popf
das
cld
inc
adc
lret
faddl
jge
into
and
or
sbb
mov
push
xchg
repnz
mov
out
sbb
hlt
mov
movb
xchg
out
lcall
pop
fisubrs
jg
cmc
test
pop
push
add
addr16
sbbb
sahf
pop
lds
sub
in
insb
test
mov
pop
call
push
iret
push
mov
std
clc
ss
ds
jmp
fsts
mov
in
aam
cltd
xchg
mov
jg
sti
testb
cmp
push
mov
leave
std
cmp
mov
mov
lea
sahf
lds
dec
pop
inc
call
cwtl
lret
inc
push
repnz
sbb
fwait
outsb
rolb
es
popf
gs
daa
repnz
sti
and
out
inc
sub
idivb
add
std
mov
std
mov
pop
dec
je
jbe
xchg
pop
cmp
dec
jg
sbb
bound
lcall
sbb
add
add
xchg
adc
lcall
mov
push
mov
fbld
shrb
cli
sub
and
aaa
inc
mov
call
ss
aad
mov
aad
push
sub
pushl
or
dec
sub
sbb
cmp
and
add
imul
jmp
test
leave
pop
dec
push
jno
jle
arpl
jl
insb
cli
sbb
mov
push
sbb
mov
lret
push
sub
add
pop
pop
dec
or
popf
leave
test
dec
and
jle
icebp
mov
adc
dec
imul
cmpb
dec
stos
push
div
aad
xor
mov
das
add
dec
test
testl
xchg
and
ljmp
inc
lods
and
jno
mov
add
and
inc
jg
int3
mov
xchg
and
pop
or
pushl
pop
adc
jge
cli
mov
scas
xchg
push
je
int3
out
and
jo
mov
je
add
dec
mov
ds
repz
out
lods
xor
pop
jne,pn
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
fucomip
movsl
cmp
xor
inc
pop
jl
outsl
int3
test
repnz
add
xchg
or
or
inc
pop
mov
xor
scas
cwtl
add
adc
adc
dec
sub
sub
lods
dec
lea
mov
sbb
jbe
fmull
lods
xor
pushf
dec
mov
insl
repnz
jns
sbb
xchg
jl
add
rorb
mov
cmp
loope
xor
pop
popf
ret
lea
pusha
fnsave
jnp
mov
int
jecxz
ret
and
jmp
imul
pop
cmpsb
or
testl
rolb
jmp
orb
xor
or
adc
lret
mov
push
add
out
in
hlt
pusha
sbb
rcrl
addr16
jmp
stc
call
or
and
push
jne
inc
xor
adc
addr16
xchg
add
pop
scas
cmpsl
icebp
pop
jp
lret
test
jbe
fidivrl
rcrl
mov
cs
sub
pop
xor
scas
push
pop
popf
fdivrs
dec
xor
push
dec
inc
lods
test
scas
hlt
adc
stos
in
arpl
mov
xor
ret
cs
das
fcomps
push
mov
pop
fsts
fwait
mov
sub
rcrb
xorb
lahf
dec
sti
scas
scas
outsb
and
rorb
test
jg
inc
inc
lods
leave
xor
xor
pop
hlt
jl
lret
fs
leave
outsl
popa
ds
bound
mov
xor
and
mov
fbstp
mov
out
and
in
jnp
cmp
push
mov
adcb
js
jl
jg
or
fildl
cli
and
sbb
xor
cltd
xchg
pop
push
sar
das
lahf
lret
rolb
pop
add
adc
out
jns
dec
inc
and
jns
sti
dec
bound
mov
in
mov
out
dec
inc
inc
negb
lods
mov
pusha
fwait
nop
sub
aas
out
test
out
loopne
loop
push
lock
ljmp
clc
ficomps
fstps
inc
ret
lahf
in
mov
outsb
add
dec
fsubrs
in
outsb
cmp
sub
filds
aaa
movsl
test
cmp
enter
sub
outsb
pop
ror
push
fmull
ret
inc
jno
loopne
mov
fwait
ds
stos
outsb
daa
push
jae
jmp
add
int
scas
and
data16
and
je
shrl
stos
sbb
call
les
mov
fdivr
fscale
imul
cmpl
rorl
mov
fs
fistl
in
adc
pop
jecxz
or
ljmp
shlb
push
mov
lods
adc
lea
xor
sub
xlat
hlt
jbe
cmp
loop
daa
aam
jge
or
in
out
mov
loope
aam
mov
and
into
jbe
outsl
mov
enter
xor
or
xor
cmp
negl
nop
mov
test
cli
rol
insl
mov
les
fildl
imul
inc
adc
repz
es
aas
pop
ret
lcall
adc
cwtl
sub
inc
cmp
outsb
stc
mov
sub
mov
or
lahf
faddl
dec
sar
adc
mov
fisubrs
cltd
jle
shll
movl
ds
insl
sahf
pushf
out
mov
or
pop
cmp
push
jl
mov
adc
pop
sti
mov
lock
dec
ljmp
push
sbb
int
hlt
push
dec
jl
test
pushf
or
cwtl
xchg
sbb
push
or
cmp
hlt
stos
pusha
loopne
ljmp
sbb
sub
dec
aad
and
xchg
mov
pop
scas
inc
gs
in
in
push
hlt
jmp
fcmovb
xchg
pop
int
and
cmp
mov
jb
iret
in
adc
cmp
pop
icebp
jns
cmpsl
cmp
pop
sub
mov
sub
out
in
or
jae
inc
xchg
sti
xchg
adc
xor
inc
repz
mov
stos
sbb
or
push
enter
and
push
jbe
aas
rorb
cmp
cmp
jne
movsb
cmp
lahf
push
or
mov
push
or
mov
outsl
pop
xchg
mov
ljmp
cmp
and
cltd
outsb
mov
pop
mov
jae
icebp
mov
mov
xor
fidivrl
sbb
mov
adc
clc
cltd
fstps
in
jle
icebp
inc
jge
add
outsl
mov
mov
pop
mov
dec
inc
mov
pusha
loopne
jb
les
xor
cmp
into
lahf
testb
fsubrl
rcr
faddl
xor
je
lea
div
or
fcmovnbe
xchg
xor
dec
ljmp
imul
mov
jge
test
mov
or
push
gs
ljmp
imul
test
test
pop
xchg
lds
jnp
pop
and
int3
push
call
je
xchg
xchg
sbb
jmp
inc
push
xchg
fld
cmpsb
sub
lret
jo
add
les
dec
aad
push
or
push
inc
add
enter
je
cmp
add
test
in
leave
imul
xchg
in
aad
cmc
ret
cmpsl
imul
data16
mov
shll
mov
sbb
out
pop
cmp
test
and
rorb
jno
xchg
mov
movsb
outsb
dec
popa
dec
pop
or
mov
fiaddl
add
faddl
mov
or
push
and
pop
mov
jecxz
fwait
notl
xor
adc
mov
pop
cmp
popa
add
adc
mov
out
dec
sbb
pop
xlat
cld
mov
popa
xor
adcb
scas
xchg
mov
xchg
leave
sbb
das
in
cmp
mov
xchg
xchg
adc
clc
pop
fnsave
pfadd
xlat
xor
popa
aad
mov
icebp
add
mov
cmpb
hlt
test
add
pop
cmp
or
call
orb
xor
arpl
fidivrl
sub
add
cs
cmp
or
and
or
fiaddl
add
addb
mov
jb
mov
out
or
mov
inc
dec
pop
fsubrp
xor
inc
xchg
and
mov
stos
shll
pushf
cmpsl
fbstp
jns
jb
es
cmp
int3
push
or
pop
les
cmp
jae
scas
stos
mov
sub
jl
sar
fxch
bound
push
xor
mov
aad
imul
xor
cmp
nop
lock
mov
frstor
ret
lret
and
or
add
cmpb
arpl
mov
faddl
je
fstpl
adc
bound
icebp
data16
out
mov
movsl
ljmp
iret
in
sysenter
imul
cli
xchg
fisubl
repz
ret
xchg
ljmp
cmc
cmp
adc
cs
inc
movsb
incl
ss
imul
cmpsl
lds
dec
push
shlb
sub
push
shll
jb
jne
in
and
xlat
inc
test
adc
jae
jecxz
xchg
inc
les
movsb
inc
repnz
lds
or
pop
fcmovb
in
mov
insb
mov
loope
cmp
or
movsl
outsb
mov
outsb
inc
sub
movsl
es
pop
in
pop
and
call
and
dec
lea
adc
add
sub
std
inc
jb
and
test
int3
add
arpl
mov
lcall
mov
cmp
dec
subl
lea
pop
sub
fs
test
data16
or
xchg
push
lret
push
or
minps
mov
jp
xchg
inc
in
les
and
push
cmp
sub
sti
outsb
jno
repz
in
inc
cwtl
and
jae
into
pusha
inc
fmuls
and
loope
leave
pop
sub
cmp
mov
orl
xor
ljmp
jnp
dec
sbb
repz
cmp
aad
subb
mov
cmp
sbb
and
adc
mov
and
sahf
push
fwait
arpl
in
icebp
pop
jmp
xor
adc
sub
xor
jmp
mov
xlat
daa
stc
leave
xchg
stos
in
packsswb
pop
and
xor
jae
adc
push
adcl
lods
adc
aaa
ds
rclb
movsb
mov
jbe
incb
push
jmp
mov
cmp
dec
jno
stc
in
sub
cmp
aad
add
dec
mov
jmp
in
jecxz
push
or
mov
jb
sarl
jg
sahf
dec
aaa
test
std
and
fists
test
imul
js
and
dec
in
jb
sbb
repnz
lock
pushf
gs
fcomp
outsl
icebp
jae
sbb
xchg
adc
imul
sti
add
jg
push
xor
xor
cmp
decl
iret
mov
mov
out
icebp
scas
nop
in
cmc
sub
mov
repz
push
or
jno
mov
and
nop
imul
pop
notl
fwait
jp
add
mov
push
inc
ljmp
out
push
mov
pusha
fistpl
dec
rcll
lcall
fisubrs
mov
inc
lret
mov
call
xchg
shlb
mov
sahf
fwait
mov
add
sbb
pop
daa
lahf
cmp
cmp
and
cmpl
test
xor
push
test
outsb
pop
mov
or
mov
cltd
clc
popa
mov
jge
pop
inc
push
scas
arpl
subb
out
push
into
add
insb
mov
mov
sti
ret
outsl
jne
dec
dec
dec
ja
mov
mov
loope
jg
push
inc
adc
loop
icebp
test
aas
fdiv
cwtl
repnz
jb
add
adc
iret
xchg
mov
orb
add
xchg
mov
jmp
ss
incl
add
out
fbld
out
les
repnz
ljmp
or
cmovs
sbb
adc
mov
stos
std
inc
dec
in
dec
mov
sub
sar
in
adc
xchg
sub
leave
idivl
popa
cli
aas
add
incl
out
jns
repnz
or
push
lea
dec
int
fwait
outsl
je
mov
cmp
loopne
xchg
dec
aaa
pop
inc
xlat
mov
lea
outsb
and
and
jl
pop
sub
test
dec
jnp
cmp
inc
inc
imulb
mov
lea
sub
daa
ljmp
scas
ja
mov
adc
sub
inc
xor
test
decb
mov
call
or
sub
add
or
pusha
dec
out
cmc
aam
mov
xor
inc
mov
push
hlt
fildl
ljmp
xor
add
pushf
and
lret
cmp
cs
mov
divl
pop
lods
sbb
push
jbe
push
push
xchg
dec
je
jno
push
bound
jmp
cmp
insl
jae
jp
inc
xor
xchg
add
out
std
sub
leave
int
push
or
xchg
ljmp
lds
fistpll
lcall
jg
add
inc
push
std
mov
int
outsl
rcll
dec
cmpsb
sbb
repnz
push
sbb
outsl
stos
fwait
sub
dec
sub
aam
jmp
xchg
cmp
sarl
jge
enter
arpl
add
movl
mov
mov
push
sahf
or
adc
enter
das
xor
or
cwtl
fcoml
mov
sbb
movlps
adc
adc
lods
popf
mov
stos
sub
push
loop
mov
popa
xchg
in
mov
lea
sarb
cli
mov
lods
mov
xor
push
in
daa
std
fsubrs
dec
testl
push
jo
push
ds
pop
sbb
in
jne
aas
dec
mov
stc
je
mov
gs
xor
cmp
dec
inc
dec
popf
stos
dec
xlat
mov
pop
out
lret
ljmp
cld
mov
fldenv
popf
lret
lret
push
sub
leave
pop
add
arpl
sti
mov
pop
jg
mov
in
das
std
iret
dec
loope
add
loopne
out
cli
pop
push
mov
in
pop
mov
sub
push
push
xchg
mov
mov
fmuls
sbb
adc
mov
push
fwait
jne
xchg
or
jl
inc
sbb
sbb
inc
vmptrst
roll
pop
cmp
popa
cmp
xchg
ret
std
inc
mov
dec
mov
fdivs
bound
sbb
mov
mov
xchg
ss
lcall
jbe
ficomps
pop
ss
out
in
shrb
cmp
push
push
stc
test
mov
xor
mov
cmp
mov
or
cmp
test
stos
popf
or
sub
into
sbb
inc
mov
sysenter
mov
mov
bound
enter
imul
in
xchg
add
pop
cmp
push
aad
fisubrl
push
mov
sbb
mov
push
mov
mov
icebp
cli
adc
xchg
cmpsb
push
mov
xchg
or
lahf
stc
sbb
cmp
in
rolb
out
lds
push
movsb
sbb
lods
fadds
cmp
pop
xor
ds
add
cmpsl
jmp
mov
xor
push
arpl
lret
xlat
and
repnz
cmp
movsb
les
insb
sbb
cmp
or
adc
xchg
xchg
cmc
sbb
sti
lods
in
sbb
fcmovnbe
dec
inc
jne
in
adc
rcrb
cmpsb
jb
lahf
sti
fdivp
cmp
jo
aaa
adc
adc
iret
stos
mov
xchg
mov
mov
mov
out
push
out
int3
cli
mov
movsl
loop
sub
lea
lods
inc
jae
inc
insl
and
mov
mov
mov
jmp
es
inc
jbe
cmpsl
mov
and
fcoml
test
or
outsb
jl
adc
scas
pop
sub
dec
mov
cmp
xor
push
call
add
stc
testb
sub
mov
add
push
sbb
pop
dec
mov
inc
in
jne
mov
push
cmpb
pop
jl
in
mov
cmp
ficomps
movsl
cmp
and
inc
nop
inc
xor
movsb
adc
mov
xchg
sub
pop
jp
popf
mov
dec
jl
pusha
outsl
and
jbe
lahf
push
xchg
add
cmp
sub
push
push
and
dec
cmp
out
dec
dec
mov
jo
mov
mov
sub
pop
xor
aaa
fsubr
xchg
inc
jl
aaa
mov
cmpsl
xchg
jecxz
pop
sarb
dec
mov
sbb
adc
adc
xchg
xorl
in
fmull
adc
aas
push
push
lahf
aam
ret
mov
cmp
scas
sbb
addb
mov
sub
divb
outsb
xor
xor
in
mov
inc
cmp
cli
push
divl
or
inc
dec
and
sbb
pop
subl
xor
popa
mov
push
jl
mov
add
add
mov
imul
cmpb
mov
je
lds
or
xor
xchg
mov
mov
mov
inc
jbe
cmp
push
fwait
mov
cmp
and
sbb
fdivrp
add
out
mov
dec
or
and
push
sbb
mov
xchg
outsl
cmp
loop
mov
jecxz
inc
cwtl
add
mov
sbb
push
popf
subl
xlat
dec
mov
jmp
jl
push
inc
xor
fs
bound
cmp
subl
daa
fidivrl
add
int
xchg
cmp
pop
imull
lea
add
int3
test
pop
push
mov
lret
add
jno
cmp
stos
arpl
loope
cmpsl
sub
bound
push
leave
xchg
imul
pextrw
push
mov
leave
pop
movsb
jnp
mov
mov
jae
pushf
lahf
nop
add
sub
cmp
insl
mov
dec
nop
test
dec
scas
and
sub
aam
jl
fmulp
int3
jo
test
cltd
stos
imul
jl
cmpsl
packsswb
ret
out
mov
test
and
jl
arpl
rol
imul
inc
add
sar
dec
pushf
add
arpl
sahf
ss
popf
movsb
push
xor
outsl
mov
aad
aad
push
sbb
adc
cmc
mov
fidivl
ljmp
repz
and
push
dec
pop
rol
cmp
push
xor
mov
cmc
icebp
jg
mov
inc
cmp
push
add
mov
lret
mov
push
jle
mov
mov
mov
cmp
pop
mov
cmp
sbb
cmp
into
sub
sti
stos
adc
shl
in
leave
orb
mov
imul
arpl
push
aaa
and
ljmp
add
xor
add
jns
test
xchg
leave
movsl
inc
out
pop
pop
mov
xlat
inc
in
iret
mov
sub
or
push
ss
idiv
stos
pop
lret
and
sub
outsb
rclb
xor
decb
inc
xor
or
jno
add
leave
test
insl
mov
add
mov
insl
jno
int3
mov
les
and
pop
popa
int
ljmp
stos
aas
mov
push
inc
out
ret
daa
andnps
mov
pop
inc
xchg
in
mov
jae
pusha
mov
test
mov
arpl
sub
fildl
xor
pop
mov
ret
repz
pop
xchg
fwait
rcrl
xchg
out
test
in
outsl
sub
out
add
icebp
push
rorb
sbb
pop
outsb
add
sub
addr16
outsl
imul
cld
mov
and
mov
and
dec
sti
inc
lea
or
call
push
xchg
iret
add
outsl
dec
add
adc
sub
into
add
cmc
popf
dec
jl
dec
aam
push
or
loope
rcrb
pop
xchg
mov
jne
addr16
xchg
sarl
and
and
hlt
mov
arpl
cmc
mov
xchg
cmp
ret
mov
test
or
es
push
leave
xchg
pop
flds
std
scas
mov
jle
mov
insl
imul
push
aad
ja
or
loop
insl
jle
cwtl
xchg
loop
mov
adc
jl
add
lods
mov
dec
mov
pop
rorb
cmpsb
mov
mov
and
cmp
xorl
push
test
pop
aad
adc
xor
dec
out
push
pop
out
mov
int3
mov
repz
cmp
lods
into
or
mov
pop
xor
cmp
push
or
sbb
push
inc
sub
out
jbe
ss
dec
mov
fs
sbb
outsl
push
inc
mov
into
aam
pop
dec
sbb
adc
inc
imul
stc
and
mov
aas
mov
xchg
arpl
jne
ds
mov
push
es
jnp
xchg
insl
js
and
movsl
adc
data16
ljmp
adc
daa
arpl
divb
push
enter
mov
xchg
jmp
mov
adc
repz
xchg
mov
jns
inc
pop
mov
adc
mov
divb
lock
dec
push
pop
pop
and
mov
adc
dec
sbb
and
xor
ficomps
lret
adc
cmp
mov
pop
push
jne
bnd
shll
sub
sahf
pop
stos
xchg
imull
add
or
jmp
cld
jl
lock
mov
mov
mov
mov
mov
in
or
adc
jbe
iret
inc
fs
pop
fs
popa
ficoml
addl
pop
jge
scas
jno
xor
ret
push
stc
xchg
or
bound
addr16
pop
or
sbb
push
bound
das
test
mov
imul
push
mov
cld
repnz
imul
lds
imul
push
mov
push
add
hlt
push
ljmp
aam
call
std
sub
and
bound
roll
xchg
leave
filds
in
sub
je
int
add
jle
idivb
fimull
push
mov
sub
pop
mov
insl
call
pop
mov
cmpb
cli
std
vcomisd
jp
mov
dec
mov
dec
cmp
arpl
ss
push
mov
or
out
jno
sub
add
cs
imul
mov
jns
fs
les
nop
rorl
xlat
inc
jne
xor
test
lahf
daa
push
jne
xchg
mov
add
ret
xchg
pop
push
xor
adc
xor
dec
loope
push
and
sub
insl
bound
sbb
icebp
cmp
das
lds
mov
pop
inc
testb
inc
xchg
mov
jp
and
sbbl
pushf
dec
push
xor
mov
and
push
sub
xor
div
and
into
call
adc
movsl
lock
ficomps
cmpsb
mov
xor
jge
addr16
js
test
inc
nop
in
clc
dec
inc
out
inc
data16
in
lds
dec
xchg
lea
adc
sub
xor
add
mov
push
adc
scas
xor
and
nop
pop
fwait
pop
loop
dec
adcl
lock
mov
xchg
cmpsl
lret
mov
jbe
mov
sbb
sti
push
mov
fucomi
push
inc
xor
ljmp
cmp
mov
dec
out
sarl
mov
fdivrl
das
imull
mov
xor
inc
popl
jae
gs
mov
mov
daa
inc
or
add
dec
cwtl
icebp
popa
inc
popa
push
lock
fimuls
rol
sbb
push
push
push
out
push
loopne
stc
mov
pusha
shr
mov
popa
and
add
jnp
arpl
into
lock
outsb
fnstcw
and
call
mov
dec
jo
and
inc
test
out
fidivrs
sbb
jg
inc
inc
xor
xlat
adc
xor
test
or
sub
jge
push
adc
enter
mov
pop
test
cmp
movsl
jp
sbb
mov
mov
xor
mov
push
ds
gs
or
push
in
sub
sarl
mov
push
arpl
pusha
cmpsl
icebp
std
mov
push
pushf
or
push
je
or
sub
out
stos
cmpsb
rclb
dec
ret
arpl
cld
jl
and
movsb
lds
xchg
mov
es
in
imul
adc
inc
movsl
scas
idiv
ret
and
cmpsb
in
or
mov
inc
or
mov
test
adc
fistl
cmpsl
mov
ja
jno
push
push
aad
fmul
sbbb
mov
inc
add
pushl
mull
xor
loopne
mov
cmp
inc
mov
test
xchg
mov
cwtl
ja
movsb
ret
or
mov
cmp
push
mov
addr16
jae
cltd
push
and
pop
inc
das
xchg
xchg
jge
push
adc
in
loopne
pop
mov
jno
gs
jge
ret
mov
imul
dec
andps
call
xchg
out
stos
and
sub
push
imul
decb
dec
ljmp
xor
fiaddl
ja
shlb
sub
xchg
sub
fsubr
cmp
sarb
xor
lock
vmaxss
push
inc
rcll
xor
jae
dec
pop
ret
mov
jge
jbe
mov
inc
sbb
dec
stc
xor
mov
in
mov
roll
stos
adc
cmc
inc
and
hlt
xchg
push
push
sub
push
test
setg
jbe
ret
fs
fisubrl
scas
shrl
xchg
dec
inc
sbb
aas
mov
push
outsb
xchg
jge
mov
push
dec
imul
test
pop
xchg
repz
js
push
out
jmp
and
ret
les
mov
cmp
mov
dec
mov
xchg
addr16
scas
in
mov
lods
stc
mov
out
cwtl
shrb
ret
popl
daa
cwtl
push
inc
popf
call
fcomp
sbb
jle
mov
mov
adc
push
push
inc
jo
lahf
cmpsl
popa
mov
pop
pushl
or
cli
push
jo
data16
xchg
fistps
js
das
popf
and
jns
leave
sti
lcall
jo
cld
cmpsb
pop
pop
mov
dec
js
or
in
addr16
or
in
xchg
push
aad
lcall
or
mov
or
mov
pop
inc
hlt
jp
lcall
das
shrl
fwait
cmpsl
cmp
inc
repz
mov
icebp
cmp
and
stc
xchg
movntq
xchg
pop
flds
inc
push
inc
mov
not
xor
dec
aad
iret
cwtl
cli
into
cmp
scas
rolb
or
lcall
insl
jo
popl
ljmp
movl
xor
or
or
inc
mov
ljmp
arpl
xor
sbb
and
call
rorb
xchg
xchg
inc
aad
pop
mov
or
mov
xor
push
scas
xorl
pop
addr16
cltd
xor
pop
ficoms
lods
or
nop
jae
jmp
pop
js
push
cwtl
xor
cmp
mov
add
test
int
cld
cmp
insl
ret
pushf
jg
xchg
sub
ret
mov
cli
mov
scas
xor
sbb
test
hlt
insb
cmp
mov
add
cmpsl
ds
and
lods
and
lea
jge
rcl
cmpb
xlat
loope
fcmovb
popf
adc
push
push
dec
mov
add
sub
jecxz
int3
push
inc
jg
jae
lods
arpl
sahf
cmp
lock
mov
jl
cmp
lds
scas
xchg
or
jae
mov
fmulp
insb
pop
push
jmp
mov
mov
and
add
cmpsb
cld
xor
fimull
outsb
shrb
sti
clc
call
scas
hlt
inc
lods
pop
lret
or
stc
push
int
xchg
mov
xchg
sub
imul
adc
dec
sub
in
xor
or
mov
idiv
outsl
dec
and
xchg
fimull
add
aas
sbb
gs
jnp
cmpsb
jg
inc
adc
sub
lods
cmp
mov
xchg
adc
mov
push
xchg
rorb
sarl
es
ror
icebp
or
cmp
dec
clc
pop
fnstenv
add
stos
dec
cmp
pusha
call
and
enter
or
mov
mov
inc
lret
mov
jbe
or
sbb
negl
lea
fldt
jbe
jmp
stc
pop
leave
jl
int3
in
xor
sub
lock
rol
testb
jge
out
sub
add
in
popf
fcmovnu
push
in
mov
aam
mov
pop
push
out
mov
mov
pop
mov
jl
sbb
dec
decl
movsl
call
fcmovnb
out
mov
xchg
jl
sbb
testb
inc
mov
lods
dec
hlt
pushf
sarl
adc
mov
mov
sub
popf
jae
jge
arpl
push
cmp
pop
leave
jg
fwait
and
aad
sbb
scas
test
outsb
mov
mov
sahf
mov
add
mov
stos
xchg
and
outsl
mov
sbb
jle
adc
lods
mov
xor
sti
adc
xchg
mov
popf
jle
ss
jmp
pop
push
addr16
or
int
outsb
mov
fidivrs
lahf
add
push
fmuls
dec
jecxz
nop
ss
les
inc
jmp
jecxz
add
popa
sbb
pop
movl
imul
test
decl
add
mov
jae
pop
add
adc
inc
and
jne
popa
movsl
sbb
sub
leave
ficomps
xchg
jne
push
mov
sub
pop
mov
push
push
call
and
pop
lret
imul
sbb
pop
out
jmp
jmp
inc
and
repz
cmp
adc
jl
mov
pushf
scas
insb
fiadds
enter
jecxz
sub
add
jae
push
aas
or
je
std
enter
mov
push
in
pop
int
stos
ret
mov
popa
pop
bound
sbb
ret
aas
cmp
sub
mov
xchg
in
fsubs
pop
mov
mov
mov
inc
dec
jle
pusha
inc
es
dec
clc
or
cmp
mov
inc
adc
cli
adc
jno
pop
and
sub
fstpt
or
jo
add
xor
movsb
lahf
mov
notb
cmp
push
or
push
mov
sti
insl
jle
cwtl
aad
mov
out
pop
mov
pop
lods
jecxz
and
xchg
jg
mov
add
mov
arpl
cli
mov
jmp
cmp
add
jmp
pop
push
dec
test
mov
inc
sbbb
inc
jl
loopne
movl
jbe
pop
jg
lods
dec
pop
dec
push
mov
or
cmp
jmp
hlt
cmc
hlt
dec
sbb
es
push
repz
fmul
jge
push
mov
inc
push
aas
loopne
das
xchg
cmc
ret
testl
cmp
pop
cmp
pop
out
cmpsb
add
dec
lds
movsl
jo
push
xchg
mov
cwtl
testl
jbe
push
arpl
inc
mov
push
orb
pop
dec
cs
aas
adc
sarl
sbb
dec
add
lahf
inc
and
lcall
jge
loopne
sub
out
incb
cmp
cmp
test
mov
les
movsl
icebp
jmp
cmp
xchg
outsb
cltd
and
inc
dec
dec
push
push
lahf
dec
in
pop
lret
pop
out
and
dec
imul
pop
jns
mov
adc
push
dec
pushf
icebp
sub
cmpsb
clc
gs
adc
cmp
ret
xor
adc
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
push
adc
inc
pop
jl
dec
out
jae
xchg
push
mov
sbb
lea
cld
ja
mov
dec
ja
addr16
mov
fsubl
clc
sbb
adc
cld
sbb
out
jne
pop
ret
daa
inc
xchg
xor
cmp
repnz
inc
inc
fiadds
adc
dec
popa
sbb
ss
cwtl
push
leave
jge
insl
int3
scas
sbb
or
cmp
xchg
mov
popf
popa
or
lret
shlb
test
daa
out
or
push
dec
sub
pop
out
fists
repz
sub
add
push
arpl
xor
xlat
pop
sbb
xchg
mov
push
or
jbe
mov
repnz
xor
aad
jl
cli
enter
or
or
or
cmp
jo
mov
adc
jge
dec
sahf
xchg
cmp
out
pop
jl
sarl
adcl
insb
negl
xchg
fidivrs
iret
xchg
cmp
pop
ss
out
testl
arpl
aad
rorl
sbb
xorl
push
xchg
adcl
jl
jle
add
cmp
add
inc
and
shll
sub
add
xchg
mov
jecxz
ret
mov
je
mov
push
sbb
sub
bound
mov
or
jne
dec
in
aas
mov
cld
mov
cmpsl
shl
leave
add
mov
stos
inc
ljmp
dec
inc
ds
or
es
enter
inc
and
mov
mov
fstl
add
popf
jl
mov
fidivl
mov
or
or
sbb
dec
mov
inc
mov
xchg
pushf
inc
xchg
jecxz
sti
pop
pop
sti
inc
shrb
and
pop
in
das
lret
jecxz
sbb
push
lahf
or
mov
sbb
cmp
sbb
mov
call
jl
fsubp
in
fxtract
push
ret
xor
jp
push
es
jl
sub
dec
pop
lods
push
std
dec
scas
xor
data16
sbb
adc
fwait
push
xchg
dec
dec
mov
popa
dec
cmp
addr16
sub
aad
pop
repnz
enter
mov
jo
mov
pop
and
push
cmc
pushf
lods
loop
mov
pop
mov
movsb
cmp
xor
sub
ds
out
sbb
daa
mov
push
jns
sub
or
or
out
and
xor
loop
out
sub
add
cmp
call
test
add
clc
hlt
rolb
pop
pop
sbbb
xlat
mov
out
pushl
and
fld
popf
jae
and
jae
movsb
in
shr
insl
pop
imul
adc
insl
inc
rcrb
and
fistpl
fnstsw
mov
push
sbb
push
adc
xchg
mov
inc
pusha
cmpsl
int
jno
mov
shr
dec
add
in
adc
pushf
and
xor
and
jg
dec
xor
and
jnp
popa
call
xchg
scas
xor
push
xchg
movsl
cmp
icebp
add
cmc
aam
mov
inc
and
test
cmp
and
test
push
out
or
add
cmp
sub
inc
xbegin
sbb
push
outsb
ret
mov
xor
icebp
xor
sub
sahf
pop
les
pop
mov
fs
mov
push
out
cmc
mov
inc
into
daa
ss
push
pop
hlt
aaa
adc
popf
jno
pop
dec
mov
lahf
test
je
lcall
sbb
loope
fxsave
mov
mov
lcall
and
loope
mov
add
leave
pop
or
and
sbb
imul
orb
leave
mov
hlt
ror
pop
stos
loope
ret
push
or
cmp
sahf
cmp
mov
movsb
into
inc
jne
aam
sub
dec
dec
add
imul
and
ja
adc
and
mov
jmp
out
inc
jbe
mov
inc
mov
pop
sbb
js
cmp
mov
jno
test
pop
mov
cs
imul
scas
test
aas
mov
push
enter
out
mov
add
int3
outsl
bound
shrl
jp
inc
outsl
aad
aad
sbbb
adc
adc
xchg
pop
and
addr16
enter
dec
dec
shrl
mov
in
adc
idiv
mov
dec
lea
mov
insb
adc
lret
jle
jno
push
lret
push
cmp
ret
mulb
outsl
cmpsb
in
enter
repz
mov
icebp
movsl
movsl
cmp
sub
and
call
mov
out
pop
mov
lret
push
cmpb
and
shlb
add
aas
out
push
xchg
jbe
std
mov
inc
mov
es
add
fcomps
gs
add
je,pt
js
jmp
outsb
fdivrs
je
es
sub
js
and
out
add
adc
les
mov
es
jmp
test
mov
xchg
gs
or
push
in
int
push
insb
out
into
jnp
lret
and
mov
movsb
ret
cmp
mov
stos
out
outsb
lods
sbb
pop
lods
leave
sbb
mov
aam
imul
mov
sbb
notb
cmpsb
adc
fninit
mov
add
adc
jmp
rorb
pop
pop
sbb
pop
jno
cltd
shlb
in
int
test
mov
pop
out
xor
idivb
mov
inc
in
mov
mov
lods
jb
mov
mov
pop
rcrl
outsb
pop
jmp
sub
aas
les
call
or
stc
imul
xchg
ljmp
cmp
leave
aaa
pop
fdiv
ficoms
add
nop
in
mov
mov
scas
cltd
inc
mov
imul
clc
clc
sub
lcall
stos
dec
les
cld
adc
inc
jo
sub
aad
push
mov
mov
pop
sahf
xchg
fimuls
aad
test
movsb
inc
loopne
daa
adc
mov
ds
adc
pop
fnstsw
mov
xchg
mov
add
mov
cmp
add
sarl
iret
mov
mov
sbb
in
adcb
repz
clc
dec
mov
mov
hlt
stc
pop
adc
roll
mov
or
sbb
fwait
into
push
pop
adc
mov
xchg
mov
lea
xor
push
jmp
scas
add
outsl
push
xor
rcll
outsb
xchg
repnz
fidivl
or
xorb
add
add
cmp
ja
pop
add
mov
aam
arpl
gs
adc
inc
aaa
jmp
sbb
inc
xor
xchg
jno
push
loopne
dec
sarb
in
cmp
rol
or
lods
cltd
clc
add
jb
insb
outsl
sbb
push
and
lock
enter
add
fisubrs
inc
in
dec
sub
jnp
int3
sti
jb
xor
jp
cmp
xchg
jo
enter
lret
jle
cmp
sub
aad
fwait
xor
xchg
stos
cmp
sub
inc
dec
mull
xchg
int3
xchg
push
nop
pop
xor
outsl
cmp
arpl
je
add
jne
fistpll
push
xchg
xchg
sub
and
sub
aam
cmp
out
ret
inc
cld
inc
icebp
bound
xchg
ljmp
fistpl
push
adc
into
subl
test
outsb
stos
jnp
sub
inc
test
stc
jecxz
sub
jmp
jl
lock
pop
push
pop
dec
mov
cmp
push
jp
movsl
stos
xor
pslld
push
mov
mov
bound
cli
lods
jbe
inc
ljmp
shrl
pop
sti
pushf
in
cld
call
punpckhbw
test
stos
rorl
jl
jmp
adc
add
pop
cwtl
lahf
gs
aad
rorb
and
and
cmp
mov
das
xlat
out
and
aaa
mov
movsl
rcr
bnd
hlt
cmpsb
outsl
sbbb
inc
dec
xchg
mov
dec
add
loopne
xor
aas
shr
mov
stc
scas
arpl
mov
push
pop
inc
mov
outsb
fbstp
push
mov
leave
sahf
pop
enter
pop
adcb
gs
sub
mov
shrl
add
jge
sbb
lcall
stos
jne
jae
scas
push
mov
sti
mov
inc
push
mov
addr16
pop
pop
test
xchg
dec
lods
inc
movsb
rclb
add
push
lds
dec
jne
lods
pop
mov
addl
les
ss
fsts
sti
cmpsl
add
cmp
xchg
pop
loop
add
mov
insb
negl
cmp
jl
add
aad
mov
or
test
dec
rorb
je
pop
cmpsb
pushf
inc
lcall
call
dec
xchg
repnz
sarb
jb
outsl
mov
sub
xchg
cltd
dec
jnp
pop
mov
adc
xorb
into
cs
xchg
pop
scas
add
sbb
pop
stos
addl
adc
jmp
add
and
movsb
roll
fidivrs
pop
or
iret
lds
mov
cmp
cmpsl
mov
sti
test
dec
cmpsb
daa
inc
movsb
push
mov
cmp
jns
rol
lds
bound
or
jecxz
out
stos
cmpsb
cmp
outsl
psubsb
stos
ss
pop
and
adcb
pushf
loopne
and
scas
mov
fdivrl
lods
sbb
sub
insb
out
iret
pushf
add
ja
pop
dec
push
lcall
cmpsl
loop
inc
insl
mov
jno
lret
inc
sbb
lret
outsb
into
js
arpl
and
orl
popa
enter
lcall
xor
pop
sub
add
int3
ljmp
sub
aas
cld
inc
into
or
jne
daa
lcall
imulb
bound
ljmp
stc
testl
sbb
cmp
in
cmpsb
push
sub
cld
or
adc
sbb
push
loopne
cmc
mov
xchg
push
fucomi
xor
into
clc
jecxz
mov
sahf
xchg
add
sub
inc
pop
pop
sub
int3
mov
jg
test
cld
sbb
aad
lret
jo
and
inc
loop
xchg
imul
pushf
xchg
pop
lods
addb
clc
int3
jae
lret
pop
mov
scas
sbb
inc
ja
out
lret
cwtl
fisttpll
push
sbb
sub
test
push
xchg
or
pushf
inc
lcall
das
out
mov
aam
mov
mov
inc
out
sbb
xchg
push
outsl
pusha
rorb
pop
or
mov
add
mov
adc
cmc
hlt
sbb
bound
mov
xchg
jl
fisttpll
mov
cmp
rorl
ja
stos
xor
out
mov
les
outsb
je
jns
xchg
out
cmpl
add
nop
add
fdivrs
test
out
shlb
outsb
sti
out
test
ljmp
pop
pop
dec
call
test
xchg
and
pusha
fdiv
or
arpl
int
mov
jae
jb
lods
and
repz
lods
fisubs
scas
adc
adcl
add
pusha
jnp
pop
mov
add
js
xor
pop
outsl
push
movsb
jns
fs
stos
loope
andb
pop
stos
and
nop
cmp
pop
fimuls
jge
pop
or
out
lret
pop
jmp
movl
push
push
cmpsb
push
imul
pushf
push
pop
imul
push
roll
insl
sub
pop
je
add
jecxz
sbb
testb
xor
pop
cmc
shll
in
jns
mov
aad
daa
sub
ljmp
fstl
or
xchg
mov
bound
cmp
insb
cltd
in
fiadds
xchg
pop
xchg
xchg
pop
cwtl
out
jl
clc
fcomp
cwtl
rclb
push
ret
cmp
bound
sbb
add
outsb
cli
push
adc
cmp
dec
das
loope
rcrb
outsb
mov
lods
mov
lea
data16
add
es
dec
stos
inc
iret
in
mov
push
push
ja
dec
inc
cmpsl
or
inc
pop
stos
loop
rcr
and
xchg
rolb
int3
mov
icebp
push
and
fnstsw
mov
and
mov
inc
mov
mov
andl
ret
lahf
lret
pop
fdivrs
shrb
stos
adc
in
movsl
insl
adcb
add
inc
sbb
xor
cs
in
xchg
aaa
fdivs
int3
push
lret
hlt
pusha
mov
dec
sti
pop
pop
or
sbb
das
mov
gs
sbb
or
les
jnp
nop
xchg
pop
fistpll
cltd
into
xchg
and
pop
popf
mov
loope
das
push
push
mov
dec
stos
iret
dec
cmp
sub
fildl
mov
loop
hlt
pop
mov
aas
fwait
orb
xchg
add
inc
adc
jle
out
test
xchg
fisubs
pop
mov
cli
ja
cmp
mov
test
xor
outsb
nop
xor
out
gs
imul
adc
lods
jo
mov
add
fchs
or
leave
jb
aaa
fildll
in
test
cld
dec
mov
testl
stos
sbb
outsb
push
lcall
cmc
mov
test
mov
loop
and
adc
xchg
and
or
adc
int
cmpsl
int3
popa
imul
mov
out
decl
aam
rcl
shrb
enter
fisttpll
sbb
cwtl
dec
cmp
mov
or
mov
cmp
int
jge
mov
jnp
test
lcall
mov
push
add
movsl
pop
dec
mov
imul
test
stc
jae
fiadds
jg
dec
xchg
iret
bound
cmpsl
pop
loop
adc
mull
mov
adc
add
mov
jbe
hlt
mov
insb
stos
xchg
ja
cmp
les
sub
lcall
or
hlt
in
cmpsb
or
cmp
inc
das
iret
mov
sbb
inc
movsl
nop
and
test
push
movsl
imul
outsb
inc
pop
lods
mov
adc
lods
fdiv
push
xor
ds
outsb
adc
outsb
outsb
sbb
push
adc
xchg
jo
jl
or
cmp
ljmp
scas
in
jbe
mov
pushf
adc
jno
rcrl
les
in
cmpsb
lock
imul
in
out
ret
orl
and
loopne
or
clc
jecxz
hlt
pop
xchg
mov
fsts
sub
jae
push
arpl
jno
mov
mov
roll
cmp
and
and
iret
jne
push
cwtl
push
inc
and
out
fdivs
adc
sar
sbb
cmp
cld
mov
push
repz
loop
hlt
test
in
fcompl
mov
nop
xor
mov
jne
jo
jbe
inc
adc
jne
and
lods
lds
cltd
xor
cmp
xchg
mov
xchg
pop
sarb
pop
inc
loopne
loope
testl
jp
xor
jb
clc
add
clc
xchg
add
jne
xor
aas
or
pop
lods
hlt
xor
xchg
jno
adc
mov
mov
mov
cld
mov
aam
call
xchg
test
mov
mov
out
mov
enter
out
stc
stc
in
fsin
test
outsl
scas
push
pop
aam
pop
pop
sbb
adc
lock
in
fdivrl
out
jl
push
and
mov
call
add
ljmp
data16
decl
das
mov
mov
pop
xchg
fisubs
in
inc
sub
jnp
mov
jno
in
adc
push
lock
sti
sub
jb
inc
sbbb
mov
pop
xchg
rcr
cltd
mov
mov
jp
xor
xchg
das
inc
scas
stc
adc
mov
or
bswap
outsl
pop
lds
xchg
out
inc
adc
nop
mov
lea
add
imul
fidivs
mov
sub
lods
icebp
mov
or
mov
fadd
inc
out
rorb
jb
fisubl
mov
xchg
mov
xor
loop
mov
std
sub
and
pop
push
inc
aas
inc
mov
out
mov
loopne
cld
scas
psrad
mov
int
mov
dec
test
fcomps
inc
cmp
lock
shll
cmpsb
xchg
xlat
into
mov
aas
mov
dec
cwtl
pop
xor
es
bndstx
and
cmp
aaa
sub
adc
lds
sbb
das
sbb
pushf
or
sub
pop
sub
les
or
pushf
pop
push
add
jp
push
or
cltd
adc
bound
pop
pop
cmpsl
ja
dec
jge
xchg
out
outsb
pop
imull
and
inc
mov
stc
push
xchg
sub
mov
jne
push
jbe
xor
pop
adc
push
push
lods
push
push
out
push
aam
push
sbb
jg
movsl
jno
in
ja
mov
ret
ss
testl
or
imulb
push
xor
inc
shll
test
pop
in
maskmovq
imull
cmp
add
add
dec
cmpl
mov
jl
jp
sbb
sarl
lret
add
xor
js
xchg
sub
adc
fmul
pop
inc
jl
movsb
das
jo
shlb
sub
jmp
mov
shlb
mov
clc
insl
test
xchg
int3
xchg
and
das
inc
push
dec
ds
mov
fcmovnu
xchg
and
popf
mov
ljmp
rorl
adc
lcall
fcompl
push
scas
xor
jl
mov
cmpsb
sbb
popa
js
cmp
lahf
push
iret
jns
fstpt
dec
jg
ja
insl
cmc
std
aas
notl
mov
cmp
cwtl
repnz
mov
aam
xchg
dec
sbb
pop
test
daa
pop
push
lods
mov
add
mov
cmpsb
subb
cmpsl
jmp
add
stc
and
in
jbe
sti
inc
xor
or
insl
xor
inc
xchg
jbe
lods
sahf
roll
xor
cmp
add
sub
loope
lcall
pop
cmp
mov
fs
hlt
adc
loopne
and
xor
insb
fcomi
outsb
push
push
hlt
ds
sbb
pop
neg
pop
lea
and
in
ljmp
in
test
jge,pn
cmp
inc
xlat
xor
inc
push
aas
cmc
popf
dec
repnz
pop
xor
mov
cmp
mov
jo,pt
push
push
inc
stc
leave
dec
jnp
enter
and
std
stos
notb
pop
test
sbb
arpl
xchg
mov
jne
inc
cmp
mov
inc
mov
test
add
sub
pop
jp
movsl
mov
xchg
out
stos
fwait
sub
cwtl
add
pop
shrb
sub
cmp
push
sub
out
push
outsl
mov
mov
mov
push
push
ds
pop
loope
js
lods
data16
add
mov
into
jns
ja
inc
lock
test
xchg
jo
mov
fstpt
jge
push
sbb
imul
jmp
lock
sbb
js
fiadds
sarl
push
and
add
jmp
adc
sbb
adc
pop
adc
cmc
push
notl
je
rcll
outsb
or
repz
push
popf
inc
inc
ljmp
mov
fcoms
or
mov
sarb
pop
insb
adc
pushf
stos
adc
jp
imulb
jae
inc
sahf
xchg
sbb
scas
popa
or
inc
adc
shll
std
pop
push
aas
and
fwait
jg
out
es
push
je
or
push
aam
and
jge
xchg
repz
std
andb
addb
leave
ljmp
loope
scas
inc
sahf
and
fs
pop
push
or
fisubrl
jmp
mov
xchg
sub
pusha
mov
jnp
push
fidivs
pop
mov
lods
jmp
cmp
sub
repnz
cmpsb
xor
mov
shlb
jbe
push
and
pop
add
in
pushf
mov
sahf
jo
cmp
mulb
pop
fcmovnu
into
and
mov
mov
arpl
fimull
fldl
mov
ret
add
adc
or
jl
shl
out
push
inc
shrb
mov
sarb
jle
hlt
cmp
mov
int3
push
testb
in
mov
mov
loop
mov
int3
dec
out
popf
lahf
xor
bound
pusha
lea
scas
push
add
mov
in
or
xlat
mov
push
daa
sarb
sbb
inc
jecxz
leave
out
int
jns
mov
inc
test
or
lret
fbstp
inc
je
inc
out
adc
test
push
in
shr
or
aad
jne
xor
jns
or
addl
jae
sbb
outsb
sahf
js
jo
cmp
lret
adc
movl
sbb
pop
cmpsl
dec
hlt
jecxz
jmp
and
mov
fsubrl
out
jmp
push
adc
cld
out
inc
or
cmp
divb
dec
sbb
pop
mov
mov
sbb
mov
ds
in
shlb
in
movsb
insl
cltd
out
xor
in
pop
dec
inc
addr16
in
jbe
test
push
out
and
in
xor
leave
jg
cmpb
ret
cmp
inc
sahf
popa
testb
pop
hlt
into
pop
pop
ficomps
mov
mov
adc
push
inc
pushf
and
test
test
sub
scas
inc
mov
ds
mov
ja
repz
add
gs
das
jge
cmp
pop
imul
push
cli
repz
jge
sub
dec
bound
add
or
aaa
mov
xor
push
and
jmp
xor
ror
shlb
inc
mov
inc
and
adc
cld
negl
dec
nop
sub
int
add
xor
or
inc
mov
push
mov
xlat
scas
cmp
movsl
es
sub
pop
outsl
dec
ret
sub
int
mov
mov
inc
mov
insb
pop
and
ror
movsl
pop
sub
fildll
mov
and
pop
mov
xchg
pop
jl
das
fwait
mov
xor
inc
adc
std
inc
pop
or
pop
or
sbb
in
add
repz
cmp
mov
cmpsb
jno
jmp
xchg
lret
jg
sub
imul
into
jp
jb
adc
inc
cltd
dec
cmpsb
mov
int3
jbe
mov
mov
lcall
std
jne
inc
lock
fimuls
mov
adc
enter
movsl
enter
fmull
add
mov
popf
adc
aaa
je
jg
jp
in
int3
rcll
xchg
pusha
and
xchg
cwtl
cmpsl
and
into
or
mov
lds
movsl
stos
test
push
pushf
nop
mov
add
movsb
or
sub
shll
pop
jp
sti
rcll
xchg
ljmp
cs
jnp
and
push
jle
add
mov
push
cs
lods
nop
jg
xorl
ret
pop
aas
outsb
lcall
cld
pushf
pop
lods
shlb
sbb
jp
mov
xchg
jno
xchg
mov
and
adc
cmpsl
xor
loopne
or
inc
mov
scas
es
incl
stos
sub
jae
rcrl
and
xchg
push
lods
fimull
lods
sti
cmp
iret
nop
xchg
test
rcrl
in
adc
jb
sub
cltd
mov
jl
adc
nop
out
or
movsb
jno
stos
leave
inc
cmpsl
std
es
add
insl
dec
cmpsl
add
fs
mov
pop
aaa
es
stos
xor
and
push
xchg
sbb
jae
mov
fisttps
aad
jns
jle
mov
jo
iret
lds
push
cmpl
inc
jg
subb
test
sti
out
xchg
xchg
loop
es
pusha
mov
mov
add
pop
push
jmp
mov
imul
enter
stos
cmp
push
xor
shrl
repnz
or
mov
add
mov
mov
push
bswap
mov
imul
iret
sub
movsb
and
dec
fldenv
subb
xor
cmpsb
in
lret
loopne
pop
mov
jno
loop
or
and
sbb
loope
std
shrl
sbb
ljmp
push
inc
ret
and
add
stos
adc
cs
or
and
cli
mov
lds
xlat
inc
jbe
stos
inc
mov
test
hlt
ret
out
add
mov
pop
push
out
xchg
inc
and
mov
bound
sub
adc
stos
js
mov
or
cld
test
in
shrl
dec
cmp
dec
add
shrl
xor
ja
inc
cmpsb
mov
clc
xchg
les
pop
lods
sub
fildll
sub
leave
pop
sbb
sub
popf
rorl
gs
cwtl
mov
mov
fdiv
out
cmp
les
arpl
xchg
push
call
js
push
jo
out
push
lods
out
idivb
mov
cs
jnp
and
ror
into
andl
js
jnp
mov
sub
mov
loope
push
gs
and
push
sbb
cmp
clc
push
xor
enter
fcomps
mov
shrb
xor
imul
xchg
xchg
or
sub
mov
dec
add
sub
je
add
insl
je
repz
sub
daa
jg
push
iret
je
fisubs
jno
fnsave
ja
sbb
fistps
rol
fcoml
inc
xor
or
test
out
add
bound
xchg
pop
cmp
xor
rcll
jbe
insl
mov
or
jbe
mov
xlat
aaa
inc
imul
shll
cmp
jne
sbb
shl
xchg
rcrl
lcall
jae
jo
xlat
jnp
inc
adc
shlb
inc
add
pop
mov
testl
xchg
int3
pop
das
ror
and
and
gs
or
arpl
stos
lods
imul
sub
xchg
xchg
xor
adc
jge
mov
mov
fisttps
arpl
cld
add
jge
mov
cmpl
add
xlat
sub
xrelease
movsl
jle
pop
mulb
mov
jmp
inc
jo
rcrb
or
cmp
mov
popa
mov
and
mov
mov
arpl
dec
call
mov
call
dec
inc
cli
sub
sub
inc
xor
mov
in
fadd
inc
pushf
jge
stos
jle
sub
xor
ljmp
sub
xor
es
in
iret
cmpsb
mov
inc
mov
cmp
aaa
mov
push
shlb
xchg
cmp
mov
mov
adc
jbe
and
xor
sbb
mov
insl
xchg
dec
pusha
jae
push
mov
leave
adc
movsb
push
jb
xchg
scas
push
popa
les
cld
pop
jmp
jmp
std
jl
les
dec
mov
shr
mov
je
mov
xor
fildl
lcall
xchg
in
imul
xchg
push
shrl
pop
insl
or
sbb
cs
stos
adc
sub
call
jmp
sarb
pop
or
fs
xlat
popf
int
inc
test
cmp
int
push
dec
pop
push
xchg
out
cmp
out
push
cli
cmp
lods
adc
push
cwtl
xor
outsl
push
lahf
sub
xor
cmp
shll
leave
jno
lret
and
orl
push
bound
inc
or
xor
xchg
dec
add
cs
xchg
insl
insb
ret
mov
adc
outsb
pushf
add
popf
scas
mov
mov
sub
inc
je
les
mov
sub
call
jmp
imul
rcrl
aaa
mov
inc
das
sub
stc
outsl
cli
jo
or
or
into
jae
shll
pushf
repz
xchg
adc
xor
mov
sti
pop
pop
fs
add
or
aaa
or
add
sbb
jl
dec
jge
lods
sbb
ret
leave
xchg
push
lds
xchg
dec
lods
cmc
pop
cs
push
xorl
in
test
call
adc
ljmp
mov
jg
mov
cld
iret
and
mov
ficompl
sub
aaa
daa
mov
xor
es
sbb
push
mov
adc
aad
lock
imul
jo
sbb
mov
addr16
add
clc
lahf
dec
xchg
scas
aaa
mov
xchg
ror
enter
lds
in
jns
outsb
xor
or
cwtl
xor
lcall
pop
xchg
add
cmp
inc
push
push
imul
mov
cmp
pop
and
mov
cmp
inc
or
and
sub
aas
cwtl
pop
dec
or
lea
iret
scas
loope
xorb
mov
mov
mov
push
addr16
pop
push
lret
inc
xor
and
dec
xor
mov
xor
or
add
inc
mov
jge
xchg
dec
scas
fcoms
fmull
jecxz
pop
cmpsl
cld
jne
mov
clc
mov
push
and
paddusw
icebp
push
inc
jnp
js
mov
lock
test
mov
repnz
sahf
nop
fcmovnu
out
mov
push
out
icebp
shrl
and
int3
aam
xor
leave
shlb
mov
mov
loop
add
sbb
mov
loope
test
jecxz
dec
xchg
or
jns
and
movb
clc
sub
jg
push
std
ds
jle
xor
and
cmpsl
loop
add
mov
subb
aas
push
jle
xor
xchg
fists
mov
xor
xchg
fwait
imul
adc
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
loop
cmpsl
mov
dec
es
lods
dec
mov
adc
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
add
or
add
pop
loope
push
pop
and
mov
lds
sub
push
movb
fpatan
or
daa
mov
jle
pop
push
jns
cmp
test
es
cmpsl
out
lds
scas
inc
cmp
fsubrs
jno
cmp
cmpsb
orb
imul
push
call
or
sub
push
cwtl
dec
jg
push
adc
repz
adc
test
push
pop
push
mov
ds
in
xlat
sub
pmaddwd
jne
pop
and
mov
xchg
pmaxsw
adc
lods
push
cmp
pop
ret
and
mov
stc
aam
dec
out
enter
add
jge
adc
int
pop
jmp
mov
mov
push
jle
lods
fwait
cmp
hlt
cmp
mov
or
std
xor
lret
sub
test
mov
cmp
pop
mov
sahf
jmp
push
add
jae
mov
jbe
mov
call
int
ds
scas
mov
dec
xor
and
sub
movsb
push
xor
fistpl
mov
fistpl
dec
and
sti
test
or
cmp
push
push
int
aaa
les
adc
pop
or
aam
rcrb
add
mov
loopne
or
jno
sbb
fwait
test
cwtl
popa
push
dec
rclb
sub
jg
pop
imul
insb
sahf
cmpsl
xchg
and
pop
jo
push
ds
std
lcall
jmp
in
or
fs
inc
push
idivb
or
lods
andb
outsb
sti
call
enter
push
pop
inc
mulb
pusha
and
lahf
xchg
adc
iret
sahf
jno
add
ja
idiv
jg
mulb
mov
add
add
add
jne
xchg
ss
add
jns
cmc
push
mov
lahf
fisttps
adc
adc
mov
clc
pop
pop
pop
in
nop
sbb
add
movsl
xorl
mov
roll
insb
shrl
pop
sarl
aas
pushf
pop
sbb
das
jno
sbb
jnp
ret
pop
xor
mov
orl
adc
dec
pushf
push
cwtl
bnd
in
stos
notl
out
jg
loope
mov
pop
pop
jne
xor
pop
inc
mov
dec
jo
rorb
sahf
movsb
jb
cld
cs
or
unpckhps
cmp
rdpmc
push
jb
lds
ja
shr
in
bound
push
fisubrs
add
test
sub
mov
imul
movhps
jg
lods
cltd
dec
popf
mov
shrb
cwtl
testl
xlat
add
pop
push
mov
mov
pop
jge
fmul
cmc
push
push
mov
or
icebp
testl
mov
test
ss
ret
popa
fists
loope
scas
pop
ror
cli
movsl
inc
popa
cltd
daa
lret
pop
call
add
push
lret
in
mov
sbb
xor
sub
insb
out
jbe
push
sysret
incb
pop
cmpsb
or
cwtl
xorl
pop
pop
loop
cmp
cmpb
nop
push
or
sub
pop
aad
mov
jne
sub
xor
inc
xchg
imul
jmp
fisttps
ret
mov
aam
leave
mov
mov
lods
mov
mov
cmpsb
and
mov
loope
mov
pop
mov
out
arpl
movsb
js
adc
cli
jle
mov
pop
sbb
pop
std
jg
sti
mov
add
add
add
xchg
jbe
into
cld
and
mov
push
sub
push
cwtl
movsb
popl
mov
mov
ret
hlt
sbb
aaa
cmp
xor
shll
test
mov
loop
mov
mov
xchg
insb
adc
xor
jmp
lcall
hlt
bound
call
mov
mov
loop
inc
sbb
cmp
insl
mov
add
pop
mov
scas
jno
xor
pop
addr16
mov
mov
daa
jae
inc
adc
ljmp
xor
cmpsl
test
pop
inc
cltd
stos
hlt
daa
fwait
sarb
jle
jns
arpl
xor
jb
mov
aad
jns
jne
icebp
aaa
pop
movsl
mov
dec
push
call
adc
xchg
ficoml
outsb
or
mov
hlt
adc
cmpsl
jae
imul
add
lds
lods
and
fidivrs
scas
stc
outsb
inc
mov
sarl
dec
std
push
nop
das
outsl
ret
pop
and
shll
movsl
pop
aaa
sbb
sbb
inc
dec
addr16
mov
adc
lods
ret
jne,pn
mov
mov
xor
testb
mov
je
and
imul
sarl
pop
mov
cmp
sub
push
aam
push
arpl
lea
outsl
xchg
cmp
mov
mul
nop
test
aad
push
aam
adc
jmp
mov
xchg
rdtsc
jecxz
pop
dec
lock
lret
divl
cmp
aaa
push
imul
lahf
out
loope
sub
test
xchg
xor
sbb
out
sahf
lods
pop
mov
fwait
ret
int3
xchg
xchg
and
jecxz
cmp
xchg
ret
movsb
ret
pop
and
and
add
push
add
mov
int
mov
mov
add
add
add
loopne
pop
subb
mov
or
test
xor
and
insb
xchg
jo
les
shl
cmpsl
mov
dec
or
and
sub
iret
ljmp
pop
cltd
pop
mov
cmp
jne
imul
fnsave
dec
es
mov
mov
daa
icebp
cmc
push
inc
adc
xchg
jae
inc
iret
ja
jne
mov
lret
repnz
outsl
repnz
sarb
mov
rcll
mov
adc
jg
ret
inc
cmp
mov
decl
imul
xchg
push
cmp
out
sub
aam
test
outsl
or
jnp
sub
mov
xchg
mov
mov
xchg
fnsave
lea
ret
cmpsl
and
adcb
adc
mov
pop
rcr
push
outsl
lock
mov
lcall
pushf
cmpsb
cmp
rorb
xor
cld
or
mov
push
cmp
dec
hlt
or
es
pop
rorl
dec
mov
bndldx
cmp
mov
xchg
cmp
imul
jne
ja
cmp
dec
in
ja
std
cmpsl
jo
mov
subb
add
mov
push
out
and
mov
dec
stc
icebp
jmp
inc
xor
and
jmp
fidivrl
popf
insb
lods
orl
push
jbe
repz
xchg
inc
jle
mov
ret
jo
push
add
mov
jnp
push
nop
xchg
mov
lret
in
xchg
lcall
ds
lds
xchg
pop
adc
mov
cltd
arpl
repnz
push
mov
and
mov
mov
lods
add
js
hlt
mov
std
jl
xor
jg
push
push
or
incb
add
popa
idivl
xor
adc
add
pop
rcrl
mov
fsubrs
js
lods
out
cmpsl
cld
mov
rcll
push
test
sub
jo
mov
rclb
or
pop
aam
mov
out
xor
pop
sbb
mov
pop
es
jne
lods
jo
loop
mov
sbb
popa
mov
cmp
ss
divl
lret
mov
push
adc
jge
call
bound
push
test
mov
into
cltd
dec
dec
cwtl
jl
push
sbb
aad
jb
mov
jno
fwait
cmp
pop
pop
in
call
mov
dec
mov
fbstp
xor
loopne
sub
xor
push
or
push
inc
jbe
xor
push
int
adc
cmp
mov
mov
sub
cmpsb
and
inc
addr16
mov
repz
aas
mulb
rclb
mov
push
daa
call
lods
mov
and
movsb
fimuls
add
mov
sbb
or
adc
jo
or
jb
xor
frstor
xlat
ljmp
decb
cli
bound
lock
adc
bound
cmpl
mov
ret
mov
jns
lret
rcrl
mov
jbe
hlt
jbe
mov
pop
jmp
bound
mov
mov
in
adc
shr
xor
xor
inc
jl
inc
jl
js
int3
xor
imul
addr16
xchg
mov
mov
mov
pop
lock
aad
or
lcall
popf
pop
sub
xchg
dec
sub
leave
js
xor
ret
push
add
pop
mov
mov
clc
sahf
xor
decb
add
insb
mov
mov
adc
lds
mov
add
xor
cld
cmc
in
adc
repz
xchg
xchg
adc
aam
decb
adc
adc
sbb
in
cmpsb
test
movsb
mov
and
sub
aam
dec
insl
or
leave
sub
rol
rol
sbb
dec
xchg
cmpsb
loop
jne
adc
aad
frstor
repz
loopne
inc
fnsave
jl
loop
cltd
bound
fs
lea
push
nop
bound
mov
pop
lret
shlb
inc
outsl
inc
sbb
fldl2t
popa
pusha
push
push
sahf
inc
loope
lret
sbb
addr16
xor
bound
sahf
pop
sbb
sbb
daa
sbb
rep
cwtl
popf
mov
push
sbb
and
jmp
dec
xor
mov
aas
cmp
dec
es
xor
pop
jl
mov
xchg
fldcw
push
fmulp
jmp
movsl
cmp
and
out
sbb
leave
rcrb
cmovs
jo
pop
push
sub
popa
subb
mov
sbb
sarb
fwait
inc
jae
aad
push
mulb
fildll
cs
jno
jns
add
repz
imul
aaa
outsb
call
call
inc
adc
mov
inc
insb
ret
bound
adc
repz
jne
cmp
enter
shlb
stos
fmull
mov
cltd
or
add
test
dec
fisttpll
fiadds
stc
sbb
mov
lret
jne
inc
in
stos
pop
adc
lret
jb
cmp
movsb
stos
mov
filds
repnz
push
jns
sbb
in
cmp
adc
popf
add
cmpsl
sbb
jg
pop
fstps
cld
mov
add
add
add
pop
mov
jmp
fucomip
jns
jle
mov
pop
mov
test
in
enter
push
pop
dec
inc
pop
push
sub
and
fnstenv
inc
push
mov
movsb
pop
sub
mov
repz
xchg
push
stos
sar
push
sub
mov
jae
pop
xchg
jb
ljmp
pop
std
loop
fidivrl
popa
mov
bound
negl
xchg
in
cmpsb
iret
je
mov
ret
and
sbb
cmp
inc
lock
repnz
xchg
pop
push
icebp
addr16
popa
fucom
fs
xor
dec
add
popf
xchg
insl
lcall
and
jne
repnz
daa
jae
negl
cs
loope
push
jp
iret
adc
mov
or
aam
mov
fldln2
sti
pop
pop
add
cmp
test
repz
loopne
lea
cmp
push
jle
arpl
jnp
cmp
jp
push
inc
bound
frstor
push
mov
in
faddl
int
dec
cmc
or
xor
sub
jns
in
and
loopne
jmp
outsl
push
mov
hlt
dec
add
mov
popa
adc
loope
fiadds
stos
xor
cltd
push
xorps
add
aad
pop
cld
or
divl
pop
lret
xlat
stos
mov
mov
pop
lods
popf
dec
lahf
loope
pop
adc
cltd
aas
or
add
subl
pop
dec
test
jb
ljmp
cmpsl
and
add
js
xchg
mov
xchg
add
sub
aam
inc
push
das
push
mov
add
adc
es
rclb
pop
test
or
xchg
mov
add
add
add
popf
paddd
fidivl
mov
add
incb
add
and
popf
mov
sbb
repnz
loop
push
sub
or
xchg
inc
insl
inc
jge
rclb
iret
sbb
mov
orb
or
sub
fdivrl
pusha
push
sub
and
mov
cmp
or
mov
clc
cmpsl
cmp
dec
fs
fs
mov
stos
outsl
scas
mov
nop
mov
xchg
stc
loop
popf
out
push
mov
idivl
ja
cwtl
test
icebp
or
js
loopne
xor
inc
pop
xchg
mov
lods
sub
and
jno
or
movsb
xchg
shrb
xor
stos
push
pop
cmp
enter
jno
jg
jo
and
data16
add
out
mov
into
iret
adc
cmp
movsl
dec
push
mov
test
pop
push
adc
das
add
fwait
sbb
les
pushf
xchg
mov
mov
jmp
arpl
xor
aad
insl
cmpsl
jae
aam
imul
jbe
pop
sbb
ret
inc
and
js
and
cli
in
mov
pop
les
and
out
jne
icebp
push
sub
lret
iret
pop
ss
pop
pop
fistpl
cwtl
pusha
shr
cmp
lea
repnz
xchg
bound
add
sbb
cltd
fsts
mov
or
adc
les
dec
xor
mov
adc
jo
mov
pop
adc
pop
icebp
cmc
mov
in
lea
test
hlt
xlat
adc
sub
pop
lods
jo
pop
inc
xchg
out
std
daa
adc
cli
sub
fdivrl
cltd
mov
psadbw
pop
lahf
or
sahf
lret
mov
pcmpeqd
sub
push
mov
dec
dec
pop
out
jp
push
add
incb
jg
add
push
movsb
lea
sub
neg
loopne,pt
clc
xchg
add
incb
add
jo
test
repnz
std
jmp
mov
adc
sbb
cli
sbb
sbbb
insl
add
cli
or
out
xor
mov
mov
xchg
cmpsb
fildll
or
dec
xchg
bound
pop
xor
or
mov
push
mov
mov
or
mov
popa
arpl
mov
push
xchg
pop
rcll
into
dec
mov
cs
fidivrl
sbb
imul
repnz
sahf
les
pop
fnstcw
pushl
nop
mov
adcb
je
cmp
int
lods
mov
mov
or
mov
cmp
stos
jnp
lds
popf
sub
push
sub
sub
xchg
lret
stos
xchg
sbb
dec
lods
inc
push
repnz
dec
jge
fs
sub
mov
loope
iret
inc
sub
mov
xchg
and
mov
inc
out
jmp
sbb
out
adc
adc
and
shrl
mov
shlb
xchg
push
dec
icebp
push
enter
fsubrs
movsb
jne
xchg
bound
jl
xor
test
push
push
sbb
sub
lcall
icebp
mov
and
rol
cmp
push
or
cmc
dec
ret
jecxz
dec
push
pop
mov
xor
scas
aam
fistl
addb
clc
jg
pusha
insb
add
xchg
xchg
loope
ljmp
dec
bound
repz
pop
lock
js
push
add
sub
cmp
arpl
jge
cmp
loope
test
pop
and
jne
scas
fcoml
idivl
push
dec
mov
cmp
repnz
mov
hlt
and
xchg
push
jge
ret
gs
sub
inc
mov
add
mov
cmp
popl
mov
in
rcrl
incb
add
lods
add
xor
inc
sbb
arpl
sub
pusha
fnstsw
icebp
push
pop
js
das
or
cmp
mov
and
orl
push
fldcw
sbb
ret
dec
mov
jl
jl
rcl
insb
pusha
xchg
ret
xor
imul
sbb
push
ret
mov
add
cmpps
mov
fwait
mov
aaa
aam
and
push
pop
mov
in
xor
sub
lds
or
inc
and
std
outsl
mov
xor
mov
aad
imul
sbb
loope
xchg
sbb
je
test
scas
mov
sarl
test
sbb
jns
adc
dec
cs
lret
mov
or
xlat
jle
xor
fnstcw
push
push
ljmp
and
inc
adc
mov
push
mov
movzbl
in
sbb
dec
les
mov
sti
jo
fsubs
mov
les
test
gs
cmp
inc
mov
lock
stos
adc
and
lret
sub
xchg
cmp
add
dec
leave
or
xor
jno
push
mov
pusha
or
xchg
lcall
test
int
scas
sbb
mov
or
pop
inc
mov
push
out
shl
inc
rclb
shlb
outsb
fiaddl
imul
jae
push
je
push
jp
jl
fdiv
lcall
and
outsl
inc
pop
fisubrl
std
xor
mov
hlt
cmp
and
aas
xor
frstor
pop
jo
and
aad
pop
test
pop
dec
sbb
add
lods
dec
rorl
add
xchg
std
jg
mov
shrl
add
add
dec
shrl
ds
ss
pop
push
in
popf
dec
scas
add
mov
xchg
add
mov
jmp
mov
cmp
inc
ljmp
cwtl
mov
and
cs
sbb
test
das
push
sub
jbe
mov
mov
xor
jo
cmp
jg
jno
lcall
and
sbb
lods
mov
gs
cli
dec
xor
ljmp
jbe
or
mov
adc
sub
jg
aad
and
lret
into
pop
pop
jne
add
fists
dec
mov
xor
jbe
jne
fimuls
jb
and
mov
movsb
pinsrw
repnz
jne
sarl
repnz
inc
dec
dec
movsb
push
lcall
or
mov
adc
and
loop
cmpsl
mov
hlt
lock
addr16
xchg
push
shlb
xor
mov
idivb
mov
pop
and
sub
fsubrl
shll
sti
mov
cltd
jns
addb
int
lret
sbb
mov
or
jmp
rcrl
or
bound
ret
sub
lcall
bound
test
pushf
pop
sub
jle
jl
in
aaa
mov
sub
test
dec
cs
jns
dec
jl
div
adcl
mov
jmp
xchg
pusha
mov
aas
pop
dec
cmp
call
jp
hlt
pop
inc
cltd
imul
cmp
dec
xchg
insb
xchg
imul
gs
mov
add
mov
and
jns
jmp
js
fsub
and
bnd
push
jb
mul
pop
push
add
add
add
mov
idiv
iret
rorl
jno
out
jg
cwtl
add
incb
add
jnp
and
sub
lds
test
daa
and
out
movsl
push
lods
ror
inc
cmp
mov
fwait
insl
pusha
outsl
inc
iret
jo
daa
sahf
mov
and
es
jo
outsb
repnz
xchg
fwait
and
sbb
add
adc
lcall
jge
pusha
xor
pop
popf
loope
add
mov
ja
insb
cmp
fwait
jno
shrl
pusha
int3
or
fistl
sbb
in
dec
loop
pop
push
inc
sub
sbb
fldcw
into
sarb
out
stos
ljmp
cmp
sbb
nop
scas
ror
rol
sbb
xor
int
out
jle
aaa
inc
lret
rol
add
or
pusha
pushf
and
rclb
pop
sti
inc
enter
or
mov
push
xchg
mov
sahf
pop
lea
pop
push
rcll
fidivrl
gs
pop
loope
jb
mov
into
bound
mov
dec
scas
push
inc
cmpsl
lea
leave
jo
mov
insl
aad
mov
int3
push
push
leave
movsb
in
mov
adc
int3
movsb
aaa
cli
frstor
enter
mov
jb
les
sub
mov
mov
push
movsl
adc
jecxz
sbb
int3
mov
cmc
or
fwait
stos
jmp
sahf
rorl
das
nop
dec
jno
pop
sub
xor
insb
or
cmpsl
aam
hlt
outsb
std
sub
or
dec
lret
adc
rorl
dec
mov
fdivl
ds
in
cmp
aam
ljmp
in
popf
or
and
hlt
push
pop
adc
push
xor
in
std
out
cld
jge
aam
inc
push
mov
pop
cmp
popa
shlb
mov
leave
xor
and
adc
push
rcll
dec
or
aam
dec
aad
add
ret
mov
ja
or
mov
add
incb
add
fwait
sbb
pop
xor
dec
sub
repz
fsubrl
inc
push
push
sub
js
hlt
sub
inc
mov
mov
push
idivb
add
and
cmp
pop
sub
inc
mov
dec
xchg
cmp
sbb
adc
repnz
xchg
jb
jb
rol
jl
popf
mov
int3
mov
add
gs
pop
xchg
adc
mov
lods
sbb
jp
sti
sbb
push
ljmp
bnd
jb
push
int
setae
aad
jne
sub
xlat
cmp
in
mov
icebp
jg
fcmove
bound
jb
jo
test
pop
adc
notl
arpl
cmp
pop
push
mov
lret
mov
imul
fs
shrb
dec
das
cmovle
jle
sub
sbb
stos
sub
ror
xchg
icebp
dec
push
xor
push
sbb
add
cmpsl
xchg
mov
sbb
jbe
movsb
xchg
dec
cmp
in
int
mov
rcrb
sub
movsb
add
stc
add
and
adc
repnz
adc
in
push
ret
mov
mov
push
xchg
dec
lret
outsb
cmpsb
les
adc
push
xchg
sbb
xor
lods
jp
and
repz
aas
es
and
xchg
jmp
pop
cmp
aam
lock
aam
add
fdivl
out
xchg
sbb
cmp
movsb
push
or
pusha
and
pop
cmp
jmp
cmpsl
sbb
inc
jnp
sti
sti
and
dec
hlt
dec
and
cli
imul
mov
sti
cvtps2pi
or
xchg
cmc
or
add
push
push
jle
xlat
lret
push
testl
pushf
add
incb
add
jno
push
ret
jle
cwtl
arpl
pop
cs
sbb
mov
sbb
jg
lock
pusha
mov
inc
rcll
aaa
cmpl
loop
cmp
and
or
add
scas
mov
shlb
add
sub
cltd
and
std
mov
dec
fdivrs
movsl
ficomps
ja
shr
nop
sub
je
jno
xor
jg
push
and
xor
push
test
pop
inc
push
or
je
mov
jmp
aas
imul
sbb
lret
jmp
push
cmp
sub
mov
jae
cmp
xchg
pop
cld
jbe
dec
outsb
imul
out
jb
mov
add
lcall
and
daa
std
insb
mov
or
shl
cs
xchg
adc
ss
and
pop
cmpsl
pop
dec
xorl
xor
inc
adc
cmp
inc
cmp
lret
movl
pop
pop
ljmp
and
shlb
jbe
scas
jle
xchg
pop
rcl
pop
stc
ja
movsb
cmp
jl
jne
cltd
sbb
inc
stos
xchg
pop
add
inc
push
outsb
stos
cmp
and
lret
sub
setnp
push
mov
fs
push
add
cmp
pop
pop
mov
push
add
mov
push
mov
or
and
roll
push
outsl
mov
ret
xchg
movsb
gs
ss
lock
cmp
mov
lea
out
imul
rcr
push
sahf
lea
xchg
dec
lds
adc
mov
cmp
ds
mov
rcl
jl
ror
dec
pop
cltd
dec
stos
push
lcall
fnstsw
dec
outsl
nop
xchg
pop
icebp
xchg
xchg
aaa
jno
idivl
fs
pushf
dec
and
mov
int3
fsubrl
xchg
sahf
jns
and
pop
add
adc
or
pop
out
repz
fucomp
shufps
add
incb
add
mov
in
in
inc
pop
jmp
push
aas
enter
js
mov
mov
shlb
fdiv
cli
pop
push
ret
jns
popf
push
push
pop
test
sbb
and
test
inc
xor
std
xor
hlt
outsb
and
jnp
mov
std
fstpl
test
cmp
sub
fidivrs
fimull
push
scas
jl
pop
cmp
adc
mov
cs
mov
mov
orl
xchg
jg
mov
xchg
cmpb
mov
lods
outsl
jnp
xchg
pop
jmp
adc
push
fimuls
shl
push
mov
jno
mov
mov
xchg
dec
sahf
pop
lds
ds
lcall
xor
rorb
in
xchg
es
mov
mov
pop
jno
mov
xor
sub
sarl
fldcw
add
nop
sub
add
test
cmpl
mov
mov
jo
sbb
add
ret
fs
scas
fcomps
andb
mov
dec
cltd
and
pop
mov
sti
or
mov
mov
mov
dec
adc
jp
aad
dec
push
stos
mov
xchg
or
xchg
or
pop
rcrl
jl
lret
push
mov
xor
mov
lcall
dec
clc
xchg
or
pop
push
lds
insb
sub
jge
andl
push
and
out
lcall
es
les
cli
pop
inc
je
mov
clc
inc
and
mov
aam
fnstsw
and
or
add
mulb
dec
je
inc
sbbl
add
leave
xchg
insl
mov
out
nop
sbb
mov
add
jno
mov
inc
jo
lahf
pop
out
dec
xor
push
jae
adc
sahf
jbe
jae
stos
hlt
in
pushf
jle
sbb
cmpsb
xor
icebp
mov
in
fistpl
subl
aam
lret
daa
pop
mov
out
insb
add
jo
int3
out
call
mov
cmpsb
push
clc
lea
cmp
jo
push
in
jl
cmp
negb
push
cmp
xor
movsb
cmpsb
sti
insl
jge
adc
loope
sahf
scas
sahf
decb
jb
sbb
mov
inc
div
or
fwait
inc
clc
mov
call
sub
add
sub
lret
jg
adcl
icebp
cs
jle
ds
mov
int3
out
jnp
out
mov
out
cmp
sbb
mov
rclb
dec
mov
and
jne
iret
mov
insl
xchg
stos
into
mov
int3
pushf
lret
pop
orl
out
adc
mov
stos
ret
stos
adc
and
cmc
imul
rcr
mov
dec
jl
push
push
lcall
lea
rcrl
ret
fsubrl
js
sub
outsb
xor
test
adc
adc
mov
daa
data16
lock
jecxz
pop
jne
adc
cmp
orb
xchg
movsl
dec
cmp
or
dec
mov
mov
mul
pop
subb
mov
fidivrs
jecxz
mov
mov
mov
push
cmp
jbe
out
rolb
jg
imull
outsb
stos
popa
daa
gs
cmp
js
push
into
mov
mov
icebp
in
sbb
dec
adc
out
popf
fistps
fsubr
leave
or
xorl
pop
pop
xchg
push
xor
mov
and
add
add
dec
out
ja
idiv
pop
out
cmp
add
incb
add
adc
mov
dec
outsl
inc
lods
push
mov
jno
jnp
cmp
ljmp
enter
sbb
or
cmc
xchg
sub
jns
ficoms
and
lods
cmpxchg
into
mov
loopne
jp
xor
or
in
sub
pop
sarb
pop
not
adc
lods
dec
jns
es
mov
xchg
add
lods
fdivp
popa
inc
xchg
inc
add
icebp
xor
jno
xchg
mov
add
sbb
popf
dec
adc
js
pop
cli
imul
and
dec
movsl
adc
stos
or
add
stc
insl
cs
cli
push
out
xchg
pop
loope
in
lret
mov
nop
mov
ds
push
testb
cmp
rcll
pop
push
jns
inc
orb
cmp
clc
ja
pop
sub
nop
or
lds
adc
push
pusha
movsl
jle,pn
test
push
or
insl
pop
lds
popa
push
arpl
leave
mov
cs
cmp
inc
ss
cmpsl
cmp
cmp
cmp
xchg
mov
push
fldenv
out
inc
loope
loop
jmp
rcr
or
push
in
out
pop
cli
inc
mov
movsb
dec
pop
pop
add
cli
imul
negl
xchg
lods
movsb
dec
in
popf
pop
cmc
je
fbld
add
out
shr
mov
das
jl
std
sbb
jmp
mov
je
dec
popf
dec
jb
adc
jne
cmp
loop
enter
popa
pop
add
mov
movsl
imul
repz
dec
pop
nop
lcall
push
cmp
ja
mov
inc
sub
and
or
adc
and
or
push
push
dec
scas
dec
cld
mov
mov
sbb
scas
sbb
xor
add
ret
mov
xor
mov
add
gs
test
lret
sahf
mov
add
sti
mov
inc
mov
movsb
add
incb
add
or
xchg
or
pop
mov
leave
push
xchg
mov
xchg
add
jle
lea
rorl
movsl
inc
push
cmp
inc
aaa
fmull
inc
imul
in
cmp
mov
rcll
push
mov
xor
cmp
xchg
dec
pop
mov
xchg
dec
or
jmp
test
mov
and
insb
data16
pop
jecxz
and
rorl
jo
cli
call
or
mov
xchg
sbb
push
stos
dec
scas
push
ret
or
sbb
jl
ljmp
mov
jmp
push
add
sbb
xor
test
mov
xchg
pop
cltd
aam
test
inc
movsb
cmpsb
jb
pop
pop
and
or
ret
fidivl
mov
or
mov
dec
add
sub
fcmovbe
jb
in
push
dec
mov
mov
stc
lods
imul
pushf
repz
inc
cmp
rcll
add
outsb
pop
fwait
dec
cs
fbld
pusha
jne
and
inc
sbb
out
lock
ljmp
mov
xor
pop
sub
dec
movsl
ret
mov
pop
into
and
shll
push
scas
in
jge
or
daa
rcl
sub
cwtl
xor
xchg
mov
sub
sbb
insb
dec
jns
mov
dec
test
cli
or
sub
dec
dec
jle
inc
daa
mov
out
lods
mov
sub
add
xchg
div
ljmp
cmp
stos
adc
mov
movsb
cmp
cmc
sub
or
fs
push
loop
repz
out
jmp
fld
mov
sbb
or
pop
or
stos
fisubrs
jno
dec
nop
mov
jns
xchg
ja
lods
jns
jle
jbe
dec
jbe
and
inc
cmpsb
inc
add
xor
sahf
xor
sub
sbb
add
incb
add
mov
test
enter
cmpsb
cmpsl
cmp
mov
in
sbb
inc
gs
aad
mov
xor
psubusb
adc
mov
lock
fistpll
mov
in
mov
sbb
mov
loope
popa
push
popa
nop
loopne
jp
fcompl
xor
cli
roll
imull
mov
push
and
fwait
dec
jo
not
stc
outsb
sbb
shrl
ja
lret
dec
dec
xor
jo
xor
pushf
inc
sahf
jnp
ljmp
mov
push
cltd
mov
inc
rcrb
cwtl
xor
mov
daa
lret
sbb
mov
shl
fs
xchg
jae
dec
ja
sub
pop
shr
lret
movsl
test
xor
hlt
lahf
ds
enter
shr
lock
push
sbb
sub
stc
outsb
pop
cltd
shlb
mov
xchg
in
test
or
je
xchg
pop
inc
daa
sbb
outsl
mov
mov
push
or
inc
shl
adc
mov
std
jae
sub
mov
outsb
pop
mov
push
ja
and
in
cmp
xor
mov
xchg
mov
jl
incb
inc
jg
push
hlt
mov
adc
adc
cmp
cmp
pusha
cmp
test
insl
sub
or
inc
out
subb
cld
outsl
out
inc
push
pop
or
ret
enter
fdivs
push
ljmp
neg
ja
sub
insb
sub
dec
sti
mov
es
aaa
pop
cmp
push
sub
xchg
aas
pop
lret
pop
hlt
jae
lock
cmp
mov
insl
lock
insb
mov
dec
pop
add
xor
nop
xchg
jbe
push
xchg
lret
adc
and
stc
std
in
mov
mov
std
cmp
imul
add
add
dec
popa
sbb
cmp
push
push
xchg
cmp
cmp
or
pop
jbe
pop
fcompl
out
lret
pop
clc
push
inc
dec
out
mov
mov
or
lcall
mov
adcl
cwtl
outsl
sub
mov
xchg
inc
int3
jecxz
ljmp
aaa
jne
mov
jns
movsl
in
adc
fstps
rcl
ds
into
inc
mov
sub
xchg
push
mov
push
in
xchg
test
in
xorb
cmp
dec
add
ja
cmpsl
add
nop
xchg
add
mov
pop
sbb
in
sbb
mov
scas
repnz
push
dec
pop
adc
loope
test
call
fsubl
jo,pt
lahf
testb
daa
inc
imulb
inc
mov
mov
mov
testl
into
push
lret
or
fwait
js
pop
loopne
fwait
pop
shrl
imul
fistps
jp
jmp
and
aas
sbb
push
adc
aaa
xchg
das
fcmovbe
xor
lcall
jnp
andl
iret
lea
inc
or
cmp
or
ja
cmp
out
das
dec
mov
pop
adc
shr
jle
cld
sub
daa
int3
ss
pop
out
into
fcmovb
xchg
jmp
shrl
shlb
sar
pop
clc
lea
push
sbb
jmp
lcall
in
ja
cmp
sbb
mov
popf
mulb
mov
lahf
mov
jb
mov
aaa
out
push
xor
add
mov
cwtl
adc
loope
mov
mov
and
xor
ficompl
sbb
test
shlb
jg
push
pop
fstpl
addr16
jecxz
add
rolb
testb
inc
sbb
add
loopne
add
incb
add
mov
sub
insl
mov
xlat
sbb
aam
movsb
pop
cmp
xorb
lahf
inc
fwait
xchg
jle
adc
lock
push
shl
mov
loopne
lahf
ret
inc
mov
jecxz
jne
xchg
fninit
inc
push
jecxz
pusha
jbe
xchg
add
sbb
and
cmp
arpl
in
lods
sbb
jne
adc
inc
sahf
mov
push
loope
add
push
decl
push
or
xchg
cwtl
mov
or
hlt
negl
lret
mov
xchg
xor
out
sbb
cltd
sub
mov
mov
xor
sbb
push
xchg
and
lods
shll
mov
mov
push
pop
jmp
xchg
xor
lds
jns
or
fbstp
jo
ljmp
pushf
adcl
ret
xor
rorl
jge
ret
les
setg
fidivl
xchg
sub
enter
test
lahf
enter
mov
push
jl
xchg
aaa
sbb
pop
inc
sbb
mov
loopne
leave
in
cmp
xchg
xor
lds
int
jbe
and
inc
leave
lcall
fs
sbb
fdivl
pop
in
in
xor
fwait
int3
gs
jl
mov
mov
outsl
push
inc
pop
xchg
adc
dec
cmpsb
mov
repnz
out
add
fidivs
mov
pop
and
xchg
lds
mov
xor
test
inc
or
daa
cmpsl
sbb
imul
mov
dec
aam
nop
mov
xchg
call
xor
pop
test
pop
cmp
pop
lds
and
xchg
adc
jp
push
mov
xchg
sbb
or
and
mov
arpl
inc
inc
popa
data16
gs
mov
js
jecxz
fisubrs
add
popa
inc
push
leave
iret
nop
lret
inc
fdivrp
call
ret
pop
lret
adc
inc
inc
pop
testl
cmp
idiv
cmp
mov
push
shll
jmp
sbb
mov
repz
fwait
mov
jb
icebp
fmul
cmp
add
fisubl
inc
ret
data16
jecxz
int3
lods
inc
rcl
adc
outsb
push
aad
mov
movsb
inc
mov
push
cmc
mov
add
dec
push
sub
lods
cs
jle
scas
imul
ss
xchg
stos
stc
lds
cs
push
cmp
and
xor
xchg
inc
sar
adc
std
loopne
cmpsl
bound
test
cli
insb
xor
push
cmp
pop
out
pop
push
or
xchg
dec
pop
add
mov
popa
mov
dec
pop
sbb
int3
cmp
stos
cs
sbb
movsl
mov
add
mov
loope
pop
inc
dec
and
fxam
inc
lods
mov
jb
pop
xchg
ret
mov
call
addr16
lret
loopne
insl
add
add
mov
loopne
mov
shll
aas
cmp
je
faddp
sbb
xor
lahf
xlat
iret
fcomip
mov
loope
add
and
mov
rcll
bswap
sbb
das
or
and
neg
out
cld
xchg
mov
lahf
sub
mov
aad
sahf
imul
cmpl
push
mov
fucomi
iret
adc
xchg
lds
inc
add
emms
cltd
adc
push
xchg
mov
lret
loop
sbb
in
call
xor
xchg
inc
pop
lds
aas
mov
stos
fpatan
or
cmp
stc
push
in
xor
dec
aad
sti
push
or
add
add
add
add
add
cmp
cli
cmp
adc
mov
mov
scas
add
incb
add
outsb
leave
std
test
insl
pop
sub
cli
xchg
adc
dec
enter
jl
cs
lahf
sbb
mov
leave
or
or
dec
ret
mov
xor
adc
sub
popa
push
jmp
pop
adc
fmull
lret
mov
push
xor
xchg
mov
mov
fdivs
inc
in
dec
loop
pop
adc
gs
lock
cmpsb
xchg
push
inc
dec
add
fidivrs
adc
inc
push
mov
lds
xor
and
sbb
cmpsb
push
sub
inc
cmp
or
cmpsl
pop
jg
inc
push
or
mov
xor
inc
mov
js
fwait
mov
mov
inc
jge,pt
jo
push
aas
daa
aad
cmc
pop
insb
mov
sarb
jmp
or
xor
dec
mov
aad
xor
aaa
loop
sahf
add
adc
aas
xchg
in
push
enter
mov
and
fcompl
cmp
add
stos
cmpsl
jecxz
adc
dec
es
mov
test
cli
add
popa
cmp
jmp
jo
les
pop
addr16
mov
and
cmp
dec
shll
pop
jns
xchg
adc
int3
cli
xor
adc
int
pop
or
out
leave
inc
sub
pop
push
data16
mov
ret
mov
nop
sbb
or
lcall
xor
nop
lcall
adc
ficomps
xor
mov
push
sbb
mov
repz
mov
daa
popa
in
pop
rclb
les
mov
pop
dec
cmc
sub
cli
sbb
test
gs
xor
stos
add
jl
pop
add
shlb
xchg
lcall
cmp
sub
pop
fidivl
add
add
jge
lret
inc
adc
push
test
bound
pop
mov
test
aas
loope
or
mov
adc
adc
lret
lock
cmc
ss
mov
pop
cmpb
icebp
cmp
jmp
add
inc
jp
ja
xchg
es
sub
mov
jne
jge
mul
loop
mov
add
enter
push
std
sub
movsl
cmc
clc
cmp
outsl
lahf
sub
fwait
mov
adc
xchg
inc
into
push
push
je
add
or
xor
idivl
daa
in
sub
fnstsw
add
mov
and
mov
mov
add
mov
xchg
lods
in
mov
add
sub
mov
enter
sub
mov
ja
xchg
xchg
push
leave
jbe
pop
test
push
mov
adc
xchg
push
xchg
cli
add
mov
negb
jae
mov
or
fcoml
dec
in
inc
dec
sub
hlt
outsb
cs
mov
jg
in
sarb
inc
cmpsl
xchg
mov
mov
push
stc
dec
pop
insl
call
fmull
mov
out
jb
sub
lods
add
cwtl
pop
pop
bnd
test
inc
xor
cmpsb
xchg
adc
shlb
cmpsl
xchg
out
popa
mov
into
adc
sbb
fstps
fmuls
test
aam
mov
mov
add
or
or
cmpsb
data16
push
lret
pop
dec
adc
mov
fcmovnb
pusha
mov
out
fldt
pop
mov
repz
mov
aam
xchg
cmp
jmp
lods
rcrb
add
stc
push
divl
or
push
dec
test
aaa
or
add
fnstsw
mov
in
outsb
fs
dec
aaa
sub
fdivs
add
pop
inc
test
test
les
cmp
mov
dec
aaa
sub
es
js
cmp
sub
ljmp
sbb
movsl
in
lret
or
dec
cwtl
inc
js
mov
jecxz
roll
outsb
sbb
daa
jl
sbb
sahf
inc
xchg
xchg
lods
jle
push
push
or
sub
fcoms
aas
inc
adc
scas
repnz
std
or
sbb
cmp
dec
jp
dec
sub
mov
add
adc
iret
lods
sub
lock
scas
aas
pop
mov
and
lahf
cmpsb
sub
aad
dec
xchg
rcrb
lahf
inc
sbb
jmp
adc
mov
sub
je
outsl
xchg
mov
sub
or
sbb
cmp
fcoms
or
and
mov
mov
push
hlt
and
lret
test
cmp
sub
dec
add
or
testb
out
xor
inc
popf
xor
mov
push
sbb
int3
out
jmp
mov
mov
mov
xor
or
cmp
xor
adc
xchg
mov
pop
int3
pop
pop
lods
and
add
mov
mov
inc
sti
jno
cwtl
xchg
adc
add
xchg
subl
lock
jge
mov
push
jno
pop
int3
xor
dec
jmp
adc
push
push
dec
outsl
mov
or
push
filds
and
mov
and
sbb
not
jno
imul
xchg
cs
pop
lahf
pop
xor
mov
int
mov
mov
iret
icebp
fisttpll
jns
sbb
cld
sbb
dec
enter
call
das
pop
test
pop
and
mov
xchg
jo
sysexit
mov
out
outsl
ret
push
adc
add
mov
fwait
add
inc
mov
jb
mov
add
incb
add
ret
dec
adc
ds
or
div
cwtl
cmp
xchg
xor
mov
mov
push
in
sub
pop
push
and
ret
in
loope
mov
add
dec
cmc
pop
mov
or
aam
loop
push
iret
mov
rcl
in
add
cmp
aam
fnstenv
daa
jecxz
push
pusha
bnd
sbb
and
js
bound
ja
add
jmp
testl
mov
aad
dec
add
fcoms
hlt
sub
lcall
sub
outsb
test
popa
and
mov
cld
fcmovbe
inc
movsl
xor
adc
jnp
jae
adc
mov
xchg
rorl
pop
mov
add
xchg
and
cmp
push
sub
cmpb
inc
mov
sbb
jo
aam
cmpsl
mov
repnz
sbb
sub
test
in
sub
nop
and
jbe
lock
subl
adc
jnp
push
test
mov
in
inc
add
dec
bound
cmp
stc
cwtl
nop
negb
mov
pslld
push
cmp
sub
rep
dec
sahf
stc
and
xchg
mov
xor
ret
mov
data16
and
jb
js
mov
insb
adcb
dec
jl
sub
sub
icebp
xchg
and
mov
fstl
lret
pop
cmp
test
mov
or
and
push
lods
das
or
fwait
mov
add
mov
lds
jo
pop
push
ret
xchg
repz
xchg
mov
dec
popa
adc
and
lcall
clc
push
ja
decl
sbb
imul
nop
jae
scas
addr16
jle
jecxz
jg
cmc
sbb
daa
cmp
adc
pop
dec
add
clc
mov
cmp
mov
mov
mov
add
add
add
xor
jne
loope
imul
and
mov
repnz
xor
add
shll
mov
sbb
mov
int3
pop
push
inc
cmp
cmp
arpl
and
loop
or
and
loop
in
adc
mov
adc
mov
push
pop
adc
mov
mov
mov
out
dec
cmpsb
xor
and
pop
mov
dec
in
pop
lret
mov
inc
and
sti
mov
lret
out
les
or
fidivl
cli
shl
and
loop
xchg
cmpsb
and
push
std
mov
lret
jne
xchg
jo
jmp
rorl
in
xlat
shrb
cmpsl
pop
ret
gs
xlat
repz
or
and
mov
nop
repnz
mov
mov
cli
arpl
mov
push
ljmp
enter
test
mov
repz
std
mull
and
in
popa
cltd
push
pop
mov
pop
fsubrl
cmp
aad
insl
jnp
insb
pop
inc
add
out
enter
lcall
push
insb
pop
xor
repz
popf
pop
cmc
dec
pop
daa
pusha
sti
push
mov
mulb
fs
mov
mov
sub
push
sbb
ficomps
jg,pt
adc
xor
inc
test
and
rcl
pop
sub
test
addr16
stos
inc
jmp
dec
xorb
outsb
push
inc
bound
pop
mov
stc
cmpl
bound
and
andl
add
iret
lret
out
add
int
ss
mov
and
jge
ja
inc
sub
movsl
fisttps
or
push
sbb
pop
shrb
mov
mov
stos
lret
push
lods
adc
pop
pop
add
cmp
out
idivl
test
test
add
incb
add
adc
and
push
inc
fildll
pop
xor
xlat
xchg
push
push
adc
pop
and
pop
decb
fdivrp
movzwl
inc
add
outsl
fcmovu
pop
sar
mov
mov
jle
loope
pop
add
push
inc
mov
xlat
xchg
push
std
cmp
xchg
int3
sub
sub
mov
jb
cmp
push
xor
mov
popa
nop
xchg
mov
mov
test
pop
mov
pop
gs
shr
pop
fwait
js
adc
jecxz
xchg
mov
repnz
inc
mov
bound
xchg
inc
loop
lret
andl
xlat
add
pop
xor
mov
mov
cltd
std
mov
popf
mov
and
pusha
inc
das
cmp
adc
lret
arpl
dec
stc
or
and
inc
rcr
outsl
mov
stc
frstor
jmp
lahf
add
fcomps
aam
pop
fwait
stc
adc
mov
xchg
jns
mov
clc
hlt
inc
leave
sbb
cmp
call
insb
push
dec
dec
xor
ret
cmpsl
inc
inc
cmp
mov
fs
mov
adc
adc
jo
movsb
test
dec
xchg
ss
outsb
adc
ja
dec
aam
mov
inc
adc
sbb
pop
lock
cmpsl
dec
dec
in
cmc
xchg
ss
add
mov
iret
lock
xor
mov
and
sbb
jmp
or
pushf
add
out
adcb
mov
test
outsb
daa
xor
mov
aas
rolb
lds
sub
fldcw
or
xchg
je
push
nop
push
xor
add
adc
scas
xor
mov
xchg
pushf
pop
add
es
inc
fbstp
mov
aad
subb
add
gs
fcompp
out
fs
popf
outsb
je
fbstp
incb
add
jo
jbe
mull
inc
adc
adc
dec
sbb
cmc
fsubs
xchg
mov
rcrl
das
xchg
je
fsubl
add
popl
jne
jl
inc
fdivp
pop
add
ja
lock
lahf
movsl
sbb
adc
aam
outsb
push
and
aaa
xchg
push
cmp
sbb
or
cltd
repz
jbe
mov
test
test
jne
mov
push
iret
arpl
inc
das
push
repnz
xor
pop
ret
shlb
cmp
outsl
les
stos
out
pop
jg
dec
fs
and
sub
xchg
mov
add
ljmp
dec
sub
popa
jbe
jl
inc
pop
mov
rcrb
xchg
nop
movsl
mov
push
push
adc
adc
mov
mov
push
dec
add
loopnew
aaa
sbb
stc
jb
rorb
push
int
dec
fsubs
in
add
xor
add
inc
add
adc
and
adc
and
mov
lahf
data16
nop
mov
aaa
add
xlat
sub
outsl
jge
test
or
xchg
mov
sub
or
scas
push
decl
xor
and
cmp
mov
in
or
arpl
js
or
cltd
add
sbb
pop
push
xor
sub
lret
jle
sbb
loop
mov
dec
cvtps2pi
lret
inc
push
mov
in
cwtl
sbb
out
jno
insb
pop
ss
or
aad
loop
fisttps
les
adc
pop
jnp
loop
mov
pop
jns
mov
pop
lock
cmc
xchg
in
addb
lcall
pop
fsubs
push
aas
test
mov
cld
push
and
mov
push
pop
ror
xchg
mov
pushf
nop
jle
pop
addr16
and
jge,pn
inc
fisubl
aaa
push
mov
shlb
imul
add
add
add
add
fsubs
jmp
adc
jl
dec
dec
cli
xchg
sub
add
add
mov
and
loop
pavgb
call
pop
stc
out
jnp
cwtl
xorb
ss
push
push
cmp
and
mov
xor
mov
dec
xor
inc
jp
inc
je
je
in
aam
cmp
jo
sti
sbb
pop
cmp
outsb
jmp
jmp
clc
popf
adc
mov
in
inc
out
data16
rorl
dec
cmp
cltd
jg
js
mov
loop
pop
push
fcomps
xchg
lahf
lock
sub
movsl
stc
scas
arpl
lods
data16
xchg
enter
loopne
dec
mov
movsl
jbe
iret
xchg
pop
push
sub
mov
sub
icebp
enter
inc
imul
pop
and
push
mov
stos
in
les
mov
inc
arpl
jle,pn
pop
test
mov
jno
jns
rclb
shrl
int
notb
pop
pop
test
gs
xor
pushf
jge
sbb
sub
push
xchg
shl
lods
mov
mov
jecxz
jnp
pop
imul
sahf
int3
mov
call
daa
les
adc
repz
jns
shll
aaa
out
pop
push
lock
loope
dec
dec
lock
mov
and
push
into
mov
mov
xchg
pop
pop
inc
enter
or
push
lret
test
lcall
aam
pop
fisttpl
sbb
mov
pop
and
sbb
icebp
pop
loope
jns
mov
adc
sub
in
xor
xchg
jno
jno
jo
rorl
fs
mov
xchg
jo
sbb
pop
loop
dec
jno
in
jnp
mov
test
test
add
push
and
xor
sub
into
int3
mov
add
xor
adc
call
dec
or
fbld
sti
xchg
jmp
mov
push
xlat
dec
adc
ror
mov
and
lret
mov
xchg
arpl
mov
lahf
inc
sbb
fs
pop
jmp
negl
shl
push
in
mov
sbb
cli
sbb
sbb
test
mov
sti
mov
jae
clc
mov
jp
lods
popa
das
rolb
inc
rcrb
sbb
repnz
xchg
sub
jbe
out
mov
rorl
test
push
iret
fmul
pop
js
xor
mov
shr
xor
push
xchg
sti
clc
cli
push
adc
mov
faddp
test
rcrl
xchg
jecxz
mov
xor
mov
sbb
adc
adc
and
psubsb
lea
aad
add
sub
testb
cld
mov
outsb
xor
dec
outsl
jb
cmp
add
and
jnp
in
cli
popa
pushw
icebp
test
ja
xor
dec
mov
mov
mov
jl
popa
push
gs
inc
jecxz
sbb
fsubrl
inc
orl
xor
jge
sahf
in
mov
mov
jg
jecxz
ret
inc
subl
in
push
mov
sub
shrl
leave
xor
pushl
cmp
sub
xchg
sbb
sbb
test
pop
lret
ret
nop
shrb
cld
push
and
lret
test
xlat
dec
fcmovb
insl
fnstcw
jae
js,pn
sbb
and
mov
push
or
loope
or
mov
mov
mov
jp
imul
mov
add
popf
sbb
and
cmp
and
jmp
roll
add
push
jecxz
jg
data16
sbb
testb
lret
add
add
add
test
mov
jbe
in
fwait
icebp
cwtl
fstpl
repz
scas
imul
jne
lods
sbb
xor
and
inc
insl
push
das
sarb
jp
sahf
mov
xchg
mov
out
cmp
lods
and
pusha
mov
xchg
sbb
ret
cmp
jle
mov
mov
and
add
out
ljmp
inc
cmp
xchg
cmp
stc
cli
mov
rcrb
iret
aas
adc
sti
xchg
jnp
push
mov
dec
jo
push
pushf
add
mov
lahf
imul
adc
mov
push
cs
or
cmp
push
mov
or
js
aaa
xchg
insb
cmp
aad
and
mov
jno
dec
mov
sub
mov
or
mov
mov
es
adc
cmp
push
lret
mov
call
cs
xchg
shll
std
jp
icebp
cltd
mov
add
jnp
jo
adc
pop
vmovhpd
inc
popf
jae
stc
mov
xor
xchg
out
and
das
inc
mov
lret
imul
mov
pop
mov
test
cs
cmp
push
in
jno
jnp
push
fidivs
add
sbb
xor
lahf
xchg
adc
xchg
hlt
xchg
pop
nop
lahf
mov
lods
cmpsb
push
pop
loop
pusha
jecxz
mov
test
mov
xor
shrb
xlat
push
or
jb
mov
or
movsl
xchg
sahf
ljmp
rolb
je
xor
and
jae
fst
mov
fisttpll
sbb
sub
mov
lods
movsl
stos
sbb
jmp
jge
pop
mov
cli
inc
push
xchg
push
imul
sbb
cs
loop
add
inc
push
pusha
jbe
out
test
stos
inc
test
jmp
incb
add
into
mov
out
jns
jae
cli
push
xor
in
push
imul
sbb
js
pop
jmp
je
sub
mov
dec
lods
je
arpl
js
aas
push
and
arpl
or
and
fistl
aam
sbb
add
or
call
in
xchg
pop
stos
mov
pop
sbb
outsb
ror
sub
push
or
aad
gs
js
out
cltd
dec
pushf
or
imul
aam
cmpb
imul
pmuludq
pushf
hlt
push
cmp
xor
fimuls
jp
mov
outsl
sti
xor
fdivp
mov
mov
cmp
add
cmpl
xor
addl
inc
arpl
iret
imulb
cltd
pop
test
clc
inc
push
arpl
dec
imul
stos
xchg
hlt
sti
test
cmpsl
or
in
sbb
push
push
jl
and
loop
test
mov
into
xchg
inc
cmp
stos
sbb
and
push
mov
pop
loope
xlat
orb
into
jno
ljmp
mov
cltd
jmp
pop
fidivs
cmc
pop
movsl
xchg
mov
shl
jno
hlt
repnz
mov
jl
jmp
cli
mov
fldl
cmp
pop
sahf
in
jns
aad
pop
sbb
fcoml
out
jb
std
or
in
pop
pusha
mov
scas
dec
jbe
sbb
mov
pop
add
hlt
paddusb
test
roll
stos
movsl
xchg
mov
dec
pop
lods
mov
mov
mov
mov
xchg
in
je
or
lret
sahf
fbstp
fldenv
and
stos
adc
jnp
pusha
and
nop
xchg
pop
xor
arpl
mov
xor
add
pop
lcall
addr16
lret
mov
add
add
add
jge
pop
adc
or
mov
std
push
cvtdq2ps
shlb
cmp
sbb
in
pop
mov
pushf
push
mov
push
cs
cmpsl
mov
push
dec
out
xchg
leave
and
das
test
mov
push
call
pop
inc
insb
mov
xor
les
sub
cltd
repz
setae
lock
js
jl
mov
or
lock
int
out
push
in
mov
cmp
scas
mov
loope
pop
test
xchg
arpl
add
lahf
lcall
out
inc
jns
mov
jae
test
and
lods
rcrb
lret
or
imul
push
xlat
sbb
mov
shr
fcmovu
pop
aam
je
mov
xor
iret
push
cmp
and
dec
stos
cmc
jge
sbb
xchg
or
mov
int3
push
rcrb
xchg
xchg
loopne
cmp
mov
pop
or
cmp
cs
out
idivb
push
pop
ja
fwait
cltd
fidivrs
sbb
int3
inc
es
adc
adc
cmp
stos
inc
jae
xchg
mov
call
dec
push
insb
xchg
clc
sbb
jp
enter
mov
adc
mov
pop
out
rcl
sub
scas
pop
dec
insb
and
sub
mov
inc
nop
and
fs
xorl
das
cmp
outsl
mov
and
ret
xchg
jg
jge
jg
fcomi
mov
push
ljmp
sub
push
dec
push
scas
jg
sub
ret
les
dec
jae
sbb
sbb
test
mov
es
sub
lods
and
push
mov
out
out
aad
push
sub
movsb
rcrb
lcall
aad
mov
gs
lgs
xchg
mov
mov
add
outsl
daa
insl
push
addb
jne
cmp
movb
incb
add
out
es
pop
xchg
fwait
int3
frstor
test
ss
sub
xor
inc
mov
fsts
std
ret
adc
imulb
pop
add
dec
aad
andl
mov
scas
cmp
mov
add
jge
inc
or
sub
fimull
add
pop
jg
loope
mov
add
xor
adc
loop
or
jle
mov
mov
fwait
lock
adc
inc
inc
sub
xchg
add
in
icebp
pop
mov
sbb
dec
test
repnz
inc
pop
std
push
xchg
scas
shll
and
rclb
and
cwtl
insb
nop
and
jle
iret
push
or
xor
push
out
inc
cmc
aaa
cmp
out
cld
push
push
ror
out
mulb
cmp
mov
es
cmc
cmp
in
fidivrl
adc
xchg
mov
ror
adc
push
adc
dec
sbb
leave
setg
imul
pop
cmp
mov
xchg
sahf
pop
cmc
movsb
mov
pop
nop
adc
popf
icebp
stos
jmp
in
pushf
mov
cld
int
shufps
das
pop
loopne
fwait
repz
pushf
iret
pop
jle
jbe
cmp
pop
movsl
cwtl
int
ja
xchg
fsts
jl
xchg
push
loopne
lret
adc
xchg
shll
or
xor
push
lahf
int3
pop
repnz
mov
mov
xchg
jnp
jmp
xor
dec
fpatan
std
lahf
call
push
out
and
pop
dec
imul
jb
out
setp
cmpsl
test
xchg
popa
loop
xchg
jb
pop
dec
cmp
dec
inc
cmpsl
loope
cmpsl
sub
sbb
int3
stos
push
std
jnp
mov
push
cmp
bound
mov
xor
push
dec
adc
lods
mov
stos
pop
lcall
or
jae
add
pop
and
mov
out
leave
enter
push
fadd
ret
add
add
add
popf
adc
mov
daa
icebp
testl
loop
xchg
push
push
sbb
test
lods
rclb
or
in
mov
cmpsb
jp
sub
pop
and
fwait
xlat
or
gs
outsb
dec
gs
adc
lock
sub
rcl
bound
in
stos
rclb
or
data16
lods
jno
sub
out
and
ret
or
cmp
pop
xchg
and
fisttps
pushf
ljmp
xchg
mov
sahf
lods
jl
js
sbb
xchg
test
mov
push
xchg
in
xchg
push
inc
test
ja
inc
xor
scas
int
adc
inc
enter
xlat
bound
cs
popf
and
fdivrs
sbb
out
jne
orb
inc
mov
pop
pop
imul
aas
imul
repnz
mov
je
adc
cmp
jnp
pop
add
push
jns
xor
inc
inc
xchg
sub
iret
xchg
daa
scas
pop
ds
hlt
sbb
xor
sbb
xor
lcall
sbb
ss
leave
loop
lock
mov
push
or
cmp
outsb
mov
sbb
or
scas
in
sbb
mov
pop
cmpsl
movsb
dec
lods
xor
fwait
aaa
lock
or
cmp
cmp
or
and
or
inc
sub
test
jmp
and
push
inc
enter
loop
mov
out
fldt
dec
cmp
xchg
lods
or
pop
sub
imul
cmp
jns
sbb
sub
cwtl
or
jo
xchg
push
cs
jns
jnp
imul
leave
mov
inc
mov
mov
adc
data16
mov
xorl
shll
add
cmp
mov
outsb
sbb
lret
incb
add
stos
push
push
cmp
enter
xcrypt-ecb
cmpsl
int3
sbb
out
mov
push
adc
leave
mov
dec
movsb
outsl
xor
push
das
rorl
gs
lds
arpl
pop
push
adc
icebp
or
push
lahf
sbb
sbb
sub
push
mov
xchg
dec
daa
je
movsl
shrl
cmp
push
jne
and
and
mov
insb
push
in
mov
adc
mov
add
ficoms
push
int
test
ljmp
add
and
inc
scas
test
mov
cs
push
xor
popa
mov
mov
jbe
pop
adc
cmp
cs
cmp
aam
fs
insl
mov
mov
and
xchg
ret
mov
mov
in
ss
pop
jne
in
dec
xchg
enter
add
icebp
fnstenv
sub
outsl
push
mov
xchg
adc
push
xchg
jmp
test
adc
cmp
mov
std
pop
mov
jmp
jno
es
addb
clc
ds
aad
pop
adcl
bound
or
scas
push
fcmovnbe
cmp
pop
jns
aam
loope
sub
clc
loop
sub
sub
stos
and
cmp
aas
jp
adc
inc
xchg
cmc
dec
aaa
push
mov
incb
cltd
int
loop
mov
out
jl
das
push
mov
and
insb
loopne
inc
dec
cld
xchg
arpl
dec
xchg
mov
cmp
test
jne
or
test
jnp
jns
scas
pushf
ret
jb
jg
sahf
push
mov
jge
jmp
pop
ja
dec
xchg
rcrb
ss
fninit
mov
sub
mov
xchg
push
scas
popa
ret
jg
lea
in
inc
or
push
test
lods
insl
lret
add
pop
rorb
mov
or
movb
push
ds
outsb
sbb
aam
dec
sub
fnsave
incb
add
mov
mov
push
sbb
mov
push
mov
scas
sub
jp
fmull
xchg
push
xchg
cmp
mov
fsubs
das
mov
xor
rsqrtps
jne
adc
inc
nop
ret
mov
mov
xor
arpl
cmpl
cmp
mov
or
inc
test
rcr
jge
es
cmp
cmp
in
arpl
test
pop
test
mov
fisubrs
xchg
and
insb
fisttpll
stos
stos
jns
xchg
mov
or
test
adc
sub
and
xor
xlat
cmp
pop
mov
adc
stc
fs
cmpb
lret
stos
insb
push
sarl
mov
jl
mov
cmp
cltd
push
and
mov
je
gs
in
iret
or
and
jne
sbb
pop
mov
popa
test
in
push
jae
push
std
loopne
lods
and
data16
mov
orl
fbstp
push
sub
sub
clc
hlt
push
xchg
scas
fisttpl
hlt
pop
mov
mov
aaa
mov
sbb
xor
test
leave
or
loop
cwtl
mov
adc
idivb
and
cmp
adc
add
les
and
xchg
and
sbb
mov
sub
cld
mov
add
test
pop
add
out
mov
mov
inc
in
fldcw
cmovle
cmp
aam
ss
adc
adc
pushf
sub
push
sbb
xchg
in
test
pop
mov
movzbl
and
or
mov
xor
sbb
nop
cmp
add
mov
nop
xor
push
mov
add
add
jmp
sarb
push
sarl
nop
fwait
jb
sbbl
into
ljmp
loope
and
adc
out
xorl
mov
fcompl
iret
mov
sbb
movb
movsl
shr
mov
xlat
add
cmp
pop
js
lds
or
jg
pusha
jge
push
cld
aam
adc
lock
lods
dec
dec
pop
out
clc
lods
rcr
test
sbb
out
add
or
jmp
outsl
mov
inc
cmp
pop
pop
and
xchg
jmp
in
lret
cwtl
ret
jmp
sti
jno
add
stos
clc
sbb
aaa
lahf
mov
mov
shl
insb
cld
call
das
adc
sbb
movsl
incl
imul
mov
in
adc
lea
mov
mov
add
pop
push
gs
push
testl
or
test
iret
in
jmp
xlat
cmp
cltd
or
sbb
jne
lret
xchg
inc
push
inc
ret
out
cmpsl
out
pop
test
sub
repnz
sub
out
mov
push
dec
cs
clc
scas
dec
std
rclb
cmpsb
push
movsl
sbb
out
and
out
clc
xor
lret
xlat
rclb
in
mov
out
cmp
enter
pop
mov
and
movsb
adc
lea
cmpsb
out
leave
stos
jg
stos
dec
sahf
in
adc
mov
xchg
rorl
es
sti
cltd
daa
push
fcoms
call
dec
jns
sahf
das
int
xchg
jmp
xor
sbb
pop
inc
js
stos
mov
sbb
pop
xchg
sbb
xor
xchg
pop
jno
add
sarb
mov
lcall
aad
dec
lea
cs
enter
add
add
add
add
mov
in
dec
cmp
mov
out
mov
add
add
xchg
xlat
repnz
subl
xor
xchg
cld
imul
mov
and
add
mov
bound
stc
leave
and
scas
mov
out
arpl
jmp
pop
out
ret
js
or
pop
mov
mov
jp
das
xchg
adc
rcrb
xchg
cmp
cmp
jo
imul
pop
jnp
fcom
mov
mov
jp
icebp
ficoms
dec
adc
mov
loope
dec
lods
cmp
ljmp
fcmovbe
arpl
pop
and
iret
out
add
cmp
lods
stos
sbb
sbb
sbbl
mov
mov
jns
jbe
pop
mov
and
notl
add
test
or
mov
ss
mov
and
dec
jp
fdivrs
and
loop
ficompl
test
out
lds
fcomip
jmp
loopne
popa
test
inc
mov
cltd
inc
insb
je
aas
jno
and
ficoml
into
xor
jl
and
cld
sbb
mov
ljmp
push
add
clc
jne
cli
inc
addl
icebp
test
in
das
pop
add
jle
push
shrd
mov
aas
popf
stos
lods
mov
ja
xchg
jo
sub
push
lcall
pop
scas
shll
pop
lea
arpl
push
lahf
mov
mov
aaa
add
stc
pop
adc
add
mov
dec
imul
je
dec
ficoms
cmpsb
dec
sbb
rorb
mov
fldenv
cltd
insl
inc
or
jae
in
into
mov
dec
les
lcall
mov
sti
inc
inc
clc
add
stos
jo
dec
cli
fldcw
jns
das
pop
mov
add
add
cmp
xchg
imul
imul
push
pop
mov
outsl
mov
popa
jne
fdivrl
leave
aam
pop
imul
ret
add
pop
mov
xchg
js
sahf
div
fs
faddl
adc
and
or
movsl
jecxz
cs
add
imul
sub
adc
xor
push
loop
test
movb
ljmp
fistl
adcl
inc
icebp
dec
pop
cs
testb
push
mov
icebp
sub
jbe
imul
xchg
test
insl
fwait
lods
sub
sub
lea
push
jle,pn
push
dec
sub
fistpll
mov
stc
cmovbe
mov
ljmp
xchg
test
and
out
icebp
out
add
and
xor
dec
repz
call
testl
cli
ss
test
mov
jmp
movb
out
movsb
add
stos
mov
push
push
pushf
in
icebp
mov
loope
shlb
lret
ds
mov
pop
add
mov
or
stos
gs
or
mov
dec
jmp
inc
xchg
sub
lock
mov
testb
in
xchg
sub
cmp
xor
pop
mov
jbe
sbbb
mull
out
inc
into
mov
or
push
lea
sub
jmp
inc
popf
push
mov
ret
pop
loopne
add
or
pop
push
jnp
out
mov
jno
or
nop
mov
repz
xchg
jmp
jo
lea
int3
mov
cmp
jecxz
sahf
loop
ds
bound
add
in
mov
jmp
adc
pop
int3
int3
bound
mov
jle
pop
iret
cmpsb
or
les
sub
sub
outsl
mov
lods
add
dec
xchg
pop
xchg
xor
pusha
mov
add
incb
add
movsb
sbb
hlt
ds
mov
les
mov
sbb
test
xchg
pop
out
lcall
ret
jecxz
xchg
fmul
xor
sbb
push
bound
mov
cmc
jae
repz
adc
popa
rolb
jmp
mov
in
sti
pop
cmpl
pop
loop
lea
cmp
repnz
les
sub
scas
and
sahf
jb
inc
adc
test
loopne
lock
mov
dec
mov
lods
fisubrl
pop
lcall
scas
jbe
leave
jp
out
push
push
mov
mov
dec
test
cwtl
inc
aam
sbb
lds
push
mov
mov
mov
clc
imul
jbe
ds
test
dec
pop
mov
push
ljmp
push
add
les
mulb
xor
rorb
bswap
jne
imul
shll
fldcw
xlat
sbbb
xor
mov
jae
jne
or
xchg
cmp
sbb
mov
insl
ret
mov
inc
mov
ret
jns
cltd
mov
sbb
frstor
jl
jbe
fisubs
push
mov
xchg
hlt
add
adc
adc
imul
push
mov
sbb
sbb
je
mov
in
cld
inc
test
mov
inc
aas
jbe
mov
into
fs
pop
sub
sbb
nop
xor
sbbb
push
scas
mov
jne
or
or
mov
fwait
mov
test
out
cmp
push
out
out
pop
clc
jp
cs
push
lret
jmp
enter
shlb
fnstenv
xchg
or
ja
push
inc
shlb
push
fld
sbb
andl
fs
sbb
add
or
dec
mov
sub
sub
dec
xor
incb
add
mov
movsl
and
int
jmp
pop
push
xor
mov
xchg
sub
test
stc
adc
mov
add
adc
int
xchg
fcompl
out
fldcw
stos
xchg
fnsave
out
pop
or
test
or
or
jg
cmpsb
inc
push
xchg
fsubs
arpl
ret
push
pop
dec
test
sbbb
pop
push
ret
nop
xchg
mov
loop
adc
je
loope
and
out
stos
inc
add
inc
jnp
shl
cmp
pop
popf
inc
repnz
pop
insl
lea
fsubl
inc
sub
jle
cmp
jp
mov
jmp
mov
inc
fldl
xorb
fs
outsb
popf
jnp
push
cmc
dec
adc
repz
inc
pop
sbb
cmpl
add
mov
cmp
lods
ljmp
jle
ss
cld
or
sub
stc
out
xor
lcall
sub
xchg
lods
es
mov
add
sbb
and
movsl
outsb
insb
jle
mov
push
repz
sub
cmp
fcompl
rol
insl
enter
lcall
pop
pop
in
mov
iret
sub
mov
mov
fistl
pushf
cmc
lock
mov
xlat
ret
shll
push
adc
dec
jo
push
jmp
nop
or
lods
ds
cwtl
lods
jne
outsw
sar
or
in
or
add
fldl
test
inc
push
sti
es
mov
fnstcw
sbb
jl
cli
xor
inc
fwait
xchg
xchg
filds
push
pop
stc
or
fwait
popa
daa
in
jmp
add
xlat
pop
pop
setb
add
add
add
add
and
dec
repz
fldt
les
sbb
fadds
add
add
add
push
xchg
popf
ljmp
mov
rcrl
dec
shlb
rolb
psrld
push
mov
xor
dec
test
es
push
or
testb
sbb
and
aaa
add
pushf
lods
mov
mov
push
pop
cmp
inc
fcmovne
js
mov
inc
xlat
and
fldl
push
sub
ss
inc
cli
fld
popa
jl
enter
push
mov
imul
rcrb
rcll
incb
xchg
cltd
nopl
repz
mov
fwait
xor
cmp
mov
mov
hlt
mov
int
push
push
or
xor
adc
jnp
cli
imul
pop
aam
push
lret
push
fwait
das
hlt
mov
mov
addr16
adc
lea
dec
mov
insb
out
jbe
push
pop
mov
cmc
xor
cmp
adc
push
fstpt
inc
xchg
imul
adc
dec
xchg
xchg
into
lretw
leave
pop
add
xorb
sti
mov
mov
pop
out
jnp
test
inc
jle
decl
xor
push
std
sub
sbb
push
test
leave
mov
inc
je
jne
pop
mov
js
xchg
clc
jno
adc
mov
lock
push
ret
add
adc
lret
sbb
adc
xchg
pop
mov
out
insb
sbb
ja
jg
inc
rcll
pop
jbe
icebp
pop
add
int3
and
ljmp
mulb
adcl
cmp
fwait
je
hlt
xchg
arpl
outsb
push
in
movsl
mov
or
shll
xorl
fnstenv
xchg
adc
pop
adc
jae
idivl
andb
andb
mov
ljmp
add
add
lcall
jnp
push
mov
push
and
incb
add
lods
ret
sbb
xlat
mov
sti
push
dec
stc
adc
push
add
in
jg
mov
imul
xor
adc
jno
lea
int
cmp
stos
shrb
sub
ds
pop
mov
add
nop
cmp
adc
adc
insb
or
ret
inc
and
aaa
add
es
and
inc
pop
div
sahf
cmpsb
sahf
out
inc
mov
or
jae
sbb
bound
xchg
jmp
loope
adc
test
sub
fmull
lret
hlt
std
push
adc
data16
dec
and
pop
enter
pop
iret
xchg
fs
ret
pop
pop
lret
xor
pop
sub
xchg
sbbl
sbb
push
cmp
out
mov
mov
popf
std
fs
ficomps
stos
mov
mov
call
mov
and
push
insl
mov
mov
adc
adc
jg
sahf
mov
fldcw
cs
dec
addr16
and
pop
ficoms
mov
or
repnz
push
popf
mov
lods
fcoml
adc
adc
jp
jp
sub
hlt
sbb
insb
dec
cmp
pop
loopne
xor
pop
cmp
sbb
insb
jno
fildll
sbb
jl
pop
inc
in
enter
out
pop
add
fisttpl
inc
or
xchg
clc
in
mov
pop
aad
or
xor
fsub
push
in
push
mov
jge
daa
xchg
cmp
out
or
scas
repnz
inc
inc
dec
push
mov
push
cwtl
enter
xchg
negl
sbb
lods
mov
ret
inc
push
aaa
sbb
sub
imul
pop
xchg
loope
mov
add
add
add
rolb
dec
idivl
jg
jmp
and
add
add
adc
push
sbb
xor
fistl
stos
mov
mov
movntq
scas
mov
xor
jmp
xchg
cmpsl
mov
mov
add
xchg
mov
inc
push
jns
sahf
cmp
fimull
call
jecxz
out
pop
lods
sbb
cmp
ja
dec
pushf
pop
mov
push
cmpsl
xchg
sahf
jecxz
mov
sbb
loop
push
dec
lods
push
push
sbb
mov
inc
lret
inc
insl
lods
jnp
cmp
shl
mov
inc
hlt
adc
daa
int3
jbe
in
std
or
int
cmpsl
sbbb
orl
jae
xchg
nop
xor
mov
sarb
xchg
imul
inc
inc
xor
pop
sub
jg
xchg
adc
adc
mov
mov
ret
cld
mov
pop
jno
insl
push
sbb
aad
hlt
xor
push
inc
out
scas
jo
mov
les
cmp
ss
inc
mov
gs
cmc
pop
ss
sub
cltd
and
push
loope
loopne
leave
cli
scas
notl
cmp
cli
aad
pop
fcmovbe
call
pop
add
add
ljmp
outsl
js
push
sbb
mov
push
jne
aad
mov
mov
sbb
out
sub
stos
mov
js
dec
outsb
les
mov
xlat
xorb
ds
insl
jecxz
mov
rolb
inc
pop
add
pop
mov
cmp
mov
mov
cs
ret
xor
addr16
mov
mov
testb
or
test
repz
cmp
push
loopne
jo
push
xchg
inc
adc
inc
jg
jae
iret
pusha
in
popa
push
or
jne
xchg
mov
dec
jmp
cmp
stos
cld
push
in
jp
mov
cmc
jno
xor
inc
mov
add
mov
call
mov
pop
and
sbb
add
loop
stc
mov
fstpt
mov
out
or
xchg
or
aad
arpl
ret
sbb
or
aad
mov
mov
das
dec
xchg
mov
clc
mov
fwait
xchg
loope
je
jo
xchg
dec
ror
adc
xchg
adc
add
mov
fsts
lods
mov
ficoms
dec
xchg
out
fcomps
ljmp
nop
insl
movsb
insb
addr16
mov
cmpsl
mov
or
iret
and
and
popa
inc
out
cmp
mov
cmp
out
mov
out
stc
fmuls
adc
mov
dec
adc
push
jle
fmulp
call
lahf
inc
mov
rcll
js
add
pusha
push
dec
testb
mov
mov
icebp
ret
sbb
push
lock
in
dec
mov
fwait
pusha
or
mov
pop
mov
inc
shll
mov
and
out
add
mov
das
movsb
pop
lock
es
add
dec
pop
movsb
leave
mov
push
notl
fs
adc
and
dec
add
sbb
mov
adc
mov
fistpll
push
push
popa
mov
push
jo
mov
dec
repnz
jl
mov
loop
adc
mov
insb
mov
mov
xor
add
cli
jb
rcr
dec
dec
add
hlt
lret
test
or
xchg
sarb
lods
lods
and
push
pop
jne
mov
pop
pop
fmul
sub
sbb
fstpt
cmp
pop
sub
stc
pop
push
jbe
fnsave
add
xchg
cmc
xor
mov
add
push
jb
fs
jmp
ljmp
xor
fildl
cltd
jle
xchg
int
es
add
mov
fcompl
or
sub
jmp
stos
loopne
add
add
add
push
je
dec
imul
jbe
add
mov
ret
shl
dec
fsubl
push
les
jbe
idivl
insl
add
sub
mov
jmp
fldcw
push
dec
mov
es
stc
rcll
cwtl
and
xchg
xlat
std
test
fwait
mov
enter
mov
fdivs
cmp
int3
aas
inc
ss
or
fisubrl
xchg
loopne
xlat
jne
mov
lahf
fcoms
xor
mov
cmp
lret
mul
inc
rcrl
mov
lock
mov
imul
sbb
pop
mov
add
mov
and
shr
xchg
push
or
push
ljmp
dec
mov
insb
jne
cmpsb
sarl
or
movsl
stos
lds
lret
fstpt
adc
insl
idiv
pop
into
or
dec
lock
repz
sbb
add
stc
pushf
rcll
insl
mov
lahf
lods
jge
out
fdivrl
pop
dec
in
aad
mov
out
or
sub
dec
pop
out
and
push
int
push
jnp
out
lret
inc
mov
mov
jge
aas
mov
jecxz
rolb
cld
cltd
dec
mov
ret
xchg
mov
pop
cmp
pop
jo
dec
les
repz
rcrb
pop
addr16
iret
lea
arpl
sub
inc
in
xchg
pop
xchg
dec
dec
insb
mov
xchg
adc
test
ljmp
mov
add
mov
stos
ja
sahf
shl
loop
xchg
mov
cmp
sbb
mov
adc
or
add
pop
sbb
cli
inc
cli
mov
jecxz
out
test
add
incb
add
mov
sbb
add
stc
dec
mov
leave
adc
inc
inc
inc
inc
sbb
mov
cli
int
mov
jp
movsb
mov
shl
or
nop
push
adc
sub
mov
nop
push
in
aaa
push
push
add
inc
adc
and
in
outsb
or
add
mov
mov
ljmp
cmp
pop
sbb
push
mov
int
in
jmp
sbb
pop
dec
cmpb
dec
xchg
out
mov
sub
test
out
cmp
imul
push
out
jmp
inc
jmp
cmp
cli
pop
enter
jo
lods
aad
cmp
cwtl
push
mov
adc
scas
pop
mov
das
mov
jnp
jle
in
ds
fdivrs
cmp
add
loop
cmp
scas
jo
cmp
sbb
inc
add
fiaddl
jb
lahf
xor
mov
ret
cmp
cltd
mov
mov
leave
insb
in
jne
sbb
add
shl
push
inc
push
aad
cmp
pushf
dec
ss
out
decl
inc
rorb
inc
cwtl
aas
ss
ss
mov
push
xlat
and
int
push
or
insl
xchg
loope
test
cs
or
xchg
cmp
xor
dec
mov
filds
daa
testb
lock
push
stos
in
fdivrl
shrl
insl
js,pt
xchg
mov
int
sarb
in
test
jne
xchg
gs
mov
cltd
mov
mov
arpl
inc
popa
outsl
add
fs
pop
outsb
ss
mov
mov
mov
sbb
mov
jns
pop
mov
xlat
and
fdivs
mov
inc
test
cmp
fisubrl
pop
inc
add
mov
xlat
push
xlat
ja
out
push
lahf
out
ret
in
add
add
add
rcll
add
sbb
repz
shll
push
subl
pop
xor
rcll
inc
mov
xchg
cld
fistl
inc
sbb
repz
stc
sti
jnp
add
lds
hlt
lcall
out
xchg
xor
mov
scas
outsb
pop
mov
ljmp
cmpsl
mov
lcall
and
xor
dec
jno
push
push
dec
inc
mov
lods
loop
ret
pop
mov
xor
ja
jb
cld
adc
jecxz
jmp
cmp
ret
cli
scas
cld
shrb
push
adc
adc
jnp
add
jns
jecxz
jecxz
out
or
lahf
dec
jge
mov
repz
cmp
fs
insb
pop
add
or
xchg
add
mov
dec
jns
push
out
cmpb
mull
sahf
iret
or
mov
in
jnp
js
push
rorl
cld
bound
mov
sbb
outsl
movsb
iret
ss
jl
mov
add
sub
and
mov
jecxz
fldcw
and
int3
cltd
imul
lock
fsubrl
nop
cs
push
mov
mov
inc
adc
mov
adc
xchg
push
xchg
mov
popf
repnz
xchg
js
lods
inc
pop
inc
jmp
sbb
iret
movsl
shll
pushf
daa
cmc
sahf
jle
adc
cmp
mov
push
mov
call
xchg
sbb
mov
test
or
cwtl
sahf
fwait
or
adc
pushf
scas
sbb
cmp
imulb
test
cmc
test
into
iret
xchg
push
sahf
sub
mov
pmulhw
and
adc
ja
add
rcll
jmp
jmp
movsb
movsb
out
add
add
add
mov
push
dec
test
ret
into
and
ret
or
sbb
pop
inc
jno
scas
push
icebp
shll
cmpl
mov
loope
mov
imul
cld
outsb
ds
data16
stos
push
rcll
rcrb
or
pop
test
addb
ds
push
pop
jge
aaa
jne
hlt
inc
insb
inc
jo
popf
mov
jge
pushf
xchg
jle
dec
add
aad
testl
aas
xor
pop
loope
jne
add
push
pop
mov
jl
xor
inc
ja
inc
lock
cmp
fisttpl
cli
inc
jge
push
xorb
xchg
call
call
cmc
mov
mov
jp
cld
sbbl
sbb
dec
ja
in
xchg
insl
jae
stos
cmpb
lods
sbb
inc
push
mov
rorl
jg
xchg
repnz
cmp
ret
jns
out
jg
shll
sti
push
add
cmp
and
mov
ss
cmc
push
stos
sub
mov
inc
mov
sahf
lcall
repz
shlb
nopl
scas
mov
test
inc
movsl
out
dec
lods
out
sbb
sub
mov
sti
int3
adc
call
imul
adc
add
mov
push
push
fidivrl
ret
std
fdiv
and
push
loopne
sub
sub
jns
dec
lret
add
xchg
imul
sbb
into
out
loop
sbb
mov
pop
in
aam
mov
push
inc
inc
mov
mov
adc
rcr
dec
mov
xlat
rolb
add
xchg
jp
in
push
xchg
icebp
imul
lea
cltd
imul
add
iret
negb
mov
mov
add
incb
add
dec
pop
adc
xor
jb
testb
cmc
or
ds
pop
inc
sarb
mov
stc
lds
mov
xchg
xor
xchg
rcr
scas
xchg
and
add
sbb
fisubrs
jne
cwtl
loopne
mov
rorl
gs
dec
nop
xor
xchg
pop
xchg
lds
icebp
mov
test
cltd
je
mov
dec
imul
sbb
ror
adc
jle
jp
leave
sub
rorl
xchg
stos
xchg
imul
or
outsl
jl
push
jne
mov
lds
jle
add
icebp
sub
push
test
das
lock
into
aad
mov
repz
rolb
mov
nop
jle
sbbb
jns
lahf
xchg
cmc
shrb
dec
push
add
lods
dec
fucom
push
jns
xchg
add
jmp
push
fwait
cmpsl
std
mov
pop
inc
bound
rcrb
sbb
inc
inc
mov
xchg
lds
xchg
mov
popa
mov
mov
jbe
dec
popf
dec
cmpsb
dec
fcoml
pop
jecxz
sbb
mov
push
sar
cmp
sub
in
insb
insl
pusha
xchg
mov
mov
inc
in
out
fs
rclb
ja
int
shlb
divl
jns
fldl
std
hlt
ud0
add
fldt
push
and
jno
gs
aaa
mov
mov
pop
mov
loop
cmp
lcall
inc
frstor
out
mov
cmpsb
jge
popa
or
or
les
xor
aam
cmp
push
es
dec
jecxz
fcmovu
or
in
cmp
mulb
sub
fsts
pop
arpl
xorb
push
sub
mov
sarb
mov
add
push
push
jnp
outsl
jno
dec
sahf
ret
mov
add
add
sub
adc
out
into
pop
push
sbb
jbe
push
jns
mov
das
and
xchg
scas
insl
shrl
cwtl
push
shlb
leave
dec
pop
push
jno
int
and
loopne
stc
imul
lock
je
movsl
sahf
inc
sar
pop
cld
aad
test
pop
out
push
ss
xchg
sub
xor
stos
push
cmpsb
mov
aaa
fstpl
lds
mov
clc
pop
popf
push
pop
inc
icebp
push
pop
or
or
mov
test
mov
mov
insl
dec
adc
mov
pop
xchg
pop
lret
mov
mov
inc
mov
mov
movsl
in
cmpsl
mov
cmp
pop
insl
enter
into
mov
lret
mov
xchg
dec
xor
sti
js
adc
xchg
inc
test
jge,pt
adcl
xor
and
leave
addr16
jg
mov
lcall
fs
mov
dec
insb
into
cmp
lock
sub
add
cmp
or
aaa
lahf
sti
cwtl
push
cmp
in
and
jb
sbb
and
out
ljmp
insl
cs
mov
jp
or
jns
pop
or
ja
sub
sbb
jnp
jecxz
rorb
jnp
lods
jne
mov
lcall
dec
mov
cmpsl
mov
inc
sbb
fwait
mov
xchg
sbb
jp
movsb
mov
jae
sti
pop
jnp
sub
xor
ss
das
adc
loope
lahf
lret
clc
out
add
push
xchg
pusha
rcll
push
cmpsb
cmc
out
insl
fistpll
pop
xlat
in
shr
pop
iret
mov
stc
pop
in
fldt
xchg
sbb
or
add
jb
psrad
mov
jns
imul
mov
cmp
movsbl
xor
and
repnz
cltd
enter
mov
stc
popf
mov
into
mov
incb
add
mov
adc
xor
mov
dec
test
jle
push
mov
lods
xor
mov
cmc
lods
push
adc
jae
fwait
inc
add
bound
jno
movb
aad
fsubs
pop
sbb
inc
fcmovnb
jecxz
je
stc
add
scas
cld
jae
dec
xchg
mov
mov
test
add
add
mov
test
lahf
add
mov
pop
lcall
inc
or
aam
scas
dec
ret
loopne
xchg
shll
int3
rcrb
rcll
stos
test
cmp
or
and
scas
jp
in
pop
sbb
les
bound
add
jne
push
daa
hlt
jle
xor
xor
fwait
movsb
icebp
stos
push
push
aaa
ljmp
je
test
inc
pusha
imul
jp
ja
jg
push
jecxz
dec
pushf
lds
daa
pop
mov
call
mov
push
aad
xor
pushf
mov
mov
adcb
movsl
jecxz
mov
fsubs
addps
iret
hlt
stc
pop
testl
or
cmpsb
aad
ja
and
pop
add
loopne
lods
out
cmp
sub
mov
mov
cld
inc
test
push
sbb
ret
or
jae
mov
inc
jle
mov
jae
adc
push
add
test
cwtl
pop
jb
iret
push
pop
adc
ret
iret
or
jb
das
outsl
shll
mov
and
in
push
and
cmp
mov
xor
sar
cltd
push
roll
flds
mov
cltd
cli
mov
jne
mov
dec
dec
sbb
daa
jbe
in
sub
inc
push
adc
pop
or
or
dec
cmpsb
lahf
clc
push
add
adc
aad
add
jns
sbb
jge
and
dec
adc
add
incb
add
mov
in
sahf
lret
mov
lea
andl
popf
fildl
ja
and
cs
mov
testl
cwtl
ljmp
push
mov
push
xchg
aam
lock
in
cmp
mov
mov
sbb
sbb
stos
jnp
sub
loope
add
push
ret
cmc
or
icebp
xlat
push
push
fwait
cmp
sub
js
es
mov
push
xchg
int3
ret
movsb
adc
xchg
mov
adc
stos
bound
in
and
subb
mov
movsl
rorl
shr
shr
dec
stc
push
dec
push
mov
sbb
and
dec
or
mov
fisubrl
cmp
lods
push
insl
scas
mov
pop
ficoml
mov
or
mov
fcoml
jae
in
imul
or
push
pop
cmp
movsl
ret
bound
mov
pop
cmp
cmp
sbb
jge
lods
ja
jnp
adc
ja
out
jmp
cmp
sbb
and
push
pop
xchg
ja
test
add
ficoml
pop
outsb
ret
out
cmp
jbe
push
dec
out
cli
movsl
cmp
mov
gs
ret
lcall
xchg
call
lcall
push
je
sub
add
repnz
bound
movsb
bound
shll
popa
cmp
je
xchg
into
std
add
and
rcll
mov
in
push
jge
cmp
imul
push
ret
inc
mov
sub
pop
xchg
rol
and
sub
lcall
mov
push
sbb
dec
loopne
mov
dec
fadds
mov
cld
stc
ljmp
ss
mov
mov
pop
add
inc
fcmovnb
fstpl
arpl
jmp
lcall
add
fwait
push
sbbl
testb
pop
int
dec
dec
jp
pop
movsl
mov
inc
inc
add
mov
jecxz
cmpsl
mov
add
arpl
push
out
gs
int
ret
cli
fs
push
addr16
rcll
jl
dec
outsb
pop
adc
dec
xor
adc
sbb
mov
in
imul
sub
jnp
icebp
cmp
andl
dec
in
ds
into
or
jno
adc
ret
xchg
mov
sbb
arpl
add
insb
ret
js
push
jecxz
ret
loop
stc
icebp
iret
out
hlt
testb
movsl
testl
mov
cmp
sub
push
out
mov
out
aas
insb
in
push
outsb
or
pop
outsl
xchg
xor
and
mov
xchg
mov
cltd
jp
dec
xchg
adc
lock
mov
in
stos
jne
nop
sub
xor
ret
arpl
jbe
mov
clc
es
push
imul
mov
xchg
das
sbb
sarl
lret
mov
dec
aad
push
loope
mov
xchg
mov
inc
or
mov
mov
mov
adc
sub
xchg
rcr
pusha
add
in
bnd
jle
cmpl
inc
cmp
int3
xor
idivb
in
mov
fwait
shll
pusha
scas
lahf
pop
lea
nop
inc
inc
mov
rorl
out
mov
sbb
fwait
sbb
add
loop
jnp
fbld
sub
push
pop
mov
xchg
xchg
inc
mov
in
enter
gs
push
insl
aam
push
pop
push
adc
pop
pop
jg
add
sbb
pushf
cli
mov
xchg
out
cltd
or
add
incb
add
push
test
or
out
sbb
les
sub
cmp
jmp
stos
pushf
pop
pop
aas
cld
inc
sub
inc
jp
xchg
push
test
das
out
cmc
jecxz
adc
jl
mov
in
dec
add
dec
pop
sti
sahf
js
outsb
cmp
pop
jg
lahf
rcll
out
fs
dec
insb
ljmp
aaa
xlat
sub
add
sbb
js
sub
lcall
xor
jb
jg
stc
cmp
jecxz
xchg
jnp
sbbl
or
mov
gs
sub
mov
pop
fwait
jbe
fcmove
xor
mov
jecxz
mov
mov
xor
test
int3
and
lods
insl
inc
mov
mov
call
ljmp
stc
cmc
push
or
and
mov
sbb
inc
xor
xchg
rcrl
xor
mov
dec
fisttpll
popf
sub
sti
stc
jbe,pn
xchg
sbb
add
lret
add
jmp
mov
push
out
cmp
stos
jnp
mov
add
adc
adc
jl
incb
gs
mov
rcll
daa
mov
sbb
jmp
or
mov
dec
mov
xchg
and
inc
cmp
xor
aam
ljmp
pop
mov
dec
incb
xor
inc
shl
les
push
leave
inc
xor
mov
jle
pop
mov
and
insb
ds
sub
xor
int3
xor
mov
inc
pop
ret
push
ss
insl
pop
or
insl
xor
pop
cmc
lods
or
cwtl
sub
ror
les
lret
les
xchg
fwait
cli
push
pop
push
push
clc
sarb
pop
sub
add
lcall
leavew
and
xchg
xchg
les
add
add
inc
push
jae
pop
js
inc
rcrl
mov
outsl
adc
sbb
shll
push
add
push
movl
xor
lds
sbb
ds
add
push
cmc
mov
and
pmulhuw
add
adc
xchg
bound
out
jmp
or
addb
call
jbe
ret
xchg
mov
insl
les
dec
mov
jno
mov
lds
lahf
fisttpl
mov
add
cwtl
xor
xor
mov
dec
lret
xchg
jne
repnz
and
dec
jo
fdivs
stos
test
jnp
pop
iret
sbb
mov
mov
dec
xor
mov
cmp
or
inc
mov
push
addb
push
icebp
push
inc
mov
jg
enter
pop
dec
cmp
mov
mov
inc
sub
popa
jne
std
insb
lret
addr16
cli
cli
les
cmp
mov
ror
mov
mov
or
adc
faddl
lea
adc
loope
dec
mov
xor
enter
pop
mov
adc
sbb
roll
pop
rolb
outsb
lods
and
pop
cli
sbb
xor
cmp
sub
pop
cmp
mov
and
ljmp
pop
push
int
mov
mov
dec
sub
std
inc
jge
inc
out
push
pop
xchg
jecxz
adc
cld
jno
or
dec
pop
insl
fwait
sbb
rcl
idivb
lods
pop
lods
xor
mov
sbb
mov
and
cli
arpl
imul
in
jo
imul
inc
test
add
iret
cmc
sti
pushf
and
push
inc
push
jns
xchg
testb
incb
add
jle
ja
xor
outsb
aas
out
and
push
stos
xor
jp
pop
sub
adc
or
imul
mov
pop
inc
inc
shrl
push
mov
sbb
mov
sti
sub
test
out
cs
cmpsl
mov
mov
es
or
andb
push
mov
sahf
jecxz
add
mov
push
pop
out
loop
addr16
push
stc
xor
fisttpll
aas
stos
js
aad
mov
mov
je
mov
or
js,pn
xchg
popf
fldl
or
xor
pop
xor
xchg
mov
jle
scas
lods
fcoml
push
iret
ljmp
and
addr16
decl
adc
xchg
loope
je
sub
jo
xor
xlat
cmp
lcall
bound
and
add
stc
mov
imul
push
cwtl
mov
and
hlt
js
popf
outsb
lret
dec
insl
push
push
or
fcmovu
push
adc
and
leave
sahf
and
xchg
movsb
jnp
xor
adc
sbb
dec
cmp
or
lahf
dec
jo
mov
dec
test
pusha
dec
das
cwtl
fdivrs
repz
or
xor
lret
jns
ret
fisttpll
ret
adc
in
or
loop
out
sub
mov
add
int
shll
shrl
popa
sub
leave
add
mov
pop
in
xlat
sbb
icebp
stos
inc
mov
jo
mov
or
jge
iret
xchg
int
adc
aas
pop
cmp
add
mov
mov
sbb
xor
xchg
xchg
adc
out
add
add
std
cmp
stc
jl
stc
jne
mov
add
incb
add
add
xor
aam
dec
js
in
xor
mov
enter
leave
dec
test
inc
add
jb
fwait
push
mov
je
roll
mov
imul
xchg
and
icebp
and
jl
xchg
jp
adc
jp
in
andb
lret
mov
push
shlb
je
aad
mov
and
mov
loop
adc
adc
arpl
push
add
jnp
popf
mov
xor
jbe
pop
and
adc
out
jle
lock
dec
push
shl
cmp
sbb
pop
sahf
icebp
insl
mov
mov
scas
fistps
test
inc
mov
idivl
loop
lds
ljmp
inc
cmpsb
mov
sub
or
mov
cmp
pop
cld
sub
and
mov
adc
into
jle
jl
sbb
add
xchg
pop
shll
aad
push
sub
lods
imul
jne
cmp
mov
jmp
mov
icebp
push
scas
icebp
cltd
ficoml
sbb
mov
fst
sub
push
jnp
lds
ja
stc
or
sub
fiadds
das
mov
mov
cmpsb
sbb
mov
call
jo
imul
push
mov
mov
mov
xchg
mov
mov
mov
popa
mov
xchg
pop
xor
inc
out
popf
ret
hlt
jl
aas
js
adc
xor
outsl
inc
shrb
popl
sbb
scas
imul
pusha
mov
sbb
subb
adc
loop
sub
outsl
adc
add
push
dec
ret
idiv
fcoms
jae
hlt
cli
negl
insb
sbb
add
cmp
test
nop
cli
add
adc
add
sbb
dec
and
stos
cli
mov
lods
and
add
add
add
