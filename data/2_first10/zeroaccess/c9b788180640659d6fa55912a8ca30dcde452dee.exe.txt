push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
jp
addl
subl
and
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
mov
pop
push
inc
jno
sub
pop
loop
jg
leave
stc
cmp
xchg
cmp
jecxz
xlat
ds
cltd
push
adc
notb
and
je
pop
div
mov
out
mov
add
pop
into
cmp
fsubr
in
push
out
ss
scas
lock
xlat
pop
loope
fcom
sbb
push
add
loop
lods
cmpsl
inc
push
mov
and
rcrl
js
dec
mov
inc
inc
mov
loop
inc
scas
mov
sbb
aad
daa
dec
lahf
aad
xlat
arpl
fldt
lea
jl
mov
push
outsl
mov
ljmp
cmp
sub
out
lods
or
shlb
popa
mov
cld
inc
and
fs
dec
lock
mov
push
lret
sub
movb
divl
stos
les
data16
mov
stos
jae
fisubrs
xor
inc
sarb
das
dec
fisubl
popf
and
add
int3
mull
icebp
loopne
bound
adc
pop
ja
rcl
mov
sub
inc
mov
aad
mov
std
out
pop
xor
jmp
les
mov
xor
jge
loopne
lcall
lahf
call
bound
jle
jo
call
scas
in
and
mov
shl
mov
out
mov
call
mov
inc
pop
cmpb
push
sti
rclb
adcl
jge
sarl
bound
lods
pop
lcall
popf
popa
jle
adc
fldt
inc
or
ljmp
rorl
add
sub
loope
inc
inc
sub
jne
mov
jae
xor
enter
lret
mov
das
inc
lcall
fildll
aad
insb
stc
or
sub
arpl
movl
insb
repnz
negl
xchg
adc
inc
outsl
les
lods
lea
and
pop
sub
pop
iret
xor
popa
test
loope
xor
add
outsb
sti
xchg
push
and
add
push
mov
iret
addr16
out
mov
mov
mov
xor
xchg
cmc
inc
sti
inc
mov
xchg
pop
aam
sti
or
inc
lds
lret
mov
hlt
jl
cmp
add
dec
repnz
dec
mov
jecxz
mov
out
movsb
inc
insl
loop
icebp
ss
and
aas
inc
jno
cmp
push
dec
mov
xlat
test
cmp
std
stos
insb
jbe
xor
imul
dec
and
mov
fldt
cmc
xorb
addr16
stos
fs
test
adc
fwait
sub
fcmove
loop
push
jnp
lahf
mov
lahf
xorl
movsb
or
fsubr
ljmp
or
cmp
adc
xor
push
cmp
inc
fbstp
mov
sti
inc
mov
enter
mov
shr
xor
push
cli
and
cmpsl
es
push
faddl
push
loop
imulb
das
sub
fadds
and
repz
sbb
or
pavgb
xchg
or
dec
inc
cmp
int3
dec
inc
jb
mov
cmpsb
add
or
xor
aas
jge
dec
fdivl
test
mov
mov
cld
sbb
jb
es
bound
imul
insl
and
mov
xchg
lcall
das
jne
divb
lcall
fdivrl
lret
mov
pop
jnp
push
lret
mov
data16
cmp
adc
mov
rolb
inc
repz
mov
bound
add
out
push
jne
popf
xorb
rcrl
and
inc
add
mov
shlb
iret
repz
and
cmpsl
mov
lods
adc
mov
mov
lret
lahf
adc
ja
repnz
cmp
mov
mov
int
loop
sbb
scas
les
xchg
jle
sti
and
je
jmp
bound
mov
mov
mov
jg
xchg
inc
mov
mov
cli
inc
pop
or
jae
sub
xor
pushf
xchg
pop
add
lds
fistl
insb
sub
jle
fs
mov
shrb
mov
sarl
dec
xor
cltd
lock
gs
daa
sbb
rcl
fcmovnbe
xchg
int3
lea
sub
test
ss
lret
paddd
adc
or
lea
inc
sub
dec
sub
mov
xor
jno
repnz
les
fists
mov
mov
push
loope
sbb
cmpsl
loop
loope
sbb
call
int
cwtl
add
add
and
xchg
divl
jg
fwait
mov
rclb
ja
dec
and
out
stos
pop
cld
aad
jmp
push
push
mov
addb
xchg
insb
int3
lds
and
push
and
and
pop
dec
dec
lret
scas
mov
std
mov
push
add
es
mov
cmp
push
fstpt
add
add
mov
jg
jne
cwtl
leave
dec
mov
and
fidivrs
xor
mov
push
fwait
ret
jle
in
cltd
out
mov
cmp
mov
sbb
inc
movl
adc
popf
pop
loop
shr
add
fidivl
out
jns
cld
pop
cltd
xor
lock
je
insb
xor
test
icebp
loope
jmp
jg
adc
sbb
cmc
lods
dec
movsl
mov
dec
xchg
lret
fcomip
jne
adc
pop
int3
cmp
lds
mov
sub
pop
test
xor
add
push
xchg
mov
lock
add
data16
popa
push
dec
adc
and
sti
push
lret
das
mov
xchg
sub
xor
jle
jns
lret
ffreep
icebp
insb
cli
lds
push
cmp
gs
mulb
jmp
mov
inc
xor
push
scas
dec
mov
insl
adc
and
mov
fnstcw
lds
lahf
pop
pop
pop
mov
mov
repz
sub
test
inc
mov
ror
fstps
les
add
decl
andl
ds
sbb
imul
or
sbb
fsubrp
push
pushf
cltd
popf
ja
ja
xchg
push
popf
mov
test
mov
enter
mov
cld
pop
mov
adc
mov
call
mov
adcb
lcall
xchg
out
mov
movsl
ror
das
and
lret
ffreep
cli
xchg
jns
clc
add
icebp
ljmp
test
stos
int3
add
sbb
imul
in
stos
xchg
fldcw
shrb
in
dec
cltd
dec
pop
subl
rorb
or
stos
mov
repnz
mull
push
add
cmpsl
into
add
aas
in
jb
jle
imull
arpl
jge
loopne
cwtl
and
faddl
cmp
inc
inc
lret
cmpsb
sbb
pop
icebp
adcb
icebp
out
mov
mov
sub
or
int
cmp
insl
shlb
jnp
mov
add
jae
fldcw
push
iret
fs
jo
add
pushf
sub
aas
mov
xor
std
dec
das
jae
sysexit
fisttps
sahf
dec
mov
cld
cmc
pop
in
mov
arpl
loopne
outsb
adc
sbb
stos
lds
fmul
sbb
jge
popf
push
arpl
inc
mov
rcrl
add
sub
mov
loop
dec
inc
fwait
sub
test
mov
loop
jb
ss
adc
loopne
jns
das
pop
test
fisttpll
fcoml
mov
push
mov
jo
cmp
dec
nop
call
xchg
cmp
mov
cmp
adc
into
scas
push
imul
add
add
repnz
sbb
pop
dec
iret
negb
aaa
aas
icebp
cmp
pop
cmp
sarl
aam
push
ss
pop
push
cltd
insl
icebp
sbb
ftst
in
int
popa
insb
pop
adc
jns
pop
push
lahf
or
pop
sbb
add
adc
cmp
add
movsb
mov
jecxz
repnz
std
or
push
imul
in
jg
adc
movsb
loope
ret
xor
sbb
xlat
push
les
inc
pusha
sahf
mov
scas
mov
fisttps
sti
shl
push
jle
inc
xor
pop
push
mov
jmp
fistpl
mov
fstpt
adc
pusha
daa
jge
movsl
insb
mov
mov
sub
or
arpl
sub
mov
nop
dec
xor
rolb
test
lret
outsl
fs
xchg
push
adc
add
and
lock
sub
xor
repz
les
fisubrl
mov
fstl
sbb
mov
lods
repz
cmpsl
cmp
ucomiss
loop
or
js
or
cmc
stc
jb
mov
adc
insb
inc
mov
scas
aas
jp
mov
sbbb
leave
fs
lret
sti
push
dec
lods
mov
or
dec
divl
scas
lcall
aaa
lcall
sub
das
lcall
push
je
cld
dec
bound
jg
mov
cwtl
test
push
lcall
jge
cmp
jmp
in
in
sbb
pop
bound
mov
or
sub
xchg
pop
or
pop
loopne
mov
arpl
xchg
or
xor
outsb
sub
mov
jp
push
xchg
test
push
dec
bound
sbb
pop
inc
mov
mov
ss
cmpsb
lcall
jb
lock
imul
xor
mov
pop
jecxz
dec
inc
shr
test
mull
aaa
and
sub
insl
fidivl
hlt
cmp
addb
mov
aaa
jbe
xor
and
and
pop
rcll
sub
mov
pop
outsb
xchg
imul
int3
xchg
std
inc
into
sub
test
repz
push
mov
jbe
lahf
pop
cmp
inc
jle
les
lea
dec
lock
je
addl
inc
popa
jmp
jno
stos
push
push
scas
push
ja
daa
xor
jecxz
inc
sbb
mov
je
and
fwait
ror
out
xchg
sbb
jb
test
repnz
outsb
pushf
es
repnz
mov
push
fs
fisubs
jne
pushf
jns
dec
push
sbb
pop
sbb
out
xchg
pop
push
loopne
push
inc
aas
les
lret
push
fldcw
leave
or
mov
mov
or
aaa
in
xor
ds
andb
testl
aaa
popf
das
sub
and
les
xchg
sbb
imul
xchg
repnz
outsl
adc
lret
jge
jl
and
dec
pop
push
mov
xchg
repz
mov
push
jge
fisubs
outsb
loope
in
xchg
mov
enter
sbb
mov
out
loope
in
test
in
sbb
cmc
leave
xchg
in
mov
iret
pop
mov
aaa
lea
and
mov
jmp
dec
xchg
cmp
sarl
xor
es
pop
loope
xchg
or
jp
mov
sahf
add
movsb
jle
int3
or
imul
data16
sbb
sub
mov
mov
and
pop
test
and
lea
cltd
stc
and
xchg
les
mov
movq
pop
xchg
sbb
sbb
dec
xchg
adc
mov
ja
sub
pushf
lret
pop
push
mov
out
stos
ficompl
out
roll
call
cmp
push
xor
pushl
jbe
aaa
or
mov
subl
xor
mov
or
imul
dec
or
pop
lea
in
enter
orl
orb
out
xchg
pop
add
xchg
or
cmp
sbbb
pop
pusha
in
test
ror
inc
fildl
or
test
popa
cmc
mov
es
sbb
inc
add
dec
xor
mov
lret
sbb
jg
data16
pop
or
ljmp
sbbl
flds
jg
inc
aaa
lret
divl
adc
test
dec
jae
int
addl
add
outsl
cmp
jge
sub
aaa
dec
loopne
insb
in
sbbb
pmaddwd
scas
mov
cmp
test
daa
dec
jle
mov
jnp
sbb
cmp
or
jmp
adc
sti
loopne
pop
sbb
inc
push
pop
fldt
push
mov
adc
out
scas
sub
jle
int
inc
sarl
test
or
inc
ljmp
aad
pop
inc
inc
cmp
cmpsb
pop
dec
xchg
push
inc
dec
mov
rol
out
jno
jge
xchg
pop
push
int
subb
aad
jae
inc
dec
cmp
and
pop
cld
stos
or
xlat
test
roll
dec
movsb
sbb
jns
cmpsb
pop
xchg
inc
shlb
rolb
jno
dec
jne
or
fs
add
mov
call
int3
in
xor
je
loop
mov
jb
addl
call
push
cmc
inc
pusha
mov
lcall
pushf
pop
iret
pop
in
pop
pop
lods
outsb
int
inc
xor
pop
ror
cmpsb
push
cmc
sbb
dec
sbb
lock
mov
dec
xchg
ja
fld
pop
add
rdmsr
cmpsb
imul
rorb
scas
out
out
jge
mov
jp
aam
mov
cmp
xchg
stos
rolb
mov
ror
outsb
out
jp
mov
cwtl
imul
aam
push
out
test
adc
repnz
jecxz
sbb
mov
jle
popa
imul
lret
jbe
cmp
fdivs
jle
dec
xchg
clc
inc
arpl
mov
lret
push
push
dec
jmp
or
and
mov
adc
mov
mov
aaa
int3
and
je
leave
aad
lret
dec
in
xor
xchg
mov
add
jg
mov
int
dec
adc
cmp
sbb
in
imul
pop
fcmovbe
xchg
xchg
mov
iret
adc
out
ficoml
rcrb
sbb
push
mov
imul
mov
ss
mov
sub
adc
aas
lods
mov
insl
adc
cmpsl
add
loope
xor
jno
out
mov
jae
mov
ljmp
push
enter
and
daa
scas
popf
pop
mov
aad
cmp
xor
lret
sbb
in
shlb
rcrl
xchg
sub
mov
lds
in
out
repnz
dec
cmp
xor
fmuls
or
in
and
pop
xchg
xor
or
lcall
sbbb
out
mov
pop
xlat
aam
lea
sbb
sbb
lahf
jo
stos
dec
and
mul
sub
fsub
inc
jg
adc
into
stc
mov
push
in
jb
mov
inc
or
cld
cmpsl
cmpsb
mov
or
call
cmp
mov
add
in
clc
and
xor
cmp
dec
flds
xchg
pop
cmp
mov
mov
cmpsl
aad
mov
mov
xor
pop
mov
int
add
lds
or
repz
aaa
loope
or
xor
rcr
xchg
mov
loopne
lods
pop
sbb
scas
inc
in
or
xchg
dec
test
idiv
xchg
repz
scas
ljmp
out
leave
jns
xchg
jae
test
sub
andl
insl
loope
mov
push
je
clc
and
xchg
cmp
pop
sub
pusha
adc
pop
jl
push
add
pop
or
mov
lods
lods
fisubrs
push
dec
mov
imul
xchg
lcall
mov
lret
imul
movsb
in
dec
adc
mov
dec
in
std
inc
lods
adc
fnsetpm(287
mov
add
mov
dec
shlb
les
aas
xchg
jo
adc
sbb
fisttps
stos
fs
push
or
add
jmp
jl
pop
aaa
pushf
sahf
mov
fcmovnb
hlt
rcrl
imul
xor
push
insl
leave
cld
add
fwait
mov
jno
lods
push
pop
fsubl
sub
xchg
in
nop
xor
push
push
cmp
mov
test
lcall
xchg
inc
sbb
or
mov
rcrl
insl
xorb
test
mov
ret
mov
mov
sti
or
and
icebp
out
push
sub
mov
jl
cmp
mov
mov
roll
into
rcr
dec
subl
adc
sub
fbld
jne
gs
fsts
inc
addr16
xor
mov
cmp
jle
mov
dec
idivl
pop
sub
dec
pop
add
jnp
out
repz
sbb
arpl
push
addr16
or
inc
pop
pop
mov
jbe
mov
mov
xor
div
ljmp
pop
lahf
dec
insl
enter
fisttps
stos
add
leave
insl
xchg
add
push
mov
cmpsl
int
fnsetpm(287
test
shlb
mov
push
cmp
or
out
mov
cmpsl
dec
fwait
inc
inc
push
int
gs
ret
pop
mov
mov
cld
adc
pop
sahf
cmpsl
call
mov
popf
icebp
sbb
dec
enter
insl
les
sarl
stc
popf
pop
pop
mov
jo
mov
add
or
fdivr
inc
xlat
shrl
xor
xchg
out
rorb
mov
pusha
cmpb
mov
mov
jbe
pusha
les
psllq
imul
lea
push
lock
loope
sahf
out
test
in
ja
mov
xor
xchg
pop
icebp
add
sbb
cld
in
jl
cmp
test
inc
cltd
push
in
xchg
ljmp
jmp
mov
pushf
and
inc
js
xor
lea
movsb
mov
push
xor
int3
mov
fstl
lods
dec
stc
and
mov
rolb
repnz
icebp
jmp
xlat
sar
in
test
es
adc
test
sbb
fdivr
mov
jno
ficoms
push
sahf
push
fistpl
mov
lret
mov
jb
jnp
mov
lcall
int3
adc
imul
xor
jecxz
push
push
mov
pushl
repnz
jmp
sbb
xor
enter
testl
add
inc
jns
inc
cpuid
mov
pop
push
test
mov
dec
jg
hlt
push
jne
xor
into
scas
cmp
repz
rcr
mov
dec
push
jp
xchg
dec
mov
lock
or
lret
jo
push
mov
iret
hlt
ficoms
out
push
xor
in
shl
enter
push
lea
cs
gs
sti
dec
mov
roll
add
lods
scas
jge
mov
mov
sahf
fcompl
sub
sub
stos
lret
cmpsb
jo
mov
lds
xchg
mov
sub
mov
cmpsb
xor
pop
adc
lock
add
xchg
sbb
or
or
xor
in
mov
cwtl
push
ret
push
mov
xor
sub
mov
pusha
inc
imull
mov
sbb
cltd
mov
push
xchg
add
push
push
movsb
jle
jl
pushf
imul
cmpsl
jne
pop
loope
cs
xor
daa
pop
xchg
gs
xchg
and
ja
loopne
mov
mov
cs
aas
js
jns
pop
sbbb
xchg
adc
dec
rorl
outsb
mov
enter
enter
outsl
xchg
pop
daa
mov
mov
cmc
loopne
pop
jbe
rolb
bswap
test
and
cli
or
xchg
lcall
cs
push
das
sub
fists
call
mov
ja
xchg
out
adc
mov
jg
cwtl
rorb
jge
cmp
push
adc
pop
add
int
mov
push
cmp
or
inc
xchg
flds
mov
sub
xchg
add
inc
cli
js
dec
or
jne
jo
mov
ja
out
pop
sub
mov
pop
repz
xor
push
repnz
inc
sub
mov
add
mov
test
lahf
outsb
int3
adc
push
loop
mov
int
in
fwait
mov
dec
rorb
xor
mov
push
sbb
aas
xor
mov
das
xchg
cmp
sqrtps
inc
jecxz
dec
xor
adc
aad
es
std
hlt
jmp
les
mov
fcmovbe
mov
mov
dec
sub
in
mov
jns
jns
mov
add
inc
inc
mov
pop
push
xchg
cmp
xchg
in
pop
mov
dec
scas
lock
mov
mov
mov
fisubrl
and
insb
shl
pop
push
mov
inc
inc
sahf
mov
inc
xor
ljmp
ficoml
adc
jle
out
mov
and
mov
es
mov
enter
mov
push
push
jl
aad
mov
mov
mov
xor
sbb
ret
lods
lcall
sbb
loopne
sbb
jle
sbbb
insl
cmp
jl
or
mov
inc
push
adc
push
adcl
mov
pop
je
jbe
inc
xor
in
mov
sbb
dec
lcall
orl
mov
and
inc
pop
divl
push
and
stos
cmp
lahf
push
arpl
daa
and
mov
add
jecxz
inc
clc
rcr
loope
lock
mov
push
cmp
push
xor
cmp
sarb
cmpsb
cmp
adc
add
sbb
in
sub
orl
repnz
jle
push
push
leave
jl
les
add
fwait
rol
cmp
sub
cmp
adc
jp
outsl
cmp
mulb
pop
xor
cmp
lods
les
cmp
jge
jecxz
aad
int3
dec
fdivs
popf
nop
inc
repnz
dec
push
imull
dec
pop
pop
or
push
mov
scas
push
test
jno
sbb
adc
xchg
jnp
pop
das
adc
adc
mov
sub
mov
jnp
fistl
ljmp
dec
and
mov
push
jge
jb
adc
sbb
and
push
loopne
adc
movsl
popa
add
and
cmpsl
cli
push
pop
cwtl
or
jecxz
dec
mov
lods
cmp
dec
clc
cmp
ja
jne
jmp
mov
xchg
int
inc
mov
lods
sbb
aam
fldl
mov
mov
decb
movsl
cmpl
in
loop
push
js
jno
sub
jmp
test
lcall
dec
pushf
mov
push
mov
push
xor
addr16
sub
shll
lods
loope
fisttps
out
sbb
mov
repz
cmp
sub
pop
mov
js
mov
mov
mov
mov
dec
pop
sar
and
filds
pop
scas
add
fidivs
inc
dec
js
hlt
test
or
out
into
je
call
loope
ficompl
adc
in
and
mov
sub
or
mov
pop
pop
cmpsb
mov
loopne
stc
inc
push
outsb
rep
lret
shl
mov
popf
jecxz
adc
add
xor
or
inc
adc
test
aas
pop
ljmp
cmp
fldl
and
adc
push
cmp
mov
leave
stos
jns
mov
aad
insb
addr16
jo
je
int3
jb
mov
and
mov
aad
mov
cmp
mov
fimuls
sbb
fsts
leave
dec
pop
addr16
rcll
and
mov
mov
div
pop
jmp
jo
repnz
and
cs
mov
mov
adc
mov
filds
inc
imul
ss
bound
and
scas
cmpsl
xor
xchg
xchg
xchg
add
mov
adc
jmp
mov
adc
push
inc
repz
add
lret
shll
adc
mov
xchg
jg
divps
push
pop
add
and
jnp
jb
mov
mov
std
fcomps
and
pop
pop
xchg
mov
fsubrl
aas
jecxz
lcall
xchg
jo
idiv
cmc
sbb
sub
cwtl
cmp
test
stos
mov
cld
mov
push
and
int3
add
push
and
push
iret
lods
lods
test
fwait
rcll
rol
push
jns
fucomi
push
mov
into
mov
inc
sbb
push
push
js
cmp
sti
xchg
movb
or
push
stc
or
push
and
inc
fisubrs
mov
vpshuflw
push
mov
aam
jp
push
add
sub
int3
cmpsl
out
push
sub
add
daa
scas
in
mov
or
xchg
ljmp
in
aam
ss
jmp
cli
fxch
mov
pop
sub
mov
mov
enter
stos
insl
mov
mov
mov
cmp
mov
mov
sub
sub
out
pushf
out
in
lods
xor
jae
movsl
rorl
and
int
test
mov
jl
popa
fidivs
mov
rolb
mov
popf
xorb
pop
fmull
sub
and
data16
jns
add
cmp
sub
jmp
inc
and
jae
out
jne
bound
loopne
and
or
mov
in
fs
ret
nop
fsubrl
sub
pop
rorl
gs
lds
mov
jg
rolb
mov
jmp
push
cmp
fsts
dec
rolb
repz
ss
cmp
int
scas
pop
gs
xor
fcoml
rolb
or
and
arpl
pop
jno
test
adc
xchg
popa
and
shr
fdivr
adc
cmpsl
mov
stos
mov
cmp
arpl
outsb
cmp
pop
lret
fsubrs
notb
cmp
enter
sbbb
aas
scas
mov
jle
mov
jnp
fcomip
add
repnz
cltd
and
les
jl
adc
in
out
fldl
fwait
adc
xor
mov
scas
gs
push
lahf
cmp
jae
in
add
sbb
inc
movsl
xor
aaa
sub
xor
mov
dec
mov
cs
xchg
mov
xor
mov
test
notb
sub
in
and
and
lret
andb
cmp
fisubs
ljmp
sub
mov
xchg
in
fsubl
sarl
mov
nop
outsb
loopne
mov
clc
imul
inc
out
out
icebp
jae
add
pushw
inc
les
movsb
sub
fcoml
lcall
fucomp
add
jmp
xchg
push
xchg
lods
inc
negb
dec
push
stos
jae
cmpsb
mov
inc
xor
andl
push
and
and
push
sbb
add
pop
out
or
lret
mov
xchg
sti
int3
lret
jmp
sub
rorb
idivb
mov
std
aas
vmovss
jg
push
mov
pop
jns
gs
lods
mov
push
and
sbb
pop
imul
dec
shl
jnp
sbb
cmp
dec
out
inc
xchg
push
xchg
aaa
xchg
sub
sbb
test
and
fsubr
das
in
push
sub
mov
dec
xchg
popfw
pop
add
or
lds
nop
cmp
pop
inc
imul
leave
xchg
ret
sbb
pop
in
mov
std
addl
dec
push
fmul
popf
daa
hlt
mov
sbb
movsb
popl
insl
mov
pop
and
push
jmp
es
jne
scas
pop
add
int3
mov
sahf
in
cmpsl
jge
cmc
inc
jb
leave
mov
shl
fwait
imul
cmp
gs
push
jnp
cmc
mov
cltd
or
dec
scas
scas
js
sbb
and
add
xchg
cwtl
pushf
or
int3
xor
xor
mov
rorl
mov
push
cmp
pop
scas
xchg
sub
test
lods
js,pn
pop
sarb
sub
mov
pop
js
cltd
jns
sbb
inc
or
adc
stc
inc
mov
xor
popl
repnz
pop
inc
add
mov
dec
or
mov
aad
shrb
sbb
or
movsl
and
pop
int3
xchg
cli
lahf
xchg
pand
jno
hlt
sahf
xor
enter
sar
ud1
adc
fcompl
sub
sbb
mov
and
fisubrs
and
jbe
jns
cmp
xchg
mov
insl
das
sti
add
leave
pop
fs
clc
mov
push
jo
lcall
mov
jnp
movl
pop
inc
cs
pop
aas
and
or
movsb
paddsw
mov
inc
scas
dec
pop
cmp
jb
pop
icebp
test
nop
cli
dec
rorb
clc
sub
cmpsb
add
xchg
push
pop
and
fiadds
jp
jne
data16
aaa
aaa
testl
xor
rol
pop
addr16
pop
dec
or
mov
nop
pop
adc
ds
xor
mov
lods
bound
and
sarb
test
in
jno
adc
pop
cmpl
mov
sbb
outsl
xchg
ds
cmp
cltd
je
iret
sbb
sub
pop
cmp
pop
xorl
jmp
test
int3
push
mov
lods
or
sbb
iret
adc
and
test
in
aam
xor
ja
xchg
sub
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
outsl
fs
pop
addl
push
inc
nop
add
mov
adc
fdivrl
in
lcall
lahf
jno
lahf
loope
pop
sub
add
jp
xlat
add
or
mov
sbb
mov
cmp
aam
sbb
arpl
add
dec
sbb
aas
or
dec
movsl
insl
jecxz
scas
mov
outsb
cmc
in
ret
push
mov
pushf
aas
je
pop
mov
or
cld
aas
xor
ljmp
lea
je
mov
sahf
push
xor
cmpsl
sub
cmpsl
dec
inc
dec
xchg
fildll
lret
jecxz
mov
mov
xor
xor
shrl
push
int3
int3
push
ret
fnstsw
movlps
stos
pop
out
mov
in
push
movsl
mov
in
or
mov
sub
ljmp
cmp
popa
inc
xchg
push
add
mov
movsb
stos
adc
push
rolb
or
push
loope
inc
cli
and
lahf
inc
add
dec
fildl
lcall
and
insl
scas
xor
mov
aam
adc
pop
loop
out
lea
in
inc
push
inc
addr16
lods
pop
pushf
mov
outsb
lret
cmpsb
pop
rcr
ja
xchg
mov
lret
push
je,pn
add
cld
popa
pop
popa
mov
mov
pop
sub
xor
cmp
jecxz
loope
daa
cmp
loop
in
je
mov
rcrb
and
inc
inc
jae
inc
pushf
xor
movsl
stos
or
cmpsb
push
psubusb
adc
cmpsb
cmpsb
mov
pop
out
cld
test
xchg
push
mov
out
jo
sbb
repz
fwait
pop
xchg
lods
pop
fcomps
fidivrs
mov
insb
mov
jmp
repnz
lcall
cmp
addr16
cmp
sti
in
inc
xor
and
ftst
ror
push
call
mov
jecxz
mov
cmp
das
ljmp
cmpsb
cmp
int3
xchg
xchg
mov
stos
call
fnstsw
test
mov
ficoml
xchg
pop
mov
lret
negb
ficompl
call
lea
aaa
in
imul
in
xchg
test
sub
dec
push
xor
sub
jecxz
mov
cmp
movb
jle
inc
bnd
sub
mov
insl
add
dec
xchg
push
adc
repnz
jno
js
lods
jae
out
mov
fdiv
cltd
repnz
lcall
sbb
addr16
pop
outsl
mul
ficompl
mov
and
ficomps
add
jne
loopne
or
add
and
shll
jle
jae
lea
push
jnp
mov
cmc
jg
or
inc
jb
xor
jne
cmp
das
mov
or
pop
or
inc
sbb
cmp
into
inc
mov
lods
lret
mov
inc
pop
and
jnp
xchg
imul
daa
mov
sub
push
cmp
scas
xchg
arpl
les
rcr
idivb
cmp
nop
push
push
mov
sub
mov
push
js
test
mov
fwait
inc
inc
loopne
aad
or
pop
mov
xchg
push
add
lret
adc
mov
dec
and
xchg
loope
mul
push
mov
cvttps2pi
or
sbbl
iret
imul
adc
iret
xchg
js
js
aas
clc
mov
stos
mov
jne
push
lahf
decl
sub
lret
shl
mov
jecxz
pop
out
fstpt
jmp
addb
hlt
xchg
inc
rcrl
add
push
pop
movl
xchg
dec
lahf
in
or
shll
push
mov
mov
dec
shrl
ficoml
jae
inc
dec
out
mov
pop
mov
scas
jbe
cltd
pushf
cmp
js
dec
push
mov
inc
imul
xchg
or
adc
add
add
pop
lods
pop
mov
lock
imul
adc
jae
das
repz
xchg
push
sub
push
bound
push
loope
or
mov
dec
aaa
inc
addl
ret
push
sbb
mulb
test
lret
imul
sbb
push
les
bound
xchg
sub
mov
inc
jg
out
out
pop
pushf
nop
jmp
adcl
mov
dec
pop
mov
sub
scas
sub
xchg
sarl
std
mov
jg
cmp
push
pop
decl
sub
and
cmc
cmpsl
push
adc
jae,pt
push
mov
jne
mov
xor
or
mov
add
loop
out
and
xor
jo
push
lods
add
fcomps
pop
lods
imul
sub
dec
cmp
cmp
dec
sub
push
adc
aaa
lock
cwtl
pusha
addr16
test
call
dec
cmp
jmp
mov
add
xchg
dec
jge
test
cmp
inc
enter
enter
or
mov
in
arpl
out
bound
sub
je
xor
or
out
jno
ret
sub
and
setne
out
cli
arpl
sub
clc
lret
lds
loop
xor
sub
ficoms
pop
ret
and
sbb
je
es
dec
fdivs
inc
fwait
gs
xchg
sbb
jl
lret
push
nop
adc
inc
and
adc
dec
daa
push
pop
shl
xor
add
jne
int3
pop
or
xor
daa
test
mov
xor
rcll
jns
and
pop
leave
xor
jne
cmp
jo
enter
jle
and
jecxz
pop
loop
mov
pop
in
fcmovnb
mov
out
mov
mov
jnp
sub
mov
dec
mov
addr16
mov
jle
jns
xchg
push
pusha
mov
push
ret
in
mov
mov
jp
xchg
lods
push
fsubrl
and
lods
xorb
movsl
pop
inc
dec
cmpsl
mov
dec
stc
xor
mov
cltd
fsubl
mov
inc
mov
iret
ret
pushf
mov
popf
cmpsl
pop
js
xor
in
sbb
iret
pop
xchg
scas
test
or
cmp
scas
mov
mov
mov
dec
sub
xchg
test
mov
fnsave
push
dec
out
xchg
call
ss
stc
out
push
fdivr
dec
dec
add
push
js
mov
enter
loop
outsb
mov
xchg
pop
hlt
mov
push
lcall
shll
push
adc
sahf
xchg
mov
arpl
mov
xchg
int3
mov
mov
sub
aaa
dec
push
xor
call
or
adc
jmp
cmp
mov
cmpsb
arpl
cld
xchg
adc
fisttpl
and
aam
jmp
popa
mov
mov
xchg
sbb
xchg
xor
inc
mov
cmpsl
inc
jp
lahf
ss
sub
and
mov
lods
icebp
in
ss
lock
daa
pop
mov
sub
xor
sti
jbe
icebp
xchg
gs
pop
stc
pop
fwait
into
popa
rcr
cmp
mov
insb
scas
jns
xchg
add
sub
cmp
sbb
mov
xchg
and
push
adc
inc
add
fwait
jbe
dec
mov
sbb
xlat
in
inc
filds
cld
into
insb
sub
call
pop
jno
sub
stc
dec
jmp
es
pop
es
out
pop
pop
xchg
int
adc
mov
push
push
sub
xor
or
jae
call
mov
mov
daa
add
inc
fdivrl
ret
clc
dec
cmp
mov
daa
sbb
mov
and
cwtl
rcrb
dec
orl
je
inc
jecxz
into
loope
mov
jmp
xchg
cmp
and
mov
mov
in
lret
daa
or
dec
hlt
push
outsl
repnz
lds
sbb
sbb
adc
jbe
rol
aad
fmul
ss
loope
jecxz
popa
cli
imul
clc
sub
adc
outsl
cmp
je
cmovl
mov
adc
roll
int
data16
adc
icebp
xor
mov
mov
sbb
je
sbb
or
pop
les
inc
int3
and
std
jge
mov
inc
decb
sub
loopne
push
pop
shll
lods
lahf
and
or
inc
daa
orb
bound
fldcw
mov
adcl
int3
jle
xchg
stos
push
aaa
xor
fdivr
ret
cmpsb
scas
xchg
mov
xchg
aam
les
pop
sub
jns
cwtl
add
inc
mov
mov
jb
rcr
es
cmc
lret
inc
inc
and
stc
dec
stc
jo
push
sub
mov
ss
push
outsb
or
dec
or
and
sub
pop
gs
sub
imul
pop
sbb
cmpsl
or
outsl
popf
sti
pop
push
mulb
aaa
lcall
ljmp
cmp
add
lds
xorb
mov
js
data16
in
out
lea
rcll
es
add
or
fsubl
mov
in
and
mov
push
and
push
lods
dec
push
into
cmpsl
push
or
mov
mov
adc
mov
fmul
jno
adc
dec
ja
jp
sub
push
mov
cmp
fstl
lcall
lcall
lahf
outsb
mov
xor
adc
jbe
push
outsl
mov
push
xchg
xor
outsb
pop
std
pop
dec
pop
and
daa
divb
sub
arpl
lods
in
dec
lcall
push
xor
inc
inc
fidivrl
xlat
ss
mov
int3
jmp
call
sbb
mov
sbb
cmpsb
sbb
adc
xchg
xchg
and
pushf
addb
cmp
insb
loope
stos
daa
pop
inc
xchg
jmp
mov
movsb
shll
cld
arpl
cmpsl
dec
mov
aaa
add
fistpl
dec
dec
sub
imul
sub
add
decb
dec
lcall
loop
add
add
rcrb
fwait
das
aad
sub
adc
outsl
adc
out
outsl
and
ret
pop
stc
rorl
clc
imul
adc
jg
pop
ss
fs
ror
xor
dec
incl
fs
mov
dec
cmp
out
mov
movl
mov
shr
mov
test
popf
or
imulb
mov
xchg
mov
mov
dec
push
movsl
test
inc
mov
jg
and
cmp
stos
mov
dec
adcl
ja
xchg
xchg
cmp
outsl
or
outsl
and
inc
imul
ret
cld
lret
nop
mov
xor
adc
xor
out
mov
hlt
mov
jae
xor
xor
adc
ficoms
and
xor
adc
stos
pop
cltd
xchg
lahf
mov
dec
lret
je
cmp
cs
jo
mov
pop
pop
bound
pop
jg
ds
jl
push
mov
pop
gs
push
push
adc
enter
inc
fdivs
fdivs
mov
call
mov
jg
notb
enter
xor
and
adc
icebp
mov
stos
add
movsb
and
inc
xor
into
cld
das
mov
xor
fucomip
cmc
xchg
sbb
cwtl
mov
out
faddl
je
sti
cmc
sbb
jb
mov
mov
cmp
sbb
je
jne
jo
enter
dec
sbb
lea
and
mov
ds
adc
cmpsl
nop
jbe
mov
xor
mov
sub
lods
decb
insl
sub
loop
inc
movsl
jns
xchg
je
mov
mov
mov
mov
inc
fnsave
data16
push
jecxz
fisttpl
sbb
or
adc
and
dec
sbb
mov
dec
xor
test
bound
loope
xor
or
or
hlt
fcomp
pop
push
mov
sbb
add
sub
jo
out
sbb
and
cmpsb
cmp
fidivrs
pop
mov
js
sbb
pop
negb
adc
rcrl
mov
pushf
add
add
jb
xchg
icebp
fnsave
in
inc
movsl
jl
hlt
add
mov
call
pop
adc
enter
mov
push
add
sbb
add
push
cmp
xchg
and
push
leave
adc
lret
dec
and
xor
push
jg
gs
mov
and
mov
dec
enter
push
sbb
sub
cli
pushf
jo
cmpsl
cmc
mov
pop
out
pop
xchg
scas
cmpsb
fisttps
in
shll
loop
adc
cmp
outsl
scas
add
ja
mov
mov
jle
inc
cmp
fidivs
shl
jo
loope
xchg
inc
mov
pusha
cmp
mov
scas
frstor
mov
mov
mov
xchg
sbb
rcr
imul
cmpsl
test
mov
xlat
sub
hlt
dec
scas
inc
adc
mov
push
pop
mov
mov
mov
lds
insb
adc
nopl
hlt
or
mov
test
lret
adc
repz
push
or
xchg
jnp
ss
adc
scas
clc
fsts
int
mov
sub
sbb
mov
shl
cmpb
mulb
pop
add
push
mov
mov
adc
adc
sbb
pop
fs
mov
jge
mov
out
sarb
test
adc
xchg
fwait
xchg
adc
wrmsr
shrl
cmp
mov
loop
or
or
mov
inc
or
mov
out
sahf
jns
dec
push
push
rorl
filds
aas
xchg
add
dec
shr
inc
jno
popf
rorl
stc
push
xor
aaa
or
lret
inc
cmc
movsb
imul
xchg
dec
out
sub
int3
enter
les
sti
dec
xchg
movsl
push
mov
imul
clc
shlb
nopl
xor
mov
push
and
pop
jg
cmpsb
test
mov
inc
sub
ljmp
jecxz
cmp
mov
and
lahf
das
xor
stos
sub
bswap
push
add
inc
out
cltd
loopne
loop
movups
or
xor
xor
push
int
or
subl
sbb
pop
jnp
mov
ljmp
shrb
lds
mov
dec
cmp
mov
mov
je
outsl
fcom
cmp
sub
mov
dec
push
fldenv
js
imul
mov
xor
lods
xor
lcall
in
or
icebp
dec
daa
mov
scas
sahf
jne
or
hlt
jp
or
push
inc
aaa
jmp
stc
cmp
int
xor
lret
test
push
cwtl
imul
jo
jl
jecxz
aaa
or
and
cmc
push
xchg
shlb
sbb
in
dec
adc
test
cltd
inc
mov
stos
adc
hlt
ss
xchg
push
ss
xchg
aaa
shl
lahf
ret
xchg
pushf
mov
call
lcall
inc
sub
adc
pop
outsb
mov
ss
jge
or
xor
mov
push
inc
xlat
mov
maxps
jg,pn
jl
nop
cmp
iret
adc
cmp
and
repnz
rorl
lahf
mov
inc
test
cli
test
movsb
or
jp
jnp
inc
xor
adc
lods
cmp
and
aaa
xlat
inc
inc
sub
jno
pop
bound
adc
iret
jno
dec
add
aad
xchg
lods
mov
lock
cs
xchg
pop
inc
dec
push
test
mov
cmp
outsl
add
xor
jmp
pop
xchg
and
xor
lret
pop
lret
push
adc
xor
inc
push
insl
inc
jge
rcll
adc
imul
aaa
lock
insl
int3
pop
movl
mov
jmp
es
mov
xchg
lret
mov
pop
pop
add
shr
jmp
mov
test
hlt
push
movl
mov
or
mov
pop
ja
int
pop
mov
frstor
add
mov
enter
loopne
popa
in
or
lahf
push
mov
mov
test
or
push
or
fucomi
push
xor
in
imul
mov
test
xchg
fldt
in
mov
out
mov
imul
lock
fwait
dec
cmp
mov
and
mov
xchg
jge
mov
dec
cmpsl
imul
out
ret
pop
sbb
cs
inc
repnz
into
xor
adc
aam
ds
inc
adc
adc
fdecstp
or
sahf
cli
cmp
adc
add
mov
imul
sbb
das
cmp
add
or
mov
pop
fisubl
push
ss
out
sbb
in
pusha
jne
cwtl
call
das
xlat
and
xor
push
clc
lcall
leave
out
outsl
mov
inc
push
cmp
imul
pop
mov
sub
mov
enter
xor
dec
lods
fxtract
pop
fdivrl
je
pop
sbb
mov
out
imul
je
outsb
jle
in
cli
test
dec
mov
push
movsl
fldl
shl
cmp
clc
jno
int
frstor
jb
push
or
cmp
outsb
mov
lods
push
loope
mov
mov
mov
sbb
fistpl
outsb
shrl
out
inc
arpl
stos
mov
ss
outsb
jecxz
aaa
bound
in
lods
loopne
xlat
inc
jmp
sub
arpl
adc
pusha
test
repz
sbb
test
pop
lea
lret
ret
push
and
rorl
repnz
add
rorl
jae
fucomi
xchg
icebp
mov
out
mov
arpl
jmp
dec
and
jp
je
sub
clc
mov
lcall
popa
daa
inc
mov
gs
incl
inc
inc
in
sbb
add
add
rcr
pop
bound
fldl
xor
dec
scas
dec
mov
out
adc
adc
push
xchg
push
or
mov
jno
xchg
stos
daa
insl
insb
subl
push
notb
inc
lods
push
push
pop
xchg
sub
xchg
test
cmpsb
mov
das
fldcw
jge
cltd
imul
xchg
adc
mov
pop
pop
loope
mov
stos
fdivrs
add
pop
and
push
cmp
pop
leave
cmpsl
add
mov
xor
ret
call
mov
addr16
enter
mov
sbb
sbb
cmp
ja
idiv
jae
ja
sub
dec
imul
pop
pop
aaa
push
xchg
stos
ss
push
cmpsb
rorl
insb
daa
mov
and
mov
adc
ljmp
test
dec
lock
out
adc
decb
insl
inc
and
les
push
xor
or
inc
adc
sbb
jp
xchg
ds
push
lcall
dec
mov
cld
push
push
repnz
add
or
lods
jnp
push
and
and
movsb
or
mov
push
pop
pusha
mov
mov
sub
jle
out
and
pusha
dec
ss
cs
mov
jno
ret
cmp
pop
jmp
popl
xchg
dec
mov
and
out
xchg
hlt
cmp
movsl
sub
mov
mov
cmp
inc
mov
mov
inc
or
test
jne
adcb
faddl
jns
icebp
stos
jg
stc
test
rclb
or
push
in
jae
cmp
fwait
xchg
mov
dec
mov
out
ret
cli
enter
fstpl
inc
jo
mov
aaa
lahf
sbb
fstps
inc
xchg
sub
out
dec
jp
xchg
jg
pop
or
pop
sti
nop
je
sub
adc
stos
jns
scas
aaa
jbe
cwtl
idivb
sarb
in
push
aaa
andl
lret
hlt
repz
clc
xchg
jmp
adc
aaa
repz
movsl
jo
aam
ss
aaa
stc
popa
mov
dec
and
in
inc
sub
ljmp
mov
dec
xor
pop
jmp
mov
movl
push
cmp
aas
push
lret
lcall
popa
pusha
std
jnp
add
aam
jae
lea
pop
pusha
adc
fs
enter
mov
subl
lods
sbb
add
dec
cmp
xchg
clc
pop
or
sahf
outsb
ret
adcl
les
in
insb
fistpll
cmpl
xor
icebp
push
pop
insb
in
rcrl
int3
lods
shll
mov
push
loopne,pt
lods
pop
fs
aad
mov
pop
in
test
movsl
or
cmp
data16
add
fldl
pushf
sbb
pop
int
mov
lret
testl
lcall
xchg
add
sbb
dec
or
sub
dec
data16
and
mov
sub
sarb
int3
das
cmp
rcl
sbb
jbe
xor
es
adc
test
insl
sub
imul
es
mov
pop
push
lret
jno
test
lret
ret
or
mov
and
out
xchg
arpl
imul
inc
jb
inc
les
int3
sbb
js
jae
or
mov
sahf
xor
push
pop
push
push
mov
rolb
std
dec
inc
inc
imul
push
jge
icebp
cmpsb
idivb
mov
jmp
mov
hlt
xor
out
push
es
cmp
enter
cmpl
iret
icebp
and
push
mov
jge
mov
ss
test
jp
ljmp
push
cmpsb
data16
cmp
stos
pushf
adcl
dec
mov
lcall
pop
dec
call
mov
loopne
out
fs
mov
sub
shll
loop
or
sub
test
mov
call
addr16
mov
rcrb
icebp
and
fisubrl
lcall
insl
cmp
ja
insb
cmp
insl
fs
push
fldpi
mov
cmp
in
aaa
gs
aas
add
mov
dec
cmpsb
pminsw
mov
dec
pop
dec
add
fisubrl
xlat
sub
mov
aad
push
movsb
cmp
jp
out
nop
cmp
sti
sub
lcall
in
test
movsl
pop
push
fisttps
mov
inc
aad
mov
notb
pop
xor
mov
in
xchg
cmp
jb
dec
mov
xchg
lahf
testb
sti
xor
iret
leave
or
movsb
sub
sub
xchg
rolb
push
sahf
roll
jmp
std
cltd
push
in
test
clc
add
fcoms
insl
mov
sbb
scas
jge
mov
cld
dec
out
enter
testb
mov
inc
ret
xlat
ljmp
test
aad
dec
mov
nop
sbbl
push
push
xor
xor
dec
mov
xchg
popf
fsub
inc
ret
loopne
hlt
pusha
push
jns
in
mov
leave
push
lret
fdivrl
cmc
adc
mov
stc
adc
insb
mov
ret
aas
outsb
sbb
mov
push
mov
fs
adc
mov
test
stc
xsavec
xchg
imulb
lret
insl
stos
fiaddl
or
pop
lahf
jmp
xor
mov
in
cli
fnstsw
push
iret
dec
xor
jp
dec
je
pop
mov
push
pop
mov
and
aad
rcrb
sub
add
pop
in
mov
adc
lcall
push
cmc
xor
lea
add
lret
xor
and
out
or
pop
jne
mov
jg
xchg
outsb
jp
loop
sahf
mov
das
add
push
and
je
outsl
insb
int3
dec
pushf
imul
sbb
and
data16
test
nop
out
add
xor
xlat
test
mov
jne
cmpsl
or
sahf
jp
push
test
je
push
testl
imul
lods
fnstcw
lods
jae
or
std
xor
adc
xchg
pop
loope
push
add
ds
adc
imul
ret
loope
std
push
jns
sub
add
movsb
push
push
mov
ret
xchg
mov
out
adc
fcomps
mov
mov
je
inc
sub
jecxz
out
stos
icebp
mov
out
leave
aaa
mov
pop
mul
or
sbbl
sti
adc
xchg
test
push
pop
test
xchg
mov
mov
push
cmp
push
and
fimuls
jle
aaa
inc
adc
pop
jl
ret
test
out
nop
arpl
xchg
fistpl
stos
scas
das
xor
or
xchg
xor
pop
jno
aas
push
aam
test
adc
push
dec
out
cmpsl
ljmp
or
sub
mov
jmp
adc
push
in
or
push
push
mov
mov
push
shll
das
mov
push
outsl
sub
pop
pop
adc
sub
pop
iret
mov
ret
int3
sbb
jle
mov
loope
cmp
and
test
sub
cli
cmpsb
push
ret
and
cmpsl
sahf
shl
dec
testl
lret
pusha
imul
inc
scas
pop
sti
cmpsl
inc
mov
mov
es
push
xor
arpl
shll
outsb
das
mov
sbb
mov
fsubs
imul
enter
sub
push
jmp
or
push
dec
decl
notl
xchg
sbb
or
adc
cltd
jae
jge
movsb
inc
pushf
ja
jle
cmp
sub
pop
in
mov
mov
cs
push
call
sbb
enter
inc
xchg
fsubl
mov
dec
or
mov
or
dec
insb
mov
push
mov
dec
inc
mov
sbb
xor
les
adc
add
das
pop
pusha
adc
fistpll
cmpsb
push
xchg
mov
push
pop
mov
dec
cmp
add
pop
in
and
in
sbb
and
xchg
push
mov
lds
or
sub
dec
push
test
sbb
xchg
test
cwtl
jmp
pop
push
insl
mov
mov
popa
fidivrl
jae
xor
cld
mov
jl
push
jp
pop
mov
cmpl
js
jmp
in
ja
ret
mov
ds
ror
rol
and
jne
jmp
out
push
push
mov
nop
and
ss
test
sbb
sbb
int3
mov
sbb
insb
andl
repz
xchg
shrl
adc
iret
mov
mov
jbe
cs
out
mov
mov
cwtl
cmp
adcb
mov
es
rcrl
outsl
jne
or
push
push
mov
lret
dec
mov
gs
cmp
and
jmp
insl
mov
pop
imul
add
movsl
xor
in
pushf
pop
fidivrs
jecxz
mov
test
daa
cli
push
jmp
data16
adc
shl
fstpl
hlt
push
je
das
pop
pop
ss
mov
mov
stos
push
cmpsl
pop
and
sbb
xor
and
aas
dec
dec
test
imul
cmp
mov
xchg
in
or
pop
dec
mov
aaa
out
and
mov
jne
add
and
xor
out
mov
pop
inc
outsb
cmp
aam
cltd
xchg
adc
mul
loop
push
lcall
fldt
lret
mov
enter
stc
out
mov
mov
and
xlat
push
xor
sub
int
imul
ss
sbb
inc
in
cmp
push
mov
mov
ja
push
call
jbe
testl
cwtl
jle
je
jns
xchg
jbe
roll
fwait
outsl
hlt
idivl
and
push
mulb
add
sbb
push
scas
out
scas
rcrl
hlt
mov
lods
movsb
jmp
jge
and
dec
pushf
xchg
and
mov
roll
aaa
mov
mov
push
dec
xor
hlt
inc
mov
sbb
push
sarl
mov
nop
dec
testl
test
cmp
aaa
add
push
or
sub
jmp
and
in
icebp
sbb
addr16
shrb
jp
dec
adc
hlt
inc
cmpsb
jb
push
ja
arpl
jne
jp
data16
loopne
mov
mov
xchg
add
mov
out
loopne
sub
cwtl
or
pop
sub
mov
aas
fs
sub
loope
mov
popa
out
iret
inc
fnsave
cli
and
and
mov
leave
imul
shrb
popa
add
push
outsb
mov
faddp
add
push
leave
pushf
flds
pop
pop
push
or
es
sub
push
stc
ficoms
test
imul
and
jp
mov
arpl
push
sar
sub
and
jp
cmp
js
pusha
loop
sub
pop
mov
mov
fisubl
imul
pusha
pop
out
xchg
frstor
xor
adc
out
inc
mov
xchg
enter
cli
mov
xor
outsb
frstor
push
inc
jb
adc
mov
fwait
xcrypt-ofb
cmpsl
jmp
enter
mov
sbb
test
fmulp
and
pop
loopne
jmp
into
jl
and
cmpsb
gs
call
test
stos
cmp
sbb
popa
imul
pop
js
mov
jbe
jae
repz
hlt
test
jl
mov
les
push
dec
ficoml
sar
lods
dec
and
mov
movsb
xchg
or
iret
fdivl
ljmp
cmpb
push
ja
jns
insb
andl
shll
xchg
cld
mov
sbb
out
fldenv
cs
loope
test
mov
test
test
outsl
cmp
dec
sahf
sbb
sbb
pop
stos
or
sbb
mov
push
cld
loope
and
inc
cli
adc
add
dec
lahf
enter
mov
fucomp
or
mov
xlat
test
sbb
cs
inc
jbe
call
movb
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
pop
jo
fwait
pop
cmp
orl
push
rcll
bound
sbb
mov
or
das
movsb
inc
sbb
dec
testb
cmc
xchg
shrb
adc
mov
test
jp
nop
pop
test
mov
jno
stos
in
xchg
rcr
mov
dec
push
notl
push
mov
fwait
clc
or
adcb
push
ret
push
dec
popa
jecxz
adc
mov
adc
or
cmp
sbb
mov
insl
add
in
addps
addr16
xor
pop
dec
xchg
into
xor
cmovl
rclb
aaa
xor
mov
int
imul
clc
faddl
inc
out
testl
pop
or
push
xchg
es
test
test
dec
cltd
div
pop
jae
mov
cmpl
inc
pop
xor
lret
mov
ljmp
mov
scas
adcl
ljmp
sbb
sbb
cmp
lret
mov
dec
inc
inc
cmp
push
cmc
or
jle
sub
hlt
call
sbb
or
lahf
xchg
addr16
ljmp
rcrb
test
xchg
sub
fsubp
cmp
inc
push
jno
ljmp
aaa
sub
sbb
adc
sarl
mov
xor
inc
test
frstor
push
adc
pop
mov
insl
dec
movsb
scas
cmp
inc
and
xchg
es
sbb
xchg
jp
mov
pop
daa
es
sbb
imul
mov
pop
and
fistps
mov
cltd
adc
pop
aaa
cmpsl
cwtl
jg
cmp
lret
or
xlat
mov
mov
sbb
pop
lds
mov
xchg
sbb
test
mov
and
mov
inc
fcoml
sub
mov
and
jg
cmpb
add
push
inc
xchg
inc
push
scas
cmp
into
add
cltd
dec
ss
or
dec
lods
dec
jle
adc
int3
dec
push
mov
or
push
cwtl
dec
xchg
push
roll
cltd
jge
fdivl
jno
jne
pop
jp
xchg
stc
push
and
pop
and
insb
lcall
sbb
xchg
push
verr
pop
mov
mov
fistpll
mov
pop
mov
cmp
mov
lds
int3
mov
pop
add
bound
sbb
mov
xor
and
fstps
in
pusha
es
jo
or
jb
inc
js
or
sub
outsb
popa
paddsb
out
sub
popf
insb
lds
xchg
ja
add
loopne
in
xor
inc
pop
out
fldcw
out
mov
cld
fcomip
add
rcr
cs
into
mov
cwtl
add
repnz
jne
mov
mov
jp
mov
aad
cmc
xchg
lds
fdivs
inc
inc
cmp
std
icebp
movsb
test
xlat
inc
repnz
shlb
int3
sub
and
mov
push
aam
sub
cmpl
jge
int3
adcb
das
or
or
adc
mov
and
and
lret
cmp
jmp
lret
adc
fsts
lds
xchg
mov
lds
frstor
push
add
fwait
xchg
or
adc
lods
test
sub
int3
jp
jbe
add
imul
cli
mov
push
cmc
jns
cmc
cmp
xor
cmp
cmpsl
jns
xchg
push
dec
add
sub
xor
jno
and
jmp
add
mov
sbbb
data16
jmp
lea
pop
hlt
mov
pushf
mov
test
sbb
leave
xchg
push
test
xchg
imul
ret
jmp
pcmpgtb
mov
pop
mov
cli
pop
outsb
hlt
dec
arpl
out
je
xor
data16
cmp
and
es
mov
mov
cli
mov
lret
and
mov
out
xchg
cs
sub
add
push
lret
test
std
mov
mov
dec
add
adc
xchg
jl
mov
xchg
cmpsl
enter
daa
mov
lret
dec
bound
pusha
mov
jecxz
imul
jg
adc
lahf
popa
xor
leave
cmp
test
mov
adc
test
push
or
aam
mov
lahf
lret
pop
popa
sub
das
mov
sub
xor
jmp
adc
add
jp
push
dec
add
dec
mov
bound
cwtl
xchg
mov
jo
out
push
clc
add
fdivs
ds
fstl
fwait
les
popf
push
stos
aas
outsl
dec
orl
adc
fisttpl
cld
ficompl
cmp
xor
pop
aaa
dec
scas
xchg
pop
cmp
push
push
insb
mov
pop
js
ljmp
pop
sbb
cld
push
dec
add
push
mov
stos
and
sub
cmp
xor
enter
xor
cmc
roll
sub
pop
jle
cvtpd2pi
fists
mov
test
scas
adc
cmpxchg
scas
shlb
loop
push
mov
and
mov
add
lea
enter
in
push
lret
in
push
pop
fiadds
mov
in
fstpl
or
or
pusha
and
add
stos
cmp
shl
push
jne
push
out
pop
dec
pop
push
mov
pop
push
cmc
ret
sbb
pusha
mov
dec
roll
negb
jae
jns
xor
movsl
adc
push
sti
pop
xchg
push
or
or
cmpsb
imul
jno
or
sbb
leave
add
pop
icebp
fisubrl
sub
jb
cmc
stc
aas
pop
popf
lods
cs
sbb
pop
dec
sbb
das
stc
dec
cmp
pop
jmp
fdivrl
add
xchg
inc
rorb
icebp
jbe
enter
mov
jno
insl
pop
cmp
negb
sbb
xchg
dec
mov
jmp
mov
test
adc
mov
mov
mov
gs
es
cli
cltd
aaa
in
dec
add
scas
mov
cld
and
jl
pop
out
ret
ret
and
and
add
pop
ret
inc
push
clc
mov
mov
test
out
sbb
ret
mov
orl
mov
or
dec
mov
mov
or
cltd
pusha
loop
and
das
fdivrs
fs
imulb
js
jo
rcll
lahf
idivb
push
nop
icebp
jle
ret
out
jno
sahf
inc
push
pop
push
iret
inc
aaa
arpl
movsl
clc
add
out
rolb
cld
pop
push
mov
mov
mov
je
add
inc
lock
cmp
mov
adc
mov
testb
pushf
stos
sub
jbe
xchg
scas
push
push
jo
sti
jne
testl
imul
jle
nop
pusha
ja
pusha
jg
jno
adc
inc
inc
adc
or
fsubrs
pop
mov
fwait
add
push
sub
and
cmp
popa
pop
mov
in
pop
test
arpl
mov
fcoms
mov
cmpsb
sub
or
incl
arpl
or
mov
imul
pop
stc
mov
jbe
jnp
mov
outsl
cmpsb
mov
movsl
pop
outsl
movsb
pop
sbb
sbb
mov
sti
out
push
pop
xor
mov
fwait
cmc
dec
imul
in
inc
mov
hlt
sub
jle
mov
lock
mov
cwtl
and
lods
mov
inc
mov
push
fcmove
imul
in
mov
mov
adc
fstps
dec
xchg
psubd
push
jae
aaa
pop
ret
call
stos
test
inc
or
xlat
loopne
adc
arpl
mov
daa
aam
sbb
pop
or
xor
aas
or
fnstsw
cmp
loopne
jb
ss
lods
pop
punpckhwd
jae
lods
pusha
xor
dec
icebp
sub
jl
add
out
mov
xchg
sbb
xchg
mov
mov
push
push
xor
iret
lret
out
int
pop
mov
xchg
loope
inc
outsl
add
jmp
outsb
lds
cmp
inc
lock
movsb
mov
adcb
xor
mov
jge
mov
lahf
xor
cld
inc
sbb
cmp
dec
jl
hlt
add
and
cmpsl
insb
cmc
in
jne
push
jge
aad
aad
data16
inc
add
xor
sub
mov
mov
xchg
fsub
pop
sub
fistps
out
cltd
in
rolb
mov
add
dec
out
sbb
push
js,pn
mov
sub
out
enter
repz
pushf
inc
addr16
push
stos
push
insl
fists
outsl
movsl
sbbl
roll
mov
dec
bound
popa
dec
adc
out
lcall
data16
adc
adc
push
notb
fidivrs
lcall
mov
int
mov
lret
push
pop
mov
cltd
cltd
fstpt
or
stos
std
shl
adc
inc
dec
sbb
inc
or
fstpl
fists
movsb
adc
aam
xchg
pushf
lods
jmp
pop
repnz
lahf
jns
out
xchg
mov
mov
std
imul
sbb
mov
sub
or
aas
cmpl
cmp
in
adc
mov
jle
xchg
or
push
popa
pop
scas
stos
and
sahf
inc
cmpsb
leave
dec
pop
sbbl
dec
push
pop
or
lret
mov
bound
lods
mov
add
lds
push
inc
xchg
jmp
out
add
imul
push
inc
jns
and
xchg
das
mov
imul
call
cltd
mov
addr16
daa
test
nop
mov
mov
mov
push
aam
test
test
mov
xchg
inc
insl
jae
aaa
movsb
xchg
movsl
stc
push
dec
sbb
inc
sub
dec
jle
xor
cwtl
arpl
lea
mov
stos
jnp
inc
and
pop
test
xchg
dec
bound
sbb
aas
cmpsb
push
cmp
stos
xor
mov
mov
stos
stc
xor
jecxz
push
push
mov
stos
lds
adc
shrb
in
cmc
pop
pop
cmp
adc
in
enter
jns
pop
mov
ljmp
and
fwait
jg
aaa
sbb
mov
pop
add
dec
fadds
jecxz
adc
les
jp
adc
cmp
pop
mov
ret
sahf
xchg
stos
dec
lret
mov
sbb
lret
pushf
push
adc
xchg
fs
lea
cld
movsb
shrb
jp
jb
bound
sbb
enter
jp
es
xor
popf
dec
in
ret
sub
cmp
enter
aad
in
adcl
xchg
loopne
jle
idivb
sbb
pop
ja
in
lea
pop
pop
push
lods
mov
es
lds
cmp
js
jae
sub
test
pusha
out
sbb
mov
enter
js
pop
add
int
cmp
push
insl
sbb
cwtl
adc
lcall
push
fiaddl
jg
andl
mov
dec
out
ss
dec
outsb
sub
ja
jp
inc
mov
jp
jno
jl
outsb
sbb
sbb
xor
mov
adc
cmp
and
aaa
test
popa
push
sahf
mov
rorb
mov
sbb
push
loop
popf
xchg
inc
fldz
int
dec
push
mov
nop
pop
lds
decb
or
or
es
sahf
push
cmp
ret
pop
int
sbb
dec
dec
cs
loope
cmp
mov
aaa
add
pop
pop
xchg
and
jmp
es
jmp
mov
mov
inc
aaa
dec
dec
cld
ror
imul
outsb
or
jo
movsb
cmc
fldenv
loopne
mov
xor
lret
xchg
shr
push
ss
add
aad
fsts
pop
mov
cmp
dec
or
in
cmp
bound
outsl
mov
iret
jecxz
or
jge
mov
dec
push
mov
cld
rcrl
out
inc
jo
mov
inc
lock
cmpsb
push
dec
stos
in
mov
ret
in
sub
js
dec
outsb
in
inc
add
into
xchg
mov
das
mov
dec
testl
inc
arpl
icebp
vpaddusb
inc
loopne
ret
mov
and
add
inc
cwtl
lds
out
out
mov
popl
and
arpl
sub
mov
jmp
cwtl
jle
pop
jno
ss
pop
sahf
jmp
jno
flds
lds
sbbb
adc
add
cmp
xor
mov
cs
lret
sti
sub
clc
aam
mov
leave
repz
mov
repnz
xchg
push
pushf
lret
add
mov
inc
cmp
fcmove
loope
push
jp
cmpsl
hlt
pop
push
sbb
das
push
add
push
lds
fsts
dec
xchg
sti
inc
loop
mov
fs
mov
xor
jno
xchg
adc
sbb
sub
adc
xchg
loop
push
and
fdivl
add
jae
arpl
jno
adc
jo
ds
imul
xchg
stos
jne
in
pop
inc
jnp
lret
dec
dec
icebp
mov
adc
sbb
repz
sti
arpl
js
or
and
push
xchg
inc
lods
pop
sub
cmp
mov
xlat
ss
and
cmc
cmpb
in
mov
insl
jnp
fldt
sub
and
pop
sub
sub
sti
add
jmp
mov
and
mov
cmp
int
cld
notl
bound
sub
fisubrl
dec
sbb
daa
pop
jno
in
adcb
leave
cmp
xor
mov
sub
fstpl
stos
jg
jge
adc
jo
js
pop
mov
push
in
dec
andl
jmp
bound
pop
rcrl
outsl
jecxz
cmpsb
xchg
push
ret
mov
xchg
aad
mov
pop
xor
lods
or
stc
fidivrl
mov
daa
sub
mov
and
xchg
or
add
mov
dec
mov
test
rorl
subb
pop
push
mov
aas
adc
adc
insl
sti
in
jmp
lcall
and
mov
es
mov
add
pop
aaa
js
jecxz
cmp
mov
sahf
xchg
pop
push
enter
xlat
sub
cmpsb
add
push
inc
push
test
pop
cld
mov
js
mov
repnz
cs
out
cmp
push
setg
scas
je
xor
fdivrs
lods
call
inc
popf
scas
icebp
sub
push
in
int3
aas
xor
inc
incl
insb
ficomps
ljmp
and
or
jnp
xor
orl
les
jg
push
xor
add
vcvtdq2pd
ret
js
inc
imul
sbb
jp
mov
sub
jg
sbb
cs
ja
mov
clc
sub
js
add
sub
sti
les
add
ss
pop
add
or
inc
or
push
fld
jbe
ror
ljmp
or
mov
insl
xlat
push
lahf
mov
aad
jbe
cmc
incb
and
mov
jns
adc
cli
out
mov
das
dec
mov
imul
mov
mov
mov
mov
push
xor
aam
aas
cmp
repz
insb
bound
push
mov
push
pushf
push
inc
cltd
imul
out
adc
clc
adc
xor
mov
pop
repz
addr16
dec
fldcw
jnp
notl
adc
into
insl
mov
out
aas
lahf
cltd
dec
ret
mov
std
and
dec
xchg
mov
sub
enter
movsb
rcrb
xchg
pop
js
insb
les
jb
sahf
dec
jnp
jmp
inc
cmp
pop
pop
sbb
fsubrl
xchg
sbb
stc
mov
xchg
pop
jmp
add
xlat
xchg
test
sub
clc
sub
cmp
pop
cmp
fldl
mov
sbb
jns
hlt
jle
push
jnp
pop
and
imul
cmp
adc
fiaddl
stos
popa
andb
adc
in
mov
out
test
pop
sbb
xchg
mov
inc
inc
int
fistl
ja
inc
cmp
adc
leave
inc
lds
sub
xchg
mov
stos
fdivs
leave
xor
lret
testb
movsb
cmp
dec
movsb
mov
sbb
pop
jp
fsubr
daa
dec
sahf
movsb
adc
test
or
push
adc
cmp
insl
xorl
adc
dec
lahf
add
fwait
sub
fdivs
push
mov
push
add
sarb
test
lock
jp
xchg
insb
mov
pop
les
mov
out
or
xor
bound
repz
sub
leave
inc
cmp
mov
sti
movsl
in
popa
stc
aad
jbe
inc
inc
cld
xor
ja
dec
test
mov
adc
or
adc
arpl
mov
ret
ljmp
addl
jne
test
cmp
xchg
bound
and
loop
jb
sbb
push
add
das
mov
cs
jg
movsb
push
mov
jae
fs
out
fimull
mov
ret
js
mov
ds
dec
out
push
roll
adc
mov
jo
jg
aad
idivl
out
pushl
mov
xor
push
push
xchg
jb
movsb
pop
jae
cs
mov
push
jmp
das
xor
fistpl
xor
jne
ljmp
sub
mov
xchg
xchg
in
push
or
mov
and
lods
out
dec
loopne
or
inc
inc
mov
fnstenv
jae
fisttps
fimuls
mov
push
push
adc
movsl
xchg
into
iret
pop
push
sub
ja
and
scas
xchg
aaa
jge
sub
mov
jnp
ja
sub
mov
mov
out
mov
xchg
insb
mov
loop
adc
add
sbb
push
mov
ficoms
mov
and
xor
scas
push
jae
cmpsl
jb
dec
mov
and
out
pushf
jmp
popf
cld
in
jl
sbb
nop
add
pusha
jo
jg
lret
js
test
inc
dec
out
stc
fimuls
aad
in
mov
leave
sbb
bound
jne
gs
push
mov
and
roll
lret
and
pop
aaa
faddl
pop
out
outsl
push
xor
sub
adc
std
orb
les
and
setge
lret
lods
xchg
xchg
cmp
inc
jo
or
rorl
cli
mov
incl
test
cmp
out
iret
clc
dec
cld
mov
out
movsl
adc
mov
adc
mov
pop
gs
pop
jl
lods
test
fs
mov
lahf
call
push
pusha
das
std
rcll
cmp
out
sbb
pop
mov
add
mov
incl
add
cltd
stos
inc
mov
mov
jno
xchg
in
clc
cmp
call
lret
test
shlb
pop
loope
into
int
mov
aam
movb
rorw
pop
dec
rolb
stc
lret
addr16
idivb
inc
mov
addl
xchg
mov
mov
out
stc
lods
mov
cmp
addb
lods
scas
or
xor
rcll
rcr
xchg
loop
ds
cwtl
xor
jb
inc
push
and
mov
cld
xchg
movb
mov
and
mov
ss
xchg
dec
inc
leave
cmpsl
fdivrs
mov
mov
test
dec
or
cmpsb
cs
cmp
sub
sbb
pusha
lret
mov
sbb
test
je
jl
lock
sbb
dec
jo
mov
pop
ffree
adc
pop
cmp
inc
push
push
out
mov
inc
jle
scas
mov
cs
mov
inc
adc
pop
inc
ds
cltd
ss
jmp
add
mov
aas
lahf
fisubrl
mov
cmpsl
fwait
push
into
movsl
xor
inc
sbbl
push
scas
xchg
inc
inc
bound
lds
fldt
xor
bound
mov
pop
data16
adc
sarb
ret
lahf
pop
push
sub
aaa
push
sub
lea
push
movl
leave
sbb
xchg
sarb
jb
jo
das
sbb
outsb
xlat
mov
push
xchg
loope
sbb
loop
sahf
mov
loop
repnz
ret
rolb
std
xor
orl
mov
dec
xchg
roll
fisttps
dec
and
dec
dec
es
pop
adc
jnp
mov
cmpsb
xor
filds
sub
fmuls
cmp
dec
out
mov
push
sbb
hlt
in
mov
inc
sub
std
and
dec
sub
sub
sub
fcmovnbe
cmp
xchg
mov
fdivl
daa
cmpsl
hlt
mov
xor
ss
pushf
dec
mov
jmp
jp
mov
ljmp
out
mov
xchg
fwait
les
lods
cmp
push
or
push
pop
adc
in
xlat
sbb
filds
mov
cmp
sahf
arpl
inc
push
rorb
les
fsts
dec
cmpsb
gs
adcb
and
imul
jmp
push
or
push
dec
lcall
jb
sahf
pop
repnz
or
aam
lahf
mov
mov
dec
nop
scas
iret
jno
sub
push
bound
sti
pushf
sbb
dec
pop
and
mov
jb
mov
xor
movsl
addl
cmpsl
je
pushf
mov
cmpsb
lret
mov
shll
cmp
inc
in
movsl
push
imul
and
sbb
std
pop
addl
rcr
test
mov
mov
fs
pop
outsl
test
mov
adc
mov
div
sbb
fbstp
lret
xor
inc
adc
in
in
mov
mov
das
out
xchg
test
nop
cmpsb
pusha
add
stos
lcall
xchg
mov
sub
repz
imull
outsb
and
jl
fisttps
xchg
fstpl
jl
loopne
push
clc
mov
mov
lods
jne
js
daa
or
and
sbb
inc
adc
cwtl
out
sahf
or
test
pop
ret
jae
cwtl
in
ret
jl
bound
cs
inc
jecxz
push
stc
push
adc
xchg
movsb
cli
scas
inc
inc
xchg
sub
cmp
mov
sbb
bound
aaa
sti
addr16
pop
mov
mov
outsl
ljmp
add
xorb
dec
fsubrl
and
lods
ss
push
add
insl
sbbl
inc
adc
pop
cmc
pop
loopne
mov
or
mov
jnp
pop
xchg
push
insl
daa
ret
push
ret
stc
pop
sahf
push
and
cmpsb
cmp
mov
add
dec
inc
push
in
lock
add
pop
and
jmp
cltd
inc
mov
adc
inc
int3
icebp
in
in
adc
repnz
test
out
sub
or
dec
movsl
loop
les
imul
cmp
add
pop
lods
xor
shlb
inc
xchg
inc
push
in
stc
mov
jns
jbe
fs
inc
push
out
test
enter
ret
rorl
add
pusha
cltd
adc
fcomp
pusha
xchg
inc
shlb
repnz
jle
movsb
lock
cmp
xor
dec
or
mov
imul
hlt
ds
mov
sbb
out
cmp
in
hlt
rclb
mov
cmp
shll
push
ds
jnp
popf
add
cs
in
push
and
cmpsb
jg
and
adc
jp
imul
mov
ja
sub
add
je
jmp
xchg
jnp
test
xchg
and
xchg
dec
dec
mov
mov
xchg
fisttpll
ljmp
jne
icebp
sbb
cmpsl
mov
pop
loope
int3
sub
mov
fs
and
nop
int3
xchg
add
and
sbb
mov
lea
mov
push
jae
nop
add
shrl
imul
rorl
sub
sbb
xlat
mov
push
and
test
and
es
js
mov
dec
sahf
inc
pop
dec
sub
jae
testb
fisubrs
jae
pop
add
mov
ret
jns
jns
dec
loope
loope
fnsave
jb
add
mov
test
push
cmp
pop
test
dec
mov
mov
sbb
cmc
es
call
mov
adc
sub
inc
sbb
jnp
test
js
sahf
lret
lcall
lds
or
mov
int3
cltd
cmc
mov
hlt
fs
adc
pop
add
fisttpll
jmp
cmpxchg8b
mov
adc
or
add
mov
mov
lret
dec
testb
mov
jns
cmp
aam
fisubs
in
adc
dec
push
jbe
adc
sahf
cmp
adc
popf
cmp
sub
add
xor
cltd
xchg
pop
lret
fdivrl
mov
inc
stos
inc
dec
mov
aas
out
inc
xor
sarb
lods
xchg
sbb
pop
aas
int
leave
fidivs
mov
cmp
cmc
add
mov
loop
outsl
dec
movsb
daa
rcrb
inc
xchg
roll
ret
jp
inc
push
mov
into
hlt
or
aam
add
xchg
out
jmp
push
adcl
pusha
cmpsl
int3
test
das
mov
ret
lock
int3
sbb
orb
push
pop
mov
cltd
fidivrl
test
jg
inc
in
pop
and
repnz
cmp
fadd
pop
mov
in
sbb
or
xchg
cmp
andl
mov
pop
add
mov
in
pop
push
lock
mov
inc
lock
mov
inc
mov
dec
pop
jne
movsl
stc
mov
push
mov
mov
xor
mov
fmuls
mov
iret
mov
jae
cmp
pop
loope
xchg
pop
ret
cmpsb
pushf
pop
and
jl
pop
jo
jns
adc
mov
sub
mov
mov
xlat
je
cmp
lret
mov
aam
mov
cmpsb
inc
inc
push
jle
pop
jle
out
jp
mov
cmp
sub
mov
jp
mov
push
mov
pop
mov
mov
sub
andl
sbb
add
pop
scas
popa
and
push
testl
repz
popf
or
mov
cmp
xchg
es
lods
add
jmp
sti
add
and
mov
subl
inc
pop
xlat
rcrb
add
and
lds
test
jg
and
jl
mov
jbe
int
add
popa
and
cmp
cwtl
outsl
ds
and
popa
jo
xchg
mov
add
inc
jl
test
or
cs
cmc
mov
push
xchg
and
fwait
sub
fstl
push
iret
in
cmp
fwait
push
sbb
iret
push
popa
push
rol
mov
out
rolb
mov
loopne
cltd
mov
shrb
aam
jne
adc
add
xchg
push
cmp
jnp
xor
fldl2t
push
pop
dec
ret
and
popa
add
mov
pop
mov
jo
fldenv
jmp
mov
and
or
sub
lods
rorl
mov
shll
shlb
jo
xor
pop
out
test
push
cmp
pop
mull
pop
insb
jno
aad
mov
pusha
xorl
jg
iret
cwtl
repz
mov
popa
add
cwtl
inc
mov
aad
fs
hlt
cld
mov
outsl
out
mov
pop
cmp
push
push
adc
jno
adc
xor
into
cltd
mov
sahf
sbb
cmpb
mov
lds
xchg
push
pusha
mov
mov
jb
mov
in
int3
enter
mov
and
pop
sub
fwait
movsl
test
out
jne
das
rcll
and
insl
mov
push
dec
rorb
push
add
xchg
jne
push
cmp
nop
lods
jle
lret
dec
mov
adc
add
add
rcll
sbb
shlb
andl
mov
cmp
sar
in
mov
jge
mov
loope
jne
movhps
fnstenv
push
inc
bound
or
outsb
adc
negb
add
decl
loop
scas
imul
insb
push
mov
add
daa
push
les
xchg
xchg
sarl
jne
bound
sub
sarb
rcll
jnp
lahf
jge
loop
sbb
cmp
xorl
lods
scas
fadds
xor
sahf
jae
push
shll
lods
pop
mov
fbld
popf
dec
sbbl
cmc
adc
and
stc
out
test
mov
cld
add
in
or
out
fcomi
insl
mov
push
pop
std
adc
std
dec
and
push
test
repz
cs
lock
lods
add
cli
jne
lods
cmp
movsb
or
xchg
rorb
lods
xchg
fucomi
rclb
jb
cwtl
out
in
mov
push
adc
int
mov
sub
cwtl
cltd
lahf
sub
aad
push
ja
in
ffreep
mov
mov
pusha
orb
xchg
hlt
pop
xor
sub
test
mov
es
lretw
jae
pop
cmp
xor
lret
jmp
ds
into
sub
shrb
or
xor
stos
fisttps
adc
daa
pushl
mov
sarl
mov
sub
xchg
push
add
xchg
aam
pop
inc
push
out
shll
mov
sar
mov
jecxz
insb
adcb
and
imul
mov
push
jne
in
or
inc
cmp
add
repz
popa
in
inc
dec
outsb
stos
enter
rcll
and
test
push
in
and
fadd
xchg
ds
insl
xchg
in
sbb
fistl
pop
mov
mov
push
mov
inc
jno
lahf
pop
addb
and
rcrl
ja
and
inc
out
inc
push
test
inc
shl
mov
ret
pushf
fstpl
and
loop
rorb
adc
inc
jne
into
xor
sti
push
xchg
addb
loop
repz
jp
adc
adc
test
pop
movsb
sub
add
push
aad
mov
lret
out
mov
js
xor
sub
lock
sbb
adc
test
insb
jnp
iret
cmp
decl
shll
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
movsb
xor
call
or
jp
cmp
cld
jge
xlat
inc
rcll
mov
cld
fyl2x
sub
pop
icebp
iret
data16
jge
je
dec
dec
cmp
out
cmc
or
mov
mov
sub
mov
ds
mov
js
mov
or
jp
pop
nop
jne
xor
push
add
in
xchg
std
aaa
imul
sub
jmp
fcomip
add
sahf
xchg
popa
pop
xor
mov
ds
pushf
insl
pop
fisubs
out
fsts
push
xchg
call
mov
mov
std
cmp
add
mov
fcompl
mov
fildl
mov
in
movsl
pop
jmp
clc
mov
enter
imul
ljmp
or
dec
cltd
imul
arpl
fistps
lods
inc
xorb
jne
mov
jecxz
xchg
fsubl
adc
jns
dec
fcoml
mull
cmp
lret
and
mov
adcl
and
into
rcrb
outsb
scas
adc
and
out
add
popa
cmc
popf
cli
cs
xor
leave
pop
cmp
test
push
outsb
lret
nop
clc
rol
shr
out
xor
loope
clc
dec
pop
jb
enter
inc
xchg
aam
orl
mov
jl
enter
add
add
enter
mov
sbb
cmp
jb
fs
negb
mov
loop
imul
push
loop
xor
inc
in
mov
mov
jp
test
nop
cmp
push
loop
xchg
xchg
mov
lea
int3
dec
test
cmp
add
std
cmp
rcrl
in
cmp
mov
push
xor
test
stos
adc
or
inc
mov
into
mov
je
flds
in
into
out
mov
pop
lahf
jg
pop
in
or
mov
iret
xchg
fsubrs
movsl
loop
aad
push
cs
rcrl
fcomps
std
inc
int
xlat
xor
sbb
out
add
outsb
pusha
in
mov
sub
push
mov
into
imul
loop
repnz
icebp
push
gs
bound
or
sbb
sbb
and
jo
cmp
aad
add
call
ret
cld
je
or
incl
cmp
mov
or
int
mov
push
add
adc
xorl
aad
push
cmp
mov
aas
jecxz
pushf
sub
xor
mov
fcmovnu
mov
mov
ror
ficomps
mov
sbb
and
xchg
pop
cld
pop
sbb
loope
add
cmp
jmp
xlat
or
dec
add
dec
insl
and
inc
mov
fnstenv
cltd
xor
jg
shrb
clc
int3
lahf
push
jge
aam
pop
lret
loop
xchg
xchg
pop
in
nop
dec
push
cmpb
aam
pop
cmp
and
jo
push
or
push
outsl
psubd
pop
mov
and
fld
sbb
call
inc
mov
mov
int
sbb
cmc
add
dec
cmp
lcall
aas
lods
adc
mov
mov
scas
lea
pop
test
mov
push
xchg
cltd
inc
rol
xlat
jno
mov
lahf
xlat
inc
js
push
cmpsb
push
shll
xchg
jno
sub
mov
pop
lds
cmp
mov
sbb
fnstsw
dec
pushf
lods
xlat
jo
mov
pop
mov
imul
and
stc
cs
jns
mov
sub
xchg
or
or
adc
push
imul
jae
mov
sub
ljmp
cmp
pop
popa
mov
xor
lcall
mov
leave
lret
neg
sbb
cmp
xchg
dec
dec
cmp
jns
dec
jno
inc
adc
xchg
out
xor
adc
sahf
and
mov
out
or
xchg
gs
fwait
mov
push
cwtl
cmp
cmpsl
prefetch
or
ja
iret
dec
leave
je
lret
mov
and
pop
adc
test
xor
ficoml
std
or
inc
lahf
sarb
hlt
xor
jnp
push
out
pop
xchg
ljmp
mov
mov
and
jge
xor
add
sbb
xchg
lret
and
jne
in
fcoml
dec
jo
popf
jnp
jp
add
pop
imull
mov
mov
mov
mov
add
mov
mov
aad
or
std
mov
stos
fdivs
cmp
xchg
fadds
pusha
ss
mov
mov
pop
mov
sub
xchg
sbb
sub
stos
push
dec
jle
push
mov
mov
pop
jg
int
ficomps
dec
test
popa
lea
sub
cld
add
sahf
int3
je
imul
imul
cld
xor
loop
fsubrp
or
push
in
movsb
inc
pop
rclb
push
mov
cmp
es
lahf
jns
fwait
hlt
or
sbb
push
test
mov
adc
sbb
jo
inc
sbb
mov
int
and
jno
enter
xor
pop
mov
jno
rorb
cmp
add
add
push
test
adc
xor
and
cmc
mov
sbb
js
dec
repz
stos
stos
jnp
lahf
jne
cmp
test
push
sbb
lds
jmp
sbb
add
fimuls
repz
mov
stos
es
sub
jb
das
xchg
popa
jg
cwtl
bound
fs
sub
push
std
in
test
leave
es
test
arpl
movb
leave
mov
int
stos
jle
fldenv
add
arpl
inc
or
xchg
pushl
pop
and
cltd
cld
mov
inc
into
insl
cltd
cmp
mov
dec
data16
lods
mov
jnp
jns
push
lahf
or
push
pusha
dec
xor
test
int
mov
and
movsl
adc
mov
rcl
std
loop
dec
jmp
les
push
cmp
test
stc
adc
inc
jno
in
cmc
test
scas
dec
out
mov
sbb
orb
pop
lods
daa
dec
or
push
je
testb
movsl
add
subb
popf
mov
or
scas
pusha
insb
mov
mov
mov
push
in
mov
out
outsb
pop
sub
mov
sahf
mov
ja
adc
push
xor
dec
dec
cmc
cmp
cmp
sbb
adc
xchg
out
or
and
outsb
jns
adc
or
xchg
sbb
in
leave
nop
push
ds
imul
cmpsl
dec
enter
jmp
iret
call
insl
jbe
jecxz
pop
in
idivb
popf
enter
movsl
sbb
lods
out
add
xchg
data16
in
bound
dec
movsl
adc
popa
xchg
inc
mov
int
fidivrs
loope
inc
adc
xor
inc
cmp
scas
sub
inc
dec
mov
sub
fwait
in
xchg
mov
aas
and
shrl
loop
cmp
fidivrl
popf
iret
cmpsb
inc
mov
pop
pushf
inc
gs
xor
xchg
inc
and
inc
clc
push
loope
insl
nop
pop
xchg
xchg
cmpl
xor
aam
cmp
je
mov
inc
jno
jno
jmp
add
frstor
xchg
sub
sub
jbe
pop
jmp
cmp
and
push
aam
add
push
dec
jnp
decl
fcmovu
or
add
ret
popa
sarb
loope
popf
loope
cli
xor
cli
fldenv
mov
sub
push
push
bnd
addr16
cltd
shll
ret
icebp
int3
xor
inc
xchg
mov
xchg
into
icebp
inc
popa
fdivrl
and
icebp
in
mov
bound
push
ljmp
pop
mov
sub
adc
fimuls
mov
fistps
ss
pop
and
rolb
scas
and
mov
addr16
xchg
cmpb
js
xlat
and
pop
cli
shlb
and
mov
jl
int3
add
pop
push
xor
outsl
enter
jmp
in
out
mov
aam
lea
mov
test
jmp
into
test
dec
cmp
clc
cwtl
sub
xchg
stos
repz
call
mov
repz
dec
in
aas
mov
ss
or
mov
push
cmp
jne
mov
nop
fs
mov
dec
push
es
pop
inc
nop
cwtl
sub
in
daa
test
cmc
mov
or
adc
inc
pop
xor
loopne
sti
sub
pop
pop
adc
shrb
das
test
pop
mov
jnp
dec
das
sub
and
fcmovnb
fisttps
xchg
sbb
push
mov
int
jo
and
inc
cltd
push
fs
out
xor
adc
push
out
fcmovnbe
cmc
call
vfnmsubpd
enter
lret
lret
je
xchg
pop
mov
addr16
mov
mov
pop
push
mov
icebp
dec
mov
push
push
jl
and
lcall
push
bound
out
jbe
push
and
dec
rcrb
push
or
inc
pop
dec
add
ret
sub
or
test
repnz
push
test
pop
inc
push
arpl
sbb
pushf
sub
ds
mov
aas
cmpsl
scas
add
push
sbb
cmp
dec
mov
into
stos
xor
xchg
lods
push
sbbb
mov
or
shlb
es
in
jg
sbb
ja
mov
loope
stc
cmp
ret
andb
outsl
ja
pop
xor
outsl
and
andl
call
sbb
js
mov
imul
push
xchg
out
jmp
xchg
mov
lds
xor
xor
sub
or
add
outsb
push
std
or
mov
lret
xchg
jae
xor
and
dec
inc
out
jle
mov
pusha
jae
adc
push
push
or
cwtl
sub
pop
cwtl
dec
and
shll
rcrb
xchg
mov
sbb
xchg
dec
xor
aam
movsb
movzwl
inc
mov
mov
add
fst
ret
cmp
sahf
jne
adc
adc
shr
clc
adc
xchg
into
inc
icebp
xor
and
frstor
sub
mov
imul
xchg
add
cmpsl
call
pmaddwd
cmp
sub
cmp
rorb
cmp
in
lcall
sub
lret
jnp
cs
adc
outsb
mov
cwtl
lcall
outsl
iret
push
cltd
xchg
cwtl
lods
cld
je
inc
sub
dec
flds
mov
psadbw
lret
pop
inc
mov
lock
or
lea
cmpsl
rorl
loop
push
inc
fmulp
or
movsl
insl
data16
fstl
int
add
lcall
mov
inc
les
adc
push
daa
in
enter
scas
ret
fucomip
and
jno
stc
ds
lcall
mov
push
push
push
fisubrs
mov
mov
inc
test
dec
inc
arpl
push
sbbl
or
testb
inc
cmp
add
inc
jg
add
cmpb
in
sbb
push
test
jno
jl
lods
insl
hlt
loop
shlb
std
and
xchg
push
xchg
lahf
imul
and
xor
dec
sbb
mov
or
mov
and
sbbl
fwait
insl
fwait
daa
jge
ljmp
jns
jae
push
fdivl
lods
stc
push
mov
movsb
inc
jb
inc
xchg
mov
jecxz
pusha
or
mov
jp
call
fwait
jle
push
test
inc
mov
adc
cmp
test
inc
iret
mov
jge
shlb
cmp
out
mov
outsl
cmp
inc
sub
xor
cmp
jmp
in
mov
xchg
mov
outsw
aam
jmp
fdivs
mov
pop
cmp
aaa
cmp
sahf
in
inc
scas
xchg
pop
stc
jns
into
xchg
inc
inc
flds
and
das
and
imul
jecxz
ds
or
cltd
jo
aas
es
stos
xchg
inc
in
cmp
sbb
shlb
dec
sar
and
inc
or
popf
out
repz
imulb
fidivs
js
stos
movsb
testb
hlt
mov
loopne
sbb
movsl
adc
rcrb
dec
and
cmpsb
push
jp
mov
cld
sub
cmc
ret
daa
cmp
nop
idivl
push
and
push
mov
subl
sbb
push
inc
cmpsl
lods
mov
ficoms
popf
cli
popa
jbe
xchg
and
jno
out
imul
add
test
fdivrl
std
insb
aad
addr16
pop
nop
inc
push
mov
stc
jb
pusha
cmpsl
fwait
adc
adc
jb
xor
pop
outsb
dec
sahf
cltd
int
xchg
xchg
xchg
pop
sbb
ret
int
mov
add
xchg
xor
outsb
cmpsl
add
and
daa
mov
sbbb
jle
inc
push
popf
movsl
jl
call
lcall
idivl
sbb
addb
leave
cmp
sub
push
cmc
les
push
xchg
cmp
lret
sbb
mov
or
pop
or
pop
adc
mov
mov
sub
ret
ljmp
mov
and
inc
sbb
enter
stc
clc
es
jo
mov
mov
stos
cmpsb
ret
cwtl
jp
andb
mov
dec
cmp
shll
repnz
gs
lahf
aad
ljmp
xchg
add
outsl
mov
mov
adc
pop
das
pop
lods
fiadds
popa
and
loopne
jecxz
imul
mov
sbb
push
int3
sbb
jae
out
jecxz
pop
sbb
sbbb
je
and
outsb
out
call
push
inc
cmpsl
fisttpll
xor
lcall
adc
out
fdivrl
cmpsb
push
loop
aaa
jge
cmpsb
les
sub
jg
test
sub
pop
decl
mov
mov
loope
lret
popf
mov
xchg
inc
mov
jmp
fs
push
mov
push
push
cmp
sub
outsb
shlb
out
aam
repz
mov
shl
lock
mov
push
mov
cmp
push
popf
push
test
xchg
lea
ja
pop
adc
popa
sahf
jmp
lahf
cmp
jnp
mov
and
pop
imul
jae
rcll
cmp
dec
mov
aad
pushf
adc
das
cmp
lods
push
and
sub
push
test
fwait
push
cwtl
or
mov
in
iret
push
lods
mov
mov
add
inc
iret
sbb
jge
adc
mov
cli
add
add
leave
fists
sub
pop
out
push
cmc
dec
cwtl
xlat
imulb
dec
subb
lds
jp
ljmp
mov
scas
add
jecxz
hlt
addr16
jp
in
mov
fs
push
repz
cmp
loopne
test
mov
js
in
mov
inc
xchg
mov
push
sub
daa
and
ds
mov
xor
and
lock
inc
pop
pop
lods
cltd
mov
xchg
in
repz
leave
push
les
jp
jno
mov
xor
push
xchg
add
hlt
je
cwtl
xor
test
ret
sbb
repz
pop
out
into
mov
push
scas
inc
pop
xchg
dec
outsb
test
arpl
ljmp
insl
jl
mov
adc
pop
fistl
fstps
cmp
cli
ljmp
mov
jnp
test
and
bswap
sbb
inc
sbb
jmp
lock
sub
xchg
push
ljmp
out
outsb
enter
jae
mov
mov
jl
das
inc
sti
sbb
aad
clc
xor
popa
divl
sbb
aas
rcrb
adc
push
gs
push
aad
sub
rclb
std
lods
jmp
daa
pusha
lock
and
jmp
mov
jb
in
mov
out
mov
pop
inc
test
test
hlt
call
loopne
or
ljmp
mov
iret
and
adc
mov
das
mov
dec
hlt
je
scas
scas
stos
inc
mov
jmp
jcxz
mov
adc
or
and
mov
jecxz
inc
pusha
ret
aam
fadds
sbb
push
ficoml
scas
cmp
adc
ret
cmc
sub
mov
data16
xchg
mov
and
dec
inc
adc
lea
jo
inc
mov
int
sbb
test
negb
push
movsl
adc
push
or
cwtl
sub
fwait
pop
test
pop
xchg
cwtl
out
das
pop
xchg
pop
leave
insb
push
xor
mov
fiaddl
cmp
xor
fdivrs
adc
lcall
push
lahf
adc
aad
and
jno
shll
mov
cmp
cmp
ret
imul
sub
int
repz
fadd
xchg
out
out
xchg
jp
jno
push
stos
popa
sbb
jbe
and
pop
dec
pop
mov
xchg
push
and
test
or
fs
adc
rcll
sbb
lahf
divb
in
add
mov
xor
cmp
mov
cmp
dec
jg
icebp
repnz
push
aas
push
ficomps
xchg
lods
cmc
adc
pop
sub
daa
sbb
iret
movb
xor
fisubs
dec
pop
or
xchg
imul
daa
cmp
jno
int3
mov
xor
out
jmp
cltd
shlb
std
pop
mov
pusha
enter
push
adc
stos
faddl
sub
mov
xorl
push
inc
leave
popf
sub
hlt
cltd
or
pushf
ret
test
testl
adc
sarb
mov
rolb
cli
jle
loop
push
sbb
push
mov
jmp
enter
js
inc
fwait
sub
jg
fldt
pop
inc
xchg
push
bound
inc
cli
inc
add
mov
in
xor
or
mov
nop
dec
imul
pop
inc
xlat
dec
push
pop
mov
push
mov
sbb
pop
xchg
aam
clc
test
inc
test
arpl
xchg
jecxz
push
cmp
movsl
and
cmpsl
xchg
adc
aam
sarb
inc
movsl
xorl
bound
cs
jnp
lcall
test
adc
movntps
xchg
aam
sbb
addr16
test
daa
sbb
dec
mov
fwait
or
mov
test
jbe
jg
std
lods
lock
lds
mov
aam
mov
adc
ja
pusha
lock
adc
shrb
or
inc
rcrl
sahf
push
lock
push
cwtl
jg
adc
lret
mov
cmp
in
mov
and
mov
and
xlat
dec
xchg
mov
ret
pop
mov
or
push
mov
popf
dec
fimull
or
aas
push
pop
xchg
aaa
add
ljmp
repnz
notl
test
popa
stos
das
lcall
pop
push
lods
inc
aad
rorb
jno
dec
andl
in
xchg
ret
xchg
dec
hlt
jae
stos
cltd
inc
imulb
repz
cmp
pop
and
lret
pop
pop
packssdw
imul
ret
inc
ss
fldenv
push
cli
in
push
dec
adc
or
pop
fs
lret
pop
cmc
sub
aaa
gs
lods
scas
push
jmp
inc
push
jp
pop
es
adc
sub
sbb
mov
lea
push
xchg
mov
lea
pop
xor
and
or
fnstsw
popa
cld
adc
repnz
mov
pop
cwtl
xor
fstpt
ret
stos
push
ficomps
outsb
lds
inc
xor
sub
xchg
adc
pop
push
stos
arpl
addr16
jmp
js
adc
aad
and
xor
jbe
add
stc
test
mov
pop
fidivrl
mov
mov
out
andl
xchg
arpl
cs
sub
test
cmp
jle
out
fcomip
out
outsb
lcall
test
jb
mov
or
jno
iret
shrl
ficompl
fnstenv
cli
pop
ljmp
xor
lret
adc
mov
xchg
fdivrl
imul
scas
inc
arpl
popf
lret
inc
stc
fmull
lods
cmp
scas
pop
rorl
repz
into
sub
pop
sbb
xchg
and
mov
inc
pop
sub
ljmp
inc
movsl
lret
test
cwtl
dec
repnz
xor
imul
mov
sti
push
js
jmp
mov
test
xor
jae
push
movb
loope
in
repz
dec
incb
fadds
aam
adc
shlb
pop
jo
addl
xlat
mov
arpl
mov
dec
int3
lcall
outsb
mov
repnz
xchg
fs
push
xchg
jg
mov
stos
mov
popf
fldt
xor
adc
jle
test
dec
jbe
pop
shll
mov
in
jecxz
jmp
push
or
aad
cmp
pop
outsl
cmc
stos
fs
enter
ret
aam
jae
mov
xor
pop
and
xchg
test
jns
adc
inc
cmpl
add
mov
and
aam
sub
mov
jns
adc
lret
pop
pop
adc
sbb
cmpsb
and
cwtl
nop
inc
stos
push
mov
cld
shrb
test
testb
jge
lahf
fstpl
int3
out
push
cltd
inc
clc
pop
dec
test
xchg
or
test
adc
fimuls
and
lock
inc
pop
pop
mov
adc
push
cld
pop
inc
scas
jbe
mov
test
gs
imul
jl
clc
repnz
mov
insb
pop
jecxz
in
or
dec
insl
sarb
adc
mov
arpl
dec
fildl
jmp
leave
adc
ja
ficoms
or
int3
pop
movsb
pop
adc
imul
mov
lret
pop
repnz
in
pop
add
ret
cmpsl
je
and
shl
xchg
shrb
enter
mov
sbb
pop
aam
fisubs
push
movsb
test
out
pusha
repz
in
lods
or
loopne
movsl
jecxz
sub
push
xor
popa
adc
out
lds
xchg
jp
stos
jae
mov
push
push
dec
push
push
jne
jae
sti
out
cwtl
mov
jecxz
jbe
shrd
icebp
test
stc
daa
mov
add
int3
sbb
arpl
push
stos
das
stos
add
lods
fiadds
lahf
inc
or
sahf
divb
mov
pop
repz
lock
sbb
addr16
mov
cs
sti
call
xsha1
cmpsb
lret
cmpb
or
jmp
lods
lock
pop
xchg
stos
and
rcrl
test
and
or
cltd
inc
mov
repz
ljmp
mov
scas
fwait
pop
sbb
sbb
xchg
fwait
out
jne
or
icebp
mov
xchg
and
lret
aaa
out
test
stc
repz
aam
shrb
sbb
or
adc
sub
pop
jnp
mov
or
dec
lret
mov
insb
mov
out
fidivrl
shl
add
test
add
pop
pop
stc
shll
sbb
sbb
push
jne
hlt
pop
pusha
daa
xchg
sar
mov
xchg
jb
inc
add
xor
xchg
pusha
or
mov
ja
ljmp
dec
push
lret
or
ret
cmp
cmp
jne
fdivl
add
lret
arpl
cli
sub
sub
in
les
xchg
add
js
cli
jo
sub
dec
xlat
sarb
pop
outsl
cmpsl
cmp
push
inc
mov
aas
pop
out
mov
mov
or
or
imul
xor
push
pop
das
stos
push
push
cmc
sub
sbb
push
int3
daa
dec
and
mov
lret
stos
es
xchg
aam
fwait
pop
and
xchg
daa
imul
cmp
popf
jno
mov
xor
lea
lret
pop
adc
fwait
sub
inc
xlat
add
jns
dec
jno
inc
adc
stc
hlt
lods
ja
jae
aas
subb
popa
cmpsl
inc
xor
xor
xchg
dec
test
inc
and
mov
mov
ds
pusha
imul
inc
cmpsb
mov
jle
dec
fdivrl
loopne
aas
add
ret
loopne
pusha
dec
push
cld
outsb
xchg
cmpsb
addr16
popf
not
xlat
fwait
sbb
sub
call
daa
in
and
loope
pop
fistl
sbb
add
xor
je
mov
mov
bound
ds
je
es
test
jmp
xor
cmp
jg
lret
cwtl
cmpsl
test
cmp
icebp
sub
inc
cmp
aaa
inc
or
adc
rol
icebp
or
add
or
mov
insl
daa
mov
repnz
sbb
push
incb
mov
or
mov
lret
sbb
sub
sub
inc
jae
loope
and
in
push
imul
mov
movsb
inc
add
mov
das
out
sub
adc
iret
adc
cmp
mov
xor
pop
aad
inc
xor
sbb
mov
pop
je
pop
pop
ret
les
or
sti
mov
inc
jg
loope
fsubs
and
mov
pop
dec
jbe
int3
adc
sub
cmp
test
lahf
inc
xchg
jmp
xchg
subb
call
repz
add
push
shr
loopne
mov
enter
pushf
push
cmp
por
sub
cltd
popf
adc
loop
xor
stc
in
push
and
lock
mov
fdivrs
and
jne
dec
fisttpl
ret
sbb
dec
and
dec
cmp
testb
sbb
std
lahf
addl
mov
fistpll
mov
mov
ret
sub
fstpl
mov
aas
or
imul
call
push
jle
xchg
imulb
pop
adc
sahf
lods
cs
and
pop
orb
movsb
dec
jns
jg
jns
push
and
fwait
dec
ss
notl
lds
sub
data16
movsl
ret
push
mov
pop
push
stc
xor
out
cmp
sub
inc
pop
mov
jmp
mov
pusha
divb
or
insb
mov
pop
add
andb
inc
xor
push
lods
lea
dec
aaa
mov
cmp
popa
sbb
jne
insl
jecxz
loopne
adc
inc
fwait
jg
gs
gs
jg
sub
xor
outsb
cmp
stos
lods
dec
push
mov
lea
fstps
dec
js
lds
and
mov
aaa
xchg
int3
insb
popw
or
xchg
hlt
fdivrl
xchg
lret
dec
dec
jle
add
data16
fnstcw
jmp
imul
vmread
repz
aas
xchg
in
cs
aam
push
divl
xchg
sub
dec
in
jne
or
lret
jae
sbb
xlat
pmulhuw
aad
xor
sarb
insl
push
jmp
hlt
add
mov
push
test
sbb
push
sti
jg
out
xchg
xchg
xor
pop
lret
xlat
jno,pn
sbb
or
xor
push
push
aas
mov
pushf
lods
lea
sbb
repz
pop
shll
mov
or
jg
mov
into
lea
and
dec
pushf
ficoms
ds
out
mov
adc
enter
and
lcall
xor
sarb
or
hlt
nop
cmp
mov
cmpsl
jl
dec
rorl
pusha
out
inc
push
inc
inc
ror
push
gs
rcrl
and
cmpb
icebp
cmpsl
add
cmp
add
sbb
push
pop
xchg
repnz
jo
pop
loope
mov
xchg
test
aaa
lock
addr16
sub
jmp
dec
jecxz
pop
lcall
shl
hlt
push
push
jmp
jae
scas
ja
push
hlt
shrl
jo
add
mov
gs
mov
adc
repnz
and
mov
mov
je
mov
iret
ficompl
loop
in
negl
xor
push
xchg
sbb
and
add
fisubrl
out
movsl
push
sbb
xor
das
insb
cmp
sbb
stc
ficoms
daa
cmp
dec
iret
mov
jg
cs
ret
in
mov
dec
push
fs
jno
jle
and
add
dec
fidivrl
cli
sub
jecxz
stos
dec
insl
adc
out
inc
ja
add
outsl
sub
dec
popf
loope
mov
push
out
push
test
pusha
testb
das
pop
ljmp
test
idivl
test
cmp
into
mov
push
loope
shrb
inc
dec
and
ljmp
mov
or
ret
push
enter
pop
mov
imul
cs
xor
mov
es
divl
add
addr16
and
fimuls
mov
xor
mov
dec
mov
out
sbb
mov
mov
xchg
aaa
repnz
mov
stc
outsb
xchg
bound
xchg
sahf
movsb
jno
repnz
popa
int
pop
leave
pop
push
shlb
fisttpl
mov
push
rolb
rcll
lds
in
fistpl
jmp
jbe
ldmxcsr
or
xor
jecxz
mov
cmp
loop
push
add
dec
xor
popa
xchg
jne
ss
xchg
enter
rcrb
sub
iret
loopne
mov
loop
inc
inc
lods
and
pusha
jb
pop
xlat
xor
out
and
xchg
in
jnp
or
xor
push
stos
bswap
shll
xchg
dec
adc
out
outsl
cld
mov
lds
fstl
mov
sub
push
or
addr16
bound
mov
ret
in
shl
ret
loope
and
out
and
sub
mov
mov
notb
pop
xor
repz
pop
mov
in
and
sub
inc
sub
out
cmp
cmp
adcb
xor
pop
push
iret
cs
ljmp
push
sbb
sbb
test
push
out
test
subb
outsl
pop
or
xlat
test
xor
out
jbe
dec
push
fwait
mov
xchg
sbb
jecxz
add
xchg
aad
xchg
xor
movsb
arpl
mov
xor
ds
pop
into
ja
mov
xchg
arpl
je
lret
push
cmpsl
and
leave
xchg
ljmp
lret
xchg
imul
mov
jmp
pop
ret
xchg
xchg
cs
stos
lea
mov
movsl
loopne
inc
out
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
rol
insl
cmpsl
call
cmc
bnd
jg
call
push
ret
stc
decb
push
push
pop
das
cs
pop
xchg
xchg
push
cmpl
xchg
inc
jle
and
enter
outsl
lods
das
outsl
or
lahf
call
mov
lea
shll
push
outsb
cli
inc
xchg
or
cmpsl
or
adc
into
mov
cs
push
das
sarl
rcrb
test
jbe
notl
test
push
icebp
es
lea
dec
mov
pop
mov
push
ficomps
mov
jnp
mov
cmp
push
es
dec
push
lods
fnstcw
jecxz
jmp
nop
xchg
xchg
xchg
mov
sub
pop
lods
test
test
dec
stos
insl
inc
fnstenv
out
dec
je
xor
sti
rorb
cmp
stos
imul
adc
jmp
fxch
mov
bound
jl
bound
sarb
test
add
jle
xchg
test
inc
pop
test
adc
fcompl
and
mov
test
cmpl
repnz
popa
xchg
stc
rorl
mov
aaa
push
sub
mov
inc
filds
loop
gs
int
dec
mov
lcall
fwait
int3
and
or
je
loope
inc
popf
jmp
dec
xor
out
imul
lods
push
mov
insb
out
sahf
xlat
loopne
mov
jnp
mov
xchg
mov
dec
aam
jp
jne
or
ficoms
mov
lock
and
inc
movl
cmp
xor
push
aam
inc
lods
in
out
mov
outsl
data16
into
push
nop
add
pusha
jle
mov
push
fisttps
add
adc
add
sub
cmpsl
xchg
push
or
xchg
and
pop
test
pop
movsb
and
mov
xchg
mov
mov
fs
orl
or
push
cmp
pop
mov
xlat
or
leave
pushf
lds
sub
lahf
decb
pop
enter
or
mov
jbe
xchg
dec
dec
push
ret
pop
test
push
icebp
mov
push
dec
mov
push
addb
stos
mov
lahf
sub
je
aaa
pop
aaa
lods
rcll
push
inc
sahf
divl
jl
lods
lahf
xchg
inc
or
jecxz
jmp
pop
imulb
pop
out
fcoms
jns
add
popf
xlat
sub
or
inc
jecxz
mov
inc
lods
lods
gs
jl
insl
nop
lahf
imul
mov
or
sbb
xorps
scas
arpl
fistps
jo
pop
adc
push
decl
and
adc
lcall
jno
out
ds
pop
mov
add
sbbb
clc
cld
jne
cmpsl
insl
sbb
xchg
mov
push
xchg
inc
pop
hlt
dec
cmp
push
aas
or
pop
mov
sarb
js
mov
mov
jb
mov
ljmp
and
shl
xor
jb
xor
add
jl
mov
xor
sub
pop
mov
mov
inc
dec
imul
mov
inc
adc
cli
add
jl
imulb
xor
js
mov
jnp
or
pop
in
int3
jbe
xor
jb
cmp
hlt
inc
pop
out
lahf
jo
lcall
push
es
adc
addl
lds
pusha
shrb
mov
xlat
arpl
mov
jl
mov
subl
and
add
mov
iret
in
loop
pop
enter
inc
mov
adc
adc
mov
push
sahf
out
pop
mov
mov
fistpl
or
stos
fimull
xlat
fs
and
fpatan
jp
fistpl
ss
mov
and
les
cmp
test
cmpsl
addr16
ret
lcall
adc
mov
shll
inc
push
mov
stos
jecxz
add
inc
pop
mov
std
shlb
mov
cld
add
fldenv
loop
add
in
dec
push
insl
push
repz
push
outsl
fwait
fs
pop
inc
push
jecxz
out
rcr
pop
inc
les
adc
movsl
push
fs
subb
jb
idivb
jle
mov
mov
lock
call
add
fisubs
dec
xor
sbb
dec
sub
cmp
xchg
pop
cmp
mov
sub
cs
dec
js
ss
cmpb
jp
adc
mov
cmp
or
add
ljmp
daa
mov
mov
dec
fisubl
add
shll
xchg
pop
pop
in
push
stos
test
sarl
repnz
jae
jp
adc
cmpsl
or
or
into
xchg
fldcw
imul
sbb
adc
cli
xor
inc
push
bound
or
xor
cltd
sub
aad
jmp
call
aas
fcmove
popf
mov
out
cld
jl
outsb
jo
xlat
fdivl
test
sub
mov
test
test
sub
inc
mov
fisubrs
xchg
mov
clc
sbb
lods
notl
aas
mov
mov
rcll
jmp
mov
cwtl
xchg
scas
sub
rcrb
adcl
adc
add
pop
or
rcrl
pop
popf
fcompl
scas
inc
or
push
add
cmp
xor
inc
xchg
lea
nop
xchg
or
or
sub
mov
jge
cli
sbb
jb
mov
mov
test
stos
shlb
mov
vmwrite
mov
inc
addr16
arpl
sbb
and
outsb
mov
mov
sbb
mov
or
xchg
imul
sbb
mov
outsl
add
jnp
add
in
cmp
mov
mov
pop
dec
sahf
jnp
aaa
sub
jl
not
shl
cltd
or
add
mov
cs
jge
test
mov
js
mov
pop
xchg
cwtl
adc
fiadds
sub
xor
ja
xchg
test
mov
int
test
fwait
jge
rorb
adc
shl
inc
lds
sbb
outsb
int
out
mov
sub
and
mov
push
push
outsl
fiadds
call
loopne
mov
fs
mov
jnp
inc
in
xchg
sub
pop
outsb
pushf
push
cmp
add
gs
cwtl
mov
mov
fidivrl
xor
jp
lcall
xchg
push
jmp
mov
fnstenv
sbb
sub
cmpsl
pushl
adc
ja
lods
in
dec
dec
cwtl
sbb
mov
bound
std
pusha
hlt
nop
cmp
mov
push
jbe
repz
outsl
dec
xchg
jmp
js
adc
adc
int
sub
sahf
xchg
das
negl
stc
and
sbb
adc
aas
ret
aas
jbe
sub
sbb
sub
mov
hlt
cmp
lret
loope
movsl
pop
mov
cld
cmp
sub
repnz
imulb
mov
push
inc
xchg
or
out
aam
mov
add
lret
icebp
movsb
and
aas
dec
sbb
test
pop
test
adc
lret
add
mov
push
and
scas
mov
inc
sarb
xchg
sbb
repnz
aam
loope
loop
sub
or
addr16
jo
push
rcr
xchg
or
cmp
sti
sub
or
mov
repz
cs
cld
mull
fistpl
add
andb
jmp
daa
push
or
inc
fdivrl
xchg
jle
insb
mov
pop
push
idivl
xchg
movsl
push
push
sbbb
dec
mov
mov
jnp
xlat
stos
push
sub
inc
out
push
pop
ljmp
jle
xchg
popa
std
rdpmc
scas
inc
push
jle
int3
adc
mov
jmp
mov
jns
mov
fidivrl
les
mov
pushf
into
rcll
pop
sub
or
mull
shll
push
movsl
sbb
mov
arpl
out
jno
aad
inc
inc
insl
push
das
sti
leave
loop
mov
cmc
arpl
inc
xchg
int3
and
movl
in
inc
and
push
repz
in
aas
sub
xor
arpl
dec
loope
fistpl
mov
insl
jne
das
sbb
cs
xor
push
rclb
xor
sbbb
xor
adcl
repnz
shr
pop
insl
add
jp
pop
leave
cmp
popa
movsl
xor
je
dec
add
xor
dec
add
mulps
lods
xchg
xor
in
push
push
mov
incl
and
inc
xlat
push
cld
aaa
add
adc
outsb
mov
jge
aas
inc
push
inc
incl
cmp
lods
mov
cmp
mov
fwait
sub
aam
mov
dec
xchg
lahf
inc
test
mov
incb
inc
cli
fs
scas
dec
dec
testb
stos
mov
or
or
fcoms
xchg
daa
pop
xchg
push
lcall
mov
ret
mov
int
rep
jge
jno
mov
mov
outsl
scas
cmc
push
push
das
pushf
negl
icebp
inc
adc
inc
fdivs
or
addr16
lods
and
add
test
xor
push
jl
jb
pop
cld
xor
xor
mov
stos
pushf
mov
xchg
sbb
aam
outsb
inc
pusha
leave
dec
cmp
and
pushf
out
iret
mov
jle
lret
enter
arpl
adc
mov
ficompl
xchg
xor
push
jecxz
fcomps
mov
dec
ljmp
mov
pop
inc
dec
addr16
inc
cwtl
fcomps
iret
xor
sub
adc
lea
jne
subl
mov
add
filds
loopne
fs
scas
insb
xlat
adc
clc
les
or
in
sub
pop
cmp
push
stc
mov
dec
mov
fsubrl
xchg
out
xor
xor
jge
fwait
pop
in
push
ret
out
int
xor
aam
adc
dec
aad
mov
roll
js
cwtl
stos
repnz
ret
lds
sbbl
jl
loope
mov
cmpsb
das
adc
cmp
dec
loop
fstpl
cmc
bound
cmp
stos
imul
sahf
je
das
clc
lods
je
cli
out
jo
pop
pusha
test
dec
xor
imul
es
mov
lock
pop
cmpl
jne
xchg
inc
jnp
cmpsl
addr16
push
fdivrs
pop
bound
push
mov
aas
cmpsb
xchg
cli
or
ficoml
and
cltd
push
xor
pop
mov
xorb
dec
or
pop
inc
xchg
iret
nop
lods
jl
mov
test
and
dec
push
std
mov
lret
in
mov
add
sub
ja
lcall
inc
leave
dec
jp
pusha
ret
stos
push
mov
ret
fsubrs
jge
lods
loop
popa
cmp
xchg
dec
loope
cmp
adc
les
mov
push
in
dec
fadds
sbb
xor
dec
jecxz
inc
xchg
push
add
outsl
and
scas
cwtl
xchg
shrl
lods
mov
jb
cmp
cmpb
xchg
repz
rcl
jp
inc
mov
or
cld
jecxz
out
dec
pop
xchg
mov
push
es
mov
dec
movd
hlt
rcrl
pop
jmp
lods
repz
fistl
scas
or
or
popa
pop
jge
add
rcrb
xchg
fcomps
mov
xchg
and
adc
inc
ljmp
popl
movsl
inc
jne
pushf
push
xchg
pop
xlat
adc
mov
push
testl
sbb
adc
leave
lahf
out
pop
mov
incl
sahf
adc
je
xchg
ja
sub
rep
rol
ss
pop
into
test
xchg
sub
dec
nop
sub
xor
aas
pop
mov
scas
loope
cmp
adc
ret
xchg
pop
mov
adc
jmp
mov
subb
imul
pop
movb
and
mov
xchg
xor
mov
stc
cmp
aad
repnz
mov
cld
or
cmp
add
pop
push
inc
divl
enter
btc
mov
cltd
sub
jmp
cmp
adc
pop
insb
mov
and
mov
mov
movb
sub
inc
mov
sbb
jno
movsl
in
addl
jge
adc
fs
movsl
adc
sarl
pop
mov
bound
sbb
cmp
or
jle
lret
pop
outsb
or
push
mov
fiaddl
or
push
dec
dec
enter
add
das
jle
rol
cltd
cmp
jge
mov
xchg
add
popa
cltd
xor
push
or
lret
int3
cmpsb
test
sub
and
fwait
mov
add
xchg
mov
push
outsl
out
cmpb
stos
and
je
jne
andl
loopne
or
and
xchg
sub
xor
inc
mov
ficompl
sub
dec
fidivrl
stc
aaa
push
xlat
ds
mov
xchg
cld
inc
in
lret
cmp
test
iret
and
jecxz
je
pop
mov
pop
mov
lret
fiadds
movb
cmc
addb
mov
out
sub
xor
shll
das
and
or
ret
lds
mov
jg
lret
push
sbb
jnp
dec
repz
mov
sbb
mov
dec
xor
pushl
fidivrl
daa
test
pop
enter
test
fidivrs
mov
cwtl
and
fwait
push
fldl
pop
cmc
scas
jns
sub
inc
sahf
xchg
imul
aas
ret
fnstsw
push
xchg
mov
cmpsl
pop
mov
inc
sbb
add
pop
pop
lea
dec
dec
outsb
fimull
dec
cmpsl
lea
out
in
mov
cld
aaa
mov
rol
loopne
clc
rorl
inc
xchg
jp
int
daa
xchg
inc
jbe
xor
mov
insl
rolb
push
stos
roll
inc
jp,pt
mov
push
mov
testb
and
cmp
cs
add
ud2
xchg
mov
loope
je
adc
inc
mov
sbb
iret
jle
movsl
mov
push
pop
lea
cltd
je
adcb
das
std
dec
jo
and
movsb
xor
dec
mov
mov
pop
xor
mov
mov
and
shr
xchg
fs
adc
or
mov
xchg
dec
xchg
pusha
push
dec
scas
mov
or
mov
or
cli
xor
fdivrs
pop
push
lock
push
inc
xchg
int
sub
cmp
mov
fldcw
insb
sub
mov
sbb
mov
xchg
xchg
dec
push
or
je
aaa
pop
and
xchg
repz
adc
or
dec
pop
xchg
aad
js
cwtl
xor
jno
inc
gs
mov
mov
jl
push
sbb
xchg
fwait
mov
jge
lock
js
add
inc
mov
lods
mov
cwtl
and
test
addb
push
jl
stos
stc
jg
push
jno
adcl
adc
push
and
xchg
bound
mov
pop
fwait
pop
test
dec
adcl
fdivr
or
mov
enter
jl
aam
daa
adc
xchg
mov
hlt
stos
dec
dec
fistpl
inc
pop
aas
adc
stc
sti
mov
push
cli
push
xchg
dec
jb
mov
inc
movlps
aad
jle
push
push
test
and
aad
in
xchg
sub
cmc
fcmovb
and
jne
xchg
push
into
jg
fs
or
or
xor
push
movsb
cli
xor
mov
sub
aaa
jno
mov
mov
enter
lds
jmp
sbb
inc
cli
cmp
repnz
jae
sbb
adc
bound
adc
inc
mov
insb
repz
iret
fwait
xchg
lret
test
adcb
adc
fisttps
sti
leave
jne
mov
clc
sti
cwtl
or
inc
add
sub
ja
mov
sbb
or
mov
dec
cmp
test
pop
arpl
mov
lahf
ljmp
xor
jp
sti
and
shl
dec
nop
dec
stos
mov
nop
adc
test
jg
jnp
cmp
push
push
jge
push
mov
icebp
or
es
pop
cmp
mov
es
mov
xchg
stos
cmc
xor
mov
and
loopne
xchg
xchg
pop
ret
dec
inc
int3
out
sub
ljmp
mov
stos
aad
adc
or
push
out
sub
mov
dec
cwtl
mov
movsl
iret
push
movsl
mov
test
cmp
clc
jne
div
fs
lret
pop
lods
sub
mov
pusha
cmp
ret
lahf
jg
lods
mov
push
rol
cli
mov
arpl
or
daa
test
push
push
movl
in
inc
and
jbe
jp
xor
fildl
stos
xor
out
pop
xchg
xor
jl
dec
sub
push
movsb
mov
or
in
cwtl
pushf
push
call
std
nop
out
dec
push
test
or
adc
xchg
insl
pop
push
inc
fnsave
and
or
adcb
dec
imul
mov
and
inc
jle
and
fwait
cmp
mov
ljmp
aas
xlat
icebp
into
nop
pop
cmpsl
add
cmc
xchg
dec
fcoms
addr16
sub
jmp
mov
fdivrs
mov
ja
sti
rcll
popf
cmc
testl
aam
subb
ss
mov
mov
adc
xor
mov
and
popf
sub
cs
insb
or
xor
pop
das
imul
outsl
decl
mov
sub
mov
out
xor
sahf
imul
adc
inc
mov
jnp
cmp
push
in
mov
in
add
imul
pop
sbb
aam
pop
mov
test
dec
pop
cmp
push
je
pop
add
push
clc
xor
jns
mov
aaa
roll
rorl
movsl
add
mov
mov
je
fisubs
lock
and
dec
lea
push
jp
imul
cmp
shrb
lret
push
push
pop
inc
mov
hlt
js
cli
mov
sahf
repnz
mov
ljmp
cmp
pop
cmp
inc
mov
jo
pushf
mov
cmp
dec
scas
pushf
iret
sbb
stos
incl
enter
inc
xor
cmp
sub
add
mov
push
movsb
sub
rorb
mov
jecxz
and
add
and
mov
pop
je
dec
movsb
dec
mov
hlt
pop
or
outsl
sarl
iret
movsb
sbb
mov
shrb
movsl
andb
test
loop
lahf
jno
inc
data16
nop
pop
push
mov
mov
cmp
ret
or
push
mov
lods
pop
jmp
movsb
shll
pop
pop
call
mov
push
sub
enter
out
andl
jne
xor
in
inc
cmp
mov
jbe
ficomps
mov
inc
and
pop
bnd
push
xchg
pop
jnp
cmp
cmp
aam
or
cmp
push
mov
pop
push
int3
xchg
rorl
test
repnz
fsubr
or
loopne
addb
dec
rolb
inc
cmpsb
mov
lock
mulb
cmp
xor
dec
icebp
cmp
pop
jl
jbe
mov
inc
xchg
inc
xlat
iret
lods
insb
scas
push
xchg
outsl
adc
inc
add
clc
pop
mov
stos
jmp
in
mov
cmp
out
sub
stc
inc
sub
jmp
jg
bound
inc
pop
call
mov
jnp
lds
test
nop
xchg
shll
sub
shl
insb
adc
push
data16
jge
cmp
out
lods
mov
sar
add
dec
mov
xor
sbb
ret
push
push
movsl
pop
jne
adc
daa
fwait
lahf
cmp
test
mov
inc
dec
clc
repz
mov
fisttpl
lret
sbb
inc
pop
pop
sarb
outsl
arpl
int
andb
orb
sbb
je
push
and
ds
jnp
xchg
push
ret
mov
jg
es
jo
jmp
push
sbb
fisubrs
dec
fwait
mov
sahf
outsb
mov
insb
int
das
mov
std
add
sub
push
inc
cmp
movsl
into
addr16
inc
pop
cwtl
imul
or
pop
mov
test
jo
mov
test
pop
fdivl
pop
scas
push
adc
xor
jge
sbb
cmp
ds
sub
and
icebp
js
jle
out
push
sbb
insl
aas
rolb
mov
hlt
pop
mov
imul
cwtl
pushf
mov
enter
outsl
cmp
push
jg
xchg
bound
sub
push
dec
pusha
pop
stos
and
mov
in
jae
and
pop
jb
push
mov
push
cmp
sbbb
stos
pop
adc
pop
sub
or
pop
testl
push
mov
enter
js
xchg
popf
cmp
xor
rcrb
addr16
sbb
jns
xor
xchg
sub
jbe
roll
adc
xchg
push
ror
enter
and
xchg
mov
cltd
cmpsb
in
mov
test
xor
mov
lret
lea
mov
sbb
xor
mov
xchg
mov
je
leave
adc
rclb
scas
adc
scas
dec
sub
mov
jbe
jmp
rclb
leave
in
outsl
stos
mov
mov
sbb
pop
xchg
dec
and
push
cmpb
mov
test
scas
mov
jge
xor
loopne
lods
into
jns
loopne
lret
jg
movsb
xchg
push
mov
fadds
popa
xabort
daa
mov
outsl
es
push
inc
sbb
xchg
cmp
pop
xchg
push
inc
pop
int
in
add
ja
jecxz
push
xor
mov
in
cltd
pop
push
sub
jbe
arpl
popf
or
lods
sbb
popf
adc
leave
adcl
push
and
movb
lods
call
mov
pop
js
addr16
test
scas
aas
push
ficompl
and
mov
cmpsl
xchg
and
inc
ja
js
xchg
sbb
jb
xor
xchg
mov
jae
dec
out
repz
mov
pop
popa
mov
inc
adc
push
xor
subl
test
pop
dec
mov
pop
xor
inc
xlat
jp
jae
lock
cli
sub
inc
sarb
sub
mov
jno
or
ljmp
lods
dec
sub
add
dec
mov
pop
lea
jecxz
stos
xchg
scas
cmpb
js
icebp
ret
cwtl
out
mov
push
xor
push
inc
ss
das
je
ljmp
mov
or
movsb
xchg
mov
sub
mov
push
cli
push
dec
lods
jge
int
cmp
ljmp
mov
inc
dec
jb
add
inc
frstor
testb
inc
mov
mov
cli
or
std
int3
in
mov
negl
push
mov
cmpsl
and
jns
mov
xchg
jae
popf
cmp
mov
mov
aad
out
test
push
inc
int3
stos
push
xor
outsb
push
mov
arpl
mov
add
loop
sub
sbb
clc
dec
dec
fcmove
je
cmp
adc
xor
stos
push
mov
dec
mov
pop
fimuls
lcall
fwait
out
adc
lret
and
fwait
mov
inc
aaa
mov
cmp
imul
xchg
mov
and
lea
mov
jnp
sarb
int3
cmp
stos
adc
xchg
jns
insl
insb
loope
lcall
sbb
idivb
clc
xchg
test
faddl
add
jno
out
leave
jg
fldpi
shl
inc
jb
fwait
adc
mov
mov
sub
jp
xor
mov
push
imul
lods
push
jecxz
mov
sbb
pusha
xchg
push
lock
fsts
fnstcw
push
inc
scas
add
dec
stos
jns
mov
jo
nop
cmpsl
scas
jb
sub
or
dec
pop
leave
add
dec
lret
lcall
mov
mov
jae
xorl
pop
or
sbb
push
jecxz
lods
aaa
push
inc
cmp
sahf
mov
daa
dec
and
gs
lock
sarl
into
mov
popf
ja
mov
cli
or
cmp
imul
es
sbb
sub
outsb
les
nop
mov
xchg
push
add
adc
daa
xor
sub
shl
dec
dec
scas
cmp
aad
stc
sub
ds
arpl
sbb
fisttpl
js
xchg
pop
sub
jmp
xchg
aad
mov
loop
inc
sub
nop
ret
mov
mov
loope
or
add
sbb
cmc
xchg
nop
push
pop
push
xor
dec
xor
jle,pn
dec
mov
inc
inc
xrelease
stc
jge
sub
mov
pop
fimull
fstl
mov
inc
aaa
and
mov
int3
mov
mov
nop
enter
icebp
leave
mov
aas
aaa
imulb
lret
fcoml
sbb
push
xor
dec
mov
cmc
repz
sbb
pop
jl
shll
mov
cmpsl
adc
xchg
outsb
push
negb
mov
mov
in
pop
jns
cmp
lds
int3
out
mov
pop
lcall
int
pop
int3
jbe
mov
in
cmp
popa
xchg
jp
lret
insl
rol
das
fldcw
dec
push
and
arpl
sub
nop
jb
or
mov
sub
or
std
in
aad
imul
pop
sbb
sbb
jo
add
test
push
jns
xchg
xchg
and
scas
push
dec
mov
test
movsb
pop
addr16
out
fmull
adc
bound
in
jg
push
or
insb
aaa
js
dec
out
mov
mov
xor
or
ss
jg
inc
movsb
ret
out
sub
xchg
push
jmp
push
ds
sub
sbb
sti
push
fimuls
mov
sub
ret
mov
inc
stos
xchg
ja
lock
mov
xchg
lahf
popf
push
mov
pop
mov
sub
imul
xchg
faddl
lcall
inc
enter
shll
btc
mov
jns
add
mov
insl
mov
dec
xor
fmulp
clc
mov
test
lret
dec
xchg
int3
mov
sarb
sar
xchg
stc
pop
mov
xchg
push
out
sbb
jno
orl
add
insb
or
cmpsb
insb
mov
and
xchg
mov
mov
shlb
push
mov
xor
std
jno
negl
fcmove
imul
popl
xor
inc
shlb
mull
mov
inc
mov
xchg
mov
fwait
push
cwtl
ret
xchg
cwtl
and
push
pop
pop
jge
mov
or
popa
xor
and
aad
mov
cmc
mov
sub
dec
addl
cmp
jge
mov
in
mov
pop
int3
pop
aaa
pop
mov
dec
and
fstpl
jp
outsb
pop
and
dec
adc
shrb
mov
push
ljmp
jecxz
dec
fbstp
out
inc
out
push
jg
inc
fdivr
add
add
dec
mov
out
pushf
jecxz
xorb
repz
sahf
dec
jecxz
xor
push
cmpsl
xchg
daa
dec
mov
aad
jge
les
inc
xchg
inc
inc
scas
lahf
incl
movsb
mov
mov
xor
jb
xchg
push
pusha
jg
sbb
mov
mov
or
xchg
or
les
jb
push
std
xchg
mov
cwtl
lods
xor
mov
and
cs
addr16
in
sub
mov
fcoml
cmp
and
push
int
xor
loopne
test
mov
lret
mov
mov
sbb
pushf
fdivrs
icebp
repz
lock
inc
sbb
repnz
mov
inc
inc
pop
push
mov
add
jns
inc
gs
das
aad
psubw
or
daa
add
push
rolb
call
sbb
daa
adc
mov
or
pusha
mov
cmp
pop
lods
mov
mov
aaa
jmp
and
mov
jle
dec
jmp
inc
dec
test
jb
je
cli
fwait
xor
add
out
cmp
cmp
dec
jmp
mov
rol
jns
push
pusha
mov
aad
pop
aad
ds
push
loope
mov
pop
fisubrl
pop
push
sub
lea
add
adc
shl
add
in
or
test
push
adc
loop
out
xchg
xor
cmp
xchg
data16
inc
cmc
cmc
outsb
andl
ss
dec
xlat
xor
mov
mov
xchg
stc
rorb
pop
fstps
in
sub
sahf
cmp
lods
mov
sbb
sub
insl
movsl
sub
leave
jecxz
hlt
nop
pusha
test
adc
jmp
cmp
ljmp
mov
xchg
aas
push
and
sub
sarb
fldl
add
mov
xchg
mov
and
enter
js
xor
push
fwait
xor
cld
mov
or
cltd
pop
or
or
in
dec
insl
mov
lcall
imul
dec
jge
sarb
dec
ljmp
mov
movsl
lock
mov
mulb
mov
subl
cwtl
sbb
xchg
xlat
idivb
mov
jo
sub
das
stos
sbb
jge
mov
sahf
and
lods
adc
fdivrs
xorb
push
inc
cltd
addl
sahf
add
jge
xchg
jecxz
xchg
mov
and
sub
mov
jnp
jns
inc
mov
sub
cmpsl
rclb
mov
popf
inc
push
cltd
movsl
jmp
jae
mov
lods
mov
cmp
cmc
sub
mov
jp
sbb
aas
sbb
mov
pop
cwtl
pop
in
cmpsl
push
div
sub
imul
or
dec
sub
mov
mov
loop
lock
in
mov
icebp
jle
inc
shl
out
push
and
inc
jno
and
stc
push
inc
dec
into
jbe
cli
xchg
sbb
cmpsb
or
dec
inc
adc
out
adc
mov
mov
dec
adcl
sbbb
mov
jno
sub
mov
jmp
outsl
jp
cmp
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
mov
rolb
xor
lea
fidivrs
mov
xchg
xchg
bound
hlt
xchg
cwtl
aas
fs
jmp
mov
inc
lock
bound
jbe
addr16
or
xor
arpl
xor
dec
mov
mov
mov
cmp
int
xchg
mov
mov
cmc
fsts
mov
pushf
inc
sbb
jae
es
jge
fs
jecxz
imul
das
cmp
dec
sbb
pushl
xchg
xor
out
add
jns
aam
mov
sbb
dec
mov
add
ret
push
mov
mov
movsb
cmpb
fadds
inc
dec
inc
roll
aad
pop
lods
mov
pop
cmpsl
xor
inc
inc
pop
xor
dec
lcall
lds
lods
pop
imul
xchg
pop
push
adc
fwait
mov
inc
das
inc
or
mov
fdivl
psubq
cmpsl
les
orb
out
sub
sbb
aaa
repz
cmp
dec
hlt
xorb
push
and
popa
pusha
lods
sub
movsb
dec
ljmp
fcmovb
and
adc
rolb
pop
mov
fldcw
lock
movsb
xchg
adc
pop
push
inc
mov
lret
xchg
cmp
xor
std
fistpll
adc
hlt
std
loope
push
xor
ficompl
leave
lahf
stos
in
sub
sub
stos
sahf
data16
lahf
push
repz
mov
sbb
xlat
jb
dec
shlb
cmp
or
inc
stc
adc
pop
iret
adc
and
xchg
xchg
test
pop
mov
xor
aad
out
pop
jno
stc
mov
xchg
addl
loopne
cmp
push
lret
out
pop
ret
xchg
stos
decb
xchg
sub
or
insl
ja
push
test
fidivl
mov
dec
push
pop
je
hlt
xchg
xchg
call
out
adc
xor
hlt
aam
jg
inc
loop
mov
adc
jp
mov
pop
push
in
xor
in
mov
xchg
enter
jae
jb
pop
push
jl
setns
pop
sub
mov
in
push
loope
inc
int3
push
mov
jno
mov
mov
fst
cmp
xchg
ljmp
add
sbb
or
cwtl
sub
pop
mov
iret
in
mov
cmp
mov
pxor
mov
jecxz
jg
xchg
pop
les
dec
nop
adcb
pushf
popa
rcl
pop
rcrl
mov
data16
pop
in
test
dec
sbb
xchg
xchg
pop
sti
or
xchg
les
sarb
add
rorb
xchg
dec
xchg
mov
lret
add
cmp
add
fdivrl
pop
mov
not
jle
out
jmp
pop
pusha
std
xchg
js
mov
push
rcll
pop
xchg
mov
int
sub
xchg
in
add
push
adc
pop
xchg
ret
xor
jne
sti
xor
in
lcall
adc
add
sbb
mov
movsb
lods
cli
lcall
mov
popa
pusha
jb
jmp
sbb
mov
and
dec
or
es
mov
fisttps
iret
mov
repz
shrb
movsb
les
xchg
push
xchg
int
iret
stos
or
cld
jmp
sub
inc
push
add
dec
cmp
and
into
xor
sbbb
in
fcmove
pop
xor
sbb
int3
adc
dec
add
fiadds
inc
test
lret
mov
dec
hlt
inc
xchg
lea
inc
in
xor
ja
fmuls
into
cwtl
stos
xlat
xchg
mov
xor
rcrb
enter
sub
xor
aad
sbb
outsl
lret
pop
fs
outsb
mov
jo
xchg
push
daa
sti
cmp
jge
dec
push
out
fists
int
gs
insl
pop
mov
ret
mov
fsubs
mov
cwtl
cld
sub
jmp
test
sbb
mov
xchg
sbb
les
adc
sahf
in
fisttpl
mov
xor
int
insb
sub
push
in
fistps
outsb
sahf
mov
scas
inc
sub
mov
lret
xchg
sub
pop
inc
fdiv
sbb
std
pop
mov
jecxz
out
jno
into
xchg
mov
or
outsb
outsl
lods
js
add
jno
into
negl
cli
loopne
xor
sub
movsl
push
bswap
inc
stos
xchg
sub
mov
scas
sbb
arpl
stos
aaa
pusha
je
add
mov
movl
fidivrl
pop
jmp
out
sbb
in
cli
je
les
fsubrs
inc
pop
loopne
ret
shlb
stc
mov
dec
mov
xor
jmp
xor
pop
aaa
push
pop
push
ret
test
mov
notl
stos
ret
adc
pop
scas
repz
pop
iret
mov
cwtl
sbbb
sbbb
add
loopne
andl
lea
xor
pop
cmpl
enter
mov
std
xor
lock
mov
sub
jnp
cli
xor
push
jne
and
or
and
ja
fisttpl
add
or
push
xchg
cmpsl
adc
add
andl
in
mov
mov
push
mov
dec
cmp
dec
mov
test
lock
push
mov
pop
imull
dec
jg
cwtl
cltd
ror
lcall
loopne
mov
movsb
mov
pop
and
dec
loopne
repnz
lret
xor
jp
push
movsb
imul
es
push
adc
sub
mov
or
adc
lods
xchg
cmpsb
xchg
adc
or
xor
loop
fstpt
pop
xchg
add
popf
mov
sub
leave
mov
cmp
or
insb
lds
mov
repnz
push
push
cli
icebp
jns
xor
cmp
arpl
dec
sub
adc
adc
jecxz
lds
xor
in
mov
test
pop
jnp
dec
lds
or
lret
and
clc
add
das
out
mov
adc
mov
loopne
jns
arpl
add
test
mov
and
ret
je
sub
ret
imul
inc
lcall
mov
push
mov
jmp
pop
cli
mov
and
test
gs
rol
mov
test
int3
jge
mov
mov
sbb
aad
iret
inc
mov
push
or
or
movsl
aam
inc
dec
dec
xchg
cmpsl
add
mov
xchg
dec
pop
cwtl
adc
les
jnp
sub
int3
clc
call
js
sbb
cmp
cmp
aas
int
or
pop
push
fadds
hlt
jmp
cmc
bound
adc
aaa
cld
aam
push
mov
out
loope
mov
hlt
bound
dec
test
push
aas
dec
test
cmp
and
fs
xchg
push
push
or
cwtl
addb
mov
push
call
or
hlt
cmpl
test
jne
aaa
adc
sbb
mov
decb
mov
cmp
or
lret
xor
jmp
ja
dec
icebp
or
subl
xor
sub
leave
xchg
out
incb
sub
xchg
leave
mov
jg
or
ror
dec
or
mov
popf
mov
inc
stos
sbb
jne
mov
sahf
sbb
lahf
sub
addb
push
sti
sbb
pop
inc
or
xchg
or
xchg
dec
ret
add
adc
test
xchg
push
stc
xchg
cld
xchg
push
mov
jno
outsb
jo
popf
fnsave
jmp
inc
dec
cld
frstor
das
nop
dec
push
mov
js
pop
ja
imul
push
rep
dec
mov
sbb
scas
add
addr16
mov
jg
mov
scas
cmp
ds
cltd
sub
cmp
dec
push
xor
mov
sbb
ds
movsl
into
in
outsl
mov
mov
mov
loope
xor
popf
leave
andl
je
ljmp
jne
repnz
jnp
in
push
movups
mov
lea
cmp
jnp
dec
clc
ror
xor
jmp
jo
jmp
xlat
pop
lcall
in
stc
in
je
cmp
fsubl
push
in
cmp
xlat
aad
add
fisubrs
shrb
jg
aam
jl
loope
mov
imul
mov
movb
subl
aas
sub
cltd
adc
lea
aas
lahf
sbb
or
pop
sbb
and
add
ljmp
lahf
repnz
in
xor
mov
and
jg
xchg
push
cli
adc
add
movsl
inc
xchg
mov
inc
add
mov
aaa
inc
sahf
not
outsb
addb
add
out
mov
mov
jge,pt
fprem1
jmp
cmpsl
pushl
notl
jns
adc
into
pop
lods
pop
or
mov
cwtl
mov
popl
clc
mov
mov
lds
faddl
fs
movsb
sbb
rolb
adc
lods
dec
rcrl
lret
add
jns
pop
stc
mov
push
fadds
adc
add
and
mov
push
je
les
sbb
lcall
loope
push
iret
dec
in
mov
push
push
pop
cmpsb
xchg
je
mov
mov
xchg
insb
sub
push
lret
repz
pop
dec
repz
rol
sub
mov
ret
pop
rorb
gs
scas
or
fcomps
ljmp
mov
sub
mov
jb
adc
outsb
out
aam
xchg
jns
xchg
mov
iret
inc
sub
das
sub
aam
mov
dec
push
icebp
push
fs
lods
xchg
jle
stos
mov
imul
jmp
pushl
aad
adc
jnp
icebp
arpl
adcl
jno
lods
mov
ret
sub
decl
daa
push
jo
and
gs
cld
or
stos
loop
add
fiadds
les
test
fldenv
mov
pushf
mov
cli
test
ljmp
mov
pop
xor
fcoml
repz
and
insl
mov
mov
xchg
jb
shrb
mov
lcall
push
pop
lds
adc
in
bound
dec
js
nop
sub
idivl
popf
lret
roll
mov
mov
adc
mov
popf
ja
out
adc
and
add
cmp
mov
hlt
mov
sbb
dec
or
sub
push
xchg
sti
jl
in
pop
rol
mov
pop
push
mov
arpl
fdivrs
lcall
push
sar
mov
roll
sub
mov
jg
cmpsb
scas
fmull
jno
push
xor
cli
adc
je
test
in
cmpw
push
mov
sbb
add
cld
fisubs
xor
push
repnz
cmp
testl
inc
cmc
subb
test
mov
bound
lea
popa
jg
fsubrs
mov
rol
insb
push
cmp
mov
out
int
xchg
jno
pop
xlat
inc
sbb
sbb
ja
and
inc
ja
jo
movb
sub
jne
pop
add
mov
cmc
jae
xchg
mov
daa
mov
push
lcall
das
call
sbb
or
dec
sub
mov
in
sti
clc
jns
ret
into
int3
pop
data16
leave
adc
call
xchg
mov
mov
push
push
pushf
pop
mov
les
xchg
int3
xor
jge
cmpsb
insb
dec
test
cmp
dec
test
adc
js
push
add
jb
inc
and
jno
adc
leave
push
sub
dec
imul
dec
enter
scas
repz
dec
pushf
add
mov
sub
xchg
lret
sub
jl
test
cmp
mov
xor
add
and
enter
imul
insl
mov
lock
jae
or
or
into
in
and
push
or
loop
jge
mov
cmp
dec
and
jmp
cs
sar
loop
pop
out
stos
in
jle
or
mov
xor
add
and
shlb
jns
pop
pop
fsubl
bound
mov
test
in
out
nop
clc
push
xchg
mov
movsl
mov
inc
ret
jo
xor
test
pop
adc
not
or
out
in
pop
insb
out
repnz
xchg
lods
xchg
adc
push
leave
or
dec
sub
sub
jae
cmpsl
xor
sub
sub
xorb
jo
sbb
dec
fwait
dec
fdivs
sti
sti
jecxz
out
ljmp
xchg
adc
in
lods
out
sbb
jbe
insl
movsb
mov
fwait
imul
jecxz
repz
inc
jmp
sahf
dec
and
sub
test
imul
ja
add
add
repnz
mov
mulb
pop
fildl
inc
inc
inc
cmp
mov
push
or
xchg
mov
aad
outsb
jmp
or
cmp
jge
pop
pop
xlat
dec
jnp
sbb
shlb
adc
sbb
cmpsl
dec
adcl
imul
fdivr
outsb
test
ljmp
push
push
adc
adc
push
xor
lret
inc
lea
add
pop
imul
adc
and
xchg
adc
sub
push
push
movsb
pusha
mov
mov
jb
mov
popa
mov
bnd
jno
aas
mov
inc
fs
mov
xor
mov
xadd
popa
mov
adc
push
lds
sub
jg
xchg
or
sbb
insb
test
ja
xchg
mov
dec
mov
push
cmc
lahf
dec
les
jle
mov
dec
xor
mov
or
sub
sarb
aad
mov
movsl
es
in
fadd
idivb
lcall
mov
mov
leave
imul
cld
rcrb
lahf
ffree
push
mov
outsb
arpl
or
fwait
les
mov
push
movsl
lods
mov
xchg
incb
jg
push
push
lret
aas
out
out
dec
divl
stos
mov
daa
ljmp
lods
mov
addr16
xchg
sti
cmp
push
xchg
andb
clc
jne
inc
sbb
cmp
jo
mov
xchg
jnp
and
inc
test
cltd
icebp
sbb
dec
xchg
int3
xor
mov
adc
enter
lea
xor
jb
push
inc
popa
std
insb
sahf
cmp
loope
addr16
das
shll
pop
mov
xor
mov
rolb
cmp
jp
xchg
mov
jg
xchg
push
bound
sbb
pusha
out
dec
pusha
push
cmpb
in
shr
ss
les
insl
pop
mov
insb
inc
arpl
in
data16
mov
mulb
rclb
sub
icebp
test
mov
enter
rorb
in
push
xor
pop
pusha
sarl
loop
mull
sub
fcmovne
daa
shll
xchg
xor
mov
int3
and
pop
sbb
cmpsb
sub
cmpsb
ljmp
inc
inc
or
cmp
sti
outsb
scas
inc
movsl
dec
dec
xchg
adc
sti
mov
into
mov
je
and
in
icebp
adc
enter
mov
or
in
xor
cs
mov
gs
add
gs
pop
fcoms
or
jbe
adc
sbb
sbb
mov
jo
push
or
or
std
cli
mov
and
push
stos
cmc
sbb
test
ror
mov
sbb
lahf
and
mov
fisubl
jmp
loope
or
les
jg
sbb
and
repnz
pop
jne
push
adc
hlt
mov
mov
roll
ds
test
call
xor
push
jbe
mov
ds
and
insb
cmpsb
inc
push
lahf
sbb
mov
divb
mov
imul
mov
mov
push
lea
mov
push
push
inc
xchg
cli
test
sbb
nop
pop
jl
adc
add
mov
mov
push
xchg
addb
sar
mov
cmp
add
pop
repnz
jo
popf
mov
jp
sarb
pop
cmp
insb
or
adc
sub
mov
test
inc
mov
rclb
lods
outsb
xchg
lcall
mov
call
out
mov
xchg
aas
or
mov
mov
divb
adc
repz
test
sbb
mov
test
rclb
hlt
mov
pop
fiaddl
inc
mov
repnz
mov
sti
sub
sub
lods
out
loope
je
imul
sbb
iret
sbb
in
mov
xchg
js
and
mov
add
push
addr16
in
mov
aaa
iret
popa
and
mov
popw
jg
pop
mov
jnp
icebp
push
loope
mov
push
test
daa
adc
sbb
pusha
aas
mov
outsl
cmp
arpl
fsubr
pop
xor
out
mov
std
repz
inc
lahf
xchg
fnstcw
movsl
xchg
xchg
mov
adc
popf
nop
rolb
mov
bound
mov
outsl
dec
push
clc
push
fwait
mov
test
and
mov
or
jo
mov
je
and
nop
hlt
gs
clc
mov
enter
mov
stos
sbb
nop
add
push
xor
inc
jo
cld
shll
out
dec
sbb
cmpsl
and
out
mov
and
loope
xchg
mov
mov
cld
dec
dec
add
push
push
mov
test
inc
popa
mov
fsubrl
xchg
add
cmp
scas
pop
imul
fwait
in
mov
cmc
jl
or
outsb
les
in
push
sub
xor
es
mov
xchg
mov
les
popf
pop
push
stos
nop
add
rol
xchg
outsl
lods
lea
mov
mov
and
loopne
sbb
jb
dec
test
and
vpgatherdq
dec
scas
insb
xchg
push
cwtl
cmpsl
pop
push
pop
mov
loopne
inc
cld
popf
mov
cs
iret
scas
jg
xor
test
push
gs
or
clc
push
ljmp
pop
shrb
sub
mov
ret
or
in
out
dec
repz
pop
lods
fstpt
xor
pcmpeqb
insb
cmp
cmc
mov
hlt
aaa
shlb
jge
fldl
std
pop
call
popf
cmc
mov
aad
lock
rorl
aaa
sbbb
aaa
clc
push
inc
lods
in
mov
test
repnz
rcrl
mov
popa
inc
aas
fs
addr16
and
jae
imul
dec
cmp
lret
sub
jo
inc
xor
add
pusha
mov
and
mov
push
lret
cwtl
mov
je
in
inc
loop
mov
xchg
pushf
sahf
cmpb
sub
dec
pop
inc
daa
daa
inc
das
jecxz
xor
or
mov
sub
in
sti
repz
jbe,pn
cltd
jb
adc
pop
push
mov
cmpsb
push
test
int
mov
xchg
popf
push
in
pop
lcall
adc
cmp
jecxz
push
icebp
orl
mov
xchg
popa
cmp
or
imul
and
mov
mov
addr16
jo
adc
jmp
dec
fs
out
jae
xchg
loope
jge
mov
aad
xchg
mov
adc
cmp
fidivrs
push
adc
nop
ss
cmpsl
test
adc
jecxz
popa
out
push
fdivl
ja
out
pop
test
pop
movsl
in
icebp
and
jne
cltd
pop
outsl
adc
dec
test
les
mov
imul
aas
fs
cli
aam
and
mov
or
sahf
je
add
imulb
mov
dec
xor
dec
ljmp
aaa
cld
or
xchg
xor
xchg
cld
add
push
pushf
sbb
dec
mov
cmp
push
cmc
rcrl
mov
fldt
xchg
cmpsl
loop
pusha
fwait
and
lea
ret
dec
popa
addr16
push
imul
adc
push
jbe
popf
mov
mov
xchg
pop
push
inc
cli
jp
jle
xlat
mov
mov
mov
push
mov
in
stc
add
leave
clc
aaa
jnp
cwtl
mov
sub
stos
clc
cmpsl
dec
mov
imul
push
outsb
addr16
push
cltd
ret
mov
movsl
mov
pop
or
fidivrl
mov
test
ds
imul
pop
push
or
sbb
insb
mov
into
aad
daa
aaa
inc
inc
cmpsb
push
cltd
xchg
lock
xchg
mov
xor
push
sbb
add
cmpsl
sbb
rcll
cmc
cmp
pop
ja
inc
and
mov
mov
iret
jg
rol
cs
sub
into
cld
mov
arpl
jno
lret
sbb
movsb
hlt
aaa
cmp
jge
mov
mov
mov
mov
or
cmc
loopne
dec
ja
mov
sub
andb
inc
call
into
sub
adc
jmp
push
xor
dec
imul
xchg
in
pop
adc
pop
lret
inc
inc
sbb
mov
imull
jp
push
test
sub
pop
dec
imul
insl
sahf
test
ficompl
adc
cli
sbb
inc
cmc
cs
mov
imul
push
mov
subb
ss
aad
gs
subb
mov
mov
jne
push
mov
aaa
cli
mov
sar
mov
sbbl
push
mov
jns
movsb
aaa
call
or
fists
and
imul
jno
sbb
jae
push
ds
shll
rorl
push
mov
cmp
loop
aaa
jp
push
inc
xchg
addr16
mov
in
dec
lds
js
cmp
mov
mov
lods
sbb
adcl
dec
mov
lds
adc
lcall
mov
les
cmpb
cmp
insl
mov
sub
mov
imul
leave
xchg
and
pop
push
scas
sbb
sub
ds
sbb
lret
add
mov
mov
sub
cld
cltd
sti
sub
pop
pushf
add
jl
ljmp
pop
pop
es
test
inc
xor
and
cmovl
arpl
lods
cmc
addr16
dec
xchg
fcmovb
insl
sahf
cmpsl
sub
fldl
loop
mov
xlat
int3
nop
bnd
je
or
int
sbb
xchg
mov
jg
dec
int3
inc
xlat
cwtl
gs
sahf
push
ljmp
xor
pop
ficoml
jecxz
int3
push
add
sub
sti
jmp
cmp
ror
pop
sub
fstp
lret
pop
mov
into
scas
lcall
xor
add
stc
in
lods
and
pop
out
in
cmp
inc
adc
dec
pop
jbe
mov
adc
sahf
push
cmc
jbe
mov
pop
and
movsl
es
outsl
cwtl
push
mov
jge
mov
fwait
cmp
jno
and
js
fiaddl
mov
out
bound
add
insl
ljmp
add
jb
je
lods
xchg
mov
xlat
add
int
rcrb
xchg
and
and
outsb
push
push
out
out
jnp
xchg
pop
cld
mov
jp
mov
inc
sub
dec
jbe
and
ret
enter
xchg
outsb
pop
js
inc
mov
push
cmp
adc
mov
test
hlt
popf
loope
into
stc
cmp
or
dec
dec
jmp
jnp
sbbb
movsl
mov
jecxz
popa
fucom
jb
push
dec
repz
pop
xchg
jp
add
lret
jns
xor
shrb
je
std
cmp
ljmp
shlb
leave
rcl
lods
jne
mov
sub
adc
mov
or
inc
xchg
or
mov
lret
add
sbb
je
inc
fadd
in
fxch
inc
mov
insb
mull
cmp
or
add
push
inc
test
xor
pushf
dec
mov
fldenv
shll
mov
jnp
xlat
push
in
push
cli
icebp
sahf
dec
lea
sbb
adcl
jp
push
inc
inc
add
mov
add
leave
mov
pop
std
mov
mov
push
xor
xlat
sbb
bound
sub
add
cwtl
mov
addb
roll
cli
or
movsl
or
popa
jns
jle
lret
xor
popa
dec
fldenv
sub
mov
jno
in
pop
and
incb
cld
mov
inc
shll
xor
in
test
xor
mov
jne
sbb
jl
arpl
rcl
mov
and
pop
fidivrs
cmp
and
push
jns
out
enter
xor
adc
les
or
lahf
lock
jmp
and
mov
sub
iret
jle
pop
pop
es
insl
cld
xchg
sbbl
mov
mov
shr
pop
xor
out
imul
nop
xchg
shlb
mov
xor
xor
or
ret
out
sbb
ljmp
fldt
mov
pop
ljmp
aam
pop
fs
les
or
out
lcall
orb
out
jns
jo
rolb
aad
add
jb
mov
test
dec
stos
imul
adc
fst
lahf
push
add
fistps
sub
jae
mov
cmp
outsl
xorl
lahf
fcomps
fisubrs
lea
test
jbe
and
xor
jbe
into
push
push
xor
cli
dec
sub
mov
mov
pop
mov
out
cmp
cld
adc
mov
dec
adc
xchg
ret
fabs
push
pusha
xor
mov
inc
jb
dec
inc
in
push
shrl
pop
push
out
or
mov
aas
sub
lret
sbb
test
mov
stos
ja
fiadds
addl
mov
xlat
dec
sub
and
add
lods
cmp
stos
outsb
dec
fdivl
xor
sbb
cmpsl
cmpsl
mov
arpl
jnp
icebp
pop
and
cmpsl
shll
cmp
and
cmp
lock
xor
aas
enter
repnz
sbbb
popf
mov
aaa
mov
out
out
js
add
or
and
scas
xchg
pop
ds
cltd
xchg
cmc
push
push
cmp
test
pop
rorb
jnp
mov
mov
test
lea
and
inc
dec
sbb
sti
inc
testb
sbb
pop
in
in
sbb
in
ds
mov
and
fadd
sbbb
dec
sub
inc
nop
scas
leave
lods
imull
or
into
add
stc
not
add
push
dec
push
or
sub
scas
data16
iret
pop
cmp
add
and
pushl
pop
in
nop
inc
xor
pop
mov
sub
pop
imul
jbe
adc
mov
cli
lcall
cmp
mov
dec
sti
add
mov
call
addr16
xor
mov
leave
fnstcw
mov
xchg
aas
int3
sbb
cmp
cmpsb
rcrl
popa
icebp
cmp
shl
int
es
push
xor
jno
mov
sub
aad
test
xor
inc
inc
and
imul
xchg
add
in
xlat
leave
in
xchg
jns
hlt
push
inc
mov
sbb
les
filds
inc
dec
add
inc
jnp
cld
xchg
add
or
lret
and
daa
xchg
add
movsb
mov
sbb
fisubs
sbb
xchg
push
cmp
sahf
jp
lret
dec
test
pusha
dec
xor
mov
adc
jno
int
add
jl
mov
cmp
add
insb
sbb
lcall
inc
xor
mov
dec
mov
cld
rcrb
inc
rcrb
and
mov
test
mov
lds
or
out
lret
mov
sub
jo
arpl
movsb
xor
xor
hlt
ljmp
mov
mov
cmp
mov
gs
pop
mov
into
xor
push
cs
inc
imul
add
movsl
loope
fidivs
push
and
loope
xchg
int3
loop
push
in
sub
sbb
aaa
ret
or
lds
or
pop
mov
lock
push
ret
loope
arpl
lods
lret
test
sti
aam
and
sahf
in
jl
arpl
aam
outsl
inc
mov
aaa
ss
add
add
mov
push
lock
pop
xchg
aam
mov
xchg
mov
rcl
mov
in
sbb
inc
ljmp
ret
pop
mov
cmpsb
mov
std
sub
bound
call
cltd
sub
xchg
pusha
sbb
inc
dec
cmc
add
mov
jae
in
iret
inc
cli
sbb
and
mov
clc
mov
mov
bound
pushf
push
das
bound
les
es
mov
gs
fsubr
cli
jb
movsl
jecxz
adc
mov
and
sub
jmp
addr16
pop
pop
push
and
in
pushf
push
popa
fbld
pop
pop
aaa
fisttpl
sub
adc
adc
shll
inc
and
push
sarb
mov
inc
insb
and
shlb
lock
dec
push
mov
icebp
std
mov
scas
and
mov
ja
inc
push
fmull
into
sahf
les
das
iret
addl
popf
lods
jecxz
mov
fbstp
ss
xchg
fwait
pop
push
push
sub
jb
pusha
shrb
stos
xor
daa
jge
cmpsb
int
sub
aad
mov
clc
xor
jecxz
sbb
mov
dec
pop
lods
aaa
repz
jns
mov
das
arpl
int3
fldl
leave
js
mov
imul
cs
mov
ljmp
cmp
into
or
test
push
cmpb
adc
adcl
sbb
pushf
and
mov
xchg
push
enter
stc
pop
push
push
insb
out
stc
cld
dec
or
ret
shr
mov
popa
inc
mov
je
push
dec
sahf
test
mov
es
fs
jecxz
mov
iret
icebp
pop
leave
aas
lods
xchg
jnp
and
in
mov
das
lret
test
add
push
ret
pop
pop
mov
xor
pusha
mov
std
push
std
nop
mov
test
jnp
cmc
fidivrl
out
adc
sub
js
stos
push
outsl
les
pushf
mov
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
cmp
scas
addl
bswap
cs
stc
push
jg
shlb
push
add
mov
mov
out
jo
fmuls
and
lcall
dec
pop
andb
or
outsb
pop
sbb
xor
jno
cmp
shrb
cmp
push
pop
lret
mov
in
sti
and
cld
add
mov
pop
jmp
cvtdq2ps
sahf
jb
sub
jno
and
xor
xchg
jmp
rclb
out
in
mov
mull
push
mov
cwtl
les
xchg
rclb
stc
push
cmpsl
fcmovnbe
hlt
pop
ret
popf
adc
lcall
xchg
outsb
fnstsw
inc
stc
push
int3
mov
clc
add
es
dec
mov
fldcw
dec
mov
push
cmpsl
out
cwtl
xor
or
addr16
orl
scas
xlat
jg
test
sarb
cmp
push
out
fwait
arpl
gs
test
pop
aas
xorl
lea
lds
sub
stc
repz
jno
add
enter
ror
iret
cmp
fdivrp
mov
or
push
dec
out
lret
addb
mov
hlt
test
enter
pop
mov
mov
aad
or
inc
jg
jmp
mov
and
xchg
adc
dec
add
jnp
inc
cwtl
pop
pop
adc
dec
dec
test
and
mov
adc
xchg
in
adc
scas
add
push
xchg
sub
call
aad
pop
neg
je
mov
aam
roll
test
mov
imul
xchg
inc
ret
sub
sbb
pushf
sub
or
jo
mov
shrl
or
popa
lahf
in
in
shll
pop
addr16
rcrl
add
lret
sub
mov
adc
ret
jmp
aad
out
inc
cs
add
mov
adc
sbbl
pushf
test
add
lea
fbld
scas
xchg
in
sub
test
into
pusha
xchg
xlat
ss
and
lret
into
and
call
push
int3
or
test
mov
popf
jb
jp
inc
mov
mov
mov
int
test
or
sub
xchg
mov
addr16
xchg
lds
pop
inc
mov
sbb
les
mov
inc
shlb
daa
sysret
sub
mov
popf
and
fs
mov
loop
push
xchg
test
arpl
dec
lea
sub
scas
jnp
mov
sbb
jb
es
cmp
pop
not
in
mov
xor
mov
insl
rorb
mov
pop
ds
loopne
lock
mov
ja
outsl
repnz
cmpsb
xchg
sub
test
pop
pop
xor
mov
sub
mov
fmul
sub
aad
nop
pop
stos
jp
pop
inc
add
cmp
or
pop
xor
xor
mov
xchg
inc
jle
es
xchg
bound
mov
out
push
dec
add
rcrl
push
mov
jne
decb
idivl
xor
adc
cvtps2pd
push
sub
add
daa
cwtl
ja
popa
bound
loop
mov
add
ret
cmp
xor
pop
fimull
pop
ljmp
mov
cltd
mov
jno
mov
aad
fistps
adc
sub
lock
xor
pop
or
jae
ss
mov
cs
stos
popa
jmp
repnz
clc
ret
push
and
mov
and
mov
notb
jge
stos
out
xlat
nop
gs
in
int
out
cli
adc
adc
pop
fisubrs
cmp
cmp
ja
and
insb
aad
insl
mov
push
xor
dec
xchg
hlt
mov
mov
sbb
lret
repnz
test
in
mov
loopne
nop
loopne
pop
fdivl
dec
lcall
push
std
cmpsb
cmpsl
pushf
rcrl
hlt
mov
sbb
in
pushf
popf
push
xchg
sbb
ret
stos
sbb
movsb
roll
daa
push
imul
daa
mulb
rorb
mov
inc
mov
bound
cmpsb
rcrl
pop
int
and
loop
mov
xlat
jno
or
cmpsl
mov
cmp
cmp
mov
rclb
popl
fstpt
inc
aaa
sub
push
mov
mov
pop
sbb
out
shrb
mov
cmp
rcrl
lret
pop
dec
dec
aad
push
mov
dec
push
jl
test
cmp
mov
push
inc
mov
divl
xchg
addr16
and
add
xor
out
aaa
mov
sarb
ja
jns
aas
cwtl
sbb
call
dec
in
cmp
mov
das
add
stos
clc
sahf
fstpl
jmp
jg
sbb
cld
jae
and
mov
inc
pushf
inc
clc
shll
adc
dec
ja
push
sbb
repnz
call
sub
dec
jmp
rolb
push
std
and
jle
shr
cwtl
stc
stos
sbb
mov
mov
mov
jp
xor
addr16
std
jne
ret
mov
adc
or
out
arpl
daa
xchg
mov
into
xchg
or
aaa
xor
outsb
cmpsl
or
xchg
push
dec
xchg
je
sahf
das
arpl
push
push
jno
or
in
xor
fidivrl
lock
xchg
ja
in
mov
scas
jnp
inc
repnz
jbe
bound
test
xchg
shrl
xor
lock
gs
mov
pusha
mov
aad
in
andl
mov
and
lock
sbb
dec
mov
das
lret
in
adc
lahf
sbb
std
sub
outsl
sbb
dec
out
mov
loopne
stc
jge
xchg
jl
mov
push
push
mov
and
jmp
add
inc
mov
sti
jge
sbb
cltd
sub
adc
xchg
repnz
and
pop
test
mov
pop
pop
xchg
push
adc
xor
mov
sub
mov
mov
push
leave
fnstcw
cwtl
repz
add
fnop
icebp
aas
imul
lods
mov
cmp
cmp
fbstp
sbb
and
out
popf
stos
jecxz
xchg
lahf
add
jmp
and
hlt
adc
cmp
das
sub
sbbl
sbb
or
outsb
and
subb
lcall
cmpl
popf
pusha
jp
mov
ja
add
xlat
xor
insb
fstpl
into
xor
pop
jb
outsb
mov
dec
ret
xor
dec
xor
jl
dec
add
lret
sbb
shl
sbb
dec
addr16
repz
imul
mov
rorl
addb
pop
stc
stos
sub
sti
js
movsl
out
inc
push
movsb
fninit
mov
push
mov
jl
std
ror
mov
cmpsl
cmp
ficomps
and
dec
xchg
sbb
movsl
notl
les
inc
mov
sub
out
pushf
mov
out
gs
cmp
ljmp
adc
orl
or
push
out
or
scas
stos
outsb
adc
sbb
in
cmp
stc
insb
test
out
cmpb
jae
das
bound
les
movsb
push
leave
inc
hlt
xor
xchg
in
mov
mov
dec
subl
pop
ljmp
pop
add
cmp
je
dec
std
stos
mov
mov
int
sbb
inc
inc
mov
das
xchg
xchg
aaa
or
insb
fnstenv
in
mov
sahf
scas
add
xor
push
mov
push
xor
and
cmpsb
push
cmpsl
mov
mov
lcall
sbb
sbb
push
lods
in
clc
push
test
roll
aaa
push
in
call
stos
xlat
adc
and
cld
and
or
cmp
pushl
sub
inc
pop
add
stos
xchg
inc
dec
sub
or
jno
lret
mov
jge
cwtl
jb
jl
pop
mov
mov
popf
xor
adc
fwait
push
inc
inc
mov
test
jl
in
lods
data16
jno
ss
fiadds
int
jae
mov
bound
iret
mov
and
lahf
add
jl
pop
mov
adc
sub
clc
cmp
das
add
popf
movsl
outsb
roll
sub
pop
clc
lret
adc
cmc
dec
mov
daa
mov
les
mov
xor
sub
jl
arpl
stc
lahf
mov
mov
icebp
cmpsb
xchg
loop
sub
orb
js
test
mov
dec
ss
jbe
int
dec
cmp
aas
and
push
push
icebp
xchg
add
jo
xchg
lcall
sete
insb
dec
jle
out
pop
mov
ljmp
sub
es
add
jb
fnstenv
and
mov
inc
push
mov
cwtl
push
enter
push
subl
into
dec
lahf
push
stos
ja
cmp
out
shll
pop
aad
add
ja
mov
add
js
cmovns
cs
pop
mov
pop
stos
cmpl
pop
in
mov
in
out
and
mov
pop
jno
and
out
pop
mov
xor
rclb
ret
pop
mov
jno
and
lahf
cmp
fdiv
lret
xchg
ljmp
es
icebp
xor
mov
xchg
sahf
js
mov
sub
cmpsb
jns
int3
cmc
mov
push
sahf
xor
mov
bound
bound
fnstcw
mov
test
add
lahf
jne
pop
mov
and
jbe
mov
clc
mov
push
fbstp
push
iret
nop
dec
xchg
xchg
lods
and
sub
adc
adc
mov
or
inc
xor
jns
jp
rorl
or
sbb
xlat
xchg
jmp
inc
stc
and
fcomi
sbb
inc
sbb
jmp
xor
mov
or
jmp
out
jmp
jo
test
mov
lret
add
je
inc
ds
fists
cmp
sub
mov
enter
sub
scas
inc
sahf
sbb
pop
pop
lret
sbbl
add
pop
xlat
test
cmovns
mov
inc
cmp
or
loop
dec
incl
ljmp
es
rcr
add
cli
mov
or
and
sub
push
ljmp
jae
scas
xor
mov
in
je
push
and
adc
std
outsl
packssdw
xchg
sti
sbb
xchg
jle
ret
sub
ss
sbbb
adc
aaa
jmp
clc
mov
aad
hlt
repnz
fwait
cmp
in
mov
movl
jns
loop
jo
mov
inc
xor
push
cltd
cmpsl
in
popa
mov
mov
pop
push
add
inc
in
push
jecxz
es
mov
pop
in
mov
xchg
mov
add
ljmp
adc
xor
testl
xor
mov
js
je
push
or
push
add
cmpsl
push
cld
mov
pop
lds
cmp
sub
add
inc
xchg
push
dec
daa
pop
mov
test
mov
xchg
xchg
xchg
repz
jge
pushf
into
stos
std
loope
mov
pop
leave
inc
or
xor
loope
std
cwtl
cld
sub
in
mov
sbb
scas
adc
gs
inc
out
xchg
gs
rcrb
dec
cwtl
out
mov
xorb
and
int3
std
mov
movsb
push
ja
pop
cmpsb
andb
aas
aam
dec
out
sti
dec
mov
pop
mov
mov
scas
lock
sahf
aaa
lret
adc
push
xchg
mov
lock
lods
repnz
mov
inc
enter
and
int3
ljmp
jno
loope
pushf
mov
sub
and
lret
pop
mov
lcall
fmull
inc
adc
fists
in
fcmovu
fdiv
sub
dec
shrd
sti
pop
xchg
sbb
xlat
lea
ss
divl
inc
cmc
push
rclb
jl
sbb
into
lret
sbb
or
dec
push
xchg
mov
dec
mov
xchg
dec
dec
repnz
push
lods
fnsave
movsb
mov
pop
addl
out
arpl
mov
pop
pop
test
dec
mov
daa
mov
lret
inc
hlt
pushf
dec
cltd
add
mov
loopne
cld
sarl
xor
sbb
daa
sti
std
inc
lret
push
fimull
mov
jbe
push
lods
add
int
shrb
and
adc
dec
leave
inc
mov
inc
or
fs
jecxz
sbbl
subl
mov
xor
in
in
bound
popf
xchg
or
mov
dec
mov
adc
xchg
jg
sub
and
imul
repnz
hlt
rclb
pop
pushf
fwait
mov
inc
xchg
js
fiadds
inc
dec
fs
or
lea
jbe
jno
lahf
dec
inc
sarl
or
xor
sbb
dec
push
xchg
inc
sbb
inc
mov
cmpb
dec
dec
sahf
js
push
push
in
adc
or
cmp
sbbl
popa
mov
adc
in
ficoms
cmp
xor
push
and
or
or
in
pushf
adc
and
jmp
imul
mov
mov
mov
dec
test
inc
out
sbbl
sub
jmp
out
loopne
xchg
inc
add
adc
in
int
mov
ret
imul
jecxz
jge
outsl
or
divl
lods
and
in
push
dec
bound
ss
dec
mulb
cmc
pop
xor
jmp
cmpsb
addr16
in
jne
lods
or
or
adc
push
fnstcw
mov
outsl
in
int3
pop
les
cmp
inc
xor
push
popa
cltd
ss
xchg
jl
lds
fidivl
icebp
pop
outsb
outsl
subl
xchg
pop
push
push
mov
addb
scas
cmpsl
out
dec
mov
scas
adc
in
sarb
shl
cmp
outsb
mov
xor
dec
cmp
mov
fucomip
push
enter
dec
cmp
mov
add
cwtl
cmp
scas
mov
xchg
icebp
jle
movsb
add
mov
mov
lea
adc
jp
xchg
and
xchg
mov
ret
inc
cmp
jmp
or
xor
mov
xchg
iret
sub
fwait
push
loopne
sbb
jae
ss
xchg
roll
loop
or
cmp
sbbl
sbb
xchg
or
jg
test
leave
mov
xchg
cmp
push
loope
scas
imul
cli
jno
jmp
sbb
cmpsb
lahf
dec
in
or
mov
push
in
xchg
inc
pop
xor
lea
jmp
xchg
sar
fisubl
or
xor
push
cmc
jne
push
sub
ret
add
in
insl
fnstenv
pop
pop
movsb
push
sbb
jnp
adc
ss
ss
mov
lahf
jl
mov
pusha
daa
adc
out
adc
data16
insb
sub
push
repz
xor
in
ror
mov
stc
or
and
popf
inc
fisubrs
xchg
add
aas
in
or
inc
push
mov
fdivrl
and
and
sub
test
mov
leave
push
test
movsb
xchg
fisubrs
dec
jg
test
shlb
inc
in
insl
movb
adc
inc
mov
xchg
adc
int3
adc
xor
mov
sti
popa
or
mov
dec
fcomps
pop
repnz
shlb
sub
into
dec
sub
xlat
and
imul
pop
or
xor
loope
or
jg
aas
lea
aas
orb
lcall
sarb
lock
je
fcoms
dec
mov
jg
xchg
jl
and
ret
movsl
sbb
mov
fisubrs
das
sub
pop
jg
jns
dec
cld
and
into
mov
mov
or
lahf
add
pop
aam
test
or
pop
mov
pop
pushf
lcall
sbb
push
aaa
jae
sbb
test
repz
add
mov
push
and
jae
xor
xor
cmp
std
push
cltd
jns
daa
std
dec
pop
sbb
inc
rcll
imul
mov
xor
push
xorl
leave
cmp
shl
into
mov
mov
mov
dec
xor
cwtl
and
jnp
mov
push
popf
js
cmp
sub
out
mov
ficoms
sahf
adc
cwtl
pusha
pop
sbb
jle
lds
dec
or
pop
ret
leave
mov
lea
pop
lcall
jecxz
je
loop
loope
inc
or
popfw
inc
cmpb
aaa
xchg
test
bound
rclb
mov
xchg
movsb
aas
xor
pop
jmp
xor
call
xchg
scas
repnz
mov
mov
data16
test
pop
sub
test
test
xchg
loope
sbb
sbb
sahf
jne
fiaddl
cmp
jo
aad
jmp
jg
cmp
rolb
imul
adc
push
xor
mov
orb
inc
test
adc
mov
lds
icebp
lods
sbb
or
push
lds
scas
mov
inc
mov
sti
mov
pop
push
pop
jae
pop
outsl
lcall
dec
pusha
lret
test
lds
xchg
mov
mov
jae
or
daa
mov
inc
fstpl
lahf
xchg
inc
je
mov
out
out
sub
mov
add
ror
lret
mov
dec
fwait
fwait
lahf
cld
ret
adc
sub
imul
loop
adc
and
insb
gs
std
insl
inc
mov
cli
push
cmp
sbb
clc
out
mov
cli
mov
xchg
sbb
mov
sub
mov
pusha
rcrb
in
out
test
pop
ret
mov
mov
mov
push
popa
cmp
stos
outsl
add
shl
mov
lahf
push
shl
inc
icebp
sub
icebp
cmpsl
leave
fs
dec
pop
icebp
ss
jb
jns
jnp
push
push
push
fldl
adc
cli
sub
scas
shlb
dec
into
adc
cld
pop
lock
pop
out
mov
or
enter
shll
pop
sub
stos
or
rcll
pop
dec
into
jmp
addr16
xor
mov
movsl
int3
fiadds
fsubrl
rcll
push
incb
dec
xchg
rcrl
mov
and
stc
dec
adc
dec
popa
mov
in
mov
xchg
cmp
cmpsl
test
icebp
inc
mov
movsl
inc
push
mov
stos
mov
xorb
das
int3
out
sbb
mov
mov
mov
jb
fildll
dec
sbb
jge
out
push
mov
mov
out
jne
fdivrs
ret
pop
mov
in
test
mov
mov
das
fs
xlat
clc
jbe
inc
data16
jmp
mov
mov
and
aad
adc
in
push
adc
xchg
in
ret
fnsave
aaa
fdivs
rorl
cmp
xchg
iret
ljmp
jp
outsb
sbbb
mov
jmp
sub
repz
lret
dec
xor
mov
inc
fcmovnu
fs
push
into
xor
popf
mov
ja
inc
mov
stos
jnp
je
repz
add
mov
enter
sbb
cmp
cmp
xchg
sbb
mov
movsb
jae
mov
mov
ljmp
add
cld
and
pusha
das
xor
outsl
ret
add
push
inc
pushf
sbb
sarb
cltd
pop
sbb
mov
dec
or
enter
fcmovnb
cltd
bound
xor
rcll
mov
js
lods
xchg
add
outsb
test
test
pop
mov
into
sbb
cmp
inc
imul
mov
inc
push
flds
imul
xor
enter
fnsave
fdivr
cltd
cmpsl
push
out
xor
and
cmc
clc
hlt
mov
imul
mov
loopne
fldcw
aad
pushf
sub
pop
dec
cmpsl
ret
adc
jns
push
mov
arpl
js
push
jbe
push
push
jmp
outsb
imul
push
decb
test
sahf
and
leave
scas
aad
test
mov
repnz
int
or
jecxz
test
sub
insl
jno
mov
cmc
mov
lret
cmpsl
sbb
fnstenv
hlt
lcall
or
pop
or
leave
into
cmp
jo
pusha
sarb
lea
pop
cmp
mov
jb
jno
inc
mov
imul
mov
ffreep
dec
fucomp
pusha
push
mov
push
jge
adc
sbb
rcrl
dec
inc
movsb
dec
cmp
pop
jb
pop
sahf
jg
and
jge
in
scas
in
mov
insb
xchg
add
mov
in
pushf
pop
ret
add
dec
loop
imul
movl
dec
mov
into
mov
cmp
jbe
lret
int3
out
cs
push
gs
sbb
dec
sbb
xchg
mov
inc
dec
sbb
xchg
cwtl
cmp
jp
das
sbb
xchg
xor
lods
pop
ja
loopne
cli
add
push
add
loopne,pn
and
fwait
es
xor
popf
icebp
mov
dec
adc
add
ja
call
and
lret
push
dec
mov
loope
jb
cwtl
shl
stc
adc
cmp
add
mov
add
comiss
lahf
test
sub
push
call
jno
and
ret
imul
push
mov
insb
rcrl
cs
shll
mov
push
bound
leave
cs
add
pop
xor
add
test
daa
xchg
out
xor
lcall
mov
rorl
shrl
in
mov
shr
mov
sbb
aaa
mov
rcrl
cld
scas
sub
mov
cwtl
stos
add
insb
pop
pushf
dec
lcall
cmp
rorb
mov
and
cmp
jp
mov
les
lods
aad
lods
xor
pop
pop
inc
fldl
mov
sub
or
mov
mov
scas
hlt
cs
stos
jecxz
addr16
adc
in
sbb
jo
add
loop
mov
push
shl
push
ja
sti
mov
jne
inc
bound
dec
test
dec
iret
sbb
and
sub
or
adcb
js
push
aad
dec
inc
test
out
mov
sbb
pushf
in
push
xchg
cmpsb
faddl
stos
and
push
cwtl
xchg
adc
xchg
pextrw
mov
push
loop
gs
dec
cmpsb
mov
sahf
leave
je
mov
repz
or
dec
pop
sbb
rorl
ret
bound
es
cmp
sahf
lret
mov
and
jmp
mov
movb
pop
xchg
and
out
mov
adc
popa
cltd
hlt
pop
xorl
pop
mov
jle
pop
jp
cmp
cmp
adc
push
pusha
outsl
xor
pop
data16
or
and
imulb
test
outsl
cwtl
test
ja
pop
lea
repz
repnz
mov
sbb
pop
lea
push
mov
shlb
das
std
pop
xchg
cmp
rep
popf
gs
gs
rcl
ficoms
loope
stc
daa
mov
sub
in
cmc
xor
test
in
or
or
dec
aad
test
xchg
and
add
mov
xchg
ljmp
dec
lods
xor
jecxz
aaa
lea
mov
push
aaa
insb
jb
fimuls
cli
mov
shrl
xor
or
dec
cs
jns
adc
mov
and
into
mov
mov
rcrl
pop
push
aad
add
xchg
push
jnp
loopne
jmp
insl
push
andl
mov
pop
jno
mov
cmpsl
ret
mov
dec
jmp
mov
pop
daa
and
ss
dec
test
mov
mov
mov
test
jl
test
imul
movsb
mov
sub
popa
or
add
jp
pandn
mov
hlt
xchg
negl
pop
rorb
or
xor
scas
cmc
sahf
mov
mov
decl
sub
xor
jae
mov
push
das
dec
mov
filds
push
cmp
and
test
mov
into
sbb
aaa
jne
cltd
mov
adc
aas
ljmp
shlb
push
pop
in
cmpsl
stos
fs
aas
and
es
mov
gs
add
sub
jge
mov
cmc
ret
or
lea
cwtl
pop
outsl
cld
jmp
push
mov
push
stos
fwait
cli
call
adc
sbb
es
scas
xorb
inc
xor
fwait
aaa
mov
iret
aam
dec
dec
cmpsl
mov
lahf
enter
call
lret
push
inc
es
pop
jns
test
and
sar
dec
mov
sarl
sbb
rcrb
push
aaa
dec
mov
mov
xchg
or
mov
fisttpl
fisubl
scas
sub
sti
jne
sbb
sub
jno
adc
push
xor
rcr
adc
mov
out
pushf
inc
sub
xorl
rol
outsl
ja
mov
adc
mov
aam
ljmp
mov
lcall
inc
mov
test
xchg
mov
call
cwtl
adc
xchg
lods
mov
pushw
mov
aam
mov
cmp
fldt
sbb
jle
xor
jb
stos
out
or
and
lds
mov
jecxz
int
add
lahf
sbb
jecxz
mov
fcomip
fldenv
pop
xchg
lret
xchg
cmp
push
cmpsl
loopne
mov
sub
or
jne
mov
decb
push
stos
imul
ret
inc
xchg
push
pop
into
jno
adc
dec
bound
inc
outsl
mov
lcall
adc
aam
jg
inc
mov
rcll
cmp
andb
sbb
push
cmc
ja
aad
shl
notl
jns
mov
push
inc
sarl
repnz
loop
loopne
pop
lret
call
push
or
and
sub
sub
pusha
xchg
xchg
sbbb
inc
inc
or
mov
sbb
std
mov
jne
push
dec
movsl
fistpl
xor
cli
mov
fcom
dec
fnstcw
pusha
jae
lahf
add
flds
aaa
and
leave
call
pushf
mov
test
cmp
mov
cs
jmp
jl
cmp
cmp
or
dec
or
sahf
ja
mov
mov
test
jne
add
push
inc
mov
cli
sbb
dec
inc
mov
ret
and
push
xchg
fst
aaa
js
push
sti
cmpsb
aaa
movsb
push
rcr
mov
imul
std
test
mov
push
js
mov
sbb
jbe
xchg
cmp
mov
cmp
jmp
repz
cmp
pop
shlb
cmc
bound
aam
imul
sti
out
cmpsb
push
scas
test
xor
das
or
nop
or
stos
loop
ror
out
and
rcr
mov
mov
mov
mov
ds
jns,pn
notl
jg
imul
into
and
jmp
mov
in
jl
xchg
cmp
pop
inc
cli
test
push
push
cmp
xor
jecxz
push
lret
into
fstpt
push
mov
pop
loop
or
punpckhbw
jle
in
cli
adc
adc
sub
in
call
mov
cmc
sarl
popf
mov
push
ror
cmp
js
add
fistl
xor
test
call
xchg
cmc
or
lods
xor
cli
movsb
mov
dec
adc
fildll
js
mov
aaa
inc
push
or
lods
pop
inc
push
jp
out
mov
aad
fiadds
enter
pop
or
and
rorb
movsb
push
mov
addr16
add
scas
loope
aam
and
mov
push
enter
or
push
jno
fistpl
out
push
xchg
int3
push
leave
inc
out
and
push
push
push
mov
shrl
cmp
mov
insl
cmp
or
sarb
lods
sbb
sbb
sbb
data16
icebp
cli
mov
cmp
movsl
jge
xchg
repz
dec
pop
clc
in
add
test
aas
cli
pop
or
xchg
nop
pop
daa
push
movsb
std
pop
inc
sbb
pop
cmc
pop
mov
pushf
sub
xor
hlt
mov
daa
out
mov
sarl
hlt
xor
or
int
lret
pop
repnz
std
scas
jnp
sub
mov
out
xchg
popf
das
mov
shll
pop
or
add
test
jbe,pt
ss
out
push
add
gs
pop
or
rorb
ds
popf
cmp
push
fwait
add
call
fiadds
scas
hlt
insb
aaa
jp
sbb
adc
scas
test
mov
jnp
js
cmp
inc
enter
addl
mov
shrb
xchg
mov
mov
add
jae
lret
popa
inc
rcl
lret
ja
mov
call
repz
push
jo
sbb
dec
sti
dec
inc
xor
ja
push
xor
lods
cmp
cmpsb
gs
adc
dec
cmp
das
andb
mov
ss
pop
sbb
outsb
nop
jb
push
push
addr16
cld
sahf
lock
adc
outsb
pop
jg
cwtl
xchg
sbb
fmull
sub
shrb
hlt
cmp
movsl
jne
mov
mov
dec
mov
mov
std
jae
aad
pop
fdivrl
add
pop
fldcw
cmp
jg
insb
xchg
iret
or
jno
jge
in
inc
out
aaa
mov
mov
lock
sbb
adc
lret
jp
nop
lret
xor
pop
sub
dec
bound
fsts
adc
movsl
push
adc
mov
bound
rolb
jbe
and
mov
jp
or
out
lret
aas
out
mov
or
and
lcall
mov
test
into
data16
ret
movsb
push
jl
outsl
push
mov
add
repnz
aam
lods
stos
inc
pop
adc
jp
add
push
sub
decb
stc
shrl
pop
dec
insl
sbb
xor
out
outsl
mov
ficomps
inc
and
cs
cmp
sub
repnz
mov
lret
pop
inc
rclb
pop
cltd
sbb
cmp
ret
imul
dec
fs
cwtl
xlat
mov
scas
idiv
int3
mov
movsl
sbbb
cmp
and
scas
fisubl
data16
pop
cmpsb
mov
jo
lcall
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
mov
adcl
addl
push
sub
shlb
jne
fcoml
jns
fistl
add
dec
cmpsl
mov
movsl
out
add
mov
movsb
lret
ljmp
loop
jge
cmp
pop
rol
insl
repz
fisttps
sbb
call
insb
rcrb
notb
nop
in
test
fsts
mov
loope
fsubr
jg
pop
loope
fidivs
inc
sub
lret
xchg
mov
push
mov
sub
loop
into
ds
push
outsb
outsb
dec
and
std
add
mov
fs
dec
fsubrs
xchg
lods
lock
push
push
fsts
or
scas
fdivl
andb
cs
insb
or
mov
push
stos
pusha
mov
loop
test
sub
sub
adc
xor
jnp
call
loop
cld
outsb
cwtl
les
ja
lods
roll
fisttpll
cmp
stc
popa
into
ja
call
scas
std
sub
cs
cmpsb
dec
add
loopne
outsb
push
jmp
xchg
in
ret
adc
test
add
mov
pushf
leave
pop
mov
int3
push
fidivs
add
mov
or
xchg
adc
cs
es
pop
xor
loop
mov
and
fimuls
mov
xchg
jmp
testl
insl
pushf
inc
mov
fwait
std
and
call
cmc
or
inc
mov
sbb
daa
mov
in
cltd
rolb
sbb
inc
test
cwtl
inc
ret
pop
inc
sub
dec
xchg
aad
imul
in
not
cs
sahf
pop
dec
xor
inc
inc
inc
mov
mov
push
in
pop
add
xchg
imul
in
sarb
rcll
shlw
out
lods
call
jbe
xchg
sar
and
pop
sbb
imul
lcall
repz
out
sahf
or
dec
ss
pusha
pushf
lret
mov
xchg
cli
inc
xchg
fucomp
mov
js
ficoml
shll
jp
sbb
push
dec
into
mov
xor
dec
stos
jg
xor
flds
pop
fs
pop
add
sub
jne
cld
push
push
jmp
dec
mov
xlat
sahf
pop
push
xor
aad
push
sbb
lds
mov
jae
bound
in
adc
dec
cmp
sti
call
xchg
jmp
cli
popa
push
out
mov
mov
lret
add
lock
daa
test
jecxz
sbb
aam
ret
sbb
jb
das
mov
aaa
lods
jbe
stos
jp
add
mov
std
sbb
xchg
jb
lahf
cmp
inc
sub
scas
andb
or
imul
mov
cmp
pop
dec
mov
rol
inc
in
lcall
shrl
int
or
fldl
xor
cmpsl
xorl
hlt
jge
aaa
push
jo
in
lcall
dec
test
inc
mov
ret
lods
rcrb
sti
fndisi(8087
enter
addr16
mov
dec
fists
sub
loope
adc
int3
test
ljmp
mov
pop
and
cltd
loopne
rcll
mov
xor
int
push
pop
ds
lds
fldenv
fbld
in
mov
or
xchg
xor
sbb
or
ret
es
add
xor
jmp
and
xlat
icebp
mov
imulb
dec
notl
inc
pop
repnz
xchg
fldcw
cwtl
pop
mov
aam
outsb
and
idiv
cmp
mov
insb
and
je
jno
sti
push
dec
es
rol
mov
stos
push
and
push
cmp
inc
adc
aaa
push
in
sub
add
nop
sarl
jecxz
or
lcall
inc
jecxz
int
jnp
pop
jp
dec
call
ret
sub
add
aam
movsb
and
pop
lahf
cwtl
mov
es
inc
jp,pn
xchg
daa
ret
daa
aad
dec
fstps
cmpsl
ja
cmp
and
adc
test
mov
lods
cmp
jl
sub
aas
push
jp
push
pop
add
jno
mov
iret
aaa
lea
fxtract
mov
arpl
jbe
pushf
into
iret
stos
mov
push
mov
outsl
adc
push
movsl
test
jo
test
into
jo
push
test
add
add
sub
aam
pop
sub
stc
lods
iret
fwait
xor
mov
fs
add
cld
or
std
mov
jae
subb
xchg
push
rcrl
xor
mov
inc
andb
mov
jnp
xor
pop
lods
les
lds
cwtl
adc
je
fsubr
shll
push
lock
loop
fildl
fsubl
scas
pop
dec
fsubs
jmp
xchg
daa
rorl
js
adc
cmp
sbb
daa
arpl
sub
sbb
mov
jno
inc
mov
scas
sbb
frstor
decb
inc
into
lret
ret
out
xchg
sub
cmp
ss
or
mov
sbb
imul
inc
mov
lock
inc
in
pop
xor
sub
call
jl
arpl
imul
jp
push
bound
flds
pop
pop
jbe
bnd
mov
es
out
lahf
mov
shlb
mov
jo
adc
fwait
jmp
mov
mov
inc
stos
pusha
int
sti
push
mov
leave
arpl
and
jo
and
dec
lods
push
outsb
cmc
ror
gs
pop
add
or
aas
out
popf
cli
fistl
mov
orl
pop
adc
mov
std
rorb
cs
dec
fidivs
enter
xor
mov
mov
push
lds
adc
push
jecxz
mov
lea
cwtl
sti
repz
dec
xor
repz
mov
std
iret
jmp
loope
mov
cmp
lock
pop
xchg
jnp
movsl
in
xor
mov
fs
rcll
add
test
pop
movsb
pop
sub
ficomps
shr
out
lods
sahf
dec
imul
mov
dec
aaa
mov
push
out
sahf
fidivrl
imul
mov
mov
mov
sbb
inc
pop
xlat
lods
push
mov
call
push
push
lahf
xchg
ljmp
mov
pop
xchg
stc
cs
out
rcl
push
mov
push
jmp
loop
mov
je
test
pop
repz
sub
aad
sbb
popf
jmp
notb
sub
or
push
pushf
xor
cmp
add
xor
push
push
mov
cmpsl
dec
scas
pusha
xor
mov
sub
sbb
mov
movsb
push
and
mov
lods
cmp
int
mov
cmp
mov
rcrb
mov
cmp
daa
andl
dec
cwtl
ror
add
lods
scas
sub
pop
sub
xchg
aas
sbb
mov
or
or
cmp
adc
mov
jno
sub
push
xchg
mov
popa
loope
lock
and
mov
add
pusha
cltd
icebp
aas
lods
jmp
mov
psubsb
cmc
pop
test
stc
and
and
lret
push
je
stc
fsubl
sub
dec
cmp
cli
jge
mov
ds
seta
add
imul
rcll
add
dec
xor
fmuls
push
ja
stos
fiadds
mov
pop
mov
pushf
test
lea
mov
xchg
insl
pop
mov
nop
push
adc
or
push
mov
or
nop
add
push
and
mov
mov
daa
out
pushf
mov
jne
mov
jno
repnz
and
jno
nop
add
leave
fdivs
jmp
and
inc
jae
pop
test
pop
jg
mov
and
add
imul
loopne
lahf
lahf
daa
push
hlt
enter
jbe
sbb
sbb
sub
outsl
sbb
leave
sbb
jle
mov
jb
jmp
lock
pop
mov
fwait
lods
mov
popa
sti
iret
les
inc
shrb
test
push
repnz
sbb
mov
and
add
jge
test
push
push
test
div
cltd
cmp
data16
inc
gs
jge,pt
jnp
mov
jg
or
es
add
ds
jle
scas
dec
mov
mov
dec
mov
ret
dec
inc
jg
les
fists
inc
lret
lret
testb
imulb
cld
and
mov
and
sub
mov
mov
in
push
mov
cmp
scas
aas
iret
test
jnp
clc
js
ja
ds
jno
shrl
and
jo
imul
pushf
stos
leave
cmpsl
int3
inc
push
and
repnz
dec
push
popa
mov
js
ret
xchg
pop
sub
sbb
adcb
call
sub
rclb
bound
lcall
movsb
mov
ficoms
adc
cmp
shr
pop
cmp
gs
mov
test
dec
pop
scas
in
xchg
pop
mov
lret
xchg
pop
add
hlt
or
cmp
scas
test
pushf
xor
lds
int
cmpsb
scas
inc
ret
xor
mov
jo
sbb
rorl
adc
addr16
bnd
je
insl
dec
pop
inc
std
lcall
and
dec
mov
dec
add
pop
add
cmpsl
lcall
faddl
or
fistpl
cmp
mov
sbb
xchg
and
in
dec
add
add
or
mov
pop
fimull
fscale
sti
lock
add
gs
sub
into
movsl
unpckhps
pop
cs
pop
sbb
pop
leave
mov
mov
pushf
add
call
xchg
repz
xchg
sub
xchg
lcall
outsb
cmp
and
mov
pop
inc
pushf
fbld
or
and
pop
or
sar
xchg
aas
mov
andb
scas
cmpsb
shrb
xchg
lahf
sbb
in
mov
mov
mov
sahf
lds
fdivs
sbb
adcb
mov
repnz
inc
clc
into
iret
mov
push
pop
sbb
pusha
in
push
std
inc
leave
idivb
test
sbb
pop
dec
scas
pushf
inc
scas
cltd
dec
and
push
inc
dec
pop
lock
out
lahf
cli
int3
imul
aaa
jl
sti
cmpsb
ja
push
push
cmp
adc
mov
insl
loope
pop
xchg
xor
push
dec
popa
das
lock
cmc
sar
pushf
dec
sbb
jg
test
xor
xor
dec
fsubrs
mov
sbb
dec
inc
adc
insl
mov
test
jbe
out
xlat
testl
imul
mov
out
mov
mov
dec
xchg
mov
jecxz
cmp
push
jae
repz
jb
mov
loopnew
rcll
push
xor
mov
push
roll
xchg
ficoms
pop
dec
rcl
sbb
cltd
xchg
push
cmpsl
lea
or
adc
jmp
xchg
addr16
cli
mov
int3
lods
movsl
mov
jp
fldl
or
in
dec
mov
push
jge
out
in
add
stos
das
mov
scas
and
add
add
push
mulb
bound
mov
nop
movsl
test
xchg
mov
es
push
inc
mov
leave
popa
inc
mov
cli
inc
mov
lret
adc
negb
sub
push
mov
daa
dec
cwtl
popa
dec
add
add
inc
aad
inc
lock
adc
call
sbb
and
and
mov
inc
sbb
jnp
dec
mov
int
out
ljmp
int
shll
daa
or
lods
cmp
jg
loope
and
mov
js
xchg
loope
push
adc
jbe
cwtl
push
sub
jecxz
mov
test
xchg
in
pop
mov
test
cmp
mov
mov
outsb
imul
test
mov
sub
aad
push
jb
xlat
dec
and
mov
stos
leave
fistpll
and
rcrb
lret
btr
inc
enter
jne
pop
xchg
arpl
aaa
jns
roll
mov
ja
ljmp
fwait
mull
clc
adc
push
adc
aas
rorl
add
mov
jge
loope
and
test
inc
ret
jp
in
jo
sub
adc
inc
cmp
ret
inc
sbb
and
push
cmp
out
arpl
lcall
push
xchg
fisttps
mov
push
inc
iret
ja
jmp
popl
inc
jl
les
sub
lods
enter
test
daa
xor
lods
aam
mov
xchg
xchg
test
inc
cmp
jo
outsl
inc
cwtl
cmpsb
cmp
mov
dec
incl
or
gs
ljmp
test
mov
jmp
ss
movb
mov
adcl
pop
addr16
pop
arpl
xchg
inc
lea
testl
pop
aam
aad
imulb
scas
mov
lods
sbb
dec
sahf
out
test
ds
cltd
sbb
in
cmp
cwtl
cwtl
xchg
push
mov
jne
push
pusha
jp
mov
fmuls
adc
scas
int3
pop
insb
xchg
mov
xchg
lods
sub
jns
jno
and
or
outsb
repz
cmpsb
cmp
repz
movsb
sbb
dec
das
or
iret
mov
fiaddl
jecxz
inc
cwtl
aam
xor
loop
iret
mov
push
pop
mov
and
into
mov
cmp
xor
clc
popf
push
sahf
and
sub
cmp
jecxz
push
fmul
js
jle
add
adc
and
inc
clc
aam
mov
arpl
add
loopne
inc
and
imul
mov
imulb
xlat
jl
fst
mov
mov
push
mov
fiadds
jns
sbb
push
sub
xor
in
or
insb
xchg
inc
lcall
arpl
daa
ja
pushf
jbe
rcrl
pop
rcl
cmp
imul
push
cmp
push
loope
fiadds
aas
adcb
mov
adc
pop
xchg
jge
insl
sbb
insb
sti
pop
mov
jle
adcl
dec
addr16
mov
movups
adc
jmp
mov
out
jno
inc
test
faddl
inc
insb
sbb
inc
push
push
jmp
scas
pop
ja
mov
cmc
outsb
fmul
inc
mov
nop
cmp
push
xchg
fnstcw
or
dec
sbb
sti
push
repz
dec
sbb
cmp
out
and
cmp
inc
and
aad
aas
sbb
cltd
arpl
std
or
hlt
int
bound
sub
or
lret
add
sub
xor
cmp
or
xor
mov
jns
orl
icebp
inc
rclb
jo
add
xor
popa
push
cmp
scas
xchg
jg
sub
mov
ss
dec
mov
adc
pop
jmp
xchg
push
jl
repnz
insb
scas
pop
loop
mov
push
cs
mov
push
shrl
stc
push
xlat
fsubl
int3
jl
jns
fsubs
stos
dec
push
mov
or
jg
test
pop
sarb
dec
cmp
fmuls
in
or
xchg
xchg
inc
jnp
pop
out
add
rorl
jl
xor
push
xchg
out
orl
lret
roll
aam
mov
jno
iret
xchg
in
or
cmc
adc
mov
dec
gs
test
cmp
push
test
mov
ja
pop
cmp
scas
mov
jge
pop
stos
leave
sbb
popa
roll
subb
lds
or
orb
cmp
mov
subl
in
sahf
fcomps
add
xor
cs
addr16
push
mov
sub
xchg
push
gs
daa
andl
mov
dec
lea
push
dec
fsubrp
or
lods
lahf
cmp
mov
rcrb
mov
sbb
jns
add
ret
jnp
hlt
xchg
pop
cmp
daa
pop
lds
inc
mov
sahf
add
sbb
sub
cmpsl
jle
lock
push
adc
loope
dec
xchg
xor
mov
lret
mov
dec
in
xor
shll
sbb
jnp
enter
bound
cltd
add
cwtl
clc
sub
jns
lcall
test
inc
ljmp
sub
andb
lods
fadds
jmp
add
jb
shrb
xor
cld
rclb
int3
jbe
lcall
aad
jno
popf
cltd
lahf
outsl
ljmp
sub
ret
bound
mov
mov
or
ret
jns
cld
outsb
jo
or
pop
mov
dec
xchg
sub
hlt
push
outsl
scas
sti
pop
or
cltd
lods
add
sarb
idivb
stos
and
mov
jmp
ss
pusha
fidivl
call
cmc
cli
push
or
aaa
jle
add
mov
jo
in
ror
mov
pushf
cmp
test
dec
das
push
xchg
jbe
cmp
ficompl
test
jmp
jg
and
pop
mov
ljmp
fwait
or
xchg
mov
js
mov
andb
push
je
rclb
fcmovnu
fucomi
in
stc
push
xchg
or
incl
pushl
cmpsb
push
andb
clc
xor
lea
mov
insb
jmp
add
mov
popl
pop
pop
test
sub
repnz
xchg
push
pop
loopne
repnz
inc
stos
adc
push
int3
sti
fs
aam
adc
icebp
call
adc
int
mov
sbb
loope
adc
ret
mov
mov
lret
cmp
mov
testl
push
insb
in
xchg
fiaddl
dec
or
jne
popf
jnp
and
cmpl
test
nop
out
xchg
or
popa
cmpsl
mov
pop
imul
dec
pop
cmp
push
shll
cs
mov
aam
or
inc
dec
lock
lret
fsubrp
mov
ficoml
cltd
cmp
push
das
and
mov
ret
loopne
adc
inc
jg
cli
iret
scas
int3
mov
jae
daa
jecxz,pn
out
push
add
dec
dec
and
out
or
mov
pop
cmpl
push
mov
shll
dec
mov
sub
fcmovne
jl
lret
sbb
repnz
mov
pop
arpl
test
lret
rcrb
ret
scas
test
mov
mov
scas
sbb
xchg
mov
shll
mov
lahf
fisubrs
mov
sahf
sub
into
pop
enter
add
xchg
fsubl
out
ja
int3
mov
jne
lret
mull
mov
js
inc
adc
lahf
cwtl
je
jne
loope
mov
mov
iret
pop
in
decl
lcall
shll
test
mov
cld
aad
mov
xchg
cmp
shll
nop
sahf
cld
and
call
xlat
pop
je
mov
adc
loop
bound
sbb
jb
test
stc
clc
rcr
jge
mov
pop
sub
icebp
or
mov
in
add
push
xor
inc
dec
xorl
int
andl
adc
cmp
jl
cmp
and
shlb
add
xor
inc
insb
mov
call
xchg
iret
xchg
leave
fsubr
add
and
pop
jp
ds
mov
sarl
sbb
nop
mov
jnp
xor
mov
aaa
roll
sub
pop
imul
je
sbb
int3
lcall
iret
xor
enter
out
out
jbe
andl
sub
lret
test
xor
cmp
test
rcrb
scas
and
mov
pop
xlat
lods
mov
negl
xor
dec
dec
sub
pusha
cltd
push
in
inc
inc
sbb
mov
in
sbb
fiadds
into
jne
mov
outsb
xchg
lcall
mov
fdivs
cli
pop
mov
movsl
cli
jmp
mov
mov
sbb
jne
in
test
fst
mov
mov
inc
add
enter
adc
aam
out
sar
xor
push
mov
int3
sbb
push
mov
sbb
dec
lods
in
mov
jns
iret
mov
xor
sbb
ret
nop
ja
xlat
dec
push
daa
and
cltd
pushl
ljmp
fiaddl
imul
add
jecxz
adc
les
dec
mov
pop
jbe
mov
adc
push
lock
sub
es
jl
xchg
pop
add
sub
dec
arpl
sbb
jbe
sarb
jo
xchg
fwait
icebp
out
and
stos
adc
mov
add
cmp
pop
push
nop
ss
cld
mov
pop
xor
gs
lock
pusha
shrl
pop
pop
loope
jns
jecxz
popf
jge
sub
mov
fs
push
sbbl
inc
je
into
test
aas
mov
dec
repnz
xor
jge
sub
loope
jecxz
sahf
push
lods
jecxz
insl
sahf
dec
inc
inc
fdivrl
int3
mov
mov
inc
leave
test
out
cmp
pop
rolb
or
sub
sahf
pop
out
mov
mov
push
movsb
std
dec
xchg
adc
jns,pn
or
cmp
adc
dec
das
cmp
outsl
dec
mov
int
inc
dec
in
add
inc
xorb
sbb
pop
fs
mov
xor
sub
dec
mov
mov
int3
int
jg
mov
ss
cmp
xchg
imul
sub
mov
lods
cmp
mov
orl
idivl
fimull
das
xchg
aam
insl
gs
add
cmp
mov
in
jae
xor
faddl
fistps
filds
cmp
jg
aad
ror
xor
xlat
loop
jns
xchg
repz
das
psrad
fdivrs
xor
lret
and
lret
pop
movsl
mov
pop
imul
in
icebp
imulb
jmp
scas
shrl
adc
mov
inc
push
addr16
sbb
icebp
lret
cmp
das
pop
mov
mov
inc
shlb
sbb
cmp
mov
fwait
jge
and
sbb
sbb
in
stos
jne
popf
add
popa
fsubs
pop
xchg
xor
push
fwait
push
cmp
cmc
xchg
mov
adc
or
mov
xchg
xor
jp
cwtl
pop
es
addr16
in
mulb
sbb
or
push
es
mov
jo
add
mov
stos
jg
pop
inc
ds
leave
pop
mov
stc
test
in
cli
into
and
rcrb
xorl
aaa
jne
lods
insl
imulb
cwtl
popa
aad
fldt
stos
sbb
out
push
test
stos
push
or
movsl
fsubrs
jns
ss
test
popf
mov
jmp
jns
pop
nop
scas
inc
in
sbb
sbbb
ret
pushf
mov
mov
outsl
fcmovne
or
arpl
cmp
fmul
xor
sbb
shlb
jbe
sbb
imul
sbb
xchg
push
sbb
inc
pop
jmp
mov
sub
and
xchg
fists
push
jp
not
cs
lods
ret
decl
mov
repnz
push
insl
test
loopne
insl
addr16
lret
test
scas
aad
cld
aas
xor
scas
dec
mov
fwait
dec
cmp
jns
mov
pop
mov
xor
push
jle
dec
cmp
push
cmp
push
mov
pop
cld
js
enter
or
dec
mov
inc
cmpb
mov
jbe
jo
or
xchg
mov
add
lea
adc
mov
xor
jbe
inc
ficoms
sub
xchg
mov
pop
test
inc
adc
cmp
pop
adc
dec
inc
insb
leave
roll
stc
adc
sub
xchg
test
stc
jae
sbb
and
incb
mov
inc
cmp
xchg
cmp
jno
shlb
push
or
push
push
fsubs
cmp
fwait
dec
rol
mov
into
aad
filds
cmc
cld
add
jne
sbb
dec
push
out
into
push
jne
dec
bound
inc
pop
aam
popa
in
xchg
push
or
loope
pop
or
xchg
xor
xchg
adc
add
data16
jmp
lret
xor
lcall
call
cwtl
loop
aam
lret
insb
jbe
lock
and
xchg
mul
pop
mov
lods
and
insl
jle
cmp
pop
cmp
popf
pop
xlat
lret
in
sbb
scas
dec
shrl
outsl
lahf
or
fdiv
push
icebp
scas
jne
adc
cmc
xor
scas
int3
push
out
or
ret
test
push
dec
out
dec
test
jne
int
cwtl
jo
movsbl
fcomps
mov
pop
lods
aam
dec
inc
dec
roll
xor
add
xchg
sbb
cmp
loope
or
jne
push
test
std
sub
mov
jb
or
jne
mov
push
imul
je
cmp
sub
or
mov
mov
jle
xchg
sub
gs
pusha
adc
adc
xchg
push
xchg
mov
lahf
sbb
data16
cwtl
pop
cs
pop
adc
mov
mov
sar
out
pushf
inc
loopne
xchg
inc
enter
mov
les
adc
xchg
push
mov
xor
or
andl
push
loop
gs
pop
repnz
imul
xor
enter
jge
js
mov
test
xchg
jns
xchg
xchg
fstpt
and
and
je
push
outsl
mov
and
mov
sahf
jno
mov
roll
into
pop
int3
repnz
push
mov
aam
sbb
shrb
lret
sub
sar
sub
fcmovnu
dec
fisubrs
cmp
pushf
in
cwtl
add
cmp
and
sbb
or
xlat
inc
ja
mov
sbb
adc
out
mov
jns
adc
cmp
les
push
rcl
xor
test
mov
cmp
rorl
sti
inc
in
jmp
lods
jge
sarl
push
imul
xchg
cltd
nop
std
inc
jge
push
das
jle
in
pop
dec
and
mov
sub
adc
push
or
pop
inc
ds
lret
pop
pop
out
sub
mov
cwtl
and
popa
iret
cwtl
stos
insl
push
fs
push
orl
or
push
sbb
aam
notb
sbb
ds
mov
adc
inc
cmp
scas
insl
dec
fst
jae
xchg
sti
add
sbb
adc
cmpb
pop
rorb
stos
sub
push
fs
into
mov
push
fidivs
ss
scas
push
mov
mov
lahf
pop
mov
jle
cmp
dec
data16
pop
loop
mov
aas
mov
sub
inc
fstpl
daa
daa
insl
sbb
push
adc
xchg
dec
or
xchg
cmc
inc
cld
scas
mov
add
fucomi
arpl
add
idiv
cmpsb
or
outsb
js,pt
pusha
adc
sbb
add
xor
in
movsl
cmp
mov
pushf
xor
mov
cmp
or
test
cmp
add
in
subl
inc
rol
enter
xor
loope
push
icebp
loopne
jb
and
mov
ret
out
mov
je
sbbb
es
aam
scas
popf
jb
int3
out
xchg
aas
icebp
cmc
arpl
adc
inc
leave
jmp
xchg
cltd
js
cs
pop
mov
aaa
mov
cmpsb
mov
loop
outsb
mov
sbb
xchg
jne
test
and
out
adc
aam
andb
mov
jge
in
xorl
sbb
test
mov
add
jbe
testl
stos
push
push
and
js
test
push
and
lea
push
cmpb
pushf
mov
jmp
and
aaa
or
insb
jl
cmc
loope
pop
lods
mov
insb
lea
daa
inc
js
mov
mov
pop
loop
mov
subb
sub
dec
in
faddl
imul
lds
fisubrl
and
mov
loop
push
mov
subps
pop
sub
daa
inc
sub
pop
test
int3
mov
outsb
hlt
mov
gs
and
sub
xchg
jle
mov
sub
aam
mov
stc
add
pusha
adc
inc
jmp
sub
cwtl
ret
movsb
mov
dec
stos
jge
ja
fisttpll
dec
pop
mov
xor
in
xchg
cltd
add
ja
push
or
jl
das
rcrb
xchg
push
xor
adc
lock
rolb
cltd
sbb
mov
or
mov
mov
dec
divb
mov
lret
push
lea
cmpsl
ljmp
jae
roll
ret
test
es
push
sbb
ss
mov
push
inc
loope
dec
jp
insl
repz
test
inc
or
xor
outsl
andl
adc
mov
inc
dec
mov
or
subb
or
push
add
call
push
sarb
cltd
pop
sbb
xchg
fs
sahf
mov
push
adc
sub
aad
sub
ja
inc
add
aad
insl
int
mov
dec
addr16
and
scas
leave
fdivl
jge
xchg
pop
shll
jmp
pop
arpl
loopne
adc
push
mov
es
incb
das
aad
and
sbb
jmp
sub
adc
xlat
sti
jmp
lock
cwtl
lret
mov
xlat
mov
lods
push
sti
in
jbe
inc
or
mov
and
insl
jle
ror
dec
add
mov
repz
sub
data16
lds
and
push
xchg
jae
xchg
inc
push
aas
test
adc
cmpsb
repz
mov
jae
xchg
bound
mov
mov
hlt
adc
addr16
es
pop
xchg
popa
mov
mov
frstor
xchg
outsb
adc
outsl
sub
ret
fdivl
dec
ret
pop
mov
lods
nop
jmp
shrb
mov
dec
test
mov
ds
mov
pop
cmpsb
cltd
jecxz,pn
into
dec
mov
lahf
pop
movsl
repnz
jns
push
push
int
int3
int
cli
in
dec
mov
movsl
imull
test
je
test
sub
outsl
push
push
in
inc
push
jecxz
or
mov
inc
ss
mov
mov
or
adcb
adcl
mov
xchg
fcomps
jbe
cmpsb
cld
inc
pusha
not
outsl
add
push
fwait
lds
sbb
pop
dec
arpl
lret
inc
push
flds
inc
adc
dec
xchg
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
andl
adcl
addl
mov
ret
or
sub
pushf
shl
gs
or
push
mov
or
ljmp
pop
or
inc
push
rcrb
xor
mov
popf
mov
das
pop
pop
aaa
mov
insb
dec
in
stc
cmp
cmpsl
jno
shr
dec
push
mov
adc
stc
lret
data16
cmp
add
pop
cmp
mov
cmpl
sbb
test
repnz
lock
mov
sti
out
dec
push
in
xchg
outsl
mov
or
sti
mov
pop
jb
push
notl
lock
adc
mov
clc
xchg
xor
shlb
inc
dec
mov
inc
imul
int3
push
inc
mov
push
iret
in
dec
adc
leave
cs
lock
sbb
add
repnz
loop,pt
adc
scas
mov
sbb
fbstp
mov
stos
or
in
sbb
mov
dec
lret
dec
pop
arpl
repz
je
mov
cmp
cli
lock
mov
jno
dec
jne
mov
sahf
lds
leave
mov
mov
pop
push
js
stos
nop
stos
fcoml
scas
sbb
ficompl
imul
cld
adc
std
mov
mov
arpl
dec
jmp
sbb
lds
lret
adc
jl
or
inc
jne
or
or
stos
enter
nop
inc
cmpsl
addr16
jae
or
jnp
rcrl
pop
outsl
cmp
jbe
xchg
and
or
scas
loopne
mov
in
int3
shlb
sub
xchg
push
orb
inc
and
dec
jno
rolb
sbb
ds
cmp
sbbb
sbb
mov
and
fiadds
repnz
jl
ss
mov
lret
insb
adc
inc
xchg
mulb
in
adc
arpl
pop
and
inc
cltd
pop
xor
xchg
cmc
cmp
test
xchg
insb
sbb
adc
inc
mov
outsl
pop
iret
or
imul
andl
inc
scas
xchg
dec
adc
mov
mov
xorl
sbb
add
dec
ffree
mov
pusha
mov
cltd
mov
popa
mov
add
fnstenv
dec
adc
inc
and
sub
adc
stos
mov
push
movsl
sbb
inc
adc
mov
jns
test
inc
fistl
adcb
mov
loop
addl
movsb
mov
inc
xchg
popf
in
cmp
push
test
sahf
fldl
adc
mov
ljmp
scas
mov
and
xchg
or
loop
cmp
inc
ds
fmuls
out
fisttps
mov
jl
inc
repz
stc
jle
cmp
fdivrs
cmp
in
push
lds
adc
cmpsb
push
faddl
xchg
sbb
aad
out
inc
push
leave
lods
add
cli
mov
out
mov
stos
mov
in
or
add
nop
inc
pusha
cwtl
jmp
and
xchg
fadd
ret
dec
lea
and
ret
inc
pop
inc
push
xor
sbb
sub
ljmp
jmp
cmp
inc
push
imul
xchg
pop
sbb
leave
scas
out
out
lea
hlt
pop
mov
jp
jg
pop
cmp
cmpsl
xor
xchg
jge
rorb
negb
jge
stos
cmp
out
jnp
pop
ja
addr16
jge
ljmp
imul
and
aas
cltd
mov
mov
sub
push
in
test
rol
scas
fnsave
nop
inc
and
cmc
xchg
scas
xchg
jb
insl
rorl
into
ret
js
xchg
adc
aad
cmp
or
jne
dec
mov
cmp
fbld
sub
addr16
sbb
or
jge
div
cmpsb
and
mov
inc
pop
xchg
xchg
or
out
out
lret
mov
push
fs
jmp
push
jmp
push
or
fnstenv
sbb
or
cmpsl
mov
into
fadds
pop
push
shl
sarb
xchg
sbb
movsb
fcoml
into
jae
aas
lds
sub
mov
adc
pop
jg
mov
push
aas
mov
sub
inc
sti
adc
pop
push
sub
imul
adc
inc
movsb
imul
shlb
dec
fsub
lret
mov
ja
and
xchg
dec
cli
arpl
insl
or
push
dec
push
repnz
and
insb
mov
cmp
inc
xchg
or
xchg
out
add
pusha
cmc
push
stos
lock
xchg
jl
dec
outsb
outsl
mov
out
xchg
push
push
scas
ret
cmp
mov
mov
push
fs
imul
jge
xor
jecxz
jmp
fsubrl
push
shrb
ficoml
push
sub
cmp
ret
les
loopne
mov
or
jae
jb
repnz
fs
jbe
jg
imul
mov
jecxz
test
aam
daa
jno
test
adc
mov
fimull
mov
add
adc
jne
and
sti
add
aad
hlt
jg
jmp
pxor
jmp
movsb
pop
jno
mov
jo
pop
arpl
mov
nop
xchg
inc
arpl
push
add
inc
jp
sub
test
ds
cld
lahf
and
fwait
and
mov
add
dec
lcall
sub
fsubrl
cmpl
cmc
in
cmp
xchg
fldcw
add
loope
in
adc
divb
out
sub
inc
out
loopne
cmp
orb
jo
xchg
popf
aam
shrl
repnz
sbb
cmc
jae
out
popl
xchg
call
mov
mov
xor
repz
sbb
or
shll
aam
or
arpl
mov
je
subb
jo
mov
fldt
aam
cmpsl
int3
pushf
cmpsl
fwait
sbb
mov
cmpsb
pop
in
test
repz
sar
pop
repz
ja
adc
sbbb
xchg
andl
leave
jbe
sub
stos
jle
mov
push
je
xchg
push
inc
js
lds
je
mov
les
fldenv
or
sbb
mov
mov
scas
nop
xchg
sbb
lea
push
inc
icebp
leave
dec
mov
or
xor
dec
gs
cmp
adc
test
out
fisubrs
xchg
stos
aas
outsb
sbb
sub
iret
or
loopne
mov
mov
bound
xor
hlt
mov
and
loope
mov
or
adc
or
outsl
adc
mov
dec
andl
scas
pop
cmp
dec
jbe
js
int
xchg
pop
pushf
inc
out
or
mov
data16
ljmp
fsubp
mov
es
cld
sbb
ds
or
aam
cmpsb
mov
mov
xchg
add
aad
inc
inc
test
imul
cld
mov
push
push
push
ljmp
inc
scas
cmp
mov
lret
cmpsl
out
xchg
lods
dec
es
and
sbb
mov
dec
add
lock
or
cmp
outsl
les
icebp
or
mov
rcr
mov
ret
sub
xor
movsl
arpl
add
js
aas
push
inc
aas
int3
pop
jo
xlat
jne
sbb
hlt
push
sbb
mov
xorl
xchg
add
pop
pop
loope
loop
jae
movsl
sub
pop
pop
or
jmp
or
sub
ficoml
ret
je
popa
gs
cltd
push
dec
mov
jge
xchg
add
mov
mov
push
cmpsb
mov
mov
mov
ds
cli
or
cmc
push
xor
cmpsl
lcall
ret
daa
fistl
push
mov
lret
push
cmp
jne
lahf
mov
test
xlat
mov
pop
or
dec
lods
sbb
inc
mov
rolb
dec
push
jp
xchg
aam
aad
xor
mov
pop
in
stc
inc
cmpsb
mov
pop
leave
pushf
adc
adc
lods
movsl
dec
lcallw
repz
les
mov
test
dec
test
inc
in
aam
sub
lea
inc
mov
jp
xchg
dec
shlb
je
add
sub
movsb
mov
inc
std
push
cmp
lods
pop
jl
in
sbb
mov
out
inc
lret
push
inc
bound
ret
push
xchg
dec
add
out
jg
push
push
je
xlat
and
mov
loope
stc
movb
sub
addb
sti
and
sbb
add
shrb
sbb
or
xchg
or
rcrb
dec
out
mov
mov
pushf
xchg
jbe
sahf
pop
sub
mov
in
dec
push
pop
or
cmp
inc
xor
and
mov
sub
into
cld
mov
rcr
jo
sbb
xchg
xor
or
mov
mov
jne
cmp
adc
dec
repnz
in
push
pop
cli
test
shrb
aam
pop
mov
ljmp
cmc
sub
sbb
ss
stc
or
sti
sbb
ss
dec
pop
ret
lds
sub
fistl
xchg
mov
and
sbbl
mov
test
mov
xor
sbb
cmp
or
mov
insl
fldl
and
mov
xchg
sbb
sti
popf
arpl
test
je
out
sub
xor
pop
ret
dec
dec
add
jmp
insl
xchg
push
leave
sbb
mov
call
loopne
mov
test
push
mov
push
sub
mov
lock
cs
inc
nop
dec
clc
repnz
shlb
outsb
es
sub
gs
jle
retw
mov
sbb
lds
aam
add
pop
pop
jle
push
cmp
pop
popl
xor
shll
cmpl
cmp
add
mov
int3
insb
push
aam
stos
pop
test
mov
imul
das
test
dec
sub
scas
mov
add
loopne
pop
cmpsl
repz
aad
ret
and
outsl
fwait
addr16
fisttpl
xchg
sbb
xchg
push
pop
jns
cmp
inc
or
or
outsl
xor
ja
cmc
fldt
jp
std
lock
push
insb
mov
and
fwait
data16
xor
and
aad
and
lcall
sub
leave
lret
out
sub
push
jbe
fsubrs
inc
scas
ja
in
subl
ja
or
loope
sbb
aaa
jl
adc
xchg
adc
sbb
pop
xchg
pop
pop
bound
rcl
mov
inc
add
or
ret
push
lock
pop
mov
cmp
adc
addl
jne
ret
cmpsl
push
arpl
ljmp
int
ss
pushf
sub
jle
loop
xchg
test
sahf
dec
mov
subb
push
xchg
sbb
pop
in
inc
mov
mov
jmp
sub
gs
jbe
jge
hlt
ss
jo
jae
mov
shl
push
push
pusha
iret
mov
pop
and
stc
push
lods
xor
sbb
loop
out
popa
cltd
and
xor
sar
mov
inc
call
daa
jo
cs
cwtl
mov
cmpsl
push
add
lods
stos
jns
inc
sbb
xchg
stc
movsb
fidivs
int
pop
dec
xor
lahf
sub
aas
fnstcw
clc
sub
jo
scas
sub
push
mov
cmc
pop
mov
and
in
test
sahf
inc
dec
cmpsb
mov
mov
xchg
sti
sub
mov
js
jl
outsb
or
fcmovnu
fnstenv
insl
inc
push
pop
and
sti
inc
xorb
scas
out
mov
daa
mov
push
xor
sarl
fwait
sbb
pop
xchg
sar
pushf
mov
push
idiv
aam
imul
les
ljmp
ljmp
push
xchg
fwait
inc
mov
call
xor
shr
mov
mov
push
jl
add
lock
dec
push
out
mov
scas
arpl
lock
stos
and
sti
xchg
jbe
or
push
mov
adc
jno
stos
std
pop
xor
pop
divl
fistps
stos
rclb
dec
stos
popa
push
mov
icebp
sub
push
xchg
das
stos
cltd
cmp
test
sub
or
mov
push
sub
sub
sub
es
lret
sub
and
pop
clc
pop
insl
iret
push
push
inc
inc
into
test
sub
or
inc
divb
ja
jbe
mov
add
sti
xchg
mov
pusha
lock
icebp
xchg
xor
mov
xchg
push
scas
and
mov
dec
inc
aad
push
xor
jmp
mov
pop
insl
lea
mov
into
sub
adc
out
icebp
pop
push
add
imul
sub
mov
imul
movsb
lods
push
push
jo
sbb
in
fisubl
scas
insl
rcrl
or
xlat
popa
xor
pop
outsb
icebp
xlat
test
fs
daa
out
cwtl
jb
pop
shll
ljmp
cmpsb
rcll
or
sar
aaa
shll
popf
and
push
mov
std
out
inc
dec
and
shl
sub
insb
or
dec
out
cmp
out
arpl
shrb
es
cmp
cmpsl
out
mov
sti
mov
out
cld
stos
and
inc
or
xchg
jo
sbb
cmpsl
lcall
xor
gs
data16
in
or
rorb
out
lahf
jne
dec
jge
inc
icebp
in
pushf
xor
mov
jg
shl
ja
popf
mov
hlt
adc
pop
loope
and
or
sub
push
into
sub
daa
pop
mov
fistpl
cmpsl
mov
push
loop
sbbb
aam
lds
xor
xrelease
lret
incl
js
jecxz
pop
shr
or
sbbl
adc
mov
aad
shrl
fsubrl
and
jl
fisttpll
jno
push
or
call
lcall
fisttps
jp
popa
pusha
adc
lahf
les
ficoml
fstpt
jnp
aam
cmpsb
mov
fdivs
push
insb
inc
test
mov
testb
roll
mov
adc
jp
and
cmp
stc
cld
in
test
iret
jmp
sbb
jnp
xor
stos
outsb
xchg
leave
jp
mov
stc
mov
jmp
and
jb
stc
push
mov
int
adc
fidivs
rorb
xor
orb
int
push
sbb
pop
out
cmc
pop
inc
jbe
mov
das
imul
cmp
shlb
mov
adc
xor
mov
add
and
std
jl
ds
repz
insb
pop
imul
jle
out
push
bound
push
xchg
mov
mov
andl
stos
sbb
loopne
vprotd
push
sub
std
jne
or
jb
mov
dec
cwtl
jecxz
dec
lret
inc
jg
aam
pop
or
inc
lea
into
jno
mov
dec
cmp
popf
jb
arpl
and
jmp
jbe
lods
sub
subb
shrb
xor
inc
push
inc
cmp
orl
roll
jnp
add
sub
notl
and
push
mov
jle
frstor
lds
jae
cmp
mov
push
repz
cmpsb
xor
insb
sub
mov
xor
or
xchg
xor
dec
lcall
cmpsl
into
cli
jg
jg
pop
leave
push
lds
mov
pop
fstpt
loopne
or
test
loopne
mov
dec
push
and
lret
fsts
or
push
sahf
pushf
lahf
pop
int
lock
add
out
or
mov
std
mov
jne
xchg
ljmp
push
iret
sbb
pushf
mov
xchg
nop
and
mov
dec
adc
lahf
add
jecxz,pt
or
scas
es
push
jmp
pusha
clc
lea
sub
adc
aad
fisubl
enter
imul
popa
jp
lret
pop
in
push
popa
mov
mov
in
sub
outsl
dec
xor
in
add
fisubl
dec
xchg
jmp
push
xchg
ja
dec
mov
icebp
pop
cmp
cmc
nop
jb
adc
vmovupd
mov
add
jbe
push
loope
pop
push
fstl
in
arpl
sub
mov
filds
xchg
sbb
inc
ret
mov
dec
shlb
or
add
xchg
cwtl
mov
xchg
enter
jl
arpl
sub
xor
cmp
inc
es
pop
das
pop
mov
mov
add
js
mov
xor
xor
mov
arpl
das
and
aas
gs
xchg
dec
test
insl
dec
mov
xor
imul
out
xchg
xchg
push
jae
stos
divl
cmc
out
mov
out
or
inc
mov
add
or
nop
fsts
add
mov
sbb
movsb
cmp
push
lahf
push
sub
mov
addr16
sub
rcr
or
inc
fdivrl
lods
dec
pusha
xorb
pop
aad
jecxz
lods
push
push
xchg
movb
mov
bswap
add
sbb
js
mov
iret
outsb
jmp
sti
mov
jle
sub
pop
icebp
pop
mov
insl
add
or
pop
jo,pn
fdivr
dec
pop
jno
mov
and
pop
loope
push
mov
push
mov
jmp
lahf
inc
cmpxchg
pop
and
aaa
pop
sub
lds
fs
mov
sbb
dec
mov
mov
lea
test
pop
dec
pop
mov
sub
leave
pop
dec
jbe
sub
int3
enter
test
push
xchg
daa
outsl
add
scas
scas
adc
test
ljmp
mov
jne
add
arpl
mov
mov
pop
imul
ss
jae
ficompl
dec
add
cwtl
in
pop
out
stc
pop
nop
adc
mov
mov
cld
jge
ficomps
inc
push
mov
sub
inc
stos
fisubrl
dec
xchg
cmp
in
fwait
dec
jl
push
xchg
push
sub
roll
mov
aam
fs
pop
lods
insb
add
push
sub
loope
adc
push
and
mov
dec
fiadds
jge
outsl
and
mov
add
stc
lock
and
pop
or
fs
inc
call
xchg
add
and
xor
bound
cmpsl
js
xchg
jle
sub
dec
popl
mov
daa
fnsetpm(287
lds
add
cltd
dec
fldl
lcall
lea
push
movsl
in
enter
xor
lret
ret
mov
push
add
inc
mov
and
push
aam
aam
jae
cmc
dec
sbb
ret
into
sbb
jbe
add
ret
notb
inc
std
scas
mov
aad
nop
mov
stc
fistps
mov
sub
mov
orb
pop
lock
mov
out
add
cmp
iret
out
lret
sbb
or
sbbl
lret
inc
cld
xchg
jnp
daa
fistpl
adc
dec
sar
add
scas
subl
stos
stc
or
mov
xchg
loop
jmp
and
sub
out
adc
pop
mov
test
loopne
jnp
push
xchg
int
mov
popf
jo
lahf
les
testl
inc
lret
das
sbb
sbb
sub
push
lds
pushf
pop
cmp
sbb
rorl
gs
test
mov
ss
lret
push
or
stc
cmc
add
sti
inc
and
int3
int
sbb
push
mov
sub
sbb
cmp
xchg
dec
add
push
xchg
xor
push
sarl
or
lcall
loopne
inc
and
mov
scas
gs
and
add
rclb
mov
mov
push
mov
ret
enter
adc
lret
popf
xor
push
pop
xlat
pushf
add
adc
and
xchg
jecxz
jae
je
arpl
xor
jg
repnz
xchg
inc
dec
mov
sahf
xor
jae
outsb
xchg
xor
jno
xchg
in
sub
js
test
lock
inc
xchg
lods
rol
push
aam
clc
daa
xor
pop
pop
pop
pop
cmpsb
mov
xchg
inc
push
mov
or
hlt
sarb
arpl
sarl
and
mov
mov
sbb
sub
pusha
scas
pop
jle
jns
pop
push
cltd
jbe
sbb
jp
sub
cltd
jmp
movsl
jmp
aas
add
sbb
adc
jno
into
andl
je
js
je
add
fnstsw
fcmove
out
adc
pop
cmp
cwtl
or
pop
mov
negb
push
sub
incb
scas
push
mov
je
xlat
cld
add
hlt
push
in
and
mov
loop
add
xlat
xchg
inc
and
xchg
mov
mov
fstpl
inc
lds
jmp
ljmp
jle
jecxz
shrd
pop
fs
sbb
cs
mov
shl
hlt
jno
fisubs
pushf
and
mov
mov
adc
push
xchg
cmp
push
add
ret
mov
jno
pop
jle
dec
rorl
cmp
sub
push
sbb
fsub
fldt
daa
sub
pop
cmpsl
out
lods
mov
fstpt
cmpsb
jmp
inc
jge
fdiv
rol
and
out
dec
jo
and
loopne
xchg
inc
mov
inc
icebp
jbe
add
insb
ss
call
dec
xor
in
mov
in
inc
jg
push
cmp
mov
add
enter
and
xchg
xchg
notl
dec
add
mov
jg
in
lahf
imul
sub
push
nop
dec
movaps
test
push
neg
push
pushf
sbb
pop
mov
inc
inc
lret
popa
int
mov
pop
mov
push
mov
mov
jno
cld
cmpb
xor
dec
mov
adc
aaa
pop
pop
jle
cmp
xor
xchg
cmp
bound
push
fisttpll
out
sbb
std
test
or
mov
adcb
lods
sbb
jae
and
popf
je
test
fidivrl
xchg
cli
mov
mull
xor
jmp
push
cmp
or
xor
sub
mov
jge
xlat
setg
adc
fimuls
or
jo
add
or
test
icebp
test
outsl
es
push
outsl
hlt
inc
lods
sbb
sub
cmc
lods
adc
enter
and
js
or
sub
xlat
aam
mov
or
rcrb
fadd
jge
jb
adc
inc
jecxz
jo
sbb
popf
into
movsb
jnp
rolb
mov
cmp
dec
adc
jmp
mov
or
lds
inc
push
movsb
pop
es
movsb
jmp
adc
jns
xchg
jnp
ficoms
fld
ret
fimull
scas
test
mov
and
inc
into
stos
mov
add
in
xchg
jnp
xchg
das
mov
sub
mov
out
cwtl
push
stos
push
jmp
clc
lahf
icebp
repz
cli
insl
dec
dec
scas
add
push
pusha
or
or
stos
lret
mov
add
repnz
sbb
int3
aas
out
mov
imul
xchg
adc
or
xchg
cmp
aas
fldcw
jns
mov
mov
xchg
and
in
mov
mov
adc
pop
inc
shlb
sbb
in
iret
push
rcrl
or
loope
adc
mov
mov
popf
push
popf
xchg
inc
in
aad
mov
in
sar
cmpsb
mov
inc
cmpsb
sbb
inc
xchg
das
xor
jp
add
outsb
mov
pop
push
add
out
cmp
out
test
data16
pop
push
mov
mov
hlt
cltd
rcl
fstpt
mov
pop
fucomip
push
cmp
ror
ss
pop
stos
ljmp
stos
clc
cmp
jae
cmpsb
test
sahf
pop
pop
lock
xlat
mov
xchg
out
out
call
dec
mov
sub
mov
sbb
xchg
aam
mov
push
xchg
inc
imul
or
jae
das
aaa
clc
insl
and
aaa
std
xor
lret
mov
jecxz
push
in
je
out
lahf
pushf
ja
pop
inc
sti
mov
mov
xchg
dec
rorb
sahf
inc
sub
add
push
rcll
sub
shrb
push
enter
pop
or
xor
enter
and
dec
aaa
jne
mov
push
int3
loop
inc
cmp
jl
dec
xchg
and
sbb
inc
loop
dec
cmp
add
sarl
inc
xor
add
dec
bound
cmp
sub
rep
sbb
xchg
adc
dec
jbe
stos
popa
pusha
inc
push
push
icebp
xor
arpl
sbb
shrb
lahf
insb
lods
xor
cwtl
dec
jge
mov
pop
push
push
aad
jecxz
push
pushf
sub
shlb
sub
mov
not
pop
daa
adc
sti
sub
sub
xor
pop
or
fistl
adc
inc
loope
xchg
arpl
dec
push
jg
and
mov
imul
sub
fisubs
xor
jle
rolb
mov
dec
push
movsb
mov
sub
fistpl
out
push
leave
imul
mov
sti
push
xor
fwait
jns
icebp
dec
mov
in
sub
imul
mov
es
fidivrs
inc
lods
and
pop
mov
aad
test
push
shll
movl
std
mov
sbb
in
ss
idiv
ljmp
sarb
pop
jp
xor
fldlg2
xor
mov
mov
test
xchg
pop
movsl
in
pop
pop
dec
xchg
stos
adc
mov
dec
mov
mov
stc
test
sub
xor
jp
jb
mov
idivl
xor
int3
mov
inc
cmp
fidivrl
jns
pop
aam
aas
call
mov
jne
dec
fildl
dec
mov
sbb
inc
clc
xchg
mov
cwtl
mov
ljmp
dec
push
xchg
cmp
mov
into
pop
rcll
pop
xchg
cld
out
mov
jmp
ds
pop
movlhps
pop
mov
ljmp
negb
gs
jge
dec
sub
jp
jge
bound
call
flds
mov
pop
inc
gs
mov
cmp
out
and
stos
test
jae
xchg
pop
lock
and
loope
sub
inc
add
arpl
xlat
hlt
sub
jno
movsb
test
adc
stos
pop
sub
dec
hlt
xchg
jle
or
daa
sub
test
pop
mov
jbe
push
xchg
xchg
pop
int
les
loopne
or
mov
xor
sbb
fsubrp
out
aas
and
inc
pop
decb
and
add
roll
arpl
mov
enter
ljmp
add
aad
cld
popa
add
inc
in
je
lret
shlb
inc
sbb
sbb
adc
fldt
sbb
push
into
adcb
jmp
push
int3
mov
lret
jge
daa
xchg
pop
pop
inc
pop
fdivrl
jle
das
xchg
mov
mov
jbe
sub
push
sti
cld
push
xor
add
sarb
dec
lods
pop
nop
pop
sub
ja
lcall
dec
movsb
gs
jo
push
fistl
lret
mov
call
mov
sar
mov
add
icebp
into
mov
cmc
leave
mov
pop
sbb
and
add
sub
jp
xor
push
add
cmp
and
adc
insb
data16
jae
sbb
inc
fs
jmp
inc
dec
xchg
loopne
enter
ja
sub
js
push
mov
mov
mov
pop
mov
xchg
repz
sub
mov
mov
dec
leave
in
jle
neg
cmp
xorl
lock
cmpsb
pop
adc
arpl
mov
mov
and
dec
aaa
fisttpll
dec
xor
jle
fwait
scas
sbb
jge
inc
jbe
mov
dec
and
rcr
push
xchg
fldcw
cs
inc
mov
pop
enter
cmc
shl
je
sbb
ret
dec
mov
pop
into
cmp
xlat
push
cs
dec
mov
je
repz
subb
call
out
push
mov
mov
lahf
mov
and
cmpb
pop
jecxz
mov
popf
lcall
mov
and
int
nop
out
cmp
jmp
push
or
and
subb
lea
cmp
sub
scas
xchg
sub
popf
mov
push
cmp
mov
insl
jo
adc
jl
inc
daa
call
mov
pop
call
pop
es
jb
daa
sub
inc
es
add
or
cmp
mov
push
inc
and
stos
adc
mov
std
iret
popf
in
push
jl
sti
jns
dec
ljmp
fadds
mov
mov
adc
dec
lds
mov
mov
xlat
setg
cmpsl
in
mov
dec
stc
push
sbb
dec
inc
push
frstor
xor
fists
mov
xchg
mov
xor
ja
cmpl
sub
iret
mov
xorl
mov
ss
sub
or
push
pop
cld
push
pop
and
lret
lods
sub
pusha
and
ja
lods
insl
nop
aam
mov
outsl
cmp
jg
or
movsb
cmpsl
decb
lret
movups
stos
mov
add
push
add
ficomps
fwait
dec
js
insb
add
inc
testb
cmpb
fs
adc
jg
nop
push
and
cmp
dec
ret
insl
sbb
adc
mov
fsubrs
push
sbb
cmp
xor
xor
sub
adc
je
insb
jnp
sub
sbb
scas
fisttpll
xchg
push
js
sub
add
cmp
push
xchg
xchg
push
sarl
fucomi
dec
mov
sub
je
mov
std
mov
ds
xchg
sub
cltd
cmp
mov
insl
loopne
dec
sbb
or
dec
movsb
sbb
dec
dec
les
daa
sub
push
lahf
push
test
jecxz
ja
push
sbb
pop
cmp
hlt
dec
int3
aam
jo
out
std
bound
cmp
dec
adc
mov
insb
std
xchg
imul
push
mov
imul
jge
cld
inc
jo
shrb
lret
jmp
adc
test
pop
xor
xchg
inc
addb
cmp
popf
mov
mov
lcall
xor
into
push
daa
fists
mov
and
icebp
xchg
es
inc
mov
into
iret
adc
jle
sub
jae
cmp
push
dec
rcll
xchg
out
pop
jl
mov
repz
jns
jnp
test
sbb
test
and
fstps
jle
lea
mov
inc
xorb
mov
xor
push
sbb
arpl
les
bound
add
jle
jmp
fnsave
push
pop
fisttpl
fdivrs
mov
xor
scas
clc
aad
loop
xor
sub
and
scas
nop
andb
sub
push
xchg
xchg
mov
jne
fwait
mov
and
mov
std
xchg
std
pop
xchg
mov
dec
and
jg
cmp
and
mov
or
mov
inc
sbb
jle
cmp
mov
xchg
dec
xchg
mov
and
add
out
mov
outsl
jp
sti
scas
shll
push
push
enter
hlt
out
sbb
ror
adc
ror
mov
fildl
ret
push
adc
sbb
push
clc
fsts
dec
cmp
gs
jecxz
and
push
pop
xor
cmc
or
sub
cmpsw
add
int3
mov
push
test
dec
ret
lods
dec
mov
ror
mov
or
sahf
sub
xchg
sbbl
mov
sub
imul
jp
xor
xchg
jae
pop
jmp
push
loop
and
lds
aam
push
jl
scas
ljmp
sub
cmp
jbe
add
push
lds
dec
push
add
adc
js
sbb
shrl
and
mov
insl
pop
aam
xchg
or
stos
into
cs
dec
loopne
ja
int
pmulhuw
js
jne
test
insl
in
mov
cld
imul
xor
jl
sbb
js
nop
leave
scas
sbb
mov
lret
mov
lods
cmc
and
cli
or
xor
out
notl
inc
out
out
adc
stos
sub
pop
leave
xlat
cmp
test
test
xor
popf
mov
or
stc
jnp
sub
movsb
xchg
adcl
lcall
fdivp
enter
jne
xchg
es
push
gs
sti
popa
lret
in
mov
add
and
icebp
mov
addr16
add
loop
mov
mov
outsb
sub
stc
push
repz
xchg
mov
sbb
or
out
lahf
inc
test
cltd
stos
push
out
xchg
cmp
cli
repnz
sahf
das
mov
jecxz
sub
dec
dec
push
lods
pop
xchg
sub
lods
inc
cli
pop
dec
in
dec
sbb
add
fcoml
adc
or
pop
xchg
stos
and
push
and
xlat
out
test
cld
adcb
push
sub
cmp
cltd
jmp
cmpsl
in
inc
shll
sub
sub
ljmp
jmp
outsl
push
mov
inc
xchg
das
addl
or
pushf
mov
dec
pop
xchg
xchg
std
jnp
cltd
icebp
inc
pop
insl
shlb
dec
scas
jp
xor
inc
pop
or
jmp
mov
add
into
dec
xchg
add
sub
loope
dec
adc
cli
sbb
repz
popf
mov
mov
pop
mov
fisttps
dec
xchg
int3
fwait
and
jbe
dec
cmpsl
sbb
push
cmp
xlat
xor
rorl
mov
mov
shrl
and
sbb
xorl
icebp
mov
leave
mov
lock
jmp
or
xchg
xchg
adc
pushf
sbb
je
scas
iret
fmuls
pushf
add
and
jae
add
adc
lcall
arpl
cltd
lock
adc
inc
dec
cmc
pop
insb
ret
negl
mov
insb
enterw
jp
jnp
mov
mov
mov
scas
jmp
mov
lret
lret
or
movsb
cmp
mov
out
jmp
mov
cmc
sbb
dec
xchg
push
sahf
pop
cmp
cmp
sahf
and
popa
pop
inc
add
xchg
adc
hlt
xor
movsb
in
mov
mov
push
in
push
leave
pop
mov
pop
push
mov
outsb
push
xor
mov
mov
xchg
sub
ret
mov
mov
testb
cmp
js
dec
inc
fiaddl
jb
jmp
pop
popa
std
dec
mov
rorl
xor
mov
xchg
je
test
das
xchg
mov
push
data16
aaa
xchg
out
leave
or
repnz
popf
lret
lret
mov
pushf
mov
or
aad
lea
fdivl
pop
fdivrp
jne
mov
push
fnstcw
xchg
insl
loopne
mov
es
push
xlat
gs
dec
lret
or
loop
aas
cli
cld
push
mov
adc
mov
repz
jge
xchg
cmp
pop
cltd
xor
mov
push
mov
cmp
xchg
insb
testb
mov
addl
push
add
dec
outsl
fistl
js
inc
xor
decl
mov
icebp
test
sbb
jb
adc
iret
push
add
mov
xor
pop
decl
xchg
sahf
dec
fwait
mov
push
mov
sub
or
fdivrl
mov
or
leave
mov
das
jns
ret
push
hlt
loopne
shll
push
mov
lock
out
sti
decl
jg
clc
dec
in
inc
cmc
mov
insb
ficompl
scas
pop
dec
lcall
scas
outsl
mov
cs
and
inc
cmpsl
push
out
xchg
loopne
xchg
iret
cmpsb
dec
bound
enter
pusha
lds
or
xchg
jo
insl
jmp
popa
jle
push
shrl
jmp
jecxz
push
xor
fstl
enter
xlat
outsl
leave
sub
daa
cmp
add
inc
jne
mov
dec
mov
insl
shlb
leave
jg
inc
andl
mov
loope
jp
mov
lret
push
mull
sub
push
pop
daa
cmp
inc
testl
push
dec
and
sub
mov
mov
inc
leave
adc
imul
xchg
mov
stc
and
inc
add
dec
cmp
sbb
dec
clc
cli
popf
ja
adcb
je
jbe
xchg
sbb
dec
adc
push
and
cli
and
stos
outsl
cmp
gs
sbb
sub
and
push
shr
cld
or
cmp
and
xchg
cmp
or
enter
cmp
shrb
in
fst
loopne
mov
and
jecxz
xchg
xchg
enter
mov
inc
lea
jmp
shr
sahf
jle
adc
inc
xor
cli
lret
shll
sbb
shlb
xor
sub
cmp
ss
test
nop
add
pop
movsb
mov
mov
jo
cmp
inc
arpl
imul
pop
dec
jne
dec
sub
xchg
push
cmc
fcmove
test
test
jl
pop
lods
sub
stos
call
jae
fdivr
or
das
jl
mov
mov
in
call
in
sbb
leave
out
sbb
lahf
mov
pop
sbb
je,pn
test
mov
pop
xchg
popf
mov
fs
cmpsl
fldenv
dec
mov
xor
inc
lods
mov
mulb
ret
aas
pop
xchg
dec
sbb
adcb
mov
pop
lds
das
adc
pushl
andl
adc
sub
or
ss
loope
loop
sub
or
iret
inc
or
loopne
adc
push
lds
push
out
sbb
cmc
sarl
or
sti
int
cmp
imul
lock
or
jbe
andb
stos
movsb
xor
add
jp
dec
dec
mov
mov
mov
xor
insl
insl
outsb
xchg
lea
pop
aad
jno
popa
cmp
push
adc
fs
mov
xchg
cmc
test
fstpl
popa
mov
mov
pushf
inc
call
mov
cmp
mov
jmp
aaa
ds
je
jae
pop
sbb
in
sub
add
pop
cmpl
mov
test
inc
xchg
and
sub
enter
out
mov
fists
or
fistps
pushf
int
scas
int3
popa
and
lock
inc
cwtl
jecxz
cmp
cs
sbb
ret
cmp
mov
adc
xor
dec
mov
pushf
push
arpl
mull
xor
adc
mov
out
pop
cmp
repnz
xchg
rcrb
adc
sti
pop
jae
and
push
jmp
adc
jns
pop
cmpsl
adc
mov
stos
and
rcl
jns
push
pop
aas
cmp
fnstcw
std
pop
les
xchg
push
out
xchg
mov
enter
stos
mov
dec
daa
inc
jecxz
jbe
sbb
insb
out
or
call
popf
add
fstps
cli
test
jns
xchg
pop
add
xchg
mov
jecxz
lods
js
lret
cmpsb
test
sbb
out
addb
push
adc
fiadds
dec
inc
mov
pop
push
movsb
pop
push
cmp
jo
jge
xchg
jecxz
popa
mov
cltd
or
mov
imul
mov
pop
mov
xor
add
add
mov
adc
in
and
insb
pop
push
xchg
out
push
mov
lea
inc
jno
jp
jmp
xchg
das
mov
imul
in
in
cmp
xor
imul
add
stc
jg
mov
jecxz
xchg
cmpsl
mov
and
pop
jno
inc
sbb
adc
ds
outsb
push
notl
out
iret
xchg
test
cld
negl
sub
sbb
clc
cmpsl
push
pop
mov
or
loopne
push
movsb
daa
xchg
pop
dec
std
cmpsb
dec
popf
xchg
bswap
movsb
jne
clc
roll
pushf
mov
mov
daa
ret
push
cli
stc
fwait
or
iret
adc
addl
mov
pop
rcrb
sbb
push
add
jb
dec
int
jbe
adc
add
sub
xor
add
pop
fcmovnu
enter
test
add
leave
sbb
out
testl
mov
lahf
or
call
add
sub
outsb
sbb
push
stos
imul
into
dec
in
jae
out
into
push
sahf
mov
and
adc
mov
stos
ds
lret
addb
cs
cwtl
lods
lcall
ja
hlt
andl
mov
aam
addr16
cmp
leave
jbe
iret
adc
mov
xchg
cltd
push
pusha
cs
gs
lock
pop
xchg
cwtl
out
pop
adc
sbb
test
or
iret
sub
dec
dec
adc
inc
mov
fisubrs
cmp
sub
and
add
sti
push
test
out
mov
nop
es
call
mov
addr16
xchg
dec
movsl
popa
mov
pop
mov
mov
jg
test
nop
xchg
jge
mov
jbe
je
test
call
jp
fstpl
push
mov
gs
dec
repz
aad
ret
cmp
sub
mov
push
xchg
int
out
std
mov
xchg
cwtl
stc
iret
gs
cmpsl
cltd
mov
leave
cmp
sub
xor
mov
sub
fwait
xchg
fidivrs
fwait
sbb
repz
mov
jae
pop
inc
push
leave
and
cltd
shll
mov
fwait
cwtl
inc
pop
out
ja
adc
roll
jno
cmpsl
movq
fistl
addb
cmp
ds
out
aas
dec
xchg
outsl
mov
xchg
and
nop
ljmp
dec
stc
movsl
fisttpll
or
jp
imul
insl
in
pop
xchg
sbb
popf
and
insl
inc
and
jmp
testb
xchg
aaa
jl
int3
push
test
repz
pop
jle
sti
push
sub
les
dec
les
sub
cmpl
adcb
adc
lods
or
test
cs
iret
clc
popl
fwait
rol
mov
in
sub
inc
cltd
dec
cmpsb
sahf
je
jge
negb
inc
rcrl
xacquire
push
adcb
testb
and
pop
pop
js
repz
test
stos
sbb
arpl
int
jnp
pop
inc
lock
cmpsl
or
hlt
cmp
add
mov
mov
int
pusha
or
adc
cmpsb
mov
rol
mov
push
pop
in
xor
ja
dec
or
push
dec
rorb
xorb
inc
mov
and
inc
jg
repz
xor
repz
iret
pop
pop
mov
decb
fcom
stos
lods
fnstenv
rolb
cmp
call
dec
mov
push
pop
cmpsl
mov
sbb
mov
cmp
xor
dec
xchg
xchg
xchg
outsl
scas
outsl
adc
xchg
add
clc
aad
mov
cmpsb
out
das
push
push
xlat
cs
push
mov
sbb
out
out
dec
mov
dec
sbb
push
sub
fs
jmp
cmpsb
and
je
adc
xor
js
or
repz
jmp
out
mov
loop
sahf
mov
push
xor
cmpsb
orl
and
mov
mov
movsl
leave
jnp
pushf
inc
xor
xchg
sub
lock
and
or
int3
loope
les
add
push
pop
outsb
lds
mov
das
rcrl
xor
loopne
pop
add
mov
xor
shrw
push
mov
cltd
in
jge
stos
and
hlt
js
dec
pusha
in
mov
inc
in
pop
xor
sarb
xchg
push
andb
sbb
mov
inc
push
inc
add
and
test
cmp
xchg
rcl
inc
movnti
aas
loopne
into
cmp
gs
mov
pop
jns
gs
repz
xorb
outsb
cmp
and
mov
xor
push
xchg
pop
hlt
lock
imul
test
in
push
push
mov
and
cld
in
xor
xchg
les
push
adc
fwait
pushf
xchg
jno
aas
ss
inc
mov
imull
leave
mov
lock
mov
movsb
xchg
lods
js
jno
jbe
hlt
mov
dec
into
repz
adcl
data16
fwait
ljmp
out
orl
push
das
xchg
jp
and
rep
stos
es
scas
cmp
pop
sbb
cmp
and
popa
popa
dec
addr16
loop
xlat
jns
mov
adc
lcall
jmp
popf
mov
aad
push
in
sub
mov
movb
call
mov
insl
or
cld
push
jmp
or
js
jle
xor
and
push
xor
mov
imul
aaa
add
push
push
frstor
lods
test
mov
lock
js
pop
mov
push
and
add
test
add
add
lret
bound
pop
mov
inc
dec
je
push
mov
jg
fiadds
int3
inc
dec
out
jp
pusha
je
outsl
leave
push
shrb
fstl
or
aad
jmp
sti
mov
pop
cs
insb
dec
pusha
xchg
cmp
lods
jg
cmp
in
ds
mov
push
sub
mov
mov
movsl
aaa
imul
xchg
pop
mov
push
out
and
inc
clc
loopne
gs
leave
popa
sbb
adc
jl
out
test
movsb
lods
sub
inc
or
inc
mov
xor
lret
cmp
arpl
sub
jg
je,pt
fucom
add
outsb
adc
sarb
dec
outsl
mov
fwait
jecxz
jns
jl,pt
int3
mov
or
cmp
cwtl
add
mov
add
mov
push
ret
pop
and
icebp
push
mov
cs
inc
aad
aas
sub
lods
dec
cmp
in
aas
sahf
dec
fstpt
xor
jae
mov
xchg
push
hlt
inc
in
fbstp
sbb
out
xchg
jmp
sbb
push
leave
dec
jns
sahf
add
pushf
lds
jno
add
es
popf
push
jb
inc
and
int
pop
mov
adc
loope
insb
push
xchg
and
outsb
repnz
or
outsl
out
inc
je
stc
cmp
shl
or
lods
mov
and
out
cmp
lock
hlt
or
stc
cmpsb
mov
outsl
add
je
dec
enter
outsl
ljmp
filds
mov
jnp
mulb
cs
sbbb
movsb
mov
mov
sbb
and
insb
xchg
or
jge
out
jl
rol
ljmp
lcall
orb
dec
push
fstpl
and
cmp
stos
mov
sub
pop
stos
imulb
mov
cmp
push
jp
addl
cmp
lea
jmp
lea
push
stos
and
inc
out
add
loopne
out
jle
fst
jmp
and
out
fimull
adc
push
shlb
int3
mov
mov
xlat
xor
in
data16
scas
pusha
test
in
xorb
out
test
and
cmp
jnp
mov
pop
inc
test
cmpsl
das
test
cmpsb
add
mov
jle
mov
mov
mov
shl
mov
out
push
and
sbbb
in
and
adc
push
jle
cmp
dec
pusha
xchg
jnp
out
xchg
mov
and
push
inc
xchg
cmp
icebp
gs
push
ret
pop
in
sbb
iret
xor
pop
fbstp
sub
mov
cmp
cld
lds
cmp
xchg
test
lods
test
mov
xchg
sub
pop
jnp
inc
cmp
pushf
mov
dec
movl
push
add
daa
lds
popa
mov
xchg
push
arpl
fisubrs
push
or
sub
and
push
imul
je
mov
push
sub
xchg
test
cmc
ds
pop
or
pop
cs
lds
hlt
jl
cmpsb
repnz
mov
es
enter
inc
in
sar
rorl
pop
fwait
mov
add
stos
push
hlt
pop
frstor
push
or
pop
clc
sbb
mov
add
mov
fmuls
cmpsl
jno
cmpsb
frstor
jo
jns
mov
out
out
dec
inc
add
rol
test
jecxz
roll
jbe
or
xchg
movsb
dec
inc
jl
jne
lods
aam
arpl
lods
jo
loopne
lock
rcll
sub
andl
sub
outsl
mov
call
cli
pusha
and
movsl
mov
outsl
push
subb
or
push
jnp
or
mov
mov
leave
test
dec
lods
stos
push
inc
shll
es
mov
pushf
sub
mov
or
sbb
je
jge
inc
jmp
inc
bnd
test
and
push
mov
ret
mov
dec
cld
or
addb
push
adcl
ja
jns
pop
mov
sahf
ficoml
jb
push
ds
sbb
push
dec
jae
xchg
add
jnp
fwait
dec
out
out
adc
lcall
out
pop
cld
aad
mov
or
testb
lahf
aad
vpminsw
in
inc
or
sbb
aam
in
mov
jo
fistpll
xchg
mov
cmp
loope
int3
jle
js
sub
outsb
scas
ret
in
ds
inc
mov
push
dec
scas
jg
cmp
mov
pop
sbb
push
dec
push
popf
cmc
test
cli
lahf
and
cmp
stos
clc
lock
xor
pop
lret
inc
mull
mov
mov
xor
aad
xchg
add
jmp
dec
ja
jno
es
fs
gs
scas
scas
out
test
sti
mov
addr16
stos
dec
out
das
fbld
mov
movsl
jo
dec
dec
decl
mov
push
add
pop
fidivrl
or
out
lcall
popa
or
push
jae
test
sub
and
cld
push
mov
fisubrs
ss
xor
in
lret
xchg
jge
in
push
add
outsl
imul
iret
out
bound
adc
xchg
dec
leave
int3
dec
xchg
lret
call
aam
push
aaa
sbb
jmp
pushf
sub
inc
insl
shrl
adc
test
aam
sahf
pop
insl
mov
icebp
mov
mov
mov
in
fisubrs
incl
in
mov
cmp
add
jb
sub
roll
pop
lods
pusha
out
xlat
lea
and
sbb
pop
cli
out
es
lds
jg
xchg
shl
jecxz
push
mov
es
lds
in
adc
lock
ss
xchg
cmpsl
and
xor
xchg
insl
mov
or
or
lds
ret
testb
mulb
call
xor
pop
out
lahf
scas
mov
jl
shrl
adc
push
lods
int3
testb
jne
mov
fsubl
imul
push
inc
inc
call
ss
jmp
jbe
mov
test
mov
jge
mov
dec
mov
mov
add
leave
icebp
fnstcw
ret
mov
cmp
push
ljmp
jo
push
mov
and
dec
fsubl
pop
dec
push
jnp
inc
rorl
add
fistps
adc
pop
mov
or
add
mov
push
icebp
xrelease
outsl
leave
test
int3
mov
mov
inc
push
in
inc
gs
fcom
mov
mov
add
adc
inc
arpl
mov
loope
xchg
mov
mov
push
xlat
inc
inc
push
pop
insl
adc
push
pop
roll
dec
mov
sbb
jae
shll
adc
and
mov
je
sbb
out
cmpsb
mov
out
test
lea
jns
add
mov
jno
inc
aaa
jecxz
mov
addl
mov
cmp
and
xor
add
xor
and
cwtl
sti
shl
leave
push
inc
push
das
xor
les
imul
inc
jno
xchg
lock
test
cmp
mov
js
and
sbb
cmpsl
mov
mov
fstl
push
push
aaa
xchg
jl
dec
out
sub
stc
mov
sbb
jp
cli
aad
cmpsl
cli
inc
ret
mov
xchg
mov
or
mov
ret
add
dec
sbb
cltd
and
mov
leave
push
imul
inc
lret
jl
push
mov
mov
cld
pop
mov
mov
in
jne
adc
pop
les
daa
daa
mov
out
pop
sub
mov
gs
pusha
test
inc
out
adc
adc
or
and
lds
jmp
sub
sahf
push
shrl
xchg
inc
mov
pop
sahf
movsb
jge
and
adc
mov
sub
mov
mov
cs
push
jo
pushf
stos
inc
loop
mov
sbb
addr16
out
rclb
in
loop
lock
testl
xor
adc
in
aam
lret
repz
push
jg
aas
and
mov
out
and
repz
sub
daa
xor
loopne
shll
rolb
add
jmp
imul
mov
dec
mov
imul
repnz
cmp
inc
scas
or
in
adc
mov
mov
xorl
xchg
mov
mov
xor
loop
mov
cmc
fwait
and
movsl
dec
insl
leave
and
rcrl
jl
lock
cmp
pop
in
bound
test
inc
divl
psadbw
in
sti
jnp
push
sbb
shrl
sbb
lock
xchg
in
mov
dec
sub
cmp
jmp
mov
out
jg
push
sbb
inc
cs
jle
shr
xchg
mov
sti
mov
cld
cmp
xchg
in
add
mov
aaa
mov
mov
jl
sbb
dec
push
add
push
stos
cs
je
jnp
mov
andb
mov
adc
pop
push
fdivrs
mov
or
mov
sub
fldl2e
sbb
into
mov
mov
dec
int
xchg
dec
div
jb
stos
jmp
pop
add
mov
std
cmpsl
lret
dec
aam
ret
enter
in
pop
ror
xor
sbb
mov
ja
and
mov
movl
les
xor
aad
scas
mov
mov
pop
and
dec
cmp
adc
scas
adc
subps
mov
fiadds
nop
imul
into
pushf
js
inc
and
pop
cltd
call
bnd
sbb
repnz
sbb
data16
jmp
ljmp
arpl
out
lcall
jno
or
dec
shlb
aas
loop
inc
lret
sub
fistps
stc
pop
loop
iret
lods
and
addb
imul
daa
fldcw
ret
outsb
push
jg
int
xor
shrl
adc
into
mov
pop
xor
inc
cld
and
sbb
mov
add
pop
scas
loope
sub
sbb
sbb
inc
cmp
stc
push
jo
pop
pushf
loopne
dec
and
pop
outsb
mov
aaa
mov
je
leave
pop
xor
test
push
pop
js,pt
ror
xor
sub
jge
push
adc
sub
mov
mov
add
xlat
add
pusha
xor
outsb
add
xor
sbbb
xchg
inc
cld
test
ja
lret
or
jle
adc
movsb
cld
or
sti
pop
mov
jmp
lcall
dec
xor
repz
and
adc
loop
loopne
or
outsb
jl
add
or
jo
movsb
sbbl
pusha
cltd
xchg
dec
or
notl
mov
ds
inc
cmp
adc
sbb
nop
push
mov
popl
dec
mov
lret
pop
push
jnp
cld
or
sub
bnd
inc
test
jmp
les
clc
pop
jmp
fidivl
xor
mov
dec
add
call
fstpt
in
cwtl
cltd
ljmp
cmp
daa
fucomi
mov
mov
xchg
pop
pusha
jnp
jae
dec
or
inc
push
mov
fadds
repnz
pop
orl
mov
cmpsb
loop
fisubs
inc
inc
push
push
ss
sbb
and
insb
cmp
jg
jbe
xchg
fmull
pop
ret
xchg
pop
push
std
pop
and
out
sub
scas
mov
notb
sbb
fsubp
popa
cwtl
ret
or
icebp
aas
repnz
mov
jno
push
mov
adc
mov
jae
stos
inc
imul
dec
mov
dec
das
psubsb
pushf
imul
mov
lods
cmc
adc
mov
jp
enter
movsl
gs
push
and
inc
popa
pushf
and
dec
dec
fcmovnbe
js
gs
lods
mov
cwtl
cmpsl
xchg
pop
in
outsl
pop
rclb
vpcmpgtw
push
jno
adc
frstor
scas
or
jge
add
and
adc
cs
sub
pop
out
push
imul
and
roll
add
mov
shll
adc
jno
mov
ljmp
push
cmp
movsb
and
notb
fldl
and
add
pop
cmc
es
dec
dec
mov
pop
mov
loope
mov
mov
mov
push
mov
lret
dec
pop
pop
in
lret
sbb
lret
mov
jo
jns
fcmove
xchg
test
xchg
mov
jge
jp
fildl
jne
dec
mov
movsl
dec
loopne
cmp
orl
out
pushf
rolb
sbb
js
outsl
fildl
push
fdiv
jge
mov
xchg
mov
fwait
aas
jl
sub
fwait
mov
mov
sub
rcr
xor
add
or
mov
addr16
lcall
arpl
aad
or
movsl
lea
lcall
or
mov
ja
mov
xchg
fsts
aaa
je
dec
xchg
testl
add
sub
ja
scas
jmp
daa
cmpsl
cltd
xchg
mov
sbb
test
insl
mov
in
les
cld
jae
insl
mov
jne
fwait
enter
dec
scas
and
clc
xchg
pop
push
roll
out
ficomps
inc
xchg
push
int
out
or
pop
imul
push
dec
mov
orb
xchg
sti
outsl
fsubs
pop
into
scas
call
aad
pusha
sahf
cs
jae
cmp
in
outsl
shrb
shlb
add
or
lods
pop
cmp
lret
fnstcw
call
bound
scas
xor
shll
cli
cmp
and
xchg
fstpt
dec
sub
push
mov
out
loopne
nop
sbb
imul
or
sub
xchg
cmp
xlat
subl
nop
mov
mov
popa
mov
jbe
fbld
push
jg
testb
out
xchg
loopne
inc
push
mov
rcll
xchg
adc
xchg
push
or
or
scas
je
jge
dec
sub
mov
dec
jae
add
push
jb
ret
mov
sbbl
out
notb
aam
dec
pop
mov
and
xchg
jecxz
outsl
add
sbb
lock
add
mov
inc
aas
sbb
xor
addr16
sahf
xchg
jbe
mov
xor
mov
jns
test
xchg
mov
cmpsb
xlat
fstps
fdivl
subl
or
mov
int
or
pushf
faddl
notl
les
sub
sbb
adc
mov
push
stos
jnp
pop
add
mov
inc
lods
dec
pop
fisttpll
cmp
jne
cmp
sbb
insl
jge
enter
sub
stc
inc
push
dec
ja
mov
fsubrs
push
mov
ret
fisttps
outsl
loop
dec
dec
or
and
jmp
jecxz
dec
fildll
add
push
test
out
xlat
push
aaa
dec
sahf
adc
lcall
loop
adc
in
cmp
sbb
jg
add
mov
jecxz
cmp
loop
sbb
push
fcompl
imull
mov
lods
iret
sub
push
xor
mov
add
shll
in
adc
lods
loopne
xor
repnz
rcll
cmpl
test
inc
xchg
or
imul
add
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
mov
addb
imul
cwtl
jge
jno
ret
ret
rol
mov
outsb
repz
scas
repnz
jle
pop
sti
add
cmp
mov
andl
inc
xchg
sti
xchg
cmp
mov
shlb
test
aad
rcrl
mov
loop
fnstcw
mov
movsl
dec
and
jb
xchg
je
adc
fbld
lret
push
jl
movsb
xchg
mov
xchg
outsl
in
fwait
or
sbbb
push
add
nop
sbb
and
fdivrp
scas
cmp
rolb
mov
xor
movsl
inc
cld
or
sub
fcomps
test
xchg
int3
sbb
cltd
lret
cmp
or
or
adc
push
xor
and
and
stos
xchg
xchg
std
push
hlt
into
sub
lock
iret
leave
aam
in
jno
add
xchg
cmp
loopne
xor
inc
push
loopne
xchg
call
push
add
adc
test
shl
out
shll
das
int3
and
dec
xchg
xorb
icebp
adc
popa
pop
mov
xchg
cld
negb
test
sbb
jb
loope
xor
or
mov
std
pop
mov
mov
inc
lcall
loope
pusha
js
mov
mov
push
wrmsr
xlat
or
call
jmp
jne
shl
mov
pop
pop
add
leave
push
xchg
fxch
xchg
scas
mov
insl
jecxz
add
daa
xor
push
lahf
imul
add
sahf
sbb
xchg
inc
sarl
adc
jnp
subb
iret
xchg
cltd
and
fwait
shrd
sub
mov
dec
sbb
xchg
mov
sahf
pop
bound
mov
pop
icebp
shl
test
or
in
rcll
popf
or
push
jo
sbb
mov
xchg
out
and
pop
out
outsl
sub
sub
repnz
xor
mov
pop
cmp
jle
or
movsb
cmp
jmp
sub
mov
mov
fdivrp
sub
add
adc
xor
pusha
ficomps
jno
xchg
test
jp
or
lret
lds
fidivl
xor
jge
aam
shll
or
rolb
mov
in
sbb
inc
pop
xchg
jno
rorl
adc
adc
cmp
xchg
cmp
cmpsb
fldcw
fs
and
scas
rcrl
xchg
daa
aas
dec
sub
fstps
mov
inc
dec
and
movsb
pushf
int3
fwait
and
outsb
push
fs
mov
mov
ret
lea
in
lods
fildl
mov
insl
xchg
jecxz
push
icebp
loope
sub
je
cmp
roll
jge
push
lods
cmpsb
adc
aas
cmp
inc
std
mov
loopne
dec
inc
lds
push
or
subb
add
enter
in
sub
scas
test
into
jl
js
movsl
loop
movsb
xor
and
jnp
stc
add
mov
dec
pop
pop
mov
xor
push
xchg
dec
lret
cmpsl
orb
pusha
daa
je
jge
or
jecxz
lcall
sub
cs
movsl
call
fidivl
mov
hlt
imul
mov
hlt
mov
daa
addb
xchg
cmpsl
sub
inc
andl
imul
push
jae
popa
adc
xor
nop
xchg
sbb
fistl
or
repnz
push
arpl
cmpsb
clc
pop
fstpl
pop
je
mov
adc
pop
and
mov
xchg
jns
jle
cltd
jp
mov
ret
push
mov
aas
cld
popa
mov
xchg
and
das
dec
and
mov
mov
jne
fwait
test
fldl
mov
jno
and
fistl
fcmovnbe
ret
lcall
loopne
cs
sbb
jns
mov
cvtdq2ps
pop
dec
popa
pop
fsts
dec
mov
dec
xchg
xchg
insb
sti
add
and
addr16
negl
aam
in
mov
mov
pop
orb
cmp
lds
jnp
out
out
aas
pushf
pop
pop
mov
movl
aam
cmp
divb
pusha
popf
das
jno
int3
imul
mov
mov
lds
push
loopne
stc
xchg
daa
mov
jb
pop
mov
jmp
mov
aas
ds
cmp
orb
sbb
lods
icebp
add
lods
mov
scas
daa
and
sub
pushf
aaa
sbb
mov
push
jno
pop
enter
push
gs
or
mov
mov
push
push
ficompl
jae
fs
insl
aam
fldenv
movsb
lcall
repnz
cmp
add
enter
adc
inc
cmp
inc
push
lret
cmp
add
or
mov
test
mov
lds
jo
jge
out
ljmp
push
sub
lea
xor
imul
stos
or
aas
sbb
movzbl
ret
shll
or
or
mov
xchg
inc
cmp
in
imul
add
aas
lods
pop
int3
xlat
inc
jae
test
jb
cmpl
jbe
hlt
xor
xor
or
stos
dec
lcall
mov
adc
scas
repnz
mov
xchg
sub
dec
leave
imul
xor
fimuls
mov
xchg
dec
sahf
imul
hlt
in
push
fucomip
call
mov
dec
fcompl
ss
fsubl
int
sbb
pop
push
loopne
daa
cltd
jle
sbb
hlt
add
scas
aas
lea
xor
pop
popf
or
inc
nop
lcall
int
add
mov
inc
bound
xchg
mov
mov
sti
aad
call
xchg
punpckhbw
cmp
pop
add
add
into
push
mov
jle
sub
es
cmp
xchg
jl
adc
es
flds
or
xchg
mov
mov
std
or
mov
lcall
ljmp
dec
lahf
inc
pushf
outsb
sub
int
test
mov
mov
push
popf
xchg
sbb
out
xchg
or
jl
sub
ds
fldenv
loopne
ret
out
jne
je
jecxz
cmp
sbb
mov
cli
clc
sub
dec
dec
xchg
shlb
push
push
and
stos
xchg
cmp
jl
movsl
sub
sub
mov
push
lcall
lock
mov
outsb
out
cli
xchg
sahf
popf
jo
cmp
and
fisttpl
push
lods
into
stos
xor
pop
hlt
lock
test
cmc
test
or
jae
adcl
adc
notb
pop
jae
sbb
cli
loopne
jp
sbb
cmp
enter
shlb
pop
mov
int
cmp
and
add
xchg
mov
and
pop
xchg
add
pop
mov
xor
mov
ljmp
adc
adc
in
imul
cmp
pop
movsl
lock
ja
mov
dec
push
push
mov
adc
mov
jae
inc
lcall
scas
push
ret
mov
mov
pop
cmpsb
nop
jae
mov
icebp
jl
out
mov
lock
add
jnp
idivb
sbb
mov
outsb
cmc
fnstcw
pusha
mov
test
rep
xchg
ret
add
movsl
stc
sub
fcmove
cmc
std
adc
xor
mov
mov
stc
aas
jno
pop
jmp
ja
arpl
jge
pop
add
sub
xchg
enter
in
aas
xchg
xchg
rorl
arpl
mov
je
lahf
daa
sub
push
mov
pop
cmp
mov
xchg
aaa
sbb
sub
push
jg
ja
addr16
mov
mov
pop
push
push
es
mov
mov
cmpsb
arpl
movsb
lahf
jbe
out
mov
fiaddl
mov
loopne
out
shrl
and
sub
cmc
add
mov
dec
rorl
inc
push
stos
sub
xor
mov
mov
lds
pusha
imul
adc
cmp
movsl
xchg
ret
outsb
insb
xchg
out
dec
mov
mov
push
hlt
imul
fbstp
pushf
lahf
dec
adc
dec
pop
fcomp
mov
aaa
pop
jb
jl
xchg
fstpl
or
pop
call
shrb
insb
rcrb
push
test
mov
in
popf
mov
test
or
insb
lret
leave
sub
adc
inc
mov
push
out
push
mov
aad
fs
pop
loop
add
sub
fwait
test
aad
shrb
add
xchg
dec
push
xchg
xchg
ss
shll
jge
and
add
or
cwtl
xchg
pminub
add
cmp
call
out
or
fwait
in
cs
movsw
shlb
out
mov
stc
xchg
xor
aam
cltd
pop
cmp
enter
add
pop
clc
dec
fldcw
shl
daa
pushaw
pop
data16
xlat
ljmp
nop
adc
and
stos
in
jo
xor
sub
bsr
addl
pop
jnp
fsubl
pop
fiadds
gs
pop
sbb
mov
mov
sti
fst
dec
into
addr16
add
mov
loope
dec
sbb
jno
test
xchg
dec
shl
cmp
pop
mov
adc
jbe,pn
je
lret
add
insb
mov
jmp
sbb
fcoms
or
popf
jge
xor
aad
sub
push
sbb
push
mov
mov
outsl
sbb
decb
aas
mov
in
repz
and
dec
jecxz
stc
or
xchg
and
loop
lret
inc
jle
fisttpll
js
jnp
pop
adc
js
fs
add
sarb
fstpt
cmc
out
jecxz
xor
aam
jp
cld
jg
xor
mov
rcr
out
inc
cmpsb
popf
sbb
adcl
xor
mov
xor
aas
or
test
pop
popf
sub
push
jg
xor
dec
mov
call
cld
arpl
and
outsb
dec
mov
jo
sbbl
loope
dec
fwait
ss
loopne
jg
adc
movsl
dec
pop
ja
stos
cmpsl
jp
dec
test
push
imul
bound
xor
pop
push
fdivp
push
mov
lock
movsl
in
jns
push
shlb
inc
movsbl
in
dec
out
gs
mov
lods
mov
imul
fwait
mov
stc
adc
push
jbe
popf
mov
push
enter
ret
add
dec
inc
popf
xchg
jmp
push
lock
aas
rorl
cmp
test
dec
sub
addr16
mov
add
movsl
cmp
lock
xchg
imul
ja
and
std
insl
pop
cmp
xor
repnz
pop
lods
jge
jo
add
xor
or
dec
push
or
push
jb
cs
movsl
and
loopne
aaa
or
jl
mov
shrl
out
sbb
mov
int3
int3
mov
rorb
mov
mov
or
adc
xchg
popf
sti
icebp
sbb
outsl
dec
pop
cltd
cmc
or
leave
inc
add
imul
out
flds
cli
jns
fsubr
inc
push
lea
arpl
ljmp
sbb
in
lock
xchg
into
scas
inc
mov
lret
and
sub
inc
dec
jl
addr16
mov
adc
hlt
aas
lea
lret
repz
mov
sbb
jmp
int3
shll
inc
adc
ss
les
xchg
or
frstor
aaa
mov
scas
lahf
pop
sbb
push
push
outsb
dec
test
ret
mov
js
jo
mov
sbb
cmp
push
xor
test
xor
lret
pop
repnz
aam
fsubl
aad
arpl
jns
mov
mov
push
add
xor
add
add
std
jmp
fcmovnb
adc
outsl
flds
push
add
jno
pop
rorl
xchg
adc
jb
rcrb
pop
push
xlat
hlt
inc
ja
mov
outsl
and
push
and
mov
adc
cld
mov
test
testl
icebp
jne
das
insb
dec
pop
es
mov
jmp
sbb
inc
mov
std
push
jns
push
sbb
loop
adcl
sub
add
gs
outsb
imul
inc
push
adc
insb
rcrl
jmp
mov
int
dec
xor
not
cli
push
stos
mov
ljmp
xor
insl
mov
rorl
xchg
imul
pop
insb
sub
clc
pushf
add
sahf
push
sbb
sub
jbe
jae
pop
movsb
jne,pt
mov
mov
bound
push
hlt
test
stos
push
ja
cmpsl
xor
xchg
lods
jg
sbb
repnz
popf
dec
cmpsb
ljmp
imul
notb
cmpsl
or
repnz
pop
push
ret
aas
and
adc
pop
sbb
pop
mov
mov
movsb
outsb
iret
dec
sbb
leave
addr16
push
in
or
fildll
mov
push
mov
ljmp
push
loopne
push
fcmovnb
mov
ret
ljmp
mov
mov
jp
sbb
pop
jbe
sub
and
inc
xchg
mov
and
dec
insl
leave
inc
sbb
mov
jnp
push
xchg
push
xor
push
loope
cmp
jo
pop
sub
inc
lret
out
mov
mov
outsl
stos
lcall
std
pminub
jno
rep
jg
push
popa
cmp
lahf
aas
inc
xor
xor
in
or
xor
bound
push
faddl
mov
add
xor
inc
adc
cmpsb
mov
movsb
inc
and
dec
cs
repnz
jo
push
aam
les
cs
loop
dec
xor
inc
aam
mov
es
inc
fdivrp
mov
enter
les
jge
mov
or
mov
fimuls
loope
dec
stos
push
ret
shrb
ret
sub
test
test
dec
jbe
sbb
js
dec
push
sahf
xchg
push
push
stos
fdivs
mov
lret
jl
dec
pop
mull
xchg
test
mov
cwtl
loope
jno
xchg
rcl
lcall
mulb
fcmovnb
shl
lds
pop
aas
outsb
jbe
mov
ja
fisttpl
or
push
jecxz
and
add
mov
fnsave
or
xchg
or
ss
mov
push
stos
adc
xchg
mov
dec
sarl
int3
mov
mov
dec
mov
jne
adc
adc
jg
fdivs
push
mov
dec
lock
mov
mov
xchg
jo
mov
loopne
out
shlb
notb
inc
jp
stos
in
repz
and
test
mov
sub
and
sbb
lahf
in
scas
cltd
scas
and
pop
and
dec
jae
aas
mov
inc
pop
movsb
lods
scas
mov
xchg
rclb
sbb
add
inc
cmc
out
mov
repnz
inc
imul
cltd
sti
rcll
mov
inc
cmp
mov
pop
sub
dec
imul
xchg
dec
loop
adc
sub
rcpps
into
sbb
gs
adc
addb
stos
jp
clc
push
sbb
loopne
xor
or
sbb
rol
add
jecxz
add
push
fmull
cld
mov
bound
inc
dec
mov
lret
jne
jo
test
add
push
fistps
dec
cmp
fistpl
fbld
hlt
or
ja
outsb
mov
test
push
push
and
sub
fcoml
in
hlt
stos
xlat
cmp
and
or
shrb
sub
repz
mov
insb
popa
jae
pop
sti
xor
pop
neg
negb
hlt
lret
or
pop
mov
ss
arpl
pop
imul
fs
insb
sub
sbb
popa
xchg
sbb
in
fdivrs
nop
cltd
pop
xor
rcr
sarl
cwtl
mov
add
adc
test
sub
les
aad
test
mov
push
push
xchg
orl
mov
mov
xchg
mov
sub
inc
dec
ret
pop
addr16
pop
mov
orl
pop
sub
addb
gs
out
push
jmp
or
add
mov
and
cli
insb
bound
sbb
mov
adc
inc
jle
stos
hlt
aaa
pop
test
adc
imul
mov
mov
test
pop
fcom
dec
fdivs
xchg
inc
aas
inc
std
dec
or
nop
scas
cmpsl
repz
mov
adc
adc
loopne
call
pop
mov
cmpsb
push
jno
aaa
neg
test
xor
ja
push
data16
xor
adc
popa
mov
divb
dec
pop
pop
inc
repnz
sarb
mov
sub
out
pop
dec
inc
dec
sarb
in
xor
out
or
dec
push
fwait
adc
leave
out
lock
xlat
out
test
add
xchg
push
fimuls
mov
xor
mov
test
fsubl
imul
mov
into
or
push
lock
sbb
mov
fdivr
adc
jo
rclb
mov
inc
dec
cli
je
lret
in
shll
mov
push
scas
movsb
jge
inc
lcall
mov
stos
test
fldcw
sbb
sub
rclb
push
cmp
sub
test
jg
std
mov
cltd
sub
push
and
mov
mov
in
out
xchg
cmp
xchg
repnz
sbb
push
pop
sti
iret
push
jg
movsl
mov
add
push
xor
jae
inc
fwait
mov
outsl
dec
fbld
clc
inc
es
inc
mov
ret
pop
xchg
mov
sub
push
and
jbe
clc
mov
xor
lea
inc
ret
mov
scas
cmova
and
dec
mov
add
in
fsubrs
mov
mov
and
leave
lret
pusha
js
mov
inc
xchg
mov
popf
and
sub
packssdw
adc
repz
js
cmp
cmpl
loop
pop
add
sbb
nop
sbb
fs
jns
fstl
inc
push
popa
enter
or
jmp
push
mov
js
mov
mov
fwait
addr16
xchg
xor
data16
sub
xor
sti
js
mov
push
ss
and
push
test
xlat
xlat
lds
xchg
das
jbe,pt
cmp
adc
xor
int
ret
call
leave
add
out
gs
pop
jp
and
scas
add
into
rcrb
push
jp
jae
out
adc
xor
pop
push
inc
aas
cli
mov
les
push
pushf
mov
or
push
and
cmp
scas
xor
inc
mov
aas
test
leave
leave
das
push
neg
xchg
shlb
jbe
jnp
mov
jno
add
or
mov
mov
inc
dec
push
arpl
cmp
stos
rclb
loop
add
and
push
adc
scas
jmp
test
xor
add
sbb
into
in
movsb
mov
inc
cmpsl
int
js
outsl
insb
or
fwait
sbb
xorl
mov
ds
fcompl
cmp
pop
pop
mov
pop
mov
fdivrs
or
mov
es
test
out
pop
das
mov
jp
shl
mov
rcrb
or
push
mov
es
addr16
pop
mov
add
test
scas
jae
lret
inc
int3
jle
or
inc
aad
sub
xor
notl
test
push
out
or
mov
jnp
lret
imul
mov
mov
sub
add
cmp
and
jb
push
inc
and
xor
hlt
lods
jmp
mov
into
shlb
xchg
movsb
xchg
pop
jae
xchg
fmul
jb
jmp
pushf
xlat
mov
pop
rcrb
pop
mov
inc
adc
dec
mov
daa
daa
cmp
into
fcomps
mov
and
fsts
in
int3
stc
inc
adc
adc
outsb
test
dec
stc
pop
cmpsb
sbb
adc
mov
push
or
andl
jne,pn
lods
fists
aaa
out
pop
imul
add
outsb
out
sub
pop
mov
int3
mov
punpckhwd
stos
aad
mov
decl
add
inc
rclb
nop
popa
pop
push
cmp
jmp
xor
jne
push
jnp
pop
sbb
out
cmpsl
flds
add
test
sbb
insb
sub
push
lret
inc
xchg
arpl
or
clc
dec
cmp
add
xor
mov
cwtl
and
jns
in
inc
test
in
mov
jno
in
data16
cmp
add
push
ret
out
pop
add
mov
adc
push
mov
jbe
sub
test
inc
sbb
test
cmp
sbb
cmp
cwtl
pop
pop
sub
xchg
notl
pop
das
add
push
cmp
hlt
stos
out
psraw
jle
and
sbb
xor
push
rcrb
out
sub
hlt
lea
std
adc
mov
cmp
adc
and
xor
inc
sub
addb
fnstcw
andb
and
adcb
pusha
rcl
js
pop
mov
mov
stos
or
pop
out
stos
cmp
adc
rcr
cwtl
loop
xchg
adc
clc
and
mov
not
dec
pop
push
jb
sti
jae
sarl
test
mov
movsb
cmp
push
sti
and
and
ret
xchg
sub
dec
inc
or
aam
fstpl
lock
inc
addr16
sbb
cmp
mov
aad
imul
dec
repz
out
and
scas
cmc
test
imul
mov
pop
lcall
jbe
pop
sub
adc
inc
sbbl
in
mov
mov
popa
push
sti
xor
decl
daa
push
push
cmp
cmpsl
xchg
jmp
dec
out
data16
sub
lret
adc
mov
dec
lcall
aas
mov
mov
icebp
pusha
sub
outsb
pop
xchg
mov
mov
or
mov
shr
hlt
rcll
sbb
jns
scas
pop
pop
jp
mov
lds
xor
cwtl
add
pop
push
cmp
jg
pop
inc
enter
cwtl
xor
cltd
sub
fcmovb
gs
mov
xor
xor
push
decl
mov
roll
mov
shlb
loope
lret
fs
bound
inc
int
outsb
and
js
call
mov
enter
arpl
je
out
xchg
mov
pushf
push
cld
out
adc
pop
aad
pop
lock
jo
loopne
insl
inc
push
inc
pop
incb
inc
mov
push
adc
cmpl
shrl
mov
dec
pop
ret
or
sub
rorl
pop
testl
movsl
aas
jecxz
lret
insl
sbb
push
push
ljmp
mov
xchg
mov
adc
sti
rcl
xor
shll
mov
or
jne
xchg
cmp
pop
rclb
push
mov
fincstp
jns
jne
jae
aas
movsb
fcomps
adc
loop
and
aad
popa
sahf
pop
imul
in
push
dec
orl
enter
mov
sbb
out
pop
adc
jmp
mov
enter
or
shll
jnp
sahf
mov
xor
sub
lcall
jbe
push
dec
dec
scas
imul
push
std
and
leave
dec
mov
scas
cmp
jo
dec
cwtl
inc
jns
mov
imul
cli
gs
scas
push
ljmp
jmp
or
lock
xchg
jbe
arpl
pop
pop
inc
fbld
xchg
xor
pop
mov
jecxz
pushl
aas
loope
insl
xor
movsb
roll
xchg
mov
lods
inc
cwtl
and
daa
dec
sub
iret
in
mov
movsl
outsb
insl
inc
push
xchg
and
dec
setne
fwait
mov
js
in
fcmovnb
sub
ficoms
iret
movsl
cmp
orl
roll
in
daa
sub
and
cmpsb
push
outsl
lea
call
and
mov
add
mov
mov
fwait
dec
into
cmp
cli
xor
mov
push
pop
ret
add
out
jae
sbb
popf
xor
push
fwait
std
outsb
fnstsw
iret
popa
and
and
mov
sbb
bound
xchg
jmp
pop
xor
mov
call
inc
dec
jo
aam
nop
jno
pop
xchg
xlat
enter
sbb
inc
cs
movsl
cmc
jno
insb
dec
xchg
ljmp
fcompl
sub
dec
cmp
lea
push
test
inc
mov
loop
int3
adc
fisubl
fdivs
mov
mov
scas
xor
lods
add
mov
loope
sub
or
push
shr
sub
mov
ja
call
movsl
out
xchg
movsl
insb
add
mov
sar
jno
ret
ret
jl
push
cmp
dec
and
dec
imul
flds
pop
push
xor
pop
mov
jae
sbb
add
je
roll
mov
mov
sbb
add
cmc
inc
sti
push
lahf
cld
sbb
int
clc
aaa
jp
adc
pop
fiadds
dec
nop
xchg
push
or
xor
xor
mov
rorb
pop
xorl
lret
mov
sub
xor
adc
xor
push
cmc
xchg
push
cmp
cmpsb
mov
and
push
rolb
mov
xchg
lahf
shrl
xor
pop
sbb
hlt
repz
jge
rorl
cmpb
sub
std
xchg
push
aam
inc
aad
push
lret
mov
pop
jg
fcmovnu
mov
or
and
cs
fistpl
pop
push
mov
data16
xchg
mov
add
sub
xor
mov
roll
push
rorb
das
outsl
push
imul
fs
cmpsb
mov
loope
cmp
push
jb
scas
add
lods
dec
or
dec
popf
scas
or
js
insb
xlat
and
pop
xchg
sub
lcall
dec
xor
xchg
popa
push
sbb
dec
imul
ret
jl
pop
outsb
inc
pop
mov
jp
push
inc
insl
push
cmpsl
fst
pop
popf
dec
dec
push
movsb
stc
jb
add
lcall
mov
lret
xor
sub
subl
dec
adc
adc
add
dec
ja
xchg
add
push
dec
jge
movsl
jae
cmp
push
cmp
dec
jl
adc
sbb
push
mov
call
sub
js
lds
iret
push
push
xchg
sub
dec
lock
adc
loop
or
les
mov
mov
lds
mov
lods
add
stos
ds
outsl
lret
cmovo
xchg
sub
and
cltd
jge
aad
lcall
insb
xchg
loope
shrl
adc
xchg
test
fsubrl
and
mov
int
xchg
jg
loope
xchg
sbb
rolb
xchg
xor
ja
popf
or
mov
push
ficoml
push
inc
sbb
sub
cmpsb
ficompl
rorl
or
dec
cmp
sbb
jecxz
and
das
or
mov
jecxz
daa
enter
test
mov
cmpsl
mov
outsl
icebp
cmp
push
push
popa
scas
sub
imul
mov
daa
cmp
push
ret
movsb
ljmp
sbb
adc
mov
mov
daa
adc
out
mov
xchg
inc
cwtl
pop
sbb
adc
pop
xchg
das
xor
andb
std
adc
mov
cs
cld
out
and
sbbl
xor
push
icebp
insb
jl
dec
push
cmp
sbb
sahf
add
add
xor
addl
fidivrl
call
movsb
inc
punpckhwd
sbb
xchg
mov
mov
fcomps
es
dec
xchg
jmp
add
xchg
cmp
xor
jmp
out
enter
test
imul
inc
add
add
in
shr
scas
sub
scas
push
add
icebp
icebp
lea
and
push
shl
imull
addr16
cmp
sub
mov
mov
fs
loopne
push
mov
pushf
imul
cmp
pop
mov
sbb
arpl
icebp
addr16
jge
movsl
mov
xchg
dec
sub
xchg
mov
dec
push
mov
jecxz
imul
verr
xor
iret
in
repnz
mov
dec
add
sub
mov
mov
scas
push
and
leave
loopne
gs
mov
mov
es
or
push
push
shll
and
jmp
stos
pop
out
pop
loope
xchg
push
gs
sti
mov
adc
icebp
aaa
mov
push
out
dec
test
test
test
push
cmp
cmp
push
xchg
paddq
in
or
jmp
xor
je
popa
rcll
jp
je
xor
sbb
pusha
and
insb
insb
daa
hlt
xor
adc
mov
insb
repnz
cmp
cmp
outsl
mov
sbbl
test
enter
and
stc
enter
lcall
lods
xchg
adc
mov
mov
aaa
mov
sahf
inc
pop
mov
jo
push
notl
jmp
cmpsl
lret
dec
pop
mov
and
or
sbb
jno
notb
pusha
push
ret
or
lock
repz
stc
or
push
aas
jns
jmp
sub
and
dec
adc
fcmovbe
xorb
push
sub
mov
mov
stos
push
pushf
fldt
pop
imul
nop
into
ss
adc
sbb
lods
push
out
add
fldcw
movsb
lea
dec
jle
inc
sub
sub
xorb
dec
inc
icebp
dec
fadds
daa
push
dec
repz
xlat
xor
fwait
push
add
cs
mov
push
mov
jo
rorl
jge
icebp
push
and
fdivr
decl
aaa
push
mov
pop
pop
ljmp
sti
in
insl
lods
hlt
inc
mov
cli
popf
outsb
pop
push
lock
mov
lds
repnz
mov
mov
aam
std
mov
icebp
sbb
jbe
and
inc
bound
push
mov
ror
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
roll
sarl
pop
addl
or
dec
push
pop
push
add
in
pop
sub
movsb
dec
push
std
cmpsb
push
jg
push
push
insb
loopne
mov
icebp
xchg
fwait
aas
ja
xchg
frstor
mov
push
xchg
push
lahf
inc
inc
pushf
data16
movsb
sbb
fs
adc
ljmp
out
xchg
mov
xchg
loope
pop
cmp
sbb
jle
dec
aad
or
out
call
loopne
sbb
imul
xchg
int
push
fwait
sub
mov
dec
or
dec
and
adc
clc
into
push
inc
sub
xchg
mov
stos
cmp
jno
xchg
jle
xchg
rorb
hlt
in
lahf
cmp
sti
mov
sar
push
rorb
lods
pop
xlat
add
filds
pop
push
lock
sub
gs
stos
js
fmul
jle
ljmp
sbb
mov
add
pop
inc
add
fistpl
mov
int
std
and
loope
pop
loopne
push
sbb
or
xchg
pop
lods
and
mov
std
inc
mov
aas
frstpm(287
loopne
add
fcom
xchg
mov
adc
pop
push
out
outsl
frndint
or
pop
mov
sahf
inc
aam
out
dec
in
sar
pop
mov
or
sub
push
add
push
roll
mov
adc
stos
or
push
push
xchg
enter
les
ljmp
int3
mov
bound
stos
inc
cmc
out
push
hlt
adc
test
lods
pop
leave
lods
push
mov
insl
and
xchg
mov
loop
shll
sbb
cli
outsb
aas
shll
movsl
xchg
pop
data16
movsb
xor
arpl
add
lret
jmp
mov
sub
jbe
xor
xchg
inc
ret
fidivs
mov
movsb
sub
mov
or
push
pop
out
ror
orw
iret
add
pop
mov
cmp
adc
jbe
sub
mov
xchg
popf
testb
cmp
fdivr
iret
fs
loop
mov
jle
stc
aad
push
adc
or
je
or
test
popa
dec
xor
out
lcall
xorl
sub
cmpsl
insb
and
insl
lcall
fildll
aam
add
scas
add
mov
adc
add
or
out
test
lgs
pop
cs
push
scas
out
cli
popa
adcl
add
orb
inc
sbb
repz
mov
push
pop
pop
js
sbb
mov
into
or
sub
or
xchg
dec
mov
xor
xchg
or
clc
pushf
pop
cmpsb
popa
loopne
pop
add
and
in
jp
aam
fists
xchg
orb
push
into
cmp
jp
scas
jae
aas
mov
dec
imul
pop
insl
inc
fisubs
xchg
sbb
adc
cmpsb
popf
mov
sbb
xor
and
jno
jl
jmp
test
jecxz
mull
popa
addr16
scas
xchg
iret
sub
add
stc
lret
cmpsl
pop
fisubl
insb
cwtl
mov
jnp
adc
xor
sbb
popa
add
repz
inc
bts
fdivrs
fcos
aam
mov
in
bound
and
popa
dec
sub
stos
push
mov
hlt
cld
mov
add
push
add
sbb
cmpsb
push
imul
test
daa
xchg
lahf
dec
xor
jle
inc
dec
xchg
loope
jo
sarl
sub
inc
jecxz
fstp
pop
das
adc
dec
mov
mov
or
jae
adcb
stos
into
xor
push
pusha
lret
inc
mov
xchg
fwait
and
push
mov
data16
outsb
cs
imul
notb
sbb
insb
or
lea
fxch
ret
nop
ret
pusha
scas
std
cmp
int
xlat
sahf
push
and
into
lock
sbb
mov
in
xchg
mov
and
fstpl
mov
mov
cwtl
dec
mov
xchg
push
inc
aam
shl
cltd
and
out
rorl
push
jge
popa
loop
outsl
fidivrs
in
push
scas
cmp
mov
ret
adc
cld
cmpl
repnz
xor
jmp
fsubl
js
inc
scas
inc
gs
xchg
jo
lahf
and
mov
mov
jl
pop
pusha
clc
test
inc
push
sbb
pop
repz
dec
push
shlb
out
jb
or
fldenv
lret
add
fsubs
dec
pushf
pop
inc
fmuls
lret
cmp
dec
add
jle
pop
lahf
scas
jg
repnz
push
mov
push
testl
fcomps
clc
mov
xchg
loope
or
test
in
les
pusha
ds
dec
jmp
data16
fcmovu
shrl
mov
inc
movsb
mov
xor
clc
push
sarl
xchg
or
xchg
add
loope
xchg
icebp
call
cmpb
sbb
iret
xchg
inc
movsl
sub
call
sbb
cmpsb
inc
and
sbb
xchg
mov
sub
xor
or
and
jp
out
pushf
mov
jg
orb
mov
add
add
pop
cmp
and
xchg
lret
xchg
xor
pop
sbb
mov
mov
mov
leave
scas
xor
and
push
sub
or
adc
mov
lahf
adc
jnp
insl
gs
jns
or
aas
dec
scas
jnp
fisttpl
stos
push
mov
lret
loopne
jmp
xchg
lock
sub
sbbl
inc
adc
and
push
inc
pop
aam
jnp
jl
add
gs
dec
xchg
pop
into
mov
cld
fisubl
stos
mov
jne
xorl
in
xchg
add
pop
or
cwtl
sar
sub
das
out
loopne
cmc
or
add
ret
gs
and
or
sbb
or
mov
arpl
dec
mov
out
aam
fbld
aaa
lret
pop
add
push
push
jae
int
push
xor
test
push
mov
xor
mov
adc
scas
inc
nop
jmp
pop
xchg
pop
xchg
shl
out
adc
jbe
cwtl
clc
or
iret
add
jne
cmp
sbb
cmp
mov
cmp
aaa
jnp
shl
daa
ja
inc
aad
aas
orl
pop
adc
lds
ss
jns
hlt
int3
dec
or
test
xchg
mov
dec
sub
mov
mov
push
fsubrp
cld
inc
mov
fiadds
les
pop
dec
xor
or
jno
push
xchg
mov
mov
push
aad
nop
shlb
ss
sahf
sbb
dec
mov
sbb
sbbb
mov
notb
jecxz
outsb
sarl
out
mulb
xchg
mov
in
lcall
iret
jno
mulb
cld
movlps
mov
pop
fcoml
xchg
stos
add
mov
push
pop
in
sub
test
mov
mov
cmpsb
pop
cmc
push
xlat
movsl
insl
mov
xor
mov
popa
hlt
pop
cmc
and
xchg
jl
adc
jno
jno
jg
mov
lods
xchg
imul
push
pop
jecxz
gs
add
mov
ljmp
cmpsb
jl
jp
dec
or
sub
push
sbb
inc
sbb
in
in
and
sub
xor
mov
pop
add
lea
arpl
test
jecxz
push
movsb
mov
out
mov
and
jle
mov
jp
pop
shlb
je
add
xor
mov
push
stos
clc
das
sbb
cmp
mov
cmc
insb
stos
push
adc
mov
arpl
out
inc
mov
leave
mov
loope
call
das
xchg
lock
add
ret
sti
inc
mov
push
cli
mov
push
repnz
inc
adc
divl
push
repnz
jae
test
outsl
push
jns
imul
adc
lcall
cmp
add
sub
test
loopne
push
mov
dec
adc
js
out
aaa
out
popf
outsl
mov
cmp
pusha
jo
mov
cmp
pop
sahf
stc
xor
dec
and
iret
adc
xchg
int
sbb
mov
jle
xchg
jns
lret
movsl
dec
dec
cmpsb
iret
mov
cpuid
jnp
xchg
arpl
std
xor
adc
rcrb
push
imul
push
popf
mov
int3
int
mov
aas
or
xchg
xor
or
sub
sbb
popf
mov
cmp
jp
jb
out
out
cs
pop
mov
outsb
sub
sub
mov
jle
cs
jle
mov
lods
test
cltd
mov
fstps
and
divl
mov
testb
jle
xor
outsl
test
rclb
test
adc
imul
test
push
insl
repz
cmp
mov
jecxz
repz
mov
cmp
out
mov
mov
data16
jp
mov
loope
or
sti
sub
in
cmp
and
test
pop
jecxz
jns
into
jg
inc
aaa
push
insb
stos
cmp
pop
scas
into
enter
in
test
adc
incb
add
loope
dec
pop
dec
mov
aam
fadds
xchg
xor
pop
lcall
sbb
cltd
in
sahf
and
or
shll
js
repz
lahf
cwtl
outsl
sbb
in
leave
xchg
xchg
sbb
cmpsl
xchg
fists
sub
ss
movsl
cwtl
loop
frstor
shlb
out
mov
mov
mov
xor
sub
dec
test
xor
loopne
outsl
test
lods
int3
or
adcl
fdivp
out
sub
mov
push
add
aam
jo
jae
sbb
hlt
push
mov
xor
scas
mov
imul
dec
fldl
lret
mov
xchg
data16
dec
insb
dec
cmp
repnz
and
ret
jbe
pop
or
fimull
xchg
cmp
lods
test
push
sbb
sub
repnz
mov
push
push
js
bound
mov
bound
jecxz
test
lock
inc
or
add
xor
aas
and
jmp
sub
jle
fdivrs
in
mov
cmpsb
ds
inc
popa
ljmp
ret
stos
idiv
shrl
call
xchg
out
fsts
into
sbb
cmc
iret
xchg
cmpsl
push
hlt
lds
iret
roll
dec
sub
movzwl
sbb
sbb
add
jne
cmc
cmp
cwtl
sbbb
xor
adc
pop
push
leave
clc
outsb
insb
pop
mov
dec
push
cld
jnp
scas
inc
xchg
cmp
push
jp
in
pusha
sub
xor
arpl
ss
sub
sbbb
pushf
sub
ja
inc
add
dec
cmp
ds
jg
sub
xor
jo
cmp
lods
das
dec
jge
inc
mov
shll
ljmp
jl
sub
pop
repnz
shll
mov
pop
andl
mov
sbb
xchg
in
out
jecxz
push
scas
shll
or
aas
in
std
and
jl
jle
imulb
adc
jne
xor
test
pop
insl
push
sti
sbb
xchg
cmpsb
je
fs
inc
xchg
ret
sub
out
xchg
pop
jbe
lods
pop
test
pop
mov
xchg
test
pop
jp
push
rcrb
xchg
or
xchg
sub
in
xor
xchg
push
sub
pop
adc
mov
dec
cmp
gs
aas
cwtl
fstpl
and
push
inc
fmull
out
adc
mov
pushf
mov
add
jne
leave
mov
rolb
mov
or
mov
and
outsl
adc
lahf
mov
mov
scas
test
jecxz
mov
lock
inc
leave
or
or
sub
outsl
popa
sub
push
cltd
mov
mov
sti
std
dec
dec
or
and
cmp
lret
sbb
mov
cwtl
repz
adc
mov
and
cmp
fwait
jno
movsl
add
movsl
mov
in
mov
jns
add
and
jne
dec
into
in
mov
dec
adc
test
lret
in
mov
jns
cmpsl
push
and
pop
sbb
pop
xchg
stos
fsubl
sti
cmpsl
out
cli
jl
adc
sbb
clc
inc
sahf
adc
rorb
push
insl
out
daa
mov
dec
jl
xor
cmp
in
data16
aam
xchg
and
jg
sbb
pusha
outsb
add
cmp
cli
cmp
lret
movsl
aam
jns
xchg
sbb
xchg
xchg
leave
jae
dec
pusha
rorl
mov
push
sbbb
testb
xchg
fwait
adc
fwait
mov
pop
or
sub
or
test
lcall
mov
mov
mov
loope
cmp
fsts
ret
xchg
push
arpl
cmp
dec
cmpsl
jecxz
in
or
xor
sub
xor
add
xor
or
test
mov
mov
push
cwtl
dec
sahf
mov
inc
outsb
movsb
dec
pop
dec
and
subb
int3
mov
or
or
cmpsl
mov
andl
out
ja
push
jge
pop
inc
sub
gs
ss
test
movsl
mov
fs
lahf
aad
and
inc
jmp
shrb
imul
insb
xor
mov
das
mov
mov
lods
stos
popf
test
lea
lods
pop
jo
push
enter
mov
mov
rcrl
mov
cmpsb
out
shll
bound
jg
ljmp
cmp
sbb
sarl
jle,pt
mov
int3
fwait
lret
jne
ds
jg
sub
insl
negb
sub
out
dec
push
pop
jnp
sub
adc
push
xchg
adc
jmp
lock
pop
jnp
xlat
add
mov
cwtl
or
jge
fdivs
call
add
clc
and
out
in
pop
sub
push
inc
movsl
fnstsw
sbbb
push
jmp
dec
test
jb
inc
jae
pop
rclb
sbb
enter
cmpsb
sahf
inc
test
ja
add
adc
outsb
push
xor
add
ja
or
ja
xchg
adc
jg
mov
in
iret
into
outsb
mov
gs
ljmp
lods
sbb
push
adc
call
lds
js
lods
call
mov
mov
dec
jne
push
adc
cmpsl
in
fsqrt
lcall
fdivr
testl
xchg
mov
push
rol
push
pop
xchg
shr
inc
out
sbb
cmpsl
mov
sub
test
sbb
pop
out
push
es
fcomps
fldcw
dec
cli
xlat
scas
inc
jge
repz
popf
aad
aaa
adc
test
mov
test
out
jmp
icebp
rcrb
cmpsl
push
fimuls
in
popl
addr16
push
dec
ja
and
add
mov
cwtl
gs
xchg
clc
sub
and
and
inc
push
cli
adc
js
jns
aam
sarb
inc
cld
fcmovnb
int
gs
mov
rcr
in
pop
cmp
jge
inc
mov
sbb
unpckhps
daa
or
in
std
xlat
mov
cmp
clc
stc
sahf
cld
dec
out
mov
out
iret
add
popa
roll
lods
repnz
stos
ja
pop
sub
cmp
add
lock
and
dec
pop
int3
dec
mov
push
mov
push
sub
test
mov
mov
nop
out
imul
cld
cmpsb
sahf
or
das
ds
lret
rcrl
sbb
mov
orl
cmp
lret
xor
ret
shl
add
int3
jg
roll
insb
push
or
sarb
xchg
pushf
scas
movsb
xchg
js
sahf
pop
or
jo
scas
inc
je
ss
gs
cmp
outsb
inc
in
jae
loop
mov
aam
xchg
fsub
mov
lds
jg
xchg
mov
inc
imul
xor
fsubs
out
aas
movsb
loope
xchg
pop
pop
mov
insl
sbb
ror
gs
pop
xchg
or
inc
aad
gs
pop
pop
jl
cmp
mov
push
lods
imul
add
cltd
scas
test
in
push
mov
xchg
ret
out
out
into
xor
xchg
cmc
lock
mov
jge
das
add
test
jge
sti
jne
push
and
cmp
pop
push
loop
pop
andb
mov
aad
rol
in
push
mov
rcll
dec
pop
rclb
cmpsl
les
cmp
push
sti
add
stos
scas
mov
push
add
jmp
dec
lcall
mov
and
les
ds
loope
xchg
mov
es
ljmp
jmp
movsl
andl
adc
sub
fisubl
push
cwtl
push
ja
sti
out
sahf
jle
mov
jg
sub
sahf
leave
dec
xor
fldt
push
and
cwtl
xchg
adc
mov
stos
cs
popa
es
push
sub
inc
lea
or
adcb
dec
adc
adc
loopne
mov
jb
test
and
mov
pop
and
sbb
xchg
lds
in
push
ljmp
dec
xor
mov
lcall
mov
push
cmpsl
mov
xchg
dec
add
mov
int
add
sub
int
aam
ret
jmp
dec
jo
and
mov
stos
repnz
fmull
shrl
mov
xchg
arpl
test
aaa
stc
das
outsl
cli
sbb
adc
fldenv
pop
lock
pusha
sub
scas
fistl
into
test
shll
clc
outsb
xor
lock
and
cli
scas
lcall
pop
dec
cmpl
add
cmp
out
pop
sbb
js
push
adc
popa
or
cld
jecxz
push
lods
pop
lods
inc
xchg
pop
mov
jo
pop
sbb
push
imul
repz
add
je
pop
sbb
push
pushf
bound
and
sarl
pop
roll
mov
inc
fs
mov
fstps
xor
mov
mov
sti
in
in
mov
mov
inc
cmc
out
repz
pop
or
mov
movsl
cmpsb
scas
adc
pop
std
adc
shlb
sub
loop
ljmp
xchg
into
xchg
subb
scas
add
dec
arpl
mov
xchg
xchg
jle
cld
cltd
enter
movsb
mov
jne
jno
mov
push
xor
lods
jg
xor
or
xor
inc
jnp
dec
jecxz
xchg
adc
jle
loope
xor
xchg
aam
sub
nop
mov
inc
stos
enter
adc
rcrl
gs
and
jecxz
xchg
jg
cltd
pop
dec
cmc
cli
mov
or
pop
sub
loop
xchg
std
ds
and
in
icebp
dec
dec
in
arpl
loop
xchg
mov
push
jge
repz
inc
leave
pushf
test
jnp
ljmp
pop
mov
es
xchg
adc
mov
out
and
fsubr
insb
inc
shrb
mov
adc
jb
push
fildl
test
cmpsb
clc
cmp
cwtl
add
decl
call
js
adc
in
mov
popa
adc
pop
orl
call
dec
xor
mov
sub
dec
pop
push
js
xchg
jge
dec
and
stos
fistl
sbb
pop
dec
sub
sub
bound
test
inc
cmp
lahf
cmpsl
hlt
or
stos
or
fs
xor
addr16
inc
pop
jbe
add
and
mov
lahf
mov
cmp
jp
fcmovb
push
adc
sahf
out
mov
push
or
test
sub
or
and
out
adc
sbb
mov
xlat
int
mov
fisubrs
mov
es
push
cs
xor
sarl
rcl
or
sarb
cmp
aad
mov
out
jmp
jo
int3
scas
les
inc
out
mov
test
xor
mov
jae
jb
test
add
popa
mov
adc
enter
push
xchg
sarl
jo
call
iret
loope
shr
iret
jae
filds
ljmp
imul
sub
adc
and
add
ja
dec
lock
pop
fisubl
shrb
sbb
xchg
mov
sbb
mov
or
adc
fdiv
inc
in
ss
mov
stc
cmp
inc
cmp
stos
adc
inc
or
jo
in
fimull
cmp
pop
or
cltd
mov
jmp
insl
loop
sub
push
push
jne
fildl
adc
sbb
dec
push
lea
sbb
mov
adc
inc
in
test
rol
pop
jmp
cmc
stos
cli
dec
icebp
sub
mov
add
call
and
shr
sbb
dec
sub
jmp
fiadds
out
mov
xor
pop
xor
aam
push
jns
add
cmp
ljmp
std
arpl
fcompl
ljmp
leave
sbb
xchg
loope
fidivs
mov
in
repz
add
mov
xor
fdivs
add
ja
or
lcall
cltd
loope
dec
inc
aam
loope
jnp
js
xchg
data16
inc
in
cmp
pop
adc
xchg
icebp
shrl
scas
scas
aam
xor
aas
rclb
sbb
std
daa
lret
stos
addl
adc
int3
aas
je
lock
fildll
dec
push
pop
scas
cltd
movl
jle
and
imul
enter
jo
add
dec
pop
jecxz
jge
xor
mov
lret
out
pop
icebp
mov
push
mov
nop
sub
pop
push
stos
cmp
xor
push
push
fwait
pop
repnz
sbb
loope
pop
test
jp
mov
jae
mov
sub
xchg
mov
subb
fbstp
jmp
adc
xchg
xchg
call
jne
aad
hlt
out
pop
cmp
aam
jp
mov
roll
xchg
add
xlat
mov
insb
lret
dec
lds
dec
and
stc
sub
scas
je
jp
in
pop
xchg
push
push
test
aad
push
dec
xchg
gs
jmp
add
ds
or
jnp
fiadds
std
insl
mov
imul
mov
cs
vpaddw
dec
mov
fucomip
pop
push
in
push
mov
jecxz
adc
sbb
imul
aad
cmp
add
daa
xor
sbb
adc
popf
xchg
push
fistpl
das
cmp
pop
aad
ss
gs
sub
add
repnz
sub
cmp
xchg
das
xchg
mov
leave
out
cmp
out
fsub
push
dec
rclb
movsb
jle
fwait
pop
xor
sbb
dec
mov
mov
pop
stc
push
fwait
cmp
xor
int
mov
mov
and
mov
push
mov
sbb
shlb
mov
jg
sub
popa
mov
movsb
jle
test
out
jnp
inc
movd
sysret
dec
mov
in
insl
nop
mov
ret
adc
fs
fistps
jae
sub
push
fdivr
and
sub
std
push
stos
incl
add
in
les
in
xor
mulb
pusha
test
out
mov
pop
loop
loopne
int3
imull
imul
or
xorb
jle
push
enter
pop
je
mov
add
push
std
and
les
repz
int
mov
and
adc
rclb
lods
sbb
aaa
dec
mov
ja
loopne
aam
sbb
dec
arpl
mov
pop
decl
jnp
jecxz
jbe
std
jbe
lcall
movsb
cmpsl
faddp
sarl
cmp
mov
pushf
dec
xchg
aam
clc
int3
test
push
and
ja
xchg
stos
gs
cmpsb
inc
pop
dec
aad
push
jp
adc
sub
jae
sub
in
sbb
mov
addr16
jmp
cmp
and
pop
cwtl
ljmp
inc
inc
mov
sbb
sub
pushf
sarl
cmc
aam
ss
sbb
aas
adc
hlt
ljmp
lods
sub
popf
xor
cmpsb
mov
neg
pop
jmp
into
xchg
push
mov
push
sbb
mov
sub
inc
add
imul
hlt
in
int3
dec
ss
sbb
add
sub
pop
push
sbb
idiv
xor
xor
insl
add
pop
inc
jg
mov
fcmovbe
jg
and
loopne
push
dec
pop
popa
lret
cwtl
or
jle
repz
xor
push
imul
inc
cmpsl
repnz
mov
mov
xchg
sub
insb
and
adc
xor
pusha
into
xor
sub
dec
mov
sbb
mov
push
cli
cltd
push
mov
repnz
and
cmp
int3
dec
mov
ret
fstps
or
icebp
in
sahf
lods
add
xchg
push
stc
xlat
cmp
xor
inc
stos
add
jne
lods
fsubrs
leave
sbbb
jne
push
cmp
fbstp
inc
stos
mov
flds
ror
rcll
cmpsl
ja
out
pop
xchg
in
mov
mov
test
rcrb
xor
xorb
add
mov
gs
mov
movsl
mov
mov
mov
mov
push
inc
and
cmp
int3
cmp
cmpsl
xor
cmpsb
nop
xchg
push
stos
pop
lea
mov
lods
test
mull
or
cmpsl
pop
clc
in
mov
fistpll
jg
sbb
xchg
push
leave
xchg
pop
negb
mov
dec
fldl
jle
dec
mov
mov
mov
mov
shll
cmp
sbb
adc
adc
or
jle
mov
pop
sbb
sub
mov
cmc
enter
aaa
sbb
stos
in
sahf
cmp
enter
ret
stos
push
out
adc
adc
push
xlat
lds
out
cwtl
imul
arpl
cmp
lds
sarb
mov
clc
adc
daa
cwtl
cwtl
bound
ss
notl
mov
enter
fadd
inc
ljmp
shr
loope
inc
sbb
dec
jns
jo
mov
jg
cwtl
jb
out
pusha
insl
pop
sbb
into
push
and
out
mull
sbb
ret
add
mov
enter
xor
movsl
dec
cmp
enter
enter
cmp
pusha
or
ljmp
iret
fadd
pop
or
clc
adc
out
or
out
dec
fdiv
cltd
jg
pushf
jmp
xchg
test
insl
xor
add
xchg
xchg
sub
sti
mov
or
rorb
das
mov
fsubrp
faddl
mov
xor
lods
loopne
fwait
cmp
push
add
or
push
insl
sbb
xor
cmpsb
sbb
sub
pop
push
and
dec
sub
in
shlb
mov
inc
cmc
xor
or
call
lret
push
or
push
cmovs
pop
loop
pop
sub
lret
imul
das
shlb
ljmp
pop
cmp
push
addr16
scas
push
loop
jae
pop
xchg
mov
inc
in
dec
xchg
das
add
mov
lahf
mov
and
jbe
and
dec
dec
jle
hlt
cmp
cmc
insl
mov
stos
cmp
aam
std
add
aaa
dec
and
ret
out
pushf
jne
aas
daa
mov
lods
lea
jb
bound
insl
pop
xor
adc
cmp
out
push
xchg
or
out
xor
jns
xchg
loopne,pn
in
fs
sti
ja
lret
imul
sbb
lcall
pop
xor
ljmp
adc
mov
andb
sbb
add
fnsave
and
rcrl
mov
or
and
incb
and
fisubrs
and
push
sbb
xchg
mov
and
pop
test
pop
nop
add
dec
inc
cmp
and
aaa
add
in
cld
popf
aaa
lea
cmpsl
add
xchg
adc
jmp
dec
sbb
mov
aas
stc
dec
push
pop
add
xorl
popa
pop
scas
aam
popf
mov
lret
fidivrl
add
in
xor
inc
movsl
add
scas
in
sub
mov
dec
paddq
inc
lahf
cltd
mov
ljmp
bound
aam
imul
mov
mov
fwait
mov
mov
insw
push
pop
jns
fwait
enter
cltd
xor
stos
daa
in
outsl
in
fdiv
icebp
push
dec
mov
leave
scas
scas
add
test
rcrb
fadd
sub
sbb
les
inc
lahf
aas
inc
cmp
add
je
orl
dec
sub
inc
out
pop
daa
int3
mov
adcl
popf
imul
dec
and
sahf
mov
mov
and
sub
mov
in
leave
sbb
int3
je
mov
loop
ss
adc
jbe
push
add
xor
sbb
xor
or
inc
testl
fldenv
andl
cltd
or
test
cmp
cmp
ja
orl
xchg
lret
imul
or
test
test
mov
andl
ja
stos
fbstp
loop
xor
ds
out
shrb
xor
outsb
sbb
scas
xchg
add
mov
mov
sbb
adc
push
es
notb
jb
andl
xchg
dec
loope
xchg
inc
imul
daa
jmp
cmp
inc
js
inc
cli
pop
xor
jno
mov
mov
test
addl
add
xor
xchg
adc
mov
mov
cwtl
rcl
mov
mov
and
cltd
call
add
out
inc
push
orb
or
pop
lods
mov
pop
ljmp
fsubr
sub
cmc
add
sarb
cli
or
fldt
rclb
fbld
cmp
push
fistpll
or
data16
add
push
jne,pn
subl
dec
jle
xchg
popa
jno
imul
mov
sub
jne
ret
sub
adc
pusha
fdivrs
fsubs
mov
sbb
test
shll
ret
lret
adc
cmp
xchg
adc
lcall
xor
jb
testb
mov
dec
out
add
pusha
fimuls
cmp
push
mov
popf
test
lret
int3
dec
and
repnz
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
mov
sbb
addl
sub
nop
adc
push
mov
testl
int3
in
stos
pop
aas
xchg
add
xchg
sub
mov
inc
loopne
xor
cmp
pop
out
jno
stc
pop
mov
jmp
add
out
imul
test
rcll
shlb
fldl
pop
stos
cmpsl
xchg
enter
dec
fidivrs
scas
inc
cmpl
cli
jl
jmp
enter
mov
jg
lret
cmc
jno
fwait
pop
clc
push
xchg
mov
outsl
push
adc
xor
dec
cmp
and
mov
push
adc
adc
in
pop
xchg
rorb
inc
pushf
pop
xchg
adc
mov
xchg
sub
pop
inc
fisubrl
cmp
lahf
mov
lret
adc
cli
push
fiadds
or
jp
push
fs
cmp
xchg
sbb
fcom
lahf
xchg
gs
je
adc
aam
jp
or
insb
cmp
aad
mov
movb
fnstsw
in
fcomps
aas
aas
mov
push
jp
cmp
sti
xor
call
add
adc
or
enter
repnz
mov
jo
arpl
push
int3
pop
stos
xor
pop
fs
and
mov
repz
and
lcall
sbb
or
das
jno
cmc
lea
push
test
fiaddl
aad
cltd
xchg
jbe,pn
pop
ss
bnd
fwait
or
or
push
cmp
jg
insl
xchg
sub
mov
aas
lcall
dec
sbb
jbe
into
sub
cmc
sarl
and
lds
je
adc
pop
test
cmp
data16
pop
scas
sahf
roll
loop
packssdw
rcrl
cmp
sahf
or
outsb
xchg
aam
mov
xor
push
mov
loopne
add
lcall
int3
push
enter
pop
mov
mov
or
test
jp
out
out
pushf
shlb
dec
mov
aam
pop
cmp
insb
iret
xor
cld
ficomps
lods
out
sbb
mov
dec
add
pushf
fwait
ret
adc
sbb
lea
pop
rcrl
push
sti
sub
jno
fwait
or
sub
cltd
push
mov
mulb
mov
xorb
mov
jl
adc
add
mov
cmp
loopne
cltd
movsl
jp
or
mov
in
and
aad
push
cwtl
mov
inc
cmp
xchg
xchg
pusha
mov
shrb
adc
xor
repz
add
and
dec
aad
aam
adc
push
pop
shl
add
outsl
in
fdivs
std
jmp
fsts
mov
js
mov
cmpsl
nop
or
mov
fsubrs
js
xor
jle
inc
mov
adc
mov
in
adc
mov
popf
inc
fldl
fists
and
in
pusha
imul
adc
loope
fidivrl
pop
mov
incl
mul
hlt
jp
sbb
mull
inc
mov
mov
leave
daa
sbb
inc
cmp
sub
notb
and
fdivrp
mov
xlat
pop
rcl
les
or
mov
pop
dec
push
pop
int3
cmp
data16
xchg
stc
negb
out
xchg
pop
xor
jb
jg
mov
and
sub
ss
int
cmp
fsubp
add
in
into
cmp
adc
xchg
mov
insb
jbe
mov
mov
pop
ljmp
cs
inc
sbb
or
add
inc
pop
inc
subl
stc
or
loope
jae
xchg
pop
jmp
stc
jmp
sub
xor
and
fcompp
cmpsb
nop
test
sub
data16
sub
cmp
sub
cmpsl
ret
outsb
jbe
adc
cmc
mov
dec
sbb
push
sbb
aam
mov
cld
xor
lahf
jbe
jne
inc
inc
push
and
daa
repnz
shlb
pop
clc
test
push
push
lock
popf
mov
xorb
xorb
inc
aad
out
xor
stc
jae
stc
xchg
sbb
into
leave
movb
xchg
test
iret
mov
popa
in
push
in
mov
jb
mov
mov
cs
in
lea
repz
jb
jns
push
jp
lahf
mov
sbb
stc
fnstsw
mov
mov
dec
inc
sub
push
add
adcb
and
adc
data16
mov
int3
js
mov
repnz
xchg
xor
loope
sarl
cld
mov
lods
lret
in
xlat
sbbl
push
std
mov
loop
test
insl
dec
pop
dec
mov
xlat
in
jns
movsb
sbb
rol
or
jp
pop
cmpsb
inc
lods
repz
out
mov
bound
repz
das
add
sbb
popf
testb
sub
loopne
fidivrl
out
or
or
xorl
push
mov
sbb
push
out
jle
rcrl
int3
cli
jae
inc
aas
into
inc
sbb
or
sti
inc
push
jp
pop
push
fidivl
xor
xchg
pusha
into
push
dec
jnp
cwtl
lods
xor
mov
push
xor
stos
mov
bound
popa
and
jge
cmp
nop
mov
mov
adc
popa
imul
into
push
push
inc
addr16
inc
loopne
call
or
inc
orl
or
test
adc
sar
sar
push
xchg
bound
loopne
cmp
fstpt
pop
aas
pop
mov
jge
shr
pusha
test
daa
mov
fcmovnu
pop
es
into
sub
cmp
cs
lods
cmp
sub
into
pop
insb
imul
push
and
fcom
sbb
frstor
xchg
lahf
insl
bound
cmp
dec
mov
mov
push
lahf
pop
inc
orl
fisubrs
adc
ss
loope
xchg
sbb
lds
sbb
cmp
aad
jo
mov
fwait
leave
dec
pop
mov
and
and
and
push
subl
pop
jbe
hlt
pop
mov
fwait
dec
pop
iret
mov
sub
xchg
mov
in
mov
cmpb
add
mov
mov
mov
in
xchg
data16
push
aad
sub
cmc
into
repnz
jno
in
shlb
negl
xor
test
fstpt
sub
adc
xchg
rcll
xchg
inc
out
insl
sbbl
and
loope,pn
xchg
sub
mov
sbb
push
out
mov
xchg
mov
xor
jno
les
nop
lock
packssdw
in
stos
cltd
xchg
adc
in
add
mov
push
pop
ljmp
stos
popf
in
mov
fisttpll
gs
in
out
push
cltd
cmpl
dec
sbb
mov
lds
pop
push
leave
out
outsl
dec
shl
jg
aaa
test
je
xchg
or
imulb
in
ficomps
add
xchg
mov
loop
cli
out
jbe
test
xchg
out
adc
shlb
addb
push
rcrb
sarb
inc
shlb
mov
jle
push
mulb
shr
cmp
or
cmp
cmp
dec
fcoms
add
sbb
movl
xchg
orb
jp
mov
mov
mov
icebp
lahf
jno
ret
divl
adc
lcall
xchg
sub
sbb
rcrb
fdivl
fcomp
add
mov
pop
xchg
int
or
mov
jmp
sbb
pop
pop
jecxz
mov
inc
rcl
rorl
and
imul
adcb
ret
and
ss
mov
xchg
clc
loopne
testb
add
mov
pusha
jg
fldl
pop
aam
inc
pop
bound
dec
popl
sub
in
out
add
jae
sub
lods
daa
mov
nop
and
shl
repz
cli
mov
test
cmp
mov
jl
push
push
out
pusha
outsl
push
adc
movl
mov
inc
add
xor
push
popf
ja
stc
popa
test
sub
adc
lock
movsl
push
xchg
lea
jb
xor
leave
or
icebp
cmp
add
test
mov
push
sbb
dec
or
cmpsl
cmp
push
jo
pop
push
jle
repnz
sub
xchg
mov
sbb
mov
cmc
jo
mov
in
rol
icebp
popf
pop
sahf
hlt
cmp
aas
pop
loopne
mov
or
jae
inc
cmpsb
xchg
adc
sub
dec
jo
sub
mov
out
mov
add
pushf
fcoml
mov
and
jge
sbb
in
test
into
pop
xchg
clc
cmpsb
adc
inc
dec
out
push
hlt
jo
cmpsb
mov
call
cmpl
push
dec
test
xchg
jnp
xlat
sub
pop
sub
lods
ret
fdivrl
adc
pop
loope
int
xor
iret
mov
or
in
nop
jecxz
loop
and
xchg
and
or
and
mov
push
add
je
aam
add
adc
dec
btrl
dec
pop
mov
fists
lahf
and
jbe
mov
aam
cmp
sbb
sub
cld
push
jg
les
roll
gs
add
lret
dec
imul
es
mov
stos
mov
add
rcl
sub
fidivrl
mov
fwait
mov
aaa
mov
in
or
inc
icebp
jno
mov
fildll
or
push
fcmovnu
mov
fcomi
andb
pop
into
mov
push
pop
mov
xchg
pop
je
sub
pusha
pop
cmpsl
mov
out
aaa
mov
out
pop
and
push
add
mov
mov
hlt
lds
insl
lds
std
dec
into
add
in
nop
mov
test
cwtl
testb
repnz
test
push
stc
mov
or
adc
loop
rcr
outsb
sub
sub
pop
cwtl
clc
mov
or
add
push
cmpsb
sub
movsl
fs
mov
lea
pop
les
inc
rorl
sub
shrb
rcll
sbb
mov
filds
sub
or
andb
jo
sahf
iret
int3
inc
loop
sbb
xor
dec
ficompl
cmpsb
orl
xor
mov
sahf
jo
lea
fmull
ss
fst
cltd
push
leave
cmp
cli
je
push
push
mov
stc
daa
mov
sbb
push
decl
adc
ja
loope
lret
je
nop
dec
mov
movsb
jle
loopne
das
adc
test
popa
jnp
cmp
lcall
fisubs
test
sub
pop
in
decb
xchg
movsl
or
inc
xchg
push
out
sbb
cmpsb
xlat
gs
jne
push
lds
push
lods
push
rorb
les
jecxz
pop
or
rcrb
add
test
jb
add
fimull
lods
or
mov
in
movsb
pop
xor
cwtl
pop
arpl
dec
pop
scas
inc
out
mov
jno
push
inc
fs
imul
sub
lcall
adcb
mov
mov
jge
sub
mov
sub
filds
fimuls
mov
push
push
into
inc
fdivrs
mov
or
xor
into
cmp
sti
call
iret
shlb
loope
jge
dec
adc
ja
and
lods
pop
out
add
push
shlb
imul
ret
sti
shll
xchg
out
andb
pop
cmc
mov
imull
cltd
xor
aam
sub
mov
ret
sbb
ss
lods
adc
mov
notl
lret
mov
and
dec
push
jns
xor
movsb
or
or
lret
mov
xchg
fs
add
sahf
and
ja
je
fadds
aad
cwtl
adc
sub
insb
daa
fcompl
mov
insb
dec
mov
ret
mov
mov
sbb
sbbl
jns
icebp
repz
inc
xchg
mov
data16
rcrl
test
mov
cmp
adc
mov
xchg
aad
xchg
sahf
arpl
jno
xor
ljmp
popf
sub
andb
cmp
sbb
shll
pop
xchg
adc
in
out
inc
divb
mov
inc
xchg
xlat
cmp
dec
ret
cmp
jle
jge
xchg
rorl
xchg
mov
repz
mov
adc
mov
jbe
fnstsw
movsl
faddl
or
xor
movsl
int3
test
jno
xor
or
push
push
add
jp
mov
mov
dec
ljmp
add
in
xor
inc
mov
ljmp
lcall
ljmp
xchg
aad
fs
sti
add
ds
mov
in
pop
outsb
sub
pop
movsl
and
and
or
mov
je
pop
hlt
daa
js
xor
data16
nop
push
pop
je
mov
or
std
mov
mov
ds
je
sbb
jl
lods
mov
ja
pop
mov
bound
clc
mov
repz
call
xor
fdivrs
jae
negl
sub
xor
or
insl
sub
jne
ja
or
das
mov
or
xor
jmp
jb
push
into
cmp
push
mov
data16
add
inc
pcmpgtd
xor
and
fimuls
jae
ficoms
rcrl
or
jno
negl
clc
push
leave
mov
sub
xchg
mov
pop
mov
mov
mov
mov
push
test
idivb
push
and
cmp
ret
nop
outsl
inc
sar
push
out
xchg
aaa
mov
test
dec
and
adc
push
xor
mov
mov
sub
adc
cs
mov
out
jecxz
sub
ror
or
popa
jne
or
xchg
cltd
cmp
inc
mov
adc
jne
cmpsl
into
fisubrl
inc
inc
lret
push
lods
pop
es
add
add
repnz
shrl
mov
scas
sbb
test
pop
lock
std
jnp
fcomps
js
adc
mov
int3
sahf
push
xor
cmp
fists
gs
pusha
cld
xchg
push
bswap
negl
jg
pop
push
loopne
cmp
dec
jbe
xchg
lock
mov
mov
cmc
pop
out
xlat
and
xor
pop
int
stc
cmpl
adc
ret
mov
cmpsb
adc
call
movsb
fs
outsb
lret
dec
mov
in
sub
and
pop
and
imul
imul
movl
cld
movsb
rcrl
sub
mov
ret
popa
xor
sbb
sub
loop
xor
pop
add
orb
sub
cmpsb
sub
lods
adc
jns
adc
lds
cmp
add
scas
dec
xchg
push
adc
or
lds
mov
arpl
mov
dec
add
ds
sbb
insl
pop
push
pop
xchg
inc
subl
jb
scas
cld
lret
out
inc
dec
push
imul
std
jbe
lock
cmpsb
in
sbb
outsb
and
cmpsb
jge
rorb
dec
mov
push
sbb
test
ficoms
and
inc
xchg
and
dec
sti
out
movsb
shll
mov
rorb
pop
mov
movsb
pop
subb
icebp
ret
xchg
adc
mov
dec
push
adc
xor
scas
xor
or
imul
mov
shr
cmp
xor
daa
test
idivb
xchg
out
xor
or
jecxz
cmp
hlt
push
cmpsb
out
lea
andb
pop
jb
pop
arpl
shrl
sarl
dec
imul
mov
pop
jb
dec
xor
mov
iret
orl
cmp
cmp
dec
popf
movsb
or
xor
sub
push
mov
mov
push
iret
jno
testl
or
vorpd
jb
mov
and
adc
cmp
outsl
jl
xor
iret
cmp
mov
mov
adc
sub
ss
sub
adc
jmp
sub
pop
cmpsl
fcompl
aaa
mov
dec
mov
nop
lds
fdivs
sub
mov
sarb
imul
push
cmp
xor
mov
jge
pop
popa
loopne
std
adc
adc
push
and
jo
jmp
push
adc
sbb
sbb
sub
sub
mov
es
sbb
sub
xchg
xorb
rcrb
pusha
fwait
lods
cmpsl
insb
mov
jbe
add
cmpl
aad
les
enter
lret
faddl
xlat
pusha
cwtl
jo
mov
out
repz
or
add
dec
xor
pop
rclb
jno
ljmp
xor
jmp
push
ret
ret
jmp
in
adc
std
push
int3
in
jbe
sbb
mov
std
sbb
out
cwtl
stc
dec
aas
ret
pop
lret
dec
iret
cmpsb
outsl
sahf
cs
jecxz
adc
rclb
xchg
sbb
sbb
adc
push
xchg
out
sub
add
add
mov
test
pop
out
cs
in
jg
out
mov
mov
push
or
xlat
add
call
or
cmp
xchg
xorb
cmp
mov
pop
les
adc
xchg
mov
jno
lods
imul
sub
hlt
dec
fsubrl
loopne
enter
nop
xchg
sbb
negb
dec
cwtl
inc
pop
aas
and
mov
sub
or
fwait
cmpb
sub
lret
sub
outsl
fscale
dec
arpl
stc
stc
mov
jbe
push
insl
and
fsubrs
inc
mov
outsl
lret
call
test
sub
cltd
jnp
pop
dec
lcall
and
or
mov
rorl
add
lds
mov
mov
pusha
in
cmp
mov
sbb
adc
ficompl
mov
gs
mov
lods
dec
cmp
scas
xchg
shr
xchg
int
add
push
pop
dec
cmpsl
ljmp
fs
mov
inc
adc
in
mov
pop
fcmovnu
add
or
xchg
shll
sahf
lds
jns
add
or
sub
push
out
jge
mov
lods
mov
test
pop
data16
mov
rclb
sub
es
mov
xor
jge
pop
icebp
lods
mov
mov
fbstp
dec
cli
or
test
leave
stc
xchg
xor
jle
or
mov
xorb
rcr
cli
das
ret
loopne
insl
add
inc
stos
int3
dec
mov
mov
out
jbe
push
add
sub
pop
fdivrl
sub
mov
adcb
push
ja
add
jmp
dec
aam
icebp
call
std
push
inc
pusha
les
scas
push
xor
xchg
and
das
inc
ds
push
cli
mov
push
dec
push
aam
push
pop
pushf
push
xchg
pushf
lods
xchg
aaa
ja
pop
popf
jno
jg
push
cmp
xor
sub
popf
std
movsl
popf
xor
inc
push
data16
push
cwtl
jno
cmp
aad
jle
push
sub
mov
sbb
pusha
pop
mov
fildll
lcall
dec
inc
mov
incb
lock
add
adc
jmp
and
scas
aas
mov
mov
cld
push
xlat
dec
add
sbb
mov
and
scas
movsl
out
cmc
push
cld
dec
movsl
pop
mov
jg
pop
imull
aas
rol
push
jecxz
add
adc
testb
inc
iret
adc
mov
lret
xchg
shrl
pusha
sbb
dec
out
mov
inc
aam
shrl
pop
push
jmp
mov
jge
xchg
xchg
mov
mov
lahf
jl
mov
xor
adc
push
pop
fwait
pop
sub
leave
adc
fisubrl
dec
sub
imul
push
xchg
shrb
lds
push
outsl
orl
ss
sbb
jo
dec
jle
and
aaa
mov
outsb
dec
in
and
mov
cmpl
lret
pushf
xchg
push
fisubs
rorb
xor
add
call
or
jmp
pop
inc
adc
iret
push
in
mov
icebp
add
mov
cmp
or
and
popa
aaa
push
shlb
xchg
sub
pop
add
test
cmc
pop
mul
cs
and
ljmp
fcmovnu
ret
mov
jge
mov
lock
sub
arpl
push
jle
loope
mov
adc
adc
into
cmp
mov
mov
add
inc
and
je
or
cmp
mov
sub
jle
xor
or
cmp
push
stos
jle
mov
push
add
mov
dec
shlb
js
push
dec
adc
xorb
push
iret
jne
shlb
mul
loope
in
inc
shrl
lret
push
test
repnz
in
lea
or
sub
fcompl
call
in
add
leave
jns
cmovs
sbbb
neg
add
addr16
jge
pop
ret
adc
push
xchg
pop
fsubrs
inc
jae
xor
jge
mov
rcll
dec
cmpsl
xor
mov
mov
pop
xchg
inc
pop
rorb
leave
hlt
adc
fxch
lock
data16
or
in
cmp
and
mov
and
jmp
movl
test
and
xor
adc
fwait
sub
cmp
and
test
ja
scas
leave
mov
out
pop
dec
pop
ficomps
jle
in
or
xor
mov
mov
cmp
xchg
ret
daa
xlat
dec
cmc
out
push
sbb
xchg
mov
pop
add
jmp
fiadds
push
inc
jecxz
rcrb
mov
out
jns
aam
loopne
lret
rorl
loopne
mov
pop
adc
mov
push
jl
mov
addr16
jo
jnp
test
and
adc
jno
pop
pop
pop
jb
jbe
mov
je
out
pusha
fs
int3
rcrb
push
popf
push
cmp
movsl
dec
insl
es
cli
loop
cli
ret
sbb
cmpsb
lea
or
jmp
inc
decl
loop
sbb
ficoms
sti
leave
dec
pushf
mov
fcompl
cmp
arpl
in
lret
and
data16
daa
add
xor
push
mull
pop
fs
mov
call
lea
daa
dec
cwtl
xchg
sub
dec
mov
and
aam
jno
xlat
sbb
jge
jb
adc
in
add
jo
int3
ja
cli
push
or
ss
jno
push
xchg
aad
imul
mov
xchg
out
cmp
insl
push
add
ja
or
jp
jg,pn
add
xchg
loopne
movsb
add
pusha
cmp
or
test
call
mov
jno
dec
xchg
stos
out
sbb
lods
out
sbb
addr16
pop
daa
imul
xor
cld
cmc
jb
dec
cmp
add
adc
jge
xlat
sahf
dec
cmp
push
test
stc
mov
lds
leave
dec
ljmp
push
pop
xchg
loopne
lahf
mov
xchg
inc
push
outsl
hlt
aaa
dec
cmp
dec
test
mov
sub
cmp
mov
loop
mov
hlt
cmpsb
and
jg
push
sbb
icebp
pop
push
pop
push
sub
sub
and
xlat
cli
xlat
xchg
adc
pop
gs
cs
cltd
sub
call
mov
sbb
test
mov
inc
scas
pusha
push
pop
fs
jmp
sbb
clc
mov
into
test
bound
xlat
mov
sti
movsb
add
pop
push
dec
rorl
inc
rorl
shlb
dec
push
scas
out
cltd
decl
stc
mov
or
mov
into
out
jne
push
ret
lcall
fs
dec
xchg
cltd
iret
mov
jnp
fwait
call
mov
dec
loop
rcll
cltd
xchg
and
idivl
push
sbb
mov
xchg
movsl
mov
or
clc
out
loope
add
mov
jno
xor
mov
mov
push
iret
insb
xchg
pushw
jle
sub
jg
shl
cmp
jp
jmp
fstpt
dec
jle
outsb
shl
jmp
lahf
jbe
dec
arpl
jae
hlt
xchg
in
sti
xor
jb
jbe
out
push
mov
sub
lcall
push
scas
xchg
dec
adc
sub
int3
mov
adc
das
enter
int3
jle
icebp
mov
jbe
or
xor
sahf
sub
lret
jp
inc
cmp
push
out
xor
pop
sub
cli
mov
push
lea
divl
add
daa
mov
sbb
push
lret
mov
jbe
and
in
jb
sub
fnstcw
shlb
fnstenv
hlt
push
pop
sub
fimuls
pop
adc
mov
cmp
xchg
test
lahf
lea
cmp
pusha
mov
mov
cmc
insb
dec
xchg
ficoms
dec
xor
mov
mov
cmc
sub
sar
fistl
fstl
inc
and
add
insl
inc
jmp
aam
mov
cli
cmp
arpl
mov
push
xchg
aam
divl
adc
lahf
int3
and
inc
push
dec
dec
or
int3
sub
jmp
pop
shlb
enter
aas
push
mov
and
iret
inc
mov
lcall
xor
sub
iret
push
lock
hlt
arpl
adc
or
adc
imul
ret
repz
mov
xchg
mov
lods
push
sbb
sarb
orl
dec
sbb
sbb
movb
ficoml
data16
mov
cwtl
cmc
inc
push
and
and
inc
pop
inc
cwtl
fiaddl
mov
hlt
int3
cmp
mov
sub
cltd
inc
xchg
jge
outsl
xor
dec
pop
cmp
xor
mov
pop
jmp
lock
xchg
xlat
repnz
enter
cmpsl
mov
ret
mov
dec
stc
mov
mov
iret
mov
popa
cmp
dec
and
mov
fs
jp
popf
mov
repz
out
orb
ss
sbb
ja
xchg
pop
push
sahf
clc
daa
shl
mov
inc
mov
je
sti
adc
sub
push
or
sub
cmp
push
imul
pop
fimull
pusha
and
or
jb
inc
enter
adc
push
dec
lcall
pop
mov
sbb
push
mov
jbe
jne
sbb
xchg
pusha
fadd
add
sbb
pop
xchg
out
in
cmp
repz
ds
pushf
lahf
icebp
jno
int3
jnp
ficomps
or
add
outsb
iret
pop
sub
cmp
push
test
mov
sbb
aas
outsl
loop
jae
and
adc
lcall
or
or
mov
mov
js
mov
xor
or
pop
dec
fistps
add
iret
loope
lret
jge
pop
xchg
je
fldl
and
das
lock
jae
xorb
lea
mov
iret
add
idivb
add
mov
aaa
add
mov
lds
data16
mov
pop
jp
stos
mov
testb
leave
xchg
gs
mov
pop
mov
stc
sub
or
loope
jg
cmp
cmp
adc
sbb
or
dec
mov
outsl
cmp
mov
je
lods
adc
pop
xlat
sti
xchg
stc
out
pushf
fisubl
jno
mov
fmull
and
or
lahf
in
std
icebp
sbb
mov
or
push
sahf
dec
xor
mov
cmp
xchg
sbb
scas
mov
rorl
push
into
dec
jg
cmp
repnz
and
fcomps
inc
pop
nop
lcall
mov
ret
mull
aas
js
pop
add
mov
cmpsl
pop
sub
fisttpll
xchg
icebp
cltd
sar
xchg
daa
roll
or
icebp
xchg
sub
popa
js
inc
fildl
popa
mov
push
outsl
push
mov
push
xor
out
mov
mov
leave
mov
mov
or
fstpl
jge
jae
push
cmp
pop
scas
cmp
test
add
scas
das
pushf
add
jns
subb
ret
pop
cmp
das
bound
mov
mov
mov
addr16
int3
pop
imul
test
dec
pop
negb
mov
outsl
jo
jbe
mov
and
roll
rorl
sub
sbb
arpl
pop
cltd
mov
or
leave
push
psubusb
insl
in
enter
mov
pop
and
push
shll
lcall
dec
in
imul
sub
mov
les
daa
shld
orb
lret
mov
xchg
inc
fmull
xchg
lods
cmp
dec
andb
sbbb
sbb
fnstsw
pop
shl
inc
inc
scas
fisttpl
adc
xchg
fadds
adc
pop
ret
mov
sbb
xor
hlt
xor
popf
cmp
xchg
cmpsl
cmc
jno
xor
xchg
sbb
in
push
je
es
fwait
aas
sti
or
ret
and
mov
mov
stos
dec
xor
jge
imul
sbb
push
out
push
jecxz
cmc
push
bound
sbb
jg
nop
enter
push
cwtl
jmp
and
andl
pushf
dec
and
ljmp
push
shll
orl
and
lea
sub
xchg
insl
mov
pop
push
adc
in
test
pop
mov
fs
lods
cwtl
jne
out
mov
in
lcall
xchg
sub
mov
fdivrs
lods
mov
repz
and
mov
xor
mov
ljmp
inc
push
sub
mov
in
xor
js
jb
faddl
loop
dec
dec
mov
dec
mov
mov
fsubs
fwait
and
dec
add
dec
xlat
mov
dec
add
dec
sbb
sbb
cli
mov
test
imul
push
aas
popa
fsubrp
shll
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
lock
insb
outsl
mov
addl
addl
jo
pop
push
insl
xchg
add
xchg
in
sbb
and
pop
popa
bound
orl
mov
pop
mov
mov
popa
inc
sbb
test
and
insb
lods
jge
jmp
adc
mov
loopne
xorl
dec
xor
fdivl
and
int3
xchg
inc
hlt
push
inc
in
pop
fisttps
jecxz
lcall
xor
mov
cwtl
cmp
pop
sbb
mov
out
mov
and
cmp
lea
ret
cmpsl
lods
mov
and
push
mov
stos
lcall
add
jmp
and
sahf
mov
shlb
or
mov
jmp
jmp
push
outsl
jnp
js
jp
xor
or
cmc
mov
sbb
or
cmp
cld
lds
daa
adc
divl
mov
xor
mov
lret
inc
fistpl
int
dec
lahf
mov
pop
ljmp
xchg
jl
dec
std
jle
sub
leave
shll
aad
stos
pop
pop
sahf
xor
mov
mov
jnp
mov
pop
or
pop
adc
xchg
xor
aas
dec
jno
ds
and
and
jae
sub
lock
or
pop
repnz
and
xchg
sbb
shlb
popa
mov
push
inc
push
push
lock
inc
jecxz
movsb
ja
or
shr
cmc
mov
lcall
addl
pop
sub
into
pop
addb
xlat
adc
pop
rorl
in
cmp
call
or
mov
sub
push
inc
test
lahf
popf
cmp
loope
clc
pop
pop
lahf
cmpsb
fs
mov
inc
sub
sahf
clc
popa
sub
out
nop
out
adc
adc
pop
bound
cmpsl
sbb
mov
in
lcall
inc
adc
mov
jbe
mov
mov
xchg
scas
sub
pop
popa
or
lds
push
lods
push
repnz
xchg
rorl
outsb
sub
push
pop
mov
push
rorl
xor
mov
adc
mov
test
ror
int3
scas
mov
adc
call
dec
movsb
and
fldenv
test
xchg
push
dec
cmp
push
std
fsubs
pop
clc
out
or
mov
dec
jge
cwtl
mov
and
ret
stc
xchg
fcmovb
push
shrb
cmpsb
jle
loope
push
dec
int
push
ret
inc
lea
pop
sahf
push
inc
es
sub
lods
shl
aaa
push
cmpsl
sti
xor
lods
jge
sub
pop
mov
dec
lret
mov
sbb
enter
loop
mov
push
lods
fcmovu
fs
jmp
stos
stc
loopne
lea
dec
xorb
ret
fisttps
push
mov
mov
inc
mov
pop
std
pop
pop
push
imul
call
mov
clc
in
arpl
les
gs
push
sbb
jge
cmp
xchg
jb
sbbl
adc
sub
dec
inc
cwtl
xchg
les
jbe
jge
mov
in
je
sub
shll
fdivp
sub
call
sub
fsubl
scas
insl
sti
pop
addr16
cltd
xor
dec
sbbl
fistpll
xor
push
les
lods
xchg
outsl
push
pop
jo
icebp
lret
cmp
and
mov
lahf
lea
fisubrs
lock
fists
xchg
icebp
lea
adc
sar
imul
jecxz
or
jnp
xor
pop
loop
cmp
push
mov
or
xchg
clc
and
push
xchg
scas
adc
mov
sbb
jb
insb
ficoms
hlt
push
push
xor
lods
cmp
ja
mov
in
mov
inc
call
pop
jle
imul
in
push
fisubrs
mov
dec
dec
cmc
aas
stc
clc
or
inc
push
repnz
push
mov
ljmp
test
mov
popl
mov
test
pop
movsb
jns
aad
sbb
lods
push
popa
pop
data16
nop
negl
add
mov
pop
inc
push
xchg
test
adcb
lcall
jb
lahf
xor
push
loope
cmpsl
jg
add
clc
leave
mov
inc
out
hlt
out
push
and
jno
push
pop
and
mov
outsl
and
add
push
sub
cmp
sbb
pop
mov
mov
pushw
add
push
or
mov
inc
adc
leave
push
daa
dec
xchg
adc
test
fs
mov
mov
cltd
add
in
repz
sbb
fs
ja
adc
push
mov
mov
std
xor
fstl
pop
mov
js
daa
movsl
imul
enter
ja
adc
scas
sbb
mov
inc
outsb
repnz
push
stos
xchg
fnsave
loope
sub
lods
std
int
pop
fidivl
fdivrp
popf
dec
push
in
mul
arpl
inc
movsl
mov
push
aas
ret
xchg
aam
xchg
je
cli
pop
ret
dec
fwait
mov
sar
mov
sti
rol
outsl
mov
xchg
imul
fs
or
cmp
outsl
xchg
cmp
push
mov
cmp
or
dec
jae
lods
mov
out
fnstsw
push
sub
jne
repz
imul
sbb
jl
and
push
sahf
xor
movsb
pop
movsl
dec
jno
scas
mov
mov
mov
call
shlb
ss
xchg
aas
outsb
fcmove
ret
sbb
dec
inc
iret
inc
call
outsb
inc
arpl
inc
xchg
aad
or
sub
aaa
pop
cld
cmpsl
dec
cli
insl
mov
movsl
movsb
dec
jmp
pop
sbb
enter
nop
ret
outsb
xchg
sub
out
incl
push
pop
cmpsl
pop
dec
inc
xor
rclb
xchg
mov
inc
fsts
pusha
pop
mov
push
push
pop
imul
divb
testl
cld
movsb
adc
fdivrp
push
xor
xor
or
sbb
pop
sub
shr
cmp
int
in
push
mov
test
jp
xlat
ja
fists
sub
lock
imull
addr16
sti
xor
cmp
testl
mov
mov
loopne
in
jno
je
mov
mov
mov
mov
sbb
hlt
add
test
sti
int
lret
inc
popa
xchg
dec
scas
loopne
adc
lret
or
or
out
les
xchg
push
jae
pusha
shlb
jnp
push
adc
fwait
cwtl
cmp
mov
or
and
pop
mov
mov
out
jmp
in
mov
addr16
xor
push
add
test
out
sub
mov
int
scas
nop
shrl
std
lock
js
pop
adc
xchg
mov
pop
js
xor
jmp
push
sbb
je
js
jbe
jecxz
clc
mov
inc
push
nop
pop
fldenv
mov
je
mov
add
movsb
push
mov
testl
outsl
outsb
mov
xchg
lea
sub
cmp
jnp
mov
push
cwtl
mov
andb
nop
push
xchg
jbe
fsubl
pop
je
mov
mov
ds
out
mov
pop
jecxz
insl
in
movsl
add
enter
aam
les
mov
xchg
sub
in
mov
int3
mov
scas
add
stc
in
incl
pushf
les
xchg
mov
mov
daa
pusha
inc
cmp
sub
or
rorl
mov
pop
or
cmpsl
dec
xchg
addr16
pop
hlt
cli
push
dec
add
cld
mov
inc
dec
dec
fbstp
fimull
fcomps
testl
repnz
fstpl
rol
xor
icebp
xor
sub
xchg
jl
pusha
leavew
stc
xchg
enter
push
loopne
xchg
adc
xor
out
cmp
inc
push
fs
popf
je
nop
lods
subl
cmpsb
add
and
inc
lret
lret
jb
in
repz
sub
pusha
std
dec
insl
push
cld
stos
push
mov
jns
clc
scas
and
imul
or
in
cli
cwtl
jne
inc
orl
fsubr
xchg
xchg
test
add
je
ret
inc
adc
das
push
xchg
sbb
mov
dec
stos
jg
enter
mov
mov
fwait
scas
and
js
aaa
cli
push
mov
pop
in
pop
pop
cmpsb
sbb
inc
stos
jns
pop
scas
mov
mov
xlat
xor
push
jae
mov
mov
std
movb
dec
ret
jno
sbb
jns
cmp
mov
cmp
jbe
lea
push
cmp
lea
mov
sub
pop
out
sbb
or
sbb
lea
fs
or
addr16
in
sbb
pop
iret
mov
aaa
mov
xor
data16
lock
xchg
pop
add
jg
push
inc
repz
orl
sbb
push
xor
jl
fldenv
jmp
dec
cmc
orl
dec
xchg
pop
repz
std
int
lret
and
orl
jns
mov
fldt
cmc
inc
and
lock
dec
mov
mov
in
jb
out
lahf
fists
push
in
mov
insl
cltd
pop
mov
xchg
xchg
out
stc
clc
jnp
jge
jns
ja
ret
dec
cmp
ss
lret
std
mov
sbb
xor
negb
sbb
and
js
and
or
ret
pop
inc
in
aaa
sarb
xchg
insb
in
fisubl
cmc
je
mov
ret
jnp
imul
dec
adc
jp
pop
xor
test
imul
xchg
mov
out
sub
sbb
movsb
pop
and
adc
xlat
jge
in
mov
sbb
dec
mov
and
or
cmp
sbb
mov
cmpsb
push
stos
sub
jo
test
imulb
ja
ja
dec
mov
or
or
mov
frstor
daa
mov
and
inc
xchg
xor
addr16
sub
jae
fbstp
mov
popa
outsl
insb
int
imul
fwait
sub
inc
xor
loope
mov
insl
or
mov
lret
imul
xor
dec
jp
fcoms
sub
xor
mov
insb
jno
pop
scas
or
dec
fadd
fwait
mov
pusha
sub
outsl
pop
rol
lea
mov
inc
xor
xor
sbb
rorl
arpl
sub
outsb
leave
pop
les
mov
adc
jns
mov
jns
sub
mov
xor
mov
enter
sbb
lcall
in
jecxz
shr
sti
xorl
and
test
stos
addr16
fldenv
ror
jl
mov
cmp
jnp
cmp
xchg
sbb
xlat
xor
outsb
xchg
add
mov
sbb
bnd
ljmp
sbb
mov
dec
repnz
push
push
stc
jl
arpl
cmp
and
daa
pop
jl
mov
lock
jno
add
out
sub
test
leave
cld
mov
pop
xchg
pop
mov
stos
test
add
scas
xor
stos
add
fdivs
fs
push
scas
jmp
ja
cld
pop
push
mov
or
js
sbbb
dec
push
popf
scas
pop
cltd
mov
and
mov
addr16
les
sbbl
adc
mov
shlb
mov
cmp
int
repnz
test
jge
sub
ret
js
call
outsb
sub
push
hlt
mov
jae
lret
and
or
add
aam
test
mov
jae
out
aam
jo
and
add
mov
lds
sbb
cmp
xchg
ret
xchg
jmp
pand
repz
movsb
nop
outsl
out
sahf
lret
js
mov
push
push
cltd
sbb
cltd
and
jg
nop
daa
jnp
xchg
cltd
xchg
jp
mov
iret
xlat
sahf
sbb
cmp
sbb
es
ss
fmull
mov
es
inc
into
mov
mov
faddl
xchg
mov
imul
imul
inc
out
jecxz
jecxz
fcomi
jg
lds
fildll
xchg
outsb
or
fistl
xlat
les
jg
imul
cs
mov
ljmpw
loope
cld
or
insl
pop
mov
pop
leave
and
pop
adc
inc
adc
inc
jle
add
pop
xor
dec
xchg
or
xor
ja
inc
cmp
movsb
jl
xor
sub
les
or
and
lock
sbb
pop
push
cwtl
enter
stos
popa
daa
and
xor
add
pop
test
out
xor
or
gs
test
mov
sub
mov
jbe
mov
loop
pop
out
mov
jb
lcall
out
dec
movsl
pusha
daa
es
in
mov
pop
addl
out
jp
mov
fs
pop
or
and
bnd
xor
cmp
in
or
jbe
mov
test
addr16
or
enter
aas
add
push
pop
xor
add
dec
jno
fstpl
cltd
jnp
jecxz
or
pushf
loopne
mull
aad
movsl
push
int
or
js
lcall
mov
int3
mov
pusha
mov
jne
push
lea
mov
sahf
xchg
sbb
bound
lock
lret
les
cmp
mul
mov
xor
sub
sbb
push
jge
aaa
sbb
sub
outsl
xchg
aad
or
scas
jne
mov
adc
call
in
daa
out
sahf
sub
or
subb
xor
add
clc
mov
and
repnz
hlt
cmp
or
negl
test
jb
subb
daa
mov
push
adc
sub
stos
xchg
fs
lahf
cmp
jne
xor
call
pop
jns
adc
adcb
cmp
sbb
fsts
jmp
pop
insb
int3
xchg
fwait
add
inc
lcall
idivb
mov
call
movsl
cmc
mov
lds
lea
rolb
fistl
xor
xchg
push
jl
daa
sub
imul
and
jnp
mov
mov
out
xchg
aad
scas
inc
inc
inc
xchg
dec
jp
gs
xchg
pusha
cmp
sbb
movsb
or
or
popa
lock
mov
ret
lea
fstl
and
cmc
adcb
dec
pop
jg
dec
add
in
into
sbb
cmp
sub
sub
divl
pop
rclb
and
xor
stos
or
stc
pop
sbb
inc
sub
cmp
cmp
sti
jg
leave
cmp
xor
jecxz
push
shlb
and
mov
jnp
pop
mov
scas
or
sbb
pop
fimull
lods
subb
adc
cmp
cli
xor
and
cmpsb
fldz
jle
xchg
xchg
nop
fs
push
rolb
push
filds
fstpt
and
sbb
jnp
jl
rcll
push
imul
sbb
mov
or
jg
lods
add
jno
in
sub
mov
sub
xchg
icebp
dec
xor
mov
pop
mov
add
pop
mov
xlat
mov
inc
adc
pop
jmp
pop
ss
jg
push
jmp
jmp
jg
jl
pop
enter
pop
xchg
fnsave
xorb
sub
loopne
or
testl
sahf
test
mov
push
add
add
jb
push
adcl
ja
pop
jo
fildl
xor
inc
daa
gs
icebp
test
int
xor
lea
and
inc
fnstcw
add
fadds
notb
cmp
ret
pop
inc
enter
mov
insl
pop
int3
repnz
out
dec
add
sub
daa
adc
adc
lea
lret
add
sbb
and
sahf
mull
bound
pop
xchg
xor
mov
adc
and
iret
aaa
es
pop
js
pop
stc
lahf
add
int3
cmp
mov
sub
roll
lcall
cmpl
add
add
xchg
or
loopne
inc
ds
into
push
pop
jno
adc
icebp
or
enter
mov
mov
fsubr
push
push
sub
shll
xor
mov
repnz
pop
inc
ret
inc
dec
mov
pop
or
and
std
popf
xor
push
jb
out
mov
sub
test
inc
sub
pop
pop
mov
mov
mov
insb
js
in
icebp
cmp
jle
mov
mov
out
fs
push
jno
or
lds
xor
cmp
mov
fstps
add
cmc
or
mov
jg
push
lahf
xor
sub
push
mov
push
popf
push
ljmp
ljmp
cmp
cmp
inc
jge
outsl
out
lahf
add
test
sbb
stos
mov
adc
or
pop
xor
inc
cwtl
push
dec
movsb
lock
sbb
inc
mov
fwait
jnp
nop
cwtl
cmp
pop
xchg
shlb
inc
sub
aad
push
push
sbb
add
out
and
adc
inc
jo
int
lods
das
aas
sti
sti
jnp
sbb
loopne
push
pusha
mov
sub
add
adc
int
aaa
das
test
cmpsb
fwait
pop
jle
push
jne
xchg
test
jmp
fcoms
push
lods
cmp
mov
cmp
mov
cmpsl
push
fidivrl
outsb
inc
jle
adc
dec
fistl
inc
push
mov
mov
and
xchg
cmp
adc
jne
and
test
out
loope
das
icebp
pop
into
jge
mov
pop
push
bnd
and
subl
ja
and
jecxz
hlt
mov
clc
stos
pop
jo
xchg
jbe
jae
jnp
in
pop
daa
repnz
nop
inc
fs
or
loopne
out
inc
ficompl
pusha
cmp
aaa
scas
mov
cmp
inc
and
testb
inc
in
sti
das
mov
xchg
pop
shlb
rcrb
pop
lea
shl
inc
insl
add
es
daa
and
fs
mov
sub
inc
dec
xor
cs
test
popf
sub
mov
mov
dec
cs
sbb
mov
lods
pop
adc
jns
scas
dec
push
sbb
mov
cmp
scas
js
ds
out
mov
add
stos
push
stc
jbe
and
inc
call
stos
dec
addr16
and
mov
outsl
bnd
push
imul
jnp
xor
loopne
xchg
lds
cld
into
enter
sahf
fimuls
inc
stos
test
inc
mov
pop
dec
call
add
fsubrs
adc
sbb
mov
outsl
push
lcall
sbb
mov
dec
cltd
mov
ret
and
mov
inc
jno
adc
lahf
sbb
inc
xchg
cmp
fwait
out
mov
ss
sub
cmc
stos
js
push
iret
add
imul
imul
mov
leave
mov
xlat
nopl
loopne
sub
sahf
jns
mov
test
call
test
xchg
test
orb
mov
push
adc
out
cmp
or
in
clc
mov
xchg
fdivr
divl
pusha
lods
jb,pn
fildl
jg
cmp
adc
filds
dec
mov
testl
ds
daa
push
arpl
andb
push
xlat
dec
ficoml
in
shrb
js
lods
pop
dec
xchg
sbb
xor
jns
sbb
sbb
push
add
out
lock
dec
dec
scas
and
shrl
sub
mov
xlat
add
inc
lret
pushf
cmp
daa
push
and
std
adc
mov
cmp
into
nop
nop
cmp
inc
lds
push
and
stos
xorb
mov
and
or
jns
sarb
push
pop
xchg
or
mov
fildl
fsubl
xor
dec
mov
mov
out
lret
shrl
cmp
into
shrl
sarb
push
pop
or
aaa
sub
out
cwtl
jg
into
in
adcl
dec
pop
push
sub
mov
push
test
aam
push
fstl
mov
movsb
cmp
pop
scas
addb
adcb
out
sbb
push
psubd
push
mov
xor
mov
inc
or
jle
in
gs
popf
cmp
repz
xlat
dec
scas
dec
dec
xor
das
xor
in
and
aaa
out
xchg
pop
mov
in
adc
cmp
ss
dec
es
jbe
insl
sbb
imul
sahf
mov
mov
cwtl
and
push
lret
stc
cmp
or
sbb
cmp
pop
push
addr16
cmp
fsubl
mov
les
stos
inc
cmp
daa
outsb
imul
jmp
and
rcr
jo
test
sub
pop
adc
repz
movl
adcl
sub
sub
pop
mov
jecxz
sbb
or
xor
xchg
push
adc
jno
and
or
jmp
cli
push
and
fcomp
cmpsb
imul
mov
mov
pushf
inc
jns
mov
in
mov
add
imul
sti
insb
mov
jg
das
push
xchg
lock
pusha
stc
sbb
sbb
push
pop
ret
mov
add
out
outsl
lea
pop
ljmp
std
cmp
outsb
inc
mov
push
dec
cmp
or
xchg
shlb
ficompl
les
sbb
add
in
lret
jne
xlat
mov
mov
jno
scas
pop
or
lods
pop
clc
jno
inc
addr16
sbb
dec
mov
xor
gs
lahf
xchg
arpl
in
push
inc
pop
mov
jo
fidivrs
or
inc
add
test
xor
push
inc
repnz
xlat
jl
faddl
mov
subl
mov
fistps
dec
test
xchg
adc
adc
idivb
mov
mov
jmp
cmp
mov
xor
mov
sub
xchg
shr
cmp
shll
mov
fs
repnz
shlb
fdivl
mov
hlt
and
jbe
test
and
sahf
aam
mov
xchg
pop
mov
jmp
imul
or
nop
cmpsl
push
add
stc
push
rcl
int
sbbl
imul
push
sub
sbb
out
mov
popa
jle
adc
inc
test
add
pop
xchg
pop
out
xchg
in
dec
xor
scas
dec
sbb
mov
cltd
mov
rclb
jb
psubusb
xchg
stos
add
rorb
inc
sub
scas
push
and
data16
adc
dec
rol
jge
xchg
int
push
xchg
add
xor
shll
inc
in
pop
arpl
fimull
rcl
shr
shr
add
insl
jle
pop
repz
fistpll
mov
xchg
cli
dec
adc
out
pushf
cs
sbb
sub
inc
lret
pop
push
pusha
inc
aam
dec
sub
and
fwait
mull
push
mov
jne
sbb
pop
pusha
sahf
out
adc
daa
cmp
lea
daa
cmp
dec
fsubrs
jg
clc
xchg
xchg
sbb
pop
sarl
push
scas
jnp
mov
sbb
push
or
pop
jo
icebp
int
call
test
adc
add
inc
jp
daa
lea
mov
shlb
stos
in
fwait
test
es
int
adc
inc
jle
xor
push
mov
repz
out
pop
test
adc
cs
ret
out
lock
or
outsb
repz
mov
stc
mov
sahf
nop
testl
outsl
and
popf
fwait
stc
fadds
das
add
in
cmp
ret
xchg
out
pop
lcall
cmpsb
out
jnp
and
jmp
in
inc
shl
jle
and
jle
std
sti
sub
ja
sti
and
inc
mov
xchg
mov
push
shlb
aas
sbb
push
add
daa
daa
movsl
mov
push
mov
fucomip
xchg
int
lahf
cmpsl
sarl
hlt
mov
xor
cmp
int3
inc
arpl
cmp
bound
adc
cmp
popa
pop
adc
pop
pop
add
outsl
roll
rcr
aam
hlt
mov
loop
pop
jg
ss
cli
les
mov
jmp
add
or
xchg
jno
xchg
adc
mov
xor
add
loopne
mov
add
push
out
dec
cmpsb
xchg
adc
icebp
jmp
insb
into
pop
ficompl
jp
stos
adc
jo
in
sti
mov
mov
sub
xchg
mov
pop
test
push
mov
pop
xor
sbb
lods
movsl
in
pop
pop
setle
fimuls
ljmp
ja
aas
testb
pop
sub
js
mov
sbb
gs
or
imul
pop
iret
mov
fistpl
jge
jns
cwtl
adc
ss
lods
std
repnz
pop
sbb
mov
dec
scas
adcb
mov
test
pop
icebp
sahf
add
lods
sti
jb
shll
adc
aad
enter
hlt
testl
repnz
in
jl
lods
idivb
push
shr
pop
cmc
sbb
repz
ljmp
pusha
mov
sub
mov
sub
ja
push
sahf
int3
or
adc
push
adcb
loop
or
dec
push
pop
js
mov
mov
popa
add
xchg
cmpsl
rclb
lods
clc
lds
jae
xchg
adc
subl
insb
test
roll
loopne
test
sahf
jecxz
push
dec
pop
dec
mov
enter
lcall
in
lock
cmp
dec
mov
xorb
pop
stc
js
test
outsl
mov
in
insb
dec
xchg
cwtl
mov
jbe
pop
cmp
xchg
dec
dec
dec
xor
sub
leave
in
jbe
adc
sahf
aad
xor
dec
ret
adc
mov
dec
cmpsb
in
push
xchg
sub
lods
inc
or
imul
rol
jo
cli
sbb
push
es
fnstcw
movsb
jbe,pn
leave
enter
or
cmp
add
shlb
pop
rorl
insl
sub
int
lea
int3
sub
out
sahf
mov
in
jb
outsb
adc
cmp
cmp
cmp
push
flds
jl
in
les
and
stc
inc
stos
pop
clc
cli
inc
aas
cli
je
jle
lds
lock
not
mov
or
xchg
fsts
orl
xchg
mov
cltd
enter
sub
dec
pop
sbb
movsl
jmp
mov
stos
lods
outsb
pop
jle
imul
jbe
mov
rcll
mov
push
stos
jo
xchg
ds
loope
sti
aaa
dec
jo
cwtl
lds
dec
mov
push
pop
jmp
mov
pushf
dec
sub
ljmp
je
sub
popf
aas
shll
adc
push
sbb
pusha
inc
mov
notb
faddl
jmp
mov
andl
test
testl
movsb
and
mov
divl
jns
cld
push
pop
lock
mov
loopne
inc
call
lahf
xchg
clc
movl
and
or
inc
mov
xor
sub
xor
mov
cld
add
orb
rcll
sbb
mov
or
frstor
sbb
sub
outsb
pushf
adc
sti
xor
cmp
stos
aad
push
in
adcl
mov
xchg
mov
jo
jno
xchg
ret
ret
test
add
imul
aas
xlat
imul
mov
imul
int
pop
daa
aad
and
fcomip
lret
push
mov
dec
inc
dec
shlb
jle
adcl
inc
mov
jmp
shll
or
xchg
imull
rorb
int3
roll
xchg
stos
cmp
push
xchg
mov
dec
std
or
mov
test
shll
loopne
out
test
int3
xor
pop
test
aas
pop
push
ror
adc
adc
out
dec
inc
outsb
dec
movsl
out
xchg
push
lret
sub
xor
or
pushl
sbb
adc
xor
cmp
gs
mov
xchg
stc
pop
in
xor
js
outsl
popa
mov
or
in
xor
adc
daa
std
jecxz
pop
xor
ljmp
dec
sub
sub
mov
stos
jg
add
popa
inc
scas
int3
test
jmp
xor
lds
cld
add
sti
mov
mov
jl
inc
ja
mov
arpl
xor
sbbb
or
stos
jnp
cs
jmp
inc
imull
xchg
lds
cs
fsts
es
xor
sarb
insl
mov
xchg
jns
add
jle
adc
mov
sbb
int3
ss
jns
or
add
mov
mov
into
and
les
dec
out
lahf
lret
enter
sub
cmp
addr16
xchg
pop
jnp
lds
lcall
and
jmp
pop
in
pop
jnp
jp
mov
xchg
push
rcll
cltd
mov
pop
cmp
and
adc
lds
pop
lret
cmc
mov
test
int3
pop
cmpsl
push
jns
lods
shl
jp
mov
ss
cmp
icebp
xchg
stos
aaa
jbe
push
jns
mov
fdivl
sbb
jp
lahf
mov
xor
mov
test
mov
stos
arpl
cmpsb
or
fs
push
mov
hlt
adc
movsl
inc
roll
dec
stc
or
xor
pop
mov
arpl
push
jno
or
push
repnz
xchg
mov
push
scas
jle
pop
mov
lds
xor
cmpsb
mov
iret
pop
scas
adcl
lea
inc
jp
mov
pop
ljmp
hlt
mull
adc
sbb
mov
push
mov
rcll
sub
xor
mov
dec
mov
insb
into
cltd
roll
mov
xchg
lock
fdivl
jl
mov
inc
xor
adc
scas
mov
push
addl
xor
fisubl
in
cmp
mov
mov
insl
imul
push
data16
xor
xchg
dec
gs
ds
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
and
and
outsb
sbb
jno
mov
cli
add
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
