push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
mov
jl
jl
pop
jl
adc
and
popa
pusha
sarb
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
inc
nop
jge
lock
out
push
frstor
pop
mov
xchg
sbb
add
in
loop
sub
jp
testl
mov
cmp
call
or
adc
inc
fisttpl
sub
dec
xlat
push
inc
es
adc
mov
add
push
insb
pop
fnstsw
xor
rcr
pop
sahf
mov
cs
fwait
pop
ljmp
xor
xchg
and
xor
mov
cmc
xchg
fstpl
and
subb
fidivrl
push
aam
inc
add
in
je
xchg
loope
repnz
rorl
ret
or
imulb
insl
pop
cmc
push
mov
push
int
jge
and
sti
add
rorb
push
xor
leave
adc
push
icebp
mov
push
jo
or
popa
xor
inc
push
out
vucomiss
adc
sbb
inc
sbb
add
sbb
repz
jecxz
das
mov
or
or
test
xchg
adc
add
mov
cs
popa
lcall
jo
dec
jnp
sbb
push
cmpsl
xor
ss
pushf
add
addb
out
jns
dec
dec
adc
sbb
enter
or
scas
mov
addl
stos
cmp
enter
lods
mov
shl
movsb
cwtl
push
and
sti
stos
mov
add
scas
sub
inc
jno
xor
adc
push
neg
subb
movsb
scas
jmp
imul
mov
pusha
fldenv
pop
inc
loope
pop
rcrb
fs
into
imul
pop
add
insl
cli
jne
out
stos
fistl
push
mov
jnp
cltd
cmp
cwtl
mov
aaa
xor
pop
and
add
test
push
enter
mov
test
test
cmp
mov
stos
xor
xchg
mov
mov
ja
pop
jmp
les
pop
shll
xchg
sarl
jo
lea
outsb
sarl
sbb
ret
push
push
mov
call
fsubr
xchg
fildll
test
mov
jp
or
jb
xchg
enter
cltd
add
inc
push
pop
cwtl
push
pop
hlt
ss
jns
push
dec
xor
jns
nop
push
jnp
and
mov
iret
insl
or
cmp
sub
dec
lret
and
push
dec
mov
call
sbb
sahf
mov
xlat
inc
jbe
imul
popa
sarl
scas
jno
inc
xchg
sbb
xor
movb
lock
fdivr
dec
loope
lcall
subb
rcll
mov
test
add
lahf
or
mov
xlat
add
insl
cmpsl
mov
dec
loopne
and
cmp
jae
cs
mov
push
mov
mov
in
mov
push
add
xlat
adcl
push
dec
leave
mov
pushf
jb
pop
cmpsl
add
xchg
shll
lods
sbb
lret
and
mov
push
in
sbb
mov
icebp
into
xchg
jbe
jl
out
cs
sbb
mov
popa
dec
xor
xchg
call
cmpsl
xchg
dec
loopne
and
adc
ljmp
loopne
lods
sahf
add
jnp
sub
fistps
pop
push
es
or
aaa
popf
dec
push
push
push
enter
stos
loopne
jle
jp
les
fs
out
xchg
outsb
nop
pop
mov
push
in
push
cmpsl
lret
sbb
sub
pop
xchg
aad
lret
out
shrb
std
out
test
call
test
test
pop
test
test
call
rolb
loope
test
call
aaa
stos
cmp
sbb
inc
xchg
inc
inc
icebp
inc
jb
out
jnp
out
lret
lods
mov
pusha
lahf
pushf
in
cmp
rorb
xchg
int3
inc
inc
sub
cmpsl
mov
aas
sub
lahf
into
cs
lods
jae
lock
movsl
stos
int
sbb
mov
cmp
jge
shl
movsl
cmpsl
mov
out
iret
lret
pop
call
scas
outsb
and
test
dec
sahf
jno
lret
cmp
mov
and
aaa
xor
sub
loope
test
jnp
scas
adc
push
xor
out
push
out
wbinvd
into
sbb
fwait
dec
mov
out
inc
shl
rol
xchg
loop
xchg
fs
out
cmpsl
idivb
adc
fs
lds
ret
mov
pop
mov
test
ja
mov
or
imul
gs
pop
loopne
sbb
fsts
cmp
pop
xlat
pop
pop
popa
cmp
push
cmp
mov
push
fmull
shll
daa
mov
ret
jl
dec
pop
sbb
and
xchg
xchg
outsb
mov
imul
inc
les
cli
fidivl
sahf
sub
pop
fsubr
and
cwtl
jmp
loopne
xchg
push
xchg
mov
mov
push
je
inc
loope
mov
ret
inc
xor
mov
ret
in
xchg
cmp
dec
cs
gs
fadd
pop
push
sbb
dec
adc
mov
mov
outsb
jns
jle
testl
lds
mov
mov
or
test
mov
in
pop
inc
rolb
incb
bound
push
testb
sub
or
cmc
es
insl
in
std
cmp
sbb
mov
inc
dec
mov
imulb
xchg
xchg
jo
xchg
push
pop
dec
xlat
xorl
or
aas
xchg
loop
sti
xchg
jl
add
in
jbe
add
sub
icebp
jle
loopne
gs
and
loop
sbb
push
sbb
mov
pop
pusha
fs
pop
lret
aam
and
push
xchg
pop
and
sbb
push
inc
stos
xchg
loop
and
inc
iret
sub
ja
outsl
push
inc
call
popa
je
adc
ss
popa
sbb
in
test
lea
out
lret
push
xchg
movsl
xchg
cmpsb
mov
test
fcmovbe
mov
decb
xlat
leave
and
lock
jns
xchg
hlt
mov
mov
mov
in
les
out
xor
shrb
push
mov
js
sbb
sti
mov
fmull
or
and
pop
leave
fadds
lods
cmpsl
pextrw
and
push
in
pusha
in
enter
ljmp
pop
sub
cmp
fstpt
outsb
xor
lods
and
jl
aam
xor
dec
dec
clc
daa
and
jnp
mov
inc
mov
shlb
jns
in
pop
or
les
lods
add
inc
and
pop
jae
xchg
push
int3
fs
xor
lods
mov
aad
sub
mov
js
xchg
cmpsb
xchg
cmpsl
insl
push
cmp
stc
enter
pusha
pop
or
xchg
xor
ja
sahf
out
sub
cmp
dec
mov
xchg
or
gs
or
iret
push
call
xor
add
insb
aam
sbb
cmpsl
test
adc
xchg
sti
add
ljmp
cmp
fmull
bound
sbb
pusha
subb
mov
jbe
mov
inc
icebp
movsl
fisttpll
adc
leave
pop
dec
gs
cli
ljmp
mov
shll
pushf
das
lds
or
push
inc
pop
test
pop
movsb
push
lcall
iret
fisttpl
jns
mov
ss
xchg
sub
cmp
movsl
rcrb
sbb
lds
add
cmp
mov
mov
mov
adc
mov
jbe
or
push
push
insl
loope
aam
int3
and
cmp
and
adc
sbb
push
xchg
sahf
test
ljmp
stos
int3
mov
out
sub
out
jae
scas
loop
js
add
or
imul
ror
sbb
ret
cmp
mov
movsl
dec
ss
xor
adc
push
cmp
and
stc
xchg
arpl
roll
lahf
int3
adc
gs
aaa
adc
call
fistl
int3
inc
mov
movsl
sbb
cmp
and
enter
or
jns
leave
push
adc
popf
sbb
test
fiaddl
cmp
mov
cmpsl
movsb
mov
or
call
lret
aas
jno
dec
ljmp
dec
mov
and
xchg
ds
adc
sbb
clc
mov
ds
enter
pop
mov
jno
test
out
mov
mov
repz
mov
cltd
pop
dec
ret
addr16
stos
add
jb
lahf
insl
sbb
dec
andl
in
cbtw
xor
dec
and
sub
out
inc
icebp
neg
add
test
push
je
add
inc
hlt
jle
xchg
icebp
mov
out
loopne
fists
xchg
pop
pop
pop
daa
adc
cmc
xchg
mov
les
bound
ds
jmp
jp
mov
inc
mov
push
or
pop
in
jg
cmp
pop
int
pushf
sub
mull
mov
aaa
cmp
pop
pop
inc
clc
mov
and
push
lods
inc
cmp
xchg
push
les
loop
mov
mov
jno
jnp
dec
push
test
fdivs
jbe
mov
xchg
inc
xchg
rcrl
cmp
cld
fisttpll
xlat
testl
or
mov
rcrb
adc
xchg
mov
insl
sub
or
jb
mov
xor
inc
incl
ss
es
push
inc
popf
in
pop
adc
out
mov
inc
sbb
insl
jecxz
and
arpl
ja
mov
out
and
add
adc
stos
movsb
aas
push
lahf
jl
mov
cmpsb
lret
test
pop
xlat
movsl
mov
fiaddl
and
jl
mov
ret
jbe
add
mov
ret
cld
dec
pop
inc
std
sti
dec
push
in
es
or
in
and
test
jae
daa
jbe
xor
ja
mov
in
cmpsb
or
sbb
mov
add
mov
iret
fwait
test
pop
in
add
ss
and
fs
insl
popf
call
or
daa
imul
xchg
jmp
xchg
pop
mov
cs
rcl
push
sub
cmp
xor
mov
lret
or
mov
xchg
insl
scas
mov
adc
push
sub
xorb
clc
out
mov
cmp
mov
push
aad
mov
mov
fwait
push
dec
fimull
andl
outsb
and
cld
or
je
cmp
mov
dec
cld
in
std
cmp
inc
lahf
fmul
or
aas
iret
lea
push
xchg
adc
rcll
sbb
out
loopne
popa
push
dec
push
pop
cmpsl
sub
inc
jge
ljmp
shrl
cmp
lret
stc
add
xchg
loope
dec
and
sub
push
and
mov
imul
dec
imul
xchg
xor
call
push
dec
fwait
sub
int3
insb
mov
mov
cmp
rclb
mov
jns
xchg
je
inc
mov
cld
dec
dec
insb
movsb
dec
loopne
mov
adc
enter
gs
fidivl
repz
sbb
enter
aaa
adc
cmp
fidivrs
loopne
outsb
push
add
in
xchg
xchg
test
add
mov
stc
inc
lods
push
addl
inc
rcrl
test
push
push
mov
int3
and
aaa
mov
pusha
mov
pop
leave
call
pop
movsl
out
jp
fbstp
insl
or
xor
dec
pop
or
mov
loopne
and
mov
pop
or
iret
cmp
xchg
mov
fistl
jmp
inc
movsl
sub
enter
loopne
push
push
mov
nop
aam
repnz
dec
or
xchg
push
sub
xor
mov
sub
lock
pop
xor
repz
arpl
pop
in
or
clc
negl
push
jecxz
fnsave
jecxz
or
mov
mov
mov
push
aam
add
repnz
sbb
test
and
mov
stos
test
imul
imull
pusha
pop
iret
dec
fistpll
shrl
fisttpl
loope
xchg
imul
outsl
or
push
mov
js
mov
and
cmp
andb
lahf
xchg
mov
inc
dec
daa
mov
xor
loope
add
gs
xor
dec
sub
and
sub
mov
sub
shlb
mov
cmp
lock
lahf
ret
and
loop
xchg
movsl
lcall
pop
adc
dec
sub
inc
and
jp
push
and
adcl
jns
out
lret
mov
mov
stc
rcrl
jno
lret
bound
mov
fcomp
xchg
aam
push
call
mov
jnp
scas
cmp
mov
mov
xor
sti
cmp
mov
sub
push
lret
mov
repz
inc
jno
hlt
bound
cld
dec
cmp
adc
xchg
iret
xor
xchg
xor
int
or
mov
cltd
push
or
or
ds
insb
cmpsl
cmpsl
adc
divps
push
rcrb
gs
xchg
cmp
xchg
popf
fwait
imul
cmp
add
mov
mov
enter
clc
pop
aaa
test
gs
loopne
sbb
out
jecxz
test
jmp
xchg
mov
hlt
arpl
or
cli
bound
jb
insb
add
pop
inc
pop
cmpsb
fnstenv
loop
push
add
dec
xor
ret
mov
and
out
mov
lcall
enter
sahf
cmpb
std
xor
sbb
fs
dec
je
std
push
cwtl
mov
push
dec
cmp
mov
push
mov
dec
jno
jl
out
cmpb
jl
sub
mov
inc
adc
lret
jne
mov
push
mov
lret
xchg
pop
js
cmpsb
push
dec
ret
pop
outsb
fstps
push
mov
push
stos
pusha
insl
test
popf
dec
xlat
jge
aaa
xchg
pop
sbbb
les
scas
in
dec
cmc
inc
movsl
xchg
pusha
jbe
out
push
mov
roll
dec
ja
iret
add
xor
cmp
stc
mov
mov
cli
mov
cmp
jbe
insb
arpl
add
dec
cwtl
push
jno
lcall
cmpsl
sar
dec
insl
fs
inc
xor
sbb
in
and
xchg
cmp
or
mov
cltd
aad
fcoml
push
scas
scas
pop
inc
fidivrs
dec
mov
imul
or
mov
fmull
loope
or
jmp
aaa
popf
neg
les
mov
stos
mov
and
xchg
gs
inc
push
mov
dec
jb
xor
push
sub
testl
and
cmp
cwtl
xlat
jne
je
ds
xchg
int3
pmovmskb
and
xchg
mov
sar
stos
mov
jae
nop
and
insl
push
cmp
ficomps
inc
stos
jo
mov
inc
push
sbb
jbe
mov
int
fwait
inc
lcall
testl
sub
mov
mov
push
cmp
fst
push
movsb
mov
out
js
jg
pop
push
pop
pop
pop
pusha
sbb
outsl
xchg
mov
les
jl
lock
shlb
enter
xchg
jl
aas
and
sub
push
daa
mov
jnp
dec
jp
jmp
push
mov
fs
clc
or
out
out
insb
ficoms
mov
or
into
icebp
in
inc
sbb
ja
shlb
pop
insl
pop
and
sbb
les
jb
scas
sub
data16
add
add
sbb
lret
inc
sbb
ja
cltd
les
addr16
push
sbb
jmp
iret
push
andb
push
call
outsb
mov
aas
pop
inc
and
cs
pop
mov
jnp
pop
inc
dec
pop
mov
mov
popl
daa
xlat
pop
test
or
std
push
movsl
and
dec
xchg
add
icebp
stos
push
das
xchg
add
xchg
cmp
dec
pop
dec
jle
pushf
and
sub
stos
mov
and
or
ret
mov
mov
out
jb
pusha
jno
rcrb
ljmp
push
les
fisttps
popa
mov
sbbb
out
pop
cld
dec
inc
push
cwtl
push
add
pop
jl
ret
push
add
das
xchg
loop
sbb
xchg
xchg
test
add
in
pop
dec
int
into
pop
mov
mov
int3
shl
and
adcl
popa
inc
icebp
xchg
je
pop
push
dec
mov
imul
mov
xchg
mov
ds
shrb
call
fcom
ljmp
pop
clc
andl
lock
test
push
inc
pop
push
dec
and
shlb
insb
dec
cmp
push
fs
push
cld
push
orl
das
xor
ror
push
inc
fwait
std
jne
xor
sbb
cmp
pop
xor
call
mov
sahf
xor
adc
push
push
aad
cmp
into
sbb
cli
gs
fsubrl
aam
call
inc
test
ret
push
mov
push
in
insl
push
sahf
sbb
dec
fbstp
or
test
lock
fstpt
shl
leave
clc
sbb
mov
gs
lods
mov
leave
push
jnp
test
pop
mov
rcr
lret
cld
insb
mov
xor
xchg
adc
cmpsb
fistps
push
cmp
push
int3
push
adc
sahf
or
mov
or
arpl
pop
imul
mov
xchg
arpl
xchg
and
daa
int3
mov
je
xchg
in
dec
in
cmpsl
push
xor
mov
mov
mov
cmp
push
xor
mov
xor
gs
fs
pop
pop
ljmp
bnd
out
mov
and
in
cmp
int
subb
sbb
rcrl
jp
scas
adc
les
loop
or
pop
mov
jae
gs
mov
idivl
bound
inc
mov
jle
ljmp
add
push
pushf
mov
in
ret
mov
or
jo
int3
xchg
jg
cmp
adc
movsb
add
int3
or
shlb
nop
mov
mov
test
sub
clc
jge
xor
les
out
or
adc
out
ret
fwait
call
adc
mov
mov
xor
push
inc
scas
push
test
arpl
test
cmc
js
pop
add
push
lahf
xchg
movsb
mov
mov
out
mov
popf
xchg
sbb
mov
jecxz
shrb
pop
mov
jmp
or
insb
aas
push
jno
je
bnd
adc
dec
cltd
xor
mov
adc
icebp
or
call
rorb
xor
adc
push
aas
out
je
or
xchg
sbb
xchg
inc
stos
add
jmp
sbb
sub
loopne
sbbb
pushf
movl
mov
xchg
jae
mov
cltd
and
jl
leave
movsl
mov
xchg
in
push
in
dec
mov
mov
popf
cvtps2pd
in
mov
dec
push
lods
mov
mov
jmp
pop
sbb
mov
sub
leave
cmp
shlb
push
xchg
repz
jbe
dec
lahf
inc
sbb
daa
push
shrb
out
fidivrs
scas
or
cmp
jo
repnz
inc
sub
xchg
or
mov
lret
push
ficomps
movsb
std
mov
mov
cmp
insb
cltd
mov
lret
xor
push
lahf
test
inc
faddl
bound
rcll
ret
fcoms
test
xlat
inc
jp
inc
idivl
push
mov
xchg
pusha
mov
sarb
ljmp
imul
inc
inc
add
and
in
aaa
cmp
and
jno
lahf
test
xor
pop
sti
push
cmc
repz
pushf
pop
sarb
mov
notl
jne
in
pop
pop
fidivl
idivl
cli
jge
mov
test
xchg
mov
and
test
leave
scas
sbb
xchg
fwait
xchg
fistpl
or
fisubrl
cmc
and
xorl
mov
mov
mov
xlat
push
daa
pop
fstps
iret
jnp
inc
push
ret
rcl
data16
or
sti
outsl
int
cmp
adc
mov
mov
and
rcll
ja
dec
lods
cmp
loopne
mov
call
out
sbb
dec
push
adc
loopne
test
rcl
ljmp
mov
jg
sbb
jae
inc
aam
fcom
addl
cmpsb
push
push
stc
repnz
xor
lock
jae
aaa
cmp
loopne
mov
push
dec
mov
leave
fstps
pusha
push
sub
lods
jb
push
fadd
bound
xchg
loopne
mov
in
test
xchg
inc
lcall
shlb
faddl
in
fwait
out
rorb
push
sub
mov
div
daa
sbb
lock
enter
pop
dec
mov
fwait
adc
sbb
mov
sbb
mov
ja
test
daa
in
adc
aam
scas
and
and
pop
hlt
sti
movsb
xchg
sub
les
lahf
mov
sarb
mov
cmp
fcompl
adc
cmp
mov
std
pop
push
sub
push
and
loopne
loop
and
fdiv
mov
push
sahf
leave
jp
mov
xchg
outsb
push
add
mov
test
or
inc
scas
inc
xchg
sbb
add
js
jno
push
xlat
push
lock
out
jmp
jne
mov
inc
sub
sub
sub
clc
jp
mov
or
sarb
pop
jmp
mov
push
call
sub
mul
ljmp
pushw
mov
incb
xchg
in
shlb
cld
les
inc
mov
ret
or
jmp
movzwl
jne
xchg
pop
ljmp
cltd
jno
in
inc
sub
add
sti
int3
cmp
test
repz
jne
arpl
ret
mov
test
lds
mov
dec
inc
pushf
pop
cmpsb
fucomip
mov
cmp
pushf
test
repnz
in
fcmovbe
outsb
fwait
sub
jbe
mov
mov
xor
fwait
inc
inc
leave
push
or
cmpsl
scas
fcmove
cmp
int
xor
sub
popa
dec
mov
lock
pop
adc
or
jb
into
mov
gs
pmulhw
inc
xchg
xor
add
inc
sub
outsb
test
std
test
mov
sbb
push
imul
outsl
ror
mov
mov
nop
test
pop
in
xor
fs
cmpsb
lahf
xchg
sub
mov
js
icebp
mov
int3
lretw
jo
xchg
dec
lahf
dec
add
xchg
cmp
hlt
mov
fwait
inc
cmovge
sub
xchg
lcall
lahf
jp
lea
mov
cmp
jecxz
ds
int3
daa
xchg
lds
scas
push
jl
je
mov
and
jns
adc
cld
xchg
xchg
mov
in
arpl
xor
int
dec
inc
inc
inc
cli
test
jg
jo
out
inc
jge
bound
or
ror
and
push
dec
mov
sbb
pop
mul
sahf
push
int
or
mov
dec
add
pop
pop
xchg
xor
fsubl
fwait
mov
jle
jns
and
and
cmpsb
and
rorb
enter
xor
add
repz
sbb
sbb
xor
pop
jbe
mov
dec
arpl
lock
xor
add
jne
inc
in
enter
enter
xchg
jl
inc
dec
mov
mov
push
std
test
mov
jne
add
lss
add
adc
cmp
sub
pop
ret
int
sub
gs
out
sub
sub
inc
xor
mov
mulb
out
pop
inc
aam
mov
xchg
frstor
cmp
cs
xor
ljmp
lock
mov
inc
shll
lea
in
cld
stos
mov
cmp
cmp
or
outsl
test
in
pop
mov
mov
and
mov
jne
mov
mov
and
cmpb
sahf
mov
aas
xchg
enter
shl
or
jb
pop
add
pushf
inc
cmp
push
pop
xchg
jge
scas
dec
xchg
lea
dec
cwtl
mov
mov
pop
inc
lcall
and
mov
rcrl
movsl
jecxz
faddp
pop
sbb
jle
les
jae
and
sarb
mov
enter
aas
cwtl
xor
out
xchg
ret
mov
call
xor
ljmp
fsts
arpl
dec
pop
pop
fstl
mov
lock
leave
in
cwtl
inc
popa
test
inc
mov
scas
mov
js
outsl
push
add
mov
in
dec
jns
pop
in
ja
xchg
push
dec
or
and
mov
dec
fdivp
inc
mov
cmp
scas
dec
sar
fwait
outsl
sub
in
xchg
push
mov
sbb
mov
inc
je
dec
out
and
into
sbb
or
inc
push
aaa
in
cs
jne
rcrl
xchg
push
je
lds
sub
sarb
setge
inc
mov
scas
shr
popf
mov
push
cmp
mov
lret
pop
imul
inc
clc
add
imul
jno
out
sub
cmp
das
stc
xor
cmpl
sub
cld
loopne
fs
inc
roll
mov
dec
cltd
and
mov
stos
jmp
push
cmp
in
dec
cmpsb
cmp
popa
xchg
ja
movsl
ds
mov
and
mov
scas
je
insb
adc
jns
ror
xchg
add
ss
test
mov
inc
mov
mov
addr16
jbe
inc
pop
jnp
pop
sbb
lods
aas
jg
inc
sbb
mov
add
xchg
push
push
xchg
filds
fldcw
mov
arpl
loope
fstl
push
outsl
push
sahf
lret
lahf
rcll
add
pop
outsb
jp
push
inc
shrb
push
inc
mov
in
adc
or
cs
lcall
imul
or
mov
pop
xchg
cmp
mov
add
pusha
mov
xchg
jne
enter
push
sbb
cltd
jmp
loope
mov
pop
mov
cmp
sub
popa
jbe
mov
sub
test
mov
decb
gs
mov
xchg
push
pop
jno
cs
aas
xchg
adc
shrl
fldcw
sub
push
inc
mov
inc
cld
lahf
insl
and
dec
mov
inc
out
push
sub
xor
push
filds
and
popa
xchg
or
or
test
dec
sub
sbb
dec
mov
aam
pusha
repnz
xor
mov
lds
or
insb
jae
rol
mov
cwtl
jne
movsb
and
jg
jmp
repz
push
pop
push
mov
jmp
pop
dec
sahf
aaa
mov
jg
mov
pop
sbb
orb
push
mov
in
decl
clc
mov
shlb
or
lret
imul
inc
loope
sbb
cmp
roll
pop
decb
insb
aaa
adc
sub
pop
push
xor
pop
xchg
dec
add
push
cld
fs
and
ret
stos
xor
aam
pop
pop
pop
movsl
push
loope
in
and
aad
imul
xchg
fsubrp
imul
in
pop
inc
xor
mov
or
mov
mov
mov
hlt
and
test
loopne
js
in
loopne
inc
jle
out
or
mov
aad
pop
or
inc
mov
test
xchg
push
dec
sub
cmpsb
clc
push
das
aaa
push
xor
faddl
lcall
sbb
seta
push
ret
mov
dec
dec
fwait
jno
test
add
xor
cmpsl
jb
jmp
imul
jne
dec
sbb
out
cmovne
xchg
movsl
push
mov
xchg
pop
or
adc
jp
adc
mov
movsl
mov
mov
adc
cld
xorl
je
sub
jo
sbb
movsb
dec
and
inc
dec
jg
push
pop
mov
push
add
cmp
mov
popa
xchg
fisttpll
inc
imul
xor
adc
out
cmc
push
orl
mov
stos
pop
shrb
gs
sbb
cltd
fs
mov
ljmp
or
das
es
rcrb
dec
pop
mov
shr
push
dec
cwtl
dec
lcall
in
xchg
cltd
outsb
jecxz
movsb
sar
in
add
lret
rorl
insb
xor
in
mov
mov
movsb
adc
and
xchg
jp
push
testl
test
lods
fmuls
or
cld
das
xchg
adc
lret
movsb
push
cmp
hlt
pop
jnp
xchg
scas
pop
in
decl
stos
mov
pop
dec
mov
jb
xor
pop
lods
aas
xchg
test
pop
test
jp
mov
xchg
sub
xchg
test
bound
add
mov
add
sbb
dec
fwait
mov
push
sbb
idivb
jo
ss
adc
jle
xchg
insl
jmp
jmp
pop
or
add
sub
negb
and
mov
orb
jle
or
nop
pop
mov
inc
xchg
mov
lcall
outsl
pop
int3
dec
and
sbb
bound
jne
mov
mov
fs
push
gs
in
stos
pushf
and
dec
je
jp
xchg
scas
int3
popf
inc
out
daa
inc
sbb
mov
fidivrs
push
mov
pop
mov
dec
lahf
xchg
ret
pop
cmp
jne
mov
sub
in
push
sarb
inc
leave
in
or
mov
mov
sbb
xor
mov
push
pusha
cmp
scas
movsl
mov
mov
lea
inc
cmc
ret
pusha
mov
inc
pop
or
or
test
imul
pop
stc
pushl
call
or
mov
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
jo
pop
jl
dec
pop
jl
stc
jecxz
xor
cmp
mov
daa
pop
pop
ficoml
popf
aad
or
test
jno
in
mov
hlt
xor
clc
pop
mov
mov
add
shll
jle
jno
dec
mov
or
int
jl
jl
fwait
dec
cmp
es
adc
lea
inc
imul
fwait
push
sahf
test
loopne
gs
es
aaa
pop
cmpb
pop
jge
xchg
jp
sub
movsb
faddl
enter
out
mov
sbb
jge
push
ret
jo
or
std
mov
adc
sub
sbb
leave
sub
stos
jp
cli
mov
xchg
test
jle
test
add
mov
lds
mov
lea
sub
fwait
inc
pop
sbb
imul
mov
pop
lret
cmc
cltd
aad
jle
or
mov
add
push
sbb
inc
xchg
lods
jb,pn
push
scas
mov
out
iret
xor
xchg
nop
mov
mov
or
inc
add
sub
aam
or
dec
push
push
inc
push
xor
aam
jb
mov
lea
bnd
cmp
mov
add
imul
jno
mov
into
mov
in
adc
xor
add
add
fistpll
ret
mov
mov
mov
jl
inc
sbb
aaa
sub
dec
push
mov
fisubs
sti
sahf
jge
mov
xchg
inc
dec
sbb
mov
jg
adc
mov
mov
out
jmp
sub
jg
out
push
push
mov
lds
in
adc
ret
aas
jb
sub
rolb
nop
or
mov
mov
sub
dec
idiv
out
mov
mov
adc
je
test
or
mov
jle
je
and
sar
sub
icebp
fmul
es
dec
outsl
fnstsw
push
movsb
subl
ret
out
aas
push
nop
push
test
jnp
jo
mov
cld
pop
push
cmp
popl
iret
mov
mov
push
xor
shrl
jmp
outsl
sbb
aam
mov
mov
dec
out
sbb
jno
jecxz
sub
pop
adc
jno
test
in
repnz
jo
cmpsb
jns
mov
lcall
rcr
ljmp
push
xchg
jno
or
fisubl
xchg
arpl
mov
bound
mov
addr16
xchg
sub
outsb
aam
movntq
iret
sbb
push
lock
cmp
fidivl
jp
scas
or
fbstp
push
mov
xchg
imul
cmc
ljmp
mov
cmp
xlat
push
fsubs
sbb
ss
jecxz
and
movsb
testl
in
xor
decb
icebp
jnp
inc
cld
adc
cmp
xor
movsl
push
nop
repz
fnsave
je
cli
rcr
mov
hlt
out
jnp
lcall
add
xor
aaa
or
lcall
and
add
xchg
mov
cli
out
imulb
push
punpcklbw
mov
in
cmc
jg
les
inc
movsl
fcoml
sub
in
test
and
clc
not
adc
xor
add
out
jle
dec
movb
and
ret
scas
outsl
xchg
sub
out
mov
cld
dec
imul
dec
mov
inc
loop
mov
ss
inc
into
lds
push
jnp
shll
dec
dec
into
xor
pop
shll
mov
or
jle
call
xchg
mov
mov
dec
testb
stos
inc
xchg
sub
fsubs
dec
arpl
outsl
lods
xor
int
into
stos
adc
mov
mov
aas
in
cs
loop
inc
cwtl
rol
sbb
mov
mov
addr16
out
jns
xchg
out
or
and
ret
dec
mov
sub
dec
mov
add
push
das
sub
mov
orb
faddl
push
jge
sub
mov
shr
pop
fbstp
jl
pusha
clc
or
xor
pop
out
sub
subb
jmp
and
mov
fidivrs
in
xchg
or
sbb
rcrl
jg
enter
push
xchg
jne
pop
inc
adc
pushf
push
je
mov
xor
aad
outsl
push
xor
fdivrs
mov
push
mov
pop
scas
iret
out
xchg
mov
lahf
dec
push
or
das
cld
loope
arpl
cltd
inc
push
cmp
mov
cli
push
mov
sub
out
sbb
test
mov
rcll
dec
fldcw
add
or
xor
scas
loop
add
and
pop
rcrb
add
push
aaa
mov
pop
mov
daa
mov
data16
pop
dec
dec
jnp
xchg
fs
jmp
or
jo
sub
xor
in
mov
mov
ss
mov
std
fcompl
repnz
int3
xlat
xchg
sub
stc
dec
xchg
add
pop
jp
cmp
pop
cmp
push
add
shlb
dec
cmc
mov
jp
fstpl
in
jge
jmp
test
sub
dec
testl
jl
mov
mov
jmp
cltd
hlt
pusha
mov
mov
adc
inc
mov
inc
xchg
jmp
fidivs
sbb
xlat
sti
or
je
lahf
ss
shl
jno
scas
mov
xor
out
jge
pusha
fldenv
or
mov
cmp
out
lods
frstor
stc
rorb
pop
cwtl
loopne
decb
jecxz
xchg
pop
push
push
aaa
daa
sub
test
mov
mov
cli
or
or
xlat
or
pop
or
cli
outsl
mov
mov
sbbb
mov
mov
das
add
imul
and
movsw
stos
cmp
sbb
pop
in
push
pusha
shrb
xchg
decb
in
mov
xchg
daa
xchg
or
inc
mov
leave
ficoml
mov
scas
xor
int
faddl
xor
mov
test
adc
test
clc
das
insl
add
xchg
mov
cld
clc
rcrb
adc
mov
sbb
aas
scas
push
outsb
outsb
cwtl
inc
mov
fsubs
mov
lods
in
fsts
and
loope
mov
js
xchg
inc
inc
int
stc
mov
pop
out
or
test
repz
lock
mov
jnp
dec
push
adc
and
cmp
push
jecxz
shll
out
jb
aas
icebp
fisttpll
loope
je
and
cmp
jbe
push
daa
push
bound
repz
fldt
mov
pushf
fs
sub
mov
pop
xchg
aam
out
sahf
dec
sub
fldenv
hlt
loop
sti
push
mov
adc
cmp
dec
sbb
xchg
popw
cmp
fs
jb
xchg
mov
lcall
pop
je
lods
arpl
mov
popf
jo,pt
adc
add
mov
rcrb
in
mov
clc
ja
and
ret
jge
push
and
lods
or
xchg
mov
jae
cmp
das
lea
mov
insl
xchg
add
jecxz
mov
push
push
jecxz
dec
in
inc
lcall
mov
lock
inc
push
dec
clc
cld
inc
fs
cli
push
shl
imul
mov
inc
and
inc
xchg
dec
xor
or
jmp
imul
fs
ss
mov
push
add
iret
sbb
addr16
ret
jo
inc
xchg
ss
fisubrl
push
push
dec
neg
xchg
je
stos
bound
aas
cmpsl
and
loop
cmp
out
sbbl
or
pop
xor
xchg
enter
lea
inc
jl
jl
iret
repnz
sub
faddl
mov
pop
inc
clc
pop
fwait
sbb
adc
ffreep
out
mov
lahf
pop
jle
inc
ja
jg
adc
popf
fstpl
pop
inc
or
pop
out
adc
jno
push
dec
data16
sbb
or
pop
mov
mov
imul
and
insl
loop
mov
daa
xor
divl
mov
pop
movl
pop
dec
add
ficompl
lock
mov
nop
mov
fstpt
outsl
lret
xor
int
and
ljmp
cld
add
push
fnstsw
test
mulb
pop
cmpsl
jge
in
mov
gs
sbb
xchg
cltd
jmp
dec
lahf
mov
inc
aas
cltd
push
cmc
dec
sub
add
out
aad
mov
into
xchg
xchg
and
xchg
js
fwait
mov
jns
fmul
andl
outsl
in
mov
addr16
popf
sbb
popf
loopne
int
xchg
mov
shll
out
dec
xchg
mov
jp
dec
cmp
adc
loop
imul
dec
inc
icebp
dec
fistpl
mov
jmp
push
push
pop
and
lea
addr16
mov
addr16
imul
mov
sub
repnz
mov
loope
ljmp
js
lahf
fs
pop
pop
push
jp
scas
sub
mov
dec
pop
add
jmp
out
cmp
imulb
or
add
andb
rcll
pop
xorl
mov
cs
xchg
jno
sar
pusha
rol
or
in
push
jge
adc
push
mov
loop
jmp
rcrb
jb
push
les
sub
orb
cltd
sti
movhps
sarl
jge
and
rcr
aaa
scas
xchg
and
and
pop
push
adc
cmc
insl
dec
addr16
js
push
dec
sub
aaa
adc
cld
adc
loopne
outsl
inc
sbb
jecxz
les
ret
les
inc
xor
mov
lds
or
adc
dec
data16
fmul
and
in
cmp
addr16
orl
fsub
inc
cmp
sub
outsl
mov
sbb
pusha
sbb
xor
or
imul
adc
mov
dec
mov
ret
nop
stos
stos
adc
sub
pop
ss
dec
repnz
mov
pop
adcl
or
push
movsb
add
lret
fs
or
call
jno
test
decl
push
sbb
insb
push
inc
inc
sahf
mov
mov
sbb
adc
je
addr16
or
rorl
push
jecxz
pop
mov
mov
or
dec
dec
nop
lods
pop
fidivs
push
loop
dec
fisubrs
out
lcall
imul
sub
daa
ds
mov
das
out
lret
jmp
or
lds
mov
filds
adc
in
adc
inc
loope
push
fbld
shll
filds
adc
lock
in
mov
int
push
fwait
pop
aas
dec
cli
ja
sbb
mov
sarb
mov
adc
js
cmp
mov
xlat
pop
pop
aas
xor
int3
lods
push
jb
mov
xchg
sub
sub
dec
addl
add
pop
dec
popf
es
aad
sbb
push
and
cmp
dec
dec
test
call
sbb
sub
jmp
test
lock
shrb
xchg
dec
idivl
sti
cmp
push
mov
cld
std
xchg
mov
mov
adc
std
scas
pushf
fisubs
mov
data16
add
add
test
lock
dec
enter
xor
jns
adc
mov
adc
mov
jae
jecxz
ret
aad
outsb
mov
in
rol
fisubs
xchg
xor
push
or
or
inc
jb
lcall
inc
test
in
repz
pop
negb
xor
and
sub
add
sti
out
rcrb
ficoms
pop
pop
cmc
out
jl
mov
push
cmp
sbb
push
popf
xchg
in
push
pop
cmp
cmp
sahf
lock
jne
orb
sub
out
mov
inc
leave
or
ds
and
xor
xchg
test
mov
fnstsw
inc
mov
jae
push
outsl
xor
outsb
or
fwait
xor
xchg
lcall
mov
fistl
movsb
scas
call
cmp
push
sbb
imul
sub
mov
sub
sub
mov
imul
mov
mov
fisubs
out
rorb
add
sub
mov
popa
in
sbb
dec
add
or
dec
pusha
mov
clc
jae
jg
mov
cltd
xor
int
inc
xchg
loopne
jo
mov
andb
push
inc
rclb
rcll
out
sub
lahf
dec
nop
movsb
add
mov
cld
mulb
stos
divb
loop
lock
data16
rorl
int
test
jnp
sbb
add
cmp
push
dec
adc
into
in
dec
mov
xchg
andl
add
daa
pop
fnstenv
mov
addr16
jnp
or
movsl
mov
adc
and
xchg
imul
call
stos
inc
pushf
shll
sbb
mov
inc
popa
xchg
or
jnp
es
mov
sub
xor
repz
and
fildll
or
push
mov
inc
mov
leave
es
test
jno
cs
shl
push
out
pop
enter
addb
call
push
data16
push
push
repz
jmp
ficomps
bound
cmp
sub
data16
add
loope
icebp
cmp
test
or
inc
shll
ljmp
mov
andb
dec
cmpsl
adc
loop
scas
out
inc
adc
and
push
shrb
stc
mov
push
push
jl
lea
jbe
inc
push
test
sbb
mov
loopne
xchg
cmp
or
add
loopne
pop
mov
inc
pop
adc
pop
hlt
insl
pop
in
adc
mov
sbb
test
movsb
pop
dec
mov
inc
jmp
mov
mov
jb
mov
insl
push
xchg
cli
add
cwtl
scas
push
mov
push
inc
cmp
icebp
push
loope
test
mov
arpl
notl
cli
sbb
in
faddp
xor
cltd
and
fisubrs
pop
cltd
ret
mov
pop
les
mov
xlat
cli
stos
dec
cld
xchg
test
xchg
cwtl
pop
pop
mov
sub
mov
data16
outsl
js
sbbl
lock
fldl
push
ret
sub
push
js
in
pop
push
sub
push
pop
je
xchg
mov
xchg
sub
push
add
pusha
lock
mov
mov
dec
sub
test
sbb
or
aad
adc
dec
inc
and
cmp
imul
adc
jg
into
cld
stc
pusha
mov
je
sbbb
inc
arpl
out
in
gs
ds
fsubs
inc
xchg
cmp
xor
mov
test
insb
xchg
jne
pop
sub
test
push
sti
imul
iret
movsb
xlat
pop
mov
testl
aaa
adc
xchg
mov
dec
pop
xchg
lret
mov
mov
aad
mov
lods
andb
mov
sub
jp
loop
dec
arpl
mov
lahf
popa
ja
icebp
into
mov
iret
xchg
inc
inc
aad
fisttps
aaa
cmpsl
imul
jle
xchg
sbb
icebp
stc
jae
jle
sub
jns
and
scas
fcomip
cltd
gs
or
xchg
iret
stos
ret
sbb
xor
and
push
test
stos
push
ret
sub
daa
pushl
mov
fisubrl
idivb
and
and
dec
inc
jnp
push
std
in
ja,pn
dec
sub
call
mov
cli
js
jo
leave
add
mov
roll
sahf
xor
xor
adc
and
fsubl
popf
pop
scas
or
clc
jnp
out
pop
orl
paddusb
sbb
imul
icebp
lea
pop
popf
popa
daa
and
into
xor
cs
loop
inc
jne
mov
adc
dec
add
push
in
ss
or
push
pop
loop
or
int3
ret
aam
les
and
mov
cmp
scas
cmc
loopne
andb
movsb
fsubl
and
mov
add
popa
mov
add
pusha
xor
stc
cmp
jae
dec
dec
mov
push
add
dec
or
clc
notb
cmp
orb
lcall
mov
xchg
ficompl
mov
mov
sub
or
xor
fldt
je
sub
pop
push
mov
jbe
in
hlt
and
lods
pop
xchg
outsl
xor
or
xchg
or
cli
imul
mov
inc
sbb
in
outsb
dec
movsl
lret
call
xor
movsb
roll
orb
xor
jae
xor
mov
inc
or
fldl
adc
add
xchg
sbb
les
mov
incl
lea
sub
or
sub
repnz
test
mov
mov
jns
push
sbb
push
pop
incl
dec
mov
out
xor
dec
pop
ja
lret
insb
bound
xchg
shrl
outsl
lds
jge
pusha
addr16
jne
xchg
mov
push
xchg
mov
and
and
std
inc
inc
push
jbe
fdivl
xchg
mov
add
push
sbb
and
dec
gs
jno
lcall
xchg
inc
test
ficomps
sahf
cwtl
mov
ss
adc
pop
mov
xor
xlat
pop
ret
dec
push
jecxz
and
leave
test
add
pop
mov
inc
pop
in
aam
add
rcrl
fsubr
out
or
adc
insl
mov
ret
xchg
out
sub
aad
push
ljmp
dec
loopne
data16
imul
sti
push
mov
push
and
cmp
outsl
mov
sbb
mov
sub
repnz
das
lock
insb
sbb
clc
xor
inc
cld
pop
mov
enter
into
je
rcrl
leave
add
lods
xchg
xor
dec
cmpsl
arpl
mulb
jmp
out
incl
jg
loop
sbb
push
sbb
shrl
lds
dec
xchg
popa
dec
fisttps
jns
or
xor
hlt
loopne
mov
les
into
inc
inc
sub
add
cmp
repz
inc
mov
xchg
outsb
dec
insb
pop
jmp
push
jp
jp
sbb
jb
fs
shl
and
adc
mov
mov
call
arpl
daa
lret
icebp
pushf
sarl
iret
les
mov
sti
jl
inc
cmp
std
pop
jg,pt
pop
aas
mov
sbb
add
stos
or
inc
cltd
adc
mov
out
insb
cmp
sub
shll
mov
aad
push
mov
cmp
data16
leave
mov
dec
jbe
sub
add
mov
sub
js
cli
cmp
push
sbb
jmp
fiadds
mov
aad
vucomiss
mov
js
aas
ljmp
pop
xor
adc
addl
aam
enter
pop
cmovl
inc
and
sbb
cmpsl
mov
clc
js
js
add
add
sti
pop
cmp
adc
add
or
xlat
scas
mov
fimuls
mov
ret
into
cwtl
fs
test
jg
mov
jnp
gs
mov
jmp
mov
in
mov
mov
fcompl
adcl
xor
sti
xchg
fmuls
dec
push
sub
data16
fisubl
sub
jmp
fs
inc
sub
cmp
out
andb
mov
or
scas
outsl
jle
cld
loopne
test
cmp
pop
inc
mov
pushf
jno
and
dec
fxch
sub
inc
add
ds
popa
call
pop
outsl
imul
test
fmull
scas
in
ret
pop
and
enter
mov
les
xchg
ficoms
inc
aad
cmp
stos
pop
movsb
sbb
sub
xchg
insl
adc
fstpt
sbb
into
sarb
lds
ret
fwait
lods
dec
jl
or
sar
rorl
lods
mov
and
out
imul
repz
aas
cmp
push
stos
decb
cmp
adc
sub
loope
scas
fistpl
pop
push
mov
cmp
nop
stos
cwtl
std
stos
movsl
jge
rep
sahf
clc
jge
dec
cmp
dec
dec
shrl
push
sub
mov
mov
imul
add
mov
sub
cli
and
add
mov
mov
cmp
and
push
push
add
sub
inc
sbb
std
mov
aas
arpl
mov
jnp
call
pop
loopne
imul
imul
jp
fimull
lret
cltd
mov
arpl
xor
orl
aaa
cltd
xchg
mov
add
nop
xrelease
shl
cmpsb
push
jns
rcrb
addb
mov
aam
mov
negb
xor
xor
divl
push
mov
push
stc
push
les
ret
mov
mov
push
loope
and
jae
jge
pop
icebp
and
lds
pop
aad
xor
pushf
dec
dec
loop
mov
jns
jno
fsubl
add
dec
sub
xchg
inc
in
adc
adc
fldt
pop
aad
pop
cmp
loopne
mov
jno
inc
xlat
cmp
cmpb
sarl
ret
ljmp
push
je
iret
lahf
les
or
fcomps
mov
xor
inc
add
clc
movsl
mov
js
mov
xor
inc
jne
add
loope
pop
fldenv
cmp
dec
fwait
les
scas
ljmp
in
or
dec
mov
mov
imul
jo
cmc
dec
jno
mov
in
add
inc
in
sub
pop
add
loope
sbb
call
push
pop
fs
scas
lcall
enter
mov
into
mov
js
inc
stc
mov
cwtl
scas
sbb
stos
jns
ss
in
pop
mov
cmp
daa
pop
outsb
pop
cltd
xchg
cmp
dec
sbbb
scas
push
enter
rcll
mov
insl
mov
arpl
lock
or
into
and
xor
iret
push
xor
inc
dec
adc
fdivr
outsb
jmp
test
in
out
pop
gs
pop
andl
divl
ds
mov
bound
add
mov
movsb
fsin
out
repnz
cmpb
test
push
mov
out
mov
idivl
movsb
imulb
jmp
sub
pop
int
leave
hlt
divl
and
and
inc
mov
pop
int3
test
test
call
ja
mov
movsl
and
adc
xchg
fsubrl
dec
ljmp
rcr
cmp
dec
and
ret
and
dec
jl
inc
mov
sbb
jb
adc
mov
in
rolb
stos
mov
or
sub
ds
cmp
cmc
cwtl
xor
sub
cmpsl
dec
ja
sbb
add
sahf
scas
cmp
mov
nop
pop
or
gs
inc
mov
push
sbb
lcall
push
outsl
fbstp
lock
hlt
sub
mov
jge
sahf
xor
xchg
out
outsl
mov
sbb
inc
data16
push
inc
ret
cmpsl
mov
xchg
cmp
leave
mov
jbe
fwait
add
jecxz
loope
mov
cmpsb
xchg
cwtl
xchg
iret
js
or
sub
shl
xchg
cmp
sub
push
push
push
push
or
imul
inc
fimull
je
push
cltd
cwtl
or
loop
and
imul
scas
add
pop
pop
cwtl
mov
jecxz
fs
je
jne
sbb
sub
fadds
lcall
icebp
inc
xchg
aaa
data16
out
inc
push
aas
cltd
add
loopne
sbbl
mov
aam
dec
in
data16
mov
aaa
push
repnz
jno
fidivrs
inc
pop
or
xchg
test
psrlq
or
mov
add
pusha
test
xor
out
loopne
push
mov
pop
push
aaa
sbb
arpl
inc
jl
rol
push
mov
dec
sti
push
inc
dec
cld
mov
dec
xchg
mov
fistl
in
cwtl
sahf
jae
push
mov
orb
mov
xor
cs
call
hlt
fldenv
outsb
fstpt
cmp
cli
lods
cmpsb
sub
dec
int3
sbb
sbb
sbb
add
jge
aam
sbb
jae
ds
jno
cli
mov
pop
inc
xor
and
pop
inc
cltd
push
lock
jno
and
popa
pop
dec
sbb
mov
fsubrl
repz
fdivr
popa
sahf
and
cli
mov
push
stos
popl
xlat
xor
jge
lds
fcmovb
and
xchg
xchg
push
pop
dec
pop
adc
inc
xor
icebp
mov
rol
mov
dec
pop
xlat
fs
hlt
dec
cwtl
shrl
mov
aas
xchg
sub
out
mov
divb
nop
sarl
push
push
inc
loope
jnp
ljmp
rolb
xor
dec
sbb
lock
cmp
inc
push
aas
ja
adc
pop
ja
ljmp
aam
and
cmpsl
or
mov
pop
mov
out
mov
inc
in
cs
arpl
leave
popl
mov
loopne
inc
in
xchg
xlat
notb
jp
cmp
in
cltd
cmp
adc
rorb
adc
fsts
jp
pop
cltd
out
and
decl
fsts
movsl
pop
cld
jne
inc
pop
mov
jle
jae
int3
out
dec
dec
outsl
xor
jbe
pop
dec
pop
cmpsl
fwait
jecxz
out
in
jns
sbb
add
adc
test
xchg
sbb
mov
into
cmpsb
dec
add
and
lods
xchg
cmp
arpl
add
sub
loop
popf
push
test
stos
cmp
mov
cmpsl
ljmp
out
and
cwtl
cli
sbb
jo
adc
lcall
jno
inc
adc
rcl
jp
repz
jnp
mov
cmpsl
fnstcw
add
iret
sub
add
roll
ljmp
sbb
mov
add
pop
jg
xor
enter
mov
popa
cmpsb
jecxz
mov
lea
xchg
xlat
adc
stc
lret
add
pop
or
jno
mov
inc
mov
adcl
popa
popa
ds
push
push
lods
jo
loope
cmp
mov
cld
in
es
fisttps
push
popa
mulb
inc
insl
dec
xor
test
testl
inc
push
insb
add
lods
sub
arpl
sbb
loopne
jnp
loopne
add
cmp
leave
dec
inc
repz
mov
cmp
les
jne
mov
xor
lock
push
mov
test
inc
sub
rcrb
arpl
popa
push
and
pop
fprem
shlb
testl
ficomps
ret
inc
mov
pop
xchg
fidivrl
xor
mov
loopne
lock
cmp
in
xor
sbbb
iret
push
scas
push
stos
ret
pusha
mov
pop
mov
mov
invd
std
mov
std
fucomip
jae
clc
jecxz
lret
shrb
inc
xchg
cmp
sbb
pop
sbb
out
movb
mov
xor
push
loopne
dec
adc
in
pop
push
out
mov
insl
push
ljmp
std
sbb
mov
nop
faddl
imul
mov
fbld
cmp
lods
or
ret
and
pop
or
pop
outsb
pop
add
mov
sbbb
jg
insl
mov
xor
or
scas
and
fcomp
push
aam
xchg
inc
cmp
add
dec
cld
repz
jl
mov
ds
lret
orl
je
inc
cmp
cwtl
add
repnz
push
sbb
fidivrs
cmpsl
add
mov
sbb
jp
lahf
sub
pop
inc
pop
sahf
add
xor
es
xchg
cmpsl
daa
jmp
sbb
cmp
fdivs
enter
xchg
or
mov
bound
fsts
cmp
jno
cld
addl
stc
sub
aas
xor
dec
cmp
lret
fisttpl
repnz
sub
lahf
das
fmull
mov
daa
xchg
test
shl
push
lods
push
cmc
out
leave
xchg
pop
or
stos
push
clc
lds
cs
mov
jae
repz
mov
xchg
ret
jno
sbb
pop
popa
outsb
test
popa
jbe
scas
leave
cmpsb
push
pop
out
push
push
xlat
inc
addr16
cmovbe
cli
divb
popf
std
gs
push
pop
inc
adc
push
sbb
or
jo
mov
repz
testb
scas
iret
cli
js
mov
test
es
push
jge
je
adc
out
cmp
sbb
jo
out
inc
arpl
sub
add
mov
xchg
sub
sahf
outsb
sbb
jmp
xor
popf
cmp
mov
or
or
inc
cld
push
jle
out
daa
jl
xchg
dec
xchg
mov
pop
movsl
mov
xchg
xor
loop
sbb
add
or
mov
or
pop
sbb
nop
push
or
ret
fcmovnb
push
stos
mov
fsubrs
xor
mov
mov
inc
hlt
dec
inc
rolb
jp
inc
fucomi
test
sbb
ret
stos
iret
pushf
mov
sbb
or
cmp
cld
jbe
pusha
lret
adc
bnd
or
pop
loope
mov
in
sub
movsl
mov
mov
pop
pusha
scas
pusha
xchg
or
mov
je
xchg
ja
mov
rcl
movntps
xchg
cmpsb
sbb
repz
xchg
cmp
out
mov
hlt
jno
in
stos
jge
jno
stc
mov
pop
mov
mov
add
cmpb
sbb
mov
dec
push
mov
stos
out
jmp
daa
stos
adc
cld
in
insl
das
mov
cwtl
xor
cmpsl
insb
sahf
xchg
and
cmp
stos
out
lods
or
mov
shlb
pop
out
dec
popf
insl
xchg
daa
stos
call
sub
js
ret
gs
inc
inc
hlt
aaa
arpl
cld
pop
mov
jle
pop
adc
jg
fwait
dec
inc
inc
cmp
mov
ja
push
and
inc
add
xor
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
push
ja
cmc
in
add
bnd
cli
sbb
rcrb
cmp
push
sbb
movl
push
and
jl
or
call
cmpsb
xor
xchg
and
sub
cmpsl
and
mov
dec
cli
rorl
repz
sbb
sbb
gs
xchg
pop
xor
mov
es
fisttpll
lods
dec
adc
notl
into
or
cmp
mov
lahf
popl
out
aam
aad
std
scas
sbb
pop
lea
rcrl
inc
fnstcw
inc
dec
je
xchg
outsb
clc
jmp
inc
std
and
add
pop
loop
pop
jne
lret
pop
movsl
mov
aam
mov
adc
jle
or
mov
aaa
ret
push
test
stos
lret
pop
fcomps
mov
sti
dec
xchg
sbb
repz
push
outsb
mov
hlt
adc
push
and
mov
inc
inc
pop
sub
pop
adc
push
adc
mov
shrb
in
mov
inc
popf
or
call
jno
ds
loopne
push
or
ja
mov
inc
mov
shrb
subl
jae
leave
sbb
mov
cld
fs
dec
arpl
adc
cmp
mov
test
fstl
and
sub
or
mov
jns
adc
out
mov
mov
adc
xor
push
cmpsl
push
dec
add
lds
mov
dec
jl
cld
push
out
pop
jmp
cld
mov
ret
shlb
popa
in
jo
adc
imul
stos
aam
fdivl
mov
mov
leave
and
hlt
scas
dec
push
cmp
insb
das
das
cmp
cmp
negb
xor
xor
pop
mov
jae
lret
lret
fdivrl
xchg
inc
jae
stos
bound
jne
int3
cld
lcall
xchg
mov
nop
xchg
mov
dec
cmp
repz
pop
in
mov
pop
pop
push
mov
xor
cs
sub
xchg
push
and
mov
or
push
jns
jno
cmp
sub
dec
sarl
push
ret
movsb
mov
ljmp
mov
hlt
mov
das
fildl
out
aam
shll
xor
cmp
subb
imul
mov
stos
pop
inc
and
insb
mov
lcall
into
or
mov
pop
nop
mov
pop
stos
aaa
loopne
mov
loop
imul
xchg
jle
cltd
xor
xor
add
movsb
fiaddl
xchg
jae
test
xchg
cld
inc
add
mov
fcompl
pop
jns
pop
pop
dec
jb
movsb
sbb
mov
int
cmp
insb
or
inc
mov
sti
inc
sarb
loopne
dec
popa
sbb
cwtl
sbbl
ret
dec
or
fadds
sbb
fmul
push
mov
bswap
mov
ljmp
or
push
imul
mov
lods
adc
mov
cli
push
loopne
inc
mov
leave
mov
pop
inc
cmpb
cmpsb
fdiv
and
sub
je
jmp
stos
aam
enter
ljmp
pop
jl
movsl
pop
cmp
mov
xchg
bound
pop
pop
and
mov
mov
cltd
imul
ja
sub
and
mov
sarl
push
xchg
xchg
lock
adc
and
cmp
pushf
arpl
cwtl
ja
scas
add
pop
adc
daa
sbb
addl
gs
mov
or
shlb
mov
scas
arpl
loop
adc
lea
xchg
enter
ficompl
adcl
jmp
inc
aam
and
add
dec
in
fisubs
mov
das
popf
push
ds
mov
fistps
fidivrl
scas
loopne
int3
lahf
aad
adc
and
movsb
in
ds
push
inc
jne
mov
pop
in
test
fisubs
mov
jns
inc
dec
mov
jno
lods
ds
in
mov
sbb
cmp
lahf
fadds
rcrb
outsl
push
xor
cmp
pusha
dec
push
pop
xor
cmp
ss
leave
mov
or
push
ret
call
dec
pop
stc
fidivl
and
jle
inc
jl
lret
test
cmp
sbbb
xchg
sahf
arpl
repnz
pop
sub
jno
sub
and
pushf
lds
lret
dec
push
push
and
xchg
add
sahf
add
sbb
and
mov
fildl
cmp
inc
test
negb
aam
pushf
es
or
inc
xor
inc
dec
shlb
loopne
stos
test
mov
ljmp
setp
jge
xor
lahf
shrb
fdivrl
movsb
cmp
mov
dec
adcl
lahf
cmp
lea
pop
int
xlat
xor
in
jge
roll
es
mov
es
xor
loopne
sub
pusha
fwait
push
cs
aam
jns
fwait
ret
test
add
adc
bound
cmp
out
cli
dec
inc
lahf
hlt
push
ds
add
rclb
rol
add
std
ljmp
stc
in
and
fs
push
sub
pushf
mov
mov
cmp
test
push
mov
jmp
mov
jl
jg
stos
add
lods
cmp
push
popf
cs
cwtl
mov
insl
and
das
outsl
push
fdivrs
jbe
mov
xor
or
rcrl
add
sbb
out
lret
stc
int
mov
popa
outsb
xlat
mov
dec
pushf
add
pop
movsl
sub
sub
test
push
sahf
adc
lcall
les
mov
xchg
ds
mov
mov
test
imul
jo
jno
adc
fldcw
ss
lock
dec
ss
pop
aad
fcom
push
sbb
std
push
fcomi
in
adc
loopne
js
cmp
sahf
sbb
ljmp
daa
rorb
andl
dec
inc
das
fnsave
mov
mov
cmc
sub
inc
sbb
mov
adc
pop
cmp
les
xchg
in
xor
xchg
imul
mov
lcall
and
pushf
pop
mov
xor
xlat
xor
mov
mov
into
sub
mov
daa
or
and
test
sbb
xchg
cmp
jp
push
xor
add
and
jbe
or
mov
push
andl
jns
pop
sbb
jle
inc
mov
repz
xorl
jl
jmp
push
nop
fnsave
mov
in
outsl
les
sub
sbbl
jae
ss
mov
jno
push
cmp
cmp
jle
or
mov
lahf
outsl
cltd
das
jno
jno
mov
pop
cli
loop
push
jo
cmp
xor
mov
xchg
ret
mov
jmp
aas
lcall
add
inc
repz
ret
and
push
adc
test
inc
rcrl
jl
js
arpl
movsb
sbb
fs
adc
mov
dec
hlt
adc
or
jecxz
mov
mov
lret
arpl
sub
jmp
pop
lods
adc
xlat
dec
ror
mov
mov
sub
sub
shlb
ss
imul
pop
test
and
push
inc
ds
push
jp
push
popf
mov
dec
rcrl
gs
push
jb
sbb
mov
push
sbb
lds
xchg
lock
xor
ja
sbb
out
xor
jnp
imul
dec
cld
pop
and
pushf
jne
adc
pusha
pop
jo
jb
or
mov
add
push
dec
in
and
inc
lahf
adc
add
pop
inc
cld
movsl
adc
sub
adc
mov
std
push
cli
add
pop
notb
pop
cltd
ror
xor
pop
dec
nop
jle
stc
add
pop
gs
out
pop
cltd
mov
cmp
mov
adc
iret
add
ljmp
sub
push
out
gs
jnp
and
jg
mov
subl
imull
shrd
mov
inc
sub
add
lahf
fcomp
mov
out
rcr
lock
pop
mov
push
in
pop
sub
mov
mov
clc
fcoml
inc
push
test
movsl
sbb
push
push
pop
aas
dec
push
cld
jecxz
movsb
pop
mov
or
push
mov
lods
cmp
inc
push
mov
dec
cmc
push
fisttpll
les
xor
mov
push
jae
out
enter
das
dec
and
shrl
inc
mov
dec
mov
or
enter
inc
jge
and
mov
pop
pop
lcall
adc
push
lret
movsl
adc
dec
imul
pusha
lods
adc
je
jno
sub
add
pop
outsb
cwtl
ja
adc
movsl
mov
negb
mov
imul
notl
xchg
pop
popf
imulb
bound
mov
addr16
scas
sub
xor
aam
pop
pop
push
and
cld
inc
mov
flds
cmpsb
sbb
cld
push
clc
lock
push
add
xor
and
mov
pop
mov
into
addb
mov
or
enter
lock
adc
lret
cmpsb
inc
lcall
lahf
sti
ret
nop
push
mov
cmp
inc
int
mov
jnp
or
or
rcrb
or
cmp
imul
jg
call
add
mov
rol
lret
lods
clc
shr
in
mov
imul
insl
cmp
out
xor
push
adc
sbb
or
add
dec
test
stos
pop
loope
hlt
push
inc
adc
test
std
cmc
mov
in
pop
gs
setb
sub
rclb
dec
jecxz
mov
fwait
mov
out
imul
pop
std
ljmp
idiv
xchg
cs
jle
cmp
out
xchg
or
fistpll
cmp
or
push
jo
mov
ja
icebp
adc
sub
dec
push
cmovns
mov
leave
push
in
push
mov
add
jb
out
lds
jl
jl
or
xchg
lcall
fcmovbe
imul
mov
jo
leave
mov
mov
test
imul
mov
insl
js
or
clc
popf
mov
and
sub
xor
test
jne
xor
loopne
pushf
xchg
js
jecxz
push
xrelease
mov
xchg
loopne
xor
in
in
sbbb
les
inc
dec
and
adc
das
mov
outsl
cmp
jb
inc
xchg
and
adc
insl
xchg
mov
pop
mov
mov
adc
cmc
jb
push
clc
in
inc
sbb
imul
movsl
xor
dec
inc
test
jge
lds
and
dec
cmpsl
xchg
ret
stc
and
mov
add
mov
movsl
movsl
push
arpl
mov
pop
xlat
ja
add
sbb
xchg
mov
cmp
xor
inc
add
test
scas
push
push
xor
jno
fadd
mov
adc
add
int
pop
xlat
cld
or
push
xchg
popf
cmpsl
and
sbbb
lcall
and
insb
dec
addr16
mov
js
rcrb
repz
add
or
lret
fidivs
dec
fldcw
cli
sub
pop
int
cmp
mov
and
fsubrl
and
add
add
cld
pop
rorl
ret
xor
push
jmp
in
inc
sbb
fwait
pop
xor
scas
cmpsb
push
mov
aaa
mov
fdivrs
xor
push
orl
cmc
pop
mov
mov
arpl
loope
mov
daa
mov
ret
xor
inc
adc
mull
cld
mov
je
cmpsl
and
call
test
and
repz
xlat
mov
sub
hlt
or
and
pop
mov
mov
ret
hlt
sbb
sbb
loop
shll
dec
sahf
daa
mov
gs
ja
push
mov
jno
andl
push
push
lock
test
scas
xchg
cwtl
stos
lret
pop
xor
insl
les
mov
cmpb
and
aad
outsl
imulb
mov
inc
jecxz
shl
adc
xchg
push
aam
icebp
imul
loop
cli
subb
dec
sbb
jb
and
and
shr
push
fcompl
dec
push
cmpsb
fadds
int
fldenv
fmuls
insl
jp
xor
jmp
ror
push
mov
addw
rol
pop
loope
dec
sti
addr16
jne
inc
sbb
les
and
mov
ja
pusha
sub
mov
ja
adc
inc
mov
or
push
outsb
inc
jp
inc
push
add
test
daa
andb
and
out
add
cmp
fcmovu
xchg
ret
fcmove
xor
lock
mov
dec
add
sub
mov
into
mov
push
fs
xchg
pop
test
mov
pop
dec
mov
xchg
xchg
jo
mov
fisttpl
ficompl
loopne
add
jle
cmp
hlt
adc
rcrb
jns
movsb
xor
les
fcmovnb
sub
inc
call
rclb
outsl
xorb
push
adc
loop
xor
lock
cld
xor
jge
push
sarb
mov
loopne
cmc
cmp
cmpsl
xor
mov
out
ss
add
mov
shr
in
sub
scas
pop
lock
outsl
fistl
jle
lcall
and
sub
push
inc
or
mov
stc
jmp
xchg
inc
or
lret
insb
jae
stos
bnd
sar
jmp
and
xor
jg
push
add
js
pop
xchg
aaa
mov
lcall
ljmp
repnz
sub
adc
repz
xchg
sub
sub
stc
fldenv
negb
jecxz
cmp
mov
adc
fwait
jae
cmpsl
loopne
sahf
mov
jno
in
push
gs
and
pop
gs
push
pop
dec
mov
xor
sub
jno
push
cmpsl
jp
mov
lret
push
jp
std
ret
cli
aad
mov
or
fwait
push
pop
mov
adcl
and
push
fdivrs
pop
xchg
ret
dec
faddp
pusha
sbb
pop
movl
aas
push
jge
pop
mov
push
xchg
sbb
mov
mov
dec
jae
xorb
out
mov
pop
xor
in
jo
jo
jb
jge
clc
mov
int3
les
mov
out
mov
lret
cmp
loopne
jb
out
mov
subb
ret
xor
xor
mov
rcrb
insl
push
js
and
inc
add
pop
stc
push
faddl
jg
add
fldt
popa
clc
sbbb
pop
roll
jecxz
int3
push
in
xchg
mov
loop
rcll
dec
mov
ret
xchg
popa
push
gs
loopne
cmp
push
jo
jne
imul
mov
inc
int3
in
xlat
cltd
icebp
jno
pinsrw
mov
bts
inc
retw
cmp
jg
mov
pop
xor
xchg
out
push
and
out
cmpsl
dec
pop
ret
jne
mov
cmp
mov
push
push
cmp
and
pop
call
je
push
sbb
jb
jmp
adc
bound
mov
dec
mov
cmp
mov
jne
push
pop
mov
test
fisttpl
shll
ss
fimuls
add
or
imul
pop
dec
xlat
fdivs
insl
xchg
push
test
out
fisttps
add
clc
incl
bswap
dec
mov
sbb
std
adc
mov
daa
into
inc
and
cmp
pop
ja
adc
pop
daa
jg
lods
imul
dec
dec
and
or
push
int3
arpl
sub
mov
mov
aad
and
cwtl
adc
jge
repz
movsb
insl
and
mov
xchg
dec
jnp
sbbb
rcrb
or
push
inc
pop
adc
ss
insl
push
cs
decb
daa
iret
adc
aam
push
inc
dec
sub
lods
pop
xchg
test
incb
push
sbb
lock
jno
mov
inc
inc
dec
divb
pushf
leave
push
stc
inc
cltd
lahf
sub
aad
icebp
std
ljmp
orl
dec
add
shl
sub
nop
mov
insl
sbb
icebp
dec
ljmp
push
xchg
jp
popf
js
mov
xchg
xchg
shrl
lret
dec
sti
test
popa
mov
das
jle
dec
push
pop
shlb
fildll
sbbb
mov
pop
jnp
adc
loope
fldenv
insb
or
ret
jle
in
mov
sarl
sub
xor
cmp
sbbl
mov
js
push
mov
popf
in
add
inc
inc
dec
jae
dec
rorb
ret
push
shlb
test
inc
sub
out
in
loope
pop
sbb
out
sub
and
xlat
fidivl
mov
cmp
mov
nop
test
jecxz
pop
xlat
push
mov
xchg
push
sub
mov
cltd
dec
and
add
test
or
or
adc
lock
and
lods
pop
sub
sub
bound
int
xchg
in
jno
jl
rsm
mov
xchg
adc
test
dec
je
adc
pop
jb
nop
cmp
pop
mov
mov
pop
or
les
scas
cwtl
nop
das
jl
ds
jl
xchg
lret
pop
pop
sbb
push
add
fucomip
xlat
xchg
sbb
imul
inc
imul
mov
cmp
nop
enter
jg
adc
mov
test
adc
and
loop
gs
mov
mov
inc
cmp
aas
jnp
xchg
xchg
sti
loop
jbe
loope
lret
inc
mov
bound
fldt
and
fld
mov
lahf
and
scas
rorb
aas
mov
and
mov
sub
lea
lahf
mov
lahf
sub
popa
xor
mov
xor
sub
pop
mov
cmp
jae,pn
pusha
enter
in
pusha
test
in
js
pop
or
scas
cmc
sbb
stos
jno
and
rol
xchg
inc
adc
cmp
mov
inc
push
or
add
je
adc
sbb
insb
ja
add
test
es
pop
xchg
imul
nop
mov
push
nop
sub
mov
add
rorl
jmp
in
xlat
fxch
pop
lds
xchg
inc
sar
xchg
push
pop
push
mov
dec
gs
in
add
orl
int3
mov
outsl
cmp
and
cmp
js
mov
dec
or
add
mov
lods
mov
jae
fstps
shlb
jle
inc
rcrl
sbb
xor
fidivl
jae
test
std
cmp
dec
stos
sbb
das
pop
or
call
mov
lret
jb,pn
cli
test
test
outsb
nop
out
xchg
btsl
out
outsl
leave
cmp
push
addr16
aam
push
sub
dec
push
not
pop
jne
cmpb
xor
mov
mov
cmp
lcall
lods
movsl
sub
xchg
push
test
jmp
stos
cltd
int
imul
imul
push
fildll
cli
lea
repz
es
popa
jecxz
jnp
call
mov
mov
mov
mov
enter
sub
shl
mov
mov
push
mov
sbb
out
mov
mov
dec
pinsrw
movsb
dec
xor
mov
mov
neg
lret
inc
cltd
xchg
jge
pop
xor
push
mov
xor
dec
jle
outsb
dec
addr16
lret
jne
stc
dec
inc
cs
xor
decb
inc
es
fsubrp
pop
fs
jl
test
inc
xchg
push
bound
mov
mov
out
dec
clc
jmpw
mov
aam
lcall
push
dec
push
mov
int
imul
add
inc
jl
scas
nop
lea
sbb
out
ds
dec
mov
sbb
lahf
jns
cs
jmp
ret
pop
pushf
and
mov
push
lock
in
sbb
sub
sti
push
nop
daa
xchg
sbb
loope
jb
test
ret
adc
pop
mov
sub
sub
dec
iret
dec
jne
popf
jp
xorl
pop
xchg
scas
sbb
movsb
imul
test
jae
push
jle
xchg
pop
sbb
xor
inc
or
add
pushf
imul
xor
icebp
lahf
mov
imul
int3
mov
cmpsl
sbb
mov
fneni(8087
pop
cmp
adc
dec
lret
test
mov
jmp
bound
mov
fiaddl
and
cld
or
xlat
stos
or
mov
jmp
pop
xor
jo
xchg
or
dec
cs
jp
pusha
data16
aas
mov
mov
sbbb
pop
lcall
shlb
cmpsb
pusha
add
mov
adc
push
cmp
sbb
lahf
fiaddl
mov
mov
xor
jno
adc
pop
adc
xchg
mov
add
fldenv
xchg
mov
popa
cmp
das
ret
xor
push
es
addr16
inc
xorl
lahf
je
pop
mov
popf
fstpl
out
pop
popf
and
cmc
adc
push
adc
adc
push
hlt
pop
mov
jns
push
jbe
cmp
xchg
repz
adc
mov
iret
push
push
xor
dec
shrl
cwtl
lcall
out
rol
insb
xchg
jb
pop
fs
lcall
jbe
mov
pushf
mov
adc
sahf
xchg
add
rcrb
scas
xchg
xchg
notb
inc
aaa
idivl
jnp
xchg
mov
mov
hlt
and
xor
dec
test
inc
movsl
rcl
sbb
fwait
dec
dec
fwait
out
sub
pop
adc
mov
sub
lahf
mov
mov
call
rorl
daa
lock
scas
cmp
test
lahf
mov
fidivs
inc
and
outsb
sbb
adc
xadd
dec
adc
cmpsl
jae
dec
andb
popa
repz
cld
insb
jg
addr16
xor
pop
fwait
and
ss
ljmp
cmp
jecxz
das
dec
dec
xchg
aad
jno
cmp
pop
cltd
jecxz
xchg
out
push
xchg
push
movsl
xor
outsl
push
sub
add
sbb
pop
hlt
push
xchg
sbb
ret
lock
insl
sbb
jae
and
daa
insb
fdivs
mov
mov
ret
jmp
stc
jle
mov
je
xchg
push
cmpsb
dec
loopne
pop
push
jmp
lret
movsl
cmp
loopne
fiaddl
jae
test
cld
pop
enter
out
es
add
movsb
cltd
cmp
push
mov
dec
adc
lock
fsubs
or
ljmp
cmpl
aad
cmp
je
out
in
push
sti
and
sahf
repz
pop
fildl
outsb
cmp
sub
jp
daa
lods
mov
adc
cmp
mov
xor
aad
adc
dec
push
mov
dec
sbb
out
mov
inc
rorl
push
rcl
sub
add
stc
in
add
cltd
insb
dec
pop
mov
cmp
cs
mov
xor
test
cmp
cmp
xor
xchg
out
loope
jmp
pushf
add
mov
mov
add
imulb
cwtl
push
cmp
jmp
sbb
lods
sub
cmc
mov
mov
xlat
push
aas
dec
mov
cmp
dec
adc
sahf
shr
sub
mov
sub
lea
imul
lret
ljmp
pop
es
test
add
jmp
jns
add
inc
lahf
nop
nop
nop
or
sti
sti
lea
je
push
inc
sbb
pop
mov
in
mov
das
pop
insb
shr
mov
jle
rcrl
inc
pop
pusha
pop
xlat
cmpsl
jnp
mov
aam
jge
cld
adc
mov
cwtl
pop
pusha
je
scas
push
arpl
mov
sub
lret
xor
mov
jo
fldt
dec
mov
enter
jle
loop
mov
test
daa
in
stc
mov
enter
xsha1
cmpsb
or
mov
or
jmp
movsb
imul
jl
jne
mov
jbe
fbstp
outsb
pop
or
lea
addr16
cwtl
xor
cwtl
lock
shrb
xlat
jb
pop
inc
inc
sub
xchg
test
mov
loop
mov
mov
pop
add
sub
daa
mov
jno
or
int3
sub
sahf
cs
aas
outsb
push
jmp
or
dec
push
or
lret
aaa
xorl
push
dec
bound
jmp
pop
adc
mov
data16
cwtl
pusha
iret
aas
sub
mov
movsl
je
add
incb
ljmp
call
into
sub
dec
add
pop
push
insb
adc
lret
out
rcll
or
mov
outsb
test
adc
loop
push
frstor
add
pop
xlat
add
into
std
fdivl
daa
imul
mov
push
sar
imul
mov
and
sti
out
fstps
notl
hlt
sbb
sub
into
adc
rorl
cmp
rcrb
and
leave
iret
push
fsubl
popa
and
icebp
mov
xchg
sub
fcoml
and
les
je
mov
inc
xlat
adc
push
mov
mov
or
xchg
sub
jns
sub
js
mov
nop
jecxz
es
out
jnp
mov
jns
les
daa
test
loope
xchg
sub
xor
mov
js
jns
ret
adc
int3
dec
push
cs
testl
sbb
into
jmp
jp
xchg
inc
jo
add
sub
icebp
adc
add
cld
or
or
nop
negl
push
dec
aam
push
fidivl
out
ljmp
lcall
jg
xor
test
es
mov
nop
push
adc
scas
jno
or
adc
fs
mov
ret
jb
push
sub
imul
adc
lods
adc
add
nop
stc
out
or
loop
pop
cmp
iret
or
stos
jbe
cli
cs
lret
dec
loop
jg
mov
push
push
test
rorl
insl
push
lea
sbb
xor
fistpll
sub
pop
pop
pop
xchg
sub
inc
mov
sub
lcall
loopne
das
fisubrs
xchg
inc
lahf
and
cmp
inc
push
inc
add
roll
xlat
inc
dec
xchg
add
fbld
xor
add
js
mov
call
clc
in
mov
push
jl
les
cltd
ljmp
aas
sub
mov
xor
sbb
movb
popa
jne
mov
insl
cwtl
cmp
test
fwait
mov
lret
aad
or
cmp
mov
and
xor
push
ds
xchg
out
mov
add
sub
pop
add
xor
and
repnz
and
das
lret
xchg
dec
sbb
aas
cmpsl
mov
xchg
stos
shll
mov
jecxz
icebp
je
pop
mov
xchg
jge
xchg
push
addr16
dec
lcall
or
fdivrp
loopne
pushf
push
jo
mov
jno
test
jne
dec
mov
jae
mov
fucomi
outsl
leave
bound
ss
jecxz
mov
cmp
xchg
xor
cmpsb
cs
jne
in
mov
rorb
xor
fistpll
mov
mov
xchg
rcl
lds
adc
or
sbb
jae
xchg
inc
dec
cltd
cmp
fmuls
add
cmp
cmp
outsl
mov
outsb
xchg
add
in
testb
pop
jg
ror
inc
sbb
je
xlat
insb
rcl
mov
stc
xor
lea
sbb
inc
lds
dec
fcoms
out
inc
pop
add
addr16
mov
test
nop
add
lcall
ret
addr16
dec
movsb
frstor
xor
or
cwtl
jmp
push
clc
pop
mov
leave
adc
pop
fwait
adc
sub
cmp
xchg
addr16
jp
dec
andb
push
cli
jne
jno
fildll
adc
shlb
xchg
and
mull
sub
cpuid
push
sub
mov
cmp
notb
iret
outsb
cltd
push
subl
icebp
lret
xchg
pop
add
lock
pop
cwtl
bound
adc
and
fdivs
or
mov
ret
xor
aas
pusha
inc
or
lret
adc
in
mov
dec
pusha
sbb
dec
pop
pop
sbb
jecxz
shll
add
push
mov
sub
pop
bound
enter
mov
inc
adc
xor
pop
sub
xchg
inc
jne
data16
xor
pop
fcoml
inc
cli
xchg
js
int3
shl
sbb
mov
mov
xchg
lret
xchg
or
in
aaa
dec
cmp
out
lea
add
pop
ss
subl
add
adc
push
hlt
int3
cmp
xor
jb
or
push
jle
or
sbb
cmp
stos
fwait
sub
add
js
sahf
stos
iret
pop
fimuls
sarb
or
pop
cmc
out
and
addr16
call
ss
and
fadds
mov
mov
imul
xor
outsb
enter
add
test
cltd
fcomi
and
nop
nop
sbb
dec
add
add
pop
adc
xor
stc
pop
fnsave
pop
sbb
out
scas
dec
push
push
push
fimuls
pop
hlt
or
gs
dec
fisubrl
pop
cmp
je
enter
xor
dec
jns
mov
out
mov
or
mov
dec
cmp
jb
rcr
adc
dec
nop
test
adc
lcall
inc
loop
les
in
ja
push
rolb
insb
sub
fsubs
xor
cmp
dec
movsl
es
pop
pop
sbb
sub
jbe
daa
adc
std
negl
push
pop
int
or
sub
into
js
push
push
arpl
push
xor
jb
jmp
inc
xchg
repz
mov
pop
stos
mov
add
mov
sti
popa
mov
mov
ljmp
fistpll
sub
dec
in
repz
jno
dec
test
stos
fdivrl
push
inc
je
mov
cs
repz
xchg
aaa
stos
fistps
mov
scas
sarl
sahf
pushf
fimuls
int3
jo
mov
movsl
cmp
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
incl
jl
pop
jl
xchg
in
rolb
sbb
rol
rol
jae
sub
lret
imul
and
insb
popf
and
push
pop
xor
pop
mov
xor
push
inc
addb
pusha
popa
lods
add
cmp
fs
sbb
test
mov
ret
out
mov
jg
mov
dec
fnstenv
mov
pop
mov
sti
or
addl
imul
pop
scas
lret
or
or
pop
addb
outsb
mov
push
mov
and
fs
inc
cmp
out
int
add
add
adc
in
add
inc
inc
xor
cs
scas
lds
or
mov
movsl
insb
incl
jecxz
xor
int
fldln2
xor
scas
xor
adc
shl
les
dec
sbbl
jne
mov
ja
push
aad
mov
and
fcoml
lock
test
adc
cmp
leave
push
in
mov
dec
or
sub
out
jl
and
mov
xor
pop
mov
jl
mov
clc
iret
push
lcall
std
test
jmp
incl
adc
jno
enter
xchg
ds
push
lock
jg
daa
mov
and
mov
dec
sub
push
sub
lds
lock
imul
aam
inc
mov
xlat
dec
lahf
scas
mov
movsl
mov
inc
xor
stos
mov
lret
dec
jae
sub
stos
add
cmp
fs
and
sub
ja
xor
and
cltd
jbe
adc
ret
mov
push
xchg
fwait
aas
aas
aaa
jle
leave
cmp
gs
push
std
mov
jo
aaa
or
clc
xchg
sbb
cmp
jnp
push
push
mov
call
mov
push
jbe
xchg
xor
pushf
cmpl
lret
add
mov
xchg
dec
xchg
xor
push
dec
jle
test
jne
bound
add
js
xchg
dec
icebp
int3
lcall
cmc
cmc
sub
jl
xchg
cltd
mov
push
or
ds
cmp
leave
ss
cwtl
pop
xor
pop
aam
cmpl
ret
adc
lret
fcomp
mov
mov
pusha
shl
stc
xlat
and
call
mov
adc
mov
jge
jns
push
mov
test
inc
mov
mov
push
test
jnp
scas
lea
cmp
iret
in
sbbl
jns
inc
mov
and
int
gs
sub
push
jle
add
jbe
jae
fcompl
dec
mov
pop
mov
pop
dec
outsb
movsb
adc
dec
xchg
or
aam
fwait
loope
mov
add
xor
or
inc
loop
and
movsl
pop
mov
pop
mov
mov
dec
jbe
out
fists
mov
fwait
jns
shll
mov
lret
fildl
xchg
and
mov
pop
xchg
push
je
xchg
add
mov
andl
sti
add
stos
leave
jo
in
inc
or
mov
rcrl
es
je
xor
mov
into
sbb
or
in
ficoml
push
movsb
mov
or
das
sub
push
adc
dec
lock
cmp
insb
xchg
stos
push
lcall
push
movsl
mov
scas
jo
dec
das
out
push
dec
push
loop
scas
lods
mov
bndcl
add
iret
int3
mov
sub
cltd
push
push
js
test
mov
scas
movsl
xor
and
push
mov
mov
ljmp
negl
push
mov
or
lcall
sub
jp
sub
xchg
sahf
mov
repz
adc
sbbl
stos
adc
leave
lcall
mov
stos
int
fs
movsl
pop
mov
sub
dec
jle
addr16
pop
or
shlb
mov
stc
aam
scas
aad
xchg
push
in
jge
pop
jp
enter
push
add
aaa
jbe
sbb
pop
dec
fsqrt
mov
mov
mov
loopne
popf
in
jno
jle
popf
lcall
pop
je
adc
shlb
nop
out
stos
push
dec
inc
lods
mov
in
fdivr
lea
sbb
or
push
sar
into
jo
das
rcll
ror
mov
iret
ss
cltd
dec
sub
rcrb
fdivrs
pop
pop
cmc
cli
test
inc
fisttpll
popa
pusha
cmpsb
sub
fisubs
xchg
cltd
mov
xor
sub
pusha
daa
fstpt
outsl
pop
xchg
mov
push
xchg
out
push
fildl
clc
aad
adc
int3
add
push
repnz
imul
rorb
inc
ss
les
inc
mov
adc
rorl
xchg
add
out
dec
mov
rorb
xchg
int3
mov
insl
mov
xor
lods
mov
in
mov
mov
cwtl
dec
or
insb
mov
jne
insl
int
dec
sti
jns
adc
xor
xor
push
out
push
lret
or
out
fbstp
and
add
push
jp
cs
test
pushf
insb
lods
cmp
inc
and
call
mov
mov
push
sub
xor
sub
pushf
xchg
imul
and
cmpb
ret
mov
xor
dec
mov
mov
add
and
loopne
cmp
mov
movsl
cmp
imul
pushf
sub
sub
inc
xchg
xor
add
and
xchg
xchg
lock
stos
cld
js
sub
mov
pop
insl
adc
inc
dec
sti
xlat
dec
inc
lret
cwtl
ljmp
jno
sbb
pop
std
call
pop
mov
hlt
fadd
es
aaa
test
aas
xchg
push
or
sub
orl
ret
pop
test
mov
pop
pusha
xor
aaa
adc
mov
insb
pop
sub
ss
push
cmc
jle
sub
fistl
cmp
jg
mov
js
lcall
mov
adc
add
mov
cmp
insl
sbb
and
mov
or
inc
jo
insl
sub
int3
add
ret
inc
lods
int
jl
nop
cld
sub
jp
jne
and
shrl
push
adc
xchg
push
pushf
sarb
and
icebp
out
mov
ret
jecxz
pop
push
fstl
mov
pop
movsl
mov
leave
dec
mov
sbb
pop
ss
nop
test
push
idiv
jno
jge
inc
push
pop
fcoml
cmp
inc
bound
dec
je
mov
pop
push
inc
xlat
rorb
mov
nop
dec
adc
shll
xor
cmp
add
and
jnp
mov
mov
jge
cmpsb
xchg
leave
inc
push
push
xchg
addr16
pop
testb
mov
dec
push
mov
adc
sarl
hlt
and
adc
outsb
inc
adc
mov
sub
mov
cmp
mov
in
insb
ljmp
mov
adc
mov
adc
jae
mov
mov
or
cmp
sub
xor
mov
movsb
add
cmp
xchg
dec
dec
jecxz
pushf
xchg
inc
ja
imul
sub
mov
fsts
das
or
add
mov
fs
inc
inc
jge
insl
clc
lret
adc
inc
pushf
push
aaa
cld
out
dec
and
mov
int3
insl
cmpsb
mov
mov
fnstenv
pop
outsb
lods
pop
and
iret
push
std
movhps
mov
lcall
lcall
sbb
jge
fbld
aam
inc
movsb
xchg
lcall
or
xor
fbstp
rcrl
sbb
adc
cltd
pop
jb
imul
add
filds
xor
jecxz
rcll
ret
imul
lock
push
push
xchg
imul
cmc
loope
xchg
adc
aaa
push
adc
clc
sub
cmp
jmp
bound
popa
incb
movsl
pushf
rcr
outsb
jno
inc
push
sbb
fadds
mov
int3
cltd
scas
xchg
push
adc
cmp
sub
fsubp
xchg
cs
subl
adc
sbb
sbb
and
subb
rcll
dec
test
or
pop
push
xor
pop
repz
adc
mov
int3
cwtl
arpl
jmp
nop
sbb
xchg
sbb
movsb
test
mov
jno
ds
mov
mov
push
push
add
sub
jb
sbb
xor
inc
cmc
int
inc
out
jmp
dec
mov
sub
in
scas
ret
negb
lcall
push
xor
gs
dec
jle
or
mov
sbb
and
insl
rcrb
std
fs
cmc
mov
jl
inc
pop
out
mov
xchg
xchg
xor
cmp
cmp
movsl
adc
cmp
and
bound
sub
pop
fisubs
pop
push
cmpsl
in
lods
sahf
testl
push
cmp
decb
movsb
fidivrs
dec
cmp
aaa
mov
mov
sbb
sub
push
pop
mov
and
mov
orl
mov
inc
andb
push
scas
push
jmp
shlb
pop
jbe
andb
mov
int3
int
dec
jg
nop
fldenv
jl
mov
and
adc
xor
adc
mov
cmpsl
mov
mov
stos
fnsave
stos
add
cs
ret
inc
or
sub
mov
fstl
push
and
ret
mov
sahf
add
insl
mov
cltd
inc
adc
fidivrl
xchg
push
or
adc
sub
inc
test
mov
in
sub
adc
in
pop
aaa
adcl
mov
daa
cmpsl
push
inc
pop
iret
das
pop
jbe
pop
fwait
clc
stos
orl
lock
pop
cmp
inc
mov
and
mov
push
xchg
rorl
xor
or
push
inc
mov
xchg
test
cmp
mov
pop
bound
sbb
or
jmp
xchg
mov
sub
inc
cli
jp
clc
hlt
icebp
sti
sub
fnsave
repnz
lea
jg
lret
add
push
mov
jne
lods
xchg
inc
lcall
enter
xchg
fmuls
push
pop
stc
test
xchg
insb
stos
inc
xchg
arpl
ds
pop
mov
lock
and
or
in
mov
mov
mov
mov
push
sub
xor
lcall
lret
imul
sbb
dec
hlt
in
sub
xor
push
inc
pop
push
outsb
add
fmuls
addl
out
mov
inc
or
ret
mov
fnsave
out
and
test
jp
mov
mov
es
test
outsl
fldt
int
ss
fimuls
sub
jl
pop
jne
js
cltd
shr
push
mov
dec
xchg
and
push
pusha
cmc
adc
ss
sbbl
dec
mov
mov
roll
cmpsb
jl
scas
mov
in
cmp
jle
out
call
push
xchg
cmpsl
pusha
mov
or
movsl
clc
icebp
insb
mov
cmpsb
jmp
nop
cmp
pushf
arpl
enter
fwait
adc
mov
mov
and
popf
neg
arpl
mov
cmp
xor
mov
icebp
sbb
sbb
mul
or
push
and
push
adc
xor
jp
lahf
mov
stc
fldcw
sbb
cmpsb
xor
test
jl
mov
inc
out
cmp
loopne
push
sub
enter
fwait
ret
cmp
sbb
sbb
mov
pop
movsl
mov
pop
push
test
aad
ss
ljmp
mov
mov
add
dec
repnz
sbb
xor
add
mov
int3
adc
or
jns
inc
inc
mov
ficoms
dec
pop
pop
das
pop
bound
xchg
xchg
pop
push
out
jbe
jle
or
testl
scas
cmp
movsl
insb
push
pop
xchg
insb
pop
iret
testb
mov
xchg
or
stos
adc
mov
dec
push
aad
mov
fucomip
push
push
ja
xchg
bound
scas
dec
jg
push
stos
shrb
and
out
xchg
call
add
jmp
std
add
or
sub
jns
adc
imul
and
inc
sahf
inc
xchg
loop
mov
insb
loope
into
or
into
icebp
sbb
mov
aaa
testl
add
adc
jno
push
push
or
roll
sahf
or
pop
sbb
pop
push
push
mov
rorl
cmp
cmp
mov
aas
adc
andps
xor
xlat
int3
lods
fwait
xchg
cmpsb
aaa
imul
out
dec
enter
mov
cmp
js
pushf
mov
or
pop
xor
daa
movsb
jno
loop
andl
xchg
je
sub
fildl
clc
daa
scas
xchg
rol
jp
popf
dec
cld
ja
mov
and
inc
jnp
jo
pusha
mov
dec
jae
lock
push
jg
movsb
inc
inc
xchg
fdivrs
lahf
dec
and
xchg
push
popa
inc
xor
mov
lret
imul
xlat
in
lea
test
cs
lock
shrb
lods
fsubr
push
or
push
pop
inc
lds
mov
xor
mov
shl
or
inc
nop
in
out
inc
mov
daa
cwtl
call
adc
scas
xchg
std
imul
hlt
and
dec
inc
mov
add
mov
and
sub
enter
xor
stos
and
fisttpl
add
loop
xchg
mov
jno
mov
xchg
mov
das
mov
mov
rol
shrl
xor
push
shll
push
cmp
shrl
sbb
mov
in
mov
mov
pushf
push
mov
mov
mov
push
loopne
mov
mov
and
ss
mov
sahf
mov
cli
rcr
out
mov
and
jle
xlat
loop
xchg
cld
push
icebp
fstl
dec
sbb
ficompl
mov
cli
jns
mov
pushf
dec
mov
pusha
enter
jae
aas
stc
xchg
jnp
push
mov
jne
fdivrp
mov
lret
movsb
loope
sub
cwtl
repnz
addr16
adc
sbb
jl
stos
adc
es
sub
loope
add
in
sub
cltd
xor
mov
mov
idivl
clc
push
xlat
std
ja
enter
shlb
adc
mov
cld
cmp
add
mov
in
cmp
pop
mov
jl
add
adc
or
lods
sub
sbb
dec
imull
rcr
jae
addb
nop
jns
scas
mov
lds
push
test
popf
sub
std
mov
lahf
or
mov
aam
pop
shrl
hlt
out
mov
mov
mov
jle
cmp
arpl
clc
pusha
push
out
pop
sub
in
pop
inc
dec
mov
scas
imul
pop
mov
dec
xor
dec
xor
fbstp
popf
and
outsl
fadd
roll
cltd
pushw
sti
sbb
std
pusha
nop
repnz
pop
pushw
pop
xor
int3
pop
push
sbb
test
std
insl
rorb
sbb
shlb
sbb
lahf
push
inc
add
mov
xchg
sahf
pop
xor
and
mov
hlt
push
stos
fstpl
adc
lahf
iret
add
ss
adc
lock
mov
test
ss
sub
mov
mov
xchg
sub
mov
mov
fildl
repz
push
adc
and
retw
mov
fisttps
push
insl
mov
into
cmp
mov
mov
push
sub
mov
pusha
mov
adc
xchg
rcll
push
pop
mov
ret
popa
dec
clc
lret
in
mov
mov
sarb
cltd
adc
ja
jl
sub
fwait
mov
inc
or
loope
in
xor
arpl
aam
push
cmp
push
xchg
add
push
lods
push
ret
pop
and
pop
fwait
jae
nop
mov
lods
ret
and
jl
adc
cld
out
dec
xchg
lods
jle
sub
fstpl
lods
xchg
xchg
mov
out
sub
mov
adc
loop
add
mov
int
data16
mov
loop
cmpsl
sbb
lods
mov
dec
jp
rcl
iret
xor
fs
xchg
aas
jno
inc
iret
dec
andb
jns
push
int
cmpsl
push
shrb
ja
imul
pop
test
mulb
push
push
lods
ja
sub
and
das
mov
dec
outsl
arpl
cmp
pop
fsts
xchg
into
mov
cmp
pop
xchg
adc
sahf
test
mov
js
jb
repz
ds
add
mov
jno
fildl
into
jmp
in
pop
pop
inc
cmc
dec
mov
and
jae
scas
in
fists
sub
fnstcw
sbb
ss
lds
pop
lahf
inc
jb
sti
leave
js
add
inc
mov
sub
lods
aas
mov
loope
sub
jecxz
add
mov
daa
lods
jno
lret
cmc
idivl
out
and
mov
jl
jnp,pt
mov
add
xchg
int
pop
sub
cmpsb
inc
xchg
inc
idivb
cs
push
sti
fwait
scas
jle
dec
xlat
aaa
movsl
jg
call
int3
std
sub
or
subl
xchg
sub
cmpsl
add
std
mov
ds
mov
mov
dec
loope
clc
mov
mov
mov
mov
pop
fiaddl
push
rol
pmaddwd
pop
imul
xchg
jbe
push
and
jb
cltd
adc
sub
cmpsl
inc
fs
ja
mov
mov
loope
stc
xor
jge
sbb
dec
mov
and
mov
rcrl
xchg
scas
push
jl
lea
ret
aas
lcall
lds
xchg
ret
ds
ja
std
jo
adc
mov
mov
js
ds
sub
jo
int
in
lods
cmp
cwtl
pop
cmp
ss
outsb
lds
sub
jmp
mov
and
dec
lods
aaa
sub
fs
jp
pushf
fadds
sub
sub
iret
rcl
ds
pop
shrl
or
ljmp
jo
add
pop
cld
push
push
repz
or
sahf
push
enter
cmp
or
aad
cmpsl
push
cmp
lock
jp
das
jnp
mov
test
xor
mov
adc
sub
jo
ret
nop
test
sahf
and
sahf
sbb
cmp
mov
push
jg
loope
mov
and
test
xorl
or
mov
scas
addr16
mov
push
mov
shlb
iret
inc
or
in
scas
mov
jnp
sbb
lea
jl
add
xchg
lea
gs
mov
in
dec
sbb
cmpb
cmp
mov
jl
or
jo
dec
insb
xor
xchg
xchg
lret
sahf
mov
mov
imul
lds
cmc
addr16
sbb
call
jmp
mov
pop
add
sub
pop
shll
inc
inc
lods
in
pop
xchg
ds
sub
push
stos
xchg
lahf
sbb
or
arpl
mov
pop
push
adc
push
adc
movsl
test
fcmovbe
add
adc
pop
ret
shll
in
in
aad
pop
inc
out
shl
int
cli
pop
xor
xorb
addb
lods
mov
pop
ja
ret
and
pushf
in
add
pop
mov
test
sub
dec
dec
pop
inc
pop
ds
xor
xlat
cmp
xchg
pushf
pop
sahf
pop
adc
inc
and
gs
or
scas
iret
test
test
daa
adc
les
daa
je
inc
push
leave
xor
je
ret
ret
outsb
loope
shr
pop
mov
shl
aas
adc
ret
das
push
mov
mov
and
cmpsl
push
mov
xorl
cli
xor
nop
repnz
or
pop
call
out
or
mov
js
mov
sub
fidivs
push
test
in
int
sbb
lcall
sbb
ss
outsl
lcall
int3
jecxz
pop
out
push
sub
divb
cmp
arpl
add
xchg
mov
daa
ret
pop
sbb
pop
or
xor
inc
js
outsl
mov
mov
gs
and
mov
jg
lret
sti
mov
aas
mov
adc
mov
in
push
mov
movsb
dec
in
js
loope
dec
jecxz
filds
popa
xor
pop
jne
mov
cmp
mov
mov
les
sti
mov
mov
push
cmc
sub
or
jbe
jae
add
xor
dec
lret
xor
andb
push
mov
xor
enter
mov
ss
jle
push
test
shl
pop
mov
mov
push
adc
shlb
adc
testl
add
out
adc
sbbb
or
inc
fsubrs
push
push
ljmp
or
mov
popf
int
sbb
imul
inc
jns
and
fstps
jge
and
mov
jb
repnz
cmp
pop
sbb
xlat
push
mov
or
rcrl
add
std
fistpl
fisubs
aad
mov
inc
mov
pop
stos
test
sti
sub
dec
xchg
mov
outsb
flds
imul
jl
je
pop
loop
popa
jg
jns
cli
pusha
xor
data16
rorl
pusha
push
pop
out
mov
inc
jnp
les
push
jno
push
add
leave
gs
dec
outsb
xchg
xchg
idivl
and
xor
mov
fs
cmp
movsb
xor
or
fistl
iret
test
aaa
std
push
push
push
ljmp
in
idivb
or
push
ret
repnz
pop
in
bound
mov
add
ret
addb
mov
sbb
sub
sbb
pop
dec
mov
or
sbb
and
cmp
cs
sub
scas
aad
jb
mov
and
push
push
jnp
scas
xchg
xor
js
ret
ret
dec
cmpsb
or
fiadds
push
sbb
add
movsl
add
addr16
jmp
jp
push
testl
adc
ja
mov
lcall
jle
out
add
addr16
iret
mov
mov
jns
lret
dec
stos
mov
push
das
xchg
aam
cmp
pop
adcb
jl
lods
fildl
mov
add
loop
hlt
adc
rolb
cmp
adc
std
daa
lret
jne
xchg
lods
in
push
jns
cmp
imul
fistpl
bound
ret
adc
pcmpgtw
fistl
cmp
sbb
call
inc
fcomp
sub
out
pop
pushf
push
sbb
addr16
in
testb
sti
push
test
aam
es
adc
sub
test
cmpsl
cmp
js
int3
push
xor
pushl
hlt
sahf
iret
cld
cwtl
mov
jo
mov
les
sbb
or
inc
andb
test
insb
add
cmpb
xor
lock
adc
xor
jo
in
inc
pop
xchg
xchg
dec
mov
cmc
sub
cmp
subb
int3
lcall
mov
test
aaa
and
pop
and
int
mov
data16
shld
add
sub
push
loope
jle
call
sbb
adc
in
cs
jge
jno
dec
pop
xlat
xor
ja
cmp
hlt
int3
sbb
daa
sbb
int
pushf
adcl
xor
jge
push
repnz
mov
fnstcw
dec
or
test
fisttpll
fldcw
scas
mov
inc
popf
cmp
or
out
andl
out
movsb
leave
jg
mov
pop
dec
mov
daa
sarb
jmp
insb
jmp
cmp
scas
sbb
mov
pop
fistpll
in
mov
sbb
inc
test
mov
fists
ja
adc
jmp
add
mov
cli
insl
fisttpl
xor
sbb
mov
cmpb
lea
xorb
xlat
xchg
mov
fnstenv
arpl
cmp
or
push
inc
mov
es
mov
pop
outsb
out
jnp
fdiv
cmp
fs
enter
xor
sarb
mov
and
push
pop
andl
fcomp
fistps
jmp
out
rclb
mov
push
lcall
push
scas
xchg
xchg
mov
mov
rorb
fldl
imul
aad
pop
pop
xchg
xor
leave
test
dec
addl
out
mov
xchg
jne
ja
inc
and
fcomps
pop
xchg
aas
mov
pop
imul
lock
or
jp
or
jne
incl
iret
adc
mov
in
or
clc
in
xchg
test
imul
sahf
push
xor
out
movntq
popa
xchg
or
pop
lret
jmp
cmp
add
lods
insl
push
adc
lcall
lock
shr
jg
xchg
out
shrb
xor
dec
leave
mov
mov
iret
dec
roll
sbb
adc
jg
add
jne
sbb
outsl
ret
shrb
mov
mov
push
mov
and
fidivrl
lahf
rcl
repnz
hlt
sbb
push
fcompl
mov
lods
or
je
dec
pop
sarl
lds
jo
sbb
popa
add
les
xchg
cmp
push
out
bound
add
jge
inc
cli
lea
cmpsl
xchg
cmp
sbb
mov
jbe
mov
test
test
fldl
push
inc
push
test
cmp
ss
ret
sbb
pop
mov
sub
jae
mov
pop
cmp
cmp
xor
into
nop
popa
iret
xchg
xor
arpl
mov
add
cwtl
sbbl
imul
add
mov
movsl
pop
ja
mov
mov
stc
std
pop
xchg
xchg
sbb
pop
add
sbb
pop
dec
mov
addr16
fs
mov
decl
rorb
in
sahf
sarl
movsl
push
pop
mov
pop
pop
les
leave
lret
pop
mov
pusha
inc
xchg
outsl
mov
imul
inc
pop
pop
aaa
test
clc
mov
lret
cmp
int
inc
popa
jae
jmp
mov
ljmp
arpl
pop
push
dec
stc
sub
inc
push
and
enter
jne
xchg
xor
mov
lret
enter
pop
or
mov
or
push
aas
push
mov
lea
hlt
mov
mov
loopne
jge
jle
dec
cmova
orb
cmp
lds
pop
dec
cli
movsb
cmpsl
jl
int
dec
vcvtsd2ss
cmp
das
addr16
enter
lods
lcall
int
es
jecxz
sti
ljmp
sti
int3
pop
lcall
sub
ljmp
push
inc
roll
or
insb
pop
lods
fbld
adc
pop
mov
jg
xor
fldt
inc
mov
out
scas
fwait
mov
rep
add
scas
mov
pop
sbb
mov
cmpsb
stc
std
mov
mov
mov
cs
push
test
mov
pushf
ljmp
add
inc
mov
in
repnz
adc
and
cwtl
jnp
decb
lea
insb
xchg
popf
leave
int
push
mov
int3
mov
repz
or
mov
mov
adc
add
xchg
repz
sarl
movsb
pushf
andl
imul
pop
jmp
cmp
jge
jo
outsb
mov
mov
out
sti
test
push
xchg
in
or
mov
adc
lret
imul
push
stos
fstl
sub
xchg
int3
mov
add
aas
gs
pop
jge
popa
sub
clc
adc
mov
loop
and
or
jecxz
mov
push
outsb
cld
jae
cld
fxch
fstps
mov
lods
fbld
scas
pushf
popf
dec
outsb
lods
mov
mov
fmull
in
pop
push
dec
in
mov
in
pop
xchg
js
out
test
push
xchg
xlat
and
add
push
lods
iret
cmpsb
les
sub
cmp
push
mov
sbbb
out
mov
xchg
pop
jno
and
pushf
mov
popf
dec
jnp
mov
and
pop
aam
rorl
fnsave
stc
sbb
cmp
inc
out
lea
xor
mov
addl
cld
sbb
fwait
sarl
sub
xchg
mov
addr16
lods
xchg
push
adc
xchg
and
add
mov
enter
lret
jmp
xor
lods
or
push
pop
fs
int3
imull
sub
das
add
cmp
lret
shrl
rorl
imulb
ds
hlt
sub
imul
mov
or
cld
mov
add
pop
push
sub
fidivrs
int3
xor
pop
loop
test
lods
mov
sub
cli
scas
sbb
sub
out
in
jb
repnz
daa
test
push
xchg
jns
sbb
das
push
jo
mov
loope
stos
xchg
add
jmp
imul
cwtl
mov
nop
sub
bound
xor
push
adc
sub
or
xchg
pop
add
cmpsb
push
jmp
mov
cmpsl
test
jecxz
push
add
mov
and
in
sbb
scas
xor
jo
jl
or
nop
or
sbb
and
lret
jb
mov
in
inc
lods
dec
push
pop
inc
cwtl
pop
dec
leave
push
push
push
test
mov
popa
ret
test
cmp
hlt
rcl
adc
lret
mov
cmp
push
ljmp
xchg
jg
mov
xchg
insl
add
xor
mov
or
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
test
xchg
jmp
jl
cltd
xor
lea
mov
ja,pt
xchg
mov
fistpl
les
jbe
clc
pop
adc
in
out
xchg
ret
push
stos
lods
addr16
sbb
cs
dec
addl
idivb
fcmovbe
and
sbb
lret
sub
gs
cmp
cwtl
int
aas
dec
sub
shll
sbb
iret
stos
pop
sbb
int3
jo
jo
jb
icebp
and
fildll
xchg
xchg
lret
insb
gs
jnp
pop
sbb
sbb
and
psubsb
in
fimuls
sti
jnp
in
aam
push
test
sbb
xchg
shr
xchg
push
das
jecxz
mov
push
push
xor
stc
add
out
adc
insb
iret
push
dec
ja
repnz
dec
sub
popf
rolb
and
or
xchg
mov
ss
std
mov
push
cmova
inc
aaa
and
int3
out
test
and
cmp
and
data16
cwtl
into
lcall
xchg
addr16
or
ret
mov
inc
xchg
lcall
pop
stos
mov
dec
xchg
ljmp
mov
cmp
popf
cmp
mov
mov
mov
fwait
pop
icebp
les
pop
into
push
out
repnz
dec
xchg
sub
inc
cmp
dec
jnp
mov
stos
cltd
jb
adc
mov
pop
aam
or
jne
dec
js
test
and
pop
fwait
addr16
pushf
insb
call
add
lods
push
push
lea
gs
hlt
or
out
lods
cmpsb
scas
mov
les
cltd
inc
adc
jo
inc
aaa
ret
dec
push
or
jae
or
and
icebp
or
fcoml
push
pop
lds
out
lcall
inc
stos
mov
mov
scas
or
loopne
pop
movsl
or
pop
inc
push
sbb
jge
xlat
insl
es
xor
adc
movb
adc
and
cmc
mov
inc
and
mov
cmp
sbb
pop
mov
ss
push
loope
mov
shll
adc
xchg
cmp
mov
loope
jne
out
icebp
mov
and
inc
test
repnz
or
push
add
mov
popf
ja
sbb
xchg
in
loop
pop
flds
push
pop
push
fdivl
sub
and
insl
adc
movsl
push
in
lea
je
xor
stc
or
pop
data16
jg
jno
sbb
ljmp
push
push
sbb
scas
sub
or
mov
sbb
xchg
and
jg
xchg
lret
pop
adc
insb
out
pop
pop
dec
test
test
mov
mov
pop
mov
in
pop
xchg
sbb
jb
aad
sub
les
lret
gs
es
xchg
icebp
cltd
jbe
pop
inc
mov
jmp
xlat
test
pop
cwtl
dec
mov
sarb
orl
dec
popf
mov
fldenv
mov
shr
pop
mov
sbb
ja
ja
push
jnp
dec
stc
enter
shlb
cmpsl
push
loop
outsl
xchg
jae
popf
xor
fidivs
shll
adc
xchg
cwtl
cmp
sar
xor
xor
push
pop
lods
dec
sahf
stos
pop
lds
xor
dec
add
cmpsb
pop
and
push
push
or
sbb
imull
jb
push
and
mov
aad
pop
sbb
aas
sub
movsb
stos
or
mov
dec
testb
dec
push
pop
imulb
mov
iret
sahf
insl
aam
and
pop
jne
pop
and
or
mov
mov
test
mov
loop
cld
clc
subl
xlat
in
clc
pop
fstpl
pop
add
test
xchg
sub
push
cmp
inc
movsb
incl
or
js
jno
sahf
xchg
pop
into
dec
loopne
test
adc
jecxz
inc
or
inc
xor
sbb
in
jg
lods
add
mov
adc
scas
cli
or
jl
cltd
fs
fistl
lods
adc
mov
jo
inc
loope
lahf
incl
fistpl
push
cli
jnp
into
fpatan
xchg
sub
lret
cmp
inc
mov
xor
push
js
sub
xchg
leave
dec
leave
sbb
in
push
adc
pop
cwtl
sub
sub
and
adc
call
stos
sub
mov
sarb
enter
imul
xchg
xchg
int
push
lret
flds
xchg
ret
cmpb
shlb
cmp
aad
ds
fldl2t
pop
std
mov
cmp
mov
bound
and
sbbl
pop
fs
test
imul
dec
scas
add
out
or
jnp
and
fmull
cli
mov
dec
jp
jns
mov
test
jl
jbe
jbe
push
push
repz
imul
mov
push
cmp
and
inc
or
add
xchg
stos
and
push
loope
xor
cmpsl
movsl
test
add
scas
fadds
ret
mov
fisubs
xchg
mov
inc
test
xchg
dec
push
xchg
lret
jb
popa
jne
jne
push
cmpsl
stos
sbb
lret
cs
cmp
or
push
add
cmpsb
jo
cmp
test
mov
outsl
pusha
sbb
je
lods
sahf
mov
adc
pop
mov
pop
xchg
mov
jb
fimull
popa
jnp
push
stos
and
sbb
pop
mov
adc
xor
mov
xchg
inc
push
in
lods
push
adc
mov
mov
xchg
orb
xor
push
fimull
mov
cmp
arpl
mov
outsl
data16
mov
mov
lret
aad
or
out
sub
fs
rclb
mov
sub
mov
sub
imul
ror
dec
pop
push
mov
dec
std
scas
imul
leave
adc
adc
cmp
mov
fwait
movl
fs
jo
add
xor
insb
sbb
push
mov
stc
movsl
out
push
jno
pop
add
std
mov
xchg
fistl
sbb
lret
outsl
mov
xchg
inc
jmp
movsl
mov
pop
mov
xchg
or
fisttps
mov
outsb
jbe
sbb
pop
imul
into
adc
cs
inc
inc
push
push
and
shr
mov
je
add
xor
daa
ja
adc
scas
sub
out
incl
clc
or
rcrb
cmp
fs
in
enter
or
fimull
mov
dec
call
pusha
scas
adc
dec
ds
cmpsl
xor
pop
shll
pop
xchg
push
cmpsb
xchg
mov
adc
xor
push
int3
scas
out
sbb
cltd
das
cmp
les
lods
mov
pop
cmpb
cmp
sub
xor
sub
jmp
in
dec
outsl
orl
push
inc
lods
mov
loope
cltd
cmp
and
xchg
cmovg
int3
bnd
gs
mov
sbb
dec
movsl
pop
xor
push
shl
jge
and
movsl
cmp
gs
gs
ds
jns
add
and
subl
out
in
push
add
movsl
repz
jp
mov
mulb
jp
sahf
mov
dec
leave
xchg
lret
or
inc
sahf
cmp
pop
and
test
in
adc
cs
push
inc
ss
inc
xchg
mov
dec
xchg
adc
push
pop
inc
roll
fistl
sar
das
mov
fwait
insl
out
jae
push
xor
and
in
xor
scas
jnp
inc
push
fs
add
out
je
data16
subb
cmp
push
adc
loope
rclb
rorb
sub
mov
rcrl
add
scas
mov
xor
push
jno
daa
outsl
push
inc
inc
mov
xchg
jp
adc
ja
imulb
mov
test
je
mov
cmpb
fisubl
negb
jmp
stc
insl
enter
dec
jno
mov
movsb
outsb
cmova
call
mov
iret
push
inc
mov
push
das
gs
and
mov
aad
inc
mov
mov
xchg
inc
sbb
xchg
mov
inc
mov
mov
dec
rcrl
cmpsb
int3
mov
add
mov
in
loop
movsl
scas
imul
enter
int
fdivl
imul
gs
mov
xlat
adc
sbb
addr16
hlt
rcll
dec
adc
outsb
loopne
mov
jl
in
pop
fisubrs
rcll
dec
sub
js
mov
xor
or
jge
mov
lret
pop
jb
loopne
and
jecxz
xchg
mov
or
repnz
lcall
xchg
rcll
jnp
and
movsl
xlat
aam
cwtl
xor
cmp
cmp
leave
pop
out
lock
push
dec
sbb
aad
adc
imul
pop
pop
dec
pop
idivl
xor
adc
dec
adc
pop
aam
adc
int
sub
rorl
add
int
inc
je
int
pop
mov
xchg
movsb
and
jge
test
mov
lcall
int
mov
fwait
nop
aas
add
shll
into
or
adc
add
add
or
int
adc
pop
mov
ret
adc
push
popa
popf
sbb
lcall
divl
xchg
xor
outsb
jo
pop
lahf
gs
dec
inc
pushf
jmp
fs
ret
mov
push
faddl
outsb
xlat
mov
pushf
leave
test
cmp
mov
andl
cltd
ljmp
mov
add
repnz
popf
mov
pop
inc
stc
mov
and
jle
xor
gs
add
lahf
dec
jo
adc
pushf
mov
es
xchg
stc
add
ret
xor
dec
xor
sahf
cmp
sub
loop
cli
pop
inc
jmp
xchg
and
cld
arpl
data16
movsl
add
xor
lcall
xor
out
aad
std
mov
fs
out
cmpb
pop
jns
subb
push
test
jecxz
popa
mov
loopne
movsb
push
lahf
add
xorl
cmp
push
xor
hlt
shrb
sub
dec
inc
lcall
dec
mov
dec
bnd
push
pushf
sbb
and
and
mov
jnp
or
outsl
mov
jo
sub
shll
lea
aad
inc
insl
mov
or
mov
lods
inc
xchg
fistl
push
arpl
aam
les
outsl
stos
xchg
cwtl
aam
pop
leave
adc
sub
jae
data16
pop
clc
out
sub
mov
adc
xorl
je
xlat
popf
jmp
leave
in
insb
fbld
repz
sub
fwait
push
add
sub
xor
punpcklwd
movsb
int3
mov
shlb
mov
mov
pushf
inc
out
mov
mov
adc
in
das
mov
movsb
sbb
pop
rclb
pusha
in
shrl
je
pop
cmp
adc
mov
pop
orb
jmp
and
ret
lcall
fdivrs
fucom
loope
addr16
dec
and
jg
inc
push
bound
in
cwtl
pop
aaa
sub
fsubp
cwtl
test
push
daa
mov
les
lods
pop
xchg
rol
dec
or
icebp
mov
shrb
call
lcall
xlat
test
add
xor
push
pop
mov
sub
dec
sbb
sub
lods
sbb
out
sbb
lret
sbb
add
adc
mov
shl
push
jg
mov
cmpsb
ss
xchg
movsl
push
and
scas
int3
mov
rclb
mov
cmpsb
or
xchg
dec
dec
inc
fiadds
push
xor
rclb
mov
andl
xchg
mov
xor
mov
stc
in
test
pop
xchg
push
cwtl
xchg
and
lret
add
mov
jno
pop
xchg
xchg
jecxz
mov
xchg
push
loope
sbb
mov
js
stc
jo
hlt
pop
dec
cld
xor
mov
mov
jl
stos
mov
test
xor
pop
into
sbb
pop
stos
adc
fptan
lret
inc
mov
mov
scas
adc
xor
pop
cmpsb
cmpsb
or
or
inc
jnp
xor
xor
jg
ret
gs
push
test
test
icebp
xor
cmp
push
aas
ja
lds
std
or
sti
ss
adc
pop
mov
dec
or
inc
clc
shr
mov
mov
dec
lods
pop
mov
lods
loop
sub
cmp
xchg
xchg
mov
dec
xchg
arpl
dec
icebp
add
push
mov
out
cli
mov
bound
sti
ret
xchg
or
je
std
lods
pop
rcll
xchg
jae
jle
dec
pushf
mov
sub
jecxz
pop
sbb
mov
mov
fwait
mov
mov
add
addr16
call
mov
out
push
or
push
in
lcall
sti
ss
loopne
cmp
or
jge
xchg
int
xchg
jl
shll
aas
mov
addr16
push
inc
sahf
push
push
imul
addr16
xchg
repnz
fsts
sahf
sub
ret
ljmp
popf
cmp
scas
sub
push
add
dec
add
xor
lahf
cli
fistl
jb
add
ret
jae
mov
std
xor
dec
test
sub
cmpsl
pop
sub
mov
and
das
xchg
jmp
daa
xlat
std
pop
fstpt
dec
jp
jge
les
xor
je
push
jno
xchg
mov
mov
or
or
in
jle
xchg
cmp
and
test
cmp
fiadds
in
popa
jnp
or
inc
jb
push
out
int3
pop
popa
loope
mov
cli
mov
faddp
notl
call
aas
xchg
add
ret
aam
xorl
adc
push
fs
pop
fwait
mov
test
inc
daa
push
out
jne,pt
rcl
enter
sub
addl
into
aaa
mov
stos
pop
jbe,pn
inc
jecxz
dec
jp
adc
xchg
cmp
outsb
testl
mov
xlat
push
in
adc
mov
fucomp
lahf
add
or
ret
aad
lods
cmp
and
adc
shrl
stos
cmp
into
leave
loop
gs
sub
xchg
roll
jb
mov
dec
inc
and
in
mov
popf
mov
mov
pop
xor
and
and
mov
iret
cli
cwtl
cmp
or
or
xor
and
pop
mov
cmc
or
or
sub
or
sbb
jno
xchg
cmpl
mov
dec
daa
ja
jecxz
sti
and
idivl
dec
push
add
dec
aaa
push
movl
mov
ror
jnp
adc
dec
sub
test
nop
test
imul
sbb
sub
sbb
fistl
dec
sbb
dec
xchg
sti
lds
das
fxch
sbb
push
fdivr
hlt
push
shrb
js
mov
jbe
pop
in
and
popa
xor
lea
gs
inc
sbb
push
test
mov
mov
dec
testb
and
push
mov
daa
shll
pop
and
adcl
lods
mov
pop
mov
fiadds
fsubl
mov
mov
insl
mov
xor
outsb
jg
das
cmpsl
popa
pusha
subl
iret
int
mov
imul
mov
in
stos
aad
xchg
sbb
movsb
je
fldl
fldl
aad
fcompl
push
lret
fsubl
scas
insb
data16
inc
xor
lret
fwait
pop
xchg
lds
pop
out
adc
push
or
out
sti
pusha
test
inc
call
xchg
mov
push
push
js
lods
add
jnp
rclb
jp
rolb
inc
mov
xor
lock
xchg
xor
int
in
inc
addr16
jg
inc
fwait
push
pop
hlt
adc
jmp
out
hlt
pop
mov
or
nop
push
ss
cmp
inc
xorl
dec
in
adc
xor
mov
mov
test
scas
in
icebp
lock
fdivl
loopne
add
jecxz
mov
push
mov
xlat
loopne
or
movsl
push
or
inc
and
pop
jae
popa
fbstp
push
fcomi
jbe
cs
cmp
xchg
inc
imul
in
shll
mov
cmp
mov
popf
xchg
jo
inc
mov
sbb
in
xor
pop
shlb
push
insl
or
out
xchg
inc
xchg
cmp
arpl
dec
adc
xor
fs
fstps
pop
jns
test
repz
ret
adc
loop
or
xor
adc
lds
cmp
or
cmp
cmp
add
sahf
or
pusha
addr16
and
push
ret
cmp
int3
xor
cli
xlat
fstpl
loopne
and
dec
sub
shlb
int
xchg
incb
movsl
jp
xor
arpl
mov
pushf
adc
dec
in
and
jo
cwtl
jmp
push
aas
push
sbbl
xor
adc
push
out
jbe
les
mov
xor
and
aad
aaa
je
lea
mov
imul
ljmp
xor
pop
cltd
jo
popf
int
cltd
fists
cli
mov
repnz
bnd
jl
shll
sub
xchg
out
xchg
adc
lret
xchg
and
rcll
ja
add
and
js
call
mov
int
enter
cmp
pusha
pop
scas
call
and
push
dec
dec
dec
mov
jae
pushf
inc
aas
jbe
adcl
jbe
mov
or
cmp
rep
in
jae
mov
mov
js
mov
adc
sub
pop
data16
lret
out
add
test
jo
sub
xor
cmp
xor
dec
stc
mov
sahf
ret
and
andl
scas
pop
das
mov
setne
jb
mov
daa
push
xchg
or
pop
nop
mov
add
xor
in
in
mov
sbb
inc
xchg
add
sbb
inc
inc
jb
inc
sbb
ds
js
ss
mov
mov
int3
push
aam
mov
pop
fnstsw
push
inc
jg
daa
loope
mov
movsb
add
xchg
inc
jg
xchg
lods
fidivs
push
jmp
fldcw
mov
xor
inc
mov
aam
cmp
xor
mov
aam
movsl
and
fiadds
addr16
and
pop
cmp
dec
push
mov
icebp
dec
cmp
cwtl
stc
lahf
call
mov
cli
sub
aam
adc
adc
jno
ds
jns
shlb
in
rorb
mov
mov
mov
shl
loope
jbe
xor
lock
xor
clc
push
lock
lods
jbe
repnz
cmp
cwtl
clc
inc
ljmp
gs
xchg
cld
popf
in
and
add
jo
shll
add
shlb
je
lods
sub
adc
in
dec
jle
xchg
lret
outsb
adc
sub
mov
sub
divb
xor
clc
xchg
stos
xor
dec
lds
xchg
repnz
push
mov
jp
in
cmp
fnstcw
loopne
mov
aaa
or
inc
xor
clc
xchg
sbbb
out
subl
pop
xchg
mov
test
nop
pop
das
jne
and
or
shr
cmpsl
jb
jbe
aad
or
mov
jp
push
ss
fwait
loope
mov
adc
bts
sti
out
je
push
icebp
sbb
lret
jl
sub
mov
lret
dec
fs
xchg
adc
mov
idivb
sub
adc
mov
in
push
stos
rcrb
inc
cld
sub
repz
xchg
out
outsl
mov
int3
inc
pop
lahf
xchg
je
inc
cmpsb
mov
inc
jno
xchg
pusha
outsl
mov
mov
aad
and
mov
jp
pop
jp
jbe
pop
inc
dec
or
inc
rclb
push
mov
pop
lret
out
lret
cs
pop
sub
sub
dec
popa
das
sub
xchg
jle
cltd
push
sbbl
leave
mov
mov
cld
scas
sub
or
arpl
and
and
jo
adc
dec
stos
mov
out
lret
pop
stos
inc
add
adc
icebp
cmp
decl
jecxz
sahf
test
mov
sbb
cli
push
nop
push
add
movsl
lret
shll
cmp
testl
js
push
fnstenv
adc
mov
rcl
pop
adc
pushf
cmpsb
jne
add
xchg
std
notb
insb
add
sbb
inc
cmp
aad
push
inc
aaa
aam
mov
mov
cltd
sbb
out
popf
push
jnp
cld
leave
stc
and
repz
testb
iret
jecxz
jns
in
ret
loope
push
outsb
test
mov
lahf
sbb
lods
sbb
mov
cld
xchg
jb
sahf
fldcw
or
les
outsl
jne
aad
push
sub
movsl
pop
dec
lret
jp
inc
adc
lahf
cwtl
mov
ffreep
imul
mov
int3
dec
das
inc
jle
js
xor
hlt
insb
bound
cmp
dec
jne
sbb
sbb
add
testb
cmp
repnz
cs
sbb
sub
push
pop
sub
and
enter
cmpsb
cmpsb
int
scas
add
dec
add
out
cli
cmp
jp
sbb
cli
adc
aaa
js
sub
add
mov
and
gs
mov
pop
xorb
push
pop
or
mov
lods
test
push
ds
in
jl
loopne
cwtl
adc
and
mov
xlat
add
jbe
mov
cli
inc
push
sarl
insb
or
loopne
pushl
mov
fs
mov
sub
or
adc
pop
int
xor
loope
jmp
inc
outsb
in
push
or
loop
or
rcr
xchg
jl
fdivrs
aaa
or
into
clc
gs
pop
clc
shlb
sub
xor
sbb
pop
in
pop
jo
mov
sti
movsl
dec
inc
xchg
sti
push
cmc
inc
lods
shrl
cli
mov
arpl
dec
jbe
and
jno
pop
adc
mov
lret
clc
cwtl
cmp
cmp
out
jp
xchg
fstpt
mov
jbe
je
sbb
sub
andb
xchg
cs
push
insl
inc
and
jne
popa
push
in
jmp
mov
sub
lcall
and
push
insb
sbb
inc
enter
or
rcrl
insb
inc
std
imull
push
daa
or
test
inc
fstps
in
test
add
fnsave
out
ljmp
shrb
scas
push
imul
hlt
adc
and
inc
ret
sub
clc
sbb
push
and
ret
adc
xor
aam
idivl
or
jecxz
clc
cmp
inc
mov
sbb
in
movsl
sub
mov
ss
and
pop
jo
cltd
jg
sub
and
addl
std
inc
jle
cmp
jnp
cwtl
pop
call
aam
nop
imul
scas
mov
pushf
add
cmp
repz
fcomi
sub
xlat
gs
mov
nop
js
xchg
dec
sub
imul
pop
outsl
dec
test
cmp
jecxz
add
mov
inc
push
push
pop
cmp
stos
pop
xor
cmp
cmpsb
sub
je
and
pop
pusha
push
pushf
mov
or
inc
adc
mov
out
pop
mov
mov
mov
cmp
push
mov
xor
or
ds
loope
pop
jle
adc
add
pusha
out
test
insl
push
loopne
mov
pop
nop
cli
dec
dec
xchg
imul
shll
mov
xchg
clc
call
mov
pushf
pusha
std
adc
sub
orl
or
mov
movsl
push
addr16
mov
stos
les
pop
mov
add
popf
sub
aas
div
mov
rcrl
sti
inc
lods
jbe
jb
test
rcrb
and
aam
lcall
stos
cmp
ja
scas
ja
sub
imul
data16
ss
cmp
mov
in
pop
mov
mov
xorl
stos
adc
jg
movsl
hlt
and
inc
in
std
mov
nop
cltd
jle
add
and
mov
in
push
push
movlps
out
push
stos
pop
stc
push
popf
sbb
and
loop
and
addr16
fdivrl
xchg
cli
pushf
stos
inc
and
dec
and
movsl
aad
in
dec
rep
push
aad
and
mov
pop
mov
hlt
lods
nop
push
xchg
sub
mov
push
push
test
pop
sub
stc
insl
xor
lret
sbb
mov
dec
xlat
dec
and
sub
xchg
pop
ljmp
cmpsl
add
loopne
inc
outsb
jno
mov
sahf
int
and
or
mov
xor
xor
ja
stc
push
dec
jmp
jne
adc
inc
out
stc
fnsave
aas
dec
pop
call
cmc
jnp
and
jp
and
fidivs
movsl
pusha
xchg
adc
test
mov
push
fnstenv
repnz
xlat
inc
xchg
loope,pt
mov
movsl
popl
jl
or
ja
jo
dec
leave
dec
insb
stc
mov
subl
sub
xchg
pop
loope
filds
addr16
xchg
out
int3
loopne
ljmp
push
stos
nop
out
pop
ds
repz
and
jae
xchg
loope
loope
idivb
lcall
scas
into
nop
insl
push
pop
cli
fldt
ret
and
jo
ret
adc
cs
mov
rorl
xlat
ljmp
mov
adc
push
divb
xlat
pushf
clc
jnp
incl
adc
mov
xchg
dec
rcll
shrl
xchg
fisubs
mov
lret
test
rcpps
cmp
inc
mov
push
xor
and
inc
leave
mov
add
xor
rolb
or
es
sahf
enter
push
loopne
hlt
not
push
jg,pn
mov
dec
repz
lods
push
push
pop
int3
jne
mov
sahf
pop
mov
jnp
adc
pop
or
fnstcw
xchg
out
xor
cmp
shlb
loope
dec
xor
clc
and
popf
mov
lret
out
cmpsl
fs
iret
mov
xchg
inc
imul
mov
aad
outsb
cs
push
jno
adc
fsubl
jle
dec
or
jl
test
fisttps
std
test
jle
test
addr16
adc
mov
ror
fidivs
jl
pop
cmp
sbb
mov
adc
icebp
aas
push
rcrl
inc
aam
in
mov
xchg
jp
inc
jl
cwtl
jne
jp
jg
or
iret
loop
pop
cmpsb
lea
add
push
cmp
jae
jg
sbb
and
jns
sbb
insb
into
arpl
pop
cmpsb
xor
es
xchg
test
jl
pop
pop
lock
data16
cli
cli
jo
fstl
push
ss
jecxz
movsb
imul
cmpsb
hlt
xorb
std
ljmp
sub
cmp
mov
lods
or
jo
imul
rolb
and
scas
add
lcall
mov
add
in
mov
stos
aaa
and
sub
icebp
int
pusha
aam
dec
adc
mov
jno
fs
xchg
icebp
inc
cmc
push
add
jae
or
repz
sarl
adc
test
mov
movsl
lret
mov
call
xchg
popf
scas
call
jnp
mov
dec
xchg
imul
out
mov
leave
inc
enter
cmc
lcall
jg
fstpl
jne
push
fistpll
leave
loop
sbbl
outsl
movl
popa
jmp
xlat
push
xlat
inc
mov
xor
imul
sub
mov
es
pop
imul
jb
mov
shlb
lcall
push
sahf
inc
test
in
jo
into
outsl
lahf
sbb
subb
pop
xchg
dec
lds
sub
xor
call
mov
fs
pusha
xor
inc
jl
sbb
pop
mov
pop
cltd
lods
inc
aas
out
sub
jne
jle
fildl
cmp
dec
cmpsb
sbb
call
out
movsl
insl
call
add
and
stos
jge
add
jae
outsl
inc
inc
ret
sbb
lcall
mov
cmp
pop
mov
and
rorb
xchg
sbbb
cmpsl
xor
pop
pop
xchg
mov
jne
inc
iret
adc
cmpsb
cmp
dec
shl
dec
movsl
add
repz
rclb
pop
adc
js
das
xchg
fwait
pop
loope
xor
pop
adc
xor
filds
mov
outsb
out
xor
jno
mov
shl
mov
cmp
test
fsubl
adc
sbb
fdivs
imul
cmpb
fbstp
jno
fldenv
iret
repnz
jp
decl
push
insl
movsb
insl
in
xchg
pop
out
lods
pop
mov
cmp
lcall
insb
movsl
inc
das
fstl
rcl
dec
sub
mov
xor
push
cld
add
arpl
pop
mov
lods
aas
inc
push
cmp
mov
lods
or
jg
adc
jno
mov
fsubrl
mov
cs
ret
std
inc
ret
push
popf
add
xor
aad
mov
add
pop
into
mov
dec
sub
pop
into
adc
pop
push
cwtl
and
adc
sub
stos
test
out
or
std
ret
mov
mov
push
in
in
aad
scas
icebp
xorb
fsts
fdiv
mov
pop
cs
rcrl
pop
clc
bound
gs
dec
imul
mov
rcrl
mov
add
cmp
sarb
loop
dec
int
xchg
adc
push
nop
ss
pop
js
mov
inc
push
mov
out
scas
adc
push
push
test
cmpsl
sbb
and
lods
sub
mov
xchg
clc
leave
rclb
xchg
dec
pavgb
mov
xchg
ja
mov
push
mov
sub
in
push
cmp
add
mov
cld
ficoms
adc
in
jnp
outsl
cs
idiv
pop
lret
or
sub
jg
scas
adc
inc
decl
and
adc
repz
cmpsb
cld
sti
into
stos
bound
jne
xchg
les
mov
bound
negl
mull
in
fdivl
stos
gs
xchg
js
scas
add
orl
and
mov
sbb
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
sub
int
jl
pop
jl
aad
pop
imul
sti
out
xorl
jb
scas
rcrb
push
sbb
push
xor
xlat
adc
jg
fidivs
lods
push
dec
sbb
popf
inc
repnz
mov
fwait
mov
outsb
push
cmpps
fnstsw
ret
int3
pop
or
subb
scas
ljmp
aad
mov
pop
add
loopne
roll
inc
push
mov
rorl
ss
xchg
add
mov
push
jecxz
cmpsl
fstpl
adc
std
imul
push
fs
dec
pop
fidivrs
fcmovu
jae
jb
push
sar
and
out
outsb
lods
jno
sub
sbb
sub
pop
iret
adc
fdivs
and
adc
add
pop
mov
xor
jns
cmpsb
push
and
inc
icebp
mov
clc
in
imul
push
inc
mov
shl
repz
movsb
and
cmp
sbb
xor
stos
mov
aam
or
mov
shlb
sbb
test
rcll
pop
stos
jno
outsl
jne
push
movsb
inc
cmp
addr16
fsubs
xchg
mov
xchg
fisttps
inc
push
call
push
rorb
sbb
fcomp
push
and
ljmp
loop
jb
jne
stc
daa
xor
js
pop
inc
lea
ds
scas
ss
lret
je
subl
cld
jns
jnp
test
inc
xlat
jl
dec
adcl
in
pop
xor
push
pop
ljmp
sub
shl
lcall
or
cmp
mov
mov
nop
and
int3
cmp
adc
ret
ret
inc
dec
mov
sub
inc
dec
lods
pop
sbb
ds
daa
xor
mov
pop
jl
jns
adc
mov
dec
or
push
jmp
sub
jbe
popa
mov
lea
loopne
movsl
cmovne
in
scas
dec
and
inc
addl
xor
sbb
xchg
test
push
daa
fmulp
mov
lods
adc
cmp
xor
cmpb
loop
pop
ljmp
hlt
ret
sbb
gs
popa
cmpsb
mov
mov
xor
xlat
out
push
iret
pop
leave
icebp
es
adc
mov
or
jns
or
sbb
inc
pop
daa
pop
or
outsl
test
aas
push
and
cltd
mov
roll
cmp
lods
call
aas
rclb
cld
xchg
mov
or
bound
pop
cs
pop
adc
rcrb
xlat
bound
outsb
out
popa
pushf
ret
imul
add
jbe
loope
mov
pop
inc
out
enter
aad
rcrb
mov
jae
iret
jecxz
sub
xchg
addr16
mov
push
push
stos
mov
ljmp
xor
enter
adcl
push
lods
jb
shl
adc
popa
or
add
mov
lods
scas
stos
rcrb
movsb
cmp
jl
dec
jne
mov
mov
adc
jo
cmpb
add
sbb
icebp
pusha
cmp
lea
or
psllq
push
out
out
outsb
mov
xchg
inc
repnz
inc
xor
imulb
sarb
xchg
mov
testl
scas
xchg
sti
or
jae
xor
sub
orb
xlat
int
pushf
in
cs
test
adc
mov
dec
int3
xor
nop
adc
pushf
adcl
pusha
inc
or
lahf
and
sub
fildll
sarl
out
out
out
mov
jnp
rcl
call
pop
mov
sub
cmp
cmp
mov
xchg
aaa
or
invd
insb
xlat
les
mov
jg
das
aam
cmp
adc
sahf
and
jb
pop
cmc
dec
aam
jp
je
insl
ret
add
jae
add
mov
push
adc
cli
adc
imul
ficoml
sahf
cs
insb
dec
pusha
ja
pop
ja
mov
dec
dec
xchg
loope
or
pop
ljmp
js
pop
mov
jb
in
test
jp
push
loope
xor
std
adc
mov
add
cmpb
out
add
lods
lds
ss
push
in
push
mov
pop
cmp
sbb
mov
cmpsb
rorb
fimull
push
dec
mov
mov
mov
incb
xor
jle
scas
loope
imul
stos
sub
neg
cwtl
add
pop
lock
mov
fs
loope
sti
sub
jbe
mov
mov
mov
add
shlb
lahf
cmc
adc
and
sub
sub
inc
add
dec
in
cld
clc
loopne
daa
sahf
cs
idivl
loope
sbb
sub
push
stc
mov
clc
push
dec
out
and
pop
push
push
cs
and
xor
inc
sbb
sbb
xorl
xor
xchg
mov
fimull
cld
mov
inc
fstl
int3
adc
sbb
cmpsb
out
or
lcall
jnp
call
push
ds
cwtl
iret
in
cmp
lcall
adc
push
jmp
dec
adc
and
inc
adc
arpl
fnstsw
ret
mov
xor
xor
jns
stc
popf
cwtl
aas
mov
mov
add
dec
orb
popl
rcrl
inc
add
mov
adc
xor
or
test
mov
push
test
lock
sarb
repnz
lock
fsubs
aad
jge
popf
loopne
inc
in
jne
xchg
pushf
iret
and
sub
mov
push
push
cltd
rcrb
rorb
cmp
loop
int3
out
mov
imull
sahf
aas
test
ss
lret
stos
bound
outsl
mov
imul
adc
mov
jnp
das
cmp
mov
xor
jne
sbb
scas
jmp
ljmp
aas
dec
mov
js
movsl
outsb
mov
fcmovbe
jl
sbb
movsl
dec
mov
fisubl
ret
cld
sbb
scas
adc
sbb
add
fistpll
add
shrb
leave
sub
xor
lcall
push
xor
ja
mov
mov
fstl
or
cli
dec
cmp
lahf
mov
movl
orl
xchg
inc
nop
outsb
aam
cmpb
cmpsl
call
insb
adc
xor
insb
ficomps
inc
lret
push
cmp
dec
dec
sbb
cmp
gs
and
fcomps
aas
cmp
push
adc
imul
pop
jge
adc
push
sub
or
or
pop
rol
not
push
fnstenv
xchg
loop
lahf
cmp
push
push
and
mov
xchg
xor
lods
ds
aas
inc
fidivl
xchg
sbb
xchg
sub
dec
icebp
xor
and
xor
fdecstp
ljmp
aam
inc
fwait
sarb
xchg
repnz
bound
cltd
inc
sub
leave
imul
cmpsl
or
or
fcompl
pushf
jne
jnp
repnz
cmp
dec
lock
adcl
and
xor
popf
insb
push
out
not
insb
aaa
sub
iret
mov
jnp
cltd
int3
mov
cmpsb
std
scas
adc
scas
or
data16
push
lods
jne
imul
mov
je
rcrb
add
lea
add
add
pop
andl
jp
popa
add
sub
inc
inc
dec
inc
aam
cmpl
mov
out
ja
jae
push
into
call
cli
pop
outsw
es
push
mov
jns
mov
and
cmpsl
loope
mov
fstpt
mov
js
add
add
enter
movsl
aaa
add
xor
addr16
push
flds
mov
repz
shlb
pushf
push
sub
lds
and
and
jne
popf
jl
mov
iret
dec
dec
jbe
jle
test
imul
stc
aad
aaa
lods
xor
and
xchg
out
sub
inc
push
jae
mov
push
sbb
data16
push
pusha
push
sub
inc
adc
xor
dec
jb
adc
sub
mov
mov
dec
mov
xor
jle
flds
mov
pop
loope
cld
lea
pop
insb
faddl
cld
out
jne
mov
into
sub
ljmp
jl
repz
inc
lea
dec
add
mov
inc
inc
loop
movsl
mov
imul
pushf
mov
lret
pop
mov
popa
add
push
mov
cltd
ss
dec
test
inc
mov
mov
outsl
pop
sbb
push
das
mov
adc
mov
xchg
pop
pop
adc
stc
imul
fnstsw
jo
mov
xor
test
jo
xlat
push
subl
fdivrl
and
ljmp
pop
mov
jne
xor
adc
ret
jecxz
sbb
mov
xchg
mov
gs
or
in
pop
in
lret
xor
sbb
dec
pop
test
scas
ljmp
jae
mov
pusha
popf
cmp
in
pop
lods
jecxz
scas
aad
jnp
cmp
dec
adc
mov
movsb
leave
mov
daa
insb
and
fcompl
mov
pop
mov
aaa
xchg
push
into
fsubs
mov
ret
pop
lret
jbe
sub
adc
jns
pop
add
push
cs
push
or
movb
loop
jns
push
mov
sub
xor
popa
xchg
cltd
mov
or
movsl
cmp
jmp
cmpsb
dec
rolb
lret
int3
fdivr
lds
test
lods
mulps
adc
int3
sbb
lea
or
sbb
push
scas
mov
dec
add
fwait
sbb
mov
adc
jp
int3
outsl
adc
incb
lcall
pusha
sub
mov
dec
xor
and
hlt
ficomps
shlb
call
daa
mov
inc
xor
or
stos
stos
pop
mov
and
xor
pop
xchg
cli
sub
jp
push
mov
and
dec
sub
mov
fwait
sbb
ja
xor
loope
or
and
cmp
push
pop
adc
mov
xchg
push
icebp
fsts
sbb
sbb
stos
repz
les
outsl
or
stos
xchg
scas
push
mov
loop
and
sub
pushf
fildll
movsb
push
popa
test
stos
push
push
fwait
scas
push
mov
jge
lock
js
dec
iret
xor
xor
enter
sti
sbb
enter
inc
sbb
adc
jae
iret
adcl
mov
or
inc
scas
popa
xchg
xchg
sbb
and
xchg
lret
jecxz
or
sub
das
nop
fmul
pusha
dec
dec
pop
jb
ficompl
sbb
push
add
dec
or
mov
sub
jbe
pop
or
jnp
in
call
bound
sbb
inc
cmp
sub
mov
jae
pop
les
sub
and
in
inc
and
jecxz
mov
pop
out
ret
mov
rolb
in
xchg
pop
imul
mov
aaa
fidivs
enter
jg
arpl
mov
fucomp
aam
mov
aas
shlb
or
jge
mov
cmc
mov
jle
insb
fcomps
push
mov
adc
xchg
out
fwait
stc
xchg
adc
pop
mov
pop
mov
sbb
addr16
js
jecxz
jo
inc
jae
arpl
test
icebp
or
adc
mov
das
dec
pop
xchg
into
je
sub
push
test
hlt
iret
cmp
sub
pop
mov
mov
xor
nop
jge
mov
and
in
or
movsl
push
dec
loop
cmpsl
inc
into
cld
xchg
dec
les
cltd
mov
mov
loop
adc
and
dec
dec
push
and
jno
push
orl
in
jae
mov
push
pop
mov
outsl
cs
clc
imul
jb
or
sub
lods
es
loope
cmp
js
mov
add
es
mov
dec
jnp
nop
inc
mov
or
ss
pop
jne
xor
iret
mov
pop
mov
stos
in
iret
ds
es
hlt
push
nop
lcall
mov
jo
mov
jmp
push
mov
xchg
lcall
lea
nop
mov
int3
sti
xor
lds
cmp
imul
xchg
pop
push
mov
aam
push
es
repnz
inc
cltd
and
push
mov
fldl
push
and
and
lcall
and
jb
rolb
jge
xchg
into
gs
arpl
push
and
jecxz
mov
adc
out
fcomps
push
jg
pop
aaa
rorb
or
hlt
dec
aam
mov
sub
or
lahf
into
ret
add
mov
xor
stos
jae
dec
push
jmp
pop
fdivs
cmp
or
pop
xor
xor
fwait
jp
push
loope
mov
sarb
mov
call
push
imul
sub
fidivs
inc
pop
in
fs
les
out
fcmovnb
sbb
in
mov
test
arpl
bound
jl,pn
movsl
inc
mov
mov
aas
ret
inc
mov
sbb
mov
dec
loopne
cmpsb
sbb
test
aaa
test
mov
jb
aas
ret
xchg
jge
lock
movsl
push
inc
je
mov
inc
push
mov
outsb
sbb
ret
ret
mov
and
out
orb
divb
dec
lea
outsl
outsb
or
fistpl
fildll
push
jmp
push
xchg
push
dec
mov
fadds
lcall
data16
ljmp
add
xchg
sbb
add
jnp
push
push
stos
stos
mov
and
add
xchg
inc
inc
fdivrs
dec
leave
or
test
je
sub
fsin
out
insl
sbb
hlt
sub
or
loop
mov
data16
mov
rorl
loop
sahf
lcall
push
xor
je
or
mov
push
ret
arpl
mov
shll
into
sbb
sub
std
popf
adc
mov
test
lds
rolb
adc
inc
and
insl
sahf
mov
out
insb
out
js
aad
pusha
mov
mov
test
push
mov
jo
aad
push
std
xchg
pop
sub
sbb
imul
jb
or
data16
in
pop
push
cmpsb
mov
icebp
and
xchg
int
dec
insl
sub
rorb
jne
sbb
jo
xchg
sahf
cmp
xor
push
out
movb
push
es
aad
jg
andb
pop
xchg
adcb
and
xor
mov
imul
xchg
xchg
scas
push
xchg
adc
aad
movsb
std
pop
inc
jmp
mov
push
sub
pusha
lcall
xor
push
lea
mov
inc
test
fstpt
sub
sbb
push
xchg
mov
outsb
sub
das
pop
mov
mov
in
shlb
outsl
iret
adc
mov
cmp
and
or
rorl
cmp
fildll
in
sub
push
and
pusha
pop
inc
xchg
loopne
inc
iret
loop
inc
sbb
pop
mov
rcll
cmpb
and
inc
fdivrl
mov
adc
sub
push
and
push
aam
cmp
loopne
stos
stc
xor
mov
xchg
js
adc
sub
lret
fimuls
mov
adc
mov
es
subl
dec
sbb
sub
mov
ljmp
xchg
clc
iret
adc
outsl
mov
and
xchg
inc
sub
fcomps
div
sbb
adc
cmp
loope
inc
xor
subb
pusha
pop
ror
scas
push
cmp
les
inc
or
push
out
cmp
faddl
jp
ja
or
bound
xchg
pop
jge
or
iret
mov
adc
inc
enter
iret
insl
add
bswap
std
aam
aam
push
test
pop
shll
push
pop
movsb
mov
pushf
or
clc
or
xor
cmp
inc
and
push
and
pusha
lods
dec
shll
sti
xchg
fdivs
jge
std
out
dec
push
stc
frstor
es
inc
or
pop
out
imul
imul
cli
roll
inc
sub
cmp
xor
cmpsl
out
adc
sub
inc
jle
jb
and
std
cs
sbb
jne
or
adc
cmc
cltd
inc
sub
inc
mov
es
jns
sbb
in
fldenv
mov
pop
inc
fldlg2
test
sahf
test
dec
sub
sarb
leave
int
pusha
mov
sbb
push
or
int
pusha
ret
loope
xor
inc
adc
jne
add
popa
mov
sub
out
xor
dec
push
lret
ja
cmp
xor
sbb
das
lds
inc
add
lods
dec
push
xor
or
xor
test
push
cmp
sub
pop
mov
into
scas
mov
adc
xor
scas
sahf
call
arpl
xchg
mov
sbb
dec
push
jmp
pushf
repz
mov
movl
xchg
xchg
lret
xchg
es
pop
push
sub
sub
jl
not
fimuls
insl
mov
sti
cs
lahf
out
jmp
add
cli
insl
je
ja
lods
fcmovbe
and
repnz
jg
jnp
mov
aad
dec
jns
inc
in
aaa
pushf
hlt
movsb
popf
or
rcr
cwtl
dec
sbb
aam
pop
inc
and
out
jnp
ret
inc
pop
pop
dec
mov
gs
movsl
lods
xorl
in
cmp
or
and
call
test
scas
push
sub
mov
or
lret
ret
in
movsl
xor
cwtl
call
and
jl
xor
xchg
dec
mov
sti
xor
xlat
adc
sub
mov
inc
repz
call
mov
pusha
xchg
pop
sbb
enter
leave
push
pop
aam
mov
push
notl
pop
inc
faddp
fs
or
add
xor
fidivrs
lds
daa
fstp
lahf
lahf
mov
lods
add
sbb
mov
divb
dec
add
pop
mov
addr16
fldenv
pop
xor
pop
in
sbb
daa
aad
or
dec
dec
ljmp
in
fcoms
mov
mov
enter
rorb
loope
dec
xlat
sbb
je
cmp
lock
xor
incb
ror
and
mov
mov
ret
mov
outsb
test
sbb
jae
loop
sarl
cmp
test
cmp
rorl
or
pop
fdivr
sbb
pop
mov
decb
test
or
or
dec
dec
fwait
pusha
push
jmp
test
negb
les
fsubrl
popa
mov
unpckhps
jb
jo
rcrl
lods
inc
dec
out
and
cmpsb
ja
jmp
xorl
mov
ds
or
pop
pop
popa
mov
sbb
fimuls
push
fisttpll
pop
push
xchg
cmp
dec
adc
ror
ljmp
test
out
pop
push
fisubs
pop
adcb
add
and
push
mov
sti
icebp
daa
out
push
jmp
loope
mov
add
fcmovne
into
mov
cld
cmc
cs
pextrw
inc
shll
mov
xchg
push
jp
cmc
shll
adc
pop
ss
push
adc
mov
ret
mov
mov
out
cltd
push
pop
xchg
sub
inc
dec
inc
jne
jns
mov
mov
lods
movsb
jns
adc
testl
jnp
cld
sub
and
sarb
and
out
xor
fidivrs
aas
fsubrl
scas
adc
cli
inc
sbb
push
push
adc
dec
repz
into
mov
xchg
daa
push
sub
outsl
inc
hlt
inc
and
pop
call
ljmp
int3
mov
inc
pushf
pop
pop
pop
mov
outsl
lock
aad
pushf
jo
in
inc
jne
iret
xchg
and
lahf
test
mov
xchg
test
inc
stos
mov
lea
xchg
push
sub
mov
cli
bswap
dec
xor
sbb
sbb
adc
inc
sti
std
xchg
and
jle
cmp
clc
jae
dec
insl
xorb
mov
ds
jbe
inc
test
sbb
pop
cwtl
pop
jge
pop
js
pop
int3
faddp
mov
mov
inc
xlat
push
fcomip
addl
or
mov
stos
ret
cmp
sbb
jb
in
mov
mov
dec
pop
push
aaa
sbb
xchg
push
sahf
mov
js
or
ret
in
dec
sbb
popa
data16
and
mov
mov
gs
bound
push
das
adcl
cmpsl
es
ja
rcrl
ljmp
or
stos
inc
mov
cli
out
dec
dec
fdivrs
addb
outsl
mov
sbb
pop
bound
pop
enter
add
dec
test
mov
clc
inc
mov
dec
push
pop
xor
out
adc
fiadds
push
or
shrb
jg
out
jg
xlat
movsb
push
stc
ficoms
xchg
or
lods
xchg
movmskps
cmpl
fiadds
sarb
sbb
loopne
das
mov
xchg
mov
mov
fmulp
sbb
rcrl
pop
pop
popa
sub
mov
mov
rclb
into
mov
fldcw
and
dec
shrb
mov
jmp
pop
icebp
add
adc
xor
mov
aas
cs
dec
fwait
pop
loopne
mov
xor
ljmp
lret
add
cmp
xor
sub
lret
fucomi
jecxz
aas
jns
xchg
dec
jb
clc
inc
push
pop
sub
mov
sahf
enter
std
flds
popa
stos
xchg
mov
inc
mov
or
pop
jno
popf
daa
add
fdivl
pop
loopne
jge
mov
add
pop
cmp
test
out
fildl
sbb
sbb
jns
xchg
cmp
push
imul
inc
mov
and
inc
dec
jne
xchg
lods
addb
mov
sbb
ljmp
cmc
cmp
sub
daa
scas
lods
add
or
sahf
incb
aam
bound
xchg
fidivs
and
dec
fistpl
fwait
xor
mov
psubd
lret
push
fistps
mov
mov
iret
lea
orb
dec
push
or
loop
bound
pushf
mov
xchg
or
leave
imul
gs
mov
jmp
cmc
inc
cli
dec
cmpsb
push
scas
sub
mov
addb
test
enter
xchg
call
clc
mov
mov
ret
ja
pop
test
jmp
pushf
mov
sbb
outsb
xchg
push
push
push
into
push
jo
or
add
das
fstl
mov
aam
repz
subl
jg
ljmp
out
pop
pop
and
cwtl
xor
cs
or
out
jae
fbstp
adc
idivb
outsb
adc
jb
iret
aaa
sahf
jo
icebp
cmp
pop
bnd
movsb
add
rcll
sbb
add
adc
sbb
je
xor
es
test
pushf
movsb
sub
rorb
aam
mov
adc
je
inc
loopne
div
push
xchg
xchg
mov
inc
mov
mov
push
mov
insb
nop
mov
jno
popa
clc
ja
mov
and
push
inc
mov
add
scas
push
and
mov
aam
and
inc
fcomps
inc
aad
xchg
mov
push
sub
mov
addl
movsl
insb
pop
mov
fs
sbb
cmp
gs
pop
mov
js
mov
xchg
cli
xor
into
test
jmp
mov
fsubs
adcl
dec
loope
outsl
test
frstor
insb
add
cmp
mov
into
in
iret
mov
fsts
rcl
movsb
scas
sarb
stc
pusha
add
int
jle
sti
pop
cmp
mov
rol
mov
and
sbb
xchg
icebp
push
loopne
sahf
in
cwtl
arpl
sub
ss
ljmp
push
fsubs
sarb
push
fisttps
aaa
pop
pushf
pop
pop
push
adc
dec
cmp
mov
sbb
in
push
push
aam
dec
sub
lods
aad
aam
sbb
inc
in
inc
outsl
imul
push
addr16
mov
in
jmp
sarl
daa
xor
xchg
jmp
ja
dec
loopne
cld
iret
mov
or
mov
inc
stc
lcall
cwtl
jl
test
add
out
les
xchg
add
fsubs
jb
ret
imul
pop
loop
sti
sahf
inc
addr16
pusha
xor
inc
jecxz
out
mov
mov
call
mov
add
jb
imul
mov
addr16
scas
cmp
aaa
or
bound
xchg
push
out
rcrb
xchg
mov
adc
jmp
idivl
out
les
cmp
ret
mov
ja
sahf
xchg
call
aad
fcomip
ds
jmp
pop
mov
loope
dec
mov
dec
imull
fadd
sbb
mov
arpl
xchg
mov
mov
mov
leave
aaa
jmp
mov
cltd
cmp
sarl
notl
das
leave
test
or
jno
popl
sbb
ret
aad
cltd
xchg
mov
push
sbb
shlb
pusha
imul
lock
mov
sbb
mov
out
jmp
jmp
push
sbb
repz
add
push
lcall
dec
add
les
push
mov
sub
and
sub
sbb
mov
andb
and
cmovnp
fwait
movsb
push
add
push
xchg
test
push
lods
mov
mov
mov
lock
lock
int3
in
lock
andb
nop
xchg
fimull
xchg
pop
and
test
cmpsb
jo
push
xchg
push
loopne
or
imul
or
in
int
cwtl
sbb
in
lods
jne
arpl
ficomps
dec
insb
mov
mov
ljmp
add
cmpsb
sbb
push
xchg
or
pop
dec
clc
sub
add
inc
mov
and
cmp
sbb
repnz
outsb
push
dec
adc
mov
in
push
jp
adc
int3
cmp
sbb
xchg
rcrb
scas
jecxz
jno
lock
loope
daa
in
cmp
push
mov
or
or
in
mov
sub
or
xchg
pusha
and
xor
and
fisttpll
xchg
cmp
shlb
inc
add
pushf
xchg
jno
movsb
dec
mov
cmpsl
lods
jae
lods
out
or
xor
sub
adc
xor
push
stc
sbb
sbb
or
pushf
inc
ds
or
fistpl
mov
xor
and
out
lds
sub
out
ljmp
pop
into
jmp
rorb
sub
mov
and
sub
aas
mov
adc
xchg
imul
lods
int3
mov
negb
mov
push
mov
mov
std
sub
fimuls
mov
mov
adc
sub
scas
adc
push
inc
lods
les
inc
cmc
stos
xor
sti
andb
xorb
mov
insl
dec
arpl
es
push
call
iret
daa
std
cmp
imul
icebp
and
enter
xor
cmp
mov
test
outsb
inc
sub
push
add
and
jne
mov
popf
test
jmp
fisubs
pop
test
movsl
faddp
outsl
lret
call
ror
sub
out
jae
sti
test
inc
shrl
xchg
push
sub
es
inc
iret
stos
lds
aam
mov
sbb
lods
sub
mov
pop
push
xor
mov
mov
fnstsw
lods
ja
cmc
add
dec
push
or
out
imul
and
cmpl
int
andb
jbe
hlt
sahf
in
pop
and
sar
and
sub
test
aaa
cmc
in
es
into
stos
jp
mov
mov
lock
mov
mov
loope
loope
xchg
mov
test
popa
lret
dec
jg
mov
push
std
enter
fnsave
movsl
mov
pop
enter
movsl
and
cmp
jnp
in
out
inc
xor
popf
push
lret
clc
repnz
push
pop
in
sub
adc
mov
jp,pn
sbb
or
mov
mov
sub
sar
rcrb
jno
repnz
out
dec
imul
stos
push
pushf
enter
pop
ud0
pop
sub
nop
and
or
or
and
lock
in
cmpsb
dec
jl
sbb
push
mov
cmp
flds
out
xlat
xor
jno
imul
xor
and
cmp
ret
scas
fistl
mov
or
cli
inc
test
pop
scas
fstl
xor
mov
gs
push
fiadds
dec
or
insl
mov
aaa
jbe
xor
push
xchg
movsb
xchg
data16
and
cs
mov
in
dec
out
popa
stos
lds
sub
dec
push
mov
int3
sub
sbb
repz
shlb
and
dec
int
clc
loopne
arpl
sahf
add
xchg
or
jae
data16
inc
xchg
or
inc
lock
pop
insl
leave
push
sub
daa
and
inc
addr16
add
cmp
pop
push
cmp
dec
shll
pop
add
mov
je
lods
xchg
pop
sbb
sub
jmp
enter
ret
ds
push
dec
mov
shll
cmp
mov
or
das
mov
test
out
out
or
sar
insl
mov
sarb
sahf
lcall
jb
stos
push
xlat
jae
pushf
leave
imul
outsl
scas
daa
jns
mov
pop
inc
xchg
mov
mov
daa
pop
outsb
inc
pop
xchg
mov
arpl
sar
loope
inc
xor
xchg
loopne
popf
cmp
and
cld
add
cld
cmc
xchg
ljmp
pusha
mov
xor
mov
mov
fsubrp
adc
out
adc
stc
fimull
inc
lock
aas
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
int3
int3
jo
dec
test
jl
out
pop
inc
xor
leave
aad
pop
pop
push
lret
inc
stos
add
dec
enter
cmp
jle
leave
jb
sarl
jbe
jb
mov
dec
int3
test
cmc
jb
dec
dec
imul
fcoml
dec
repz
popf
cmc
xchg
jge
dec
clc
xor
inc
mov
jge
sub
test
cmp
xor
add
push
jae
or
pop
jbe
xchg
aad
pusha
cli
xchg
add
push
jns
shll
imulb
and
pop
outsl
stos
push
inc
fldt
gs
test
xchg
fidivrs
or
imul
je
ret
add
aam
hlt
push
mov
bound
pushf
pop
xchg
fidivrl
jb
cmpsb
pop
cmp
ret
mov
jge
popf
mov
fs
jb
in
insb
sbb
mov
addr16
pop
add
or
lret
das
mov
scas
push
xchg
jnp
mov
inc
push
repz
and
ret
mov
sahf
lret
dec
enter
mov
pusha
dec
dec
jle
xchg
mov
xchg
inc
mov
add
mov
push
iret
or
mov
rcrb
imul
mov
mov
jl
mov
jb
mov
mov
out
xchg
fstl
mov
cli
pop
jecxz
xchg
orb
cmpsl
inc
mov
push
dec
enter
xor
dec
add
les
shrb
mov
ret
inc
cmpsl
push
mov
jno
insb
jb
sub
popa
inc
dec
movsl
add
dec
sbb
mov
sbb
xor
mov
dec
inc
push
daa
out
jne
mov
sbb
add
jmp
mov
int3
dec
mov
xchg
das
cmp
add
cmp
jbe
nop
test
js
inc
shlb
jmp
jmp
aaa
lock
insl
pop
mov
sub
mov
add
mov
push
sub
or
rcrb
sbb
jb
jle
stos
rcl
mov
leave
or
lods
lea
movsl
and
xchg
shr
sub
mov
mov
or
repz
jne
push
push
cmp
jle
add
dec
mov
mov
ja
daa
sub
divb
pop
mov
push
xlat
bound
mov
or
jmp
shl
and
cmp
push
fwait
das
push
insb
sahf
adcl
fcomip
ficoms
repnz
or
add
sahf
daa
sbb
stos
pop
jb
inc
xchg
test
mov
inc
mov
pop
sarb
or
pop
cmp
pop
or
cmc
outsb
jns
mov
mov
cmp
test
fisubs
fnstsw
xchg
filds
mov
enter
in
out
lcall
adc
jmp
dec
shlb
inc
bnd
stc
adc
repnz
jg
in
pop
pop
inc
push
add
or
push
xchg
or
test
mov
rolb
loope
lahf
fisubrl
sub
pop
lahf
scas
push
je
lock
push
mov
cwtl
ret
pop
je
addr16
dec
vpaddd
cwtl
aaa
pop
xlat
add
roll
in
mov
sahf
sub
das
cmp
adc
imul
mov
jg
les
fbld
cmp
lods
subl
mov
jecxz
adc
inc
cmp
or
lcall
pushf
ror
sti
das
push
xchg
mov
xor
push
cmp
xchg
and
into
frstor
lods
sbb
sbb
and
push
xchg
mov
mov
inc
and
dec
inc
adcl
pop
popa
jae
jo
xchg
outsb
add
rorb
mov
pop
dec
orb
int
cmp
or
pop
stc
nop
or
out
mov
push
stos
sub
cltd
push
and
push
pop
pop
jmp
pop
xchg
ret
xor
sub
jecxz
shlb
pop
add
mov
dec
mov
mov
nopl
mov
add
test
add
sbbl
inc
addb
lods
add
xchg
mov
test
dec
push
inc
jne
sahf
nop
std
sbbl
ficompl
aam
and
das
inc
fcmovnu
push
bnd
mov
sbb
lret
fsub
or
pop
push
int
or
movsb
mov
call
mov
out
out
rorb
clc
and
xor
sbbb
iret
into
in
call
sti
xlat
cs
std
xchg
xchg
cmpsb
leave
adc
mov
call
or
jge
lea
push
lret
jl
lea
pop
ljmp
mov
push
push
enter
xor
enter
lea
sub
or
cld
ret
inc
es
or
fwait
rcrb
jb
adc
mov
jbe
movsl
cli
movsl
leave
insl
jne
pop
or
mov
cltd
jno
cli
sbb
aas
mov
pop
pop
pop
add
add
push
jmp
int3
cmpsl
fsubs
jle
pop
popa
push
adc
js
ja
daa
mov
mov
in
and
pop
sub
xor
or
xchg
lds
fmull
and
hlt
mov
nop
das
popa
stc
pop
xchg
pop
push
sarb
jae
out
incb
mov
and
ret
push
jae
ret
les
jne
sub
fwait
out
lods
jle
lahf
orl
and
sub
mov
push
inc
andl
daa
shll
sub
and
fs
ss
in
roll
xchg
loopne
push
push
mov
std
test
adc
push
inc
mov
ds
aam
subb
lahf
iret
jmp
push
inc
call
call
xor
push
jbe
fucomi
inc
iret
mov
insb
push
add
mov
fistps
popa
and
int3
mov
and
pop
inc
mov
insl
push
pushf
out
shl
ret
sub
sahf
loop
cmp
movsl
rolb
or
pop
xor
inc
xlat
adc
lods
stos
push
xchg
adc
xchg
sub
mov
push
lds
jle
lea
into
xor
mov
jmp
loope
testl
repnz
nop
mov
xor
xchg
or
push
xchg
jae
sar
js
sbb
cmpsl
sub
pop
mull
ss
cmp
xor
adc
inc
push
and
adcb
mov
jne
cld
ret
std
insb
out
or
aaa
lods
ret
pop
cmp
fmull
imul
or
cld
dec
dec
scas
fs
mov
add
inc
cli
arpl
add
mov
fwait
sbb
insb
adcl
add
cmpsl
test
mulb
xlat
mov
lret
xor
hlt
or
mov
fldenv
aam
or
xchg
sahf
mov
js
pop
lcall
pop
daa
mov
and
cmpxchg
jl
mov
shll
dec
pop
cli
std
lret
and
mov
repnz
loope
cmp
cltd
fsubl
faddl
push
mov
xchg
rcll
iret
ret
mov
dec
outsb
aas
add
fidivrl
out
add
mov
pushf
sbb
call
xlat
mov
mov
imul
cs
loop
mov
jl
outsb
enter
movsl
icebp
jns
je
adc
pop
aas
pop
dec
out
pop
cwtl
sub
fwait
js
and
lea
xor
mov
lds
loope
mov
xlat
push
push
shlb
out
mov
cmp
inc
js
fdivr
roll
es
lods
inc
add
dec
fldenv
js
xchg
pop
test
dec
adc
rolb
in
sbb
and
mov
arpl
push
aam
cli
or
pusha
dec
pop
out
cmp
xorl
cmp
loopne
push
mov
pop
or
ret
dec
pop
inc
push
fcmove
add
dec
push
hlt
mov
sbb
xchg
call
cltd
scas
and
pop
sub
add
dec
push
xor
jnp
jle
es
pop
pop
sub
xor
bound
push
ror
sbb
mov
jp
nop
lret
out
fmull
daa
jg
ljmp
pop
aad
lcall
aas
xchg
movsl
nop
cwtl
jae
or
sub
sub
and
jns
mov
sub
sub
mov
ror
pop
leave
outsb
imul
fisubl
loopne
das
pop
xchg
test
inc
cwtl
jg
xchg
xchg
fidivs
pop
movsb
xlat
sbb
outsl
ss
ds
sbb
nop
aad
mov
ja
test
std
shll
push
add
sub
popa
pop
sbbb
jmp
out
cmp
scas
andl
lock
push
and
mov
imul
jecxz
inc
out
lahf
mov
mov
pop
sbb
and
ja
ljmp
sarb
mov
push
icebp
jnp
or
mov
sub
repnz
push
pop
in
fistpll
mov
add
mov
cmp
outsl
cmp
or
mov
int3
sub
imul
cmp
leave
push
and
aad
mov
rolb
push
addr16
sub
out
mov
rep
loop
jbe
addr16
decl
mov
popa
jbe
pop
jecxz
pop
or
arpl
adc
rolb
call
or
mov
test
es
ds
add
adc
inc
jb
cwtl
and
fadd
imul
push
mov
inc
mov
sbb
adc
mov
pushf
mov
cmp
cli
pop
or
or
popf
add
std
and
rorl
sbb
xchg
clc
hlt
xchg
add
in
jge
mov
addr16
clc
imul
push
pop
sub
inc
add
push
sbb
xchg
lock
xorb
pop
pop
in
cld
dec
xchg
arpl
adc
jno
xor
pop
outsb
ljmp
popa
mov
cmp
imulb
test
inc
xchg
stos
mov
fstl
loopne
push
xchg
out
cltd
popa
stos
dec
andb
mov
repz
cmp
test
test
xchg
mov
ret
in
adc
jge
jp
dec
in
push
mov
xchg
loop
cmp
xchg
dec
jnp
into
inc
xor
mov
xchg
mov
hlt
mulb
adc
insl
mov
hlt
outsb
jecxz
mov
xor
jo
movsb
scas
loope
leave
ret
sti
pushf
inc
inc
xchg
mov
adc
dec
lea
mov
push
das
jb
xor
loop
outsl
cmp
std
and
sub
mov
and
xor
mov
js
mov
xchg
pushf
loop
fstp
jb
lods
shll
outsb
jb
lahf
jge
aaa
pop
addb
adc
xchg
inc
fisubl
ficoms
mov
push
push
ret
jmp
shrl
popa
jbe
xor
dec
in
mov
jo
sbb
mov
and
sti
cld
sbb
xor
leave
xchg
xlat
mov
push
mov
add
dec
imul
lcall
dec
in
cmp
sti
jp
sbb
iret
mov
inc
sbb
jle
and
add
pushf
mov
lock
jp
mov
ficoml
fnsave
mov
repnz
aad
lods
out
lods
cmp
jbe
mov
or
mov
adc
repz
jmp
clc
mov
cmp
adc
push
outsb
mov
adc
cmp
mov
iret
gs
sbb
pop
dec
lret
push
push
pop
add
push
aam
push
xor
rolb
xor
inc
inc
stos
fcomps
les
int
push
sahf
stos
das
ja
lock
scas
loopne
pop
jo
or
cltd
push
mov
cmp
lock
xorl
inc
pop
sub
sub
inc
fwait
leave
mov
sbb
dec
sbb
dec
cmp
hlt
or
gs
xchg
push
push
ds
dec
pop
cmpsb
lret
xor
push
in
daa
jmp
mov
insb
movsl
jp
xor
pop
adc
cmp
jno
fxch
cmp
pop
jnp
dec
cmp
dec
push
sub
pop
mov
cltd
ss
call
mov
sarl
xor
xlat
in
ja
lods
xor
lcall
dec
sbb
adc
mov
cmp
xchg
and
iret
mov
pop
mov
adc
jle
outsb
repz
push
sub
add
cmp
out
push
fwait
test
push
stos
or
xchg
out
leave
jle
sub
ljmp
pop
call
sbb
inc
shll
rcll
test
into
dec
loope
pop
jecxz
add
inc
cmpb
adc
and
in
int
and
mov
in
mov
jne
cmp
repnz
lahf
out
clc
test
add
sub
arpl
cmpl
out
ja
mov
mov
lods
jae
pop
fstps
mov
lock
cmpsb
and
aad
push
pop
push
cmp
sub
add
mov
ljmp
shll
inc
lcall
dec
pop
aam
pop
adc
adc
pusha
mov
sub
push
pop
dec
in
fadd
andl
sub
sti
mov
int3
sbb
lahf
call
or
mov
jecxz
cmp
fisttpll
mov
imul
xchg
mov
dec
sbb
aam
pushf
push
adc
popa
out
aaa
cmp
push
inc
xchg
adc
cmp
mov
push
lret
iret
mov
cmpsw
in
lcall
in
xchg
xchg
xor
adc
mov
and
add
mov
lret
mov
pop
ja
xlat
jbe
jno
test
or
repz
in
shl
out
and
das
sbb
and
pop
insl
popa
stos
push
ss
jp
rorl
repnz
add
js
aas
push
adc
xor
and
rcll
pand
insl
rcrb
sub
lods
sahf
ror
and
out
pop
pop
pop
popf
mov
ss
cmp
daa
sbb
mov
xchg
movsb
push
repnz
vmovhps
push
mov
push
xor
jne
stos
adc
aaa
arpl
pushf
cmp
fldcw
dec
sub
ljmp
sub
scas
inc
mov
loopne
enter
sub
jp
mov
iret
loop
push
or
call
push
or
push
sub
xchg
mov
arpl
adc
inc
mov
mov
cli
push
jae
out
sbb
nop
lds
imul
mov
inc
xchg
ret
stos
popf
sbb
mov
neg
cmc
sub
pop
inc
xchg
mov
ffreep
xchg
pop
scas
xlat
das
arpl
dec
pusha
mov
pop
mov
or
inc
cmc
pop
aad
ret
push
cmp
jno
rcr
or
sbb
jbe
lock
rcl
push
in
sub
lcall
xchg
iret
insl
lods
dec
fcmovne
mov
clc
add
cmpsl
pop
adc
out
insl
dec
sahf
mov
jns
jbe
mov
inc
out
fistpl
movsb
add
adc
push
ss
xor
dec
out
mov
mov
daa
push
pop
push
or
loope
mov
add
mov
adc
dec
in
fidivl
inc
icebp
pusha
ljmp
test
cmp
jnp
je
inc
scas
in
test
sbb
cmp
push
sahf
dec
cmp
jl
push
test
xor
aaa
mov
cmp
mov
mov
cmp
int3
test
movsb
xor
imul
popf
jle
imul
out
mov
or
sub
dec
sub
mov
xor
mov
dec
mov
fcompl
mov
adcl
arpl
lea
lods
les
lret
rcll
add
js
ret
jle
mov
stos
mov
addr16
test
mov
cmp
sub
leave
add
and
push
inc
push
xor
push
pop
addr16
mov
into
pop
sbbb
pop
jecxz
pop
jle
push
subl
inc
xor
push
xor
mov
push
mov
fs
add
int3
roll
dec
xchg
mov
sub
aad
push
cltd
lahf
adc
scas
and
add
test
lret
stos
mov
push
cld
cmc
mov
push
arpl
fadds
mov
daa
push
hlt
mov
aam
sarb
cld
and
or
ljmp
sub
cmc
lock
loope
add
inc
mov
xchg
push
or
ret
das
dec
decl
ret
aaa
sbb
aaa
jo
mov
jecxz
int3
add
push
fwait
scas
sbb
setge
and
je
inc
addr16
sub
pop
push
pop
adc
ds
lret
mov
pop
inc
push
scas
cmp
sbb
push
mov
dec
xor
fld
into
or
mov
pop
mov
test
std
pop
xchg
mov
jge
imul
jl
setne
xchg
aas
mov
shlb
dec
xchg
cmpsl
jnp
testb
ret
jg
test
xchg
fisttpll
mov
data16
mov
test
inc
dec
rcr
jbe
daa
out
jo
mov
cli
or
cmp
loop
icebp
daa
sbb
and
rolb
xchg
in
and
in
jae
and
push
cltd
sub
push
incl
cli
cmp
cmpb
stos
sbb
or
cmpsl
push
push
mov
mov
fcompl
sbb
xchg
and
or
and
pop
out
mov
push
add
sbb
mov
sti
cmp
xchg
and
jl
push
call
lcall
sub
notl
dec
sar
addr16
shlb
mov
fnstsw
negl
in
iret
mov
pop
push
mov
das
mov
imul
and
jne
pop
imul
clc
adc
pop
push
mov
mov
xchg
or
inc
cmpsl
lret
loop
icebp
sarl
dec
inc
mov
hlt
mov
stos
jne
mov
mov
xor
in
xor
shlb
call
and
mov
mov
daa
rcrb
dec
pop
and
push
push
icebp
movb
jecxz
or
adc
aam
mov
jecxz
mov
add
repnz
mov
aad
jecxz
mov
nop
test
pop
push
sub
dec
jp
test
cmp
push
stc
rcrl
cmp
cmp
mov
mov
adc
out
popf
mov
jmp
lret
inc
cwtl
xchg
mov
inc
xor
imul
cmp
xchg
mov
insb
into
out
or
pop
dec
paddsw
cmp
popf
out
pop
ss
mov
icebp
pop
cmp
push
test
bound
cwtl
lods
loopne
stos
dec
shlb
test
dec
and
pop
or
je
mov
mov
nop
and
pop
sbb
repz
mov
mov
xor
popa
mov
popa
addl
pop
popa
xor
xchg
ljmp
mov
mov
push
sar
cmp
out
dec
pop
test
outsl
popf
mov
fsub
lret
mov
stos
jmp
mov
sbbl
adc
mov
mov
shrb
ss
mov
in
mov
divl
push
cmpsb
ret
jns
add
cmp
mov
andl
in
xor
sbb
pop
jnp
sahf
mov
dec
push
pop
bound
stos
xchg
lcall
loop
xchg
xchg
dec
sub
cmp
mov
add
xchg
sbb
push
hlt
mov
push
lcall
pop
in
or
xchg
imul
stc
jb
jno
mov
jecxz
cwtl
fidivrl
mov
lret
inc
loopne
je
sbb
pcmpeqw
lahf
cmp
cmp
push
stc
arpl
pop
inc
call
jno
mov
insb
sti
add
lcall
movsl
mov
cmp
ret
dec
int3
adc
data16
dec
lds
add
jo
std
repz
mov
jl
inc
pusha
inc
jae
out
ret
sbb
adc
insb
out
fimuls
sbb
cmp
les
aam
data16
push
mov
inc
sub
xchg
push
loopne
cli
in
pop
adc
gs
mov
shll
stos
stos
loop
ljmp
pop
sub
sbb
cwtl
push
push
and
cmc
sbb
inc
cmp
and
ret
int
cmpsl
push
imul
inc
inc
addr16
inc
fiadds
das
cltd
sub
dec
repnz
fidivs
mov
iret
stos
rsm
movsl
and
xchg
dec
xlat
adc
ljmp
xchg
jno
push
je
pop
sub
pop
mov
lea
mov
out
shrb
mov
xor
push
and
adc
aas
jae
mov
and
shlb
outsb
enter
out
in
push
dec
pop
sub
mov
mov
fdivrs
pop
sub
jae
and
rol
dec
pop
ja
dec
in
xor
lcall
sub
cld
jp
pop
cmp
sub
cmpsb
fst
dec
je
out
fldcw
dec
cmpsl
mov
add
push
iret
mov
sti
lods
inc
push
cli
cmpsl
cmpsb
das
mov
jecxz
into
leave
sub
lds
std
sub
ror
fwait
mov
mov
rorl
mov
mov
cltd
xchg
mov
and
push
mov
addr16
lahf
test
xchg
add
js
sbb
lods
je
cltd
test
sub
jle
fistps
iret
xor
jno
shll
in
stos
jl
outsb
pop
sti
xor
mulb
xor
xchg
lea
or
or
outsl
stos
xor
pop
je
pop
xchg
lea
repz
dec
jecxz
xor
test
shlb
repz
inc
movsb
fwait
scas
clc
clc
inc
jecxz
inc
std
andl
hlt
int
pushf
popf
add
sub
jmp
and
vmovdqu32
pusha
sub
in
xor
sbb
test
dec
push
jl
add
call
xchg
fisttpl
dec
xor
bound
jle
test
mov
mov
cmp
xchg
adc
mov
sbb
push
mov
mov
inc
les
into
push
data16
lea
adc
cmp
dec
jnp
icebp
push
dec
sbb
push
fimuls
dec
cmp
mov
mov
and
jnp
inc
push
inc
fstpt
and
and
dec
jl
int
cmp
mov
mov
jns
mov
ror
dec
pop
dec
cs
stc
push
shld
ss
insb
dec
fsubs
xor
cmpsb
add
push
mov
call
and
int3
adc
mov
clc
mov
mov
dec
shll
mov
int3
das
mov
mov
aad
cmp
popf
in
aam
lret
ja
iret
ja
lds
rcr
adc
sbb
je
test
push
push
inc
push
pop
jecxz
andb
hlt
dec
aas
stc
jnp
mov
cltd
in
lock
clc
jmp
inc
inc
mov
pusha
daa
cmp
pushf
icebp
mov
mov
scas
out
sahf
mov
adc
imul
jb
ret
mov
add
and
cmp
jle
inc
fnstenv
xchg
mov
rcrb
jp
mov
and
mov
mov
int3
jle
ljmp
mov
push
xlat
sub
xor
adc
arpl
fwait
and
dec
dec
push
sahf
call
add
jno
jmp
dec
push
pop
add
pop
inc
adc
pusha
inc
insb
shl
pop
dec
cmp
das
cs
mov
mov
stos
dec
pop
mov
pushf
sti
jmp
sbb
pop
arpl
inc
rorb
or
inc
lret
dec
popf
or
and
push
xchg
sbb
pop
repz
push
pop
out
lret
test
push
nop
scas
add
aam
outsl
mov
pushf
xchg
roll
pop
fstpl
adc
and
push
inc
cs
mov
xor
sub
out
cmpsb
loopne
out
and
cmp
cltd
and
jmp
xlat
enter
adc
mov
movsb
adc
in
add
mov
jb
xchg
adc
and
jle
test
test
cmp
or
push
sbb
jecxz
inc
sub
mov
arpl
jne
add
and
adc
enter
cld
jns
cmp
out
adc
fwait
aaa
sarl
aaa
jmp
rol
out
inc
cmpsb
or
push
cmpsb
mov
dec
jns
in
push
test
mov
xor
mov
faddl
inc
frstor
adc
mov
repz
andb
jno
scas
cmp
leave
pusha
mov
dec
lock
sbb
stos
imul
inc
pop
push
add
mov
test
mov
call
daa
lods
add
xchg
in
mov
cltd
aam
lret
push
pop
insb
stos
push
or
ja
mov
cmp
mov
push
int
pop
mov
mov
dec
mov
pusha
jp
push
xor
cwtl
or
lea
in
mov
rcrb
enter
push
dec
pushf
mov
mov
push
mov
fnstcw
iret
push
fmull
ret
fadds
sub
imul
fwait
adc
push
dec
cwtl
pop
xor
lea
adc
outsl
ret
adcb
xchg
and
cmp
lea
jns
movsl
jbe
mov
push
add
loopne
dec
aad
test
cltd
xchg
sub
inc
sahf
insl
xchg
jecxz
xchg
pusha
xchg
push
stos
shrl
jo
sarb
or
xlat
ds
mov
mov
movsl
arpl
js
mulb
negl
mov
jnp
cli
aad
cmc
and
and
or
mov
push
cmp
push
leave
imul
popf
sbb
lea
jmp
hlt
les
outsl
ja
xchg
xor
mov
mov
xor
push
sahf
adc
enter
jl
add
lcall
insl
mov
xchg
inc
rorl
nop
mov
cmpsb
cs
mov
rorl
in
sbb
and
sub
or
mov
shlb
cli
or
in
pop
ds
rcrl
dec
clc
data16
decb
ss
add
mov
imul
mov
push
push
cmc
jbe
mov
loop
push
fmull
pusha
dec
push
mov
xchg
jb
sub
jne
inc
out
jmp
sbb
jbe
imulb
or
jae
inc
pandn
dec
enter
adcb
loopne
and
xor
lcall
add
sub
outsb
js
test
jne
loope
sub
xchg
sbb
sbb
sub
jb
sahf
cmp
std
jne
shr
sahf
imul
leave
adc
mov
sub
insb
jmp
pushf
jbe
lret
iret
out
cmpsl
or
mov
pop
mov
mov
mov
add
sti
orb
xor
or
jno
pop
mov
in
lahf
xor
xchg
cmpsl
jl
popf
dec
add
pop
jg
jb
jne
mov
addr16
mov
shl
jno
mov
cltd
js
pop
mov
fcomps
pushf
xlat
out
lock
mov
push
fstpt
push
sbb
loop
cmp
push
sub
cmpsb
scas
mov
pop
sub
xor
jnp
orl
or
in
cmc
iret
sbb
inc
adc
enter
cli
cmp
dec
shlb
inc
cmp
adc
shl
xchg
outsb
lods
jl
xchg
std
push
mov
or
or
push
rorb
push
js
loope
adc
add
outsl
inc
xor
mov
hlt
sbb
push
aam
xchg
xchg
adc
sahf
icebp
mov
xor
fcomip
dec
mov
test
xor
jnp
lds
xchg
in
pop
xor
sbbb
inc
xor
data16
mov
ljmp
add
sub
xor
xchg
imul
adc
sbb
jmp
loop
jcxz
pop
or
fdivrs
push
in
test
xlat
push
in
daa
stc
clc
or
les
sbb
sbb
adc
xchg
or
cmp
stc
jle
pop
xchg
or
sti
lahf
incb
in
shlb
sbb
and
inc
out
ljmp
push
sub
pop
sub
arpl
jnp
add
fs
push
and
mov
cmp
xchg
adcb
insb
and
mov
dec
hlt
rcrb
aad
sahf
sbb
adc
jecxz
or
add
nop
and
jcxz
into
xchg
das
xlat
int3
clc
xor
iret
pop
jo
fs
lods
sub
icebp
xor
repz
fsubs
pusha
lea
fwait
popl
popa
insb
pushf
mov
lea
xchg
nop
clc
mov
cmpsb
ret
loop
mov
fcmove
sub
xchg
in
jp
mov
in
loopne
jb
sbbb
push
mov
add
sarl
push
jo
push
movb
jno
and
sbb
pop
sbb
dec
jg
lea
ffree
jns
dec
xchg
dec
in
cmp
or
inc
arpl
sbb
dec
sti
jne
inc
pop
sub
dec
js
sbb
pop
xor
adc
dec
xchg
nop
stos
sbb
mov
jmp
loop
cmp
xchg
aaa
xchg
iret
stc
add
fsts
mov
dec
into
add
pushf
jmp
lret
test
es
push
nop
jne
popa
test
test
daa
push
cmp
pop
sub
cs
push
jl
jns
dec
inc
jne
shlb
mov
fs
mov
dec
and
jns
dec
cmp
xchg
adc
push
push
ljmp
test
cs
inc
pop
xchg
xor
ret
cli
cld
jae
xchg
fcompl
dec
lcall
setge
scas
testb
je
pop
and
stos
cwtl
lods
xchg
jmp
push
scas
mulb
repnz
ds
cmp
pop
movsb
and
mov
dec
fists
push
sub
xchg
adc
mov
jb
rcrl
clc
cmp
sub
add
shrb
push
cmp
aas
xor
lahf
aas
push
jecxz
jne
and
pop
repz
cmpsl
js
dec
cmp
das
and
xchg
clc
xor
sub
pop
sahf
xchg
ja
shr
pop
testb
inc
sub
add
xchg
pushl
mov
push
ja
dec
mov
mov
dec
lea
sbb
andl
enter
dec
shrl
cwtl
addr16
sti
xchg
js
lea
cmp
out
test
leave
push
das
scas
andb
addr16
addr16
mov
or
aam
scas
lcall
sahf
ja
shlb
lock
push
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
in
test
or
pop
jl
aaa
ljmp
pop
push
adc
imul
cwtl
sub
mov
into
sbb
cmp
fmul
or
cmpsl
scas
popa
in
in
inc
mov
sub
xor
sbb
es
scas
stos
sbb
outsb
dec
jne
xchg
frstor
mov
jo
std
add
or
fs
jae
je
scas
cli
out
pop
rolb
lods
in
iret
pop
fcmovb
mov
add
cmc
mov
cmp
shll
mov
jg
nop
sub
pop
or
push
inc
shrl
inc
or
popf
inc
pop
nop
pop
jg
div
sbb
sbb
pop
dec
aaa
movb
jo
and
cli
repnz
orl
ds
mov
stos
mov
jge
decb
inc
stc
out
push
dec
out
or
cmp
xor
rcrb
inc
ret
mov
mov
aad
push
int3
stos
call
std
loop
jg
cwtl
call
or
fldlg2
dec
xlat
leave
dec
pop
dec
loopne
pop
push
mov
loope
mov
mov
pop
iret
call
xchg
jle
in
jecxz
inc
rol
cli
xchg
pop
iret
pop
ja
pop
jmp
xchg
cld
out
dec
xor
sub
orl
inc
sbb
mov
push
lret
mov
push
cmpsl
inc
sub
repnz
cmpsb
sbb
in
out
mov
gs
jo
aaa
scas
inc
lods
aam
adc
insl
outsb
mov
fld
mov
push
push
xor
pushf
icebp
push
int3
fstps
push
loope
xor
mov
mov
test
sbb
fstl
push
cmpsb
mov
jp
sub
enter
push
dec
mov
push
into
dec
nop
arpl
add
mov
add
dec
mov
and
adc
xor
dec
rclb
test
or
stos
outsl
repz
jbe
cld
jnp
pop
pop
xor
jne
fwait
mov
aad
jg
and
and
orb
mov
addr16
pop
mov
and
rorl
repz
ret
mov
mov
dec
icebp
mov
aam
and
xchg
mov
icebp
cmp
xchg
mov
xchg
push
repnz
ljmp
pop
pop
or
pop
mov
xchg
cltd
pop
insb
mov
scas
sbb
cwtl
stc
stc
rclb
pop
ljmp
adc
outsb
lahf
xor
lahf
ret
dec
jge
fcomps
imul
aam
and
ret
arpl
sbb
pop
stc
fwait
rcr
fcomps
scas
xor
inc
stc
mov
and
and
mov
pop
sbb
es
mov
in
xchg
mov
lret
test
rcl
notl
aad
ljmp
data16
jge
xchg
bound
sub
push
sbb
inc
adc
mov
imul
cld
jns
mov
sbb
inc
push
scas
popa
iret
stos
cmc
imul
xchg
jne
pop
mov
xor
mov
ss
jb
cmpsb
inc
pusha
jbe
lock
push
pushf
xchg
xor
mov
stc
or
andb
adc
mov
test
mov
xor
jg
sub
inc
setno
sub
mov
jle
inc
data16
add
jge
hlt
aas
xor
xor
xchg
lds
mov
and
fwait
mov
jbe
mov
xchg
dec
inc
int
cmp
inc
pushf
jmp
gs
aad
or
int3
sahf
cmpsl
out
xchg
xor
sub
push
and
mov
cwtl
push
cmp
jle
ret
and
rorb
add
mov
and
pop
xor
jns
in
lods
ljmp
pop
rol
inc
pop
jge
dec
cmp
je
sbb
cmp
stos
sar
or
mov
pop
setns
fldenv
test
repnz
mov
dec
cmpsb
sbb
or
inc
stos
mulb
imul
lods
adc
adc
sbb
cmpsb
aaa
inc
fdivs
inc
rolb
jne
mov
jmp
jne
stc
mov
adc
mov
mov
cmc
dec
out
add
gs
int
sub
and
inc
dec
test
or
fldcw
pop
sbb
test
test
mov
sbb
sbb
sbb
xor
pop
add
andl
loopne
or
adc
dec
bound
cmp
arpl
jb
fnstenv
pop
sbb
adc
scas
iret
lea
push
mov
mov
cmp
mov
add
insl
and
cli
pop
call
push
fldt
lds
enter
fdivrs
out
in
scas
jnp
jnp
jl
pop
pop
das
in
fcoml
int
inc
imul
outsb
adc
lret
dec
lods
push
lods
fndisi(8087
setns
push
adc
adc
std
add
fstps
adc
stos
dec
pusha
cmpsl
push
add
cvtdq2ps
mov
jge
pop
push
pop
sub
mov
mov
jno
lret
jae
or
push
je
mov
out
lret
sarb
add
inc
addr16
xor
mov
sbb
repz
sbb
mov
pop
loopne,pt
cs
clc
aas
or
stc
into
rcr
mov
lret
mov
decb
mov
cltd
inc
les
xor
inc
adc
inc
mov
mov
mov
mov
test
mov
sahf
out
ljmp
cwtl
imul
rolb
mov
pop
sbb
test
daa
xor
and
mov
in
push
jecxz
cmc
movsb
xchg
cmpsb
popa
nop
cwtl
jmp
adc
shll
ja
mov
ja
and
nop
idiv
rcrl
push
push
add
adc
nop
insl
sub
xor
jl
das
test
xchg
shll
leave
inc
pop
xchg
insb
and
pusha
lea
and
lods
lods
mov
push
aam
dec
mov
outsl
jecxz
shlb
mov
out
movsb
pop
popa
jo
or
rolb
pop
test
leave
jo
and
fadd
es
and
pop
cmpsb
int3
shlb
push
jb
pop
cmp
adc
jne
inc
pop
faddl
jns
scas
into
out
xlat
jae
mov
or
add
pop
jmp
dec
xor
xor
lahf
in
les
pop
xchg
bound
dec
mov
add
insl
ljmp
dec
test
and
mov
es
icebp
xor
adc
stc
pop
pop
mov
sub
fmull
popf
ds
dec
into
call
loope
setno
inc
cmp
rclb
adc
mov
notl
popa
or
mov
inc
pushf
mov
cmpl
mov
mov
mov
scas
nop
fstl
xchg
cmp
mov
mov
lds
insl
sub
push
icebp
and
das
pop
cltd
in
leave
or
sub
sub
int3
push
cmp
pop
sti
test
aam
cli
call
daa
pop
push
mov
jecxz
insl
fcoms
sub
inc
sbb
push
mov
shrb
cmp
sbb
add
mov
outsb
or
cmp
sahf
sarl
add
dec
in
push
stos
scas
mov
mov
pop
js
mov
cmp
pop
les
lret
enter
adc
fldt
adc
mov
daa
push
call
lods
movsl
jge
or
mov
xlat
cmp
cmc
leave
dec
test
popf
cmpsl
cmpsb
lods
sti
out
ss
orb
push
mov
andb
cltd
or
xchg
cltd
xor
jecxz
into
pusha
xchg
scas
shrl
cmp
cltd
aas
fistpll
aaa
pop
xchg
mov
mov
inc
dec
je
cmp
lods
lods
xchg
jg
js
fmuls
adc
cmc
stos
sub
pop
mov
or
pop
rclb
adc
push
xchg
xchg
scas
insl
push
orb
adc
or
push
neg
mov
stos
xchg
test
std
aas
mov
addb
out
jge
xchg
aam
push
pop
movsb
jmp
inc
xor
sub
int3
dec
xor
fsubrs
ljmp
lods
cmp
dec
gs
mov
ficoms
lret
test
lods
dec
cmpsl
rclb
mov
sbb
mov
aam
fidivs
push
out
adc
test
sub
or
mov
clc
pop
test
xor
adc
xor
xchg
inc
adc
dec
andl
pop
dec
nopl
add
xchg
adc
into
imul
rol
and
mov
mov
sub
lret
dec
pop
pop
cmpsb
mov
rolb
xor
cmpsb
mov
out
or
pop
adc
mov
inc
push
mov
ljmp
shlb
mov
adc
fs
mov
ss
dec
xor
in
inc
adc
xor
insb
xchg
out
mov
adc
test
in
mov
imul
es
int3
mov
and
adc
pop
adc
mov
out
jno
or
cmp
sub
xor
and
sub
sub
xor
jg
adc
insb
adc
sbb
mov
push
or
xchg
stos
mov
scas
inc
push
decl
cmp
sbb
hlt
pop
inc
cld
scas
aaa
je
movsl
cmovs
pop
out
mov
cmpsb
in
or
xchg
xchg
daa
aam
stos
dec
mov
lret
ss
and
mov
mov
or
xchg
je
mov
push
sarl
push
mov
mov
ljmp
mov
mov
test
dec
pop
aad
cmpsl
ret
cld
cmp
jb
push
lret
pop
xchg
daa
in
loop
dec
dec
and
xchg
mov
jns
sbb
imul
call
xchg
mov
dec
xorb
out
add
adc
enter
aas
jne
mov
ficoms
mov
jne
xlat
jge
dec
arpl
or
xor
fnstenv
dec
push
add
arpl
dec
les
iret
aaa
cmpsl
pop
sub
cmp
inc
dec
push
loopne
in
lcall
test
dec
mov
popf
jge
adcb
addb
arpl
bound
and
jne
sarb
cmp
mov
xor
cs
fdivrl
addl
fwait
int
icebp
xchg
push
mov
jne
std
std
loopne
adc
cmpsl
sub
inc
xor
int3
clc
mov
mov
or
mov
cmp
imul
out
fnsave
cld
outsb
into
sub
mov
cmp
xchg
nop
and
xor
pop
inc
pop
aam
pop
cmp
mov
xchg
stc
and
lock
push
lds
in
loopne
mov
mov
pop
pop
mov
push
shl
decb
inc
cmp
push
fsubrs
adc
outsl
call
inc
mov
pop
pushf
mov
sbb
jge
add
push
fs
or
mov
sarb
mov
xchg
loopne
mov
adc
call
out
push
push
sub
mov
test
addr16
mov
sti
mov
fmuls
sub
lods
lock
test
loope
repnz
xor
mov
jns
cmp
adc
or
shlb
add
das
aam
stos
adcb
mov
lcall
fwait
and
xchg
pop
sbb
inc
pop
scas
testl
loope
sbb
pop
gs
ljmp
dec
mov
push
inc
and
enter
add
push
mov
das
jbe
or
das
rcll
jp
int3
dec
mov
pop
sbb
lock
aad
fisttpll
jge
fsubr
ljmp
cli
cmpsl
sbb
dec
push
sbb
xchg
pop
jp
fiaddl
and
mov
or
popa
data16
or
cmp
pop
in
aad
pop
enter
jbe
mov
das
jns
sub
add
repnz
sarl
mov
in
pop
das
sub
sub
dec
add
add
std
stc
pushf
mov
pop
icebp
fnsave
xor
or
push
rcl
or
mov
adc
pop
adc
test
nop
enter
xchg
mov
add
push
or
ret
test
adc
mov
cld
adc
add
push
aad
adc
je
mov
lods
hlt
cmp
rcrl
mov
clc
push
add
mov
loop
inc
out
loopne
imull
cmpl
or
jae
xor
jne
into
mov
adc
cmc
pop
push
sbb
cltd
ds
mov
mov
lcall
test
sub
adc
pusha
leave
rorl
xchg
pushf
cli
stos
or
mov
jp
adc
roll
test
ss
fs
test
hlt
sbb
adc
push
pop
in
xchg
sub
xor
mov
popa
sub
cmp
cmp
shl
jl
int
and
sti
jbe
mov
das
arpl
and
int3
adc
or
pushf
push
jl
mov
pop
pcmpgtw
jbe
shll
xor
jecxz
fiaddl
sub
and
ljmp
jae
and
fcompl
cld
imul
or
xchg
adc
dec
push
divl
add
mov
scas
jl
in
pop
lret
fs
aam
ret
dec
mov
repz
test
rcr
fucomi
pusha
and
pusha
and
push
cli
dec
ret
mov
fildll
subl
jge
jnp
div
mov
repz
int
dec
jo
stos
and
int3
mov
lods
loopne
pop
stc
repz
pop
stc
push
cmp
xchg
ret
loop
test
fcom
hlt
xor
iret
xchg
mov
pop
xrelease
cmpsb
movsb
aam
sbb
clc
jae
mov
arpl
xchg
and
shrl
mov
out
in
out
in
fisttpl
inc
loope
jno
jnp
mov
mov
mov
xlat
jge
add
jecxz
and
and
rcrl
mov
pop
jnp
roll
out
push
cmp
mov
and
gs
sbb
xchg
sti
lcall
cmp
xchg
adc
fsubrl
pusha
sbb
gs
jo
bound
cmp
insb
dec
xor
jae
lea
inc
and
jmp
movsl
rcl
add
push
cld
push
imul
cmpb
out
rorl
lret
fmull
mov
bound
pushf
xchg
dec
roll
inc
les
call
jp
sub
mov
dec
push
mov
jo
mov
scas
xlat
fmull
pop
fsubrp
js
jbe
xchg
testb
mov
push
insl
jbe
add
or
xchg
xchg
in
lds
aad
xor
andl
js
pop
push
fs
inc
mov
data16
faddl
fidivrl
and
jecxz
and
adc
or
jmp
xchg
sub
lret
push
insl
mov
push
pop
out
lods
stos
insl
into
cmpsl
dec
mov
and
iret
aas
xchg
dec
inc
bound
jb
sbb
jg
cmp
cmp
dec
imul
adcb
push
sti
mov
adc
dec
sbb
xchg
push
pop
test
outsl
cli
and
in
push
fdivr
ret
and
call
inc
pop
aas
inc
lea
lock
mov
and
xor
lret
jl
dec
stc
xchg
push
fnstenv
lea
out
hlt
or
mov
push
add
cmp
data16
mov
ljmp
sarl
fsubr
pop
popa
movsl
test
mov
mov
push
xchg
dec
mov
dec
popa
or
and
add
push
bound
sbbb
adc
scas
jne
rorb
out
aas
notl
cmp
dec
arpl
pop
push
xor
xorb
mov
shll
bound
shr
sbb
mov
rcll
pop
or
xchg
nop
jb
movsb
xor
lock
cmp
lds
jnp
sbb
mov
xor
ret
dec
and
insb
ljmp
adc
adc
adc
mov
xchg
leave
ret
pop
xchg
cmc
outsl
cmp
fisubs
cmpl
xor
pop
in
in
scas
cmpsb
dec
push
stos
push
imul
lret
pop
cs
jne
adc
fwait
inc
inc
repz
stos
adc
inc
loope
add
cmp
mov
xchg
add
rcr
imul
rorl
mov
mov
pop
mov
shrl
jns
pop
xor
lea
xchg
mov
jns
leave
call
jnp
push
xchg
sub
mov
mov
scas
push
xor
loop
xchg
or
popa
test
fcom
and
int
cltd
jbe
xchg
sbbl
sbb
iret
sbb
xchg
pop
insl
pop
sbb
lea
mov
rcrl
repnz
sti
pusha
in
ss
jl
add
jecxz
stc
rcrb
inc
xor
outsl
jg
add
shrl
inc
pop
es
dec
ss
imul
sbbl
pop
aas
rorb
adcb
push
roll
jo
dec
clc
lea
inc
outsb
movsl
sbb
aaa
inc
clc
xchg
sbb
je
ljmp
add
mov
cwtl
mov
testl
cwtl
std
lret
jae
lahf
jmp
int3
mov
sbbl
xor
xsavec
dec
xchg
xor
sub
mov
xlat
push
imul
jecxz
xchg
lds
sti
jnp
adc
sbb
pop
lds
push
inc
add
push
lock
dec
aad
cwtl
xchg
pop
stos
mov
cli
xchg
pop
ffree
out
popf
in
and
mov
out
sub
cwtl
rcrl
dec
into
add
sbb
xor
push
xor
into
ss
cli
test
scas
shll
repz
xlat
rorl
mov
lcall
mov
out
mov
js
je
adcb
iret
sbb
int3
sbb
adc
ror
or
add
pop
repz
inc
fidivrl
jl
xchg
jne
or
test
mov
xor
push
and
clc
out
adc
mov
pop
in
mov
imul
sub
test
add
mov
or
mov
xchg
jge
ret
dec
aas
adc
sub
add
adc
call
popf
call
cli
mov
lds
aas
jns
sbb
push
add
pop
pop
sub
into
pop
bnd
lret
stos
fnsave
push
in
jnp
pop
loop
and
pushf
popa
fwait
test
fidivl
scas
sbb
cmp
mov
sbb
mov
cmpsb
sbb
and
loope
adc
test
scas
repz
jnp
pop
addr16
mov
ret
sbb
xor
and
pop
cmp
out
addb
cmp
pop
push
push
mov
sbb
lcall
in
push
fninit
lahf
jno
outsb
xchg
and
mov
popa
fs
mov
loopne
push
cli
ret
pop
jb
pop
push
arpl
cmp
sub
test
movsl
dec
add
or
push
push
leave
test
sbb
scas
add
inc
fsts
pop
jae
fldt
shlb
pushf
mov
inc
daa
pop
jecxz
enter
fistpll
icebp
jecxz
mov
sub
sahf
repz
in
push
mov
push
sub
mov
adc
je
lods
repz
mov
xchg
mov
sbb
adc
push
fwait
sahf
push
into
xchg
int3
cli
shll
pop
inc
mov
push
daa
add
mov
rcl
int3
pop
or
jp
inc
cltd
and
fcmove
xor
add
mov
cs
sbb
push
mov
push
sub
cli
mov
push
rep
xor
fidivs
test
repnz
xchg
dec
popa
pop
into
pop
sti
stc
jbe
sbb
dec
fbld
sahf
mov
ret
mov
cmp
and
push
add
popa
sbb
xlat
iret
loope
lcall
mov
push
lea
addr16
lds
mov
mov
jne
pop
fdivp
jns
add
sti
dec
cwtl
pushf
xor
jp
mov
stos
leave
sbb
les
add
in
in
mov
sarb
cmp
stos
loop
lds
aad
sub
push
outsb
out
or
popa
mov
ficoms
pop
mov
xor
mov
loope
add
fstpl
mov
movsb
pop
aas
mov
out
xor
sub
outsl
pusha
int
xor
jns,pn
pop
addr16
push
cmpsl
mov
out
mov
sub
outsb
lret
test
scas
inc
push
sbb
xor
sbb
inc
pushf
pushf
and
sub
aam
cmp
mov
popa
out
xor
inc
ds
fadd
add
mov
push
pop
sub
pop
mov
fcmovb
aas
jg
and
and
cmpb
xchg
add
cld
arpl
ja
dec
lock
sarb
jp
mov
mov
ss
mov
in
pop
mov
jle
xchg
mov
inc
in
aaa
sbb
aam
hlt
or
lds
xorb
test
movsb
mov
xchg
xchg
pop
xlat
pop
imul
sub
sub
and
inc
popa
ret
xor
pusha
add
pop
adc
into
test
les
pop
addr16
shlb
out
sahf
push
movl
mov
out
mov
xchg
push
xchg
sbbl
aas
int
cmpb
lret
add
and
add
xchg
push
repz
add
push
or
mov
mov
xchg
aam
xchg
int
dec
xchg
test
test
mov
bound
into
jg
dec
ljmp
sub
ja
fs
mov
test
lods
mov
mov
roll
insl
or
ljmp
mov
mov
mov
call
lcall
decl
dec
test
xorb
mov
push
rcll
xor
lcall
mov
cmc
repnz
sbb
push
in
and
mov
cmp
cmp
js
sbb
push
in
mov
shlb
and
mov
dec
sbb
iret
push
sbb
xchg
addl
mov
dec
or
fcmovb
jb
and
test
rclb
jae
repz
mov
mov
lret
cmpsl
pop
mov
adc
in
es
stc
xchg
jne
dec
push
das
loop
jns,pt
loop
push
clc
xchg
adc
cmp
adc
dec
out
push
jbe
jg
out
cmpsl
lods
cmp
stos
icebp
inc
jnp
mov
sbb
scas
mov
cmpsb
jb
push
dec
xor
lret
nop
imul
js
loope
lcall
repnz
mov
dec
call
jp
mov
mov
pop
sbb
aad
mov
push
and
and
in
int
mov
ret
mov
xor
mov
push
scas
sahf
aaa
decl
or
or
ss
fisubl
dec
or
mov
scas
mov
lods
out
fisttps
mov
or
pop
push
ret
inc
sub
imulb
cmc
cmp
jno
rclb
and
inc
sbb
xor
out
xchg
incb
jns
lock
call
scas
ds
pop
into
push
rorl
xor
aas
cmpsb
jnp
les
push
and
bound
dec
clc
cs
psraw
insl
jl
inc
inc
lods
and
cmovno
jmp
dec
sbb
pusha
fisubrs
fmull
fldcw
fsubrs
fstpt
stc
cld
mov
mov
add
inc
add
test
aam
sbb
mov
fidivl
jecxz
xlat
addb
inc
cmp
inc
inc
and
pop
dec
shl
add
adc
jmp
dec
addr16
addr16
push
or
in
xchg
pop
mov
xchg
sahf
add
cmpsb
into
jg
xchg
rcrl
push
adc
cli
sbb
mov
fildll
xchg
into
push
cmp
cmp
lahf
jmp
cmp
loopne
call
jb
xchg
es
cltd
cli
fmuls
aad
mov
adc
mov
cmpsb
pop
aam
cmpsl
sbb
inc
cmp
push
cli
lods
adc
aam
xlat
shlb
mov
dec
pop
pop
jmp
inc
mov
mov
sbb
mov
inc
nop
xor
inc
dec
sarb
pop
sbb
gs
into
div
push
jo
lcall
inc
mov
jge
xchg
sub
out
testl
mov
or
sub
ret
pop
cld
adc
jo
mov
call
lds
aam
mov
and
cmp
cld
mov
imul
int3
std
mov
mov
inc
pushl
xchg
lret
xlat
xchg
mov
cmp
jmp
movsb
mov
cmp
popa
cmp
in
jmp
mov
ret
cmp
mov
pop
stos
jno
out
and
cmpsb
rcrb
lahf
cmpsb
cmpsl
pop
inc
aam
cltd
inc
jmp
gs
insb
inc
mov
mov
pop
jp
push
int3
push
push
sbb
and
call
add
ds
icebp
sahf
pushf
dec
xchg
inc
sbb
mov
inc
mov
ljmp
add
add
mov
loopne
in
add
clc
nop
mov
push
dec
pop
pop
jecxz
mov
insb
inc
mov
decl
cmpsb
orb
int3
mov
loopne
push
cmp
int3
call
pop
repnz
and
inc
fistpll
push
push
xchg
push
call
sbb
add
sub
adc
addb
sub
xchg
cmpsl
sub
aas
aas
mov
into
push
stos
pop
push
scas
stc
xchg
inc
push
xchg
mov
adc
ljmp
add
fisubl
xchg
adc
in
jl
fsubs
fs
jmp
dec
call
dec
mov
push
loop
xor
push
sub
adc
inc
xor
xor
push
int3
jb
cmp
lret
xorl
mov
repnz
jne
and
dec
and
sar
add
cmp
sbb
rcr
nop
jbe
push
sub
rolb
mov
add
fiadds
sti
pushf
ljmp
jb
out
pop
ror
xchg
inc
mov
push
and
dec
sahf
popa
repz
aas
add
xchg
rolb
inc
jne
scas
std
mov
xchg
pusha
add
cwtl
ret
lahf
adc
scas
push
icebp
push
iret
je
ret
or
inc
fsts
les
int
lods
sbb
adc
and
pop
jl
adc
or
fidivrl
pop
and
inc
in
push
mov
bound
cmpsl
or
push
addb
adc
popa
add
mov
push
xor
loopne
popf
int
xor
daa
call
ja
pop
dec
add
shll
stc
mov
faddl
pusha
sbb
mov
sbb
loopne,pn
adc
mov
xchg
add
xlat
pop
xchg
pop
jg
in
pop
mov
mov
mov
mov
movmskps
xchg
pushf
mov
cli
xchg
and
jp
pop
call
mov
or
cmp
mov
add
fisttps
popf
out
in
testb
push
cmp
loope
inc
stos
ds
sub
shrb
push
inc
popf
dec
lods
xchg
ret
xchg
push
pop
or
xchg
xor
js
fs
jbe
lods
fnstsw
cwtl
xchg
pop
sbb
mov
gs
out
cltd
shl
xor
and
jnp
cld
mov
sbb
xor
outsb
or
xchg
movsl
sub
sub
sub
cmc
mov
fs
mov
fistpl
js
or
inc
cld
xchg
loop
mov
lret
out
imul
fildl
pop
jg
pop
repz
jecxz
pushf
xchg
pushf
pop
push
shrl
or
data16
mov
xor
mov
test
aas
int
or
leave
mov
lret
xchg
and
cwtl
sbb
add
sti
addr16
lcall
mov
xchg
pop
mov
inc
in
roll
inc
inc
test
in
dec
in
inc
sbb
or
mov
stos
cli
leave
mov
ljmp
fld
mov
push
iret
out
ja
cmp
fcoms
cmpxchg
sahf
movsb
shrl
insl
fwait
pop
mov
fwait
adc
frstor
pop
lods
sbb
fbstp
ja
fistps
int3
adc
cmc
xchg
in
xor
dec
insb
jno
ret
mov
jmp
int3
and
sbbl
adc
lea
pop
jae
movsl
lds
cld
fistpll
loopne
rcrb
mov
add
fisubrs
xchg
dec
jo
jnp
into
and
out
stc
jns
insl
outsb
adc
xor
mov
std
loopne
lret
shll
pop
adc
insb
pop
stc
push
add
out
fwait
outsl
pop
mov
push
jle
mov
cld
lahf
out
mov
dec
jb
icebp
lret
scas
xorl
test
mov
inc
pop
mov
nop
mov
sarb
das
in
jae
int3
push
xor
cmc
adc
dec
push
mov
outsb
jo
mov
rol
sub
lds
fiaddl
mov
mov
lods
mul
enter
or
sarb
icebp
ficomps
mov
adc
arpl
mov
sub
xchg
mov
cs
xchg
insb
cmpl
mov
jnp,pn
gs
stos
ss
insb
test
and
xchg
ret
mov
jl
enter
inc
push
push
inc
lret
xor
int
pop
test
loopne
inc
lock
push
sbb
push
mov
xor
mov
lods
pop
lock
inc
add
arpl
in
scas
mov
fwait
xchg
cmp
xorl
jo
shlb
icebp
mov
dec
sbb
dec
pusha
cmpl
pop
jnp
ret
pop
movsb
cmp
dec
dec
cs
into
sub
inc
or
mov
sub
push
sahf
xchg
ljmp
mov
ret
rcrb
adc
mov
ljmp
jp
sbb
xchg
leave
les
arpl
cmp
aam
jl
in
mov
stos
lret
dec
cwtl
out
test
sbb
pusha
jbe
cmp
push
mov
movsl
lods
cmp
inc
es
mov
inc
decl
lret
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
and
jne
rorl
orb
push
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
insl
icebp
pop
dec
outsb
scas
sub
js
icebp
push
loope
hlt
out
mov
sarl
insb
ja
push
jg
mov
ss
push
test
insb
mov
and
fiaddl
xor
mov
aaa
call
sti
outsl
mov
nop
xchg
jb
repz
dec
flds
xchg
js
imul
xchg
push
push
ljmp
ja
xor
scas
outsb
add
leave
test
test
jmp
loopne
add
inc
mov
clc
jnp
stos
clc
hlt
ret
pop
loope
lret
xchg
ror
xor
shl
ljmp
jo
or
shrl
dec
pop
pop
push
kandnb
lds
loopne
and
test
sbb
int
js
inc
out
ret
dec
nop
jge
in
sbb
fstp
test
aam
cmpsb
out
lahf
sbb
add
push
adc
subl
mov
cmc
outsb
xor
dec
mov
jecxz
jae
inc
addr16
cmpsb
andl
xor
cmp
pop
inc
clc
push
dec
adcb
data16
mov
dec
std
or
xchg
mov
and
or
pop
sbb
adc
andb
push
daa
popa
xchg
mov
in
cli
add
rclb
jns
dec
adcb
fisttpll
adc
push
popf
mov
jbe
lods
mov
cmpsl
jl
xchg
and
lahf
push
loope
add
mov
sbb
fs
je
in
pop
lcall
sub
adc
mov
in
pop
popa
sbb
test
mov
cmp
lock
or
pop
sbb
add
fiadds
push
dec
add
fxch
loopne
lds
call
sub
pop
pop
adc
adcl
adc
mov
hlt
push
in
int3
call
xor
pop
shll
addl
xor
jbe
stc
cwtl
adc
les
dec
inc
inc
jmp
and
cmp
mov
add
popa
sahf
ret
mov
leave
jmp
mov
test
loopne
push
jno
int
mov
adc
mov
sub
mov
fdivl
insb
rolb
sub
nop
mov
mov
movsb
sub
mov
and
mov
and
int
bound
scas
mov
in
js
lods
mov
repz
push
mov
mov
cs
dec
jge
jae
out
xchg
xorl
loop,pt
cltd
fcomip
jg
xor
stc
xchg
notb
mov
int3
push
mov
int
or
cmp
add
mov
push
push
in
pop
test
xor
push
lcall
clc
notl
push
cmp
or
lock
in
mov
inc
jp
ljmp
push
stc
fildll
cmp
lahf
pop
idiv
loope
cs
xor
std
pop
jne
add
out
cmpsb
pop
push
sahf
sti
sub
sub
lahf
test
sub
mov
jg
data16
push
cwtl
rclb
outsb
or
js
movsl
or
inc
lock
dec
add
daa
mov
cmp
popf
mov
scas
add
mov
mov
insb
adc
adc
test
lods
add
add
test
out
stos
into
outsb
mov
or
inc
add
jb
sub
add
iret
lods
movsb
outsb
mov
shll
out
mov
imul
ss
jp
lret
call
jmp
push
and
fmuls
ja
popf
and
xchg
dec
sub
add
ja
mov
mov
sbb
movsb
scas
in
lcall
aam
pushf
loope
push
pop
loop
fldcw
jge
mov
insl
push
clc
cmpsb
rcrb
ja
inc
fst
sub
into
push
pop
xchg
mov
insb
dec
aas
inc
std
cli
push
jae
xchg
push
inc
clc
sub
rcrb
stos
ss
sub
mov
cmpsl
aad
pop
cmp
ret
dec
mov
push
fisubrs
cs
ret
inc
lret
xchg
dec
mov
dec
call
test
push
mov
outsl
out
stos
xor
mov
dec
sbb
mov
push
mov
loopne
jp
inc
stos
pop
xlat
fistpll
aaa
sub
ret
imul
add
cmp
inc
loop
pop
in
adc
push
push
mov
add
inc
ret
ror
mov
jno
icebp
pop
adc
jmp
adc
sub
cmpsl
push
test
sbbb
mov
xor
inc
or
bound
aam
push
vpshufhw
sbb
decl
repnz
hlt
addr16
lahf
out
repz
rorl
push
out
mov
mov
scas
xor
mov
push
in
sbb
and
sbb
mov
cld
fadd
repnz
xchg
movsl
sub
sbb
pop
int3
jno
stos
add
add
outsl
jecxz
lret
cmp
mov
mov
sbb
fsubl
stos
jge
imul
and
fcompl
pop
clc
js
aaa
push
jmp
mov
pop
scas
or
insl
les
loop
or
xor
imul
in
pop
push
mov
mov
stc
stc
and
push
jbe
xlat
das
mov
mov
jbe
shl
pop
cmp
stc
mov
int
aas
ret
xor
dec
outsl
mov
xchg
mov
pop
mov
add
xorl
cmc
push
push
divl
aas
cmpsb
dec
cmp
and
and
and
iret
mov
mov
fdivr
jle
adc
test
adc
in
mov
out
jp
fildl
pop
movsb
dec
outsl
hlt
mov
jno
fistpll
fstpl
adc
lock
lods
mov
insl
adc
dec
add
loope
inc
out
stos
in
mov
cmp
into
lcall
xor
jbe
addb
or
into
imul
testb
and
xchg
inc
hlt
call
or
pop
add
mov
sub
imul
mov
add
sub
adc
mov
mov
jae
sbb
add
pop
repz
jae
jb
push
dec
ret
mov
xor
mov
lock
mov
sbb
lea
out
pop
in
jp
lds
in
and
sub
sbb
xor
insb
or
xchg
add
mov
or
lcall
and
add
add
dec
daa
in
add
in
test
aam
stos
ds
cmp
lret
push
test
push
pushf
and
sbb
into
dec
cwtl
aad
sbb
xchg
jnp
add
fimuls
data16
sti
mov
int
pop
mov
add
add
stos
iret
and
lea
repz
out
enter
leave
fstpt
sti
add
subb
shlb
xchg
in
ror
mov
or
ret
fnstenv
dec
movsb
fistpll
pop
rep
sub
add
push
shlb
dec
cmp
sub
lods
popf
push
push
imul
test
fcoms
subl
out
sbb
insb
dec
das
push
repz
dec
scas
jae
push
mov
out
dec
test
pop
or
lock
jnp
cmp
pop
pop
mov
icebp
mov
inc
cmp
bound
add
mov
rcll
pop
add
movsl
push
repnz
es
dec
inc
aad
jle
dec
imul
or
fiaddl
xchg
push
lcall
rorb
sub
jl
adc
das
testb
cli
and
add
lds
notl
pushf
inc
push
arpl
cltd
adcb
cmc
sub
movl
mov
or
ja
and
or
jne
xchg
ret
mov
sbb
add
mov
push
or
cmpsb
pusha
mov
and
jmp
and
xor
cltd
ss
icebp
pop
mov
daa
adc
js
inc
ret
dec
orb
jle
xor
sub
mov
dec
clc
push
ds
es
nop
in
insl
out
sbb
fs
mov
xchg
incb
icebp
xchg
mov
aam
jns
pop
push
cmp
or
cmp
test
jne
mov
fs
mov
dec
inc
add
fdivl
jnp
jbe
popa
push
xchg
xor
lds
cmp
ror
xor
xor
in
dec
push
cli
jl
pop
adc
stos
sbbl
ret
mov
mov
jns
test
mul
ljmp
push
jl
cmp
mov
hlt
mov
push
loopne
int
jo
jne
jmp
xchg
xchg
push
sbb
lret
rolb
add
cli
lds
faddl
pop
rclb
push
mov
andb
cwtl
jne
daa
jne
sti
mov
cmp
pop
nop
ret
test
xchg
in
xor
fdivp
orl
dec
jne
pusha
mov
mov
pop
mov
or
sbb
jmp
mov
push
sub
pop
jmp
ds
int
jp
aad
imul
movl
and
sub
rcr
movsl
jno
cld
lock
dec
or
lods
cmp
mov
and
and
les
sub
cmpsb
sbb
mov
and
fnstsw
fs
sub
aad
loopne
mov
test
fcoml
and
aam
ss
sub
fsubl
fs
aad
inc
xchg
jb
inc
pop
into
sbb
or
or
insl
insb
out
cld
out
loope
push
lret
inc
loop
mov
repz
dec
dec
inc
clc
gs
popf
jg
mov
dec
sahf
aaa
pop
push
les
add
lods
add
add
shlb
int
mov
inc
xor
fstps
int3
lcall
movsb
pop
popa
test
cmp
addr16
push
mov
inc
or
jl
sbb
sbb
les
daa
es
test
mov
push
xchg
out
sahf
mov
push
jmp
lahf
push
sub
ja
outsl
jno
mov
push
cmp
cmp
mov
cmpsl
test
jl
fs
mov
inc
add
inc
push
fwait
pop
cmp
dec
cld
jecxz
dec
mov
sbb
bound
sbb
dec
outsb
dec
insl
adc
out
add
push
loop
pusha
stc
mov
adc
iret
mov
mov
test
cmp
add
cli
jmp
rclb
out
lret
mov
mov
lods
in
adcl
inc
inc
mov
dec
sub
loopne
cmp
dec
sub
mov
lea
idivb
es
xchg
test
sub
jbe
out
or
mov
xchg
pop
jmp
mov
andl
inc
jbe
pop
fcoml
pusha
lods
xchg
add
pushf
pusha
pop
out
push
jo
mov
jnp
sub
mov
xor
jns
inc
iret
inc
mov
xor
inc
in
mov
shlb
sub
push
sub
enter
xor
jecxz
mov
jl
inc
inc
jnp
jno
cmp
add
pop
xchg
iret
xor
daa
xchg
data16
nop
inc
gs
sbb
pop
sar
pop
sahf
loope
cmp
aas
push
in
ret
je
lcall
sti
inc
dec
pop
scas
stc
dec
andl
je
inc
bound
out
aad
mov
arpl
mov
jge
push
scas
mov
in
push
test
inc
outsb
mov
mov
int3
jle
add
in
xor
das
add
mov
ret
inc
mulb
cmp
fiadds
mov
and
pop
stc
adc
adc
mov
neg
mov
or
and
fbstp
cmc
cs
sub
ja
mov
jmp
push
jns
mov
imulb
or
sub
in
xchg
jl
fadds
push
shrb
sub
rorb
jg
jmp
inc
inc
push
sar
jge
jg
sbb
xchg
mov
or
pop
fwait
out
inc
ret
push
sub
iret
pop
into
jmp
aaa
add
xchg
mov
sbb
out
lahf
notb
lret
je
mov
imul
popf
sbb
ds
jg
fldenv
mov
outsl
xor
push
in
imul
insl
into
adc
xchg
outsl
cmpsb
cld
movb
mov
or
mov
push
loop
pop
cs
sahf
pop
add
stos
insl
inc
lock
push
pop
mov
push
rorl
out
cltd
and
sub
mov
test
aaa
fs
movswl
jl
mov
adc
sbb
sbb
sahf
cltd
stos
icebp
pop
jb
jnp
inc
sti
sbb
cmp
icebp
mov
aam
cmp
flds
xorl
pop
xor
mov
adc
mov
add
pop
sbbb
dec
imul
sub
add
outsl
hlt
int3
je
mov
out
das
xor
jb
sbb
ja
jbe
inc
lds
cmp
xor
test
mov
or
mov
loope
sub
push
lret
jecxz
xor
outsb
sub
xor
and
mov
popa
and
int3
add
xor
scas
aad
xor
fldenv
lds
push
xchg
jl
fisubrs
mov
push
loopne
ds
dec
jns
mov
dec
std
xor
lods
or
push
pop
add
mov
jae
rorb
stos
lret
inc
cmc
xor
mulb
and
enter
test
arpl
ret
cld
rcr
xor
sbb
push
inc
lret
xchg
sbb
mov
lahf
bound
push
ss
je
mov
psubusb
inc
mov
arpl
test
and
into
lcall
out
daa
sbb
pop
and
xchg
std
popf
popa
mov
test
dec
cmc
jl
lret
jge
xor
dec
loop
sub
jg
mov
dec
xchg
sbb
fwait
sub
hlt
mov
call
rcrl
imul
por
mov
jo
and
test
xchg
ss
jne
mov
and
push
jle
loop
cli
shlb
add
or
sti
push
add
sub
sub
jne
lock
xor
je
cmp
loop
and
pop
fistpl
lock
mov
movsl
incb
movsl
out
mov
mov
xor
xchg
and
inc
xor
xor
scas
cmc
push
or
pushl
cli
xchg
scas
pop
out
mul
xchg
jmp
mov
or
dec
test
lods
into
popa
jmp
dec
mov
stos
adc
scas
xchg
mov
mov
mov
add
fcoml
or
gs
xchg
inc
mov
and
outsb
cld
cmp
in
jae
xchg
push
mov
inc
jg
insl
popf
inc
rsqrtps
popa
dec
aam
sub
push
leave
aam
aam
incb
imull
aam
imul
daa
mov
rorl
out
jns
fldenv
aaa
xchg
ljmp
jg
sbb
pop
ficoms
cmpsl
mov
adc
xchg
push
xchg
cmpl
or
mov
dec
mov
lret
cmc
orl
shll
mov
sarb
jge
repz
dec
adc
add
scas
fsts
divb
sub
inc
call
or
add
in
xchg
xchg
xor
push
xor
cli
add
movsb
ds
imul
adc
pop
cmc
fildl
shll
les
and
push
out
inc
xor
jbe
loop
cmp
imul
sbb
push
or
ljmp
stc
jmp
mov
cmpsb
mov
pushf
arpl
and
rcrl
test
in
mov
mov
repz
shll
mov
aam
or
dec
stc
cmpsl
and
push
int3
inc
dec
mov
iret
jl
pop
mov
and
mov
mov
push
rol
add
add
call
jecxz
jns
shr
push
jne
shrl
add
pop
xchg
mov
mov
pop
repz
fmuls
vsqrtps
sbb
imul
sub
cmp
out
sub
outsl
mov
or
movsl
jae
cmp
mov
dec
stos
inc
mov
out
xor
or
adc
test
adcb
orb
rorl
xor
jecxz
jae
call
or
xlat
inc
test
ret
jo
rol
jle
fdivr
cld
loope
push
lcall
cmp
jg
cmc
adc
dec
cmp
jae
je
cmp
xor
pushf
into
push
andb
in
out
xchg
adc
mov
das
and
pop
pop
add
sarl
and
bound
jbe
rol
add
mov
dec
notb
fwait
mov
xchg
and
mov
sti
xor
mov
or
movsl
dec
in
loope
in
stos
inc
pop
scas
arpl
inc
add
or
mov
stos
xorl
jmp
popa
mov
push
fsub
push
icebp
aas
jl
fmul
mov
pop
repnz
cltd
mov
lahf
push
lret
cmp
clc
mov
shll
jmp
jmp
jecxz
mov
mov
push
jne
andb
jno
pop
sub
lret
jp
jo
mov
loope
in
cli
adc
dec
and
pop
cmp
iret
mov
cmp
xchg
push
js
cmp
popa
cmp
cwtl
repnz
xor
add
xlat
out
insl
xchg
push
arpl
and
cmpsb
daa
and
into
shlb
enter
sahf
adc
adcl
dec
test
movsb
bound
sbb
or
aad
sbb
hlt
sub
xchg
push
popa
xchg
fiaddl
sub
xchg
icebp
data16
mov
inc
cmpb
or
imul
or
je
push
mov
shr
jb
dec
loopne
jmp
xlat
pop
adc
push
addl
sub
clc
mov
in
imul
fldl
xchg
jne
xchg
stc
les
icebp
xchg
dec
shlb
pop
lods
in
int3
sahf
das
inc
lea
mov
fisubrl
mov
imul
lahf
fbstp
loopne
in
dec
je
pop
add
outsl
add
push
xlat
loope
jmp
adc
xchg
xchg
inc
nop
stos
insl
sbb
repz
dec
xchg
xor
dec
jp
mov
and
dec
mov
inc
popa
je
aam
gs
test
fs
mov
mov
adc
mov
dec
mov
add
pop
idiv
xchg
cmpsl
mov
ds
inc
test
xor
sbb
outsl
jns
cmp
rcrb
test
icebp
add
sub
subb
xor
andl
sub
push
add
jp
xor
cmpsb
cltd
fisubs
or
or
test
aas
push
pop
scas
adc
arpl
sbb
mov
and
and
xchg
and
mov
jno
sub
sbb
rcl
out
mov
or
add
add
data16
lods
cld
mov
hlt
xor
insl
xor
add
pop
inc
inc
outsb
in
ficoml
hlt
add
push
xchg
mov
inc
jmp
and
pop
pushf
push
mov
inc
sbb
fstps
in
repz
and
mov
ds
dec
mov
fxtract
mov
sbb
pop
outsl
movsb
xor
call
cmp
mov
inc
add
push
add
scas
add
sbb
pop
popf
dec
std
xlat
int3
cltd
xorb
out
shll
fistl
dec
mov
xchg
add
negb
lea
das
out
pusha
out
testb
adc
cmp
mov
outsb
jb
clc
jb
aaa
loop
xor
lret
adc
adc
push
cli
insl
mov
add
cmpsb
mov
in
push
pop
dec
or
pusha
int3
call
rclb
rclb
cltd
imul
ret
xchg
jl
cmp
mov
jge
ds
push
mov
ret
dec
loope
jo
lock
pop
pusha
dec
jae,pn
xchg
loopne
cmpsb
dec
jne
jmp
mov
and
fimuls
pop
jmp
adc
lds
mov
inc
mov
sbb
pusha
aaa
ja
sbbb
aam
imul
jb
clc
pop
pop
dec
add
pop
ja
rcrb
icebp
cld
fwait
roll
aam
push
frstor
inc
or
popf
inc
movsl
lret
out
pushw
and
mov
dec
clc
cmc
in
mov
cmovne
sbb
sub
pop
mov
mov
jae
sub
js
adcb
insl
xchg
cmp
lea
clc
stos
xlat
movsl
mov
dec
into
in
shlb
pop
jnp
xchg
movsl
fs
mov
dec
lods
call
and
or
add
xchg
add
and
out
out
mov
ret
enter
add
push
mov
cltd
mov
cld
xchg
pop
mov
roll
or
scas
and
lcall
fsubl
mov
std
clc
mov
mov
icebp
mov
sbb
jb
icebp
call
mov
test
add
aas
stos
orb
push
and
sbb
push
sahf
cmp
pop
cmp
jle
jnp
add
or
repz
inc
lea
add
jns
sub
sbb
call
cmpsl
dec
sbb
dec
adc
push
ds
pop
jg
in
mov
je
inc
mov
insb
push
rorb
fs
mov
pop
push
lock
push
enter
stos
clc
and
cmp
fsts
aas
cmp
loope
and
dec
bnd
or
clc
mov
aaa
sub
andb
cmp
push
int3
dec
arpl
mov
push
xor
jmp
jne
xchg
clc
sub
rcr
shrl
push
pop
push
stos
addl
or
mov
rolb
into
scas
dec
push
dec
dec
in
into
movsl
pop
adc
and
xorl
imul
xchg
lods
xor
hlt
or
sbb
jl
ljmp
popf
pop
mov
xchg
mov
jae
cs
cli
adc
push
ficoms
push
filds
xchg
and
in
sbb
int
jl
or
nop
adc
neg
jmp
cli
and
cmp
enter
add
shr
fcmovnu
dec
fsubr
cmp
jnp
int3
gs
push
mov
pop
dec
sub
xor
ficoml
xchg
sub
add
stos
lcall
or
sub
scas
int3
fwait
pop
jns
mov
cmp
mov
lcall
mov
inc
add
cmpsb
cmp
addr16
jl
jecxz
mov
xchg
insb
jae
int
fnstcw
adc
and
adc
or
sbb
sub
shrl
adc
xor
repz
loop
jmp
mov
nop
repz
lret
jns
decl
stc
test
lret
pop
mov
scas
sbb
mov
cmp
add
test
pushf
pushf
jmp
out
cld
jns
adc
add
dec
xchg
inc
jg
push
int3
mov
insb
sti
adc
push
jne
iret
push
cmp
in
out
jo
int
jp
cmp
js
and
outsl
test
add
cmp
out
imul
cwtl
sbb
jg
es
inc
hlt
inc
shl
jae
mov
pop
jl
jmp
nop
or
or
xchg
mov
sbb
aaa
inc
sub
pop
jns
lds
shlb
int
pop
test
mov
clc
repz
xchg
mov
popf
jmp
jge
mov
push
xchg
jno
and
xor
inc
cmp
test
inc
cmp
lcall
xor
imul
xor
adc
lock
mov
jp
je
dec
jecxz
pop
stc
inc
mov
and
je
xchg
out
mov
enter
iret
or
adc
sbb
sub
inc
insb
push
inc
jno
and
lret
mov
xor
std
inc
testl
shll
movsb
pop
jns
lret
out
add
aad
pop
lea
xchg
fwait
inc
jno
dec
sbb
jl,pt
mov
in
cmc
push
arpl
fwait
lret
pop
mov
mov
push
sbb
or
movb
daa
dec
pop
mov
mov
cmp
lcall
jg
imul
sahf
and
sbb
je
ss
xchg
shrb
sub
test
jmp
mov
pusha
pop
push
fcmovnu
sub
mulb
push
movsb
or
std
outsl
pop
lahf
rorl
cwtl
shr
fisttps
dec
pop
mov
cmc
movsb
daa
push
adc
mov
sub
fmul
fmuls
les
push
fnstcw
push
orl
shll
or
push
iret
sbb
xor
cmp
xchg
hlt
xor
push
ret
cltd
push
in
cmp
sbb
cmpsl
xchg
push
movb
lods
or
fadds
mov
nop
pushf
adc
or
stos
push
mov
or
ficompl
lcall
add
vaddpd
lret
sbb
xor
jnp
xor
jg
dec
jnp,pn
mov
outsb
jb
and
lcall
pop
or
add
cmp
cmpb
add
mov
rorl
mov
ds
inc
xor
insl
in
aad
inc
scas
out
jmp
or
or
cld
mov
and
jmp
cmp
add
lods
add
add
je
xchg
push
jae
cmpsb
andl
call
xchg
xor
mov
dec
clc
mov
cmp
lods
push
sarl
insl
arpl
test
adc
jl
les
sbb
add
clc
lret
sub
fildll
push
sbb
pusha
scas
pop
fsubl
imul
mov
jo
loop
hlt
mulb
jp
addb
push
ret
js
cltd
pop
test
pop
mov
pop
add
push
dec
mov
sahf
cmp
sub
dec
test
and
insl
add
inc
push
cld
lret
insl
sbb
xor
xor
inc
mov
mov
sub
bound
mov
jg
push
push
sbb
paddusw
xor
shll
inc
mov
push
sarl
pop
lret
in
stos
shrl
sub
imul
jb
adc
ret
outsl
rep
ja
pop
in
xor
and
xchg
hlt
mov
xor
test
mov
mov
and
insb
add
mov
stos
movsb
hlt
add
xchg
adc
mov
cli
bound
or
or
xor
push
test
aaa
inc
enter
shrb
loopne
in
ja
or
add
lahf
push
cmp
outsb
cmpsb
sarl
arpl
subl
sbb
pusha
sub
pop
out
mov
inc
adcb
xchg
xchg
dec
outsb
ret
push
scas
mov
mov
loope
pop
jle
test
fildll
sub
xor
scas
sub
in
sub
xchg
lea
push
je
pop
adc
xor
cmpsb
jp
mov
pop
fs
lahf
repz
pop
in
add
loopne
stc
add
and
add
addr16
cmpsb
lods
adc
icebp
imul
and
int
xchg
and
outsb
and
f2xm1
fbld
pop
andb
add
add
adc
dec
adc
popa
pop
or
rcll
dec
or
inc
sti
lods
das
and
adc
push
mov
pop
mov
cmp
decl
inc
call
imul
bts
fcoms
cltd
mov
sar
inc
je
xchg
in
insb
inc
and
mov
loop
out
dec
mov
pop
jns
sbb
into
push
mov
out
jno
sub
or
jbe
repz
test
inc
in
pop
fldt
out
mov
adc
stc
fdivl
lret
cltd
lods
pop
leave
add
lcall
pop
fmull
or
pop
lret
add
sbb
mov
fwait
add
ljmp
aas
stc
aas
sub
fistps
or
cmp
add
scas
mov
mov
mov
aad
in
stos
sbb
sbb
adc
mov
repz
call
lcall
sbb
jne
mov
cs
daa
mov
icebp
inc
arpl
sbb
cmpsl
sub
out
push
and
jl
hlt
fdivs
xchg
ret
repnz
mov
cmpsl
mov
test
sti
sbb
or
movsb
inc
jmp
mov
and
lods
call
add
lret
test
sbb
dec
fisubl
jg
jno
add
lods
add
add
add
push
xchg
xchg
push
or
mov
div
inc
int3
and
add
xor
sbb
push
jne
aam
int
dec
jo
xchg
add
das
jo
rcll
dec
push
sbb
aas
pop
mov
inc
sbb
jae
out
xchg
mov
fsubl
movsl
jne
add
xchg
mov
lods
inc
push
jge
xor
mov
xchg
out
out
jnp,pt
xor
cli
fwait
and
push
add
repnz
or
ss
adc
push
mov
jmp
pop
pop
lock
xchg
push
movsl
cmp
push
insl
mul
or
in
call
out
or
outsb
xor
scas
pop
fstl
negb
sbb
popf
dec
adc
mov
sbb
mov
mov
scas
sub
push
push
mov
push
aas
fmul
scas
lds
in
mov
jle
sub
jge
in
xorb
jmp
out
cli
add
cli
and
test
out
ss
cltd
push
aam
xchg
inc
cmp
add
dec
mov
and
adc
cmc
ljmp
lahf
scas
xor
push
xchg
cltd
sub
dec
push
out
aad
fidivl
ret
or
xchg
mov
loope
push
popf
rol
fidivl
test
aas
int3
cwtl
je
xchg
xchg
or
int3
iret
xor
repnz
cmpl
mov
aam
sbbl
ljmp
cmp
test
js
inc
repz
xchg
cmpsb
push
outsb
add
push
aaa
clc
or
dec
sti
mov
sarb
sbb
cmc
pop
outsl
popf
movsl
inc
loope
lea
jnp
jecxz
aaa
out
daa
mov
pop
popf
sar
pop
movsb
stos
and
shr
ljmp
jecxz,pn
sti
mov
ret
repnz
int
stos
dec
sbb
loope
loopne
mov
pop
cs
int3
or
mov
sbb
pop
mov
in
xor
lret
ficoml
outsl
fsubr
lea
and
daa
xchg
xchg
pop
sub
jge
repnz
jns
sub
mov
jle
das
ror
sub
fwait
mov
lods
mov
clc
mov
pushf
or
xchg
bound
inc
jg
jno
aad
idiv
ja
fisubrs
clc
push
xchg
shlb
inc
imul
mov
lods
lea
lods
add
pushf
cli
pop
jge
mov
add
and
push
add
or
int3
movsl
xor
sbb
std
jae
adc
and
into
ret
mov
call
ficoms
in
dec
pop
int
outsb
scas
add
mov
and
int3
jno
filds
pop
movl
repz
ret
lock
dec
out
jecxz
cs
jle
sarb
sub
mov
pop
add
daa
gs
pop
inc
mov
out
push
movsb
je
dec
mov
hlt
adc
stos
ret
arpl
mov
shrb
mov
daa
into
dec
jb
push
dec
jge
inc
jle
dec
mov
mov
push
negl
adc
jmp
test
arpl
push
pop
jno
mov
pop
cs
cmp
out
xchg
popf
aam
ljmp
adc
mov
lds
bound
jecxz
dec
sti
sar
cmp
xlat
mov
test
mov
push
mov
stos
add
lods
ljmp
add
add
add
mov
sbb
call
out
inc
dec
add
sub
inc
add
lods
add
add
pop
mov
pop
int
xor
dec
incb
call
repnz
jae
test
inc
repnz
dec
sub
pop
xor
hlt
lods
jno
xchg
xor
scas
in
cltd
pop
xor
ret
fsubr
sahf
inc
push
dec
adc
xchg
and
negl
daa
fs
inc
sbbb
jg
loop
pop
out
loopne
mov
pop
fwait
test
fists
clc
xorl
push
adc
adc
xor
xor
mov
pop
push
mov
sbb
cmpsl
in
js
pop
pop
adc
sub
add
rolb
push
pop
inc
mov
inc
fsubr
arpl
fimull
je
sti
test
sarl
mov
loope
iret
mov
popa
movsb
hlt
js
cmp
sbb
xchg
in
inc
xchg
mov
mov
mov
nop
fldenv
fmull
out
xchg
outsb
xchg
popf
cwtl
lahf
jnp
clc
lock
pop
fxam
xchg
clc
sbb
xor
aas
add
fldcw
test
or
leave
fcomps
rclb
pop
xor
mov
mov
aas
pandn
inc
adc
icebp
sbb
xor
sbb
into
out
and
xor
pop
hlt
cltd
lea
in
cmp
lahf
cmp
pop
mov
sub
stos
cmp
sub
sub
les
xchg
cmp
cli
daa
pop
xor
cs
aam
mov
push
cwtl
adc
pushf
in
test
and
movsl
rcl
mov
push
leave
push
mov
sbb
inc
hlt
sub
dec
mov
stos
jl
dec
lahf
cltd
fnstcw
stos
imul
lcall
fadd
sub
in
dec
ret
testb
addr16
pop
out
cmp
jae
filds
add
mov
mov
pop
movsb
add
cld
push
mov
push
push
cld
adcl
loope
push
loop
mov
sub
dec
movsl
add
addr16
popl
ljmp
inc
loop
sahf
mov
mov
or
fdivr
mov
rcrl
xor
shld
mov
stc
leave
cs
lcall
inc
xchg
jnp
jg
mov
cmp
and
cmpsb
pop
test
pop
sub
inc
sbb
rcrb
jle
adc
stc
and
push
out
fldlg2
cmp
sub
mov
adc
mov
cld
pushf
adc
ljmp
je
pop
inc
pop
fldenv
cmp
test
push
jno
in
pop
adc
ljmp
add
inc
shll
sub
stc
or
cmc
add
jle
inc
idivl
push
dec
jbe
push
outsl
data16
in
inc
jb
pop
loopne
add
and
out
aad
and
mov
and
pop
je
pushf
or
sub
pop
popa
sahf
es
lret
mov
and
fwait
jnp
ret
sti
shll
daa
je
mov
mulb
fwait
sbb
stos
pop
mov
imul
fists
and
jge
jne
xor
in
fsts
lock
adc
outsl
fwait
loopne
pop
and
aad
clc
mov
jbe
rcl
push
inc
out
or
push
les
adc
f2xm1
leave
lahf
popa
pop
cmp
jnp
cmpsb
mov
pop
mov
dec
leave
or
add
or
outsl
xchg
inc
add
lods
add
add
push
cltd
xor
loope
push
xchg
lret
insb
push
cs
push
mov
cmc
test
xor
xor
negb
stc
and
pop
iret
fstpl
dec
xchg
rolb
jo
pop
mov
mov
sbb
shll
jl
call
push
adc
xlat
pop
jp
dec
out
addl
imul
inc
imul
and
add
test
mov
imull
rcrb
dec
aam
in
and
xlat
xchg
stos
inc
sahf
xor
pusha
sub
adc
mov
call
aad
mov
inc
add
inc
frstor
lret
dec
mov
dec
jnp
add
dec
test
add
or
lcall
xor
scas
mov
clc
inc
in
lahf
sub
pushf
inc
pop
dec
icebp
jb
out
jae
jae
in
lods
pop
fwait
lods
sub
xor
jmp
inc
xor
stc
xchg
sbbl
xor
cwtl
pop
mov
xor
test
gs
ficomps
call
jne
sbb
repnz
inc
xchg
ret
andb
and
sbb
leave
lds
dec
in
imul
loopne
shll
lcall
sahf
jbe
push
negb
xchg
pop
mov
scas
addr16
pop
xchg
pushl
loop
or
add
sti
enter
loop
loopne
shlb
pusha
xor
sub
icebp
fistl
push
xchg
scas
mov
inc
cmp
in
loop
mov
cli
mov
push
mov
ret
icebp
out
out
aas
adc
mov
mov
cmp
mov
ds
ljmp
inc
cld
outsl
sub
flds
lret
mov
das
inc
push
loopne
lds
sbb
add
imul
sub
push
cwtl
testl
icebp
ret
cs
das
jecxz
or
sub
sub
clc
push
sahf
leave
xchg
inc
jle
push
sub
inc
imul
sbb
cld
jnp
sti
fidivrs
xchg
xor
hlt
outsb
pop
jnp
inc
pop
xchg
sbb
xchg
pop
jbe
jae
sahf
test
xchg
jb
scas
fcmovnbe
pop
mov
sub
adc
shll
andb
mov
shr
dec
out
sbb
lret
mov
fmull
ss
out
jle
adc
sub
rorl
jecxz
add
push
pop
dec
mov
fsubs
insl
cld
push
popa
cwtl
lret
lea
test
mov
sarb
sbb
test
inc
fwait
push
lds
sbb
mov
xchg
mov
cmpsb
push
test
adc
out
cmp
mov
sub
clc
inc
lock
sub
or
lods
xor
loop
negl
mov
jg
aad
jbe
mov
mov
into
sbb
mov
xor
mov
test
or
lods
mov
test
cmp
mov
ljmp
mov
xchg
dec
insb
insb
and
fs
inc
addr16
test
idivb
repnz
fwait
gs
sarl
jl
mov
scas
xchg
sbb
pop
mov
or
xchg
push
lods
adc
cmc
adc
aam
repnz
ljmp
jne
jnp
faddl
xchg
cltd
ja
out
out
cltd
ja
daa
xor
jne
add
lods
add
add
cmp
or
jno
or
dec
jne
addr16
inc
mov
lods
ror
je
pop
jl
repz
pop
into
dec
push
push
inc
lock
cld
popa
mov
mov
inc
andl
xchg
shlb
xchg
enter
imul
cmp
add
mov
and
fyl2xp1
jp
jbe
xchg
clc
and
lcall
jno
jge
mov
dec
sbb
pop
xchg
inc
loopne
push
pop
and
inc
xchg
fisttpl
rcll
das
jbe
xchg
test
pop
adc
js
pop
out
outsb
dec
push
adc
mov
inc
sbb
ret
popa
test
dec
sub
lea
xchg
int3
adc
insl
aaa
cmp
js
stos
sbb
notb
lret
adc
mov
pushf
loope
frstor
dec
adc
fs
pop
nop
push
pop
int
xchg
test
iret
std
xchg
adc
push
lret
js
and
xchg
mov
imul
inc
adc
inc
mov
insl
mov
xchg
pop
ds
dec
ss
mov
jg
movsb
push
xor
repnz
int3
jecxz
push
scas
cmp
mov
or
iret
stos
imul
jne
sub
cmp
insb
xorl
push
scas
aaa
lds
mov
icebp
pop
push
cmp
push
mov
inc
enter
lds
clc
popf
daa
xor
loope
jo
or
sbb
xchg
arpl
inc
cmc
or
dec
jo
lods
and
and
cmp
out
mov
pop
je
sbb
shll
push
mov
mov
fs
jecxz
jb
push
mov
dec
mov
insl
push
xor
inc
adc
lcall
add
es
std
fisubrs
js
aad
mov
pusha
shlb
subl
out
fimuls
into
sbb
mov
cmpsb
iret
mov
push
div
ljmp
mov
test
pop
je
loope
int3
push
int
sub
inc
dec
test
arpl
or
loop
add
mov
inc
or
inc
fimuls
pop
mov
jno
ja
jno
pop
push
add
jp
lcall
faddp
cli
mov
cmp
imul
cmc
jg
push
xchg
push
int
paddw
repz
popf
call
stos
cltd
push
pop
pusha
test
pop
enter
jne
ss
xor
or
outsl
sbb
out
lock
inc
xchg
arpl
popa
fsin
dec
fldl
bnd
loopne
and
in
movsl
in
ds
xor
dec
xchg
stc
mov
testb
leave
and
mov
lret
adc
push
fs
imul
testl
hlt
dec
add
xchg
mov
icebp
adc
stos
out
adc
or
sbb
or
mov
sbb
xchg
cmp
lret
cmp
cli
cli
jb
mov
or
or
mov
dec
add
mov
dec
jo
bound
pop
sub
add
mov
test
mov
sbb
or
outsb
inc
mov
arpl
jo
add
scas
jp
rcrb
pop
pop
ja
lods
push
xchg
inc
mov
loop
aad
push
dec
add
lods
add
add
and
in
sti
pop
dec
cmpsb
pop
repz
lock
fcoml
test
mov
rorb
ja
stos
push
xchg
addl
or
push
dec
imulb
lcall
ljmp
adc
in
and
leave
jmp
jb
sub
mov
fildll
bnd
ret
push
sub
mov
out
in
push
in
outsl
cmp
int3
aas
adc
jge
dec
daa
and
xchg
scas
mov
sbb
fldt
xor
cmp
cmp
xlat
push
mov
insb
pusha
and
adc
imul
stos
rcl
cmp
daa
fsubs
shlb
test
mov
inc
add
sub
pusha
insl
decb
cmp
pop
dec
jb
fldenv
scas
cmp
test
daa
outsl
dec
cmp
push
inc
inc
push
jae
cmp
dec
push
sub
pop
scas
popa
pop
icebp
loope
mov
add
fisttps
aam
shr
jle
jge
pop
dec
add
adc
mov
inc
push
data16
movsb
neg
fsts
and
dec
sub
sbb
daa
add
popa
into
into
push
jnp
mov
and
out
imul
xor
out
mov
jge
imul
inc
add
insb
cld
out
inc
sub
out
mov
mov
inc
push
lds
hlt
jns
or
jmp
mov
out
movsl
adc
mov
mov
int3
cli
mov
repz
lcall
xor
dec
pop
fstpt
jns
outsl
xor
mov
movaps
ds
cmp
jno
pushf
lods
mov
test
stos
sarb
js
inc
or
gs
shlb
push
mov
adc
lret
jno
add
mov
adc
or
mov
fucomp
mov
adc
xchg
bound
push
sub
add
inc
mov
repz
mov
mov
mov
ljmp
add
into
call
xorb
sahf
push
rcr
iret
rcrl
aaa
in
push
and
mov
or
sub
or
dec
mov
popf
in
push
adc
cmp
push
jno
lds
mov
das
mov
add
test
stos
add
loopne
sbb
hlt
push
sub
or
xor
addr16
pop
inc
xor
xchg
pop
mov
pop
in
je
mov
bound
xlat
adc
js
dec
and
dec
int3
jle
lock
ss
lods
mov
jo
lods
xchg
ss
pop
push
jns
into
mov
cmp
mov
cs
loopne
outsb
shlb
xchg
add
aas
dec
sbb
dec
cmc
mov
rorl
arpl
daa
into
xchg
xchg
or
push
mov
aam
mov
jne
fwait
int3
mov
jno
mov
sbb
cmpl
mov
push
sub
bound
push
fs
stc
neg
sub
outsb
add
ficompl
jne
in
enter
sub
into
outsl
pop
mov
jnp
leave
inc
and
add
add
stc
mov
stos
adc
adc
int
add
lods
add
add
jl
push
mov
imul
enter
repnz
sahf
push
dec
ret
insl
mov
or
ret
stc
mov
test
jmp
cmpb
xchg
int3
icebp
cmc
shll
mov
cs
scas
inc
loopne
into
in
pushf
pop
lcall
sbb
subb
in
add
jae
call
repnz
and
int
fadds
xchg
adc
cwtl
dec
mov
mov
mov
int3
stc
mov
ljmp
cmp
sti
cmpsb
loopne
and
pop
lret
xor
fnstenv
mov
not
sbb
mov
imul
pushf
or
rorb
xchg
mov
popa
icebp
sti
and
int
mov
mov
jbe
xchg
pop
scas
out
insb
mov
in
pop
fst
pop
jmp
cmp
mov
xlat
imul
icebp
adc
call
adc
inc
mov
jg
push
dec
push
testl
addr16
sub
cli
out
mov
sbb
xchg
jp
cmpsl
rorb
dec
loop
dec
push
lock
add
dec
adc
add
jb
decl
cs
mov
adc
mov
fwait
xlat
jnp
mov
lret
push
lods
sbb
mov
popf
inc
out
push
pop
mov
dec
rcll
aad
repz
cmp
enter
add
add
aas
or
jo
cmp
pushf
jne
fisubrs
movsl
xchg
add
jns
fwait
sbb
popf
loop
add
fcompl
add
mov
shrl
jo
filds
int
fst
jne
lds
mov
mov
xor
test
sbb
xor
fdivp
push
mov
mov
loop
add
or
inc
dec
rorl
fsub
sub
mov
out
out
jne
sbb
je
adc
jp
cs
push
and
fisttps
shrb
dec
shrl
int3
stc
cmc
pop
mov
mov
mov
lcall
or
jmp
out
daa
push
adc
mov
jae
lcall
xchg
cmp
sti
repz
mov
inc
or
jno
mov
leave
mov
ljmp
add
sbbl
inc
adc
push
jmp
mov
aaa
idivl
pop
xor
dec
and
push
cmp
mov
add
std
call
sbb
ljmp
lods
lcall
ret
dec
mov
jno
xor
inc
fcoms
ret
popw
xchg
ljmp
inc
xor
aad
inc
jp
fstpl
ds
imul
pop
loopne
stos
bnd
and
stos
lds
mov
lea
dec
mov
add
dec
jne
push
std
cmc
add
pop
insl
testl
xchg
int
js
nop
shlb
jecxz
adc
sub
pop
sbb
lea
data16
and
sub
je
xor
fidivl
ss
insb
mov
fistps
pop
mov
cmp
jp
mov
pop
jl
pop
add
shrb
mov
into
into
and
cld
xlat
dec
call
adc
or
add
push
aad
mov
add
imul
sub
cli
into
mov
mov
repz
xchg
and
ljmp
adc
loope
push
scas
es
js
cvtdq2ps
cmpl
cwtl
cmpsb
rcrl
mov
jne
jl
negl
out
pop
cmpsb
push
gs
sub
mov
lcall
push
and
mov
jge
cmp
mov
jmp
int3
lods
lcall
test
fcomps
loopne
ret
xchg
cmpsl
or
fisttpll
punpckhdq
loope
add
cmp
dec
mov
adc
add
mov
sub
jb
clc
push
and
mov
jns
sub
pop
cld
insb
cmp
mov
insl
scas
test
hlt
jne
les
loopne
mov
xlat
mov
scas
push
jge
out
aaa
aam
mov
sub
sbb
cmc
adc
iret
push
jnp
mov
mov
pushf
mov
mov
cwtl
dec
gs
mov
sbb
imul
xchg
mov
out
testl
push
sub
cmp
int3
and
mov
ret
mov
dec
popf
jg
rcr
push
in
jp
daa
decb
lahf
mov
mov
out
mov
add
lock
push
bound
into
loope
or
inc
cmc
sbb
gs
lods
mov
movl
int3
adc
fisubrs
test
inc
mov
adc
mov
sbb
or
push
xor
xor
inc
icebp
out
cmp
mov
cltd
mov
lcall
or
lods
mov
mov
or
movlps
pop
addb
adc
xor
jecxz
mov
lahf
mov
cmpsl
jp
and
aaa
in
aaa
push
or
subl
stc
jb
les
xchg
mov
inc
cltd
or
cli
arpl
rcrb
in
xor
cmp
enter
scas
sbb
daa
bound
lcall
pop
adc
cmpsl
mov
and
lret
xlat
push
mov
push
pop
add
cmp
push
push
mov
cmpsl
push
mov
mov
add
pusha
dec
xchg
pop
into
add
or
repz
aas
lret
fimull
adc
mov
jl
das
push
je
pop
and
mov
cmpsl
loopne
or
and
hlt
es
inc
cmpsl
aam
int3
mov
fidivrl
sti
ja
cld
or
push
repnz
icebp
shrl
movl
aam
fwait
pop
dec
nop
rcll
mov
cmp
cltd
jecxz
add
shll
roll
cmpsl
adc
iret
xchg
xor
add
dec
aaa
xchg
cli
mov
stc
btr
gs
insb
in
mov
movsl
xchg
add
ljmp
repnz
clc
jmp
add
mov
adc
clc
test
pop
dec
imul
jno
xchg
xor
mov
and
out
sub
mov
mov
mov
cmp
gs
inc
ljmp
jns
es
or
movsb
fsts
test
outsb
inc
xchg
sti
or
jb
add
push
inc
popf
push
in
pop
cmpsb
sbb
out
les
xor
jg
mov
cmpsl
add
or
inc
inc
out
jnp
mov
cmp
lret
add
lods
add
add
cld
stos
stos
push
pop
loope
enter
out
loopne
pop
stos
insb
pop
pop
push
in
adc
mulb
loop
data16
lock
test
je
sbb
sub
mov
adc
xlat
daa
adc
sti
scas
lret
or
push
push
aas
adc
lret
xchg
pop
sub
xchg
push
xor
out
jle
mov
jg
in
jle
test
rcrb
xchg
mov
mov
adc
add
popf
or
scas
in
popf
push
sub
ja
jl
test
sbb
push
mov
inc
es
adc
aam
push
fists
mul
mov
xor
inc
shll
std
fsts
sub
xor
movsb
xchg
jle
insb
fcmove
jae
aas
out
mov
mov
push
jp
xchg
jle
xorl
cmpsl
fidivrs
pop
int
idivb
repz
adc
cmp
ret
xor
stos
jbe
push
cli
cmp
aad
imul
sahf
cwtl
xchg
push
rolb
stc
js
xor
mov
pop
push
sbb
scas
adc
aaa
in
lcall
add
int3
sarl
rorl
inc
lret
jns
push
xchg
xchg
mov
inc
loope
je
mov
iret
ret
rcl
in
and
pop
ret
in
dec
imul
or
sti
movlps
xchg
jl
in
in
inc
nop
inc
loop
cltd
inc
sbb
xor
mov
push
or
es
inc
aas
and
fdivrl
xchg
inc
pop
pop
dec
mull
sub
in
leave
sub
shlb
xor
push
pop
sarl
aas
mov
push
xchg
jo
decl
test
inc
insb
cmp
mov
mov
rolb
ret
and
pop
sub
jecxz
inc
pop
ljmp
mov
and
addr16
outsb
rcll
sbb
stos
ret
jb
je
out
fistpl
cmp
in
stc
pushf
cmp
jnp
jg
cmc
inc
sbbl
sub
fcoms
cmp
mov
lret
xchg
test
xchg
call
or
rcrb
lock
pop
pusha
popf
pop
aas
andl
lock
pop
sbb
push
stc
add
dec
leave
push
ds
pop
nop
arpl
add
pop
call
sub
rcrb
mov
int
dec
sahf
sub
cmp
dec
hlt
insl
xchg
or
test
sub
sbb
test
xor
pop
push
jg
popf
test
jl
adc
mov
sub
imul
xchg
pushf
test
cmp
movsb
loopne
out
lea
and
into
cmp
pop
mov
pop
filds
repz
xchg
cvtpi2ps
push
mov
outsb
mov
pop
cmp
jle
shl
ret
fisubl
insb
dec
push
mov
jg
mov
sbbl
and
xor
aas
sbb
add
push
push
mov
dec
popf
or
leave
movsl
mov
popa
jle
or
jmp
sbb
dec
int3
ds
dec
dec
jle
lahf
push
cwtl
inc
dec
cli
cld
addr16
sbb
or
xchg
add
push
movsb
inc
push
fadds
jno
push
loopne
lret
rcll
adc
test
insb
adc
push
mov
cwtl
lahf
adc
jg
jns
pop
sbbb
into
adc
pop
add
lods
add
add
test
inc
stos
cmp
mov
pop
add
fsubr
cmp
fxch
paddusw
in
repnz
mov
inc
adc
jb
das
into
in
int3
sbb
lods
add
in
sti
arpl
jmp
roll
jp
dec
popf
icebp
insl
repz
add
xchg
adc
push
sub
mov
nop
ds
popa
pushf
insl
mov
cmpsl
lock
cli
mov
mov
jg
cmp
dec
push
les
je
cmp
dec
jp
mov
inc
mov
jne
mov
addl
lods
fimuls
mov
lds
movsl
xor
in
js
repz
inc
cmc
cmc
mul
call
xor
xor
mov
test
jmp
xor
and
mov
sub
mov
inc
or
or
fidivrs
mov
imul
sbb
and
cmpsb
xlat
in
sti
hlt
push
scas
xchg
lea
out
mov
add
inc
push
inc
stos
inc
idiv
adc
sti
dec
lock
fs
subps
sub
xchg
push
xchg
mov
jo
fwait
sti
mov
outsb
lock
pop
sub
inc
dec
fsub
out
pusha
imul
imull
mov
shlb
mov
into
movsb
loope
cli
cli
xor
dec
mov
loop
mov
mov
xchg
pop
sub
rcrl
test
fists
movsl
nop
scas
cmp
call
dec
adc
shr
std
loop
cli
xor
mov
or
xlat
cmpsl
push
push
pop
ljmp
imul
je
dec
cmpsb
inc
or
pop
sbb
xchg
and
pop
imul
popa
shrb
and
lcall
aam
mov
lods
test
in
and
ljmp
jp
dec
inc
lcall
inc
stos
jge
pop
cmpsb
xchg
dec
subb
bound
movb
les
fists
mov
ds
xchg
and
mov
aad
aaa
loope
mov
pop
mov
je
mov
sub
fs
andl
fstpt
jg
sub
jno
jbe
icebp
inc
pop
imul
leave
cmp
lret
loop
and
pop
into
nop
ret
xlat
add
jmp
out
shrl
call
xor
mov
jmp
movsb
cmp
mov
fstpl
lds
loope
jb
jle
mov
xchg
fsubl
mov
jne
out
cmp
add
lock
test
fistpl
push
jae
arpl
out
sar
mov
jp
or
imul
mov
inc
fcmovnb
outsb
shrb
mov
sbbb
push
xchg
das
dec
sti
jg
push
jmp
xchg
adc
jecxz
jle
jne
outsb
outsb
das
and
mov
inc
repz
push
and
sub
hlt
imul
outsb
jle
in
lods
dec
xor
xchg
fistpl
movsl
mov
stos
out
lods
pop
lcall
pop
mov
cs
divl
push
pop
jle
ret
fdivrl
negb
pop
lea
xor
push
mov
loope
in
add
outsl
ljmp
and
aam
inc
fstl
and
dec
arpl
add
add
mov
notl
pop
xor
jmp
lods
add
add
pushf
cli
imul
or
mov
jnp
popf
xor
popa
jno
and
je
jge
xor
test
shlb
popf
lcall
rcl
divb
and
sub
iret
push
pushf
and
pusha
mov
xor
cmp
ljmp
jae
bound
fucomip
dec
or
insb
and
sbb
cmp
inc
pop
dec
push
ret
push
xchg
sub
inc
inc
pop
je
or
push
pop
lret
mov
jb
or
push
dec
roll
dec
int
out
cmp
or
shll
inc
xchg
cmpl
xchg
fldl2e
scas
or
insb
imul
int3
or
cmp
test
stos
lea
rcll
dec
push
in
mov
out
lret
aas
lock
or
ret
xchg
insl
ret
outsb
mov
pop
cmp
xor
iret
inc
inc
sub
iret
or
clc
or
std
cs
xchg
xor
pop
cmc
imul
jne
mov
xor
sbb
jnp
into
mov
jb
sub
mov
add
movsb
dec
iret
lods
cltd
lock
dec
inc
dec
idivb
aad
ret
or
sub
mov
mov
int3
xchg
cmp
idivl
mov
fcmovnbe
lock
ror
jl
and
cld
fcoml
add
xor
cmp
aas
sbb
ss
int3
jmp
jmp
pop
scas
inc
inc
into
xchg
jecxz
push
out
jmp
lcall
adc
ljmp
mov
clc
mov
jb
ljmp
dec
mov
subb
jnp
jnp
pop
rcrb
sar
cmp
mov
inc
mov
stc
xor
mov
and
fmulp
mov
jbe
push
in
lock
add
dec
xchg
push
outsl
jbe
sbb
out
mov
aam
outsb
mov
scas
mov
sbbl
aaa
sub
pushl
inc
sbbb
adc
es
xchg
pop
rorb
mov
add
ret
adc
fldl
lods
shlb
shlb
adc
lods
fxch
inc
and
stos
loopne
dec
decb
fidivrs
enter
aas
or
mov
mov
xchg
shrb
adc
cmp
fmuls
push
cmp
mov
cmp
fxch
das
cmp
fsub
nop
fisttps
std
mov
je
fsubrs
in
mov
fstl
cmc
js
jns
test
sbbb
sub
lds
mov
sub
push
shlb
adc
stos
shr
pop
cmp
xor
sti
mov
ss
lret
adc
lahf
loopne
pop
cld
fnstsw
stc
xchg
dec
dec
jns
dec
stos
dec
mov
push
xor
mov
mov
inc
xor
pop
out
enter
fidivrl
dec
sub
test
sub
outsb
push
mov
daa
pop
xchg
cld
xchg
cmp
jl
es
pop
jl
and
inc
push
sub
gs
pop
lahf
xor
pop
and
addr16
pop
idivb
xor
lret
outsl
lcall
ret
bound
pop
hlt
inc
sub
inc
and
jge
hlt
sub
sti
lods
or
jmp
mov
lods
add
add
cmp
mov
loop
aam
mov
test
daa
xchg
stos
ficoms
xchg
out
std
push
rcrl
pop
push
divb
and
mov
adc
les
je
ljmp
and
xor
fimull
pop
mov
dec
mov
cmp
xor
sbb
lods
dec
daa
jno
add
repnz
aas
add
xchg
mov
and
add
mov
inc
aaa
push
or
subl
popa
movsb
cmp
pop
out
xor
jns
sahf
jl
xor
sbb
das
test
hlt
xor
leave
rcll
test
and
pop
and
pop
pop
repz
popf
es
xchg
cmpsb
imul
push
push
cwtl
insb
jp
pop
inc
hlt
testl
and
push
in
mov
outsl
movsb
mov
and
add
or
jecxz
mov
push
jmp
in
add
pop
and
xor
rcr
cmp
xchg
add
cltd
gs
mov
movsb
lock
mov
push
call
testb
cld
or
fsubrs
pusha
xchg
test
pop
insl
adc
xchg
xchg
das
mov
fists
inc
adc
lea
in
sub
sub
movsb
cmp
shll
inc
fmulp
xlat
dec
fadds
sbb
sbb
sysret
scas
bound
xchg
mov
push
mov
jl
mov
mov
jp
sbb
inc
int
int3
mov
lods
mov
in
jae
lds
mov
in
or
push
shrl
sahf
adc
sub
mov
adcl
in
mov
cmpl
idivb
xchg
xchg
add
push
bound
ss
mov
xor
arpl
out
or
add
mov
cwtl
jmp
xchg
stos
iret
movsl
add
jno
stos
mov
jns
and
stos
add
or
fimuls
nop
aad
xor
movsb
mov
xor
and
sub
clc
mov
leave
rcrl
ret
icebp
icebp
xor
pop
outsl
lcall
jbe
inc
clc
adc
out
int3
fnsave
mov
dec
ja
mov
mov
sbb
ljmp
jecxz
movsl
inc
out
cs
addr16
push
jmp
into
das
xor
lock
mov
movb
xchg
nop
push
pop
jge
pusha
movsb
fildl
mov
dec
jno
add
mov
mov
stos
mov
jecxz
imul
fstpl
sbb
pop
lret
shlb
sbb
push
lods
fsts
xor
imul
pop
stos
jecxz
addb
cmpsb
push
loop
out
mov
ljmp
cli
mov
js
out
sbb
adc
popa
lret
aas
rcrl
int
test
push
cli
xor
sysexit
les
aaa
ret
xchg
pop
push
cs
cld
inc
add
and
adc
xchg
jb
scas
pop
int
cmc
fisttpll
sub
push
sub
jmp
imul
or
test
mov
clc
mov
fsub
inc
mov
arpl
pop
insl
scas
fdivrs
pop
jno
jle
in
push
cld
cs
repnz
add
xor
cmc
mov
add
int3
pop
das
shll
cs
clc
and
ds
and
shrb
adc
add
subb
fidivl
test
ja
inc
pop
mov
rorl
lds
adc
mov
mov
cmpsb
lods
cmp
rclb
std
dec
inc
negl
shl
subb
cltd
adc
mov
int3
pop
push
push
add
xchg
nop
jb
xor
ret
jmp
mov
popf
pop
jns
jge
inc
fadds
aad
mov
dec
push
ljmp
jmp
or
adc
scas
mov
mov
jl
pop
mov
lcall
aas
stc
push
cs
gs
add
cltd
mov
mov
sub
out
pop
dec
push
cld
movsb
dec
repnz
scas
sti
push
push
inc
shlb
aam
arpl
mov
rcl
and
sub
adc
cmp
orl
mov
xchg
push
ss
push
in
fwait
arpl
pop
fwait
or
sub
ja
fidivrl
adc
mov
in
cmp
lret
ja
jg
pop
loop
std
movsb
cmovg
mov
adc
add
aaa
and
stc
mov
cmp
jo
xlat
sbb
divl
daa
xchg
push
negl
test
fisubl
out
lea
cs
sbb
pop
pop
push
test
and
insl
leave
les
add
in
les
jl
adc
call
ds
es
outsl
pushf
jbe
icebp
shll
test
jecxz
fs
stos
mov
movsb
mov
sbb
mov
jmp
jno
xchg
int3
shlb
jo
adc
inc
pop
xor
pop
mov
fwait
test
fs
xlat
mov
rcrb
mov
test
shrb
aad
add
xchg
cltd
push
out
jno
inc
inc
pop
sub
xchg
pop
fs
cmpb
adc
lock
mov
inc
xchg
pop
fs
nop
xor
or
mov
xchg
int
jg
jmp
xor
out
js
andl
mov
sbb
dec
lret
mov
arpl
repnz
xchg
sbb
pop
inc
xchg
movsl
dec
push
aaa
test
testb
mov
xor
test
cwtl
or
sbbb
xor
jg
add
mov
mov
bound
dec
jns
pop
jb
rorl
sbb
in
adc
lods
jo
ss
mov
invd
stos
dec
call
lds
lret
inc
loopne
fisubrl
das
push
popa
push
mov
in
add
xor
mov
js
fidivl
cli
push
adcb
cmp
lret
mov
movsb
lret
sahf
adc
testb
les
or
fmul
add
imul
pop
outsl
dec
jnp
outsb
lods
data16
lea
jge
mov
cmp
adc
xchg
sbb
mov
dec
push
mov
aaa
and
mov
jg
sbb
xor
insl
sbb
pop
or
mov
sub
and
add
mov
mov
add
lods
add
add
dec
loop
loop
je
mov
jl
sbb
mov
std
ds
movsl
les
test
mov
adcb
ljmp
dec
in
iret
movntq
out
or
cwtl
mov
orb
sub
and
pop
sbb
out
insl
popa
dec
xor
dec
mov
xchg
push
loope
fimull
fs
fdivs
inc
sub
imul
andl
cmpsl
cmpsl
test
push
pop
outsb
aas
lds
movsb
test
pop
out
mov
dec
js
insb
inc
dec
test
es
xchg
sbb
or
xchg
inc
xor
insl
cmc
and
fsts
push
mov
xlat
pop
push
adc
mov
out
sub
mov
push
test
flds
jl
mov
cli
and
xchg
adc
jae
push
cltd
inc
xchg
test
sbb
lcall
test
or
enter
cmpb
sarb
cmp
jecxz
sbb
adc
cmp
add
pop
xchg
and
stc
pop
jns
sub
mov
fildl
add
data16
mov
pop
fucomp
jecxz
and
icebp
testl
jl
push
ja
pop
addr16
pop
cmp
push
jg
push
xor
and
and
dec
xchg
xchg
sahf
aad
sahf
sbb
or
ret
popf
xlat
adc
xchg
push
mov
popa
stc
sub
ds
aad
mov
or
push
shll
sbb
inc
sub
in
stos
xchg
xchg
mov
aas
ss
mov
add
inc
jp
xchg
push
jp
push
enter
xchg
jae
cmp
lds
jg
movsb
imull
jmp
aad
outsl
dec
push
sub
dec
fadds
xlat
pop
adc
das
sbb
mov
push
jp
gs
mov
stc
mov
arpl
dec
adc
push
outsb
cmp
push
fistl
popa
mov
aas
xchg
fldl
xchg
fistpll
outsl
push
sub
rcrb
insb
jp
xchg
sbb
cltd
loope
jno
mov
popf
xor
ljmp
into
mov
mov
in
jecxz
movsl
or
jbe
mov
push
pop
pushf
push
inc
add
or
xor
decl
jb
push
xor
mov
bound
repz
xchg
and
push
cmp
dec
test
mov
xchg
lods
insb
pop
or
cmpsb
out
jne
vhaddps
out
cmovg
bound
stos
ljmp
and
iret
inc
adcl
push
or
aaa
loopne
imul
mov
xchg
test
xor
aas
std
lret
jg
sbb
jnp
mov
frstor
insb
xor
pop
mov
jae
lahf
data16
jle
fmull
mov
jg
push
insb
insl
xchg
scas
pop
push
cmc
cmp
add
inc
sub
out
adc
jae
jg
push
lahf
push
push
push
testb
addb
stc
pop
outsl
cmp
sub
aaa
xchg
testl
mov
add
aad
xlat
outsb
lret
popf
ja
jno
mov
jbe
loope
loopne
sbb
sub
inc
mov
and
shl
imul
mov
test
xor
and
repz
fcmovnb
pop
sbb
or
add
bound
sub
imul
jne
mov
js
add
inc
mov
push
fadd
mov
roll
popa
jecxz
stos
xchg
jle
shlb
jl
sbb
mov
fwait
into
cmp
xchg
subl
mov
xchg
dec
xchg
inc
leave
ja
inc
or
sbb
add
jmp
outsl
sbb
mov
lret
fisubrl
push
filds
lret
jmp
push
dec
lret
mov
sub
xor
mov
rcrl
stos
pop
mov
xlat
sahf
cmp
test
imul
sbb
data16
imul
mov
lods
and
std
cwtl
pop
jnp
mov
push
int
pop
jnp
add
cli
ret
inc
std
xchg
and
call
pop
mov
mov
inc
pop
fistps
xchg
outsb
jge
icebp
push
pop
cwtl
sbb
xor
outsb
adc
mov
sub
fnstenv
insb
and
pop
sub
pop
and
sti
into
push
iret
pop
mov
or
pusha
add
popa
inc
shlb
push
adc
push
mov
and
jae
mov
stos
or
repnz
je
jbe
stos
inc
add
lret
test
int3
fstpl
pop
add
inc
xor
ret
imul
scas
mull
xor
jle
fistps
and
aad
inc
imul
inc
shlb
daa
jbe
mov
loope
mov
test
xchg
pop
idivl
ret
mov
test
cmp
push
mov
push
mov
sbb
and
xor
sbb
mov
or
rclb
pop
sub
mov
inc
aaa
push
into
or
mov
enter
xchg
ret
inc
pop
enter
push
bnd
in
mov
mov
imul
jbe
push
sbb
pop
in
adc
jge
mov
pusha
and
pop
int3
xchg
test
push
push
cmp
jge
popl
sarb
sub
ds
mov
sarl
scas
dec
xor
ss
jnp
mov
rcl
jge
or
cmpsb
int
outsb
cmp
shrl
pop
pop
jl
pop
mov
sub
pop
popa
add
push
pop
ret
cltd
jmp
pop
fsubrp
popf
ret
mov
cli
cmp
and
push
cwtl
jmp
or
mov
inc
imul
jecxz
jne
aaa
out
mov
jg
push
mov
xchg
scas
add
shlb
cmc
xchg
inc
cs
loopne
adc
mov
es
scas
jp
xlat
movsl
sub
das
mov
lret
sbb
daa
pcmpgtd
mov
pop
mov
mov
imul
dec
mov
lret
ljmp
pop
loope
ret
int3
jae
dec
mov
sti
add
cwtl
fisubl
imul
mov
jne
and
and
loope
out
and
hlt
outsb
cmpb
mov
fdiv
ljmp
pop
aas
pop
mov
pusha
inc
mov
mov
daa
mov
ja
ret
mov
scas
pop
xchg
push
imul
js
push
add
jbe
and
call
cs
inc
or
push
fstl
push
sub
pop
and
outsl
test
add
add
and
gs
daa
sti
mov
push
xor
out
fnstenv
add
test
dec
movl
sahf
rcrl
push
cmp
xchg
out
lahf
sub
dec
fwait
sbb
jb
or
lahf
xor
xchg
push
movsl
loop
pop
jecxz
pushf
loope
js
sbb
sub
push
jo
xchg
dec
cs
xchg
push
loopne
jno
mov
mov
fcmovnu
and
and
imul
stos
leave
adc
loope
mov
mov
mov
repz
or
and
or
sub
sub
xchg
xchg
lock
ss
js
fiadds
incl
dec
mov
add
stc
pushf
sub
xchg
push
push
inc
or
out
repz
ja
and
pop
int
push
xor
fidivl
imul
fdivl
jecxz
ss
test
mov
imul
call
scas
aad
mov
push
scas
mov
adc
mov
testl
mov
fiadds
jecxz
jo
push
or
add
dec
repz
shrl
mov
dec
inc
xor
fidivs
cld
push
cld
lds
out
inc
mov
and
sub
out
mov
int
jne
les
xlat
xchg
or
pop
aaa
icebp
jb
inc
psllw
push
add
jl
jo
fs
dec
push
lds
test
or
push
adc
sub
out
sub
xchg
cmp
test
xor
outsb
enter
cmp
push
mov
gs
cmp
sbbl
or
push
outsl
lcall
fwait
sbb
or
leave
add
bound
adc
adc
mov
jbe
pop
push
adc
push
pusha
ret
incl
rcrb
mov
or
jle
fs
pop
mov
pusha
push
lahf
cmp
or
or
rcrb
ret
xchg
sbb
sbb
add
xchg
std
jno
lea
xchg
add
dec
sub
adc
sub
clc
pusha
daa
fadds
test
out
je
aam
inc
xacquire
sbb
jns
shlb
icebp
ds
mov
jae
cmp
mov
movsl
js
pop
test
mov
inc
repz
mull
pushf
cvtps2pi
mov
or
lret
les
in
mov
sub
pop
jecxz
add
bswap
cs
dec
dec
xchg
add
sbb
cmpb
and
sub
pusha
xchg
aam
mov
xchg
or
mov
loop
jg
add
ja
popf
enter
or
mov
jnp
fisubrs
cmp
lahf
dec
imul
sbb
xchg
jo
add
sbb
and
jbe
loopne
sbb
inc
add
or
scas
std
xchg
dec
fs
loopne
cmp
dec
cltd
sbb
xor
mov
outsl
add
sbb
add
dec
std
fnstenv
add
mov
sbb
addr16
jbe
insl
cmp
jo
test
mov
push
xor
bound
mov
lcall
xchg
test
outsl
adc
jmp
mov
lds
push
mov
and
add
add
mov
aas
sysexit
pop
push
and
outsb
lahf
test
lods
add
add
popa
xchg
je
lods
leave
xchg
mov
shl
mov
cwtl
popf
movsl
ja
daa
lds
or
arpl
int
shrb
jmp
push
ss
pop
leave
fmull
add
cmp
sub
dec
or
sahf
icebp
rol
shll
pop
jle
xor
pop
xor
xchg
cmpsl
jecxz
pop
and
add
sub
fsubrs
mov
inc
js
loop
pop
popf
push
test
fdivrl
outsl
mov
sti
and
xor
sti
hlt
xor
dec
loopne
scas
test
sbb
cmp
push
xor
fcomi
in
mov
ficoms
lret
pop
into
push
loope
add
mov
daa
jmp
xor
stc
pop
pop
cmpsb
test
sbb
or
mov
lock
jl
fmull
int
pop
nop
jp
jl
or
out
or
stos
dec
cmc
xor
cmp
and
xor
aam
hlt
or
sub
mov
jg
pop
push
push
lcall
fcmovnb
rcr
sarb
adc
xchg
mov
pop
shl
gs
add
lahf
mov
jmp
xorl
frstor
inc
sbb
add
xor
lcall
sbb
roll
lahf
and
sbb
push
mov
mov
addr16
push
sub
mov
jle,pn
hlt
jnp
sbb
ret
dec
es
in
pop
adc
stos
add
hlt
pop
int
xor
sub
insb
and
ds
jl
sbb
nop
imul
mov
aam
popa
sbb
shrl
adc
fucomp
sbb
test
xor
inc
jmp
cld
mov
imul
pop
mov
dec
hlt
mov
sub
aam
jb
movsl
js
sub
pop
shll
jge
inc
push
pop
ja
adc
test
pop
arpl
or
jg
fwait
mov
jne
sub
and
hlt
test
loop
cmpl
adc
and
imul
hlt
inc
jecxz
out
or
mov
dec
add
jno
inc
mov
inc
mov
inc
fstps
dec
lea
out
jge
out
outsb
jge
aam
mov
dec
xor
sbb
aam
in
sarl
xchg
push
ret
inc
xlat
clc
cmpsl
scas
int
jns
add
push
cmpb
xor
fwait
aad
outsb
jns
aam
push
pop
xlat
mov
movsl
fucomi
ss
mov
movsb
sbb
jp
mov
or
or
pop
cltd
shlb
loope
sbb
and
pop
mov
cmp
dec
aad
mov
decb
cmp
xor
call
mov
ficoms
sub
lcall
popa
lret
sbb
mov
fs
sbb
inc
je
pusha
and
inc
sahf
imul
or
fcompl
or
sbb
enter
mov
xchg
lds
das
xchg
adc
inc
and
or
inc
sbb
stos
dec
in
jo
hlt
xorb
cmc
xor
jle
pop
push
add
in
daa
cltd
out
mov
adc
cmp
inc
push
add
push
repnz
mov
or
cmpsb
ret
xchg
aad
popa
add
dec
mov
add
add
repz
push
cmp
push
push
push
repnz
add
std
bound
mov
arpl
push
jmp
scas
incl
jecxz
inc
outsl
inc
adc
sbb
fimull
addr16
cli
mov
jge
inc
loopne
adc
mov
adc
dec
xchg
sub
push
jg
push
stos
ljmp
pop
ja
mov
xor
test
push
sbb
mov
aaa
insl
std
into
adc
jecxz
sbb
dec
gs
fbld
dec
sub
add
in
cmpb
aaa
aaa
xor
popl
mov
cmp
xchg
ja
or
push
xor
jmp
scas
or
xchg
dec
or
cmpsl
mulb
xchg
push
jno
push
loope
mov
es
sbb
add
repz
adc
sbb
in
enter
hlt
push
in
cli
xor
xchg
loope
sbb
and
mov
mov
mov
adc
mov
imul
inc
out
pop
popf
fisttps
repnz
pop
xchg
mov
ss
dec
xchg
cmp
dec
movsb
xlat
push
scas
sub
lret
scas
jg
mov
lea
in
cwtl
sti
repnz
aad
jl
jg
add
jge
out
mov
push
nop
xchg
xchg
repz
lods
andb
push
addr16
out
mov
pop
stc
mov
repz
mov
fdivrl
mov
xor
std
popa
sbb
cwtl
cmpb
test
mov
mov
cmpl
push
outsl
into
push
rolb
cmp
push
lret
fstp
lds
leave
sbb
jae
jo
and
xchg
jno
test
leave
sub
imul
cld
je
pop
in
xchg
ret
dec
xchg
stc
and
rorl
xchg
out
mov
mov
js
mov
xor
xchg
pop
iret
cmpsb
aam
mov
je
sbb
cmp
call
cmpsl
sub
sarl
inc
mov
xor
clc
addr16
dec
sbb
popf
cmp
in
test
in
add
movsb
and
inc
into
mov
mov
sub
test
arpl
mov
and
loop
adc
mov
sbb
adc
push
pop
movsl
jnp
sub
call
or
cmp
daa
cs
jb
dec
jnp
and
out
sub
test
xchg
cs
clc
mov
mov
mov
add
test
pop
call
out
push
bound
mov
sub
mov
adc
pop
loope
imul
fs
lret
fdiv
stos
push
xchg
inc
mov
xor
mov
sbb
and
jo
cmc
sbb
stos
or
pop
xchg
int
push
cwtl
jno
pop
in
icebp
adc
sbb
mov
mov
jg
divb
test
dec
sbb
jae
stc
inc
jae
mov
xor
test
or
or
es
clc
popf
add
mov
dec
lock
xchg
pop
clc
jecxz
leave
xlat
add
aam
mov
jmp
or
aaa
stos
sbb
add
adcl
ficoml
scas
rcrl
out
ret
cmp
and
out
pop
movsl
inc
scas
cli
dec
adc
into
pop
xchg
test
imul
icebp
mov
lea
rorb
sbbb
add
xchg
lcall
imul
jnp
add
pop
ja
xchg
and
jae
test
sub
sub
lea
cmovbe
mov
fidivl
imul
iret
xchg
stc
and
xchg
add
in
mov
shll
test
cmp
mov
icebp
test
cmpl
lea
fsubs
dec
dec
ret
stos
cs
negb
mov
pop
insb
pop
rcrl
loopne
mov
xor
mov
lahf
pusha
xchg
loop
push
int3
movb
cmp
xchg
pop
mov
jne
push
inc
jg
jmp
sbb
ss
fwait
dec
lret
push
pop
in
jl
das
mov
hlt
imul
dec
cli
in
mov
cmp
pop
inc
inc
pop
dec
in
push
and
ds
cli
rorl
sbb
jg
adc
cmpsb
mov
mov
cmp
int
jnp
push
cmp
es
cmp
sub
mov
icebp
pop
add
insb
sbbb
push
xchg
pop
pop
push
pop
mov
push
fs
std
or
repz
mov
cmp
nop
xor
pop
jo
adc
mov
mov
in
add
in
sub
cmp
data16
sbb
cmp
pop
faddl
and
subl
pop
dec
pop
pop
mov
or
lods
jecxz
iret
mov
adc
mov
xchg
push
cmp
jbe
sub
js
jne
sahf
icebp
lods
aaa
movsb
sbb
mov
outsb
std
lds
imul
mov
sti
mov
rolb
mov
inc
fs
scas
sahf
arpl
xor
mov
xchg
addr16
add
loope
xchg
mov
xchg
stos
sub
loopne
push
enter
setns
xor
addr16
popa
mov
push
mov
pop
out
or
or
pusha
aaa
data16
push
jae
sahf
imul
nop
test
stos
mov
std
cwtl
mov
ret
mov
xchg
loope
jns
add
xchg
mov
xchg
lods
xchg
adc
jp
cwtl
jbe
fnstcw
push
call
mov
fdiv
call
sub
mov
fldt
sbb
sub
sbb
sti
cs
fidivrl
repz
jns
mov
addr16
in
push
and
inc
jb
and
fisttpl
ret
push
and
and
mov
sbb
mov
stc
rclb
inc
aas
push
cltd
imul
dec
adc
cmpl
xchg
outsl
jl
jge
xchg
scas
std
pop
je
mov
adc
jne
cmp
or
push
lret
rcl
scas
decb
mov
sbb
loop
mov
data16
les
xchg
negl
mov
out
rorb
scas
lock
adc
imul
sahf
stos
xor
push
pop
jle
add
scas
arpl
lahf
mov
scas
outsb
test
adc
cmpsl
cmp
in
popa
lret
das
mov
ljmp
aad
push
sub
dec
push
bound
push
xchg
outsl
and
pop
fsubr
nopl
pop
pop
xchg
xor
mov
inc
dec
inc
test
mov
iret
int
jno
mov
push
subl
mov
push
test
lods
fsubl
xlat
lahf
int
add
add
call
jmp
and
ficoms
add
lods
add
add
mov
mov
xchg
push
nop
mov
repnz
sub
daa
je
test
pop
lds
lret
cmp
mov
jnp
dec
aad
mov
mov
pusha
and
sar
ds
jg
adc
push
xor
sbb
dec
push
jmp
mov
jne
cmp
in
mov
sbb
stos
in
pop
xor
call
test
pop
or
xchg
xchg
push
aad
add
add
xchg
push
mov
sbb
xor
push
xchg
pop
push
loop
and
outsl
arpl
sub
dec
in
cli
xor
fisttpll
cltd
inc
cmp
inc
dec
push
ret
or
inc
stos
add
or
je
std
movsb
sbb
xchg
mov
and
pusha
jae
adc
mov
pop
movl
push
mov
test
dec
inc
mov
inc
das
data16
mov
pop
pop
hlt
dec
daa
scas
adc
gs
mov
adc
cwtl
xchg
push
mov
rorl
daa
xchg
out
insl
adc
dec
sbb
ret
pop
hlt
icebp
out
fwait
mov
imul
and
mov
push
fdivrl
aaa
shlb
jg
ret
sub
testl
push
adc
pop
mov
imull
cli
mov
outsb
sar
out
cmp
xchg
daa
mov
orb
cwtl
jle
mov
xor
gs
lahf
icebp
test
mov
jnp
cmpsb
jecxz
push
jo
fwait
js
dec
in
lods
outsl
mov
lea
dec
or
and
or
inc
add
stos
mov
adc
and
jae
xchg
cmp
lret
mov
jmp
or
push
inc
dec
clc
xorb
jb
icebp
xchg
stos
dec
pop
push
inc
mov
loop
sahf
mov
add
test
dec
push
adc
iret
loopne
adc
scas
in
lahf
ss
popa
lea
test
xor
mov
jns
inc
fldl
cmp
mov
int
jo
inc
inc
mov
xor
sub
stc
and
jbe
movsb
lret
lock
mov
scas
cwtl
in
cmp
cmp
xchg
fwait
stc
sub
and
adc
ja
cmp
mov
and
cmc
mov
mov
aam
push
push
cmp
fmul
aas
subl
inc
enter
and
mov
pop
sbb
jge
and
add
pop
movsb
ja
xchg
inc
adc
adcl
mov
sub
shl
pop
inc
fists
mov
mov
enter
pushf
fildl
push
dec
lahf
xor
mov
sbb
mov
pop
gs
xor
fistps
neg
mov
arpl
inc
sbb
and
in
push
mov
xorb
pop
gs
jmp
jg
fs
pop
pop
out
mov
cmp
test
sbb
pop
shrb
cmp
push
imulb
mov
cmc
pop
xor
gs
out
in
sub
leave
mov
notb
mov
mov
inc
cmp
fiadds
pusha
push
adcb
inc
enter
inc
push
jno
cmpsb
outsl
or
xor
loop
mov
sub
test
stc
xor
add
add
cmp
pop
rcrb
addl
lods
add
add
test
xor
loopne
lods
bound
xchg
ret
or
mov
stc
cli
push
pop
push
jo
sbb
js
pusha
pop
push
fstpt
jo
bound
push
push
add
lock
cmp
test
mov
dec
push
lods
adc
test
idivb
mov
insb
mov
add
adc
and
add
lcall
and
movl
movl
sbb
cld
inc
add
pop
rcrb
dec
pop
arpl
xor
or
popa
add
fisttpl
sbb
cmpsb
push
sahf
add
mov
sti
pextrw
ljmp
cld
push
xlat
cs
add
adc
xlat
aas
je
test
aas
pop
xchg
popf
loope
or
mov
pop
adc
lods
jmp
or
push
jmp
pushl
arpl
in
or
lods
cmpsb
adc
add
repnz
jo
test
xchg
jno
mov
jae
loope
scas
adc
sbbl
je
or
movb
mov
cmp
pop
add
fistpl
into
leave
imul
dec
add
add
push
and
sbb
sbb
xor
mov
fiadds
sbb
je
hlt
fcmovnu
jecxz
sub
or
inc
jae
adc
xchg
inc
mov
lds
or
sbb
push
es
fiaddl
sahf
xchg
pop
cli
jbe
fcmovnb
jecxz
pop
or
sbb
out
jmp
add
jae
and
xlat
and
cs
cmp
xlat
loopne
gs
jne
mov
test
pop
push
ret
imul
xor
mov
mov
cltd
inc
test
ja
pop
shlb
xchg
shlb
pushf
ja
xlat
jg
test
andb
jmp
push
jmp
push
dec
add
arpl
lahf
xor
mov
aas
inc
into
sbb
repnz
gs
rolb
in
cmp
sub
movsl
arpl
cmpsl
xor
jmp
push
aas
sub
xor
xor
mov
or
sahf
xchg
and
mov
dec
inc
cs
std
jge
loope
ljmp
pop
sarb
mov
rcll
and
sub
js
out
clc
sub
pop
mov
and
or
dec
add
addl
shlb
xor
mov
ja
fstl
cmpb
cmp
mov
cmp
insb
aaa
hlt
sbb
jb
xlat
xor
sub
pop
mov
jne
push
adc
data16
jns
or
inc
sub
sbb
int
ds
lret
fbld
cmpsl
iret
cld
lcall
jl
loope
cvtpi2ps
pop
das
lcall
popf
sub
pop
mov
pusha
subl
and
or
lcall
mov
std
clc
andl
hlt
add
pop
inc
addr16
and
je
movl
or
loopne
andl
and
add
mov
cmpsb
mov
and
shl
loope
add
lods
add
add
inc
nop
ds
push
pop
fs
mov
xchg
das
push
rcr
shr
movsb
hlt
jno
mov
aam
adc
mov
dec
jecxz
stos
adc
mov
sbb
mov
xchg
xchg
fsubs
jl
cltd
daa
mov
fsubl
push
or
push
push
lret
loopne
cmpb
lret
and
inc
adc
insl
dec
add
add
ja
xor
popa
sub
loopne
jecxz
dec
shlb
subb
loopne
cmc
sub
xchg
adc
mov
push
gs
push
inc
mov
mov
xor
push
mov
adc
int3
aaa
loop
mov
or
mov
xchg
inc
jb
sub
lods
in
push
sbb
push
fisubrl
bndstx
xor
push
mov
lret
sti
push
in
push
int3
sti
pop
xorl
fmull
adc
push
adc
push
sub
sbb
xchg
push
in
fs
and
push
cmc
sub
sti
push
mov
ja
xchg
mov
int
scas
mov
mov
lret
in
mov
inc
or
ds
dec
jbe
sub
push
inc
pusha
xor
mov
mov
add
xchg
mov
adc
fildll
or
fdivl
mov
fbstp
sti
jne
test
int
jne
in
pop
jne
mulb
sub
mov
int
scas
lods
sarb
cltd
pop
pop
xlat
inc
clc
popa
cltd
cmp
call
xchg
inc
mov
dec
inc
bound
pop
xor
je
pop
mov
popl
mov
pop
push
add
pop
repnz
rorl
aad
cmp
mov
sahf
push
adc
sarl
push
push
mov
lcall
push
rcr
adc
cli
or
pop
divl
mov
addl
and
mov
movsb
add
jnp
test
in
and
out
push
popf
add
ljmp
and
pop
fimull
mov
xchg
add
int3
int
dec
mov
shrb
dec
outsl
push
push
stc
gs
jmp
aas
mov
pop
sub
dec
inc
pusha
in
stc
push
or
loope
pop
dec
and
popa
mov
imul
in
shl
test
sahf
sbb
jnp
ret
movups
and
pop
mov
in
fwait
dec
jmp
and
inc
or
push
int3
mov
mov
fwait
ret
adc
test
pop
inc
xor
or
daa
dec
sti
mov
fcoml
movl
add
mov
lcall
popa
sub
icebp
lret
inc
andl
pop
inc
test
js
jecxz
xchg
into
push
and
pop
repnz
je
inc
pop
or
and
fcomp
call
das
adc
and
daa
loop
add
add
add
dec
negb
pop
mov
lea
adc
push
add
mov
shll
lcall
pusha
sbb
roll
fs
sbb
int3
add
in
cmc
xor
dec
movsl
ljmp
fisubs
and
mov
push
xchg
mov
insb
add
lret
pop
icebp
mov
clc
inc
mov
mov
mov
and
es
std
repz
sahf
jecxz
dec
add
xchg
pop
pop
pop
out
adc
cmc
jp
call
sbb
dec
jo
jl
cld
out
jbe
outsl
cmp
push
xor
add
lods
add
add
pop
mov
ficoms
jnp
cli
ret
inc
pop
dec
fistl
repnz
adc
xlat
adcl
dec
js
add
pushf
jecxz
mov
pop
lcall
pop
fldenv
clc
lods
stos
jbe
mov
in
pop
dec
test
out
test
je
push
add
imul
je
jne
mov
loopne
popa
pusha
mov
lcall
fstps
mov
sbb
jge
xor
clc
repz
inc
dec
ja
push
adc
pop
adc
pop
test
mov
sub
cltd
push
xor
xchg
or
sub
jle
cmp
insl
adc
sub
jne
fs
dec
rcll
sbb
js
sarl
pop
push
pop
stos
or
mov
popa
dec
imull
test
lahf
adcb
lea
loope
in
mov
inc
out
sub
sub
in
dec
and
cmp
mov
pop
sub
dec
scas
das
sub
rcl
adc
out
push
push
mov
fsubp
push
jnp
xor
cmpsl
inc
sahf
xorb
xchg
ret
xor
fstps
cmp
and
jl
inc
fisubrl
mov
aam
popa
jae
dec
je
mov
xor
pop
movsb
cmp
mov
push
out
shll
iret
or
inc
push
mov
jle
add
sbb
andl
sti
imul
fldt
xchg
sti
or
lahf
popa
or
out
fisubs
and
jae
out
cmpsb
sub
lea
mov
lock
popa
inc
repz
jmp
jbe
shl
add
inc
sbbl
mov
dec
mov
jl
clc
int
mov
mov
lods
adc
xchg
cmc
xor
mov
popa
cmpsb
lods
cmp
data16
inc
mov
add
push
aad
dec
in
cmp
setnp
or
pusha
xchg
or
shlb
cltd
and
enter
jns
cmc
loop
dec
pop
dec
add
and
lds
stos
push
mov
pop
imul
sub
repnz
roll
jecxz
mov
imul
mov
shrb
mov
cltd
test
add
xchg
repnz
xchg
testb
js
jno
add
xchg
lret
shll
ja
insb
adc
icebp
mov
sarb
lahf
pop
pop
or
cltd
icebp
popf
decb
popf
dec
popf
mov
je
test
xchg
js
mov
movsb
scas
xchg
and
insb
push
rcr
ret
push
pushaw
cmovno
bound
push
popf
dec
in
leave
xchg
push
adc
sti
inc
push
push
adcb
mov
mov
xchg
scas
jno
out
or
and
sub
cli
repz
add
adc
xchg
loop
push
test
add
mov
aam
test
sbbb
xlat
mov
bound
push
push
ss
cmp
push
shrl
out
push
xchg
rclb
xchg
or
or
xchg
aaa
push
xchg
mov
popf
sub
xor
pushf
mov
or
lock
rcrb
xchg
jmp
lcall
fldl
fstpl
mull
add
sbb
pusha
adc
push
xlat
mov
jno
jb
out
int3
fucomi
or
subps
std
sbb
jnp
push
clc
gs
push
mov
add
fisubrl
add
xchg
ret
pop
out
movsl
cmp
into
jecxz
cmp
mov
pop
mov
add
test
aas
xorl
sub
es
pop
jp
jmp
in
loope
jb
mov
into
out
rorb
int3
xor
inc
scas
add
or
mov
dec
pop
addr16
je
aad
bound
daa
xor
mov
sbb
jb
fs
ss
sub
sbb
in
loop
inc
aaa
das
mov
ror
push
jecxz
pop
push
cmp
push
outsl
lahf
scas
loopne
add
lcall
xchg
xor
mov
add
adc
jo
adc
and
ficoms
inc
sbb
lcall
push
cmpsl
lea
out
xchg
daa
sub
je
jne
aas
xlat
fldenv
setne
cli
subl
cmp
leave
push
aam
repnz
sub
aad
cmp
fldl
imul
test
movsl
mov
jo
test
sbb
fs
push
xchg
cld
mov
fcmovu
cmpsl
add
dec
push
out
test
mov
mov
lds
mov
insb
add
cltd
xorl
les
pop
xchg
je
in
or
mov
jae
pop
enter
cli
aaa
call
popf
fisubs
bound
loope,pt
fisttpl
aas
xchg
test
out
imul
mov
shlb
imul
pop
mov
stos
ljmp
enter
push
lcall
pop
test
mov
frstor
cmp
lret
lahf
aam
popa
int3
and
enter
xchg
push
pop
push
scas
mov
jo
imulb
pop
cmpsl
push
sub
ja
mov
inc
mov
rcrl
dec
jecxz
inc
cmp
mov
mov
cmp
dec
xchg
mov
stos
jmp
add
nop
xlat
outsl
out
xchg
into
inc
cmp
inc
or
jle
loopne
mov
rcll
fnstenv
test
mov
mov
dec
xor
ja
pop
fwait
cmp
xchg
lahf
cmp
int3
daa
xchg
push
lahf
jmp
cltd
ror
daa
or
push
xor
push
ds
jnp
dec
jno
dec
mov
and
jnp
and
in
lea
fs
scas
jbe
jecxz
push
stc
dec
fsubrs
dec
aad
mov
movsb
push
in
data16
or
add
cs
xlat
push
xchg
jno
cwtl
fldl
push
push
xor
jno
cli
cmc
push
mov
test
jg
add
jbe
stc
xchg
add
mov
cs
aaa
mov
stc
cmc
push
pop
fisubrl
mov
sub
jp
inc
mov
or
adcl
loop
mov
fcomps
mov
and
push
inc
pop
fcomip
xchg
pop
gs
rolb
or
lahf
les
and
int
scas
xlat
ret
pop
fistpll
fucomp
outsb
pop
jo
xor
mov
movsb
sbb
stos
lret
add
test
mov
sub
add
add
ds
dec
mov
popa
dec
push
sbb
call
add
dec
je
cltd
das
xor
shlb
in
or
sub
add
std
push
std
inc
jmp
jl
xor
jo
jbe
lcall
loope
pop
popf
test
je
lea
gs
and
ljmp
mov
inc
push
sbb
mov
mov
out
cmp
test
cltd
push
stos
pop
mov
push
hlt
out
xchg
into
daa
mov
or
enter
outsl
iret
jo
inc
xor
xlat
ds
inc
scas
pop
in
adc
cmp
gs
mov
outsl
fs
shrl
fwait
jo
dec
repz
ret
jns
dec
test
mull
push
shll
insl
mov
push
rcr
jecxz
jecxz
mov
mov
mov
ret
nop
jb
dec
xchg
cmpsb
int3
push
inc
fnstsw
stos
fisubrs
adc
daa
icebp
xor
test
dec
mov
scas
cmp
push
and
mov
xchg
and
add
lock
data16
mov
mov
movsb
int3
add
mov
push
into
sbb
adc
cmp
bound
and
push
rolb
cwtl
xchg
xchg
or
cld
stos
fistps
imul
mov
aaa
loopne
dec
rolb
mov
sbb
xchg
js
xchg
push
subb
pop
push
int3
and
xor
jp
in
gs
xchg
orb
adc
je
fiaddl
imul
inc
push
pusha
cmp
cmpsb
mov
jge
daa
and
scas
hlt
in
fcom
icebp
enter
je
movsb
adc
mov
dec
fnsave
gs
push
sub
jmp
arpl
imul
in
cmc
xchg
movsl
mov
adc
mov
xchg
and
sbb
std
cmp
pop
data16
and
iret
lods
sbb
aas
test
daa
popa
dec
jb
xchg
shlb
dec
aad
inc
adc
push
mov
pop
lea
lret
pop
dec
xchg
mov
cld
std
and
aad
stos
ror
sbb
sti
sbb
cmp
mov
lcall
jno
test
sbb
fmuls
jecxz
outsl
aad
aaa
and
test
movsl
in
movsb
mov
push
pop
jo
inc
inc
xlat
xchg
dec
loopne
or
xor
out
inc
test
addr16
inc
rcr
sub
lods
add
jmp
icebp
clc
pop
xor
mov
cmpsb
cmc
movsb
inc
negb
clc
push
mov
loop
repnz
popa
loope
xchg
and
in
cmp
jecxz
inc
movsb
jnp
loope
pushf
hlt
or
insb
add
scas
fidivrs
ficompl
jg
mov
push
dec
or
jb
sub
mov
outsb
cli
stos
jge
lods
or
aad
jns
jnp
mov
cmp
add
xchg
and
sub
data16
jge
jns
fbstp
xor
push
mov
and
shlb
cltd
or
add
mov
aad
jne
subl
add
or
dec
xor
mov
add
or
sar
aaa
loope
ret
int3
sbb
ficomps
adc
jo
xchg
and
push
arpl
shr
and
add
insb
pop
cltd
rcll
push
inc
xor
stc
in
cli
jecxz
or
xlat
and
aaa
std
out
and
shll
add
push
add
dec
add
pop
fldcw
test
mov
or
lods
dec
cmp
in
sbb
repnz
dec
pop
jg
cmp
clc
push
ret
sbb
clc
es
push
adc
repz
sub
sbb
pop
push
and
fyl2xp1
shrb
fdivs
stc
aam
xchg
out
call
insl
sub
pop
clc
push
clc
dec
fdivr
cmp
dec
push
mov
inc
lods
cmp
leave
push
rclb
cmp
mov
or
push
ds
sbb
mov
cmp
mov
sti
hlt
add
cwtl
loop
inc
mov
pusha
push
mov
gs
xor
or
dec
xchg
ror
mov
xor
inc
popa
xchg
or
jmp
dec
incb
into
cmpsl
addb
outsl
ja
xor
movsl
adc
ret
push
je
xor
loopne
dec
loope
bound
push
mov
test
pop
mov
xchg
jmp
mov
sub
loopne
jbe
fdivrs
push
sahf
push
mov
jns
xor
adc
not
popa
scas
sbb
fwait
sbb
mov
inc
in
scas
push
mov
sub
jb
icebp
int3
mov
test
imul
inc
std
mov
mov
movsl
arpl
fwait
push
mov
aad
and
jb
push
out
ja
inc
sahf
rorb
mov
pop
sbb
cmp
stos
and
outsb
sahf
lods
lea
mov
test
mov
shrl
jae
iret
cmpsl
add
dec
cmp
fwait
lds
mov
inc
xchg
cmpsb
aaa
iret
movsb
rclb
fcompl
xchg
iret
push
jns
in
jg
inc
cltd
push
jl
rol
arpl
int3
shll
rclb
sub
test
bound
data16
jno
stc
pop
xchg
enter
add
sbb
sub
mov
in
pop
into
push
xor
pop
iret
out
or
dec
xchg
lods
icebp
xor
enter
pop
dec
hlt
iret
mov
jl
out
call
sub
cmp
pop
pop
and
sub
dec
js
ficoml
arpl
jb
xor
cmp
dec
in
lcall
xor
and
push
lret
jp
mov
pop
and
sbb
pop
dec
cmp
bound
mov
mov
inc
lcall
mov
cltd
or
jnp
jl
cmp
int
shr
popa
mov
cwtl
leave
mov
jg
outsb
in
cltd
xor
sbb
inc
jge
or
sahf
xor
imul
sbb
mov
pop
data16
lods
mov
and
andl
and
dec
and
mov
arpl
call
int3
dec
stos
sti
loope
mov
addr16
out
xchg
dec
rsqrtps
cmp
lret
or
or
jmp
add
jge
dec
outsl
dec
fstps
stos
or
and
int3
mov
dec
mov
mov
cmp
xchg
mov
popf
jns
movsb
mov
rorb
jo
dec
mov
test
addr16
or
mov
js
nop
jg
std
jg
add
add
nop
int3
popf
fistps
lea
jmp
dec
cmp
add
add
xchg
jbe
or
adc
stos
jae
mov
push
pop
adc
jnp
push
inc
mov
mov
cmpsb
inc
hlt
mov
pop
mov
mov
jle
dec
sahf
jmp
xchg
cwtl
dec
add
xor
pop
push
sub
or
add
adc
out
mov
jle
cmp
scas
cmp
ss
xor
mov
mov
sbb
stos
rorb
fcompl
pop
loope
lcall
cmpsl
xor
fisttpl
loope
inc
or
pusha
in
mov
movb
mov
repz
leave
jecxz
mov
xchg
shrb
or
dec
mov
dec
repz
jmp
popa
pandn
or
addl
cmp
and
inc
aas
js
ja
ret
jb
cmp
jns
xchg
xchg
fmuls
mov
mov
shl
adc
sub
aad
mov
scas
imul
add
rcr
xchg
sbb
sbb
in
loop
add
test
push
mov
mov
inc
sbb
clc
cmpsb
or
sub
mov
pop
pop
xchg
cs
leave
inc
xlat
ffreep
mov
push
mov
cli
xchg
sub
mov
sbb
loop
push
dec
sbb
lea
push
add
leave
adc
push
sbb
mov
lret
fadds
add
mov
sbb
je
lret
fisubrl
movsl
pop
inc
lret
pop
mov
mov
subb
jg
lahf
push
cli
aaa
add
xlat
mov
push
out
cmc
xchg
dec
test
fs
popa
cmc
push
xchg
stos
mov
shlb
push
fisttps
pop
incl
aaa
and
jne
enter
shl
sbb
dec
roll
loopne
jecxz
push
out
movsb
mov
xor
aaa
nop
clc
cld
shll
mov
mov
mov
aas
scas
cld
ljmp
movsb
sbb
insb
push
or
mov
repnz
or
push
nop
sub
xchg
dec
dec
add
cmp
cmp
inc
cmp
pop
mov
mov
icebp
add
xchg
push
cmp
cmp
jbe
mull
pop
fs
jae
sbb
mov
mov
cmpsl
jo
push
add
dec
push
mov
lret
sub
and
xor
push
insl
pop
xchg
push
lods
xchg
rol
out
int3
lds
cwtl
les
lret
test
shlb
mov
dec
test
xor
jmp
cmp
inc
jbe
ret
jno
dec
cmc
pop
xchg
sbb
xchg
pushf
push
add
pop
lcall
pop
jl
ret
dec
lds
jb
cmp
push
jo
rcrb
pop
xchg
test
cmc
fildl
inc
and
fcmove
push
pop
jb
hlt
cmp
or
cmp
pop
jmp
in
mov
pop
sub
pop
jmp
lea
mov
lock
loopne
lds
add
xchg
mov
notl
inc
or
arpl
pusha
outsb
or
out
cmp
fcomps
add
adc
sahf
movsl
add
clc
mov
cmp
fisttpll
adc
daa
pop
test
aam
aam
adc
filds
add
call
add
loopne
cli
mov
pop
dec
test
scas
and
lods
add
add
in
sbbl
push
adc
les
adc
dec
pinsrw
add
or
loop
jnp
cmp
lret
loope
and
xor
pop
pop
or
push
fs
jge
mov
or
jge
mov
test
je
shlb
out
xor
loope
lcall
fwait
and
jp
mov
outsb
push
loop
mov
insb
imul
popl
push
loope
pop
jne
push
adc
mov
dec
sbb
out
ja
xchg
je
push
les
push
test
dec
int
mov
shl
jge
int
push
stc
int
inc
lahf
jmp
ljmp
cmp
mov
std
sbb
jae
pop
andb
xor
mov
pop
sub
sahf
je
jbe
lret
int3
cmpsb
jo
adc
adc
push
lret
mov
mov
stos
pop
scas
stos
ret
dec
lcall
fwait
lcall
lret
mov
negb
jg
sbb
xchg
call
pop
shll
push
push
pop
pop
clc
adc
stc
inc
mov
popf
call
sub
pop
mov
sbb
jbe
xchg
inc
stos
aaa
incb
dec
adc
cwtl
mov
add
add
cmpsb
mov
data16
lret
imul
pop
fstpl
fmull
ret
loop
mov
mov
xchg
inc
adc
loop
mov
sti
bound
insb
pop
mov
adc
fstpl
cmpsl
push
mov
sub
fsubrp
sub
loope
movsb
daa
hlt
jb
outsl
mov
call
mov
sbb
xchg
std
adc
jg
lock
pushf
xchg
into
in
incb
xor
test
daa
test
and
in
loop
sub
or
mov
lahf
addr16
xor
sub
mov
jae
add
imull
and
pop
mov
pop
jae
pop
xchg
and
xchg
inc
xchg
cmp
out
push
add
andl
and
scas
dec
bnd
jl
xor
or
cli
sub
lds
and
ljmp
mov
jbe
mov
pushf
out
and
push
mov
adc
or
pop
jmp
sbb
mov
inc
leave
shl
push
inc
pop
and
add
arpl
adc
cmpsl
dec
rcr
pop
rcrl
cmc
xchg
notl
mov
pop
and
or
imul
jmp
int3
rclb
adc
out
adcb
into
insb
push
test
jge
into
loopne
les
mov
xchg
das
mov
pusha
inc
inc
cmp
push
pop
stos
adc
mov
adc
sub
es
icebp
pop
adcb
loop
data16
push
int3
inc
dec
rolb
out
mov
pop
negb
xor
push
faddl
fdivrs
pop
dec
dec
push
ljmp
pop
aad
cltd
mov
xchg
test
pop
adc
mov
fs
pop
fucom
dec
add
or
fwait
xchg
sbb
push
psllq
imul
cmp
push
jae
outsl
cmpsb
mov
addr16
inc
fdivrp
out
ja
or
pop
loopne
pop
in
mov
add
sub
sbb
movsb
jb
sbb
add
data16
jbe
sub
push
cmp
mov
mov
xor
add
int
mov
fldl
sbb
fstl
pop
cmpsb
ror
push
ja
mov
xchg
and
cmpsl
inc
push
int
xor
jle
pop
cltd
dec
inc
cld
rcrl
dec
lods
daa
mov
inc
int3
cmp
popa
daa
inc
lock
pop
icebp
push
inc
neg
aaa
adc
rorl
inc
and
cwtl
push
pop
sbb
dec
cmc
cmp
inc
jmp
xchg
cwtl
mov
pop
imul
ds
std
xor
insl
pop
inc
push
in
out
icebp
imul
mov
test
shll
test
cs
scas
outsl
imul
addr16
aas
and
push
and
and
fs
cmpsl
mov
mov
dec
imul
ljmp
jno
shlb
aaa
add
jle
xchg
sahf
xchg
idiv
push
pop
mov
sub
add
mov
loop
dec
jnp
add
mov
ds
int3
jle
mov
sbbl
inc
mov
push
or
shlb
or
cwtl
mov
jecxz
bound
push
adc
test
jmp
sub
sbb
jge
int3
ljmp
sti
jl
rcr
cmp
bound
sbb
js
sub
ret
push
or
sub
fdivrp
sub
hlt
shrb
xlat
inc
cli
push
shrb
sbb
push
mov
pop
fildl
xor
xchg
dec
clc
xor
push
scas
lods
je
aaa
add
fstl
inc
and
cs
jg
dec
pop
adc
cmp
int3
inc
xchg
ja
xor
cwtl
iret
mov
jge
aad
cmp
into
fwait
pop
mov
sbb
inc
mov
push
pop
test
test
pop
push
jno
cld
inc
pop
mov
adc
pushf
xchg
lea
movb
and
push
movb
mov
jns
adc
lret
cmpsl
mov
in
in
mov
adc
imul
mov
fcom
lea
int3
jb
lahf
rclb
fwait
ja
add
pop
push
push
test
je
adc
inc
rolb
sti
mov
xchg
mov
in
mov
dec
adc
dec
mov
popf
push
outsl
cmp
jno
repnz
pop
cmpsb
fs
leave
jg
add
mov
rcll
inc
and
mov
adc
pop
push
or
xor
repnz
lret
hlt
adc
cmc
scas
add
mov
jge
jo
aam
xor
pusha
nop
ljmp
aad
bound
test
sub
jge
or
add
jae
orb
fsubrl
std
test
mulb
inc
les
mov
dec
push
inc
pusha
dec
subb
std
lods
jge
mov
pop
in
xchg
sarb
andb
mov
es
std
clc
mov
scas
adc
push
fwait
ror
push
or
idivl
mov
mov
pop
bnd
test
add
mov
cltd
mov
xor
movsb
pop
aam
movsb
add
lods
add
add
mov
inc
sarb
push
inc
xor
test
inc
jmp
xor
bnd
lock
test
cmp
or
xchg
imul
int3
fists
cltd
jmp
rorl
adc
mov
and
out
int
push
mov
push
std
ljmp
out
jecxz
or
mov
scas
pop
test
cmp
outsl
dec
xchg
add
addr16
mov
lea
leave
clc
lcall
sti
cld
int
inc
push
sbb
loope
push
pop
inc
shr
pop
sbb
cmp
sbb
dec
cmp
push
ds
sub
test
fstl
outsb
pop
aad
gs
and
inc
cmp
adc
ret
mov
pushf
and
mov
jne
dec
jae
or
jns
dec
pop
inc
data16
cld
push
adc
rcll
js
in
repnz
sbb
insb
sub
mov
xchg
sbb
mov
aaa
mov
repnz
jnp
push
jae
out
leave
inc
stos
mov
bound
and
les
rcr
dec
xor
xor
dec
push
mov
push
lods
push
scas
mov
jp
scas
shlb
adc
fcomps
pop
in
xchg
test
push
push
pop
in
movsb
or
dec
dec
jns
leave
das
and
or
xchg
or
xchg
aas
and
pop
xchg
fwait
pop
jecxz
test
pop
pop
mov
insb
add
jge
mov
push
push
adc
jb
inc
dec
mov
add
sbb
jp
add
daa
push
ffreep
ret
add
mov
jae
xlat
scas
addl
sbb
mov
and
aam
jno
cmp
lods
jp
insb
cwtl
or
movsb
fs
pop
f2xm1
jbe
xor
std
gs
and
loope
xchg
fistpl
sbb
xor
xchg
xchg
push
pop
arpl
test
or
xchg
push
inc
dec
sub
scas
out
xchg
insb
push
push
push
jo
and
imul
sub
ret
loope
arpl
inc
mov
sub
mov
cli
xchg
iret
add
mov
fwait
inc
dec
xchg
sbb
sbb
lea
pop
rcrl
push
pop
jbe
add
mov
xchg
rorl
xor
cwtl
xchg
lahf
mov
lcall
std
mov
ret
xor
roll
loop
or
jge
lds
das
test
add
xchg
in
push
pop
push
movsb
hlt
jb
add
push
out
inc
or
lods
cmpsb
xor
daa
data16
inc
movsl
mov
iret
inc
cltd
leave
push
lret
push
cmpsb
mov
jge
or
xor
outsl
cltd
cmp
mov
jb
out
sbb
in
and
sbb
and
shlb
icebp
enter
call
loopne
add
adc
mov
cmpsb
or
jb
cli
arpl
pop
test
aaa
jmp
add
dec
lods
nop
push
mov
pusha
fldenv
sub
jnp
loopne
outsl
xchg
ja
dec
inc
or
iret
push
jns
movsb
pushf
stc
pop
pop
std
xor
inc
fiaddl
adc
pop
cmpsl
cwtl
xor
pop
addr16
and
scas
mov
lret
aam
mov
xchg
sarb
sub
push
stos
xchg
dec
imul
cmp
aad
inc
movsb
add
mov
mov
fsubrp
mov
inc
scas
out
in
cmpsl
add
lods
add
add
stos
xor
rol
mov
les
dec
dec
add
es
xor
inc
sub
cmp
xchg
std
or
mov
imul
stc
mov
inc
sbb
push
cwtl
push
das
jne
xchg
data16
incl
jae
and
sbb
enter
pop
xchg
and
les
push
hlt
and
mov
lods
xorb
pop
and
incl
xor
sbb
or
ljmp
leave
adc
jo
mov
fs
xchg
or
addr16
mov
pop
mov
mov
pop
mov
mov
add
mov
and
mov
xchg
pop
push
adc
sbb
xor
mov
out
data16
dec
cmp
and
push
and
data16
out
cwtl
mov
push
popf
push
cmpb
popf
push
inc
xchg
out
hlt
xlat
pop
mov
and
jge
fsubrl
movsb
mov
ret
add
aaa
insb
push
sbb
dec
repz
inc
dec
and
sbb
jecxz
mov
push
inc
pop
adc
repz
icebp
ret
mov
jle
mov
pushf
sub
icebp
jno
mov
lds
adc
movsl
push
hlt
xchg
xchg
insb
insl
fidivs
xchg
lret
mov
xor
jge
jl
jmp
icebp
fstpl
mov
xchg
push
fcompl
enter
int
fwait
mov
pop
sahf
xchg
xor
mov
xchg
aam
sub
jne
into
sub
jae
loopne
cmp
clc
adc
mov
inc
inc
jle
xchg
imul
out
and
xor
push
inc
cmp
data16
test
test
push
rcl
pop
cmpsb
sbb
popf
dec
jae
aam
enter
inc
xor
or
xlat
fidivl
jns
imul
aaa
fs
pop
bound
dec
mov
push
js
out
loopne
je
shlb
sbb
ss
adc
jp
cmp
icebp
sub
jl
sbb
stc
jecxz
fildl
inc
mov
push
fwait
js
sub
xor
or
cmp
xlat
adc
and
sub
jmp
hlt
pop
mov
sbb
loope
ficoml
xlat
mov
inc
jo
xchg
aad
popa
hlt
fidivrs
cmpsl
cmp
push
and
jp
pop
sub
pop
jmp
cmp
data16
push
data16
js
out
icebp
add
mov
ret
notb
pop
clc
mov
xchg
jbe
addr16
cmp
and
dec
and
push
adc
js
add
mov
shll
inc
dec
sbb
cs
lock
cmp
hlt
adc
das
pop
pop
sbb
imul
fwait
sbb
add
sarl
clc
push
mov
dec
in
pop
in
lods
outsl
mov
out
inc
rol
sub
adc
pop
add
arpl
data16
adc
je
xchg
insb
jbe
ljmp
shl
imul
dec
xchg
repz
xor
dec
mov
xor
jb
das
in
in
ret
add
mov
mov
sbb
push
jg
js
adc
sub
adc
movsb
mov
arpl
and
ret
cmp
bound
push
std
iret
push
jbe
int3
out
xchg
adc
cli
dec
push
ret
mov
jge
cmp
in
mov
add
lods
add
add
scas
dec
jl
aas
dec
sbb
and
gs
dec
and
addr16
mov
xchg
inc
lods
mov
jo
loopne
xor
shlb
jge
sbb
outsb
ss
mov
imul
mov
mov
inc
pop
les
sbb
xchg
mov
not
jmp
cmp
xchg
mov
xchg
and
fstps
push
xor
mov
ret
jmp
sbb
sub
push
lods
jecxz
in
sahf
lds
std
sahf
fiaddl
sahf
es
inc
aam
mov
jno
xchg
in
ja
mov
cmpsl
mov
cmpsb
or
enter
add
push
pusha
push
fs
dec
cltd
jae
dec
insl
data16
pop
xchg
fs
je
inc
xor
cwtl
push
lds
mov
lahf
pushf
fisttpll
out
shlb
movsb
push
leave
mov
xchg
std
pushw
subl
or
or
bound
aam
in
inc
and
xchg
mov
pop
adc
in
adc
lock
xchg
or
add
or
daa
clc
push
cmp
jl
jecxz
mov
jecxz
das
jae
std
sbb
rorl
push
scas
mov
mov
and
jnp
sarb
mov
sbb
push
mov
imul
sbb
je
cmp
and
xor
mov
cs
insl
fldt
testb
hlt
mov
imul
aas
cmp
xchg
shlb
sahf
xchg
fidivrs
xchg
push
mov
cwtl
int
dec
cmpsl
cmc
dec
ja
ret
push
mov
sub
rcrb
es
inc
mov
mov
inc
mov
shlb
aas
pusha
aam
lods
dec
cmp
mov
test
mull
pop
and
sub
jp
pop
add
push
sub
hlt
add
mov
je
cmpb
iret
add
jbe
xor
fs
cmp
pop
fwait
movsb
cmpsb
xor
cmpsl
mov
mov
out
and
sub
in
jp
lock
mov
movsl
jno
fwait
andnps
idivl
adc
inc
add
dec
outsl
cli
mov
imul
into
cld
cltd
mul
je
jns
dec
out
jle
js
inc
push
xlat
mov
mov
addr16
sbb
xor
add
lcall
fcom
push
adc
fsincos
bound
pop
xchg
push
dec
clc
or
push
cli
add
cmp
sub
movl
rcrb
repnz
cmp
xchg
lods
and
lahf
stos
jle
rorl
clc
lret
sets
out
lcall
mov
cmp
xor
xor
lret
adc
add
mov
xor
repz
sub
repz
jle
shrb
repz
jb
xor
adc
aad
jnp
jp
bound
pop
and
sti
in
cld
mov
neg
jne
push
push
aam
cmp
sub
jb
mov
outsl
or
cmp
sarb
cs
scas
jmp
test
fistps
jp
popf
fstl
in
push
aam
outsl
cltd
sub
insl
xchg
mov
outsb
call
cltd
push
sbb
sub
dec
das
xchg
add
cli
ds
neg
iret
flds
push
test
sbb
in
jmp
lahf
jle
stos
xchg
inc
scas
add
lods
add
add
push
adc
sbb
int3
mov
cmp
jno
loopne
into
sbb
mov
mov
stc
jb
popl
jae
add
xchg
pop
mov
loop
push
mov
and
cmp
cmp
add
lahf
pop
data16
ret
and
mov
arpl
add
xor
pop
adc
mov
jmp
into
adc
cwtl
std
mov
inc
and
out
repz
add
sti
adc
in
imul
sbb
push
testb
bound
andb
jmp
out
fmuls
repz
bound
ret
insl
and
outsb
std
cli
pushf
inc
lds
jg
jnp
test
lds
mov
dec
and
lock
aam
xor
push
pop
into
fs
call
mov
or
sub
inc
xor
dec
fmul
stos
popf
aam
daa
mov
cmpsl
jmp
pop
lock
and
jge
movsb
push
hlt
sub
mov
mov
lds
and
pop
pop
fcmovnb
mov
out
add
lods
mov
les
sbb
mov
sbb
cli
mov
mov
jnp
popa
cmpsb
mov
jno
int3
fisttpl
adc
push
and
in
std
xor
imul
mov
jno
aas
adc
mov
insb
jno
sub
jne
rcrb
cwtl
cmp
push
jmp
jmp
xor
add
imul
lret
sub
cmp
ljmp
sub
addr16
bound
aad
sub
aad
in
in
dec
cmc
jne
mov
pop
jge
dec
jle
dec
adc
jb
jge
adc
cli
xor
add
test
add
inc
mov
inc
xchg
pop
aam
out
fwait
icebp
adc
add
pop
adc
jg
mov
mov
sahf
les
insb
jg
mov
fistpl
mov
xchg
insl
mov
cltd
lahf
outsb
or
lods
rorl
fcompl
aad
mov
pusha
fsts
repnz
push
inc
cmp
shlb
mov
adc
or
test
in
cs
and
add
popf
mov
inc
cmp
mov
andb
les
sub
out
cmpsb
out
stc
ljmp
sub
mov
clc
xor
cmp
rcll
push
stc
cmp
or
pop
or
mov
cltd
and
push
pop
mov
ficomps
or
loop
or
lock
adc
jns
call
test
test
adcb
mov
dec
in
mov
sbb
js
mov
sarl
cmp
out
dec
jns
add
dec
and
std
repnz
cmpsl
rclb
xchg
ret
ret
jecxz
add
leave
pushf
daa
jne
sub
fsubl
push
leave
fdivl
jnp
lods
jo
sbb
daa
push
xor
dec
xlat
mov
mov
sbb
lret
lock
mov
leave
push
bound
pushl
fs
xchg
in
clc
xchg
fiadds
lock
dec
pop
lret
pop
std
lock
lock
and
roll
fisubs
jecxz
add
push
sbb
lret
dec
lcall
pop
inc
jge
mov
add
add
mov
decl
mov
mov
mov
lods
add
add
negl
pop
add
sbb
lea
xor
xorl
lods
lahf
ja
jg
jp
shlb
inc
mov
add
fst
iret
push
movsl
arpl
mov
xchg
test
sub
push
pop
outsl
sub
test
out
ficoml
sbbb
and
sub
or
insl
ficompl
mov
mov
pushf
imul
push
cwtl
es
dec
cmp
mov
push
pop
sbb
dec
repnz
xchg
decb
iret
out
insl
jp
hlt
and
cmpsb
mov
mov
ret
out
xor
mov
mov
int3
rclb
jne
das
repnz
xor
ljmp
sub
push
sarl
or
xor
or
push
cs
sub
std
push
adc
lret
scas
mov
rclb
mov
pop
push
xchg
sbb
mov
fldenv
push
fidivs
lea
or
xchg
ds
mov
mov
cmpsl
sti
cmpsb
jecxz
outsb
push
and
cmp
imul
add
cwtl
lcall
pushf
push
scas
daa
sti
and
jnp
push
xchg
mov
pop
lods
inc
fisubs
int
inc
pop
xlat
mov
jge
shl
sub
adc
cwtl
sub
scas
sub
jle
out
lods
pop
in
pushf
outsl
push
lds
sahf
xchg
int
inc
ss
jbe
loopne
adc
dec
pop
in
push
push
stos
inc
xchg
dec
push
rcrl
inc
mov
mov
adc
mov
inc
loope
cmp
mov
data16
js
xchg
push
xor
push
imul
shlb
dec
mov
repz
xchg
stos
cld
jl
jl
push
std
notb
cld
lock
aam
sub
bound
jge
out
push
stos
mov
xor
pop
mov
out
data16
push
push
std
cltd
cs
rolb
dec
inc
mov
int3
pop
repnz
stc
push
pop
jb
jne,pt
in
fdivrl
fstpt
ss
cmp
int3
adc
fcmovnbe
mov
jne
ds
mov
imul
repnz
pop
rclb
xchg
jns
push
test
and
xchg
mov
shl
iret
push
pop
icebp
mov
add
mov
dec
in
push
ret
shrl
mov
push
cli
movl
xor
out
xor
hlt
in
add
sbb
idivl
xchg
call
mov
xor
out
outsl
cmp
mov
xchg
ja
test
ja
mov
int3
push
pop
and
inc
js
cld
in
stos
add
gs
lods
pop
stos
add
ja
inc
cld
mov
sbb
inc
mov
insb
mov
mov
push
and
pop
lret
addr16
aaa
clc
ja
popf
inc
popf
test
scas
lods
lds
sub
mov
mov
cmpsl
dec
js
and
push
pop
pop
mov
sub
or
ret
and
push
jo
sub
fcompl
push
push
cmpsb
repz
ds
or
push
sub
or
lea
dec
push
dec
push
out
sub
cmp
sub
mov
or
xchg
push
sub
mov
jge
sbb
icebp
rcr
sbb
xchg
cmpsl
out
movsb
pop
xchg
cmpsl
sbb
shl
pop
push
sbb
and
pop
test
add
lret
xorb
icebp
lret
aam
imul
dec
dec
pop
popf
mov
add
call
mov
xchg
cltd
aaa
adc
nop
ret
pusha
movsb
sahf
test
jns
arpl
sub
push
sbb
in
fistpl
pop
outsb
xor
in
add
sbb
adc
shrl
lcall
mov
push
mov
mov
cmpsb
and
sbb
mov
mov
or
loope
out
xor
push
loop
dec
mov
mov
bnd
pop
daa
std
mov
shll
icebp
mov
mov
mov
xchg
cwtl
or
movsb
stos
adc
mov
into
mov
mov
orl
es
fiadds
mov
xor
and
test
daa
adc
xor
das
cmpsl
or
decb
mov
dec
fimuls
hlt
js
fisubs
shrl
xchg
dec
xchg
das
pusha
arpl
or
jl
aam
js
lea
sub
out
inc
imul
cmpsb
and
xchg
shll
inc
jmp
jo
sbb
sbb
mov
cmc
push
shll
or
or
lods
bswap
push
add
ds
sub
loope
std
adc
aas
jo
jle
les
aam
int3
adc
sbb
out
mov
dec
xchg
sub
orb
sub
test
inc
das
xchg
addr16
lret
xor
dec
and
or
fsubs
mov
pop
rcrb
rcl
push
mov
and
xor
xorb
fcomip
inc
lcall
sbb
lret
arpl
icebp
shlb
dec
jmp
popf
inc
push
adc
test
dec
sarb
cmp
lahf
mov
lock
mov
lret
dec
movsl
jbe
popa
ficoml
std
xchg
je
imul
test
aad
test
push
inc
jmp
rclb
mov
repnz
mov
jg
lods
jo
leave
cmp
jb
bnd
dec
repnz
ficompl
mov
bound
xchg
stc
jp
fdivl
adc
xchg
mov
fisubrs
sbb
push
mov
into
xor
mov
adc
stc
add
enter
je
mov
aam
cltd
stos
fs
dec
mov
xlat
and
aas
pop
inc
add
cs
decb
inc
fcmovnb
push
sbb
roll
xor
cmp
and
inc
push
lret
fnstenv
sahf
stos
mov
sub
push
sbb
push
jp
xchg
mov
shrl
lret
in
mov
insb
bound
mov
scas
xor
jl
subl
jbe
fnstenv
pop
test
push
shrl
xchg
jno
xor
ja
adcl
mov
sub
inc
cmp
inc
stos
std
fildll
test
bound
cmpsb
pop
mov
aam
lock
aad
outsb
jo
ret
in
cmp
dec
pop
pop
sub
mov
movsb
jp
push
xchg
mov
cmp
arpl
fists
cmc
jmp
mov
mov
inc
cmp
lock
lock
repnz
xchg
daa
scas
jg,pt
sahf
fcompl
mul
lahf
jp
jp
in
sarl
xor
add
pusha
imull
cmp
pop
pop
test
dec
arpl
leave
lcall
lret
repnz
xchg
inc
bound
movsb
cmp
add
imul
and
clc
adcb
ret
xchg
dec
dec
lods
addr16
jecxz
mov
in
mov
lds
out
clc
mov
dec
xchg
mov
mov
mov
xor
sbb
rolb
jno
push
push
add
inc
add
enter
sub
movsl
or
in
in
mov
jmp
adc
movsl
push
ss
jnp
add
lods
push
repnz
cmp
popl
fnstenv
mov
cmpsb
or
pop
out
aam
ljmp
out
lahf
std
mov
lret
sub
jl
adc
jnp
dec
inc
jbe
push
sti
mov
push
es
dec
dec
aas
or
iret
jne
pop
stos
scas
pop
pop
jns
mov
dec
or
test
scas
or
inc
push
mov
lea
cmp
adc
jno
popa
inc
or
sub
or
mov
sbbl
outsl
push
dec
pop
dec
mov
pop
imul
test
sahf
sahf
mov
xor
in
sbb
popa
xor
das
sub
jge
mov
fs
mov
xchg
mov
sub
sub
inc
dec
stos
pop
daa
aaa
nop
jae
jae
ljmp
dec
cmpb
pop
lds
jmp
add
dec
std
fidivl
adcl
cld
or
popa
mov
pop
jbe
jp
pusha
xor
mov
mov
into
out
cmpsb
outsl
cli
dec
push
pop
cmp
mov
and
or
pop
sub
pop
add
or
push
movsb
jb
ret
imul
jmpw
ret
test
rcrb
mov
or
jno
fdivrs
and
movsl
into
adc
pop
test
and
adc
aad
jne
xchg
sbb
shll
jge
shrb
cli
andl
fisubl
dec
push
mov
dec
jns
add
jno
cmpl
out
gs
stos
cmp
out
lahf
mov
push
scas
arpl
shll
hlt
imul
push
lret
mov
dec
das
xchg
in
cmpsl
jns
data16
and
xchg
or
orl
andl
leave
jge
xchg
pop
pop
scas
lret
loopne
pop
out
fmul
xchg
xor
or
pop
ror
out
xchg
call
mov
out
movsb
sbb
daa
push
inc
cmp
ss
inc
insl
add
das
stos
xor
add
mov
mov
xchg
push
movsb
mul
xlat
cmp
gs
push
fwait
mov
sbb
daa
scas
mov
enter
in
push
cmp
ljmp
mov
ja
xorb
xchg
pop
mov
lcall
loop
sahf
in
jnp
xlat
mov
and
or
push
xchg
fstpl
lcall
aas
jmp
inc
jno
movsl
rorb
push
sbb
and
push
cli
jge
jb
aam
mov
or
push
clc
sti
int
jle
jb
loope
ficoms
and
popf
and
xchg
add
add
mov
lcall
add
insb
jmp
lods
add
add
sub
pop
adc
shrb
add
out
out
pop
iret
xchg
jp
mov
or
fiadds
sub
mov
xor
cmp
adc
outsl
push
sbb
add
mov
ljmp
or
sti
mov
pop
cmp
mov
push
nop
daa
push
pop
cs
cmc
testb
mov
sub
int
adc
cmp
pop
mov
xchg
and
add
xor
in
lcall
call
inc
jo
xchg
xchg
jle
aad
ja
lods
sbb
mov
and
int
sbb
sti
pop
stos
jne
aad
hlt
xchg
jp
out
das
adc
adc
test
sbb
mov
jnp
test
xor
cmpsb
cli
and
cmp
sahf
jle
jne
sub
fstpl
jle
xor
out
pop
int
mov
ret
xchg
adc
or
out
xchg
dec
inc
pop
ret
enter
inc
call
dec
and
pop
arpl
mov
or
push
stos
test
push
push
sbb
repz
imull
pop
addr16
lea
mov
leave
push
mov
insl
mov
test
shll
rcll
out
mov
add
in
test
xchg
mov
jne
xchg
push
push
cmp
stos
pushf
jge
test
sar
push
mov
xchg
xor
dec
and
shlb
add
dec
jnp
adc
and
adc
sbb
test
sbb
popa
mov
std
dec
out
sub
dec
cmp
aam
cmp
scas
adc
xchg
jns
cmpsl
mov
lcall
push
push
fs
fs
push
mov
pushf
xor
decb
lea
add
jmp
aaa
inc
test
xor
inc
mov
sahf
cmpsl
cmpsl
add
xor
test
mov
movsb
lods
jae
push
pop
dec
dec
push
dec
sub
in
push
push
sub
pushf
ret
out
xor
adc
push
mov
mov
xchg
stos
add
pop
fsts
and
nop
mov
das
push
push
cmp
mov
leave
mov
mov
pop
add
jmp
dec
cwtl
cld
dec
push
sub
and
test
mov
fists
lret
pop
imulb
hlt
lock
jmp
into
pop
push
and
xor
movsl
add
jmp
add
xchg
enter
pcmpgtb
sub
dec
add
bound
pop
and
ss
jge
jno
dec
cmp
loopne
fcmovnb
sbb
jg
mov
jmp
push
jbe
push
scas
xchg
add
and
or
xor
add
add
int3
cmp
insb
fmulp
cs
mov
pusha
repz
lods
and
int3
dec
pop
fbstp
xchg
test
xor
sub
shl
into
jns
jae
stos
jns
inc
push
std
ret
arpl
ret
negb
aas
xchg
xchg
sub
pop
popf
xchg
dec
sarb
addr16
ljmp
lock
push
sahf
into
pusha
xor
jg
xor
cmpl
xor
fwait
in
or
movsb
xor
pop
cltd
test
pop
push
push
mov
mov
cmp
ljmp
add
fisubl
std
mov
test
xchg
push
fldl
outsb
pop
mov
jp
pop
pavgw
mov
out
dec
enter
inc
shll
add
jp
mov
dec
shrb
jg
mov
pop
inc
push
in
popa
mov
xor
lods
xchg
pop
xchg
sbb
cmp
in
std
jno
xor
std
xchg
ret
out
adc
pop
rcl
push
lds
popa
or
cmp
xor
fdiv
and
inc
xchg
mov
and
adc
adc
inc
ret
cmp
or
movsl
inc
push
sub
leave
in
mov
lahf
std
sbbl
cmp
test
lods
push
xchg
aaa
out
cwtl
fisubs
loopne
cmp
or
pop
xchg
push
shlb
popa
mov
clc
sbb
cs
fisubrl
sahf
outsb
rcrl
jne
shll
stos
mov
jnp
mov
and
or
roll
stc
add
popa
or
cmp
int3
and
add
jne
xchg
pop
mov
or
jl
sbb
mov
pop
jo
mov
jb
gs
ds
hlt
shlb
test
loopne
out
mov
jnp
cmp
popa
jbe
movsl
cmc
or
push
mov
push
testb
adc
sbb
cmp
leave
jno
push
stc
push
in
call
adc
icebp
pop
dec
adc
xchg
frstor
mov
adc
cli
in
jge
repnz
sub
add
adc
adc
in
cmpsl
ret
hlt
lea
bound
cmp
mov
jmp
sti
or
push
push
sub
pop
lock
stc
pop
lahf
shll
ja
outsb
push
pop
movsl
inc
mov
pop
out
leave
add
es
dec
mov
pusha
dec
sub
das
decb
shlb
jg
test
rcrb
cmp
test
jmp
les
dec
mov
push
push
pushf
push
jb
aad
mov
push
xor
xor
pushf
es
hlt
stc
jmp
jo
pop
ds
sub
or
dec
fdivl
and
mov
loop
xlat
cwtl
es
int3
sahf
mov
mov
mov
xchg
pop
xor
and
add
sub
push
push
std
jo
xchg
lods
mov
jns
push
repnz
mov
fwait
jp
fdivl
lods
dec
mov
mov
mov
ucomiss
mov
lods
jg
popa
add
mov
and
int3
rcrl
xchg
mov
imul
bound
push
mov
loope,pn
push
testl
outsl
push
push
adc
stos
sbb
js
iret
inc
adc
cld
inc
dec
scas
jmp
xchg
popa
addr16
scas
loope
cmpsl
adc
sbb
in
inc
in
mov
das
aad
ret
out
and
daa
push
outsb
and
and
adc
pop
xchg
lret
or
mov
outsl
adc
or
mov
sti
mov
std
cmp
and
je
lock
adc
mov
int
lahf
pop
addr16
bswap
xchg
jne
mov
mov
xor
lahf
push
insl
sbb
ficoml
sahf
jp
daa
cli
test
jno
in
out
ljmp
mov
jbe
rclb
add
add
mov
xor
sarb
add
ljmp
scas
stos
mov
add
xor
xor
xchg
stc
test
fsubr
stos
cld
inc
cmpsl
stos
inc
sbb
loope
mov
or
je
mov
mov
dec
sub
std
insl
jo
jle
xchg
jge
in
push
pop
cmc
mov
lret
and
fists
popf
loop
mov
pop
outsl
mov
add
sub
iret
jbe
mov
test
int3
xor
pop
adc
stos
mov
inc
fmull
and
and
xchg
sub
jae
loopne
mov
xor
mov
movsb
or
and
inc
shll
push
fs
into
aas
xchg
mov
cmp
jmp
lcall
pusha
inc
xchg
icebp
mov
int3
and
mov
clc
pop
dec
mov
cmp
pop
iret
icebp
fisttpl
fcos
scas
aad
fcoml
adc
imul
sub
pusha
ss
cmpsb
lea
xor
or
pop
into
push
inc
push
les
adc
leave
sub
imul
xchg
fnstcw
nop
or
rcrl
scas
push
outsl
and
dec
lods
mov
scas
scas
es
add
jmp
mov
adc
int
sbb
arpl
out
cmpsl
pop
inc
jb
xchg
jo
cld
jge
lds
outsl
leave
imul
je
cmpsl
clc
leave
and
dec
fidivs
sbb
cmp
repnz
adc
dec
lea
sbb
mov
and
xchg
fcoml
popa
dec
pslld
jle
pop
xor
push
insb
adc
out
sbb
loop
lds
clc
lods
pop
push
lret
in
dec
push
adc
repz
mov
xchg
cmpsl
xchg
scas
pop
jno
popa
aaa
pop
inc
xor
cmp
and
cltd
and
pop
das
inc
mov
jmp
clc
mov
ret
sbb
lea
sbb
dec
jmp
popf
cmp
into
and
ds
jmp
push
xor
testl
sub
push
je
lea
pop
iret
ds
in
fcompl
pop
lods
nop
jnp
ror
push
mov
xchg
js
mov
jecxz
pop
xor
movsb
xchg
xor
inc
and
adc
sub
movsl
rcrb
int
xor
aam
out
lea
push
and
inc
setae
dec
and
mov
push
jae
mov
into
pushf
addl
pop
mov
mul
imul
insb
in
pop
mov
jno
mov
mov
jb
sarl
cmp
lcall
jae
cmc
sahf
adc
loop
push
test
pop
scas
es
xchg
in
xchg
mov
out
push
call
jle
fadd
inc
jno
les
pop
les
mov
ret
imul
les
idivb
push
mov
cmpsl
fwait
ret
adc
outsb
mov
ds
fbstp
cwtl
fdivrl
imul
or
ficompl
or
orb
lcall
sub
mov
pop
mov
outsb
mov
rolb
push
jmp
dec
mov
or
into
loopne
fidivrs
dec
xchg
cmp
fcoms
jo
imul
dec
pop
out
jbe
psubw
add
lods
add
add
xor
lock
ds
and
cmp
dec
xor
add
push
stos
mov
cmp
jmp
cs
mov
add
sahf
pusha
push
mov
in
pop
mov
pop
sub
test
inc
xchg
aam
mov
fdivs
push
ret
mov
icebp
cmp
nop
dec
inc
jno
stos
and
clc
dec
pusha
stos
inc
insl
sbb
cmp
sub
or
jle
xchg
es
mov
sbb
fisttpll
mov
add
stos
repz
icebp
inc
sub
or
mov
mov
dec
inc
icebp
inc
bnd
test
popl
mov
imull
xor
lret
lss
dec
xchg
cli
push
adc
or
in
jnp
fisubl
cld
mov
hlt
shrl
in
jb
ret
cmp
fisttps
jmp
and
and
gs
lcall
jne
mov
outsl
push
stc
dec
les
fnsave
les
js
push
mov
sbb
sbb
scas
or
push
adc
fcoms
mov
loopne
addr16
xlat
inc
cmp
push
int
pop
call
stos
mov
mov
test
sub
test
stc
sbb
pop
aad
fisubrl
push
mov
sub
test
jmp
pop
jmp
mov
jmp
dec
xchg
inc
clc
scas
jmp
sti
lahf
cld
or
jmp
lock
es
mov
cmp
fcoml
fstl
jl
in
lock
xor
cmc
mov
int
in
fildl
mov
fwait
inc
sbb
mov
aas
lret
fs
in
adc
xor
lret
sub
xor
add
es
mov
and
mov
fwait
pop
jnp
pop
sarb
lcall
loop
jl
sub
mov
outsb
sti
sbb
xor
repz
dec
or
inc
xor
out
lock
std
push
inc
lahf
dec
mov
mov
pushf
mov
xlat
dec
test
in
lcall
jge
cli
mov
mov
js
daa
mov
mov
cmc
jb
shlb
and
jnp
lret
push
xchg
outsl
sar
inc
out
cs
bound
pop
shlw
pop
test
pop
je
jnp
dec
es
sub
dec
fwait
loop
movsl
rcrb
test
add
test
pop
lds
adc
lret
bound
push
mov
aaa
jb
xchg
inc
jp
mov
iret
ja
test
jb
mov
sub
out
lods
rol
cmp
inc
cmp
pushf
jmp
dec
and
dec
mov
push
lahf
mov
sbb
fwait
cli
xor
scas
inc
xchg
cmc
pop
pusha
loope
mov
scas
rorb
or
gs
xor
sbb
rcl
data16
fmull
movsb
sub
pop
mov
push
xlat
add
cwtl
adc
pop
ror
fbld
mov
dec
inc
or
xchg
jbe
sub
stos
pop
out
sub
push
xchg
mov
aas
lret
lods
insl
jb
jp
pushf
or
sahf
dec
fsubrs
add
inc
repz
int3
xchg
bound
in
or
adc
add
jmp
or
scas
jmp
popa
mov
or
jbe
movsl
int3
add
lods
add
add
jb
jecxz
aad
cmp
insb
retw
fldcw
pop
out
or
jno
inc
outsl
jp
jbe
cmp
push
sbb
xlat
mov
dec
mov
ljmp
aaa
sbb
aad
mov
mov
lcall
jo
js
repz
mov
das
mov
lds
mov
cmp
cmp
inc
sbb
iret
ret
xor
imul
stc
mov
mov
arpl
pop
push
xchg
sub
mov
psrld
mov
insl
mov
imul
cmpsb
lret
cs
add
in
lods
test
adc
leave
xchg
push
rorl
es
imul
adc
push
push
popa
xor
or
mov
mov
sbb
inc
mov
mov
cltd
lcall
ss
xlat
mov
jo
dec
fwait
jb
adcb
jmp
and
mov
adc
mov
lods
push
xchg
ret
add
fldcw
out
vpcmpgtb
or
fisubs
adc
inc
xchg
fadds
sbb
pop
dec
popa
push
push
ret
aam
lds
cli
push
mov
jne
mov
loopne
mov
mov
or
das
xor
cmp
repz
fwait
jo
pop
popa
pop
aad
push
cs
int3
xor
gs
shll
cltd
repnz
adc
mov
pop
jb
inc
dec
sbb
adc
xchg
mov
leave
fs
add
lret
sbb
ljmp
jg
popa
xlat
mov
cltd
lock
adc
popf
mov
mov
inc
dec
push
xor
fiaddl
sarb
ja
andl
pushf
dec
arpl
aaa
je
or
inc
mov
jne
addr16
nop
sub
mov
maxps
cmpsl
mov
adc
mov
mov
sbb
cs
and
mov
add
jne
jecxz
xchg
lds
cmc
sbb
inc
add
xor
mov
mov
cmpsb
lock
push
and
xchg
mov
jne
sub
insb
rcr
add
testl
pop
sub
pop
add
mov
push
cmpsl
popa
scas
loopne
sbb
cmp
in
negb
in
push
push
stc
and
push
es
loopne
mov
mov
daa
rcll
inc
sbb
sbb
loop
cmc
sbb
mov
mov
imul
sbb
or
ret
cmp
mov
or
pop
inc
push
movsl
sarl
cmpsb
jmp
mov
and
scas
jge
repnz
aam
push
enter
sub
push
push
mov
mov
ss
fldenv
dec
cmpl
rorl
rorb
inc
scas
scas
push
out
loope
outsb
lods
dec
imul
in
mov
imulb
in
lds
das
ret
ljmp
clc
enter
push
jge
jl
loop
pop
movsb
xchg
dec
ds
inc
fdivs
fstps
mov
mov
adc
sub
ss
and
cwtl
ja
insl
pop
dec
mov
dec
inc
leave
ja
in
test
push
cld
mov
push
rolb
add
sub
int3
xchg
add
inc
xlat
imul
cwtl
int
fstpl
iret
adc
pop
mov
in
inc
aaa
inc
jge
enter
add
sahf
adcl
fwait
push
pop
data16
cmp
loope
xor
out
pop
in
test
xchg
mov
jns
dec
push
jne
jle
cmp
xchg
ja
jg
mov
push
sub
xchg
insl
push
inc
sti
call
dec
xchg
dec
test
xor
imul
in
movsl
cmp
jle
add
dec
sbb
sbb
frstor
rcr
mov
mov
mov
loop
jne
cmpsb
mov
inc
cmp
cmc
js
fadd
pop
xchg
sub
push
idiv
xor
pop
insb
sub
lods
stc
jp
push
lods
insb
pop
mov
hlt
cmp
push
stos
mov
mov
hlt
shl
sbb
or
cmc
popf
neg
xchg
push
aaa
dec
sbb
ljmp
mov
cmp
inc
mov
fnstenv
dec
mov
jecxz
cld
test
ret
jo
fs
mov
out
sbb
jmp
cmpsb
xor
lcall
pop
xor
jo
jle
lcall
jecxz
xor
sub
cmp
xcrypt-ctr
cmpsl
sbb
pop
js
adc
mov
jecxz
add
jl
or
lods
adc
fcos
jo
fidivrs
cmc
push
scas
xor
and
push
or
xor
scas
mov
rorl
pop
mov
inc
xchg
into
adc
dec
xchg
popf
push
push
mov
mov
mov
sahf
roll
mov
xchg
mov
add
out
inc
fwait
push
sub
insb
ss
cli
push
jle
iret
push
sbb
mov
adcl
inc
cltd
and
clc
sbb
ret
mov
or
test
popa
test
fsubs
jno
pop
cs
outsb
add
pop
pop
ret
dec
lods
fsubrl
into
out
outsb
jp
xlat
xor
inc
out
mov
outsl
jne
imul
xor
mov
out
jo
lea
add
adc
pop
cmp
xchg
loopne
out
mov
lcall
mov
mov
sbb
out
loope
sub
cmc
xchg
notl
scas
ret
mov
sar
jmp
xchg
cmp
stos
shll
lret
ljmp
cmp
push
jo
bound
fdivrs
push
xchg
ljmp
stos
xchg
xchg
xor
pop
std
insb
arpl
daa
mov
cmp
cmp
rcrb
fadd
das
std
jle
fidivrs
jmp
xchg
sub
or
xor
fisubs
daa
mov
and
cmpsl
scas
out
jno
popa
mov
cmc
pop
jge
push
sub
push
int3
inc
xchg
sub
mov
jg
out
cmpl
out
sub
mov
scas
outsl
jmp
leave
adc
lret
mov
clc
inc
iret
jno
mov
sub
mov
cmp
dec
test
insb
xor
and
fwait
cltd
jo
inc
decb
xchg
mov
cmpsb
jno
lea
jmp
add
add
leave
popf
lret
popf
pop
xlat
loope
lock
and
std
roll
add
lods
mov
call
adc
cwtl
xor
hlt
inc
xchg
lret
dec
mov
add
adc
or
out
adc
mov
sub
lcall
insl
fwait
popa
sti
xlat
leave
hlt
or
repz
mov
adcb
pop
inc
outsl
sub
adc
xor
inc
fnstcw
mov
ja
mov
enter
sub
push
sbb
cwtl
fstps
xchg
pop
mov
push
push
insl
xchg
xchg
leave
sub
popa
jae
cmp
cmp
push
iret
into
sbb
dec
dec
divb
xchg
call
pop
repz
push
sbb
dec
fists
aam
in
std
jmp
cmp
pop
sbb
push
scas
push
mov
push
inc
mov
and
call
add
pop
sbb
push
insl
jg
jecxz
jbe
pop
fcmovnb
outsl
or
mov
aas
scas
push
sbb
repnz
pop
call
call
repnz
fdivs
and
shll
in
inc
xchg
lds
xchg
add
les
mov
lret
or
sub
mov
sub
lret
pop
mov
push
jo
jo
movsb
push
and
outsl
cmpsb
mov
xchg
loope
mov
imul
mov
daa
sbb
push
add
pop
sarl
push
cli
mov
xchg
idivb
push
lret
ds
testb
sets
mov
add
aam
sub
jb
mov
loope
jecxz
and
push
xor
aam
stos
dec
test
cmp
ss
popa
add
cmpl
adc
sbb
sbb
and
test
pop
jp
je
jae
sub
bound
cld
aaa
std
adc
fs
add
cli
data16
fstl
les
mov
adc
movl
std
jmp
pop
xor
or
incb
cmpsb
inc
pmulhw
jmp
in
sub
insb
jl
in
hlt
cmpsb
iret
xchg
inc
int
mov
xorl
xor
int
inc
loop
sub
aam
shr
cmpsb
fwait
in
cmp
xchg
mov
pop
mov
enter
iret
fxch
cmp
push
mov
add
sbb
push
fistpl
pop
outsb
push
rcrb
mov
cmp
scas
sub
or
sbb
push
cmp
aas
lea
mov
fmul
adc
or
fistpl
xchg
enter
lcall
xchg
jno
in
scas
sti
pop
ja
sbb
or
sbb
and
ss
js
rcll
in
stc
inc
push
fists
xor
movsl
add
pop
ret
popa
arpl
sbb
and
ret
add
cmp
inc
push
pop
dec
enter
imul
mov
sbb
lret
ds
mov
shrb
sub
push
test
jle
cmpsb
cmp
fstl
fidivrl
mov
int
insl
xlat
pop
inc
rcr
repz
xor
adc
sahf
push
cmp
hlt
jge
push
sahf
aas
cmp
cmpsl
fldenv
lock
xor
rorl
mov
mov
push
or
sbb
lret
jmp
lahf
test
sbb
mov
sti
lcall
dec
pop
popa
sub
cwtl
scas
sub
add
add
dec
push
cmp
rorb
xor
lcall
lret
push
mov
scas
test
pop
fsubrl
sahf
enter
sub
bound
fxch
fidivs
data16
jge
int3
xor
das
cmp
out
cmc
jge
fwait
push
adc
xor
outsb
xchg
mov
outsb
or
mov
pushf
lods
out
cmp
push
shll
xor
hlt
es
add
les
rcrl
stos
pop
ja
movsb
arpl
test
sub
ljmp
fsubrl
shr
out
inc
outsb
call
pop
jnp
push
out
add
cli
imul
add
xor
sarl
add
xchg
or
filds
movsb
or
pop
pop
decl
mov
das
mov
jno
fistl
push
test
xchg
mov
and
jns
ret
pop
test
in
inc
leave
lods
push
jne
xor
lcall
xchg
int
in
push
fidivs
imul
add
stos
lret
push
jo
sbb
fbld
dec
and
out
push
sahf
inc
xlat
jae
add
mov
lret
jbe
out
out
dec
imulb
mov
ficoms
lods
cmpsl
test
out
loopne
cmpsb
cld
jbe
mov
stos
rcr
mov
push
mov
cmp
fs
aaa
mov
shll
fsubrs
add
cltd
jns
jge
movsl
into
mov
shll
jge
scas
mov
dec
rcll
push
mov
and
pop
test
pop
sbb
and
mov
xchg
sbb
jnp
push
int3
pop
pop
sbb
mov
pop
add
leave
subl
imul
mov
cmc
jp
insb
mov
jns
loopne
jmp
cmp
lgs
sub
xchg
mov
cs
loopne
pop
cmpl
mov
mov
mov
xorl
les
lods
xchg
mov
stc
shll
test
in
xor
xor
mov
ret
popa
inc
daa
add
jl
or
xchg
cwtl
or
dec
add
scas
ror
pop
int
int3
mov
ds
ret
adc
xor
lods
lcall
test
out
mov
jbe
aas
mov
jge
pop
repz
lcall
fbld
scas
loop
cld
in
pop
popa
int
fistpl
push
adcl
push
ret
cmp
cli
jnp
xrelease
jo
sub
adcb
ret
and
add
push
dec
mov
mov
out
das
in
add
cmp
shll
stos
mov
sub
daa
sub
and
outsb
and
push
mov
jne
adc
mov
stos
int3
fsubrp
rcr
or
lcall
jnp
shlb
divl
clc
mov
rdseed
aam
loop
mov
mov
xor
dec
sbb
popa
sti
pop
and
mov
lret
or
cmp
jmp
and
mov
and
loop
aas
scas
lahf
data16
inc
sub
scas
mov
fistpl
mov
call
jecxz
cltd
pop
das
fldt
lcall
cmpsb
js
mov
or
add
push
add
jnp
data16
decl
std
or
mov
add
testl
outsb
insb
fstps
popf
jae
xor
or
push
xor
cmp
pop
push
jge
fnstenv
add
test
adc
push
pop
scas
stos
scas
add
pusha
xlat
das
or
and
cs
clc
icebp
adc
add
mov
leave
test
cmpl
cli
lock
fwait
push
int3
test
ds
fwait
in
in
sub
dec
pop
push
testl
lahf
mov
jecxz
jmp
fimuls
pop
xor
test
dec
dec
pop
pop
stos
or
xor
push
adc
sub
insb
pop
mov
aaa
rclb
gs
mov
dec
ret
mov
ret
add
test
dec
or
cmp
cli
mov
popf
xchg
sub
cmp
ja
imul
fadd
pushf
insl
mov
rorl
ret
inc
insb
jno
ss
jno
rcr
addl
scas
sub
inc
mov
popf
sbb
inc
rcrl
and
cmp
mov
dec
jae
rclb
movsb
mov
mov
adc
leave
clc
cmc
or
lahf
pop
lahf
lret
add
cmp
orb
inc
repz
pusha
inc
ficoml
xlat
cli
inc
lahf
sbb
fwait
cld
sbb
mov
mov
pushf
stos
mov
mov
imul
hlt
cs
mov
ds
pop
dec
data16
in
add
scas
add
test
loopne
mov
sub
mov
mov
insl
dec
xor
loop
leave
xor
clc
loopne
fistpll
and
fwait
pop
subb
imul
dec
push
into
aam
cmp
arpl
pusha
cmp
inc
add
mov
fwait
aam
xor
test
or
les
shrb
adc
sub
sbb
cwtl
inc
int
xchg
ret
ficoms
leave
add
sbb
gs
mov
and
pop
loopne
mov
sub
fistpll
fs
js
enter
movsl
cmpl
getsec
push
scas
repz
cmp
popf
push
xchg
arpl
mov
fdivrp
push
pusha
xchg
hlt
and
mov
or
mov
dec
hlt
sti
push
pusha
je
cld
mov
popf
mov
push
ds
sbb
sub
adc
movsl
sti
cmp
mov
sub
scas
clc
push
lock
jecxz
push
je
fwait
movsl
jl
popf
shr
movsb
mov
add
and
or
jb
in
push
xchg
inc
or
sbb
push
xchg
and
std
lds
mov
shlb
movsl
ror
ljmp
jmp
dec
mov
jae
imul
popa
sbb
inc
cmp
and
cli
push
and
xor
pop
inc
lods
ss
push
pop
aaa
or
sbb
pusha
adc
xor
iret
add
jbe
push
test
clc
shl
sub
fdivrs
mov
sub
arpl
sbb
cltd
push
push
inc
adc
lods
fwait
dec
outsb
into
insb
sbb
jns
les
pushf
lret
neg
int
push
or
xchg
mov
fimuls
adc
cmp
cmp
push
xlat
popf
cli
dec
rorb
mov
add
into
psrld
rcr
fistpll
push
test
pop
pop
add
add
lods
add
add
dec
icebp
sysenter
or
mov
sub
or
out
repz
pop
inc
inc
aam
cmp
fcoml
call
ds
icebp
add
dec
push
jge
or
mov
shlb
in
push
loope
fcoms
icebp
incl
inc
out
jno
scas
lcall
add
mov
adc
aad
lds
data16
aad
mov
rcll
jecxz
testb
adc
in
cltd
xchg
push
iret
repz
aad
pop
xor
add
inc
pop
pop
fsub
stos
movsl
mov
jecxz
test
fs
stos
pop
sbbl
xor
les
mov
cmp
inc
ss
lcall
pop
dec
mov
lock
ret
push
xor
mov
lret
test
addl
mov
mov
xlat
rcrb
mov
adcb
pop
gs
dec
lret
xchg
stos
pop
jmp
and
push
adcb
xor
fidivs
push
or
lret
cmp
pop
cli
pop
in
out
xor
jnp
add
fcmovne
pop
pop
pop
ret
inc
mov
ret
imul
ror
loope
inc
add
push
xor
cmp
dec
mov
popf
fs
lds
inc
cmp
xchg
das
sub
mov
in
cs
push
and
xorl
and
lock
ret
std
add
pop
test
je
loopne
push
fs
cltd
pop
xchg
push
xor
sub
dec
dec
decl
mov
inc
xchg
lret
add
mul
int
and
cmp
loope
jno
lcall
push
xchg
sarb
adc
mov
pop
movsl
test
cmp
sahf
in
sub
cmp
jmp
cltd
sub
cmp
in
fcom
jmp
rclb
int
out
pop
xchg
pop
mov
movsb
jbe
sbb
clc
out
js
xchg
xor
mov
dec
cmp
int
dec
jp
rorl
outsl
sbb
ss
or
jle
mov
mov
repz
aad
daa
jbe
xchg
mov
or
insb
or
sbb
std
cmp
inc
test
in
mov
sahf
inc
xchg
sti
push
xchg
xchg
flds
pop
add
jecxz
adc
cwtl
jne
jnp
sub
pop
sub
dec
mov
in
cld
jns
pop
add
sahf
sub
cld
testb
sbb
cmp
rcrl
or
lods
cmpl
adc
and
sbb
mov
mov
xor
push
cmp
push
dec
pop
fwait
sahf
sar
mov
pop
mov
mov
ds
ret
mov
rcrb
ja
mov
jne
pop
icebp
pop
jge
stc
aaa
push
lock
add
sub
cmp
rcl
jno
adc
sbb
ljmp
adcb
or
cmp
loope
sub
jo
popf
hlt
mov
push
in
dec
in
into
sbb
mov
xchg
xor
or
jne
cmp
xchg
inc
mov
pop
xchg
cwtl
subl
arpl
icebp
and
pop
mov
jno
sbbb
mov
pop
push
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
add
add
leave
lods
inc
stc
cmp
push
lds
and
fisubrl
imul
dec
mov
push
xchg
sbb
ret
xchg
movsl
pop
push
sbb
jge
xchg
hlt
outsb
movsb
fildl
mov
xor
mov
sbb
imul
mov
add
into
cmpsl
and
data16
jp
xchg
xchg
movsb
sbb
jl
out
inc
adc
xchg
cmp
inc
lahf
lret
xchg
push
cmp
test
sbb
mov
mov
add
add
popa
lock
jns
inc
ficompl
daa
pop
push
dec
popf
lods
jmp
inc
enter
mov
or
mov
push
mov
adc
fwait
inc
movsb
xor
imul
xor
mov
bound
lret
sbb
repz
cmc
push
and
cwtl
xchg
pop
stos
aad
repz
push
xchg
mov
je
and
mov
mov
inc
xorl
inc
fiadds
inc
jecxz
push
adc
das
js
loope
jmp
push
push
cmc
js
ja
jecxz
pop
mov
push
sbb
push
icebp
add
pusha
cmc
enter
mov
cmp
push
inc
xchg
outsl
fisttpll
out
outsb
jb
mov
push
out
sbb
pop
loopne
repz
fucomi
xchg
dec
jl
ret
out
lcall
or
mov
jns
mov
jecxz
mov
imul
jp
loope
lea
test
lcall
rcll
cmp
jo
ljmp
aad
xor
test
into
cmp
inc
lock
cli
mov
scas
shrl
jl
divl
stos
adc
xchg
je
cmp
addb
jb
cmc
mov
pop
mov
mov
in
xchg
test
addr16
stos
jmp
pop
cmp
xchg
je
cld
ret
add
es
cmp
jbe
mov
into
jae
insb
cmp
jne
push
out
nop
push
leave
insb
push
sbb
in
jp
stc
pop
fidivrs
enter
push
or
out
inc
loop
insb
mov
pushf
push
and
push
xchg
push
xchg
mov
popa
jbe
aaa
cmp
jae
xchg
inc
mov
das
test
and
and
or
jae
or
xchg
leave
xchg
fisubrs
rcll
jno
or
movsb
xor
xchg
dec
lret
dec
cwtl
rcl
aas
sbb
jbe
or
iret
sbb
leave
inc
mov
test
mov
inc
adcl
mov
sub
lds
adc
add
cli
aad
lret
arpl
add
mov
inc
jb
sbbb
into
add
inc
cmp
push
inc
adc
jle
adc
jle
call
jo
test
add
inc
xor
xchg
jle
lock
jb
or
add
data16
dec
test
imul
adc
gs
mov
int3
mov
cmc
es
add
insb
pop
das
ds
inc
xor
sub
cmpsb
cli
cwtl
scas
inc
and
pop
lcall
cli
jb
jb
xor
and
sbb
test
or
nop
dec
add
pop
cwtl
add
xchg
movsb
dec
jne
mov
fdivl
sbb
ret
jg
mov
rcl
out
mov
out
add
ret
push
test
pop
fisttps
xchg
stos
xchg
mov
js
imul
inc
sbb
pop
repz
jge
inc
out
and
pop
test
jno
outsb
movl
dec
rol
and
mov
loop
sbb
fsubrl
push
push
mov
pop
scas
aam
xchg
push
mov
sub
push
insl
and
inc
adc
lock
or
mov
test
fdivl
mov
popl
sti
orl
int3
outsb
and
cmp
or
pop
test
lock
pop
cld
movsb
mov
sarl
stos
xor
fcmovnu
loope
push
cmp
mov
cmp
xor
mov
cli
cltd
js
gs
mov
sahf
jae
add
xchg
xor
sahf
add
push
hlt
xor
mov
mov
adc
sbb
pushf
lock
in
pusha
push
sti
mov
cmc
push
shlb
cmp
pop
sub
hlt
ficoml
je
inc
aaa
xchg
gs
xchg
xchg
xor
sub
repnz
sbb
fsubrs
into
sbb
mov
ss
sbb
les
dec
sbb
lret
test
jne
pop
dec
mov
pop
jbe
in
sub
sbb
sub
js
xchg
lea
and
scas
xor
sti
adc
rolb
pop
pop
jmp
add
adc
mov
xchg
push
mov
aam
or
push
inc
in
fstp
add
or
and
out
jmp
adc
jo
or
xor
xchg
addb
jns
fwait
inc
insl
fs
adc
pop
lock
jne
loope
dec
rolb
daa
and
jo
inc
shll
les
mov
leave
sub
xchg
jno
inc
push
fbstp
sbb
aam
adc
jecxz
mov
and
imull
mov
fisubl
mov
cmpl
int3
aaa
xchg
lea
ret
adcb
adc
sbb
loopne
adc
and
pop
mov
push
cwtl
xchg
sbb
movsl
lock
jbe
xchg
call
and
jle
or
xchg
cld
out
and
dec
rorb
pop
test
cmc
push
cli
sti
sub
dec
es
xchg
and
dec
lret
ljmp
pmuludq
filds
xor
int3
scas
jnp
and
dec
out
sub
test
inc
adc
push
sti
loop
andb
xchg
lock
dec
das
dec
icebp
mov
daa
push
gs
loopne
das
sub
mov
inc
insl
ss
leave
and
ret
pop
das
jb
cmp
pushf
fldpi
adc
js
in
fs
lahf
imul
int
mov
mov
inc
popa
int
aas
dec
repz
loope
xchg
mov
push
subb
mov
jns
scas
loope
adc
daa
movsb
fsubr
loope
imul
add
add
jge
dec
out
adcl
hlt
sub
popa
and
push
out
and
xor
je
sar
cmp
dec
lahf
inc
rorb
pop
pushf
sahf
scas
xor
ljmp
fistl
call
arpl
les
cmpsb
or
imul
rolb
out
xchg
out
cmp
sub
sub
push
imul
add
xchg
push
in
ret
xchg
add
lcall
imul
add
add
add
add
inc
xchg
dec
xchg
mov
jb
fiaddl
add
add
push
mov
adc
mov
aaa
hlt
or
dec
out
mov
inc
ljmp
and
nop
outsb
repnz
or
cmpps
lods
dec
mov
and
add
subl
popf
jge
dec
aad
addr16
cwtl
shl
loope
or
adc
subb
repz
arpl
call
enter
mov
in
and
jl
in
aaa
and
push
xchg
adc
out
and
in
std
mov
int3
add
cli
or
pop
mov
cmp
nop
hlt
lcall
mov
orl
add
out
std
push
popa
call
pop
dec
je
je
mov
push
enter
stc
xor
or
dec
cltd
push
xchg
jg
cmc
call
int3
das
adc
jmp
stc
push
pop
push
pop
jl
stos
int3
iret
sbb
subl
adc
in
sbb
or
in
sub
pop
sub
push
pop
push
cmpsl
sbb
mov
arpl
les
xor
movl
and
pop
ret
pusha
addb
adc
fisttps
sub
stos
and
outsb
add
jecxz
lret
inc
test
sub
repz
push
or
shll
dec
lahf
cmpsb
jno
sbb
inc
push
lods
in
push
fmuls
pop
inc
insl
cltd
stc
ja
xchg
dec
xchg
ljmp
cs
repnz
pop
and
inc
pop
dec
or
pushf
and
std
out
xor
cmc
pop
sub
push
nop
test
mov
mov
cltd
aam
lods
je
xchg
jb
or
int
loope
dec
scas
mov
scas
mov
xchg
xlat
add
xor
rorb
jnp
js
lcall
cmp
sub
lret
jecxz
fcmovbe
xchg
xor
mov
xor
sub
notl
adc
in
pop
add
std
mov
lds
mov
pop
jmp
loope
insb
mov
testl
xor
push
mov
inc
adc
mov
mov
cmp
repz
rcrl
and
xor
pop
xchg
fsubr
mov
adc
inc
inc
mov
hlt
stos
pop
push
int
movaps
pop
or
popa
pop
inc
imulb
cmc
cmpsl
sub
rcll
cmpsl
in
insl
mov
inc
dec
sbb
lds
test
mov
dec
fsubl
cmp
divb
aas
xor
movsl
leave
xchg
into
test
xchg
pop
xchg
cld
cmpsl
addl
cmpsb
orl
aaa
pop
dec
cmp
jecxz
lods
xchg
je
ret
dec
and
icebp
outsl
jg
inc
scas
aam
sbb
pusha
sub
test
movsb
sti
and
and
push
fnstenv
fsubl
mov
jae
inc
cmovg
les
call
add
dec
xchg
ret
fistpll
pop
inc
insb
rcrl
movsl
pop
cmpsl
fs
push
insb
cmc
push
jne
sar
loop
in
mov
cwtl
ljmp
shl
js
and
outsb
cwtl
mov
mov
mov
cmc
imul
and
add
sub
and
jg
push
adc
cmp
add
fcmove
xchg
sub
ret
nop
xchg
add
gs
sbbl
stos
test
insl
adc
es
pop
mov
mov
or
push
jle
xor
jl
mov
xor
and
jge
cltd
dec
mov
out
pop
pushl
ret
sub
cmp
rol
scas
loop
icebp
sbb
cmpsb
aas
subl
mov
out
mov
and
pop
dec
pop
pushl
mov
pop
shlb
loope
pop
aas
leave
sub
orb
jge
fcompl
sahf
adc
out
xchg
addr16
lock
cmc
ds
dec
inc
jbe
or
mull
pop
and
sti
mov
hlt
inc
mov
mov
mov
idiv
movsl
stos
or
cmp
adc
mov
std
cwtl
adc
pop
fsubl
loope
xchg
and
pop
leave
cli
pop
add
mov
mov
xor
dec
stos
mov
pop
iret
jg
inc
push
mov
adc
ret
insb
cmpsb
adc
call
add
enter
mov
stos
sbb
std
push
out
adc
sub
negl
jae
adc
mov
ljmp
int
or
jne
js
arpl
cmp
xor
inc
stos
mov
out
les
cld
pop
jmp
jbe
or
mov
int
roll
adc
inc
fbstp
sub
inc
xchg
mov
call
cmpsl
sub
insl
push
rolb
ds
in
clc
leave
adc
cmp
arpl
nop
cmpsb
jnp
lret
xor
pop
das
mov
mov
xchg
sbb
mov
sahf
mov
xchg
fwait
clc
idiv
clc
pop
aas
mov
orl
fwait
and
jae
mov
daa
sub
fistpl
push
push
mov
in
push
not
nop
mov
jg
popf
int
cmp
xlat
aaa
and
push
das
mov
pop
mov
test
cmp
pop
jmp
cwtl
ljmp
fcoml
pop
lret
and
mov
jne
fisubrs
lahf
lods
fstps
and
ret
insl
cmp
or
xchg
adc
dec
sbb
lods
and
xchg
mov
sbb
clc
mov
mov
or
cmpl
adcb
adc
ss
mov
cmp
xchg
add
jecxz
add
dec
lods
movsl
cmp
stos
je
sub
test
or
add
pop
mov
dec
sbb
enter
adc
ds
imul
xchg
sub
sbb
btr
call
mov
fwait
in
lcall
ljmp
add
inc
loopne
repnz
sbb
popa
fidivrs
mov
addr16
add
fnstsw
mov
repz
stos
dec
cmp
fisubrl
jns
cli
shl
or
jge
sub
fcoms
jg
sbb
stos
jmp
pop
outsl
and
fstps
sub
mov
test
aaa
and
mov
outsl
mov
pop
daa
decb
scas
and
push
movntq
imul
je
jge
or
cmpl
insl
cltd
mov
repnz
or
or
rclb
xor
jae
fwait
std
push
and
ret
sub
jnp
sti
mov
aaa
mov
fnstenv
pop
pop
icebp
add
lods
add
add
push
ret
mov
cld
sub
or
das
add
ret
jno
add
nop
dec
mov
orb
adc
ss
pop
imul
mov
and
jl
iret
xchg
dec
call
dec
xchg
pop
and
loop
dec
aam
mov
test
ljmp
pop
inc
mov
pop
mov
and
aaa
xchg
mov
xchg
pushf
scas
daa
fcomi
adc
int
pop
dec
stos
dec
mov
fistl
rcll
in
push
imul
je
add
hlt
jb
xchg
mov
jns
sbb
lods
flds
outsb
lods
xchg
lods
lahf
push
sarb
sbb
inc
inc
in
ljmp
sub
outsb
pop
xchg
movsb
push
mov
movsl
mov
inc
movsb
icebp
imul
xor
dec
and
rol
popa
mov
mov
xor
movsl
test
dec
popf
adc
mov
add
test
shrb
out
out
inc
bound
nop
add
sbb
sahf
push
cltd
mov
lret
sub
sarb
xchg
mov
push
jne
out
xchg
inc
push
in
sub
mov
cmp
ja
in
fists
lret
repnz
ss
cltd
insb
leave
shrb
mov
clc
mov
out
sti
mov
jnp
push
inc
inc
lods
pushf
sti
jle
mov
loopne
inc
sti
rcll
mov
push
leave
jbe
jb
jmp
add
sub
aam
imul
dec
ret
loop
stc
rcll
icebp
xchg
pop
push
fbld
adcl
cld
add
mov
pusha
sub
inc
fs
aam
lea
pop
cli
js
inc
cmp
nop
int
inc
push
shrb
push
xor
cmp
or
adc
xchg
sbb
mov
into
xor
in
imul
shlb
cwtl
rcr
mov
sub
mov
dec
mov
mov
jle
add
mov
into
mov
mov
clc
mov
inc
popa
into
mov
push
pop
lods
das
mov
inc
dec
dec
or
push
xchg
mov
or
mov
mov
adc
pop
enter
imulb
dec
inc
xor
popa
jnp
push
mov
out
jno
test
mov
mov
cmp
fimull
adc
and
sbb
std
jle
out
into
mov
repnz
cmp
ss
nop
and
test
sub
mov
jnp
mov
adc
aaa
mov
cmp
or
lahf
pop
leave
dec
adc
pop
pop
lea
sub
sbbb
movl
fimull
lcall
gs
sub
scas
jmp
dec
stos
dec
xor
testb
jbe
outsb
sar
popf
dec
test
pop
adc
mov
ret
xchg
or
rcrl
jmp
mov
lret
test
push
xchg
lods
mov
inc
xchg
mov
pop
arpl
fildl
adc
daa
xor
sbb
cmpsb
shlb
fs
mov
jns
ficompl
and
sub
sbb
test
jmp
cmp
sbb
fldl
popa
pop
jae
jecxz
or
mov
fbstp
mov
or
add
xchg
add
add
jnp
sub
mov
mov
adc
and
dec
and
repz
scas
add
push
int
addl
adc
dec
pop
jb
pop
and
jns
je
mul
pop
xchg
pop
and
sbb
xchg
ljmp
std
jne
jecxz,pt
pop
jno
repnz
faddl
test
cmovno
jle
lea
dec
dec
mov
and
cmp
stos
ds
mov
out
and
es
dec
xor
js
cmp
push
pushf
cmp
mov
or
push
xor
mov
rcr
into
cmp
fdivs
roll
mov
jmp
fdivrp
shr
sahf
loopne
repz
dec
mov
pushf
push
xchg
inc
fcmovnu
and
js
mov
push
les
xchg
scas
jge
xchg
mov
aam
clc
shlb
cmp
and
jmp
sete
push
add
int3
push
inc
dec
xchg
push
or
xchg
nopl
daa
rclb
add
dec
lret
loopne
fwait
inc
in
ficomps
stc
pop
mov
scas
and
inc
mov
pop
xor
pushf
repz
add
movsb
ffreep
mov
shll
xchg
cltd
mov
sahf
out
xchg
push
pop
dec
repz
push
cmpsl
lret
out
sbb
jle
rcr
or
stc
fcmovnb
cltd
movl
cs
or
dec
cwtl
mov
ljmp
imul
push
movsb
fsts
sub
xor
jne
lea
or
pop
fistps
jp
jecxz
mov
xor
xorb
repnz
or
push
lahf
adc
jecxz
sti
mov
pop
xchg
xlat
cmpsl
repz
repnz
icebp
inc
cmpl
jne
outsb
sbb
pusha
cmpsl
adc
stc
xchg
xchg
mov
shll
js
xor
push
pop
fprem1
data16
and
sbb
xchg
sbb
cmp
push
cmp
xchg
test
sbb
push
scas
sub
mov
jecxz
lock
mov
xchg
and
add
push
les
mov
jae
pop
hlt
and
lret
inc
adc
mov
sub
dec
imul
mov
daa
sub
pop
adc
aaa
out
and
push
push
lods
arpl
push
je
cmc
and
push
into
xchg
mov
sahf
dec
add
sub
stos
push
add
scas
sub
lods
not
add
sarb
jmp
inc
pop
loop
push
inc
mov
repz
sbb
push
stos
lods
out
testl
push
rcll
cltd
sbb
lods
cmc
adc
loop
in
and
jae
cmpsl
or
iret
mov
jle
dec
testb
dec
pop
rcr
cwtl
push
jecxz
bound
mov
push
sti
bound
fwait
jo
lds
pop
jmp
mov
xchg
sub
xchg
and
mov
fidivs
cld
pusha
test
lods
inc
ret
xchg
notb
push
push
imul
mov
adc
dec
adc
sub
inc
cmp
mov
mov
xchg
jp
