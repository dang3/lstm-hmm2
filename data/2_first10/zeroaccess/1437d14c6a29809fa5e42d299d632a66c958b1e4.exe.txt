push
mov
sub
xor
jmp
into
rcr
aad
mov
push
and
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
push
xchg
adc
into
in
adc
cmpb
dec
mov
xchg
mov
mov
or
inc
jge
jbe
out
sub
test
ja
insb
mov
mov
lock
imul
mov
gs
subps
xor
movsb
or
push
int3
xchg
xchg
add
fildl
adc
add
fidivrs
mov
pop
jb
enter
test
outsb
xor
mov
jo
pop
fisubrl
inc
cmpsb
lods
leave
fadds
lods
push
push
xor
inc
sbb
jbe
jmp
and
xchg
scas
test
inc
adc
jge
xchg
pop
repnz
lods
mov
ret
xor
adc
jge
mov
mov
push
sub
xchg
jae
inc
mov
dec
sbbb
cmp
movsb
loopne
add
inc
cld
jo
push
enter
xor
dec
iret
mov
push
in
fadd
mov
sbb
or
xlat
push
jns
mov
cmp
sub
pop
mov
cmp
aas
shrb
cltd
push
xchg
rolb
mov
sub
push
inc
cmp
pop
hlt
loopne,pt
mov
lret
jo
jo
js
je
inc
add
push
cmc
sub
arpl
scas
ja
mov
push
adcl
add
clc
mov
repnz
popa
jmp
dec
lock
lcall
jb
add
cmp
add
imul
jge
cmp
sbb
cld
outsb
or
mov
bound
xor
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
inc
sub
jle
js
jle
js
gs
cmp
mov
lds
mov
sbb
out
imul
mov
sub
mov
lea
sbb
mov
jo
xor
push
stos
sbb
popf
cs
or
loopne
iret
xchg
sub
arpl
or
inc
pop
adc
xchg
mov
fiaddl
jmp
addl
adcb
int
xchg
dec
cld
test
cwtl
push
pop
inc
movsl
and
mulb
adc
lret
icebp
imul
xor
dec
dec
fst
dec
mov
mov
sub
mov
add
xchg
jno
sub
cmp
adc
aam
adc
xor
pop
pop
xchg
sub
jmp
notb
inc
shrl
mov
shll
or
inc
ljmp
loop
cmpsl
pop
testb
add
out
sahf
cmc
sub
std
loop
imull
mov
and
loop
lret
inc
sub
sti
stos
push
std
push
lcall
daa
xchg
cmp
and
decb
xor
inc
dec
aaa
mov
arpl
repz
or
or
mov
push
add
fwait
xchg
movsl
nop
cmp
imul
aam
jno
fcomps
ds
mov
sbb
xor
or
sbb
jecxz
aas
push
pop
or
pop
pushf
test
mov
nop
clc
inc
xchg
push
int
je
cli
mov
stc
fisttpl
fcoms
cltd
addr16
loop
and
in
or
cmpsl
pop
fwait
sbb
sub
dec
ficoms
sbb
pop
sub
mov
mov
shlb
mov
lods
imul
and
jno
jnp
mov
aam
push
xchg
mov
pop
add
roll
enter
out
aam
bound
inc
mov
sbb
es
push
lods
jp
lret
dec
popf
sbb
and
cmp
test
nop
lea
push
lcall
cmp
adc
adc
mov
mov
jo
aas
and
fcompl
xchg
loopne
stos
adc
lods
andb
insl
test
add
push
add
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
js
jle
js
enter
jmp
mov
rclb
rorb
or
dec
mov
lcall
adc
arpl
add
je
dec
dec
mov
cmp
pop
fwait
out
stos
pop
insl
mov
mov
insl
jnp
and
sbb
sub
sti
jno
fisttps
popa
adc
sub
iret
cmp
ss
sbb
dec
loop
testb
pop
lret
push
or
sarl
bound
in
notb
pop
sub
jl
xorb
mul
add
sbb
adc
dec
je
iret
sbb
sahf
cmp
add
mov
mov
inc
or
test
arpl
sbb
add
rcll
fistps
cmp
mov
or
xor
add
int3
add
fidivs
insl
rol
pushf
sbb
add
cmp
test
in
std
sar
cmp
xchg
mov
cmp
and
mov
andl
mov
imul
int
mov
adc
mov
aaa
sbb
sbb
jno
xor
aam
cmp
sub
jno
dec
jb
mov
nop
fisubl
ljmp
jns
xchg
sbb
add
leave
cld
xchg
pop
xor
adc
popa
or
aaa
or
dec
subb
adc
aas
or
cmpsl
aaa
inc
mov
negb
popf
or
imul
je
out
xchg
stos
inc
repz
ss
jg
mov
and
sbb
and
dec
outsb
or
leave
adc
lea
out
inc
cltd
add
je
jb
or
and
rcr
xchg
repz
into
pop
fnstsw
xor
pop
mov
into
fcompl
and
aaa
and
rep
adc
aad
mov
ljmp
adc
cmpsl
mov
or
cli
lods
inc
dec
or
je
adc
adc
shll
mov
mov
imul
movsb
mov
xlat
xor
xor
push
sbb
xor
es
arpl
dec
fiadds
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
xor
into
addb
js
jle
js
pop
xchg
mov
enter
popa
icebp
inc
sub
sbb
imul
mov
cmp
ret
push
adc
ljmp
lret
stos
xchg
icebp
or
inc
xchg
dec
jmp
mov
in
sbb
cmpsb
push
or
push
dec
inc
lods
fdivs
xor
xor
icebp
mov
pop
cmc
sti
adc
mov
dec
ret
inc
or
dec
lock
dec
into
call
mov
rol
int
movsl
test
nop
subb
mov
lock
cmc
mov
cwtl
rcrb
push
out
mov
inc
cltd
dec
rcrl
mov
mov
and
testl
and
mov
jno
dec
sub
mov
jns
fldt
adc
mov
mov
jb
ret
dec
inc
mov
mov
xchg
cltd
mov
xchg
int3
sbb
arpl
repnz
lea
ds
lods
mov
and
xchg
cmpsl
cli
jge
jle
dec
mov
rorb
mov
sub
inc
arpl
xor
mov
or
pop
xor
mov
nop
sbb
inc
mov
push
mov
sub
loope
xor
xchg
pusha
mov
rorb
js
insb
int3
dec
sbb
or
xchg
mov
or
pushf
mov
push
aas
lods
sar
mov
sbb
sub
flds
sarb
dec
jl
mov
mov
dec
push
xor
lret
add
js
ss
mov
sbb
lret
daa
popf
sarb
add
mov
mov
mov
sbb
pop
cmp
into
mov
push
xor
dec
or
out
xchg
lret
jno
leave
mov
dec
xor
aaa
rorl
mov
lret
loope
shl
inc
sarb
pop
jle
enter
filds
arpl
popf
and
mov
arpl
jl
mov
cmp
int
enter
fcoml
dec
inc
das
pusha
adc
sub
imul
add
jecxz
mov
xchg
int
cmpsb
jb
shlb
lcall
je
jmp
push
push
fstl
jno
test
push
push
lcall
gs
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
sarb
or
jle
js
into
ljmp
leave
test
push
sub
dec
nop
cwtl
fs
cmp
sbbl
je
fcompl
mov
sub
push
pop
cmpb
out
xchg
mov
mov
and
mov
xchg
hlt
lret
and
test
int
outsl
and
jg
jmp
xor
jne
shld
jmp
lahf
add
scas
jne
sahf
leave
icebp
shlb
and
push
jns
ds
jle
inc
aam
pop
adcb
lcall
lcall
out
mov
xorl
mov
loop
dec
add
jmp
loope
std
pop
jno
add
add
sub
push
test
mov
aas
lods
ret
dec
insl
fcomip
es
jne
stos
aas
fs
cmp
push
icebp
jmp
lahf
inc
xchg
neg
or
icebp
scas
jmp
mov
mov
inc
mov
in
sub
mov
je
jb
push
stos
lods
jae
cmpsb
dec
pop
pop
and
cld
xor
hlt
sub
popf
lods
xchg
in
test
div
dec
sbb
xor
xor
add
mov
jmp
imul
fsubl
mov
push
mov
inc
or
fcoml
pusha
sti
cmp
out
dec
and
dec
roll
pop
imul
lret
add
mov
movsb
mov
add
xchg
adc
push
movsl
imul
jg
mov
or
xor
loope
fstps
jae
inc
adc
cmp
pop
jmp
stos
sbb
fnstenv
into
pop
rcll
loopne
outsl
and
lock
add
jno
adc
rorl
dec
mov
fstpl
ss
loopne
mov
in
rcll
movsb
jmp
vpsubusb
lock
into
adc
mov
push
push
mov
in
mov
jmp
shrl
pop
add
scas
xlat
pop
loope
push
jbe
outsl
andl
jg
add
sub
sub
adc
mov
push
xor
ja
les
inc
adc
xor
mov
seta
insl
ljmp
lahf
popa
loope
mov
out
add
xor
add
and
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
push
and
jle
js
jle
int
ret
gs
enter
jb
fcmovne
scas
cmp
fwait
int
xor
xchg
outsb
inc
mov
outsl
and
cltd
mov
les
scas
sbb
or
out
pop
cvtps2pi
hlt
aad
gs
jg
xor
inc
sbb
or
cmp
imul
mov
test
out
mov
mov
movsl
xchg
sub
lds
call
fdivl
pusha
mov
fcoml
push
daa
cld
out
sub
lods
test
push
dec
insl
jge
das
lods
mov
lret
lock
cmp
fbld
leave
or
stos
sbb
adc
je
xchg
inc
add
icebp
jge
movsl
push
into
adc
addr16
adc
lods
mov
popf
les
les
sbb
cmp
cld
rol
ds
inc
arpl
dec
lahf
mov
sbb
adc
addl
adc
ja
fnstenv
dec
pushf
push
lock
cmp
push
fcmovnu
sarb
cli
outsl
or
dec
dec
cmp
loope
push
jne
xchg
test
mov
jl
aaa
pop
das
pop
adc
fldcw
and
dec
das
outsb
jg
arpl
xor
jecxz
jl
shrd
daa
jns
sub
in
ss
ret
dec
pop
ljmp
mov
push
arpl
jl
mov
out
cmpsb
dec
dec
xchg
or
and
xor
cli
xchg
xorl
jle
xchg
jns
cmp
sub
mov
fistpll
jnp
dec
dec
stc
inc
aas
xlat
jae
xor
clc
push
xchg
ss
fcompl
int
popf
mov
dec
in
das
out
inc
lret
lods
xor
enter
divb
push
cltd
notb
out
dec
imul
movsb
mov
repnz
push
sub
out
das
push
mov
popa
adc
mov
fldln2
push
mov
jo
pushf
pusha
lds
sub
addb
out
push
repnz
mov
shr
mov
test
or
test
inc
push
icebp
cld
cmp
fcoml
xchg
fs
pusha
icebp
loop
sub
dec
js
or
jne
lock
andl
outsl
jb
in
aaa
mov
inc
and
test
outsl
ret
aad
lcall
sarb
xchg
lods
jno
popf
xor
andl
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
icebp
mov
add
js
jle
js
mov
xchg
and
mov
scas
pop
leave
sbb
push
push
fisttpl
sub
enter
jmp
stc
fists
add
sbb
xchg
mov
xor
arpl
xchg
test
sbb
shlb
fnstsw
call
addb
jb
lods
call
movsb
mov
push
lods
and
arpl
gs
je
movups
push
fsubrs
adc
clc
sbb
xor
dec
pop
xchg
pusha
pop
adc
mov
shll
loopne
dec
cmc
adc
scas
rcrl
mov
cli
jae
push
je
mov
and
pop
sti
jno
sbb
jl
popf
ljmp
adcb
sbb
test
repz
inc
jbe
adc
pop
iret
imul
xor
cltd
mov
in
pop
jge
in
push
jnp
lret
les
mov
cltd
test
mov
cmp
push
sahf
fisttps
xor
xchg
push
das
or
xchg
shl
push
jle
adc
mov
shlb
cld
mov
bnd
shrl
and
je
loope
std
mov
fwait
or
enter
lods
cld
mov
mov
std
mov
dec
jne
int3
xor
leave
test
mov
sub
dec
mov
mov
inc
sbb
mov
dec
es
rclb
push
xchg
movsb
stos
jecxz
and
ds
sub
mov
divb
testl
mov
das
sub
lock
dec
mov
add
push
and
adcb
ret
je
xchg
cmpsl
scas
push
adc
sbb
dec
push
cmp
enter
sbb
mov
xchg
jmp
and
in
js
pop
daa
pop
mov
pop
test
xor
popf
or
das
clc
adc
add
das
push
cmpsl
in
sub
lcall
sti
mov
mov
clc
xor
fwait
pop
xchg
inc
out
xorb
lcall
push
sahf
inc
xchg
fwait
xchg
movsl
pop
sub
jmp
stos
pop
mov
lret
add
mov
sar
or
gs
enter
inc
scas
mul
sbb
cmpsb
cmc
mov
divl
leave
mov
push
fnstsw
jns
sub
movsl
ss
iret
jnp
add
mov
jl
sub
push
stos
bound
add
test
or
add
mov
jmp
aas
lret
ret
aad
flds
inc
dec
or
add
jle
js
shl
sub
pusha
adc
sub
add
jno
into
cmp
rcl
popa
jecxz
ss
inc
jns
arpl
test
mov
addr16
push
adc
push
rclb
cwtl
or
addr16
in
dec
pop
and
cmp
stos
shl
sub
je
adc
push
xorb
iret
ss
test
outsl
iret
mov
add
push
fistps
cmpsb
xchg
cmpsl
icebp
test
insl
mov
jae
sub
popf
dec
notb
xchg
push
add
je
movsl
or
sub
adc
add
stc
xor
imul
mov
or
std
and
clc
imul
pushf
daa
cmpsb
mov
cmp
jmp
popa
dec
iret
fstpl
mov
in
fsubp
stos
mov
ds
push
xchg
stos
jl
gs
jnp
xchg
and
cmp
xchg
sub
sbb
mov
jge
mov
rorb
fwait
xchg
adc
sbb
addb
call
xchg
jle
xchg
jno
rclb
jne
inc
cmc
ds
mov
rcrb
adc
arpl
cmp
dec
mov
mov
jo
inc
sti
loop
adc
pop
sbb
mov
jno
out
hlt
or
leave
mov
hlt
mov
jae
xor
cmpl
pop
unpcklps
fwait
mov
in
sbbl
push
push
cmp
insl
clc
adc
xor
mov
lcall
jmp
push
mov
fnsave
or
repz
sbb
pop
sub
jo
or
jg
jecxz
ret
adc
cmp
push
or
push
xchg
add
stos
dec
das
jno
adc
sbb
aas
lret
enter
pop
cs
jne
aas
aad
dec
mov
jno
add
pushf
pop
mov
dec
mov
imulb
fnstenv
jns
loopne
and
jbe
in
stos
jmp
or
pop
mov
cmp
jecxz
dec
push
mov
mov
xlat
pop
loope
negl
or
iret
push
ljmp
cmp
push
fistl
xor
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
imul
or
js
jle
js
xor
sti
cs
leave
in
cmp
dec
push
into
jno
hlt
mov
xor
and
xor
xor
cs
sbb
xchg
mov
jge
and
aam
mov
rcrb
xchg
cmpsl
mov
pop
pop
sarb
fimuls
bound
xor
pop
pop
popl
test
or
or
jmp
arpl
lret
push
xchg
push
dec
xor
shlb
sarl
std
inc
mov
pop
adc
add
sbb
push
and
xchg
and
mov
fwait
int3
pop
cltd
xlat
sbb
lcall
inc
test
mov
pop
cmp
push
int
fbld
add
hlt
ret
push
ret
adc
ss
inc
outsl
outsb
test
xchg
es
lahf
xchg
int3
test
ja
jmp
sub
and
lret
push
pop
fsubrl
dec
mov
pusha
iret
test
dec
rcll
adc
sbbb
lods
lret
clc
jmp
shll
test
and
inc
xchg
pop
sub
in
mov
sbb
mov
and
loope
ret
inc
push
dec
fcmovnu
xchg
test
pop
add
mov
sub
int3
xchg
xor
arpl
push
sub
mov
iret
xor
and
mov
mov
mov
mov
clc
add
push
mov
mov
jae
ja
sbb
lock
adc
xchg
movsl
jo
or
pop
insb
or
repz
or
add
mov
push
test
or
inc
bound
pusha
and
pop
ja
push
fdecstp
pop
cs
inc
jno
pop
and
jle
sbb
and
faddl
push
fcoml
test
shlb
cld
addr16
mov
push
stos
push
push
push
adc
in
sbb
ret
pop
mov
pusha
into
movsb
ljmp
pop
add
xchg
in
shll
stos
shl
cmp
ficompl
xchg
movsl
mov
in
punpcklwd
mov
xchg
mov
out
pop
or
pop
aas
xchg
xchg
xchg
lods
mov
mov
or
sti
lcall
adc
adc
add
sub
sub
es
test
fwait
mov
cwtl
push
call
sub
enter
add
ror
int
rcr
aad
bound
jecxz
mov
mov
js
jle
js
sbb
or
and
jo
sub
dec
mov
outsb
jl
bound
sub
ficoms
lods
jne
cli
rol
loope
push
xor
pop
mov
pop
sbb
dec
imul
mov
dec
jo
ret
outsl
out
adcb
fidivrl
sbb
add
dec
stc
pop
pop
stos
mov
jmp
stc
push
int3
xor
out
fcomi
out
push
nop
dec
add
movsl
mov
ret
in
lods
fadd
jl
hlt
or
nop
xor
and
fidivl
lahf
inc
sub
xchg
lahf
jl
shrb
stos
mov
mov
in
call
std
or
addr16
xlat
jb
js
push
sbb
pop
pusha
sub
jmp
cmp
push
mov
adc
out
and
fcomps
push
pop
cmp
fwait
mov
sub
push
dec
daa
mov
fsts
cli
jno
rcrl
push
mov
test
lods
addr16
in
xchg
push
pop
loopne
dec
dec
mov
mov
push
shrl
ja
adc
out
push
int3
xchg
sub
mov
cmc
ja
enter
push
push
jge
aad
sbb
dec
and
mov
push
xchg
push
mov
leave
cltd
lahf
pop
pusha
jnp
push
ss
pop
mov
movl
mov
add
les
mov
pop
push
jge
lock
mov
fstl
lock
xor
add
and
andl
add
mov
push
xor
dec
mov
inc
loop
inc
dec
mov
sbbb
adc
shl
and
mov
xlat
mov
cmpb
jae
xchg
fs
cmp
push
stos
pop
arpl
fcomps
mov
cltd
repnz
cmp
inc
stos
sahf
ret
fisttps
ja
in
and
repz
fs
pop
lret
hlt
lret
lods
or
ficoms
aam
cmp
psrlq
lods
sub
xlat
mov
pop
in
movl
and
shlb
test
sbb
out
imul
pushf
decl
mov
jns
push
jne
lea
cld
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
and
js
jle
js
jns
sbb
sbb
repz
or
jg
popa
mov
pop
mov
pop
push
push
sub
sub
sub
insb
sub
push
sub
ss
push
or
inc
fisubrl
lret
mov
popf
and
lahf
flds
lea
jmp
shl
lret
add
jo
ja
xchg
jb
lret
mov
lods
jge
fwait
push
jmp
int
dec
pop
lret
and
push
add
or
mov
into
enter
mov
cmp
lahf
cmpsb
mov
shlb
mov
lods
mov
pop
fwait
orb
setg
scas
lock
sti
fs
xor
push
jge
sbb
pop
movl
std
ds
call
jmp
sub
test
mov
pop
lahf
nop
fldt
std
sub
lock
test
push
lahf
cmp
jg
es
fidivl
fdivrl
data16
cld
mov
cmp
adc
fisubrs
xlat
or
inc
mov
cmp
sbb
and
cmp
xchg
jae
and
xor
lret
rorl
imul
inc
adc
out
mov
repnz
cmp
sub
nop
test
jle
or
aas
or
sti
sbb
mov
outsl
jnp
xchg
cmp
ret
adc
ret
cwtl
dec
test
adc
jno
xor
add
mov
dec
cmpsl
lods
insb
push
sbb
inc
lret
xchg
je
les
sbbb
dec
cmp
aam
xorl
cmp
add
dec
push
int
adc
jbe
xlat
jo
xor
sub
jno
test
push
mov
jo
jbe
js
pop
rep
push
dec
in
outsl
add
cltd
shrb
sbb
mov
mov
or
cli
and
ja
repnz
xchg
jae
xlat
idiv
loop
rcll
pop
add
jae
sbb
lock
fwait
jb
or
addr16
loope
cmp
imul
xor
pushf
cmpsb
mov
push
sarb
dec
lahf
outsl
cmc
subb
dec
adc
pop
jle
shrb
fsubrp
push
xor
pop
mov
mov
jmp
ror
ror
ror
test
xchg
push
push
rcr
xchg
adc
js
sub
push
inc
jg
jns
in
adc
in
aad
aas
sbb
pop
divl
stos
and
jl
xchg
loopne
fidivs
push
das
mov
das
or
mov
mov
arpl
sub
jle
mov
dec
cwtl
repz
andl
ficoms
sbb
jecxz
int
test
push
inc
sub
cmc
lock
das
xor
in
lock
xchg
cld
stc
dec
or
sbb
lea
lahf
addr16
lods
addl
lahf
pop
movsb
aas
ds
scas
stos
gs
aam
xchg
and
mov
mov
push
ds
sbb
gs
daa
lock
cmp
int3
jmp
and
push
arpl
pop
fnstcw
xchg
mov
add
xor
and
pop
bound
int3
push
adc
cli
pushf
out
sbb
loop
or
cmp
stos
lahf
adc
cmc
inc
cmpsl
sbb
test
mov
std
xchg
shrb
imul
push
jl
in
pop
jne
lea
std
fldenv
dec
sub
in
shlb
mov
xchg
bound
arpl
inc
push
inc
cmp
adc
jnp
cmpsb
mov
aas
push
outsl
ja
lahf
mov
call
sti
aam
adc
fwait
into
or
int
sub
mov
push
cmpl
pop
push
jmp
dec
test
sbb
and
sub
enter
pop
xchg
int3
lahf
imul
push
pop
fidivrl
pusha
or
or
xchg
pop
iret
pusha
cs
pusha
jmp
mov
rorb
mulb
lahf
int
cs
mov
inc
adc
mov
push
mov
jmp
xchg
jo
loop
jne
and
jbe
mov
imul
or
mov
cmp
jns
sarl
inc
xchg
fldenv
mov
jne
sbb
aad
in
out
and
xor
mov
cld
push
mov
cltd
rcll
push
leave
test
fdivs
and
dec
mov
test
scas
pop
cmp
push
aas
add
mov
lods
aam
mov
das
mov
jb
cwtl
cmp
out
rcrb
loop
jb
dec
sarl
adc
jae
icebp
out
cmp
pop
push
mov
imul
arpl
movb
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
cmp
dec
adc
js
jle
js
aaa
ja,pt
inc
pop
add
dec
std
mov
inc
addr16
lret
jo
dec
adc
out
cmp
cld
xchg
push
ror
inc
movsl
ljmp
xlat
push
mov
cmp
fs
xor
pusha
cmp
jmp
dec
jmp
xchg
outsl
je
cs
sbb
dec
push
xchg
lock
in
fwait
lods
sub
addr16
js
pop
divb
mov
or
pop
xor
lcall
addb
xchg
insl
or
xsaves
add
add
stos
sub
mov
adc
ja
movsb
out
jmpw
xchg
sbbb
fiaddl
xchg
test
rcrl
mov
xor
jecxz
aas
fisubl
iret
imul
cmp
xor
test
mov
sbb
push
roll
jmp
mov
data16
mov
push
mov
icebp
lcall
enter
inc
imul
jnp
inc
in
shrb
mov
xor
mov
hlt
inc
movsl
bound
pop
test
lods
xor
outsb
rol
sbb
add
iret
xchg
jnp
out
into
dec
mov
test
or
sbb
jp
xchg
jp
inc
jge
cld
adc
mov
pop
or
pop
adc
adc
arpl
or
addr16
and
add
scas
push
inc
fs
and
pop
jecxz
rcrl
mov
mov
adc
adc
push
loope
gs
ret
mov
sti
addr16
loop
dec
pop
pop
shrd
mov
cmpsb
loop
loop
pushf
push
lret
xchg
push
or
ja
pushf
ret
lahf
outsl
push
mull
inc
adc
loop
mov
add
mov
negb
sub
ret
es
mov
or
int3
push
int3
or
enter
add
sub
call
pop
xor
sub
fs
roll
push
push
in
dec
clc
ficompl
xor
xor
xchg
je
adc
mov
scas
inc
pop
fs
imul
lods
mov
ljmp
jecxz
mov
push
loopne
hlt
pop
push
mov
xchg
test
pandn
movb
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
adcl
xchg
sbb
adc
dec
ror
pushf
cmp
mov
hlt
insb
sbb
mov
fdivr
popf
fidivrl
mov
inc
loope
mov
fimull
pop
outsl
push
loop
dec
stc
pop
sbb
xor
dec
and
sarb
sub
xchg
mov
pop
aaa
jg
loopne
insl
negl
in
cltd
dec
enter
sbb
pop
sub
cmpb
xchg
mov
popf
ds
inc
adc
pop
outsl
into
mov
ljmp
xchg
pop
mov
les
popl
popf
sbb
pop
test
shl
out
push
shl
xor
sub
pop
jo
adc
pop
hlt
out
shlb
loope
sbb
jbe
mov
pusha
pop
lods
jo
adc
push
andb
rcr
loop
fildl
int
lret
sbb
cs
sub
sub
adc
cmp
into
mov
xor
xchg
xchg
out
xchg
stos
out
mov
push
hlt
popa
hlt
dec
sbb
jo
jne
aam
or
lret
ret
dec
shr
jle
sub
mov
pop
fmul
xchg
shlb
loop
repnz
cmp
jae
lods
inc
aad
in
leave
add
jle
fnstenv
je
xlat
and
in
inc
pop
jp
or
pop
fwait
pop
lds
int
pop
inc
addl
push
iret
push
les
les
adc
dec
test
subb
repnz
xor
sbb
in
out
jae
sbb
cmp
sub
insb
jle
adc
ja
test
add
outsb
and
jmp
adc
jb
in
xchg
xor
rclb
test
sbb
movsb
test
and
ds
js
repz
push
lcall
hlt
sahf
insl
mov
adc
or
push
rclb
repnz
shrl
rcl
xchg
daa
xchg
xor
pminsw
rcrb
mov
mov
mov
mov
sbb
int3
fsts
ja
mov
testb
ja
lret
push
jge
xchg
enter
cmp
cmpsl
add
xchg
sbb
in
in
add
mov
jmp
into
rol
ror
mov
or
mov
jle
js
inc
test
inc
dec
cmp
mov
mov
inc
or
lods
std
push
sbb
outsb
xchg
mov
pop
std
xorb
and
xor
xchg
mov
pop
pop
nop
cli
std
fdivr
std
mov
imul
lods
mov
adc
push
cmpsl
mov
cmp
cli
aad
xor
jecxz
inc
xor
jns
jmp
xchg
jnp
imul
pusha
jge
insl
repz
jmp
ret
and
inc
arpl
cmp
push
pop
sub
cmpsl
sbb
scas
int
fwait
mov
push
mov
dec
jmp
dec
test
scas
loope
js
sbb
dec
push
dec
loop
cmp
mov
cltd
out
nopl
lcall
mov
pushf
arpl
pusha
cmp
inc
testl
or
pop
mov
sbb
enter
xchg
add
push
ljmp
sbbl
pop
cmpsb
adc
cmp
push
out
cmp
mov
cli
pop
test
in
push
es
sbb
pop
and
inc
push
sub
lea
lock
pusha
add
out
rorb
sbb
ljmp
testb
adc
ljmp
and
jne
sbb
fadds
cwtl
sub
fcomp
fcoms
in
jne
test
mov
dec
dec
aad
cmp
outsl
fs
or
lret
xchg
inc
das
nop
je
xchg
mov
jp
jb
add
mov
add
movsl
nop
das
sbb
rcll
pop
xchg
sar
fs
push
adc
stos
add
sub
jle
dec
pop
cwtl
inc
add
pop
adc
pop
fst
fstl
in
mov
mov
mov
dec
cltd
jmp
inc
push
dec
ss
pop
test
push
aad
inc
xchg
ret
stos
insb
mov
mov
aas
mov
aaa
stos
icebp
jg
loopne
loop
es
imul
jns
mov
jmp
test
xchg
loope
sbbb
imul
shll
sub
pop
iret
sub
iret
jns
or
movsb
mov
jo
lods
in
std
out
enter
dec
mov
cltd
pop
cld
add
xor
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
test
jo
lcall
js
xchg
lods
fwait
cmc
int3
cmp
adc
sub
inc
jg
rorb
push
in
xor
lret
xor
addr16
stc
into
mov
inc
xor
mov
push
cwtl
push
loopne
dec
hlt
adc
fcmovb
pop
test
leave
jle
pop
mov
pop
hlt
inc
scas
mov
iret
lahf
adc
adc
sarb
stc
pop
or
lea
arpl
dec
mov
jmp
clc
sahf
jnp
jae
inc
mov
mov
or
xchg
fisttpl
add
sbb
leave
mov
in
pop
movsb
outsb
hlt
or
enter
or
mov
ljmp
push
cmp
jnp
pop
lcall
pop
inc
ljmp
movsb
or
movsb
aas
or
das
roll
mov
xchg
stos
scas
imul
lcall
mov
adc
aas
lcall
aam
popa
mov
and
mov
lods
jle
cwtl
inc
fcompl
adc
flds
push
outsl
mov
mov
jae
orl
js
dec
and
sub
sbb
mov
sahf
jl
ss
mov
popa
cltd
and
xor
into
clc
test
lahf
dec
xorb
jmp
mov
and
sti
jl
adc
imul
add
inc
mov
lock
mov
xchg
bound
enter
mov
adc
sub
les
fucomp
dec
push
bound
in
shll
incl
incl
adc
mov
es
in
lods
sbbb
dec
jnp
sub
add
cmp
fisubl
jae
fsts
jmp
lods
sbb
cmp
ss
lods
popa
adc
lods
xlat
clc
pop
aaa
ljmp
pop
xchg
shl
fidivrs
fsubrl
mov
mov
fstpl
dec
sti
pusha
inc
mov
push
fbld
and
inc
push
jns
imul
mov
ficoms
xchg
fcoms
lcall
fs
inc
add
cmc
jne
sbb
mov
jo
nop
outsb
movsl
fs
mov
xor
outsl
mov
push
pop
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
inc
cwtl
sbb
and
jle
js
out
lods
push
mov
xchg
and
insb
data16
sub
mov
ja
fcompl
mov
hlt
push
cmp
shl
js
iret
xchg
sub
sbb
pop
dec
jns
mov
insl
or
jae
idivb
ret
loope
adc
lds
roll
dec
jae
xor
test
xor
xchg
push
notb
dec
or
shlb
and
cltd
or
les
mov
adc
lds
pop
dec
adc
aam
lret
push
into
jmp
and
add
xor
js
pop
cltd
clc
mov
mov
lea
and
push
xorl
daa
mov
cmovp
mov
pop
cmp
hlt
dec
rcl
jo
movl
shll
shll
pop
cli
cmc
inc
lret
shll
ret
stc
sub
ds
dec
xor
add
lods
movsb
pmaxub
mov
cmp
sub
arpl
push
mov
movsb
dec
into
and
cmpsb
cmpsb
rcrl
gs
inc
fmull
loope
test
add
push
cmp
je
and
push
fs
in
lds
fisttpll
add
dec
movsb
orl
mov
les
pop
push
mov
out
pop
add
add
xchg
pop
cmp
and
arpl
xchg
or
mov
outsb
adc
movsb
imul
pop
pop
xor
cmc
xor
rolb
jbe
inc
sub
and
mov
jno
je
sti
into
push
notb
xor
jle
fsubl
inc
xchg
cmpl
push
inc
out
cmpsl
mov
stos
in
pop
xchg
xor
add
ss
xor
jecxz
pusha
fcmovnb
imul
jns
jl
std
xor
sti
aam
ds
sub
shrl
cmp
scas
aaa
outsb
mov
jg
das
and
mov
mov
jmp
stos
push
dec
and
loop
lods
ret
mov
mov
je
adc
add
iret
imul
dec
popf
daa
jg
dec
loopne
pusha
xor
xchg
or
es
out
xor
mov
pop
xchg
cwtl
sub
aas
int3
fimull
mov
dec
lret
jne
mov
add
add
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
jns
inc
sahf
es
jle
js
cmp
xchg
call
push
push
adc
stc
addl
test
and
inc
xlat
adc
jge
cmp
xor
and
lcall
dec
xchg
mov
mov
dec
cltd
mov
dec
mov
test
flds
or
xor
sub
cmp
andb
in
adc
pushl
stos
roll
popa
bound
js
addr16
cmp
aas
inc
out
jl
lcall
mov
mov
movsb
inc
pop
outsb
dec
sub
or
xchg
mov
xor
loopne
mov
mov
cmp
jp
inc
js
push
or
cmc
pop
sub
xchg
popf
adc
cs
mov
sbb
cwtl
adcl
pushf
dec
push
bound
jno
adc
fs
push
or
ds
sub
cld
pop
movhps
mov
sti
in
ret
xor
mov
mov
jnp
cmp
int3
bound
popa
lret
jl
dec
sub
xor
sbb
xchg
pop
mov
push
jae
pop
cmpsl
pop
mov
jnp
mov
sbb
inc
imul
lcall
xchg
inc
pop
xor
push
sbb
andb
mov
push
add
cli
out
in
mov
xor
jp
and
pushf
in
loopne
mov
cltd
push
lods
or
dec
test
leave
pop
cmpsb
mov
sub
xchg
repnz
cmpsl
mov
mov
xchg
aad
push
lods
mov
cwtl
test
mov
clc
jg
ja
jecxz
ficoml
imul
sub
lods
sub
cmp
push
int
int3
cmp
sub
ja
mov
jns
jp
sub
clc
pop
cmp
fcmovnbe
call
call
jnp
movsb
movsl
cmp
or
xchg
push
or
cli
cs
and
inc
lcall
pop
scas
cmp
dec
roll
pop
rorl
or
sub
loope
mov
and
mov
add
dec
ficoml
sub
sub
into
fadds
cmpsb
repnz
stos
das
or
outsb
add
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
loop
lods
ss
js
dec
jle
js
mov
mov
aad
cs
loopne
loope
and
cmp
inc
mov
sti
nop
scas
add
xchg
pop
test
push
popf
sarl
xchg
adcl
or
outsb
push
mov
roll
sub
push
xchg
mov
add
push
mov
test
les
xor
jecxz
mov
loope
pusha
shr
dec
scas
pop
sub
push
mov
andl
sub
out
scas
arpl
inc
jnp
mov
popf
xchg
ret
ret
rorb
sbb
loopne
and
into
lahf
xor
inc
call
xor
ljmp
outsb
ret
fcmove
mov
mov
xchg
sbb
push
mov
pop
push
js
movsl
mov
adc
push
sub
cmpsb
or
mov
lahf
inc
shr
inc
and
ficoml
pop
mov
gs
adc
pop
mov
adc
or
lods
aad
mov
mov
addr16
inc
pop
pop
fcom
cmpb
inc
arpl
jl
lods
xchg
or
adc
cmp
gs
fwait
cmp
stos
sbb
pushf
imul
jge
stos
sub
adc
pop
sub
in
into
pop
push
fstl
cmpsl
out
xor
adc
mov
addr16
sub
jns
mov
fnstenv
jmp
loop
mov
stos
mov
mov
push
cmc
pop
fdiv
jge
push
pop
test
dec
pop
iret
scas
in
jmp
add
and
pop
fwait
or
scas
cmp
shrl
fsts
cmpsl
cltd
pop
add
out
pop
in
inc
fidivrs
mov
call
xor
icebp
popa
iret
xlat
out
inc
dec
popa
push
inc
mov
inc
ret
lcall
mov
pop
cmpsb
cmc
add
mov
sarb
pop
pop
mov
movsb
ror
inc
sti
mov
and
push
ds
sahf
pop
mov
insb
insl
pop
jg
mov
jg
mov
pop
int
outsb
in
sub
jl
imul
mov
pop
aam
cmp
das
das
and
mov
xchg
lcall
lock
lcall
and
mov
test
mov
xchg
sub
sub
pop
xor
mov
pusha
mov
frstor
movsl
shll
nop
or
jl
cld
mov
mov
fstl
lods
sub
lcall
ja
mov
mov
shl
pop
scas
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
inc
and
dec
jle
js
xor
xchg
mov
mov
aam
add
ljmp
sub
sub
imull
and
rcll
fistps
in
in
xchg
ficoml
popa
jo
mov
or
mov
add
fcoml
mov
in
mov
pop
js
mov
mov
and
or
shlb
nop
jnp
out
jl
mov
jne
popa
lret
stos
mov
cltd
push
aad
xor
cs
iret
or
dec
adc
adc
jge
push
inc
and
mov
int3
or
and
ret
out
mov
test
addr16
sub
sti
sbb
and
xchg
loope
cmpsb
clc
jge
lret
je
cwtl
shll
sbb
or
loopne
and
and
xor
btc
das
test
lds
inc
sar
aas
push
int3
mov
outsb
jae
inc
jo
jp
mov
cmp
mov
sti
les
xlat
ds
or
scas
imulb
mov
ds
bound
rcrl
cmp
pop
push
in
and
std
and
mov
sub
setl
test
lahf
test
sti
push
testb
jle
pop
and
xor
jp
rcrb
insl
or
inc
vzeroupper
andps
push
das
lcall
inc
scas
outsb
cmp
mov
jle
add
cmpsb
xchg
push
and
jle
aaa
ret
cli
pop
icebp
leave
pop
cmc
outsl
xchg
sbb
data16
lcall
aam
adc
fsub
mov
ret
repz
push
mov
cli
in
jl
jns
mov
cli
jmp
xor
xor
xchg
add
sub
sub
cmp
stc
push
les
cmc
jl
dec
xor
jle
aam
leave
mov
or
mov
jl
inc
fcmovnbe
scas
jp
mov
jae
ret
xor
enter
mov
movsb
xchg
mov
pop
cmpsb
les
xchg
dec
xor
cmp
addr16
xor
jl
mov
dec
sub
aad
xor
mov
and
fcoml
clc
lcall
xor
cmp
roll
out
push
mov
push
pop
xor
movsb
jnp
add
inc
je
js
popa
cs
or
sti
outsl
imul
movsb
mov
ss
add
fdivp
scas
cmp
mov
push
xchg
lret
aam
aas
in
push
jg
push
js
push
nop
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
xchg
jnp
xor
js
dec
jle
js
cmp
push
aad
dec
fld
jl
inc
sub
jmp
int
das
mov
pusha
sub
add
repnz
xlat
jge
mov
rclb
in
xchg
inc
xchg
flds
mov
ja
outsb
mov
ss
cmc
jnp
lret
jne
dec
lahf
mov
test
inc
ret
mov
iret
fwait
clc
stos
int
jmp
cmp
int3
pop
loopne
ljmp
pop
sbb
sbb
paddd
jae
in
adc
fdivl
lret
inc
rolb
sub
xchg
pop
and
jo
test
cmp
add
shl
lea
rolb
ds
xlat
aad
les
or
nop
mov
nop
jg
jae
fsubs
lock
cmp
aas
sub
out
inc
xchg
arpl
mov
sbb
bound
imul
push
stos
pop
sbbl
sbb
popa
xchg
aaa
sbb
add
push
call
sbb
pop
sub
sarl
inc
mov
lods
push
add
mov
and
cmp
shll
lds
jmp
cmp
int3
jle
xor
cmp
dec
ficomps
js
shrl
flds
fdivs
mov
stc
jb
mov
out
js
call
notl
sarb
xchg
inc
and
mov
out
xchg
mov
mov
mov
shrl
fistps
inc
adc
movsl
pop
scas
sbb
fimuls
push
xchg
sbb
push
inc
insb
sbb
fst
add
pushf
mov
insl
sub
inc
pop
clc
test
jp
rcr
sbb
lds
fwait
xor
sub
cmc
cmpsl
mov
inc
adc
jmp
xchg
jbe
shlb
stos
sub
roll
loop
lds
jecxz
shll
dec
sbb
outsl
pop
repnz
xor
jmp
or
push
lahf
subb
lahf
lcall
movsb
jmp
push
sti
int
sbbl
cld
mov
dec
and
cs
push
xchg
cld
or
popf
cmp
imul
pop
xor
lock
jg
xchg
pop
or
and
psrad
add
loope
and
adc
mov
test
aam
push
fcompl
and
setle
xor
mov
mov
mov
scas
or
jmp
pop
adc
and
shrb
xlat
adc
and
lock
xor
jo
insb
rcl
add
dec
aad
dec
xor
clc
cmp
fisubrs
push
xor
sahf
rcll
arpl
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
shrb
js
dec
jle
js
adc
push
mov
sub
add
sbb
aaa
push
pop
ret
xchg
insl
xchg
xlat
push
jmp
push
sbb
sahf
data16
test
add
xor
test
dec
bound
and
cmp
or
loope
mov
xchg
cltd
mov
out
ficompl
push
stos
cltd
popa
pop
cmc
fcmove
push
test
pop
nop
pop
push
inc
inc
rol
les
inc
or
push
sbb
aas
into
or
inc
shll
mov
and
add
mov
pushf
sar
xor
add
jne
loopne
in
dec
jne
ljmp
mov
in
das
inc
data16
mov
fs
jp
sub
sbbl
xchg
mov
fiadds
push
push
movsl
and
push
fisubs
inc
jno
sub
mov
xor
stos
sti
sarl
mov
or
decb
pusha
pusha
mov
jmp
jl
ljmp
lldt
push
pop
repnz
out
aad
or
in
mov
imul
movsb
or
cwtl
hlt
or
push
jge
in
mov
js
sbb
insb
fimuls
sub
mov
nop
cmpsl
jns
repnz
pusha
jbe
leave
loop
pop
jg
mov
add
shrl
sbbb
pop
mov
dec
lret
and
jl
lods
inc
mov
rclb
stc
aaa
pop
shl
iret
test
ljmp
dec
icebp
inc
cmc
mov
lcall
add
fsubs
push
ret
in
or
out
or
movsb
das
push
push
imul
loopne
and
repz
or
sar
cld
mov
repz
push
je
xorl
sub
xor
add
clc
aas
out
sub
mov
xor
or
aaa
pop
cmp
add
and
in
jne
and
int3
push
and
mov
dec
hlt
jno
sbb
int
orb
insb
ss
pop
lods
mov
into
repnz
add
xor
scas
push
enter
cmp
outsl
iret
xchg
cltd
test
sbb
mov
mov
in
std
iret
ss
repnz
mov
or
inc
mov
jo
mov
adc
jmp
gs
inc
push
das
push
aad
mov
lods
inc
cld
mov
xor
jae
mov
rcrb
inc
dec
daa
mov
jno
iret
shrl
aam
js
popa
sub
sahf
xor
inc
in
push
fdecstp
in
rorb
test
pop
mov
inc
out
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
xchg
call
jle
js
mov
loopne
pop
jle
adc
jmp
adc
sti
outsb
mov
jnp
add
mov
jns
out
mov
gs
fnstsw
jecxz
imul
daa
pushf
insb
outsb
or
fisubs
out
fimull
pop
mov
sbb
lea
xor
movsb
cmpl
adc
sub
jae
jae
je
add
or
in
out
aas
add
pop
adc
and
mov
mov
push
jb
cs
aaa
push
add
adc
vucomiss
sbb
repnz
das
ss
int
xchg
pop
out
mov
push
fnstenv
fdivr
pop
pop
cmp
xchg
push
out
dec
cmp
out
pusha
iret
sbb
shl
pop
pop
jnp
cwtl
sub
push
test
pop
jns
int
inc
bound
jae
push
les
icebp
cmc
loopne
out
fldcw
les
inc
mov
xor
xor
js
mov
or
mov
inc
pop
aad
ja
xor
sub
xor
mov
xor
cmpsb
sbb
pushf
movsb
fwait
add
in
mov
sbb
sub
mov
clc
push
push
pop
bswap
lock
push
rcll
test
outsl
and
push
sbb
ret
sbb
inc
mov
mov
into
ds
adc
xchg
ret
fcom
outsl
popf
outsb
ret
mov
ds
sub
insl
sbb
lds
stos
test
jno
xchg
adc
arpl
imul
mov
nop
pop
fistpl
imul
das
mov
mov
mov
ja
popf
addb
mov
call
orb
subb
xchg
mov
sub
and
fidivrl
jg
clc
jne
xchg
or
lret
xchg
xor
repnz
xor
mov
xor
push
push
sbb
cmp
out
gs
dec
dec
adc
insb
push
sbb
rorb
xor
addr16
lds
mov
cmp
add
jl
mov
fsub
fcoml
xor
dec
push
fcoms
mov
rorb
xchg
and
pushf
jne
fstps
pop
push
sub
leave
pushf
leave
rclb
xor
jp
ficomps
and
sbb
push
ret
ret
inc
cmp
lds
lcall
ret
icebp
cwtl
idivb
fmull
pop
rcl
adc
jl,pn
sbb
imul
adc
sub
add
mov
test
jae
mov
jmp
int
rol
ror
aad
inc
jecxz
fcoml
stos
mov
xor
js
iret
add
jbe
daa
cmc
test
sbb
fcoms
add
pop
test
jns
adc
or
pop
cld
popa
lret
xor
jl
fcompl
add
or
add
push
dec
sarb
or
jbe
test
imul
inc
cmpsl
das
das
sbb
mov
inc
inc
adc
mov
mov
imul
pop
push
in
mov
in
aad
loope
sub
push
jne
out
test
test
or
rolb
incb
data16
or
sti
dec
push
cmp
std
or
inc
xor
pop
hlt
inc
add
or
xchg
fistpll
dec
fldenv
pop
add
repz
inc
mov
mov
sub
mov
scas
dec
mov
shl
mov
jnp
pop
inc
in
out
pop
and
jns
sub
jp
addl
cmp
xlat
jbe
cmp
fistps
pop
stos
fisubrs
jb
imulb
pop
out
out
lcall
pop
cwtl
jmp
fcoml
leave
fadds
mov
dec
xchg
cmp
and
mov
and
adc
mov
pop
hlt
adc
js
push
int3
cmp
push
inc
fs
test
xchg
mov
dec
jp
adc
aad
mov
cmc
std
push
shl
sub
xor
push
sahf
loop
inc
pop
daa
out
pop
pop
xchg
jle
test
test
test
adc
mov
or
xchg
scas
xlat
test
mov
sub
inc
in
rorb
insl
insl
lds
pop
nop
sbb
das
jns
icebp
popf
push
lods
stc
mov
fsubl
ficoml
nop
int3
or
repnz
push
aad
pop
and
js
xor
imul
push
mov
pop
stos
inc
ja
push
repz
dec
xor
inc
jecxz
test
sbb
lcall
fwait
sbb
test
imul
and
out
inc
popf
inc
push
int
in
repz
mov
in
push
or
ljmp
lods
les
sub
adc
pop
dec
mov
aam
jmp
push
in
xchg
lret
bound
inc
mov
inc
popf
imul
sub
cmpsb
iret
jno
mov
or
xor
mov
es
push
mov
pusha
hlt
sub
stos
inc
and
rol
jge
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
adc
loopne
adc
js
dec
jle
js
mov
xchg
shll
aas
fstpl
add
inc
dec
pop
or
in
imul
mov
movsb
adc
aas
xchg
lret
scas
xchg
popa
xchg
scas
cmp
outsl
pop
aam
orl
push
mov
stos
dec
stos
and
and
sbb
push
les
pop
xchg
or
ljmp
xchg
lods
jae
cmc
lret
aaa
fmull
cmp
divb
ret
adc
xor
inc
push
dec
adc
push
mov
hlt
ja
leave
or
shll
lcall
rorl
inc
xor
push
stos
push
lahf
sub
sarb
les
in
mull
addr16
jg
sbb
movsb
pop
add
shrb
cmc
rorb
pushw
shll
jmp
sub
and
add
scas
pop
mov
adc
lea
lods
or
mov
iret
adc
cmp
xchg
adc
negb
xor
pop
push
sbbl
shlb
sbb
mov
xchg
jl
lret
push
add
xchg
inc
clc
dec
stc
shrb
out
arpl
movsb
jg
mov
sub
mov
stc
inc
lret
lock
pop
xchg
or
stos
jns
pop
sub
shr
lret
andb
jmp
add
pop
xchg
loop
inc
inc
cmp
sub
pop
popf
pusha
mov
rol
scas
cmp
jl
stos
aaa
stos
iret
out
dec
mov
shlb
push
movsb
or
dec
test
xor
ficompl
out
pushw
sbb
jb
xor
lds
mov
stc
jecxz
std
arpl
dec
inc
inc
mov
push
fdivrl
inc
add
fwait
adc
jl
int
jp
dec
adc
mov
jno
shll
jmp
adc
div
sub
decb
pop
xor
xor
icebp
pop
sahf
insb
inc
negb
test
mov
add
mov
lcall
sbbl
jnp
adc
cwtl
push
icebp
loop
repz
jae
xor
xchg
rclb
pusha
pop
es
sbb
sbb
out
sub
push
jl
pushf
push
and
repz
mov
roll
aam
push
jecxz
test
xchg
lahf
aad
test
push
sbb
outsb
outsl
xchg
fdivrl
dec
popf
push
stc
out
roll
fsubrs
jae
jne
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
add
js
jle
js
add
jecxz
xchg
jl
scas
inc
das
js
in
leave
sub
add
jno
lods
and
sahf
xchg
stos
mov
inc
push
outsl
pop
push
ljmp
cmpsb
xchg
adc
or
sahf
jg
sahf
xchg
xor
push
gs
js
int
jle
insb
arpl
adc
outsl
add
or
into
leave
es
sub
push
inc
mov
xchg
push
lret
xlat
adc
mov
int3
pushf
mov
imul
js
rcrl
sets
xchg
test
xor
cmp
pop
out
sar
inc
les
mov
js
add
xchg
jecxz
xor
inc
cmovae
out
cs
push
sbb
gs
mov
out
mov
mov
add
rcll
sub
rcll
mov
lret
clc
add
xchg
add
or
call
push
xchg
xchg
fbld
cmpsb
aas
push
insb
jne
iret
lods
mov
pop
aad
xchg
aas
shlb
pop
xorl
or
cld
xchg
pop
dec
fcmovb
add
ds
pushf
lds
and
cmp
sub
sarb
imul
scas
test
int
nop
arpl
repnz
outsb
or
insb
outsb
mov
add
imul
cwtl
in
add
outsl
lcall
fwait
outsb
and
jecxz
sub
jl
sub
xlat
stc
and
sbb
sub
lods
ret
adc
out
cwtl
jne
or
cmp
xchg
bswap
push
sub
mov
add
sti
jp
add
out
xor
jl
dec
sti
sbb
adc
jns
out
sbb
es
push
dec
imul
cmp
iret
sub
pusha
jle
in
arpl
jmp
insb
test
addl
in
pop
sbb
mov
cwtl
sbb
fcmovu
and
out
jge
cmc
add
lea
xchg
cld
in
gs
add
fwait
mov
jno
lret
fmuls
adc
xchg
cmp
arpl
mov
arpl
sub
and
mov
xchg
and
scas
out
ret
jb
jnp
or
mov
mov
loope
add
mov
and
pusha
or
xlat
enter
sti
lret
push
divl
push
jbe
xor
sti
cmp
xchg
lods
fidivs
andb
mov
xchg
out
daa
or
mov
inc
dec
and
jle
scas
orl
sbbb
mov
cwtl
cmp
hlt
inc
jmp
add
add
ret
ror
leave
rcr
aaa
mov
add
mov
js
dec
jle
js
test
je
or
and
int
pop
mov
xchg
sub
popa
dec
int
push
pop
shl
pop
lods
repz
jns
leave
fsubs
fidivrs
cltd
int3
push
xchg
mov
nop
insl
push
jns
sub
fmul
xchg
mov
fsubrs
add
cmp
xor
xchg
xor
xor
add
sub
ds
or
shlb
and
xchg
data16
stos
loopne
neg
add
movl
mov
in
and
pop
mov
nop
stc
xchg
push
ljmp
aas
stc
push
adc
jae
jmp
and
cmp
call
jbe
pop
sbb
add
idiv
push
call
popf
push
scas
fs
mov
mov
movsb
sbb
mov
mov
in
pop
rol
mov
push
and
sbb
jae
pop
mov
mov
inc
mov
xchg
movsb
inc
repnz
clc
cmp
inc
movsl
ds
loopne
xor
test
or
stos
mov
inc
adc
inc
pushf
cmpsb
out
insl
in
into
outsb
out
sub
adc
xor
cmp
xchg
out
rorl
xchg
push
lock
jae
repnz
das
cmp
lock
in
aad
adc
jl
xor
sub
xor
sub
mov
push
ret
in
test
push
pop
add
cmp
mov
xchg
ss
test
rcrl
mov
mov
mov
ds
pop
add
out
and
or
or
and
inc
push
jae
test
cmp
aam
inc
out
test
push
inc
sbb
fs
mov
pop
cld
mov
imul
pop
push
dec
cmpsl
mov
popa
add
push
aam
inc
hlt
aaa
das
insb
ret
adc
sbb
jnp
mov
fs
das
ret
hlt
jo
cmp
int
jecxz
xor
fwait
inc
mov
out
and
jns
and
imul
pop
inc
out
and
pop
pop
notb
and
out
int3
pop
into
cs
cltd
sbb
addr16
mov
mov
loope
pop
xchg
sub
xor
pop
lret
call
add
mov
push
fisubl
push
inc
adc
out
imul
xchg
jl
loopne
cmpsl
xlat
and
inc
pop
mov
pop
jecxz
mov
jbe
jns
pop
mov
fcomps
push
popf
outsl
cld
fistps
incb
fsubr
adc
cmp
mov
repnz
out
mov
jmp
iret
rcl
lret
ror
xlat
lods
and
cld
fyl2x
int
ret
dec
jle
js
or
mov
dec
push
dec
mov
ds
xchg
push
sti
or
or
popf
jp
sub
movsl
repnz
ror
adc
cmp
adc
test
sub
inc
mov
out
mov
xchg
add
pop
jge
push
add
mov
fsubl
or
icebp
out
inc
lods
test
daa
outsb
shll
adc
xchg
shll
pop
and
and
inc
incl
pop
jne
mov
mov
sti
stc
loopne
xor
and
and
mov
jle
or
cmp
add
cli
leave
mov
je
dec
push
std
mov
xchg
fsubrl
inc
mov
mov
xchg
lods
inc
fwait
pop
push
add
xorl
movsl
pop
and
adcl
cmc
nop
cmc
repnz
std
imul
movsl
adcb
popl
fsubrp
repz
in
int
arpl
lret
mov
inc
xor
notb
ss
lds
mov
test
mov
adc
sub
pop
or
push
ret
rolb
cmc
loope
stc
or
lds
lcall
insl
xchg
lret
pop
jmp
pusha
rcll
xlat
dec
rol
mov
ds
adc
mov
add
in
xchg
cli
sub
and
insb
std
aas
xor
add
sarl
fmull
inc
stc
jo
leave
cmpsl
shrb
inc
push
test
xor
cmp
pop
loopne
ret
stos
ds
push
das
mov
push
inc
mov
mov
dec
mov
adc
scas
and
or
mov
sub
mov
sub
xor
and
jno
repnz
outsb
divl
push
and
inc
mov
pop
xor
dec
dec
nop
push
inc
xchg
inc
pop
or
pop
or
rol
sti
cmpsl
and
mov
stc
push
pop
xchg
pushf
mov
cwtl
fcomps
ja
pop
mov
dec
pop
dec
jmp
adc
mov
shlb
sbb
ds
mov
and
es
or
dec
imul
aas
loop
jns
cmp
xchg
popf
mov
lods
imul
cmpsl
inc
cmpsb
mov
lret
sbb
and
in
loope
loop
jmp
je
bound
scas
xor
test
or
data16
sub
sub
icebp
or
std
iret
inc
insb
inc
mov
fsubs
mov
div
mov
jmp
aas
ret
rol
sbbl
addr16
js
dec
jle
js
stos
jno
sbb
or
mov
std
jg
jmp
nop
test
pop
daa
mov
fidivl
dec
inc
xor
push
mov
bound
mov
add
mov
push
adc
arpl
rclb
loope
jge
andl
cltd
cmp
pusha
sub
xor
sbb
int
aam
xchg
mov
notl
jno
es
jle
add
push
pop
std
mov
xor
cmp
mov
test
mov
lret
mov
sub
mov
repz
in
sbb
mov
mov
in
mov
aam
test
add
adc
iret
imul
inc
jp
imul
ljmp
pop
cld
das
fidivs
adc
mov
test
jecxz
mov
mov
dec
and
data16
jl
or
add
or
jecxz
cmp
in
mov
lahf
fs
ret
ret
cmp
cmc
add
lock
xor
dec
cmp
lahf
xor
loop
loop
xor
push
out
push
test
push
aad
in
sub
pop
addb
xchg
movsb
sbb
or
sti
push
out
or
xor
jns
push
jle
xor
outsl
fstpt
rcrb
xor
ss
popf
or
dec
jg
test
mov
pop
sbb
das
popf
jmp
stos
mov
ja
mov
das
scas
mov
loop
add
push
icebp
loop
pop
fisubs
stos
mov
ficoms
cmp
out
imul
or
adc
imul
ret
int
repnz
insb
mov
test
mov
mov
xchg
cs
scas
test
jmp
insl
mov
add
push
ficoms
mov
add
outsl
jmp
lods
aam
push
fmull
xchg
push
adc
into
ljmp
lret
jl
adc
xchg
sbb
cmp
out
out
leave
ss
xor
gs
inc
scas
lcall
inc
pop
fisttpl
sub
test
hlt
js
and
xchg
mov
xlat
out
push
jno
cmp
mov
outsb
xor
in
sub
and
fiaddl
rorb
dec
inc
push
mov
sub
push
mov
and
xchg
mov
out
dec
ds
mov
mov
fadds
adc
mov
movsl
loopne
testb
test
ljmp
adc
enter
sbb
jmp
ds
cmp
mov
inc
or
dec
xor
js
dec
jle
js
cmpsb
stos
push
mov
out
cmp
scas
push
test
xchg
adc
fnstcw
loopne
push
and
mov
out
xchg
int3
test
pop
repz
inc
cmc
out
mov
sub
es
je
filds
mov
decb
jns
pushf
adc
outsb
mov
pop
std
pop
push
leave
cltd
and
sti
ds
sbb
pop
lret
shrb
cmp
mov
outsl
mov
ret
adc
jnp
imul
mov
rcr
jbe
test
loope
cmp
adc
popf
mov
icebp
inc
and
sub
or
jmp
xchg
or
loopne
xchg
xchg
push
and
scas
mov
dec
leave
fs
xor
test
notb
pusha
xorb
int
jge
xchg
daa
fs
and
mov
and
in
mov
add
mov
xor
xchg
xchg
imul
mov
rolb
dec
adc
rclb
mov
xchg
scas
jb
xlat
or
xchg
fiaddl
xor
inc
imul
adc
aad
lea
sbb
shr
and
sti
mov
je
sahf
push
pop
out
ds
add
and
and
movsl
ret
adcb
add
mov
and
mov
shl
sub
popf
mov
adc
out
outsb
inc
pop
push
inc
mov
xor
push
shll
jb
push
lods
popf
xchg
sahf
ret
call
xlat
bound
std
pop
sbb
mov
push
stc
in
lods
mov
cmp
fs
mov
inc
xor
xor
icebp
sbb
in
jno
in
and
add
jge
mov
sub
mov
cmpsb
pushaw
adc
andl
jecxz
jle
loope
in
jmp
pusha
mov
and
addr16
out
add
leave
xchg
das
cmpsl
pusha
sbb
cmpb
cs
push
sub
bound
add
pop
cmp
mov
cltd
jge
xchg
push
scas
sbb
test
push
test
inc
lahf
adc
inc
ja
int3
jns
icebp
roll
jl
imul
mov
pop
dec
repnz
cli
inc
aam
lds
lret
pop
adc
sub
ds
cmpsl
mov
jns
xor
xchg
adc
push
out
push
idivl
and
jecxz,pt
shll
fdivrs
xor
popf
roll
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
pusha
imul
fs
js
and
dec
and
inc
and
fistps
outsb
mov
mov
push
iret
dec
enter
stos
adc
mov
mov
add
mov
pushf
add
cmp
addb
inc
out
cmpsl
adc
mov
mov
or
mov
das
mov
cmp
sub
mov
cltd
sub
sub
mov
cltd
sti
sahf
sti
test
int3
rclb
mov
add
xchg
add
movsb
jbe
add
loope
jnp
dec
fisubrl
and
push
push
leave
aaa
test
imul
dec
sub
push
js
fxam
icebp
cmp
fiadds
imul
fstpl
mov
ljmp
sub
inc
je
mov
insl
and
cmp
ja
add
loope
xor
sub
adc
stos
in
sub
sub
mov
imul
aas
xor
test
or
pushf
mov
iret
jmp
inc
and
sarb
fisttpll
push
or
dec
test
andb
adc
mov
pop
lcall
mov
movsl
mov
xor
into
aaa
jecxz
imul
pop
or
push
mov
dec
xchg
cwtl
test
cs
rcll
aad
sbb
div
outsb
jmp
aaa
adc
jmp
push
and
arpl
mov
jno
ret
inc
jo
or
loopne
adc
repz
popa
rcll
test
lcall
xchg
xor
lret
push
push
adc
arpl
adc
jb
sub
aad
dec
stc
xchg
outsb
sbb
aad
shrl
clc
and
and
adc
dec
mov
mov
xor
mov
push
add
popf
lcall
push
pop
pop
pushf
push
das
and
push
gs
push
mov
push
out
push
int3
repnz
cld
enter
sbb
cmpsb
cmpb
clc
rclb
sub
inc
sahf
dec
push
jb
scas
scas
out
mov
cmp
bound
out
or
lea
jnp
dec
inc
mov
push
popa
inc
test
lods
stc
xchg
into
mov
or
mov
ror
lock
or
cs
dec
imul
push
xor
aaa
repz
mov
dec
adc
out
cmp
mov
push
lea
dec
popa
mov
or
add
push
sub
shl
mov
sub
mov
adcl
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
mov
js
jle
js
add
mov
out
insl
imul
out
cmp
mov
cli
add
scas
inc
lahf
push
dec
pop
push
mov
and
aad
pop
andl
scas
pop
loop
jecxz
mov
outsb
dec
sub
push
mov
xchg
or
repnz
push
daa
xchg
pop
test
adc
lahf
pop
sarl
fistps
mov
mov
inc
sahf
outsl
out
dec
out
outsb
inc
sub
sbb
nop
jo
clc
jmp
inc
outsb
dec
add
or
addr16
leave
add
cmp
loop
cld
adc
add
mov
outsl
mov
and
aad
ror
or
xchg
mov
pop
repz
cmp
out
dec
xorl
ljmp
test
sbb
xor
fwait
stc
lret
xchg
cmp
movsb
cltd
xchg
out
pop
mov
pop
ret
clc
xor
add
sub
fucom
test
mov
cmp
pop
fwait
popf
dec
pop
in
xorb
je
jecxz
fcompl
rcl
and
or
mov
adc
pop
daa
je
movsl
cmpsb
fnclex
iret
and
adc
insb
scas
jecxz
push
adc
pop
pop
imul
jns
js
in
mov
and
pop
xorl
mov
call
int3
jns
lock
popl
mov
mov
les
mov
add
lods
lcall
mov
cwtl
adc
xchg
mov
test
cmpsb
outsl
nop
xchg
outsb
aaa
and
cmpsl
test
or
mov
imul
cmp
pop
add
sti
cmc
insb
stos
mov
xlat
mov
cmp
lds
xchg
jns
lret
jl
stc
inc
cmp
adc
mov
and
repz
inc
mov
inc
mov
test
hlt
pop
adc
popa
popa
mov
or
inc
mov
jne
xor
sub
lret
sub
mov
jo
mov
nop
add
aas
xchg
mov
dec
test
repz
test
inc
xor
out
dec
mov
dec
push
push
je
cmp
pop
inc
and
and
push
iret
sub
in
xchg
rcrl
fsubs
test
fmuls
xchg
and
loopne
xor
sub
outsl
mov
xchg
fisubs
dec
pop
mov
nop
xchg
jle
mov
shlb
mov
add
imul
xor
lods
dec
dec
movsl
cmp
inc
fdivs
push
lahf
daa
dec
mov
jmp
es
add
rcrl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
shrl
int3
js
fs
js
daa
mov
mov
flds
out
daa
lea
icebp
or
mov
pop
arpl
mov
imul
cwtl
push
nop
xor
ror
orl
or
push
ret
imul
shrl
pop
nop
movsl
sub
add
fnstenv
jge
into
incb
ds
jge
stos
aam
pop
mov
jecxz
insl
aas
stc
inc
mov
iret
pop
cmpb
push
fsubrp
mov
or
jo
add
dec
rclb
push
and
enter
dec
cmpsb
xchg
mov
cltd
testl
xor
das
mov
lcall
aaa
xchg
push
sbb
pop
push
lds
int
mov
or
add
outsb
add
sub
or
xlat
nop
cmp
loope
jns
sbb
pop
cltd
jecxz
and
in
push
inc
inc
pop
je
xchg
dec
sarb
scas
mov
or
jo
dec
adc
cli
jb
pop
iret
sbb
fcomp
push
in
icebp
iret
in
sti
dec
pushf
xor
ffree
jo
call
mov
xchg
lods
vpsllq
roll
mov
aam
sbb
sub
push
push
xor
push
out
pop
inc
test
dec
push
dec
aad
push
int3
pop
jae
mov
sbb
addr16
jne
pop
daa
jae
push
mov
cltd
repz
inc
lods
add
adc
sbb
or
mov
rol
add
pop
xchg
dec
lods
jno
aas
xor
ds
push
dec
jae
push
or
lock
adcl
data16
sub
mov
fs
mov
pop
and
repnz
stos
aam
push
pop
cmp
fidivrs
cmp
mov
testb
and
jmp
cld
or
jnp
data16
cmp
popf
out
cmp
sbbb
or
jb
cmp
pusha
outsb
fists
add
clc
add
inc
jge
addr16
inc
aad
mov
lea
add
das
out
out
in
idivb
jno
lods
mov
jp
push
nop
loopne
sbb
fs
mov
mov
mov
scas
push
repnz
cmpsb
adc
sbb
loop
ljmp
mov
mov
mov
inc
test
mov
rorb
sti
inc
push
jle
mov
sub
inc
xadd
xor
add
aaa
pop
daa
jnp
xor
mov
testb
inc
repnz
push
sarb
sub
mov
sbb
pop
sub
ds
test
xor
mov
xchg
mov
cmpsb
push
jg
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
lahf
and
scas
sub
icebp
nop
icebp
lcall
iret
ret
fs
cmpsb
imul
xor
add
mov
iret
and
mov
dec
fistpl
xchg
push
jb
xor
in
mov
loopne
push
lea
mov
mov
scas
xchg
add
fisubrs
enter
sub
test
popa
loopne
lea
push
fnstcw
shll
gs
xor
popa
sub
xchg
movsb
jb
jbe
and
and
push
add
movsl
scas
sub
popa
mov
dec
inc
sbb
and
rol
dec
imul
push
xchg
rcr
inc
mov
inc
adc
mov
mov
stos
sbb
int3
test
cmc
nop
iret
lds
lods
push
inc
jecxz
sub
aad
mov
and
hlt
or
jmp
ja
or
xchg
lahf
loope
dec
or
mov
aad
push
in
rcrl
loop
lret
iret
pop
push
pusha
leave
xor
pushf
dec
jnp
mov
out
add
push
mov
sbbl
in
into
ret
pop
pop
dec
ljmp
int
push
sbb
in
mov
int
mov
repz
push
jns
in
mov
cmc
addr16
dec
and
ljmp
add
pop
hlt
das
jae
inc
and
cltd
dec
popa
push
jp
and
lret
fisttpll
outsb
push
jg
push
and
ds
adc
mov
mov
dec
push
push
mov
cli
pushf
mov
aas
ret
mov
imul
xor
jecxz
aad
mov
add
xchg
andb
mov
mov
fmuls
insb
mov
xor
movl
jns
pop
leave
jns
adc
add
xor
pop
dec
aas
cmp
dec
lea
mov
arpl
inc
adc
mov
mov
inc
adc
mov
dec
inc
cmp
xchg
les
stos
push
jno
jl
les
ficompl
lret
cmp
jle
pushf
jnp
gs
popf
and
stc
mov
std
in
add
ss
bound
stos
jbe
sub
into
filds
xor
fldl
cmp
sub
sub
pop
add
les
mov
fildl
push
in
mov
not
out
aad
or
inc
pop
mov
imul
data16
push
mov
es
sets
mul
data16
mov
xor
pop
push
fwait
enter
inc
lock
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
js
mov
js
fs
js
mov
andb
icebp
jle
sbb
pop
ljmp
fwait
in
and
insb
aaa
jnp
sub
pop
sbb
xlat
sub
jle
stos
add
andl
sub
mov
ss
jle
mov
inc
repnz
nop
jmp
fistps
sub
xchg
je
jecxz
fstps
decb
gs
aaa
shl
xlat
insb
add
int
inc
jnp
insl
loop
imull
std
push
dec
mov
mov
mov
shlb
ffree
xor
fisttps
scas
daa
ret
aad
shll
jnp
and
cmp
add
and
pop
and
mov
mov
shll
pop
push
mov
xchg
stos
push
jl
lock
pop
mov
aam
das
mov
js
roll
fstpt
cmpsb
dec
test
or
and
mov
cmp
or
pusha
test
xchg
push
lret
adc
sahf
adc
sub
jmp
sub
dec
dec
and
jno
arpl
lahf
mov
and
aaa
lock
push
outsl
and
inc
mov
fnstenv
jecxz
jl
adc
dec
inc
ds
and
test
adc
fldcw
ljmp
ja
xchg
push
dec
xchg
xchg
pop
jo
sub
cs
outsb
xchg
xor
test
jnp
ss
xlat
loop
or
sub
addr16
ljmp
leave
lcall
adc
fldenv
rcll
mov
jl
jge
add
add
jp
notl
sbb
fdivp
repz
xorl
pop
ficoms
mov
out
lcall
test
xchg
pop
mov
push
movsb
cmp
hlt
sub
sub
mov
sbb
inc
xchg
js
xchg
fdivrs
decb
and
jae
nop
mov
insl
or
jg
cltd
movsb
push
out
xchg
mov
pop
repnz
sub
into
jmp
stos
or
push
add
add
dec
in
jno
xchg
mov
xchg
xor
jmp
mov
leave
sub
stc
lods
pop
aas
arpl
push
iret
jg
ja
mov
gs
pop
or
cwtl
cld
fldz
pop
cmp
scas
bsr
mov
adc
dec
leave
mov
jmp
pop
call
sub
pop
out
out
xchg
mov
rorl
xor
mov
inc
push
sbb
sbb
jb
les
out
les
lcall
jg
int
cld
jg
add
xchg
cmp
leave
lds
pushf
ss
das
loope
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
mov
enter
js
fs
js
aam
push
dec
enter
scas
push
sub
jbe
xchg
fadds
data16
mov
dec
adc
cmp
ss
int
dec
loopne
stc
or
stos
aas
xor
jp
aam
lock
js
decl
lea
arpl
mov
mov
into
xor
getsec
outsl
in
adc
adc
mov
and
fiaddl
repz
lcall
call
mov
dec
jp
and
lret
pop
aas
lock
cmpsb
dec
xchg
lcall
cmpsb
fwait
arpl
sub
mov
jb
push
or
jno
addr16
sti
std
cmpsl
cmc
adc
xchg
dec
sbb
dec
repnz
push
push
jb
mov
divb
mov
icebp
jns
dec
mov
test
jmp
cmp
inc
ret
and
mov
out
ret
mov
jbe,pt
lods
jne
insb
xchg
sbb
jo
pop
sbb
inc
roll
inc
es
loope
add
xor
in
rcll
add
lods
jle
test
movsb
push
sub
mov
lds
fisubrl
cmpsl
test
scas
jns
cmp
orl
ja
lock
sbb
int3
es
pop
loope
xor
aam
iret
stos
clc
adc
dec
sub
xchg
cltd
sbb
jl
sbb
popa
mov
aaa
je
mov
cmp
add
push
dec
adcl
pop
and
pop
push
inc
sub
cld
lret
ljmp
sub
and
cmp
sahf
cs
mov
mov
fnstenv
xlat
add
inc
shrl
aam
inc
push
xor
movsl
outsb
mov
mov
lods
test
push
xor
data16
ljmp
sti
dec
mov
daa
lds
adc
cltd
cli
push
push
test
add
mov
lret
sbb
dec
int3
shl
jmp
shrl
jmp
adc
cmc
in
sbb
cmp
hlt
fwait
stos
jg
ret
loope
fwait
cmp
fincstp
and
dec
int3
jp
inc
mov
and
adc
mov
jb
adc
cs
gs
cmpsb
mov
pop
in
adc
adc
fimull
das
sub
jp
cmp
cmp
xchg
cld
ds
inc
push
or
cmp
icebp
movsl
or
pop
sub
sub
mov
js
dec
xchg
jle
icebp
mov
test
lret
es
or
mov
xchg
fsubr
iret
adc
or
aaa
in
dec
fimuls
cmp
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fsubs
das
rorl
jle
js
and
es
or
adc
rorl
test
xor
setno
mov
js
cmpsl
mov
push
pop
pop
cmp
cmpsb
adc
sub
arpl
push
int3
push
xchg
test
lahf
and
popa
jne
aad
or
add
mov
sbb
pop
in
mov
mov
xchg
inc
in
xchg
test
xchg
jnp
push
jle
out
cltd
xchg
pop
sar
sub
dec
loop
faddl
call
pushf
sub
xor
xor
cmpsb
xchg
fstps
cmp
mov
jg
mov
mov
xchg
lds
mov
cmp
shlb
xchg
mov
loop
inc
mov
out
imul
or
or
or
pop
xchg
add
sub
stos
pop
pop
lahf
gs
or
cmp
movsl
cld
aas
lea
insl
push
adc
jnp
repnz
loope
sub
jp
inc
out
shrb
data16
cmp
xor
mov
jae
cmpsb
add
mov
data16
push
repz
in
cmp
arpl
inc
jbe
inc
fisttpl
lods
pop
in
or
pop
mov
leave
jl
pop
ret
xor
ficompl
pop
leave
xchg
dec
xchg
fidivrl
dec
adc
sbb
jecxz
sub
stos
movsl
push
push
dec
in
xorb
add
pop
and
and
push
dec
mov
mov
lock
int
test
out
dec
mov
into
cmpsb
xor
int3
dec
stc
adc
addr16
lea
cmpl
sub
popf
fcoms
xor
js
std
xor
add
iret
mov
mov
xchg
add
jmp
or
jo
sub
stos
and
popl
outsl
lods
ficoms
jo
lret
dec
btr
movsl
fwait
and
mov
ja
sbb
ret
stc
les
fidivl
mov
and
popf
dec
jecxz
jnp
push
sbb
sub
arpl
scas
out
fldcw
leave
push
push
dec
jno,pn
icebp
scas
call
mov
outsb
es
sbb
adc
lock
push
adc
mov
fucomip
test
sub
pop
cmpsb
mov
das
icebp
jb
in
pop
pop
dec
fldt
sub
sbb
popf
xchg
push
fucom
test
daa
sahf
jmp
jno
inc
testl
scas
pushf
idivl
in
push
subb
mov
out
outsb
adc
jge
jne
mov
int3
cmp
aam
mov
add
dec
dec
add
ss
mov
mov
mov
xor
aam
pop
inc
xorb
imul
xlat
inc
dec
mov
pop
xor
enter
mov
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
push
hlt
fnstsw
fs
js
pop
jle
push
add
std
fmuls
lret
inc
push
inc
movsl
sub
jl
insb
mov
adc
vaddsd
push
cmp
std
test
or
and
fimull
cs
lret
lret
mov
ja
ss
xor
mov
ja
aaa
adc
pop
add
out
cwtl
xor
jnp
mov
sub
repnz
cmpl
lods
rcll
imul
hlt
outsl
popa
ficomps
cmp
fmuls
fsubl
sub
xchg
sbb
xor
rolb
xlat
add
nop
lods
mov
cld
cmpsl
mov
dec
data16
pop
sar
aaa
subl
and
not
sub
jmp
push
sub
jl
cmpsl
push
hlt
loope
pushf
push
test
lock
push
add
in
lea
mov
enter
int
xorb
or
push
cld
jae
or
cmp
pop
mov
dec
or
in
adc
jbe
pop
rcrl
and
inc
das
mov
lea
scas
and
xchg
arpl
test
push
pop
decb
pushf
fcmovb
pusha
sbb
iret
loop
adc
pop
inc
bound
in
das
cmovp
xor
sub
cwtl
incb
cwtl
jg
xchg
out
mov
cs
mov
pop
sub
dec
outsl
add
add
xor
xchg
out
xor
mov
pop
sbb
movl
out
xor
push
scas
pop
inc
add
mov
fcompl
push
and
push
lock
dec
into
mov
call
cs
imul
jbe
bnd
testb
xchg
or
negb
outsb
mov
inc
sbb
cmpsb
sbb
jmp
adc
lods
xor
push
in
cmpsb
or
cmp
inc
add
addl
aad
mov
cmp
push
enter
test
xchg
data16
inc
mov
arpl
dec
jo
mov
jbe
outsl
hlt
xchg
test
fldenv
bswap
in
pop
cmp
movsb
mov
jmp
jo
push
je
sub
test
jo
mov
jnp
fdivs
hlt
ja
mov
push
push
adc
sub
imul
cs
pop
push
push
xor
adc
popf
mov
cmp
xor
xchg
mov
push
mov
lods
xor
jo
sahf
icebp
pushf
inc
mov
mov
popa
mov
and
cld
mov
mov
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
and
sti
data16
mov
jae
xchg
xchg
push
scas
cltd
push
cmp
jmp
adc
std
jo
fscale
imul
roll
jns
push
push
add
xchg
mov
push
push
loope
outsb
mov
cmp
push
mov
lcall
in
lods
push
loop
mov
pop
adc
movaps
mov
outsb
and
fdivrs
or
leave
cltd
sub
movb
xchg
fwait
mov
xchg
and
movsb
enter
jbe
pushf
sub
mov
add
arpl
or
lock
push
lret
insl
inc
mov
ret
out
orb
insl
je
lcall
push
sbb
fsub
scas
and
xor
xchg
popf
and
mov
fsubrs
aas
mov
mov
loop
or
bnd
ret
daa
sub
and
inc
push
icebp
mov
inc
and
pop
in
sub
shl
jo
cli
cmp
adc
mov
pushl
cmp
xchg
sti
push
and
mov
push
inc
cld
movsb
loopew
sahf
je
arpl
adc
cmp
pop
sbb
jne
inc
hlt
test
lods
aaa
sub
mov
sub
inc
cmc
pop
sahf
test
pop
in
ja
mov
jmp
mov
aam
std
xor
push
js
out
push
jne
loope
inc
stos
sub
jp
or
cmc
push
mov
ljmp
sarl
nop
out
loop
fdivp
pop
je
mov
pop
outsl
testb
lret
ss
jp
ss
xchg
out
add
outsb
mov
xor
fcoms
cmpl
fdiv
sti
sbb
add
pop
mov
insb
data16
xor
dec
std
adc
push
and
mull
addr16
andb
ret
rcrl
sbb
scas
popa
rorl
cmp
cmp
mov
mov
inc
jae
sti
pushf
jnp
nop
divl
loop
cmp
inc
test
repnz
mov
arpl
sub
sub
int3
and
pop
xor
andb
xchg
dec
fiaddl
fldl
mov
inc
fs
in
mov
pop
test
mov
pop
aam
dec
push
loopne
sbb
js
mov
mov
pop
xor
rclb
pop
in
mov
fdivrs
jp
mov
ljmp
xor
and
jge
push
mov
xchg
jle
fcomp
imul
adc
shr
mov
stos
mov
mov
inc
pop
pop
imul
adc
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
jge
inc
cwtl
int3
out
js
jle
js
add
jle
loop
int3
mov
jl
push
sub
xchg
iret
icebp
sub
jno
dec
and
mov
jno
inc
sarb
jmp
jp
jecxz
xor
sti
test
pop
jo
mov
aad
add
ja
cld
not
cld
rorl
sub
cli
inc
mov
not
xchg
pop
outsl
lods
loope
cmc
sti
mov
jg
in
clc
and
mov
push
xlat
jg
aaa
sub
push
mov
add
inc
sub
into
sub
jo
mov
pop
or
xlat
icebp
sti
xor
repnz
mov
xlat
popf
loopne
andb
imul
loop
sub
push
imul
push
ret
sbb
adc
ljmp
aad
pop
repnz
in
adc
ljmp
add
adc
adc
fisubl
lahf
cwtl
pop
loope
mov
sbb
cmpsb
ret
jnp
xor
lock
and
arpl
cmpsl
sbbl
dec
cmpsb
in
aas
push
push
jne
scas
sbbb
aas
cmp
test
push
daa
popa
out
je
dec
outsl
add
cmpsb
rorb
mov
xor
repz
mov
push
pushf
dec
push
add
sbb
sub
sbb
and
add
loop
add
inc
enter
stos
mov
mov
js
mov
pop
movsb
int
xor
push
in
fisubrs
scas
js
jbe
mov
rol
mov
push
mov
aaa
mov
mov
ljmp
jo
mov
in
add
jae
jne
mov
push
lock
cli
pusha
or
icebp
cld
into
sbbl
ficoml
sub
ljmp
jbe
call
adc
inc
mov
xchg
dec
je
jns
adc
insl
pushf
stos
mov
test
loopne
lea
cmpsl
pushf
mov
pop
jbe
jne
and
dec
adc
mov
fstps
xchg
pop
mov
cmc
mov
hlt
in
mov
mov
mov
adc
pop
mov
ud2
filds
mov
or
adc
outsb
mov
shrb
in
cwtl
sti
adc
imul
lea
sub
std
push
add
mov
mov
xchg
mov
in
ja
sti
jmp
lods
push
scas
mov
xchg
push
jg
mov
pop
inc
sub
iret
mov
inc
pop
mov
imul
push
movl
gs
dec
mov
inc
adc
inc
lods
xor
add
cmc
push
cld
mov
pop
leave
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
es
cmp
js
cmpsl
jle
js
outsb
add
hlt
push
lret
int
jo
mov
fs
in
or
addl
xchg
rep
pop
int
mov
push
int
les
mov
cmp
sahf
nop
push
imul
call
sbb
in
dec
inc
jae
mov
adc
ds
fldl
lret
rcrl
movsb
dec
into
fstl
icebp
push
loope
mov
push
mov
inc
fldenv
jae
incb
mov
push
test
leave
mov
cmp
scas
sub
cwtl
add
fs
mov
or
adc
add
lcall
mov
pop
stos
push
add
mov
das
fld
loop
push
cwtl
adc
sbb
add
pop
jno
cmp
enter
xchg
sbbl
int3
scas
mov
push
lret
iret
inc
xlat
rolb
insl
mov
sub
dec
imul
fsubs
mov
mov
aam
daa
sbb
or
cs
in
jge
push
out
pop
dec
sub
les
imul
out
sub
dec
pop
test
fdivrl
test
cmp
dec
jecxz
das
mov
cltd
data16
mov
rorl
mov
aad
pop
or
xchg
hlt
sub
add
lret
in
xlat
pop
loope
sub
cmp
and
and
sub
aas
insl
pusha
jp
pop
sahf
mov
mov
stc
pop
stos
mov
cltd
ret
inc
insb
jmp
jno
xchg
repnz
sub
test
mov
call
mov
push
iret
pop
cmp
mov
loope
xchg
lret
sti
add
stos
dec
mov
shlb
scas
sbb
xor
dec
cmc
ret
nop
fnstsw
add
in
pop
xor
jbe
loope
aas
push
mov
push
jge
pop
fwait
pop
cmp
inc
imul
pop
in
jg
daa
idivb
not
divb
lock
cmpb
mov
aam
add
inc
jp
dec
sahf
repnz
or
push
mov
adc
test
in
dec
stos
nop
xor
fisttpl
push
jbe
sbb
add
hlt
fwait
mov
pop
push
pop
insb
mov
inc
jle
jle
add
icebp
xorb
push
push
lea
lea
xor
test
xor
push
inc
clc
cmp
cld
cmp
cld
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
test
js
jle
js
dec
sub
jbe
ret
popf
cltd
repnz
jae
scas
cmpl
leave
or
adc
or
cmpb
jne
or
push
dec
push
int
mov
push
imul
add
jbe
dec
add
sub
dec
scas
and
test
call
and
stos
in
pop
mov
int3
push
hlt
setg
adc
and
movsl
cmp
pop
mov
inc
stos
mov
mov
sbb
rol
sbb
xchg
jmp
mov
jecxz
lds
leave
cmpsl
ret
lcall
in
sbb
xor
cmp
xor
pop
or
enter
xchg
sub
mov
out
sub
jbe
jno
ret
adc
push
lods
mov
test
pop
inc
and
sbb
loop
adc
popa
scas
in
mov
es
mov
add
mov
loope
inc
adc
xchg
inc
mov
push
jg
inc
inc
cmpsl
leave
cmp
loop
sbb
rclb
imul
lods
icebp
or
and
jbe
loop
sti
jmp
out
movsb
mov
out
push
sub
jl
arpl
sbb
loop
dec
xor
xor
xor
test
mov
push
lret
adc
mov
in
movsl
cmp
sbb
and
mov
insl
adc
cltd
dec
sub
add
call
jg
jp
pushf
rorb
add
fiadds
aad
js
test
cld
push
mov
dec
pop
pop
sbb
or
sbb
xor
dec
aad
test
mov
lods
movups
shrb
xor
lds
push
mov
sahf
jecxz
xlat
cmp
cmovo
fcomps
or
sbb
out
cmp
fdivrl
mov
jle
scas
mov
pop
int
cwtl
popa
mov
mov
jge
xor
xlat
aad
lret
mov
adc
lret
pop
flds
dec
stos
stos
loop
mov
out
pushf
mov
adc
mov
adc
and
int3
cmc
testb
out
sbb
dec
jp
mov
mov
add
lret
jo
outsl
mov
mov
pop
mov
pop
subb
push
cmp
aaa
sahf
xlat
push
fwait
cmpsb
add
dec
sub
into
add
mov
mov
cmp
dec
addr16
test
add
lods
and
add
jne
add
jne
jmp
lret
cmp
mov
or
js
cmpsl
jle
js
sbb
subl
adc
gs
jecxz
xlat
int
dec
cmp
push
xor
push
roll
push
inc
loop
cmp
ljmp
les
xor
dec
lret
in
jae
cmp
call
or
repnz
xchg
pop
inc
fmull
cld
sbb
add
and
dec
fbld
cmpsl
in
and
cld
idivb
dec
inc
gs
mov
movsb
push
dec
mov
mov
jb
push
dec
adc
pop
in
jb
out
adc
fcomp
dec
aaa
cltd
cld
sbb
dec
js
dec
orb
push
push
lea
inc
pop
adc
jne
add
sub
lods
pop
aas
inc
in
xor
daa
add
lock
nop
mov
jnp
shll
jge
fisttps
adc
adc
mov
xor
cmp
imul
or
daa
xor
pusha
inc
add
add
pusha
popa
mov
adcb
shlb
dec
loopne
sti
mov
xchg
inc
jg
push
inc
loop
int3
pop
mov
xchg
inc
rorb
sub
mov
inc
pop
out
repnz
repz
pop
ss
adc
lret
pop
adc
inc
push
pop
xchg
xchg
push
testb
mov
push
mov
repnz
into
aam
and
push
push
xor
xchg
push
ror
add
push
addl
mov
push
push
loope
pop
lahf
push
sbb
lea
mov
inc
jle
jge
sub
ret
jl
jne
push
fidivs
sub
mov
mov
int
dec
lret
sbb
lods
xor
push
pop
push
test
cld
mov
aad
in
push
xchg
fwait
cs
xor
xchg
mov
add
inc
ret
sub
je
outsb
loop
pushf
adc
sbb
jne
sub
into
sbb
mov
pusha
mov
jmp
clc
xchg
push
fpatan
aas
mov
push
adc
rcll
cld
fldl
sbb
out
xchg
sbb
add
rorl
pushf
and
mov
outsl
xchg
movsl
ret
inc
cmpsb
data16
in
jmp
pop
lcall
dec
mov
mov
cmp
jecxz
or
or
leave
negl
cmc
xlat
mov
nop
jl
scas
ja
fdivrs
add
mov
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
sbb
in
js
cmpsl
jle
js
cltd
xchg
push
mov
mov
imul
into
mov
je
or
test
es
pop
std
outsl
mov
mov
lret
gs
call
pop
mov
hlt
fnsave
ljmp
fidivrl
test
stos
es
or
mov
gs
jge
sub
mulb
ficomps
push
cmc
mov
mov
adc
xor
xchg
fadds
dec
adc
icebp
push
icebp
outsb
adc
dec
pop
cmp
and
or
out
test
mov
ds
or
push
and
dec
les
scas
dec
inc
mov
jbe
sub
fsubs
dec
or
outsl
jl
lods
test
mov
lret
out
jge
lret
dec
roll
jns,pn
sub
mov
cltd
pop
push
repz
imul
jle
insb
jnp
dec
scas
push
loope
fadds
and
dec
sub
push
push
push
jle
add
mov
out
cli
and
mov
movsb
pop
sbb
dec
push
xor
push
adc
sbb
add
iret
or
sub
pop
xchg
aam
cmp
test
push
cmc
fldenv
mov
xchg
push
xchg
push
mov
nop
fcmovne
cld
enter
jmp
inc
add
sbb
test
cmp
popa
dec
sbb
push
mov
jecxz
sbb
fldcw
xchg
mov
adc
inc
mov
movsl
adc
insb
stos
lcall
outsb
lods
add
data16
fstl
adc
shll
mov
js
lock
jne
aam
fs
mov
scas
inc
mov
inc
out
xchg
add
mov
mov
scas
movsl
call
lock
sub
imul
test
pop
push
mov
add
in
icebp
es
pusha
adc
sbb
in
sub
jp
mov
clc
stc
mov
movsl
lock
xchg
inc
add
ret
sti
add
inc
lods
daa
inc
ret
rorb
mov
push
push
mov
in
xchg
das
mov
movsl
popa
jmp
std
mov
sub
or
aam
add
fsubr
scas
mov
lcall
shlb
enter
or
add
sbb
jno
push
popf
negl
jae
add
test
hlt
xchg
out
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
cltd
or
js
push
jle
js
adcb
xor
inc
mov
out
sbb
hlt
push
inc
fmuls
repnz
icebp
push
mov
pushf
adc
push
sub
and
mov
cli
mov
loope
orl
pop
dec
shll
test
cmpsl
jae
pop
ret
sahf
add
xchg
popf
and
pushf
adc
jge
xor
std
inc
mov
loop
les
in
ret
mov
xor
xlat
xchg
sub
fnstcw
cmp
pop
sahf
sbb
push
lea
mov
or
push
mov
mov
mov
lods
xchg
xchg
pusha
cmp
push
int3
imul
into
mov
fimull
faddl
es
test
adc
into
mov
xchg
out
pop
test
xor
imul
fmulp
mov
bound
aam
mov
cmp
sub
or
pop
lcall
inc
inc
and
shrl
rcl
jecxz
add
mov
and
push
xchg
or
lahf
sahf
jecxz
jb
cmp
loopne
xchg
cli
inc
jmp
popf
xlat
aaa
cld
mov
popa
adc
push
fiaddl
jo
pop
das
insl
adc
sarb
push
arpl
adc
cmpl
push
lods
ret
jo
mov
fisubrl
jnp
cs
out
aam
sahf
aad
outsb
aad
jle
mov
and
sub
int3
inc
pop
fldcw
sbb
int3
pop
mov
test
lcall
jle
pop
out
sub
add
jecxz
adc
cld
xchg
adc
xchg
xorb
add
xchg
into
xor
insl
pushf
ss
scas
inc
xor
dec
fisttps
inc
imul
aam
xor
out
int3
xchg
aam
stos
dec
jmp
stc
movsb
pop
les
xlat
ss
and
inc
xor
into
popf
adc
sbb
fisubl
shlb
push
repz
out
pop
mov
mov
ds
mov
jmp
add
pop
cmc
loopne
mov
movl
das
repnz
jle
dec
sub
push
push
sub
xchg
pop
movsb
mov
popf
and
sbb
xlat
cmpsb
jno
lods
jg
inc
mov
or
sahf
pop
or
cwtl
cmpsl
lds
sub
inc
dec
out
dec
repz
inc
add
lahf
add
shrb
dec
aaa
in
rorl
push
loop
in
mov
add
ss
imul
out
mov
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
addb
mov
js
push
jle
js
notl
xchg
dec
mov
lods
scas
iret
push
lods
mov
jbe
out
adcb
pop
sub
jg
mov
ljmp
imul
fnstenv
jp
cmp
inc
cmp
ljmp
cli
or
cwtl
pop
in
cmp
pop
jno
pop
adc
xor
adc
ret
mov
mov
mov
and
pushf
in
mov
test
cmp
fidivrs
pop
pop
in
call
mov
pop
cmp
fdivs
cmp
add
jmp
call
adc
jns
lret
sbb
mov
push
fimull
xchg
loope
mov
xor
jg
dec
xor
mov
mov
mov
xchg
outsl
and
in
mov
dec
push
mov
ss
cmp
pop
popf
push
fbld
jge
lea
inc
repz
popa
loopne
lods
dec
dec
rcrl
sbb
pop
je
notl
inc
std
insb
mov
popf
push
or
int3
in
ss
in
lock
loopne
lods
fs
mov
cmpsl
and
test
pushf
sbb
mov
in
sub
cmp
or
mov
add
repz
call
cmc
imul
jge
lret
push
insb
dec
pop
inc
sbb
jg
inc
adc
cwtl
aaa
sti
nop
push
add
scas
jo
js
xor
lds
leave
pop
xchg
mov
sti
xchg
fs
out
or
xor
lahf
or
mov
insb
xor
fildl
inc
aas
cmpsl
inc
push
fmuls
adc
jle
mov
lds
nop
divb
movsl
sbb
cmp
or
pop
or
adc
in
mov
cmp
or
arpl
ret
sti
add
rcll
xchg
xchg
push
stos
xchg
xor
pop
bound
cmpxchg
jg
inc
or
push
gs
and
mov
aad
pop
insb
nop
imul
mov
es
jge
imul
dec
call
mov
fs
imul
imul
xchg
or
xchg
fisubrl
cwtl
movsl
cmpsb
pop
fwait
xchg
pushf
and
in
jecxz
fsubr
jbe
push
mov
lret
lods
push
xor
mov
sbb
out
mov
je
das
xchg
or
cmp
jb
clc
mov
movsb
or
push
lds
shrb
or
data16
cmp
fwait
sbb
mov
add
add
sub
xor
or
pop
js
sub
mov
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
inc
mov
add
daa
stos
cmp
jb
dec
daa
repz
aaa
pusha
and
push
jbe
cmc
aas
jne
push
sti
xchg
lods
sub
clc
lea
xor
clc
pop
jb
push
jmp
xor
mov
adc
mov
inc
pop
out
or
fisttps
pop
adc
mov
bound
test
test
fcmovu
fbstp
jae
fucomp
enter
mov
outsl
inc
popa
xorl
sub
mov
mul
pop
je
mov
pop
dec
cli
into
mov
clc
pop
inc
xor
mov
out
adc
pop
inc
loop
cmp
mov
sub
dec
jge
or
scas
xlat
clc
and
arpl
rorl
push
daa
mov
mov
vunpcklps
mov
stos
or
movsb
xchg
mov
cvtps2pi
mov
popa
das
adc
scas
xorb
movsl
inc
jne
cmp
fstpt
mov
sbb
xor
bound
mov
xchg
int
fdivrl
lcall
pop
xchg
xlat
pushf
and
pop
push
int
jo
arpl
test
push
out
pop
out
imul
xor
jl
cld
nop
push
faddl
dec
sbb
xorl
ss
cmp
fmull
lcall
push
jmp
test
inc
xchg
mov
and
lret
cld
and
pop
popf
add
call
jg
add
dec
xor
mov
stc
dec
or
in
loopne
insb
inc
fwait
xchg
addr16
ja
and
popa
movsl
xchg
std
pop
and
and
adc
negl
dec
lret
and
loope
pop
jb
imul
or
sbb
testb
ret
pop
test
cmpsb
cmp
gs
push
lds
andl
sbb
dec
xor
xor
mov
or
xchg
fbld
lret
jge
cld
ret
pop
movl
push
mov
jo
jo
stos
fs
lock
inc
sbb
mov
ljmp
add
cmp
add
outsl
leave
pop
or
or
sub
jo
bound
sbb
dec
dec
les
push
repz
cwtl
push
adcb
into
cmp
lock
pop
jge
add
stos
adc
lods
fidivl
das
pop
sti
imul
loopne
xchg
shrl
mov
cli
js
xchg
xchg
shl
adc
adc
cwtl
into
ljmp
push
mov
neg
int
add
shlb
aaa
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
std
sub
stc
js
je
js
jns
mov
and
daa
adc
xchg
dec
out
aam
jo
hlt
stos
movb
inc
dec
xor
mov
and
jb
gs
out
movsb
push
xchg
cmpsl
stos
pop
jne
aas
call
adc
fsubl
mov
out
das
fcompl
aad
scas
test
into
and
add
pusha
jge
es
pop
cltd
jb
shrb
xchg
loope
push
fs
jle
mov
mov
jno
pop
cwtl
stos
sbb
or
cli
ret
adc
sbb
icebp
push
loop
xchg
push
inc
in
pop
or
xor
inc
mov
mov
ret
sub
xchg
mov
iret
jne
imul
mov
lods
inc
push
popa
test
cmpsb
xchg
aad
popf
dec
outsl
mov
cmp
mov
std
into
pusha
je
sub
je
sub
test
aam
shl
pop
pop
ret
jle
dec
xor
lds
rclb
push
int
pop
mov
sahf
sub
xchg
or
xor
jns
dec
and
pop
test
and
push
cli
repnz
loope
int3
daa
movsl
jnp
mov
sbb
mov
mov
inc
inc
ljmp
es
add
inc
aas
andl
lea
scas
mov
sbb
cs
loope
dec
ja
rcrl
or
xor
xor
adc
cmp
mov
icebp
lods
gs
mov
xchg
cmp
lods
cmp
aaa
imul
ret
sub
ss
into
and
iret
imul
add
dec
in
ljmp
push
pop
insb
add
xchg
sbb
movsl
leave
push
cld
inc
dec
and
cmc
adc
cmpb
cmp
push
xor
int3
fmuls
repnz
aam
mov
pop
dec
ja
cmp
int
std
iret
lods
add
cmp
mov
repz
sub
pusha
std
clc
mov
daa
push
aam
mov
fldcw
pushf
pusha
cmp
xor
imul
iret
sbb
mov
jle
jl
int3
mov
les
out
enter
and
mov
xlat
and
nop
sub
mov
or
adc
mov
xchg
ret
pop
push
out
dec
add
cli
mov
out
clc
xor
cmpsb
pop
push
mov
nop
fcmovnu
loope
mov
sbb
push
pop
cmpsb
xchg
xchg
sbb
cmpsb
into
lret
xor
dec
inc
leave
push
dec
inc
repnz
out
jecxz
test
and
ret
in
xor
jbe
push
and
lods
and
mov
faddl
add
inc
fadds
add
xor
add
mov
inc
loopne
and
add
add
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
mov
js
je
js
fbld
addr16
ja
mov
push
cmpsb
int
ja
in
ret
cltd
xor
pop
mov
dec
stos
push
inc
push
leave
scas
push
pusha
or
add
xchg
inc
iret
shlb
or
cmp
ret
ja
push
and
jge
and
push
rol
mov
mov
sti
cmp
ljmp
rcl
or
cli
inc
out
add
in
out
fcomps
fistps
mov
repz
or
int3
mov
lret
imull
fnstcw
cs
inc
sbb
xchg
jecxz
pop
popa
xor
lea
mov
nop
push
into
sbb
cwtl
jb
sti
push
pop
push
sti
insl
mov
ror
or
lods
dec
loope
insl
push
mov
cmpsb
insb
insb
cmp
add
addr16
jle
shll
fdiv
mov
push
add
xor
loopne
les
or
cmp
inc
and
cmc
and
sub
mov
cmp
rcll
inc
inc
xchg
and
fs
xchg
repnz
mov
jecxz
aam
mulb
jmp
fimuls
push
cmp
sbb
in
adc
aaa
xor
inc
pop
ss
add
mulb
pop
shll
fldenv
xchg
pop
xor
fsts
dec
out
xlat
pop
lret
sbb
adc
sbb
pushf
cmp
add
jno
hlt
mov
rcll
sahf
sub
xchg
or
cli
dec
sub
imul
repz
xor
mov
adc
outsb
push
add
sub
and
test
mov
sti
or
mov
push
imull
mov
pop
pop
stc
aad
push
popf
and
or
adc
test
cmp
mov
fwait
stc
test
push
iret
into
inc
xchg
fnsave
iret
fs
jl
push
xchg
bound
imul
das
ret
mov
cs
into
jbe
fcmovnbe
stc
test
nop
int
jbe
inc
mov
cmc
dec
jae
arpl
out
mov
dec
hlt
xchg
inc
repz
inc
xor
mov
xchg
jmp
add
movsl
mov
lret
pop
in
loop
test
xchg
mov
or
mov
lds
xor
lods
sub
adcb
fcmovu
dec
leave
pushf
and
sbb
out
mov
jnp
cmp
mov
fwait
jo
adc
cmp
js
and
imul
lods
in
add
cmpsl
jmp
sbb
hlt
xchg
mov
pop
add
int
ret
loopne
insl
out
into
fwait
std
sahf
or
xchg
gs
cmp
clc
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
mov
js
jle
js
mov
xor
call
inc
loope
xor
and
lret
xchg
mov
mov
pop
dec
loope
incl
sub
jo
insb
mov
pop
shll
mov
hlt
lcall
faddl
jne
mov
cmp
jl
in
push
outsl
test
add
jl
adc
jge
sbb
adc
mov
rcr
mov
ret
jge
clc
push
loopne
jl
test
arpl
push
mov
divl
in
std
lea
mov
add
jbe
sub
dec
push
addr16
dec
js
sbb
xchg
jns
cli
test
imul
adc
mov
lea
icebp
mov
in
loopne
xchg
lock
pop
outsl
arpl
es
aaa
xchg
dec
pop
pop
mov
or
stc
jo
outsb
xor
pop
in
sarl
jg
test
fwait
test
insl
orb
test
stos
je
in
and
and
push
es
in
add
or
hlt
mov
das
jmp
cmc
fistpl
fsubr
gs
les
leave
outsb
or
mov
sbb
and
or
inc
inc
mov
mov
xchg
lahf
xchg
mov
daa
addr16
inc
sub
add
imul
int3
in
das
jmp
inc
in
mov
testl
lods
sub
faddl
xor
imul
into
xor
fidivrl
push
pop
pminsw
mov
shl
mov
ljmp
push
and
add
lods
xchg
and
mov
rcrl
or
xchg
imul
aam
cmpsl
sub
aam
sub
aas
adc
jnp
xchg
mov
jp
inc
mov
dec
loop
mov
loop
loop
std
cmpsl
mov
mov
jmp
or
adc
lret
or
dec
test
ret
or
or
mov
xor
inc
je
daa
test
mov
pop
mov
cli
pop
sbb
das
outsl
rol
xchg
pop
pop
les
inc
ret
mov
cmp
ja
popa
sub
xchg
mov
xor
cld
xchg
adc
push
mov
iret
sbb
pop
mov
inc
outsl
sub
push
sub
jle
ds
lcall
or
pop
push
test
sbb
add
je
xchg
inc
adcb
mov
or
testl
jl
add
out
test
ret
jo
mov
mov
jae
iret
popf
fs
divl
fnstenv
rolb
movb
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
ucomiss
test
cmpb
jle
js
jecxz
mov
mov
dec
cmp
or
popa
sub
add
mov
pop
push
stc
pop
and
mov
fnstcw
xor
repz
ja
mov
call
movsb
ret
out
pop
push
mov
mov
in
mov
nopl
and
adc
push
mov
dec
movsb
dec
test
push
lret
xchg
add
fldcw
push
cmp
fmuls
mov
pop
sti
cltd
lds
mov
aad
jle
jg
in
dec
lods
pop
imul
out
scas
out
jg
insl
sbb
das
or
mov
shlb
mov
or
out
imul
pop
rolb
mulb
popa
mov
mov
push
mov
addr16
bound
mov
stos
fmull
popa
inc
fnstenv
cmpsb
lods
outsb
stos
mov
in
and
pop
or
xchg
sub
xchg
inc
xor
and
mov
inc
jle
mov
mov
mov
xchg
xor
sbb
pusha
mov
pop
lock
int3
sahf
inc
cmpsl
cwtl
movsb
adc
push
xor
jle
pop
mov
push
cmp
add
shrb
fcomi
fs
ret
inc
mov
sub
pusha
jne
ljmp
jg
mov
push
aas
jge
mov
jns
pop
mov
fnsave
movsl
dec
rolb
ds
sub
fstpl
xchg
pop
xor
push
mov
adc
mov
test
xor
xchg
sbb
dec
stc
adc
push
cltd
dec
js
pop
jecxz
out
loopne
ficoml
je
fcoms
fstl
fs
stos
insb
ss
xor
mov
push
lods
xor
jle
scas
sbb
cmp
xchg
popf
loopne
jle
out
jp
add
inc
sbb
orb
sbb
adc
ljmp
mov
sub
sub
adc
lds
fsubs
adc
xchg
fcomi
add
cmp
dec
and
sbbl
ds
jecxz
test
test
test
int
sub
outsl
dec
jnp
add
add
inc
lods
dec
dec
pop
cmp
aaa
or
movsl
xlat
nop
hlt
and
sbb
int
dec
enter
mov
mov
push
movsb
pop
ret
ror
sub
push
push
jmp
push
movsl
mov
mov
push
call
sti
push
shrl
dec
loopne
mov
pop
fbld
ret
imul
into
mov
popa
jmp
mov
lods
movsb
dec
lods
and
lea
lahf
sti
dec
loop
aas
pushf
xchg
shr
jp
imul
adc
in
test
mov
jmp
sarl
fcmovne
mov
fsubr
inc
cmpsl
add
je
js
adc
inc
out
rcrl
xor
pop
push
push
repnz
addr16
push
mov
sbb
insl
in
imul
and
movsb
cmp
jns
ljmp
mov
cmp
sub
add
shl
cld
add
inc
idivl
sbb
inc
gs
xchg
cmc
jl
xchg
cwtl
sbb
xchg
popf
mov
fstl
sub
popa
mov
movb
test
or
jecxz
adc
pop
xchg
and
es
mov
dec
mov
xlat
imul
outsb
add
push
or
dec
dec
inc
cmp
xor
and
lcallw
jae
and
pop
push
jo
fstpt
cmpsl
lret
or
mov
cs
inc
int3
aad
clc
pop
push
in
mov
rcrl
nop
sbb
in
or
in
leave
lahf
pusha
mov
rcll
sub
mov
outsb
jb
push
cmpsl
push
dec
mov
mov
clc
and
int3
xchg
popf
mov
negl
adc
add
pop
fs
cmp
addr16
push
cmpsb
mov
sub
subb
mov
loop
je
js
mov
cmp
mov
mov
push
mov
ret
aad
mov
ficoml
shll
mov
sti
cld
mov
mov
and
lea
jl
adc
mov
testl
sub
sbb
sub
repnz
or
mov
out
inc
in
sbb
les
fdivp
bound
scas
xchg
jecxz
push
jb
xchg
and
icebp
lods
xor
mov
inc
pop
aaa
and
sbb
mov
pop
inc
push
jno
pop
dec
lods
push
mov
sub
icebp
xlat
mov
cltd
imul
xlat
fwait
mov
mov
push
cmp
dec
movsl
je
jmp
pop
or
push
xor
or
xchg
xchg
daa
repz
sbb
frstor
fistpll
add
loopne
sub
mov
sub
add
sbb
sarb
fidivrl
imul
push
imul
add
mov
mov
sbb
jno
leave
rorl
cli
inc
jns
xchg
lds
adc
xchg
leave
idivb
xor
sbb
pop
in
cmpsl
ret
inc
inc
xchg
cmp
inc
inc
and
xorb
sub
or
lret
loopne
mov
out
cli
inc
test
jae
and
jl
loop
pop
enter
cmc
aam
loop
in
popa
and
sub
xchg
mov
xchg
xorb
jp
sub
add
add
rol
fcmove
rcl
pop
mov
and
js
jle
js
fidivrs
out
and
add
dec
iret
fisttpll
test
dec
push
adc
fmull
inc
mov
inc
push
arpl
hlt
xor
jecxz
add
les
mov
sub
ss
dec
stc
ljmp
cli
sbb
call
popa
sahf
pop
xor
mov
jbe
cwtl
and
das
push
and
cmpsl
push
pop
loope
lret
mov
adc
jmp
push
xor
mov
in
jae
call
sbb
pop
jg
inc
and
jbe
aam
in
push
jecxz
mov
inc
pop
mov
xor
pop
fs
jne
mov
and
mov
mov
pop
pushf
cmpsl
dec
sarb
add
das
add
or
ret
inc
lock
mov
mov
sbb
int3
shll
test
out
cmp
popf
push
mov
lcall
pop
pop
inc
enter
daa
sub
push
add
mov
stos
fdivrl
lcall
fdivs
insb
pop
mov
cmc
xrelease
inc
pop
insl
push
add
inc
lock
jnp
js
aam
sahf
push
and
fsts
cld
ja
xor
das
push
mov
shlb
lods
leave
fadds
shld
add
popa
fmulp
lds
pop
jp
push
push
jnp
or
iret
xchg
add
push
push
dec
lods
outsl
or
push
lds
pop
int
lods
hlt
pop
movsl
xor
sbb
xchg
and
repnz
xchg
lock
cmc
adc
lock
rolb
and
cmc
or
test
mov
xor
adc
cmp
pop
lods
adc
in
mov
inc
je
adc
fcmovu
fcomi
sub
notb
adc
adc
ret
call
dec
or
xor
ljmp
mov
dec
add
sbb
push
out
push
lods
pop
xchg
add
sub
cmpsb
add
push
arpl
sbb
loop
jbe
sbbb
add
inc
push
into
sub
xchg
retw
jecxz
sub
or
enter
sbbb
sub
ljmp
push
mov
add
cmc
stos
mov
cmp
mov
add
je
rol
xorps
push
cld
sbb
sub
pop
add
popa
jno
popf
mov
mov
shl
adc
test
sbbl
cld
jbe
or
cmp
fs
adc
mov
adc
push
adc
push
outsl
jecxz
fildll
mov
insl
add
pop
and
add
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
in
pop
addr16
js
jle
js
cmp
pop
push
jp
ret
sbb
mov
addb
int3
testb
subb
xchg
in
or
add
xor
and
jbe
pushf
popa
loop
xchg
mov
cmpsb
adc
adc
aas
cmpsl
hlt
ja
mov
out
add
popa
out
inc
pop
push
sbb
vmovaps
shlb
es
xor
rclb
ljmp
icebp
dec
stos
xor
push
cli
js
or
stc
push
push
cwtl
hlt
pop
movsl
loopne
inc
xchg
cmc
out
cwtl
das
dec
mov
sahf
jl
hlt
test
repnz
dec
mov
imul
pop
jnp
nop
or
inc
dec
add
add
test
xor
clc
in
push
sbb
jmp
ret
cmpsb
or
daa
movsl
dec
sti
xchg
xchg
cli
aaa
popf
iret
cwtl
mov
mov
sarb
adc
scas
push
out
addl
jno
adc
in
bound
iret
dec
pop
pop
sub
add
test
roll
jbe
ja
cmp
in
cmp
sbb
xchg
lods
dec
imul
lret
add
inc
dec
xchg
leave
das
sub
sub
out
pop
sbb
xchg
movsl
in
or
insl
rclb
xchg
or
dec
in
or
sbb
or
lock
inc
push
lock
mov
jmp
adc
arpl
out
jl
mov
xchg
inc
cld
movsb
or
scas
mov
and
dec
inc
ds
push
or
push
sbb
or
paddsw
les
inc
and
in
cltd
mov
sub
add
and
add
loop
dec
sbb
fiaddl
lods
sbb
jno
iret
ljmp
mov
loope
cli
inc
hlt
loop
jo
and
shlb
adc
es
in
bound
sub
pop
xor
push
or
es
addr16
inc
push
packsswb
aad
xor
loope
jmp
std
adc
mov
sub
dec
or
iret
pusha
jb
leave
icebp
push
cs
das
xchg
loopne
negb
adc
loop
and
push
pusha
test
inc
add
adc
out
push
sub
pop
stos
cltd
cmpsb
ret
dec
in
sub
in
xor
add
cmpsb
mov
cltd
pop
dec
cmp
stc
push
std
push
popa
movsl
imull
or
aam
mov
arpl
into
les
cmpsb
xor
push
sar
jno
cs
aam
clc
aad
clc
jl
xorb
leave
xor
xor
fisttpl
std
jb
lret
int
rcrl
repnz
decl
fmull
divb
cmp
je
mov
andl
jmp
jmp
into
aas
ds
rcl
add
stos
sar
add
mov
je
js
pop
pop
or
sub
je
xchg
xor
or
push
mov
push
push
pop
sub
bound
mov
ds
xchg
cmp
arpl
scas
lret
sbb
push
cwtl
das
ss
shll
cmp
pop
jle
lds
subl
xor
and
mov
lds
jo
insb
fs
jmp
rcrl
jle
insl
mov
dec
fwait
cmp
lds
adc
pop
outsl
fcmovb
xor
arpl
jb
inc
in
xchg
push
gs
jbe
push
add
ret
fcomps
or
rorl
fisubrl
pop
xchg
mov
lret
jno
cs
aas
add
adc
cltd
and
insl
in
mov
dec
inc
or
adc
jne
xchg
pop
lcall
imul
rol
jo
mov
sbb
shll
cld
aaa
xchg
sub
icebp
js
test
or
pop
scas
lahf
adc
jns
scas
icebp
or
ret
addl
popa
jecxz
hlt
fwait
adc
sub
test
int3
pop
xor
xor
pop
lods
ficoml
test
mov
jne
rcl
inc
pushf
stos
punpcklbw
or
test
push
filds
mov
mov
fidivs
sub
pop
push
iret
push
cmpsl
jecxz
jg
popf
mov
add
adc
rolb
dec
in
push
mov
hlt
add
out
scas
imul
fs
repnz
je
and
inc
filds
push
ja
sub
rclb
sub
fdiv
mov
jbe
movzwl
rcrl
leave
push
ljmp
adc
lret
insb
sub
not
enter
std
xchg
pop
cmc
adc
cmpsl
imul
dec
outsl
dec
ficompl
fists
sub
mov
es
cmp
push
xchg
add
sub
jae
mov
addr16
aam
sbb
or
inc
jle
sbb
jl
jl
out
in
int3
mov
push
repz
ds
mov
add
insb
bound
stos
pop
and
ljmp
jmp
int3
fisubrs
and
cld
sub
fwait
imul
popa
jnp
xchg
movsb
mov
push
mov
ret
fcmovb
and
iret
inc
mov
popf
or
push
dec
imul
mov
xchg
add
sar
fildl
shll
xor
sub
lcall
mov
cmc
adc
gs
jbe
lcall
test
adc
iret
xor
push
cli
xchg
sbbl
pop
dec
push
dec
insb
cmp
cwtl
into
mov
in
mov
inc
decb
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
loopne
dec
ret
js
jle
js
clc
mov
mov
cmp
jmp
cmp
sahf
mov
and
testl
lods
cli
xchg
loop
sbb
mov
jns
push
add
rcrl
in
sub
add
repz
lea
lahf
sbb
mov
lods
jne
xor
mov
nop
sti
sbb
cld
jb
pop
or
into
cwtl
ficoml
mov
cmpl
popa
and
inc
movsl
and
sub
fldenv
andl
or
pop
mov
jg
xchg
lret
test
pop
jmp
bound
adc
adc
inc
loope
inc
scas
sub
push
out
dec
imul
in
xchg
cld
int
int3
dec
imul
mov
orb
test
sub
fwait
popa
imul
bound
orl
xchg
jne
rorl
dec
or
fstpt
lret
cli
sub
mov
cmc
iret
cmp
je
or
mov
loop
xor
mov
popa
add
out
jbe
mov
divb
add
or
pop
xor
das
mov
fidivrs
inc
orb
inc
xchg
rolb
push
ja
mov
jge
and
jg
lock
dec
adc
mov
mov
push
xor
ret
push
lods
and
xchg
cmp
pop
arpl
roll
stos
sbb
lods
cmp
pop
lods
inc
jge
jecxz
sahf
sbb
nop
or
orl
cmp
cwtl
mov
es
xor
enter
push
inc
jno
cmp
loop
inc
out
pop
cltd
out
xor
lods
pop
push
faddp
adc
xor
xlat
sti
lods
popf
mov
adc
xchg
sbb
repz
sbb
inc
push
add
mov
xor
pop
test
rorb
repz
fsubl
add
test
int
mov
mov
xchg
and
fcomi
jecxz
repnz
sti
cmpb
test
cmp
lret
or
or
lods
incl
imul
jb
inc
mov
lahf
repnz
arpl
mov
xor
xchg
scas
addr16
sti
dec
cmp
dec
movsb
xchg
mov
imul
outsb
je
jmp
jns
ret
rclb
imul
movsl
xor
pop
cmpsl
sti
arpl
xorl
insl
out
out
les
lcall
jp
jge
icebp
and
and
gs
arpl
jp
ja
sub
push
add
cwtl
inc
push
push
lods
fwait
jo
leave
push
lret
cmc
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
xchg
xor
xchg
js
je
js
dec
ds
enter
add
jge
ror
rolb
scas
loope
mov
xchg
pusha
jge
fldcw
add
fisubl
sub
or
pop
iret
cmp
jnp
xor
push
sbb
je
es
jp
retw
out
testb
xchg
call
mov
dec
out
dec
div
stos
pop
jp
pusha
movsb
pop
fbstp
pop
push
fs
gs
mov
xchg
pop
les
ja
inc
push
cmp
xchg
xor
push
std
scas
hlt
mov
push
sub
or
sarb
and
mov
fs
imul
dec
push
call
sbb
loope
adc
push
pop
push
dec
push
lods
inc
je
lret
pop
sub
adc
decb
adcl
inc
pusha
lahf
add
lret
xchg
adcb
and
sub
adc
or
stc
shll
ljmp
push
lahf
sbb
orb
jmp
or
pop
adc
imul
aad
imul
rcrb
outsb
push
push
pop
ja
pop
and
xor
aam
mov
rcr
xchg
push
and
push
inc
inc
nop
pop
pop
mov
inc
add
iret
in
movsl
fisttpll
dec
sub
cmp
std
dec
inc
jns
push
jp
push
pusha
mov
push
clc
fildl
daa
xor
std
int
push
mov
jns
mov
outsl
cmp
or
dec
or
in
repz
bound
cwtl
jns
arpl
lcall
js
arpl
insl
rorb
jbe
arpl
mov
kmovb
and
dec
sbb
pop
jbe
sub
pop
adc
rcr
pushl
test
sub
leave
push
xchg
stc
sar
adc
ficoms
out
mov
mov
dec
test
inc
jg
icebp
lret
sub
xchg
leave
xorl
mov
outsb
imull
mov
clc
sub
pop
xchg
aaa
cmp
adc
das
jg
pop
test
sub
jno
xchg
fwait
xlat
xor
mov
sbb
fldl
stos
xchg
fs
xor
clc
in
xor
push
out
jp
cs
jno
ret
mov
stc
and
cmc
arpl
sbb
repz
hlt
cltd
cmp
xor
push
pop
dec
mov
test
imul
mov
xchg
inc
out
or
mov
mov
sub
sub
dec
add
js
xchg
hlt
leave
jle
das
jnp
xchg
js
sub
inc
xchg
xchg
inc
test
dec
popf
pavgw
fs
xor
mov
push
push
sbb
idivb
std
mov
jecxz
add
fsubs
jge
mov
jmp
xlat
cmp
ds
js
adc
in
les
fwait
js
je
js
ss
or
push
repz
push
inc
pmullw
lods
ljmp
mov
jl
and
xchg
repnz
mov
aam
imul
jp
test
ret
imul
xlat
pop
test
adc
jge
inc
mov
jnp
pusha
aaa
rep
ds
xchg
fisubl
push
pop
fwait
xor
fnstenv
les
cmp
and
adc
cmp
je
stos
push
push
dec
and
sub
jb
sbb
inc
xor
into
or
ret
mov
ds
jg
shrb
dec
xor
clc
test
or
and
dec
repz
movsb
fcompl
add
out
js
out
shl
in
mov
loope
xor
das
add
mov
mov
mov
add
insl
fcmovnb
jne
or
aam
cmpsl
js
dec
mov
mov
pop
or
cli
jecxz
loope
in
and
add
and
add
notl
mov
or
cld
xlat
mov
xchg
jne
mulb
pop
mov
dec
mov
lods
sbb
push
mov
jb
les
mov
mov
jnp
mov
repz
test
out
mov
pop
scas
ds
inc
icebp
sti
testl
jmp
fcoms
add
push
cmc
shrl
and
mov
mov
fisubrs
jecxz
shrb
push
push
or
jmp
in
xchg
xlat
lcall
xlat
add
mov
jmp
or
ds
add
push
clc
pop
sub
xor
scas
dec
and
jle
loop
pusha
jle
loopne,pn
int
pusha
cmc
xchg
cld
mov
xchg
scas
cmp
and
fwait
test
lahf
dec
push
jno
adc
xlat
jnp
mov
ret
or
add
push
and
xchg
and
push
mov
fadds
rcl
or
icebp
mov
pop
int
std
aas
push
in
popf
std
cli
push
hlt
in
in
sti
sbb
lods
xchg
fsub
sub
jno
popa
andb
cmp
mov
sbb
sti
lcall
fcompl
jne
cwtl
push
imul
nop
stos
or
or
sbb
mov
in
lods
xchg
insb
icebp
xor
movsb
in
and
cwtl
ljmp
sbb
jp
subl
adc
in
dec
popl
enter
outsl
mov
xchg
cmp
lods
mov
push
ret
mov
jae
iret
or
jmp
mov
std
je
int3
push
xor
sub
jo
adc
cmpsl
std
loop
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
xchg
filds
cwtl
js
je
js
xorl
ficoms
fcomps
inc
mov
js
mov
movsl
aaa
pop
jl
jle
xor
fsubl
mov
push
repz
pop
sahf
imul
cmpb
fsub
xchg
into
jmp
jne
movsb
pushf
stc
xor
flds
cltd
mov
mov
cmp
mov
jne
testl
fwait
and
test
inc
and
ret
data16
faddl
xchg
or
xchg
aam
add
cmp
adc
adc
xor
mov
imul
sub
sbb
sub
dec
inc
mov
xchg
lret
mov
sbb
iret
in
mov
xlat
jle
jecxz
movsb
cwtl
mov
idivb
ret
mov
cmp
rcl
aam
icebp
sub
cmpsl
dec
jns
test
imul
mov
jbe
pop
add
mov
mov
dec
popf
scas
sbb
mov
loopne,pt
xchg
pushf
lods
dec
sbb
cmp
push
xchg
mov
iret
int
sti
or
pop
dec
and
xchg
xchg
sbb
sub
movsl
pushf
rolb
or
clc
fstl
dec
out
repnz
inc
mov
pop
out
inc
inc
pop
xlat
mov
sbb
insl
mov
in
jns
into
xor
loope
nop
pop
mov
xchg
dec
insb
jns
int
mov
jne
jo
cmp
mov
cmp
subl
sahf
hlt
pop
mov
aaa
mov
scas
or
mov
mov
cwtl
mov
adc
lds
cmp
js
push
js
cmp
cmp
test
scas
adc
inc
not
mov
sub
lea
lea
sub
xchg
in
or
fcoms
push
mov
xor
add
add
and
xor
mov
lods
mov
rclb
mov
add
mov
mov
pop
ljmp
divb
test
sbb
inc
stos
dec
daa
repz
or
aad
sbb
jecxz
jo
jmp
in
cmp
loopne
imul
inc
mov
ljmp
and
imul
popl
mov
outsl
int3
cwtl
xor
ret
pop
shlb
mov
push
lahf
scas
arpl
mov
test
xor
pop
mov
mov
sbb
pop
gs
pop
xchg
mov
les
mov
cmpsl
adc
sbb
stos
dec
mov
dec
pop
mulb
fisubs
sbb
cmp
iret
cmp
or
popf
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
mov
pop
xor
js
mov
in
xlat
mov
jbe
or
icebp
push
sub
sub
mov
ds
test
ljmp
and
mov
pop
into
std
inc
lods
xchg
scas
mov
cli
xchg
push
dec
in
dec
ljmp
stos
dec
sbb
fildl
inc
sbb
fisttps
xchg
lods
cld
or
out
rcr
or
icebp
out
push
dec
mul
add
jecxz
lret
xchg
clc
xor
mov
dec
add
aas
icebp
pop
xchg
mov
stc
dec
sbb
jae
add
adc
stos
fstl
popa
jge
push
xchg
ret
ljmp
sti
call
xchg
or
mov
mov
stos
cmp
pop
add
push
rcl
pop
repnz
jp
das
adc
mov
in
imul
cmp
scas
sbb
in
loope
mov
ret
xchg
dec
loope
xchg
fwait
ja
xor
out
sbb
movswl
dec
sub
loope
xor
icebp
xchg
mov
mov
scas
add
gs
mov
xor
inc
call
stos
daa
mov
popf
jno
mull
xor
std
xchg
jle
ror
aaa
int
mov
cli
sub
testb
jg
sbb
mov
ds
pop
fwait
test
mov
add
stos
pushf
mov
aam
inc
dec
xor
jbe
lock
push
loope
xor
enter
lock
pop
and
inc
xlat
or
push
pop
adc
sub
fcmovb
sbb
sub
hlt
sub
xor
push
sbb
push
fcompl
xchg
fs
cmp
int3
inc
mov
fbld
cmp
xchg
std
cli
data16
push
mov
shrb
frstor
push
inc
call
aam
icebp
repz
cmpsb
fidivs
shll
mov
test
mov
push
and
sub
inc
mov
pop
test
jae
incb
add
mov
xchg
add
jo
jecxz
ss
pop
sbb
mov
push
add
lret
clc
mov
mov
out
aas
stos
faddl
lret
push
adc
push
test
xchg
pop
jno
int
cmpb
scas
pushf
lock
ljmp
gs
cs
and
mov
pop
jp,pn
mov
popf
shll
ds
icebp
jne
repnz
mov
jp
movsb
lea
sbb
push
aam
pusha
or
lods
pop
xor
add
mov
cmp
sub
and
jmp
mov
mov
sbb
repnz
mov
mov
ret
cmp
jmp
rol
ror
aad
xchg
mov
aad
shrb
mov
js
and
mov
dec
xor
push
jnp
jp
cltd
jbe
sub
fsubrs
jp
add
in
push
pop
mov
jae
pop
inc
or
cmp
push
popf
push
les
sub
mov
mov
mov
pushf
test
dec
sbb
hlt
jnp
mov
mov
ds
and
nop
or
jmp
lret
push
mov
adc
and
out
incl
es
inc
push
lods
mov
lock
mov
or
dec
imul
int
shrl
mov
fwait
xchg
pop
shr
mov
mov
pop
jbe
cmp
dec
or
pop
stos
rcrb
out
lcall
xor
sbb
loopne
js
and
xchg
push
sub
iret
and
test
jns
pop
dec
into
add
mov
xorb
popa
pop
sbbl
aas
dec
mov
cmp
inc
xchg
push
imul
test
push
dec
das
pop
push
stc
or
gs
xchg
sbb
lods
shl
dec
fcmovb
mov
jo
pop
sbb
mulb
dec
out
jne
test
enter
mov
jns
cmp
sbb
fsubs
push
das
testl
jno
mov
pop
rorw
sbb
sub
sbb
imul
imul
add
pop
mov
push
out
out
imul
sarl
rol
mov
aas
idivl
das
roll
test
addl
dec
pop
sti
shrl
clc
jg
sub
sbbb
sbb
jge
xor
lods
and
sbb
or
sbb
stos
push
inc
pop
jae
xorb
adc
shrw
mov
xor
sbb
sti
dec
mov
popa
push
clc
mov
pop
fcoml
in
loop
push
mov
pop
int
add
sbbb
stc
sti
jns
and
pop
add
out
sahf
cmp
leave
mov
mov
ret
push
jnp
out
sub
and
das
gs
cmp
inc
mov
adc
xchg
fdivs
cmp
clc
cmp
pop
jo
adc
push
pop
and
loop
jle
lods
dec
test
adc
jo
xchg
test
fdivr
sub
pop
mov
into
ret
or
int
repz
pop
ds
jl
fs
xor
fs
cs
jmp
push
and
es
sbb
adc
jp
sub
lret
cmp
jo
pop
ja
mov
flds
mov
inc
mov
adc
sub
pusha
mov
jp
pop
in
fcoml
je
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
mov
cmpsl
js
xor
pop
imull
negl
jge
mov
pop
mov
repnz
dec
stos
push
xor
lret
xor
xchg
sbb
test
inc
push
insb
cld
ljmp
xor
add
and
repnz
int3
sub
lahf
xor
or
dec
sbb
pop
xchg
ja
in
rcrl
mov
repnz
adc
mov
mov
mov
test
ds
xchg
xor
lea
mov
rcrb
jg
xchg
sub
adc
fwait
or
push
lods
dec
dec
sbb
mov
inc
cmp
mov
rorl
sbb
sahf
aad
push
dec
pop
movsb
cmpsb
push
and
push
mov
mov
insl
sbb
movsl
enter
shlb
jmp
pushf
arpl
pcmpgtd
xchg
nop
jo
cmp
fwait
out
push
xchg
inc
daa
and
xlat
daa
sub
mov
sbb
js
es
push
lret
pop
push
lock
int
pop
mov
out
push
sub
incl
push
mov
jb
pop
push
sub
lcall
sbb
arpl
fldcw
lret
repnz
xchg
mov
call
push
mov
xor
push
insl
dec
mov
pop
scas
sub
outsb
sbb
icebp
mov
adc
outsl
js
pop
inc
out
pop
jnp
arpl
mov
push
call
mov
xor
lea
adc
sub
repz
pop
testb
xchg
js
dec
in
repnz
xor
inc
push
cltd
add
fcomi
pop
lock
dec
mov
or
mov
pop
sbb
add
adc
rorb
cmp
aaa
jns
lock
decb
xchg
push
pushf
push
mov
push
and
rolb
shrl
push
jno
insb
cmp
lahf
jl
mov
sbb
dec
test
and
cmp
lds
dec
ljmp
ret
std
sbb
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
cmp
js
xor
mov
outsl
mov
xor
mov
mov
repz
xchg
enter
dec
imul
outsl
lret
mov
lahf
push
popa
in
ret
sti
mov
aaa
mov
outsb
pusha
mov
dec
cmpsl
sub
cld
shlb
xchg
bound
jge
jecxz
adc
cmp
insb
jecxz
lret
pushf
or
dec
ja
push
jecxz
call
jge
dec
xor
sbb
mov
out
mov
and
fdiv
xchg
mov
inc
mov
rorl
std
sub
xor
xlat
xlat
data16
pop
adc
xor
icebp
push
inc
xchg
repz
push
mov
int
loopne
lret
inc
sbb
into
ja
jp
fstl
cmpsl
push
push
pop
lock
call
push
ret
push
aaa
fsubr
out
lret
or
inc
mov
and
xor
pop
cmpsl
fcompl
jle
cmp
xor
aas
jo
jne
add
mov
aad
outsl
cmp
outsb
inc
cld
rcrb
push
push
xorb
inc
fidivrs
dec
outsl
test
xchg
inc
fwait
cmc
xor
cmp
cmp
push
int
jle
rcr
sub
icebp
sub
inc
lahf
subl
push
adc
jecxz
inc
mov
rorl
mov
push
andb
push
arpl
xchg
cmp
shlb
stos
fucomp
add
xorb
mov
mov
es
daa
mov
xor
stos
mov
push
jl
mov
sbb
cmp
rcrb
shl
lods
dec
jmp
icebp
or
sub
mov
adc
out
into
cmp
incb
movsl
jo
add
leave
lea
push
dec
mov
in
mov
cmp
sub
je
push
mov
loope
in
xchg
lret
lods
out
push
push
inc
cmc
in
dec
jb
bound
pusha
adc
xchg
xchg
aaa
pushf
loope
xor
gs
push
pop
mov
inc
movsl
out
mul
ret
pop
ja
movl
movl
andl
add
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
shll
js
xor
in
fdivl
stos
cs
sbb
or
jno
adc
mov
sbb
mov
pop
pop
and
jo
add
push
add
xchg
and
lret
pop
xor
clc
je
sbb
sbb
jmp
lret
inc
jl
iret
inc
jne
lock
xor
dec
fistl
push
test
aas
pop
pop
aam
gs
aam
mov
push
sub
mov
cmp
xlat
add
mov
xor
sti
movsb
mov
lock
popf
pushf
fcompl
xor
cmp
inc
dec
sahf
jns
fwait
ds
pop
aam
mov
push
shrl
andl
lods
jmp
push
adc
fsubr
ja
push
add
into
lods
xchg
xchg
dec
divps
mov
jne
xchg
jb
or
mov
das
dec
mul
pop
xchg
icebp
ficoms
stos
cmp
mov
mov
loop
js
add
pop
mov
sbb
adc
shrb
adc
stc
cmp
cli
mov
call
sub
cmpsb
frstor
lret
inc
out
sub
rcl
movsl
imul
repz
push
in
sbb
popf
sarb
xor
lock
jg
cwtl
inc
ret
dec
lret
push
ja
and
les
xor
loop
adcl
and
mov
adc
jbe
jle
popf
pusha
gs
push
mov
xor
adc
and
das
add
fidivrl
aam
xor
mov
mov
cmp
push
icebp
fs
imul
mov
sahf
test
cs
ljmp
arpl
pop
ja
and
or
mov
into
outsl
dec
lock
repnz
sbb
add
cmpsb
jno
adc
scas
testb
jb
sub
ds
lods
mov
xchg
sahf
daa
dec
fidivl
jae
shr
cmp
aaa
shrb
in
push
xchg
mov
cmp
add
movl
jne
and
jmp
int
into
aad
lea
xchg
jp
test
js
mov
adc
mov
pop
inc
addb
inc
clc
or
bound
mov
out
inc
ficoms
subb
outsb
mov
adc
ss
iret
cmp
jecxz
das
cmp
js
jg
pop
mov
jp
xor
pop
mov
jae
test
fnstcw
dec
aam
icebp
and
outsb
mov
inc
and
sahf
incb
pop
add
jg
imul
call
idivl
xchg
jp
out
xor
jbe
and
push
sti
push
sub
sti
cmpsb
mov
add
cmpsl
popf
roll
mov
cs
aam
test
pop
mov
mov
pop
push
es
popf
mov
leave
mov
xchg
pop
xchg
setns
add
jg
imul
enter
mov
fwait
or
rcrl
popf
neg
xchg
pop
lods
adc
fldenv
and
sbb
sub
xchg
pop
sbb
sub
pop
dec
lret
mov
fstps
ljmp
sbb
jl
xor
xor
jl,pn
jns
cmpsb
add
and
inc
xchg
filds
sahf
mov
lods
pop
lret
in
and
push
imul
mov
push
jmp
mov
pop
mov
push
divl
ss
sti
adc
sti
mov
jo
jmp
addr16
mov
mov
in
and
cltd
pop
cmp
mov
jns
lcall
cmp
lcall
push
xchg
cld
push
lcall
test
pop
into
lcall
stos
fcmovb
jle
loop
cmp
incb
movsb
hlt
adc
fs
leave
out
add
std
inc
scas
lods
dec
repz
pusha
sbb
into
dec
pushf
pop
cmpsl
sbb
adc
repz
or
and
dec
jp
mov
sti
sbbb
cs
test
cmp
cmp
subl
or
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
xchg
and
or
xor
cmp
or
adc
add
jno
jbe
add
sub
movsb
jg
cmp
or
rclb
cmpsb
shl
push
and
cmp
int
or
stos
inc
mov
es
ret
push
mov
test
iret
xchg
mov
int
mov
inc
clc
in
insl
addr16
xor
lods
inc
rol
aas
cmp
scas
iret
pop
jp
mov
push
add
adc
dec
cs
nop
mov
inc
cmp
movsb
dec
addr16
adc
sub
andl
mov
daa
rdmsr
sub
jle
jg
or
shll
mov
ror
nop
add
cmp
fs
sbb
adc
insb
cli
cltd
roll
mov
jg
pop
sbb
clc
mov
rcr
dec
loopne
cmp
int
add
push
leave
push
into
mov
adc
lahf
dec
adc
dec
pushf
inc
add
pop
sahf
lret
xchg
push
jp
xchg
cmpsb
scas
push
push
cs
mov
and
cli
cmpsb
mov
fistpl
sti
lods
out
aam
sbb
push
loope
ljmp
jae
rcr
dec
jg
out
repnz
xchg
aas
cmp
pop
ss
ljmp
bnd
out
dec
add
imul
lods
rol
or
mov
clc
aas
loop
lret
pop
mov
lret
rclb
cmc
sbb
std
idivl
add
test
loop
push
adc
aaa
rorl
fnstsw
push
and
loop
addr16
mov
test
jns
sub
loop
cmc
jns
popf
lcall
xor
sbbl
dec
sub
int
pop
sbb
xor
mov
mov
inc
out
inc
pop
xchg
mov
fistl
lret
adc
mov
push
ror
pop
pop
sar
cld
popa
adc
stc
lds
enter
add
orl
pop
leave
popa
push
cli
cwtl
jge
add
sbb
push
dec
fidivl
pop
or
pop
pop
pop
and
inc
or
add
add
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
cmp
js
jle
js
enter
add
xor
inc
mov
dec
dec
lea
cmpsl
dec
xchg
or
mov
sbb
push
clc
popf
push
dec
fwait
inc
cwtl
repnz
jbe
cmp
push
jb
les
ret
int3
mov
fcoms
or
xor
xor
mov
sbb
and
call
cmp
xor
aaa
inc
xchg
mov
hlt
xorl
fmull
repnz
fstpl
mov
mov
shrb
inc
push
jne
mov
mov
push
adc
jmp
nop
inc
filds
scas
ret
sarb
sbbl
mov
call
lret
fistpl
lods
adc
cld
mov
popf
ficompl
cmp
push
xchg
loop
cltd
repz
jno
cmpsl
mov
sub
cmp
sub
xlat
xchg
mov
ja
daa
xor
inc
repz
dec
sbb
pop
dec
push
scas
xchg
add
lret
cmp
test
sti
adc
jmp
adc
aaa
bound
sub
pop
sub
pop
data16
in
jbe
push
dec
and
frstor
push
jmp
inc
cmp
aas
sti
loope
add
add
dec
test
ljmp
sbb
daa
fs
outsb
xchg
dec
out
sbb
test
adc
out
and
lds
dec
dec
sub
pop
and
lock
cmp
pop
arpl
pop
add
ds
das
adc
repnz
dec
push
jmp
in
neg
add
fistpl
test
out
lret
aad
out
pop
sub
repz
pop
aam
or
ljmp
xor
cmpb
test
add
or
add
inc
test
decb
push
test
icebp
push
les
mov
sub
add
sbb
cmp
pushf
ror
test
jbe
mov
mov
or
jae
fsubrp
scas
inc
dec
xchg
mov
inc
cmp
fs
je
repz
mov
lods
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
add
pop
mov
js
fimuls
dec
stc
ret
xlat
xchg
xchg
xlat
adc
fldt
outsb
mov
rcl
sub
loope
cmp
mov
mov
and
pop
adc
dec
jmp
fildll
push
jno
fnstcw
js
fidivs
add
jp
xor
mov
addr16
sub
adc
int
arpl
call
fnstcw
cmp
adc
xor
sahf
jle
xchg
inc
sub
dec
add
stc
fbstp
popa
xchg
ss
leave
mov
inc
xchg
xchg
pop
test
sbb
popf
sbb
daa
out
imul
fcoml
mov
jge
leave
dec
icebp
push
out
and
cmc
imul
in
les
enter
dec
mov
insb
insb
iret
cmp
sbb
fdiv
and
bound
pop
mov
xchg
mov
cmc
jge
enter
aad
xchg
movsl
sahf
mov
out
call
cltd
xchg
jo
push
lds
aad
cmp
pop
push
inc
or
rol
and
pop
sbb
inc
and
mov
loopne
jno
push
leave
nop
imulb
cwtl
sahf
dec
cli
jo
inc
jmp
hlt
lock
dec
pop
jb
jbe
push
sub
sbbb
les
add
bound
jbe
sarb
adc
loop
call
psrld
lock
inc
push
dec
add
jge
das
loop
scas
in
xchg
add
int
jns
mov
xor
js
add
or
adc
lea
mov
sbb
dec
push
outsb
push
jnp
dec
jne
and
sub
enter
push
je
pop
cmp
mov
cmp
int
pop
lcall
mov
or
jns
cmpsl
jecxz
dec
jp
xor
mov
jge
inc
movsl
mov
adc
add
sbb
test
adc
mov
sub
mov
mov
daa
cmp
mov
jmp
push
lods
fwait
adc
fwait
mov
aas
fmulp
adc
sbb
jle
stos
inc
inc
xchg
cmp
dec
xor
add
push
jmp
xlat
lret
fcmovu
aas
cmp
push
cld
xchg
in
testl
js
sub
xor
xchg
add
sub
insl
dec
bound
xor
mov
mov
sbb
mov
stos
xor
shrl
jns
mov
test
shl
dec
push
sbb
mov
or
jb
cmp
dec
push
add
popf
xor
push
dec
leave
flds
neg
mov
sub
rcll
das
in
ret
pop
loopne
jmp
pop
jge
push
or
icebp
mov
mov
mull
mov
push
jl
repz
sti
addr16
ret
add
add
lods
inc
imul
jl
dec
dec
pop
test
xor
mov
xor
mov
cmp
inc
push
push
mov
movlps
ret
in
push
fisubrl
clc
aaa
in
add
bound
adc
jge
adc
dec
add
sbb
stos
dec
inc
and
enter
sbb
adc
bound
inc
push
mov
and
enter
push
inc
int3
jne
xchg
mov
mov
pop
adc
add
ljmp
lds
sub
iret
adc
fnstcw
add
sub
aaa
xchg
cmp
cmp
shlb
std
cmc
andps
add
jecxz
inc
rcl
ficoml
mov
pushf
xchg
lods
inc
fstps
fsts
repnz
pmulhuw
insb
inc
fistl
das
das
daa
aaa
bnd
pop
out
push
or
mov
dec
push
lcall
sub
ret
outsb
push
cmp
cmpsl
das
sub
lds
mov
ficoml
push
cmp
xchg
cmp
push
sub
xor
cltd
pop
push
pop
push
add
sbb
sbb
dec
js
dec
or
stos
mov
cmc
or
cld
adc
and
loope
std
test
insl
mov
xchg
cmp
push
jmp
add
ljmp
lods
add
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
rorl
js
xor
sbb
fdivl
mov
ret
or
jnp
into
push
divb
jb
and
jle
cltd
insl
jmp
or
mov
inc
fwait
sub
fistpll
push
push
adc
shlb
pop
and
push
adc
and
dec
push
imul
xchg
mov
sbb
popf
stc
int
pop
xor
bound
xor
movb
negb
pop
andl
mov
cmp
imul
jns
sarb
push
pusha
jl
mov
jle
dec
lahf
xor
mov
push
adc
mov
pop
int
lahf
sbb
xor
pop
cmp
call
adc
in
add
mov
lods
data16
in
or
fstpt
clc
pop
cli
je
push
in
out
test
outsb
das
sarb
xchg
jp
outsb
dec
add
or
roll
add
rorl
adc
fwait
adc
or
shrl
inc
jp
jno
stc
jb
mov
and
jecxz
mov
sub
jno
popf
sub
xchg
aad
mov
int3
fsubs
xchg
testl
or
dec
mov
lret
mov
fistps
cmp
call
and
sub
ljmp
insl
stos
in
ret
xchg
mov
stos
cli
or
jo
lods
inc
rolb
xchg
imul
hlt
loopne
adc
push
or
dec
test
popf
arpl
stos
cmc
aaa
xchg
outsb
nop
fisubs
mov
decb
into
stc
mov
ret
pusha
loopne
fdivrl
cmp
fldl
aaa
out
xchg
mov
inc
mov
adc
xchg
or
aam
inc
fidivrs
mov
pop
pop
inc
mov
xor
inc
add
fcompl
jle
insb
lahf
xchg
and
inc
and
popa
xlat
cmp
dec
outsb
pop
fadds
xor
inc
xor
mov
nop
cmp
and
rorl
subb
movb
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
dec
clc
inc
loop
mov
js
xor
fwait
adc
outsb
testb
xor
in
sbb
jae
stos
daa
pushf
call
xor
cltd
addb
outsb
out
or
mov
push
jno
scas
mov
sbb
and
push
jne,pn
loopne
cmpsb
shll
lea
outsb
mov
mov
ficoml
adc
cmpsb
int
loopne
loopne
fistl
mov
mov
mov
push
mov
xor
icebp
lds
xor
fidivrs
cwtl
cmpsl
incb
xchg
xchg
mov
fldl2e
sub
dec
cld
aaa
mulb
dec
lods
pop
stos
dec
stos
das
pop
gs
xor
mov
popf
xchg
mov
jecxz
adcl
xchg
adc
lea
in
lret
fiadds
outsb
fcoms
xchg
dec
xchg
popf
faddl
push
mov
or
cmp
fcmovb
out
sbb
out
in
xor
imul
cltd
ljmp
mov
std
hlt
inc
dec
mov
mov
fcoml
xor
dec
push
scas
fsub
jg,pt
mov
push
mov
push
gs
and
rorb
cli
mov
cmp
cmpsl
mov
dec
daa
ja
and
lods
sbb
dec
popa
mov
and
nop
jnp
mov
test
scas
dec
dec
cmc
fs
mov
or
sub
stc
and
repz
fs
add
ja
cltd
int
or
test
adc
adc
jns
scas
icebp
dec
and
sub
and
imul
ds
adc
mov
mov
dec
cld
test
jb
jno
mov
sahf
outsl
sti
dec
mov
ficompl
inc
mov
scas
mov
imul
mov
bound
adc
dec
insl
fisttpll
outsl
cmpb
test
cltd
sbb
test
xchg
insl
cli
clc
out
int
mov
jno
into
aas
out
outsb
lcall
mov
add
add
test
inc
or
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
iret
ss
hlt
mov
js
fs
xorb
push
inc
insl
pusha
lahf
jae
or
dec
push
jmp
sbb
mov
push
repnz
or
mov
adc
xlat
into
cmpsl
add
clc
add
pop
lea
cmpsl
xlat
xchg
ds
jbe
pushf
gs
push
cld
ret
and
ret
push
popa
stc
jp
rolb
js
das
sub
dec
xchg
call
scas
cmp
jge
mov
pop
stc
pop
fs
je
das
sub
insb
inc
cmpsb
sbb
dec
mov
and
addr16
and
loope
xor
loope
decl
repz
mov
cmp
mov
test
or
push
aad
mov
inc
aad
fs
nop
sbbl
hlt
mov
outsl
sbb
fisttpll
bound
xchg
nop
push
cld
xor
add
dec
jae
scas
xchg
out
lds
mov
fadds
mov
lret
les
and
fdiv
cld
stos
push
cmc
je
bound
jnp
rcrb
adc
insl
pop
loopne
add
call
int
fcmovnb
mov
rcll
cmp
in
xor
jecxz
jnp
loope
neg
jae
into
mov
gs
mov
repnz
mov
pop
mov
in
or
mov
push
mov
fwait
xlat
loop
dec
jmp
add
iret
dec
xlat
mov
aad
dec
sbb
jae
sbb
sub
and
jg
jne
shlb
dec
dec
push
cmpsl
jmp
or
fidivl
repz
lret
jno
fsubl
adc
ret
cli
mov
outsl
mov
popf
sbb
fcomps
sti
or
enter
push
lds
xlat
xchg
pop
jp
xchg
push
fstpt
sub
je
jmp
add
jp
loopne
cltd
cmp
inc
inc
lds
xor
testb
insb
xchg
jnp
pop
xor
pop
movsb
lret
jge
cmp
push
out
xor
xchg
leave
outsl
insl
push
jle
xor
idivl
dec
pusha
enter
pop
pop
ss
aaa
dec
xor
stos
jp
mov
aad
std
sub
xor
mov
jle
pop
addps
push
or
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
test
mov
js
sub
dec
adc
dec
dec
xor
sub
or
jns
jl
xchg
sub
add
sbb
xor
outsb
out
or
mov
mov
ret
sbb
int
pop
mov
xchg
push
mov
pop
lds
int3
jb
sub
cmp
rcrl
and
cs
jne
daa
es
jecxz
js
daa
test
aaa
push
dec
mov
cld
sbb
mov
paddd
push
jmp
clc
ret
int3
jno
or
pop
mov
jecxz
lret
icebp
int
popf
jnp
push
pop
push
out
mov
enter
imulb
sti
cwtl
add
and
sub
mov
fimull
dec
lret
aad
and
sub
dec
sub
xor
mov
mov
out
sub
loop
test
jmp
in
lods
cmpsb
aaa
loope
inc
daa
inc
aad
add
fmulp
mov
xchg
mov
icebp
and
fimull
mov
xchg
push
sti
jl
pop
ficompl
aad
mov
outsb
iret
sub
test
pop
outsl
mov
add
mov
in
cmp
xor
or
pop
xor
xchg
add
movsl
aas
mov
dec
lods
cmp
gs
cmp
in
mov
pushf
or
aaa
jb
int3
dec
inc
fisubrl
xchg
ljmp
fcmovbe
add
inc
sbb
jnp
hlt
imul
es
sbb
cmp
mov
xor
xor
mov
bound
jns
add
pop
movsl
pop
jg
fistps
push
fucomp
push
pop
fiadds
or
or
mov
xor
jae
cmp
and
stc
ss
fldenv
out
stc
sub
lret
bnd
pop
movsl
adc
sbb
add
int3
test
mov
test
int3
int3
fwait
mov
mov
into
cmp
lea
add
mov
and
push
cmp
stc
shrl
jmp
inc
pusha
jb
add
xchg
lahf
lock
push
cltd
add
jae
test
or
mov
xchg
cmp
fstps
sub
and
add
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
sar
outsb
into
mov
js
mov
pop
mov
pushf
test
cltd
sub
cld
fstl
out
dec
cmpsb
xchg
pop
adc
sbb
js
and
and
jae
cmp
lahf
sub
insb
jno
ja
mov
mov
pop
sub
sub
cmp
inc
push
in
pop
push
pusha
repnz
movsb
mov
movb
xor
sti
sbb
adc
jg
sahf
mov
xor
loop
mov
cld
fcomip
pop
xor
cmc
mov
call
loope
push
in
pusha
push
sbbb
xchg
shl
push
mov
cmp
mov
imul
aam
jnp
lea
mov
and
xchg
lock
outsb
mov
add
and
fwait
int3
cmc
stos
dec
int
add
repnz
mov
les
ret
lret
ret
and
and
enter
insb
push
vpacksswb
jnp
pop
iret
stc
imul
test
pop
fcoml
add
mov
ds
push
push
pop
push
aas
stc
or
out
xor
add
mov
xchg
outsl
pop
cmp
into
movsl
push
push
loopne
sti
lcall
mov
ficompl
mov
xchg
xchg
push
inc
lret
add
jae
push
adc
push
shll
das
outsb
jle
inc
imul
rclb
xor
inc
and
test
in
stos
inc
ret
repz
jns
pop
mov
lods
fdivl
lcall
ljmp
nop
gs
sbb
push
and
pop
fisttps
int3
inc
mov
stos
sbb
ret
outsb
scas
incl
dec
add
clc
jl
sbb
pop
mov
out
dec
mov
add
fsubl
lahf
pop
add
mov
sbb
cwtl
add
xorb
mov
repnz
test
movsb
push
mov
jbe
push
pushl
inc
push
xor
xor
pop
mov
mov
xor
mov
pop
test
mov
leave
aas
rorl
pop
arpl
mov
fiaddl
cmc
push
inc
pop
push
addb
inc
iret
push
push
xor
dec
loop
add
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
rcll
js
in
js
mov
xor
std
inc
or
into
pop
push
cltd
inc
or
dec
sbb
mov
out
jnp
enter
je
scas
push
stos
subb
or
sbb
xorl
dec
into
call
mov
xchg
fimuls
scas
cmc
sub
mov
jns
cltd
inc
xchg
pop
push
jae
mov
push
rcrl
aaa
push
mov
push
jns
jle
dec
out
fadds
out
jecxz
cli
mov
cmp
mov
jge
inc
cmp
bound
cmp
scas
xchg
mov
cltd
jl
lods
and
int3
sub
aam
into
pop
movsl
push
mov
mov
xor
inc
mov
aam
jle
pop
js
sbb
add
xchg
gs
mov
aad
ljmp
sahf
fsts
dec
cmp
mov
cmp
mov
pop
lahf
inc
push
daa
push
and
imulb
or
inc
ret
add
lea
jg
aad
jmp
rolb
jmp
or
in
out
push
das
xor
scas
push
ret
sti
outsb
decl
or
mov
sub
addb
and
dec
sbbb
lock
call
push
iret
and
pop
or
jae
sti
adc
dec
cwtl
in
loope
fistpl
add
xchg
cmpsb
xchg
cmp
sub
aam
adc
in
in
cmp
jg
mov
mov
test
mov
cmp
push
adc
sub
cmp
sub
inc
scas
data16
mov
dec
cmp
xor
mov
sbb
and
imul
push
sbb
ja
daa
daa
in
outsl
mov
mov
test
jmp
gs
jo
fcmovne
mov
lret
rclb
repnz
mov
cld
iret
cmpsl
sbb
call
mov
add
mov
mov
fistl
and
lahf
inc
filds
cmp
and
pop
aaa
dec
sbbl
inc
sar
enter
xor
cmpsb
xchg
pusha
shlb
ret
scas
shll
add
xor
negl
cmp
popf
sub
aam
mov
daa
xchg
push
jmp
out
add
cmp
movl
jmp
ret
ret
lret
test
adc
inc
js
in
js
adc
jo
ss
imul
cld
add
mov
mov
mov
das
out
xor
mov
add
jecxz
insb
xor
dec
mov
xchg
cmpl
pop
cwtl
out
dec
rcll
into
stc
out
add
stos
xchg
fldt
cmpsb
and
mov
pop
ljmp
sub
stc
pushf
lcall
ret
inc
dec
sbb
push
adc
cmpsb
jecxz
clc
stc
popa
dec
shrb
rolb
add
sbb
pop
xor
cmc
lods
adc
ss
jne
mov
xchg
arpl
iret
lret
adc
stos
shrb
jp
sub
xchg
xchg
aas
pushf
fs
idivl
mov
sbb
push
push
jl
aad
pusha
jle
fwait
mov
inc
pop
and
xor
push
lret
les
out
leave
repnz
add
sbb
das
dec
mov
push
jno
push
addl
jnp
icebp
push
mov
fwait
lock
mov
pop
cmp
xor
mov
xchg
jo
rcrl
nop
add
mov
and
push
xlat
clc
ret
pop
lods
sbb
mov
aad
movsl
fwait
mov
cmc
mov
jns
pop
mov
cmp
inc
hlt
add
adc
dec
lods
adc
jp
dec
stc
push
aas
sub
cs
cmovle
mov
cld
cwtl
xor
ja
outsb
pop
outsb
pop
mov
dec
xchg
int
mov
mov
in
push
lret
jg
push
xor
mov
pop
lods
cmc
xchg
sbbb
jae
mov
xor
sub
lods
sub
nop
stos
add
mov
ret
mov
fisubrl
mov
in
imul
fidivs
iret
dec
or
cmp
cmp
mov
outsl
cmp
cmc
mov
pop
jbe
iret
adc
jecxz
jno
sub
xchg
sub
aas
mov
pop
movsl
dec
adc
insl
imul
into
xchg
loope
mov
or
addr16
xor
lcall
scas
pop
hlt
cmpsl
mov
xchg
out
orb
in
loop
push
bound
mov
pop
push
loopne
pushf
add
out
test
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
mov
js
in
js
stos
jge
xor
lcall
and
lods
sbb
push
and
sbb
mov
add
mov
nop
bound
cmp
arpl
dec
mov
inc
pop
mov
xchg
jp
loopne
jnp
dec
mov
xor
push
xchg
xor
pushf
imul
push
sbb
add
pop
xchg
push
fwait
icebp
imul
push
addr16
lret
je
inc
cli
hlt
and
mov
dec
mov
sub
aaa
repz
and
rcrb
xor
jg
and
aam
push
inc
mov
sti
int
rolb
push
sbb
out
pop
insb
inc
outsl
arpl
inc
xchg
xor
rorl
stc
dec
mov
call
add
add
dec
fcom
dec
jnp
mov
pop
mov
mov
fistl
in
mov
out
pop
pushf
idivb
in
in
mov
sub
lea
cli
dec
cmp
mov
fs
movhps
fs
push
sti
lcall
jbe
jmp
test
clc
arpl
dec
scas
fsubp
jp
das
and
test
jb
int
scas
cltd
push
add
dec
dec
fdivs
out
jge
jecxz
into
pop
repnz
push
inc
mov
pop
clc
cmp
jne
jg
cltd
jecxz
sbb
mov
out
bound
ljmp
stc
xchg
out
sahf
mov
out
inc
sbb
daa
es
pusha
xchg
sub
add
loopne
subl
ds
lcall
sub
xchg
xchg
pop
pop
pop
js
jge
rol
not
cmpsl
in
pop
xchg
adc
adc
scas
mov
out
icebp
lahf
add
or
in
inc
xor
in
cmp
mov
dec
mov
push
push
adc
ja
pop
jmp
or
adc
pop
test
sbb
pop
xchg
loop
add
xchg
push
adc
pusha
pop
add
fidivrs
pop
daa
push
cmp
push
fimuls
sbb
lds
mov
shlb
xchg
push
dec
nop
jg
les
or
sbb
dec
mov
cld
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
cmp
js
in
js
aaa
faddp
clc
aaa
out
fdivrs
sbb
outsb
shl
push
cltd
cmpl
jb
int3
mov
call
pop
scas
aam
pop
push
lock
xchg
aad
repnz
mov
or
fmuls
mov
xchg
daa
pop
setg
aam
sti
pop
jp
adc
mov
xor
aad
jecxz
inc
out
imul
divb
fcompl
mov
fdiv
inc
mov
stos
cmp
adc
jp
mov
cmpsb
cmpl
lahf
pushf
pushf
and
and
ljmp
xchg
pop
loope
stos
mov
adc
xor
in
int
dec
push
xor
xor
into
xor
ss
stc
sub
jno
lods
adc
cs
jo
lret
jae
dec
aas
mov
cmp
sbb
pop
sub
or
fdivs
xor
push
xor
rorl
xchg
cmpsl
mov
jbe
scas
movsl
sbb
andb
mov
or
jmp
or
out
ret
mov
add
push
mov
sub
ljmp
cmpsb
lods
mov
xchg
repnz
das
lods
ss
cwtl
xchg
and
loop
jae
js
lods
movsb
scas
lods
pop
test
mov
dec
or
inc
sbb
sbb
mov
adc
xchg
bnd
loopne
test
mov
sub
xchg
ds
pusha
aaa
xor
in
add
and
adc
add
orb
pop
lret
mov
jl
aam
imul
rcrb
int3
inc
cltd
xchg
mov
cmc
into
or
jge
add
repz
inc
mov
movsb
mov
xchg
outsb
gs
enter
ja
out
mov
orl
and
dec
mov
mov
inc
xchg
pop
stos
xchg
popa
arpl
aas
stos
cmp
dec
ds
outsl
push
sahf
dec
je
push
shlb
lods
ret
rorl
mov
popa
sarb
lea
loope
int
dec
xor
cli
leave
push
cmp
sub
cmp
and
mov
dec
xlat
stc
inc
aad
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
fwait
mov
js
in
js
push
jle
mov
xchg
loop
mov
icebp
xchg
mov
jns
lods
aad
loop
notb
pop
mov
add
cli
int3
sbb
push
pop
cltd
mov
test
popf
xchg
add
sbb
dec
pop
jae
jns
popa
adc
mov
sub
pop
fisttpl
pusha
mov
lock
xcrypt-ctr
cmpsl
fisubs
jbe
pop
mov
out
sbb
bound
into
repz
inc
cmpsl
mov
jmp
dec
movsb
in
into
and
jge
jno
mov
pop
andl
les
and
lock
lock
push
fwait
sub
mov
in
fisubl
cmc
fcompl
xlat
movsl
popf
jns
loopew,pt
out
lret
jo
push
out
nop
pushf
loopw
cmp
and
push
fisttpll
mulb
fldl
fcmovnbe
dec
inc
aaa
sbb
andl
push
ret
mov
arpl
pop
imul
xchg
imul
test
mov
imul
xchg
sub
test
push
sbb
imul
enter
jb
mov
mov
xchg
mov
mov
rol
aaa
pop
fsincos
sbb
jle
cmpsl
pop
jge
push
push
out
stos
call
loop
mov
rcrb
inc
bound
das
int3
hlt
es
es
xchg
and
sub
xor
inc
and
bnd
xor
mov
outsb
sub
sbb
cmp
fbld
sub
testb
lds
pop
xor
insl
lret
mov
iret
mov
jecxz
add
jne
sub
push
jnp
dec
stos
push
pop
repnz
and
jbe
outsl
lret
jnp
adc
fcoms
ja
mov
aad
xchg
lods
mov
dec
or
into
cmp
dec
jp
pop
jne
adc
adc
mov
aad
mov
movsb
adc
adc
or
mov
mov
add
mov
mov
mov
or
out
lock
ljmp
jp
insl
lahf
sbb
cli
pushf
mov
sub
insl
subl
jmp
ret
int
into
xchg
jle
loopne
push
dec
dec
js
in
js
lds
ljmp
rcr
leave
movsb
into
hlt
movsl
pop
sub
lret
jle
inc
cs
adc
aam
addr16
dec
repz
jg
dec
jp
lock
push
or
dec
cmp
sbb
jo
or
jecxz
scas
shr
push
inc
pop
shrb
mov
andb
xchg
jne
fs
inc
inc
pop
or
popa
sbb
xchg
xchg
loopne
roll
sub
push
inc
adc
out
adc
testb
add
nop
enter
roll
xchg
jg
jno
cmc
cltd
pop
dec
ljmp
fidivrs
push
sub
and
nop
cmp
mov
cmp
lods
dec
cmp
addr16
iret
adc
cmp
jns
inc
dec
push
push
jle
xor
in
pop
lahf
pop
push
int
sbb
xor
pop
cmc
arpl
testl
push
cmpsl
fisubs
xor
in
in
shl
outsl
xchg
repz
mov
ret
push
sub
call
and
mov
out
aad
xchg
xor
movsb
cwtl
fdivrl
dec
xchg
cltd
pop
cmp
cmp
pop
lahf
mov
ret
mov
push
mov
mov
jl
mov
mov
push
mov
std
push
and
jbe
ljmp
pop
mov
adc
inc
aad
jg
cmp
push
aad
sbb
mov
jb
nop
out
or
pop
add
decl
sbb
or
mov
xchg
addr16
or
daa
sbb
cmc
mov
and
ds
add
mov
shll
xchg
shll
push
daa
sub
lea
xlat
jecxz
inc
ljmp
outsl
scas
mov
push
popa
inc
push
mov
outsb
jge
repnz
mov
dec
sub
add
fyl2x
adc
loop
jl
xor
sbb
sub
aam
scas
and
ja
and
and
fwait
mov
pop
sub
and
push
mov
adc
test
pop
cmpsl
in
jb
sbb
es
xchg
cmpsb
ror
clc
jae
sarl
mov
clc
pusha
cld
inc
sbb
loope
pop
loopne
imul
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
daa
bound
in
js
insl
mov
jecxz
sbb
mov
fcoml
in
dec
enter
mov
push
js
sahf
sahf
mov
mov
sub
insb
loope
outsb
inc
cld
jb
pushf
loopne
xor
adc
xlat
out
and
enter
sbb
in
call
push
cmp
loopne
push
negl
or
aas
das
lods
mov
repz
cwtl
adc
add
cwtl
out
aam
xlat
mov
scas
into
imul
icebp
mov
stc
cmpsl
add
stos
divl
sbb
cwtl
mov
xchg
lret
movsb
aaa
cmpsb
and
jbe
add
push
cmp
xor
or
jns
icebp
int3
shrl
xchg
int
jne
cmpb
push
push
mov
sbb
sar
imul
jno
and
jb
xchg
pushf
xchg
iret
adc
mov
dec
push
pop
jnp
pop
in
inc
fwait
int3
ljmp
gs
repnz
cmp
dec
pop
lods
push
mov
jae
xchg
xchg
lods
imul
inc
ret
cwtl
inc
jg
inc
outsl
xchg
sub
push
sub
mov
jne
jmp
sub
push
inc
inc
lods
xchg
ljmp
lahf
repnz
pop
lods
cmp
push
pop
stc
push
je
mov
data16
fmulp
push
mov
mov
pop
fs
sti
daa
jge
mov
xchg
int
out
repnz
push
out
inc
fiaddl
add
loopne
lcall
adc
jle
aad
testl
lcall
sbb
dec
popf
lret
sbb
je
jae
std
arpl
shlb
rcl
jle
mov
mov
icebp
iret
cmc
sub
sbb
addr16
inc
inc
mov
and
pop
into
hlt
xor
dec
xchg
or
imul
lods
or
jg
stos
das
pop
leave
mov
push
out
inc
pop
cwtl
cltd
pop
sbb
stos
repz
aam
clc
daa
mov
inc
mov
mov
data16
inc
out
and
data16
cmp
mov
push
push
sub
and
outsb
sub
out
les
or
int3
and
movb
out
sub
cmp
jmp
into
ror
fcmovnbe
fld
ud0
pop
or
xchg
xchg
cmpsb
push
js
in
js
mov
mov
dec
scas
jns
mov
sub
fwait
push
adc
dec
mov
into
jns
and
mov
mov
scas
jbe
lret
and
mov
cmp
mov
dec
popf
xlat
pop
into
push
sbb
imul
xor
loop
cmpsb
sub
lahf
and
dec
pop
sub
add
and
add
adc
inc
push
cmc
inc
imul
test
repz
int3
cmpsb
mov
ss
jl
insl
enter
sub
mov
cmpsl
inc
dec
popf
jae
push
xor
push
mov
fidivrs
mov
or
ret
pop
ljmp
sahf
and
mov
add
sbb
insb
jl
jno
into
push
push
or
mov
cmpsl
stos
dec
fmuls
and
enter
movsb
outsb
or
and
mov
add
mov
les
outsl
jb
test
in
pop
mov
jl
jge
repz
jg
pop
sbb
cmp
pop
int
inc
cmp
mov
sub
mov
mov
jge
data16
fldl
adc
xor
cld
push
arpl
popf
dec
popf
insb
fld
dec
movsb
xor
jnp
imul
outsb
stos
pushf
sub
cli
sub
popa
stos
idivl
mov
rolb
addr16
mov
aas
jle
cs
icebp
jnp
test
xchg
insb
ss
es
xor
dec
psubb
das
sub
cmp
xchg
cs
ror
push
test
cmp
nop
xor
adc
mov
popf
xor
jg
aad
jle
inc
push
shr
mov
and
jmp
dec
mov
fisttps
ret
add
jmp
in
loope
push
or
jmp
dec
and
lcall
mov
xchg
test
jne
xchg
inc
xchg
adc
notl
or
sti
sbb
mov
cmp
sbb
jo
lahf
mov
xor
dec
sbb
push
cmp
vpsubsb
mov
cmp
push
repnz
lret
ja
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
mull
fidivl
js
jle
js
push
xchg
cmp
jno
fwait
and
mov
arpl
outsb
int
loope
loopne
sub
jmp
leave
loopne
das
jecxz
roll
loop
jg
cwtl
xchg
ljmp
lret
test
mov
lcall
icebp
das
add
xchg
xorl
and
cltd
hlt
xor
jmp
pop
stc
pop
xor
leave
cld
add
push
js
inc
scas
mov
and
dec
incl
out
scas
mov
roll
xchg
and
lods
push
sbb
xchg
xchg
lahf
jnp
daa
sar
add
cmpsl
and
push
mov
js
dec
mov
ja
add
fsubs
shll
ss
sbb
addb
movsb
dec
fstpl
sbb
scas
nop
push
enter
cmpsl
in
shrb
jmp
jmp
test
stos
test
mov
xchg
mov
mov
inc
mov
out
jns
rcrb
push
pop
popa
es
jp
dec
lods
xchg
adc
fwait
mov
cmp
jle
sbb
adc
frndint
inc
xchg
sub
sbb
std
jmp
in
sbb
jmp
sbb
jbe
push
inc
cmp
jl
mov
jp
adc
cwtl
pusha
mov
pop
sarb
cwtl
adc
mov
loopne
mov
dec
fldcw
lods
adc
jp
push
sbb
adc
loope
mov
das
mov
pinsrw
popl
mov
cmpsl
loop
rcrl
pop
xchg
mov
fistpl
pushf
fnstcw
push
jmp
jmp
push
fidivrs
negl
push
into
ret
call
in
push
sbb
xor
xchg
repnz
lahf
lret
and
out
outsl
mov
std
je
das
cmpb
mov
popf
pop
fs
aad
clc
and
fisubrs
sub
push
xchg
int
leave
les
adc
jns
dec
mov
shll
insb
cltd
push
mov
insb
ja,pt
jmp
loope
push
shrl
rcrb
cltd
xchg
in
mov
loop
movsl
lods
repz
fwait
mov
inc
add
pop
je
cld
xchg
xchg
cmp
xchg
out
mov
pop
dec
push
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
fwait
adc
js
jle
js
jle
fistps
mov
push
lcall
add
push
popf
fdivs
test
ss
mov
push
enter
mov
or
pop
divl
aam
mov
xor
jae
mov
jb
hlt
fimuls
sub
xor
loop
or
xchg
lods
lret
scas
lods
mov
fisubs
xor
push
repz
xchg
adc
cmp
add
cmpsb
cld
cmpb
push
and
aas
movsl
inc
into
daa
sbb
add
mov
pop
push
in
pop
bound
jecxz
adc
add
js
add
xchg
sbb
pusha
inc
cmc
in
test
adc
pop
inc
jge
push
sahf
cmp
aad
inc
sub
stos
or
clc
pop
mov
mov
rorb
test
jg
cli
pop
stos
jp
outsl
mov
push
scas
pop
mov
js
push
lock
push
ja
jp
and
ljmp
jnp,pt
stos
jnp
ficoms
sub
xor
push
shr
xor
pop
adc
jo
xor
jb
cmp
mov
gs
push
mov
negl
les
add
sarb
orb
mov
cmpsl
add
mov
test
or
das
das
cmc
cmp
inc
jle
ljmp
fdivrp
pop
xchg
in
in
lahf
pop
xchg
out
xor
xor
xor
rcrl
aas
sub
fildl
xchg
mov
aaa
mov
sub
push
clc
in
mov
mov
arpl
dec
cmp
out
pop
jge
sar
out
lcall
ds
jl
fisttpll
aam
outsb
pop
xchg
ficompl
xor
jg
fbstp
or
or
cli
jecxz
and
and
inc
xorl
adc
enter
sub
mov
push
popf
jns
int3
mov
mov
fstpt
insb
xchg
dec
mov
aas
sbb
lea
inc
jnp
sbb
pop
fcoml
enter
add
jmp
int3
into
ror
rcl
into
jbe
inc
add
dec
gs
js
in
js
rorl
popw
fadds
push
ja
lcall
dec
push
mov
jg
jbe
cs
xchg
aad
es
aaa
jno
lcall
dec
dec
jmp
pop
push
fs
dec
rcr
jge
add
xchg
cmp
cli
add
cmpsl
ja
leave
or
push
cltd
adc
dec
mov
clc
xor
mov
hlt
and
and
out
lds
aad
lahf
push
ficomps
bound
push
sbbb
lret
mov
xchg
push
mov
adc
fxch
xchg
or
xchg
mov
addr16
test
xchg
loope
lret
xchg
lret
js
fcoml
dec
push
xorb
imul
ret
or
xor
negb
shll
or
out
and
stos
lds
and
jg
jecxz
sbb
shrl
sub
mov
lods
std
ja
xchg
cmp
dec
mov
or
lcall
mov
mov
cld
daa
lds
cmpl
pop
mov
cmp
mov
fidivrs
lea
int
ja
les
jecxz
xor
lahf
into
subb
outsb
jb
and
push
daa
fwait
jnp
sbb
fbstp
xchg
ret
lret
in
es
call
loope
cltd
out
rcrb
push
mov
cwtl
ret
inc
in
insb
sub
lret
scas
jae
fstps
mov
out
fwait
jo
jge
call
cmp
jbe
fiadds
rcr
ret
mov
sub
add
mov
sti
sub
push
scas
xchg
loope
mov
outsb
lds
fiadds
adc
es
mov
lods
outsb
xor
scas
pusha
fisttpll
xor
mov
adc
add
and
std
xchg
rcl
fcoml
jp
dec
pop
sbb
and
push
repnz
addr16
xor
inc
xor
int3
xor
bound
int3
int
dec
bound
add
in
orl
add
or
sbb
rol
push
add
imul
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
clc
into
ja
pop
js
in
js
aad
jp
popf
xor
inc
lret
xor
jne
icebp
mov
shlb
add
jmp
aam
jl
test
and
ret
lahf
sub
push
cs
xchg
xor
test
in
xchg
dec
insl
mov
fdivrl
mov
adcb
hlt
arpl
stc
jae
add
std
pop
call
int
aaa
shr
test
out
ss
sbb
sti
in
test
add
stos
or
enter
pop
adc
pop
pop
sub
stc
clc
mov
jne
test
outsl
gs
aaa
lock
jbe
mov
jbe
push
daa
or
aas
in
dec
push
stc
lods
cmc
sub
lahf
push
jnp
imul
inc
mov
popa
cmp
push
lods
loopne
data16
sbb
insl
sarl
xchg
test
fimuls
mov
and
push
movsl
out
xchg
outsl
adc
cmp
xchg
imul
mov
dec
adcl
and
testb
in
xchg
ljmp
cltd
mov
adc
loopne
pop
mov
push
push
cmpsl
push
das
rcr
or
sbb
push
xchg
outsl
add
out
jne
jg
loope
test
out
and
aaa
cs
in
stc
sub
push
icebp
stc
cmp
lods
cmpsl
cmpsb
inc
mov
shl
cwtl
lds
sbb
ret
jns
jnp
push
and
aam
notb
push
lods
fmul
sbb
and
or
js
iret
push
pop
sti
jmp
int3
aas
sbb
pop
mov
sbb
insl
stc
movsl
leave
ret
lock
mov
hlt
pop
ret
lahf
fmuls
mov
nop
push
push
add
jl
loop
adc
in
cltd
jp
sub
and
inc
idivl
mov
xor
test
cmpsb
leave
mov
cmp
pop
or
mov
jbe
add
jmp
shl
fisttps
test
ficomps
rol
inc
lds
pushf
fisubs
push
fdivs
shrb
fs
and
adc
xor
mov
test
push
push
dec
pop
ret
xor
cmp
adcb
mov
mov
mov
mov
sub
cmp
ja
jmp
rol
xor
or
js
in
js
or
push
fildl
dec
pop
jo
or
xor
mov
mov
movsl
and
xor
inc
dec
sbb
arpl
jne
cld
xor
cs
or
dec
push
mov
fsubrs
dec
scas
inc
xchg
inc
inc
sub
jg
rcl
dec
inc
push
das
mov
inc
addl
xchg
xor
dec
push
adc
sub
mov
or
movsl
es
insb
stc
stos
int3
add
out
or
outsb
push
cwtl
jne
or
mov
xchg
test
aad
xor
mov
js
mov
aad
or
movsb
push
hlt
xchg
jo
je
jb
mov
std
push
xlat
xchg
mov
push
call
loope
push
sub
imul
adc
or
and
lock
data16
out
leave
mov
inc
adc
adc
lds
pop
je
mov
shlb
in
cmp
mov
push
dec
jl
pop
fildll
hlt
push
mov
shlb
xorb
out
sub
add
inc
inc
insb
je
jg
mov
rcll
xor
lds
sbb
in
out
mov
les
or
icebp
daa
or
sub
add
sbb
cwtl
sbb
lock
and
inc
pop
xor
push
lods
cmp
cmp
add
mov
std
pop
mov
xchg
inc
and
adc
and
mov
or
push
pop
jecxz
ds
test
pop
adc
int3
outsb
fnstsw
rorl
jb
dec
mov
mov
mov
sbb
dec
jnp
inc
cmpsl
and
scas
mov
add
push
int
das
cmp
out
lods
pop
and
iret
or
push
daa
in
sub
mov
jbe
xchg
mov
xlat
fwait
push
jbe
pop
mov
fbld
in
lahf
imulb
xchg
nop
pushf
aam
mov
bnd
pop
mov
mov
sub
aaa
sbb
dec
sbb
or
das
pusha
lahf
js
push
inc
mov
sbb
int3
and
add
ret
into
stc
mov
xor
sub
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
xchg
dec
push
pushf
and
js
in
js
xchg
arpl
addl
or
or
cltd
aaa
adc
cmp
lds
xchg
aad
in
mov
mov
dec
mov
xor
push
push
leave
jg
or
xchg
iret
cmp
cmpsb
inc
iret
adc
jae
jnp
xchg
into
cmpsb
cwtl
aas
rorl
jbe
push
andl
dec
pop
scas
lret
lret
xchg
in
push
iret
out
mov
push
jo
cs
popa
inc
pusha
int
add
pop
jle
nop
lretw
lds
pop
es
hlt
dec
push
mov
pop
add
mov
xchg
sub
mov
aas
fucomip
shlb
lods
xlat
mov
adc
ret
inc
pop
mov
push
dec
rclb
sub
rcrb
xchg
jnp
out
lods
sti
test
test
push
dec
jp
dec
and
repnz
inc
pop
mov
mov
inc
mov
cld
test
inc
pop
andb
adc
or
xchg
pop
inc
pop
xor
ss
mov
fs
mov
rcrb
cli
sub
test
js
mov
mov
and
movsb
pop
cmp
daa
fsubrp
jae
sub
cmc
add
addr16
mov
sbb
pop
lods
xchg
jl
pop
movsb
adc
adc
pop
mov
sbb
stos
mov
push
push
js
xchg
and
mov
loope
lock
sbb
mov
sbb
movsb
or
rclb
mov
int3
divl
mov
xchg
jno
xchg
mov
adc
lret
cltd
scas
aaa
xor
stos
adc
and
movsl
mov
xchg
pop
xchg
cltd
inc
mov
xchg
ret
das
pop
hlt
cli
mov
jno
xlat
inc
pusha
jo
int3
inc
lret
cld
mov
mov
cmpxchg
inc
push
sbb
and
jnp
cmpsb
mov
cmpb
js
and
cmp
insb
mov
in
add
cmp
ja
test
inc
add
mov
cmp
jg
outsb
insl
jnp
mov
movsb
adcb
add
movsl
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
mov
js
in
js
hlt
int
push
jge
sub
addr16
push
cmp
das
jge
dec
repnz
arpl
add
jne
pop
xor
inc
js
or
in
fs
jl
mov
ljmp
out
neg
cmp
dec
lcall
mov
mov
addr16
cwtl
sbb
cltd
and
sbb
mov
push
faddl
xor
fcompl
or
movsl
insl
rcrb
nop
mov
lods
addr16
add
insb
push
loop
pop
cmp
pop
xchg
adc
imul
dec
sub
jp
gs
hlt
data16
iret
fisubrl
pop
subb
inc
sbb
cmp
push
mov
ljmp
push
shrl
cmp
mov
ss
adc
jecxz
sbbb
cmpsl
movsl
hlt
pop
insb
outsl
adc
adc
cmp
sub
daa
clc
jmp
dec
mov
cmpsl
adc
push
mov
mov
das
sti
add
cmpsl
sub
cwtl
in
les
lret
and
push
add
inc
push
inc
int3
mov
outsl
mov
lds
pop
es
cmc
inc
in
push
icebp
pop
pop
iret
pop
jge
sub
push
repnz
fnsave
inc
mov
sahf
stc
xor
cmp
jb
jo
jle
lret
xchg
subl
lret
inc
jns
int
aad
test
sub
inc
add
adc
cltd
out
stos
jge
jge
loop
dec
pop
stc
add
movsb
mov
xchg
inc
js
cmp
push
outsb
out
mov
xchg
loopne
and
and
aas
fs
add
jecxz
rclb
sub
adc
mov
adc
pushf
addb
movsl
fwait
ret
sbb
or
jbe
lcall
out
aaa
call
push
cmpsb
cmp
mov
pusha
rcll
mov
jl
jnp
js
lds
pop
cltd
into
pop
addr16
cmp
and
cmpsl
dec
movsb
cli
xchg
and
and
mov
inc
or
fldt
pop
rcll
mov
or
mov
xchg
mov
add
shrl
js
dec
pop
xor
and
icebp
mov
fnstenv
mov
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
inc
push
in
jle
js
in
js
or
sbb
lock
xchg
pop
shlb
pop
lods
cmp
cmpsb
int3
mov
or
fs
mov
inc
push
call
sbbb
pop
push
aam
dec
jae
insl
lret
movsb
add
jo
adc
sbb
or
test
enter
stc
insb
notb
andl
lretw
hlt
push
je
hlt
dec
stc
sbb
xor
fwait
cld
je
xor
imul
mov
js
push
mov
xor
adc
adc
scas
stos
das
gs
sbb
dec
rorl
das
mov
mov
loope
mov
mov
loop
cli
jmp
jmp
mov
pop
in
popf
cmp
pop
inc
sub
adc
lahf
jmp
fcmovu
add
stos
xor
arpl
ficoml
in
lods
push
in
or
push
int
cmc
push
aad
loop
cs
dec
aaa
outsl
scas
mov
and
dec
scas
aaa
out
imul
lock
xorb
jae
inc
dec
negl
and
jnp
add
mov
push
inc
cli
dec
das
fiadds
inc
cmp
lods
push
shl
or
lods
sahf
mov
jmp
push
test
adc
addr16
pop
inc
cmp
scas
popf
fs
loop
rolb
push
cmp
push
cld
sbb
repz
mov
or
insl
pop
repnz
xchg
out
sub
mov
xlat
sbb
or
icebp
cld
lret
mov
sub
mov
inc
xlat
ja
ss
loope
add
rcr
adc
fisubrl
addr16
add
out
cmp
sti
cmpsl
popa
cwtl
ja
ret
fbld
and
fsubrs
adc
ljmp
mov
lds
dec
pusha
fcomip
push
test
stos
push
sbb
dec
inc
in
cltd
xchg
xor
call
cltd
loop
repz
push
lcall
clc
int3
adc
adcl
scas
or
sbb
into
and
out
hlt
in
je
or
or
sti
loope
xor
cmp
in
pop
mov
pop
je
sub
adc
adc
pop
or
test
cltd
push
push
cmp
int
rorb
xor
cld
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
sbb
js
in
js
vsubsd
rorb
pop
jb
add
xorl
js
out
pop
sub
mov
add
pop
add
mov
pop
inc
push
rcr
fadds
in
pop
scas
xchg
arpl
mov
loope
mov
aam
or
xchg
aas
cli
sbb
scas
shrl
cltd
cmp
div
add
mov
je
outsb
inc
push
sub
push
std
xchg
mov
hlt
fistl
call
popa
cmp
stc
dec
iret
ljmp
pop
pop
sbb
xor
adc
jle
add
jmp
ljmp
push
and
outsl
mov
jle
sbbl
sub
repnz
lret
jg
adc
sahf
data16
xchg
push
stos
sub
mov
nop
popa
mov
xor
push
cs
ss
xchg
loope
mov
mov
repnz
les
das
repz
leave
sub
je
das
xor
xor
or
insb
out
fsubl
imul
sub
in
xlat
inc
insl
pop
shlb
jns
imul
xchg
xchg
bswap
push
lret
pop
xorb
test
cmp
aam
in
jmp
lret
pop
jg
pop
mov
cli
and
pop
jo
stc
sti
clc
aam
xor
cmpl
jle
les
mov
push
int
jmp
pop
popa
aad
xor
les
cmpb
imul
mov
fldcw
fdivrp
sub
cmp
pop
push
imul
in
jbe
dec
jns
push
repz
xor
ret
cmp
clc
pop
mov
aas
js
mov
pop
mov
rorl
xlat
push
addl
sbb
addr16
sbbb
insl
adc
fidivrs
pop
mov
sbb
sti
mov
mov
outsl
leave
ficoml
and
mov
push
into
jo
add
or
lock
push
fs
inc
gs
ja
xchg
into
lcall
incb
adc
pop
hlt
fists
mov
pop
xor
gs
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
jns
add
push
imul
ljmp
push
dec
push
mov
pushf
pushl
cwtl
loopne
jo
pop
pushl
push
or
mov
lock
mov
lret
jns
jmp
push
iret
mov
lcall
xchg
push
mov
jmp
cmp
xor
sbb
add
xchg
inc
pop
dec
out
movsl
bound
sbbb
arpl
ljmp
xor
bound
sub
xchg
push
fildl
inc
fisubrl
pop
dec
push
push
fsts
ljmp
adcb
ljmp
popf
sti
into
sbb
dec
cmp
repnz
and
push
test
jecxz
mov
sub
xchg
adc
popf
imul
rcll
push
je
insb
xor
sti
test
shlb
inc
adc
jnp
ret
stos
mov
aaa
xchg
or
call
xor
xchg
stos
pop
in
lds
xor
ss
dec
gs
xchg
xor
lcall
pop
mul
in
jno
push
add
mul
jbe
mov
das
push
sarb
in
fimull
mov
adc
mov
aaa
xor
inc
or
push
pop
out
xchg
mov
test
mov
jb
paddusw
mov
imul
shrl
mov
jbe
outsb
js
mov
rcrl
add
stc
stos
mov
sarb
in
inc
mov
fwait
pop
adc
subl
cld
mov
adc
sarb
cld
mov
shll
movsb
sbb
fwait
scas
in
inc
pop
add
cmp
or
fisttpll
xchg
pop
outsl
dec
mov
cmp
mov
in
add
mov
fidivl
cli
mov
lcall
inc
inc
push
mov
cmp
mov
xchg
outsl
lret
or
js
lock
js
or
sub
imul
stos
mov
add
mov
dec
ds
scas
subb
into
or
pushf
lcall
xor
les
aas
decb
fcomps
add
mov
outsl
xchg
add
add
ret
rol
fcmovnu
mov
mov
js
in
js
es
int
je
lret
jge
pop
ret
sbb
jnp
xchg
or
jg
adc
xor
mov
ljmp
pop
mov
jnp
loopne
sbb
add
add
test
pop
adc
mov
push
inc
jb
xchg
mov
add
or
movsb
int3
jbe
dec
into
in
fsub
and
cmp
push
adc
mov
lods
imul
mov
lock
push
sti
sub
xor
aas
mov
mov
pcmpgtd
dec
movsl
sti
dec
mov
jnp
popf
hlt
or
push
adc
pop
mov
jmp
sub
cmp
ret
test
aam
xor
sbb
iret
lcall
mov
mov
push
pop
jno
fwait
mov
mov
jp
repz
dec
cmp
test
xor
pop
vscatterdps
ret
mov
mov
inc
fldenv
jl
movsb
in
aam
cmp
push
xor
movsb
mov
fistpl
adc
enter
mov
push
and
jle
filds
xchg
jp
cmp
clc
fs
scas
aas
xchg
xchg
arpl
mov
arpl
shlb
rolb
test
and
lret
iret
jnp
fldl
adc
lds
arpl
and
test
xchg
in
jb
dec
xor
fcoms
mov
inc
mov
shrl
in
sbb
ret
pop
xchg
xchg
pop
clc
mov
lahf
sbb
cmpsb
aaa
dec
call
mov
lcall
repnz
mov
xchg
test
sbbb
cli
sbb
adc
pop
hlt
inc
mov
fsts
bound
jno
js
push
cmp
or
push
fcoms
gs
loop
mov
fucom
mov
mov
lods
arpl
sub
push
cmp
lahf
push
cmpsb
sbb
push
inc
pop
leave
xor
out
and
int
push
mov
test
daa
lcall
push
pop
sar
adcl
jb
dec
xchg
jle
movl
movl
jmp
int
ror
fcmove
leave
sub
lahf
cmp
pop
stos
insb
js
in
js
xchg
int3
mov
cmp
out
sbb
mov
push
inc
loop
push
movsl
aaa
mov
mov
xchg
sub
aas
pop
push
push
outsl
push
push
mov
mov
dec
sub
fwait
shr
cli
insb
lret
xchg
push
mov
adc
lods
mov
jno
push
arpl
jge
imul
rcr
out
xlat
outsl
loope
stc
sar
adc
pop
lds
stos
ret
sub
fwait
xlat
fidivrl
mov
cwtl
in
or
les
dec
outsl
sub
inc
in
cltd
pop
xchg
gs
sbb
outsl
pop
jge
gs
mov
inc
loopne
mov
lret
add
lods
aaa
push
push
fcoml
clc
inc
inc
loope
dec
adc
cmp
je
loopne
jge
int
adc
jo
push
fmuls
cmc
out
push
pop
push
rcrl
imul
xchg
mov
xchg
xchg
xchg
mov
and
shlb
sti
dec
movl
mov
mov
mov
mul
fstpl
sqrtps
arpl
and
test
adc
loopne
jns
pop
mov
inc
and
pop
adc
das
repz
scas
lds
call
jge
inc
push
sub
xchg
jb
insb
cmp
jno
mov
scas
push
daa
ret
mov
repz
jle
out
orl
and
or
lock
call
int
aas
cmp
and
pop
adc
insb
movsl
xor
cwtl
adc
push
outsb
stos
jns
pop
push
ficomps
call
push
decb
dec
movb
insl
fstl
jae
lds
push
adc
mov
mov
in
fisubl
cmp
pop
bound
cmp
or
or
leavew
out
sbb
mov
or
pop
aam
aad
xor
je
mov
cmp
pop
adc
inc
pop
mov
jae
mov
sbb
lods
dec
pop
es
mov
push
pop
vorpd
dec
xchg
dec
hlt
mov
add
jge
or
out
cmc
mov
mov
lea
loope
pusha
pushf
mov
mov
int
mov
rolb
shr
cwtl
sldt
mov
xor
add
jmp
ret
xlat
data16
int
xchg
pop
jno
js
jle
js
push
xchg
and
lret
sahf
lods
or
fsts
cli
sti
fidivl
push
inc
je
inc
mov
pop
cli
sub
mov
dec
adc
sti
insl
pusha
xchg
stos
jo
inc
pop
jb
pop
andl
test
mov
pop
add
aaa
add
cmpsl
fisttpl
ret
xchg
adc
fs
inc
jp
dec
xchg
sarb
add
mov
or
fdivs
out
lock
or
add
dec
test
mov
lret
xor
pop
mov
xchg
sbb
stos
mov
sub
rolb
dec
push
dec
xchg
adc
add
mov
aam
hlt
aad
icebp
cmc
lcall
fs
mov
cs
and
rol
cmc
xor
jbe
aam
jbe
int3
std
push
sub
sub
jle
add
dec
xor
mov
push
jae
add
jno
jg
daa
ss
stc
iret
mov
sbb
nop
xorl
cmpsb
inc
and
inc
insl
fdivl
insb
inc
pop
addr16
push
lock
popf
in
sbb
adc
xchg
aas
mov
cwtl
aaa
neg
out
add
add
popa
mov
pop
sub
test
adc
outsl
jg
cmp
daa
addr16
sub
xorl
jbe
cmp
shlb
inc
sahf
stos
dec
push
pop
out
sub
std
ljmp
bound
mov
in
cwtl
in
lret
mov
cwtl
mov
jb
fcmovu
mov
jecxz
add
movsl
mov
rclb
push
mov
pushl
loope
inc
add
push
mov
mov
add
dec
jb
lcall
xor
ficomps
pop
cmp
outsb
call
xor
push
mov
and
jbe
xor
gs
arpl
sub
pop
inc
pop
xchg
aad
add
adc
and
cld
push
lret
pop
dec
cld
and
fldl
push
jb
int3
faddp
inc
or
movsl
cld
addr16
or
pushl
sub
push
enter
mov
stos
lret
mov
jle
in
push
out
into
or
mov
or
fsubs
pop
jnp
cwtl
xchg
lods
jle
fbstp
ss
mov
jmp
int
xlat
enter
shll
std
xchg
mov
cld
ja
js
jle
js
mov
cld
add
xor
mov
mov
cmp
gs
js
push
push
stos
imul
pop
ret
aam
xchg
inc
adc
aaa
sbb
mov
jnp
cld
out
mov
dec
xchg
movsb
idivb
rcll
gs
clc
sub
cmp
pop
xchg
movsb
add
pop
paddq
xchg
xchg
push
outsb
adc
push
push
stc
xor
and
out
inc
dec
hlt
adc
cmp
int
sti
aad
jl
lods
mov
and
cltd
in
movsl
cli
push
push
dec
bound
push
sub
xchg
jns
sbb
sbb
pop
pop
test
pop
dec
clc
or
int
dec
add
pop
popf
and
ja
stos
jp
lods
xchg
pop
pavgw
stc
mov
cmpsb
call
das
outsb
and
or
sbb
or
xor
lahf
ja
jg
and
xor
sub
xor
adc
movsl
dec
dec
mov
mov
sbb
mov
push
jne
xchg
jo
cmp
movsb
sbb
pop
xor
test
fisttps
and
in
mov
add
stos
pusha
fwait
mov
sbb
adc
ljmp
js
pop
mov
in
ja
mov
aad
xor
icebp
push
aaa
mov
pop
jmp
cmpsl
mov
cmpsl
ss
add
insl
jge
cmp
nop
lcall
dec
leave
xchg
jo
pop
fxch
daa
xor
fs
push
xchg
push
mov
xchg
stos
push
xchg
mov
out
repz
push
test
sub
cmp
dec
fwait
inc
mov
je
pushf
jbe
je
jno
push
lea
bound
add
dec
repz
cs
or
repz
test
inc
cli
sub
and
ds
jmp
push
xor
das
xchg
inc
imul
nop
out
fsubs
dec
in
data16
inc
xchg
or
loop
mov
and
inc
push
jmp
pop
into
int3
mov
push
dec
mov
push
fsubl
jne
and
addr16
xlat
jge
mov
mov
mov
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
ljmp
in
js
push
lcall
lods
inc
mov
les
jb
loope
and
xchg
psubusb
daa
in
sub
repz
jnp
lds
fildll
dec
fs
inc
fidivrl
dec
mov
ds
xchg
popw
and
cmp
push
lcall
xor
gs
pop
test
push
sti
loop
scas
ror
dec
cmc
cmc
ss
lods
out
insl
mov
jo
pop
ljmp
push
iret
jno
mov
cmp
sub
push
insb
dec
adc
jmp
jae
or
adc
stc
lods
sbb
pop
jmp
stos
cli
scas
inc
into
scas
lret
mov
jns
dec
xchg
adc
add
adc
mull
jl
cmpl
mov
sti
or
movsb
mov
cmpsl
pop
mov
adc
pop
jb
decl
inc
add
dec
jle
jns
sbb
mov
mov
ss
mov
cmp
inc
adc
ljmp
scas
xchg
mov
icebp
sbb
pop
mov
xchg
jo
push
insl
adc
sbb
loop
and
xor
into
mov
fidivrl
adc
cmp
pop
xchg
fnsave
in
popa
push
aad
or
lods
imul
jl
decl
xchg
jg
adc
mov
ret
pop
add
fcomip
cmp
sbb
pop
stos
into
and
pop
es
dec
sbb
cmc
cmp
cmp
icebp
mov
call
or
inc
pop
sbb
lods
lods
scas
insb
cmpsb
fisttps
fcoml
jne
imull
pop
in
mov
mov
imul
pop
sub
jae
mov
mov
lock
lods
mov
cli
imul
xor
lcall
lods
scas
push
mov
sub
pop
pop
dec
sbb
repnz
jp
jecxz
stc
sbb
add
fldenv
lock
andl
rcrb
andb
gs
jb
shr
adc
insl
sub
cmpsb
std
sar
fsub
jl
or
repz
jp
and
stos
dec
rclb
lret
aas
pop
mov
xor
testl
pop
bound
hlt
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
xorps
std
jp
js
jle
js
outsl
pop
mov
in
call
inc
xor
dec
es
mov
jmp
aad
cmpsb
pop
jne
xchg
mov
jmp
sbb
cmpl
pop
aam
cmc
xor
xor
jmp
mov
pop
andl
out
sarl
movsl
pusha
jae
cmp
fidivs
sti
in
cwtl
sub
inc
lods
scas
xchg
xchg
repz
jbe
pop
push
xor
movsl
mov
cli
fistl
sub
adc
rcrl
pop
in
sbb
into
xor
leave
idivb
je
add
dec
or
mov
pop
jo
mov
inc
mov
mov
sbb
cmp
or
dec
xchg
test
outsl
imul
ret
bound
je
jae
cmp
inc
mov
sbb
add
mov
das
sar
or
lret
xor
inc
jns
lret
dec
into
mov
sub
and
pop
mov
dec
fsubl
ret
lods
std
rclb
insl
push
ja
cmp
loope
mov
push
mov
scas
mull
stos
fdiv
cmp
out
lcall
push
sbb
or
dec
pop
pop
mov
cmp
addr16
in
jo
ret
pusha
loope
xchg
imul
xlat
pop
jbe
rolb
sub
lahf
dec
jl
pop
fdiv
out
sub
sub
out
shrb
jbe
inc
jns
or
adc
cmp
and
mov
mov
adc
adc
hlt
pop
imul
xor
inc
loopne
add
gs
cmpb
jge
jecxz
sahf
daa
mov
inc
cmp
jne
jo
test
cmp
cmp
xchg
pop
mov
mov
push
sbb
xor
orb
xchg
sub
cld
jl
movsl
fstpt
push
mov
cmc
iret
xchg
imul
fsub
dec
mov
or
cmpsl
mov
fs
mov
xchg
pushf
add
lahf
addr16
xchg
pop
cmp
sub
lcall
cmp
bound
push
in
and
xlat
ret
aad
out
adc
jge
mov
mov
jmp
enter
cld
imul
inc
js
js
jle
js
popa
sarl
lret
ss
cmc
mov
ror
push
sbb
jb
pop
jne
sti
pushf
daa
cmp
in
icebp
out
mulb
imul
inc
orl
push
push
add
pop
in
dec
lds
aas
popa
test
enter
mov
ljmp
dec
adc
js
xchg
sub
jnp
add
push
and
sbb
and
lahf
or
repz
rorb
jge
lock
rcl
adc
rcrl
bound
mov
jo
popa
fcmovnbe
jno
stos
into
or
pop
mov
mov
sarl
mov
sti
xchg
push
pop
mov
xlat
sarl
data16
cltd
in
call
in
addr16
div
inc
adc
imul
cs
mov
sti
inc
mov
outsl
fstp
int
and
ljmp
mov
mov
out
mov
loop
cmp
inc
dec
lahf
ret
cmp
jae
das
or
jbe
mov
enter
fidivs
pop
ror
inc
jecxz
shll
pop
mov
mov
loope
inc
enter
js
sub
and
add
mov
testl
lret
adc
push
push
inc
stos
mov
jl
test
in
sub
mov
aaa
popl
or
and
mov
xchg
int3
pop
test
push
outsb
fwait
inc
nop
into
aam
cmpb
xor
jp
xor
add
jo
add
and
cmp
jmp
imul
mov
cmp
jle
mov
and
cltd
mov
cwtl
cld
mov
mov
sbb
stos
outsb
push
into
jo
mov
xchg
out
xorl
pop
mov
pop
and
sbb
fwait
lods
pop
aam
rolb
scas
inc
test
int3
dec
mov
test
push
push
int3
out
sbb
ficomps
mov
xor
sub
add
push
das
bound
hlt
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
fdivl
in
js
std
sbb
pop
sbb
rcrl
mov
lret
inc
jb
call
pop
xor
mov
cmp
jo
dec
mov
push
movsb
gs
push
push
cmp
sub
and
fstpt
iret
pop
imul
nop
push
xchg
adc
imul
cmp
jbe
dec
xorl
lds
cmp
cld
push
pop
mov
mov
fisubrl
adc
test
test
xchg
cmpsb
pop
arpl
ja
lods
dec
jle
gs
push
int3
jmp
stos
in
push
adc
push
lret
mov
and
pusha
dec
pop
out
iret
in
pop
jg
pop
cltd
call
adc
insl
int
push
xlat
and
adc
or
daa
jae
jbe
mov
inc
mov
sub
int
jns
es
fs
shr
iret
mov
inc
divl
or
test
mov
sbb
add
in
loope
dec
mov
sub
scas
mov
lret
jne
xor
scas
push
std
subl
jecxz
push
sbb
ss
ret
fwait
lods
aaa
sbb
and
mov
test
fadds
pop
sub
cld
addr16
fsts
repz
cmpb
push
jg
cmp
pop
stos
ljmp
stos
daa
pop
and
lcall
dec
dec
in
or
mov
dec
or
insl
in
sti
pop
lahf
pop
jbe
mov
pop
insl
jge
or
jge
or
lahf
pop
or
aam
test
cli
lahf
scas
mov
inc
cmp
sbbb
dec
mov
loope
sbb
ljmp
xchg
movsl
xchg
or
cmpsb
dec
inc
xor
sub
push
loop
cwtl
mov
mov
dec
das
push
xor
mov
jl
orl
decb
mov
pushf
or
inc
shll
ds
xor
add
mov
xchg
sahf
xor
mov
xchg
stos
fcmovnu
push
jecxz
mov
test
cmp
sahf
rcrl
push
repz
xlat
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
outsl
mov
js
jle
js
xchg
mov
and
push
xchg
sbb
mov
adc
cltd
inc
in
fcomps
insl
daa
popa
mov
sub
push
out
adc
rcl
in
sbb
les
dec
rorb
mov
ret
cld
sarb
hlt
adc
xlat
gs
mov
jmp
mov
in
mov
aam
fsubrl
gs
pop
push
fwait
adc
sub
pop
adc
ret
cmp
outsb
inc
inc
sbb
cmp
sub
pop
stc
xchg
scas
movsl
jecxz
mov
insb
cld
xchg
adc
lahf
xchg
sbb
mov
pop
mulb
xchg
lock
add
fidivrl
aas
addl
int3
mov
mov
adc
icebp
add
and
lock
je
xor
outsl
int
adc
loope
fcmovnb
pop
or
xchg
insb
testb
fcomi
mov
push
xor
shrb
mov
lcall
jl
fldl
scas
icebp
les
sub
fsubl
inc
ja
jecxz
xor
rolb
insl
add
jns
mov
aaa
jbe
or
lcall
cmp
mov
mov
xchg
pop
lock
inc
fadds
clc
adc
add
jecxz
fisttpll
aas
mov
loope
movsb
pop
sbb
xchg
loope
or
les
mov
test
out
push
je
icebp
xchg
xchg
repnz
outsl
pop
sbb
movsl
pop
xchg
fimuls
adc
cmp
or
mov
xchg
daa
mov
test
adc
xchg
pop
adc
cmpsl
dec
popf
movb
xchg
jge
adc
push
les
inc
add
cmp
test
mov
sbb
lock
cmpsl
lret
sbb
inc
imul
out
and
leave
pop
mov
mov
pop
bound
cmp
mov
mov
mov
fldt
das
fists
adc
clc
mov
out
fstpt
jb
sub
ljmp
cwtl
int
pop
mov
xchg
mov
or
mov
and
xchg
shrb
xlat
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
adcl
js
jle
js
mov
repnz
adc
sbb
mov
fcoml
lods
fnsetpm(287
mov
out
loopne
push
xchg
outsl
pop
mov
inc
cmp
sbb
lock
adc
lret
stos
adc
jno
pusha
mov
and
xchg
imul
mov
sahf
push
cld
gs
ja
outsb
mov
popf
fidivrl
loop
cmp
lods
sub
push
addr16
lret
xchg
call
divl
mov
test
ret
sbb
rclb
mov
sbb
dec
and
mov
fcomps
sahf
jge
sti
or
sbb
fcmove
pop
js
hlt
addr16
and
fadds
dec
sbb
cltd
adc
scas
add
pop
loope
mov
dec
outsl
mov
add
aas
dec
lahf
aad
inc
sub
call
das
mov
add
popa
fldenv
mov
sub
dec
mov
lea
and
mov
dec
stos
outsb
loopne
inc
test
mov
jne
jbe
mov
pushf
sub
mov
jno
pop
or
pop
dec
cltd
dec
sbb
fimuls
xchg
mov
stc
loopne
xchg
inc
sub
cmp
outsl
pop
andl
push
sub
mov
add
lret
mov
mov
test
cmc
xor
xor
push
xchg
lret
or
mov
inc
pop
dec
push
or
mov
je
sbb
jno
mov
jnp
repnz
sub
xor
xchg
repnz
add
movsb
jne
jge
fdivs
push
pop
lahf
and
fsubl
cmp
ja
mov
add
cld
mov
movsb
jecxz
in
shlb
pop
push
sub
sub
mov
cmp
lock
stc
into
mov
xchg
and
repz
mul
jo
mov
das
add
mov
arpl
lret
cmp
and
cmp
push
pop
sbb
add
push
aaa
aam
mov
scas
sti
mov
jmp
rol
leave
rcr
rcr
enter
ja
xchg
cmc
out
push
jg
in
js
xor
je
data16
ficoms
adc
mov
and
shlb
adc
cmp
hlt
cmp
dec
test
iret
call
icebp
mov
and
or
sbb
dec
insl
icebp
addl
jns
cmpsb
sub
inc
inc
sar
push
sbb
and
lds
jne
mov
mov
enter
jmp
lret
mov
and
inc
pushf
stc
ds
icebp
mov
adcl
mov
dec
adc
jo
lock
shrb
inc
lds
data16
testl
jp
cs
incb
sbb
sub
xchg
cli
out
mov
lret
sahf
mov
inc
pop
shll
xor
sub
mov
pusha
inc
es
jle
sbb
dec
ds
nop
xor
out
pop
push
push
pop
sub
xchg
je
jbe
clc
jnp
inc
dec
mov
out
lock
add
lods
pop
movsl
jb
pop
in
sub
xor
fnstsw
pop
je
pushl
leave
iret
icebp
mov
pusha
dec
dec
mov
outsl
inc
aas
loope
icebp
jge
push
push
fldl
ss
das
xor
xor
lret
push
out
push
aaa
je
popf
sub
into
imul
cmp
inc
sti
jmp
xor
leave
dec
push
sub
fstl
jnp
push
sbb
dec
or
xchg
lock
sbb
cmp
sbb
ljmp
es
xor
jbe
movsb
outsb
mov
push
mov
and
add
jno
loope
out
add
out
incl
inc
out
pop
pop
scas
mov
jp
dec
mov
push
es
xlat
stc
in
test
add
xchg
push
out
adc
imul
push
cmp
loopne
cltd
or
push
je
repz
mov
scas
jmp
pop
mull
sti
outsl
jbe
dec
xor
jp
push
pop
nop
adc
jge
pusha
div
fucom
jecxz
mulps
cmp
enter
mov
mov
dec
xchg
add
in
cwtl
jb
inc
pop
aas
mulps
out
pop
pop
test
sar
in
mov
loopne
cmp
jmp
les
int
aam
mov
sub
push
add
js
jle
js
daa
xchg
call
inc
dec
or
test
jg
int3
mov
pop
loope
lds
scas
pop
add
or
imul
shlb
fisubs
pop
or
sbb
pop
fcom
xor
stc
mov
fwait
icebp
xlat
adc
xchg
aam
repz
test
lret
outsl
les
sti
ja
sti
pusha
cmpsb
repnz
es
lock
pop
js
inc
test
mov
daa
loopne
pushf
cwtl
add
cmp
add
orb
popa
and
mov
shrl
sub
sbb
shlb
inc
pop
mov
pop
push
lods
lods
pusha
mov
or
jl
push
push
xchg
push
pop
cmpsl
fs
push
int3
outsl
dec
push
add
aam
sub
adc
jge
scas
fimull
inc
aam
mov
not
push
call
mov
mov
jb
sub
mov
call
and
pop
int
mov
repnz
dec
sarb
sti
aad
and
xchg
sbb
dec
inc
popa
aas
mov
in
rcrl
sbb
nop
sub
rcrb
rol
imul
cmc
pop
ss
pop
ret
lds
nop
and
lods
jb
mov
fsubs
lock
loop
add
adc
insl
mov
inc
out
mov
push
push
pop
adc
stc
adc
xor
mov
pop
add
stos
xchg
jbe
outsb
jns
sub
dec
and
out
xchg
repnz
popa
sub
leave
mov
pop
addl
push
xchg
mov
icebp
fdivr
iret
lcall
or
movsl
pusha
outsb
xchg
addb
bound
fldl
inc
sbb
jo
add
push
dec
mov
add
sarl
int3
dec
bound
scas
pop
repz
cld
mov
push
cli
loop
push
loopne
jne
push
pop
xor
pop
push
cs
xchg
push
dec
or
dec
mov
leave
xchg
push
xchg
imul
leave
cmpsl
aad
mov
cmp
popf
dec
scas
cmc
shll
repz
sub
adc
sahf
push
adc
mov
aam
insb
cmp
mov
test
sbb
adc
mov
push
fs
push
fdivrs
loope
lods
shr
cmpsb
cmpsl
iret
mov
lea
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
jecxz
or
in
js
xchg
jnp
mov
stos
inc
movsb
cli
mov
push
adc
mov
and
nop
bound
mov
pop
or
add
mov
fs
shl
jle
dec
shlb
or
mov
jne
mov
inc
sbb
and
mov
dec
enter
inc
je
pop
xor
xchg
call
and
scas
sahf
in
push
ds
ja
push
sub
divl
xor
add
dec
sub
push
add
in
add
or
push
stc
shll
loop
mov
xor
stc
je
push
pop
std
imul
and
adc
inc
das
repz
mov
inc
xlat
mov
out
jl
and
inc
jnp
pop
fiadds
movntq
mov
adc
imul
adc
push
jne
pop
jg
enter
pop
aaa
pop
push
mov
cmp
fcoms
popf
test
shll
mov
lock
loope
dec
testb
and
cmpsl
xchg
pusha
mov
xchg
ljmp
jne
sar
ljmp
aaa
jmp
mov
mov
adc
mov
xchg
roll
pushl
adc
decl
inc
xchg
outsb
mov
mov
fadds
inc
mov
lahf
cmp
jnp
mov
std
out
inc
mov
mov
mov
fcomp
mov
xor
jnp
mov
mov
pusha
mov
mov
adc
lcall
jae
xor
push
cmp
iret
jae
mov
xor
outsl
lret
jae
push
fistps
mov
das
or
insb
xchg
push
rolb
dec
jae
mov
jge
pop
test
jb
mov
adc
test
stos
imul
dec
fidivrl
lahf
rcrb
xor
fwait
lcall
jne
jbe
sbb
jecxz
sub
fcomps
mov
xchg
out
rcll
nop
arpl
sub
mov
xor
jp
fbld
jge
jmp
lret
ret
vpand
ret
add
test
scas
movq
jle
js
rcl
push
push
xor
hlt
imul
or
insb
inc
sub
mov
and
ret
xor
dec
jb
xor
mov
jge
xchg
in
pop
jo
scas
mov
add
shlb
adc
xlat
add
xor
fstl
cmc
xor
fstpt
nop
jle
pop
int
sbb
in
test
ret
sub
mov
mov
outsb
or
mov
notl
or
stos
pop
mov
fnstenv
and
xchg
dec
ret
mov
sub
push
sub
cmp
sub
adc
fnstenv
shll
aas
dec
push
lret
mov
ds
paddw
cmp
data16
out
adc
mov
jg
mov
bound
pop
or
into
xchg
sub
xchg
cmp
xor
aam
sub
or
add
les
or
or
lods
add
xchg
xor
xor
bound
mov
jecxz
jge
fbld
outsl
imul
adc
clc
add
xor
pop
out
mov
cli
hlt
inc
push
insl
adc
xchg
das
jge
andl
inc
push
mov
pop
push
and
cmpsb
in
jg
outsb
fwait
pop
xor
std
ret
mov
mov
jp
out
mov
push
mov
pusha
sub
out
pop
jle
mov
mov
jae
iret
xor
jge
pop
xchg
fsubr
mov
call
xchg
dec
popa
inc
imul
mov
or
test
ror
movsl
jl
jmp
xlat
stc
dec
push
arpl
xchg
mov
or
pmaxub
cli
loop
push
in
in
sbb
shrd
clc
mov
pushf
sbb
insl
mov
jg
sbb
add
in
mov
add
mov
adc
jo
gs
pushf
mov
sbb
mov
mov
jne
out
lea
mov
das
adc
xchg
imul
xor
pushl
repz
lret
mov
jns
xorb
in
cld
push
dec
cmp
adc
test
xchg
dec
inc
or
cmc
movsb
test
dec
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
fcoms
in
js
jp
data16
repz
lds
into
fsubrs
xchg
mov
dec
push
rorl
cmpsl
and
mov
xor
add
dec
jae
ja
hlt
mov
ds
das
mov
mov
mov
push
movsl
cs
ds
and
test
push
lds
stos
hlt
stos
push
sbb
enter
imul
mov
shlb
and
shlb
and
sbb
test
icebp
push
xor
inc
push
or
in
or
adc
push
fiaddl
jns
jmp
lods
dec
aaa
push
mov
cmpsb
pop
mov
lret
add
and
mov
das
cltd
sub
dec
test
mul
xchg
push
stos
mov
add
in
out
lock
xchg
int
push
jl
or
test
adc
ja
mov
hlt
fcompl
dec
scas
mov
mov
dec
mov
push
pop
jae
mov
loop
lcall
push
jge
push
faddl
add
sub
leave
or
or
mov
mov
out
ss
dec
dec
jg
jp
cmp
add
mov
das
daa
lods
dec
addr16
xchg
mov
ljmp
nop
scas
ret
mov
in
fsubrl
outsl
nop
in
aaa
enter
lret
or
dec
add
add
or
test
or
and
adc
xchg
enter
or
pop
lds
mov
nop
fnsave
lcall
or
out
mov
dec
pop
push
loope
out
jne
or
mov
mov
insb
repnz
popf
or
add
out
loop
lret
cmp
movsb
movl
mov
jecxz
push
fsubl
pop
cmp
jae
loope
cmp
in
jno
subl
push
outsl
adc
or
pushf
add
pop
mov
mov
fildl
dec
data16
outsb
nop
std
loop
cld
dec
and
add
add
cmp
movzwl
imul
mov
mov
and
ficoml
adc
movsl
mov
push
leave
loop
rolb
rorl
scas
sarl
xlat
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
push
dec
jb
adcb
js
jle
js
cmpsb
cmp
neg
jp
mov
sbb
sbb
mov
and
pusha
add
mov
or
dec
mov
cs
dec
push
lahf
pop
mov
lret
push
shrl
int3
jge
push
pusha
xchg
stc
ret
lret
xchg
lcall
notb
arpl
aas
push
jae
leave
mov
mov
mov
out
dec
scas
ljmp
cmp
mov
cmpsb
cmp
xor
pop
jle
gs
xor
add
aaa
pop
lock
cmp
pushf
xorl
xor
repz
mov
adc
popf
jnp
mov
scas
scas
das
sahf
add
mov
rcrb
lret
fcmovne
push
imul
negl
popf
aaa
cltd
mov
adc
mov
jno
pushf
and
pusha
xchg
push
lods
xchg
mov
push
xchg
jmp
jle
cmp
pushf
stos
adc
scas
dec
stc
mov
inc
inc
sarl
jg
dec
mov
out
rol
js
xlat
push
fcomps
sarb
stos
add
leave
cmp
mov
imul
mov
sti
outsb
push
add
xchg
test
repnz
aas
mov
repnz
adc
nop
or
je
jge
enter
pop
fadds
xchg
mov
and
cmp
shl
mov
jecxz
add
adc
loop
mov
xorl
fsubr
loope
cmc
xchg
inc
lods
jno
mov
inc
pushf
ds
mov
ret
adc
and
mov
arpl
add
and
in
pop
aaa
xor
hlt
popf
dec
cmp
mov
inc
fs
arpl
leave
roll
and
add
cmp
jecxz
adc
clc
lahf
and
add
jl
addb
fisubrs
xchg
xchg
cltd
imul
outsl
fnstcw
or
cmp
mov
andb
cmp
pop
mov
insl
js
shlb
pop
fmuls
dec
enter
and
inc
sbb
add
push
mov
movsl
jge
push
or
bnd
lods
mov
sbb
mov
fldl2t
jbe
pop
pop
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
pop
push
mov
insl
adc
xchg
jle
js
xchg
pop
addl
mov
dec
js
mov
inc
mov
adc
and
jmp
xor
les
xchg
ljmp
inc
xor
sub
add
xchg
frstor
aad
nop
cmp
stos
out
cld
push
mov
xchg
sti
leave
jae
sub
and
in
in
insb
inc
sbb
xor
jo
sub
ret
xor
rcrb
out
inc
cmp
mov
lds
lcall
call
sub
add
arpl
and
ror
push
cmp
mov
addr16
outsb
add
shll
cmp
adc
or
aam
push
and
lcall
mov
add
jne
in
scas
call
test
popa
daa
jp
adc
xchg
pop
test
xor
cmp
cltd
jb,pn
lret
lahf
lret
cmp
sti
out
xor
lret
clc
lcall
js
scas
jns
adc
mov
mov
push
sub
add
add
shl
pusha
leave
cmpsb
mov
mov
mov
fldcw
add
scas
cmp
sbb
add
xor
mov
call
mov
cmpb
dec
int
fmull
sbb
or
fnstenv
push
sbb
lds
mov
call
pusha
call
push
jle
mov
pop
cltd
and
add
fstp
xor
cmp
or
pop
ss
fsts
dec
mov
sbb
sub
loopne
loop
mov
push
lods
mov
subl
push
and
in
and
outsl
add
pop
flds
inc
sbb
or
add
into
push
aas
jg
pop
sub
push
mov
xchg
in
lret
cmpsb
repz
xchg
mov
jo
icebp
out
movsb
fsts
fnstcw
and
in
add
inc
icebp
cmp
cmp
shr
popa
sbb
in
add
xor
xchg
rol
dec
jo
imul
xchg
add
cli
bound
inc
test
scas
jo
int
dec
shr
sub
mov
cmp
lock
cltd
push
cmpsl
scas
pushf
mov
imul
push
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
dec
push
adc
mov
js
sub
imul
lahf
ret
inc
sbb
ja
shll
lahf
mov
nop
and
fwait
or
mov
cmp
jg
insl
outsl
xor
test
xor
mov
fwait
pop
dec
stos
dec
lret
dec
je
stos
stc
pop
jmp
cmp
push
lahf
mov
outsl
and
mov
push
xorb
inc
add
in
add
xor
fcmovnbe
jbe
or
mov
test
jae
and
add
adc
jnp
jbe
xchg
mov
das
adc
mov
cmp
pop
pop
cmp
out
sarl
out
or
lahf
add
filds
jp
xchg
pop
mov
xchg
push
int3
push
fisttpll
xor
mov
jp
mov
push
or
rorl
sbb
arpl
inc
mov
push
cmp
and
jno
dec
bound
push
shr
dec
sbb
pop
add
pop
sub
pop
xchg
and
cmp
out
mov
ret
pusha
ja
mov
shll
mov
fimull
pop
inc
jns
out
das
add
push
iret
cmp
sti
shl
mov
pop
data16
inc
add
inc
xor
stc
fnstenv
inc
push
out
inc
test
lods
mov
xor
lods
pop
and
imul
and
xchg
inc
mov
daa
push
and
sahf
dec
rol
jne
add
xchg
cmp
add
movsl
jge
mov
leave
arpl
push
lret
jne
stos
stos
adc
jb
xchg
icebp
push
cmp
cli
out
int3
lret
xlat
xchg
fwait
add
sbb
cmp
xchg
or
in
in
sub
test
aam
or
add
outsl
adc
test
fsincos
into
cmc
popf
mov
xchg
push
icebp
push
movsb
mov
xchg
rcrb
enter
adc
call
pushf
fisttps
or
jo
xchg
push
jmp
sub
mov
add
fs
add
fwait
and
xor
js
jno
mov
xor
fwait
ljmp
shlb
jbe
fwait
jmp
shll
test
jno
push
xchg
fstpl
jbe
js
inc
ds
jl
add
push
clc
ljmp
jge
inc
add
ficomps
inc
clc
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
mull
shll
sbb
xchg
jle
js
aad
adc
mov
paddd
mov
fidivrs
add
adc
je
mov
fdivrs
sbb
mov
cltd
sbb
aas
adcl
lcall
sub
pop
push
and
ret
jmpw
fisttpl
rcl
cmpsl
scas
notb
fcmove
rclb
cmp
sub
xchg
jns
jmp
sti
sub
xlat
fnstenv
icebp
fs
and
mov
cmp
sbbl
xor
lds
ljmp
cmp
push
inc
pop
out
mov
jno
xor
std
rcll
fbstp
inc
mov
rorl
xor
orb
xchg
in
jb
shll
pusha
mov
adc
je
jo
mov
mov
add
push
scas
in
mov
push
and
jb
cwtl
lcall
stc
push
pop
sub
sub
cmp
fnstenv
pop
inc
mov
roll
rorb
insl
jne
mov
xchg
in
ficoms
adc
jne
aas
loop
cmp
cmp
mov
mov
test
cmp
cmp
pusha
jae
sbb
jle
and
stc
sti
push
add
insb
bound
ja
into
push
fisttps
and
or
ret
stos
mov
rorl
stos
xchg
ret
test
jb
cld
xchg
mov
sbb
jne
sbb
std
mov
sbb
or
cli
icebp
push
incb
out
inc
jb
inc
jl
ja
call
pop
loopne
and
enter
mov
int
stos
in
mov
out
fsubr
adc
pop
jo
add
ja
outsl
and
xor
mov
sti
loop
pop
sbb
jle
jl
lods
push
ja
fidivl
sbbl
sbb
dec
xchg
pop
jb
xor
scas
loopne
xlat
ret
je
imul
mov
test
cmpsl
ret
or
xchg
in
xchg
mov
fstpt
je
and
mov
sbb
fdivrs
fs
inc
mov
sub
push
jns
dec
sbb
jg
push
push
and
js
lods
and
mov
pop
and
adc
daa
pop
adc
data16
cld
push
mov
cmp
lods
test
add
add
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
add
js
mov
push
icebp
imul
clc
jns
stc
incb
mov
insl
sub
mov
outsl
inc
addr16
fistpll
pop
pop
xchg
int
xchg
not
pop
shrb
adc
gs
mov
jmp
fidivrs
mov
mov
cmp
cltd
imul
xchg
mov
adc
lea
jae
dec
stos
std
das
ljmp
insl
mov
ret
xchg
or
lods
cmpsl
dec
sub
xor
pop
push
rorl
call
mov
mov
loopne
dec
ret
andb
push
rolb
or
sbb
and
mov
cmpsb
mov
mov
in
adc
mov
mov
popf
mov
adc
imul
notl
push
sbb
lcall
push
xor
imul
daa
fmuls
mov
jp
test
cmpsb
mov
pop
inc
rolb
jl
xor
xchg
mov
inc
xchg
xlat
sbb
xchg
lds
add
test
adc
fmull
movl
mov
les
jle
inc
test
mov
lea
pop
mov
int
ret
cmc
jno
jmp
jg
mov
insb
lods
pop
enter
or
insb
xor
rcl
and
lret
cmp
adc
bound
and
adcb
adc
mulb
jg
insb
dec
stc
fidivs
cltd
leave
lcall
cmp
jecxz
cmpsl
imul
pop
xchg
sti
push
pop
xchg
pop
stc
iret
sub
mov
stc
mov
lods
jp
xchg
jl
lds
cmp
cmp
lret
xor
and
fwait
pop
and
jle
mov
mov
push
adc
and
jnp
jl
sub
xchg
insl
movsb
or
jmp
cs
iret
add
fldenv
dec
in
fwait
jo
push
ds
test
ja
sub
rcrl
loop
cmp
in
xor
fwait
ss
sbb
imul
add
mov
aas
sbb
inc
shll
cmpsb
ljmp
int3
or
jnp
inc
dec
dec
outsl
idivl
dec
or
iret
pop
mov
cmp
fxch
je
call
mov
mov
jmp
ret
int3
int3
aad
leave
roll
movsl
or
fstps
js
mov
or
push
dec
loope
movsb
inc
inc
cmp
xor
adc
inc
loopne
xor
in
or
jns
sub
mov
subb
mov
adc
flds
or
out
inc
into
clc
jge
mov
ror
pop
xor
mov
imulb
mov
push
inc
in
out
out
cmpsb
add
push
or
les
jne
adc
loope
fisttps
jl
inc
outsl
ja
xchg
jle
xchg
fisubrs
mov
out
or
fisttpl
mov
movsb
mov
cmp
std
or
inc
push
sub
pop
leave
aam
and
ret
pop
mov
out
push
dec
push
sub
cmp
test
pop
add
mov
sbb
mov
cmp
sub
fiadds
loope
lcall
pop
sahf
imul
iret
mov
dec
test
imul
or
test
nop
cld
xchg
adc
sbb
adc
sbb
push
mov
xchg
adc
cmc
jbe
loop
gs
mov
push
xchg
sti
dec
mov
sahf
es
rcrl
gs
rclb
push
mov
psubb
pop
jl
mov
xlat
cmp
jl
mov
push
aad
push
jl
push
jmp
cmp
es
popa
cli
sub
movl
lds
cwtl
add
outsb
adc
icebp
inc
daa
xor
adc
fisubrs
mov
dec
lret
adc
daa
add
test
fistpll
dec
push
push
xchg
addr16
pop
jmp
mov
jmp
adc
out
add
test
push
and
mov
mov
mov
call
movsb
adc
in
and
cmp
aam
mul
sbbb
sub
fstpl
pop
fimull
jb
les
and
cli
push
mov
inc
ja
mov
cwtl
pop
imul
xchg
mov
dec
ficomps
push
sub
int
push
in
test
pop
add
lcall
mov
xor
xchg
repnz
in
or
jmp
aad
pop
cmp
inc
xor
insb
push
mov
lcall
xchg
pop
mov
mov
jmp
jmp
ds
int3
lret
xchg
aam
and
and
xchg
jle
js
or
xchg
test
or
push
xchg
inc
push
mov
imul
jbe
or
pop
ret
adc
or
inc
xor
xchg
loop
dec
sub
enter
icebp
inc
and
fdivr
and
lret
xor
outsl
repz
adc
and
cmp
movsb
mov
loopne
in
push
int
xchg
fisubrl
push
dec
out
inc
test
pop
mov
mov
adc
mov
aad
out
fwait
add
cmpl
arpl
inc
mov
fisubs
scas
pusha
sbb
jbe
inc
cmp
xchg
in
jne
sub
dec
push
push
jg
adc
dec
repnz
push
mov
outsb
fidivrl
test
xchg
adc
sub
ja
rcrb
cmp
test
inc
lcall
xchg
xor
inc
cmovnp
sbb
add
out
repnz
test
imul
sub
int3
lods
sbb
fidivs
insb
jmp
int3
es
mov
pop
repz
test
add
sahf
mov
mov
cld
or
ss
aas
sub
icebp
pop
mov
xchg
jl
out
add
xor
add
mov
cmp
xchg
fwait
adc
inc
cmp
push
aas
pop
and
aam
sbb
test
jp
mov
cmpsl
adc
stos
testl
mov
cmp
jp
call
sub
jp
add
jg
sbb
int3
cmpsl
stc
adc
inc
repz
stos
fs
pop
pop
xchg
and
into
imul
push
jno
or
fnop
shl
push
mov
jne
push
pushf
sarb
adc
movsb
jbe
push
sub
shlb
jmp
inc
outsb
ljmp
sub
mov
mov
cld
lret
rolb
popf
lea
sub
loope
roll
scas
lock
mov
pop
add
aaa
pop
push
aas
mov
jne
cmp
pop
mov
mov
adc
pop
movsl
adc
jne
iret
jp
mov
nop
mov
mov
rolb
sub
add
xchg
sbb
insl
outsl
shl
inc
add
scas
out
push
sarl
pop
test
xor
and
mov
pop
jle
mov
inc
cld
jmp
rol
iret
fcmovbe
fcmovne
mov
inc
and
xchg
jle
js
fiadds
in
in
mov
xor
pop
jl
add
pop
push
jmp
rorl
jne
ljmp
ss
xor
add
in
push
shrb
sbb
cmpsl
jg
arpl
aam
mov
nop
mov
pop
insl
andl
stc
mov
in
enter
mov
xor
loop
xchg
sub
fs
roll
and
std
int
imull
push
dec
aad
mov
jmp
sbb
lods
outsb
jp
xlat
sub
imull
lcall
aad
in
jecxz
outsb
dec
insl
inc
aaa
pop
aad
call
dec
mov
add
loop
lret
xchg
movsb
sub
ror
in
pop
pop
push
popf
sbb
cld
mov
sbb
cltd
enter
push
test
or
xchg
pop
mov
push
mov
mov
outsb
repnz
int
push
das
inc
in
sub
or
lods
out
test
jmp
xchg
xor
sbb
jb
popa
sbb
and
int3
lret
mov
test
mov
push
pop
add
rolb
cld
cwtl
mov
or
rep
stos
cwtl
inc
jp
add
mov
pop
imul
add
mov
xor
into
fimuls
mov
lret
dec
arpl
mov
xchg
stc
mov
pop
arpl
call
inc
movsl
jns
aad
inc
rorl
pop
jge
lcall
sti
jp,pn
dec
jp
icebp
into
daa
cmp
dec
mov
xchg
lods
ja
adc
or
mov
jne
fstps
out
pop
pop
negl
mov
pop
jle
push
mov
insl
or
lret
pushf
jns
push
imul
and
mov
cmc
inc
outsb
jecxz
stos
repz
stos
xchg
sub
xchg
adc
in
dec
in
sub
xchg
jo
fildll
adc
pavgb
jae
ret
pop
or
test
jnp
pop
jb
rep
mov
std
and
imul
mov
xchg
dec
inc
movsb
aam
and
and
jno
sbb
pop
pop
out
sub
subb
insl
sub
enter
cmp
sub
pop
out
and
sbb
mov
int
xchg
jo
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
add
xor
imul
sbb
fmul
scas
fimuls
ja
pop
inc
cld
call
fimuls
mov
outsb
push
out
jl
mov
repz
stc
cltd
mov
mov
jns
pop
xor
movsl
fcmovnbe
leave
daa
and
xor
sbb
push
into
mov
cmpsl
cld
mov
stos
test
cmpb
and
ret
or
adc
cmp
das
mov
es
xor
shlb
das
pop
dec
clc
mov
popa
sbb
hlt
pop
adc
cmp
pop
sub
outsl
sub
jp
inc
push
jne
imul
mov
and
sub
out
clc
inc
in
dec
add
imul
loope
imul
xlat
int
rcrl
add
mov
in
pop
ljmp
js
xchg
loopne
dec
lret
inc
jns
fisubrs
pop
cmp
xchg
sbb
or
es
mov
adc
into
popa
mov
std
pop
adc
cmp
hlt
mov
das
adc
add
inc
int
jb
test
fwait
or
sub
pop
rolb
cmp
cmp
push
dec
imull
orl
sub
cld
data16
dec
stos
add
mov
fadds
xchg
add
push
lds
les
nop
in
mov
dec
aad
push
push
push
sbb
mov
cmp
pop
xchg
fcomps
and
xor
ljmp
adc
loop
push
dec
add
add
insb
data16
stos
iret
in
add
shlb
cld
test
pop
sub
cwtl
and
push
lods
jns
bound
xchg
fwait
call
shrl
sbb
inc
pop
rclb
stc
xlat
fwait
rcrb
push
mov
xchg
lds
fcmovu
xchg
mov
sbb
xchg
jecxz
sbb
call
dec
cmp
dec
inc
imul
xor
hlt
outsb
fwait
addr16
scas
daa
lods
xor
and
stos
push
mov
out
cli
pop
jecxz
rcrl
cmp
outsb
add
inc
mov
mov
fadds
outsb
pop
repnz
iret
movsb
aas
mov
cmp
outsl
xor
and
sbb
sub
sbb
pushf
push
stos
iret
inc
jns
xchg
sbb
ret
bound
jecxz
test
add
imul
push
pushf
push
pop
or
sarl
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
sbb
xchg
jle
js
sub
or
push
sti
jno
mov
pop
inc
sahf
and
pusha
fxch
dec
mov
lcall
inc
jl
jae
pmovmskb
ja
in
cmp
mov
xor
cmp
movsb
into
jp
cmc
mov
cmpb
fmuls
iret
dec
sahf
xchg
or
mov
std
stos
pop
dec
lahf
das
jmp
push
hlt
int
aad
lock
xchg
test
sbb
out
push
testl
loop
dec
push
rcr
xor
xor
dec
pop
fs
daa
clc
mov
andl
or
and
pop
icebp
jb
cmp
cltd
out
out
cld
inc
and
mov
pop
mov
sbb
hlt
add
sar
mov
es
into
inc
cmpsl
in
inc
fs
and
mov
ss
bound
push
mov
test
mov
jge
cmp
cmp
ds
lcall
cs
in
aaa
test
frstor
pop
jne
imul
adc
insl
addr16
lret
out
mov
adc
lea
mov
mov
and
lcall
sub
fwait
mull
mov
dec
repnz
mov
mov
gs
ret
stos
ljmp
movsl
xlat
icebp
andb
sub
pop
pop
inc
stc
in
or
fdivr
inc
repz
lds
adc
add
jp
dec
scas
mov
cmp
andb
insl
or
mov
push
adc
mov
ljmp
dec
dec
sub
push
pushf
into
xor
out
jge
pushf
cmp
push
dec
mov
jnp
sub
fsubr
jmp
test
inc
imul
cld
mov
sub
sub
cmp
mov
lods
ja
jne
pop
fs
arpl
mov
pop
or
dec
push
lcall
xor
mov
lret
pop
pop
mov
int
test
and
repz
mov
jae
sbb
xorb
stos
decb
lock
outsb
pop
xchg
jp
arpl
icebp
loop
or
aas
xchg
rorl
xor
pop
pop
lret
mov
push
mov
daa
adc
xchg
xor
lret
int
adc
test
pop
je
xchg
cmpsl
push
adc
inc
mov
inc
lret
dec
pushl
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
rolb
add
loop
jg
xchg
jle
js
push
mov
add
xchg
adc
imul
pop
and
and
inc
jns
cmpb
movd
jo
fisttpll
orb
scas
sub
mov
imul
orl
xchg
into
ljmp
sub
das
mov
fdivr
adc
push
in
mov
adc
rorb
sub
rorb
sbbb
rolb
pop
lock
cmpb
jle
loopne
jne
aam
mov
add
ret
mov
push
fcmovbe
hlt
fdiv
inc
aad
ljmp
nop
push
and
sbb
jne
lcall
inc
adc
push
out
ficompl
ret
hlt
lods
sub
lahf
sbb
test
js
pop
aas
sbb
stos
and
in
cmpsl
inc
das
repnz
adc
fcmovu
dec
movsl
dec
shlb
or
ljmp
xchg
pop
test
iret
sbb
enter
ficompl
push
mov
xchg
xchg
insl
mov
jl
cmp
insl
notb
fidivrl
inc
adc
nop
jb
xor
popa
xor
jo
rclb
lcall
mov
pusha
add
std
pop
pop
fnop
mov
std
lods
les
addb
testl
push
js
inc
or
inc
fsubrl
adc
in
movsb
aad
subl
iret
inc
sub
pop
mov
dec
or
ret
dec
out
push
out
mov
mov
orb
mov
stos
lods
test
inc
fstl
cld
or
pop
mov
jl
fmul
xor
mov
add
mov
push
std
dec
lods
xor
and
xor
aaa
imul
fbstp
mov
je
push
pop
cs
psrld
jle
fmul
cmc
xchg
sub
fnstsw
adc
ljmp
mov
or
jl
mov
adc
mov
orl
call
lods
pop
fucomi
jecxz
jl
mov
sub
cmp
loopne
int
fistpll
add
push
out
jb
clc
repnz
dec
repnz
insb
fdivrl
mov
flds
loop
movsb
sbb
in
mov
xchg
lods
data16
push
fwait
xchg
lcall
pop
mov
movsb
sbb
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
or
sub
js
out
fcoml
popf
fstp
inc
xlat
lahf
sti
outsl
cli
and
pushf
andb
subb
popa
adcb
jl
lods
sub
mov
xchg
or
xchg
bound
sbb
dec
cmpsb
pop
sarb
ds
js
dec
popf
outsl
bound
sarb
xchg
xchg
ljmp
mov
mov
sbb
in
xor
or
jp
sbb
fwait
pop
enter
cli
mov
stos
cmp
cmpsl
outsl
push
push
fwait
pusha
or
push
or
add
mov
push
std
sahf
mov
or
or
push
jp
push
push
imulb
jecxz
jmp
rcll
outsl
pop
lods
pop
jmp
adc
out
aad
xchg
hlt
inc
dec
sbb
mov
mov
test
dec
mov
in
rcrb
mov
pushf
mov
sub
mov
dec
cwtl
or
pusha
cmp
ret
repz
out
sbb
jb
jl
dec
mov
add
adc
stos
jnp
push
xchg
popf
jns
jo
and
and
sti
data16
lods
fwait
sbb
push
add
xchg
mov
or
sbb
add
sub
mov
mov
push
xlat
xchg
and
cmpsb
cmpsl
xchg
inc
or
jno
add
mov
pop
sbb
dec
cmp
hlt
xor
xchg
xor
les
icebp
addr16
subb
test
sub
dec
sub
in
xor
scas
xor
stos
insl
outsb
xor
inc
ja
int
ljmp
xor
push
adc
adc
scas
mov
lcallw
jne
jge
test
shrl
and
inc
loop
inc
mov
mov
pop
xchg
je
sti
lds
dec
cmp
and
add
cmp
aad
aad
popa
adc
and
jg
add
lods
cs
popf
push
push
les
sub
jge
scas
std
xor
adcb
cltd
mov
out
push
gs
jae
inc
int
jnp
mov
outsb
jmp
jle
mov
les
mov
sbb
dec
cmc
pop
jg
xor
cltd
dec
and
xor
inc
fdivrl
fsts
mov
es
test
fwait
in
dec
jg
jg
mov
aad
jbe
ds
mov
shlb
push
xchg
hlt
outsb
or
mov
loopne
in
dec
or
xor
push
and
push
fdivrs
or
mov
mov
movntps
test
jmp
jnp
sbb
cld
add
jg
int3
out
sbb
add
and
cwtl
iret
fidivrs
les
xchg
pop
lret
stos
xchg
sbb
cld
call
lea
xor
or
inc
jbe
xchg
scas
js
cmp
xchg
jb
imul
std
out
mov
jns
push
cmpsb
dec
add
outsb
fdivl
sbb
xor
iret
pushf
in
aas
jl
mov
and
pop
stos
xchg
cmpsl
les
mov
push
mov
jne
xchg
sub
push
and
js
pop
mov
les
fmull
iret
gs
je
cmp
sti
hlt
in
js
push
aam
pop
sbb
mov
lret
fdivrl
mov
divl
and
int
sbb
hlt
lret
or
imul
xlat
xchg
add
cwtl
test
bound
fldl
sti
pop
adc
adc
ljmp
ror
push
pushl
sbb
adc
rclb
mov
aaa
fldt
les
int
stc
or
dec
adc
icebp
add
or
mov
jmp
or
or
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
and
add
lret
mov
data16
push
push
mov
and
xor
mov
sub
ret
ret
push
cmpl
or
xor
sbb
daa
push
fdivr
pop
mov
rorb
xchg
pop
fwait
cs
nop
in
sub
jne
lret
subb
push
frstor
scas
inc
adc
jle
or
sub
loop
ror
insl
inc
pop
pop
ss
cmp
and
mov
mov
test
dec
lea
jg
inc
inc
rol
pop
inc
cmpsb
mov
lock
enter
cmp
mov
test
hlt
fnstenv
pop
cld
sub
ret
sbb
xchg
add
cmpsl
enter
or
mov
dec
mov
jae
out
or
sub
push
mov
mov
mov
push
lret
lret
lock
ds
lea
xor
out
ficomps
inc
xor
xor
sub
jl
pop
rcl
xchg
ret
xchg
sti
outsl
mov
movsb
add
push
jae
jge
xor
xorb
outsb
jbe
bound
xlat
test
mov
mov
cmpsb
sub
iret
inc
mov
insb
push
push
stos
aaa
jnp
sub
loopne
mov
fistpll
ret
mov
or
fidivs
les
pop
xchg
xor
mov
and
jecxz
pop
sub
into
data16
cld
adc
and
ljmp
pushf
call
sub
sub
cmp
push
sbb
inc
fbstp
push
icebp
add
or
inc
pushf
aas
xchg
pop
cld
cwtl
addr16
and
inc
out
cmpb
sarl
ja
cmc
repnz
push
sti
adc
xor
arpl
hlt
enter
dec
imul
sub
or
adc
lret
sub
jae
in
ss
xor
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
incl
stos
add
push
aaa
jg
jnp
js
cltd
cwtl
mov
push
les
xor
push
mov
movsl
xchg
sbb
rorl
and
mov
mov
pop
cmp
sub
fs
xchg
imull
daa
mov
fidivrl
iret
shlb
sub
mov
stos
sahf
xor
push
loope
mov
pop
jp
cld
repz
pusha
mov
adc
mov
mov
test
in
into
sbb
leave
xlat
mov
xchg
push
cmp
movsb
cmp
fmull
push
pop
push
les
adc
jp
xchg
pop
dec
lods
jmp
dec
mov
mov
fnstcw
dec
sub
fwait
btc
das
jbe
and
sbb
pop
pop
ret
dec
xor
das
fwait
or
adc
cmp
pushf
push
fwait
jno
cmpl
daa
xchg
iret
sbb
mov
rorl
jl
mov
mov
push
jg
mov
or
out
fnstsw
mov
in
subb
sub
xchg
out
jb
sub
les
rcll
mov
inc
iret
aas
jno
outsb
mov
mov
jle
xchg
lret
xorb
idiv
mov
pop
push
jo
loopne
int3
addr16
dec
das
jno
pop
cs
inc
inc
jmp
dec
hlt
cli
and
adc
sbb
fldenv
xchg
fdiv
test
cmpsb
js
push
jmp
sbbb
gs
scas
cwtl
scas
popa
sub
and
mov
outsb
mov
cli
dec
add
pusha
adc
pop
inc
xor
pop
inc
es
clc
pop
enter
rol
enter
jb
lret
insl
and
jecxz
and
mov
jp
scas
andb
mov
mov
pop
dec
xchg
lcall
jle
mov
dec
mov
int
imul
mov
fnsave
adc
outsl
mov
fisubrl
popa
pop
loope
cli
push
xchg
xchg
cld
popa
out
pop
push
ret
popf
push
lea
cwtl
mov
vunpcklps
pushf
mov
gs
add
imulb
aaa
sub
mov
push
add
fimuls
or
push
icebp
sub
adc
jp
mov
mov
loop
xor
xchg
nop
dec
insl
movsl
pop
mov
dec
and
das
inc
xor
rcll
jmp
dec
rcrb
push
jg
jne
adc
mov
jecxz
stc
mov
xchg
mov
daa
mov
xor
hlt
and
shll
daa
idivl
xchg
out
sarb
in
inc
and
lock
fmuls
incb
and
push
aaa
xlat
lret
sbb
pushf
je
fidivrl
mov
lea
or
sbb
cmp
sbb
mov
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
mov
xor
js
jle
js
mov
addr16
pop
lock
cmp
testb
aam
dec
cmpsl
cmp
dec
aas
lds
adc
lret
mov
into
mov
lcall
stos
mov
addr16
mov
dec
clc
incb
cmp
or
cmpsl
xchg
dec
add
pop
mov
lock
pop
sahf
jmp
mov
inc
in
loope
popf
push
jb
dec
mov
daa
xchg
cmpsl
or
loope
mov
mov
mov
lret
test
cmp
repz
call
xchg
rcl
cs
mov
push
xor
mov
in
cmp
js
ds
sbb
shrl
sti
pop
push
or
push
mov
outsb
clc
sub
movsl
or
inc
lcall
fcom
stos
sub
push
or
add
jecxz
push
cli
jmp
pop
push
cmp
int
pop
cmc
sub
pmulhw
cmc
cs
dec
mov
xor
jns
jle
mov
pop
mov
mov
inc
es
lcall
jecxz
testb
aad
test
lret
icebp
das
cltd
fnsave
mov
je
jge
subl
xchg
xchg
fimull
scas
lret
mov
in
and
jne
adc
cmp
xor
cmpsl
inc
mov
ds
nop
outsb
adc
mov
pop
add
lds
mov
repnz
jo
mov
sbb
dec
jbe
stos
jle
scas
cmp
mov
mov
int
sbb
inc
shrl
in
mov
je
test
cmp
adc
and
ror
sbb
xchg
adc
cmp
push
dec
cwtl
cmp
ljmp
aam
imul
jno
leave
in
icebp
aaa
push
xchg
dec
lea
mov
xchg
and
addr16
push
frstor
push
jns
iret
cmp
mov
mov
pop
cli
and
xor
jp
mov
addr16
push
rcrb
mov
add
and
jns
sti
in
cli
loopne
xor
dec
xchg
fs
mov
sbb
sub
gs
mov
and
adc
and
and
outsl
jmp
sbb
in
fisubl
cmp
ror
or
call
dec
add
and
dec
sbb
mov
and
testl
dec
insl
dec
xchg
sub
pop
int3
hlt
inc
mov
popa
stos
xchg
insb
je
cwtd
jnp
notb
rorb
and
je
movsl
dec
pop
add
mov
xor
js
sahf
sbb
out
fnsave
or
outsl
mov
mov
xor
out
xchg
adc
adc
clc
jne
jmp
jmp
int3
les
aam
ror
mov
add
adc
jg
jnp
js
push
adc
inc
jb
push
mov
mov
flds
sbbb
mov
imul
xor
sub
rcr
bnd
subb
icebp
int
popa
lahf
pop
fdivs
or
mov
pusha
or
mov
mov
mov
xchg
push
adc
insl
adc
mov
mov
and
sbb
xorb
mov
or
addr16
pusha
xchg
ss
enter
sub
xor
xchg
outsb
popa
cs
jbe
add
cmp
test
dec
sub
pmulhuw
push
push
pop
adc
cmpsb
scas
xor
testb
push
sub
lds
push
add
rorl
imul
repz
leave
adc
data16
pop
cltd
xchg
or
cmp
mov
add
lcall
add
mov
mov
jge
out
data16
and
cmpsb
pop
idivb
popf
mov
jns
sub
mov
sub
out
outsl
mov
repnz
mov
insl
push
aad
jl
std
stc
ret
xor
push
adc
mov
xchg
inc
inc
jmp
xlat
icebp
jnp
add
lret
lods
lret
xchg
divl
int3
out
xor
popf
and
sbb
mov
cmpsl
insl
cmp
sub
test
popa
divl
push
jg
dec
ret
xor
shl
orl
adc
shrl
push
mov
mov
or
icebp
rorb
push
adc
repnz
bound
insb
inc
push
add
test
inc
les
ret
adc
add
xor
inc
in
imul
jmp
xor
mov
outsb
xchg
pop
fldenv
push
icebp
mov
xor
pushf
mov
adc
scas
test
ljmp
xor
jb
mov
or
fwait
jnp
or
stos
lret
jb
rolb
rcrb
jbe
int3
sbb
jg
mov
jns
cmpsb
or
push
mov
push
dec
pop
cmp
in
mov
int3
fadds
cli
cmp
ds
rorb
mov
addl
out
and
lcall
jle
jae
sbb
jb
sbb
mov
dec
mov
cmp
or
jb
pop
mov
loopne
sbb
mov
fists
xchg
mov
test
insb
xchg
enter
testl
pop
or
rcll
inc
movsb
dec
imul
lea
push
scas
dec
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
xor
jle
js
cmp
jg
lret
cwtl
mov
add
pop
mov
stos
cltd
int
add
aad
or
jle
testb
ljmp
scas
mov
hlt
jmp
jae
test
cmpsl
data16
in
iret
and
xchg
inc
mov
xchg
test
pop
js
mov
mov
adc
call
or
andl
jnp
mov
adc
mov
mov
sbbb
ljmp
push
cmc
sbb
rcll
imul
add
jae
sbb
xor
es
xlat
jmp
into
scas
sbb
mov
jo
or
mov
push
sbb
cmc
fildll
adc
mov
ret
aad
inc
stc
enter
insb
push
ss
pop
faddl
jge
lret
mov
movsl
call
mov
rolb
imul
insl
sbb
or
mov
sbbl
leave
lock
sub
repnz
rorl
xchg
jp
cmp
xchg
mov
call
test
cld
pop
rcll
pop
aas
or
jo
scas
inc
popa
inc
sbb
popf
pop
out
ds
out
sarl
fsub
clc
orb
jle
or
mov
dec
loop
data16
and
mov
mov
inc
rclb
cmp
outsb
mov
stc
or
stc
pop
push
or
lods
bound
iret
mov
add
mov
sub
sti
std
in
add
sbb
aam
pusha
lds
out
dec
aaa
aad
lods
xchg
loopne
xlat
adc
daa
inc
setb
or
add
xlat
test
ss
mov
sbb
mov
cmp
pop
dec
decl
and
mov
push
movsb
sub
push
inc
add
sbb
sbb
sbb
aaa
pop
add
sbb
sti
nop
sbb
sti
fcmovnb
pop
inc
fidivs
xor
or
sahf
pop
xor
dec
push
call
mov
jbe
mov
cld
subl
xor
add
ds
xchg
in
and
pushf
les
pop
pushf
or
jmp
fimull
cmp
mov
js
loopne
or
inc
lea
jnp
push
les
fdivrs
rol
insl
aaa
test
pop
imul
xchg
push
fdiv
fs
sahf
push
jb
icebp
or
or
jo
cltd
and
data16
filds
in
lret
push
fcompl
cmp
loope
cmp
pusha
push
out
ret
inc
scas
pop
sbb
pop
jmp
jp
cmc
pushl
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
mov
ret
jg
jnp
js
cmp
push
in
ror
mov
sub
xor
jns
fwait
and
add
int3
clc
xchg
mov
in
das
mov
xchg
mov
dec
repnz
jns
mov
mov
sahf
xor
push
pop
add
aad
pop
fldl
sti
add
loopne
js
mov
fisubs
dec
ret
std
bound
adc
aaa
xchg
leave
in
in
cmp
sti
cmpsb
fmuls
mov
jne
jge
int
jae
test
sub
jno
jge
or
shrb
xlat
ss
jo
pand
frstpm(287
ds
jns
lahf
xlat
lods
jmp
mov
cmp
inc
ljmp
push
subl
dec
cltd
fdivrp
fsubr
jo
rcr
outsb
xorl
lret
imulb
lcall
mov
adc
data16
push
std
sub
sti
inc
scas
loop
ja
xor
shlb
rcll
push
test
mov
std
cmp
loopne
lods
push
sbb
lds
hlt
enter
ss
and
xchg
je
in
jne
cltd
sub
clc
test
xlat
divl
or
outsb
insl
push
lods
jmp
adc
mov
mov
add
mov
sub
clc
outsb
loope
pop
cmp
test
arpl
push
mov
bound
jp
add
loope
hlt
add
aaa
cld
clc
mov
stc
cmpsb
mov
repz
cmp
lret
inc
inc
in
and
inc
outsb
xor
cli
push
mov
pop
jl
push
daa
decb
lret
pushf
xor
std
sub
cmpl
sub
push
push
mov
dec
aam
jmp
adc
pop
mov
stos
daa
or
adc
data16
lea
mov
jnp
inc
dec
les
jle
sbb
dec
mov
adc
mov
mov
sarl
out
inc
pop
dec
pop
lds
add
jmp
xor
push
insl
adc
push
aaa
inc
aaa
xchg
mov
sti
rcrl
bound
xchg
and
mov
into
scas
jmp
pushl
or
addl
mov
stc
xor
sbb
out
push
mov
inc
aaa
scas
mov
cs
push
jp
xor
xchg
movsl
mov
les
dec
sbb
push
push
sarl
in
or
and
sub
pop
mov
push
dec
ds
bound
mov
jno
pop
lcall
lahf
add
mov
xchg
push
inc
push
mov
adc
pusha
aam
xor
add
add
rol
leave
shll
cmp
sarb
jle
js
popf
aaa
lahf
adc
pop
inc
adcb
push
push
nop
fwait
mov
mov
mov
arpl
jle
sahf
jl
fsubs
ret
clc
push
mov
lods
mov
jbe
sub
xchg
stc
popa
or
dec
call
jmp
scas
cmp
stc
or
out
cli
sub
aas
xor
arpl
mov
aaa
sub
xor
jl
inc
mov
scas
cs
sahf
ret
sub
das
ja
cld
mov
fs
cmp
xor
sbb
push
mov
mov
or
add
adc
stc
aas
mov
pop
push
cmp
mov
popa
mov
out
or
jb
in
sti
mov
ficompl
or
jg
sub
pusha
mov
lods
cltd
fldenv
das
cltd
or
gs
popa
das
jnp
in
pop
fnstcw
add
push
fldenv
mov
dec
mov
mov
ljmp
sahf
jmp
push
add
test
mov
xor
nop
shlb
fmull
fwait
nop
imul
sbb
mov
cltd
mov
mov
push
mov
aas
cs
lcall
pop
adc
lret
dec
jle
sub
decl
inc
sub
imul
inc
sahf
push
inc
sbbl
imul
aaa
stos
mov
ret
inc
jle
fs
loopne
inc
aas
xor
inc
cmpsl
cmpb
sbb
push
pop
fidivl
jno
pop
xlat
cld
mov
add
loope
adc
inc
out
repnz
mov
sub
cmpsb
dec
mov
popf
mov
ljmp
mov
ds
push
fsubrs
cltd
pop
cmc
cmpsl
or
sbb
mov
fwait
add
xchg
lods
ret
ss
xor
je
andb
int
sbb
dec
jle
jg
add
adc
dec
mov
cmc
jae
decb
cmp
pop
and
lods
out
cli
hlt
adc
mov
loope
les
mov
and
leave
cmc
or
es
push
lcall
jns
jmp
inc
mov
inc
add
mov
push
mov
push
outsb
push
pop
rcl
jno
pop
jb
lods
lods
adc
std
pop
lret
jo
pusha
rcrl
fwait
ljmp
aas
mov
adc
fcoms
xchg
ror
cmp
lock
and
mov
inc
mov
jmp
xor
mov
mov
mov
dec
jb
leave
cs
mov
sbb
sub
ljmp
inc
clc
out
lret
and
mov
add
add
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
and
jg
adc
js
jno
test
pop
jge
dec
jle
jb
bound
popf
xor
xor
dec
sbb
aas
sub
lea
test
add
mov
sarl
ss
les
fwait
pusha
rclb
mov
cmp
or
sbb
cmpsl
loope
test
or
test
cmp
mul
gs
subl
mov
test
and
cmpsl
imul
or
mov
adc
insl
sub
or
cmp
popa
push
push
stos
cmpsb
sbb
adc
add
int3
or
mov
test
inc
iret
fldcw
call
stos
bound
enter
pop
out
out
aaa
sub
mov
sbb
dec
aam
sub
fsubl
add
pop
jno
test
aas
xor
jl
rolb
xchg
sbb
in
loopne
jb
es
jp
xor
sahf
dec
xor
jl
fidivrs
ficomps
lret
repz
mulb
repnz
lock
pushf
inc
add
call
mov
jecxz
or
jbe,pn
out
sbb
sbbb
mov
pop
xchg
mov
ss
mov
mov
cmp
push
popa
fdivrp
push
dec
stos
add
lods
add
enter
dec
fdivr
pop
es
push
mov
mov
mov
in
pushf
jnp
gs
dec
test
push
dec
inc
mov
pop
jnp
pop
push
push
xor
cmp
cmc
lcall
jnp
mov
sbb
prefetch
mov
jp
push
cltd
cmc
pop
inc
sbb
mov
xorl
into
fs
xchg
push
adcl
loope
inc
or
xor
dec
mov
or
fcmovnbe
stos
pop
add
fcmovnbe
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
push
jp
and
jg
adc
js
and
pop
mov
das
inc
jno
imul
cmp
xor
pop
aaa
lcall
shrb
lahf
sbb
cmp
mov
aad
xchg
imul
sub
mov
fld
inc
jg
xchg
mov
ljmp
cmp
lcall
pop
mov
testl
sub
call
sub
mov
jbe
stc
popa
orl
mov
fs
xchg
in
scas
nop
pop
mov
testb
insb
jp
mov
inc
dec
pop
xchg
ja
lods
imul
rorb
mov
inc
mov
daa
sbb
xchg
ret
sub
fimuls
pop
xchg
dec
pop
jae
clc
out
pop
xchg
xchg
mov
and
cwtl
pop
in
test
outsb
mov
scas
ret
add
call
xchg
mov
mov
jecxz
ss
sbb
and
mov
jecxz
pop
popf
out
aaa
mov
xchg
mov
pop
add
inc
rorl
or
sbb
jbe
flds
inc
jbe
ds
xchg
push
adc
sub
hlt
test
int3
rolb
lock
fisttpl
mov
fwait
js
scas
cmp
ja
nop
cmpsl
cmp
or
inc
lret
scas
push
xor
mov
push
mov
jl
pushf
xor
movsl
cltd
stos
ret
das
jbe
das
or
sub
repz
push
lret
fmull
dec
xchg
movsl
lret
movsb
or
sahf
not
mov
loope
inc
xor
test
and
daa
into
or
pushf
mov
or
add
pop
das
inc
cmp
mov
fsubs
xlat
cmp
xor
aas
stc
movsl
lea
fsubl
into
icebp
sbb
mov
xor
out
push
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
out
mov
leave
jg
adc
js
aad
mov
sub
into
test
iret
inc
mov
roll
inc
push
aas
xchg
mov
inc
out
hlt
in
test
fsubrp
movsb
jg
jb
mov
sbb
xor
sbb
pop
aas
repnz
lea
add
mov
xlat
adc
inc
sub
fidivs
dec
idivb
sahf
les
xor
mov
leave
outsl
fadds
mov
stc
out
xchg
bound
loopne
jmp
in
mov
icebp
shr
dec
mov
rorl
fstps
leave
xchg
sbb
pop
inc
pop
mov
outsl
xchg
ja
ret
xchg
xor
jns
adc
stc
sub
push
and
cmp
mov
xor
mov
nop
mov
add
inc
pop
enter
xor
adc
cmpsl
lock
imul
dec
rcrl
jp,pn
lcall
jnp
jp
fstpt
mov
adc
shll
jns
not
xchg
in
daa
mov
jl
dec
pop
cli
jo
mov
sub
or
push
inc
loop
sarb
cli
sti
sub
add
popa
pop
xchg
mov
cmpl
rorb
adc
movsb
xor
stc
adc
iret
imul
lret
lds
jns
inc
fimuls
int3
movsl
cmpsb
or
push
mov
jno
sahf
lods
push
or
add
rclb
movsl
cld
pop
mov
xchg
mov
shrl
mov
push
sbb
push
xchg
addb
push
jg
outsl
cmp
cmp
fsubrl
cmp
repz
rol
xchg
cs
or
xor
jle
dec
push
push
cmp
testl
in
rolb
out
cmp
push
pop
inc
jge
dec
out
mov
test
loope
sahf
popa
fimuls
jo
lcall
cmp
push
addr16
jne
and
sub
jecxz
xchg
lods
add
xlat
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
pop
mov
js
jle
js
loop
sbb
sbb
fst
mov
mov
push
push
aaa
shll
or
repz
mov
cmp
inc
pop
sbb
push
xor
dec
and
cmp
les
xchg
jge
or
push
imul
scas
xchg
into
cs
pop
cmp
ss
jns
mov
cmpsb
int
iret
jmp
push
xchg
push
and
mov
outsb
loopne
pop
pop
sbb
test
movsb
fisubl
add
lahf
out
push
adc
sbbl
jne
gs
pop
data16
or
popl
pop
jnp
mov
cmpl
inc
cli
add
jecxz
xor
shll
adc
jmp
sub
mov
fdivs
add
lahf
or
nop
adc
in
aaa
pop
stc
fsubr
iret
es
jae
mov
rcrb
fistl
push
in
into
ds
pop
imulb
imul
inc
or
nop
data16
mov
push
mov
dec
push
cmp
sbb
push
fsubrp
push
fisubrl
add
stos
xchg
mov
ss
fdivp
dec
inc
or
daa
and
mov
clc
cmp
xchg
xchg
sahf
ljmp
fwait
repz
cmp
stos
sbb
stos
mov
pushf
cmp
jae
mov
inc
cmc
stc
scas
cmpsl
sbb
mov
sub
add
lret
rolb
ret
mov
jno
cli
lret
adc
add
cli
lahf
or
or
sbb
movsb
loop
insl
sahf
icebp
cwtl
hlt
adcl
mov
jmp
jl
push
jmpw
loop
aam
or
or
mov
mov
sbb
xor
push
subb
repnz
jmp
push
stos
ljmp
mov
add
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
fisubl
jg
adc
js
inc
aas
dec
hlt
leave
repz
pop
cmp
xchg
fwait
loop
push
fisttpl
or
mull
outsl
jg
rol
cli
aas
frstor
jmp
dec
mov
sub
call
lock
and
xor
adc
mov
subb
mov
loopne
into
inc
pop
pop
push
arpl
cwtl
sti
jecxz
xor
jecxz
stos
insb
xor
cwtl
lret
pop
dec
dec
out
jg
or
es
outsl
mov
xchg
ja
out
outsl
jmp
popa
mov
mov
adc
fstps
fimull
daa
out
push
mov
int
inc
bswap
repz
add
test
push
pop
lret
loopne
into
mov
inc
pop
cwtl
xchg
es
imul
cmp
sub
imul
int
aad
inc
mov
dec
aam
mov
xor
jbe
and
sahf
fildll
sbb
ret
mov
mov
mov
cld
jb
sti
add
jl
enter
sbb
pushf
cmp
jnp
xchg
cmp
mov
test
push
out
pusha
sti
sbb
push
pop
aad
pop
insb
pop
and
fidivrl
out
lahf
jnp
adc
and
sub
xor
lahf
jle
xchg
fldt
lret
ljmp
loope
or
mov
pop
mov
pop
int
ja
outsl
push
out
jbe
fdivs
sbb
test
cmpsl
mov
das
fcoms
inc
jl
outsl
lods
faddl
outsl
jecxz
or
and
stos
pop
scas
jo
xchg
aam
outsb
ja
es
pusha
ja
add
movsb
cmp
adc
sbbl
loope
sahf
clc
or
sbb
insl
fwait
sub
test
fs
mov
add
push
push
sbb
dec
or
cmpsl
cmp
rcrb
push
push
pop
popa
inc
inc
repnz
xor
push
das
iret
popf
pop
xor
aad
add
hlt
and
adc
jle
in
jnp
mov
add
addl
pushl
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
mov
xlat
adc
js
jle
js
cli
data16
addr16
cld
or
lds
mov
bound
ret
mov
pop
out
mov
js
mov
sub
lods
push
pusha
sbb
cmp
push
push
stos
int
add
movsl
add
jns
xchg
addl
or
mov
and
out
cmovns
cli
rcr
es
sub
pop
lea
in
into
jg
xchg
mov
outsl
out
js
xchg
cmp
psllq
inc
push
mov
jmp
sti
xor
cmp
scas
lods
mov
jbe
push
in
pop
mov
jb
fsts
xchg
loop
xchg
in
adc
push
rcrb
adc
add
out
lahf
xorps
mov
scas
sub
inc
fsubrs
js
incb
popf
and
sub
pop
repz
fsubl
adc
mov
addr16
xlat
out
or
xchg
push
lcall
shl
xchg
movsb
aaa
sub
inc
je
pop
loop
lahf
cld
jbe
scas
mov
sbb
scas
jmp
aam
inc
fists
and
xchg
daa
into
out
pushf
in
cmp
in
inc
loopne
stos
sbb
outsb
jecxz
pop
stos
sahf
xchg
std
mov
repnz
mov
add
shlb
or
leave
or
or
push
stos
and
mov
dec
je
mov
jb
dec
lret
imul
cmp
jg
pop
mov
bound
push
test
jae
add
sarl
push
ficoms
sub
test
dec
sbb
cmp
ficomps
ljmp
inc
imul
jbe
mov
xchg
inc
paddb
jne
mov
and
pusha
mov
or
inc
in
mov
cmc
mov
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
jno
or
adc
js
sub
mov
pop
dec
mov
sbb
aam
push
xchg
icebp
mov
fcmovb
mov
inc
xchg
lods
cmpsl
xchg
fisttpl
lods
aad
das
xor
lret
lods
add
mov
pop
shll
mov
push
daa
pop
push
push
xchg
mov
loop
adc
js
lret
movsl
inc
sti
jns
jmp
sbb
xor
inc
test
ret
pushf
sub
ds
lea
adc
pop
aaa
jb
jmp
lahf
insl
sub
stos
ror
stc
mov
dec
lret
mov
insl
xor
ret
jmp
xor
lods
fstpl
hlt
push
adc
fcoms
mov
mov
lock
xlat
addr16
mov
pop
mov
movsb
popa
ljmp
in
out
inc
repz
jns
cmp
icebp
push
sahf
xchg
push
xor
mov
pop
jecxz
aas
in
mov
jg
dec
mov
pop
shlb
hlt
and
pop
jmp
push
mov
mov
rolb
fwait
mov
mov
sarb
insb
nop
insl
cmc
adc
inc
and
mov
or
lahf
hlt
xchg
cmp
push
cli
sbb
js
leave
js
sub
repz
mov
cmp
mov
sbb
cmp
jnp
push
shrb
lds
push
xchg
jb
out
pop
in
xor
push
in
adc
jecxz
adc
mov
ds
adc
pop
sub
ljmp
into
cwtl
rclb
mov
push
inc
sub
into
inc
push
mov
mov
and
jae
cwtl
cmc
cmpsl
gs
and
mov
in
rcrl
aaa
test
js
pop
cmc
pop
shrb
test
xchg
and
sbb
cld
hlt
das
mov
and
inc
mov
stc
test
mov
in
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
push
mov
jg
adc
js
aaa
ret
jb
pusha
and
nop
andb
out
stc
jae
push
or
mov
and
dec
stos
and
xchg
iret
outsb
cmc
sub
fisubrl
dec
push
adc
movsl
aam
pop
push
arpl
sub
inc
repnz
cmp
xchg
adc
inc
cmovne
push
loop
and
xchg
xchg
stos
lds
pop
mov
pop
xor
lock
push
sub
xchg
push
fisubl
mov
push
xchg
xchg
mov
enter
jecxz
mov
fptan
dec
xchg
popa
pop
fdivrl
shrb
inc
adc
das
cld
mov
negl
or
dec
xchg
push
inc
fucomi
pop
das
mov
test
bound
imul
int
test
je
sub
movsb
mov
gs
lock
mov
cld
and
in
fistps
ret
mov
jo
dec
pusha
mov
pop
push
call
dec
ss
std
test
sub
inc
xchg
lahf
mov
je
sub
lahf
jns
pusha
sub
nopl
mov
xchg
xlat
inc
loopne
imul
out
push
outsl
mov
lods
jae
push
test
add
pop
mov
movb
ror
cltd
in
je
loop
into
xchg
xchg
jmp
lods
imull
dec
cwtl
add
sbb
and
push
pop
sbb
push
fsubs
imul
or
fistl
and
push
or
pop
pop
test
cmp
jecxz
loope
repnz
out
xchg
in
sbb
dec
dec
aam
mov
push
push
sub
mov
mov
mov
repz
je
lret
es
pop
test
fs
mov
test
cld
jg
insl
jp
xor
popa
mov
and
add
add
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
xorl
jg
adc
js
lds
pushf
pop
call
cmpsl
lds
out
xor
out
pop
pop
dec
xchg
xchg
inc
or
imul
sbb
cltd
insl
lret
repnz
xchg
xchg
and
repnz
jns
imul
sbb
jmp
movl
mov
jle
stos
fs
popa
cmp
cmp
lret
popa
push
testl
loopne
imul
mov
add
enter
push
push
push
nop
cmpsl
std
std
sahf
xchg
xchg
pop
mov
push
jbe
push
fisubl
enter
mov
test
mov
mov
add
or
cmp
inc
sub
and
mov
xchg
fistps
daa
jp
sub
adc
bnd
dec
dec
jecxz
int3
add
adc
ret
and
mov
xor
aam
mov
pop
add
out
xchg
je
insb
mov
jno
adc
sahf
dec
ret
aad
mov
das
in
push
fiadds
push
dec
out
pop
jmp
xchg
test
mov
insl
cwtl
dec
scas
shlb
sbb
popf
mov
add
lret
adc
int
push
push
xor
out
scas
mov
flds
aas
inc
and
shl
cmp
xchg
dec
pop
enter
and
shll
inc
cmc
jno
xchg
pop
fldcw
fistl
and
mov
lret
rcll
push
push
movsl
sub
cmp
cmpsl
mov
inc
rcrb
jo
lods
pop
scas
imul
push
add
xor
fsubl
dec
ja
sbb
dec
xor
movsb
rcl
sti
shld
cli
mov
mov
or
and
cmpsl
outsl
dec
je
push
inc
loope
xor
and
pop
push
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
andb
js
jle
js
adc
fwait
mov
aad
scas
sub
insl
leave
inc
scas
in
or
pop
or
mov
stos
xchg
or
pop
or
loop
inc
mov
stos
test
push
daa
push
pop
lds
sahf
scas
lret
or
xchg
xor
xchg
test
aaa
ja
cltd
filds
shrl
mov
sbb
jno
cmp
xchg
inc
popf
shrl
add
decb
in
jmp
popa
mov
mul
mov
cmp
xor
adc
loop
pop
stc
loop
stc
add
pop
es
or
inc
sbb
adc
lahf
dec
sbb
test
ljmp
cltd
in
repnz
out
aas
jecxz
jbe
jno
fnstenv
cwtl
jo
sub
orb
jmp
out
pushf
in
xchg
push
xor
sbb
std
clc
lret
dec
aas
xor
sbb
xchg
stc
iret
jns
sub
das
jle
add
inc
mov
sbb
fsubl
mov
pop
rcll
inc
mov
add
dec
pop
pop
in
pop
mov
je
jo
loopne
repz
sub
jnp
or
jle
lods
jle
mov
bound
dec
imul
fs
sub
dec
jnp
mov
push
xor
sub
rorb
and
rolb
roll
insb
and
push
cld
imul
divl
jl
inc
xor
das
pop
jl
xchg
inc
sub
jmp
stos
xor
push
push
fidivrl
addr16
movsb
sbb
rorb
pop
xor
cli
dec
sub
lods
int
int
lods
dec
dec
jae
jmp
insb
mov
aaa
xchg
int3
add
out
test
cmovae
fstps
sub
fisubl
aas
sbb
popa
pop
jae
jle
rcll
mov
cld
pop
cmp
pop
ffreep
shrb
xchg
sub
jmp
ret
aas
fxch
rcr
mov
shrl
or
jg
adc
js
jl
ret
and
jecxz
adc
inc
cltd
iret
or
jp
and
jp
hlt
mov
xchg
jo
dec
test
add
call
jp
jp
aad
dec
push
test
pusha
push
ljmp
aas
or
and
jae
loope
aaa
dec
cmp
push
cmp
lods
adc
das
pop
cmpsl
jns
mov
cmp
loopne
push
and
push
sub
push
add
jmp
push
pop
pop
je
shl
ja
std
fwait
loopne
sbb
aas
push
orl
scas
dec
jbe
cmp
ljmp
aam
mov
xchg
xchg
outsl
scas
pop
push
push
push
inc
jne
cltd
cmpsl
xchg
arpl
inc
and
movsl
aad
xchg
shrb
out
mov
arpl
jne
mov
ljmp
ret
inc
fwait
xchg
mov
xchg
and
push
adcl
insl
mov
aad
repnz
jns
cmp
mov
test
sbb
mov
lds
mov
push
inc
out
and
inc
sbb
imul
rol
mov
xor
icebp
inc
pop
pop
insb
ret
xchg
dec
push
and
pop
dec
pop
addb
pop
mov
lea
or
mov
stos
lahf
scas
xor
mov
push
mov
aas
repz
sub
nop
shlb
mov
lods
loopne
adc
push
repz
int
pop
or
rcll
stos
andb
ss
mov
xchg
or
and
mov
sahf
ficoml
cmp
sbb
enter
mov
add
adc
rorl
and
pop
mov
push
popl
in
ja
cmc
mov
loopne
jecxz
adc
mov
xor
xchg
lods
std
sbbl
mov
mov
jg
mov
hlt
stos
xchg
jmp
int
int
fnstcw
xchg
adc
adc
js
sub
jo
xchg
repnz
mov
loopne
fldt
inc
and
inc
nop
int3
mov
fbstp
cmc
adc
arpl
xchg
mov
cmp
fnstenv
popw
pusha
inc
xor
or
jo
sbb
ss
call
cmp
cmp
adc
mov
push
shll
adc
jecxz
push
js
rorb
aaa
jbe
js
add
rcr
adc
jp
into
lods
inc
inc
inc
loope
sub
push
in
ret
out
arpl
xor
and
ret
or
mov
shrb
push
pop
dec
in
gs
clc
mov
ficoml
test
lods
inc
cld
cmp
push
test
dec
fnstcw
in
int
or
mov
dec
cltd
or
xchg
loope
push
int3
arpl
test
cmp
xchg
out
xchg
mov
and
sub
mov
fimuls
dec
jg
mov
clc
stc
inc
and
sti
addr16
xchg
mov
ret
xlat
push
dec
hlt
sti
jnp
jge
push
out
xchg
int
xor
dec
lahf
mov
jns
rorb
outsl
push
dec
dec
lods
adc
stc
cmp
insb
cmp
inc
push
shll
lds
int
add
fcompl
adc
mov
outsl
dec
lock
add
mov
cmp
mov
aaa
push
lret
ljmp
fpatan
cmp
js
xor
mov
enter
mov
mov
pop
cld
fnstsw
pop
repnz
jl
aaa
lods
js
xor
or
xor
in
xor
xor
pop
adc
cmp
lret
les
add
sub
paddd
sbb
cmp
cmp
cmp
dec
cld
pop
xor
pop
lods
int
insl
jbe
mov
jmp
iret
enter
fcmovnu
xlat
push
shrb
out
sub
jg
adc
js
jl
sbb
ss
cld
negb
ljmp
fmuls
lretw
add
ret
lcall
es
xor
sbbl
das
les
and
mov
xlat
movsl
fdivrl
out
into
xor
inc
addr16
push
pop
ficoms
xor
pop
stos
jle
in
lods
outsl
inc
mov
cmpsb
push
push
dec
sub
pop
push
mov
push
mov
hlt
arpl
lret
outsl
popa
fildl
pop
pop
ror
xchg
add
das
scas
lods
jmpw
jmp
adc
pop
fdivrl
mov
dec
inc
mov
mov
subb
stos
in
mov
xor
aad
adc
loope
fsts
xchg
std
push
mov
add
sub
jne
push
cmp
cwtl
lahf
les
insl
adc
in
xor
mov
sub
fwait
out
stos
xor
jne
jmp
mov
sahf
popf
filds
gs
inc
hlt
inc
movsb
pop
cli
pop
js
lea
in
loop
or
mov
push
push
push
push
or
sbb
mov
ret
jae
adc
xchg
dec
dec
jg
mull
xchg
push
xchg
insb
lea
insb
repz
sub
sbb
add
out
mov
and
pop
dec
add
sub
mov
jecxz
mov
sbb
cmp
mov
inc
out
fcomps
mov
cmp
lock
push
in
xchg
ja
repz
lods
je
out
sub
add
mov
ja
das
lods
adc
lahf
jno
pop
movsl
orb
push
call
jbe
sub
jecxz
into
bound
and
adc
dec
pop
pop
fstl
mov
incl
mov
shrl
movsb
dec
or
lahf
xchg
add
sub
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
pop
lahf
cmpsl
xor
loop
js
jle
js
xor
lock
cmc
xchg
imul
insl
push
pop
cmp
jns
nop
mov
or
lret
mov
sub
mov
jg
rcrb
and
adc
shll
cmp
test
fs
inc
pop
push
lds
dec
lea
push
popf
sbb
stos
jb
je
push
sub
push
lods
std
push
xor
mov
sbb
sbb
test
repz
js
orl
les
mov
mov
es
inc
sbb
pop
mov
outsb
or
lds
mov
push
icebp
or
dec
push
cmp
div
jne
int
cmp
adc
out
pusha
pop
mov
insb
in
daa
in
lcall
sbb
dec
pop
dec
push
mov
arpl
popf
cld
xchg
push
or
mov
filds
pop
xchg
adc
dec
mov
mov
rorb
push
add
cmp
push
out
cmc
xchg
fstpt
sbb
add
ds
cmp
std
jp
and
jg
mov
popa
add
push
mov
adc
jg
fiaddl
lahf
rcll
ss
sbb
push
push
loop
mov
into
mov
enter
mov
sub
cs
lcall
lods
popa
jg
and
mov
ss
mov
xor
es
in
push
gs
lret
mov
dec
xor
mov
pusha
jl
lret
inc
pop
mov
add
sbb
les
sub
popa
je
mov
sub
and
and
dec
mov
sub
sarl
adc
loopne
sub
xchg
dec
aad
xor
sbb
out
or
cmp
sub
add
mov
cwtl
fnsave
cmp
push
pop
mov
add
jmp
int
int
rcl
int
cmp
insb
mov
adc
js
imul
imul
and
fidivrs
and
xor
aad
sbb
push
mov
lock
and
jnp
icebp
mov
pop
fwait
mov
pushf
bound
pop
jmp
out
push
add
test
mov
sbb
fldcw
dec
xchg
mov
stc
adc
int
push
xor
gs
or
ficoms
cs
xor
scas
hlt
jns
mov
icebp
jns
cmc
dec
scas
andb
mov
in
data16
sbb
push
xchg
in
dec
out
xlat
lret
or
jge
xchg
addr16
xchg
inc
inc
jle
push
arpl
and
movsl
push
in
fadd
pop
cli
cmp
xlat
test
lahf
mov
enter
int3
xchg
jbe
adc
mov
or
jo
cmp
push
insl
xchg
inc
lea
cs
add
outsl
shl
sub
mov
test
sbb
inc
push
inc
shll
add
neg
scas
and
dec
or
adc
cmpsb
jmp
aad
dec
ret
dec
loop
insl
sbb
les
xchg
or
loop
ljmp
or
push
rol
movsl
cs
sbb
jl
icebp
shll
jno
pop
fldcw
xor
fildl
pusha
aaa
mov
push
insl
dec
dec
inc
jae
mov
mov
popf
adc
vandnpd
xchg
xchg
fcmove
aaa
pop
pop
dec
adc
inc
ljmp
pop
push
aaa
daa
dec
data16
lret
ret
sbb
cmc
or
mov
ds
inc
test
aam
inc
loop
sub
ret
popf
jp
pop
dec
popf
dec
dec
inc
rcr
or
fdivrp
jnp
out
js
mov
inc
std
mov
stos
pop
xchg
mov
jno
xchg
frstor
aam
jl
jns
insb
inc
mov
push
imul
mov
jmp
lret
xlat
vpsubusw
lret
xor
insb
jb
out
js
jle
js
add
fbstp
fdivrl
mov
adc
ret
ret
mov
fnstenv
push
je
xchg
mov
pop
pop
pop
stos
pop
loopne
cmp
mov
sub
inc
lods
cpuid
in
je
cs
add
mov
arpl
imul
jp
stc
push
mov
pop
iret
mov
shr
cmp
xor
sti
daa
fdivl
sbb
sti
ficoms
jg
fsubs
fdivp
xlat
pop
mov
andb
mov
sbb
pop
test
mov
mov
pop
mov
jno
gs
push
fwait
inc
and
sub
insb
xchg
pop
or
dec
cmp
std
inc
mov
nop
mov
ror
leave
hlt
jmp
jno
cmp
jbe
jmp
std
aad
stos
fiadds
push
xor
aaa
in
adc
jge
mov
pop
mov
cmp
loope
cmp
push
sub
dec
fcom
adc
adc
mov
push
lods
pop
pusha
lock
jns
fxch
xor
outsl
push
mov
testl
orb
push
test
inc
mov
xor
testl
xchg
adc
lret
std
aad
les
mov
push
popf
inc
cmpl
jns
or
aaa
sbb
sub
xor
sti
xchg
push
sbb
inc
jb
add
inc
push
xchg
clc
leave
sbb
push
push
pushf
aad
cmpsb
cmp
loope
repz
negb
pop
out
nop
mov
loopne
movsl
inc
mov
cltd
xor
gs
fsubs
fimull
inc
mov
cwtl
inc
out
push
movsb
iret
stos
jle
sbb
jl
and
adc
cwtl
call
insl
xor
pop
xchg
xchg
leave
xchg
fbstp
or
xchg
mov
adc
icebp
lds
test
in
sub
lods
subl
inc
mov
lock
sub
test
dec
loopne
mov
mov
push
sarl
scas
xor
jmp
enter
iret
rcl
mov
mov
js
jle
js
test
repz
nop
mov
movsl
jle
sbb
in
sbb
faddl
push
mov
setb
dec
pop
sbb
mov
jne
leave
cmp
mov
les
xchg
jp
cmp
mov
imul
cmpsb
cmpsl
ljmp
ja
adcb
mov
jl,pt
adc
jbe
mov
mov
repnz
push
xchg
jne
mov
or
cwtl
das
lahf
stc
orl
ds
lret
mov
xchg
inc
ljmp
stos
and
idiv
mov
mov
out
cmpsb
rorl
or
inc
test
ret
cmp
or
push
icebp
clts
imul
push
mov
stos
in
sbb
inc
fstl
fcoml
aas
inc
jle
rcrb
pop
sub
pop
call
pusha
fisttps
cli
jle
push
pop
mov
insl
into
lea
push
insl
jge
or
sub
mov
jae
push
popf
repnz
lret
stc
fwait
dec
mov
ficoml
js
repz
mov
movsl
xchg
sub
outsl
inc
nop
and
pop
jbe
iret
jns
or
push
mov
sub
scas
and
shrl
insb
fstpt
and
mov
lods
xchg
stc
xchg
inc
cmpsb
aad
nop
inc
xchg
adc
jmp
xchg
pop
xchg
imul
dec
outsb
das
movsb
jno
push
out
jl
les
cmp
out
sbb
out
jbe
arpl
lahf
push
xchg
or
int
lock
mov
loop
cmp
pop
sbb
stos
imul
xchg
loopne
and
mov
roll
iret
js
dec
iret
jle
push
pop
lods
and
mov
dec
mov
adcb
rorb
mov
sbb
mov
jmp
into
leave
leave
rcr
fldcw
stc
push
fsub
in
mov
jle
js
sbb
fs
test
ljmp
xor
loop
inc
xchg
jmp
mov
mov
jnp
push
insl
mov
pop
lock
sub
jno
push
xlat
jge
push
mulb
out
jns
adc
push
fidivs
addr16
xlat
pop
adcb
mov
lods
dec
jbe
jo
lret
add
mov
int3
or
lock
jle
in
mov
mov
lret
in
mov
inc
xchg
dec
int
sbb
add
jp
inc
xor
idivb
es
jne
or
rorl
or
adc
inc
mov
sbb
bound
xchg
xchg
sub
jg
pop
js
cmp
fisubs
notb
adc
mov
mull
cli
movsl
xlat
mov
dec
dec
mov
rcl
adc
adc
insl
cmpsb
and
push
pop
bnd
repz
movb
xchg
and
inc
push
sahf
push
mov
aad
jb
cmp
sti
lcall
icebp
fs
pop
cwtl
out
popf
pushf
and
pop
repz
iret
push
xor
pusha
imul
jp
outsl
aam
xchg
stos
int
lret
imul
jl
and
sbbb
and
lret
or
mov
pusha
xor
push
xchg
jbe
mov
pop
out
sbb
sub
xlat
jmp
sub
call
jb
sub
lods
and
lds
js
rolb
jne
ret
jns
push
sbb
push
dec
pop
sbb
jle
scas
mov
adc
scas
or
jns
cmp
divb
inc
inc
mov
push
in
mov
mov
clc
mov
mov
mov
add
xchg
sahf
loope
cmp
or
adc
push
jno
or
out
push
ret
lea
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
cmp
sbb
call
js
dec
cmp
in
shrb
cmp
mov
jns
or
cli
insl
ljmp
movsb
scas
repnz
and
cwtl
dec
fdivr
push
rcll
mov
adc
fdivrl
out
sub
mov
mov
adc
in
jmp
fucomi
into
or
mov
ja
push
adc
test
shl
ljmp
add
lcall
lret
lods
and
lahf
stos
jmp
lret
jo
mov
in
xchg
addb
push
mov
fs
popf
sub
jl
jle
test
test
xchg
sub
xor
mov
mov
mov
jge
loop
and
outsb
fst
push
pop
ja
adc
inc
add
decl
push
push
insb
sbb
and
cmp
in
and
or
and
add
xchg
adcb
jge
xchg
or
push
lods
cmp
mov
mov
test
mov
jl
xchg
in
bnd
pop
jo
les
inc
cs
cmp
repz
fidivl
sahf
sbb
inc
cmp
dec
repz
ja
cmc
jnp
cmp
int
mov
pcmpeqb
ss
pop
lds
or
movsl
or
pop
xchg
and
mov
es
lcall
out
inc
outsl
popa
jno
xchg
pop
jae
cmp
loop
ss
movsb
enter
std
test
and
mov
repz
push
xor
mov
lret
pushf
cmp
push
sbb
or
sub
jae
pushf
mov
outsl
call
and
cmpsl
dec
sbb
lds
lret
movsl
int
daa
push
repz
ljmp
divl
dec
xor
jns
cmpsb
mov
jecxz
neg
adc
rol
and
xor
rcrl
and
lds
lahf
push
sub
add
push
sub
daa
pusha
sbb
pop
mov
xchg
xor
jo
push
xchg
imul
inc
xor
add
jmp
cmp
rol
jb
dec
pop
sets
adc
js
mov
mov
lods
loopne
mov
int
mov
adc
inc
jge
lcall
jbe
pop
adc
mov
cmp
mov
stc
add
inc
jmp
inc
rolb
lret
add
push
jae
jnp
mov
mov
push
aad
aam
jl
dec
inc
or
call
mov
dec
dec
mov
ss
or
aas
xchg
jo
sbb
dec
cmp
mov
imul
and
pop
mov
sub
pop
push
ds
in
or
or
push
xchg
sahf
dec
push
cld
sub
jno
push
ds
inc
hlt
mov
lods
lods
rolb
xchg
jg
scas
and
push
sub
inc
mov
fsubl
sub
mov
pushl
fwait
ret
addr16
fldenv
add
adc
push
sub
in
popa
mov
lods
xchg
pop
inc
sub
inc
jne
inc
int
movsl
fidivrl
shll
sbbb
mov
popf
xor
loopne
les
cmc
stos
xor
ficompl
aad
mov
scas
bound
in
mov
or
mov
int3
arpl
or
jnp
jge,pt
sbb
lcall
push
movl
shlb
jp
sbb
and
jp
imul
jne
sub
xchg
cwtl
mov
cmp
and
outsb
inc
push
xchg
inc
cmp
xchg
insl
push
fld
ret
out
movsl
cli
mov
fs
rclb
addr16
int3
fs
adc
push
cli
or
lea
xchg
andl
cmpl
push
das
jl
fsubrs
sbb
dec
aas
aam
jp
fistpl
cmp
push
inc
arpl
mov
pop
and
adc
fwait
jge
das
or
ja
mov
addr16
inc
fs
dec
add
pushf
faddp
js
dec
lret
mov
jmp
rol
enter
lret
pop
jp
orl
adc
js
jecxz
cmovne
mov
push
addb
decb
mov
xchg
xchg
in
cmpsl
lcall
pop
and
pop
fwait
idivl
lods
push
add
pop
mov
mov
push
lahf
sbb
push
inc
scas
notb
popf
loope
pop
xchg
add
mov
cmpsl
pusha
call
push
test
dec
inc
or
cmc
aam
aad
xchg
xchg
mov
imul
jbe
and
xchg
hlt
enter
cwtl
add
jne
ret
dec
es
mov
cmp
push
loopne
shl
cmp
mov
rorl
scas
push
xchg
ds
and
mov
cwtl
add
test
dec
fsubr
add
arpl
lret
mov
mov
mov
push
jo
repnz
mov
arpl
fdivl
inc
shrb
add
sub
inc
mov
clc
push
xor
shrl
out
pop
ljmp
lret
pop
mov
test
xlat
sbb
rclb
sbb
and
aaa
das
mov
jnp
jo
xor
mov
imull
adc
popf
cmpb
imul
xchg
in
or
insb
sbb
into
xor
fs
fcomps
into
stos
sbb
pop
add
rcrb
and
imul
scas
push
xchg
loop
mov
or
adc
cwtl
inc
sub
mov
leave
fisubrs
or
ret
xchg
inc
cmp
es
das
jo
dec
cmc
loop
aas
jnp
xlat
xchg
mov
hlt
jmp
scas
push
aad
leave
cmp
push
repnz
jo
popf
xor
cmpsl
pop
pop
nop
es
js
jns
pop
dec
sub
xchg
test
mov
push
in
xchg
hlt
jge
and
imul
fisttpl
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
inc
inc
add
jg
adc
js
insl
xor
add
repnz
fldenv
fnsave
xchg
adc
mov
pop
xchg
enter
pop
pop
mov
imul
dec
stos
movsl
push
pop
arpl
jg
xlat
enter
lds
mov
adcl
mov
inc
pop
mov
stc
sbb
mov
cmp
out
mov
daa
mov
mov
lods
sub
sbb
not
in
out
bound
cwtl
dec
or
ret
and
divb
pop
sbb
iret
xorb
rcr
jns
mov
dec
or
addr16
out
rcl
movsl
pop
inc
xlat
rcrb
out
cmpsl
xchg
aam
jbe
jns
adc
xchg
test
sub
aam
cmp
pop
cmp
or
repnz
outsb
push
in
cs
pop
mov
lret
rcll
sub
lock
ret
jecxz
pop
stos
inc
dec
aas
xchg
into
inc
fcmove
pusha
push
push
enter
lret
das
add
mov
lock
lret
adc
cmpsb
mov
arpl
mov
adc
bound
dec
push
pop
mov
add
xchg
or
inc
mov
jp
pop
jb
scas
repz
cmp
out
pop
jns
and
pop
hlt
add
jle
add
mov
jmp
inc
jb
sub
dec
repnz
rol
ds
dec
jns
inc
fidivl
mov
lock
cmp
push
push
pop
cmp
or
cmp
lock
xor
sbb
inc
push
test
scas
push
xlat
inc
imul
in
fistl
cmp
jg
xorl
pop
cmpsb
cmp
mov
popa
addb
dec
repnz
inc
out
and
push
pop
xchg
xchg
setb
test
repnz
loop
dec
dec
cmpsl
and
dec
inc
dec
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
push
imul
adc
js
outsl
push
jg
sbb
mov
stos
xchg
pop
in
icebp
push
pop
dec
jno
pop
lcall
scas
pop
inc
cmp
xchg
jns
xchg
add
jnp
rorl
cmpb
popw
test
rcrl
inc
jbe
mov
adc
enter
sub
or
dec
ss
es
movsb
mov
push
cltd
aas
test
mov
mov
lcall
int
les
sub
push
xor
cmpsb
push
in
scas
sub
repnz
xor
xchg
enter
jle
cmc
pop
pop
cmpsb
rcll
leave
inc
addr16
pop
fidivs
adc
sahf
push
mov
cmp
sti
test
hlt
inc
ret
dec
sub
pop
adc
sub
sub
repz
push
repz
mov
test
mov
ljmp
enter
cmp
add
imul
ret
push
divl
hlt
imul
popa
and
outsb
pop
add
fnclex
and
and
push
bound
pop
testl
pop
jb
popa
xor
cmc
mov
mov
push
mov
popa
or
xchg
jae
push
add
repz
lock
pop
adc
sub
mov
stos
pop
mov
imull
loop
aas
add
add
sbb
xchg
mov
cmp
dec
mov
xchg
add
aam
fmuls
fcomi
push
pop
inc
xchg
lahf
cmp
push
xor
bound
pop
xchg
mov
cmc
aaa
dec
mov
repz
test
movsb
lods
mov
movsb
movsl
sbb
shll
enter
jl
mov
movsl
xor
adc
push
inc
inc
popa
jge
cmc
out
mov
into
scas
pop
fdivs
mov
xchg
cltd
test
cmp
xchg
aad
push
mov
pop
mov
xor
add
into
iret
into
ror
aad
aad
mov
scas
dec
xor
jg
adc
js
addb
mov
jle
scas
sarb
xor
mov
adc
in
lret
test
popf
push
mov
in
inc
add
stos
pop
sub
pop
inc
cmp
push
sbb
icebp
je
mov
aas
xorl
mov
test
scas
icebp
in
push
dec
mov
jmp
out
nop
scas
ss
in
ds
inc
in
and
in
ror
cmp
mov
movsb
popa
outsl
push
xchg
addr16
mov
sub
xchg
in
adc
fnstenv
pop
push
xchg
add
sahf
mov
mov
fnsave
nop
jnp
mov
adc
insl
mov
inc
fcoms
jmp
inc
cmpsl
das
jnp
sub
push
cmpsb
lret
call
xor
dec
pop
push
mov
loop
and
cmp
jns
insl
jmp
mov
and
int
cmp
aas
in
jp
sbb
loope
jg
push
decb
inc
icebp
fwait
hlt
adc
push
imul
data16
pop
adc
add
mov
mov
dec
inc
lcall
lods
mov
shrl
xchg
and
push
cmpsb
mov
pusha
sub
test
pop
fcmovnb
xlat
aam
xor
jo
add
gs
lret
shl
xlat
nop
sbb
dec
fstps
mov
inc
in
sbb
pop
loopne
jge
pop
cmp
out
imul
fstpl
clc
daa
pop
jnp
daa
xchg
ret
icebp
mov
xor
rcrb
jmp
mov
cmp
sub
push
mov
inc
mov
mov
xorl
add
fildll
fistpll
lock
jno
icebp
orb
sub
mov
int3
divl
std
sbb
popa
xor
stos
push
mov
or
push
push
les
sbb
pop
pusha
mov
arpl
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fnsave
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
add
cmp
cmp
mov
test
es
xor
and
pop
push
push
pusha
mov
mov
push
stos
xlat
adc
loopw
ret
into
aam
mov
mulb
andb
hlt
incl
shrl
negb
push
or
adc
inc
mov
sahf
sti
dec
xor
out
lret
pop
jecxz
mov
mov
into
jge
jo
or
or
or
lcall
cmp
in
push
sub
arpl
loopne
call
xor
sub
and
ss
into
push
sbb
cmc
cmc
or
push
ss
stos
jns
popf
je
in
imul
cltd
add
mov
push
push
dec
ret
jp
int3
popa
or
xor
outsl
test
lds
sbb
jbe
jge
sahf
lcall
or
scas
dec
add
or
es
test
sub
jmp
xchg
sbb
jb
xchg
push
js
adc
sahf
dec
mov
pop
xor
mov
fdivrl
dec
fcompl
das
fidivrl
ficoms
fbstp
enter
aad
sub
movsl
pop
mov
xchg
ja
lods
cmpsb
lods
xor
enter
iret
xchg
test
mov
inc
sbb
lahf
jge
add
jl
sti
and
cmpsl
test
cmpsb
gs
loopne
in
pop
int3
cmp
ret
cld
ja
int
add
mov
call
cmpsb
sbb
pusha
adc
cmp
add
ror
js
jae
leave
jmp
outsl
fcoml
xchg
add
push
mov
xor
notb
cmpsl
icebp
fildll
enter
incb
sub
sub
movsl
or
xor
idiv
pop
dec
jecxz
sti
rorb
cs
test
cli
pop
in
loopne
test
xchg
into
out
cmp
pop
jecxz
add
xlat
xor
and
pop
rorl
lcall
movzwl
shlb
sti
popa
sub
shlb
sub
or
sub
push
stc
add
popa
push
outsl
jmp
call
cmpsb
jl
xor
aad
push
shlb
jl
loope
dec
sbb
sbb
ljmp
xor
test
test
mov
xchg
mov
or
jae
dec
cmp
cmpsl
xchg
scas
fwait
rol
mov
fwait
clc
xchg
aam
pop
mov
mov
add
clc
fadds
xchg
sub
cmp
shl
pop
cmp
mov
js
dec
push
cmc
ficompl
jns
inc
iret
and
mov
xor
repnz
sarb
scas
pop
inc
adc
je
add
fistpl
mov
test
add
out
jg
sub
push
dec
das
popf
into
lods
and
pop
inc
adc
mov
aam
xchg
fldcw
jnp
cmp
lcall
jno
push
mov
cmp
das
mov
fsubrl
adc
outsb
xor
sahf
stos
cli
push
push
jecxz
mov
imul
fidivl
test
out
ret
jae
insl
mov
xchg
dec
pop
mov
loope
pop
jnp
sbb
movsb
loopne
push
andb
xchg
mov
mov
in
jnp
add
jge
aas
in
pop
mov
push
mov
adc
arpl
xchg
push
icebp
stos
xchg
je
sub
mov
dec
popf
dec
sub
popf
mov
mov
jp
mov
jb
push
push
call
adc
xlat
loope
jno
mov
jge
cmpb
add
nop
repnz
insl
fcomp
cmp
cmp
xchg
sub
sub
sbb
xchg
push
inc
lods
lahf
clc
and
bound
jb
push
lahf
push
rcrb
aad
das
jno
js
sti
subl
lcall
dec
fildll
je
xorb
push
xor
cmc
push
cmp
add
mov
sub
cmp
ljmp
mov
sub
add
jge
fadds
xor
scas
leave
aam
fldl
and
adc
stos
sbb
add
test
cld
iret
jge
mov
pop
ret
lcall
inc
sbb
insb
add
jge
insb
aaa
insb
add
aam
push
dec
fstl
xor
mull
mov
andl
cmp
xchg
mov
std
sbb
movsl
mov
mov
jne
enter
cld
fsts
pop
out
mov
pop
adc
push
js
dec
insb
data16
jp
popa
loopne
out
jl
arpl
xor
mov
out
or
stos
in
inc
mov
lock
push
and
stc
fists
loopne
and
in
cltd
int3
add
xchg
punpckhwd
mov
out
sbb
push
aaa
cmpsb
push
inc
fsubl
scas
out
jl
mov
xchg
je
adc
mov
cmp
push
outsl
insl
or
xchg
add
xchg
fisttpl
mov
ja
xchg
jo
dec
jnp
push
pushf
hlt
cmc
lret
addr16
sahf
jb
sub
in
and
out
mov
mov
jae
sub
push
pop
adcl
daa
fstpl
out
test
popa
xlat
lods
fs
add
cmpl
sub
pop
mov
scas
sahf
or
push
adc
jno
jo
mov
lds
insl
jmp
outsb
jmp
xor
lock
mov
filds
sbb
js
pop
mov
out
jecxz
jne
test
mov
fcompl
stos
dec
loopne
loopne
push
or
lods
and
roll
sub
and
pop
sti
pop
daa
test
mov
out
loop
fnstcw
shll
jl
adc
and
sbb
mov
fst
mov
lahf
and
adc
fsub
sub
cmp
ljmp
add
add
add
push
dec
dec
inc
pop
inc
pop
pop
shrb
sahf
jns
and
addl
jge
add
or
call
loop
test
mov
jl
push
shll
into
mov
pop
pop
xchg
test
mov
and
and
bnd
dec
out
pop
mov
stc
ds
pop
addb
mov
mov
ljmp
pop
cli
decw
fs
imul
pop
sbb
xchg
cltd
cmc
movsl
test
idivl
stc
out
push
stos
mov
sbb
mov
push
inc
addl
mov
add
pop
mov
div
cmpsl
iret
jmp
xchg
out
mov
jne
jb
jl
pushf
xor
pop
outsb
xchg
mov
or
hlt
mov
jg
jmp
icebp
xchg
in
in
inc
add
adc
cmp
iret
cmp
cmp
std
out
lcall
or
push
cld
mov
push
add
je
jae
mov
lock
imul
aam
pop
xor
std
push
mov
fists
cmp
dec
leave
iret
mov
jl
xchg
push
icebp
rcl
sti
xor
xchg
cmp
cs
filds
int
pop
imul
fstl
cmp
xor
xchg
pop
add
sub
adc
icebp
lahf
or
inc
fs
push
rcrb
push
add
mov
fisttpl
popf
pop
and
out
movsl
rcrb
xchg
dec
jne
add
pop
xor
repnz
sbb
loopne
mov
pop
lods
push
mov
mov
xchg
fstpl
fnsave
incb
push
vmovlpd
inc
sbb
mov
movsl
dec
add
xlat
or
lret
fiaddl
xor
outsb
fst
mov
sahf
sub
mov
push
pop
xchg
fldt
dec
jecxz
std
in
inc
mov
std
jmp
mov
in
stc
sbbb
lds
fucomi
je
sbbb
xor
out
or
fucomp
fimuls
mov
sub
andl
push
xchg
hlt
jae
adcb
adc
sbb
ja
inc
mov
xor
rcl
push
or
lret
mov
cmc
mov
in
fstl
cli
mov
push
pop
cmp
repnz
loope
mov
add
add
xchg
stos
js
repnz
sbb
mov
jecxz
lds
mov
insl
sub
outsl
cmpsb
lcall
or
icebp
sbbl
rcl
fisubrl
cmp
ss
vmwrite
mov
hlt
xor
idiv
mov
inc
push
xor
lret
cmp
dec
loopne
decb
cwtl
and
mov
xchg
pop
ljmp
rcrb
push
sarb
mov
dec
pop
jno
icebp
jne
in
loopne
lahf
ljmp
clc
aas
xor
and
shrb
cmc
out
gs
test
das
mov
sti
inc
imul
gs
mov
cld
fsubl
dec
out
es
scas
out
stos
dec
cmp
js
das
fucom
mov
xchg
jb
inc
adc
jnp
addr16
fs
movsl
cmp
pop
cmp
mov
xor
mov
cmp
stos
pop
cwtl
mov
imul
xchg
xor
add
pop
shlb
mov
sbb
movsl
clc
inc
hlt
sti
sub
and
xlat
cltd
popf
ss
es
push
dec
mov
shr
lahf
in
cmp
pusha
ljmp
insb
ja
lahf
shll
adc
sbbb
call
mov
mov
stos
mov
inc
dec
movl
out
sbb
test
ret
repnz
jns
inc
roll
ficompl
js
add
cltd
xor
jp
sub
sub
inc
sbb
fwait
mov
push
sbb
dec
enter
adc
push
cmp
sbb
movsl
aaa
popa
and
jl
outsb
sub
push
popf
int
xor
pop
push
fldenv
repnz
dec
cs
xor
test
and
push
sti
jo
loopne
outsl
and
imul
imull
lods
xor
insl
mov
mov
ficoms
pop
push
add
lahf
imul
lahf
jle
out
push
mov
out
repz
adc
lock
insl
xchg
push
ret
and
mov
push
mov
int
ret
fnstcw
mov
dec
push
sub
lret
in
out
pop
adc
std
push
aas
lahf
mov
xchg
repnz
sbb
pop
jp
jp
mov
pop
adc
jecxz
sbb
pop
dec
pop
sbb
and
fs
data16
cmp
lret
cmpsl
mov
mov
jge
std
mov
data16
hlt
in
lea
and
inc
out
sub
push
sub
jmp
call
jp
daa
rorl
push
pop
lahf
dec
in
sbb
sub
insb
and
cld
inc
jg
cwtl
cmp
cli
ja
sub
sbb
dec
inc
cli
xchg
lods
adc
mov
test
call
lret
aam
jns
push
jns
inc
xchg
aam
in
adc
push
aas
sti
ljmp
shl
leave
sbb
out
pop
icebp
lcall
mov
out
pop
jmp
cmpl
outsl
mov
mov
stos
subl
jae
or
adc
sbb
add
cmp
mov
mov
jl
jl
fdivs
push
sbb
adc
cmp
aad
sti
and
mov
ljmp
fldenv
pop
lods
pop
jge
loopne
add
jae
lret
repnz
pushf
mov
ret
inc
push
shlb
stos
cwtl
mov
and
cmp
movsb
imul
insb
ret
loop
ljmp
fists
inc
stos
fidivs
mov
xor
hlt
mov
jb
stos
sbb
sbb
add
out
add
add
dec
push
pop
push
pop
dec
mov
dec
push
or
out
mov
add
add
test
and
xchg
cmp
mov
loope
idivb
jg
ss
lods
jb
movsl
loop
orb
lea
cmp
add
dec
xor
xorl
int
lea
xor
lret
and
loopne
sub
inc
pop
xor
xor
in
jne
inc
pop
test
ss
daa
lods
stc
repnz
adc
cmc
mov
push
dec
push
mov
xor
imul
mov
mov
in
inc
lahf
mov
lahf
adc
icebp
cli
insl
and
xchg
sahf
int
cmp
push
out
sub
jmp
mov
adc
mov
mov
inc
xor
adc
add
or
inc
xchg
iret
mov
inc
mov
enter
roll
sub
xor
cmp
enter
negb
aaa
mov
cmp
adc
mov
and
popa
ljmp
scas
pusha
cmpsl
adc
lock
lods
sub
sahf
mov
sbb
pop
inc
mov
mov
mov
xor
push
add
subl
pcmpeqd
decb
jb
aaa
cmpsl
mov
xchg
push
push
jp
dec
pop
add
rorl
mov
popf
repz
jp
inc
mov
or
ret
push
add
sub
aad
daa
add
or
in
jmp
cld
sbb
ret
jmp
adc
in
mov
std
int3
dec
jp
mov
mov
push
sub
sbb
pop
jecxz
ljmp
pop
mov
adc
fs
sbb
pop
out
sahf
fstpt
jns
add
and
mov
movsl
pop
sbb
insb
mov
push
mov
inc
mov
mov
stc
enter
xor
loope
test
inc
lahf
dec
sub
es
xchg
negl
or
aas
out
popf
leave
mov
sub
mov
sbb
aaa
dec
add
int
jl
sahf
mov
fwait
pop
mov
repnz
bound
xlat
add
or
adc
add
jl
lahf
hlt
jl
jmp
test
push
popfw
insl
pusha
int
pop
aas
add
mov
stc
jle
loope
jns
or
lret
mov
int
fnstcw
xchg
jne
sbb
and
inc
mov
xchg
std
dec
popf
insb
add
pop
ss
inc
mov
cmc
pop
mov
outsl
xchg
or
addr16
pop
lret
jecxz
out
cmp
dec
rorb
je
lds
out
inc
or
sbb
xor
cli
sub
leave
jne
jns
push
mov
mov
push
notl
mov
movsl
ret
xchg
je
jecxz
mov
mov
inc
in
or
mov
cmp
ljmp
xchg
es
adc
movsb
cli
and
sar
pop
jg
push
addr16
fs
cmp
xchg
hlt
xor
fldl
inc
add
cmpsb
clc
or
je
add
das
idivb
aam
jp
pop
outsb
test
je
mov
pop
stos
aas
mov
into
ljmp
std
xor
mov
cwtl
push
out
int
mov
or
mov
jb
cmp
idivb
xlat
daa
mov
sbb
xchg
movb
jnp
xchg
repz
mov
pop
push
sbb
inc
jmp
push
push
and
cmpsl
mov
int
push
lods
repz
add
orb
push
test
push
jl
addr16
sub
and
in
inc
jl
jae
fnsave
or
das
cmp
push
sub
aad
pop
mov
xchg
imul
cmp
cmp
int
stos
popf
out
pop
mov
shl
add
fcomps
and
dec
repz
lods
adc
mulb
enter
cmp
mov
push
cmp
sbb
jo
xor
inc
jge
or
mov
sub
xchg
push
xlat
inc
mov
js
or
lret
jge
dec
mov
out
and
push
cmpsl
das
xor
push
shlb
and
sbb
xor
xchg
out
mov
mov
aam
xlat
or
test
lods
sbb
sarl
out
pop
fwait
cmpsl
call
cmp
aas
jg
cltd
lock
cli
push
sub
xchg
mov
stc
adc
fdivs
int
mov
into
out
jmp
sub
push
mov
inc
scas
push
jecxz
fbld
cld
fdivrs
mov
ja
cmpsb
dec
mov
or
stc
dec
aam
inc
jne
mov
sbb
push
lcall
jge
cli
mov
pop
lea
imul
jae
scas
pushf
out
pop
mov
popa
sbb
xor
sbb
call
repz
push
pop
mov
ret
pop
ds
ja
and
jae
jp
jge
mov
fsubl
repz
xor
sti
xchg
mov
outsb
inc
inc
inc
out
push
loope
pop
loopne
pop
sbb
xchg
pop
repnz
pop
cld
aaa
mov
push
and
int3
pop
mov
lods
icebp
movsb
xchg
dec
popa
ja
pop
add
or
sarb
inc
push
ret
int3
out
mov
mov
xchg
aad
cmp
or
mov
xchg
add
jno
out
sbb
mov
cltd
fbstp
push
xlat
jnp
pop
sub
movsb
out
test
fcmovbe
out
sbb
gs
sahf
mov
popf
inc
lods
aas
cmp
or
lret
fcmovu
lret
outsl
push
xor
repz
lcall
sti
pop
or
jne
jns
adc
in
add
add
inc
dec
dec
pop
pop
push
sub
xchg
fisttpl
add
add
jns
jg
movsl
push
arpl
push
repnz
xor
pop
aaa
cli
sahf
adc
sub
ss
or
push
gs
es
cmp
js
mov
aaa
in
or
mov
adc
in
out
movsb
jl
push
lahf
sbbl
or
inc
loopne
mov
scas
xor
push
pop
out
je
outsl
or
cmp
adc
mov
sbb
mov
mov
enter
mov
push
scas
aad
inc
cmp
pop
ret
jne
xchg
lret
in
adc
iret
mov
fidivl
dec
cs
cmp
ret
aad
mov
dec
xchg
jne
popf
addr16
sub
scas
adc
sub
cs
and
mov
gs
xchg
mov
push
fmuls
adc
insl
jmp
in
pop
mov
stos
rcl
fs
bound
xchg
push
mov
and
push
sbb
and
mov
mov
mov
cmpsb
pop
jge
pop
dec
jb
std
pusha
push
or
sub
sbb
cmc
push
xorl
cmp
xchg
cmpsl
repz
dec
and
adc
iret
ljmp
push
dec
pop
mulb
cmp
add
xchg
push
jge
xchg
outsb
sbb
xlat
fwait
imul
mov
out
sbb
pop
xchg
adc
cmpsb
pop
sbb
sbb
sbb
das
mov
xor
jbe
and
dec
in
dec
xor
ds
stos
mov
testl
xchg
add
je
and
frstor
dec
push
loope
rclb
mov
sahf
scas
aaa
pop
xlat
shr
popa
pop
lds
stos
mov
or
js
pop
jnp
arpl
orl
xchg
cs
mov
mov
mov
dec
push
rorl
repnz
loop
inc
bound
sbb
push
cmpsb
pop
insb
lret
scas
pop
mov
adc
cmp
sub
fistpl
popa
loope
cmp
arpl
std
ss
pop
and
mull
dec
add
cmc
ret
or
pop
pop
pop
xor
scas
jp
in
xchg
inc
jno
xchg
push
ja
in
cwtl
sar
lods
pop
mov
mov
mov
ret
xchg
push
lcall
cmp
jge
js
mov
pop
adc
jl
cs
sub
js
sub
xchg
push
sahf
mov
sub
mov
shr
xchg
pop
lea
stos
lods
fcmovnb
daa
cli
jo
or
repz
jg
imul
inc
daa
clc
cmpl
xchg
and
jp
fwait
push
lret
add
sub
jecxz
int3
les
push
std
icebp
or
push
cmp
dec
fidivs
lock
cmp
mov
je
aam
rcll
int
stc
daa
sbb
mov
inc
mov
lds
xchg
add
nop
xor
nop
jecxz
jp
dec
clc
xchg
pop
in
pop
add
sub
mov
xchg
ljmp
xor
cmpb
push
lock
mov
push
inc
mov
mov
add
lcall
fs
ficoms
mov
lea
ja
and
test
add
fucomi
dec
push
xor
cmc
add
dec
imul
jae
daa
and
in
mov
mov
and
fcompl
shr
jbe
imul
add
cli
or
ss
sub
inc
push
lret
lods
pop
outsb
push
scas
mov
mov
xor
cld
xor
or
pushw
xchg
mov
mov
aam
pop
pop
sub
xor
sub
mov
pop
dec
jg
push
mov
mov
add
stos
lret
pop
int3
mov
mov
sub
xor
or
mov
pusha
into
movsl
cs
pop
mov
jp
popa
call
ds
push
sar
inc
fisttpll
and
fidivrl
mov
repnz
leave
cmpsl
ror
inc
xor
mov
jle
in
sbb
test
jno
dec
xor
dec
push
inc
addl
rcrl
xchg
imul
or
in
mov
or
push
push
mov
gs
adc
sbb
mov
sti
test
cmp
lahf
stos
sbb
repnz
mov
add
stos
mov
xchg
pop
adc
repz
outsl
cltd
xor
jle
mov
pop
in
mov
enter
hlt
out
jne
insb
jno
xchg
cmpsl
pop
in
cmp
divl
adc
push
cmp
std
xchg
push
fwait
pop
mov
mov
js
mov
call
into
mov
inc
mov
popf
pop
mov
add
daa
jnp
mov
adc
xchg
push
cmp
in
mov
xchg
hlt
cmp
adc
aam
push
push
lods
mov
cmpsl
sbb
add
sub
mov
mov
stos
xchg
inc
push
push
jno
bound
jg
mov
or
inc
xchg
jbe
call
and
cmp
mov
pop
cwtl
dec
sbb
dec
sub
bound
ret
fldl
stos
lea
push
aad
nop
xorl
jmp
lcall
aas
ja
sarb
push
test
test
jge
mov
or
jl
in
push
mov
cmc
test
push
mov
inc
in
dec
xor
cltd
and
pop
xchg
dec
push
xlat
mov
jecxz
xchg
bound
mov
pop
sub
aad
push
mov
fstl
sbb
add
int
negb
adc
daa
pop
scas
mov
add
inc
dec
dec
dec
dec
dec
inc
dec
sub
lods
outsb
xchg
inc
xchg
add
jge
add
pop
xchg
sahf
stos
in
xor
push
fistl
fs
lods
add
fs
xchg
mov
pop
mov
int3
jne
push
aam
fistl
inc
cwtl
xchg
out
adc
mov
jae
cwtl
xchg
icebp
inc
jb
inc
std
add
in
insl
pop
dec
or
cmp
lds
in
call
neg
cmp
push
sub
test
outsb
shlb
pop
or
dec
adc
or
iret
jb
sub
arpl
mov
dec
vcvtps2pd
test
push
addr16
xor
stc
cs
xchg
xor
xchg
outsl
js
punpcklwd
stos
fsts
xorb
add
scas
jns
leave
cltd
scas
cmpsl
movl
sbb
cli
mov
in
test
mov
scas
xchg
dec
leave
adc
and
outsl
push
push
mov
leave
mov
movsb
ds
xorl
not
add
adc
and
xor
aam
movsb
insl
imul
out
dec
rorb
mov
movsl
mov
sub
push
lcall
pop
push
lret
call
rcrl
or
fwait
pop
aam
out
mov
cs
inc
iret
das
adc
stos
mov
loope
fs
xchg
jl
out
fildl
xchg
test
jo
dec
sbb
cld
gs
andl
jl
std
sub
test
jne
das
adc
xchg
xchg
sbb
sub
arpl
lret
cmp
lods
gs
push
std
fadd
mov
pop
xchg
mov
sar
ret
push
bound
add
mov
push
pop
shl
xor
aad
pop
and
mov
or
push
mov
dec
jno
sub
jecxz
cmp
add
inc
fisttpl
sub
mov
inc
adc
outsl
pop
call
negl
btr
sub
jmp
ret
sbb
or
data16
mov
mov
dec
in
jb
pop
rcrl
sbb
je
bound
xchg
fwait
xchg
add
pop
cli
and
jecxz
sbb
mov
mov
dec
and
xor
aam
je
cmpsl
stos
mov
mov
inc
icebp
sub
jecxz
in
and
roll
ret
pop
push
add
xchg
stos
fs
xchg
mov
fidivrl
xor
mov
aaa
int
mov
lock
pop
ret
int
inc
xchg
pop
push
and
fistpll
xchg
in
dec
dec
dec
cmpb
int3
pop
and
push
xchg
sbb
lock
cmp
jb
sbb
push
imul
pop
jo
mov
in
jne
fwait
mov
inc
leave
mov
mov
rolb
test
mov
push
jbe
push
ja
and
andl
xlat
xchg
loope
repz
cmp
adc
lods
xchg
jne
outsl
mov
les
mov
fmull
test
pop
pop
adc
xchg
push
sub
xchg
add
cld
sub
jmp
jmp
mov
add
fisttps
idivl
adc
fistl
rolb
dec
or
pmulhuw
sbb
js
aam
test
in
lock
cmp
mov
cmc
inc
push
stc
arpl
adc
cmpsb
test
mov
mull
dec
pop
gs
mov
jmp
lods
shrb
shll
test
jo
add
cmp
or
and
jbe
std
dec
lahf
call
rorb
push
mov
fstps
push
lret
rcl
pop
fdivs
cmp
push
iret
leave
in
push
adc
sti
ss
xlat
pushl
jbe
mov
push
sub
repz
add
sbb
xor
cli
fcomps
push
or
fcoms
and
sbb
mov
xchg
in
enter
insl
imul
push
xor
or
add
imul
sbb
mov
test
test
cmp
pop
mov
stos
sbb
js
jg
scas
lods
xchg
mov
jo
xor
imul
inc
pop
mov
lds
daa
in
idivl
mov
loopne
push
pop
in
movsl
sub
push
jne
loopne
outsl
repnz
xchg
andnps
shlb
jo
js
mov
xor
mov
cmp
mov
push
cwtl
call
xor
mov
jle
xor
mov
pmullw
addr16
or
mov
or
das
ret
dec
or
mov
dec
sahf
dec
fnstsw
out
push
nop
jns
xor
sarb
fsubp
mov
fisubs
leave
mov
aas
add
mov
cwtl
rcrl
pop
div
push
lea
mov
dec
mov
pop
pop
jge
in
or
test
pop
es
stc
fwait
enter
push
insl
mov
lods
dec
sub
lcall
icebp
ret
cltd
imul
cli
adc
and
addr16
mov
aam
sbb
jns
sub
and
adc
jecxz
cmp
jg
or
mov
pusha
lods
popa
dec
and
shrb
inc
into
mov
sbb
adc
and
or
mov
lods
out
cltd
mov
and
mov
jns
stos
fisubrs
xor
mov
dec
inc
xchg
push
lock
rorb
loope
pop
mov
mov
pop
jnp
imul
mov
xchg
cmpsl
jbe
testl
push
fcomip
sti
mov
test
sub
dec
lea
insb
das
xchg
mov
sahf
out
inc
push
push
adc
bound
sbb
pop
xlat
xchg
xor
sbb
in
add
add
inc
push
pop
pop
push
dec
cmp
or
popf
add
jge
add
je
push
lock
decb
mov
mov
imul
mov
xor
insb
dec
push
ljmp
test
ret
fwait
cmp
flds
lock
rcrb
ja
pop
js
sub
xchg
dec
or
addl
push
lea
mov
popf
dec
push
pop
pop
push
mov
push
pop
push
les
and
ret
pop
in
pop
inc
or
stc
xchg
jne
xchg
aam
in
inc
xor
jle
call
pop
push
daa
rolb
dec
xchg
outsb
mov
xor
lock
mov
lea
pop
jle
or
sub
outsl
js
cmc
adc
push
lret
push
loopne
in
nop
cmpsb
xor
sahf
dec
push
cs
fs
sbb
lret
cltd
sbb
jmp
mov
xchg
xorl
es
fcomi
mov
pop
dec
push
nop
stc
mov
es
pop
ret
js
subb
inc
jp
inc
jmp
fiadds
xor
notl
jbe
cs
mov
aaa
and
pop
sub
fdivrl
xchg
mov
test
testb
xor
outsl
cmp
shll
pop
xchg
pop
stc
test
xchg
mov
mov
js
iret
sbb
ljmp
push
sbb
sub
add
fcmovnbe
iret
sub
lock
push
jmp
vpmaxsw
cmp
adc
inc
adc
les
sahf
adc
lcall
mull
inc
jno
pop
fwait
in
mov
xor
mov
cwtd
addr16
sub
and
hlt
fmull
mov
imul
adc
jge
add
sub
pop
cs
hlt
mov
nop
out
mov
loopne
inc
mov
loop
push
fisubl
push
filds
push
fisttpl
cltd
lcall
jl
adc
cmp
jmp
shl
pop
sarl
add
test
add
mov
jae
jge
subl
insb
outsb
inc
mov
lods
insl
lret
enter
sti
pop
xacquire
jl
adc
mov
jp
inc
lock
xor
inc
fcomps
or
adc
push
ret
xchg
shll
sbb
push
mov
sub
mov
xchg
xchg
adc
sti
xor
les
or
jle
push
pop
insb
stc
imul
pop
mov
and
insl
dec
outsb
inc
movsl
arpl
mov
jle
sbb
pop
pop
dec
sub
aam
jns
add
in
cmpl
scas
scas
or
or
mov
into
jp
and
pop
fcomps
dec
mov
into
popa
or
stos
dec
pushf
add
sbb
pop
std
cltd
pop
or
mov
lds
les
ret
jecxz
and
lret
sbb
add
fstp
pop
xor
cwtl
push
inc
test
dec
fcompl
or
mov
jge
mov
aad
pop
enter
cmp
adc
xchg
loope
adc
sbb
push
and
or
push
mov
insb
cmp
jb
xor
mov
sarb
push
addr16
cld
mov
jb
enter
mov
mov
mov
push
andb
lret
and
and
fidivrl
adc
fiadds
movl
or
mov
and
fwait
sbb
xor
out
push
inc
ret
inc
cmp
in
data16
xlat
clts
jg
in
mov
mov
push
xchg
shrb
shrb
divb
push
adc
pop
ja
sbb
jno
scas
out
cmp
adc
sbb
or
xchg
mov
adc
call
and
fiadds
mov
movsl
push
fdivl
shlb
orb
inc
jo
test
pushf
jecxz
into
ds
or
xchg
fstps
dec
sti
movsb
es
sub
mov
inc
lds
fistpll
jmp
enter
popf
mov
push
jnp
jae
push
arpl
rol
cmp
test
inc
mov
mov
psubsb
flds
cmp
push
inc
or
push
or
pop
sub
sub
pop
pop
add
ja
or
mov
push
mov
adc
lock
inc
pop
xor
sub
gs
xchg
scas
xchg
adc
aad
int3
push
out
push
push
repz
push
andb
jmp
pop
ret
fwait
cmp
adc
andb
loop
or
out
mov
sarl
sbbb
mov
aad
inc
xor
mov
mov
jbe
aad
cmp
test
xchg
out
je
mov
outsl
mov
push
cld
inc
mov
je
adc
adc
hlt
leave
mov
mov
xchg
or
movntps
fstl
jmp
test
mov
pop
movl
or
in
mov
cltd
stos
in
and
je
mov
push
cli
sub
outsl
sbb
mov
cmpsl
in
xchg
mov
mov
pop
lcall
cmp
repz
stc
insb
pushl
lods
in
cltd
orl
dec
scas
rolb
nop
es
jmp
repnz
loopne
push
repnz
int
inc
jno
fcoms
enter
xchg
xchg
rclb
cmp
push
repz
mov
push
and
shlb
loop
xor
gs
enter
cli
repnz
fnstcw
jp
das
cmp
test
xchg
insb
xchg
lods
loop
sbb
xchg
inc
pop
dec
push
inc
pop
xchg
int3
arpl
lret
cmpsb
mov
dec
mov
add
add
dec
inc
dec
push
pop
pop
push
inc
cmp
dec
movsb
add
jge
add
clc
or
push
enter
imul
sub
aam
adc
movsb
mov
mov
mov
lock
sub
repnz
inc
mov
in
inc
pop
xchg
xorl
fadd
mov
leave
adc
leave
mov
inc
cmpsl
push
xchg
add
xor
lea
and
outsl
lods
adcl
cltd
clc
outsb
dec
pushf
popf
es
jae
call
addr16
lock
xchg
adc
mov
lods
pop
int3
or
imul
add
xchg
imulb
in
stc
sbb
ljmp
push
or
pop
sub
xchg
flds
or
mov
ret
mov
add
dec
inc
mov
cltd
sarl
ds
dec
cmp
mov
out
xchg
mov
repz
decb
mov
test
addl
adc
pop
xchg
loop
jge
cld
icebp
push
mov
xor
outsb
jmp
lcall
aaa
stos
jbe
cmpsb
in
fnstenv
lods
xchg
sbb
inc
jp
push
xor
jns
xor
aad
push
mov
repz
dec
addr16
xor
inc
fimuls
hlt
pushf
test
fs
ja
or
push
mov
ja
je
xchg
lahf
xchg
sbb
dec
lods
sarb
cltd
mov
out
mov
es
cmp
mov
loop
fstl
inc
enter
sbb
clc
aam
dec
int3
in
stos
and
mov
sub
pushf
pop
pop
mov
push
add
inc
or
movsl
and
icebp
or
adc
xor
adc
jns
pop
xchg
xchg
lea
cli
xchg
and
rcl
pop
cli
jge
push
mov
mov
adc
add
xchg
jp
push
sbb
and
jl
push
loop
imul
xor
xor
jg
iret
lds
jle
mov
inc
and
and
ficoml
mov
mov
push
in
cmp
fimuls
lods
repnz
rcrl
icebp
adc
loopne
mov
pop
cmp
inc
and
filds
push
xchg
dec
sti
hlt
data16
test
fsub
test
stos
sbb
jl
push
or
int3
js
xor
add
xor
cmpsb
xchg
insb
jo
push
xchg
push
test
push
pop
push
jno
sub
es
dec
sbb
les
lock
xchg
mov
pop
mov
ja
xor
lds
shl
or
add
push
loope
push
pop
and
adc
dec
adc
inc
shlb
cmp
pop
in
es
cmp
fdivl
xchg
xchg
sahf
in
lcall
cmp
mov
mov
jbe
inc
test
andl
imul
jbe
in
je
aam
shr
stos
or
cld
adc
rorl
and
ljmp
mov
sub
repnz
or
js
mov
pop
mull
xchg
popa
insb
ret
mov
jp
pop
fisttpll
and
fsubs
push
mul
xchg
enter
ficoml
aas
stos
cmp
rolb
jae
pop
mov
mov
push
inc
mov
push
sbb
push
in
fildl
cld
insl
call
xor
sub
mov
or
xchg
fmull
bound
iret
inc
lock
addr16
lds
insb
das
ljmp
fldl
push
fildll
and
ret
jbe
sub
fcmovu
rcrb
gs
jl
sub
shrb
imul
jmp
and
test
mov
pusha
insb
out
mov
cmp
into
js
mov
xor
push
sub
cmp
cmp
mov
in
mulb
xor
dec
mov
call
jnp
das
ret
cmpsl
sbb
jno
jl
jg
xor
scas
into
mov
scas
stos
jl
loopne
sbb
jno
mov
adc
sahf
ljmp
pushf
outsb
dec
jne
divb
iret
xchg
xlat
leave
mov
sbb
shlb
jb
iret
out
rorl
scas
xchg
xchg
jle
mov
mov
sbb
mov
or
push
int
cwtl
cmpsl
imul
pcmpgtw
aaa
imul
push
ret
rcl
movsl
jg
push
inc
cmp
add
cmp
call
add
ja
out
mov
pop
dec
test
mov
dec
cmp
scas
sbb
das
or
sbb
cmp
addb
fsubrp
inc
js
mov
lock
jno
pushf
loope
daa
and
jne
iret
mov
pushf
or
fwait
sbb
negb
cmc
ret
mov
mov
fsub
mov
xchg
bound
pushf
and
pop
pop
iret
sub
pop
xor
stos
jbe
mov
dec
das
mov
mov
je
inc
or
shl
testl
scas
mov
sbb
jg
sbb
in
jno
lahf
jne
lret
adc
sbb
and
sbb
ja
inc
xchg
mov
mov
testl
xlat
popf
pop
pusha
ja
out
jno
inc
in
lahf
test
in
or
jmp
idivb
pop
call
lea
mov
sbb
sahf
sbb
jp
daa
mov
mov
out
pushf
sbb
aam
popf
mov
call
mov
ss
mov
insl
inc
xchg
xor
add
mov
adc
xchg
aad
xchg
scas
lock
mov
sahf
cwtl
dec
jo
ljmp
or
fstpt
mov
fnstsw
sti
push
or
lods
mov
push
adc
popf
adc
push
daa
jl
push
xor
add
pop
pop
pop
pop
push
dec
mov
jno
mov
push
add
jno
adc
mov
xchg
dec
int3
jno
in
outsb
lahf
adc
or
outsb
fistps
jmp
add
loopne
stos
mov
imul
sbb
mov
loope
sub
jo
add
cmc
xchg
lock
mov
dec
aad
rorb
js
inc
inc
cmc
ds
sbb
cmpsw
ljmp
push
sahf
push
push
or
cld
inc
fisttpll
or
dec
scas
insl
pop
daa
pop
mov
aad
add
vpunpcklqdq
outsb
mov
cmc
cld
add
imul
orl
ljmp
negb
cmpsb
out
insb
mov
mov
lds
jns
popf
cs
sub
mov
xchg
inc
call
jae
xor
pop
dec
inc
movsl
iret
dec
idivl
push
bound
cmpb
hlt
std
mov
clc
push
arpl
addr16
pushf
mov
addr16
out
aad
hlt
outsl
lret
push
fs
jmp
pop
pop
adcb
push
pop
dec
pop
push
or
es
jge
mov
popa
mov
das
stos
lock
fdivrl
pop
dec
fstl
pop
ror
mov
inc
rclb
pop
sbb
divb
jge
arpl
pushf
fbld
aam
jo
dec
test
xchg
std
pop
mov
dec
push
xor
icebp
cmp
mov
pop
inc
sarb
mov
nop
xchg
inc
roll
cmc
jecxz
loope
test
mov
sub
aad
jmp
push
jmp
pop
je
lcall
dec
jnp
outsl
mov
addr16
xchg
daa
jne
xor
inc
daa
adc
and
outsb
or
push
or
jmp
jnp
jp
mov
mov
push
loop
sub
sbb
rcrl
stos
rcrb
out
dec
mov
sti
jp
cmpsl
inc
pop
in
or
in
mov
loope
inc
mov
enter
insb
outsb
cmp
jb
cmp
daa
ss
xor
and
leave
ljmp
or
jp
and
or
movsb
inc
and
pop
sub
dec
shr
pop
outsl
and
mov
mov
mov
jecxz
inc
fimuls
mov
adc
jle
and
js
cli
or
inc
loopne
scas
lds
inc
push
daa
data16
add
dec
testb
nop
dec
fnstenv
push
negl
and
hlt
jle
out
shl
imul
add
sti
sti
add
mov
mov
icebp
cli
mov
sbb
mov
sbb
nop
jmp
xchg
xchg
sbb
pusha
repz
jecxz
mov
ja
push
sahf
test
in
mov
loope
repnz
stos
mov
pop
push
iret
outsb
fidivl
testb
mov
in
mov
ss
mov
shll
fimull
xor
sbb
enter
daa
xchg
icebp
mov
pop
xchg
loope
pop
mov
dec
mov
mov
dec
xchg
push
and
push
mov
mov
mull
add
mov
inc
pop
xchg
std
into
mov
sbb
mov
add
pushf
outsl
mov
jnp
enter
push
lods
cmp
mov
cmpsb
and
mov
mov
or
je
and
outsl
inc
sub
mov
and
push
or
jp
mov
stc
push
cmpsl
xchg
xorl
push
clc
inc
imul
jo
xchg
adc
mov
hlt
pop
mov
xor
stos
iret
icebp
mov
xchg
dec
negl
push
cmp
jge
dec
mov
shrl
out
inc
push
add
in
mov
or
popa
mov
add
jmp
enter
stos
cmp
cmp
stc
dec
jmp
subl
cmpsl
inc
push
mov
or
xchg
repz
mov
fimuls
push
test
xchg
mov
cmpsl
stc
dec
pop
and
inc
shlb
sbb
ret
and
add
cmp
dec
pop
dec
jne
call
xchg
ja
cmp
das
pop
cld
or
js
add
test
fprem1
push
ljmp
movsb
mov
mov
arpl
pop
adc
cmp
xchg
fstpl
jl
dec
jg
ss
fisubrl
jl
cmp
rorb
and
mov
imulb
ret
test
out
push
add
push
mov
aas
add
inc
push
dec
sbb
lods
lods
pop
shlb
out
ret
int3
subb
add
sub
sti
sub
mov
lcall
lahf
pop
divb
dec
sbb
mov
jmp
stc
push
mov
lds
mov
mov
push
das
xchg
sbb
dec
outsl
mov
popa
andb
jb
icebp
je
loopne
fmulp
rorb
mov
orb
dec
shr
xor
sub
std
subl
out
enter
jo
cmp
add
pop
or
jb
loope
cwtl
jne
mov
mov
out
jle
mov
fistpll
dec
pop
ljmp
call
sub
adc
mov
inc
adc
push
mov
cmp
mov
and
gs
je
fisubl
gs
and
xchg
lcall
addr16
and
imul
pop
fadd
ljmp
jp
dec
pop
sub
sub
adc
fwait
push
push
rorb
cmpsl
popa
jecxz
in
loop
ret
aaa
inc
jp
push
ficoml
insl
outsl
mov
pop
push
dec
popf
push
sub
mov
cmp
dec
dec
loop
jg
inc
roll
xor
xchg
sub
jbe
jns
add
inc
inc
inc
push
inc
push
push
push
outsl
pop
mov
stc
cmp
add
ds
add
fldenv
and
insl
and
pushf
cmp
sub
arpl
sbb
add
jecxz
add
inc
lea
outsb
mov
sub
lret
mov
xor
push
fists
pop
cmp
hlt
adc
inc
inc
pushl
and
inc
ss
cmpb
pop
leave
subb
inc
js
repnz
fistl
pop
jb
inc
push
xor
lcall
dec
sub
sti
inc
mov
pop
sbb
sbb
sbb
xlat
loope
push
mov
fsub
out
ret
ds
mov
push
dec
test
jp
fcom
cmpsl
das
mov
add
loop
mov
push
adc
xor
aam
jmp
out
sub
fnsave
cmp
cs
push
push
mov
sub
jecxz
movb
shll
stos
shr
adc
lods
mov
cmp
xchg
pusha
mov
mov
das
pop
scas
popa
cwtl
lcall
shrd
jae
adc
or
pushl
adc
not
cmp
dec
push
out
adc
xor
jns
xor
divps
test
mov
pushl
mov
jbe
inc
or
inc
xor
iret
enter
orb
int3
rcll
and
pop
xchg
lea
mov
xchg
cmpsb
sbb
pushl
cmc
es
lea
xchg
enter
jmp
or
push
je
push
movsb
enter
cmpl
nop
repz
xor
lret
lahf
xor
mov
adc
scas
add
fildll
gs
pop
daa
popf
xor
lods
adc
cld
cmp
clc
push
mov
and
jmp
out
test
xor
jae
repnz
idivb
das
dec
andl
dec
lods
mov
inc
popf
std
pusha
mov
pushf
rcll
shrl
movsl
jo
pop
hlt
inc
stc
sub
mov
lcall
lret
sub
push
iret
adc
aad
mov
jge
inc
lock
push
movsl
jbe
shlb
inc
fistpl
stos
mov
mov
repnz
adcb
loopne
jns
mov
xor
stc
cld
rclb
icebp
jle
add
jnp
leave
dec
mov
xchg
test
cmp
bound
mov
xchg
or
and
mov
sub
nop
cmpsb
or
jno
sub
inc
mov
mov
xor
and
jle
xchg
stos
cmp
push
ficompl
imul
inc
xor
lahf
insb
pushf
xlat
jae
lret
cmp
xchg
cmp
rclb
fistps
repz
jbe
notb
xchg
popl
cmp
adc
jo
cmp
cli
js
lret
sub
das
adc
dec
mov
xorl
xor
aaa
or
sub
sub
jecxz
inc
lcall
pop
push
fs
sub
pushf
push
lret
inc
jecxz
adc
imul
xchg
popf
movsl
or
es
imul
loope
daa
mulw
movsb
out
adc
pop
mov
in
mov
in
insb
incl
push
pop
out
ror
dec
jns
inc
adc
popa
test
lret
sbb
movsl
outsb
dec
mov
aas
mov
add
lods
out
notl
pop
jge
popa
jnp
mov
mov
and
or
mull
push
xchg
pusha
popf
pop
jnp
addb
ljmp
pop
leave
mov
mov
mov
call
cld
shl
outsb
dec
gs
jle
mov
imul
into
sub
ficompl
mov
nop
scas
xor
xchg
and
shrl
cmc
in
loope
das
cmp
shll
pop
cmpsb
imul
int
call
jmp
popa
mov
lock
arpl
pop
push
sbb
outsl
scas
inc
xchg
test
adc
jbe
repz
dec
xorb
adc
negl
lret
std
fimuls
ljmp
mov
dec
aad
and
lahf
daa
mov
sti
call
dec
push
push
add
ss
mov
push
testb
mov
and
adc
mov
add
sbb
fmull
mov
push
pop
adc
mov
push
jbe
xor
cltd
stos
loope
imul
push
xchg
mov
in
aam
fsts
inc
ret
mull
dec
jo
insl
xchg
enter
lret
loope
push
nop
nopl
cmpsl
xchg
fadds
cli
lods
xchg
fcomi
repz
cltd
or
ds
push
xor
test
mov
xchg
mov
negl
or
sbbl
stos
fidivs
fwait
dec
sub
imul
mov
ret
insb
ja
pop
es
xor
xchg
mov
cs
loope
sbb
shr
jmp
sahf
icebp
fld
inc
xchg
dec
push
shlb
lea
cmp
inc
or
orb
cmc
imul
int3
cli
cld
adc
movsl
add
dec
xor
gs
jns
sub
data16
jnp
adc
pop
sar
push
mov
outsb
cmp
and
mov
icebp
and
pusha
into
and
dec
add
sbb
jbe
cli
xchg
mov
lret
pop
pop
imul
push
call
std
insl
std
push
fcoml
xor
inc
pop
push
je
jg
mov
cmp
insl
jae
mov
mov
pop
cmp
arpl
lods
cmc
cld
gs
pop
out
pop
inc
mov
mov
cmpsl
lcall
cld
sub
cwtl
add
add
push
dec
pop
dec
pop
push
stos
mov
stc
ret
lret
add
jge
add
add
xchg
cmp
push
adc
xchg
inc
adc
jae
ficoms
jmp
je
lea
pop
lea
xor
outsb
idivl
mov
mov
adc
xchg
imul
pop
mov
cld
sbb
mov
add
mov
inc
addr16
ror
sub
inc
push
sbbb
das
push
inc
loope
ss
pop
daa
stos
mov
pop
subb
mov
jg
push
xchg
insb
imul
mov
xchg
add
ljmp
mov
sbb
shll
mov
mov
cli
mov
cmc
outsb
dec
dec
and
icebp
inc
rcrl
cmc
mov
fs
ljmp
mov
arpl
dec
orl
jbe
ss
inc
mov
jmp
cmp
lods
jmp
in
adc
dec
and
mov
or
in
and
adcl
int
push
les
cmp
adc
cmp
xor
adc
jae
dec
add
lods
xchg
test
jecxz
stos
lret
add
and
rorl
enter
or
sub
mov
out
jge
inc
sahf
push
push
and
fsubr
jg
pop
je
jae
cltd
and
or
iret
fsubrl
mov
hlt
xor
ljmp
imul
imul
jmp
sbb
scas
or
cmp
xchg
or
insb
shr
or
xchg
pop
popa
syscall
nop
dec
js
adc
adc
pop
mov
or
movsl
mov
icebp
out
lret
iret
fisubrl
mov
mov
repnz
dec
js
push
in
mov
jne
lahf
fildl
jb
outsb
aas
mov
xor
jno
mov
imul
adc
sbb
pusha
js
and
pushf
negl
jno
jns
ret
popa
pop
loop
mov
pop
xchg
mov
cmp
jae
inc
movsl
imul
insl
mov
hlt
or
xor
xchg
fdivs
jns
out
sbb
psrlw
mov
dec
mov
shl
fstpl
es
xor
aam
dec
pop
sbb
dec
sbb
or
dec
xchg
add
mov
mov
mov
jno
adc
movsb
aaa
aad
pop
loopne
and
pop
sbb
lods
enter
cs
pop
cmp
push
pop
int3
xchg
or
pop
sub
jmp
jecxz
pusha
addr16
dec
add
mov
aas
mov
jmp
mov
out
jecxz
mov
mov
jmp
pop
or
call
lret
jle
mov
sahf
shl
jb
sbb
cmpb
inc
add
aad
popa
daa
fidivs
into
aas
or
scas
xor
leave
xor
ljmp
loopne
adc
add
lods
dec
les
pushf
pop
cmpsb
lret
popf
icebp
adc
sub
loope
lahf
aaa
lock
inc
shl
call
sub
mov
subb
adc
sti
or
fwait
leave
mov
mov
fidivrs
cmp
sub
nop
in
dec
mov
push
es
inc
push
mov
stos
mov
jnp
aas
lds
mov
cmp
outsl
xchg
mov
inc
lods
es
subl
mov
repz
dec
sbb
rorl
loop
xor
adc
cmp
in
dec
ret
push
mov
pop
inc
dec
dec
sub
jmp
cmc
cmpl
xlat
jle
mov
inc
mov
push
push
adc
ja
lods
cli
jns
in
xchg
jecxz
test
scas
cli
push
lods
mov
loope
pop
sub
adc
push
iret
dec
jl
imulb
rorl
in
mov
les
cmp
push
adc
enter
fldt
and
sub
or
pop
xor
mov
dec
xchg
out
cmp
test
jg
xlat
icebp
push
cmp
inc
cmpb
sbbb
aad
sbb
cld
int
lods
les
sub
nop
xor
cmp
orl
and
sub
dec
and
fnstenv
sub
je
scas
scas
cmp
sbb
mov
inc
push
xor
out
movsb
fsubrs
mov
push
mov
outsl
and
in
hlt
into
sbb
es
cltd
scas
ficomps
dec
into
cmp
mov
mov
andl
sahf
into
je
lret
jl
jg
pop
add
mov
cmpsb
lea
fucom
fwait
or
and
nop
mov
pop
adc
ljmp
hlt
inc
out
and
add
scas
and
cwtl
pop
test
pop
shll
xor
addb
jmp
sbb
xor
fs
mov
repz
inc
sub
xchg
push
xor
mov
mov
xor
cltd
pop
fldl
xchg
popa
icebp
mov
shrl
cld
lds
adc
xchg
fsubrl
bnd
bound
mov
mov
and
xor
and
xor
imul
and
jb
jno
loopne
push
mov
inc
ret
iret
mov
sub
lods
push
ljmp
shll
enter
xor
adc
or
sbb
xor
ret
add
jle
mov
out
or
fcompl
insl
sbb
ja
outsb
dec
sbb
icebp
ret
mov
stos
dec
push
movsl
daa
add
cmp
fldt
sbb
adc
fildl
aad
add
adc
fmull
pandn
aad
fsubs
pop
xor
lock
push
xchg
lcall
aas
in
add
jns
dec
testb
jb
and
mov
sub
and
dec
inc
mov
cmpsb
gs
add
add
dec
push
pop
push
pop
dec
idivb
jns
inc
push
pop
xor
add
mov
lock
mov
cwtl
mov
das
sbb
pop
fnsave
daa
adc
xchg
nop
cltd
mov
cli
inc
mov
rorl
sub
lds
das
xor
push
daa
jne
sbb
xchg
jae
inc
in
lahf
inc
imul
mov
scas
mov
xchg
mov
repnz
nop
cmp
push
add
fcompl
sahf
jmp
cld
mov
push
xchg
enter
in
sbb
adc
lahf
and
dec
int3
mov
mov
repnz
mov
out
mov
sti
mov
jnp
rcr
xchg
shrl
scas
jmp
enter
mov
sub
xor
add
in
out
inc
dec
jo
dec
mov
xchg
in
pcmpgtb
cmp
int3
mov
stos
scas
cmp
aas
ret
insb
sbb
cmp
dec
push
xor
push
inc
sub
testb
insl
jns
add
ror
mov
adc
ss
out
inc
repz
lret
cmc
xchg
aam
xor
dec
scas
mov
dec
jno
xchg
dec
or
mov
xor
nopl
mov
mov
imul
mov
sahf
cmc
lcall
mov
orl
insl
mov
shll
xor
inc
call
outsb
mov
mov
push
inc
mov
xor
shlb
stos
cmp
sbb
pop
or
sbb
mov
xor
mov
aas
mov
jne
daa
pop
out
movl
ds
sub
fisubs
inc
adc
pop
sub
mov
dec
test
sbb
add
aad
inc
daa
jmp
test
xchg
pop
cmp
sub
sbb
cmp
dec
xor
mov
or
jmp
repz
test
ficoml
and
stc
or
pop
imul
jmp
or
and
pusha
bound
sbbb
adc
dec
jbe
mov
push
sub
out
sub
push
cmpsl
es
jge
lcall
movsl
shrb
push
lea
out
cmp
dec
scas
jns
stc
mov
pop
lods
sbb
outsb
and
sti
pop
dec
sbb
sbb
push
int3
mov
sbb
add
fmul
sbb
sub
cs
cmpsb
or
push
jecxz
sbb
cmp
ret
test
in
adcb
cld
imul
mov
and
jmp
push
add
cli
repz
dec
rol
fisubrl
leave
inc
pop
xchg
mov
push
push
xor
out
enter
pop
lahf
pop
cwtl
mov
inc
mov
sub
or
fidivrl
fnstsw
inc
pushf
mov
jns
mov
sbb
mov
cli
jae
fidivrs
int3
lahf
sbbl
pop
cmp
clc
dec
out
cli
push
pushf
insb
fcomip
loope
ljmp
sarb
mov
pop
testl
pop
xchg
pop
add
cmpsb
push
ja
pop
push
repnz
imul
aad
adc
cltd
call
data16
sub
mov
sbb
add
pop
out
inc
lods
pop
fisttpl
mov
jl
adc
mov
call
xor
sub
mov
js
mov
inc
lock
pop
stc
inc
pushf
jge
clc
push
xor
insl
fucomip
scas
xchg
push
and
arpl
dec
sarb
sbb
inc
mov
cs
movsb
push
cmp
xchg
cmp
scas
cld
repnz
push
push
mov
sub
rorl
jae
mov
das
dec
mov
mov
sub
aam
inc
xchg
adc
sbb
pop
rorl
fstpt
xlat
cmp
sbb
pop
xor
les
inc
sub
and
ret
imulb
xor
outsl
inc
push
mov
xchg
jl
mov
cs
lret
add
movl
mov
pop
cli
leave
pop
inc
and
inc
xchg
jo
in
sub
decl
push
test
pop
lcall
mov
outsl
or
cld
sbb
sbb
and
jns
inc
jecxz
in
icebp
movsl
sbb
out
shl
pop
imul
test
ss
fisttpl
pop
aaa
cmpsb
cli
daa
xlat
xlat
in
lcall
stos
fcmovb
mov
push
jne
sub
mov
push
pop
je
fwait
and
mov
or
xchg
and
mov
push
test
inc
notl
or
outsl
push
testl
pop
adcb
aad
fidivs
loope
sbb
pop
ja
mov
adc
or
test
push
into
inc
pop
xor
xlat
jl
push
mov
add
cwtl
sbb
data16
std
pop
sub
lahf
adc
test
fbstp
xchg
jae
dec
std
sub
imul
aam
insb
xlat
cld
cmp
scas
std
jg
cmp
sub
sub
sbb
pop
cmpsb
mov
push
rorb
xchg
push
cmc
call
pop
gs
int
fdivl
lahf
mov
add
cli
repnz
mov
pop
xchg
stos
outsb
push
rorl
xchg
pop
sti
arpl
push
inc
lds
jae
out
jno
shrl
and
mov
inc
mov
shrl
ljmp
sub
movsl
dec
ret
push
cmp
andl
jge
push
xor
pop
mov
icebp
or
push
mov
push
je
ret
mov
popa
outsl
ret
test
adc
lret
enter
lahf
orb
test
pop
push
movsb
bound
mov
fistpl
mov
in
and
dec
mov
mov
fiaddl
add
pop
pop
dec
push
dec
push
pop
pop
mov
ret
scas
les
add
add
gs
in
mov
push
jl
cmpsl
test
mov
in
adc
dec
push
and
dec
xor
mov
sbb
ret
pop
fs
aaa
bound
popa
xchg
cmc
push
out
rcrl
cli
jecxz
sub
xor
les
adc
inc
mov
es
xchg
cmpsl
adc
nop
add
data16
mov
cmp
add
cs
ljmp
cmpsb
cmp
and
jne
fnstcw
stos
push
test
test
aam
push
nop
jbe
add
pop
shr
mov
jecxz,pn
orb
ret
cmp
add
les
sub
test
xchg
mov
movsb
lds
xchg
inc
add
pop
int
fcoml
in
nop
lock
jl
hlt
aaa
arpl
in
push
dec
test
cmpsl
xchg
loope
dec
add
jge
pushf
sbb
mov
mov
pop
fs
nop
sbb
cmp
dec
leave
add
je
adc
std
xchg
insl
hlt
arpl
movb
fcomps
jo
mov
cmp
out
in
inc
clc
adc
push
dec
cmp
movsl
imul
mov
out
jb
es
dec
fmull
leave
in
movsb
push
xor
xchg
sbb
pop
shlb
push
pop
out
dec
push
xchg
sbb
repnz
cmpsl
cmp
stos
push
in
add
imul
pusha
adc
enter
ret
subl
js
negl
push
inc
jne
xchg
mov
inc
popf
jl
mov
ret
mov
add
cmp
pop
mov
nop
popa
adc
adc
jne
dec
rolb
sbb
push
lods
loop
pop
push
enter
sbb
fwait
pop
xchg
mov
outsl
mov
add
cmp
xor
and
xchg
and
sbb
pop
jns
enter
add
sbb
xor
mulb
pop
iret
mov
mov
dec
test
mov
cli
sub
push
jg
bound
add
sbb
lds
mov
or
imul
lods
repnz
sbb
adc
addr16
xchg
or
xor
push
push
mov
mov
cmp
rclb
js
mov
lcall
push
push
mov
lds
cli
addr16
call
mov
into
adc
sbb
lahf
cld
add
sub
mov
cs
shl
and
cmpsl
ret
lods
enter
push
dec
dec
jnp
dec
cmp
add
or
insb
xor
xchg
jb
bound
xchg
daa
push
shrl
jae
or
push
inc
adc
in
xchg
mov
sbb
jmp
aas
lahf
jle
ljmp
std
ss
push
xchg
mov
mov
dec
cmp
pushf
cmp
xor
lahf
das
inc
pop
repnz
in
jae
rolb
ret
jns
push
and
push
mov
or
loopne
int
adc
jb
mov
cwtl
mov
rcll
stc
or
test
push
repnz
dec
pop
jle
adc
hlt
movsb
inc
jae
adc
sub
fwait
outsl
mov
adc
jne
rolb
cli
cmp
jmp
adcl
adc
inc
sub
lret
or
adcb
push
xor
aad
mov
outsl
hlt
int3
pop
sbb
int
mov
and
aas
adc
mov
notl
xchg
les
xor
dec
loop
push
jnp
iret
lea
inc
xchg
jns
xchg
test
xchg
sti
mov
add
xchg
and
jns
jge
stc
nop
jge
insl
adc
ret
push
dec
push
or
and
enter
mov
movsb
lods
inc
inc
mov
movsb
push
ja
fwait
and
mov
mov
or
mov
cmpl
push
ljmp
cmpsl
aas
sub
dec
and
bound
sbb
inc
inc
mov
add
xchg
mov
je
nop
xor
add
jb
arpl
insb
jg
jge
dec
lahf
imul
outsl
mov
xor
es
mov
cld
in
xchg
into
mov
pop
out
call
push
xor
nop
jno
daa
cmp
dec
fidivl
movsl
inc
mov
call
cmpl
and
divb
push
jbe
mov
mov
dec
dec
ret
stos
mov
cmp
jns
adc
gs
inc
dec
xor
mov
and
faddp
fcmovnbe
mov
ja
cmp
out
loope
xlat
outsl
inc
sub
adc
mov
cmpsb
jo
mov
movsl
cmpsb
mov
sbb
jae
xlat
out
andb
movsl
out
cs
push
stos
mov
mull
push
push
inc
cmp
inc
add
ret
cld
xchg
in
movsl
sbb
stos
lds
push
adc
jl
je
pop
fidivl
test
cmp
stos
push
pop
xchg
mov
out
arpl
stc
push
rolb
aas
fcom
jne
xchg
mov
and
lea
push
push
inc
mov
jl
mov
push
dec
pop
orl
test
cmp
enter
mov
arpl
test
pop
jne
add
dec
mov
sbb
negb
dec
shl
push
les
js
xor
shlb
stos
mov
popf
jecxz
xor
mov
sub
or
dec
mov
mov
or
push
mov
sbb
adc
mov
pop
out
sbb
aaa
aam
add
push
jo
xchg
inc
mov
add
jb
dec
sbb
add
add
add
add
push
push
push
inc
push
test
jns
sub
add
jge
add
push
das
pusha
in
fbstp
fstpl
or
mov
arpl
daa
popa
in
push
es
imul
fwait
xchg
gs
adc
xchg
lods
loop
pushf
sub
loop
movsb
inc
add
jmp
out
aaa
adc
lcall
lcall
fmull
aam
test
lock
mov
pop
ljmp
jp,pt
das
cmp
and
jnp
sub
mov
xor
jb
sti
pop
fdivrs
shl
lahf
pop
add
loop
scas
cli
mov
cltd
popf
or
call
mov
push
sub
data16
adc
cmp
jmp
inc
nop
aas
jle
inc
jge
lcall
gs
bound
loopne
mov
rcll
mov
mov
fcomip
or
test
stos
push
jge
xchg
jmp
or
adc
out
cld
mov
pop
jecxz
and
xchg
stos
loopne
jmp
nop
jl
mov
ljmp
cld
bound
subl
rorl
icebp
push
cld
cwtl
mov
mov
add
jbe
sbb
sub
mov
rorl
pop
cwtl
mov
mov
in
cld
mov
ds
addb
inc
sub
shll
push
aam
jae
fistpll
xor
mov
hlt
dec
pushf
outsb
in
push
cmp
incb
movsl
xor
outsl
lock
js
add
adc
sub
push
xchg
sub
stos
and
and
xchg
loope
repz
lret
mov
negl
mov
mov
jae
lret
sub
xchg
movsb
mov
dec
sbb
sub
xchg
fsubrs
sbb
iret
push
mov
popa
rolb
add
loopne
jb
fadds
mov
in
pop
les
in
jbe
push
in
dec
lds
call
std
jb
cltd
add
mull
inc
xor
push
add
ja
loop
mov
gs
and
and
movsb
mov
jle
jae
or
sub
sub
jg
and
sub
xor
jnp
addl
lcall
adc
leave
mov
jp
fists
lods
ret
aad
pop
iret
cli
push
int3
dec
and
jnp
and
push
fsubs
sbb
aam
out
dec
repnz
sub
and
fbstp
xor
adc
lcall
cmp
pop
push
out
and
inc
je
and
and
cmpsl
mov
addr16
xchg
hlt
and
hlt
das
ds
roll
adc
push
mov
xchg
mov
dec
adc
mov
jle
fwait
loop
xchg
popf
pop
loope
ljmp
dec
and
and
add
lock
pop
xchg
jp
and
xchg
fwait
or
xor
aas
mov
cmpsb
push
inc
lea
dec
into
mov
leave
dec
inc
int3
pop
add
jge
sub
mov
lods
mov
mov
andb
sub
xorl
or
sbb
ss
arpl
pop
insb
mov
sti
rep
lret
lcall
jle
mov
xchg
in
or
and
repz
in
push
in
push
sbb
xor
fs
shl
in
rorl
mov
pushf
cmpsb
inc
stc
pusha
cmp
mov
aam
andl
int3
push
shlb
sbb
adc
mov
dec
xchg
pop
sarl
dec
and
pop
popa
out
jnp
dec
icebp
adc
lcall
cmp
push
ja
cmp
pushf
je
shlb
xor
or
xor
fidivs
int
std
mov
incl
cltd
cs
repnz
push
xor
adc
push
es
mov
je
outsb
scas
jno
std
xor
test
xchg
add
pop
hlt
mov
push
add
jge
cmp
in
call
mov
adc
jmp
in
and
in
aam
outsb
dec
cltd
push
lret
cmc
aaa
sub
lods
loopne
or
jae
in
imul
mov
test
push
stc
popa
and
das
mov
push
in
aad
pop
clc
xchg
push
fisubl
or
mov
add
or
jno
mov
push
notb
pusha
adc
jle
ficomps
sbb
and
push
mov
enterw
cmp
aas
out
pop
mov
xchg
xor
cmp
or
mov
imul
mov
or
outsl
inc
cs
cli
add
aas
sub
xor
bound
lods
shll
inc
loopne
cld
add
and
cmp
mov
mov
idivl
adc
fcmovb
cmp
push
mov
test
add
ja
fcompl
pop
stos
adc
rolb
xor
ljmp
adc
cld
lods
adc
mov
aad
mov
fiadds
sub
mov
dec
out
roll
xchg
lret
pextrw
jns
push
outsl
imul
sbb
jl
xchg
loope
movsb
movzwl
faddl
and
sbb
xor
cmp
ret
mov
jne
jns
mull
fstp
add
fcmove
mov
ss
or
jg
outsb
clc
ss
xor
lea
pop
jne
lcall
xchg
jbe
cld
push
insl
loop
mov
adc
fists
les
jl
stc
sub
inc
lret
pop
xlat
stos
jmp
push
mov
test
inc
in
mov
push
add
pop
divb
ss
xchg
je
in
xor
scas
add
add
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
pop
dec
ret
add
jge
add
adc
ja
push
mov
pop
inc
dec
outsl
xor
push
pop
daa
xlat
mov
add
jns
xchg
adc
aad
pop
stc
pop
or
ret
cli
pop
fstl
ljmp
inc
das
sbb
jg
mov
xchg
sti
sahf
arpl
push
clc
sahf
sbb
cmp
dec
je
mov
xchg
xchg
adc
in
ja
dec
push
lods
call
mov
push
dec
roll
push
or
testb
adc
push
inc
sti
fcmovnb
and
push
daa
mov
scas
xor
mov
sub
mov
or
mov
pusha
mov
and
push
aas
or
mov
mov
inc
loope
mov
xor
jo
outsl
xor
fptan
sub
xchg
aas
jmp
xor
bound
pop
sub
push
out
mov
adc
outsl
adc
pop
cmc
sub
mov
inc
mov
popf
xor
xchg
cmp
dec
arpl
jne
fs
add
and
addr16
pop
pop
addl
rolb
pop
fildll
inc
push
shr
aam
adc
aas
add
xor
cltd
orb
fsubr
sub
jne
cmpl
lret
inc
dec
dec
mov
in
pop
mov
mov
xchg
mov
stos
sarb
ret
nop
inc
jae
xchg
jp
inc
in
or
ja
mov
or
sbb
push
xor
movsb
jl
jo
inc
fmull
push
or
inc
icebp
aad
js
pop
fwait
out
std
stc
pop
dec
sbb
mov
notb
loopne
dec
lock
leave
xchg
sbb
mov
in
mov
js
and
subb
jmp
cmpsb
pushf
pop
cmp
pop
dec
lock
sub
sbb
rorb
mov
pop
jmp
mov
jne
js
mov
shrl
dec
or
cld
js
loope
mov
das
shlb
int3
aaa
loop
out
outsl
sub
icebp
movsb
jl
sbbb
jns
xchg
adc
lret
in
mov
in
cmp
inc
mul
dec
adcl
pusha
and
leave
push
jecxz
rcl
cltd
mov
push
add
shrl
inc
adc
mov
and
adc
sbbb
aas
xlat
rcll
xor
dec
push
mov
cli
rcrb
add
mov
fcomp
mov
xor
pop
and
cmp
test
stos
cmp
cmpsb
sub
sbb
cmp
sahf
push
xor
aam
loope
int3
loope
mov
test
cmp
sbb
testb
cwtl
dec
xor
jae
mov
les
fnsave
xchg
lcall
xchg
insb
out
jge
sub
pop
xchg
pop
xchg
inc
mov
xchg
pop
xorb
push
sbb
int3
mov
push
cmpsb
lret
lods
popa
dec
jecxz
jl
stc
or
out
nop
inc
xor
xlat
enter
xor
adcl
int3
jp
stos
mov
or
adc
pusha
in
bound
mov
inc
xor
jecxz
sbbb
mov
sub
add
dec
mov
popf
lret
adc
rcr
ds
rcll
mov
fs
mov
bound
nop
pop
cmp
test
xor
sub
stc
cmp
push
cltd
push
into
cmp
data16
add
pop
lea
pop
loop
stc
xor
mov
mov
repz
es
ljmp
xchg
cld
inc
lret
add
cli
or
idivb
adc
mov
fidivs
and
dec
inc
imul
xor
sahf
mov
pop
sbb
aad
mov
dec
jg
xchg
lret
mull
xor
cmp
fwait
sahf
fmuls
pop
or
insb
cs
add
jmp
xor
fsubrp
dec
pop
aas
mov
pop
out
and
pop
stos
loope
adc
xchg
fwait
xor
test
inc
movsb
jecxz
inc
scas
sub
or
aaa
clc
mov
pop
je
add
icebp
jecxz
out
fisubl
clc
test
add
je,pn
aas
rcl
test
pop
xchg
or
mov
cmc
stos
ds
inc
lods
xor
jnp
adc
sbb
sbb
shll
enter
inc
fidivrl
mov
fisubl
popa
pop
cmp
dec
xorb
fwait
or
fnstenv
mov
rorl
or
sbb
mov
lods
xor
push
lret
sahf
lea
cli
push
mov
packuswb
add
pop
enter
pushf
push
xchg
sahf
cltd
rcrb
cmp
dec
call
imul
push
mov
fldcw
or
push
cmp
fwait
dec
cwtl
sbb
push
sarb
loop
gs
std
pop
mov
fucomi
stc
inc
lea
sub
pushf
stc
dec
pop
enter
cld
pop
lds
pop
cmc
popa
popa
push
jbe
adc
and
adcl
imul
ja
inc
insb
imul
cmp
pop
fisubrs
lcall
dec
push
hlt
and
xor
pop
jno
sbb
aad
push
and
jns
je
leave
scas
push
dec
inc
dec
pop
mov
out
les
push
int3
mov
mov
push
adc
into
fisttps
in
sub
sahf
mov
std
mov
sahf
ljmp
mov
xchg
adc
or
pop
out
jae
pop
pushf
push
adc
or
arpl
mov
ss
fnstsw
test
gs
mov
das
add
add
push
push
push
push
push
inc
rorl
popf
daa
mov
fadds
add
add
xchg
mov
xor
pop
pushf
popf
push
test
sbb
scas
xchg
inc
mov
ljmp
jne
fdivs
shrl
jno
push
xchg
ss
jb
push
or
insb
mov
mov
dec
mov
fldenv
lret
xchg
ljmp
incl
mov
aaa
dec
mov
jns
and
inc
jb
dec
push
cmp
xor
push
add
pop
sub
and
fmuls
mov
test
aas
mov
sub
mov
cmpsb
jg
add
popa
decl
test
call
mov
push
jns
lods
ja
adc
enter
and
repz
add
aaa
cmp
in
cs
inc
iret
sbb
xchg
les
mov
shlb
push
mov
ljmp
cmc
fadds
lods
sub
inc
mov
rcll
adc
or
pop
outsb
cmp
jg
inc
outsb
push
or
lods
xchg
mov
mov
jno
imul
mov
out
shlb
rorb
ljmp
repz
fwait
mov
in
cmpsl
lcall
ja
inc
int
sub
int
stc
pushf
pop
lea
imul
dec
or
mov
mov
test
icebp
aaa
sahf
lock
popa
inc
shrd
sarl
and
mov
pop
repz
push
push
jp
in
and
cmp
adc
mov
cli
mov
mov
out
mov
imul
dec
xor
in
mov
inc
dec
adc
sub
push
add
punpckhbw
push
jle
dec
pop
cmp
lock
mov
mov
cmpxchg
adc
dec
nopl
inc
je
filds
loope
bound
or
loope
push
test
jnp
ljmp
pop
enter
fldl
or
xchg
mov
jne
push
lret
mov
in
aam
sub
sbb
pop
fs
mov
inc
sub
push
stc
mov
test
hlt
jae
in
jle
popf
mov
sub
push
pop
fists
push
aad
popf
aam
dec
and
and
cmp
out
repnz
and
push
adc
ja
fidivrl
in
jle
xchg
pop
test
sbb
mov
push
data16
mov
cmp
jecxz
sbb
iret
or
adcl
sbb
rolb
inc
adc
int
repnz
jbe
test
cs
les
ja
aam
jp
dec
mov
adc
out
pop
je
stos
movsl
or
arpl
jmp
mov
pop
push
mov
pop
xor
clc
xchg
mov
mov
mov
cmpsb
or
lock
shll
dec
stc
ret
ds
pusha
subl
lahf
sbb
xor
outsb
in
cmpsb
sub
jg
mov
fistpl
adc
es
and
or
outsb
lds
inc
loop
lods
xchg
xchg
ds
in
sub
add
push
clc
dec
add
mov
jb
xchg
adc
xor
mov
test
fildll
ljmp
leave
mov
lahf
out
dec
jb
xchg
or
xor
testb
sbb
daa
xchg
movups
jmp
push
stc
rcll
insb
pop
cmc
aaa
sbb
mov
in
jnp
sbb
enter
mov
cmp
xor
or
mov
arpl
bound
mov
jbe
adc
mov
xchg
shll
in
inc
pushf
test
repz
mov
jmp
cltd
xchg
jno
pop
push
and
or
hlt
addb
int3
jns
inc
dec
dec
cs
repnz
mov
cmp
test
test
ljmp
stc
push
mov
mov
mov
xlat
mov
cwtl
std
aaa
ss
adc
int3
xchg
das
cmpsb
cs
fildll
pop
lret
aad
popf
mov
adc
mov
sub
insb
jg
mov
add
mov
mov
pushf
cmpsl
xor
imul
shll
shl
test
jnp
sbbb
cli
push
fscale
cmpsb
in
sub
in
mov
add
test
ds
fs
xchg
jnp
add
dec
repnz
or
int3
jecxz
lret
inc
in
loope
mov
sbb
test
mov
push
rorl
insl
mov
cli
out
popf
sbb
incl
imul
cmpsb
pop
or
in
sahf
adc
pop
mov
push
dec
dec
pop
dec
aas
inc
mov
pop
arpl
xchg
inc
in
xchg
stos
aaa
andl
and
jp
lahf
push
xor
fildll
ljmp
loope
push
push
inc
mov
cmp
scas
xchg
push
or
dec
nop
mov
push
int3
test
pushf
sbb
jmp
ja
mov
pop
xchg
dec
addr16
mov
repnz
pop
inc
sahf
cmc
loop
test
xchg
cmpsb
out
mov
movsl
cld
movsl
and
jmp
cli
xchg
aad
push
xchg
movb
jne
mov
idivb
pusha
popf
pop
mov
sarb
int3
fsts
xchg
cs
cmp
adc
inc
push
lds
in
xor
sbb
xor
jecxz
pop
or
insb
fdivrl
pop
xor
jp
push
mov
ret
cmp
mov
push
test
or
cmp
mov
and
aas
sbb
into
sub
jbe
fnsave
stc
mov
mov
je
mov
adc
cmp
or
out
add
add
pop
push
push
push
pop
push
pop
pop
xchg
stos
mov
jns
fiadds
add
add
aaa
test
aaa
jns
call
sub
mov
decb
push
push
jmp
nop
or
inc
sbb
add
mov
jae
mov
cs
sbbl
xchg
mov
push
fsubp
je
or
movsb
jmp
sbb
and
in
push
stos
ret
or
pop
dec
mov
pushf
xchg
or
and
xchg
dec
fsubs
mov
into
push
jg
cli
fisubrs
hlt
es
fstpt
addr16
mov
cmpb
and
repz
mov
out
xor
cwtl
test
scas
in
adc
sbb
pop
pop
jnp
mov
mov
fiadds
jae
mov
xchg
mov
xor
shrl
hlt
out
cmpsl
notb
jge
pop
adc
insb
push
aas
sub
test
sbb
xor
sti
lahf
dec
stc
lds
popa
ljmp
sti
sub
cmp
fisubs
lahf
fadds
imul
and
in
jo
pop
xchg
sbb
xor
push
mov
addl
mov
push
out
or
hlt
mov
mov
lcall
and
jge
or
jge
mov
and
xorb
add
cmp
jbe
aaa
xchg
cmp
jno
mov
es
pop
rclb
ret
dec
movsb
lods
inc
js
rorb
mov
mov
int3
arpl
mov
mov
fs
sub
enter
sti
sbb
and
daa
push
add
or
pop
add
aaa
pop
cmp
sbb
push
add
aas
inc
push
aad
pop
es
pop
ret
pop
sub
cmp
cmp
add
or
lcall
xchg
call
pusha
add
gs
push
mov
mov
mov
int
mov
mov
add
mov
jnp
push
repz
dec
cmp
pop
or
mov
jbe
jb
or
mov
pop
dec
cmp
xchg
mov
fistl
jg
xor
sbb
int
jae
pop
jns
pushl
dec
mov
cmp
inc
rol
dec
mov
das
mov
jmp
inc
push
pop
aas
add
mov
pop
cmp
int3
popa
mov
sub
shll
scas
jnp
rcr
bnd
lret
push
mov
cmp
loope
fsts
daa
cli
sub
shlb
inc
dec
leave
sub
cmpsb
inc
lods
roll
sbb
push
push
std
xor
divl
pop
test
les
add
ds
testb
sub
repnz
sub
inc
push
push
or
test
add
test
mov
fsubl
push
and
cmp
cwtl
or
fldenv
fimull
push
ret
arpl
leave
inc
xor
adc
jbe
fimuls
pop
adc
mov
inc
fsubl
loopne
das
inc
icebp
pusha
imul
pop
cmpsl
inc
mov
fcom
mov
cmp
clc
icebp
jo
call
int
pusha
sbb
mov
testb
aam
daa
xor
cli
mov
aad
xor
mov
bnd
push
andb
cmp
mov
jae
jp
push
pop
lods
movl
or
data16
jle
fcomps
movsl
fdivl
push
mov
pop
mov
vinserti32x4
pop
adc
pop
lock
push
cmp
mov
popa
and
ds
xor
push
bts
inc
loopne
jne
pusha
mov
push
pop
imul
pop
test
aam
push
std
aaa
hlt
cmp
dec
cld
arpl
dec
and
adc
sbb
cmp
xlat
repz
fcomip
lods
or
add
add
test
ror
sbbl
test
push
jmp
xchg
cmpsb
add
out
pusha
loopne
into
ret
inc
repz
pusha
mov
pop
pop
fistl
sbb
ds
xchg
sbb
clc
pop
cmp
push
orl
mov
inc
scas
test
shrl
ficoms
mov
or
sub
aaa
jge
push
adc
int
pushf
adc
sbb
inc
sub
mov
mov
insb
in
ficoms
dec
add
lods
push
popa
dec
fisubs
inc
jmp
xlat
mov
cmp
mov
cld
dec
add
negb
insb
movsl
nop
scas
dec
ror
xchg
popa
or
fmulp
push
lds
jo
ret
stos
fistl
repnz
sub
pop
add
dec
stos
roll
sub
shlb
test
daa
jno
pusha
dec
mov
cmp
pop
mov
fldl
adc
xorb
push
pop
out
scas
popf
icebp
icebp
call
es
mov
ljmp
push
inc
jmp
fs
mov
dec
jle
push
mov
int
push
and
xchg
add
jp
kmovw
ud1
sub
jno
inc
shl
mov
cmp
or
cmc
out
sahf
fildl
cmpsl
in
ret
jnp
sbb
aam
push
xor
xor
loop
and
mov
sti
aaa
mov
push
imul
outsl
imul
hlt
jb
mov
jnp
stos
or
xor
ja
inc
pop
push
add
mov
add
mov
cwtl
dec
roll
mov
lea
cwtl
push
cmpsb
pop
mov
adc
jmp
pop
movsl
inc
loopne
push
and
fwait
out
mov
and
test
add
sub
sub
sbb
mov
ss
pusha
stos
rclb
outsb
stos
xchg
repnz
out
cmp
nop
or
pop
push
sub
divb
test
sub
sub
dec
push
mov
sub
clc
icebp
aas
mov
lahf
std
clc
mov
add
add
push
push
pop
push
dec
pop
idiv
jle
and
add
jge
add
dec
shll
cmp
pop
es
test
mull
sub
scas
push
rolb
icebp
ljmp
out
jp
dec
xchg
hlt
emms
push
mov
test
sub
jnp
out
repnz
jnp
mov
mov
js
cmpsl
mov
fisubl
mov
add
cmp
push
int3
mov
sub
outsl
push
sbb
dec
mov
dec
inc
mov
pop
dec
pop
mov
mov
out
int
lcall
sbb
jo
xor
sub
xchg
popf
cltd
cwtl
jl
test
fstpl
insb
adc
mov
fdivrs
stos
imul
decl
shlb
jle
inc
push
push
jae
xchg
mov
fmuls
xchg
sbb
sub
leave
addr16
aas
mov
inc
sub
cmpsl
fidivs
test
mov
sub
outsl
sub
in
and
addl
decl
movsl
shl
pusha
cwtl
adc
and
cld
jno
out
aas
lock
shlb
fbld
dec
adc
test
jmp
es
xchg
lret
dec
xlat
in
stos
jno
xchg
addr16
add
mov
orl
xor
fisttpl
in
andb
aam
push
mov
and
cmpsl
pushf
mov
test
xchg
jnp
cli
jno
orl
ljmp
add
lods
cmp
cmp
fs
push
dec
and
stos
jnp
icebp
push
incb
into
lcall
dec
push
nop
xor
mov
mov
xorb
mov
js
test
shld
or
push
add
ret
add
mov
ja
sti
ds
mov
or
push
in
scas
and
popf
pop
xchg
lcall
xchg
int
jle
and
pop
std
push
xchg
enter
adcb
pop
cmp
xchg
push
dec
push
faddl
repz
mov
cmpsl
rclb
test
scas
shlb
sbb
aaa
out
fsubrs
jp
enter
aam
mov
xchg
pop
outsl
lret
mov
cmpsb
dec
dec
add
sbb
loopne
jbe
push
insl
xchg
das
fsubs
xchg
jecxz
dec
or
ds
xor
and
es
xchg
and
cld
and
scas
mov
pop
push
push
imul
and
push
and
jecxz
ror
dec
das
cmp
icebp
mov
stos
cmpsb
push
cmp
sub
ja
cmp
add
push
dec
push
lock
and
repz
pop
mov
dec
mov
mov
daa
not
xchg
adc
and
mov
and
call
adc
out
leave
out
cmp
leave
sub
mov
fwait
sbb
mov
cmp
add
cltd
or
out
mov
jg
inc
mov
pop
shr
mov
aad
inc
xlat
in
mov
gs
xlat
xchg
xor
lret
xchg
sub
xor
cmp
sub
mov
imul
mov
cmp
aaa
shr
cmpsb
test
cs
test
jae
xchg
stos
setno
int
fadd
lds
rcl
cmc
faddl
cmpsl
dec
ljmp
std
xor
decb
cmp
lock
scas
cmp
cld
mov
xchg
sbb
je
push
and
fnstcw
cltd
adc
jo
lock
cld
push
add
and
dec
loopne
out
popa
movsl
or
and
cmp
pop
repz
dec
cmc
and
daa
jo
test
rol
leave
repnz
jns
cld
loop
mov
out
mov
outsb
mov
push
cmpsb
cmp
cmp
pop
sub
fldt
xor
in
or
fnstsw
out
pop
scas
ja
lret
mov
pop
repz
mov
mov
dec
imul
arpl
mov
mov
dec
cli
cmc
mov
cmpsb
in
push
jnp
mov
and
xchg
mov
arpl
push
sahf
add
xlat
jns
outsb
ljmp
pop
pushf
or
jb
mov
test
in
jbe
cmpsb
stos
lcall
int
xor
enter
lods
mov
and
mov
jb
aaa
jo
lret
sahf
jae
movsb
pop
jle
jae
sbb
lcall
pop
inc
inc
imul
push
pusha
push
stc
hlt
loope
fwait
hlt
push
incl
movsb
lds
mov
jmp
add
and
mov
loop
lret
aam
rcr
jo
inc
pop
and
vpmacsww
xchg
inc
sti
and
leave
imul
dec
out
movsb
pop
sub
dec
movb
dec
xchg
xor
dec
cmp
lret
xchg
mov
jbe
in
sti
adc
sbb
icebp
inc
add
xchg
mov
xchg
adc
fdivl
or
repz
or
lahf
std
push
pcmpeqb
mov
testl
aaa
or
in
aam
add
aas
jle
aam
movsl
xchg
xchg
add
js
lods
stc
pop
sbb
jge
bound
jb
in
ror
sar
outsb
in
and
mov
fcomps
pop
xor
mov
jno
mov
cltd
sub
cltd
lock
mov
icebp
pop
cwtl
mov
inc
jbe
aas
push
or
jge
sbb
inc
sbb
mov
pusha
int
pop
ret
sbb
lcall
cltd
adc
push
pop
cmp
scas
js
scas
jne
lcall
xor
xor
jbe
lods
cwtl
sarl
cli
mov
mov
sub
dec
fiadds
imul
inc
popf
int3
sub
test
mov
mov
lea
imul
popa
ret
scas
and
ret
aaa
js
insb
xchg
lds
scas
jnp
aad
addl
lea
push
push
outsl
test
cmpsl
add
add
inc
pop
inc
pop
pop
pop
mov
push
mov
sbb
popf
jmp
add
add
mov
lahf
cmp
imul
dec
addr16
cmp
and
pop
cmc
jns
sub
adc
lock
inc
push
and
mov
outsb
out
lcall
rcrb
movsb
cs
mov
pop
stos
add
out
pop
jmp
push
jb
cwtl
push
sbb
stc
lret
rcl
or
lret
nop
adc
test
sub
adc
sub
add
mov
sbb
sbb
or
mov
add
push
leave
loope
push
cmp
mov
js
aam
enter
lret
sub
popf
lea
outsb
adc
sub
outsl
scas
jbe
mov
cmp
cmp
pop
jae
je
pop
cmp
leave
pushf
popa
out
fcomip
mov
stos
mov
fwait
in
sub
pop
fsubrs
mov
gs
push
xor
xor
js
jmp
pop
xor
jo
andb
sarl
mov
mov
jl
mov
or
in
push
repz
loop
vcvtsi2sd
jo
pop
popa
jae
jge
xor
scas
aas
push
in
inc
mov
or
fidivrs
inc
shll
jg
fistpll
shl
dec
cmp
mov
jl
adc
addb
xor
cli
xor
mov
shl
adc
sbb
jle
mov
sbb
and
repz
ds
inc
inc
lods
call
ret
adc
addr16
sub
push
in
scas
sbb
fistpl
cmpsl
test
hlt
fistl
rorb
lods
test
insb
test
lods
push
mov
mov
das
test
pop
jle
xchg
cmp
pop
fmull
cs
call
and
aas
js
sub
sbb
imul
pop
loop
jl
cs
jmp
mov
flds
cmc
je
jl
push
call
jmp
cwtl
xor
out
mov
push
xor
mov
jle
lods
into
jmp
jle
clc
inc
mov
push
rcrl
iret
dec
out
push
xchg
cld
pop
mov
outsl
mov
stc
in
cmp
push
frstor
inc
inc
fidivl
movsl
mov
jg
mov
fdivrl
cmpsb
arpl
adc
or
add
and
jmp
int
or
push
ret
lcall
loopne
inc
lret
notl
insl
push
cmc
scas
in
push
mov
es
clc
sub
shlb
add
sbb
push
and
outsl
sub
xchg
cld
xor
xor
pop
mov
mov
fsub
sub
out
sbb
jmp
in
popf
jle
mov
cmp
es
aam
fsubrp
cmp
jge
cmp
push
call
push
and
jae
call
push
ror
fwait
movsl
push
aas
dec
faddl
stos
sbb
imul
popf
xchg
cmp
out
cmp
mov
add
stc
xchg
and
push
fsub
inc
jb
sahf
adc
xor
and
addr16
cld
xor
mov
arpl
and
sbb
stos
jecxz
dec
into
mov
cmp
test
push
rcrb
inc
leave
shll
xor
ljmp
inc
push
in
dec
jno
add
iret
popf
jnp
inc
lahf
sbb
or
je
call
das
adc
inc
mov
add
push
lods
push
mov
dec
add
add
arpl
pushf
out
fdiv
xchg
rep
sub
rcrl
xor
out
leave
movsb
call
and
repz
iret
scas
mov
lea
xor
jecxz
rolb
push
mov
sbb
fdivl
adc
mov
sub
or
inc
add
pop
out
gs
xchg
out
or
or
inc
dec
or
adc
out
lods
mov
push
loop
je
into
xor
mov
and
mov
cmp
inc
cmp
ljmp
pop
pop
movq
aas
mov
js
jmp
sub
jl
adc
jne
lret
sbb
lret
sub
or
push
ss
fisttps
mov
and
mov
jns
pop
fisubrl
jp
out
add
rol
lea
mov
dec
stos
or
add
in
dec
lahf
ja
fdivl
dec
mov
ficoml
lcall
mov
push
xor
call
insl
sbbl
sbb
mov
fs
xor
jmp
sbbl
jl
xchg
imul
movsl
daa
inc
addr16
jle
cld
aam
ret
cwtl
cltd
xor
cmpsl
mov
lret
and
pop
mov
sub
pop
pop
fnsave
jl
outsl
test
cmp
outsb
or
les
daa
mov
sub
jnp
mov
add
jns
cmpsl
lds
out
mov
add
test
mov
daa
adc
adc
ret
shrl
xor
arpl
xchg
mov
popf
dec
xor
pop
bound
mov
cmpsb
pop
mov
xor
shlb
xor
lock
mull
mov
pop
js
testl
push
adc
aaa
ljmp
mov
mov
jmp
mov
je
xor
les
rorl
and
leave
fistpl
aam
or
or
imul
pop
mov
test
inc
sbb
mov
jo
adc
lods
mov
add
rcrb
fnstenv
jb
sarl
push
lods
mov
ljmp
sar
ret
mov
cmp
lcall
xchg
xchg
js
add
inc
repnz
jg
arpl
rcr
sahf
or
inc
push
enter
push
xchg
mov
add
dec
push
inc
push
pop
push
pop
pop
ss
imulb
cmpsl
int3
and
sbb
add
jge
add
aam
das
mov
jge,pn
xor
adc
sub
cmpsb
test
in
mov
gs
fwait
push
ficompl
xchg
jp
jle
push
mov
xchg
xor
mov
test
jno
cmp
lock
movsl
mov
push
sbb
popl
gs
out
sbb
fsubrl
mov
loop
data16
cs
sbb
shrl
inc
cld
cmp
adc
iret
movsl
out
nop
xor
xchg
mov
popa
push
jbe
fsub
addb
jb
xchg
and
xchg
mov
add
xor
hlt
cs
in
insl
mov
or
and
inc
xchg
cmp
arpl
sub
testl
cmc
push
or
dec
and
pop
xlat
hlt
push
aas
das
in
push
pop
movsl
xlat
inc
dec
cmpsl
inc
iret
notl
fs
repnz
divb
and
data16
sbb
push
in
idivl
inc
mov
icebp
cmp
loopne
lea
dec
xchg
push
mov
pop
leave
mov
sub
lret
repnz
jp
mov
inc
xchg
cmpsb
mov
das
scas
sbb
add
js
icebp
jmp
or
push
pusha
sub
push
lahf
cmp
ljmp
call
sti
dec
pop
jg
dec
test
add
pop
ret
pop
mov
cli
in
cmp
rorl
adc
sbb
inc
out
jb
or
ret
xor
push
inc
mov
xchg
in
sbb
imul
mov
nop
pop
and
adc
mov
push
imul
enter
into
pop
push
call
aas
sbb
scas
or
dec
push
lods
or
mov
fs
dec
leave
inc
sbb
ja
pop
mov
cs
pusha
dec
dec
cmp
inc
pushf
and
push
pop
mov
sarb
mov
cwtl
iret
inc
add
fimuls
stos
add
jp
or
push
aas
mov
mov
test
push
push
inc
adc
pop
lods
pop
adc
jbe
scas
push
mov
xchg
sbb
pop
jnp
lea
ss
dec
xchg
cmpsb
addr16
mov
fdivrs
imul
in
loopne
adc
inc
and
and
fnsave
inc
inc
mov
fwait
or
jg
fisubl
sbb
add
dec
mov
adc
xor
xchg
pop
lret
mov
pop
pop
dec
dec
popa
mov
pusha
in
sub
or
ja
shrb
in
sti
adc
aam
and
pop
adc
enter
rcr
clc
aad
push
fwait
aam
push
rcrb
enter
sbb
out
in
arpl
out
mov
mov
mov
loopne
enter
xor
movsb
xorl
idiv
dec
sub
pop
and
loopne
push
test
repz
and
adc
xor
sub
xlat
pop
dec
in
mov
js
sbb
mov
mov
shlb
aad
mov
push
ret
or
mov
mov
pop
mov
mov
pusha
rcr
in
cmp
jb
jp
mov
xor
in
mov
mov
jle
jae
xchg
pop
sbb
icebp
gs
adc
push
faddl
and
inc
stc
lea
jnp
fiadds
or
push
stos
mov
push
mov
ret
xor
rcrb
loope
int3
test
cltd
mov
cmp
pusha
mov
addb
mov
xlat
inc
aaa
or
pop
ja
adc
ljmp
movsb
sbb
jecxz
mov
add
enter
pop
movb
xor
dec
cs
sub
adc
xor
sbb
aas
inc
mov
ficomps
test
xor
rorb
xchg
mov
push
add
lds
je
outsb
adc
pushf
aas
xchg
inc
jle
movsb
sbbb
or
jb
lods
movsl
ret
cmp
mov
push
lock
stc
loope
jb
cmp
dec
push
loope
test
xchg
movsb
icebp
cld
sub
rclb
dec
sbb
jge
cmpsl
pop
into
mov
and
out
into
push
inc
cmp
sti
mov
movsb
sub
cltd
lret
inc
add
push
xchg
cs
out
ds
scas
clc
int3
data16
and
jge
dec
xchg
pop
lods
push
nopl
and
das
add
jo
pushf
stc
movsb
or
adc
adc
sbb
pop
pop
xchg
insb
shrl
nop
rclw
or
imul
addr16
filds
and
jle
pop
or
sti
outsl
inc
call
dec
scas
mov
sub
data16
arpl
nop
out
outsl
cmp
out
and
push
stos
mov
mov
iret
ja
push
jl
in
lock
mov
dec
inc
je
push
inc
push
cmp
inc
adc
and
add
push
lcall
popf
sub
xchg
nop
jnp
xchg
cs
mov
arpl
int3
dec
iret
arpl
pop
sub
mov
fisubl
adc
pop
mov
jg
lock
dec
jbe
int3
pop
lods
cld
adc
jg
jl
stos
lock
fstpl
repnz
or
push
adcl
jg
pusha
bound
jae
xlat
mov
and
das
mov
sub
jg
xor
sti
cld
daa
fbstp
scas
mov
into
outsl
xor
xchg
lret
mov
mov
jo
sub
or
fidivl
std
inc
mov
and
mov
or
xor
adc
lock
inc
inc
jb
add
and
xchg
and
cli
inc
loope
mov
inc
push
dec
inc
pop
pop
dec
push
dec
push
enter
arpl
clc
add
jge
add
cmpsb
inc
in
lahf
pop
sbb
xor
and
imul
repnz
sbb
jecxz
mov
xchg
into
jge
in
sub
or
jb
push
fwait
cmp
rclb
scas
test
or
shlb
pop
push
jge
add
and
mov
fisttpll
imul
fwait
mov
repz
push
rol
push
aad
das
push
aas
mov
imul
xchg
or
pop
out
pop
inc
jnp
xor
mov
xor
das
movsb
push
xchg
xor
cmc
loopne
aad
out
mov
enter
mov
inc
push
push
ss
sbb
or
or
imul
imul
inc
jecxz
pop
inc
mov
rorl
jo
push
fadds
sub
sub
and
iret
fcmovne
lea
das
out
loopne
cmpb
push
or
ret
fisubrl
xchg
and
adc
sarb
movl
bound
int
adc
jl
xchg
sbb
outsl
push
addr16
cwtl
fs
or
nop
mov
stos
dec
jmp
int
arpl
and
mov
loopw
cmp
lcall
dec
shll
push
aad
and
or
pop
fs
pop
lock
ljmp
dec
jp
in
outsl
add
popf
pop
cmp
test
sbb
xchg
push
insl
daa
pop
jnp
js
cmp
push
mov
push
pusha
sbb
xlat
mov
push
out
mov
mov
sbb
scas
mov
ljmp
dec
add
push
lods
or
test
push
gs
mov
das
adc
and
mov
lret
je
add
nop
inc
icebp
sbb
cmp
sti
push
cwtl
shlb
cld
adc
or
push
pop
cmp
and
fidivrl
out
cmp
roll
pop
pop
xor
and
movsl
push
int
xchg
push
in
sbb
fstpl
inc
lahf
sub
imulb
and
ljmp
out
push
xchg
pusha
inc
jnp
pop
sub
sbb
xor
xor
rcrl
pop
lret
inc
dec
out
sub
ss
xor
push
roll
cmp
pop
pop
pop
into
xchg
or
cld
movsb
ret
int3
push
add
cli
push
sub
fnstsw
ficoml
pop
dec
fwait
movsl
cmpsb
or
mov
rcll
cmp
andl
xor
call
int
sbb
ffree
ljmp
divb
out
adc
test
jl
cmc
call
int3
jnp
push
jl
push
fldenv
bound
sbb
inc
push
jecxz
mov
jecxz
inc
mov
and
jg
and
pop
add
repz
xlat
xor
rolb
inc
ret
add
hlt
push
adc
mov
jae
dec
mov
andl
in
js
cmp
mov
jle
stc
or
hlt
jae
dec
inc
out
mov
popf
mov
push
xor
sbb
dec
sub
sub
nop
aad
jb
out
xchg
sub
adc
popa
cld
cmpsb
push
rorb
or
stos
dec
loopw
ret
jo
test
movsl
and
add
stos
mov
idivl
mov
or
imul
pop
enter
lcall
dec
sarb
loopne
aad
or
mov
sub
orb
enter
mov
jno
mov
fs
clc
xchg
cmp
sub
mov
and
xchg
sub
jp
jle
add
or
jo
xor
jmp
xlat
xchg
push
mov
into
mov
repnz
mov
sub
xor
test
pop
sbb
jno
out
sub
adc
cs
mov
mov
push
mov
outsb
pop
adc
mov
std
idivb
pop
stos
rclb
fimuls
loope
lcall
insl
mov
inc
movsl
test
or
aad
mov
mov
dec
scas
adc
cmp
rorb
clc
push
cmc
out
clc
xchg
add
xchg
pop
sti
or
or
xor
shrl
cmp
cmp
push
ljmp
jo
lock
pop
sarb
loope
xor
add
fnstenv
mov
lret
lods
pop
arpl
cmp
out
loope
or
jmp
jns
aas
pop
jns
aas
mov
push
movsb
mov
test
lock
push
xchg
aam
push
push
gs
pop
movsb
mov
dec
insb
lds
lods
sbbb
or
or
mov
inc
push
ja
imul
pop
add
aad
inc
mov
loopne
or
pop
loope
inc
jb
insb
or
cmpsb
add
in
push
insb
inc
dec
add
jmp
neg
mov
dec
imul
jnp
dec
ret
out
shlb
sub
and
and
mov
adc
out
call
push
xor
xlat
mov
and
bound
test
xchg
out
pop
das
push
adc
cmp
stos
test
pop
js
mov
push
fiadds
loope
sub
imul
gs
addr16
scas
sbb
js
out
adc
cmp
xchg
bound
nop
bswap
pushf
icebp
xchg
rcll
icebp
xchg
xchg
mov
divb
pushf
test
pop
sar
sub
cmp
mov
mov
dec
add
outsl
xor
pop
sahf
or
outsb
xchg
bnd
mov
lock
popf
add
inc
pop
mov
pop
add
sub
sarl
add
pop
dec
dec
dec
pop
dec
pop
pop
in
fld
shlb
pop
adc
add
add
add
dec
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
jns
inc
add
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
test
add
test
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
push
test
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
xchg
test
add
test
add
test
add
test
add
xor
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
add
fs
xchg
adc
mov
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
