add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
outsl
mov
jle
jle
jg
jle
cmp
fld
ja
or
adc
bswap
adc
sbb
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
and
push
cmpl
pop
cmp
sti
fucomp
mov
or
test
mov
imul
adc
jo
add
xrelease
cmc
test
es
cltd
xchg
jmp
arpl
das
test
jb
icebp
mov
shrl
push
mov
pushf
jmp
cmc
cli
inc
jno
mov
fcompl
lock
adc
fcompl
out
repnz
adc
xor
out
or
test
cld
pop
sbb
hlt
push
mov
lret
into
pop
lahf
fsubrs
mov
add
lods
movl
mov
sbbl
xor
subl
jmp
fstl
cltd
loope
jns
and
scas
pop
addr16
lea
jle
jg
jle
stos
mov
cmp
stos
popa
mov
jl
xchg
pop
mov
inc
cli
jp
decb
jle
push
es
ja
mov
mov
add
push
ret
adc
das
je
jne
cmp
mov
push
aam
dec
sbb
loop
mov
out
lea
lea
stc
and
mov
movsl
sti
push
inc
inc
outsl
adc
or
mov
sub
clc
inc
inc
mov
test
and
js
std
fnsave
lods
out
stos
add
dec
or
daa
repz
sub
sbb
jmp
xchg
mov
push
outsl
cmpsl
icebp
outsl
cs
sbb
xchg
add
in
push
adc
xor
dec
sbb
or
sar
inc
sti
add
xchg
mov
lea
xor
sbbb
cmpsl
imul
sub
mov
push
dec
push
jnp
push
and
inc
lret
ss
movsl
push
push
mov
sarl
dec
xchg
ds
mov
pop
mov
add
xor
lret
jmp
xchg
dec
adc
pop
pop
mov
jns
cmp
scas
pop
ror
pop
sub
repz
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
out
test
fidivrl
jle
int
mov
sbb
push
cli
mov
movsb
dec
out
clc
push
fnstenv
or
loope
loopne
pop
add
push
adc
jb
sbb
mov
nop
sahf
mov
pop
dec
sbbl
pop
popf
cs
dec
push
pop
out
mov
mov
int
test
or
sbb
cmp
push
outsb
ret
push
std
inc
push
push
xchg
hlt
shll
xor
aam
out
dec
xchg
sbbl
fadds
dec
add
jo
int3
dec
in
xor
cmp
cmp
pop
add
dec
rol
mov
rolb
sbb
loopne
xchg
jmp
jae
push
push
arpl
jbe
out
mov
and
jns
test
imul
adc
xchg
push
aas
repz
fldcw
andl
pop
jle
jle
shlb
jp
or
aad
aam
cltd
push
in
out
jns
xchg
div
mov
rcl
clc
or
std
cwtl
addb
xchg
aaa
mov
psllw
xor
je
push
jge
inc
pop
xor
shlb
sub
jle
ss
fdivr
jmp
iret
xchg
pop
mov
fcomps
pop
mov
inc
lock
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
cli
adc
add
jle
jg
jle
je
jo
in
adc
push
push
out
mov
xor
mov
mov
push
sub
outsb
scas
repnz
lret
sub
mov
mov
jno
iret
push
dec
push
mov
cs
aad
adc
dec
addl
daa
jecxz
jmp
sbb
sub
sahf
aad
out
clc
das
sti
or
ret
sbb
mov
loope
scas
and
nop
mov
test
insb
arpl
dec
dec
cs
or
and
enter
push
xchg
jbe
sbb
adc
pusha
mov
mov
mov
or
sub
insb
xor
iret
cwtl
and
fidivs
andb
js
imul
mov
xchg
push
leave
ljmp
cmpsl
into
dec
arpl
add
dec
jbe
jge
aaa
or
sti
pop
loop
inc
aam
test
fnsave
divb
notl
iret
and
insb
cmpsb
lods
add
pop
and
xchg
lret
enter
xor
rcrb
lcall
stos
shlb
mov
pusha
push
out
add
sbb
cmp
pop
xchg
pushf
jle
popa
sub
jge
popa
push
dec
outsl
push
fcmovu
xchg
mov
je
pop
pushf
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
ss
or
inc
and
cltd
bound
les
in
jmp
jno
daa
pop
adc
cmc
jnp
insl
fcmove
mov
xchg
outsb
xlat
dec
mov
push
cmp
adc
pop
and
mov
movsb
fsts
dec
cwtl
pushf
pop
pop
jl
push
std
cwtl
push
fs
daa
call
push
cld
enter
ret
mov
add
lret
mov
pop
test
mov
sub
stos
das
cwtl
icebp
cmpsb
popf
mov
ret
data16
in
add
xchg
adc
mov
mov
ret
nop
test
test
cmc
pop
mov
xor
mov
cmp
and
popa
test
mov
fs
push
jmp
xchg
cmpl
dec
cmp
popw
in
push
and
movswl
dec
dec
xor
jne
aam
cmp
jnp
mov
xchg
mov
ret
in
in
xchg
sbb
dec
jbe
fs
fstl
cmp
loopne
sbb
sub
fs
sub
or
pop
int
pop
mov
jns
js
mov
jg
pop
mov
mov
pop
idivb
jmp
pop
jb
hlt
xor
sarl
sbb
loope
jecxz
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
mov
pop
dec
jo
jle
jg
jle
pusha
cmp
arpl
js
in
jae
inc
xor
push
push
and
hlt
sub
xchg
fldt
enter
dec
dec
movsb
adc
insb
fdivs
mov
push
call
adc
outsb
fldenv
jecxz
sbbl
std
or
cmp
fs
xchg
inc
cmpsb
std
and
mov
add
mov
movsb
pushf
and
mov
pusha
pop
insl
pushf
shl
call
adc
pop
fldenv
push
loope
rol
out
arpl
ja
inc
ret
leave
sbb
xchg
xchg
ds
lcall
cmpsl
lcall
mov
push
xor
lods
lcall
inc
lock
and
mov
in
push
into
pop
inc
mov
loope
add
addb
lea
jge
das
leave
mov
inc
imul
cld
leave
sub
fadds
adc
lcall
dec
roll
push
fldl2e
xor
pop
fldl
inc
cs
push
insl
fcompl
mov
push
je
jl
push
subl
push
xchg
in
flds
outsl
jl
cltd
sbb
jp
int3
mov
mov
daa
pop
cs
jne
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
push
adc
jle
fidivrl
jle
mov
notl
idivb
les
xor
add
and
pop
in
and
pop
dec
mov
in
mov
add
adc
push
mov
iret
mov
jge
jns
insb
mov
push
push
ss
jp
xchg
rcrb
pop
xchg
xchg
cwtl
xor
xchg
mov
lods
bound
jnp
fistpll
test
pusha
sbb
and
xor
test
mov
and
cmovl
fwait
mov
test
pop
pop
mov
adcb
and
aad
sbb
repz
sbb
mov
xsave
mov
aaa
add
cmp
ret
dec
sbb
fisubl
das
and
in
das
or
enter
les
pushf
xor
in
out
test
lock
and
sbb
pop
sub
loope
xchg
push
fucomp
cwtl
push
test
push
sahf
rcrb
mov
mov
mov
pop
pop
push
jge,pn
jg
cmc
cmpsb
jp
rclb
jb
in
pshufw
push
push
stos
xchg
iret
push
js
jmp
mov
sti
push
adcb
sub
pop
aad
jae
xchg
iret
daa
push
ret
xor
dec
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
push
insb
bnd
jle
jg
jle
jb
push
lahf
adc
jmp
jns
adc
cmpsl
xor
insb
inc
and
hlt
pop
pop
outsl
lret
inc
ja
iret
inc
mov
sahf
sub
cli
stc
mov
dec
lret
push
cmc
jmp
mov
push
mov
call
das
lods
sbb
xchg
rcrb
cwtl
inc
data16
pop
and
jmp
addr16
xor
ret
inc
xchg
pusha
movsl
cmp
dec
lods
cli
out
mov
xorb
mull
frstor
pop
ja
sbb
mov
dec
ds
mov
pop
scas
and
mov
add
sub
xchg
data16
fwait
adc
cwtl
aaa
mov
into
insb
mov
adc
inc
dec
inc
stc
out
gs
andb
push
and
inc
addr16
push
add
sbb
inc
icebp
into
aas
out
dec
adc
mov
pop
std
aas
ds
clc
lcall
inc
fsubr
jge
dec
fs
loopne
jge
mov
movsl
fwait
scas
or
addr16
jae
jp
sbb
mov
xor
xor
inc
pop
inc
dec
jp
xor
push
bound
cmpb
adc
xchg
xchg
cmp
mov
cmp
or
ret
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
inc
stos
push
fistps
jle
fidivrl
jle
push
fnstcw
aas
xor
test
mov
mov
cmp
sub
imul
push
addr16
jmp
out
push
cmp
mov
dec
not
mov
pop
jmp
movsl
test
hlt
mov
sub
add
add
out
jns
mov
mov
bound
dec
ret
adc
lret
jle
int
outsl
pushf
ret
add
out
xor
pop
inc
out
sub
cmp
sbb
inc
std
cltd
shlb
jmp
popf
and
ror
cli
test
bnd
xchg
ja
pop
sub
out
pop
mov
or
sub
clc
les
jecxz
pop
fisubl
xor
push
mov
lahf
push
std
imul
push
jg
mov
push
arpl
loope
mov
dec
in
insl
clc
xor
inc
push
and
fs
stos
xchg
cmp
in
cld
lds
pop
movsl
fwait
lds
sub
mov
popf
shlb
inc
icebp
lret
mov
insb
push
jns
cmp
int
push
cmc
aam
sub
xchg
cmp
ret
or
jo
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
sbb
jle
fidivrl
jle
jae
sbb
inc
add
push
fildl
sar
fsubs
lods
in
jne
add
push
aas
out
xchg
jle
cmp
cmpb
rcl
jnp
xlat
loopne
fnstcw
and
inc
xchg
ss
xchg
xchg
add
cmpb
inc
xchg
mov
dec
in
dec
lret
arpl
add
jb
test
cmp
mov
cwtl
sbb
cmp
cwtl
sbb
in
mov
shl
imul
out
je
fiaddl
jp
pushf
sub
fiadds
test
cltd
test
pop
push
cmpsl
dec
mov
adc
mov
test
or
jb
lahf
xchg
and
dec
sbb
popa
xchg
ja
sbb
repnz
fwait
xor
dec
add
bound
mov
pop
and
xchg
jle
add
inc
mov
jae
movsb
xor
dec
sub
cmpb
push
mov
pop
adc
jae
fisubl
lods
enter
jno
enter
sbb
hlt
xchg
push
push
mov
mov
out
xchg
jmp
mov
xchg
mov
cwtl
or
inc
loopne
or
add
pop
pop
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
lds
jle
jg
jle
add
stc
dec
imul
cs
inc
mov
xor
and
push
cmp
sub
xchg
lcall
sub
xchg
xchg
xchg
mov
pop
pop
mov
jno
inc
test
rcr
sahf
cs
testl
lea
push
pop
aam
and
outsl
mov
xchg
xchg
xor
sub
push
cli
sbb
cmc
fsub
inc
ficoml
cmp
mov
arpl
pop
mov
insl
inc
inc
int3
int3
aam
mov
mov
mov
daa
inc
cwtl
cmpb
insb
test
mov
bound
mov
and
lock
mov
aad
pop
mov
mov
fadds
dec
add
inc
push
lods
mov
pop
sbb
lret
test
inc
movsb
inc
or
mov
outsb
mov
std
jp
pop
popf
roll
lahf
push
lods
ret
inc
or
lret
je
lods
shl
mov
sbbl
jne
adc
leave
mov
push
fldcw
mov
out
sbb
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
dec
data16
push
dec
or
and
jle
test
adcl
data16
inc
pop
lods
repz
in
and
pop
pop
cmp
cmpsb
inc
dec
in
decb
cli
push
mov
insl
mov
fmull
in
sahf
lret
fimuls
sti
pusha
rcl
out
xchg
test
xchg
sub
push
xor
and
int
rorb
cmp
cli
mov
or
jb
push
test
aam
adc
mov
cld
and
pop
arpl
ret
dec
sbb
testl
pop
pop
xchg
push
es
movsl
jbe
dec
repz
dec
push
mov
or
in
dec
sbb
addr16
les
sub
sub
xor
lea
push
outsl
lret
outsb
push
addr16
lahf
fxtract
test
pop
sbb
into
sahf
ja
xor
mov
pop
scas
sbbb
test
jp
add
rorb
arpl
cmc
lea
sbb
and
aam
sub
push
sub
mov
lcall
push
or
lock
push
mov
inc
jmp
or
mov
or
or
out
jl
jle
and
jle
inc
sbb
sahf
cmp
in
mov
mov
clc
gs
fwait
cmp
xor
je
call
popa
push
std
and
jb
hlt
pop
imul
hlt
pop
outsl
mov
mov
pop
push
jo
jnp
icebp
lods
push
loopne
imul
cmpsl
mov
ret
cmpsb
fwait
repz
jge
lock
cmp
mov
mov
and
cld
fiadds
test
arpl
jp
add
or
adc
xor
sbb
and
int3
lods
push
int
in
movl
test
lret
push
jp
and
gs
dec
fsubrl
aas
push
lea
dec
mov
xor
shrl
xchg
mov
mov
test
lret
pop
fucom
dec
fstpt
sbb
or
test
or
je
cmc
nop
sbb
ja
xor
ja
or
sub
pop
call
test
ja
or
bound
mov
jecxz
mov
xor
rclb
ds
call
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
scas
ss
and
jle
and
jle
pop
iret
mov
sbb
cwtl
pop
or
into
popf
xor
mov
nop
mov
xor
in
inc
insb
jecxz
pop
fmull
popf
push
mov
das
add
sub
or
add
in
push
pop
xor
mov
xchg
ret
mov
ret
loopne
adc
mov
pop
inc
mov
xchg
int3
mov
cld
ljmp
jns
jnp
jo
pop
mov
js
rorl
jbe
out
ret
jae
add
xchg
arpl
jb
jns
loope
loop
push
test
stc
mov
pop
rcll
out
test
add
inc
adc
enter
mov
mov
mov
push
fwait
cmpsb
cmpsl
push
dec
outsl
inc
out
je
jecxz
mov
push
sbb
add
cli
dec
sbb
cs
pop
dec
fiaddl
sbb
push
push
fimull
mov
rcrb
mov
cmp
dec
pop
hlt
cmp
sbb
aaa
push
faddl
jmp
fisttpl
pop
out
mov
add
push
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
ds
xchg
popf
cld
adc
sar
mov
xor
dec
inc
xor
es
out
call
fdivp
sbb
std
cmc
shrl
push
pop
inc
xor
fdivl
xor
mov
add
inc
push
outsl
and
pop
cmc
into
inc
test
mov
jg
pushf
xchg
push
or
aad
in
js
sub
sbb
sbb
fadds
sar
push
xor
pop
lcall
jmp
aas
sub
sub
jg
adc
sub
ss
push
hlt
mov
jnp
dec
sub
push
in
and
inc
add
addr16
daa
movsl
out
roll
cmpsl
aas
adc
mov
adc
and
aam
add
mov
repz
nop
out
pop
cmpsb
movsl
push
add
pushf
pop
inc
les
sbb
aam
mov
clc
push
jecxz
mov
lods
ljmp
mov
inc
cmp
outsl
add
pop
inc
add
push
rcrl
mov
dec
mov
int
loop
repnz
xor
add
add
imul
mov
jmp
jbe
xchg
call
adc
mov
jle
jg
jle
lret
pusha
stos
into
into
add
stos
inc
pop
push
mov
jle
je
mov
lret
push
or
push
imul
xchg
mov
fs
push
xor
xchg
xchg
lods
rclb
mov
mov
mov
stc
xchg
push
loope
shll
add
test
incb
sub
dec
nop
out
push
pushl
jle
jp
and
imul
leave
test
mov
loope
inc
cld
xchg
ret
sbb
push
aaa
cmp
dec
cmpsb
icebp
pop
push
adc
xor
push
sbb
xor
sbb
pusha
inc
bound
lods
jno
cmpsl
push
jne
push
jp
and
loope
fsubrl
sub
test
jge
push
mov
roll
lcall
mov
mov
fidivs
adcl
mov
xchg
call
and
lods
addr16
jnp
or
mov
enter
cmp
imulb
cmc
mov
pop
pop
inc
xor
dec
lods
add
mov
mov
mov
xchg
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
fwait
jg
aad
add
and
jle
cmpsl
sub
xor
nop
jne
adc
jns
in
inc
cmp
mov
sbb
negl
imul
xor
push
in
sti
leave
jb
cmc
mov
mov
test
xchg
inc
ljmp
adc
xchg
pop
outsb
fs
dec
dec
pusha
jmp
shrl
int3
mov
pop
les
js
idivb
xor
ljmp
aad
push
notb
inc
das
sub
es
popf
jne
mov
push
jne
jo
lds
pop
aad
dec
sbb
fcomps
ror
loopne
and
jge
pop
addr16
adc
or
out
xchg
or
cmp
pop
sub
jae
scas
xchg
out
jne
push
pusha
or
in
push
sbbl
adc
fwait
mov
pop
jecxz
inc
add
sub
cmp
and
mov
dec
and
fidivrs
hlt
fstp
ret
lea
mov
xor
stos
nop
push
out
push
stc
jg
inc
push
filds
push
rol
call
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
ret
out
jne
jle
and
jle
sub
aaa
cmp
dec
fistpl
jg
sahf
xchg
pop
insl
iret
repnz
jae,pt
mov
sahf
shlb
mov
xor
idivl
repz
cmpsb
leave
add
adc
dec
repnz
mov
dec
shl
xchg
mov
int3
dec
loopne
mov
loopne
jne
jecxz
mov
adc
fcoms
add
std
add
fnstsw
jnp
sbb
push
dec
sbb
jae
inc
jp
jl
dec
sti
outsl
xor
xor
pop
dec
in
test
cmpsb
mov
or
push
jbe
ss
push
imulb
fs
sbb
cmpsl
cmp
cmp
sahf
add
pop
cmp
mov
xlat
popf
mov
jns
or
lret
outsl
sub
push
jecxz
enter
ret
cmp
pop
jbe
lock
add
iret
subl
pop
mov
adc
inc
cltd
mov
js
push
orb
shll
xchg
jl
pusha
mov
xor
int
xor
dec
add
add
sti
mov
stc
repnz
adc
add
and
jle
repz
xlat
jl
add
lods
mov
clc
scas
or
nop
gs
push
adc
jle
bound
sub
add
shlb
jp
sub
mov
dec
mov
sub
jno
inc
cmc
xlat
sbb
ds
mov
jp
scas
je
xor
adc
imul
cmp
mov
in
push
ss
shrb
int
sbb
mov
push
xchg
in
out
out
cmp
inc
or
and
add
mov
xchg
dec
dec
popw
test
enter
ffreep
int3
ja
jle
mov
push
inc
movsb
sarb
int3
adc
rcl
aas
inc
jae
jl
in
mov
add
dec
iret
je
insb
pop
scas
mov
out
rolb
cs
ja
test
enter
arpl
test
sbb
cmpsl
inc
push
cmp
bnd
lret
ret
lcall
fimull
into
mov
mov
adc
mov
mov
mov
pop
in
mov
cmp
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
xchg
rcrl
test
xchg
pop
add
pop
fwait
jns
rorb
sbb
jmp
ljmp
mov
inc
pop
gs
pusha
dec
cmc
mov
push
std
mov
jne
outsl
in
fcmovnu
lods
loope
outsb
inc
dec
dec
xor
adc
jg
ss
or
adc
aaa
sti
xchg
mov
insl
shll
mov
test
fcos
mov
and
test
mov
lods
mov
pop
inc
jns
add
xor
imul
adc
popa
mov
mov
pop
dec
add
imul
test
mov
ss
ds
in
jae
pop
mov
loope
sbb
inc
sar
inc
pop
lcall
dec
ljmp
call
inc
aaa
loopew
popa
jb
and
ja
fisubl
push
push
daa
mov
sub
push
sub
mov
add
or
leave
insl
shl
cmp
inc
xor
mov
scas
add
mov
pop
out
addr16
xor
dec
push
or
mov
jle
sbbl
jge
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
sub
pop
jle
and
jle
jmp
lcall
aas
nop
sub
enter
sbb
cmpps
jo
jbe
out
ja
mov
gs
mov
popa
sbb
pop
pop
fmul
lea
push
dec
jo
and
jl
aaa
mov
mov
cs
push
pop
stc
lret
in
loope
lret
shlb
xor
aam
mov
cmp
inc
jno
lds
test
cmp
movsl
insb
inc
and
jge
lea
lds
repnz
jg
jb
xchg
bound
into
fwait
xor
adc
cli
fdivl
mov
ret
mov
out
xor
cmpsb
jle
jl
das
add
insl
push
xchg
mov
pop
mov
popf
das
ret
in
outsb
lcall
ja
dec
cmp
fs
data16
mov
pop
rclb
adc
fidivrl
mov
ss
cmp
jae
test
xor
jecxz
repz
mov
idiv
les
into
sarb
cmc
rcll
adc
mov
testl
icebp
cmc
cwtl
cld
fildll
xchg
mov
jmp
jns
mov
dec
js
movsl
mov
lods
int
pop
pop
add
jle
jg
jle
mov
ror
sahf
outsb
inc
inc
shrb
add
ficoml
adc
int
jg
scas
push
movsl
or
jp
loop
push
mov
jae
xchg
xor
xor
test
ret
or
inc
xchg
mov
sbb
mov
fistpll
and
jecxz
lret
cmpsb
mov
adc
je
adc
adc
je
in
mov
cmpl
jne
pop
push
fidivrs
xor
add
xlat
shll
adc
and
rcl
ror
mov
cwtl
dec
jecxz
cmp
sbb
xor
mov
and
leave
mov
lds
pop
movsb
xlat
fdivs
cmpsb
addb
adc
xchg
aad
ficomps
cmp
fwait
es
cmp
stos
push
test
movsl
sub
dec
fistpll
jecxz
xor
inc
dec
xor
pop
mov
inc
adc
xchg
scas
or
pop
jle
lret
dec
add
ret
cmp
jo
out
push
loope
cld
push
push
dec
fsubl
push
in
das
leave
ret
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
lret
push
jae
add
jle
and
jle
or
adc
and
or
scas
dec
lods
push
lret
loopne
and
cmp
jmp
jo
cli
insb
inc
fcompl
xor
adc
dec
in
cmpsl
jo
icebp
fcmovb
pop
or
xchg
mov
dec
call
cmp
scas
add
push
jle
sbb
mov
popf
sub
stc
popf
in
xor
clc
jl
fwait
pop
rolb
out
movsb
xor
jne
inc
call
cmp
and
leave
stos
mov
xchg
stos
inc
ret
loopne
inc
push
xchg
cld
fsub
push
ficompl
dec
mov
stos
aas
xchg
push
or
pop
lahf
fisttpl
jae
das
xchg
test
adc
and
jle
sbb
std
sbb
jne
mov
mov
daa
data16
jmp
mov
push
cltd
fs
cmp
dec
xchg
pop
push
lret
out
bound
pop
adc
sti
inc
push
jb
lds
add
xchg
mov
xor
sub
popa
bound
cltd
mov
aas
into
xor
icebp
xchg
sbb
ss
add
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
out
lcall
jg
jle
inc
popf
sbb
xor
fdivrl
stos
xchg
pop
fcomi
xchg
mov
pop
iret
sub
inc
or
js
cmpsb
sbb
sbb
ror
jl
aaa
nop
je
lods
sbb
outsb
cmp
lods
enter
push
push
adc
add
popf
repz
loopne
pushf
adc
push
cmp
pop
inc
je
mov
inc
das
popf
jecxz
sub
jg
loopne
pop
mov
cmp
and
ds
xor
cmp
or
jo
jbe
jnp
mov
daa
and
adc
and
jl
sub
cld
cwtl
daa
push
cmc
sub
adc
add
mulb
out
imul
sbb
dec
cs
inc
pop
mov
fwait
cmc
dec
sbb
sbb
repz
mov
dec
js
insb
or
fnstenv
push
popa
outsl
aam
mov
fstps
push
push
arpl
movsb
pop
ret
mov
cld
ret
mov
arpl
or
sbb
push
in
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
call
jle
jg
jle
mov
xchg
js
jne
subb
push
movsl
test
stc
xchg
imul
pop
xchg
adc
adc
daa
pop
sub
pop
aam
xlat
ljmp
mov
sub
roll
add
out
stos
sahf
or
sbb
leave
test
push
shlb
cmpb
cmp
std
adc
ret
lret
xorl
fidivs
es
mov
mov
popf
stos
mov
or
mov
scas
xchg
adc
sbb
jb
lcall
insb
sbb
in
stos
shrl
pushf
inc
stc
xchg
stos
or
xchg
push
in
lret
lret
loop
lret
adc
sbb
in
push
bound
ljmp
dec
enter
xchg
aad
jecxz
dec
dec
or
pop
loopne
pop
xchg
pop
inc
mov
pop
fs
mov
inc
jmp
push
mov
je
popf
rolb
sub
dec
nop
enter
jl
insb
xchg
or
addb
ret
push
mov
jmp
jb
test
adc
xchg
sub
sbb
jmp
aaa
jae
adc
jecxz
enter
mov
xor
shr
push
or
jno
mov
push
pushf
push
scas
daa
fsubr
dec
xor
xchg
fnsave
mov
push
loopne
ret
daa
xor
cli
pop
or
sub
int3
int
aas
push
hlt
mov
adc
xor
scas
sahf
jmp
jle
es
xchg
lahf
int3
adcl
jo
inc
ds
or
adc
addr16
sbb
xor
and
repz
mov
leave
jmp
aam
cmpl
sbb
sbb
inc
in
pusha
xlat
fstl
sub
jmp
adc
dec
lahf
mov
add
mov
stos
cwtl
inc
mov
sbb
hlt
sub
addl
add
dec
dec
push
cmp
add
pop
call
popa
outsb
lods
cli
adc
nop
outsl
lcall
orb
cwtl
dec
add
xor
inc
inc
test
int
sbb
mov
outsl
test
jmp
fmul
add
sub
lods
jne
or
popf
bound
inc
out
lcall
sub
stos
aad
mov
push
into
inc
add
enter
xchg
cmc
xor
inc
dec
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
cld
dec
mov
jle
jmp
scas
mov
iret
movb
in
call
ret
push
dec
fnstcw
jl
std
pop
addr16
fldenv
xchg
aas
bound
jbe
fmul
fcmovu
add
mov
test
add
sub
add
xchg
lds
push
ja
dec
add
arpl
mov
in
mov
jp
repnz
int
push
dec
es
sbb
xor
add
sahf
cmp
xchg
out
ret
popf
pop
jae
lds
nop
jbe
mov
jno
iret
push
adc
scas
adc
push
sahf
mov
test
xchg
in
push
out
fucom
push
add
ds
mov
jle
add
push
sti
mov
cmp
sbb
and
mov
iret
das
aas
mov
pushf
ja
xor
notl
cmp
inc
pop
ljmp
xor
xchg
push
stc
sti
xlat
sub
gs
sub
xchg
inc
int
jo
std
jle
je
shlb
jmp
mov
adc
xorb
pushf
imul
orb
cmp
cmpsb
fimuls
fcompl
push
mov
mov
cmp
inc
or
int
or
lret
cmp
iret
and
test
xchg
add
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
push
outsb
outsb
push
jns
cwtl
adc
cmp
in
insl
xchg
push
xchg
fucomi
push
in
insl
adc
add
aad
pop
and
push
pop
dec
mov
push
aad
in
and
rcll
int
mov
pusha
cmp
cs
lret
jns
jle
xchg
or
sti
or
and
cmp
push
add
inc
cli
pop
xchg
fwait
and
cmp
mov
mov
pop
cmc
test
movsb
sbb
sbb
roll
dec
or
lods
pop
popa
iret
iret
inc
mov
add
out
push
mov
out
stc
or
mov
and
mov
sbb
push
adc
mov
stc
push
sub
sub
xchg
sahf
dec
add
ljmp
mov
std
jae
sub
aas
jne
pop
push
xor
enter
in
lea
testb
sub
push
roll
test
lea
xlat
xlat
push
sbb
and
sub
dec
in
into
xchg
xchg
lret
aam
sub
and
jno
andl
pop
out
movsl
dec
mov
sub
xchg
ret
test
repnz
or
ljmp
mov
push
lcall
inc
mov
enterw
js
push
clc
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
js
jle
jle
jmp
push
fnstcw
cld
sub
stos
adc
rcrb
cmp
outsl
mov
inc
mov
aam
jg
inc
sbbl
shrl
leave
cmp
lcall
sbb
bound
pop
addr16
dec
push
out
popf
adc
lahf
cwtl
in
mov
lock
sarl
and
or
cmpsb
scas
or
push
dec
mov
sbb
mov
roll
bound
dec
pop
sarl
or
adc
test
shll
les
ds
inc
dec
xchg
nop
and
sbb
loope
adc
jg
or
mov
packssdw
popa
add
mov
push
sbb
ds
outsb
mov
mov
cs
out
push
bound
mov
cli
inc
dec
pop
push
mov
xor
mov
lea
xchg
sub
jge
std
cmp
adc
and
or
mov
daa
stos
or
rorl
cmp
shll
fiadds
cwtl
scas
addb
inc
mov
push
cmp
mov
aam
ret
jae
cmpl
divb
xor
push
and
iret
pop
mov
fs
repz
cmc
sub
daa
sahf
jg
dec
jns
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
pop
jmp
jg
jle
pop
mull
js
mov
stos
fs
mov
pop
repz
ja
jns
ds
pop
and
sbb
fldenv
xor
incb
or
ss
or
mov
mov
add
jbe
pop
jae
clc
mov
popa
pop
lahf
fwait
cltd
ja
call
sub
pop
sub
gs
jno
daa
leave
jecxz
imul
scas
inc
cmc
and
into
push
xor
adc
xorl
jg
std
test
push
and
xchg
jmp
call
cli
lsl
xchg
add
dec
cmpsl
fsts
cmp
nop
js
jecxz
and
cmp
push
jo
and
push
xorl
mov
inc
xor
les
movsl
adc
mov
jns
dec
xchg
pop
test
rorl
xchg
push
cmp
sub
xlat
adc
sub
sub
sub
les
mov
je
xor
jmp
xchg
jp
pop
repnz
js
inc
and
jp
movsl
cmp
movsl
in
shl
dec
enter
lcall
xchg
sti
mov
xchg
mov
or
stos
push
inc
int3
sub
rorb
add
aaa
scas
xor
fwait
lret
xor
lock
mov
loop
inc
add
inc
add
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
adc
fdivrl
jle
add
test
jae
xlat
pop
shlb
ret
sbb
out
cwtl
xorl
inc
mov
add
inc
xchg
inc
movsb
cld
adc
push
scas
icebp
imul
fadd
push
in
subb
mov
and
xchg
push
and
aaa
or
int
push
imul
jnp
leave
pop
outsb
popa
cmp
into
std
inc
ja
loope
inc
lcall
stos
inc
insl
sub
imul
repz
jp
mov
ja
adc
outsb
or
je
mov
jnp
mov
mov
imul
mov
and
testb
sarb
pop
mov
loopne
xor
cmp
jle
and
or
pop
mov
sub
out
jo
imul
bound
js
pxor
mov
fdivrs
clc
or
jmp
call
inc
push
icebp
mov
lcall
insb
pop
sub
rcll
mov
cld
in
fimuls
sbb
inc
xchg
into
sub
aad
mov
shrb
pop
inc
push
xchg
hlt
enter
sub
loope
push
xor
push
rol
enter
roll
mov
mov
jmp
and
pop
xchg
adc
arpl
cli
add
sub
jg
jle
or
cmp
icebp
mov
xor
xor
jnp
xchg
xor
aam
mov
nop
fisttpl
data16
mov
push
movsb
movsl
ret
ret
das
cltd
ret
cmp
pcmpgtb
cmp
aaa
xor
insb
mov
rcl
inc
push
sbb
sbb
rcrb
sbb
sub
stos
test
jbe
fdivl
xchg
stos
sbb
arpl
aaa
cmp
ja
nop
aaa
repz
dec
jae
cwtl
push
mov
jnp
pop
sbb
dec
add
pushf
xchg
int3
lods
xchg
mov
mov
lods
dec
sub
aam
sti
add
in
icebp
jb
jns
ss
subl
mov
mov
adc
jb
inc
popf
sub
rolb
out
enter
mov
shrb
cmp
or
and
xchg
xor
fisttpl
adc
add
mov
xor
cltd
mov
sub
rorl
fcomps
push
aas
dec
inc
xchg
mov
push
rorb
dec
icebp
add
mov
fisttps
movl
in
xlat
cmc
int3
xor
stos
mov
mov
mov
jmp
mov
jmp
push
gs
movsb
es
xlat
mov
pop
jle
fdivrl
jle
push
dec
and
cmp
mov
scas
xchg
inc
jge
cmp
sbb
in
adc
dec
xchg
xchg
icebp
fs
xchg
sti
ja
popa
aaa
test
pop
dec
aad
add
sarb
adc
ret
fdivrp
jae
sub
dec
pop
and
lods
int3
cmp
and
push
inc
pusha
mov
sbb
cmp
push
test
xor
sub
mov
sbb
inc
xchg
lret
and
int
lock
in
out
mov
push
jmp
enter
cmpsl
xlat
daa
cmp
or
fidivl
fstps
shll
lock
xchg
push
inc
loopne
int3
inc
lea
mov
movsl
fs
iret
lret
cmp
mov
outsb
pop
in
pop
cmpps
in
pop
add
test
lods
or
mov
lods
ret
outsb
pop
les
mov
jle
mov
out
std
fcomp
push
and
mov
imul
mov
fmuls
dec
test
cwtl
push
jb
fbld
mov
mov
add
xchg
or
mov
xor
bound
sbb
jl
into
cs
pushl
pop
or
and
mov
mov
sbb
ret
mov
fisttpl
jmp
jl
xor
shlb
mov
mov
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
jb
cmpsl
aam
std
adc
mov
out
fdivrs
mov
mov
movsb
mov
inc
jle,pn
jb
jbe
pop
mov
out
ficompl
fstpt
dec
icebp
icebp
xchg
cmpsb
mov
cs
cmp
push
mov
pop
imul
xorb
inc
lcall
inc
xlat
sub
lock
data16
cmc
mov
imull
fistl
sub
loope
filds
cmpl
sub
arpl
imul
push
cmp
cltd
in
mov
fwait
stos
lret
mov
icebp
mov
jecxz
mov
aam
ljmp
shrb
mov
out
call
out
stos
nop
outsl
std
and
dec
lcall
out
daa
inc
push
pop
xchg
jo
pop
addr16
shrl
icebp
test
imul
lea
addr16
xchg
and
fwait
mov
inc
mov
psllq
inc
and
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
or
cmpb
jle
jg
jle
icebp
sbb
push
pop
xor
mov
pop
fildll
dec
and
and
cmp
inc
out
popa
shlb
cmpsb
ja
sbb
popa
mov
int
and
inc
jl
jp
mov
ss
rorb
jbe
push
inc
xchg
adc
lods
nop
fadds
push
test
aaa
aas
pop
scas
ljmp
lret
cmp
stos
std
test
push
sub
push
xorl
mov
test
add
pop
inc
lods
mov
jb
sar
mov
add
dec
ret
mov
jbe
pop
int3
xor
cmp
xor
js
int
inc
mov
mov
imul
push
pop
sub
adc
insb
cmp
and
dec
out
xor
popa
pop
stos
bound
les
cmpsl
inc
cmc
fiadds
mov
inc
sbb
dec
fimuls
mov
into
add
push
into
add
insb
aad
aaa
std
ja
andb
pop
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fiaddl
push
fisttps
sub
or
jle
scas
mov
sub
pop
add
mov
jle
enter
mov
cmp
test
or
rcrl
test
out
pop
xchg
in
test
dec
push
dec
push
sub
jmp
ljmp
pop
fdivl
inc
js
pop
pop
pusha
jo
stos
jl
lods
lea
sbb
jge
in
xchg
mov
sbbl
rol
popf
cli
imul
mov
loope
stos
arpl
aad
jnp
cmp
fisttpll
cmp
mov
mov
push
pop
inc
movsb
xor
cmp
mov
rcpps
ret
sahf
cld
fdivrl
mov
jne
mov
push
xlat
ret
hlt
popl
cmp
xlat
in
mov
inc
jb
jge
es
lret
mov
push
mov
cmp
mov
xchg
outsb
clc
mov
out
mov
push
jns
adc
mov
movl
adcl
movl
mov
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
aas
jge
add
jg
jle
and
nop
mov
ljmp
dec
mov
insb
in
mov
ror
dec
mov
xchg
imul
iret
fdivs
lret
push
dec
fcmovb
divb
fcomps
sbb
pop
movsl
jmp
pop
inc
xchg
dec
loopne
cli
jmp
loopne
mov
lods
hlt
imul
mov
insb
pop
adc
add
popa
jae
dec
dec
mov
mov
push
inc
push
push
stc
stos
adc
or
mov
push
inc
xlat
addr16
and
xchg
fmuls
movsb
ss
and
inc
les
dec
enter
xor
adc
push
add
or
int
rorb
dec
outsb
cmpsl
loop
sarl
loop
push
jle
loope
sbbl
inc
adc
call
cli
pop
ljmp
jns
xchg
sarb
js
mov
or
sub
imul
add
cmp
je
jmp
xor
cltd
js
popa
cmp
sbb
pop
int
sub
or
jle
sbb
fmul
lds
pop
adc
cmp
sub
cmc
das
push
movsl
pusha
mov
sub
mov
inc
cmp
sub
mov
dec
mov
jne
roll
mov
imul
and
xchg
lcall
xor
and
lret
cmp
add
cltd
xor
jns
or
sbb
push
testl
lahf
xchg
in
arpl
mov
sbb
enter
cmpsl
mov
shlb
cwtl
in
inc
sti
push
jns
or
add
fucom
movsb
scas
push
adc
lods
and
out
popf
cmp
or
mov
roll
out
cli
movsl
mov
aad
cwtl
xor
cli
mov
ja
addr16
and
jae
inc
inc
in
in
repz
pusha
xor
cmp
cmpsb
sbb
mov
inc
and
loop
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
adc
jle
jg
jle
outsl
xor
mov
lret
push
inc
jmp
and
jb
int
adc
sub
test
cmp
int3
jmp
lret
xor
push
cmp
push
adc
push
sbb
in
je
xor
mov
fstpt
out
inc
jns
push
pextrw
jne
sarl
nop
mov
cwtl
cwtl
das
fsubl
sub
dec
cmp
or
and
fsubrl
fistps
mov
inc
and
xchg
mov
add
int
cmp
pop
push
fwait
cli
ss
fs
hlt
or
cmp
test
les
jp
push
push
call
test
movsl
in
cltd
cmp
mov
or
test
call
ljmp
subb
je
and
xchg
mov
lcall
adc
out
adc
sti
inc
mov
aam
mov
push
test
icebp
cmp
jo
mov
mov
add
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
cli
mov
cmp
jle
or
jle
mov
push
sahf
xchg
shll
jl
sar
fs
jecxz
push
push
roll
and
and
jmp
dec
mov
fmull
cld
cmp
nop
adc
jnp
in
push
sub
xchg
adc
sub
lock
and
or
pop
lock
or
mov
mov
pop
btr
and
jg
je
xchg
cmp
inc
inc
push
pusha
and
int
fsubrl
sbb
stos
mov
ss
jge
xorb
jo
scas
lock
dec
fldl
movsb
cmp
ljmp
pop
roll
lahf
cs
xchg
cmp
es
mov
mov
loopne
push
pop
cmp
arpl
cmp
push
pop
and
jecxz
push
popf
adc
jp
negl
adc
cltd
adc
js
subb
lret
sub
fidivl
fisttpll
imul
insl
jb
push
dec
cmp
data16
mov
jmp
dec
sub
lock
lret
test
jg
jle
mov
jle
cmp
mov
negl
fwait
roll
out
adc
adc
jg
jg
sub
mov
mov
scas
ds
outsb
stos
add
push
leave
ror
push
roll
dec
pmuludq
cmc
loop
jbe
jle
and
movsl
push
mov
mov
cli
jno
mov
into
test
mov
pop
add
std
sbb
aaa
les
cmp
xchg
int3
fstl
cmp
xchg
or
iret
ljmp
inc
lea
adc
adc
ss
jae
vphadduwd
pusha
jmp
mov
rorb
je
xor
cmpb
insb
add
ljmp
pop
and
stos
pop
aaa
jo
cmpsb
push
adc
mov
pop
ds
fidivl
mov
pop
push
in
pop
cmp
adc
sbb
pop
mov
or
adc
clc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
dec
adc
sub
jle
and
sub
jb
mov
jl
int3
sbb
jl
mov
jl
pop
sahf
jnp
sbb
push
mov
mov
out
xor
push
orl
adc
jb
xlat
cmc
lahf
jecxz
sub
gs
je
or
ljmp
mov
lds
into
test
add
ljmp
xchg
mov
cmpsb
push
jecxz
shrb
add
ret
xchg
inc
pushf
adcl
ret
pusha
loopne
scas
jle
or
scas
sub
lds
sti
subl
cmpsb
jl
inc
xor
stc
out
jmp
frstor
pop
lea
push
sbbb
cmc
test
les
push
xor
pop
push
leave
adc
pop
aam
mov
gs
rclb
push
aad
sar
sbb
test
cld
adc
mov
push
mov
mov
test
icebp
mov
push
pusha
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
mov
or
and
or
jle
js
in
in
cld
cmpsl
mov
jno
push
mov
stc
push
xor
pop
add
out
push
inc
sbb
mov
gs
jne
stc
jl
mov
test
mov
rorl
ret
jg
aaa
jmp
stc
mov
hlt
enter
movsb
xor
jp
cld
xorl
pop
add
stos
push
and
in
mov
das
cld
dec
xchg
mov
mov
push
pusha
mov
dec
sub
cli
push
jp
ret
mov
idivb
ja
mov
lahf
or
sbbb
pop
int
sub
xchg
popf
jge
leave
mov
jl
mov
sti
das
mov
pop
sbb
mov
mov
ficoml
dec
add
insl
or
jp
jecxz
jge
cmp
lret
movsl
loope
stos
xchg
insb
cmc
in
inc
das
rolb
cli
in
imul
dec
or
or
rorl
add
or
inc
std
decl
jmp
or
stc
rolb
jmp
jg
jle
ljmp
cli
data16
lret
pop
inc
lret
loop
out
aad
jp
add
cltd
js
xchg
mov
cmp
clc
fsubl
jge
fcmovu
stc
or
add
mov
xchg
rep
cmp
and
or
sbb
fst
lcall
inc
sbb
out
sti
pop
dec
jmp
inc
dec
sti
test
xchg
xchg
pushf
xchg
ds
xor
xchg
imul
cmp
cmp
jb
les
or
cmp
mov
lret
ss
mov
jnp
decb
mov
push
pusha
mov
scas
xor
scas
js
add
fwait
pop
imul
cld
lahf
adc
xor
into
movhps
jb
in
mov
push
sub
inc
lcall
jns
xor
cmp
lcallw
cmp
sbb
sbbb
mov
add
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
push
jb
movsb
adc
push
aas
inc
mov
adc
cmc
mov
jbe
out
pop
jo
xchg
push
enter
push
jb
repnz
and
fnstsw
outsl
outsb
jp
and
dec
shrl
xchg
repz
push
movsl
mov
imul
int3
pop
adc
mov
outsl
into
adc
dec
das
inc
jne
push
test
pop
pop
imul
int3
lds
idiv
fidivrl
push
jle
and
mov
sub
inc
inc
movsl
mov
mov
mov
mov
jmp
es
mov
les
xor
jecxz
or
jle
cmpb
and
mov
mov
arpl
xor
data16
xor
ljmp
mov
jl
mov
pushf
rorb
mov
stc
add
mov
pop
dec
rorb
jns
push
xchg
pusha
out
fs
mov
mov
int3
jno
jmp
sahf
sti
adc
dec
pushl
data16
jns
add
inc
push
insb
mov
jb
stc
sbb
jl
or
insl
test
cmp
xchg
pop
adc
out
out
aam
adc
test
jp
dec
or
ds
roll
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
rcrl
jg
jle
dec
lcall
je
or
scas
pop
cwtl
jns
frstor
dec
push
jno
ret
pushf
add
fdiv
mov
iret
dec
adc
push
les
dec
gs
xchg
shlb
lret
jl
ficomps
mov
lret
xor
mov
int
dec
dec
inc
jp
es
mov
out
sub
out
lods
neg
idivb
pop
mov
pop
addb
sub
xchg
or
data16
clc
rol
sub
jl
add
jg
or
push
inc
js
sbb
std
mov
jo
jns
mov
mov
push
punpckldq
sub
cmp
popa
and
aaa
push
xor
fadds
xchg
jmp
repz
outsb
jle
ja
out
out
gs
mov
cld
lods
inc
scas
adc
sbbb
in
fdivrl
mov
pop
mov
sub
dec
mov
shll
loop
dec
in
fwait
mulb
mov
mov
inc
cld
cmp
pushf
clc
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
adc
repnz
jle
push
jg
jle
pop
mov
pop
lret
mov
into
cld
stos
xor
adc
dec
or
ljmp
lock
imul
stos
cmovnp
mov
les
in
sbb
add
je
cltd
jns
and
lods
ds
push
bnd
es
add
xchg
cltd
cmpsl
xor
jne
lods
mov
test
jae
mov
sbb
mov
sub
cmp
scas
inc
mull
xor
pop
or
pop
jo
mov
or
imul
jno
in
xchg
xchg
in
cltd
push
mov
cmp
mov
pusha
subb
pop
pop
test
mov
jp
cmp
sbb
int
aaa
sub
ret
std
ss
mov
lret
aad
push
cmp
loop
mov
das
insl
movsb
or
push
test
popf
xchg
push
inc
cmp
cmp
pop
xor
sub
fadd
cmp
sbb
adc
iret
add
repz
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
or
jle
push
jg
jle
inc
mov
or
insl
push
jmp
lcall
pop
rep
add
dec
cmp
mov
andb
cwtl
mov
mov
lds
cmp
mov
loopne
jmp
testl
pop
divb
dec
mov
adc
or
and
sub
inc
mov
in
out
push
mov
fs
inc
mov
icebp
jnp
out
cwtl
mov
enter
lcall
jp
mov
lock
out
and
test
data16
outsl
dec
in
cmp
pop
xorl
repz
aam
arpl
cmp
inc
outsb
pop
sbb
int
push
xchg
push
mov
pop
sbb
call
adc
mov
aam
jle
and
pop
test
mov
push
out
xor
xchg
jno
mov
jbe
movsl
xor
pop
adcb
psllw
or
cmp
fdivr
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
mov
jbe
add
jg
jle
fiaddl
and
or
jbe
ret
push
movsl
arpl
pushf
mov
lcall
incl
pop
daa
addl
loope
pop
movsl
push
push
inc
ret
push
int3
mov
outsl
js
and
and
in
dec
iret
jns
scas
pop
cmp
add
out
push
scas
jns
mov
xor
adc
fistpll
xchg
push
gs
xor
jbe
orl
call
sub
and
repnz
mov
mov
int3
jmp
dec
out
outsb
xor
fsubr
inc
or
sbb
mov
int3
lods
and
sbb
out
imul
pop
ss
testb
jno
rorb
sub
add
js
out
mov
divb
test
or
andl
and
dec
cli
mov
xchg
out
push
test
add
rclb
mov
pop
or
call
sbb
dec
jns
mov
enter
dec
int3
sub
or
sbb
mov
mov
mov
lds
pusha
lods
std
xchg
enter
out
jl
adc
imul
push
and
dec
adc
adc
sub
jns
jne
adc
mov
inc
mov
jp
mov
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
in
xchg
test
cmp
lds
jle
fdivs
push
je
sub
push
sbb
xchg
repnz
xor
mov
inc
sub
stos
sti
jmp
sub
inc
xor
insb
mov
out
jne
mov
and
iret
leave
pop
mov
or
pop
sarl
cmp
fdivr
mov
inc
xor
repz
out
in
inc
je
shl
xlat
je
inc
aaa
push
out
dec
scas
fcomps
add
inc
insl
les
dec
loope
ljmp
inc
push
cmp
fbstp
jge
stos
mov
sbb
push
push
sbb
aas
inc
pop
stos
cld
out
jecxz
push
into
lcall
sbb
in
add
insl
lods
cs
addr16
lcall
cmp
push
and
test
sub
mull
xchg
mov
ficomps
or
fxch
xor
out
mov
adc
pop
mov
lcall
mov
pop
and
pop
push
push
xor
inc
sti
stos
push
inc
mov
push
fstpl
outsl
dec
pop
cli
in
ljmp
enter
and
mov
xchg
cmpl
js
scas
cld
out
movsb
sub
adc
pop
xor
xor
add
jmp
jg
add
jns
cmp
cmp
dec
cmp
lds
jle
repz
pop
aas
loop
xor
andb
add
lahf
mov
hlt
pop
scas
test
roll
fs
stos
pop
xchg
shrb
ss
mov
int3
sbb
mov
outsl
mov
inc
or
dec
aaa
cmp
aam
imul
mov
push
rcl
cmp
push
sar
jmp
cli
dec
sbb
xor
dec
hlt
jle
inc
sub
pop
repz
aad
sbb
mov
add
icebp
mov
test
mov
hlt
in
in
xlat
pop
add
faddl
inc
je
lods
scas
lahf
out
adc
add
aaa
test
aam
mov
push
cmp
sbb
fwait
jl
push
lock
cmpsb
dec
inc
pop
loope
mov
sbb
cmpsl
into
mov
xor
aad
or
imul
es
inc
adc
xorl
xchg
idivb
mov
cmpsl
pop
lods
jmp
jp
ret
mov
pop
mov
pop
xor
sbb
jbe
in
push
push
stos
ds
xchg
mov
enter
mov
push
push
xchg
jnp
inc
lea
ds
test
imul
into
sub
sub
mov
pop
xchg
addb
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
cmp
lds
jle
mov
inc
add
movsb
enter
jle
aad
rcrb
mov
subl
pop
xlat
adc
push
std
cmc
add
test
inc
aad
mov
add
ds
lods
jae
insl
sti
ss
jns
xchg
mov
jno
divl
ss
jp
xor
mov
xchg
jecxz
lcall
je
out
sub
leave
jecxz
and
cmp
sbb
rcr
xor
cmp
inc
push
xor
in
push
and
sub
push
xorl
mov
jmp
cmp
js
push
enter
xlat
dec
aad
pop
jae
sub
movsl
imulb
je
iret
cmp
mov
and
inc
lea
nop
iret
lahf
dec
dec
lcall
imul
cmc
in
inc
pop
lahf
dec
push
test
lods
add
pop
nop
pop
cs
adc
xchg
xchg
cld
cli
orl
ds
sahf
mov
repnz
gs
mov
addr16
nop
outsb
aam
mov
loope
jae
data16
aas
xor
ljmp
push
xchg
ss
iret
ret
push
loop
outsb
mov
adc
sub
movsl
dec
sti
sub
mov
or
mov
addr16
insl
les
xchg
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
inc
jnp
icebp
jle,pt
mov
jle
xor
fcomps
ror
mov
cwtl
into
lcall
arpl
dec
pop
repnz
lock
movsb
mov
outsb
ffreep
dec
push
arpl
jb
and
lret
mov
aam
nop
cmpsb
inc
xchg
mov
leave
repz
push
cmp
ljmp
xor
sbb
mov
pop
aad
movsl
dec
mov
clc
aaa
scas
or
fisubrs
cmc
fnstenv
loope
arpl
cmpb
mov
dec
cmpsw
outsb
js
orl
ljmp
adc
lea
sub
lret
dec
pop
mov
and
xor
jae
arpl
test
add
lret
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
pop
cmc
aad
aas
jle
mov
jle
ja
je
xchg
out
out
xchg
pop
std
push
aas
inc
mov
lret
adc
add
pop
push
lock
jge
cld
sub
daa
add
inc
pop
cmp
arpl
add
lea
xorl
mov
sbb
dec
loope
stos
fistpll
mov
add
adc
dec
fsubrl
ret
mov
jle
xor
lcall
es
idivb
insb
xor
out
inc
mov
mov
repz
sahf
std
out
fcomps
scas
fdivrl
jle
mov
cmpsl
insl
jb
popa
jns
cwtl
mov
dec
jl
adc
push
mov
mov
add
inc
loop
fdivr
sub
adc
jbe
ret
jbe
pop
push
ljmp
or
and
jmp
mov
stos
popa
jns
in
mov
inc
cmp
jle
jle
mov
iret
sbb
mov
shr
jmp
or
push
jns
bound
test
in
sbb
rorb
xor
imul
jne
add
stos
jb
jae
lcall
push
xorb
cmpsl
icebp
test
and
push
push
mov
lds
clc
enter
cmc
and
int3
mov
int3
and
imul
adc
loopne
mov
addr16
out
jno
lahf
sbb
cmp
xlat
rcll
and
or
mov
daa
adc
xorl
mov
aaa
mov
subl
xor
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
inc
inc
jno
cmp
jle
jle
jle
lcall
in
addr16
repnz
fstp
push
or
into
es
and
mov
and
dec
jmp
aad
scas
add
push
or
fimuls
out
das
shl
scas
mov
jb
inc
cmp
cmp
mov
jge
jg
jge
sbb
ret
in
cmovbe
sbb
lret
jmp
pop
aas
in
xchg
and
add
jmp
xchg
into
dec
sti
popf
xchg
mov
push
stos
mov
sbb
sbb
mov
mov
fninit
imul
fidivl
sbb
scas
mov
add
cwtl
sbb
jne
cmp
or
pop
je
sub
jne
pushl
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
or
cmp
jle
call
sbb
lret
ljmp
jg
incb
pusha
push
adc
mov
push
or
inc
leave
mov
negb
adc
popa
aam
mov
sahf
arpl
in
mov
sbb
loope
bound
ret
es
inc
clc
jle
dec
pop
out
inc
insb
js
jmp
sub
mov
inc
add
shrb
lret
inc
xchg
cmp
jno
sbb
add
pusha
pushf
mov
xchg
and
dec
jg
mov
dec
imul
in
aad
test
xor
stos
jl
int3
or
and
fistl
sbb
adc
test
add
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
out
jne
jmp
jle
jle
idivb
dec
cmpsl
nop
add
dec
add
and
incl
scas
setl
dec
scas
ds
orl
outsb
jne
rcrl
int3
jle
adc
dec
add
jp
xor
jne
test
xchg
dec
jne
sbbb
jb
inc
sub
adc
xorl
jno
and
xchg
adc
test
int
and
fstpt
clc
popf
jle
cmp
mov
mov
sbb
enter
or
dec
mov
ljmp
lret
int3
xor
lock
inc
push
cmc
out
in
dec
and
and
test
pop
iret
scas
dec
shlb
testl
decl
cmp
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
mov
jle
jle
jle
or
sub
push
out
popa
push
lods
and
xchg
push
adc
scas
test
inc
fs
mov
idiv
push
adc
ret
call
push
xor
xchg
mov
sahf
aad
data16
test
inc
fwait
push
lea
adc
jg
mov
inc
fidivrs
xchg
bound
jbe
stos
nop
popf
cld
and
pop
dec
inc
scas
repz
sbb
sub
adc
push
dec
or
in
lods
jp
fscale
sbb
clc
push
mov
sub
lret
aam
scas
ret
ja
pop
push
adc
cmpsb
inc
loopne
call
jno
jnp
sti
das
ret
mov
inc
and
xchg
arpl
sbb
aam
inc
in
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
push
loopne
es
jle
mov
jle
jb
xor
and
popa
sub
cmp
cmp
lock
push
jecxz
mov
movb
mov
push
pop
loop
data16
js
add
das
xlat
sub
push
ret
mov
nop
lock
dec
jno
push
jne
icebp
mov
inc
cld
aad
sti
xchg
pop
xchg
add
mov
shll
pop
repnz
sarb
into
dec
jmp
lret
in
ss
xor
adc
jnp
popl
add
push
stos
xor
jns
negl
dec
mov
lea
and
and
cmp
das
fisttpll
out
or
fsubrl
sbb
out
dec
push
xchg
mov
test
leave
test
jae
sahf
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
mov
mov
jle
mov
jle
int3
inc
lods
push
ljmp
or
mov
mov
mov
ljmp
stc
mov
dec
xchg
cmp
adc
lret
aas
jg
jne
xor
mov
cmc
pushw
adc
std
mov
mov
cmpsb
sub
add
sti
addr16
sbb
adc
and
xor
inc
xor
inc
fdivrl
popf
mov
mov
mov
xor
and
into
jns
fistpl
push
mov
cmp
jecxz,pn
mov
outsl
adc
cmpsl
cltd
jbe
and
orl
aam
imul
aaa
xor
into
loopne
fsubrl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
addr16
push
jle
jle
jle
aam
ret
mov
sub
or
sbb
inc
mov
jne
loop
mov
and
loopne
lea
jl
push
cwtl
xchg
nop
push
testb
add
iret
fsubrp
xor
add
je
xchg
pop
icebp
push
mov
std
adc
es
inc
into
popf
mov
push
mov
mov
fbld
adc
jno
faddl
mov
sarb
pop
aad
loop
scas
les
insb
scas
scas
out
push
jl
jecxz
jbe
push
or
frstor
mov
outsb
cmc
sub
pusha
ficompl
push
pop
into
ds
movsl
pop
mov
pop
daa
jnp
mov
incl
and
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
mov
movsl
scas
shll
jle
jle
jle
adc
jo
out
ret
inc
into
mov
jne
das
mov
dec
lods
shll
push
mov
cld
inc
xchg
sub
dec
dec
ret
xchg
call
xor
int
jno
mov
or
in
dec
inc
sub
xlat
scas
jl
inc
rclb
jge
or
sub
sub
jmp
out
repz
pop
mov
pop
negl
in
xor
fstpt
fsub
inc
xchg
out
sub
sub
mov
jo
pop
inc
fidivrl
jae
orl
jmp
pop
jae
loop
lret
pop
test
call
and
pusha
lods
and
xchg
xchg
lea
pushl
sarl
ret
or
add
mov
jmp
decl
xchg
int
adc
mov
jle
mov
test
push
movsl
cmp
out
stos
jl
cmp
cmc
push
mov
push
dec
ja
cmpsl
out
push
pop
mov
jo
mov
roll
les
jns
or
mov
ja
movl
in
xor
dec
pop
int
lods
lea
in
mov
dec
icebp
cmc
imul
test
out
pop
mov
int
in
xchg
mov
sbb
xlat
jmp
fsubrl
cmp
or
mov
mov
dec
pop
cmp
cwtl
and
lods
fdivrl
xchg
loopne
adc
sahf
fisubl
xchg
or
add
xor
jle
adc
xor
sbb
mov
ds
jnp
lahf
push
ret
popf
enter
fdivl
cmp
scas
add
loopne
add
inc
loop
xchg
imul
sub
aaa
jle
mov
jle
shlb
mov
aam
and
aam
fcomps
mov
sub
lods
pop
outsb
adc
pop
xor
bound
jne
popa
adc
sbb
iret
xchg
jne
dec
fidivl
fisubrs
outsl
sti
jle
adcb
lret
jo
xchg
jmp
sub
sub
add
inc
std
push
in
cmp
xor
ds
pop
mov
test
das
leave
gs
in
out
inc
enter
icebp
xchg
mov
lcall
aam
xor
andb
call
push
xchg
sub
rorl
imul
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
pop
jge
xor
jle
jle
xor
sub
rcrl
loop
jecxz,pt
mov
jnp
pushf
shlb
fs
jae
mov
mov
aam
inc
bound
out
mov
psubsw
xor
pushl
in
add
mov
fcoml
mov
xchg
enter
mov
mov
dec
mov
aad
fiadds
cmpsl
mov
sbb
scas
and
arpl
aaa
fimull
jge
int3
pop
mov
idiv
mov
and
xchg
outsl
sbb
jnp
push
addr16
popa
ret
jno
idivl
jg
pop
insb
mov
jns
mov
fcompl
sahf
int3
pop
dec
hlt
mov
or
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
loopne
pop
adc
mov
jle
and
daa
or
rorb
jg
lahf
jnp
insb
sub
stc
sbb
xchg
sbb
dec
fcmovne
js
pop
jge
mov
pop
into
leave
jno
pop
inc
and
or
push
adc
xor
inc
icebp
je
or
iret
pop
inc
rorb
jns
xor
adc
test
push
icebp
movsl
scas
inc
mov
sub
popa
cmp
in
in
loope
and
adc
lock
xor
popa
in
pusha
imul
cmp
stc
or
dec
fdivrs
dec
es
push
ds
cmp
insl
ljmp
fs
dec
int3
decl
imul
push
sbb
dec
adc
mov
lahf
jb
add
enter
std
decl
add
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
dec
jmp
or
inc
fnstsw
mov
jne
add
mov
dec
xchg
iret
pop
cmpl
mov
cmp
adc
es
loope
iret
jmp
cwtl
and
popa
addb
out
outsb
and
in
dec
daa
or
pop
rcr
and
sub
ljmp
sub
shrb
and
repnz
xor
clc
adc
jle
movsb
mov
push
fnsave
test
inc
stc
sbb
movsl
nop
sbb
push
shrl
lret
loope
clc
inc
mov
adc
scas
cmp
out
cmp
pop
add
lods
add
clc
mov
jge
sub
ret
sub
jnp
idivb
pusha
pop
push
sub
mov
inc
cld
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
daa
into
scas
inc
jno
jle
mov
jle
mov
lahf
mov
iret
sub
mov
sbb
into
test
xor
cmp
outsb
in
daa
fxch
fisubs
loope
jb
jg
add
xor
pop
ror
push
xor
aaa
test
data16
insl
add
insb
adc
xchg
pop
jns
cmp
push
or
mov
mov
sub
dec
push
push
mov
and
sahf
dec
fs
pop
repnz
roll
and
movsl
pop
popa
xchg
cmp
aad
mov
sbb
cmp
jp
xor
popa
addr16
rol
pop
mov
mov
gs
std
mov
sub
rorb
loope
xchg
hlt
call
xor
jmp
popa
jno
jnp
jnp
or
fsubr
gs
lret
jle
mov
jle
shll
jl
jle
push
push
push
jecxz
dec
lret
sbb
pop
mov
inc
sbb
inc
adc
xor
dec
stos
test
mov
jns
loope
int
mov
sbbb
dec
negb
andb
es
sub
inc
test
outsb
push
or
xchg
mov
push
out
adc
jmp
iret
loop
inc
inc
cmp
adcb
lods
imul
xor
sbb
push
jl
lret
xchg
sti
mov
and
leave
mov
pop
jb
in
jnp
dec
cmp
popf
leave
test
rcrl
and
pop
jnp
pop
mov
fucomp
cli
mov
imul
xor
jmp
test
xchg
push
stos
push
push
gs
pop
in
enter
jle
jle
xor
js
imul
dec
aad
push
xor
loope
sbb
or
je
sub
jno
mov
out
inc
divl
xor
or
div
sub
xchg
jp
mov
hlt
xor
lcall
fidivrl
mov
pusha
jg
stos
xor
and
dec
arpl
outsl
movsb
movsl
testb
pop
mov
shrb
addr16
shlb
jle
jg
idivb
pop
dec
sahf
enter
popf
mov
xor
js
cmp
dec
xorb
mov
repz
jns
or
test
add
add
add
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
arpl
ret
adc
mov
into
out
add
jo
push
cmc
push
push
sahf
push
in
std
mov
mov
lret
pop
mov
xchg
cmpsl
in
mov
dec
ret
arpl
mov
mov
or
sbb
cli
fnstsw
jmp
aas
mov
ret
addl
mov
fs
sub
mov
pop
pop
mov
and
rcr
add
jnp
loope
mov
dec
shlb
fcom
add
cmpsl
aad
cs
or
push
mov
imul
lods
mov
int3
mov
test
imul
mov
xor
les
sbb
dec
clc
iret
xchg
sbb
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
