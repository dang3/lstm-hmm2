push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
cmp
mov
int
adc
pop
shrb
fisttpl
lds
lods
cld
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
xchg
mov
testl
dec
dec
or
mov
insl
sub
mov
rcll
jmp
or
jne
or
sub
dec
leave
jl
dec
mov
movsb
in
sub
jnp
fstpl
xchg
aas
push
fldcw
stos
adc
lock
scas
xor
hlt
cs
dec
mov
cmp
mov
dec
inc
sbb
inc
mov
aam
sub
mov
lods
push
or
fcoml
dec
jae
sbb
push
mov
jmp
adc
inc
test
cltd
aad
fs
loopne
loope
push
add
ljmp
out
and
jbe
adcl
sub
pand
nop
and
lahf
add
lds
adcl
cltd
loop
cltd
adc
push
cmpsb
insl
and
pusha
shlb
and
add
fisubl
adc
adc
dec
shll
push
ja
repnz
xor
mov
test
mov
pop
js
cli
aad
lcall
mov
mov
bound
mov
inc
xor
push
cmp
push
mov
clc
aam
scas
inc
adc
out
sbb
ja
cltd
sub
push
pusha
xor
bound
mov
dec
std
jae
inc
mov
xchg
xchg
or
cli
stos
data16
daa
jle
ret
mov
mov
dec
jmp
aas
sbb
lds
mov
cld
xchg
mov
cmp
dec
cmpl
mov
mov
add
pop
icebp
leave
xor
jg
in
es
mov
fcmovnb
push
dec
popa
and
aam
mov
mov
push
inc
std
loope
dec
mov
sub
pop
popf
xor
adc
and
sti
sar
xor
aas
and
loopne
loope
dec
sub
daa
xchg
jns
call
inc
and
lock
cmp
mov
pop
and
mov
lds
movsl
jl
sbb
or
cli
loope
call
pop
cmp
and
insl
sbb
push
aad
mov
xlat
gs
jo
loopne
enter
bound
cmp
mov
sbb
xor
int3
push
fcoml
loop
mov
push
lds
fistl
cmpsl
sbb
fcomps
mov
add
or
or
inc
xchg
es
mov
or
stos
push
call
mov
add
mov
pop
shlb
add
inc
test
dec
icebp
daa
mov
push
push
repz
mov
add
rcll
jo
ds
lret
sbb
mov
push
or
mov
loopne
mov
arpl
hlt
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
sub
int
adc
int
adc
dec
nop
sbb
out
and
pop
test
mov
push
js
lds
push
jbe
pop
lods
pop
out
lea
ss
out
mov
adc
data16
mov
movsb
je
cs
cmp
cld
xor
push
xchg
sbb
negb
mov
out
cs
mov
mov
xlat
inc
bound
iret
into
and
sarl
mov
mov
xor
push
mov
jo
pop
or
dec
dec
push
int
cmpsb
call
pop
arpl
or
test
inc
cmp
mov
push
push
mov
rcll
xlat
stos
mov
shlb
mov
and
gs
pop
jle
ret
fxch
adc
aas
in
cmp
repnz
pop
jb
cmp
adc
ficoms
mov
popf
or
and
jb
stos
pop
jb
fcmovnbe
lret
out
dec
cmp
add
aaa
and
xchg
pop
and
xor
fstps
in
pop
das
add
adc
lods
in
out
lcall
dec
push
and
ficoml
test
jle
gs
sbb
pop
push
mov
in
mov
js
dec
mov
dec
mov
lock
mov
xchg
jno
fisubl
cmp
scas
push
pop
repnz
notl
add
loope
pop
mov
test
sti
xchg
jno
mov
rcrb
rolb
cli
push
mov
jmp
stos
mov
ret
in
mov
cmc
xor
mov
ret
dec
das
and
xchg
daa
sub
push
stos
cmp
or
ja
jo
in
sub
inc
addr16
stos
pop
inc
loope
adc
mov
push
sbb
fs
cmpsb
insl
and
arpl
push
int
pop
jge
ljmp
cmp
xor
mov
add
daa
jmp
jmp
call
dec
pop
push
mov
adc
hlt
outsl
sub
dec
nop
or
lret
xchg
sbbl
in
jmp
mov
lods
les
cmp
fwait
subw
std
iret
arpl
or
lcall
push
add
push
shrl
mov
xchg
movb
in
adc
or
loopne
cmp
dec
imul
in
outsb
imul
cmp
jecxz
scas
pop
popa
shl
xor
addr16
flds
sub
fisttpl
cmpsb
jle
xor
or
enter
adcb
adc
std
cmpsb
inc
sub
lret
repz
clc
cmp
mov
inc
sbb
shll
std
and
add
sub
ja
mov
test
jns
mov
mov
insl
loop
ret
mov
imul
adc
insl
or
repnz
cmp
in
jl
add
jg
fstps
repnz
pop
push
fsubrs
shrb
mov
cmpsl
pop
cmp
lods
nop
add
fs
sbb
sub
and
sti
in
into
outsb
les
mov
sub
cmpsl
in
call
inc
adc
jecxz
mov
jmp
mov
inc
jmp
lahf
cmp
xchg
sbb
test
adc
out
inc
aaa
lods
imul
or
jo
ds
inc
xchg
mov
jle
push
les
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
mov
sub
or
adc
adc
adc
ljmp
lds
or
stos
arpl
inc
jnp
sub
in
mov
jo
sarb
and
push
into
std
sub
dec
mov
inc
add
test
ljmp
sub
outsl
addl
push
jecxz
lahf
mov
repz
or
movsb
loopne
das
dec
lahf
mov
fisubs
dec
movl
or
lret
testb
xchg
fildll
pop
std
sub
and
mov
ja
iret
sub
mov
cmp
and
hlt
pushf
jbe
mov
xchg
repz
pop
sub
xchg
dec
adc
les
mov
pop
insl
cmp
rorl
fidivl
psrlq
cmp
xchg
xchg
scas
jp
insl
sub
inc
out
lret
mov
pop
sbb
push
push
aas
mov
or
in
mov
sti
es
repnz
xchg
jecxz
and
cli
fmuls
inc
adc
xor
stc
cltd
in
icebp
sub
imul
or
icebp
push
mov
movsb
xor
mov
cli
popa
sbb
orb
out
lods
xchg
std
and
das
adc
mov
sbb
xor
adc
test
push
stos
popa
enter
popa
pop
mov
xor
rcrb
cwtl
lsl
add
icebp
cli
xchg
add
lea
jnp,pt
xchg
push
jmp
mov
and
push
lock
adc
daa
pop
scas
vmovups
repnz
jns
jns
adc
dec
xchg
lahf
ficoms
inc
pop
xor
push
out
orl
push
dec
sbb
jge
sbb
mov
hlt
or
xor
adc
push
sub
clc
xor
cltd
mov
loopne
push
mov
push
ret
cmpsb
cmc
xchg
fisubs
adc
cmpsb
pushf
mov
fs
push
mov
and
test
aad
clc
fildll
xchg
pop
mov
xor
mov
imul
or
push
push
stc
xor
ret
movsb
fstpl
hlt
out
push
push
lods
ss
adc
jno
pop
outsl
mov
sub
pop
jns
sti
push
sbb
and
and
aaa
hlt
scas
imul
inc
inc
out
es
dec
flds
push
int
aaa
ds
repnz
cmp
fs
mov
adc
das
xchg
mov
popa
mov
hlt
and
movb
les
xchg
in
push
cmp
inc
gs
imul
fs
and
mov
dec
mov
scas
shlb
stos
sahf
int
lds
das
push
das
iret
outsb
rorb
mov
inc
xchg
dec
mov
cmp
jecxz
xorl
roll
xchg
fsts
loop
inc
and
and
mov
add
clc
mov
xor
cmc
xor
stc
jae
mov
cmp
lahf
hlt
mov
sbb
cmc
stc
outsb
xor
cmpsl
cmp
mov
shrb
clc
ret
adc
jne
sub
jo
imul
sub
fistl
movl
jmp
mov
sub
into
pop
inc
test
icebp
dec
insl
push
mov
add
decl
adc
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
leave
mov
mov
sub
cmp
out
mov
mov
fistps
push
vpaddq
imul
lret
mov
fsubp
test
popa
inc
xchg
push
lock
add
pop
dec
stc
inc
cmpsb
mov
and
dec
lcall
dec
mov
xor
dec
pop
jg
dec
adc
aad
iret
std
mov
push
repz
adc
sbb
cmc
pop
cmpsl
jp
dec
sar
push
movsb
scas
rclb
sub
loope
popf
mov
mov
rcr
cmp
pop
push
icebp
sbb
push
jg
ja
bnd
sub
inc
int
adc
orb
lods
std
jmp
push
daa
fsubrs
jnp
mov
cmp
cld
mov
xchg
push
sbb
adc
jo
lds
ror
gs
mov
dec
iret
add
sbb
fs
mov
mov
dec
adc
scas
jno
scas
stc
fprem1
push
pop
xor
xor
add
repz
pop
ret
inc
jnp
add
mov
mov
add
mov
ds
das
inc
lret
push
adc
inc
jo
xor
mov
or
cmc
xorl
sbb
xchg
mov
xchg
mov
js
loopne
out
and
imul
inc
xchg
test
xor
push
inc
das
cmp
inc
fiadds
pop
mov
mov
xchg
cwtl
es
dec
xlat
mov
xlat
add
or
mov
mov
aaa
push
fiaddl
jg
mov
dec
daa
and
pop
sub
dec
inc
xlat
test
and
dec
sub
call
shl
iret
add
je
daa
sub
sub
jg
mov
pusha
xchg
js
icebp
lods
fistpl
jecxz
or
cmp
push
dec
add
rorb
mov
out
rclb
dec
or
ret
je
pop
insb
push
loope
stos
cmp
jbe
pop
mov
mov
mov
add
and
mov
scas
or
lea
sub
in
cli
sbb
adc
into
arpl
cmp
pop
adc
mov
push
in
push
dec
push
pop
loopne
pusha
pop
sub
sbb
std
lret
int3
outsl
testb
hlt
movsl
xor
adc
mov
push
xor
sbb
orb
test
lea
fs
mov
outsb
jb
fdivrl
cmp
sti
subb
push
fwait
fs
clc
cmp
dec
xchg
imul
add
cmp
loope
fsubs
dec
popa
divl
out
sahf
push
nop
clc
dec
loopne
scas
xor
js
leave
inc
sub
icebp
pop
sti
loopne
sarb
lds
cmovns
dec
xchg
shll
cmpsb
adc
out
arpl
mov
js
cmp
std
sbb
and
insl
out
in
push
lahf
rol
mov
test
or
or
adc
mov
inc
jmp
inc
cld
pop
int
add
aas
fldl
aad
mov
fimuls
fdivl
jle
cmp
insb
push
jmp
stos
pushf
popa
jmp
rclb
add
out
lds
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
ret
in
notl
adc
adc
adc
jg
int
and
sbb
mul
push
ret
lods
push
and
cmp
in
stc
inc
jg
sahf
imul
repz
out
cltd
stos
in
stos
adc
iret
clc
je
or
pop
mov
jo
fdivl
pcmpeqw
mov
jo
jb
std
and
cli
jo
add
lds
sar
and
dec
insb
adc
iret
or
jecxz
sbb
jo
jo
mov
inc
mov
lcall
xlat
rcr
cmp
lret
and
mov
push
fwait
mov
and
and
in
pushf
in
std
push
pop
test
jo
icebp
mov
test
dec
in
ljmp
or
pusha
jb
dec
mov
clc
mov
sub
cs
mov
push
push
push
jnp
mov
xor
aam
sub
pop
repz
mov
sbb
xchg
jle
scas
or
inc
and
movl
or
xchg
mov
cmp
out
test
shlb
lret
lds
mov
data16
stos
cwtl
ret
mov
mov
mov
cli
roll
mov
xchg
add
xchg
dec
sbb
stos
adc
insl
loope
dec
test
cmp
sub
mov
sbb
scas
lea
mov
lahf
out
pusha
cmc
mov
aaa
clc
cmc
imul
cmp
or
or
push
lds
into
xchg
pop
in
adc
xor
mov
xchg
fadds
and
adc
and
repnz
test
pop
cmp
cmp
inc
sbb
out
push
scas
adc
push
xor
addr16
aad
addr16
frstor
pop
xchg
lds
fsubp
xor
pop
sub
stos
shrl
imul
lret
pop
fidivrl
xchg
and
mov
jmp
aaa
cmp
mov
dec
fwait
xor
inc
fisttps
movsl
and
lock
dec
test
sbb
outsl
and
xorb
pop
or
jae
pop
lcall
lods
mov
mov
loop
push
rorl
cmpsb
sub
aam
call
xchg
dec
arpl
or
ljmp
pushf
test
mov
sub
sbbb
cld
xor
pushf
sbb
aam
mov
fs
mov
sahf
fiaddl
imul
push
mov
into
or
add
lea
cs
mov
jmp
lea
mov
add
inc
mov
add
inc
subb
fldcw
into
xor
push
mov
ret
jno
movsb
inc
in
jb
xchg
sbb
in
or
cmp
ja
jmp
ja
jne
or
aaa
mov
pop
scas
test
mov
mov
div
lods
mov
insl
roll
mov
dec
sbb
lods
sahf
pop
pop
lea
mov
iret
and
jno
iret
jae
mov
sub
cli
add
pop
dec
pop
sbbb
fstps
mov
hlt
push
ror
popf
mov
shlb
pop
and
cmc
and
push
stc
push
addb
push
jge
mov
sub
mov
mov
out
cmp
clc
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
inc
pushf
out
cmpsb
out
adc
int
adc
mov
lock
add
add
dec
repz
lcall
jae
cmp
js
jp
imul
ficomps
xorl
cmp
shll
lahf
or
mov
inc
xor
sub
mov
call
xor
xchg
sub
inc
sbb
xor
pop
xchg
xchg
pop
decl
xchg
cmp
in
and
cltd
pushf
es
lcall
in
add
lock
add
stos
sub
sbb
stc
inc
cmpsl
lret
sub
xor
daa
adc
shlb
sub
rcrb
xchg
cwtl
pop
and
xor
xor
sub
lcall
jae
jns
dec
in
and
dec
and
cltd
lods
lock
imul
icebp
dec
js
repz
jl
add
sbb
cwtl
mov
inc
jmp
cmp
imul
xchg
mov
pop
insb
popa
cld
push
decl
cmp
out
lcall
inc
and
sub
mov
jmp
xchg
ficomps
aas
xchg
or
mov
xchg
sbb
add
nop
rclb
repz
cmp
xor
sbb
ret
ljmp
stos
sbb
xor
popf
test
test
or
repz
fidivrs
jg
sahf
push
in
mov
push
mov
hlt
insb
testl
sub
arpl
and
xlat
jo
sub
pop
cmp
jae
fdivrs
stos
jbe
mov
aad
repz
mov
cs
sub
pop
push
movsl
mov
inc
or
pop
cltd
lret
rcll
adc
insl
inc
fsts
jle
jo
test
fwait
inc
and
sub
dec
push
pop
mov
xor
sub
ljmp
or
inc
mov
push
xor
xchg
jecxz
testb
push
mov
push
sbb
xchg
mov
adc
andl
shrb
sub
sub
adc
cmp
icebp
cmp
jl
pop
xorb
loop
dec
lods
scas
jg
ljmp
mov
inc
ds
push
stc
sub
out
ja
ret
or
addr16
cmp
xor
pop
ret
xor
push
pusha
in
or
push
mov
inc
jne
mov
mov
cli
sti
adc
and
mov
dec
call
cltd
xchg
popa
hlt
pop
loope
subb
inc
jmp
mov
hlt
sub
fs
and
xchg
sub
mov
rcll
neg
or
fisubl
and
mov
ljmp
fidivrl
inc
xchg
or
adc
ljmp
xor
mov
pop
xchg
cmp
push
imul
popl
push
dec
jge
cmp
xchg
cmp
add
test
ds
cmp
mul
inc
stc
xchg
mov
subb
dec
pop
cmpsl
ja
or
test
testb
flds
stos
jnp
or
lea
mov
inc
setle
mov
cmpb
std
test
mov
mov
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
iret
push
mov
adc
adc
repz
xor
dec
sbb
and
sbb
outsl
jbe
dec
lods
jmp
es
frstor
adc
push
cmp
lahf
mov
xlat
inc
es
sub
in
xor
cmp
jmp
cmp
and
adc
mov
adc
aad
mov
add
xor
dec
jle
dec
sbb
lret
add
scas
dec
shlb
mov
xchg
sub
test
jl
enter
xchg
imul
clc
mov
xorl
fidivs
pop
xchg
xchg
dec
dec
ret
iret
outsl
dec
sub
inc
jno
mov
push
ja
scas
mov
and
or
dec
and
lcall
orl
add
ss
push
mov
outsb
lcall
js
into
sub
push
sti
int3
mov
lcall
lret
cmp
dec
dec
inc
jp
jno
push
leave
ljmp
cmp
and
stos
pusha
mov
xor
ss
add
aam
mov
dec
jmp
and
cmp
pushf
dec
lods
adc
int3
addr16
sub
mov
pushf
mov
jg
sbb
sbbl
push
cmp
sti
inc
loope
pop
pushl
clc
rorb
pusha
fs
push
fwait
sub
imul
inc
mov
les
xchg
enter
mov
cmp
sub
out
pop
loope
mov
dec
add
lahf
pop
imul
xor
scas
hlt
mov
repz
inc
pop
sbb
xlat
in
cmc
mov
add
in
loop
ficomps
imul
in
pop
jmp
mov
inc
sub
xchg
jge
xchg
sbb
aad
mov
xor
cli
xchg
dec
adc
outsb
fldt
xor
pop
xchg
xor
dec
add
popf
lea
scas
pop
pop
push
mov
push
add
mov
mov
xchg
leave
sbb
mov
push
mov
jno
outsl
movsl
sbb
xchg
rcl
cmp
or
incl
clc
ss
mov
int3
jmp
lea
ja
inc
mov
iret
jnp
sub
sti
mov
mov
push
stos
jne
and
push
sbb
jo
cmp
lret
test
inc
shl
mov
lahf
loopne
mov
inc
sub
adc
mov
xorb
ret
adc
frstor
gs
sarl
jb
xor
loope
fwait
jne
bound
sarl
mov
push
push
out
xchg
movsb
pop
ror
fadd
xor
dec
cmp
inc
cmp
inc
testb
iret
mov
fxch
mov
int3
jg
mov
insb
mov
bound
scas
mov
push
test
imul
and
stc
shrb
enter
inc
leave
xor
nop
fisttpl
repz
xor
movsl
sbb
mov
jge
popa
jmp
sbb
xor
leave
leave
mov
fcoms
ljmp
pop
xor
insb
pop
sbb
test
xor
cmpb
and
or
add
and
adc
sbb
mov
in
cltd
lods
je
mov
pop
aam
jg
cmc
mov
cld
xchg
cmp
adc
aam
xchg
dec
out
sbb
lret
sbb
fmull
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
ljmp
adc
adc
adc
push
fisubl
sbb
cmp
adc
loopne
push
dec
inc
push
xor
insl
push
pop
in
add
cmp
xchg
int
xor
cmp
pop
sbb
mov
lret
shrb
lret
imul
outsl
test
jge
mov
inc
or
mov
jne
push
cli
in
stos
std
stos
mov
jge
inc
mov
pop
cmpsb
orb
popa
loopne
in
mov
jl
leave
lock
mov
int3
shlb
fstpl
adc
loopne
dec
fucom
scas
out
repz
movsl
xor
jle
pop
ret
mov
test
popf
enter
out
ret
test
and
mov
push
sub
or
dec
roll
cmc
mov
sbb
fs
insb
iret
lahf
mov
mov
out
rorb
add
idivb
push
mov
lods
and
repz
inc
cli
test
popa
data16
fadd
aaa
test
push
shrb
dec
test
pop
add
jnp
inc
mov
cltd
notb
lcall
ror
jl
jbe
xor
add
and
rcll
mov
loope
sub
xchg
pop
sub
jbe
sub
or
xchg
rdtsc
fcmovnu
xor
mov
mov
pop
mov
cmp
ljmp
aas
pop
inc
fldenv
arpl
aaa
sbb
test
jne
in
cmp
dec
aas
stos
mov
cmp
lds
ja
push
add
and
lea
pop
pop
stos
pop
mov
stc
bsr
jne
push
faddl
bound
inc
ja
dec
cmp
rclb
jae
dec
add
jns
into
cmp
clc
ret
xor
enter
push
sub
mov
pushf
fbstp
rcrb
inc
dec
sbb
negl
or
sbb
and
test
out
call
adc
xchg
lret
dec
int
xchg
xchg
pop
hlt
out
mov
test
xlat
push
jnp
mov
dec
mov
xchg
cmp
mov
pop
shll
mov
iret
rclb
imul
aad
push
jl
es
int3
ret
sti
sub
pop
lods
sbb
into
mov
pop
xor
data16
ret
test
cli
pop
cs
das
and
ret
addb
pop
mov
lock
mov
sub
out
add
test
fucomip
mov
lods
push
jp
loope
fiadds
pusha
cmp
cmpsl
mov
mov
mov
icebp
adc
add
xor
sbb
xchg
push
les
fistps
xchg
and
jno
add
dec
mov
test
inc
stos
ss
cltd
push
fdivs
popf
movsl
stos
inc
dec
insb
scas
in
mov
pop
inc
mov
das
add
cmp
pop
xchg
into
pop
ds
push
fldt
in
xor
mov
jle
inc
int3
js
mov
daa
mov
test
shlb
inc
aaa
pop
xor
xor
inc
mulb
xchg
jmp
dec
ss
and
mov
dec
mov
lds
pop
in
ret
jmp
dec
push
inc
stc
and
dec
pop
jmp
pop
xchg
loopne
or
sub
in
dec
out
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
ljmp
push
push
ficoms
adc
adc
adc
mov
scas
mov
scas
imul
mov
adc
pushf
sbb
add
jo
into
mov
ja
xchg
aad
outsb
xchg
in
aas
xchg
mov
pop
shlb
and
jl
mov
jns
daa
out
sbb
outsb
sub
jge
enter
or
cmp
shll
jecxz
cmp
sbb
adc
out
and
loop
xor
jnp
and
push
stos
xor
pop
call
bound
push
mov
hlt
cmp
pop
stos
rorl
cs
adc
js
pop
add
fisttpll
lock
pushf
in
xor
bound
orb
mov
cltd
out
inc
mov
jae
xchg
int
ds
xchg
sbb
xchg
sbb
mov
lret
shr
in
xchg
pop
popf
jne
dec
mov
mov
push
movsl
mov
pop
rcrb
imul
into
adc
je
in
fistl
add
enter
daa
mov
aad
mov
and
adc
jecxz
jns
lock
push
mov
outsl
out
pop
jmp
movsb
sbbl
aas
call
sub
ffree
out
push
sub
and
subb
testb
cmp
cli
lods
outsb
rcrb
add
rep
hlt
pop
mov
fistpll
push
adc
mov
pop
cmp
jmp
pop
sti
idiv
dec
and
pop
mov
cmpsl
pop
cmc
lea
xchg
mov
mov
les
xchg
movsb
inc
cli
add
sarb
add
imul
enter
xor
add
insb
xor
ret
in
push
dec
stc
or
xchg
aam
inc
pushf
adcl
daa
xlat
movsl
mov
cmpsb
test
sbb
add
lret
sub
sbb
or
jae
dec
faddl
dec
aaa
mov
add
stos
nop
popa
shll
pop
dec
jmp
jge
inc
sbb
popl
stc
mov
push
or
lods
int3
loop
mov
popa
or
int
jae
in
packuswb
push
sub
mov
lcall
dec
dec
movsb
fnstenv
add
xchg
lods
jne
xchg
push
lods
inc
push
jge
cmpsb
and
and
mov
pusha
in
add
mov
push
into
inc
lret
in
sub
imull
inc
inc
sub
xchg
jl
jnp
pop
mov
aaa
mov
push
add
add
cltd
sbb
adc
test
fldcw
lret
ret
inc
cmp
sub
repnz
sbb
push
fdivrl
pop
lea
bnd
push
outsl
subl
mov
adc
sbb
xchg
jl
gs
mov
js
imul
dec
pop
cmp
dec
flds
inc
inc
rcll
xchg
mov
lock
imul
xchg
stos
fildl
sbb
jb
fdivl
out
jo
sub
nop
push
dec
lds
aam
and
dec
pop
scas
out
fwait
repz
imul
out
pop
outsl
dec
test
sbb
lods
inc
and
sti
cmp
push
lahf
iret
mov
mov
bound
mov
add
fsubrl
daa
sub
or
jmp
mov
shl
jmp
fmuls
sbb
aad
inc
stos
jge
adc
int
adc
loopne
outsb
sbb
sub
scas
int3
in
or
leave
xor
or
imul
das
sub
aas
pop
push
call
inc
ja,pt
dec
pop
jb
or
scas
dec
cmc
push
insb
or
xor
or
sub
and
dec
xchg
lahf
js
push
gs
and
inc
leave
outsl
cmpsb
aaa
adc
xlat
sbb
and
sub
sub
mov
lds
xchg
add
sarb
cltd
xchg
mov
fwait
popf
out
mulb
aam
adc
or
adc
or
xchg
std
xor
out
nop
inc
xor
out
cmp
bound
sti
lret
in
addr16
scas
rorl
lcall
movsb
xchg
insb
cltd
bnd
divl
das
mov
andw
adc
xlat
mov
popw
fidivrs
add
add
ret
in
and
mov
das
bound
inc
cmpsb
sub
jecxz
jg
mov
fmull
sti
ret
out
pop
xchg
gs
dec
pop
jl
xchg
stos
xchg
fdivs
mov
int
xchg
aas
aaa
loope
xchg
popf
loope
test
insb
pop
adc
mov
or
xchg
mov
xchg
push
data16
ror
shlb
jle
mov
imul
enter
push
popf
sbb
inc
andb
fs
repz
cld
dec
push
cli
outsl
mov
xchg
packsswb
addr16
pop
dec
pusha
mov
test
popa
rsm
popa
push
sbbb
jne
addr16
xchg
repz
dec
pushf
ds
and
pop
lods
jp
xor
inc
xchg
pop
sub
mov
insl
jbe
int
cltd
lret
jns
out
push
loope
and
fst
or
cltd
or
faddl
sarb
out
mov
push
cwtl
xchg
jo
pop
cs
add
cmp
cmp
pop
ljmp
insb
int
in
jp
or
lds
cmpsb
pop
js
fildl
ljmp
xor
lcall
fnstenv
add
mov
dec
es
xchg
jg
aam
cmc
test
ljmp
mov
or
popf
fs
cmp
mov
fwait
xchg
aaa
int
sbb
ret
cmp
in
leave
jmp
adc
xchg
je,pt
arpl
aad
jb
xchg
xchg
dec
in
ja
subb
xchg
push
or
es
lds
nop
test
pop
mov
es
loope
mov
mov
data16
in
pop
xchg
or
sub
fwait
mov
out
rorl
rolb
push
rclb
negl
xor
fcoml
push
xchg
bound
pop
mov
lret
in
call
pushf
lret
sub
mov
nop
mov
lods
ret
and
mov
repz
add
stos
insl
test
inc
sub
inc
mov
lea
inc
insb
or
fadd
or
adc
mov
sub
movsl
stc
or
stos
mov
nop
icebp
out
jecxz
or
das
aas
adc
dec
icebp
push
daa
pop
rcl
add
adc
in
or
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
stos
mov
jle
int3
adc
int
adc
xchg
jo
jmp
cli
xchg
ret
add
mov
divl
fmuls
jp
mov
xchg
lods
insl
sbb
fwait
mov
lcall
mov
loope
sarb
xor
push
and
fistpll
ret
xchg
adc
inc
sahf
or
scas
mov
pusha
loopne
addl
pushf
aas
adc
ror
fnstsw
test
add
xchg
les
inc
iret
ret
dec
inc
js
fsubp
jnp
jns
daa
ja
push
xor
icebp
test
test
jle
xchg
pop
xchg
pusha
add
lret
jecxz
addr16
je
push
enter
pop
mov
add
mov
mov
stos
or
sbb
aaa
add
loopne
ret
or
inc
call
dec
mov
lock
pop
enter
jg
or
and
mov
mov
inc
pop
int3
stos
gs
aad
inc
xor
lret
mov
in
inc
or
xor
xor
xchg
aaa
add
je
lods
stos
sarb
add
jae
xchg
sahf
push
imul
aas
in
test
out
data16
pop
jmp
outsl
neg
ljmp
repz
iret
add
pop
adc
add
mov
lret
leave
jbe
cmc
sbb
add
pop
adc
scas
loopne
pop
mov
push
mov
sbb
int
test
sti
add
push
mov
mov
movsl
inc
call
or
cmp
inc
pop
dec
add
xchg
jp
adc
lods
daa
lret
nop
outsb
and
mov
push
ja
js
sub
leave
inc
js
pushf
sub
sbb
pop
cmp
inc
mov
das
iret
pop
lret
push
pushf
pop
xor
adc
es
aad
and
sbb
sbb
jnp
mov
adc
push
loopne
mov
push
mov
pop
dec
mov
pushf
push
xlat
or
push
test
in
shlb
sub
pop
and
lcall
or
into
dec
aam
ficoms
enter
add
xor
imul
scas
sub
outsl
mov
pop
xor
mov
pop
insb
mov
leave
in
mov
popf
xchg
jge
xor
jo
ret
or
sbb
sti
loop
lret
lret
add
ja
std
xlat
adc
sub
sbb
dec
or
sahf
sbb
imul
xor
out
add
cmp
and
sub
int
push
notb
push
mov
in
xor
inc
mov
into
xor
push
pop
mov
dec
adc
into
outsb
imul
cwtl
notl
sahf
rorl
repz
cld
push
cmpsb
ljmp
pop
clc
jnp
je
mov
xor
jne
cmpsl
push
mov
push
push
movsl
jp
sbb
cmp
or
push
out
push
and
jno
ljmp
inc
dec
stos
and
xor
ljmp
mov
adc
pop
mov
fdivrp
nop
sbb
mov
jmp
cmp
cmp
fisubs
cmc
mov
push
pop
ret
sub
jg
mov
pop
or
rorb
por
ret
sub
std
incl
cmp
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
sub
std
jle
les
adc
adc
adc
xlat
cmc
insl
push
loopne
push
and
cmpsb
mov
add
mov
sbb
push
loope
sub
or
lret
inc
movsb
mov
adc
or
fists
call
scas
push
addr16
call
or
pop
lret
icebp
dec
mov
cli
mov
icebp
push
test
mov
js
icebp
popa
xchg
cltd
sarb
dec
int3
stos
scas
pop
jecxz
call
pop
movsl
pop
gs
push
sti
mov
push
add
sub
dec
iret
mov
bound
sub
aas
pushf
and
and
bound
mov
jns
dec
cmpsl
das
rcrl
pop
sbb
push
and
jmp
test
vprotw
and
mov
lret
in
xor
jmp
out
mov
fwait
cmp
xlat
jle
pop
fucomp
push
aaa
cmp
insb
aam
push
push
jle
cmp
push
inc
incb
fsubl
or
inc
jae
fwait
icebp
ja
mov
repnz
sbb
xchg
xchg
mov
lock
xchg
cmpsb
jne
adc
sbb
aam
lods
jb
jge
lret
mov
int3
stos
cmp
ds
scas
loope
ja
leave
fists
test
in
xor
testl
popf
mov
scas
or
roll
add
out
mov
mov
cmpl
dec
inc
xor
sub
cmp
adc
ja
mov
push
push
pop
ljmp
xchg
pop
dec
or
sub
orl
inc
push
sub
clc
push
push
inc
stos
dec
sbb
repnz
mov
fidivrl
icebp
lods
scas
or
in
rcrl
mov
dec
pxor
inc
push
mov
sti
cmp
fldcw
pop
dec
sti
mov
mov
sbb
jecxz
jmp
and
cmpsb
dec
mov
and
out
arpl
sbb
movsb
lcall
daa
add
dec
ss
xor
cmpsl
subb
adc
aaa
fidivrs
stc
push
bound
mov
stc
or
loopne
out
sub
sub
imul
outsl
insl
loopne
fnstsw
mov
lds
scas
test
push
mov
ret
ret
aad
insb
push
dec
and
or
xor
testl
int
add
or
sbbb
cld
addr16
jp
loop
sub
xlat
push
arpl
test
cltd
inc
mov
jno
sbb
inc
pop
push
test
cmp
imul
popf
and
cli
cld
mov
jno
arpl
push
in
add
sbb
jmp
or
cmova
adc
adc
xorb
movsl
fcompl
sub
test
sub
cmp
ja
jo
cmp
das
rcr
notl
mov
add
jge
mov
repz
lods
stc
cld
sahf
jns
mov
add
dec
sub
lahf
sahf
mov
lahf
sbb
adc
and
fndisi(8087
cs
insl
cwtl
mov
loop
mov
movsl
jp
mov
mov
les
jne
or
imul
push
mov
sbbl
rcrl
les
jb
jle
pushf
lahf
push
or
lock
inc
daa
stc
repz
dec
outsl
sub
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
lods
orl
ret
int
adc
js
ds
sti
push
stos
lret
sbb
ficoml
lahf
pop
add
sbb
sub
pop
jl
insb
and
inc
nop
and
xor
nop
lahf
subb
les
lret
add
movsb
idivl
imul
aaa
std
loopne
out
mov
push
sub
fs
pop
mov
sub
mov
xchg
or
shrb
pop
pop
mov
sbb
fisubrl
enter
aas
nop
addr16
imul
ds
dec
mov
mov
xchg
mov
sbb
adc
xchg
mov
cld
cmp
cwtl
inc
mov
mov
mov
insl
sbb
loopne
jns
xchg
or
int
pop
adc
rclb
ja
xlat
push
jg
push
xor
mov
and
jl
aas
daa
jle
cmp
repnz
lcall
les
pop
add
fwait
and
vunpcklps
adc
mov
push
scas
icebp
adc
sar
adc
mov
dec
xchg
jecxz
mov
bound
stc
push
addr16
repnz
aad
mov
inc
lods
bnd
pusha
pop
adc
xor
sub
or
call
push
es
sub
ds
icebp
aad
sahf
pop
dec
aam
clc
sbb
cwtl
jge
ret
lods
sub
mov
push
and
sbb
dec
cmp
mov
pop
or
int3
cwtl
mov
inc
push
xor
aad
xchg
xor
and
repnz
test
sub
mov
bound
aam
loope
and
orb
stos
jl
sub
ja
rclb
fwait
loopne
jne
fucomip
das
cmc
and
push
cmpsb
add
dec
scas
mov
loope
cmc
pop
inc
push
mov
push
push
sub
std
push
rdmsr
loope
loopne
xor
repz
sbb
cmpb
out
mov
rolb
cli
pop
and
movsl
les
leave
cmp
ret
lret
push
add
addr16
add
wbinvd
push
aam
ret
outsb
jb
shl
sub
movsl
pop
cmp
xchg
mov
sbb
jg
pusha
out
mov
sub
popa
cmp
sub
std
and
pop
sub
aad
es
ret
pop
push
das
test
popa
cmpsl
mov
inc
pop
ljmp
fs
fnstsw
push
lea
lahf
inc
fnstcw
dec
push
cli
inc
inc
lcall
into
push
out
pusha
pop
mov
outsb
xchg
fisttpll
incl
out
je
and
pop
jl
data16
xor
stos
inc
and
fnstcw
sbbl
jo
lahf
push
adc
mov
movsb
sbb
ljmp
sub
add
push
ja
jg
stos
sti
adc
gs
scas
mov
arpl
push
pop
call
rcr
pushw
jg
jge
lock
push
lret
in
jno
mov
dec
int
cld
push
mov
lea
fcompl
xor
jns
iret
xlat
call
or
sarl
in
mov
or
cmpsb
push
pop
inc
jbe
lea
test
ds
and
dec
jge
movsb
sbb
daa
mov
outsl
add
aam
ss
out
lock
push
push
push
mov
pop
int3
sub
inc
xor
je
and
inc
push
jl
das
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
mov
insb
push
mov
adc
mov
cli
shl
cmp
mov
ret
das
push
inc
loopne
add
push
dec
sub
loop
or
jno
cmp
pushf
push
lea
gs
mov
outsb
les
ffree
movsl
and
pop
xchg
andps
push
fiadds
jle
lcall
fidivs
xor
insb
lds
xchg
mov
mov
mov
push
mov
ljmp
sub
inc
loope
out
mov
scas
sbb
jp
xlat
push
js
xchg
and
pop
xor
fnstenv
xlat
aad
mov
pop
cmp
jne
pop
or
fs
popf
and
pop
mov
ret
inc
mov
sbb
cmp
incb
xor
in
stos
pushf
mov
adc
nop
cmc
js
je
insl
movl
jp
jmp
jp
jl
pop
mov
pop
femms
outsl
out
cmp
popf
xchg
jp
ss
add
ret
in
sar
inc
pop
jae
lret
mov
pop
shlb
pop
mov
test
or
jge
sbb
pop
add
dec
inc
and
imul
and
mov
iret
sahf
or
daa
nop
jb
mov
lods
push
jge
jbe
mov
inc
jbe
add
movsl
xor
mov
sbb
mov
scas
jae
std
fldcw
test
mov
in
dec
dec
push
addr16
xchg
dec
rcl
pop
outsl
mov
rorb
lods
lret
push
movsb
mov
jecxz
jno
cmp
cmpl
mov
filds
jmp
icebp
dec
clc
call
fcoml
cmp
and
jge
jae
fndisi(8087
xchg
pop
mov
pop
and
push
out
shrl
lods
repnz
mov
jns
or
sub
xchg
aad
cmpsb
pop
arpl
aas
dec
jnp
pusha
rcll
daa
xor
les
mov
mov
in
pop
jne
clc
jns
movsl
popf
push
mov
pop
in
push
push
xchg
stos
loop
mov
ret
cld
jecxz
add
nop
add
push
push
add
into
stos
inc
dec
add
jae
ret
cmc
clc
ljmp
jg
push
add
mov
outsb
psrld
sub
popa
nop
sub
outsl
sbb
xchg
out
cmc
push
and
stos
movsb
shlb
cmp
es
sti
fwait
add
test
std
imul
mov
mull
push
sbb
fcompl
scas
loopne
loopne
lahf
jge
xor
add
adcb
icebp
xchg
pop
insl
jecxz
jg
fs
int3
je
fdivrs
xorl
out
aam
hlt
pushf
xor
mov
cmc
xchg
mov
popa
or
sub
inc
sub
jo
ja
cwtl
mov
stos
hlt
shl
sbb
cmp
jmp
jns
in
cmc
daa
dec
mov
mov
imul
andb
sahf
dec
leave
popa
inc
out
outsb
enter
stos
ret
fdiv
mov
cmp
mov
xchg
dec
out
push
inc
movsb
ret
lods
pop
inc
aam
lahf
xor
push
xchg
ret
dec
enter
sarb
or
in
dec
push
or
mov
divb
es
push
loop
jmp
lret
loop
imulb
inc
or
idivb
inc
mov
aad
sti
xor
mov
xor
cmpsb
lods
inc
imul
or
push
push
outsl
xchg
imul
or
push
adc
lods
ret
call
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
shll
mov
int
adc
out
jae
ljmp
sbb
js
or
fcmovne
outsb
mov
sbb
fistl
cmp
and
lea
out
jmp
lea
mov
shll
pop
es
jle
sbb
sahf
xlat
jg
dec
subw
mov
mov
inc
or
jge
or
popf
add
aam
je
je
add
icebp
xchg
fstl
adc
outsl
adc
fdivrl
xchg
sub
jl
adc
cmp
mov
xchg
mov
or
adc
sar
imul
cld
test
jmp
cmc
adc
cltd
fistpl
dec
inc
sub
mov
pushl
fidivrs
jne
in
vmwrite
cmp
lea
lcall
cmp
adc
aad
fcompl
inc
out
adc
fwait
pop
cltd
sub
mov
aaa
cmp
add
xor
lcall
imul
mov
ljmp
aad
dec
lds
mov
icebp
ds
pop
xchg
mov
fdivrs
je
inc
inc
js
jo
je
fs
ror
sub
bound
sbb
repnz
xlat
aad
mov
int
cmp
pop
nop
imul
jno
or
cld
xchg
push
add
push
lahf
inc
repnz
cmp
jmp
dec
mov
jg
js
test
mov
pop
ret
pop
call
bound
aad
xchg
mov
mov
cmpsl
outsl
in
in
dec
arpl
out
in
aaa
insb
loop
fists
dec
fistpl
push
inc
rorb
pop
aaa
xchg
scas
je
test
adc
inc
xchg
sub
inc
adc
xchg
lret
enter
call
lea
dec
lock
mov
test
inc
xchg
xchg
dec
scas
pop
int3
addr16
icebp
in
enter
mov
mov
outsl
mov
leave
inc
pop
push
ljmp
dec
mov
cmp
sahf
les
mov
adc
mov
arpl
mov
shl
outsb
int
clc
hlt
movsl
adc
les
stos
and
xlat
xor
sbb
lcall
push
mov
test
in
into
push
cmp
xchg
inc
cmp
cld
adc
out
jb
divl
idivb
or
cwtl
and
idivl
fiadds
mov
int3
sub
cmp
inc
mov
xlat
and
fcom
pushf
push
mov
popa
mov
subl
mov
or
inc
inc
or
int3
jbe
nop
shll
mov
test
cmp
mov
xchg
push
and
xchg
lods
repnz
test
lods
or
sbb
imul
push
stos
int3
jmp
arpl
addr16
mov
aam
lea
sub
outsl
mov
and
jne
jle
ret
mov
loopne
bound
jbe
sub
cmp
nop
sbb
push
stc
add
push
pop
inc
icebp
mov
adcb
mov
xor
imul
mov
jg
jg
mov
ret
xchg
adc
cmpsl
inc
sub
loop
scas
les
xor
fcoml
cs
adc
dec
in
inc
movsb
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
sub
adc
int
adc
add
andl
jp
push
xchg
push
cmp
mov
pop
pop
jno
jnp
or
stos
aad
hlt
sbb
out
mov
dec
leave
or
addb
sbb
mov
add
jne
jg
test
mov
lcall
and
mov
push
xchg
jge
stos
and
pop
add
aaa
push
mov
imul
into
arpl
mov
mov
ljmp
aad
out
jbe
jle
xor
mov
mov
push
and
xor
xor
pop
jne
clc
push
jns
xchg
dec
int
mov
jmp
mov
dec
daa
xchg
subb
out
pusha
xchg
cmp
repz
mov
leave
sbb
lods
xchg
jbe
mov
sub
and
jo
stos
insl
and
outsb
stc
jle
mov
fsts
jg
or
sub
mov
rcrl
pop
push
cld
fs
xor
ret
sub
xorb
out
cmp
fisubl
push
add
sbb
and
stc
cltd
lock
dec
or
xor
in
push
pushf
adc
mov
or
cmp
fidivs
mov
in
addr16
clc
inc
or
xchg
lret
ret
cltd
and
fs
pop
lock
lret
popa
cs
adc
nop
xor
out
xchg
movl
inc
lods
in
rcrb
into
lahf
xor
arpl
pop
mov
and
inc
dec
push
cltd
add
in
cmp
rol
add
ja
dec
das
es
mov
fldcw
ret
out
mov
or
inc
adc
add
cmp
or
mov
inc
xchg
cs
cli
fs
fidivrs
xsaves
cltd
stos
cmp
fsubl
xchg
mov
lods
divl
int3
adc
push
subb
sbb
int
rol
mov
inc
mov
aam
mov
jl
aam
adcl
mov
out
mov
icebp
ljmp
push
popf
hlt
out
pop
cmp
pop
iret
popa
daa
adc
cmp
mov
sub
mov
jcxz
jg
nop
ficoml
push
ret
sbb
cmc
imul
sbb
pop
scas
xor
pop
mov
jle
mov
imul
jae
in
cmp
xor
xor
or
mov
popa
aas
mov
xchg
lea
rol
mov
sbb
cmpsb
fs
nop
adc
outsl
mov
add
add
push
ds
call
mov
cmp
jb
xchg
push
out
or
rcr
out
insb
inc
data16
inc
jo
pop
fisttpl
dec
xor
or
push
ja
cld
jp
sbb
add
mov
sbb
cmp
sub
or
xchg
jmp
jne
sbb
repz
scas
ret
xor
mov
push
call
dec
cmp
fsubr
sbb
push
popa
jecxz
mov
mov
pop
fsubrs
cmpsb
push
movsl
movsb
xchg
cmpsb
pop
xor
sub
jmp
mov
out
es
and
popf
or
mov
push
fsubrl
mov
ret
outsb
lods
and
jno
rorb
lcall
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
and
mov
int
adc
sbb
loop
cmp
imul
cmp
jb
inc
ds
je
ret
fwait
out
repnz
loop
out
data16
lcall
push
adc
dec
sub
jp
fildll
mov
xchg
insb
enter
sbb
lods
hlt
pop
js
out
lahf
ds
mov
shl
daa
fdivs
test
sub
xor
or
or
fcomi
or
sub
jecxz
imul
adc
out
jbe
dec
subl
dec
aas
fimull
out
mov
int
cmovb
nop
mov
in
mov
mov
rcll
sahf
mov
nop
or
in
pop
inc
mov
or
push
pop
and
pop
ljmp
sbb
or
mov
shlb
xchg
dec
pop
add
push
out
add
mov
pop
xchg
rcl
pop
lock
xor
dec
push
jne
sub
das
iret
push
adc
aad
outsb
loopne
arpl
lcall
jo
movsb
scas
jbe
mov
aad
or
xchg
popf
mov
xor
sbb
fistl
xchg
mov
fwait
lahf
int
test
notl
test
fnstsw
xor
addr16
icebp
sub
andb
stc
lods
fbstp
mov
hlt
xor
lret
push
sub
cwtl
outsl
loope
inc
mov
leave
or
rorl
jb
mov
xchg
mov
jb
faddp
stos
cmp
stos
fucomi
cmpsb
negl
push
sbb
cmp
imul
test
sti
and
notb
das
jno
pop
xchg
mov
inc
push
and
shll
add
push
xor
pop
out
push
mov
sbb
psubsb
cmp
push
hlt
iret
xor
mov
repz
jne
dec
adc
loop
pop
outsb
lahf
leave
jb
ret
mov
jmp
inc
mov
mov
cmpsb
pop
aaa
pop
aad
xchg
xor
mov
aam
std
movsb
mov
inc
imul
pushf
sarb
fwait
lods
mov
adcb
sahf
xor
ds
pop
mov
mov
fwait
fwait
je
into
fsubrp
test
push
xor
imul
in
sub
add
jmp
sbb
or
jb
and
and
lods
mov
push
out
movsb
fmulp
fwait
ljmp
in
sub
or
imul
sbb
insb
and
xchg
leave
add
test
xor
loopne
sub
icebp
mov
push
mov
and
clc
je
push
movsl
aaa
inc
inc
mov
jnp
jnp
pop
iret
clc
stc
mov
push
decl
adc
mov
inc
mov
lock
scas
les
jbe
loope
mov
xchg
sahf
mov
or
daa
les
test
mov
jmp
movsl
sub
lock
sbb
leavew
jl
adc
call
sar
and
test
test
jle
mov
loopne
fcompl
xor
inc
mov
mov
fs
jbe
jle
js
xor
mov
mov
add
push
jb
flds
pop
inc
sbb
lods
push
jecxz
dec
scas
scas
cmc
sti
jno
ds
out
out
scas
nop
ss
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
or
adc
int
adc
lock
sbb
fnstcw
sub
mov
repnz
add
push
mov
repz
bnd
faddl
push
or
sbb
jnp
cld
cmc
mov
adc
cmp
push
cmp
cltd
test
test
mov
mov
call
pop
data16
stos
dec
fnsave
aam
cmc
inc
loop
push
adc
adc
adc
roll
lret
outsl
je
jge
xchg
jbe
pop
jb
xchg
popa
sub
nop
dec
inc
push
repz
lods
dec
cld
sbb
add
inc
popl
lods
movsb
or
call
push
fisttpll
jle
inc
xlat
repnz
inc
xor
pop
fwait
cli
push
jns
and
icebp
sbb
lods
enter
sbb
cmp
fstl
pushf
xchg
inc
adc
ret
fisttpl
cs
movsb
cmp
mov
lea
mov
mov
repz
sub
je
add
arpl
jo
aam
inc
jg
xor
mov
sub
xchg
imul
shll
jle
dec
clc
xchg
sub
pop
sbb
lcall
or
push
dec
stos
popa
mov
mov
pop
hlt
sub
aad
stos
movsl
shlb
mov
cmp
dec
mov
mov
mov
mov
dec
stos
fistpll
mov
pusha
or
jns
daa
ret
int
int
sahf
cmp
lock
xor
lea
xor
jae
call
repnz
icebp
aas
into
add
hlt
insl
fstpl
mov
orb
aam
or
adc
mov
mov
inc
mov
sbb
adc
push
mov
loopne
mov
sbb
and
jl
adc
in
loope
sbb
add
fisttps
jl
mov
fucomp
lock
es
inc
mulb
jno
sbb
adc
shll
adc
inc
or
pop
and
dec
mull
js
lcall
lods
inc
mov
cmpsb
shlb
dec
pop
lods
xchg
loopne
pop
mov
sahf
jns
xor
js
inc
popa
in
xchg
mov
aam
add
nop
or
mov
cmc
in
cwtl
inc
add
lock
add
iret
sub
mov
jp
xchg
enter
xor
daa
out
inc
cmp
outsb
test
cltd
sub
push
leave
xor
add
jae
lods
or
jno
adc
cmc
ss
sbb
mov
call
xchg
inc
scas
popa
aaa
or
fcmovu
in
scas
push
dec
lods
sub
and
and
mov
bound
imul
inc
mov
xor
aas
sub
ds
notb
jmp
inc
mov
stc
dec
scas
fcompl
inc
push
popf
mov
mov
mov
jo
push
ja
lods
lahf
mov
lea
xchg
out
rolb
lock
mov
out
push
xchg
imul
lock
insl
lods
sub
xchg
leave
pop
pop
rcr
or
pushf
cmp
push
cmpsb
repz
mov
inc
push
push
fstpt
iret
push
push
xchg
icebp
lds
jnp
mov
rolb
lret
fmuls
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
xor
jns
pusha
inc
test
shlb
in
mov
in
pop
in
xlat
mov
xor
xchg
sub
ljmp
xchg
xor
cli
push
in
fidivrl
inc
mov
and
xor
sub
out
inc
and
jno
cmpl
aas
inc
imul
stos
and
int
pop
push
mov
test
cmpsl
mov
hlt
int3
int3
repnz
outsb
stos
mov
jns
mov
jns
jle
xchg
call
fnsave
sbb
push
push
lret
fisubrl
xor
shll
and
dec
aad
mov
adc
cmp
jbe
mov
gs
out
cmpsl
ret
sbb
roll
nop
mov
mov
mov
test
fldl2e
addl
leave
test
pop
ja
popf
ljmp
add
push
call
adc
mov
leave
jbe
xchg
pop
in
call
out
adc
xchg
mov
xor
xorb
jp
push
add
add
inc
imul
sbb
loop
jge
and
lret
sub
xor
push
loop
in
ja
pop
jbe
cmpsl
lods
and
xchg
or
jp
mov
mov
mov
mov
rcrl
xchg
out
mov
fimuls
loope
xchg
jb
mov
jne
call
push
test
shlb
jl
jmp
loope
add
mov
cmp
ljmp
mov
bound
jmp
pop
jge
and
jmp
dec
dec
daa
in
ret
scas
daa
lock
shlb
push
xor
test
mov
ja
sbb
ja
dec
add
aam
cs
fstps
int
rcr
lods
sub
sahf
push
stos
xor
push
cli
sub
pop
mov
inc
push
test
repz
inc
cmpl
jmp
bound
cld
or
popa
jo
mov
ror
adc
sub
cmp
cmpsl
addr16
push
imul
xchg
stc
cli
adc
rcll
mov
pushf
insb
std
sbb
and
inc
stc
int
xchg
rcl
mov
and
mov
testb
out
mov
daa
cmp
mov
push
sbbb
in
xor
lods
push
mov
mov
int3
pop
mov
lcall
or
cmp
idivb
scas
xchg
xor
out
adc
xchg
cs
mov
divb
inc
mov
sar
insb
cmp
inc
test
pop
aad
lods
fcmovb
es
mov
or
shll
mov
dec
push
adc
inc
push
je
sub
push
add
add
lret
jne
add
les
stc
xchg
jp
jge
mov
enter
lock
mov
mov
iret
wbinvd
xor
loopne
scas
in
scas
cmp
arpl
xor
data16
js
xor
insl
inc
or
jno
jp
cli
sbb
cmp
and
xor
lcall
jmp
xchg
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
insb
insb
lcall
adc
or
lods
push
shrb
sub
push
push
jge
and
or
outsl
mov
addr16
mov
ret
pop
gs
scas
push
imul
test
ljmp
inc
pop
lret
add
push
push
xchg
in
sub
dec
jbe
test
xchg
push
adc
mov
ficoml
mov
xchg
lret
mov
adc
aaa
xchg
add
test
inc
or
add
jns
imul
jno
pop
movsl
out
xor
lcall
dec
movsb
cwtl
push
dec
ja
int3
push
mov
mov
mov
sub
movsb
or
sub
scas
mov
xchg
pop
js
stc
repnz
and
shl
jmp
xchg
stos
out
clc
dec
mov
cmp
and
push
inc
cmpsl
inc
popf
and
sub
stc
dec
fisubrl
or
jecxz
pushf
cs
mov
rcrb
inc
sbb
daa
sub
ret
adc
cld
sub
jae
and
or
add
hlt
xor
mov
pop
xor
pop
cli
insb
das
xor
jge
test
add
xlat
rcll
and
lods
push
xchg
xchg
xchg
dec
shll
mov
sub
jbe
push
js
or
push
and
lea
lcall
pusha
insb
lds
jmp
cwtl
repz
push
dec
adc
fidivrs
mov
loopne
repnz
out
mov
fwait
movsl
mov
dec
dec
sub
adc
test
jle
mov
sub
fstpt
sahf
sub
push
xchg
mov
jmp
and
dec
jp
and
out
cli
mov
pop
aas
aad
xchg
inc
fnstcw
add
ja
sbb
ja
cld
xchg
jecxz
push
mov
xor
and
ja
mov
cmp
xchg
aam
shlb
outsl
add
sub
adc
out
mov
adcl
mov
add
inc
lcall
insb
adc
ds
push
mov
dec
scas
nop
pop
mov
add
pop
aad
sbb
test
adc
cmp
movsb
pop
push
add
stos
adc
imul
cli
loop
sub
xchg
test
sub
leave
jne,pn
out
fs
sbb
movsl
push
dec
xchg
test
pop
jmp
sub
insb
shr
or
add
ljmp
pusha
or
jge
dec
dec
arpl
je
or
fsubl
cltd
sbb
push
imulb
cmp
out
test
mov
and
cmpsl
pop
mov
mov
addr16
mov
lds
pop
pop
out
adc
fidivrl
int
mov
idiv
jbe
pop
jle
or
shll
pusha
mov
cmp
jbe
fisubs
repz
in
rcll
sarb
les
repz
insl
dec
insb
scas
mov
jae
int3
outsb
in
popa
cmc
cs
ret
add
lret
js
sbbb
mov
test
add
scas
repnz
jg
sub
outsb
aam
and
ror
in
jbe
pop
addr16
popf
xor
sub
or
pop
aaa
add
jbe
das
mov
pop
imulb
nop
pop
and
cmp
lock
aam
sti
or
or
testl
add
jmp
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
mov
test
adc
adc
adc
adc
sbb
dec
stc
and
jp
xchg
out
and
int3
call
insb
nop
stos
nop
jo
sub
push
aam
dec
lods
xchg
sti
lahf
pop
push
pop
jl
push
xchg
jle
out
daa
jns
js
jne
push
std
mov
jp
pop
incb
jge
cmp
or
insb
nop
loopne
ljmp
repz
nop
imul
and
inc
fdiv
push
fwait
and
ret
push
mov
repz
cwtl
xor
lret
orl
mov
mov
int
out
pop
pop
add
gs
adc
cmp
lret
gs
int3
dec
lcall
cmp
out
lcall
dec
dec
cmp
iret
sbb
fisttps
fisubs
sub
adc
push
mov
ljmp
pop
cmp
call
adc
pushf
loop
das
loopne
imull
loop
mov
lods
xchg
test
jnp
ja
shl
stos
inc
or
xchg
stos
and
stc
mov
mov
mov
push
push
cmp
xchg
scas
test
fs
xor
pop
in
and
inc
xchg
pushf
mov
fstp
sub
sbb
data16
mov
sub
int3
in
ret
dec
and
insl
leave
clc
push
imul
jne
or
push
mov
and
les
data16
jmp
pop
js
jo
pop
fisubl
cli
gs
cmpl
js
inc
rep
orb
sbb
int
jb
xchg
rolb
push
sarb
mov
test
push
or
mov
jnp
xor
lcall
mov
and
je
add
into
js
add
pop
push
int3
enter
inc
ret
cmp
dec
test
insb
xchg
lahf
fbstp
idivb
sbb
daa
adc
and
jp
or
or
cmp
shll
dec
test
popa
mov
sbb
cmpsl
je
sti
gs
test
or
aas
cmp
mov
test
pop
dec
stos
adc
fdivl
pop
movsb
push
sub
daa
lock
scas
loopne
data16
add
cmp
test
lods
jb
test
arpl
dec
jne
jmp
cs
bound
mov
pop
mov
stc
xchg
in
or
jg
into
mov
push
pop
es
lret
cmp
xor
mov
sarb
jmp
dec
jp
hlt
mov
mov
jl
sarl
out
sub
lds
shlb
lock
dec
adc
add
fwait
adc
jecxz
scas
dec
stos
push
in
leave
or
pushf
rorb
loop
inc
xchg
push
ja
lret
testb
and
push
ja
mov
pop
aaa
ret
fs
push
add
repz
cli
adc
sbb
add
pop
int
mov
pop
push
jmp
mov
pop
push
push
xchg
xchg
sub
nop
xor
adc
lret
mov
push
mov
sarl
mov
pop
inc
mov
push
mov
test
push
cmp
mov
stos
aaa
int
loop
fcomip
pop
nop
xor
xchg
cmp
push
test
jb
pop
leave
sub
addr16
cli
mov
inc
adc
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
cmp
sbb
int
adc
rcl
std
call
push
sub
lods
push
and
fcoms
gs
sbb
int3
mov
lea
mov
mov
mov
fbstp
je
push
int
fmul
fcmovnb
push
clc
sub
xchg
mov
out
lods
adc
outsl
daa
dec
cli
mov
pop
sahf
push
jns
out
cli
dec
mov
push
adc
pop
sbb
jnp
xchg
js
decl
xor
or
dec
push
fdivp
xlat
pop
out
mov
fs
es
add
dec
cmpsb
cs
cmp
xchg
hlt
shl
rcrl
cmp
xchg
cmpsb
fs
dec
xchg
fmul
adc
push
jbe
ja
mov
pusha
cmc
mov
clc
stc
inc
cmpsl
cmpsb
push
mov
cltd
cs
vandnpd
adc
pusha
push
stc
into
push
pop
bound
fwait
sub
mov
pop
fs
xchg
mov
sti
push
aas
mov
xchg
cli
dec
mov
xchg
loopne
inc
mov
push
sub
xchg
adc
jmp
idivb
inc
fisttpl
test
aam
fdivrl
aad
push
push
movsl
push
pop
sub
push
jmp
push
or
jnp
in
sub
je
xchg
jns
sbb
push
aaa
adc
push
jb
mov
dec
shrb
movsl
adcl
pop
add
xchg
xchg
push
add
dec
ja
sbb
cmpsl
mul
sbb
nop
jp
jmp
mov
ljmp
mov
test
shrl
and
in
mov
jb
xlat
dec
or
leave
mov
lods
clc
or
jle
or
ds
ret
xor
scas
dec
fildll
shlb
jle
pop
inc
xor
xor
clc
shlb
stos
loopne
es
loope,pt
mov
adc
cmp
push
mov
xor
or
push
adc
dec
or
fisttpll
add
add
and
in
adc
aas
daa
xor
and
icebp
movsb
ds
jge
sub
into
sub
mov
sub
mov
jno
and
inc
das
mov
mov
jg
jmp
sti
pop
mov
into
stos
jb
inc
push
cmp
cli
movsl
adc
ljmp
scas
jp
push
adc
sub
data16
call
sbb
mov
push
imul
in
dec
cwtl
xchg
jl
jecxz
cmp
popf
xor
xchg
loope
pushf
pop
lock
and
xchg
dec
mov
sbb
xor
mov
xchg
xchg
pusha
mov
mov
clc
in
cmp
xor
gs
adc
iret
inc
lods
testl
inc
xchg
test
sub
add
add
pop
xchg
jae
mov
and
je
mov
pop
cmpsl
inc
outsb
jmp
dec
cli
dec
sub
pop
and
cmpsb
shll
addr16
loop
and
paddsw
xor
iret
sub
repnz
or
add
xor
xchg
xor
mov
lcall
sbb
xchg
out
dec
outsl
sub
sub
adc
lock
xchg
and
adc
inc
outsl
loope
fucom
sbb
sbbl
mov
scas
or
mov
mov
mov
jge
sbbb
cmp
cmp
and
das
in
jmp
cli
lret
shr
jnp
sub
jne
push
push
call
mov
jmp
xor
sbb
stos
adc
adc
adc
adc
cmp
xor
inc
addr16
cld
sub
adc
push
repz
js
mov
pop
sub
push
dec
pop
inc
mov
dec
lret
mov
adc
xchg
push
imul
arpl
aad
push
in
xchg
daa
xchg
push
xor
xchg
ss
sar
dec
pop
or
dec
xchg
scas
jl
dec
shl
ffree
loope
add
mov
dec
jae
push
jle
lcall
fsubr
negb
add
out
mov
in
adc
fidivl
cwtl
scas
xlat
rorl
cld
xchg
fiaddl
pop
push
push
xchg
in
ja
adc
subb
test
or
mov
testl
sub
lahf
mov
sub
and
sti
popa
aaa
cmpsl
rolb
cli
cld
add
fimuls
and
push
push
add
and
mov
clc
and
fists
mov
in
out
aam
in
mov
jnp
pop
ss
dec
es
aam
or
and
stc
lea
mov
pushf
or
icebp
pop
addr16
mov
in
dec
jo
sbb
int3
movsl
mov
addr16
mov
ret
sub
jns
mov
stc
out
arpl
mov
call
test
mov
sti
jg
push
fldt
inc
jns
pushf
jge
inc
xor
shll
jle
lea
jge
push
xchg
gs
sub
xchg
mov
xchg
lods
test
in
sti
mov
shlb
arpl
aas
mov
xor
pop
pop
lret
add
fbstp
repnz
cli
xor
jl
mov
out
fcmovbe
std
pop
jo
xchg
inc
mov
or
xchg
jb
sbb
clc
adc
test
sbb
fildll
fstpt
push
dec
pop
mov
int3
push
pushf
xchg
add
daa
inc
cmp
movsl
jmp
cs
mov
xor
dec
pop
mov
push
outsl
outsb
mov
mov
adc
mov
test
and
mov
xor
stos
sbb
cmpl
dec
fcomip
loopne
sbb
pusha
fists
add
shlb
mov
dec
or
push
inc
mov
aaa
jp
cmp
xchg
dec
bound
out
jnp
negb
cmpsb
sahf
mov
stos
mov
movsb
loopne
fadds
dec
in
in
ja
or
or
mov
mov
and
ficoml
xchg
xor
mov
out
test
gs
into
pop
cs
xor
cmp
add
add
push
subl
cld
add
lret
in
mov
pop
inc
fs
js
sub
adc
addr16
aam
cli
push
push
stos
jge
and
fcmovbe
test
and
add
stos
xchg
rclb
ror
jb
mov
xor
arpl
clc
rclb
mov
mov
jnp
mov
mov
imul
fstl
aas
rcrl
aaa
loopne
add
ja
lret
sbb
inc
push
jo
insb
lock
xchg
mov
mov
in
dec
jae
lret
sbb
or
je
or
and
jge
lcall
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
cltd
adcb
int
adc
push
stos
sbb
iret
mov
jb
in
xchg
sbb
and
sub
aas
inc
rclb
sub
ljmp
pop
mov
pop
sub
clc
in
fcmovbe
call
pop
cltd
bound
out
sbb
stos
sbb
or
jl
sub
sbb
mov
or
mov
loope
sbb
or
push
jns
bound
and
ds
pop
add
stc
test
das
mov
xlat
test
push
stos
mov
fs
jnp
in
xchg
lods
mov
cld
mov
pushf
mov
outsb
dec
leave
scas
xor
icebp
fsubl
scas
cmp
nop
xor
lahf
inc
stos
dec
push
ja
insb
inc
mov
roll
push
in
in
outsl
shll
lock
ret
or
mov
in
xchg
sbb
loopne
imul
enter
push
shlb
cltd
out
add
int3
mov
in
inc
rclb
int
repnz
int3
adc
js
mov
sub
jmp
sbb
cmp
ret
mov
scas
in
mov
mov
test
and
insl
lcall
inc
ja
pop
xor
push
test
sbbb
movsl
stos
out
pusha
dec
xor
cli
push
subps
scas
pop
or
xchg
mov
jge
cli
lock
cwtl
aas
mov
adc
testl
iret
xorl
push
mov
rcrl
fcompl
addr16
dec
addr16
jp
lahf
ret
sbb
stc
test
pop
arpl
push
insb
xchg
dec
sbb
int3
mov
mov
lds
inc
mov
bound
in
test
jmp
add
adcl
icebp
std
int
test
std
jns
push
arpl
mov
clc
mov
out
sub
pop
dec
int3
test
movsl
stc
out
mov
jmp
pop
stc
fsubrs
cmp
cs
test
inc
loopne
aad
pop
mov
xchg
into
dec
inc
stos
mov
xor
pop
push
int
mov
in
test
and
test
mov
inc
lea
idiv
pushf
fwait
cmp
test
testb
fldt
xchg
nop
jg
mov
mov
sub
inc
insl
pop
sub
inc
cltd
dec
setbe
scas
cmp
inc
sub
cmp
popa
push
fwait
xor
mov
jne
cmc
rcrb
aas
adc
inc
imul
mov
imul
out
pop
adc
mov
mov
movsl
lds
inc
les
push
outsl
fwait
push
add
mov
jge
jo
sub
sbb
push
cmp
inc
add
fiaddl
cmpb
insb
imul
out
cmc
imul
jge
cmpl
enter
jns
push
push
insb
cmp
and
jle
aaa
sub
sub
push
adc
xchg
mov
fcmovne
cmp
pop
push
je
adc
pop
loope
jns
out
scas
mov
inc
sahf
xlat
fwait
and
lret
fstpt
xchg
insb
xor
ffree
xchg
fsubr
push
push
sbb
loope
in
pop
jo
aam
pop
lods
dec
cmc
or
cmp
push
push
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
mov
lret
push
adc
adc
adc
inc
xor
js
cmpsl
loop
lock
cmp
lods
enter
popf
les
pushf
sbb
lret
lds
jecxz
push
mov
std
jnp
inc
out
inc
and
pop
int3
push
and
xchg
xchg
iret
lahf
add
movsbl
and
mov
enter
lds
addr16
cmp
sub
imul
lods
inc
fdiv
or
jnp
fxch
pop
cmp
adc
mov
incb
inc
mov
cltd
es
dec
enter
inc
fnstenv
aad
icebp
in
in
stos
lret
and
mov
xor
push
and
dec
js
fldenv
test
add
packssdw
or
jb
add
xchg
mov
cmpsb
sub
cmpsb
insb
mov
clc
popf
adc
adc
lock
add
iret
mov
jecxz
incl
and
push
mov
aad
out
xchg
jno,pn
insb
push
fimuls
xor
mov
mov
mov
nop
push
or
mov
in
icebp
xchg
xor
inc
xchg
leave
outsl
and
sti
iret
pop
cmpsb
adc
das
fidivl
cmp
add
imul
mov
inc
xor
or
out
adc
testb
dec
ret
js
dec
adc
popa
adc
orl
jnp
add
in
lcall
sub
ss
mov
stc
jge
pop
ret
ficoms
lock
fucomip
int
in
push
insb
adc
sub
scas
fbstp
cmpsb
movsb
mov
hlt
inc
fs
mov
mov
mov
xor
shll
cmpsl
ret
jg
nop
cvtpi2ps
dec
shll
lods
and
pop
ret
shrb
ret
pop
jmp
dec
xchg
test
push
mov
shlb
dec
push
push
and
cmp
sti
dec
adc
je
xor
lahf
pop
lret
popf
rcrl
xchg
insb
xchg
xor
ljmp
pushf
test
rorl
mov
fisubs
test
daa
sub
data16
scas
mov
shrl
pop
sub
or
pushf
xchg
dec
imul
lods
push
lret
ss
int3
adc
mov
xchg
dec
and
cmp
mov
sub
xor
xor
sub
and
jge
enter
add
je
cmp
mov
loopne
loopne
sahf
das
mov
mov
inc
or
repnz
int
jp
loopne
mov
call
mov
jb
stos
idivl
ret
popf
call
rcll
incb
lsl
or
outsl
idivb
mov
sbb
bound
inc
popl
pop
scas
mov
call
ret
ds
cwtl
and
or
or
fmuls
stos
jns
push
shl
in
mov
sub
out
sub
lret
iret
xor
mov
jmp
icebp
popf
cli
xor
lcall
mov
es
mov
hlt
xchg
xorl
cmp
das
or
dec
repnz
fadd
andl
push
xor
lret
sub
out
inc
lahf
add
or
imul
js
into
add
jns
sbb
push
test
mov
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
push
into
idivl
bound
adc
adc
dec
add
jmp
push
sar
shlb
mov
inc
ss
inc
addl
cld
fadds
pop
rcr
iret
ss
sub
imul
sbb
cmp
lods
xchg
mov
jbe
pop
movsl
sub
pop
adc
cli
fwait
fwait
mov
jmp
loop
xchg
xor
push
mov
jl
push
ds
and
cld
out
fisubs
inc
lock
xchg
out
mov
arpl
jb
dec
pop
pop
mov
pushf
divl
pop
dec
push
fcompl
fstl
fldcw
xlat
pushf
mov
nop
inc
in
xorb
hlt
movl
ret
sub
mov
jle
adc
push
icebp
sysexit
jno
cmpsl
sbb
movsl
jnp
dec
fsubp
lods
mov
or
test
xor
insl
adc
xchg
pusha
jge
and
jl
mov
cmc
sub
mov
jge
sahf
popa
adcl
mov
push
bts
and
pushf
xchg
fbld
aas
ret
movsl
icebp
int3
add
sbb
or
mov
jne
mov
mov
stc
imul
xchg
push
mov
repz
flds
push
mov
andb
inc
shlb
mov
add
in
sbb
push
inc
outsl
ret
xchg
mov
push
xor
jp
cmp
in
lds
push
lret
stos
sub
js
aaa
dec
sbb
jb
xor
cli
adc
call
adc
enter
xchg
rolb
inc
adc
repz
jae
mov
stos
cmp
pop
mov
mov
jl
push
cmp
mov
ljmp
pop
in
push
lods
sbb
push
pop
jbe
jg
push
pushf
dec
dec
aaa
rcrb
fdivr
push
scas
push
iret
mov
xchg
ja
xchg
mov
push
addr16
arpl
jp
or
xor
jge
xchg
fnstsw
aas
in
pusha
jmp
fstl
mov
scas
divb
aam
jg
fcomi
mov
cmp
pop
jmp
fcoml
ret
add
sahf
mov
lock
ds
cmp
cs
das
outsb
adc
ret
add
emms
push
movsb
or
mov
shlb
js
sbb
shlb
lret
or
jecxz
test
or
into
jl
mov
and
sbb
cmp
cmc
inc
or
stc
lcall
mov
push
int3
lahf
cmpsb
and
imul
sbb
xor
mov
mov
cmp
sub
adc
ljmp
mov
add
push
xchg
stos
add
fimull
mov
into
lcall
cmpsb
xor
jg
out
pop
lods
pop
jbe
jne
lret
push
outsb
sti
outsb
int
ljmp
mov
andb
mov
lock
leave
sub
mov
and
pop
inc
sub
push
push
iret
push
icebp
imul
fcomps
dec
lret
rdpmc
mov
adc
stos
cld
leave
add
jb
and
out
mov
fldl
xlat
mov
mov
insb
repz
js
mov
xor
xorl
movsl
mov
loop
int3
sbb
sti
ret
xchg
rol
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
and
inc
stos
adc
adc
adc
adc
sub
jl
cld
add
movsb
roll
fiaddl
subl
imul
cmp
fidivl
adc
push
test
jno
dec
inc
cmovs
mov
jnp
pop
or
imul
nop
and
sub
or
add
and
jp,pn
mov
xor
es
mov
sub
rcrb
jo
add
mov
dec
inc
insb
cmpsl
mov
popf
stos
gs
out
testb
fadd
arpl
lock
nop
adc
jg
xor
ret
push
dec
adc
dec
nop
lret
nop
push
in
sbb
leave
lret
dec
bound
test
sub
rcrl
lods
mov
xchg
sub
cmpsb
adc
mov
fsubp
or
pop
xchg
sbb
mov
fwait
mov
fidivl
and
insl
xchg
xchg
push
push
sarl
andl
aas
mov
mov
mov
xchg
pop
push
popa
mov
ds
add
iret
addr16
les
mov
xor
jge
pusha
adc
and
es
std
xor
lret
cli
mov
mov
nop
push
in
dec
icebp
xor
add
cmpsb
jns
mov
push
pop
enter
out
sbbl
daa
fstl
dec
popa
and
popf
mov
mov
adc
cmp
imul
mov
mov
adc
and
ficompl
and
gs
lcall
hlt
fwait
pop
adc
fdivl
ret
mov
jle
jmp
in
ljmp
or
add
enter
mov
nop
ljmp
add
out
dec
std
mov
cmp
jno
hlt
jmp
lea
mov
fmul
and
pop
push
outsl
int3
inc
mov
sub
jmp
mov
test
push
xchg
add
wrmsr
ja
mulb
mov
push
mov
pushf
and
xchg
sub
adc
outsb
jns
pop
bound
mov
xchg
sahf
inc
bswap
lods
sbb
test
shrb
push
and
ds
cmp
jns
lods
pop
cmp
xor
lret
imul
shlb
stos
push
lds
dec
popl
test
cmp
lret
and
push
cmp
mov
jge
push
xlat
sbb
mov
ss
lret
add
and
xchg
lock
or
add
push
outsl
jmp
push
cmp
mov
ja
fidivrl
out
loope
mov
dec
jae
pop
hlt
sbb
aas
aam
xchg
mov
pop
xor
sub
and
push
jecxz
push
inc
adc
jae
shl
lock
adc
loope
push
pop
out
adc
das
jg
inc
mov
popa
fmull
xchg
jg
repz
aas
repz
in
pop
pop
addr16
mov
pusha
cmp
cmpl
insl
mov
pop
rorl
out
xchg
push
pop
in
lods
loop
lret
mov
mov
jnp
jb
ret
or
or
repnz
sbb
std
cmc
mov
or
ja
movsl
aad
and
mov
inc
insb
icebp
lods
jbe
movsb
xchg
jp
arpl
out
notb
roll
fdivrl
test
sub
adc
jo
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
clc
sub
push
adc
xor
adc
dec
leave
out
sub
popf
cmc
mov
bound
and
sub
jge
and
inc
out
or
insb
fcmovne
iret
inc
mov
in
add
in
dec
inc
sbb
inc
sar
mov
jae
aad
movsl
pop
jl
and
xor
push
nop
push
aas
shlb
sub
mov
sbb
sahf
lcall
aaa
loope
sbb
cltd
mov
cmp
sarb
rcr
sbb
fisubl
cld
push
aaa
jg
out
loopne
or
and
mov
rcll
test
jmp
and
in
push
int
jmp
js
dec
imul
push
into
stos
pop
mov
aas
addr16
leave
mov
sub
push
xchg
ja
mov
dec
les
dec
vpslld
repz
ljmp
sbb
rol
add
ja
sarb
mov
push
leave
mov
gs
fstpt
test
pop
pop
xlat
push
sub
shr
sub
aam
les
scas
test
push
inc
fisubrs
enter
adc
sahf
scas
jmp
mov
push
mov
movups
out
add
pop
cmp
out
and
or
into
add
inc
imul
cmp
mov
xchg
scas
std
mov
dec
pusha
pop
cmp
mov
mov
and
mov
adc
jae
daa
rorb
push
ss
pop
or
aas
stc
loope
ss
xchg
push
dec
lahf
into
leave
xor
push
pop
iret
popa
push
in
xor
in
stos
jmp
sbb
in
mov
pop
je
repz
fdivs
mov
xor
out
cmpsb
icebp
pop
loop
cld
mov
ror
out
jb
dec
icebp
call
int
jns
imul
jae
daa
filds
ss
and
int3
arpl
add
sbb
fisubrs
lods
xor
iret
and
xlat
lock
adc
mov
es
inc
js
mov
aas
lahf
jl
aam
cmpsl
pop
rolb
push
gs
inc
push
xlat
add
pop
lds
decb
test
test
jecxz
cld
dec
shll
pop
push
cli
and
leave
jmp
pop
mov
inc
xchg
mov
mov
inc
sbb
push
mov
cmp
xchg
inc
into
jecxz
les
jcxz
push
sbb
or
push
les
sub
pop
imul
mov
dec
pop
addr16
ret
outsb
and
dec
imul
jns
int
fstps
sub
ds
in
into
mov
lcall
outsl
xor
mov
hlt
arpl
or
pop
adc
adc
cli
or
pop
mov
adc
push
mov
sbb
and
sub
hlt
movsb
dec
or
insl
int
out
pushf
mov
mov
pop
fimull
mov
and
sbb
cmp
sbb
inc
ljmp
add
inc
stc
sub
aaa
fcmovnu
lcall
loopne
in
loopne
mov
lock
int3
push
dec
cmp
jb
fidivrs
mov
xchg
test
faddl
pextrw
sbb
mov
fildll
aam
divps
imul
push
js
dec
jbe
add
ret
dec
dec
gs
pop
scas
xorb
pop
jns
stos
sbb
insb
add
push
data16
nop
test
addl
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
fcmove
lods
inc
dec
adc
xor
adc
push
cmp
mov
xor
cmp
jle
mov
pop
in
xchg
dec
xor
pop
pop
cltd
inc
repnz
test
xchg
shll
jp
jo
and
cmp
mov
xchg
les
sub
mov
out
adc
sbb
fidivrl
mov
pop
mov
popf
movsb
xorl
idiv
pop
mov
out
add
cltd
call
popa
cltd
push
iret
mov
leavew
popa
mov
push
popf
mov
scas
imul
inc
sub
jae
xchg
rcrb
sub
aad
adc
ret
lods
stc
mov
sbb
mov
cmp
jge
or
pop
loop
push
xor
cwtl
data16
sub
test
xchg
mov
icebp
js
sub
or
subb
shrl
sub
and
cmp
jbe
adcb
ds
push
dec
stos
mov
dec
dec
imul
add
xchg
outsb
and
jp
pushf
adc
or
adc
sub
add
sub
or
fsubs
test
icebp
inc
in
shlb
add
xchg
jmp
leave
jne
int
aaa
ret
or
iret
negl
inc
sub
xlat
stos
rorl
adc
outsl
mov
int
push
and
or
dec
lcall
fbld
mov
sbb
shrb
pop
ffree
pop
jge
mov
mov
sub
sahf
and
push
mov
imul
mov
bound
sbb
dec
mov
ja
cld
mov
out
clc
icebp
xor
or
scas
in
cmp
mov
mov
int
repnz
cwtl
dec
mov
les
scas
js
shrl
cmp
xchg
add
mov
cmpsl
pop
mov
into
jg
pusha
pop
jp
push
aaa
cmp
pop
add
call
inc
ja
out
das
push
inc
cmp
sbb
mov
subb
int
in
decb
daa
push
mov
aam
xor
insl
in
rorb
mov
stos
xchg
dec
lds
lahf
call
mov
cwtl
and
dec
repz
cmp
cmpsl
sub
adc
test
and
scas
ret
xchg
adc
or
jle
sbb
test
push
mov
pop
push
dec
sbb
into
decl
xchg
mov
and
lahf
fcmovu
push
pushf
pop
xor
pop
mov
lds
jb
sarb
cmp
test
fadd
mov
or
lock
lods
inc
clc
fucom
daa
in
pusha
xchg
stc
insb
rcrl
xorb
and
jg
sti
add
inc
andl
test
ljmp
aad
cmp
fmul
pop
dec
cmpsb
xor
popf
or
cmpsl
hlt
mov
pop
stos
pop
sub
fsub
ficoms
mov
inc
add
cs
es
js
std
xor
repnz
ss
fsubrl
add
ret
xchg
call
mov
int3
ret
lahf
or
dec
test
scas
sub
and
int
add
lods
sub
sub
sbb
std
push
dec
inc
cmpl
cmp
test
mov
rclb
adc
mov
mov
mov
in
add
int
pop
mov
cmp
cli
sbb
push
jge
xchg
ljmp
lret
mov
lods
mov
repz
and
mov
addr16
xor
int
ret
ljmp
dec
cmp
sbb
or
call
push
call
lods
enter
push
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
mov
lcall
lock
mov
and
repnz
movsb
xchg
shll
pop
cmp
jmp
iret
sub
xor
pop
or
repz
neg
push
jg
jne
dec
jb
lret
and
out
or
divl
mov
push
comiss
cmp
or
outsl
mov
mov
mov
movsb
test
xor
pop
hlt
fninit
clc
xchg
push
lds
out
jb
ljmp
dec
ss
dec
add
out
inc
push
repnz
jecxz
mov
mov
rorl
inc
jmp
outsl
pusha
jbe
pushf
sbb
mov
movsb
iret
sub
sbb
repnz
add
bound
push
das
cmp
jnp
subl
pop
sbb
cmc
mov
sbb
xor
cltd
mov
mov
inc
or
mov
in
setle
and
inc
imul
inc
in
pop
push
cmpsb
loopne
pop
cld
mov
in
nop
sub
subb
cli
imul
icebp
mov
lds
jno
sub
ret
ret
jp
out
movsl
xchg
push
jns
clc
int
sbb
pop
inc
jle
cli
jnp
rcrl
in
or
and
mov
cmpsl
jae
mov
fmul
addl
in
imul
jmp
cmp
cltd
mov
lea
push
out
popa
std
xchg
or
shrb
inc
in
shlb
jne
pop
or
adc
pop
orb
xchg
fwait
lds
test
fdivl
push
outsl
inc
xchg
dec
cld
xor
xor
fdivl
sahf
sub
sti
fisubrl
inc
sub
out
or
fisubrl
js
leave
inc
arpl
gs
jg
lds
cld
aas
xor
add
dec
leave
dec
mov
lods
mov
daa
loopne
sbb
test
and
jp
mov
ret
daa
mov
adc
es
xor
inc
inc
into
jbe
xchg
fwait
mov
les
adc
lods
addr16
inc
gs
xor
iret
sbb
pop
inc
mov
push
loopne
aaa
roll
addr16
in
out
jmp
loope
sbb
sub
inc
mov
jp
loope
xchg
pop
adc
cmp
or
or
iret
push
cltd
movsb
dec
sub
adc
mov
xchg
sbb
and
clc
iret
xchg
aam
fsubrs
mov
gs
into
scas
inc
icebp
movsb
insb
iret
dec
inc
insl
cmp
mov
and
xchg
inc
scas
xor
dec
sub
jle
jo
xor
add
fnstenv
push
push
inc
sbb
fstp
cmp
add
les
xor
mov
insb
dec
andl
mov
hlt
mov
dec
sbb
pop
pop
add
invd
ljmp
loopne
sub
xchg
imul
xlat
outsl
sbb
imul
or
adc
or
cmpb
jbe
in
pop
inc
mov
lahf
test
jae
jo
sub
lcall
adc
lea
push
das
mov
mov
lret
stc
mov
xor
in
push
repz
repz
add
dec
mov
scas
inc
fimuls
gs
movsl
in
imul
sahf
aaa
add
aam
mov
mov
ljmp
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
xor
xor
adc
sbb
sbb
sub
lahf
je
jnp
insl
aam
and
cli
pop
insl
test
and
jae
testl
adc
scas
ja
andb
mov
jb
in
int3
ss
pushl
jb
pop
loopne
dec
push
jle
in
daa
jge
pop
popa
jp
and
ret
jae
push
in
aaa
insb
jb
mov
dec
push
xchg
stos
xor
sbb
dec
hlt
pop
cmp
stos
outsb
push
stc
cmp
outsb
dec
jge
out
inc
xchg
sbb
arpl
popa
mov
sbb
clc
add
pop
jg
push
mov
xor
test
cld
shlb
test
js
cltd
scas
ds
or
icebp
mov
adc
js
mov
push
fimuls
xchg
add
push
or
dec
adc
cmpsb
cmp
pop
xchg
cwtl
repz
cmp
fimuls
cmc
ljmp
jmp
lcall
pop
jbe
inc
in
add
jae
mov
add
adc
mov
sbb
repnz
and
rcrb
das
popf
popa
jle
or
xchg
insb
pushfw
decb
xor
into
sub
stos
dec
mull
mov
fimull
sub
out
popf
repz
jb
popf
pop
das
or
jo
sub
inc
xchg
push
hlt
xor
and
into
js
sbb
loope
mov
mov
xor
js
loopne
into
lret
pop
jg
mov
outsl
push
pop
es
or
jl
dec
insb
pop
cmpsb
inc
and
fistl
bound
or
xchg
ss
scas
stc
popf
sub
dec
and
dec
test
pop
push
ss
sbbb
in
fabs
xor
fdivrs
sub
pop
push
dec
ficomps
rclb
or
cmp
outsl
out
and
ret
sbb
sbb
js
mov
push
into
idivb
outsl
in
mov
fistpll
lock
in
sub
inc
jae
add
rclb
push
push
inc
push
xlat
iret
movsl
insl
sahf
cmpsb
cmp
mov
mov
pop
out
mov
xchg
xchg
loope
sbb
xor
xchg
mov
and
mov
jne
xchg
repnz
mov
test
in
dec
aas
xor
adc
dec
push
dec
hlt
xor
xchg
cmp
mov
sysret
add
ss
test
mov
mov
es
clc
pop
insl
mov
jne
insb
add
mov
mov
sub
xchg
test
cmpsl
xorb
pop
mov
nop
inc
sub
xor
dec
and
jae
jae
adc
xchg
mov
in
inc
xor
leave
xchg
adc
xor
adc
fisubrl
pushf
dec
jbe
subb
inc
sbb
cs
xor
pop
loop
addr16
sub
rorb
adc
cmp
push
push
insl
pop
xchg
inc
and
cmp
lea
sbb
cmp
das
outsb
adc
jmp
lret
dec
and
in
add
ss
xchg
loope
sub
bound
clc
pop
cs
ljmp
or
enter
xor
jne
rcrb
cld
fildl
jb
in
mov
sarb
mov
jmp
sub
sbb
mov
lcall
test
cltd
les
mov
divl
dec
lret
call
pop
xlat
test
gs
mov
xchg
sbb
das
lds
cmp
pop
mov
negl
push
cmp
loopne
mov
sbb
xlat
and
mov
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
test
mov
stos
jl
xchg
popa
test
test
pushfw
arpl
icebp
ja
insl
push
mov
imul
sarb
mov
mov
lahf
lcall
insb
add
insb
add
lret
test
mov
jmp
sti
mov
or
sbb
sahf
ficompl
cmp
inc
mov
xor
inc
and
dec
rolb
inc
xor
ss
mov
aad
cmp
jg
cltd
cwtl
sbb
jo
std
sbb
fwait
xor
dec
inc
cmp
fwait
and
cld
iret
scas
sub
mov
xor
nop
or
fwait
das
xor
xor
rcll
imul
rcrl
xchg
call
jge
add
and
shrl
fsubr
jno
cmpsl
popa
or
jp
and
cmp
or
leave
aas
adc
fucomp
mov
push
leave
rorb
loope
adc
andb
push
out
out
push
repnz
loopne
pop
fstps
into
frstpm(287
and
scas
loope
hlt
mov
or
aaa
cmpsl
adc
scas
shl
inc
popa
sbb
lcall
adc
mov
jo
cmp
dec
dec
cmpsl
dec
aad
xor
jns
jb
fidivs
add
pusha
inc
mov
retw
in
mov
xchg
jle
dec
fstps
and
rorb
aam
mov
and
int
and
cmc
sub
jmp
fucomip
mov
jmp
shrb
jns
fcoms
cmp
jmp
cld
mov
popl
orl
icebp
repz
xchg
mov
in
cld
push
fs
cmp
shrb
ja
pop
sub
add
and
addr16
inc
inc
callw
inc
mov
add
out
add
jno
in
xor
xor
and
sub
xchg
aaa
aaa
mov
in
jge
or
lret
mov
movswl
fdiv
lcall
scas
jne
push
out
push
dec
leave
cltd
mov
lret
mov
push
call
xchg
sbb
lret
ret
or
sub
mov
push
shlb
or
sti
sub
lahf
test
sbb
out
xchg
out
scas
jb
jbe
inc
mov
and
xchg
outsl
pop
popa
xchg
loopne
push
adc
jg
or
adc
movb
and
fsubs
add
jecxz
cmp
sub
xchg
iret
cli
ljmp
pop
les
loope
test
lahf
ljmp
mov
mov
out
ss
je
inc
dec
xchg
dec
aam
ret
adcl
imul
sarl
mov
ja
repnz
orl
sub
xor
ret
decl
and
pop
insb
cltd
ror
les
ret
pop
loopne
stos
cmc
add
stos
inc
push
inc
mov
pop
test
push
stc
and
mov
rcrb
mov
fwait
bound
xchg
jp
imul
or
popa
cmpsb
mov
push
jb
jne
push
mov
pop
push
in
in
add
mov
arpl
repz
push
pop
cmpsl
xchg
out
mov
dec
cmp
mov
mov
mov
rcrl
push
in
shrd
xor
jmp
mov
popa
lcall
cmp
adc
adc
adc
xchg
call
jg
jne
rol
xor
pop
stos
cmp
jno,pt
push
jb
ret
insb
inc
fdivrs
ficoml
lds
push
in
sub
or
aam
stc
jb
notb
fdiv
adc
xchg
dec
mov
rorl
insb
inc
and
js
ret
sahf
ds
sbb
imul
push
mov
in
outsl
je
xchg
fstps
sub
loop
iret
in
movb
lcall
rcll
xor
jne
sti
sarl
and
icebp
sbb
and
cmp
jecxz
jge
pusha
or
pushf
cli
nop
enter
pop
xorb
pop
cmp
dec
jge
ss
call
mov
mov
cmc
fdivrs
into
cmp
add
jnp
mov
mov
adc
push
fiadds
ret
ljmp
mov
mov
incb
jmp
nop
mov
sti
push
mov
jo
mov
xlat
leave
xchg
ficoms
sbb
jle
test
flds
mov
aaa
aas
push
stos
inc
jmp
std
sub
icebp
sarb
jns
and
pop
sbb
cwtl
mov
scas
mov
mov
scas
in
stos
fdivrs
popa
je
pop
sbb
ret
push
sbb
les
lret
cmpsl
jo
test
imul
mov
xchg
cmp
inc
in
enter
push
outsl
sub
and
iret
inc
notl
lds
aam
and
stos
mov
ds
insb
cmp
ficomps
mov
cmp
sbb
scas
dec
repnz
test
sbb
and
ss
or
xor
fwait
inc
mov
push
fs
add
in
call
jecxz
add
bound
mov
mov
lcall
subb
dec
test
or
orb
rcll
adc
inc
jno
push
mov
hlt
ret
lods
xor
mov
pop
jns
xor
xor
popf
mov
stos
and
and
lahf
inc
insl
dec
inc
xchg
lret
mov
jp
int
lds
sbb
mov
lods
paddd
and
pmaxub
das
daa
or
adc
cwtl
in
lods
inc
cwtl
movsl
dec
cmp
scas
xorl
and
scas
add
les
add
movsl
sub
leave
imul
rorb
mov
inc
shl
hlt
scas
inc
dec
stos
adc
fcomps
inc
shl
dec
mul
push
fwait
int3
fbstp
mov
mov
cmp
lea
and
mov
mov
xlat
test
dec
stos
xor
inc
and
call
out
inc
xor
jb
xor
movsb
add
pop
mov
mov
repnz
push
adc
cwtl
mov
or
enter
scas
cwtl
xchg
xchg
sub
mov
pop
jg
mov
mov
ljmp
add
cltd
adc
hlt
es
or
mov
push
push
inc
or
cs
out
jge
xor
or
push
fsubrl
pop
fldenv
cmp
push
dec
cltd
fimull
data16
inc
repz
inc
sbb
inc
lea
mov
repnz
ret
pop
data16
push
mov
xor
shl
mov
fsubrl
dec
xor
into
rol
jbe
fidivrs
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
sub
mov
fmull
adc
js
inc
ljmp
xor
dec
jne
in
xchg
arpl
ret
std
repz
push
and
es
push
xchg
xchg
movsl
std
cmp
je
sbb
xchg
xor
mov
mov
ret
popf
jns
sub
xchg
mov
lcall
pop
cmp
pop
xlat
cmpsl
outsl
test
inc
shrl
add
sbb
in
mov
pop
lret
xlat
mov
clc
push
and
sbb
sub
inc
out
mov
sti
test
sbb
mov
xchg
mov
or
mov
jg
ret
addr16
jno
idivl
std
dec
in
dec
mov
or
insb
or
dec
into
mov
mov
push
fwait
test
push
mov
lcall
sub
pop
adc
lcall
pop
loop
lret
addr16
clc
xchg
addr16
dec
and
scas
pop
outsl
andb
add
lods
jge
push
in
rol
icebp
mov
dec
jae
jns
es
add
cltd
sub
aas
xchg
mov
mov
rcrl
sbb
xchg
xchg
push
fcoms
sbb
stos
fs
xchg
mov
jne
mov
aas
sub
inc
lods
imul
loopne
xor
adc
xor
mov
movsb
cmpsb
dec
sbb
subl
push
cli
sbb
pop
lahf
outsb
adc
sti
pop
cmp
lods
aas
mov
push
push
aam
jecxz
mov
mov
add
je
adcb
cmp
cmp
lcall
ficompl
adc
pop
xor
rcrb
mov
loope
jmp
lea
dec
pop
add
pop
cmp
inc
movsl
decl
or
dec
mov
rorb
in
sub
ljmp
outsl
jmp
dec
pop
mov
mov
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
aad
mov
xchg
sbb
adc
movlps
loopne
mov
bound
inc
mov
inc
movsb
loop
lea
outsb
iret
dec
and
notl
mov
clc
popf
fsubp
cmpsl
sbb
pop
jg
jo
aam
add
testb
pop
xor
mov
mov
mov
out
xchg
loopne
pop
dec
clc
adc
clc
jmp
pop
jmp
cmp
into
test
in
dec
jno
outsb
fildll
sbbb
jbe
or
mov
add
mov
aas
popa
in
jge
cmc
daa
jge
mov
jge
hlt
lock
jl
flds
jno
mov
add
lahf
jg
fdivr
insl
xchg
lock
jmp
sbb
pop
outsb
faddp
clc
push
fs
jge
fs
arpl
or
cmpsw
cmc
mov
lds
lret
pop
sub
xchg
lods
xor
out
inc
jb
mov
xchg
push
int3
add
hlt
cmp
mov
out
shll
lods
out
mov
leave
fcompl
and
pop
call
cli
lods
and
pop
jbe
and
mov
repz
sub
cmp
fsubr
mov
push
mov
shll
pop
pop
mov
mov
add
andb
hlt
cmp
insl
sbb
cltd
sub
sub
xchg
jge
les
icebp
es
xchg
repnz
mov
ds
mov
push
fisttpll
xchg
adc
push
lret
into
les
arpl
pop
lock
push
and
cwtl
or
and
addr16
pop
divl
pop
shrb
adc
std
enter
int3
inc
loopne
dec
sbb
pop
pop
inc
jecxz
notb
mov
outsl
jge
push
repz
sbb
clc
fwait
loop
xor
into
xor
lock
div
xor
mov
jmp
sub
and
dec
dec
cmp
and
pop
xor
das
pop
in
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
sbb
jle
sbb
adc
movlps
orb
outsl
pop
or
push
cltd
fdivl
dec
aaa
adc
rcrb
jne
cmpb
les
mov
dec
cmp
cltd
mov
push
int
mov
jnp
es
or
movb
xchg
sbb
loop
cmpsl
sahf
dec
or
icebp
ret
dec
and
pop
repnz
and
insb
push
lds
sbb
xchg
cli
iret
clc
mov
imulb
add
adc
fidivrl
mov
leave
dec
imulb
clc
movsb
push
push
xchg
pop
loopne
inc
scas
mov
in
push
sbb
xchg
dec
cs
jge
pop
pmaddwd
add
inc
in
dec
je
es
jmp
enter
xor
push
xorl
scas
xchg
and
mov
xchg
shrb
adcl
mov
xchg
leave
jb
out
push
sar
rclb
inc
rcr
in
cmp
sbb
or
sub
fdivrl
push
or
push
shlb
imul
sbb
xor
out
ja
adc
push
fs
dec
push
adc
cli
xor
daa
filds
loope
add
popa
cmp
mov
jb
mov
movsl
mov
add
jp
xor
push
cmpsl
pop
xchg
adc
stos
sti
testl
adc
mov
lds
adc
pop
jns
fdivl
in
ds
inc
popf
cmp
vcomisd
add
push
mov
icebp
mov
aad
ret
daa
out
push
mov
cmp
xor
cmp
fisubs
outsb
lret
push
ret
jnp
lds
repz
sbb
push
stos
adc
enter
inc
ret
dec
test
or
rol
dec
xchg
movsl
insb
icebp
sub
fnstcw
inc
add
pop
cli
jbe
imul
add
outsl
lret
nop
mov
out
mov
cmp
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
adc
adc
movlps
push
hlt
pushf
loop
dec
std
mov
or
lahf
add
xlat
rorb
lcall
decl
cltd
out
mov
push
shll
out
in
and
nop
rorl
pushf
pop
xchg
ret
sarb
sub
jo
cli
lods
or
sti
nop
xor
push
in
jp
sbb
jnp
mov
mov
inc
data16
lods
xchg
nop
mov
aas
push
mov
decb
jl
mov
cwtl
push
xlat
je
xor
movsb
test
icebp
jb
in
sbb
add
xchg
jmp
mov
add
cld
fwait
aam
ror
and
arpl
add
pop
and
add
add
and
jbe
sub
inc
outsl
sub
dec
dec
lock
push
push
mov
outsb
sub
adc
jae
add
arpl
sarl
add
inc
mov
xchg
fnstsw
jmp
jl
adc
aas
inc
test
lods
cmc
jmp
in
mov
lods
mov
loop
and
arpl
xorl
dec
dec
lock
xlat
jg
in
pop
dec
xchg
pop
xchg
outsl
mov
or
ret
sub
fprem1
mov
aad
shl
and
repz
push
outsb
push
push
stos
dec
pop
pop
fidivl
repnz
inc
sbb
out
mov
or
imul
xchg
cmpb
fldenv
mov
push
xchg
push
sub
aas
mov
cmp
xor
jns
icebp
scas
or
sub
lcall
imulb
inc
mov
or
nop
outsl
gs
mov
sti
push
pop
addb
pop
xchg
rcr
pop
pop
cmp
jnp
mov
and
stos
call
jp
inc
imul
mov
aam
nop
dec
jno,pn
pop
scas
push
xchg
mov
mov
push
or
ss
push
jbe
push
hlt
ret
xor
in
in
inc
hlt
cmp
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
mov
adc
fmull
adc
sbb
loope
xchg
xchg
jns
popa
idivl
mov
cli
mov
scas
cmp
loopne
leave
jg
stos
mov
push
addb
xlat
insb
cli
xor
mov
mov
mov
push
ja
mov
gs
xor
pop
pop
push
and
push
xor
jns
jp
pop
dec
ds
jae
push
ficomps
inc
xor
and
mov
hlt
leave
cld
mov
lods
std
call
js
enter
out
inc
add
insl
mov
dec
pop
aaa
int3
or
xchg
mov
xor
push
inc
ja
ljmp
rcl
pop
xchg
dec
xor
dec
ret
scas
mov
sbb
ljmp
push
cmp
je
jne
inc
idiv
dec
xor
scas
pop
shl
insl
inc
lea
pop
iret
or
inc
dec
insl
sub
loope
xchg
add
cmp
jecxz
movsl
xor
jle
cld
cmp
aaa
ret
mov
add
jmp
cmp
xor
loop
adc
jb
xchg
popa
sub
fiaddl
scas
imul
movsb
push
inc
rolb
jno
lods
lods
or
sbb
mov
pop
rorl
pop
add
scas
mov
js
mov
aaa
aaa
movsl
mov
inc
jecxz
mov
mov
or
repnz
or
insb
lret
insb
inc
sbb
flds
add
scas
and
mov
daa
dec
aas
cmpsb
lods
adc
xorl
adcb
cmp
cmp
test
and
inc
outsl
xchg
in
insb
mov
dec
mov
mov
dec
loopne
lods
jne
ficoml
xor
andl
mov
push
push
dec
repz
jnp
jp
fcomps
subb
outsb
xchg
insl
sahf
pop
test
push
jns
sbb
xchg
pop
mov
xchg
sti
sbb
iret
adc
aas
mov
mov
push
xor
add
add
push
sbb
loope
jae
mov
mov
adc
fmull
adc
addl
add
add
or
and
je
loop
and
jbe
push
fdivrs
fmull
jae
loopne
sub
xchg
and
lds
data16
out
sub
mov
mov
jae
pop
jle
fcoms
outsb
sbb
sbb
add
xchg
repz
movsl
notb
sti
jg
fdivrs
cld
dec
lds
xchg
and
xorb
insb
cli
lret
bound
sub
inc
out
push
fs
das
aad
shl
sarb
mov
data16
jne
fsubl
pop
lods
mov
loope
add
mov
pop
subl
xor
rcrl
cld
pop
lret
arpl
mov
icebp
mov
cli
mov
arpl
sbb
cmp
out
mov
add
ret
leave
add
cli
dec
push
inc
mov
mov
outsb
test
inc
mov
inc
or
in
add
push
jb
into
push
jo
scas
add
pop
lods
cs
out
push
mov
push
and
leave
pop
into
sbb
mov
shll
lods
mov
cmp
push
fwait
mov
ds
mov
nop
jae
clc
out
ljmp
rorb
ja
aad
jnp
push
or
adc
movsb
pop
adc
xchg
lock
push
cmp
inc
sub
cmp
cmpsl
pusha
mov
stos
push
xchg
test
pop
repz
cmpsb
pop
jnp
fidivs
push
sub
add
jp
mov
dec
mov
mov
mov
mov
push
imul
mov
fisubrl
aaa
mov
inc
mov
or
movsl
insl
xor
stos
loopne
push
int
outsb
add
xor
mov
insl
fidivrl
shll
nop
push
cmpsb
mov
push
cmp
scas
outsb
pusha
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
in
push
push
or
adc
movlps
test
jge
xor
dec
mov
sarb
dec
jae
fnstenv
fwait
xor
imul
mov
ljmp
lcall
popf
arpl
cmp
aad
xchg
cmp
xor
jl
xor
mov
push
lea
mov
out
push
mov
jbe
lods
gs
mov
mov
and
mov
int3
push
jp
and
js
sbb
test
cld
cs
or
mov
ficomps
in
and
mov
push
or
sub
dec
mov
adc
mov
int
mov
mov
add
push
imul
and
jge
xchg
xchg
inc
adc
js
add
std
lea
jecxz
subl
mov
clc
jl
mov
repnz
inc
xchg
inc
mov
cld
pop
sti
mov
xor
jno
lods
loopne
mov
pop
daa
in
xor
stos
inc
inc
or
push
outsl
sub
in
aad
dec
popf
gs
xor
lds
cmpsb
add
aad
outsb
add
mov
fadd
add
pop
stc
int3
push
pop
repnz
cli
lahf
sbb
shll
mov
or
adc
mov
mulb
fnstsw
push
lea
int3
jno
or
out
call
std
test
sahf
jne
pop
push
lcall
dec
test
sahf
adc
push
test
mov
jmp
jbe
and
sti
out
rorb
pop
cmc
lret
push
inc
call
addr16
bnd
pop
adc
data16
nop
or
cmp
les
inc
cwtl
push
das
mov
cmp
shll
mov
dec
mov
adc
lods
dec
cmpsl
mov
leave
lods
lea
add
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
pop
mov
aam
shrb
popa
pop
fnstcw
pop
or
and
push
push
loopne
push
or
clc
xlat
mov
clc
rcrl
aam
jae
rol
das
mov
sahf
bound
sub
lods
stc
cmp
iret
test
or
and
sbb
ret
pusha
push
outsl
cli
flds
daa
xor
xchg
mov
mov
jns
jb
je
ds
fcomp
push
mov
adc
gs
jge
sarl
jbe
inc
mov
push
push
aad
lcall
scas
cmp
pop
cs
andnps
mov
ret
add
mov
mov
pop
lea
or
ds
cs
rclb
jecxz
inc
mov
test
scas
xchg
add
in
inc
fisttps
xchg
inc
fs
sub
jmp
fiaddl
mov
es
cli
push
and
mov
pop
cmp
sbb
popa
and
mov
jno
mov
stos
pushf
imul
pushf
inc
inc
sbb
jmp
xor
mov
dec
mov
jae
xchg
or
or
fs
and
stc
out
push
popa
hlt
ret
sbb
jle
ja
cmp
or
jbe
lds
cmovnp
push
sti
nop
xchg
mov
inc
sbb
rcll
sbb
mov
sbb
fmull
cmp
xlat
pushl
icebp
outsb
mov
pop
push
mov
or
gs
or
sub
add
cmp
insb
mov
adc
or
sbbl
mov
adc
cltd
scas
lcall
mov
push
jmp
testl
out
loop
sbb
rol
cmp
js
mov
dec
xchg
lcall
test
cs
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
testl
xchg
fdivs
arpl
ficompl
and
aaa
adc
in
jl
or
dec
dec
mov
mov
sbb
cwtl
ret
jno
insb
movsl
jae
jnp
adc
jp
ret
dec
fsubrl
mov
sti
cmc
inc
nop
mov
lds
push
nop
mov
in
stos
fwait
mov
mov
xor
mov
orb
or
out
in
cmpsb
mov
inc
into
cmp
stos
lret
lcall
or
xor
pop
mov
hlt
lahf
es
out
jb
add
ret
push
scas
mov
jb
enter
fs
dec
repz
lcall
jge
into
inc
mov
jb
adc
cwtl
ret
cwtl
aam
lds
push
test
ljmp
jg
mov
mov
and
mov
jg
ret
jne
inc
jno
jecxz
ss
lods
subl
pusha
in
out
dec
jbe
or
test
fadds
jb
imul
sbb
adc
popa
aaa
das
fimull
fldcw
sbb
mov
iret
or
push
sarb
and
ljmp
insb
inc
inc
sbb
repz
test
sub
ss
cmpsb
shl
xchg
push
lea
dec
cmp
ret
jle
cltd
add
xchg
add
mov
test
movl
sti
cmp
imul
movsl
fdivrl
rcl
popa
fsts
clc
add
in
mov
fldenv
mov
hlt
dec
xor
and
aam
lahf
pushf
es
int3
xchg
cltd
pop
push
sbb
nop
jnp
sbb
lret
movsl
mov
or
adc
xchg
fcmovb
add
rorb
dec
push
js
sarb
bound
add
xchg
push
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
jp
add
fmull
adc
iret
shlb
pop
les
cmpsb
adc
jnp
mov
test
jo
pushf
jp
in
xchg
push
cs
mov
ja
cld
push
out
xor
mov
sbb
add
call
cld
bound
add
mov
mov
ror
pop
inc
or
sub
fcomps
ljmp
arpl
fcomp
cltd
push
mov
pavgb
dec
sarl
jge
xchg
sbb
sub
sbbb
fs
add
mov
hlt
fs
and
popa
add
stc
mov
mov
dec
sbb
sub
sbb
popa
xchg
insl
xchg
pop
mov
mov
in
add
jb
sub
and
stos
jmp
cmp
sub
cld
icebp
pop
inc
loope
jmp
xchg
sub
fcmovnbe
imul
das
inc
cmp
push
fcomip
adc
test
push
cmp
and
and
add
xor
loop
inc
inc
sbb
jno
shl
fnstsw
outsl
mov
jp
sbb
dec
cli
repz
mov
sarb
mov
mov
hlt
movsl
aad
scas
loop
dec
xor
xchg
fsincos
pop
mov
enter
sbb
push
push
sub
insl
test
xor
push
xchg
mov
idivb
sub
sbb
aad
pop
mov
xor
ror
das
arpl
addl
js
and
and
jp
sbb
scas
adc
andb
js
lods
decb
outsb
jle
je
pop
pop
hlt
dec
pop
sub
adc
mov
pop
arpl
movsl
ja
mov
aas
push
call
dec
cwtl
idivl
push
cmp
mov
movsl
dec
pop
cmpsl
adc
popf
push
jne
cli
mov
lcall
or
fmul
dec
inc
ds
repnz
xchg
sub
stos
jp
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
or
mov
fmull
adc
adc
or
ficomps
lret
into
dec
daa
fisubrl
jnp
or
inc
ss
and
xor
fistpll
push
lods
mov
push
add
or
lcall
sub
cmp
ss
mov
mov
sub
cmpsb
rorl
lea
lods
xchg
push
push
xor
ss
adc
in
stos
aam
or
and
mov
cmp
jmp
fstpt
iret
mov
out
inc
xlat
jno
jbe
loop
ja
add
sub
inc
inc
lds
pop
cmp
test
adc
or
es
pop
fidivl
push
out
adc
sbb
cmp
and
jle
movsl
push
cmp
xchg
adc
xor
xchg
pushf
push
fwait
jp
push
aad
imul
xor
enter
adc
fs
push
lods
fs
or
jg
fimull
aas
mov
cmp
cmpsb
sbb
jnp
gs
dec
imul
sbb
mov
push
adc
jmp
js
outsl
jae
or
fstps
fistpl
call
leave
and
or
pop
cmp
add
pop
pusha
mov
in
je
cmc
pop
das
xor
mov
cld
adc
adc
loopne
adc
stos
out
pop
xchg
push
mov
fld
cmpsb
xlat
mov
ret
add
popf
dec
mov
adc
repz
daa
fisubl
add
out
das
lods
sub
cmp
addr16
pop
or
pop
mov
jne
mov
jle
jp
cmp
adc
nop
dec
ljmp
sti
int3
mov
ret
ja
ds
shll
cwtl
add
push
mov
jo
dec
pcmpgtw
dec
faddp
in
xchg
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
mov
notb
adc
movlps
sarb
fisubrs
mov
imul
fs
mov
cld
xchg
movsb
xchg
test
rcrb
fs
mov
mov
je
movb
rcl
fidivl
test
cwtl
shll
lahf
dec
aas
lods
cmpb
out
cmp
pushf
cs
lods
fcmovnb
cmp
cmc
repz
pop
sub
pop
push
das
sbb
in
push
hlt
push
lret
aad
mov
jp
dec
arpl
pop
push
pop
lds
and
scas
fildll
cmp
inc
shl
shrl
jnp
dec
cmpsl
dec
push
int
mov
jle
add
cmp
push
sub
shlb
adc
mov
adc
and
in
arpl
dec
and
popa
pusha
test
add
cmp
sub
pop
jbe
mov
dec
mov
leave
mov
shll
rorb
cld
sbb
mov
ret
int3
cwtl
mov
insl
mov
inc
xchg
jp
cli
push
jbe
push
outsl
inc
imul
jbe
shrb
push
aam
push
call
addl
dec
push
inc
jnp
je
mov
iret
lea
repnz
dec
jo
leave
sbb
cmp
pop
xor
aaa
cltd
jae
test
ror
arpl
xchg
pop
jg
fiadds
popf
push
push
outsl
xchg
jge
adc
mov
mov
xchg
xchg
add
test
inc
pop
mov
cltd
adc
inc
xor
pop
xor
push
sahf
mov
stc
mov
pusha
movsl
push
or
cmp
inc
xchg
cmp
jp
cmp
scas
push
shrl
add
mov
insl
shrl
pop
lahf
out
mov
mov
push
cs
cmp
mov
loop
loope
mov
movsl
push
pop
mov
adc
push
pop
pop
pop
mov
outsb
mov
push
ds
repnz
xchg
mov
jecxz
add
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
leave
popf
sbb
pop
jo
lret
loope
sub
leave
mov
push
pusha
adc
out
shl
xor
fsubrl
dec
push
fstp
xchg
mov
fwait
pop
xchg
popa
lcall
cmp
not
dec
and
mov
or
sub
sbb
ret
jp
adc
push
movsl
and
scas
sahf
loopne
add
popf
in
in
out
adc
jge
pop
clc
je
dec
int
and
pushf
out
xor
inc
sub
xor
pop
mov
xchg
and
repnz
dec
add
repnz
leave
push
or
jmp
cmpsl
or
dec
mov
or
sbb
sub
sbb
andl
adc
ret
cmp
mov
sbb
fsubr
sahf
out
rcll
incl
xchg
fbld
jnp
jl
int
and
in
leave
mov
adc
std
pop
adc
mov
jae
or
mov
or
imul
adcl
subl
xchg
hlt
andl
cmpsl
std
dec
inc
adc
imul
ret
ret
mov
adc
mov
add
and
cmpsb
cmpsb
fbstp
sub
cmp
pop
daa
mov
jecxz
xor
inc
mov
push
dec
mov
jns
or
std
push
ss
and
test
mov
scas
pop
xor
inc
nop
xchg
call
pushf
mov
cltd
repnz
ret
loop
pop
pusha
dec
mov
jmp
aaa
sbb
outsb
cmpsb
test
mul
cmpl
sub
and
cmp
sbb
rclb
adc
push
test
inc
lret
stos
mov
mov
popf
lret
fwait
and
lds
inc
aad
jmp
xchg
jne
loopne
out
dec
stos
sbb
fcmovnbe
lock
repnz
lds
aam
out
mov
int3
sbb
fcom
clc
dec
dec
jge
cmc
out
sub
pop
fldcw
add
xor
sub
xlat
arpl
lods
jae
loop
sbb
and
lret
pop
push
js
add
repz
out
cmp
mov
cmp
cmpsl
cmp
inc
xchg
and
fs
or
adc
or
lock
xor
scas
fildl
call
jns
mov
dec
cmc
insb
out
or
pushf
pop
cs
out
inc
push
xchg
std
xchg
mov
sub
or
lret
ret
dec
cwtl
enter
jne
xlat
sahf
popa
scas
loope
aaa
je
sub
cs
cs
jg
fcompl
popa
sti
sahf
mov
mov
clc
call
mov
lret
aad
mov
shll
adc
daa
movsl
into
arpl
in
xor
pop
mov
adc
cmp
aas
pop
jg
mov
jne
nop
add
out
call
das
fwait
cli
vpsraw
jge
xorl
jno
divl
rcrl
cmpsb
xsaveopt
inc
int
inc
aad
mov
sub
popa
ror
stos
int3
sbbb
adc
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
notb
mov
adc
jo
adc
lret
pop
cli
mulb
lea
push
inc
dec
addr16
test
inc
cmpsl
and
jns
sti
or
sub
add
push
test
and
push
inc
inc
lret
enter
hlt
int
jns
test
jae
inc
scas
xchg
mov
pop
push
jg
push
adc
pop
xchg
pop
mov
stc
mov
std
mov
mov
dec
fisttps
push
pop
xor
pop
inc
ljmp
sti
negl
fistps
dec
or
xor
out
popf
cli
shrl
movsb
scas
adc
out
jge
push
mov
punpcklwd
cmp
mov
push
add
das
mov
ss
ljmp
enter
imul
pushf
call
test
loopne
mov
cmp
sbb
add
sub
arpl
sbb
in
mov
lea
pop
mov
inc
jl
test
in
in
pop
jno
jg
shlb
mov
int3
sbb
add
jmp
hlt
jno
ljmp
mov
or
inc
or
mov
mov
jns
or
enter
push
loop
movb
out
insb
sbb
dec
cwtl
repnz
push
fsubrs
lea
sahf
sbb
mov
insl
std
rorb
cmp
cld
mov
pop
mov
leave
cmp
pusha
mov
xchg
pop
sub
js
sbb
xchg
add
mov
jbe
mov
adc
add
stos
ret
fsubr
test
jg
mov
sub
test
cmpsb
fwait
adc
or
adc
add
fs
pop
push
cmp
adc
repz
clc
push
push
cmp
in
arpl
lret
insb
sbbl
push
fdivrs
and
push
arpl
repnz
js
ret
mov
push
icebp
inc
cmp
loopne
enter
mov
sbb
push
nop
add
jecxz
icebp
lret
fsubr
inc
adc
mov
cmp
sbb
sarb
add
inc
push
daa
mov
fadds
inc
jl
jmp
les
xchg
inc
xchg
aaa
inc
and
mov
dec
inc
clc
push
mov
sub
mov
js
fmull
jo
push
arpl
imul
pop
cmp
or
push
mull
enter
push
adc
clc
inc
push
shlb
mov
dec
dec
clc
pop
fisttps
cmpsl
cmp
repnz
xor
fidivrl
test
mov
xchg
mov
mov
hlt
xchg
jg
hlt
lahf
xor
es
fdivs
jg
xchg
gs
mov
enter
cs
inc
add
decl
imul
sbb
or
imul
mov
cmp
sbb
push
xor
push
pusha
dec
fcmovnbe
int
mov
hlt
js
add
or
sub
aaa
adc
mov
insb
mov
fs
aas
jns
ljmp
add
pushf
std
sub
xchg
in
lods
jne
sbb
cmp
inc
clc
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
and
mov
jo
adc
out
sbb
call
pop
or
dec
adc
jno
out
and
aas
jg
jns
fldt
scas
daa
lahf
adc
addr16
enter
sbb
inc
push
add
lret
scas
pop
scas
jge
mov
mov
jle
mov
pop
pop
dec
add
lock
sti
xchg
xor
ja
adc
push
cmpsb
pop
push
gs
rcrl
mov
filds
mov
sti
and
das
add
out
adc
push
int
scas
loopne
pushf
stos
fadds
or
dec
mov
mov
push
sarb
mov
lret
jle
sbb
push
push
movsb
je
mov
test
mov
or
dec
mov
repnz
mov
repz
cmp
lods
ljmp
add
rcrl
mov
sbb
adc
cmp
imul
lret
jno
iret
repnz
pop
fcomip
xchg
lret
dec
pop
cmp
nop
mov
in
push
insb
stc
pop
jecxz
and
mov
outsl
aas
xor
mov
aas
push
sub
or
repz
into
int3
out
jl
sub
sbb
pop
inc
mov
push
out
ja
into
jnp
dec
jg
jne
ljmp
xlat
mov
subb
push
xor
movsl
mov
cwtl
xor
and
pop
push
xor
pop
pop
jns
pop
xchg
fldt
sbb
and
aas
lods
and
and
xchg
and
cmp
push
mov
push
sbb
bnd
popl
stos
fwait
mov
bound
push
lcall
push
jbe
xchg
sbb
pop
pop
dec
inc
sub
pop
stos
cli
ljmp
andb
jae
add
ret
push
mov
ffreep
push
sahf
fmul
push
xchg
movsl
push
gs
xchg
mov
mov
jne
push
adc
sub
xor
repz
lods
out
jle
xchg
pop
jl
dec
inc
repz
sbb
cmp
lret
jbe
mov
lock
push
dec
call
push
aam
divb
imul
imul
es
outsl
jne
cld
cmc
cmp
mov
hlt
pushf
pop
add
mov
sahf
mov
mov
les
jmp
sub
and
pop
gs
repz
jmp
lock
icebp
and
xor
rcrl
lcall
mov
pop
fmuls
je
sti
test
rcrb
lahf
push
cmpsb
adcb
frstor
jnp
cmpsl
notl
mov
mov
lds
das
push
jnp
pushf
cmp
mov
dec
das
imul
inc
pop
xchg
out
or
adc
cwtl
js
shrl
into
and
lret
add
dec
sarl
ljmp
rcll
into
jmp
inc
leave
fdiv
movsb
jmp
mov
ret
sub
les
fldl
jne
cltd
ret
push
mov
add
movsl
subl
jecxz
dec
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
cli
out
stos
inc
fstl
adc
adc
das
rcrl
leave
ds
cs
fcompl
push
lods
mov
pusha
dec
add
inc
xor
sub
stc
cltd
cmp
sahf
sbb
xor
pop
xchg
jae
jecxz
xor
mov
lea
inc
or
sbb
mov
pop
mov
sub
addb
pusha
out
aas
les
jg
int3
mov
inc
push
xor
adcb
mov
loope
ret
push
shr
pushf
mov
push
sub
or
push
mov
xchg
test
mov
cs
xor
push
and
sbb
add
sub
mov
negb
mov
and
adc
mov
push
mov
icebp
ss
push
and
fstpt
or
sub
mov
push
adc
push
dec
xor
mov
mov
cmp
xchg
cltd
rcrb
clc
jge
sbb
mov
mov
mov
cmovb
pop
loopne
int
push
cmp
fcoms
xchg
sbb
sarb
push
lret
les
push
fildll
jl
loopne
lods
js
stc
adc
mov
pop
repnz
popa
sahf
pushf
test
test
jns
cmp
add
pop
or
mov
popf
pushf
push
shl
mov
testb
xchg
ret
bound
pop
add
shlb
xchg
loope
je
nop
in
inc
push
mov
add
add
cmc
fwait
js
xchg
jb
cltd
jge
je
jg
pop
pop
cld
sbb
shll
adc
lods
cmp
scas
xor
sbb
aam
rcll
cs
clc
repz
jae
flds
minps
jno
and
jmp
push
inc
add
adc
xor
pop
call
adcb
inc
cmp
and
dec
jl
daa
stc
xchg
cmovp
lret
xchg
cli
or
icebp
in
sub
pop
movsb
imul
nop
sti
cwtl
mov
pop
mov
out
lods
jo
fdiv
stos
xchg
pop
jo
push
ffree
lock
fdiv
sbb
test
lock
jl
loop
hlt
inc
xchg
sbb
dec
fdivrs
or
outsl
ret
dec
cld
cld
dec
adc
ret
insb
imul
repnz
push
sbb
out
xor
js,pt
xchg
xor
sahf
dec
outsl
ja
sti
dec
daa
adc
cli
lods
and
std
or
cmp
sub
mov
enter
mov
inc
fimuls
jo
inc
sub
test
and
mov
dec
test
sub
xor
in
mov
mov
repz
mov
and
scas
add
push
mov
sti
icebp
std
jp
rorb
pop
out
or
fcomps
and
movsl
icebp
or
sbb
inc
sub
xor
jae
aaa
fnstcw
inc
adc
mov
cmp
movsl
dec
cmp
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
pop
test
adc
jo
adc
aaa
xchg
mov
cmpsl
shlb
sbb
xor
stos
imul
mov
mov
adcb
cmp
sti
xor
adc
mov
adc
in
pop
fbld
cmp
int
pop
pop
cwtd
jle
gs
push
xchg
sub
inc
mov
fcomps
or
sbb
inc
sub
inc
xchg
mov
in
adc
dec
pop
mov
fistpll
xchg
or
xor
aad
call
fwait
mov
aam
subb
movsb
xchg
xchg
add
push
mov
cmp
insl
outsl
inc
pop
icebp
xchg
arpl
xchg
adc
mov
sub
orl
xor
cmpl
push
fdivrs
mov
popa
adcb
mov
in
les
in
inc
ss
mov
and
sbb
cltd
in
bound
fucomi
push
ljmp
icebp
jb
mov
push
sub
inc
lahf
xchg
jp
out
xchg
xor
mov
out
mov
popa
jo,pt
cmp
push
mov
xor
imul
filds
in
sbb
mov
jle
or
cmp
loope
push
pop
xor
cmp
jp
pop
jbe
dec
sbb
sub
in
push
jb
cmc
sub
cmp
sbb
lahf
xor
pop
jo
and
test
and
mov
and
sub
push
in
jg
movsb
outsb
lds
bound
push
mov
sbb
inc
cmpsl
mov
adc
and
xor
pop
sahf
sbb
pop
clc
pop
leave
sbb
ja
mov
fwait
mov
mov
xchg
add
aaa
cmp
inc
dec
push
cld
and
push
push
jo
xor
pop
data16
ja
bound
nop
mov
into
xchg
mov
mov
add
push
shrl
cmp
cmc
stos
insl
xor
imul
mov
sarb
pop
sbb
xorb
lods
test
les
push
jecxz
pop
adc
lods
out
push
adc
stos
mov
enter
call
fld
cmp
and
in
push
mov
shl
sbb
outsl
sahf
lret
or
inc
xor
lret
dec
adc
out
or
daa
pop
je
cs
hlt
cmp
cmpsl
nop
mov
aad
outsl
test
and
popf
xor
fst
fs
and
xchg
inc
repz
insl
lcall
jle
or
cmp
arpl
adc
pop
xor
andl
in
sbb
push
dec
rcl
pop
subb
add
push
mov
adc
mov
xchg
mov
popa
in
into
outsb
push
pop
pop
test
aad
xor
jl
scas
test
sub
popf
sbb
hlt
sar
mov
jg
sbb
psubb
push
inc
mov
inc
and
or
or
repz
enter
sbb
sbb
faddl
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
insl
xchg
pop
mov
jo
adc
jg
cmp
maskmovq
imul
les
jae
imul
aad
xor
shl
xor
mov
mov
pop
sbb
fidivl
mov
out
mov
mov
or
inc
hlt
inc
cld
sub
idivb
sbb
outsl
mov
sbb
sbb
out
adc
addr16
pushf
sbb
jmp
hlt
add
js
aaa
in
lret
imul
push
xor
in
or
sbb
pop
ljmp
aaa
fcoms
jnp
out
push
push
cmp
inc
mov
xor
imul
popf
xchg
or
cmc
or
stos
or
mov
pushf
sbb
xchg
aaa
rclb
stos
jo
sub
rcl
sti
inc
repnz
dec
rcrb
lds
testb
sbb
stc
lods
cmp
push
fsubp
shl
xlat
mov
push
jge
mov
or
sbb
loop
jg
or
daa
add
lds
inc
mov
add
cmp
push
xchg
mov
in
jne
and
sbbl
hlt
push
xchg
or
or
das
into
ficompl
xchg
pop
ljmp
aas
gs
loop
lock
jo
and
mov
mov
xlat
les
lods
subl
ja
cs
push
out
adc
inc
cltd
fidivrs
gs
inc
sbb
mov
pop
je
mov
jns
arpl
and
adc
inc
sub
stos
cmp
push
jecxz
push
daa
mov
jb
nop
jecxz
sub
pmuludq
mov
push
sub
adc
add
mov
mov
xchg
test
pop
insl
add
or
pop
mov
lfs
testl
mov
inc
ret
cmp
shlb
inc
inc
adc
inc
fs
shl
subl
inc
call
imul
sbb
aad
inc
divps
out
inc
inc
fsubrl
mov
sbbl
cltd
mov
and
cmp
sub
cltd
or
jno
int
xor
sti
jbe
iret
adc
dec
push
clc
push
mov
aas
sub
or
insb
jecxz
lods
cmpsb
pusha
pop
mov
mov
xchg
sbbl
xchg
arpl
leave
xchg
xchg
cmp
fdivl
dec
push
sahf
mov
js
mov
fidivs
add
sbb
shrb
push
ret
pop
jge
imul
stc
pop
add
in
dec
in
gs
addl
ds
psubsb
jne
scas
movsb
mov
mov
out
fsubrp
mov
mov
test
mov
ds
mov
pusha
movsb
or
roll
add
lods
cmp
pushf
loopne
jbe
insb
out
xor
cmp
hlt
adcl
jl
dec
jne
bound
adc
mov
fcompl
adc
mov
repz
data16
mov
and
pop
les
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
jp
mov
push
mov
loope
stos
pop
out
jb
or
push
loopne
push
push
ja
insl
sbb
xor
enter
fwait
aam
adc
fucomp
sbb
outsl
mov
pop
pop
sbb
cwtl
inc
repnz
lcall
loopne
out
negl
jno
repz
add
rcl
gs
jae
xchg
add
pop
xor
fisttps
pop
cmpsl
xchg
out
jns
shlb
clc
sub
dec
inc
adc
shl
xor
out
mov
in
xchg
xchg
sahf
rcr
in
jnp
pop
lds
xchg
mov
or
mov
inc
xor
mov
repz
in
loopne
shll
icebp
mov
and
out
mov
add
nop
iret
cmp
aam
push
imul
mul
cmp
cmp
adc
test
adc
add
xor
shrl
cmp
aas
pop
gs
sbb
cltd
push
mov
mov
jmp
mov
mov
shll
pop
or
dec
inc
push
sub
aaa
idivl
cmpsb
lcall
or
mov
xchg
lock
jmp
push
push
mov
out
mov
js
cmp
cmpsl
add
xor
jg
pop
mov
and
xor
jno
or
jne,pt
add
mov
dec
stc
xchg
dec
sbb
or
fildl
xchg
out
repnz
sub
cmc
dec
jae
loopne
jne
adc
ljmp
fwait
add
xchg
popf
cwtl
inc
rorl
inc
add
lods
daa
aam
sbb
jle
xor
scas
icebp
nop
cs
clc
or
mov
fcmove
jno
arpl
inc
mov
mov
xlat
mov
arpl
jmp
int
stos
test
int3
repnz
loopne
pop
loopne
xchg
divb
and
xchg
loope
push
lds
fs
jns
pop
mov
xchg
rcrb
sahf
roll
call
dec
test
dec
aaa
jnp
jmp
mov
mov
icebp
inc
aas
stos
or
lds
adc
les
ljmp
dec
popa
jmp
fisttpl
and
into
or
push
push
iret
or
fldl
sbb
lahf
mov
and
insb
pop
inc
sarl
jmp
jl
add
pop
sbb
insb
imull
sub
xor
add
or
cmp
cmp
out
or
pop
inc
xchg
ds
and
xchg
sti
lahf
sub
scas
sbb
fistps
leave
jae
mov
mov
cmpsb
jb
pop
fidivrl
insb
mov
xor
sub
add
lahf
mov
cmp
xchg
in
sbb
xchg
lcall
aam
xchg
call
cmpsb
fcomps
call
sbb
mov
push
scas
cltd
push
rol
js
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
stos
xor
jle
rcll
jo
adc
xchg
pop
int
mov
mov
cltd
inc
or
fcomps
xchg
lods
popa
xchg
movl
dec
sbb
ficomps
add
insl
mov
pop
add
js
sbb
adc
outsl
cmp
or
test
or
mov
jle
fnsave
push
decl
dec
cmp
cmp
or
imul
cmpsb
stc
mov
or
test
jl
mov
scas
cmpsl
mov
push
fistpll
jae
mov
pop
sub
bound
ret
nop
adc
xlat
subb
test
jl
jg
push
mov
bound
es
sub
push
mov
push
mov
das
dec
pop
xchg
xchg
inc
in
lods
iret
fnsave
sub
mov
out
repnz
cmc
insb
into
cmp
push
jle
push
and
cmpsl
das
jb
out
loope
fldenv
inc
inc
jae
xchg
sti
mov
ljmp
xor
sub
popl
pop
icebp
mov
insl
mov
stos
adc
les
and
mov
xor
sub
inc
stos
rclb
sbbl
sub
mov
push
xchg
and
mov
push
push
dec
inc
adc
mov
inc
cs
movhps
mov
movsb
dec
pop
pop
enter
cltd
add
fcmove
mov
mov
movsb
call
imul
cwtl
inc
call
jnp
pop
push
shrl
add
push
filds
sub
or
jle
push
fisttpl
outsl
pop
mov
aas
adc
outsb
adc
loope
cmpsl
adc
in
pop
add
jp,pt
leave
insl
stos
xchg
mov
dec
push
pop
aaa
jo
cmp
mov
mov
ss
mov
xchg
leave
adc
sbb
jnp
fisubs
push
popa
cli
orl
xor
sbbl
cmp
cmpsl
lahf
mov
outsb
jle
scas
push
sbb
pop
icebp
xchg
mov
push
loop
mov
insl
or
in
xchg
fbld
fsubrs
bound
mov
push
call
mov
add
shr
or
dec
mov
shr
imul
fsubr
jmp
je
fidivs
imull
jge
adc
or
mov
sub
adc
fwait
loop
or
jge
test
fdivp
xor
inc
lcall
std
xchg
les
fsubl
pop
ja
pop
push
stc
mov
xchg
pop
pop
scas
mov
fiaddl
test
gs
xor
sti
std
fwait
out
xchg
xchg
test
add
sbbb
push
inc
push
xchg
and
fisttps
inc
cld
mov
fsts
sub
mov
pop
dec
push
pop
jl
lcall
stos
pop
dec
test
scas
in
add
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
push
mov
adc
adc
xchg
test
jge
in
cmp
negb
cmpsb
ljmp
push
repnz
jne
pop
add
adc
aas
test
xchg
ds
loope
ret
clc
xor
or
lods
ror
sub
and
dec
sbbb
filds
dec
shll
cwtl
outsl
jb
dec
push
mov
loopne
pusha
loop
adc
jbe,pn
shl
add
push
sbb
push
add
test
jge
or
repnz
scas
fdivp
in
cs
dec
insb
lahf
mov
xchg
sub
and
shll
mov
add
sbb
push
out
inc
icebp
popa
xor
push
lahf
inc
cmp
shr
xchg
xor
mov
cwtl
sub
push
cltd
lock
testb
ja
loop
loope
stc
scas
xor
test
aaa
lcall
add
fisubs
lods
sarl
jbe
cmp
in
rcll
jb
sub
and
nop
out
add
iret
stos
mov
das
std
jl
xchg
ds
popa
inc
bswap
add
push
sub
sub
push
mov
jno
pop
lret
push
push
cld
je
mov
filds
stos
pop
cmp
mov
xor
pop
inc
test
outsb
imul
mov
mov
cmp
leave
dec
iret
sbb
inc
mov
push
dec
xor
and
cld
push
pushf
mov
test
mov
jmp
call
jg,pn
mov
repz
lods
je
add
subb
mov
mov
dec
mov
lcall
adc
cs
xor
mov
ljmp
fcom
ss
mov
pop
outsl
mov
pop
movsb
dec
xor
int
push
dec
aas
xorl
sbb
insl
aaa
sub
cmp
inc
push
mov
mov
jge
das
mov
mov
pop
add
push
lahf
aad
stos
pop
in
jmp
inc
jmp
fpatan
sub
dec
mov
cmc
dec
add
mov
mul
js,pt
stos
add
mov
cli
lcall
mov
cmp
aaa
arpl
cmpsl
lret
loop
inc
push
dec
clc
push
and
jb
dec
or
mov
popf
add
out
inc
aas
pop
jb
mov
add
call
inc
and
clc
daa
jg
inc
outsb
xor
xor
add
popa
mov
xor
je
dec
insl
pop
roll
loop
lahf
shll
sub
js
ss
repnz
mov
add
lods
sarb
bound
lds
sub
rclb
lods
negb
test
scas
rcrl
cmc
cmpsb
push
lret
jle
dec
out
jmp
adc
aam
ror
pushf
xor
cmpsb
and
jl
pop
xor
out
cmp
daa
lcall
cs
push
divl
dec
scas
int
das
fldenv
fistpll
sahf
jle
lret
sbb
add
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
mov
jae
xor
outsl
sbb
jno
adc
push
mov
adc
clc
pop
xorb
inc
fldt
jg
xor
lods
pop
sarl
mov
mov
push
cmp
cmp
jbe
dec
jmp
cmp
cld
aad
xchg
push
aas
fwait
jge
jae
mov
pushw
or
xchg
movd
dec
pop
das
ret
gs
int
aas
pushf
lds
sar
out
in
jb
push
and
sub
into
or
les
adc
inc
shrd
test
test
pop
xlat
xchg
je
out
loop
or
test
xchg
cmp
or
push
dec
outsb
pop
push
ss
jmp
std
mov
insl
test
jl
pop
daa
bound
je
dec
fwait
jne
inc
outsl
rorb
mov
divb
mov
xlat
idiv
pop
pop
cmpsb
ss
inc
xchg
jno
mov
fists
mov
jp
nop
dec
dec
bound
jnp
pusha
aas
lock
pop
push
push
les
cmp
jno
pop
stos
add
nop
mov
inc
aam
jmp
adc
daa
rcll
cwtl
and
in
bsr
es
dec
test
aam
sbb
add
rolb
xchg
mov
mov
jns
inc
dec
gs
imul
repnz
inc
or
and
jbe
out
das
mov
pop
sbb
mov
sub
pop
ja
movb
xchg
dec
mov
in
push
pop
repnz
sub
or
xchg
rcrb
mov
stos
jnp
aaa
aaa
jl
xchg
jmp
or
xchg
mov
pop
mull
sub
mov
aaa
dec
sbb
inc
fcoml
mov
pop
fidivrl
test
mov
jo
popf
xor
arpl
xor
nop
jg
ja
outsl
aad
dec
and
lcall
mov
mov
mov
aaa
call
out
add
jne
fisttpll
mov
jecxz
or
fs
in
mov
shlb
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
mov
stos
movlps
cmp
cs
mov
js
jbe
ficoms
dec
sub
adc
into
push
add
int3
cmpsb
dec
js
mov
inc
popa
ret
jb
out
sbb
pop
or
popf
push
cltd
bound
insl
das
in
in
add
sub
and
pop
inc
lret
xchg
inc
popa
je
decb
xor
xchg
mov
jecxz
jg
mov
mov
in
xor
fs
inc
mov
call
insl
sbb
add
sbb
int
jb
cmp
mov
mov
and
in
sub
mov
mov
std
clc
lods
ja
mov
inc
mov
sub
bound
mov
push
jmp
stc
cld
push
mov
lret
jo
push
aas
movsl
or
push
pop
push
mov
mov
pushf
mov
and
mov
in
jbe
stc
inc
js
and
movsb
adcl
ret
lods
mov
mov
mov
gs
fsubrs
cmp
aas
inc
inc
xchg
test
loope
or
repz
idivb
mov
jae
hlt
xorl
mov
cmpsb
fcompl
jle
icebp
add
cmp
add
xchg
xlat
lret
mov
lods
mov
dec
pop
leave
push
adc
or
movsb
dec
outsb
imul
in
movsb
jnp
bnd
fsin
add
sub
sub
and
dec
mov
stos
and
pop
fadds
inc
xchg
pushf
xchg
jmp
adc
shl
lea
aas
xor
push
sbb
push
cmp
mov
daa
faddl
insl
inc
shrb
xchg
mov
subl
sti
inc
mov
ret
es
lahf
inc
lods
pusha
je
shl
add
das
mov
add
adc
jae
mov
sbb
popa
rcr
jge
roll
xchg
sub
sbb
mov
xor
sub
push
inc
jnp
scas
out
jne
ds
pop
mov
cmp
xchg
sbb
loope
fcompl
add
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
ret
jl
mov
adc
mov
mov
add
les
and
dec
jae
scas
xor
sub
in
cmp
jb
dec
lock
mov
lods
push
stos
movsb
popa
and
dec
jle
xchg
adc
stos
inc
cwtl
call
dec
sbb
mov
xchg
roll
pop
iret
cmp
add
ss
in
and
xor
lods
nop
mov
je
sbb
aad
dec
aaa
add
push
ja
push
fmull
sbb
arpl
test
ja
or
mov
repz
aas
jo
ljmp
mov
mov
pop
or
or
loopne
fwait
loopne
test
jb
cmp
jne
out
fabs
mov
push
cld
mov
mov
jnp
aaa
push
mov
out
xchg
add
push
cld
push
sahf
ja
test
dec
es
pop
movsl
jne
dec
je
in
rcl
jl
xor
enter
aam
sbb
xlat
and
mov
sbb
mov
aad
jecxz
std
insb
xor
mov
sbb
or
loope
xor
sahf
mov
adc
cmp
psrad
popa
cltd
notl
xchg
clc
in
inc
into
add
mov
dec
ss
mov
add
mov
comiss
xor
jge
and
adc
add
xor
or
mov
sarb
into
loop
mov
out
aas
mov
cmp
xor
test
xchg
icebp
mov
bound
cs
andl
add
nop
push
fmuls
mov
incl
adc
lea
test
jns
lea
int
inc
ret
popf
cs
xlat
sbb
sub
loopne
jae
outsl
fildll
out
repz
js
fnsave
notb
arpl
nop
ss
cwtl
cmp
mov
xchg
xor
fdivs
mov
cmc
xorb
js
jl
inc
pop
mov
push
fildll
cmp
lods
sub
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
sahf
shlb
push
mov
adc
inc
out
fcoms
mov
shll
in
jmp
pop
pop
jae
inc
cmp
inc
pop
adc
lret
popf
xchg
jg
or
scas
lods
mov
sahf
faddl
and
scas
das
pop
jnp
outsb
lret
insl
aam
pop
mov
lahf
cwtl
adc
das
and
sbb
push
stc
inc
mov
xor
faddl
mov
push
cltd
mov
lds
dec
xor
repz
pop
and
out
je
out
pushf
je
in
jg
cmpsb
lahf
idivb
xchg
sub
jne
jp
shll
lods
scas
add
movsl
mov
repnz
inc
fidivrs
call
dec
mov
mov
ja
sub
push
call
stc
movl
push
rdpmc
jg
popa
repnz
testl
fnstsw
imul
fistpl
xchg
jmp
fiadds
hlt
icebp
leave
cmp
shl
push
sbb
add
mov
gs
inc
lret
pop
loope
or
mov
jg
ja
scas
dec
pop
out
pop
les
sub
jns
lea
mov
cs
xlat
sub
cmp
xlat
pop
cmc
loop
sbb
dec
rorl
jns
xor
in
mov
cmp
sbb
cmpsb
push
lea
fldenv
add
dec
cmpsl
and
push
push
repz
jnp
lcall
loop
nopl
jo
aas
daa
test
mov
mov
dec
xor
push
scas
sbb
loopne
cltd
or
mov
cs
shrb
mov
sub
imul
movsl
sbb
pop
aaa
dec
js
outsb
xor
scas
dec
or
fisubrl
or
dec
dec
ror
insl
or
sbb
jle
dec
insb
stc
mov
sbb
mov
push
push
ljmp
aas
aas
xor
mov
jl
sub
in
fsubs
dec
cmp
and
pop
lret
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
lods
sti
test
stos
movlps
cmpb
xchg
mov
pop
push
inc
sub
xchg
push
cld
aam
mov
sbb
lods
std
add
push
in
call
cmpsl
pop
adc
jnp
iret
jnp
mov
ret
xor
sbb
jmp
loopne
and
es
movsb
insl
push
jmp
mov
xor
movsl
inc
xchg
adcl
fists
ret
ljmp
jno
in
cmp
pop
jo
sbb
rol
popf
sbb
xadd
xchg
imul
dec
lods
mov
mov
dec
or
in
adcl
out
sub
pushl
divl
test
inc
lods
pop
xchg
xchg
scas
data16
xchg
sbb
dec
fdivrs
jmp
sub
xor
test
rorl
in
jns
lret
mov
xchg
jnp
xchg
ds
pop
fmull
jns
iret
mov
mov
adc
push
jl
pop
xor
adc
cmp
mov
cmp
cli
aas
dec
push
aam
fisttpl
jno
cmc
push
jg
and
sub
aas
clc
sbb
int3
pop
fwait
orl
hlt
jg
adc
sub
addl
xchg
pop
arpl
push
add
cmp
push
enter
enter
mov
lret
sbb
lret
sbb
jl
cmp
movsb
cmp
xor
jae
popf
xchg
mov
xchg
xchg
cs
xchg
repz
mov
and
enter
jae
aam
xchg
inc
push
add
outsb
mov
imul
jns
and
lret
imul
push
inc
cs
dec
cmc
loop
mov
mov
iret
xchg
or
and
jecxz
pop
and
mov
enter
add
popa
mov
repz
shrd
insb
out
movsb
std
shrb
dec
adc
xchg
xchg
xchg
es
stos
fisttpll
dec
mov
push
fdivrl
jo
in
test
inc
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
or
std
dec
add
and
sub
inc
fcomps
mov
pusha
or
push
dec
cmp
repz
cmp
andb
sub
dec
sub
inc
xor
sahf
sbb
fiadds
fiadds
cwtl
or
pop
es
nop
push
xchg
gs
or
leave
jmp
pop
or
or
addr16
mov
test
lock
fwait
or
in
fcoms
xchg
iret
inc
mov
lock
js
push
adc
xor
pop
lret
clc
rdpmc
movsl
movsl
and
das
sub
sub
clc
xchg
lahf
pop
and
push
stos
mov
mov
cmpsl
push
sbbl
stc
and
fnstsw
dec
push
push
mov
inc
xor
jecxz
sbb
mov
add
push
dec
enter
ret
dec
hlt
mov
fs
pop
shlb
mov
xchg
aas
push
and
jg
pextrw
sbb
repnz
rcrl
bound
pop
rolb
push
mov
into
inc
cmc
pop
sub
push
add
mov
mov
inc
jne
xchg
pop
adc
aaa
stc
rcll
push
xchg
inc
bnd
sub
rorl
mov
inc
sahf
cmp
in
jecxz
cmp
dec
xchg
and
push
and
cmp
outsl
imul
ss
mov
hlt
aas
jns
xchg
pop
mov
pushf
rclb
inc
sub
data16
jb
sbb
lret
cmp
push
mov
mov
jp
mov
jmp
push
push
imul
xchg
sbb
in
out
sub
fmulp
insb
int
pop
out
mov
subl
push
jo
push
jo
imul
fcmove
push
push
push
sbb
pop
sarl
lods
arpl
filds
adc
sub
and
dec
test
xor
dec
movsb
fs
pop
int3
mov
and
lds
jecxz
push
adc
ss
mov
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
lcall
mov
inc
or
imul
mov
ret
mov
pop
pop
call
insl
or
sbb
inc
stos
mov
imul
js
mov
push
push
leave
dec
sbb
test
mov
jmp
dec
lcall
pop
inc
mov
idivl
cmpsb
test
movsb
movsl
xorl
mov
sub
mov
mov
aaa
push
or
daa
out
cmp
adc
fsts
fisttpl
hlt
leave
inc
pop
push
cwtl
push
pop
daa
aas
push
sbb
enter
lock
pop
mov
jge
daa
mov
vmaxsd
negb
mov
sub
cmc
add
pushl
jmp
pop
cwtl
fwait
lcall
add
leave
cmp
nop
or
add
imul
sbb
aas
jbe
fmuls
and
ljmp
pop
sbb
cmp
jns
stos
leave
push
aad
jle
test
pop
jl
outsb
faddl
xor
test
mov
or
int3
mov
dec
ss
pop
daa
push
xchg
pop
stos
ror
mov
jecxz
js
fisubs
test
test
icebp
cs
pop
fwait
inc
scas
pop
mov
out
or
dec
xchg
stos
jp
in
pop
xchg
jo
int3
loope
fs
ret
and
mov
jb
pop
dec
imul
ljmp
mov
rcr
sbb
mov
sub
or
scas
dec
icebp
pop
das
lock
ljmp
xchg
sub
mov
sti
lret
inc
jo
pop
xor
push
and
ja
jbe
iret
add
pop
gs
ljmp
movsl
pop
inc
repnz
pop
nop
pop
cmp
mov
lahf
insb
lods
jg
push
xchg
dec
repz
or
jne
inc
jb
loopne
xor
xor
aaa
into
sahf
imull
ds
mov
sbb
adc
push
push
mov
pop
cmpsb
jne
add
inc
cld
push
mov
dec
nop
mov
sub
or
and
mov
add
cli
mov
outsb
dec
mov
sub
rclb
xor
add
stos
pop
sbb
fistl
clc
repnz
cltd
js
movups
das
sub
flds
stos
mov
mull
pop
lcall
xchg
sub
fnstsw
jne
rcll
mov
jnp
jp
sbb
shl
push
and
test
imull
push
js
iret
sub
jbe
leave
mov
pop
in
mov
jo
je
popf
cwtl
xorb
dec
xlat
je
stc
and
in
push
outsb
xorb
addr16
pop
mov
test
repz
test
stos
enter
inc
xchg
scas
cld
and
jge
sbb
sub
andl
push
fsubrp
aam
ss
je
cmp
aad
mov
scas
mov
daa
out
pop
es
lock
mov
lods
pop
xor
stos
fwait
jne
out
fucomip
insl
aad
and
xor
int
out
js
outsb
outsl
pop
adc
daa
in
insb
push
subb
cmpl
lods
push
fisubrs
pop
jne
adc
inc
aad
mov
sub
xor
push
inc
mov
int3
inc
fwait
or
mov
jecxz
adc
out
aaa
cbtw
repnz
lahf
pop
imul
jno
enter
xor
pushf
jg
jns
mov
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
fwait
dec
mov
pop
adc
adc
cmp
pushf
xchg
ror
punpckldq
lea
or
inc
xlat
mov
and
stc
add
ret
test
dec
test
test
add
mov
adc
fdivp
or
ss
bound
jg
mov
sbb
pop
aas
jno
add
mov
repnz
loop
pushf
test
js
and
in
xchg
sbb
adc
out
and
fcompl
cmp
cld
testl
ficompl
push
xchg
mov
pop
fstps
pop
push
cmp
mov
ds
push
mov
nop
sub
loope
lods
push
mov
cmpsb
fcmovnb
or
jmp
mov
cli
sbb
cmc
mov
adc
cmp
loopne
in
jo
pop
in
xchg
sub
push
scas
xorb
repnz
dec
test
fwait
scas
movsb
xchg
ds
mov
out
mov
mov
daa
shl
clc
adc
cmp
mov
and
cmp
pusha
pushf
cmp
test
jle
or
das
dec
inc
insl
add
int3
xchg
mov
push
mov
xor
fwait
mov
pop
pop
jb
ret
dec
dec
and
bound
and
test
cmp
xor
fsub
lcall
adc
cmp
nop
lret
int3
inc
adc
cmpsl
sbb
mov
xchg
lock
fs
mov
push
in
pop
inc
push
and
fistps
xchg
int3
push
sbbb
aad
mov
mov
mov
rcll
test
lds
ret
mov
cwtl
push
mov
in
out
mov
dec
mov
xchg
push
arpl
sahf
xchg
aas
push
adc
sbb
pop
jg
lds
mov
inc
jns
add
arpl
mov
adc
or
pop
leave
inc
sub
pop
push
mov
shr
push
push
add
mov
xchg
jae
xor
sbb
iret
fnstsw
and
or
inc
cmp
jecxz
jnp
stos
push
ljmp
fucom
shlb
add
sbb
cmp
push
ret
push
fs
jge
xlat
lea
lods
mov
cltd
add
mov
out
mov
hlt
mov
mov
xchg
pop
loopne
mov
push
or
xchg
jge
sti
cli
test
sbb
inc
cmp
xchg
xlat
xchg
cmp
ja
loopne
or
push
movsl
and
jmp
jae
loope
inc
sub
stos
add
std
dec
adc
xchg
sub
pop
sub
inc
xchg
daa
or
sbb
gs
xchg
adc
js
ss
inc
enter
pop
lret
out
ja
test
adc
out
pop
loope
ds
in
int3
mov
push
jg
dec
aam
mov
inc
shlb
rcl
cmp
out
or
inc
xor
sub
xor
cld
es
pop
pop
dec
cmpl
pop
ljmp
mov
xchg
and
mov
or
fxtract
push
mov
xchg
lock
ljmp
pop
jae
nop
xor
adc
pop
jae
mov
jne
sub
enter
rorb
ljmp
sahf
sub
outsl
into
aas
dec
and
sub
cltd
xchg
mov
jb
mov
out
hlt
push
or
test
mov
pop
aad
das
dec
fld
dec
repnz
inc
sti
insb
pop
scas
fs
pop
inc
lcall
lods
dec
jge
pop
pop
xchg
jg
test
loop
inc
std
jl
sbb
es
aad
and
bound
push
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
cmp
adc
and
adc
rorb
loope
test
test
mov
inc
and
mov
and
pop
cld
mov
pusha
pop
dec
adc
cld
pop
inc
adc
pop
push
enter
add
aad
add
jae
sbb
dec
mov
push
sbb
data16
mov
test
inc
or
add
fbld
xor
push
outsl
sahf
jbe
callw
insb
mov
jno
lcall
out
jp
into
sbb
cmp
outsb
pop
sub
dec
pushf
rcr
cmpsb
in
loope
mov
out
push
out
jae
push
push
and
and
push
int
jo
fstps
test
cmp
std
pop
ret
int3
lcall
or
pop
xchg
dec
xchg
pushf
cmp
xor
pop
push
cmp
push
xchg
loop
xchg
dec
xlat
test
jge
sti
xlat
adc
mov
dec
and
cmp
pusha
fisubrl
aaa
mov
sbb
jnp
push
jp
in
sarb
pop
sub
popf
in
mov
lahf
hlt
adc
clc
xchg
lock
or
shlb
je
cmpsb
add
stc
push
xor
fwait
in
mov
gs
mov
or
xchg
pop
pop
in
out
mov
pop
sbb
push
enter
sub
popa
dec
add
test
fisttps
in
pop
sahf
fbld
xor
and
pusha
flds
popf
fcmove
dec
fnsave
sbb
fdivrp
fmuls
scas
jl
leave
push
test
lock
ret
adc
subl
mov
mov
push
mov
pusha
sub
or
add
mov
sbb
jns
inc
les
mov
ljmp
fdivr
ret
pushl
enter
dec
lods
fmull
xor
xor
push
mov
pop
int3
mov
fwait
in
add
cmp
daa
pop
pop
into
jbe
ret
inc
sbb
mov
in
adc
notb
lods
ds
push
jge
mov
pop
loopne
xchg
movsl
xchg
daa
lds
cs
push
stos
sbb
mov
jno
fstpt
leave
xorb
popf
lock
ret
shrl
adc
stos
je
xor
xor
mov
add
aaa
outsl
mov
inc
xchg
adc
js
xchg
jge
mov
lret
jno
push
mov
or
dec
or
mov
ret
imul
sti
mov
dec
push
div
or
in
push
adc
sub
inc
add
test
xor
stos
popa
and
mov
ds
xchg
imul
aaa
mov
cwtl
jge
mov
or
or
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
push
sub
jmp
sub
scas
xor
fldcw
mov
cmp
mov
sarl
lcall
sbb
das
clc
xchg
shlb
inc
dec
jg
roll
scas
dec
cmp
orl
popf
inc
sub
adc
cmpsb
or
lods
mov
mul
pop
jp
fsubp
push
push
cmpsb
imul
in
sbb
je
aaa
mov
pop
push
je
inc
pop
in
mov
pop
int3
mov
mov
lcall
jecxz
mov
ds
dec
xor
cli
inc
decb
pop
xchg
mov
clc
cwtl
movb
cmp
cmc
adc
das
lret
pop
jno
push
imulb
xor
push
cld
cmc
jb
pop
sbb
inc
les
jmp
adc
cmp
pop
bound
fadds
inc
jb
push
cmp
cwtl
xor
add
or
in
inc
dec
jnp
sbb
push
adc
loopne
mov
imul
sub
mov
repnz
xor
sbb
mov
mov
jg
nopl
xor
rolb
mov
shll
lods
loop
mov
inc
pop
adc
cmp
sbb
or
xchg
fsubrs
jbe
push
cmp
mov
pushf
stos
cmp
in
jge
ds
or
mov
inc
adc
and
sbb
mov
push
mov
and
pop
sti
and
cs
cmp
push
popl
in
insl
sarl
fildl
xchg
adc
jae
fdiv
mov
inc
or
popf
mov
pop
movsb
decl
jo
mov
pop
push
rol
add
add
sbb
xchg
ss
xchg
ror
sub
jg
scas
push
je
aaa
cmp
mov
jmp
xchg
pop
test
mov
adc
lods
and
fs
out
enter
dec
cmc
mov
nop
xor
xchg
push
mov
push
mov
pushf
mov
gs
xor
mov
fcoms
leave
fistpll
popa
imull
dec
cmp
adc
push
sbb
cmc
enter
cmp
cmp
jp
std
rclb
negb
mov
or
push
jmp
or
cmp
clc
dec
pop
jo
lahf
mov
iret
or
ljmp
push
aad
sub
xchg
push
xchg
stos
pop
cld
rep
cli
mov
aad
cmp
mov
packsswb
rcl
mov
push
fimull
pop
mov
shr
sub
sub
mov
and
clc
repz
orb
jb
leave
stos
scas
hlt
jmp
inc
int3
add
ret
cmp
inc
mov
ss
mov
xor
out
xorl
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
nop
js
jge
adc
movlps
mov
decl
cmp
inc
lds
xor
cwtl
jno
in
fdiv
call
das
cmpsb
and
add
fsub
ret
loopne
pop
mov
fadds
shrl
jmp
dec
loope
mov
dec
test
icebp
pop
pop
imul
push
mov
call
fadds
jl
pop
stos
mov
add
and
cmp
out
data16
jnp
add
or
bound
fidivs
xchg
jp
notb
inc
or
gs
sbb
leave
cmp
sub
dec
add
mov
mov
dec
cmpl
movsb
add
xchg
push
imul
ss
adc
push
aam
negl
sbbl
xchg
mov
xchg
and
js
es
mov
pop
and
add
mov
jge
pop
dec
shl
xchg
xchg
xor
dec
lea
fs
sbb
xor
movsb
jbe
bound
fldl
data16
aad
mov
cltd
cmp
iret
cld
ret
dec
je
xor
push
adc
hlt
lea
stos
dec
sbb
dec
add
jns
js
sub
rorl
mov
adc
jo
loope
stos
std
lods
adc
shlb
xchg
sbb
test
ljmp
shrb
mov
cmp
sub
and
and
sub
movsl
add
sub
add
fnstcw
add
in
mov
dec
sbb
cld
insl
popa
pusha
stc
gs
add
pushf
popa
inc
dec
xlat
pop
int3
imul
and
mov
lahf
sbb
mov
lock
xor
loopne
orl
adc
and
repz
mov
cmpsl
arpl
mov
fwait
or
push
or
movsb
mov
or
fwait
mov
bound
pop
inc
das
bnd
rcl
in
mov
fwait
xor
inc
sbb
pop
adc
and
push
xchg
imul
jae
adc
loop
add
idivb
into
sarb
cltd
shrl
mov
ds
jl
loope
push
jne
xchg
sbb
daa
inc
in
dec
jb
dec
and
push
xor
outsb
pop
push
inc
mov
jge
data16
or
push
js
jmp
outsb
mov
dec
movsb
jae
mov
rcll
mov
test
lock
jmp
jle
sbb
es
rcl
jl
fwait
lock
sbb
sbb
movsl
lock
out
jmp
jg
xchg
cmp
sahf
push
js
ss
pop
into
cmpb
fidivrl
add
and
jo
mov
lea
scas
jle
sti
in
xchg
fwait
mull
push
das
or
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
sub
pop
mov
or
bound
ljmp
mov
add
xchg
inc
je
sbb
jmp
mov
cmc
cmpb
pushf
imull
test
sbb
mov
add
and
aad
cmp
pushl
xor
xor
mov
lds
fidivl
js
insl
xchg
dec
fcoms
das
test
jp
mov
jo
xchg
inc
cmpsb
loopne
xchg
cltd
adc
jge
test
pop
xor
test
dec
shlb
aaa
cmp
stos
add
pop
jo
inc
je
ret
sbb
jbe
mov
mov
aaa
aam
rolb
faddp
sub
lcall
push
das
aas
shl
imul
jmp
fwait
call
nop
shl
jge
xchg
or
mov
mov
lods
and
adc
pop
jb
das
mov
sbb
ror
push
es
jnp
shlb
fidivrs
dec
dec
in
nop
movaps
pop
loop
mov
dec
iret
dec
lret
mov
add
ljmp
out
push
outsb
and
jno
mov
fdivrs
ret
adc
pop
sarl
mov
aam
adc
sbb
fdivr
pop
pop
in
mov
aas
push
xchg
mov
sbbb
std
insb
xor
pop
xor
sbb
mov
push
fwait
inc
xor
out
fdivrl
pop
jl
sbb
fchs
rcrb
in
jmp
or
mov
ret
mov
js
fisubs
into
mov
andb
sub
jecxz
rolb
mov
jecxz
mov
stc
dec
lods
sub
dec
sti
int3
sub
mov
and
mov
femms
push
inc
sbb
gs
and
aas
out
xchg
add
sbb
sbb
sarb
pushf
and
lcall
mov
loop
aas
mov
lods
xchg
test
push
or
adc
dec
xchg
scas
addr16
cs
jbe
aam
or
scas
xchg
fcoml
xchg
push
call
sbb
and
out
jns
cmpsb
cs
mov
stos
sbb
and
mov
js
inc
fnstcw
and
mov
pop
jne
sahf
sbb
lods
test
mov
sar
adc
push
push
and
xlat
insl
rcll
into
jns
cmp
jne
jg
jl
and
and
shlb
fsubs
pop
nop
push
lret
scas
adc
inc
into
cmp
js
stc
and
ja
cwtl
jno
xor
shll
cmc
int3
dec
add
scas
shlb
mov
inc
or
das
sbb
data16
adc
and
jmp
mov
sar
push
jg
push
xor
jne
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
ds
xor
repz
popf
std
lea
sbb
or
or
sbb
bound
inc
arpl
cbtw
leave
xor
lcall
mov
add
icebp
mov
xchg
popf
cmp
push
loop
stc
rorb
dec
sub
xlat
fidivrs
loope
imull
cs
xchg
shl
out
mov
jnp
popf
icebp
push
add
xor
lds
jl
loopne
jp
pushl
imul
imul
in
add
mov
lods
jecxz
add
sbb
mov
and
lds
push
arpl
lods
mov
je
int3
inc
xchg
pop
pop
adc
stos
mov
cmpsl
sbb
inc
jbe
cld
stos
mov
test
dec
cmp
decl
mov
sbb
fs
mov
xor
mov
hlt
sub
jnp
insl
mov
rorl
outsb
mov
or
cmp
pop
mov
sbb
lahf
xchg
shrb
mov
mov
std
add
or
iret
fld
cli
rolb
leave
in
xor
xor
push
fldl
pop
daa
sahf
and
imul
ds
sbb
ret
cmp
pop
call
add
adc
cmpsl
les
ret
xor
icebp
test
adc
fmuls
loopne
aaa
std
fld
jp
pop
scas
and
mov
scas
ror
sub
movsb
std
outsl
popa
out
xor
mov
sub
xchg
repz
pop
dec
jns
nop
out
xchg
call
insb
xor
test
adc
pcmpeqb
mov
loope
ds
dec
cmp
cmc
adc
mov
jnp,pn
outsl
lcall
or
mov
sarb
add
push
push
mov
jl
or
dec
pop
leave
hlt
mov
sub
rcl
dec
pop
pop
in
int3
lock
data16
lcall
ljmp
mov
pop
adc
movsb
cmpsl
scas
cltd
lret
inc
push
jbe
pop
push
leave
mov
cmpsl
xor
jnp
out
lret
repz
stc
and
adc
mov
daa
jecxz
sbb
psrad
pop
fimull
dec
popa
push
cmp
lahf
jle
dec
mov
xchg
das
mov
mov
js
in
push
dec
outsb
jle
inc
or
pushf
movsb
loope
sub
scas
cmp
sbb
jle
and
bound
mov
incb
fnstenv
aaa
xchg
je
sbbl
cmc
mov
ja
int3
and
and
dec
dec
mov
push
push
fst
orb
into
clc
push
in
add
add
push
cltd
cmp
and
pop
xor
sub
sub
push
inc
xor
aam
sub
ja
sub
and
jne
dec
lahf
inc
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
inc
mov
mov
or
pop
add
cmp
divl
test
mov
lahf
sti
mov
dec
hlt
scas
inc
imul
push
insl
fisttpl
lods
mov
push
add
mov
imul
jno
into
xor
fwait
or
mov
sbb
mov
sarl
gs
subb
cli
test
fisttps
mov
repz
pop
inc
xlat
lret
mov
int
and
sub
sub
insb
test
push
insl
add
inc
ffreep
and
aam
lahf
out
out
jl
xchg
jbe
jns
fidivl
loope
jecxz
frstor
or
popf
aam
loopne
push
add
fidivrs
or
test
xor
xorl
jg
outsl
pop
mov
add
sahf
mov
mov
pop
and
ficomps
outsl
jne
xchg
jg
dec
mov
inc
mov
xor
fcomip
popa
jle
outsl
ret
push
push
mov
mov
lret
test
das
out
test
mov
shlb
mov
xor
xchg
pushf
imul
cld
cltd
fisubrs
cmp
xchg
xchg
cmpsb
mov
xor
mov
jl
aas
push
out
hlt
xor
sbb
popf
popa
inc
ja
stos
adc
mov
mov
jno
sub
cmpsl
or
outsb
loopne
shl
sbb
push
push
outsb
push
cmc
jb
cmp
gs
rorl
add
aad
lock
push
pop
and
mov
xlat
or
nop
pop
jbe
pop
mov
pop
pop
cld
push
stos
sahf
in
xchg
sti
orb
jo
nop
sub
into
add
jns
stc
dec
fsubrp
inc
inc
add
hlt
adc
icebp
and
or
outsl
push
nop
and
lds
add
and
or
mov
add
sub
fwait
fs
es
adcb
adc
jle
xor
fistps
cmpsb
sbb
mov
mov
push
push
xor
xchg
ret
scas
fcoms
stos
add
out
shr
lds
mov
out
call
rcrb
jne
daa
fnsave
pop
dec
mov
jmp
call
arpl
mov
cmp
xor
adc
xor
mov
inc
out
and
push
add
pusha
mov
jo
inc
repnz
lods
repnz
cmp
ret
adcl
cmp
inc
sbb
jmp
xchg
add
test
push
xor
sbb
mov
mov
repz
rorl
jl
xchg
inc
pop
add
dec
push
adc
je
push
shlb
pop
lret
ret
mov
out
xchg
lds
pop
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
add
loop
push
popa
push
sbb
imul
stos
cmpsl
cmp
mov
adc
aam
add
xchg
inc
in
xchg
push
ret
sbb
outsb
cmpsb
add
xchg
pop
cwtl
mov
gs
cmp
inc
loopne
inc
jnp
sbb
add
das
loop
jne
sbb
daa
fwait
jle
cmpsl
loop
fwait
les
pop
lahf
mov
fs
bound
jnp
iret
and
sbb
xchg
adc
mov
cmpsl
add
adc
ja
jne
add
mov
mov
or
loope
mov
jns
in
mov
fsubrs
pushf
pop
popa
jbe
xchg
dec
movsb
aaa
shr
mov
dec
nop
loopne
dec
rclb
test
test
cli
xchg
jmp
adc
mov
test
or
into
shll
cli
inc
sub
pushf
fiadds
cmp
push
cmp
mov
or
hlt
cmp
mov
lret
xor
mov
stc
and
aas
nop
arpl
insl
enter
mov
push
sbb
sub
cmp
stos
es
aas
and
mov
dec
jns
cmpl
jge
out
int3
stos
sbb
jmp
in
lcall
jae
mov
fists
adc
fwait
add
mov
gs
jge
sub
dec
stos
mov
push
inc
or
cmp
ret
xchg
sbb
les
hlt
mov
inc
cwtl
mov
xchg
jge
fadd
lds
std
imul
xchg
jb
ret
push
in
in
jecxz
ret
add
or
push
outsl
push
das
inc
in
out
or
and
pusha
jne
xchg
or
movsl
loopne
mov
or
data16
push
xchg
jns
xchg
xor
popa
test
sarb
cmp
cmc
stos
mov
add
into
int3
lahf
ds
pushf
cmp
push
push
cmpsl
repz
cld
outsb
dec
inc
add
ja
cwtl
cwtl
mov
pop
mov
pusha
je
and
ret
shlb
lds
scas
xor
fs
ret
shl
xchg
push
mov
dec
cmp
sub
pop
add
xlat
and
adc
push
jno
cld
sbb
repnz
loope
pop
andl
sub
xchg
das
adc
cld
stc
scas
lds
repz
mov
enter
mov
mov
lods
mov
dec
lahf
pop
and
or
cmp
sub
shlb
sub
push
adc
div
or
jo
fs
push
jecxz
rcrl
dec
lcall
and
fstpt
popf
notl
mov
or
adc
repnz
out
mov
and
jno
push
and
mov
out
mov
test
push
add
xchg
ret
inc
pop
cmp
leave
jg
mov
inc
inc
or
div
pop
adc
mov
xor
push
push
dec
jbe
jge
or
daa
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
pop
sub
stos
inc
pop
adc
jp
adc
inc
jp
sbb
stc
or
sub
aaa
bound
imul
aad
call
test
cld
ret
icebp
xchg
mov
pop
ror
mov
xchg
lahf
push
pop
push
xor
add
xor
ret
lret
inc
inc
mov
push
lahf
out
pop
and
cmc
push
sub
mov
add
lods
ljmp
inc
cmp
test
and
sub
jle
pushf
or
out
repz
leave
test
notl
mov
pop
inc
mov
mov
outsb
add
dec
xchg
popf
jmp
pushf
mov
jmp
pop
adc
or
rcpps
out
mov
fucomi
shrl
jae
lcall
ror
cs
and
and
clc
mov
push
adc
xchg
and
cltd
xchg
jg
inc
mov
push
and
lret
aas
cmpsb
ja,pt
xchg
dec
mov
cltd
push
dec
xchg
divl
pushf
cmp
cwtl
jg
cmp
setp
xor
fsubs
insl
sbbl
pop
mov
lea
loopne
jb
imul
cltd
hlt
add
jnp
or
fs
sbb
mov
repnz
dec
jo
xor
lods
xorb
loopne
and
andb
push
insb
arpl
sub
push
or
push
add
lahf
ret
adc
dec
js
push
push
test
push
mull
divb
test
cmp
push
sbb
push
je
dec
mov
jmp
rolb
jae
jge
pop
nop/reserved
jmp
in
movsb
nop
mov
mov
stos
psubusb
lods
mov
rorl
sbb
mov
lods
loopne
pop
and
idiv
dec
out
lcall
insb
jecxz
push
dec
aad
ss
mov
xchg
movsl
pop
or
jle
pop
bound
ja
jb
xchg
xor
fstpl
xor
scas
pop
shlb
inc
cmpb
mov
push
mov
sbb
test
iret
rcrb
leave
and
pop
pop
data16
mov
xchg
push
xchg
and
add
int
sbb
or
pop
int
push
dec
icebp
push
js
adc
aad
lods
jne
mov
mov
imul
lock
xor
repnz
cltd
cwtl
jo
inc
and
adc
and
ljmp
xor
js
cmp
pushl
inc
inc
imul
cmp
into
add
in
push
mov
xor
dec
fbstp
mov
xor
and
icebp
mov
mov
push
mov
mov
inc
daa
fcmovne
mov
mov
or
fnstsw
ret
xchg
into
test
push
fcom
imul
imul
incb
divl
dec
sbb
sub
and
orb
lea
dec
aas
inc
sub
andb
mov
inc
cld
mov
add
inc
clc
roll
add
inc
hlt
adc
add
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
notl
adc
adc
leave
xlat
shlb
loope
xchg
xchg
gs
mov
mov
jnp
dec
lea
push
inc
in
scas
cmp
push
out
cmp
in
pop
add
repz
dec
inc
call
mov
mov
and
sub
pop
mov
pop
lret
jb
add
jno
das
mov
mov
js
jns
xlat
testl
add
or
insl
adcb
movsb
rclb
cmp
inc
ja
xchg
cmp
fistps
psubb
std
lcall
ds
addr16
lcall
xchg
ljmp
fildll
dec
jl
xlat
mov
mov
adc
mov
int3
fdivrs
sbb
add
daa
lahf
out
dec
aas
push
fwait
inc
inc
adc
xor
cmp
or
jg
mov
mov
xchg
adc
push
fs
mov
adc
push
sbb
das
ja
mov
cmp
pop
pop
ljmp
mov
out
inc
and
xor
mov
and
mov
in
xchg
mov
movsb
add
int3
je
or
cwtl
or
lret
mov
xor
lahf
and
mov
mov
stos
outsl
xchg
sub
push
push
popl
push
dec
scas
inc
xchg
test
xor
shl
cmp
jle
jns
mov
lea
fadds
xor
xchg
sbb
pop
and
mov
mov
xchg
cmp
and
pop
scas
and
push
aam
jmp
std
xlat
ret
divl
fs
sahf
outsl
inc
xorb
gs
outsb
ja
sbb
mov
icebp
mov
jb
imul
and
mov
cld
xor
add
arpl
out
and
sbb
push
shl
rcrb
mov
dec
jns
out
daa
mov
add
xchg
dec
insl
or
loop
xchg
aam
xchg
sbb
idiv
xchg
lds
es
lea
movhlps
nop
fsubl
mov
jb
call
cmc
in
leave
nop
in
scas
loopne
xchg
repnz
lret
dec
rclb
negl
xchg
pusha
xor
cltd
adc
sbb
pusha
jne
popf
adc
bound
nopl
sub
xchg
lret
mov
jnp,pt
test
sub
inc
rcll
mov
adcl
fdiv
pop
aad
cmp
rorb
jns
adc
jmp
jae
cltd
lret
mov
sbb
dec
shlb
test
pop
mov
pusha
or
into
dec
jbe
jno
jl
loope
xor
sbbl
lods
adc
das
cs
pushf
ss
out
faddl
or
das
les
xchg
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
jb
pop
push
adc
jp
adc
aas
cmp
out
stc
lock
mov
jp
orl
mov
testl
mov
fisttpl
scas
aas
adc
inc
std
jns
cmp
scas
popf
and
pop
xor
mov
jle
std
xchg
jmp
test
inc
loop,pn
rcrl
test
mov
shlb
mov
xchg
cld
in
bound
sub
dec
into
std
xor
fnstenv
cld
inc
mov
popa
sbb
pushf
cwtl
mov
lock
movsb
inc
ds
pop
js
inc
fxam
inc
rclb
push
mov
mov
jge
dec
fstl
push
inc
adc
ret
adc
jle
repz
sub
adc
adc
pop
pop
scas
cmp
cmp
add
jne
iret
xor
je
jb
icebp
call
mov
mov
lods
pop
xor
sarb
mov
pop
push
pop
inc
jne
pop
lea
mov
mov
sub
dec
ds
sub
pop
push
mov
into
xorl
in
push
push
out
xor
sbb
cmp
push
inc
sbb
push
mov
mov
aaa
fcompp
mov
arpl
xchg
cli
dec
mov
or
scas
and
rcr
push
sub
popa
mov
dec
outsb
mov
aaa
sub
ret
sarl
sub
lret
fisubl
lahf
pusha
jle
mov
dec
dec
and
fs
sbb
stc
xchg
pop
xor
mov
bound
dec
mov
pop
out
mov
aaa
pop
dec
inc
scas
cli
or
cs
imul
cld
push
sub
sub
iret
cmc
push
fisttps
jecxz
cmp
add
pop
push
cmp
fs
jne
sti
jmp
push
sub
cmp
mov
arpl
test
dec
jae
in
mov
mov
jae
cmp
push
mov
adc
js
xlat
cmp
push
sub
lcall
testl
ret
imul
sub
mov
test
pop
push
icebp
rcrl
mov
xchg
in
sub
and
mov
dec
mov
push
fisttpll
rorl
das
data16
sbb
incl
mov
xchg
outsb
popa
mov
in
mov
mov
dec
xchg
jge
iret
inc
mov
jmp
jle
repnz
push
test
mov
xor
pop
clc
adc
jno
dec
and
loopne
cli
enter
add
xchg
jp
mov
pop
cmp
cmp
fwait
icebp
ss
xor
loopne
xor
lahf
mov
das
ret
mov
mov
sub
mov
push
push
leave
pop
lods
popa
cmp
mov
pop
add
xchg
in
jns
outsl
mov
xor
into
adc
and
sub
mov
ret
das
lods
dec
adc
jo
aas
nop
cmp
cmp
clc
jbe
repnz
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
mov
outsb
inc
adc
lea
adc
das
adc
xor
cld
xor
xor
add
cmc
gs
jne
adc
jo
decl
xchg
testl
xchg
add
sahf
sbb
dec
std
push
pop
imul
jnp
aaa
pop
pop
dec
push
aaa
mov
pop
jo
out
mov
pop
loopne
sbb
push
cmp
dec
shll
test
imul
aaa
imul
lock
int3
aaa
arpl
push
je
scas
outsb
mov
sub
andl
xchg
adc
pop
cmp
pop
xchg
andb
sti
jns
in
sbb
cmp
pop
jg
ret
inc
call
in
jno
pop
jne
and
into
inc
sub
push
rclb
cmc
pop
aad
pop
outsb
scas
jl
dec
xchg
mov
xchg
lahf
das
fcmovu
pop
inc
test
cs
ja
fcmovnbe
movsb
cmp
sbb
or
int
lcall
or
cld
in
ret
xor
addr16
imul
mov
sub
imul
jb
jecxz
mov
and
push
cli
lret
stos
cmp
in
pop
lret
insl
push
test
push
sbb
pop
and
xchg
mov
push
fldt
test
daa
outsb
jns
dec
cmpsb
mov
sbb
push
mov
cmp
push
out
or
imul
mov
mov
and
ret
push
push
insb
jb
mov
movb
sahf
hlt
jge
or
repz
mov
adcl
jbe
lods
bound
dec
xchg
arpl
add
leave
outsl
push
ds
mov
js
cmp
xchg
int3
jae
in
jecxz
pop
xlat
outsb
dec
cmp
sub
popf
repnz
out
xlat
out
mov
jns
outsb
icebp
xchg
imul
lods
sub
stos
nop
add
leave
sbb
ficompl
bound
mov
sahf
add
movsl
adc
fadd
jge
fidivs
pop
inc
dec
test
scas
or
rclb
adc
adc
pop
cmpl
pop
aam
push
jp
lds
mov
cltd
cwtl
adc
jo
pop
test
mov
and
add
ss
dec
sub
js
leave
jb
jge
sbb
leave
call
mov
pushf
mov
aam
inc
lret
jecxz
insb
xchg
pop
jno
pop
data16
shll
out
push
jno
and
dec
mov
inc
insb
mov
mov
pop
mov
add
sub
pop
jp
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
push
ret
dec
xor
xchg
pop
rcrb
scas
sub
push
rclb
adc
int
movsl
inc
sub
ret
das
cmpsb
jecxz
lcall
aas
pop
pop
mov
out
fisubrs
test
xor
and
push
fnstsw
ljmp
jecxz
sub
pop
sti
ret
stc
clc
icebp
inc
icebp
mov
testl
cli
loop
loope
mov
jp
mov
test
std
pop
iret
adc
inc
cmc
pop
push
pop
out
mov
std
dec
fdivrs
xor
push
cltd
cmp
lods
int3
aaa
out
dec
mov
cmp
fisttpl
sbb
jo
push
pop
mov
mov
fldcw
addr16
fs
popa
sahf
xchg
out
flds
fwait
mov
and
ret
mov
ss
leave
lods
sub
pop
pop
dec
push
loop
jle
sbb
adc
mov
stc
inc
mov
xchg
xor
cs
aam
stos
js
fwait
aas
test
sti
jl
mov
je
fistps
cmp
adc
sbb
and
push
cmp
mov
lea
push
adc
in
xchg
addb
or
push
push
pop
add
adc
or
nop
push
sar
or
test
cmpl
ret
ss
adc
jge
jecxz
mov
push
mov
jne
aad
sub
xchg
xchg
sahf
les
lods
jl
xor
shrb
mov
lods
push
xchg
adc
push
cmpsb
fwait
cmpsb
sub
enter
into
xor
lea
test
cmp
test
in
adc
movsb
inc
mov
je
sub
and
fldl
js
test
dec
jmp
aas
mov
lcall
push
sbb
adc
push
mov
and
mov
mov
pop
and
mov
sbb
dec
xor
ja
and
mov
es
mov
add
mov
pop
fwait
shll
xchg
jb
sahf
add
gs
hlt
sahf
xor
pusha
loopne
and
and
mov
mov
loope
mov
fsubr
xchg
inc
shll
fcompl
lahf
iret
loop
mov
add
cmp
lret
pushf
or
mov
sahf
lret
mov
lcall
adcb
lods
lahf
cltd
ja
shll
popa
xor
push
stc
and
adc
stos
or
das
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
pop
cmpl
push
enter
jbe
jmp
stos
pop
jae
cltd
lods
add
lods
mov
push
pushf
jmp
jno
sub
divl
test
jno
addr16
add
and
xor
in
sub
aas
mov
popf
mov
cmp
testl
cmp
int3
xor
cmp
xchg
or
sbb
adc
daa
loop
icebp
fmuls
ret
movsl
stos
loope
push
mov
rorl
adc
scas
push
mov
testl
xor
cs
lret
mov
mov
cld
into
ror
stos
in
jb
notl
xchg
sbb
lods
mul
cmc
and
jns
rcrl
mov
stos
pop
leave
dec
daa
enter
lret
addr16
mov
pop
pop
fwait
stos
imul
in
movsb
into
out
pop
xchg
jmp
jbe
cmpsl
inc
imul
cmp
xchg
mov
jg
sti
sbb
aas
xorl
aas
bound
jmp
mov
jbe
cmp
and
or
ror
add
xlat
push
int
pop
je
sbb
inc
cli
mov
leave
stc
mov
std
pop
pusha
icebp
sbb
jae
cmp
dec
mov
lods
pop
leave
and
jp
movntps
mov
adc
push
data16
ficomps
lds
enter
inc
insl
lods
push
push
cmpsb
std
jns
push
or
leave
inc
inc
clc
out
jmp
neg
scas
aas
cmpsb
insl
inc
mov
jb
adc
lods
movsb
jo
rcrb
jge
mov
mov
cld
inc
mov
mov
lcall
scas
int3
daa
sub
fadd
adc
ret
and
lahf
push
xorl
mov
pop
outsb
push
stc
stos
inc
scas
lahf
icebp
and
add
imul
aad
mov
loope
push
jbe
xor
adc
mov
and
int
add
popa
insl
pop
or
mov
clc
out
adcl
hlt
pop
inc
icebp
filds
mov
es
in
pop
inc
stos
mov
dec
imul
out
fcompl
iret
aaa
std
in
mov
and
add
adc
lock
xchg
dec
cmpsb
sbb
inc
scas
and
sti
mov
cmpsl
roll
lods
mov
lcall
sub
pop
inc
fld
in
lcall
dec
mov
mov
jo
cwtl
repz
insb
add
or
sbb
sub
add
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
mov
mov
adc
loope
pop
or
mov
in
sub
outsb
test
xchg
das
cmc
mov
inc
dec
push
add
xchg
bnd
dec
popa
sbb
push
in
jns
daa
sarb
ret
pop
out
fsts
das
push
insl
sbb
push
or
push
sub
xor
jno
cld
sbb
bound
arpl
gs
sti
pop
adc
hlt
xchg
cwtl
out
mov
sbb
ret
xchg
iret
add
shll
push
dec
pop
inc
mov
and
cs
fucom
dec
outsl
add
push
std
jl
push
xorb
in
or
decl
pushf
mov
sub
jae
sar
pop
mov
add
in
mov
das
adc
movsl
cmpsl
or
sbb
push
or
sbb
into
repnz
or
stos
leave
cs
add
daa
lock
inc
or
out
pop
mov
sub
sbb
xchg
sub
je
jl
popa
pusha
inc
sbb
and
or
push
and
fsubrp
sahf
adc
cmc
and
cmp
mov
mov
dec
gs
or
push
push
and
rolb
mov
inc
push
push
in
pop
int
ffreep
fnstsw
cwtl
jb
push
dec
inc
mov
mov
imul
and
mov
daa
inc
mov
push
pop
push
dec
test
cmpl
adc
cmp
cmpsb
inc
out
fcomps
fucomi
leave
in
or
pop
dec
mov
mov
cmpsl
and
sahf
movsw
inc
push
insb
push
jmp
ret
mov
scas
mov
mov
mov
rclb
lea
cmp
pop
sbb
fistl
aas
aaa
add
and
out
mov
pop
jo
adc
ror
push
fidivs
jne
mov
dec
pop
std
xchg
sbb
mov
sbb
imul
aam
and
icebp
insl
sub
xchg
mov
cld
or
fwait
jnp
or
add
push
out
popa
pop
clc
test
jns
push
int
cltd
or
xchg
hlt
rcrb
adc
cltd
cmp
jecxz
jmp
push
lods
push
imul
push
xorb
mov
adc
jmp
push
pop
js
xor
sub
push
aam
mov
in
test
jns
cmpsl
push
loope
loopne
mov
and
and
inc
sbb
in
sbb
dec
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
int
jle
xor
adc
sub
aam
test
sbb
add
jp
repnz
pop
inc
enter
mov
push
add
mov
mov
mov
sti
push
jo
lcall
sub
sbb
outsb
push
dec
xlat
mov
xchg
cltd
mov
inc
push
lods
cs
xchg
cmc
lds
push
std
xchg
sub
jb
mov
mov
es
in
cmp
adc
push
xor
scas
mov
sub
daa
xor
push
push
dec
adc
mov
repz
les
jle
int
lret
adc
pop
stc
jp
lret
inc
inc
or
aam
xchg
pop
or
testb
stos
jle
ss
cmp
xchg
stos
or
adc
xchg
ljmp
mov
mov
shll
mov
mov
mov
xlat
dec
sti
pop
cli
xchg
inc
xchg
xchg
mov
jmp
adc
movsb
push
pop
cmp
mov
scas
jno
and
pop
popa
movsl
and
cs
pop
sub
add
mov
jp
add
icebp
xor
pop
cmp
lock
stc
aaa
mov
lods
jnp
inc
dec
pop
xor
xchg
fiadds
rcr
cmp
jb
push
out
ds
sbb
xor
lcall
mov
jmp
push
lea
iret
mov
mulb
pop
lcall
lds
mov
inc
test
pusha
xchg
push
dec
stos
in
mov
xor
out
int
fimuls
add
les
into
xor
add
jae
sub
lahf
enter
xchg
jo
sti
or
or
leave
pop
das
mov
jle
dec
cmpb
and
dec
cmpl
xchg
and
repz
idivb
adc
and
xor
push
outsb
xchg
std
mov
in
roll
outsb
test
divb
mov
mov
add
inc
add
adc
daa
or
in
xchg
je
pop
lcall
shl
push
in
mov
movsb
pushf
add
inc
ret
loop
jnp
xchg
xor
adc
sub
ss
jp
pop
or
jecxz
cmc
cmp
in
insl
add
call
add
inc
dec
shll
fst
out
outsb
or
pop
call
outsl
adc
push
lds
stc
cld
pop
mov
in
loopne
mov
cmovno
jo
pop
hlt
mov
faddl
jp
arpl
or
sets
sub
testb
inc
adc
enter
add
adc
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
xchg
xchg
js
sub
adc
loope
fbld
lds
sub
movb
pop
imul
sti
xchg
sub
adc
mov
filds
jno
mov
pop
cli
sarb
and
sbb
xchg
cmp
lods
lds
push
push
and
xchg
sbb
pop
sbb
lea
pop
sar
pop
nop
test
mov
xchg
aad
sbb
scas
mov
inc
mov
std
mov
out
in
sbb
pop
rcll
mov
sub
pushf
dec
mov
or
fcomps
lds
xlat
clc
iret
test
dec
mov
push
jg
jmp
mov
cmp
decl
mov
cmp
int
inc
push
ss
push
mov
cmpb
ds
pop
lds
jbe
je
test
or
int3
jb
loop
imul
popa
and
xorb
jb
dec
xchg
and
cmp
sub
ds
cmp
jns
xchg
iret
in
jecxz
test
mov
cmc
dec
movsb
or
outsb
arpl
shll
out
push
push
insb
mov
xor
cmp
cli
mov
jbe
in
imul
pop
mov
jp
int
mov
jbe
mov
adc
fdivrl
adc
mov
lea
xchg
push
enter
inc
stos
hlt
loope
adc
push
jae
cmc
loop
sbb
push
in
xchg
imul
push
dec
test
daa
inc
mov
mov
jmp
xor
xor
mov
lret
jae
or
or
lods
rorl
in
lret
lcall
adc
jle
ret
push
dec
lret
xchg
xor
dec
testl
dec
ret
idivl
into
xor
mov
lock
cmpsl
push
ret
les
xorb
mov
xchg
rorl
pop
rolb
addr16
iret
pop
icebp
in
mov
add
push
mov
push
loope
arpl
aas
pop
testl
adc
mov
enter
gs
jae
test
gs
out
sti
cmpsb
vpsubw
fs
std
push
mov
or
outsl
xchg
call
push
pop
data16
and
dec
inc
cmp
lret
jge
cmp
mov
aad
xor
inc
push
iret
loop
sub
mov
mov
xchg
cmp
xchg
adc
es
jmp
repnz
jle
in
mov
sbb
mov
mov
cmc
outsb
ror
loope
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
xchg
sarb
daa
adc
lea
adc
lcall
test
and
adc
mov
dec
popa
gs
loope
xchg
xor
jp
add
imul
loop
or
xlat
in
lock
push
add
jg
mov
xor
dec
and
in
mov
jne
fisubrs
pop
cmp
pop
sub
es
pop
in
lock
fidivrl
into
jecxz
outsl
aaa
imul
add
jmp
inc
sahf
pushf
je
mov
push
xchg
or
les
repz
push
pop
fadd
jae
and
cmp
and
pop
sub
orl
shlb
inc
cltd
out
xchg
cmpsl
movsl
and
dec
cmpl
aam
mov
nop
das
fsts
cmpsl
or
fistl
jno
mov
ds
insl
stc
das
sti
mov
jge
std
mov
add
cmp
sbb
adc
lds
xor
xchg
outsb
scas
and
outsb
pushf
xchg
daa
mov
mov
cmp
sbb
or
xchg
int3
push
lods
mov
fadd
iret
mov
jno
inc
sti
jl
xchg
lds
scas
inc
xor
stos
mov
fcoml
jmp
loopne
and
les
xchg
je
push
frstor
fnstenv
inc
aaa
push
cmp
clc
aas
and
pop
out
shrl
adc
xchg
add
push
jo
sahf
push
int
sbb
xchg
mov
fnstcw
enter
add
mov
add
rcll
xor
xchg
pop
xchg
pop
icebp
and
sarb
inc
sbb
loop
scas
mov
jno
xchg
pop
pusha
mov
jns
sbb
lods
jnp
popf
inc
mov
mov
repz
cmp
out
lea
mov
xor
ja
cmp
push
sbb
mov
int3
mov
inc
movb
jns
imul
ror
stos
mov
fistpl
sbb
in
add
std
pop
jb
out
sbb
icebp
cs
movsb
xlat
insl
into
fidivl
mov
mov
imul
sub
jl
or
mov
loopne
in
dec
xor
lds
loope
add
test
sti
push
add
jbe
ret
dec
stos
pop
dec
push
dec
lret
sahf
icebp
pop
icebp
fidivrs
cmp
pop
hlt
push
jae
push
sbb
lods
icebp
push
fstpl
and
in
jns
and
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
push
and
mov
adc
sub
lret
addr16
js
dec
xor
filds
imul
aaa
dec
fildll
mov
sbb
call
loop
std
sub
xchg
loop
add
rorl
fnstcw
mov
inc
pop
mov
and
inc
push
mov
add
cwtl
pop
jbe
inc
lret
repnz
fcompl
rcl
addr16
fstl
and
ss
out
insb
adc
mov
repz
adc
mov
mov
adc
out
repz
cmpsl
dec
lods
and
dec
dec
pop
push
pop
push
sahf
lds
out
ljmp
shll
add
mov
scas
jl
pushf
dec
xchg
jae
pop
mov
jae
stc
sbb
and
sub
dec
lock
push
scas
cli
test
mov
adc
sbb
divl
and
out
push
outsb
cmpsl
jne
daa
inc
push
mov
pop
mov
int3
ljmp
push
cmpb
cltd
icebp
movsl
push
dec
push
addr16
lret
mov
xchg
cmp
xor
jbe
sub
pop
data16
movsb
inc
frstor
scas
aas
push
mov
adc
aaa
out
sub
dec
notl
orb
pop
add
dec
sbb
js
cmc
and
ljmp
andl
fldl
push
outsb
or
and
or
or
out
inc
call
adcb
mov
adc
sub
or
fimuls
in
cmp
popf
pop
es
insb
mov
ret
outsb
pop
fisubs
pop
dec
push
rol
xchg
add
adc
in
mov
and
mov
dec
gs
sahf
jmp
jne
out
mov
pushf
mov
xor
sub
aam
mov
in
test
fldcw
out
out
scas
inc
pop
mov
jg
add
fidivrl
out
xor
aad
push
push
sub
mov
mov
popf
call
push
imul
adc
lret
aam
not
push
jp
imul
leave
adc
jne
cltd
aaa
jbe
fdivrp
cmp
add
or
dec
mov
mov
daa
xor
inc
cmp
rcrl
or
cmc
lea
test
push
cmp
mov
aaa
lock
dec
out
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
cwtl
lods
push
sbb
adc
and
xor
movsl
loop
adc
jle
out
aam
int
push
aad
out
jmp
push
sti
data16
in
adc
push
ds
inc
pop
fs
pop
add
inc
stc
pop
inc
jge
into
fldcw
enter
clc
fwait
or
rcrl
mov
sbbb
jmp
nop
pop
and
das
gs
pop
inc
lcall
dec
aas
ljmp
sti
dec
push
xchg
sub
sar
lods
push
adc
push
outsl
add
pop
addl
mov
dec
push
cwtl
icebp
fisttpll
shl
fstps
or
push
jb
sub
in
dec
int
mov
loope
data16
and
rolb
ret
xor
or
xlat
sub
testb
and
fwait
or
icebp
shl
sbb
daa
xchg
int
sbb
jp
sahf
adc
sti
scas
bound
daa
adc
movsb
es
ret
adc
and
inc
enter
out
xchg
and
xchg
mov
jne
sti
inc
fwait
iret
cmp
std
push
lret
in
adc
imul
sbb
push
cli
jae
out
ja
or
lea
out
adc
fcomps
fisubs
dec
push
adc
xchg
ljmp
test
jle
mov
mov
icebp
mov
mov
fldcw
sbb
mov
lret
es
sahf
push
daa
fimull
imul
push
ds
pop
pop
shufps
scas
mov
cmp
xchg
shrb
jbe
jle
mov
loopne
or
shlb
jbe
jmp
fistps
mov
add
outsl
jo
push
out
dec
jns
add
loope
sbb
jnp
or
jbe
cltd
in
in
jle
and
je
dec
mov
pop
fsts
inc
or
adc
inc
cmovnp
jg
arpl
divb
outsl
sbb
test
dec
in
mov
or
jne
mov
jnp
push
push
mov
ret
stc
xor
insl
out
lods
ret
pop
inc
or
add
push
jg
xchg
inc
filds
ret
dec
psubq
mov
insb
outsl
jle
std
repz
lahf
cmp
jb
mov
aad
dec
xchg
out
hlt
js
fisttps
sub
lock
xor
jp
sub
lods
dec
sbb
xor
mov
gs
call
repz
pop
dec
sbb
mov
hlt
xor
xchg
or
loope
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
jno
jle
sbb
adc
jae
jmp
xor
pop
das
push
iret
not
push
add
nop
sbb
adc
push
je
mov
jbe
cmp
dec
pop
push
cmp
inc
dec
cmp
pop
enter
mov
push
adc
add
pop
repnz
dec
and
add
test
cmp
inc
out
scas
out
movl
jnp
fs
pcmpeqw
push
outsb
add
ret
xor
mov
daa
dec
in
stos
inc
pop
pop
and
mov
cs
cs
dec
testb
inc
sbb
push
movsl
xor
jns
sbb
mov
cwtl
xchg
sub
xchg
mov
mov
lahf
xor
cli
xchg
incl
push
xlat
stc
sarb
cmp
lret
sbb
in
jg
adc
and
aad
jg
adc
pushl
ja
xorb
fimuls
inc
aam
lea
inc
fadds
cmc
xchg
dec
dec
dec
mov
cld
mov
ss
push
pop
add
cltd
hlt
mov
xor
cmc
add
stos
adc
fimull
das
frstor
xchg
cmc
lret
aaa
xchg
jmp
xchg
add
adc
cmc
and
mov
lcall
or
adc
jp
push
fiaddl
xor
or
cli
xcrypt-ecb
cmpsl
mov
jnp
test
je
ret
shrb
jg
dec
add
out
sbb
cli
stos
cmp
in
push
adc
sub
mov
pop
hlt
jbe
cs
pusha
xchg
inc
mov
jl
fmulp
aas
adc
push
mov
lods
sub
mov
pop
les
push
in
mov
cwtl
pop
aas
out
shrl
movsl
rolb
mov
inc
jmp
repz
and
es
jle
jns
scas
push
jp
pop
adc
dec
in
dec
frstor
aaa
sbb
insl
rclb
popf
xor
ss
mov
and
inc
into
mov
jo
xchg
mov
adc
xchg
fidivrl
adc
mov
cmp
xor
fmul
sbb
mov
mov
sub
mov
cmpsl
xchg
mov
pop
sub
popa
ror
xor
pop
int3
inc
dec
dec
jo
lods
mov
and
add
test
sub
sub
mov
xchg
pop
nop
or
arpl
shrl
cmp
jb
xor
int3
inc
scas
daa
or
mov
mov
aad
mov
mov
add
bound
movsb
lret
pushf
inc
andl
in
loop
into
jg
sub
lods
or
insb
frstor
cli
xchg
movb
mov
int3
scas
add
cs
in
sub
lret
inc
test
fadd
les
int3
out
mov
sbb
les
out
cmp
adc
aaa
out
lds
cld
or
adc
cltd
enter
xchg
push
jmp
incl
jo
jo
nop
xor
ds
loop
lea
cmpsl
inc
jb
adc
cmp
mov
loope
mov
icebp
pop
les
sub
xor
or
icebp
insl
add
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
add
mov
stos
or
xchg
and
insb
mov
dec
aaa
mov
push
push
imul
inc
add
fcomps
sub
jbe
push
xchg
icebp
ja
ljmp
iret
dec
sbb
jnp
call
jg
pop
aas
xorb
xchg
push
xor
add
and
cmp
data16
xchg
repnz
mov
or
xor
jge
or
add
jne
cmc
adc
mov
or
in
jno
jecxz
xchg
ret
ja
add
shlb
push
xor
mov
cmp
push
pop
dec
cli
jae
aas
xchg
jmp
shr
and
and
fisubrl
mov
xor
leave
jg
mov
bound
sbb
fcompl
jg
push
stos
adc
rclb
call
cmp
fsubrs
fnstenv
xor
or
adc
jmp
mov
ds
insb
jns
mov
test
fldt
out
pushf
xor
push
adc
jne
shrl
movsb
adc
cli
xchg
push
loopne
iret
dec
mov
outsb
ss
enter
out
orb
mov
pop
out
mov
shlb
push
jle
icebp
add
ficomps
inc
out
add
adc
outsl
pop
add
arpl
dec
leave
lret
mov
jns
pop
jbe
push
test
sub
loope
dec
inc
repz
fwait
add
xor
sbb
inc
push
jge
insb
dec
roll
sbb
jp
cltd
sahf
fistl
xchg
cmp
adc
cmc
or
sub
aam
jge,pt
jne
out
or
out
fldenv
sub
push
xor
movsl
mov
pop
and
dec
iret
mov
incb
scas
mov
jp
pop
pop
out
mov
shrb
sbb
and
leave
fists
xchg
popf
xor
xchg
inc
sti
sub
mov
lea
jb
sbb
fwait
pop
inc
mov
lods
xchg
push
dec
out
lds
and
and
jbe
sub
imul
imul
pop
fistps
hlt
addr16
xchg
jo
mov
test
aaa
sti
js
pop
aas
scas
dec
out
enter
les
iret
or
les
dec
sbb
movsl
sarl
incl
mov
mov
test
xor
test
dec
hlt
ljmp
push
jb
ja
push
mov
xchg
call
inc
nop
inc
mov
cmc
mov
xor
imul
jl
fstpt
mov
vcvtsd2ss
repnz
je
outsb
add
adc
cs
bound
jp
mov
mov
icebp
xorb
in
push
push
dec
iret
xchg
mov
jg
and
ds
pop
lock
mov
or
sub
adcl
fsubr
xor
lea
xor
jo
push
das
mov
pushf
adc
dec
sbb
out
ja
mov
mov
sub
push
shr
dec
pop
aam
cmp
shll
ja
xchg
daa
fcmovbe
push
pause
cld
jbe
and
push
js
arpl
mov
push
aaa
insb
push
xor
inc
xor
push
jns
rorl
int3
cld
pmaxub
div
lahf
jmp
push
ret
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
stos
filds
adc
adc
jae
andl
out
lock
daa
pop
pop
mov
pop
xlat
pop
test
ja
sar
dec
cmp
ret
out
aam
fwait
mov
fwait
jg
pop
gs
shll
mov
stos
pusha
pop
xor
sahf
xchg
dec
pop
sub
in
or
popa
js
out
jmp
das
ret
adc
xlat
or
jns
pop
jecxz
mov
aam
adc
xchg
pop
mov
adc
jne
jge
loope
fwait
seto
jbe
xor
xchg
dec
mov
sbb
xor
sbb
dec
adc
hlt
xchg
jbe
mov
xchg
repnz
pushf
mov
jbe
xchg
lea
mov
adc
dec
ljmp
mov
xchg
scas
mov
mov
lcall
sti
out
xor
sbb
xor
ljmp
xchg
gs
cmpsl
or
sbb
inc
mov
in
mov
in
scas
mov
in
int
mov
daa
mov
pop
pushf
aas
xchg
inc
outsb
mov
add
pushf
int3
scas
loope
adc
xchg
ljmp
adc
fs
in
insb
sub
mov
inc
repnz
push
pop
sarl
pop
dec
loopne
or
xor
sbb
mov
jmp
stc
add
xchg
mov
rcrl
ret
enter
xchg
dec
push
rclb
sbb
std
xchg
xor
outsl
lret
pop
add
or
hlt
push
or
movsl
cmc
mov
sub
push
fs
sub
flds
xchg
adc
fnstcw
xor
in
test
sub
loopne
int
sbb
cmpsl
ja
stos
and
movsb
sbb
popf
insl
pop
mov
xor
rcrb
fnstenv
in
test
shll
push
movlhps
test
sub
aam
rorl
int3
daa
std
and
jns
pop
test
push
push
xchg
fld
push
nop
aas
xchg
mov
xchg
fdivrl
roll
repz
add
cs
mov
mov
test
out
cmp
pop
repnz
sti
push
cwtl
dec
sbb
add
pop
mov
mov
mov
xor
adc
aam
nop
cmp
lods
mov
mov
daa
push
push
cmp
pop
or
mul
xor
rol
and
pop
push
fiaddl
sub
imul
fdivl
and
adc
pushf
jle
push
push
mov
into
mov
les
es
and
dec
and
xor
loop
xorb
aam
pop
aad
test
mov
jmp
push
aaa
test
mov
pop
adc
xchg
testl
into
sub
ret
sub
fldcw
sbb
sbb
and
xor
mov
lods
in
daa
scas
mov
mov
mov
in
test
pop
aad
push
scas
mov
and
cmp
push
jg
ror
xor
gs
cmp
or
les
fimuls
ret
fimuls
aad
lret
enter
sti
jne
enter
pop
push
sti
cmp
shrb
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
out
std
jle
call
adc
push
icebp
sar
jp
ret
inc
cmp
hlt
mov
test
sbb
sarl
dec
dec
cli
in
das
cmpl
push
inc
mov
imul
dec
cmpsl
dec
dec
push
xlat
rol
cmpl
jb
pushf
in
lret
dec
cmp
sub
inc
adc
xchg
cmp
dec
icebp
lcall
std
cmp
nop
jmp
cltd
in
xor
add
cmp
cmp
sub
popf
mov
test
mov
fisubs
jno
xchg
js
loop
out
pushf
sub
jne
cli
sub
or
adc
mov
xor
and
outsb
in
mov
mov
mov
into
test
cld
push
xchg
test
push
hlt
cmp
add
sbb
icebp
sbb
mov
iret
sahf
scas
inc
fstps
outsl
dec
femms
mov
adc
fcoml
dec
and
push
xor
ss
lea
mov
ljmp
mov
mov
enter
in
mov
pop
inc
ret
add
mov
mov
jg
ljmp
push
neg
pop
test
push
mov
in
mov
sbb
lods
lahf
xchg
loop
sahf
pop
xchg
test
lret
sbb
pop
cmc
inc
and
popa
pop
leave
sarl
jnp
add
and
lcall
ficompl
ja
in
cli
fstpt
dec
jmp
mov
mov
rcr
mov
mov
popf
or
cmc
pop
cs
daa
iret
xchg
adc
loope
dec
scas
pop
mov
repnz
rcrl
ret
addr16
jnp
sub
adc
sbb
pop
imul
sbb
in
es
pop
fdivs
mov
outsb
add
jmp
jge
call
ret
jge
push
mov
xor
pop
jnp
mov
sbb
shll
inc
or
mov
shlb
dec
xlat
sub
mov
inc
and
xchg
xlat
xchg
mov
xchg
pusha
push
xchg
mov
or
cmc
popa
push
and
xor
insl
jle
mov
sbb
daa
lcall
cwtl
mov
push
inc
pop
outsl
add
in
push
push
out
mov
xchg
adc
sub
sti
and
mulb
lods
cwtl
or
inc
jae
int3
mov
xchg
mov
xlat
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
add
adc
mov
xor
xor
mov
mov
and
mov
in
jg
nop
push
adcb
daa
in
iret
rcrb
pop
add
xor
add
inc
mov
inc
mov
ficoml
xor
clc
lods
sub
cltd
jno
add
hlt
outsb
lds
rcrb
push
insl
jno
stos
sbb
ret
mov
xchg
or
dec
dec
aaa
jbe
xlat
fs
int
push
jge
fsubs
xchg
lcall
xlat
mov
push
cmp
jg
jb
jbe
pop
push
das
or
or
jb
stc
push
cwtl
fs
mov
jbe
imul
xchg
dec
fwait
mov
fdivr
lock
lcall
lret
jno
xchg
inc
into
pop
sbb
xchg
and
cwtl
sub
push
aad
ljmp
aad
mov
mov
popf
adc
xchg
jl
shll
enter
jo
sarb
sti
and
sub
cld
inc
shl
lods
cmc
dec
call
out
loopne
pop
push
xchg
pop
push
jns
out
or
lcall
adc
push
jmp
fidivrl
stos
dec
lds
int
cli
inc
dec
dec
pop
fs
bound
mov
push
and
sub
arpl
push
and
xlat
imul
pop
mov
addl
xlat
fdivrl
jne
xlat
es
jns,pn
pop
pop
jbe
dec
or
bound
scas
shll
push
xchg
mov
jle
cmp
test
ds
pusha
pop
xchg
std
cmpsl
popf
enter
mov
or
xchg
add
sbb
clc
push
lret
aas
jbe
push
adc
pop
dec
sbb
fbstp
ror
xchg
push
and
fmuls
out
mov
and
push
testl
xchg
adc
pop
mov
scas
add
xchg
jno
in
ss
fstps
mov
lods
sbb
jne,pt
aam
mov
xchg
jne
loope
push
cmp
dec
inc
mov
imul
jns
hlt
leave
adc
lcall
clc
sbb
or
dec
jmp
jmp
sbb
jp
filds
and
adc
fiaddl
shl
mov
mov
xor
pop
mov
cltd
lds
not
dec
je
inc
sarb
cmpsl
js
push
test
dec
js
aaa
mov
nop
mov
dec
jle
out
mov
push
and
or
pop
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
mov
js
stc
adc
adc
sbb
iret
rol
dec
lahf
in
jbe
mov
mov
cmp
cmp
fisttps
mov
jae
cwtl
rcrl
stos
aaa
mov
or
popf
xchg
jge
cmp
sahf
pop
xor
xchg
out
lret
divl
sti
mov
mov
outsl
push
mov
adc
push
fnstsw
sub
andl
sub
jg
or
clc
sti
popf
mov
movsl
not
jmp
clc
lahf
rcll
cmc
mov
testb
cmc
pop
in
xor
push
scas
jo
incl
lcall
push
dec
scas
ds
xchg
test
mov
scas
stc
in
dec
cs
fcompl
inc
sahf
jg
sbb
es
lods
push
push
lahf
sar
ss
ja
mov
ret
cs
push
or
cmpsb
sbbl
push
adc
jp
pop
arpl
mov
lea
out
aam
or
stos
pushf
push
mov
jmp
adc
das
and
andl
lcall
out
pop
stc
dec
xor
sbb
jne
dec
mov
inc
mov
orb
pop
push
addl
mov
jg
imul
dec
cmp
jne
movsl
test
iret
int
mov
add
ret
loope
xchg
mov
sbb
mov
in
inc
jae
aaa
sti
pushl
xchg
loopne
cmpsb
push
adcl
in
dec
fs
icebp
xchg
roll
clc
fs
andb
sbb
adc
mov
out
jmp
xchg
mov
int
push
test
ja
add
and
or
pop
jae
and
dec
dec
imul
pusha
jb
or
scas
push
cmp
xchg
loopne
dec
mov
decl
imul
cmp
push
dec
arpl
add
sub
mov
xorl
in
mov
sbb
leave
sub
repnz
in
cmp
movsb
out
inc
enter
dec
jle
jmp
gs
subb
mov
fsts
out
xor
xchg
xchg
push
and
mov
jo
fnsave
add
xchg
inc
mov
add
sub
and
adc
test
sarl
mov
imul
ljmp
pop
in
imul
fucomi
je
rcll
or
sub
mov
mov
mov
or
dec
push
aas
xlat
push
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
dec
or
xchg
movlps
shr
dec
ljmp
mov
inc
sbb
loope
lahf
rcrb
jp
xor
daa
addb
sbb
mov
xchg
pushf
ja
call
dec
dec
test
jl
dec
jno
sub
ljmp
inc
imulb
rcrl
pop
jne
inc
lods
fildll
cmp
mov
push
push
in
inc
fldl
mov
xor
ja
mov
loop
cmpsl
xchg
sub
pop
sbb
rcrb
test
addl
in
mov
test
aam
xor
les
push
and
push
imul
inc
mov
pop
or
mov
ret
inc
ret
pop
cmp
mov
inc
dec
pusha
popa
addr16
or
shrb
sbb
mov
out
xor
outsl
sub
or
out
xchg
fldl
imulb
lock
shr
dec
push
iret
add
sub
movsl
jb
push
and
sub
leave
ljmp
clc
dec
enter
outsb
imul
sti
vphaddbq
or
xchg
ja
je
fwait
into
push
fimull
std
pop
push
aam
push
pushf
mov
cmp
jmp
xor
lods
mov
stos
in
mov
mov
in
mov
or
pop
imul
dec
movsb
sub
pusha
push
xchg
shrl
cmp
out
and
pop
xchg
scas
inc
pop
pop
je
int
nop
test
stos
daa
pop
push
pop
js
pop
add
mov
jno
jp
stos
cmc
sbbl
cli
xchg
bnd
nop
fwait
push
mov
pop
and
movsb
ss
inc
and
pop
mov
fwait
shll
fbstp
mov
and
fistpll
inc
add
aas
test
les
cmpb
sub
xor
ds
add
inc
mov
mov
or
adc
adc
stos
mov
fbld
dec
adc
in
incl
jecxz
push
mov
movsb
mov
sub
push
or
pop
mov
int3
js
subb
hlt
mov
imul
inc
orb
rcl
jae
cmpsb
xor
sub
adc
sub
adc
scas
xchg
mov
sbb
out
inc
pop
xchg
cmc
in
sahf
push
gs
xchg
xchg
test
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
lock
mov
sub
adc
pop
pushf
loop
pop
out
jg
gs
xchg
dec
and
add
jecxz
inc
lods
or
dec
sub
cmp
pusha
pop
add
fwait
cs
adc
out
xorl
or
cmpsb
adc
mov
fisubrs
cmp
ret
jp
xchg
sarl
mov
int3
cmp
or
mov
dec
push
js
test
cmp
sti
scas
movsb
aad
xchg
jle
out
out
icebp
nop
dec
mov
jp
mov
iret
loopw
and
out
mov
negl
scas
sbbb
or
in
fnsave
out
mov
mov
popa
hlt
ret
xlat
daa
outsl
stc
cwtl
in
mov
test
push
mov
shrb
pop
xlat
mov
mov
scas
jg
nop
loope
and
and
imul
les
mov
dec
movsl
inc
fistps
push
lock
jbe
push
ffree
or
add
push
mov
adc
test
mov
or
lret
push
push
push
or
fcomip
and
mov
xchg
into
dec
cs
hlt
or
xchg
rorb
mov
rolb
lret
ja
mov
loopew
xor
js
test
sub
jb
inc
push
xchg
fsubrs
cmpsb
repnz
inc
pop
cmp
jnp
jle
mov
mov
fcmove
mov
pop
dec
dec
stc
aam
hlt
ss
or
fwait
pop
call
hlt
xor
xchg
push
or
cmp
fists
or
out
stos
mov
cwtl
or
ja
dec
dec
mov
pop
pop
movsb
popa
xor
stos
xchg
call
cmp
sub
iret
mov
enter
sub
dec
pusha
fsubrs
arpl
mov
inc
jae
push
mov
call
loop
pop
mov
cmp
pop
jmp
or
xor
shlb
mov
lds
sbb
jne
clc
cmp
insl
pop
pusha
out
jl
rolb
sbb
cmp
lods
fs
push
pop
push
sbb
inc
and
pop
xchg
and
pop
fnstcw
lock
mov
cmp
add
add
ret
adc
dec
sar
jge
inc
or
insl
aaa
xchg
jge
mov
divl
lret
lcall
int
lea
fs
push
mov
xor
bound
xchg
and
pop
pusha
xor
inc
dec
pop
test
or
mov
jmp
stc
cmpsl
xlat
ret
add
shll
and
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
sarb
lods
add
adc
adc
iret
dec
xor
xchg
pop
movsb
and
jnp
fnstsw
adc
lret
cmc
outsl
orl
inc
push
push
stc
in
adc
xchg
out
scas
mov
sub
in
test
ss
pushf
out
inc
add
inc
xchg
xor
jo
add
inc
dec
mov
cs
outsb
mov
mov
enter
dec
mov
and
mov
lcall
cli
std
mov
pop
mov
inc
cmp
fmull
lods
in
mov
xchg
mov
sub
sbb
xor
jg
add
and
out
jbe
je
mov
push
mov
iret
mov
fisubrl
ja
cli
mov
push
mov
sub
rcrb
or
pop
inc
sti
sti
jp
out
pop
mov
jl
aaa
inc
push
js
dec
mov
add
xor
push
sub
out
out
cli
or
push
cmpsb
xor
lock
mov
jle
lret
pop
push
mov
imul
push
sti
mov
fadd
cmp
mov
jl
ljmp
xlat
jb
shrb
movsb
or
je
arpl
adc
mov
pop
and
pop
test
jae
mov
jno
aad
fs
push
dec
std
xchg
sub
push
test
sbb
iret
dec
xlat
test
call
lds
pop
adc
mov
insl
loop
pop
andl
add
in
test
xchg
mov
loopne
lcall
and
movsb
flds
mov
rorb
dec
test
popa
cmpsb
mov
dec
vandps
rcr
pushf
imul
cmp
jb
jnp
test
and
fstl
bound
cmp
sub
cmpsb
ss
fmuls
sarb
ja
les
xchg
sarb
xchg
enter
mov
mov
jle,pn
movsb
pop
push
ret
push
out
push
imul
mov
dec
in
cmp
and
xchg
fs
lock
adc
adc
lods
jns
dec
push
jo
shrb
push
daa
test
adc
icebp
mov
jle
aad
cmp
add
insl
pop
adc
cmc
mov
push
clc
or
insb
bswap
movsl
and
xchg
divl
rorl
and
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
movsl
stc
sarb
movlps
and
pop
loop
scas
jo
cltd
rorl
add
mov
aas
pushf
rcl
mul
push
mov
and
jl
mov
std
xchg
pushf
pop
pop
ret
fildl
xchg
mov
cmpsl
hlt
pop
gs
imul
push
cmp
pop
lea
std
jno
mov
sub
clc
and
cli
repz
jecxz
sbb
test
adc
test
cmpsl
shlb
dec
pop
and
ljmp
xchg
and
and
pop
adc
divb
sbb
fmull
pop
in
jmp
cmpsb
loope
and
sbb
jmp
xlat
sbb
fcompp
pop
sub
sbb
dec
mov
cmp
cli
adc
leave
jbe
lock
mov
loopne
push
push
outsl
xchg
shrl
leave
mov
aaa
addb
adc
push
sbb
test
lea
mov
fnsave
out
test
push
xchg
stos
pop
sbb
jle
lret
sahf
or
pop
ds
leave
lahf
pop
decb
push
adc
and
lds
adc
mov
sbb
mov
lea
mov
in
pop
scas
mov
imul
or
jnp
mov
sarb
mov
jl
pop
cwtl
repnz
cli
mov
mov
sti
xchg
lods
fidivrs
jno
aas
push
mov
loopne
push
sub
out
call
subl
jb
fadd
cltd
jg
add
xor
mov
xlat
xchg
push
pop
iret
push
pusha
and
inc
faddp
cmpsb
sahf
lds
xor
and
out
cmp
xor
mov
call
jno
and
outsl
ss
adc
dec
aaa
add
jbe
lret
cmp
and
mov
cwtl
jp
add
inc
or
sub
xchg
movl
int3
pop
jb
sar
xor
cmpsb
push
popa
xchg
fucomip
add
popa
insl
inc
insl
mov
xlat
lods
xchg
daa
jmp
pop
imul
push
cmp
das
and
and
popf
das
pop
fcompl
push
cmp
loope
pop
shl
leave
divl
pop
and
fwait
and
cmp
lret
mov
inc
sahf
movsb
mov
add
mov
xlat
enter
xor
subl
cmovne
cli
and
std
jp
aad
and
mov
dec
dec
sarl
xchg
stos
cmpsb
popf
fmuls
movsb
movl
rorl
or
add
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
jle
ficoms
adc
cmpsl
xchg
out
or
jae
adc
in
pop
std
inc
add
mov
sbb
push
enter
fsubrl
or
in
out
int
pop
sub
and
test
sti
daa
lret
pop
ljmp
cmpsl
add
in
stc
or
mov
inc
mov
aad
stos
movsl
lret
push
cwtl
and
mov
mov
scas
and
adc
pusha
push
das
inc
shlb
pop
movsl
mov
inc
xchg
mov
sub
sbb
lret
xor
jbe
dec
and
in
inc
call
jne
push
push
jmp
lods
cltd
sbb
sub
pop
shr
ret
movsl
adc
lahf
inc
adc
es
mov
popf
or
out
cmp
mov
sbb
mov
int
xchg
sub
add
cld
dec
aam
sub
adc
jge
inc
jecxz
jnp
icebp
inc
in
push
addr16
add
fnsave
inc
sub
mov
push
lods
dec
or
into
fstl
or
sahf
fsubrp
push
fidivrs
mov
and
loope
jnp
pusha
jne
and
xchg
sbb
movsb
aaa
and
pand
stc
or
inc
xchg
das
inc
pop
mov
arpl
insb
pop
xor
fdivrp
pusha
cmp
add
lretw
or
out
fldt
jg
mov
adc
mov
shrb
add
in
pusha
stos
aad
orb
inc
test
sub
pop
call
fsubp
xor
push
sbb
sub
xchg
adc
cmp
jmp
dec
fistpll
jno
xchg
ffree
aad
mov
jo
jbe
test
test
and
mov
pop
adc
testb
nop
popa
data16
mov
int3
int
xlat
xchg
jns
enter
outsb
push
add
xchg
leave
lcall
xchg
xchg
adc
mov
mov
hlt
sub
ljmp
xor
add
jge
pop
loope
test
pop
push
or
push
cmp
shll
insl
sub
xchg
push
leave
popf
xor
out
pop
dec
jg
lods
xchg
test
rolb
lret
fisubs
int
mov
hlt
pop
les
rcr
fldenv
inc
push
cmp
adcl
sbb
into
push
cwtl
sbb
mov
xchg
or
dec
shlb
test
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
cmpb
adc
ret
negl
loop
push
sbb
mov
ror
into
cltd
iret
fnstcw
je
fdivrl
notl
jg
jo
insb
lea
inc
mov
add
imul
mov
mov
and
aaa
jnp
mov
addb
and
loope
mov
adcb
notl
or
in
mov
scas
xchg
fists
push
lods
pop
sbb
inc
push
inc
push
orb
add
pushf
xor
inc
jbe
xchg
jl
adc
mov
or
fbstp
sarb
inc
enter
insb
lret
stos
int
cs
mov
aaa
in
pop
movsb
hlt
and
jns
fnstsw
inc
xchg
sbb
xchg
mov
mov
subb
sti
add
test
shrl
out
pop
jmp
mov
lcall
lret
ljmp
outsl
fnsave
int
fsubrp
and
mov
sahf
mov
xor
mov
daa
aad
jae
pop
outsb
leave
in
test
les
leave
cmp
into
xchg
rorb
es
loop
fisttpll
add
call
arpl
cmp
pusha
lret
adc
or
or
jno
loope
pusha
cld
adc
mov
mov
dec
enter
movsl
fistpll
insl
cmp
andl
dec
inc
sahf
nop
cmc
pop
cmp
sarl
jg
les
dec
push
repz
in
pop
xor
outsb
loopne
sahf
dec
sub
dec
mov
lahf
push
scas
and
inc
mov
lods
adc
jp
out
xorl
push
sahf
ja
mov
push
loope
push
jge
xchg
and
jge,pt
xchg
and
js
xchg
loope
cmpl
mov
mov
mov
lock
xchg
pushf
loop
push
xchg
sbbl
xchg
scas
push
jp
jg
mov
add
mov
jle
cmp
flds
mov
xor
pop
cmp
lret
mov
add
dec
rorl
addb
out
int
cmp
icebp
jecxz
inc
inc
pop
or
and
add
jecxz
jno
adc
xorl
sbb
stos
cmpsb
adc
sub
jle
pushf
rclb
inc
aam
mov
rcrb
stos
push
sub
jecxz
push
jb
or
mov
dec
lret
orl
pusha
sub
test
les
or
movsl
jp
int
cmp
mov
fwait
int
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
mov
jecxz
test
fwait
imul
into
pop
xchg
hlt
sub
iret
jne
or
push
out
ds
lods
mov
dec
xchg
rcl
out
je
jmp
aam
fsubrs
cli
fists
ret
insb
dec
cmc
and
sub
cmp
jle
rcr
lods
and
aad
sbb
test
ja
cwtl
adc
dec
test
in
inc
mov
fnsave
mov
sub
mov
inc
sub
lcall
cmp
jbe
in
xchg
rcr
lret
pushf
imul
or
mov
sbb
xlat
jmp
enter
or
loop
inc
adc
insl
lret
cli
and
sahf
and
push
arpl
das
in
cmpsl
not
fbld
inc
jle
daa
imul
jmp
out
cld
push
das
in
std
subb
mov
push
dec
push
in
aaa
jnp
push
jae
lahf
enter
pushf
bound
out
adc
adc
xchg
push
mov
jb
mov
test
pop
push
cmp
popl
sub
lods
mov
loope
mov
mov
sub
lcall
cmp
repnz
xlat
adc
mov
jge
sub
jle
cs
add
cmp
aam
cmp
inc
or
sbb
in
iret
movsb
mov
mov
mov
dec
stos
pop
mov
xchg
or
test
xchg
pop
xor
or
cmp
out
test
mov
jp
cmp
insl
pop
insb
aas
pop
insl
push
add
lcall
lea
ljmp
lds
adcl
push
adc
out
adc
imul
cld
sbb
jnp
out
mov
aas
or
ja
mov
popf
call
jns
xchg
inc
je
add
incl
add
inc
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
test
adc
adc
inc
xchg
cmp
mov
into
popa
aad
fildl
push
jle
xchg
jb
push
in
fxch
xorb
dec
jge
push
shrb
imul
out
pop
jmp
iret
movsb
or
add
xor
push
mov
loopne
stos
idiv
fwait
les
in
shrb
add
xchg
mov
lock
dec
mov
jb
aas
das
lds
pop
pusha
push
aas
roll
cs
icebp
mov
mov
scas
push
out
dec
xchg
test
xor
arpl
cmc
pop
faddl
jle
testb
out
jns
or
pop
aas
lret
or
push
mov
inc
repz
negb
jno
adc
sub
cmp
sti
out
jnp
insl
mov
sahf
jns
xorl
push
add
xchg
push
push
xlat
xchg
cmp
push
push
jle
or
jge
lahf
cmp
adcb
cli
pop
adc
sti
inc
and
cli
aad
and
ja
out
push
cmc
in
add
mov
dec
or
out
pushf
pop
in
push
or
pop
inc
or
xchg
out
dec
adc
fucomi
and
and
xor
ja
test
mov
push
or
mov
sub
fwait
inc
add
addr16
push
cld
inc
jp
add
sub
outsl
jno
call
adc
repz
xor
jo
jb
jnp
xor
pop
push
mov
pop
add
add
xchg
xor
inc
push
dec
cmpsl
lret
aaa
jae
jmp
adc
fisubl
andl
cmp
xchg
fnsetpm(287
popa
lea
jmp
aas
das
mov
movsb
xor
push
push
ss
mov
mov
packsswb
xchg
mov
add
in
xor
aad
sbb
pushf
sti
lret
shlb
cmpsl
hlt
sbb
mov
nop
addr16
dec
addl
sbb
loopne
icebp
add
and
test
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
movsb
cmpsb
cmp
lret
enter
sbb
and
dec
adc
sub
push
das
inc
add
loop
cmp
jbe
fidivrs
adc
xchg
pop
int3
lea
inc
mov
popfw
andb
ljmp
jmp
test
jge
sub
mov
adc
xchg
and
fwait
test
mov
sti
add
and
sub
in
sbb
and
jnp
fcoml
gs
test
nop
enter
or
data16
cmpsl
sbb
imul
push
xchg
clc
adc
imul
sarl
cmpsl
pop
inc
sub
push
inc
xchg
fldl2t
adc
mov
outsb
adc
cld
fbstp
loop
mov
push
and
mov
insb
imul
push
or
std
add
lea
cs
mov
stos
adc
adc
into
and
sub
loop
mov
mov
bound
loop
sbb
lock
ja
retw
sbb
rcrb
rcl
xor
xchg
scas
inc
add
mov
and
rcrl
or
mov
jno
fwait
cmpsl
push
lods
mov
push
and
push
add
cmpsl
in
jmp
cwtl
add
lods
popf
mov
sub
pop
lret
pop
mov
lret
push
clc
into
push
test
push
fdivr
imul
xor
rol
lock
mov
aas
pop
aam
mov
iret
mov
cltd
mov
jle
out
push
dec
test
and
pop
jge
stos
ljmp
sahf
popf
mov
lahf
pcmpeqb
pop
jle
add
lea
xor
dec
or
adc
inc
adc
and
movsb
popa
scas
insb
fadd
movsb
mov
cmpsl
out
pop
pop
sar
push
jo
rorb
popa
loop
fisubl
xor
xchg
jnp
push
sbb
jl
hlt
sbb
or
dec
and
orl
insl
mov
xchg
or
dec
sub
and
shlb
sbb
incl
add
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
and
jle
adc
adc
push
xchg
sub
cmp
shrl
xchg
push
es
stos
jno
push
cmpsl
sbb
clc
dec
pop
and
cmp
pop
cltd
or
fdiv
inc
jne
sti
fdivs
mov
cmp
in
imul
fidivl
push
sarb
ja
sahf
jl
cmpb
repz
dec
lods
adc
pop
xchg
fwait
loopne
aam
ret
jecxz
mov
jae
push
fwait
sub
and
and
scas
xor
rolb
mov
fcoml
mov
int
inc
iret
push
push
repz
jae
ds
insb
or
xor
xchg
xchg
fs
hlt
adc
repz
mov
push
cmp
ss
es
in
jo
cmp
rclb
sub
das
mov
out
scas
sub
push
pop
sub
sti
popa
mov
push
adc
cmp
outsl
or
sbb
fidivs
flds
ss
sub
inc
lea
dec
mov
or
pop
jbe
bound
and
or
and
push
cwtl
imul
and
or
fucomi
jle
stos
jnp
push
cli
or
int
enter
jecxz
cmp
lea
add
test
jle
cmp
inc
out
ss
fwait
inc
fldl
lds
fmul
cmp
mov
mov
inc
sbb
movsl
xor
fcom
inc
test
add
jmp
and
add
pop
call
fnstcw
mov
ss
sub
mov
inc
js
ror
jb
pop
xchg
ss
xchg
mov
outsl
dec
outsl
leave
fs
inc
aaa
push
xor
fldl
xor
xor
stos
dec
out
sub
push
mov
lods
fstps
adc
fcomp
cld
jle
pop
arpl
rclb
pop
mov
arpl
fsubrs
fmuls
jp
push
mov
xchg
jns
lret
xchg
js
mov
fcmovbe
mov
mov
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
sbb
adc
movlps
imul
ljmp
mov
adc
cmp
sbb
nop
lods
or
inc
sahf
mov
mov
pop
movsb
pop
ficoml
inc
loopne
test
cmpsb
movsl
xchg
pop
aad
movsb
cwtl
jecxz
and
fisubrl
jae
pusha
clc
mov
in
or
dec
rcrb
sub
fnstsw
loop
cmp
js
jge
xlat
add
pop
xorb
sbb
push
ss
inc
adc
rcrl
cmp
jg
rolb
loopne
xchg
mov
and
dec
inc
cmpsl
sbb
sbb
jl
jg
add
xor
push
std
int3
inc
aaa
xchg
jbe
or
ret
adc
icebp
iret
pop
out
jle
jl
mull
int
xchg
leave
std
scas
loopne
mov
push
sbb
popa
mov
adc
sub
mov
outsb
mov
push
je
and
shll
rolb
or
mov
setle
scas
pushf
xrelease
js
mov
add
das
jmp
inc
std
and
out
addb
push
sbb
xor
jns
dec
xor
jge
and
jp
mov
daa
sti
ja
xor
into
push
fidivrl
scas
push
sbb
fpatan
decl
pusha
pop
lock
xor
dec
sarb
js
sub
push
xchg
xchg
stos
cmp
cwtl
lahf
rorl
cmp
shrb
jnp
scas
jbe
pop
add
fwait
pop
movsb
in
pop
dec
dec
adc
sub
repz
mov
out
popf
cs
xor
add
es
push
xor
add
cmp
lahf
jge
js
enter
je
inc
or
push
inc
jne
int3
push
mov
lds
fcomps
js
lea
jle
xchg
shlb
add
or
xor
mov
add
jecxz
mov
cmp
mov
mov
add
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
push
js
mov
adc
loope
xor
inc
test
or
outsb
jno
sbb
test
imull
mov
push
and
or
lods
add
stc
mov
xor
adc
pop
mov
lret
data16
cmc
push
ja
mov
or
or
jno
mov
adc
mov
movsl
cmc
jnp
mov
into
jle
rorb
fnstenv
adcl
lods
fwait
add
dec
mov
gs
test
dec
cmpsl
leave
dec
mov
repz
or
and
in
mov
popa
push
leave
stc
mov
arpl
fsubrl
jo
pushl
mov
adc
pop
clts
lods
jae
repz
and
mov
cmp
int3
sbb
adc
push
cltd
pop
ljmp
cmp
sub
xor
repnz
fsubrs
cltd
cli
es
mov
rorb
insl
fisttps
mov
adc
enter
cmp
int
pop
mov
scas
mov
and
das
push
inc
sub
mov
sub
fidivs
cwtl
in
in
dec
dec
popf
xchg
rorb
lock
sbb
call
aas
add
mov
repz
inc
dec
push
fcmovnbe
jne
mov
lock
scas
adc
rclb
sbb
sarl
sub
and
pop
jp
xor
sti
lock
scas
sub
std
jo
addr16
int3
dec
pushfw
test
stos
lret
lds
xchg
icebp
imul
addb
sbb
cmc
xchg
pushf
inc
int3
sub
cmp
gs
mov
sub
nop
push
push
faddl
inc
flds
iret
jg
movsl
icebp
sub
aad
xchg
inc
xchg
aaa
outsl
jo
and
pop
mov
mov
in
popf
popf
into
jno
je
js
stos
arpl
xchg
fsubrp
lret
mov
insl
mov
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
pop
lods
xor
adc
call
jmp
xor
aaa
mov
jle
sbb
cmp
push
out
or
stc
sahf
dec
sub
sub
lods
les
out
inc
std
inc
ljmp
sub
inc
lock
arpl
loopne
push
scas
add
lods
fdivr
out
sbb
lahf
mov
cmp
stc
sahf
lret
add
pop
addl
push
push
les
into
imul
xor
lret
jns
popf
mov
adc
push
push
mov
rcrb
xor
cmpsl
outsb
push
and
mov
js
mov
sub
xor
cmp
imul
sbb
pop
push
dec
xor
imul
mov
or
xlat
jb
js
fldcw
iret
lods
add
mov
sbbl
popf
and
mov
stos
aaa
mov
mov
sub
pop
loopne
out
fisubrs
testl
dec
adcb
xor
gs
stos
adc
push
mov
lock
cmp
ret
pop
xor
cmp
mov
pop
movsl
mov
add
mov
mov
sbb
or
sbb
inc
lds
push
insl
dec
popf
push
xor
movsl
inc
test
mov
call
mov
enter
pop
push
xchg
cmp
in
aad
push
aam
cmp
outsb
sub
out
sbb
dec
out
rol
cmp
lcall
ja
ret
in
dec
push
in
push
push
les
cmp
dec
push
test
or
xlat
pushf
pop
rol
jl
imul
xor
daa
mov
cmpsb
cltd
push
push
cltd
ret
ss
adc
out
pop
repz
cmp
push
xchg
call
in
cwtl
in
int
add
jb
adc
imul
pop
pop
or
jg
mov
inc
ds
les
push
cmp
cli
loope
mov
mulb
add
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
in
js
mov
adc
movlps
adc
loope
jl
imull
pop
push
data16
add
xor
sahf
outsb
cmc
adc
addl
pop
or
jne
imulb
ret
leave
ja
add
mov
xor
leave
insb
popa
fstpt
mov
in
mov
add
es
push
sarl
ja
popa
aas
mov
in
loope
push
add
lods
into
dec
iret
test
ficoms
fwait
push
popf
incl
test
insb
add
and
jbe
iret
rol
or
imul
jnp
sbb
add
bound
das
rorb
xchg
out
xchg
sahf
ret
and
adcb
add
sar
dec
and
gs
outsb
xchg
scas
xor
outsl
roll
adc
lods
fsubs
sbb
pushf
iret
orb
cmp
or
jecxz
dec
cs
mov
frstor
stos
and
test
push
adc
sub
pop
mov
dec
cld
push
sbb
in
test
mov
mov
insb
cpuid
jo
inc
lock
ret
imul
clc
fldenv
sbb
xchg
pop
adc
xor
stc
js
xor
shlb
cmp
jbe
xor
in
inc
aad
stc
addr16
push
jmp
in
inc
inc
repz
pop
xor
add
mov
pop
shll
insb
ret
dec
clc
inc
notl
popa
lret
xorb
enter
xor
push
cmp
nop
pop
inc
int
adc
pop
sbb
xchg
push
jnp
mov
sbb
aam
shrb
pop
clc
mov
push
fisubs
push
stos
sub
lahf
dec
jae
scas
stos
inc
add
mov
lea
mov
lock
mov
sbb
repz
test
push
iret
pop
pop
dec
cli
and
es
mov
sbb
jbe
lret
jge
repnz
fdivr
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
jecxz
test
enter
pop
jnp
loopne
add
stos
mov
mov
and
xchg
aam
inc
sbb
into
mov
cmp
icebp
lock
mov
cltd
pushf
and
test
or
xor
pop
in
int
fisubl
fs
outsl
data16
pusha
test
push
mov
nop
pusha
data16
test
shll
or
pop
mov
lods
xor
enter
sahf
sbbl
movsb
cmpsl
lock
xchg
jge
cmp
or
inc
int3
push
mov
cwtl
enter
dec
inc
cmp
jae
ss
and
std
dec
add
push
mov
addr16
inc
mov
inc
xchg
mov
jle
lods
in
pushf
leave
in
push
shll
lret
fildl
fsts
dec
fadds
push
mov
in
jle
movsl
aas
cli
mov
mov
xor
mov
sbbl
sbb
out
out
mov
adc
mov
int
test
push
jp
ljmp
cli
xchg
or
mov
lds
xor
cmpsl
icebp
pop
iret
pop
or
test
aam
bswap
cmp
notl
loope
jnp
mov
xor
sub
sti
es
push
sbbl
shrl
dec
loope
push
mov
addr16
jae
shrb
mov
test
push
cmpsb
mov
push
add
add
push
or
jge
cwtl
out
lahf
stos
inc
movl
mov
pop
lea
dec
ds
call
test
movsb
sbb
jg
push
cwtl
mov
sahf
jl
dec
in
xor
xor
les
adc
jmp
jl
sub
sbb
out
xchg
sbb
push
mov
push
or
test
ret
pop
lcall
dec
aam
inc
pop
push
pop
ret
je
pop
aad
add
jnp
and
jmp
mov
icebp
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
xchg
push
jle
test
adc
movlps
dec
xchg
jns
cmpsb
das
fadds
ret
adc
scas
or
sub
jle
mov
pop
int
xor
sub
in
inc
fs
mov
adc
incb
adc
loop
idivb
testb
push
testb
je
sub
pop
aas
repz
pop
test
mov
dec
push
dec
ret
xor
ret
cmpsb
pop
jl
int3
repz
sahf
mov
sub
aam
imul
inc
add
pop
jg
in
imul
popf
xchg
push
ret
lods
movsl
sbb
and
adc
adc
jp
arpl
xchg
xor
xchg
sarb
loopne
out
es
mov
fnstcw
das
call
lcall
ret
and
iret
mov
dec
rcll
aad
xchg
cmpsl
mov
cmp
sub
dec
sbbl
add
jo
jp
fs
movsb
fisubrl
lret
xchg
push
push
bound
or
sub
and
lea
add
mov
lock
push
inc
stos
xor
negb
push
add
push
lods
lock
test
lds
jmp
push
ds
pushf
xor
lock
push
sbb
ds
mov
ss
out
cmp
inc
icebp
insb
xchg
subl
mov
sbb
arpl
insl
sbb
cmp
fs
enter
xchg
mov
and
orb
je
pop
dec
fnstsw
and
popf
in
jge
es
enter
out
cmpsl
adc
adc
jecxz
xlat
iret
dec
adc
mov
and
mov
test
sub
or
out
shrl
sti
push
sarb
sbb
mov
jne
insb
adc
push
inc
sbb
inc
push
mov
push
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
or
stos
add
adc
adc
sbb
hlt
test
xchg
es
jbe
adc
das
add
sub
push
not
inc
nop
push
lret
and
push
rclb
shll
xchg
ud2
and
or
xchg
mov
rcll
pop
push
mov
rcrb
sub
lret
add
nop
mov
push
cmp
dec
push
cltd
xchg
loop
pop
movsl
mov
ss
sbb
dec
mov
dec
imul
dec
inc
mov
sub
mov
jae
xor
pop
cmc
sbbb
fwait
repnz
jp
fistps
push
out
dec
arpl
mov
cld
in
lods
fstps
cmp
sub
pop
mov
mov
mov
mov
sub
sti
loope
or
shll
shll
or
xchg
mov
dec
ret
cli
jb
dec
mov
fistl
inc
add
out
jno
nop
jbe
mov
in
push
push
dec
loop
mov
xchg
in
inc
rol
or
aas
in
outsl
fwait
adc
loop
add
jns
and
mov
idivb
sbb
popa
jg
add
sub
and
stos
pop
push
xchg
out
mov
mov
jmp
test
mov
stc
fdivrs
cmp
sub
push
lcall
ss
iret
jnp
push
xchg
ds
ret
aaa
cld
mov
dec
in
lods
and
mov
int
add
inc
cli
sub
push
js
fistpl
fnstenv
inc
idivb
iret
test
inc
fisttps
mov
mov
shrb
mov
mov
cmc
inc
pop
mov
mov
test
aam
movsb
popf
sarb
adc
push
xchg
jb
mov
es
cld
mov
outsb
jmp
cmp
sbb
mov
mov
mov
jp
add
rolb
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
sbb
adc
adc
inc
lods
sbb
push
arpl
mov
push
inc
lock
add
inc
adc
xchg
lods
loopne
mov
sub
in
xor
xorl
jno
xor
pop
call
lods
dec
push
fstpl
jae
xchg
scas
gs
fwait
movsb
nop
daa
fdivp
int3
leave
fisubl
sbb
add
mov
inc
mov
jp
cwtl
push
push
adc
lea
pushf
push
into
hlt
sarb
lret
int3
or
jecxz
sbb
lods
repnz
sbb
mov
int
das
inc
xor
lds
pop
push
adc
addr16
or
dec
xchg
rorl
inc
test
movsl
jbe
shlb
ss
shl
ds
cmp
iret
xchg
cs
popf
fstl
fsubrl
cltd
scas
or
cmpsb
cmpl
jge
lods
ss
fnstcw
inc
adc
sbb
dec
add
sbb
test
push
enter
mov
mov
out
mov
push
jnp
xlat
lods
mov
push
mov
mov
add
mov
imul
sbb
add
jg
add
dec
mov
mov
push
pop
into
lahf
movl
jl
rcrb
push
pop
push
mov
dec
xlat
xor
push
mov
dec
pop
test
out
mov
cli
mov
in
aaa
scas
dec
sbb
pop
aad
int3
dec
mov
lret
and
mov
lahf
mov
pop
pop
or
loop
mov
cmp
cmp
mov
and
pop
lret
lods
push
jge
push
outsb
mov
movsl
movsl
jno
add
hlt
adc
cbtw
pop
pushf
mov
mov
pop
inc
lock
push
mov
rcrl
sub
inc
jae
aaa
fisubs
sub
xchg
into
xchg
adc
lret
jmp
mov
arpl
sub
adc
or
gs
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
lods
imul
xor
or
inc
or
mov
or
hlt
loop
xchg
rcll
inc
xor
pop
movsb
add
add
mov
or
lea
inc
inc
cmp
cmp
popa
push
lods
and
ja
inc
stos
fwait
fs
pop
cmp
test
int3
pusha
aad
dec
cs
int
flds
icebp
aas
mov
sbbl
push
mov
test
adc
das
sub
test
mov
cmc
inc
daa
aad
jg
jmp
pop
dec
adc
lret
xchg
sbb
icebp
push
xchg
xor
mov
out
pop
adc
inc
jae
mov
adc
bound
xchg
push
inc
sarb
adc
iret
test
decl
loopnew
xor
mov
inc
lahf
scas
dec
push
ljmp
int3
mov
push
push
scas
xlat
mov
xchg
insb
movsl
inc
jp
out
fldcw
ret
jge
mov
sub
bound
add
dec
pcmpgtd
fbld
push
inc
ja
xor
pop
xor
xorl
push
in
imul
sarl
cmp
or
sbb
lahf
inc
xchg
sbb
sub
cmpsl
std
es
mov
and
aad
jecxz
testb
or
lcall
cmp
mov
shr
rorb
add
pushl
mov
and
je
fimull
mov
add
sbb
add
sbb
incb
shrb
jl
xchg
push
sti
xchg
dec
test
pop
or
lcall
fdivrs
pop
test
das
mov
and
lea
gs
dec
jp
push
push
push
sub
pop
cmpsl
out
rcrl
pushf
pop
mov
into
jae
xchg
xchg
daa
mov
addr16
iret
popa
cld
mov
mov
push
out
imul
xchg
mov
outsl
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
add
adc
movlps
stc
mov
loope
test
mov
rcrl
pop
bound
repz
xchg
outsb
push
or
dec
jnp
call
subb
fidivrl
fwait
std
push
addps
lock
pop
xchg
adc
jmp
shr
inc
sbb
xor
push
aaa
ss
arpl
xlat
nop
add
stos
movsb
pop
out
ret
xchg
enter
sub
dec
repz
call
mov
sbb
mov
inc
mov
fwait
loope
push
das
imul
mov
dec
test
cs
xchg
test
ds
sbb
or
int3
notb
mov
xchg
arpl
mov
mov
leave
ficomps
add
fnstsw
into
fcoml
lds
push
cmc
imul
mov
ss
sbb
push
xchg
push
add
push
pop
jmp
daa
popa
or
jg
pop
jne
imul
pop
aaa
scas
fwait
xor
mov
xchg
pusha
cs
rorl
sbb
test
add
aaa
adc
testb
lods
ds
lret
xor
test
cmp
jmp
hlt
icebp
or
pop
fcoml
mov
pop
cltd
jp
int
pushw
xor
dec
repnz
sub
fmuls
sub
in
sbb
vmread
cld
sub
and
stc
popa
addr16
jnp
mov
lods
scas
icebp
cmp
or
cmp
jno
gs
fidivs
aam
cmp
loopne
cwtl
scas
shlb
loopne
add
loop
lods
scas
dec
je
inc
cmp
adc
push
aaa
jmp
std
stc
in
push
sbb
push
data16
jne
les
jb
xchg
outsl
out
push
cld
pop
and
xchg
xchg
jae
std
bound
add
daa
movsb
int3
mov
inc
sbb
add
cs
cmpsb
cltd
jle
in
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
popl
xchg
adc
adc
out
sbb
shrb
and
fimuls
lahf
mov
inc
and
push
loopne
loopne
push
mov
add
out
hlt
loop
lds
ret
pop
mov
push
hlt
aad
repnz
sahf
jbe
call
push
ljmp
add
iret
sbb
clc
or
push
and
lock
or
mov
xchg
add
cmpsl
add
inc
lods
lret
and
push
pop
mov
inc
sbb
jle
filds
rorl
je
or
int
int3
das
aas
adc
cmpb
std
call
aaa
mov
jmp
pop
jmp
sbbb
mov
push
push
sub
mov
nop
sarb
adc
xor
daa
fisubs
je
adc
pop
test
xchg
fildl
in
inc
xchg
out
lahf
aad
repz
jnp
movsb
fs
xor
mov
test
movsl
sbb
sub
sbb
mov
add
and
xchg
or
pushf
sub
js
xchg
arpl
pop
push
cli
or
dec
push
in
mov
jne
dec
insb
sub
add
xchg
int3
ret
push
jmp
dec
stos
add
xchg
test
mov
out
idivl
mov
cmp
pop
sub
fistps
add
dec
test
lods
shrl
mov
adc
xchg
repz
sbb
add
xchg
lds
push
pop
cld
lcall
dec
data16
pop
test
cmp
cmp
in
in
sub
call
sarb
ljmp
lods
shlb
xor
mov
dec
dec
das
xsha1
cmpsb
push
push
dec
test
data16
push
mov
in
xor
cli
outsb
leave
sub
pop
and
test
pop
insb
data16
mov
push
sbb
jne
sub
sub
test
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
xchg
lcall
movlps
xchg
xor
sub
or
gs
pop
int
pop
inc
loope
ficoms
lret
xchg
sub
fimuls
mov
pop
and
lods
pop
xchg
fistps
roll
and
mov
mov
and
pop
scas
movsl
and
fisubrl
pop
mov
cmc
xlat
fucomi
jnp
cmpl
jno
xchg
jp
push
cmpb
sub
or
xchg
mov
loop
mov
jmp
ds
cmp
sbb
ret
xor
mov
sub
jle
cmp
and
jns
out
pop
pop
ret
dec
dec
xor
cmp
sub
repnz
mov
mov
lahf
decb
and
daa
mov
aam
mov
or
xor
and
mov
adc
out
clc
pushf
xchg
push
stc
sbb
icebp
sub
push
fxtract
push
pushf
shlb
in
or
dec
aad
mov
shll
sbb
inc
bound
mov
inc
xchg
pop
mov
fdiv
enter
sahf
addb
outsb
outsl
clc
mov
leave
adc
sbb
and
or
push
arpl
push
jno
fcompl
not
test
push
pop
pop
stc
jne
dec
cmpb
jns
cltd
les
cmp
loope
inc
xor
fs
sub
in
cmp
pop
rcl
xor
cmc
out
sub
int
into
push
mov
std
dec
popa
ja
pop
pusha
pop
add
icebp
lods
subb
loope
addr16
rorl
dec
aam
enter
jg
and
lahf
jmp
cli
xor
sbb
dec
dec
jecxz
cwtl
jnp
inc
aam
stos
enter
mov
adc
inc
inc
negb
push
mov
mov
mov
jl
jne
stos
in
pop
lds
push
push
inc
and
pop
ds
test
sarb
orb
add
scas
and
cli
and
cmp
repnz
rclb
jmp
add
mov
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
shll
data16
mov
adc
insb
repnz
mov
dec
push
push
aad
adc
ljmp
jno
add
inc
and
cwtl
or
out
mov
dec
xchg
pop
test
pop
and
xchg
int3
shlb
pop
repnz
inc
aam
add
mov
fs
subl
inc
test
lret
dec
cltd
pop
int
aad
cwtl
dec
daa
shrl
inc
cmp
loop
aam
add
add
in
dec
xor
lcall
jmp
xor
cmpl
fidivrl
inc
sub
jbe
movsb
push
adc
int3
into
out
addr16
into
fimuls
mov
push
and
movsb
lret
pop
jbe
dec
pop
out
scas
lods
lock
mov
insb
cmp
pop
ret
sti
mov
xchg
call
push
or
or
loopne
jg
xor
push
test
cld
test
sub
shrl
inc
cli
sbb
dec
push
pop
and
xor
and
jns
ss
popa
inc
cmovp
sahf
cld
and
xor
add
test
push
pop
jmp
femms
cmp
xchg
mov
lahf
xor
clc
ja
xchg
insl
mov
jecxz
mov
and
pop
add
aad
xor
imul
xchg
enter
jb
push
int3
stos
in
and
mov
ss
inc
addr16
xchg
lock
lods
aad
in
pop
mov
mov
mov
aad
push
push
jns
daa
push
inc
lock
sbb
dec
xor
inc
lret
xchg
cmpsl
test
inc
xorb
xor
fistpl
addr16
or
push
pusha
push
push
push
inc
push
jo
movsl
out
add
orl
pop
xchg
or
pop
in
xor
xchg
addr16
call
add
add
jne
int3
jbe
in
xchg
outsl
loope
mov
cwtl
inc
loop
sahf
into
stc
stos
mov
mov
jbe
test
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
dec
popf
mov
xchg
push
dec
test
xlat
cmpb
adc
out
cmp
cmp
pop
ja
roll
add
push
and
in
insl
inc
movsl
out
jne
and
mov
ffree
leave
sub
cmpsl
addb
leave
ja
xor
add
outsb
pushf
mov
mov
movsl
push
xchg
xchg
mov
sbb
shrl
push
aad
int
lds
bound
mov
xchg
inc
hlt
sub
mov
rolb
mov
inc
jne
jle
fxch
repz
movsl
leave
sub
xchg
ja
cmp
inc
dec
jae
das
or
ss
in
jmp
jb
jb
hlt
rcll
lret
dec
jae
imul
jge
sbb
mov
lcall
and
hlt
xlat
ret
xchg
outsb
fs
lods
outsl
mov
popf
sub
repz
clc
mov
cwtl
outsl
pop
loopne
jbe
sbb
adc
orl
mov
push
ljmp
fidivrl
dec
arpl
dec
in
xchg
jo
movsb
loopne
fnstsw
jecxz
jnp
mov
cmc
jno
mov
mov
stc
and
jb
loope
xchg
jno
into
jge
fsub
fstps
jno
xchg
add
lock
lret
mov
pop
unpckhps
push
mov
test
out
xchg
shrb
sub
jo
cli
ret
in
jmp
out
push
sub
sahf
sub
addl
xor
aad
ljmp
dec
mov
repnz
shr
jno
cs
test
jmp
xor
jne
or
out
lea
cld
stos
outsl
and
xor
or
hlt
pop
xchg
decb
bswap
ret
in
je,pt
push
loope
shl
mov
inc
jle
inc
cli
sbb
jp
aaa
jnp
jo
cmp
pop
lret
je
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
xor
lods
mov
movlps
push
call
xor
push
cmp
int
decl
popf
add
lret
cmp
sahf
pop
push
aam
pop
mov
jnp
sub
mov
ds
fisubs
mov
sub
dec
xchg
jmp
xchg
bound
pop
mov
fwait
pop
lcall
stos
rorl
adc
mov
mov
scas
xor
xor
adc
and
jbe
fs
in
or
xor
aam
mov
cmp
out
inc
or
sbb
xchg
ljmp
pop
xchg
pop
jbe
pop
mov
ljmp
les
outsb
mov
lock
add
add
test
into
xchg
adc
bound
addb
js
sbb
and
mov
mov
pop
rcrl
jge
xchg
and
cwtl
pop
pop
inc
test
jnp
aad
cmp
dec
div
xor
lea
adc
stc
inc
xchg
ret
adcl
adc
xor
lds
test
add
pop
jns
ror
pop
and
sbb
movsl
push
js
movsb
sub
fwait
movb
mov
xchg
gs
ljmp
add
cs
into
imul
lcall
pop
daa
inc
andl
mov
test
ja
je
lods
lods
or
cmp
xor
leave
pop
fildll
stos
mov
rcl
push
sub
xchg
jecxz
cmpl
xchg
xorl
es
sub
shlb
sbb
js
cmc
shll
add
into
pop
inc
xor
push
jns
insb
fwait
sahf
sub
in
in
frstor
pusha
mov
sbb
out
cmc
inc
sahf
sbb
and
ds
jno
icebp
dec
stos
push
add
xor
sbb
push
sti
ja
roll
and
sbb
pop
outsb
popf
mov
fs
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
push
and
adcb
add
ficoml
sbb
ret
dec
push
add
int3
mov
in
stc
sub
sti
mov
sub
dec
fs
mov
aas
ja
or
mov
or
dec
inc
scas
fwait
lahf
xchg
stc
xchg
sar
rclb
aam
decl
mov
outsl
mov
sub
mov
idiv
clc
loopne
pop
loopne
jg
out
sbb
scas
sbb
or
pop
cld
mov
les
xchg
clc
pop
daa
arpl
or
or
popa
fadds
sahf
je
xchg
leave
mov
dec
stos
repz
dec
nop
fimull
mov
sbb
mov
dec
fcomp
sub
adc
sub
addr16
in
sbb
push
fildl
pop
mov
cmc
test
inc
and
xchg
outsb
ja
jo
mov
in
test
imul
jg
mov
in
cmp
stos
mov
xchg
iret
mov
rcl
dec
es
aam
lods
sbb
mov
mov
das
dec
aad
gs
stos
int
scas
pop
ja
pop
or
in
sub
push
jno
orb
and
hlt
lock
adc
shlb
add
adcl
mov
mov
jl
inc
movsb
inc
or
sub
inc
fs
xchg
lret
pop
ficoms
adc
stc
inc
in
aad
jle
inc
icebp
out
shl
sbb
add
inc
xchg
pop
mov
or
mov
xor
ljmp
pop
popa
mov
lidtl
fildll
in
fstpt
xchg
jbe
inc
xchg
inc
cwtl
cmpsb
or
mov
jl
test
push
insl
xchg
loope
mov
sub
data16
mov
sub
cs
xor
sbb
jne
push
in
lret
jge
adc
dec
cld
mov
cmp
mov
add
sbb
push
fldcw
inc
mov
xor
ljmp
inc
jne
cli
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
jns
mov
or
adc
movlps
iret
push
lods
loop
hlt
dec
out
orb
jo
in
dec
mov
popa
int
jp
sub
fldl
jno
xchg
mov
and
popa
and
mulb
andb
out
sahf
ret
add
iret
jns
xor
and
aad
xor
in
sti
pause
push
addr16
stc
inc
or
push
xlat
mov
push
jecxz
xchg
mov
inc
movsb
int3
and
or
and
hlt
scas
or
dec
push
add
out
pusha
push
in
mov
pusha
rol
and
sub
add
outsl
push
xor
gs
push
pop
lds
xchg
xchg
pop
fdivrs
mov
fs
add
mov
pop
push
dec
adc
jge
aam
xchg
push
out
jp
les
fcoml
idivl
dec
lods
out
or
push
and
in
and
mov
push
xchg
jae
mov
xchg
push
iret
inc
jo
sub
sahf
fistpl
movsb
cmp
outsb
jns
jle
mov
mov
xor
daa
lahf
mov
hlt
mov
addr16
int
cmp
cmp
rcrl
push
test
inc
jae
or
clc
xor
stos
inc
sahf
xchg
cmp
lea
jg
sahf
jmp
inc
add
inc
imul
insl
or
rcrl
fadds
loope
xor
jo
dec
jns
jnp
and
scas
adc
sub
push
mov
pop
int
outsb
mov
push
call
mov
lcall
xchg
icebp
cmc
and
jecxz
mov
rcrl
mov
cmp
sarl
mov
dec
jge
loop
cmp
and
inc
dec
inc
cs
and
daa
cmp
test
pop
mov
cmp
das
hlt
lcall
mov
and
cld
xorl
fcoms
xchg
mov
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
push
lcall
movlps
pop
inc
add
mov
sbb
out
mov
dec
inc
adc
jnp
xchg
rcrl
sbb
jae
fcoms
sbbb
mov
and
sarb
dec
mov
into
push
inc
fdiv
lahf
lods
cmc
jecxz
cmp
popf
mov
inc
inc
xor
lret
int
lret
imul
test
aam
cmp
pop
dec
xor
or
push
les
out
pop
push
push
xchg
out
lahf
mov
jnp
inc
les
pop
dec
jge
xchg
loope
iret
lock
jae
mov
cmp
xor
dec
outsl
pop
xor
sbb
mov
push
ja
mov
std
cli
divl
in
dec
repnz
xor
add
sbb
mov
stos
xchg
enter
jbe
sahf
jmp
orl
stc
ja
xor
scas
cli
sbb
xchg
js
int3
and
jmp
cltd
sahf
pop
in
or
lret
sub
rcrb
push
xchg
adc
movsb
adc
cmp
in
iret
clc
test
add
pop
push
sub
fldl
lcall
ja
xchg
iret
pop
xchg
icebp
lahf
jge
stos
outsl
dec
cmp
jbe
sub
fcomip
dec
dec
mov
jne
inc
test
push
notl
xor
mov
cmp
sub
stos
xchg
xchg
popf
scas
push
aad
int3
loopne
adc
mov
and
inc
pop
mov
fsubrs
push
inc
cld
repnz
popa
and
pop
fistps
sbb
push
std
jmp
int
shrl
js
mov
ds
xchg
enter
faddl
fmul
mov
lea
push
lods
sahf
lock
dec
ja
jecxz
push
cmp
push
push
into
xchg
xchg
dec
mov
mov
fnstsw
mov
sbb
fsts
in
xchg
push
mov
stos
out
pushf
movsb
xor
fs
ds
daa
adc
inc
outsb
xlat
xorb
insb
fistpll
mov
repz
repnz
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
sub
js
jo
adc
movlps
adc
test
push
or
stc
adc
in
mov
xor
movb
mov
ret
mov
or
enter
rclb
stos
xlat
dec
add
add
sar
lret
push
mov
ss
mov
xchg
rclb
dec
nop
jg
loope
jmp
push
pop
cmp
add
or
das
fcoms
in
in
cmp
and
xor
das
lret
sbb
out
in
leave
dec
adc
lods
or
and
push
sbb
sbb
adc
jns
js
sarl
and
push
ds
add
fsubr
inc
sub
inc
loope
loop
jbe
lods
loopne
testb
lret
lret
mov
push
xchg
hlt
xor
in
rorb
add
xor
fmuls
stc
dec
das
cmp
inc
outsl
mov
pop
sub
fsts
ljmp
mov
sbb
icebp
clc
mov
loop
lret
in
xor
arpl
jne
outsb
jmp
ror
out
inc
mul
inc
lods
outsl
xchg
inc
adcl
sub
sub
rcll
inc
push
adc
insb
or
xchg
lds
inc
mov
sbb
hlt
mov
push
in
xorb
sub
lds
lods
pop
and
iret
mov
imul
and
mov
push
push
xor
or
push
pop
dec
or
jae
repz
cmc
fstl
in
push
sbb
add
push
mov
dec
cwtl
sub
dec
mov
sub
push
sub
int
jecxz
fs
pop
adc
ja
adc
sbb
push
clc
popf
in
stos
push
out
movsl
inc
mov
jl
jne
lret
ret
inc
lods
das
pop
aam
out
ja
in
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
repz
and
es
adc
adc
ljmp
outsl
cmp
jo
fdivs
pushf
cmp
pop
inc
insl
cltd
out
ds
ret
cmp
and
subb
push
adc
stos
push
outsl
in
lea
mov
adc
jnp
xor
jmp
xor
mov
jmp
movsb
pop
adc
jnp
arpl
cmp
fbstp
sub
pop
incl
scas
mov
jge
and
out
popf
fdivs
repnz
mov
and
add
addl
pop
and
js
cli
jmp
dec
lods
or
jl
insb
or
pop
adc
inc
add
mov
mov
out
sbb
in
dec
push
test
fsts
xlat
mov
call
xchg
fsubl
xchg
loopne
rclb
jl
stos
mov
mov
push
cmp
sbb
sahf
xor
out
inc
xor
stos
jno
andb
push
clc
test
lahf
les
mov
lods
pusha
out
in
or
popa
xlat
jmp
mov
mov
push
adc
sub
mov
add
adc
out
xchg
hlt
pop
fcomps
fldenv
inc
call
and
jmp
sahf
movsl
clc
aad
je
insl
notl
popa
scas
icebp
push
testl
insl
adc
leave
test
fstpl
test
xchg
sbb
cmp
push
addr16
stos
mov
pop
jae
fildll
jle
jns
jl
sbb
mov
xor
pop
mov
into
sbb
pushf
imul
hlt
mov
dec
in
std
rolb
out
cs
mov
pop
loopne
pop
pop
adc
pop
in
mul
shrl
fwait
fs
shr
sbb
rorb
xor
push
stos
adc
les
fsubl
mov
pxor
fwait
bound
insb
lret
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
subb
push
adc
mov
loope
sub
out
filds
and
testl
sbbl
inc
sbb
loopne
mov
cli
fwait
loop
jp
out
adc
cltd
jnp
add
iret
inc
cltd
icebp
imul
rcrb
mov
cwtl
sbb
insl
int3
dec
and
jnp
mov
inc
fscale
fwait
add
push
push
sub
ljmp
repz
xchg
fisubrs
fcomp
sub
xchg
in
mov
sub
leave
cmp
and
push
sbbl
data16
ret
xor
fistpl
push
push
mov
dec
xor
test
pushf
jb
incl
orl
push
test
and
addb
inc
xor
adc
iret
ja
xlat
mov
clc
inc
cmp
push
push
js
push
loopne
xor
and
xchg
xor
icebp
mov
sahf
repz
inc
adc
mov
enter
out
mov
cmp
xorb
jo
xchg
xchg
jnp
inc
out
out
shl
inc
movsb
sbb
fldenv
sbb
fisubs
stos
rcrb
dec
dec
rorb
dec
inc
fldl
xor
stos
jo
mov
insb
add
js
push
daa
xchg
sub
jo
pop
enter
pop
mov
out
lcall
or
bound
jne
test
cli
pop
dec
push
inc
adc
cmp
xchg
jae
pop
ds
rcr
ss
jg
negl
push
jbe
mov
fwait
das
mov
adc
mov
inc
push
shlb
sbb
jecxz
out
cmpsb
push
test
js
lcall
inc
and
inc
addr16
xor
push
adc
pusha
and
cmp
inc
xchg
in
sub
cmp
xchg
in
imul
mov
stos
dec
loop
cld
dec
mov
xchg
call
lret
xor
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
pop
lods
lea
enter
or
adc
lret
into
cmp
mov
push
sbb
test
mov
xor
inc
test
lahf
seto
inc
ljmp
aad
fucomp
imul
add
orb
xchg
push
inc
inc
jne
arpl
repnz
or
out
mov
push
add
int3
xorl
mov
ret
pop
inc
movsl
lods
push
pop
aas
popf
fdivl
sahf
cld
mov
cmpb
mov
and
push
xor
pop
push
xchg
stos
mov
daa
pop
aaa
subl
les
cmp
test
add
push
push
jnp
sti
ret
mov
lret
sbb
sbb
pop
outsb
sub
xor
sahf
mov
out
enter
mov
pop
int3
cmpsb
ret
push
mov
bound
mov
pusha
add
cmpsb
inc
xchg
adc
and
jle
roll
mov
add
and
mov
arpl
sub
sbb
pop
and
add
jp
sub
pop
rcll
negl
mov
lods
push
jg
lret
inc
leave
outsb
sub
movsb
mov
je
sbb
stc
ja
sub
pop
sar
add
cli
xor
mov
push
push
imul
push
out
mov
clc
dec
mov
sbb
inc
add
fstpt
pop
xchg
and
xchg
cmp
push
sbb
sahf
cmp
outsb
fwait
xor
sub
jl
out
and
xchg
inc
pop
bound
out
jg
ret
pop
pop
fiaddl
inc
jbe
aam
push
jo
lods
pushf
clc
loop
cmpsl
je
sbb
mov
scas
dec
sub
je
pop
mov
test
fwait
mov
or
inc
test
push
out
mov
mov
jp
add
adc
and
fmull
xchg
cmpsb
outsl
push
mov
imul
mov
subb
ds
xchg
test
stos
ds
dec
lods
lods
lods
cs
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
pop
sbb
loopne
dec
aaa
xchg
fwait
int
adc
scas
aas
std
pop
roll
add
shll
dec
shll
xchg
or
mov
rol
push
aaa
xor
fwait
pop
jp
sbb
iret
ret
push
sub
ret
sti
cwtl
imul
insb
lahf
iret
xchg
fisttpl
shrb
xchg
jno
shlb
mov
testb
jmp
mov
ss
lods
popa
jo
push
pop
dec
in
out
ljmp
aam
push
mov
jmp
inc
inc
test
es
iret
push
pop
cli
test
dec
lret
cmpsb
pop
loopne
mov
mov
dec
xchg
push
movsl
fwait
out
pop
shrl
out
xor
fistpl
std
xchg
xlat
mov
cmp
jae
inc
dec
out
mov
cmp
fldl
cmpsb
dec
sub
loope
push
jb
hlt
ffreep
inc
sub
orl
sarl
mov
xchg
bound
mov
outsl
orl
lock
sbb
mov
jl
mov
mov
mov
fwait
mov
enter
mov
mov
and
adc
mov
pop
cmp
jle
movsb
movb
aaa
mov
mov
mov
push
aaa
fdivrl
jne
lods
stc
jl
xchg
daa
push
lret
lea
mov
inc
ja
adc
dec
push
jle
dec
mov
pop
mov
xor
cld
push
mov
mov
leave
pop
xchg
and
popa
aad
in
loope
push
jns
jno
out
cmp
pop
shll
daa
sub
lock
mov
das
cmp
push
in
pop
adc
mov
test
mov
mov
or
js
inc
push
and
xchg
mov
ja
or
cmpsb
add
mov
mov
add
pop
insl
cmc
js
mov
jo
jg
fwait
enter
pop
sub
cwtl
ret
scas
cmpb
incl
add
add
mov
inc
test
add
add
inc
add
add
jbe
add
jnp
bound
ss
mov
mov
cmc
pop
adc
adc
jp
loop
mov
or
rcr
lahf
cmpl
ss
cs
orb
ja
or
and
inc
in
mov
dec
adc
shrl
loop
sbbb
inc
dec
pop
dec
sbb
mov
add
inc
into
mov
xor
lds
out
xchg
pop
scas
je
sti
bound
fcoms
mov
ja
mov
jno
rorb
dec
mov
push
sbb
xorb
pop
aas
xchg
addr16
mov
addr16
mov
out
int3
inc
jmp
mov
mov
aam
push
das
lods
adc
bound
push
push
push
pop
fxch
sub
jae
add
mov
add
popa
enter
push
dec
enter
sub
jo
cltd
in
out
insb
movsl
outsb
sbb
mov
pop
lods
call
pushf
adc
lds
clc
loop
test
fldl2e
int3
fisubl
jo
mov
fcomps
gs
sti
dec
pushf
fptan
insl
push
push
mov
fwait
push
outsb
push
inc
outsb
pop
arpl
push
fimuls
inc
inc
jbe
xor
insb
mov
int3
pop
push
and
insl
mov
lret
ret
jae
mov
mov
fisubrs
dec
jmp
lret
and
dec
or
xchg
dec
enter
pop
rcr
jne
test
mov
call
mov
outsb
xchg
je
sahf
imul
call
dec
xchg
in
cmpsb
in
es
or
dec
shr
dec
xchg
mov
loope
pop
and
inc
repz
lods
daa
add
cmp
icebp
cmc
fldcw
and
xor
pop
xor
fisubl
dec
in
pop
push
jg
push
add
adc
mov
in
fdivrp
dec
faddl
mov
mov
lahf
in
inc
mov
es
cmp
mov
mov
sbb
or
mov
mov
and
xchg
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
lods
lods
out
stos
pop
adc
adc
es
je
ss
pop
jnp
xor
jbe
fwait
jl
xor
test
push
dec
fnstenv
and
ds
mov
xchg
das
xchg
movsl
jne
xor
pop
mov
bound
es
adc
ret
daa
ljmp
sbb
mov
push
lcall
iret
mov
data16
jb
lahf
mov
xor
push
in
ljmp
jne
pop
dec
gs
fists
lds
pop
ret
incl
in
insb
jne
mov
dec
cmc
fidivrl
rcrb
and
popf
jl
loop
pop
js
movsb
mov
pusha
mov
adc
movlps
jne
cmp
mov
and
or
aas
nop
jb
lret
cmp
mov
into
pop
int
into
sub
push
loop
xor
add
mov
and
int
pop
dec
inc
push
xor
xchg
inc
mov
lret
sub
rorl
scas
mov
inc
dec
lea
mov
out
stos
outsl
loop
cs
out
out
orb
inc
shld
mov
dec
xor
enter
sub
push
adc
enter
sbb
mov
inc
adc
icebp
and
or
loopnew
pop
das
repz
dec
cli
pop
ret
dec
mov
lret
dec
cltd
es
idivb
fistpll
push
dec
dec
movsl
lret
scas
movsl
mov
inc
xor
adc
sbb
dec
loope
fwait
sti
in
dec
lods
andb
vmwrite
mov
mov
int
js
dec
add
or
rorb
stos
and
fwait
and
pop
xlat
mov
imul
adc
es
and
pop
imull
dec
inc
sbb
push
sub
iret
nop
filds
std
cmpsl
js
cmp
sbb
int3
and
jns
or
pusha
fists
loope
adc
sbb
add
jns
enter
aam
xor
stos
jp
shll
test
aas
add
loopne
jl
cmp
arpl
jge
aad
in
stos
push
add
adc
out
push
mov
add
sub
or
out
sub
and
cli
aam
mov
out
mov
out
mov
push
mov
jbe
mov
mov
jmp
xorb
cs
pop
lds
loopne
icebp
jle
arpl
mov
push
push
daa
or
fildl
out
and
fisttps
inc
xor
dec
mov
ds
pushf
lods
sbb
mov
jl
ljmp
push
cmc
dec
push
ljmp
cltd
nop
push
mov
jo
mov
fldcw
mov
or
mov
fistps
cld
nop
sbb
lcall
movsb
leave
scas
fists
inc
and
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
push
push
adc
adc
sbb
mov
inc
xchg
push
pop
push
dec
push
mov
mov
rcll
add
aaa
mov
das
out
roll
cwtl
pop
and
sub
push
mov
repnz
int
mov
clc
sbb
add
loop
add
mov
cltd
pop
outsl
sub
pop
pop
hlt
jle
xchg
cwtl
negl
add
cmpsl
jg
lods
jno
push
jg
fisubrs
ljmp
mov
push
ret
divb
stc
addr16
mov
testb
incl
out
sti
xchg
inc
pand
sahf
scas
mov
int
cmp
jno
jo
or
xor
fdivrl
jns
cli
sbb
jne
jmp
fs
lahf
cmpsb
int3
sub
jae
sub
into
pop
cli
std
mov
mov
pop
inc
mov
dec
mov
inc
fwait
insb
rcr
dec
mov
mov
adc
pop
xchg
sbb
sub
jge
jg
shll
lds
rcrb
or
mov
pop
sbb
adc
dec
adc
adc
add
loopne
push
inc
fcmovb
push
and
rcl
int3
arpl
mov
ret
add
push
sub
scas
push
pop
insl
imul
and
ret
pop
test
add
clc
inc
adc
add
xchg
mov
adc
loop
imul
cmp
adc
add
sub
mov
push
es
xchg
shlb
scas
lahf
jecxz
and
stc
adc
mov
movsb
out
mov
and
adc
push
jecxz
cmp
jbe
jecxz
pushl
adc
iret
sbb
dec
add
movsb
test
cmpb
lea
mov
stc
les
and
imul
stos
fs
jo
mov
imul
xchg
gs
loopne
lock
orl
pop
in
popa
push
mov
pop
add
mov
lcall
cmp
and
imul
test
and
lahf
adc
cld
outsb
pop
and
fucomip
shlb
cmp
mov
jo
daa
testl
push
xchg
cmp
lds
jl
adc
sbb
mov
xchg
mov
inc
dec
mov
sti
insb
inc
pop
hlt
dec
cs
iret
imul
xchg
or
push
sbb
icebp
adc
or
roll
idivw
loope
or
xor
shr
ljmp
std
or
dec
push
imul
nop
das
pop
daa
inc
out
inc
les
stos
daa
mov
jno
outsl
xchg
mov
shll
lcall
incb
cld
fdivs
mov
cmpsl
scas
in
mov
je
dec
loop
xchg
jb
mov
ret
fnstenv
and
outsl
stos
and
clc
enter
or
into
fs
outsb
add
push
cmp
sub
das
movsl
lret
add
cmp
pop
in
mov
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
