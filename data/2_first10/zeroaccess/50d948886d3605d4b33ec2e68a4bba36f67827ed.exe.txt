push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
fwait
jle
jle
cli
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
sarb
jmp
or
bound
pop
push
lock
fistps
dec
int
and
mov
jmp
dec
addb
pop
shrl
scas
jecxz
inc
xchg
xor
jle
pop
add
cmp
loop
push
fwait
in
cwtl
in
shlb
clc
shrb
test
mov
dec
adc
cmp
pushf
and
adcb
dec
inc
inc
push
call
cmp
add
dec
sbb
mov
pop
adc
fdiv
ficompl
lock
mov
and
or
jge
mov
scas
sbb
mov
pop
sbb
xchg
xchg
xor
data16
movsb
movsb
orl
mov
test
hlt
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
dec
popf
in
cli
jg
jle
jg
jle
cmpl
popa
xchg
fstl
xor
sarb
dec
or
jp
aam
jae
rorl
dec
and
test
fldenv
outsl
test
pop
mov
or
add
add
rcll
aam
dec
shll
movsl
addb
xor
add
bound
xor
repz
fisttpl
push
addl
xchg
sbb
pushf
mov
push
aam
orb
scas
add
into
rol
aad
mov
inc
sub
add
mov
jo
mov
mov
xor
mov
popf
cmp
shrb
les
ds
pop
out
mov
jle
mov
ror
sahf
fiadds
jp
mov
leave
push
jle
mov
xor
mov
out
cmp
inc
cltd
jo
in
mov
lock
cmp
pop
pusha
jge
mov
mov
mov
push
jmp
push
jle
cmp
mov
aam
cli
push
loop
add
push
jge
xchg
jo
call
inc
mov
adc
xlat
adc
xchg
lea
popf
mov
jnp
fisubrl
xor
mov
rcll
mov
test
xchg
jp
lcall
push
xchg
insb
dec
xchg
out
or
inc
add
neg
jmp
cli
fcompl
jno
cmp
sbb
cli
jg
jle
inc
adc
sar
repz
inc
pop
dec
mov
sbb
pusha
lahf
icebp
push
sti
sub
xor
cs
and
lods
loopne
push
lods
pushf
int3
xchg
sbb
add
add
adc
mov
test
or
sub
and
xlat
repz
inc
fidivrs
stc
jns
add
pop
test
adc
fldcw
mov
clc
xor
cld
movsl
mov
add
or
mov
add
dec
imul
aaa
push
push
imul
dec
xchg
stos
mov
inc
push
repnz
pop
jo
mov
icebp
out
clc
out
inc
or
adc
cmpsl
pop
cmp
sbb
repz
inc
or
ds
mov
fildl
xchg
fnsave
push
int3
mov
pushf
lods
mov
add
or
inc
add
adc
lds
mov
and
jo
and
sub
xor
pop
fistps
fbstp
jg
mov
jbe
leave
out
sub
jmp
xchg
cmp
inc
xchg
aas
cmp
xchg
fisubrs
jl
adc
mov
push
test
cld
and
jecxz
add
jp
ljmp
mov
sbb
shll
repz
call
lods
ret
jl
sub
repz
fsubrs
sub
in
push
or
cld
inc
flds
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
jle
cmpb
cli
jg
jle
fistpl
loope,pn
cli
mov
dec
sub
leave
jnp
pop
lret
cmp
cmp
cwtl
jmp
xor
and
mov
sbb
push
cmc
cmpsl
loope
aam
jo
cld
push
push
fistpll
xor
mov
stos
jg
sub
and
scas
rclb
and
xor
sbb
and
mov
mov
pop
adc
sub
mov
iret
push
adc
dec
jmp
pop
in
in
sbb
test
pop
lods
dec
jge
lods
push
add
adc
scas
mov
out
scas
xor
push
cwtl
mov
mov
sbb
loop
dec
outsl
lret
nop
in
mov
xor
in
int
adc
out
in
std
repz
add
push
cmp
pop
inc
sahf
loopne
and
jmp
das
pop
mov
ret
sbbl
in
call
loop
mov
mov
out
cwtl
shll
push
in
imul
push
mov
pushf
std
mov
bound
add
add
shld
cmp
mov
sub
in
push
adc
adc
leave
jnp
inc
shrb
and
jb
std
jb
fbld
jno
jg
xchg
negl
inc
lea
subl
in
scas
pop
lods
mov
pop
jecxz
add
sub
ja
pop
mov
mov
mov
jmp
xchg
mov
push
jo
adc
dec
pop
mov
loop
js
jle
jg
jle
nop
sub
jge
pop
dec
or
fucomip
push
outsl
pop
andl
push
inc
sbb
sti
outsl
int
imul
lea
cmp
or
dec
sar
testb
push
lods
cmp
jmp
fdivrs
ds
repnz
pop
sti
cmp
adc
or
das
cmpsb
dec
divb
dec
pop
inc
loop
mov
xchg
push
push
mov
inc
in
and
inc
add
arpl
xor
fwait
in
sbb
pop
adc
es
test
repz
addr16
push
jp
jno
mov
cwtl
leave
int
lret
or
js
adc
cwtl
inc
insb
pop
xlat
jge
push
mov
mov
cmp
jne
cmpsl
mov
insl
cmpsl
jns
cmp
jecxz
cmc
pop
std
ficoms
and
push
or
mov
pop
in
orl
test
push
xchg
or
movsb
jg
ds
or
jmp
sbb
cmp
xchg
mov
mov
shrd
adc
mov
xlat
fisttpll
inc
ret
jbe
push
lods
and
out
push
sub
jmp
sub
mov
in
mov
sub
mov
inc
xchg
test
mov
jp
xchg
pop
sbb
jg
sbb
xor
loop
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
xor
jle
cli
jg
jle
mov
fsts
xor
andb
inc
mov
push
mov
add
xchg
sub
js
mov
repz
jecxz
push
cmp
clc
rcr
xchg
push
aaa
mov
imul
fisubrl
cs
flds
nop
insb
mov
push
call
cmpsb
in
xchg
mov
pop
jle
jle
mov
ja
sub
inc
push
daa
sbb
mov
sbb
dec
int3
xchg
sub
ret
in
das
aas
jne
jno
mov
xchg
cmp
rcll
jb
btr
dec
xchg
dec
aas
and
sub
jne
sbbb
sub
cmp
jecxz
mov
inc
popa
movsb
aam
xchg
jle
mov
add
fdivrs
jl
xchg
aaa
mov
out
adc
cmp
imul
push
frstor
ss
repz
adc
mov
int
xchg
cmpsb
aam
leave
mov
xor
shl
mov
dec
add
xchg
mov
jne
cmp
xchg
pop
mov
cmpsb
dec
inc
aas
add
push
popa
xor
xlat
loopne
dec
jo
shrl
mov
int3
jp
xor
add
jl
add
cmp
dec
mov
push
jl
gs
adc
mov
xchg
rcll
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
xor
pop
jle
cli
jg
jle
loop
cmp
test
pop
fldl
arpl
xlat
jmp
jo
shr
jae
les
das
fcomi
adc
imul
daa
or
push
out
movsl
adc
in
sbb
push
sub
incb
cli
jecxz
stos
fs
and
call
mov
jg
dec
pop
cmpsl
subps
add
sti
push
pop
cli
jb
lahf
and
bound
push
mov
sub
cmp
mov
imul
sti
stos
push
mov
shl
ja
cwtl
inc
lock
cmp
pop
sub
stos
adc
add
xor
or
mov
std
mov
pop
mov
mov
add
gs
jae
cmc
imul
and
add
out
lds
call
shrb
xchg
cltd
xchg
fyl2xp1
sahf
adc
mov
sbb
sbb
mov
xchg
hlt
das
xor
pop
dec
mov
mov
jbe
out
or
inc
xchg
jecxz
adc
or
sub
inc
shll
add
xor
xor
ljmp
fimuls
or
mov
sbb
inc
lret
xchg
push
jae
insl
loop
test
xorb
push
mov
pop
pushf
sbb
dec
fstpt
sub
daa
xor
test
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
in
push
xor
in
xchg
pop
xorl
ss
sub
sub
insb
fdivrl
loopne
nop
lret
cmp
inc
inc
pop
add
clc
add
incl
lods
fsubrs
xor
push
cmc
shrb
jbe
ds
fstps
pusha
in
mov
lds
mov
sbb
adc
lods
pop
cwtl
mov
xchg
std
movsb
mov
loopne
std
lock
aaa
ret
mov
bound
lds
stos
sbb
scas
jb
adc
xor
enter
and
ljmp
mov
hlt
ds
sub
or
inc
sbb
rorl
push
les
pop
fcmovnu
popf
push
cmp
push
popa
sub
inc
addr16
or
fisubs
xchg
or
out
and
push
mov
dec
lret
mov
fcoms
movsl
cmp
cmp
cmp
jae
adc
fwait
xchg
mov
sbb
dec
shll
cmp
and
lock
pop
add
and
outsb
pop
push
jmp
push
out
xchg
mov
mov
push
sbb
jb,pt
xor
sbb
ss
jl
icebp
push
stos
adc
loope
les
xchg
mov
adc
arpl
aad
jmp
cmpsb
jmp
ds
stc
dec
loop
lahf
jns
movsb
adc
mov
mov
mov
add
jmp
cmc
dec
and
jno
push
mov
popa
mov
nopl
jle
cli
jg
jle
jg
mov
unpckhps
arpl
cld
add
jne
or
pushf
shll
xchg
xchg
dec
push
sub
daa
sbb
mov
add
imul
int3
test
ss
in
cmp
mov
call
mov
jno
or
dec
or
lret
or
popf
push
lock
fidivrs
jg
stos
or
fsubp
std
mov
insb
xchg
decl
clc
or
rorb
lock
sub
pop
sub
pop
lcall
sub
in
sub
mov
sub
or
mov
and
subl
push
nop
add
fldenv
sarb
fistps
pushf
out
xor
insb
arpl
sub
lret
add
gs
cld
in
jno
or
int
push
dec
or
fisubrs
adc
pop
rcll
cmp
inc
int3
lret
inc
xchg
sbb
cmpsb
push
mov
fildll
ljmp
dec
pop
push
xchg
xor
repnz
push
cmp
out
push
add
out
pop
out
xchg
roll
jb
jae
loop
mov
pop
inc
mov
es
jb
and
fimull
xor
jno
repnz
xor
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
enter
lcall
jle
das
mov
xchg
sub
xchg
cwtl
xchg
and
sbb
push
bound
shl
xor
push
inc
dec
or
rolb
sbb
push
and
jp
dec
xor
mov
inc
push
xchg
or
mov
cltd
dec
mov
shll
ret
in
in
rol
jmp
add
add
pop
mov
jnp
pop
pop
mov
mov
loopne
pusha
or
jl
xchg
fwait
push
cmc
mov
data16
push
dec
in
jns
outsl
push
mov
cld
cmp
cmp
gs
mov
xlat
adc
into
arpl
mov
into
mov
cmpsl
jp
ja
xlat
xchg
push
or
test
cs
gs
inc
or
lea
nopl
stos
fcmove
fisubl
xor
add
sub
inc
fwait
cmp
and
into
cs
mulb
popa
mov
lods
shrb
repz
arpl
stos
and
xchg
cmp
mov
int3
jb
lea
xchg
dec
out
outsl
mov
pushf
push
cli
push
xchg
data16
pop
push
dec
sub
jecxz
mov
loop
xchg
add
pminub
mov
test
mov
lock
mov
jp
jg
push
arpl
int
pop
repnz
mov
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
stos
dec
iret
mov
add
cli
jg
jle
mov
enter
sub
lcall
jl
daa
das
ss
bound
xor
or
aam
xor
pop
mov
sub
pop
adc
lods
lock
sbbl
xor
add
clc
test
add
das
int
jns
sahf
push
inc
mov
pop
and
aaa
pop
arpl
or
loop
aas
lods
mov
push
test
rcrb
inc
xchg
mov
je
xchg
jno
sbb
mov
fs
mov
and
sbb
lods
dec
sti
rcrb
ljmp
hlt
dec
lret
sub
mov
and
fwait
movsb
jle
xchg
fisttpl
fstps
xor
xor
sub
lock
push
nop
xor
mov
xchg
bound
sub
mov
jne
icebp
aas
in
mov
mov
push
mov
movsb
mov
mov
dec
pop
insl
add
lods
dec
call
lret
xor
cmpsb
push
notl
inc
inc
sbb
repz
ss
lea
incb
jo
xchg
jae
pop
or
jp
pop
lock
lods
xchg
cld
in
xchg
in
repz
push
movsb
cmp
dec
mov
mov
sub
pop
shlb
mov
loop
lahf
adc
mov
dec
insl
popf
das
repz
movb
add
clc
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
lret
fs
mov
cli
jg
jle
mov
int
adc
or
cmp
jl
loope
ss
aad
mov
xor
imul
sub
adc
roll
cmp
idiv
mov
mov
stos
xor
adc
or
adc
inc
add
adc
int3
inc
sub
mov
push
cmp
push
bound
daa
sbb
int
pop
neg
sub
sbbb
sbb
jecxz
mov
mov
cmp
jno
pusha
add
dec
inc
mov
popf
and
mov
cmpsb
jne
aam
sbb
pop
sbb
aas
xor
and
add
mov
fdivs
scas
clc
daa
pop
adc
and
fldenv
mov
and
pop
adc
out
jno
mov
add
cli
xor
adc
cs
rclb
lahf
shl
js
cmp
movsl
pop
mov
xchg
pop
test
push
lret
mov
xchg
inc
pop
xchg
jno
inc
dec
ds
xchg
cmp
adc
dec
sti
mov
lahf
andb
pusha
fs
xlat
popa
test
dec
add
or
lcall
cmp
jno
push
mov
xchg
cmp
lods
jns
sub
pop
inc
iret
mov
mov
dec
xchg
out
lea
xchg
outsl
xlat
push
push
call
stos
add
in
dec
adc
aam
mov
inc
rorb
adc
test
jmp
inc
push
jnp
or
push
adc
nop
dec
lret
std
cs
jle
jg
jle
enter
scas
sub
add
clc
sub
xor
subb
aas
dec
pushf
gs
es
add
packsswb
sti
and
mov
xchg
inc
inc
clc
pop
jecxz
pop
inc
popf
pop
adc
jb
xchg
rol
lahf
inc
push
rclb
adc
cmc
mov
cld
jo
jmp
pop
and
addr16
movsb
js
jb
xchg
mov
pop
arpl
push
xchg
dec
add
test
mov
push
rol
sub
shrb
pusha
inc
dec
std
pop
xor
and
mov
inc
pop
outsb
sbb
xor
dec
sub
nop
mov
test
imul
cmpsb
popf
dec
icebp
fildl
scas
push
cmpsb
ss
insb
lods
dec
fcoml
rol
lods
rcll
xor
fisubrl
mov
in
cmpsl
lahf
fs
mov
cmp
test
or
push
or
out
dec
arpl
inc
hlt
sbb
incl
pop
rcl
and
mov
outsl
jae
sti
dec
inc
popa
out
stos
mov
mov
rolb
mov
add
jb
cs
adc
push
sbb
pop
push
sti
es
xor
xchg
out
out
jge
xor
push
sbb
pop
negl
sbb
jp
dec
push
outsl
jp
xchg
outsl
mov
mov
jp
faddl
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
repnz
sahf
stos
or
jle
cmpsl
fcmovne
sarb
movsb
stos
fcompl
mov
lods
popf
insl
inc
adc
pop
movsl
pop
xchg
xor
dec
cs
arpl
xor
cwtl
pop
sub
dec
pushf
or
mov
movsb
mov
jnp
pop
popl
int
mov
decb
adc
mov
jle
dec
lret
mov
lcall
js
stos
jg
mov
daa
xchg
insb
xorb
mov
inc
pop
xor
mov
sbb
mov
ja
or
ret
cmp
clc
xor
call
cwtl
mov
jmp
popf
jle
sub
xor
pop
mov
out
test
insl
popf
sbb
inc
lds
xchg
cmc
loope
xor
sub
push
nop
ljmp
mov
and
xchg
or
rol
vpmuludq
and
push
test
cli
addr16
out
adc
into
popa
mov
psrlw
sbb
ljmp
movsl
or
insl
sub
cld
adc
fildll
jg
xor
data16
std
pop
jg
push
jne
fadd
jge
sahf
ljmp
sub
out
fwait
sub
ja
mov
lods
jmp
inc
aam
and
mov
jns
lcall
or
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
sbb
or
cli
jg
jle
ss
jnp
and
lret
int
addr16
orb
jl
daa
jb
lret
lock
push
lcall
add
out
add
fcoml
push
bound
xor
in
pop
test
das
test
cltd
cmp
xor
popf
enter
bound
cli
xor
fnstcw
iret
inc
jbe
or
std
add
test
xor
or
rorl
lret
fcoms
jle
pop
xchg
push
pop
mov
movsl
dec
scas
jbe
enter
nop
outsb
adc
push
or
mov
ud2
and
and
adc
inc
pop
in
push
in
shlb
mov
mov
pop
jge
cmp
dec
xor
dec
mov
iret
sbb
jne
mov
cmpsl
mov
js
add
test
adc
pusha
jno
ret
and
push
adc
std
dec
fmull
aam
mov
lret
and
mov
dec
scas
daa
fdivs
xchg
add
add
adc
imul
pop
es
je
xlat
stos
jnp
and
xor
mov
and
push
xor
in
sbbb
cmp
xchg
fcmovnbe
cmp
push
dec
pop
inc
aad
iret
inc
or
lods
dec
pop
and
dec
cmpsb
cli
xchg
inc
jbe
pop
sbb
inc
sub
insb
imul
pop
push
ss
jmp
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
cmc
inc
mov
jle
cli
jg
jle
inc
outsl
mov
sbb
pop
test
arpl
jb
aad
cltd
xor
dec
add
lret
mov
iret
mov
sbb
pop
and
cli
mov
aam
lret
xchg
dec
jnp
jb
xchg
je
daa
push
or
fwait
cmc
test
aas
ja
mov
je
mov
xchg
movsl
mov
jbe
in
dec
pop
mov
sti
lea
mov
sbb
push
pop
mov
xor
iret
xor
fdivs
outsl
call
ss
outsl
insl
xor
test
sbb
inc
repz
out
int3
pop
loop
in
stos
dec
xor
cs
sti
xchg
mov
sub
cmp
pop
cltd
psubb
aam
mov
ds
movsl
xchg
add
rclb
lret
leave
mov
sarl
jecxz
out
pop
push
data16
xchg
test
ljmp
out
adc
fdivl
xor
fstpt
cmp
dec
arpl
inc
adc
aam
addb
xchg
and
pop
scas
sbb
inc
xlat
or
adc
out
mov
dec
fwait
shll
sbb
popa
pushf
dec
lods
das
sbb
jbe
insb
cs
and
push
adc
movb
dec
stc
sub
clc
push
xor
test
inc
add
xor
add
xor
add
xor
add
xor
pop
jmp
cmc
mov
icebp
insl
sbb
iret
jo
push
jle
cli
jg
jle
sub
inc
cmpsb
in
adcb
pop
scas
ret
push
jmp
gs
andb
jge
push
inc
fstps
fiadds
imul
mov
imul
outsb
sub
out
outsb
sbb
lods
and
jmp
cwtl
push
test
inc
mov
push
and
sbb
mov
jbe
add
inc
lock
jmp
call
xlat
push
sub
fstpt
lea
fwait
mov
pop
push
or
aaa
mov
les
pop
repz
fcomps
movsb
cld
cmp
popf
or
ret
outsl
test
imul
or
je
jle
dec
pop
adc
lock
xchg
scas
jbe
ja
or
add
mov
and
leave
es
or
in
adc
sbb
push
xchg
ss
mov
jmp
inc
hlt
inc
xor
popa
xchg
dec
xchg
cli
bound
int
negl
in
arpl
call
bound
loopne
rcll
push
jl
aam
mov
lea
bound
adc
fnstcw
jne
into
or
outsb
xchg
stos
imul
insb
cmpsl
test
xorb
inc
popf
cmp
pop
cmp
sti
cmpsb
pop
dec
cmp
jne
cli
data16
pop
jmp
push
jecxz
mov
jns
add
cmpsb
filds
je
adc
xchg
dec
ja
mov
push
decb
mov
inc
add
or
pushf
add
add
adc
mov
xchg
pop
rcl
jne
mov
jg
jle
cwtl
sub
xor
scas
into
int3
sub
mov
mov
mov
inc
jg
push
pop
sub
push
or
jne
mov
xlat
shlb
rcr
mov
out
sbb
adc
mov
cmpsl
aas
mov
lea
cltd
jne
sti
and
and
inc
mov
aam
ret
pop
addr16
sbb
xchg
sbb
in
xor
fdivl
sub
sti
xor
std
pop
bound
sbb
cs
dec
jmp
xchg
lret
ds
adc
pop
rcrb
jle
mov
sbb
pop
popa
jecxz
mov
cld
int
mov
jmp
xchg
ja
jge
cmpsb
arpl
call
adc
leave
std
mov
fs
lock
jne
xor
popa
mov
out
fwait
shlb
sbb
ds
fs
sbb
fsubrl
into
adc
sub
cli
jbe
add
imull
pop
cmpl
pop
lret
xchg
shll
xchg
mov
push
mov
cmp
push
push
movsl
and
jb
jg
mov
xchg
mov
and
xchg
ss
xor
sub
sbb
dec
jmp
loopne
sbb
shlb
sub
sti
pop
lret
mov
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
jbe
adc
jle
mov
sub
cs
inc
ds
fisubrs
jns
roll
jle
scas
and
popa
xor
cld
jle
outsb
in
aad
subl
adc
jecxz
mov
cs
sub
test
xchg
mov
xchg
das
sar
or
push
jae
mov
sbb
lds
int
or
rcrl
jo
inc
mov
mov
jns
dec
push
xor
sub
les
xor
jns
outsl
in
ja
arpl
sbb
out
movsl
sub
jbe
xchg
psrld
jnp
inc
mov
add
aas
out
inc
lret
jns
enter
roll
jl
sub
xor
repz
dec
movsb
jnp
adcl
and
arpl
mov
xchg
sarl
jbe
int3
packuswb
mov
xor
fdivs
jge
sti
mov
or
cmp
fbld
and
xchg
jno
dec
sub
movsb
mul
adc
cmp
cmp
aas
mov
rcr
mov
and
stc
mov
inc
int3
outsb
aad
dec
push
and
into
imul
and
mov
scas
lret
outsl
sub
mov
mov
lret
aad
push
xor
adc
jne
repnz
push
xchg
not
sub
sub
ret
dec
jmp
test
cmpb
cmp
mov
std
mov
icebp
sbb
dec
repnz
mov
sbb
push
mov
dec
pop
adc
cmp
popf
cld
pop
addr16
dec
out
pop
push
push
les
cmp
sbb
loop
jp
push
xchg
pop
cmpsb
adc
idivl
lods
add
pop
adc
inc
sub
roll
or
cmp
ret
sbb
jg
insl
int3
bound
fdivr
stos
xchg
xor
mov
add
fldpi
pushf
sub
sti
lock
incl
iret
jae
ljmp
inc
lcall
mov
mov
mov
xchg
jno
js
dec
pusha
test
mov
aam
pop
mov
aaa
aam
xchg
icebp
adc
insl
test
mov
xchg
std
add
add
and
and
cmp
aas
pop
mov
cmpsl
dec
push
lret
mov
sbb
outsb
mov
int3
jns
pop
and
fsts
or
lods
les
pop
cmp
pop
or
xchg
dec
jg
pop
adc
jge
sbb
lahf
mov
xor
sub
mov
es
pop
push
or
test
xor
inc
imul
add
lods
test
jo
inc
add
cmp
roll
decl
les
test
inc
add
stos
ss
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
outsl
out
and
jle
pop
jl
jle
je
outsl
cmp
out
int
xlat
adc
sarb
xor
adc
and
or
sbb
pop
fdivrp
cmp
dec
jnp
add
test
js
movsb
dec
xor
test
xor
inc
outsb
push
push
call
jmp
jnp
stc
mov
sub
clc
xor
push
movsb
hlt
cmpsl
jae
adc
mov
es
fcompl
mov
int3
es
jns
pop
orb
test
popa
inc
fwait
cmpsb
dec
xchg
sub
xchg
cmp
jmp
cmpsl
adc
jecxz
scas
dec
pop
dec
pop
lret
dec
fcomps
dec
ja
push
shlb
mov
icebp
test
in
pop
inc
enter
or
insb
or
pop
ficompl
in
loope
add
ret
dec
sub
ret
not
dec
subb
call
inc
ret
nop
icebp
jae
loopne
aas
lock
jmp
cmp
mov
cmpb
mov
adc
jl
pop
add
mov
dec
lock
outsl
sti
fwait
arpl
push
jp
inc
ds
out
xor
sbb
dec
mov
rorb
ss
pop
outsl
cmp
aas
cmp
and
notb
jl
pusha
dec
cltd
push
pop
fsin
stos
ret
les
jmp
jp
mov
xor
fsubrs
shr
lahf
stos
and
mov
in
mov
and
dec
push
sub
fdivl
lods
and
gs
xchg
mov
movl
mov
faddl
int3
mov
dec
adc
xor
add
jno
jae
aaa
out
mov
mov
dec
rcl
mov
bound
jl
test
fildl
rol
addr16
fdivrs
insb
push
cld
xchg
std
fwait
mov
pop
sub
in
out
dec
aas
ret
inc
cmp
daa
imul
out
ret
sub
inc
xchg
xchg
dec
and
mov
sbb
add
cltd
lcall
pop
iret
jbe
mov
pop
daa
adc
xor
push
inc
mov
jmp
inc
jl
test
push
cmpsl
lock
xlat
ret
popfw
mov
loopne
xlat
mov
aas
popa
mov
bound
pop
xchg
push
cli
sbb
scas
or
out
dec
icebp
ss
test
push
dec
icebp
ret
pop
addr16
jns
inc
xchg
out
pmullw
cmp
jns
stc
cwtl
push
xchg
int
in
popf
cmp
outsb
or
inc
pop
jg
cmc
mov
mov
push
enter
pop
jbe
test
inc
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
leave
cmp
pop
jl
jle
add
add
bound
enter
dec
xorb
push
in
popf
xchg
loopne
inc
les
push
cld
xchg
xor
lret
push
push
mov
add
xchg
in
xchg
fmull
pop
cmc
push
hlt
in
out
add
pop
lods
nop
dec
ja
ficoms
into
ret
xchg
repnz
sbb
push
push
shll
loopne
xchg
das
mov
stc
imul
sub
xchg
sub
pop
push
inc
outsl
loope
dec
sbb
mov
int3
jo
and
popa
popf
or
fs
sti
cmpsb
out
movsb
cmp
les
stos
or
fidivs
into
in
pop
or
loope
mov
ja
xchg
dec
lds
sbb
inc
out
mov
and
inc
std
fisubl
mov
inc
dec
mov
adc
lret
adc
lock
adc
xchg
jecxz
add
or
push
xchg
repnz
out
sbb
push
lock
pusha
push
mov
push
inc
push
lock
test
fsubrl
mov
and
dec
push
ret
or
mov
sbb
cmp
bound
in
xor
in
push
ljmp
repz
cltd
sub
xor
add
inc
movsb
pop
dec
lods
sub
jbe
icebp
ret
lahf
not
push
enter
cli
and
add
dec
aas
movsb
bound
xor
cmp
add
scas
jnp
dec
inc
and
shlb
and
ds
fimuls
pushf
in
or
mov
scas
div
outsl
pop
push
jg
lea
shl
pop
ja
mov
dec
loopne
sti
and
stc
or
ret
shll
ja
les
pop
dec
shrl
pop
dec
add
imul
xlat
ret
adc
pop
dec
loope
mov
lds
push
sbb
cmp
inc
fisubrs
outsl
jl
or
push
cmp
mov
ja
mov
stc
stos
or
cld
mov
push
xor
pop
imul
loopne
mov
inc
inc
pop
jne
add
mov
ljmp
add
mov
sbb
negb
cmp
inc
xor
add
out
push
dec
jb
arpl
insb
cmpsb
mov
or
fisubl
sub
push
mov
mov
xor
hlt
jo
jae
sbb
lods
gs
add
jl
clc
fwait
and
popa
xor
dec
pop
aas
dec
mov
jae
mov
loope
or
scas
lret
popa
sub
fwait
js
mov
dec
imul
fistpll
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
sbb
jle
fidivrl
roll
shll
cltd
fnstenv
pop
ljmp
lcall
insl
andb
mov
mov
push
cs
sbb
adc
add
sub
ljmp
addr16
jns
ret
rcll
sti
push
xor
pop
cmp
and
cmpsb
mov
jnp
in
xor
adc
movsl
add
shlb
fcom
fimuls
test
out
pop
in
mov
inc
test
outsb
cld
sbb
mov
xchg
call
add
xlat
push
and
shll
jmp
cld
adc
icebp
imul
mov
push
test
mov
int3
fwait
repnz
lretw
sub
or
cmp
repz
imul
test
cmp
dec
or
xor
rol
mov
mov
leave
scas
pop
ss
cmp
in
pop
mov
in
ljmp
sbb
push
push
mov
cmp
xchg
sbb
lret
cmp
or
adc
repz
mov
cmp
mov
push
or
xchg
rorl
pop
jnp
fwait
add
sub
mov
bound
mov
in
pusha
andl
mov
xchg
mov
jg
stc
notl
out
div
das
sub
cwtl
mov
rorl
outsb
cs
movsb
mov
sub
push
jno
sub
or
mov
cmpsb
cmp
in
cmp
aam
insb
push
mov
hlt
sub
dec
pop
fidivrs
shll
sahf
test
jns
mov
push
cs
mov
fiaddl
mov
cmp
stos
mov
lock
mov
push
mov
pop
xor
lret
in
and
nop
lret
imul
clc
add
shlb
gs
or
jge
jo
or
aam
mov
in
shlb
mov
imul
push
xchg
pop
in
mov
cmpsb
dec
mov
cmp
sbb
fisttps
mov
fwait
push
add
popf
jge
and
pushl
dec
dec
dec
xchg
ss
test
test
jmp
outsl
ret
push
rorl
icebp
dec
xor
call
loope
repz
inc
mov
shl
and
out
adc
lods
imulb
mov
push
icebp
push
push
or
xlat
dec
add
and
insl
or
mov
cwtl
xor
dec
push
pop
mov
clc
jmp
add
dec
popa
jno
jne
xor
jle
lcall
pop
jl
jle
lret
sub
test
sub
mov
mov
stc
mov
vcvtdq2pd
clc
lret
loopne
xchg
sbbl
jns
push
les
mov
inc
jo
pop
ret
cmp
pop
cltd
jl
or
cmp
in
adc
or
lea
cmpsl
mov
inc
pop
psubb
jle
sbb
sub
cmpsb
stc
arpl
les
sub
les
jae
into
pop
push
cwtl
iret
repnz
jl
dec
das
adc
int
xchg
jno
sub
stos
outsb
add
fmulp
test
xchg
mov
jns
imul
inc
stos
scas
imul
lock
sub
cs
out
stos
std
xchg
test
xor
leave
aaa
addr16
cmp
pushf
lahf
stos
lcall
movsl
aad
into
imul
jmp
repnz
adc
dec
sub
addr16
jbe
gs
mov
das
push
push
fs
ret
fwait
and
adc
ss
dec
push
dec
push
push
hlt
mov
in
out
or
xorb
push
sbb
jecxz
inc
insl
into
dec
and
xlat
lea
into
push
popf
dec
outsb
xlat
gs
in
loope
xor
loopne
sti
jno
and
mov
stos
and
push
push
or
jg
enter
insb
roll
or
js
jb
negl
dec
sahf
ds
xor
adc
jecxz
and
orl
dec
add
es
int3
adc
sub
adc
sub
outsl
cmp
inc
adc
fisubrs
sti
mov
dec
int
xor
pop
pop
inc
mov
push
daa
cmpsl
push
in
xchg
adc
mov
les
xor
ja
rcl
xchg
movsb
lret
bswap
bnd
in
inc
aas
xchg
xor
loopne
xchg
dec
jle
movsl
subl
sbb
lds
fdivs
push
pop
pop
push
dec
mov
xor
aad
stos
test
mov
out
jbe
int
outsl
stos
out
pop
mov
or
ret
xor
ljmp
push
sbb
add
or
icebp
into
push
mov
fcmovne
test
or
push
lds
adc
repnz
sbb
icebp
jne
icebp
div
sbb
sbb
fstp
cli
iret
ljmp
arpl
cli
push
jnp
jge
xor
je
and
js
orl
dec
push
sbb
adc
inc
or
pop
xor
push
ljmp
pusha
push
jae
insl
fbstp
testb
int3
nop
scas
mov
add
bound
pop
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
lea
sub
pop
jl
jle
xchg
loopne
imul
das
sub
sub
notl
sti
mov
lea
nop
lret
ret
ss
mov
js
daa
imul
adc
jo
shl
inc
pop
xor
dec
push
push
call
call
mov
xchg
xchg
mov
jmp
movsl
mov
ret
xor
cs
repz
mov
imul
scas
stos
movsb
jl
pop
ret
das
add
movsb
mov
xchg
mov
add
mov
je
dec
jae
jb
or
jo
ret
mov
test
mov
mov
dec
leave
push
aad
popa
nop
or
xlat
jae
cld
sub
pop
shlb
test
xchg
pop
daa
icebp
cmp
xchg
outsl
inc
in
dec
cld
cmp
popa
mov
jne
xor
cs
shll
pop
dec
inc
sbb
add
cs
enter
mov
push
jo
psubd
shrl
lods
mov
cli
or
xchg
ftst
add
mov
xor
sub
jl
sub
push
or
jmp
cltd
and
sub
push
xor
jle
out
mov
pop
pop
xor
hlt
dec
jnp
cmp
loope
pop
cwtl
xchg
push
mov
jmp
xchg
inc
cmpb
add
and
dec
pop
inc
mov
adc
gs
pop
mov
sub
wbinvd
adc
mov
fiadds
inc
lret
jge
clc
testb
or
lret
aam
push
mov
mov
insl
js
mov
in
loopne
and
pop
cmp
jns
jns
imul
addr16
gs
in
lcall
ja
xor
mov
lods
xchg
mov
mov
ficompl
or
stc
mov
into
cmpsb
popf
adcb
fdiv
inc
ds
xor
mov
jae
xlat
loop
inc
fisubs
pop
inc
shr
xchg
sbb
jmp
fnsave
xchg
pop
stos
pop
orb
lahf
arpl
or
mov
std
stos
mov
inc
cmp
jl
loopne
dec
mov
jge
pop
push
cmp
inc
scas
inc
mov
ret
mov
js
add
in
imul
test
clc
nop
aas
sbb
sub
scas
jnp
ret
loopne
lahf
mov
or
mov
xlat
jl
xchg
mov
add
pop
aad
test
push
adc
das
dec
mov
mov
clc
sbb
test
test
rolb
shr
imul
add
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
mov
jle
pop
jl
jle
adc
sar
mov
adc
ret
xlat
xchg
es
int3
mov
or
lods
popa
lods
mov
mov
push
pop
psllq
test
stos
rcll
cltd
mov
enter
mov
jbe
sub
mov
out
add
jo
addb
mov
gs
jp
cld
imul
aad
cmp
cmc
outsb
fcomp
test
int
decb
dec
xlat
mov
inc
cltd
jne
call
mov
fists
xor
sbb
lcall
jle
sub
dec
cmpsb
mov
ljmp
aam
ret
data16
mov
inc
push
add
scas
int3
adc
insb
sub
stos
push
lret
mov
shrb
and
cwtl
imul
cmp
rclb
cs
or
xchg
clc
rcl
fs
mov
jp
pop
dec
lret
adc
ja
out
imul
loopne
scas
mov
jle
jp
clc
lods
inc
movsb
sbb
mov
ljmp
adc
xor
in
addr16
mov
sbb
outsb
dec
jb
xor
inc
dec
add
pop
jnp
fsub
movsb
cltd
xor
cmp
sub
inc
mov
pusha
testb
dec
sub
mov
std
cmpsb
inc
imul
arpl
mov
xchg
push
inc
push
lret
adc
jle
mov
lret
pop
mov
pop
popa
test
add
iret
inc
mov
mov
cmp
les
mov
shrl
clc
mov
rcrb
sub
rorl
sub
inc
mov
dec
ss
es
stos
mov
insb
jb
dec
lcall
movsb
mov
mov
imulb
iret
mov
lock
xor
leave
fmulp
in
faddl
push
das
not
inc
mov
pop
into
cli
push
fwait
outsl
lahf
sti
bswap
jae
jnp
jns
mov
add
mov
xchg
inc
call
xlat
lods
pusha
add
mov
dec
arpl
ja
shr
sahf
xchg
jge
scas
into
shrb
pop
adc
cwtl
fmul
sub
mov
sub
cmpsb
xorb
and
sub
pop
loope
outsb
push
test
and
mov
imul
add
dec
push
aaa
xchg
pop
sub
lods
mov
pop
mov
cs
add
popa
iret
sbb
add
lahf
xor
sarb
inc
adc
xchg
push
arpl
mov
shll
add
nop
filds
stc
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
mov
jle
pop
jl
jle
dec
or
stos
pop
aam
push
jp
xor
push
loop
push
in
xor
int
fcompl
aaa
inc
jmp
das
sbb
call
pop
in
jb
adc
mov
in
mov
add
lret
in
cld
rcrl
ret
and
or
inc
or
je
mov
push
jge
add
lock
adc
mov
push
jmp
popf
test
jl
stos
push
mov
add
mov
lods
stos
inc
inc
push
adc
sub
or
or
bound
lcall
idiv
fldl
adc
push
and
loope
sti
ret
movsb
sub
pop
testb
int
test
push
adcb
popf
xlat
in
popa
xchg
popf
jmp
dec
pusha
add
xlat
push
ret
pop
mov
xor
xchg
test
in
xchg
rcrb
sbb
push
push
ror
hlt
sbb
cmpsl
scas
xor
shl
aaa
mov
push
cs
lcall
mov
push
mov
out
jb
cli
mov
add
dec
js
inc
push
icebp
add
test
stc
scas
or
pop
popf
sub
mov
or
mov
lods
inc
xchg
adc
xor
sub
bound
jae
inc
in
add
inc
es
sbbb
cmp
fnsave
repz
outsl
sbb
imul
mov
jecxz
inc
cmp
movsb
push
jl
xor
test
cmp
je
add
push
push
xchg
daa
cli
out
shll
sahf
mov
dec
nop
mov
aas
xor
cmp
xchg
push
jle
fbstp
and
pop
cld
jmp
movsb
ss
outsb
push
dec
lcall
adc
xchg
or
adc
dec
gs
push
mov
mov
jae
jle
leave
out
and
dec
loop
stos
push
mov
or
popf
sbb
pop
dec
fisttpll
clc
outsl
movb
jnp
cmp
xchg
test
stos
mov
shr
cmp
loope
cli
subl
adc
adc
out
push
jbe
sbb
pop
push
cld
dec
call
aas
stos
ret
lea
or
xor
pop
lret
fildl
addb
mulb
pop
leave
out
idiv
popa
add
lahf
sbb
jbe
cs
cmp
sbb
imul
pop
cld
jp
and
in
loopne
lahf
outsl
xchg
std
or
mov
and
daa
mov
adc
sbb
jae
insb
sbbb
scas
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
pusha
std
je
imulb
jle
jl
jle
enter
adc
pop
test
pop
rcrb
mov
cmp
xchg
jmp
or
inc
outsb
stos
add
imul
jl
mov
sbb
push
lahf
jmp
test
test
adc
mov
xchg
decl
add
imull
mov
inc
mov
mov
dec
mov
out
addr16
lret
cld
lcall
sub
mov
mov
jae
mov
into
in
add
div
sub
cmpsb
hlt
push
jg
inc
sub
lock
test
inc
dec
jbe
jae
mov
push
mov
add
add
shrb
inc
das
loop
pop
xchg
ret
je
push
lea
shll
ljmp
insl
pop
std
xchg
cmpsb
int
shl
jne
lock
outsl
jne
adc
inc
je
fnstcw
jmp
iret
push
mov
ret
aam
outsl
xor
cmp
jo
xor
inc
icebp
sub
fcos
xchg
dec
push
pop
cs
jno
push
jb
sbb
pushf
clc
lret
pop
dec
push
int3
sbb
stc
out
aaa
outsb
imul
xchg
filds
call
test
sbb
fnstenv
push
or
mov
aam
out
movsl
xchg
push
bound
es
adc
sub
pop
stc
fsqrt
negl
xchg
push
in
mov
xor
xor
pop
mov
sub
add
neg
popf
mov
mov
movb
or
xor
mov
or
sbb
jns
sub
sti
add
aas
jl
movsb
push
xchg
out
stos
aam
enter
jle
push
add
and
loop
and
jmp
lods
mov
adc
jmp
jns
outsb
testb
and
sbb
dec
xlat
clc
add
sbb
aad
xor
aas
add
sbb
cmc
sbb
fwait
cli
fwait
rclb
cmp
xor
pop
fildl
imul
lahf
stos
xchg
repz
and
hlt
xor
nop
dec
xadd
pop
sahf
cmp
xor
lods
xchg
addl
sbb
insl
dec
fnsetpm(287
inc
icebp
cltd
int
jge
stos
mov
orl
lcall
jp
jbe,pt
inc
push
test
push
pop
adc
cld
scas
xor
notb
sbb
mov
aaa
mov
adc
dec
enter
xor
and
xorb
cmpsb
ret
hlt
fwait
inc
loop
cli
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
mov
jle
jl
jle
test
xlat
add
pop
push
int3
push
into
pop
xor
add
hlt
mov
xor
jns
sbb
dec
adc
adc
stc
xor
pop
xor
pop
call
orb
cld
sahf
xchg
inc
nop
sub
mov
call
jb
pop
pop
test
adc
in
mov
xor
pop
xor
cmp
add
mov
sbb
stc
xchg
sub
lods
mov
stos
sbb
outsl
into
xchg
mov
add
xor
xchg
sub
and
repz
call
cmpb
mov
testl
ret
cmp
rorb
mov
mov
lahf
pop
sahf
pop
fs
je
sub
jae
js
std
mov
mov
loopne
cmpsl
jb
mov
add
rcrb
ja
fimuls
mov
inc
cmp
lock
ret
mov
adc
push
stos
pop
adc
sub
inc
bound
sti
dec
xchg
mov
jmp
pop
lahf
out
jp
mov
ja
sbb
popa
jb
cmpsb
mov
scas
pusha
fs
sbbl
xchg
test
subb
pop
push
scas
cli
data16
lds
mov
pop
hlt
mov
sub
sub
dec
pop
sub
pop
xchg
rorl
loope
pop
insb
adc
and
xor
mov
bnd
call
pop
cmp
out
aad
dec
and
pop
nop
cmc
push
test
jle
lods
xchg
xor
int3
sbb
call
jno
stos
out
cltd
ret
mov
fs
adc
mov
xorl
in
dec
jnp
push
xor
hlt
sub
test
sbb
jmp
add
test
ljmp
aaa
test
rcr
mov
fdivs
cmp
loop
std
lds
lea
cld
inc
xchg
out
pop
es
sbb
inc
test
pop
adc
adc
jge
push
add
fwait
push
cmpsl
mov
je
xor
add
push
popf
incb
je
fmul
or
lds
mov
out
subl
and
sti
pop
cmp
push
popf
sub
xor
pop
push
cli
outsb
popf
stos
fs
les
movb
and
cs
inc
inc
xchg
inc
hlt
fsubl
in
jmp
inc
loope
loop
jnp
push
sti
and
in
or
jbe
in
lock
xor
dec
push
push
or
xchg
xchg
mov
movsb
and
xor
test
mov
push
add
sub
xchg
aas
imul
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
ds
cmp
jle
sub
jle
sub
insl
xchg
xchg
sub
jle
add
orw
jnp
xor
xchg
outsl
into
and
iret
cmp
or
fildl
sub
xor
or
cld
loopne
fsub
dec
pop
in
dec
pop
enter
dec
pop
pop
pop
xchg
push
cmp
sub
push
jg
and
add
adc
push
sub
xchg
stc
mov
movsl
jp
pop
push
cmpl
test
fimull
add
das
jle
cmp
mov
jmp
imul
inc
inc
xorb
sbb
in
xchg
jmp
fiaddl
std
or
movsb
cmpsb
test
pop
rolb
and
inc
ret
mov
popf
mov
out
scas
outsl
sbb
lcall
stos
mov
pop
or
jno
js
cmp
inc
lret
sub
xchg
mov
test
dec
pop
sbb
sub
xchg
loope
sub
jge
pop
mov
xchg
dec
adc
sbb
jne
sar
popa
out
cmp
sub
inc
jbe
addr16
pop
pop
mov
int
frstor
jb
gs
jnp
roll
mov
clc
icebp
inc
inc
out
into
shlb
push
dec
aaa
push
cmp
adc
orl
pop
add
lcall
jbe
xlat
out
shl
or
ss
fyl2xp1
xor
sbb
mov
mov
cmpl
ret
sub
sub
mov
es
pop
out
mov
loop
lcall
fadd
insb
inc
lods
inc
mov
mov
scas
fdivl
test
inc
add
hlt
in
inc
jp
cmpsb
out
and
lods
inc
stos
lods
pop
mov
incl
cmp
adc
push
mov
out
pusha
dec
mov
dec
sahf
cmpb
sub
repnz
and
sub
test
pusha
pop
or
mov
mov
sbb
jp
lret
repnz
stc
mov
popf
dec
adc
or
pop
es
mov
cld
jb
xchg
sub
sub
filds
mov
xor
into
leave
inc
imull
aas
and
mov
ss
fisttps
cwtl
lcall
xlat
rorl
sub
mov
dec
pop
xchg
push
jmp
mov
push
shll
pop
pop
movsl
adc
push
inc
daa
sub
lret
ljmp
inc
mov
add
jno
out
rcrl
ds
xchg
and
xor
xor
jns
jge
mov
lock
jg
aaa
and
test
mov
dec
add
and
pop
push
scas
xor
addr16
imul
pop
or
cwtl
add
xor
iret
repnz
cmp
fwait
xchg
and
mov
jo
add
pop
xorl
filds
andnps
icebp
movsl
jbe
mov
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
add
das
cmc
js
popa
cmp
xchg
dec
lock
daa
enter
xorb
test
mov
mov
inc
mov
inc
and
icebp
clc
leave
jl
cmp
out
inc
push
pop
xor
vxorpd
mov
cmpsb
ja
out
adc
test
mov
ds
gs
xor
out
cmp
sbb
es
xchg
mov
xor
sarl
inc
sbb
pop
sarl
nop
pop
sbb
xchg
in
data16
rorl
cmp
loop
xchg
mov
fistpll
push
or
cmp
xor
sbb
inc
jae
mov
mov
push
data16
xlat
mov
mov
stos
sar
cmp
cmp
jnp
pop
fdivr
dec
jecxz
mov
add
jecxz
sub
pop
jbe
cmc
sub
jno
xor
les
sar
sarb
ljmp
mov
cwtl
xchg
add
sbb
fidivl
movsb
lcall
iret
or
aam
movsl
pop
cmp
scas
sub
mov
mov
sbbb
repz
jno
xchg
in
data16
mov
sub
into
mov
daa
fdivs
inc
jge
jle
mov
daa
mov
std
clc
adc
fildll
adcl
push
iret
repz
icebp
test
cmp
inc
shr
repz
sahf
cwtl
out
xlat
inc
sahf
mov
xor
and
data16
gs
sub
inc
pop
mov
add
mov
mov
cmpsl
inc
lods
and
jecxz
mov
mov
jo
dec
mov
pop
sbb
push
xchg
mull
std
jns
and
mov
jnp
mov
jne
in
insl
dec
sub
sahf
dec
addr16
shlb
ss
cltd
pop
sar
adc
leave
outsl
or
adc
push
test
jle
inc
mov
insb
mov
imul
sub
xchg
arpl
les
call
ss
and
jmp
shrb
push
pop
test
mov
mov
xor
jbe
dec
push
fs
xchg
pop
sub
pusha
mov
pushf
mov
jbe
into
mov
mov
push
jae
loope
push
adc
into
sbb
stc
ss
or
sbb
mov
lret
sub
stos
cmpsb
pop
mov
ss
mov
pop
xor
inc
rclb
into
stc
insl
mov
scas
xchg
lret
popf
mov
orb
shll
jnp
inc
mov
adc
mov
jle
in
imul
push
jge
sbb
in
out
addr16
fdivl
ja
sub
leave
orl
adc
fwait
mov
push
push
and
mov
cmp
lea
dec
lds
dec
push
fldl2t
dec
add
add
sub
test
test
mov
call
jle
sub
jle
xor
adc
mov
jg
and
mov
mov
repnz
jl
sbb
adc
test
out
sub
pushf
mov
in
mov
pop
push
insb
ret
daa
inc
sbb
pop
sarb
add
add
dec
imul
pusha
inc
mov
cmp
cwtl
and
cmp
loopne
mov
lahf
pop
aas
sbbb
andl
jg
data16
dec
pop
sbb
movsb
push
lods
xor
inc
push
xlat
out
lcall
mov
xchg
xor
sarb
push
lahf
mov
imul
xchg
add
das
out
idivb
xor
fwait
xchg
push
inc
arpl
xchg
aas
int3
jecxz
fwait
xlat
arpl
sbb
or
fistps
ja
jae
mov
push
xor
dec
jp
xchg
loope
dec
sub
push
ret
cmpsb
and
mov
imul
jp
pop
xor
addb
pop
aas
jo
mov
xchg
sbb
fs
int
mov
push
shll
push
lldt
dec
outsl
icebp
mov
movsl
std
fwait
jno
imul
cmp
mov
inc
dec
mov
insl
out
test
daa
loop
dec
psubsb
push
dec
mov
pop
shrb
mov
xchg
mov
sbb
cmp
xor
jp
pop
push
push
in
in
inc
hlt
push
out
imul
inc
frstor
enter
sbb
mov
insl
inc
adc
mov
aad
scas
jp
loopne
dec
mov
icebp
fucomip
lods
in
les
cmp
jle
pop
xchg
mov
lods
or
or
mov
int
movsl
mov
xchg
cmp
jp
popa
stc
add
or
push
dec
mov
mov
jecxz
frstor
dec
sarl
loope
shlb
repz
dec
pop
add
adc
jno
into
sub
pop
sbb
adc
xor
dec
pop
mov
iret
popa
or
dec
fstpt
ret
jp
sahf
adc
aam
out
mov
xor
sub
add
pop
out
test
fdivp
hlt
pusha
insb
mov
or
mov
das
mov
or
adc
and
xor
pop
call
mov
ds
ret
mov
sahf
decb
movb
pop
cmp
jge
adc
dec
push
inc
ret
out
or
outsb
aaa
xor
sbb
insl
push
mov
jo
xor
dec
xor
inc
fstl
or
fcompl
shll
dec
jb
test
push
enter
dec
inc
js
jle
aam
push
popf
repz
lods
cwtl
cmp
dec
dec
push
imul
sub
inc
push
xor
jg
xchg
mov
push
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
pushf
jp
mov
aas
jle
sub
jle
sbb
and
cltd
div
inc
lods
push
cmp
fs
nop
or
push
cmp
adcl
in
push
in
hlt
jno
pop
insl
andl
sub
sahf
shll
les
movsb
popf
xchg
mov
or
xchg
adcb
scas
mov
mov
lcall
push
pop
hlt
push
fisubl
xchg
shlb
mov
push
cld
movsl
idivl
mov
lahf
jno
pusha
mov
lods
rolb
dec
out
add
shlb
xchg
fcompl
or
mov
popf
adc
imul
inc
xchg
mov
ss
lea
cmp
in
rorl
sbb
enter
outsl
add
dec
inc
test
aad
arpl
dec
lods
or
dec
sbb
jge
ss
aaa
cmp
movsb
popf
icebp
test
cs
in
push
cmpsl
sbb
mov
js
cld
leave
and
outsl
jae
or
data16
fistl
xor
hlt
lods
ret
xor
out
or
outsl
mov
movsl
push
call
shl
inc
adc
mov
aam
cld
mov
test
or
jp
adc
xchg
push
aad
addr16
push
popa
and
add
xchg
mov
xor
and
rclb
sub
pushf
outsb
mov
das
orb
sub
or
emms
adc
int3
std
fmuls
int
pop
mov
clc
push
mov
popf
out
loope
loope
dec
add
in
scas
and
and
iret
xlat
inc
je
shrl
xchg
addr16
mov
icebp
pop
jg
lds
mov
movsb
clc
adc
sti
js
lret
imul
jnp
inc
rcl
mov
lock
sti
adc
or
mov
loopne
sbb
sub
add
xlat
fwait
push
sub
xor
push
insb
inc
mov
mov
iret
cmpsl
or
xchg
sbb
fldcw
dec
or
loope
jb
jle
into
mov
pushf
add
mov
inc
in
nop
ljmp
dec
inc
cmpsl
xchg
aam
leave
adc
lods
inc
ljmp
or
push
mov
xor
scas
xchg
xchg
in
push
mov
mov
mov
push
cs
mov
ljmp
add
adc
pop
imull
sbb
cmpsb
popf
imul
xor
call
inc
popf
pop
sbbl
lret
adc
inc
sbb
mov
ret
dec
xchg
jae
out
jnp
pop
nop
mov
mov
adc
mov
out
pop
mov
jbe
fdivrl
out
js
xchg
xor
inc
adc
mov
shr
add
add
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
pop
add
jle
mov
cltd
xchg
inc
fwait
pusha
xor
cmp
xor
push
dec
int3
daa
outsl
popf
adc
cmp
pop
adc
mov
mov
jo
fwait
ret
mov
sti
push
outsl
xor
loop
xchg
jge
cmp
enter
adc
shrb
aam
movl
andl
iret
stos
test
inc
mov
mov
cmp
icebp
in
sbb
shll
inc
sbb
cwtl
xor
rolb
loope
shr
mov
into
pop
frstor
mov
cltd
xchg
test
jae
adc
sub
push
je
sbb
rcl
lock
out
dec
jno
int3
xchg
dec
jo
in
leave
cmp
lea
fs
mov
in
sbb
mov
cmp
push
jbe
jg
mov
es
adc
outsb
and
ljmp
sar
xor
push
mov
mov
xor
xchg
int3
out
xor
scas
sbb
jle
pop
cmpb
xchg
and
sbb
and
into
subb
rorb
mov
jo
push
std
lock
fcompl
cld
push
sub
adc
push
push
loope
xchg
cmpsb
scas
push
cmpl
arpl
jbe
xlat
imull
bound
faddl
xchg
dec
cmpsl
inc
cltd
cmp
pop
xchg
and
inc
cmpl
inc
lods
rcrb
cmpl
adc
gs
xchg
lret
and
jmp
ljmp
lahf
jecxz
notl
mov
int3
data16
fsubrl
and
cmc
popf
in
shll
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
lods
shrl
cmp
mov
pop
ret
ss
sub
nop
int
test
orb
mov
in
pop
insl
insb
mov
or
push
pushf
std
cmp
aaa
mov
xchg
lret
xlat
xchg
scas
loop
xchg
enter
lret
jnp
sbb
sbbl
sbb
ljmp
xor
cs
cltd
mov
movsb
xchg
jns
adc
push
pop
dec
int
xlat
jne
shrl
out
mov
fldt
test
dec
cmp
test
leave
sub
dec
stc
cmpsb
imul
iret
mov
je
dec
sub
repnz
rol
lcall
inc
lock
add
call
mov
enter
or
aad
mov
push
scas
or
in
lods
subl
xor
in
cmc
add
jo
mov
lods
jmp
paddusw
adc
or
dec
xchg
loope
pop
xor
icebp
into
sub
inc
pop
xor
clc
push
icebp
loopne
data16
push
dec
jnp
adc
adc
nop
into
div
outsl
fldt
mov
movsl
cmp
imul
insl
mov
dec
jbe
pop
dec
inc
mov
push
stc
or
mov
jno
inc
sti
adc
aam
lret
ud2
int
bound
jne
repz
add
stc
mov
clc
les
les
pop
push
shll
mov
test
js
loopne
adc
xorb
adc
push
sub
ret
jp
call
cltd
adcl
lods
scas
push
shl
add
push
xchg
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
push
rorb
div
lret
cwtl
push
cltd
lea
push
and
cld
out
dec
mov
sub
in
ja
enter
lcall
je
stos
dec
lret
jp
inc
jne
sahf
mov
test
dec
adcl
pushf
sti
cmp
pushf
mov
movsl
daa
shrl
data16
mov
cs
or
lcall
repz
ret
dec
scas
sahf
or
test
es
jbe
mov
js
inc
and
fcmove
sbb
mov
int
call
mov
lret
outsl
jg
jmp
clc
mov
sub
push
mov
mov
pop
mov
in
sub
mov
stos
push
mov
inc
inc
std
dec
lods
dec
lods
ret
shlb
in
imul
pop
jbe
inc
xchg
inc
jge
or
adc
loop
jnp
inc
and
add
push
mov
push
loop
mov
pop
cmp
jmp
idivl
mov
scas
aas
xchg
test
out
mov
aad
mov
loopne
enter
adc
mov
call
loope
xchg
or
add
xchg
adc
sbb
xlat
or
fsubrl
xchg
fiaddl
stc
aaa
push
mov
or
xchg
lret
daa
xchg
mov
or
loopne
xor
adc
mov
ficomps
xchg
enter
imul
in
xor
enter
jbe
test
jmp
or
js,pt
push
inc
sbb
int
in
push
es
cli
sbb
dec
insl
cmp
in
frstor
or
jmp
add
test
jmp
and
in
popa
push
lret
xchg
adc
sti
int3
les
mov
leave
ret
mov
sti
int
in
fstl
out
fimull
push
pop
loop
insb
fiaddl
fistpl
mov
je
addr16
fistl
xor
fisubrl
sbb
fdivs
dec
push
leave
xor
out
mov
loope
in
rolb
adc
mov
inc
dec
or
repnz
mov
xchg
rcrb
xor
push
lds
and
pusha
push
mov
ja
xor
rolb
gs
mov
dec
xchg
push
leave
lcall
jbe
mov
insl
sbbb
lret
xchg
xor
and
out
add
push
or
jno
sbb
movswl
int
fsubrl
push
loope
sub
sub
fimuls
sbb
push
inc
sub
dec
lcall
cmp
lods
adc
mov
add
sub
faddl
inc
dec
shll
xbegin
test
pop
xor
xchg
xchg
shlb
rol
aad
and
repnz
cmp
and
fsubrl
xor
shrb
push
and
adc
jecxz
lcall
loopne
push
mov
repz
iret
dec
add
cmp
or
out
out
cwtl
pushf
insb
push
xchg
in
int3
mov
sbb
aad
adc
aad
lret
sbb
pop
popa
lahf
lcall
and
movsl
movsb
pop
mov
lock
lods
dec
xor
jns
jo
push
loop
adc
aaa
jo
movsb
jp
cmp
xor
loope
ret
out
sbb
jmp
roll
daa
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
das
repnz
ret
add
rolb
lods
mov
testl
mov
push
je
repz
jecxz
mov
push
cltd
pop
int
inc
mov
lcall
in
jne
push
aad
dec
push
fistpl
cmpsb
mov
cmpl
aad
testl
lea
aas
movsb
mov
loope
jnp
adc
shl
xchg
loope
mov
pop
cld
dec
sub
lahf
test
push
push
mov
pop
xlat
xchg
xchg
ret
insb
jno
dec
int3
inc
fs
inc
push
cmp
adc
and
push
mov
add
mov
xor
adc
in
inc
nop
dec
imul
xchg
aaa
sub
push
es
cmp
shll
inc
sti
lret
xor
test
inc
daa
xchg
or
add
cld
xchg
faddl
or
push
or
jbe
outsl
iret
andb
xchg
adc
xchg
push
push
outsb
inc
int
movsb
test
das
rolb
mov
mov
mov
cltd
inc
pop
cld
not
xchg
and
sub
xchg
cmc
push
iret
iret
or
out
lret
jmp
jnp
xchg
loopne
jnp
and
mov
das
jmp
xchg
aaa
mov
mov
ja
cld
cmp
mov
popa
pop
test
or
xchg
and
jl
enter
test
inc
das
bound
sub
mov
sbb
rol
pop
xor
xor
pop
push
pop
icebp
ljmp
dec
imul
sub
hlt
in
enter
cmp
out
cld
mov
mov
xor
push
repz
sahf
test
shll
and
mov
test
inc
inc
out
in
and
push
movsl
mov
stos
out
xchg
sbb
pop
rcll
add
test
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
sub
iret
adc
jle
add
adc
dec
les
push
xor
mov
repz
les
rolb
xor
aaa
push
loopne
dec
adcb
inc
sbb
sbb
popa
shr
aad
lods
imul
and
daa
out
idivl
or
lahf
addb
pop
push
push
repnz
inc
in
or
lcall
or
loope
ds
mov
das
mov
fiaddl
es
in
lea
xor
call
outsb
cmc
es
popa
outsl
ss
dec
in
rorb
hlt
push
movsl
jecxz
rcr
lcall
je
jbe
int3
std
cmc
scas
xor
push
pop
dec
cmp
mov
aam
scas
push
in
lods
sbb
ljmp
inc
fsubs
inc
idivl
or
ljmp
sarl
stos
pop
pop
inc
push
icebp
adc
sub
adc
push
es
std
cmp
fcoms
arpl
out
adc
ror
in
cs
rolb
lods
call
jp
clc
insb
pushf
inc
nop
adc
and
jecxz
dec
rclb
std
inc
push
jle
xchg
dec
stos
inc
fsubrl
or
push
test
jns
push
pop
cs
mov
in
int3
push
mov
adc
and
fs
movsb
arpl
icebp
out
xchg
xchg
push
fs
pop
stos
int3
add
mov
data16
aam
decb
test
pop
pop
mov
jns
test
mov
lret
insl
icebp
adc
jno
inc
inc
mov
adc
mov
cmpsb
mov
xor
outsb
jnp
cmpsl
lock
jg
xor
xchg
push
lods
mov
push
lret
ret
sub
ljmp
and
pop
scas
sub
jbe
int
jp
inc
sub
adc
fs
out
pop
iret
inc
pop
ljmp
jne
jg
inc
push
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
inc
push
andb
jle
jl
jle
shll
int
test
loop,pn
leave
mov
push
pop
dec
xor
lock
dec
push
mov
ds
xchg
insl
mov
adc
mov
clc
xchg
cmpsl
xchg
jle
pop
pop
inc
mov
cltd
lea
or
fwait
negb
cwtl
mov
push
lock
ret
insl
jo
lods
stos
inc
cmp
pop
pop
pop
xorl
popa
mov
ljmp
and
jno
xor
and
addr16
mov
iret
inc
dec
daa
in
jle
ret
in
imul
dec
ret
pusha
pop
lret
cmp
arpl
inc
mov
insb
les
adc
fdivrs
push
and
jg
cld
test
popa
pop
cs
or
loopne
nop
outsb
and
xor
mov
push
inc
roll
out
aad
mov
pusha
mov
fisubl
xor
cld
ret
or
mov
lret
clc
xchg
pop
push
sbb
faddl
shl
decb
and
imul
mov
sbb
stos
into
and
enter
mov
xor
jg
push
jae
daa
cmp
jne
js
testl
xchg
fstl
lds
rorl
add
ljmp
jno
and
cmpsb
mov
ljmp
insl
in
jecxz
xchg
jne
cltd
pop
popf
cmp
xchg
dec
dec
pop
imull
out
inc
gs
mov
ljmp
hlt
push
call
ss
aaa
inc
mov
adc
jmp
and
and
xorl
xor
sub
repnz
jmp
inc
dec
in
push
jmp
sub
mov
or
inc
inc
fisubl
fistpl
es
mov
pop
fdivl
pop
adc
stc
inc
jmp
roll
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
out
sub
jle
jl
jle
outsb
cmp
jle
cmp
mov
rcrb
lret
ljmp
push
bound
adc
divl
mov
test
and
jns
jns
mov
push
dec
sbb
and
fcoml
mov
loope
cmp
adc
es
ret
xchg
sub
push
xchg
push
and
test
out
jecxz
mov
hlt
push
pop
call
ja
mov
je
mov
js
scas
ja
mov
stos
pop
loope
mov
push
xchg
jno
leave
mov
add
mov
pushf
daa
mov
jle
lcall
movsl
pop
loope
rolb
out
movsb
insl
jo
cmp
shrb
cmp
out
dec
cmp
iret
xchg
sub
out
fidivrl
outsb
stos
cmpsl
xor
cmp
outsb
mov
mov
addr16
out
push
aas
in
jno
mov
push
scas
scas
cmpsb
xlat
and
in
adc
add
cmp
push
pop
gs
inc
pushf
sub
test
imul
mov
sti
dec
pop
mov
aaa
push
loop
mov
xlat
lahf
add
push
dec
lods
pop
adc
jns
iret
hlt
push
fisubs
ret
ljmp
sti
in
in
mov
adc
cld
sub
xchg
daa
mov
xchg
dec
xchg
jmp
xchg
push
dec
jns
aam
call
and
sub
jno
pop
adc
fisubl
mov
or
xor
push
jb
cli
mull
pop
imul
jmp
jae
xlat
mov
pop
sub
imul
jecxz
sbb
lods
cli
fists
cmp
inc
cli
mov
mov
jne
mov
dec
mov
imul
xor
push
jno
xlat
test
in
mov
repz
adc
and
orb
pop
add
add
sahf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
pop
ds
and
jle
lret
es
sub
and
loopne
lock
mov
sbb
ljmp
ds
movsb
add
ficoml
dec
inc
and
adc
ljmp
dec
add
sub
sahf
mov
js
push
sbb
scas
push
adc
fucomip
push
aam
xchg
dec
jns
mov
aad
pop
and
push
cmp
mov
push
sbb
scas
xchg
cmc
mov
cmpb
jne
and
cmp
mov
cld
mov
mov
mov
pusha
out
fimull
mov
xchg
outsl
and
mov
cmp
mov
testb
adc
dec
rcll
inc
dec
xchg
xchg
mov
out
and
xor
inc
std
mov
in
xor
cmp
xchg
pop
sbbb
test
fs
out
xor
and
sub
mov
mov
push
dec
ret
outsl
xor
mov
test
imul
jg
or
ja
popf
daa
pop
pop
addb
out
orb
stos
int3
int
and
jle
lcall
insb
ret
les
sbbb
repz
and
lea
sub
lock
es
mov
adc
xor
mov
jns
mov
jb
test
or
adc
xor
mov
addr16
stos
sti
ret
lret
decb
push
out
jnp
mov
sub
jno
pop
add
sahf
xor
cmp
je
xchg
jnp
or
xchg
int3
mov
inc
fcmovbe
mov
fdiv
push
in
fsts
pop
dec
std
mov
or
inc
mov
iret
cltd
ljmp
roll
notl
xor
inc
jmp
cwtl
dec
jnp
mov
daa
orb
ret
insl
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
push
enter
enter
jl
jle
and
cmp
push
dec
xor
inc
aas
enter
daa
push
jmp
inc
ss
push
add
xchg
fwait
loopne
out
cs
test
add
test
int
and
stos
mov
test
cli
sti
jecxz
xor
ds
aas
inc
pop
fucomi
push
arpl
xchg
jmp
mov
adc
jecxz
and
or
sub
pop
pop
adc
pop
pop
mov
pop
pushf
mov
cli
jno
jnp
push
clc
iret
pop
or
jp
jno
pop
nop
or
ljmp
xchg
inc
mov
or
jns
pop
out
xchg
adc
ror
clc
stc
mov
push
add
xchg
xchg
clc
lods
out
outsl
repnz
dec
xor
inc
mov
in
adcb
mov
push
add
or
les
cmp
mov
dec
repnz
dec
jns
pop
or
movsl
imul
mov
test
jb
hlt
das
shrb
pop
xchg
mov
sub
and
push
daa
jb
into
xchg
js
mov
pop
mov
dec
dec
inc
jne
pop
fistl
mov
sti
jno
int3
andb
les
push
jbe
xchg
pop
arpl
stc
or
pop
mov
inc
ficoms
stos
push
mov
jp
cld
ret
in
sbb
shlb
loopne
out
sub
out
test
dec
jno
inc
lods
insl
dec
inc
cmp
rorl
popf
jo
jo
movsl
mov
pop
sub
aam
test
xor
stos
mov
dec
test
xchg
lahf
sub
cs
cmp
adc
mov
shl
int
cmp
sahf
dec
test
stos
mov
xor
inc
ret
sub
push
jmp
icebp
divl
in
in
jne
pop
jns
jbe
push
je
test
sub
pop
ret
mov
mov
jle
stos
xor
divb
mov
or
test
add
mov
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
insb
mov
jle
and
jle
jecxz
mov
sbb
in
insb
imul
or
xchg
xor
ss
jno
pop
mov
ss
pop
pop
jmp
xor
shrb
aas
popa
int
loope
dec
addr16
in
dec
cltd
xor
or
dec
in
fcompl
fadd
dec
pop
aam
js
jns
xorl
xchg
movsb
insl
mov
hlt
scas
loopne
push
sub
jmp
and
jmp
incb
ficoml
rcrb
fwait
inc
mov
dec
xchg
push
pop
add
adc
pop
movsl
inc
nop
movsl
xchg
and
movsl
adc
aaa
dec
xchg
lock
pop
sbb
aaa
mov
sbb
dec
stos
getsec
and
scas
jo
outsl
scas
fcmove
iret
sub
inc
sahf
add
dec
push
test
mov
pop
or
shrb
inc
shl
push
dec
lahf
push
dec
adc
sub
das
lods
clc
cltd
dec
dec
sub
aad
sar
add
mov
pop
inc
xchg
sub
rcl
cld
mov
cmpsb
jne
mov
xchg
jle
addr16
je
xor
xor
lods
xor
push
or
repz
aaa
xchg
mov
gs
daa
mov
js
mov
or
add
out
adc
pop
sarb
or
mov
subb
rorl
sub
mov
xchg
outsb
cmp
push
dec
cmpsl
sbb
sbb
inc
rcrb
popa
sbb
das
cmp
fs
mov
jb
shll
pop
das
jecxz
fadds
push
fimull
sahf
add
aaa
dec
mov
mov
pop
rorb
jne
lret
in
xchg
aad
mov
push
loopne
mov
iret
lock
call
lea
cmp
pop
jl
and
inc
in
test
lret
pushf
jo
xchg
dec
cmpsb
fcmovne
arpl
insb
out
dec
fsts
inc
cmp
iret
gs
fsub
xchg
imul
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
addr16
jle
and
jle
mov
pop
cld
sub
mov
jbe
cltd
mov
sbb
push
jl
or
push
push
fmull
jne
popa
cmc
mov
ret
fwait
mov
jcxz
push
xor
mov
movsl
sub
cs
cmpsb
insb
scas
out
scas
movsl
dec
add
movsl
int3
repnz
add
add
add
lock
call
push
mov
repz
inc
lahf
add
mov
adc
orb
jno
testb
int3
imul
mov
enter
dec
push
nop
mov
mov
mov
lods
pop
fwait
mov
inc
lock
push
pop
adc
cs
mov
cwtl
cmc
push
jmp
mov
dec
jnp
jae
mov
js
dec
xor
test
add
lods
jmp
mov
jbe
xchg
fmuls
sbb
mov
out
push
lret
sbb
mov
lock
clc
inc
jle
in
neg
xchg
xchg
int
in
stos
adc
icebp
arpl
xor
and
roll
and
xchg
pop
xchg
scas
ss
jle
ret
lods
in
fdivp
fadds
cmp
insb
dec
adc
cli
add
enter
adc
jnp
addr16
cmpsb
enter
xchg
xlat
in
pusha
push
sbb
sbb
mov
and
xchg
add
mov
cmp
sbb
jns
bound
pop
push
loop
cmpsl
dec
mov
xor
push
icebp
xchg
mov
leave
pop
out
jg
pop
pop
test
das
sbb
out
xor
loopne
pushf
xlat
pusha
pop
and
cltd
and
jge
movsb
cmp
and
imul
insb
ret
movsb
xchg
mov
mov
fsubrp
daa
xor
popa
fmul
push
je
or
jmp
push
mov
mov
mov
pop
imul
lds
and
mov
fsubrl
imul
add
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
int
mov
jle
jl
jle
shlb
les
dec
andb
xor
mov
outsl
sub
mulb
std
adc
mov
jle
test
jle
dec
cltd
insl
adc
js
mov
add
add
sarb
sbb
icebp
sar
push
mov
test
ss
xchg
imul
into
and
vmwrite
push
mov
rorl
jge
inc
or
cmp
addr16
push
or
mov
pop
rcrb
shll
mov
xchg
push
inc
sbb
push
mov
xchg
push
daa
aam
test
lods
or
sub
rorb
rsqrtps
mov
push
or
mov
xor
dec
adc
jne
xchg
out
jne
mov
inc
and
loopne
lods
xchg
mov
add
cmp
jnp
cmp
sbb
stos
xor
xchg
ud1
xor
cmp
movsl
push
push
pop
loopne
xchg
aam
jnp
int3
enter
pop
gs
sub
leave
test
int3
push
mov
sub
in
jge
push
loope
ret
shll
gs
insl
aaa
push
insl
mov
call
jb
repnz
loope
mov
outsl
jb
cmp
cli
addr16
popf
xchg
addr16
push
and
notl
movsl
fmulp
xor
ljmp
repz
pop
sbb
aaa
push
dec
pcmpeqw
mov
mov
dec
out
add
sbb
inc
arpl
mov
push
sahf
and
cmp
lock
stc
movsl
mov
rcll
sbb
sbb
js
insb
setp
imulb
pop
mov
pop
mov
pushf
xchg
jmp
repz
xchg
mov
popf
xchg
xchg
lahf
xor
sub
cmp
insb
or
in
xchg
jno
pushf
icebp
cmp
ror
in
insl
dec
fsubs
inc
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
push
test
es
call
dec
jge
scas
jecxz
cmp
int3
rcr
mov
ret
cld
outsl
inc
lock
push
out
mov
ret
in
push
mov
arpl
mov
cmpb
pusha
stos
cmp
push
loopne
fnstcw
fcomi
cmp
mul
pop
xorl
sbb
jmp
ljmp
inc
pop
push
rcrl
inc
aam
add
jl
inc
jecxz
in
or
std
daa
popf
cli
and
je
mov
mov
dec
outsl
movsl
gs
ljmp
daa
mov
js
testl
inc
insl
out
in
jns
adc
mov
addr16
dec
lds
push
iret
in
test
outsb
or
jle
enter
sahf
lret
or
hlt
xchg
call
cli
cmc
jp
sub
sahf
scas
out
out
mov
adc
movsl
fimuls
push
xchg
cli
jp
call
bound
or
scas
inc
mov
mov
lods
mov
xor
out
and
mov
aad
dec
repnz
add
in
or
outsl
rorl
xor
ret
dec
or
adc
lret
adc
negl
scas
sbb
sti
xor
mov
movsl
gs
sub
jb
fnop
pop
fs
imul
mov
mov
cmc
pop
push
sbb
mov
push
dec
ljmp
xchg
cmp
sbb
in
fwait
in
mov
loopne
imul
mov
int3
mov
sbb
loopne
out
rorb
das
mov
int
inc
push
pop
orl
push
cs
sar
sti
icebp
xlat
icebp
dec
xchg
ror
mov
or
pop
sub
jo
pusha
pusha
sub
mov
xchg
cmp
loopne
mov
addb
pusha
mov
inc
sbb
out
ja
adc
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
in
das
and
and
jle
pop
lea
or
fidivs
into
mov
push
mov
cmp
pop
stos
sbb
aas
movsb
mov
outsl
ja
es
mov
mov
aam
pop
mov
inc
mov
add
cmpsl
inc
push
add
xor
inc
andb
lret
mov
and
testl
sub
lcall
sbb
cltd
or
sbb
scas
push
dec
mov
jnp
icebp
mov
inc
jp
add
and
mov
addb
cs
add
push
dec
jmp
into
and
add
push
test
jg
in
xor
in
stc
or
ret
push
mov
mov
mov
test
and
jnp
jecxz
test
loopne
xchg
add
inc
cmp
scas
lock
outsb
loop
cwtl
loope
dec
jbe
sbb
iret
lods
xchg
dec
dec
and
inc
jb
ss
insb
pop
lock
int3
and
pop
ds
fadd
int3
mov
les
cmp
adc
lret
mov
mov
sti
les
sub
inc
or
or
lods
jns
push
dec
decb
popf
scas
and
push
lea
leave
dec
cmp
ljmp
int3
sub
cmp
aas
ds
pushf
mov
sub
mov
inc
pop
sbb
adc
aad
sub
sub
fldenv
ret
inc
mov
push
insb
pop
or
pop
inc
lret
bound
dec
notb
push
jecxz
sub
inc
mov
sbb
sub
inc
les
xor
in
and
jge
dec
mov
add
addl
movsb
mov
enter
dec
std
or
jno
jp
xor
fbld
cmp
repz
lret
stc
enter
lcall
xor
cs
repz
dec
insl
ja
jp
lods
cmc
dec
push
dec
icebp
inc
insl
xor
hlt
loopne
pop
dec
adc
xor
and
jge
dec
cmp
mov
pushl
jmp
lods
mov
outsb
xorl
pop
shlb
fcomp
jle
and
jle
sbb
lea
call
fisttpl
cltd
into
dec
mov
sbb
out
lcall
adc
out
imul
mov
xchg
jl
lret
lret
cmp
add
cmc
cltd
xchg
cmpsb
sub
inc
xor
or
out
loope
push
xchg
xor
cmp
pop
cmp
xchg
cltd
cli
daa
pushf
mov
les
pop
jbe
rcrl
sbb
addr16
insb
add
mov
add
sbb
add
and
movsl
loopne
adc
dec
push
popf
and
mov
inc
imul
mov
jb
push
pop
jnp
pusha
lock
mov
jne
xchg
pop
icebp
push
jns
idivl
cltd
popl
dec
int3
loop
xchg
loop
add
sub
lahf
icebp
adc
adc
fisttpl
xchg
orb
and
jp
shrl
push
hlt
cld
insl
iret
fwait
xor
jg
scas
movsl
in
dec
aam
fimuls
mov
shl
mov
pop
push
iret
cmc
out
mov
adc
lcall
adc
or
mov
out
mov
mov
pushf
push
fcmovnu
leave
insb
jp
push
pop
inc
inc
shlb
push
adc
sub
and
sub
shll
add
popf
jo
push
lods
lret
fbstp
add
loopne
addr16
loop
add
push
sti
dec
jnp
mov
cmp
cmpsl
pusha
rcll
sbb
into
inc
aaa
cltd
loopne
arpl
xor
sbbb
roll
jge
or
in
call
sub
and
stc
out
cmp
fdivp
cmc
sub
ds
pop
enter
jecxz
cmp
roll
and
loope
ja
lods
scas
clc
xor
add
sub
orl
shlb
stos
push
fisubl
mov
je
movsb
pop
sahf
rcll
and
cmc
cmp
filds
popf
sbb
sbb
pop
ljmp
xor
and
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
cmp
or
mov
lds
mov
xor
lock
aam
lods
cld
xor
pop
cmp
js
and
fcmovnu
inc
or
cmp
dec
sahf
cmp
cmp
aam
inc
lods
jle
fists
jl
pop
inc
adc
lret
mov
jnp
arpl
les
xor
loop
pop
mov
xlat
lods
in
sbb
in
adc
pop
dec
dec
or
xchg
adc
cmp
dec
aam
jo
pop
pop
das
into
adcl
fs
shrb
aaa
mov
lods
mov
out
adc
movsb
ljmp
pop
popa
in
add
shl
sbb
mov
insb
dec
sub
jae
cmp
pusha
ror
pmaxub
lock
lahf
daa
iret
test
mov
mov
loop
inc
pop
into
fstps
ss
scas
cmp
mov
push
cmp
mov
icebp
ror
add
mov
pop
mov
mov
pop
out
stc
test
rcrl
repnz
push
scas
jae
push
mov
pop
imul
or
sbb
pop
mov
mov
add
orl
stos
fisttpll
daa
andl
popf
mov
cltd
mov
ds
inc
outsl
adc
mov
fistl
insl
mov
push
jmp
outsb
adc
shll
test
rclb
sub
add
push
int3
insb
dec
jmp
sti
fisubs
lahf
fdivrl
pop
push
dec
jne
xlat
add
arpl
les
fistps
stos
dec
loop
sub
jmp
add
inc
mov
or
sbb
in
xchg
stc
stos
test
out
fdivs
into
loopne
call
cmpsl
xchg
and
pop
aad
call
dec
or
lahf
shlb
xchg
and
movsl
and
jno
push
push
jbe
mov
mov
movsb
scas
mov
lea
fldt
cmpsl
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
mov
repnz
jle
sub
and
pop
push
or
and
ljmp
mov
pushl
cltd
add
mov
dec
leave
pop
into
pop
xlat
or
rorl
mov
jmp
or
mov
cmp
or
sahf
iret
lret
cli
mov
jmp
push
push
das
das
popf
sub
push
cmp
jg
jae
sub
xlat
pop
insb
push
dec
cmc
xchg
push
adc
xchg
sub
mov
mov
or
sub
ror
test
mov
icebp
inc
out
sti
repz
and
add
mov
pop
jo
into
repnz
push
fimull
pop
nop
mov
cmp
ja
xchg
add
divb
xchg
fcmovne
clc
pop
mov
pop
mov
cwtl
push
sbb
mov
pop
pushf
sub
cs
or
movsl
dec
lds
sub
pop
ficoms
loop
out
ljmp
and
xchg
daa
ret
enter
test
jno
int3
dec
je
out
lahf
int
mov
fnsave
and
adc
xchg
clc
push
xchg
rcrb
leave
push
lcall
cmp
mov
push
mov
es
inc
arpl
or
xlat
push
enter
leave
adc
jne
lcall
cmp
cmp
mov
push
addb
cli
cmc
pushf
test
mov
mov
jno
jns
push
push
mov
andnps
outsb
les
cmp
data16
in
out
and
paddsw
outsb
test
mov
out
xor
cld
mov
test
xor
ja
inc
sbb
xor
test
sbb
enter
stc
add
cmpsb
shll
and
pop
daa
dec
or
addb
mov
sbb
jge
mov
fwait
mov
dec
pop
cltd
push
adc
stos
pop
jns
dec
and
sbb
pop
sti
mov
lret
loop
icebp
jl
sbb
add
mov
mov
das
lret
push
push
sbbl
jmp
lds
popa
mov
fisttpll
and
cmp
das
pop
xchg
insb
lods
xchg
mov
sbb
push
lock
push
scas
dec
mov
inc
aam
mov
jne
fildl
mov
lds
jmp
call
fs
xchg
jecxz
mov
push
call
sub
mov
mov
ret
mov
sub
cmp
sub
out
cs
hlt
jae
jnp
dec
les
loope
adc
mov
and
pop
outsb
sbb
pop
xchg
adc
icebp
je
das
push
ret
jb
and
stos
loope
rep
jno
and
push
inc
xorl
push
sub
iret
bound
outsb
xchg
mov
or
mov
les
mov
lahf
in
pop
cld
sbb
lcall
paddusw
ficoms
mov
xchg
sub
insb
cmpl
int3
xchg
mov
lcall
dec
mov
xchg
mov
mov
test
push
mov
sarb
pushf
xor
adc
pushf
pop
shl
dec
add
psubq
cmp
xor
sbb
sbb
push
and
dec
push
stos
and
pop
divl
mov
icebp
fwait
test
sbb
lock
mov
jae
out
jae
notl
insl
xlat
xor
and
movsb
notb
js
dec
and
sub
xor
daa
xchg
subb
test
push
pop
cs
pop
adcb
push
lods
xchg
cmpsl
aas
loopne
test
sub
push
sbb
sti
pop
aaa
xor
inc
test
inc
imul
sub
pusha
adc
cltd
mov
mov
dec
mov
dec
pop
into
pop
add
dec
gs
adc
in
jo
xor
mov
mov
adc
xchg
sti
fs
shll
push
ret
movsb
mov
call
lret
stos
or
sub
test
outsl
and
fsubrs
dec
cmp
sbb
in
push
les
sbb
push
loope
repz
or
inc
jg
clc
mov
pop
test
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
lods
lds
ja
loop
jle
jl
jle
ds
xor
in
repz
lcall
add
lret
fsubrs
fnstsw
sub
dec
sub
inc
addr16
pop
popa
sub
fimuls
out
pop
cmpsb
enter
xchg
inc
and
mov
sbb
fs
and
loopne
inc
ja
in
fcmovnu
loop
cmpsb
dec
arpl
rorl
xchg
pop
jae
dec
fdivrl
lahf
cld
mov
gs
fdivrp
sbb
mov
add
cmpl
loop
ja
cmp
fs
add
aad
pop
push
jecxz
test
sbb
add
les
mov
cli
push
mov
jo
cmp
cmp
mov
aaa
lcall
sbb
mov
mov
pop
imul
mov
push
pop
out
mov
jno
or
adc
cmc
jecxz
lds
jns
test
lds
cwtl
jo
pop
rorl
mov
loop
outsl
aas
in
stos
inc
jbe
std
cwtl
es
xchg
out
push
push
sbb
sbb
xlat
ret
call
or
xchg
add
ss
mov
inc
adc
cmpl
mov
jo
mov
adc
inc
cmp
jmp
adc
or
clc
popa
xchg
cld
js
jno
sbb
xchg
inc
mov
mov
mov
xchg
cld
jp
jle
lds
pop
scas
jp
mov
cwtl
shrb
in
pop
sbb
inc
jne
sti
and
aaa
sarl
cmp
movsb
ljmp
sub
ret
mov
movsl
mov
cld
adcb
pop
es
xor
push
arpl
fsubs
lcall
shr
mov
mov
leave
fcmovnb
int
sub
lret
push
pop
mov
popa
jne
ja
mov
and
pushf
clc
add
xchg
sub
inc
push
testb
add
xor
pusha
mov
shrl
scas
dec
fsts
or
sub
push
cwtl
lock
inc
inc
xchg
push
adc
mov
mov
popf
jle
iret
and
scas
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
mov
enter
jle
cmp
or
add
pusha
idiv
scas
fidivs
ret
xor
inc
pop
pop
das
sub
and
or
cmp
pop
movsb
mov
pop
push
outsl
testb
cmp
jno
or
cmp
popa
mulb
out
mov
inc
dec
add
gs
fldcw
pop
insb
mov
clc
outsl
loopne
int
or
sbb
or
adc
shrl
and
scas
inc
xchg
divl
aas
ficoml
xchg
cwtl
aas
or
in
sub
and
out
sbb
add
inc
dec
cmp
nop
imul
and
cvtpi2ps
push
inc
ret
data16
into
daa
or
sbb
loop
std
jle
sarb
lahf
xchg
fstpl
test
hlt
adc
pop
out
pop
and
pushl
lds
outsl
test
icebp
sbb
test
pop
loopne
aaa
mov
insb
fsubs
mov
pop
push
pop
sbb
rcll
imul
push
test
fcoms
sbb
test
push
clc
insb
cld
add
mov
data16
loope
pop
pop
mov
xor
and
lock
mov
imull
das
xchg
mov
dec
push
or
dec
daa
push
push
jns
in
das
xchg
mov
push
and
inc
inc
popf
repz
loop
cli
pop
les
jae
or
enter
movsb
repnz
nop
cwtl
jne
pop
mov
jne
call
cmc
stos
ss
xchg
jo
cmp
mov
jne
cmp
and
mov
cmpsl
xchg
push
pop
add
push
mov
fildll
std
out
shll
fisubrs
enter
not
insb
cmp
faddl
or
cmp
incl
icebp
mov
sub
enter
mov
les
inc
movsl
xor
jl
int
jecxz
or
jo
inc
mov
jnp
loopne
sbb
lcall
pop
cmpsb
or
add
pop
pop
movsb
insb
fdivl
sub
dec
push
xor
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
fstl
jmp
dec
out
jle
cmp
insb
fidivs
data16
in
xor
inc
push
mov
mov
popf
lahf
repnz
adc
jle
imul
mov
outsl
cld
cmpsl
aad
jnp
nop
int3
mov
dec
or
aaa
mov
push
jge
repnz
and
sarl
inc
aas
push
cmp
adcl
enter
pop
add
vshufps
movl
mov
xorl
ja
fstpl
data16
mov
outsb
popa
or
xor
bound
es
dec
loopne
aad
loop
xchg
iret
rcr
dec
mov
int
sbb
jmp
scas
maxps
sbbb
xchg
rclb
fistl
rcl
sbb
gs
sub
dec
jns
roll
adc
ds
imul
jmp
cld
xor
jge
add
loope
daa
mov
add
push
xorl
cmp
sbb
clc
bound
adc
fstpt
and
or
jmp
popl
pop
call
mov
stos
test
mov
testl
pop
inc
xor
pushf
xor
and
xor
roll
lret
mov
xor
jg
mov
push
stos
gs
in
popf
cmc
inc
mov
testl
jle
orl
into
adc
clc
pop
call
inc
sbb
dec
add
psubd
fstl
xchg
and
lret
std
mov
jno
and
fsubrl
fwait
pop
sbb
lea
ret
xor
xor
mov
adc
push
push
push
mov
and
jge
cmpl
add
xchg
mov
push
ja
icebp
icebp
pop
or
das
pop
loopne
jecxz
push
cwtl
or
enter
pop
xor
out
cltd
fdivl
or
sub
inc
fcmove
and
out
inc
cmp
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
icebp
movsb
push
in
jle
cmp
sub
in
aad
jno
push
mov
xchg
stos
aas
mov
fdivr
leave
mov
std
mov
fistps
add
adc
mov
das
out
cmp
int3
push
lds
cmp
pop
cmpsl
hlt
push
fldt
lret
mov
xchg
es
cmp
int
mov
in
ret
popa
push
bound
mov
scas
jecxz
test
bound
inc
sbb
test
push
pop
lods
insl
cmp
das
mov
sbb
aad
mov
mov
ret
incl
xor
mov
sbb
scas
in
stos
andl
int3
out
adc
or
cld
dec
add
mov
movsb
int3
push
dec
rolb
dec
xchg
xlat
lock
mov
or
dec
icebp
mov
pop
mov
ret
jp
out
popf
push
cmp
and
lret
into
test
mov
jae
out
inc
dec
xchg
in
sbb
xchg
cmpsl
pop
sub
jmp
ds
fbstp
push
jmp
cwtl
pop
stc
adc
sub
push
dec
repnz
aam
cmpsb
xchg
ja
adc
clc
cmp
outsl
xchg
fdivrl
fsubrl
movl
mov
aas
push
mov
icebp
xchg
push
inc
bound
outsl
fisubs
pop
sub
cmp
test
les
insl
pop
roll
in
aam
loope
mov
mov
mov
push
push
push
ljmp
mov
stos
pop
and
and
jle
out
repnz
fs
into
outsb
scas
imul
testl
xor
push
dec
push
insb
int
ret
adc
nop
arpl
jle
or
out
and
push
popa
les
scas
pop
sub
jl,pn
ret
sub
push
sub
pop
jl
call
shll
es
push
rclb
orb
jno
jne
pop
orl
cmp
jb
sub
push
ficomps
inc
in
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
jns
xchg
insb
shr
jle
cmp
cmp
xchg
fists
loopne
jb
adc
movb
loop
xor
test
sbb
mov
and
xorb
icebp
stos
xor
loopne
fneni(8087
popl
aas
mov
test
cld
xchg
js
mov
xchg
subl
xor
add
in
inc
mov
push
ja
lock
lahf
jbe
adc
dec
jne
daa
maxps
mov
pusha
call
clc
clc
loopne
shrb
pop
sbb
mov
dec
mov
aam
push
jmp
xor
clc
push
in
testb
insl
add
jnp
iret
xorl
cmp
dec
test
adc
pop
push
inc
fildll
int3
xchg
pushf
cmp
std
pop
stc
fucomi
leave
mov
cmp
add
mov
sub
pop
mov
pop
lods
dec
pushf
or
xor
dec
ljmp
incl
add
jb
jge
xor
lds
mov
sub
call
subl
jne
cmp
xor
inc
and
inc
sub
lods
sub
jne
iret
adc
mov
and
sub
cmc
sbb
push
mov
inc
stos
mov
fistpl
js
shll
imul
daa
shll
inc
cmp
mov
in
xchg
decl
aam
pop
dec
dec
clc
jmp
jae
cmp
fs
jbe
xchg
and
mov
call
aaa
mov
sub
fdivrp
mov
cli
and
mov
loopne
mov
xorb
push
dec
pop
stos
push
mov
call
mov
pop
fmuls
sub
push
repz
out
xchg
adc
loop
dec
fcmovnb
adc
hlt
mov
idiv
popf
imul
push
test
pop
mov
dec
xchg
add
fisttpl
stos
xor
jmp
xchg
mov
cmp
dec
mov
pop
or
imul
add
je
add
out
ss
add
add
add
leave
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
mov
enter
jb
shrb
ss
in
xor
mov
std
mov
pop
hlt
rolb
pop
inc
cmpb
mov
add
or
fisubl
mov
push
ss
loop
sub
sahf
fisttpl
xchg
aaa
out
push
mov
and
add
rep
int
mov
inc
sti
xchg
jge
mov
dec
fsubrs
rorb
nop
lds
es
pop
lock
lret
pop
bound
and
cmpsl
xchg
lret
jae
xchg
xlat
loopne
cmc
push
imul
sbb
shl
adc
jge
jecxz
out
xchg
ror
xor
push
inc
cli
jno
inc
jl
bound
andb
xor
cmpsl
sub
int
jp
adc
and
sbb
or
pop
ljmp
and
outsl
loop
xchg
xor
and
dec
repz
or
jp
sti
pop
push
add
outsb
and
out
push
push
push
xchg
mov
dec
jnp
dec
jecxz
mov
push
inc
mov
into
push
cmp
push
ja
sub
repnz
push
push
sub
xor
adc
push
aas
mov
dec
ss
fildll
pop
xchg
xchg
pop
and
dec
popf
notb
into
cmpl
int
add
mov
mov
test
pop
in
test
dec
idiv
shrl
pop
outsl
mov
and
xchg
cmp
push
out
fs
into
les
lods
and
xchg
pop
xor
mov
push
rcrl
xchg
data16
jecxz
xchg
jno
dec
daa
lahf
jb
push
cmp
inc
push
mov
mov
enter
inc
pop
sub
loop
pop
hlt
jmp
pop
jb
fs
xor
arpl
or
and
xor
nop
ret
jne
loop
daa
data16
stos
js
divb
jnp
ljmp
adc
shll
bound
jne
lret
push
sahf
mov
jge
aaa
addb
pop
mov
xor
lock
or
ficoml
nop
sbb
mov
movsl
mov
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
imul
jle
cmp
mov
inc
jge
jg
or
or
cmp
xchg
xchg
push
cli
push
and
in
jg
xor
mov
mov
push
jo
or
test
pop
into
xchg
inc
andl
daa
shl
mov
or
adc
pop
stc
iret
out
fwait
xorb
and
insb
xor
les
imul
cld
popf
ficomps
ja
xor
cltd
xor
test
out
mov
mov
aad
pop
mov
push
push
aam
jae
rolb
sahf
and
pop
ja
outsb
pop
les
pop
and
or
int3
adc
cwtl
mov
sbb
push
mov
stos
push
lods
inc
fstps
mov
mov
xor
mov
lds
push
push
pusha
scas
aad
call
cmpsb
and
sti
imul
rcll
jle
mov
or
push
aam
jecxz
aam
lock
push
lret
out
push
popf
fldl
stos
dec
mov
cmp
or
and
fsubr
adc
mov
in
fldl2e
lock
ret
or
lcall
jno
jb
jge
fsubr
fbld
push
dec
and
pop
in
cli
adc
mov
ss
mov
loope
xor
arpl
or
mov
jmp
insl
aaa
filds
jmp
sbb
jae
cmp
lcall
icebp
sbb
lret
lds
add
iret
xchg
jbe
enter
mov
repz
mov
sbb
or
cmc
aas
mov
aas
xor
in
out
lods
push
aas
cmp
test
imul
insl
lods
inc
loopne
cmp
xchg
cmp
or
inc
das
xchg
inc
int
cli
movsl
pop
mov
sub
pop
add
sbbb
cmpl
sbb
xorb
fcomi
movsl
sbb
das
int
mov
in
inc
cmpb
xchg
es
stos
mov
push
add
mov
scas
mov
xchg
or
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
ret
pop
jg
bnd
cmp
test
xchg
lock
adcl
sti
gs
shlb
call
fsubrl
ds
dec
roll
aaa
sub
xchg
dec
mov
add
or
push
adc
lahf
jae
push
das
and
xchg
push
pop
jl
into
xchg
loopne
test
in
clc
ret
jle
lcall
paddsw
in
mov
and
cli
mov
arpl
inc
mov
scas
and
jmp
into
in
daa
icebp
in
cmp
sub
pop
push
ljmp
mov
daa
insb
cmp
testl
lahf
inc
mov
mov
mov
adc
scas
or
mov
mov
or
aas
mov
xchg
fimull
leave
sub
packsswb
fildl
ret
push
in
jle
ja
les
or
dec
frstor
fbstp
pop
repnz
lock
xlat
rclb
dec
flds
mov
push
or
icebp
lods
pop
fstpl
and
mov
dec
fsubrs
cmp
mov
cltd
or
mov
test
xor
sbb
aas
push
es
mov
orb
mov
or
aas
lret
addr16
inc
inc
stc
push
cld
xor
aam
icebp
addr16
lret
fwait
push
jne
jo
sub
fs
ret
push
sbb
aas
pop
sub
mov
add
jbe
in
popf
push
mov
rclb
push
mov
clc
jbe
jl
adc
shlb
push
push
mov
lahf
dec
mov
notb
xor
mov
pop
insb
inc
fidivs
add
pop
mov
in
xor
aad
mov
aam
test
mov
xlat
mov
inc
dec
lret
xlat
or
lahf
addr16
inc
lahf
xchg
mov
loope
scas
decl
lahf
push
je
lcall
fucom
mov
aaa
jecxz
out
js
jge
inc
outsb
mov
adc
pop
testb
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
jmp
mov
call
jl
jle
imul
cmpsl
cmp
mov
test
jo
mov
push
aas
scas
xchg
insb
adc
rcl
and
int
mov
je
mov
sbb
fs
cmp
mov
mov
mov
es
cmp
out
cmp
or
data16
icebp
aad
rorl
imul
and
mov
mov
in
ss
sbb
mov
mov
pop
inc
mov
mov
ljmp
outsb
jp,pt
lods
test
ljmp
in
out
add
adc
sbb
cmpb
fs
mov
cmpsl
jg
aaa
push
mov
pop
ret
and
push
mov
mov
mov
clc
jo
mov
dec
mov
fiadds
inc
popa
loopne
xchg
int
inc
cmc
pop
clc
xor
mov
enter
mov
mov
ret
cli
cmp
in
mov
inc
xchg
mov
ds
fsubrs
xor
subl
mov
mul
add
mov
lcall
test
cmc
dec
inc
ds
pop
mov
mov
hlt
fisubrl
pusha
std
jge
dec
cmp
cmc
mov
aas
xor
xchg
jle
cs
dec
mov
int
or
aam
cmp
or
mov
dec
xchg
and
push
push
fisttpl
mov
or
movsl
sub
xchg
mov
push
jmp
daa
lcall
scas
pop
dec
shl
xor
mov
or
dec
ds
and
sbb
popa
fs
push
xor
sbb
daa
cld
test
jp
enter
adc
xor
loopne
adc
lea
popa
cs
out
push
aaa
and
xchg
jns
sbb
popw
push
loope
aad
data16
add
loop,pt
mov
mov
mov
push
mov
jb
jnp
pop
pushf
jae
sub
xor
fwait
mov
dec
dec
inc
sub
cmp
and
sar
nop
jb
pop
dec
jno
imul
mov
sarb
or
scas
dec
add
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
push
push
je
mov
jle
cmp
xchg
pop
pop
and
call
xchg
cmp
lods
mov
ja
adc
pop
mov
int3
push
bound
and
mov
clc
adc
add
inc
xchg
cmpsb
movsl
mov
and
push
fnstenv
push
sti
jmp
icebp
sbb
scas
jae
push
in
pop
mov
pop
inc
mov
jo
and
ljmp
mov
mov
mov
ret
je
sbb
bnd
xchg
imul
leave
mov
xor
pop
jb
cli
les
push
inc
inc
or
outsl
addr16
fwait
daa
push
lret
pop
movb
fisttpl
sub
inc
loopne
stc
inc
js
mov
je
pusha
jae
in
pusha
loope
push
cmp
mov
cmp
cs
subb
add
ds
adc
nop
dec
mov
je
mov
or
dec
loopne
mov
jns
mov
out
dec
bound
pop
inc
es
cmpb
outsb
jmp
test
stos
add
push
subb
ds
je
popl
repz
xor
subb
nop
sbbl
rolb
loop
inc
mov
sub
inc
mov
lret
pop
fst
push
in
jg
sub
in
aas
add
sarb
xor
shlb
sbbl
cmc
enter
jecxz
ret
pop
sub
in
mov
data16
push
mov
fwait
arpl
idivb
inc
mov
lahf
jp
push
pop
lcall
int3
shr
sub
lahf
jmp
dec
push
add
dec
sub
ljmp
xlat
gs
cmp
xor
pushf
imul
popa
jg
les
jmp
shrb
andb
loope
inc
jecxz
out
je
popa
mov
pop
pop
pushaw
gs
push
pop
jns
data16
insl
loope
mov
sbb
sbb
xchg
mov
scas
sti
push
unpckhps
cmp
imul
aam
je
scas
jle
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
jp
jl
jle
cmp
sti
cmpsl
sbb
mov
repnz
test
lock
cld
pop
les
scas
aam
out
inc
mov
mov
outsb
cmp
jns
xchg
test
jbe
push
mov
cmp
lahf
xor
hlt
shll
into
push
jg
fstpl
loopne
and
mov
inc
add
add
mov
and
xchg
jno
movsl
mov
jb
push
ljmp
cmpsl
sahf
cmpsb
pushf
aaa
ss
mov
sub
and
add
pop
shll
push
push
aad
ljmp
push
mov
adc
cmp
xor
cmp
add
fldcw
out
add
dec
outsl
pop
dec
xchg
push
lods
test
lret
cmp
sub
xchg
mov
or
fistpll
lds
ss
xchg
cmp
and
pop
xchg
mov
mov
cmpsb
arpl
push
push
ja
dec
daa
jb,pn
inc
jae
ficomps
imul
bound
jl
or
enter
adc
jle
fisubs
push
jo
cmp
movsl
in
jno
sbb
xchg
or
imul
sbb
in
mov
outsb
and
pusha
orb
test
or
bound
sahf
jmp
lea
jp
jo
shl
dec
mov
ja
ret
mov
jp
adc
push
das
mov
subl
mov
out
inc
and
xchg
fs
sub
ret
les
pop
nop
pop
mov
and
test
shl
inc
mov
popa
mov
insb
mov
outsb
jb
jo
fcmovnbe
rolb
fisttps
mov
popf
jae
cld
aaa
and
pop
mov
lret
scas
cmp
adc
jnp
out
ja
fmul
sti
adc
sub
ret
xchg
divb
push
mov
or
sub
mov
xor
lret
mov
insl
mov
inc
cmp
xchg
ficompl
jo
shrl
add
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
imul
adc
sti
jle
cmp
xchg
stc
in
or
add
outsl
sahf
jnp
mov
sub
mov
dec
mov
jge
push
pop
loopne
jp
mov
gs
in
lods
xchg
sbbb
xor
cmp
jae
in
outsb
and
sub
lods
sbb
jp
lds
and
lea
mov
jnp
fsts
jmp
scas
mov
inc
dec
data16
cmpsb
xorb
ffree
js
mov
xchg
cmp
imul
adc
stc
mov
pop
sti
jbe
test
mov
mov
es
out
data16
push
push
cwtl
lahf
sbb
lret
lcall
out
movsb
sbb
lahf
lea
outsb
mov
lahf
push
or
addr16
repz
jecxz
jecxz
or
lret
jle
mov
les
aas
js
mov
dec
iret
in
sub
cmpsl
jns
add
pop
in
stos
push
cmp
sbb
mov
mov
adc
pop
gs
fists
movsl
negb
xchg
push
movq
cmc
pop
cmp
insl
lods
pop
add
lds
jbe
pop
leave
insb
mov
adc
dec
jnp
xchg
cmp
es
lods
pop
inc
arpl
xor
hlt
in
ret
push
andb
sub
mov
pop
adc
pop
push
aad
xchg
hlt
fs
mov
dec
loope
repnz
mov
mov
ss
mov
dec
inc
mov
xor
cmpsb
dec
ret
xor
or
add
mov
repnz
outsb
push
addr16
stos
jne
inc
jp
fistl
mov
adc
sbbl
jnp
jmp
inc
and
jnp
scas
jno
jecxz
push
orb
roll
sbb
lods
pop
dec
push
lret
fimuls
out
mov
je
xchg
cmpsl
dec
adc
mov
push
mov
mov
jnp
popa
inc
sub
xchg
xor
pop
andl
add
mov
sbb
dec
repz
repz
dec
hlt
adcl
or
push
or
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
mov
cmp
adc
rep
xor
mov
repnz
dec
dec
jle
fsub
lret
xchg
mov
xor
pop
fbstp
scas
inc
dec
cmp
mov
add
xor
daa
fmull
pop
dec
xor
cmp
pop
lea
push
dec
xchg
or
ror
outsb
imul
subl
or
sub
adc
shll
je
push
lahf
cli
lods
or
mov
ffreep
aad
stc
scas
decb
inc
pop
mov
imul
cmp
movsl
adc
xchg
push
and
inc
fwait
xchg
js
push
jno
adc
cmpsb
lods
and
cltd
pop
push
push
lcall
add
dec
cmpsb
addr16
pusha
add
cs
and
xchg
leave
pop
push
mov
sbb
xor
push
or
repz
fmull
imul
pop
into
and
pop
dec
pop
pop
cmc
pop
jge
mov
jne
mov
cmpsl
xor
lret
pop
lock
and
mov
and
dec
ljmp
mov
dec
lret
sbb
movsb
sub
sahf
shlb
mov
neg
and
mov
in
adc
bound
mov
test
xchg
aas
lret
mov
jg
or
sub
mov
sbb
xchg
aas
lods
inc
dec
sahf
push
pop
add
and
scas
mov
xchg
mov
adc
addr16
push
addb
jmp
fs
jb
in
iret
sub
roll
cmpsl
xchg
rcrw
or
jb
repnz
scas
sahf
jecxz
stos
ret
inc
das
lret
xor
pop
mov
aas
aam
push
push
add
xchg
std
sbb
jp
insb
add
cwtl
pop
push
movsb
mov
jnp
xchg
jae
fsub
sbb
out
jno
dec
das
dec
call
out
int
cmp
insb
mov
lods
mov
dec
and
sub
jne
daa
pop
mulb
jns
mov
push
push
pop
insl
or
frstor
dec
dec
cmpsl
loope
inc
cltd
push
inc
imul
jnp
push
push
xor
inc
in
scas
shrl
mov
jmp
dec
loop
lds
push
jo
mov
sub
pop
inc
decb
jle
cmp
fcoml
mov
cwtl
inc
mov
je
fdiv
mov
das
cmp
imul
add
out
shrl
scas
pop
std
insl
xlat
ret
jne
mov
loopne
sbb
mov
inc
sbb
bound
add
jnp
scas
mov
in
jb
jmp
push
lret
fistps
xor
cmp
aas
repz
in
lods
mov
fimuls
sub
mov
je
xchg
insl
cld
inc
je
pop
xchg
icebp
jns
out
jo
inc
out
mov
popa
addr16
xor
pop
cmp
sbb
fsub
push
imul
test
outsb
sub
dec
mov
out
sbb
sbb
jl
vucomisd
dec
jae
stc
adc
cmovb
xchg
mov
jb
and
xchg
cmp
std
or
mov
mov
icebp
inc
xor
iret
clc
repnz
jg
ss
imul
or
pushf
les
pusha
out
mov
sub
jnp
inc
pop
scas
into
mov
ficoml
push
jg
jg
and
pop
mov
cmpsl
inc
jmp
sbb
dec
inc
repnz
gs
out
pop
mov
jecxz
xlat
push
sub
enter
aad
or
fs
xchg
test
ds
clc
shll
lea
jbe
out
xchg
dec
sub
mov
std
dec
add
fidivrl
mov
xor
out
popa
cmpsl
xlat
or
insb
push
or
sahf
or
out
adc
adc
jo
mov
xchg
pop
imul
rcrb
test
and
dec
ja
mov
in
shll
xor
mov
iret
jo
fwait
add
addr16
rorb
enter
lods
lods
or
sbb
aaa
mov
xlat
lahf
jmp
xchg
dec
mov
repnz
jmp
dec
subl
insb
inc
jnp
outsb
lcall
fwait
push
add
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
rcl
cmpsl
aad
adc
jle
cmp
loopne
cmp
test
pop
jae
jne
mov
int
movsl
sub
aad
pop
pop
fstpl
adc
stos
pop
popf
leave
insl
mov
cmp
bound
lret
push
xor
mov
ret
xor
imul
jl
xchg
les
call
sub
into
inc
and
cmp
mov
xchg
repz
pop
xor
aaa
mov
cmpsb
fs
mov
shll
jle
inc
xor
mov
imul
jae
inc
mov
lock
data16
or
mov
xchg
mov
addr16
inc
je
hlt
push
mov
fistl
outsl
mov
ss
lock
sarb
adc
in
push
sbb
push
arpl
imul
dec
mov
sub
inc
adc
dec
je
movsb
scas
fildll
cwtl
data16
xor
cwtl
jmp
mov
adc
sbb
cmp
push
das
loope
sub
std
loope
movsb
push
xchg
daa
incl
xchg
or
subb
pusha
jecxz
xor
push
ljmp
shlb
push
or
and
add
cmpl
lcall
push
add
pop
mov
cmc
aam
add
hlt
cwtl
dec
adc
in
and
mov
fldenv
movsl
or
stos
sub
mov
pop
js
fistps
jg
in
xor
and
jmp
orl
jl
mov
scas
test
cmpsl
dec
data16
inc
push
not
and
push
fsubl
lods
adc
ljmp
pusha
hlt
pop
cmc
clc
hlt
fstl
xor
test
dec
ljmp
add
scas
sbb
push
push
sbb
mov
test
sbb
xor
shr
sub
sbb
xor
push
add
inc
popa
cmpsl
adc
outsl
popf
dec
rorb
jp,pn
das
inc
jle
ret
jbe
test
sbb
mov
pop
pop
jb
fists
xor
pushf
test
jns
iret
repz
shl
xor
push
xor
dec
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
cmpsl
dec
fiadds
jle
in
adc
mov
test
popf
lcall
mov
in
rcr
out
jbe
stc
aaa
je
loope
or
jbe
mov
icebp
push
dec
sbb
dec
sub
mov
adc
push
aam
dec
int
jmp
cmp
shr
fisubrs
cwtl
pop
push
lahf
adc
ds
or
xchg
push
push
or
repnz
adc
jg
bound
sti
mov
jo
jmp
mov
jnp
adc
sar
enter
pop
and
mov
test
xor
push
aaa
pop
in
aas
fisubs
sbb
push
lds
mov
or
mov
push
movsb
and
push
push
mov
push
addr16
cmpsl
ret
dec
inc
adc
in
cmp
insb
dec
icebp
clc
fcom
sbb
sub
push
movsl
sbb
pusha
mov
jo
loopne
cmp
mov
push
popa
adc
or
xchg
cltd
movsb
lods
popa
sub
stc
mov
adc
cs
pop
add
cmp
popa
jno
movsl
pop
call
adc
lret
ja
jae
andl
in
out
mov
or
dec
sub
or
sub
ljmp
inc
out
or
sbb
pop
add
aam
jae
fsts
mov
add
leave
adc
mov
rclb
push
mov
sbb
je
jnp
out
stc
mov
pop
mov
idivl
cwtl
es
in
push
jbe
jns
or
stos
pop
je
and
ja
inc
pusha
and
ja
outsb
jns
push
lret
mov
daa
imul
mov
fcomps
ret
adc
or
adc
push
mov
shrb
sti
fbld
movsb
ljmp
out
outsb
adc
or
lods
sub
stos
neg
jecxz
push
imul
push
sbb
or
xor
push
imul
sbb
push
sbb
roll
dec
pop
add
inc
inc
xchg
aaa
sbb
xchg
cmp
imul
scas
jnp
mov
shr
add
add
mov
cwtl
mov
mov
cmp
fildl
cwtl
mov
cmp
pop
popf
cmpsl
add
sbb
mov
aaa
mov
or
mov
mov
andb
and
push
mov
sbb
mov
cmp
xchg
iret
dec
dec
loopne
or
jmp
add
add
xor
mov
in
frstor
loop
out
jecxz
mov
add
insl
sub
or
xlat
test
lds
in
xchg
jmp
xchg
lahf
add
inc
out
adc
in
mov
push
test
imul
inc
mov
imul
sbb
push
call
push
xchg
mov
test
adc
pusha
push
xor
rcrb
jbe
mov
add
dec
fldcw
jp
sbb
mov
fstl
fimuls
mov
jecxz
sahf
jb
add
nopl
and
sub
jns
je
shll
test
push
in
movsb
sar
cli
jns
addr16
sbbb
inc
lahf
mov
push
arpl
sbb
pop
ret
mov
lods
movsb
mov
inc
popa
push
cld
xchg
mov
fsubl
cmc
negl
les
fstpl
idiv
aaa
mov
pop
or
pop
insl
enter
or
mov
xchg
pop
push
or
sbb
inc
daa
imul
inc
sbb
pop
cmp
dec
roll
or
lret
or
outsl
jp
push
push
add
xchg
dec
sbb
insb
jmp
xchg
push
mov
dec
mov
push
mov
xor
clc
pop
out
ljmp
les
dec
pop
pop
ret
mov
xor
les
dec
xor
sub
sbb
push
pop
fmul
pop
xor
jg
ret
loopne
cmp
add
stc
xchg
inc
adc
jb
cs
xchg
inc
lods
mov
mov
pop
ficoml
cld
xchg
std
jbe
adc
call
jmp
jo
and
dec
icebp
nop
ss
sti
icebp
out
jmp
andb
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
lret
dec
push
bound
jle
into
pop
pop
insb
fsts
xchg
mov
sarb
lea
cmp
push
gs
inc
mov
stos
cmp
xlat
out
cmp
jge
add
addb
lods
sub
ds
aaa
push
mov
and
fildll
add
aam
push
adc
daa
into
xor
push
inc
cltd
xadd
jns
rcrl
cmp
fsts
gs
xor
jae
pop
inc
int3
mov
stos
cmpsl
lret
pop
mov
cs
xchg
lods
stc
cmp
push
lds
sbb
pop
std
mov
stc
adc
inc
int3
xor
aad
xchg
orl
mov
and
test
push
xor
adc
jmp
rcrb
movsl
pushf
rep
std
stos
mov
fwait
imul
mov
mov
sbbb
cld
xchg
scas
icebp
add
lret
sbb
jo
mov
inc
xor
xchg
test
stos
sbb
cld
outsb
mov
pushf
mov
orl
outsb
sub
dec
lret
adc
pop
and
add
loopne
push
pop
into
test
lret
mov
sbb
daa
inc
lahf
mov
adc
jge
sbb
push
lret
pop
pop
mov
movsl
pop
mov
aam
das
mov
jnp
scas
mov
inc
test
and
adc
push
ja
lods
sbb
inc
pusha
adc
mov
fldcw
cmp
shl
sbb
test
fidivs
and
aam
sti
push
in
lret
popf
sti
lcall
or
sbb
or
dec
hlt
mov
xlat
loope
xor
xor
sahf
insb
add
cmp
subb
push
sbb
xchg
cmp
addr16
or
aas
pop
pop
adc
insl
test
notw
icebp
roll
outsl
push
add
sbb
add
in
loopne,pn
lods
cmpsl
movsl
sub
jp
test
or
pop
cld
sarb
incb
imul
stos
jmp
cmpsl
and
sub
filds
mov
pop
arpl
lcall
or
aaa
scas
jge
das
mov
pop
mov
and
flds
add
push
std
dec
sahf
push
push
add
and
dec
sub
jle
cmp
fidivrs
cmp
mov
movsl
cwtl
pop
add
jmp
mov
cmp
or
adc
push
test
xchg
mov
add
xor
xchg
mov
pop
adc
mov
xor
aaa
cmc
out
mov
xchg
sbbb
inc
push
lcall
add
or
mov
repnz
jmp
test
push
test
dec
and
fildll
sbb
insb
loope
inc
push
pop
inc
scas
pop
inc
bound
cmc
outsl
sub
xchg
jnp
ds
outsb
jno
mov
fwait
lcall
fsubrs
mov
popl
roll
jno
sub
je
xchg
sbb
sbb
inc
sbb
inc
into
mov
jne
and
andb
out
mov
out
imul
movsb
sbb
or
gs
lcall
sahf
idivb
and
jns
mov
imul
mov
mov
inc
inc
rol
and
cmpsb
stos
jns
mov
mov
in
fsub
ljmp
popa
pop
frstor
xor
sub
call
int3
xchg
aaa
mov
sub
push
or
lahf
cwtl
and
jecxz
inc
xlat
inc
sti
loope
out
cmpsl
and
lock
dec
enter
push
lret
lds
repz
lods
cmc
xchg
out
fsubl
ret
xor
mov
clc
mov
adcl
sbb
sub
mov
subb
jmp
mov
mov
push
test
roll
pusha
test
shl
push
cmpsb
xchg
insb
or
xchg
cmp
loope
ficoms
pop
dec
iret
push
insb
in
pop
xor
xor
cmp
sub
add
aam
out
lret
sub
adcl
pop
std
dec
dec
cmpsl
add
and
lcall
pushf
mov
adc
insb
xchg
adc
jbe
pop
mov
daa
jne
loopne
rcr
addr16
fwait
lock
pop
sub
xchg
aas
dec
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
shr
adc
mov
cmp
pop
jae
push
mov
add
sbb
cmp
adc
inc
mov
mov
xor
ja
data16
dec
shll
dec
xchg
out
push
sub
push
je
mov
mov
packsswb
jecxz
lods
inc
xor
mov
out
lret
xor
leave
sub
adc
ret
sbb
xchg
jp
test
mov
lods
shlb
inc
out
out
pop
mov
cmc
clc
fdivrs
inc
repnz
jle
test
sti
cwtl
imul
sahf
xor
dec
mov
jnp
lret
sub
scas
mov
daa
mov
daa
imul
jecxz
outsb
jmp
dec
mov
pop
addr16
and
imul
mov
jle
dec
sahf
mov
lock
pop
into
loop
pop
mov
add
mov
shlb
sub
cmp
dec
or
pop
xor
je
add
shll
sub
xor
lret
or
sbb
push
in
imul
mov
mov
inc
mov
insb
push
inc
add
test
mov
out
ret
psubq
insb
cld
xor
imul
sti
iret
test
iret
dec
adc
aam
aad
or
imull
ja
add
rolb
add
cmp
push
mov
xor
fs
pop
jns
clc
jae
mov
popf
xor
icebp
data16
mov
mov
mov
scas
test
lods
out
and
sub
and
out
cmp
inc
mov
mov
pushl
sahf
or
mov
mov
iret
out
cwtl
or
lods
mov
call
clc
ss
sbb
div
clc
bound
inc
mov
xchg
sbb
sahf
sbb
daa
jbe
lea
in
hlt
dec
mov
out
push
add
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
mov
xchg
jle
cmp
pop
cs
xlat
out
sbb
xor
inc
dec
jge
clc
lods
fisubrs
mov
jmp
cmpb
jae
in
or
push
xchg
insl
jae
cmpsb
inc
mov
add
aam
jp
or
mov
dec
cmp
jmp
ljmp
ljmp
xor
sub
inc
xchg
cmp
cwtl
adc
and
hlt
pop
imul
movsl
fldl
mov
adc
ljmp
sub
mov
je
leave
jo
push
cmp
cmpl
mov
imul
mov
jae
int3
dec
inc
arpl
fildll
daa
sbb
jno
shlb
pop
jg
and
je
lods
in
xchg
sub
push
xor
cmp
and
xor
stos
stos
sub
mov
lods
inc
cmpsl
pop
scas
int
sbb
add
gs
cmpsl
je
fbstp
xchg
mov
add
push
orl
bnd
mov
mov
inc
pop
push
and
mov
xchg
inc
popa
stc
jae
arpl
arpl
les
bound
bnd
jl
into
sub
sbb
neg
mov
leave
adc
ret
subl
push
clc
jmp
sbb
sbb
test
adc
xchg
jmp
rol
and
ret
push
rcl
xchg
mov
adc
xor
mov
mov
call
fcompl
pop
mov
push
aad
test
dec
push
cmc
aas
xchg
fwait
xor
push
inc
push
inc
nop
sub
cmp
arpl
inc
pop
stos
xchg
iret
xor
rclb
xchg
mov
xacquire
adc
jb
adc
testl
repz
and
sbb
andl
mov
in
sti
test
daa
and
ja
sti
cmpsl
test
mov
in
ret
mov
lahf
mov
jge
push
gs
sbb
xchg
arpl
cmp
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
inc
jg
xchg
jle
jl,pt
jle
insb
xchg
aaa
inc
jbe
lds
cmp
xor
jge
cli
lods
mov
xor
xchg
sub
push
xlat
cmp
dec
push
mov
adc
push
push
cmpsl
add
mov
sub
aaa
fs
sahf
adc
pop
sub
pop
mov
xchg
lock
jo
test
inc
cmp
shrl
in
mov
add
cmp
cmp
mov
pop
outsb
xorb
xchg
mov
clc
cld
lcall
pop
jns
fsubrp
lret
jnp
dec
pop
lahf
mov
lret
test
pop
mov
push
imul
adc
fdivl
pop
push
sbb
push
jne
fwait
adc
hlt
test
cmp
fcmovnu
and
sub
std
popa
ljmp
sahf
insl
mov
inc
imul
jmp
ja
xchg
sub
cmp
mov
pop
in
cmp
mov
mov
popa
shl
xor
mov
push
aam
loop
sub
sbb
mov
mov
sub
mov
sub
mov
fcoms
out
iret
cmpsl
and
je
or
push
adc
insb
lcall
add
mov
and
push
test
adc
lock
pop
jne
jg
dec
push
mov
cmpsb
and
cmp
in
lea
popa
out
mov
outsl
aam
cwtl
jae
mov
pop
shrb
or
xor
pusha
xchg
mov
js
mov
jb
cmpsb
xchg
add
lods
lods
mov
xor
es
nop
outsl
movsl
aaa
gs
xor
out
jmp
sub
mul
push
and
aaa
pop
inc
push
insl
aam
add
repnz
add
out
test
mov
test
popf
dec
outsb
add
jp
sbb
pop
cld
cmp
ret
dec
stos
enter
push
xchg
nop
bnd
jae
or
loopne
cmp
add
add
add
adc
movl
add
orl
imul
aam
sarl
nop
jle
jl,pt
jle
imul
sub
repnz
or
inc
sub
and
cmp
jl
aas
dec
mov
scas
inc
lock
fsubrl
inc
and
mov
outsl
enter
das
cmp
adc
jae
push
dec
sahf
clc
insl
rol
lret
outsb
or
xchg
dec
pop
xor
lret
or
orb
fdivl
jo
dec
jecxz
inc
inc
pushf
inc
jecxz
sub
ret
fnsave
xorl
adc
push
repz
adc
cli
pushf
movsb
enter
push
das
subl
arpl
std
outsl
sbb
push
adc
mov
dec
dec
xchg
aaa
roll
mov
addr16
add
scas
sbb
jge
jecxz
stos
cmp
sti
sbb
pop
loope
mov
inc
mov
les
fcmovb
xchg
leave
mov
xchg
inc
dec
sbb
xor
enter
push
cpuid
or
repz
dec
lock
stos
pushf
das
ficoml
cmpsl
dec
mov
insl
lret
insl
int3
or
rol
fistpll
push
test
adcl
cmp
imul
lret
mov
mov
call
cmpsl
test
mov
pop
jp
pop
mulb
push
in
cmp
sub
xchg
jo
out
fs
fs
testl
insb
sbb
mov
mov
add
mov
pop
out
pop
pop
cmp
enter
sti
inc
in
call
pop
cltd
iret
jle
call
lcall
cmc
add
jne
xchg
dec
scas
sar
cmp
dec
sbb
xchg
xchg
xchg
mov
int3
fnsave
and
adcl
mov
push
cld
or
popa
mov
and
jp
and
outsl
jo
jo
or
mov
fwait
dec
xor
jmp
sbb
pop
xor
cwtl
idivb
insb
xor
loope
xchg
in
repnz
pop
in
int
imul
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
lods
and
leave
mov
or
pop
psubw
xchg
inc
imul
pop
mov
xor
fstps
in
daa
sbb
out
jmp
rcll
test
cli
pause
and
daa
xor
cmp
fcomps
pop
push
mov
shrl
adc
mov
xchg
cwtl
mov
pop
sbb
xor
out
sbb
mov
dec
aas
rol
mov
aas
mov
sub
pop
pop
insb
lea
pop
std
mov
fistpll
int3
push
sub
xlat
pop
fcompl
jge
dec
fstl
ss
movsb
pop
lock
out
icebp
mov
test
andl
add
cwtl
and
mov
stos
imul
es
in
cmpsl
std
adc
cmp
jle
cmc
sarb
loope
add
pop
push
nop
ffree
dec
repnz
bound
movsb
fisubrl
jne
fists
popa
inc
pop
pop
fstl
add
ret
adc
or
pop
shl
sub
sarb
movsl
jl
shlb
imul
sarl
mov
gs
int3
dec
mov
cld
shr
test
mov
xchg
pop
mov
leave
int3
mov
xorl
xchg
addl
fwait
xor
inc
mov
arpl
adcl
pop
ss
in
dec
mov
mov
enter
iret
push
and
fscale
dec
or
push
hlt
dec
sub
int3
call
andb
test
xchg
stos
out
shrb
or
out
stos
dec
loopne
jg
andb
gs
js
scas
adc
iret
xchg
dec
shll
out
ljmp
shll
xchg
dec
das
jne
loope
mov
or
pop
shrb
pop
cs
xchg
testb
cmpsl
jge
pop
loope
sahf
insb
test
in
push
rolb
inc
and
lods
mov
roll
loopne
fwait
push
mov
sub
rcll
in
mov
xchg
xor
cmp
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
imull
xor
push
mov
jg
jle
or
and
jp
les
inc
fsubrl
cmp
sahf
sub
or
mov
jp
in
fisubrl
push
and
mov
push
mov
mov
popa
and
mov
fcoms
ljmp
gs
enter
movsb
and
ret
or
fiaddl
or
sahf
or
pop
in
and
push
adc
cmp
mov
js
cmp
push
push
mov
and
repnz
out
mov
sti
sbb
and
mov
xchg
insb
mov
test
jg
add
fwait
add
pop
sti
xchg
hlt
or
dec
jae
bound
popl
xor
or
mov
or
sbb
int
sbbl
pusha
push
pop
int3
or
outsl
paddsb
mov
js
out
push
pop
xlat
ja
scas
cli
gs
lret
je
icebp
lock
jle
ret
cli
pop
pop
pop
jl
insb
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
jbe
in
pop
popf
jle
adc
jle
cmpsb
fcomp
jmp
mov
sub
stc
dec
and
cmc
ficoml
popf
fwait
jns
stos
sub
inc
dec
mov
out
sbb
int
pop
push
xchg
cli
ds
xchg
sbb
cmpsl
pop
sbb
jnp,pt
out
mov
addr16
jbe
das
xorb
shll
cltd
adc
pushf
dec
es
jl
or
jbe
cwtl
psubusb
dec
push
lock
arpl
fidivl
stc
xor
adc
aad
add
pushl
es
clc
mov
lret
jo
xchg
insb
jl
cmp
ja
sbb
jle
cmpsb
jecxz
pop
push
push
inc
lea
outsb
push
add
cltd
shr
adc
fisttpl
mov
fstpl
out
repz
adcb
adc
push
jnp
jge
xchg
or
fcompl
dec
mov
cmpsb
xchg
lea
push
mov
int3
insl
movsl
sub
fsubrs
sbb
adc
push
mov
lret
out
aad
insl
repnz
insb
dec
mov
adc
dec
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
push
adc
jle
adc
jle
mov
adc
xchg
loop
repnz
stos
in
dec
in
cmp
xchg
push
iret
dec
idivl
add
dec
cmpsb
sti
insl
jmp
sbb
adc
sbb
fistpl
out
or
or
int3
add
mov
fsubrp
adc
sbb
push
jg
int3
push
cmp
push
cmc
xorl
fdivr
fidivl
sbbb
test
dec
jle
jge
int3
sbb
es
jecxz
sub
aam
jns,pt
inc
pop
fbstp
repnz
out
and
jo
shrl
mov
xor
ljmp
dec
bound
xchg
xor
mov
inc
gs
mov
dec
cmp
lret
inc
dec
jl
cmp
mov
lods
push
mov
hlt
cmp
lock
inc
push
push
sbb
push
xchg
adcl
cmc
pushf
fs
dec
inc
push
mov
jmp
stos
push
jecxz
sub
orb
jge
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
jns
enter
jle
adc
jle
movsl
loop
pop
mov
int3
adc
dec
push
inc
pop
jbe
mov
adc
lock
test
or
jge
sub
icebp
mov
dec
cmc
mov
jp
loopne
or
add
jg
jmp
std
bndstx
hlt
jno
ja
push
stc
xor
jno
scas
repnz
fbstp
mov
jno
xchg
xor
pop
fsubrs
ficomps
mov
aam
xchg
mov
insl
arpl
push
shrb
dec
inc
inc
xlat
and
fdivrl
mov
loopne
icebp
jmp
add
xchg
or
pop
dec
sbb
out
int3
js
mov
sub
jg
inc
add
jge
xlat
repz
or
rclb
push
insb
jg
rolb
in
cmpb
lods
cmp
and
push
int3
out
pop
xorb
fbld
repz
ljmp
shr
sbb
and
mov
lds
mov
xor
xchg
dec
lret
call
inc
hlt
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
bound
jle
jg
jle
add
jo
mov
bound
add
xor
push
push
test
lea
adc
repz
push
cmp
movsb
pusha
cmc
int
loope
cmp
rclb
xchg
xor
sub
cmp
ret
mov
sbb
jmp
in
ret
scas
mov
in
in
cmp
cli
cmpl
movsb
roll
or
jle
ret
xchg
or
nop
xchg
cmp
sbb
sbb
outsl
pop
loopne
jmp
adc
pop
jb
and
add
cmpsb
inc
dec
push
mov
cmpsl
fnstenv
jne
iret
aaa
xchg
mov
cmp
mov
xor
mov
mov
and
inc
inc
or
xor
xchg
cs
sar
out
imul
repnz
lret
and
adc
push
lret
mov
adc
inc
push
xchg
xorl
xchg
xchg
pop
in
aad
xor
cli
loopne
push
mov
and
std
lock
mov
jbe
add
imul
sub
mov
data16
adc
aaa
push
jo
and
inc
push
xor
popf
fisubl
addr16
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
and
outsl
das
cmp
xchg
test
dec
pop
repnz
xchg
mov
jp
ljmp
pop
add
mov
pop
inc
sbb
inc
rcrl
rclb
jecxz
enter
sbb
out
add
pop
sbb
push
pop
fildll
jo
xchg
loopne
cmpb
mov
sahf
dec
sbb
jp
in
movsl
inc
loop
dec
inc
inc
loop
fwait
sbb
in
sub
cltd
mov
inc
stos
dec
cmpsl
ss
sub
test
fnsave
add
sub
enter
pop
loope
scas
int
and
repnz
mov
cwtl
dec
cmpsb
hlt
push
repz
mov
sahf
or
leave
inc
std
push
add
mov
scas
adc
sarb
jge
rclb
sbb
jbe
clc
xlat
sub
or
cmc
insl
xor
loop
jecxz
aas
pushf
push
mov
dec
sbb
push
pushf
es
mov
mov
daa
in
scas
ja
rorb
lds
arpl
ret
out
inc
cld
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
aas
mov
jle
jg
jle
shll
int
dec
mov
lea
cld
fisttpll
adc
push
fcoms
mov
mov
xchg
push
cmp
loopne
and
cld
ret
int
stc
mov
dec
in
fidivl
movl
fidivl
xchg
movsl
sub
mov
and
ljmp
inc
sarl
bound
aam
push
xor
jmp
bound
push
cwtl
cmc
dec
fwait
and
outsb
filds
mov
jnp
push
arpl
lds
adc
scas
mov
lret
inc
cld
mov
mov
rclb
dec
xor
inc
push
pop
dec
or
iret
inc
das
pushf
loopne
add
jl
fisubl
sbb
pop
mov
xorl
inc
les
adc
lock
call
or
bound
test
mov
xchg
divl
cmp
rclb
inc
mov
outsl
lret
fstpl
arpl
iret
mov
push
gs
mov
dec
insl
jmp
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
mov
adc
jle
xor
push
mov
or
inc
push
xchg
xchg
mov
decb
pop
data16
shll
and
nop
dec
xor
sub
popf
and
xchg
mov
xor
xor
mov
xchg
mov
sbb
jnp
cmp
movsb
sbb
jecxz
mov
push
mov
aam
mov
xchg
daa
std
rorb
out
daa
mov
cmp
adc
dec
mov
addb
dec
in
jecxz
js
xor
scas
xchg
ret
jns
sbb
lds
pushf
inc
aad
les
insl
sbb
je
sti
sbb
push
outsb
cmp
jge
push
pop
out
mov
dec
push
shlb
test
call
sahf
mov
adc
mov
and
mov
fs
push
or
aam
lret
scas
in
xchg
sub
lret
cli
jmp
mov
mov
cmp
ret
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
cli
mov
push
jg
jle
mov
and
out
add
add
rolb
inc
xor
pop
in
push
dec
test
adcl
xor
jns
cwtl
mov
popf
sar
popf
icebp
sbb
push
xor
ret
jo
xor
insl
pop
jbe
into
aam
or
roll
int3
pop
std
scas
jbe
shll
inc
cmp
daa
and
fildl
push
movsb
gs
fdivrs
sub
sub
fwait
inc
jmp
jns
test
stos
pop
mov
clc
ret
sbb
adc
pushl
int3
loopne
int3
cmp
in
pop
das
add
jb
gs
cltd
gs
lret
push
xor
mov
cmp
or
jns
lret
mov
fwait
xor
jnp
dec
mov
movsl
fs
sub
add
add
inc
push
inc
ds
xor
jo
add
mov
xchg
dec
movsb
pop
ss
das
jle
and
inc
xor
mov
pushf
cmp
cltd
xchg
mov
fwait
sbb
add
sbb
shll
pop
jmp
sub
mov
dec
cmc
ret
dec
repnz
mov
je
push
aaa
sub
idivb
adc
xor
int
sbbb
xor
cld
idivl
lds
push
les
mov
aad
fnsave
ja
lods
xor
adc
inc
sbb
sub
cmc
out
push
jb
arpl
xor
mov
xchg
iret
pop
mov
push
adc
leave
pop
lods
test
or
sub
outsl
in
imul
in
cmp
scas
and
daa
pop
out
jmp
jnp
push
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
enter
lcall
inc
insb
add
les
popa
sbb
rcl
std
rclb
pushaw
jle
fxch
int
add
insb
int
push
scas
or
jno
jno
sarl
mov
mov
dec
xchg
stos
addr16
sbb
in
push
and
leave
dec
addr16
mov
pop
in
or
mov
gs
xlat
or
data16
cmpsl
inc
out
subl
ja
pop
jge,pn
stos
dec
addr16
push
xor
mov
out
jne
or
nop
out
movsb
or
jge
sub
orl
or
fidivl
lods
aad
insb
lret
pop
xor
pop
inc
test
and
mov
pop
int
dec
lret
into
out
fistpll
pop
adc
daa
pop
mov
into
push
xchg
sub
ret
outsl
lock
jl
int
cltd
test
mov
int3
movsb
mov
and
jg
pushf
cmpsb
xchg
inc
repnz
in
sub
rcrl
push
xlat
pop
inc
aam
and
cmp
jns
fs
lahf
push
mov
pop
push
es
mov
push
gs
mov
scas
sub
sbb
fcmovu
es
jo
add
inc
push
push
fdivrs
jno
sub
pop
sti
mov
cmc
inc
lock
inc
sub
sub
mov
mov
mov
loope
cmpsb
add
fdivl
add
push
mov
mov
inc
push
or
mov
call
xchg
cmc
lret
push
stos
stos
sbb
cld
mov
add
jmp
cmpsb
xor
in
daa
call
addr16
outsb
test
inc
or
mov
icebp
push
mov
ljmp
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
cmp
mov
jle
cmp
xor
mov
jb
jnp
xchg
cmp
sub
jae
mov
xchg
das
in
repnz
xchg
xchg
cmc
test
pusha
rclb
hlt
insl
add
loope
rcrl
outsb
push
xor
loop
sub
loope
push
or
push
leave
mov
mov
add
mov
mov
sub
jmp
jmp
std
int
xchg
mov
cltd
pop
mov
and
cmp
xor
mov
xchg
jmp
enter
add
stc
jb
push
loopne
jnp
push
imul
stos
stos
sbb
fsubs
outsb
ja
push
test
push
and
or
cld
xchg
or
xor
iret
das
adcb
adc
test
in
lret
add
xor
mov
sbb
popa
jecxz
push
hlt
and
int3
clc
iret
fistpl
mov
pop
fstpl
mov
cli
cmp
xchg
jmp
test
sbb
lcall
cwtl
and
pop
mov
cs
out
adc
out
and
lods
push
inc
arpl
xlat
fcompl
mov
inc
sub
idivl
sub
xor
xor
fidivl
push
mov
cld
aas
incb
fisttpl
mov
cmpb
add
dec
int3
into
movsl
loopne
lahf
inc
fcoms
ja
mov
inc
xchg
popf
inc
clc
mov
int
xchg
add
jp
sbb
aad
mov
icebp
lcall
cmp
gs
xor
test
or
inc
xor
scas
jmp
sub
cmp
andl
mov
dec
inc
mov
cmp
cwtl
mov
jno
ret
push
arpl
in
leave
inc
cmp
jne
lea
in
mov
sub
leave
pop
mov
lods
sub
cmp
sub
std
lds
or
lcall
sub
jbe
lret
lds
inc
xchg
cmp
mov
iret
aaa
sbb
mov
pusha
add
jo
outsb
push
or
xchg
popf
jbe
inc
sub
fadd
fnstsw
hlt
addr16
fidivs
fidivs
jns
xor
cmp
repz
add
outsb
sub
jecxz
test
xor
jp
push
clc
push
fisubrs
cmp
xchg
jns
cmpsb
outsb
jo
sti
xor
dec
addr16
mov
mov
movups
sub
dec
rclb
mov
outsb
idivb
cmp
fnsave
adc
scas
xchg
xlat
cmpsb
lods
jmpw
fs
loop
jns
sti
std
into
fimuls
imul
pushf
add
cmp
lea
push
incb
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
adc
lods
jle
jl
jle
fnstenv
dec
xchg
adc
out
add
pop
outsb
sysenter
and
jb
sbb
adc
and
jmp
cmpl
pop
and
sub
loope
mov
mov
mov
cmpl
push
ret
ljmp
and
test
jne
add
mov
ds
aad
inc
and
cmp
add
adc
dec
xchg
test
push
xor
fs
fwait
mov
mov
inc
mov
addr16
testb
fwait
add
andl
xor
cs
pop
jl
stos
dec
add
dec
stos
js
gs
bound
sub
jo
push
shlb
jg
roll
scas
lods
mov
loope
jb
mov
xor
sahf
in
pushf
or
ss
fmuls
fisubl
ljmp
fistpl
jb
insb
call
dec
insb
add
aaa
push
sbb
lcall
jb
mov
cmp
das
mov
mov
outsb
aad
loope
loop
dec
std
mov
bound
xor
ss
xchg
lods
out
popa
cmp
movsb
in
push
clc
pop
pop
imul
cld
mov
mov
fbld
je
adc
lods
cmp
or
pop
dec
add
movsb
mov
daa
add
inc
jp
and
inc
rcll
jmp
cli
and
adc
paddq
jae
push
dec
push
add
inc
pop
sub
mov
call
clc
xorb
aad
mov
fcmovnu
out
mov
in
push
fcmovu
nop
mov
negl
sahf
push
insb
pop
cmp
sbb
ficoml
lcall
add
mov
jecxz
div
faddl
xor
sti
pop
repz
add
aam
ret
mov
or
sub
scas
sahf
sar
mov
pop
ret
add
outsb
mov
mov
testl
aas
fcoms
pop
inc
jno
jecxz
pop
or
mov
cmpsl
repnz
scas
mov
cmp
pushf
pop
adc
adc
mov
ljmp
sbb
push
push
xchg
mov
sub
cmp
bound
clc
ljmp
test
pop
insb
fisttpl
mov
std
nop
subb
enter
push
cmpb
push
cltd
test
into
mov
mov
daa
push
and
pusha
stc
fildll
dec
imul
jecxz
pop
frstor
and
pop
lods
jge
jnp
enter
ja
orb
shrb
jne
dec
push
scas
sar
xchg
rcrb
cli
inc
lods
outsl
push
enter
xchg
push
adc
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
stc
shrb
jle
or
out
ss
xchg
xor
out
push
push
xchg
or
cltd
rcrb
push
cmpsl
mov
outsl
push
push
cmpsl
lahf
jne
inc
imul
jae
pop
inc
shl
jbe
mov
hlt
inc
jle
add
jnp
bound
inc
jne
mov
repnz
in
adc
xchg
push
pop
mov
roll
lret
push
xlat
arpl
sub
in
mov
mulb
cli
sbb
mov
fdivrs
pop
or
mov
fisttpll
push
das
hlt
adc
sbb
pop
cmp
icebp
dec
ljmp
out
int3
pop
imul
cmpsb
shll
push
pop
pop
and
jmp
sub
lock
xor
cld
push
xchg
scas
pop
xor
pop
adc
push
mov
ret
cmp
enter
push
pop
xor
fisubrs
cmp
out
dec
stc
fimuls
out
test
dec
ror
jo
dec
or
iret
or
jnp
cmpsb
fcomi
iret
xor
push
jnp
fiadds
bound
sti
je
adc
pushf
lahf
or
cmp
push
in
scas
push
shll
movsl
les
cli
fidivrs
out
andb
push
or
lods
fisubrs
xchg
daa
call
hlt
adc
das
push
fs
fwait
or
or
orb
jmp
cmp
shl
out
adc
dec
cmp
das
push
inc
jbe
popf
jg
jae
aam
aas
push
sbb
aam
cld
pushf
dec
inc
mov
and
inc
xorl
adc
inc
mov
imul
inc
push
call
cld
mov
xor
inc
adcl
je
int3
popf
faddl
cmp
aam
adc
push
scas
shlb
lea
dec
and
sbb
clc
enter
pop
inc
sub
test
mov
add
testb
add
sti
pop
arpl
mov
fwait
xor
xor
and
push
cmpl
sub
mov
cld
aam
adc
cmp
imul
test
fldt
inc
jae
fwait
js
call
or
xorl
adc
mov
dec
pushl
jb
mov
pop
cmpsl
push
mov
es
sbb
divb
stos
adc
mov
jmp
mov
int
and
sbb
int3
dec
jb
leave
inc
pop
push
mov
mov
jnp
xor
xchg
fcmovnb
and
aaa
aad
ror
data16
movsl
inc
push
movsl
fildll
pop
inc
loopne
pop
scas
mov
pop
dec
sarb
leave
test
fstpl
sub
loopne,pn
xchg
inc
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
adcb
mov
jle
jge
jle
dec
mov
gs
mov
xor
mov
and
jmp
push
push
aam
pop
mov
jnp
scas
mov
scas
xchg
mov
js
inc
fadd
roll
fistpll
dec
test
lret
repnz
jnp
inc
adc
sub
stc
cmp
dec
enter
cmc
mov
lods
dec
mulb
addr16
and
mov
adc
idivl
dec
into
addb
and
mov
sbb
cmp
sub
lds
jle
mov
pop
jnp
insb
daa
sbb
aaa
mov
jb
jno
cwtl
xchg
push
aam
daa
mov
out
inc
movsb
cmp
test
mov
sbbb
cmc
xor
icebp
and
xchg
rcrl
pop
lea
pushf
push
lahf
inc
rorb
or
pop
sub
sbb
mov
in
lahf
jp
fstpl
test
or
sti
push
pop
and
dec
popa
dec
push
icebp
in
cltd
out
mov
sub
outsb
sub
or
dec
in
je
out
jnp
and
mov
jne
sub
in
xchg
loop
daa
scas
out
sub
sub
repz
sbb
arpl
test
sbb
sbb
pop
aas
fisttpll
lret
int3
push
fdivs
pop
mov
fs
push
mov
in
and
nop
movsl
push
and
pop
mov
and
ds
das
idivl
addl
dec
cmp
pop
aaa
in
insb
loop
in
adc
mov
jge
or
testb
or
jmp
and
and
loope
xor
push
fidivs
adc
popa
lret
scas
mov
das
push
jg
xchg
xor
rorl
mov
in
push
jge
cs
dec
dec
and
mov
ret
loop
sub
dec
mov
or
xchg
cmp
dec
pushf
adc
sub
out
mov
loop
les
pop
sbb
lds
mov
out
mov
movsb
sub
push
cwtl
jo
mov
lcall
push
ret
in
ss
pop
jmp
or
das
push
sub
push
neg
bound
add
pop
insl
pop
mov
sub
outsl
arpl
scas
inc
cwtl
cmp
mov
jmp
daa
test
inc
mov
add
mov
add
ret
cli
daa
lea
push
dec
adc
or
cmpsl
daa
or
dec
js
inc
pop
aad
push
daa
fsubs
pop
pop
es
out
nop
pusha
movsb
fwait
jp
sar
orl
mov
sbb
sarb
jmp
or
pop
jno
xchg
add
xchg
jmp
mov
jle
jge
jle
inc
sbb
sbb
and
dec
scas
movsl
jns
xchg
xchg
or
or
ljmp
ss
and
arpl
int
inc
aas
mov
and
adc
mov
fcom
mov
xor
adcb
sti
inc
int3
cltd
stc
test
aaa
lcall
fmuls
sub
js
sbb
hlt
push
sbb
cmp
inc
sarb
outsb
lods
cmpsb
xor
or
loop
lret
into
cmp
mov
inc
and
pop
repz
lods
insl
fs
rol
sarb
jge
lods
xchg
aam
in
dec
in
inc
out
jl
mov
mov
xchg
jge
cmp
lcall
and
mov
and
cwtl
dec
lret
aas
sti
clc
dec
adc
inc
cmpsb
jl
stos
test
cmp
xor
in
push
push
adc
test
mov
pop
pop
mov
outsb
repnz
pop
movsl
sbb
inc
mov
jb
fdivrl
mov
jno
mov
jns
in
mov
fisubs
fidivl
cld
xchg
cmpsl
cmp
inc
loopne
inc
xchg
jb
xchg
xor
or
test
fldl
rol
lahf
adc
xor
mov
and
mov
jo
xor
pop
inc
rclb
pop
sbb
mov
dec
inc
sbb
insl
xchg
xchg
jnp
push
repnz
lds
cli
rolb
repz
test
sub
aad
popf
mov
sbb
cmp
mov
je
or
mov
fsubrp
push
movsb
loopne
lea
fimuls
roll
ret
test
push
movsl
and
dec
inc
inc
push
mov
sbb
jnp
dec
jle
jge
loope
add
movsl
nop
xor
outsl
mov
lahf
inc
mov
lods
in
xchg
mov
add
pop
faddl
call
xorl
cmpsb
cmc
in
push
mov
gs
xlat
or
mov
xor
push
arpl
fldenv
sub
jg
addr16
fucomip
dec
jno
enter
or
repnz
test
xchg
loope
ror
xor
xchg
in
push
in
fisubrs
movsb
imul
mov
and
insl
into
divl
mov
iret
cmp
inc
enter
xrstor
cwtl
int
pop
mov
mov
sbb
push
sbb
ljmp
pop
xor
in
add
scas
xchg
movsl
pusha
pop
xchg
sbb
push
ds
cli
es
pop
xchg
and
sahf
hlt
pop
cmp
lret
cmpsl
jno
nop
xor
mov
pop
and
bound
lds
lods
inc
sbb
in
xchg
mov
test
lods
and
mov
and
dec
lret
mov
dec
pop
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
sbb
scas
jl
jle
enter
jl
jp
std
cli
push
je
into
add
iret
aad
mov
jecxz,pt
mov
cmp
push
push
jl
cmp
mov
pop
jmp
cmp
cmpsb
fsubr
repnz
bswap
mov
out
push
xlat
inc
dec
jo
arpl
cld
add
shrb
cld
add
jo
insb
sub
test
jae
push
dec
sarb
and
test
mov
mov
test
sahf
mov
mov
xor
aam
dec
cmp
dec
inc
and
int
adc
xchg
sub
jmp
add
scas
mov
lods
mov
push
dec
push
leave
test
sbb
mov
mov
adc
sbb
iret
in
pop
lret
push
shrb
pusha
ret
adc
jae
inc
xchg
jns
add
add
or
fstpt
andl
jo
test
sub
lcall
push
lcall
loopne
lock
inc
mov
xlat
mov
lds
out
add
cwtl
sub
mov
mov
xchg
clc
out
jne
imul
cmp
outsl
mov
adc
daa
mov
lods
and
andb
das
cmpsl
mov
pmulhuw
cs
in
cmpsb
add
adc
testl
jnp
repz
cmp
sahf
sbb
gs
sub
dec
testl
pop
ljmp
dec
inc
sub
pop
jp
mov
pop
arpl
jb
les
scas
pop
mov
push
lret
cmp
mov
into
inc
jne
jp
daa
mov
pop
mov
les
dec
xor
xchg
jmp
inc
aas
jno
and
aas
sub
inc
inc
jmp
pop
sti
mov
popa
add
cmpsl
mov
fwait
push
shll
sbb
pop
mov
inc
popa
into
ret
mov
pop
ret
lahf
mov
dec
leave
jbe
sub
push
rorb
mov
adc
add
repnz
and
xor
xchg
fstps
mov
scas
push
jne
and
lret
out
xor
xor
cltd
pushf
mov
jp
jns
sbb
lock
pop
outsl
out
adc
xor
pop
push
inc
test
loop
imul
pop
jmp
stos
popa
imul
insl
cmp
dec
sbb
sub
mov
mov
cmpsb
jnp
lds
test
icebp
mov
fdivs
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
xchg
jge
cmpsb
nop
xchg
test
pop
xlat
pop
push
ret
inc
pmulhw
jbe
sbb
push
dec
ret
and
add
dec
mov
jne
jne
popf
mov
js
push
addr16
push
push
push
fcomps
jmp
pmulhuw
inc
movsb
jl
popl
or
inc
stos
push
popf
and
pusha
ja
dec
inc
xor
xchg
sbb
pop
mov
scas
mov
pushf
mov
sti
add
jne
in
mov
sti
inc
add
mov
insl
adc
shlb
push
in
add
xchg
mov
mov
cmp
push
xchg
xchg
cmpl
lahf
push
push
and
add
inc
out
scas
pop
push
jb
mov
fwait
add
ret
add
mov
sti
or
xor
pusha
cmp
icebp
cmp
in
pop
loop
jno
popf
cwtl
push
or
pop
inc
jnp
inc
ja
es
xor
jp
movsl
jge
mov
aaa
xchg
or
fwait
outsb
gs
jnp
jae
data16
adc
push
sar
lret
icebp
in
rcl
sub
mov
imul
xor
lea
or
in
stos
in
or
pop
in
inc
pop
dec
mov
fsubs
loop
jmp
mov
in
pop
push
mov
or
or
daa
ret
rcrl
inc
sbb
nop
test
or
mov
fnsave
cmp
mov
or
mov
mov
push
icebp
fcoms
push
mov
push
js
pop
inc
mov
enter
pushf
imul
div
ja
out
fimuls
mov
xor
pop
fiaddl
xchg
pop
cwtl
pop
push
std
mov
aad
and
inc
fiadds
push
pop
movsl
ror
repz
rcll
dec
icebp
fistpl
xchg
cmp
pop
lret
xchg
xor
insl
int3
add
mov
rcrb
lods
and
bound
add
int3
movsl
or
in
push
sbb
in
fistpll
xchg
loopne
dec
inc
xor
or
mov
xor
push
add
jb
popa
lea
mov
xor
orb
and
sub
mov
sub
jp
adc
mov
and
nop
je
and
push
sub
les
mov
add
add
xor
push
xchg
pop
lcall
scas
jl
jle
outsb
stc
mov
xchg
cmp
hlt
jns
ret
or
hlt
mov
pop
cmp
sub
ret
sbb
rorb
neg
mov
cmp
into
fs
in
addr16
mov
mov
xor
test
mov
fcmovnu
lods
pop
dec
cmpl
incb
push
das
mov
fwait
inc
insb
out
jle
mov
movsl
decl
enter
or
mov
push
xchg
jge
test
movsb
sub
lds
shrl
mov
cld
cmc
cmp
push
repz
shlb
pusha
into
sbb
pop
cmp
xchg
loopne
mov
jecxz
and
xchg
jnp
decl
jbe
out
xor
push
test
and
lods
push
gs
popa
pop
mov
rcrb
mov
data16
loop
sarl
lret
pmulhuw
leave
in
xlat
jl
popa
cli
fidivs
adc
bound
push
rcrb
jns
test
stc
push
pop
ja
and
inc
add
pushf
mov
mov
mov
pop
lock
push
rorb
push
aas
pop
loope
nop
xchg
pop
mov
jg
pop
and
or
xchg
ret
jge
jo
daa
mov
cltd
xor
in
sahf
femms
outsl
in
xchg
je
leave
push
pushf
push
rorl
push
test
and
movsl
cmpsl
nop
iret
arpl
jmp
pop
mov
cmpsb
loope
inc
lret
jbe
mov
into
hlt
fcoms
xlat
negl
in
and
loopne
mov
iret
mov
xor
adc
addr16
cwtl
jbe
cmp
xchg
stc
or
sub
adc
jnp
cmpsb
scas
in
dec
scas
imul
jo
mov
mov
xor
arpl
mov
cmp
aam
xor
adc
push
hlt
imul
repnz
xchg
xchg
fnclex
inc
xor
cmp
or
test
pop
push
xchg
shrb
or
in
pop
arpl
scas
cmp
jmp
mov
jnp
enter
fs
lahf
mov
mov
cmp
mov
movsb
and
fmuls
mov
jmp
lea
leave
xor
jb
mov
sahf
arpl
imul
in
sahf
ljmp
push
loope
cmp
mov
mov
shr
cmpsl
cltd
jle
loop
mov
mov
mov
clc
testl
add
push
push
lock
outsb
dec
mov
jp
mov
jle
and
in
and
push
call
clc
loopne
sub
pop
inc
outsl
fldl
cmc
mov
mov
inc
jecxz,pn
add
mov
xor
js
jle
bound
mov
rol
aaa
sti
int
xor
push
ss
fmuls
adc
adc
ja
sbb
sub
jae
shl
add
pop
stos
pop
sbb
cmc
cmp
add
inc
push
adcb
mov
pop
sahf
add
dec
movsb
inc
aas
cmp
sbb
out
lods
and
out
pop
icebp
sub
jmp
adc
xor
clc
cld
aam
mov
push
js
jo
out
lret
xchg
addl
xchg
mov
lds
mov
xchg
mov
mov
sbb
fldcw
xorb
or
dec
lock
inc
ljmp
sbb
inc
add
jp
pop
push
cmp
inc
mov
pop
mov
les
xchg
lret
xor
cmpsb
push
adc
mov
cmpsb
xchg
sti
and
cs
fstl
adc
out
cmp
imulb
mov
jnp
sub
mov
fsubl
out
stos
daa
jb
insb
mov
imul
scas
enter
dec
xchg
ss
inc
repz
jo
stc
xorb
cmp
pop
std
loopne
adc
sub
sub
or
cmpsb
stos
dec
xchg
hlt
adc
mov
fcom
imul
movsl
out
jp
sbbb
stos
leave
mov
lds
mov
repnz
out
cmp
adc
loopne
subl
arpl
sub
fnstsw
movzwl
mov
das
adc
repz
pusha
add
scas
push
mov
notb
pop
ret
fnsave
fwait
lds
stos
jnp
mov
out
insl
test
or
aas
mov
outsl
test
jle
pop
and
mov
sbb
addr16
push
in
and
mov
fadd
pop
cltd
movsb
rcrb
fldenv
stos
xchg
add
mov
imul
int3
stos
loope
xor
nop
leave
or
js
jp
fiadds
cmpsl
inc
test
jb
sub
mov
call
push
jns
mov
and
push
loope
cmp
gs
xor
mov
js,pn
shlb
bound
outsb
or
push
sbb
inc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
cs
sbb
jle
jl
jle
mov
dec
cwtl
cmpsb
cld
outsl
push
aam
sbb
popf
rorb
lea
xor
test
insb
mov
cwtl
push
mov
pop
aam
je
jne
cs
test
and
popa
and
lret
cmp
adc
mov
movsl
nop
outsl
cmp
jecxz
out
xchg
xor
mov
push
sbb
in
shll
sbb
xchg
lds
mov
push
or
pop
les
jb
fldcw
pop
add
daa
xor
fwait
pop
loop
scas
xchg
shrl
adc
shll
movsl
cwtl
jmp
imul
stos
jle
lock
fmull
fists
xor
call
push
loop
movsb
pop
push
inc
push
push
ficomps
sahf
ret
inc
mov
mov
mov
das
repz
sahf
adc
xchg
ret
mov
xchg
stc
out
add
mov
sahf
sbb
and
repz
adc
xor
les
imul
loop
pop
lds
pop
cli
dec
sub
and
mov
sub
push
icebp
and
add
mov
jmp
popa
loope
rolb
add
incb
dec
iret
mov
adc
into
sbb
xchg
mov
push
mov
sbbl
imul
cli
outsb
cli
dec
mov
enter
loope
add
shlb
mov
fdecstp
sbb
pop
into
or
sbb
cmpsl
loope
sbb
imul
xor
inc
cmp
js
das
adc
and
xor
fmull
sbb
mov
movl
mov
xchg
jmp
xchg
aas
adc
aam
jns
sti
sub
mov
cmp
pop
xchg
js
in
xor
or
mov
loop
or
or
shlb
lcall
sbb
out
dec
pop
sub
enter
hlt
out
fs
cwtl
xchg
repz
mov
das
in
xorl
jg
sbb
lret
in
jmp
ds
fstps
iret
pop
xchg
pop
lret
std
jns
cmp
jb
jae
or
insl
cs
aas
pushf
notl
ficompl
loopne
cmp
dec
hlt
test
jle
sbb
xchg
add
hlt
cli
jge
insb
lcall
sbb
cmp
fisubl
sub
out
push
jae
bswap
pop
roll
mov
in
pushf
push
jl
sarb
loopne
insl
add
sbb
dec
dec
pop
xchg
je
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
dec
or
inc
jle
scas
jl
jle
push
xchg
pop
sub
cmp
cmpsb
mov
add
movsb
push
incl
scas
jnp
xchg
sbb
adc
fs
pop
push
test
stos
fwait
mov
lods
jb
dec
push
mov
test
mov
adc
into
movsb
sub
orl
pop
mov
es
stc
xor
xchg
scas
sti
mov
sub
cmpsl
fstl
int
dec
mov
dec
add
es
imul
int3
cmp
pushf
dec
mov
inc
pop
inc
add
inc
jb
mov
in
xchg
inc
add
sbbb
mov
jg
adc
int3
fcmovnu
pop
cli
int3
and
fistps
sbb
xchg
dec
je
dec
insb
arpl
fnstenv
push
ret
and
fdivr
push
repnz
cli
fst
cmp
dec
orl
push
pusha
das
shl
stc
push
mov
pop
lret
shl
js
jl
sbb
pop
lahf
mov
lods
jae
xor
jb
imul
pop
enter
mov
mull
popf
mov
data16
xor
push
or
pop
stc
cmp
xchg
add
xchg
lret
and
out
into
test
cmpsl
jecxz
daa
leave
pop
repnz
insl
mov
lds
sub
cmp
mov
dec
fidivl
jo
push
loope
popl
sub
dec
push
mov
push
and
daa
push
sbb
lds
insl
pop
arpl
push
cwtl
aaa
pop
dec
orb
mov
pop
repnz
mov
inc
repz
pop
int
stos
clc
mov
and
nop
in
jno
jl
out
mov
lcall
stc
push
mov
repz
loope
cmp
nop
sahf
into
mov
fxch
jno
push
add
sbb
std
jnp
shrd
mov
call
arpl
insb
mov
nop
cltd
add
or
sub
mov
adc
out
adc
pop
repnz
add
cmc
mov
xchg
das
fs
inc
mov
cmp
int3
mov
fisubrl
inc
fwait
aam
xchg
jns
xchg
iret
jge
call
lock
out
sub
push
rorl
fists
shll
aaa
arpl
inc
xchg
rcrl
daa
jp
fcompl
xor
repnz
sub
rclb
std
add
dec
fists
mov
push
or
rorl
add
or
sti
stc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
or
jle
movsb
jg
jle
add
push
or
jne
fsubrl
unpcklps
sti
push
movsl
and
inc
pop
lock
sbb
or
in
ljmp
lcall
adc
dec
ds
cltd
dec
daa
js
out
dec
leave
sub
push
inc
dec
push
pop
jns
xchg
cmp
dec
fadd
cmp
setbe
mov
jge
fwait
iret
dec
cli
mov
clc
cmp
lods
fs
push
lea
sbb
pop
gs
nop
hlt
add
addl
mov
pusha
movsl
into
lret
cmp
ret
repz
mov
lcall
sbb
push
in
or
jle
xchg
lcall
flds
mov
cwtl
fcoml
loopne
push
cmp
push
xchg
ja
push
mov
dec
jg
mov
xchg
lea
jle
adc
insb
jg
and
cmpsb
jecxz
push
int
jbe
les
push
xor
add
dec
mov
iret
aas
add
arpl
pop
cmp
aas
in
notl
add
mull
add
std
xor
xor
sbb
in
out
sbb
lds
hlt
insb
test
xchg
dec
popa
pop
jb
insl
or
stc
sub
mov
mov
inc
pusha
jp
repz
iret
pop
sbb
push
sbb
push
adcb
inc
jmp
pusha
pop
jb
inc
dec
sbb
jle
inc
or
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
repnz
mov
sub
jle
movsb
jg
jle
add
or
clc
outsb
mov
iret
orb
test
jno
insl
sbb
dec
cmc
inc
fs
jns
jae
fdivrl
sti
xchg
aam
xor
rorb
jecxz
xchg
inc
adc
dec
sbb
or
xchg
xor
pop
mov
jmp
fistpll
test
aas
out
es
mov
cmpsl
sub
loop
dec
je
jns
mov
dec
das
je
and
int3
les
pop
ja
adc
xor
ret
stos
pusha
repz
add
xchg
int
lret
pop
mov
lock
inc
adc
sti
or
push
and
cmc
cmp
cltd
inc
dec
cwtl
aam
jo
fsubr
in
add
rclb
test
mov
push
inc
push
inc
cmp
mov
stc
and
mov
in
dec
xchg
call
movsl
push
and
loop
call
or
xor
arpl
or
imul
mov
adc
sbb
rorl
add
and
mov
decl
and
test
sbb
mov
mov
sub
dec
test
xor
mov
cmc
ljmp
inc
adc
cmp
lods
out
inc
xchg
es
iret
pop
mov
adc
dec
cmp
mov
movsl
rorl
rcrb
mov
das
out
mov
aas
mov
lock
movsl
xor
sbb
dec
mov
mulb
jp
push
sub
aam
jne
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
cwtl
jl
and
roll
add
movb
cmp
cwtl
adc
in
pop
aas
iret
imul
repz
aam
sbb
jge,pt
xor
pop
in
cwtl
dec
and
aas
jle
or
les
pop
ret
mov
loopne
arpl
mov
jecxz
test
mov
push
dec
pushf
inc
xchg
or
cli
les
adcb
fisttpl
es
stos
xor
sti
sub
xchg
add
mov
push
cmp
mov
imul
jbe
jl
test
cmp
pop
mov
sahf
pop
ficompl
inc
mov
sbb
xor
je
clc
jb
adc
adc
daa
or
jnp
outsb
daa
daa
mov
das
jmp
add
xor
or
sahf
or
hlt
adc
jns
sbb
adc
and
push
subb
stos
mov
lret
cmp
outsl
movsl
dec
sbb
call
push
pop
outsb
test
imul
pop
ficoml
in
jle
lcall
daa
loope
add
add
sbb
push
mov
js
lods
pusha
test
sbb
das
scas
hlt
icebp
cmp
test
push
rorl
sub
dec
shrb
out
xchg
mov
lods
adc
dec
in
and
cmp
pushf
fs
inc
pop
xor
mov
mov
outsl
scas
mov
mov
and
jae
mov
leave
loopne
sbb
in
adc
roll
add
push
pusha
inc
mov
daa
pop
mov
or
dec
pop
jno
call
adc
dec
cli
xor
andb
stc
ds
push
add
mov
xor
sahf
cmp
add
ja
in
subb
xchg
mov
mov
pop
xchg
mov
dec
mov
mov
lret
fisubrl
sub
xor
xor
rorl
out
fucomp
add
add
adc
mov
mov
push
shlb
cmp
roll
add
call
mov
xchg
ficompl
dec
and
jmp
mov
aam
sbbl
aad
shlb
mov
testb
aad
imul
jle
aad
aam
mov
call
int
jg
mov
inc
imul
stc
and
push
or
lods
mov
add
cli
inc
loop
xchg
out
call
mov
cli
scas
lock
gs
or
push
xor
push
clc
jp
sar
xchg
jmp
shlb
rcr
pop
cmc
sub
gs
fcoml
push
not
aaa
xor
xchg
and
je
xlat
inc
mov
mov
mov
sub
mov
xchg
lds
mov
push
divb
ds
clc
xorl
mov
or
xchg
test
lea
inc
push
add
add
mov
roll
mov
mov
aam
add
xor
push
loop
sbb
pop
dec
jne
sub
rcrl
or
ja
shlb
enter
fsts
pop
pushf
adc
std
outsb
pop
in
add
dec
push
ror
cmpsb
rcl
fimull
sub
sbb
popf
call
out
pop
mov
outsl
mov
arpl
sub
inc
lock
push
mov
out
jecxz
xchg
lahf
adc
lahf
js
mov
fsub
push
adc
inc
jo
icebp
push
and
push
cmp
popa
imul
cld
enter
push
push
push
shrb
mov
in
iret
je
stos
xchg
inc
pop
lea
mov
add
xchg
push
mov
inc
repnz
cmpsl
loopne
popf
push
jp
gs
rcr
xlat
pop
sbb
decl
xchg
aad
mov
dec
aad
pop
in
push
add
jmp
repnz
mov
mov
inc
xor
dec
xchg
push
cli
lret
movsb
xor
xchg
add
add
inc
or
pop
dec
or
push
pop
lock
add
mov
out
in
jecxz
cmp
mov
test
jl
in
int
sbb
mov
cwtl
imul
popf
mov
dec
ljmp
dec
inc
push
xchg
add
ljmp
or
xchg
stos
dec
aad
sahf
movsb
cmp
xor
cmp
fsubl
icebp
sbb
mov
pop
lock
cli
pop
in
mov
pusha
loope
sub
jp
adc
push
out
aas
mov
fdivrl
shrb
popf
adc
lea
iret
je
mov
xchg
call
popa
loope
sbb
cs
mov
or
into
lret
pop
shlb
rol
cmpl
xor
jnp
mov
push
cs
add
data16
jg
cmc
insl
cmc
out
lcall
enter
test
loop
add
add
adc
rcrb
and
pusha
push
leave
int3
das
push
sub
leave
cmp
push
loop
pushf
ss
lods
call
mov
ds
inc
dec
sahf
lock
mov
aas
sbb
xchg
into
add
jbe
gs
cmp
ljmp
daa
jns
sub
jmp
push
sub
imul
mov
fwait
out
lahf
inc
fdivrs
cs
cwtl
xchg
jns
mov
leave
jae
stos
ret
and
out
in
hlt
jecxz
sarl
outsl
inc
xor
rorb
xor
outsb
mov
lcall
std
mov
mov
ljmp
and
jns
sbb
xchg
or
stos
not
jl
out
jbe
scas
loop
imul
cmp
mov
push
sbb
adc
xchg
mov
xchg
cmp
or
inc
xor
das
push
es
dec
or
mov
add
add
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
push
xor
sbb
cs
or
xor
pop
dec
cli
dec
lret
cmc
dec
push
xchg
fs
push
push
mov
pusha
and
adc
adc
or
fs
loopne
sbb
repnz
push
movsl
and
mov
divb
ffreep
into
push
push
loop
ss
sbb
mov
in
outsb
loope
push
or
lock
lcall
and
fidivrl
cmp
sub
cmp
jae
add
cmp
push
pop
xchg
daa
xor
andl
rcr
sti
xor
lea
sub
mov
mov
and
or
aam
push
mov
push
ficoml
and
push
out
mov
push
ljmp
cmp
std
adc
sbb
or
or
and
scas
sti
jle
pop
push
pop
es
add
das
loop
lret
inc
and
data16
fnsave
pop
and
add
push
addl
mov
or
movsl
pop
jle
and
jmp
incb
pop
lea
mov
mov
call
ret
jg
clc
inc
mov
push
fwait
lds
jno
inc
dec
ret
in
mov
dec
dec
add
push
into
int3
inc
stc
iret
dec
mov
iret
mov
and
mov
in
sbb
mov
imul
dec
xor
cs
jp
loopne
and
ljmp
pop
lods
lock
rorl
mov
out
pop
fcomps
hlt
lret
aam
cmp
clc
push
pop
adc
push
loop
dec
cmpsl
inc
out
fs
adc
clc
sti
xor
push
xor
and
sbb
mov
push
or
repnz
xor
je
ret
popa
cltd
lods
ds
add
pop
sub
adc
add
lahf
fnstcw
ss
lahf
stc
bound
jns
add
add
add
cli
nop
or
xor
frstor
dec
xchg
sbb
cmp
loope
push
dec
sti
cmpsl
sbb
mov
mov
mov
je
inc
jns
push
repnz
mov
arpl
fs
jmp
push
out
mov
clc
enter
ret
data16
xchg
or
push
sbb
aad
in
push
mov
repz
push
mov
repz
ds
inc
icebp
pop
mov
pop
xor
jecxz
mov
orl
dec
cmp
or
cmp
sar
cwtl
or
inc
imul
xchg
daa
sbb
rcll
inc
cmp
add
or
mov
dec
stos
jo
dec
or
insb
push
mov
mov
sbb
xchg
fisubl
add
sbb
sbb
xchg
mov
pop
insl
into
jge
mov
xor
ja
xor
add
add
push
jl
jle
insb
out
adc
lods
mov
or
add
add
int3
cs
ficoms
mov
cmp
inc
mov
cld
jns
pop
mov
aam
sbb
jmp
push
xchg
mov
sub
jmp
mov
jp
cld
or
scas
adc
out
mov
mov
cmp
jge
xor
dec
push
inc
arpl
mov
pop
ror
add
sub
mov
push
sub
sub
inc
repnz
int3
orl
and
xchg
dec
push
add
add
into
in
sti
add
mov
inc
fsubr
jg
or
jae
js
shll
call
testb
scas
cmp
jae
mov
adc
mov
and
gs
outsl
aam
xchg
jo
mov
hlt
add
mov
inc
jmp
js
gs
repnz
add
fwait
mov
in
xor
adc
push
faddl
add
mov
mov
icebp
out
les
or
addl
xor
mov
leave
andb
clc
lods
imul
lds
sub
aaa
fadds
inc
add
or
push
jae
jmp
inc
sbb
cmp
enter
fcomp
pop
out
fbld
push
in
scas
out
inc
xor
mov
push
pop
sbbl
and
mov
movsb
aaa
xchg
sarl
loopne
test
xchg
jmp
xchg
inc
pop
stos
imul
add
shrl
loopne
mov
aaa
shll
jbe
mov
loop
inc
ja
jns
push
xor
pop
lock
push
rcll
or
push
pop
jmp
pop
icebp
mov
xchg
add
inc
cmc
jne
sbb
xor
cmc
inc
jb
and
std
orb
cmp
jge
mov
icebp
fisubs
jmp
add
data16
jne
mov
lcall
add
add
sbb
daa
clc
enter
jle
push
xor
xor
dec
dec
push
xor
add
int3
pop
inc
out
lods
pop
xchg
sub
push
repnz
sbb
xchg
aam
or
inc
pop
lea
fsubrs
stos
aaa
xor
gs
adc
adc
pop
fstpl
jge
xor
jp
aaa
pop
shrl
cli
mov
pushf
inc
cmp
cmp
popf
std
push
or
repz
aas
inc
mov
pop
add
aad
mov
in
sbb
cs
mov
in
es
sbb
dec
mov
push
pop
lods
shrb
mov
mov
mov
mov
sub
pop
xor
mov
daa
movl
stos
test
push
adc
push
dec
mov
pop
das
int
jnp
xor
dec
and
xor
test
push
push
jo
aad
lods
lods
in
dec
testb
add
add
jnp
sti
xchg
lahf
mov
ja
sbb
add
add
xor
scas
ret
or
mov
mov
in
xchg
int3
mov
rcrb
push
out
pop
pop
sti
cs
push
and
fsub
loope
lock
cmp
insl
std
mov
mov
out
inc
dec
and
cmpb
push
clc
movsl
mov
sbb
jae
or
jmp
sub
adc
popa
fwait
xor
add
mov
je
in
jg
jo
mov
cmpsl
cmp
cld
ja
fisubs
arpl
jmp
dec
jno
daa
dec
push
imul
fsts
jecxz
aad
call
test
and
mov
call
bound
sub
and
xchg
sbb
jp
dec
cld
cmpsb
fisttpll
jns
ss
jbe
sbb
inc
rcl
xchg
cmpb
jp
push
or
icebp
insb
pop
mov
jnp
mov
test
xchg
testb
add
pop
sarl
mov
and
add
mov
adc
ret
pop
mov
mov
cmp
jmp
inc
push
mov
mov
clc
mov
mov
pop
in
jno
fsubs
mov
jae
sub
jp
mov
in
pop
dec
les
pop
mov
and
rorl
sbb
mov
std
adc
mov
aaa
iret
cmp
mov
push
adcl
daa
lret
aam
inc
inc
lcall
add
iret
jb
xor
ds
push
jge
and
and
xchg
mov
pop
aad
dec
stos
xchg
dec
fmuls
jnp
jl
aam
mov
add
insb
push
cmp
jmp
ja
cmp
cmpb
int
inc
cmpsb
in
dec
mov
arpl
sbb
adc
gs
pop
inc
jne
push
mov
or
stos
jmp
sti
and
push
sbb
insl
lock
std
repz
aaa
cltd
or
add
jl
das
nop
jno
jge
scas
lahf
jecxz
and
lahf
inc
aaa
test
sub
leave
std
int
test
sti
jmp
or
decl
cs
mov
repz
adc
in
sub
pop
cmp
dec
lds
mov
ficomps
int3
mov
mov
or
sub
cmp
jmp
clc
aam
dec
outsb
mov
mull
aas
insb
fwait
push
and
in
stos
inc
mov
stos
clc
imul
sbb
movb
lcall
dec
push
or
sbbb
xchg
add
inc
pop
jae
loop
stos
jne
test
ljmp
cmpsb
iret
jnp
fcoms
movsl
jne
jl
sub
jo
cmc
mov
mov
adc
iret
xchg
xlat
and
mov
loopne
add
push
mov
fimuls
xchg
sub
negb
popa
lods
pop
jb
add
in
sub
cmp
arpl
je
mov
add
add
cmpsb
xchg
outsl
aad
movsl
sub
dec
pop
mov
push
push
mov
pop
stc
lds
mov
mov
xchg
lret
std
mov
bound
sub
test
sub
arpl
movsl
mov
jne
adc
out
push
mov
ret
lock
cltd
std
inc
popl
dec
notl
fcomps
fadd
in
fistpll
pop
dec
repz
arpl
mov
lret
pop
and
inc
xchg
lds
inc
push
inc
xchg
adc
xor
pop
adc
xchg
cmp
daa
ficoml
sbb
fstpt
adc
or
das
mov
rorl
push
sub
jl
les
push
fwait
dec
dec
pop
mov
sub
aad
mov
xor
sub
xor
arpl
inc
or
and
push
or
jae
test
push
add
or
fcmovnu
pop
sub
lea
add
insl
lcall
mov
inc
sub
sbb
sub
add
add
sahf
fldcw
cmp
mov
sbb
scas
inc
jp
mov
addr16
lret
xchg
jl
push
inc
rcr
pusha
inc
je
fcompl
pop
mov
lea
loope
mov
movsb
push
pcmpgtd
xlat
xor
mov
ds
jo
sub
std
jl
inc
xlat
pop
push
inc
jae
inc
repnz
lea
xchg
imul
addr16
cmp
sahf
je
pop
out
sbb
std
sbb
sahf
sbb
test
test
movsl
push
or
jg
jle
xor
sub
arpl
dec
mov
pop
sbb
add
fstpl
or
sti
fdivrl
mov
xchg
mov
xchg
push
add
ljmp
push
mov
push
rorb
mov
pusha
je
fsubr
fdivr
xor
pop
sbb
enter
sub
push
jae
push
andl
or
jns
push
and
data16
add
xchg
in
mov
incl
shll
lock
jecxz
add
iret
pop
xor
jmp
cwtl
jp
mov
aaa
js
pop
cmp
sub
into
mov
adc
add
and
push
mov
jne
adc
adc
xor
push
push
sbb
push
jl
push
push
in
sbb
stos
subb
out
scas
imull
xchg
adc
imul
les
push
mov
sub
gs
rclb
arpl
loop
jp
scas
gs
sub
repnz
rclb
cmc
inc
outsb
repz
inc
ret
aas
stos
add
lds
jno
sbb
cwtl
xor
repz
jp
sub
das
push
inc
sahf
mov
gs
idiv
mov
inc
rorl
xchg
test
les
cmp
in
int
shlb
or
and
xchg
leave
cld
mov
cmp
and
mov
mul
aaa
mov
mov
cmp
add
inc
mov
in
negl
sub
movsb
loop
test
add
int3
dec
pop
sub
push
scas
sti
pop
sbb
inc
mov
mov
sub
fnstcw
movsl
pop
loopne
add
mov
and
ret
jl
sarl
ret
mov
fcmovnbe
cs
clc
mov
aam
mov
or
xchg
xor
jns
pop
addr16
push
fistl
adc
repz
push
dec
xor
hlt
sarl
fbstp
sbb
add
lret
mov
cmpl
adc
xor
test
inc
stos
aaa
adc
xor
jl
fldpi
push
or
mov
out
inc
inc
adc
stos
fsubrl
int
lahf
in
mov
nop
div
fwait
popa
js
addr16
pop
mov
mov
repz
push
in
icebp
pop
dec
inc
mov
or
cmp
mov
sbb
mov
loope
mov
subb
aad
sub
insb
jns
cmp
fistps
inc
and
and
sbb
mov
sbb
add
add
mov
stc
dec
push
fmull
cmp
cmp
add
add
dec
pusha
and
cmp
sub
mov
in
cmpsl
andb
mov
repz
mov
or
imul
dec
int
movsb
mov
mov
xor
add
jnp
popa
mov
insb
jg
loop
cmpsl
fisubrs
cli
or
pop
mov
jmp
xor
mov
jmp
mov
cld
xchg
jae
pusha
and
push
out
add
popa
std
mov
cwtl
mov
test
in
jg
adc
test
pop
push
dec
test
xchg
fcom
mov
mov
fnstsw
bound
xlat
sub
mov
push
rorl
movb
int
in
fnsave
in
dec
movsb
dec
pop
pusha
repnz
sub
push
dec
jb
xchg
movsw
adc
adc
sti
sbb
push
leave
ljmp
add
sub
mov
add
add
adc
push
push
push
mov
dec
inc
out
add
jno
mov
inc
jl
dec
push
imul
mov
adc
xor
cmc
xor
inc
les
xor
push
roll
js
repz
ds
and
lds
popf
pop
jae
sbb
popa
push
sub
xor
add
clc
repnz
jno
adc
dec
fisttps
dec
push
out
test
sbb
jp
add
mov
outsb
insl
sub
rdmsr
loopne
mov
roll
dec
adc
call
aaa
pop
fadds
dec
fdivrl
ret
jl
je
fwait
orb
icebp
jmp
xor
mov
dec
int
scas
loop
jl
inc
push
iret
jg
push
mov
xchg
jle
and
fcoms
je
stos
fidivrl
push
push
outsl
insb
inc
pop
sbb
clc
insl
jae
fiadds
add
out
repnz
add
pop
lcall
les
inc
dec
addb
add
xchg
xorl
fldt
push
ret
ljmp
pushf
push
lea
sbb
cmp
mov
mov
test
imul
cld
push
fs
sbb
jmp
push
nop
dec
mov
insb
insl
dec
mov
mov
mov
jle
in
lods
sbb
stc
jo
subl
and
out
push
outsb
xchg
test
int3
stos
sub
or
cmp
loope
pop
iret
cmp
xor
and
fnstenv
dec
adc
mov
andl
sub
inc
add
inc
push
pop
mov
cmp
lods
insb
out
movsb
shrl
popf
imul
pop
pop
push
mov
push
sti
add
mov
xchg
lods
or
stc
mov
fs
notl
fidivl
push
in
mov
in
xchg
push
imul
add
pop
mov
push
decl
js
loopne
dec
call
add
sub
movsl
mov
test
clc
imul
data16
lods
jl
test
jmp
loopne
stos
or
mov
pop
out
loopne
insb
std
add
dec
cmc
enter
cld
pusha
loop
ja
daa
sbb
xchg
xor
fstl
pop
arpl
jg
mov
test
sub
repnz
sub
inc
mov
fstl
jb
fnstsw
and
add
mov
cmp
out
xor
insb
hlt
insl
inc
test
pop
jle
fmul
xor
das
int3
jg
xor
insb
add
pop
push
pop
add
dec
sbb
pop
or
mov
xchg
jae
clc
mov
sbb
jmp
gs
mov
push
push
out
jnp
push
mov
or
mov
xor
jge
lahf
mov
sti
xchg
sbb
pop
dec
mov
int3
rolb
adc
lret
push
pop
sub
lock
jg
dec
push
test
add
jmp
in
push
sub
pop
dec
jmp
add
call
out
lods
nop
xor
jbe
push
push
mov
cmp
inc
cld
aad
inc
out
and
jb
xchg
lea
out
push
inc
int3
rcl
push
aam
or
ljmp
and
bound
inc
and
jae
add
push
push
clc
ja
mov
scas
push
imul
scas
test
xor
ljmp
cld
sbbl
in
pusha
jmp
int3
movsb
fs
push
arpl
nop
ficompl
dec
jle
or
push
cmp
pop
mov
mov
pop
mov
faddp
enter
cmp
sub
fisubrs
shrl
dec
push
imul
pop
add
lods
and
xchg
movsb
adc
arpl
pop
lret
xchg
or
cmc
es
rorb
sbb
out
or
jp
sahf
loope
aaa
dec
pop
mov
movsl
int3
dec
inc
fwait
add
add
outsb
xor
mov
lcall
ljmp
jbe
cmp
add
mov
push
push
imul
mov
test
inc
jl
sbb
and
push
fldcw
cmc
push
cmp
inc
loop
ljmp
fisttps
dec
or
adc
test
sub
std
pop
mull
movsb
sub
xchg
mov
pushl
sub
push
mov
lahf
notl
adc
lods
and
push
jl
push
shl
jb
popf
outsl
jg
add
js
ficompl
xor
lcall
pop
xchg
test
call
test
pop
cmpsl
sbb
jnp
cmc
pop
je
repnz
sub
mov
adc
sbb
dec
lahf
test
inc
arpl
and
pop
int3
xor
add
nop
inc
pusha
movsl
mov
cmp
imul
pop
hlt
pop
jbe
ds
or
mov
outsl
add
add
inc
ror
lock
jnp
xor
xchg
cmpsl
jo
in
jmp
add
mov
rorl
pop
mov
pop
sub
fstps
xor
leave
scas
lcall
push
cmp
mov
insb
outsl
aad
cmovae
xor
inc
in
ss
shlb
mov
mov
jle
dec
popf
xor
mov
jg
adc
ret
aas
mov
push
push
jae
dec
jb
dec
mov
or
test
enter
push
addr16
sub
ljmp
in
inc
push
incl
adc
mov
data16
pop
mov
xchg
mov
mov
adc
andl
mov
in
aam
lcall
jbe
cld
pop
stos
lods
testb
subl
das
stos
sbb
rolb
mov
lods
add
ret
lret
jl
lock
hlt
in
inc
lahf
xchg
mov
call
cmpsl
cs
imul
popf
push
add
add
repz
fisubs
scas
cs
add
test
adcl
cmc
outsb
add
notb
inc
or
insl
cmp
scas
jle
int
sbb
or
outsl
rorb
mov
stos
test
div
xchg
pop
fstps
push
lds
mov
orb
add
ds
jnp
cltd
push
sub
repz
inc
insl
rcrb
adc
jns
mov
mov
push
and
in
jno
dec
and
aas
repz
adc
jb
leave
or
jecxz
addr16
bound
adc
mov
xor
cmp
fnsaves
out
add
into
imul
int3
cli
repz
insl
test
mov
sbb
stc
popa
push
jae
or
add
inc
or
adc
movsb
cmp
inc
jmp
mov
push
jge
and
and
cmpsb
test
sub
mov
or
je
sbb
pop
jge
test
jnp
in
add
add
add
out
sbb
mov
aam
arpl
add
add
pop
xchg
je
sahf
into
sti
xchg
mov
insl
loopne
lods
fdivl
push
mov
in
sahf
scas
fdivrl
stc
and
pop
adc
dec
into
incl
cltd
in
hlt
mov
and
out
mov
ret
inc
out
mov
jmp
dec
cs
idivb
test
cltd
dec
mov
push
lahf
movsl
cmp
add
add
mov
push
push
mov
loope
mov
and
shrl
arpl
bound
rep
cwtl
lret
jle
xchg
jmp
das
xchg
xchg
xchg
ljmp
loop
mov
push
sti
pushf
mov
mov
push
call
jmp
xor
scas
dec
mov
fwait
push
xor
sub
lea
push
or
xor
mov
dec
pop
jle
shll
jne
insb
les
mov
add
add
scas
push
repz
cmc
scas
sub
mov
push
add
add
pop
outsb
pop
loopne
les
shlb
mov
xchg
adc
in
mov
adc
int
pusha
xor
cmpsl
cmpsb
std
stc
les
push
in
bound
cmpb
sub
jne
push
shl
pop
sub
jecxz
imul
cs
adcl
mov
push
push
cmc
jmp
aad
in
cmp
cmp
push
icebp
or
ds
pop
test
xchg
call
or
call
loop
adc
xor
aam
xchg
in
jl
adc
mov
mov
loopne
cld
in
mov
adc
sahf
dec
jg
push
xchg
divl
cmpsb
lret
jp
dec
cmp
push
inc
or
iret
sub
int3
les
xlat
mov
pop
cmp
jl
jg
sbb
and
xor
scas
mov
push
dec
xor
pop
sub
and
dec
lret
in
pop
and
add
add
pusha
rorb
cmpsb
mov
pop
fs
out
add
add
stc
jae
cmpsb
xlat
jns
push
data16
push
and
lcall
or
add
adcb
testb
addl
dec
fs
mov
sarl
popa
sbb
jmp
inc
jle
cmc
inc
jns
lods
frstor
repnz
test
roll
jmp
mov
iret
pop
pop
icebp
pop
lods
mov
stc
jno
outsb
bnd
pushf
out
out
jnp
push
xor
ret
pop
or
dec
lock
mov
push
loope
aas
gs
mov
inc
sub
sub
or
js
mov
xchg
cmp
aas
mov
and
stos
mov
push
and
icebp
adc
mov
in
cmc
xor
popf
jl
xchg
mov
add
inc
dec
cld
repz
ss
sub
mov
ss
inc
jne
les
xor
add
jecxz
push
testl
fstl
shll
add
add
mov
mov
ja
and
test
sbb
mov
sbb
out
jmp
sahf
sbb
cmp
inc
mov
je
idiv
sbb
dec
fwait
and
xchg
cltd
sbb
adc
pop
xchg
and
lret
ss
les
and
jecxz
xchg
test
stos
sub
roll
sub
push
ret
imul
jnp
pushf
add
int3
int3
push
daa
gs
fs
cmc
mov
das
mov
fsubr
subl
sti
enter
jns
insl
shrb
sub
mov
ljmp
in
insl
pop
rclb
dec
xchg
push
shlb
mov
dec
nop
movsb
mov
sahf
and
adc
mov
sti
scas
test
adc
and
adc
push
jg
aam
jg
test
sbb
mov
cmpsl
xchg
or
mov
add
add
xchg
mov
mov
pop
das
jle
loope
ja
add
add
push
sahf
int
cli
bnd
lds
lock
add
fs
push
or
xchg
and
jmp
cmpsb
dec
stos
mov
xor
pusha
xchg
mov
xchg
adc
repz
sub
jo
out
fnstenv
cmp
mov
xchg
out
cs
xor
mul
xor
add
dec
daa
mov
lods
fmull
iret
sbb
xchg
fldenv
pushf
imul
push
cmp
pop
mov
idiv
repz
fdivs
stos
xlat
aad
lret
adc
into
mov
shl
xor
ss
mov
les
cwtl
sub
outsl
dec
mov
sub
cli
loopne
inc
xchg
ret
pop
dec
in
xor
sbb
push
mov
lea
mov
add
sub
divb
mov
repz
add
lcall
add
mov
fucomi
xor
nop
stc
jl
add
add
movsb
shlb
mov
pop
sarb
pop
ficoms
and
push
mov
out
ret
popf
pop
popf
fwait
add
fldcw
gs
lahf
pop
int
sarb
scas
test
and
dec
imul
fildl
push
mov
aam
and
jmp
and
rcrl
xchg
or
mov
pop
outsl
xorb
dec
test
pop
out
cmp
incl
adc
inc
cmpsl
stos
xorl
cld
aaa
in
mov
cmp
sbb
xchg
jecxz
sbb
cmp
jns
lods
dec
push
mov
mov
jne
cmp
sbb
mov
lcall
dec
clc
adc
or
push
push
mov
adc
mov
push
and
clc
cmpsb
cmp
dec
xchg
sbb
adc
rcl
or
cmp
dec
sub
test
repnz
push
add
add
push
inc
pop
jns
aas
loopne
sub
cmpsb
xor
add
add
xchg
cli
fidivl
inc
mov
mov
inc
pop
std
sbb
push
jbe
movzwl
cltd
ds
jae
pop
adc
cmc
pop
jge
add
movsl
sub
push
or
adc
rcr
mov
je
repnz
sbb
bound
pusha
mov
imul
sub
shlb
fmuls
lea
xchg
pop
push
lods
jbe
xor
dec
fs
inc
mov
mov
iret
test
or
mov
lcall
lret
rorl
xchg
repnz
and
pop
or
push
fwait
cmp
ret
arpl
ret
xchg
cmc
and
ss
adc
dec
scas
sub
mov
push
dec
push
pusha
and
xlat
sub
or
int
sahf
negl
cmp
mov
imull
xor
jmp
sub
je
xor
mov
insl
add
mov
mov
cwtl
jge
lods
fldl
shlb
add
jnp
mov
jns
and
xchg
add
add
and
cmp
in
adc
xchg
aad
jge
pop
xor
or
sbb
cmpsl
or
jl
jno
aam
orb
or
cmp
lea
fstps
rorb
les
in
push
push
cmp
clc
pushf
lahf
xor
add
cmp
jecxz
mov
xchg
gs
imulb
test
dec
lcall
dec
sti
pop
or
sub
lods
inc
in
jge
pop
cmp
pop
sbb
inc
xchg
adc
mov
jle
mul
loope
pushf
jle
inc
rorl
sbb
addl
stos
jg
xor
xchg
sub
jns
jecxz
and
push
mov
sub
clc
mov
inc
xrelease
mov
sub
imul
gs
sahf
mov
mov
add
add
in
pop
popf
and
pop
jbe
test
das
xchg
pushf
fimuls
dec
test
pusha
mov
cmc
aaa
mov
in
sahf
aaa
sarb
lahf
add
xor
dec
sub
xor
cmp
cmc
stos
decb
je
xor
cwtl
mov
cltd
inc
push
mov
pop
loop
mov
xchg
negb
xchg
xchg
cmp
sub
mov
in
hlt
jae
ds
xchg
sbb
push
push
das
lea
iret
inc
pop
sbb
add
and
mov
xor
cmp
push
mov
inc
cmp
mov
mov
push
popf
add
push
fisttpl
ds
adc
int3
lcall
outsl
sti
push
mov
lret
mov
mov
or
stos
mov
mov
daa
icebp
stos
adc
icebp
fidivl
in
loope
ss
std
sbb
daa
mov
add
xchg
mov
idivl
inc
sarb
nop
testb
add
into
mov
loope
es
cld
call
aad
inc
mov
mov
mov
in
sub
xchg
push
in
or
xor
dec
pop
jns
and
push
dec
out
mov
xchg
dec
mov
cmp
daa
mov
add
or
cltd
pop
xorb
xchg
ds
mov
test
shrl
subl
stos
lcall
imul
mov
add
or
push
adc
add
xchg
test
rcrb
push
mov
ljmp
pop
or
pop
sub
inc
lods
pop
es
in
mov
les
pop
int
mov
or
cli
dec
and
xlat
mov
mov
push
mov
data16
pop
adc
jmp
fdivr
xor
cmp
add
push
bound
dec
cmp
out
and
sahf
inc
popf
xchg
fiadds
add
test
mov
fcmovu
arpl
xchg
testl
add
fidivl
jge
sub
clc
gs
sahf
add
xor
dec
xor
xorl
mov
inc
mov
pop
sahf
jo
push
mov
imul
daa
js
icebp
test
xor
cmpsb
jno
pushf
ret
pop
mov
inc
inc
and
in
arpl
test
dec
inc
sub
add
dec
fdivl
shll
xor
xchg
ret
sahf
xchg
mov
dec
xchg
inc
pop
icebp
mov
mov
add
repz
loopne
jne
or
pop
xlat
pop
push
add
add
inc
arpl
bound
call
jnp
xor
inc
mov
push
es
inc
fistl
movaps
fidivrl
fimull
add
sub
ja
ret
jae
adc
idivb
aam
cmpsb
inc
add
dec
mov
iret
loopne
and
movsb
mov
mov
arpl
xor
outsb
xchg
mov
jg
add
jmp
imul
lahf
repnz
jge
inc
push
lcall
add
pop
jmp
icebp
xor
add
push
dec
icebp
mov
adc
arpl
ret
push
or
aad
cmp
jp
and
inc
filds
xlat
stos
and
push
sbb
xchg
sub
dec
leave
mov
or
inc
lods
repz
lods
inc
push
popa
sbb
inc
mov
mov
adc
gs
and
lret
or
push
insb
jbe
push
ss
pop
adc
mov
xlat
fdivl
fs
xor
pop
lock
or
je
in
js
call
pop
push
jo
jl
and
test
mov
nop
xor
jle
inc
lods
dec
push
pop
repz
jb
mov
mov
sbb
popf
push
loop
adc
mov
inc
add
in
xchg
pop
push
xor
dec
mov
loope
in
divb
add
das
imul
into
add
sbb
or
cmc
mov
gs
in
add
enter
add
pop
lods
pop
cli
cmc
cmpsb
lret
adc
rcrb
add
add
je
add
stos
lcall
xchg
mov
ja
dec
mov
mov
push
lock
fimull
fs
in
arpl
fnsave
mov
lds
inc
xchg
inc
js
decb
sbb
mov
xlat
inc
out
fdivs
sub
add
call
scas
push
jno
int
push
and
pop
sbb
insl
jecxz
mov
out
aad
pop
xor
out
push
into
cmpsb
sbb
xchg
loopne
div
cmpsb
sbb
or
sub
add
insb
jecxz
mov
fisubrs
add
sbb
pop
add
jle
popf
sbb
lea
or
sti
pop
xor
jno
lahf
pop
pop
xchg
std
lahf
jmp
mov
lret
sbb
pushw
xor
dec
rcrb
insb
add
lods
adc
xchg
jnp
aaa
push
ss
in
add
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
sahf
or
xchg
ret
mov
pop
and
pop
ret
jno
pop
xchg
jbe
add
or
ret
push
xor
xor
test
fcmovnu
mov
jne
sub
fcomps
fxch
aas
inc
test
sub
je
in
jmp
add
dec
and
cmpsb
mov
shr
mov
cmc
pop
das
push
arpl
cs
jo
stos
pop
lahf
ljmp
mov
std
fistps
es
xchg
movzbl
insb
enter
cltd
stos
push
sbb
add
xor
fs
sub
mov
push
pop
ljmp
mov
out
sbb
mov
pop
jl
or
icebp
fldl
insb
mov
xchg
lret
in
mov
jge
or
push
push
pop
lods
and
jge
or
into
xor
cmp
adc
lock
push
mov
or
inc
jne
data16
hlt
sbb
jg
lods
out
lods
cmp
fistl
add
add
aam
int
aaa
das
aam
push
dec
popa
test
add
add
in
mov
in
fdivl
outsl
mov
mov
adc
sub
aad
call
xlat
adc
and
add
mov
pusha
cmp
out
in
out
mov
mov
movsb
leave
add
dec
popf
shll
and
in
in
push
push
mov
sub
mov
or
cmp
lea
pop
sub
les
enter
xor
push
dec
or
ret
mov
xchg
aas
mov
fwait
push
js
sti
dec
filds
xor
mov
jecxz
enter
jae
and
stos
or
aas
cmp
or
ljmp
mov
xchg
dec
rolb
push
jae
mov
push
shl
and
jne
cmp
or
pop
mov
sbb
test
repnz
xchg
xor
cmp
mov
adc
jle
mov
loopne
fiaddl
pop
arpl
addr16
sub
pop
mov
add
add
iret
rolb
xchg
jb
mov
push
popf
stos
popf
mov
jge
pop
js
mov
hlt
push
sbb
ficomps
clc
or
movsl
cmpl
ja
push
ss
test
cmp
neg
ljmp
push
das
loope
dec
xorb
loopne
cmpsb
fnstsw
mov
jae,pn
sub
mov
data16
add
mov
add
dec
or
mov
and
adc
xor
in
jnp
imul
sbb
inc
repz
jl
fbld
pop
imulb
add
ret
xchg
or
popf
pop
sub
lea
mov
push
out
cmc
out
ljmp
das
test
int
lds
xchg
repz
jne
cmc
add
call
out
pop
sbb
adc
lret
imul
sbb
mov
jno
fwait
mov
es
mov
mov
out
cmp
cmp
pushl
xchg
xor
jns
add
mov
add
add
sbb
test
subb
sbb
movsl
jae
and
jmp
push
push
sbb
outsl
icebp
sbb
dec
cwtl
push
pusha
inc
add
jo
out
sahf
sarb
or
int3
jp
push
repnz
fdivl
sub
ja
fnstsw
or
cmp
aam
jl
lret
xchg
aaa
lods
cmc
nop
outsl
enter
shrb
jge
insb
loope
fisubs
loop
jb
sub
mov
sar
mov
popf
fisubl
ss
push
pushf
ret
adc
les
repz
stos
pop
push
test
mov
ret
jl
or
sub
mov
push
mov
sti
imul
mov
sbb
lock
fstp
push
inc
xor
inc
mov
jl
xor
jl
daa
pop
repnz
inc
pop
xlat
sbb
rcll
sbb
cmp
jo
hlt
inc
xlat
out
cmc
xchg
add
add
push
scas
mov
xlat
test
add
clc
stc
jmp
adc
outsb
mov
and
out
xchg
xchg
test
dec
aaa
in
ror
inc
int
mov
movsl
dec
cwtl
icebp
xlat
inc
rcrb
mov
leave
jl
and
in
mov
shl
push
push
sbb
dec
add
xor
add
cmp
lahf
in
pop
loop
fisttpl
jmp
outsb
xor
fwait
cld
test
add
push
jge
or
pusha
inc
jne
es
sbb
inc
imul
push
in
repz
popa
insb
adc
and
sbb
mov
fdivl
clc
mov
mov
cmc
sbb
fs
or
ja
xor
add
sbb
adc
jecxz
xchg
in
ret
mov
jp
cmp
cmp
test
fldcw
xchg
xchg
leave
push
je
xor
inc
dec
cmc
jnp
cmp
fcoms
out
add
aaa
xchg
and
movsl
mov
mov
mov
loopne
mov
add
add
xor
xor
mov
loopne
popf
scas
push
adc
lods
fmull
sub
enter
insl
int
sub
sub
mov
xchg
xor
adcl
in
jns
mov
out
rol
movsb
lahf
fs
adc
rcrb
mov
cli
stc
or
xor
dec
fistl
ficomps
adc
aaa
mov
pop
dec
fwait
adc
out
jbe
inc
push
lret
stos
mov
lods
push
or
jo
xlat
dec
mov
into
and
push
cltd
insb
inc
or
mov
and
rcl
and
and
and
pop
pop
sahf
mov
jns
sbb
subb
xchg
insl
inc
push
mov
rcrb
scas
xor
cmp
inc
fs
filds
sbb
xchg
lds
pop
ret
int3
stos
or
loopne
jg
add
push
sbb
and
orl
negl
roll
add
fdivl
mov
push
or
add
jb
push
addr16
mov
inc
jmp
lahf
xor
dec
mov
in
test
popa
lea
andl
pop
sub
xor
mov
inc
or
ss
das
daa
cmp
mul
mov
sub
xchg
fsubp
into
jl
adc
shl
mov
push
jle
mov
pop
dec
ss
xor
pop
orb
repz
call
leave
mov
adc
sbbl
mov
mov
jbe
mov
sti
add
rorb
insb
repz
jecxz
bound
push
fisubl
iret
popaw
movsb
pop
push
popf
pop
cmpsl
jne
into
fstpl
or
lret
add
push
sub
stos
push
dec
xor
decl
inc
imul
xchg
xchg
icebp
mov
incb
loop
xor
cwtl
sbb
add
or
and
incb
add
inc
stc
mov
mov
lods
imul
cmpb
movl
add
sub
jbe
sarb
sub
loop
fcompl
pop
repnz
popa
pop
pop
sbbb
push
fstp
jp
test
add
les
mov
cmp
pop
pop
or
sub
jle
mov
mov
dec
pop
add
xor
pop
stc
es
adc
hlt
mov
je
mov
daa
xor
pushf
pop
sbb
insb
add
sbb
lds
es
sbb
jg
aaa
loope
pushf
mov
mov
loope
mov
clc
dec
mov
xchg
jle
in
lock
sti
push
das
test
scas
xchg
mov
icebp
test
out
outsb
adc
out
adc
loopne
fsub
lock
enter
mov
jg
mov
and
imul
pop
xchg
out
push
or
sti
icebp
adc
lock
mov
leave
into
xchg
sub
add
xchg
sub
scas
or
cmp
mov
test
int3
add
add
add
pop
je
push
inc
movsl
and
cmp
mov
test
in
mov
xchg
mov
inc
sub
sbb
cmp
std
movsl
push
and
mov
inc
nop
call
xor
pop
pop
mov
cmp
js
movsb
push
shrl
dec
stos
xchg
or
push
lods
xor
iret
rcrb
pop
mov
inc
cmp
inc
xchg
sub
xchg
incl
adc
repnz
pop
scas
pop
movups
cmp
shll
fstpt
jecxz
movsb
cmc
add
aam
add
mov
jnp
icebp
hlt
add
fisttps
fildl
adc
test
inc
push
jle
movsl
mov
mov
xchg
repz
imulb
out
out
rcrb
mov
loope
ret
inc
push
dec
xor
add
xchg
enter
push
fbld
sarb
roll
add
add
bnd
cmp
pop
fs
aas
mov
sub
sbb
dec
dec
call
cmp
push
insl
sub
pop
aas
jo
cmp
pushf
and
ljmp
test
pushf
rep
xlat
sbb
xchg
out
out
xor
movsb
inc
push
add
jle
sbb
enter
add
call
sbb
add
out
test
mov
cmp
mov
test
xor
movsb
and
adc
add
push
fbld
addr16
and
out
int
popa
test
shlb
test
jle
push
stc
jp
sarb
mov
mov
enter
push
mull
xor
loope
hlt
mov
iret
ds
outsb
xor
repz
imul
xchg
fs
mov
in
inc
mov
xor
or
add
mov
into
fwait
add
mov
add
add
lret
je
icebp
jmp
daa
cmpsl
cmp
add
mov
adcb
test
jle
popa
or
lret
data16
mov
arpl
dec
mov
cmpsl
out
iret
hlt
sub
lret
pusha
xor
test
dec
imul
jae
or
jecxz
loop
pop
mov
lock
shlb
ds
lock
inc
push
add
or
movsl
lea
imul
mov
mov
fdivp
rorb
ljmp
mov
mov
lret
adc
dec
mov
or
icebp
inc
imul
icebp
lock
add
fstps
je
jno
or
out
sub
repz
or
rorb
jo
sbb
or
add
jl
test
out
mov
pop
sarb
in
mov
fildl
add
jp
dec
stc
popl
cmp
add
and
std
repz
xchg
repnz
sbb
jge
popf
out
popf
jmp
adc
das
pushf
popf
push
repz
les
mov
push
cmpsl
ja
inc
add
mov
dec
inc
pushl
cmp
rorl
and
stos
stos
adc
jne
pop
daa
add
sbb
ds
fildll
and
dec
mov
and
mov
sub
jg
adc
nop
mov
and
scas
shlb
add
dec
in
imul
stos
bound
jmp
jge
aam
addl
aad
sbb
arpl
cli
int
ja
mov
sub
add
xchg
jb
js
iret
jbe
ret
sbb
push
repz
inc
cmp
lea
mov
andb
cmpsb
in
shl
scas
xor
js
cmp
loope
loop
enter
add
inc
out
aas
mov
shlb
xchg
mov
loopne
add
add
jmp
push
ss
cmp
xchg
pushf
out
inc
add
pushf
scas
icebp
jg
std
jns
and
pmaxsw
es
fisubl
add
cmp
mov
jle
push
out
outsb
pop
in
adc
push
cmp
xchg
enter
push
loopne
bswap
jge
out
dec
test
call
push
insb
jmp
ss
out
inc
fists
ucomiss
in
stos
loop
ret
adc
add
imul
cmpsb
adc
or
dec
pushf
mov
fwait
outsb
push
and
mov
jmp
loope
add
scas
in
cli
inc
xlat
les
iret
add
clc
push
dec
fs
mov
xor
mov
fsincos
xor
mov
push
in
sub
inc
rcrl
sbb
test
stc
jmp
cld
xchg
imul
xlat
mov
cmpsl
mov
add
pushl
push
bnd
dec
leave
and
decb
in
add
add
or
xor
scas
push
scas
fcoml
out
lods
addr16
inc
push
push
mov
mov
lea
icebp
jg
dec
jl
call
pop
int
js
dec
stos
sub
push
inc
cltd
cmp
in
xchg
add
push
sarb
inc
xchg
and
and
push
stc
sbb
stos
pop
mov
pop
leave
scas
xor
cli
xchg
lcall
sbbl
xchg
ljmp
fisubrl
adc
sbb
push
inc
push
in
les
xor
push
test
outsl
pusha
adc
fs
and
push
fwait
pop
leave
lock
fsubl
xchg
pop
sbb
in
xor
cmp
push
daa
pop
test
nop
and
add
lret
js
push
sub
push
bound
push
mov
fs
dec
and
xor
inc
add
sub
mul
dec
xor
mov
sub
pop
xor
xchg
adc
jbe
jne
pop
cwtl
add
add
in
out
ja
filds
adc
ljmp
add
adc
stos
or
mov
cmpsl
mov
out
orb
popa
or
popf
cmp
in
mov
and
dec
movsb
pushf
out
out
cmc
cmp
sahf
sbb
inc
push
sub
gs
mov
in
ljmp
xor
mov
sbb
in
xor
clc
idivb
or
adc
push
push
lret
mov
fidivrl
mov
lds
xor
mov
mov
stc
dec
in
xchg
pop
mov
cmp
inc
or
std
imul
adc
add
add
int3
mov
jg
ret
out
or
in
fnstenv
lods
dec
shlb
xchg
shrb
scas
pop
aam
sub
push
nop
xchg
sbb
adc
adcl
fwait
imul
jp
lahf
xchg
xchg
fidivs
dec
add
jne
shl
add
scas
test
in
inc
push
or
or
add
sbb
jmp
aaa
and
dec
or
jo
jmp
push
nop
cmpb
jb
push
xorl
lahf
and
inc
test
add
inc
inc
jbe
adc
mov
lea
int3
dec
pop
xchg
jne
mov
int
test
aaa
stc
push
in
lods
and
mov
mov
pop
cmp
and
pop
movsl
icebp
xchg
or
pop
mov
mov
inc
lds
ret
pop
cmp
jmp
push
cmpsl
fmull
pop
jo
inc
sahf
pop
addb
popa
pop
lahf
or
add
dec
inc
ret
test
out
mov
add
ljmp
or
mov
or
mov
sub
fstpt
aas
into
fndisi(8087
sahf
mov
sub
dec
push
nop
insl
aad
mov
sub
jmp
and
dec
mov
xchg
xorb
jl
enter
xchg
aas
add
add
jg
neg
pop
daa
inc
gs
loopne
hlt
or
add
cmpsb
pusha
pop
outsl
adc
test
imul
cltd
inc
add
add
movsb
sarb
and
fsubrp
into
fistl
ljmp
mov
imul
inc
bound
adc
push
add
or
inc
lahf
jnp
scas
outsl
mov
les
cmc
lcall
jns
test
es
fcmovnb
leave
cli
adcb
sbb
jmp
out
mov
jp
sbb
jne
adc
jnp
dec
xchg
xor
call
shl
or
lcall
pop
dec
adc
and
adc
push
xchg
iret
inc
jb
pop
test
push
mov
fistpl
in
cmp
out
mov
or
sbb
ja
xlat
pop
call
jns
jne
mov
cmp
icebp
pop
fdivr
mov
mov
xor
jg
call
add
rcll
add
cmp
sti
jg
cmp
je
lock
sar
or
add
add
inc
adcb
sbb
pop
pop
push
adc
mov
xchg
mov
and
mov
dec
lea
mov
adc
rorl
xchg
rolb
cmp
not
daa
sub
mov
test
add
gs
xor
lods
sbb
cmp
jbe
mov
add
out
ljmp
and
push
jg
js
mov
mov
push
mov
and
daa
inc
stc
push
xor
mov
pop
lret
jecxz
push
sbb
xchg
ja
pusha
int3
pop
sti
cmp
push
jle
cwtl
mov
or
cwtl
cmpsl
cmpsl
cmp
movsb
scas
and
cmp
es
dec
in
and
loop
stos
imul
xor
outsl
cld
call
sub
mov
jecxz
cld
xchg
push
mov
shrb
dec
repnz
add
jnp
fstp
fcompl
clc
xchg
decb
add
add
lret
mov
jecxz
pop
adc
push
inc
cmc
push
lods
dec
mov
sbb
fistl
fsubs
outsb
sbb
popf
mov
mov
fwait
clc
inc
in
mov
movsb
fs
insb
xchg
jge
fsubrs
lret
out
out
xchg
sbb
mov
incb
inc
inc
mov
sbb
cmpsl
bound
sarl
or
or
lahf
sbb
mov
popa
int
mov
push
and
push
dec
mov
sti
rcrl
in
lret
inc
mov
test
jmp
adc
incb
je
imul
pop
mov
test
shl
inc
scas
mulb
pop
stos
dec
mov
aam
inc
inc
fldl
inc
pop
mov
jle
cmp
sbb
cltd
orl
adc
lea
inc
out
dec
mov
mov
sbb
add
mov
jno
std
outsl
mov
add
mov
mov
push
add
add
pop
sti
ret
mov
xchg
aas
and
or
dec
in
inc
data16
jbe
cmp
divl
jns
aam
inc
inc
jnp
mov
int3
out
mov
pop
xorps
nop
aad
stos
jb
jo
xor
sahf
iret
fs
sti
in
call
inc
mov
fbld
or
mov
jno
cmp
daa
lock
int3
scas
pop
or
mov
fnstenv
repnz
stc
or
dec
into
xchg
shll
xor
rorl
and
and
daa
lcall
ret
mov
mov
enter
mov
adc
or
pushf
inc
adc
fs
adcl
push
dec
cmp
inc
call
add
or
cmpsl
push
xor
mov
subl
adc
and
adc
jno
xor
inc
aad
adc
lahf
notb
cmp
adc
sbbb
loope
jmp
fnstsw
sgdtl
add
outsb
or
cmpsl
repnz
inc
jge
dec
repnz
adc
mov
mov
in
popf
shl
in
mov
push
mov
and
fwait
ds
loopne
mov
out
cli
or
xchg
or
jge
inc
les
fdiv
cwtl
test
in
stos
out
pop
mov
movsb
jo
mov
icebp
popf
jbe
mov
add
sub
xchg
stos
mov
sub
or
repz
mov
push
push
cmp
aas
out
mov
les
aam
lcall
mov
xchg
xchg
out
iret
sti
fcmovnbe
push
push
test
sub
sbb
dec
int3
fucom
insl
dec
fdivs
push
fisttpl
psllq
mov
addl
xchg
sub
arpl
ret
mov
inc
insb
cmpb
test
mov
sbb
mov
inc
and
stc
pop
xor
jge
mov
sub
add
add
xor
test
pusha
pushf
cltd
or
add
add
xor
into
ljmp
scas
aas
push
adc
inc
fwait
pop
out
mov
lahf
in
cmp
xchg
push
in
or
roll
jl
pop
call
mov
dec
sbb
push
dec
jmp
pop
jg
fstpt
or
in
adc
mov
mov
inc
bnd
int3
mov
ficomps
sbb
mov
mov
ljmp
xchg
faddl
push
lods
scas
ficoms
rcr
nop
adc
jle
stc
fwait
jnp
push
dec
lods
and
sbb
jnp
sub
pop
sbb
imul
adc
and
push
aad
fdivrs
and
rcll
pop
and
stos
test
jecxz
pop
adcl
imul
inc
add
inc
iret
popf
push
int
mov
xor
add
pop
xchg
loope
inc
and
cli
jo
mov
in
mov
add
dec
cli
inc
jg
int
xchg
lods
or
push
lock
add
mov
loopne
pop
ror
push
cmc
movsl
hlt
decb
sbb
pop
mov
xchg
test
stos
in
cmp
subl
lcall
push
movsl
jno
push
jbe
xor
sub
pop
cwtl
adc
test
decb
clc
lds
shr
mov
fldl
jae
pop
dec
mov
sub
xor
lahf
cmp
jle
sub
mov
outsb
sbb
das
cmpsb
test
dec
mov
js
hlt
xchg
jb
xor
js
in
aam
cmpsb
fstpl
push
mov
or
pop
fst
insl
or
jbe
out
cld
repnz
lock
inc
int
aas
out
pop
pop
int3
jecxz
sub
aas
inc
das
fsubs
adc
push
fidivl
jl
xchg
fcomp
fimull
rorl
jns
loope
sbb
adc
add
mov
add
add
xchg
std
cmp
jle
fistpll
fisubl
add
pop
adc
add
and
test
add
dec
sbbl
mov
in
cmp
mov
ret
push
insb
ret
iret
adc
push
lret
inc
std
fstpl
cmp
fdiv
ret
mov
movsl
pushf
ror
int3
push
cmpsl
pop
dec
loope
jmp
xchg
ret
jmp
int3
nop
repz
and
xchg
mov
test
inc
and
and
fimuls
popa
lret
add
sub
mov
and
mov
and
xor
push
ret
jmp
inc
mov
xchg
sbb
pop
scas
xchg
dec
xchg
or
movsb
sbb
push
mov
adc
cmp
pop
dec
adc
inc
sub
mov
lods
or
lea
mov
mov
pop
clc
and
mov
mov
lret
cwtl
push
adc
sahf
cmp
sbb
xchg
push
test
cli
or
in
notb
movsl
fsubrs
push
mov
add
xchg
pop
lds
xlat
ficompl
inc
inc
enter
adc
add
add
mov
mov
jns
add
lds
mov
jne
pop
mov
push
push
fidivs
add
lea
or
inc
push
mov
jge
sub
or
imul
pushf
mov
mov
lahf
and
and
mov
das
iret
xchg
xchg
mov
xor
test
xor
pushf
inc
sti
sub
data16
push
mulb
inc
repnz
lods
rcrl
mov
cmpsb
mov
or
cld
ja
sti
xchg
leave
rolb
into
call
xchg
xchg
adc
mov
mov
int3
testb
mov
je
add
pop
addr16
andb
xor
pop
enter
int
cmp
push
stos
mov
outsb
jo
jge
xchg
pushf
enter
outsl
pop
outsb
mov
enter
mov
mov
into
sahf
mov
outsb
or
cmpsl
aaa
cmpb
mov
dec
adc
andps
outsb
dec
jbe
sarl
jns
add
add
sub
iret
outsb
jmp
push
test
and
add
add
mov
sub
clc
dec
cmp
jmp
leave
sub
out
in
and
call
sahf
jg
xchg
mov
xor
mov
shlb
adc
or
test
or
sbb
outsl
pop
fisubl
lcall
out
int
sbb
cld
push
sub
data16
call
dec
int3
jmp
into
jl
fistps
inc
cli
inc
or
or
call
add
lods
loope
push
add
xchg
popf
push
fldt
in
not
in
cmp
mov
sub
jmp
push
xor
adc
mov
mov
sbb
mov
iret
xchg
int
sahf
push
jecxz
push
push
cmp
dec
leave
and
mov
inc
testb
sub
int3
or
xchg
mov
cmpsl
in
loop
adc
daa
lock
add
in
inc
add
add
std
sbb
stc
cld
or
cs
es
add
pop
sarb
pop
xchg
fcmovu
stos
jge
outsl
add
mov
pusha
sbb
loop
inc
inc
lret
jl
lds
mov
mov
jo
out
jecxz
add
mov
arpl
ret
xchg
push
lds
lret
xor
int3
sub
dec
int
icebp
dec
mov
mov
and
xchg
jmp
out
pop
dec
or
decl
std
lret
lods
sub
jns
adc
mov
push
lock
jne
mov
mov
xor
push
aaa
adc
in
in
mov
stos
lods
jl
mov
pop
stos
jbe
lds
aaa
mov
dec
cmpsb
imul
pop
dec
sbb
xchg
sub
xchg
dec
mov
inc
subb
inc
mov
fcmovnbe
mov
jbe
enter
pop
dec
shll
mov
ja
jns
jae
jmp
jmp
push
cmc
pop
loop
lds
inc
xchg
les
negl
adc
pop
xchg
cmpsb
fisttps
sub
add
add
xchg
in
xchg
int
dec
xchg
xor
ficompl
mov
pop
out
add
dec
jl
cmp
lods
jecxz
ret
push
and
mov
mov
fildll
pop
or
scas
lods
movaps
outsb
pop
clc
cmp
sub
and
or
and
mov
push
in
imul
arpl
lds
inc
jno
leave
mov
mov
jo
adc
jecxz
cwtl
mov
retw
add
mov
pop
adc
or
jge
mov
and
std
stos
fdivr
jmp
mov
mov
xchg
push
ljmp
shrb
dec
into
sbb
outsl
test
mov
push
cmp
mov
ret
test
cmpsl
pop
inc
add
es
push
mov
pop
movsl
arpl
cmp
add
add
dec
pushl
jnp
and
xor
add
add
js
xchg
push
sub
push
xchg
or
pusha
imul
jecxz
add
inc
and
jp
nop
sub
fdivs
cwtl
inc
pop
addr16
pop
and
fsubl
insb
sub
aam
xchg
ss
or
movsb
jae
and
loop
aad
adc
xor
jbe
addr16
dec
cmp
dec
aas
jg
icebp
mov
jmp
pop
pop
data16
ljmp
movsl
sub
mov
push
sub
push
je
iret
mov
sbb
cmp
ret
movsl
xchg
dec
cmpsb
xchg
das
inc
xor
ljmp
pop
jne
pop
cld
xor
fucomp
xchg
fs
inc
dec
xchg
adc
clc
push
jbe
ret
sub
icebp
sbb
xchg
iret
push
cmpsl
out
int
pop
xchg
or
mov
sbb
ja
inc
faddl
mov
jecxz
fldenv
mov
nop
inc
aaa
test
stc
add
mov
sbb
sub
add
pop
sub
inc
ja
pop
aas
dec
push
call
add
loopne
fstpl
in
jb
mov
fidivrs
cli
or
dec
fdivl
inc
dec
aas
das
jbe
inc
inc
add
sbb
in
fisubrs
mov
sbb
push
fimull
mov
mov
or
xchg
dec
mov
dec
pushf
dec
mov
mov
and
mov
mov
cmpb
insb
adc
mov
inc
xor
les
mov
roll
addr16
test
rclb
inc
dec
pop
and
ret
cltd
mov
cmp
fimull
push
xchg
xchg
aam
add
shr
rcrl
cmp
ret
test
or
fnstsw
popf
adc
out
popa
inc
dec
insl
scas
lods
xor
add
testb
shll
in
xor
rorb
loope
pop
aas
shrl
push
pushf
std
xchg
mov
loopne
insb
outsl
icebp
pop
stos
shrl
jnp
add
repz
jae
ja
div
mov
shll
cmp
add
add
add
sub
adc
sbb
or
divb
test
and
nop
out
pop
mov
pusha
inc
rolb
inc
fwait
xchg
mov
stc
in
test
push
jmp
mov
out
imul
pop
shlb
into
add
xor
xor
sub
cld
adc
sarl
add
push
pop
push
das
dec
cmc
cltd
dec
sbb
add
mov
in
aas
aad
add
in
and
imul
test
cmc
pushf
sub
test
xor
pop
into
sbb
loopne
add
mov
jb
xchg
js
cli
shr
xchg
pop
lahf
das
sahf
data16
rorl
xor
inc
mov
or
scas
add
dec
ljmp
jmp
pop
add
cwtl
mov
fadds
mov
cmc
xchg
sub
sub
lods
xor
jp
push
add
xor
cli
std
jg
push
pushf
dec
out
bound
sbb
add
xor
jle
mov
iret
xor
pop
mov
insl
add
xor
sub
enter
jge
outsb
mov
cmp
sub
lahf
ja
push
aas
fwait
stos
ret
push
xor
arpl
sub
aam
dec
data16
add
leave
fmul
fisubrs
rolb
xor
mov
inc
push
mov
in
add
sbb
and
cmp
out
pop
cmp
movsl
push
mov
mov
jp
adc
clc
arpl
gs
les
xor
xchg
mov
mov
imulb
and
fisubrl
and
dec
cli
xchg
lcall
ljmp
clc
sbb
imul
out
push
pop
xchg
insl
mov
adc
es
xchg
ja
fisubrs
lret
push
add
add
mov
std
incl
sbb
jno
jne
inc
sbb
add
lcall
push
dec
insl
mov
push
fistpll
mov
or
pop
and
fs
in
inc
cmp
scas
xor
and
jno
mov
aaa
dec
out
xor
std
aad
push
inc
adc
les
lods
adcl
dec
into
stc
and
sbbl
add
mov
pop
je
push
js
sti
es
and
xor
xor
sti
adc
jmp
in
push
mov
pop
ficoms
mov
mov
inc
pushf
imul
les
sti
aam
and
xor
daa
sub
jg
scas
cmpsl
loopne
lahf
jb
sub
jg
mov
mov
ud1
aaa
pushf
stc
shl
add
push
dec
pushf
and
cld
iret
xchg
adc
fdivs
stc
cmp
lods
addr16
loopne
or
mov
pop
stos
stc
adc
iret
xchg
mov
mov
add
add
es
jg
pop
or
xor
fldl
add
hlt
pushf
dec
pop
test
inc
fldenv
cltd
dec
insb
addr16
lahf
test
add
dec
int
hlt
push
testb
nop
and
add
mov
cmovno
jle
xchg
mov
or
fbstp
pop
and
sarl
imul
push
loop
pop
jmp
xor
xor
dec
dec
cmc
jne
dec
fnsave
cmp
es
mov
shrl
dec
inc
pop
fdivs
std
or
xchg
jge
call
mov
and
inc
mov
and
stc
lret
lods
daa
sahf
stc
mov
push
mov
je
adc
rorb
xchg
and
inc
sti
imul
sbb
bound
ja
ja
test
int
fcoms
in
sbb
or
ljmp
mov
mov
mov
mov
test
pop
xchg
in
dec
mov
jae
ja
dec
add
xchg
push
clc
or
dec
push
cmp
sbb
add
cwtl
cmp
pop
mov
leave
cmp
or
clc
xor
mov
scas
mov
add
lods
push
imulb
xor
xor
cmpsl
cmpsl
xor
hlt
repnz
cmpsb
adc
ret
xor
aad
jbe
mov
dec
mov
lea
lret
inc
pop
es
jno
cmc
lea
cmpsl
das
dec
rol
aas
add
add
nopl
test
test
add
mov
mov
shrl
or
js
inc
mov
add
pop
pusha
lods
push
cmp
lahf
into
enter
das
mov
and
cmpsb
mov
pop
adc
jg
push
std
sub
adc
jmp
je
inc
xchg
fldenv
iret
out
xor
push
dec
mov
pop
mov
xchg
jb
sbbb
fwait
cmpsl
cmpsb
xchg
daa
adc
dec
sahf
mov
sbb
pop
arpl
ret
lods
push
dec
xchg
add
xor
mov
add
add
nop
dec
pushf
out
xchg
das
sahf
ret
aas
push
insb
add
xor
rorb
cs
jge
pavgb
sub
lods
lods
mov
xchg
jae
mov
push
aas
lds
iret
or
ss
pop
mov
icebp
xchg
adcl
inc
jne
adcl
ret
mov
ret
pop
xchg
inc
cmp
insl
hlt
sub
test
jns
mov
pop
dec
add
lds
mov
gs
je
pop
shr
xlat
mov
dec
jae
test
and
mov
divl
in
xor
out
gs
adc
shrb
out
flds
jne
lock
pop
push
clc
pop
fsts
mov
push
sbb
adc
sbb
mov
xorl
nop
orb
sub
push
mov
iret
xchg
mov
mov
add
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
add
xchg
cmp
scas
cmp
mov
dec
mov
popa
fisubrs
mov
bnd
adc
pop
es
mov
imul
sub
jbe
mov
mov
sub
lahf
mov
aam
cmp
push
shll
fistpll
jl
fisttpl
cld
jle
into
inc
stos
sub
test
mov
add
mov
xlat
inc
cwtl
jecxz
jp
push
repz
jecxz
xchg
sbb
fcomp
das
andl
movsb
lods
sub
daa
data16
mov
out
mov
add
data16
je
scas
decb
lock
or
dec
xor
shrb
aad
jnp
jnp
loopne
insb
xchg
in
pop
or
cmp
cmp
adc
xorl
add
add
in
out
stos
jge
or
xor
add
add
lods
mov
inc
pop
pop
and
cmp
flds
add
cmp
int3
aam
aaa
icebp
dec
and
shrb
adc
repz
iret
into
imul
pop
cli
test
cmp
out
fisubl
test
lods
xor
bound
stos
addl
sub
add
push
int3
xor
pop
mov
aad
loopne
lock
push
mov
inc
xor
dec
add
mov
xor
add
repnz
xor
cmp
lds
or
cmc
inc
lock
and
in
xor
or
xor
inc
pop
sbb
mov
adcl
mov
add
sub
push
xchg
fcoms
sbb
mov
insb
xor
scas
or
cmpsb
pop
mov
lret
sub
inc
nop
das
or
sbb
out
mov
xchg
adcl
sahf
xchg
push
sarb
mov
add
dec
or
out
xchg
iret
push
aas
xchg
mov
add
add
call
outsl
sbb
sub
andl
ss
in
inc
add
lahf
xchg
lods
sub
lret
insb
mov
and
out
gs
inc
cwtl
cmc
jle
fsub
xchg
test
jl
nop
sti
in
inc
pop
movsl
mov
fs
inc
rorb
sub
pushf
cmp
std
xlat
in
xchg
sbb
das
dec
imul
jle
outsb
icebp
std
in
std
clc
and
popa
popf
cmp
dec
pop
repz
jecxz
xchg
ja,pn
imul
cmc
dec
mov
pop
stos
cmp
adc
pushf
shl
or
push
loope
adc
xchg
lock
sbb
add
lret
sub
sbb
cmp
push
mov
xchg
add
stc
in
push
decl
mov
or
xchg
test
es
ret
aaa
dec
sub
adc
add
add
in
add
cmp
out
loope
jns
scas
add
and
add
xchg
pusha
inc
cwtl
incl
fistl
mov
xor
mov
arpl
lods
push
data16
les
or
cwtl
rol
cmp
and
ljmp
fimull
lcall
cmp
bswap
or
and
xlat
into
dec
fistpll
mov
pop
daa
test
push
push
pushf
int
push
xchg
xchg
add
stos
sbb
xchg
mov
jle
jbe
xchg
std
daa
jns
ret
jle
lods
aas
inc
dec
mov
xor
mov
or
push
clc
cmpsb
adc
adc
iret
lods
xchg
xchg
xorb
xor
mov
and
push
icebp
and
or
mov
inc
mov
popa
lahf
adc
pop
call
sbb
ja
incl
fs
sti
cmp
mov
outsb
loopne
loop
jmp
sub
std
shlb
add
test
sbb
sti
push
mov
or
outsl
insb
and
add
fdivrl
mov
pop
mov
and
cmpsb
jle
or
mov
and
mov
mov
xor
xor
in
cmp
sti
daa
pop
gs
js
loope
shlb
ljmp
push
testb
sub
decb
xlat
jl
mov
or
mov
mov
add
push
adc
jno
loope
xchg
testb
sahf
in
adc
cmp
push
pop
mov
mov
icebp
or
xlat
push
jge
mov
or
cmp
fimuls
xor
out
stos
inc
les
insb
jmp
shll
outsl
or
lock
sbb
addr16
xor
fmul
mov
cli
jl
sti
xlat
xor
pop
jecxz
xor
sbb
xor
out
das
sub
cmpsb
mov
add
jg
cld
ret
add
xor
pop
jno
add
add
sub
shrl
and
int
dec
xor
cltd
fisubl
or
lcall
sbbl
stos
inc
aaa
lock
out
pop
add
xor
inc
push
je
and
pop
je
xor
mov
adc
inc
adc
push
pushf
or
sub
sti
dec
loope
fcoms
push
out
stos
shlb
jmp
movntps
jb
adc
xchg
dec
jae
call
idivl
bound
jg
sbb
lahf
icebp
xchg
jne
jo
ljmp
jmp
mov
sub
xchg
sbb
mov
adc
dec
out
leave
lret
stos
testl
add
out
mov
xor
pushf
lcall
test
cmp
inc
scas
or
push
inc
cmc
jl
pusha
fsubrp
insl
das
add
add
mov
iret
mov
mov
and
add
or
loopne
adcl
addr16
jmp
cmpsl
dec
es
jno
sub
movsb
aaa
jno
xor
ret
jns
xchg
mov
sbb
negl
imulb
imul
push
fmulp
mov
or
push
xchg
xchg
and
pop
out
mov
inc
xor
mov
int
aam
mov
enter
adc
pusha
mov
jp
xor
add
fisttps
adc
sbb
push
jns
nop
je
cmc
inc
mov
insl
repz
imul
shrb
or
es
dec
xorl
loope
xor
and
mov
dec
jle
sbb
and
pushf
insb
xor
xchg
test
nop
jp
push
cmpsb
mov
adc
ret
xchg
jmp
stos
les
cs
lock
test
inc
jns
jmp
add
add
mov
jg
arpl
mov
add
add
cwtl
xchg
rcrb
js
inc
dec
fcoms
rorb
xor
es
rcrl
or
and
push
add
jne
pushf
daa
add
loop
out
cmp
mov
jnp
arpl
cltd
enter
cmp
sbb
in
scas
push
add
cmpsl
xlat
adc
dec
lret
sub
xchg
sbb
mov
out
fmulp
sahf
andb
imul
mov
movsb
inc
fcmovu
pop
push
nop
lret
xchg
pop
xlat
and
or
cmc
add
std
lds
add
dec
aad
aaa
or
add
add
fsts
xchg
or
mov
sub
jp
aad
sub
fisttps
cwtl
push
lods
icebp
test
and
in
sbb
push
cmc
dec
mov
jns
jae
fbstp
ss
or
and
or
mov
xor
addr16
test
mov
add
xor
clc
cli
clc
sarb
sti
mov
xchg
andb
add
fidivl
mov
loope
adc
jno
notl
mov
pop
dec
daa
imul
dec
sbbb
enter
iret
aas
or
jbe
jle
pop
xchg
push
outsb
inc
or
cwtl
sub
sub
mov
adc
sahf
mov
fmull
repz
addb
cli
mov
jo
shl
test
pop
call
daa
negl
dec
or
adc
mov
inc
leave
sti
xchg
shll
mov
out
out
and
jl
fs
cmp
dec
adc
outsl
jmp
pushf
mov
pop
or
mov
sarl
jge
in
int3
mov
sbb
movsl
mov
insb
test
xor
mov
adc
jg
mulb
in
shlb
xchg
or
xor
push
das
iret
daa
pop
or
mov
dec
xor
push
incb
mov
xchg
imul
xlat
add
add
jnp
out
mov
outsl
stc
test
add
add
mov
inc
lea
aas
push
and
xchg
aad
cmp
dec
fistpl
lds
into
lea
push
sbb
imul
pop
pop
and
cwtl
cmp
data16
jae
pop
jo
xchg
dec
xor
shll
pop
xchg
lcall
imul
xchg
jae
adc
int3
xchg
push
push
fmul
dec
ljmp
and
jne
dec
pop
pop
dec
xor
iret
testl
and
sub
inc
mov
or
dec
pop
bound
add
xchg
and
add
push
add
xchg
dec
pop
add
and
and
ljmp
daa
cmp
mov
in
call
mov
leave
mov
andb
sub
adc
pusha
push
arpl
shlb
loop
gs
fwait
data16
add
fs
es
data16
insb
daa
mov
lret
stc
mov
mov
add
add
daa
inc
pop
int
scas
push
aad
dec
fs
inc
fnsave
dec
fidivs
push
popa
fucomip
or
insl
pop
fstl
out
pop
pop
mov
data16
fbstp
fldt
dec
jns
mov
lahf
scas
jnp
mov
orl
les
sub
xchg
in
or
daa
push
push
lods
jbe
pop
orb
pop
out
mov
nopl
mov
jnp
add
sub
xchg
lret
imul
mov
adc
jl
and
mov
popf
add
xor
repz
jns
in
dec
test
jnp
push
das
jmp
dec
pop
or
mov
xor
sbb
mov
stos
add
xchg
bound
test
imul
scas
add
ljmp
ljmp
add
add
dec
mov
imul
push
sbb
add
sahf
sub
bound
mov
xchg
pop
es
xor
xchg
shrb
add
lret
mov
push
pop
mov
loopne
jg
or
xchg
dec
sahf
enter
push
test
cltd
dec
mov
jl
int3
mov
push
test
test
pop
cmp
inc
lcall
in
adc
xchg
sbb
test
mov
jae
jge
mov
clc
sub
jae
jbe
push
icebp
jp
push
clc
mov
push
pop
ret
in
or
pop
rolb
pop
stos
and
shlb
pop
or
fnstcw
and
mov
push
mov
addr16
xchg
cld
icebp
fwait
push
popa
das
inc
popf
dec
movsl
and
fst
mov
fisubl
inc
leave
mov
pop
sub
jge
lahf
pop
mov
jmp
add
xchg
pop
fidivrl
daa
arpl
popa
jecxz
mov
call
mov
lret
add
add
and
push
sti
cmpsl
enter
add
add
xchg
sub
add
push
nop
xor
pop
neg
jmp
xor
jne
clc
sub
add
repz
xchg
ss
sti
push
outsl
cltd
inc
pop
mov
roll
movsb
insl
cmp
adc
inc
pop
pop
shrb
dec
in
sub
mov
adc
mov
mov
cmp
lods
push
sahf
gs
mov
sub
sbb
fldl
mov
enter
ja
clc
enter
std
shll
pusha
jecxz
int3
push
aas
xor
jmp
dec
adc
mov
outsl
add
cmp
mov
popa
lahf
pop
loopne
xchg
popaw
sub
xchg
mov
dec
pop
pop
mov
mov
or
adc
lds
jb
xchg
stos
mov
enter
fstpl
sbb
sbb
in
push
sbb
or
shll
mov
stos
and
loopne
adc
xchg
mov
add
add
mov
std
mov
dec
push
repnz
sub
add
fstpl
sbb
jno
jae
fdivl
lret
pop
and
jmp
pop
or
add
in
xor
les
push
lods
aam
dec
andb
mov
dec
mov
outsb
in
jmp
ds
mov
lcallw
cmpsb
test
test
cmpsb
pop
out
cmc
js
adc
jg
or
sbb
adcl
test
push
mov
lods
gs
mov
jge
ljmp
leave
lret
test
push
push
mov
iret
pop
lret
mov
lahf
cli
add
inc
inc
xor
mov
mov
push
xlat
dec
shlb
rcrl
add
cmp
test
fsts
mov
outsb
jno
jnp
imul
pop
push
jnp
adc
addr16
rol
cmpsl
mov
loop
cmp
mov
adc
loopne
mov
fldcw
test
or
xchg
popa
xor
daa
add
jle
add
lds
xchg
and
inc
and
lcall
add
add
loope
sti
into
ret
test
push
xlat
sub
pop
cmp
in
les
jle
out
rclb
in
lds
or
xchg
adc
jo
xor
mov
imul
cltd
jo
cmpsl
or
pop
addr16
xchg
rorl
lds
cltd
out
mov
add
or
mov
fwait
loope
rcll
inc
addr16
inc
mov
and
rcr
pop
jne
xor
ret
cmpsb
test
sub
aam
mov
adc
xchg
clc
dec
mov
addr16
out
push
call
inc
movsb
in
adc
rcr
xor
lret
push
lcall
pop
ficompl
decl
inc
ret
pop
xchg
out
faddl
fisubrl
push
add
pop
in
or
cmp
sbb
sbb
xlat
cwtl
mov
imul
add
add
add
xchg
ficomps
cmp
lahf
jo
and
add
add
adc
pop
and
into
cltd
cmp
daa
cwtl
cmpb
icebp
int3
jns
or
mov
inc
mov
fwait
adc
cmpb
out
jl
sahf
mov
mov
push
je
popa
ret
test
lods
mov
rclb
push
sub
jno
sti
xchg
jg
inc
lret
and
nop
sub
aaa
leave
test
orl
movsl
add
mov
dec
bound
jns
aaa
mov
xchg
scas
test
fildl
pop
pop
xor
aam
test
stos
sarl
loope
dec
mov
stc
adc
pop
xor
xor
or
int3
pushf
pop
mov
rcrb
lods
mov
test
push
fsubp
cmp
pop
push
xchg
popa
mov
testl
fsubrs
daa
jle
fstpl
ret
pop
stos
pop
scas
aas
mov
xor
add
arpl
ja
sub
add
nop
rolb
add
add
mov
push
pop
repnz
lods
aaa
sahf
cwtl
adc
push
testb
sbb
mov
shlb
pop
mov
cmpsl
test
add
push
imul
jns
push
lret
arpl
neg
jge
das
mov
inc
negl
jo
push
pop
mov
fdivl
lret
popf
push
adc
sbb
or
dec
push
xchg
mov
divb
inc
add
int
test
jae
bound
pop
adc
arpl
sahf
adc
scas
lcall
testl
test
pop
push
add
aaa
xlat
notb
enter
pop
cmp
jnp
nop
repnz
pop
push
pop
adc
repz
xchg
sbb
int3
pop
dec
sbb
mov
xchg
xchg
into
addb
add
lret
mov
or
cltd
xor
scas
lods
xor
add
sahf
sbb
cmp
or
xchg
ret
inc
in
add
ror
push
dec
push
inc
arpl
cmovl
repnz
subb
push
push
icebp
ljmp
icebp
lahf
dec
lock
mov
sbb
fmul
lret
data16
loop
dec
add
add
xchg
ficoms
lea
rcrl
inc
mov
cwtl
dec
popa
mov
pop
and
data16
test
imul
cli
ret
dec
hlt
mov
clc
fsubrl
mov
jecxz
scas
jge
cmp
jmp
dec
xchg
xlat
lret
pop
lock
sbb
mov
adc
xchg
filds
mov
xor
aas
aam
cmp
rclb
dec
mov
lods
jno
mov
hlt
pop
xchg
xchg
pop
stos
loopne
rcrl
loopne
hlt
fisubrl
fbstp
mov
fmul
xor
dec
hlt
sub
mov
sub
int3
into
jns
add
sub
sti
pop
jge
neg
hlt
add
loope
xor
add
push
stos
mov
or
int
outsl
es
fwait
adc
and
pop
inc
subb
loopne
cmp
fmul
pop
mul
xorl
or
pop
push
roll
add
ja
pop
mov
scas
xor
stc
jo
xchg
fwait
ret
jmp
jmp
cmp
jmp
pop
mov
mov
add
push
cltd
dec
sub
ficomps
inc
xchg
cs
add
pushf
mov
mov
push
out
rcrb
mov
mov
jnp
mov
lock
xlat
repz
iret
dec
sti
gs
jl
xchg
cltd
mov
mov
repz
mov
mov
jb
cmc
pop
shll
inc
repz
lcall
jnp
cwtl
divb
sbb
incb
jmp
aas
jp
out
int3
cmpsb
popl
mov
rcrb
mov
jbe
add
pusha
cltd
fsub
std
in
popf
in
stc
jmp
mov
xor
add
ja
sti
xchg
stc
cmp
cs
shrb
ja
add
xchg
insb
pop
mov
fidivrs
mov
push
bound
push
sub
xor
sahf
push
add
ret
mov
ror
loopne
mov
adc
arpl
test
imul
shrl
jnp
repz
add
imul
es
loopne
das
or
push
scas
roll
mov
in
cld
popf
or
lock
hlt
and
inc
rorb
mov
ret
or
idivl
loop
aam
popa
dec
pop
iret
mov
inc
sbb
mov
stos
lds
xchg
dec
push
pushf
sub
inc
cmpsl
sbb
mov
aad
sub
sbb
push
jb
or
rol
push
pop
or
xchg
pop
sbb
int
cld
add
imul
or
inc
fists
mov
sahf
cmpsb
inc
add
add
jp
jnp
sti
xchg
jle
jp
lods
sbb
lea
add
add
enter
cmp
into
ret
int3
jne
push
mov
ret
cmp
dec
bound
aaa
push
lret
adc
add
out
push
lock
and
dec
adc
push
iret
lds
xor
repz
lds
jp
sbb
test
add
mov
jo
in
cmp
xchg
pushf
xor
mov
mov
ficompl
sbb
dec
inc
and
sbb
pop
lcall
xchg
int3
fwait
dec
cltd
repnz
push
mov
outsl
notl
xchg
xchg
cmp
mov
cltd
test
sbb
fists
push
aas
and
mov
aam
insb
divl
popl
sbb
bound
fisubl
inc
xlat
sub
mov
addb
xor
jbe
xchg
xchg
sbb
cmp
hlt
pop
mov
mov
sbb
mov
sbb
clc
and
mov
push
sti
decb
mov
jp
xor
add
sahf
mov
das
sub
lock
out
push
or
jo
or
lar
popa
les
adc
aam
incl
and
mov
lea
imul
pop
sbb
xchg
aas
lea
fwait
jns
mov
test
out
sahf
ljmp
sub
mov
shlb
push
fs
xchg
rorb
cmpsl
pop
push
cmpb
hlt
loop
shll
pop
movsl
aad
js
inc
push
and
pop
es
sub
inc
mov
cmpsl
add
xor
adc
aaa
mov
xchg
out
lahf
mov
mov
inc
fsts
int
jns
insl
insb
repnz
cmp
inc
xchg
ja
fsubrl
loope
popf
jbe
cwtl
push
fstps
pop
clc
and
repnz
test
imul
push
lahf
or
popf
stos
std
pop
pop
sarb
and
add
push
ret
cmp
xor
hlt
movsl
loop
mov
xor
add
cmp
dec
leave
dec
jne
mov
jmp
adc
sahf
lgs
mov
arpl
roll
iret
xchg
fsubrp
lret
push
bound
imul
push
push
test
aaa
sub
shll
in
push
or
mov
cld
daa
frstor
cmp
and
mov
mov
popf
cmp
fimull
xor
lcall
stos
call
cmp
jnp
mov
data16
mov
cmp
insl
jae
movsl
ljmp
cltd
and
loope
jp
fisubs
dec
popf
aaa
insb
arpl
insl
jle
xor
leave
add
xor
mov
gs
filds
iret
xor
fiadds
stos
xchg
call
ss
cmc
cmpsb
pop
out
in
pusha
sub
adc
and
test
sub
out
stos
or
insl
sbb
mov
cli
mov
or
xor
sub
adc
add
incb
ljmp
pushf
ljmp
add
loop
test
lods
mov
stos
icebp
cmp
roll
sahf
and
cmpb
cmpsb
mov
cmp
mov
adc
and
push
push
data16
xchg
rcr
fidivs
orb
cmp
fs
cmp
stos
ret
push
test
fstps
inc
out
inc
cmpb
jecxz
pusha
lock
jbe
jne
divb
enter
int3
fimull
dec
pop
mov
repz
nop
cmp
loopne
jae
jae
and
xchg
scas
or
xor
adc
push
mov
imull
rorl
out
add
push
jl
inc
iret
imul
test
xchg
pop
idivb
push
popf
pop
sbb
es
jl
xor
or
lcall
pop
cmp
cltd
xchg
and
add
or
mov
mov
fiadds
sub
insb
cmp
mov
push
jg
insb
sub
shll
mov
add
add
rclb
nop
lcall
aaa
add
add
ficompl
sub
xor
cmpsb
aam
sbb
sbb
in
pop
add
push
lods
sti
fwait
dec
clc
lea
arpl
aam
mov
enter
shlb
stos
outsl
leave
cmpsb
sbb
scas
loop
pop
lahf
dec
and
pop
fimuls
leave
dec
hlt
flds
mov
mov
popf
mov
cwtl
xchg
dec
sahf
and
sbb
mov
pushf
add
mov
xchg
adc
sbb
or
xchg
gs
imulb
dec
fildll
mov
jns
lea
dec
or
fsts
pop
jbe
xchg
xchg
push
mov
or
jmp
cmp
pop
imul
sbb
fwait
mov
push
scas
xorl
mov
dec
inc
pop
in
mov
push
inc
pop
lds
loop
push
pop
inc
scas
add
and
fldt
jbe
int3
test
ja
jle
cmp
test
add
add
jbe
idivl
or
or
aad
add
add
push
dec
test
inc
stos
cmp
les
ret
ljmp
jp
xchg
push
cmp
aas
fmuls
xchg
adc
push
shl
mov
addr16
push
shll
mov
adc
movntps
push
stos
inc
push
xorl
pop
les
add
xchg
ret
mov
xchg
or
popa
mov
push
roll
xchg
xchg
jbe
sbb
sub
add
and
cmpsb
push
mov
cmpsl
imulb
add
hlt
mov
push
adc
mov
in
ja
jmp
cld
leave
inc
and
xor
in
jle
lret
xor
adc
sti
and
pop
mov
clc
push
les
mov
pop
xorl
jae
pop
pop
inc
out
stos
inc
xlat
dec
adc
push
mov
and
ret
jp
jae
xchg
dec
mov
stc
push
sarl
adc
mov
fmull
mov
add
add
outsb
sub
stos
fs
jmp
leave
aas
push
xor
fidivrl
add
add
out
rcll
mov
lea
sub
sub
adc
pop
jg
push
mov
fldl
push
sbb
clc
jmp
or
sbb
das
pop
push
rclb
int3
push
test
int3
mov
out
sbb
fdiv
test
cli
daa
fsubrs
fistpl
je
or
xchg
xor
sti
das
cs
or
xchg
jp
mov
jg
int3
cmp
inc
jnp
rcl
pop
jmp
lds
inc
incl
pop
or
lcall
push
xor
imul
pop
mov
clc
or
test
repz
test
or
icebp
push
fidivrs
jle
xor
push
fsub
out
hlt
fsts
pop
push
ja
das
mov
adc
dec
rcl
xor
aad
inc
inc
inc
movsb
cmc
jge
and
vxorps
cmp
cmpsl
xchg
sub
xchg
lds
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
lcall
add
xchg
ret
test
jo
sub
mov
popf
mov
mov
mov
mulb
ja
out
fldcw
dec
push
xchg
fistpl
movsl
inc
and
push
inc
fwait
push
in
add
mov
ja
cltd
xchg
push
loop
pushf
or
dec
popa
push
filds
mov
cltd
loope
mov
lods
xor
lock
outsb
jmp
loope
dec
adc
jle
mul
mov
cmpsb
add
out
jns
call
dec
xchg
fcoms
xchg
mov
adc
test
jae
jbe
dec
or
sub
fsubs
ffreep
mov
mov
xchg
data16
jb
adc
xchg
cltd
push
jp
das
mov
test
sub
push
sub
mov
or
sub
sahf
stc
lods
cmp
fdiv
cmpsb
js
movd
sbb
out
and
xchg
in
sbb
outsl
push
roll
mov
sbb
jnp
jnp
cmp
movsb
push
sbb
jnp
mov
add
stos
cmp
in
nop
ss
test
adc
and
aam
mov
cmp
cwtl
lret
incl
adc
popa
mov
pop
jecxz
testb
ds
lods
es
push
jecxz
jbe
inc
inc
xor
adc
popf
mov
les
enter
jmp
xchg
jno
fisubl
arpl
daa
cmp
test
loopne
xor
add
daa
ljmp
inc
fildl
mov
xchg
pop
sbb
jle
mov
inc
sub
enter
stos
loopne
mov
jl
out
dec
cmc
inc
mov
pushf
aas
inc
xchg
pop
rol
insw
repz
sub
movsl
dec
xlat
cs
pop
das
and
add
mov
and
pop
dec
bound
pop
lods
xor
je
lret
mov
popf
xor
add
pop
fnstenv
out
cmp
ja
movsl
dec
add
in
ljmp
mov
sbb
mov
out
and
outsl
lret
mov
out
jmp
jle
shr
cmp
add
inc
sahf
mov
or
aam
push
dec
or
std
cmc
je
cmp
ljmp
sub
sti
mov
xchg
icebp
and
xor
mov
cltd
jmp
pop
push
ret
mov
adcl
push
mov
xchg
popa
aas
out
jne
sbb
xor
addr16
jmp
repz
mov
or
movsb
mov
xchg
add
lahf
pushf
jbe
movsl
mov
sbb
xor
mov
out
add
pop
and
popa
jmp
sbb
les
pop
and
and
cmpsb
loope
mov
dec
mov
loope
sbb
mov
push
rclb
in
sbb
cmpsl
lock
stc
scas
and
sub
mov
incl
add
xor
sbb
push
xor
mov
stc
bound
in
push
imul
xchg
loope
daa
jp
dec
mov
jns
add
and
das
cmp
lods
repz
mov
mov
cmp
add
out
les
xor
xchg
imul
and
jl
stos
push
sub
jne
sub
jmp
in
pushf
pop
mov
jne
cmpsl
enter
fbstp
pop
jno
scas
dec
std
fiaddl
sub
fwait
add
sti
xchg
sbb
pop
and
in
dec
addr16
inc
aam
push
out
lea
cmp
jno
scas
and
scas
cmpsl
mov
mov
ja
push
cmp
pop
popf
mov
mov
pop
ret
pop
dec
or
dec
cmpsl
cmp
cli
mov
push
inc
stc
fwait
lcall
xchg
rolb
and
mov
int
add
rorl
test
scas
lcall
ret
stos
add
out
popa
mov
bound
mov
into
in
dec
mov
sbb
out
xchg
in
mov
adc
mov
sbb
sub
es
bound
adc
add
aas
daa
push
cld
push
std
jmp
dec
push
and
repz
add
nop
add
lods
repz
mov
add
xor
ss
or
fwait
scas
sbb
data16
test
and
cmpsl
or
add
orb
ret
scas
insb
adc
mov
pop
adc
cmc
js
adc
in
scas
stos
xor
xor
fisttps
iret
xor
or
add
les
or
mov
fs
stos
testb
stc
rorl
or
pop
sbb
add
jo
add
or
fildl
dec
jp
and
outsl
mov
lock
cmpsl
xor
leave
mov
cmp
mov
insb
popf
and
cmp
push
add
adc
dec
xchg
xchg
or
sbb
or
pop
test
cmp
cmp
jnp
stos
outsl
test
cmp
xor
sbb
fsubrl
inc
outsb
sub
fldl
add
dec
push
add
sbb
dec
push
out
aad
dec
daa
outsl
jge
aas
add
add
jmp
xor
jae
inc
mov
or
sub
arpl
pop
ret
mov
add
fmull
cmp
push
flds
test
xchg
mov
les
xchg
daa
outsb
dec
dec
push
inc
dec
mov
leave
jmp
mov
xor
ficompl
mov
orl
sbb
push
int
cmp
ret
jns
pop
fdiv
dec
mov
pushf
mov
sbb
call
test
rcl
insl
xchg
push
xchg
test
fnstsw
adcl
mov
inc
mov
inc
test
enter
inc
mov
clc
loop
insl
fstps
xchg
sub
xor
fildl
or
xchg
icebp
outsl
shll
js
sbb
int3
fsubs
dec
xor
ret
and
jecxz
cltd
jo
dec
adc
bound
add
idivl
or
cmpsb
lea
inc
add
add
or
dec
cmpl
cmp
out
fsubr
inc
insb
mov
insl
mov
push
aaa
inc
jmp
ret
xlat
push
insb
test
sub
int3
jge
adc
je
imull
adc
int3
popf
sub
iret
cmp
pop
xor
adc
xchg
pop
add
mov
push
jp
xchg
adc
dec
mov
clc
dec
cmp
xchg
mov
push
push
jb
cld
dec
and
xor
and
jne
mov
test
push
movsb
les
lahf
mov
dec
adcl
sbb
inc
ss
imul
sbb
rcr
sub
leave
mov
movsl
xor
gs
dec
iret
mov
mov
inc
aam
sub
sbb
into
add
inc
jbe
pop
test
hlt
in
adc
jp
pop
sbb
dec
lea
gs
add
add
jg
xchg
orl
lahf
add
add
mov
in
addr16
fnstsw
rcll
cli
mov
pop
push
add
xor
or
jge
push
and
sbb
pop
dec
mov
test
les
sbb
pop
les
lock
pop
jp
pop
pop
repz
dec
inc
pop
lock
jecxz
jnp
pushf
mov
jg,pn
xchg
sub
or
arpl
push
ljmp
sbb
fsubrs
xchg
paddw
stos
std
pop
in
adc
mov
sub
push
dec
or
cmp
js
lods
add
mov
fbld
jecxz
jbe
pushf
push
jae
dec
cmp
lods
das
int
jge
or
cwtl
and
call
sub
testb
mov
cltd
add
xor
dec
dec
push
adc
test
mov
jae
sbb
lock
adc
cs
adc
addr16
add
and
dec
lret
jmp
imul
aaa
je
jns
out
pop
inc
add
add
ja
mov
jle
add
sub
cwtl
cmp
cmpsb
popf
and
pop
pusha
outsb
outsb
mulps
shrb
mov
dec
outsl
xchg
xchg
or
cmpsb
add
sti
xchg
aam
or
shlb
sarl
out
sbb
mov
mov
cmp
sub
mov
lds
and
shrb
stos
nop
mov
std
lahf
iret
stos
imul
jp
fs
xchg
adc
sbb
pop
sub
leave
insb
mov
push
dec
lcall
cmpsl
cltd
xchg
lcall
inc
sub
jae
jp
ret
pushl
andl
jg
or
addl
call
shll
insl
mov
xor
xor
cmpsb
jge
xchg
nop
adc
or
sbb
out
fwait
int3
xchg
in
data16
jns
scas
gs
mov
out
jo
cmc
mov
lcall
lds
cmc
cwtl
xchg
push
sub
inc
add
add
xchg
xchg
xor
negb
loope
imull
and
push
and
and
mov
mov
mov
cld
aas
dec
ret
inc
fimuls
movsl
shlb
xchg
cmp
outsl
aad
dec
inc
test
adc
xor
dec
cwtl
fiadds
mov
fwait
inc
ffreep
xor
flds
push
xchg
mov
sub
cmp
and
jno
test
cmpb
push
fiadds
mov
or
mov
jg
xchg
sti
outsl
jg
ss
or
cltd
test
jg
inc
fbstp
jb
cmp
movsl
mov
inc
lret
loop
lods
loopne
xor
lds
push
pop
fstps
pop
stos
add
push
sbb
loop
insb
jae
lret
xchg
jmp
xchg
and
pop
mov
cmp
dec
cmc
adcl
in
inc
and
into
cwtl
mov
cmp
addr16
stc
data16
add
jns
xor
jg
mov
add
add
xor
aad
es
clc
cmp
cmc
mov
jne
inc
inc
pop
dec
adc
add
fidivrs
imul
pop
mov
and
je
out
jo
cmpsb
cmovne
ja
sub
mov
cmpsl
mov
in
repnz
cmpsb
mov
icebp
movsl
js
icebp
mov
mov
mov
mov
outsb
dec
or
mov
pop
fs
sarl
insb
fists
mov
or
ret
cmp
xchg
dec
or
cmp
pushl
push
repz
xor
ret
test
mov
test
jp
inc
popa
mov
adc
mov
push
addr16
jge
xchg
sub
mov
lock
das
inc
in
xchg
or
push
pop
jmp
or
insb
orl
push
test
inc
sub
imul
add
add
ret
jg
decl
rol
lods
lret
push
inc
add
add
repnz
imulb
test
test
xchg
rcll
cmp
das
xchg
inc
cmpsb
test
xor
xchg
cmpsb
cmp
xchg
mov
popa
movsl
mov
into
lock
out
jbe
jl
ret
scas
dec
fdivrl
fisubrs
xor
sub
mov
in
xchg
jnp
xchg
rorl
sbbb
mov
into
xor
dec
stos
or
xchg
and
sub
jmp
or
inc
fisttps
mov
fucomip
jb
add
xor
mov
mov
lcall
loope
mov
xor
sub
lea
xchg
jp
mov
sub
jg
adc
sub
out
lahf
shr
xchg
jne
push
jb
inc
jle
xor
dec
cmp
aaa
add
inc
scas
xorl
in
lret
inc
fwait
mov
add
adc
mov
out
aad
inc
jge
sbb
add
incb
xorl
insb
fidivs
rorb
sub
cmp
pop
add
sahf
sti
push
mov
push
mov
xchg
cmp
fldt
cmp
xchg
pop
mov
cmp
test
insb
mov
das
fiaddl
loopne
mov
sbb
fisttpl
cltd
repnz
divl
mov
mov
sbb
lahf
push
das
dec
andb
aaa
mov
scas
push
pusha
xchg
sub
lds
cmp
dec
adc
push
xor
adc
fwait
ret
push
xor
outsb
or
dec
mov
and
sti
adcb
xchg
and
into
ficomps
fistpl
dec
push
ds
fsubrl
adc
push
push
call
sub
cmp
push
xor
pop
xchg
aas
ret
xchg
lock
clc
test
ficoml
jge
xchg
push
dec
jl
in
lods
rolb
dec
mov
xchg
cmc
js
add
add
hlt
gs
dec
adc
popa
aam
dec
add
add
testb
adc
inc
shl
jne
scas
push
sbb
pop
lods
adc
pop
stc
rcll
jge
cmc
jns
insb
xchg
jle
pop
out
mov
jns
mov
scas
ds
out
in
sti
add
add
clc
imul
inc
and
pop
adc
mov
stos
xor
imull
fs
push
fwait
mov
inc
inc
ljmp
mov
push
push
xchg
fidivrl
jnp
lcall
dec
aaa
into
push
inc
les
jl
rorb
jne
mov
ja
mov
jmp
mov
scas
mov
push
jmp
inc
aaa
ret
xor
jbe
mov
ret
incl
fisttpl
adc
sub
and
aad
push
or
mov
mov
pop
sbb
pop
sbb
mov
in
mov
jmp
sub
add
add
aas
gs
pop
repnz
dec
add
add
xchg
loope
filds
or
or
xor
movsl
adc
jae
adc
add
enter
into
pop
ds
add
mov
adc
loop
add
adc
lock
mov
sbb
add
mov
in
cmp
jnp
sub
loope
sbb
insl
add
mov
jl
sbb
sbb
jp
out
pop
cmp
div
mov
and
mov
or
clc
sti
mov
or
dec
fsubr
xor
add
or
sti
cmp
mov
pushf
dec
aam
fwait
stc
mov
or
lock
cli
push
testl
dec
pusha
movsb
js
loop
rol
pop
std
ret
and
enter
test
aas
arpl
das
or
push
stos
lret
inc
xchg
cmc
fistps
jns
mov
push
mov
adc
add
mov
out
fisttpll
lock
add
add
fwait
mov
shrl
lahf
xchg
ja
fldcw
outsl
and
adc
mov
imul
mov
iret
mov
sbb
xchg
shl
xor
sarl
ret
les
mov
jbe
addb
imul
in
mov
inc
mov
sbb
cld
jge
adc
add
inc
inc
sarl
cmp
icebp
sub
pop
pusha
aam
repnz
test
fbstp
push
cmpsb
addr16
adc
mov
mov
je
popf
adc
inc
pop
out
inc
jle
jmp
jns
das
and
ja
testb
pop
js
jmp
inc
imull
xchg
mov
inc
adc
or
shlb
adc
push
dec
cmpsl
jg
jns
pop
fwait
cmp
int
push
cmp
data16
enter
push
aad
fiadds
sub
decb
insl
mov
cmp
add
cld
mov
adc
sbb
inc
cli
jno
rolb
add
fildll
mov
ljmp
add
add
push
cmp
insb
mov
repnz
add
push
or
test
inc
jo
stc
ljmp
inc
adc
cmp
shrl
repnz
xor
push
jae
mov
mov
jnp
dec
lock
inc
xor
mov
dec
sbb
fcoml
dec
ss
rolb
jbe,pn
jle
lock
and
pop
aaa
mov
or
mov
cmp
enter
sbb
iret
outsb
adc
rclb
sbbl
inc
lods
push
ja
cmp
incl
lret
rclb
push
jmp
imulb
std
dec
ljmp
jge
shl
cmp
pop
sbb
inc
jge
xchg
sbb
cmp
mov
mov
pop
mov
icebp
and
xchg
xchg
aam
or
mov
lret
pop
xchg
fcomip
das
pop
mov
add
add
jmp
out
aas
jo
sahf
jb
js
xchg
add
add
sbb
sti
inc
push
cmp
cli
mov
ror
test
ret
pop
sub
mov
stos
add
inc
push
push
or
lret
jp
imul
cmp
fistpl
pop
sbb
cmp
fiadds
fwait
lods
loopne
push
dec
add
ret
ljmp
hlt
into
jg
push
and
jmp
shll
xchg
aas
jns
xchg
dec
in
fnsetpm(287
mov
sub
sub
add
lds
mov
add
aad
xor
sub
xor
xchg
les
scas
cs
pop
adc
das
sarb
icebp
pop
adc
daa
pop
out
decb
outsl
sbb
add
lahf
adcl
clc
inc
dec
dec
addr16
fstpl
lahf
imul
imul
lock
jno
lock
cmp
imul
lahf
fdivs
mov
pop
js
add
add
imul
out
mov
mov
movsl
idivb
dec
add
add
jle
mov
jb
push
xlat
fucomip
or
iret
sbb
cld
mov
jbe
dec
push
test
sub
inc
sbb
push
push
jmp
mov
adc
and
cmp
xor
lock
movsb
iret
sub
in
gs
sub
adc
je
mov
dec
push
mov
add
leave
add
xchg
pop
add
roll
fdivrs
mov
jb
int
lret
cwtl
sti
inc
mov
dec
xchg
cmp
fbld
cmp
sub
ja
or
push
jp
nop
push
inc
pop
shll
jg
jo
mov
mov
add
aad
outsb
inc
rclb
mov
jb
outsb
mov
cmp
outsl
test
pop
add
mov
jmp
test
push
push
pop
jl
mov
lock
lahf
add
add
add
dec
stc
mov
ljmp
ds
add
add
int3
jmp
rorl
jne
jp
add
jbe
and
push
dec
mov
fcoms
dec
sbb
adcb
cli
push
sbb
fadds
cmc
outsb
imul
xchg
test
jp
imul
jnp
mov
xchg
dec
lret
inc
and
aas
xor
std
xor
inc
subl
jmp
sub
aaa
bound
lea
ret
cmc
cs
add
xlat
add
cmc
xor
push
push
loope
stos
mov
jp
mov
dec
dec
movsl
inc
fiaddl
lds
dec
loope
inc
mov
sub
cmpsb
mov
or
sbb
lods
xorb
push
xor
mov
rorb
mov
clc
xor
lock
stos
cld
shl
cmpl
cmpsl
push
xor
popa
adc
imul
sbb
xor
push
mov
xchg
cmp
jle
jg
cld
lcall
adc
dec
add
add
shlb
lods
mov
outsb
mov
out
sbb
xchg
jecxz
xchg
lods
jae
lea
mov
out
mov
sub
sbb
pop
pop
cmp
mov
loope
imulb
insl
insl
inc
rcrl
in
sub
cli
test
in
and
dec
jne
call
nop
out
mov
or
lahf
mov
std
mov
xchg
push
jb
jbe
sub
jecxz
mov
dec
imul
mov
vpunpckhwd
in
mov
pop
and
fwait
pop
jmp
in
fidivrs
add
mov
add
loopne
test
mov
mov
push
js
leave
sbbb
lcall
sbb
adc
insl
frstor
add
sub
mov
pop
mov
sbb
and
enter
add
add
xchg
mov
pop
jmp
push
add
add
cmpsl
cmp
jg
adc
cmpsl
imul
incl
mov
outsl
xchg
xchg
outsb
imul
push
cmp
inc
adc
xchg
push
or
sahf
jecxz
push
mov
rclb
rclb
or
pop
sti
lret
popa
xchg
xor
or
rclb
add
fst
inc
add
cs
mul
int3
cwtl
fs
push
lcall
pop
push
jmp
mov
cs
add
js
enter
inc
lcall
aad
dec
push
mov
cmp
xor
push
xchg
add
and
lahf
sub
xor
lods
mov
aam
sbb
and
jp
std
cld
add
cmpsl
push
or
ret
cltd
jb
jnp
aas
pop
and
pushf
les
pusha
addr16
cmp
out
jno
std
ret
movsl
pop
adc
adc
or
sbb
jns
pushf
test
add
or
mov
and
adc
dec
push
add
add
scas
test
rolb
fisubl
loope
jmp
outsl
imul
push
scas
push
outsl
push
add
adc
xor
loopne
sbb
aam
mov
pop
inc
pop
xor
xchg
and
lret
lods
ljmp
inc
shll
xor
pop
sbb
mov
mov
mov
movsl
inc
fnstcw
lret
loopne
ljmp
lds
mov
ret
fidivrs
lods
mov
ficoms
data16
in
out
addr16
ds
ss
dec
lret
or
insb
mov
and
aaa
pop
push
push
dec
cltd
or
push
push
cmp
hlt
and
pushf
push
push
sub
push
push
adc
iret
stc
enter
xchg
inc
imul
and
xchg
aad
jo
jle
cmp
mov
and
vdivps
jnp
call
daa
mov
in
adc
lret
add
add
sub
cmp
ret
or
ds
add
add
xchg
push
stos
test
jp
sub
fdivrp
testl
das
gs
push
mov
jno
add
push
push
int3
mov
mov
add
cs
ljmp
or
mov
cwtl
sbb
fldl
les
push
jnp
jae
add
adc
mov
mov
and
jae
xchg
pusha
movsb
jmp
mov
insb
pusha
xor
lods
lahf
jno
push
xchg
lahf
jg
fiaddl
cmp
testl
aam
test
mov
xchg
sbb
sbb
push
mov
cmpsb
mov
sbb
test
mov
or
adc
xchg
leave
mov
sub
cld
and
imul
push
subb
daa
in
and
fcmovu
arpl
incl
mov
jge
cs
clc
sub
mov
and
sbb
add
push
shll
out
pop
pop
pushf
push
mov
add
test
das
and
add
push
jp
in
inc
in
lods
and
and
mov
jns
inc
fidivrs
je
mov
cmp
sarb
sub
mov
pop
mov
mov
js
jmp
lods
add
fisubrl
jns
mov
pop
or
rep
adc
imul
dec
fldl
rcrb
sub
sub
sub
out
lock
fs
inc
and
in
xor
sysret
cmpsb
es
js
stc
shlb
add
pop
and
insb
cwtl
mov
dec
mov
add
xor
add
adc
sbb
mov
sbb
mov
pop
dec
dec
int
push
xor
mov
push
rcrb
cmp
jb
cwtl
loopne
push
xor
and
mov
add
stos
push
lcall
hlt
mov
fisubrs
add
and
xor
adcl
rcrb
dec
sar
sbb
push
stc
adc
scas
jns
les
hlt
mov
out
dec
mov
xor
jns
popf
mov
lods
mov
lret
out
cmp
push
xchg
add
or
icebp
sbb
sub
cmp
add
mov
mov
ljmp
and
bound
sub
xchg
or
popfw
in
sub
aas
pop
xorl
sub
xorb
in
adc
jmp
cmp
loop
arpl
push
inc
pop
popf
sub
sbb
mov
mov
int
movsl
movb
mov
push
hlt
cmp
stc
xchg
rcrl
icebp
sub
sub
push
pop
fdivr
sub
stc
bound
mov
jge
push
lret
aad
cmp
dec
sbb
bound
sahf
movsl
and
adc
xchg
dec
add
call
add
bound
imul
pop
pop
test
add
add
pop
lcall
cs
pop
adc
push
sbb
aad
mov
sub
jno
sub
sbb
iret
jecxz
pop
enter
and
xor
gs
mov
fs
lahf
sub
mov
jbe
cld
jle
jae
xor
push
incl
fidivrs
clc
jmp
jo
shll
out
test
pop
xor
es
cmp
hlt
cli
inc
jns
enter
cmp
pop
push
dec
mov
pusha
fs
xor
je
adc
loope
mov
dec
dec
int
push
in
jmp
sbb
test
fimull
fmul
mov
pop
add
insb
or
in
jmp
push
jg
adc
rcrb
and
scas
pop
sbb
inc
les
cmc
aam
xlat
std
jbe
pop
popf
lcall
push
cltd
js
adc
out
jl
push
push
cs
popl
jns
xor
int3
xchg
add
add
fwait
cmp
stos
sarb
push
add
add
cmp
push
add
lret
in
xchg
and
je
cmp
adc
in
pop
jbe
push
add
incb
dec
es
cmp
fnstcw
jae
lret
jne
out
jnp
leave
xor
test
test
mov
inc
mov
add
pop
stos
mov
cmp
inc
pop
aas
jo
sbb
repnz
lods
xor
cmp
dec
dec
out
xor
aas
pop
scas
cmpsl
insl
inc
js
fsubrl
add
mov
icebp
jl
xchg
inc
popa
add
push
shl
push
in
pop
outsb
xor
movsl
ja
xchg
in
shrb
cmc
lock
scas
dec
ficoml
iret
xorb
sti
iret
stc
lcall
xor
add
xor
jo
xor
mov
aad
arpl
inc
sub
shr
repz
lret
add
push
mov
and
movsl
pop
xchg
outsl
iret
sahf
push
mov
ja
lods
aad
sbb
add
add
clc
mov
and
hlt
add
push
add
add
das
repnz
and
aas
xchg
subl
cli
je
push
test
insb
loopne
stc
std
mov
push
pushf
sub
cmp
push
inc
fnsave
sub
pop
pop
js
pop
sub
and
jge
inc
addr16
jmp
call
orb
pop
jns
lock
dec
loopne
cmp
cltd
in
add
cmpl
push
in
mov
fwait
mov
fimull
gs
jb
sahf
pop
cmp
cmpsb
repz
nop
das
ljmp
mov
and
das
xlat
lret
cli
mov
jg
data16
pop
outsb
cmp
bound
iret
adc
add
mov
sub
cmp
in
adc
pop
xor
add
aas
cmp
pop
and
jle
xor
sbb
xor
and
repz
sub
sbb
xchg
fidivrl
lret
lahf
lahf
shlb
scas
inc
cmp
fisubs
add
add
shr
mov
lahf
rcl
push
jo
add
add
mov
dec
out
xchg
xchg
in
push
aad
out
cmp
je
ss
adc
ja
mov
stos
sbb
and
push
mov
sub
hlt
jo
jmp
jp
sub
mov
pop
push
shrl
sbb
and
mov
xor
xor
lea
pusha
imul
in
mov
out
inc
test
adc
and
push
cmp
xchg
mov
fmull
jno
in
loope
shlb
aas
jne
xchg
push
cmpsl
repz
clc
sbb
cld
lcall
sbb
out
pop
jmp
push
jp
pop
lock
inc
mov
cmp
xor
dec
sbb
neg
and
or
sarb
fiadds
jp
in
sub
in
push
icebp
xor
sarl
pop
add
cmp
inc
add
add
mov
lds
aad
sbbl
add
add
lock
fwait
insl
mov
movsb
int
mov
add
cltd
addl
scas
jg
in
repz
push
cltd
jg
mov
sub
mov
lds
decl
addr16
adc
lret
int3
mov
jecxz
pop
dec
push
shl
mov
cmpsl
insb
mulb
fiaddl
daa
aas
fisttps
sub
pop
lea
lcall
leave
push
sbb
aam
data16
out
jnp
cs
enter
adc
test
xor
push
push
inc
arpl
pop
jno
mov
add
dec
lea
sbb
cltd
fsubl
lret
or
out
lods
icebp
pop
mov
push
into
movsl
sbb
dec
jnp
fnstenv
adc
adc
je
cmp
mov
jl
push
push
xchg
sahf
loop
mov
sti
mov
or
or
cmc
dec
inc
fwait
inc
mov
pop
dec
mov
mov
add
mov
and
das
cmp
pusha
aaa
cmc
add
jp
add
add
out
pop
stos
push
lcall
add
pushf
fsubs
and
mov
jl
sbb
testl
push
aam
pusha
aam
and
fmuls
call
faddp
inc
mov
inc
notb
xor
inc
rol
push
pop
clc
aad
mov
mov
sbb
push
icebp
call
sub
movsl
adc
fistl
gs
xor
xor
pop
lea
jmp
pop
sub
ja
pop
pop
add
mov
mov
mov
in
or
cmp
sub
mov
push
push
jp
lahf
add
incl
inc
and
push
inc
out
std
test
jecxz
imul
xchg
pop
pop
dec
rorb
xor
push
jno
or
mov
or
add
fsubl
mov
ja
mov
out
pop
in
jg
add
add
icebp
sub
jge
pop
and
jge
data16
out
jae
out
jns
leave
sti
fwait
outsl
mov
pop
cwtl
imul
stos
lods
stos
xchg
andb
int
jno
push
out
inc
xchg
loopne
push
imul
sahf
cltd
inc
xchg
lret
outsl
sub
inc
mov
add
idiv
jns
jge
cltd
test
insl
mov
cld
pop
mov
test
lahf
out
fdiv
mov
not
and
and
mov
fcompl
icebp
into
orb
xchg
xor
lods
push
and
add
je
mul
repz
mov
and
push
pusha
sub
jge
push
jmp
pop
push
jmp
shll
pop
lds
fisttps
xchg
and
jne
aaa
mov
addr16
mov
addl
add
adc
inc
fwait
pop
sbbl
push
shlb
fbstp
scas
adc
lahf
xlat
out
cld
pop
sahf
nop
mov
add
mov
push
test
mov
push
mov
fstps
cmpsb
push
adcb
inc
jecxz
xchg
sbb
pusha
lods
lret
mov
repz
stos
dec
sub
cmc
cwtl
push
fstpl
not
imul
cmp
out
and
pop
clc
xchg
mov
in
jo
add
es
ret
stc
bound
rorb
hlt
xsha256
cmpsb
adc
mov
shl
or
mov
fmull
push
fsubs
pop
mov
or
lea
inc
add
push
je
jo
pop
adc
int
outsb
mov
lret
cs
cvtps2pi
cld
xor
xchg
enter
xor
out
cmp
outsl
movsb
inc
sbb
adc
pop
mov
mov
mov
loop
mov
daa
popa
stos
pop
mov
repnz
mov
enter
cmpsl
push
mov
jecxz
add
add
mov
mov
in
dec
and
add
xor
sti
push
sbb
out
mov
inc
sbb
mov
or
pop
push
in
push
sbb
xchg
adc
dec
lds
push
ret
pop
mov
scas
mov
aaa
rcrl
mov
sub
jle
adc
jo
add
lods
insb
add
dec
jl
cmp
sahf
inc
cli
fcmovne
pop
cmpsb
sbbl
xor
push
push
int
jns
push
pop
out
mov
inc
fsubs
outsl
jp
add
int3
loopne
push
stc
jo
test
inc
sbb
jle
testb
icebp
cmp
outsl
inc
cmc
in
test
lea
loop
cmpl
int3
lods
jns
xor
cmp
push
test
pop
fwait
cltd
jmp
sub
sbb
xchg
mov
test
push
mov
adc
ret
lret
inc
jg
and
add
out
into
push
push
inc
lahf
mov
mov
add
rcrb
addr16
bound
pop
mov
in
lods
cmp
mov
scas
jecxz
stos
or
dec
jnp
cwtl
xor
add
out
cwtl
jo
mov
mov
sub
add
fisttpll
push
sarb
lock
inc
xor
movsb
test
cmp
cmpb
imul
fs
sub
test
xor
jp
cltd
jmp
dec
stos
sarl
add
aaa
jge
and
mov
pop
mov
xor
jns
mov
xchg
jl
shrb
arpl
in
jg
xor
push
add
push
dec
push
xchg
pop
mov
or
scas
je
aad
ficomps
dec
das
adc
hlt
adc
inc
stc
ret
scas
test
add
sbb
mov
xor
loopne
pop
fwait
enter
xchg
sarb
inc
sbb
scas
ss
mov
add
add
xchg
inc
shl
xlat
mov
jg
or
xchg
pop
add
add
idivl
bound
push
addb
xchg
daa
or
mov
inc
cli
sub
pop
mov
imul
stos
xor
push
sub
dec
pop
jb
imul
cmp
cld
lock
cwtl
in
lcall
cwtl
arpl
pop
dec
enter
test
push
dec
jnp
add
call
jb
xchg
aas
pop
aas
repnz
push
mov
in
xor
jne
insl
ficoms
ds
std
test
adc
popa
rclb
or
call
idivb
cwtl
repz
popf
fnsave
xor
xor
dec
cmp
out
sbb
mov
out
add
inc
pop
cli
pop
dec
inc
jge
clc
into
pusha
inc
push
mov
popa
mov
mov
jmp
in
adc
add
add
lahf
pop
cmpsl
jne
mov
jmp
add
add
ja
inc
out
mov
cli
dec
push
mov
test
data16
in
or
popa
xchg
into
insl
fnsave
ljmp
add
fwait
xchg
sbb
xor
repnz
cwtl
pop
xor
icebp
xor
and
push
inc
pop
out
in
add
orb
xchg
mov
push
mov
shrl
sbb
roll
mov
inc
add
adc
sub
roll
cmp
and
push
jno
push
adc
dec
dec
mov
mov
imul
cltd
cmp
sub
adc
inc
fdivrs
mov
ret
cmp
dec
aad
mov
in
xor
add
inc
cmp
cltd
lcall
adc
xchg
mov
add
pop
xchg
lcall
xorl
add
sahf
pop
testl
cmp
clc
popf
popa
add
add
cmp
xchg
ret
push
cli
mov
call
inc
sbb
and
pop
adc
sbb
xchg
std
dec
push
push
add
push
fnstcw
sbb
into
into
and
cmpsb
mov
or
test
fmul
cmp
and
mov
xlat
push
adc
stos
in
negl
imul
in
ror
insb
aas
dec
jno
iret
cmp
adc
mov
push
mov
sbb
dec
pop
and
pop
ss
cmp
jmp
xchg
cltd
cmp
pop
sti
fstl
push
xchg
cmpsb
mov
inc
rcrl
dec
xchg
mov
les
sub
adc
sub
repz
add
jg
daa
and
jns
xor
icebp
fdivrl
lods
icebp
cmc
sbb
sub
in
jmp
sub
or
test
dec
xchg
data16
std
ret
push
cltd
outsl
sub
inc
pop
mov
fstps
mov
add
jo
loop
mov
mov
call
aam
rcrb
sub
lret
mov
mov
test
fisubl
dec
xchg
cwtl
push
inc
or
push
xor
out
mov
ret
push
lock
clc
xor
hlt
cmp
pop
mov
cli
push
pop
fwait
test
inc
arpl
lahf
cmp
cmpsl
push
aam
push
and
js
add
sbb
jecxz
sub
inc
xchg
rclb
test
push
mov
xchg
enter
cwtl
adc
mov
negl
imul
idivl
mov
pop
out
lret
xor
repz
cmp
movsl
inc
scas
out
nop
js
push
nop
int
mov
popa
ret
mov
dec
or
pop
lods
pop
out
push
xchg
das
sbb
jnp
pop
add
sbb
cmc
cmp
jne
test
mov
add
add
repnz
movsb
jle
arpl
cld
dec
cmpsl
arpl
add
pop
pop
in
xor
cmpsl
js
jmp
clc
dec
and
pushf
push
mov
or
jmp
sub
dec
repz
sti
xor
test
clc
and
push
xor
fmuls
lods
or
mov
or
or
ret
imul
pop
pop
add
mov
jno
in
popf
pop
adc
test
mov
lret
pop
mov
outsl
xor
notb
sar
push
and
sbb
add
push
cmpsb
loop
mov
notb
sub
mov
jmp
scas
lock
push
mov
dec
testb
ljmp
inc
mov
fiaddl
aam
bound
add
push
sbb
lock
js
push
mov
inc
add
loopne
mov
loopne
subl
ljmp
mov
mov
cmc
jo
fsts
jp
sbbb
stos
jle
out
fbld
scas
push
adc
stos
sub
stos
out
jmp
sub
pop
and
stos
lods
add
add
xor
hlt
xchg
adc
roll
dec
push
out
test
add
adc
lret
es
xchg
cmp
and
aam
pop
mov
push
mov
cld
das
mov
sbb
jp
jle
mov
jno
iret
outsb
cmp
sub
xor
push
add
lea
std
lods
inc
fwait
jl
sub
sub
out
push
call
adc
adc
in
dec
mov
inc
jp
icebp
scas
hlt
movsl
scas
jecxz
pop
xchg
shll
inc
into
add
push
mov
sub
xchg
xchg
sub
rcrb
pusha
push
xchg
push
ret
add
jno
sub
mov
inc
jp
mov
push
jg
pop
mov
sub
xchg
lret
pop
dec
xor
ds
arpl
mov
ss
mov
cwtl
sarl
addr16
aad
sub
xchg
and
pop
mov
add
add
mov
fnstenv
das
jae
popf
mov
add
add
mov
add
rcl
mov
xchg
sub
push
inc
adc
pop
xchg
xor
jmp
orb
ljmp
cmp
pop
mov
stos
push
addl
in
out
adc
out
push
psrld
xorl
rcrb
xchg
outsb
andb
nop
int
rorl
push
mov
or
loop
ss
aaa
test
aad
mov
scas
sahf
or
rolb
sub
inc
loop
mov
call
mov
scas
jmp
cmp
out
lcall
fmull
sub
sti
dec
out
aas
xor
jl
test
push
xor
clc
stc
cmp
or
xchg
nop
jne
xorb
pop
popf
xor
fwait
or
gs
push
punpcklwd
mov
es
popa
arpl
addr16
addl
add
cld
je
jbe
jns
sbb
stos
fstpt
mov
add
add
jg
aad
push
push
push
dec
pop
dec
std
jmp
data16
das
cmpsl
and
push
cmp
sub
push
push
fsubr
add
in
push
jae
push
cmp
add
inc
xor
andl
cmp
jecxz
cs
mov
sub
out
xchg
divl
or
inc
cmpsl
int3
insb
aas
stos
xchg
rcrl
mov
push
into
test
fcomps
mov
and
mov
add
or
dec
push
and
lock
mov
mov
jae
scas
and
loope
jb
popa
push
popa
dec
cmp
mov
sbb
cltd
insl
sbb
lret
xor
jg
testb
repz
and
inc
and
cmp
out
and
loopne
sub
jbe
jmp
push
lea
ficomps
pop
into
js
mov
and
roll
pop
add
add
cltd
jmp
fildl
or
add
add
sub
pop
push
out
repnz
mov
mov
mov
lret
mov
lcall
data16
pop
add
jg
jmp
mov
out
pop
fsubl
push
aaa
xchg
lea
add
cltd
push
push
cmp
mov
scas
test
int
sbb
adc
inc
cmpsb
test
addr16
jmp
inc
les
int3
mov
add
sbbb
test
loop
mov
enter
push
aam
mov
push
inc
loop
lods
fildl
adc
ss
movsl
mov
mov
nop
inc
add
cmp
and
jo
nop
aas
jb
xor
dec
sub
mov
ret
scas
xchg
loop,pt
pop
imull
fcomps
pop
into
lods
icebp
xor
and
mov
daa
jecxz
add
cs
add
es
out
jge
cmpsl
and
scas
dec
mov
insb
rolb
mov
mov
push
jg
dec
xchg
dec
shlb
add
add
cmp
loopne
cmp
mov
mov
mov
imul
xor
lret
out
pop
lcall
cmp
cli
daa
std
add
std
test
mov
push
push
outsl
pop
mov
or
lea
pusha
mov
fldenv
pop
notl
cmp
and
xchg
jo
hlt
sub
test
or
mov
xlat
scas
fbld
xchg
testl
stos
ret
adc
push
cwtl
cs
std
mov
push
icebp
sbb
dec
cli
lcall
xchg
xchg
gs
sbb
push
hlt
xchg
nop
sbb
or
ljmp
sbb
pop
out
xor
ret
jo
jge
adcl
push
imul
mov
or
cmp
pop
imul
neg
daa
xchg
sti
add
add
mov
fucomip
push
insb
xor
iret
and
add
movsb
push
jbe
into
xor
fisubrs
push
test
insl
adc
and
sub
cmp
xorl
jcxz
out
lods
xlat
mov
xor
scas
dec
in
test
in
or
xchg
inc
and
mov
push
hlt
inc
mov
cmpsb
xchg
mov
std
xor
das
and
rorl
cmp
arpl
lret
das
mov
push
add
mov
jl
negw
pop
into
into
mov
hlt
sahf
jmp
lds
mov
pop
jle
repz
popf
xlat
or
pop
pusha
ss
push
jbe
testb
inc
mov
out
lcall
mov
mov
pop
inc
add
push
xchg
test
add
push
jp
es
pop
imul
jae
xor
or
xchg
stos
loopne
das
pop
sarb
test
imul
dec
out
iret
jmp
aas
in
push
data16
pop
inc
lret
add
scas
fldl
or
cmp
sahf
sbb
cmp
cltd
aaa
mov
dec
lea
pushf
mov
dec
hlt
in
add
nop
repnz
loopne
loopne
pop
add
gs
jle
cmp
sbb
dec
lret
mov
xlat
insl
cmc
mov
into
mov
cmp
and
add
aad
dec
xchg
stos
stos
lods
sbb
sub
cmp
pop
mov
and
nop
dec
inc
pushf
cmp
stc
sub
icebp
aam
jle
lret
cmp
outsb
inc
js
mov
ljmp
pop
and
imul
dec
add
inc
dec
ja
pop
mulb
mov
jb
outsb
jbe
push
adc
push
in
loop
leave
mov
push
and
cmpsb
mov
lds
inc
sub
and
in
adc
pop
aas
outsb
cmp
outsl
lret
or
xor
mov
jle
xchg
xlat
xchg
sahf
add
push
cmc
fst
data16
add
std
cmpsb
pop
dec
sub
sub
stos
into
iret
imul
add
outsl
push
adc
lret
rorl
lret
addb
or
push
pop
aas
and
mulb
adc
jg
adc
push
testl
cmpsb
pop
adc
js
push
push
lcall
outsb
xchg
adc
pop
ss
in
push
ss
cli
adc
out
daa
loop
dec
mov
push
or
shlb
mov
lock
ret
mov
dec
jae
jno
pop
scas
pop
pushf
and
dec
xorb
push
test
mov
repnz
inc
and
mov
scas
mov
jb
scas
sub
xor
testl
xchg
mov
pusha
adc
push
mov
outsl
xchg
es
aad
inc
jns
das
arpl
and
andb
mov
sbb
orb
mov
xor
mov
js
clc
fwait
add
les
add
add
neg
std
sub
dec
aas
xchg
loope
aam
add
add
outsb
out
xchg
cmp
mov
and
jns
jne
repnz
xchg
hlt
cmp
cltd
inc
sbb
sbb
cmpb
jb
sbb
xor
jl
cmpsb
xor
dec
in
js
addr16
xor
je
pop
scas
int
jns
out
popf
data16
mov
jae
pop
out
pop
mov
das
gs
lds
out
adc
cs
sbb
in
jl
rep
mov
jne
push
mov
repz
cmp
sarl
cli
xor
dec
add
call
add
hlt
dec
mov
mov
push
xchg
mov
xlat
test
sub
sub
xchg
xor
and
ljmp
loopne
testb
pop
push
lahf
cltd
mov
jns
push
hlt
push
js
loop
fisubl
jo
jne
into
add
jae
sbb
push
aam
or
std
out
add
add
cs
xor
cltd
test
int
fldcw
add
sub
frstor
shlb
cmp
in
ja
cs
fmul
out
sbb
lret
mov
sub
jp
stc
xchg
in
xchg
aas
jbe
xchg
clc
cli
push
mov
mov
mov
jne
and
add
mov
cmp
xchg
mov
xchg
mov
cwtl
mov
mov
out
test
iret
adc
stos
mov
clc
repnz
popa
loop
xchg
in
push
jns
into
adc
movsb
push
movsb
or
fs
mov
add
arpl
xlat
cmpl
lock
sbb
stos
fisttpll
add
insl
pop
or
cs
xchg
lds
add
mov
pop
ljmp
add
and
mov
repnz
call
sahf
hlt
xor
adc
adc
leave
je
mov
jg
pop
stos
lock
xor
add
add
ja
out
sbb
add
daa
fsts
in
add
mov
push
xchg
jge
shlb
adc
popf
shll
cmp
js
and
push
ljmp
les
stos
hlt
lahf
jge
mov
add
mov
xchg
add
sbb
nop
ret
mov
popa
sarb
insl
jg
mov
pusha
cmp
push
or
lret
scas
stos
push
sbb
mov
loope
cmc
push
sbb
rcrb
xor
data16
data16
adc
xor
pop
push
and
mov
dec
in
insb
cmp
jno
pop
add
int
sbb
push
or
push
repz
mov
mov
mov
ds
sbb
test
ret
jb
mov
test
mov
cmp
fidivrs
push
pop
dec
rclb
popf
leave
push
jp
arpl
and
cmpl
dec
xor
add
sub
ja
mov
mov
add
add
xor
push
add
sbb
movsl
outsl
imul
int3
xor
xor
ljmp
pop
push
push
pop
dec
jl
lret
out
sub
mov
clc
subb
aad
push
cli
mov
test
xchg
sbbb
sub
cmpsb
adc
jmp
jp
inc
add
inc
jbe
movsb
xor
inc
scas
idiv
sahf
mov
push
aam
movsb
pop
ret
pop
lods
and
and
cmp
enter
or
stc
cmp
stos
push
lret
andl
jmp
mov
shlb
sbb
or
mov
repz
in
cwtl
lret
cmp
jne
out
movsb
mov
test
lods
test
das
loope
push
push
dec
push
call
add
xchg
outsb
push
stos
adc
out
cmpsb
cmpsl
rclb
sub
in
xchg
inc
xchg
jns
add
int
mov
jnp
outsl
cmpsb
loopne
and
pop
call
add
add
or
push
mov
mov
pop
xchg
pop
pop
mov
mov
xor
cmp
lock
pop
mov
arpl
ljmp
fisubs
cli
orb
dec
test
rcrb
sub
negb
cmp
enter
out
jbe
divl
fists
jecxz
in
sub
add
imull
push
stc
adc
arpl
pop
push
push
fildll
lock
push
mov
aam
push
and
lahf
fs
leave
stos
int3
sbb
and
notl
lea
mov
cld
xchg
shll
sti
jg
rcr
loope
aas
mov
movl
adc
and
cmpb
dec
dec
leave
cmpsb
sbb
outsl
mov
mov
inc
add
repnz
leave
inc
inc
inc
dec
dec
mov
dec
adc
xor
dec
es
mov
aas
add
add
cli
xchg
jle
push
je
scas
xchg
lock
jno
add
enter
mov
xchg
pop
push
mov
dec
sub
push
jle
and
mov
subl
adc
dec
lret
sbb
push
push
iret
add
sbb
int
cmp
pushf
pop
ret
outsb
das
aaa
xor
ret
mov
and
sub
jnp
leave
stos
lahf
fisubrl
adc
mov
mov
call
in
jns
lock
gs
data16
into
insl
movsl
cmpsl
lea
sarb
cld
sub
popa
adc
lods
and
pop
jecxz
push
shrb
dec
sub
insb
into
sub
js
pop
push
faddl
nop
mov
stc
rclb
js
push
ret
xchg
and
or
jb
jecxz
mov
cmp
dec
inc
mov
fwait
movsb
or
mov
aam
adc
call
fildl
dec
or
cmpsb
cmc
add
add
fwait
jnp
aad
sbb
fs
bnd
add
mov
pop
sbbb
and
adc
orl
outsb
dec
ljmp
xor
popa
cmp
in
mov
mov
and
cmpsb
xchg
sbb
pop
ret
ficoml
xor
shll
lds
adc
push
mov
or
aas
xor
cmp
int
imul
enter
ljmp
mov
adc
xchg
cmp
stos
fstps
inc
mov
daa
and
cmc
push
insl
pop
decl
pop
add
loop
xchg
nop
loop
sahf
jecxz
in
scas
inc
adc
mov
mov
jo
ret
dec
xchg
mov
ret
add
cld
and
cli
adc
mov
mov
xor
jns
jg
mov
test
lods
sub
loopne
xorl
mov
mov
mov
sbb
push
or
mov
ret
insb
add
add
std
mov
sub
jg
divl
add
sbb
inc
fs
push
push
pop
addr16
push
push
sbb
mov
in
enter
mov
in
mov
fcmovne
into
push
inc
cmp
cmp
pop
xchg
sbb
cwtl
sub
addr16
fucomp
lods
and
test
sub
or
pusha
test
push
sub
dec
jns
push
cmp
push
movsb
xlat
mov
int3
int3
pusha
popa
inc
nop
stos
xor
add
adc
ja
and
jl
mov
shrb
add
fnstenv
in
test
xor
ds
jnp
jl
cmp
loop
mov
adc
into
arpl
sbb
mov
sahf
jmp
mov
dec
sbb
fcompl
test
jmp
jnp
insl
hlt
lcall
add
jecxz
gs
dec
jno
sahf
dec
out
js
insl
add
add
fstl
lret
dec
pushf
cld
je
add
das
inc
and
jg
push
lods
inc
push
jno
jg
adc
add
fisttps
ret
push
nop
dec
xchg
adc
jecxz
jmp
pop
lds
cs
repz
pop
call
aaa
std
xor
xchg
lods
or
out
pop
cmpsb
jnp
int3
mov
mov
mov
add
push
dec
jb
and
jle
movsb
add
pop
dec
mov
test
xchg
sub
adc
sub
inc
fcoms
mov
xor
or
ds
int3
fcoms
add
mov
lcall
push
mov
mov
test
out
push
les
pusha
aad
rclb
dec
enter
xor
mov
xlat
icebp
bound
add
fildl
loope
call
stos
data16
adc
pop
mov
aam
aas
ja
ret
shll
push
sbb
ds
addl
add
bound
sub
sbb
jbe
add
decb
jp
mov
idivb
lds
lcall
push
jns
leave
je
outsl
inc
fmuls
sub
hlt
repz
sub
jl
movsb
dec
or
sbb
sub
jnp
fwait
push
test
push
test
mov
lods
mov
shll
mov
ja
loopne
fbstp
filds
xlat
loopne
xor
sbb
and
jmp
jno
add
movsb
leave
mov
stc
lea
sub
aaa
loope
pop
stc
push
scas
ret
test
inc
stos
dec
mov
test
mov
int3
or
sub
jl
je
mov
push
stos
decb
loop
addr16
mov
daa
cmpsb
stc
sbb
es
mov
mov
jl
and
andb
add
ret
push
in
outsl
mov
mov
lock
cmp
xor
pop
pusha
mov
push
fcom
jne
add
jns
divl
in
sub
push
ja
add
mov
flds
xchg
sub
rorl
add
xlat
ret
fadds
pop
and
movsb
push
xchg
test
inc
arpl
sbb
iret
das
sbb
sbbl
xchg
sub
mov
lret
xchg
jp
mov
sti
pop
and
pop
xor
addr16
push
aam
sbb
fwait
jnp
test
sbb
xchg
adc
and
push
jp
inc
loope
push
sbb
xlat
icebp
imul
mov
sarb
jb
mov
jb
insl
test
adc
std
leavew
lret
and
mov
insl
movl
xchg
cmp
and
pop
push
test
jp
nop
pop
cld
push
test
and
int
mov
lret
xor
mov
mov
fwait
add
scas
jne
icebp
pushf
and
pop
push
outsl
or
subl
ret
push
sbb
sub
add
clc
fisubs
mov
mov
insl
sbb
js
add
adc
in
cmpb
mov
jmp
mov
movsl
push
es
jnp
mulb
jecxz
nop
jae
lods
mov
aam
mov
daa
fistps
out
mov
fdivl
fs
pop
mov
mov
shlb
pusha
addr16
mov
divl
repnz
and
push
xchg
xor
sub
std
pop
dec
xchg
sbb
or
push
mov
and
mov
adc
je
cwtl
ljmp
pop
popf
repnz
fwait
ss
push
pop
lret
stc
pop
je
js,pn
das
fmull
cmp
pop
sub
cli
pop
push
data16
dec
jmp
mov
leave
clc
mov
xor
fidivrl
jno
mov
cwtl
push
push
push
fstpl
jge
iret
hlt
mov
mov
mov
movsl
jnp
je
fisubrs
std
std
das
lret
add
add
mov
outsl
jne
ljmp
inc
loope
adc
add
or
mov
sub
lret
scas
sub
mov
scas
sub
or
and
sar
xchg
jg
cmp
sub
repz
jae
or
das
jle
mov
nop
mov
daa
and
test
idivl
cmp
jb
ja
xchg
test
sbbl
mov
push
sbb
xchg
xchg
gs
jae
xor
push
jl
mov
adc
inc
jbe
ret
pop
inc
lcall
in
stc
popf
test
gs
xchg
test
jecxz
rorl
mov
insb
pushf
ljmp
outsb
xchg
and
push
pop
rolb
adc
nop
mov
ja
pop
into
pop
fcoml
add
sti
sbb
cmp
popf
scas
nop
shll
sbb
jns
add
push
insl
aaa
bound
cmp
cmc
mov
mov
mov
push
fidivrs
insl
inc
outsb
cmc
or
add
add
testl
movsl
adc
add
add
or
fs
movsb
fsub
mov
rcrb
push
lods
mov
mov
loope
jae
pop
or
ret
lods
sbb
dec
mov
stos
gs
jl
dec
iret
cmp
out
add
fnstcw
in
mov
jns
mov
push
insl
rorl
stc
test
rorl
fimuls
sbb
stos
cmpsb
pop
push
movsl
in
jl
inc
mov
push
jp
sar
or
xchg
mov
stc
jnp,pt
cmp
lods
push
sub
dec
adc
mov
mov
lods
jnp
mov
repnz
add
push
jecxz
jne
loop,pn
pop
rclb
int
enter
addr16
icebp
rorb
ds
mov
divb
lret
and
or
imul
out
pushl
add
lcall
mov
push
lods
dec
movsl
mov
inc
and
dec
lds
dec
add
add
jo
ja
std
stos
sbb
ljmp
add
add
cmp
sub
clc
pop
fdivrl
data16
movsl
or
aaa
movl
xor
adc
pop
inc
xchg
xor
push
fs
sbb
adc
add
cltd
jmp
loop
js
lret
add
mov
mov
and
jnp
jne
mov
push
es
push
push
movsl
mov
stos
incl
sbb
lret
mov
inc
scas
int
push
add
jle
push
dec
xor
xor
sar
xchg
or
sahf
lods
sbb
jmp
add
mov
rclb
and
push
or
out
xchg
jo
cmpsb
shl
jmp
sbb
cltd
adc
push
add
test
jmp
sub
push
outsb
dec
lret
push
mov
mov
aas
and
cltd
or
ljmp
shlb
pop
or
adc
cld
scas
add
add
mov
cmpsb
push
sbb
rcll
jl
add
inc
roll
sbb
scas
add
mov
mov
inc
adc
jg
cmp
cltd
pusha
jbe
out
pop
mov
das
mov
mov
cmp
bound
mov
cwtl
mov
push
xchg
addr16
pop
mov
sarb
mov
sahf
xchg
sbb
lret
pop
mov
mov
stos
jmp
mov
mov
jno
outsl
push
es
sbb
out
leave
push
popf
pop
sub
dec
jle
and
rdpmc
divl
shll
cmp
jbe
cmp
or
xchg
cmp
push
ja
inc
mov
xor
hlt
sbb
jns
jae
sub
stos
mov
xchg
push
cmp
cmp
shll
jbe
ljmp
sbb
popa
mov
pop
and
xchg
ljmp
pushf
xchg
cmpsb
cli
add
add
xor
cli
mov
cwtl
sbb
and
add
add
pop
sti
hlt
jno
or
sbb
lret
int3
dec
aam
cltd
cmovs
inc
bound
mov
add
pop
repz
loope
in
cmp
and
xchg
sub
mov
jge
xchg
outsl
dec
push
dec
push
sub
pop
cmp
test
jmp
sub
mov
ret
inc
and
and
clc
push
insb
imul
xchg
mov
ljmp
in
xchg
bound
sub
add
adc
lds
cli
xor
dec
mov
pushf
test
jo
and
cmp
dec
or
cmp
sub
inc
shlb
push
int3
cltd
ret
adc
iret
jo
outsl
sub
cmp
inc
bound
jg
push
nop
out
mov
mov
repnz
xor
inc
out
sbb
cld
sbb
fwait
sub
inc
gs
iret
aam
add
add
test
lcall
xchg
sub
add
andl
inc
rorl
push
call
sbb
je
into
std
cmp
shl
gs
xchg
dec
das
push
pop
cltd
mov
pusha
movsb
inc
pop
lods
dec
pop
pop
ret
movsl
lcall
jnp
xchg
inc
js
and
dec
lahf
dec
mov
xor
into
and
xchg
jp
mov
nop
dec
and
mov
dec
lcall
incb
cmpl
push
push
aad
mov
ret
inc
sbb
and
push
icebp
and
mov
xchg
lret
ljmp
jmp
cmp
das
mov
sub
ficompl
or
inc
and
idivb
outsl
movsb
xchg
rorb
jecxz
inc
jno
aad
mov
mov
pop
add
mov
cmp
pusha
arpl
add
std
jecxz
jae
dec
divb
add
xchg
jns
scas
or
cmpw
add
testb
daa
mov
ret
add
add
icebp
cmp
lock
cmp
inc
adc
adc
add
rcrb
dec
or
fimull
call
pop
test
sub
insb
repnz
sub
sbb
out
repnz
dec
ret
cmpsb
fsts
xchg
loop
dec
cmp
pop
lahf
call
icebp
movsl
cld
pop
sub
cmpsl
pop
push
mov
imul
jns
xchg
or
sub
aaa
add
xchg
enter
xor
lds
mov
cmp
test
repz
loop
mov
pop
movsl
sahf
mov
sub
stc
movsl
inc
stos
pop
xchg
mov
xor
jae
test
cwtl
stos
in
fwait
jb
arpl
dec
fs
dec
cmp
out
pushf
jnp
push
fucomip
ret
js
mull
xchg
lea
pop
int
lret
adc
inc
arpl
ljmp
add
scas
lcall
adc
sbb
call
addb
add
add
sub
aaa
loope
and
mov
mov
jnp
ljmp
or
sti
popa
decb
imul
adc
xlat
nop
xor
pop
out
rclb
xchg
push
and
aas
add
dec
lods
jb
jbe
cmp
sub
push
cli
cmp
aad
orl
in
ficomps
add
sbb
adc
or
lret
xchg
jecxz
or
push
aam
mov
lret
sub
data16
xlat
insb
add
pop
je
push
call
and
in
outsb
sub
clc
hlt
push
fxch
dec
push
into
mov
jns
mov
imul
jmp
insl
xchg
lea
push
cmp
push
call
aad
dec
xchg
int
test
push
adcb
das
scas
jno
imul
push
or
stos
mov
nop
dec
lods
dec
fistl
push
adc
add
mov
idiv
jne
iret
inc
push
dec
fdivrl
addl
add
dec
mov
push
inc
sbb
xchg
and
pop
repnz
insb
data16
add
daa
cld
movsl
xorb
inc
mov
mov
pop
repnz
fdivr
xor
in
or
sub
repnz
push
or
int3
addr16
aad
movsb
jbe
cmp
xchg
xor
xchg
ds
mov
cmp
ret
cmp
ret
xchg
mov
andb
sub
cwtl
adc
cmp
jle
popf
daa
sbb
mov
outsl
inc
cmpsb
xchg
and
jl
mov
xchg
sbb
cwtl
pusha
sub
roll
pop
in
lock
loopne
xor
hlt
mov
popf
rcrl
lods
cmp
iret
scas
insl
cli
mov
arpl
add
aad
movsb
jae
aaa
scas
or
scas
push
xlat
divb
lds
lea
and
adc
aad
notb
push
ret
test
lods
aaa
fisttps
pop
aad
add
add
pushl
sub
leave
mov
add
add
sub
push
mov
hlt
jae
push
mov
fistpll
ja
repnz
add
adc
std
lcall
and
in
call
jae
addr16
rorl
sub
call
or
inc
mov
pop
xor
sbb
push
sub
int3
mov
fdiv
mov
fstpt
pop
ja
dec
repnz
add
aas
jnp
add
xor
jae
pop
xor
xlat
lods
scas
cmp
mov
repnz
mov
pop
out
adc
pop
xor
stos
les
xchg
das
cmp
cmp
sub
stc
fimuls
fidivl
dec
cmpsb
int
mov
pop
jp
mov
push
sarl
jmp
sub
jecxz
mov
xor
push
lods
sarl
aaa
add
ret
dec
dec
mov
clc
into
inc
xor
pop
pop
in
dec
push
add
add
sti
iret
ss
push
jno
pop
insl
xchg
inc
addl
add
test
inc
push
mov
notl
lahf
dec
aam
repz
pop
adc
fsubl
sbb
add
jle
hlt
in
nop
cld
gs
cmp
cs
in
rorl
testl
fwait
sbb
call
xchg
cmp
inc
gs
xor
inc
dec
sahf
fiadds
mov
mov
aaa
movsl
jg
jmp
pop
mov
aam
cli
pop
pop
inc
sarl
add
mov
neg
dec
adc
dec
ss
push
inc
xor
add
xchg
pop
cltd
xchg
dec
pop
aas
mov
loopne
jb
mov
sahf
add
lods
sub
pop
ja
lret
shlb
mov
neg
pop
dec
es
and
xchg
sub
imul
lods
test
fistl
hlt
dec
inc
dec
pop
lahf
mov
cmp
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
sub
jp
test
add
jmp
hlt
repnz
and
pushl
xchg
mov
popa
in
sbb
mov
fcoml
test
and
sbb
mov
adc
icebp
add
test
dec
inc
inc
mov
mov
mov
rorl
jmp
and
jg
mov
dec
mov
pop
xor
aam
lret
dec
std
mov
lock
jae
lods
pop
test
push
mov
negb
adc
jle
into
lods
xor
cltd
sbb
icebp
jnp
je
adc
adc
ja
add
lea
ret
outsb
scas
pop
sahf
add
imul
sbb
popf
xchg
adc
pop
xor
ret
jns
jg
sbb
push
jb
pop
sbb
popf
sbb
cwtl
cmp
pop
iret
mull
fidivl
fsts
js
or
add
mov
mov
pop
fs
dec
test
add
dec
mov
dec
pop
or
sbb
sbb
add
inc
enter
insb
inc
lret
lods
shll
sti
aad
mov
cmp
adc
and
inc
mov
jno
movsb
cmpsb
or
pop
stos
popa
addr16
push
shll
inc
movsb
bound
or
mov
cwtl
daa
mov
inc
or
sbb
enter
add
xlat
xor
dec
sub
sbb
xor
lret
push
ret
test
vsqrtps
mov
and
push
sbb
pop
mov
lahf
sti
mov
shll
xchg
pop
xchg
mov
cmp
pop
stc
mov
lods
jmp
adc
das
enter
pop
mov
mov
add
and
push
rorb
cmp
mov
inc
sub
popa
or
mov
enter
stos
mov
xchg
add
sbb
push
mov
jl
out
outsl
outsl
pop
aad
cmp
add
and
out
ljmp
lock
xchg
mov
sub
add
add
jo
fldl
xlat
pop
mov
stos
sub
fdivl
adc
std
aad
cmp
imul
cmpsb
orl
sub
fdivp
inc
outsl
mov
leave
std
jne
pop
mov
movsl
cmp
jnp
hlt
and
out
inc
and
xchg
xor
jmp
out
jno
mov
jne
aad
pop
push
cmpl
shlb
out
daa
jnp
mov
and
jo
or
pusha
test
sbb
divl
jecxz
nop
roll
or
push
pop
pop
jecxz
cmpsl
adc
cmp
add
and
gs
mov
add
sbb
out
shlb
fldt
mov
aas
and
push
js
mov
adc
and
int3
test
add
cmp
xor
push
mov
mov
add
add
arpl
jnp
sbb
push
xor
xchg
add
sbb
sbb
daa
inc
jle
cld
icebp
push
xchg
push
fsubl
lea
divl
arpl
xchg
jl
or
mov
mov
ljmp
ja
pop
addr16
dec
pop
sbb
jne
pop
push
addr16
fs
mov
and
sbb
les
xchg
dec
cmp
divl
jle
lret
mov
pop
scas
loopne
xchg
mov
jg
or
mov
out
jg
iret
cmp
add
stc
loope
add
stos
nop
or
mov
pop
testb
lahf
dec
add
ja
mov
js
cmpsl
pop
aas
xor
nop
xchg
push
sbb
fs
lcall
mov
loopne
pop
and
mov
and
jecxz
pop
push
stos
int3
bound
cmp
sub
add
xor
dec
insl
jb
sub
xchg
je
and
mov
add
aas
or
mov
mov
adc
add
int
cltd
inc
mov
or
pop
arpl
add
and
dec
icebp
test
dec
notl
sub
mov
stc
sub
popa
push
gs
add
cmp
testb
cltd
add
push
inc
add
xchg
daa
mov
leave
hlt
mov
sbb
sbb
imulb
popf
sub
sub
pushl
mov
inc
push
mov
ret
adc
in
test
mov
jns
aad
fsubl
push
pop
mov
test
xchg
or
outsl
int3
cmp
or
outsl
push
inc
sub
insl
stos
decb
inc
xor
roll
xchg
cmp
add
mov
cld
or
adc
lods
in
mov
hlt
pop
ja
mull
sbb
movsl
fucomp
movsb
lret
incb
add
insb
fidivl
bound
sub
mov
add
mov
lock
jns
loope
idivl
or
dec
xchg
scas
pop
lcall
scas
pop
adc
jmp
or
or
inc
loopne
bound
rclb
xor
xchg
dec
sub
loop
xchg
mov
out
push
push
mov
and
and
mov
push
cmp
scas
inc
push
roll
repz
loopne
scas
sub
inc
sbb
lea
clc
and
jmp
imul
fs
filds
outsb
fs
gs
arpl
sbb
push
imul
stos
pop
adc
inc
ljmp
adc
shl
daa
inc
sahf
adc
xchg
add
ret
cmpsb
in
je
adc
mov
pushf
xor
bound
out
adcb
lds
jmp
add
sbb
xlat
scas
xchg
inc
nop
lds
dec
jmp
fldl
lock
add
cmp
mov
jns
inc
xchg
stos
mov
add
loope
dec
stos
add
aas
fs
inc
mov
cmp
lods
inc
test
and
movswl
insl
xchg
xchg
lahf
insl
xchg
dec
call
outsl
mov
jb
dec
pop
cmp
cwtl
adc
xor
scas
std
and
jmp
xchg
or
mov
xor
inc
mov
mov
sbb
popl
jnp
ja
mov
arpl
scas
nop
into
sarb
pushf
dec
mov
pop
jge
mov
jle
adc
and
inc
add
mov
sbb
cli
cmp
mov
adc
out
cmpps
pusha
in
lret
in
jle
adc
ljmp
pop
xor
ss
ret
outsl
lcall
dec
sbb
xchg
mov
pop
sbb
in
stc
repz
ds
mov
xor
xor
dec
popf
push
addr16
fadds
movsl
add
addl
add
add
int
fstp
iret
push
cmpsb
fadd
dec
lea
jns
mov
add
lret
inc
movsl
test
ret
add
inc
sbb
daa
icebp
dec
and
jno
ficompl
cs
je
fists
push
daa
inc
adc
or
cmp
or
orb
dec
nop
popf
mov
fadds
sub
pop
sub
dec
shl
jnp
cmpsl
jb
jg
sbb
adc
xchg
inc
movsb
xchg
and
cltd
xlat
loop
push
or
scas
popf
repnz
push
and
cs
call
insl
les
push
pushf
sarb
leave
enter
mov
mov
cmp
and
push
sbb
push
mov
push
mov
add
cmp
dec
and
or
adc
cwtl
mov
push
dec
subl
cld
scas
outsb
imul
mov
fldenv
sarb
addr16
xchg
sbb
or
aad
adc
std
add
add
adc
std
out
ljmp
outsl
mov
add
je
iret
pop
add
les
std
jecxz
cmp
pop
ljmp
scas
add
jg
fwait
jge
push
mulb
mov
xchg
out
out
jg
stos
and
rcrl
add
add
dec
dec
jge
inc
pop
enter
shlb
insb
jp
pop
js
pop
mov
imul
push
push
dec
popa
pop
xor
leave
mov
xchg
or
aam
push
mov
mov
inc
lcall
mov
cmpsl
jb
icebp
and
jl
fld
repz
or
inc
outsl
int3
sub
fwait
push
mov
or
jge
or
push
and
dec
adc
dec
xchg
mov
and
or
int
dec
sub
push
sub
mov
mov
mov
decl
jmp
pop
or
insb
scas
aad
outsl
mov
adc
outsb
mov
jg
xchg
sub
mov
cmp
add
add
mov
icebp
add
test
add
pop
imul
mov
push
jb
popf
mov
mov
jns
dec
jmp
mov
xchg
lret
shr
gs
xchg
pop
mov
lahf
push
test
adcl
popf
mov
cmp
adc
cld
sti
push
ds
aam
mov
movsl
mov
fwait
dec
adc
pushf
adc
mov
mov
xchg
hlt
mov
mov
mov
lret
lret
push
pop
push
stos
push
push
dec
cmp
jg
cmpsl
pop
and
xor
aad
out
loop
and
insb
sti
test
push
xor
ret
pop
frstor
and
mov
aas
and
sub
cmpsl
or
inc
jg
sub
jne
pop
mov
fidivl
or
fstpl
clc
dec
out
outsb
fistps
sbb
sbb
stos
inc
xchg
ss
sti
jecxz
pusha
xchg
dec
inc
mov
int3
aam
or
push
inc
push
in
and
add
add
les
fcomps
add
mov
add
add
inc
mov
ficompl
cmpsl
and
out
push
mov
mov
aas
inc
sbb
aad
loop
outsb
jle
nop
add
es
movsl
lea
dec
cmc
out
add
pop
in
and
add
dec
xchg
mov
mov
fldt
sub
inc
or
je
fldcw
int
outsb
scas
fisttps
cli
dec
fcomps
stos
sub
mov
sub
cli
rcrb
inc
inc
imul
jno
pop
insb
es
clc
divb
pop
cmp
popa
clc
xchg
faddl
das
out
stc
xor
repz
hlt
sub
jno
aam
rcrl
mov
div
mov
das
adc
xor
jmp
sbb
xor
pop
movsb
jno
pop
and
add
add
ljmp
dec
mov
out
jle
add
add
ret
rorl
mov
ret
mov
nop
icebp
dec
cltd
mov
jae
fadds
sti
js
inc
insl
imul
fucomip
in
xchg
into
mov
cmc
addb
add
test
pop
mov
push
idiv
das
mov
jb
xor
bound
int3
pop
add
mov
sbb
popa
test
sbb
xorb
sbb
stc
and
push
mov
xor
or
or
push
push
push
lods
fnop
call
jb
int
cs
add
loopne
fwait
lret
push
add
adcb
adc
xor
add
popf
sub
out
mov
lock
pop
shll
jl
and
repnz
je
mov
jge
sbb
rorb
iret
rcr
jbe
add
push
mov
xchg
inc
dec
sbb
loop
loopne
sbb
add
push
pop
hlt
fsubr
pop
adc
inc
pop
sub
pop
sub
out
outsb
or
mov
pop
and
add
aaa
shlb
cmc
div
testl
xor
add
cmp
or
into
sbb
jmp
inc
pushf
movsb
inc
dec
jl
xor
mov
cwtl
mov
paddusb
cmp
xor
aas
jmp
lock
gs
xor
or
insb
stos
mov
push
repz
mov
mov
shll
decb
push
xchg
mov
test
addr16
xchg
inc
in
inc
ss
scas
push
and
xchg
pop
fwait
xorl
iret
inc
dec
dec
mov
in
jnp
add
fildl
xor
fldcw
sahf
leave
bndstx
sub
add
icebp
mov
loop
pop
cmpl
cs
icebp
or
pop
popa
aad
mov
dec
mov
xor
rep
pop
and
and
inc
movsb
cld
mov
lcall
mov
push
cmp
fwait
insl
repz
jmp
push
or
loop
push
daa
sub
add
pop
push
nop
push
sahf
rcr
pop
adcb
jb
jno
mov
add
ficompl
push
dec
cmp
sbb
lahf
loop
push
dec
dec
push
cmp
sbb
hlt
and
push
lcall
in
out
xorl
sbb
push
push
adc
inc
push
out
xor
ret
cmp
dec
inc
cld
mov
leave
adc
mov
pop
fs
ret
cmp
pop
pop
test
mov
aas
sbb
fs
inc
in
add
fnstenv
popf
inc
in
daa
ds
mov
xor
jnp
negb
cmc
icebp
add
and
dec
in
mov
cmp
stc
dec
dec
fstpl
xchg
inc
dec
mov
xor
and
jecxz
rcll
jg
int
mov
cmp
mov
fwait
jnp
push
inc
scas
lahf
ficompl
and
sub
cmp
repz
add
imul
iret
mov
add
shll
cmpsb
jcxz
fimull
lea
add
fwait
ss
jg
jne
lcall
popf
dec
and
and
mov
int3
adc
xchg
dec
scas
pusha
fdivl
and
mov
mov
aas
in
gs
aaa
xchg
inc
cwtl
xor
xchg
outsl
sbb
test
jno
dec
cmp
cmp
daa
lahf
xor
mov
xor
xchg
and
push
push
xlat
cmc
test
ret
or
add
sub
sbb
ret
lcall
out
lgs
xchg
or
dec
scas
aad
lea
cmp
mov
and
push
or
xorb
sbb
add
or
adc
arpl
and
xchg
sbb
cmpsb
adc
and
popf
loope
mov
xsaveopt
movsb
xor
push
repz
xor
add
cmpsb
xchg
and
dec
outsl
add
add
add
clc
jnp
jg
in
cli
enter
add
xchg
add
add
fmull
jecxz
in
or
iret
lods
xchg
rcl
dec
push
push
rolb
addr16
ss
frstor
cli
xchg
push
jp
inc
and
in
dec
jmp
out
inc
jl
daa
mov
xchg
jne
popf
pop
fstl
mov
movsb
push
popa
cmpb
cwtl
jnp
addr16
cmp
loope
cs
xchg
xchg
aaa
and
push
add
sbb
xchg
jo
mov
hlt
icebp
push
les
cmp
scas
mov
das
mov
icebp
rcl
jno
fs
mov
mov
lea
xor
xchg
sahf
xchg
jns
cmp
or
push
sub
cli
sbb
add
mov
and
mov
add
divb
pop
inc
push
cmc
cmp
cmp
enter
mov
movsl
in
xchg
pop
cltd
sub
ret
shll
push
sub
push
jo
pop
add
sbb
stos
out
add
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
add
vaddpd
adc
jns
sti
mov
lcall
sub
and
mov
xchg
jmp
mov
inc
jp
cmp
movsb
mov
push
shlb
into
pop
mov
cmp
push
in
jbe
xchg
pop
mov
sti
or
fmull
lea
test
cmp
sbb
pop
mov
sar
rorb
xor
cs
dec
mov
ds
push
mov
out
xor
inc
scas
fwait
pop
push
clc
mov
pop
adc
mov
jle
pop
push
icebp
sub
inc
ret
xchg
cmp
fiaddl
dec
imul
shlb
ss
mov
add
sbb
int3
adc
push
or
and
sub
daa
cmpl
pushf
dec
jo
aaa
jo
jns
cli
add
fnstcw
arpl
add
jb
mov
sub
inc
rcll
add
jl
sar
std
jle
pop
popf
scas
pusha
xchg
add
push
ret
sbb
adc
or
and
ljmp
mov
mov
mov
mov
push
stos
fwait
out
xchg
rclb
push
rorl
outsb
mov
dec
xchg
push
fnstsw
xor
popf
cmp
das
test
push
scas
dec
loop
lock
xchg
sbb
sbb
loop
sbb
dec
xchg
jle
mov
lods
jnp
push
mov
xor
or
mov
in
jnp,pn
iret
inc
pusha
pop
mov
in
xor
sar
mov
adc
push
adc
ljmp
cmpl
dec
mov
xchg
xlat
mov
pop
adc
cmpsl
outsl
sub
in
mov
adc
xchg
test
stos
mov
or
es
dec
add
push
add
or
pop
pusha
les
imul
imul
mov
cld
add
add
cwtl
or
stos
xchg
cmp
in
mov
xchg
add
add
and
in
inc
sahf
aad
cltd
push
xor
pop
xor
jo
inc
bound
outsl
and
xchg
test
add
shr
add
nop
sbbb
shr
xor
add
enter
pop
out
push
and
ljmp
int3
scas
inc
dec
lds
mov
push
popa
dec
mov
jl
mov
outsl
sar
mov
dec
scas
out
cmp
stos
cmp
cwtl
add
cmp
dec
popf
adc
or
pusha
ss
lahf
mov
fdivl
mov
xchg
cmp
test
ljmp
repnz
leave
xchg
repnz
dec
std
fnstcw
mov
test
inc
pusha
inc
adc
push
data16
jge
xchg
fadds
sbb
in
repnz
xor
jp
pop
add
add
outsl
sti
mov
mov
cmp
xchg
add
add
pop
ffreep
cmp
ss
xor
push
jp
imul
xlat
fldcw
dec
pop
aas
xchg
sub
cmp
or
in
mov
mov
scas
jle
mov
push
lret
xlat
inc
mov
lcall
push
into
in
imul
sub
pusha
lds
movsb
pop
mov
push
stos
jno
xchg
push
cmp
out
daa
sti
ljmp
push
mov
in
push
xchg
add
xor
mov
dec
inc
loope
divb
dec
jno
sahf
sub
xorl
aam
rcrl
je
mov
cmp
inc
sbb
imulb
addr16
jecxz
mul
push
inc
mul
and
mov
mov
fcoml
out
cli
xchg
data16
xor
jnp
js
pop
repz
decl
jl
adc
dec
aaa
decb
sbb
les
lods
inc
and
xchg
stos
add
add
dec
std
out
xlat
aas
dec
sbb
or
stos
cwtl
add
add
jno
dec
sub
call
inc
shll
ds
xchg
lea
push
mov
mov
xchg
mov
or
sbbl
xchg
mov
cmp
jae
cli
stos
loope,pn
push
insl
data16
cli
test
in
int3
pusha
jl
adc
lahf
psubd
jnp
ss
mov
shll
das
jle
orb
arpl
jg
hlt
jno
or
jle
insb
and
in
adc
dec
sbb
or
les
fisubrl
nop
push
fwait
lds
xchg
mov
inc
cmpsl
test
inc
ss
sarb
xor
xchg
mov
push
push
movups
sub
out
lret
push
push
test
add
cwtl
xchg
add
popa
dec
pop
inc
imul
add
imul
outsl
vmwrite
ret
add
add
lahf
cmp
adc
aam
or
ds
ficomps
fiadds
push
popf
bound
fwait
in
in
mov
sbb
mov
sarb
cmpl
in
loop
jmp
ret
pop
lea
pop
inc
mov
fisubrs
pop
into
push
sbb
ljmp
fwait
addr16
in
pop
fnstenv
jo
rcrl
out
cltd
in
scas
je
xor
add
movsl
sub
jecxz
mov
loope
movsl
mov
add
loope
adc
mov
daa
and
ja
xchg
ss
mov
movb
jmp
xchg
nop
int3
das
lret
sub
out
mov
push
es
lock
rorb
cmp
pop
or
adc
push
lcall
mov
push
jecxz
cmp
pop
push
xor
sar
out
sbb
aaa
in
xor
sub
test
fwait
add
add
lret
sbbl
popl
sbb
mov
add
add
aas
push
inc
pop
pop
and
nop
ficomps
test
push
bound
stc
xor
andl
adc
or
mov
push
or
adc
inc
leave
fwait
adc
mov
inc
fisubrs
fidivrl
loopne
cmpl
adc
push
cmp
sahf
in
jno
sub
out
jle
sbb
mov
xor
xor
sub
adc
stos
jecxz
pop
insl
aam
outsb
ret
sbbl
jge
and
cmp
nop
pop
inc
adc
out
adc
cmp
sbb
in
mov
sar
repnz
mov
xchg
add
js
js
sarl
add
mov
add
push
jnp
push
popa
lock
xchg
xorb
xadd
js
push
fwait
das
mov
mov
and
pop
mov
scas
loope
cwtl
xor
addr16
pop
push
add
push
or
add
mov
imul
movsb
and
jne
jbe
mov
add
add
lock
push
roll
cmpsl
fwait
iret
jne
cmp
pop
dec
dec
cmc
cmp
xchg
add
or
orl
std
add
jecxz
mov
aas
or
xor
pop
pop
hlt
jbe
hlt
je
fcoml
lods
mov
cmp
xchg
ljmp
push
and
add
scas
daa
das
rcrl
pop
push
cmp
mov
sub
aad
add
inc
dec
push
sub
inc
and
insl
pop
xor
mov
add
orb
fsub
and
adc
sahf
xchg
aas
or
bound
mov
xor
or
icebp
shrl
mov
out
xchg
jns
pop
pop
jns
testl
mov
dec
cmp
sbb
add
sbb
fwait
jge
and
or
fisubrl
sbb
cmp
cmc
inc
jge
cmp
inc
fildll
xor
dec
and
test
cmpsb
add
movb
push
jne
dec
and
sub
add
mov
jge
jg
ljmp
in
lahf
mov
test
add
dec
std
data16
dec
hlt
movsl
push
push
adc
movsl
cwtl
scas
scas
xor
aad
movsb
test
cwtd
imul
pop
aam
dec
xchg
push
movsl
ret
mov
insb
in
dec
inc
cmp
add
sbb
adc
lahf
mov
jnp
jp
sbb
dec
jne
xchg
cmpl
jbe
cmp
or
xorl
cmpsb
stc
pop
mov
mov
sub
clc
dec
add
inc
or
and
add
mov
mov
add
jns
adc
lahf
or
lock
sbb
icebp
outsl
in
bound
mov
pop
mov
notb
in
lahf
in
cmpsl
jl
addr16
fbld
sub
pop
mov
xchg
pop
cmp
lds
and
mov
pop
movsb
inc
add
push
pop
sti
out
add
cltd
sub
out
inc
sub
or
dec
imulb
add
divb
fistl
imul
fldl
fstps
dec
iret
pop
out
test
sti
add
std
pop
std
cmp
sub
push
aas
hlt
add
orl
mov
pop
sbb
cmp
bound
or
lea
subb
fdivr
into
mov
jecxz
imul
push
jne
xlat
mov
cmpsl
xor
push
jge
xchg
mov
cmpsl
sub
ja
pushf
std
inc
jecxz
mov
rorl
inc
pop
mov
xor
add
in
jecxz
pusha
addr16
cmpb
push
fsub
mov
ftst
sbb
xor
push
jns
fs
fimull
cmpsl
push
and
out
xor
aam
mov
xchg
mov
push
sub
fsubrl
pop
jg
shl
pop
stos
div
addr16
add
xor
lcall
xchg
adc
xor
mov
cltd
mov
incl
add
loop
test
mov
cld
mov
leave
sahf
add
add
and
push
xor
pop
inc
pop
call
sti
nop
push
pop
push
rolb
ficomps
outsl
ds
cmpsb
les
shl
fdivs
out
cmc
and
cld
pusha
mov
sbb
ret
add
mov
mov
inc
shlb
add
inc
lcall
adc
cmpsl
push
pop
out
ljmp
adc
data16
pushf
imul
adc
sub
pop
lods
fsubs
stc
test
scas
int3
test
mov
jl
push
inc
test
loope
ret
sbb
in
cmc
mov
push
cmp
jge
rorl
cmp
cwtl
sub
or
enter
stos
jl
inc
hlt
fs
pop
movsl
aam
mov
jge
lea
mov
out
and
mov
push
adc
lds
je
mov
add
or
lcall
mov
add
add
cmpsb
in
push
sub
inc
cmp
pop
out
mov
xlat
loope
rcrb
sbb
sub
loop
out
je
inc
sub
mov
jle
cmpsb
mov
lods
fs
xor
sbb
cmc
push
ds
dec
mov
pop
lods
fimull
pop
add
mov
pop
pop
call
pop
xchg
insb
adc
jl
nop
xchg
sub
mov
rcrl
mov
or
jb
stc
cwtl
mov
leave
in
adc
jl
push
cmp
push
fldt
or
mov
jae
arpl
mov
push
xchg
xlat
out
std
mov
addr16
mov
adc
mov
mulb
xchg
mov
pop
mov
cmc
pop
rorl
cmpsb
cmp
and
cmp
mov
pusha
iret
jp
rcl
lret
inc
cld
ljmp
cmc
scas
pop
out
fiaddl
lea
add
add
mov
inc
inc
add
mov
add
and
enter
push
jge
cmp
push
pop
adc
mov
jbe
or
jae
dec
mov
orl
pushf
sti
push
cmp
into
add
pop
sub
shll
test
inc
inc
add
jp
adc
mov
outsb
jnp
xchg
mov
push
push
xchg
fsubrl
fsubl
mov
test
jg
notb
insb
gs
inc
push
aas
add
sub
cltd
dec
jge
test
pop
ljmp
popf
int3
fstpt
sub
pushf
in
sahf
insl
mov
sbb
test
roll
subb
sarl
jecxz
pop
out
dec
mov
mov
xchg
cmpb
pop
scas
outsb
dec
mov
pop
lret
in
pop
scas
sbb
jmp
movsl
loop
cmp
add
stc
pop
inc
jl
jb
mov
test
mov
cmp
in
pop
fisubl
push
mov
add
add
std
inc
mov
stos
push
fsubs
add
pop
leave
xchg
dec
in
outsl
mov
bswap
lea
fsubrs
ret
fsubrl
jmp
push
xor
out
mov
sub
pop
clc
mov
inc
jg
jge
xchg
push
fnsave
xchg
mov
test
and
cmpsl
dec
sahf
xchg
push
adc
stc
xlat
sarl
push
push
mov
nop
jo
pusha
or
jo
insl
fildl
xor
scas
jmp
jmp
sub
xor
lods
icebp
jb
mov
je
sahf
sar
inc
push
sub
xor
sbb
pop
roll
sti
hlt
push
arpl
addl
pop
imul
jp
inc
cmp
mov
push
fs
cli
jb
mov
or
cmp
add
xchg
out
add
add
ljmp
ficoml
mov
xor
movsl
lcall
or
add
push
inc
fdivl
push
dec
mov
frstor
add
dec
imul
xor
push
sbb
mov
outsl
ds
adc
stc
aas
sbb
lods
clc
loopne
push
mov
inc
push
push
mov
loope
mov
mov
jmp
add
icebp
push
jge
cwtl
push
in
enter
loopne
xor
in
pop
fisubs
add
andb
adc
push
add
cmp
std
mov
lds
repnz
lret
inc
imul
adc
xor
dec
jp
push
cltd
push
movb
pop
nop
movsb
cld
mov
cmp
js
rcrl
ficompl
cmp
push
jecxz
xchg
outsb
dec
js
cltd
in
pop
and
xchg
xchg
jecxz
jle
inc
mov
call
ficomps
mov
xor
xor
jmp
add
sbb
je
popfw
sbb
cltd
sbb
mov
push
pop
jge
push
cli
stos
ret
or
sbb
loopne
jb
pop
xchg
ja
pushf
add
add
sbb
mov
sbb
mov
add
or
ret
xor
pop
divb
cmpsl
arpl
jp
push
loop
xchg
lret
push
inc
jne
sub
ret
rep
cmpsb
jecxz
stos
jns
movsb
aam
jae
jne
imul
or
jb
cmpsb
jmp
xor
or
push
fbstp
xor
pop
jne
mov
pushl
sub
popl
pop
mov
mov
and
scas
pop
adc
xlat
xchg
jp
inc
mov
mov
and
int
sub
cltd
enter
test
div
push
testb
and
mov
mov
mov
sub
xchg
call
sub
test
push
xor
cs
xor
dec
movsb
or
or
stos
sub
scas
and
jb
dec
pop
flds
pop
push
push
push
push
cmp
xchg
mov
pop
sbb
jge
add
pop
test
stos
hlt
jmp
cmp
jbe
xor
stc
sub
movsb
add
add
enter
leave
addr16
and
mov
or
not
in
jne
movsb
pushf
daa
cltd
sbb
outsb
mov
inc
add
sbb
scas
push
leave
jle
xlat
movsl
imul
ret
jmp
and
xchg
sbb
movsl
cli
cltd
or
in
dec
in
jg
mov
fdivr
out
test
and
pusha
push
test
movsl
xlat
dec
lret
dec
aam
iret
cmp
mov
out
stos
sub
xchg
ljmp
adc
rolb
xor
jae
inc
pop
rorl
into
jle
into
loop
inc
mov
and
mov
shl
cmp
aad
shrl
inc
jae
popl
lahf
movsl
xor
enter
lret
clc
sbb
and
or
test
insl
cs
int3
pop
pop
mov
shrb
fildl
sarb
pop
aam
mov
sub
mov
lea
outsb
enter
add
add
out
xlat
out
jg
in
xor
fldenv
add
add
lds
cwtl
mov
lcall
fstp
lock
cmc
hlt
ds
shlb
push
push
bsr
aam
mov
js
sub
fsub
add
cwtl
push
push
and
fcoms
mov
mov
aam
sub
loopne
xor
je
pop
imul
insl
dec
sub
scas
mov
or
sub
shufps
cli
mov
sbb
mov
lahf
repnz
icebp
outsl
bound
mov
or
in
int3
shr
mov
mov
jnp
mov
stos
mov
jecxz
sub
in
ljmp
hlt
mov
and
add
repz
mov
stc
fs
dec
ljmp
mov
rcrb
mov
mov
jbe
or
das
clc
and
dec
movntps
add
add
mov
inc
fwait
lds
jo
fldl2e
scas
add
icebp
cmpsb
add
add
aad
inc
mov
lret
push
es
movsb
hlt
pop
pop
in
test
push
leave
xor
jge
mov
fbld
divl
ljmp
test
sahf
repz
pop
pop
add
sbb
push
mov
subl
sub
jp
pop
add
dec
les
jl
mov
popf
cmp
or
test
fists
pop
cli
cld
jp
into
es
leave
filds
nop
aaa
fildl
jmp
js
aad
in
xor
mov
repnz
idivl
add
shll
cmp
cmp
mov
push
loop
sbb
mov
scas
icebp
enter
mov
mov
out
xchg
scas
jl
das
in
inc
jg
or
dec
jae
adcl
lret
pop
xchg
lods
pop
popa
or
call
xor
mov
add
add
mov
fadds
mulb
add
int
outsb
mov
insb
pop
test
out
cmp
adc
xchg
jle
jns
jp,pt
jno
lahf
fistpl
and
sarb
bound
int
in
std
aas
sub
fidivrs
push
lret
movsl
fimull
in
xchg
ja
aas
mov
xlat
mov
movsb
sub
ljmp
out
xchg
lret
jo
aad
cltd
leave
loop
aas
shlb
loope
js
inc
arpl
push
stos
mov
aas
pop
fidivrl
push
jmp
cmpl
xor
fidivl
mov
lret
sbb
or
xchg
imul
rol
ss
sub
xchg
xchg
scas
sub
fmull
jnp
jecxz
stos
fdivs
cltd
aad
mov
xchg
jno
mov
int
jae
pop
xor
int3
jmp
jge
mov
sbb
and
orl
add
lret
jnp
sti
jmp
push
mov
not
lret
sti
test
add
out
mov
mov
fdivl
in
ljmp
add
mov
lret
jle
cs
inc
push
fstl
mov
ret
test
fsubs
ss
lea
mov
push
lods
aas
out
pop
dec
in
ret
pop
mov
push
mov
adc
cmc
inc
lea
icebp
imul
xor
and
mov
dec
iret
jbe
mov
push
inc
iret
es
inc
push
icebp
mov
lds
pop
sub
cmp
or
jmp
inc
popf
xchg
pop
icebp
lods
lea
adc
xchg
in
adc
mov
in
fadd
fdivrs
inc
imul
xchg
loop
bound
inc
jl
inc
stc
inc
daa
mov
jmp
addb
pop
stc
mov
les
pop
enter
sub
frstor
mov
mov
push
cmpl
add
jecxz
lock
call
add
repz
daa
daa
fistpll
outsb
mov
inc
cmc
fwait
aas
out
adc
jbe
cmp
scas
mov
ljmp
pop
sub
push
cmpsb
nop
pop
ja
pushf
arpl
pop
adc
sub
cmpsb
cmpsb
jmp
xor
cmp
imul
mov
pop
mov
sti
dec
adc
sbb
dec
mov
dec
or
in
lahf
loopne
ss
and
jo
inc
fiaddl
rorl
pop
jmp
push
clc
lret
fbstp
push
in
cmp
add
ret
jo
rcll
jbe
add
pop
cld
insb
test
ja
fildll
mov
jge
pop
sbb
mov
sub
xchg
or
pop
test
into
sarl
add
stc
mov
lock
imul
loope
cmp
in
cmp
mov
cmc
decl
fbld
or
add
mov
cld
mov
leave
das
in
nop
fs
add
add
loopne
fwait
das
daa
stos
dec
add
sub
adc
jle
dec
hlt
cmp
xchg
xor
pop
stc
mov
das
mov
fisttpll
cmp
pop
aas
dec
lods
push
lret
ficompl
inc
xchg
int3
out
inc
aas
aam
push
adc
fistpll
fwait
fs
dec
mov
pop
xlat
cmp
inc
xor
sahf
test
jge
adc
xchg
shlb
and
movsl
pop
cmp
cmpsb
sub
push
sub
cmp
das
call
sub
xlat
push
inc
mov
xor
mov
fwait
repnz
test
adc
mov
xlat
negb
stc
jmp
pop
test
call
or
dec
inc
mov
movsl
ja
repz
loop
fnsave
push
or
mov
jp
or
negl
push
stc
jecxz
popa
pop
or
sub
mov
dec
das
pop
out
cmc
mov
cmp
and
add
cs
jle
out
les
pushf
jg
jge
or
sub
add
cmp
adc
test
repz
cmp
dec
sub
xor
add
sub
stos
loope
lods
adc
sbb
imul
nop
cmpsb
loop
mov
mov
sahf
mov
cmp
mov
pop
aam
out
sbb
out
lret
sarl
sahf
xchg
cmc
pop
in
adc
out
mov
lret
dec
sbbl
add
into
adc
add
scas
in
adc
sbb
inc
and
push
cs
in
fwait
xor
inc
jb
cld
mov
mov
movsl
adc
daa
add
lods
cmp
mov
cli
inc
inc
push
cmp
sub
mov
out
sub
cmpsb
pop
inc
fdivrl
and
pop
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
std
dec
scas
sti
shrd
add
lahf
jnp
xor
push
mov
loop
repnz
fbld
pop
bound
sub
push
jge
jae
leave
pop
loopne
pushf
lcall
mov
in
pop
imul
dec
repz
and
fisubl
jl
les
mov
mov
bound
inc
or
or
xlat
imul
ljmp
lods
cld
sbb
add
inc
fisttps
loope
or
imul
lock
cmp
add
pop
fisubl
xor
lret
mov
inc
fdivrl
xor
inc
je
mov
dec
or
adc
or
mov
adc
pop
movsl
mov
es
dec
cmp
mov
jmp
pop
jp
inc
jns
or
int3
shrd
sbb
push
mov
mov
test
lods
leave
repnz
leave
hlt
ljmp
lcall
add
add
fidivs
loop
ljmp
ficoms
adc
add
add
cltd
ficoms
cmp
dec
add
lods
or
sbb
xchg
xchg
rcr
or
add
and
std
iret
daa
lock
pop
and
inc
pop
pop
shll
scas
rolb
jnp
dec
mov
mov
push
addr16
std
popa
push
or
sbb
ss
rolb
icebp
cwtl
xchg
cltd
mov
lcall
popa
mov
js
pop
shrb
cs
pop
jp
jae
pusha
mov
xchg
jmp
jb
jp
movsl
mov
stos
mov
sub
adc
iret
lret
inc
mov
pop
arpl
pusha
icebp
cwtl
adc
xchg
test
imul
sbb
mov
imul
or
out
push
mov
insl
sbb
mov
cmc
jb
inc
shll
adc
xlat
mov
mov
xchg
sub
std
enter
add
add
xchg
jg
jmp
std
mov
push
cmp
scas
add
add
push
pushf
sub
cmp
and
push
aaa
pop
cmpb
mov
sbb
test
int3
mov
xchg
sbb
push
dec
adc
jle
cmpl
dec
mov
adc
pop
push
pop
add
imul
pop
arpl
adc
clc
inc
lcall
mov
out
jne
cmp
shl
out
mov
orl
lret
rclb
mov
ficoms
icebp
push
xor
sti
mov
and
mov
dec
in
lret
fwait
push
shll
and
loope
mov
jge
sub
cmpb
push
in
aad
pop
popf
dec
movsl
outsl
call
mov
ret
cwtl
or
mov
aam
push
cli
or
cwtl
pop
test
fsubp
add
lret
sub
cmp
xchg
adc
mov
mov
add
outsb
lahf
or
cmc
cmp
and
repnz
mov
loope
and
add
xor
inc
mov
xor
mov
add
aas
mov
movsb
daa
mov
mov
xchg
ficoms
call
add
cwtl
aam
test
ffreep
test
and
adc
gs
mov
inc
xor
aas
mov
jo
aas
std
mov
and
xchg
fisttps
decl
jns
push
inc
cwtl
cmp
jne
lods
movsb
in
mov
xor
xchg
xchg
daa
adc
pop
sub
icebp
xlat
test
xor
inc
push
pop
outsl
jb
xchg
mov
xlat
push
sbb
fwait
dec
adc
ja
mov
stos
xchg
pop
out
arpl
pop
inc
and
loope
mov
leave
jae
into
dec
jns
jb
jb
fidivrs
je
nop
push
inc
imul
popf
mov
cwtl
push
or
mov
mov
cmp
xor
jge
mov
icebp
push
aas
test
cmp
loopne
lea
fidivs
insb
loope
mov
cwtl
add
add
xor
cmp
inc
call
ret
add
add
hlt
xchg
lock
inc
dec
insl
imulb
xor
in
sub
jo
out
xor
scas
stos
lock
sbb
rol
jp
xor
jae
or
iret
mov
in
rolb
inc
xor
popa
jge
mov
or
faddl
fimull
fstl
fs
and
shlb
sub
outsb
xchg
in
xor
pop
cld
or
pop
xor
jbe
xchg
in
lahf
adc
jg
add
out
loop
push
pop
imul
std
mov
mov
leave
xchg
mov
in
cmp
lock
outsb
incl
inc
decl
add
pushf
das
and
stos
bound
cmc
cmc
les
js
into
jmp
mov
aas
rcl
imul
dec
push
aas
in
add
insb
ret
sub
aam
rorb
outsl
or
popa
jne
leave
shrb
add
jp
les
mov
arpl
xchg
sub
mov
add
dec
aaa
loope
and
add
ja
mov
inc
pop
adc
lret
adcl
jnp
jle
mov
xlat
clc
outsl
push
fisttpll
ret
xlat
lds
and
pop
xor
mov
jmpw
hlt
pusha
or
sbb
outsb
cmc
pop
lods
push
paddw
inc
int
repz
push
loope
mov
daa
mov
call
adc
mov
mov
and
repnz
dec
jb
aam
cli
mov
fisubl
shrb
fcmovnb
cmpsb
push
aas
or
and
lods
aas
inc
or
cmp
or
movsbl
xor
inc
int3
mov
mov
fdivrl
dec
push
pusha
mov
mov
lods
xchg
push
xchg
int
sub
adc
xor
repz
add
scas
movsl
dec
paddq
jecxz
test
lds
inc
mov
adc
pop
les
mov
adc
push
movsl
add
add
clc
pop
stc
out
push
pop
bound
add
add
add
in
ret
mov
mov
push
and
dec
pop
flds
call
out
stos
jns
arpl
dec
xchg
les
jne
xor
rolb
nop
push
mov
inc
pop
or
or
add
lock
sbb
movsl
mov
push
push
jae
ret
lods
std
out
addl
sub
mov
cmp
push
fwait
pop
int
cltd
nop
fsubrp
mov
or
dec
ret
imul
iret
mov
mov
popa
loop
iret
fsubr
push
ret
push
in
xor
lahf
mov
leave
jmp
stc
insl
daa
mov
adc
mov
jp
outsb
xor
fwait
xchg
aam
adc
cmp
mov
mov
mov
mull
jmp
add
ja
mov
mov
shll
imul
pop
mov
add
lds
cli
lcall
push
xor
add
xchg
mov
mov
dec
sbbl
movsl
in
jg
mov
adc
das
roll
mov
jmp
repz
push
mov
in
aad
pop
ljmp
inc
sbb
dec
jge
jecxz
lret
or
testl
mov
sahf
sti
rcr
inc
push
rcrb
dec
sbb
mov
test
mov
orl
cmp
sbb
inc
sti
dec
sbb
add
cwtl
mov
adc
int3
sbbb
jne
test
stc
and
xlat
lahf
xchg
ds
push
jecxz
cli
xchg
fadds
xor
int
jnp
lds
xor
push
mov
mov
lret
mov
pop
sub
xchg
sbb
fsts
xchg
mov
push
cmp
add
fwait
scas
push
push
sub
mov
or
add
add
jne
mov
int3
insb
lret
popa
aaa
mov
add
mov
cmp
int
inc
sub
dec
cmc
jae
dec
ret
xchg
subb
mov
and
outsl
push
ret
adc
cmpb
mov
or
imul
test
xchg
mov
jnp
std
shrl
lret
in
lods
stc
test
outsb
rolb
or
push
add
jmp
addl
sbb
rcrb
aam
outsb
lds
xchg
popf
pop
push
mov
iret
inc
in
jae
test
inc
pop
es
clc
mov
out
sbb
adc
mov
sub
fnsave
jo
out
dec
or
pop
clc
and
out
ret
cwtl
shr
sub
adc
sbb
xchg
gs
adc
ret
int
scas
icebp
cmp
test
test
jmp
lret
xor
mov
pusha
adc
xor
cli
xchg
adc
stc
mov
dec
pop
pop
sbbl
fstp
rorl
mov
add
add
in
ret
mov
in
scas
add
nop
or
aaa
loopne
mov
sbb
js
test
faddp
push
push
aad
sub
fs
jb
xchg
jno
add
shll
adc
push
out
rolb
xchg
cmp
xchg
fistpl
adc
mov
jbe
or
jb
sti
sti
cmc
js
stos
or
out
in
icebp
sbb
movsl
scas
xor
xor
jp
hlt
lret
testb
lret
push
fldcw
cs
je
push
pop
mov
dec
add
mov
lahf
dec
ljmp
inc
mov
stc
xchg
lds
addr16
test
div
mov
int3
call
inc
xor
jo
je
and
popf
fwait
out
mov
pop
mov
out
push
mov
out
mov
outsl
daa
test
or
sahf
sbb
add
add
add
in
mov
jecxz
out
mov
push
cs
inc
mov
add
add
push
add
lds
inc
pop
sub
adc
sub
and
xchg
loope
repnz
in
sbbb
sub
shrb
sub
movsl
push
clc
hlt
mov
mov
jae
jp
cmp
lret
adc
jb
xchg
push
cli
sahf
mov
lahf
and
imul
adcb
cmp
fwait
ss
dec
add
insb
mov
pop
mov
mov
lods
lods
popf
loope
imul
cmpsb
or
push
sbb
mov
sbb
push
scas
add
push
add
scas
jno
pop
sbb
jb
adc
add
lcall
dec
xor
mov
or
cmpsl
xor
sar
xchg
fcompl
outsb
fnstcw
sub
mov
inc
jbe
dec
ljmp
cmp
ljmp
cmp
lds
jo
sbb
mov
jmp
sub
test
add
push
xchg
test
jg
into
lret
orl
add
add
insl
cmpl
idivb
mov
insb
mov
mov
idivb
dec
mov
lahf
jmp
ljmp
inc
adc
clc
inc
push
jo
cli
mov
xor
cmpsl
nop
fs
call
call
add
ss
mov
inc
sbb
pop
sbb
movsl
mov
xchg
aam
cmp
mov
mov
mov
cmp
pop
pop
and
popa
lahf
mov
adc
mov
cmpsb
push
mov
mov
dec
cs
xor
pop
cmpsl
mov
data16
sub
sbb
inc
jnp
movsl
jbe
push
sub
sub
and
and
sbb
lret
scas
push
ficomps
mov
mov
add
push
test
mov
and
adc
adc
xchg
xchg
ds
cli
jge
insl
adc
scas
inc
sbb
add
adc
in
lcall
jae
dec
mov
push
daa
dec
mov
add
lret
repz
repz
adc
sbb
add
jne
push
mov
push
mov
adc
or
lods
xor
jo
mov
jmp
leave
loopne
insl
scas
pop
lods
add
scas
inc
scas
aam
jge
and
jle
test
out
push
test
sbb
xchg
inc
clc
rorb
mov
enter
xor
adc
scas
pop
call
and
sbb
dec
popa
test
stos
addr16
stos
lods
out
or
mov
mov
push
gs
dec
or
lea
sub
xor
fidivs
subb
mov
mov
lods
filds
int3
or
fisubs
lock
mov
xor
lods
aaa
and
cmovae
pushf
insl
pop
pushf
outsb
pop
test
dec
dec
pop
xchg
xor
in
jge
out
inc
lret
icebp
pop
lock
mov
sub
dec
or
jg
dec
arpl
aas
push
mov
add
adc
mov
xchg
shlb
fdiv
cmp
adc
mov
adc
jo
int
fwait
movsl
sbb
insl
out
std
mov
jo
adc
js
ljmp
jae
sahf
xor
jo
xor
sbb
mov
cmc
subb
jl
jae
shr
loopne
add
cmp
ret
sbb
push
in
mov
mov
aas
fidivl
mov
insl
outsl
lahf
xchg
data16
mov
push
push
std
mov
movsb
outsb
popf
jns
jne
outsl
sbb
mov
mov
test
sbb
push
cwtl
sub
sbb
aaa
cld
xchg
sub
ja
pop
lahf
jno
loop
clc
stc
jecxz
lods
sar
jno
and
nop
cld
add
mov
pop
mov
shlb
popf
repz
data16
fisubrl
push
gs
mov
and
gs
data16
pushf
pop
add
add
out
idiv
outsl
mov
aaa
lret
push
mov
add
mov
mov
hlt
dec
iret
outsb
in
mov
in
movsl
push
clc
jp
or
je
outsl
adc
jb
int
ja
cwtd
inc
arpl
rclb
in
or
adc
loope
aam
lea
sbb
inc
push
xor
in
je
sbb
adc
jno
movsl
sub
sar
adc
imul
inc
xor
push
pop
mov
leave
cmp
test
sub
movsb
inc
mov
cmc
mov
push
daa
xlat
and
mov
jnp
mov
cmc
mov
mov
sub
and
mov
inc
pop
cld
repnz
pop
mov
mov
es
fmull
sbb
in
cmpsl
mov
sub
mov
icebp
std
pop
jnp
or
adc
sbb
pusha
pop
push
cld
incl
je
mov
jg
mov
in
in
stos
mov
das
mov
jns,pn
mov
sub
add
xor
mov
pop
rclb
xor
add
add
inc
dec
sbb
pusha
add
in
loop
repnz
shrb
sbb
xchg
pop
je
push
into
sbb
adc
testb
call
cmp
jg
jo
jmp
inc
shll
nop
xchg
and
addl
lahf
out
es
add
scas
pop
es
inc
mov
push
pop
push
pushf
mov
insl
outsb
ret
jmp
jbe
push
sub
cltd
ret
movsb
mov
and
imul
cld
stos
lret
lcall
jno
mov
inc
pop
jl
dec
pop
scas
sti
xchg
and
into
outsl
sbb
fstps
mov
add
mov
jp
les
stc
mov
and
and
push
outsl
lret
into
leave
xor
xor
sarb
ss
inc
cmp
sahf
movsl
jmp
sub
jae
xchg
cmp
sub
jp
jle
push
mov
add
sub
ret
jo
add
add
fistpll
call
cmp
add
add
cwtd
call
subb
cmp
or
pop
cli
push
sti
lock
pop
push
pop
cmpsb
xlat
sbb
mov
lret
sbbb
sbb
jne
dec
loop
and
lret
push
push
in
gs
rcrb
stc
fistl
mov
lods
dec
imul
roll
mov
call
adc
pcmpgtd
jae
icebp
add
cmp
outsl
jp
jg
shlb
in
insl
cmp
jnp
jno
cli
xchg
mov
cmp
cmpb
fstps
or
mov
repz
in
xchg
aad
or
dec
enter
pmullw
ja
daa
sub
mov
dec
lcall
xor
mov
sub
aad
call
jmp
jl
pushf
lcall
stos
add
into
std
sti
leave
sti
iret
jmp
cmp
fs
add
pop
test
gs
pop
push
pusha
sbb
jb
dec
cmpsb
and
jo
das
add
dec
scas
cwtl
hlt
push
ret
push
inc
and
mov
jl
repnz
out
or
clc
dec
ja
mov
ret
jns
cli
stos
imul
mov
cld
aam
movsl
in
jg
and
mov
rorb
loope
xchg
iret
xor
sub
dec
stos
mov
jp
and
push
sahf
sub
into
leave
pop
or
jmp
mov
nop
mov
rolb
fcomps
icebp
pop
jle
cli
or
stos
test
cmp
daa
test
icebp
int
cmc
out
or
int
mov
cmc
xchg
xchg
cmp
adc
jecxz
xlat
sti
outsl
cli
xchg
xchg
mov
jno
pop
stc
add
xor
dec
hlt
add
pop
inc
adc
push
leave
adc
fldz
imul
add
add
mov
xor
mov
add
sbb
xor
or
pop
lods
sbb
stos
push
ljmp
mov
push
and
and
jnp
mull
and
outsl
out
sbb
mov
push
push
ljmp
in
pop
pop
sbb
mov
ja
lahf
mov
das
imul
add
iret
das
inc
xor
xor
fsub
outsb
js
pop
cwtl
loope
shl
test
cmp
xor
movsb
cmc
out
pop
adcb
scas
sbb
fmull
push
lcall
insl
cmp
mov
mov
inc
mov
jp
xorb
fwait
mov
sbb
and
jge
jmp
lcall
push
fsubrl
sbb
push
addb
mov
stos
bound
es
cmpsb
ret
and
jae
add
xchg
pop
and
xor
add
fwait
mov
or
jg
mov
sahf
loop
and
mov
add
lahf
clc
jb
in
jae
scas
not
dec
jne
cmp
sbb
sahf
xchg
aaa
and
mov
mov
push
sbb
movsb
and
out
xchg
pop
int3
dec
cwtl
scas
mov
xor
lcall
pop
sti
or
push
decb
arpl
mov
lret
push
inc
stos
aas
mov
fwait
mov
jne
scas
add
ret
popf
sub
into
loope
or
pop
add
xchg
addr16
and
push
decl
fsubs
or
call
jae
jecxz
rcr
xchg
or
cli
adc
ds
js
push
pushf
push
pop
fdivrs
jg
pushf
into
adc
aaa
sbb
aam
and
dec
aad
mov
cmpsl
add
jmp
push
add
and
cmp
jns
jnp
add
add
inc
enter
pushl
cld
sbb
jae
add
add
mov
jbe
movsl
xchg
fwait
sbb
out
aad
adc
jmp
xchg
inc
andb
cmpb
mov
jp
mov
push
xchg
leave
inc
shll
or
rolb
cmp
cs
mov
fwait
rep
imull
sub
sub
xchg
xor
pushf
xorb
dec
push
jb
test
inc
or
aas
xchg
jb
or
sub
mov
subl
inc
and
inc
xchg
push
dec
mov
int
lock
iret
sbb
aaa
ss
iret
sbb
loope
mov
push
in
sbb
fs
cmp
inc
in
scas
xor
out
cmpsb
clc
cmp
mov
or
add
mov
or
xchg
cli
sub
outsb
xor
sbb
mov
sub
outsb
leave
mov
push
in
insl
jecxz
lcall
icebp
add
add
pushf
shrb
lcall
jp
cmp
js
add
add
mov
aad
and
ljmp
bound
or
call
push
movsb
test
cwtl
mov
xor
nop
xor
mov
out
test
into
push
dec
mov
shll
mov
add
and
mov
shlb
jmp
lods
sub
adc
inc
stos
push
repz
insb
mov
mov
sub
sar
ficompl
nop
mov
adc
mov
pop
in
cmp
xor
ss
mov
jl
sahf
xlat
fcompl
ret
adc
or
pop
imulb
loopne
enter
arpl
cmpsl
xor
fcmovnu
out
mov
jecxz
add
fxch
outsl
cs
mov
mov
clc
push
jo
data16
sub
call
jge
jge
push
jmp
movsb
mov
add
adc
mov
sub
add
add
test
mov
aas
scas
fldcw
ret
add
add
mov
addl
sarl
mulb
inc
jno
inc
sarl
mov
jp
addl
dec
xchg
sbb
addb
jo
cmc
xchg
mov
out
xchg
mov
pop
xchg
fwait
sbb
sbb
in
out
add
repz
popa
and
cmpl
ret
stos
add
mov
jle
inc
adc
fwait
push
addr16
adc
std
and
pop
cmp
orb
imul
gs
jle
jb
adc
andl
xchg
popf
aaa
dec
cwtl
fisubs
loope
test
arpl
stos
add
sub
shl
mulb
jo
hlt
lahf
inc
add
xor
outsl
outsb
shll
pop
test
adcb
test
dec
jecxz
stc
lahf
sub
sbb
cltd
add
add
jne
jne
jg
loop
mov
pop
add
add
scas
jg
popa
fldcw
int3
cmp
push
scas
vandps
dec
jl
add
shl
mov
dec
mov
cld
rorb
orl
cmp
add
sbb
sbbb
out
push
cwtl
mull
stos
sbb
add
pushf
fldcw
cld
shrl
mov
inc
aam
movsb
je
je
inc
jecxz
sahf
adc
and
push
xor
stos
sub
cmc
inc
into
and
push
mov
or
mov
mov
push
xchg
mov
sahf
stc
adc
int3
cld
scas
jns
xchg
jmp
mov
lods
lds
stos
lret
in
popf
lea
mov
xor
ret
les
lods
sbb
outsb
daa
inc
mov
dec
jno
ret
sbb
popf
and
rolb
out
sub
add
sbb
mov
cmc
mov
fldl
add
add
into
jg
rep
in
sub
inc
or
into
mov
stos
dec
rorb
les
sbb
dec
mov
pop
jmp
sahf
add
call
pop
xor
xchg
popf
sub
jae
arpl
pushf
ret
inc
arpl
add
fistpll
into
mov
lock
xor
jbe
stc
mov
add
xor
and
xchg
fs
inc
daa
lods
add
addl
das
push
xchg
sub
popf
jnp
pop
stos
inc
jbe
scas
aaa
cli
nop
pop
adc
frstor
and
fcmovu
pop
test
pop
aaa
pop
add
pop
test
idivl
in
das
push
mov
or
mov
scas
mov
rcll
out
mov
stc
addr16
or
or
mov
repnz
leave
test
xchg
in
adc
pusha
adc
ror
cmpsb
add
add
outsb
jle
lods
testl
movb
add
sbb
fcmovnu
mov
mov
mov
popa
cs
pushf
sbb
out
xor
gs
imul
jl
nop
or
and
push
cmpsl
test
inc
push
mov
call
mov
inc
dec
int3
jl
or
xchg
ljmp
fbld
aas
fsubrs
or
push
call
jecxz
push
or
outsl
enter
out
int
inc
sbb
lret
xor
push
scas
sub
push
cmp
inc
push
dec
dec
and
fisttpll
jno
dec
pop
push
popa
imul
push
fidivl
sarl
and
xor
rcll
inc
iret
xchg
cmpsb
and
inc
adc
mov
mov
cld
push
push
inc
nop
call
jnp
out
rorl
scas
push
pusha
stc
in
imul
lahf
rolb
add
mov
mov
add
pop
inc
xchg
movl
add
jl
data16
cmp
mov
push
sbb
daa
popf
ret
mov
mov
add
xchg
addr16
mov
push
pop
inc
and
pop
pop
jnp
push
popa
addr16
fbstp
jb
xchg
fcoml
push
or
mov
and
in
push
bound
ss
pop
dec
lock
movsb
cmp
out
adc
shl
les
lcall
mov
xchg
dec
xor
leave
ja
push
mov
xchg
imul
call
es
int
jnp
outsl
iret
jmp
inc
xchg
or
push
imul
jnp
adc
or
xchg
jl
sbb
mov
jmp
cwtl
loope
dec
adcb
jl
xchg
lods
sub
les
iret
imul
pop
jo
loop
xchg
or
adc
jmp
sbb
shrl
pop
inc
icebp
ljmp
fcoms
test
sbb
xlat
in
aad
dec
pop
pop
inc
xchg
enter
add
add
out
xchg
dec
mov
push
or
out
sbb
xchg
leave
inc
cmpsl
mov
lret
and
push
incl
cmc
stc
or
cmp
pop
test
push
pusha
out
push
nop
jb
outsb
xchg
popf
testl
pop
mov
adc
adc
mov
jbe
mov
test
mov
rcll
dec
fstp
sub
push
adc
dec
xor
mov
lea
repnz
sbb
push
jb
ret
lock
int3
and
pop
sbb
sbb
xchg
or
mov
jl
sbb
jmp
pop
out
hlt
call
push
cltd
push
mov
enter
cmp
out
inc
mov
ljmp
mov
xor
idivb
cmp
cltd
cli
in
push
fdivrs
pop
loope
add
mov
rol
push
jmp
adc
in
xor
fmull
popf
lcall
add
add
push
sub
cmp
jg
and
mov
loope
loope
fwait
leave
add
add
xchg
aad
xchg
mov
outsb
movsb
fisubl
into
xor
push
push
xchg
sahf
or
mov
test
call
push
popa
arpl
nopl
out
loopne
push
and
dec
cmp
outsl
jno
mov
insb
jecxz
jnp
mov
xchg
outsl
xchg
jmp
and
xchg
xor
inc
or
scas
push
xchg
repnz
jns
xor
push
pop
xor
dec
push
push
pop
ss
mov
mov
cld
imul
jecxz,pn
mov
adc
lods
and
fdiv
les
fucomp
jg
nop
fwait
aaa
pop
stos
cld
negl
iret
data16
cli
roll
mov
test
mov
hlt
xor
adc
mov
insb
jae
out
jp
xor
cmp
add
out
scas
push
dec
fldl
outsl
dec
aam
shlb
xchg
add
add
xor
fistpll
out
repz
fcoms
into
mov
add
add
cltd
jg
mov
mov
push
pop
mov
lock
jae
and
lock
sub
lcall
pushf
cltd
add
push
jb
or
inc
cli
xchg
cmp
leave
jmp
add
cmp
jo
push
xor
cli
xlat
xor
adc
mov
cmp
or
stos
and
call
in
loop
sbb
add
sbb
shll
sbb
cmpb
mov
scas
dec
mov
xchg
filds
insl
push
and
dec
inc
pop
sbb
and
jns
lcall
repnz
daa
pop
stc
ret
lods
outsb
mov
out
scas
stos
xchg
fldt
dec
insl
test
orb
bound
addr16
stos
dec
sub
std
pushf
mov
push
ds
ljmp
xchg
cmp
fwait
call
int3
xlat
and
pop
add
sbb
xchg
sarb
push
adc
addl
add
mov
mov
mov
je
test
add
sub
out
and
jg
shll
insb
lods
mov
movsl
add
xlat
sbb
mov
out
cmp
cld
ret
inc
clc
cmp
addr16
rcr
lret
insb
aam
je
add
in
jb
lea
push
xchg
xor
out
sub
push
lock
push
aaa
jp
dec
rorl
pop
push
lret
mov
pop
ljmp
les
ret
cmp
orb
push
xchg
loop
mov
add
lods
inc
xlat
cmp
loop
adc
ds
loope
xor
cmp
adc
xchg
fsubs
adc
scas
xor
xor
inc
data16
mov
pop
stos
les
ss
push
adc
out
fndisi(8087
and
push
aad
add
ret
loopne
mov
int
mov
and
sbb
or
daa
ja
push
lods
pusha
dec
add
add
enter
in
sbb
push
inc
mov
stos
int3
add
add
imul
loope
and
repz
jb
push
add
in
cwtl
nop
clc
or
inc
inc
sub
push
pop
sbb
dec
jae
aas
aaa
pop
inc
cmp
mov
sub
aad
fistps
pushf
sbb
mov
inc
inc
pop
xor
pop
jb
push
jb
fs
popf
xor
pop
adc
sti
inc
pushf
adc
lods
pop
sub
imull
cmc
add
pushl
incl
and
orb
jge
repz
pop
inc
mov
scas
popa
xchg
push
pop
adc
lret
out
and
mov
out
xlat
xor
fcompl
fcomp
cmp
xor
bound
bound
adc
mov
mov
out
shlb
jae
mov
sub
lret
test
nop
push
pop
adc
imul
adc
negb
or
jno
add
nop
pop
and
add
add
imul
cmc
call
inc
push
popa
push
jns
or
add
add
push
ffree
stos
test
popf
xor
mov
xlat
lods
jb
mov
comiss
mov
pop
pop
pop
imul
out
loopne
cwtl
adc
aaa
mov
jb
cmp
subb
sbb
push
adc
data16
and
xchg
cmp
cmp
cmp
ljmp
sub
sub
xchg
enter
add
sti
adc
and
into
sbb
push
mov
mov
add
test
xchg
xchg
and
enter
sbb
imul
sbb
sbbl
mov
aas
rorb
in
xchg
cmp
sub
push
jp
ds
cmp
js
or
jbe
push
inc
add
mov
or
xor
xor
rorb
aas
push
in
jb
mov
fmull
jg
cmpsl
repz
mov
mov
mov
jno
dec
and
bswap
add
add
ja
iret
sub
adc
mov
add
add
xchg
lcall
cli
aas
fnstcw
das
loop
ljmp
cwtl
mov
mov
mov
mov
mov
sbb
ret
add
cmp
xchg
mov
xchg
cmpsb
inc
adc
sbb
jge
push
lahf
enter
add
jns
add
scas
cld
push
pop
iret
nop
in
mov
mov
jmp
enter
inc
xor
and
loopne
jmp
or
mov
and
dec
shl
sub
jo
inc
dec
and
lods
out
lock
inc
mov
imul
cld
int
scas
movsl
sbb
stos
add
scas
ljmp
aam
add
or
inc
mov
xchg
int3
insb
sbb
dec
mov
mov
and
xor
mov
test
lret
mov
movsb
sub
push
mov
out
cmp
notl
jp
dec
add
adc
pop
outsl
movsl
xor
pop
pop
fs
sub
add
mov
out
out
out
into
gs
cld
test
iret
add
add
jno
aam
mov
sub
in
add
cmp
sbb
add
jle
adc
xor
lock
fcomps
dec
ljmp
roll
data16
fstl
jecxz
dec
dec
sbb
test
xchg
adc
cmp
or
inc
mov
fidivl
movsb
jno
push
add
clc
xchg
xlat
jle
lods
sub
fidivrl
shr
shlb
mov
add
sbbb
or
sbb
push
pop
das
mov
in
xor
in
dec
icebp
enter
insb
xor
add
mov
and
mov
push
push
push
push
test
fs
jmp
xchg
push
aam
add
jmp
ficoml
lahf
std
lcall
sub
sub
js
outsl
xchg
jno
insl
repz
mov
scas
and
pushf
xor
arpl
insb
cmp
rcrb
add
loopne
and
je
out
mov
mov
add
add
mov
das
xor
jbe
cmp
adc
inc
or
and
cmp
test
stc
sub
pop
int
movsl
mul
sbb
inc
sbb
pop
pop
rcll
ret
ja
mov
ds
ret
or
cmp
lret
xor
adc
pushf
add
lods
clc
and
mov
mov
leave
loop
push
mov
sbb
ljmp
icebp
push
test
sti
lahf
inc
seta
mov
xchg
rcrb
mov
mov
jge
lods
mov
xor
mov
add
rolb
inc
xlat
sbb
clc
in
loopne
ja
jbe
mov
push
imulb
sbb
or
pop
adc
daa
adcl
incb
fwait
lds
xchg
movsb
imul
dec
dec
adc
nop
popa
out
sub
mov
sbb
imul
push
xor
add
add
dec
daa
dec
das
outsb
imul
push
xchg
js
sbb
ret
roll
add
fcomp
jnp
incl
sysenter
and
and
push
xor
mov
mov
decb
sub
pop
adc
add
xlat
or
fwait
and
mov
data16
xchg
sbbb
dec
xor
filds
cmpsb
mov
scas
das
hlt
jbe
jp
dec
fstpt
bswap
sbb
je
adc
adc
pop
movsb
andl
or
sbb
stos
jae
jns
cmp
int3
adc
mov
jge
mov
insl
call
jmp
cmp
mov
fsubl
cmpsb
sbb
leave
nop
lock
sub
stos
dec
outsl
bound
mov
out
imulb
xchg
repz
dec
mov
mov
lock
cld
imul
es
push
mov
jbe
adc
mov
fisttps
jle
mov
fstl
sub
inc
jnp
scas
jmp
dec
divb
add
add
popf
mov
lahf
ret
or
test
ljmp
add
or
icebp
das
push
sub
xor
add
xchg
or
sub
ja
cmp
xor
cmp
lret
jne
ficoml
pop
jp
scas
test
ja
and
add
jns
lods
sub
mov
sarl
jle
nop
out
test
movsl
pop
movl
mov
test
mov
mov
lret
fsubs
xlat
mov
sahf
jecxz
adc
stc
mov
mov
cmp
xor
inc
sbb
pop
repz
pop
cmp
cmp
or
push
pop
mov
adc
fldt
mov
jg
push
test
inc
mov
adc
or
stos
add
es
xchg
inc
push
ds
mov
mov
pop
les
xchg
test
pop
rolb
clc
ljmp
add
neg
outsl
push
xchg
or
scas
sahf
outsb
int
add
add
mov
dec
lret
mov
aam
cld
stos
mov
enter
cmc
jne
lds
xchg
pop
inc
adc
loope
push
ja
fwait
lahf
ret
fcomps
lock
pop
xchg
testl
test
out
push
psrlw
mov
jp
xor
test
sahf
adc
popf
into
nop
lods
or
xor
mov
xchg
pop
dec
or
cmpsb
xor
push
mov
les
xchg
xchg
out
ficoml
mov
movsb
adc
and
dec
and
xlat
test
pop
jns
adc
sbb
xor
pcmpeqd
dec
shlb
jp
popf
mov
push
lcall
aam
aaa
loope
xor
pop
mov
sbb
jne
sub
jl
mov
inc
insb
lcall
les
mov
dec
cmp
jo
adc
dec
sub
out
shll
out
sub
mov
add
add
xor
add
sbb
sub
dec
aaa
andb
add
popa
lds
test
cmpsl
push
pushf
add
arpl
sub
pushl
ja
movsl
push
cwtl
out
pop
inc
pop
flds
inc
cwtl
mov
push
ret
xor
cmc
xchg
push
sub
sahf
shll
sbb
sub
dec
sbb
sbb
cmp
pop
sbb
pop
dec
xchg
inc
mov
clc
adc
fiadds
dec
jns
lods
ret
fs
ficomps
popf
pop
add
sub
jo
sub
cvtpi2ps
testb
ror
inc
sbb
jno
add
push
push
es
mov
rorl
fcoml
push
sti
mov
fwait
sub
ds
push
cmp
icebp
movsb
jg
xor
out
sub
or
ja
lahf
pop
scas
add
pop
add
add
ds
jae
pop
imul
add
add
iret
out
or
outsb
daa
pushf
xchg
js
jbe
arpl
xor
int
mov
cltd
adc
loope
and
fcomps
ds
shlb
inc
push
jmp
xlat
or
out
xor
rcrl
push
scas
adcl
cld
repz
sub
or
pop
xchg
or
fldt
fldl
adc
negb
mov
adc
sbb
pop
mov
xor
push
popf
insb
in
pushf
xchg
movsb
dec
jg
jae
xor
push
jns
fistpl
lock
mov
or
push
hlt
push
cmp
cmp
push
ss
enter
push
sbb
repz
mov
mov
in
ja
add
mov
adc
pop
cmp
fisubs
fdivrl
jmp
das
arpl
jb
mov
adc
out
mov
fcomip
out
inc
mov
jge
ror
pop
push
adc
mov
add
xchg
and
idiv
lahf
insl
mov
mov
add
add
lods
popf
in
mov
push
jne
or
repnz
in
dec
lock
push
cmp
cs
jmp
aam
cmp
mov
pop
jns
movsl
jle
iret
clc
stos
andb
jmp
fmull
stc
jle
dec
xchg
jo
aas
cmp
mov
inc
out
dec
or
xchg
lea
mov
faddl
xlat
fistpl
sub
outsl
stos
sarl
fldcw
ret
add
pop
add
mov
cltd
fldl
inc
jg
pop
rorl
std
icebp
push
ljmp
stos
cli
xor
fwait
jl
sub
xchg
and
iret
sbb
jmp
hlt
xchg
adc
es
stc
data16
dec
data16
arpl
imul
sbb
outsb
ja
insl
cli
mov
adc
mov
in
add
jge
rorl
mov
mov
inc
jg
arpl
add
xchg
ja
push
jg
leave
or
int3
out
mov
loope
add
add
push
data16
cld
sbb
addr16
xchg
adc
xchg
mov
dec
sub
sub
enter
sub
fidivrs
ds
leave
sub
addb
inc
ret
cmp
ss
test
testl
xchg
repz
andb
data16
dec
pop
pop
not
test
jae
shrb
aam
pop
fstp
xor
xchg
mov
pop
aas
or
push
mov
jg
jle
push
test
dec
mov
push
or
or
cmp
repz
nop
flds
lahf
bound
and
xchg
mov
repnz
ljmp
fnstenv
mov
faddl
or
loope
xchg
lock
adc
test
movsl
imul
cmp
inc
loopne
loop
gs
rorl
outsb
out
popa
aas
insl
fucomp
push
sti
insb
add
sahf
imul
imul
xchg
movsb
or
pop
mov
add
push
pop
dec
pop
push
mov
stc
outsb
mov
sub
test
cmp
or
adc
and
das
adc
dec
push
pop
filds
imul
mov
test
lret
sti
in
sarb
stos
fwait
cwtl
daa
addr16
cmp
sbb
cltd
fstp
xor
or
xor
mov
ja
jle
mov
sub
push
sarl
leave
stos
int
and
sbb
xchg
cmp
stos
jge
pop
movsb
add
shlb
std
add
aam
pop
mov
enter
imul
jg
imul
imul
popf
cmp
sbb
sub
shl
sahf
or
jb
popa
inc
lea
jb
xor
mov
jp
in
cmp
xor
add
out
fldcw
push
in
sub
cld
jmp
add
add
push
adc
jmp
stos
xor
mov
fsubs
jmp
mov
aam
hlt
cmp
xchg
cmp
mov
leave
shrl
arpl
inc
or
inc
jmp
fdivrs
pop
push
gs
insb
xor
fiadds
sbb
mov
sub
or
mov
enter
clc
bound
sbb
das
inc
adc
ror
adc
push
test
ss
xor
mov
cmp
shl
ljmp
movsl
pop
pop
pop
dec
adc
xor
lcall
lret
dec
inc
mov
sub
addr16
subl
sbb
sarl
out
inc
sbb
std
inc
xor
sbb
outsb
add
sarb
jae
shrl
data16
mov
fbld
and
je
es
popf
out
sbbl
inc
roll
lods
pop
inc
cltd
pop
mov
in
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
inc
xchg
lock
add
lds
mov
scas
xor
scas
add
pop
movsl
in
xor
add
push
std
push
push
lahf
jp
adc
outsb
adc
pop
clc
jne
pushf
test
and
sbb
popf
mov
scas
fidivrs
cmpsl
jnp
or
fmuls
rorl
aas
xchg
cmpb
add
push
inc
repnz
call
adc
xchg
push
mov
loope
insl
leave
test
cmp
jg
mov
or
fadd
adc
rcrb
pop
test
js
jl
mov
lods
ret
sbb
pop
jnp
mov
xor
adc
cmpsb
stos
das
cmpsb
xlat
and
mov
push
jge
mov
xor
dec
and
inc
sbb
add
pop
pop
cmp
add
pop
divl
aas
sub
mov
dec
add
add
jle
jg
std
fstpt
std
mov
cmc
fildl
add
jl
add
mov
int3
cmp
adc
fadd
das
rcrb
push
icebp
push
fwait
sbb
jno
test
jge
xchg
mov
mov
mov
sar
jnp
js
mov
scas
sbb
lods
iret
adc
xchg
xchg
int3
inc
dec
ja
mov
pop
adc
shl
sbb
stos
mov
frstor
in
je
out
aaa
movsb
shrl
lock
xchg
js
int
fs
je
jne
ss
pop
mov
js
push
cld
cmp
mov
es
es
leave
and
imul
hlt
mov
in
cld
test
sub
pop
cmp
arpl
ja
scas
jb
mov
inc
jbe
and
push
xlat
punpckhwd
mov
push
std
pop
in
ja
and
mov
rorl
push
mov
sub
cmp
ljmp
outsb
fdivp
cli
faddl
add
jp
in
pop
repz
add
mov
mov
stos
scas
aaa
cmp
leave
inc
cmp
xor
rcll
xchg
fmuls
inc
mov
sahf
iret
cmp
insb
xlat
xor
cwtl
mov
test
test
xchg
lret
adcb
inc
sub
pop
push
scas
add
push
js
push
jge
stos
rorl
pop
inc
and
xlat
subl
add
std
or
mov
out
or
std
mov
dec
mov
adcb
add
loope
inc
repnz
inc
add
test
cld
adc
dec
jnp
hlt
mov
pop
data16
inc
subb
push
mov
pop
mov
dec
jmpw
ds
addr16
pop
rcl
subl
xchg
in
arpl
fistps
pop
test
stos
mov
pop
into
xchg
pop
sub
add
sbb
add
add
inc
pop
xor
add
adc
leave
jmp
scas
inc
call
fldl
add
gs
jne
pop
not
lret
mov
popa
xchg
cmp
out
lahf
adc
adc
stos
pop
push
mov
unpckhps
xor
cmp
movsl
out
repnz
add
mov
mov
aas
mov
popf
dec
sti
cli
popf
pusha
cmp
cld
lods
adc
sbb
xor
jnp
sub
inc
inc
popa
sahf
mov
mov
into
lock
mov
aaa
out
push
cmp
and
cmp
mov
shlb
das
inc
lahf
mov
pop
fsubr
jecxz
push
add
mov
in
mov
mov
sbb
mov
jnp
adc
ljmp
sbb
or
sbb
mov
pop
std
jns
and
sub
loope
or
xchg
jne
insl
fwait
jno
fstpl
lds
mov
out
shrl
inc
mov
or
sti
and
dec
push
pushf
fldenv
mov
lret
std
pop
mov
cmpsl
fimull
faddl
aam
add
add
add
jns
lds
aad
sub
jne
imul
push
xchg
mov
gs
and
test
cmpb
daa
xor
inc
lahf
mov
lcall
loope
in
add
or
jb
fnsave
shlb
out
stos
cld
cltd
push
les
icebp
mov
iret
cli
daa
xor
mov
repz
dec
in
mov
cmp
inc
jl
mov
test
into
stc
int
stos
stos
insl
mov
push
sbb
cmpsl
mov
mov
jp
mov
fistpl
add
aaa
mov
incb
sarb
dec
mov
mov
add
jne
insb
jae
iret
adc
jmp
mov
outsl
imul
or
cmp
andw
inc
jge
shll
je
cmc
sbb
in
jl
xchg
ret
into
and
add
add
mov
lcall
fisttps
or
or
add
add
sahf
lcall
add
push
cmpb
jmp
std
mov
pop
js
movsl
mov
fimull
insb
pop
scas
push
inc
xor
sub
fnstcw
imul
mov
jb
daa
addr16
push
test
pop
add
outsb
xchg
pop
aad
and
sub
out
or
jge
fistpl
test
inc
or
sub
jmp
push
dec
jl
das
push
rcrl
push
inc
adc
jg
fsubrp
in
jbe
adc
subb
inc
out
hlt
xchg
cmpl
xchg
mov
scas
imul
js
push
cmp
inc
sbb
jns
mov
xchg
and
and
jmp
push
fisttpll
inc
test
out
ljmp
dec
sbb
fistl
in
cld
mov
lock
jae
hlt
bnd
aam
add
add
mov
jns
xchg
xchg
mov
push
add
add
fmull
push
cmp
loop
int
mov
aam
popf
push
sbb
sbb
inc
push
sbb
jecxz
mov
adc
lods
add
sub
pusha
add
add
fistps
jae
inc
push
mov
push
cwtl
and
pop
pop
scas
int3
xchg
xchg
in
fistpll
shll
mov
aaa
mov
inc
mov
sub
xlat
ret
sbbl
lods
cmc
fcmovb
mov
inc
inc
scas
arpl
dec
dec
push
cmp
outsb
xchg
jne
loop
sbb
inc
arpl
jg
fwait
xchg
sub
iret
stos
add
subl
or
push
push
dec
push
imul
shll
ja
cmpsb
out
jg
in
lahf
fstl
push
cmp
adc
lock
jnp
push
jp
sbb
adc
mov
fwait
or
mov
pusha
push
das
xor
mov
xor
add
jae
fadd
fsubp
jnp
or
cld
les
notb
loop
add
adc
inc
inc
insl
pop
dec
dec
into
fildll
pop
push
lahf
out
mov
pop
jge
jo
cmc
aam
cmpsl
push
xor
pop
jne
jecxz
je
inc
adc
add
pusha
xchg
sbb
dec
sub
aam
xchg
cmp
adc
mov
mov
fstpt
mov
sbbl
frstor
and
dec
aad
pop
arpl
inc
repnz
adc
jge
inc
fidivs
test
mov
push
mov
sbb
xor
mov
pop
mov
add
fs
cmpsl
pop
lock
cmpsl
lret
ror
mov
cld
and
fcoml
sbb
push
jne
xlat
dec
bnd
scas
fildll
add
push
mov
test
call
int3
sbb
loopne
push
movb
xchg
orl
into
dec
insb
mov
mov
xchg
roll
loop
jnp
add
add
sub
cld
cli
jle
dec
nop
xor
jecxz
add
pusha
repz
lods
or
xchg
test
js
mov
inc
and
pusha
adcl
ret
pop
repz
cld
cwtl
inc
inc
lret
inc
xchg
mov
pop
lcall
lock
shrb
or
push
push
fst
out
mov
jle
xor
aad
out
inc
mov
push
xor
loop
in
push
ss
cs
dec
nop
mov
jg
ljmp
dec
sahf
adc
imul
sub
mov
repnz
ss
jge
pop
dec
inc
mov
sbb
mov
jecxz
scas
lret
inc
pop
in
inc
fmulp
imull
lcall
fidivrs
int3
pop
dec
xor
xor
mov
cmp
cltd
pop
in
lcall
popf
fbld
lret
sbb
dec
push
inc
addl
add
lea
pop
jbe
ja
sti
aaa
out
ja
outsl
lods
pop
sbb
add
add
mov
inc
and
sub
pop
loopne
adc
xor
ss
cmp
or
aaa
jnp
xchg
rclb
pop
sub
pushf
gs
sbb
roll
mov
xchg
gs
sbb
pusha
pop
insb
mov
mov
mov
stos
imul
pop
in
fwait
dec
in
test
and
dec
jno
cwtl
test
jge
dec
fidivrs
adc
cwtl
or
adc
inc
sahf
mov
mov
cmp
mov
cmp
dec
shlb
cwtl
rep
aas
into
mov
or
xchg
cs
jmp
enter
outsl
pop
cmp
xorl
rcrl
xor
mov
and
or
and
and
into
fisubl
xor
and
and
adc
push
cmp
jae
clc
rclb
and
add
ror
cltd
outsl
mov
aaa
pushf
and
xchg
andl
add
add
jno
std
xor
cmpsl
out
or
dec
push
push
mov
add
das
inc
dec
jecxz
xchg
call
push
mov
leave
push
stc
push
mul
and
std
dec
pop
add
dec
out
ljmp
call
cmpsb
mov
jbe
xor
sysret
jns
lcall
and
stos
je
lock
dec
mov
insl
scas
xor
lret
push
push
push
dec
mov
into
pop
pop
cmove
aam
xor
sub
mov
push
or
push
push
stos
fwait
lret
andl
ret
out
mov
push
sub
jne
push
jmp
insl
push
or
push
and
jle
and
or
adc
adc
outsl
mov
sahf
mov
add
shlb
add
mov
sub
or
dec
adc
sub
mov
fistl
out
dec
jne
scas
js
add
cltd
cmc
adcb
fcos
pop
mov
in
daa
out
add
sub
es
scas
pop
or
jl
or
lret
nop
loopne
cmp
shl
cmc
into
cmc
push
inc
push
pusha
shll
mov
pop
add
jnp
in
lock
jle
dec
cmpsb
popf
test
dec
movsb
inc
into
in
xchg
pop
pop
in
and
rclb
and
dec
inc
sbb
sub
pop
push
clc
enter
adc
aas
movsl
sahf
pop
mov
sub
push
pop
sahf
inc
aad
mov
xchg
scas
xor
inc
out
lea
and
mov
dec
stc
mov
dec
test
adc
mov
ss
jbe
scas
clc
and
loopne
ret
cli
lret
pop
aad
dec
jb
stos
fiadds
ss
test
jle
jge
or
mov
fildll
in
loope
lea
test
cwtl
scas
fdivp
xor
add
add
cmp
repz
data16
add
add
lock
jg
in
and
xor
sub
add
add
cmc
stos
add
mov
xchg
pop
aaa
arpl
dec
lea
lds
mov
mov
shll
repnz
inc
add
lahf
adc
or
cmpsb
cmp
and
and
xchg
les
jle
lret
fiaddl
mov
fwait
jnp
in
lods
imul
jge
mov
std
lahf
and
out
push
sbbb
out
fisttpl
and
dec
push
mov
call
ret
jecxz
lds
aad
fildl
cmpsl
lods
push
out
push
shll
or
dec
mov
mov
lock
adcl
test
test
inc
pop
into
inc
cmp
mov
sub
test
mov
test
xchg
cmc
fsubr
push
inc
movsl
jae
pop
aas
fwait
nop
andl
rclb
mov
fld
js
pop
rorl
or
add
add
pop
xlat
fistpl
add
call
add
xchg
mov
push
mov
clc
and
adc
daa
mov
cmpsb
xchg
inc
iret
pop
xor
and
push
inc
aaa
or
ret
loop
jl
bound
popa
mov
out
xchg
jne
das
xlat
push
jnp
mov
mov
ficoml
mov
loopne
pop
xlat
jge
mov
addr16
or
aam
lret
loopne
sub
hlt
icebp
xor
inc
addr16
mov
fisubrl
push
sub
int3
sub
xor
mov
rol
mov
ljmp
es
lahf
shr
ljmp
icebp
mov
std
insl
mov
int3
or
clc
pop
bnd
stos
add
ret
clc
adc
lds
pop
insl
inc
and
and
adc
sub
add
pop
adc
mov
and
repz
add
stc
mov
dec
js
stc
mov
dec
int
jno
rcrl
jmp
add
push
dec
and
adc
out
jbe
jne
loop
mov
dec
mov
out
pop
es
jle
fisttps
packuswb
in
cmpsb
iret
mov
test
push
scas
adc
pop
addr16
jg
in
sub
jmp
test
adc
mov
cld
pop
pop
shll
popf
out
call
call
jg
ds
pop
enter
dec
and
into
xor
shll
dec
outsl
addr16
les
popl
in
cmc
jns
clc
adc
addl
iret
shll
pusha
cmp
xchg
xchg
fwait
push
and
jns
repnz
or
cmp
enter
in
insb
cltd
es
add
adc
sbb
cmc
roll
shll
inc
adc
sbb
xor
aas
sub
add
ret
pop
adc
jp
inc
cmp
mov
sbb
aad
fbstp
cli
xor
add
insl
repz
fwait
jns
jns
pop
ret
or
ljmp
adc
test
jg
sub
clc
ds
ljmp
mov
adcb
int
enter
mov
jns
int3
jmp
and
push
jno
sub
pop
inc
inc
cmpl
inc
and
xlat
inc
outsb
adc
stos
adc
or
cmpsb
dec
add
xchg
cld
add
mov
fwait
jns
jp
sti
cltd
push
divl
dec
inc
scas
lcall
stos
add
dec
and
xchg
jge
shrl
test
cwtl
and
jnp
adc
mov
cld
dec
test
inc
ss
repz
lock
popf
and
inc
data16
fadd
stos
jns
push
test
sub
inc
les
push
push
sub
xchg
mov
sub
jecxz
enter
std
and
inc
mov
jge
cwtl
loope
ret
jo
pushf
fidivl
mov
out
inc
mov
mov
add
add
mov
pxor
jnp
adc
jne
lret
test
add
and
cld
nop
movsl
sub
lret
sbb
orb
jne
xchg
loope
gs
jle
pusha
sbb
cmp
mov
xor
mov
aam
scas
lahf
mov
pusha
repz
fistpll
out
lods
inc
orl
or
inc
sarb
cmp
fisttps
xchg
jecxz
insb
xchg
xchg
jecxz
call
movsb
andb
or
repz
pop
ja
add
ds
out
pop
mov
js
and
sahf
cli
add
popf
jbe
add
in
jae
xor
icebp
lds
pop
aaa
xchg
gs
and
fwait
mulb
or
jnp
dec
mov
enter
mov
incl
sbb
subb
sub
xor
push
or
jle
push
nop
lods
mov
mov
or
cmp
jg
cmp
adc
add
out
lods
xor
aas
xlat
fistl
das
clc
je
add
add
add
ret
test
sub
xchg
int
jne
shll
adc
push
pushf
call
pusha
nop
arpl
mov
stos
out
mov
das
mov
pop
mov
push
xlat
cmpsb
fwait
xor
out
pop
call
mov
or
xlat
das
push
sti
cmp
and
mov
mov
mov
insl
rcr
inc
dec
pop
jle
jo
sub
cmpsl
sbb
ljmp
jl
push
out
cltd
cli
bound
iret
mov
daa
cmp
fidivs
mov
adc
push
dec
push
mov
fcoms
cmpb
push
add
daa
sahf
xor
jmp
into
cs
ja
mov
sbbb
sbb
test
adcl
cli
mov
push
xor
xchg
loope
jnp
aam
shrl
js
add
mov
dec
mov
lret
sbb
std
fcmovnb
leave
jae
mov
or
scas
add
add
jb
scas
decb
fisttps
mov
xchg
dec
in
add
add
sub
mov
insl
stc
xchg
mov
negb
pop
scas
sub
lods
xor
jecxz
aaa
cmp
xchg
mov
aam
in
bound
out
pop
rorb
inc
outsl
cli
pop
int3
xchg
fs
xor
popf
jg
addb
testb
add
dec
cmp
rol
add
jecxz
dec
loopne
scas
mov
ds
jle
pop
adc
outsb
jp
xor
arpl
lcall
xchg
into
push
dec
test
or
add
lret
notb
xchg
das
sbb
pop
cmp
into
stos
and
cmp
movsl
imul
mov
dec
mov
jb
test
push
sahf
scas
mov
mov
pushf
das
mov
std
add
push
add
mov
outsl
lahf
test
cmp
xor
xchg
mov
xchg
ret
add
add
xlat
mov
xchg
inc
rolb
or
add
add
adc
or
mov
push
rol
sahf
in
xchg
pop
pop
faddp
or
negb
and
inc
lret
add
pop
idivl
cmp
clc
ror
scas
orl
repnz
inc
fidivl
enter
stc
aas
mov
scas
mov
ljmp
lahf
cltd
inc
sbb
mov
stos
push
mov
cmp
arpl
jge
bound
mov
push
pop
les
or
sub
and
scas
xchg
movsb
and
mov
jb
int
and
rorb
cmc
inc
cmp
mov
sti
in
cld
push
sub
mov
xor
mov
movsb
xlat
add
in
fiaddl
or
sub
repz
jbe
add
shl
jmp
adc
inc
push
ljmp
orb
push
lahf
adc
dec
movsl
std
int
aad
pop
fdivrs
add
add
mov
aas
mov
jl
cmp
add
fsubrp
fnsave
aad
inc
mov
xlat
jl
inc
movsl
mov
mov
sbb
xor
push
cmp
shr
mov
repnz
jle
push
mulb
add
lock
jae
and
xchg
jg
int3
cmp
popa
sbb
xor
and
inc
ret
mov
nop
or
pusha
mov
into
fcoml
jecxz
or
xchg
push
mov
setbe
dec
xor
push
aaa
int
sub
repz
dec
cmpsl
xor
mov
iret
sbb
test
and
xor
or
xchg
sub
adc
mov
mov
jnp
int
jns
sbb
out
jb
and
inc
inc
mov
mov
aam
sbb
sbb
data16
xor
dec
dec
dec
or
xlat
lcall
add
adc
mov
add
add
mov
sti
mov
add
lock
add
stos
mov
sti
jno
sub
cmp
add
shlb
or
add
mov
mov
and
les
iret
out
icebp
divb
dec
pop
lea
and
sbb
clc
sarl
lret
xchg
fimull
or
inc
int3
cmp
pop
jne
mov
add
cld
cmp
add
add
data16
es
insb
jns
pop
loop
cmc
xchg
subb
pop
or
cltd
xchg
cmpsl
stos
movsl
xchg
cmpsb
aam
cmp
lret
bound
push
ja
cmp
pop
dec
loop
jmp
push
cmp
js
jae
das
or
or
mov
mov
and
iret
ret
leave
in
push
fwait
add
add
cmp
jle
shl
ret
xchg
xchg
arpl
iret
dec
cld
insb
arpl
mov
cwtl
outsb
adc
cmp
add
push
cmp
adc
neg
jge
xchg
jns
in
jae
pop
pop
icebp
add
add
dec
sub
or
outsb
cmp
sar
nop
adc
adcb
or
movsb
pushf
xchg
sub
or
push
jae
in
lret
imul
xor
add
rcrl
stos
int
ja
mov
mov
fidivrl
dec
outsl
add
xchg
ss
mov
inc
xchg
dec
xlat
xlat
outsl
iret
cmpsl
pushw
xor
mov
pop
sbb
xchg
mov
stc
push
jae
mov
and
mov
pop
popf
cwtl
adcl
mov
dec
dec
sbb
cmp
cmp
xchg
and
stc
sbb
lea
inc
out
movsb
test
int
outsl
and
xchg
sbb
xchg
cmpsb
mov
imul
and
push
adcb
xlat
xor
push
pop
icebp
jbe
mov
sbbl
and
je
in
into
xchg
jb
out
addl
pop
cmp
outsl
jg
jg
sub
fcmovbe
pop
xchg
mov
add
add
int
add
stos
and
push
out
add
dec
scas
and
lcall
xchg
out
cmp
jb
add
pop
xchg
push
das
ljmp
enter
and
loop
push
repnz
jnp
xchg
les
fbld
rcr
loope
pop
xorb
dec
mov
sbb
adc
push
insl
jp
jp
push
jle
sbbb
cmp
pop
dec
mov
mov
mov
xchg
sbb
push
dec
mov
cmpsl
push
adc
movsl
mov
cmc
ja
xor
pmaxsw
ret
arpl
push
test
sub
jge
pop
loop
rolb
push
movsl
out
cmp
je
les
out
outsl
xorb
add
mov
lds
jne
sahf
inc
and
push
jecxz
pop
pop
xchg
movsl
and
lock
lret
pop
cld
mov
ljmp
cltd
add
add
ret
ja
and
aaa
divl
jp
pushw
add
mov
js
jge
cmp
imull
das
jno
push
jae
jne
inc
push
popf
test
out
pop
repz
sbb
cmp
dec
dec
pusha
icebp
adc
mov
loope
push
data16
push
sub
subl
repnz
jle
mov
fsts
ds
push
test
fistpl
out
mov
icebp
inc
cmpsb
mov
inc
xchg
sti
mov
add
insb
js
popa
les
mov
cmp
jmp
pop
loope
aas
jmp
sahf
xor
sub
ljmp
cmp
add
js
sahf
or
add
stos
repnz
iret
movsl
inc
loopne
mov
popa
lock
stos
add
loopne
pushf
adc
movsl
xor
cmp
jecxz
shrl
cli
push
out
insb
xchg
mov
rorb
push
mov
fdivrs
xchg
sahf
mov
cltd
movsl
movsb
repz
jno
scas
xor
add
add
add
add
mov
cmc
mov
scas
mov
add
add
adc
aaa
cwtl
mov
xchg
sbb
ljmp
stos
rcl
xor
bound
das
shlb
cwtl
fisubrs
mov
mov
fimuls
lods
push
out
clc
out
pop
jo
mov
stos
adc
push
pop
pop
stc
xlat
pop
sub
in
ljmp
and
sahf
ret
mov
pop
jle
xchg
mov
mov
pop
xor
xor
mov
ljmp
adc
sbb
cmc
jmp
or
fwait
xlat
das
push
pop
fnstsw
xorb
or
insb
dec
xchg
test
xchg
pop
enter
aas
cmp
cmpb
jbe
ret
movsl
cs
jo
mov
inc
jg
inc
dec
mov
ja
jmp
das
adc
and
push
add
and
mov
ret
out
jg
mov
push
insl
fimull
add
jle
jne
pusha
popf
pop
cmpl
cmc
add
add
in
and
mov
xchg
test
fwait
and
pop
std
mov
jmp
push
mov
xchg
loope
push
xor
jmp
sbbl
inc
pop
out
mov
or
adc
sbb
sub
add
stos
mov
cmp
jne
dec
pop
dec
sub
cmp
add
lods
mov
jae
fldl
pop
sarb
call
xor
or
dec
cmc
jecxz
jl
popa
inc
out
sti
dec
mov
xor
mov
push
imul
loopne
shll
jne
daa
insb
push
fisubl
push
xchg
adc
movsl
popf
lret
lods
mov
fsubs
ja
repnz
out
into
leave
test
add
ret
stos
mull
mov
lds
faddl
test
xchg
scas
insb
js
test
mov
push
or
xchg
cld
inc
pop
jmp
aad
outsl
adc
add
sub
scas
fdivr
fnstcw
jecxz
test
ja
add
add
cmp
dec
outsl
or
sub
inc
mov
mull
popa
jmp
mov
push
cmpsb
xchg
mov
mov
mov
ja
lea
aas
push
push
inc
ljmp
pop
cmpsb
stos
cltd
imul
movsb
insl
imul
inc
mov
in
dec
stos
jge
sbb
xor
aas
pop
lods
or
jmp
mov
pop
mov
pop
cmp
mov
out
xor
fstpt
push
add
push
inc
add
xchg
adc
jbe
test
into
jnp
sub
jl
lock
stc
sub
jb
pop
jmp
mov
lods
out
pop
fstps
jb
daa
dec
out
stos
xor
jno
aaa
test
cmpsl
movsb
xor
pop
bound
jmp
xor
inc
cmpsb
out
test
cmpsl
fcoml
cmp
fadd
jle
fimull
ror
add
add
add
xor
jb
jae
jg
sbbl
fisubs
outsl
jae
or
inc
sub
add
adcl
gs
stc
sbb
pop
mov
push
push
je
fadds
mov
test
cmc
dec
cmpl
mov
cltd
jne
jne
pop
bound
flds
mov
add
in
out
pop
fdiv
and
push
jge
jp
add
fs
cmpsl
xchg
jge
jmp
lahf
or
enter
addr16
insb
sub
cmp
add
jl
sub
cs
dec
push
mov
jge
and
sub
ficompl
shlb
in
sbb
inc
cmp
xchg
dec
dec
push
test
lock
xor
in
clc
int3
enter
lcall
mov
cmp
repz
mov
inc
dec
aam
dec
cmp
jmp
or
mov
shr
fdivp
mov
pop
cmpsl
aam
cltd
add
add
ds
in
idivl
js
mov
stos
repnz
clc
cmp
add
pop
or
mov
clc
jne
in
dec
mov
decl
test
mov
sbb
dec
sub
and
and
out
fistps
rorl
push
gs
sbb
cmp
aaa
or
xchg
pushf
imul
rcrl
cmc
lock
inc
jecxz
lret
xchg
popf
in
dec
mov
int3
out
fbld
insl
scas
repnz
add
add
insl
cmp
pop
addr16
xchg
mov
movsl
shl
sbb
stos
dec
or
lock
mov
jo
fmuls
lods
scas
imul
lcall
pop
insl
jmp
push
out
sub
jae
xchg
pop
outsl
jecxz
enter
out
aaa
dec
andb
pop
mov
js
xchg
add
mov
insb
xor
pop
push
lret
ljmp
dec
inc
decb
push
and
and
cs
loopne
call
add
add
jecxz
inc
cli
aas
into
lret
cltd
jle
push
xchg
add
add
rolb
jno
int
ret
add
xorl
mov
mov
jbe
mov
or
sbb
mov
cmp
mov
jp
call
lea
outsb
mov
lea
movsb
pop
test
mov
mov
ret
sub
adc
lea
pop
jle
dec
xchg
cmova
fmuls
mov
hlt
pop
push
call
adc
and
call
pop
xchg
mov
lret
outsl
push
aas
push
xlat
jge
call
dec
mov
inc
inc
in
cmp
stos
and
mov
push
fiadds
mov
out
pop
dec
sub
fbstp
arpl
lods
rol
pop
mov
and
mov
and
aas
loopne
adc
sub
pop
sarl
in
out
fnsave
xor
mov
and
pop
jg
lock
repz
push
dec
cltd
pop
bound
ljmp
add
lcall
ljmp
add
les
mov
mov
call
xor
into
leave
pop
add
pushf
xor
bound
loope
ss
rolb
roll
sub
inc
stos
lods
leave
sbb
and
jns
shl
mov
gs
lret
adc
lret
pusha
adc
add
fistpl
pop
sbb
mov
pop
cmc
xchg
leave
jb
jecxz
pusha
pop
push
mov
outsl
dec
sub
repz
in
stos
mov
mov
sbb
loopne
ljmp
push
jb
fistps
sub
test
scas
int3
dec
test
mov
mov
jbe
lcall
popa
in
pop
cmp
push
sahf
xchg
xor
ret
mov
mov
arpl
pop
jo
inc
adc
and
xor
mov
xor
fcomps
inc
pop
jno
jmp
add
aaa
jae
cltd
dec
mov
jno
mov
add
add
ret
sahf
and
into
enter
add
cmp
cmp
jle,pt
add
movsl
add
mov
wbinvd
pop
mov
insl
push
scas
dec
adc
idiv
or
inc
test
inc
call
fists
xor
imul
jb
in
xchg
mov
mov
xchg
xor
adc
stos
pop
push
imul
pop
das
add
subb
xchg
mov
std
adc
xchg
push
nop
rolb
or
jle
pop
ds
int
pop
fcomi
test
aas
pushl
lock
lods
je
mov
loop
pop
or
push
lds
add
dec
fsubl
rcll
stos
mov
loope
mov
sbb
inc
dec
sbb
jb
sub
jbe
nop
adc
adc
in
mov
outsl
inc
in
mov
ds
into
nop
out
cwtl
jle
push
sub
dec
test
cld
add
add
stc
push
jbe
mov
aad
jae
mov
or
loope
cmpsb
pop
ret
pop
pop
add
lods
pop
lods
shll
scas
xchg
xor
addr16
lret
incb
jecxz
mov
lahf
dec
push
ljmp
movsl
lret
push
and
dec
inc
leave
into
mov
adc
mov
ja
clc
mov
jb
push
icebp
in
adc
call
sub
mov
jmp
push
xor
mov
jl
add
mov
arpl
sub
icebp
jle
push
jb
dec
rorb
hlt
mov
je
mov
bound
lahf
fmuls
dec
repnz
lock
pusha
leave
mov
mov
jo
fidivrs
cli
es
push
fmul
popa
adc
and
mov
mov
jl
and
fwait
jne
loope
adc
mov
add
add
test
jg
push
pop
push
mov
lcall
add
or
es
jo
pop
mov
imul
rorl
cs
xor
movsb
inc
mov
pushf
xchg
hlt
xor
sub
and
aaa
push
pop
int
lret
in
add
aad
ret
jbe
push
jne
loope
sbb
and
les
icebp
or
xchg
cmp
scas
clc
imul
lds
or
jl
lods
pusha
ficoml
outsl
fnstenv
cmp
mov
cmpsl
aas
das
fs
xchg
fs
scas
xlat
mov
xor
xchg
dec
pop
adc
punpckldq
mov
sub
jecxz
fldt
imul
dec
les
mov
pop
stos
mov
pop
inc
sbb
dec
or
repnz
fwait
ja
adc
xchg
cmpsb
add
jo
xor
iret
mov
aad
xchg
push
push
adc
fadds
inc
in
jg
aaa
nop
add
add
movsb
push
in
cmc
jne
sbb
js
ja
xchg
lahf
incb
add
pusha
test
add
dec
pop
icebp
adc
inc
inc
fsubrp
loope
or
ret
fnop
mov
out
xor
pop
xor
clc
jl
inc
stos
sub
adc
sub
inc
inc
cmc
and
xchg
loopne
jmp
cli
jne
or
shlb
jecxz
and
arpl
fcom
xor
lea
in
mov
or
bound
loope
pop
lahf
in
inc
cmp
jbe
repnz
mov
or
and
pop
insl
fists
mov
mov
xor
sub
add
jnp
scas
imul
pop
sbb
in
aam
fs
pop
shll
pop
push
or
sub
enter
mov
es
repz
and
cwtl
jne
outsl
xchg
sarl
repnz
mov
mov
shlb
in
xchg
stc
cmpsl
mov
aaa
inc
cmpsl
mov
push
loop
inc
xchg
jnp
mov
add
add
out
shlb
aas
out
int3
mov
negl
xchg
movsb
incl
add
pop
scas
cmp
clc
stos
mov
dec
pop
sbb
sbb
repz
xchg
inc
sbb
stos
pop
pop
iret
mov
inc
xorb
pop
jbe
loopne
rolb
inc
add
sub
int3
popf
pop
pop
jecxz
add
mov
cmpsl
in
add
push
or
ja
out
fwait
gs
andb
es
dec
inc
shl
mov
add
xchg
mov
pop
ficompl
xchg
cmp
and
xchg
push
fidivrs
pop
pop
stc
out
pop
mov
ss
push
outsb
mov
repnz
xor
ret
push
test
mov
fcomps
xchg
lock
repnz
dec
pop
enter
mov
mov
fcompl
js
daa
jo
bound
fdivs
je
lea
push
xor
xor
mov
mov
imul
inc
or
jne
lods
sub
out
fwait
inc
adc
in
pop
mov
sub
cmp
scas
sarl
pushf
jnp
inc
and
mov
add
add
mov
lcall
or
test
add
add
enter
cmpsl
je
sbb
sub
mov
rcrl
out
jl
imul
mov
adc
xor
pop
or
mov
fmuls
inc
xchg
xor
in
push
loop
sbbb
cli
push
scas
lcall
mov
ljmp
bound
mov
sahf
jl
pop
push
jmp
inc
adc
mov
jg
scas
stos
mov
adc
add
xor
push
ret
mov
mov
push
pop
jmp
cs
icebp
cwtl
inc
stc
in
jg
lods
mov
jno
mov
and
mov
cmpsb
ds
pop
shrb
aas
mov
add
add
inc
imulb
fcomps
and
cmc
mov
out
xor
push
cli
jbe
orl
mov
popf
movsl
clc
add
fxch
ret
xchg
pusha
sub
mov
add
add
ret
bnd
cmc
inc
stos
repz
cmp
add
pop
xor
mov
inc
mov
fcmovu
std
sbb
mov
mov
incb
sbb
inc
mov
mov
push
xorb
inc
out
mov
int3
rcl
stos
sbb
or
popf
paddw
mov
pop
cltd
stc
imul
stos
or
xor
inc
or
add
xchg
stos
or
or
stos
cmpsl
das
push
shll
push
shrl
test
filds
push
xor
xor
mov
out
lods
inc
movsl
or
adc
sti
fptan
xor
pop
int3
mov
imul
adc
xor
mov
mov
push
pop
outsb
add
mov
ljmp
adc
les
adc
sub
mov
mov
test
cltd
clc
mov
sbb
pop
sub
mov
add
add
std
aaa
mov
shll
pop
mov
add
mov
add
inc
fidivrl
lds
inc
cmp
in
outsb
jp
fcmovnu
and
add
pop
shlb
jne
mov
in
mov
test
dec
std
scas
imul
xchg
in
pusha
push
jge
and
sahf
call
inc
mov
adc
add
inc
mov
fdivrl
fwait
jns
in
dec
jg
popa
cltd
mulb
ret
mov
ds
adc
mov
rcr
xor
inc
jae
pop
and
inc
cli
jmp
dec
adc
fsubs
int3
mov
ja
add
out
imul
dec
push
mov
push
movsl
repz
arpl
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
xor
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
ss
add
ss
add
ss
add
ss
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
data16
add
in
test
andb
pop
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
