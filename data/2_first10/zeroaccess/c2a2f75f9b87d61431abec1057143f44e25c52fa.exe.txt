push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
incl
push
lret
jle
xorb
into
xor
xor
ja
or
rorb
cmp
int3
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
adc
sub
in
mov
adc
jmp
cmc
or
push
repz
test
std
test
mov
lcall
sub
jp
jb
rclb
jg
test
mov
adc
sti
fcoml
and
dec
inc
ljmp
clc
ds
cld
outsl
xchg
push
clc
mov
sbbb
xchg
pop
inc
mov
add
lods
subb
sarb
xor
pop
mov
pop
xlat
ret
push
push
cmpsl
pop
sbb
pop
aam
insl
inc
movsb
xor
in
mov
cmp
std
sub
sarb
xor
sub
jecxz
jbe
jmp
mov
ss
out
shll
mov
popf
adc
test
js
iret
loopne
outsb
imul
and
lock
call
mov
push
mov
lods
in
out
in
test
mov
dec
mov
cli
pop
adc
fsubrs
jmp
hlt
aas
jl
pop
arpl
and
imul
push
add
inc
dec
fnstenv
mov
sbb
mov
ja
pop
aas
xor
aad
ret
inc
ret
ret
out
ljmp
cld
mov
inc
dec
movsb
in
cld
mov
inc
mov
addr16
lcall
in
aad
jge
cwtl
int
push
cmp
mov
sub
icebp
mov
sbb
mov
les
fisubl
mov
fdivrs
push
fnop
mov
addb
mov
lret
pop
adc
pop
ret
shll
jg
fadds
fidivrl
jle
pop
jp
cld
leave
ret
pop
cmp
adc
xor
fistl
add
outsl
mov
cmp
dec
mov
jno
dec
xchg
mov
pop
cld
clc
and
and
outsb
movsb
pop
rcrl
call
ljmp
pop
mov
inc
aaa
movsb
sbb
or
inc
into
andb
sbb
fs
inc
xchg
add
inc
pop
push
sub
pop
mov
jg
test
jns
xchg
jb
ret
mov
pop
and
shll
jg
and
pop
scas
sub
ret
sub
nop
and
cmp
xor
int
push
popa
and
sub
sbb
cli
icebp
clc
out
dec
sbb
and
fwait
ss
fistpl
scas
xchg
inc
jmp
xchg
pop
sbb
and
push
repnz
in
movsl
inc
push
scas
cltd
inc
sahf
int3
es
aaa
dec
das
nop
jno
jbe
mov
mov
iret
fstpl
xor
jo
push
insb
movsb
call
sub
inc
clc
xor
push
push
inc
add
inc
in
xor
enter
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
andb
jno
jle
jno
jle
stc
fildll
cs
jne
xor
sbb
push
mov
mov
mov
int
push
push
shr
iret
sub
dec
mov
leave
inc
cmp
call
ficomps
xchg
lret
pop
sbb
mov
aam
xchg
push
jmp
pushf
pop
adc
inc
jl
mov
mov
mov
mov
jp
jecxz
call
pushf
imul
or
xchg
cltd
mov
fwait
sbb
dec
repnz
pop
lahf
mov
and
ja
hlt
incl
sarb
xchg
xor
mov
in
fcoml
cwtl
dec
pop
ret
xor
pop
scas
into
test
dec
push
lods
clc
mov
xlat
jg
or
ret
lahf
adc
stos
filds
fldenv
ret
dec
jbe
jae
jecxz
push
dec
hlt
xor
add
gs
ret
enter
mov
repnz
inc
loop
popa
inc
add
shrl
jmp
xor
aad
scas
in
adcl
pushl
out
ror
mov
lds
stos
mov
inc
jl
int
or
and
loop
xchg
outsb
xchg
test
aad
inc
andb
push
mov
idivb
call
and
inc
pop
test
ret
sbb
mov
fstpt
outsl
or
idivb
popa
sbb
lcall
mov
adc
add
stc
pop
add
sti
lret
cmpsl
cld
scas
mov
pushf
push
iret
pop
mov
xor
ret
mov
mov
repz
cs
leave
ret
or
pop
jno
out
mov
lret
cmp
stos
movmskps
jl
mov
icebp
movsl
sbb
mov
cs
push
sbb
dec
lods
cld
push
cld
das
sbb
cmp
mov
cwtl
sbb
gs
cmc
and
outsb
clc
pop
xchg
cmp
fistps
lcall
xchg
xchg
cwtl
or
adc
sbb
iret
jnp
or
fnstsw
cmp
xor
sar
or
sub
mov
xlat
sbb
adc
xchg
in
jmp
jge
es
xchg
loopne
push
sbb
xchg
push
out
xor
jae
fwait
shlb
sti
jmp
mov
fistl
jb
imul
mov
pop
jo
sti
ss
rcrl
insb
xor
movsl
pop
std
dec
xchg
add
xchg
adc
xor
test
test
mov
shll
xchg
xor
push
jmp
mov
adc
mov
mov
mov
dec
shr
push
cmp
ds
adc
fisubrl
mov
add
dec
and
xchg
xchg
mulb
push
lahf
imulb
hlt
dec
shrb
inc
push
loop
jae
sarb
or
rcrb
loope
mov
lock
cmp
clc
outsb
fnstenv
add
out
leave
push
dec
loop
out
mov
dec
scas
in
dec
and
pop
jle
and
lahf
repz
dec
lret
scas
mov
negl
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
das
imul
push
jne
jle
jno
jle
repnz
mov
test
test
mov
aam
add
mov
jnp
repz
mov
inc
mov
xor
aaa
mov
dec
leave
or
movsb
aas
ja
mov
and
int
cmpsl
les
out
mov
dec
xor
iret
jmp
fcoms
push
push
mov
or
into
lahf
cltd
xor
push
pop
and
push
lahf
movsl
je
pop
xor
repz
aas
inc
stos
fnstsw
gs
test
add
lret
jbe
mov
test
adc
inc
push
cmp
lcall
rclb
dec
shrb
stos
dec
pop
in
imul
inc
cmp
mov
mov
jg
sbb
push
insb
mov
mov
in
cld
add
push
mov
inc
sbb
and
mov
stos
push
fwait
out
sarl
mov
or
dec
mov
add
dec
mov
mov
in
gs
ficoms
jl
cmp
roll
xchg
push
rol
jb
cld
dec
aam
mov
cld
jbe
call
sbb
call
cmp
and
and
jl
sbb
inc
aas
cmp
andb
pop
xor
dec
dec
xchg
sbb
je
enter
test
cmc
sub
xchg
insl
push
jne
dec
and
add
dec
popa
std
scas
aaa
jne
cmp
dec
pop
jmp
cmp
stos
jne
lods
and
pop
aad
stc
mov
ja
inc
int
imul
mov
mov
cwtl
mov
lret
pop
cs
andb
cmpsb
popa
bound
mov
inc
push
fldenv
int
fistps
jge
mov
mov
in
aam
popa
or
stos
xor
fildll
pop
ds
pop
fsts
fiaddl
mov
push
and
adc
je
xchg
repz
scas
inc
test
dec
pop
add
jp
add
arpl
loop
jle
add
orb
fadds
pop
stos
cld
dec
in
inc
test
fdiv
pusha
and
xor
scas
mov
mov
or
xor
or
pop
je
jge
roll
and
icebp
add
sbb
pop
arpl
mov
fildl
lret
inc
clc
gs
fnstcw
add
in
jmp
or
inc
xchg
lahf
dec
jg
mov
jmp
mov
fildll
clc
xor
xchg
fcompl
or
test
inc
xchg
mov
lods
jmp
rcll
imul
call
jno
repz
sub
jge
fdivr
xchg
fnstenv
jecxz
lcall
xor
lret
inc
lds
adc
sbb
and
push
xchg
dec
out
xchg
daa
call
int3
aas
lods
cmc
pop
adc
gs
push
lret
pop
icebp
call
xchg
mov
push
pop
neg
test
xchg
inc
xchg
sub
jne
sbb
mov
fsubl
out
lret
jo
push
xlat
movsb
sbb
xor
mov
shlb
cli
repnz
in
mov
nop
scas
push
addl
fs
fsubl
andl
in
jecxz
div
movl
jmp
pop
nop
jl
jge
and
jns
or
or
xorb
jle
add
in
test
mov
fucomp
mov
xor
fiaddl
push
lods
aas
fwait
mov
mov
cld
in
in
push
mov
movl
mov
cld
inc
xchg
mov
lock
jne
aad
fstpl
arpl
test
or
sar
pop
xlat
jnp
cmp
adc
dec
sub
pop
and
ror
mov
or
pop
out
mov
adc
pushf
sub
out
adc
mov
jnp
or
sti
or
fdivrp
or
enter
mov
xchg
lock
mov
xchg
or
xchg
push
mov
nop
cli
lret
push
cmpsl
loop
aam
imul
jnp
adc
lret
or
mov
stc
and
push
gs
mov
leave
push
out
sti
mov
pop
xchg
xchg
jp
in
pop
shr
cmpsl
cmpsb
pop
sbb
repz
insl
fists
cmpsl
or
movsb
cltd
jp
imulb
mov
xlat
mov
xchg
mov
testl
hlt
cmpsb
aam
pop
jl
fidivs
inc
into
fildl
aas
pop
and
loopne
push
es
jb
call
movsb
test
mov
or
xchg
jo
pushf
leave
push
mov
stc
adc
in
adc
jnp
call
mov
movsb
ss
mov
out
enter
or
xchg
and
adc
cli
ret
ljmp
add
or
mov
mov
sbb
testb
cltd
test
cmpsl
fstpl
inc
enter
aam
xor
cld
inc
xchg
fsub
mov
test
xchg
or
inc
push
fs
prefetcht0
iret
test
pop
jecxz
cmp
push
dec
outsl
movsb
scas
xchg
xor
jbe
rolb
xchg
subb
sbb
ficoml
sbb
lds
rep
enter
push
lods
mov
mov
push
cmpb
mov
sub
int
ret
imul
and
jno
sbb
repnz
fdivl
stos
dec
ret
mov
subl
out
mov
imul
push
pop
add
add
leave
push
sbb
orb
nop
sbb
ss
in
cmpsl
inc
xchg
lods
arpl
xor
fldt
icebp
mov
test
leave
movl
sti
mov
sbb
mov
pop
push
rorb
bound
jb
loope
into
popf
pop
jns
sub
aas
push
daa
lcall
cmp
adc
gs
xor
mov
sbb
push
aam
or
addb
negb
cmp
mov
add
push
mov
enter
paddd
cmp
popa
addl
sub
sbb
fwait
mov
in
adc
insl
adc
mov
xchg
push
leave
lock
and
push
jl
js,pt
mov
fldenv
push
loop
push
lret
cmpsb
call
sarb
cmp
shrb
lods
lds
xchg
push
int
mov
mov
or
mov
movl
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
push
or
aaa
jae
push
cld
int
ljmp
or
jno
mov
inc
clc
jmp
jmp
push
scas
nop
cmp
mov
push
adc
mul
jl
dec
test
movsl
lret
push
mov
pop
out
and
inc
or
test
add
int3
mov
insl
sbb
cli
cmp
enter
jecxz
jp
fsts
xchg
outsb
mov
pop
ret
add
iret
clc
mov
mov
mov
jo
sub
push
sub
inc
rcrb
dec
test
pushf
jle
imul
and
std
push
loop
jge
and
and
xchg
push
mov
mov
lret
xor
mov
and
sbb
shll
enter
pusha
sbb
and
cwtl
popa
shr
pop
insb
decl
lods
dec
and
fwait
push
movsl
mov
mov
jae
aad
js
cltd
jge
pop
sarl
xchg
push
or
int3
popa
xchg
andl
out
lret
pop
cmp
stc
fisttps
xor
clc
aam
push
add
outsb
mov
push
test
pop
scas
push
repnz
dec
shll
add
add
xor
outsb
data16
push
jb
stos
loop
data16
aaa
test
inc
cwtl
adc
inc
lea
jo
adc
xor
pop
cli
inc
jae
out
adcb
xor
mov
cmp
imul
cmc
test
and
inc
pop
lods
hlt
sub
jns
les
jbe
cld
jle
cmpsb
sbb
jmp
jnp
loope
cs
dec
stc
inc
ljmp
and
fstpt
add
mov
addr16
cmpsl
decl
fcmovnb
insb
int
xchg
add
adc
fstpl
sbb
cmp
rcrl
jno
lret
sub
mov
nop
scas
push
mov
ret
xchg
sti
or
ds
cmp
mov
lds
cmp
adc
pop
cmp
push
cmc
gs
clc
pusha
sub
lods
mov
mov
jp
scas
xor
ret
jmp
ret
and
mov
mov
lock
out
xor
imul
das
ss
sbb
mov
dec
out
jno
and
inc
sub
and
loope
fidivrs
jo
in
cmp
push
add
jmp
mov
mov
lock
inc
mov
movsl
ljmp
push
pop
lds
pop
icebp
outsb
movl
and
mov
sbb
mov
popf
loopne
mov
fstp
mov
lret
dec
mov
stc
lcall
es
mov
pextrw
push
mov
dec
daa
out
rcll
das
push
rcrb
adc
js
out
xchg
mov
xchg
mov
int3
mov
das
adc
xchg
sbbb
xor
jbe
aam
das
fwait
loop
ret
sbb
sub
imul
push
call
dec
loop
imul
add
sbb
mov
and
gs
mov
xchg
or
jecxz
push
cld
fcoms
push
and
push
fistl
sbb
and
mov
push
xchg
mov
pop
and
cmc
aas
imul
sahf
clc
movl
mov
movl
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
jb
mov
jle
jno
jle
and
cs
dec
xchg
in
movsl
push
or
loope
mov
icebp
pop
jp
clc
stc
mov
jge
dec
lods
in
mov
outsb
mov
enter
js
xchg
push
lea
mov
scas
adc
jnp
push
in
sbb
dec
jg
lea
sbb
sahf
stos
push
mov
test
mov
sarb
loopne
pop
mov
sub
and
pop
push
or
mov
xchg
js
lcall
lret
xchg
aas
adc
dec
add
push
inc
ds
mov
js
lea
jns
mov
in
xchg
inc
add
mov
fisubs
lret
lods
loope
xor
inc
fcom
jb
sub
dec
pop
sub
fists
call
mov
dec
add
dec
fs
movsl
lret
mov
movsb
test
popa
daa
loopne
mov
mov
jns
pusha
xchg
outsb
pop
dec
jnp
xchg
cmpsl
fsubr
mov
out
mov
and
mov
xor
sbb
or
dec
roll
add
popf
enter
pop
mov
test
testl
out
into
or
ljmp
fiadds
in
out
imul
inc
inc
adc
or
shrl
add
lods
mov
mov
sbb
push
push
addr16
aad
xor
jmp
mov
lds
mov
xorb
aaa
add
out
shrl
add
cmp
and
icebp
arpl
out
insl
inc
je
addl
inc
pop
enter
and
or
lahf
out
fsub
inc
icebp
xor
fistps
adc
es
cmpsl
sbb
push
bts
into
adc
add
fs
xor
cmp
sbb
stos
cmova
in
adc
pop
in
das
sub
dec
lods
xchg
loope
roll
dec
push
or
and
push
mov
jne
or
or
roll
dec
cvtps2pd
inc
lret
movsl
jns,pt
mov
jmp
xor
jbe
outsb
lds
dec
sti
adc
ljmp
mov
add
in
sub
mov
push
scas
and
lods
jge
dec
out
ud0
addr16
pop
push
and
jmp
std
push
add
jecxz
mov
mov
xchg
addr16
loope
cmc
dec
jmp
addl
mov
dec
or
xchg
mov
fucomp
aad
aas
jo
sub
mov
ljmp
push
dec
sbb
pop
jecxz
add
out
lods
sub
mov
mov
ds
push
sub
jne
mov
addb
je
fcomp
xchg
and
cmp
cli
imul
jp
cmpsb
mov
rcl
je
mov
jecxz
and
cmp
or
lret
mov
push
ljmp
call
fbld
std
rcll
jo
push
in
scas
cmpl
insb
inc
bswap
fld
sahf
int3
stc
popa
nop
jne
jnp
fisubs
sbb
rorl
or
rolb
pusha
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
mov
cwtl
out
jle
xorb
sarl
push
pop
dec
dec
mov
inc
movsl
jae
test
and
push
popf
or
jg
sbb
dec
mov
scas
inc
dec
dec
scas
mov
nop
fmul
sub
jns
sub
or
cmpsl
stc
loop
pop
sar
mov
sub
push
fnstenv
ljmp
imulb
add
inc
cmpsb
popa
ret
cli
sbb
fcomp
mov
scas
pop
outsl
cltd
loop
inc
jmp
dec
mov
pop
xchg
inc
or
out
xchg
arpl
pop
mov
add
ja
hlt
std
jns
mov
cmc
cmp
lcall
add
jbe
fwait
dec
loop,pn
fs
pusha
shr
sbb
sahf
jecxz
cmp
and
sub
xchg
xor
das
add
loopne
dec
mov
gs
pushf
jbe
je
inc
jno
adc
pop
dec
push
xchg
jg
aam
sahf
adc
leave
or
test
movsb
sub
out
mov
inc
push
ficomps
mov
lods
int
call
sbb
pop
dec
or
ror
mov
sbb
out
in
and
cmp
ja
jg
xchg
lret
inc
dec
inc
andl
add
cmp
sbb
call
jmp
mov
lcall
adc
repnz
fwait
and
mov
inc
cmp
into
pop
ljmp
ja
or
stc
stc
icebp
cmp
xor
cmp
sarl
xchg
xchg
nop
mov
mov
jmp
faddp
cmc
xchg
cmp
insb
mov
imul
pop
imul
loope
mov
jp
pop
insb
sti
sarl
lock
pusha
cmpsl
loop
bnd
push
fisubrs
and
icebp
pop
cmp
insb
cmp
mov
add
pop
lods
out
std
mov
lods
add
xchg
jb
dec
mov
sahf
les
adcl
pop
clc
movl
or
shll
mov
repnz
fsubrl
dec
fidivrl
jns
lods
xchg
enter
cmp
movl
or
fmulp
imul
xor
subl
ja
pop
mov
out
push
lret
cli
or
and
repz
fdivl
inc
sarl
aam
movsb
mov
mov
sbb
in
adc
and
dec
scas
in
sbb
movsb
jo
mov
sub
mov
out
iret
pop
mov
push
mov
pop
in
shrb
pop
das
repz
pop
adc
xchg
xor
in
test
xchg
add
cmp
call
lock
clc
dec
cmp
adc
aas
int
aad
std
xor
add
stos
ljmp
loopne
xchg
inc
sbb
mov
mov
or
incl
sbb
jns
inc
aas
jb
jge
mov
lock
std
in
push
jp
stos
mov
push
mov
outsl
mov
pop
shrb
mov
or
push
adc
addr16
roll
cmpsb
jne
scas
or
int3
jecxz
sti
bound
sti
cmp
movsl
inc
aas
dec
lahf
cmpsb
pop
and
inc
xchg
int
sbb
jae
sub
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
jb
mov
or
jle
xorb
push
lahf
lret
dec
fdivrs
loopne
stos
popf
std
xor
imul
push
add
repz
arpl
xchg
das
repz
fdivr
les
push
enter
insl
rorb
jecxz
int3
and
call
inc
mov
mov
popa
inc
insb
ljmp
idiv
test
test
sti
call
inc
xchg
dec
jbe
xor
mov
dec
scas
mov
popf
mov
xchg
int
cmp
mov
scas
push
jge
push
push
mov
add
stc
mov
clc
test
mov
sbb
adc
orl
in
mov
sbb
insb
mov
jne
lods
mov
pop
loope
xchg
add
jl
ss
orl
xchg
in
and
sub
inc
lahf
xchg
mov
popa
pop
add
pop
sub
movsl
cmp
insl
sbbl
insb
dec
mov
and
mov
dec
add
add
das
lods
insb
adc
dec
mov
jmp
pop
movsb
mov
jmp
mov
daa
gs
cltd
lret
adc
clc
bound
dec
sub
jne
jmp
leave
testb
jb
mov
outsb
xorb
rcr
add
dec
jbe
out
imulb
ret
push
pop
or
xor
mov
xchg
and
popf
xchg
dec
dec
push
jnp
inc
cmp
mov
stos
iret
xchg
fisubl
pushf
jle
outsl
dec
pop
pop
popf
jno
push
mov
mov
push
clc
out
inc
or
push
in
pop
das
or
subl
xchg
lods
push
lock
in
mov
int
nop
shrb
cmc
inc
dec
xchg
ds
repz
shrb
mov
lods
cmp
notl
adc
cmp
fildl
clc
int3
rcrb
outsl
push
or
test
insb
pop
jecxz
mov
push
movsl
int
aad
dec
dec
adc
lahf
fwait
xor
jl
inc
lret
mov
inc
lahf
mov
repnz
aam
pop
aad
aad
inc
push
adc
pusha
xchg
cmp
xor
push
clc
inc
cwtl
in
add
jne
insb
loopne
ficompl
fsubrl
call
dec
xchg
jbe
cmpsl
mov
orl
inc
jae
pop
mov
push
pop
aaa
pop
or
mov
sti
ret
dec
xor
adcb
hlt
sbb
out
dec
stos
pop
outsl
inc
xor
pop
ljmp
adcb
shll
out
fwait
insb
mull
jmp
jg
cmp
js
pushf
sbb
jmp
stos
xor
xchg
aad
cmp
aam
mov
cwtl
cmp
leave
pop
addl
frstor
mov
push
iret
mov
push
pop
fists
ficomps
ja
xchg
lds
cmp
es
cmp
sar
in
scas
out
in
pop
out
repz
dec
test
adc
mov
daa
xlat
jg
adc
popf
jnp
push
jo
cli
movsb
or
sbb
sub
lods
hlt
insb
enter
arpl
pop
stos
std
xor
lea
out
into
mov
mov
mov
lcall
sbb
mov
lcall
stc
lods
inc
adc
fbld
inc
cld
jmp
jl
sub
jge
jge
inc
sbb
fistpl
sbb
xorb
pop
movsb
pop
adc
and
mov
mov
je
arpl
daa
mov
out
mov
jbe
fs
ffreep
vcvttpd2dq
jno
js
int
stos
lods
rcl
rcr
cld
inc
and
mov
in
cmp
sub
and
or
mov
sub
in
mov
dec
jae
inc
sbb
xchg
pop
mov
les
loope
inc
adcl
xor
mov
shrb
xchg
dec
push
or
movsl
unpckhps
mov
xchg
or
xchg
into
imul
das
xor
repnz
shrl
add
xchg
add
add
pop
jae
fldenv
cs
jnp
hlt
icebp
sbb
jno
xor
test
icebp
jg
add
int
cmp
mov
inc
pop
imul
mov
mov
sti
push
mov
scas
jge
or
jg
adc
or
adc
jno
aam
adc
jecxz
push
popf
sbb
cltd
jbe
push
mov
pushf
loop
repz
xor
fistps
mov
jg
lea
in
pusha
mov
inc
jne
or
sbb
mov
jae
cmpsb
lret
enter
arpl
aaa
ficoml
mov
add
mov
xchg
stos
divb
shr
into
aam
inc
cs
in
gs
adc
xchg
int
xchg
sahf
xchg
pop
mov
lea
sbb
ljmp
mov
sbb
or
ja
mov
jl
ret
rcrl
jnp
push
dec
in
cmp
test
pop
jmp
xchg
pop
inc
xchg
clc
mov
push
aaa
push
enter
inc
xchg
or
sbb
inc
adc
xor
or
mov
or
pop
lcallw
sbb
pop
xor
adcl
stos
xor
in
fldt
pop
mov
enter
cmp
cmp
xchg
pop
mov
pop
std
sahf
mov
or
sahf
sarl
ja
test
push
test
sbb
add
aam
jo
clc
stos
push
mov
mov
inc
lret
out
xor
jmp
or
xchg
inc
lods
test
stos
stos
data16
mov
pop
bnd
jmp
out
jno
push
lock
mov
mov
icebp
mov
dec
js
cmp
nop
loopne
xchg
jne
setg
lahf
loopne
lock
dec
pop
mov
es
popf
dec
xchg
in
push
sub
push
frstor
xchg
inc
jg
cltd
mov
enter
xchg
cld
loopne
cmp
pop
mov
or
xchg
pop
and
sahf
imul
and
lcall
or
push
fcomps
and
pop
insb
mov
loope
and
dec
sahf
lock
inc
inc
add
jge
inc
mov
push
loopne
or
stos
loopne
add
bound
in
repnz
inc
and
and
icebp
mov
cmpsl
sbb
jp
mov
adc
adc
dec
imul
add
add
sbb
cli
cmc
je
add
out
in
dec
imul
dec
push
aas
jb
aam
stos
out
inc
mov
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
out
loope
and
jle
xorb
xor
adc
movsl
dec
cld
mov
popa
idivl
stos
mov
mov
add
and
inc
mov
cmp
pop
or
add
push
push
add
xchg
ret
push
mov
ja
mov
call
mov
push
sub
mov
jo
cmp
xchg
fisubs
and
scas
je
push
ja
jns
jmp
ljmp
inc
jae
pop
jmp
cs
sub
shr
push
add
test
adc
cld
aad
add
xor
in
xchg
pop
notl
mov
repz
and
jb
cmp
mov
lea
mov
fwait
out
dec
inc
mov
inc
cmpsb
into
xor
pop
aam
xor
or
pop
hlt
insl
sub
xadd
jb
sbb
adc
mov
sub
subb
lret
int
dec
nop
sub
mov
dec
call
lods
verw
testb
xor
lods
outsl
scas
adcl
fistl
cmp
cmp
and
xor
jmp
ret
lret
cmp
xchg
ficoms
pop
aam
aam
repnz
int
stc
scas
sub
test
push
outsb
and
sbb
sbb
push
fmulp
push
and
sbb
sar
xor
test
data16
xor
loope
jo
inc
pop
sbbl
or
mov
xor
pop
lret
sti
int
xor
scas
cmpl
xlat
das
mov
lock
dec
mov
push
inc
mov
sbb
in
rclb
lods
stc
push
dec
lock
add
es
pop
inc
sti
xchg
fdivr
xchg
movsb
shlb
mov
cli
sbb
scas
mov
sub
div
inc
inc
or
inc
mov
xor
fistpl
jns
or
lods
jle
xorb
imul
xor
xchg
stos
bound
cmp
xchg
add
xchg
xor
jbe
fcoml
fildll
testl
setns
leave
stc
sahf
inc
test
imul
subl
lret
pop
xorl
or
jbe
inc
mov
xchg
xchg
les
outsb
in
int
mov
or
jo
fidivrs
clc
bound
in
pop
pop
mov
cmp
push
add
sub
test
sbbb
lock
xor
popa
jmp
rcll
iret
divl
xor
movsl
mov
add
js
repz
mov
pop
pop
or
xor
mov
lcall
xlat
imul
dec
and
sbb
push
loope
pushf
or
test
mov
inc
jo
xchg
cs
sbb
sub
mov
cltd
and
xor
loop
hlt
sbb
push
cmp
loopne
fsubrl
ja
dec
faddl
fadd
and
sub
les
rcll
xor
push
ds
cmc
sti
imul
push
push
mov
sbb
push
cltd
xchg
xchg
and
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
insb
mov
jle
mov
jle
addr16
imul
mov
fcomps
pop
pop
mov
mov
or
xor
outsb
movsl
pop
or
or
and
in
inc
pop
std
push
imul
sub
pusha
xor
lods
fildl
dec
arpl
dec
lahf
push
jmp
ret
sub
dec
sub
sbb
push
lret
mov
adc
ss
sbb
pop
insl
pop
pop
mov
les
add
andl
push
sbb
in
adc
ljmp
mov
sbb
sub
leave
sarl
adc
mov
cmp
push
inc
addl
push
jle
stc
test
sarb
sbb
addr16
scas
movsb
lret
push
mov
jle
xchg
mov
and
xor
push
fwait
adc
inc
lret
das
dec
in
xor
in
sbb
mov
push
xor
jl
nop
hlt
ja
je
in
lret
scas
nop
jae
xchg
test
movsb
cmpsw
shll
jae
into
jge
mov
sub
sub
mov
es
mov
xorb
out
adc
jl
pop
adc
rclb
and
jo
es
dec
inc
lret
cwtl
or
movsb
lds
shlb
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
popf
fsub
ret
adc
mov
jle
xchg
add
mov
cmp
repz
cmp
stos
mov
mov
inc
push
jle
sbb
xchg
aam
xchg
test
stos
leave
cwtl
add
rolb
pop
aas
movsb
push
or
adc
pop
ds
inc
push
mov
xor
mov
sti
xchg
inc
pop
push
xchg
out
mov
movsl
movsb
adc
psubq
mov
jg
mov
repnz
addb
xchg
out
xchg
ljmp
loope
xor
xchg
test
push
ja
sub
jae
sahf
loopne
pusha
push
lret
mov
sbb
dec
push
adc
inc
mov
pop
test
xchg
outsl
movb
sbb
cli
pop
dec
imul
das
insl
sub
mov
mov
and
jmp
out
add
cmpb
xchg
iret
out
xchg
or
pop
hlt
xchg
cli
leave
push
jg
fprem
cld
roll
xchg
loopne
mov
mov
mov
pop
mov
dec
cmp
loopne
cmp
xchg
cwtl
out
data16
std
push
dec
pop
dec
jl
imull
mull
xchg
lods
repz
sbb
push
ficoms
xchg
xor
sbb
mov
jbe
mulb
ljmp
das
push
pop
ret
xchg
imul
sub
inc
sbb
adc
in
sbb
jmp
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
faddl
lods
xchg
add
sub
xlat
cmpsb
pop
xorb
imul
jne
pop
pop
into
jbe
repz
repnz
xchg
push
or
rclb
scas
shll
mov
sub
or
jmp
js
test
in
stos
mov
call
jmp
pusha
movsb
xchg
iret
sbb
shl
ficompl
std
mov
lds
ljmp
sbb
push
jge
adc
xor
mov
jbe
pusha
mov
ret
ljmp
sub
movsl
repz
test
or
cwtl
xchg
aaa
imul
xchg
out
addr16
test
fcmovnu
aad
aam
lds
xchg
cmp
sbb
clc
stos
shll
pop
jnp
cmp
lretw
jno
pop
jg
cmp
inc
insl
push
push
fwait
xchg
aas
mov
pop
dec
imul
mov
je
arpl
lret
cmp
jne
dec
sub
sub
rcrb
cmc
dec
int3
xchg
cmp
inc
cmp
sub
fdivrl
das
mov
cs
jne
pop
jmp
imul
inc
hlt
dec
adc
aas
int
dec
es
xchg
stos
sub
adc
sbb
mov
inc
sub
test
mov
in
imul
jae
pop
insl
add
mov
jmp
xchg
push
int3
jns
imul
inc
sbb
cli
in
push
jle
mov
jle
mov
or
cltd
xchg
mov
pushf
lds
inc
fisubrl
jae
inc
jmp
in
ret
or
xor
mov
lret
add
add
lock
stos
lock
and
push
sbb
cwtl
addl
dec
imul
stos
fidivl
lock
stos
imulb
pop
mov
and
pop
sbb
cltd
lock
xor
inc
push
and
and
movsl
clc
mov
ss
popa
scas
sub
roll
xchg
adc
daa
shl
jmp
dec
out
push
sti
stc
test
dec
mov
dec
cwtl
adc
mov
loopne
add
sub
cmp
mov
fsubl
jge
mov
sub
jnp
rorl
add
pop
fcoms
mov
sub
and
pop
xchg
push
add
mov
sub
and
in
mov
mov
adc
cmp
lahf
dec
xlat
dec
sbb
fwait
clc
mov
cmpsl
pop
xor
and
les
call
inc
and
addr16
xlat
test
shll
and
adc
push
lcall
stos
loop
jmp
pop
push
mov
sbb
xchg
mov
mov
dec
pop
xchg
shrl
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
aas
jp
jle
mov
jle
pop
out
fcom
sahf
sub
pop
xchg
sti
xor
aaa
in
cld
or
or
nop
and
aas
mov
cmp
shll
in
xchg
jo
pop
ljmp
add
sbb
sub
sub
mov
ss
popf
push
out
out
dec
jp
pop
push
or
mov
je
push
loope
popa
dec
fsubp
cmpsb
leave
cmpsb
imul
mov
stos
push
lds
pop
adc
dec
add
sbb
ret
arpl
mov
mov
ret
mov
out
or
and
dec
repz
cltd
xor
dec
gs
push
into
cmp
jp
lcall
fstps
jmp
or
test
es
clc
cld
nop
cmpsl
in
stos
inc
jae
popa
fidivl
roll
lds
stos
sub
mov
addr16
int3
sub
stos
mulb
cmpsl
shll
stos
jne
sti
in
mov
xchg
xrelease
xchg
cmp
mov
leave
arpl
push
add
inc
stos
lcall
inc
loope
lea
or
xor
pop
adc
jg
sub
mov
mov
push
add
aas
imul
mov
pop
sbb
das
inc
pop
shll
jle
test
and
call
xchg
in
jmp
jge
lcall
dec
and
adc
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
mov
imull
jle
mov
jle
lret
mov
pop
xlat
mov
aaa
mov
test
into
aas
cmpsl
and
dec
test
jns
sub
jecxz
aaa
mov
adc
sub
push
mov
mov
push
jmp
push
mov
inc
mov
lods
imull
push
sub
in
dec
inc
out
lods
imul
hlt
icebp
call
int
shll
pop
push
dec
insb
xchg
jg
pop
mov
xchg
dec
insl
xchg
std
cmp
mov
popf
xchg
xchg
sbb
or
sub
pop
js
je
jle
mull
inc
insb
loop
std
lds
push
push
mov
jge
xor
outsb
mov
cmp
xchg
subb
cmp
push
in
in
jo
push
sbb
push
ds
adc
aad
repnz
repnz
sbb
inc
or
xor
roll
dec
pusha
mov
xor
imul
mov
adc
and
testl
ljmp
je
addb
sbb
stos
into
jno
jnp
loopne
xchg
fcomps
jmp
sub
and
lcall
and
cli
push
loopne
mov
mov
fcmovbe
shlb
push
inc
jae
insl
sub
mov
dec
movsb
popf
jmp
mov
jns
jno
test
ja
rolb
push
in
mov
mov
mov
mov
jmp
andb
addw
testl
jle
xlat
daa
shl
out
push
in
cli
clc
xchg
movsb
mov
sti
xor
jmp
mov
pop
mov
mov
mov
stc
loop
push
call
es
imul
lods
push
push
or
inc
imul
cwtl
inc
in
enter
cmp
dec
sub
sub
mov
loopne
lods
out
int
sbb
aaa
stc
sti
fnsave
pop
jnp
jg
mov
mov
fdiv
pusha
stc
fninit
xchg
jae
cmp
pop
inc
shlb
mov
addl
or
and
dec
rcl
push
hlt
or
pop
ljmp
loop
aas
test
cmpsb
fmuls
push
pusha
cmp
mov
adc
push
fwait
stc
hlt
sub
outsb
xor
es
fldcw
pop
cmp
enter
jge
pop
mov
xchg
cs
add
mov
push
in
inc
nop
push
mov
outsb
sbb
cmpsb
push
dec
pop
dec
sbb
fucom
fnstenv
in
and
stc
ja
inc
xor
and
xlat
iret
and
xor
in
push
xor
jbe
cli
fmull
pop
cmpsl
insb
mov
pushf
or
dec
cmp
jae
pushf
mov
mov
aaa
sbb
inc
lods
jg,pn
inc
jg
out
jbe
push
jecxz
or
imul
and
pop
sbb
adc
sub
in
scas
cltd
push
cmp
in
jmp
test
xor
push
mov
xor
es
sub
jle
jg
jle
xor
mov
sub
jmp
jbe
frstor
fnstcw
popa
cmpl
rclb
imul
sar
jle
insb
out
fldcw
mov
push
into
add
outsb
or
sub
in
pop
and
mov
cmpsl
pop
add
repnz
cmp
mov
pop
mov
lcall
daa
cs
imul
in
fmull
xchg
pop
outsb
push
jp
or
mov
nop
sub
loopne
xchg
xor
clc
jl
push
xor
cmp
jle
int
mov
jnp
cli
shll
dec
outsb
loop
cmp
fcomi
rcrb
jg
sub
dec
pop
pop
and
filds
pusha
inc
pop
xor
in
push
jbe
inc
adc
ret
outsl
lret
dec
test
ja
fstp
movl
loopne
pop
cmpsl
xchg
sbbb
arpl
and
js
movsb
and
push
mov
int
xchg
lock
cwtl
lret
loop
ds
insb
test
insb
enter
les
call
hlt
mov
fs
fisubrs
gs
mov
dec
xchg
xor
jecxz
cmp
ret
push
or
test
push
mov
lcall
inc
push
xchg
repz
sub
cmpsb
cmp
rclb
gs
mov
orb
jb
pop
lods
cmp
push
ljmp
adc
xchg
cmp
push
or
hlt
xor
add
jmp
in
push
adc
movsl
aas
push
stc
inc
mov
jle,pn
mov
jle
mov
movsl
outsb
int
fistl
jmp
bswap
es
out
stc
adc
push
stos
adc
cmp
test
push
sbb
cmpb
mulb
ret
imulb
xorb
mov
leave
or
adc
lahf
lahf
sar
mov
add
xchg
lcall
rcll
sub
popa
out
sbb
cli
lea
out
imul
jmp
stc
flds
add
adc
sbb
mov
push
xor
mov
lret
and
push
xchg
fs
or
cwtl
in
andl
pop
lahf
lods
mov
jecxz
lret
jp
inc
std
jmp
xchg
lods
int
div
mov
movsb
and
and
and
out
sbb
or
adc
loopne
repnz
flds
imul
and
repz
sbb
out
dec
mov
and
imul
into
outsb
in
inc
idivb
rep
subb
fbstp
pop
mov
jo
cmc
jle
mov
push
subb
mov
bound
cwtl
cmp
xchg
jle
and
dec
and
insb
sti
test
in
or
out
mov
mov
xchg
and
lea
push
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
adcb
jg
jle
dec
dec
adc
pop
aam
and
and
or
sub
push
test
je
imul
mov
lahf
test
daa
stos
and
sub
pop
fs
arpl
or
inc
mov
jbe
inc
jne
xchg
fisubs
pop
mov
mov
insl
roll
pop
lret
fcoms
mov
mov
out
xchg
aam
sbbb
lret
dec
dec
shlb
inc
and
sahf
mulb
xor
rolb
arpl
lahf
dec
into
cmp
jnp
jl
mov
sbb
jne
scas
xchg
push
fsubrl
pop
pop
cmpsb
insb
cmpl
cmpb
fildl
popf
mov
xchg
add
jno
xchg
push
jo
or
push
insb
into
cld
rcrl
repnz
loopne
mov
paddd
ret
pop
clc
xchg
cmpsb
mov
aas
jmp
push
shlb
mov
popf
push
lods
pop
imul
scas
cltd
cmpsl
test
push
flds
adc
movsb
fwait
and
jg
rol
jnp
inc
sbb
add
or
inc
pop
xchg
mov
icebp
loope
ret
pop
xor
aas
adc
cwtl
and
or
jecxz
test
dec
lret
inc
fcompl
jno
js
mov
cmp
push
and
adc
xor
cmp
clc
add
imul
jmp
mov
jns
dec
mov
jl
sbb
and
mov
jle
and
xorb
stos
pushf
sub
movsb
enter
data16
imul
add
outsl
pop
loop
jl
ljmp
sub
mov
add
jecxz
ffreep
stos
mov
addr16
sbb
fstps
sbb
sbb
or
ret
ss
and
adc
aad
stos
lock
add
movsl
push
orl
mov
adc
loop
fs
in
xlat
rcrl
xchg
pusha
aad
lret
inc
lcall
add
repz
pop
inc
xchg
add
sbb
mov
mov
fsts
push
pop
imul
push
or
data16
dec
adc
xchg
or
cs
int3
fwait
adc
push
dec
push
movsl
xchg
je
rol
loopne
bound
cwtl
cmp
popf
cs
xor
add
aad
sub
pushf
js
push
and
dec
ja
das
cltd
stos
in
addr16
xor
xchg
pop
sbb
addl
fistps
hlt
xor
bound
sub
clc
into
xlat
decw
push
adc
addr16
push
push
jecxz
cmp
aam
xor
ficoms
add
out
in
inc
sub
push
inc
leave
xchg
adc
inc
jl
mov
test
cmpsb
es
mov
inc
roll
loop
push
pop
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
pop
dec
lret
push
inc
and
mov
jle
mov
sbb
dec
dec
dec
push
jge
dec
and
xor
es
adc
xchg
insb
add
outsb
xchg
jmp
imul
scas
mov
sti
sahf
mov
sti
shl
xor
jl
popf
pcmpgtb
movsb
jnp
cmc
mov
mov
add
mov
pop
adc
inc
jbe
xchg
pop
jg
jnp
fwait
dec
mov
mov
in
ret
fdivrl
xor
mov
ss
add
outsb
mov
dec
add
mov
stos
hlt
sbb
nop
arpl
sbb
or
push
push
icebp
push
cmp
dec
testl
xor
stc
jle
sbb
push
push
and
and
cmovno
dec
mov
leave
sbb
outsb
and
mov
pusha
push
mov
adc
sti
xchg
jne
pop
std
loope
nop
xchg
add
std
add
imul
add
jp
add
sahf
push
push
movsl
imul
out
cmp
mov
mov
jnp
cmpl
mov
lock
xor
leave
dec
mov
push
cmpb
outsl
dec
mov
cmc
pusha
jle
repz
mov
mov
icebp
sub
inc
mov
mov
out
and
xchg
sub
divb
in
icebp
pop
insb
out
xor
mov
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
movsb
shlb
jle
jno
jle
dec
stos
pushf
stos
mov
mov
sub
loope
aam
cwtl
jp
or
xchg
mov
mov
and
dec
push
sbb
or
adc
cmc
jge
xor
sub
stos
xchg
mov
or
call
rol
in
fwait
clc
pop
pop
add
dec
imul
data16
jbe
stc
shl
mov
xchg
ret
loop
mov
jno
out
sbb
nop
js
test
scas
mov
in
sub
lahf
mov
int
in
inc
xlat
sub
test
mov
inc
sbb
pop
mov
lods
push
pop
mov
out
xchg
insl
push
inc
sbb
jmp
mov
xchg
pop
es
ffree
or
cmp
outsb
mov
jno
out
and
insl
insl
shll
adc
mov
sti
and
push
incb
dec
xchg
mov
or
andl
inc
dec
mov
lods
je
aad
adc
add
lods
test
pop
adc
xchg
cli
dec
or
fisttpl
mov
mov
hlt
jp
dec
in
movsl
xchg
cmp
mov
fidivrl
movsb
int
fcomps
aam
pop
icebp
into
push
test
aas
push
negb
insb
lods
mov
mov
jp
and
and
add
mov
aad
daa
pushf
shr
pop
dec
fsubrl
jnp
pop
pop
insb
mov
arpl
jge
adc
stc
out
into
faddp
xor
and
idivl
jg
xchg
lods
mov
adc
sti
push
out
sub
sbb
call
sub
sub
sbb
icebp
pop
jmp
mov
sbb
pop
dec
sbb
xor
lret
popf
dec
jbe
push
xchg
inc
lcall
lods
xor
scas
fs
ror
outsb
scas
fidivs
in
lret
das
inc
js
mov
in
movl
ds
push
jo
jg
push
in
jb
sub
inc
outsb
mov
out
roll
adc
cmp
aas
xor
pop
das
xor
inc
out
jl
ljmp
mov
push
cmc
and
mov
test
lods
xorl
je
adc
jae
outsb
lea
inc
lods
dec
pop
js
test
dec
jo
arpl
aas
add
cmpsb
xor
jns
sbb
dec
push
mov
jbe
pop
fadds
ror
hlt
or
sub
push
imull
dec
sbb
sub
iret
mull
jae
jl
jae
dec
xorl
mov
add
fnstsw
mov
je
cwtl
mov
mov
inc
or
fbld
xor
pop
xor
jne
stos
popa
or
inc
sub
inc
dec
in
jmp
mov
mov
adc
sbb
jns
ja
outsb
ja
xor
stos
push
mov
inc
dec
push
ffreep
sub
int3
imul
sahf
shll
add
notl
sub
sbb
xor
push
adc
test
sbb
cwtl
jp
dec
cmp
mov
cltd
sub
lods
push
ret
xor
dec
js
ja
lret
out
sub
es
fcmovnb
aad
sbb
repz
mov
pop
mov
cmp
fsubrl
dec
sub
adc
sub
cmp
cwtl
int3
inc
dec
fists
jecxz
lcall
pop
mov
adc
xor
icebp
lock
inc
add
cmpsb
mov
fst
pavgw
cli
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
pop
adc
jle
mov
scas
outsl
sbb
mov
out
inc
dec
and
jae
shll
mov
stos
pusha
shlb
and
mov
in
and
lret
enter
push
or
repz
repz
or
iret
shufps
stos
out
into
cmp
xor
or
push
cwtl
fldcw
int
cmp
vpackssdw
inc
enter
mov
icebp
cld
jle
in
and
xchg
test
dec
cmc
cmc
and
cmp
pushf
ds
cmp
xor
sbb
loope
mov
sbb
xchg
clc
add
in
fcmovne
rclb
sarl
jmp
ss
loop
and
std
scas
ljmp
ja
cmp
push
movsl
jmp
imul
pop
movsb
repnz
jg
lods
in
cmp
mull
and
stc
dec
shrl
cli
or
mov
dec
mov
dec
mov
inc
pop
pop
pop
lsl
idivl
repz
dec
adc
push
jbe
push
ss
rcll
lcall
popa
cld
sbb
call
mov
insb
add
or
fdivrs
lcall
dec
lahf
push
lcall
xchg
fbld
stos
push
jmp
jo
push
xor
mov
mov
scas
scas
dec
das
add
and
push
pop
mov
jmp
pusha
sub
lret
cmp
js
clc
add
xchg
mov
sbb
pop
call
xchg
mov
and
daa
test
popa
jae
leave
loop
push
xchg
stos
repnz
mov
iret
add
sbb
sbb
cmpsl
mov
cmp
push
jae
fbstp
sub
ret
sub
aam
push
inc
fimull
mul
in
xorb
imul
push
pushf
imul
inc
aad
dec
inc
pop
mov
mov
cmp
cli
xchg
jae
and
add
or
cmp
sub
dec
pop
test
and
mov
inc
fiadds
mov
jo
pop
js
or
add
jne
call
push
pop
mov
int
les
fwait
mov
popf
test
pop
outsb
add
out
or
fs
cmp
leave
sub
mov
xchg
lahf
xchg
adcl
cmp
inc
push
std
dec
in
and
cmpsl
mov
test
popf
pusha
mov
fistpl
sub
in
cli
sub
xlat
push
std
pusha
rclb
dec
iret
cmp
mov
xchg
jp
das
inc
jl
loope
clc
dec
sbb
jo
or
cmp
out
pop
push
inc
push
sbb
movsb
pop
mov
mov
cwtl
mov
cmp
fisttps
pop
dec
cmp
and
jge
inc
fmul
adc
jle
fisubl
cmpl
or
cmp
in
mov
mov
xchg
cs
push
or
rcl
xchg
cmc
jge
fs
mov
rol
xchg
and
outsl
imul
les
and
sbb
push
scas
imul
adc
push
test
push
dec
inc
dec
sbb
pop
pop
mov
cmp
imul
fidivs
cmp
sahf
decb
cwtl
scas
minps
inc
lea
fildll
cmp
cwtl
sahf
mov
pop
push
jmp
jne
sbb
cmpsl
cmc
pop
les
orb
pop
out
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
subb
cmp
mov
shll
mov
add
insl
aaa
pop
mov
bound
cmc
pop
iret
or
inc
push
hlt
stc
rorl
test
pop
jmp
gs
pop
addr16
push
fwait
sub
arpl
call
adc
lock
lock
pop
rcrb
insl
fidivs
cmc
sbb
jl
and
pop
outsl
pop
cmp
pop
jo
or
push
add
adc
int
mov
and
scas
aam
std
insl
mov
and
pop
test
repz
xor
pusha
inc
jae
add
in
mov
lock
pop
loopne
fisttps
push
push
sub
adc
mov
inc
push
repnz
outsb
mov
in
ljmp
cld
mov
xor
data16
in
push
test
pop
pushf
iret
and
daa
jo
or
sbbl
xor
inc
and
out
scas
shl
fnstenv
push
pop
xchg
jne
add
cmp
pop
idiv
aaa
into
xor
neg
popa
inc
push
das
lods
jmp
or
js
aaa
or
outsb
adc
int3
fstpl
out
jl
cld
inc
lods
nop
insb
push
ja
je
jo
cmpsb
aad
addr16
arpl
mov
pop
in
pop
sar
jbe
adc
jo
sub
xchg
mov
out
xchg
mov
mov
scas
movaps
lret
cwtl
add
inc
dec
es
sahf
or
mov
sbb
adc
push
mov
popa
fisubrl
sub
and
ficompl
sub
leave
xor
xor
imul
mov
inc
call
pop
push
fdivl
int
jbe
mov
xor
lcall
scas
int
daa
and
cwtl
fimuls
shl
and
cmpsl
add
popa
jecxz
stos
push
sti
arpl
push
push
jns
push
sahf
push
mov
pop
pop
cmp
pop
std
sub
sbb
in
movsb
sbb
fs
in
loope
cs
sbb
sbb
std
jae
outsb
dec
aad
add
dec
inc
push
sub
clc
pop
cmpsb
shll
sub
sub
jnp
adc
les
lods
fdivrl
xorb
pop
scas
xchg
sub
bound
dec
mov
rolb
add
ret
push
xchg
fists
movsl
sub
xor
jmp
xchg
jecxz
pop
jmp
adc
insl
jo
sarb
add
sbb
mov
pop
lds
xchg
jecxz
push
dec
ljmp
je
ja
jne
adc
imul
sbb
mov
pusha
iret
xor
xchg
xchg
pushf
adc
push
xchg
ljmp
sbb
sbb
subl
adc
fsubrs
sbb
mov
adc
sub
cmpsl
cli
push
dec
loopne
sub
dec
xor
mov
lods
mov
sbb
or
cmp
add
or
test
in
adc
dec
mov
shlb
aad
cmc
mov
insl
shrl
lahf
dec
jns
lock
in
xor
lret
push
dec
pop
dec
mov
inc
xor
adc
adc
mov
mov
adc
out
cmp
cmp
or
jg
cmp
jnp
iret
pop
cwtl
in
xor
mov
rorl
and
mov
or
scas
cli
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
loop
add
lahf
aas
jle
mov
xor
or
jo
xor
or
or
out
pop
jmp
add
iret
jecxz
or
xchg
jb
sbb
fs
push
push
cltd
pop
notl
dec
add
sbb
mov
sbb
test
popa
inc
sti
xchg
mov
inc
jno
or
aaa
fldt
mov
lods
rol
mov
mov
mov
dec
outsl
jge
or
fidivs
dec
sub
or
lahf
scas
or
dec
push
jns
movsb
subl
pop
inc
xor
sbb
lds
ret
and
pop
pop
jmp
jle
cmp
or
sub
imul
xchg
dec
std
or
int3
mov
outsl
adc
ja
int3
mov
lahf
mov
xor
pop
pop
sub
push
xor
fistps
cmp
std
mov
mov
xorl
arpl
pop
into
iret
or
xchg
test
sub
inc
hlt
leave
push
hlt
and
nop
lcall
push
or
stos
das
popf
cwtl
dec
outsb
into
adc
mov
mov
pop
hlt
shll
mov
cmp
pusha
bound
dec
bound
shll
adc
es
cmp
jge
jp
jne
mov
fimuls
lret
or
scas
sbb
cmp
test
in
dec
jo
dec
cmpl
and
repnz
aad
std
jge
das
mov
xchg
pop
add
sub
cmp
pminub
aas
iret
mov
test
mov
iret
mov
lock
lods
lea
pop
and
test
mov
mov
ds
mov
fsubrl
fadds
xchg
sbb
outsb
mov
dec
inc
mov
pop
bound
push
or
ljmp
out
sbb
std
inc
or
lcall
idivl
sbb
out
psubq
imul
fldl
insl
sbb
dec
sbb
xchg
loop
mov
sbb
inc
es
sbb
sub
push
dec
sub
loop
sbbb
jp
dec
repnz
ja
dec
sub
notb
cmp
test
shlb
add
mov
leave
les
sbb
test
inc
jmp
mov
adc
cmpsb
jns
into
push
mov
in
subl
ret
jnp
dec
out
and
inc
adc
pop
cmp
jnp
jnp
dec
pop
adc
daa
cmp
adc
xchg
subb
push
aam
pop
je
xor
cmpsb
inc
dec
cmp
rcrb
xchg
sbb
push
mov
cli
lods
cmpl
pop
mov
cmp
rcll
out
push
aaa
je
xchg
jne
stc
mov
xchg
push
or
xor
jl
subb
andl
add
add
scas
outsb
adc
enter
arpl
mov
call
xlat
aam
inc
ret
jg
pop
and
pop
stos
mov
xchg
scas
sarb
mov
insl
pop
dec
mov
dec
lods
jmp
in
cmp
fisttpl
inc
aam
js
lahf
sub
movsl
sub
outsl
rcr
sti
and
enter
pop
push
and
and
sub
mov
pushf
add
mov
iret
ja
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
mov
popf
push
xchg
push
jnp
mov
sbb
adc
inc
shrb
pop
in
xchg
cmp
mov
outsb
mov
cli
insl
xchg
mov
pop
jle
xor
mov
insb
fsubl
sub
jne
adc
cmp
stos
pop
int3
push
lahf
dec
push
pop
movsb
in
leave
dec
inc
popf
mov
push
lret
mov
mov
add
pop
jge
push
ret
pop
inc
adc
jne
incb
andl
repz
cld
jns
sub
mov
repnz
sbb
leave
push
scas
or
sub
push
cmpsl
out
cmpsl
bound
sub
xchg
and
cmp
ret
iret
cmpsl
mov
sub
ds
jecxz
xor
stos
add
aas
xchg
lea
xchg
xchg
inc
imul
mov
cmc
cmpsb
push
inc
dec
cmpsb
jbe
insl
lret
cmp
inc
cmp
push
and
daa
mov
sub
xchg
dec
fldt
jno
push
ror
xor
mov
push
mov
out
test
cwtl
movsb
out
inc
sbb
rcll
inc
in
sbb
xor
dec
jmp
xchg
out
test
sbb
wrmsr
call
add
fisubrl
dec
sbb
pusha
or
mov
xchg
dec
mov
sbb
mov
xor
faddl
sbb
dec
jnp
sub
fisttps
xor
in
call
sub
or
push
dec
mov
cmp
int3
push
cmp
lret
mov
xchg
orl
jnp
imul
test
dec
ss
inc
rcr
sbb
cli
push
add
fnstenv
fimull
lcall
lcall
jg
mov
into
sub
outsl
adc
adc
cmp
mov
mov
js
and
cld
scas
addr16
xchg
es
jne
loop
in
loope
or
push
adc
mov
push
cmpsb
call
stc
cmp
push
addl
popf
aam
sar
rorb
mov
adc
mov
jg
add
cmp
xor
dec
leave
jb
xchg
hlt
insl
inc
mov
xchg
fsts
mov
inc
and
shrb
das
mov
mov
push
imul
enter
imul
fnsave
and
mov
xchg
jecxz
sbb
jb
and
dec
xor
out
sbb
jp
xlat
enter
imul
mov
add
in
lahf
test
popf
lcall
mov
fyl2x
rclb
xor
dec
movsl
out
pop
jmp
mov
cld
adc
pop
ss
idivb
mov
pop
mov
xor
mov
scas
mov
leave
jo
dec
mov
mov
lods
fisubs
fmulp
into
jecxz
sub
bound
dec
push
cmc
and
sbb
jne
sbbl
sub
xor
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
cltd
push
bndstx
jle
jmp
jle
inc
in
sbb
xor
test
jmp
inc
adc
imul
dec
sbb
fsubrl
xchg
jp
fstpt
pop
scas
and
adc
add
dec
cltd
stos
xchg
or
mov
mov
lret
insl
mov
int3
pop
dec
mov
push
dec
sti
inc
test
imul
fbstp
ds
int
pop
sub
jle
inc
xchg
insb
mov
jbe
shrl
push
in
repnz
lret
nop
mov
imulb
sub
push
add
xchg
mov
or
cmc
lcall
mov
cli
in
test
mov
mov
cli
addr16
xlat
xlat
in
aam
xlat
inc
push
into
in
inc
movsb
sbb
loop
test
rol
imul
aas
repz
fldt
or
fsubl
xor
test
js
sub
les
or
mov
xor
add
jecxz
sub
sub
jecxz
or
jns
lea
leave
inc
gs
call
out
add
pop
repnz
sbb
inc
mov
jmp
divl
sbb
xchg
pop
xlat
and
hlt
push
mov
xor
sbb
ret
pop
cmp
pop
hlt
mov
mov
fnstcw
insb
pop
add
fprem1
std
jle
divb
push
sbb
sbb
and
adc
add
clc
test
sub
stc
ret
insb
ret
push
insl
pop
adc
test
mov
or
in
repnz
inc
adc
xor
and
test
jge
dec
sbb
nop
and
cwtl
cmp
movsb
ds
push
adc
dec
push
xchg
lcall
out
inc
sub
push
testl
out
and
xchg
enter
jo
lea
fadds
xchg
test
sbb
jmp
push
call
add
inc
fistpl
or
mov
or
ss
xchg
or
into
iret
xor
rorl
movsl
andb
hlt
mov
sbb
mov
jnp
out
pop
bound
pop
dec
sbb
aad
pop
bound
mov
or
inc
push
sub
lcall
pop
insb
lds
cmc
aam
mov
lods
out
inc
je
dec
push
repz
or
std
push
adc
add
dec
fsubrp
or
clc
gs
fidivl
xorb
fldenv
pop
mov
cwtl
aam
repnz
jp
pop
sahf
das
shrl
andb
je
mov
lcall
and
or
lea
rcl
dec
or
sbb
scas
inc
add
ret
std
ds
lods
or
sbb
shll
xor
push
push
std
sar
outsb
add
mov
in
xchg
lods
loope
or
negb
repnz
repz
add
xor
inc
adc
daa
xor
mov
cltd
mov
stos
loope
sar
pop
push
jg
das
push
dec
pop
je
icebp
adc
mov
je
sub
mov
pusha
cmp
and
mov
xor
jmp
repz
inc
or
pop
inc
and
sub
stos
push
mov
cmp
jle
jmp
jle
aaa
push
ds
mov
bound
push
aaa
mov
sti
mov
mov
jb
cli
jmp
shl
call
idivl
mov
inc
arpl
stos
mov
daa
xchg
xchg
add
sbb
dec
xchg
loop
sbb
pop
cmp
adc
imul
mov
js
and
daa
dec
pshufw
push
mov
push
adc
imul
out
out
inc
cmp
and
fisubrs
aas
pushf
icebp
sbb
ror
cs
lcall
xor
sub
pop
dec
adc
pop
mov
mov
mov
and
mov
push
lds
fstp
inc
mov
sbb
lods
push
cmp
push
fadds
mov
xchg
stos
das
push
cld
or
shll
es
movsb
fisttpl
pop
jae
or
push
icebp
push
push
outsl
int3
mov
test
stc
daa
xor
push
and
sbb
stc
push
shrb
ds
mov
cmp
into
jo
fdivr
insb
jmp
shlb
in
loopne
addr16
insb
push
scas
dec
jecxz
dec
sbb
mulb
mov
push
iret
mov
repz
out
jnp
out
enter
ss
jns
dec
cmp
xor
push
jne
mov
clc
lret
es
jge
js
jnp
loope
div
in
popa
into
hlt
xchg
jbe
fcmovnu
pop
sub
int
adc
xor
dec
cmp
jae
or
fisubrl
mov
data16
sub
push
or
into
inc
mov
loop
inc
lret
fld
aam
imul
lods
inc
pusha
jle
sbb
and
xchg
dec
mov
int
add
and
sbb
pop
xchg
and
sbb
popw
test
fsubl
loope
out
mov
add
mov
cld
or
xor
mov
sahf
push
push
push
adc
iret
push
mov
popa
shlb
rol
cmp
jae
inc
sub
cmp
mov
lock
and
jno
daa
in
rcrl
pop
dec
out
pop
add
pop
stos
call
jecxz
xchg
mov
arpl
sbb
and
subl
push
out
imul
adc
mov
pop
xor
mov
or
cmp
das
clc
mov
xchg
xor
xor
into
incb
fwait
test
pop
test
pop
cli
pop
andl
xchg
add
sbb
iret
ficoml
inc
cld
bswap
lcall
mov
add
call
inc
pop
inc
ffree
inc
rorb
in
add
in
scas
inc
mov
adc
inc
xlat
mov
push
dec
adcb
xchg
xchg
movsb
cli
and
jnp
addr16
loopne
jecxz
fdivr
sub
mov
hlt
mov
pop
xchg
mov
xor
outsb
pop
mov
fsubl
adc
add
js
xor
dec
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
jne
rcrl
sbb
push
icebp
fisubrs
rcrl
cli
mov
cmp
bound
cmp
mov
dec
dec
mov
scas
sbb
stos
jnp
push
fdivr
aad
fisttpll
pop
test
mov
lret
adc
cmp
mov
sub
inc
mov
dec
loope
push
cmc
in
jo
adc
shl
daa
pop
dec
std
mov
shr
repnz
jnp
clc
in
adc
les
inc
mov
cs
in
in
in
mov
jns
in
pushf
ficompl
push
sub
push
pop
xchg
jp
ret
add
adc
cmp
inc
aaa
push
int
mov
in
loop
mov
repz
pop
sub
push
lret
dec
sbb
fstpl
or
repnz
pop
stos
cmp
cmp
and
shrb
and
jbe
or
push
and
loopne
inc
pop
int
and
and
inc
and
ja
push
cs
adcl
adc
mov
lods
hlt
push
sub
xchg
je
mul
rolb
pop
in
adc
fldt
fdivrp
mov
imulb
aam
popf
or
mov
or
in
jl
lods
test
lds
rorb
add
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
mov
aaa
or
jle
sarb
jle
pusha
dec
pop
push
sbbb
jmp
push
roll
jl
rcrl
sbb
outsl
mov
inc
lahf
mov
scas
orb
inc
or
xchg
cmpsl
sbbb
dec
outsl
ja
dec
push
rorb
out
hlt
dec
xor
fnsave
adc
xor
push
int3
fildll
sub
imull
xor
sbb
push
cmp
int3
mov
daa
mov
lods
decb
idivl
out
pop
les
aas
mov
sbb
mov
fnclex
sbb
cmp
mov
ja
cltd
int
inc
jmp
jbe
fwait
dec
dec
subl
loopne
ret
data16
fsubs
sbb
out
jnp
fs
dec
adc
rolb
mov
ja
clc
fildl
sbb
adc
outsl
fldenv
idivl
rcl
mov
dec
xlat
aam
push
xchg
fiaddl
out
mov
adc
xlat
notl
mov
aad
cmp
inc
mov
push
je
inc
jbe
xchg
in
mov
arpl
sti
dec
iret
loope
loopne
orl
push
add
pop
pop
jne
mov
test
mov
lcall
lods
int3
stos
jge
xor
cli
bound
jae
jecxz
bound
cmp
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
ljmp
jle
jg
jle
lds
clc
mov
shlb
dec
fsubrl
mov
mov
je
lock
xchg
outsb
inc
lcall
jo
or
xchg
dec
mov
mov
sub
je
mov
shrb
or
jge
aaa
test
outsb
popa
popa
pop
cmp
pop
mov
dec
daa
ret
pushf
add
shll
test
jle
nop
push
push
push
mov
mov
xchg
lahf
iret
in
sahf
ljmp
cmp
mov
xor
push
push
mov
fwait
arpl
hlt
call
out
sbb
add
notb
cmp
mov
fsts
in
cmpsb
jmp
jo
and
dec
adc
pop
inc
testb
aam
cmp
mov
pop
repz
sbb
jmp
dec
fldl
repnz
cmpsb
shll
adc
movsl
das
push
mov
pop
cld
adc
mov
ds
push
aad
sbb
push
cld
cld
inc
adc
fistpll
and
push
repz
push
mov
sbb
dec
sbb
and
insb
mov
push
add
adc
call
loopne
scas
mov
into
push
pop
gs
lahf
fldenv
cld
fsubs
jmp
jae
cmp
cli
vpaddw
incl
mov
inc
sarl
jg
jle
dec
mov
sbb
fidivs
mov
mov
outsl
jg,pn
jae
test
sarl
mov
adc
jge
pop
push
out
sub
loop
out
cli
xchg
pop
ljmp
orl
in
mov
popa
icebp
jl
cmp
mov
pop
push
insb
mov
fucomip
or
nop
ja
call
and
insl
fcompl
inc
xor
sbb
mov
loope
dec
cli
into
fisubs
jmp
testb
daa
or
lods
pop
push
popf
ss
lods
mov
xchg
loopne
fstps
inc
and
testl
push
stos
insb
push
mov
sbb
leave
add
sbb
lods
xchg
inc
sti
insb
sti
jg
cmp
cs
push
data16
outsl
test
cltd
mov
push
out
xlat
pop
popf
cmp
les
shl
push
dec
scas
dec
jno
xor
rcrb
mov
ret
pcmpgtb
das
cmp
aad
push
inc
mov
movsl
imul
jp
sbb
int3
sti
mov
cmp
dec
sub
aaa
pusha
call
ja
add
mov
xor
mov
add
jmp
push
fsubs
pop
xchg
push
mov
pop
xlat
and
jg
jle
sbb
inc
mov
jo
es
repnz
shrb
push
ss
sub
jae
or
mov
icebp
pop
xor
fldcw
mov
enter
xor
jl
xor
adc
add
push
dec
mov
add
lds
loopne
lcall
sbb
lcall
cli
inc
imul
es
mov
and
sub
xorl
les
inc
add
jb
sbb
mov
cmp
mov
outsl
std
mov
mov
mov
and
mov
mov
xchg
xchg
add
clc
jp
sarl
leave
add
test
xchg
lds
in
add
push
and
add
sahf
btsl
mov
xchg
orb
xchg
push
popa
loopne
dec
sarl
cmp
push
inc
jnp
lods
jge
out
jnp
insb
cmp
dec
add
cmp
out
jecxz
mov
dec
aam
shlb
scas
int3
dec
stc
sbb
cmp
and
cmp
cmp
mov
jno
test
cltd
mov
pop
jns
push
xchg
xor
dec
jns
cs
adc
cmp
inc
fnsave
iret
fidivs
movzwl
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
loope
nop
mov
jg
jle
sub
pop
mov
arpl
or
pop
fyl2x
into
gs
mov
out
inc
ret
cmp
mov
decl
jmp
pop
dec
insb
xchg
dec
adc
mov
xchg
mov
mov
gs
fs
jmp
dec
pop
pop
rcl
push
mov
idivb
les
mov
adc
jno
sbb
adc
nop
sub
in
stc
add
aam
and
or
ret
inc
in
add
pusha
sub
sbb
cmpsb
sbb
pop
lcall
cmp
adc
xlat
pop
dec
orb
aaa
mov
rcl
cmp
mov
outsl
repz
sbb
mov
stos
loopne
ss
mulb
or
xchg
cwtl
repz
rcrb
push
add
in
inc
mov
dec
mov
ljmp
dec
jns
cmpsl
in
mov
sub
inc
aaa
pop
sahf
out
xchg
adc
popf
pop
and
cmpsl
pusha
ret
int
arpl
xchg
add
and
ss
and
cs
data16
sub
daa
push
enter
pop
push
rorl
rcrb
mov
inc
inc
or
das
cld
mov
stos
test
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
inc
cmpsl
add
jge
jle
sarb
jle
repnz
adc
bound
jnp
jl
push
movb
add
jne
in
xchg
leave
xor
and
xor
pop
xchg
or
sbb
mov
mov
cmp
aam
xchg
mov
dec
ss
push
les
shr
push
inc
data16
not
lock
sbb
pusha
jp
aad
ja
sub
or
repz
call
and
jp
xchg
push
and
jo
add
lret
dec
pop
mov
push
hlt
mov
lods
loop,pn
xor
dec
adc
les
jle
sbb
xor
pusha
xor
data16
mov
hlt
lea
insl
insl
arpl
icebp
bound
inc
xor
add
mov
adc
loop
mov
cs
cmpsb
into
jns
mov
stos
cmp
pop
pop
loope
in
cmp
xor
or
jno
decl
into
repz
push
xor
xor
sar
mov
shlb
xchg
adc
push
and
dec
mov
inc
nop
add
xor
in
mov
or
js
add
mov
les
pop
mov
push
adc
mov
inc
push
je
out
jnp
fldcw
mov
mov
in
sti
and
jnp
inc
clc
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
les
rol
jle
sarb
jle
fistps
mov
lcall
ss
nop
popf
lahf
inc
or
aas
adc
sbb
imul
fdivs
mov
push
or
test
push
push
imul
push
fwait
shld
int3
and
adc
push
into
pop
push
ss
push
sub
mov
mov
out
xchg
in
push
sbb
push
fadds
fnsave
arpl
or
pushf
sub
cmp
jne
xor
fnstcw
addr16
movsl
cmp
in
mov
adc
std
xchg
lds
inc
out
mov
outsb
jle
andb
addr16
sbb
jns
lock
lahf
ret
fstpt
and
rclb
lret
adc
sub
and
mov
out
rcrb
mov
and
aam
mov
out
pop
hlt
jne
dec
aam
xchg
and
dec
inc
jge
mov
xlat
stos
and
inc
inc
jbe
in
leave
aas
movsb
and
dec
adc
mov
stos
jno
fldl
mov
outsl
in
sbb
and
stos
int
mov
ret
stos
lods
in
pop
daa
push
mov
mov
sbb
inc
xchg
mov
lret
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
mov
adc
jg
jle
imul
int3
xchg
xchg
gs
nop
cmp
pushf
aas
mov
or
std
nop
lock
imul
xor
clc
bnd
mov
lcall
shrb
loop
pop
mov
xorb
adc
xchg
jg
pop
cmpsb
sub
jl
movb
mov
add
mov
mov
ja
lock
test
sub
insl
ret
mov
lea
lods
aad
pop
in
sbb
xchg
pusha
insl
loope
xchg
adc
pop
xchg
fs
pop
jns
mov
std
std
pop
fistps
insl
xchg
jo
pusha
pushl
outsl
pop
lods
test
xor
cmp
cmc
jl
and
mov
mov
cmpsb
pop
sub
inc
jb
sub
fisttps
xor
jp
out
lock
mov
arpl
jmp
out
xchg
mov
testb
xor
pop
push
cld
jno
xor
les
push
push
xchg
add
fwait
xor
pop
cli
cmpsl
or
jbe
popf
adc
add
insl
xchg
movsl
inc
ror
int3
pop
clc
loop
inc
lds
pusha
stos
push
xor
test
leave
mov
ljmp
in
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
cmpsl
out
xor
lcall
jnp
rol
xchg
or
mov
pop
xchg
add
sbb
mov
cwtl
mov
in
push
lret
sarb
iret
pop
cld
aaa
mov
add
adc
push
jb
test
xor
out
loop
lahf
add
jmp
lods
aad
cli
xor
sbb
adc
add
arpl
fs
out
scas
pusha
push
idivl
cmpb
push
outsb
loope
sarl
repnz
push
ja
xchg
stos
push
cmc
test
neg
push
outsb
sub
or
cmpsl
jge
into
out
jl
mov
sbb
and
lds
fldl
insl
cmpsb
lea
adc
jge
mov
inc
es
scas
fdivrl
loope
inc
add
or
imul
lods
imul
lods
cmp
pop
ljmp
add
dec
add
fisubs
mov
dec
cmp
adc
ret
jle
jg
nop
jbe
mov
mov
loop
int3
inc
xchg
popa
push
cli
mov
in
sub
fcmove
rclb
jle
adc
call
sub
cmpsl
xor
outsb
imul
inc
inc
push
mov
jo
inc
ja
inc
lock
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
inc
fstpt
sarb
jle
jbe
je
inc
cmp
mov
cmp
pop
inc
push
cmp
pop
xchg
xchg
inc
push
fwait
cmp
insl
lcall
jns
mov
push
and
cmp
mov
rcll
movsl
pop
pop
sub
xchg
jecxz
sub
out
cmp
adc
scas
jnp
mov
mov
nop
dec
push
cmp
and
xor
jge
enter
outsb
push
push
dec
movsl
ficomps
add
sbb
adc
jb
rcrb
sub
lret
xchg
stos
dec
bound
aad
jno
mov
popf
push
negb
adc
repnz
and
cmp
dec
mov
pop
subl
fwait
push
cli
stos
leave
leave
jae
xchg
jnp
scas
lcall
pop
lea
ja
jmp
sub
mov
sbb
dec
mov
mov
in
mov
add
inc
scas
movsb
rolb
iret
dec
nop
xchg
in
andb
mov
fnstenv
add
fdivrs
mov
push
xchg
dec
jne
xor
sub
and
orb
jg
cmp
and
jge
or
and
std
and
test
popf
jb
add
or
adc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
movsl
jbe
adc
jle
push
jo
jle
cmpsl
out
xor
es
sti
adc
shll
pop
jns
iret
add
movsb
mov
out
xorb
inc
mov
sbb
and
or
in
fcomps
push
adc
and
fs
jnp
jmp
cmp
xchg
mov
xchg
dec
sbb
sbb
jno
aaa
mov
xor
inc
push
in
mov
xchg
dec
mov
mov
inc
mov
test
jnp
or
push
jecxz
sbb
jl
sahf
sub
scas
fcmovnbe
cli
inc
xorl
and
push
lcall
mov
pusha
cmp
cld
in
push
out
lret
and
push
adc
divb
or
adc
and
push
lods
pop
test
push
loope
jo
stos
and
repnz
and
adcb
mov
orb
mov
jnp
pop
pop
daa
mov
outsl
dec
gs
sarb
sbb
mov
cmp
in
aam
sub
inc
and
mov
lcall
add
test
or
out
or
pop
rcrl
insl
leave
call
mov
mov
loopne
les
sahf
mov
outsb
aas
jbe
adc
pop
sbb
int
sub
and
aad
sub
rcrb
adc
cld
xorl
adc
or
incl
movsl
pop
push
lds
jmp
push
push
cmpsb
das
cli
mov
data16
sbb
dec
les
inc
outsb
das
lds
xchg
sub
jge
test
dec
pop
pop
dec
mov
dec
out
mov
jl
xchg
mov
insl
or
out
mov
mov
sbb
sub
sarl
xchg
xchg
sub
in
in
push
xchg
jl
inc
jns
ret
mov
test
sbb
inc
mov
cmp
dec
pop
aaa
mov
mov
jnp
sbb
movsl
iret
lods
jns
repnz
add
lcall
pop
call
sub
or
and
mov
imul
adc
and
and
add
xor
sbb
gs
mov
out
mov
mov
loopne
cmp
fs
jge
sti
repnz
jne
jne
adc
flds
mov
and
inc
xchg
xchg
jg,pn
push
clc
dec
jg
out
mov
aaa
lea
repz
mov
pop
xchg
iret
call
fwait
loop
addr16
add
inc
jbe
dec
daa
mov
dec
push
dec
shlb
xor
lods
aad
inc
fnstenv
sarb
div
mov
and
jmp
out
xchg
imul
fidivrs
xchg
inc
fistpll
push
jo
jle
imul
jnp
cwtl
inc
xorl
and
cmp
mov
or
jmp
sub
adc
cmp
add
sub
jp
push
xor
addl
mov
popf
mov
out
push
inc
lock
cmp
push
xor
and
sub
mov
and
clc
mov
xchg
add
or
loop
ret
jp
int
mov
fwait
and
xchg
add
test
scas
cmp
xorb
pushf
ljmp
pop
scas
les
jge
push
enter
xor
dec
lods
or
cmc
fistps
sahf
inc
mov
inc
pusha
fstl
adc
mov
mov
adc
jg
xor
mov
push
leave
ss
inc
pop
ljmp
mov
xlat
mov
lret
adc
mulw
loopne
add
cmpsb
jo
dec
jo
mov
and
pop
lods
enter
ja
push
orl
xchg
jmp
and
pop
xor
cmp
outsb
sbbb
test
fisubrs
mov
repz
mov
inc
lock
pop
mov
or
arpl
dec
mov
push
jno
jmp
adc
cmpsb
data16
adc
repz
cvtdq2ps
mov
cmp
shrb
jl
jns
inc
enter
push
and
cmc
lret
pop
sub
lret
daa
not
pop
inc
pop
inc
jne
aad
pop
pop
mov
leave
ret
jns
mov
add
in
push
push
jge
out
sahf
das
inc
test
and
aad
mov
movsb
inc
xchg
into
outsl
mov
mov
js
insb
popa
mov
mov
jmp
push
int
mov
fs
push
push
cmpsb
lcall
push
mov
jl
sbb
dec
pop
dec
repz
movsb
mov
icebp
inc
sbb
cmp
dec
xchg
out
xchg
or
js
add
xchg
dec
jge
jl
dec
dec
inc
fnstenv
sub
popf
pop
cld
dec
inc
shlb
sbb
mov
iret
movsl
cmc
cmp
cli
ret
jle
mov
mov
sub
lods
adc
cmpsb
inc
cmp
pop
and
and
jo
dec
hlt
fisttpll
lcall
sbb
xchg
mov
sub
ds
data16
cmp
iret
testb
rcrb
dec
repz
scas
lods
in
aad
and
fdivl
filds
mov
jmp
in
mov
lods
clc
leave
lds
xchg
pop
add
fwait
jo
xorps
leave
sbb
pop
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
jecxz
pop
add
sarb
inc
jg
jle
rolb
ret
outsl
mov
pop
mov
mov
jl
or
jnp
out
adc
cld
cltd
jecxz
idivl
cmp
aas
call
mov
inc
fwait
mov
popa
xchg
mov
bound
and
add
enter
sbb
mov
pop
les
cltd
rcr
lods
add
xchg
xor
sbb
aad
fnstcw
sbbb
sar
jl
imul
data16
and
mov
cmp
ret
aaa
fs
push
push
xor
insl
int3
stc
adc
xchg
mov
inc
mov
add
popf
lret
dec
std
dec
xchg
mov
iret
mov
cmpsl
test
mov
dec
stos
sbb
sarl
std
test
js
cwtl
xchg
push
adc
imul
inc
mov
push
cmc
arpl
mov
fisttpll
addr16
mov
sbbl
loopne
jno
ja
jae
inc
sbb
jae
in
out
mov
inc
cltd
fisttpll
shlb
push
mov
mov
mov
jle
or
mov
aam
imul
jbe
lods
shlb
shrb
mov
test
daa
jecxz
xor
or
in
loop
pop
and
push
xchg
dec
sub
or
lcall
xchg
dec
test
cmc
pushf
lds
das
ja
pop
pop
ss
inc
fstl
push
mov
neg
jne
cmp
pop
cmp
xchg
add
cli
inc
inc
popf
arpl
fisttpll
addr16
mov
ss
jge
xor
out
leave
cwtl
ret
sub
inc
repnz
mov
add
push
inc
add
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
fwait
es
mov
jle
inc
jg
jle
daa
ror
adc
jns
aaa
inc
pop
movsl
lret
mov
aad
add
fsubs
mov
cltd
or
cli
popf
mov
xchg
pusha
push
xor
jmp
mov
fisttpl
jl
inc
cld
jne
cs
xchg
add
and
ljmp
xor
addb
cs
jle
ret
les
sar
dec
adc
insl
pop
sub
push
lock
clc
ret
push
loope
mov
movsb
popf
and
dec
adc
ds
pop
insb
pop
and
ss
or
xor
mov
push
xor
push
sub
mov
in
es
jmp
cs
clc
xchg
lods
jno
pop
dec
push
pop
testl
inc
xlat
in
lds
pop
lock
jmp
jg
aam
jae
sbb
test
nop
inc
sub
movsl
jp
movl
jg
xchg
sub
jnp
mov
mov
mov
fldt
and
adc
cmc
mov
fiaddl
data16
mov
and
mov
xchg
jns
dec
pop
pop
subl
jmp
in
fld
adc
loopne
psubusw
add
shrb
test
rorl
fmulp
fwait
call
mov
lock
pop
cmpps
jne
dec
or
out
gs
nop
fildll
subl
scas
jne
loope
mov
mov
int
rorl
or
sbb
pop
loopne
push
jnp
pop
fidivrl
sbb
cmovo
mov
push
sub
pop
sti
test
ja
adc
jo
xchg
xor
add
leave
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
repz
cmpsl
js
in
nop
notl
jne
xor
ja
sbb
ds
cmp
fs
daa
repnz
adc
les
jo
ss
push
outsl
push
jb
jl,pt
andl
bnd
add
mov
mov
fists
iret
aad
cmp
sub
test
mov
and
and
es
ja
jl
ret
rorb
or
rcr
dec
jecxz
lods
aaa
call
call
push
mov
mov
ret
pop
push
jne
xlat
in
int3
cmp
adc
cld
push
or
out
sub
and
push
pop
push
mov
push
xorb
adc
je
insl
cmp
and
mov
inc
sbb
test
sti
daa
repz
xor
test
inc
dec
sub
scas
popa
mov
repz
rcrb
cmpsb
adc
cwtl
push
pop
lock
ds
or
lods
lahf
ljmp
adc
fwait
jle
outsl
or
mov
add
stos
leave
sub
cld
cmpsb
sbb
lcall
pop
arpl
aas
mov
xchg
movsl
or
lock
cld
insb
or
cmp
ds
out
mov
jbe
mov
inc
pop
push
outsl
jl
fwait
push
xchg
sub
add
mov
push
inc
test
mov
into
sub
inc
xor
scas
pusha
movb
les
jecxz
in
cmpsl
add
mov
ds
push
xchg
push
mov
cli
sahf
adc
adc
aas
push
mov
xchg
clc
repz
add
out
push
int3
xchg
mov
in
or
xchg
hlt
pop
mov
adcl
sub
int3
push
addr16
mov
fs
test
mul
add
roll
divl
sbb
and
xor
aas
mov
mov
jecxz
sbb
mov
dec
pop
cmp
jno
aam
adc
mov
outsb
jecxz
ljmp
lahf
sarl
push
stos
inc
xchg
sti
jo
adc
inc
or
add
pop
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
mov
jle
jo
jle
add
mov
rcrb
xchg
out
inc
ljmp
sub
and
mov
or
jbe
cltd
loope
leave
ljmp
add
ret
push
push
mov
pop
ret
pop
add
cmpsl
rcll
mov
cmpsl
imul
shl
mov
jbe
and
faddp
imul
mov
jecxz
jecxz
jae
sub
jbe
dec
daa
outsl
enter
scas
outsb
pop
mov
adc
jb
push
fprem1
cmp
push
pop
in
shl
outsl
pop
sbb
mov
inc
mov
mov
mov
adc
mov
add
add
ss
jnp
jg
xchg
mov
fsubrl
sub
sbb
mov
mov
mov
xor
xor
mov
test
or
xchg
cwtl
sbb
dec
xor
shll
cs
sbb
in
cmp
dec
pop
dec
lret
enter
push
push
cli
lret
ds
ficoml
stos
hlt
leave
fsubrs
pop
test
adc
jnp
xchg
push
dec
push
xchg
push
cs
xchg
cmp
scas
mov
aam
mov
dec
cmpsb
out
aaa
inc
mov
jbe
push
movsb
shll
imul
cmp
push
jo
and
ror
jne
repz
pop
inc
sbb
xor
and
popw
xchg
mov
dec
aad
mov
sbbl
mov
stos
in
lret
push
jns
shl
push
adc
sbb
pop
jb
fcmovnbe
rcrl
je
mov
das
adc
in
jecxz
sbb
dec
jns
pop
pusha
dec
mov
mov
ret
lds
dec
cwtl
jge
jno
test
sub
xchg
push
frstor
test
cmc
jmp
mov
in
divb
xchg
xor
adc
test
mov
jo
push
xor
lret
xchg
out
mov
jl
cmp
dec
jge
push
mov
pop
mov
shl
cwtl
scas
push
pop
movsb
mov
in
data16
jmp
dec
mov
into
and
jb
add
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
or
adc
jg
jle
mov
jbe
mov
add
movsl
push
and
pushf
daa
pop
mov
imul
dec
mov
sub
or
negl
aam
inc
dec
andl
cmp
inc
sub
jne
inc
and
push
push
testl
adc
pop
or
mov
ljmp
fnstcw
adc
xchg
mov
xchg
fs
ret
xchg
outsb
enter
clc
movsb
rorb
into
fwait
iret
roll
mov
pop
or
pop
dec
in
fldenv
jo
pop
dec
gs
mov
fildll
sbb
lds
aas
aas
cmp
xor
aam
mov
cltd
pop
lret
mov
test
xor
lods
cmpb
sub
gs
jge
insb
insl
add
mov
outsl
mov
cmp
add
sbb
xchg
fimull
jo
sbb
mov
sub
lock
push
fadd
mov
pop
lahf
in
jnp
xor
cmc
cmp
mov
scas
repnz
mov
js
inc
aaa
faddl
out
bound
gs
and
cwtl
jne
push
adc
or
lret
pusha
mov
sarl
mov
xchg
dec
add
ds
cmp
sahf
scas
cmpsb
add
loopne
daa
jns
stos
imul
push
fstps
mov
adc
xchg
scas
ror
push
sbb
mov
mov
movsl
popf
cmpsl
out
push
addr16
mov
adc
nop
jl
aas
xor
or
jbe
cwtl
mov
arpl
push
xlat
or
inc
cld
xor
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
xrelease
jle
jg
jle
inc
pop
enter
scas
inc
sub
push
les
push
sbb
adc
dec
xchg
xor
sub
cmc
insl
loop
xor
nop
pop
addr16
mov
int3
adc
fidivs
cmp
cli
mov
push
loopne
push
xchg
dec
rolb
arpl
pcmpeqb
sub
ja
push
in
xchg
pop
shl
movsb
aas
mov
ljmp
test
jnp
outsb
ja
loopne
hlt
repnz
imul
movsl
lods
data16
and
aad
push
inc
mov
fwait
pusha
ret
adc
stos
shl
jo
shrb
xchg
test
fxam
in
push
enter
sbbl
cmp
push
inc
push
push
inc
xorb
iret
cmc
sbbl
jne
pop
ljmp
orl
dec
mov
int
cltd
inc
sub
outsb
shrb
scas
mov
push
inc
clc
test
push
into
fnstsw
or
addr16
push
mov
ja
popf
cmc
cmp
fs
repnz
pop
xor
sub
adc
sub
and
out
scas
outsb
add
sahf
mov
dec
ljmp
mov
es
dec
outsl
push
pop
dec
outsb
xor
pop
lods
test
pop
imul
and
and
movsl
mov
sub
xor
aad
je
cmpb
int3
dec
lahf
sbb
and
fsubrs
and
pop
and
xchg
ret
mov
cmp
pop
jecxz
adc
cmpsb
outsl
sarb
loopne
icebp
and
scas
add
or
xchg
and
imulb
ret
add
jmp
pop
icebp
lds
fs
xchg
imul
mov
pop
jg
jle
fstps
add
mov
dec
cmp
sub
rclb
push
pop
mov
jnp
mov
cli
adc
add
mov
imul
outsl
mov
inc
or
imul
sahf
inc
jo
add
add
inc
and
lret
loope
pop
aaa
inc
subl
xchg
lds
mov
mov
sub
cli
shll
xor
enter
out
imul
jno
mov
test
out
sbb
loopne
outsb
pop
jecxz
mov
pop
repnz
in
faddl
mov
add
xchg
in
lret
scas
adc
jae
mov
inc
sub
xchg
xchg
dec
loopne
cmp
repz
jae
addr16
insb
ret
xchg
push
and
inc
cli
iret
cmp
xchg
aam
and
loope
das
cmc
adc
cld
sti
mov
out
push
lahf
mov
ljmp
out
out
aas
jp
push
cmp
dec
cmp
out
lods
out
add
mov
popf
ror
sahf
call
daa
shll
or
ds
iret
stos
std
inc
push
lock
pop
movsb
or
scas
insb
cli
stos
dec
aaa
stc
push
lock
stc
adc
aaa
mov
sbb
and
sub
loop
cwtl
jge
mov
add
cmp
loopne
push
insb
mov
push
pop
out
jne
les
sbb
cmp
pop
testl
xor
inc
jns
test
jecxz
cltd
aam
xor
mov
insb
cli
fiaddl
adc
mov
adc
inc
sbb
cmp
cmp
xchg
std
and
push
sub
and
testl
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
or
pop
jg
jle
mov
cmc
aad
clc
test
scas
lods
pop
pop
fwait
mov
ss
push
cmp
pop
test
cmp
jnp
scas
jbe
mov
inc
mov
call
decl
add
in
std
paddusb
pop
inc
rcr
repnz
and
int3
cmp
pop
sahf
popf
inc
and
jp
lock
pop
cmp
sti
lahf
sti
push
mov
cmp
fdiv
shll
leave
pop
and
shll
push
cwtl
pushl
iret
push
lret
lods
sub
fisttps
jge
test
imul
mov
add
mov
dec
jnp
xlat
xchg
stos
mov
push
dec
mov
add
dec
fildll
xor
inc
cltd
or
xchg
xchg
jbe
cmp
pop
bswap
or
cmc
or
push
mov
push
push
inc
and
adc
sub
pop
lds
shrb
cld
inc
movl
mov
jmp
mov
mov
push
inc
mov
insb
pop
scas
hlt
sub
mov
leave
test
push
rcrl
int
cli
aas
cmpsb
adc
push
sbb
das
dec
and
icebp
dec
adc
adc
loope
shrb
jecxz
mov
jae
mov
stos
cld
inc
out
fbstp
shll
insb
push
lods
pusha
xor
leave
sub
adc
cmp
xchg
xor
xchg
dec
pusha
lods
jg
test
adc
add
fdiv
mov
jmp
add
jl
jg
inc
dec
out
push
or
enter
jle
sub
and
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
popf
das
rcrl
jg
jle
aaa
icebp
dec
addr16
test
jo
outsb
xchg
daa
mov
cmpsl
push
ljmp
std
sbb
or
loope
pushf
shrb
cmc
sbb
aad
lret
jecxz
push
lods
das
mov
out
sbb
xlat
popa
mov
sub
clc
jno
mov
or
jnp
je
jbe
jle
daa
dec
xlat
pop
sub
shrl
sub
addr16
cmp
divb
fsubrl
fs
push
test
mov
jne
das
out
cmp
mov
test
cmp
dec
ljmp
push
pop
je
sub
xor
pop
lock
js
pop
cwtl
xlat
sarl
movsb
inc
fwait
or
and
into
add
les
or
sbb
dec
push
push
mov
xchg
pop
das
idivb
nop
jg
sub
add
sbb
push
xchg
nop
mov
into
outsb
add
cmp
jb
dec
and
addr16
cld
out
out
cmpsl
inc
push
mov
repnz
xchg
addr16
mov
ja
mov
pop
sub
xchg
imull
daa
add
addr16
test
xchg
push
out
fadds
cmp
fdivl
idivl
jle
push
rcll
negb
fstpt
cmp
repz
inc
or
jne
out
rcrl
sbb
wrmsr
pop
jle
loop
je
xor
inc
inc
pop
fisubl
push
in
and
sub
leave
inc
leave
sbbb
xchg
xor
lret
xor
cmp
mov
xchg
jae
jmp
fists
stc
mov
cmp
dec
xchg
jmp
leave
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
xor
xor
jle
jg
jle
loopne
popf
push
pop
and
adc
lret
and
in
movsb
adc
loope
adc
add
push
and
pushf
ret
and
inc
fdivp
jmp
outsl
das
inc
outsb
push
adc
mov
insb
jb
sbb
idivb
push
sahf
adc
divl
push
fisttps
sbb
popa
shl
and
cmp
ja
inc
push
in
cmc
mov
push
pop
inc
add
scas
fldl
sub
inc
or
inc
mov
icebp
iret
cmpb
jae
inc
sar
dec
xchg
push
sub
loopne
jmp
shlb
sub
add
push
pop
sub
in
push
jp
cwtl
mov
add
push
mov
adc
mov
movsl
xor
mov
sub
scas
xchg
mov
lea
outsl
pop
lds
jge
nop
push
jbe
in
xchg
cmpsl
jl
mov
adc
imul
and
cwtl
mov
movsb
clc
add
mov
jg
fcmovnb
push
mov
loop
imul
push
outsb
mov
mov
xor
sub
lds
xor
xor
lcall
pushf
clc
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
add
mov
jg
jle
jnp
lock
xor
sbb
pop
andb
aaa
into
int
ja
sbb
rclb
xchg
bound
repz
sub
jne
scas
out
test
push
inc
jecxz
aas
push
or
adc
subl
lcall
pop
std
enter
or
data16
into
inc
inc
jg
enter
std
cwtl
dec
inc
cmc
fmul
cmc
jnp
sbb
xor
push
jmp
je
jl
data16
test
repnz
sbb
sbb
fisubs
jo
pushf
fcoms
imul
mov
insb
inc
arpl
adc
add
int3
pop
inc
cmp
hlt
sti
adc
jg
mov
popf
xchg
jmp
xor
repnz
mov
xor
jo
cltd
cmpsl
jbe
cmp
mov
idivb
jg
jbe
rolb
inc
js
or
mov
mov
jg
ja
jns
shlb
mov
subl
push
push
cltd
in
push
bound
pusha
lods
sbb
or
inc
and
adc
leave
xchg
push
sbb
push
or
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
addr16
jle
aas
jg
jle
jo
mov
jl
jns
dec
push
xchg
xchg
pop
mov
pop
scas
sarl
mov
stc
repnz
rol
dec
jae
add
and
clc
fwait
mov
bound
cmove
add
add
inc
test
xchg
sub
popa
sti
jbe
inc
setae
xchg
neg
in
and
js
fsubs
sub
adcl
fucom
cmpsl
add
mov
test
mov
mov
push
insl
imul
mov
sub
sbb
jb
sub
fiaddl
popa
scas
inc
pushf
sub
dec
or
loope
mov
sbb
dec
xchg
repz
fwait
cmp
test
sub
lds
aas
pop
xchg
enter
xchg
in
adc
mov
sub
icebp
jl
test
aad
and
xchg
push
xor
les
push
call
or
xchg
mov
inc
sar
pusha
adc
sbb
mov
cs
mov
loope
out
cmp
popa
sub
mov
or
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
subb
mov
clc
jle
aas
jg
jle
out
cmp
scas
sbb
std
inc
pop
and
psubusb
dec
xlat
js
push
adc
push
mov
or
stc
cltd
mov
gs
xchg
dec
test
mov
fwait
dec
inc
out
insb
test
pop
fldpi
push
imul
aam
shrb
xorl
adc
jp
inc
clc
leave
xchg
enter
lahf
cmp
adc
or
xchg
clc
repnz
dec
jl
sub
adc
andb
cmp
mov
das
icebp
add
outsl
lahf
cli
mov
and
adc
sbb
add
inc
mov
pusha
jge
adc
icebp
lahf
lods
adc
mov
jbe
push
pop
lods
shlb
movsl
mov
jle
pop
dec
add
cmc
lock
xor
pop
push
or
popf
loop
pop
and
sub
addb
mov
jl
sbb
push
sti
gs
mov
or
mov
fldcw
xchg
cltd
or
xchg
pop
pushf
push
mov
test
das
or
dec
in
sbb
mov
xchg
mov
mov
int
int3
in
or
in
mov
nop
xchg
mov
add
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
int3
xor
stc
jle
aas
jg
jle
sub
adc
int3
stos
sub
les
cltd
inc
addr16
push
cmp
andb
mov
cmc
call
ret
lds
push
dec
push
fidivs
push
mov
negl
movsl
orb
mov
loopne
sub
mov
and
jno
mov
in
jmp
sbb
adc
out
jb
adc
jle
mov
movsl
aam
add
cmp
shll
mov
mov
mov
repz
xchg
test
pusha
jb
cmp
adc
mov
pop
inc
out
sbb
sbb
mov
adc
add
cmp
mov
jp
outsb
push
fistl
mov
or
dec
mov
sbb
sarb
test
cli
mov
fwait
hlt
imul
test
inc
or
jecxz
icebp
out
and
call
mov
pushf
lock
adc
stos
sbb
or
inc
cmpsl
add
jmp
xor
mov
sar
enter
out
test
pop
mov
cli
inc
movsl
add
ret
cmp
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
adc
push
and
aas
jg
jle
sub
dec
xchg
aaa
movsb
sbb
shlb
sub
enter
xor
and
inc
jge
pop
xchg
xorl
cmp
sarl
aas
sbb
inc
xor
fucomip
int3
fistpll
mov
int
aas
adc
push
pop
out
les
daa
test
and
sub
adc
lcall
adc
loop
sub
dec
outsb
adc
inc
add
mov
add
dec
inc
iret
in
jo
or
mov
fdivp
adc
addb
insb
sub
pusha
xlat
lock
mov
stc
mov
inc
mov
nop
data16
xchg
enter
jb
leave
inc
and
scas
shrb
les
stos
shll
pop
out
mov
dec
and
dec
movzbl
aad
xor
dec
xchg
sbb
mov
lods
push
sti
insl
sbb
dec
dec
sub
repz
cwtl
and
insb
xchg
jle
das
std
sbb
push
jge
pop
mov
es
mov
push
mov
cld
cmp
dec
or
add
add
add
lods
dec
insl
jge
popf
mov
scas
int
xchg
in
jno
jle
aas
jg
jle
pop
xchg
cs
out
push
jle
push
int3
daa
jnp
and
cmp
pop
or
dec
dec
hlt
outsl
mov
loop
xchg
pop
and
mov
aas
aaa
fwait
repz
bound
push
das
neg
repnz
sbb
ficompl
pusha
addr16
cs
jl
cmp
xor
add
ljmp
sub
jo
push
sub
push
test
je
mov
add
jmp
popa
outsl
popf
jnp
aas
loopne
mov
cmp
sahf
inc
sbb
and
push
sub
sarl
mov
int3
stos
mov
or
out
add
mov
pop
mov
inc
jp
es
in
out
pusha
push
push
adc
lahf
lret
xchg
pop
mov
mov
xchg
test
sbb
sbb
imul
or
stos
fwait
cmp
mov
mov
xor
xlat
mov
dec
push
lcall
fbld
fnsave
call
xchg
or
jbe
fdivl
loopne
loopne
vfmsubaddpd
stos
lods
add
mov
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
nop
adc
xlat
xor
jle
aas
jg
jle
mov
jp
out
jne
add
stc
nop
out
stc
and
scas
adc
xor
mov
and
test
inc
or
cmpsb
in
or
iret
repnz
inc
std
sub
scas
sbb
inc
lahf
rcl
pop
nop
lods
cmpsl
cli
out
int
mov
fwait
shlb
mov
and
sub
jne
sub
movsb
mov
sub
inc
sbb
stos
arpl
mov
shl
fidivs
add
jl
aaa
test
xor
sub
hlt
sti
out
sti
or
imul
imul
mov
bound
mov
inc
mov
push
jne
fidivl
mov
xor
movsl
pusha
stos
jb
outsb
pushf
test
sbb
aad
sahf
insb
or
das
mov
ljmp
lret
lods
pop
fwait
out
int3
insb
scas
mov
xchg
jg
outsl
mov
fldcw
das
or
jl
stos
fdiv
and
fcoml
push
aad
negl
dec
and
xor
fimuls
dec
cmp
data16
push
xchg
inc
outsl
jecxz,pt
mov
mov
pusha
clc
mov
mov
dec
jae
pusha
or
repnz
std
clc
mov
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
pop
push
clc
mov
insl
daa
xor
sbb
pushf
int3
pusha
arpl
addr16
nop
xchg
cli
jno
push
insl
ret
outsb
incb
addb
dec
push
cmp
mov
inc
inc
test
push
fdivp
mov
dec
pop
sub
adc
js
enter
fdiv
outsb
xchg
sub
test
mov
jle
out
inc
adc
cs
loopne
pusha
out
mov
push
mov
sahf
iret
sub
xor
xchg
mov
lret
stos
jecxz
leave
and
push
sub
insb
adc
push
fdivrs
add
out
sbb
mov
jg
jp
xlat
mov
mov
jbe
sbb
jmp
cld
and
jns
and
pop
jno
xchg
movsb
lods
lods
sahf
push
pop
xor
data16
icebp
addr16
push
loopne
inc
sbb
enter
test
xchg
jo
inc
sub
scas
add
cmp
pushf
fimuls
enter
adc
mov
in
mov
dec
dec
pop
and
outsb
and
mov
lahf
mull
xor
and
hlt
mov
and
or
mov
cld
sahf
push
dec
sub
daa
xlat
imul
add
and
and
sti
cmp
jmp
jle
jg
jle
les
fisubrl
and
aam
repz
pop
lahf
dec
test
repnz
jg
mov
cmp
mov
ret
les
jecxz
push
test
and
jg
pop
jbe
out
and
xlat
lahf
mov
dec
je
fcmovne
jns
cmp
inc
jg
pushf
xchg
jmp
sbb
jle
cli
jae
loop,pn
mov
cmp
popa
pop
or
adc
or
xor
mov
cs
jne
lds
push
adc
jle
jp,pt
mov
pop
test
cs
nop
jg
adc
fdivs
negl
or
mov
sar
inc
push
fidivs
scas
inc
out
adc
cltd
add
mov
mov
cli
dec
in
lods
data16
or
testl
jmp
and
mov
pop
xchg
imul
xor
iret
mov
push
test
adc
mov
cmp
repnz
enter
push
sbb
mov
cmpb
cmp
sbb
push
sahf
les
into
or
mov
push
pushl
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
mov
push
sbb
adc
clc
add
cmp
xlat
or
sbb
and
add
cs
push
loopne
sti
jb
sahf
cld
dec
cli
jns
std
repz
pop
stos
lret
xor
ds
xchg
lods
mov
dec
cmp
sub
adc
insb
sbb
or
mov
ret
popf
in
dec
sbb
imul
inc
in
sbb
scas
and
idivb
mov
mov
dec
sti
in
scas
ja
insl
mov
xchg
popa
jmp
cld
orb
scas
dec
jno
fsubl
mov
mov
in
data16
xchg
xor
in
push
pop
gs
sbb
and
mov
lret
stos
and
ljmp
xor
sti
jae
sbb
and
adc
jb
mov
mov
mov
mov
jg
and
lcall
dec
pop
fstps
cld
stos
mull
xchg
aaa
xchg
mov
ja
in
cmp
jle
es
out
adc
add
push
sbb
sbb
pop
roll
jns
lret
out
lret
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
jns
cli
dec
ss
aas
jg
jle
lret
or
or
pusha
sub
sbb
push
ret
cmp
cs
nop
and
stos
scas
js
clc
test
icebp
xor
sub
cmp
mov
js
test
inc
aam
xchg
mov
lods
sbb
jge
jbe
test
mov
movsl
inc
imul
sub
iret
es
xchg
sbb
icebp
xor
push
inc
mov
sahf
xor
shl
stc
icebp
xchg
daa
mov
ja
mov
fwait
or
mov
repz
inc
in
xchg
mov
mov
pop
fildll
jae
xor
adc
loope
lock
pop
inc
fmull
scas
fbstp
sub
ds
push
lea
xor
insb
fldlg2
cmp
ss
lahf
stos
rcrl
fisubrs
push
insb
push
fadd
mov
push
push
xchg
or
adc
fstpl
fs
lret
psraw
push
fidivrl
pusha
inc
test
int
fstpt
into
cmp
in
ret
push
xchg
jl
xchg
iret
dec
roll
test
sbb
push
push
mov
inc
or
inc
or
in
rorb
jbe
add
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
jo
pop
or
icebp
repnz
into
outsl
fidivrs
leave
xchg
jge
leave
fs
pop
mov
out
cltd
mov
sbb
inc
dec
subl
aas
lret
mov
lahf
test
jmp
std
cld
push
stc
add
lock
mov
and
pop
les
insl
gs
rcr
ds
stos
ror
inc
adc
pop
xchg
mov
mov
xor
std
repnz
pop
in
in
rcrl
mov
testb
test
inc
iret
fbld
addr16
pusha
adc
jns
lret
mov
into
jae
aam
and
pop
and
pop
repz
movsb
out
add
mov
xor
adc
scas
mov
push
ljmp
adc
xchg
mov
sub
mov
xor
dec
xor
fstl
push
lret
std
mov
hlt
xchg
push
or
lods
mov
cmp
cmp
sti
stc
or
cmp
imul
mov
sahf
dec
dec
jmp
and
lods
lret
movsl
sub
addr16
hlt
jle
aas
jg
jle
scas
push
cmp
xor
adcl
adc
dec
cmp
outsb
mov
inc
and
mov
lret
push
and
arpl
jne
add
dec
sub
push
in
cmc
popf
and
repnz
das
hlt
rcrb
adc
push
enter
das
lret
lods
out
xchg
in
fdivr
sbb
jno
lahf
jecxz
jl
xor
movsb
push
lcall
jle
test
mov
mov
inc
dec
mov
cmp
out
push
dec
inc
xchg
mov
add
imul
xor
insl
adc
and
jg
inc
hlt
mov
xchg
pushf
pop
lods
repnz
push
sbb
nop
push
int3
xlat
es
xchg
push
popa
in
stos
jp
sbb
cmp
repz
inc
dec
popa
push
arpl
xlat
inc
jmp
int
mov
pop
dec
push
mov
xchg
sahf
out
fldenv
lret
lret
leave
js
popa
pushf
or
fdivr
lea
lds
inc
pop
cmpsb
inc
decb
sub
cmp
pop
sbb
push
pushf
mov
imul
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
loope
test
idivb
aas
jg
jle
jl
lock
ljmp
leave
out
addr16
add
mov
cltd
dec
lds
nop
neg
xchg
cwtl
mov
adc
mov
daa
insl
in
movsb
mov
push
pop
mov
rcr
movsl
repz
int
push
mov
mov
xor
fucomip
jb
out
dec
mov
adc
in
pop
shlb
fistpl
call
xchg
adc
adc
aas
mov
ds
push
movsb
imull
les
inc
mov
mov
stc
in
jno
loop
incb
jb
movsl
lods
gs
push
and
pop
sbb
rcr
inc
sbb
xlat
cltd
add
mov
and
adcl
call
testb
pop
push
cltd
and
fsubrl
jmp
cmp
jo
es
mov
jno
inc
add
jmp
mov
xchg
lods
imul
and
add
out
cmp
mov
aad
daa
xchg
outsl
aam
stos
cmpsl
fbld
adc
adc
dec
test
loopne
pop
dec
minps
cwtl
push
rorb
aad
mov
inc
cld
mov
jmp
test
test
jge
cmp
int3
cmc
pusha
lret
jle
jg
jle
neg
sbb
aas
and
outsl
mov
sbb
fs
ja
dec
aaa
xor
xchg
mov
test
mov
push
clc
popa
test
mov
and
out
add
gs
mov
mov
and
lock
mov
je
call
mov
cmp
push
mov
in
lcall
shll
ficoms
inc
xor
enter
leave
sbbb
shlb
test
push
mov
incb
lcall
lea
mov
sbb
in
imul
test
jle
mov
addr16
nop
int3
testl
or
dec
gs
mov
or
xor
sub
pop
inc
adc
adc
fucomp
xchg
pop
cmpsl
add
jnp
leave
sbb
shlb
stos
outsb
es
and
loopne
gs
cmp
or
xlat
xor
xchg
and
mov
push
arpl
dec
ljmp
adc
bound
xchg
enter
mov
cmp
pop
jl
test
popf
jb
add
ret
add
add
jge
out
mov
adc
jle
jg
jle
sub
sbb
xor
mov
shll
mov
mov
mov
adc
insb
xorb
xchg
mov
cld
fs
les
lea
insb
gs
push
and
pop
fs
sti
jmp
jae
mov
out
outsl
or
in
pop
mov
mov
mov
xchg
test
xchg
ja,pn
pusha
pop
aaa
mov
cltd
mov
mov
test
mov
ret
incl
out
sbb
mov
sub
insb
add
jecxz
sahf
push
inc
pushf
or
mov
lcall
mov
rcrb
test
sub
aas
lea
mov
mov
xor
enter
lds
pop
dec
xor
data16
fisubrs
hlt
pop
rorb
ds
add
inc
ret
je
xchg
ret
or
sti
jl
mov
lea
in
pop
test
daa
push
mov
popf
loopne
push
out
pop
iret
pop
push
adcl
inc
inc
icebp
xor
jmp
mov
shrb
in
inc
or
add
mov
imul
mov
jmp
inc
sbb
gs
jae
or
jle
aas
jg
jle
push
dec
adc
test
imul
mov
int3
lds
inc
mov
cli
sti
cmp
sub
lods
pop
call
shll
sti
std
adc
mov
inc
add
mov
add
xchg
fcomps
rcr
cmp
aas
aad
test
aam
imul
ret
fldenv
sbb
dec
push
sbb
addb
pushf
popf
nop
push
in
mov
mov
or
sbb
xor
xchg
lret
mov
dec
inc
leave
cld
js
adc
dec
push
sub
jecxz
xchg
ret
js
sub
ja
cld
rcr
push
push
test
inc
xor
leave
pop
inc
add
mov
fildll
sub
ret
out
aam
rcll
xor
dec
pop
dec
sub
mov
push
inc
movsl
scas
rcll
test
mov
push
dec
push
xchg
and
mov
cmc
jnp
sub
pushf
test
addr16
repnz
push
movsl
adc
scas
mov
push
or
add
js
pushf
push
in
lds
lods
inc
mov
int3
shll
sub
inc
dec
sbb
rorl
or
enter
add
call
push
adc
inc
addb
or
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
cmpb
or
jg
jle
lods
sarb
sub
xchg
mov
into
outsb
and
into
insb
int3
fisttpll
and
sub
push
mov
nop
jmp
add
mov
sti
sar
imul
push
aaa
subb
sbb
mov
mov
or
jecxz
add
dec
pushf
out
add
bound
faddp
mov
jo
test
dec
jne
cmp
jecxz
xchg
int3
into
push
mov
xor
fdivp
fs
push
pop
mov
mov
jo
push
mov
lods
movsl
pop
cmp
pop
xchg
js
pop
push
xor
fwait
divl
insl
in
pop
notl
in
and
pop
jle
jbe
fmull
push
dec
sbb
push
push
or
adc
xchg
xor
jg
mov
sbb
push
je
pop
cs
outsb
sub
jne
mov
mov
xor
pop
jnp
jne
testl
xchg
and
aas
cwtl
cld
push
into
push
pop
jecxz
mov
int
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
cs
jecxz
jnp
aad
lock
inc
mov
xchg
mov
aas
jg
jle
subl
push
xor
and
outsl
cmpsb
scas
ss
mov
jae
or
ds
jae
fimull
imul
cwtl
lds
mov
daa
add
and
lods
push
adc
int
and
dec
xchg
in
dec
outsb
or
fwait
lods
mov
int
push
jg
in
aas
sar
sub
dec
xor
mov
xchg
mov
mov
ret
hlt
lea
add
repz
filds
mov
adc
jle
icebp
mov
pusha
mov
ljmp
add
lods
pop
jb
dec
jecxz
pop
xor
jae
cmp
sbb
imulb
jae
add
adc
inc
iret
fsub
xor
mov
jo
mov
nop
xlat
inc
jb
mov
les
xor
sub
cltd
cmc
pop
in
add
enter
andl
inc
insb
xchg
mov
popf
shll
add
push
pushf
adc
and
aas
lcall
cmp
adc
mov
enter
test
js
dec
call
jnp
mov
cmpsb
xor
xor
add
imul
jmp
into
jb
pop
inc
pop
fisttpll
or
inc
nop
lea
aas
jg
jle
cmp
and
inc
mov
push
jg
adc
orb
in
fldenv
lds
std
inc
dec
cmpsl
incb
cmp
aaa
adc
call
lret
imul
or
cmpsb
cmp
and
rorb
mov
pop
je
fsub
xor
in
sbb
cmp
mov
jo
pop
push
mov
aam
jecxz
ljmp
push
cmp
mov
shll
pushf
repz
jge
mov
stc
pop
pop
popf
addr16
scas
dec
mov
mov
adc
xchg
ret
bound
mulb
sub
xor
fucomi
mov
neg
add
push
inc
notl
add
inc
in
mov
push
or
xchg
sahf
cmp
test
push
adc
push
mov
popa
loope
rcrb
cmp
cmp
lock
pushf
leave
sahf
fcomip
mov
sbb
cmc
adc
xor
cmp
sbb
scas
push
or
push
hlt
sub
push
jmp
popa
jae
adc
icebp
call
xlat
shrb
cmpsb
test
mov
mov
call
pusha
inc
jae
cmc
test
pop
cmp
add
add
idivl
push
jp
sti
inc
aaa
mov
mov
jle
jg
jle
dec
sub
sbb
int3
aam
bound
mov
dec
push
pushf
repz
push
shlb
mov
pop
jo
loopne
dec
lret
sbb
adc
xchg
and
cmpsb
orl
or
and
sbb
jnp
pop
aad
fisubs
cs
in
scas
sub
xor
lcall
inc
push
inc
push
subl
sbb
mov
dec
lea
enter
test
push
and
cmp
rcrb
faddl
fwait
sub
popa
imul
es
repz
std
loope
jp
movsl
sbb
shlb
add
add
imul
dec
fcmovnbe
subb
push
mov
arpl
cmp
sub
leave
sbb
sub
cs
sbb
inc
in
rol
or
sbb
cwtl
adc
sub
adc
mov
out
cld
dec
cli
sarb
test
push
xchg
lret
imul
jg
ret
dec
cmp
mov
inc
in
fisubrl
sbb
jbe
mov
rorl
or
enter
cli
decl
add
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
les
jne
cmpb
jg
jle
imul
das
cmc
das
inc
and
xchg
inc
sbbb
push
icebp
xor
jg
jle
loopne
jg
adc
push
ret
cmp
mov
mov
insl
pop
add
lahf
pop
movsb
popa
inc
push
pop
mov
popa
dec
and
and
xorl
and
ret
popa
aas
ret
pop
loop
incb
ds
int3
in
pop
inc
mov
mov
add
push
je
inc
xlat
add
repz
dec
ja
pop
mov
push
sbb
lods
lahf
aaa
scas
mov
add
mov
inc
call
inc
jne
fcmovbe
aad
rclb
jmp
xor
inc
push
fildll
loop
in
jno
mov
bound
test
leave
mov
frstor
sbb
mov
ret
scas
aas
fdivrl
mov
sub
or
jnp
gs
in
stc
mov
shl
fistpl
mov
xchg
sub
xadd
sbb
stos
lret
rcll
lea
out
cld
xchg
push
mov
aam
popa
mov
jne
mov
lcall
fldl
lea
lcall
movl
fucomi
pop
add
add
arpl
imul
mov
jmp
inc
cmpl
jecxz
dec
cmp
loop
push
aam
and
adcl
and
lret
lds
ja
inc
clc
fisubrl
dec
dec
or
jge
mov
dec
mov
ljmpw
push
push
xor
mov
cmpsl
std
dec
xchg
test
push
fisttps
arpl
inc
push
or
cmpsb
adc
aad
jnp
imul
add
nop
xchg
jge
mov
test
movsl
in
lds
adc
adc
hlt
ss
pop
scas
pop
adcl
dec
xchg
push
mov
rol
xchg
pushf
ret
iret
cmp
mov
and
dec
aas
int
adc
jmp
mov
enter
mov
mov
cwtl
pop
lea
dec
fdivrs
fcmovb
arpl
loopne
dec
sbbb
mov
dec
test
sbb
cmc
inc
add
push
add
xor
mov
int
outsb
out
xchg
ret
filds
stos
fstp
push
fsubl
mov
dec
mov
jmp
popf
xor
cmp
rorb
inc
fwait
dec
and
std
push
loopne
add
les
out
inc
ljmp
add
add
aas
mov
cmp
dec
arpl
jp
cmpb
jg
jle
pop
aas
and
outsb
ljmp
ja
xorb
xor
add
xchg
inc
ljmp
inc
pop
mov
aaa
sub
sub
in
fmull
pop
icebp
testb
xor
mov
and
sub
jge
mov
pop
loope
push
add
negb
jns
aad
jns
dec
call
cmp
fnstsw
jecxz
and
popa
cmc
insb
loopne
fisubs
fs
add
test
xor
pusha
mov
xchg
sub
or
xchg
xlat
cltd
xor
xor
sub
repz
mov
js
pop
push
hlt
rep
test
mov
imul
lock
icebp
in
mov
lock
in
pop
cmpsl
orl
inc
fadds
xor
jp
or
jmp
mov
das
dec
icebp
xchg
daa
int3
adc
outsl
aad
and
add
enter
mov
push
mov
inc
sbb
push
ficoms
subl
lods
ss
cmp
je
jmp
xchg
mov
mov
adc
pop
jmp
cmpl
jg
jle
dec
dec
push
out
and
lcall
jp
lea
adc
sbb
loopne
pusha
inc
lret
into
aad
mov
pop
scas
push
dec
pop
jo
insl
inc
mov
mov
pop
das
sub
es
push
inc
ss
shlb
adc
test
popf
lret
stc
mov
lahf
inc
mov
shlb
adc
xlat
dec
loop
pop
xor
mov
mov
xor
add
mov
push
push
pop
mov
out
xor
or
push
ja
in
test
popf
sbb
jle
fisttps
andl
out
or
push
add
dec
xor
jae
sbb
push
sub
test
sub
in
xor
jp
cwtl
addr16
daa
mov
mov
out
stc
pop
add
mov
shrl
dec
pop
pop
mov
mov
push
test
sbb
rcr
scas
push
xor
add
jle
add
cmp
dec
mov
lret
enter
aam
mov
cmp
pop
es
scas
push
dec
pop
dec
mov
or
add
dec
adc
jns
rclb
insl
add
jg
jle
xor
mov
cmp
cmp
xchg
idiv
mov
jne
add
addr16
mov
inc
outsl
pop
push
imul
inc
loope
gs
push
jg
js
mov
cmpsl
sbb
jbe
push
out
xchg
pop
aam
xor
outsl
imul
div
dec
repz
out
in
jo
sbb
lahf
cmp
dec
out
dec
enter
cli
push
rcll
xor
mov
adc
in
mulb
sub
sub
or
lock
std
jge
mov
scas
push
fstps
data16
or
cmp
lret
adc
mov
sub
leave
inc
insb
add
xchg
dec
inc
xchg
repnz
push
ljmp
inc
js
xchg
sub
pushf
push
test
mov
mov
dec
aad
inc
aam
adc
hlt
mov
js
jne
lahf
dec
sahf
sub
imul
inc
or
adc
mov
ficomps
iret
or
lahf
mov
rorl
add
call
mov
push
pop
inc
xchg
jmp
ss
or
mov
jmp
xchg
movb
jle
out
xor
pop
out
pop
xor
leave
pop
adc
cmp
out
cmpsl
mov
enter
daa
sub
add
cli
aaa
inc
jae
pop
mov
fcos
ljmp
fbld
and
or
adc
mov
aam
xchg
clc
add
dec
sbb
mov
test
mov
sub
lahf
sbb
add
push
adc
iret
jne
in
sti
mov
and
xor
xor
jge
mov
fmull
mov
sbb
inc
mov
push
jl
and
mov
cmpsl
cmp
sub
hlt
mov
cmpl
lahf
orb
xchg
rorl
fisttpll
rol
xlat
cs
movsl
add
in
adc
push
dec
xlat
std
in
push
jmp
fwait
and
enter
inc
gs
notb
jne
bound
frstor
jne
test
lods
movsb
push
cmp
loop
jle
push
pushf
in
add
and
sub
aam
in
hlt
cmpsb
test
fistpl
pushl
xchg
inc
test
push
and
inc
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
shrl
jle
aas
jg
jle
mov
jmp
mov
adc
inc
sbb
add
testb
jmp
xchg
adc
push
mov
les
add
mov
divl
call
push
int
lods
mov
das
das
cwtl
int
ficomps
mov
xchg
jmp
mov
push
in
popf
stos
rcl
push
xchg
mov
or
das
xorl
jno
add
aad
fwait
or
add
mov
dec
int
lahf
jp
mov
aad
jl
cmp
popf
out
rorl
lods
mov
imul
xchg
pushf
and
push
pop
aaa
jnp
fisubrl
std
dec
stos
mov
test
mov
cmp
cwtl
sar
xchg
iret
repz
mov
loop
hlt
cmp
jb
les
call
loope
mov
push
sti
inc
mov
add
dec
addr16
loope
popa
test
dec
jg
into
jne
mov
loopne
jae
push
xchg
loopne
fsubrs
mov
bound
ret
add
pop
mov
inc
gs
inc
adc
es
mov
pop
mulb
add
or
jle
inc
hlt
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
