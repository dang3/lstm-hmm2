push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
adc
jo
jo
jle
jo
xlat
cmp
rol
pop
push
add
outsb
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
cmp
adc
pop
cmp
enter
push
inc
test
cmc
loop
cltd
imul
push
in
bound
lcall
sbb
and
in
lods
add
push
sbb
pop
inc
mov
push
insl
dec
sub
xchg
mov
and
and
out
in
or
adc
cwtl
xor
jl
inc
push
sub
ficoms
xchg
test
jge
and
movsb
or
sub
add
stc
in
fiadds
jecxz
fistl
cmpsb
stc
bound
or
test
push
dec
or
jno
mov
scas
cmp
push
stos
scas
cmp
mov
mov
call
mov
add
pop
fisubrl
push
xchg
push
mov
loop
xchg
and
pop
mov
sbb
or
scas
fadds
mov
jb
in
lret
or
fldl
dec
sbbb
dec
or
decl
cmp
add
rcrl
jle
lahf
out
inc
or
cmpsb
push
xor
xor
pushf
sbb
repz
jb
pop
xchg
push
stos
inc
leave
sarl
in
aad
stos
and
les
dec
stos
nop
je
mov
jmp
clc
icebp
mov
icebp
ficompl
jne
jo
jo
jo
jo
shlb
cmc
leave
jge
idivb
rorb
ljmp
push
sbb
sub
jbe
sbb
imul
std
sub
pop
data16
adc
hlt
mov
movsl
test
sbb
js
cmp
dec
cld
pop
es
sbb
pusha
iret
push
xchg
pusha
test
lea
bound
mov
aam
fsubrp
xchg
mov
inc
mov
out
lods
mov
pop
pop
cmp
sti
add
je
clc
jmp
fbstp
push
mov
imul
fwait
cli
fsubrp
xor
ja
jns
or
adc
addr16
jb
jb
and
mov
rcl
loope
jl
dec
lcall
mov
mov
jecxz
mov
jne
popa
pushl
filds
inc
cmp
out
adc
jmp
rcrl
lahf
mov
in
inc
addb
out
rcr
sub
push
das
sbb
orl
and
sub
add
loopne
fisubl
or
test
rcrb
push
out
cmp
lret
popf
and
test
sub
dec
lods
out
mov
lret
dec
sub
push
inc
mov
add
pushf
add
lret
inc
jb
repz
add
xor
out
scas
dec
and
pop
xorb
lods
add
dec
pop
sahf
sti
inc
sbb
mov
mov
inc
jmp
aaa
cld
inc
ret
xchg
shrl
gs
xchg
nop
sti
inc
xlat
in
xor
cmp
adc
cmpsl
out
pop
lods
addl
pop
pop
cmp
ljmp
mov
push
into
and
inc
rorb
fmuls
call
add
lods
dec
lods
imul
dec
add
jo
jo
or
xor
aaa
sarl
dec
xchg
mov
xor
mov
aam
xchg
insl
test
adc
es
cmpb
daa
pop
inc
push
outsb
dec
mov
dec
test
imul
adc
add
mov
mov
and
and
and
les
data16
mov
xlat
addr16
push
sub
xlat
add
xor
mov
pop
push
xor
xchg
inc
jo
cmp
mov
jb
mov
call
and
repnz
jbe
repz
cmp
shll
js
mov
sub
xor
adc
mov
xlat
cltd
lahf
in
inc
rclb
fmuls
sub
inc
pop
ja
xchg
sbb
sub
adc
mov
mov
ljmp
les
hlt
cmp
mov
pop
call
dec
xor
in
jno
out
andb
pop
mov
scas
dec
xor
add
pop
addr16
ffreep
and
push
test
jge
lods
jmp
scas
shrl
fwait
sub
pushf
stos
pop
jb
lds
mov
and
push
push
and
bound
lcall
stos
loopne
fldenv
das
fmull
pop
mov
repz
scas
mov
adc
mov
xchg
inc
mov
adc
jp
fwait
dec
fwait
push
test
mov
lahf
out
hlt
push
and
mov
in
xor
push
mov
in
ret
push
cld
jmp
cmp
shl
pop
mov
or
fisttpl
int3
cwtl
mov
pop
pop
or
xor
dec
add
xor
mov
pop
in
push
cmp
sub
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
sub
jo
jle
jo
pop
dec
xchg
movsb
fwait
imul
fidivrs
aam
mov
pop
mov
xchg
sbb
insl
cmp
dec
mov
add
stc
and
inc
adc
orl
jbe
iret
mov
jbe
jmp
loope
decl
xor
xchg
clc
add
jno
cs
out
mov
xchg
loope
nop
jo
xchg
dec
scas
push
add
je
subl
xor
movsb
dec
xchg
inc
rolb
inc
jge
insl
mov
pop
xchg
cltd
pop
sbb
rorl
out
fildll
mov
inc
ljmp
mov
sub
out
imul
and
idivb
cmpsb
test
ljmp
sub
scas
cmpl
fiaddl
xor
ret
or
jp
sub
ss
loopne
popa
pop
adc
cltd
fnstsw
sub
dec
push
hlt
stos
outsb
movsb
movsl
cwtl
xchg
cli
dec
or
fdiv
lea
sahf
outsl
and
mov
sbb
xchg
imul
cli
shlb
lods
or
imul
add
lock
lret
imul
jle
sbb
push
test
cmp
sbb
std
jle
repnz
in
loopne
movsb
insb
cmp
movsl
out
js
fstpl
sub
mov
adc
inc
inc
fwait
cmp
lahf
cli
repz
mov
movl
lahf
mov
mov
iret
loopne
mov
scas
xor
ja
jl
mov
stos
test
pop
pop
mov
jge
pop
xchg
sub
mov
nop
into
adc
out
mov
sarw
and
mov
dec
ljmp
fadds
jge
cmp
ret
ds
repnz
cmp
pmaddwd
js
push
inc
dec
stos
dec
rcl
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
js
jo
jle
jo
xchg
dec
mov
out
rorb
js
mov
sub
idivb
in
pop
lods
cli
fmul
pop
push
arpl
mov
fnsave
movsb
xor
cltd
repnz
pop
and
jo
or
test
mov
out
das
cld
jle
in
jmp
xchg
cld
cwtl
cmp
pop
test
in
and
andl
sbb
movsl
test
jge
inc
or
cmp
mov
xor
dec
mov
push
xor
mov
push
call
inc
nop
je
xor
dec
dec
inc
aaa
decb
sub
mov
push
pushl
push
dec
aas
gs
call
xchg
je
or
push
mov
dec
call
xchg
divl
out
movsb
or
adc
nop
test
push
jge
cmc
sub
push
xchg
cltd
sbb
rcl
mov
and
mov
cmpb
test
cwtl
lock
mov
orb
adc
int
mov
loopne
cmp
pop
dec
movsb
dec
std
mov
mov
cltd
mov
push
test
inc
sub
mov
lds
sub
push
test
enter
pop
pop
icebp
push
and
pop
mov
adc
outsb
mov
xchg
mov
stos
je
stos
pop
jg
jle
jecxz
bnd
adcl
and
lods
dec
rorb
fisubs
orb
xor
xlat
rcr
lret
inc
and
xchg
scas
jecxz
dec
call
les
mov
lods
fs
ljmp
xor
adc
push
and
dec
cmpsl
add
fistpll
in
sbb
mov
popf
lret
adcb
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
cwtl
inc
jo
jo
jo
jo
scas
enter
mov
xchg
fsubs
xchg
daa
in
lahf
out
pop
fdiv
mov
jbe
push
leave
sbb
cmp
sbb
inc
ret
cmp
jnp
xchg
loopne
loope
adc
push
aam
lret
cli
dec
scas
pop
or
xor
outsl
pusha
loop
cmc
repnz
push
movsl
adc
lods
loopne
pushl
mov
mov
lret
xchg
xor
push
movsb
lea
pop
inc
xor
inc
test
xlat
inc
mov
adc
jno
mov
fisubs
mov
adc
rcrb
or
add
mov
push
jne
daa
adc
mov
xor
shrb
ret
pop
test
push
stos
shll
orl
or
inc
imul
aad
in
gs
popl
mov
mov
push
push
xor
out
stos
jne
out
jne
xor
sbb
or
insl
xor
adcl
sub
mov
add
inc
cmp
jge
mov
loop
push
jo
cmpsb
pop
sbb
pop
enter
cmp
not
sbb
add
std
jmp
xchg
in
xor
dec
xchg
jl
fucomp
push
cmp
das
adc
sub
jp
arpl
inc
cmc
or
mov
xor
push
cld
call
popa
ja
fcomp
dec
popa
jmp
mov
jl
inc
fwait
ret
inc
inc
push
mov
sub
push
pop
aaa
lds
pusha
lcall
les
pop
jmp
daa
pop
stos
stos
mov
ljmp
sbb
lahf
out
sbb
vphsubbw
mov
imul
push
popa
cmp
adc
imul
jp
add
jmp
add
out
dec
pop
dec
mov
in
in
pushf
push
and
jecxz
lods
addr16
dec
add
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
cmp
sbb
jo
jo
jo
jo
cli
dec
cmpsb
xor
clc
stc
add
jge
adc
inc
sbb
dec
gs
adcb
nop
into
cmp
lock
sbb
or
mov
aam
mov
mov
mul
xchg
cmp
cmp
mov
pop
adc
inc
inc
out
ljmp
inc
pop
pop
lret
movsb
stos
dec
jecxz
push
aad
shl
xchg
pop
mov
pop
and
cmpsb
push
stc
repnz
lock
xor
cmp
sub
fnstenv
inc
fxch
push
shlb
sti
mov
out
leave
xchg
ror
jp
fmulp
ret
testb
pop
jbe
or
jmp
cmp
test
dec
or
jecxz
adcl
rol
fwait
pop
daa
jae
insl
jp
push
shrb
pusha
inc
push
dec
cmp
and
mov
test
fbld
arpl
dec
pop
and
in
sbb
sub
mov
dec
aam
bound
jp
cmp
inc
fucomp
fisttps
fmul
imul
js
mov
fdivr
adc
aaa
addr16
mov
lds
mov
jmp
xchg
mov
sbb
stc
enter
test
xchg
pop
out
push
xchg
mov
sub
daa
out
ffreep
in
cmc
jno
pop
cmp
ja
or
ds
dec
dec
mov
sub
push
scas
jle
xchg
push
push
cmp
je
in
add
mov
out
and
adc
cld
mov
jnp
in
ljmp
in
xchg
bound
and
clc
pusha
lret
mov
bound
dec
aam
pop
pop
or
cltd
pop
or
or
les
push
dec
std
movsl
push
jmp
mov
aas
sub
fsubp
cmc
popa
pusha
test
fwait
sarl
add
into
pop
lods
inc
sahf
xchg
nopl
mov
rolb
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
sti
fnsave
jo
jo
jo
push
fistpll
push
inc
jo
mov
icebp
inc
cmc
scas
movsl
sub
test
loope
and
rcrb
outsl
and
loopne
push
sub
into
int
mov
cltd
push
mov
push
or
inc
fcomi
jle
ja
xor
fbld
enter
addr16
pop
daa
dec
mov
popf
xor
in
movsb
je,pt
mov
sbb
stos
push
js
adc
pop
sarl
insl
or
jne
mov
out
aaa
push
fwait
rorb
shlb
mov
test
sbb
sub
jo
in
pop
adc
inc
xchg
lods
sbb
lret
in
dec
or
lret
or
nop
aam
jg
xchg
or
xchg
pusha
add
fcompl
xor
pop
fbld
enter
jno
dec
jne
inc
cmp
and
dec
mov
sub
push
int3
cld
dec
inc
in
push
mov
jo
out
xchg
lods
dec
xchg
loopne
jbe
adcb
rcl
dec
jo
cltd
or
movsl
nop
scas
call
jae
or
mov
andb
sbb
js
mov
xchg
push
fildll
and
xlat
sarl
movsb
into
fwait
bound
mov
movaps
inc
xor
repz
cmp
sub
cmp
sbb
cmpsl
les
mov
test
daa
rclb
xor
jo
rclb
add
adc
or
inc
add
push
sub
push
popa
div
jae
cmc
scas
or
test
dec
sub
aaa
nop
add
jmp
in
pop
dec
shrl
cmp
and
push
push
movsl
lcall
or
in
push
push
fsubl
mov
fldl2t
adc
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
push
jo
jo
jo
jo
cmpsl
lret
insl
mov
insb
movsl
pop
mov
pop
dec
sub
shlb
jns
jecxz
fmuls
in
inc
int
mov
cmp
add
movsl
add
roll
js
xor
jp
push
loopne
jb
lods
leave
mov
lds
and
shll
jecxz
outsb
jno
test
je
aam
push
imul
pushf
inc
int
mov
cmp
pop
and
bound
or
pusha
into
test
inc
sbb
loope
cmp
cmpsl
inc
and
fidivl
xchg
int3
std
fstps
adc
sbb
or
mov
push
cmpsb
pop
and
mov
inc
out
xchg
or
scas
push
pop
js
push
lcall
sbb
in
jecxz
mov
inc
push
push
mov
cmpsb
xor
dec
scas
sbb
sub
lods
mov
ret
and
adc
xor
test
dec
mov
mov
mov
sub
pushf
inc
mov
sahf
cmp
push
cmc
outsl
xchg
aas
sub
test
jae
sahf
lcall
arpl
shll
add
or
pop
cli
jns
ret
sub
in
lods
mov
xor
out
nop
xorl
insl
pop
in
push
ret
ds
push
push
bound
or
les
lods
lods
xchg
fistl
jb
stc
lds
sub
sub
fs
icebp
pop
pop
sub
cli
nop
dec
mov
das
stos
xchg
faddp
mov
scas
dec
add
or
fwait
xor
dec
sbb
push
add
xor
sub
sub
and
call
insb
jae
cmp
xor
mov
add
inc
icebp
pop
add
xor
lcall
jbe
pop
and
out
jae
inc
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
adc
jno
mov
sub
jb
sub
jb
xor
je
cwtl
stc
js
mov
mov
add
sub
int3
mov
cmp
aam
sbb
cmp
adc
mov
jbe
and
or
cwtl
jmp
sbb
pop
mov
stos
mov
std
and
cmp
popa
aad
cltd
mov
xchg
pop
mov
jmp
jae
xor
inc
dec
mov
cmp
pop
iret
cwtl
sub
mov
subb
aad
ss
aaa
mov
fistpl
adc
xchg
outsl
sarb
pop
pop
and
or
js
std
mov
push
pushf
sbb
iret
cmpsb
dec
stc
push
sbb
or
das
adc
pop
hlt
rol
mov
pop
mov
push
les
push
lods
test
sub
ret
xchg
xchg
sub
mov
sbb
sahf
aaa
movsb
sahf
movsb
jb
push
test
pop
push
js
push
lcall
jmp
pop
adcl
scas
push
out
cmpsl
pushf
pop
push
outsl
in
lea
clc
sub
xchg
leave
mov
push
push
scas
pop
lret
roll
and
lahf
fistpll
shl
jnp
cmc
pop
popa
inc
cli
dec
mov
mov
faddl
movsb
ja
aam
inc
push
jbe
xchg
or
cli
pop
inc
fs
xchg
push
xchg
clc
mov
dec
sahf
add
or
sbb
push
jecxz
push
insb
sbbb
and
jp
lods
in
pop
cs
pop
cmp
rcll
loop
and
fistl
iret
fimull
ret
dec
add
int3
movsb
add
jl
and
dec
fsubl
inc
test
lods
cmp
jae
fwait
negb
cld
arpl
pop
jg
pop
repnz
sub
cli
dec
lods
or
sub
negl
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
push
out
out
nop
sti
cwtl
jle
cmp
and
mov
ss
mov
inc
jae
ljmp
push
cmpsb
mov
pop
int3
scas
sub
sbb
clc
or
xchg
jecxz
ds
aam
out
rcrl
pop
sar
mov
adc
xchg
push
repnz
aam
jno
cmpsl
xor
pop
inc
pop
push
aam
dec
stos
cmp
pop
add
or
dec
or
inc
inc
in
in
scas
add
jne
hlt
rorl
or
rcll
mov
push
dec
sub
rcll
mov
stos
push
add
test
pop
lods
ja
or
lcall
xor
ljmp
fs
dec
push
mov
pop
repz
xchg
int3
hlt
sbb
pop
mov
pushf
mov
out
pushf
pop
adc
mov
aam
loope
int3
mov
xor
mov
fsubrs
addr16
arpl
mov
or
leave
iret
aas
jmp
repnz
pop
sbb
enter
sub
or
cmovge
out
ljmp
imul
pusha
inc
add
sbb
or
imul
dec
or
mov
insl
pop
adc
testl
push
lcall
loope
jp
sub
inc
xorb
inc
int3
popa
sub
jb
xchg
inc
pop
fidivrl
mov
lahf
sbb
sbb
xchg
mov
imul
mov
cmp
cltd
adc
bound
pop
mov
mov
lcall
push
in
pushf
pop
dec
ret
popf
clc
fidivs
or
outsb
sub
push
decb
lea
je
sbb
jno
sub
movsl
pop
sub
or
cmpsl
decb
and
sbb
incl
shlb
mov
pop
cld
or
xchg
pop
push
mov
jp
xor
and
xor
out
jbe
mov
cli
cld
push
xor
mov
loopne
or
stc
add
xchg
mov
fsubl
mov
pop
test
jg
dec
ficoml
test
jnp
xchg
cmpsl
sbb
xchg
loope
loopne
scas
insb
xor
sahf
js
jge
mov
cmpsl
mov
leave
xor
es
inc
pop
dec
das
adcl
aas
mov
mov
mov
mov
push
cmp
dec
call
mov
jge
xchg
xchg
sbb
clc
sbbb
scas
mov
dec
sub
or
not
lock
dec
je
je
cs
sub
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
add
xchg
mov
inc
lea
stos
ds
mov
aaa
faddl
push
addr16
sub
cmp
cld
arpl
imul
xchg
js
and
mov
dec
cmpsl
les
rcr
stc
loopne
cmp
nop
adc
sbb
add
push
mov
jle
arpl
pop
add
push
cmp
xor
scas
dec
cmp
mov
push
mov
cmp
mov
dec
in
fidivrl
inc
outsl
cmp
cmp
push
xchg
int
cwtl
inc
and
adc
adc
sub
cmpsl
bswap
testl
mov
push
fistps
aaa
xchg
cmp
js
cmc
jb
cmpl
movsb
shl
repz
cltd
inc
cmp
das
int
gs
jnp
xchg
or
insl
inc
xorb
sub
dec
aad
cmp
mov
mov
pop
sbb
lods
dec
dec
pop
xchg
movsb
lock
jecxz
fimull
xchg
arpl
int3
loop
push
iret
iret
pop
pop
icebp
ret
push
jl
std
std
ret
push
pop
xchg
popf
jne
mov
and
sub
adc
adc
inc
push
dec
test
pusha
cmc
adc
lods
fsubl
loope
pop
sbb
sub
jnp
cld
lret
negl
outsb
sahf
outsb
mov
jae
cmp
into
push
xlat
gs
pop
in
rcrb
sti
fbstp
daa
mov
fs
xchg
inc
mov
mov
lock
inc
in
mov
pop
mov
lods
xor
mov
imul
mov
inc
stos
js
enter
gs
lcall
jnp
jb
cmc
lods
mov
xchg
int3
adc
sbb
test
jb
stos
repz
cmp
add
pop
inc
add
loopne
mov
push
les
std
xor
jno
addr16
lock
mov
push
jne
cmc
mov
dec
inc
inc
sbb
fimull
mov
or
lods
daa
fnstenv
and
pop
sub
sbb
jnp
out
push
ficompl
xchg
or
sbb
inc
stc
jp
repz
push
mov
fs
add
xchg
pusha
fwait
xlat
jmp
mov
lahf
cmp
or
jle
fcomps
sbb
jae
mov
jg
mov
pop
std
fdivr
cs
push
xor
lcall
dec
jecxz
push
pushf
in
das
insl
out
fwait
in
push
cmp
outsl
nop
icebp
mov
or
outsb
add
or
pushf
inc
mov
addr16
lock
and
mov
mov
mov
xor
add
jmp
fistl
loope
lds
add
cmp
jo
mov
repz
jg
in
adc
jle
push
push
nop
dec
repnz
push
iret
sbb
sarl
lds
push
xchg
cmp
das
loopne
sarl
mov
pop
push
cmpsl
enter
xchg
adc
and
scas
std
out
xchg
adc
aam
notb
int
xchg
or
add
mov
aam
out
push
negb
addl
add
imull
fucomp
int3
lock
inc
pop
pop
cmpsl
and
sahf
adc
jne
mov
dec
inc
bnd
pop
scas
mov
jnp
and
and
mov
xchg
loopne
add
mov
cltd
imul
dec
cmpb
sbb
ret
out
fimull
push
loop
adc
lods
mov
iret
lret
gs
mov
xlat
lcall
pop
loope
pushf
rcrl
mov
dec
out
imul
jbe
mov
mul
adc
les
xor
jbe
push
movsb
push
and
xor
insb
loope
adc
xor
ficomps
dec
jl
push
jne
sub
stos
cmp
cmp
lret
dec
dec
hlt
push
pusha
imul
test
xchg
addr16
repz
cs
mov
test
popf
lea
decl
mov
ss
xchg
and
push
push
mov
mov
in
xchg
xchg
lods
and
jp
aam
xor
outsl
jae
inc
es
je
jae
sahf
repz
out
or
mov
nop
pop
and
push
mov
add
cmpl
in
sbb
cs
jbe
xchg
xor
adcb
mov
loopne
les
loop
mov
mov
std
cmp
dec
sub
loope
push
push
mov
xchg
and
mov
push
pusha
iret
sub
testl
jno
xor
cmp
sbb
push
call
pop
ss
jns
outsl
ljmp
out
jno
sbb
pushf
repz
aad
in
adc
xor
add
xlat
jbe
fcoml
jmp
pop
or
cld
jnp
xchg
lock
and
jp
jo
pop
inc
cmp
imul
in
movq
ja
mov
out
fstpl
jge
mov
dec
repz
xor
notb
test
or
jecxz
loope
xor
mov
les
mov
mov
push
sti
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
aad
push
insb
cmp
jo
jle
jo
in
jbe
sbb
push
xor
push
jp
xor
daa
test
lret
adc
mov
or
mov
pop
fucomip
out
cwtl
push
push
cld
and
loop
sbb
push
inc
adc
mov
sub
xlat
add
cld
loop
ret
scas
xorb
rclb
mov
sbb
pmaxub
add
cmp
sbb
push
cli
push
push
rcl
mov
mov
dec
ja
dec
out
mov
cmp
mov
out
icebp
sbb
imul
ror
into
add
dec
stc
fidivs
xchg
pop
sarb
int
flds
ficoms
mov
outsb
inc
or
pushf
test
xor
imul
jecxz
cmp
jo
test
sbb
fiaddl
in
outsl
pushf
pop
aam
test
or
popa
add
sub
xor
popf
jge
lret
dec
mov
scas
pop
out
fbstp
cwtl
iret
cmp
adc
and
or
push
mov
cli
adc
or
sub
pop
xchg
rcr
movsb
inc
xchg
sbb
mov
xor
push
inc
fistpll
or
mov
and
jmp
pop
sbb
jmp
aaa
cmp
jb
test
add
pop
jp
pushw
push
pop
outsl
push
shl
loopne
dec
inc
push
andb
dec
push
daa
add
mov
push
xchg
mov
fmuls
adc
adc
fcoms
push
xchg
jp
mov
push
push
add
adc
adc
and
mov
int
mov
mov
sbb
or
fsubl
jbe
mov
aam
out
cmpsb
hlt
add
and
ret
int
movsb
lahf
add
out
xlat
lcall
mov
leave
xlat
mov
xchg
add
leave
push
jno
mov
inc
push
insb
xor
aas
inc
jns
sub
ja
shl
fucomp
paddsb
stos
hlt
jp
es
mov
cmp
hlt
cmp
stc
aaa
rorl
das
pusha
push
dec
jecxz
pop
dec
insl
int3
pop
lods
cwtl
inc
fisttpl
or
ficomps
ret
bnd
mov
add
sahf
pop
js
loope
loope
ds
std
pop
cld
inc
cmp
and
push
lcall
lds
cwtl
outsb
push
out
mov
dec
sbb
mov
mov
push
jno
out
test
lods
mov
xchg
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
adc
cmp
jae
push
bound
mov
sti
pop
jbe
jae
test
pop
fs
stc
push
fs
lret
push
std
loopne
adc
jecxz
mov
sbb
dec
out
andl
loopne
clc
dec
stc
adc
gs
out
int
inc
sub
sbb
ja
cmc
push
pop
ret
pop
sbbb
daa
ret
lret
std
cmp
vmovntdq
pop
push
adc
repnz
into
test
out
or
cmp
add
dec
jb
out
mov
subl
cs
dec
fstpt
add
sahf
xlat
mulb
or
xchg
and
rolb
stc
cld
sbb
jns,pn
fsincos
cmp
out
mov
leave
arpl
stos
das
xchg
sub
out
jno
stos
jo
add
xchg
les
call
addb
xchg
mov
ss
imulb
out
mov
pop
fcmove
lods
nop
mov
fst
test
mov
sub
lret
mov
bound
mov
ret
xchg
adcl
xchg
inc
xchg
mov
fwait
push
dec
push
stos
dec
sbb
scas
mov
pop
and
add
shlb
into
add
out
sbb
inc
in
lods
loopne
inc
jge
cmpsb
mov
cli
push
mov
push
pop
pop
lret
ds
test
pop
addr16
push
stc
nop
out
jp
popf
xor
adc
dec
xor
adc
mov
scas
inc
or
testl
les
fisubrs
sub
inc
out
in
ret
stos
cmp
push
xor
add
sub
aad
test
jnp
cmp
push
inc
pop
aad
sahf
test
ljmp
xor
and
add
popa
pop
xor
cmp
and
mov
idivl
std
test
or
pop
sub
scas
loopne
out
inc
pop
lds
mov
cmpsb
push
adc
call
repnz
lea
push
sbb
or
roll
int3
sbb
scas
hlt
cmpsl
push
scas
cld
dec
sarb
push
ret
mov
es
test
mov
ds
js
push
add
mov
push
aas
push
add
inc
int3
pop
xchg
push
adc
pusha
sahf
stos
push
mov
shlb
jecxz
adc
out
add
sbb
jo
popf
push
and
js
test
fxam
loop
xlat
es
xor
in
xchg
push
loope
and
xor
rolb
mov
jne
inc
cmpsl
cmc
les
jae
jecxz
mov
cmp
ja
cli
fs
mov
sahf
add
ljmp
sbb
cmpsb
call
arpl
inc
pop
push
jecxz
lds
push
xor
bound
repz
arpl
imul
pop
mov
cmpb
or
lods
jg
loop
sub
mov
lcall
decl
mov
jmp
inc
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
movsb
lds
jo
cmp
sub
pop
faddl
mov
mov
add
or
jne
aam
fbld
in
push
push
int3
sahf
xor
addr16
cmp
nop
mov
sarb
pop
mov
arpl
dec
mov
push
mov
into
neg
or
cwtl
sti
ret
add
rcll
insb
mov
sbb
stc
jno
out
adc
pop
inc
jns
pop
loope
dec
jnp
clc
xchg
push
push
filds
movsb
xchg
mov
repz
adc
xor
test
mov
or
lods
pop
lds
or
cltd
fistl
call
xchg
gs
adc
mov
imul
push
out
in
xchg
std
push
aaa
es
daa
jbe
dec
mov
std
cmp
adc
pushf
inc
xchg
shlb
leave
jl
dec
ret
adc
out
leave
mov
cmp
pop
add
lahf
or
xor
in
push
mov
aaa
std
sub
and
pop
test
inc
or
pop
stc
divb
mov
add
or
mov
insl
fisubs
jns
sub
push
test
or
add
fcomps
test
or
das
mov
aaa
pop
orb
mov
sbb
sub
mov
out
fs
jp
or
pop
dec
xor
gs
clc
jecxz
out
adc
gs
cli
pop
out
dec
cld
out
sarl
mov
notl
sti
lds
xchg
or
inc
in
push
movsl
mov
nop
add
xor
fsts
ficomps
sarl
jg
nop
mov
fistl
push
stos
add
adc
cmp
rclb
test
sbb
or
add
in
jp
mov
js
fcmovu
pop
dec
out
adc
jg
ja
jge,pn
mov
out
and
mov
fistps
mov
mov
test
bound
sbb
or
out
mov
in
sub
rorl
sbb
dec
cmp
mov
ffree
loope
sbb
int3
icebp
dec
push
sbb
cmpsw
jp
outsb
and
out
push
stc
addr16
inc
xlat
cs
push
pop
bound
and
test
pop
add
dec
lods
gs
jl
nop
fisttpll
jnp
push
movsl
lcall
pop
gs
sub
sbb
leave
into
sbbl
jle
fisubrl
mov
mov
pop
pop
xchg
pusha
lahf
sub
jp
and
addb
mov
scas
xchg
and
loop
adc
es
jmp
push
mov
mov
mov
mov
adc
pmaxub
in
sub
rcrl
jns
mov
mov
jno
leave
pop
jns
jmp
mov
pop
ds
jge
mov
sub
and
sahf
adc
inc
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
xchg
roll
jge
jo
in
mov
insl
leave
inc
in
sbb
ss
jo
jl
mov
cmp
adc
fiaddl
ljmp
add
xchg
xchg
push
sub
scas
cmp
rcrb
into
mov
jne
push
stos
mov
cmpsl
add
inc
mov
in
ret
bound
lods
cmpsl
mov
stos
scas
movl
sub
decb
jb
or
addl
fcmove
test
jecxz
testb
and
pop
cmc
mov
jp
inc
jle
add
mov
cmp
mov
push
mov
jbe
sub
out
xor
mov
xor
popf
scas
jns
jne
pop
icebp
js
aam
xchg
pop
sub
adcl
push
mov
cltd
or
loop
pop
jecxz
sbb
dec
push
out
add
add
pop
in
leave
arpl
add
cmc
mov
add
push
sub
je
dec
aad
mov
testb
in
adc
push
sbb
outsb
rep
push
fsubr
cmp
scas
mov
adcl
xchg
cmp
mov
xchg
add
fisttps
push
addb
or
test
dec
outsl
pop
lahf
mov
notl
push
nop
xor
adc
les
stos
mov
pop
out
fs
jno
ds
mov
sbb
xor
mov
mov
popa
xlat
cld
adc
sbb
shll
push
push
mov
outsb
cmpsb
dec
xchg
sub
push
jg
jbe
mov
cmp
fisttps
sub
sub
dec
jb
cld
push
loopne
scas
xchg
pop
aam
add
mov
pop
add
lock
into
jo
jecxz
cmp
adc
xchg
fnstcw
push
daa
sub
out
and
lock
movsb
mov
scas
push
push
scas
and
xchg
dec
xorl
mov
imul
sub
mov
cmp
jns
mov
ljmp
xchg
lcall
shrb
and
ss
imul
fisttps
cpuid
mov
sub
jne
lods
add
stos
enter
fistps
dec
or
jmp
push
jmp
xor
loope
and
outsl
cmp
push
xchg
cmp
in
inc
fs
or
pop
adc
mov
addr16
popa
dec
adc
cmp
decb
cwtl
cli
fsubp
push
orl
pop
or
inc
and
fcmove
push
movsb
xor
adc
jne
popa
test
push
mov
inc
test
lret
movsb
outsb
dec
pop
mov
popl
mov
call
subb
add
or
enter
and
inc
scas
push
xor
push
or
cmp
push
aam
sub
xchg
jnp
dec
mov
dec
sahf
stc
pop
xchg
add
jge
cld
outsl
xchg
xchg
in
xchg
adc
jg
jnp
sarb
fwait
pop
frstor
cmp
mov
xor
lds
out
push
cs
rol
push
std
ja
push
aaa
jbe
dec
repnz
sbb
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
punpckhdq
inc
mov
sbb
cmp
mov
leave
loop
mov
incl
int3
outsb
out
xchg
jno
adc
stos
das
test
lds
std
les
jae
xor
xadd
rclb
test
clc
data16
lods
adc
out
dec
loopne
sahf
jno
jne
push
sbb
mov
stos
add
mov
cmp
push
jbe
stos
or
mov
ficoml
imul
sbb
adc
sbbb
push
in
stos
lcall
add
or
inc
mov
xchg
cld
mov
hlt
fists
insb
jp
mov
sbb
rolb
fiaddl
inc
stos
orb
adc
aaa
adc
dec
ret
mov
aam
inc
xchg
out
imul
dec
cli
mov
inc
xchg
pop
mov
push
lret
pop
inc
leave
ss
inc
pop
testl
inc
cld
fadd
cmpsl
sub
push
loope
adc
mov
sub
pop
inc
cmp
pop
dec
mov
call
in
dec
mov
dec
fbld
pushf
aaa
or
sbb
hlt
in
cli
xor
cmp
sbb
or
xor
les
arpl
lcall
cmp
and
pop
jmp
lcall
leave
inc
mov
xor
outsb
inc
icebp
insl
std
inc
add
out
mov
add
iret
sbb
jnp
mov
or
out
mov
adcl
jecxz
pop
push
lods
jbe
jns
push
adc
imul
and
sbb
pop
sub
inc
xor
aam
sahf
cli
and
xchg
mov
icebp
test
cwtl
mov
int
add
push
shll
xchg
cld
ljmp
leave
jne
add
je
nop
or
shlb
out
pop
pop
pop
lcall
pop
add
hlt
and
call
cli
divb
xchg
imul
cmp
ficoms
or
jns
jo
in
mov
idivl
sub
lea
fmul
dec
push
sahf
dec
aam
test
das
and
roll
imul
lock
pushf
cmp
push
mov
push
rorb
lret
adc
imul
std
sbb
push
dec
push
mov
pop
xor
mov
mov
cmpsl
les
ret
mov
xchg
or
push
popf
movsb
inc
cmc
dec
cmp
js
jle
ror
orl
es
out
xor
scas
and
inc
xor
cmp
pop
sahf
cwtl
jecxz
clc
mov
mov
ret
loop
xchg
rcl
mov
and
popf
xor
ja
test
int3
roll
adc
add
dec
cmp
roll
cli
test
stc
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
adc
into
or
jo
cmp
shll
addr16
cld
adc
push
aad
es
mov
aam
int3
mov
pop
push
ss
jns
mov
xchg
cmp
sbb
ds
add
bound
ficoml
popf
or
or
enter
cwtl
clc
jb
sbb
xor
ret
push
bound
roll
jae
shrb
xor
sbb
xor
repz
cli
fldenv
and
xor
cmp
mov
inc
mov
inc
rorl
jp
pop
popf
insl
mov
mov
out
mov
fsubr
sub
imul
dec
mov
outsl
outsb
cmp
sub
jno
movsb
xchg
push
add
fdivrl
mov
fidivl
inc
test
sbb
sub
mov
xchg
sbb
sbb
int
jp
xchg
rolb
add
lcall
pop
insl
xchg
pop
cli
ljmp
mov
and
or
mov
pop
mov
mov
test
iret
inc
xchg
loopne
scas
pop
sbbl
or
mov
jnp
inc
dec
jne
lret
xor
addr16
mov
push
xor
cmp
cmp
loope
sbb
pop
mov
mov
pop
fwait
adc
cmp
popf
xchg
shrb
xchg
popa
sub
add
jmp
je
into
push
xor
pusha
cmp
out
movntq
out
pop
mov
cli
decb
mov
mov
scas
pop
shrb
shr
dec
ficoml
jae
shlb
mov
cmp
filds
roll
out
popa
adc
jo
stos
cmc
gs
shll
es
xchg
jae
mov
cld
mov
scas
mov
cltd
fldt
xor
push
push
pop
mov
mov
push
inc
dec
mov
ds
mov
inc
and
mov
cld
mov
fs
dec
data16
xor
dec
imul
test
push
cmp
mov
cmpsl
fldt
adc
setbe
xchg
lods
mov
add
fs
popa
sahf
stos
loop
sarb
iret
jb
clc
dec
call
imul
xor
fs
cmp
jns
popf
jmp
movsl
and
pop
mov
jbe
inc
frstor
inc
cltd
adc
lret
or
dec
repnz
shrl
out
out
rol
lahf
cmpsb
mov
dec
inc
lcall
mov
mov
loopne
es
ss
insb
loope
mov
cmpsb
mov
fnsave
cmc
cli
out
xchg
jge
xlat
jo
lret
jmp
sub
int
ficompl
mov
sti
mov
sbb
xchg
js
stc
xlat
cmp
popa
push
shrl
cmpsl
roll
shlb
jecxz
aas
not
adc
cmpsl
add
sahf
xchg
outsl
data16
sbb
mov
add
mov
fcmovu
sub
enter
adc
enter
adc
mov
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
jle
outsb
xor
and
cmp
mov
lcall
pop
xchg
mov
and
icebp
dec
mov
push
cld
shrb
ljmp
push
pop
nop
mov
jl
xchg
stos
cmpsl
pop
add
lock
push
jecxz
out
dec
cmc
popf
mov
push
int
lock
jne
lock
nop
imul
mov
lods
jmp
insl
cmp
xor
dec
ja
out
and
in
rorl
scas
add
stos
mov
out
push
adc
stc
ds
test
ds
lds
dec
pop
push
and
mov
inc
inc
out
cmc
pop
ds
clc
inc
cmp
cmp
mov
frstor
repz
add
dec
mul
cmp
into
mov
gs
in
xchg
cltd
lahf
xor
insl
stos
xor
dec
jo
xor
mov
push
mov
icebp
xchg
inc
lea
push
dec
dec
loop
aaa
dec
cmpsb
or
xor
sbb
push
out
mov
ret
test
out
mov
rolb
loop
push
shrl
pop
or
push
sbb
cmp
jo
lret
ja
sti
hlt
in
xchg
mov
adc
cltd
into
push
sbb
pop
enter
mov
mov
pop
pop
lods
sbb
addr16
shrb
pushf
push
xor
jmp
adc
pop
cmc
xlat
push
orl
cmp
repnz
in
bound
ljmp
pop
in
jns
mov
xor
mov
xchg
dec
inc
cli
mov
mov
inc
stos
es
insb
lods
ret
pop
enter
clc
lock
sbb
sub
and
test
int
mov
jmp
xor
mov
jecxz
cmp
btc
add
into
sub
cmp
jnp
push
mov
pop
lahf
sti
icebp
flds
pop
mov
outsb
scas
shlb
cmp
sbb
je
xor
cmp
rcrb
jl
pop
or
xchg
dec
xor
sbb
clc
lds
popa
mul
mov
rorb
movb
sbb
jbe
imul
jle
xchg
loope
sbb
sbb
ret
xor
mov
xchg
js
icebp
int3
push
sub
adc
pop
mov
fs
std
iret
sub
pop
inc
xchg
dec
xchg
sub
pop
xchg
pop
mov
cli
out
pop
aam
ja
ds
stos
js
mov
out
in
loope
jp
sbb
icebp
mov
mov
mov
mov
mov
outsb
imul
fs
and
or
cwtl
jae
jns
push
cs
pop
in
repz
enter
sbb
fs
into
movb
sbb
push
xchg
arpl
mov
fildll
add
lock
call
test
test
pop
insb
out
mov
int
aaa
jnp
adc
jp
mov
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
sbb
test
jge
jo
mov
add
adc
aaa
or
insl
aas
jo
popa
fiaddl
sub
js
push
lds
xor
cmp
jl
shll
pop
sbb
loopne
fdivrs
pop
push
pop
sub
jbe
fnstenv
lret
inc
inc
pop
std
fnsave
cmp
adc
xchg
add
testl
xor
push
dec
xlat
inc
cmp
dec
add
push
mov
movsb
inc
xchg
fisubrs
out
xor
movnti
testb
push
jno
dec
sbb
jle
fdivs
cld
jp
pop
jl
pop
pop
stos
inc
cmp
xchg
pop
add
inc
mov
push
sbbl
mov
sbb
xchg
int3
add
dec
stos
or
pop
push
sbb
popf
ds
imul
xlat
lock
adc
add
test
lea
leave
sbb
push
scas
push
mov
dec
pop
push
fadd
mov
inc
pop
xor
lcall
add
bound
dec
dec
outsb
sahf
add
add
insl
movsl
clc
pop
pop
adc
xchg
and
cmp
dec
push
mov
mov
test
dec
pop
lret
out
sbb
mov
rorb
dec
push
xchg
cmp
jo
into
nop
cmp
ret
das
ja
mov
in
inc
cltd
lahf
imul
push
xchg
sub
sub
js
cltd
scas
xchg
cmp
stc
sbb
cmp
fisubrs
lea
mov
and
addr16
jecxz
xor
scas
aad
mov
sbb
frstor
xor
jne
fidivl
addr16
sarb
leave
cwtl
jnp
and
inc
pop
push
cmp
loope
sub
adc
add
and
loop
cmp
das
jno
out
or
fists
xchg
mov
dec
lret
out
ficompl
adcl
dec
jno
jbe
xchg
sbb
lahf
jb
mov
scas
mov
jmp
shll
pop
rcrl
mov
pop
mov
sarb
std
aaa
rcr
fists
sub
nop
mov
imul
pop
enter
dec
ds
jns
jle
cmp
jg
mov
into
scas
mov
out
push
bound
sub
cld
adc
add
dec
push
int
out
test
out
rolb
sbb
pop
in
push
xor
loop
ja
add
test
sti
mov
sarl
lock
imul
movsb
aas
mov
sub
movl
adc
and
stos
mov
mov
push
or
cmpsb
jo
gs
cmp
push
loop
fucom
pop
sub
push
mov
or
pop
inc
mov
mov
lret
xchg
add
and
xchg
xor
lds
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shr
cmp
push
sub
cmp
mov
insl
popf
xchg
pop
out
les
pop
lods
inc
repz
xchg
sarb
mov
into
mov
mov
dec
fnsave
and
pusha
sti
rcrb
js
negl
mov
popf
cmpsl
movsb
fidivrs
out
daa
imul
xchg
adc
adc
cwtl
stos
xchg
lcall
aad
test
pop
xchg
add
outsb
add
bound
sub
clc
jl
mov
push
mov
pop
mov
pop
push
sti
jnp
js
xor
les
xchg
push
mov
sub
lea
lret
or
ljmp
outsl
jnp
es
xchg
inc
ja
int3
jno
xchg
jge
lock
adc
xor
mov
outsl
and
daa
sbb
js
ss
adc
xchg
mov
lods
jg
ja
dec
jae
pusha
xor
xchg
cmpb
popa
imul
adc
and
mov
es
mov
aas
xchg
rcr
pop
push
adc
loop
sub
mov
xchg
mov
sti
loop
dec
xchg
out
icebp
adc
shll
and
sarl
aam
push
cs
inc
push
rorb
lods
push
das
add
in
stc
pop
rcll
fwait
pop
mov
dec
shrl
pop
loope
mov
add
aaa
inc
or
push
out
push
cmp
xchg
ret
sbb
lret
mov
mov
push
lret
dec
mov
jbe
push
jp
jnp
cmpsl
jns
pushf
xchg
cwtl
imul
pop
pop
out
cs
sbb
negl
je
rolb
dec
fldcw
loop
leave
shlb
xor
cmp
fdiv
or
out
leave
loop
out
ret
std
push
adc
pop
test
mov
pop
lahf
out
mov
int
xchg
cld
lds
rcll
and
pop
loope
pop
lods
rolb
xor
filds
pop
int3
js
cli
xlat
and
push
std
sub
shll
jo
sbb
popl
xor
jns
enter
mov
and
dec
add
std
ret
xchg
test
loopne
lret
mov
xchg
test
popa
fisubs
xchg
loopne
int3
int
fildll
push
push
and
fildl
jns
stos
in
pop
mov
xchg
mov
lret
scas
cld
les
cltd
sti
push
xchg
daa
aaa
cwtl
cmp
inc
push
sub
stc
nop
mov
sub
lock
test
in
inc
xorb
arpl
ljmp
pop
addl
and
sbb
mov
stc
lcall
in
ret
mov
jo
mov
xchg
push
pushf
scas
cmc
cmp
popa
push
and
rorb
icebp
popa
xorb
push
ficompl
pop
adc
adc
mov
inc
sbb
shll
xchg
xchg
lock
jb
add
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
pop
pushf
or
aaa
jo
stos
jle
jo
ja
add
sbb
mov
dec
dec
inc
ret
clc
pop
adc
ljmp
aad
cwtl
mov
into
lock
lcall
add
mov
out
in
ds
shlb
xchg
mov
popf
ss
stos
mov
xchg
cwtl
mov
pusha
or
and
lods
cmp
sbb
inc
out
ss
inc
cmp
sahf
mov
jb
xchg
jmp
leave
jge
in
mov
fidivrl
into
sti
in
ret
sbb
pop
mov
push
sbb
and
mov
mov
testb
lahf
or
dec
push
shll
insl
fsubl
sub
jp
daa
shr
in
jle
adc
mov
lds
leave
popa
jae
insb
scas
pop
mov
sub
inc
sarl
lods
mov
mov
cli
xchg
push
gs
adc
xor
andb
in
add
jnp
adc
out
lret
int
xor
insb
mov
sahf
cmpsb
jp
mov
push
in
fisttpl
jo
push
fnstenv
sti
add
dec
movsl
test
cmp
mov
shl
xchg
daa
cmp
or
rcrb
mov
loopne
scas
or
xlat
fs
xor
add
jno
je
hlt
dec
fmull
jmp
adc
into
adc
push
data16
push
adc
call
bound
jp
inc
mov
lods
push
xchg
cmp
jge
mov
fnstsw
insb
mov
cmp
das
cmp
cmp
push
cmp
lds
adc
sahf
xor
mov
movsb
into
aaa
test
add
mov
cmp
or
adc
push
adc
jnp
xchg
inc
das
mov
testl
xchg
sub
lret
shll
call
jnp
add
inc
mov
pop
rol
sbb
dec
and
or
pop
ljmp
imul
and
jge
mov
inc
dec
rcll
cmc
mov
or
and
cli
loop
test
cmp
push
fs
fs
ljmp
aam
inc
jecxz
jle
out
jns
sbb
flds
insl
mov
cmp
call
lret
fists
push
rcll
mov
xchg
inc
add
add
mov
jmp
ja
and
dec
xchg
jecxz
dec
xor
jo
mov
nop
pop
ja
ficompl
into
xchg
mov
mov
in
ret
dec
adc
mov
cmp
cmpl
fdivp
and
aad
gs
xchg
adc
dec
xor
sarb
fmull
inc
movsb
jl,pt
les
mov
jbe
adc
call
mov
inc
push
cmp
dec
outsb
int3
mov
fdivrs
testb
data16
das
and
roll
leave
and
xor
xor
ret
inc
sub
or
cmp
fdivrl
inc
imul
add
or
rclb
mov
das
xlat
xor
outsb
cmp
in
ss
in
insl
subb
lret
repz
in
jb
dec
cli
std
cli
jmp
mov
insb
popa
inc
arpl
fstps
test
into
cltd
add
pushf
fsubrs
lret
in
scas
cltd
rcrl
shrb
add
push
cltd
dec
mov
push
jno
arpl
cmp
mov
int3
sbb
imul
xor
pop
cli
popf
jle
mov
mov
push
sbb
push
popf
mov
mov
ja
lds
and
shlb
inc
aaa
dec
ret
jl
ja
out
jno
lock
mov
push
xorl
rorb
jae
out
push
jmp
mov
fmull
das
cmp
loopne
pop
out
cmpsb
jnp
rorb
mov
add
mov
cmp
call
sbb
mov
adc
sub
mov
aam
inc
push
push
iret
pushl
lret
adc
mov
daa
fwait
lret
mov
adc
nop
add
ljmp
mov
pop
mov
cmp
lock
sbb
cs
mov
rclb
rcr
jmp
jns
or
sarl
insb
mov
dec
cmp
imul
shll
sarb
sbb
and
xchg
or
dec
jl
roll
shlb
xor
mov
cmpb
xchg
cmpsl
add
inc
jae
mov
cmp
clc
movsb
ficoml
pop
std
mov
sbb
lock
mov
jp
cmp
xchg
jp
mov
adc
jne
ds
xchg
mov
or
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
mov
jo
jle
jo
xorl
push
loop
lods
ljmp
mov
dec
shll
ss
jmp
or
in
std
mov
or
icebp
ljmp
aaa
sub
pop
cmp
push
sbb
lods
in
imul
xor
mov
imul
mov
loopne
add
mov
inc
in
sbbl
mov
xor
pop
dec
jne
stc
sti
xor
loop
cmc
scas
pop
cmpsb
sub
mov
sub
and
test
sarl
ss
test
adc
push
gs
inc
mov
jle
push
imul
jbe
mov
dec
cmpsb
test
stos
sbb
lods
bound
bound
jae
sub
and
mov
and
je
add
mov
mov
das
jecxz
ja
push
jg
out
nop
test
lret
add
cmp
dec
jae
jg
popa
mov
dec
popf
mov
xchg
mov
test
out
jg
fnstcw
pop
aas
cmpsb
cmp
pop
xor
lds
lret
int
inc
push
cli
shlb
jb
cmp
pop
xor
iret
or
xor
mov
in
out
cmovnp
cld
lods
xchg
sbb
sub
lods
clc
and
in
ljmp
loope
popa
inc
dec
test
subl
xchg
outsb
fisubl
imul
mov
xor
xorps
pop
adc
out
mov
jbe
mov
jmp
mov
push
ret
roll
imull
gs
fimull
mov
push
pusha
inc
jmp
mov
jp
popa
nop
repnz
add
mov
jnp
aam
sub
dec
push
ds
xor
push
push
pop
divb
rcrb
inc
ret
mov
or
cmp
sti
pop
inc
mov
das
cltd
fisttpll
cs
outsb
or
incb
std
cmp
xor
xorl
out
fsub
popa
mov
out
push
xchg
cmpsb
dec
inc
sarb
lea
jb
pop
repz
mov
adc
mov
lods
stos
mov
inc
shr
outsl
jp
jns
cwtl
dec
addb
pop
mov
cmpsb
push
sub
popa
inc
lret
cmp
cld
ja
jno
lods
faddl
or
pushf
adc
bound
pop
mov
cwtl
aas
test
mov
cli
xor
lcall
dec
or
scas
roll
or
or
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
lret
dec
mov
aas
jo
cmpsl
jg
jo
ret
pop
and
sub
xchg
mov
test
fstl
and
dec
jg
xchg
jnp
test
jecxz
xchg
and
jle
mov
pop
pop
out
and
scas
and
das
imul
pop
imul
xchg
mov
ret
movsb
imul
shl
gs
andb
cmpsl
inc
inc
pop
fcmovne
jle
push
aas
movsl
test
fadds
ljmp
sbb
fmul
pop
pop
dec
dec
or
jle
movsb
mov
add
cmpsl
and
out
push
and
cmpsl
add
xchg
cmc
aam
mov
or
mov
orb
jl
pop
adc
dec
dec
push
fs
push
adc
stos
xchg
pushf
sahf
outsb
dec
and
and
cmpsl
sar
mov
mov
imul
dec
jb
in
adc
push
push
mov
icebp
adc
add
stos
mov
push
leave
and
mov
hlt
sbb
mov
xchg
add
mov
mov
xchg
test
repnz
jl
or
daa
jb
mov
adc
cmc
inc
jg
test
test
cmp
daa
sahf
jne
or
and
inc
jns
stc
out
sbb
jp
jg
je
lahf
fistpl
stc
dec
xor
sbb
repz
xchg
shr
xchg
adcl
jb
mov
shl
cmpsb
jno
inc
jmp
pop
shrb
lcall
jmp
push
lods
pop
shlb
or
fbld
notl
pushf
jb
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
pop
gs
cmpsl
jg
jo
cs
mov
dec
sub
push
push
mov
push
push
dec
aaa
popa
push
pop
push
sarl
mov
jge
loope
adc
in
pop
stos
sbb
adc
sub
popa
xor
push
aam
mov
xor
jl
mov
mov
mov
scas
cltd
sbb
sub
js
outsl
cmp
ss
sbb
adc
jbe
leave
cmp
cwtl
jp
mov
data16
pusha
add
cmp
xor
in
cmpsl
mov
mov
mov
and
cld
sub
pop
lock
xor
in
js
ljmp
sbb
fwait
sbb
aad
dec
or
stos
xor
je
jecxz
int
enter
pop
jb
push
xchg
jae
mov
fadds
test
mov
mov
inc
lcall
shrb
xlat
mov
rcrb
fs
jg
outsl
sbb
enter
dec
negb
into
pop
add
sahf
mov
xchg
stos
jge
sbb
sub
cmp
movsb
xchg
push
test
das
fucomip
push
lds
xchg
inc
aas
pop
and
dec
lods
ds
jge
pop
sub
add
push
jle
outsl
push
mov
scas
pop
and
insl
repnz
inc
mov
dec
mov
pop
cmp
lds
or
lret
jb
jnp,pt
jo
lea
and
mov
pop
call
mov
insl
xchg
lret
add
inc
jecxz
mov
inc
sbb
or
inc
add
inc
or
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
sub
jb
mov
jo
jg
jo
stc
jo
rcrb
mov
jmp
sbb
je
push
pusha
mov
jb
xor
inc
pop
pop
pushf
jle
scas
pusha
es
into
ja
and
rcrb
sub
inc
popf
cltd
and
push
arpl
and
lock
outsl
stos
outsb
mov
and
xor
lods
mov
sar
gs
jle
mov
push
mov
inc
fcmovnb
ret
jne
and
test
lds
mov
mov
adc
cli
adc
lahf
adcl
pop
jl
mov
push
data16
lret
dec
inc
mov
xchg
out
std
ds
call
adc
dec
sub
dec
out
inc
add
xorl
push
cmovne
jmp
jg
lock
push
jno
popf
lea
sbb
jmp
lock
sete
dec
pop
mov
xor
loop
punpcklbw
pop
jg
js
add
cltd
aas
adc
xchg
pop
sub
adc
push
scas
cmp
repz
mov
ficoms
jle
fnstcw
loopne
sbb
sub
push
out
in
inc
or
inc
into
jl
popf
rorl
cmp
dec
pop
xor
fwait
xchg
cs
jmp
outsl
dec
mov
pop
pushf
stc
dec
test
in
jecxz
cld
outsb
hlt
cwtl
pop
scas
push
sahf
push
inc
sbb
xchg
jnp
xor
xor
adc
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
stos
inc
lea
cmp
loop
jo
ret
jnp
cwtl
sbb
shrl
into
call
test
and
sahf
jmp
cmp
insb
jo
inc
push
in
jge
das
nop
push
fildll
sar
pop
sbb
ds
mov
mov
sbb
imul
test
lds
mov
adc
lret
xor
loop
test
ja
fisubs
and
cwtl
add
test
mov
les
xchg
insb
mov
pushf
test
mov
mov
xor
aad
outsb
int3
push
mov
lret
xchg
dec
fidivrs
mov
neg
xlat
inc
mov
int
ret
clc
inc
mov
or
cltd
ret
or
fnstcw
fnstsw
mov
fildll
lock
jne
adc
icebp
adc
sahf
pop
je
push
sub
add
outsl
les
leave
push
fwait
popf
sbb
inc
loopne
jp
inc
mov
or
xor
rcl
icebp
fistpll
daa
imul
ds
gs
aam
and
xchg
jmp
in
call
add
loope
add
loope
rdmsr
mov
dec
add
aaa
sarb
jnp
adc
in
xor
cltd
js
jno
cld
mov
fnstenv
cmp
loop
xor
mov
xor
ret
clc
sbb
aas
or
outsl
vmovups
inc
es
std
jg
cs
add
pop
sbb
mov
in
repz
cmp
in
mov
jo
aaa
dec
arpl
push
pop
cmp
or
and
and
pushf
andl
pushl
mov
ret
idivb
cmc
xchg
dec
push
jbe
hlt
jae
pop
mull
cwtl
lea
inc
in
fiadds
pop
sbb
mov
scas
xor
stos
cld
mov
dec
cmc
or
test
rol
ljmp
xor
scas
pop
dec
jp
aas
xor
push
xor
outsl
aad
aaa
pop
lods
sub
mov
inc
jo
fidivs
push
push
mov
and
test
sahf
int3
mov
sbb
out
sub
in
push
sarl
inc
pushf
clc
repnz
mov
int3
test
adc
push
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
das
mov
jo
jle
jo
pop
stos
jno
pop
bound
cmp
sbb
daa
hlt
int
inc
jae
dec
hlt
or
cmp
jnp
push
pop
inc
push
call
mov
sbbl
or
sarl
mov
xchg
in
imul
jne
leave
subb
xor
inc
lret
pop
pop
popa
loop
popf
test
lock
iret
xor
jp
push
or
sti
cmp
imul
jb
das
sub
arpl
ja
cmpsl
push
push
arpl
out
xchg
mov
loopne
dec
pop
negb
inc
pop
push
mov
jno
fidivl
or
sahf
subb
outsl
int
pop
inc
sub
or
movsl
fbstp
add
loop
icebp
insb
loopne
xor
in
push
push
adc
test
sti
mov
ja
mov
mov
repz
push
aas
xchg
jecxz
shll
add
les
lea
ret
loopne
adc
mov
imul
loope
js
xchg
adcl
inc
sbb
sub
in
mov
add
ret
lods
sub
fs
push
movsbl
in
icebp
lcall
add
add
sub
popf
push
push
pushf
stos
push
ljmp
fs
rcrl
inc
js
aam
or
mov
ss
dec
mov
out
rcll
stos
lods
mov
leave
pop
or
sbb
int3
pop
sub
cmp
push
adcb
fs
ds
mov
popf
ret
mov
pop
inc
mov
repz
xchg
out
dec
in
icebp
ljmp
scas
jne
fs
add
rorl
lods
bound
aam
inc
in
lcall
xor
ret
rcrb
test
cmp
push
stos
xchg
xchg
aam
mov
push
jp
je
inc
adc
jne
mov
fcmovnbe
mov
inc
ret
sbb
xor
loopne
nop
out
adc
or
sahf
popf
cmp
inc
jne
jb
and
push
mov
add
pop
out
cwtl
push
lret
js
aad
lahf
mov
push
daa
mov
jno
shrl
mov
dec
cmp
push
ds
xchg
xor
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
imul
jo
jge
jo
fwait
sbb
pop
std
aas
mov
lahf
inc
lods
in
mov
mov
testl
jl
or
test
and
cltd
adc
ds
in
mov
mov
fisubrs
repz
inc
std
cmp
jecxz
xchg
dec
jp
cli
dec
xchg
jg
js
jl
andl
daa
sub
ss
repnz
testb
scas
inc
ja
xor
and
dec
jg
xchg
and
shlb
dec
cwtl
mov
jno
mov
loopne
loope
sub
mov
xchg
in
jo
mov
mov
adcb
cmp
adc
push
int
mov
pop
cmp
cs
pop
stos
imul
jg
sbb
scas
mov
and
hlt
xchg
addr16
ret
shlb
lret
and
faddl
outsb
push
fisttps
jb
enter
sbb
and
sbb
rolb
mov
insl
push
test
jnp
pop
stos
jge
sbb
adc
dec
mul
adc
stos
sbb
xor
popf
mov
lahf
mov
pop
into
push
leave
lock
dec
xchg
add
ret
sbb
aaa
cwtl
aam
push
mov
xchg
int
cmpsl
stos
sysret
pop
mov
outsb
inc
out
or
sbb
push
int3
dec
fsubr
mov
out
push
out
in
outsb
mov
ret
sbb
or
jl
xor
dec
stc
pop
lds
sub
push
cmpsl
adc
xchg
pop
cs
push
js
cmpsb
push
jae
bound
sbb
pop
nop
cmp
bound
ret
xchg
sub
or
add
jl
int3
icebp
lds
pop
scas
js
inc
add
cmpsl
cmpsl
gs
or
cmp
rcrl
cs
jecxz
jge
jo
pop
lods
and
fcoml
pop
sub
imul
rorb
mov
fdiv
xchg
ljmp
cmc
xchg
sbb
scas
pop
mov
inc
dec
cmp
push
inc
adc
mov
xchg
sti
pushf
cmp
pop
sbb
or
data16
in
lock
das
ret
xor
bound
lea
inc
scas
jmp
dec
or
lret
dec
test
inc
nop
stos
mov
and
rorb
ljmp
xchg
fsubrl
fiaddl
fsubrl
insb
clc
cld
cmp
cmp
sbb
jle
movsb
push
lods
xor
sub
adc
in
out
js
cld
pushf
xlat
lods
xchg
and
movsl
pop
cmp
xor
stos
stos
mov
add
inc
jns
cwtl
les
insl
fcmovnu
jnp
hlt
jg
jl
sub
xor
and
test
movsl
fcomi
js
aad
xchg
lret
cld
lcall
add
mov
xchg
repz
mov
push
sbb
inc
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
ret
and
jo
and
scas
movsb
outsb
cmpb
jl
adc
xchg
iret
mov
xchg
jmp
fcomps
xor
das
fldcw
bound
testb
cltd
or
push
movsb
insb
iret
add
inc
in
push
in
inc
cmp
sub
mov
shr
xchg
ret
mov
mov
or
push
ss
enter
enter
or
lret
ret
mov
outsl
dec
push
movsl
inc
jns
movsb
hlt
lods
in
inc
and
xor
mov
cmp
cmpsb
pop
add
adc
add
int3
int
adcl
and
mov
stos
jno
xchg
xchg
je
and
pop
add
pop
jmp
pcmpeqb
pop
xchg
jge
jl
jnp
subl
jle
enter
jo
sub
jmpw
pop
outsl
les
cltd
mov
xor
dec
or
ljmp
cmp
xlat
pusha
popa
dec
dec
or
iret
or
jae
fsub
sbbb
aaa
sub
hlt
repnz
je
xor
adc
sbb
sar
out
nop
enter
mov
dec
mov
outsl
dec
or
inc
lock
jmp
aas
or
add
pusha
push
mov
inc
aaa
add
xchg
cmp
enter
push
les
jae
decb
sub
cmp
in
cmpsb
fsubs
je
cmp
sub
mov
imulb
pusha
inc
xor
lea
push
jnp
sbb
daa
flds
add
ljmp
out
sub
cmp
aas
jge
add
and
xchg
out
push
aas
dec
add
clc
xchg
mov
pop
inc
pusha
mov
addr16
mov
jae
fs
or
fdiv
xchg
inc
test
nopl
sahf
sbb
mov
clc
sbbb
push
dec
inc
aaa
push
rcr
fadd
push
pop
scas
pop
loopne
shrb
popa
ffree
mov
js
pop
adc
int
pop
and
lcall
subb
adc
nop
push
fadds
sahf
jo
push
cmp
inc
sbbb
xlat
push
mov
pop
inc
push
xchg
roll
shrl
mov
jns
xchg
lods
call
lods
xchg
repz
pop
stos
negl
xchg
movsl
mov
xor
test
adc
js
xchg
mov
jmp
sbb
ret
daa
jp
push
dec
aad
pop
push
loopne
lods
cli
dec
mov
xchg
aas
push
jle
mov
orb
mov
or
imul
jecxz
scas
cltd
or
cmp
dec
push
mov
loop
rclb
leave
jae
call
push
out
pop
push
js
ds
and
mov
mov
out
nop
add
aam
loop
adc
movsb
push
loop
scas
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
adc
cmp
iret
jo
and
jo
lcall
add
subb
sub
jo
fucomip
push
push
cli
pop
lret
xlat
pop
mov
sub
push
mov
push
loopw
inc
inc
xchg
xor
jb
or
lcall
sub
fstps
jne
fstpl
sub
or
mov
loop
and
pop
jp
in
and
adc
jmp
cs
inc
das
push
push
dec
cwtl
mov
sarb
bnd
push
jb
call
mov
sti
add
mov
mov
jne
push
lods
inc
lahf
in
xchg
icebp
test
fmuls
mov
iret
push
sahf
stc
jmp
sbb
cli
loop
cmpb
inc
or
lret
dec
sarl
xchg
jb
inc
lock
pop
movsl
out
mov
mov
sbb
aad
clc
icebp
js
and
mov
mov
mov
les
xlat
aas
dec
xchg
fbld
outsb
cmpl
in
lret
sbb
mov
fiaddl
jns
and
lahf
mov
cmp
je
out
je
or
imulb
daa
dec
jb
or
scas
dec
lcall
mov
mov
outsb
jbe
xor
inc
cmp
cmp
and
xor
sub
js
mov
mov
negl
cmp
popf
and
fistpll
push
cmp
into
mov
fwait
cmp
std
outsl
pop
dec
push
adc
pop
out
les
pushf
push
jecxz
ljmp
push
scas
xchg
in
mov
push
repnz
mov
sbb
shlb
sub
out
in
fdivl
cmp
roll
std
pushf
mov
sub
scas
jp
cmc
mov
fnstenv
outsl
sti
mov
fadds
xlat
jns
or
push
adc
mov
push
daa
insb
pop
cwtl
addl
pop
addl
stos
adc
stc
dec
dec
call
mov
gs
lret
mov
push
lock
std
xchg
pop
xor
jp
sbb
mov
mov
cli
test
repz
das
les
mov
test
shlb
fidivl
sbb
lret
adc
xor
sbb
sub
xchg
bnd
popa
cmp
mov
pop
lds
sti
ljmp
sbbl
fcompl
aam
insb
push
adc
je
in
clc
sub
rcl
push
notl
int3
mov
mov
jecxz
ja
ljmp
or
lahf
cmc
pop
fldz
xchg
mov
cmp
in
jmp
in
add
dec
and
stos
outsb
mov
mov
cmp
adc
pop
sub
xchg
xor
jmp
fsubr
aad
fwait
xchg
repz
test
jb
adc
lahf
test
enter
or
aam
mov
xchg
push
push
mov
cmp
sbb
jmp
iret
dec
decl
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
push
mov
mulb
jge
jo
mov
pmullw
loopne
xor
xor
test
xchg
jp
out
sbb
jae
adc
inc
cmpsb
mov
cmp
inc
movsb
mov
pop
adc
mov
dec
pop
push
jge
test
cmp
pop
dec
xchg
repnz
mov
cmpsb
lea
mov
xorb
cltd
loope
mov
mov
jl
push
and
add
sbb
sub
mov
sbb
mov
cmp
jge
mov
mov
pop
push
and
mov
pop
das
stos
imul
mov
xlat
outsb
sub
mov
xor
popf
sub
inc
lahf
mov
push
aas
xchg
jo
insl
jns
sub
sbb
pop
jo
int3
mov
lds
cwtl
mov
shll
std
push
push
adc
mov
imull
cmp
mov
mov
or
pop
in
sub
lods
xchg
sbb
adc
jp
scas
inc
and
inc
and
icebp
testl
xchg
cmp
push
int
or
bnd
or
xor
mov
push
arpl
jmp
push
icebp
inc
lret
mov
pop
xlat
decb
je
mov
stos
aam
mov
push
cs
insb
ss
cmc
push
movsb
mov
int
nop
fcmove
mov
pop
or
mov
std
mov
mov
mov
mov
adc
xchg
leave
and
test
pushf
push
and
mov
pop
popf
mov
and
sbb
das
mov
inc
call
ret
scas
xor
mov
push
aaa
call
jmp
dec
movsb
push
and
jle
fimull
loopne
ljmp
jbe
xchg
xchg
jg
sbbb
jbe
call
push
jae
push
shrl
push
jp
test
jb
pop
fisubrs
xchg
mov
jnp
lods
mov
iret
sbb
fldenv
cld
loop
das
shl
cmp
test
loope
and
fwait
xor
pushf
pop
mov
lahf
scas
out
lret
mov
jmp
xor
pop
sahf
jge
mov
inc
mov
jg
xor
imul
adc
adc
xchg
movsl
cmp
pop
dec
add
sub
jp
mov
and
imul
mov
mov
mov
dec
adc
incl
rcl
lock
addr16
mov
jnp
sub
ret
cs
and
push
cmp
push
fldl
in
sub
mov
out
cmp
into
push
mov
mov
rclb
cmp
mov
add
fcmovnb
jbe
stos
cmc
and
push
jbe
outsl
mov
adc
scas
cmp
push
xchg
fdiv
pop
mov
popf
mov
out
inc
xchg
andb
sti
sahf
sub
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
dec
cmp
dec
push
leave
jo
and
jo
dec
mov
movb
pop
xor
sahf
sahf
cmp
push
adc
cmpsl
faddl
ficomps
mov
cld
cli
push
dec
xor
out
jae
xorl
clc
es
incl
dec
fldt
loopne
cli
cmpsl
xchg
sub
xor
jnp
mov
or
shlb
cltd
sbb
sbb
cmpsl
push
cmp
sbb
daa
das
inc
or
cli
pop
cli
sub
shll
or
mov
mov
push
out
inc
add
jg
xlat
ret
popf
push
adc
mov
gs
cmpsb
dec
sbb
out
and
xchg
mov
pop
add
jecxz
sbb
cmpsl
xchg
jg
lret
xchg
pop
mov
mov
dec
stos
pop
push
stos
xchg
out
mulb
jle
push
sub
dec
and
push
cmp
ljmp
pop
adc
pop
lret
jmp
mov
es
test
mov
stos
jmp
inc
push
jae
clc
cli
and
lret
in
neg
jne
add
sarb
popa
inc
es
pop
mov
mov
jmp
and
fdivrp
clc
pop
pop
adc
pop
nop
leave
insb
adc
or
out
xor
mov
popa
pushf
and
lods
ds
roll
scas
cmpsl
jns
xor
xchg
jg
xlat
mov
dec
dec
insl
std
jb
out
or
push
sbb
pop
add
js
and
sub
cmp
div
dec
sbb
insl
add
adc
test
sub
and
add
mov
and
aas
xor
dec
mov
iret
test
out
std
pusha
sar
ss
xlat
faddl
add
stc
pop
sub
pop
dec
cmc
stos
out
int
roll
repnz
in
cmp
ret
aad
shll
faddp
or
ljmp
adc
sbb
xchg
jecxz
pop
rcrl
ret
jmp
es
jg
cli
push
fnstsw
cs
inc
push
data16
sub
les
daa
in
mov
lods
pusha
in
jmp
stos
mov
pop
lds
mov
jecxz
xor
cmp
dec
jg
jle
lret
out
fnsave
std
vcvtpd2psy
add
inc
sti
and
dec
and
iret
cmp
adc
dec
or
mov
or
push
jb
push
adc
mov
insl
call
int3
lock
mov
inc
xchg
push
setg
out
push
bound
xor
pusha
insl
cltd
mov
fwait
scas
jae
pop
enter
dec
movsb
jl
sbb
scas
pushf
xorl
in
movsb
cmp
es
inc
sub
outsl
and
lcall
aam
mov
out
out
jecxz
inc
fisubrs
loop
rorl
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
jb
jge
pop
aad
jo
jge
jo
out
je
xchg
ficomps
rorl
cmp
loop
jmp
cmp
cmp
jle
shrl
out
adc
mov
sbb
addl
test
loop
not
or
sub
outsb
and
cmp
imul
push
pop
add
aad
lea
into
loope
cmp
repz
mov
lahf
sbb
in
push
xchg
out
insb
sahf
dec
mov
test
cmpsl
ret
push
cmp
ror
fwait
pop
lret
xchg
mov
jo
mulb
jle
icebp
clc
or
out
fimull
cmp
push
mov
sbb
inc
dec
inc
add
cli
ffreep
adc
ret
js
inc
cmp
sbb
repnz
divl
lcall
popf
lcall
icebp
pop
popl
jge
add
outsl
stos
add
pop
jmp
imul
xchg
or
jnp
sbbb
outsb
sti
jo
pop
add
leave
mov
icebp
je
inc
xor
cltd
pop
das
testl
pop
ficoml
inc
shl
adc
fs
lret
add
push
jle
cmovns
ja
aad
dec
cld
and
pop
inc
adc
out
inc
add
pop
ds
push
insb
mov
negb
icebp
add
les
or
out
in
push
scas
pusha
adcl
stos
sbb
mov
aad
or
inc
bound
cltd
repnz
mov
stos
cmpsb
cltd
xor
std
mov
lds
repz
inc
mov
std
sub
mov
and
shlb
add
and
dec
pop
pusha
sub
dec
sahf
sete
mov
jp
or
ss
add
lea
dec
mov
pushf
xor
stos
inc
leave
xchg
arpl
sub
les
in
push
mov
cmp
mov
addr16
test
sbb
push
shl
push
cltd
pop
in
or
iret
push
call
out
or
sbb
arpl
int3
insl
push
std
pushf
ss
popf
jnp
leave
stos
xor
mov
dec
adc
jmp
adc
inc
pop
push
in
cmpb
and
sub
mov
decb
xor
xlat
pslld
fmulp
sub
pop
lds
or
push
mov
pop
lcall
cltd
lods
decl
mov
or
pop
jp
repz
sub
mov
mov
insl
in
mov
popf
pop
push
out
or
out
ror
sbb
mov
mov
add
mov
sbb
cwtl
mov
mov
cs
cmp
cmp
mov
test
into
popa
lret
dec
repnz
enter
mov
lcall
cmpsl
xchg
mov
push
jae
jecxz
push
and
or
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
pop
dec
outsl
aam
shlb
and
jo
push
push
aam
ret
sahf
aam
insb
nop
gs
pop
cltd
cmp
lret
ss
fisttpl
popf
dec
std
xchg
adc
inc
cmpsb
mov
cwtl
bound
insb
inc
jbe
aad
add
sub
imul
mov
dec
cwtl
or
cmp
cmp
and
lods
stos
sub
sbb
mov
mov
test
xchg
and
or
outsb
mov
fcomps
mov
fs
scas
mov
sbb
dec
imul
das
push
jb
test
clc
scas
int
test
insl
sbb
popa
test
lea
and
sbb
testb
mov
inc
bound
add
test
dec
or
inc
pusha
push
in
inc
add
push
test
xchg
adc
sarb
xchg
aas
cmpsl
loope
xor
ss
lea
scas
mov
and
adc
mov
scas
mov
pusha
mov
clc
adc
cmp
jl
cmpsb
xchg
jbe
dec
pop
push
xchg
push
jb
jne
std
sub
pop
mov
rol
arpl
inc
pop
fwait
cmp
fdivrl
int
aad
mov
stc
shll
nop
test
add
sbb
mov
xchg
dec
out
add
orl
inc
leave
adcl
xchg
jns
push
lea
int
push
jb
adc
adc
dec
repz
mov
mov
jle
pop
lea
push
mov
pop
stos
jmp
xchg
pop
ftst
push
cmpsl
adc
mov
pop
notl
jae
and
inc
rolb
adc
pop
mov
ror
lcall
mov
mov
pushf
jns
cwtl
out
sub
sub
push
and
int
outsl
and
pusha
cmp
loopne
loopne
pop
pop
int
mov
mov
int3
inc
sub
mov
and
mov
jecxz
mov
lods
jne
ret
lret
inc
adc
pop
jge
fwait
cmp
repnz
sbb
jne
scas
xchg
cmp
repnz
sbb
fmuls
icebp
and
shrl
fmull
mov
fisubrl
pop
mov
lods
dec
inc
jbe
mov
mov
add
xor
daa
sub
inc
push
adc
inc
das
es
loop
add
inc
sub
hlt
xor
ja
and
test
xchg
incl
inc
dec
inc
mov
mov
je
xor
ret
inc
mov
dec
adc
push
ss
dec
pop
mov
call
and
mov
test
cmpsl
aam
jbe
cmp
jne
data16
pop
fldl
lods
jbe
xor
stos
int3
stos
in
lock
mov
and
or
insb
ljmp
mov
sbb
cld
sub
in
dec
fdivs
in
lock
test
sub
leave
in
push
int
and
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
mov
jb
shrb
mov
es
test
mov
xchg
ja
xchg
stos
push
addl
cmp
jnp
scas
sub
mov
fwait
in
push
pusha
imul
sbb
push
and
cmpsb
in
test
xor
outsl
ss
ret
push
jo
cmp
push
aaa
pop
mov
mov
into
cmc
sbbb
xchg
xchg
out
pop
inc
inc
jbe
and
arpl
add
inc
lock
jmp
roll
cmp
and
mov
mov
dec
sahf
cmp
add
out
pushf
mov
out
pop
out
jnp
inc
adcl
push
lcall
push
pop
cld
mov
mov
mov
pop
aas
push
add
in
aas
or
mov
sbb
or
dec
xchg
sub
mov
mov
dec
xchg
out
aad
jmp
mov
dec
sbb
pop
jmp
xor
aaa
push
shl
push
das
dec
pushf
test
jmp
push
or
jle
out
stc
adc
fnstsw
mov
aam
pusha
pop
or
dec
pop
fdivr
ret
adc
pop
xchg
out
dec
cmpsl
or
or
mov
outsl
mov
mov
or
pop
cmp
add
cmp
jmp
xor
fs
or
adc
inc
mov
xor
push
cs
cmpl
flds
out
jnp
mov
test
cmp
aad
ljmp
push
push
das
cmpsb
fsin
cmpsb
sub
stos
push
cmc
or
pop
or
jge
cli
into
ja
dec
adc
movsb
test
inc
aas
pop
mov
je
call
addl
mov
jb
int3
je
jp
sti
mov
sbb
xchg
repnz
fwait
mov
xchg
movsb
arpl
and
adc
aaa
jns
loope
and
jns
repz
jae
mov
pop
cmp
mov
xor
pop
cmp
call
test
or
sahf
cmp
or
mov
inc
xchg
pop
add
cmp
nop
es
loope
fmuls
mov
lret
in
inc
shl
mov
fdivrl
add
insb
lret
fcmovnu
stos
fistps
fistpl
test
nop
stc
add
mov
push
cmpsl
sbb
out
push
sarb
test
or
jecxz
xchg
sub
aad
mov
rcrb
sbb
std
add
or
out
push
das
mov
xlat
cmpsb
ficoml
jmp
idivl
adc
mov
lret
xor
addr16
ss
cmc
ret
arpl
lret
mov
sub
jo
imul
mov
jb
rclb
add
add
ret
mov
int
imul
es
out
push
sbb
mov
ljmp
out
fs
cli
clc
fldt
notb
jge
pop
mov
inc
clc
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
dec
nop
adcb
jo
mov
and
pushf
in
inc
sbb
outsl
inc
sub
mov
jg
jb
inc
mov
dec
js
pop
movsl
xlat
popa
out
js
ljmp
outsl
add
pop
sbb
and
fs
js
jae
int
jp
mov
pop
xchg
push
insl
popa
std
gs
push
mov
iret
test
mov
insb
dec
cmp
out
outsl
pop
mov
ficomps
push
mov
mov
mov
xor
or
push
and
mov
xchg
call
cmp
jp
sbb
cs
push
xchg
movsl
fdivs
lahf
aas
je
outsb
mov
jbe
stos
rorb
loope
std
xchg
lea
ret
jecxz
iret
shlb
push
pop
aam
jg
lods
mov
fwait
pusha
jl
xchg
call
mov
dec
jnp
jmp
add
in
lds
test
sub
dec
dec
in
and
and
xchg
popl
daa
xor
in
nop
ret
das
or
cmp
dec
cmp
sbb
xchg
jp
shll
lods
scas
mov
mov
les
mov
fnstenv
mov
mov
pop
adc
in
sub
dec
in
std
pop
call
pop
inc
lock
add
aas
mov
xchg
in
ja
or
cmp
jl
and
cs
xchg
loope
aad
mov
add
out
pop
sbb
inc
jo
movsl
call
adc
jno
arpl
mov
push
in
and
addb
shlb
int
sbb
pop
in
xchg
pop
bnd
jne
dec
in
inc
gs
insb
dec
and
jecxz
outsl
cmc
mov
cmp
out
out
addl
or
insb
cmp
dec
dec
shlb
nop
loop
in
push
outsl
mov
pop
iret
loop
enter
shlb
loop
xor
adc
jge
cs
cmp
jl
cmpsl
das
dec
mov
pop
leave
stos
mov
pop
mov
jb
addb
push
ja
xchg
sti
clc
mov
push
xchg
out
lret
addr16
int3
vandnpd
movsb
adc
mov
or
daa
movsb
outsb
and
loope
inc
or
mov
in
mov
inc
cmp
negb
jecxz
xor
sarb
jae
mov
iret
decl
mov
dec
fwait
mov
mov
pop
mov
xchg
push
jno
adc
dec
xor
dec
into
movsb
add
mov
pop
mov
fisubrs
or
out
scas
dec
aad
adc
sbb
data16
cmp
sti
xchg
cmc
fs
outsb
cld
mov
xchg
aam
xchg
and
loopne
xchg
xchg
inc
test
and
jl
es
enter
out
jb
cld
mov
test
lcall
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
mov
jo
jge
jo
adc
repz
int3
adc
clc
test
cmp
dec
in
mov
jne
fbld
add
mov
addr16
xor
mov
and
mov
mov
or
sarl
lods
xchg
jo
xor
inc
pop
adc
lret
ja
mov
js
lods
inc
fsubl
das
lret
int
int
jle
call
pop
cmp
mov
or
mov
pop
dec
pop
out
icebp
cmp
stos
add
nop
mov
xchg
mov
stos
jno
mov
add
adc
outsl
stc
and
push
dec
mov
ss
push
xchg
jle
inc
mov
rcr
sub
aam
popf
mov
insl
aad
mov
mov
and
cmp
xor
mov
idivb
rcrl
mov
aas
pop
dec
add
jae
aam
das
cmp
ss
add
and
mov
js
lods
cmp
cmc
jne
shlb
clc
xor
dec
and
es
mov
aam
inc
outsb
fbld
aam
xchg
mov
xchg
cmpsb
cld
insl
xchg
fsubrp
adc
rcrl
sahf
stc
ljmp
test
into
jno
inc
add
jl
jbe
cmpsl
ficoml
aaa
mov
push
and
bound
iret
sti
push
adc
and
xor
push
std
add
in
mov
jge
jns
inc
push
mov
popf
cld
sbb
repz
hlt
lret
add
cmc
loope
adc
in
cmp
ret
sub
cmp
lcall
sti
popf
aad
int
popf
jmp
int3
and
stos
cmp
mov
es
mov
jmp
push
das
inc
mov
das
cmc
repnz
clc
push
mov
xlat
lcall
or
lcall
inc
fs
xchg
jl
outsl
xor
or
pop
push
dec
out
xor
sub
daa
in
cmp
or
sub
insl
mov
sarb
outsl
jmp
lea
das
jl
mov
adc
fwait
sub
nop
lods
movsl
jae
imul
and
mov
xchg
leave
xchg
lcall
mov
fwait
xchg
jb
orb
inc
lods
inc
add
pop
xchg
out
add
cld
loop
je
ss
fistpl
stc
sarb
scas
cmpsl
add
jne
sbb
jecxz
aam
inc
push
or
in
mov
lock
popa
or
sbb
cmc
cmc
or
insl
or
add
jle
pop
pop
mov
roll
test
test
rorl
aad
cwtl
into
jnp
push
pop
mov
outsl
fwait
and
add
sub
adc
sbb
test
pushf
mov
js
mov
push
std
stos
enter
loopne
pusha
stos
inc
lds
inc
cmpsb
and
xor
mov
and
out
cmp
pushl
lea
jmp
add
out
out
xor
call
inc
pop
mov
and
jo
sbb
jo
jl
cmp
pop
es
inc
icebp
int
or
stos
shl
adc
lods
xor
mov
in
repnz
xlat
xchg
push
sbbl
xchg
scas
shr
mov
dec
repnz
xchg
mov
repz
in
push
das
jecxz
popl
xor
dec
cwtl
jecxz
inc
sub
fxch
fdivrl
stos
cmp
push
xchg
push
xchg
xchg
sbb
out
pop
out
es
lahf
mov
mov
movsl
dec
jp
in
xchg
in
outsl
fs
dec
shrb
jmp
push
add
in
add
xor
sbbb
jbe
fdiv
or
mov
xor
mov
jl
in
jae
sahf
mov
insl
cld
inc
xor
js
inc
mov
inc
jmp
jecxz
sub
mov
repnz
sbb
jb
sbb
stc
sbb
mov
jge
lret
fsubs
mov
and
in
mov
int3
cmp
into
mov
outsb
add
pusha
inc
xor
add
lret
add
mov
or
imul
mov
ret
cmp
std
inc
int
xchg
int
out
stos
adc
std
sarl
mov
pop
hlt
pop
mov
lret
jb
push
dec
out
inc
xchg
mov
cmpsl
xchg
mov
shrl
cltd
ret
mov
adc
inc
fcomps
push
adc
imul
in
pop
jecxz
lock
int
cmpsl
mov
add
test
and
mov
ret
xchg
mov
call
icebp
sub
imul
lret
shrl
ds
repz
lods
in
xchg
nop
cmpsl
repz
mov
out
jno
cmp
mov
mov
dec
jns
popf
aad
inc
dec
sub
into
shlb
cld
fs
add
fadds
mov
sub
rorb
orl
mov
cmpsb
push
mov
outsl
arpl
stc
pop
andl
or
jb
mov
mov
sbbb
mov
add
cltd
enter
ss
and
loopne
orl
xor
stc
lahf
xlat
jo
xchg
jmp
pop
jno
dec
xlat
dec
shl
ss
adc
movsl
dec
lret
xchg
jle
adc
test
enter
xorb
or
into
mov
ljmp
sarb
or
xchg
sub
and
pushf
mov
arpl
imul
and
push
cmp
sbb
shll
xchg
loope
cli
cltd
lcall
dec
or
mov
subb
dec
mov
pusha
push
in
pop
mov
mov
cmp
outsb
lcall
out
jns
ret
xchg
sbb
movsb
orb
inc
out
das
push
xor
sub
mov
test
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
add
mov
loop
jo
jge
jo
pop
xchg
add
pushf
jbe
mov
clc
lret
push
and
lock
loope
push
xlat
mov
mov
mov
cmp
xor
push
out
cmpsb
test
mov
jb
dec
bound
xchg
cwtl
xchg
or
or
in
lret
jecxz
inc
lahf
ror
jp
cld
lods
push
or
dec
daa
pop
bound
push
sbb
mov
inc
mov
ds
into
mov
dec
popa
rclb
sbb
aas
int
in
jecxz
xor
out
fldt
orb
mov
inc
xor
mov
shrl
xchg
and
mov
jnp
sbb
repnz
hlt
mov
fcoml
fsubrl
pop
int
dec
cltd
test
jno
fidivs
movsb
adc
inc
sbb
dec
pop
bound
mov
mov
push
out
dec
testb
jle
mov
inc
fwait
aas
mov
sti
jg
push
pop
cmpsl
scas
insl
mov
pop
in
mov
dec
sbb
and
jne
dec
in
push
aam
test
adc
xor
pop
and
xor
cmc
push
dec
jp
jle
stos
xchg
imul
mov
daa
xor
or
popa
mov
add
xchg
inc
outsl
repz
xchg
sub
sarb
lcall
leave
xor
out
loope
ss
jge
fldt
jle
sbb
scas
fistpll
fcmovnu
ret
or
std
in
inc
mov
xor
mov
and
fucomi
xchg
mov
lds
outsl
mov
stos
sub
imul
push
xor
adc
popf
imul
scas
push
aaa
and
loope
leave
xchg
pop
les
ficompl
test
cltd
in
lahf
and
sbb
adc
push
and
mov
sbb
inc
sarb
lret
or
aas
xchg
mov
cmp
lock
adc
mov
ror
or
fists
fimuls
nop
in
das
fiadds
mov
or
mov
jae
and
jl
inc
incl
leave
test
scas
push
pop
xor
xlat
ret
popf
dec
jmp
rdmsr
adc
scas
addr16
cmp
add
lahf
daa
pusha
or
test
insl
jmp
mov
xor
jl
mov
in
and
cmc
aaa
inc
inc
rcll
jecxz
pop
mov
fstps
ret
adc
inc
movsb
xchg
xchg
pop
jmp
mov
xchg
mov
jo
lock
cmpsl
sbb
push
or
lds
fwait
sbb
movsb
shr
sbb
std
xor
adc
sbb
xchg
data16
int
addr16
and
js
iret
sub
sub
mov
bound
xchg
lcall
inc
mov
push
push
adc
xchg
pop
xchg
test
jo
les
lcall
call
mov
mov
jmp
out
mov
ja
add
xchg
mov
jo
and
jo
dec
mov
inc
lods
sbb
lret
outsl
sub
adc
mov
cmpl
je
mov
into
pushf
xor
shrb
sarb
cwtl
sub
repz
repnz
sub
mov
sub
daa
imul
jb
push
sbb
arpl
sbb
and
adc
movsl
sahf
jb
clc
insl
nop
negb
xchg
hlt
leave
mov
lcall
push
lods
jecxz
mov
add
xor
sbb
jb
call
cwtl
sbbb
call
xchg
ss
sahf
aas
mov
cmp
scas
test
xchg
dec
xchg
outsb
mov
mov
inc
sbb
orb
jecxz
adc
mov
wrmsr
insl
rcl
pushf
add
fcoml
iret
clc
movsl
adc
inc
dec
fs
testl
xchg
pop
loopne
adc
pop
cmpsl
jno
and
ja
shrl
push
fnsave
addr16
loop
loopne
xor
sti
jb
xchg
xlat
lods
insb
data16
mov
mov
sbb
jmp
repnz
pop
test
push
and
sbb
cmp
push
cld
cmp
sahf
mov
sbb
sbb
test
in
test
test
jnp
lock
jge
int3
pop
jb
cmp
pop
pandn
mov
cmp
cs
or
ss
iret
add
and
pop
mov
loop
push
mov
push
mov
call
stc
nop
rcrb
into
insb
xor
pop
xchg
mov
and
outsl
sbb
add
push
xchg
xlat
jne
xchg
inc
mov
lahf
ret
adc
add
push
scas
lret
push
push
cs
sbb
cmp
sub
fucomi
adc
les
xor
mov
push
push
sub
cmp
and
pop
lods
mov
and
and
jo
repz
faddl
mov
xchg
sbb
pop
cmp
push
insl
jns
int3
cmp
aad
or
popa
insl
cmc
aas
fdivrs
out
and
fs
pop
xor
leave
aam
aas
cmpsl
insl
adc
mov
inc
stos
push
fdivl
negl
andb
fisubs
xchg
or
clc
loope
cltd
jg
xchg
dec
lcall
add
fistps
xor
out
add
xor
mov
in
mov
rcll
xor
mov
movsb
fprem
js
cmpsb
pop
xchg
outsl
add
mov
add
inc
shl
mov
push
mov
les
arpl
sarb
fs
fsubl
push
pop
sbb
jbe
xchg
push
and
loope
xorl
xor
pop
test
mov
xor
in
mov
stc
inc
enter
sub
lods
sbb
es
fnstcw
mov
xor
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
notl
in
xchg
jo
lahf
jge
jo
xchg
loopne
inc
add
xchg
jmp
cli
pusha
addl
cmpl
push
popa
add
jge
lods
and
jbe
ret
fwait
jg
cmp
fimull
rorl
jne
jns
daa
popf
shll
inc
inc
sbb
shl
loopne
nop
inc
aas
nop
xchg
into
jns
addl
cli
pop
maskmovq
mull
inc
fwait
xor
xchg
cmp
dec
imul
xchg
dec
out
les
xor
adc
stos
xchg
jmp
pshufw
dec
dec
popa
into
data16
lods
ret
mov
pop
addr16
dec
mov
dec
arpl
xchg
cmp
jnp
lret
sbb
iret
or
sbb
push
mov
sub
push
lcall
sbb
mov
mov
cmp
push
dec
ljmp
xor
fs
out
mov
push
iret
testb
test
mov
movsb
mov
andb
mov
jp
mov
push
repz
pcmpgtd
popl
bound
jg
dec
sub
inc
lcall
xchg
lock
pop
pop
addr16
in
aaa
repnz
sbb
xchg
fdivrl
aaa
jmp
inc
jbe
jl
enter
mov
mov
addr16
testl
and
loopne
aad
push
xchg
iret
call
pop
cmp
orb
mov
mov
xchg
mov
dec
fnsave
push
cmp
ficoml
movsl
or
xor
jne
stos
sbb
imul
jge
mov
call
and
xchg
imul
nop
jecxz
movsl
lods
push
popa
loop
sbb
or
xor
adc
pop
fsubr
int3
pop
movsb
lds
cmp
pop
lahf
or
rcr
enter
arpl
in
xchg
jo
fadd
das
sarl
insb
jne
sahf
xlat
add
push
imul
test
sub
pop
jp
add
cmc
out
cltd
lret
mov
repnz
cmpsl
jb
movups
xor
ret
pop
add
jg
cwtl
orl
ljmp
lret
mov
pop
std
lret
clc
cs
push
imul
dec
lcallw
cwtl
xchg
sbb
leave
mov
mov
jge
std
jmp
fldenv
dec
dec
jp
test
outsl
push
js
es
jo
stos
jb
lret
dec
mov
cmpb
shrb
lods
iret
rorl
pop
mov
movsb
push
test
fdivrs
push
out
xchg
dec
roll
fldenv
jb
pop
jmp
jo
adc
sar
mov
mov
mov
mov
jle
lock
nop
fwait
inc
mov
out
mov
icebp
pop
or
mov
pop
mov
mov
loop
push
jnp
sub
xor
in
push
hlt
lods
mov
dec
sbbb
xor
push
pop
mov
adc
add
sbbl
sbb
push
sub
pop
pop
add
movsl
and
jno
cmp
jl
jnp
mov
out
add
insl
jle
mov
in
xchg
xchg
inc
jo
fisubrl
arpl
adc
push
jle
adc
data16
xchg
in
push
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
fstps
jo
lahf
jge
jo
or
mov
sti
addr16
jmp
fwait
jnp
and
shrl
fcomip
sbb
mov
pushf
stc
or
add
jl
test
nop
shrl
repz
in
stc
or
in
aaa
aaa
stos
dec
cmpsb
popf
mov
push
mov
mov
xor
sub
lods
pop
pop
scas
dec
cmc
xor
stos
repnz
push
or
imul
icebp
dec
pop
popf
pop
in
les
push
mov
rorb
rcl
mov
add
mov
pop
insb
add
mov
loope
mov
ss
pusha
mov
and
inc
pop
lret
rdpmc
xor
sub
pop
jl
mov
push
imul
cmc
jns
in
mov
inc
loope
idiv
sbb
add
mov
pop
sbb
out
sub
les
jno
in
adc
and
xor
push
lahf
clc
popf
dec
mov
xchg
ja
inc
jno
mov
shll
jb
mov
push
stos
mov
pop
push
add
imul
divl
cld
xor
in
xchg
pop
jmp
push
cmp
call
out
adc
mov
lcall
inc
or
cmc
pop
dec
stos
sub
mov
add
imul
xlat
repnz
push
sub
fiadds
push
and
xor
push
daa
dec
negb
nop
fildll
pusha
and
inc
pop
lds
jp
fwait
pop
lods
movb
push
ss
xlat
dec
and
inc
jg
push
pusha
fisubrl
addb
dec
push
ja
shlb
cmpl
adc
testl
iret
xchg
into
loopne
dec
or
fwait
rcr
data16
in
js
push
adc
xchg
adc
dec
aad
mov
lods
je
fdivrl
loope
ljmp
ss
dec
fwait
push
mov
es
pop
inc
cld
mov
aad
cmp
clc
lret
xor
jb
bound
jbe
push
std
xchg
les
or
sbb
dec
add
pop
repz
and
dec
xchg
sub
jns
sub
fidivs
jecxz
setl
loopne
insl
scas
inc
or
ret
sbb
addr16
adc
push
stos
jge
add
adcb
dec
bound
pop
mov
mov
das
jg
fwait
or
incl
xor
ds
xor
mov
fimull
test
cmpsb
pushf
in
aaa
dec
xchg
sbb
and
bound
adc
lods
add
test
lret
xchg
and
mov
dec
std
addr16
jo
jmp
lret
jne
jle
mov
sarl
daa
cmp
and
andb
mov
and
lock
and
adc
adc
pop
sbb
mov
shrl
ret
pop
insl
iret
push
dec
jae
insl
repz
push
insl
dec
sahf
adc
jne
dec
xlat
test
mov
push
insl
dec
mov
jmp
dec
cmp
into
cmp
lahf
sub
sti
or
or
js
repnz
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
cmp
jo
lahf
jge
jo
mov
divb
subl
add
test
fmuls
lods
pop
or
negb
sub
xor
faddl
cld
shll
jl
or
in
pushl
popf
inc
out
jns
loop
in
loop
pop
adc
pusha
xor
pop
ret
or
jae
push
int3
std
mov
jecxz
int
cltd
les
inc
andl
sti
mov
stc
pop
lods
pop
adc
loope
mov
cmp
sub
xchg
out
add
xlat
pop
push
mov
pop
mov
push
push
loop
add
cmp
xchg
pop
lods
jl
aad
orb
adc
shll
cs
sub
jmp
iret
push
dec
repnz
adc
fwait
or
xchg
daa
cmp
pop
mov
and
ss
cmp
cmp
and
xchg
rdpmc
int3
pop
or
sub
ljmp
push
push
jbe
mov
inc
dec
cmp
test
popa
shrl
push
add
pop
imul
xchg
repnz
test
lret
sub
cmp
aad
jb
push
inc
jmp
mov
xor
pushf
test
add
push
jge
cmpsb
jno
test
push
je
mov
or
nop
aad
dec
xlat
fs
test
sub
inc
or
or
mov
enter
fnsave
mov
sub
sub
dec
enter
movsl
jge
addr16
sti
in
mov
je
jns
mov
out
adc
int3
push
mov
xor
xor
decb
dec
pop
pop
out
pop
loop
ret
rcll
push
fwait
push
mov
push
lcall
xor
pop
pop
jecxz
scas
and
adc
mov
cmpb
add
or
sbb
fstps
movsb
imul
mov
outsl
popf
sub
aas
cmc
mov
mov
add
scas
cwtl
xor
cld
and
jle
push
pop
cltd
pop
aad
mov
outsl
paddsb
lret
dec
in
mov
mov
and
cs
nop
xchg
out
jp
cld
push
repnz
lods
and
jbe
push
jg
imul
sub
jo
movsb
jle
popf
pop
mov
push
inc
jo
iret
mov
and
cmp
bound
mov
pop
pop
cli
fs
xlat
pop
and
fildll
sbb
aas
lea
and
loop
xchg
cmp
lahf
insb
lea
imul
repz
xchg
cmc
imul
repnz
imul
jl
jb
lods
aad
test
dec
out
sub
fsubrl
dec
cmpsl
lahf
cwtl
imul
xor
out
lods
or
cmp
les
icebp
ficomps
pop
rcl
das
cltd
cli
adc
faddl
jg
xor
int
sarl
scas
adc
cmp
mov
push
cmp
sbb
leave
lret
dec
adc
and
repz
push
loopne
stc
dec
pop
inc
loop
loope
lea
pop
push
add
lahf
xor
mov
negb
dec
dec
icebp
jmp
mov
lods
mov
pusha
aaa
ds
add
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
push
pop
inc
aas
in
jo
lahf
jge
jo
popa
outsl
bsf
icebp
rorb
inc
or
outsb
pop
push
insl
ja
dec
add
sbb
inc
cmpsl
aas
sub
and
push
cmp
push
cld
popa
and
sbb
ss
into
leave
mov
xor
stos
sbb
lcall
scas
pusha
add
mov
sarl
xchg
or
cmpsl
inc
fcomps
les
mov
mov
es
xchg
sub
cs
cli
pop
inc
xor
xor
subl
push
or
push
mov
lret
bound
sbb
xchg
pusha
add
imul
mov
mov
pop
pop
enter
mov
cld
shlb
sub
mov
test
dec
pop
sbb
dec
push
pop
rorl
jp
adc
jmp
or
sti
or
mov
mov
pop
repz
push
adc
cld
jbe
jnp
push
sahf
into
js
js
std
xor
ja
inc
adcb
mov
stos
inc
push
retw
adc
pop
out
adc
jbe
popf
jmp
jae
jns
imul
cmp
xchg
push
in
sub
mov
pop
and
notl
pop
sbbl
insl
cld
xchg
bound
nop
cld
sub
mov
inc
daa
mov
sbbb
xor
jns
push
inc
xlat
push
mov
pop
in
cld
adc
aam
rorl
sub
xor
cmp
jb
mov
or
mov
jmp
xchg
jns
add
popf
addr16
shll
mov
add
and
jg
jp
mov
sub
dec
in
add
jmp
push
cmp
aad
add
jg
shlb
cli
mov
mov
cld
xor
enter
leave
push
xchg
movsl
xchg
pop
or
push
xlat
test
sahf
aad
rcrl
ljmp
cmc
xor
mov
jecxz
nop
jle
adc
iret
push
add
pop
in
loope
stos
aam
adc
loope
mov
mov
or
pop
decl
cmp
lds
mov
mov
lods
pop
dec
xor
cmpsl
mov
dec
push
cmp
cld
loope
stos
sbbb
lcall
cmc
adc
outsb
mov
jns
pushf
cmp
add
lock
aam
loop
adc
cwtl
jno
dec
imul
sbb
xchg
in
lea
and
xchg
mov
jo
orl
inc
mov
test
ret
and
xchg
push
out
cld
scas
dec
adc
xor
mov
repnz
jl
arpl
repz
cli
aas
je
or
add
inc
xor
scas
add
fdiv
idivl
inc
je
bswap
test
jl
sarl
cwtl
push
out
stc
rcrb
xor
xor
je
mov
gs
lret
inc
insl
je
loopne
pusha
ret
inc
sbb
nop
pop
push
sub
mov
test
sub
mov
cmp
pushf
jno
scas
int3
xor
xchg
mov
fdivl
adc
jl
cs
xor
dec
fmul
mov
dec
jecxz
jbe
cmp
rolb
add
out
add
rol
add
fwait
sbb
add
cli
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
sahf
adc
add
jo
lahf
jge
jo
outsl
clc
lods
test
bnd
add
or
cmpsb
sbb
aam
rolb
sbb
mov
jmp
or
sbb
pop
dec
mov
ss
adcb
hlt
sbb
lock
cmp
sub
ljmp
mov
rcrb
sub
in
stos
out
xchg
insb
hlt
jp
dec
outsl
test
outsl
mov
or
cmp
imul
or
lods
out
jg
add
mov
and
jae
enter
sub
stos
fcomps
jle
jecxz,pt
lds
std
fs
xor
leave
fildl
je
popf
sub
fiadds
repz
dec
jbe
iret
in
xchg
jmp
mov
in
xchg
adc
pop
sahf
jae
imul
cmp
add
int
sbb
push
movsl
cmp
mov
dec
or
test
lret
aam
and
dec
mov
mov
ficoms
mov
dec
or
adc
cmpsb
dec
push
ja
mov
mov
jp
push
je
mov
repnz
leave
mov
sbb
nop
jp
into
add
dec
dec
clc
xlat
loope
jb
lea
loope
mov
push
ds
andb
mov
ds
xor
xor
mov
sub
pop
jmp
mov
push
mov
add
out
mov
lahf
ret
sub
pop
cmp
addl
rcr
ret
fcmovne
out
sbb
xlat
aad
xchg
in
lret
mov
aas
push
adc
cmp
shll
test
out
out
in
pop
dec
pushf
mov
fwait
mov
cmp
inc
fnstcw
fdivl
movsl
push
cmp
xchg
sub
call
jnp
scas
mov
hlt
cmpsl
test
jge
lock
or
xlat
jecxz
leave
push
inc
cmc
xchg
repz
xchg
lods
cmp
lods
adc
in
push
ret
nop
shl
call
std
shrl
out
pusha
xor
inc
sub
pushf
sbb
popf
mov
fwait
pop
les
mov
iret
mov
add
jl
lret
int3
loop
xor
mov
add
rcrb
jno
add
pop
cmp
mov
adc
or
add
or
stc
popa
out
and
pop
push
test
stos
mov
xchg
mov
pop
sahf
scas
mov
cmpsb
push
ret
lods
cmpl
xor
jo
cli
enter
je
push
mov
fimull
lahf
or
popa
inc
dec
es
add
add
shlb
push
mov
inc
xchg
lea
fsubrl
stos
cmc
lahf
jnp
bound
cmpsb
jp
and
rolb
in
data16
pop
push
dec
sahf
pop
push
pop
outsb
test
leave
xchg
mov
jl
sub
cmpl
scas
fisttpll
scas
cs
dec
dec
fisubrl
mov
pusha
leave
xchg
cmp
sbb
mov
sub
lahf
bound
pop
pusha
cmp
mov
adc
dec
pop
cwtl
mov
out
ret
stos
stc
rcrb
mov
xor
inc
ljmp
in
scas
or
cmc
js
cld
pop
xchg
push
nop
shlb
lds
pop
out
jle
js
sbb
jecxz
shr
mov
jne
sub
lret
mov
cli
jo
lahf
jge
jo
addr16
mov
imul
adc
and
push
cld
or
xor
fs
adc
push
push
jns
cmp
xor
outsb
and
pop
lret
data16
cmp
mov
lret
dec
sbb
imul
daa
sub
jmp
jae
adc
iret
fwait
loopne
dec
mov
pop
xor
inc
xchg
mov
cmpsl
or
sahf
imul
dec
push
cmpsb
pop
xchg
aas
shrb
jo
ja
fdivp
cmc
daa
mov
in
lahf
sbb
dec
dec
out
mov
test
or
or
push
repz
jo
sbb
pop
aam
cs
push
pusha
shll
lea
js
leave
gs
jmp
inc
fdivrl
lea
sti
pop
or
lds
outsb
xchg
mov
jno
jo
lcall
mov
mov
mov
inc
in
sbb
jge
out
gs
daa
arpl
or
je
jns
leave
lods
sub
dec
mov
test
inc
push
cmp
lods
push
lds
mov
and
mov
cmp
mov
leave
xchg
ret
ss
dec
mov
out
jo
notb
into
mov
or
mov
jge
xchg
dec
icebp
mov
out
lcall
add
add
cmc
adc
jmp
mov
into
arpl
inc
pop
sub
lds
jp
idivb
push
sti
pop
int
or
mov
scas
in
rclb
mov
push
mov
leave
xor
insb
lcall
mov
loopne
out
xor
cwtl
fnsave
sarb
scas
mov
movsl
push
ret
sbb
mov
mov
loop
add
add
leave
push
cmp
lods
daa
and
aaa
xchg
imul
cld
sbb
push
inc
aad
rcll
mov
cmpsl
out
lret
xor
adc
cmpsl
stc
notl
mov
adc
rorl
and
mov
xchg
outsl
mov
arpl
pop
popa
sbb
cwtl
jge
ja
ss
mov
or
mov
adc
int3
enter
insb
mov
mov
in
xchg
loope
jmp
sbb
sub
cli
jmp
fistpl
adc
scas
imul
add
sub
mov
aam
lock
subl
in
push
das
and
dec
lret
adc
stos
lods
or
cli
nop
fs
in
mov
nop
jmp
and
into
xor
add
lds
mov
jno
adc
cltd
fsts
adc
rol
mov
cmpl
cmc
and
add
out
sub
out
and
lods
orl
scas
fiadds
cmpsl
pushf
pop
icebp
fbld
inc
sbb
rclb
sbb
subb
pop
nop
rclb
jle
pop
lock
fucomip
ret
repnz
mov
aad
fistps
ja
dec
xor
insb
xchg
inc
ss
movl
cs
sbb
ret
push
cli
dec
in
mov
sub
xor
fwait
push
cmp
and
inc
bound
sarl
xor
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
cwtl
adc
adc
xchg
lahf
jge
jo
mov
xorl
jns
or
cmpsb
pushf
fs
arpl
adc
mov
iret
in
push
mov
adc
ret
ret
push
lcall
jmp
cltd
xchg
gs
lahf
lock
cmpsl
stos
mov
js
ret
int
dec
in
cmp
inc
scas
in
jmp
idivl
jmp
inc
adc
pop
dec
ja
cmp
push
int3
pop
in
out
inc
mov
mov
addr16
dec
push
stc
pop
jno
lcall
enter
cmp
sbb
repnz
movsl
jmp
xor
inc
xchg
dec
jmp
adc
push
inc
lcall
pop
mov
dec
aad
jbe
pop
lds
push
or
ds
nop
dec
aas
cmp
xchg
jmp
shll
call
mov
mov
mov
negl
lcall
mov
daa
insl
rorl
push
movsb
aad
jg
jl
inc
repnz
fstpt
dec
and
push
and
push
mov
imul
dec
mov
repz
sub
call
or
jns
dec
insl
jnp
cmp
sbb
bound
cmpsb
shlb
cmpsl
jnp
ss
mov
xchg
jl
int
in
lock
std
lret
cmp
adc
into
adc
pop
jno
push
xchg
mov
mov
cmp
sar
lret
push
lods
inc
mov
clc
iret
pop
or
idivb
insb
scas
cmp
movsb
data16
and
mov
in
sbb
xchg
outsl
scas
mov
imul
sub
in
in
add
data16
out
clc
xlat
cld
inc
pop
fisubl
imul
lahf
out
addr16
insb
dec
cmpsb
loope
lahf
jecxz
movsb
cmpsl
jns
push
enter
jle
sub
sub
aam
cmpsl
jle
in
xor
pop
insb
and
testl
or
and
das
mov
jecxz
icebp
aad
pop
idivb
in
xlat
aad
mov
mov
mov
mov
add
sbb
into
out
cmp
shlb
arpl
repnz
mov
repz
shlb
push
incb
push
clc
mov
cmp
xlat
std
fiadds
insl
sub
mov
pop
stos
xchg
sar
int3
cs
adc
fiadds
push
xchg
xchg
cmp
imul
adc
fistpl
sub
cld
int
cld
xor
mov
mov
xchg
and
sti
in
andb
stos
xor
jne
mov
les
lahf
shll
jl
sub
pop
mov
push
sbb
adc
adc
in
icebp
clc
or
lret
mov
jle
sub
mov
outsl
out
ss
add
into
sbb
insb
pop
ss
loope
sub
cmpsb
imul
cmp
xor
js
enter
mov
incl
mov
aad
inc
sub
repz
mov
icebp
jne
jp
mov
inc
jns
add
mov
lds
in
jb
push
shl
mov
dec
ds
repz
jne
push
es
mov
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
sahf
pop
pusha
xorl
jge
jo
lock
xor
xchg
mov
in
push
push
xchg
mov
std
xchg
repz
insl
mov
fistpl
push
loope
jae
sub
push
mov
and
xchg
pop
inc
shll
jmp
push
adc
daa
adc
loop
into
xchg
lret
push
or
stc
add
fsubrl
jg
into
addl
push
insl
xor
sbb
iret
add
jb
cmp
sub
es
or
dec
xchg
adcl
ud0
mov
aas
call
dec
xchg
daa
stc
inc
mov
jl
scas
push
sar
mov
cld
push
fsub
or
mov
dec
mov
pushl
roll
cmc
lahf
mov
iret
mov
pusha
xor
cmp
ja
xchg
in
rcrl
in
mov
addb
das
clc
jne
mov
push
test
jbe
cmp
pop
cmc
add
cmp
inc
outsl
pusha
jns
call
dec
jecxz
jae
fdiv
xor
and
lods
mov
adc
cmp
insl
adc
stos
jmp
jl
xchg
ljmp
xchg
or
imul
mov
jbe
clc
sarl
inc
movsl
repnz
mov
sub
cmp
and
dec
shrl
dec
mov
out
push
imul
push
pop
aam
lods
sub
loope
jge
pop
xchg
xchg
xor
jl
outsl
sbb
sub
imull
int
orb
jmp
mov
pop
ret
dec
push
lret
xor
push
dec
je
inc
mov
xchg
rolb
ret
sar
iret
sub
jp
push
popf
in
sub
mov
adc
and
mov
adc
and
je
mov
sbb
sbb
lret
push
mov
add
push
adc
mov
push
cmp
jne
aaa
pop
fwait
push
cmp
fdivrs
dec
int
ds
pop
pop
mov
mov
sub
lock
fldl
mov
jp
inc
loopne
jae
or
testb
movsl
cmpb
mov
add
or
dec
add
ss
loop
jmp
cs
pop
jle
sub
dec
sub
mov
les
jmp
stos
mov
rorb
movsb
mov
xor
adc
push
fcomip
sub
aam
xor
dec
in
loopne
sub
pop
sbb
ljmp
mov
cmp
xchg
in
lods
mov
xor
or
ficoml
cmpsl
cwtl
lea
jmp
dec
movsb
jae
jmp
push
push
lahf
pop
xchg
repnz
mov
bound
mov
leave
shrl
dec
in
cmp
pop
dec
fstpl
adc
xchg
data16
mov
and
adc
mov
sbb
sub
lea
jge
fnstcw
dec
mov
push
imul
jae
xor
and
aas
xchg
cmc
fsubr
push
fimuls
pop
jl
mov
int3
push
enter
or
jne
xchg
addr16
mov
cmp
xor
imul
out
ds
sbb
mov
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
lods
shll
jge
jo
sti
mov
js
in
jge
dec
mov
movsl
sbb
fstpt
mov
aam
mov
or
jbe
push
sub
clc
or
xchg
lods
adc
sub
cmp
xor
inc
adc
jne
aas
addr16
mov
clc
popa
shrb
cmpsb
lods
test
xchg
and
imul
xor
sub
dec
hlt
sahf
push
cmpsl
sarb
in
jo
enter
and
nop
out
dec
inc
popf
xlat
stos
jmp
out
addr16
adc
xchg
clc
arpl
jb
adc
out
mov
mull
jg
das
sahf
fwait
mov
sbbb
cli
pushf
xor
sub
add
mov
push
fldenv
test
pop
cltd
outsl
lea
jl
stc
movsb
cmp
loopne
dec
jge
sahf
push
enter
push
and
in
dec
cli
lcall
or
aas
mov
mov
dec
fmull
aas
fcmovnu
out
cltd
push
add
push
jl
sbb
fsts
mov
mov
xchg
pushf
std
leave
sub
push
andb
add
or
mov
popf
jae
stos
jbe
mov
out
imul
fsubrp
jp
xchg
aas
sbb
enter
mov
insb
cwtl
negl
outsb
mov
loopne
negb
lcall
mov
insb
cmp
mov
je
mov
mov
daa
sbb
or
sar
jae
push
cltd
daa
ljmp
test
add
push
lds
push
dec
pusha
sti
popf
loope
sbbb
fs
clc
jl
sbb
movsb
pop
es
dec
sbb
sbb
in
and
push
jne
repz
sub
imul
mov
call
insb
lds
scas
xlat
sub
dec
imul
mov
inc
pop
mov
dec
jo
addr16
mov
lds
cmp
xchg
pusha
xchg
sbb
lds
cmp
lret
arpl
cmpsl
bound
mov
cmp
lret
shr
xor
sti
sub
sbb
scas
stc
sahf
ret
cmp
mov
ja
gs
inc
lods
out
pop
adc
lahf
ficompl
imul
jl
cltd
cmpsl
repz
mov
mov
pop
mov
mov
gs
dec
or
mov
pop
popa
loopne
or
lock
mov
xchg
inc
movsl
mov
push
adc
addr16
inc
sbb
aad
mov
mov
xor
and
sub
sub
push
or
xchg
insl
mov
push
cli
rcrl
je
inc
dec
in
hlt
imul
pop
aam
and
xorb
fstpt
aaa
movsb
rorb
push
out
push
sub
cmp
aam
sbb
fcoms
repz
stos
leave
jo
out
push
je
into
mov
adc
sbb
adc
sub
idivl
pop
pop
pop
sbb
add
and
dec
mov
pop
xchg
sbb
iret
sbb
loope
ret
or
sbb
jmp
jmp
jmp
adcb
ret
cwtl
movsb
iret
cmpsb
mov
iret
js
xchg
xlat
fcomip
sub
pushf
mov
cmc
int3
rorl
std
cmp
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
ds
hlt
rol
mov
lahf
jge
jo
rclb
mov
cwtl
sub
push
js
add
stos
cld
adc
fldenv
inc
fs
xor
ja
jle
cmp
mov
int
insl
jp
xor
repnz
sbb
test
mov
out
out
aaa
inc
data16
and
loope
out
cmp
and
mov
mov
sbb
mov
mov
or
dec
std
and
fcom
xchg
push
add
and
mov
sbb
in
jb
dec
add
rclb
rorb
mov
mov
jmp
sarl
rcr
or
xor
adc
sbb
mov
and
jb
inc
sbb
push
lock
sub
into
popa
inc
or
adc
xchg
and
enter
scas
sub
adc
jmp
push
sub
pushf
add
push
dec
and
andl
clc
les
fisttps
lods
add
fldenv
jl
std
or
xchg
add
jg,pn
mov
cmp
std
out
adc
test
mov
je
sub
inc
or
dec
rcr
rcrl
movsb
orb
stc
and
arpl
pop
fs
sti
pusha
bound
xor
push
popf
mov
add
pusha
mov
xlat
pop
sub
add
scas
push
cwtl
cmpsb
mov
add
pop
and
repz
daa
movl
jecxz
aaa
sub
int
rclb
xchg
setg
lcall
jb
pop
movsl
push
pop
cmp
xor
mov
adc
in
cmp
pop
pop
jmp
xchg
fsubrs
mov
std
ret
dec
xchg
adcb
inc
into
cld
out
stos
or
inc
call
dec
adc
jno
les
and
adc
fs
cltd
gs
std
out
jmp
leave
pop
es
jbe
adc
not
adc
push
nop
ds
adc
pop
xor
push
or
jle
jmp
and
mov
cmp
arpl
mov
xor
ss
popf
cmp
inc
pop
data16
les
mov
sbb
fistl
js
jg
push
fnsave
dec
adc
jg
movsl
mov
into
pop
popa
imul
cmpsb
adc
xchg
lods
push
je
es
stos
mov
pop
and
jl
dec
test
mov
fiaddl
mov
cmp
mov
or
clc
daa
cmp
dec
in
cmp
adc
dec
loope
test
out
scas
mov
lahf
mov
data16
jne
ror
xchg
sbb
mov
mov
sbb
cmp
fs
or
insl
xchg
cmp
push
sbb
dec
push
pushf
sahf
fstpt
inc
js
jle
call
xchg
scas
in
ja
fst
sahf
fildll
cmp
lds
leave
je
mov
add
out
aas
adc
fs
mov
mov
cli
cwtl
ljmp
pop
andb
mov
xchg
in
and
scas
mov
loop
mov
sub
add
jp
into
jns
pop
mov
mov
xor
sbb
xchg
adc
in
add
sub
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
mov
mov
lahf
jge
jo
sahf
insl
in
rorb
and
lods
mov
push
std
ss
pop
mov
sahf
testl
xor
mov
adc
add
leave
jl
addr16
shrl
push
adc
jnp
xchg
imul
xchg
xchg
jae
test
and
push
insb
sti
lds
add
mov
outsl
cmp
or
test
mov
aaa
mov
lret
cmpsb
int
repnz
add
repnz
insb
jns
adc
ret
add
lods
loop
out
mov
or
paddw
addr16
cmpsl
jmp
add
imul
mov
lds
cmp
xchg
sbb
ret
lcall
inc
cmp
lahf
adc
mov
repnz
pusha
roll
outsl
dec
mov
lock
mov
sbb
sub
hlt
pop
push
ss
dec
inc
and
and
je
sub
adc
pop
imul
push
mov
test
cmp
lret
cs
cmc
fs
insl
sahf
cmp
xor
lds
lea
inc
icebp
jp
movl
iret
inc
sbb
aaa
jp
out
loopne
aas
out
lock
mov
xlat
sbb
fsts
mov
jp
icebp
das
adc
mov
outsb
out
cmp
mov
pop
lea
push
ficompl
lahf
mov
test
jno
pop
rolb
negb
out
xchg
iret
adc
mov
sub
jmp
adc
dec
dec
sbb
loopne
jnp
adc
sub
cmc
xor
fwait
add
fs
fdivs
jecxz
mov
je
leave
test
add
xor
lret
scas
mov
test
sub
icebp
push
jno
mov
lds
pop
js
dec
dec
cmp
dec
ret
mov
daa
pop
jns
stos
subb
mov
cmpsb
dec
and
outsl
mov
mov
clc
xchg
fwait
jnp
outsl
pop
cld
mov
dec
cmp
pushf
fs
mov
out
lea
adc
mov
imul
mov
aas
and
xor
test
test
popf
inc
repnz
cmp
sbb
jecxz
inc
adc
lock
xor
out
cmp
popa
inc
cs
jo
xchg
ds
push
les
pop
add
fs
aam
test
fcoml
loop
mov
test
repnz
movb
cmp
mov
jg
int3
xchg
jno
add
lods
shll
xor
and
pop
mov
mov
pop
xchg
mov
popf
nop
sbb
js
test
mov
insb
adc
mov
add
or
jge
jne
stos
loop
icebp
jb
mov
pushf
out
arpl
int3
in
cmp
or
mov
fstp
in
cs
test
shrl
dec
decl
mov
sahf
mov
cld
xor
pop
adc
rorl
clc
xchg
in
dec
in
add
mov
mov
out
fcomip
sub
cmp
jb
xor
sub
call
push
data16
clc
dec
test
out
popa
push
jo
shlb
mov
std
cmp
cmp
jbe
push
faddl
sbb
and
jge
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
adc
xchg
jo
lahf
jge
jo
fiadds
jecxz
mov
lea
pop
jge
aaa
std
push
nop
shll
pop
mov
and
add
sbb
xchg
mov
sbb
jle
inc
adc
pop
ja
fcompl
adc
mov
sarb
out
cmp
gs
mov
out
sbb
sbb
mov
daa
lahf
addl
ds
leave
jnp
and
jg
mov
loopne
pop
or
cmp
jecxz
jge
mov
cs
push
in
mov
out
push
add
cmp
repz
inc
mov
aam
fsts
jbe
fwait
jp
mov
movsl
and
and
mov
sbb
cmpsl
lahf
adc
clc
xor
std
dec
mov
and
inc
xor
cld
add
fldlg2
bound
xlat
add
imull
jae
mov
xorl
adc
cmpsb
mov
out
xchg
cmp
or
jle
jb
unpckhps
cmpsb
cltd
mov
inc
inc
ret
xor
shrb
xor
shrb
push
pop
inc
inc
fisubrs
outsb
mov
add
inc
lea
pop
rclb
and
mov
sub
adc
jnp
xchg
lds
fbstp
sub
jp
ret
xor
scas
lret
hlt
outsl
push
pop
out
js
cmpsb
outsl
std
leave
es
xchg
shlb
xor
mov
push
cmpsb
pop
faddl
out
pop
add
cmc
arpl
outsl
pop
subb
jns
mov
xchg
cmp
inc
in
pop
into
jmp
pusha
int3
mov
dec
subl
aas
mov
negb
add
into
mov
mov
sub
pop
into
lds
add
repnz
sub
add
and
pop
mov
dec
ficomps
nop
movsb
testl
pop
push
lds
outsl
out
cmpsl
push
mov
mov
aad
clc
mov
xlat
xor
lahf
pop
pop
jp
fnstcw
imul
push
push
xor
in
scas
lods
xchg
pusha
mov
jge
mov
aas
adc
lahf
mov
jb
pop
fcoml
cmpsl
scas
cmp
stos
ss
cmovb
lahf
lds
mov
into
popf
scas
sbb
mov
ljmp
enter
xlat
ret
push
sbb
cmp
insb
scas
shr
data16
div
aas
xor
dec
clc
aad
lcall
pop
loopne
out
pop
adc
mov
mov
mov
mov
xor
hlt
xchg
pop
jl
adc
pop
inc
jl
js
test
lds
push
inc
or
int
mov
jb
movsb
cld
add
jp
popa
cmp
jp
fcmovnu
mov
bound
outsb
clc
mov
roll
and
inc
aam
adc
xchg
and
or
cmp
repz
jecxz
dec
fists
fbstp
cmp
or
fisubrs
es
outsb
inc
rcr
fsubrp
jne
shrb
or
movsl
add
jg
jmp
scas
jg
scas
sub
ret
shlb
adc
and
mov
jmp
push
ja
je
outsl
std
xor
sub
jecxz
out
mov
fimull
cli
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
adcl
jns
nop
jo
lahf
jge
jo
inc
into
sub
push
mov
add
adc
cmp
enter
mov
dec
xor
mov
sub
add
mov
cmp
cmpsb
jnp
leave
dec
mov
shl
pushf
test
inc
xor
or
ret
pop
lret
pusha
adc
cmp
mov
in
int3
push
adc
in
and
outsb
lahf
data16
and
call
jecxz
aaa
cmp
add
xchg
data16
dec
lahf
icebp
sub
sahf
xchg
pop
inc
jns
sbb
xlat
mov
pop
or
push
lock
push
arpl
mov
jbe
xchg
js
jne
mov
xchg
dec
mov
and
gs
add
fcomip
jbe
xchg
and
mov
and
push
dec
loope
aad
and
int
dec
ret
pop
iret
iret
lea
ror
out
lcall
ss
pop
sbb
sahf
lcall
cmp
out
xor
rcl
jo
jbe
cld
and
push
jge
cmp
cmc
outsb
adc
stos
jns
mov
rcll
loop
inc
jecxz
mov
add
sbb
mul
sub
jmp
push
jg
push
out
jns
jl
sub
sbb
mov
xor
push
xchg
sbb
test
xor
inc
inc
mov
sub
dec
dec
xchg
pop
ljmp
cs
arpl
sub
repnz
call
repnz
mov
dec
call
push
sub
mov
xlat
push
out
or
outsl
xor
in
mov
jb
das
or
scas
sbb
cmp
int3
mov
xchg
ljmp
mov
xchg
inc
mov
dec
dec
add
ret
int3
mov
mov
xchg
inc
js
or
negl
push
pop
push
push
out
or
push
or
insb
cmp
mov
cmp
mov
stc
mov
dec
and
movsl
out
jb
jmp
stos
insl
xor
adc
outsl
imul
lods
mov
inc
cmpl
fwait
in
mov
out
cmp
shl
dec
or
repnz
mov
loopne
out
xorl
into
dec
jne
mov
mov
sub
jns
mov
test
pop
movsl
mov
dec
xor
lock
push
movl
stc
out
push
pop
add
in
into
ss
pushf
xor
in
mov
orl
inc
dec
and
sahf
inc
add
popf
movsb
ja
das
fbstp
xchg
fwait
and
cmp
mov
mov
pop
or
int
sub
cli
mov
or
into
push
dec
inc
dec
mov
sub
mov
loopne
sbb
loop
jae
out
mov
cmc
pop
shll
outsb
pop
data16
shl
cmpsl
cmp
jl
inc
cmp
lahf
insl
mov
mov
mov
mov
popa
cltd
stc
arpl
pop
add
mov
outsb
test
sti
xchg
adc
pop
orl
or
mov
mov
je
jns
in
push
je
inc
pop
test
mov
mulb
das
fnstenv
sbb
mov
ror
xor
je
jmp
test
aam
xchg
rcrb
xchg
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
lcall
lahf
jge
jo
mov
pop
les
push
sub
inc
jne
adc
mov
sbb
jo
adc
imull
jbe
fwait
mov
cwtl
shlb
xor
sbb
addr16
data16
test
test
repz
bnd
aaa
inc
add
xchg
insl
call
jmp
imul
inc
xor
sbb
xlat
stc
js
movsb
xchg
mov
loope
sub
jno
xor
jmp
push
cli
xchg
in
es
adc
jl
and
pop
ds
in
mov
movntps
ss
int3
sbb
mov
pop
pop
inc
inc
leave
adc
push
adc
jp
in
sbb
lds
insl
rcrb
add
imul
cmp
and
adc
pop
jno
sbb
loop
or
push
pop
jle
shlb
daa
ret
shrl
jns
cmp
bound
mov
inc
repnz
cmpsb
mov
cmp
sbb
loop
in
ficoml
leave
adc
pusha
adc
adcl
imul
test
out
jmp
inc
imul
std
mov
sbbl
push
loope
sti
shll
dec
inc
lcall
repnz
and
inc
xor
jge
push
xchg
stos
push
into
mov
cwtl
scas
loop
insl
insl
jbe
retw
in
push
mov
jg
js
mov
arpl
insl
ret
xor
push
mov
jle
or
pushl
sahf
lcall
popa
frstor
xchg
lret
add
xchg
js
sbb
mov
ss
add
lods
insb
stos
fnstenv
mov
sbb
mov
repz
je
adc
inc
jbe
movsl
cmp
das
xchg
jnp
mov
unpckhps
push
dec
fsts
pop
sub
xchg
jno
or
pop
test
inc
jmp
jo
popa
add
xor
dec
lret
cwtl
jo
or
aas
iret
les
loope
mov
push
scas
ds
sbb
and
jge
cmp
sub
stos
push
and
or
lock
inc
fwait
in
dec
ljmp
add
xchg
and
jbe
mov
mov
loopne
mov
mov
pop
push
mov
and
lods
repnz
scas
push
test
aad
dec
cmp
daa
call
sub
movl
aad
pop
dec
insl
lds
cltd
mov
imull
sbbb
cmp
sbbl
jmp
sub
mov
mov
cmp
fcomip
mov
test
jmp
add
cmp
mov
mov
sahf
movsl
push
mov
mov
jp
pop
imul
and
jmp
jmp
pop
push
fadd
clc
icebp
imul
xor
mov
popl
dec
pop
or
sub
mov
loope
mov
push
and
sbb
xchg
fxch
xchg
or
aas
push
xlat
and
stc
orl
popa
push
mov
dec
subb
ja
rcll
in
sbb
mov
sahf
test
cmp
clc
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
into
cmp
cltd
jo
lahf
jge
jo
or
enter
adc
loopne
mov
jp
loope
adc
and
mov
dec
popf
or
repz
push
fwait
xchg
xchg
mov
inc
xchg
sahf
test
or
add
test
dec
outsl
mov
lret
ret
dec
jbe
enter
cmpsb
mov
int
gs
idivb
sahf
sti
adc
call
outsl
xlat
jmp
or
xchg
mov
aas
scas
addl
rorl
int
xchg
pusha
sub
jno
mov
aas
adc
iret
xchg
inc
std
jnp
mov
insl
jle
cli
ret
nop
dec
cli
andl
pop
aad
ret
outsb
mov
std
mov
inc
sti
xchg
xchg
pop
call
shl
aad
lret
push
loop
mov
cmpsl
dec
cltd
push
mov
mov
lcall
call
mov
scas
lods
cmc
mov
aam
les
test
and
cwtl
inc
push
in
inc
mov
cmp
add
push
push
repnz
xchg
pushf
aam
test
xchg
xor
mov
shll
test
in
sbb
leave
mov
cmpsb
mov
mov
adc
jnp
mov
rorb
inc
sbb
push
enter
xchg
push
out
lret
sub
mov
out
les
or
push
push
lret
inc
mov
pop
aas
scas
jb
or
insb
push
mov
inc
mov
call
mov
sti
dec
xchg
pop
jbe
cli
int
jecxz
add
push
ret
push
sbb
or
popf
mov
jns
out
add
loop
das
push
xchg
pop
cltd
sub
loope
mov
outsl
jo
sti
iret
imul
jge
mov
mov
mov
inc
or
divb
mov
popf
inc
fcmovu
stos
fdivr
cmp
out
pop
sbb
jb
andl
xor
in
stos
insl
mov
cwtl
es
inc
fnstenv
adc
jnp
inc
xchg
mov
lea
loop
ja
rol
dec
xchg
lock
mov
and
cltd
and
sahf
pause
lds
lock
xchg
mov
sar
fcompl
popa
aas
mov
jg
ret
jp
aaa
inc
stc
nop
jle
lahf
inc
sub
in
mov
lds
lds
push
fisttpll
daa
pop
dec
aam
jg
dec
ss
fsubrp
xor
lods
mov
call
jge
inc
xor
dec
movsb
add
push
mov
mov
rcrb
das
and
cmc
mov
out
mov
or
sbb
mov
dec
and
pop
addr16
repz
cmpsb
push
fwait
enter
mov
ds
cwtl
mov
mov
in
cmp
inc
xor
mov
fstps
dec
push
pop
ret
js
jno
pushf
sahf
lcall
xchg
js
fmull
movsb
aam
cli
fisubs
jecxz
ss
push
or
movsb
add
mov
or
and
data16
or
dec
jecxz
xchg
jae
jns
mov
inc
fsts
lods
loopne
fsubs
in
and
push
pop
lret
cwtl
icebp
mov
stos
and
lods
dec
int
sahf
or
dec
sub
jecxz
mov
repz
add
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
inc
subb
jo
jg
jo
cmp
outsb
cli
push
insl
dec
dec
into
pop
sub
push
sbb
xchg
sub
push
sahf
and
pop
inc
clc
std
mov
bnd
mov
test
push
cmpl
xor
ss
or
jbe
or
ss
sahf
repz
std
lcall
std
test
add
mov
ret
and
in
and
call
in
jno
mov
fimull
mov
dec
das
or
scas
dec
pop
xchg
sbb
cs
dec
cmp
stc
or
xorl
mov
sub
and
std
or
cmp
xchg
cmpsb
xlat
inc
mov
aad
jl
xchg
xchg
stos
mov
xor
movsb
cltd
int
in
dec
sbb
jo
sahf
or
add
lahf
mov
mov
cltd
imul
jmp
lea
pushf
out
arpl
cmp
sahf
adc
bound
xchg
mov
movsl
and
xor
xor
std
mov
std
sbb
sbb
or
in
shl
xchg
int3
mov
repz
sub
sahf
inc
add
pop
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
mov
call
ret
jg
jo
repz
mov
push
outsb
inc
outsb
addr16
xor
mov
cmc
fcomps
decb
aas
lcall
pusha
mov
cmpsb
iret
mov
ljmp
and
bound
mov
loopne
xlat
sub
int3
ret
movntps
cwtl
cmp
test
mov
pop
push
mov
adcl
and
mov
xchg
subb
adc
lahf
orl
mov
test
xlat
mov
dec
push
jns
mov
sahf
add
shll
and
jns
shrl
mov
mov
int3
leave
shl
pop
dec
jge
sub
push
pushf
subb
sarl
jge
pop
mov
add
push
and
push
ss
mov
jb
mov
std
jno
ss
xchg
jmp
sbb
shl
xabort
mov
ja
add
sub
mov
jle
mov
loopne
jo
jle
ficoms
insl
mov
push
loop
dec
cmp
sub
mov
packsswb
dec
test
out
arpl
lock
outsl
add
je
imul
cltd
or
loope
nop
add
test
add
lea
mov
jmp
rorl
sbb
imul
mov
jo
cmp
out
jle
insb
and
fiaddl
out
in
pushf
into
jns
fmull
and
bound
hlt
ja
adc
lock
sub
frstor
pop
adc
insl
pop
add
inc
hlt
and
ss
les
add
out
cmp
mov
dec
jne
jae
mov
mov
mov
push
addr16
or
nop
inc
or
pusha
ret
dec
sahf
mov
daa
and
popf
and
sub
dec
loop
pop
push
sahf
les
jmp
aad
cmp
das
mov
or
jae
mov
lret
dec
aad
lret
lret
aaa
mov
aaa
adc
fistpl
cmp
dec
adcl
repz
in
leave
fcomps
lods
fwait
jge
mov
mov
jg
xchg
repnz
mov
icebp
mov
stos
xchg
and
enter
cltd
inc
or
insl
add
ret
pop
mov
aad
inc
cltd
dec
cmp
adc
sub
xor
push
sahf
push
and
scas
lock
push
xor
cmp
test
loope
adc
dec
loopne
fsub
pop
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
jo
pop
adcl
jo
jnp
fwait
adc
cli
push
jns
rolb
sti
in
jecxz
in
fmuls
inc
or
xor
test
js
dec
mov
fwait
int3
into
mov
jbe
jmp
mov
mov
adc
gs
sbb
jno
shrb
mov
sbb
cmp
xor
jecxz
push
lcall
push
or
xorl
mov
sbb
fcompl
pop
cmp
int3
aam
int
test
cmpsl
in
mov
ljmp
xor
sub
mov
and
dec
popf
test
ljmp
xor
pop
pop
imul
xor
push
xor
cwtl
ret
aaa
sbb
cltd
cmpsl
mov
cmp
int
fcomps
xchg
mov
pusha
cmp
push
rorl
nop
repz
cmp
imul
mov
andl
inc
mov
jmp
and
mov
sub
push
cli
call
cmc
pop
sbb
push
lock
mov
push
int3
ret
mov
inc
aaa
icebp
sbb
xchg
jmp
iret
iret
xor
sbbl
nop
jbe
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
je,pt
stos
and
jo
ret
jg
jo
xlat
mov
outsb
hlt
in
fimuls
ss
stos
jae
hlt
cltd
xchg
enter
xor
push
dec
sbb
dec
mov
pop
lret
push
push
add
xchg
add
cmpsl
aam
pop
cld
push
pop
lods
and
pushf
repnz
cmp
subb
aad
lea
cmp
stc
jecxz
nop
scas
cmpsb
cwtl
loopne
repnz
xchg
faddl
jle
push
mov
in
jns
push
pushf
gs
sub
xchg
mov
dec
or
xor
adc
addr16
add
shrb
fnstcw
addr16
es
pop
hlt
or
pop
xlat
or
cmp
inc
cmc
repnz
clc
push
stos
sarb
xchg
mov
dec
inc
mov
outsb
jge,pn
int3
sub
shrl
mov
jge
jno
fisttpll
xor
leave
popf
gs
sbb
push
arpl
push
add
out
cmp
pop
fisttps
adc
xor
sbb
push
mov
out
jne
jmp
mov
mov
in
sti
pop
xchg
cmpsb
add
movsb
enter
cmpsb
add
add
lret
or
add
in
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
loope
push
scas
jo
ret
jg
jo
cltd
mov
pop
adc
sbb
scas
fldl
sbb
cmp
mov
push
and
push
lock
std
mov
xchg
mov
mov
and
adc
pusha
outsb
cltd
inc
iret
mov
xlat
and
push
mov
add
jmp
cmp
mov
sub
jbe
ror
enter
mov
test
jp
fisubs
mov
adc
lds
push
dec
shlb
jl
scas
sahf
data16
adc
mov
dec
mov
loopne
push
into
sti
pushf
imul
jecxz
mov
mov
idiv
adc
pop
divps
mov
and
cltd
mov
dec
aad
cmpsl
bound
or
push
test
xor
loopne
test
mov
push
dec
data16
ret
mov
arpl
jle
or
cmp
xchg
pop
popf
dec
sti
xor
cmp
adc
xor
xchg
jmp
sbb
mov
in
push
iret
xchg
les
mov
jmp
pop
fs
cwtl
fsubl
das
pop
cmp
into
repnz
or
inc
das
pop
test
inc
in
movzwl
jmp
movntps
push
rep
mov
push
jle
fsts
repz
jg
jo
mov
sbb
adc
mov
cmp
xor
or
test
movsl
xchg
in
jmp
fcmovbe
arpl
aam
fmull
dec
push
push
mov
sub
inc
or
sbb
nop
movsl
fmull
jnp
xchg
aas
out
popa
push
xchg
and
dec
pop
lret
dec
push
sbb
cmpsb
ret
icebp
xor
std
xchg
adc
stc
cmp
xor
lcall
roll
mov
ds
or
aam
xor
pop
das
filds
xor
pop
int3
and
sahf
xchg
lods
or
out
jo
incl
or
loope
je
in
mov
xchg
in
data16
and
iret
inc
ret
leave
jae
fidivrs
or
cmp
movsb
cmpsl
mov
fs
pusha
outsl
or
push
cs
jmp
inc
ffree
inc
jb
andb
cmp
add
mov
dec
and
adc
dec
mov
ss
popf
mov
fcompl
push
cld
sbb
loopne
inc
or
scas
jns
popa
and
xlat
dec
pop
test
shlb
inc
lahf
xchg
pop
mov
orl
aad
lahf
int3
adc
add
adc
or
jae
sub
inc
xlat
shrl
cmp
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
pop
jp
or
jg
jo
pop
push
pop
mov
cwtl
cmp
mov
xor
xor
xchg
pop
or
mov
out
sbb
popf
pop
xchg
shl
ljmp
inc
jno
sub
xor
inc
aad
jno
movsl
dec
add
lods
jno
sub
test
xor
add
mov
pop
imul
pop
cmp
pop
gs
sti
outsl
hlt
push
jle
lock
pop
jl
test
pop
xchg
les
mov
pop
imul
push
lea
je
cmp
cmpsb
in
test
scas
icebp
in
mov
sbb
in
fisttps
cli
adc
inc
cld
test
pusha
inc
dec
xchg
fwait
adc
add
out
jo
sbb
pusha
test
iret
dec
lret
adc
decb
mov
dec
int3
fsubrp
aaa
out
adc
flds
scas
out
mov
cmpsl
roll
loopne
mov
fnstsw
inc
dec
pop
nop
cmp
fimull
push
ret
adc
fisttpl
clc
je
mov
xchg
lret
call
jecxz
xchg
mov
inc
outsl
push
mov
ljmp
cmpsb
jmp
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
idivb
shrb
jo
or
enter
mov
sub
adc
mov
add
out
inc
sbb
push
stc
pop
or
adc
xor
lods
cli
lea
adc
shl
cwtl
mov
repnz
dec
or
ss
add
push
scas
push
pop
and
inc
jl
arpl
jae
sub
arpl
xchg
aaa
xchg
sbbb
jp
rorl
ret
and
fisttpll
ds
mov
pop
fwait
repz
cltd
mov
enter
xor
push
pop
rorb
vorps
ja
ljmp
mov
adc
jecxz
or
mov
out
inc
gs
popf
sbb
or
pop
sbb
pop
ljmp
loopne
outsb
and
mov
xchg
push
loop
sti
xor
int
xchg
in
subl
sub
add
cmp
inc
loopne
cmp
cmp
and
lcall
scas
out
testb
push
jnp
add
xchg
fsubs
icebp
fisubs
dec
lret
ja
dec
nop
mov
sub
add
mov
mov
testb
fstpt
and
test
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
adc
jo
ret
jg
jo
inc
mov
dec
pop
fbld
sbb
jno
sbb
lahf
or
pop
xchg
sahf
and
add
out
fucomp
inc
jne
ret
shlb
into
mov
aaa
mov
fsubrs
mov
mov
xchg
pop
ret
icebp
pushf
jne
push
dec
test
xchg
pop
icebp
ljmp
inc
stos
push
jno
rep
pop
rcrl
mov
pop
sbb
scas
or
jae
out
aas
jno
xchg
xor
lea
lahf
mov
cmp
les
int
idivb
dec
add
push
sbb
dec
push
negb
push
mov
jge
test
notl
pop
xchg
divb
xchg
xor
rorb
out
sub
push
gs
leave
out
pop
ds
jno
cmp
lret
mov
push
xor
xchg
pusha
negl
xchg
decb
push
std
mov
sbb
punpckhbw
ds
and
ficompl
sub
cs
mov
pop
fidivrs
xor
dec
xor
jno
pop
out
cld
mov
jg
jo
stc
cmp
add
in
add
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rclb
repnz
jbe
jo
ret
jg
jo
xchg
push
movsb
in
insb
jns
nop
iret
adc
jmp
and
ret
xchg
mov
adc
sbb
mov
notl
mov
adc
fcomps
daa
mov
jb
pop
dec
xor
in
in
ficoml
inc
or
mov
mov
js
xor
nop
sahf
enter
sub
add
sbb
mov
stc
xchg
je
jno
add
mov
lods
mov
jecxz
ret
sub
js
jmp
mov
and
popf
insb
clc
mov
scas
out
jp
cltd
das
xor
pop
mov
or
cld
loopne
daa
add
movsl
in
adc
loope,pn
les
push
inc
fwait
jmp
sub
push
ds
insl
nop
mov
shr
xchg
mull
out
add
test
pop
fildll
scas
test
pop
fstpt
or
aam
arpl
jg
icebp
into
inc
negb
movhps
stos
mov
shll
jge
xor
and
add
mov
jb
sub
cs
inc
inc
mov
jbe
jle
lret
aas
fistl
iret
mov
jmp
inc
gs
icebp
imul
adc
mov
jo
jg
jo
cld
xor
mov
mov
adc
out
pop
out
mov
dec
mov
push
or
aam
popf
addr16
testb
cmc
dec
stos
push
cwtl
rolb
inc
repnz
sub
or
mov
fildll
int
mov
mov
jge
roll
mov
mov
jg
ss
daa
in
test
jg
cmp
or
fsubs
and
lret
ds
push
push
das
mov
jbe
jo
cmp
aad
addb
fnstenv
imul
fsts
mov
xchg
xor
out
xchg
ja
cmp
stos
mov
leave
push
ja
mov
add
xor
push
pop
add
and
in
test
and
test
push
or
test
out
jne
xchg
adc
loop
and
imul
or
xchg
rcr
dec
jo
mov
inc
and
dec
fisubs
outsl
mov
iret
add
je
les
mov
roll
clc
pop
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
fwait
add
mov
jo
ds
xchg
jg
leave
mov
push
push
daa
int3
jb
in
mov
insl
xor
das
test
mov
dec
dec
inc
sub
mov
pop
flds
lret
int3
shll
adc
cmp
pop
aaa
arpl
fdivl
inc
or
adc
xchg
xor
enter
outsl
daa
mov
inc
cld
adc
dec
push
fwait
rorl
cwtl
jo
mov
aas
mov
fisubrl
ljmp
repnz
mov
cmpb
mov
adc
mov
std
push
inc
xchg
jo
ds
int3
mov
jb
cli
sub
xchg
gs
mov
push
cmp
mov
lock
sahf
popf
jmp
aad
jecxz
lret
jno
rcr
adc
push
jecxz
adc
push
jecxz
lods
lds
pop
pop
negl
jae
cmc
push
scas
shrb
mov
cmp
push
lods
sub
outsl
push
das
mov
flds
out
loopne
mov
xor
pop
iret
mov
ds
es
cltd
sahf
outsb
loopne
pushl
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
inc
ja
mov
jo
jge
jo
sbb
xchg
jnp
movsb
fbstp
pop
lock
pop
lahf
test
fidivl
push
xor
push
mov
push
data16
mov
fisubs
xor
xor
insb
repnz
push
in
rorb
cmp
pop
shll
in
jae
xor
xchg
out
scas
add
test
movsb
cwtl
mov
mov
adc
sbb
cmp
push
mov
imul
pop
fists
inc
add
pop
in
test
shl
dec
fsubs
mov
flds
jne
push
outsb
jbe
inc
ror
mov
sub
jae
jg
xor
popa
push
sahf
push
sub
mov
cmpl
andl
add
xor
push
push
arpl
mov
mov
cmp
lods
inc
adc
rcll
aam
stc
mov
leave
push
hlt
inc
inc
xchg
aad
sahf
lods
popa
leave
jmp
inc
sub
lahf
add
xor
sub
hlt
out
add
add
sbb
inc
data16
dec
daa
xchg
or
nop
cmp
inc
dec
xchg
sbb
popa
mov
call
imul
xchg
loope
shr
test
imul
push
inc
cmp
push
dec
lods
xchg
out
shl
setg
inc
jg
orb
lods
cmp
push
gs
outsb
push
pushf
mov
xor
xchg
mov
dec
jne
inc
lods
fisubrl
loopne
inc
jmp
ss
or
mov
mov
inc
push
insb
inc
xchg
lods
cmp
xchg
mov
mov
les
fstpl
lods
push
arpl
lret
rsqrtps
dec
cwtd
fistl
jp
subl
test
roll
and
popa
leave
sub
pushf
and
sub
lods
es
inc
fcompl
jae
push
out
mov
leave
push
or
fnstsw
sbb
int
pop
icebp
out
jnp
fwait
mov
adc
sbb
xchg
or
dec
pop
jecxz
fidivrs
fildll
jmp
xchg
and
subb
sbb
leave
sbb
and
jmp
lret
les
sarb
pushf
xor
add
mov
ret
negl
pop
adc
and
in
lock
push
or
arpl
push
add
sti
mov
sbb
test
xchg
push
in
sub
adc
sbb
jg
pop
cmp
jo
ja
cltd
jo
dec
xchg
mov
dec
es
fisubrl
aaa
icebp
cmp
shrl
mov
or
imul
pop
enter
cmp
push
cmp
sti
adc
dec
jecxz
int3
std
pushl
sub
movsb
loop
xor
mov
add
sbb
xchg
ret
fwait
popf
test
cwtl
pop
mov
bound
js
arpl
jmp
leave
jmp
sbb
dec
aam
xorl
nop
mov
mov
adcl
fists
or
lret
test
or
mov
cmc
mov
out
shrb
imul
scas
adc
jns
xchg
jbe
fs
mov
loopne
sub
jg
repz
call
or
imul
dec
imul
add
mov
or
mov
rol
test
movsb
xor
push
leave
jge
fscale
jmp
iret
pop
sub
push
negl
jmp
mov
cli
xor
testb
stc
dec
loop
mov
jo
jge
jo
scas
adc
fisubrl
jb
bound
ljmp
addb
mov
lods
inc
ljmp
jecxz
lret
movsb
sub
popa
mov
imull
cli
movsb
pop
mov
iret
dec
lahf
push
adc
aam
aam
push
jae
mov
int3
mov
dec
xchg
popf
push
dec
inc
pushf
call
pop
add
jge
xchg
xor
aad
adc
call
mov
stc
test
pop
cmp
in
dec
add
mov
mov
aad
jge
clc
stos
mov
sub
or
mov
lret
or
popa
scas
add
or
addr16
jle
lret
in
arpl
sbb
fidivs
pushf
xchg
xchg
jne
std
jp
inc
mov
xchg
xor
mov
sbb
mov
mov
mov
ljmp
lret
mov
push
adc
popf
mov
xor
push
push
add
or
movsb
mov
out
fisubl
stos
pop
sub
sbb
xchg
les
sahf
lea
dec
mov
adcl
test
mov
mov
xchg
loopne
leave
mov
je
fdivs
mov
jbe
lock
push
cmpsl
popa
cmpsl
mov
dec
or
inc
cmp
stos
lods
xchg
and
loope
mov
xor
push
out
out
ret
sbb
in
into
inc
stos
mov
fadd
in
cmpsl
aad
lock
pop
inc
adc
iret
or
andb
xchg
jge
out
push
mov
enter
mov
shrl
dec
mov
push
or
fadd
jmp
stos
mov
xor
ficompl
into
aam
dec
push
sti
mov
jl
cwtl
push
pusha
mov
jecxz
test
out
pop
mull
popl
or
xchg
adc
or
cmp
pusha
leave
jae
and
ss
add
movsl
js
xor
outsb
inc
fstpl
sbb
jmp
pop
insl
xor
leave
loope
loope
pushf
mov
pop
lds
or
lcall
jnp
xor
mov
lock
mov
cmp
mov
xor
ret
shlb
aas
mov
and
ljmp
push
sbb
ss
aam
mov
out
mov
dec
mov
inc
xor
aam
sbb
cmp
fildl
addl
ja
movsl
mov
nop
popf
fisttpll
scas
pop
cmpsl
sub
pop
pop
jl
sbbb
adc
sti
jp
pushf
mov
lret
push
idivb
add
lods
jmp
and
and
dec
xchg
into
xor
scas
cmp
lret
or
in
mov
add
jbe
and
xchg
xchg
dec
and
sti
and
jo
repz
outsb
addr16
cltd
stc
or
int3
add
int3
mov
mov
fwait
addb
xchg
cmc
sbb
outsb
add
jne
push
cmp
rolb
xchg
inc
lds
inc
mov
js
jns
pop
dec
dec
into
push
sub
insb
pop
push
xor
xor
or
push
jnp
fimull
push
push
mov
pop
mov
or
sbb
cmc
nop
fimull
push
insl
movl
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
je
in
repz
jge
jo
pushf
roll
fcompl
pushf
out
push
dec
repz
mov
push
cmp
sbb
jg
enter
into
popa
cmpsl
stos
insb
sbbl
fldt
push
cmp
push
ficompl
xor
ja
cmpsb
cwtl
aaa
aas
lahf
outsl
adc
jmp
pushf
ljmp
cli
xor
xchg
jl
lcall
sub
pop
mov
aas
xchg
daa
iret
nop
cmpb
adc
fisttps
leave
enter
in
adc
adc
mov
mov
enter
pop
sub
lcall
ljmp
js
popa
mov
adc
pop
std
mov
push
test
adc
sbb
fistl
jmp
scas
shlb
inc
fimull
jne
int3
push
movsl
inc
pusha
mov
nop
mulb
mov
aas
xchg
mov
pusha
mov
movsb
jns
dec
outsb
push
lret
push
mov
pushf
sbb
adc
cs
roll
in
mov
sbb
push
rcrl
mov
add
mov
outsl
in
adc
jbe
pop
insb
mov
inc
das
inc
or
in
sbb
int3
jmp
mov
aam
jge
js
inc
movsl
iret
maskmovq
idivl
jno
sbb
xchg
lods
jbe
add
jae
in
xchg
jge
nop
xchg
and
es
and
andb
lahf
in
adc
hlt
mov
mov
push
inc
inc
pop
pop
sbb
int3
xor
nop
lcall
cmp
fdivrp
stc
aad
and
rorl
call
repnz
jp
mov
in
and
mov
and
bound
int3
add
lea
mov
out
pop
mov
or
sub
insb
iret
jecxz
sti
mov
insb
nop
add
dec
fistps
stos
sub
fstpl
cmp
pop
push
shl
cmpsb
gs
inc
dec
test
loopne
dec
out
icebp
cmp
icebp
arpl
cli
imul
mov
pop
pop
jmp
adc
cmpsl
or
loop
cmc
movsb
or
mov
or
push
cltd
push
shlb
sub
push
xlat
popa
or
std
xor
pusha
repz
xlat
in
dec
lods
inc
sti
aaa
sub
push
sub
std
dec
sub
cs
js
cltd
adc
push
xor
sbb
fdivrl
mov
jmp
sbb
fdivl
lcall
mov
call
int3
ja
xor
or
jcxz
das
cld
jmp
pop
sbb
push
in
jae
fisubs
sub
fisubrl
or
rcll
and
xor
gs
sub
test
cmpsl
imul
dec
xchg
sub
lret
sbbb
popa
loope
mov
jge
mov
andl
fwait
xchg
in
sbb
in
push
inc
int3
mov
fstpt
ss
call
or
movsb
loop
jae
push
movsb
shll
add
data16
cwtl
and
sub
xor
mov
ret
pop
mov
test
rorl
arpl
ja
dec
or
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
mov
popa
push
xorl
test
sub
outsb
negl
adc
mov
mov
jmp
orb
ret
and
inc
cmpsl
addl
in
out
cmc
dec
mov
sub
add
cld
pop
movsb
dec
adc
cmp
xor
test
cmp
mov
jl
aas
movsl
daa
arpl
adc
jmp
push
mov
ficompl
movsb
inc
loopne
sub
mov
xchg
in
dec
jns
cmp
push
cmpsl
jo
sbb
stos
sahf
or
add
inc
pop
and
mov
push
lods
cld
or
mov
push
scas
lahf
mov
sbb
pop
and
lret
jle
jmp
fldl
inc
popl
cmp
repnz
add
in
subb
lahf
lret
inc
pop
cwtl
popa
jo
shll
jo
push
fstl
push
xor
negl
push
mov
mov
dec
push
divb
mov
test
pop
mov
dec
cmc
cltd
push
mov
sbb
call
inc
mov
test
dec
push
mov
mov
fmull
mov
pop
add
in
insb
in
or
dec
iret
push
in
jmp
pop
add
ret
das
mov
call
jne
divb
push
pop
sbb
dec
int
adc
imul
out
iret
outsl
push
adc
mov
shll
clc
loop
hlt
dec
ficompl
loopne
notl
cli
sbb
push
pop
pushf
dec
in
dec
pop
adc
push
cmp
mov
adc
ljmp
cmc
and
into
aaa
lret
xor
js
and
adc
adc
adc
pop
inc
and
inc
dec
call
int
mov
xchg
xchg
movsb
push
jno
pusha
jg
imul
out
nop
leave
pop
sti
adc
mov
mov
pop
fdiv
outsb
cli
aas
jmp
aas
ss
mov
xor
or
cmpb
dec
lahf
inc
sub
or
cltd
xchg
cmp
pop
xchg
push
jle
sbb
aam
jle
sub
test
pop
fsubrp
lahf
adc
aaa
xor
ja
xlat
pand
mov
jl
pop
mov
cmpsb
jbe
cli
push
lods
pop
mov
xor
test
stos
insb
cmpsb
xchg
hlt
mov
push
in
sbb
ss
iret
and
jo
xor
xor
shll
push
aas
push
je
push
add
pop
fldenv
xchg
jo
push
jecxz
mov
and
push
add
pop
add
pop
push
dec
cmp
int3
lret
outsb
shrb
fsts
xorb
sbb
inc
xchg
adc
lahf
jne
mov
mov
and
mov
pop
cmpl
je
lahf
sub
shl
push
sub
les
dec
cmpsl
add
jl
repnz
lcall
inc
jmp
popf
mov
bound
lods
push
aaa
insl
dec
sub
fsubrl
pushw
ljmp
stos
stos
and
pop
jge
mov
xchg
mov
and
pop
inc
hlt
rclb
lock
and
outsb
mov
xlat
imull
mov
cmp
mov
orl
das
add
mov
add
jmp
outsl
mov
or
imul
rol
add
jge
jo
enter
nop
inc
insl
add
pop
out
dec
ror
add
cli
mov
push
test
repnz
sbb
sub
das
jge
in
sub
push
xor
imulb
mov
xchg
sbb
test
daa
push
mov
inc
mov
pusha
leave
cmp
in
mov
sub
xor
sbb
fdivr
ss
jae
and
aaa
mov
dec
sbb
int
adc
stos
pop
fiadds
mov
stc
xchg
sub
outsb
pop
jge
icebp
lret
xchg
cmp
ret
faddp
push
jae
insb
dec
fwait
and
cld
ja
aas
ss
loope
mov
or
sbb
mov
lret
mulb
jmp
fdivrl
adc
cmp
xor
lea
dec
lret
mov
xor
cmp
push
popa
adc
call
fidivs
gs
jae
push
mov
mov
ss
fstpt
add
jbe
cli
in
push
xchg
xchg
push
gs
andb
aaa
cmp
lods
cmp
cs
sub
and
dec
sub
inc
and
leave
xchg
out
fstl
xor
mov
lret
test
lods
jp
jne
pop
leave
rcrb
fnsave
add
aam
outsb
aaa
repnz
push
ljmp
jns
add
loop
mov
sahf
je
js
xchg
stc
aad
push
mov
mov
jl
scas
xor
xchg
pop
jp
xchg
inc
jbe
and
push
jo
push
mov
jmp
fistpl
adc
dec
aad
xchg
xchg
adc
hlt
fs
mov
ret
jecxz
clc
sbb
or
pusha
sarb
add
cmp
sub
xchg
adc
jp
int
ss
pop
cs
dec
sahf
lahf
addr16
cmp
xor
ja
mov
push
push
mov
sti
es
xchg
pop
and
push
and
add
push
mov
cmp
sbb
jns
je
ror
fdivrs
pop
xchg
js
cmp
cmp
add
and
dec
sti
push
adc
out
cmp
xor
mov
xor
imul
add
and
psubq
lret
movsl
fisubl
xor
xor
divl
cmp
mov
leave
pop
pop
psadbw
jbe
pop
gs
jp
sub
mov
mov
adc
xchg
xor
add
sbb
fiaddl
ja
lret
mov
popa
jle
xchg
orl
jg
push
add
repnz
dec
testb
jb
jp
rorl
push
daa
aam
mov
dec
push
mov
mov
lcall
int3
mov
push
mov
daa
cmpsl
and
sub
xor
stos
sbb
insl
iret
stc
iret
and
cmpsb
mov
fsubrs
push
arpl
sbb
adc
cmpsb
cmpsl
scas
dec
push
sbb
sub
push
dec
pop
push
jl
mov
inc
pop
data16
fs
push
dec
ret
clc
test
cmp
stc
int
xchg
movsl
cmp
jne
mov
scas
lahf
inc
cmpsb
je
mov
repnz
or
addr16
cmc
jp
jb
cltd
dec
cld
and
pop
movsl
bound
daa
ret
push
pop
in
imul
xchg
xor
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
jo
jge
jo
xor
fldcw
dec
cmp
push
js
jp
jne
int
lahf
into
dec
in
cmp
dec
add
gs
aam
sahf
loopne
nop
idivb
aam
sub
push
dec
cltd
sbb
push
ss
jle
pop
ret
fs
jle
into
dec
sti
mov
mov
push
inc
inc
jno
int
pop
ret
xchg
dec
outsb
cmp
fsubr
inc
aam
push
enter
pushf
mov
mov
outsb
or
xchg
jecxz
loopne
repz
or
in
xlat
xor
jecxz
mov
ficoml
push
fdivs
loop
popa
and
sub
push
inc
mov
jbe
inc
int
pop
push
pop
mov
sahf
icebp
fcmovu
jae
dec
xchg
push
xor
in
in
add
sbb
mov
dec
int3
add
std
lods
hlt
jo
ret
inc
add
inc
sbb
mov
ficoml
sub
roll
add
imul
pop
cmp
adc
daa
andl
int3
das
or
incl
jecxz
push
pop
data16
mov
movb
fs
xor
ret
cwtl
jmp
daa
pushf
xlat
xor
jl
data16
and
cwtl
jle
mov
fnstsw
je
aam
pop
pop
jp,pn
sub
xchg
sub
push
mov
roll
repnz
sti
jnp
adc
or
test
jmp
push
pushf
movb
sub
in
scas
loopne
mov
jns
call
test
loop
dec
lods
mov
fimuls
mov
and
lret
testb
push
cmp
mov
inc
push
lods
movsl
ret
adc
add
dec
pop
mov
adc
mov
mov
or
lcall
lock
enter
test
mov
mov
mov
aad
cmp
push
lds
testl
addr16
out
add
xlat
push
and
xlat
outsb
cmc
in
xor
pushf
pop
mov
inc
sarb
jl
lcall
xor
repnz
je
bound
adc
dec
gs
mov
xlat
pop
orl
inc
lods
in
add
xor
lds
lods
xor
push
loop
cmp
xorb
sti
mov
roll
lcall
or
in
xchg
xchg
push
cmpsb
lods
sbb
in
shll
xor
gs
cmp
add
adc
movsb
call
int
push
xchg
sbb
adc
cs
mov
xchg
out
sbb
shlb
lea
mov
jnp
jmp
shlb
test
adc
pop
popa
pushf
jmp
and
ror
push
fwait
and
pop
ds
or
mov
mov
test
push
dec
pop
mov
call
test
addr16
pop
icebp
loopne
rolb
pop
mov
adc
mov
call
cmp
or
jl
cmc
cmpsl
sub
mov
outsb
push
xchg
or
pop
cmp
dec
out
sbb
fldl
or
push
movsb
or
in
repnz
ret
dec
add
fistpl
sbb
mov
jo
ljmp
testb
ficomps
sub
insb
out
lret
dec
mov
xor
sbb
push
mov
sub
mov
xor
daa
call
fs
add
pop
rol
push
pop
lods
data16
sub
js
mov
dec
xor
int3
shrb
or
inc
mov
cld
les
dec
push
lods
xchg
jae
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
push
xchg
inc
cmpsb
mov
sbb
or
lret
pop
cmp
push
push
jo
sub
xor
and
dec
sbb
xor
ret
mov
xor
push
xchg
fistl
push
aad
mov
pop
lods
bnd
xchg
stos
frstor
and
jmp
or
scas
test
sbb
xchg
jecxz
mov
sub
ja
and
add
xchg
jge
dec
push
out
jnp
imul
adc
add
mov
test
mov
jns
jb
bound
testl
mov
sbb
out
out
xchg
mov
inc
inc
paddd
leave
movsb
jns
jmp
popa
xor
fsubs
xlat
pop
xchg
pop
mov
adc
inc
hlt
data16
cwtl
mov
sub
outsl
clc
cmp
push
inc
sbb
xchg
adc
xchg
cmp
icebp
mov
imul
aad
mov
repz
pop
and
xor
push
jmp
mov
xor
push
dec
testl
arpl
mov
sti
dec
adc
sub
negb
mov
pop
dec
jecxz
aaa
mov
jns
xchg
pop
cmc
shll
out
in
adc
imul
push
mov
mov
sbb
outsb
outsb
imul
jge
loope
inc
test
mov
sbb
jne
sbb
rcl
fisubrs
xchg
and
dec
addr16
aam
mov
sub
shll
into
aaa
std
xchg
fimull
xlat
mov
xchg
mov
push
enter
inc
xor
out
xchg
cmp
push
mov
call
movsb
sub
stc
psubsw
fcoms
fisttps
daa
push
lods
lret
lock
push
pop
cmp
std
hlt
test
imul
cmp
js
add
dec
enter
dec
faddp
arpl
js
jo
cmpsl
mov
add
lahf
call
adc
push
stos
inc
ja
gs
out
in
jne
add
add
lahf
jl
cli
lret
pop
rorb
idiv
mov
fadds
ret
aam
lods
in
fsubrs
push
xchg
inc
mov
push
test
adc
or
mov
enter
scas
cmp
orl
icebp
xor
fisttps
ret
push
jg
dec
frstor
xchg
mov
adc
and
lods
jo
jmp
outsb
scas
jno
mov
sti
xchg
cmc
push
mov
repz
and
fsubs
cmp
push
aad
mov
bnd
es
cmpsl
push
arpl
and
ret
adc
push
mov
loope
xor
out
dec
stc
ss
pusha
in
cwtl
sbb
or
mov
jge
das
scas
pop
incb
sub
dec
lods
push
inc
hlt
mov
out
lods
cmp
cmp
push
xor
mov
pop
add
push
jmp
sbb
xchg
in
mov
push
andb
pop
pop
pop
in
and
loope
js
sub
push
rclb
add
test
xlat
or
lret
push
fs
cmp
psrad
scas
xchg
repz
push
sbb
mov
xor
xor
push
mov
pushf
das
mov
into
jmp
sahf
add
jnp
movsl
pop
cld
dec
add
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
sub
dec
jo
pop
jge
jo
outsb
pop
mov
les
inc
outsb
mov
push
xchg
loop
cmpsl
cltd
imul
scas
sbb
or
push
sbb
mov
mov
adc
dec
sbb
fimull
sub
std
shlb
std
xor
rcll
shl
sub
xor
xchg
cld
xor
xchg
cmc
into
mov
xchg
mov
adc
xchg
jecxz
sti
popf
push
clc
scas
xor
mov
stos
jo
fidivl
inc
pop
loopne
sbb
mov
jns,pt
push
xlat
push
push
sub
in
mov
ret
or
inc
fimull
cmp
mov
lock
pop
sahf
dec
data16
xchg
addr16
or
lds
rol
je
add
andl
call
shll
pop
in
loope
rol
mov
xchg
cli
outsb
push
mov
jp
lret
cmp
adcl
les
push
je
int
clc
out
add
cmp
iret
cmp
pop
test
arpl
or
push
mov
jg
negl
nop
fldenv
mov
sbb
shll
adc
enter
fidivs
sbb
jbe
push
mov
push
stos
add
mov
adc
adc
push
fstl
filds
movsb
or
jp
pop
mov
iret
pop
and
imul
and
fmuls
cs
mov
mov
add
adc
inc
or
mov
daa
nop
decb
loopne
out
add
stos
add
push
jb
pop
fmul
jne
aam
outsb
scas
dec
addr16
pop
std
or
sub
mov
sub
add
pop
test
nop
ljmp
sbb
mov
add
cli
shlb
inc
ret
ror
and
cmpsb
push
orb
iret
or
sbb
sbb
jb
ret
and
dec
sbb
movsl
mov
cmc
adc
and
mov
leave
xchg
adcl
pop
movsl
fisttpll
nop
aad
les
jns
add
imul
push
push
and
loope
sbb
mov
sub
aas
sub
call
mov
test
and
aaa
sub
mov
inc
bound
test
jmp
aas
mov
lock
out
cld
jg
mov
jo
aas
add
sbb
jno
or
pop
xchg
xchg
dec
cmp
popf
fcmovu
pop
nop
mov
call
shrl
andl
xor
sbb
sub
or
jne
js
push
add
into
mov
dec
pusha
sub
and
pop
icebp
lret
xchg
mov
mov
mov
pop
adc
arpl
repnz
popf
in
sub
or
mov
inc
pop
cli
pushf
test
mov
mov
fidivrs
push
and
xor
xchg
mov
pushf
sbb
mov
out
out
sbb
lds
bound
into
mov
cmp
push
push
ret
das
fbstp
pop
clc
lret
sbb
outsl
cs
mov
mov
in
jb
adc
cmc
xchg
cs
pminub
xchg
adc
fsubr
gs
sbb
out
lock
lods
in
inc
or
jecxz
jl
outsb
loopne
pusha
mov
add
push
int3
sbb
cmc
cmp
out
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
dec
jbe
jo
pop
jge
jo
nop
xor
or
jmp
push
pop
add
lcall
adc
icebp
adcb
sbb
xor
js
push
mov
test
je
sub
insb
adc
dec
loopne
mov
fwait
lock
push
lcall
aam
lcall
adc
adc
sahf
out
cs
or
sbb
dec
mov
mov
fs
add
data16
pop
add
in
push
push
mov
push
leave
adc
movsl
sub
adcl
push
ja
mov
mov
xchg
popa
xchg
ffreep
iret
adc
daa
insb
sbb
fsubs
jo
pop
or
daa
push
xor
loopne
repz
je
outsl
movsl
inc
nop
cli
mov
mov
ja
mov
or
jbe
outsb
out
xchg
jbe
out
add
push
pop
mov
stc
out
xchg
gs
outsl
fstps
jo
xchg
lods
js
and
decb
xlat
pushf
xor
xor
adc
push
jp
sub
iret
movsl
mov
loope
adc
cmovbe
sub
add
out
mov
inc
add
test
mov
lds
pushf
insl
or
mov
orb
sub
hlt
lock
testl
mov
fsubrp
dec
jo
pop
les
sbb
sub
push
jl
imul
popa
push
or
js
xchg
das
repz
adc
mov
mov
dec
int3
or
bnd
mov
sbb
leave
add
ret
lcall
lock
icebp
sbb
mov
mov
sub
sahf
jmp
push
out
sbb
fwait
xlat
push
jo
call
jb
adc
loopne
push
cmp
inc
cmpsb
pop
pop
jnp
out
xchg
jno,pn
cmp
cmpsl
cmpsb
int
mov
jecxz
pop
xor
cmpl
push
inc
jo
pop
cwtl
and
sbb
push
std
xor
mov
loope
mov
dec
or
add
testl
lds
sub
lsl
jl
lret
push
scas
push
test
stc
lret
adcb
jg
stos
daa
icebp
mov
or
pop
sub
pop
xchg
cmp
mov
pop
ja
add
fbld
adc
insb
push
in
xchg
or
xchg
push
or
jnp
clc
push
cmp
das
pushf
push
imul
inc
into
inc
jge
ljmp
enter
cmpsl
test
fdivs
in
mov
sub
push
call
mov
pop
popf
mov
mov
sbb
mov
imul
out
jle
sub
mov
outsl
les
fistpl
pop
inc
add
adc
inc
loope
lret
xchg
xor
inc
jns
shlb
mov
sbb
lods
pop
xchg
pop
roll
outsl
fwait
dec
nop
add
gs
add
add
mov
je
xchg
and
ljmp
pop
arpl
ds
loope
cmpsb
sbb
cmp
dec
pop
enter
ficoms
jns
imul
cmp
lahf
mov
das
sbb
xorb
pop
fcomip
flds
sub
aam
push
sub
dec
sub
cmp
scas
insb
shlb
ficoml
lods
stc
fwait
iret
xchg
repnz
mov
inc
jecxz
insl
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
lahf
pop
push
jo
pop
jge
jo
xor
inc
mov
sub
negb
enter
mov
and
mov
add
and
inc
enter
testl
call
sub
add
xchg
adc
daa
sub
push
popf
es
rorb
outsb
test
shlb
cltd
mov
pop
fwait
lods
sbb
iret
lcall
test
mov
ljmp
lds
xchg
jae
pop
leave
psubusb
aad
inc
sub
in
push
shr
sub
ja
push
bound
test
pop
jb
ret
sub
call
lods
add
lret
test
sbb
xor
xchg
mov
jne
xchg
xlat
xchg
rorb
stos
mov
loop
mov
out
stc
jle
jae
push
inc
mov
xlat
mov
pop
add
jnp
jbe
lret
sti
dec
sub
xchg
sarl
rcrb
jo
das
inc
or
mov
cmp
sbb
ret
gs
and
cmpl
add
adc
xor
imul
push
inc
dec
jb
add
popa
mov
rorl
xchg
loope
cmpsb
dec
cwtl
jmp
std
cmp
out
dec
mov
push
idivl
loope
sub
unpcklps
fs
ljmp
dec
jne
mov
fidivrs
outsb
pusha
lods
pusha
xchg
xchg
int3
outsb
mov
iret
sbb
xor
or
cmp
movsb
fwait
out
div
xchg
xor
sbb
pop
ss
adc
int
push
pop
xchg
aam
test
and
xor
or
mov
inc
cmp
test
inc
cmpsl
jns
repz
mov
dec
cld
cmpsb
inc
imul
les
pop
dec
sbb
lds
mov
dec
test
cltd
pop
stos
loopne
sbb
mov
gs
sbb
lods
push
cwtl
jne
cli
jne
or
out
cmpsl
fwait
orb
cmp
jbe
sbb
jle
outsl
mov
mov
fdivs
imul
sarl
add
pop
dec
jb
aam
mov
and
inc
xor
jae
cld
js
add
jno
sbb
dec
mov
jg
sub
cmp
cmp
cmp
sbb
repnz
cmp
push
dec
dec
push
pushl
rorl
push
add
out
mov
inc
inc
lods
dec
dec
push
xchg
jb
orb
sbb
mov
dec
mov
mov
lock
cwtl
aaa
jmp
loopne
push
pusha
push
aas
mov
push
push
test
stos
mov
cmp
inc
dec
inc
sub
icebp
das
push
lret
fldt
int3
sub
mov
mov
dec
adc
lcall
ljmp
std
lods
jae
insb
mov
pusha
addr16
adc
cltd
mov
shrl
sub
cmpsl
pop
outsb
fidivrs
inc
xor
mov
imul
sti
aam
bound
mov
arpl
nop
nop
movsb
adc
mov
inc
rclb
fs
pop
mov
insb
das
push
and
test
aas
mov
xchg
inc
dec
cs
pop
cmpl
add
popa
test
lods
rcr
jb
adc
xchg
mov
jmp
push
js
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
in
test
jo
mov
pushf
cmp
imul
test
into
outsb
push
int3
mov
ret
pop
sti
and
pop
fdivr
inc
pop
mov
jb
loopne
sub
clc
inc
mov
lret
adcl
cmp
aas
aad
movsb
xchg
mul
inc
movsl
xchg
pop
das
adc
ljmp
popf
into
jne
in
adc
mov
mov
in
lods
mov
mov
out
lahf
xchg
push
xchg
movb
and
dec
scas
mov
cmp
mov
int3
or
pop
add
mov
push
aam
push
popf
sub
sbb
out
insl
inc
repnz
add
jne
mov
mov
lods
out
cld
out
xchg
in
sbb
inc
pop
add
sbb
rcrb
aas
mov
inc
loop
fcomip
int3
loope
add
push
imul
loopne
jl
inc
pop
stc
insb
insb
mov
call
jae
push
dec
cltd
in
fimuls
lods
mov
inc
mov
mov
mov
or
aad
mov
pusha
jge
std
xchg
aad
fadds
add
xchg
je
jl
cmp
mov
push
subb
out
mov
or
iret
imul
loope,pn
mov
jns
cwtl
je
jg
or
int
insl
lods
scas
mov
cwtl
push
xchg
cli
xchg
pushf
mov
adc
sahf
or
fwait
les
sti
pop
lds
inc
add
test
adc
std
mov
adc
popf
pop
out
add
mov
mov
idiv
dec
jne
xorl
leave
cmp
das
pusha
sub
mov
push
xor
popa
es
ss
pop
jnp
repz
hlt
sub
lret
arpl
push
xchg
sub
pop
arpl
in
ret
vandps
pushf
mov
mov
add
loope
aas
or
or
xchg
sti
arpl
xchg
aam
xchg
loop
mov
mov
shlb
mov
sbb
int
jecxz
xlat
ss
std
sub
pop
xor
sbb
and
out
fstps
sub
xor
mov
in
xor
or
sbb
into
push
add
cmpsb
mov
shll
and
xchg
adc
movsb
mov
lods
adc
divl
xchg
sbb
push
jb
dec
push
lahf
xor
push
in
bound
int3
inc
call
icebp
mov
popa
daa
sub
outsl
inc
adc
call
sub
test
clc
hlt
push
fisttps
les
and
add
jnp
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
mov
jo
mov
mov
xchg
fidivrs
inc
mov
stc
push
adc
push
leave
std
mov
mov
enter
aam
fcomps
mov
or
in
out
inc
repnz
test
test
dec
and
loope
inc
dec
xchg
bound
push
sarb
mov
in
mov
les
and
fs
inc
mul
add
pop
lret
shrl
testb
jbe
fwait
cmp
mov
inc
aas
sti
xor
imul
inc
fmull
scas
xor
xchg
and
push
sbb
mov
add
xor
lahf
pop
mov
pop
mov
cmp
mov
jb
inc
sbb
mov
adc
cld
inc
push
mov
mov
es
pop
jp
out
pop
int3
jns
sbb
xchg
mov
inc
xchg
lods
int3
rcrb
inc
rcll
mov
or
fnsave
mov
mov
dec
xchg
add
pop
inc
pop
and
enter
mov
das
sbb
cld
mov
mov
sub
fstpt
mov
xorb
sub
jle
pop
insl
lods
mov
jns
push
mov
xchg
mov
cmp
fsubl
jl
pushf
stos
mov
dec
shlb
mov
mov
mov
nop
dec
ja
sbb
jg
xchg
stc
mov
int3
test
enter
das
mov
sarb
cmp
aam
jbe
popf
sub
or
xcrypt-ecb
cmpsl
or
sub
mov
or
cmp
lret
jecxz
mov
mov
into
push
dec
jne
rcrl
sub
add
xchg
push
xchg
mov
inc
out
xor
push
lods
lods
in
neg
adc
cld
inc
outsl
icebp
push
cli
pop
es
cltd
xchg
pop
je
lods
roll
mov
adc
and
add
and
jne
push
pop
add
sbb
popa
jno
xchg
xor
fdivs
lahf
ljmp
adc
pop
clc
xchg
xor
outsb
ficoml
sub
cs
xor
fstpt
add
jmp
insb
pop
push
mov
rcrl
ljmp
xor
fstps
or
popa
mov
das
jnp
test
cmc
xor
jge
addb
mov
jns
lahf
pop
sub
mov
lock
fwait
leave
jmp
cmp
daa
adc
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
lret
enter
mov
cmp
mov
mov
fsubp
sbb
push
fwait
pop
push
dec
popa
jge
dec
xor
push
cs
hlt
movsb
inc
fildl
fistpll
adc
ss
adc
int
test
movsb
or
push
mov
cmpb
push
xor
loope
mov
test
popf
dec
test
enter
xorb
outsl
or
sub
aas
cmp
mov
xor
mov
cli
push
ss
sbb
test
ret
rolb
outsl
xchg
outsl
popf
test
lahf
inc
insl
dec
popa
les
add
jno
loopne
sbb
cmp
loop
je
lret
mov
lret
fs
cwtl
pop
push
sahf
dec
mov
or
jo
inc
mov
loope
mov
std
sbb
dec
xor
pop
andl
fstps
cmp
add
lcall
adc
mov
lea
leave
inc
shr
roll
inc
int
mov
fidivl
xchg
nop
jg
outsb
push
inc
adc
into
add
sbb
xchg
mov
lods
xchg
gs
xor
mov
or
adc
outsb
ja
sar
or
mov
subb
out
jle
shlb
pop
aas
std
mov
cld
dec
push
pop
adc
test
mov
lret
out
pop
movsb
sbb
sbb
mov
xchg
dec
push
mov
jnp
mov
pminsw
fiadds
sub
xchg
adc
shlb
xchg
cmp
mov
stc
inc
sub
xchg
sbb
mov
or
mov
xchg
into
pushf
xor
jb
pop
in
mov
xchg
cmp
rcl
cmp
xchg
push
push
fcomps
push
imul
js
insl
sbb
inc
mov
lea
outsl
mov
jle
divl
adc
fcoms
adc
sub
imul
jecxz
outsb
jge
push
movsb
aad
sub
das
push
cmpsl
insb
adc
mov
xchg
dec
fsubrs
xchg
sarb
mov
out
daa
and
shll
xchg
leave
xchg
incb
adc
les
jp
fstpt
pusha
popa
and
and
aaa
rcll
or
or
gs
fisubl
inc
jnp
movsb
fdivr
outsl
dec
or
inc
pop
hlt
and
icebp
jb
jae
shll
xchg
pusha
lock
repz
inc
and
iret
push
cmp
stc
mov
je
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
idivb
adc
jo
jle
jo
jp
fnstsw
stc
sbb
mov
cltd
lods
lret
jle
mov
and
lret
add
sub
sbb
mov
loopne
and
jmp
sbb
xor
xor
cmpsb
mov
nop
stc
sub
pushf
jge
sbb
inc
andl
dec
bnd
xchg
xor
dec
fidivrl
dec
sti
add
stos
sbb
mov
ss
cld
inc
cmp
cmp
or
es
push
test
out
subl
jecxz
sbb
aas
jns
xor
mov
mov
out
xchg
out
sbb
xor
test
es
xchg
inc
movsb
sub
mov
mov
loopne
xor
push
jge
and
out
gs
ficompl
xor
xor
dec
mov
roll
pop
jno
loope
out
push
insb
mov
dec
hlt
ret
sbb
push
xchg
cltd
jnp
fistpll
mov
jge
addb
fs
cmp
or
pop
push
push
imul
push
pop
rcrl
mov
orb
dec
enter
push
lcall
cmpsb
mov
out
jbe
int
mov
or
inc
sbb
addr16
and
outsl
jns
xor
gs
lods
add
sbb
js
arpl
lret
jge
jp
ljmp
push
push
lock
test
dec
mov
add
outsb
imull
or
or
pop
add
popf
pop
jns
int
mov
push
out
call
mov
in
jg
dec
and
pop
push
and
adc
fadds
rcll
and
arpl
pop
into
push
repz
inc
ja
out
push
mov
sti
sub
or
jo
ljmp
js
ret
in
xchg
xor
sub
out
sbb
adc
jns
pusha
or
outsb
pop
dec
in
push
sbb
lcall
mov
mov
cmp
lret
xor
cmpsb
fdivl
pop
inc
dec
mov
jns
push
cmc
push
cmp
inc
mov
pop
lret
xor
fdivl
das
pop
call
ja
dec
cmp
cmp
inc
mov
push
xor
scas
je
pop
cmp
ja
lcall
jnp
out
in
dec
out
mov
inc
jle
in
xor
push
cmp
xchg
loope
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
gs
fs
mov
ja
shll
shll
or
inc
loopne
sbb
lods
add
sbb
sbb
dec
rcr
stos
pop
adc
push
bound
movsl
and
mov
push
fistl
jmp
movsb
xor
cltd
test
loope
inc
ret
scas
fwait
and
mov
adc
xchg
sarb
jmp
call
jns
sub
std
or
fnsave
push
xchg
mov
mov
ret
push
jo
push
push
dec
outsb
subb
in
ja
out
inc
pop
pop
cmp
adc
inc
or
subb
and
in
fstpt
std
orl
in
dec
sbb
in
repz
xlat
jp
xorb
mov
cmpsb
int3
dec
xor
xchg
xchg
addl
pop
sub
adcb
mov
stos
pop
dec
sbb
loopne
push
sub
ds
cmc
arpl
test
dec
mov
push
mov
xchg
int3
sbb
fwait
ret
mov
outsl
call
add
jns
pop
inc
push
or
sbb
ficomps
pop
add
sub
loope
push
in
ljmp
in
push
mov
pop
stos
jp
out
push
addr16
fsubrl
das
jo
jg
jns
xor
movsl
ret
mov
clc
mov
rcr
push
test
aaa
pop
pop
lcall
mov
mov
in
movsl
aaa
add
rorb
pop
and
xor
aaa
popa
and
mov
leave
scas
subb
push
sub
dec
int3
shlb
xchg
mov
loop
jg
push
mov
xor
xor
fwait
xchg
fcmovne
fsubs
ss
popa
push
in
xor
cld
repz
out
mov
cmc
dec
outsb
fiadds
or
pop
xor
mov
mov
lret
movsl
addr16
sbb
sub
jbe
push
push
mov
xchg
lret
fsts
cmp
adc
push
out
shll
inc
das
sub
or
scas
ja
fldl
out
and
mov
rorl
out
inc
push
outsl
pop
adc
dec
jle
stc
cmc
pop
adc
adc
mov
xor
cmp
push
mov
push
aas
fsubl
pusha
xchg
cmpsl
popa
lods
cmc
ja
xchg
jge
hlt
repnz
clc
push
mov
je
jbe
fisubrl
add
sahf
aad
xor
rclb
inc
add
mov
and
cmp
fmuls
in
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
dec
fldcw
push
mov
jle
jo
inc
pop
xchg
lahf
popf
es
clc
sbbl
or
stos
bound
aad
js
or
lret
xor
es
push
mov
ret
push
aas
cmp
arpl
daa
out
test
mov
adc
movsl
cmp
jge
into
mov
lods
loope
stos
fwait
push
ljmp
adc
pop
inc
insb
test
icebp
jmp
cmp
and
stos
clc
pop
shlb
or
sbb
stos
push
nop
adc
sar
iretw
ficompl
loope
lods
or
xchg
repnz
xor
xchg
fnsave
fnsave
out
or
inc
dec
jecxz
adc
daa
leave
in
jo
inc
or
pop
in
inc
loop
pop
imul
fdivrl
sti
dec
dec
xor
ds
jecxz
loopew
mov
rcrb
inc
imul
adc
jae
lahf
fisttps
adc
fadds
inc
aam
js
mov
lock
dec
sbb
test
cmp
addb
and
in
pop
xchg
xor
xor
xor
fcoms
lock
ds
std
push
cmp
sbb
cltd
dec
test
push
push
mov
add
pop
xchg
add
pushf
push
sub
jnp
loope
inc
fstpl
mov
or
fwait
ds
and
mov
xchg
scas
lods
hlt
xchg
inc
xchg
orb
testb
push
push
roll
mov
push
jecxz
xchg
testb
scas
jnp
lret
stos
mov
lods
rorl
stos
shrl
dec
in
jl
test
xchg
das
adc
clc
sbbb
sarb
fcomps
adcb
lods
fcomps
pop
dec
mov
pop
add
movsl
and
fisttpll
push
sub
out
mov
in
ja
les
fwait
ret
rorb
mov
mov
test
xor
fwait
popf
int
test
dec
mov
inc
sti
mov
pusha
mov
loop
dec
mov
cld
cmp
fdiv
testb
push
test
rorb
pop
icebp
push
cmpsl
movsb
rclb
outsl
call
push
int
xorb
fsub
lea
pusha
pusha
and
sub
cmpsb
jp
jge
jl
and
mov
sub
aam
scas
sub
addb
aad
xchg
icebp
mov
mov
std
or
or
sbb
xlat
jg
lret
fidivrl
lret
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
inc
in
outsb
jo
mov
sub
testb
cmp
stos
fistpll
xchg
lds
pushf
cmc
push
cmp
xchg
out
cmp
loope
in
mov
lcall
in
mov
lcall
cmp
or
xor
mov
sbb
pop
pop
xchg
jg
mov
mov
daa
jecxz
test
push
pushf
jb
xchg
jbe
cld
add
dec
cwtl
jb
hlt
jae
loope
jne
out
mov
sbb
mov
int
push
xor
sub
loop
pushf
lock
das
arpl
mov
outsl
lea
inc
fs
sub
lcall
xchg
in
cld
push
cmp
fst
cmp
adc
sarb
jae
sub
xor
scas
call
call
sbb
fiadds
mov
pop
out
cmpsl
push
out
stos
xchg
icebp
popa
xor
adc
push
cmc
mov
xor
xlat
test
sbb
mov
clc
scas
clc
test
dec
aam
insl
shl
add
push
rolb
add
sbb
out
push
jg
subl
rorl
mov
andb
scas
lods
mov
mov
dec
push
out
jne
std
enter
mov
das
cld
into
gs
xchg
and
cmpsl
mov
loopne
push
js
cmpsl
addr16
data16
dec
add
mov
ret
ds
dec
adc
cmp
shll
sar
mov
push
pop
add
jno
jnp
mov
jns
adc
in
lahf
cmp
leave
rcrl
loopne
mov
mov
aam
addr16
push
data16
mov
fmul
out
sub
mov
aaa
sbb
data16
scas
test
movsl
subb
pop
mov
pop
sbb
mov
and
daa
adc
loop
inc
inc
mov
and
dec
mov
mov
fs
or
dec
pop
lock
pop
sub
mov
and
mov
xor
inc
mov
scas
leave
movsb
insl
cmp
xlat
fcmovne
lret
pop
xchg
adc
jecxz
imul
sbbb
and
xlat
adcl
mov
dec
push
xchg
jno
dec
sti
outsb
mov
xor
popa
les
lods
ficompl
cwtl
push
iret
mov
in
outsl
test
insb
sub
test
lds
clc
jne
pushl
jmp
and
lods
shrb
in
cmc
fists
xor
jle
jo
loope
lret
repnz
adc
push
imul
out
aad
cld
pop
jno
dec
adc
adc
dec
xchg
mov
pop
push
jmp
jmp
scas
fdivrp
dec
push
adc
and
arpl
sbb
lock
mov
xlat
popf
inc
sbb
xchg
add
cltd
test
mov
jle
imul
aad
mov
fiadds
mov
cmp
movsb
sub
in
xchg
xor
push
pushf
and
inc
ret
andb
outsl
xchg
sahf
or
mov
shlb
gs
jmp
jle
rcrl
in
jbe
sub
data16
adc
mov
xchg
stos
sbb
sbb
fdivs
mov
xchg
cmc
movsb
cld
lret
mov
repnz
push
push
xchg
xbegin
lea
ljmp
xor
sti
out
pop
cmpsw
fisubl
test
les
jp
mov
inc
shlb
sbb
cmp
jge
mov
cs
ja
inc
stos
sub
and
mov
outsl
dec
cld
jno
dec
clc
lret
sbb
lret
test
js
mov
ret
mov
cmp
jns
xor
cmp
xlat
cmp
sbb
adc
repnz
ds
cltd
mov
or
xchg
fwait
aad
iret
sbb
jb
xor
js
mov
mov
cltd
jp
stos
lahf
xor
ds
or
mov
cmp
xor
pusha
jns
dec
jp
cmpb
mov
stc
inc
jle
data16
xlat
push
adc
out
rep
mov
xor
cmp
and
mov
add
mov
sub
mov
xchg
je
or
dec
hlt
and
pop
mov
cmovne
and
lcall
cld
and
mov
mov
js,pt
stos
cld
jo
nop
sbb
lea
fnstsw
lods
shll
and
xchg
sbb
ljmp
xchg
fbld
loopne
sbb
push
jnp
sarb
in
lret
fsub
pop
enter
sbb
push
dec
push
inc
xor
arpl
add
pop
stc
mov
xor
cmc
cmp
popl
jg
and
jns
ret
mov
out
push
popf
and
aaa
cmp
or
sbb
jmp
cli
mov
and
ja
jmp
pop
insl
and
xor
insl
jp
or
jne
xor
mov
mov
in
test
cmp
sbb
pop
shrl
dec
xor
mov
or
adc
mov
push
or
movb
mov
ljmp
xor
xor
adcl
mov
push
adc
push
xchg
popa
and
xchg
dec
dec
iret
inc
ds
adc
aad
add
adc
xor
and
std
iret
fidivl
stc
jno
and
push
outsl
into
xor
aad
xor
push
add
add
jmp
and
adc
stc
call
push
jle
mov
fwait
push
jne
outsb
jg
xchg
push
inc
sub
mov
ret
lret
xor
andl
jl
ror
xchg
xchg
fbstp
adc
test
or
and
rclb
out
add
hlt
scas
js
cwtl
xor
jns
jle
jnp
add
xor
out
leave
inc
pop
cli
sti
jmp
lods
xchg
sar
rolb
adc
xor
test
xor
add
test
cmpb
xor
add
pop
cmc
xchg
out
loop
mov
push
bnd
test
loop
bound
sbb
cmpl
test
mov
outsl
dec
inc
pop
jecxz
ret
aas
fisubl
dec
lods
and
outsl
add
stos
pushf
lock
sub
enter
xor
jle
js
add
pop
int3
mov
lods
mov
mov
shrb
xchg
lock
lods
pop
cmp
or
insb
sbb
push
in
cmpsb
gs
xlat
mov
sub
call
sbb
push
out
sub
adc
jge
es
lcall
mov
mulb
sub
test
out
dec
stc
ret
pushl
stos
sbb
pop
jne
or
xchg
jnp
cmp
jnp
mov
push
loopne
test
scas
mov
or
lahf
or
sti
push
sub
mov
cld
mov
loopne
cmpsl
xchg
cs
mov
enter
jle
xor
sti
xor
jo
and
xchg
out
push
pop
psllq
mov
nop
sbb
mov
hlt
inc
inc
mov
es
in
push
js
ret
sahf
mov
fistpl
divb
mov
jb
jne
or
adc
aas
repz
jns
data16
nop
pop
xor
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
pop
and
jo
jle
jo
orl
ss
jb
or
out
sbb
xchg
inc
sub
daa
dec
mov
adc
incb
ret
push
int
jae
jae
pop
filds
or
out
add
mov
xchg
sub
ret
cmp
xchg
cwtl
push
push
adc
fistl
aaa
scas
ret
fs
popf
loope
mov
mov
aad
fistl
xchg
popw
aas
add
pop
iret
fldt
loop
sarb
fdivrl
sbb
inc
dec
test
iret
std
ret
add
ficoml
pop
leave
adc
cmp
bound
jp
hlt
xor
add
ss
adc
insl
xchg
aad
push
lods
add
shlb
cli
lahf
mov
mov
jbe
rcrb
push
inc
and
mov
jp
and
jb
or
shrl
fnstenv
addr16
dec
js
pop
dec
leave
and
scas
sti
in
repnz
mov
and
and
add
or
rcrl
iret
mov
jnp
or
sub
les
dec
cmc
mov
jl
cmp
cmp
pop
leave
sbb
and
popf
out
mull
sti
imul
ficomps
loope
push
pushf
adc
test
xor
fdivr
or
inc
out
int3
mov
jo
aaa
xchg
js
inc
push
stos
jo
shl
out
and
pop
xchg
jb
jb
loope
push
int
jge
mov
cmp
sub
jecxz
lock
js
lcall
int
ret
insl
mov
xchg
mov
mov
scas
enter
dec
mov
sarb
je
push
xchg
data16
cli
fwait
and
mov
and
jecxz
imul
jg
jge
inc
mov
pop
bound
add
push
xchg
xorb
lock
fadds
std
inc
repnz
dec
cld
mov
in
push
movsl
data16
movsb
push
add
out
add
das
push
inc
iret
push
je
or
sub
ljmp
xchg
cli
idiv
or
out
xor
xchg
sbb
xor
push
fimuls
inc
fidivrl
nop
dec
popa
sbb
pushf
scas
jecxz
out
std
xor
mov
and
fsubrs
dec
popf
mov
inc
mov
fstl
lods
clc
pop
jecxz
icebp
enter
int
shll
int3
dec
call
jg
rcr
frstor
mov
and
daa
lahf
clc
jae
xchg
repz
xchg
stos
mov
out
sbb
sahf
mov
aad
inc
add
add
add
add
or
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
mov
jo
jle
jo
dec
mov
xor
cltd
push
push
and
cmp
daa
int
push
sub
mov
push
mov
or
nop
dec
jo
bswap
mov
movsb
aas
cmp
xchg
sbb
stc
mov
add
sbb
mov
add
xchg
jb
dec
cmp
jnp
sbb
in
sub
lret
xor
push
adc
popa
xor
add
xchg
sub
push
movsb
dec
lret
notl
popa
inc
mov
sbb
clc
xchg
fisubs
inc
int
cmpsl
pop
stos
jp
jno
jle
test
xor
inc
push
sub
arpl
ss
decb
push
dec
sbb
ja
jbe
aad
dec
adc
std
mov
fcmove
ficoml
pop
cmp
lds
mov
sahf
pushf
xchg
cmpsl
mov
mov
jo
sbb
movb
sbb
inc
xchg
repz
roll
cmp
sti
les
stos
mov
aaa
andb
add
sub
and
push
cmp
repnz
shlb
mov
ss
sub
lds
loop
lock
mov
xchg
xchg
lahf
jb
jbe
pop
dec
sbb
cld
sbb
jb
dec
sbb
sbb
mov
or
pop
test
push
pop
mov
das
test
shl
enter
lret
es
cmp
lret
add
je
outsb
sbb
pushf
fs
test
std
repz
push
xchg
je
push
xor
fisubrs
cmc
xor
push
daa
xchg
push
sub
pop
sti
je
push
xor
inc
fldcw
into
mov
xor
int3
in
add
add
testb
xchg
daa
mov
and
lods
cmp
mov
gs
inc
out
cltd
das
or
push
ret
add
lock
test
sub
xor
sarl
pop
ja
ljmp
pushf
or
xlat
das
les
xor
in
or
push
sti
sub
cli
jg
lahf
in
add
js
sarb
fnstsw
and
jmp
leave
xchg
push
xor
push
icebp
ljmp
push
cmp
fisttps
mov
aas
or
push
jo
add
add
mov
mov
movsl
mov
imul
repnz
aam
ss
dec
shlb
xor
lea
adc
je
xchg
imul
jae
shr
popf
fstpt
and
sti
pushl
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
scas
int3
leave
jo
jo
jle
jo
lea
push
mov
lock
and
fsubp
or
cmp
ss
hlt
pop
dec
repnz
pop
sbb
or
push
inc
push
iret
push
xchg
mov
mov
pop
sbb
fldl
sbb
sahf
and
jb
mov
dec
xchg
stc
rcll
cmp
movsb
out
dec
mov
pop
sarl
repnz
lods
fcoms
or
jo
icebp
add
xchg
jp
xchg
imul
sub
jo
pop
inc
lea
and
mov
ljmp
lds
and
push
lahf
add
push
adcb
add
enter
xchg
mov
mov
sub
inc
mov
lea
jb
mov
mov
pop
xchg
roll
mov
cwtl
fsts
test
mov
push
int
leave
and
stos
filds
inc
cmp
jp
pop
jb
popf
sbb
loopne
or
iret
das
dec
jecxz
out
mov
test
jbe
lea
pop
xchg
xchg
cmp
pop
mov
mov
sarb
jge
fidivl
mov
js
mov
orl
push
js
lret
repz
mov
add
popa
add
add
dec
pop
cmpsl
lret
lahf
push
test
or
mov
cmp
pop
add
sub
shll
mov
mov
pop
ficoms
adc
xchg
icebp
icebp
imul
in
andb
repnz
cmp
mov
jae
xor
mulb
and
rclb
rorl
das
dec
aas
push
push
xor
jge
int
lahf
jg
adc
jae
inc
dec
xor
lret
mov
test
mov
sub
orl
xor
jbe
fnstenv
and
cmp
push
cld
fsubs
adc
push
mov
xchg
push
mov
inc
jl
xor
rorl
js
imul
aas
pop
ljmp
out
mov
std
mov
cmp
adc
mov
inc
mov
add
mov
rolb
jno
sub
shlb
add
clc
ficompl
dec
jg
test
aaa
jp
jbe
fildl
xor
push
sbb
negl
push
dec
inc
jne
sub
cli
adc
shrl
sbb
notl
clc
xor
jmp
add
mov
jb
jge
jge
adc
adc
jo
jle
jo
mov
xchg
pop
push
add
jb
pusha
pop
repnz
adc
mov
add
es
jecxz
sbb
pop
jg
mov
cmpsb
test
jns
mov
dec
pop
out
or
scas
mov
pop
fmull
cmp
clc
jns
adc
in
mov
into
test
lahf
lret
xchg
imul
loop
cmp
aam
sub
cmp
xchg
pop
pushf
xchg
and
inc
cld
sub
cld
imul
xchg
mov
out
and
and
repnz
sub
and
fwait
adc
push
orl
testl
sub
insl
ret
fmull
jo
pop
sarl
in
jo
pop
sub
mov
lods
fnstsw
ret
inc
test
fldcw
lahf
and
xor
fisttpll
je
mov
xchg
mov
movsl
das
insl
mov
aam
dec
addl
mov
xor
mov
sbb
jbe
in
testl
xchg
nop
or
push
daa
ret
rcrl
enter
sub
clc
add
daa
cmp
imul
lock
sub
loope
insb
aad
mov
pop
dec
inc
cmp
mov
data16
popa
test
movsl
in
test
mov
cmp
and
sbb
popf
push
xor
shrl
mov
inc
data16
in
iret
ret
mov
ret
fucomi
pop
mov
xchg
xchg
xchg
sbb
jl
lods
jmp
fsubl
bound
push
das
dec
dec
jb
mov
pushf
xor
push
push
out
loope
xor
cmp
sbb
push
repnz
push
cmpsb
arpl
enter
lods
push
mov
cwtl
lods
icebp
sub
arpl
das
cmp
orb
imul
push
xor
mov
into
fisubl
mov
les
push
stc
repz
ficoml
fucomi
dec
lcall
js
sbb
xchg
sub
inc
and
and
and
movsl
xchg
repnz
into
shll
push
pop
outsl
xchg
pop
cld
pop
xchg
jl
rcr
mov
hlt
jle
call
mov
std
cmp
mov
daa
in
add
adc
cmpsb
and
mov
into
jns
mov
js
ret
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
pop
mov
jg
mov
dec
or
addl
pushl
mov
and
hlt
fisubrs
int
mov
xor
cli
das
cmp
ss
mov
sub
xorl
lods
pop
loopne
aad
aad
pop
pop
sbb
mov
mov
addr16
addr16
add
ljmp
pop
data16
pop
bnd
inc
sbb
or
cmc
stc
sbb
loope
inc
aas
in
xlat
mov
pop
sarl
insl
nop
fstpt
loopne
mov
lea
ss
xchg
je
pushf
call
xchg
loope
popa
xchg
je
iret
frstor
jl
xlat
add
pop
push
jne
hlt
bound
fisubl
xchg
fdivl
lods
clc
xor
push
jo
push
lret
dec
nop
int
sub
lds
mov
xchg
es
mov
loop
cmp
push
add
push
and
bound
jl
test
int
mov
jb
bound
lcall
or
xor
cmp
adc
test
out
cmp
jmp
mov
pop
cs
push
fsubs
imul
mov
cmp
fcomps
and
stos
imul
dec
push
push
mov
movsb
test
pop
jg
pop
in
cmp
imul
push
mov
enter
add
fnstenvs
pop
fdivs
inc
sub
arpl
ds
add
ret
inc
add
mov
inc
test
lcall
sahf
cmp
iret
dec
pop
aad
mov
xor
xchg
cmp
or
lds
dec
lods
shll
pop
idivl
imul
jg
fstp
jne
mov
daa
pop
lods
push
adc
sbb
lahf
cmpsb
in
cs
rclb
adc
mov
mov
ja
inc
inc
mov
jl
loop
mov
mov
push
xor
mov
jge
es
stos
mov
dec
or
sarb
mov
mov
pushf
popf
out
pop
test
movsb
pop
pop
imul
ret
imul
pushf
push
fildll
push
mov
fs
decl
mov
jno
dec
pop
lret
xchg
inc
xor
call
jne
fdivr
inc
pushf
in
xchg
jns
ss
dec
jge
lods
stos
mov
sub
outsb
xchg
cltd
mov
fcoms
into
xchg
inc
mov
int3
loope
xchg
scas
xor
pop
jbe
jp
xchg
imul
cltd
mov
dec
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
gs
sbb
jo
jle
jo
mov
lcall
aaa
lahf
cmp
sar
mov
fs
mov
jnp
mov
pop
pushf
mov
inc
ljmp
jb
divb
adc
mov
dec
inc
test
insl
cmp
or
and
mov
cmp
or
fxch
mov
fstpl
jnp
and
icebp
xor
add
adc
mov
xor
jle
in
dec
lcall
xor
mov
add
scas
adc
dec
mov
cmp
aas
xchg
dec
faddl
popa
pop
mov
inc
shll
dec
or
out
hlt
loope
jecxz
cli
xor
stc
inc
movsb
imul
popf
mov
cmp
fptan
repz
adc
cld
and
ljmp
xchg
xor
jbe
xchg
sub
inc
cmpsb
movsb
inc
lret
cmp
sub
imul
xor
out
mov
jo
dec
daa
cld
arpl
push
ss
iret
movsb
std
pop
cwtl
push
mov
mov
jno
mov
icebp
pop
xchg
dec
mov
in
ret
cmp
je
mov
xchg
mov
lahf
xchg
sub
iret
daa
or
pop
int3
outsl
push
jle
and
fisubrs
jge
pop
sub
aad
aad
sub
sbb
loope
lds
push
push
cmp
mov
jmp
inc
xchg
sub
add
js
cmp
sahf
cmp
mov
push
jmp
jo
sahf
adcl
or
xchg
shlb
jg
cltd
xor
adc
mov
fistps
test
push
xor
jns
sbb
pop
out
fwait
daa
push
in
rolb
rcrl
out
inc
shll
pop
mov
out
outsl
ror
lods
ret
dec
into
repnz
push
scas
mov
mov
xchg
mov
dec
fildll
fdivrs
ret
cmp
testl
inc
mov
or
and
xor
jmp
add
mov
cmp
mov
loope
adc
loopne
out
inc
ret
ffree
dec
loope
rcll
mov
mov
sbbl
cltd
inc
pusha
dec
imulb
push
loop
mov
int
mov
mov
ljmp
mov
stos
pusha
dec
jo
jl
push
rcl
fdivs
das
loop
xchg
nop
into
or
loopne
fmull
or
xor
mov
jmp
mov
jne
pop
push
fsts
add
jo
jecxz
push
xchg
aam
aas
fmull
faddl
fwait
repz
lcall
fstl
xor
sub
movsb
pop
pop
je
ss
push
loopne
gs
jg
inc
pop
lret
lds
cmc
addr16
pop
push
std
addb
loop
lods
loop
repz
jg
push
inc
ljmp
sar
jle
sub
xchg
or
mov
and
mov
cmp
pop
enter
arpl
das
push
dec
cmc
pop
fldenv
adc
lods
adcl
xchg
mov
cmp
inc
mov
and
add
out
cmp
lret
inc
dec
js
and
sub
xchg
addr16
subb
in
sbb
inc
or
mov
in
mov
je
stos
cmp
xchg
neg
pop
jl
jnp
mov
shlb
lcall
sbb
mov
xor
jo
leave
paddusb
int3
pop
adcl
sbb
enter
add
xchg
cltd
adc
scas
add
sub
je
mov
mov
dec
enter
adc
cmp
cltd
adc
mov
lret
cli
bound
sub
aad
sti
inc
ss
jo
cs
sti
aam
dec
addr16
add
mov
ljmp
roll
sub
jns
scas
xor
sbb
sbb
sbb
or
or
fldt
and
hlt
aam
and
sbb
add
push
hlt
mov
cmp
icebp
sbb
xor
ret
sbb
lret
mov
loope
ss
and
addl
test
imul
fisttpll
jno
and
cmpl
lods
xchg
lahf
in
cmp
out
mov
pop
push
pop
outsl
adc
jg
sarl
int
test
push
cmp
idivl
dec
or
xor
out
cltd
inc
cmpl
loop
or
rcr
mov
lahf
hlt
pop
inc
sub
cltd
dec
dec
fstpt
dec
and
xchg
sub
aaa
mov
mov
stos
ljmp
jns
push
jmp
repz
mov
popa
sub
jp
jno
and
xor
sub
cmp
imul
dec
push
sahf
mov
rol
std
push
scas
inc
inc
imul
mov
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
das
ret
add
mov
mov
xchg
xchg
dec
push
outsb
popa
adc
add
imul
jmp
dec
imul
cmp
mov
and
popa
lahf
insl
loop
or
xchg
and
add
mov
ret
stc
jae
mov
fimull
scas
movsl
xchg
mov
ficoms
cmp
inc
sub
or
push
xchg
mov
dec
push
add
imul
pxor
mov
inc
xchg
into
outsl
pop
fidivrl
cld
cs
imull
adc
lcall
pushf
aam
inc
fdivrs
les
push
je
aad
jo
push
insb
les
xchg
sarl
push
cli
int
mov
jl
movswl
xor
mov
cli
test
mov
stos
push
ret
aaa
stos
cmpsl
jbe
insb
adc
cmp
inc
stos
mov
in
mov
cld
pop
test
rorl
addr16
sub
dec
pop
jecxz
mov
mov
push
sub
shrl
aaa
mov
jp
std
js
inc
leave
push
mov
fbld
lret
ss
push
mov
push
mov
icebp
ljmp
outsb
out
xchg
repnz
jmp
int3
cmp
movsl
stos
dec
std
inc
dec
mov
cmp
mov
jae
jo
pop
data16
out
cmp
jnp
ljmp
in
shll
xor
pop
mov
nop
push
pop
test
into
add
sub
sbb
xchg
movsb
mov
imul
mov
or
stos
fsubrs
inc
in
xchg
je
mov
mov
pop
in
push
jnp
xchg
mov
adc
cmpsb
and
das
fsubp
jne
add
mov
addb
cmp
mov
xor
cli
mov
js
jne
xchg
mov
sbb
xchg
stc
mov
sub
inc
mov
inc
test
pusha
mov
push
movsl
pop
scas
repz
ds
mov
push
jno
pop
or
in
mov
loop
rorb
fildll
xor
js
jp
popf
jge
dec
rcrl
jle
jnp
sahf
shrl
das
xor
mov
adc
in
cs
scas
je
insl
cmp
popf
or
testl
mov
push
push
cmp
scas
lods
adc
add
or
jl
push
adc
loope
out
mov
inc
scas
sub
cs
jg
and
ret
mov
int
jp
pop
and
les
push
jl
add
pushf
jb
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
jae
jg
jg
mov
jl
cmc
and
jne
mov
and
ret
shll
sub
ljmp
fbstp
das
lods
or
push
jns
fisubrl
xchg
xor
das
mov
push
stos
pop
pop
jae
scas
cld
push
adc
insl
or
sub
arpl
adc
sub
push
xor
loop
shrl
dec
pusha
inc
lret
test
dec
add
insl
scas
pop
es
add
jae
inc
ret
push
lcall
xor
xor
mov
dec
inc
dec
ret
lcall
out
add
push
mov
xchg
mov
adcl
cs
insl
sbb
sbb
pop
xchg
and
out
in
imulb
pop
rcll
nop
jle
ljmp
mov
pop
jg
sahf
sub
subl
mov
xchg
xchg
cmp
jge
es
ret
lds
push
ret
jnp
jmp
imul
inc
xor
fsubs
xchg
imul
mov
mull
lahf
mov
xchg
in
lods
adc
into
inc
orl
cmp
lahf
addb
stos
adc
add
dec
push
sbb
jne
fwait
out
enter
jb
and
add
lock
xchg
cmp
shl
ret
loop
dec
push
cmp
jbe
lcall
shlb
jns
cmc
pop
orl
sahf
dec
loopne
sub
out
test
aaa
mov
adc
aas
mov
stos
xchg
push
xor
jo
and
inc
lea
lahf
loop
dec
int3
into
sti
sub
mov
icebp
adc
lods
movsb
push
xchg
cltd
fadds
cmc
mov
outsl
mov
mov
inc
jecxz
push
cltd
int
sub
or
repnz
fs
out
or
sub
sub
dec
shlb
mov
test
loopne
xchg
cmp
lret
mov
cmp
lcall
pop
pop
jp
sub
sarl
rcll
ds
iret
or
jp
dec
cwtl
ljmp
mov
adc
pop
add
repz
jb
cmp
int
ss
ficoms
fiadds
pop
xlat
negb
cmp
pop
int
jmp
mov
jecxz
xchg
out
nop
push
xor
call
push
sbb
in
push
fisubs
cmp
sub
cs
add
in
xor
lds
popa
fwait
push
popa
mov
test
pushf
jb
add
filds
add
sub
mov
popa
pop
xchg
aas
enter
mov
jle
jo
mov
pop
movsb
shrl
inc
inc
pop
push
or
pop
push
cltd
xchg
push
nop
jo
imul
sub
test
cmp
insb
enter
xchg
sti
stc
push
cs
mov
push
std
ds
sub
or
fistpl
dec
rcr
add
dec
movsl
add
sbb
mov
pushl
js
xadd
aam
jb
jle
jb
cwtl
insl
mov
dec
xor
fldz
out
loop
loope
jnp
test
into
cmc
in
jge
cmp
fsubrs
fdiv
and
ds
imul
xchg
in
rolb
jnp
aaa
jo
xchg
mov
aaa
nop
jo
out
lods
cld
adc
jge
xor
lods
pop
scas
sbb
lods
jbe
repnz
imul
stc
inc
scas
loop
pop
stos
mov
push
shr
mov
mov
adc
int
or
mov
cmpb
xchg
jmp
inc
and
and
inc
cmpsl
lret
cmp
std
mov
lea
pop
mov
jns
add
jno
aaa
test
xchg
call
jmp
cmp
jp
mov
ljmp
pushf
out
loopne
test
sti
jbe
shlb
lods
scas
sti
xchg
push
mov
cmp
push
jl
xchg
cmp
out
ja
pop
leave
cmp
inc
jns
fst
dec
test
ss
jns
mov
push
inc
mov
mov
xor
pop
add
stos
fwait
dec
xor
shrb
ficoms
xchg
push
mov
scas
aas
in
faddl
shrl
sahf
ja
jmp
insb
nop
cwtl
cwtl
jle
cmp
xchg
sub
rcr
jp
adc
fadds
int
shrb
lret
popf
in
dec
scas
js
and
sbb
cmp
inc
mov
ds
jl
frstor
pop
insl
inc
rorb
push
mov
ljmp
xchg
data16
inc
and
mov
xchg
clc
pusha
xchg
jo
push
mov
cs
xchg
jl,pn
mov
mov
je
hlt
outsl
std
dec
push
loopne
push
pop
xor
mov
repnz
and
sbb
inc
dec
imul
loope
in
repz
cmp
or
int
xchg
ret
mov
rcrl
mov
pop
jl
aad
aaa
cli
outsl
movsl
insb
jmp
scas
dec
push
sbb
aaa
test
sub
add
mov
dec
loop
and
cmp
subb
push
or
xchg
mov
jmp
dec
fistpll
arpl
pop
jp
cwtl
xchg
sub
orl
jo
outsl
mov
xchg
pop
lret
lret
sub
jl
nop
cmp
mov
cmp
xor
gs
jbe
adc
add
pop
aas
dec
or
test
popa
xor
xchg
jl
xor
mov
mov
xchg
inc
repnz
cld
mov
mov
stc
std
loopne
adcb
stos
addr16
stc
in
pushf
push
xlat
pusha
das
cmpsb
cmpl
dec
leave
and
addr16
in
stc
fwait
pop
mov
xor
ljmp
aaa
jbe
xchg
dec
adc
mov
adc
clc
dec
popf
fs
aas
xchg
fstp
insb
rorl
scas
mov
pop
and
and
dec
inc
mov
or
push
ljmp
fxch
inc
xlat
jo
stos
pop
movsl
lea
dec
out
xor
inc
je
pop
sub
data16
push
push
stos
cmpsb
inc
xchg
pusha
dec
cmpsb
add
add
repz
jae
imul
push
pushf
or
jmp
jge
or
cmpsl
movsl
leave
adc
pop
lods
mov
sub
xor
sub
and
adc
xchg
leave
add
addr16
aaa
dec
dec
xor
mov
and
pop
cld
mov
mov
dec
test
test
cmpsb
shll
popl
es
pop
sti
lcall
sti
mov
cmc
push
cmp
loop
xchg
repz
fxch
sbb
sbbl
sub
xor
push
and
push
mov
mov
xchg
test
mov
push
xor
push
inc
stos
xlat
xchg
bound
mov
jo
popf
js
add
sbb
mov
cltd
xor
xor
jmp
outsb
fsub
ficoml
stc
pop
stos
addr16
jo
jno
cld
dec
sarl
cwtl
mov
jge
roll
jl
and
sti
cmp
fs
jbe
lea
lahf
sub
or
jo
scas
push
ficoms
add
pop
inc
pop
sbb
add
bound
enter
out
divl
cli
mov
test
fists
mov
fs
inc
mov
dec
or
xchg
out
jge
xchg
adc
test
dec
mov
aaa
ss
lds
mov
imul
dec
mov
stc
jno
cld
xchg
cli
mov
lods
mov
pop
pop
outsl
inc
mov
fmuls
mov
adc
lods
xchg
or
sub
popf
or
xor
stos
pop
mov
out
daa
into
sbb
add
negb
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
xchg
cmpsl
lret
jo
jle
jo
xor
cmp
andb
pushf
pop
int
jl
out
cltd
fsubl
xor
loopne
in
xchg
push
ja
jmp
cmp
imul
aaa
scas
add
imul
fucomi
dec
mov
aaa
adc
pop
jmp
jbe
aad
dec
cmc
subl
pop
pop
jg
push
or
mov
out
xchg
xor
jecxz
lods
fisubrs
adc
push
add
adc
jno
mov
mov
int3
jecxz
adc
popf
jo
stos
xchg
iret
mov
pop
inc
cltd
in
xchg
scas
xchg
test
jge
clc
dec
rcrb
sahf
lahf
jge
insl
jl
imul
inc
push
loopne
mov
jae
mov
cltd
and
mov
xchg
lret
fwait
aam
popf
ds
fnstsw
rclb
jl
popl
mov
xor
sbb
cmpl
or
or
or
push
pop
shll
movsl
add
pushf
sar
iret
ds
fisubs
adc
test
inc
ja
adc
leave
xlat
xor
into
pop
push
std
push
pop
arpl
sarl
repz
mov
and
jge
cmp
pop
dec
cmp
gs
mov
pop
fnstenv
outsb
push
lock
jmp
rolb
test
rolb
xor
inc
adc
xor
sub
insb
push
adc
dec
movsl
insl
pusha
test
gs
ret
xchg
pop
test
adc
fstpl
dec
outsl
mov
lcall
lds
push
rcl
sbb
fs
mov
out
fcmovbe
movsl
enter
push
xchg
aaa
jo
jecxz
mov
test
enter
inc
arpl
push
movsb
push
sahf
lock
out
push
dec
and
lahf
or
insl
fcompl
jle
hlt
cmpsl
jns
mov
inc
xor
aam
fidivrl
stc
adc
fwait
push
inc
xlat
sbb
push
sbb
in
xchg
inc
add
mov
icebp
inc
pusha
out
es
push
push
stc
lods
out
push
rorl
fldcw
icebp
leave
jecxz
fstpl
sbb
mov
icebp
fcompl
and
inc
push
or
negb
sub
xchg
cmp
and
fwait
inc
jmp
jp
or
pop
push
cmc
pushw
je
fildll
cmp
push
xchg
pop
mov
pusha
adc
pop
mov
xchg
mov
jmp
mov
shrb
mov
mov
sbb
jmp
cwtl
sub
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
stos
rcll
jg
mov
fsubs
sbb
xchg
jl
sub
js
and
dec
sti
mov
and
fisubs
clc
and
movsb
cmpsl
ret
adc
pop
lcall
addr16
mov
and
dec
mov
jmp
push
mov
gs
xchg
adcl
add
push
hlt
sbb
ss
or
xchg
out
andl
pop
stos
mov
loop
dec
pop
pushf
orl
outsl
and
arpl
daa
mov
mov
scas
sub
insl
movsl
xor
in
push
cmpl
in
in
mov
pop
cmc
je
push
mov
xor
out
or
sub
mov
push
fnstsw
and
xchg
popa
mov
or
inc
sub
sbb
loopne
imul
and
xor
pop
inc
imul
mov
scas
mov
xor
add
add
jp
inc
inc
mov
mov
les
rclb
adc
repz
mov
or
hlt
decl
xchg
xor
fstps
xchg
pop
fdivl
jp
pop
shrl
hlt
scas
into
adc
fsubl
dec
scas
mov
outsl
push
and
call
mov
enter
cmp
out
jge
ja
cmpsl
push
pop
negl
loopne
fwait
orl
mov
add
or
sub
sub
push
mov
cld
jecxz
xor
repnz
adc
test
sbb
insl
out
xchg
mov
sbb
repz
mov
lret
mov
xor
cmp
rorb
loop
ret
add
call
xchg
or
adc
mov
sub
ficomps
ljmp
cltd
sub
lods
xchg
dec
jno
push
imul
stos
push
xor
gs
xchg
inc
pop
rcrl
clc
mov
mov
sub
pop
mov
mov
out
popa
jg
mov
mov
loopne
adc
and
add
nop
push
and
fidivrs
daa
rclb
out
push
cmp
out
jnp
scas
aad
pop
rcr
stc
xchg
dec
cmp
sbb
or
fldl
jne
xor
insb
xchg
std
dec
cmp
out
fs
mov
stos
hlt
jnp
and
aas
stc
fists
movsb
sub
iret
cli
mov
out
or
in
imul
or
fs
addr16
orb
popf
insl
push
pusha
xchg
adc
sub
dec
in
fbstp
xchg
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
jbe
sub
adc
mov
loope
inc
enter
push
pop
mov
adc
push
mov
pop
dec
int3
mov
sbb
jle
hlt
adc
mov
adc
jbe
and
mov
mov
push
orb
aaa
stos
adc
iret
cmp
imul
xchg
lret
outsl
out
mov
xchg
loope
into
cs
xor
pop
lret
in
int
jmp
add
arpl
rol
lret
mov
lea
cwtl
jge
inc
sub
aas
cmp
mov
mov
sub
dec
sbb
jno
adc
hlt
fsubrl
add
imul
rolb
or
and
mov
in
iret
add
push
mov
in
cmp
sbb
jge
xchg
adc
jo
movsb
sub
roll
pop
jnp
aas
xchg
xchg
data16
xchg
rol
subl
or
lahf
inc
push
test
int3
imul
inc
rorb
push
das
nop
jp
pop
imul
xlat
xor
mov
mov
ret
insb
or
push
insb
inc
pop
sahf
lcall
and
mov
or
add
or
movl
imul
pushf
sarl
inc
push
sbb
push
xlat
out
daa
int
les
push
xchg
sarl
andb
imull
mov
xor
inc
or
stos
jnp
sub
pop
cmp
movsb
popa
mov
pop
dec
negl
dec
adc
fsubrl
pushf
setne
pop
xor
nop
dec
sahf
pop
or
pop
arpl
lcall
jg
cld
cmp
mov
sarl
leave
xchg
inc
and
add
leave
cmp
adc
inc
mov
mov
lock
shrb
lods
addr16
add
adc
mov
js
adc
cmp
test
sub
xchg
mov
in
ss
adc
sbb
pop
pop
leave
inc
jae
repz
xchg
pop
notl
mov
mov
inc
scas
das
pop
sub
xchg
inc
pushf
fldcw
or
cmp
rorb
xlat
outsl
xchg
lods
jmp
jne
pop
adc
jp
and
add
cmp
mov
sbb
xchg
popf
movsb
inc
scas
das
push
ss
cmp
pop
sub
adc
movsb
decl
cmp
frstor
pop
rol
rorb
pop
xor
stc
int
int3
dec
aad
lods
jg
iret
call
enter
addr16
pop
cmpsb
or
mov
add
add
std
fs
jno
mov
push
in
mov
mov
cmp
or
out
sub
or
jbe
hlt
in
aaa
push
pop
hlt
cmpsl
cmp
push
sbb
cmpsl
cmp
push
incb
or
jnp
sbb
dec
dec
jns
lret
xor
stc
in
dec
adc
push
dec
cmp
insl
imul
dec
ss
jo
sub
bound
hlt
inc
leave
xor
mov
stos
mov
hlt
or
sbb
jp
jnp,pn
xor
mov
inc
cwtl
insl
mov
enter
push
mov
xchg
sbb
sbb
arpl
and
mov
mov
inc
dec
dec
das
testb
jmp
inc
cmp
jl
jmp
cmp
nop
js
cwtl
inc
jp
movsb
sbb
push
mov
fwait
out
mov
hlt
cmp
xlat
cmp
in
sbb
shlb
and
mov
mov
into
test
out
sbb
adc
ljmp
jl
popa
out
mov
out
mov
ret
ds
dec
inc
or
mov
daa
insl
addr16
repz
cmc
test
xchg
sbb
fcoml
and
xorl
repnz
out
lea
push
push
loopne
mov
push
mov
mov
sbb
mov
mov
shrb
data16
xchg
cmpsb
mov
pop
int
inc
sub
mov
mov
xchg
in
add
mov
stc
push
scas
cmpsl
dec
lock
adc
xchg
icebp
pop
sub
sub
gs
movsb
push
cltd
stc
cltd
inc
das
dec
adc
rclb
les
jle
jnp
mov
addr16
xchg
test
lcall
sub
push
add
dec
out
negb
xlat
xlat
xlat
inc
jne,pt
add
sbb
mov
inc
mov
jb
jb
mov
cmp
fistpll
sbb
inc
stos
sub
std
add
dec
shll
jno
shl
cmp
lea
jge
cli
test
xchg
add
in
inc
and
pop
sar
mov
idivl
xor
ds
xchg
into
mov
je
mov
mov
push
ja
mov
mov
sbb
idiv
leave
jmp
pusha
lret
xor
data16
xchg
mov
pop
push
ja
stc
push
dec
scas
test
cld
add
fs
leave
xchg
sbb
add
mov
lea
inc
mov
dec
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
cmp
cmpsl
fucomip
sbb
jo
jle
jo
cmp
sti
sub
out
faddp
pusha
call
es
cmpsl
mov
dec
sub
cld
add
push
mov
pop
push
xor
jmp
push
mov
mov
popw
dec
out
mov
mov
inc
pushf
ficoml
mov
jb
ret
or
fdiv
push
and
dec
aas
xor
dec
rorb
in
mov
adc
xchg
adc
movsb
cmp
mov
and
push
call
sub
dec
punpckhwd
sbb
out
mov
jne
fsub
aaa
nop
jns
mov
jp,pn
mov
clc
inc
push
repz
xchg
repnz
sub
aad
rol
and
lret
je
pop
pop
push
dec
cmpl
lret
sahf
popf
addr16
shrb
test
xchg
aad
loop
std
or
js
stc
je
sarl
and
lods
cld
push
fs
out
ljmp
xor
xlat
jo
pop
push
int3
fldl
nop
push
aam
jge
inc
xlat
pop
fistpl
je
jg
iret
mov
dec
test
adcl
sarl
dec
call
push
das
loop
rcll
lods
lret
pop
test
xlat
les
or
or
ss
leave
call
cld
mov
push
pop
xor
rcl
out
dec
xor
mov
xor
adc
xor
cmc
xor
cmc
into
mov
fwait
cmpsl
push
xorb
out
sbb
xor
popf
or
aas
jmp
jl
push
insl
push
xor
inc
and
xchg
push
push
pop
jmp
and
pop
rclb
es
mov
xchg
sub
cs
mov
mov
in
aam
adc
es
imul
daa
lret
and
push
mov
aas
and
stc
push
push
sub
pop
sub
addl
lcall
mov
shl
rorl
incl
xor
jp
lret
popa
pop
mov
xchg
nop
xchg
adc
adc
mov
mov
addr16
cmpsb
test
sub
jne
pop
cmp
add
xchg
mov
stos
sti
scas
cmpsb
jno
lds
pusha
dec
or
nop
mov
test
les
lret
sub
or
mov
dec
cli
push
mov
jbe
push
ds
int3
enter
mov
pop
pop
fldcw
mov
jo
aad
cmpsl
std
push
pop
inc
cld
add
scas
xlat
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
stos
lds
aaa
sbb
mov
or
pop
cmp
data16
mull
cld
cmp
jge
out
addr16
pop
inc
movsl
push
lods
and
push
aad
mov
mov
mov
pushf
or
add
mov
cmpsb
mov
jg
jge
sbb
dec
or
jae
xor
scas
in
mov
cmp
imul
fidivl
and
mov
jmp
sub
mov
adc
jne
sbb
out
imul
push
mov
sbb
xchg
stos
fldcw
out
fstpt
jne
push
ja
frstor
cmc
sbb
lret
pushf
inc
ds
jbe
add
das
pop
add
sub
movsbl
hlt
sbb
clc
jno
mov
imull
mov
xor
mov
inc
jle
pop
loop
ljmp
out
jo
cmpsb
in
mov
pop
enter
jb
pop
mov
and
inc
cli
aam
push
imul
lods
int3
scas
sub
and
test
rclb
xchg
dec
jno
pop
les
fldenv
sub
sbb
in
test
mov
or
ljmp
fildl
lcall
jne
adc
repz
rclb
rorl
imul
in
mov
test
roll
popf
rorb
push
push
push
and
xor
cmp
test
es
in
xchg
ljmp
mov
jo
jbe
cli
lea
fisubrl
inc
fistl
cltd
ljmpw
test
push
or
std
pop
push
adc
adc
and
fdivr
cmp
adc
and
andl
dec
sar
mov
mov
js
jae
push
inc
ficomps
jl
adc
repnz
jl
mov
lea
push
push
jmp
in
fcmovu
ds
stc
movsb
scas
pop
xorl
jmp
mov
mov
ret
lret
xchg
dec
test
cltd
pop
push
stos
mov
leave
in
in
adcb
mov
and
push
je
std
loope
imul
int3
sbb
out
fldenvs
xor
loopne
dec
lea
hlt
enter
cmp
cli
jp
push
call
push
negl
pop
dec
repz
es
imul
push
lret
enter
inc
ret
call
cltd
lock
dec
call
sbb
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
xor
xorl
jo
jle
jo
or
int
jnp
inc
xor
xor
in
lds
xchg
and
push
adc
ja
jo
push
mov
xchg
loop
scas
gs
pop
mov
mov
jg
push
loopne
daa
pop
clc
cmp
or
xchg
jne
xchg
xor
mov
ficompl
fwait
xchg
jae
cmp
and
leave
in
mov
pop
rclb
test
loopne
sbb
aaa
bound
lret
xchg
into
int
sar
or
xor
clc
fbstp
rcll
popf
cmpb
xchg
cld
or
int
fsubrs
adc
jno
lret
and
mov
cmp
adc
in
loopne
dec
mov
inc
repnz
stos
scas
test
mov
insl
icebp
stos
sub
cwtl
das
je
mov
jle
cmp
popf
shrb
inc
lret
push
mull
mov
gs
comiss
aam
cs
je
sbb
out
fnstcw
jge
test
mov
ss
mov
dec
sbb
shll
lret
dec
xchg
jg
adc
mov
cmpsb
or
movsb
push
or
daa
xchg
push
push
jl
jbe
xchg
mov
fstpl
cmp
dec
and
xor
jmp
jle
push
int3
xor
jl
test
xchg
xor
cltd
int
rorl
mov
repnz
add
sbb
ljmp
xor
and
icebp
int3
push
mov
xchg
mov
out
and
pushf
cs
mov
stos
call
cmp
por
dec
mov
in
popa
push
mov
rcl
mov
mov
aas
stos
adc
je
fstpt
xor
mov
jno
push
mov
je
adc
fdivrl
repnz
jg
mov
adc
test
in
cmp
add
xor
clc
out
mov
jb
rol
sbb
xorl
out
mov
pop
mov
add
bound
add
lret
in
adc
push
rcl
inc
or
cwtl
cmp
repnz
dec
jno
dec
sub
sbb
cmpsl
ds
dec
jne
out
pause
sti
jo
inc
insl
xchg
pushf
sbb
setb
xchg
bound
pushf
jbe
jo
and
or
dec
adc
loopne
rol
pushf
fwait
inc
pop
shll
dec
dec
or
xor
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
sahf
into
ud1
jo
jle
jo
sbbb
shl
xchg
mov
sbb
jnp
popf
outsb
aas
cmpb
movsb
andb
push
daa
or
inc
test
mov
xlat
adc
cmp
ficoml
shl
jns
ret
test
pusha
ja,pn
jp
fstl
test
push
stc
cmc
inc
lret
in
or
fs
flds
out
jle
into
into
cwtl
push
xchg
xchg
jmp
addr16
push
sbb
mov
adc
mov
dec
lea
loopne
cmp
jge
jp
xor
or
lods
test
outsb
dec
add
jb
adc
pusha
mov
or
aaa
mov
pop
mov
std
dec
sub
sub
lods
in
sahf
int
dec
loop
test
popa
push
inc
test
fwait
rorl
jbe
dec
push
xchg
cmp
adc
xchg
push
dec
shlb
ds
xchg
sub
xor
xchg
mov
jl
lock
add
bound
inc
popf
lahf
cmp
adc
push
jecxz
xchg
daa
dec
push
iret
inc
popf
sub
push
ja
in
stos
std
gs
cmp
into
mov
in
mov
push
dec
mov
mov
movsb
mov
add
cmp
in
cwtl
xor
fadd
xor
push
xchg
lret
inc
dec
and
mov
sub
sub
mov
cltd
and
les
jns
sbb
jno
fistps
jns
mov
es
movsb
sub
xchg
sub
dec
adc
push
clc
mov
mov
nop
cmp
fnstsw
daa
mov
ljmp
subl
adc
mov
jno
mov
sbb
mov
movsl
pusha
push
cmpsb
push
cmp
ret
cmpsb
movsb
insb
cmpl
push
inc
or
mov
lock
enter
outsl
mov
orb
xor
mov
mov
mov
mov
in
pop
push
jb
aam
flds
mov
pop
insb
xchg
add
sbb
cmpsb
xor
movsb
jnp
push
idiv
sbb
les
test
fildl
ret
bound
jp
roll
xor
dec
aad
sbb
scas
mov
rol
cld
or
xchg
mov
sub
push
push
dec
inc
js
imul
xlat
xor
sbb
mov
mov
iret
addb
loop
out
stc
imul
call
adc
repnz
sbb
jl
xchg
out
adc
jg
mov
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
