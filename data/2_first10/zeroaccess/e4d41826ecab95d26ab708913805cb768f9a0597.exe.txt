add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
loope
bswap
adc
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
push
addr16
sbb
test
or
lret
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
aas
sub
jl
jl
aaa
lret
xchg
mov
mov
stos
adc
dec
xchg
ret
outsl
mov
in
fcompl
sub
lcall
mov
mov
cmc
inc
sub
and
test
mov
fs
insb
jns
jnp
and
ret
or
push
popa
pop
xor
mov
inc
insl
push
pop
mov
and
aam
push
add
pushf
cmp
add
cmpl
inc
sbbb
cmp
push
in
add
daa
test
movsb
cld
test
aaa
inc
je
dec
dec
sarl
jnp
leave
push
mov
dec
fidivrs
mov
enter
xor
mov
test
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
mov
jl
jl
jl
xor
fsubs
xor
cmpsl
cltd
jno
clc
cmpsb
mull
imul
pop
mov
cmp
jns
daa
arpl
xchg
and
in
inc
jno
add
pop
and
negb
jbe
sbb
dec
cld
insl
mov
xchg
movl
inc
dec
mov
imul
sahf
imull
rorl
mov
inc
inc
lahf
inc
lock
cltd
inc
mov
inc
inc
dec
xchg
fsubs
jno
lret
sbb
pop
add
pop
clc
jae
popf
jge
adc
int3
ljmp
out
mov
pop
mov
or
decl
subb
inc
ret
xchg
cmp
sub
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
jb
out
pop
push
jle
jl
jl
jl
lds
pop
xchg
push
cmp
pop
mov
push
fbstp
clc
sbb
addl
movsl
and
cwtd
cs
in
sub
stc
mov
loope
dec
cmp
stc
cmp
xor
xchg
sbb
pop
fisttpll
cs
in
mov
pop
ds
mov
adc
mov
xor
aas
jl
xor
adc
inc
imul
cmp
adc
pop
pop
xchg
sbb
lret
fidivl
cmp
hlt
cmp
xor
jmp
xchg
test
pop
add
int
push
dec
mov
dec
jb
insl
les
push
mov
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
in
mov
jl
mov
stc
or
push
xor
arpl
fwait
aam
adc
or
popa
and
loop
sbb
mov
hlt
repz
push
and
inc
js
mov
pusha
xchg
sbb
addr16
test
pop
ficomps
mov
jge
mov
ss
cwtl
or
add
cmpsb
cld
inc
sub
into
in
xchg
or
inc
jl
mov
inc
pop
add
fnstsw
cmpsb
outsb
out
and
int
std
inc
xchg
or
or
jne
ret
popf
mov
mov
xor
ljmp
mov
int
pop
cli
mov
mov
sbbl
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
pusha
mov
jl
jl
jl
inc
sub
and
fs
pop
lea
pop
mov
cmpb
in
mov
push
or
push
pop
mov
mov
dec
jbe
pop
dec
jg
es
mov
dec
loope
and
push
in
inc
pop
bound
jbe
add
sbb
xchg
xlat
mov
jo
mov
mov
sahf
fnstcw
les
outsb
mov
daa
jle
sbb
jno
out
mov
mov
in
pushf
aad
pop
decl
sub
test
or
or
dec
sbb
and
test
ret
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
pusha
loope
jne
jo
jl
jl
jl
xor
xchg
jecxz
push
xor
lret
fsubs
ret
js
cmp
movsb
xor
lock
call
mov
rolb
jl
nop
adc
lret
add
xchg
dec
jne
sti
sbb
sub
pop
push
les
aad
or
leave
jo
pushf
loopne
add
aad
adc
cmc
out
xchg
adc
in
pop
aad
nop
mov
sub
test
pop
loop
testb
idivb
cmpsb
pusha
iret
cli
mov
in
adc
and
pop
pop
xchg
xchg
imul
mov
mov
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
data16
jl
jl
jl
insb
fcoms
dec
sub
adc
clc
adc
dec
and
movsl
pop
xchg
sbb
sarl
test
cmpsl
or
or
push
add
cmp
cld
pop
mov
mov
xchg
inc
xchg
imul
imul
or
xchg
mov
test
mov
jae
and
shr
out
and
pop
popf
lods
adc
shrb
inc
adcl
cmpsl
pop
dec
jb
mov
dec
cmp
testb
fcom
and
cmp
xchg
xor
inc
dec
stos
jmp
adc
mov
lea
or
mov
into
add
add
mov
mov
dec
mov
aad
std
rcrb
mov
vpslld
in
mov
loop
clc
aas
fdivrl
mov
and
jne
subl
cwtl
push
leave
adc
xlat
inc
mov
mov
mov
mov
mov
jmp
and
jmp
xor
dec
pusha
insl
xchg
sbb
lods
arpl
aaa
es
test
adc
adc
inc
cmc
fsubr
test
xchg
push
xchg
pushf
addl
cmp
and
jl
adc
dec
mov
xchg
xchg
jb
dec
dec
lcall
push
add
xor
inc
popa
ljmpw
ljmp
aas
mov
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
inc
or
jl
jl
jl
push
push
movsb
xor
mov
xor
out
cmp
data16
push
sbbl
push
mov
mov
aad
int
lcall
cmpsb
lock
push
ret
sti
dec
cmp
push
dec
mov
in
mov
mov
or
push
outsb
das
mov
xchg
jle,pt
in
pop
das
lret
add
test
adc
ret
xor
lods
and
or
add
aaa
loop
mov
loop
fwait
fwait
inc
inc
dec
inc
xchg
push
cmp
out
stos
inc
imul
fwait
movb
popa
dec
mov
push
test
xchg
inc
loopne
loope
push
in
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
cmpsb
xor
rcrl
jne
jl
jl
jl
push
unpckhps
sub
sbb
pop
pusha
inc
xchg
inc
mov
in
int
mov
out
cmp
mov
ret
in
aas
cltd
rcrb
xchg
iret
test
xchg
or
push
mov
sub
or
and
ret
pushf
adc
out
mov
xor
xorl
push
pop
cmp
adc
jmp
adc
mov
aam
filds
cmp
xchg
inc
mov
jnp
mov
push
jnp
data16
sbb
inc
xchg
adc
add
fdivl
add
test
scas
leave
out
popf
outsl
and
nop
add
mov
xchg
movsb
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
call
jne
jl
jl
jl
scas
mov
push
sbb
popf
lods
mov
adcb
insb
leave
xor
push
loopne
mov
xor
xchg
cmpb
fxch
and
xor
inc
loopne
mov
ret
ficoms
test
cmp
or
std
ja
lods
decl
insl
mov
pusha
pop
jg
lods
test
pop
and
jge
mov
int
je
pop
push
movsl
bound
lret
jae
sahf
mov
sub
mov
jecxz
bound
sub
mov
into
test
adcb
cmc
lret
xor
mov
xchg
mov
mov
or
movsl
pushf
pop
mov
mov
add
lea
mov
push
pushl
jmp
pop
jecxz
xchg
mov
jb
daa
hlt
adc
jl
mov
aam
popa
xchg
es
int3
outsb
push
jg
cli
jmp
popf
shrl
leave
outsb
push
adc
sbb
shrb
pop
movb
loop
pop
std
mov
aam
leave
sahf
jmp
xchg
mov
add
mov
orl
mov
lock
test
and
sub
sub
jecxz
popa
xchg
and
xchg
fnstcw
mov
xchg
xor
bound
adc
cmp
and
or
xorb
fcmovnbe
out
ffree
out
rorb
nop
inc
jmp
popa
test
out
mov
jne
jmp
or
mov
mov
push
int3
xchg
xchg
int
pop
and
cmp
jl
jl
jl
daa
int
ja
push
int
xor
fcmovu
psraw
test
aad
jno
xchg
mov
xor
shrl
push
stc
inc
jp
xor
rorl
mov
dec
add
arpl
xchg
sub
inc
mov
int
dec
ss
jl
ret
stc
and
mov
lods
pop
xchg
js
fcmovu
fcmove
loopne
dec
fdivrs
rcll
mov
push
cs
mov
xchg
jbe
mov
jle
mov
mov
std
xchg
mov
xchg
mov
sbb
push
xchg
test
pop
gs
mov
cmp
int3
jle
dec
pop
mov
mov
mov
mov
popf
or
pop
call
mov
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
test
jl
mov
popa
fwait
pop
jnp
loope
enter
pop
add
push
sub
mov
add
mov
gs
pop
xchg
std
push
test
xchg
xchg
stos
push
push
lea
jle
cmpsb
dec
hlt
jge
mov
cld
inc
dec
dec
jb
mov
mov
pushf
and
sbbb
pop
adc
push
adc
es
sub
mov
ds
cmpsb
xchg
mov
data16
adc
daa
aas
test
adc
sahf
push
loop
mov
mov
sub
sub
push
jbe
or
sbb
mov
decl
push
mov
push
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
inc
aad
jbe
jl
jl
jl
adc
xor
xor
adc
adc
add
and
movsl
pop
or
sbb
hlt
mov
push
or
cmp
repnz
outsl
mov
sbbb
filds
jns
adc
fwait
xchg
addr16
into
push
inc
push
std
and
mov
jg
or
jbe
push
pop
sub
dec
mov
int
adc
add
pusha
stos
arpl
or
bndldx
sbb
int
cmp
pop
ljmp
cmp
sbb
or
pop
repnz
sub
lahf
mov
mov
mov
jmp
xchg
sub
cltd
cmp
mov
pop
dec
inc
fmull
jl
mov
or
mov
in
push
push
insl
add
sub
mov
mov
je
sbb
jecxz
cld
insb
dec
sarb
add
movsl
popf
jecxz
insl
icebp
lret
inc
ja
jmp
mov
rcl
xor
int
roll
clc
in
jge
adc
sbb
lods
mov
enter
clc
lds
mov
fbstp
mov
pop
xchg
repnz
mov
jg
mov
pop
pop
stc
jg
or
sbbb
adc
gs
sub
push
in
cmp
cmp
pop
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
and
sbb
add
jl
mov
sahf
cmpsl
js
popa
jae
and
cwtl
rcll
lods
je
insl
data16
jmp
inc
inc
sbb
imul
cmp
arpl
jge
in
mov
rcrl
push
out
loopne
pop
iret
out
xchg
adc
movsl
daa
rorl
mov
jbe
jo
or
out
mov
or
test
fmull
pop
lea
xchg
cwtl
int3
mov
outsl
je
cwtl
cmp
int
jp
jmp
fprem
xchg
push
fcmove
mov
or
inc
repz
inc
dec
in
es
fldenv
xor
aad
pop
jge
mov
or
fcomps
lret
xchg
adc
mov
xor
add
mov
jmp
and
rep
lods
sti
pop
xorl
inc
inc
dec
or
jl
jl
adc
sub
mov
lret
pop
test
push
or
jno
fnstsw
mov
call
ret
mov
lods
js
adc
int3
or
xor
add
mov
jne
jne
les
adcb
mov
dec
sub
test
scas
jb
popa
dec
xor
xor
jl
push
add
sar
mov
sbb
inc
in
movl
push
ror
repz
movsb
scas
mov
sbb
js
popw
jmp
xor
jbe
in
cmpsb
adc
xchg
add
add
jnp
pop
mov
fidivl
cltd
nop
mov
test
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
or
jl
jl
jg
aad
repnz
das
mov
shlb
adc
cmp
ss
or
ss
inc
adc
sub
lock
and
add
sbb
mov
shll
es
xchg
and
testb
cs
mov
mov
sbb
add
mov
fbld
and
sahf
loopne
inc
pop
es
negb
in
ds
add
cmp
jecxz
fwait
inc
and
pusha
enter
in
lea
aaa
lea
sbb
or
xchg
sbb
cld
jecxz
add
add
jle
add
add
mov
mov
xor
jmp
fsub
mov
clc
mov
sbb
and
jl
mov
xor
xchg
popf
cmpsb
dec
das
xchg
pop
and
push
inc
mov
shrb
push
and
sub
cmp
subb
notb
add
jl
mov
icebp
iret
xchg
fwait
mov
out
mov
or
inc
mov
lahf
push
mov
dec
push
stos
add
cli
loope
mov
mov
lret
rclb
jns
push
stc
repnz
lods
lret
jecxz
cmp
cmp
push
nop
shlb
jb
in
xchg
mov
or
jge
faddl
movsl
adcb
jmp
imul
jmp
pop
fimuls
cltd
push
mov
mov
push
jl
mov
je
das
loop
push
pop
lret
add
pushf
pop
insb
push
sarl
push
jl
push
flds
lahf
stc
xchg
fldcw
outsl
jae
push
sub
xchg
mov
cmp
adc
clc
rep
pop
cmpsb
inc
jl
dec
sbb
push
fnstcw
xor
ret
imul
fistl
sbbb
pop
daa
sarl
insb
xor
fwait
int
pushf
jge
adc
lds
in
inc
adc
mov
jmp
imul
push
add
aad
js
aam
sarb
sti
lret
push
mov
jbe
jbe
add
imull
sub
mov
ljmp
inc
lods
rolb
rcr
xor
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
andb
fwait
adc
mov
pop
cmp
sub
aam
pop
push
push
dec
rolb
xor
pop
aad
inc
sahf
xlat
dec
xor
fisubl
dec
hlt
insl
je
out
hlt
icebp
mov
xor
xor
arpl
rolb
jmp
mov
repz
mov
nop
adc
outsl
or
cmpb
or
cld
mov
loope
repz
jge
cmp
mov
aaa
imul
movsb
pop
nop
sahf
fdivrl
push
out
mov
vucomisd
xlat
and
popa
mov
loopne
and
xchg
mov
pop
call
outsl
push
xchg
repnz
mov
test
add
add
add
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
xchg
add
or
jl
jl
jl
and
push
int
xchg
push
cmp
jp
adc
out
nop
and
adc
fisubl
ficomps
cmp
je
bound
roll
inc
movsb
mov
das
test
adc
cmc
outsl
dec
add
mov
movsl
and
inc
lods
bound
adc
es
ja
adc
and
push
test
aad
mov
repnz
pushf
xchg
push
ret
out
add
or
xor
gs
lea
jle
std
aam
pop
mov
jbe
sub
scas
outsl
inc
dec
sub
jp
push
leave
cli
sbb
sbbl
dec
inc
add
jmp
in
test
sti
mov
or
test
or
jl
mov
rorb
sbb
pushf
jmp
adc
xchg
ss
imul
subb
daa
xchg
pop
mov
push
imul
push
in
or
in
out
out
out
out
sbb
push
and
push
push
jle
sbb
mulb
mov
and
addr16
push
jbe
cmp
inc
jp
xlat
sti
pop
scas
sbb
fs
das
movsb
imul
jmp
js
out
xor
mov
pop
ret
jl
lcall
ret
dec
jnp
aaa
in
or
nop
ss
cmp
or
je
mov
adc
dec
xor
add
jmp
dec
jge
cmpb
jge
push
loope
insl
xchg
jl
jl
jl
inc
pop
test
stos
sbb
dec
xchg
add
sarb
jle
jnp
and
scas
cmc
fsubs
mov
mov
pop
xor
xchg
addr16
adc
repz
mov
xorl
push
cltd
lock
and
fnstsw
or
addr16
dec
mov
stos
jle
clc
add
mov
lods
decl
jns
or
lea
mov
jno
jns
dec
xchg
test
fs
es
cmp
movsb
push
jo
lret
imul
les
inc
cmp
les
cli
adc
mov
xchg
inc
hlt
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
andl
jl
dec
pop
mov
xchg
or
mov
jae
dec
ret
push
in
in
adc
and
int
rep
xor
or
cs
jge
subl
mov
xchg
jge
test
push
test
lods
xchg
lea
lods
cld
mov
xor
inc
rcll
push
dec
mov
rorl
pop
jo
ffree
in
dec
mov
jb
adc
pop
jecxz
movsb
fldt
sbb
movsl
cmp
jmp
mov
xchg
jmp
mov
popf
aaa
cmc
jno
mov
sbb
jbe
in
mov
sub
test
aam
jno
cmp
push
ja
rorb
je
add
pop
in
mov
adc
xor
push
out
cwtl
into
dec
cmovl
push
jb
inc
outsb
push
xchg
xchg
das
xor
lock
dec
addb
and
and
xchg
movsl
loop
mov
aas
leave
sarl
fdivs
xchg
cmpsl
jge
test
xor
or
dec
out
xor
add
push
js
and
mov
jl
stos
in
push
push
mov
scas
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
sbb
lret
add
jg
jl
jl
add
and
mov
jecxz
clc
clc
pop
sbb
enter
movsb
imul
lock
xlat
shrb
sub
pusha
xchg
cmpsb
dec
cmc
and
cmpsb
inc
xchg
outsb
lea
cmp
outsl
jns
xor
cmp
cmp
pop
mov
fcom
stos
add
les
jnp
xorb
push
ss
dec
mov
aad
sbb
setbe
loopne
test
dec
inc
outsb
xchg
jb
clc
imul
jb
mov
or
into
dec
ja
add
popf
dec
dec
in
ljmp
xchg
rorl
xor
xchg
andb
int
sbb
dec
popa
xor
stos
les
sbb
inc
push
sub
stos
jl
and
mov
jmp
and
inc
ljmp
add
inc
xchg
stos
adc
jbe
js
imul
out
jl
mov
lds
sbb
sub
repz
sar
xchg
fsubs
mov
ds
adc
jno
call
call
pop
test
sarb
add
sbb
and
sub
pop
nop
mov
fistpl
ljmp
insb
arpl
pop
add
inc
xchg
sbb
jbe
pop
mov
jmp
jno
in
cli
insl
cmpl
xor
add
jl
into
jg
jl
push
mov
shll
adc
mov
pop
cbtw
shr
divl
in
int3
dec
mov
enter
add
les
add
insb
sbb
push
mov
imul
js
adc
xor
loopne
enter
mov
ficoml
popa
rcll
pop
ss
lahf
push
mov
or
jns
ljmp
jbe
test
and
xor
push
sti
es
jns
mov
push
push
sub
dec
lods
in
je
lcall
inc
fxch
icebp
jb
or
dec
xor
imul
xchg
pop
es
jns
xor
nop
jecxz
lcall
aad
lea
sar
xor
add
loopne
hlt
aad
das
xor
mov
sub
test
int3
bound
js
xor
xchg
mov
cmp
cs
out
sarb
pop
popf
imul
subb
xchg
mov
mov
push
aas
xchg
push
inc
rol
jns
ss
test
adc
mov
aad
ficoml
repz
shr
inc
mov
jg
jbe
fistl
pop
pop
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
inc
cmc
push
int
add
jl
jl
sub
mov
jo
into
jnp
jno
or
dec
loope
hlt
and
pop
rclb
jne
es
push
mov
jae
pusha
into
xchg
fsubrl
mov
in
inc
jns
adc
push
ss
stos
add
inc
mov
dec
xor
stos
sub
mov
cmp
in
out
cli
sti
push
mov
inc
stos
popa
push
addr16
pop
sbb
jne
in
sbb
add
mov
jne
sub
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
lock
mov
hlt
jl
jl
cmp
incl
mov
ja
add
xchg
stc
or
and
or
out
xchg
fbstp
add
cmpsb
dec
push
ffree
popa
pop
fwait
mov
das
and
push
leave
stos
push
mov
lcall
stos
pop
dec
jae
popa
xor
aad
sub
push
sbb
pop
dec
and
lock
xchg
loopne
jl
loopne
in
add
push
push
mov
pop
fnstcw
mov
inc
flds
jno
sarl
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
cmc
sar
jl
hlt
jl
jl
in
or
leave
pop
pop
nop
outsl
fwait
or
fdivl
mov
mov
xchg
loop
outsb
mov
add
in
loopne
sarl
inc
cwtl
outsb
jae
cmpsl
in
inc
mov
inc
cli
arpl
xchg
inc
imul
jbe
sub
jns
mov
sub
jg
imul
aas
clc
jge
loope
dec
sti
jbe
cmpsb
jae
popf
aam
inc
repnz
incb
adc
sub
ljmp
add
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
inc
inc
fidivs
jl
xor
jl
push
fs
add
push
dec
cmp
push
push
fldenv
test
lods
mov
in
push
and
cmpsl
push
push
mov
pop
dec
adc
and
dec
orl
xchg
je
imul
xlat
jle
sub
or
pop
sub
pop
data16
fisubrl
sub
xchg
lcall
enter
and
je
fwait
imul
lods
lea
add
lock
loopne
mov
push
dec
ja
mov
aam
pop
dec
pop
xchg
pop
jl
mov
sbb
xchg
push
and
inc
mov
mov
int
lret
or
and
or
or
sub
and
dec
jnp
cbtw
mov
adc
stos
mov
out
jp
scas
cmp
cmp
test
jmp
push
jae
jo
cltd
mov
pop
in
and
jno
imul
cmpsb
dec
pushf
enter
mov
inc
sbb
cmp
lcall
aad
mov
lcall
mov
pop
cmc
and
sarb
sarb
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
das
jne
into
pop
jl
xor
jl
xor
pop
adc
adc
fmull
pop
es
jbe
sub
adc
pop
jmp
loopne
adc
mov
ret
push
jge
xchg
int
adc
les
lret
enter
int
push
movsb
cmc
sub
and
pop
int3
fsts
and
outsl
inc
jnp
xchg
cmpsb
hlt
adc
rorb
pop
sub
and
paddusb
into
mul
flds
shll
ficompl
xchg
inc
icebp
fnstcw
sbb
mov
les
mov
push
movsb
rolb
inc
pop
xor
sbb
filds
int
pop
push
mov
pop
push
cmp
sbb
stc
fld
add
mov
jns
jl
lock
dec
jae
lcall
mov
push
lret
hlt
add
ss
out
sub
out
adc
cmpsl
cmp
sar
add
cmpsb
add
lock
out
push
sbbb
dec
add
jno
pop
pop
cmpsb
ret
xchg
and
sbb
ficomps
jns
xor
cmp
mov
mov
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
adc
cmp
jg
jl
sbb
lret
fiadds
pop
dec
imul
cld
pushf
and
jo
test
test
xor
xor
imul
or
xor
xor
pop
lret
sub
rclb
shlb
stos
std
fdivrs
aas
add
lea
or
int3
pop
dec
out
sub
outsb
fisttpll
mov
mov
sbb
ds
cltd
jg
pmaxsw
sub
in
dec
ret
fs
imul
add
or
adcb
bnd
cmc
into
popl
test
sbb
jns
inc
ret
jl
push
dec
jecxz
imul
cli
add
push
shll
cmp
clc
mov
mov
or
mov
xchg
ret
xor
loop
xor
xor
pop
gs
jo
jmp
jns
shlb
pop
scas
push
inc
adc
ret
imul
inc
sbb
push
add
gs
loopne
addr16
lods
and
sbb
icebp
mov
in
arpl
pop
leave
insb
add
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
insl
or
jl
jg
jl
pop
hlt
inc
pop
bound
pop
lcall
stos
int
sub
pop
rorb
cmp
mov
pop
xor
dec
jp
aam
lock
out
imul
dec
nop
cmp
pusha
push
je
divb
push
pushf
adc
fbld
stos
ret
sti
mov
stos
jbe
sbb
stos
shrl
mov
movsl
sbb
adc
xchg
xchg
loop
mov
ljmp
dec
adc
pop
test
inc
js
roll
mov
ljmp
xchg
sbb
pandn
dec
mov
hlt
mov
pop
inc
sbb
add
loope
and
lahf
fdivrs
sbb
jp
sub
sti
cmp
addr16
std
mov
push
repnz
test
inc
daa
inc
mov
cmpsl
pop
into
movsb
lock
or
out
inc
mov
sbbl
xor
stos
lcall
in
rcrl
addb
jecxz
xlat
dec
mov
shll
add
cmpb
or
ja
daa
jecxz
or
daa
pusha
push
popa
pop
sbbb
jbe
lcall
aaa
lea
mov
pop
test
icebp
daa
xchg
insl
incl
xlat
movsb
lods
mov
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
sbb
jg
jl
rcll
inc
incb
lods
jo
xor
fcomi
ret
pop
jo
adc
mov
cmpsl
cmp
movsb
ljmp
push
inc
xor
mov
mov
dec
adc
or
paddusw
shll
jle
lods
pop
popf
add
pop
fldl
dec
and
std
and
popf
xchg
xlat
mov
pop
scas
push
popf
mov
mov
mov
mov
cmp
sbb
fadds
add
ficoml
fcomps
or
jmp
and
lret
dec
rcr
orl
pop
cmp
aas
fidivrl
mov
movsb
rol
out
xchg
fs
fwait
int
in
add
inc
dec
leave
test
das
pop
pusha
or
adc
je
out
das
ret
aas
loopne
dec
jo
sarl
aaa
call
iret
es
dec
cld
js
mov
push
test
jle
sbb
xor
dec
xor
shr
pop
out
and
xchg
adc
leave
mov
fwait
mov
add
inc
ja
jmp
out
scas
or
and
orl
or
add
mov
jmp
mov
mov
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
insb
fcmovnu
xor
sbb
jg
jl
push
testb
data16
lea
jl
jns
mov
ret
adc
add
out
xchg
pusha
movsb
xchg
fnstsw
mov
sbb
loop
mov
data16
sub
sub
dec
rcrb
pop
jnp
jmp
dec
pop
mov
test
subb
ljmp
mov
cmpsb
or
nop
fistl
cmp
mov
cltd
dec
add
or
lea
sub
push
faddl
push
mov
mov
and
movsb
xchg
dec
std
imul
cmp
add
jo
iret
xor
mov
pop
mov
imul
leave
ljmp
leave
pop
mov
push
jmp
jmp
mov
sub
mov
push
loope
fucomi
icebp
rolb
sbb
fs
add
xchg
adc
push
push
cwtl
adc
and
sbb
and
and
cmc
addb
xor
add
imul
mov
mov
mov
add
cmp
xchg
add
cld
jne
dec
gs
jno
jbe
jge
sbb
adc
and
stc
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
pop
and
out
sbb
jl
outsb
cmp
pop
sbb
xchg
sbb
jmp
mov
inc
add
sbb
inc
or
pop
or
test
and
imulb
nop
aam
add
and
je
xchg
fists
add
xchg
sarl
ljmp
in
stc
shll
jnp
adc
inc
mov
or
and
push
dec
out
das
sbb
push
fs
pop
sbb
pop
xor
adcb
mov
add
mov
mov
int3
xchg
bt
push
inc
ja
pop
mov
es
in
stos
sub
sub
sbb
arpl
xchg
xchg
int
mov
jge
inc
jle
push
push
xchg
mov
mov
push
push
loop
pop
inc
or
lods
imul
xor
mov
aad
push
bswap
ja
imul
cmp
andl
xchg
xchg
scas
inc
sti
lods
lret
add
scas
movsb
pop
jb
sbb
mov
call
sbb
mov
outsb
lock
cmp
outsl
pop
or
sahf
ret
mov
lock
sbb
clc
fsubrs
call
mov
jmp
psraw
out
frstor
mov
pop
jl
xor
jl
dec
inc
adc
sahf
cld
add
adc
cltd
movsb
movsb
adc
in
lret
pop
cmpsb
push
push
sarb
adc
in
out
loop
fs
movsl
rolb
jae
cli
mov
loope
std
adc
ljmp
movsb
push
mov
ss
fs
mov
int
jg
sub
rol
sahf
js
addr16
add
aas
jno
and
test
lods
loope
adc
bnd
add
jae
push
adc
jl
loopne
shrl
popf
out
repnz
enter
mov
jns
hlt
movsb
inc
out
xchg
jne
sbb
out
and
daa
popf
lcall
out
sbb
mov
push
je
xlat
or
movsb
out
ds
xchg
inc
and
fs
jno
sub
or
dec
pushf
sbb
cmc
dec
mov
addr16
xchg
pop
int
lock
cltd
cmpsl
xchg
rolb
pop
loopne
push
push
cmp
testl
aas
test
in
dec
xor
lret
jbe
and
add
cld
xchg
movd
cmp
scas
fadds
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
test
xchg
es
sarl
and
push
insb
out
js
add
stos
movsl
shr
int3
dec
xor
push
cmp
std
mov
lea
push
cmp
mov
xor
rcr
pop
xor
push
jecxz
xchg
jp
mov
movsb
mov
push
dec
mov
mov
mov
pop
push
int
cmp
mov
incl
xchg
mov
aad
push
dec
mov
mov
mull
add
add
lret
adc
aaa
movsb
pop
or
mov
addr16
rorb
adc
sbb
mov
movsb
jg
test
aad
out
add
call
or
sbb
and
mov
mov
adc
sub
xchg
stc
xchg
popf
add
sti
call
mov
iret
sub
mov
mov
add
sub
clc
nop
or
mov
jmp
jbe
rcr
das
cld
imul
mov
out
jp
int3
xor
ja
scas
in
pushf
mov
cmp
and
orl
jb
negl
push
inc
out
fs
adc
cmp
sub
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
pop
xchg
jmp
jl
jg
jl
jge
fnsave
dec
rclb
jp
lret
inc
xchg
and
fwait
sub
jge
xor
lcall
xchg
cli
loope
dec
jge
and
adc
ja
lret
je
sub
inc
and
subl
xchg
addl
push
lret
les
pop
loopne
push
and
adc
aad
leave
pusha
or
int3
pop
mov
push
cmpsl
sbb
jge
popa
xor
xchg
hlt
outsl
repz
shll
imul
dec
cmp
fwait
movsb
mov
popf
push
out
or
dec
pop
aad
pop
mov
in
shlb
mov
mov
nop
sbb
std
xor
ja
sub
cmp
out
push
jp
sub
mov
add
mov
add
int
cltd
mov
jne
roll
mov
shll
test
outsb
iret
add
fmull
enter
sub
mov
ja
cmp
sub
pop
sbb
or
cmp
out
dec
loope
cwtl
pop
sbb
mov
and
push
in
ja
add
out
inc
pusha
addb
cltd
mov
rolb
push
in
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
or
lods
insl
loope
jle
xchg
inc
inc
jle
inc
mov
xor
jle
aas
push
mov
iret
add
add
out
push
sbb
push
mov
shl
test
ret
xlat
sub
pop
out
add
push
or
xchg
or
and
lods
pop
pop
test
xchg
cmp
cwtl
dec
jae
sbb
push
push
pop
sub
and
in
fisttpll
ljmp
ds
jl
pop
cmpsl
sub
or
cmp
mov
fidivrs
push
add
jno
and
repnz
shrl
pop
cwtd
das
mov
fsts
push
adcl
popa
sbb
adc
add
mov
mov
pop
pop
aam
loop
cmp
divl
mov
xchg
push
pop
aaa
push
nop
cli
sub
mov
adc
icebp
scas
fldl
movsb
sbb
adc
push
stos
fsts
cld
pop
pop
xchg
insl
hlt
test
das
aad
loope
xlat
cmpsb
iret
lods
and
adc
cld
test
pop
std
dec
xchg
sahf
jecxz
imul
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
cmp
insl
arpl
mov
cmc
xchg
push
icebp
adc
das
leave
mov
xchg
mov
aam
xor
xchg
sti
inc
xlat
popa
imulb
pop
aam
push
cmc
add
xor
imul
ss
das
cs
cmc
dec
jle
fwait
ret
stc
inc
fistpll
sbb
mov
dec
std
loope
repnz
mov
xchg
mov
jnp
lret
jle
lret
push
arpl
ss
cmpsb
fimuls
rorl
or
and
out
mov
jne
sub
and
pop
hlt
push
int
xchg
add
mov
orb
xchg
jmp
cmc
jecxz
popa
and
dec
and
lea
call
daa
stos
test
test
leave
ss
rclb
lret
into
mov
rolb
fsubrl
push
fcmove
js
xchg
add
arpl
les
lods
sbb
iret
into
xorl
push
sub
js
mov
jo
dec
popf
lret
dec
jno
adc
aaa
mov
imul
fs
cmpsl
lret
aas
mov
out
lods
pusha
out
push
mov
mov
mov
jmp
or
push
cmp
dec
shll
jl
xor
jl
movsb
shlb
fisubl
xchg
push
gs
sbb
mov
dec
enter
outsl
sbb
mov
insl
pop
rorl
mov
imul
lods
push
iret
push
inc
mov
mov
out
xchg
mov
sti
mov
push
dec
jmp
sahf
ret
fldl
sub
bound
or
mov
std
andl
add
mov
mov
mov
and
xchg
or
sbb
jns
push
xchg
pop
ds
jns
push
rcr
loopne
repnz
and
adc
clc
daa
xor
sahf
and
sahf
xchg
and
jecxz
xchg
cmp
pushf
mov
adc
mov
xchg
aas
push
shll
inc
xor
mov
imul
mov
daa
adc
jbe
cmc
popa
addr16
jnp
addr16
cmpl
sbb
pop
rcr
das
or
jmp
cwtl
pusha
inc
ficoml
and
xchg
rcrb
pop
hlt
inc
jp
lret
outsl
push
xor
aad
shrl
cmp
jbe
mov
aam
and
xchg
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
mov
pushf
xor
xor
jl
and
add
xor
pop
in
xor
cmpsb
and
rcl
cmc
into
test
out
mov
pop
sub
fldcw
cld
mov
orb
adc
xchg
sbbl
dec
repz
xor
pop
decb
cmp
dec
sti
cwtl
or
push
push
imul
dec
xchg
pop
dec
jmp
shr
push
in
lods
mov
mov
jl
cmp
fs
xor
rcll
or
repnz
rolb
and
or
jp
dec
lcall
shl
xchg
dec
shrl
mov
pop
out
mov
rolb
sti
dec
repnz
fs
or
sub
mov
jae
adc
outsl
dec
adc
addr16
lods
sbb
push
aam
je
cmp
hlt
lods
push
dec
sub
mov
fwait
pop
xor
xor
xor
jo
adc
xchg
repnz
cmp
fdivs
or
mov
and
fs
adc
push
imul
dec
jg
dec
lock
and
jnp
idivb
cmpsl
loopne
aas
negb
ja
mov
hlt
push
gs
sub
les
clc
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
xchg
sahf
push
dec
ja
rclb
cmpsl
inc
dec
stos
inc
jo
adc
ds
xor
inc
mov
mov
fs
mov
imul
lcall
cld
sahf
xor
sbb
cli
mov
push
xor
popa
mov
inc
or
test
imul
cs
pop
rcrl
mov
jmp
movsb
jle
xchg
movsb
sahf
cmp
mov
adc
mov
arpl
loopne
jp
or
push
or
sarl
pop
jnp,pn
lea
in
dec
mov
xor
pushf
xchg
sbb
test
push
inc
testb
pushw
rorb
loope
enter
lds
fnsave
jno
jmp
add
pop
inc
or
in
mov
push
jecxz
sub
aaa
ja
leave
dec
mov
push
je
mov
xlat
pushf
popf
inc
les
cmp
shrl
js
lret
xchg
dec
cmpsb
shrl
int
pushf
cli
pop
sbb
mov
jge
enter
cltd
inc
xchg
or
arpl
and
or
and
mov
sbb
xlat
mov
testb
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
inc
scas
mov
jl
jl
jl
mov
pushf
push
nop
xchg
add
gs
add
stos
adc
mov
sub
insb
nop
hlt
movsl
mov
ja
dec
in
imul
mov
add
rcr
push
shl
mov
pop
push
cmc
adc
arpl
test
cwtl
xor
mov
pop
mov
aad
aaa
lea
jge
stos
dec
mov
loopne
rcll
or
out
sbb
and
cmpsl
dec
xchg
dec
xor
scas
dec
rolb
ret
xchg
repnz
imulb
arpl
test
ja
cld
movsl
test
pop
popf
loopne
cmp
jp
cmpsb
dec
mov
xor
imul
test
sbb
fnstcw
or
mov
addl
in
sbb
stos
movsl
lods
dec
es
pop
sbb
aaa
lret
dec
jae
mov
jmp
shl
xchg
fs
jns
adc
jne
loopne
aam
sub
jl
jl
cltd
sub
mulb
addr16
dec
push
sbb
decb
call
fcoml
call
fnstcw
iret
repz
test
es
mov
mov
ja
popf
stc
push
cwtl
test
mov
adc
add
pop
adc
shlb
mov
cmp
sbb
mov
adc
daa
dec
enter
mov
pop
pop
mov
sbb
fwait
movsb
iret
test
mov
mov
dec
imul
push
adcb
je
cwtl
push
sub
test
test
je
sub
push
xchg
jle
or
push
out
in
jge
lods
clc
popa
jne
hlt
or
xchg
cmp
mov
orb
lds
rcrb
bound
and
movsl
sub
dec
xchg
cld
imul
test
and
adc
pop
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
dec
outsb
addb
jl
jl
xchg
sub
int
mov
add
xchg
roll
ljmp
mov
ret
sarb
jno
dec
sbb
test
imul
sbb
sbb
xor
das
mov
repz
jne
rcll
in
out
fwait
mov
push
mov
xchg
ja
mov
cld
les
loop
movsb
jno
jmp
cmpsl
push
mov
or
insb
loope
sub
add
test
jle
xchg
mov
imul
pop
jecxz
cmp
fists
pop
push
mov
mov
frstor
aaa
fadds
push
jb
dec
outsl
cmp
lcall
push
mov
jmp
ss
mov
mov
mov
enter
and
push
jae
push
div
mov
and
or
mov
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
inc
adc
jl
sbb
jl
mov
xor
in
sti
cltd
ret
bound
in
xchg
fucomi
inc
mov
lahf
int
cmpsb
jg
pop
rcl
mov
cli
fs
rorl
les
test
andl
push
mov
stos
test
out
lods
shlb
adcb
jl
ljmp
xchg
pop
stc
mov
imull
mov
dec
cmp
inc
shlb
sti
iret
and
sbb
fcompp
jnp
cs
decb
sub
imul
cli
mov
mov
lods
ljmp
adc
pop
adc
jo
mov
xchg
or
jle
jns
add
xchg
mov
outsb
sbb
in
xchg
and
cmp
inc
ffree
pop
mov
mov
fwait
dec
out
and
jb
mov
enter
pop
shl
lcall
xchg
pop
fdivrs
insl
jns
and
out
cmp
sbb
outsb
stc
sbb
xchg
jns
sub
jg
inc
cld
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
sbb
jl
hlt
aam
jecxz
jle
cmpsl
jg
cli
and
inc
sub
mov
jbe
mov
fs
adc
mov
add
pop
or
pop
inc
dec
inc
push
push
or
imul
jecxz
mov
jnp
mov
push
add
stc
and
movb
sbb
rcrl
inc
aad
sub
insb
push
in
or
sub
cli
lahf
test
in
cmc
inc
pop
jns
jecxz
mov
out
ljmp
jae
stos
stc
inc
sub
ds
inc
insb
jne
or
and
xchg
sub
push
sbbl
fstl
sbb
push
mov
mov
test
mov
xchg
int3
jmp
pop
xchg
cmp
and
dec
pop
stc
loop
scas
xor
into
xor
and
jae
adc
jno
mov
dec
adc
ja
dec
dec
add
mov
xor
add
orl
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
dec
fsubrs
jl
jg
jl
fsubrl
arpl
mov
xchg
ljmp
push
push
into
adc
aas
adc
test
xchg
jne
sti
das
jae
jl
rcl
daa
andb
push
mov
add
mov
pop
push
fimull
out
arpl
ret
or
fcoms
sub
mov
ss
imul
je
test
push
jbe
sahf
addb
sbb
imul
mov
shlb
mov
xchg
leave
xlat
xchg
mov
add
dec
loope
icebp
adc
jne
jge
sub
pop
and
xchg
pop
sub
aam
cwtl
cli
in
add
je
jne
pop
ja
and
imul
and
mov
cmpsb
fmuls
out
in
pop
cmc
fdivs
lret
imul
jne
loop
inc
jbe
ret
int3
mov
cmpsb
loopne
pop
jbe
mov
mov
adc
ja
mov
adc
outsl
mov
or
inc
and
adc
test
jmp
pop
loope
sbb
lret
mov
inc
add
push
in
jl
sbb
jl
jno
fwait
jno
lds
pop
shll
push
in
jle
inc
pop
mov
mov
push
add
inc
sarb
mov
sub
cmp
enter
add
pusha
pop
js
push
xchg
mov
int3
fidivl
std
shl
subb
test
push
test
xor
xor
mov
icebp
mov
dec
lods
mov
inc
loop
std
mov
pusha
add
mov
xchg
mov
loope
jb
cwtl
pop
out
mov
aam
movsb
sub
hlt
rcrl
xor
cmp
sub
inc
or
shlb
lods
aas
mov
cmp
mov
scas
imul
lea
sbb
sub
mov
jne
repz
jp
out
popf
idiv
cs
mov
jle
test
movsl
icebp
dec
loopne
lea
imul
and
addr16
xchg
mov
rorl
incl
push
insl
es
inc
or
test
add
add
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
int
xor
subb
jl
jg
jl
adc
ret
repz
xchg
sub
push
add
into
test
scas
fcomp
rcll
adc
jnp
loope
sbb
rclb
outsl
sbbl
iret
xchg
jb
push
adc
sub
jg
xchg
je
pop
xchg
xor
sbbb
and
clc
loop
cltd
lahf
pop
sub
imul
sarl
dec
sub
cmp
sub
push
sbb
das
add
or
jnp
dec
lcall
outsb
jge
dec
jno
iret
push
adc
lock
std
add
add
jae
mov
xchg
xor
push
fst
add
pop
leave
sbb
or
adc
pusha
jbe
xchg
js
lahf
adc
push
hlt
mov
mov
mov
movsb
and
adc
nop
movsl
ss
mov
std
mov
idivb
xor
inc
add
push
lahf
inc
ret
repnz
orl
push
andl
inc
lock
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
pop
lahf
ljmp
or
dec
into
xchg
mov
sbb
lds
imul
call
pop
ficoms
mov
add
sub
jle
repnz
imul
mov
mov
push
mov
lods
add
gs
mov
cmp
mov
push
outsb
cmc
enter
dec
xchg
jg
dec
push
mov
mov
jo
mov
lds
movsb
ja
cmp
mov
mov
jle
stc
push
adc
std
sbb
cwtl
jno
in
mov
sbb
add
dec
stc
mov
call
xor
cltd
xchg
pusha
xchg
push
push
aaa
jg
movsl
cmp
les
andl
outsb
out
aam
or
jae
adc
sub
scas
pop
cltd
ja
mov
fs
and
mov
icebp
fsubl
mov
in
mov
adc
clc
ds
pop
out
ret
inc
out
dec
mov
and
fdivr
jl
dec
mov
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
push
cmp
jl
jg
jl
jnp
jge
in
adc
fdivs
pop
mov
inc
pusha
in
rcrl
leave
es
stc
out
dec
ret
sub
inc
pop
sbb
xchg
pop
xor
frstor
in
stos
sub
rcr
enter
xchg
or
mov
outsb
iret
das
out
adc
in
popf
cmp
sub
adc
std
cltd
scas
mov
cmp
and
push
inc
test
lcall
clc
pushf
ret
pop
cmp
jb
mov
sbb
add
xchg
dec
pop
sbb
stos
xchg
fnstenv
and
add
mov
fsubrs
adc
xor
xor
add
faddl
out
in
push
jb
adc
xchg
int
aas
add
sbb
frstor
inc
mov
je,pt
pop
lret
dec
ret
pop
xchg
and
jbe
insl
orb
cwtl
sbb
loope
ss
jne
jno
mov
inc
pop
adc
rclb
jge
add
enter
add
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
cld
jmp
and
jg
jl
sub
das
push
ss
mov
loop
mov
shrb
shll
ss
dec
ret
mov
lahf
jl
hlt
adc
cmp
cmp
insl
cmpsl
push
sub
inc
in
mov
cmp
nop
bound
lock
mov
loop
cld
fidivrs
hlt
stos
repnz
and
cs
xor
mov
adc
mov
push
ret
test
mov
sub
xor
pushf
mov
adc
sarb
sub
loopne
sbb
mov
addl
hlt
push
lds
xchg
into
xchg
add
cld
jnp
ret
push
stos
dec
cmpsl
sub
sahf
sbb
iret
jnp
mov
pop
mov
sbb
adc
adc
sub
xor
dec
lods
and
fldt
mov
into
or
addl
ficoml
and
sub
jo
push
je
xchg
and
in
imul
inc
add
aam
add
or
push
dec
inc
add
jne
addl
jmp
push
repz
adc
imul
dec
and
jg
jl
int
fs
xchg
jmp
pop
inc
mov
lahf
daa
mov
xchg
mov
hlt
inc
ds
or
int3
popa
outsb
dec
xor
pop
out
sub
mov
jle
inc
stos
dec
push
je
pop
jbe
movsb
fldt
mov
idiv
mov
pop
mov
sub
not
nop
mov
sub
imul
push
lea
mov
and
and
lea
xor
data16
faddl
and
sbb
inc
pop
jge
jne
imulb
mov
jecxz,pt
sub
insl
fiadds
jns
jne
xchg
pop
ret
and
push
pop
or
or
xor
jnp
dec
push
sbb
mov
int3
push
jcxz
rcrb
add
int3
stos
mov
add
dec
lods
mov
cmp
mov
pop
sbb
filds
iret
pop
sbb
loope
jp
pop
jns,pn
xchg
cmc
fadds
lods
mov
fidivs
pushl
jmp
xchg
pop
cmpsl
inc
adc
sub
sbb
push
pop
and
jl
cmp
std
in
negl
mov
jo
data16
shl
cmc
cmc
cmp
and
leave
mov
pop
hlt
addb
lds
push
sbb
scas
ds
sub
jp
push
icebp
loope
sub
mov
jae
dec
pushf
add
icebp
xor
cmc
out
pop
push
push
pop
fisttps
loope
jl
or
popa
pop
adc
mov
mov
and
imul
fidivrl
ljmp
inc
fldcw
lcall
xor
std
lret
nop
cltd
rorb
pop
fs
out
jb
jns
push
nop
cmp
mov
bnd
jae
sahf
adc
aam
shrd
xchg
loopne
adc
call
cmp
sti
xchg
xchg
inc
int
mov
pop
push
or
sub
outsb
sub
fwait
cmp
outsb
sbb
cwtl
data16
cmp
shlb
dec
sbb
mov
incl
add
add
add
mov
inc
in
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
or
and
jl
jg
jl
mov
mov
cli
jp
mov
xchg
jmp
into
ror
lds
xchg
int3
and
pushf
mov
mov
mov
loop
cmp
shld
imul
jns
adcl
xchg
popf
adc
mov
mov
pop
std
inc
jg
cmp
std
aaa
cmp
and
dec
xor
mov
mov
lcall
hlt
inc
jecxz
jbe
insb
out
jbe
leave
mov
out
push
push
lret
jecxz
arpl
push
xchg
mov
aaa
lea
jecxz
mov
fcom
and
frstor
pop
cltd
in
mov
aad
xor
imul
sti
cs
mov
jp
std
push
je
cld
jmp
inc
aam
push
mov
cltd
repnz
stos
inc
and
pop
dec
insb
xchg
sbb
mov
adc
sbb
std
mov
or
fists
dec
shrb
sbb
xor
add
push
jmp
sub
jge
jge
fnstenv
bound
jl
or
mov
shlb
jmp
dec
cmp
pop
icebp
mov
jle
xchg
mov
cs
aam
push
pop
cltd
dec
data16
mov
call
loopne
add
jl
jmp
jg
pop
cld
adc
popl
sub
mov
and
mov
or
mov
test
or
shll
sbb
mov
jns
xlat
lret
cmp
arpl
arpl
pop
adc
jno
inc
dec
mov
popf
xor
pop
lahf
psllq
push
aad
inc
cli
add
mov
es
pushf
es
jmp
pushf
sbb
ss
xor
push
dec
sbb
mov
cs
imul
jmp
fimull
mov
adc
sbb
pop
loopne
xchg
aas
lods
mov
fmull
jb
add
cmp
mov
mov
cmc
mov
or
mov
loope
cwtl
or
jnp
and
inc
lock
jmp
shr
dec
pop
pop
jns
insl
adc
movsb
and
cmp
jg
jl
je
jnp
adc
jne
or
int3
fldl
add
or
popf
arpl
cmc
lret
imul
fst
ds
test
or
pop
inc
sub
cmp
add
fsubr
int
fcoml
mov
aaa
dec
lock
popa
pop
inc
aad
mov
push
cltd
shl
int
pop
and
add
inc
es
or
js
push
test
out
mov
adc
fidivrs
dec
je
and
nop
jecxz
pushf
add
mov
push
ljmp
fs
xchg
cmc
adc
and
bound
xchg
gs
divl
adc
stos
xchg
adc
inc
jmp
movsl
fwait
jmp
sbb
sub
inc
call
orb
add
addl
xorl
fisubl
adc
pop
in
rcrl
ret
xlat
push
xchg
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
out
jno
sbb
jl
or
xor
into
test
inc
cmc
add
outsl
ja
adcb
pop
or
fs
mov
mov
adc
sbb
out
iret
sbb
mov
lods
sub
pop
mov
imul
je
fcompl
sub
loop
loope
je
adc
add
jl
add
push
leave
push
std
push
sub
pop
in
aam
cli
aas
and
ljmp
xchg
sbb
scas
xor
jno
pop
lret
sub
aaa
andl
jo
std
fsubs
jg
out
fwait
rcrl
fldenv
inc
out
cmc
or
cmp
adc
cmpsb
xor
mov
scas
push
arpl
add
test
push
shlb
cmp
test
mov
mov
cld
mov
push
sub
dec
mov
pop
and
cmp
sahf
add
das
or
mov
cmp
xor
mov
xor
mov
xor
rcrb
add
push
aaa
mov
ds
out
call
mov
xor
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
add
jl
jg
jl
mov
pop
jo
mov
dec
push
out
aaa
arpl
inc
or
or
xor
test
mov
ret
adc
mov
adc
subb
inc
xchg
mov
push
xor
sbb
add
ret
ja
xchg
std
push
enter
cmpl
fs
pop
leave
cwtl
sub
in
clc
stos
adc
daa
dec
das
mov
lret
repnz
mov
out
mov
loopne
pop
adc
rorl
nop
pop
into
fwait
sbb
and
and
and
jb
std
mov
mov
lods
out
cli
shl
scas
nop
aaa
push
jle
iret
sbb
jle
rcrl
cmp
xchg
js
mov
sub
adc
cmp
incl
jae
jle
mov
stos
dec
sub
movsl
push
stos
bound
aaa
xchg
jb
mov
and
sub
mov
add
jmp
xchg
out
std
push
gs
repz
je
daa
cmp
jg
jl
ficompl
cmp
lea
cmp
xor
test
jmp
mov
xlat
lea
jns
loop
push
repz
enter
sbb
jb
mov
adc
jns
dec
lahf
adc
insl
arpl
jge
lea
sbb
mov
pop
sub
xor
mov
sarb
cmc
lods
pop
mov
aaa
loope
ljmp
mov
and
int
add
hlt
pop
in
inc
inc
xor
pop
pusha
loopne
mov
push
inc
cwtl
xchg
push
xor
out
jle
inc
pop
jne
dec
mov
and
inc
movsb
sti
jge
in
pushf
inc
or
test
dec
mov
cmpsb
call
fistl
lret
cli
mov
xchg
mov
daa
cmp
pop
out
inc
popa
je
out
fnstsw
daa
addr16
gs
pop
mov
lea
mov
iret
sbb
xchg
jno
inc
clc
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
stos
mov
cmp
jl
rcr
or
cli
mov
or
lods
adc
mov
es
scas
add
out
fcmovne
pushf
sub
xchg
std
test
les
mov
rcll
push
mov
mov
es
add
lds
mov
mov
push
bound
mov
or
cmovle
pop
cmpsl
ror
idivb
mov
lret
dec
mov
popf
out
notl
mov
sub
inc
jge
arpl
sbb
rep
ret
xchg
pop
add
addl
jnp
daa
push
fldl2e
vpermt2b
xlat
outsl
adc
in
jnp
scas
push
jecxz
adc
jge
push
repnz
and
xor
xchg
add
fnstenv
sti
shr
jmp
fistpll
xchg
xor
lods
mov
and
mov
sbb
inc
jecxz
mov
adc
jge
pop
testl
push
sbb
mov
cmc
pop
cmp
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
jmp
sbb
mov
insl
lods
test
xchg
in
cmp
jl
jg
jl
filds
pop
jmp
xlat
repz
fnsave
mov
cmp
and
mov
aas
stos
add
mov
shr
xor
mov
out
sti
cmp
mov
pop
mov
pop
xchg
test
mov
sahf
test
dec
out
in
mov
scas
mov
mov
outsb
add
call
inc
hlt
lock
inc
fwait
jno
sahf
xor
xchg
movsl
mov
std
insl
push
xchg
xor
and
in
mov
rcrl
lret
jno
xchg
mov
fs
adc
mov
fcmovb
mull
scas
lahf
fstl
rcrb
ds
xor
cmp
cld
jle
or
or
cld
sar
loope
cmp
mov
mov
mov
mov
lcall
cli
xorl
mov
fistps
stos
stos
jb
pop
push
fdivl
lods
dec
mov
sbb
mov
sub
push
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
loopne
mull
or
or
cmpsb
test
sbb
dec
mov
inc
test
rorl
ror
mov
or
pop
mov
movsb
sti
jl
cld
mov
adc
fwait
sbb
push
xorl
or
pop
stc
and
xor
xchg
lock
shll
dec
sbb
xor
jp
inc
add
or
decl
and
jl
or
push
jle
jb
lds
push
cwtl
out
lcall
mov
dec
mov
xchg
xchg
inc
sbbb
push
pop
imulb
popa
imul
mov
add
dec
sub
in
jno
stc
data16
int
push
add
leave
stos
push
lcall
test
inc
or
fdivrs
scas
rcll
call
adc
xor
mov
inc
repnz
xor
sub
addb
aas
add
pop
pop
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
adc
scas
adc
jl,pt
push
jg
jl
xchg
jp
bound
je
cltd
mov
imull
test
dec
pop
push
enter
mov
outsb
in
ja
orb
add
call
test
jmp
lret
cmpsl
jbe
or
and
jnp
lods
repnz
xor
mov
xlat
scas
hlt
push
adc
mov
add
push
sahf
pop
lahf
cmp
jbe
mov
add
insb
adc
je
cmp
xor
adc
adcl
pop
iret
mov
sub
mov
dec
and
dec
xchg
pop
aam
cli
ja
xchg
push
lods
sub
test
push
and
or
fisubrl
iret
xor
sub
inc
and
cld
sub
jns
lock
mov
test
inc
xchg
dec
fbld
into
inc
in
xor
adc
repz
push
push
adc
movsl
je
rcr
int
xlat
inc
leave
lahf
jmp
cmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
cmpl
fcompl
aaa
inc
jnp
sti
xlat
test
pop
or
cmp
xchg
nop
mov
dec
inc
dec
das
push
pop
pushf
xor
or
jne
adc
or
je
mov
xchg
xchg
out
mov
push
pop
cltd
cmpsl
fwait
sub
ja
fwait
mov
dec
add
repz
push
mov
add
mov
mov
push
xchg
bound
mov
lret
gs
jmp
in
lea
or
mov
sbb
test
packssdw
dec
jne
mov
sbb
dec
shll
cmp
add
or
int
adc
icebp
out
mov
mov
scas
cmc
insb
sub
fldt
push
fld
xor
or
cmp
fisubs
mov
int3
jb
outsl
hlt
push
std
mov
mov
inc
mov
cwtl
jle
enter
cld
adc
mov
mov
push
loop
sbb
inc
fsubr
xor
add
movsb
flds
xor
ss
xchg
xor
jg
jl
enter
push
in
lea
sbb
pop
pop
mov
dec
pop
daa
xor
fs
mov
or
cmp
test
pop
sub
or
insb
sub
ficoms
or
add
cmp
xchg
cmpl
test
mov
push
inc
push
jb
pop
mov
push
rcll
jno
scas
fildl
aam
push
mov
movsl
ss
or
sub
nop
sarl
out
mov
shl
fsubrp
jl
add
rolb
pop
dec
scas
inc
hlt
jnp
sbb
jl
lea
out
mov
or
add
jecxz
pusha
pop
sbb
shrb
jo
mov
mov
lods
ret
mov
xchg
jne
enter
jmp
pop
and
sti
jb
sbb
adc
push
xchg
jg
test
in
push
lahf
dec
mov
imul
loopne
lret
sbb
inc
or
or
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
add
xor
jg
jl
insb
mov
scas
repz
jecxz
sub
popa
or
loopne
cmpsl
xorb
hlt
adc
pop
loop
lea
add
pop
adc
dec
and
push
pushf
sub
flds
cwtl
push
push
pushf
sub
dec
nop
int
jecxz
inc
dec
movsb
imul
mov
mov
mov
inc
mov
scas
and
ljmp
jo
mov
cmpsl
xor
mov
sbb
out
or
pop
aam
or
subb
std
push
pop
sub
dec
inc
ds
jle
inc
gs
push
test
sub
jb
mov
or
in
loopne
and
mov
xchg
dec
pop
jae
mov
push
adc
sbb
lods
divps
mov
mov
loope
mov
push
fdivrl
adc
inc
sbb
mov
ret
push
pop
int3
xchg
pop
sbbb
and
push
enter
dec
fwait
push
pop
xchg
mov
jb
inc
pop
pop
inc
mov
cwtl
pop
xor
movl
xor
addl
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
scas
ljmp
jg
jl
test
push
bound
sti
test
push
or
cwtl
mov
xchg
jno
sbb
sbbl
cs
cmp
adc
repz
fnstenv
dec
mov
xor
scas
cmp
mov
jo
out
jb
repz
dec
jg
lock
sub
mov
mov
hlt
mov
fdivrs
mov
xchg
in
cmc
ret
ret
inc
repnz
mov
jnp
xchg
jmp
or
mov
jb
sti
jg
pop
cmpsl
leave
hlt
insl
loopne
mov
fcmovne
jecxz
insb
fisubl
jbe
push
movl
jns
add
mov
mov
sub
lods
mov
std
xor
push
cmp
cmovb
pop
std
fisubl
jp
pushf
imul
dec
push
mov
jae
and
pop
push
xchg
pushf
ret
outsb
mov
xchg
xchg
and
cmp
mov
xor
add
push
js
stos
div
mov
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
push
jns
push
gs
jl
jo
mov
or
jge
je
push
cmpsl
js
cmp
xchg
push
push
aad
add
pop
push
sbb
ljmp
adc
std
xor
pusha
add
movsl
out
data16
fstpt
xchg
es
mov
pop
push
adc
ja
push
outsb
test
ror
push
inc
iret
mov
divl
stos
aaa
and
in
imul
movsb
ds
cmp
je
and
mov
int
mov
push
pop
aad
push
cmp
stc
not
or
mov
mov
push
mov
shrl
imul
imulb
pop
push
dec
ljmp
test
dec
cmp
pcmpgtb
add
inc
fsubr
jae
nop
popa
icebp
xchg
cmp
xchg
xor
add
lret
pop
inc
hlt
mov
js
xor
rcrb
ja
outsb
leave
popa
or
and
movsl
pop
adc
xchg
sub
lock
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fistpll
gs
push
getsec
jl
push
jg
jl
adc
aaa
inc
lock
jge
insl
pop
add
fwait
inc
test
push
sbb
out
sti
mov
repnz
fbstp
fisttpll
scas
push
fdivrs
mov
mov
ds
sub
gs
sbb
add
and
dec
sahf
scas
jnp
sub
pop
push
nop
fsubr
std
fisubs
dec
dec
mov
add
jmp
jns
add
fs
dec
ss
dec
add
mov
pand
push
add
add
jbe
outsb
nop
jecxz
insl
push
mov
mov
rol
dec
fisttpll
cmp
xchg
into
jnp
push
jp
dec
mov
push
mov
shlb
arpl
je
sti
sub
mov
push
in
pop
jg
sbb
or
push
pop
icebp
push
bound
mov
shll
adc
daa
lret
and
sti
jb
scas
arpl
or
pop
or
or
ljmp
call
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
sbb
jmp
sub
cmc
xor
and
jne
outsb
dec
mov
test
xchg
lds
test
fildll
fs
or
in
outsb
fisubrs
lret
xchg
inc
pop
lea
pop
inc
cwtl
shrb
jb
insb
jae
ret
sub
movsb
and
rorb
push
adc
incl
push
cwtl
pushl
mov
push
mov
and
pop
pop
xlat
inc
bound
xchg
arpl
das
or
cmp
fdivl
cmp
dec
pop
or
push
xchg
enter
sub
cmp
jecxz
push
in
pop
or
push
mov
rdpmc
shrb
fs
andb
sub
mov
jle
notb
rcll
jle
pop
jge
cwtl
repz
push
jl
sbbl
jle
imul
ljmp
imul
or
fmulp
mov
das
cltd
scas
sub
push
hlt
mov
add
mov
sub
mov
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
call
jl
jg
jl
test
push
movsl
push
add
cmovs
inc
and
clc
add
stc
mov
out
cmpsl
pop
aas
aas
out
or
scas
je
jb
or
sti
push
add
int3
test
ret
iret
shrl
jo
in
insb
cmp
jmp
jo
push
xlat
les
inc
sbb
push
sahf
out
push
test
test
inc
push
into
sahf
test
inc
daa
push
ds
repz
mov
xlat
nop
adc
aas
mov
adc
jge
shrb
lods
mov
pop
outsl
jecxz
testl
xchg
mov
mov
mov
cmpsl
jns
out
mov
cwtl
xchg
xor
cwtl
loope
in
es
dec
pop
lret
ret
fisttps
push
mov
rcr
adc
ret
mov
xchg
jns
fisubrl
sbb
add
dec
rcr
into
subb
lds
fs
cltd
sub
cld
stos
jno
aas
std
and
xor
inc
std
jmp
inc
cld
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
lret
enter
jg
jl
pop
out
mov
js
push
lcall
cltd
out
leave
pop
popf
imul
mov
lock
xor
shrb
xor
iret
inc
les
mov
sbb
outsl
and
jecxz
inc
mov
add
adc
sub
in
das
sbb
pop
push
aad
fdivrs
push
push
pop
sub
push
in
pop
orl
xchg
and
dec
bswap
adc
inc
xlat
xchg
sub
insb
mov
cmc
and
dec
lea
sahf
pop
xor
inc
sbb
jg
cmp
xor
adc
cmp
inc
mov
adc
dec
cmpsb
pop
rcrl
js
mov
and
mov
fcmove
or
ret
sarl
mov
loopne
mov
scas
fabs
mov
test
nop
push
add
test
mov
mov
leave
pop
xlat
lahf
inc
dec
fstps
lds
cmp
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
arpl
and
lret
jl
mov
xchg
xlat
push
andl
divl
imul
adc
mov
lock
jno
xchg
adc
xor
sub
inc
subl
xor
insb
ret
stos
xchg
fdivrs
mov
push
push
loope
pop
pop
aam
jo
loope
mov
and
ds
cmp
je
stc
cmp
add
sub
mov
je
cli
mov
pop
pop
xchg
fisttpl
je
xchg
stc
sti
push
sub
imul
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
push
jg
jae
jl
mov
push
cltd
roll
add
adc
out
xlat
fldenv
and
jp
inc
repnz
or
scas
jp
pop
sahf
sarb
cmp
arpl
cmp
pop
mov
jl
cld
adc
push
out
mov
subb
movsb
add
add
movsb
enter
adc
jo
mov
sub
push
lret
push
sub
push
push
cmc
xor
sbb
inc
sbb
icebp
daa
xor
cmpsb
fadds
roll
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
push
scas
loopne
sub
shrb
stos
call
adc
sub
or
pop
stos
xchg
lret
and
dec
mov
push
cld
inc
pop
mov
mov
loop
mov
cmp
push
push
imul
pop
adc
cltd
iret
fwait
sbb
scas
test
pusha
sub
xchg
jmp
fwait
cli
and
or
push
gs
sarl
repnz
repz
test
xor
mov
int3
cld
mov
jo
jno
pop
push
fsts
sub
icebp
daa
dec
in
insb
negb
shrd
pop
test
test
js
stc
ljmp
cmp
scas
cmp
stc
mov
cmp
lock
pushf
mov
pusha
cli
ficoml
or
sub
push
mov
daa
push
pop
xor
loop
inc
je
cmpsb
lods
mov
mov
std
sbb
jno
mov
ljmp
jne
and
mov
movsl
add
daa
pop
int3
sub
jle
or
dec
xchg
outsl
mov
js
aam
in
adc
movsl
push
inc
push
push
dec
lods
adc
push
repnz
cmp
xor
rorl
add
in
inc
add
jnp
add
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
divl
jl
daa
jg
jl
mov
and
addl
adc
push
pushf
bnd
cmp
pop
cld
add
shrl
test
andl
push
js
jns
mull
pop
inc
sbb
and
sti
sub
mov
mov
mov
ret
jmp
pop
pop
andl
mov
push
je
mov
jns
jb
sub
fldenv
roll
pop
mov
sti
inc
inc
add
mov
in
lods
into
das
daa
shlb
xor
jecxz
aas
iret
push
and
cmp
andb
bound
jo
sub
in
xchg
ret
push
pop
sub
xor
xchg
add
insb
call
rcr
stc
pop
lods
push
jp
aaa
iret
loopne
fidivl
dec
roll
adc
shlb
les
jle
fdivrl
in
pop
mov
loop
jno
enter
adc
jecxz
mov
ret
or
pusha
sub
sbb
shll
ds
pop
xor
in
mov
shlb
pop
dec
pop
dec
sbbb
shll
sbb
add
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
shll
jl
daa
jg
jl
xlat
in
or
inc
pop
mov
sbb
mov
incl
pop
inc
push
loope
fdivrl
test
imul
std
sbb
loopne
jae
push
and
stc
sub
jmp
mov
sbb
std
cmp
cmpsl
xchg
cmpb
cmp
mov
push
jae
aam
xor
push
lret
test
push
je
cmp
inc
and
outsl
xchg
lcall
aad
and
nop
mov
cwtl
pusha
out
fimull
enter
clc
cwtl
cltd
inc
cmp
adc
sbb
cwtl
pop
iret
test
sub
and
mov
add
and
inc
popf
les
daa
jb
dec
jp
pop
outsl
pop
loope
paddsw
mov
or
jl
stos
add
addr16
ret
aas
out
and
mov
push
rorb
in
or
shll
push
mov
aad
xchg
shlb
fsubr
sbb
dec
add
adc
add
pop
dec
orb
lods
xchg
test
nop
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
inc
fisttps
idivl
into
jl
daa
jg
jl
jle
scas
insl
jl
ljmp
sahf
xchg
std
jecxz
push
push
add
lret
xchg
fcoml
or
lock
cwtl
rorb
out
adc
pop
sti
lods
ja
jmp
dec
in
cmp
insb
arpl
out
push
mov
mov
mov
xchg
lock
adcb
xchg
pop
sub
pop
or
and
in
sub
pushf
popf
ja
or
xchg
mov
pushl
pop
mov
pminub
sbb
add
pop
mov
sbb
data16
inc
mov
cmp
and
pop
mov
mov
scas
mov
rolb
fldt
and
or
sub
sub
jne
push
inc
inc
in
xor
add
movsb
cmp
push
xor
jnp
int3
in
rorl
aas
and
cld
lods
mov
inc
fists
push
mulb
lods
jbe
sbb
xor
mov
je
int3
dec
xchg
rcr
out
and
xchg
push
cld
xlat
ss
push
dec
add
jp
mov
flds
and
inc
call
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
lds
sarl
jl
sub
outsb
mov
or
push
jns
inc
pop
stc
ljmp
ja
push
sub
test
cmc
push
jb
sub
sti
std
mov
out
in
lods
rcrb
mov
mov
fisubs
xor
aas
mov
lahf
xchg
cmc
mov
stos
rorl
cmp
sbb
pusha
cld
push
fdivl
xor
pop
add
inc
fadds
cmpl
cmpsl
add
frstor
jle
pop
xchg
cmp
and
sbb
push
jle
mov
xchg
jl
pusha
sub
or
xchg
jp
xor
cmpsl
and
sub
jmp
leave
mov
mov
xchg
jns
test
inc
in
movsb
add
add
ret
mov
xor
roll
jne
stos
loop
jl
cmpsl
add
mov
ljmp
shll
xchg
es
and
dec
jmp
test
mov
lret
addb
mov
sbb
test
mov
mov
dec
daa
in
add
stc
jnp
and
adc
popa
gs
inc
pop
dec
xchg
mov
pop
jne
mov
adcl
add
xor
jmp
add
in
arpl
cltd
jp
fldenv
mov
jl
lret
jl
out
incb
lock
mov
cli
sub
mov
mov
outsl
mov
iret
sbb
int3
jnp
pop
mov
add
add
test
lcall
jns
push
mov
inc
call
sbb
sub
leave
push
mov
xor
cltd
scas
into
sbb
fidivs
mov
fnsave
into
je
adc
ret
cmc
push
push
push
mov
ret
xlat
inc
dec
int3
jno
pusha
pop
sbb
enter
jg
mov
les
jmp
jle
cmp
sub
enter
loopne
pmulhuw
pop
stc
xchg
fidivrl
and
sbb
out
lock
outsl
idivb
loop
xchg
or
jmp
cmpsb
xchg
inc
sub
mov
inc
lret
into
les
and
mov
cmc
es
mov
pop
js
jp
aas
cmc
inc
mov
out
or
lahf
jno
cmp
stc
cld
sub
mov
rcrl
dec
jne
mov
fs
pop
xchg
cs
cwtl
icebp
mov
test
les
ljmp
sbb
xorl
cmp
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
add
rol
insl
lods
stos
push
push
out
inc
inc
xlat
jle
xchg
xchg
and
outsl
stos
pop
insl
loopne
cwtl
pop
jl
jle
inc
jle
inc
sbb
testb
lock
ja
lods
push
jle
dec
jae
push
in
xchg
push
sbb
or
fs
adc
cli
rcrb
lret
out
mov
les
jb
addb
jp
stos
shlb
std
sub
pusha
xchg
bound
scas
xor
cmpsl
mov
or
or
jb
scas
fwait
sbb
je
jp
jno
andb
add
outsl
mov
in
and
lret
push
inc
xchg
test
mov
xor
xor
and
xor
mov
test
icebp
lahf
jmp
loope
mov
push
jns
lret
xchg
mulb
ljmp
insl
je
aas
insb
xchg
cmc
mov
rcll
test
push
cmpb
call
jle
out
fcomip
mov
das
stos
mov
pop
dec
xchg
dec
in
xor
repz
addl
and
movsb
lods
adc
cmp
ja
inc
adc
fidivrs
outsb
pop
je
mov
jmp
jmp
xchg
test
loopne
bound
add
lds
jg
jl
test
clc
mov
hlt
xor
fcomip
scas
lds
add
enter
jne
adc
lods
notb
ret
inc
imul
iret
sbb
cmpsb
pop
mov
ret
aas
arpl
xlat
jno
imul
fsubrs
xor
rorb
xchg
cld
nop
inc
fimuls
clc
xchg
int3
xchg
movsb
hlt
mov
in
aas
outsb
test
int3
movsl
dec
sbb
and
ror
sub
je
jp
add
cmp
es
dec
inc
out
dec
inc
loopne
test
leave
mov
mov
lcall
jno
jmp
xor
shl
xlat
idivl
cmp
push
repz
scas
mov
mov
ret
imul
or
jmp
cmpl
push
jl
inc
push
out
setae
cmp
pop
ret
sbbl
sbb
dec
inc
pop
inc
pop
dec
ljmp
pop
or
lds
xor
mov
loopw
xchg
sahf
in
pop
jg
mov
cld
les
cmp
xor
pop
lds
testl
lods
lds
pop
cmp
push
pop
into
dec
fldenv
sbb
mov
inc
cld
jmp
aam
rolb
pop
fs
jge
ficoms
aaa
lcall
jg
jl
enter
pop
rcrb
sbb
jge
inc
xlat
lcall
ss
mov
and
data16
lods
pop
push
add
xchg
cs
xchg
in
adc
mov
mov
sub
mov
inc
xor
push
and
cmp
and
out
and
cmpxchg
shll
das
rep
add
aas
dec
vmwrite
daa
stos
push
sbb
fisttpl
cmp
fs
push
xchg
jbe
push
popf
cmc
in
rorl
cmp
in
loope
push
sbb
dec
ror
mov
jge
sbb
lret
xchg
repz
jecxz
popf
pop
push
dec
push
ffree
lcall
std
ret
ss
aam
call
mov
sbb
inc
push
push
loopne
mov
shll
pop
ljmp
ljmp
call
aam
add
jo
pushf
adc
xlat
iret
jge
jp
addr16
push
mov
out
lea
filds
push
inc
in
std
inc
ret
in
push
shrl
mov
loopne
and
cli
mov
iret
shll
add
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
loopne
das
pop
loope
add
pop
add
mov
jg
mov
mov
pusha
adc
add
adc
push
mov
adcb
push
dec
scas
fucompp
xchg
dec
inc
inc
cmp
add
inc
push
mov
fadds
ret
outsl
jge
push
push
or
int
lret
imul
pop
test
xor
in
lret
xchg
pop
jns
mov
shr
bound
testb
xor
bound
mov
lcall
pop
push
repz
mov
push
mov
xchg
xchg
inc
mov
movsl
add
push
inc
push
xor
lds
cwtl
cmp
repnz
fstps
sbb
cltd
xchg
into
cmp
adc
sahf
add
in
sub
cmp
xchg
cmpxchg8b
sub
jp
mov
stos
jo
testb
repnz
scas
cmpsb
or
cmpsl
leave
jmp
cmp
dec
std
fmul
add
mov
imul
shlb
push
fwait
lret
jb
and
jg
aaa
pusha
fwait
imul
loope
clc
mov
ljmp
mov
mov
ficoml
dec
mov
in
dec
sarl
movsl
inc
iret
rorb
ja
loop
iret
jmp
in
pop
sbb
pop
inc
xchg
rcl
gs
inc
enter
and
xlat
and
imul
push
cmp
jle
or
out
scas
fldenv
cwtl
push
clc
mov
push
mov
jmp
jnp
push
sbb
arpl
fld
dec
rclb
push
sbb
fildll
movsl
cmpsl
mov
cmp
sti
clc
xor
clc
jmp
mov
fnstsw
jmp
ljmp
divl
pop
mov
push
or
add
mov
xor
cmp
imul
cli
xlat
cmp
cmp
jecxz
insb
pop
push
or
out
and
cwtl
test
pop
xchg
dec
hlt
dec
and
sub
jno
aad
cmp
jmp
test
and
sub
jb
pop
jl
mov
push
cwtl
cmp
cmp
mov
add
icebp
cli
cltd
ficoml
dec
loope
les
repz
push
mov
sub
push
divps
jbe
xchg
sbb
mov
pop
push
cmc
push
das
addr16
inc
pop
addr16
lahf
mov
sbb
call
fucomip
scas
mov
pop
negl
loop
mov
fistpll
fnstenv
les
xchg
pop
enter
mov
fbld
ss
popf
dec
push
loopne
push
insl
jmp
or
push
cltd
sub
mov
inc
lcall
loopne
and
ljmp
mov
add
in
add
cli
adc
push
clc
push
push
add
xchg
lcall
dec
pop
in
push
hlt
movsl
push
clc
in
xor
nop
mov
adc
jbe
in
mov
push
aam
mov
push
mov
adc
shlb
pop
jns
or
into
push
or
rcr
fisubs
adc
shll
stos
repnz
or
imul
mov
cmp
or
test
stc
pop
mov
jnp
loope
mov
in
push
and
jle
lods
scas
arpl
push
out
enter
insl
cs
in
lods
jmp
mov
pop
jge
rorl
arpl
mov
xor
cmp
dec
pop
nop
fwait
mov
sub
mov
cli
pop
xchg
jg
fmull
test
cmp
stos
rol
bound
fnsave
mov
sbb
jmp
movsb
shll
pop
cld
das
sbb
xchg
sbb
ljmp
mov
push
adc
push
push
js
adc
dec
pop
dec
insl
fcomip
pop
cmpsb
dec
aaa
scas
jne
sbbl
cmp
push
jb
add
inc
sahf
imul
ret
cmp
cmp
cmpb
clc
out
and
dec
into
pop
test
daa
cmpsb
ljmp
mov
roll
and
sbb
push
mov
mov
popf
jmp
sub
or
pop
aaa
pusha
call
mov
jle
jb
les
cmp
lock
in
pop
ss
out
jmp
pop
sub
pop
lods
xchg
inc
xorb
call
fbstp
shrb
adc
test
aaa
cmp
inc
scas
imul
xor
rol
pop
stos
xchg
adc
cmc
jnp
sub
jp
xor
jl
mov
inc
out
inc
into
in
sahf
pop
cli
mov
pop
cmpsl
xchg
xchg
add
aad
lret
and
pop
cmpsb
mov
mov
test
idivl
xchg
arpl
dec
cwtl
in
loop
cli
iret
cld
insl
lcall
das
mov
inc
xchg
scas
cli
mov
iret
hlt
mov
data16
mov
repnz
rolb
hlt
lods
pop
loopne
push
sub
mov
sub
scas
push
cmc
push
ret
sub
or
mov
jae
pushl
mov
mov
xlat
inc
in
inc
adc
mov
mov
ss
mov
mov
push
pop
fnstcw
data16
mov
add
xchg
mov
jg
push
dec
mov
test
rcll
rorb
dec
data16
pusha
imul
mov
sub
xchg
ret
lret
jp
movsl
jnp
aas
xchg
jge
pop
xchg
imul
mov
or
mov
fadds
aad
sbb
icebp
outsl
pop
and
shlb
or
xchg
xchg
subl
jo
push
jne
in
pop
jo
push
gs
pusha
fdivl
pop
aaa
lods
pushf
dec
xor
gs
mov
mov
mov
inc
addr16
mov
jecxz
test
cmp
imul
lret
cmp
sub
rclb
ja
jb
xchg
aad
xchg
adc
mov
mov
insl
into
aam
out
or
and
pop
fcmovb
imul
stos
call
leave
imull
int3
leave
pop
mov
pop
call
pop
testb
push
sub
ror
sub
mov
or
add
pop
out
filds
fstpt
out
sahf
cmp
insl
ficoml
add
sub
push
jbe
punpckhwd
mov
scas
mov
inc
xchg
outsl
int3
jge
jnp
shl
inc
cmp
jg
sub
pop
pop
mov
or
jo
xchg
sbb
add
add
xchg
mov
sbb
call
add
mov
add
movsb
adc
adc
pop
sbb
icebp
sbb
jno
mov
adc
and
shrl
adc
or
lods
call
push
pop
cmp
imul
out
jl
ret
xchg
and
or
rcll
rolb
dec
push
mov
mov
je
lock
pushf
or
je
pop
xchg
add
sarb
adc
fisubrs
pop
sub
jp
std
mov
mov
jmp
test
xor
dec
push
or
sub
pop
in
adc
ret
dec
mov
outsl
loope
push
pop
mov
scas
xchg
dec
in
das
ret
xor
sbb
fmull
mov
xchg
push
mov
push
jb
es
sbb
roll
pop
aaa
push
inc
pushf
cmpsl
imul
dec
pop
add
pcmpeqw
hlt
arpl
sar
rolb
and
jnp
cmp
jp
jb
push
in
sub
stc
sahf
push
jmp
mov
cmpsb
push
ds
mov
xchg
mov
jmp
enter
jae,pn
in
dec
frstor
mov
dec
inc
loop
popa
push
mov
lcall
lcall
mov
push
add
mov
lahf
dec
dec
popa
xchg
int
hlt
test
mov
mov
adc
adc
clc
scas
filds
daa
jge
lods
or
insl
mov
mov
sti
pop
loopne
inc
icebp
jbe
nop
mov
inc
mov
adc
mov
mov
xchg
out
pop
aad
or
andl
mov
jge
adc
stc
jl
inc
pop
ja
loopne
jmp
jno
push
xchg
cld
xchg
cmp
incl
cltd
sub
add
jg
mov
pusha
adc
stos
fwait
outsb
adc
in
ret
out
push
testl
jo
rcll
call
fs
xor
pushf
dec
fcomi
cwtl
clc
push
out
rorl
pusha
push
cs
imul
xorb
nop/reserved
lea
cld
jno
push
adcb
push
iret
sbbl
loop
push
push
mov
insb
xor
loope
mov
bound
test
mov
imul
lods
loop
jno
dec
ficomps
sti
dec
jne
pusha
int3
xchg
stc
pop
dec
push
rclb
ljmp
lret
fdivrl
repnz
xchg
xor
out
mov
cmpsl
in
add
unpckhps
rorb
pushf
js
pop
mov
add
jnp
outsl
sti
and
lcall
inc
stos
xlat
hlt
lahf
push
xchg
bound
adc
aas
inc
les
pusha
xlat
adc
jb
in
ret
shrb
dec
sahf
or
mov
push
pusha
sub
inc
loopne
jl
scas
popa
in
sti
push
and
ja
jo
push
jnp
sub
mov
data16
das
pop
ja
and
inc
sarb
jo
call
jl
lods
outsb
jns
or
mov
and
sub
movsb
pushf
and
cmp
and
sbb
dec
adc
or
and
rcrl
das
mov
lods
sbb
inc
imul
add
imul
aam
fwait
pop
pop
xor
test
mov
fdivrs
sti
sbb
sbb
or
les
imul
dec
hlt
data16
loope
sub
mov
sbb
shlb
imul
inc
movsl
fs
xor
inc
sbb
xchg
pop
push
pop
jg
sahf
movlhps
jle
push
jo
or
xchg
jb
sub
cmp
push
mov
aaa
push
jg
mov
xchg
xchg
mov
jmp
jae
jno
mov
cmc
mov
cmp
dec
jae
mov
cmp
shll
sub
jle
cmpsl
mov
cltd
push
xchg
loope
mov
ret
push
sub
rclb
or
jne
sbb
add
xchg
push
andl
push
int
frstor
aas
cmp
and
outsb
fcomip
inc
jge
mov
jmp
mov
adc
test
into
lret
dec
ljmp
test
pusha
aaa
lods
sub
pop
mov
sbb
fdiv
or
xchg
lock
in
mov
and
or
adc
inc
mov
jg
fmuls
xlat
xor
enter
das
mov
pop
sub
cmpsb
fisubrs
push
pop
mov
dec
and
hlt
stc
daa
ret
push
repnz
sbb
test
scas
sub
dec
stos
jnp
rorb
inc
dec
push
mov
and
fmuls
jne
ljmp
filds
out
dec
pop
imul
push
or
push
xor
push
imul
inc
test
je
sbb
lock
fmul
or
outsl
scas
pop
rorb
imul
mov
imul
jg
mov
jge
pop
push
jle
lahf
cwtl
or
jmp
jno
jnp
lods
bound
or
xor
vucomiss
stos
mov
sar
push
add
and
call
pop
std
inc
or
jmp
call
pushf
xlat
ja
push
and
xchg
mov
inc
lds
nop
adc
mov
inc
ficompl
jne
mov
imul
cmpsl
sbb
mov
cmp
sub
xor
hlt
std
add
data16
test
cmp
or
push
push
fld
dec
xchg
lcall
add
popa
push
mov
or
ljmp
cmpsb
mov
test
xor
inc
call
sahf
rcrb
sub
pusha
fwait
leave
mov
jne
mov
iret
les
add
mov
in
inc
xor
int3
sub
insl
ficompl
fistpll
push
cs
rorl
int
fbstp
insb
cmc
fists
mov
inc
je
push
jno
shrl
jmp
stc
mov
dec
int
out
movsb
mov
aaa
cmpsl
add
pop
jns
pusha
in
xchg
xchg
leave
in
adc
adcl
leave
insb
add
gs
jle
xlat
dec
add
jns
sbb
inc
push
test
sahf
push
in
add
add
fs
mov
aam
mov
out
add
and
add
jmp
xor
dec
loope
out
add
inc
mov
xor
push
dec
pop
mov
add
or
loop
lahf
sbb
mov
xor
adcl
int3
fcomp
sbb
out
or
xor
push
inc
adc
seta
dec
mov
lret
std
cs
incb
sub
fsubrl
outsb
sbb
jl
lcall
stc
test
jecxz
pop
mov
inc
jp
cmp
cmpsb
push
lock
mov
cmp
mov
insb
outsl
mov
inc
push
add
jnp
out
dec
inc
add
adc
inc
mov
adc
push
cmp
push
gs
test
or
and
sub
push
jmp
xor
stos
xchg
mov
sbb
mov
dec
sti
fwait
in
lods
loopne
das
mov
xchg
arpl
movsl
repz
aam
pushf
or
inc
pop
adc
ror
ffree
cmp
loopne
mov
adc
fldcw
mov
pop
aas
ja
clc
mov
mov
ss
jnp
lods
lds
cmp
cs
push
sbb
fidivrl
push
mov
push
lret
test
and
out
out
outsl
jae
fstl
sbb
mov
push
xchg
pop
rcr
icebp
add
loope
push
hlt
sbb
xchg
add
divl
jb
push
cs
mov
into
popf
int
and
dec
inc
push
std
outsl
inc
stos
add
lods
fistpll
dec
pushf
fcomps
jnp
cmc
dec
jmp
in
xchg
mov
rclb
jno
in
pop
popa
pop
sbb
fwait
xchg
lods
fcmovu
insb
mov
fidivl
cmc
scas
int
dec
mov
inc
mov
push
lods
rorl
ljmp
test
leave
insl
xchg
and
adc
into
insb
addr16
mov
mov
mov
fnstsw
incb
roll
icebp
xor
add
je
ret
add
jmp
fstpt
lcall
call
xorb
cld
cmpsl
xchg
push
cwtl
xor
or
scas
adc
data16
mov
sbb
cmc
out
ss
aas
scas
aam
enter
lods
iret
push
adc
stos
inc
xchg
dec
mov
jmp
mov
pop
icebp
add
adc
ret
push
pushf
xor
sbb
jg
addr16
mov
push
mov
lods
fwait
scas
loop
jmp
out
pop
xchg
mov
and
inc
mov
daa
cmp
jle
or
clc
leave
gs
or
and
and
in
iret
std
mov
dec
loop
and
out
pop
in
in
das
mov
enter
ret
sti
adc
dec
jbe
and
push
inc
push
repz
out
xadd
mov
out
push
cwtl
add
test
test
mov
stos
and
mov
mov
das
cltd
jo
and
mull
in
add
cmpsl
iret
add
or
mov
cmp
movsb
jmp
mov
jnp
cmp
inc
jbe
mov
fdivrl
cmpl
adc
xor
pop
getsec
ret
cmpsb
cmp
sbb
lds
loopne
les
inc
out
in
inc
mov
lahf
mov
int
fisubs
inc
cmpsb
sub
popa
xor
sbb
xor
push
repz
jmp
enter
and
mov
into
cld
push
bound
test
jmp
add
jl
pop
xchg
stos
mov
adc
lret
push
xchg
stc
push
push
pop
add
idivb
and
mov
mov
sbb
aas
add
xor
jl
mov
sbb
leave
repnz
sub
pop
jp
adc
test
inc
nop
xlat
mov
dec
ret
mov
or
invd
int3
scas
scas
ja
mov
fwait
mov
push
jo
xlat
jns
pop
pop
std
and
aam
mov
push
call
in
jg
or
and
test
cmpsb
addr16
frstor
shl
or
mov
cmpb
int3
lods
mov
jnp
inc
mov
rcrl
add
sub
dec
icebp
push
ret
fwait
mov
arpl
loope
enter
inc
shlb
pushf
inc
cltd
jle
dec
iret
pop
cmc
push
stos
sbb
add
fisubrs
pop
mov
mov
mov
sbb
movsb
sub
jmp
cmp
insl
shll
mov
xchg
stos
sub
call
loop
mov
je
xor
pop
sub
push
and
push
or
in
mov
fldenv
mov
scas
dec
pop
jo
shlb
mov
xor
xchg
sub
push
sarb
stos
into
je
stos
dec
rorl
jmp
scas
adc
pop
dec
mov
aas
and
cmp
pop
and
push
mov
mov
jg
shrb
lds
sbb
cmp
sbb
or
jno
fistps
mov
or
ja
cmp
dec
cwtl
in
mov
adc
push
pop
pop
cwtl
je
mov
loop
lcall
or
jmp
and
or
inc
pop
inc
pushf
sar
into
jge
sbb
sbb
lret
pop
xchg
sbb
inc
mov
cmp
les
inc
adcb
xchg
mov
andb
fs
add
jp
mov
cmp
jmp
fwait
inc
mov
push
sub
add
push
data16
lea
sbb
mov
inc
mov
lea
xchg
cli
arpl
add
sbbl
xchg
xor
lret
outsb
adc
mov
inc
lahf
aam
test
int3
mov
cmp
pop
mov
jg
mov
cmp
lahf
shr
daa
cmp
pushf
sub
pusha
cmp
mov
in
ss
dec
sub
sub
cmpsb
inc
push
loop
xlat
setge
movsl
sti
mov
andnps
xor
movsl
mov
xchg
sbb
in
rclb
lods
adc
iret
insb
push
sub
int3
mov
sbb
mov
cwtl
sbb
out
imul
dec
pop
cwtl
sbb
ja
push
test
push
push
std
push
repz
in
dec
sub
xchg
adc
cli
cmp
mov
mov
pop
out
enter
cli
push
sub
xor
xor
and
fs
es
inc
cmp
or
cltd
xchg
mov
add
add
ss
or
pop
in
testl
push
mov
pop
add
orl
adc
mov
cmp
xor
xor
outsb
sub
out
in
nop
aad
mov
or
fs
es
jnp
test
xor
sub
or
into
sbb
push
or
sbbb
and
bound
iret
push
and
xchg
push
mov
fcom
mov
cmp
sub
sbb
xor
fiaddl
cmpsb
or
call
push
mov
mov
or
cmc
add
cmp
popa
lods
xchg
pop
and
adc
xor
inc
jo
cmp
and
inc
xor
fwait
push
sub
lret
lret
sbb
xor
mov
test
jmp
imul
scas
jae
inc
dec
and
xlat
xchg
jp
add
daa
add
jmp
xchg
sub
push
dec
inc
sti
call
xor
jg
jg
mov
jmp
inc
lcall
sub
adc
mov
aas
loope
adc
out
or
pop
sbb
pop
push
jns
push
aam
inc
pop
std
enter
popf
adc
in
dec
mov
lcall
or
rorl
xchg
clc
add
je
je
or
aaa
or
sbb
jle
xchg
into
push
add
push
aam
xor
aas
sub
sbb
enter
aaa
mov
mov
and
cltd
xchg
jl
out
xchg
add
jo
mov
mov
flds
add
stos
mov
stos
sbb
shrl
add
ja
loopne
xchg
or
push
add
jle
cmp
push
test
inc
fdivrs
or
inc
into
icebp
ret
push
xlat
mov
lret
sub
int
dec
jg
mov
xchg
in
sbbb
jb
or
mov
movsb
lahf
push
push
movsl
fsubs
repz
out
mov
and
push
dec
fcmovnu
fnstcw
and
pop
jl
dec
jne
pop
in
in
pop
mov
hlt
inc
adc
cld
xorb
dec
iret
out
mov
jmp
mov
je
add
pop
int3
lds
loopne
lods
or
ret
outsb
mov
jnp
dec
push
xor
and
add
lret
add
jb
jecxz
out
loopne
inc
push
jmp
xchg
mov
mov
repz
push
lea
mov
mov
repz
addl
lock
popa
push
and
lret
lock
sub
imul
lods
outsl
adc
xor
jle
in
rcl
call
les
andb
or
pop
mov
subb
lock
mov
test
jnp
jg
jb
lods
sahf
cmpsb
adc
fadds
mov
or
or
popf
sti
imul
mov
pop
mov
add
in
ja
mov
cwtl
sub
adc
sub
rolb
pop
jg
xor
sub
imul
xchg
stos
das
add
repnz
dec
leave
inc
pop
cmp
add
xor
ficoml
xchg
pusha
pusha
scas
insl
lcall
cld
mov
filds
in
xor
je
decb
adc
and
pop
jno
adc
pop
js
or
aaa
mov
out
jle
inc
adc
loop
push
xchg
rclb
lods
dec
dec
pushf
add
lcall
mov
popa
imul
jb
dec
jae
int3
out
lret
push
fidivrs
cmc
mov
sbb
in
addr16
xor
or
movsl
push
cmp
xor
pop
mov
ret
data16
cmpsb
cmovs
test
jno
ret
call
pop
inc
adc
addr16
sub
sbb
outsl
cmp
loope
adc
and
out
adc
or
xchg
popa
test
push
int
mov
xchg
and
stos
sti
pop
loope
mov
jo
push
cmp
outsl
xor
lret
outsb
mov
js
mov
lret
push
jnp
jecxz
fisttpl
shrb
sub
mov
jmp
pop
sti
xchg
jmp
sahf
mov
sbb
push
leave
mov
jns
jmp
out
adc
jp
mov
sbb
dec
xlat
pop
push
xchg
clc
dec
jbe
mov
cmpb
imul
push
dec
faddl
pop
jmp
sbb
cmpsb
ret
sbb
pusha
jbe
xchg
mov
mov
mov
scas
fs
adc
mov
mov
xchg
or
sub
fsubp
jbe
mov
rorb
mov
pop
mov
xchg
das
addr16
xchg
sub
test
add
insb
cmpsl
mov
inc
pop
ss
xchg
xor
add
cmp
fnsave
inc
and
pop
fldenv
sahf
sbb
mov
or
popf
push
lcall
mov
les
int
add
fistpl
sub
imulb
ret
or
lret
cmp
mov
push
call
and
gs
mov
push
imul
push
pushf
mov
cltd
popf
cmpsl
sti
cmp
push
test
mov
shl
stc
mov
mov
xchg
mov
stc
xchg
ja
scas
push
stos
cmp
pusha
popa
adc
rclb
aas
cld
mov
mov
in
std
or
mov
push
cmp
test
movsb
xchg
sbb
sbb
adc
or
cs
sub
lods
scas
icebp
sbb
jmp
push
dec
cmp
add
outsl
subb
xchg
lcall
xchg
push
pusha
lock
push
cmpsl
mov
mov
and
mov
ja
jl
xchg
inc
adc
sbb
dec
js
jno
or
or
adc
and
mov
out
cli
push
cmp
mov
loope
pop
movsb
aad
dec
adc
inc
sub
pop
jbe
pop
ss
das
adc
leave
loop
inc
mov
cmpsb
jg
roll
rolb
jae
lret
mov
adc
data16
sbb
sahf
xchg
dec
cwtl
push
pmuludq
in
rcrb
inc
jl
dec
inc
pop
push
push
dec
adc
movsb
mov
filds
enter
jne
mov
push
arpl
mov
sub
iret
repnz
add
movsl
pop
xor
int
ficoms
jns
add
and
add
pop
int
push
rorb
xor
rorl
push
inc
adc
aaa
sahf
inc
daa
daa
mov
mov
call
mov
cmp
xlat
hlt
cwtl
mov
mov
adc
push
js
mov
push
mov
in
push
imul
jp
ret
jg
adc
imulb
push
add
aad
aaa
fnsave
jb
sbb
insl
jb
xor
jbe
je
adcl
or
loopne
add
arpl
jne
popf
or
xchg
jl
mov
xchg
add
mov
pushf
not
sti
cmp
lock
nop
push
sahf
scas
popa
or
sbb
lret
lahf
cwtl
pop
cli
jl
jae
ds
inc
jns
sbb
cmp
test
rcrl
shrl
mov
daa
lcall
sbb
sbb
icebp
xchg
cld
jns
xor
jbe
mov
movsl
lods
pop
and
jge
bound
dec
adc
loope
push
and
sbb
lds
push
jbe
mov
xor
lret
mov
loopne
movsl
sbb
cwtl
xchg
sbb
leave
add
jecxz
lahf
andb
pop
aas
je
popf
stc
lahf
lret
fmulp
idivb
mov
scas
adc
in
ja
pop
pusha
jge
and
sbb
ficoms
loop
shrb
js
xchg
or
mov
rcll
or
lea
push
xchg
sar
inc
pop
cli
hlt
jp
add
loop
clc
add
xchg
std
push
ficoml
sub
addb
and
cmp
push
add
mov
aad
xor
jnp
add
sub
test
movsb
jge
pop
jne
loope
icebp
sbb
std
push
sbb
enter
sbb
out
clc
mov
lds
dec
mov
add
scas
push
mov
lea
cld
cmp
mov
es
repz
and
test
nop
push
adcl
outsl
adc
mov
adcl
push
imul
xor
jns
mov
push
fmuls
shll
bound
jo
mov
lods
sub
rcrb
insl
and
jae
xor
pop
ljmp
adc
mov
mov
and
outsb
mov
fisubrl
ja
js
int
pop
pop
dec
jle
mov
xor
jne
cmp
mov
or
pusha
dec
sti
lcall
fisubl
shrb
inc
add
xchg
shld
push
sbb
mov
aas
and
fcompl
sub
fs
adc
or
jge
ret
enter
dec
cli
xchg
flds
adc
inc
mov
dec
mov
push
xchg
or
lahf
mov
ret
xchg
xchg
dec
cmc
insb
repnz
cli
jl
dec
flds
mov
fucomi
aas
jno
or
and
outsl
mov
sbb
movsl
lods
sbb
hlt
popf
add
ret
add
mov
mov
fistpl
ret
push
push
insb
hlt
aaa
scas
stc
or
pop
pop
jb
fstpt
and
lret
or
pop
loope
push
sub
add
insb
outsl
cwtl
push
dec
mov
shlb
sub
or
sub
sahf
sbb
pop
lods
fwait
sbb
arpl
inc
cmc
aaa
mov
pop
inc
cs
or
fbld
jo
sbb
pushf
cmp
xchg
sub
divl
call
sub
leave
xchg
sub
sahf
pop
pop
add
shrl
jmp
jbe
inc
xlat
push
xchg
and
stc
jbe
adc
out
addr16
xor
imul
push
jp
jns
sub
dec
popf
xor
gs
mov
lods
inc
inc
cmp
data16
in
inc
mov
mov
cmc
and
or
jns
mov
dec
andb
movsl
xchg
aaa
stos
ljmp
imul
jl
je
mov
mov
js
pop
pop
das
ds
mov
sub
adc
add
lcall
dec
jge
insb
pop
mov
stos
push
movsb
xor
fs
mov
aad
push
push
loope
push
mov
mov
fcmove
xor
jbe
test
andb
lret
xchg
lods
add
xor
push
rorb
push
xor
cld
dec
dec
fs
jne
ss
add
negl
leave
in
orb
imul
pop
sbb
cmp
mov
inc
pop
lret
or
mov
or
shrd
jp
mov
imul
jo
adc
ja
cli
sbb
scas
fnsave
loopne
adc
adc
inc
jbe
jl
movsl
pop
mov
or
aas
imul
dec
push
movsb
cmp
lcall
gs
push
xchg
std
mov
sub
adc
jnp
aaa
fwait
mov
or
mov
addl
orl
fwait
adc
mov
push
into
inc
imul
aam
cs
xlat
test
and
andb
push
lea
loope
push
ss
inc
aaa
jnp
xchg
cmp
jecxz
mov
mov
cmp
xor
adc
jne
lods
jp
hlt
push
xor
and
adc
test
mov
lea
popl
mov
in
or
jle
flds
mull
aas
xchg
dec
inc
clc
call
scas
mov
cmpsl
add
aam
xor
sti
mov
je
xchg
in
jmp
ljmp
cwtl
inc
xchg
les
in
movb
xchg
std
and
push
pushf
jnp
and
pop
repz
inc
and
jno
aad
das
xchg
loope
cmpsb
or
jbe
lret
mov
inc
mov
cli
daa
cmpl
mov
xor
fbld
jns
cld
and
andb
add
loope
lds
fsubrs
sbb
mov
pop
inc
loopne
xchg
jge
adc
ljmp
sub
mov
rolb
or
add
popf
out
sbb
enter
push
or
stos
adc
out
push
sub
xchg
add
cmpsb
loopne
pop
je
add
mov
in
in
sub
pop
mov
into
icebp
ja
inc
outsl
movsb
daa
jbe
idivl
mov
divl
outsl
sti
add
add
pop
add
cmp
jo
or
xchg
jmp
gs
lods
test
pop
outsb
push
mov
or
add
mov
mov
and
jg
jns
stos
xchg
stos
push
jbe
and
cmp
pop
sub
dec
dec
or
lcall
pop
out
pop
sbb
mov
cmp
push
lea
pop
inc
lret
outsb
cmp
sbb
push
cli
repnz
sbb
dec
mov
popl
test
cmp
js
jo
lret
jp
ret
repz
rcr
scas
fwait
lret
sar
or
jmp
fcoms
scas
sub
add
lods
push
mov
mov
and
mov
in
mov
sarb
mov
insl
lahf
pop
or
ret
xchg
fwait
call
das
enter
jge
xor
testl
adcb
sub
mov
outsb
lea
notb
aad
cmpsl
mov
test
dec
xchg
in
out
loopne
cld
rcrl
cld
xchg
fsubrl
jecxz
mov
aad
icebp
add
jnp
js
xchg
jo
cmp
cli
ret
sahf
xchg
or
mov
mov
and
xor
lret
add
mov
fnstcw
xor
fs
cltd
cmpsb
data16
adc
adc
cwtl
mov
cmp
jnp
add
sti
push
repz
sbb
sbb
pop
inc
sub
jo
out
imul
jb
roll
jns
mov
dec
sub
ja
pushf
jg
fnstenv
sahf
lret
mov
mov
push
outsb
js
ja
rorb
mov
loopne
and
repnz
out
aad
in
pop
ds
sbb
xor
cmpsl
mov
mov
jae
or
mov
popl
push
das
addr16
mov
sbb
repnz
mov
into
pop
pop
pop
mov
jl
pop
pop
cmpsl
call
out
jg
mov
sub
push
xor
add
in
jne
cli
add
imul
and
gs
mov
lods
pop
mov
insl
cmp
jb
bound
mov
lock
mov
daa
pushf
lds
xor
cmp
sarb
dec
mov
dec
and
aas
or
pop
and
clc
aas
in
jns
into
xchg
div
sbb
mov
sbb
push
sbb
jecxz
lods
out
or
insl
push
mov
jl
jbe
int3
repnz
mov
in
pop
inc
test
adc
movsl
sub
jns
cltd
in
adc
adc
roll
les
or
xchg
xchg
xor
mov
push
mov
mov
mov
pusha
sahf
pop
mov
mov
lea
mull
loope
es
push
mov
test
jb
cmp
les
mov
loopne
sbb
movsb
inc
shll
mov
fwait
xor
stc
and
imul
xchg
sbb
lods
sbb
roll
pop
stos
mov
setbe
ret
and
movsl
outsb
jp
ja
das
mov
cmpl
sbb
popf
mov
mov
xor
sub
push
and
test
lods
out
dec
jl
xor
xor
call
bound
cmpl
jb
xchg
pushl
fdivrl
std
aaa
and
cmp
jmp
adc
test
inc
loopne
repz
ret
dec
enter
outsl
cltd
mov
sub
ljmp
icebp
pop
leave
lret
add
scas
or
and
test
icebp
in
xor
mov
mov
int
pushf
lcall
xchg
lret
fisttpl
pop
scas
and
xlat
jecxz
push
mov
cltd
inc
fnstenv
jge
out
outsl
into
jg
sahf
sub
cltd
arpl
dec
and
icebp
test
dec
sub
pop
fmuls
in
imul
push
in
dec
pop
hlt
push
ret
xchg
sub
dec
xor
rcrb
xchg
shl
mov
gs
ja
and
push
andl
fsubrl
js
and
test
add
arpl
pop
mull
pop
fsubrs
push
int3
movsb
out
ficoml
or
mov
jno
out
adc
cs
cmp
push
add
fwait
sahf
aad
adc
sub
psllq
jge
hlt
or
jb
push
mov
sbb
jmp
je
lahf
in
cmc
xor
jb
in
mov
scas
jae
inc
clc
jmp
in
and
in
mov
ds
popf
cmp
stc
or
fmull
inc
inc
mov
cld
in
int
inc
or
cwtl
nop
mov
leave
or
out
cmp
in
push
data16
popl
jnp
and
fidivl
mov
push
cwtl
sbb
jecxz,pt
addr16
lods
decl
mulb
and
aam
cld
pop
stos
push
sub
inc
arpl
adc
sub
jge
push
popa
mov
arpl
inc
cmp
pop
jo
fisttpll
ficoml
lcall
loop
out
sbb
pcmpeqb
and
pop
mov
mov
mov
adc
fnstcw
mov
jo
sub
enter
ljmp
mov
fsubl
push
cmc
mov
sub
jb
fbld
xor
or
and
icebp
mov
mov
cmc
fstl
sub
jle
mov
rolb
fnstenv
pop
jb
popf
sbb
insb
outsl
bound
push
cmp
pop
push
push
xchg
dec
jbe
jbe
andl
mov
fbstp
jg
mov
sbb
scas
aaa
or
cmp
int3
dec
cld
lds
fwait
mov
bound
lret
inc
loope
pop
inc
imul
push
movb
push
adc
cmp
shll
push
rcrb
out
gs
out
icebp
ret
aaa
stos
xor
sbb
pushf
sbb
aam
inc
xor
movsb
jnp
outsl
xor
sbb
aas
sub
imul
xchg
mov
mov
adcl
mov
out
push
fadd
psrld
scas
les
push
stos
scas
pop
and
dec
lcall
add
add
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
or
add
rolb
add
or
add
xor
add
pusha
pop
add
loopne
add
adc
add
sub
add
pop
or
adcb
cmpb
add
mov
or
adc
add
lock
addb
add
add
add
add
add
add
add
in
push
add
in
push
add
add
addb
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
add
add
add
pop
add
test
add
lcall
xorb
add
loopne
add
add
add
add
add
add
add
incb
add
insb
adc
add
add
subb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
inc
or
sbbb
addb
add
add
add
add
add
add
add
outsb
or
xorb
addb
sbbb
cmpb
add
mov
add
add
add
add
add
add
add
rorb
add
jae
add
call
add
add
add
add
add
add
add
jmp
add
add
add
add
sbb
subb
add
dec
add
addb
add
add
add
add
add
add
add
repz
add
add
js
add
add
add
add
add
add
add
or
adcb
add
test
add
rolb
bound
add
fadds
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
xor
add
adc
add
in
add
add
add
inc
sbb
add
add
in
add
add
add
pop
and
add
in
add
add
add
outsb
add
or
add
in
add
add
add
jns
add
adc
add
in
add
add
add
mov
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
jbe
add
or
add
add
add
add
add
jg
add
add
in
add
add
add
aad
add
adc
add
in
add
add
add
in
add
or
add
in
add
add
add
icebp
lcall
in
add
add
add
std
mov
add
in
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
mov
add
in
add
add
add
sub
add
adc
add
in
add
add
add
cmp
add
adc
add
in
add
add
add
dec
fiaddl
add
add
in
add
add
add
push
jecxz
add
or
add
add
add
add
add
add
adc
add
in
add
add
add
jne
add
or
add
in
add
add
add
jge
add
or
add
in
add
add
add
mov
add
or
add
in
add
add
add
xchg
adc
add
add
in
add
add
add
mov
or
add
add
add
add
add
add
pop
add
inc
add
xor
pop
add
pop
add
aaa
add
add
xor
dec
add
cmp
push
add
add
dec
add
add
add
push
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
or
inc
add
push
add
xor
add
add
add
push
add
add
add
inc
add
add
add
xor
push
add
dec
add
add
inc
add
add
xor
pop
add
inc
add
add
pop
add
add
or
push
add
push
add
add
add
dec
add
push
add
push
add
or
pop
add
dec
add
xor
aaa
add
inc
add
add
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
add
dec
add
pop
add
dec
add
push
add
xor
inc
add
add
pop
add
add
add
cmp
cmp
push
add
add
add
push
add
pop
add
xor
add
add
add
push
add
add
dec
add
xor
xor
pop
add
add
pop
add
aaa
add
add
add
add
add
add
inc
add
add
inc
add
pop
add
add
cmp
cmp
push
add
xor
add
pop
add
push
add
add
add
push
add
push
add
add
add
add
add
push
add
inc
add
pop
add
push
add
pop
add
add
xor
inc
add
pop
add
pop
add
add
push
add
xor
inc
add
inc
add
add
push
add
xor
pop
add
or
push
add
add
xor
pop
add
push
add
inc
add
pop
add
add
add
dec
add
pop
add
push
add
push
add
add
xor
pop
add
push
add
dec
add
inc
add
dec
add
add
jmp
jle
js
aam
jns
negb
jle
add
pop
add
ds
push
fwait
or
dec
sub
sub
mov
daa
or
jecxz
push
dec
mov
dec
and
and
pop
aam
stos
pop
mov
sub
sub
cwtl
inc
fsts
push
add
dec
mov
pop
pop
mov
scas
push
push
enter
loop
out
jbe
adc
ret
mov
add
jge
xor
jbe
stc
aaa
and
xchg
pop
sbb
and
arpl
inc
dec
outsb
jmp
lcall
es
insb
xor
les
sbb
or
add
mov
in
shl
push
stos
xor
mov
mov
push
lcall
pop
mov
das
lret
pusha
into
rcr
mov
ljmp
int
popa
xchg
mull
or
out
in
rcrb
ja
test
mov
push
decb
mov
sub
cmpsl
leave
outsb
out
data16
repz
add
lret
ret
mov
sbb
xor
jbe
out
leave
not
popf
int
pushf
mov
arpl
call
hlt
outsb
mov
test
xchg
iret
mov
scas
test
in
fwait
pop
jne
movsl
sub
dec
add
pop
addb
ss
sub
arpl
xor
xor
rclb
mov
sbb
lock
pop
test
inc
adc
insl
ja
mul
mov
fdiv
push
jbe
xchg
mov
jbe
shlb
stc
shrb
test
xchg
sub
pop
test
outsb
xchg
fwait
sbb
hlt
dec
dec
adc
ljmp
ret
fwait
pop
sbbb
mov
xor
int
fidivrl
aaa
adc
orb
mov
cld
xlat
subb
mov
out
fwait
repz
sub
adc
mov
dec
inc
pop
sbb
mov
mov
cli
jnp
mov
or
subl
cmpsb
mov
hlt
insb
mov
adc
and
nop
sti
xor
sub
movsl
popf
and
dec
sub
dec
mov
popf
mov
push
rcrb
pop
inc
adc
mov
mov
sbb
dec
mov
sbb
mov
sub
inc
pop
repz
dec
adc
mov
lods
adc
cmpsl
jge
hlt
int
mov
stc
ja
movsb
inc
push
jne
xchg
outsb
inc
outsl
pop
sbb
mov
es
mov
or
add
jbe
ret
ljmp
aad
pop
pop
dec
int3
aas
test
out
inc
decb
xchg
push
call
movsb
or
int3
imul
cwtl
loopne
pop
and
sarl
xor
movsl
stos
roll
cmp
push
adc
out
sbb
popa
les
negl
clc
in
rcrb
nop
inc
sbb
rorb
mov
fcoms
mov
jbe
lret
jo
xchg
jecxz
pushf
mov
lea
js
push
lods
mov
mov
push
scas
jecxz
push
outsb
cs
test
popa
imul
ror
or
mov
mov
push
mov
mov
pmaddwd
test
aad
pop
call
mov
push
xchg
rorl
pop
inc
add
lcall
jno
ds
movsb
mov
lahf
test
dec
iret
push
adc
sub
lock
data16
scas
cmpsl
and
js
jbe
inc
fwait
cs
out
fsubrp
fs
add
idivb
insl
or
adc
cmp
les
push
xor
mov
in
xchg
jg
sbbb
inc
ljmp
inc
sub
inc
mov
add
das
cmp
icebp
or
jne
repnz
test
in
inc
pop
es
rcrb
jne,pn
cmpl
and
call
lret
loope
in
insb
pop
shrb
cli
jl
dec
sbb
mov
sub
sub
out
xchg
es
cmc
push
xchg
inc
cmp
xchg
lahf
pop
mov
sbb
push
ljmp
lods
jle
in
call
sub
insl
data16
adc
push
mov
pop
add
cmpb
pop
jmp
outsb
dec
lods
mov
fmuls
fstps
ficoms
out
or
push
mov
sub
icebp
cmp
shl
fisubrl
add
sbb
rcll
sub
push
xlat
add
jno
fnstcw
cmpsl
pop
cmc
jle
divl
decl
incb
in
lahf
mov
fmull
adc
movsl
and
and
mov
mov
icebp
jno
negl
imul
scas
and
lret
and
ret
lcall
cmp
aaa
and
lock
pusha
enterw
fadds
test
imul
mov
push
adc
sbb
xor
pop
loope
pop
cmpsl
add
xchg
jne
push
jae
in
push
mov
push
sbb
imul
jno
pop
inc
xchg
push
std
insl
cmp
into
cmc
mov
insl
out
sub
push
xorb
sti
sbb
shl
imul
rcr
mov
mov
jle
ss
push
lcall
cli
xor
pushf
inc
push
stc
xchg
sbbl
push
mov
aaa
mov
push
or
imul
test
mov
stos
cmp
mov
and
in
pop
arpl
daa
mov
pop
insl
cltd
lahf
pop
imul
imull
cmp
fstpt
popf
dec
push
pop
mov
adc
ljmp
nop
adc
lahf
out
jmp
push
sbb
insb
push
ret
sbb
mov
or
out
jg
stos
pop
les
mov
sub
insl
pop
mov
or
mov
push
pop
repz
dec
pop
sbb
insl
arpl
jbe
sbb
xchg
pop
gs
lret
jnp
test
xor
pop
fwait
cmpsb
imul
jg
arpl
add
idivb
dec
adc
into
add
pusha
aas
sub
mov
pusha
sbb
mov
in
aad
loope
mov
add
and
mov
pusha
jo
inc
scas
sti
jbe
add
pop
add
mov
xor
es
fildl
cmp
fidivrl
xor
mov
es
mov
pop
enter
xchg
scas
in
mov
push
xor
push
push
mov
stc
xchg
add
sti
inc
mov
dec
jnp
pop
enter
jl
lret
test
jne
bound
add
sbb
sbb
or
adc
shrl
push
adc
or
leave
in
push
sbb
daa
rcr
pushf
fldcw
stos
or
inc
sarl
mov
jg
or
add
mov
in
cmc
mov
mov
int3
jle
andb
in
xchg
insb
pop
xchg
mov
mov
mov
div
js
aad
fimuls
push
push
sbb
jmp
das
pop
and
pop
add
cmp
xor
mov
in
push
in
movsb
ljmp
push
push
add
or
repz
fcomp
push
cwtl
nop
cmp
loope
cmpb
pop
sbb
or
popf
xor
push
sbbb
loopne
mov
or
hlt
pop
xor
popf
mov
scas
push
cmpsb
push
pop
mov
mov
out
fs
adc
sub
imul
sbb
push
rcl
dec
lock
cmp
inc
cld
push
js
sub
jg
arpl
pop
movsl
cmc
dec
out
mov
fucomp
dec
inc
sti
xchg
ret
pusha
sahf
push
inc
pop
and
cmp
jp
lret
mov
maskmovq
divl
inc
or
jbe
xchg
and
pop
aad
jl
mov
aas
push
ds
scas
call
dec
lock
dec
pop
or
xchg
stos
pop
and
out
mov
mov
push
clc
es
push
jg
das
gs
jbe
stos
cs
jbe
scas
xorl
xchg
mov
push
arpl
dec
rorl
add
adc
mov
imul
cmp
push
add
jecxz
mov
sbb
sub
lahf
rcrb
cwtl
iret
rcrb
stos
push
ljmp
ljmp
fistps
xor
push
adc
sub
inc
or
bound
sub
stc
xchg
loopne
pavgb
dec
mov
out
cmp
rclb
mov
xor
mov
stos
test
mov
mov
pop
fnstsw
out
or
jo
dec
mov
in
and
addr16
das
rcl
adc
testb
out
jge
jno
xor
das
subl
cmpsl
loope
arpl
xor
mov
pushf
hlt
and
push
sub
push
sbb
pop
mov
or
adc
inc
add
push
push
or
push
xchg
or
lock
arpl
lea
fcomip
mov
call
cld
xor
imul
dec
mov
daa
out
loop
mov
movb
rcrb
jno
pop
fimull
jns
adc
std
inc
iret
scas
xchg
inc
dec
sub
jae
dec
movsb
cmpsb
or
pop
sbb
lods
in
jg
arpl
in
dec
iret
popa
adc
jb
and
and
repz
imul
push
lret
adc
mov
mov
cmp
outsb
jb
dec
add
cs
cmp
sub
cmp
rcrl
cmpsl
add
or
mov
lds
xor
mov
shlb
dec
js
sub
imul
jns
lods
sub
mov
xor
sbb
jl
mov
xor
jae
sbb
arpl
ss
jl
sbb
shrb
adc
push
sub
fnstcw
lock
movsb
int
in
dec
lret
bound
jmp
xchg
push
leave
test
inc
in
or
fbld
popa
gs
pop
hlt
or
leave
mov
push
jg
adc
pop
rcll
loopne
push
xlat
add
add
call
movsl
fildl
into
push
add
xchg
sub
push
xchg
shl
mov
lea
xor
mov
iret
ss
pop
arpl
lods
in
fnstsw
fstpl
leave
add
pop
insl
fstpt
out
mov
jnp
data16
out
ret
out
cmpsb
repnz
ja
jmp
sbb
mov
add
or
xor
lret
insb
insl
out
jle
pop
loope
dec
pop
insl
fisubrl
loop
add
movsl
push
adcl
lds
mov
out
jo
and
popa
mov
adc
lret
push
jae
cwtl
insl
rcr
sti
push
mov
fs
icebp
cmp
fisttpll
or
xchg
xor
addr16
iret
and
or
mov
push
mov
xchg
ret
dec
dec
daa
loop
cmp
sti
dec
out
mov
repz
xchg
xchg
mov
sub
mov
pusha
xchg
out
jno
jle
inc
lock
jl
pop
push
rorb
push
pushf
cltd
aad
sahf
out
mov
ja
out
jae
sbbb
orb
fwait
sub
shrd
mov
jle
pop
clc
imul
ret
jle
stos
fpatan
adc
loop
pop
add
ret
lea
je
cwtl
xchg
ret
adc
cmp
out
mov
mov
stc
xchg
fisttps
ds
scas
in
dec
hlt
and
inc
xor
hlt
add
sub
mov
insb
scas
pop
into
sti
mov
dec
adc
sbbl
inc
jp
ret
add
shr
in
mov
inc
mov
push
int
cmpsb
push
adc
cmp
outsb
sbb
addb
cmp
mov
xchg
push
call
sub
or
dec
insb
scas
pop
push
in
ljmp
shrl
push
leave
outsl
sub
pop
pusha
cmovg
xchg
pop
xchg
jmp
fistl
lds
mov
cmp
and
mov
mov
pop
pop
lret
mov
pusha
xchg
push
clc
sbb
and
les
xor
dec
mov
inc
movsl
es
xchg
mov
or
push
lret
test
dec
mov
pop
jecxz,pn
dec
dec
sbbl
push
sub
pusha
dec
pop
dec
fmul
js
mul
pop
pop
outsl
push
and
xchg
sub
loopne
push
scas
shll
movsb
inc
sub
pop
and
or
insb
loope
ljmp
sbb
ds
insb
fmull
jno
push
pushf
stc
or
sbb
mov
movsb
cmp
out
shrl
add
sbb
add
add
pop
mov
cmp
movsl
xor
loope
add
pop
add
fistps
xor
jb
sbb
pop
jno
jne
or
ficoms
jo
mov
in
sbb
and
subl
daa
jnp
std
rorl
push
mov
repnz
lcall
inc
sub
or
ret
xor
adc
loopne
add
xor
lret
jmp
push
in
mov
mov
cmpsb
pop
aam
bnd
std
dec
dec
imul
std
outsb
add
mov
inc
and
and
bound
mov
inc
outsl
jnp
xchg
jl
lret
clc
ficompl
push
mov
int3
or
incb
jp
sbb
xor
xchg
xchg
test
xchg
lock
nop
arpl
jae
cmpsb
inc
mov
aam
mov
xor
aam
inc
mov
add
mov
xor
aad
popf
fwait
ljmp
cld
mov
outsb
pop
pop
movsb
push
mov
add
xor
mov
add
test
imul
push
jmp
jecxz
add
repnz
push
push
and
mov
fistl
add
imul
xchg
cmp
pop
cmp
lods
mov
cmp
dec
cmp
mov
fcomip
mov
add
test
mov
sarl
add
xor
in
aam
jl
cmp
jl
add
pop
sahf
out
jle
xchg
adc
pop
add
lea
out
out
sub
pop
jmp
cmp
popa
mov
call
call
sub
pop
xchg
dec
js
jle
and
push
ljmp
sub
mov
andl
sbb
dec
data16
scas
call
loope
imul
mov
and
lea
fiadds
mov
adc
jecxz
push
cltd
mov
xor
fsubl
push
std
add
pushf
sub
mov
sub
push
outsb
rorb
int
mov
mov
adc
cmc
push
jle
mov
call
xor
fdivrs
cmpsl
inc
std
nop
jns
ljmp
adc
loope
ja
or
fnstenv
cmp
mov
lcall
cmp
xchg
pop
scas
mov
lahf
scas
xor
jae
cld
mov
in
push
cmp
aas
mov
sbb
xchg
stos
insl
rcrl
sub
push
in
and
and
jmp
fcomps
nop
adc
movsb
fwait
aad
pop
jle
es
out
fstp
sarl
pop
push
dec
sbb
aam
adc
je
and
frstor
lds
cmp
fs
mov
mov
jae
xor
inc
aam
faddl
sarl
inc
pop
fsubrs
repz
stos
jns
daa
jmp
mov
push
cmp
mov
jbe
loope
mov
into
jnp
je
dec
iret
add
xchg
push
and
daa
rcrl
mov
dec
adc
insl
decl
fsubp
fisttpl
fnstsw
adc
clc
mov
pop
or
cmp
cmp
cli
inc
scas
xchg
outsl
adc
movsl
test
incl
sub
sbb
xchg
pop
xlat
lahf
adc
xchg
repz
movsb
imul
inc
sbb
fsubs
pop
fnstsw
aam
xchg
test
mov
xlat
stc
cmp
repz
out
xchg
scas
push
xlat
sbb
insb
mov
stos
xor
int
fcompl
sub
or
lret
and
in
ret
pushf
mov
pop
xchg
lods
movsl
jo
loop
pusha
dec
pop
pop
repnz
jecxz
inc
jecxz
out
rorl
ror
int
jmp
hlt
inc
xlat
jecxz
test
xchg
das
std
cld
adc
loope
imul
mov
arpl
mov
cmp
add
cli
and
mov
pop
push
mov
rcrl
and
xchg
les
cli
dec
push
lahf
jbe
inc
jl
sub
or
out
and
lret
xchg
call
sub
inc
es
jle
xchg
call
test
xlat
jns
call
out
repz
fs
sub
and
ss
addl
ja
loope
enter
xchg
xchg
cmp
cwtl
mov
cmp
in
int3
scas
inc
adc
mov
aaa
lret
xchg
mov
in
test
pop
stos
adcb
adc
iret
jge
jp
push
adc
lods
test
cli
and
cmpl
push
andb
pop
jbe
mov
lret
jnp
dec
xchg
stos
mov
jbe
xchg
push
filds
dec
xor
arpl
sbb
leave
inc
jb
test
out
inc
push
sbb
pop
push
jg
test
out
aas
mov
jns
xor
addb
lds
lret
pop
jae
xor
cmpsl
movsb
or
bound
in
out
mov
aaa
push
cmpsl
or
shrb
insb
fwait
jno
jb
mov
mov
xor
repnz
out
sti
subl
in
or
in
pop
mov
imul
mov
outsb
sahf
push
jecxz
shlb
sbb
mov
jp
ror
sub
je
lods
inc
std
xchg
push
lds
sbb
add
fwait
aam
cmp
and
test
aaa
cmp
rcrl
xchg
pop
pop
lock
xchg
sarb
movsb
cmp
adc
jno
and
inc
add
add
or
repz
aad
xor
adc
mov
sub
mov
or
dec
xchg
xchg
push
andb
jecxz
mov
push
cmpsl
adc
lods
inc
pushf
dec
lahf
fwait
rorl
mov
cmp
xchg
jno
ret
inc
adc
cli
add
jns
stc
or
dec
notl
test
aas
rclb
scas
out
jp
clc
xor
mov
cmp
dec
dec
and
test
xor
outsl
xchg
outsb
aad
incl
iret
bound
lret
in
pop
add
pop
mov
cmp
out
or
je
inc
xchg
nop
mov
into
aas
pop
arpl
push
jg
ret
mov
pop
aaa
add
add
cmp
daa
dec
jno
or
dec
outsb
xchg
xchg
xchg
fs
mov
or
dec
adc
inc
push
in
adc
xchg
xor
xorb
add
add
repz
movsb
adc
movsb
adc
add
sbb
add
inc
or
xchg
loop
cmpsb
xchg
repz
sti
jo
and
mov
mov
push
xchg
inc
out
ss
jmp
mov
jns
je
addl
aas
out
xlat
je
pushf
xchg
adc
pop
iret
dec
pop
pop
or
and
rclb
pop
repz
popa
insb
pop
xor
push
jae
pusha
fidivrs
jg
adc
divb
popa
push
loop
dec
hlt
sahf
ljmp
mov
cld
out
ja
dec
inc
aam
in
inc
cwtl
jne
mov
inc
mov
aam
lcall
aad
pop
inc
arpl
push
sub
inc
sbb
pushl
dec
sbb
adc
jnp
add
push
iret
mov
js
mov
adc
pop
or
push
cld
mov
and
xor
stos
mov
jo
mov
popa
ljmp
xchg
sbbl
sbb
jmp
mov
mov
push
mov
jge
xor
sub
inc
cli
xchg
das
lea
les
xlat
cmp
xchg
fiadds
cmpsb
scas
or
sbb
mov
call
push
das
stc
leave
sub
cs
repnz
and
ret
outsb
sbb
scas
rcrl
push
lods
ja
mov
loopne
outsb
test
push
xchg
loopne
imul
call
loop
mov
stos
das
jae
leave
clc
mov
fcoml
fsubrp
inc
xchg
inc
adcl
inc
dec
jecxz
push
in
lds
sub
mov
lret
dec
jecxz
ret
icebp
popf
stos
data16
and
call
int3
gs
lods
jg
arpl
out
inc
sub
int3
sbb
fldt
addr16
push
cwtl
sub
popa
or
insb
fmul
inc
push
xor
xchg
iret
and
nop
sub
push
nop
sub
rorl
mov
mov
jbe
adc
or
pusha
jo
dec
ret
cmc
xchg
dec
cmp
aad
negl
or
movsl
and
and
or
jecxz
stos
mov
mov
aad
mov
push
mov
inc
add
arpl
dec
jnp
ss
or
sub
icebp
pushf
fwait
ret
or
sbb
repz
mov
jg
fmull
jae
cmpl
fcmovnbe
add
lahf
clc
iret
hlt
clc
mov
iret
scas
add
cltd
scas
pushf
sub
mov
je
int
and
les
sbb
and
vmwrite
arpl
sub
stc
mov
in
enter
add
add
fcmovu
sub
rol
enter
stos
clc
inc
inc
dec
xchg
mov
in
call
pop
popf
xchg
loopne
push
adc
sbb
push
mov
jae
xchg
add
cltd
cmp
push
push
mov
dec
in
cltd
test
pop
pop
loop
ljmp
xchg
mov
shlb
xchg
das
xor
pop
cmp
mov
fcoml
dec
fwait
hlt
sbb
jnp
cmp
bound
pop
fcmovb
pop
pop
sbb
jle
std
dec
popf
in
pop
sbb
add
dec
lock
sub
push
jmp
xchg
or
mov
mov
mov
xor
enter
aas
lcall
fisubl
mov
imul
shll
mov
inc
fs
testl
es
dec
push
addr16
dec
push
mov
inc
sbb
jmp
or
xchg
leave
sub
sbbl
xor
dec
lock
sbb
stos
sbb
mov
dec
js
inc
sbb
sbb
popf
mov
xor
stos
aas
push
mov
je
pushl
mov
enter
mov
lcall
push
xchg
imul
lds
cmp
sbb
mov
shlb
fidivl
mov
jp
es
ja
mov
push
psubsw
cmp
sbb
imul
ret
xchg
aaa
adc
in
push
adc
aaa
push
dec
outsl
out
sbb
movsl
xchg
lods
push
xor
lock
loope
cmp
cmp
sahf
stc
or
dec
push
loope
mov
or
add
popa
mov
rorb
shll
mov
ljmp
inc
mov
clc
cs
cmpsl
mov
cwtl
lcall
sbb
lahf
in
ss
push
lea
loope
sub
add
stos
xor
jecxz
aad
mov
pop
push
xor
add
push
les
sbb
push
inc
testl
imul
jno
int
inc
pop
adc
cltd
popf
daa
scas
pop
xor
shl
cmp
jno
sahf
into
xchg
pop
shrl
gs
aas
lds
inc
sub
insb
inc
push
push
push
lcall
daa
loop
mov
repnz
or
jg
arpl
mov
sahf
insb
insl
arpl
stos
fwait
push
int
lods
notb
push
fisubrs
movsl
push
ja
cmp
mov
aam
loop
cmp
or
lret
inc
pop
arpl
and
sub
fbld
sbb
push
mov
cli
and
stc
and
inc
pop
mov
sbb
ds
sbb
sbb
in
jne
popa
movsb
leave
jecxz
jge
negb
fidivs
dec
adc
fsubs
mov
insl
mov
and
adc
pop
xchg
mov
pop
xorb
movsl
loopne
movsb
test
add
jne
pop
scas
mov
and
push
pushf
and
xor
fcomps
rclb
cld
mov
popl
sub
jecxz
mov
dec
xor
xchg
sahf
xchg
orb
ljmp
fs
jge
insb
stos
push
cmpsl
pop
add
test
xor
clc
pop
xchg
cmpsl
mov
cmpsb
sahf
cmpsl
stc
xchg
sbb
pop
mov
mov
sbb
push
xchg
mov
mov
rolb
scas
insb
push
pop
in
adc
iret
xchg
pop
sub
mov
lods
mov
mov
fsub
hlt
push
fstpt
mov
repz
inc
shlb
ss
in
xor
sahf
mov
mov
fdivs
in
call
idiv
ficoms
inc
and
test
fldt
add
pop
add
jg
sar
cmp
mov
test
imul
nop
lcall
adc
xchg
sub
push
jae
stos
lcall
lahf
cld
mov
mov
mov
adc
mov
mov
das
mov
pusha
and
push
fcomp
je
test
push
jnp
inc
das
popa
jae
xchg
popa
add
popf
dec
in
sahf
stos
adc
ficoml
sub
push
mov
mov
push
mov
notl
push
jo
scas
jp
jmp
rorl
dec
pop
mov
popa
int3
imul
faddl
dec
jnp
daa
sbb
push
aas
cld
stc
xchg
xor
stc
ja
and
lret
xchg
rorb
out
repnz
and
adc
insb
pop
sbb
gs
xor
xor
shl
sti
mov
movsb
push
xchg
cli
pop
in
pop
sahf
pop
aaa
adc
adc
stc
aas
test
cld
in
xchg
push
enter
push
test
dec
push
jl
add
test
jmp
loop
imul
and
cmpb
sub
cmpsl
jecxz
fistpll
sti
inc
mov
loop
jbe
jnp
mov
std
loop
dec
loope
fmuls
mov
dec
fcoml
fstps
xor
loope
movsl
push
test
xor
push
loop
jg
in
adc
dec
push
dec
hlt
cs
pop
jecxz
jmp
pop
loope
cmp
sub
sub
mov
fs
add
add
mov
xchg
daa
fcompl
movsl
adcb
movsb
pop
mov
bnd
ret
fstp
mov
fiaddl
xadd
jmp
and
jb
xchg
jb
adc
repz
and
orb
js
arpl
add
daa
das
mov
aaa
in
jno
push
adc
in
movsl
push
or
adc
inc
fistpll
cltd
insb
jecxz
cltd
in
mov
add
les
ljmp
cmp
jo
lods
sub
pop
or
push
std
shr
fldl
or
insb
out
jp
out
sbbb
test
cmp
lods
xchg
iret
iret
pop
imul
addr16
mov
popa
sbb
adc
cmp
hlt
cmp
test
pop
ret
mov
pop
dec
sub
lock
gs
andl
and
nop
pop
movsb
sub
loop
adc
std
aaa
lret
xchg
adc
das
mov
mov
mov
jno
loop
or
movsb
addr16
lahf
mov
repnz
sbb
in
addr16
arpl
fptan
aam
sbb
lods
or
xor
fdivs
lret
add
loopne
push
and
clc
add
mov
jl
sub
out
or
jnp
cli
dec
mov
xor
not
lds
mov
test
and
ljmp
nopl
or
or
adc
sbb
sbb
sub
cmp
add
sub
leave
xchg
rcl
pushf
outsb
ds
jns
enter
pop
in
jmp
pop
dec
mov
xchg
pop
stos
lods
or
dec
repz
xchg
jbe
push
into
icebp
in
ljmp
fists
loope
movsl
cmp
sub
lock
push
int3
jno
enter
pop
or
jo
mov
push
lods
insb
push
int3
jge
jo
jo
xor
add
out
out
adc
loop
inc
jae
rcrb
pushl
out
je
in
ffreep
sbb
fnstcw
mov
sub
daa
xor
mov
inc
mov
lds
or
mov
cmp
stos
pop
int
fcomi
cmp
ds
cmp
addr16
ficompl
mov
outsb
mov
pop
ljmp
mov
ljmp
or
sub
push
cmpsl
std
divb
daa
cmpsl
mov
movl
jecxz
aam
ror
mov
add
mov
sahf
cwtl
addb
xlat
xchg
les
leave
gs
mov
int
loope
and
shrl
in
inc
jns
adc
das
jo
add
push
jb
add
add
mov
ret
insl
or
sbb
lods
cmp
inc
les
loope
xchg
int
sarl
or
enter
pushf
out
cmpsb
sbb
dec
clc
mov
rcrb
jo
mov
dec
outsl
movsl
daa
pop
jae
lcall
mov
dec
pusha
pop
xchg
lock
test
dec
ss
imul
mov
icebp
mov
imul
and
int3
std
cli
rorb
push
sbb
inc
fistl
scas
lock
push
xchg
sub
add
sbb
pop
call
adc
cltd
mov
jb
pop
mov
mov
testl
shlb
ds
call
dec
fimull
jb
imul
push
jle
mov
pop
inc
add
cmpsl
fcmovb
mov
inc
mov
pop
mov
mov
jbe
or
ficompl
xor
dec
decl
add
rorb
fistps
push
addl
sar
sub
jb
mov
out
lahf
rcpps
icebp
insb
pop
out
mov
pop
or
fdivs
dec
jae
mov
or
fs
cmp
nop
dec
mov
and
clc
popf
lds
mov
mov
js
mov
adcl
dec
out
fstpt
stos
or
or
outsb
add
mov
dec
insl
mov
ljmp
jae
test
enter
or
addr16
in
xchg
fs
stos
or
fstps
push
lods
jl
push
mov
out
xchg
int
lret
xor
xchg
lods
andb
leave
in
mov
gs
mov
stos
aam
jnp
sub
mov
add
insl
pop
mov
test
or
int
rcll
sub
add
xlat
push
cmp
mov
mov
inc
popa
into
pop
inc
mov
and
pop
push
cmp
mov
push
lock
mov
push
push
sub
or
popl
pop
pop
popf
inc
loopne
or
rclb
insl
scas
clc
add
cmp
adc
push
in
xchg
push
addr16
lods
or
fsubrl
push
inc
or
pop
cltd
rcl
fcomip
pop
push
add
and
add
or
mov
stos
js
test
gs
leave
inc
rcrl
stos
ret
dec
aaa
inc
call
mov
jno
push
mov
xor
stos
xchg
movsl
cs
push
mov
xchg
bound
pop
fistpl
mov
mov
out
pop
lcall
jmp
dec
ja
ss
iret
repz
lret
scas
xchg
ffree
repnz
aad
sbb
ds
add
sbb
jl
mov
sbb
sub
mov
lahf
divl
das
les
add
in
aam
xchg
je
popa
les
subl
leave
add
xchg
sarb
xchg
jecxz
inc
loope
mov
idivl
sub
add
sbb
addr16
shl
inc
xor
cltd
andl
adc
cmp
mov
inc
scas
filds
cli
and
mov
jns
mov
movsb
stos
mov
xor
inc
lock
cwtl
lods
pop
movsl
dec
lock
inc
lret
rorl
push
cmpsl
lea
es
idiv
push
fistps
aaa
popa
movsb
repnz
xorl
push
pop
pop
cmpl
lods
cmp
int
test
dec
mov
xor
xlat
aam
aas
sbb
int
pop
push
mov
sbb
mov
pop
enter
and
out
mov
lret
outsb
icebp
lods
nop
xchg
and
mov
mov
idivb
sub
cmc
fdivl
xchg
sub
xchg
sub
jge
adcb
jg
roll
pop
test
lods
cld
rcrl
insb
test
movsl
cwtl
mov
int3
xor
pop
jae
jb
push
or
mov
roll
mov
mov
div
cmpl
insb
and
lods
gs
in
scas
clc
imul
lret
cld
xor
test
hlt
push
in
cwtl
loop,pt
sbb
sub
ret
addl
xchg
cltd
mov
orl
mov
rcrl
and
sahf
pop
cmp
mov
sub
add
outsb
insb
scas
mov
add
rcrb
cmp
imul
or
jecxz
std
xchg
aad
xchg
mov
dec
sti
out
mov
addr16
mov
adc
roll
inc
push
lret
gs
sub
push
fstpt
cmpsb
and
lahf
sarl
fnstcw
icebp
sbbl
xchg
es
pop
jbe
mov
sbb
inc
sbb
inc
mov
adc
and
push
bound
dec
mov
in
ja
out
add
or
int
stos
push
sub
movsb
pop
push
push
xor
gs
rolb
icebp
adc
mov
cld
pop
stos
int
mov
xor
push
lock
aam
and
add
xor
sbb
or
outsl
adc
in
jnp
shr
push
add
int3
shl
popf
mov
in
test
xor
in
arpl
push
push
xor
jecxz
adc
shlb
mov
lcall
jnp
jle
push
ds
cwtl
mov
sahf
push
lods
iret
xor
nop
mov
loop
ja
sub
aaa
addb
push
mov
jnp
ret
stc
pop
rol
push
aad
inc
push
sbb
mov
stos
or
add
idivb
pop
int3
ljmp
xor
frstor
pushf
jne
add
xor
or
js
std
nop
test
loope
cmp
push
mov
nop
fistl
mov
inc
movsl
ficoml
out
push
fisubs
mov
sarb
inc
enter
nop
add
jae
xchg
fisubs
cmp
xchg
loope
cmp
paddb
shll
pop
jmp
mov
pop
ficoms
xchg
in
std
xchg
mov
popf
imul
loop
inc
loopne
psrad
lcall
jp
jae
mov
jns
push
mov
or
mul
inc
xchg
loope
shrb
inc
cmpsl
mov
les
sbb
aaa
mov
sbb
mov
shlb
jg
push
fs
movsb
fsubrs
mov
loopne
mov
xchg
dec
and
inc
xor
mov
lcall
je
imul
mov
nop
dec
cmp
mov
and
jne
lds
call
movsb
jae
dec
movsb
jp
adc
std
jge
or
scas
dec
shlb
mov
test
mov
or
and
and
push
in
popa
jmp
repz
jp
popa
dec
xchg
clc
xchg
cmp
pushf
mov
nop
test
dec
outsb
inc
int3
repz
in
lods
fdivrs
inc
adc
lods
insb
xchg
mov
jp
adc
mov
jecxz
inc
adc
mov
inc
aad
lods
insb
pop
fsubrs
cmpsl
xchg
add
push
popa
scas
imul
xchg
fists
ficoml
mov
pop
mov
daa
repz
or
xor
dec
jmp
in
call
lea
mov
mov
shrb
push
add
xchg
jnp
add
mov
push
loopne
dec
add
cmp
pop
ds
push
mov
and
inc
pop
test
or
subl
insl
mov
dec
add
out
in
gs
clc
push
jmp
fcomp
loop
sbb
inc
aas
xchg
and
fs
std
fnstcw
mov
repz
dec
out
fmuls
icebp
stos
shrl
jge
push
leave
cmp
cmp
fwait
jp
push
sbb
filds
mov
ja
movsb
dec
xor
xchg
mov
push
xlat
xchg
jp
stc
rorb
addr16
out
dec
das
push
push
setl
out
inc
fbld
jge
imul
mov
push
adc
enter
xchg
push
inc
ficompl
push
and
add
jo
push
dec
and
xchg
stos
or
or
cli
scas
sbb
gs
fistps
stc
inc
xor
pop
and
add
in
jle
ret
repz
std
jle
loope
mov
jnp
add
pop
add
lahf
aaa
xchg
adc
xchg
ss
lock
fmuls
roll
clc
push
dec
rcrb
pop
enter
sbb
aaa
cmpsl
inc
and
lcall
jo
sub
inc
fistpl
push
in
inc
and
xorl
pop
push
mov
pop
add
push
rorb
push
sub
xor
cmpsb
fadd
lods
jnp
cs
adc
dec
mov
sahf
and
sbb
cltd
cmp
mov
leave
inc
fcomip
mov
aam
mov
sub
ss
push
cmp
sbb
dec
mov
stc
scas
cmp
mov
or
xor
jae
insl
sarb
es
mov
pop
sbb
lock
sub
test
inc
sbb
adc
mov
add
lcall
std
ret
test
mov
cli
iret
repz
fnstcw
push
loopne
in
dec
push
repnz
fcompl
mov
push
xor
mov
scas
aas
addr16
jge
jno
scas
add
mov
adc
or
sbb
mov
mov
clc
xchg
lret
mov
in
xor
cmp
cmpl
push
jo
xor
daa
or
sub
pop
sbb
jo
popf
hlt
aaa
in
in
int
pusha
out
fistl
pop
cmp
inc
mov
popa
arpl
cmp
sahf
jnp
filds
adc
pop
fwait
xchg
mov
iret
dec
mov
inc
jecxz
pop
cmp
push
jle
xor
rclb
mov
and
cmp
or
adc
mov
jp,pt
xor
lods
sub
xchg
push
cmp
je
out
test
gs
sub
fbld
mov
sbb
add
repnz
fildll
test
outsl
test
jl
sbb
xor
aaa
mov
addr16
loop
lock
mov
ficoms
sub
inc
pop
pop
sub
out
push
mov
mov
sbb
sub
js
mov
pop
pop
cmc
movsb
push
scas
sub
out
adc
mov
ret
inc
push
fidivrs
hlt
lods
mov
clc
fucomp
fmuls
shlb
pop
push
and
xchg
imul
out
test
pmaddwd
lods
sbb
adc
in
mov
pop
mov
scas
pop
decb
and
sbb
push
jmp
ret
out
xchg
jnp
fcoms
mov
adc
push
negl
jne
pusha
push
xor
and
inc
int
inc
daa
rorl
inc
es
jo
mov
xor
notb
xor
mov
in
xor
lret
mov
or
xor
test
movsb
sub
xchg
sub
sbb
pop
fwait
and
xor
sub
mov
movsl
sub
cs
loop
inc
loop
ds
hlt
lahf
aam
sbb
pop
ret
cmp
jb
scas
or
fs
mov
sbb
jg
dec
jnp
icebp
jo
and
shlb
and
aad
push
shl
mov
push
nop
lods
xorl
jg
and
repz
xchg
jmp
arpl
xchg
jbe
lret
push
outsb
mov
std
jecxz
movlps
lock
push
fcmovne
out
frstor
xlat
pop
or
outsb
jo
jae
movsl
fnstcw
mov
sahf
inc
cmpb
adc
sbb
clc
push
pop
scas
mov
aad
sbb
add
sbb
or
shrl
sar
adcl
movsb
adc
lret
pop
pop
insl
mov
enter
mov
in
icebp
cli
int3
gs
enter
or
cmp
mov
xchg
ja
aad
pop
mov
or
leave
iret
pushf
pop
test
std
pop
cmp
inc
xchg
int3
dec
int
adc
int
xchg
xor
setne
inc
das
push
cmp
cmpsb
mov
fisubrl
les
rcl
jbe
inc
or
xlat
mov
mov
pusha
jb
cmp
add
fisttpll
jno
mov
mov
cmp
ds
sbb
pusha
inc
mov
loope
lret
inc
movsb
mov
test
dec
rcll
inc
lds
sbb
and
into
int3
mov
bound
pop
jge
push
adc
mov
mov
push
rcll
into
jge
xchg
mov
adc
dec
gs
cmpsb
push
cmp
fwait
mov
add
aam
mov
dec
mov
cwtl
or
push
dec
and
lea
mov
mov
and
in
cmp
jae
push
and
mov
push
mov
sub
push
xchg
idivl
inc
adc
xchg
add
test
cs
aad
fldl
pop
dec
data16
mov
out
aas
sub
shll
addr16
je
dec
cmp
xchg
ret
frstor
subl
add
or
ret
and
push
test
mov
inc
ret
lods
pushf
jno
fisttpll
or
clc
add
xchg
fwait
es
pop
dec
out
inc
shr
push
cmp
cmpsb
into
ret
xchg
lods
int3
filds
pusha
aas
add
inc
jne
cld
push
or
xchg
pop
dec
jne
mov
stos
cwtl
mov
pop
push
fsubrl
push
mov
inc
jl
sub
bound
or
jae
xchg
and
dec
mov
xor
xor
mov
jns
sub
icebp
xchg
lahf
cld
dec
pop
mov
xor
adc
inc
dec
std
shll
pop
decb
fwait
adc
punpckldq
push
jge
mov
xchg
outsl
ljmp
test
movsl
imul
mov
mov
and
bound
and
mov
std
xor
cli
bound
orl
mov
lods
pop
ret
gs
iret
cld
fs
neg
mov
pop
idiv
cmpsl
sbb
adc
mov
std
mov
cmp
mov
ficoml
lods
mov
js
testb
cmpsl
fmuls
movsb
enter
jns
sub
mov
add
fidivrl
ljmp
mov
imul
nop
aad
lahf
mov
inc
inc
pop
cmpsl
pop
into
incl
jb
pop
pushf
sub
in
mov
je
idivb
rcrb
setge
xchg
sub
cli
mov
les
bound
xor
not
lret
push
cmpsb
mov
adc
mov
imul
sbb
push
fidivs
inc
lods
cmc
add
add
sub
jmp
mov
orb
mov
add
and
add
mov
jo
or
test
mov
jb
mov
mov
es
outsb
mov
sbb
push
mov
jecxz
outsl
std
cmc
xchg
jns
dec
push
flds
sbb
pop
imul
scas
and
testl
mov
dec
adc
xchg
decl
push
outsl
call
out
sub
cmp
mov
stos
es
pop
imulb
mov
subl
sbb
inc
jl
movsb
lds
rorl
inc
xlat
xor
mov
cmpsl
push
stc
or
hlt
mov
mov
adc
pop
outsb
ljmp
stos
push
jecxz
lcall
enter
xor
std
push
cmp
sbb
jmp
mov
push
cmpsb
and
negb
aad
and
aaa
enter
or
pop
mov
sti
cwtl
mov
jb
outsb
mov
cmp
call
xor
mov
rol
ljmp
das
movsb
hlt
pop
or
repnz
loopne
repnz
and
dec
rorl
bnd
mov
push
sahf
jle
or
in
mov
ror
xor
sub
inc
movb
dec
inc
dec
mov
stos
cmp
jg
push
xchg
loop
fstl
stc
mov
push
stos
decb
fdivrl
pop
or
popa
pusha
int
mov
push
adc
popl
cmp
push
aam
push
out
xchg
into
adc
mov
push
lock
insl
loop
adc
xchg
adc
pop
xchg
imul
les
mov
popf
mov
push
out
addr16
or
lds
fs
mov
cmpsb
xchg
cmc
je
adc
sbb
jnp
jl
add
out
lds
sub
push
and
cld
xchg
jge
dec
or
push
lds
arpl
xor
fildll
push
dec
ljmp
push
or
pop
shlb
mov
pop
inc
repz
xor
jle
xchg
jbe
mov
cld
pusha
adc
cmp
push
mov
scas
xor
loop
sbb
leave
aaa
sub
and
andl
subl
mov
push
out
das
mov
adc
xor
adc
imul
xchg
stos
pop
jecxz
loop
ljmp
pop
shr
jnp
adc
mov
push
stos
mov
sarb
jnp
push
sti
fimull
xchg
lods
rol
cs
inc
dec
and
lods
out
xchg
insl
jl
mov
push
xchg
xlat
push
mov
mov
cli
cmp
cmp
int3
ja
sub
in
xor
push
sbb
insl
mov
rolb
cmp
sub
mov
stc
popa
cmp
sub
repnz
stos
push
adc
jmp
js
dec
or
fwait
jl
push
imul
xor
mov
mov
mov
sbb
stos
insb
scas
dec
sbb
mov
add
sbb
pop
inc
mov
sub
mov
adc
jae
add
jge
inc
int3
ljmp
xor
ret
cltd
inc
and
out
jle
push
lret
fistps
loopne
ss
les
gs
adc
jge
lea
sti
les
mov
or
lcall
popa
push
push
mov
fildll
std
in
lret
mov
lods
pusha
mov
mov
fcomps
inc
and
enter
xchg
cmpsb
rcrb
popl
push
nop
add
out
sub
adc
cmpsl
lods
inc
push
loop
mov
aas
int3
ja
imul
pushf
mov
and
mov
incl
es
add
sbb
push
cmp
cmpsl
mov
inc
cmp
mov
mov
cs
jbe
cli
add
pop
mov
add
lret
mov
push
pop
mov
ss
xchg
ljmp
mov
add
add
loope
pop
xchg
mov
aaa
orb
xor
out
pop
sti
cmc
add
das
insb
mov
mov
stc
out
add
sub
mov
aaa
and
cmp
call
imul
loopne
js
outsb
bound
add
ja
gs
adc
gs
arpl
pop
sbb
jge
sub
sbb
jg
imul
sbb
jne
adc
cmp
imul
inc
mov
lret
pop
sub
push
les
pop
push
lcall
outsb
inc
outsl
jae
jns
adc
in
and
push
jg
ror
xor
jne
dec
mov
jmp
pop
fwait
add
icebp
pop
fs
adc
cmp
pop
sbb
pop
sbb
icebp
push
adc
leave
dec
push
and
insl
push
mov
lahf
std
sti
sub
add
arpl
pop
test
loop
out
jno
faddl
icebp
add
sbb
mov
into
shrl
pop
fcomps
mov
jno
xor
jb
dec
lcall
pop
xchg
xchg
enter
out
popf
adc
sbbl
cmpsl
jl
fidivl
add
xchg
repnz
add
xchg
and
dec
je
ret
lock
fisubs
sahf
mov
lcall
push
cwtl
mov
pop
sti
push
push
push
ss
jno
scas
sbb
xor
xchg
mov
cmp
pop
jns
or
div
cmp
stos
jle
stc
jae
sub
imul
push
ret
arpl
mov
pop
cs
leave
nop
fidivrs
in
mov
ja
arpl
sbb
sub
rcrb
push
lcall
jl
xor
sbb
cmp
xor
jecxz
add
mov
jecxz
mov
or
jp
mov
into
std
push
add
sbb
xor
shr
xor
es
imul
movsb
sti
dec
fstpt
sub
inc
fs
cmp
repz
aaa
cltd
mov
mov
jmp
dec
into
and
push
sbb
jecxz
sbb
sub
mov
mov
jge
jge
xchg
sub
push
xorb
push
cmp
xchg
dec
idiv
sahf
out
or
nop
in
insb
mov
pop
add
add
xor
push
clc
jl
stos
out
cmc
int3
inc
pop
push
repnz
inc
pop
adc
cwtl
push
jle
inc
shlb
mov
and
adc
stos
inc
adc
pushf
jns
sbb
sbb
or
mov
cmp
xchg
adc
or
out
mov
aam
push
lods
mov
mov
mov
int3
adc
pop
aad
mov
sbb
push
out
fdivrp
gs
repz
lods
in
icebp
and
xchg
loope
sbb
xor
out
sti
test
out
pop
nop
subb
popa
xchg
cmp
mov
test
or
test
sbb
cmpsl
pop
mov
shll
rclb
les
push
cmp
mov
daa
movsl
aas
fdivl
fldcw
jle
movsb
or
pop
out
sbb
sarb
add
nop
add
pop
cmp
jns
adc
sbb
pop
lret
pop
mov
lcall
push
add
pop
adc
dec
pop
and
sbb
add
into
inc
lret
jo
stos
aas
out
movsb
mov
int
mov
lds
mov
loope
test
jg
mov
scas
repz
ficoml
pop
fstpt
lcall
push
ficompl
clc
mov
and
cmp
rcll
das
andb
add
or
outsl
mov
psubd
pop
sbb
mov
stos
cmpsl
xor
mov
ja
dec
push
rorb
test
and
lds
cmp
mov
pop
imul
aad
or
jns
std
js
int3
shl
mov
test
addr16
in
mov
les
mov
test
pop
or
mov
xchg
adc
jmp
add
in
jle
leave
lods
insl
lahf
enter
or
mov
jns
xor
cmp
push
out
cs
les
icebp
and
scas
les
push
push
lcallw
sti
xor
ret
gs
scas
mov
movsl
inc
mov
movsb
mov
shlb
stc
add
push
rorb
or
xchg
push
push
pop
fisubrs
and
push
in
in
divl
int
dec
leave
repz
jmp
stos
iret
xchg
sbb
cmp
or
fstps
in
dec
ret
jns
inc
daa
inc
sbb
dec
bound
mov
test
sbb
out
lea
pmulhuw
aaa
adcb
sbb
add
pop
stos
inc
lahf
fcoml
push
xchg
call
push
sbb
iret
and
cmpb
or
mov
in
popf
pushf
pushf
add
push
jno
inc
scas
mov
push
ljmp
lods
inc
push
mov
pop
fistps
inc
sbb
xchg
cltd
jns
fidivs
leave
dec
inc
fdivrl
push
stc
push
shll
adc
jmp
adc
pop
dec
scas
add
aas
leave
fsubrp
cld
add
xor
xchg
dec
dec
dec
mov
add
jo
lods
push
inc
ret
push
rcll
clc
gs
in
sbb
test
or
pop
and
js
mov
into
scas
clc
dec
jb
data16
dec
cmpsl
and
jae
insl
inc
and
out
aam
mov
xchg
mov
or
leave
jmp
mov
ss
push
leave
flds
add
adc
lcall
or
adc
loopne
dec
xchg
or
insb
adcb
jns
or
decb
xor
jno
test
inc
popa
in
mov
ret
xchg
xor
bound
popf
cmp
test
fwait
and
ds
adc
mov
cli
out
mov
mov
cmp
and
xchg
jno
leave
popa
movsl
push
loopne
add
pop
loope
in
push
dec
repnz
add
cwtl
mov
jecxz
in
cmp
cmc
jb
mov
adc
orb
testb
cs
mov
or
mov
jbe
sbb
arpl
sub
push
js
mov
pop
movsl
ljmp
rep
jns
cmpsl
and
ljmp
sarl
test
jmp
out
ljmp
aaa
dec
insl
stc
lea
imul
adc
sub
fcoms
cli
inc
cmc
add
lods
ficompl
lret
jnp
jae
and
and
decl
add
fmul
stc
lahf
or
sub
add
push
mov
dec
dec
les
out
loopne
es
pop
test
sub
cs
sub
xchg
cmp
sti
push
je
out
sbb
mov
bnd
add
sub
lahf
jb
lahf
sub
stos
addl
or
sbb
jl
cmp
mov
dec
and
jle
leave
xor
stc
xchg
cli
add
jg
negb
xor
sub
pop
xchg
sahf
test
lds
notl
ret
pop
sbb
cltd
add
lods
push
sub
xor
xchg
clc
les
insb
enter
outsl
inc
fldl
push
insl
or
sahf
lret
xchg
jmp
mov
cmp
push
into
xor
fcomps
mov
lret
and
sbb
or
shrb
lea
cli
inc
adc
xchg
aaa
adc
xchg
push
xor
into
int3
push
aam
les
or
inc
test
repnz
dec
and
fnstcw
je
mov
sbbl
scas
insb
push
adc
orl
repz
and
push
sub
das
enter
sbb
push
and
xor
xchg
dec
shll
out
loopne
outsb
shll
fs
clc
adc
lods
into
roll
data16
stc
push
pop
iret
daa
xlat
xor
movsl
push
jmp
xchg
ja
jecxz
lds
or
or
imull
or
mov
fisubl
sub
mov
mov
ficoml
scas
or
lcall
dec
je
push
shrb
sar
popa
test
mov
leave
pop
xlat
out
int
fdivrs
icebp
mov
testb
mov
mov
dec
repz
loopne
outsl
add
add
add
rclb
aad
adc
in
rcrl
lock
and
add
mov
xor
pop
cmp
jnp
les
lods
add
stos
jno
push
jge
call
cmpb
test
stc
std
jp
xchg
xor
lcall
loopne
bound
repz
mov
insb
sub
call
push
aad
sbb
inc
popf
aad
loopne
mov
and
push
nop
pop
adc
xchg
mov
inc
sti
std
mov
pop
dec
sub
test
jmp
push
dec
add
sbb
mov
jl
dec
jo
ds
push
pop
or
aaa
xchg
cmc
fimuls
inc
aas
and
sub
adc
cmp
mov
xor
mov
push
fdivs
lret
addr16
lods
add
jbe
outsl
mov
fldenv
addr16
dec
scas
js
enter
cs
pop
mov
out
shll
push
jge
icebp
cwtl
popa
or
push
push
nop
fs
aas
inc
add
mov
pushf
lcall
scas
jns
ljmp
cmpl
push
add
mov
push
movl
cwtl
mov
lahf
pop
mov
les
test
jge
imul
push
jb
test
push
mov
jns
sbb
xchg
cmc
sar
imul
rolb
shrl
inc
imul
stc
cmpsb
push
test
addr16
or
pushf
mov
sub
out
clc
pop
mov
xchg
test
mov
inc
push
faddl
sbb
jno
mov
push
xchg
mov
repz
stc
bound
add
test
adc
pop
sbb
and
and
in
add
push
rcrb
inc
mov
testl
jge
dec
out
xchg
adc
out
xor
popa
jb
into
push
iret
xchg
out
lods
xchg
subb
cmp
xor
jno
dec
push
stos
movsl
mov
cmp
and
xor
and
cld
pop
movsl
lret
repnz
dec
xchg
shrb
pop
repz
lret
push
lea
sub
pop
xchg
xor
xchg
mov
or
xchg
out
cli
cmc
push
hlt
jl
inc
cmp
or
cmpb
mov
add
js
mov
cld
pushf
jae
bound
lahf
sbb
lock
ficomps
jg
jno
loopne
lret
les
mov
cmpl
mov
fs
adc
stos
jo
out
mov
leave
push
insb
inc
daa
inc
outsb
and
jns
jmp
ja
lcall
stos
aas
push
add
testl
das
cld
in
fisttpll
addr16
sbb
mov
adc
pop
pop
addb
sbb
sub
and
jno
and
call
jecxz
shr
push
imul
sbb
pop
ficompl
in
lods
mov
and
sbb
xor
int
jmp
insl
cmc
xor
dec
mov
or
mov
xor
pusha
stos
push
fcomps
pop
push
call
add
int
mov
mov
rcr
call
lods
inc
inc
out
movsl
enter
pop
scas
mov
or
add
jmp
push
popf
inc
and
gs
lret
jl
jbe
push
add
xor
cltd
movsl
mov
dec
adc
call
push
movsb
addr16
lcall
ds
dec
sbbb
sub
mov
dec
sahf
call
aam
and
movsb
mov
iret
lock
push
sub
mov
sbb
mov
sub
sar
enter
fistpll
hlt
adc
add
test
sbb
and
dec
in
mov
mov
mov
add
xor
and
sarb
lcall
dec
adc
sbb
xchg
adc
out
adc
inc
mov
fdivr
or
sbb
shll
cs
aaa
jg
and
sbb
push
cmp
dec
jnp
mov
add
mov
movsl
enter
je
push
ds
or
and
ret
inc
add
repz
pop
or
dec
dec
mov
add
std
and
iret
push
pop
js,pn
mov
dec
shll
insl
cmc
gs
jnp
test
cmpl
pop
fdivrl
mov
sarl
aad
xlat
enter
cld
or
mov
movsl
bound
inc
ja
lahf
aas
out
mov
mov
es
cltd
mov
add
jnp
outsb
cmp
jle
ss
fldcw
sahf
adc
test
cmp
ds
adc
aam
call
cmp
or
xchg
icebp
cmp
or
dec
dec
gs
jb
adc
stc
lds
imul
lods
add
loopw
sbb
mov
xchg
dec
outsb
popf
xchg
sbb
mov
inc
std
xchg
jb
lds
out
aad
xchg
pop
rcll
add
cmpsb
pop
jecxz
cltd
jmp
or
aam
sbb
lods
stos
fwait
pop
mov
mov
cmp
jbe
jnp
insb
inc
xorl
testl
add
mov
sbb
or
arpl
xor
adcb
mov
mov
add
incl
adc
pop
inc
fwait
out
xor
into
xor
pop
dec
popf
xchg
test
or
mov
je
inc
mov
out
mov
mov
cmpsb
jecxz
sahf
adc
movsb
push
or
jg
out
pop
insb
mov
or
fildl
popa
aas
jmp
sub
nop
enter
nop
sub
xchg
sbb
add
mov
jl
xchg
inc
movl
cmp
stos
jne
mov
repz
loop
dec
jle
sub
divb
or
arpl
aas
js
mov
in
jl
sbb
shrb
aas
imul
add
pop
stc
jb
movsb
sub
push
aad
pop
iret
movsl
cmp
mov
push
dec
mov
xlat
in
mov
andl
mov
xor
loope
icebp
mov
in
cmpb
add
pop
add
imul
cmp
into
pusha
es
rclb
aad
mov
popf
int3
fs
repz
stc
add
ds
and
mov
cltd
lods
rclb
lcall
xor
fdivs
pop
pusha
sti
xchg
test
push
imul
pop
mov
inc
rol
jns
cltd
pop
or
sti
enter
sbb
xor
cs
inc
call
jb
cmp
lahf
test
mov
mov
mov
sbbl
subb
aas
rep
faddl
dec
mov
sti
push
ret
gs
cli
mov
pop
push
cwtl
insb
popa
stc
test
sbb
hlt
movsb
push
outsb
mov
seta
sbb
loop
mov
negl
adc
in
dec
lahf
lods
aad
pop
aad
xchg
dec
add
jle
cld
cmp
mov
xchg
es
mov
jl
dec
incb
mov
nop
dec
cmp
int
mov
add
loopne
fcmovb
mov
or
dec
bound
call
sub
lret
inc
insl
ja
lahf
fsubrl
mov
and
sbb
push
sub
cmp
ds
filds
push
sub
mov
daa
add
mov
pop
aam
mov
inc
sbb
imul
ret
call
iret
lret
or
lods
cmpb
push
shll
dec
mov
xlat
data16
fcoml
add
and
aas
call
push
xor
lret
sti
shrb
scas
push
inc
ret
daa
mov
push
add
cmpsl
jo
mov
pop
add
pop
mov
test
xor
cmp
cmc
cltd
nop
jb
mov
sti
jns
mov
nop
lds
dec
jge
xor
mov
xor
fs
sbb
cmp
cltd
push
add
repz
out
insb
pop
hlt
add
push
sub
lret
dec
pushf
add
xorb
pusha
inc
adc
push
popf
jl
scas
push
xchg
rcl
xchg
cmp
jecxz
push
popf
push
and
outsl
mov
dec
shlb
mov
cmpsb
test
xchg
fdivs
lcall
dec
out
outsb
add
mov
mov
enter
xor
lret
das
out
mov
divb
subl
loopne
rcrl
xor
dec
loop
adc
je
mov
mov
jb
cmp
mov
pop
fs
pop
push
sbb
ficoml
sub
mov
incb
sahf
mov
jne
inc
mov
push
inc
push
es
in
loop
out
jne
enter
sahf
int3
push
mov
mov
icebp
inc
lcall
push
imul
aas
or
addr16
push
sub
jl
aam
mov
scas
inc
dec
seta
mov
movsl
jae
test
shl
imul
int3
pusha
dec
hlt
push
subb
je
jmp
insl
xchg
fs
cmp
dec
mov
out
lret
fisubl
mov
mov
xchg
pop
rcrl
add
mul
mov
dec
or
sbb
jp
xor
scas
js
test
xchg
test
dec
pop
dec
daa
push
divb
pop
mov
mov
mov
icebp
add
adc
lods
push
dec
in
adc
loop
fnstenv
adc
and
mov
sti
mov
add
xchg
and
xor
js
nop
inc
out
push
fmul
pop
sbb
shlb
pop
into
aad
loope
mov
jmp
mov
mov
cld
fucom
test
and
jle
pushf
mov
les
ja
or
test
cmp
subb
dec
repz
adcl
dec
sub
sbb
jge
fisubrs
fidivl
dec
and
out
and
rcl
jno
je
xor
aas
loope
int
in
inc
ret
add
arpl
mov
xchg
rorl
xchg
int3
incl
outsl
imul
xor
test
bound
in
mov
jne
fimuls
and
push
xchg
pushf
inc
cmp
pop
test
dec
add
xchg
stos
test
push
scas
pushf
xchg
jnp
in
mov
out
mov
test
pop
loopne
xor
xor
xchg
or
push
cmp
push
iret
pop
das
mov
jne
push
pop
or
pop
daa
adc
adc
je
jns,pn
test
add
pushf
xor
and
dec
out
lahf
sahf
js
test
scas
sub
popf
cmp
mov
inc
cs
lds
inc
and
and
out
mov
mov
jl
in
and
cwtl
arpl
jge
or
loopne
cmp
imul
sub
jae
and
mov
jbe
cmc
imul
push
push
pop
pop
pop
or
add
cmp
lcall
popf
mov
pusha
xchg
movl
pop
arpl
loopne
shll
jge
leave
pop
stc
adc
sbb
mov
out
or
int3
daa
adc
add
nop
jg,pt
movsl
lcall
cmp
daa
mov
jecxz
sub
jp
ret
out
imul
pushf
aas
push
rorl
add
addr16
sti
in
mov
iret
adc
inc
int3
inc
mov
stos
mov
jmp
dec
pop
xor
mov
push
xchg
jp
xchg
jne
fcoml
pop
std
push
xor
mov
pushf
or
lret
push
jne
stos
jle
mov
push
add
test
test
mov
mov
mov
loopne
pop
shlb
xchg
cmp
int
fists
pusha
mov
in
test
mov
sub
xchg
repz
jno
sub
jge
mov
adc
test
cmpsl
lods
dec
int
outsb
jge
inc
pusha
pop
fsubrs
int
jp
test
aad
andb
mov
push
test
aam
test
add
inc
sbb
sbb
mov
pop
push
or
cmp
xchg
imul
addr16
shl
in
rcll
scas
push
inc
jb
mov
lods
pop
int
lods
push
sbbb
dec
das
push
ss
out
push
inc
in
loop
inc
mov
call
push
sbb
imul
jle
mov
fsubrl
dec
repz
fcoms
add
cmp
pop
mov
adc
add
add
xlat
mov
ror
lock
testl
add
arpl
jne
xchg
mov
xchg
test
js
fsubl
mov
add
or
mov
hlt
push
fwait
lods
or
lcall
cmpsl
test
ficoml
jge
dec
jo
pop
sbb
sbb
mov
shlb
scas
or
adc
dec
push
jae
cmp
adc
rcl
cmpsb
jmp
in
push
int3
jle
pop
pop
repz
and
stos
push
loope
call
stos
bound
jmp
mov
aad
cwtl
sti
rcrl
push
jne
jnp
js
xorl
pushf
cltd
cs
lods
fwait
fs
fdivr
mov
push
jge
xor
out
mov
jnp
jp
xchg
arpl
jl
test
mov
jns
xchg
movsb
add
mov
es
mov
xor
sbbl
daa
cmp
je
aaa
js
test
cmpsb
pop
xchg
inc
mov
push
scas
inc
loopne
sbb
and
push
pop
movsl
or
insb
movups
dec
pop
mov
and
add
test
sbb
pop
fistpl
jne
out
test
arpl
lret
sbb
jle
adc
rolb
adc
add
xchg
mov
sahf
insb
jnp
iret
and
push
out
xor
nop
cmp
enter
mov
dec
orl
sbb
add
cmp
popl
or
push
inc
mov
enter
mov
clc
or
lods
push
cmp
sbb
clc
clc
push
std
adc
mov
int3
arpl
fadds
shlb
mov
mov
rcrb
fbstp
xor
jb
ja
flds
xchg
jmp
sub
out
or
fimuls
jne
jle
inc
js
pop
adc
repnz
arpl
inc
xchg
mov
sahf
cmpsl
pushf
adc
lds
dec
sub
rcrl
lcall
or
mov
cmpsb
pop
hlt
clc
and
xlat
mov
add
push
or
inc
sub
jb
push
xchg
inc
mov
inc
mov
into
push
adc
lahf
xchg
xor
ds
push
jbe
mov
jno
outsb
sub
es
jg
mov
xchg
mov
ret
ljmp
iret
mov
mov
faddp
lds
add
leave
lods
add
fimuls
imul
dec
test
adc
ret
inc
jne
insb
je
test
mov
fsub
mov
mov
test
jb
dec
xchg
decb
fs
mov
or
xchg
adc
push
sub
and
sti
incl
mov
daa
push
xchg
xchg
shl
insb
mov
scas
lods
pop
ja
add
out
mov
les
jl
pop
pushl
cltd
inc
pop
std
mov
rcrb
pop
int3
add
inc
or
ja
cwtl
mov
int
mov
rclb
mov
shlb
aam
call
cmp
pop
mov
das
push
push
push
dec
popf
in
test
out
leave
mov
sbb
xrelease
dec
xlat
xchg
and
mov
mov
jno
jge
push
pop
xor
std
stos
push
mov
ret
ss
repnz
cmpsl
lcall
mov
xchg
xlat
xor
in
outsl
lock
mov
addl
sub
pop
and
cmp
add
push
cmp
cmp
inc
popw
sub
xchg
sub
dec
add
lock
aad
cmovs
mov
out
xor
lcall
xlat
mov
mov
adc
out
add
inc
cmc
dec
insb
jno
mov
add
push
dec
sarb
ret
jmp
lds
mov
mov
into
lahf
jns
mov
cmp
ret
cmp
icebp
mov
and
cmpsb
loop
sub
je
and
or
nop
add
fsts
sbb
mov
mov
iret
cmp
rcrb
xchg
mov
shr
adcb
out
pop
test
pop
mov
mov
mov
aaa
jp
dec
imul
lods
jns
fildl
and
enter
jbe
ss
nop
jp
or
add
push
in
fwait
aad
push
mov
xchg
ja
push
jbe,pn
xor
out
imul
jle
cmpsl
jne
fldt
aaa
push
lock
mov
pop
xchg
call
cmc
xchg
fimull
sbb
cmp
jo
fisttps
pop
cwtl
push
enter
js
fxch
repnz
adc
push
dec
and
push
popa
fimull
mov
sahf
out
in
jne
jno
jb
test
xor
aam
xchg
sbb
push
cmp
inc
es
sub
xchg
ljmp
add
ss
lock
mov
test
in
hlt
push
adc
cs
and
mov
xor
or
movsb
lcall
arpl
repz
and
arpl
icebp
fdivs
lods
es
sbb
xchg
imul
sbb
jo
push
sub
inc
es
shll
inc
repz
je
sbbl
aam
test
enter
push
adc
cmp
jno
mov
lahf
int
xor
stos
pop
insb
xor
sbb
bound
mov
xor
add
sub
cmp
jo
sbb
mov
ljmp
mov
inc
fs
inc
popf
insl
push
and
cmp
xchg
arpl
call
jp
push
jne
scas
movsl
push
dec
pop
repz
fistps
push
add
clc
pop
mov
mov
cmpl
lock
cli
lds
shrb
mov
icebp
in
mov
push
push
in
arpl
inc
adc
test
xor
imul
sbb
leave
pop
jle
pusha
pop
js
jae
xchg
lahf
or
imul
stos
adc
add
lock
push
aam
jns
lcall
movsl
loope
inc
fs
jbe
enter
int3
or
insl
mov
test
insb
push
xor
xor
add
and
pop
mov
ljmp
pop
pop
js
leave
in
xchg
test
push
xor
fwait
cmpsb
sub
jnp
mov
jnp
xor
xchg
push
loop
popf
es
nop
outsb
sahf
mov
ret
arpl
inc
scas
fldcw
add
pop
mov
pop
es
fnsave
fiaddl
add
pop
add
pop
xor
fcmovnb
dec
or
ss
or
jecxz
add
mov
arpl
ja
mov
addr16
test
pop
incb
jno
push
fsubrl
sahf
repz
test
movsl
jg
test
jae
lcall
sub
xchg
cmp
stos
inc
push
pop
add
bound
lret
data16
fnstenv
push
pop
mov
ds
jb
push
xchg
out
outsb
push
and
out
je
mov
push
jns
adc
adc
dec
jg
xchg
dec
sarl
sub
or
out
or
mov
je
loopne
adc
inc
xchg
loop
mov
movsl
inc
xchg
std
int
es
data16
clc
inc
pop
popa
rcrl
je
adc
mov
or
and
enter
test
jecxz
push
outsb
or
inc
cmc
adc
dec
vpcomub
push
or
cmp
sub
faddl
lcall
std
sub
xor
imul
xchg
shlb
cld
cs
jg
fcomps
pop
add
xchg
or
fimuls
pop
lret
arpl
sbbb
hlt
flds
iret
aam
stc
lock
imul
arpl
out
jecxz
mov
mov
bound
xrelease
insl
in
sbb
mov
adc
das
lock
stos
sbb
aas
insb
aaa
pop
push
gs
lcall
std
pop
mov
aas
ss
outsl
loopne
add
sbb
xor
cmpxchg
jecxz
dec
sub
sub
jbe
pop
scas
xor
aaa
xlat
imul
fwait
push
inc
push
mov
add
cmpsb
add
xor
pop
lods
adc
int
cmp
ja
cmp
faddl
out
loopne
jne
dec
loop
adc
mov
or
sbb
sti
test
dec
pop
test
inc
loopne
cmp
js
es
in
inc
cmp
jnp
lahf
push
mov
loopne
jnp
stos
nop
int
sub
pushf
ljmp
or
mov
mov
jo
in
inc
and
xchg
xchg
inc
jno
mov
in
test
sbb
stos
adc
ja
hlt
xchg
out
add
aam
lock
mov
daa
scas
inc
mov
sbbl
dec
jg
xor
mov
add
mov
dec
mov
xchg
fwait
adc
sub
movsb
adc
and
xor
and
ja
fsubrs
jo
xchg
outsb
out
sbb
jns
sbb
xor
jo
mov
jge
adc
dec
dec
add
xor
lds
mov
test
ljmp
ret
or
cli
stc
out
dec
scas
out
mov
push
mov
lock
bswap
push
sub
sarl
sbb
sub
test
pop
jge
adc
push
cwtl
pushf
mov
dec
sbb
push
xchg
mov
call
or
ret
subl
loopne
mov
adcl
xchg
pop
push
and
dec
lret
fldl
xor
jne
and
insw
add
mull
xchg
shlb
cmp
call
test
inc
fwait
sub
dec
test
daa
push
mov
adc
inc
and
int
and
jecxz
xor
sbb
adc
mov
adc
cltd
cmp
shlb
push
cmpsl
fwait
aas
pop
cmc
adcb
cld
mov
cli
lea
ja
outsl
je
mov
cmpsb
in
jecxz
jge
in
adc
popf
test
insl
inc
bound
sub
and
sub
inc
jle
dec
mov
mov
jae
in
leave
dec
ljmp
test
fstl
insl
or
cld
mov
or
call
xchg
pop
sarl
fldl
xchg
jge
int3
lret
adc
mov
repz
enter
add
shll
xor
subl
xor
mov
xor
push
mov
sub
mov
arpl
push
and
and
add
mov
rorl
in
adc
in
movsb
outsb
and
loopne
mov
mov
std
imul
leave
mov
jecxz
sub
arpl
pop
and
sbb
iret
lods
inc
js
mov
scas
ror
sub
dec
pop
in
sub
jecxz
cwtl
pop
xchg
pop
ljmp
lock
sbbb
pop
pop
xor
out
add
rcrl
xchg
ficomps
repz
test
cs
mov
bound
sbb
adc
adc
mov
adc
loop
jmp
jge
inc
arpl
pop
cmp
notl
xchg
sbb
loopne
pop
insb
sbb
int
push
push
fcoml
data16
xchg
inc
and
adc
out
stc
mov
inc
and
leave
jge
jne
scas
into
cmp
jno
jo
cmp
subb
int3
or
stos
adc
cmp
cmp
push
jle
adc
xor
enter
dec
sub
jbe
push
or
xchg
daa
mov
leave
jb
jle
shll
out
mov
pop
cmp
push
mov
das
and
cli
fwait
jle
xchg
rorb
xchg
jns
in
insb
loopne
pop
jge
rolb
mov
push
rcrl
repnz
rcrb
adc
scas
jne
xchg
xor
cld
dec
fstps
pop
sbb
sub
jbe
fdivrl
mov
push
cmp
les
jg
sbb
je
sysret
dec
stos
scas
loope
repz
popf
jp
icebp
and
xor
xchg
cmp
or
adc
sbb
mov
mov
pop
lods
repz
cmpsb
add
mov
lea
out
dec
fcomp
insl
jno
fmul
ja
mov
imul
clc
je
popa
fsubl
rcrl
notl
sub
ret
pop
paddb
or
leave
in
leave
andl
test
cwtl
icebp
mov
mov
xlat
fwait
adc
arpl
lret
push
rcll
cli
inc
lret
pop
insl
inc
mov
push
outsl
push
dec
pop
orb
push
fcompl
js,pt
sub
pop
push
mov
idiv
stos
dec
daa
into
cli
jg
pop
jp
dec
xchg
pop
jmp
ja
call
sub
sbb
push
in
testl
mov
ret
movsl
pop
mov
mov
xor
add
and
add
fadds
pop
inc
cltd
scas
mov
lods
jbe
cmp
add
rcl
sbb
or
lret
popa
jbe
ret
xchg
cmp
jge
cmp
js
mov
insb
xchg
jg
cmpsb
mov
hlt
pop
and
push
gs
ror
stc
lret
dec
jne
insb
stc
icebp
das
int
test
cmp
inc
aas
test
push
loopne
imul
mov
outsl
outsl
loop
jbe
loopne
xchg
ja
addr16
sub
lock
mov
iret
mov
sbb
inc
xchg
jmp
jmp
sub
sarb
rorb
dec
sbb
sbb
push
pop
popf
je
aam
cmp
add
inc
cmc
cltd
in
xchg
std
dec
les
add
mov
ret
adc
scas
sbb
mov
and
mov
mov
sbb
inc
and
icebp
add
xchg
shlb
hlt
push
cmp
ss
cmc
jb
ja
rclb
jge
xchg
jle
decl
je
jl
dec
push
jns
sbb
mov
pop
hlt
ds
pop
jl
xchg
mov
mov
pushf
dec
mov
call
jne
push
les
mov
pop
test
jle
mov
xor
movsb
adc
inc
push
call
cmp
fs
push
ljmp
jg
xchg
shll
mov
cltd
or
sbb
dec
lods
inc
inc
sbb
les
in
jp
jecxz
adc
jne
ljmp
push
add
aad
mov
sub
jnp
test
sbb
inc
repnz
clc
push
cld
in
stos
in
ja
sbb
fcoml
pushf
std
aad
movsl
or
sbb
jns
stc
xchg
mov
sub
xchg
pop
push
rorl
pop
jmp
xchg
or
xchg
jb
mov
aaa
stos
pop
adc
xor
aad
jmp
mov
inc
fimuls
xchg
and
mov
xlat
fcoms
cmpsb
loopne
inc
push
push
xchg
outsl
dec
movsb
lea
cs
adc
pop
adc
sbb
movsl
rcrl
in
pop
fldenv
call
cmpsb
stos
cs
daa
and
mov
sub
pop
scas
add
cmp
repz
or
pop
test
pop
pop
mov
ss
or
lds
aam
mov
dec
and
mov
xor
or
jbe
cmc
adc
sbb
xor
fcmovu
pop
sbb
sub
addl
push
add
lahf
wbinvd
mov
sbb
scas
out
subl
push
js
push
test
dec
aas
arpl
out
xchg
mov
inc
xor
mov
call
and
fidivs
cmp
aad
mov
push
cmp
iret
ret
addr16
and
daa
push
mov
xlat
imul
add
lds
and
mov
fsts
and
aas
push
mov
mov
in
orb
movsb
sbb
and
mov
inc
sbb
cmp
cli
or
leave
dec
adc
test
dec
cmp
push
je
sub
rclb
nop
inc
gs
mov
fisttpl
add
jns
sarl
push
xchg
cli
stos
sbb
cmp
pop
test
xor
ret
and
push
mov
mov
add
mov
xor
aas
xor
shll
dec
int3
add
pop
lcall
xchg
or
dec
xchg
push
cmp
pop
mov
jb
jg
popa
cmp
dec
fldenv
add
xchg
cmp
shlb
push
sbb
enter
test
lock
pop
rcrb
stc
out
push
lcall
cwtl
xor
mov
je
push
sbb
or
div
in
inc
or
cmpsb
dec
incb
decb
push
ficomps
mov
insl
inc
mov
mov
cmp
out
jnp
sbb
fcompl
ret
ja
jmp
std
add
pop
and
xor
stos
std
fistpl
imul
loopne
pop
sub
sbb
fstpl
dec
sbbl
xor
mov
or
mov
ja
mov
xchg
mov
push
xchg
sbb
push
in
mov
lock
pushl
mov
mov
mov
ja
mov
mov
lahf
inc
lret
xor
inc
stos
xchg
sub
push
loop
int
xor
loope
in
rcrl
jnp
push
pop
cmp
arpl
adc
fcompl
cld
or
or
in
inc
jne
mov
or
sbb
jns
xchg
and
jp
dec
call
or
stos
aas
cmp
mov
xor
ds
adc
mov
xchg
shrb
xor
std
add
jae
adc
sti
xor
and
jae
scas
cmpsb
jno
xchg
pop
inc
mov
jmp
outsb
sub
stos
rorl
jmp
xchg
add
int
mov
push
incl
mov
push
cli
adc
in
adc
xchg
mov
pop
adc
lods
shlb
sub
daa
mov
mov
pop
and
sahf
push
jmp
lods
js
es
mov
pop
imul
lahf
or
out
popl
and
cmc
push
test
stos
fsubr
roll
addl
adc
inc
addr16
sarb
sub
or
repz
addr16
xchg
push
mov
dec
das
xor
popf
shll
lcall
mov
call
enter
mov
mov
push
js
jnp
or
cltd
sub
pop
ja
xor
outsb
arpl
add
mov
fcoml
nop
or
adc
cli
mov
and
cmp
ds
xchg
fisttpl
idivb
imul
and
jbe
lds
mov
fiadds
fs
and
jp
call
lret
jno
int3
mov
adc
fwait
mov
daa
mov
ds
cld
movq
popf
loope
lods
lock
arpl
jl
dec
arpl
int
scas
sub
sbb
xor
pop
jne
insl
xchg
xchg
push
adc
inc
jl
add
xchg
and
call
rorb
fcmove
and
mov
adc
aas
pop
push
jb
stc
inc
lret
pop
xchg
pop
mov
add
pop
add
aaa
pushf
dec
insb
xchg
loope
xor
dec
pop
push
jne
shl
pop
cmp
fdivrs
mov
outsb
dec
loop
lock
fstps
inc
test
pop
push
cmp
rcll
mov
insb
popa
addr16
sar
fdivs
xor
out
in
inc
cmp
imul
dec
push
mov
mov
fbstp
mov
cmpb
sbb
outsl
xchg
rorb
push
cmp
nop
call
pop
rclb
cmp
frstor
loopne
mov
mov
cmp
jge
mov
xchg
cli
cmpsb
mov
imul
cwtl
cs
repnz
call
pushf
int
push
mov
mov
inc
xchg
popa
xlat
mov
or
push
sbb
push
outsb
dec
mov
je
mov
mov
mov
mov
pop
ret
lods
pop
out
aaa
mov
sarl
test
stos
je
sbb
xchg
daa
sub
pop
push
add
mov
and
data16
ljmp
pop
jo
inc
je
push
out
inc
xchg
rorb
into
cmp
mov
insb
cmpl
push
add
repnz
and
dec
inc
sub
dec
test
add
ds
negb
xchg
cli
daa
stos
int3
hlt
jle
mov
or
test
inc
mov
pop
loopne
xchg
add
jnp
mov
fs
aad
fwait
push
dec
fwait
push
ficomps
pop
sub
jno
jp
je
rdtsc
lea
adc
fisttps
xchg
lea
icebp
out
pop
out
dec
or
insb
pop
lret
mov
rorl
xor
cmp
test
pop
mov
dec
adc
shll
and
push
jne
pop
xor
jo
sub
add
std
inc
popa
jp
or
sarl
rorb
xchg
add
pop
hlt
push
not
rorl
insl
mov
or
les
push
sbb
push
out
lds
and
jns
and
pusha
mov
pop
jp
hlt
mov
mov
insl
fsubrl
xor
aas
sub
xchg
sbb
lcall
repz
jge
lods
mov
daa
xor
stc
mov
cmpsl
das
jns
add
or
pushf
pop
jnp
xchg
aaa
cli
mov
push
fisubl
lods
xchg
adc
loop
sarl
aaa
xchg
fbld
rorl
pop
gs
xchg
pushf
lock
add
cmp
sbb
pop
mov
mov
iret
idivb
xchg
push
lods
adc
lahf
dec
jecxz
imul
loopne
sub
mov
or
hlt
mov
dec
aas
jmp
int
ret
out
gs
xchg
push
lock
add
xchg
xor
mov
sbb
fistl
xor
enter
adc
sub
or
xor
in
or
pop
loope
adc
idivl
pop
xor
sti
ds
mov
inc
mov
and
pop
push
or
pop
jbe
stos
pop
repnz
scas
jnp
sbb
adcb
jno
xorl
inc
imul
scas
adc
inc
fmull
clc
mov
cmpsl
addr16
jno,pn
ret
bound
pop
call
arpl
sbb
fwait
mov
jne
push
add
pop
adc
mov
jnp
pop
push
jno
test
iret
repz
addr16
adc
mov
aaa
pop
and
jb
adc
push
addr16
pop
aas
loope
es
iret
and
xor
xchg
lret
jmp
aaa
mov
fisubs
scas
jmp
xor
xor
cmp
shll
sti
sub
andl
xor
andl
mov
dec
xchg
push
neg
and
sub
mov
mov
loop
shll
cltd
icebp
cmp
cmpsb
mulb
xchg
fcmovnu
pop
cmp
gs
mov
stc
scas
out
mov
mov
cmp
inc
loope
add
jbe
rorl
push
jno
ljmp
jge
mov
ja
inc
inc
pop
addr16
insb
into
in
lods
cmc
sub
or
xchg
leave
xlat
fistl
mov
insb
sahf
outsl
sbb
jge
push
mov
add
nop
fldenv
mov
jp
loope
cmp
mov
dec
xor
cmpsb
push
pop
sub
sbb
pop
ss
sub
cmp
pop
ret
or
sub
adc
jg
addl
insl
xor
cmp
rorb
mov
adc
sbb
cli
pop
jnp
sbb
mov
les
pop
repnz
inc
and
pop
faddl
and
cmp
das
xor
push
and
test
scas
fstpl
sbb
sti
xchg
dec
es
sti
js
push
add
repz
push
xchg
jb
xchg
xor
push
or
push
xor
arpl
jnp
sbb
call
movb
outsb
insb
mov
les
or
jnp
je
sbb
and
sub
mov
inc
mov
outsl
push
outsl
ror
clc
sarb
pusha
aaa
jle
or
inc
inc
adc
das
and
out
mov
cmp
xchg
sbb
sub
stos
jne
insb
hlt
mov
jecxz
mov
dec
sbb
pushf
push
fwait
cmc
inc
repnz
dec
mov
or
jbe
xchg
fmulp
inc
jnp
pop
jl
leave
sub
xchg
stos
lret
pop
imul
sahf
pop
and
shrb
cmp
mov
test
rcll
sub
lods
jne
jns
xor
testb
and
andb
mov
jge
mov
push
mov
xor
mov
shrl
push
add
mov
pushf
orl
pop
adc
adc
std
sarl
loop
loopne
pop
ja
jge
cmpsl
out
pop
jnp
push
xchg
pop
ja
xor
loope
or
ss
jo
lods
mov
cli
nop
mov
lock
fidivrs
mov
rolb
ficoml
dec
stos
mov
cli
mov
dec
inc
ffreep
orb
wbinvd
aaa
pushf
pop
inc
mov
xchg
lret
mov
nop
lods
and
push
mov
cwtl
sbb
mov
daa
and
repnz
add
push
lea
into
out
popf
adc
fisubs
add
pop
add
fdiv
jmp
sub
mov
negl
add
push
dec
cmpl
cmpsl
mov
std
and
add
and
shrl
pop
insb
or
pop
js
sub
hlt
xor
stos
nop
xor
arpl
gs
imul
add
fiadds
sbb
adc
push
xchg
mov
xchg
or
xorb
xor
inc
jb
jns
test
addr16
xchg
shrl
or
mov
inc
push
aaa
mov
mov
fmuls
ret
inc
push
xchg
mov
and
out
loopne
push
test
in
fmuls
xor
out
adc
enter
fdivrp
mov
lcall
sti
push
pop
and
popa
sti
mov
sub
loope
xchg
inc
mov
shll
inc
mov
movzbl
outsb
pop
ljmp
popf
insb
mov
shll
inc
sbb
xchg
outsw
push
mov
mov
mov
cmc
mov
stos
inc
mov
mov
inc
dec
jbe
push
add
adc
fnstcw
hlt
mov
mov
mov
test
insl
mov
mov
mov
pop
and
xor
mov
jmp
push
cld
cld
push
cmpsb
xchg
out
cmp
int3
pop
in
fcmovu
jb
add
shl
loopne
shll
mov
stc
adc
inc
cmp
jne
fistpl
fsubr
repz
gs
jg
mov
add
xor
sub
lock
sub
push
jl
shrb
loopne
mov
sahf
sbb
out
out
cmp
imul
shrl
mov
shrl
sub
test
addb
sti
iret
addr16
adc
loop
jl
pop
cmp
fs
popf
sbb
mov
pop
int
adc
sbb
addb
mov
jno
or
out
inc
mov
pusha
inc
pusha
imul
aad
into
dec
cli
pop
xor
insb
lds
pop
test
das
adc
das
nop
and
arpl
rclb
jo
repnz
jge
jmp
insl
inc
out
jmp
cmp
inc
xchg
xor
or
jb
cmp
repz
bound
insl
loop
mov
pop
dec
pop
xlat
sbb
jecxz
ror
jnp
cwtl
jo
pop
mov
push
sahf
pushf
lret
adc
mov
push
and
jno
mov
xor
fs
lahf
jge
pop
shrl
ja
fwait
cmpb
or
jmp
imul
movsb
pop
shl
cmpsb
and
scas
clc
shr
das
push
or
add
push
pop
movsb
movsl
sahf
es
xchg
ss
sub
in
pusha
jnp
int3
enter
add
fucomi
mov
cmpsl
xor
inc
inc
int
pusha
cmc
sahf
pop
sbb
dec
mov
push
imulb
movsl
roll
pop
stos
stos
or
dec
js
lahf
adc
jge
cmp
lods
jnp
sbb
mov
inc
cmpsl
dec
aam
mov
xor
pop
loope
xchg
sbb
push
iret
jl
and
sbb
fs
xor
dec
fldt
xor
and
sbb
sub
xchg
push
nop
mov
shlb
testl
jnp
adc
jmp
jle
in
ret
adc
xor
jne,pn
cmc
std
pop
aaa
add
jecxz
fildl
pop
jns
mov
fimuls
popf
and
sbbb
addb
lds
jl
mov
xchg
pusha
jle
xor
jbe
icebp
push
cmp
sub
setle
cmp
mov
inc
je
sahf
jl
sarl
and
fsubs
pop
push
popf
push
popa
cltd
in
push
lahf
rcr
dec
jg
mov
pop
mov
push
scas
push
xor
fldenv
gs
rorl
mov
mov
out
sub
mov
int3
cmp
aaa
or
mov
in
mov
je
add
ret
inc
fistpll
and
and
lret
adc
mov
mov
xor
int3
das
cmp
sbb
push
push
ret
aam
ja
pop
mov
addr16
or
ret
std
or
xor
inc
push
xor
cmpsb
sahf
mov
dec
xchg
mov
dec
mov
pop
jp
jno
xor
mov
es
dec
mov
fcompl
jb
push
xchg
add
xchg
lret
pop
push
jge
mov
std
xor
mov
push
mov
mov
fstps
add
lcall
xor
into
cs
push
dec
adc
int
orl
jne
inc
jl
push
fwait
ds
lahf
dec
movsb
pop
xlat
xchg
mov
lret
es
mov
sti
or
mov
pusha
leave
xor
and
or
les
je
dec
and
popa
loopne
xor
inc
daa
mov
mov
jno
push
dec
jmp
xchg
cmp
inc
xor
inc
jge
fists
ja
fildll
pop
pop
arpl
arpl
and
and
movsb
add
aam
mov
xchg
shl
xor
jbe
lret
jmp
jne
mov
hlt
movsb
mov
push
xchg
leave
xchg
jl
test
imul
add
stos
das
les
outsl
lret
adc
and
pushl
clc
pop
pop
mov
mov
add
imul
xchg
lea
ss
cmpsl
adc
enter
into
bound
pop
or
test
cmc
fldcw
sbb
mov
add
dec
subl
pop
and
jl
adc
clc
test
sub
dec
out
mov
xchg
mov
push
aaa
cmp
cmp
stos
fmull
addl
xchg
inc
mov
cwtl
add
and
xor
das
pusha
pop
int3
and
sbb
mov
cli
std
aas
and
sarb
dec
cltd
mov
lds
cli
shl
and
enter
cmpsb
mov
add
xor
jbe
dec
pop
in
mov
ret
mov
das
jp
test
nop
mov
arpl
xchg
jo
mov
xor
push
nop
add
sti
dec
stc
jo
xor
mov
mov
cltd
dec
sbb
xchg
dec
jnp
sti
mov
ds
ret
int3
mov
and
add
and
inc
rcll
and
or
dec
sbb
dec
adcb
xchg
scas
xchg
mov
repz
mov
jno
loopw
daa
xchg
jbe
xchg
or
fcmovnu
sti
iret
add
cs
movsb
push
push
mov
mov
mov
sbbb
add
pop
push
cltd
bound
hlt
mov
cmp
jmp
jl
adc
or
mov
cmp
add
inc
or
inc
xchg
rcr
int
test
xor
add
inc
jge
cli
xchg
mov
or
jmp
ja
mov
xchg
cmp
mov
roll
or
into
dec
andl
fwait
mov
pushf
pop
popa
pusha
xchg
inc
cmp
outsb
shl
pop
jp
rorb
and
pop
sarl
andl
out
lds
iret
push
and
sub
fildll
inc
xor
or
addr16
or
movsl
sbb
cmp
add
cwtl
jg
and
sub
js,pt
jnp
push
sub
xor
mov
xchg
mov
xchg
mov
adc
jae
and
dec
loopne
cmp
xchg
mov
in
mov
pop
sbb
in
jae
xchg
jge
pop
enter
push
jmp
fmul
dec
ss
adc
pop
jnp
fmuls
cltd
mov
imul
jae
inc
pop
ret
sbb
xchg
inc
adc
mov
xorb
adc
inc
xchg
add
scas
stos
sbb
out
jecxz
fstpt
sub
call
xor
pop
mov
xchg
mov
cltd
cmc
cmp
ss
mov
xchg
fdivs
rol
mov
jmp
pop
mov
pop
mov
mulb
aad
sub
iret
sub
push
sub
cltd
sbb
lcall
rolb
outsb
xor
mov
cmp
fisubrl
pop
je
mov
mov
sahf
xchg
push
jle
data16
into
imul
mov
adc
iret
fldl
aad
push
sub
dec
lods
cmp
outsl
inc
iret
ljmp
mov
lds
dec
test
lods
repz
les
pushf
outsb
aam
xchg
pop
xor
mov
and
inc
xor
ficoml
sbb
ds
pop
jmp
add
inc
mov
inc
and
adc
lret
shl
jmp
sub
inc
and
xchg
mov
insb
std
adc
xchg
mov
xor
andl
clc
add
sti
out
sub
jae
jae
add
test
xchg
pusha
sbb
push
stos
jmp
imul
test
ljmp
sub
ja
inc
shrb
xlat
pop
addr16
hlt
scas
arpl
sub
xor
gs
xchg
rolb
lea
dec
push
scas
push
mov
mov
cli
test
call
aaa
cwtl
out
fwait
lret
das
pop
or
cld
cmpb
fwait
jno
dec
sbb
cmp
sub
sub
es
jg
std
jno
dec
ljmp
inc
mov
xchg
jb
and
movsb
xchg
out
mov
inc
mov
jne
fcmove
or
xchg
xchg
jbe
and
sub
push
push
in
jl
push
mov
xorl
jo
movsb
xlat
cmpl
in
mov
fdivrs
pop
pop
jae
fdivs
jb
jo
jne
push
cmc
adc
pop
jbe
mov
xlat
outsb
mov
movsl
xor
cmpsb
test
mov
push
pop
mov
pop
fidivrl
jne
rcrb
ljmp
or
imul
jne
mov
and
les
xor
cmpsl
enter
add
push
daa
dec
test
pop
leave
inc
daa
mov
dec
popa
mov
inc
fstl
test
cltd
in
rcll
or
inc
xchg
in
mov
mov
outsl
sbb
mov
stos
or
push
or
test
sub
pushf
dec
mov
clc
fs
mov
jle
in
imul
pop
pop
out
aad
ret
inc
pop
and
push
add
test
mov
mov
imulb
add
bnd
add
fs
flds
adc
mov
fnstcw
and
pop
es
shll
or
lea
add
in
inc
inc
fcomps
fsts
xor
adc
xchg
fstl
mov
jp
push
iret
iret
popa
int
sub
xchg
stc
cmpsb
cmp
add
dec
pusha
cmp
inc
shl
push
dec
cmc
push
data16
inc
xchg
ds
sub
in
imul
aaa
adc
mov
sarl
mov
fists
jl
roll
daa
movl
mov
adc
pop
imul
enter
mov
inc
jge
rcrb
leave
hlt
mov
xor
movsb
es
test
sti
jo
leave
test
loopne
ss
sub
mov
enter
xor
mov
jle
std
in
negb
dec
mov
cmp
pop
iret
push
jg
xor
in
hlt
push
shlb
sbb
icebp
stos
inc
in
mov
or
xor
sbb
jle
fwait
popf
and
mov
xor
push
and
cmc
sub
mov
jg
or
jmp
jns
pop
out
std
das
xor
add
mov
mov
outsb
inc
mov
shll
ss
push
sbb
push
repnz
call
sbb
nop
scas
icebp
in
ret
cli
and
inc
sti
lcall
call
push
inc
push
hlt
xor
daa
mov
cwtl
mov
and
sub
dec
adc
imul
xchg
xchg
push
jae
gs
sbb
xor
imul
pop
lret
push
add
push
xor
fisubl
je
jge
inc
mov
fisubl
sub
mov
sti
push
xor
test
pop
movsb
test
call
sub
aaa
push
out
dec
cmp
loop
cmp
ktestw
mov
repnz
add
cwtl
ds
andl
mov
xchg
test
aad
enter
fwait
inc
mov
das
in
sbb
adc
xor
inc
incb
push
jecxz
arpl
cmp
cmp
add
cltd
mov
lds
insb
pop
repz
inc
mov
sbb
into
aam
enter
pop
dec
je
mov
pop
ror
cmp
test
jge
xlat
xor
into
je
add
dec
cs
scas
and
jbe
and
inc
pop
enter
scas
int
outsb
mov
mov
dec
sub
jne
xchg
testl
push
mov
inc
and
jg
mov
loope
std
xchg
int
push
leave
lcall
aas
adc
je
pop
jns
push
adc
mov
into
incl
or
cli
jbe
xor
lret
mov
scas
popa
pop
jno
sub
cmp
and
jp
dec
cwtl
xchg
lahf
add
ja
cmp
or
loopne
mov
addr16
mov
mov
xor
jo
or
and
arpl
sub
movsb
imul
cmp
test
and
sub
cmp
out
pop
repnz
retw
ret
rcrb
dec
add
mov
push
addb
bound
or
mov
xchg
pop
push
push
mov
xor
lock
rcll
lock
sbb
push
sbb
aas
inc
inc
in
test
out
daa
ja
add
fdivl
adc
mov
bound
push
jns
ja
aas
sti
push
cmc
aad
cmc
or
fiadds
arpl
mov
cmpsb
stc
aaa
ret
sub
pop
push
jle
cld
pushf
das
test
pop
sub
pusha
or
sub
inc
or
jae
pop
roll
lods
jo
xchg
clc
test
scas
jg
in
pop
pop
negl
jp
cmp
mov
scas
je
sub
mov
addr16
xchg
inc
push
fsubp
sbb
or
push
lds
popf
popa
pop
test
sti
test
popf
sub
xchg
outsb
xchg
test
push
add
sti
ss
loopne
stos
daa
test
cld
sarb
ret
lods
mov
sub
cwtl
hlt
loope
cmp
mov
dec
sbb
mov
cmp
fistpll
icebp
rcrb
mov
popf
xchg
add
mov
outsl
insl
mov
dec
sbb
sahf
movsb
cmpsl
dec
jecxz,pn
shl
into
mov
mov
pop
xrelease
sub
pop
dec
clc
ljmp
jb
lcall
aam
add
popa
push
sbb
and
mov
loopne
ds
push
scas
mov
push
ja
mov
idivl
test
testl
sarb
jg
int3
or
and
aam
andb
out
sbb
out
xorl
jge
lret
icebp
movsb
out
pop
mov
gs
daa
fimuls
dec
mov
sbb
outsl
loope
sub
mov
sbbb
popf
jae
jne
push
pop
mov
js
repz
sarb
out
aas
fbld
push
lods
jno
aam
lahf
add
stos
push
or
xor
insb
int
pusha
sub
adc
inc
xchg
mov
cmp
arpl
pop
xchg
and
lods
sub
fnsave
mov
adc
scas
sbb
pushf
dec
aam
aas
mov
test
or
out
adc
lods
les
movsb
bound
jmp
mov
test
sbb
add
pop
cmp
into
int3
cmpsb
dec
or
jns
sti
add
packuswb
out
add
mov
repz
xchg
sub
cmp
xchg
or
stos
cmp
mov
push
xor
sahf
cmp
pop
sbb
inc
cmp
test
add
dec
cmpsl
or
lret
push
aam
icebp
jecxz
adc
leave
stos
lret
repz
cmp
mov
jmp
jns
shrb
into
int3
sub
aam
nop
dec
push
addb
pop
add
cmc
lahf
leave
sub
adc
cmp
mov
stos
lods
pop
mov
outsb
mov
das
aaa
lds
fadds
adcl
and
inc
adc
lods
dec
adc
xlat
ret
push
push
les
hlt
outsb
ret
xchg
mov
ja
inc
in
cmp
pop
mov
pusha
jle
loopne
push
popf
xor
xor
ljmp
mov
xchg
push
sub
std
insb
fwait
xor
ljmp
mov
outsl
adc
loopne
mov
scas
jns
stos
xchg
add
sbb
dec
jbe
inc
mov
insl
add
sbb
js
inc
fwait
cmp
out
jo
inc
mov
push
mov
push
dec
cmpsb
sbb
popf
das
push
mov
xchg
sbb
dec
enter
loope
sub
in
rcrb
pop
push
xor
mov
cltd
jle
inc
cld
testl
dec
push
push
es
repz
outsb
lahf
add
jo
addr16
pusha
sub
mov
xchg
imul
mov
push
out
mov
loopne
sub
fsubr
in
aam
call
fstp
idivl
outsl
or
lds
dec
lret
sub
jnp
xor
xchg
inc
daa
xor
shrl
clc
push
pop
outsb
mov
pop
mov
push
xchg
gs
xchg
sbb
int
and
gs
fildll
and
out
push
pop
lods
mov
sarl
outsb
insl
jecxz
sti
and
ja
push
add
pop
push
jno
sbb
fsubrl
fdivs
mov
sbb
jg
jmp
in
push
outsl
mov
filds
or
ljmp
lret
stc
sahf
out
cmp
pop
jmp
mov
out
sbb
jns
mov
push
mov
jo
add
cmp
and
dec
jno
mov
rorb
int
test
mov
push
push
mov
rorl
dec
scas
mov
int
jb
pop
sbb
inc
push
std
icebp
lods
scas
insl
cmp
test
mov
xchg
inc
xor
stc
call
inc
aaa
cs
into
popa
or
movb
call
mov
jle
mov
popf
bound
and
lods
mov
and
jl
dec
icebp
cmp
jecxz
cmpsb
adc
mov
test
mov
add
and
add
repnz
inc
ds
mov
ljmp
push
imul
cmp
cltd
xchg
mov
lahf
test
ja
insl
cld
jge
add
sub
mov
fwait
adc
and
jnp
cmc
and
ja
pop
out
lret
sub
shll
scas
and
or
dec
xchg
roll
push
cli
mov
call
js
sub
push
test
repz
adc
cmp
jae
sbb
jne
stos
push
xchg
xor
pop
lods
aaa
leave
iret
jno
and
nop
push
dec
lock
push
aam
cld
je
outsl
cwtl
add
sarl
and
mov
pop
enter
mov
addb
scas
pop
out
jecxz
ss
dec
shl
add
fiaddl
jle
push
insl
push
out
cmp
mov
mov
mov
fistl
mov
cltd
shrl
mov
push
mov
les
mov
je
repz
ror
stos
out
outsl
add
lret
xor
inc
mov
shlb
dec
xchg
int3
in
sub
sub
sbb
cld
push
jmp
aam
pop
sub
jae
mov
icebp
clc
mov
dec
add
push
adc
fimuls
out
fildl
xor
xchg
in
scas
mull
stc
lcall
js
scas
adc
fiadds
inc
mov
lock
sbb
sub
xchg
not
incl
stos
testb
xor
inc
and
loope
push
cmpb
arpl
xor
imul
push
cld
gs
jbe
dec
push
pop
imulb
inc
xchg
leave
and
rol
and
arpl
lods
lods
sbb
cmpsl
repz
push
fmuls
xor
shrl
out
mov
cmpsl
clc
add
shl
cmp
mov
js
int3
int
aas
xor
mov
filds
pop
sbb
jg
jo
cld
mov
xor
push
mov
stos
jge
les
sbb
test
bound
adc
mov
inc
mov
dec
pop
inc
rcll
mov
add
andb
inc
fisubs
mov
mov
lea
cmp
js
add
and
std
pop
dec
call
lods
cltd
out
fcmovne
movsb
or
call
ss
std
fsubs
imul
dec
xor
push
mov
sub
mov
sub
xchg
fwait
lds
dec
addr16
or
jbe
lock
fidivrs
movsl
push
lea
mov
mov
ret
lcall
xorl
scas
add
jno
test
subb
xor
xchg
lds
sbb
mov
rcrl
pop
int
shl
sbb
jle
hlt
dec
rorl
mov
sub
jge
jg
mov
pop
jge
shrb
std
aam
mov
int
test
add
loop
ss
cli
jge
dec
bound
pushl
xlat
stos
jmp
fsubrl
xor
and
das
out
mov
test
std
sbb
lcall
and
cmp
arpl
outsb
jo
in
ret
push
pop
gs
lods
inc
pop
fldenv
in
int
push
ss
icebp
push
imul
xor
xchg
sub
es
xchg
mov
or
pop
fisttps
xlat
adc
xor
outsl
push
mov
add
sbb
add
inc
dec
push
movsl
sbb
loop
cmp
pop
mov
insb
xchg
rcl
xlat
cmp
xchg
xchg
push
jo
pop
mov
fldcw
xchg
cmp
xchg
nop
cld
test
lock
xchg
push
outsb
cmc
pop
fstps
int3
jecxz
inc
mov
in
mov
jnp
push
loop
nop
pop
pop
add
test
call
data16
rorb
cli
xor
jo
lahf
xchg
jle
xlat
cmp
mov
xor
adc
cmp
je
sti
inc
dec
inc
xchg
stos
clc
jle
dec
jno
test
call
add
ss
jo
aam
or
mov
sbb
mov
inc
lods
pop
xchg
mov
shrl
mov
pop
add
data16
addr16
inc
sub
adc
std
call
cmp
hlt
rorb
popf
les
jecxz
cmp
mov
pop
lds
scas
addr16
mov
lods
or
sub
cmpsl
sbb
mov
adc
xchg
sti
or
out
dec
mov
or
lods
adc
xor
add
sar
push
pop
mov
inc
or
jae
xor
push
xor
sub
mov
xor
jge
pop
mov
fistpl
sbb
leave
or
repnz
cmpsb
iret
arpl
loopne
loope
mov
into
rcrl
stos
add
xchg
add
fxam
xlat
jb
inc
cmp
xchg
fcom
jg
jp
mov
add
xchg
or
lods
xchg
out
dec
les
sub
mov
ss
call
ret
jno,pn
lea
mov
arpl
outsl
aam
lock
aaa
dec
mov
mov
pop
in
pop
dec
mov
insb
loopne
xor
lret
dec
out
push
rclb
inc
out
push
jge
or
mov
imul
push
mov
pop
xor
xchg
stos
push
rclb
jbe
jl
push
fdivrs
negl
xchg
shl
test
ficoms
sti
leave
js
jl
mov
push
test
add
ret
xchg
cli
dec
pop
sahf
mov
popa
cli
or
jb
mov
push
xor
sti
jno
push
dec
push
fs
enter
or
xchg
hlt
sub
lahf
daa
popa
outsb
push
xchg
mov
inc
lcall
pop
les
cltd
fisubrl
out
sahf
hlt
imul
adc
pop
addb
test
out
dec
add
jae
insb
xor
fs
mov
jae
xchg
push
pop
loopne
lock
mov
in
lods
xor
int
or
repz
pop
jl
fs
adc
negl
dec
ret
in
sar
sub
into
lahf
pop
xchg
fstpl
outsl
sub
popf
lret
sbb
cmp
pop
xor
jo
jp
push
push
lea
sti
pop
lods
into
fisttpl
and
add
and
add
rorb
adc
cmp
shrb
cli
xor
ret
cli
or
pop
xchg
fwait
and
sub
adc
mov
adc
nop
lahf
xor
loope
pop
enter
mov
clc
jno
test
out
test
ja
test
mov
ret
or
mov
ret
dec
and
cmp
mov
push
movsb
or
popa
ds
lret
jecxz
cwtl
cli
pusha
inc
daa
lock
in
mov
and
or
xchg
xor
dec
dec
cmpl
xor
movsb
popw
ds
mov
add
push
faddp
lods
sbbl
pop
dec
pop
add
cmp
gs
pop
cs
or
mov
movsb
movsb
push
push
out
sahf
pusha
test
adc
sbb
push
mov
jbe
cmp
out
push
inc
fnstenv
ss
and
dec
addb
pop
mov
mov
pop
dec
push
pop
push
add
aad
ss
push
dec
insl
movl
cmp
cmp
mov
popf
sub
dec
pop
movb
or
push
hlt
aaa
adc
cld
inc
dec
mov
mov
in
mov
test
rolb
and
loopne
push
and
and
aas
or
adc
fisubl
aaa
dec
add
repz
add
jl
in
testb
or
jo
and
aad
xchg
or
rorl
ret
jne
push
ss
hlt
cs
ret
jo
leave
sub
popl
push
ja
cmp
popa
xchg
imul
or
sbb
popa
loop
mov
icebp
sbb
jbe
mov
mov
lcall
sbb
xor
out
and
movsb
cmpsl
gs
push
inc
jecxz
jb
xchg
push
leave
inc
addl
xchg
in
push
xchg
movsb
pop
clc
dec
paddusb
cmp
outsb
xchg
inc
les
or
sub
push
xor
push
and
jae
jp
lahf
jnp
push
pop
or
fs
xchg
pop
imul
or
sbb
sub
loope
ds
lret
cmp
daa
and
mov
call
or
push
movsl
leave
jge
icebp
movsb
xor
or
xchg
int
push
sub
cmp
jmp
insl
pop
push
dec
mov
fisttps
in
cld
aas
xchg
mov
and
mov
cmp
sbb
sbb
iret
nop
mov
xchg
mov
sbb
push
jns
test
add
dec
test
sbb
inc
es
and
jl
loopne
xchg
xor
inc
sub
scas
arpl
mov
adc
push
mov
data16
idivl
lods
dec
es
inc
mov
sti
jns
sbb
lahf
dec
stc
or
lcall
sub
inc
xchg
call
nop
push
push
inc
hlt
pop
in
bound
fadd
sti
adc
pusha
inc
add
imulb
pop
mov
aam
clc
mov
lock
out
stc
lcall
ret
cld
js
jg
jg
xor
cmp
fcompl
inc
mov
jp
cwtl
inc
stos
out
ret
ret
test
into
aam
jns
fcmovne
or
cmpsl
xor
out
xchg
aad
pusha
sub
repz
int3
popa
cs
and
fs
jbe
mov
dec
movsl
call
scas
ret
daa
xor
sbb
and
lcall
rcrb
aas
hlt
dec
dec
inc
dec
aad
and
sub
inc
fwait
out
xchg
or
sahf
sbb
in
mov
dec
cmpl
push
jbe
xchg
push
loop
repz
in
mov
test
sbb
adc
dec
shrb
mov
dec
push
push
aaa
ds
add
idivl
fnstsw
lcall
pop
mov
xor
push
mov
inc
sub
jae
clc
ror
pop
out
push
mov
movsl
fisubs
iret
inc
bound
mov
mov
imul
sbb
scas
push
ret
fildll
loopne
mov
repnz
jl
cmp
ja
lret
mov
ss
aas
in
sub
and
es
sbbl
cmp
adcb
stos
push
and
jg
or
out
add
mov
out
cmp
pop
stos
cmp
pop
add
inc
dec
subb
push
xlat
jg
pop
add
ret
shr
push
xor
hlt
push
pop
dec
lcall
and
lds
xor
gs
data16
inc
push
mov
lods
xor
jecxz
xor
popa
xchg
cmc
es
test
imul
jg
jo
fdivs
adc
lods
es
or
push
jbe
jae
and
jns
int
adc
pop
inc
call
push
inc
push
add
insb
aaa
cmpsl
mov
jne
scas
sub
lods
hlt
outsl
xchg
and
and
and
cltd
je
aam
dec
dec
xchg
ja
or
loopne
scas
pushf
pop
lret
addb
popf
tzcnt
jge
rcl
push
or
fdivrl
shl
push
out
mov
pop
and
lahf
pushf
pop
add
push
jmp
cs
fdivs
pop
cmp
xchg
sbb
iret
cmpsl
leave
adc
add
pop
sahf
or
xchg
pusha
mov
mov
pop
dec
xchg
mov
test
inc
push
xor
jmp
pop
enter
imul
movsl
and
mov
or
fidivrl
pop
mov
lea
mov
aas
fucom
mov
popa
adc
cmp
jns
dec
icebp
xor
addb
js
and
push
jl
adc
xchg
mov
mov
and
inc
in
and
int
or
adc
jo
lds
add
aaa
lods
lea
and
jmp
ja
aaa
sbb
sahf
scas
or
fnstenv
jbe
shlb
divl
add
jnp
inc
and
pop
out
ss
testb
lds
lahf
sbb
popf
enter
fsts
and
mov
jmp
inc
adc
jl
push
mull
sbb
rclb
fsubp
jbe
or
jl
pushf
mov
pop
add
repnz
cli
outsb
mov
jmp
call
outsb
pushf
sbb
push
sahf
fidivrl
add
gs
dec
sti
scas
add
and
add
into
stc
xor
cmp
mov
pop
cld
push
sub
sarl
vsqrtss
sbb
mov
inc
and
in
int
jae
psubusb
loopne
stc
iret
aam
inc
daa
in
and
add
in
mov
sub
add
sub
insb
jge
sti
inc
inc
sbb
add
repnz
insl
fisttpl
or
fdivr
sarb
mov
call
in
pop
add
dec
push
mov
ficoml
lock
push
mov
pop
jns
jne,pt
out
push
in
and
ret
stos
add
or
aaa
or
add
aam
xorl
xlat
clc
xchg
dec
fldt
jg
jns
or
and
sub
cmp
pop
mov
cmpsb
push
std
test
dec
xchg
mov
inc
inc
lahf
ret
daa
and
adc
call
add
cs
bound
inc
imul
fsubl
jg
cmpsb
int3
xchg
cmp
pop
lds
in
cmp
data16
cmp
js
mov
js
out
loop
daa
not
jo
and
push
popa
cmp
jae
ja
arpl
loop
add
orl
xor
sub
push
sbb
jnp
ds
push
shrb
or
mov
and
cmpsb
mov
xchg
adc
sahf
mov
iret
inc
xor
lea
lcall
mov
loop
arpl
adc
add
jmp
and
aas
sub
mov
or
pushf
xchg
and
jns
xchg
push
pop
inc
cmp
push
fisubl
sti
push
outsb
adc
sbb
call
fwait
sub
inc
ljmp
and
divb
push
scas
scas
movsl
loope
testb
lds
test
xor
fwait
mov
jmp
dec
pop
xorl
jge
punpckhdq
out
sbb
push
mov
dec
ljmp
mov
aas
outsb
aam
inc
xorl
xor
mov
loope
inc
dec
dec
orb
xor
add
cmp
sub
mov
xor
je
out
mov
mov
jle
insl
shlb
cmp
popf
pop
inc
cmp
fs
mov
sub
mov
push
inc
int
jecxz
mov
inc
xlat
in
adc
mov
test
pop
repnz
out
pushf
sub
aad
inc
fs
sub
xor
jg
jne
and
mov
mov
sub
xchg
rolb
mov
sub
jp
and
ljmp
ss
xchg
out
nop
push
sbb
inc
fdivrp
stos
cmc
xor
stos
aas
loopne
adc
cmp
shll
test
js
mov
arpl
out
add
jnp
dec
adc
test
adc
nop
test
add
rorl
ret
or
pop
xor
jp
xor
loope
or
pop
rorb
clc
cld
push
jae
xor
inc
fwait
cmp
pop
aaa
movsl
mov
sti
fistpll
int3
adc
test
xor
push
ljmp
test
adc
popa
jno
xor
push
fdivrl
int
scas
inc
rcr
xchg
lods
lds
dec
in
lcall
shlb
test
mov
jae
inc
xchg
xchg
push
sub
jmp
enter
pop
add
cwtl
mov
loopne
sahf
push
push
jg
pop
sub
int
lods
and
adc
inc
jecxz
ja
mov
push
pop
test
mov
or
jae
divb
mov
fmuls
sar
add
push
sbb
inc
pop
fistl
mov
lret
outsb
mov
fs
pushf
ss
fdivs
jecxz
rcll
or
daa
fadds
pop
fdivrl
jne
push
hlt
mov
cs
sbb
cmp
mov
pop
inc
mov
hlt
imul
dec
pop
imul
or
xor
shl
out
xlat
and
mov
adc
out
cltd
aad
hlt
test
insb
or
adc
mov
and
lret
inc
mov
cmp
xchg
pop
loop
pop
das
adc
jp
sbb
bound
rorl
inc
mov
fisubl
inc
bound
sub
mov
int3
cli
testb
testb
inc
shlb
or
cltd
push
cmpsb
push
in
xor
rol
push
jae
and
inc
scas
inc
jge
mov
mul
push
or
xlat
dec
ret
lcall
js
aam
movsl
decb
ja
insb
dec
inc
push
jecxz
sub
cmp
xchg
out
pop
dec
adc
pop
jbe
jl
dec
into
mulb
sbbb
stos
jl
data16
inc
mov
add
jl
jae
std
sub
pop
inc
jmp
ja
ret
cmpl
ret
sub
fcmovne
push
mov
pushf
jae
std
cmp
pop
jg
aad
and
mov
cmp
mov
das
adc
dec
js
imul
and
mov
sti
test
aaa
repz
and
inc
loop
imul
cmp
fisubs
hlt
insl
sub
es
sti
dec
push
jb
scas
lds
stos
aad
xor
mov
dec
test
pop
sbb
jo
loop
lret
xchg
pop
sbb
dec
cmp
cmpsb
sahf
loopne
push
jg
leave
imul
xor
xchg
loope
jne
xchg
shll
das
dec
add
mov
sub
movsb
adc
jno
jo
inc
out
dec
aaa
xor
dec
inc
adc
cmp
sub
jge
bound
inc
push
mov
xorb
push
jle
or
fisttpl
jp
pushf
inc
mov
push
setae
std
out
into
pop
add
dec
out
sub
fwait
inc
daa
and
dec
aam
dec
inc
pop
or
mov
in
pop
add
shll
add
push
cmp
ret
xchg
mov
mov
and
push
stos
or
stos
movsb
stc
push
cmc
icebp
sub
xor
sti
and
mov
dec
mov
pop
pop
stos
dec
push
jecxz
add
ja
xchg
popf
mov
mov
add
pop
add
cmp
xorl
and
adc
sbb
push
add
lret
inc
cmp
dec
adc
fdivp
addr16
mov
add
jl
xchg
lcall
adc
mov
inc
mov
cmc
push
mov
dec
and
aas
cld
xor
pop
cmc
out
xchg
lock
jl
cli
out
stos
imul
fistps
adcl
addb
hlt
mov
mov
push
sub
data16
into
xor
mov
jbe
aad
push
lock
ljmp
cmp
repz
nop
pusha
push
push
jnp
lahf
mov
lea
mov
xor
shlb
test
repnz
push
adc
dec
jbe
jmp
pop
cli
mov
clc
cmp
pop
push
pop
mov
lods
push
cmpl
lods
sub
out
cmc
outsb
lea
pop
mov
mov
dec
push
adc
sub
xchg
mov
fsubs
cmp
stos
or
addl
mov
dec
cli
cmpsb
fistl
cwtl
push
outsb
xor
test
or
cmp
jmp
ja
and
jecxz
repnz
fsubs
call
leave
std
push
das
lret
bound
movsb
imul
sbb
dec
mov
lods
adc
inc
iret
popa
std
loopne
out
push
mov
test
push
jl
inc
pusha
pop
add
push
mov
pop
xor
popa
loopne
movsl
mov
test
mov
mov
jae
mov
in
ds
add
insb
mov
ljmp
outsb
sbbl
out
xchg
xlat
jmp
pop
cmp
mov
loop
jl
xor
repz
pop
mov
adc
xor
scas
insl
push
das
xchg
mov
push
cmp
mov
mov
dec
aad
lods
fs
aas
jnp
mov
inc
lahf
int
sub
dec
out
call
xchg
mov
cmp
out
and
icebp
cmp
int3
lret
and
sub
testl
fists
xchg
xchg
out
cmc
push
clc
mov
rolb
cwtl
fidivrs
outsl
popa
repnz
cmp
data16
cwtl
in
or
fidivrl
sub
stos
fwait
adc
data16
lock
cmpsl
lods
mov
stos
push
jae
in
fs
clc
test
test
popa
pop
push
fcoml
dec
adc
int
mov
jno
xor
xchg
pop
loopne
nop
mov
mov
adc
cmp
out
testb
loop
push
or
push
mov
ja
pop
lahf
xchg
add
jbe
cs
xchg
cwtl
cmc
dec
fsubrs
add
iret
jp
scas
sbb
sub
call
insl
stos
dec
add
je
xchg
cmp
mov
bound
mov
in
cmp
mov
je
loope
loop
movsb
mov
les
in
push
add
aas
shrb
xlat
adc
push
aam
inc
push
jae
inc
pop
arpl
xor
rcr
jo
push
popa
div
dec
aad
cmpsb
mov
testl
inc
pop
nop
inc
sbb
inc
or
sub
add
out
lret
jmp
push
cmpsl
jl
fnsave
int
insl
lret
int3
sbb
xor
enter
dec
lock
dec
jae
aam
out
ljmp
mov
mov
arpl
subb
push
mov
test
mov
enter
xor
cmpl
mov
movsl
push
lods
addr16
and
xchg
jp
addb
filds
jne
inc
addr16
inc
and
clc
or
js
push
test
ret
loopne
outsb
fstps
dec
test
popa
cmp
jb
out
jb
hlt
in
sahf
gs
or
pop
add
push
test
mov
xchg
pop
scas
mov
ss
mov
adc
ljmp
into
scas
pop
in
mov
sbb
jg
fcmovbe
cli
aaa
sahf
icebp
ja
out
mov
xor
push
mov
push
cmp
ds
pushl
cmp
pop
dec
xchg
insl
es
test
insb
xchg
aam
mov
dec
adc
mov
fwait
lods
dec
add
movsl
data16
imul
xor
inc
add
fsubl
lea
adc
pop
adc
mov
cmpsl
or
pushf
test
inc
jb
int3
insb
enter
xchg
push
adc
jmp
cmpsb
movsl
mov
divb
cmpsl
or
andb
pop
inc
repnz
jge
pop
pusha
cmp
mov
xor
adc
test
inc
setp
cmp
in
push
and
push
popa
out
pop
sub
stos
nop
ret
mov
aam
loop
popa
adc
mov
lock
mov
and
faddl
cmp
gs
lods
and
rolb
jb
mov
insl
jb
dec
xor
jl
mov
fcomps
sbb
jnp
idivb
out
mov
dec
out
arpl
dec
out
lods
loopne
in
ret
stos
gs
sub
jb
test
dec
fwait
inc
dec
mov
nop
push
gs
repz
mov
cmp
inc
xor
mov
je
enter
jle
xchg
mov
add
clc
js
mov
std
sti
xchg
insl
xchg
xchg
adc
ret
leave
xchg
xor
sbb
lods
sub
cmp
in
mov
in
iret
pop
ret
cltd
int3
sti
add
test
mov
outsb
lahf
mov
sbb
sbb
mov
std
mov
lahf
and
js
xor
ja
dec
add
xchg
mov
or
rcrb
sti
into
adc
scas
dec
imul
aad
mov
jecxz
inc
sbb
push
jmp
pop
cmp
inc
mov
dec
aam
out
xlat
jmp
cmp
enter
lcall
jmp
sahf
sub
testl
add
dec
add
insl
test
jne
xlat
lock
lret
mov
adc
mov
cmc
dec
sub
push
hlt
pop
lcall
arpl
lcall
jb
and
and
add
jg
or
push
and
lock
sbb
adc
cmpsl
ffree
jno
cmc
add
aaa
movnti
outsb
test
push
repz
ret
call
inc
psrad
jne
jge
and
pusha
in
add
and
cwtl
and
fistps
or
cmp
cltd
push
faddl
push
insl
mov
and
cwtl
inc
fdiv
test
cmp
sbb
sti
addl
cmp
mov
cmpsb
jo
das
ds
dec
sub
and
test
sub
and
pop
cmp
aad
call
jb
jmp
push
cmpsl
jae
mov
shl
and
int3
mov
repz
pop
mov
cmc
jo
mov
ds
mov
xchg
cmp
aas
cmp
lock
cli
in
and
dec
pushf
shll
cmpsl
mov
xchg
jmp
push
mov
mov
outsb
push
push
push
test
jno
fdivrs
or
fisttpll
int
mov
addr16
push
addr16
dec
mov
dec
stos
inc
out
mov
adc
dec
pop
pop
sahf
add
or
sub
lods
jle
out
pop
ss
jle
push
aaa
sbb
cld
cs
repnz
add
stos
loopne
das
aaa
sub
shr
push
fdivp
or
sahf
mov
ret
popf
daa
ja
jne
mov
lret
push
jp
or
lret
cmp
or
jl
scas
shl
lods
lock
xchg
mov
push
sub
sti
out
and
xor
sub
ret
lock
cmpsb
inc
xor
aas
ss
call
loope
int
andb
lds
rcll
loopne
jmp
inc
dec
mov
ljmp
icebp
pop
push
mov
add
movsb
mov
fstl
cmp
inc
mov
inc
and
pusha
lea
out
pushf
mov
sbb
pop
stc
test
aaa
mov
shlb
add
out
push
add
sub
mov
hlt
dec
inc
and
stos
push
sbbl
push
aam
inc
dec
jge
push
ret
mov
pop
fildll
cli
filds
lcall
inc
test
insl
pop
push
arpl
outsl
adc
out
fwait
in
inc
sbb
gs
stos
out
in
popf
push
lods
in
mov
scas
cmp
movsb
dec
or
shr
xor
outsb
jmp
cld
pop
mov
fs
xor
ret
in
mov
pop
lahf
mov
jge
adc
push
mov
dec
test
mov
or
shl
xor
sub
repz
jle
imul
pushf
push
iret
cmpsb
aas
xchg
cmpsb
sbb
cmp
aad
cwtl
pop
divl
je
sub
mov
jl
xchg
jne
dec
fnstcw
mov
push
dec
add
and
out
xor
mov
arpl
shlb
jb
xchg
mov
mov
pushf
scas
ja
cmp
mov
imul
xchg
mov
sbb
or
aam
xlat
fwait
or
movsl
pop
rorl
nop
or
jae
int3
jno
xchg
arpl
ja
out
aaa
in
idivl
je
xlat
push
push
xchg
dec
pop
out
xchg
repnz
aaa
mov
and
mov
in
mov
inc
sub
inc
mov
insb
addb
aaa
test
je
lahf
fildl
lods
test
jno
sbb
jp
dec
vpmuludq
jnp
addr16
mov
cwtl
xor
push
push
popf
jns
pop
rclb
cmp
out
add
in
sbb
shlb
jle
rolb
ja
jl
lods
push
mov
roll
inc
cmpsb
je
jae
test
lahf
loop
sbb
push
adc
mov
inc
inc
push
xchg
notb
mov
pop
mov
xlat
mov
mov
das
in
roll
fadds
sub
push
mov
imul
lock
sbb
je
xchg
mov
das
test
mov
jle
xchg
jmp
repnz
jecxz
jp
inc
dec
or
movsl
and
inc
ljmp
pop
outsl
mov
fldl
xor
andb
push
pop
nop
ljmp
pop
push
xor
notl
loopne
int
imul
dec
movsb
rclb
shll
jb
pop
fs
scas
and
dec
jo
mov
and
fsubrl
jp
clc
mov
ret
jo
clc
push
mov
test
xor
test
and
lcall
push
in
stos
mov
push
mov
in
iret
sub
pop
mov
lods
lret
dec
add
mov
adc
pushf
cmc
inc
daa
int
pop
jecxz,pn
andb
inc
out
mov
or
cmp
xor
and
into
sub
pop
inc
mov
sub
outsb
mov
cmp
data16
aaa
cmp
aaa
push
cwtl
xor
jnp
addb
lahf
es
jle
addr16
sub
shll
lods
or
or
xchg
adc
into
cwtl
jne
mov
neg
or
push
es
insb
js
or
mov
inc
sbb
sub
hlt
cmp
sub
fldln2
dec
aaa
scas
push
push
dec
push
aam
push
mov
stos
ret
jp
push
out
and
pop
mov
dec
repz
mov
ss
icebp
popf
mov
arpl
mov
xor
xchg
in
pop
sti
popf
jg
jge
mov
lcall
mov
lret
jp
out
pushf
enter
sub
mov
call
cmp
pushf
jbe
es
jmp
sub
push
jmp
int3
and
push
int
out
out
inc
mov
lret
lret
cltd
decb
jge
cltd
push
cltd
rolb
push
bound
outsl
clc
mov
test
inc
and
mov
pop
xchg
out
jae
mov
mov
sbb
sbb
sbb
int3
lret
mov
cmpsb
xor
shrb
mov
and
adc
add
jle
pop
add
gs
inc
jp
dec
loope
arpl
popf
scas
imul
jno
push
xlat
jle
addr16
xorl
push
add
dec
inc
push
nop
dec
and
inc
xlat
scas
sarl
out
ret
mov
or
inc
icebp
out
jns
cmpsb
pushf
call
push
sbb
add
add
mov
cli
cmp
mov
mov
add
dec
fldln2
or
in
aas
in
jbe
pop
je
outsl
xchg
inc
jmp
push
fdivr
inc
jle
mov
fwait
movsb
sbb
push
das
mov
mov
xchg
add
test
out
mov
rclb
pusha
push
inc
inc
fisttpl
jmp
lahf
cmc
jecxz
mov
xor
mov
jmp
inc
jmp
inc
xor
in
adc
xchg
mov
shlb
popf
cmp
mov
rcll
dec
dec
mov
fidivl
xchg
jl
lea
je
or
sub
inc
or
out
mov
scas
and
scas
sbb
xlat
in
in
adc
push
push
cltd
cmp
xchg
test
subl
inc
jmp
xchg
jecxz
jne
loope
push
out
and
dec
rorl
mov
lods
add
pop
or
int3
outsb
cli
pop
div
xchg
sub
mov
mull
enter
cmp
push
inc
inc
push
and
jns
xlat
cltd
daa
jae
fdivrs
fnstsw
scas
pop
popa
jno
fdivrs
lcall
and
dec
loop
mov
jbe
sub
test
aas
mov
rclb
call
jbe
fxch
aas
push
test
and
mov
pop
insb
fcompl
repz
subb
into
cmp
adc
pop
pop
fdivs
sub
dec
dec
je
or
divl
fistpll
iret
fcomip
jle
push
adc
or
dec
lock
mov
mov
mov
xchg
lds
test
dec
cmc
stc
and
stos
sub
popf
bound
sahf
pop
xchg
xchg
call
xchg
xor
lahf
mov
movsl
clc
sbb
fistps
gs
sbb
cmp
stos
in
pop
adc
fisttpll
inc
inc
addr16
push
shll
aad
xlat
lea
rorb
xor
dec
outsl
fs
rcrl
ret
inc
push
add
sahf
scas
or
jp
imul
pop
push
or
cmp
xchg
jle
inc
pop
and
push
dec
pop
sub
push
in
ljmp
inc
pusha
adc
xchg
daa
aas
push
rorb
jbe
push
fldcw
sbb
cmp
push
jnp
pop
aad
pop
in
scas
jne
fidivrs
sarb
stos
xchg
mov
mov
jns
cli
imul
pusha
outsb
enter
sti
push
call
xchg
lret
loop
xchg
mov
addr16
or
adc
add
mov
arpl
clc
cmpsb
test
xchg
cmp
das
dec
inc
out
dec
xchg
jmp
adc
cmp
int
lods
pop
sub
add
popf
leave
mov
cmp
dec
xchg
cltd
inc
call
inc
cmpsl
sub
pop
push
das
jl
xchg
and
clc
jecxz
mov
mov
mov
jp
iret
dec
mov
xor
inc
lods
sar
outsb
icebp
xchg
fwait
daa
sahf
mov
jmp
jo
or
adc
or
push
inc
test
mov
inc
pop
or
test
pusha
mov
in
dec
mov
jne
push
sub
sub
shll
nop
cmp
out
mov
push
lcall
push
and
and
jp
lods
rolb
and
xlat
pop
mov
xchg
mov
mov
jbe
icebp
dec
mov
sarb
and
inc
in
int
ret
dec
lret
insw
sub
xchg
cltd
and
subb
loope
sub
mull
mov
std
add
jne
xchg
adc
mov
lret
mov
loop
cmp
cmc
jge
rolb
add
push
out
push
js
push
andl
aas
xchg
mov
int
jno
push
bound
pop
cmp
ss
mov
mov
jge
rol
fisubrl
test
daa
lds
cmp
rorl
mov
outsl
enter
pop
fs
divl
cmpl
xor
mov
int
jmp
lea
sarb
xchg
inc
scas
scas
xchg
inc
lret
fmuls
xor
scas
mov
ret
mov
ret
data16
ds
fcompl
or
inc
mov
xchg
daa
jl
xchg
ljmp
ja
mov
stc
je
inc
push
push
or
jmp
sti
hlt
jbe
cmpsb
stos
mov
cwtl
sub
mov
mov
mov
outsb
add
add
es
xchg
insl
add
dec
mov
out
out
imul
adc
inc
sbb
add
scas
jmp
sbb
push
mov
dec
cmpsb
test
enter
dec
dec
add
sar
and
pop
adc
mov
out
test
addr16
fisubrl
sbb
and
rcrb
inc
xor
rorb
adc
mov
mov
push
mov
ja
icebp
inc
cld
mov
pop
gs
sub
fdivrs
push
jle
in
bound
int
rcrl
je
insb
lock
mov
icebp
mov
sbb
sbb
jecxz
jl
repz
add
imul
arpl
push
xor
push
scas
int
loope
cmp
push
call
ds
pop
jle
lds
and
mov
push
popf
pop
in
add
testb
cld
out
mov
dec
ret
es
dec
or
int3
cli
jnp
cmpsb
xchg
add
or
jmp
xchg
mov
cmp
xchg
dec
dec
sti
cmp
mov
pop
arpl
dec
adcb
test
inc
testl
xor
cmp
aam
jp
data16
sahf
sub
stc
pop
rorl
and
repnz
dec
addl
cltd
test
or
xchg
pusha
js
ficomps
loopne
mov
sub
sbb
imul
ret
andb
lods
xchg
pop
decl
lods
scas
out
ljmp
in
pusha
pop
mov
fbld
cmp
pop
mov
push
mov
mov
fxch
push
lret
hlt
jmp
test
int3
lret
std
stos
cmpsl
fcmovnb
pop
aaa
lods
xchg
test
mov
lret
mov
lods
adc
inc
fs
outsl
subl
inc
and
out
mov
mov
inc
add
and
add
ret
pop
pop
call
cmp
xor
or
xchg
sbb
pop
lods
repz
xlat
sarb
lret
xor
ja
mov
or
and
repz
jbe
dec
stos
mov
sti
mov
sbb
mov
jns
in
mov
insl
adcl
lea
clc
mov
xchg
lret
jae
neg
frstor
loop
mov
outsb
mov
cmpsl
out
ss
xchg
jbe
sahf
add
je
mov
cmpsb
shrb
and
sub
inc
das
xor
jnp
sbb
loopne
xchg
lahf
and
xchg
push
add
push
bound
test
clc
xlat
call
rcrb
iret
loopne
and
addb
sbb
scas
pop
scas
leave
inc
repz
jno
mov
sbb
xor
lods
pop
pop
test
xor
sbb
fwait
lea
dec
lea
mov
lcall
sub
cld
jno
jge
ficoms
sbb
int
mov
jl
pop
mov
pop
jg
jnp
sahf
push
lods
cli
cmp
movl
aaa
mov
data16
insb
adc
add
adc
sub
sahf
push
jg
scas
mov
mov
popf
sbb
sbb
mov
cmp
inc
dec
rcrb
jp
mov
mov
inc
pop
nop
fnstcw
call
js
out
lods
in
cmp
sub
aam
sarl
aam
mov
std
jl
fisttpl
fists
xchg
jbe
xlat
cld
inc
mov
out
jae
and
xlat
movsb
fwait
mov
inc
mov
add
cmp
jb
cmp
push
loope
adc
cli
mov
xor
push
mov
pop
inc
push
loopne
mov
inc
fcoms
or
imul
arpl
into
sub
and
sbb
enter
test
push
pop
add
mov
ljmp
mov
push
mov
mov
xchg
dec
mulb
pop
inc
pop
cmp
fadds
cs
js
ret
cmpsb
mov
lods
xor
paddw
pop
jecxz
outsl
test
inc
fidivrl
rcrl
repz
jl
repnz
xchg
and
outsb
lock
icebp
xchg
and
out
or
mov
or
mov
xor
movsl
or
inc
adc
adc
sbb
stos
inc
ret
mov
adc
cs
dec
dec
push
sub
in
test
mov
mov
loope
push
cwtl
xor
and
cmp
xchg
imul
out
push
testl
jg
lret
mov
fcoms
fstl
testl
jns
test
inc
fwait
xchg
lock
xor
inc
push
insb
add
fstl
data16
fsubrs
mov
xlat
std
push
cmp
and
jmp
sub
mov
cltd
dec
sti
adc
mov
mov
mov
test
out
or
pop
cmp
or
xchg
pop
arpl
sbb
sbb
stos
mov
popf
add
sbb
bound
jl
or
inc
pop
out
lret
sub
xchg
cmpsl
daa
cmpsl
repnz
jae
pop
mov
adc
lret
lret
mov
pusha
leave
out
fcoml
sahf
jp
aaa
sbb
inc
outsb
jge
stos
pop
inc
or
xor
ljmp
sbb
adc
fimuls
cmpsl
mov
jno
fdivp
jge
xor
mov
push
mov
ljmp
mov
cs
add
dec
loop
inc
cld
fldt
popa
repz
scas
stos
xor
lret
stc
pop
addr16
sub
addr16
and
xlat
push
std
cmpl
push
push
test
cmpsb
out
pop
imul
mov
cld
loope
fistps
add
dec
xchg
xor
and
mov
gs
adc
add
nop
add
and
imul
cmp
sub
sub
les
test
rolb
mov
ficoms
inc
xor
testb
popf
lcall
jne
xor
xor
push
mov
xchg
sub
leave
sbb
mov
pop
enter
add
xchg
xor
test
pop
mov
add
orl
ret
mov
inc
sub
js
into
push
and
popa
xor
rorb
dec
stos
aaa
scas
notl
inc
scas
loop
add
addl
pop
subl
fsubrl
sub
sbb
dec
int
add
aaa
mov
test
pop
aad
dec
adc
lods
sub
iret
mov
cmp
add
add
jecxz
dec
hlt
dec
leave
add
fildl
test
sahf
xorl
or
in
ficomps
push
or
andl
test
sbb
or
cmpsb
insb
add
jbe
icebp
out
and
dec
pop
int3
jge
ret
movsb
sub
enter
popf
shlb
les
jmp
repz
and
ror
mov
negb
push
imul
fimuls
mov
xchg
mov
mov
inc
dec
test
aas
mov
inc
mov
inc
adc
cmp
and
xchg
dec
cli
xor
stc
add
push
je
bound
add
and
sahf
jbe
stos
and
push
addr16
fwait
std
cmpsb
repnz
test
dec
data16
sub
scas
lods
lds
aad
mov
jmp
cmp
shrl
jmp
mov
ds
cmp
es
lret
rclb
push
mov
add
xchg
arpl
pusha
xchg
dec
int
jnp
push
pop
jae
dec
sahf
push
sbb
lahf
out
bound
lods
orl
or
lret
jle
test
jmp
add
rcll
jmp
xlat
cmpsl
in
pop
out
fs
xlat
mov
jle
outsl
stc
and
jns
mov
sub
cmpsl
ficompl
pop
rcll
insb
inc
aad
cpuid
cmp
enter
inc
mov
cmp
hlt
pop
cwtl
cli
sbb
fdivr
dec
lret
jp
in
cmc
sbb
insl
les
mov
jae
pop
dec
and
cmp
add
neg
push
imul
or
jmp
mov
mov
ss
mov
push
xorl
or
ss
pop
sbb
out
cmp
sbb
aas
movsb
mov
xacquire
cld
repz
xchg
push
jnp
cmp
test
jl
mov
or
xchg
movsl
push
aam
daa
mov
dec
sbb
cmp
push
xorl
xchg
or
das
mov
mov
pop
test
mov
test
mov
xchg
and
push
lods
add
les
jns
out
into
lods
xor
mov
ss
sub
jecxz
aaa
mov
addb
pusha
cmc
pusha
push
xor
pop
mull
xor
fsub
into
int3
into
xchg
xor
shlb
sahf
aas
mov
xchg
stos
fidivs
push
data16
add
and
out
and
sbb
aaa
js
popa
and
jns
outsl
loop
push
icebp
sbb
lcall
jg
jge
jecxz
shlb
es
sub
fisttps
leave
jae
add
fidivs
inc
leave
or
inc
movsb
xchg
sub
dec
aas
cmp
mov
movsl
outsb
push
xchg
hlt
xor
mov
pop
insb
sarb
nop
cmpsl
mov
into
push
pusha
pop
mov
sub
xchg
cmp
sbb
fidivrl
js
mov
inc
mov
sub
jmp
push
fisubl
mov
mov
test
xchg
mov
dec
sub
sbb
fidivl
mov
or
sub
mov
test
mov
jg
pop
sub
cmp
in
loopne
fcomp
cli
pop
sub
pop
lret
mov
sub
sub
inc
sub
add
mov
out
out
push
push
out
pop
daa
imulb
push
mov
out
mov
movsb
xlat
xchg
lret
fs
es
cmp
out
push
jo
pop
sbb
mov
aas
push
xchg
ja
xor
adc
lea
mov
xchg
popf
fimull
jmp
jns
mov
cmpsl
call
or
sub
fisttpll
bound
jge
xor
sub
xchg
fcomp
out
xchg
push
add
out
lahf
and
scas
or
outsl
adcl
adc
cltd
flds
pop
rcr
popf
lods
ret
push
leave
sub
xor
cli
jne
in
add
sbb
pop
and
int3
inc
add
adc
divb
add
fwait
ucomiss
in
bound
sub
adc
sub
inc
pop
xor
scas
shlb
in
jo
es
cwtl
mov
in
adc
xchg
and
jp
ljmp
fcmovnbe
jg
rorb
or
lret
sbb
cmpsb
or
add
cmp
filds
and
mov
fldl
cmp
xlat
pop
cmp
adc
leave
lods
daa
stc
jmp
pop
xor
add
hlt
es
jns
sub
gs
push
sbb
sub
fimull
mov
test
lea
and
add
xchg
cmp
loop
inc
pusha
cmpb
inc
lods
fcomps
lcall
loopne
or
cltd
push
cmc
adc
xorl
mov
out
add
sub
mov
arpl
ja
dec
lret
call
cmc
scas
inc
push
push
es
scas
stos
lcall
dec
jge
mov
or
lret
mov
inc
popa
lods
pop
movsl
ds
add
mov
out
faddp
jns
in
mov
fnsave
into
insb
movsl
leave
loope
or
sbb
sbb
sbb
pop
addr16
mov
pop
sbb
adc
arpl
cmpsb
add
add
into
in
inc
jo
repz
inc
push
sub
out
sub
loopne
or
pop
loope
cmp
gs
or
je
mov
xchg
mov
mov
in
jnp
sbb
imul
jne
les
cmp
xchg
lock
ja
push
roll
sub
shrl
insl
mov
cld
lock
fisubs
sub
movsl
or
adc
popf
call
movsl
xchg
or
cltd
mov
aaa
fucomi
sub
outsl
enter
jmp
clc
sub
test
add
in
pop
lret
in
dec
xor
mov
xchg
fsubrl
lret
nop
cmp
dec
jg
jecxz
xchg
cmp
lea
mov
mov
mov
fbstp
mov
lahf
aaa
jge
pop
dec
sbb
inc
aas
js
pop
nop
aaa
into
int3
sbb
adc
sbb
mov
loop
sbb
cmp
sub
pop
add
jns
mov
fldcw
cmpsl
adc
xor
jle
cmpsl
leave
pop
sbb
lret
xor
dec
mov
jl
lahf
fidivrl
repnz
cmp
cmp
icebp
test
shll
jnp
mov
fstps
sub
mov
and
or
sbb
inc
leave
lock
ret
sub
inc
dec
insl
and
pop
jbe
push
scas
and
stos
adc
adc
jge
mov
imul
xchg
pop
sbb
or
enter
lock
jb
ja
jecxz
repnz
loopne
inc
adc
lret
mul
in
or
mov
adc
cmp
xchg
gs
xor
or
daa
sbb
test
scas
adc
mov
lea
scas
mov
scas
pop
sbb
inc
inc
inc
pop
stos
hlt
mov
enter
daa
sub
jb
dec
sbb
ljmp
or
rolb
xchg
ret
out
test
loope
sub
popf
in
push
dec
lea
pop
sub
mov
imul
imul
lock
pop
mov
fidivrs
mov
insl
mov
js
pop
ret
mov
pop
mov
andl
or
jo
jmp
subl
inc
jo
data16
in
inc
and
int3
stos
decl
pusha
lea
insl
or
mov
adc
leave
das
scas
push
ror
mov
or
xchg
push
jbe
mulb
xlat
xchg
in
enter
jmp
mov
in
idiv
jg
and
xor
pop
lds
add
pop
add
nop
mov
mov
xchg
and
pusha
bound
addr16
mov
enter
and
mov
cld
pextrw
push
jne
and
enter
or
sbb
and
or
xchg
mov
and
repz
fst
lcall
mov
ja
push
jb
fsts
dec
inc
lretw
adc
fisttpl
in
pop
cli
sub
clc
mov
shl
sub
push
stos
or
js
mov
cmp
push
xlat
icebp
sub
cli
dec
jecxz
out
fmuls
jne
cmp
add
jnp
pop
push
mov
add
xor
mov
push
dec
mov
fdivrp
loopne
addr16
jg
mov
mov
pop
mov
fnstenv
push
mov
push
addb
pop
test
fisubrs
in
xchg
lahf
icebp
data16
aas
or
jg
stos
mov
neg
xor
movsl
ljmp
insl
cs
out
jnp
push
repz
jl
bound
aam
push
lea
fmull
mov
lods
loop
out
jmp
idivl
jle
mov
jle
fwait
ret
or
sub
jno
xchg
xchg
mov
into
sbb
adc
sbb
dec
out
adc
xor
push
mov
jbe
bound
pushf
push
enter
and
cmc
mov
lahf
or
stos
push
out
imul
sahf
mov
mov
faddl
mov
jmp
jecxz
jbe
andps
or
mov
sbb
es
mov
pop
test
mov
test
lds
into
pop
mov
or
jg
pop
and
add
out
cmp
and
cmp
adc
lock
adc
mov
fsubr
inc
jecxz
rcrl
iret
add
xchg
jle
pop
in
adc
loopne
insb
mov
sbb
sbb
lods
jle
dec
inc
pop
adc
cltd
call
and
sahf
out
sub
jns
sahf
aad
fwait
pop
or
lret
mov
cmc
insb
fsubs
push
aam
push
lea
orl
adc
or
call
inc
jp
cmp
sahf
dec
jmp
jno
fnstsw
dec
mov
and
les
dec
pop
pushf
lret
jb
xchg
roll
lods
sub
and
jne
mov
pop
imul
js
sub
push
dec
out
pop
in
mov
enter
add
repz
icebp
adc
xchg
pop
lds
or
sti
pop
adc
mov
mov
inc
les
imul
xchg
adc
push
into
leave
lods
or
xor
mov
sbb
filds
push
jnp
sub
mov
mov
movsl
ja
adc
mov
stc
inc
loop
dec
rcr
lcall
hlt
mov
push
bound
sbb
cmpsl
sbb
add
out
xchg
fs
sub
cmp
xchg
push
jae
aas
stos
add
inc
or
push
jo
mov
dec
pop
adc
movsl
in
jbe
add
mov
and
fisubrl
mov
cmc
mov
xchg
fsubs
xor
pop
shrb
pop
lcall
mov
cli
adc
adc
in
and
cltd
sub
cwtl
cwtl
dec
jns
pop
fwait
lds
mov
test
adc
sti
aas
daa
xchg
inc
pushf
mov
mov
dec
ljmp
and
mov
cmp
lods
leave
testl
add
xchg
pop
arpl
rcll
fiaddl
movsb
pop
jns
add
sbbl
xor
push
pop
js
cmp
repnz
insb
bound
pushf
dec
repz
and
aam
stos
cmp
sub
fstps
mov
in
jg
popf
jp
mov
jg
xchg
jmp
or
scas
add
imul
ret
out
xor
xlat
mov
inc
stc
dec
xchg
fs
aad
sahf
ljmp
and
sahf
inc
jns
or
add
inc
andl
pushf
fdivrs
in
lea
mov
scas
sbb
lahf
addr16
mov
push
sbb
mov
add
test
push
push
or
jle
adc
repz
hlt
into
mov
inc
mov
hlt
dec
pusha
xor
adc
notb
insl
pop
jns
in
ss
cli
xchg
and
inc
popa
sbb
call
outsb
fwait
es
cmpsb
push
popa
mov
dec
aad
aam
jl
leave
and
stos
xor
iret
dec
stc
mov
out
mov
mov
add
sub
mov
pop
inc
das
mov
push
pop
test
icebp
mov
in
js
xchg
mov
loop
push
mov
sub
xor
mov
test
dec
sub
dec
arpl
jb
jae
xchg
shll
jl
stos
adc
push
mov
ljmp
add
jecxz
cs
shll
or
sbb
sbb
lea
into
or
sub
lods
ss
test
fisubrl
fwait
mov
jg
inc
fistl
cmovbe
jae
cmpsb
sbb
iret
arpl
ds
add
lods
insl
outsb
fs
mov
xchg
aam
mov
cmp
std
les
pop
push
ucomiss
mov
imul
push
das
and
pop
ret
hlt
hlt
insb
cmp
imul
xor
push
mov
loope
jle
xlat
pop
dec
mov
dec
ret
cwtl
roll
iret
jbe
pop
mov
adc
js
jo
sub
mov
push
add
jmp
sub
fcomps
jg
stos
icebp
fistps
inc
adc
xchg
lret
xchg
dec
shll
loopne
mov
mov
adc
adc
add
and
ljmp
push
adc
push
les
lret
bound
hlt
adc
xor
je
and
xor
jne
out
lret
in
test
bound
iret
std
rolb
xchg
cmp
add
add
stc
out
inc
std
fidivrs
movsb
dec
adc
add
and
add
xchg
insb
ss
pop
mov
insb
xchg
in
mov
dec
loop
mov
push
cmp
adc
ljmp
ljmp
clc
mov
mov
mov
dec
call
hlt
xchg
xchg
ljmp
jge
aad
in
fistpl
xchg
out
mov
sbbl
in
dec
inc
xor
stc
pop
jmp
dec
daa
sahf
mov
xor
lret
incl
xor
jp
mov
scas
inc
xor
lcall
dec
or
xor
sbb
dec
or
push
push
mov
push
lret
out
pop
pop
and
imul
add
in
nop
fistpll
or
cltd
add
imul
xlat
packsswb
adc
in
push
test
rolb
ret
int
jne
pop
rcr
ss
sbb
inc
aas
jnp
push
add
fcmovnu
adc
mov
scas
negb
and
cmpsl
and
add
or
jg
mov
outsl
adc
test
in
dec
dec
mov
jo
in
jmp
mov
stos
bound
dec
mov
push
lret
popa
mov
aad
mov
lds
call
jo
jae
adc
insl
insl
cmp
dec
or
dec
inc
addr16
sbb
call
into
pop
xor
unpckhps
jbe
lods
mov
jp
pop
cmpsl
pop
jns
push
cmc
sbb
sti
in
pop
sub
lcall
add
ds
or
pop
sub
notl
mov
sub
xor
mov
in
ss
inc
push
cmp
aam
xchg
cmp
cs
mov
jmp
cld
adc
mov
mov
or
mov
sub
jnp
enter
dec
fadds
test
mov
add
mov
aam
jge
in
in
addr16
add
cltd
mov
sbb
push
int
mov
loope
inc
adc
int3
cs
sub
in
frndint
mov
push
cld
and
repz
outsl
out
xorb
or
jmp
jmp
stos
ja
mov
jp
dec
mov
or
sub
sti
loopne
jp
add
inc
pop
lock
enter
nop
mov
mov
xchg
sbb
lds
xchg
lods
or
in
push
ds
movsb
pop
pop
mov
push
out
mov
cmc
jns
xchg
call
lret
les
inc
push
addr16
xor
sbb
dec
push
mull
imul
inc
inc
jae
jb
add
sbb
outsl
push
inc
mov
lods
mov
test
xchg
lods
inc
push
out
pop
push
icebp
xlat
sbb
sbb
xchg
dec
push
dec
mov
push
es
stos
ja
lods
sub
lahf
adc
daa
sub
mov
add
hlt
je
push
cmp
fisttps
ret
repnz
fnsave
jmp
xlat
jp
add
dec
mov
add
mov
lods
and
jmp
daa
aaa
or
jg
adc
stc
mov
xchg
aas
insl
cmpb
loope
xchg
push
mov
adc
sbb
push
mov
into
inc
cmp
pop
outsl
test
mov
add
arpl
jne
test
jl
cwtl
shrb
loop
mov
scas
stc
xchg
pop
sub
inc
std
pmaxub
inc
lods
and
pop
hlt
sub
dec
andb
and
iret
test
mov
inc
sbb
arpl
xlat
lods
jnp
lea
sub
test
sarl
test
insb
in
outsl
js
push
lods
xchg
ficoms
mov
sbb
mov
sarl
push
mov
lcall
dec
mov
inc
ret
and
sbbl
push
daa
das
pop
add
outsb
mov
mov
daa
and
lods
movb
sysenter
cld
lods
daa
dec
insl
ss
sbb
pop
sub
sarl
scas
loop
jns
int
cmp
jns
adc
insb
pop
stc
or
insl
cmpl
push
rorb
lods
pop
fdivrs
addr16
mov
shlb
dec
daa
cli
out
xor
pop
insl
movsb
pusha
cltd
ds
xor
mov
push
lock
adc
cmpsb
add
or
std
cmp
mov
inc
cmp
cld
mov
testb
call
popa
xor
push
add
dec
mov
mov
mov
aaa
inc
mov
int
mov
pushf
ss
xchg
jbe
repz
test
mov
inc
iret
loope
lock
pop
jb,pn
scas
test
ficomps
xchg
adc
cmp
cltd
mov
add
and
jae
sbb
and
push
inc
in
cmp
stos
xor
insl
pop
fwait
inc
and
stc
cmc
xchg
out
cmp
fwait
std
add
fwait
imul
sub
pop
pop
lds
div
fisttpll
pop
cmpsb
pop
push
scas
repnz
dec
fwait
xor
jmp
sub
daa
push
add
xor
mov
push
repnz
xor
sbb
loop
cmp
fcomps
data16
call
jl
sub
mov
sti
out
inc
jge
dec
dec
or
stos
imul
int3
push
add
clc
cmp
mov
nop
cmp
stos
and
ret
loopne
int
hlt
stc
int
into
das
aaa
fidivrs
leave
mov
dec
stos
repz
and
mov
js
mov
test
sti
js
das
aad
les
and
nop
add
sbb
stos
and
jmp
lahf
and
push
push
mov
jge
ret
or
xchg
outsb
das
mov
loopne
or
cli
adc
repnz
inc
popa
sub
mov
xchg
mov
shrb
scas
or
mov
push
jge
xlat
shr
fistps
add
daa
push
stos
dec
popf
outsl
pop
je
cmp
jb
inc
addb
fwait
jb
jnp
mov
lcall
pop
dec
xor
stos
jb
mov
test
xchg
aad
ljmp
fstpl
sbb
iret
cmp
pop
out
lret
pop
imul
cmpsb
and
xchg
cltd
das
rclb
scas
xor
out
bound
add
in
xor
test
push
jno
lret
ja
daa
inc
call
and
pop
add
xchg
jnp
fs
pop
scas
setle
xor
push
nop
fnstenv
dec
cmp
jnp
jo
repnz
daa
xchg
mov
jae
adc
mov
and
add
lock
jbe
jnp
shlb
out
jl
iret
lret
scas
test
sahf
xchg
xchg
or
inc
data16
clc
mov
repnz
inc
or
imul
bound
cld
add
lahf
bound
inc
add
out
dec
cmp
xchg
shl
and
xchg
sub
pop
rolb
dec
sbb
shlb
jp
fldt
cmp
dec
iret
inc
xchg
call
adc
jbe
les
les
dec
cmp
bound
repz
jmp
mov
bound
xor
cltd
aaa
push
sub
pop
inc
les
xchg
pusha
xor
mov
push
in
das
mov
xchg
sbb
loop
aas
movsl
push
jbe
xlat
stos
mov
inc
je
pusha
call
repnz
inc
sub
mov
adc
push
dec
add
out
xor
dec
jg
cmpsl
lcall
jno
lcall
mov
mov
clc
inc
aaa
scas
jno
push
vcmpss
testl
rcrb
rolb
and
push
inc
jmp
xchg
rorb
fistl
adc
fwait
shlb
push
cmpsb
push
movsb
pop
lods
mov
add
jbe
aam
sbbb
in
or
fistl
sub
xchg
dec
mov
xchg
add
iret
test
fcomps
dec
or
cmp
xor
xlat
lea
cwtl
cmpsb
xlat
xchg
les
or
mov
data16
adc
mov
jge
mov
dec
out
out
or
pop
imul
lods
sub
jle
push
cmp
sarl
cmp
enter
jl
cwtl
cli
pop
sub
in
add
sub
jno
sti
addr16
mov
fdecstp
inc
pop
adc
or
cmp
out
mov
adc
into
inc
or
sti
add
or
arpl
imul
mov
imul
xor
sub
or
sbb
sahf
mov
push
in
xorb
push
fsubrp
cmc
js
test
not
push
adc
xor
add
pop
cltd
pop
sub
mov
lods
pop
insb
fldenv
fwait
imul
decl
loopne
push
rcll
dec
movsl
js
fldcw
jne
out
sbb
loopne
loop
add
lret
shrl
push
xor
adc
sub
in
push
push
and
nop
ja
xor
into
insb
xor
mov
outsl
push
mov
push
mov
dec
add
jno
outsb
arpl
in
xchg
inc
jecxz
jbe
xor
xchg
pop
add
wbinvd
hlt
xchg
inc
cli
inc
mov
insb
push
mov
mov
xchg
fildl
idivl
cmp
sub
testb
fsubrs
das
sub
add
faddl
mov
or
pushf
enter
imul
xchg
sub
cmp
and
lock
xchg
repnz
jp
lods
sbb
movsl
push
lret
aad
mov
inc
jne
adc
inc
jmp
rol
cmp
push
movb
mov
int3
rol
lret
lret
xchg
js
xor
inc
dec
xchg
jg
popa
aam
inc
sahf
enter
mov
fwait
shll
jge
pop
pop
fsubs
push
and
out
add
movsl
adc
push
aam
sbb
jl
cmp
xchg
rcr
mov
fildl
push
jns
scas
std
or
hlt
xor
jle
clc
shrb
outsb
or
and
xor
and
aad
sbb
in
add
xor
test
ret
test
cs
push
or
xchg
mov
mov
in
in
adc
dec
int3
dec
andl
test
cmp
ds
jne
pop
mov
scas
mov
mov
push
xor
daa
cmp
into
mov
cmp
insb
into
repz
mov
sub
out
fdivr
push
cltd
icebp
mov
add
shlb
pop
stos
sbb
adc
cmpsb
in
cmc
aaa
xor
or
mov
xlat
aaa
sbb
lahf
xchg
xchg
cmp
aam
outsl
in
lods
fcmovne
rcrb
cld
adc
xor
repz
aaa
rorb
scas
mov
addr16
loope
ljmp
insb
lret
dec
shr
ja
add
pop
lret
pushf
addr16
lahf
js
leave
lea
cmp
xchg
dec
mov
cld
cs
jns
xchg
icebp
and
cs
les
xchg
test
xchg
jecxz
mov
jle
add
inc
dec
in
insl
in
cmpsb
sub
inc
daa
out
sub
pop
fisubl
xchg
gs
aaa
in
push
mov
dec
ds
xchg
push
xchg
jns
push
insl
gs
ljmp
gs
sbb
lea
sub
or
cmp
sbb
fnstsw
mov
test
ffreep
mov
les
out
lods
aas
xchg
sbb
ficompl
scas
adcl
or
and
aam
cmp
insb
cwtl
inc
inc
stc
jne
push
adc
jge
adc
lret
fs
push
mov
mov
test
mov
mov
add
jp
xor
mov
out
mov
mov
ljmp
push
sbb
inc
adc
je
mov
and
push
lret
es
mov
outsl
ljmp
xchg
jnp
ds
popa
pop
push
xor
xor
ss
loopne
dec
sub
je
jge
jae
scas
xchg
push
call
bound
call
shlb
lds
jnp
fsubrl
mov
mov
sbb
xchg
stc
jecxz
sbb
mov
jle
mov
test
out
sbb
popf
lcall
and
adc
aam
mov
sub
add
js
fildl
popa
dec
call
lods
fmuls
frstor
imul
aas
dec
jge
fisttps
or
jmp
in
push
pushf
inc
pop
dec
jmp
sbb
add
shr
and
aas
fcomip
out
or
mov
jnp
add
and
add
fcomps
es
cmpsl
sub
jbe
dec
add
xlat
imul
sub
imul
cld
or
add
cwtl
pop
mov
inc
jg
sbb
aam
test
cld
mov
sti
mov
enter
fwait
xchg
push
lea
ret
shrl
and
inc
in
xchg
pop
fstpt
xchg
mov
jge
inc
sbb
xchg
aaa
push
xor
cmp
jmp
es
sbbl
lods
push
add
lds
and
stc
rclb
xor
cmp
aaa
cld
inc
sub
int
mov
xchg
push
jns
ret
out
fnsave
jae
mov
push
lcall
fsubl
cmpsl
cmpb
jg
mov
and
fwait
and
jb
mov
add
push
iret
jbe
and
mov
xor
add
xchg
roll
mov
rcl
sbb
int
mov
dec
adc
sub
cmp
out
repnz
mov
lds
push
ljmp
or
adc
aam
pop
mov
std
mov
pop
jle
lret
ret
cs
pop
xor
jge
xor
popf
sub
ds
out
ds
mov
push
fcoml
sub
sarb
fwait
dec
or
or
pop
popa
sarl
add
mov
ss
mov
push
sub
xor
fadds
ljmp
jb
mov
das
loopne
les
xchg
in
clc
mov
xorb
jnp
push
mov
pusha
out
lock
mov
xlat
sbb
bound
xchg
mov
and
in
push
xchg
pop
movsl
or
scas
xchg
ret
xor
cmp
imul
cld
hlt
test
jp
mov
in
std
gs
cs
clc
cmp
dec
push
lods
xor
xchg
inc
mov
test
push
repz
cmp
mov
andb
jnp
mov
xchg
push
iret
lahf
pop
cmp
loope
bound
iret
faddl
shlb
inc
push
cmp
and
adcl
fcom
das
lea
push
adc
in
insb
adc
push
daa
out
mov
adc
or
xchg
loopne
mov
sub
mov
jno
cs
in
test
xchg
movb
leave
frstor
cmp
mov
add
int3
push
mov
andl
pop
cmp
in
xchg
jne
adc
sbb
mov
jecxz
fldt
psllw
lea
lods
dec
pop
aaa
adc
pop
xchg
stos
xlat
test
push
mov
cmp
lret
sub
test
test
cmc
fdivl
fcompl
mov
dec
fidivrl
pop
xchg
mov
getsec
pop
nop
cmp
loop
rclb
mov
push
mov
ds
pop
jns
pop
sbb
jp
pop
pop
cmc
add
int
aas
mov
inc
fxam
or
call
imul
rcl
mov
mov
inc
sahf
popf
xchg
jnp
jae
dec
mov
lods
xor
scas
jp
jecxz
adc
push
cmp
push
and
dec
pop
fisttpll
jle
into
mov
insb
mov
and
inc
popa
pop
mov
mov
clc
jp
add
scas
fs
fsubrl
fs
add
and
insb
imul
mov
mov
adc
mov
xchg
stc
es
lods
dec
daa
shrl
lds
fwait
call
sub
pop
roll
cmpsb
sub
je
pop
xchg
jne
ljmp
enter
adc
mov
insb
jmp
mov
pop
mov
insb
int3
ss
pop
dec
or
mov
mov
jns
jbe
adc
xor
shr
xchg
cmp
in
out
xor
xchg
shrb
lcall
hlt
dec
testb
inc
pop
scas
or
jmp
repz
cmp
lods
mov
sub
divl
mov
ret
gs
jle
xor
add
add
adc
or
cmc
xlat
cwtl
je
stc
out
cmpsb
cmp
adc
imul
adc
enter
int
mov
xor
mov
sub
insb
mov
or
pop
push
push
push
fsts
pusha
rcrb
out
cmp
loopne
add
jo
cli
dec
lret
and
cmp
in
push
cmpsb
fisttpll
xlat
mov
cmp
ja
ret
jns
cwtl
cwtl
mov
fs
stc
mov
sub
inc
push
mov
xor
out
jg
fists
push
sbb
add
call
and
and
negb
mov
sbb
imul
inc
xchg
mov
arpl
xor
cld
xchg
cwtl
cmp
jb
pop
popf
push
jb
dec
movsl
in
push
sub
dec
mov
hlt
push
xor
es
xchg
imul
jo
pop
sub
sub
sbb
out
sbb
insl
mov
bound
mov
scas
mov
jb
inc
test
mov
or
pop
sbb
dec
aam
and
das
pop
xchg
xchg
cwtl
adc
repnz
pop
push
fs
scas
adc
add
or
jnp
lea
sub
test
leave
std
sbb
pop
and
pop
fwait
pop
lods
mov
das
pop
ljmp
addb
sub
inc
stc
jl
addb
addb
inc
fists
mov
and
scas
pop
or
fdivr
jge
aam
rcrl
mov
movsb
xor
mov
push
cmp
dec
mov
ja
inc
adc
cs
adcb
insb
arpl
dec
int3
pop
mov
aaa
sub
jnp
ror
xor
sbb
jp
xchg
sub
outsb
pop
fbld
add
cmpsl
inc
xor
push
hlt
mov
push
inc
mov
sub
mov
jae
popf
mov
push
in
ja
dec
in
test
aad
cld
dec
lcall
out
pop
insb
mov
cmp
hlt
lea
push
ljmp
aas
les
loope
shrb
sahf
xchg
dec
in
scas
cwtl
lcall
xor
int3
pop
dec
dec
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
xlat
lea
int3
xor
sbb
add
pop
add
dec
fs
data16
test
push
int
mov
lahf
enter
into
or
mov
sbb
enter
cli
mov
mov
jmp
sub
nop
push
xchg
ss
lods
stos
dec
je
pop
ficomps
and
cmp
jno
mov
xchg
xor
xchg
enter
pushf
xchg
loope
int
pop
mov
xchg
test
xor
scas
push
adc
jecxz
adc
fistpl
cli
xchg
rolb
mov
mov
push
mov
and
or
aad
pop
or
test
jle
loope
fildl
call
cmc
cmp
imul
adc
sbb
mov
lock
mov
jae
inc
inc
lea
mov
push
popf
jge
mov
push
lret
jnp
in
bound
inc
add
loop
gs
lock
imul
sub
add
in
cmp
sbb
push
mov
hlt
mov
mov
pop
icebp
mov
pop
or
pushf
or
je
std
iret
xor
mov
mov
push
cmp
push
loop
adcb
andnps
dec
pop
stc
in
and
pop
gs
fisttpl
hlt
sub
sub
pop
movsl
jb
pop
pop
jbe
aad
fwait
dec
movsl
fdivs
scas
pop
xchg
mov
xchg
push
shlb
and
lcall
fisubs
sub
add
jp
sbbl
in
in
mov
mov
loope
ret
add
loopne
and
mov
dec
xlat
sub
inc
adc
dec
jnp
or
pusha
dec
aas
adc
sbb
and
ffree
ss
lcall
jp
lcall
xchg
popf
mov
dec
pop
movsl
jg
inc
sbb
mov
insb
mov
jge
aam
ljmp
into
adc
mov
and
dec
js
xor
arpl
pop
jp
jmp
mov
lods
int3
dec
das
les
mov
repz
orb
sbb
lret
test
in
dec
subl
lods
pop
outsb
xor
mov
lods
mov
adc
push
daa
arpl
int3
shrb
inc
fcmovne
push
repnz
add
inc
xchg
push
sub
fwait
mov
dec
pop
test
pop
xchg
fs
pusha
fwait
xchg
ficompl
popa
inc
xor
lds
and
xor
mov
lds
cmp
rcl
sub
or
sti
ret
vsubss
loopne
mov
fbld
in
fstps
cmp
mov
adc
les
aaa
jmp
push
ret
mov
xchg
test
pop
lcall
sbb
pop
lds
adc
enter
stos
dec
leave
or
addl
xchg
sub
ret
ja
orb
movsb
mov
lods
cs
out
cmp
shlb
push
jbe
xchg
mov
cmpl
adc
xchg
inc
int
shlb
ljmp
dec
hlt
xchg
push
xor
sub
arpl
les
outsb
xchg
jmp
in
flds
ret
in
psrlq
in
mov
in
sahf
mov
mov
dec
nop
mov
pop
or
xchg
xlat
lock
pop
sbb
lret
add
in
cmp
iret
push
adc
and
or
repnz
fs
jmp
cmp
cmpsl
repnz
pop
and
push
stos
pop
sahf
adc
sahf
clc
in
inc
andl
pop
push
add
adcb
lcall
lcall
fucom
mov
or
sub
or
out
daa
daa
xchg
fidivl
mov
cltd
push
xor
sbb
mov
sahf
scas
pop
aaa
fisubrl
sub
nop
or
imul
sti
mov
daa
fdiv
test
sub
push
fadd
enter
xchg
nop
invd
fisubl
shrl
andb
scas
fistps
subl
stos
aad
das
or
imul
cld
xchg
xchg
jle
sbb
mov
cmp
ljmp
sbb
nop
pop
popw
std
sub
sahf
push
arpl
inc
lock
push
add
pusha
cs
cmp
inc
gs
jae
inc
add
push
sub
adc
lret
sbb
mov
sbb
or
push
dec
mov
loop
or
aaa
fabs
mov
rorb
mov
rorl
dec
push
cli
in
je
add
push
xor
lods
addl
out
pop
cmpsb
mov
sahf
xor
push
dec
rcll
push
xlat
mov
stos
add
push
fwait
adc
mov
imul
sub
mov
push
xchg
sar
add
or
repz
inc
dec
out
cld
xlat
dec
std
dec
std
mov
mov
div
lods
xchg
adc
cwtl
jb
cwtl
push
dec
test
loope
xchg
push
bound
in
jbe
test
sbb
mov
cli
xchg
xor
imul
xor
popa
mov
inc
dec
adc
cmp
orl
aam
popf
fsubl
out
push
sahf
mov
insl
cmp
dec
xchg
pusha
shll
inc
or
div
cmp
lret
jno
cs
inc
outsb
sub
xor
lods
mov
lahf
rclb
imul
iret
rol
stos
inc
pop
in
dec
sub
push
fldz
cmpsb
loop
cld
pop
push
pop
cmp
imul
loopne
mov
jge
adc
test
dec
and
xchg
fbstp
movsb
sbb
dec
adc
cmp
mov
in
and
push
mov
in
dec
cmc
popa
cli
or
jg
and
popa
inc
mov
jno
loopne
mov
jae
stc
pusha
jne
lcall
lret
mov
iret
add
imul
sbb
cmp
inc
dec
fcmove
lods
push
js
fisubrs
xchg
adc
or
rcll
inc
ret
jp
xor
test
inc
jns
in
mov
or
or
pop
cwtl
iret
cmpsl
test
inc
add
mov
or
fsub
subl
jg
adc
js
inc
sbb
xor
xchg
je
ljmp
test
add
add
adc
jg
stos
mov
lret
mov
and
add
jb
mov
nop
mov
cmc
in
mov
out
out
sahf
or
sub
pop
xor
dec
enter
xchg
push
imul
mov
dec
mov
inc
fmul
call
push
mov
cmp
pop
add
or
and
cmp
sbb
or
ds
fcomps
cmp
pop
cmpsl
jo
mov
call
dec
or
jbe
loope
pop
push
push
mov
mov
shl
jo
repnz
cmpsl
sbb
sub
jb
out
je
mov
pop
push
cmp
ret
pop
sbb
mov
popa
push
mov
lahf
pop
jno
mov
movsl
jno
outsl
pop
inc
inc
mov
in
xchg
imulb
es
sbb
scas
push
push
pop
in
ja
pop
xchg
pop
mov
pop
ficoml
ror
push
and
jmp
daa
mov
insl
rolb
movsl
inc
xor
lock
stos
jb
and
jge
fwait
mov
imul
ret
add
addb
repnz
mov
add
mov
pop
fldt
add
xadd
aaa
adc
ret
xchg
sbb
iret
jo
hlt
mov
aas
jno
arpl
roll
fs
fisttps
in
inc
mov
mov
pushf
push
push
xchg
inc
adc
xor
mov
jb
push
js
cmp
adc
filds
pop
fists
add
popa
push
dec
lcall
xchg
sub
xchg
test
bound
mov
jnp
push
ja
in
mov
sahf
das
sbb
insl
adc
jns
push
dec
sbb
push
and
or
and
sbbl
push
xor
add
out
ds
push
cmpl
adc
shl
popa
sbb
xchg
inc
mov
jo
aam
add
psubsb
int
outsl
pusha
mov
in
cmpsb
add
fadds
adc
fisttpl
mov
add
mov
jl
pushf
jecxz
nop
add
call
mov
mov
subl
xchg
sbb
push
xlat
inc
mov
cmp
scas
loop
das
push
mov
cmp
add
push
leave
leave
jge
inc
loop
sarb
push
jl
nop
loopne
push
jge
dec
xchg
fisubl
sbb
loop
popf
xchg
pushf
je
mov
pop
ja
sub
pop
cmp
aam
dec
cmp
adc
aad
xchg
xor
mov
cltd
cld
gs
and
stos
xor
loop
xor
pop
cmp
and
test
pop
aad
aad
cs
dec
cmpsb
mov
adc
and
dec
xlat
ja
push
loop
in
sbb
std
jnp
out
push
jecxz
addr16
jle
ljmp
hlt
adc
fists
add
sbb
cmp
sub
les
mov
rol
adc
inc
call
pop
mov
mov
mov
shlb
mov
test
pop
imull
jmp
mov
cmp
cli
fcomip
imul
mov
out
dec
xchg
pop
call
frstor
lock
mov
js
sti
scas
add
clc
sub
xchg
and
enter
movb
fsts
sti
add
cwtl
sbb
jmp
jmp
cwtl
jmp
mov
int3
jmp
jo
in
stos
dec
fsubs
mov
data16
add
jmp
and
and
add
mov
cs
scas
testl
sahf
clc
push
cmp
imul
mov
add
repnz
cmpsl
int3
or
ljmp
adc
stos
inc
mov
mov
jbe
mov
int
push
push
xlat
sbb
mov
or
dec
test
add
mov
dec
sub
hlt
je
mov
mov
sub
adc
inc
loop
or
lahf
and
ret
add
mov
mov
sbb
addr16
jnp
inc
sub
mov
jb
sub
std
push
jnp
add
mov
pop
wrmsr
mov
in
outsb
mov
and
sub
pop
mov
aas
in
xor
mov
fmuls
stos
mov
push
or
jg
repz
or
hlt
mov
mov
into
fstpt
push
out
sbb
aam
cld
xchg
pop
push
ja
and
rcr
in
xchg
call
pop
jns
adc
cltd
nop
adc
add
sub
or
popa
loope
mov
inc
movsl
lret
out
push
mov
add
cmpsl
cli
cmp
adc
jae
push
mov
cmp
scas
test
pop
inc
push
sti
in
lds
mov
pop
cmp
xor
push
out
mov
in
mov
mov
and
pop
push
ret
dec
push
jmp
dec
mov
bound
mov
repnz
and
sbb
sbb
dec
repz
mov
jecxz
shrb
aaa
popa
add
cmp
cmpsl
sub
call
push
xchg
repz
sub
adc
andl
shrb
jmp
lods
nop
mov
fs
mov
mov
mov
aad
push
xchg
pusha
add
movzwl
test
adc
movsl
stos
movsl
aaa
fiaddl
inc
adc
adc
inc
fcmovnb
or
xor
push
mov
fs
andl
shlb
cmp
or
cmpsl
mov
rolb
xchg
jmp
ficoml
mov
loopne
mov
fnstenv
xor
and
mov
addr16
push
test
xchg
aam
aam
sarb
xor
cmpb
push
xlat
addr16
xor
mov
xchg
rcl
sbb
push
and
loop
aam
iret
out
jmp
rcrl
sub
mov
sub
dec
in
dec
jne
std
sub
aad
rcr
ja
scas
fidivs
cwtl
pop
gs
pop
sti
clc
adc
adc
fs
out
cli
push
xor
popa
mov
pop
xchg
nop
inc
mov
lcall
lods
dec
mov
dec
aad
lea
inc
popl
rcll
movsl
sub
xor
pop
dec
sbb
adc
mov
insb
lock
sbb
out
cmp
repnz
mov
loope
sbb
add
pop
add
outsb
pushl
mov
add
mov
imul
out
push
sub
enter
std
xchg
cli
sbb
ss
add
mov
or
mov
sub
pop
pushf
cli
nop
test
out
lds
and
shrb
inc
cmc
jbe
fildl
pop
xor
mov
movb
sbb
shlb
in
xchg
push
aam
insb
and
call
pusha
mov
pop
cmpsl
cmp
test
mov
jecxz,pt
imul
cli
loop
inc
cmpb
scas
xor
or
pushf
adc
mov
xor
adc
lock
xorl
xchg
rolb
mov
cmp
out
jge
pop
cmpsb
lret
xor
imul
or
cmpl
cs
and
push
cmc
xor
repnz
and
in
inc
inc
lea
sahf
xor
jo
inc
faddl
jl
push
adc
ret
and
pop
mov
mov
inc
fsubrs
dec
or
mov
pop
aam
xor
das
cmp
dec
insb
js
fsts
push
lcall
mov
xor
sub
xchg
test
inc
insl
ja
arpl
sub
sub
cs
loop
inc
xchg
sbb
in
icebp
iret
lock
jae
stos
xor
jb
dec
lea
ja
sub
arpl
add
mov
sahf
loop
dec
in
xor
or
aaa
jle
sbb
mov
xchg
inc
add
fucom
aad
inc
push
aaa
lcall
cmp
daa
mov
jg
xor
lahf
add
in
shlb
lock
mov
push
xchg
push
add
scas
in
pop
es
lahf
lcall
pushf
pop
pop
adc
inc
call
inc
es
aas
les
data16
lret
clc
lock
data16
xor
and
ljmp
mov
mov
push
mov
xor
and
test
pop
pop
cmpsb
xchg
rcl
jae
popf
lods
or
xchg
orb
jmp
push
pop
and
lods
xchg
sbb
and
dec
dec
out
push
sahf
inc
dec
sbb
adc
lfs
in
pop
inc
push
out
xlat
stc
or
mov
in
adc
rcrb
loopne
cmp
bound
dec
xor
aaa
and
mov
rol
flds
inc
pop
bound
lods
mov
xor
pop
add
jbe
clc
cmp
adc
sahf
call
xor
mov
pushf
mov
shlb
mov
es
out
test
sbb
inc
jbe
cmp
je
stc
ljmp
sbb
inc
xchg
mov
into
pop
movsl
fsub
es
cltd
out
push
mov
jbe
mov
mov
xchg
orb
loopne,pt
outsl
push
negb
xchg
test
stos
bound
les
fcompl
nop
sub
fidivrs
mov
jno
jge
cwtl
js
imulb
adc
mov
dec
mov
jp
xchg
and
lret
mov
sar
arpl
pushf
pop
inc
pop
sahf
xchg
insl
lahf
insb
test
push
sbb
sbb
enter
nop
ret
jne
filds
test
dec
test
cs
idiv
mov
sahf
stc
aaa
mov
pusha
inc
pop
in
popf
sub
pop
stos
into
nop
call
xchg
cltd
xor
sub
testb
js
shlb
push
lahf
mov
sahf
mov
push
mov
loopne
xorl
nop
jge
push
jmp
pop
or
je
andb
stc
and
or
dec
lret
jno
cmp
mov
push
imul
dec
mov
jo
mov
adc
fidivrs
cli
mov
xchg
xor
push
mov
sbb
pusha
das
pop
jle
lret
jecxz
outsb
or
pop
sti
push
in
pop
xor
cmc
stc
mov
pop
and
or
mulps
subl
ror
aas
out
pop
adc
mov
cmp
incl
std
fnsave
xlat
xor
cmc
and
mov
jp
and
ljmp
fsubrs
xor
dec
sub
add
inc
repz
stc
lods
jnp
out
das
out
bound
ret
mov
sub
sbb
ret
out
push
mov
cmp
and
inc
repnz
cli
pop
and
xchg
sub
push
loope
outsb
cmp
ficoml
outsb
ss
nop
xlat
push
push
mov
mov
mov
or
and
hlt
shlb
xchg
pop
test
rcrl
lock
xor
std
cmp
ret
hlt
pop
push
sbb
and
stos
xchg
lahf
loop
or
pop
out
mov
mov
add
fmull
fs
pop
cltd
movb
insl
jge
rcl
mov
xor
dec
jb
roll
pop
fmuls
fdivs
and
popa
jno
add
mov
push
jo
push
jns
scas
adc
dec
frstor
repz
out
sub
jg
adc
inc
jecxz
mov
mov
inc
sub
jle
aaa
push
mov
sub
fstps
rorb
pop
mov
sbb
out
xor
aas
inc
or
adc
std
xorb
insl
js
push
mov
gs
repnz
pop
sbb
pop
mov
adc
stc
mov
jno
jge
mov
cmpsl
call
cmpsl
inc
sub
sub
pop
cmpb
leave
or
test
aaa
jnp
in
jmp
test
clc
shll
adc
into
fmul
push
jo
mov
lock
pop
es
mov
mov
negl
inc
lds
mov
in
sarb
add
jg
mov
xor
push
fbstp
js
cld
bound
pop
loopne
and
jecxz
mov
shr
loopne
bound
vpaddsw
out
xor
mov
aam
js
loopne
and
or
enter
mov
dec
mov
mov
call
xchg
ds
mov
jnp
mov
xchg
out
orl
out
inc
or
cwtl
add
setb
and
pop
inc
dec
dec
or
cmp
inc
inc
push
lret
or
xor
pusha
xchg
test
and
rcrl
add
aad
pusha
cld
jne
es
add
and
add
cli
jne
inc
call
or
adc
dec
pushf
mov
cmp
sti
fldl
popa
sub
dec
popa
inc
or
mov
mov
mov
sub
loopne
jl
dec
fadds
mov
mov
pop
loopne
sbb
xlat
icebp
inc
aad
adc
imul
mov
adc
daa
ja
inc
jnp
mov
mov
mov
cmp
loop
pop
cmc
cmp
mov
js
xor
lret
pop
nop
or
mov
xor
jecxz
pop
repnz
xor
xor
rclb
fdivs
mov
daa
mov
sub
aam
call
jns
ds
nop
jl
cmp
ss
test
and
inc
push
dec
stos
incl
pushf
inc
sahf
std
pop
or
xchg
jmp
push
repnz
mov
adc
aas
push
nop
daa
cmp
cs
mov
push
jmp
int
das
pop
xor
aas
pop
sahf
inc
iret
loop
push
rorb
lret
enter
movsb
outsl
ljmp
xlat
popa
and
jb
out
push
js
pop
add
scas
dec
test
xor
mov
fistpll
mov
call
jl
aad
dec
fs
or
pop
cli
hlt
arpl
sub
les
push
lock
jp
leave
das
sbb
mov
or
or
mov
inc
xchg
idivb
push
xchg
test
mov
jp
and
shll
das
jnp
shl
mov
mov
test
sbb
iret
jmp
das
mov
repz
inc
and
pop
mov
fnstcw
popf
lret
or
and
mov
in
inc
push
jmp
and
push
add
mov
rcll
cmp
outsb
out
inc
mov
pop
cmovp
ljmp
and
leave
insl
test
das
inc
fmul
loope
inc
adc
dec
mov
dec
aaa
cwtl
or
leave
outsb
ficoml
test
push
ret
lods
in
sub
cmp
outsl
mov
repnz
mov
mov
leave
dec
loopne
dec
inc
dec
jmp
mov
in
xor
push
into
xor
pop
mov
mov
jmp
gs
fwait
jns
cmp
sarb
add
cmp
dec
inc
xchg
sub
xor
mov
cmp
sub
inc
idivb
cmpb
push
push
scas
cmc
aaa
insb
lret
icebp
mov
push
push
bound
gs
adc
pop
xchg
jmp
pop
in
jb
cmp
std
xchg
cmp
cmpl
aaa
push
ja
addl
mov
fs
mov
mov
mov
inc
mov
jp
lock
pop
push
lock
call
lret
fsubrs
push
int
lods
jb
xlat
adc
inc
mov
or
fidivrl
dec
shlb
add
jne
rorl
lods
push
push
sbb
or
out
xchg
pop
ret
fwait
inc
dec
mov
lods
xchg
into
xor
lcallw
inc
lods
nop
pusha
test
repz
dec
out
shl
sarb
popa
or
lea
fs
shrl
xor
shll
subl
mov
sar
xor
mov
push
pop
sub
fists
and
dec
mov
nop
ljmp
jge
mov
mov
jns
pushf
in
or
push
scas
into
aaa
mov
mov
and
sub
xchg
stos
cmp
scas
gs
jp
lods
hlt
in
rcll
xor
push
arpl
jno
mov
sub
mov
xchg
bound
jge
adc
push
cs
mov
test
incb
jmp
popf
xor
ret
mov
xchg
xchg
aas
int
or
add
inc
and
lock
pop
dec
roll
ret
cmc
adcl
movsl
pop
mov
js
add
scas
fdivrs
mov
or
into
add
xlat
leave
nop
clc
mov
gs
jne
fcomp
dec
cmc
repz
push
sbb
sahf
dec
add
cltd
add
out
int
dec
shlb
jne
lret
jl
sbb
add
test
out
fsts
scas
mov
outsb
pop
add
int
and
lea
stos
mov
fcmovu
dec
sub
add
leave
mulb
cltd
push
nop
mov
adc
les
xor
xor
push
fimuls
bnd
insb
inc
xchg
enter
mov
inc
jne
and
in
test
aaa
pop
inc
jge
in
cld
xor
sbbl
jbe
pushf
pop
in
mov
jg
pop
fdecstp
pop
pop
das
jo
inc
mov
add
aad
add
mull
repnz
xchg
ficoml
lret
into
push
dec
lahf
fmuls
rcl
test
fs
cltd
stos
xlat
clc
mov
test
out
xchg
mov
cmpsl
mov
pop
cmpb
lods
mov
pop
pop
bound
cli
fsts
jmp
push
xor
pop
mov
dec
cmp
aad
mov
inc
ljmp
pop
ja
pop
xor
mov
sub
arpl
repz
movsl
inc
nop
fs
popa
addl
data16
pop
xchg
cmp
data16
dec
jmp
stos
ss
cmp
out
mov
mov
inc
repz
xchg
ss
mov
pop
sub
test
lcall
cmp
pop
call
mov
mov
dec
js
cmp
sahf
jno
call
loop
inc
pop
insl
into
add
lods
in
rcr
jmp
sub
or
sub
adc
xchg
mov
rorb
ret
xchg
ds
push
xchg
mov
xor
aas
ret
mov
in
bound
or
mov
and
jge
or
cmp
insl
shrl
int
pop
cmp
in
lahf
mov
xorl
test
adc
enter
sti
jp
mul
ljmp
mov
and
and
lock
in
sbb
cmp
or
rol
rcrl
dec
mov
popa
cld
push
jne
cltd
test
jbe
or
sbb
scas
cmp
stos
neg
sub
mov
stc
dec
pop
xchg
pop
adc
xchg
jg
xor
push
push
idivb
mov
mov
jg
fists
xor
outsb
fwait
sub
add
pop
add
aad
jnp
icebp
xchg
dec
or
pop
mov
aaa
test
mov
pop
jmp
jle
pop
add
cmpsl
insl
sarb
push
aad
aas
mov
mov
test
test
pop
les
dec
xchg
inc
jecxz
or
in
and
std
mov
daa
clc
sub
call
jno
pop
cmp
je
fnsave
or
jno
dec
xchg
mov
or
add
cmp
arpl
xorl
rorl
add
sbb
test
out
out
je
ret
call
into
dec
xor
stc
popf
xor
insl
outsl
mov
or
pusha
jecxz
js
fcompl
ret
stc
and
sbb
outsb
dec
psrlw
inc
or
jno
pop
jg
pusha
cmc
pop
pop
pop
aam
adc
cltd
pop
and
xchg
or
scas
mov
pushl
in
mov
leave
rclb
sti
aaa
popa
lret
mov
inc
jle
test
mov
dec
test
xchg
xlat
or
out
js
lods
test
out
push
xor
fildl
pop
mov
push
inc
movsl
or
add
mov
xchg
sub
scas
stc
orb
clc
adc
jbe
dec
inc
stc
ret
stos
addr16
push
dec
rclb
jnp
xor
add
stos
cltd
mov
push
ret
xchg
jae
cmp
insl
push
lea
je
jg
icebp
jb
dec
push
rol
sbb
loope
pushf
jle
adc
jo
xor
jecxz
or
cmp
lcall
sbb
sub
mov
mov
bound
lcall
cmc
call
out
cmp
jns
cmp
adc
mov
inc
les
push
xchg
insb
lcall
xor
pusha
sahf
cmp
mov
push
ss
scas
push
sahf
xchg
cmpl
or
test
shlb
or
inc
call
mov
push
mov
pop
lock
test
or
pop
mov
sahf
mov
scas
ds
outsb
jmp
mov
xor
shrl
dec
fistps
sarb
lea
mov
nop
dec
or
xchg
cmc
mov
out
sub
xchg
mov
inc
or
push
adc
mov
push
push
xor
sahf
repnz
xchg
cmp
jmp
push
popf
xchg
sbb
test
push
adc
test
movsb
fstp
dec
cwtl
outsb
popf
addr16
aaa
adc
aas
lahf
inc
test
lret
cmp
jnp
mov
sub
pop
inc
push
pusha
inc
adc
dec
insl
icebp
add
enter
imull
inc
in
daa
movsl
flds
imul
andb
lock
add
in
add
sbb
int3
decl
movsb
and
xchg
dec
adc
jne
mov
ret
fucomip
fldl
daa
mov
fldl
mov
cmpl
pop
pop
inc
sbb
cmp
pop
out
cld
pop
xchg
stos
movsb
jg
lds
and
inc
inc
inc
dec
lret
ret
sub
mov
lea
fs
cld
xchg
jb
xor
jecxz
imull
jle
xor
mov
lds
push
in
out
fistpl
sub
scas
in
aad
or
adc
push
int
mov
mov
dec
out
filds
pop
in
fstl
pusha
pop
ds
cmp
ds
xor
ret
scas
push
enter
mov
std
andb
outsl
inc
and
into
roll
mov
sahf
icebp
pop
mov
shl
push
add
mov
fcomp
cwtl
jg
xchg
arpl
fwait
inc
jb
push
lea
sbb
cmp
or
jp
icebp
dec
enter
push
insl
mov
mov
es
jmp
sbb
je
repnz
test
bound
outsl
jp
addr16
adc
les
sti
clc
mov
mov
cmp
lret
cmp
iret
lods
mov
lret
ficoms
cmp
int3
inc
fimuls
mov
sub
add
or
ret
sbb
fwait
and
popf
outsl
lret
es
dec
mov
mov
xor
rcrb
mov
movb
incl
xchg
mov
jecxz
in
xchg
test
and
cmc
repz
pop
mov
or
push
dec
sub
jne
sbb
cmp
pop
push
pop
clc
sbb
rcll
xor
popa
rolb
xchg
inc
mov
adc
mov
stos
or
pop
ja
pop
rcll
cmp
mov
shll
fists
jmp
xor
xorb
lods
in
dec
gs
mov
fmuls
ficompl
jbe
cmp
jo
inc
push
pop
repz
aaa
dec
rol
push
shl
scas
jmp
mov
pop
movsb
inc
or
add
stos
lret
scas
add
or
and
dec
mov
mov
stos
jae
add
inc
js
jae
or
insb
sar
xor
mov
mov
or
or
lahf
adc
pop
sbb
in
mov
mov
es
push
mov
jmp
cmp
push
inc
je
mov
adc
ljmp
inc
fnstenv
jnp
xor
inc
xchg
into
jbe
call
dec
cld
mov
push
xchg
inc
sbb
push
adcl
dec
inc
pop
push
or
mov
fwait
out
sub
or
add
jmp
pop
addr16
xor
jno
cld
pop
loope
sbb
push
mov
sahf
cwtl
aaa
out
std
stc
fstp
inc
lret
dec
jnp
aas
jnp
xlat
push
and
mov
cmpsb
add
int
push
fdivl
and
add
ss
mov
mov
push
scas
dec
push
and
cmpsb
gs
vpackssdw
lock
sub
inc
lahf
or
movsl
sub
pop
mov
jo
andl
ret
fiaddl
popf
data16
in
push
sbb
repnz
insl
add
loope
mov
mov
jo
xrstor
popf
mov
popa
addr16
add
call
ja
bound
movsb
leave
test
mov
addr16
cs
xor
mov
push
pushf
push
mov
loopne
mov
test
push
inc
rcrl
lcall
add
cwtl
and
add
adc
mov
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
add
add
add
xor
xor
xor
xor
inc
add
push
xor
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
jo
add
add
add
mov
cmp
cmp
cmp
mov
add
in
ss
ss
ss
add
add
or
