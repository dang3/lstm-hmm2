push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
sub
bound
fstpl
bound
sub
pop
add
pop
jne
cmc
jmp
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
int3
jmp
sub
divb
or
pop
idivb
dec
lahf
jnp
xchg
shrb
pop
cmpsb
test
adc
xor
xchg
dec
lods
mov
popa
add
adc
xchg
adc
dec
int3
inc
dec
dec
push
sub
data16
ja
cmp
fwait
in
jno
lcall
xchg
lahf
cmp
inc
cltd
or
mov
gs
push
push
jae
sub
shlb
sahf
ljmp
adcb
cmp
or
xor
pop
cltd
or
pop
push
mul
test
mov
popf
cmpsl
js
scas
mov
scas
xchg
inc
inc
popf
movsb
jmp
pop
jns
aas
jg
lds
lret
dec
sub
jnp
aad
push
xchg
sub
mov
xor
in
dec
enter
movsl
sub
icebp
insb
jmp
pusha
stc
add
mov
inc
movsl
sbb
shl
adc
iret
mov
imul
cltd
jae
and
mov
std
inc
cwtl
mov
and
cmp
jae
cmp
mov
mov
mov
cmpsb
jl
icebp
and
inc
inc
loop
mov
xchg
cltd
std
push
push
mov
mov
ret
pop
andl
sub
sbb
jae
mov
push
sub
shlb
sbb
scas
push
fildll
rorb
adc
icebp
insl
cmpsb
pop
loopne
ds
add
or
lret
gs
fs
sbb
add
pop
xor
xor
insb
fwait
mov
gs
test
add
pusha
out
les
xchg
and
jecxz
mov
jae
scas
sti
cmpsl
jle
leave
movsb
das
mov
ficompl
bound
mov
hlt
sbb
mulb
xchg
scas
dec
cwtl
adc
sub
jae
xchg
shl
ljmp
shlb
negl
aad
inc
aaa
or
test
inc
mov
movsl
call
add
loop
into
cld
cmp
fiadds
mov
arpl
lods
addr16
mov
inc
push
ljmp
das
pop
jno
jnp
sub
movsl
test
cmp
adc
enter
dec
aad
cmp
sub
jecxz
rcrl
repz
jmp
push
mov
sub
test
xchg
or
inc
mov
push
cmp
and
aad
out
and
loop
adc
fcmovnbe
mov
inc
add
enter
add
jecxz
in
idivb
sbb
fldcw
mov
pop
cs
dec
adc
sbb
xchg
add
adc
or
fcoms
std
sbb
push
xchg
aaa
xor
lret
push
xor
mov
insb
call
int3
dec
mov
out
ret
add
xchg
enter
push
inc
dec
mov
sbb
mov
in
or
in
insb
sub
xchg
and
test
sbb
xchg
insb
or
icebp
sbb
pop
repz
in
imul
pop
hlt
and
std
xchg
push
or
mov
mov
jl
movaps
ja
aad
sub
call
inc
sub
cmp
shll
lret
loope
xchg
cmp
dec
mov
in
sahf
repz
adc
jnp
cmp
shrl
movsl
jo
lret
jl
mov
push
push
xchg
lds
push
lahf
repnz
pop
jle
imul
sbb
into
aaa
je
cmp
stc
jb
mov
in
adc
cmp
daa
or
pop
stos
les
mov
sbb
add
xor
in
jl
sarb
and
inc
mov
sub
lods
cmpsb
mov
xchg
and
popa
mov
imul
and
insb
sub
sbb
lock
xor
aaa
jle
out
cld
or
sbb
push
stos
imul
or
dec
or
repnz
call
sbb
xchg
xor
sub
mov
fcompl
in
nopl
sub
mov
sub
push
out
int
sub
sbb
repnz
push
and
inc
push
sub
aas
and
or
mov
fsts
adc
fldenv
add
cmpsl
outsl
mov
xorl
xor
cmp
scas
sbb
pop
sbb
pop
mov
shll
mov
adc
insl
sub
mov
xchg
or
loope
daa
cli
lds
lcall
sub
into
pop
xchg
mov
imul
idivl
clc
enter
scas
push
jmp
xlat
inc
pushf
sbb
outsb
notrack
inc
test
add
out
dec
ret
jae
mov
leave
fidivrl
into
loopne
flds
add
shll
or
div
sbb
pop
imul
pusha
add
mov
mov
insl
mov
ja
adc
repnz
call
inc
xor
jg
mov
in
xor
cs
inc
ljmp
or
sbb
cmc
out
sub
cli
movsl
pop
fwait
aam
lods
outsl
inc
setne
movb
jno
pop
sbb
aad
insl
movsb
sub
sbb
imul
scas
adc
test
out
mov
ret
mov
test
mov
jo
in
fbld
push
nop
adc
adcl
es
gs
pop
mov
ds
mov
lret
mov
ljmp
mov
adc
into
lret
pop
adc
pop
ficoms
cltd
jmp
add
sbbl
mov
jle
jecxz
or
je
hlt
enter
or
icebp
mov
sbb
mov
orb
sbb
mov
jg
aas
or
es
fdivr
xor
les
or
in
xor
jmp
lock
pop
cmp
addr16
lods
scas
sub
jp
popa
inc
call
std
push
jbe
mov
mov
push
mov
jecxz
push
out
lods
push
mov
mov
test
faddl
jecxz
jb
in
leave
loop
out
in
lcall
cmp
or
jmp
sbbb
inc
add
out
aad
fisubs
xchg
jb
xor
mov
in
adc
les
std
mov
mov
inc
cmpsb
mov
icebp
xor
mov
push
out
stos
dec
popa
push
lret
loopne
push
lea
inc
xor
lcall
scas
push
jnp
insl
dec
sub
jle
mov
sub
into
adc
in
fwait
inc
and
cmpsl
scas
push
jbe
scas
daa
sub
fsubs
cmp
lcall
lods
lcall
into
mov
lret
pop
xor
mov
jno
xchg
add
inc
roll
div
int
aad
lods
adc
and
das
mov
inc
idivl
cwtl
adc
enter
imul
mov
pop
mov
cmp
jmp
pusha
jecxz
cmpsb
jge
add
mov
je
lahf
jmp
mov
sar
ss
jae
xchg
xchg
mov
pusha
add
mov
pop
and
mov
mov
add
pop
jns
xlat
daa
mov
test
inc
jge
dec
xor
std
or
out
adc
fisubrs
add
inc
sub
into
outsl
pusha
xchg
decb
lcall
jne
cwtl
lcallw
mov
shlb
dec
repz
in
sbbb
cltd
jb
dec
jo
femms
jmp
iret
mov
stc
push
sahf
inc
ja
rcll
sti
aad
jbe
jnp
or
fists
sbb
xchg
mov
jmp
outsb
jb
adc
movsl
jbe
sarl
lods
dec
leave
mov
daa
arpl
jl
daa
adc
nop
ret
ss
lret
in
add
or
out
push
cld
mov
mov
mov
sbb
mov
movsb
xor
test
pop
aas
sub
adc
dec
inc
add
sbb
imulb
sub
jp
insl
aaa
xchg
je
jl
arpl
incb
rcrl
and
inc
xchg
cmpb
outsl
sub
add
cltd
leave
and
inc
out
xor
adc
sbb
ljmp
mov
push
or
loop
testb
ljmp
out
mov
sbb
pop
aas
mov
mov
scas
or
jl
sub
cltd
mov
mov
inc
mov
sub
popf
adc
mov
add
or
mov
push
mov
or
jge
pop
dec
push
push
cli
push
aaa
cmp
pushf
add
dec
cmp
imul
xor
out
loop
lds
fsubrs
fidivl
pop
pop
es
mov
mov
dec
out
aaa
out
xchg
push
inc
add
stos
insl
mov
xor
arpl
xorl
movsb
dec
repz
aaa
test
in
sbb
xchg
push
mov
or
or
arpl
jge
sbb
xchg
cltd
add
aam
jns
pop
xor
pop
dec
push
jp
cmp
xchg
gs
mov
xchg
test
push
or
mov
aas
test
test
sub
ds
mov
xor
cmpsl
jle
insl
dec
mov
mov
and
fcmovu
lods
jno
je
out
inc
xor
loop
push
ret
fnstenv
mov
xchg
mov
mov
adcl
mov
inc
pop
loopne
add
call
nop
inc
jne
push
cmp
inc
dec
inc
and
shll
dec
mov
add
or
in
jmp
les
sbb
sub
mov
dec
mov
sarb
dec
push
mov
jns
inc
dec
mov
xchg
push
mov
in
xor
lcall
add
je
repnz
adc
fwait
divl
movl
cmp
jp
dec
cli
xchg
and
fwait
pop
insl
int3
push
push
inc
lahf
or
insl
mov
xchg
aam
les
and
les
or
push
sub
push
xor
xorl
cli
rorl
daa
pusha
ja
addb
sbbb
inc
mov
xor
fs
je
adc
dec
add
push
fst
lret
lock
and
adc
xor
jns
jo
jno
dec
inc
das
or
lods
gs
stos
iret
mov
insl
dec
movsb
imul
pushf
loopne
jo
fs
mov
jns
pop
out
test
adc
outsb
sbb
arpl
xchg
incb
cwtl
push
sub
adc
fldl
push
xor
sub
push
sahf
cwtl
mov
pop
sub
mov
and
jb
push
and
mov
jbe
fs
mov
loopne
iret
mov
in
sub
jle
pusha
jbe
jecxz,pn
mov
ss
sbb
lods
adc
sub
push
add
outsb
mov
inc
addb
lods
sbb
out
push
sti
test
in
gs
fcmovne
scas
icebp
jno
dec
adc
add
jmp
gs
mov
fildl
push
lea
fistl
or
jmp
dec
insl
mov
sub
stos
xchg
out
push
ss
not
hlt
jno
shl
jmp
xchg
aas
lcall
stc
test
test
mov
out
dec
stos
pushf
push
enter
mov
push
cmc
sar
repz
dec
jecxz
in
aam
icebp
adc
sbb
insl
mov
mov
or
mov
adc
adc
mov
orl
push
sbb
jmp
stos
pop
inc
inc
stos
enter
fdivr
imul
fldl
test
bswap
and
daa
xchg
sarl
jl
xor
les
push
outsb
xlat
pop
addr16
xchg
push
xor
and
sub
cmc
and
add
add
inc
cld
daa
jl
or
xor
push
add
repz
lods
lds
je
out
dec
jnp
xchg
inc
jle
imul
cmpb
fsts
push
ret
or
pop
jp
add
xchg
cmp
xchg
movsb
aad
dec
xchg
lret
imul
jns
nop
lods
mov
cltd
xor
test
fcomps
add
ljmp
pop
mov
jl
sbb
jno
mov
lahf
aaa
outsb
fildl
fwait
mov
cmp
fbld
jnp
or
loop
cmp
cmp
sub
clc
flds
ror
mov
in
push
dec
pop
push
leave
stc
lds
and
push
and
mov
mov
fidivl
fsubp
idivb
and
jnp
jle
mov
lds
sub
mov
inc
sarl
cmp
inc
addr16
jp
pushf
negl
dec
pop
sbb
out
into
mov
jne
mov
push
pop
inc
aam
arpl
insb
mov
std
bound
push
faddp
arpl
cmp
xor
imul
ret
insl
ds
mov
xor
lods
aaa
jb
jbe
out
sub
cmp
mov
test
dec
aam
xchg
adc
ja
inc
mov
jno
insb
popl
adc
test
cli
aas
movsl
jns
sub
popf
inc
loop
dec
ja
aas
ss
shl
movsb
xor
mov
mov
mov
popa
shrl
mov
negl
sar
xor
push
add
stc
pop
int3
mov
sub
out
jp
push
xor
lea
mov
shlb
dec
shl
and
lea
lret
inc
or
nop
enter
call
mov
outsl
inc
push
adc
lcall
loop
icebp
xor
push
mov
dec
mov
dec
popa
adc
lods
push
pop
mov
cmp
and
xchg
out
push
dec
mov
movntq
out
inc
mov
xlat
mov
mov
popf
mov
xchg
insb
ficomps
pop
ja
out
or
or
dec
pop
cmpsb
sbb
lods
pop
sbb
flds
aas
das
or
push
rolb
jbe
push
and
cld
inc
dec
in
xor
iret
inc
in
outsb
add
enter
sub
in
add
mov
int3
insb
movsl
and
xchg
aad
sahf
mov
mov
ljmp
sub
pop
test
inc
push
push
lods
mov
xchg
jae
lds
mov
add
fldcw
int
je
xchg
mov
cmp
andl
mov
sub
adc
lcall
or
fists
nop
leave
or
push
in
aam
sub
popl
std
sbb
cmpsl
sub
pop
pop
push
xchg
jae
sbb
cmp
aam
mov
pushf
pop
dec
fdivl
adc
push
jmp
sbb
add
adc
in
sub
add
xchg
jb
dec
xor
xchg
mov
or
cs
fwait
divb
in
xchg
lret
sbb
push
add
mov
xchg
repz
out
int3
xchg
icebp
xchg
push
fbstp
sbb
pop
daa
aas
outsb
imul
mov
sti
add
pop
test
ja
sub
inc
js
lds
lret
add
shlb
add
sub
mov
pop
add
jae
lea
cli
mov
lock
jo
inc
cli
push
jae
xor
adc
int3
xor
mov
lret
gs
aaa
mov
sbb
xchg
fldcw
int3
jge
or
test
imul
push
insb
pop
iret
cwtl
int
ljmp
jg
inc
pop
jmp
imul
loop
cltd
pushf
mov
loopne
sbb
sbb
imul
cmp
lcall
xchg
xor
js
mov
cmc
data16
cltd
lock
push
xchg
cld
andb
ja
mov
mov
adc
dec
addl
stos
aam
lock
ror
daa
cmp
movnti
push
xchg
lahf
pop
jmp
push
push
xchg
hlt
dec
push
decl
and
outsb
jns
xorl
outsl
fs
xchg
fsubl
fsubr
sahf
jp
icebp
ficoms
adc
aad
lret
ss
lock
sbb
pop
pop
pop
arpl
inc
cwtl
pop
stc
dec
dec
dec
cmp
es
pop
or
orb
insb
pop
addr16
mov
inc
cwtl
xor
roll
jl
cmp
cmc
fidivrs
push
adc
mov
adc
lret
dec
cli
fcmovu
sbb
add
and
hlt
lret
test
mov
stc
jbe
test
mov
in
adc
sub
in
fisubrl
inc
arpl
sti
lods
cmp
jg
out
xor
arpl
cltd
xor
xor
aas
out
scas
shll
ja
xrelease
cli
shl
hlt
insb
bound
fisubs
push
mov
rclb
dec
ja
mov
imul
cmp
into
jle
xor
or
popf
cmp
in
lds
sbb
xor
sbb
or
std
and
test
xchg
loope
or
cmpsl
stos
dec
jns
cmp
jnp
mov
sbb
out
jbe
sahf
push
rcr
pusha
lahf
arpl
xchg
jns
cld
cmp
insl
mov
fisttpl
cmp
jg
adc
sub
dec
aad
adc
shlb
in
out
pop
icebp
int3
test
push
jle
insl
arpl
add
outsb
mov
jo
jne
iret
or
mov
loope
int
xchg
and
push
outsb
inc
mov
push
xchg
in
mov
aad
add
mov
push
adc
adc
data16
xor
add
cmpsl
and
jae
std
lret
xchg
lods
lret
repz
dec
jle
cltd
xor
adc
loope
cwtl
testb
dec
ss
and
push
loopne
in
pusha
test
sbb
xor
sarb
mov
pop
in
addr16
test
sbb
or
or
jmp
sarl
cwtl
and
outsl
in
aad
or
push
push
lods
cmp
jne
mov
mov
ffreep
repz
arpl
xchg
in
and
jle
adc
cmpsl
cli
dec
notl
push
sahf
out
xor
cmp
cmc
xchg
mov
out
sbb
sub
movsb
aaa
xchg
sub
push
aad
push
repz
cld
and
sbb
cs
add
pop
push
les
push
sbb
cmpl
push
sub
subl
cmpsl
mov
add
in
or
jmp
in
pmuludq
insb
in
jmp
jp
xlat
dec
hlt
lods
sub
jg
sbb
sub
xchg
adc
arpl
rolb
xchg
dec
and
adc
adc
sbb
movsl
mov
mov
xlat
xor
xor
lea
enter
sbb
aam
jae
jo
clc
sbb
shr
dec
xor
leave
mov
and
mov
jg
adc
inc
imul
mov
ret
call
mov
mov
pop
lret
lds
xlat
mov
rolb
mov
adc
push
mov
cli
scas
sub
push
scas
fisttpl
repnz
pop
push
clc
xor
mov
ja
lcall
mulb
or
cltd
movsb
ret
cmpsb
jns
jae
lret
cmp
mov
cs
dec
jle
andl
dec
ret
icebp
loopne
mov
movd
pop
incb
bound
mov
xchg
or
or
xor
adc
cmp
and
scas
je
imul
ljmp
pop
stos
mov
dec
insb
mov
mov
mov
enter
fisubrs
inc
repz
loop
and
repz
and
aam
ja
addr16
xor
fidivrl
inc
xorb
js
and
nop
lds
jb
scas
stos
add
add
cmp
mov
jbe
cmp
sub
pop
popa
ror
xlat
dec
stos
aam
mov
xchg
fldcw
fs
push
loop
jne
mov
cmpsb
inc
sti
movsl
mov
xchg
xchg
push
stos
add
mov
or
dec
repz
adc
xor
popf
insb
in
mov
jo
xchg
imul
jbe
lock
pop
addr16
push
push
setns
mov
inc
dec
js
pop
out
jbe
loopne
jno
mov
icebp
jg
das
push
outsb
push
dec
dec
sub
ror
lock
sub
sbb
cltd
xchg
adc
adc
lahf
cmp
fwait
pop
pop
adc
push
std
jno
loope
mov
adc
mov
mov
xor
mov
mov
flds
lods
cmp
rcll
inc
shll
jns
dec
test
enter
adc
stos
subb
insl
gs
fnstcw
movsb
movsb
mov
mov
xlat
push
jp
push
push
loopne
sbb
aad
ljmp
pop
adc
outsl
shll
adc
out
add
cmp
xor
sbb
inc
cmc
pop
sbb
pushf
and
sub
jnp
or
imul
push
mov
pop
std
scas
mov
inc
sub
add
sub
testb
and
mov
sub
rorb
sbb
test
mov
sti
subl
or
xchg
pusha
or
dec
sub
or
mov
in
js
loopne
ficoms
jg
cmpl
xchg
add
jge
inc
test
pop
dec
sub
icebp
rclb
inc
xchg
pop
subb
aad
inc
jge
or
and
mov
enter
lock
push
in
sub
movsb
insb
das
es
jl
sahf
mov
mov
pop
iret
push
sti
insb
fisubrs
inc
sbb
outsb
outsl
push
fistpl
inc
and
pop
adc
test
lret
sbb
xor
shrb
inc
adc
xchg
shll
fdivs
jg
push
popf
lcall
mov
ret
dec
xor
mov
and
imul
in
mov
xchg
leave
mov
loop
mov
push
mov
or
pop
add
inc
mov
jno
leave
nop
into
xchg
cmp
es
or
pop
push
pop
outsb
cmc
or
lcall
cmp
jl
lods
sub
or
jo
add
mov
in
push
jae
ss
int3
mov
push
xor
pop
test
filds
lret
nop
sahf
js
sub
dec
imul
fwait
dec
addr16
leave
imul
aad
daa
cmp
adc
or
mov
test
lods
out
into
sub
test
outsb
xor
dec
js
mov
cmp
dec
shrl
mov
cmp
ret
cmpsb
in
movsb
aas
and
pop
insb
cmp
sub
and
mov
mov
sub
insb
bound
aas
cmp
xchg
mov
int3
mov
push
fdivrp
sbb
push
push
push
push
orb
insb
and
or
dec
mov
fildll
stc
shll
int
sub
xchg
loope
and
cmp
push
lret
cli
inc
inc
mov
mov
adc
loope
add
cmp
sub
lea
insb
dec
and
cmp
repz
les
adc
or
mov
sub
daa
sub
stos
cld
sub
jge
mov
jle
out
inc
imul
jg
adc
stos
xor
pop
add
outsb
and
sti
fidivrs
cmpsl
lock
sub
lahf
add
fcoml
mov
jg
lods
popl
and
cmc
adc
imul
xchg
or
aad
and
push
sbb
fdivl
shll
scas
ret
jmp
data16
mov
mov
xor
or
add
adc
mov
in
pushf
jmp
xor
enter
inc
push
outsb
sbb
or
push
pop
pop
aaa
xor
jmp
pushf
imulb
push
ds
sub
mov
or
mov
and
jp
mov
jbe
sahf
fcmovb
aas
push
cmpsl
xor
fdivrs
lods
rolb
mov
xlat
leave
cmp
xchg
or
dec
sbb
sbb
mov
test
pop
xchg
dec
out
push
xchg
lahf
or
lods
test
xor
sub
fidivs
das
mov
jne
scas
data16
getsec
add
push
mov
jno
or
mov
mov
test
mov
add
movsl
push
cld
fucomi
push
adc
insb
dec
sub
push
adc
mov
in
sti
jne
xchg
inc
stos
es
push
leave
xchg
dec
es
push
sti
cmp
push
adc
and
bnd
les
xor
subl
xchg
call
test
or
cli
test
mov
call
and
mov
aam
xor
add
xlat
or
jl
cli
out
xchg
sbb
jecxz
jae
mov
adc
ds
and
scas
fs
push
mov
cmc
or
cmpsl
fs
stc
fnstsw
pop
fs
mov
cmp
ljmp
mov
faddp
sub
lds
inc
fcoms
and
jl
negl
bound
add
jns
cwtl
push
cmp
xchg
cmp
xlat
and
pusha
lods
push
push
test
sbb
mov
push
stos
hlt
pop
pop
push
in
mov
add
aad
mov
ret
pusha
into
jl
fmul
popa
out
adc
xor
jl
sub
into
mov
iret
cmp
mov
inc
pop
lret
dec
jg
push
mov
push
cmp
arpl
dec
cwtl
retw
sbb
add
jg
cmp
xchg
out
addr16
insl
inc
ds
pusha
fdivrl
xchg
fistpl
push
fwait
xlat
push
and
cmpsb
je
jbe
push
lock
mov
movsb
pop
adc
jbe
and
pop
mov
inc
in
in
pop
jae
mov
in
les
lret
lods
dec
inc
inc
mov
sub
sbb
imul
nop
in
cmpsb
xchg
push
fisubl
call
add
inc
mov
add
cmc
xchg
xchg
jmp
dec
pop
aas
lods
xchg
push
pop
stos
adc
or
dec
insb
jle
dec
push
sub
or
xchg
push
and
scas
dec
xchg
movb
inc
jl
lea
ficoml
in
ds
int
rcrl
mov
ja
popa
nop
call
xchg
or
jnp
outsl
sub
ret
sbb
flds
ja
inc
loop
fmull
fmul
push
push
add
out
out
cmp
aad
and
dec
push
cmp
pushf
mov
push
mov
insb
imul
shlb
dec
adc
mov
mov
sub
dec
icebp
cli
sbb
sub
xor
or
mov
xchg
in
add
dec
inc
mov
lods
arpl
hlt
mov
mov
sbb
push
lcall
dec
pop
dec
aad
and
out
sub
sahf
push
adc
je
nop
into
movlps
mov
lahf
and
push
jg
add
add
or
int3
into
rclb
add
sbb
adc
push
jecxz
inc
scas
stos
popf
call
xor
shlb
cmpsl
movsb
inc
adc
cli
cmpsb
sahf
aaa
sbb
xchg
dec
pushf
pop
mov
scas
inc
rclb
jbe
push
jg
jbe
mov
mov
jae
mov
cmp
ds
jno
push
pusha
pop
shl
mov
pop
xor
mov
negb
daa
dec
xchg
stos
xchg
add
pop
scas
push
cmp
ret
or
or
and
push
imul
lret
aas
jge
filds
ja
xchg
lret
inc
or
aaa
outsl
popf
insb
cmp
inc
jnp
sbb
into
inc
divb
xchg
add
les
fisttps
and
into
fidivs
gs
loop
push
and
adc
fdivrl
jbe
fstps
push
push
xchg
adc
push
out
enter
mov
movd
pop
negl
and
inc
inc
dec
psadbw
add
lock
mov
adc
nop
cmp
dec
and
adc
repnz
out
mov
inc
ss
mov
aas
push
data16
mov
shll
mov
sub
dec
dec
xlat
lahf
cmp
dec
shll
jge
sbb
les
out
je
jl
and
adc
pop
shrb
push
je
jbe
xchg
fcmovnu
scas
push
ds
push
iret
xor
xorl
fbstp
pop
cmpb
add
xor
dec
mov
xchg
mov
push
mov
out
ja
js
inc
popf
jne,pt
sub
add
jge
cli
jb
lret
stos
or
jae
std
dec
and
xchg
lret
clc
cwtl
add
sub
jmp
imul
jb
push
test
xchg
sbbl
call
gs
xchg
test
sub
movsl
jecxz
adc
mov
cmpl
out
out
shll
mov
cmpsl
pop
aas
add
or
xlat
cmpsb
icebp
dec
adc
fidivrl
xor
add
lock
popa
add
out
xchg
outsl
push
jmp
push
out
jmp
mov
mov
mov
iret
adc
sti
fs
repz
sbb
movsl
jmp
cmp
push
dec
dec
push
lret
cmp
pushf
cmp
jmp
popl
jns
loopne
loop
push
or
mov
xor
sub
clc
cmpb
out
sub
cmc
aas
push
and
dec
sarl
call
xor
xor
pop
lock
test
shl
pop
in
sub
adc
xchg
mov
or
push
sub
add
shlb
dec
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
faddl
call
fstpl
bound
pop
or
add
idivb
movsl
faddl
pop
nop
pop
lds
cmp
mulb
push
in
pushf
jb
sbb
jl
jae
mov
mov
test
fdiv
sub
int
scas
hlt
out
cmp
mov
movsl
dec
xor
adc
push
jl
mov
sub
pushf
xor
pusha
fs
fidivrl
sbb
mov
mov
mov
jbe
pop
inc
je
ret
cmp
mov
mov
dec
jmp
mov
fiaddl
out
add
add
aam
aam
push
jmp
xor
jle
aad
adc
sti
mov
jmp
clc
push
gs
add
aas
sub
jp
loopne
rolb
mov
std
out
fbstp
push
imul
jo
mov
or
xor
jne
xor
leave
add
mov
int3
enter
jge
jnp
sub
mov
std
sbb
loope
adc
fists
mov
push
test
cmp
lods
arpl
pop
mov
jecxz
inc
ficomps
scas
fistpl
int
mov
and
hlt
cmp
mov
push
sub
lret
xchg
sbb
cmp
pop
mov
mov
xor
jle
dec
aad
sarl
test
cmp
adc
pop
sbb
outsb
and
adcl
pop
lret
jns
je
je
jns
out
test
iret
mov
call
mov
scas
shrb
add
ret
idivb
dec
pop
jne
lahf
push
icebp
repz
scas
ss
ret
ret
repz
pop
dec
lret
mov
lock
mov
pop
test
cmp
mov
xlat
fbstp
outsl
push
dec
adc
pop
inc
jmp
inc
adc
mov
inc
xchg
sbb
hlt
xchg
dec
pusha
and
add
dec
cld
mov
sahf
mov
and
xchg
pop
pop
inc
ret
daa
in
call
aaa
fwait
jecxz
xchg
mov
jp
outsl
cmp
outsb
fidivl
or
imul
subb
pop
aad
and
scas
lret
mov
mov
xor
dec
in
in
data16
cmp
fwait
sbb
test
adc
mov
inc
jno
mov
shlb
mov
loope
dec
lods
pop
jbe
xlat
push
ret
jecxz
ljmp
lds
xchg
ja
lea
leave
aas
pop
int3
fldenv
lret
imul
mov
out
fidivrs
pop
mov
aaa
and
xchg
imull
aaa
or
in
psubsb
fwait
push
sub
cwtl
jo
dec
out
pop
in
enter
pop
aaa
or
adc
or
les
pop
pop
test
insb
adc
mov
cmc
lret
pop
loop
mov
sti
ds
and
mov
rorl
jp
out
rcrb
adc
insl
stc
arpl
jp
mov
xor
movsb
clc
push
lret
popf
into
out
shll
adc
jecxz
scas
stos
dec
movb
xlat
add
pusha
and
stos
out
and
sahf
cld
dec
faddl
test
pop
adc
inc
dec
movsb
in
pop
add
stos
decl
rorl
lcall
das
sbb
in
lock
xchg
std
stc
lret
ds
adc
repnz
cltd
jg
loopne
sub
int3
jbe
icebp
xor
loope
cmp
rcll
inc
mov
mov
pop
fdivrs
loop
cmp
dec
cltd
adc
xchg
sbb
cs
dec
mov
xchg
mov
cmpsl
add
popf
aaa
insl
push
pop
sub
loopne
sub
cmp
mov
enter
movsl
cmc
out
xor
sub
ja
mov
fcmovb
loopne
and
cmp
inc
out
or
mov
mov
fsts
push
test
mov
orl
cmpsb
aas
cmp
dec
movsl
pop
mov
dec
xor
cltd
xchg
inc
stos
cmp
std
push
xchg
sub
xchg
jge
in
lock
and
loope
imul
sti
loopne
test
bound
adc
cmc
js
fnstcw
lret
lcall
repz
enter
stos
cmp
mov
add
int3
loopne
adc
ret
pop
mov
jmp
push
sbb
or
insb
rcr
cs
push
adc
add
aas
sahf
dec
push
cmp
cmp
je
add
inc
scas
xchg
or
lahf
adc
xlat
pop
add
fnsave
loopne
push
cmp
cmp
jle
loope
test
or
lahf
push
dec
mov
dec
jb
mov
or
pop
dec
shr
dec
mov
orl
xchg
xor
xor
sbb
sub
jp
pushf
pop
pop
int3
pop
inc
idivb
add
iret
roll
or
xchg
cmpsb
adc
or
shlb
loopne
dec
inc
pushl
mov
inc
rcl
test
pop
in
push
cmp
cltd
push
mov
jnp
sbb
inc
movsl
xchg
inc
pop
pop
ss
or
pusha
imul
mov
fiaddl
cmp
cmp
jge
cld
mulb
int
call
sub
out
js
adc
inc
aas
adc
in
or
and
out
int3
mov
iret
sub
mov
leave
sub
cmpsb
jecxz
pop
and
mov
mov
stos
mov
out
test
push
call
xchg
or
mov
cmpsl
xor
mov
push
inc
xor
or
das
add
push
cs
mov
cwtl
or
cmc
inc
jg
inc
mov
mov
and
push
mov
pusha
les
test
cmpsl
shlb
xchg
push
xor
adc
mov
notl
push
daa
dec
fsubrl
imul
das
pop
jo
push
inc
inc
gs
pop
inc
jp
shll
notb
mov
mov
hlt
call
div
push
test
fs
sub
xor
pop
or
gs
arpl
xor
push
std
mov
and
push
mov
pop
sbb
je
jae
cwtl
sub
gs
push
mov
ja
cwtl
mov
sbb
and
lahf
mov
leave
loop
xor
daa
mov
cmp
pop
mov
mov
sub
cwtl
hlt
dec
xchg
testl
or
sub
mov
push
pop
lea
lea
fdivrs
lods
jle
es
or
add
ficompl
and
pop
std
insl
lds
in
push
popa
and
add
mov
fs
push
stc
or
ja
iret
sub
sub
and
jmp
test
cmp
mov
push
jecxz
or
test
cmp
sahf
leave
inc
push
sub
xchg
xchg
and
mov
add
out
stc
inc
andb
mov
imul
xor
and
shll
mov
pop
roll
inc
fadds
pop
mov
insb
out
adcb
pop
test
or
icebp
push
push
cs
mov
popf
movsb
mov
push
push
and
push
rorl
loopne
dec
xlat
cmp
lods
push
in
push
icebp
dec
arpl
mov
in
cmp
pop
mov
jne
movsl
fldcw
inc
mov
clc
lcall
roll
jo
xor
fs
cmp
add
out
xlat
jl
mov
cmpsb
scas
mov
outsb
push
rcll
pop
add
pop
aaa
and
mov
loope
sbb
and
push
lcall
and
mov
add
in
mov
stos
dec
mov
cmp
adc
jno
cli
pushf
dec
xchg
add
add
fildl
push
mov
rcr
mov
mov
pop
cli
leave
scas
test
dec
lods
mov
or
push
cmpsb
movsl
cmp
test
out
adc
xchg
mov
mov
jae
xchg
popa
movsb
inc
push
mov
jo
mov
enter
aam
dec
leave
int
sahf
inc
repnz
scas
dec
mov
inc
ljmp
mov
push
or
xchg
hlt
das
lcall
xchg
fists
xchg
scas
sub
push
xor
lret
scas
xchg
jo
cmp
pushf
test
sbb
push
adc
jl
fsubrp
mov
pusha
lcall
fists
mov
cld
and
add
adc
ret
ljmp
cld
loop
jno
or
xchg
sub
out
adc
dec
incb
jge
mov
sub
sbbb
inc
cmp
dec
adc
leave
movb
data16
gs
pop
sbb
mov
enter
call
dec
ret
cmpb
xor
push
mov
jbe
ret
xchg
fsubs
pop
or
push
dec
pop
push
add
or
mov
jns
adc
adcb
inc
popf
adc
not
clc
jne
sbb
adc
cmp
fldcw
jae
rcll
or
pop
push
cmp
mov
shll
movsl
xor
test
cmp
imul
or
push
mov
mov
stc
test
call
dec
mov
xorb
je
fs
lods
insb
and
cmp
push
es
cmp
sbb
xor
xorb
jmp
xor
ss
mov
mov
or
or
dec
dec
repnz
popf
inc
mov
sub
mov
sahf
cwtl
fcomip
push
ja
test
fwait
add
dec
repz
xchg
mov
ja
mov
lret
xor
jnp
adc
jbe
add
mov
lret
mov
or
sbb
pop
lods
mov
inc
jbe
out
dec
leave
adc
xchg
jo
mov
mov
dec
mov
push
mov
lods
movl
or
dec
int3
lea
scas
jg
aas
lret
sbb
jecxz
addl
mov
lods
xchg
incb
xchg
adc
jo
mov
lock
mov
icebp
popf
repnz
mov
ljmp
jae
in
pop
lods
arpl
aad
stc
or
aad
fbld
adc
imul
push
xor
lods
bnd
inc
fs
xchg
or
rclb
pop
movsl
jecxz
das
mov
inc
mov
jge
lea
cmp
push
adc
xchg
pusha
cld
test
jge
ficoml
mov
mov
inc
push
test
arpl
mov
stos
lcall
xchg
out
sbb
pusha
or
mov
jne
inc
dec
fsubl
sub
push
jbe
js
hlt
fdivs
and
inc
je
jp
inc
sbb
subb
mov
adc
pop
lret
jle
fcomp
adc
bound
cmpsb
inc
mov
call
mov
neg
push
and
and
dec
loop
inc
sub
inc
outsl
mov
icebp
mov
inc
push
in
sub
adc
sbb
pop
jecxz
lcall
pop
stos
test
in
lds
dec
inc
pop
pop
cli
data16
out
or
movq
cvtps2pi
dec
push
in
xchg
insb
inc
pop
sub
jne
push
test
outsl
add
divb
lock
mov
aas
shll
and
sbb
jns
dec
xchg
mov
out
xlat
fldl
dec
adc
lret
rolb
adc
mov
push
inc
sub
stos
lahf
mov
jp
pop
aas
bound
cli
fs
and
mov
adc
sbb
cwtl
or
cld
add
xchg
xor
call
jno
stos
xchg
sbb
push
add
xchg
jmp
sub
pop
sahf
mov
sub
loopne
cmp
jge
add
mov
popf
pop
jo
aad
out
lock
in
ja
rcr
in
cmp
leave
pop
xchg
pusha
push
fwait
lcall
hlt
cli
push
jl
xchg
cmp
push
repz
xor
pop
pop
pop
inc
out
rolb
mov
int
mov
sub
jge
and
lds
jb
dec
jb
add
cltd
xchg
adc
add
popa
mov
in
jecxz
mov
and
pop
xlat
ds
div
popaw
sbb
bound
push
pop
test
lock
mov
nop
bound
scas
sub
push
out
scas
ljmp
gs
cwtl
add
mov
out
sbb
icebp
out
arpl
pop
sub
xor
aas
push
pop
mov
lods
and
rcll
add
insb
xchg
pop
fstpl
mov
or
pop
hlt
push
sbb
push
pop
add
sub
je
test
das
mov
xchg
cmp
jmp
loope
xorl
fdivs
push
notb
stos
loop
pop
xchg
mov
out
mov
mov
cmp
dec
push
xchg
mov
mov
mov
int
xor
sbb
test
int3
cmpl
push
adc
adc
mov
shlb
inc
cmp
or
sahf
out
mov
pusha
mov
mov
jle
filds
mov
rorl
call
leave
jo
xor
push
mov
divl
hlt
imul
out
push
add
test
dec
add
dec
inc
sarl
jns
ja
mov
jbe
or
jne
mov
add
inc
adc
pop
jecxz
push
outsl
daa
xchg
outsl
push
repnz
flds
shlb
test
test
popf
outsb
push
mov
loopne
add
mov
repz
test
out
pop
out
scas
jbe
out
or
fisubl
push
cmp
sub
dec
nop
jae
subb
lahf
imull
adc
or
sub
push
faddl
push
pop
cmpsb
sub
testl
addr16
movsb
sbb
mov
in
sbb
rcll
or
ffreep
xor
sub
sub
inc
push
xor
push
ficompl
mov
lahf
inc
clc
push
ret
mov
in
sub
in
insb
scas
lds
pusha
lock
mov
or
test
lret
push
insl
cwtl
jns
mov
lock
loopne
mov
push
cmp
out
pop
xchg
dec
mull
xchg
inc
xchg
ficoml
sub
xor
pop
or
mov
addb
adc
adc
mov
imul
pop
inc
inc
and
mov
rcll
fstpt
sub
cmpsl
iret
xor
ja
jns
ss
stc
mov
stc
rclb
sbb
sub
cltd
fprem
rolb
adc
xchg
push
pop
cwtl
mov
jno
decl
xchg
adc
bound
xlat
push
push
xor
lock
xor
aaa
fwait
sub
or
out
clc
adc
pop
cld
push
mov
pop
cmpsb
clc
lea
call
mov
xor
push
shrb
mov
sub
in
jnp
ds
pushf
and
sbb
adc
jns
sti
mov
aad
aad
mov
mov
add
mov
or
mov
or
lret
cli
xchg
test
mov
adc
das
jne
arpl
and
ret
sbb
adc
inc
inc
pop
jg
inc
repnz
fcompl
cltd
xlat
cwtl
fldcw
outsl
pop
fsubr
adc
mov
mov
and
pop
lods
push
arpl
pop
pop
out
lret
push
adc
fnstenv
mov
adc
cmc
fmuls
mov
xor
xchg
out
dec
mov
dec
dec
imul
push
pop
int3
push
add
and
cwtl
pop
lods
pop
imul
daa
js
sub
repz
imul
scas
int
in
dec
test
es
popf
outsl
push
cmp
sarb
cmp
mov
sbb
mov
xlat
xchg
and
xlat
xchg
out
and
push
sti
aam
arpl
dec
jg
fwait
aam
in
cs
movsb
out
cmp
lret
pop
mov
mulb
hlt
hlt
ljmp
scas
fmul
lods
and
fnstcw
pop
jmp
movb
pop
sub
lahf
popf
sbb
cmp
loopne
stos
ss
jns
aaa
push
insb
mov
sub
jg
mov
addr16
shl
add
mov
lea
andb
popa
pop
sbb
cmpl
outsb
push
jmp
test
jp
and
test
mov
ret
popf
iret
pop
nop
push
leave
out
sahf
or
mov
sub
sub
ds
andl
jnp
dec
andl
aaa
in
or
sahf
add
mov
push
stc
ret
lods
in
inc
jecxz
leave
pop
dec
xor
out
rcll
sub
insb
and
pop
lods
push
pop
rcrb
ret
testl
mov
enter
add
mov
test
aam
lods
add
adc
jnp
cmp
pop
lock
sub
ret
stos
insb
arpl
mov
pop
imul
inc
scas
nop
leave
js
aas
lahf
stos
push
data16
loopne
push
mov
ja
hlt
cld
push
xchg
aas
cltd
sbbb
sbb
xor
inc
rcll
xchg
mov
mov
xor
shl
jg
mov
je
jne
cmp
sub
add
cmp
ret
pop
jmp
jmp
ja
shrl
xchg
ficompl
sbbb
xchg
popa
cmp
jns
das
insb
mov
mov
fsubrp
fdivl
cmpsl
inc
mov
inc
jnp
insb
test
jle
adc
ljmp
dec
sub
and
ds
cli
cmp
xchg
jne
out
pop
xor
enter
lds
push
mov
decl
mov
fistl
fwait
cmp
add
sbb
jle
jae
sbb
dec
cld
pop
pop
cwtl
ss
push
push
shl
ja
adc
or
filds
iret
xorl
aaa
push
mov
icebp
cmp
dec
jp
fwait
repnz
xor
mov
mov
sbb
dec
fsubl
mov
pop
mov
in
mov
and
sub
mov
sbb
data16
imul
pop
les
cld
pushf
dec
sahf
jo
dec
and
fcompl
aaa
sti
push
jg
stc
sbb
lahf
lcall
mov
in
add
cli
insb
jle
jmp
xor
mov
out
addr16
mov
outsl
cmp
xor
and
ss
movsl
adc
mov
mov
mov
cmp
arpl
jbe
adc
shl
pop
test
pop
pop
xor
mov
bound
ljmp
aam
outsb
cmc
sbb
jmp
mov
and
mov
aad
int3
pop
lea
pop
outsb
lods
call
adc
lea
jp
jno
inc
addl
sub
in
mov
int
push
xchg
jge
daa
mov
add
adc
push
daa
xor
loopne
and
stos
xchg
insl
out
enter
pop
int3
and
add
sbb
aam
les
test
jle
les
mov
and
mov
jge
mov
ficoml
popf
adc
or
inc
lods
mov
insl
insl
push
lret
lret
lahf
out
sub
push
jo
leave
pop
sub
mov
jp
shlb
subb
daa
clc
mov
es
xchg
les
loope
sar
sub
sar
data16
inc
jmp
adc
mov
std
int3
sbb
push
mov
clc
pushl
xor
cmpsl
lock
lds
call
fldcw
pop
push
ror
rcrl
mov
adc
cs
cltd
scas
xlat
test
stos
and
sar
idivb
dec
sub
jle
mov
and
mov
shlb
in
in
ret
pop
cld
and
iret
xchg
sub
fcoms
inc
adc
xchg
xor
mov
mov
lds
push
cltd
ret
bound
cwtl
jle
addl
gs
ljmp
mov
scas
ds
adc
movsb
lcall
xor
add
or
ljmp
xchg
push
aad
test
mov
and
xchg
in
clc
sub
in
js
push
sub
stc
imul
fcomip
push
iret
iret
ss
icebp
pop
lea
lods
movsb
into
dec
and
xor
or
js
insl
je
adc
das
cmpsl
push
prefetcht0
mov
xchg
and
movsl
adc
aas
mov
imul
dec
xchg
or
sub
add
jnp
lahf
pop
sar
xor
cmp
jnp
add
sub
cwtl
mov
push
adcl
cmp
or
icebp
or
lcall
mov
mov
lods
xchg
dec
aam
xor
std
cmp
div
dec
push
loopne
and
xchg
push
sub
pop
mov
dec
cld
cmp
outsb
xchg
mov
dec
xor
mov
jle
inc
sub
and
outsl
aad
js
fnstsw
fildl
mov
pop
sahf
bound
ljmp
call
push
out
pop
xlat
addb
add
dec
add
test
mov
movsl
xchg
aad
loope
adc
adc
mov
test
or
and
pop
fsts
sub
push
lahf
les
jo
dec
push
or
sbb
push
cld
lock
shl
jge
scas
loopne
sbb
xlat
cmp
inc
nop
orb
lcall
test
mov
cmp
mov
dec
mov
cs
mov
or
mov
faddp
sub
push
call
inc
pop
or
add
popf
xchg
sbb
sbb
mov
xlat
ret
mov
pop
rcrb
mov
leave
cmp
push
cmpsb
std
popa
inc
seta
xor
jo
inc
adc
ret
cwtl
stos
jnp
xchg
out
mov
movsl
lea
xor
xchg
insl
aaa
mov
je
inc
cmpsb
out
dec
jge
xchg
into
push
add
sbb
mov
or
js
jbe
pop
add
or
test
jne
sbb
enter
call
dec
xchg
pushfw
jl
sti
icebp
jbe
lods
aad
and
fcmovu
pop
out
or
fs
mov
jge
and
inc
repnz
icebp
mov
mov
arpl
mov
nop
add
mov
mov
hlt
dec
xor
loope
inc
insl
arpl
std
lods
jno
pop
loope
fimull
lahf
cmp
pop
je
fadd
outsb
jns
cmpsl
lahf
mov
mov
pop
ficoml
ja
mov
flds
inc
sbb
xchg
jg
push
mov
push
add
adc
jae
push
push
push
adc
push
loopne
jae
aad
es
aas
inc
cmpsl
adc
sub
and
xor
mov
xlat
sub
stos
xlat
sbb
std
arpl
jle
psubusb
pop
addr16
cmovns
stc
int
lea
lods
push
scas
fs
stos
jg
xchg
sbb
je
fwait
mov
int3
dec
sub
xchg
sbb
cmp
dec
push
or
ds
cmc
push
dec
add
cmp
mov
insl
add
sub
stc
mov
std
pop
inc
dec
push
mov
xchg
adc
jno
jae
or
shlb
into
mov
flds
insb
iret
dec
das
pop
sub
xorb
clc
xor
fucomip
mov
cmp
hlt
sbb
push
mov
call
stos
lea
sbb
roll
sub
fldt
addr16
cltd
cli
sbb
mov
mov
mov
cwtl
mov
adc
xchg
mov
jg
in
dec
jnp
pop
inc
adc
clc
insb
or
xchg
sub
vscatterdpd
repnz
mov
xchg
cmp
stc
mov
xor
not
daa
mov
mov
cmc
xchg
ss
adc
ljmp
lods
mov
cmp
lock
inc
call
fists
xlat
outsl
cwtl
sbb
neg
fwait
xor
rorl
mov
lcall
xor
adc
aas
bound
jle
or
loope
pushf
cmc
dec
sahf
lcall
jo
jge
mul
leave
std
into
xchg
stos
xchg
pop
sub
jbe
out
movsb
bound
fnstenv
mov
loope
bound
sahf
xchg
xchg
mov
mov
orl
xor
pop
es
outsl
fidivs
or
addb
xchg
sub
dec
jae
out
pop
mov
orl
comiss
and
bound
aam
or
xchg
mov
xor
in
dec
jge
aad
fs
xorl
mov
leave
stos
out
shlb
or
js
push
divl
mov
setle
std
addr16
push
adc
jp
lods
and
out
insl
fildl
cwtl
inc
mov
int3
cltd
sub
inc
popa
mov
sbb
push
pop
dec
stos
xor
jmp
inc
adc
out
pusha
cmp
sub
stos
pop
cli
push
or
jmp
sarl
jne
loop
fcmovne
fs
out
pusha
cmp
in
ja
xchg
pop
in
jmp
imul
and
jno
pop
jo
pop
xchg
adc
sahf
jb
mov
bnd
bound
cwtl
pop
and
dec
inc
jge
inc
mov
and
pop
mov
js
mov
aaa
icebp
les
add
and
rol
pop
scas
add
lret
cmpsl
xor
lcall
adc
mov
cmp
fdecstp
mov
cld
mov
xchg
jns
and
sub
addr16
cmp
in
movsl
xor
and
lret
stos
std
cmp
xchg
inc
aaa
in
dec
fdivrs
cmp
pusha
mov
cmp
mov
jne
cmc
addr16
adc
stos
xchg
jmp
or
mov
add
mov
sti
add
out
repnz
fsubl
and
sahf
shrb
loop
imul
jo
xchg
mov
mov
cmp
ja
jp
fimull
outsl
mov
in
sti
pop
int
fwait
pop
adc
aam
hlt
or
mov
aaa
in
dec
pop
aam
jl
jo
mov
imul
xchg
icebp
stos
and
adc
push
xchg
or
test
xor
sbb
and
icebp
or
out
leave
xchg
leave
cmp
outsb
push
iret
lods
push
adc
hlt
mov
mov
mov
cmc
mov
cmp
jb
push
sub
adc
sub
hlt
adc
jecxz
jl
gs
inc
jg
insb
inc
in
fistps
inc
pusha
je
sbb
jle
scas
les
out
ror
mov
inc
scas
das
aam
mov
sbb
pushf
mov
push
xchg
insl
pop
fwait
repnz
xchg
stos
loopne
sub
mov
mov
xorb
mov
call
xchg
pop
das
scas
stc
mov
mov
jge
mov
push
movsb
ljmpw
xor
stos
push
push
jmp
aaa
mov
sbb
arpl
or
dec
cmp
bound
cltd
dec
xlat
cld
inc
dec
fsts
push
inc
data16
and
lahf
dec
sarb
das
rclb
out
adc
test
push
mov
adc
dec
dec
xchg
fs
sahf
fsubrs
xchg
xor
fsubrs
stc
cwtl
xor
data16
cmp
movl
sub
adc
outsl
cmp
mov
ljmp
notl
adc
pushf
mov
fwait
jnp
jmp
jo
addr16
xchg
push
repnz
inc
dec
test
and
lea
sub
nop
jge
popa
jae
push
hlt
xchg
xchg
into
cli
adc
fsubr
lea
mov
or
push
nop
or
pop
push
data16
cmc
inc
pop
cmc
adc
xchg
xchg
stos
mov
fdivrs
add
popf
jne
lea
sub
dec
pop
data16
callw
fcoms
dec
xchg
inc
adc
cmc
pop
sub
stc
loopne
push
js
ljmp
shl
ret
cmpsl
push
cld
dec
je
push
cwtl
out
xor
cmp
pushf
mov
aaa
stos
lods
pop
add
jge
sbb
or
fdiv
inc
mov
test
jnp
ss
stc
lahf
aas
inc
and
repnz
dec
icebp
xor
xchg
push
enter
les
pusha
into
adc
sbb
or
mov
dec
mov
mov
cwtl
imul
int3
or
fidivrl
jae
imul
dec
pop
scas
sub
push
cmp
lock
mov
lds
or
jno
repz
adc
lea
push
test
push
adcl
xchg
cmp
stc
es
out
sahf
xchg
mov
lret
xchg
cmp
dec
ret
lret
je
cltd
mov
adc
push
push
mov
inc
mov
int
in
mov
adc
js
enter
xchg
inc
sub
mov
cmp
mov
push
push
nop
xor
adc
and
hlt
push
sahf
fiadds
popa
or
jecxz
adc
xlat
shll
fwait
add
pop
jno
ficomps
cltd
xor
ss
mov
lret
fdivl
std
xchg
in
cmp
ja
bound
bound
adc
iret
sub
repnz
outsl
sub
dec
cmp
test
mov
lods
out
mov
divb
pop
sbb
jne,pn
xorl
scas
push
movsl
mov
push
sahf
lret
sbb
in
sub
nop
shl
fidivs
xchg
xchg
xchg
imul
xor
pop
int3
add
sti
scas
and
out
mov
mov
std
in
out
cmp
stos
fsubs
cmp
fildl
into
add
sbb
jmp
push
xchg
jno
scas
adc
jmp
jb
shl
push
pop
pop
inc
add
stc
adc
add
les
scas
adc
push
ss
push
insb
xor
dec
jmp
mov
jp
inc
cli
loope
push
clc
rcrl
std
std
negb
stos
fsubr
aad
push
pop
outsl
dec
lret
fsts
fisubrs
ss
add
xlat
mov
cmp
fs
jl
rcrb
add
lods
lret
pop
ret
les
jl
jle
fwait
mov
add
jp
xor
mov
inc
aas
push
xor
mov
test
movsl
mov
pop
push
dec
xchg
shlb
shll
nop
dec
fmuls
lcall
fimuls
xor
loop
sti
adc
in
cwtl
fcmovbe
andb
aad
jg
inc
jne
scas
addr16
mov
fcompl
inc
outsb
leave
xor
dec
mov
inc
add
pop
inc
adc
mov
mov
movsb
sbb
sbb
push
loopne
mov
cmpsl
shrl
push
dec
adc
out
sbb
cmp
mov
add
and
aam
movsl
iret
pop
adc
and
in
jo
orb
push
lahf
aas
xor
push
fidivs
mov
sub
movb
mov
fldt
sbb
shr
repz
sub
test
push
sbb
mov
xchg
push
pusha
dec
daa
sbb
inc
ret
outsl
dec
or
push
adc
pusha
lods
jno
test
cmp
dec
test
inc
or
insl
sbb
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
aam
lcall
pop
bound
mov
testb
mov
icebp
mov
icebp
cmp
cmp
out
fsubl
data16
scas
rcrb
sub
popa
dec
xchg
loopne
cmpsl
inc
ret
das
xlat
push
push
xor
stc
cmp
xor
repz
hlt
cltd
daa
pop
repnz
push
sbb
iret
stos
pushf
or
sub
leave
lds
dec
sub
push
mov
idivb
dec
adc
lahf
jp
xchg
outsb
xchg
sbbl
je
and
ja
inc
add
xor
mov
pusha
xor
cld
pop
je
cmp
mov
inc
loope
testl
popf
adc
rcrl
jb
push
daa
push
cmpsl
lahf
arpl
sbb
or
cmc
mov
data16
xor
or
sub
jb
mov
loopne
adcl
and
adc
adc
shlb
daa
pop
cmp
mov
imull
leave
add
iret
dec
lock
lods
aam
pop
push
mov
add
test
or
xchg
fwait
mov
adcb
ret
daa
adc
sbb
fldt
repnz
xor
ficoml
pushl
int
cmp
mov
mov
adc
aaa
adc
pop
inc
cmpsb
repnz
std
jecxz
xchg
daa
inc
sbb
cli
push
cmovae
lods
loop
sbb
add
rclb
ja
xor
je
mov
mov
add
stos
cltd
pusha
xchg
xor
dec
xlat
xorl
sbb
ret
xlat
xchg
pop
stos
pusha
push
int3
in
mov
mov
push
shll
inc
and
cmp
rclb
sub
rolb
mov
xor
xor
mov
pop
pop
mov
out
out
jns
push
orl
scas
mov
push
pop
clc
jo
icebp
outsb
mov
fwait
or
lret
push
push
jmp
out
and
sbb
pop
fwait
mov
aad
xor
inc
and
stos
mov
push
fwait
cmpsl
mov
sbb
bound
jae
mov
mov
adc
xchg
test
sub
push
leave
jmp
les
xor
in
xchg
sti
sbb
adc
mov
shll
pusha
test
jne
sbb
cmp
pop
fdivs
add
out
out
hlt
scas
push
xchg
and
scas
in
push
das
mov
fistpl
jp
jmp
ss
gs
push
pop
inc
and
pop
or
xchg
xchg
add
dec
lahf
push
rorl
or
jbe
ja
xor
outsb
jp
jp
mov
call
xchg
movsl
push
dec
ret
mov
cmp
cmpsl
call
cmp
shlb
push
mov
mov
jge
lret
call
pusha
es
out
lods
xor
adc
test
cmp
jmp
mov
mov
jbe
adc
lods
repnz
cmp
push
mov
adc
jmp
add
addr16
sub
push
xor
adc
idivb
mov
xor
pop
call
dec
test
mov
push
dec
mov
in
sub
nop
sub
inc
pop
out
test
cmp
dec
iret
pop
mov
mov
mov
stos
or
add
sbb
pop
and
sub
xlat
jg
addb
sub
cmpl
dec
lods
jnp
and
pop
loop
jns
sbb
cs
repz
pop
subb
pop
dec
insb
mull
push
xchg
loop
das
je
fiaddl
jnp
push
xchg
sbb
loopne
test
int3
lods
push
imul
sbb
mov
mov
repz
sarl
test
and
fldcw
movsl
adc
and
sbb
dec
mov
jae
sti
les
add
push
add
sbb
scas
fldl
dec
std
add
call
xchg
cmp
dec
aas
fdivs
mov
in
addb
fs
jno
leave
sbbl
lahf
cmp
stos
aaa
push
push
push
jl
aaa
pusha
cmp
inc
adc
mov
lcall
and
cmp
push
cmpsb
lret
xor
inc
mov
and
push
bound
scas
mov
pinsrw
lods
mov
mov
pop
push
adc
stos
pop
outsl
fimuls
add
pop
mov
les
fistpll
es
xor
jns
add
aam
dec
mov
popa
xor
arpl
loop
inc
add
addl
lahf
sbb
insb
push
popf
jo
sub
dec
push
push
aas
lds
sbb
loop
adc
jge
xchg
dec
mov
es
shrl
dec
lcall
adc
jmp
into
popa
jae
sub
mov
jge
out
mov
test
dec
push
adc
inc
mov
jne
stos
mov
orl
xchg
or
test
fimull
sbb
das
data16
mov
movsb
rorb
rcrb
loopne
sub
jmp
popf
mov
add
jae
loopne
test
ds
cmp
push
dec
or
cmp
rclb
or
xor
sub
cmp
je
sub
in
loopne
push
push
sahf
cmp
aam
sbb
push
loopne
or
jmp
jle
cmp
icebp
mov
jg
push
pop
xorl
mov
jmp
into
jecxz
les
push
or
pop
icebp
sub
xchg
jb
iret
xchg
adc
repz
lock
and
jb
push
popa
das
inc
jp
bound
not
popa
pop
xor
inc
cld
xor
repz
gs
xchg
gs
fdiv
in
leave
and
loope
cli
adc
sbb
popa
push
int3
stos
push
xchg
sbb
mov
mov
stc
inc
leave
sub
lcall
outsb
adc
lea
fcmovb
insl
pushl
sbb
mov
push
repz
push
mov
loopne
cmp
in
mov
mov
jmp
push
cwtl
cmp
sub
sbb
cmp
pop
mov
lcall
mov
push
in
lret
sbb
add
ss
stc
ss
outsl
cmp
lret
gs
sahf
push
dec
mov
or
jno
mov
jbe
enter
or
push
call
lock
cmp
lods
cmp
push
xchg
stos
mov
xor
popf
push
or
sti
lock
hlt
andb
repz
push
pop
mov
outsl
xor
mov
mov
inc
aas
push
pop
jbe
sub
cli
out
cmp
xchg
aas
subl
xchg
or
mov
popa
in
xchg
in
movsl
xlat
loop
pop
mov
xor
insl
cmp
mov
inc
pop
dec
testl
scas
and
leave
mov
imul
push
movsl
jns
clc
js
push
lahf
pop
cmc
std
stos
fildl
mov
mov
or
jbe
int
data16
cs
out
lret
pop
scas
cld
mov
mov
decl
add
pusha
pop
xchg
mov
push
cmp
sub
cmc
xchg
imul
dec
out
sti
imul
and
call
push
cmc
loope
cwtl
in
aaa
jns
daa
push
insl
lret
add
mov
jge
cmc
in
lahf
outsb
out
ret
std
push
push
out
out
sbb
xor
xchg
push
icebp
pushf
idivl
cwtl
insb
jge
mov
sbb
je
push
sub
mov
mov
xchg
repnz
xchg
clc
and
mulb
cmp
es
aaa
adc
mov
movsl
add
jne
cmpsl
xor
adc
or
push
or
sub
pusha
xor
dec
push
ret
pop
xchg
inc
sbb
mov
aad
and
pop
jle
sahf
push
xchg
test
pushf
adc
notb
std
cmpsl
mov
loopne
mov
aas
xor
cmp
movsl
pusha
shrb
test
jne
lea
push
dec
mov
dec
jecxz
and
lds
xchg
xor
jmp
ss
dec
jb
xchg
bound
scas
lods
jecxz
out
sub
jbe
xor
add
mov
lock
jl
mov
pop
jle
cli
jb
mov
lret
adcb
mov
subb
incb
nop
jo
push
and
hlt
sbb
es
sbb
stos
and
mov
leave
rolb
mov
jle
jge
jmp
push
scas
mov
out
xor
jle
fldl
pusha
pop
xor
fstl
fs
in
sub
mov
add
shl
mov
bound
mov
or
mov
sbb
inc
insl
jl
mov
jae
scas
pop
cmp
cmc
add
adc
or
sub
jns
cmp
and
jne
push
jge
add
lock
push
mov
pavgw
loop
lret
clc
hlt
adc
adc
push
sbb
in
inc
push
pop
fs
imul
pushf
insb
dec
sub
mov
push
aam
inc
xchg
in
dec
mov
sbb
addr16
or
les
push
pusha
lea
push
out
sbb
push
insl
add
leave
sarb
xor
and
test
stos
xchg
mov
cwtl
mov
sub
stos
cld
cmp
jnp
and
pusha
xchg
xlat
mov
mov
fnstcw
push
mov
cmp
imull
dec
mov
cwtl
mov
jns
lods
inc
sbb
xchg
mov
repnz
mov
loope
push
inc
lret
mov
mov
inc
inc
sbb
add
fptan
orb
cmp
mov
aas
lret
dec
je
mov
sbb
dec
jmp
cmpb
dec
push
add
movsl
jp
mov
ja
mov
add
sbb
push
xchg
jb
out
xchg
test
fs
pop
add
dec
add
xchg
adc
inc
into
jp
mov
movsb
or
das
mov
mov
mov
in
ret
or
jbe
xchg
in
xor
sbb
clc
pop
dec
out
jmp
push
aam
cwtl
loopne
hlt
xchg
adc
mov
int
das
movsb
aad
mov
mov
sti
lcall
mov
mov
jo
mov
imul
in
inc
shll
int
insl
cmp
arpl
hlt
push
aaa
movsl
test
cli
mov
popa
enter
add
or
sub
inc
dec
fstp
mov
sub
and
das
mov
stos
inc
cli
fwait
lods
adc
pop
jnp
xor
xor
mov
fsubrl
push
enter
faddp
xchg
mov
xlat
jnp
inc
lea
xchg
bound
fbld
das
xchg
xor
pop
mov
rol
es
mov
lods
cmp
push
scas
and
nop
mov
jb
or
sub
or
insl
and
pop
push
inc
loope
js
inc
adc
dec
add
cli
dec
ret
rclb
dec
aam
inc
imul
cli
xor
or
ja
nop
loopne
les
ficoms
rorl
test
icebp
mov
jo
push
fs
add
sti
stos
add
loopne
out
and
pop
lea
and
add
mov
pop
or
cltd
test
pop
jnp
inc
xchg
icebp
stc
sbb
lahf
adcl
pcmpgtw
or
iret
rcl
mov
addb
ds
add
mov
inc
jne
inc
repnz
cs
add
daa
and
iret
sbb
aaa
scas
jbe
or
jno
dec
repnz
cmp
mov
cmpsl
jle
jmp
shlb
adc
rcll
ret
mov
add
push
sbb
movsl
jo
add
jae
mov
adc
push
push
inc
xor
ss
jno
mov
ljmp
out
pop
xlat
sbb
test
mov
fildll
andl
inc
popa
and
xchg
mov
or
cli
or
mov
popf
es
fwait
cltd
gs
fnstenv
push
ficomps
outsl
out
test
outsb
and
mulb
imul
stos
mov
adc
lods
mov
add
mov
xchg
mov
sbb
repz
inc
xor
jecxz
daa
scas
inc
pop
jno
mov
nop
shl
into
int
xlat
out
fnstenv
mov
in
lcall
xchg
mov
inc
outsb
fadd
pop
pop
cltd
jg
jbe
jo
les
cmp
lock
dec
fistpl
jl
xlat
pop
add
addr16
leave
ss
fwait
push
outsb
mov
pop
ret
or
and
enter
mov
mov
ljmp
mull
in
add
imul
xor
rsqrtps
lock
jae
adc
sahf
cltd
imull
mov
enter
out
xor
dec
push
push
stc
pop
cmp
stos
stos
popf
std
dec
jne
ja
dec
or
loop
push
aam
or
and
jo
pop
xor
ret
test
adc
jne
bound
and
out
xchg
sbbb
cld
ret
push
lock
xor
push
add
mulb
mov
cmp
or
lds
outsl
cltd
leave
xchg
adc
pop
push
iret
mov
aaa
pop
fadds
cmpsb
mov
pop
inc
ljmp
imul
mov
xchg
sbb
lret
lds
rcll
sbb
push
rorl
pop
and
lds
js
push
popl
push
fildl
imul
sbb
pop
cmp
mov
sub
xor
mov
aas
mov
and
and
xor
add
daa
orb
sti
imul
and
sbb
xchg
inc
popl
xor
notb
jae
sub
sub
popa
test
sti
mov
pop
mov
push
jbe
add
pusha
xor
or
xchg
xor
addr16
pop
fidivl
adc
idivl
xchg
and
inc
gs
cmc
stos
mov
xchg
add
add
cld
add
stos
or
jg
mov
test
xchg
jne
in
sbb
cmp
loopne
push
cmp
inc
inc
mov
out
push
ficompl
add
insl
popa
out
add
fiadds
arpl
mov
cltd
pusha
inc
in
les
fdivrs
in
lock
adc
cmp
aad
lret
xor
jne
fcomps
inc
fstps
fwait
pop
add
aaa
push
lods
inc
mov
loope
mov
pop
inc
bound
fbld
cmp
test
push
fnstcw
add
dec
in
imul
inc
mov
jp
mov
cmp
or
cmp
popa
inc
dec
mov
cmc
repz
pushf
lahf
pop
pop
or
cli
jnp
loope
xor
rorl
and
xor
lahf
cli
push
fistpl
inc
add
xor
call
ljmp
inc
js
cmp
movsl
sub
test
pop
xchg
cltd
ja
fdecstp
dec
and
bound
xchg
lcall
jge
out
or
add
in
scas
out
pop
push
pop
sbb
jns
pushf
mov
xorb
jno
mov
cld
xchg
inc
mov
sbb
xor
mov
push
ret
icebp
sbb
adc
sub
fcomi
jb
pop
ret
inc
xchg
outsb
orl
xchg
inc
xchg
hlt
mov
and
push
out
lret
or
mov
sbb
in
push
mov
or
jno
xchg
xor
xchg
fldt
inc
js
xor
neg
pop
and
pop
xchg
xchg
inc
xor
cs
adc
aam
inc
or
adcl
lods
cwtl
sbb
lahf
add
inc
sbb
dec
mov
pop
loopne
mov
fiaddl
mov
dec
stos
pop
outsb
cmpsb
mov
xchg
nop
outsl
addr16
mov
ja
dec
sub
in
shr
sbb
test
gs
scas
lock
cmp
fidivs
addr16
or
cli
ret
int3
out
lods
outsb
adc
mov
push
cmpsl
fdivs
pop
xor
in
lods
jmp
fucom
lcall
pop
inc
pop
fcompl
push
jmp
xchg
xchg
xlat
imul
mov
mov
adc
and
fcoml
and
pusha
mov
pop
pop
xor
notl
pop
les
imull
xchg
and
push
mov
dec
and
fwait
jecxz
mov
sbbb
jo
mov
les
sahf
or
mov
or
movsl
std
mov
divl
mov
rorl
fstps
je
jnp
int3
adc
loope
dec
std
pushf
decb
out
inc
dec
mov
in
hlt
dec
and
pop
outsb
idiv
pop
in
aas
addr16
or
pop
mov
fstl
jecxz
scas
mov
inc
pop
test
pusha
cmp
fld
aad
flds
in
das
push
add
xchg
addb
idivb
hlt
test
lcall
dec
cmp
and
mov
enter
or
pop
call
pop
test
sbb
fcmovne
push
xchg
dec
push
mov
push
cmp
sub
dec
ja
je
loopne
scas
mov
loop
pop
mov
xor
cmpsl
setge
xchg
sti
inc
clc
imul
pop
adc
or
leave
fidivrl
xchg
and
push
mov
pusha
cmp
or
pop
dec
jmp
hlt
mov
nop
or
inc
dec
jmp
jecxz
jg
not
push
mov
scas
dec
addb
pop
inc
jbe
mov
fidivrl
mov
insb
addr16
mov
dec
movsb
xchg
cmc
imul
nop
mov
push
xor
xchg
dec
sub
dec
mov
xor
sarb
jbe
inc
ja
cmp
aaa
lock
mov
and
cmp
mov
jnp
mov
inc
dec
out
pop
rcrl
pop
bound
in
sbbl
mov
cmp
jne
int3
sbb
sub
iret
imul
shll
call
inc
mov
adc
pop
xchg
pop
in
dec
pop
and
fstps
fisttpl
pop
imul
fnsave
pop
movsl
push
cmpl
mov
pop
leave
repz
sbb
lcall
cmp
ja
jmp
pop
in
sbb
or
push
or
enter
and
add
mov
imul
dec
jp
jae
mov
lret
sti
mov
mov
add
int3
xlat
imul
jle
ja
cmp
or
insb
jmp
or
sub
pop
cmp
es
dec
in
mov
push
ss
outsb
aas
and
adc
mov
or
sub
sub
out
arpl
shrl
mov
jg
sub
mov
loop
cwtl
adc
mov
inc
push
jb
adc
jmp
or
push
push
inc
mov
addl
sub
jnp
push
lods
ret
dec
iret
xor
loop
rcl
dec
mov
cmp
mov
xor
or
ja
pushf
push
nop
out
inc
lods
rclb
stos
shlb
movsl
push
repnz
or
outsl
or
push
jl
sbb
icebp
popf
xchg
dec
mov
adc
enter
lahf
push
fwait
aaa
xor
icebp
xor
xor
mov
jns
xor
jne
pop
adc
jecxz
pop
mov
add
test
sub
rcrl
leave
test
adc
cmp
std
ds
dec
push
jp
rcrl
je
ja
inc
ds
lret
jg
jbe
dec
adc
hlt
cmp
ljmp
sub
bound
insb
cwtl
sahf
ss
mov
cmp
sahf
mov
sbb
push
es
push
pop
faddp
arpl
sbb
dec
sbb
enter
push
cmp
pop
leave
dec
ret
daa
out
jbe
sub
fsubrs
je
mov
xchg
sub
in
mov
int3
sbb
and
cld
scas
loop
mov
ja
push
xchg
inc
andb
xor
mov
push
sub
fistpll
dec
push
inc
nop
mov
jg
stc
fdivrl
mov
inc
and
insb
mov
xor
and
mov
sbb
mov
cltd
out
mov
sbb
adc
inc
cli
lret
mov
inc
in
fidivrs
jl
lcall
mov
or
xor
pop
jmp
lods
sbb
lret
and
push
popf
cmpsl
fsts
repnz
fs
xchg
test
insb
xchg
xor
hlt
add
add
sub
pop
int
inc
add
jl
inc
sbb
jno
push
insb
sub
daa
mov
xchg
cltd
pop
push
cmpsl
push
sub
cmp
sub
test
inc
fwait
in
pusha
cmp
add
cltd
cmp
sarl
jmp
rol
inc
pop
mov
mov
cmp
dec
insl
addr16
leave
lret
push
mov
mov
ds
js
pop
fwait
push
pop
or
dec
filds
add
jb
shlb
cs
scas
or
add
movsb
jns
sub
mov
popf
out
pop
jne
bound
in
insb
dec
repz
sti
mov
scas
dec
clc
fsts
inc
aad
or
dec
jne
pop
dec
into
or
das
pop
push
test
std
sub
sub
leave
fstps
ja
pop
clc
lds
xchg
flds
xchg
xchg
mov
aaa
and
push
cs
cmp
and
int3
mov
repz
push
lods
cmp
mov
push
lods
cmp
adc
gs
popf
xchg
mov
insl
pop
inc
jbe
popa
je,pn
add
add
sub
and
addr16
leave
ret
mov
sub
mov
arpl
dec
jp
inc
insb
or
mov
test
sbb
imul
fidivrs
mull
inc
xchg
pop
add
xlat
sbb
aaa
inc
and
or
adc
cwtl
test
mov
bound
add
popf
push
cmp
mov
xorb
or
mov
repz
mov
lahf
arpl
push
add
iret
cmp
aaa
mov
outsl
and
jl
loop
loopne
mov
push
ret
stc
bnd
addr16
jo
test
jp
xchg
mov
out
mov
pop
ljmp
out
stos
or
xrelease
std
inc
dec
fistpll
test
mov
inc
cmp
data16
xchg
mov
jnp
pop
mov
loope
pop
lds
in
and
fdivp
and
jns
cmpsl
xor
xchg
aaa
cmp
mov
lcall
idiv
lods
iret
fists
pop
mov
dec
sbb
mov
or
and
pop
pop
int
test
cwtl
sub
mov
jecxz
push
cli
push
jnp
leave
cltd
cmp
aaa
mov
mov
ret
sub
lock
sbb
push
xchg
adcb
addl
out
jo
mov
pop
or
pop
mov
or
in
adc
int
xchg
dec
lods
xchg
adcl
test
test
movsb
inc
and
in
push
fwait
dec
aad
xchg
ficomps
sub
bound
dec
bound
mov
dec
mov
xor
jbe
das
jecxz
sbb
push
xor
xchg
das
mov
jmp
push
mov
shll
lods
flds
adc
mov
imul
cld
cmpsb
cmp
jmp
jmp
scas
lcall
push
dec
add
lret
jp
fldcw
xchg
mov
test
xchg
mov
test
mov
mov
xchg
gs
cli
push
dec
movsl
xor
cltd
jne
add
and
mov
jmp
lcall
das
xchg
or
dec
int
imul
lods
scas
adc
sub
test
test
inc
sbb
sti
test
push
lahf
subb
sbb
mov
or
outsb
andl
pop
mov
dec
scas
outsb
sbb
hlt
adc
sub
xchg
out
adc
push
hlt
dec
fsub
loopne
lret
and
xor
es
mov
push
test
xchg
add
push
sbb
adc
jl
vhaddps
fistpll
mov
push
pusha
add
out
sbb
mov
icebp
pop
cmpsl
push
inc
in
push
mov
cmp
jo
repnz
mov
mov
jne
sbb
ret
fsubrs
add
xchg
daa
sbb
or
add
pop
mov
pop
fs
call
rorb
shrl
jb
lds
call
in
sbb
sarb
jae
mov
arpl
or
iret
aam
js
js
out
adc
cmp
mov
jp
sub
int3
repz
inc
cmp
jbe
jmp
jp
mov
into
xor
mov
sbb
movsl
cld
fildll
push
sbb
loop
adc
shll
mov
stos
xchg
jmp
mov
aad
lret
mov
daa
fcmovnu
xor
inc
adcb
or
aaa
negb
mov
int
lcall
sub
add
int
orb
andb
paddusw
in
mov
push
out
mov
or
mov
sub
ljmp
hlt
sarl
hlt
das
aaa
leave
int
pop
in
scas
push
sbb
or
sar
insb
adc
dec
add
xor
lahf
repnz
std
fcompl
les
inc
cmp
jo
cmc
push
in
test
pop
adc
jns
pop
mov
movsl
jnp
mov
mov
pop
mov
lret
outsb
cmp
jne
push
orb
enter
frstor
in
pop
sub
cs
loopne
in
lret
repnz
or
xchg
dec
mov
add
out
out
sub
nop
and
jge
shrl
xor
ja
lcall
mov
mov
les
cltd
shl
stc
jno
jnp
adc
sub
test
push
test
movsl
push
stos
das
push
mov
pop
dec
add
inc
fists
dec
fildl
cltd
adc
mov
sbb
cmp
add
lock
add
cltd
ror
adc
inc
lahf
fists
popf
fs
jge
xchg
pop
test
mov
movsl
xchg
loope,pn
mov
dec
ficompl
cs
push
jge
push
inc
cmp
push
shll
inc
mov
iret
pop
test
cmp
adc
insb
adc
ja
and
mov
outsl
lahf
xchg
test
out
add
sbbl
inc
add
push
ja
sbb
mov
cmpsl
jmp
mov
jle
in
lods
gs
sbb
mov
sti
xchg
push
psadbw
pop
dec
test
cli
shll
pop
les
mov
sbb
sbb
push
sbb
jp
out
or
pop
mov
mov
lock
mov
pushf
cmp
sub
or
fldl
les
and
sbb
inc
mov
inc
and
adc
jb
mov
push
jecxz
ficompl
mov
es
jg
test
jae
sbb
adc
xor
pop
repz
pop
push
out
mov
jge
cmp
insl
clc
inc
pop
xor
jne
dec
dec
xchg
pop
and
aam
sub
sub
insb
imul
inc
pusha
stos
sub
jbe
jae
cltd
sub
fcmovb
sbb
je
aas
jle
andb
insl
les
pop
pop
aad
hlt
scas
adc
arpl
data16
dec
jne
mov
and
ffreep
mov
lods
insb
mov
dec
mov
or
mov
mov
in
cmp
inc
lea
mov
data16
dec
sub
mov
sahf
and
and
and
pop
iret
arpl
loopne
add
gs
pop
mov
inc
aam
and
lods
mov
lock
xor
xor
pop
out
lret
andb
mov
adc
dec
mov
ret
xlat
js
cmp
mov
sbb
add
pushf
xchg
inc
sub
xor
dec
in
jns
loopne
pop
xor
bnd
rcll
loope
pushf
lcall
inc
sub
dec
mov
sub
insl
cmp
push
adcl
aas
je
jo
nop
out
sub
mov
fisttps
inc
in
fimuls
cmp
stc
rol
enter
inc
pop
dec
pop
pop
add
inc
pop
add
pop
pop
sarl
adc
jecxz
cmp
in
jge
outsb
cmpb
fcmove
lahf
dec
adc
insl
in
lret
xor
sub
mov
inc
cmpsb
jno
mov
sarb
icebp
scas
js
xor
and
in
loopne
pop
in
push
loop
das
mov
cmp
dec
mov
add
jne
pop
out
outsb
jp
lods
into
cmp
mov
sbb
push
outsl
add
andl
push
loopne
sahf
jge
lcall
loope
jnp
dec
test
out
ret
and
xor
loopne
push
pushf
pop
adc
aad
jne
sarl
jl
repnz
mov
xchg
lods
pop
add
cmpsb
sbb
mov
pop
hlt
lahf
adc
jne
inc
dec
icebp
les
das
pop
andb
mov
cmp
in
pop
test
stc
pop
mov
mov
mov
jno
and
lock
shll
cmc
dec
dec
scas
and
add
enter
push
aas
mov
lcall
outsb
cmp
jno
pop
cmpsb
pop
adc
push
sbb
loop
add
sub
push
xor
cmp
leave
notb
jl
test
mov
enter
rcrb
adc
cmp
dec
orb
pushf
sti
pop
mov
out
int3
xor
pop
mov
push
pop
xchg
sbb
xchg
jb
js
mov
mov
inc
push
sbbb
fdivrl
pop
or
sbb
fnstenv
jecxz
fisttpll
mov
sbb
push
jecxz
or
mov
push
cmpsb
xchg
popf
add
mov
mov
pop
and
dec
imul
mov
jae
loop
push
xlat
scas
sbb
push
gs
lret
vaddpd
sbb
xchg
adcl
sub
mov
cmpsb
lds
jmp
cli
sbb
sub
mov
stos
leave
push
dec
mov
dec
stos
mov
test
test
mov
sbb
in
hlt
pop
ror
shll
cmp
iret
or
mov
arpl
fwait
loopne
push
repz
push
mov
jbe
xchg
insb
iret
mov
xlat
sarb
lcall
push
scas
gs
add
cmp
fildll
popf
inc
inc
cld
adc
inc
int
inc
adc
mov
in
addr16
stc
cltd
or
pop
repnz
push
fdivrp
dec
int3
int
push
mov
fucomp
daa
fs
push
fs
mov
imul
aaa
icebp
cwtl
pop
lahf
adc
call
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
and
rolb
sbb
mov
int3
mov
arpl
js
inc
mov
jbe
sub
cld
int
leave
mov
mov
push
mov
sbb
pop
fidivrl
int
int3
sub
cmp
xor
cmp
mov
mov
stos
pop
dec
lcall
push
popa
mov
in
pop
or
mov
inc
ret
mov
aad
pop
sub
push
jmp
addr16
xchg
mov
imul
mov
mov
pop
mov
fnstenv
cmpsl
arpl
adcl
negb
out
pusha
and
test
cli
in
shlb
test
jns
cmpb
add
sbb
or
push
sub
shrl
out
rorl
push
xchg
mov
and
push
repz
out
pop
clc
arpl
dec
sub
scas
daa
ret
add
inc
insl
insb
pop
mov
loopne
test
pop
adc
jge
loope
or
or
mov
and
sbb
xchg
adc
mov
outsb
and
inc
cmpsb
push
push
outsl
add
lds
into
and
jnp
test
mov
test
mov
popa
pop
pop
es
mov
cmp
cmc
sbb
jge
mov
out
push
and
mov
test
clc
jle
xchg
adc
scas
repz
jnp
push
and
sbbl
xor
pop
arpl
sub
and
sarl
mov
call
into
cmpsb
pop
mov
lea
push
jmp
or
outsl
jle
adc
inc
mov
push
mov
or
in
popa
and
out
mov
xlat
cmp
arpl
dec
dec
adc
scas
subb
pop
das
cwtl
sub
inc
push
incb
dec
inc
and
outsb
out
pushf
inc
push
cmp
cmc
jecxz
stc
jae
xor
cmc
fadds
mov
inc
dec
dec
and
aad
stc
or
pop
mov
lcall
sbb
mov
test
and
add
sub
setle
test
cmpsb
jns
fnstenv
sub
cmc
jo
lea
dec
decl
ja
das
inc
leave
mov
out
dec
mov
aad
fstpl
mov
push
fisubrs
popa
sbb
loope
jno
dec
aas
hlt
dec
jb
in
sarb
inc
popf
rcrl
sahf
cmpb
jl
jne
cltd
dec
mov
popa
pop
cs
sarl
or
out
sbbl
out
dec
mov
xchg
or
and
mov
movsb
test
push
xlat
lea
xchg
stos
imul
sbb
pushf
inc
ds
jns
out
lahf
jmp
dec
rcrb
mov
movsb
lods
sub
aaa
mov
in
adc
pop
and
xchg
mov
or
pusha
xchg
adc
jno
or
xchg
outsl
push
leave
pop
push
xchg
mov
bound
xlat
dec
add
sub
mov
andb
dec
pop
out
sub
movl
jmp
scas
popa
inc
repz
jmp
xlat
and
nop
pop
leave
loope
adc
fyl2x
push
test
cmp
pop
js
mov
sbb
pop
fisttps
mov
out
aad
imul
jle
pop
inc
mov
andl
pop
test
fsubs
mov
popa
rclb
jg
loop
mov
add
push
push
push
mov
fcomip
fisttpll
and
in
xor
outsl
pusha
shlb
int3
mov
mov
cmp
inc
ficompl
xor
inc
arpl
pop
stos
test
sub
mov
into
lcall
mov
or
and
mov
adc
iret
jp
jae
pop
out
rclb
jo
aaa
push
jb
or
icebp
cmc
add
inc
inc
pop
cmp
xchg
xchg
ret
xor
in
mov
push
inc
sahf
cmpsb
sahf
aad
cmp
loop
or
cmpsl
sub
or
mov
sub
rorb
sub
movsb
enter
or
stc
cmp
cltd
test
push
push
sbb
xor
and
aam
jp
pop
cmpsb
out
jbe
inc
mov
test
jo
sti
pop
stc
imul
mov
jo
shrl
add
jns
rcrb
cmp
push
sti
add
sbb
js
lcall
inc
leave
mov
cpuid
jbe
add
in
dec
xor
adc
in
cli
sub
out
aas
pop
pop
lcall
inc
daa
push
sbb
fiaddl
or
add
aam
lods
cmp
sub
scas
xchg
jnp
fidivrs
and
xor
mov
aas
push
push
test
in
push
xor
jbe
adcb
loopne
xlat
xor
in
jl,pt
mov
movsl
fwait
popa
add
jns
int3
cmp
lahf
mov
test
cmp
pop
pusha
cld
push
stos
ret
pop
rol
sti
lcall
or
js
mov
dec
out
pop
loope
xor
adc
popa
nop
adc
push
and
das
cld
or
push
jne
aad
inc
adc
sbb
je
or
push
dec
fstpt
dec
popf
cltd
mov
imul
shll
fcomps
in
repnz
push
in
outsb
pop
xchg
sahf
int3
cmp
inc
dec
adc
fstl
out
inc
mov
mov
cmp
sbb
pop
mov
cmp
pop
sub
dec
pushf
out
push
adc
addr16
sbb
xor
xchg
mov
enter
ret
sub
and
dec
add
lahf
lods
mov
sarb
adc
insl
xchg
push
dec
xlat
push
cmp
mov
subb
lahf
in
nop
pop
jne
xor
mov
and
push
scas
inc
jecxz
daa
pusha
icebp
inc
mov
js
pop
cmp
js
xchg
lods
push
cld
jg
inc
imul
cmp
mov
mov
mov
push
push
je
or
lret
pusha
pcmpeqd
stc
pop
in
ret
push
xchg
mov
cmp
sub
jns
jecxz
xchg
pop
adc
dec
dec
adc
inc
rorb
outsb
lds
nop
adcb
aam
sbb
jg,pt
outsb
les
and
std
mov
int3
mov
xlat
cmp
js
test
jle
dec
pop
sarb
xchg
cmpsb
or
stos
push
jbe
dec
lds
ficoml
pop
inc
ja
jb
add
call
sub
mov
sbb
inc
mov
fstpt
iret
out
outsl
out
adc
add
popa
shll
fnstenv
or
fdivrs
popf
imul
dec
add
jp
cmpsb
dec
mov
xor
adc
in
test
push
fiadds
ds
jo
sbbb
ja
stos
pop
nop
jecxz
add
bound
pop
lods
pop
sbb
jns
xor
stos
loopne,pn
movsb
mov
loopne
out
sbb
scas
mov
inc
and
inc
popa
dec
in
andb
aam
mov
mov
push
add
dec
push
data16
mov
xchg
ror
adc
insl
ffree
hlt
aam
pop
sub
inc
fiaddl
lea
xchg
pop
mov
pop
mov
jl
icebp
pop
xor
mov
push
dec
sub
imul
in
inc
pop
iret
mov
inc
push
add
mov
push
jo
fadd
cld
pop
or
adc
and
push
movsb
jg
out
mov
mov
jge
mov
xorl
adc
add
shlb
pop
movsl
mov
xchg
and
jle
cmp
ss
cmp
xchg
mov
push
push
xchg
pop
mov
lret
rcll
xor
xchg
lea
xor
scas
fbld
jmp
lret
push
rcrb
jmp
jl
fadd
pop
sub
loop
fidivl
repz
push
imul
jnp
fs
push
std
or
xchg
dec
ds
jg
sub
cmp
dec
testb
dec
xor
rclb
xor
xor
or
imul
dec
repnz
int
jg
sahf
fs
push
lods
imul
cwtl
cmp
jbe
sahf
divb
push
popa
mov
push
fimuls
popf
in
xor
lds
xchg
push
mov
mov
adc
cli
pop
or
xchg
cmpsb
and
sbb
out
adc
ss
cmc
stos
out
xchg
mov
and
add
loop
jo
pop
xchg
movsb
xchg
sbb
mov
bound
outsl
and
push
stc
movsl
loope
jmp
testb
adc
pop
sti
push
shr
ss
dec
ja
repnz
cltd
hlt
and
or
mov
pop
sbb
in
cld
sbb
xchg
xor
mov
adc
push
push
inc
xchg
std
push
dec
leave
add
lods
mov
mov
dec
pop
iret
insb
xchg
ds
dec
add
mov
lcall
jg
out
arpl
shl
test
test
out
imul
out
jl
rolb
jns
sahf
ror
rcl
stos
sbb
mov
dec
mov
add
mov
sbb
xchg
js
shlb
and
imul
inc
icebp
pusha
sub
or
sub
mov
pop
in
sub
xlat
mov
lds
ljmp
ss
pop
inc
dec
arpl
and
mov
dec
push
sbb
jbe
in
aad
popf
movsl
inc
je
xlat
mov
dec
sahf
sub
xor
sbb
jp
xor
repnz
and
gs
and
xchg
adc
mov
fwait
and
xor
lock
jmp
fstl
pop
and
call
xor
cmpsb
and
shlb
enter
adc
into
aas
scas
ss
mov
scas
ret
adc
dec
aas
mov
nop
mov
lods
inc
fidivl
repz
aad
add
sub
sbb
adc
pop
sbb
or
xchg
cmc
or
and
mov
jl
and
add
lahf
neg
lea
andb
and
sbb
cwtl
pop
in
inc
mov
mov
cmp
xchg
inc
or
out
imul
lods
cmpsb
xor
fwait
inc
in
xchg
cmp
cwtl
mov
scas
dec
pop
xor
jne
jmp
ss
rorl
pop
dec
loopne
lret
ja
pop
das
xchg
mov
movb
mov
out
test
std
mov
cmp
cltd
xchg
sarb
sbb
or
pop
xchg
sbb
mov
out
jae
arpl
adc
mov
inc
out
dec
pusha
shl
inc
xchg
push
rcrl
cmp
hlt
subl
data16
and
mov
xchg
out
mov
insb
adc
hlt
push
push
mov
in
sbbb
sbb
repnz
lcall
push
dec
stc
les
adc
jb
sbbb
push
and
push
aas
ss
mov
addb
lea
and
or
pop
xchg
inc
out
loope
rcr
or
cmc
movb
cmp
adc
xchg
add
popa
subl
ja
jb
rcrb
ss
decl
sti
pushf
mov
mov
sti
add
mov
push
inc
jb
ds
pop
leave
add
scas
lret
dec
sbb
pop
into
addl
sub
scas
and
sahf
rcrl
or
mov
cmp
xor
jns
jl
cmpsb
mov
cmpsl
mov
int3
in
sbb
imul
mov
or
mov
rclb
stos
jle
stos
pop
mov
lret
mov
fiadds
inc
xor
xor
and
jb
sub
push
pop
sbb
enter
and
dec
in
mov
leave
xchg
lods
push
mov
data16
lret
ss
and
dec
sbb
nop
pop
test
or
ret
incb
das
addl
movsb
roll
and
fsubr
xlat
mov
outsl
pop
jp
cmp
repz
iret
notb
pop
xor
imulb
subb
pusha
xchg
or
push
adc
pushf
mov
mov
sbb
or
mov
subl
mov
inc
notb
mov
xchg
xadd
lahf
repz
inc
mov
out
pop
sub
mov
pop
sub
dec
arpl
pinsrw
cmp
ss
gs
lret
divb
popa
or
repnz
pop
push
fcomp
xor
in
pop
andl
xchg
mov
or
push
stos
or
imul
shll
call
pop
jne
or
mov
repz
fsubrs
sbb
mov
fbld
add
add
push
mov
mov
out
outsl
jmp
int3
push
outsl
cmpl
jle
inc
inc
push
or
and
stc
inc
lea
or
cmp
dec
fidivl
clc
dec
xor
jecxz
inc
lret
mov
sbb
lret
sbb
cli
dec
mov
xchg
lcall
xor
js
lods
mov
cmp
out
mov
std
and
lods
add
out
test
push
stc
test
mov
adcl
mov
insl
aam
test
fidivrs
scas
adc
call
jns
cmp
and
ja
ja
jmp
pushf
into
jo
dec
les
ret
push
pushf
ss
inc
int
daa
mov
cmp
inc
lcall
fisttpll
adc
aaa
and
jo
jnp
dec
fwait
lret
es
int3
je
loop
repnz
pop
fwait
sbb
mov
sub
out
adc
insl
ret
push
sbbb
xchg
mov
cwtl
out
test
aaa
fbld
mov
stc
in
dec
das
sbb
and
outsl
push
jle
xchg
lea
xor
fistpl
and
cli
insb
lret
es
fisttps
jl
cli
fcompl
add
mov
xor
xchg
ja
sbb
loopne
cmp
mov
movb
popf
mov
shlb
mov
repnz
push
push
in
mov
cmp
and
jg
addr16
pusha
cmp
filds
aam
cmp
loopne
push
lea
outsl
fisubrs
jb
stos
fsubrl
mov
dec
out
push
push
sbb
sbb
push
adc
xchg
inc
push
adc
sbb
in
gs
lcall
mov
pop
adc
sbb
inc
add
in
rorl
enter
in
ficoms
mov
mov
dec
dec
daa
xor
sbb
push
sbb
hlt
mov
fnsave
mov
fcomi
push
pusha
mov
push
inc
jecxz
rcrl
push
pop
fimuls
or
dec
add
or
cld
idivl
mov
fs
roll
outsl
mov
jle
insl
pop
data16
jno
jb
cmp
sar
adc
xor
add
inc
pop
in
das
push
xchg
mov
cld
pop
je
or
aam
shll
mov
inc
jmp
jne
lcall
mov
dec
and
add
shr
cs
mov
sbb
jae
push
push
arpl
pop
mov
jbe
pop
cmp
mov
dec
xor
dec
adc
in
ljmp
movsl
sbb
cld
into
inc
mov
loop
jecxz
sbb
and
int3
out
lcallw
imul
mov
mov
sbb
cmc
pop
subps
or
ret
in
ficoml
jp
in
rorb
and
cmp
mov
mov
add
mov
scas
ret
test
popf
mov
cmpsl
sub
outsb
xchg
call
pop
lahf
mov
popa
mov
mov
xor
fxch
sarb
sarl
and
sbb
mov
fildl
insl
or
cmp
jo
cwtl
xor
sbbb
dec
jae
mov
out
cmp
sbb
mov
dec
cmp
cltd
sahf
jecxz
imul
xchg
jo
mov
pop
lea
add
xor
out
ffreep
in
andb
and
sbb
and
dec
inc
pop
pop
inc
fcompl
inc
ds
stos
idivb
in
sub
cmpsb
fdivl
adc
push
out
repz
aas
cmpsl
insl
inc
lret
mov
repz
push
or
inc
jo
pop
mov
lock
pop
cmpsb
jp
arpl
adc
out
in
pop
jle
xor
push
ss
cli
int
ja
ljmp
inc
out
inc
pop
xchg
ds
xchg
mov
and
cmp
out
inc
cs
sub
mov
push
cmc
stos
arpl
hlt
mov
stos
je
jge
ljmp
fucomip
pop
jp
push
and
or
xchg
sub
jae,pn
es
pusha
and
jne
xchg
inc
shrl
dec
jns
pop
ds
sub
mov
sahf
into
inc
xor
xor
in
aas
mov
nop
xor
mov
or
dec
and
aam
fisubs
bound
xor
orb
jg
mov
sbb
leave
mov
rcrb
jmp
outsl
scas
ja
aas
pop
inc
test
inc
test
pop
or
sub
cmpsl
or
cmp
jo
xchg
mov
lods
inc
xchg
jecxz
fcmovbe
mov
xchg
mov
sbb
xchg
pop
std
jb
lahf
cld
movsb
repnz
mov
inc
mov
xor
or
jae
imul
mov
imul
cmp
pusha
loopne
xorb
bound
aad
in
push
stc
out
sahf
cmc
mov
leave
es
sub
jecxz
push
and
cld
adc
out
dec
push
push
sti
pop
push
cmpsb
sub
in
xchg
and
inc
aas
jns
orb
jmp
arpl
cmp
jg
pop
adc
lahf
sub
push
daa
stos
fistpl
pop
mov
jge
andb
cmpsb
mov
aam
outsb
jo
sbb
or
lods
js
ret
push
scas
mulb
ja
or
rcrl
shl
stc
in
test
loopne
call
in
mov
sbb
and
add
mov
cmp
dec
mov
or
dec
sub
xchg
dec
and
pop
ljmp
and
pop
das
xor
adc
mulb
insb
mov
sahf
mov
sbb
add
and
popf
mov
xchg
jp
das
dec
ja
push
and
push
or
cld
imulb
push
xor
push
insb
subl
xor
shl
and
lahf
mov
xor
ficompl
add
jp
mov
fimuls
fisubl
pop
sub
lret
shr
jmp
jb
mov
scas
ds
mov
ret
push
lods
fwait
push
lods
jb
mov
je
aas
adc
pop
mov
cmp
popf
lcall
inc
std
imul
xchg
pop
pop
and
pushf
decl
test
push
cld
push
popf
mov
lods
pop
cmpsb
push
fld
adc
xor
aaa
cltd
xrelease
iret
insl
loopne
xor
repz
pop
mov
movsl
xchg
int
adc
stos
add
je
mov
int
leave
sbb
stos
jmp
ljmp
cmc
mov
mov
xchg
std
or
pop
test
sub
sub
clc
cld
push
push
mov
pop
outsb
mov
or
mov
fmull
or
incl
sub
adc
add
mov
insl
jae
fidivl
addb
pop
fs
adc
mov
jp
jns
dec
int
aad
scas
andl
xchg
mov
clc
insb
or
js
shl
mov
xchg
sub
mov
mov
sub
stos
arpl
inc
aam
repz
jbe
or
les
sbb
stos
ds
xor
cmp
popf
in
cwtd
out
test
push
repnz
or
rorl
push
lahf
mov
mov
mov
add
ret
pop
mov
dec
push
sub
sub
shll
mov
inc
and
inc
sbb
adc
inc
push
mov
push
lods
xchg
cmp
inc
ficomps
push
cmp
push
aad
gs
mov
ss
or
mov
xor
pusha
pop
ja
ja
stos
fsts
pusha
mov
inc
add
dec
dec
pop
jle
insb
in
in
xchg
mov
loop
add
scas
ss
mov
imul
mov
aam
push
add
cmpsb
sbb
jne
cmpsb
in
pop
adc
push
and
in
sub
sarl
jns
adc
inc
repz
pushf
xor
push
gs
ja
jno
add
mov
add
in
jmp
add
cmpsb
push
lret
dec
daa
in
add
mov
push
mov
mov
cltd
adc
add
sarb
xchg
das
mov
and
aaa
and
test
mov
fdivp
lds
scas
ret
lret
hlt
mov
sub
inc
and
cwtl
sarl
outsl
in
inc
dec
enter
sbb
xchg
cmp
jns
push
outsb
ljmp
xor
mov
or
add
aad
mov
sarl
sbb
stos
xor
sub
mov
jg
gs
dec
mov
push
es
add
dec
fsubl
jge
jecxz
xchg
fdivl
rcl
and
xor
aam
incb
dec
sub
or
sbb
stos
jecxz
xchg
mov
push
mov
xor
pusha
or
into
gs
idivl
fstl
jb
sti
fimuls
xchg
push
out
data16
aam
xor
lret
lahf
iret
xchg
lods
dec
addl
repz
inc
cmp
or
sbb
xlat
data16
andl
adc
in
add
inc
mov
mov
dec
and
cmp
dec
push
inc
cltd
cmp
ret
cmp
and
testl
lods
xchg
sarb
or
rclb
pop
adc
xchg
icebp
hlt
add
add
pop
dec
ret
add
dec
in
int3
cmp
xchg
sbb
aaa
cmp
in
jg
gs
xchg
pop
or
push
fisubrl
sbb
add
stos
out
fucompp
dec
xchg
stos
mov
adc
xchg
ja
icebp
inc
xchg
push
mov
sub
popa
mov
test
inc
jns
mov
and
enter
insb
repnz
repnz
sbb
mov
inc
sahf
lret
mov
mov
icebp
lods
pop
mov
outsb
mov
adc
mull
sbb
mov
xorl
pushf
mov
cmp
dec
lret
rorl
enter
sub
repz
cmpsb
mov
push
sti
scas
sbb
xchg
adc
dec
xchg
fstpt
call
je
ret
dec
int
xorb
lret
push
repz
loope
and
jo
mov
gs
inc
sub
pop
pop
inc
rcll
adc
and
loopne
fisttpl
sbb
xchg
pop
into
adc
les
add
mov
push
jns
int
sub
adc
inc
jne
aam
mov
in
cwtl
call
aam
jle
pop
fldenv
xor
xor
data16
sub
das
xor
int3
je
xchg
es
xchg
jecxz
cmp
mov
mov
jmp
ret
inc
mov
mov
mov
jnp
sbb
adc
imul
mov
jno
sbb
dec
push
pusha
mov
jbe
jecxz
cli
mov
dec
punpcklwd
adc
ljmp
lcall
add
dec
pop
fwait
or
xchg
loopne
rcrb
add
enter
sbb
inc
cmp
daa
gs
jae
pop
xchg
jle
push
or
cld
cwtl
jmp
pop
jo
scas
xchg
inc
imul
dec
mov
hlt
jecxz
and
and
out
cmpsb
mov
cmp
xor
pop
add
test
adc
fs
loop
ror
cli
addr16
pushf
mov
scas
mov
aas
jnp
push
adcb
sbb
jno
jecxz
popa
nop
iret
outsl
pop
mov
popa
dec
sub
lock
ljmp
xor
mov
test
push
call
lock
dec
dec
jmp
xor
xchg
out
mov
or
int3
fisubl
push
fimuls
push
push
clc
cwtl
sbb
sbb
test
leave
jo
jns
jnp
ret
pop
orl
push
test
sub
andl
mov
add
out
mov
nop
mov
loopne
dec
push
push
ss
xor
mov
hlt
adcb
pop
inc
xchg
dec
cmp
cwtl
adc
ljmp
or
xchg
mov
idiv
push
push
das
arpl
pop
mov
mov
push
jns
dec
pop
sbb
push
xor
aas
jp
mov
std
push
mov
shrl
data16
jb
push
rcr
pushl
sbb
mov
xor
push
sbb
adc
aad
dec
cmpsl
mov
xor
stos
pop
xor
add
xor
or
xchg
outsl
testl
jb
cltd
cmp
aad
sbb
mov
imul
ss
std
inc
sbb
loopne
and
mov
rorb
loop
cmp
out
push
dec
ljmp
rcr
ror
lods
flds
scas
xorb
mov
lods
jns
in
jge
test
test
jae
xchg
icebp
fmull
fldenv
movsl
movsb
pop
call
pop
daa
stos
add
faddl
fwait
xor
dec
shl
arpl
rcrb
push
mov
sbbl
lock
mov
pop
sub
adc
lods
xchg
mov
test
xlat
scas
pusha
test
add
popa
pop
mov
and
in
int3
testl
push
fiadds
sub
xchg
repnz
and
or
repz
ret
or
sub
out
cli
sbb
dec
test
cmp
mov
adc
std
jo
gs
rcrb
lock
out
jbe
inc
pop
mov
adc
outsb
mov
jg
xlat
mov
lcall
cltd
and
dec
sbb
es
mov
leave
addr16
xchg
out
in
sub
loope
cmp
test
les
mov
dec
sti
jb
dec
mov
cmp
jmp
test
xor
imul
cld
inc
in
sbb
mov
js
int3
push
pop
insb
or
int3
jb
inc
movsl
mov
or
mov
fsub
ljmp
in
daa
into
sbb
cltd
jne
mov
ja
hlt
cli
sbb
cli
push
in
mov
xchg
fwait
xchg
mov
ljmp
aaa
xor
mov
movsb
push
sti
mov
cltd
cmp
test
jo
add
jb
lds
dec
jno
test
je
push
and
jbe
lods
cld
mov
adc
inc
dec
sahf
add
popf
stos
pop
add
inc
orl
aaa
outsl
outsl
movsb
and
sbb
add
lahf
push
and
cmc
xor
icebp
sbb
xor
jnp
into
scas
fcoms
loope
shll
or
insb
or
xor
push
adc
dec
mov
add
arpl
rol
addb
push
dec
or
out
jae
enter
lea
mov
fdivl
pop
pop
rorl
lahf
loopne
xchg
repnz
xor
stos
movsl
mov
arpl
arpl
push
sub
std
dec
or
aaa
xor
stc
cmpsl
mov
adc
rcr
xchg
clc
popf
cmp
jmp
push
xchg
les
mov
mov
mov
out
int3
add
xorl
add
inc
call
cmp
jmp
test
or
aas
daa
fmulp
ret
faddl
icebp
cmp
or
inc
adc
cmp
lods
ljmp
add
cmp
sub
std
pop
hlt
dec
lcall
cmp
sbb
push
popa
and
jae
inc
imul
movsl
addl
pop
xor
pop
dec
push
jle
add
cmovp
addr16
mov
push
or
xchg
or
jl
cwtl
dec
loopne
or
fmul
rcrb
push
aad
push
ds
and
sub
sbb
lcall
cs
outsb
xchg
mov
loope
insb
push
ljmp
xchg
xor
data16
pop
push
pop
xchg
mov
icebp
push
xchg
mov
dec
push
sbb
add
sbb
adc
xchg
mov
int
sti
fisubrs
roll
sub
ljmp
aas
mov
out
or
sub
inc
push
movsb
in
jns
pop
xchg
fs
sub
pop
push
arpl
test
jmp
and
add
arpl
sti
insl
xchg
pop
push
out
sarl
aad
and
cmp
sbb
test
in
popa
clc
jge
cwtl
jae
adc
es
in
les
cmp
pop
add
popf
sbb
dec
dec
sbb
jmp
adc
aam
loop
jns
and
sub
je
imul
in
inc
popf
adc
rcl
and
ss
sti
sar
aam
or
rcrl
mov
ds
inc
pop
shlb
mov
jl
enter
fcoms
iret
cld
adc
push
sbb
dec
push
cmp
cmp
pop
addl
div
add
mov
or
sub
sbbl
sti
ljmp
xchg
arpl
push
rolb
jnp
popa
mov
sbb
out
dec
popa
and
xchg
mov
loope
enter
add
pop
out
shl
inc
lock
hlt
mov
jbe
ja
mov
pop
jbe
ljmp
test
pop
xor
jge
in
push
mov
mov
aam
call
enter
add
pop
int
sbb
scas
or
jbe
sbb
or
sbb
xchg
inc
ljmp
pop
sub
add
and
mov
lcall
out
jns
inc
xor
cmp
mov
adcb
stos
mov
mov
mov
jne
sbb
pop
or
ret
mov
lock
sbb
jb
jecxz
cmp
in
dec
cmc
repnz
sub
ret
movsl
sub
rcrl
mov
xor
add
sub
leave
jae
js
insl
andb
jl
jge
jmp
int
aas
repnz
out
and
or
pop
lock
ret
addb
add
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
popa
push
hlt
bound
pop
bound
lock
lods
pop
adc
cmp
or
adc
mov
je
push
jnp
arpl
arpl
sahf
sub
in
mov
ljmp
jae
jle
mov
clc
stos
stos
rorl
xchg
and
pusha
dec
sbb
insb
jb
sbb
cmpsl
jge
dec
cmpsl
mov
inc
pop
lcall
popf
fisttps
shrw
pop
dec
imul
subb
inc
pop
xlat
pop
lcall
sub
adcl
or
lret
jnp
sbb
pop
gs
mov
push
iret
jne
outsb
faddp
sahf
jne
rorl
daa
dec
shrb
inc
add
mov
jmp
xor
sub
jmp
push
push
cmpsb
pop
mov
aam
movsb
pop
cld
push
test
call
pop
fs
pop
xchg
cmp
xor
or
push
push
push
cmc
sbb
jl
lock
adc
add
stc
pop
dec
fdivrl
sub
ljmp
dec
iret
push
fwait
lock
test
arpl
xchg
nop
xor
adcb
pop
push
cmp
je
fistps
insb
adc
aad
mov
push
pop
cli
xchg
fcmove
jge
cmp
sbb
mov
sbb
push
or
call
cltd
xchg
cli
lds
mov
or
popf
rcll
mov
imul
inc
and
mov
sbbl
pop
mov
lods
lret
lock
mov
cmp
mov
popf
jnp
icebp
shll
fdivl
fiaddl
sahf
push
movsb
mov
sub
or
dec
fstl
mov
jg
test
mov
pusha
inc
push
mov
mov
xlat
es
mov
jge
loop
xor
push
lahf
and
lods
fadd
add
cli
inc
mov
xchg
and
and
aas
and
lcall
inc
daa
inc
mov
mov
repz
push
sub
mov
mov
add
shlb
xchg
mov
daa
and
push
sbb
xchg
int3
push
push
fisttpll
sbb
sub
and
xchg
int3
idiv
cmova
xchg
into
xorb
andl
xchg
loopne
add
fiaddl
inc
xorb
lea
xor
cmp
pop
stc
pushf
pop
push
imul
js
lods
lea
sbb
xchg
lcall
jns
cs
fildl
dec
hlt
fscale
sbbb
fnsave
jae
and
and
jo
sbb
or
dec
and
mov
rclb
mov
mov
xchg
stos
cltd
push
loopne
in
rolb
mov
pusha
mov
call
xchg
outsb
pop
aam
stos
std
int3
data16
mov
aad
dec
lock
sbb
pop
jmp
add
cmc
leave
mov
mov
ss
pushf
test
dec
sub
xchg
mov
ljmp
cmp
sar
mov
test
ss
inc
xor
push
outsl
mov
enter
jne
jo
mov
mov
cltd
popa
out
inc
outsb
scas
cld
loopne
arpl
and
dec
xor
pop
dec
cmp
flds
push
outsl
xor
testl
cwtl
jecxz,pn
call
xor
add
jne
ja
gs
lods
mov
and
pushl
add
jecxz
imul
sub
pop
cmc
sbb
sahf
pop
cmp
jecxz
lea
jne
inc
cmp
sbb
sbb
mov
jno
xchg
fimuls
pop
ljmp
andb
mov
xchg
dec
clc
ror
ret
mov
mov
push
cmpl
jnp
mov
mov
jmp
push
inc
insb
aad
int
pop
movsl
pop
xchg
cmc
add
jno
fdivr
addr16
into
in
xchg
test
lods
mov
push
and
scas
mov
push
add
pop
jns
lret
dec
icebp
packsswb
jp
add
xchg
xchg
push
adc
flds
stc
pop
leave
scas
div
aam
lret
pop
sbb
sar
cmpsl
lahf
mov
subl
out
pop
imul
sub
ds
test
and
pop
clc
fnsave
ds
jno
xor
add
jo
in
fisttpll
inc
xchg
idivl
xlat
pop
into
lods
ret
mov
test
cmp
fs
clc
ss
inc
fdiv
iret
or
pop
outsl
sbb
xchg
pop
jle
mov
push
sub
lods
cmp
inc
popa
leave
lock
nop
insb
push
dec
scas
shl
data16
stos
push
js
mov
cli
scas
mov
add
fcomip
arpl
add
mov
jmp
leave
or
jno
mov
inc
iret
or
cwtl
shll
add
push
xchg
xor
ret
dec
lcall
push
js
cltd
add
jmp
popf
cmp
outsl
push
xchg
cmp
testl
aam
jg
sbb
xor
add
push
es
sub
xor
inc
mov
sbb
inc
dec
and
adc
sub
add
testl
jmp
inc
fsubl
filds
pusha
add
sbb
xor
jne
jecxz
repz
mov
sets
inc
test
insl
sbbl
mov
cmpsb
adc
fs
jle
pop
nop
insl
jge
neg
jle
jo
leave
mov
out
aam
gs
adc
mov
insl
jnp
mov
rol
aam
in
mov
push
mov
cmp
xchg
icebp
adc
mov
cmp
cmp
clc
mov
pop
imul
mov
jmp
movsl
sahf
movsl
add
movsb
scas
cmova
lea
mov
test
ficoms
rclb
pop
or
lea
xor
mov
fwait
adc
imul
sahf
imul
lret
aas
xchg
mov
mov
rcrb
cmpsl
jb
popf
lods
imul
xchg
mov
xor
in
mov
mov
cmc
inc
sbb
scas
jb
out
inc
xlat
mov
in
inc
push
adc
imul
fadds
pop
aaa
xchg
or
xorb
lcall
push
jo
loop
cmp
sbb
ret
xchg
mov
xorb
std
jns
pushf
inc
jl
and
sbb
cmc
cmp
fs
js
pop
repz
pop
inc
lods
fldcw
xchg
mov
stos
addr16
xchg
movsl
mov
sbb
mov
test
jecxz
sbbb
sub
loop
sbb
loop
imul
daa
fnstenv
xorb
and
or
jl
and
mov
xchg
xor
sbb
jbe
jae
jge
in
mov
out
mov
ret
int3
xor
out
cli
sbb
mov
xor
jae
push
dec
pop
or
cmp
sub
test
inc
sbb
pop
sub
scas
push
aas
sti
inc
lock
scas
mov
sub
daa
xchg
lods
pusha
jbe
push
scas
push
jbe
cmpsb
xchg
add
dec
sbb
adc
push
pop
stos
mov
adc
mov
nop
sbb
fldl
popf
aaa
mov
jge
pop
xchg
leave
mov
push
int
in
mov
out
shlb
fimuls
repz
ja
jno
jge
push
mov
ret
rclb
add
clc
out
lods
mov
lahf
fs
mov
bound
push
int
xchg
sub
and
in
stc
int3
xchg
or
mov
xor
in
and
pop
push
movsb
aaa
or
cmpl
xchg
mov
push
scas
fbld
dec
pop
movsb
adc
jbe
fcmovne
and
mov
mov
push
push
jle
shll
fs
inc
sub
vpmacswd
or
jg
inc
sub
push
pop
ds
push
daa
push
xchg
adc
xchg
daa
fwait
out
push
dec
test
mov
lock
jb
orl
bound
add
lret
popa
dec
add
mov
int3
add
inc
push
mov
cmp
push
sub
fwait
add
xchg
xchg
inc
and
sub
push
add
jge
pushf
das
xor
rcll
cld
or
mov
push
inc
xchg
adc
pop
mov
inc
xor
pop
dec
jl
ror
cmp
ret
fimuls
adc
leave
fisubs
int3
iret
jg
movsb
push
pushl
icebp
mov
fcompl
jp
loope
fistps
and
stos
pop
xor
add
test
shl
mov
cmpsl
lret
sub
mov
xchg
icebp
lcall
xor
cmc
adc
addr16
or
hlt
mov
cmp
adc
mov
addr16
cltd
pop
dec
xchg
adc
push
pop
or
pop
push
pusha
movsl
and
daa
push
pop
out
lahf
push
loopne
cmp
adc
ss
imul
sbb
daa
sar
loope
mov
adc
hlt
pop
icebp
fldt
sahf
mov
push
mov
rol
lret
aam
sbbl
aad
or
cwtl
ret
fwait
shll
movsl
jns
jns
in
xchg
aam
outsl
insb
pop
repz
pop
xchg
jg
adc
movsl
mov
or
jecxz
sub
ss
pop
jecxz
mov
ds
gs
lods
mov
xchg
scas
add
xchg
dec
and
pop
mov
mov
loop
mov
rcll
imul
dec
adc
mov
add
cmpsb
hlt
push
mov
fistpl
cmp
movsl
xor
pop
lock
xchg
daa
data16
dec
xchg
aad
mov
aam
leave
int3
aad
insb
inc
jmp
flds
orl
and
add
xor
pusha
push
jp
test
jmp
dec
dec
inc
repnz
loopne
repnz
jge
adc
ljmp
or
leave
or
mulb
in
dec
daa
xor
mov
push
and
xchg
mov
xchg
xor
jno
mov
mov
adc
push
leave
fstp
cmp
repz
loop
aam
shll
push
cmp
in
jno
xchg
jmp
or
test
lret
outsl
mov
mov
or
jp
add
dec
mov
mov
mov
test
mov
ljmp
jb
loope
pop
aad
sub
mov
inc
testb
inc
scas
ljmp
aas
fnstcw
mov
cmp
jge
xchg
mov
fmul
and
add
inc
mov
pop
xchg
adc
jg
icebp
mov
xor
dec
pop
pop
ror
scas
aas
add
and
jb
or
cltd
push
aaa
movsl
sti
jge
and
sarl
add
mov
mov
dec
sbb
cld
lods
outsb
popa
sub
dec
fisubl
cmp
add
dec
inc
dec
jnp
push
xorb
inc
jmp
xlat
xchg
in
mov
sub
adc
into
outsl
mov
sub
pop
inc
inc
ret
mov
roll
adc
clc
aam
ja
pushf
mov
iret
push
fxch
test
adc
popa
cmp
cmp
fldcw
xor
arpl
out
sub
scas
ds
cltd
mov
dec
and
fcmovne
adc
mov
mov
adc
or
push
push
cmp
adc
mov
mov
and
pusha
xor
adc
xor
sbb
or
insb
jno
inc
movb
popf
add
das
fwait
int
and
jae
test
inc
xchg
adc
cs
test
xchg
pop
adc
and
popf
je
sahf
push
loop
stos
xor
mov
jno
or
mov
les
mov
nop
mov
mov
cmp
nop
sub
data16
add
cmp
mov
dec
cli
xchg
xor
stos
imul
adc
cld
jl
insl
pop
into
or
cmpsl
sbb
imulb
out
pop
adc
and
les
outsl
mov
lods
aaa
adc
mov
in
shll
cltd
mov
clc
sahf
arpl
mov
lock
pop
lock
xor
das
push
xor
inc
clc
mov
stos
rolb
iret
pop
xchg
ja
push
int
inc
adc
mov
loopne
xor
lods
es
aaa
or
and
pop
add
xor
and
fcom
push
out
fbstp
add
lods
insl
out
mov
mov
add
lock
jg
out
jo
mov
test
mov
mov
or
adc
jbe
insb
out
fwait
xor
mov
sbb
or
mov
aam
js
dec
or
out
xchg
mov
push
sub
lock
add
cmpb
pop
pusha
fcmovne
fstpl
inc
cmp
dec
sub
and
push
or
pop
bound
lock
mov
ja
shlb
fstps
dec
nop
cwtl
jno
ret
jmp
mov
loope
sub
adc
push
scas
outsb
repnz
push
hlt
mov
xchg
dec
push
or
mov
mov
inc
fcompl
push
sbb
imul
cmc
test
sbb
cmp
push
jmp
push
daa
jmp
mov
adc
fucom
mov
xor
arpl
push
scas
cli
loopne
pusha
mov
in
shlb
jecxz
cli
jl
mov
into
insl
fcoml
ror
jnp
sub
adc
shll
ret
mov
cwtl
int
in
paddsb
jmp
cmp
roll
jns
add
shlb
pop
sub
cmp
mov
sub
mov
shrl
or
adc
stos
or
xor
pop
pop
lods
jb
pop
sbb
je
add
inc
arpl
mov
out
popw
mov
mov
loope
mov
xor
rcrl
mov
xchg
and
data16
adc
aas
ret
cmp
add
dec
scas
cltd
ret
cmpsb
or
add
insl
enter
cmp
dec
cmp
and
pop
lds
pop
out
xorl
das
mov
cs
sbb
dec
xchg
scas
mov
enter
push
lods
and
mov
in
push
mov
sub
cli
pop
mov
sub
mov
std
stos
mov
jae
mov
inc
popf
add
hlt
and
sbb
jecxz
and
les
daa
add
in
pop
popf
roll
cmp
mov
fs
mov
inc
pusha
jp
inc
mov
inc
insl
loop
rsqrtps
sbbb
neg
xor
mov
imul
in
fcoms
and
mov
lods
cs
sbb
push
call
cmp
add
ffree
fdivr
dec
imul
cmp
test
js
cmpsb
pop
lea
lcall
out
sbb
mov
jne
ljmp
push
jo
outsl
mov
lods
adc
push
jg
sub
inc
pop
movsl
inc
fwait
arpl
sub
cltd
test
dec
mov
les
ret
aad
xchg
mov
movsl
jle
mov
sub
fldenv
lock
push
mov
rclb
mov
testl
iret
xchg
pushf
xchg
gs
jecxz
mov
xchg
sub
fs
lret
pop
adc
nop
mov
test
stos
inc
mov
outsl
push
ss
pop
out
jb
dec
push
jbe
popf
mov
lahf
pop
cmp
in
xchg
and
or
sub
fildll
ret
lods
jnp
pop
lods
stos
mov
cmc
arpl
mov
cmp
test
push
shl
xchg
nop
push
push
out
es
incb
inc
jmp
mov
and
pop
fnstenv
and
mov
aad
pushf
dec
pusha
jmp
out
xor
xchg
mov
ret
mov
pop
movl
lahf
pop
cmpsl
mov
test
and
aaa
pop
pop
sbb
jl
cld
scas
dec
insb
icebp
sub
xlat
ss
lea
mov
and
push
addr16
cmp
int3
mov
arpl
xchg
icebp
mov
pop
mov
inc
add
dec
loope
enter
cmpsb
dec
rcll
loopne
cmp
fdivs
call
mov
test
xor
lret
clc
xchg
inc
mov
fists
lahf
jmp
sbb
mov
rorl
loopne
or
negl
movl
movsb
ret
adc
dec
xchg
add
div
ds
bound
inc
mov
add
mov
pop
iret
cli
fisttpll
pop
sbb
stc
and
test
sub
pop
fisttps
inc
in
pop
pop
add
sti
fwait
mov
loopne
and
arpl
jns
mov
daa
test
dec
jp
mov
je
out
or
push
fisttpll
mov
sbbl
shl
mov
ja
jp
cmp
sub
mov
jo
cmp
nop
lock
mov
mov
mov
icebp
adc
popf
adc
das
mov
loopne
mov
jbe
pop
fcoms
test
inc
jp
dec
dec
flds
movb
loopne
loope
sbb
incl
bound
xchg
out
imul
cmp
add
repz
sahf
inc
pop
lret
sbb
test
ret
int3
into
cmp
mov
jmp
sub
jnp
cmp
pop
fstl
loope
and
int3
in
xchg
push
loop
cld
das
adc
or
shll
sti
xchg
das
adc
insl
insb
xor
insb
inc
popa
mov
mov
lock
call
mov
pop
shll
into
fwait
and
add
pop
insb
xor
sbb
cwtl
adc
mov
xorl
dec
fcoms
dec
fcoml
lea
cmp
das
mov
mov
push
sahf
addl
icebp
mov
xor
das
negl
aam
bound
test
inc
mov
jge
aad
lret
inc
jmp
and
push
nop
or
pop
rclb
icebp
outsl
js
jo
add
fwait
and
jmp
dec
jns
outsb
inc
jle
sbb
outsb
scas
pop
imul
mov
hlt
mov
cmp
cmp
dec
cmp
call
fimull
push
rclb
repz
xchg
jns
rcrl
ret
addr16
addr16
mov
test
sbb
fldcw
push
inc
ret
or
push
fdivrs
ror
push
sbb
xchg
int3
inc
push
sub
add
xchg
lea
sbb
sbb
clc
mov
cmp
bound
or
ficoml
fsubrl
xorl
addr16
lret
data16
push
mov
in
mov
add
mov
pop
scas
mov
iret
ljmp
imul
mov
outsb
dec
pop
rclb
repnz
mov
rcl
inc
jl
mov
inc
push
xchg
in
push
ja
ds
jo
and
cmpsl
frstor
jle
adc
pop
mov
arpl
arpl
cmp
dec
lahf
test
fcomps
dec
push
rorl
cltd
fs
xor
imul
das
inc
stos
outsb
or
iret
outsb
jl
adc
lcall
push
jl
ficomps
pop
cmpsl
ljmp
in
daa
mov
leave
pop
daa
dec
pushf
cmc
popa
std
movsb
mov
ljmp
aam
and
lock
xor
or
fistps
sbb
xor
test
loopne
pushf
imul
pushf
mov
xchg
cwtl
repz
jae
cmpsb
fucomi
push
insl
cmp
aam
test
cmp
add
jno
popa
pop
ljmp
and
pop
enter
adc
sub
cmp
xor
push
dec
sub
mov
cli
mov
ljmp
orb
or
sbb
push
clc
inc
fucom
xchg
fdivl
sub
mov
loop
and
sub
pop
push
cmp
mov
push
xchg
andb
xor
and
rorl
shl
mov
pop
sahf
xlat
sub
arpl
je
ret
mov
cmpsl
nop
lock
adc
xchg
and
add
cmpsb
aam
mov
ret
xchg
subb
mov
test
js
rcll
int3
xor
push
mov
cltd
cwtl
ret
or
popa
jmp
mov
jmp
mov
ret
arpl
mov
gs
mov
jle
push
outsl
cld
xchg
jno
out
subl
xor
loop
sbb
js
cmp
mov
push
sbb
popa
dec
imul
mov
test
data16
stos
out
nop
clc
xchg
and
into
ret
dec
ss
cmpsl
add
icebp
ret
jmp
out
jg
test
sub
jmp
mov
outsl
sbb
fucomp
imul
enter
pushf
jl
mov
sub
in
enter
mov
dec
ret
cmp
xchg
inc
enter
divb
pop
sbb
fsin
cmp
xor
pop
out
push
dec
in
cwtl
sub
ds
xchg
ficoml
push
mov
xchg
lret
adc
mov
sarb
mov
inc
mov
push
movsl
xchg
iret
fwait
cmpsb
push
push
push
rolb
aas
mov
sbb
push
hlt
cltd
gs
cmc
mov
into
js
mov
xchg
cmpl
pushf
push
push
cmpsl
fidivl
pop
mov
cmpl
xchg
pop
pushf
mov
test
stos
ret
sarb
mov
jno
hlt
popf
arpl
int
fistpll
stos
cmc
out
xor
xor
lret
aad
sbb
adc
inc
mov
sub
fcoml
loop
cvtps2pd
jg
push
cltd
neg
ljmp
iret
lret
outsl
pop
pop
adc
inc
jns
out
cmp
lock
inc
ja
sbb
ljmp
fisttps
sahf
mov
pop
adcb
scas
xchg
lock
sbbl
sbb
jns
adc
and
sbb
mov
loop
outsb
icebp
idivb
jno
xchg
jg
inc
jbe
xchg
push
mov
mov
mov
mov
xchg
sbb
cmpsb
or
xor
and
cld
ds
pop
inc
mov
lods
in
cmp
loopne
mov
pop
lds
pop
addr16
or
mov
push
lea
pop
out
sub
sahf
xchg
mulb
push
daa
cmc
xchg
enter
leave
jne
xchg
dec
mov
push
xchg
js
ret
xor
sarb
popl
push
getsec
minsd
ss
xchg
cld
jbe
scas
cmpsl
gs
mov
pop
lock
sbb
adc
cmpsl
jbe
mov
bound
int3
out
rep
imul
add
mov
sbb
push
rcrb
mov
xchg
xlat
pop
cmpsb
sub
call
rcrl
je
mov
stc
addl
jle
mov
pop
outsb
fidivrs
adc
movl
sbb
ss
ljmp
outsb
xor
int
mov
es
jg
jns
mov
jmp
or
or
pushf
outsb
xor
pop
inc
popa
data16
jl
nop
roll
addr16
out
mov
pop
ss
sahf
sbb
cld
dec
lret
fdivr
sbb
ret
mov
flds
lret
in
clc
xchg
les
xor
sub
xchg
jp
mov
cmp
aaa
and
jbe
and
adc
mov
cmp
jecxz
mov
sub
pushf
insl
or
in
notb
pop
pop
mov
add
negb
shrb
sub
fldt
inc
movsb
pop
ja
push
icebp
rolb
push
out
xor
mov
repnz
cmp
and
fcmovnu
loop
and
or
test
inc
call
jge
jnp
cmp
xchg
dec
jle
lahf
add
mov
js
or
repnz
xchg
pop
mov
lods
or
dec
outsl
mov
or
rorb
sbb
mov
aam
mov
std
sahf
imul
mov
sti
dec
add
push
popf
adcb
xor
mov
jb
sub
lcall
scas
lock
xchg
sub
inc
iret
aad
xor
sbb
fwait
jns
adc
dec
mov
pusha
icebp
xchg
pop
insl
sbb
pop
or
jmp
sub
int3
adc
dec
cmpsb
aad
jne
dec
nop
push
repnz
out
iret
mov
mov
mov
es
into
ja
test
insb
sahf
mov
fstl
loop
lock
lret
mov
mov
dec
or
push
rorb
xor
rcrb
xchg
mov
xor
dec
jecxz
mov
repz
ss
sub
cmp
lock
jo
mov
mov
mov
ljmp
pop
push
dec
add
mov
and
sbb
xor
dec
sbb
jmp
cmp
scas
out
dec
mov
inc
imul
lock
xchg
inc
mov
add
stc
mov
mov
inc
cltd
push
stc
cmp
enter
popa
xlat
push
and
xor
clc
mov
xchg
xchg
mov
mov
mov
cs
ljmp
cmpsb
inc
sbb
pop
adcb
aad
jne
pop
lea
inc
lods
or
push
inc
jo
mov
out
cmpsb
daa
and
stos
daa
cli
mulb
jmp
sub
popa
jl
jg
popa
out
jns
gs
push
dec
xlat
xor
bound
jmp
pop
inc
sub
mov
xor
ficoml
mov
das
mov
outsl
arpl
addr16
mov
int
mov
sbbb
adc
dec
sub
or
sbb
or
and
adc
dec
xchg
sbb
je
stos
ljmp
pop
fwait
cmp
std
fldl
loopne
and
ret
dec
test
sub
inc
outsl
out
nop
add
and
jns
mov
jne
adc
inc
nop
jle
adc
stos
test
out
jb
push
leave
outsl
jae
xchg
gs
in
cmp
push
pop
cmp
adc
and
mov
pop
das
js
test
mov
mov
and
xor
shlb
push
mov
es
rolb
cmp
int3
inc
xor
jmp
sti
lock
dec
dec
aad
shlb
cld
adc
and
adc
cmp
repz
jnp
mov
bound
nop
pop
rcr
xchg
scas
loopne
or
dec
sub
adc
imul
lock
movb
iret
mov
lahf
sub
lea
mov
cmp
je
jp
movsl
jo
xor
push
subl
fildl
enter
out
pop
jmp
out
cwtl
jge
test
lret
mov
sub
loope
add
add
call
loope
iret
xor
cli
loop
outsb
jge
cmp
lret
jnp
sbb
xchg
xor
pop
ror
mov
clc
push
pop
sahf
fsubrs
repz
sub
sub
push
or
cli
daa
xchg
dec
push
sbb
jbe
sahf
xchg
lcall
push
int3
into
nop
aad
dec
inc
mov
pop
mov
add
add
mov
sub
leave
cltd
insb
cmp
scas
xlat
sbb
int3
fbld
xor
repz
dec
cmp
sub
xadd
or
pop
jg
lcall
pop
mov
icebp
pop
hlt
xlat
scas
jns
enter
jmp
push
data16
repz
sarl
and
in
pop
pushl
test
ret
pop
pop
sahf
push
adc
jmp
push
sub
pushf
lcall
fbld
outsl
cmp
xchg
cmp
mov
leave
fidivrs
pop
ljmp
aaa
addr16
adc
cmpsb
nop
test
push
lea
frstor
aam
dec
fimuls
pop
xchg
fistpl
in
mov
pop
adc
and
pop
outsl
mov
fs
nop
xorb
sbbb
add
push
mov
les
mov
dec
iret
sarl
xor
cmc
xor
cmpsb
cltd
and
stc
decl
adc
in
dec
xchg
into
js
add
mov
mov
dec
xor
push
xor
fistpll
lock
jbe
pop
into
mov
arpl
cmp
sbb
push
leave
cmpsb
arpl
jl
adc
mov
outsl
mov
inc
cmp
inc
subl
mov
mov
enter
mov
pop
add
mov
icebp
add
jecxz
movsl
aas
notl
dec
push
add
out
cmp
inc
mov
add
jbe
fiadds
dec
loopne
or
mov
pushf
pop
cli
xor
pop
in
jno
loop
jo
bnd
lahf
sub
test
js
inc
or
inc
hlt
scas
jae
leave
shlb
adc
xlat
pop
repnz
loopne
push
out
adc
les
outsb
loope
inc
lret
pop
in
cmc
cs
lods
ds
mov
cmp
mov
add
in
cmp
loope
jmp
out
pop
mov
jne
mov
mov
sub
dec
jnp
push
test
imul
sarb
test
jl
in
xchg
adc
je
and
lret
cmp
idivb
push
cmpsb
mov
xchg
push
leave
les
fucomip
pop
inc
jmp
jo
adc
pop
jae
sti
das
test
fs
pop
sbb
inc
pusha
shll
stc
in
cld
lds
cmpsl
adc
push
adc
jo
mov
xor
jle
jne
pop
hlt
repnz
lret
xchg
subb
loopne
or
les
je
in
push
dec
mov
push
clc
inc
fisubs
dec
popa
pop
push
leave
lcall
mov
push
iret
mov
jge
loop
mov
jb
jp
jge
push
outsb
xor
aaa
push
mov
xchg
shl
fbstp
inc
add
aad
inc
mov
dec
adc
aaa
loopne
cmp
add
sbb
sahf
movsb
hlt
lods
push
gs
or
popa
inc
mov
aam
or
enter
or
into
mov
loop
jbe
movsl
sub
insb
pop
push
cs
bound
jg
xchg
lret
or
dec
addl
ret
test
inc
fisttpl
and
enter
add
add
or
addb
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
add
adc
ret
jmp
bound
imul
add
ds
fwait
dec
add
inc
inc
fwait
es
in
inc
out
into
inc
xlat
sub
ret
fbstp
xchg
fpatan
js
test
mov
insb
jge
ud2
lea
push
sahf
pop
lret
lcall
dec
mov
je
call
pusha
int
fldenv
testb
enter
pop
inc
mov
imul
push
imul
dec
idiv
mov
icebp
push
push
mov
std
lock
sub
cld
mov
adcl
mov
push
imul
loopne
int
push
sbb
lods
adc
jbe
aaa
clc
mov
aas
cmp
stos
gs
pop
sub
out
adc
jp
fwait
ret
dec
mul
mov
idiv
mov
sbb
iret
insb
lcall
add
int
mov
xchg
loopne
rcrl
mov
mov
pop
adc
push
shr
inc
loopne
jo
adc
dec
cmp
in
mov
cmp
or
test
aad
mov
into
leave
imul
ret
xchg
dec
xchg
xlat
iret
aaa
das
ds
sbb
lahf
in
ja
shlb
pop
addb
jmp
in
sub
sti
movsb
in
fnstcw
fwait
and
das
or
pop
adc
add
shrb
cmp
push
jnp
sti
cmp
push
daa
repnz
les
cmp
inc
fsts
vminss
sarb
or
jge
inc
push
pop
ret
and
push
je
xchg
jge
outsl
add
dec
mov
stos
mov
in
pop
fidivrl
scas
cmp
gs
ja
repz
icebp
mov
gs
loopne
mov
sub
test
testb
add
lahf
or
sub
jb
push
pop
imul
cli
cwtl
testl
rcll
fstp
inc
cmp
je
inc
pop
ret
neg
xchg
cld
out
sbb
repz
popa
aam
cmpsl
je
insb
add
xlat
lock
stos
mov
add
inc
jne
push
or
into
pop
xchg
icebp
xlat
xlat
push
fisttps
dec
leave
in
test
fcomp
pop
mov
mov
sahf
push
ret
stos
or
mov
fcmove
icebp
cld
sbb
sub
scas
mov
adc
jg
rcrl
pop
xchg
scas
fdivr
ds
jg
xchg
cld
pop
inc
mov
mov
and
inc
add
out
dec
repz
pop
mov
popf
fsubrl
xchg
stc
push
stos
sub
push
xchg
imul
push
or
ffreep
mov
xlat
into
lods
and
outsb
pop
add
sbb
lret
stc
mov
mov
xchg
cwtl
leave
xchg
mov
aad
lods
insb
lahf
cltd
xor
inc
pop
in
xchg
cmpb
loop
cwtl
mov
pop
inc
nop
mov
jne
pop
ret
fists
xor
cmp
and
pop
push
jl
mov
sbb
push
in
xchg
jbe
in
sbb
xlat
fildll
inc
push
jg
mov
dec
sub
aam
mov
dec
xchg
cmp
in
pop
push
add
adc
push
add
cmp
pop
adc
jno
jmp
sbb
sbb
xchg
mov
aas
xchg
inc
pop
mov
es
push
orb
test
pop
mov
jo
daa
test
xchg
xlat
fs
lcall
dec
cld
jnp
ljmp
sbb
pop
mov
pushf
inc
pop
scas
jge
sub
adc
xor
sbb
and
test
hlt
mov
test
inc
push
in
pop
or
sub
and
negl
adc
xchg
lret
stos
xor
cmp
jns
sub
mov
xor
mov
pop
call
ss
pop
das
jl
pop
fnsave
int
addr16
fldcw
and
push
aad
sbb
xor
xor
fistpll
cmp
pop
cmp
or
xchg
sub
sub
sbb
and
stc
xor
dec
xchg
sub
mov
adc
and
cmpl
xor
cmp
sbbl
data16
cmpsl
aas
add
aas
or
pop
cltd
sub
popl
dec
jbe
jae
mov
fnstsw
int3
jp
ret
mov
aam
pop
pop
lret
push
pop
add
push
test
fiadds
push
pusha
sbb
inc
aas
push
jno
stos
pop
xchg
sbb
fisttps
daa
dec
sub
cmpsl
nop
inc
xchg
jecxz
xchg
pop
test
adc
sbb
xorb
cmp
pushf
mov
fisubrl
enter
cmp
add
sub
mov
push
mov
pop
dec
clc
push
addb
inc
pop
cmp
aas
mov
mov
dec
push
je
aam
les
in
rcll
xchg
xchg
xor
cmp
or
pop
int
fstl
leave
out
in
push
cmp
mov
out
stc
repnz
adc
clc
mov
mov
pop
outsb
jmp
sti
or
cmp
out
rcrb
subb
dec
dec
fidivrl
movsb
xor
insb
inc
push
fsubl
mov
sbbl
movsl
pop
test
mov
ret
mov
pop
and
fs
aas
out
adc
cld
mov
add
es
negl
sbb
imul
pop
push
cld
hlt
cli
hlt
rcrl
sub
dec
push
sbb
in
mov
push
adc
test
xor
sub
jmp
sbbl
mov
addr16
xchg
pop
sbbl
popa
inc
std
call
aad
imul
lds
sbb
imul
xor
jno
sub
push
push
push
cwtl
loope
lds
es
lea
or
add
aam
ret
adc
push
or
popa
sbb
lods
movl
cwtl
mov
sbb
mov
lret
dec
jbe
rcrl
and
cwtl
pop
pop
fwait
sub
gs
mov
inc
xor
call
loopne
loopne
xchg
stos
test
scas
or
inc
das
add
outsb
xor
imul
mov
iret
add
mov
nop
push
repz
fwait
hlt
out
mov
xor
imul
push
jl
and
das
and
es
loop
and
dec
in
pop
mov
dec
xorl
idivb
std
inc
rorl
pop
mov
push
clc
and
mov
sbb
pop
cltd
cli
mov
cmp
fcom
mov
jmp
cmpsl
fbstp
rcr
pop
jno
cmp
je
jbe
andb
jae
pop
bound
pop
lock
pop
or
sub
idivb
sub
cmp
sbbl
sub
xchg
xor
xor
mov
ja
aaa
fsts
cltd
jb
cmp
shll
in
js
scas
mov
and
cltd
xor
subb
mov
iret
es
inc
jae
fnsave
lcall
loopne
jge
pop
sub
cmpsb
sahf
daa
cmpsl
fdivs
cli
dec
mov
or
sti
in
icebp
gs
mov
xchg
dec
sub
pop
dec
mov
xchg
xor
and
in
sti
loop
loopne
jecxz
dec
daa
pop
nop
ja
decl
push
ds
mov
jnp
stc
pop
inc
inc
ljmp
mov
mov
aad
movsl
scas
sub
into
aas
fildl
jno
cld
xchg
push
rcll
stc
inc
push
push
xchg
mov
mov
xor
cs
adc
gs
mov
xchg
mov
jnp
adc
gs
fsubrs
dec
jb
add
xor
shl
pop
mov
scas
stos
mov
or
fistpll
mov
or
ret
xorl
dec
icebp
cmp
idivb
movsb
push
or
jo
in
xor
push
pop
cli
push
mov
xor
stos
mov
mov
roll
lds
js
jb
and
adcl
insl
jnp
jae
jle
push
inc
dec
fstps
stc
inc
mov
sbb
mov
scas
std
gs
mov
inc
push
adc
rcrb
ljmp
xor
push
dec
aaa
add
testb
js
cmp
loop
or
sar
sahf
shll
mov
jno
adc
pop
ficoml
mov
mov
lret
pop
mov
rclb
mov
jo
mov
stos
push
hlt
dec
sahf
jp
ret
ror
lods
adc
lock
pop
mov
dec
inc
data16
mov
push
out
inc
fstl
inc
jnp
jnp
popf
dec
dec
push
pop
subb
adc
cmp
aaa
and
insb
push
mov
ret
pcmpeqb
lcall
push
dec
fstps
fs
stos
push
dec
pop
jae
or
movsl
xchg
mov
mov
dec
xor
xor
cmp
push
sbb
adc
fcmovnb
pop
notb
aad
mov
cs
push
jmp
leave
lods
xchg
test
jmp
fcompl
ret
pop
adc
fcoms
loope
je
jg
pop
push
inc
add
jns
mov
cmp
ljmp
sbb
xchg
das
dec
xchg
jb
out
adc
inc
adc
mov
cmp
ficomps
fidivl
movsl
std
in
xchg
loope
mov
dec
nop
and
loopne
jmp
sub
fmuls
push
jg
push
mov
clc
into
aam
das
je
out
cmp
test
fldenv
pop
outsl
mov
pop
adc
adc
sahf
push
inc
jo
fisttps
cmp
data16
loopne
out
loope
mov
xchg
add
sbb
cmp
rcr
enter
dec
popl
sahf
sub
jne
xor
repz
mov
or
arpl
add
push
or
mov
and
sbb
std
out
mov
lahf
daa
sub
lcall
push
mov
rol
sbb
adcb
add
mov
and
or
cs
xchg
dec
cmp
mov
jge
fs
leave
notl
cmp
sti
in
loope
shrb
sub
cmp
mov
ja
push
xor
pop
pop
addr16
insl
cmpsb
loope
cli
sub
push
mov
inc
aas
jmp
jns
aad
sub
jmp
imul
fucomi
cli
in
dec
addl
leave
ret
mov
into
sti
mov
cmp
js
push
jns
push
mov
shll
dec
adc
loope
push
lock
and
nop
adc
js
roll
xor
sub
iret
stc
inc
mov
dec
xor
dec
inc
push
mov
xchg
push
scas
dec
xchg
loopne
fsubrl
adc
or
mov
dec
add
jno
jle
and
xchg
loope
sub
cmpsb
in
idiv
nop
shrb
lock
sbb
pop
push
cmp
cmpsb
mov
fcomps
dec
addl
cwtl
sbb
scas
or
cmpsl
aad
cltd
iret
in
adcb
insl
negb
sahf
dec
cmp
aas
xor
mov
mov
mov
stos
mov
adc
mov
mov
sahf
add
add
push
sub
sub
adc
aaa
hlt
lcall
xchg
in
fidivs
mov
cmp
xlat
dec
push
inc
add
in
hlt
sbb
inc
mov
in
icebp
add
outsl
or
or
mov
loopne
es
inc
mov
sbb
jl
dec
repnz
push
sbb
aam
adc
movsb
icebp
sub
nop
sbb
loope
cmpsb
xlat
loope
cmp
jmp
adc
sub
mov
rclb
mov
cld
jge
enter
jp
pop
push
add
add
fs
or
je
in
cmp
pop
mov
push
iret
mov
ja
cld
test
jnp
adcb
testb
dec
test
mov
and
movsl
or
jmp
les
loope
pusha
nop
popf
mov
sbb
mov
cmp
push
pop
pop
push
adc
mov
lea
sbb
inc
sub
cmp
fisttps
outsl
addr16
ret
lret
inc
adc
cli
sub
scas
pop
sub
jbe
lods
jae
jnp,pt
paddb
xor
jno
hlt
daa
lcall
inc
xchg
fiaddl
movsl
repz
outsb
out
xor
test
in
dec
xchg
ljmp
push
mov
push
push
repz
xchg
pushw
mov
pop
cmp
push
mov
mov
push
push
xchg
and
sbb
or
and
test
ss
sbb
dec
cltd
sahf
stos
fwait
popf
xchg
adc
imull
rcl
push
insl
call
test
jl
daa
sarl
into
sbb
test
sub
nop
shll
lods
lret
nop
or
inc
loope
inc
jl
mov
notl
icebp
cli
dec
into
inc
popf
pop
fsubrs
xchg
je
pop
or
cmp
inc
jbe
xlat
sbb
jo
xlat
mov
aas
pop
xor
jne
imul
mov
mov
movsb
lods
add
ja
into
repnz
lods
and
out
mov
add
sub
ret
ficoms
jb
mov
xor
add
mov
push
adc
loope
pop
out
pop
in
out
adc
clc
and
in
adc
cli
lret
ljmp
sub
test
cmc
mov
lea
jne
ja
xchg
roll
fildll
pushf
mov
cli
in
lcall
rcl
icebp
movsb
mov
mov
or
cmpsb
jb
nop
pop
stos
ss
cli
stos
aad
mov
test
and
inc
scas
dec
lods
in
sub
bound
sub
inc
aaa
mov
jg
in
push
out
mov
out
out
lds
inc
xchg
stos
or
bound
cmp
addr16
dec
cmp
jg
jae
fidivs
mov
call
aad
pop
movsl
lahf
test
push
cli
xchg
xor
nop
int
fwait
outsb
cwtl
push
sub
mov
and
test
shrb
nop
xor
push
popa
cs
scas
filds
ja
sub
sbb
pop
xor
mov
mov
mov
out
inc
mov
movsb
lret
inc
lret
repz
bnd
cld
sahf
fstpl
cmp
jp
sub
cmc
pop
ret
jmp
mov
shrb
sub
fcomp
mov
call
loope
and
data16
jmp
out
xor
add
mov
ds
push
push
shll
pushf
cmp
mov
gs
ret
movsb
mov
mov
mov
aas
aad
int3
sub
popa
and
andb
test
cmp
add
aas
xor
add
ds
mov
test
cmpsl
fisubs
scas
jb
divl
stc
gs
fildll
enter
lret
cmp
mov
dec
imul
mov
adc
aam
pop
sbb
inc
ret
or
repnz
addr16
mov
and
mov
ljmp
fnstenv
sbb
xchg
test
sub
mov
cli
push
subb
out
lret
push
divl
sbb
pop
in
cltd
lock
jp,pt
inc
pusha
xlat
lds
and
cld
mov
loop
addr16
xor
pop
stc
out
popa
repz
jo
jbe
inc
sahf
push
xchg
mov
sbb
pop
mov
lock
adc
fisttpl
addl
das
push
jmp
add
pop
repnz
adc
adc
aad
dec
stc
mov
mov
clc
mulb
or
lea
inc
xor
imul
js
in
xlat
and
xor
test
add
in
push
lods
int3
and
je
cli
loope
dec
int
incl
jecxz
sub
adc
in
in
mov
psllq
mov
stos
aad
iret
jg
dec
clc
mov
push
jge
push
test
fstps
cmc
jl
dec
and
dec
push
daa
adc
les
and
mov
rclb
cli
notl
shll
add
ds
in
lret
xchg
cltd
repnz
pop
cli
data16
xlat
out
push
inc
xchg
mov
aam
jns
sbb
mov
std
scas
in
adc
stos
test
ds
int3
out
shll
lock
leave
add
cld
dec
inc
in
dec
inc
sub
cmp
or
sbb
and
aas
and
js
je
push
mov
insl
pusha
mov
xchg
push
mov
fisttpll
lcall
push
fs
sub
insb
adc
mov
cmp
dec
mov
hlt
negl
jg
push
xor
pop
pop
ljmp
icebp
cld
push
cmpsb
int3
add
mov
clc
adc
addr16
jl
mov
push
outsb
push
push
imul
or
sbb
mov
dec
xorl
and
xor
adc
wbinvd
jg
jnp
jl
xchg
add
sub
movsl
pushf
dec
add
jbe
mov
jmp
ss
mov
adc
push
lret
test
dec
dec
inc
or
adc
aad
sbb
jbe
cmpsl
jne
sbb
jne
mov
pop
loop
mov
inc
dec
loop
adc
filds
out
insl
jle
popl
and
mov
jbe
xlat
jl
fwait
icebp
sbb
in
movsb
std
sub
xor
xchg
and
aas
xchg
mov
in
outsl
jp
test
jle
dec
cs
ds
mov
scas
mov
sbb
pop
adc
bound
adc
ficoml
and
mov
test
repz
xor
sbb
push
xchg
pop
jl
sbb
aad
es
sbb
adcb
lret
call
pop
push
pop
scas
in
mov
lods
inc
or
pop
in
and
pusha
xor
jge
leave
arpl
mov
xchg
adc
scas
or
dec
fcomi
sbb
sbb
mov
cwtl
pop
dec
pop
je
js
xchg
mov
repz
sub
fldcw
xchg
push
mov
pop
hlt
enter
addr16
jo
ret
rcll
inc
dec
cmp
loopne
mov
outsb
or
adcl
mov
cmp
mov
inc
mov
out
pusha
int
pop
and
inc
sub
popf
aaa
inc
repnz
sbb
or
or
mov
pop
dec
insl
out
out
out
mov
jno
push
pushw
insl
fimull
and
je
xchg
jl
std
sub
std
xchg
adc
mov
ret
setns
popf
inc
addb
ja
mov
lods
js
sahf
push
orb
push
mov
push
jp
stc
inc
push
mov
out
ror
andl
les
push
loopne
jmp
test
cld
jle
mov
sti
scas
xchg
mov
and
ljmp
push
push
xchg
lret
mov
add
mov
xchg
and
inc
xchg
xchg
push
sub
int3
sub
mov
mov
insb
xchg
loop
addl
movsb
lods
xchg
pusha
cmc
movsb
xor
push
adc
stc
jbe
push
jge
clc
jmp
add
or
loopne
movsl
out
xchg
pop
inc
cmp
xchg
cmc
and
sarb
loop
les
arpl
repnz
mov
sub
push
daa
jle
outsb
xchg
dec
jnp
aad
filds
mov
test
shlb
mov
add
sbb
jnp
or
push
data16
scas
push
mov
leave
sarb
mov
es
addl
mov
inc
jns
dec
and
and
cmpsb
mov
cmp
movq
mov
pusha
mov
push
mov
pop
setle
ss
or
sub
lds
mov
les
test
insl
adc
add
xor
cmc
mov
daa
popf
mov
pop
sbb
cmpsb
ja
outsb
scas
inc
or
adc
mov
mov
call
mov
push
inc
imul
loope
jno
fdivrl
mov
imul
aaa
mov
mov
and
aaa
push
xor
call
das
cmp
push
addr16
or
adc
dec
leave
xlat
dec
cwtl
cmp
mul
fwait
mov
cmp
mov
scas
cwtl
mov
js
mov
in
mov
jp
or
test
add
sub
test
scas
aad
in
scas
es
test
decl
fdivrs
pop
pop
or
xor
aaa
stos
xchg
dec
lods
mov
cmc
cmp
lahf
sub
xchg
pop
xchg
pop
pusha
sbb
and
jno
cmpl
pushf
sub
lret
aaa
xor
bound
dec
js
add
sbb
or
out
std
mov
insl
aas
xchg
mov
xor
sub
fsts
mov
inc
sbb
jg
in
loopne
cld
dec
movsl
push
data16
in
idivb
sub
incb
fcompl
adc
fnstenv
mov
push
ret
lea
mov
push
push
lret
sarb
mov
mov
out
mov
push
mov
fs
adc
mov
push
push
jg
inc
shl
imul
push
mov
insb
notb
jo
int3
mov
mov
xor
cld
adc
test
lods
mov
aaa
aad
in
sbb
hlt
and
loopne
sub
lea
add
pop
pop
aam
iret
push
subl
std
sbb
xchg
fnstenv
pop
ret
test
mov
pop
cmp
lahf
mov
jp
lods
sbb
out
lock
sbb
mov
xor
mov
mov
or
sbb
push
aaa
pop
hlt
xchg
pushf
stos
loopne
lods
test
adc
int
xchg
xchg
fsts
cld
adc
rcl
stos
das
in
cmpb
ljmp
jge
loopne
push
mov
dec
ds
push
rcl
in
cwtl
mov
icebp
inc
cld
ror
xchg
and
out
cmp
scas
dec
fidivs
pop
repnz
rorl
shrl
push
es
leave
mov
fwait
mov
bndldx
jle
mov
roll
loop
femms
xor
cmp
jmp
sbb
inc
cmp
push
pop
insl
test
push
xchg
fistps
jp
pop
pop
andb
loopne
or
mov
jno
filds
cld
inc
ds
mov
addr16
hlt
lret
dec
inc
sub
xor
sahf
mov
dec
test
movsb
xor
and
aad
inc
adc
fcomps
sahf
lock
cmp
shrl
loopne
dec
xchg
loop
cmp
test
xor
imul
iret
xlat
cltd
adc
mov
scas
sub
push
fstps
pop
pop
xchg
xor
out
into
adc
pusha
cmpsb
jmp
jp
pop
fwait
out
loop
in
pop
jmp
out
push
lds
mov
jmp
xchg
lgs
xchg
cmp
adc
loopne
ljmp
mov
lock
ja
lret
push
or
mov
test
push
std
insb
imul
daa
lock
decl
xchg
iret
xchg
add
aaa
xchg
sbb
das
repz
dec
pop
mov
mov
sar
daa
aam
lret
or
or
ret
in
inc
mov
imul
mov
xchg
repnz
aaa
xchg
or
lods
stos
mov
xorl
adc
popf
addr16
jmp
lahf
insl
xor
mov
pop
inc
push
push
incb
cltd
in
mov
mov
das
sbb
add
outsl
add
xchg
test
ss
dec
fadds
ds
add
push
jp
xor
cmpsb
and
in
enter
in
fwait
cld
jbe
subb
fisubrs
push
in
push
cli
sbb
stos
dec
add
enter
jnp
fcompl
mov
pop
scas
mov
and
leave
cld
inc
mov
out
sub
xor
rorl
fs
test
sti
and
cli
call
test
sbb
pop
cmpsl
mov
inc
pop
insb
inc
adc
sar
or
jge
fwait
cmp
jecxz
xor
movsl
sub
xor
rclb
stos
pop
das
mov
es
movsl
dec
lock
pop
or
add
pop
push
mov
fdivs
cmpsl
xlat
insb
outsb
imul
xchg
icebp
ss
lret
loopne,pn
cmpsl
jp
insb
stc
xchg
std
xor
sbb
int3
insb
call
and
dec
into
addr16
dec
xchg
pop
jnp
sub
or
fsts
fdiv
dec
pop
faddp
jge
pop
cmp
hlt
pop
insl
mov
add
xor
inc
add
shlb
mov
xor
push
cmp
fldenv
enter
lds
fwait
add
sbb
imul
sti
xchg
lret
aam
pcmpgtb
jns
xchg
mov
sbb
mov
sub
inc
add
repz
dec
sub
andb
mov
sbb
jno
dec
xor
in
popf
adc
dec
inc
ljmp
mov
sbb
adc
xor
movsl
pop
push
out
lds
pop
push
loop
jae
scas
sub
orl
out
sbb
out
insb
mov
je
gs
mov
ficompl
imul
adcl
mov
daa
test
sub
clc
sahf
or
or
icebp
das
loopne
mov
push
loop
xchg
jl
push
adc
cli
cld
addl
lcall
test
mov
pop
stos
loop
pop
push
xchg
cmp
mov
mov
cmp
fiadds
pusha
mov
xlat
lcall
push
push
ds
cli
or
sbb
ds
mov
and
das
jge
iret
je
and
shrl
mov
ljmp
cmp
popf
cli
push
or
pushf
pop
stos
mov
or
cmp
fstpt
xor
sarb
jp
adc
and
cltd
adc
jb
sahf
lcall
mov
mov
xchg
and
hlt
adc
inc
stos
fmuls
sarb
mov
lock
das
pop
fistps
adc
cmp
faddp
jae
push
or
inc
add
mov
cmp
mov
aam
jl
jne
cmp
andb
test
cmpb
outsl
xor
push
pop
inc
jmp
xchg
pop
jmp
fldcw
push
fidivrl
call
ds
mov
sbb
scas
popa
cmpsb
aad
cltd
push
xchg
push
movsb
mov
aaa
sbbl
mov
repz
movsb
sub
jb
mov
mov
outsl
mov
ja
stc
mov
push
xchg
and
stc
mov
stos
test
sub
pop
cmp
xor
add
je
lea
xchg
pop
fildl
sub
repz
scas
stos
add
pop
pop
and
xchg
scas
ljmp
cmp
inc
push
mov
push
dec
rcrb
dec
add
sub
cmp
mov
imul
adc
fildl
mov
loope
fstpt
sbbb
push
cmpsw
pop
fstpl
mov
xlat
bnd
xor
add
inc
xchg
int
lret
sub
div
mov
pop
pop
xor
jmp
nop
popa
xchg
xchg
add
shl
shlb
rclb
std
js
cwtl
lock
fcomi
mov
xchg
subb
xchg
sbb
mov
stos
outsb
int3
bound
je
xor
jge
sub
jne
cs
lods
mov
cs
mov
sbb
sub
add
imul
and
sar
mov
or
xor
inc
mov
sbb
aas
xchg
mov
dec
xor
cmp
in
mov
out
mov
mov
aaa
push
test
out
sbb
test
pop
mov
gs
dec
mov
mov
mov
lahf
imul
add
ds
cltd
dec
js
push
fsts
inc
adc
sub
dec
lea
imul
dec
incb
cli
fdivr
inc
sbb
cmpl
xchg
sub
jle
and
pop
xorb
fwait
and
pop
sub
xchg
movb
hlt
mov
adc
popf
adc
adc
jp
xchg
ret
mov
mov
pop
xchg
jae
ljmp
js
add
inc
enter
xorb
ficomps
jmp
mov
out
mov
mov
gs
sub
dec
insl
bound
dec
mov
outsl
fucomp
popf
xor
ret
adc
dec
cmp
sub
fists
popf
fs
sbb
gs
inc
scas
mov
pop
adc
xchg
loop
mov
xchg
adc
sub
jbe
pop
push
jmp
adc
iret
test
pop
sub
rorb
leave
mov
addl
pop
enter
jns
lea
pop
jge
in
sbb
lods
cwtl
and
js
and
arpl
cs
aaa
xchg
dec
mov
imul
cli
jp
push
repz
mov
sub
cs
adc
mov
popf
negl
cmpsl
jl
sbb
xor
add
cmp
push
pop
leave
sub
push
mov
add
test
sbb
jnp
sub
loope
jnp
or
jge
inc
cmc
add
inc
stc
lock
rorb
insl
mov
cmpl
mov
push
push
int3
sbb
add
pop
dec
push
xchg
sub
mov
dec
dec
lds
adc
jo
mov
cld
or
int3
xor
inc
pop
int3
es
jb
and
js
int
sub
rorb
stos
pop
push
nop
push
aad
cmpsl
int3
jbe
sub
xchg
lcall
in
popa
ret
ds
adc
push
push
cmpsl
adc
fisubrl
aas
call
insb
pop
scas
icebp
imul
fsubrs
inc
push
enter
mov
cwtl
pusha
sahf
sti
sub
jne
in
push
hlt
mov
test
cwtl
mov
insl
push
ljmp
insl
dec
push
aad
mov
and
sub
clc
sub
sub
repz
enter
pop
sub
test
xor
mov
fistl
outsb
lahf
daa
aam
rorl
jae
out
fs
shll
leave
and
jmp
xor
xchg
outsl
frstor
mov
shll
xor
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
xor
leave
insb
dec
lea
jmp
bound
jge
int
sbb
pop
in
insl
ja
imul
add
movsb
js
jmp
inc
mov
out
push
aas
xlat
mov
jge
add
test
lds
fcoms
adc
outsb
rol
fneni(8087
out
dec
add
xor
shrb
ret
or
movsb
mov
imul
das
inc
xchg
sub
enter
push
cmpsb
and
test
add
mov
xlat
or
xchg
add
cmp
jmp
mov
pusha
cmp
and
test
enter
lea
loop
aas
cmpsb
mov
in
add
stos
dec
pop
lock
sub
and
fbld
pop
jo
shlb
out
shr
sbb
and
rcll
cli
movsb
out
outsb
outsl
cld
jp
jecxz
outsl
adc
movsb
push
cmp
xchg
fisttps
sbb
movsl
lret
cli
lret
in
lahf
outsb
mov
mov
addl
mov
cmp
xchg
iret
and
sub
loop
add
data16
movsb
addb
mov
mov
mov
ja
rcrb
dec
bound
test
pop
push
add
icebp
add
push
sbb
insb
sub
loop
data16
add
jno
and
ljmp
dec
jb
inc
mov
movl
push
jl
loop
jle,pt
int3
gs
je
mov
scas
and
addl
jmp
imul
mov
xor
js
and
cmpsb
sbbb
dec
clc
stos
push
add
mov
int3
in
jno
sbb
pop
pop
loope
sti
scas
inc
add
xchg
stos
cmp
aaa
sub
xor
fidivs
mov
fwait
pop
add
or
push
inc
mov
lods
cmpl
or
jbe
jne
stc
sbb
arpl
dec
mov
in
loopne
shll
add
scas
subb
or
sub
mul
push
filds
inc
xchg
cmp
pop
mov
aaa
fsts
ret
jmp
icebp
xorb
sbb
loopne
fs
ds
rclb
aas
and
inc
jecxz
sbb
xchg
ljmp
mov
push
xor
xchg
mov
sbb
add
xchg
adc
cwtl
jo
sub
pop
and
add
in
adc
rcll
adc
and
test
xchg
mov
xor
inc
xor
ss
test
sub
push
mov
jnp
cld
cmp
test
jns
scas
movsl
push
jnp
sub
inc
cli
adc
imull
js
cmp
sub
sub
push
xor
mov
sbb
mov
mov
cmc
ss
rcrl
mov
cmp
orl
outsb
js
xchg
outsl
jecxz
xor
lret
push
sbb
in
lea
testl
mov
mov
mov
ss
fsubl
xor
ss
leave
jle
mov
mulb
push
mov
xor
pushl
jl
xor
sbb
or
jne
inc
sub
sbb
dec
das
lock
scas
sbb
jns
xor
js
cmc
jl
sub
xor
push
mov
bnd
dec
les
xor
dec
clc
call
push
pop
add
inc
push
aaa
jno
ja
xchg
xchg
or
dec
cltd
inc
repnz
mov
leave
call
stc
adc
push
js
and
or
xchg
ja
jnp
and
xchg
subb
lea
dec
jo
push
sti
push
push
dec
push
add
fists
pop
lock
xchg
stc
mov
pop
mov
sbbl
in
xor
xchg
cmp
adc
mov
dec
sbb
mov
je
mov
arpl
je
sbb
xor
add
and
mov
push
clc
adc
pushl
or
into
pop
ds
adc
jbe
mov
repz
rcll
push
dec
mov
hlt
mov
mov
mov
push
stos
fdivrl
int
xchg
mov
jp
and
orl
fisttpll
aam
aam
aad
pop
adc
pop
sbb
fistps
or
mov
jge
xchg
or
cmp
dec
stos
sub
jb
stos
stos
sub
and
jge
push
push
in
jns
mov
inc
jl
add
xor
lcall
arpl
mov
cmp
cmpb
or
jecxz
push
fidivl
mov
or
je
jae
fsubl
push
fisttps
pop
push
lea
dec
jbe
out
movsl
ja
mov
push
mov
jg
sbb
leave
cmp
pushw
sub
out
ret
mov
mov
addr16
stos
mov
xchg
addb
out
push
jns
push
add
mov
loope
in
cs
inc
sub
movsl
pop
clc
lahf
lods
std
and
pop
scas
nop
pusha
mov
push
ja
fs
inc
out
xchg
and
daa
mov
mov
rclb
sbbl
enter
add
mov
cmp
popf
add
stos
mov
add
fsts
xlat
scas
xchg
xor
xchg
add
andb
sysexit
dec
mov
jl
cs
pusha
nop
push
push
nop
cmpsl
xchg
xor
pop
aas
mov
mov
mov
loop
push
adc
sti
jae
and
xchg
les
dec
fs
jl
and
pop
fidivrl
jnp
mov
jg
mov
lahf
data16
std
andb
push
testb
or
test
mov
mov
fidivrs
pop
cmp
mov
adc
push
sbb
ret
xor
cli
jle
or
mov
pop
loop
mov
xor
jne
fwait
jo
and
icebp
lds
sbb
adc
test
pushf
test
femms
add
cli
imul
xor
sbb
pop
pop
xor
and
push
adc
das
xor
shll
or
mov
negl
movsl
in
cli
adc
scas
bound
xor
nop
pop
stos
mov
shl
daa
cmp
push
xchg
notb
adc
xchg
int
rcll
imulb
adc
cmp
push
in
inc
fistpll
mov
fstl
inc
cli
sub
mov
and
aam
dec
roll
cwtl
dec
inc
cmp
sbb
out
das
shlb
jl
mov
call
clc
jmp
outsl
dec
and
inc
lods
repz
and
outsl
out
pop
add
std
adc
mov
out
adc
fwait
loop
test
adc
stos
xchg
shll
adc
dec
inc
rcl
test
test
dec
mov
inc
das
add
lahf
aaa
cmc
sub
mov
fidivrs
loope
mov
and
xor
or
inc
inc
cmc
loopne
adc
xor
cmp
std
pop
xor
pop
pop
jge
test
neg
iret
sbb
sbb
mov
sahf
icebp
enter
jle
dec
hlt
xchg
dec
fdivrl
xchg
cmp
aam
in
jp
or
jo
aas
dec
aaa
sbb
outsl
mov
repnz
mov
inc
sbb
mov
pop
in
add
jno
sbb
lcall
mov
push
fistpl
or
ljmp
repnz
cmp
mov
pop
inc
mov
arpl
mov
xchg
addr16
ss
xchg
repnz
sub
mov
les
sbb
mov
xor
and
cmp
or
ficomps
test
xchg
mov
flds
cltd
mov
and
adc
je
dec
pop
sub
sub
aas
inc
cmp
ss
push
jecxz
imul
lods
and
xor
ja
imul
xchg
incb
mov
cmpsl
lods
lcall
and
cmp
sbb
mov
mov
andb
xor
popa
fsubrs
std
fcmovnbe
lcall
sti
and
sbb
sbb
in
adc
xor
je
sub
movsl
xor
enter
cmp
and
jl
mov
cmpsl
or
cmp
xchg
sarl
dec
icebp
or
fstpt
adc
hlt
insb
push
push
sub
pop
add
pusha
or
cmp
sbb
and
xchg
andb
mov
inc
fs
jmp
jo
push
jne
fs
jmp
in
mov
int3
rcl
sbb
andl
pusha
movsb
mov
arpl
dec
dec
dec
into
leave
and
pop
and
mov
mov
push
jge
ret
outsl
in
fsubs
xchg
jne
sbb
jne
ds
mov
out
inc
mulb
lea
aas
movb
adc
sub
mov
mov
leave
mov
hlt
mov
jb
jge
mov
movsb
sbb
cs
mov
push
and
test
scas
das
push
adc
lahf
and
cwtl
insl
mov
push
popf
fcmove
into
jp
and
cld
push
ds
pop
dec
icebp
xchg
sbb
mov
rorb
xchg
nop
popa
or
cmpsl
jp
jmp
fcom
lea
jmp
inc
in
aaa
mov
push
push
inc
or
dec
or
pop
adc
jo
and
push
test
dec
popf
xchg
xor
dec
mov
shll
aad
sub
inc
cltd
jge
rol
or
mul
mov
add
or
and
or
loopne
and
mov
icebp
sub
and
mov
or
xchg
xor
inc
fidivrs
xchg
adc
cmpsb
sub
mov
cmp
inc
mov
loope
addr16
pop
rol
repnz
cmp
cmp
shl
in
or
or
fsubrs
or
out
add
ja
sbb
xchg
hlt
rcrb
fnstenv
es
fildll
ret
cmp
int
ljmp
or
aaa
or
sub
and
jg
sti
lds
mov
ds
sbb
mov
xor
cwtl
push
push
lcall
push
lock
in
and
orb
adc
pop
xor
aad
movsl
push
outsl
loope
adc
xchg
movsl
mov
jbe
mov
inc
pop
fwait
fwait
lcall
cmp
xchg
inc
sbb
ss
jle
inc
repz
jge
scas
sub
mov
push
inc
push
stos
out
pop
mov
push
les
loopne
sub
xchg
push
add
mov
inc
adc
xor
fistpll
xor
push
add
fstps
out
jp
mov
icebp
mov
icebp
jne
arpl
jmp
mov
lcall
les
lock
adc
mov
sub
repz
cld
jmpw
sub
add
push
pop
pop
push
dec
in
mov
sahf
jecxz
or
stos
dec
or
adc
out
into
inc
xchg
jb
lods
xor
sub
push
cli
or
fsubl
loop
mov
das
loope
push
mov
in
es
jge
dec
sbb
enter
testb
mov
fdivl
lea
mov
scas
and
adc
gs
cli
mov
and
sub
test
dec
clc
iret
sbb
insb
stos
xor
add
cmp
adc
xchg
dec
lret
pop
ljmp
jns
push
dec
mov
inc
or
xor
lods
mov
imulb
adc
push
dec
je
pop
mov
sbb
dec
sub
ljmp
scas
aad
loop
inc
cmpsb
cmp
adc
or
inc
cmp
inc
pop
aaa
into
jecxz
jg
int3
jl
mov
add
outsl
mov
arpl
add
mov
arpl
xchg
hlt
mov
imul
daa
cmp
cmp
shlb
loope
xchg
mov
cmp
sbb
jecxz
in
cmc
int3
test
ret
icebp
xor
fs
fnsave
push
dec
xorl
sbb
sbb
push
fisubrs
push
xor
cltd
jae
push
sahf
and
mov
xor
mov
push
fldenv
jae
shlb
adc
daa
jle
call
jns
clc
push
add
cmp
cmp
ret
jno
push
push
add
sub
jle
rolb
mov
aas
aaa
xchg
dec
imul
lods
mov
xlat
test
inc
das
push
fdiv
cmp
mulb
cmc
outsb
aad
rcll
xor
mov
cmp
jo
pop
sti
adc
pop
xor
jno
lods
cmp
bts
repz
popa
adc
daa
lea
mov
or
mov
les
fldt
aas
mov
fs
mov
jbe
test
inc
xor
ja
or
cmpb
add
ror
loopne
mov
rcrl
in
scas
repz
in
addr16
insb
mov
pushf
sbb
cmp
dec
shlb
ljmp
in
mov
or
add
jbe
dec
loop
mulps
push
xor
sub
in
sete
adc
test
test
sbb
pusha
dec
or
into
into
pop
jmp
jp
das
les
test
jp
lods
add
jbe
inc
xlat
cmp
imull
pushf
mov
xchg
mov
or
insb
xor
xchg
push
pusha
cmp
mov
dec
lret
aad
mov
aas
int
sub
and
or
cltd
int
sbb
lds
lret
and
sbb
mov
inc
daa
xchg
cmp
dec
pop
popa
cltd
mov
lcall
push
mov
das
mov
dec
mov
cmp
stc
mov
enter
ljmp
or
cmpsb
sbb
lahf
gs
flds
mov
xchg
outsl
in
push
push
sbbb
fwait
mov
and
call
pop
mov
movsb
enter
mov
adc
sbb
mov
pop
cs
test
or
dec
inc
outsb
inc
xor
pusha
addb
dec
mov
insb
xchg
pop
xchg
xchg
dec
cmp
or
cmp
ljmp
sub
mov
xor
push
mov
sbb
mov
add
push
lods
xchg
into
push
hlt
push
add
xor
sub
mov
ret
mov
xor
xchg
push
loopne
test
lds
mov
imul
lret
test
call
push
push
fisubs
adc
rcrb
dec
out
jne
fcmovbe
inc
cmp
pushf
push
pop
cmc
fidivl
xchg
xor
xor
mov
in
and
mov
test
cmpl
jle
adc
xor
sub
not
or
fisttpl
mov
call
push
je
movsb
ljmp
shrb
lret
cs
pop
add
insl
xchg
inc
movsl
cmpsl
data16
cmp
push
pushf
pop
push
enter
in
fiadds
jae
mov
xchg
addr16
mov
sub
fadd
jp
int3
inc
mov
sti
cmpsl
push
jbe
xchg
inc
dec
je
push
inc
sub
dec
mov
enter
lds
inc
pop
in
xchg
mov
jb
xor
xorl
jecxz
stos
daa
add
test
out
lret
fucom
mov
testb
dec
ss
ljmp
mov
lods
sub
lret
pusha
adc
dec
insl
inc
icebp
adc
mov
cwtl
sbb
or
frstor
and
ret
jnp,pn
es
lock
int
pop
fs
stos
std
or
sub
pop
mov
scas
hlt
mov
out
pop
test
arpl
fidivs
mov
cmpsb
int
mov
or
cmpsl
inc
mov
push
cmp
addr16
mov
sarl
inc
repnz
jns
popa
in
push
cld
add
add
mov
out
and
jo
out
xchg
ljmp
out
aaa
cmpsl
loope
aas
mov
sbb
mov
xchg
aam
cli
sub
add
push
cli
pop
shlb
push
mov
mov
mov
sahf
cs
xchg
xchg
clc
xchg
stc
out
insl
xchg
add
int
or
add
jmp
push
jbe
ret
int
and
out
lods
jnp
fsub
inc
sub
xchg
pop
push
movsb
mov
dec
mov
mov
lahf
mov
and
sub
es
dec
ljmp
lret
jb
pop
push
jb
jmp
iret
pop
in
test
aad
inc
ror
dec
jnp
lock
cltd
xchg
and
ds
das
mov
xor
and
int
test
jle
fsubs
sbb
xor
fcmovb
dec
jo
dec
std
fldcw
dec
pop
cmp
mov
sub
setnp
adc
cltd
out
lods
fnstenv
leave
jbe
push
mov
push
sbb
pop
sub
loope
pop
jl
lea
iret
push
decl
mov
pop
int
jbe
rol
adc
or
jbe
push
push
int3
into
jmp
subb
sti
test
xor
cmpsb
cmp
adc
outsb
cld
testl
cltd
test
mull
pushf
or
pop
push
mov
out
inc
in
addr16
shll
cmpl
sbb
mov
js
inc
push
stc
jmp
arpl
sbb
addr16
inc
xchg
mov
negl
inc
lds
je
lea
lretw
lea
adc
clc
mov
push
cltd
stos
mov
ja
jne
in
adc
stos
dec
popf
xchg
cmpsl
mov
xlat
xchg
ss
stos
icebp
pusha
push
xchg
popf
sbb
dec
push
xor
cld
stos
pop
add
pushf
xor
push
mov
testb
cmp
add
mov
pop
pop
clc
sub
vmwrite
xchg
push
xor
jmp
mov
sub
gs
cmp
stos
dec
rol
pop
add
adc
movsb
data16
xchg
dec
adc
scas
lret
fstpl
shll
loop
inc
aaa
sbb
push
leave
mov
and
inc
clc
stos
fidivrs
xlat
cmp
sbbl
sub
insl
pop
mov
and
stc
lret
jp
xchg
sub
xchg
sub
cbtw
sub
jmp
enter
mov
out
jle
push
add
adc
jne
insl
xor
test
mov
add
xchg
sub
or
mov
lret
pop
mov
loopne
cmp
lahf
mov
popa
lds
data16
xor
inc
movsb
xor
dec
ja
scas
sub
insl
outsl
cmp
ja
mov
adc
adc
cld
cmpsb
lret
inc
or
or
mov
cmp
nop
jg
jl
jns
mov
dec
cli
cmp
adc
mov
add
rcpps
cmp
jg
xor
adc
sbb
add
and
pop
sarb
jecxz
pop
repnz
pusha
loop
bound
int3
lahf
js
or
lret
mov
mov
xor
into
in
inc
pop
stos
xchg
xor
adc
cmp
cli
mov
leave
lods
adc
sbbb
adc
dec
js
movsl
call
jns
xchg
int3
lods
xchg
cmc
or
mov
aaa
sub
mov
pop
inc
mov
leave
add
arpl
scas
add
mov
mov
sbb
mov
nop
pop
out
shrb
jbe
scas
roll
pop
ja
adc
mov
int3
fistl
jb
leave
fildll
rcll
imul
test
loop
aad
inc
mov
sahf
addb
fcompl
mov
mov
push
push
mov
or
pop
jg
cmp
enter
or
sub
popf
shrl
call
stos
test
sbb
pop
int
pop
mov
out
in
ja
sbb
or
pop
mov
pusha
cmp
mov
shrl
or
mov
lods
dec
sub
mov
addr16
mov
sub
shlb
sti
push
out
lret
pop
push
push
or
mov
mov
inc
add
dec
outsb
popa
loop
and
jmp
mov
or
cmpsl
or
add
ljmp
fldl
sub
jb
fpatan
mov
adc
xchg
xor
mov
mov
outsl
test
sbb
sarb
in
movsb
dec
in
call
js
jp
jp
add
stos
mov
movsl
fistpll
jecxz
rolb
stc
jbe
pop
mov
cld
in
mov
sbbb
mov
sbb
dec
adc
mov
or
inc
data16
das
shrb
into
sub
mov
call
xchg
and
insb
sbb
sub
jp
outsb
cmp
lahf
add
lods
sub
push
jmp
adc
jo
xchg
cmp
stc
cmpsb
push
mov
xlat
leave
adc
rorl
and
mov
xor
adc
adc
int
sub
xor
lahf
adc
daa
add
xor
push
cld
mov
mov
pop
sub
mov
les
pop
pushf
pop
sbb
xchg
push
pop
cmp
test
inc
xchg
jo
loope
sbb
mov
das
stos
fnstenv
inc
leave
push
cltd
stos
and
xor
inc
mov
imul
dec
xchg
jg
lea
cli
dec
movsb
call
lds
arpl
aam
in
cltd
pop
or
pop
cmovnp
sahf
sub
xchg
xchg
adc
push
bound
jecxz
repnz
push
inc
jge
inc
in
jb
daa
pushf
adc
cltd
cmc
cld
fcomps
sub
mov
adc
jmp
test
pop
test
pop
loope
jae
loope
sub
into
leave
std
mov
nop
hlt
push
loopne
jmp
push
into
jno
mov
xchg
imul
mov
pop
xchg
inc
out
lret
das
sbb
nop
scas
rolb
jge
lods
jnp
mov
roll
jo
add
inc
adc
fnstenv
xorl
xor
fdiv
push
lods
pusha
adcb
mov
adc
sbb
or
mov
or
fistl
pop
jno
dec
cmp
pmaxsw
orl
fidivs
jne
daa
rcrb
mov
xor
inc
pop
fcmovnbe
xchg
and
js
insb
out
cwtl
mov
pusha
jo
hlt
mov
lock
ret
push
mov
jmp
lock
scas
add
cld
or
mov
insb
cmpsb
sbb
xor
into
test
and
and
mov
inc
inc
insl
xor
push
lds
lahf
adc
adc
mov
sub
sub
push
dec
shll
sub
shll
test
pop
pop
xor
push
xlat
dec
test
push
or
cmpsb
dec
xor
arpl
pop
pusha
inc
xor
xchg
testl
xchg
xchg
jo
das
push
adc
jp
cmp
xchg
ja
lods
aas
ds
pop
sub
xor
test
leave
clc
mov
jo
push
mov
cmpsl
pop
fildl
jp
mov
fsts
pop
sbb
into
push
sahf
mov
sub
add
mov
scas
sub
inc
cmp
adc
add
icebp
xchg
imull
inc
negl
or
sarb
add
lea
call
and
cmp
inc
notl
push
nop
data16
sbb
lret
sbb
ret
mov
inc
lahf
in
xor
fisubl
sbb
enter
int
and
mov
mov
imul
pusha
lret
in
cltd
pop
xor
fsts
mov
adc
jb
sbb
jl
jb
rcr
scas
lahf
fwait
dec
ret
int3
pop
out
pop
lods
maxps
cmp
scas
in
scas
mov
sub
lea
repz
lahf
add
xchg
fdivrl
rclb
adc
sub
push
jge
cmp
push
jmp
sbb
fs
adc
sub
xchg
subb
imul
jb
cmp
cwtl
mov
cmpsb
imul
jno
inc
test
test
loopne
test
mov
scas
add
or
dec
inc
or
cltd
sub
adc
jb
and
jg
fiaddl
jne
ljmp
xchg
jmp
mov
sbb
addl
nop
sbb
cwtl
lock
ret
xor
xlat
cli
aaa
push
pop
iret
mov
dec
mov
pusha
mov
pop
cwtl
mov
mov
xchg
daa
cmpsl
push
sbb
mov
in
and
sbb
xchg
cmp
inc
push
mov
subl
inc
data16
in
mov
scas
outsb
daa
xlat
or
call
push
shlb
cli
push
mov
mov
mov
iret
test
xchg
xchg
or
repz
mov
insb
in
mov
int3
xor
loop
les
inc
or
bound
jle
push
cltd
or
outsl
pop
push
pop
xchg
rolb
add
add
and
sub
mov
cltd
rorb
xchg
jg
loope
test
cmpsl
enter
or
dec
loopne
xchg
rcll
int3
adc
push
movsb
cmp
or
flds
lret
sarb
std
jmp
ljmp
pop
push
jae
nop
lods
aam
daa
popf
in
aaa
xchg
pop
xor
into
xchg
adc
cld
fbld
push
dec
rcrl
cmpsb
cmp
pushf
jge
push
lret
test
add
in
dec
sub
shl
mov
dec
insb
sub
pop
sbb
popf
xchg
sub
xchg
and
adc
dec
insl
lock
mov
or
mov
sub
test
lds
in
mov
jle
shll
or
into
seto
or
jnp
xchg
repnz
sub
imul
push
xor
dec
mov
psubsb
shrl
jbe
test
aaa
cmp
pusha
xchg
out
mov
add
sub
decl
jnp
pushf
pusha
lds
cltd
xlat
add
popa
jg
ret
das
dec
out
cmp
sub
and
hlt
fwait
iret
rorl
xchg
xchg
pop
inc
adc
jbe
pop
pop
ffreep
push
xor
ret
lret
mov
es
jno
mov
mov
add
ds
cmp
cmpsb
jge
daa
outsb
out
jne
cld
call
push
pop
mov
sti
dec
movsb
mov
cmp
mov
dec
cmp
ret
popa
add
pop
es
dec
pop
lcall
xor
xchg
pusha
outsb
aam
cmpsl
inc
and
add
mov
cwtl
aad
cmpsb
dec
sub
mov
cmc
jecxz
pop
sub
lret
stos
in
or
pop
inc
scas
sub
xchg
lock
add
imul
xchg
daa
clc
inc
mov
fs
pop
popf
icebp
adc
cmpsl
cld
mov
adc
loope
pop
inc
into
adc
sub
adc
sahf
push
movl
lcall
sub
jl
fists
adc
mov
sbb
and
movsl
faddl
out
xor
push
mov
test
lock
or
inc
shlb
dec
mov
lahf
ret
and
dec
out
xchg
cwtl
mov
and
push
test
cmp
negb
pop
movsb
pop
jecxz
out
inc
leave
sbb
into
jo
ret
repnz
dec
cmpsb
std
jae
jle
and
xchg
sub
xlat
lret
xor
mov
lcall
xor
stos
aad
mov
popa
mov
xor
cld
insl
pushf
fwait
addr16
fwait
jl
cmp
sti
xor
or
inc
aaa
inc
lret
pop
inc
sub
fiadds
jmp
pop
int3
xor
int3
in
xchg
adc
sbb
rorl
push
movsb
sub
xlat
mov
sarl
xchg
lahf
loope
sbb
repnz
imul
or
cld
mov
jo
dec
clc
rcl
cmp
adc
in
sbb
stos
jno
dec
leave
push
loop
jmp
sahf
mov
mov
add
sub
mov
je
inc
lahf
sub
xlat
rorl
outsl
out
pop
jo
inc
insl
scas
inc
xchg
cwtl
jnp
scas
xchg
xchg
sahf
mov
inc
pop
pop
in
loop
data16
ret
adc
xor
call
xor
mov
xor
inc
cmovo
fs
jl
or
pusha
addr16
or
mov
cmp
add
xchg
sub
push
add
sti
sub
mov
mov
loop
inc
mov
loope
mov
addl
mov
jp
mov
and
clc
aad
mov
push
pop
push
inc
push
push
xlat
nop
inc
sub
in
jae
pusha
loop
mov
pop
std
jle
imul
test
xchg
jg
or
pop
imul
scas
fidivl
test
stos
push
call
mov
mulb
idivb
jecxz
stos
popa
les
rcll
pop
rcrb
pop
hlt
testb
jns
dec
and
mov
cmpsl
imul
mov
add
test
adc
lcall
and
cs
mov
or
adc
pop
cmp
xor
loope
inc
mov
data16
sbb
fdivp
cmp
dec
popf
inc
into
cmp
sub
push
push
push
sub
das
movsl
jmp
rcrb
int3
mov
push
insl
fisttpl
pop
mov
fs
daa
lods
sub
fwait
std
or
ret
or
pop
dec
dec
adc
les
jmp
int
xor
in
add
jecxz
jl
or
out
sbb
fidivl
cltd
aad
mov
and
notl
add
fidivrl
icebp
sub
push
cwtl
jle
ret
cltd
outsb
jp
mov
test
inc
lock
mov
stos
cld
out
xlat
jo
les
cltd
push
and
push
pushf
jg
push
iret
push
dec
in
enter
leave
cmc
mov
scas
dec
sbb
outsb
in
clc
add
data16
inc
push
movsl
xchg
or
movsl
je
pop
push
mov
cli
repz
dec
into
icebp
into
mov
and
fbld
xchg
add
fcomp
out
push
or
aam
adc
sbb
cld
andl
orl
push
pushf
dec
lds
daa
insl
lods
mov
inc
push
or
outsb
repz
call
mov
mov
sbbb
out
add
imul
or
sbb
mov
jnp
jns
rcl
or
roll
je
mov
movsb
in
in
imul
xor
or
mov
inc
jnp
push
dec
xchg
sbb
inc
cltd
sbb
popf
loopne
insl
and
sub
call
jp
cmp
push
xchg
push
idivl
mov
push
cld
sbb
out
jno
push
sub
mov
dec
mov
pop
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
fst
hlt
push
jmp
bound
jge
lds
push
xor
pop
ja
xchg
jmp
rcrl
cld
inc
dec
inc
insl
sub
leave
mov
outsl
cli
or
in
test
xchg
hlt
sub
fidivs
mov
sbb
cld
mov
mov
inc
mov
pop
sub
pop
inc
cmp
jbe
mov
hlt
sahf
xorb
xlat
mov
in
popf
push
lods
iret
repz
mov
pop
pop
cmp
iret
test
mov
adc
pop
roll
dec
fildll
data16
test
je
cmp
xchg
push
or
aas
xorb
pop
add
ljmp
rorb
push
xchg
cmovne
jl
sub
fs
xor
pop
popa
sbbb
imul
cmp
loop
sarl
mov
inc
push
mov
and
int
lock
outsb
xchg
insb
add
cmp
mov
mov
inc
int
mov
sbb
pop
lea
dec
sub
fisubrs
mov
out
std
xor
pop
xor
cmpxchg
push
xchg
cmp
dec
or
ljmp
jb
imul
sbb
sub
pop
xor
cmp
jb
or
add
xchg
sub
insl
xor
push
rorb
shrb
jae
fucomi
jo
les
movsl
cmp
add
fwait
or
pusha
lcall
mov
dec
or
xor
not
jo
bound
add
ret
sbb
imul
push
dec
dec
sbb
cmp
or
jnp
xchg
pop
dec
sub
bound
rolb
fdivl
mov
in
mov
jo
add
jno
shll
lret
js
lcall
lahf
gs
insl
inc
addr16
fimuls
push
cwtl
dec
insl
jmp
repnz
inc
jb
adc
and
xchg
jmp
popa
lea
mov
pop
bound
addr16
mov
push
dec
mov
pop
std
ss
pop
test
dec
ljmp
mov
pop
test
push
cmc
fsubr
lock
adc
pushf
inc
out
push
nop
cs
sbb
lock
mov
int
mov
sub
mov
loopne
cmp
sarb
lret
inc
jae
jecxz
add
dec
add
popa
dec
and
jbe
scas
xor
cmp
xor
out
mov
fs
inc
cmp
xchg
cmpsl
arpl
addr16
dec
adc
sbb
add
popf
jle
movsb
popa
jno
stc
pmaddwd
sti
and
lea
jle
aas
arpl
iret
imul
fdivrs
jae
pop
jns
setle
add
add
pop
cmpsb
lods
inc
sbb
inc
pop
and
lcall
gs
fnsave
out
clc
dec
and
ficoms
add
inc
push
push
mull
cmp
test
xchg
lcall
outsl
ss
add
sbb
xor
mov
inc
in
scas
dec
sahf
dec
mov
cld
xor
add
dec
dec
insb
fistps
cmp
out
loop
inc
xor
inc
push
mov
scas
in
outsl
out
mov
iret
bound
lcall
xchg
mov
fistps
aad
inc
and
xchg
pmulhuw
cltd
add
dec
daa
fldenv
mov
enter
push
ljmp
push
mov
inc
sub
lcall
dec
jo
popa
xchg
loop
js
imul
xchg
or
sti
xchg
dec
ret
and
cmc
fidivrs
loop
sahf
pusha
dec
sub
dec
mov
insb
sub
sbb
lods
pusha
xlat
incb
loop
lret
es
std
xchg
roll
inc
insb
sbb
xchg
mov
add
test
gs
adc
les
add
mov
adc
imul
jecxz
jne
push
leave
add
or
sub
loop
test
lret
leave
shrb
gs
cmp
mov
ss
cwtl
mov
fisttps
jmp
aaa
pop
cmp
loop
pushl
xchg
cmpsl
push
aad
aad
mov
cli
insl
fst
pop
into
dec
test
sbb
popf
cli
and
sbb
loope
lock
and
aad
mov
mov
sub
inc
pop
out
add
mov
pop
into
int3
mov
jae
movsb
xorl
dec
iret
dec
adc
xor
push
and
sub
inc
jo
ss
pop
scas
jne
popa
clc
jp
xorb
aad
movsb
dec
subb
fildl
or
fsincos
pop
sub
sbb
adc
pusha
stos
jo
push
xchg
in
in
pop
fmull
mov
jle
push
cmp
pop
xchg
adc
test
sbb
rclb
mov
mov
testb
repnz
test
aas
sbb
imulb
push
and
sub
fsubr
lcall
xor
mov
cltd
inc
aam
pop
cmp
dec
popl
pusha
mov
jno
and
fisubl
in
mov
fdivrs
loopne
mov
sub
into
jae
bound
dec
iret
mov
imul
mov
pop
ss
les
or
fmull
lret
inc
cltd
scas
rclb
repz
push
enter
xor
sub
mov
add
pop
bound
mov
push
sbb
iret
dec
and
shrb
xlat
mov
sub
int
loopne
arpl
mov
push
sub
loope
outsb
scas
push
aad
push
outsb
mov
xchg
daa
dec
and
pop
stos
add
fistpl
out
mov
lock
fwait
lret
hlt
mov
mov
aaa
jnp
in
sti
xor
jmp
pop
out
or
movsl
xor
lods
sub
scas
and
push
push
fxch
push
jecxz
xchg
outsb
cmp
bound
push
mov
and
jns
dec
cld
xor
xor
mov
mov
pop
add
dec
mov
ret
movsb
cmp
jle
mov
fwait
popf
adcb
bound
add
aaa
inc
movb
xor
lret
xchg
and
repz
data16
lret
mov
jl
imul
and
insb
push
mov
cmp
insl
or
cmp
rcl
imul
test
cmp
loop
test
inc
mov
mov
dec
add
pushf
je
and
push
cs
mov
mov
dec
mov
inc
cmp
or
lret
mov
dec
in
mov
xchg
fmull
cltd
shlb
dec
icebp
dec
test
sbb
pop
lock
cltd
adc
add
pop
lods
cmp
aas
cmp
mov
pusha
std
movsb
out
mov
imul
pop
mov
inc
rorb
outsb
scas
mov
iretw
fisubl
cmp
mov
lods
js
mov
cld
pop
mov
bound
and
cmpsb
push
dec
ret
in
cmp
or
aam
scas
jl
imul
pop
out
push
add
adc
inc
mov
xor
repz
mov
dec
mov
xchg
sar
cmp
and
inc
js
mov
jne
test
add
jp
or
dec
jbe
lods
xchg
mov
push
sub
aam
fidivs
mov
in
popf
and
popa
jo
cmpsb
hlt
cmp
jecxz
pop
cs
stos
push
loope
dec
or
les
xchg
bound
aas
dec
jnp
les
dec
inc
fisttpll
jl
sbb
je
shll
jbe
xor
add
xchg
and
sub
loop
pop
repnz
xchg
aam
xchg
jl
popf
sti
adc
cmp
mov
inc
sub
xchg
push
std
aam
dec
add
pop
jnp
in
les
mov
lds
pop
fdivp
das
bound
lret
xor
xchg
or
scas
pop
and
inc
xor
and
mov
in
ss
aad
ret
ret
out
sub
xlat
ljmp
shll
repz
push
test
insl
bound
cmpsl
lock
aas
jp
sub
pop
xor
mov
pop
and
sub
rcrl
jecxz
in
xor
xorl
sbb
dec
dec
aas
fistl
test
lock
cli
xchg
inc
lcall
call
fistps
xlat
cmc
cmp
sub
adcl
sub
arpl
mov
and
imul
inc
enter
dec
insl
xchg
cwtl
xor
mov
adc
notb
push
push
xchg
sub
imul
jge
xchg
aad
clc
scas
into
jne
out
sub
popf
pop
mov
fs
and
sbb
jecxz
insb
stc
add
insl
mov
je
shrl
sahf
pop
push
sub
mov
pop
xchg
adcb
rorl
and
push
iret
icebp
mov
int
and
mov
pushf
mov
jmp
cmpsl
aaa
jl
mov
sub
mov
ret
jle
repz
inc
push
lea
add
xlat
mov
cmp
dec
mov
iret
and
pop
test
sbb
cmc
inc
outsb
sbb
adc
cmp
add
cmp
sti
mov
int3
push
jmp
cmp
out
enter
pop
scas
ss
fildl
cld
in
dec
enter
out
or
sub
out
mov
les
lds
aaa
mov
xlat
or
jg
mov
and
call
out
adc
leave
mov
jl
fmuls
mov
xchg
loope
mov
lock
movsb
test
cli
mov
inc
rcl
popf
push
mov
dec
or
cmpsb
subb
cmpsl
jge
sbb
aad
gs
and
mov
lret
cli
xchg
ss
clc
div
outsl
fnstenv
sbb
add
mov
cmpsb
inc
js
add
cmp
fwait
test
pop
or
pop
notb
sub
faddl
cmp
bsr
es
in
push
pusha
cmp
out
jecxz
dec
mov
push
pop
repnz
stos
push
pusha
movsb
xchg
cs
push
cmp
push
sbb
pop
bound
pop
cltd
dec
push
sti
pop
mov
addl
cs
popf
push
cmp
pop
aad
imul
fdivrl
outsb
push
add
xchg
or
and
das
add
adc
adc
push
sub
cmp
les
ss
mov
cmpsl
cmp
cltd
leave
xchg
bound
adc
loope
out
mov
andb
insl
push
mov
jo
mov
push
iret
inc
aas
daa
cwtl
and
add
scas
in
test
dec
addr16
xlat
or
ja
mov
inc
mov
inc
sahf
pop
or
mov
mov
lcall
xor
inc
lods
jne
das
dec
jecxz
xor
xor
dec
mov
adc
mov
outsl
sub
lods
cmpsl
mov
aam
aaa
outsb
push
movsl
addr16
mov
rolb
in
xor
lret
jnp
nop
repz
mov
xor
and
mov
inc
push
sbb
subl
xchg
xchg
loope
xchg
stos
add
pop
imulb
inc
mov
or
mov
sub
repnz
adc
idivb
movsl
cmp
mov
rclb
data16
mov
jns
sub
or
mov
cmc
adc
add
sub
and
hlt
and
insl
xor
int3
jp
cltd
sbb
inc
hlt
imul
jl
mov
fs
jecxz
arpl
add
bswap
pop
adc
inc
int3
jge
bts
clc
sti
mov
rol
or
add
gs
jns
or
pop
cmpsl
mov
inc
push
pop
aad
scas
xchg
nop
mov
dec
xor
cmp
jge
xchg
fbstp
xchg
ja
mov
loope
repz
imul
push
jo
out
in
xchg
mov
icebp
cmpl
fmulp
mov
dec
jecxz
cmp
sarl
cltd
cmp
push
push
clc
lods
lret
ljmp
add
xor
push
ret
jle
xor
sahf
std
jbe
pop
jge
icebp
sahf
add
mov
out
inc
xchg
jne
test
pop
mov
es
test
mov
xchg
jecxz
xorb
mov
mov
jnp
hlt
xchg
std
fcoms
inc
into
mov
loope
lods
int
push
sbb
adc
or
pop
xchg
cmpsb
and
mov
mov
shll
xor
gs
dec
sbb
dec
add
ret
push
pop
shl
fimull
adc
ja
inc
rcrb
pop
js
js
and
sub
repz
imul
cmp
loop
ret
pop
add
loopne
push
hlt
pop
loopne,pt
out
inc
ss
aas
cmp
mov
test
jmp
push
mov
add
pop
xchg
insb
es
push
xor
xor
lods
pop
ficomps
popf
rorl
and
arpl
ror
lret
sub
iret
and
jl
jno
adc
add
adc
and
mov
inc
add
daa
fdivs
rolb
and
mov
inc
inc
xor
pop
faddl
dec
or
xor
sub
dec
cmp
fiaddl
daa
hlt
inc
ret
mov
and
popa
pop
mov
mov
pop
ljmp
fwait
lret
sbb
popf
or
sahf
in
lret
std
pop
xchg
mov
aaa
mov
add
sub
push
jle
mov
mov
push
pusha
aaa
mov
mov
stc
into
ret
cmp
in
add
fsubl
add
insl
es
push
push
movsb
inc
fisubrl
add
jecxz
decb
jmp
das
xchg
popa
lahf
xor
add
daa
adc
das
roll
inc
mov
lcall
sahf
ss
sub
push
je
dec
jmp
mov
in
fwait
mov
shlb
inc
outsb
daa
ljmp
push
pushf
imul
jbe
out
pop
loope
sbb
es
or
nop
mov
dec
jo
outsb
aad
insb
mov
jno
icebp
mull
ss
sbb
fsts
mov
cmp
in
cmpsb
dec
out
pop
add
mov
in
push
sub
sbb
jbe
dec
push
push
xchg
mov
insl
rcl
add
cmp
dec
insb
pushf
imul
inc
arpl
ss
aaa
jbe
fmuls
or
aaa
mov
das
pop
push
iret
daa
mov
sbb
stos
mov
xchg
pop
jle
mov
arpl
ret
shl
mov
orl
push
fwait
adc
stos
rcll
and
push
mov
lods
in
int3
adc
pusha
loope
movsl
ret
loop
out
adc
pop
iret
sub
stos
push
push
fmulp
adc
into
xchg
std
push
ja
test
fwait
add
loope
cmp
mulb
lods
push
push
imul
jo
fsubs
out
jbe
out
inc
or
insl
pop
or
dec
arpl
ret
cli
mov
cmpsl
aaa
and
mov
pusha
push
mov
xchg
jno
sbb
aad
sub
out
and
add
clc
or
aam
pop
add
xor
gs
sarb
mov
lret
pop
cs
and
pop
xchg
mov
jp
xchg
outsl
or
popf
fs
aaa
sti
jnp
xchg
hlt
stc
stc
pop
dec
cmpsl
xchg
pushf
or
or
sbb
ja
pop
xchg
insl
push
mov
add
push
xchg
mov
call
lahf
add
mov
push
jno
out
in
ljmp
ror
hlt
dec
inc
call
cmp
repnz
mov
cmc
lea
popf
scas
sub
cmpsb
loope
mov
cmp
scas
fs
xchg
lock
xor
sub
xchg
push
sub
or
aad
xor
mov
lea
mov
xchg
pop
mov
push
dec
mov
cmpsl
adcl
imul
or
in
sbb
mov
clc
int
cmpb
scas
or
mov
mov
inc
bnd
and
in
mov
data16
loope
data16
das
cmpsl
add
std
fs
inc
lea
adc
cmp
jmp
nop
pop
leave
into
xchg
mov
jle
out
arpl
add
jne
jg
and
stc
adc
lds
cmc
jle
xor
xor
movsl
xchg
out
jge
mov
inc
mov
dec
inc
add
jo
fucompp
int3
das
sbb
cmp
rorl
push
fiadds
fsts
aam
addr16
daa
pop
push
add
or
push
cwtl
mov
xor
cmp
test
inc
rcrb
int
sbbl
pusha
xchg
or
pop
test
mov
fisttps
stos
aam
jle
lahf
xchg
jl
iret
out
ds
inc
jg
jae
xor
adc
daa
jp
jo
pop
jg
outsl
in
jecxz
loop
adc
sbb
shlb
xchg
fwait
pop
nop
add
call
gs
pop
std
cmc
cmp
divb
fstps
rcrl
pusha
jne
popa
lret
dec
sbb
ja
or
mov
jb
cwtl
sub
jnp
push
das
insl
cltd
test
shl
push
leave
pop
dec
dec
orb
push
test
sbb
cli
inc
pop
cs
xchg
popf
pop
sub
ret
fmull
sub
mov
stos
jnp
pop
xor
pop
jbe
xchg
andb
jbe
mov
mov
je
push
or
fsts
xchg
mov
inc
jl
mov
cli
scas
mov
add
lods
stc
mov
and
lahf
jno
jbe
cltd
mov
xor
nop
cmp
pusha
icebp
aaa
or
aaa
adc
sub
ss
sbb
out
sub
jb
xchg
mov
cmpsb
scas
or
fs
data16
imul
adcl
pop
mov
mov
add
adc
adc
test
lret
jne
addl
pop
pop
cli
imul
mov
fistpl
enter
movsl
pop
leave
out
es
and
or
jno
sti
adc
shl
lds
pusha
sub
dec
outsl
rcrb
inc
aaa
adc
add
cmp
ja
stc
ret
xor
mov
pop
dec
adc
jae
lods
lret
inc
repnz
insb
ds
imul
xor
test
and
and
or
sbb
enter
cmp
popf
inc
push
addb
cltd
jg
notb
adc
push
sbb
xchg
jbe
bound
dec
pop
test
fidivrl
bound
sbb
inc
and
mov
jbe
int3
push
push
cmc
pop
sub
mov
shlb
lret
sub
subb
mov
mov
push
mov
dec
stc
cli
dec
cmp
lds
and
mov
rolb
mov
mov
pop
mov
les
fdivrl
cmp
loopne
imul
rcll
pop
push
cwtl
or
cli
lods
inc
cmp
dec
push
clc
add
orl
mov
push
fdivr
inc
adc
cs
adc
inc
stos
mov
and
xor
cli
mov
pop
sbbb
test
das
adc
xchg
fs
mov
and
mov
scas
xlat
arpl
aaa
aas
aad
cmp
dec
xor
mov
inc
int
jae
iret
push
in
outsl
jne
pop
ret
mov
jecxz
incb
jne
xor
pop
mov
sub
enter
dec
mov
rdpmc
adc
in
mov
out
adc
outsb
adc
mov
add
mov
add
popf
dec
dec
insl
mov
daa
jbe
mov
repz
psubusw
loopne
xchg
test
enter
fisubrs
call
dec
mov
shll
and
sub
push
popf
jne
fistps
cmp
arpl
addl
xor
and
lcall
out
clc
jo
fsts
icebp
xchg
push
cmp
push
lds
push
outsb
in
jno
fstpt
mov
repnz
cli
out
lret
loope
idiv
push
out
xchg
push
or
xchg
mov
mov
fistpll
test
ret
push
outsb
xor
mov
adcb
push
mov
xorl
xor
lods
stos
cltd
in
jno
xor
dec
add
cmovp
enter
cmc
rcrb
adc
popa
lahf
mov
movb
iret
xor
js
shll
xlat
add
inc
mov
aad
ret
jbe
dec
decl
add
not
sbb
test
sbb
scas
out
pop
xchg
dec
rcrl
roll
shr
addr16
loopne
xlat
es
fcmovnu
insl
test
sahf
jl
mov
nop
in
fwait
rcrl
dec
push
int3
notl
jae
rcr
push
jbe
cmp
in
mov
push
insb
xchg
std
mov
mov
mov
mov
cmp
jle
add
sahf
out
fstpl
sub
jle
mov
repz
fwait
add
jno
push
cli
ret
fldl
cmp
jno
mov
fcoml
clc
test
xchg
fmul
fildll
add
xchg
push
adc
fsubr
mov
sti
pushf
andnps
aam
and
jle
je
push
jo
mov
out
out
mov
or
adc
and
and
xchg
aad
mov
cmp
mov
sub
dec
in
xchg
mov
and
sub
mov
adc
push
cmp
into
stc
iret
pop
pop
and
jp
pop
mov
and
lcall
popa
push
sbb
add
jae
jno
leave
int
rol
xcrypt-cbc
cmpsl
shl
pop
je
inc
adc
popa
mov
add
inc
add
xchg
call
mov
in
jle
and
add
mov
sbb
mov
xor
or
andl
xor
jb
fcoms
cli
jg
xchg
mov
push
or
outsb
pop
lret
in
loopne
jbe
out
ret
pop
jno
push
dec
pop
fisttpll
mov
popf
xchg
fs
daa
frstor
push
repz
sti
enter
pop
add
lcall
insb
mov
fldenv
pop
adc
sub
adc
pop
adc
inc
hlt
xchg
dec
lret
xchg
out
lock
jg
pop
or
cmpsb
xor
jge
cmp
jbe
out
push
push
mov
add
pop
insb
aaa
xchg
dec
in
icebp
xor
sub
js
in
mov
adc
popf
jp
mov
out
mov
mov
and
push
push
gs
ret
insl
jae
ja
cli
mov
gs
fcmovbe
xor
cltd
mov
push
das
xor
data16
sbb
mov
mov
mov
fstpt
jl
pop
and
jmp
lock
mov
not
loopne
adc
xchg
lcall
std
mov
call
test
dec
mov
fdivrl
inc
or
pop
inc
xchg
sub
and
mov
aam
mov
sti
out
jmp
sub
dec
push
jne
jecxz
or
adc
imul
pop
mov
lods
ret
mov
push
loop
add
adc
add
dec
xor
lret
mov
sbb
push
fiadds
sahf
decb
pop
mov
sbb
inc
adc
jecxz
push
call
sub
hlt
aaa
scas
aam
pushf
hlt
push
lea
jb
hlt
mov
push
leave
jb
push
es
seta
mov
jbe
mov
stc
lea
fxch
cmp
cmpsb
and
jnp
in
ljmp
iret
dec
pop
add
jno
mov
popa
jnp
dec
scas
outsl
jge
mov
cmc
adc
mov
repz
push
fmulp
jnp
push
sbb
add
cmp
into
mov
inc
les
repnz
dec
inc
jmp
jnp
test
loope
sbb
movsl
test
mov
adc
cmp
xchg
daa
leave
jl
std
push
test
xchg
jo
leave
in
or
in
enter
es
std
shlb
aam
mov
iret
inc
aam
mov
dec
je
fldt
jecxz
outsb
jmp
sbb
mov
xchg
orb
or
test
push
push
sub
sub
dec
dec
fisubl
mov
sti
push
cmp
dec
jmp
lods
cmp
leave
and
lds
sub
cli
cmp
cmp
nop
rorb
mov
dec
pop
mov
pushf
je
jl
cmp
ds
idiv
mov
xchg
mov
in
adc
shrb
sahf
mov
mov
jl
leave
or
cmp
lahf
mov
xchg
pop
xor
jg
ss
call
ficoml
xchg
hlt
repz
push
mov
test
push
add
jne
mov
loop
sub
inc
ss
out
or
ret
and
push
scas
mov
mov
leave
test
rcll
pop
add
rcll
es
pop
mov
mov
dec
testl
mov
int
loopne
clc
bound
imul
ss
sbb
sbb
mull
xchg
imul
loop
test
das
push
fcmove
dec
out
cwtl
or
loope
lea
add
les
adc
jo
inc
lds
cmp
mov
gs
pop
fnstenv
adc
in
mov
dec
aam
mov
std
aaa
pop
inc
push
je
jmp
addl
sub
jns
cli
push
cmp
inc
sbb
rcll
push
sbb
sub
and
jb
je
je
xor
xor
loopne
clc
adc
fsubs
dec
ds
sahf
cltd
cmc
lcall
xchg
fimuls
test
and
icebp
in
sbb
sbb
lea
mov
cmp
nopl
or
sbb
push
loope
shlb
sbb
mov
cld
es
shrb
gs
repz
pop
cmp
and
push
push
loopne
ret
ffreep
mov
mov
jnp
mov
pop
jle
or
xchg
stos
adc
push
repnz
mov
in
sub
addr16
adc
xlat
push
xor
xor
xchg
mov
sub
pop
xchg
cmp
dec
test
add
adc
jo
adc
adc
test
rcrl
dec
iret
push
mov
fcmovnb
sbb
jns
and
lahf
xchg
xchg
xor
or
sbb
add
sbb
mov
pushf
xadd
inc
jbe
enter
sbb
aam
hlt
andl
inc
iret
pusha
enter
xchg
shll
sub
xor
movsl
test
sbbb
movsb
inc
jmp
notb
stos
ljmp
xchg
repz
lahf
lret
cmp
dec
push
stc
mov
inc
addl
jg
cmp
inc
xchg
inc
and
outsl
inc
xor
adc
dec
subb
aaa
adc
and
lock
push
fs
popf
test
lds
jmp
xchg
jg
jns
mov
or
dec
call
lret
and
dec
or
cwtl
cwtl
je
insb
jmp
std
inc
xchg
sti
int3
xchg
push
imul
and
mov
cmc
in
js
adcl
sbbl
xor
lods
mov
mov
mov
lret
cmp
aad
aad
fstl
push
mov
dec
cmp
and
pop
sub
dec
mov
xchg
jae
arpl
and
lods
inc
push
or
push
aam
in
insb
pop
mov
cmp
cmp
xor
ja
push
lds
rorl
dec
loop
push
xlat
cmp
out
pop
xor
xchg
xchg
cmp
push
or
sbbl
xchg
dec
adc
fwait
or
cmp
push
xor
jle
fiaddl
imul
and
loop
jg
add
inc
push
je
fisubs
xor
aaa
pusha
xlat
mov
mov
push
push
pop
mov
xchg
inc
div
in
ficoml
jmp
xor
sub
add
outsl
aaa
xchg
mov
adc
mov
xchg
xchg
dec
sub
shlb
adc
jle
mov
or
and
cs
adc
cmpl
jnp
cld
in
or
ret
add
cmpsl
arpl
sbbl
test
inc
push
mov
inc
mov
in
mov
mov
pop
mov
ljmpw
rcl
pop
clc
je
mov
icebp
mov
and
fwait
push
dec
iret
data16
cmc
inc
sbb
xlat
movl
rclb
movsl
xchg
mov
ljmp
aaa
dec
call
sbb
mov
lahf
fcomps
cs
cmp
jno
pop
jb
fadds
push
lahf
out
in
test
inc
push
mulb
or
and
sbb
dec
fidivs
cmpb
sub
jns
mov
mov
adc
hlt
push
fwait
pop
or
aad
adc
adc
xchg
rcr
mov
lcall
push
pop
into
xor
pop
arpl
sub
je
xor
adcl
jle
vphaddwd
mov
jmp
cld
push
xchg
mov
mov
and
sahf
in
ja
pop
mov
and
test
out
repnz
leave
mov
inc
jbe
pop
in
cmpsl
sbb
push
cltd
jp
dec
sub
add
cmpsl
xchg
push
push
inc
cmpsb
scas
jno
push
arpl
and
xchg
xchg
loop
mov
sar
dec
aaa
lock
mov
sub
pusha
mov
push
hlt
or
scas
in
mov
rcll
jle
jo
mov
xor
jnp
sarb
scas
loopne
mov
lea
popf
cmp
cmp
pop
aaa
pushf
mov
mov
inc
sbb
adc
shll
and
ljmp
pop
mov
js
dec
gs
ljmp
popa
add
sbb
ljmp
bound
adc
jge
fmul
dec
sbb
stos
inc
add
sti
pop
add
mov
push
pop
stc
data16
pop
mov
insb
adc
imul
add
pop
aam
mov
sub
and
mov
inc
xchg
pop
daa
sub
ret
dec
xchg
int
insb
daa
adc
int3
imul
xor
adc
lret
rorb
scas
mov
mov
rorb
mov
popf
cmp
and
mov
or
cmc
sub
xlat
pushl
rolb
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
sbb
rcrb
pop
cmp
inc
jmp
cmp
jp
mov
mov
shlb
jmp
and
pop
and
jbe
mov
cmp
into
or
jnp
inc
lret
fisubrs
lret
xchg
adc
lret
mov
fwait
out
lods
stos
ja
scas
mov
lahf
nop
add
cmp
inc
orb
ds
mov
wbinvd
arpl
hlt
mov
cltd
xchg
cmpsb
cmc
mov
divl
mov
cmp
dec
jecxz
lods
jbe
dec
nop
add
test
mov
std
mov
mov
cmc
jge
push
xor
mov
adc
jae
mov
fneni(8087
pop
push
mov
andb
pop
stc
mov
adc
mov
fstpt
inc
dec
push
mov
sub
add
std
pop
cmpsb
adc
sti
fcomp
sub
std
cmp
mov
ja
fcomip
loopne
in
js
add
mov
outsl
ud0
push
hlt
imull
mov
lods
aad
cmp
rcrb
pop
push
insb
punpcklbw
sbb
mov
pusha
push
and
mov
gs
push
sbbl
xchg
imul
dec
pop
dec
jns
adc
in
scas
dec
movsl
sub
push
sti
into
sub
xchg
xchg
incl
ror
mov
loopne
xor
fmull
jne
shlb
jge
negb
repnz
jge
adc
ljmp
in
push
sti
loope
seta
fld
cli
into
jo
rcll
sbb
and
popf
ljmp
sbb
mov
cmp
jne
cmpsb
sub
outsl
jle
imul
in
out
cltd
ret
push
imul
fists
lds
es
pop
adc
fs
scas
inc
outsl
repnz
lret
fildl
aaa
je
repz
push
cmc
xchg
mov
inc
movups
cmp
dec
add
mov
adc
inc
fwait
xor
in
dec
arpl
out
pusha
ucomiss
outsl
and
dec
arpl
movsl
mov
ja
lret
add
popf
imul
dec
gs
adc
push
lcall
add
les
push
ds
pop
out
jbe
xchg
fadd
mov
sbb
in
lret
jle
cmpsl
repnz
mov
sub
imul
test
insl
mov
out
loop
jp
gs
js
stos
push
call
dec
fstpl
jae
cwtl
jecxz
mov
push
lret
imul
xor
gs
and
sbb
pushf
cld
and
les
pop
scas
es
cmp
sbb
data16
and
loop
jne
push
out
adc
sbb
push
popf
pop
xchg
addr16
jo
xorl
sub
mov
push
inc
shrb
mov
mov
icebp
nop
or
xchg
aas
lret
fisubrs
je
jl
mov
fsubl
mov
bound
push
xor
enter
test
inc
lods
outsl
loope
inc
add
inc
mov
or
in
call
aaa
jb
mov
int3
cmpsl
sbb
ljmp
out
jl
mov
push
jb
mov
add
fisubl
js
jle
lods
cmp
sub
fisttps
fcomi
fldl2t
mov
mov
mov
jbe
push
jbe
jge
ret
dec
fimuls
and
mov
shrl
cmp
mov
fiadds
mov
mov
scas
mov
or
mov
call
xor
mov
loopne
add
dec
into
mov
adc
das
pop
xchg
and
aaa
jns
out
outsb
xor
inc
inc
mov
int
cmp
sbb
xchg
sbb
daa
sub
test
dec
es
inc
inc
and
mov
insb
lret
xor
dec
leave
xor
loop
adc
push
pop
sbb
es
or
sbb
and
cmpb
jb
jge
sub
dec
js
sbb
cmc
mov
mov
pusha
or
fnstcw
shlb
pop
mov
bound
cmp
pop
fidivrs
pop
test
aam
jl
sahf
dec
stc
sbb
jb
mov
sbb
mov
inc
aaa
imul
pop
xchg
cld
aaa
shrl
lock
xor
push
sbb
dec
mov
push
dec
in
stos
clc
into
fsubr
mov
in
fistl
lret
push
lods
jnp
leave
in
push
mov
xor
sub
mov
xchg
movups
outsb
xchg
aas
aaa
movsb
or
lcall
xor
cmp
mov
bound
jns
cmp
loop
sub
aaa
stos
aas
aad
or
hlt
fxch
nop
aas
insb
dec
arpl
mov
loopne
stos
and
push
pop
das
adc
dec
in
cmc
filds
mov
lahf
mov
insl
push
jo
sbb
pop
mov
push
outsl
xor
in
stos
cmpsb
adc
mov
adc
push
ss
pushf
lock
icebp
sbb
ljmp
iret
mov
jg
jecxz
filds
ret
jmp
adc
inc
scas
je
and
xor
incl
add
orl
dec
xorl
fwait
mov
adc
pop
ljmp
or
pusha
ds
in
mov
add
seto
jmp
test
out
stos
inc
daa
cli
sub
sbb
inc
jmp
cmp
rcrb
jnp
dec
fstl
lahf
das
sub
jae
jg
aas
stos
ds
cli
mov
clc
dec
scas
mov
arpl
rcl
jb
and
push
sbb
push
xchg
jg
pop
jecxz
arpl
fcompl
in
push
fisttpll
xchg
fxch
enter
js
push
cmp
inc
xchg
xchg
xchg
lods
jecxz
fs
ficoml
push
adc
xchg
push
fs
addl
clc
icebp
jae
stc
sti
je
int
roll
out
shlb
mov
repz
push
mov
sub
mov
or
or
fwait
mov
movsb
in
out
and
call
jb
cmp
xchg
cltd
rcrl
jecxz
mov
cmp
adc
and
jb
shlb
test
pushf
popf
lods
imul
push
add
push
or
int
divl
addr16
lret
stos
popf
stc
js
add
cmp
in
std
scas
xchg
test
and
mov
mov
add
mov
cmpsb
clc
imul
subb
adcb
or
sahf
into
stc
jno
cmp
cld
std
or
popf
sbb
fxch
outsb
std
xchg
mov
movsl
push
jne
inc
lock
inc
ret
xchg
push
cmp
cltd
xchg
push
pop
gs
lock
sbb
clc
pop
mov
mov
daa
jmp
das
sub
pop
nop
test
aaa
hlt
loopne
cmpsl
in
cmp
rol
out
and
jbe
ret
and
mov
mov
js
stc
lock
scas
or
dec
les
cmpb
xor
inc
xchg
in
jle
and
cltd
movsl
movsb
lcall
mov
inc
dec
cmovge
dec
push
cli
clc
outsl
sub
testl
lds
push
orb
gs
stos
sahf
mov
sub
insl
push
dec
cs
fldenv
xchg
pop
sbb
aas
push
popl
cld
outsb
das
scas
and
or
add
xchg
popf
pop
cmpl
inc
jmp
dec
in
push
je
xchg
enter
lock
movsb
in
mov
mov
xchg
sub
imul
gs
push
insb
sbb
or
pop
loope
jne
mov
adc
rol
jge,pn
int3
or
int
inc
mov
jmp
sub
test
adcl
push
rcll
mov
lcall
ret
inc
popf
lds
xchg
or
sbb
cmp
addr16
mov
push
lods
mov
cltd
repz
das
lods
xor
imul
roll
pop
inc
rcrb
mov
nop
inc
fld
cli
lods
inc
lret
add
imul
and
pusha
out
aaa
loop
ret
ja
push
and
imul
lock
mov
aas
sbb
jae
enter
xchg
push
and
or
outsb
sarb
or
xchg
xchg
or
pop
nop
popa
nop
ds
push
sarb
mov
mov
xor
and
scas
mov
sbb
adc
xchg
fstps
cmp
cmpsl
mov
ds
int3
mov
outsb
mov
popa
dec
mov
pop
sarb
xor
dec
loope
and
addr16
jecxz
sbb
cld
nop
movsb
std
notb
lret
push
or
adc
dec
push
stos
and
sbb
mov
mov
jl
push
xchg
jnp
out
into
mov
xchg
data16
addr16
dec
pop
andb
sbb
ss
mov
jns
and
dec
mov
pop
jno
cli
add
jns
inc
and
push
arpl
mov
shll
or
nop
scas
outsl
lret
orb
lea
pop
mov
das
cmp
or
xchg
loop
dec
jmp
add
sub
and
outsb
xor
sub
xchg
es
loop
sbb
add
lods
int
mov
sbb
inc
stc
into
dec
adc
fisubl
add
arpl
incl
es
pop
xorb
mov
sub
xchg
rcrb
jb
mov
imul
test
pop
cmp
insl
xlat
test
or
jl
xchg
jl
mov
arpl
or
lods
jno
icebp
ss
shl
in
int3
or
mov
adc
loopne
repz
rolb
xchg
mov
movl
cmp
shll
call
test
jns
mov
in
cmpsb
scas
xchg
sbb
movsb
aam
add
or
dec
imul
fsubrl
test
popa
addr16
mov
rcr
xor
mov
insl
arpl
mov
in
std
jmp
sbb
daa
loope
loope
sub
aad
ss
pop
xchg
mov
sahf
je
and
popf
insl
sub
fdivs
pop
pop
rcl
pop
mov
dec
jnp
ljmp
dec
in
adc
rcll
mov
sbb
cmp
cli
aad
js
adc
fimuls
out
cmp
add
adc
xchg
lahf
lods
cltd
pop
mov
mov
mov
shlb
mov
notl
push
mov
jmp
fstps
repnz
cltd
sahf
movsl
or
cltd
sub
popf
nop
scas
dec
sbb
leave
mov
inc
cmp
aad
and
dec
push
mov
dec
jne
outsl
push
sbb
sarl
outsb
inc
out
and
scas
enter
jae
lret
stos
lcall
mov
adc
sub
sti
fmuls
and
dec
adc
push
popf
xor
out
rcrb
mov
push
add
outsl
cmovbe
mov
xchg
mov
jecxz
cmp
fcmovnb
fst
pop
push
push
pop
sub
fs
xlat
popf
jo
jmp
jle
dec
pop
dec
addr16
fwait
cmc
push
cmp
pop
insb
dec
dec
sub
and
shl
xchg
je
xchg
int
xchg
into
pop
clc
rolb
popf
adc
movsb
out
sbb
mov
movsl
aam
adc
iret
movzwl
repz
test
xchg
in
in
mov
scas
mov
mov
jecxz
fcmovnb
dec
push
mov
das
lret
xchg
jl
in
jnp
cmp
mov
and
movsb
mov
bound
xor
mov
xchg
mov
cmp
lods
dec
jo
fs
lds
push
fisubrl
xchg
adc
sbb
xlat
std
js
rorb
popa
mov
faddl
sbb
push
ficomps
addl
cmp
inc
fstl
popa
or
cmpsl
int
adc
push
sbb
lret
fwait
insb
out
mov
mov
cmpsl
or
mov
cmp
je
inc
lds
stos
fisubrl
stc
idiv
enter
and
inc
xchg
sbb
cmpsl
xchg
divb
fwait
std
sub
orb
inc
push
pop
sbb
mov
std
ja
inc
inc
inc
push
mov
mov
and
scas
push
mov
or
pop
sub
xadd
or
xchg
loope
fs
jmp
push
cli
neg
pop
cltd
or
ret
movsl
repnz
jno
cmp
call
cmp
inc
popa
lock
and
mov
sbb
daa
add
fcomps
sbbl
nop
jge
or
scas
fcmovb
mov
fdivs
mov
fincstp
sub
push
xchg
sahf
add
cmp
push
sub
mov
adc
and
sub
mov
fiaddl
push
in
insl
in
dec
sbb
mov
cmpsl
loopne
fldcw
lock
xchg
cld
mov
stos
sub
stc
shlb
lds
cmp
int3
mov
inc
ss
shlb
andb
lock
hlt
frstor
inc
enter
lahf
xchg
xchg
stc
icebp
adc
push
incb
mov
movl
test
dec
adc
xchg
xchg
cmp
lea
jge
or
push
jmp
test
rorl
cs
push
mov
shr
jns
in
pop
and
lcall
outsl
xchg
add
mov
in
hlt
add
mov
sbb
jns
jge
in
dec
div
adc
lods
addl
sub
xor
cmc
xorb
lret
push
arpl
cld
cli
sub
push
mov
outsl
dec
adc
and
xchg
push
inc
pusha
or
dec
imul
inc
xchg
sbb
mov
xchg
std
add
xchg
add
mov
mov
aaa
popf
jle
insb
int3
and
int
jnp
push
loopne
sahf
in
repz
faddl
stc
inc
and
lcall
jg
sub
les
sbb
mov
decl
fadds
mov
fmuls
or
push
lret
pop
sbbb
add
mov
sbb
test
xor
mov
inc
jmp
jge
mov
pop
fs
mov
clc
jg
sbb
inc
jns
mov
out
insl
icebp
cmp
not
gs
cmp
xchg
sbb
or
stos
inc
mov
loop
dec
in
lret
aam
jp
mov
dec
or
cmp
cmp
les
sub
lret
or
js
das
mov
xchg
pop
jmp
inc
sbb
shlb
mov
cwtl
sbb
mov
push
nop
fstps
xchg
dec
mov
xchg
ja
adc
mov
xorps
adc
xor
in
sub
push
mov
ffreep
notb
fistl
push
inc
xor
push
adc
adc
mov
xchg
and
cmp
out
pop
int
mov
shrb
popf
outsb
mov
subb
push
push
cmp
xchg
enter
sti
jnp
je
addr16
aaa
jb
cmp
jp
or
push
call
cmpsl
out
dec
push
sub
cmp
mov
sbb
lahf
fnsave
xchg
sub
xorl
shrl
or
adc
add
aas
cmp
mov
pop
stc
inc
mov
push
xchg
adc
mov
in
sahf
popa
mov
fdivl
shrb
adc
sbb
mov
jecxz
inc
shl
mov
dec
fwait
push
movsb
mov
cmp
fistpl
rol
stos
setno
and
dec
jo
repz
in
cmp
out
jge
out
jp
int
jnp
sti
cmp
cli
or
mov
mov
ja
and
ret
daa
xor
sub
pop
and
push
push
xlat
jae
mov
sbb
decl
fidivrs
bound
daa
add
mov
stos
and
fsts
mov
jns
ss
pusha
lods
icebp
sbb
inc
test
faddl
ljmp
dec
dec
je
outsl
cmpsl
adcl
and
call
pop
jae
jecxz
cmpsb
mov
jb
jge
cmpsl
sub
mov
iret
aam
data16
pusha
out
notb
outsb
lds
mov
sub
cwtl
dec
ljmp
dec
mov
dec
mov
mov
shlb
inc
or
push
mov
fmull
insb
into
xchg
add
dec
xor
ja
loop
sbb
push
imul
pop
ror
cs
out
dec
pop
mov
mov
test
add
ret
scas
dec
xor
sub
dec
dec
cmp
movsb
lret
andl
lea
divl
pop
add
inc
and
enter
xor
jecxz
sbb
mov
adc
push
mov
sub
xor
jbe
sbb
and
mov
adc
loope
mov
fildl
xchg
pop
xlat
scas
bound
jnp
subb
sti
aaa
jle
mov
jmp
repnz
iret
in
fstl
and
aaa
jl
and
jnp
lahf
sbb
jnp
and
insl
in
stos
add
xchg
pop
insl
mov
sarl
data16
xchg
call
in
jecxz
aas
test
mov
test
outsl
cmp
mov
test
jo
mov
jb
sub
mov
add
dec
push
leave
mov
sbb
std
ljmp
jg
jmp
lret
xchg
push
cmpsb
clc
jge
std
repz
rcr
pop
sbb
aad
fs
cmpsb
mov
fs
sub
dec
mov
je
imul
fistpll
and
test
sbb
push
icebp
jae
imul
in
insl
push
xchg
mov
adc
add
xchg
or
dec
push
mov
or
mov
push
mov
scas
mov
movsb
leave
rclb
hlt
ret
pop
pop
ficomps
mov
gs
pusha
addr16
pop
icebp
cld
add
pop
popf
push
lea
push
dec
xlat
pop
repz
jl
cmp
jo
test
loop
cmc
mov
pop
dec
mov
mov
mov
mov
stos
jne
jnp
cwtl
xor
or
or
lea
rcr
call
outsb
jl
dec
jl
test
imul
jmp
movsb
ret
imul
mov
mov
mov
pop
lock
xlat
mov
pusha
cmp
push
jp
cmc
call
cmpsl
and
push
cmp
fstpt
push
mov
or
icebp
sub
fimull
je
cld
shrl
shl
ds
lods
lret
jnp
inc
push
and
sub
scas
les
imull
add
dec
adc
fs
testl
test
or
pop
mov
es
mov
imul
insb
rolb
add
lret
cmp
aas
cmp
lret
ja
repz
and
jae
cli
sbb
inc
fwait
adc
cmp
neg
and
or
adc
jnp
pop
arpl
outsb
insb
rorb
xor
cmp
popa
lods
dec
shrb
cld
inc
ljmp
arpl
add
fwait
mov
fbstp
shr
mov
addr16
and
pop
cli
pop
jl
shlb
sbb
mov
push
jno
ret
mov
jecxz
fistpll
mov
dec
and
pop
jl
aad
shll
or
loopne
fadd
adc
dec
or
jae
fldenv
xor
push
inc
adc
jns
sarb
shlb
dec
inc
leave
lds
push
push
int3
repz
into
lret
pop
mov
jl
iret
xor
nop
mull
adc
jmp
dec
pop
fwait
jl
subb
jae
pop
lret
cmp
arpl
sub
fs
mov
lret
pop
mov
mov
arpl
xor
or
test
bound
jno
les
cmp
add
in
ja
add
out
push
push
les
jo
push
into
push
je
icebp
inc
push
mov
xor
cli
mov
hlt
pusha
dec
inc
cmp
int3
ret
xor
gs
push
cltd
sub
mov
adc
jno
out
adc
cmp
mov
cli
push
lods
jg
scas
xor
insl
mov
loopne
lret
pop
add
nop
pop
jge
sahf
push
aaa
inc
test
imul
jl
mov
aaa
push
iret
nop
stos
mov
decl
mov
xor
mov
cmp
popf
dec
das
inc
push
sub
int
aam
inc
xor
scas
sbb
cmp
xchg
ret
fucomi
in
mov
xor
xor
cmc
mov
sbb
and
out
clc
je
imulb
popf
fsubs
cmp
inc
and
push
sti
cmp
mov
dec
cli
adc
faddl
mov
sub
dec
repnz
popl
cwtl
pop
addr16
mov
pop
out
push
push
sbb
out
sub
addr16
dec
sub
andb
rcrb
rorb
aaa
jnp
lcall
ja
jnp
movsb
int3
push
addr16
xor
push
das
fwait
cltd
mov
inc
inc
or
sub
loop
sub
outsb
pop
cli
mov
inc
inc
mov
sarb
xchg
pushf
mov
inc
lcall
ret
jle
lods
lahf
mov
or
inc
ficomps
data16
push
bound
lret
jecxz
popf
int
in
cmp
mov
outsb
inc
shlb
cltd
scas
enter
and
mov
movq
imul
arpl
mov
sub
shll
inc
insb
push
ss
mov
mov
and
sbb
stos
jnp
cld
xchg
inc
sub
sbb
out
fwait
push
cmpsb
xor
jl
mov
mov
mov
fcmovnbe
add
in
movsl
pop
std
nop
dec
and
lret
lea
ja
cmp
decl
lret
sub
pop
loopne
fimull
push
outsl
ret
cmc
inc
imul
adc
cld
sbb
mov
sahf
pop
stos
inc
or
aas
push
call
sbb
jle
jp
sub
jmp
cmpl
jae
enter
jnp
lods
cmpsb
mov
adc
sahf
insl
in
mov
sbb
lock
lahf
fwait
mov
mov
shl
sbb
insb
aad
adc
sub
and
loope
mov
jl
and
fsubrl
xchg
and
mov
clc
jnp
out
fmulp
pop
and
xor
adc
fcmovnbe
out
fsubs
fldt
inc
cmp
pop
inc
or
mov
push
cli
mov
aas
xor
icebp
les
in
jmp
xor
mov
dec
and
fs
lock
out
xchg
fstpt
enter
jb
outsb
and
inc
fidivl
pop
sti
imul
imul
lcall
hlt
popa
movsl
sbb
das
xchg
xchg
dec
sbb
jl
jae
int
ret
push
push
xlat
js
int
outsl
js
popf
in
xchg
repz
inc
mov
inc
sahf
cmpsl
insl
fdivl
out
and
mov
shlb
je
mov
and
bound
jge
jp
das
and
movsl
push
adc
jae
addr16
es
in
xor
ret
addr16
ljmp
mov
xchg
cltd
aaa
lods
mov
notb
imul
mov
iret
mov
mov
sub
mov
xchg
inc
imul
jge
inc
xor
sub
imul
add
pushf
loopne
insl
insb
pop
xchg
adc
mov
sahf
xlat
ret
inc
scas
cmc
add
int
sub
mov
mov
inc
gs
mov
test
sarl
inc
cmpps
jae
fstl
cmp
push
xchg
mov
mov
jle
fstl
outsl
stos
mov
lahf
lcall
sub
cmp
sub
pop
cmp
push
and
sahf
les
mov
jmp
push
test
test
or
mov
mov
cld
lds
xchg
jl
inc
fdivrl
and
in
mov
xchg
adc
leave
dec
data16
inc
stos
daa
mov
ljmp
cmpsl
mov
push
and
fyl2x
cmc
sbb
or
das
xchg
mov
cmp
movb
aam
inc
stos
cld
cmp
or
jecxz
add
in
fs
jl
ficomps
jmp
jns
adc
ja
daa
lods
adc
adcl
mov
pop
add
mov
mov
mov
pop
cmpsl
scas
js
inc
dec
jnp
fnstenv
mov
sbb
dec
data16
es
lods
pop
cmp
addb
mov
cmpsb
fidivrs
jbe
je
fdivrl
jns
cli
inc
cmp
sahf
ret
lcall
aaa
fwait
pop
cwtl
cmpsb
loope
jae
fimull
pop
clc
inc
xor
lret
iret
arpl
cmpsb
inc
psadbw
xchg
icebp
cmp
ja
lods
loopne
loopne
cmp
adc
mov
je
out
sbb
enter
stos
leave
inc
lea
or
pop
imul
or
inc
imul
popf
movsl
je
xor
aaa
push
add
cli
cltd
sahf
fwait
pop
cli
push
mov
ja
fs
push
push
in
in
movsl
loopne
xor
jb
in
jbe
fildl
imul
add
in
faddp
out
jp
and
push
mov
cmp
cmp
push
dec
jg
or
popf
repnz
ljmp
nop
mov
test
divl
sahf
dec
cmc
and
adc
xchg
ljmp
or
pop
push
pop
pop
xchg
in
push
nop
fldl
and
cmp
push
and
push
inc
rol
mov
data16
ret
stos
std
scas
fwait
adc
sti
mov
test
mov
nop
mov
push
jge
add
pusha
sbb
test
rep
xchg
fmul
jae
adc
jb
xchg
pop
mov
and
sbb
int3
sub
xchg
xchg
cli
pop
jo
jo
adc
das
push
popf
data16
shrb
add
ss
out
inc
pop
cli
lock
roll
das
adc
insb
mov
insl
sar
shr
inc
and
mov
repz
rol
clc
outsl
lods
ret
aas
inc
mov
jl
nop
inc
jg
and
call
repz
mov
lcall
vunpcklps
or
jne
pop
add
adcb
push
push
ds
pop
mov
sbb
cltd
repnz
mov
hlt
inc
or
pop
stos
loope
call
dec
add
adc
adc
sub
jg
and
outsl
xchg
loopne
orl
mov
jl
sbb
int
or
xchg
adc
les
shrl
jno
pusha
cmp
add
adc
cs
or
sub
mov
data16
jmp
iret
sahf
mov
jmp
fwait
pop
pop
cmpsl
cmp
icebp
dec
movntq
add
or
xchg
mov
ds
push
add
inc
lcall
push
jmp
push
dec
mov
lock
mov
lods
sahf
xchg
into
add
jge
mov
mov
pushf
push
adc
add
ds
cmp
adc
ds
icebp
xchg
push
xchg
xor
or
fwait
and
test
scas
mov
ss
sub
movsl
mov
jno
cmc
fs
mov
adc
in
hlt
jp
mov
xorb
sbb
dec
hlt
dec
add
mov
push
push
cmpb
sti
rclb
call
adc
insb
pop
mov
stos
fsubrl
xchg
mov
fisubrl
xor
sub
ret
shrl
and
sbb
daa
or
inc
hlt
nop
pushw
cmpsl
nop
xor
jns
jle
pop
fisttps
pop
imul
add
icebp
fcmovnu
insb
out
insb
cmp
adc
sub
mov
enter
mov
aad
inc
out
push
je
push
inc
xor
adc
add
std
inc
in
cmp
out
jno
push
sub
push
int
add
cld
jae
scas
outsl
int
jo
push
inc
xchg
xchg
std
or
mov
add
test
jbe
lcall
aas
xchg
clc
push
xor
imull
pop
xchg
adc
mov
push
scas
add
inc
or
push
mov
ss
inc
sub
sbb
sbb
mov
inc
dec
add
cwtl
cmp
lock
and
jne
adc
icebp
push
cwtl
fsubrs
mov
repz
in
or
and
out
jnp
std
sub
cmpsl
lods
repz
mov
fdivr
mov
pop
or
in
mov
sub
xchg
and
push
lret
add
push
movsb
xor
and
sub
inc
sbbl
push
dec
sbb
and
in
and
dec
cmp
mov
mov
push
inc
mov
inc
lods
fnstcw
incb
repz
fsubr
pop
insb
movsl
lahf
sbb
mov
call
ret
mov
and
out
loop
adc
pusha
or
out
xchg
inc
popf
decb
jns
cli
loop
inc
cmp
push
into
in
fwait
scas
cld
jl
andb
add
jbe
sub
pop
out
push
scas
rclb
mov
jbe
mov
xor
cmc
dec
xlat
movsl
mov
adc
xchg
push
jbe
jno
sbbb
in
insb
xor
int
cs
fldt
movsl
lcall
push
pop
pop
lods
insb
lea
sbb
test
outsl
push
jmp
jnp
pop
xchg
pop
sub
test
fistpll
daa
fsubrs
loopne
divb
xor
and
cli
in
dec
add
mov
pop
in
xor
adc
je
jbe
imul
mov
adc
add
leave
push
mov
xorl
test
mov
mov
pop
sbb
mov
roll
or
mov
adc
inc
push
inc
pop
xchg
clc
mov
xorl
mov
inc
pop
and
ret
push
dec
test
xchg
or
push
xchg
test
jecxz
icebp
mov
and
test
sbb
pop
in
rcll
rol
pop
and
loopne
xchg
or
fstp
fld
lods
jae
fidivl
jmp
out
push
pop
movsb
int3
loop
xor
mov
out
pop
pop
adc
push
popa
out
cmp
rcrb
mov
xor
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
and
rcrb
cmp
jb
mov
lret
test
sbb
in
pop
addl
or
sub
inc
loop
push
addr16
popa
ret
adc
or
scas
mov
roll
scas
ljmp
cmp
mov
imull
mov
pop
jo
cmp
filds
ljmp
lret
out
push
shll
sarl
enter
pop
std
cmp
outsl
mov
or
cmp
xor
lret
cmp
dec
pop
adc
inc
push
cmp
cltd
push
jge
test
int3
dec
jno
jle
sahf
jo,pn
fmul
pushf
cmpsl
lods
fiadds
in
decl
cmp
mov
mov
popf
lahf
out
cli
xor
mov
sbb
or
stos
sti
loopne
or
mov
sti
sub
sub
fistpl
fwait
jmp
inc
rorl
push
sub
test
pop
shll
lahf
cld
adc
test
rclb
repz
pop
aad
test
jnp
add
fidivrs
scas
ret
dec
hlt
push
loopne
int3
movsb
ficompl
dec
push
scas
loop
mov
test
int3
repz
movsb
sbb
xchg
fwait
imul
cmc
ret
int
sub
imull
mov
or
jge
xchg
and
mov
xor
ss
xchg
imul
add
out
fs
xchg
cwtl
enter
add
cmp
sarb
dec
incl
cmpsl
sbb
fisttpll
mull
xchg
jg
cld
shlb
or
pop
bound
sub
fdivp
jmp
xchg
test
sub
fmull
ljmp
repnz
and
jns
inc
cmpsb
cwtl
or
mov
add
dec
data16
cltd
sbb
in
sti
rcll
push
mov
xor
jl
mov
sbb
pushf
out
or
push
iret
scas
lods
and
mov
lods
lods
pop
xor
dec
dec
fnop
pop
sbb
and
sbb
sbb
addl
mov
orl
mov
dec
dec
xchg
arpl
xorb
jo
fsubrs
test
adc
enter
daa
sbb
subb
out
je
test
dec
xor
out
jmp
popf
call
adc
dec
cmp
add
pop
ss
int3
lds
cld
push
lcall
aas
fsubrp
inc
adc
adc
push
mov
cmc
mov
out
fwait
jo
add
in
addr16
add
jmp
ljmp
pop
inc
and
dec
cltd
mov
pop
and
pop
mov
loopne
pop
arpl
mov
push
and
push
xor
fcom
stos
repnz
jp
scas
add
or
push
xor
and
in
mov
push
data16
xor
ss
fwait
lea
out
sahf
mov
fwait
outsl
iret
mov
setb
mov
cmp
push
sbb
push
pusha
sub
call
inc
dec
scas
shll
mov
test
mov
inc
mov
xchg
subb
lock
or
pop
out
cvtpi2ps
or
inc
out
cmp
stc
xor
xchg
or
scas
shrl
icebp
js
out
dec
mov
into
mov
xchg
mov
lock
and
aam
pop
stc
js
int3
inc
mov
jp
adc
test
movntps
lock
sbb
pop
dec
add
outsb
jecxz
jecxz
pop
add
push
push
fidivrl
xchg
insl
in
stos
or
jl
stc
pop
mov
push
pop
lods
mov
cmp
xchg
and
and
movsb
cs
lahf
cmp
fmuls
mov
sbb
gs
add
shl
daa
fnstcw
popf
push
push
lock
test
enter
adc
popf
xchg
xor
xor
cltd
push
pop
rcll
aad
adc
dec
out
hlt
es
mov
push
fstps
scas
mov
dec
push
mov
call
cmp
addr16
pop
insb
mov
in
cmpb
pop
jmp
dec
or
ret
mov
pop
shlb
mov
lds
jg
ret
sub
fs
sbb
mov
xor
sub
xchg
or
lret
add
scas
test
imul
and
adc
mov
scas
inc
fdivl
push
js
jle
rol
push
xchg
add
xor
cwtl
push
movsb
xchg
xchg
cmp
add
jmp
mov
gs
push
fs
ret
push
cmpsb
adc
push
sub
mov
pop
sbb
mov
adc
lods
mov
loopne
dec
roll
or
out
sti
mov
ret
imull
sbb
lahf
push
mov
add
iret
es
aam
jge
xchg
shr
mov
je
pusha
stc
fs
jg
add
mov
fxch
or
push
adc
test
nop
sar
sbbl
repz
lock
sub
pop
jecxz
cmpl
sbb
adc
shl
sbb
pop
movsl
jle
mov
loop
popa
leave
pop
popf
push
pusha
mov
and
dec
or
add
or
cmp
mov
hlt
adc
pop
outsb
in
cmp
sub
or
jno
pop
cmp
leave
xor
ret
jno
shufps
enter
xchg
jns
popa
in
mov
jbe
hlt
xchg
mov
jne
rcr
rolb
shr
iret
iret
add
xchg
jle
jecxz
popf
into
cmp
ret
in
mull
dec
repz
mov
inc
cmpsb
rcrb
ljmp
je
imull
jge
lcall
add
std
dec
in
cwtl
inc
adc
mov
push
mov
aaa
mov
pop
push
xchg
xchg
icebp
xchg
das
add
jp
xchg
popf
fdivs
jbe
mov
or
ret
mov
mov
mov
dec
roll
jmp
clc
adc
into
clc
cmc
push
aaa
mov
cmc
cld
fcom
and
inc
clc
xchg
into
jmp
hlt
popa
lods
dec
xchg
inc
aam
sub
aas
xchg
lods
ja
jge
xchg
jns
or
out
xor
int3
fldcw
sub
gs
cmpb
mov
popf
xchg
imul
mov
xor
cmp
inc
int
jp
xlat
ja
aad
das
push
pop
mov
mov
shrb
mov
es
xchg
bound
adc
jl
ljmp
lds
xlat
adc
mov
inc
rorl
pop
test
rorl
pushf
jge
xor
icebp
arpl
jae
cmp
into
pop
aaa
outsl
jp
lods
into
cwtl
jl
and
mov
cmp
mov
cld
sbb
std
das
sub
jecxz
dec
ljmp
rol
or
cld
xchg
je
nop
nop
in
mov
mov
xchg
shl
dec
mov
add
test
jnp
cmp
clc
lret
js
push
jge
dec
divl
jle
fiaddl
jb
out
sbb
test
mov
dec
mov
ja
pop
data16
xchg
mulb
sarb
lea
push
punpckldq
inc
lea
xchg
dec
lret
xchg
scas
into
push
iret
sarl
adc
jne
or
pop
push
and
mov
cmp
iret
scas
pushfw
inc
fisttpl
bnd
sub
out
push
ds
xor
mov
ret
mov
push
adc
ret
or
imul
cwtl
xchg
push
add
dec
push
lret
add
fldl
rcll
jno
fs
or
outsl
call
daa
pop
cmp
loopne
push
shlb
lods
pop
test
in
stc
xor
fisubl
hlt
aam
jmp
adcb
mov
push
push
and
push
pop
dec
inc
pop
dec
insb
testb
push
jb
or
push
cmpsl
or
ja
xchg
divl
xorb
shlb
cmp
fstpt
lds
insl
je
ror
xchg
inc
adc
push
xor
aas
or
rcr
add
sbb
int
xor
mov
mov
cli
cmpsb
and
fistl
and
cmp
pop
xchg
inc
cmp
lods
lds
cld
movsl
add
or
xchg
cmc
sub
inc
xchg
sti
int
lock
sbb
lods
dec
pop
mov
cmp
push
frstor
sbb
pop
arpl
ja
mov
shll
and
add
hlt
mov
jl
jge
jmp
mov
sarb
jb
jns
rcrl
or
dec
movsl
mov
cmc
xchg
xorb
fcmovbe
dec
or
pop
and
jg
pushf
jns
and
jo
rorl
lret
test
sti
mov
test
jb
pushl
cwtl
xchg
pop
push
jno
scas
bound
fstpl
cmp
lods
push
adc
inc
jmp
into
pop
loope
int3
sbb
jbe
pop
inc
aad
call
cmpsb
and
adc
lock
mov
je
or
xor
aas
inc
xchg
mov
cli
mov
jp
std
repz
push
into
jns
sub
int3
jl
jle
loopne
dec
ljmp
int
sbb
pop
out
jnp
cmp
nop
lods
out
sbb
add
inc
dec
xchg
cmp
loope
fdivr
mov
shrb
jbe
popl
rcr
fsubl
mov
push
jp
push
inc
push
dec
jb
iret
add
repz
les
movsb
xor
dec
adc
dec
xchg
and
dec
aas
push
sarb
out
jbe
push
scas
les
or
xchg
jbe
mov
mov
neg
cmpsl
xor
stc
pusha
ljmp
adc
jno
mov
jmp
roll
pop
mov
adc
mov
pop
push
cmp
inc
or
scas
loopne
cmp
adc
add
aad
push
jb
push
out
loope
dec
cltd
add
orl
pop
xchg
push
ss
cld
pop
or
movsb
icebp
or
loopne
add
sbb
cs
and
mov
inc
inc
cld
adc
push
cmp
sbbl
sub
rcll
mov
dec
enter
aaa
or
movl
push
xor
xchg
xchg
fcompl
out
paddb
mov
pop
xchg
add
mov
pop
rcll
dec
loope
xchg
movsl
jne
lds
ret
push
arpl
repz
aad
sub
pop
ljmp
pop
sbb
jne
roll
or
iret
pop
sub
jae
cmp
mov
mov
sbb
es
push
lock
sbb
cmpsb
xchg
push
mov
cmp
sbb
pop
iret
hlt
daa
shrl
cs
mov
mov
mov
fbstp
push
and
std
or
insb
imul
lods
movsb
xchg
rcll
ret
inc
aas
adc
pop
inc
xchg
cmp
and
inc
ss
fcmovnu
mov
in
ret
mov
int3
pop
and
nop
outsl
xchg
jns
sbb
xchg
outsb
fwait
ss
lret
lods
push
sub
cmp
jl
call
je
sbb
lcall
fs
xchg
insb
fldt
push
aas
in
add
jl
and
mov
mov
int
fdivs
popfw
jnp
xchg
test
out
das
mov
mov
adc
sub
divb
xor
lods
js
iret
or
cwtl
inc
sub
popa
dec
xor
adc
jmp
and
loope
ds
scas
jae,pn
push
mov
pop
mov
rdpmc
int
shl
gs
arpl
cmp
and
jo
andl
or
outsb
in
jmp
loop
imul
das
fsubrl
rorl
mov
jg
jae
mov
test
inc
test
xor
and
movsl
outsl
inc
fstps
cmp
icebp
push
fdivrs
push
mov
inc
cli
sub
out
jecxz
pop
pop
cli
jns
js
hlt
sub
cmc
pop
jno
xchg
cmp
insl
into
lds
scas
and
cmp
sti
int
push
jae
subl
out
lds
shrb
xlat
dec
in
mov
imul
sub
adc
pop
push
rorb
rol
andl
mov
ret
inc
cmc
pop
xor
sbb
push
add
sar
imul
jmp
dec
mov
mov
cmp
sub
ljmp
lret
mov
js
jg
jmp
imul
sti
scas
stos
scas
jb
mov
jp
inc
aaa
jo
out
lret
mov
mov
fs
inc
mov
ds
mov
mov
cmpsb
jbe
xchg
shrb
int
push
push
sarl
cmp
jb
sub
andb
hlt
sbb
jg
std
rcll
mov
or
mov
add
mov
insb
xorb
loope
push
and
insl
jg
push
insl
int
pop
out
vsqrtss
pop
dec
lret
lock
adc
sub
aad
cltd
jb
adc
out
xchg
and
jge
pop
in
dec
mov
cmp
mov
jb
cmpsl
mov
cmp
out
leave
aaa
xchg
addr16
mov
lods
sbb
fcoms
lret
lea
push
sbb
mov
jae
cmc
es
or
clc
or
movsl
cmp
mov
cli
aas
mov
xlat
push
pop
das
out
add
imul
mov
pop
rclb
out
jmp
inc
mov
or
sahf
repz
ljmp
push
inc
ljmp
out
adc
call
sbb
out
inc
push
xorl
sbb
jae
push
movsb
add
iret
mov
lock
scas
inc
add
out
popf
loope
inc
pusha
mov
test
cli
fmulp
push
mov
dec
or
test
lcall
inc
rcll
scas
mov
stos
mov
pop
outsb
arpl
orl
out
push
sbb
ja
mov
aaa
dec
out
cwtl
cmpsb
ret
adc
test
ljmp
dec
dec
shll
pop
xchg
pop
cwtl
push
pop
rolb
scas
test
pop
mov
push
xchg
cltd
addr16
dec
adc
adc
and
js
out
push
shl
outsb
repnz
out
adc
in
loop
out
aaa
adc
sub
out
leave
jle
sub
out
or
sbb
mov
lahf
out
js
push
cmc
or
sbb
test
add
shll
push
adc
xchg
dec
std
clc
xor
sahf
fimull
mov
out
jecxz
or
mov
jo
cmpsl
or
movsl
inc
dec
or
and
mov
lds
xor
std
ljmp
ljmp
inc
in
cmp
rol
das
adcb
xchg
sub
mov
pop
pop
push
jns
in
dec
or
mov
out
outsl
shlb
inc
jg
jns
cmp
mov
pop
xlat
cmp
mov
mov
shlb
dec
fucom
shl
mov
xlat
scas
cmp
enter
cmp
test
adc
roll
cli
mov
ss
push
fwait
sbb
cli
jp
cmpsl
pop
fmull
sbb
testl
sarb
add
ror
and
mov
cmp
dec
inc
shlb
xor
pushl
push
pusha
sub
and
inc
lock
fmuls
mov
les
int
inc
je
sbb
imul
int
sub
fdiv
js
sti
or
rorb
mov
and
imul
jae
mov
dec
call
inc
lcall
jl
add
clc
lods
gs
sbb
jl
xchg
ja
fbld
mov
mov
jns
inc
mov
enter
cmp
inc
dec
int3
and
mov
or
mov
and
adc
fnstenv
mov
stos
mov
and
fucomi
push
in
cmc
hlt
adc
lahf
sbb
adc
stos
dec
daa
jnp
neg
sub
cmp
hlt
mov
ret
arpl
jns
ljmp
adc
dec
mov
je
add
cld
mov
pop
or
out
pop
jl
mov
lcall
ret
mov
xor
stos
sti
rcl
add
mov
cmp
sbb
mov
mov
aas
ficoml
and
sbb
outsb
mov
xor
in
cli
mov
fs
mov
sub
pop
pusha
dec
popf
cltd
and
ret
pop
sbb
rorb
sub
push
bound
inc
cld
lock
push
das
jns
je
dec
pop
movsl
enter
fsub
insb
mov
hlt
cmp
mov
mov
sub
xchg
sub
sbb
mov
jmp
cmp
sub
out
push
and
or
enter
stos
out
and
out
sbb
imul
decb
hlt
and
repnz
out
imul
xor
xchg
and
and
sub
xchg
mov
xchg
insb
pop
push
jg
push
daa
pop
xor
jmp
cmp
addr16
xchg
add
mov
outsl
push
xchg
xor
mov
and
add
rcrb
dec
cmp
ds
adc
clc
add
mov
mov
mov
jbe
mov
cmpl
sub
cmovb
sub
sahf
jp
or
inc
adc
mov
repnz
or
movb
jl
fsubl
sahf
in
cli
cwtl
mov
inc
sbb
adc
imul
imul
jb
cmp
push
loop
in
js
jns
in
test
xchg
mov
stc
mov
rorb
pushf
xchg
push
cltd
jbe
lahf
mov
sub
and
shll
mov
jbe
jmp
dec
cmc
push
mov
aam
pop
incl
test
cmp
sti
lock
scas
cwtl
sti
cmp
fdiv
std
roll
mov
aaa
arpl
xchg
sbb
cmp
and
mov
fdivr
imul
movsb
lahf
addr16
jl
fnsave
add
push
cmp
push
xchg
dec
mov
mov
push
sbb
out
or
jns
addr16
clc
fidivrs
xlat
sti
xchg
cmp
lcall
outsl
popa
out
push
dec
lods
push
pusha
cs
mov
sub
mov
sbb
mov
cwtl
inc
iret
cmp
add
andb
ljmp
je
je
je
lea
mov
xchg
and
lcall
negl
mul
lret
das
push
push
inc
rcrl
pop
adc
imul
adc
std
rorb
mov
mov
cmpsl
inc
lret
hlt
mov
jle
notl
cs
insl
inc
aaa
inc
sub
jne
cmpsl
test
clc
sti
sbb
push
repnz
incb
dec
js
mov
lret
add
sub
out
aad
mov
stc
xchg
mov
push
imul
adc
cmp
cmp
ja
cmp
dec
out
movsw
mov
and
fsubp
ja
in
mov
das
push
mov
fcmovnbe
shlb
cmpsb
or
cmc
xor
ds
push
or
xor
mov
and
jbe
adc
lret
inc
mov
inc
daa
imul
enter
sub
cwtl
add
fimull
push
scas
test
jl
outsl
out
cmp
mov
hlt
xchg
lds
ljmp
fisttpl
in
lock
push
lahf
stos
cmp
cld
icebp
mov
push
call
outsb
inc
or
arpl
pop
jmp
pop
pop
mov
rcrb
push
mov
stos
fstl
and
sbb
mov
leave
xchg
adc
cmp
popa
fs
mov
inc
and
ficoms
sbb
mov
pop
sbb
int
mov
push
xchg
adc
inc
add
sbb
add
and
insl
lods
inc
cmp
pusha
pusha
scas
test
insb
hlt
mov
lcall
jb,pn
test
and
mov
fists
push
jp
out
inc
fdivr
int3
jg
addr16
jb
mov
jle
movsb
insl
clc
mov
push
push
cld
push
pop
test
sahf
and
lods
ds
add
ret
ret
ljmp
mov
enter
xor
or
mov
nop
and
aas
sub
mov
mov
or
jmp
xor
dec
mov
fbstp
or
adc
lret
pop
jo
jg
cmp
mov
icebp
mov
es
mov
mov
jle
or
clc
iret
push
pop
popf
stos
je
and
mul
scas
lret
ss
fistpl
out
cmp
fdivs
dec
sbb
loopne
jle
or
push
sbb
jb
or
addr16
jnp
lea
or
or
push
insb
mov
push
sbb
sti
adcl
push
addr16
imul
aaa
out
add
and
cmp
cmc
adc
mov
shll
xor
jno
cwtl
je
stos
cmp
and
xchg
dec
movb
sub
sbb
inc
aam
rclb
bound
leave
sub
cmp
aas
bound
ret
mov
or
cmp
and
sbb
fwait
mov
aad
stos
rorb
and
sbb
sti
xchg
jg
mull
inc
bound
jne
adc
test
arpl
cmpsb
inc
add
sub
mov
lock
adc
push
pop
subb
faddl
add
mov
test
sub
mov
pop
pushf
sbb
shlb
adc
xchg
out
push
pop
ret
call
xor
inc
mov
loope
sbb
mov
mov
mov
std
dec
out
dec
test
mov
pusha
fs
push
cltd
dec
int3
sbb
fidivrl
cmp
pop
outsb
std
mov
jnp
sbb
xchg
lods
pop
cmp
adc
fbld
enter
aaa
pop
sbb
xchg
mov
mov
cmp
repnz
xor
push
push
out
sub
xor
sbb
fisttpll
inc
mov
mov
mov
call
pop
ljmp
mov
push
mov
jecxz
cld
pushf
inc
push
mov
pop
ret
xor
adc
jg
adc
sub
push
or
xchg
dec
rol
sbb
fidivrs
push
mov
push
xchg
scas
xchg
ret
decb
mov
mov
inc
inc
sahf
cmp
int
and
adc
repnz
out
and
lcall
sub
mov
sbb
adc
and
testb
rcll
pop
shrb
bound
inc
push
and
out
sbb
scas
js
add
shl
sbbl
daa
inc
test
jmp
pop
pop
inc
jmp
xor
mov
test
not
adc
enter
mov
push
roll
and
mov
xor
xor
inc
scas
xchg
je
in
pop
cltd
imul
test
inc
lahf
mov
pop
xor
stc
lods
out
clc
jl
and
add
cmp
adc
mov
jne
mov
jg
cmc
cmp
pop
adc
ja
add
sbb
leave
ss
insb
addr16
fsts
mov
enter
out
mov
pop
js
aam
test
dec
add
dec
into
push
push
arpl
xor
xchg
add
fistl
sub
push
adc
loope
mov
or
inc
dec
fcomip
sti
shr
and
sbb
int3
iret
and
cmp
dec
xor
scas
adc
jmp
adc
xchg
pop
push
jbe
imul
cmp
push
jns
test
lahf
cmpsb
mov
stos
xor
aad
lds
add
push
xchg
adc
inc
jno
mov
sub
in
and
mov
push
pop
scas
add
adc
lret
fsubl
or
mov
and
inc
ja
jmp
addr16
inc
int3
ror
shrb
pop
sub
aas
in
pop
lds
cmp
mov
out
push
mov
ds
lcall
mov
jge
xchg
push
stos
xor
sbbb
jmp
rcll
xchg
movsl
stos
adc
cmpsl
xchg
jo
mov
hlt
imul
and
sub
xchg
loopne
jo
push
out
dec
jnp
lods
dec
dec
mov
push
fnstsw
call
repz
mov
je
mov
ss
jmp
sbbb
dec
adc
add
mov
and
jae
cld
sub
scas
adc
and
punpcklbw
adc
or
lods
pop
in
jno
addl
cmp
jne
and
pop
sub
lods
add
fsubs
inc
lahf
outsl
hlt
nop
adc
in
sahf
push
out
shr
stc
adc
and
push
lea
fisttps
hlt
pop
pop
cmpsb
adc
iret
push
cltd
roll
stos
movsl
pushf
push
xor
jo
jle
and
xor
test
ja
sbb
icebp
mov
dec
push
cmp
outsb
pop
in
ret
fucom
js
sub
outsl
xor
pop
mov
fcoms
stos
cmp
pop
hlt
inc
aam
test
pop
out
sahf
aam
and
adc
mov
and
mov
scas
mov
xor
sub
jne
inc
mov
repz
adc
mov
jb
dec
test
mov
and
loope
cli
push
sarl
pop
jle
in
jae
sub
and
enter
xchg
xchg
call
jb
or
adc
jbe
mov
mov
movsb
std
pop
sub
jae
iret
mov
cmp
loop,pn
add
iret
pop
ljmp
insl
jge
or
pop
in
jge
dec
cmp
xor
test
xor
push
lcall
mov
mov
push
movsl
push
clc
sahf
inc
jns
jmp
out
and
icebp
mov
mov
lods
lock
xchg
sti
dec
ret
fcom
fistps
xchg
push
fwait
scas
push
fs
inc
mov
rcrb
psrld
adc
sub
notb
sub
fs
pop
retw
daa
pusha
add
jg
movsb
jno
jbe
mov
test
xor
cli
ds
dec
and
and
jbe
push
sub
movsl
mov
fdivs
aaa
and
pop
data16
adc
testb
mov
out
testl
fcmovne
sbb
cld
pop
xchg
pop
mov
xchg
into
ret
push
pop
mov
pop
fisttpll
aad
pop
je
cwtl
xor
pop
jle
pop
mov
hlt
and
push
pushf
mov
cmpsl
lret
rcrb
fstp
nop
jb
inc
fidivl
cmpsl
out
fists
push
into
mov
aad
cs
mov
xor
sbb
jae
sub
stos
lods
push
fs
js
mov
or
pop
ret
mov
xchg
inc
popf
stos
fwait
test
call
movsl
jmp
and
call
jne
out
stc
xorb
jns
stos
gs
in
push
addr16
pop
movsl
icebp
push
loope
decl
mov
pop
inc
sbb
inc
cmp
imul
out
add
fidivrs
lock
sub
lock
sub
inc
sbb
sarl
add
add
cld
mov
inc
xchg
and
dec
push
cs
shll
pop
ror
sbbl
jp
add
jne
mov
ljmp
leave
xor
scas
xchg
stos
leave
xor
cmpsb
cmp
adc
lea
scas
xchg
fiadds
xchg
cmp
rcl
gs
push
lock
mov
mov
xchg
out
push
pop
ret
dec
out
add
xchg
and
inc
jbe
add
imul
or
push
add
clc
dec
dec
inc
cmc
add
das
out
mov
push
lret
inc
fldpi
sahf
or
in
add
xchg
jl
mov
mov
stc
addl
les
cwtl
les
not
out
mov
ficoml
xlat
dec
inc
xor
faddp
cld
pop
mov
cmpb
adcl
dec
lds
inc
xor
pop
setne
hlt
add
jge
jg
das
out
mov
jae
scas
jg
sub
inc
push
push
add
add
sbb
xor
mov
dec
addr16
pop
out
xchg
fwait
lods
dec
xlat
adcl
js
pusha
repz
xor
inc
scas
js
inc
xchg
sub
scas
inc
cmp
cmc
fnstcw
mov
test
push
test
push
jl
ja
lods
xchg
mov
cmp
hlt
cli
jae
jg
inc
pusha
movsl
add
xor
sub
sbb
pop
mov
out
xorl
push
pop
ljmp
sub
jno
sub
mov
pop
sbb
mov
cmp
insb
out
jnp
jmp
or
arpl
xchg
jle
sarb
mov
pop
movl
sbb
aad
adc
dec
lcall
dec
or
mov
lcall
jb
cltd
xchg
test
mov
mov
jns
cmpsb
popa
or
dec
dec
stos
cmc
sbb
jae
data16
pusha
stc
stos
jle
pop
add
mov
rcl
in
mov
iret
popf
sub
fsubr
bound
add
cltd
mov
dec
mov
aad
xor
loope
cmpb
out
fsubl
loop
jns
sub
aaa
mov
sub
lods
and
pop
jg
push
cmp
mov
xor
ja
popa
push
jecxz
subl
fimuls
cmc
push
popf
je
or
lea
jle
jb
mov
sub
inc
adc
cmp
lahf
pop
or
aaa
arpl
adcb
cs
or
lds
pop
jle
inc
xchg
out
and
sti
and
sbb
xacquire
cwtl
inc
jle
shrb
jne
push
mov
shr
lods
outsl
popf
mov
in
jno
inc
out
stos
pop
sub
mov
pop
or
mov
sbb
iret
add
scas
les
inc
push
and
xor
pop
and
jge
and
and
cmp
cmc
push
test
test
xchg
mov
and
fstps
test
and
xchg
fildll
mov
lret
pop
xchg
scas
mov
pusha
pushl
mov
dec
mov
xchg
ret
fs
sti
jmp
or
ljmp
inc
popa
outsb
push
push
fstl
nop
sub
inc
jae
neg
rol
fadds
xlat
mov
adc
stos
ret
mov
call
or
mov
cmp
leave
shl
push
mov
push
mov
cmp
scas
xor
jne
jbe
push
movsb
cmp
loopne
dec
cld
xchg
loope
dec
in
insb
push
movsb
ss
inc
pop
rolb
mov
push
inc
cwtl
lods
hlt
jg
loope
jp
or
fs
cli
ret
add
leave
cmp
cld
sub
adc
add
or
cli
xchg
push
int
incl
push
in
pusha
shl
dec
ret
cmpl
pop
and
es
xchg
sub
out
in
add
aam
inc
or
rorl
scas
shr
and
add
loope
mov
test
mov
xchg
cmp
cmp
popa
rcrb
add
lea
ret
lds
push
add
dec
inc
lret
cmp
jecxz
enter
cld
pop
orb
cli
imull
push
cmpsl
cli
jge
and
mov
not
shrb
mov
out
std
mov
xchg
push
insb
dec
inc
gs
call
fdivrp
cmp
test
dec
addr16
and
mov
push
or
inc
mov
pop
sahf
not
push
pop
push
scas
add
inc
add
cmp
fdivl
sub
mov
dec
adc
clc
xchg
push
je
mov
sub
mov
mov
call
mov
fcomip
adc
mov
rcll
sbb
pop
out
test
pop
repz
push
mov
push
inc
dec
add
and
fdivrl
push
movsb
movsl
or
lcall
add
rcll
jge
adc
sbb
or
cmc
push
arpl
push
jo
arpl
inc
push
pop
sbb
sbb
lds
daa
xchg
cwtl
enter
mov
dec
jns
pop
cmp
sbb
lods
mov
out
loope
sbb
jo
es
repz
int
cmp
out
loopne
mov
dec
faddl
mov
das
fs
imul
pop
inc
fsubl
add
shr
data16
or
push
pop
dec
repz
ret
sbb
sub
xor
pop
idivb
cmp
add
dec
mov
mov
jg
push
sub
rolb
inc
mov
cmpsl
lret
xchg
lods
lods
and
sbbb
mov
pushf
xor
insb
xlat
xchg
jp
pushf
and
push
ret
imul
cmp
or
rcrb
call
lods
lods
jnp
mov
adc
add
jnp
mov
dec
in
mov
push
mov
inc
rcll
jmp
xor
jae
mov
and
xchg
rclb
nop
mov
cmpsl
mov
pop
fnstsw
xchg
mov
ret
xor
xchg
push
data16
mov
sbb
ret
pushf
jp
rep
and
loop
sbb
jno
xor
sub
test
add
fwait
loop
inc
jo
movsb
std
mov
int
aam
sbb
or
cmp
pop
push
cli
sub
sbb
fwait
insb
out
aad
out
lods
jge
lods
pop
xchg
shrl
sub
pushf
ret
mov
xchg
imul
dec
stos
xchg
dec
push
aas
jle
mov
outsl
movsl
out
xchg
das
in
dec
xorb
out
cmp
xchg
cwtl
mov
push
or
scas
inc
mov
pop
mov
mov
lock
mov
jno
push
fcmovbe
cltd
aaa
lret
jno
ficoml
or
sub
jmp
mov
cmpsb
and
orb
shll
sbb
and
or
xlat
sbb
fdivs
lods
mov
mov
sahf
add
ret
das
mov
add
xchg
jb
sbb
aas
cltd
lcall
xor
sub
jge
or
add
mov
call
mov
shlb
rcrb
out
ljmp
adc
fmulp
mov
xchg
dec
and
adc
out
mov
push
cs
and
push
xor
test
xchg
jne
icebp
pop
add
xchg
xchg
dec
mov
je
out
xchg
fdivr
cmp
frstor
push
in
adc
jno
adc
cmp
movsl
mov
cltd
arpl
dec
lock
cmp
mov
sbbl
pop
ret
mov
jnp
stos
xor
and
lcall
mov
pop
fnstcw
std
lret
enter
int
ret
cld
iret
rcrl
fbstp
call
mov
sub
sbb
xlat
mov
adc
sbb
fldenv
test
ret
cmp
xchg
int
inc
mov
das
sub
xor
aad
mov
sbb
mov
fbstp
pop
pop
mov
inc
insb
xor
mov
pop
cs
add
fiadds
aaa
inc
lea
cmp
jle
mov
fwait
mov
jb
inc
std
mov
data16
jns
in
mov
inc
mov
std
pop
sbb
repnz
popf
lds
imul
into
std
mov
xchg
xor
dec
sbb
pmaddwd
enter
adc
aas
cmp
xchg
nop
sahf
dec
cmc
fldt
xchg
icebp
stos
std
frstor
jns
ljmp
jg
adc
and
and
sbb
js
fstps
aad
mov
mov
pop
or
rclb
xor
dec
cltd
out
aam
cwtl
into
fcmovnu
addb
aas
rcr
nop
stos
cs
sub
mov
inc
cmc
mov
mov
cmp
mov
fstpl
mov
sub
xor
mov
imul
ss
mov
test
xlat
fnsave
sbb
cltd
xchg
lods
sub
sub
sti
daa
fnsave
inc
clc
cmp
in
scas
dec
mov
mov
jno
xlat
xlat
test
pop
mov
xor
iret
repz
inc
sbb
popf
push
push
ds
loopne
inc
das
mov
int
xor
cmp
lahf
iret
or
push
mov
repz
test
or
inc
outsb
fnstenv
or
xor
pop
and
and
incl
in
dec
addr16
imul
adc
mov
sbb
or
dec
mov
mov
push
mov
pop
push
mov
mov
test
out
fidivl
insb
pop
rolb
outsl
push
das
add
dec
fwait
neg
mov
push
ljmp
cmc
daa
xor
mov
cmp
or
inc
cld
imul
cmp
test
sti
lret
lea
xlat
movsb
arpl
leave
outsb
pop
push
or
hlt
push
bsf
hlt
test
jb
movsl
or
rcrb
add
cmp
js
addr16
jno
and
fnstenv
dec
bound
aad
xor
ds
shrb
or
jbe
in
jno
cwtl
mov
aas
mov
push
sbb
sub
repnz
and
aam
pop
sbb
sbb
xchg
mov
es
fldlg2
add
into
hlt
daa
mov
and
cwtl
ret
mov
mov
jbe
js
hlt
pusha
xchg
jbe
les
or
xor
push
ficomps
test
xchg
pop
jmp
mov
fldt
faddl
sub
stos
in
sbb
rol
push
mov
lock
sbb
cmpsl
lds
les
imul
lretw
pop
std
push
or
movsl
in
test
rclb
popl
out
push
nop
roll
adc
and
inc
fwait
mov
adc
pushf
ds
sbb
mov
inc
adc
subl
test
out
ficoms
shlb
sbb
loopne
adc
pop
pop
je
push
cli
sub
or
aam
fsubr
dec
loope
cmc
inc
pop
js
jnp
test
xchg
sbb
loop
mov
jge
mov
cmp
int
enter
lods
movsl
rorb
pop
cli
rcl
mov
jno
cwtl
ja
push
add
and
cmp
push
icebp
mov
jo
aas
jecxz
mov
sub
ja
mov
imul
pop
cmpsb
lcall
roll
xchg
xor
mov
outsb
sahf
jmp
mov
in
test
sarl
inc
andb
pop
test
or
bound
and
jle
mov
shr
push
fldcw
push
mov
mov
popf
enter
dec
js
push
in
jl
imul
popf
les
lret
add
mov
ret
and
shlb
jg
jmp
dec
mov
xor
fwait
xor
aaa
pop
lahf
aam
push
xor
jne
pop
gs
push
cmp
cmc
popa
into
xor
cmp
or
test
sbb
cmp
or
das
aad
push
int
and
fcomps
jp
and
stos
adc
loopne
les
jne
jecxz
shlb
hlt
insb
jnp
mov
int3
pop
ss
sbb
xor
mov
mov
mov
jg
hlt
loope
mov
xchg
dec
shrb
repnz
push
dec
cli
xlat
es
jno
daa
and
inc
inc
mov
outsl
ss
mov
cmpsl
adc
sbb
mov
xchg
pop
dec
pop
push
dec
sbb
test
jbe
gs
mov
mov
iret
sub
lds
add
fstl
push
cmp
test
inc
les
push
out
imul
les
or
cmp
or
hlt
lods
lock
jnp
roll
clc
push
fldenv
mov
xor
cmp
in
sub
and
mov
hlt
cwtl
mov
pop
stos
add
aas
adc
call
push
cmp
add
xor
leave
or
push
push
gs
xor
cmp
cmc
scas
cmpsl
inc
xor
sti
or
and
cmp
xchg
mov
into
js
bound
test
arpl
lahf
out
out
les
or
lret
push
mov
mov
shl
jb
clc
data16
xchg
shrl
rcrb
jae
test
int3
stos
mov
popf
xchg
dec
mov
xor
test
dec
xor
ja
adc
imul
adc
and
je
push
jl
sbbb
xor
push
push
dec
test
dec
pop
les
insb
lahf
xchg
mov
push
fcom
scas
insb
pop
pop
outsl
out
loope
and
lods
inc
dec
ljmp
popf
xlat
clc
mov
dec
cmc
std
clc
pop
cmpb
shrl
in
xchg
cmpsb
popf
in
mov
addb
sbb
pop
sbb
aaa
pop
rorl
jno
cmpsb
mov
addb
dec
shrl
sbb
out
cmpsb
lods
mov
js
jo
pop
test
fistpll
mov
shl
rcrl
out
and
xor
adc
fiadds
pop
push
popa
dec
mov
icebp
mov
or
mov
cmp
mov
xlat
and
push
js
inc
in
outsb
cmp
or
das
and
and
or
lcall
xchg
mov
sti
hlt
cmp
nop
decb
leave
sub
lods
xchg
pop
pop
add
inc
lcall
sub
sbb
movsb
push
or
mov
cld
or
pop
xchg
ret
fucompp
outsl
cwtl
fdivl
sub
lds
push
cmc
inc
flds
ljmp
adc
call
sbbb
js
out
xor
loopne
dec
mov
jecxz
fsubl
sub
cs
xor
sarb
xchg
test
jbe
movsb
iret
sbb
nop
mov
lods
inc
xor
orl
dec
sbb
push
fidivl
ljmp
inc
mov
inc
cltd
lahf
mov
sar
aaa
test
sbbb
cwtl
xor
inc
push
jo
fsts
sbb
cmpb
scas
jmp
jp
scas
sarb
arpl
popf
xor
imul
stos
movsb
outsl
fbstp
mov
je
mov
call
dec
addr16
loopne
rcrb
sub
jae,pn
inc
mov
mov
lods
mov
mov
sbb
fildll
pop
es
ss
adc
scas
scas
stos
mov
clc
add
nop
xor
push
xchg
lods
mov
jle
add
push
int3
sti
repz
push
insb
ret
repz
ret
in
stos
cmp
dec
icebp
add
sub
dec
xchg
out
cmovno
mov
and
fistpll
mov
idivl
into
test
int3
ljmp
es
test
sbb
pop
insb
cs
enter
stos
dec
cmp
pop
fisubrl
adc
push
xchg
xchg
ss
and
cvtps2pi
or
scas
out
sahf
popl
out
outsb
aas
divl
adc
cmp
jns
pushf
and
sub
shll
xchg
inc
fimull
lret
iret
and
jo
inc
mov
repz
pandn
jb
mov
add
sbbl
mov
inc
lods
pop
inc
add
inc
loop
mov
mov
cmpsl
push
adc
bound
push
data16
loop
or
imul
iret
cmp
std
fneni(8087
jl
mov
scas
jecxz
mov
xor
lock
or
xchg
pop
movsb
fistpl
lahf
mov
lcall
mov
int3
loope
lahf
clc
in
cmc
add
sbb
cmpl
scas
bound
and
leave
or
inc
out
in
pop
sbb
imul
add
pop
cmpsl
cmpl
test
add
sbb
loope
adc
cmp
lods
inc
lods
outsl
inc
insb
xlat
xor
les
pop
shll
and
xchg
ss
push
in
ja
sbb
loop
push
adc
dec
out
std
mov
std
aad
xchg
sbb
lock
scas
ss
xor
jecxz
scas
addb
xchg
and
movsb
xchg
fldenv
outsb
sub
dec
mov
or
dec
sub
inc
inc
ljmp
sub
fstpt
scas
push
xor
cld
int3
fs
mov
scas
mov
scas
cmp
jno
popf
daa
xchg
sahf
mov
mov
mov
lahf
inc
mov
int
add
sbb
sbb
jbe
jne
hlt
sbb
mov
fsts
cmp
sahf
dec
or
sbb
imul
filds
xor
scas
cld
cmp
ja
adc
inc
lds
xchg
and
fidivrs
mov
shll
lret
and
and
jmp
jle
add
mov
and
add
xchg
or
int
jle
jmp
pop
mov
dec
mov
jns
xchg
inc
inc
dec
inc
fcoml
and
xchg
dec
jns
dec
addr16
pusha
out
pushf
adc
fiadds
cmc
push
mov
ja
add
inc
jge
xchg
ret
xchg
xchg
xchg
mull
mov
and
push
shrl
shll
push
inc
hlt
xchg
das
fiaddl
push
cmc
pop
rorl
xchg
push
pop
dec
ds
xchg
xor
or
pushf
push
sub
sbb
insb
xor
cmpsl
push
stc
cmp
fucomp
mov
xor
lcall
xor
mov
stos
adcb
sarl
sbbb
cwtl
fldcw
sub
inc
mov
sar
sahf
fistps
xchg
sets
mov
add
mov
jecxz
das
add
inc
sbb
adc
xchg
mov
mov
in
xorb
pop
dec
push
cmpsb
adc
jge
mov
popf
mov
mov
sub
mov
and
gs
and
or
outsb
into
shr
inc
dec
cltd
shlb
mov
mov
test
dec
push
jno
in
xchg
dec
sti
mov
imul
cmp
push
loopne
jo
paddsb
jo
stc
or
sub
testl
jge
cld
shl
sbb
int3
xchg
pop
xchg
iret
adcb
pop
pop
lds
xor
xor
cmp
popa
movsb
sti
rcl
out
pop
jmp
repz
movsb
sahf
sub
popf
dec
lds
adc
push
lahf
cmp
hlt
das
clc
mov
inc
clc
cmp
push
nop
or
cmp
inc
ja
lds
ficomps
outsl
jp
jmp
cwtl
xor
test
mov
jns
stos
and
out
movl
push
test
cmpsl
dec
js
pop
sub
or
sub
fsts
jbe,pn
dec
in
mov
lcall
adc
pop
aad
js
lret
adc
sub
dec
cli
dec
test
aas
inc
and
and
inc
hlt
add
daa
sarb
mov
inc
sub
popf
cmpsl
pop
pop
aas
dec
pop
mov
jne
adcl
cld
jmp
imul
mov
ficoml
push
insb
sub
add
jae
aad
mov
jg
repz
adcb
jbe
mov
xchg
addr16
cltd
pop
mov
xor
in
ja
std
mov
cmc
inc
popf
jae
inc
xchg
inc
xchg
or
mov
outsb
faddl
out
roll
xchg
jne
sub
mov
cwtl
jle
mov
lret
mov
int3
out
or
pushf
out
mov
and
in
xchg
mov
fdivs
lods
dec
cmp
rcr
cmp
movsb
in
mov
xchg
and
push
xor
xlat
xor
aaa
rcr
pop
rcll
int3
orl
add
jl
mov
cmp
or
adc
movsl
mov
cmpsb
and
or
mov
xchg
or
rolb
sbb
cmp
arpl
imul
outsb
push
insl
bnd
out
or
stos
jecxz
icebp
dec
add
xchg
pop
jno
jl
xlat
scas
psllw
jg
add
insl
lret
mov
gs
cmp
negl
push
pop
sub
xchg
fwait
xchg
lcall
push
movsl
outsb
mov
mov
mov
jge
lock
out
lahf
je
test
in
es
scas
and
inc
lods
xchg
cltd
jns
pop
fcoms
jb
jmp
ficompl
push
bound
lock
sub
xor
xchg
sti
mov
nop
leave
inc
inc
ja
in
push
mov
push
into
jmp
int3
xchg
add
or
xor
stos
pop
mov
fistl
pop
cli
popl
out
push
fldl
test
fadds
adc
inc
push
dec
lret
fisubrl
jle
push
pop
repz
outsl
mov
jmp
std
push
es
aam
std
or
push
imul
push
into
rcrb
inc
movsl
push
cmp
clc
aad
dec
add
inc
clc
inc
bnd
pop
les
mov
divl
jge
sbb
dec
mov
filds
or
repnz
lock
sub
push
cmp
pcmpeqd
aam
fidivrl
jo
int3
sbb
and
fldt
js
mov
or
dec
je
inc
and
shl
cmp
imul
fistpl
and
shr
mov
mov
les
jmp
add
pop
adc
cmp
test
jo
add
sti
mov
or
pushf
fdivr
rolb
jge
dec
mov
mov
popf
push
mov
pop
inc
in
lcall
movsb
push
test
mov
scas
int3
xchg
inc
mov
aad
je
or
jo
dec
jb
sub
mov
push
mov
fisttpl
xchg
out
sbb
mov
ret
leave
aad
xchg
je
in
repnz
mov
inc
je
sbbl
xor
stos
pop
inc
dec
add
icebp
out
pop
or
xor
jae
xor
js
adcl
xor
repnz
jle
sbb
movsb
imul
inc
test
movsl
stc
fsubrp
enter
jne
push
pop
testl
mov
out
lods
mov
enter
loope
outsb
jne,pn
call
ja
test
xchg
jmp
or
bound
je
std
sbb
in
or
psrlw
fsubr
aas
mov
xor
jae
sub
jae
cs
inc
hlt
jns
call
xchg
adc
pop
cmp
push
sbb
xchg
ss
xchg
shll
je
fstpt
cmp
inc
ds
aad
lds
dec
cmp
jb
in
xchg
movsb
aaa
bound
call
xor
out
push
lods
call
dec
push
inc
jle
and
jecxz
jbe
aam
ljmp
cmc
xor
int
loope
cwtl
mov
xchg
test
push
push
xor
pop
xchg
jbe
cwtl
repnz
sub
cmp
sub
data16
shr
sub
out
iret
test
dec
pop
pop
jb
mov
jl
dec
adc
ds
push
lods
mov
mov
fucom
arpl
mov
outsb
push
movsb
and
cmp
bnd
pop
lahf
push
popa
dec
xchg
xor
mov
jmp
cmp
loopne
ss
nop
fs
mov
loope
stc
dec
les
push
push
outsl
xchg
faddp
daa
cmp
aam
dec
mov
movsb
into
mov
xorl
sub
inc
cmp
sub
or
mov
mov
loope
psrlq
ja
shl
sbb
addr16
loopne
mov
mov
sbb
mov
jns
outsb
sub
push
jp
pop
cmpsb
xchg
adc
inc
xchg
inc
xchg
push
lock
add
fstl
push
icebp
pop
popa
pop
ror
outsl
stos
fwait
sbb
ss
clc
out
pushf
je
push
push
xchg
push
inc
inc
or
ficoml
jns
dec
pusha
rcrl
fwait
sub
add
icebp
cmpsb
adc
or
shlb
cwtl
imulb
ja
addr16
movsb
ja
cmp
leave
push
jo
dec
jne
inc
popf
icebp
sub
xor
lock
push
stos
jle
not
pop
shll
in
imul
and
pusha
push
and
inc
mov
dec
lcall
cmp
cmpsl
mul
or
mov
jns
test
cli
mov
mov
lock
enter
mov
es
aam
cs
or
cwtl
test
mov
fs
xchg
pop
mov
or
mov
pop
mov
sub
sub
aas
ss
test
cmp
xor
inc
and
mov
out
icebp
push
js
test
jge
shrb
sbb
pop
sahf
and
repnz
sub
sbb
in
push
cli
mov
cmp
adc
xchg
pusha
std
lock
shl
xchg
inc
outsl
in
jg
sub
sub
mov
repz
cs
push
lods
lea
pop
pop
ds
sub
popl
imul
sbb
test
jecxz
repz
outsb
rorb
add
xchg
lods
sub
sarl
imul
sub
push
lahf
mov
mov
lahf
and
out
add
bound
ficomps
inc
add
stc
cmpsl
mov
call
ret
roll
xlat
push
xchg
ss
or
xor
test
push
fidivrl
sbb
dec
adc
fcom
movb
adcl
mov
jne
or
add
daa
pop
or
and
repnz
stc
mov
aad
sbb
xchg
push
cmpsl
insl
popa
fisubrs
sub
and
rclb
repnz
xlat
mov
out
adc
shrb
sub
mov
push
mov
test
arpl
push
or
cmpsb
cmpsl
imul
xchg
xor
mov
push
jge
fadds
int
cmp
dec
rcrb
sub
inc
push
lahf
inc
fldl
sbb
push
mov
jl
mov
push
ret
push
adc
insl
in
mov
jns
out
mov
sbb
or
mov
mov
in
add
dec
pop
ja
movl
add
clc
sbb
out
or
xor
inc
push
mov
jmp
int
fwait
push
scas
jp
subl
or
aam
loope
jecxz
dec
pop
jp
shl
add
add
sbb
dec
sbb
loopne
popa
sub
push
mov
or
out
add
cltd
jmp
add
shll
cmpsl
fisttpll
ja
sub
cmp
arpl
or
loope
sbb
sbb
les
xchg
cmp
insl
xchg
aad
ss
data16
stos
lret
adc
int3
repz
adc
pop
loop
cmovle
in
jae
xlat
sbb
aam
pop
dec
cmpl
dec
pop
sub
mov
inc
xchg
mov
pop
cmp
push
or
mov
jns
mov
xor
ja
mov
mov
rorl
fisubl
lret
adc
adc
inc
add
inc
shr
emms
add
jbe
loope
addr16
sahf
and
mov
testl
cmp
aam
sub
in
out
sti
push
lret
int
pop
lea
push
shll
gs
adc
xchg
jno
aas
cmpsl
dec
adc
inc
add
sub
and
pop
push
cmp
cmp
xchg
pop
and
call
aam
mov
ds
mov
repz
in
adc
sub
pop
add
jge
mov
nopl
pop
xlat
inc
fmull
das
dec
lret
push
addr16
or
loope
pop
subb
mov
adc
loopne
scas
pop
adc
jge
sbb
inc
pop
mov
imul
xchg
jbe
pop
lods
xor
fadd
inc
pslld
jnp
aad
cld
inc
adc
ljmp
popf
aas
lret
push
jns
or
fistps
lcall
jne
loop
pushf
mov
or
push
movsl
stc
inc
orl
int
sub
dec
jns
jnp
lret
mov
mov
mov
addr16
fmuls
inc
add
pop
fcomps
and
dec
in
sbb
mov
fwait
jo
imul
out
add
in
lahf
hlt
lods
jae
sub
dec
and
sub
sbb
outsb
xor
ret
lea
jo
sub
jne
mov
adc
mov
xor
scas
mov
cmp
sub
jno
sbbl
jp
push
test
dec
aas
ret
xchg
xor
lret
pop
cmpsl
xor
arpl
or
add
fmuls
lods
sarl
push
xchg
sub
scas
xor
push
shll
cmc
int
xchg
mov
pop
add
das
out
xor
loop
jne
sbb
add
mov
and
or
pushf
cmp
rorb
push
cmp
dec
in
mov
xchg
pop
sbb
ret
lea
pop
aas
sbb
sbb
loop
dec
enter
xor
mov
rorb
sub
sbb
ljmp
xchg
enter
fsubrs
xchg
dec
pushf
iret
test
mov
sub
mov
sub
xor
push
push
sti
movsl
lret
dec
sub
jae
ljmp
adc
out
jbe
cmpsb
psadbw
inc
das
adc
ja
stos
dec
pop
sub
fbstp
mov
fistps
inc
gs
ds
xor
or
ret
fstpl
inc
aam
loop
sahf
jbe
stos
fidivrs
jno
fwait
xor
and
nop
push
imul
int
repnz
push
and
mov
inc
or
loope
pushf
pop
popa
daa
and
xor
push
out
fadds
loop
jnp
or
gs
addr16
test
cmc
rcll
pusha
pop
ljmp
and
xchg
ret
stos
pop
std
adc
jg
jg,pt
imul
xchg
inc
call
sub
icebp
sti
sbb
loope
repz
xlat
xchg
gs
lcall
imul
ljmp
mov
in
xor
movsb
xchg
nop
std
adc
dec
test
xchg
xchg
dec
inc
mov
lock
cmc
ror
mov
int
mov
loope
pushf
icebp
mov
das
daa
jnp
dec
fmuls
leave
push
mov
repz
cwtl
adc
lds
add
cmp
or
pop
cmp
cmpl
jp
sub
jb
and
mov
mov
adcb
out
push
mov
popf
loope
jns
lret
aas
aaa
push
sahf
lods
gs
push
add
adc
adc
out
in
nop
out
loopne
into
cli
imul
and
scas
gs
xorb
hlt
dec
fisubs
push
inc
js
dec
add
push
adc
aad
sbb
aad
pop
fldlg2
sbb
popf
jle
mov
repnz
inc
stos
xchg
push
stc
sbb
add
xor
mov
sub
pushf
add
mov
push
ret
dec
in
insl
xchg
jnp
inc
negb
ljmp
lock
adc
cmc
push
sbb
cwtl
popf
sub
jmp
xchg
sbb
sbb
push
adc
add
ljmp
add
mov
inc
dec
xchg
dec
rolb
js
push
ficomps
cwtl
lret
insl
cltd
inc
xchg
aad
cli
fcoml
pop
mov
cmp
rclb
mov
movsb
xchg
add
sub
aad
cwtl
or
cmp
rcl
xor
xchg
fdivl
adc
test
dec
mov
adc
data16
mov
push
data16
cmpsb
fwait
icebp
test
add
out
dec
and
jl
mov
int3
mov
loope
decl
hlt
jo
les
adc
pop
subb
inc
xchg
es
lret
add
and
fnsave
inc
rcll
rorl
fstl
in
push
and
xchg
xor
js
jp
sbb
loope
jb
aad
inc
sahf
lods
jns
in
leave
ljmp
ss
shll
cmpsl
movsl
insb
push
stc
push
cmp
je
lds
mov
xor
in
mov
pusha
jg
lcall
push
lds
pop
es
xchg
inc
in
cmc
stc
jmp
outsl
js
dec
sub
js
loope
fldl
in
std
pop
test
pop
jl
jne
inc
stos
jns
js
inc
jecxz
repnz
mov
inc
mov
sub
rolb
mov
scas
sbb
pop
adc
fisttpll
pop
adc
stc
xor
test
push
sbb
mov
lods
pop
sbb
pop
lret
push
cwtl
xchg
dec
fmul
push
dec
mov
and
and
and
aas
xchg
jge
or
in
mov
xor
mov
aad
mov
lahf
push
and
add
sbb
xlat
pusha
mov
fucomi
or
and
das
pop
mov
fadd
enter
stos
hlt
aaa
decb
add
push
mov
add
lods
dec
inc
sub
inc
test
lret
jp
dec
stos
cmp
xchg
movsl
test
mov
stos
bswap
mov
aam
sbb
fisubrl
fildll
mov
aas
pop
add
pop
mov
mov
mov
aam
pop
push
and
jbe
in
shl
push
pop
sbbb
ljmp
test
in
push
add
mov
jb
add
sti
les
popa
rorb
pop
and
rcrl
test
frstor
inc
push
mov
mov
cmp
mov
mov
clc
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
pop
mov
xchg
cld
popa
bound
bound
lret
xor
push
out
cmp
mov
pop
sbb
push
push
mov
adc
loop
xchg
int
out
xor
sub
leave
pop
outsb
push
pop
sub
xchg
xchg
in
repnz
xchg
pop
repz
push
xchg
jmp
sti
pop
jge
xchg
test
das
xchg
mov
mov
xchg
shl
pop
mov
cmp
movsb
testl
rorl
sahf
jle
stos
mov
mov
xchg
dec
xadd
lcall
vunpcklps
rcll
das
sub
out
into
jmp
cmpsl
cmp
mov
mov
lcall
divb
xchg
hlt
mov
dec
cmp
js
in
mov
aam
andb
lcall
mov
jno
lds
dec
inc
lock
fists
or
nop
sbb
imul
insl
rol
mov
xor
jnp
insl
scas
cli
pop
mov
add
mov
xchg
cmp
loop
aaa
icebp
jle
pop
add
xor
prefetcht1
mov
dec
mov
jge
lahf
adc
cltd
ret
roll
jns
je
leave
cmpsl
test
inc
and
outsb
cmc
ja
pop
cli
fcmovne
addr16
adc
call
mov
addr16
jle
mov
and
cmpsl
aam
adc
sti
les
es
leave
jo
sbb
cmp
mov
ret
sahf
and
clc
cltd
jmp
lock
ja
xchg
leave
dec
pop
out
fxch
out
sbb
add
in
xchg
lcall
push
lea
ss
into
hlt
jne
movsb
xchg
xlat
adc
add
xor
enter
or
or
xlat
icebp
fstl
or
lods
pop
test
ja
cmpb
stos
inc
test
sbb
add
and
push
xor
icebp
and
add
and
pop
dec
nop
test
cmp
cmp
icebp
in
iret
push
pusha
cmp
push
lods
in
testb
cltd
and
mov
dec
xchg
lock
cmpsl
test
add
mov
ret
fldenv
scas
sbb
jge
push
or
aam
outsb
cmp
xchg
dec
sbb
push
fsts
push
ror
mov
mov
shlb
fldt
cli
ficoms
sub
mov
in
sar
lods
test
movsb
mov
add
dec
sar
nop
pop
mov
lcall
int3
push
rcl
scas
rorl
dec
aas
jmp
ret
or
imul
push
fwait
push
jle
int
mov
fisttpl
sbb
add
jp
dec
adc
xchg
dec
xor
sahf
idivb
movsb
xchg
pop
dec
push
lods
add
int
fs
cmpsl
cmp
das
cli
jns
addr16
ret
ret
inc
or
inc
fnsave
cltd
push
into
fisubrl
push
and
jo
add
aas
fisubrs
pop
pop
iret
jmp
enter
aaa
fisubs
lret
loope
push
push
adc
aas
cmp
jle
push
push
mov
sub
jmp
out
cli
dec
mov
lods
xchg
repz
mov
mov
adc
test
xchg
pop
arpl
sarl
jmp
movsl
mov
pop
pop
mov
aam
stos
in
nop
inc
les
stc
sbb
push
aam
cmpsl
pop
sub
std
int
pop
mov
sub
push
out
jnp
jp
mov
fmull
cmp
lahf
inc
mov
cmc
test
pop
leave
das
ja
xchg
adc
add
ss
push
mov
daa
cmpsl
xor
push
xchg
int
imul
pop
adc
push
xchg
popf
call
xor
or
enter
fdiv
ds
cld
in
aad
xor
add
inc
pop
cmp
pop
pop
outsl
mov
lock
xor
mov
pop
sub
cmp
cmp
sub
iret
push
mov
fsubs
sbbb
ficomps
in
jecxz
jno
push
lock
inc
add
bound
jo
ljmp
fcmove
xor
into
addr16
cli
sub
jge
mov
sbbl
or
mov
filds
scas
cmpsl
popf
insl
xor
jp
dec
out
cmc
sbb
pop
mov
arpl
pop
xadd
popf
pop
dec
cmp
out
ds
addr16
fdivl
outsl
jmp
inc
cmp
lock
stc
adc
sbb
jnp
or
adc
repnz
xchg
in
push
or
ror
call
movsl
or
hlt
jne
pop
or
imul
and
and
xchg
add
in
jecxz
inc
mov
xchg
loope
mul
and
je
or
insb
cmp
iret
int3
adc
aaa
subl
into
aaa
sbb
mov
jecxz
int
iret
pmulhuw
xchg
js
in
dec
push
aam
mov
xrelease
mov
clc
js
pop
sbb
push
cmpl
dec
scas
aad
add
push
pop
lock
add
mov
jl
push
xor
xor
clc
daa
test
xchg
and
fmuls
inc
loopne
subl
jnp
sbb
js
addr16
pop
jp
sub
jb
sbb
test
or
rol
std
or
das
aad
lcall
add
cmpsl
mov
insb
mov
lret
ficompl
adc
es
lea
cmp
adc
or
sub
enter
decl
repz
cmp
call
or
pushf
jne
add
movhps
out
insb
push
and
daa
gs
imul
fsts
fbld
lods
insl
adcl
cmp
arpl
jo
add
fnstenv
fstpt
stc
sub
dec
push
push
push
xlat
jg
push
aam
iret
push
pop
add
push
inc
fsubrs
std
ret
faddl
in
xchg
lcall
xchg
jle
cld
scas
adc
mov
movsl
ss
pop
sbbl
jp
xchg
out
orb
lcall
test
xor
add
repnz
sbb
inc
add
inc
clc
popa
jbe
pop
xor
mov
cmc
jmp
hlt
push
rolb
call
mov
pop
rcll
adc
pop
dec
adc
mov
scas
sbb
mov
loopne
dec
ret
or
outsl
divb
mov
scas
movsb
fisttpl
cmp
mov
push
jecxz
and
pop
pop
cmp
xor
in
pusha
iret
repnz
or
pop
jno
pop
gs
sub
mov
stc
mov
frstor
hlt
sub
adc
add
pop
inc
rcrb
or
and
andb
bound
in
pop
decl
ja
in
out
pop
xor
gs
call
mov
sbb
sub
cmpsb
adcb
shl
pop
and
lds
push
xor
int
mov
and
ss
push
rcll
xor
adc
or
test
mov
cmp
stos
int3
int3
mov
cmp
jmp
adc
insb
mov
adc
xchg
lret
dec
push
mov
pop
cs
pop
sub
xor
xor
fists
popf
pop
fwait
pop
das
sbb
jecxz
daa
jne
jb
pop
mov
gs
call
addr16
lret
jle
xchg
testb
test
ds
jp
xor
or
xchg
sbb
arpl
inc
mov
out
or
or
xchg
dec
jecxz
scas
jns
in
outsl
mov
cmp
dec
loopne
adc
push
stos
addr16
jne
sti
stos
ds
add
fmuls
cmp
out
data16
pusha
test
pop
mov
ret
xchg
rcll
adc
aas
jge
test
inc
push
jle
insl
outsl
mov
mov
popa
rorb
repnz
push
enter
xchg
dec
push
in
addr16
aas
cmp
xor
outsl
push
loop
mov
cmp
xor
lds
bound
ljmp
xor
cmpsb
sbb
loope
mov
or
xor
xor
xchg
jge
lret
loop
insl
sbb
loop
mov
test
loope
outsb
imul
inc
xchg
pop
ret
and
jl
aad
enter
gs
call
ffree
or
mov
loope
sub
nop
mov
inc
decb
push
dec
cltd
add
xchg
mov
cs
or
test
mov
faddp
sub
bound
xchg
mov
xchg
cld
rcrl
jns
js
inc
gs
adc
sub
mov
sbb
jl
mov
mov
inc
add
and
aaa
sub
pop
imul
pushf
cmpsb
ja
movsl
jmp
shll
xor
sbb
fimull
es
sar
mov
out
pop
test
jb
loop
nop
push
mov
ds
adc
mov
mov
push
cmp
lds
ljmp
mov
out
sbb
imul
testb
or
jle
mov
dec
out
and
xchg
sbb
push
lahf
mov
vmread
pop
xchg
sbbl
xor
lds
mov
sarb
cmc
push
in
mov
daa
mov
push
cmp
stc
mov
ret
inc
dec
push
test
mov
cmp
movsl
les
mov
fldcw
cmp
fisubs
lds
iret
mov
mov
xchg
ret
andl
push
jp
or
frstor
pop
add
shld
xor
andl
cltd
jb
xchg
mov
mov
sahf
sbb
idivb
push
loop
jg
sub
adc
push
cwtl
mov
ret
mov
movsb
cmp
shrb
jecxz
xor
add
push
xorb
int3
movsb
pop
dec
push
sarl
data16
xlat
mov
push
adc
jo
adc
or
jp
movsb
mov
xor
aam
mov
mov
jb
mov
dec
add
inc
testl
lock
xor
cltd
repz
sub
or
xchg
int3
and
dec
in
stc
jle
mov
sahf
ficoms
scas
cmp
push
push
adc
fdivrl
stos
or
dec
inc
sub
and
ficompl
stc
clc
aam
mov
or
mov
add
cwtl
mov
push
int
incl
inc
adc
in
pop
xchg
rcll
jmp
mov
add
call
bnd
sbb
imul
pop
inc
sbb
stc
roll
mov
pop
xlat
pop
movsb
dec
xchg
jbe
jno
adc
lods
popa
loopne
push
setb
xchg
pop
ss
dec
mov
ds
mov
dec
and
mov
insl
loopne
aam
and
jp
cltd
cmp
ja
jle
in
jecxz
jmp
mov
loope
rcrb
jp
clc
add
clc
loope
xchg
jecxz
adc
push
mov
lods
sub
mov
cmp
cwtl
ficompl
sar
popf
push
xchg
mov
add
rcll
in
jne
cld
cmpb
push
loope
enter
outsb
arpl
sub
stos
xor
incw
mov
insl
cmp
xchg
in
imul
jno
jns
lock
inc
movb
sub
addr16
adc
inc
or
icebp
leave
and
jae
test
xor
xorb
push
inc
push
stos
xor
aad
and
xor
mov
mov
lss
jl
or
int
adc
test
jl
mov
mov
fistpl
aaa
push
dec
sub
daa
jge
sbb
xor
jne
push
adc
and
outsl
adc
jbe
dec
cs
and
dec
mov
imull
out
push
cmp
stos
sbb
stos
or
sub
mov
imul
push
xchg
mov
ret
int3
out
or
fnstsw
sub
cmp
jne
pop
mov
movsl
mov
and
mov
sbb
xchg
and
pushf
mov
test
cs
xor
cmp
push
sbb
xor
ret
iret
cld
stos
mov
cli
loope
sub
sar
lods
sbb
add
pop
imul
mov
and
sub
push
sbb
negb
cli
aad
dec
rcrb
gs
mov
sahf
in
mov
shrb
test
stc
test
mov
and
dec
insl
out
in
daa
call
clc
pop
adc
ja
imul
xchg
xorb
mov
mov
jle
mov
push
pop
pop
push
sub
ret
cld
and
dec
xor
push
mov
sub
mov
sti
mov
dec
ficomps
xchg
cmp
xchg
cmp
push
loop
pop
pop
clc
cmpsl
test
mov
movl
pop
mov
inc
adc
mov
mov
in
mov
add
cli
xor
sub
xchg
insl
xor
daa
fisubs
lret
outsl
clc
stc
cmpsl
mov
movl
mov
repnz
mov
das
loopne
or
pmulhw
xor
cld
dec
xchg
int3
xchg
mov
daa
je
sbb
movsl
int
pop
dec
dec
cmp
and
inc
sbb
sbb
sbb
xchg
xor
shrb
outsl
sti
cmpsb
repnz
movsl
sbb
mov
into
in
insl
or
cmpsl
leave
test
dec
notl
sti
add
cmp
cmp
aam
ds
es
mov
pop
add
xor
sar
lahf
std
cmpsb
xchg
dec
pop
getsec
cs
mov
cwtl
rolb
mov
lods
xchg
mov
ljmp
lret
mov
pushf
pop
in
cmp
add
mov
aad
adc
test
rcrl
xchg
push
divl
clc
lahf
or
fs
lret
dec
pop
sub
sbb
outsb
inc
ret
mov
and
cmp
mul
mov
cli
addr16
add
mov
xor
inc
mov
and
je
pop
cmp
ret
mov
sub
cmpsb
test
mov
and
pop
pop
push
out
cli
icebp
ja
js
call
call
or
sub
sti
and
cmp
inc
xchg
sti
and
sbb
cmp
or
clc
fwait
repnz
mov
ret
inc
sti
call
add
cmc
bound
sub
mov
mov
rcl
inc
adc
and
dec
cmp
add
rclb
jge
jns
scas
cld
std
add
push
fdivrl
sub
sbb
mov
pusha
adc
and
daa
cmpsb
xchg
bound
dec
std
cltd
ja
or
stos
mov
cmp
pop
test
lods
add
sub
iret
cltd
leave
lcall
mov
or
ljmp
outsb
or
xor
lahf
js
lahf
lods
lods
add
dec
jne
dec
xchg
jne
scas
cs
das
es
or
jmp
pop
popf
jbe
js
mov
sbbl
pop
lret
cld
mov
xorl
stos
xchg
int
xor
test
jae
pop
cld
cmp
or
fs
dec
scas
outsb
hlt
mov
inc
rcr
jno
cmpsl
cld
mov
shr
sbb
insb
cwtl
inc
stos
ret
adc
mov
or
sarb
xor
cmpsb
pusha
bound
cmp
mov
push
mov
ja
inc
inc
mov
daa
cwtl
push
or
mov
call
jnp
jle
sbb
mov
sub
je
cmpsl
clc
xor
adcl
dec
pop
or
sbb
repnz
scas
jl
fneni(8087
pop
call
enter
cmp
notw
icebp
jns
pop
aas
push
subb
roll
sub
hlt
push
dec
or
jnp
cmp
jb
popf
imul
xor
adc
es
das
or
stos
push
add
fistps
or
outsb
mov
inc
mov
cmp
fwait
xchg
data16
jle
insl
add
adc
lock
scas
iret
stc
inc
push
sbb
adc
xchg
es
sub
push
ret
mov
push
rorb
iret
shll
fcoms
icebp
inc
mov
adc
orl
or
insb
push
xchg
cmp
push
inc
or
pop
pop
jbe
push
test
add
hlt
jnp
mov
inc
inc
addl
push
and
andb
stos
push
js
and
lods
mov
imul
fadd
imul
jp
scas
cltd
and
fistpl
or
xor
fsubrl
repz
out
test
aaa
cmp
shll
scas
je
mov
js
mov
out
add
jp
daa
mov
outsb
cwtl
mov
push
pop
ffreep
aad
ss
shlb
push
cmpsl
stc
mov
scas
fs
jbe
mov
fbld
pop
cmp
xor
pop
sahf
xchg
std
fs
cld
lret
addr16
dec
xor
jp
pusha
push
cmp
insb
or
add
sub
xor
or
push
andl
enter
int3
pop
stc
fdivr
adc
subb
je
dec
inc
pushf
push
test
xchg
sahf
loopne
cltd
andl
js
pop
das
fwait
jne
inc
sub
jo
inc
sbb
xchg
arpl
mov
sahf
dec
pop
adc
stos
sbb
jbe
shll
and
or
jno
inc
mov
imul
out
jb
dec
push
lahf
mov
int
in
pop
mov
adc
inc
shll
jne
repz
aaa
mov
inc
nop
imul
negl
jbe
aam
sub
sub
jnp
jae
mov
scas
dec
insb
lahf
adc
in
rorb
stos
repz
es
aas
mov
lahf
sub
rclb
pop
out
jge
bound
xor
mov
cltd
insb
lea
enter
stc
and
ret
mov
add
xlat
adc
pop
mov
xchg
mov
das
dec
mov
sub
les
iret
pop
push
addr16
fs
jo
aad
sahf
sub
in
addr16
cmp
cmp
adc
sbb
test
ret
jne
repz
jg
jmp
lahf
xchg
sub
in
lds
push
mov
js
lock
or
sub
dec
sub
mov
subb
sub
sar
jmp
pop
imul
fdiv
xor
cmp
mov
pop
loop
add
jne
pop
or
add
adc
jl
icebp
aam
stos
pop
dec
fucomi
push
mov
inc
xchg
shrb
add
push
cmp
sub
jg
jl
or
sub
inc
lods
into
aad
mov
mov
cs
lods
cmpsl
xor
mov
adc
popa
stos
fwait
leave
jmp
pop
mov
xor
push
xchg
inc
xchg
aas
mov
cltd
jge
dec
mov
or
mov
mov
sub
in
jge
or
pushf
pushf
push
jg
stos
sarl
push
xchg
ffreep
das
inc
and
clc
jo
stos
ss
data16
mov
mov
and
movsl
in
xchg
xor
mov
adc
jle
sbb
dec
mov
in
sahf
stos
mov
mov
ljmp
or
out
setle
and
mov
mov
iret
pop
loopne
mov
addl
je
adc
cwtl
adc
or
add
out
test
pop
rcrb
sub
mov
or
out
or
cmp
aad
inc
gs
jae
push
sbb
sub
call
in
cmpsl
fidivs
xchg
aas
xor
mov
push
ljmp
fcmove
mov
adc
mov
jno
insl
or
fcomps
shll
mov
stos
dec
cmp
out
pop
mov
add
dec
das
xchg
inc
lea
add
pop
test
xor
out
sub
cmpb
cmpsb
outsb
push
mov
mov
sub
fs
test
push
decl
into
lds
lret
sbb
das
xchg
lods
or
test
xchg
testl
xlat
int
ds
sbb
pop
leave
pop
icebp
bound
cmp
sbb
stc
jo
and
jg
in
pop
xchg
mov
push
fsts
xchg
inc
or
rcll
adc
das
adcl
mov
lret
sar
ret
mov
stos
add
push
cmp
in
cmp
insb
sub
dec
or
daa
push
rcll
fs
xchg
pop
mov
lret
jns
mov
jbe
maskmovq
idivl
cmp
adc
in
inc
jge
sbb
mov
insb
sti
xchg
jmp
mul
dec
insl
mov
ljmp
cmc
ret
sub
xor
jl
add
jbe
lcall
adc
fwait
insb
lret
in
mov
ljmp
stos
js
cmp
sub
add
push
test
pop
sahf
jge
clc
enterw
or
mov
mov
add
test
xchg
push
mov
mov
cmp
imul
fchs
sub
stos
pop
jb
in
jg
mov
mov
xor
jmp
lea
mov
aaa
dec
adc
and
sub
push
add
push
fistl
movsb
xchg
dec
imul
in
imul
inc
inc
pop
jbe
sbb
inc
xchg
test
sub
insb
gs
insl
mov
movsb
sti
loope
loop
std
or
js
cltd
pusha
fidivl
sub
les
add
add
pusha
mov
dec
loopne
adc
jne
and
js
adc
sub
dec
rcl
pop
repz
fnstenv
ja
push
sub
test
push
sub
sub
aad
fs
fucomip
jae
add
enter
out
das
mov
xor
pop
fcoms
or
shll
les
out
xchg
adc
sti
scas
mov
xlat
xor
add
pop
movsl
jns
cs
fs
lock
push
sbb
popf
scas
sbbl
filds
aaa
inc
movsl
mov
clts
xor
pop
inc
push
pop
insl
xchg
int3
loop
fists
inc
xlat
out
insl
push
push
cwtl
dec
pop
pop
push
or
dec
sub
lods
push
faddl
pop
gs
push
adc
out
xchg
cmp
dec
fwait
loopne
adc
mov
jl
xor
inc
arpl
ds
dec
icebp
pop
jb
loopne
fs
push
cmpsl
dec
dec
cmp
shl
jl
lods
jmp
xchg
fs
sbb
dec
dec
mov
lahf
sub
pop
cmp
ljmp
mov
loope
icebp
not
sahf
sar
xchg
es
daa
mov
fisttpll
in
sub
push
inc
insl
sbb
pop
lahf
add
rclb
inc
and
les
rcl
lds
sub
jl
inc
adc
fsts
xchg
nop
lea
pop
sbb
les
jbe
insb
xchg
into
pop
sub
push
pop
movsb
into
xchg
mov
mov
and
bnd
adc
ljmp
cmc
das
push
data16
dec
mov
mov
xchg
xchg
inc
mov
test
jmp
push
insl
sbb
push
cld
xchg
movsb
ja
jecxz
setne
mov
imul
pop
adc
repnz
cld
and
lods
mov
cmp
clc
jb
and
xchg
popl
and
xchg
daa
push
sub
rclb
into
aas
ficomps
jnp
and
inc
mov
mov
push
xchg
outsl
jne
mov
dec
dec
cli
adc
addr16
jmp
ljmp
xor
jmp
test
pop
fcompl
aaa
pop
insb
pop
mov
dec
decl
pop
test
dec
scas
orb
xor
aam
sub
jb
fdivs
inc
jl
out
inc
js
cwtl
enter
or
faddl
push
xorl
imul
fstpl
addr16
ja
jno
sbb
int3
pop
pop
fnsave
lock
or
out
adc
and
sbb
push
scas
xchg
es
xchg
out
xchg
mov
sbb
mov
xor
scas
idiv
push
dec
push
popl
into
cltd
rcll
call
ss
cmpsl
adc
adc
lea
xchg
sbb
scas
loopne
shll
int3
lods
mov
sub
call
sbb
cmp
and
aas
pop
sbb
pop
jge
cmp
js
mov
mov
fldenv
cmp
mov
imul
fs
dec
ss
cmp
es
in
mov
mov
stos
inc
jl
popa
sahf
test
mov
lock
mov
subl
icebp
jns
push
fsubp
int
bound
add
inc
stos
pop
ret
daa
xchg
imul
mov
sbb
aad
mov
inc
and
clc
ja
dec
push
mov
les
sbb
std
push
ret
bound
outsl
sub
or
xor
xor
mov
lods
les
int3
mov
call
lods
dec
xlat
sbb
mov
popf
and
push
in
cmpsl
and
mov
call
ja
inc
out
jmp
sub
push
mov
repz
pop
movsb
and
iret
sarb
mov
lods
jnp
imul
mov
out
test
test
mov
movsb
push
jl
fwait
xchg
inc
pop
xlat
xor
lds
lcall
sbb
pushf
test
push
and
rorl
mov
scas
mov
sub
mov
push
jb
dec
sbb
xchg
mov
nop
sub
and
fidivrs
setne
add
xchg
rclb
js
sbb
push
xchg
mov
adc
xchg
movsb
fistpl
test
shrb
pop
ret
pop
dec
lock
fimuls
shll
add
repnz
dec
rcl
pop
cmp
mov
gs
lods
in
add
iret
leave
ret
sub
jne
adc
test
dec
pop
push
ret
mov
call
or
cmpsl
xlat
mov
jge
insb
adc
inc
popf
cmpsl
fadd
push
inc
mov
cwtl
je
jb
js
inc
or
iret
out
in
das
pop
icebp
es
jle
pop
fidivl
push
mov
rol
push
xchg
or
loopne
out
or
loop
jl
shr
jmp
xor
ljmp
fcoml
cltd
lcall
sti
push
ja
dec
and
lret
mov
lods
ss
stos
xor
push
adc
sbb
mov
cmpsl
fistpll
sarl
test
orl
leave
adc
push
nop
inc
lods
fwait
mov
pop
dec
in
jno
jae
mov
ljmp
xchg
add
mov
cld
push
repnz
or
fucomi
repnz
cmp
adc
xchg
jge
xchg
cwtl
cmp
mov
out
test
push
scas
fwait
add
push
bound
scas
or
xchg
jmp
jg
pop
test
aas
movsl
aad
sbb
movsl
mov
pop
decl
inc
pop
mov
and
pop
out
xlat
sarl
jo
cmp
jbe
push
fucom
cwtl
xchg
cmpsb
dec
pop
clc
daa
cmp
pop
lahf
cs
sbb
ss
stc
fdivs
and
push
loopne
add
xor
xor
push
lods
subb
inc
daa
pop
lds
cld
stos
sub
cs
std
jno
fwait
push
jbe
sbb
mov
dec
fiaddl
test
push
mov
jno
das
push
mov
ret
mov
mov
and
or
cmp
fstpt
sbb
out
mov
aad
push
xchg
ret
push
daa
mov
jecxz
popw
mov
mov
pop
push
stc
cmc
xlat
in
mov
icebp
jp
fidivrl
jp
das
fdivrs
pop
jnp
daa
or
push
xor
and
sbb
dec
sbb
push
xchg
jne
inc
adc
clc
mov
sbb
scas
rorl
and
hlt
and
out
push
bound
jb,pt
xor
sbb
arpl
mov
fistpl
int3
arpl
bound
jb
or
xor
call
std
mov
adc
fwait
sbb
xor
fneni(8087
pop
daa
jmp
andl
inc
mov
pusha
pop
icebp
sbb
mov
je
or
in
sub
adc
xchg
jge
mov
sub
into
insb
fwait
push
add
dec
xchg
pop
pop
mov
adc
and
sub
adc
ljmp
mov
fucomip
mov
and
add
mov
frstor
popa
sub
and
xchg
xor
sbb
int
mov
sbb
and
mov
hlt
js
mov
popfw
add
sbb
sbb
mov
out
dec
and
inc
xor
hlt
add
jnp
clc
mov
jbe
test
pusha
dec
hlt
cs
addr16
out
pop
xor
mov
jae
pop
mov
addr16
shll
insl
adc
mov
sub
add
icebp
scas
pop
imul
ret
das
out
nop
xor
push
in
movhps
fsubrl
mov
add
push
out
mov
xchg
icebp
adc
stos
xor
mov
call
mov
mov
ficoml
fcmovne
and
leave
sti
pusha
xchg
hlt
bound
mull
mov
scas
jb
notb
repnz
fcmovnb
dec
clc
lahf
push
add
mov
jp
out
adc
sbbb
lea
mov
add
ret
inc
jns
sub
xor
push
stos
iret
sub
mov
es
ror
in
mov
flds
cltd
call
movb
shl
jo
inc
add
xlat
xchg
add
mov
test
or
pop
imul
outsb
hlt
mov
sub
push
xor
xchg
loope
faddp
and
cmp
lret
xor
lcall
cmp
call
push
push
and
push
mov
je
xor
rol
jl
movsl
idivl
pusha
notb
pop
int3
cmpsb
push
inc
out
aaa
popa
jo
rclb
mov
adc
mov
js
dec
mov
cmp
dec
mov
fidivl
inc
mov
xchg
mov
push
ljmp
aad
cmp
jns
imul
jnp
sub
adc
fwait
cltd
mov
or
xchg
pop
jb
cmp
int3
aam
lret
mov
inc
xor
push
scas
std
mov
mov
cmpsl
lea
lods
addr16
cld
and
dec
xor
loopne
lds
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
addr16
fsubs
cmp
bound
loope
popa
push
test
movsl
pop
pop
xchg
shlb
imull
mov
and
addb
and
add
mov
fmuls
out
jnp
mov
mov
pop
pushf
repnz
push
lret
inc
icebp
insb
sbb
jle
xor
mov
mov
loopne
cmp
int
inc
dec
sbb
les
jbe
mov
inc
and
repz
pop
cmpsl
adc
jp
push
fs
add
lcall
adc
fisttps
ds
dec
xlat
mov
adc
xor
pushl
sahf
mov
dec
mov
push
out
aas
push
orb
aam
jmp
jle
test
xchg
mov
sbb
mov
iret
sbb
aas
iret
xor
cmpsb
push
inc
mov
pushf
adc
inc
cmp
adc
mov
call
cmpb
std
dec
jge
jbe
mov
pop
mov
cli
sbb
xorl
pusha
int3
fists
aaa
pop
stos
mov
push
dec
das
push
je
xchg
dec
arpl
inc
mov
jbe
cs
in
icebp
into
ret
push
mov
mov
sahf
addl
fs
adc
mov
shll
testb
enter
lcall
jle
or
mov
es
push
andl
out
or
jb
pop
jae
shrb
sub
push
sbb
cmp
add
inc
inc
push
ret
mov
dec
lret
iret
cmp
xchg
cmpsl
mov
fisubs
cmp
in
pop
mov
loop
lods
pop
fadds
ss
lea
test
xchg
in
daa
out
int3
mov
push
sbb
test
hlt
sahf
pusha
ds
inc
aam
lock
pop
leave
dec
or
fwait
push
jae
inc
sub
imul
jno
mov
movsl
dec
test
jmp
sahf
and
cmp
dec
pop
xchg
adc
pop
int3
xchg
cmpsl
mov
mov
xchg
fisubrs
aas
xchg
sub
test
std
xor
in
popf
mov
add
fwait
cmpsb
sub
jne
inc
xchg
dec
pop
mov
inc
inc
bound
pop
movsl
or
aaa
out
neg
iret
ret
push
out
push
xchg
add
shl
icebp
sbb
mov
sbb
push
ljmp
hlt
jmp
dec
lcall
cli
data16
inc
lahf
jp
mov
and
aam
xchg
arpl
mov
cmc
das
pop
or
call
jecxz
jae
mov
repz
mov
outsb
xchg
testb
dec
mov
cli
xor
sarb
pop
inc
jb
aad
test
insb
pop
test
ret
sub
mov
cld
shlb
insb
imul
xchg
or
aaa
inc
dec
imul
mov
xlat
ror
pop
sub
add
popf
mov
push
clc
out
ljmp
es
and
jne
push
push
mov
push
add
dec
cmpsb
inc
aam
stos
dec
shlb
repz
stc
imulb
mov
jns
fimull
mov
xchg
lods
pop
mov
inc
cs
sahf
mov
jecxz
jnp
icebp
gs
inc
add
xor
mov
inc
adc
push
mov
outsl
cltd
mov
inc
aaa
xchg
leave
sbb
stos
lods
lret
imul
icebp
mov
adc
jb
push
insl
outsl
arpl
icebp
xchg
cmp
out
cs
pushf
enter
xchg
sub
stos
les
xor
lods
jns
xchg
add
mov
add
inc
add
vpaddusw
repz
out
cmpsb
dec
add
adc
bound
adc
sbbb
sbb
push
loope
fisubl
outsb
out
push
cltd
and
cmp
leave
mov
sarl
or
sbb
jge
fucomi
and
lock
fldenv
inc
mov
jno
popf
mov
jge
imul
mov
mov
in
insb
les
fisubrl
pushf
xchg
sbb
mov
add
inc
dec
jp
ss
stc
stc
or
sahf
pop
xchg
icebp
push
sti
fdivrl
int3
js
cltd
push
inc
call
mov
pop
cltd
stos
xor
mov
lds
movsb
int3
gs
add
cmp
repz
add
inc
aad
movsb
cltd
or
mov
dec
cmp
ds
mov
pop
loopne
cwtl
inc
pop
pop
xchg
push
xor
leave
and
pop
pop
outsb
loopne
call
cmp
jle
jbe
jle
cwtl
cmp
sub
lods
in
into
dec
cmpsb
mov
test
dec
xchg
cmp
inc
jecxz
xchg
mov
test
pop
lods
iret
mov
orb
aad
jne
mov
nop
fxam
sbb
pop
inc
int3
addr16
inc
data16
jno
stc
je
add
pusha
repnz
into
into
jge
dec
loope
mov
test
js,pt
test
clc
scas
and
and
adc
push
push
inc
xchg
sub
daa
lret
or
jge
ss
mov
cmp
sub
sbb
mov
rcrb
mov
dec
je
fisttps
shrl
or
faddl
in
les
fisttpll
enter
ret
test
out
shlb
inc
aas
mov
add
cmpl
bound
jae
jmp
sub
or
imul
mov
shlb
in
fwait
ss
jne
push
decl
imul
es
cmp
adc
ss
cmc
imul
jne
call
push
pop
mov
les
xchg
test
or
sbb
pop
push
push
inc
add
pop
push
adc
repnz
cmpsb
adc
and
and
repnz
or
mov
lock
jae
sbb
fildll
pop
outsb
pop
nop
icebp
std
push
lret
and
nop
dec
inc
lods
in
fildll
adc
dec
sti
ds
sbbb
gs
jle
pushf
movl
out
shll
in
mov
fwait
xchg
xchg
out
dec
imul
xchg
inc
or
dec
sti
int
fnsave
es
add
push
sbb
fstps
test
stc
cwtl
push
adcb
xchg
push
stos
insb
fs
addl
pop
test
outsl
call
sub
shl
cwtl
dec
movsb
outsb
cmp
xor
mov
mov
rcll
pop
xchg
js
stos
pop
dec
cwtl
push
fwait
jne
cmp
lret
sub
lods
xchg
rclw
imul
pop
mov
ljmp
fistl
test
je
bound
dec
in
std
je
adc
ret
outsb
movsl
mov
fdivp
movsl
out
in
push
mov
negl
pop
pop
jbe
xlat
lret
pop
faddl
pop
mov
and
fidivs
aaa
inc
jno
in
lods
js
mov
ret
gs
enter
test
push
push
and
mov
push
lahf
insl
xor
push
sub
jns
aas
in
ror
mov
cld
call
bound
pushf
sbb
pushf
inc
xor
cltd
mov
xor
lods
inc
jp
dec
pusha
out
les
lret
ja
sahf
cmp
in
xchg
jle
sbb
dec
cwtl
outsl
adc
insl
stos
and
lret
daa
lock
bound
gs
fiadds
lahf
sub
fwait
mov
ljmp
loopne
xor
push
xor
push
sarl
jp
xchg
push
sbb
mov
and
xchg
frstor
jg
out
movsb
sbb
pop
pop
pushf
push
das
push
push
call
mov
xchg
mov
movsb
cmp
insb
cmpsl
dec
popf
lahf
mov
insl
xchg
xchg
hlt
inc
addr16
dec
fdivrp
call
mov
push
fimull
adc
int
divl
add
in
sub
push
adc
jecxz
in
ss
xor
pop
mov
mov
lret
fwait
imul
xor
and
cltd
xchg
xor
in
push
mov
lret
add
push
mov
inc
dec
push
push
lds
fdivrl
test
into
xor
pop
xchg
cwtl
imulb
and
scas
mov
xor
sbb
addb
imul
lret
lahf
or
push
add
inc
push
repz
mov
mov
sahf
or
jg
cmp
jae
test
mov
outsl
push
pop
cwtl
scas
bound
xchg
lret
test
pop
mov
aas
adc
andl
stc
addr16
pop
mov
lods
in
lahf
cmpsb
pop
mov
or
mov
roll
jo
dec
leave
inc
sbb
xchg
push
inc
sub
out
aad
jecxz
adc
or
aaa
je
push
cmp
mov
repnz
sub
mov
cli
pushf
mov
sub
leave
add
mov
repnz
mov
fisubrl
inc
js
mov
mov
jae
jl
pop
rcr
mov
pop
push
dec
jmp
push
call
and
adc
inc
dec
insl
test
sbb
mov
mov
arpl
inc
jecxz
cld
or
cmc
xchg
cmp
decb
mov
je
mov
dec
sbb
dec
loop
push
jno
icebp
and
and
fldl
cmp
stos
rolb
in
mov
xor
xchg
loope
nop
xor
xchg
stos
or
add
fidivl
bound
int
adc
dec
rcrl
rcrl
sub
mov
xor
test
lret
sbb
movsl
push
xlat
and
testl
inc
or
and
daa
pop
mov
jecxz
inc
add
data16
xor
pushf
int
fldl
daa
xchg
test
push
aam
in
pushf
and
stos
lret
iret
mov
xor
dec
xchg
add
ja
mov
mov
xor
mov
fcmovb
in
inc
or
or
sub
cmp
subb
cmc
ret
and
call
mov
mov
adc
push
xchg
loop
and
repz
nop
jb
test
insb
inc
add
out
sbb
lret
adc
inc
aad
xchg
mov
mov
rcrl
pop
mov
leave
ds
inc
add
adc
insl
xor
mov
mov
mov
xchg
or
mov
mov
fdivs
pop
rorl
mov
xchg
dec
inc
test
aad
cmc
push
mov
ss
inc
ja
loope
shl
pop
call
add
loopne
out
gs
xlat
sbb
imul
sub
lret
mov
fldenv
fwait
xor
pop
push
xlat
sub
add
mov
push
out
cmc
inc
jb
fldl
ret
jmp
adcl
adc
push
jmp
pushf
cs
add
or
cmpsl
ss
pop
test
imulb
inc
inc
sbb
testb
cltd
test
out
or
add
loop
out
movsl
add
dec
daa
stc
adc
adc
ret
lret
mov
pop
addl
lret
gs
mov
repnz
mov
mov
iret
push
icebp
ds
push
jns
xchg
in
add
movsb
data16
mov
sti
xchg
mov
and
ljmp
hlt
js
gs
mov
inc
das
aad
pop
sub
rdmsr
lods
movsb
mov
xlat
arpl
loopne
rorb
rcrb
inc
inc
dec
adc
fiadds
mov
push
popl
inc
mov
mov
outsl
out
cmp
out
adc
mov
in
dec
ds
ss
stc
cltd
cmp
sbb
std
mov
add
loopne
clc
dec
xor
mov
adc
mov
fnstsw
and
jne
test
call
dec
ja
or
insl
stos
push
jnp
icebp
pusha
test
outsb
jge
mov
decb
pop
push
mov
xchg
mov
sub
adc
push
jmp
mov
and
push
repz
dec
gs
jl
js,pt
and
jne
lret
icebp
mov
cmpsb
into
outsl
shr
out
add
pop
sbb
push
sar
inc
mov
add
xchg
pop
xchg
ret
pop
and
cmp
mov
bound
scas
push
sbb
cmp
hlt
push
inc
sbb
into
nop
lret
sbb
sbb
sarb
xchg
add
inc
call
sbb
imul
mov
dec
cltd
mov
push
lock
gs
out
xchg
pop
inc
lea
sti
shrl
mov
inc
fsubrs
movsb
ficomps
add
loopne
mov
aaa
addl
lea
sub
lds
outsb
jmp
adc
push
lea
add
xchg
jge
jg
push
std
xor
cmp
outsl
and
lahf
mov
mov
sub
incb
inc
imul
mov
movsl
clc
mov
sub
cli
jecxz
cmpb
pop
repz
or
mov
rcrb
adc
inc
fistl
xchg
rcrb
xchg
sub
nop
and
add
add
movsl
sub
int3
xchg
lods
jge
jb
jns
cmp
pop
jno
mov
mov
push
and
lock
xchg
dec
add
adc
mov
pushl
call
mov
mov
xorl
push
outsb
cmpsl
xchg
add
or
loope
bound
sub
nop
outsl
dec
ss
pushf
inc
nop
iret
pop
out
aam
xor
dec
ret
push
lret
adcl
incl
js
jle
cli
decl
add
mov
aas
int
arpl
fs
push
hlt
lock
fucompp
loopne
jns
sub
or
and
sbb
fstps
lods
stos
out
out
mov
int3
jge
cltd
fucomip
xor
cmp
outsl
insb
out
mov
in
lcall
movsb
mov
sub
adc
subb
ret
hlt
popa
movsb
lret
sbb
sbb
loop
fmull
mov
fnstsw
mov
loope
push
in
jge
xchg
outsl
sarb
mov
jl
pusha
nop
bound
mov
mov
mov
jmp
sahf
out
sbb
pop
sub
in
push
movsl
imul
adcl
dec
outsb
addb
jbe
mov
xor
jmp
push
sub
sbb
xchg
popf
mov
pop
cli
stos
sub
iret
int
rolb
mov
subb
adc
push
inc
in
adc
inc
jg
stos
jns
mov
std
lret
xchg
out
jns
or
xchg
mov
dec
pop
add
fstpl
lahf
push
sub
cltd
inc
xchg
mov
shll
or
push
fwait
movb
adc
andl
cmp
in
xchg
cmp
enter
call
jl
fwait
lcall
jg,pt
xchg
fcmovnbe
and
xchg
cs
mov
pop
loop
in
xchg
jo
and
les
and
xor
lret
es
sub
xchg
add
mov
adcl
adc
sub
mov
ret
jns
add
es
negl
mov
mov
and
jns
addl
sub
mov
xlat
clc
loop
xchg
or
jecxz
cmp
xchg
mov
rclb
insb
push
sti
xchg
insl
and
xchg
add
mov
leave
sti
test
out
push
inc
dec
lods
leave
icebp
enter
adc
mov
mov
mov
scas
mov
jmp
sbb
xor
mov
out
hlt
cs
xor
mov
mov
mov
inc
push
iret
pop
push
int
negl
push
out
push
not
mov
mov
fistpll
mov
or
outsl
sub
loope
insl
nop
sub
cmp
sub
pusha
dec
mov
mov
mov
mov
ja
stos
mov
pop
xor
xchg
adc
out
add
mov
orb
lcall
in
dec
xchg
mov
imull
adc
negb
pop
test
mov
fidivrl
and
pop
shl
aam
push
in
test
popa
jp
dec
aam
jno
dec
imul
in
push
cmp
xchg
fidivs
out
lret
xchg
test
rcrl
add
je
push
push
or
adc
ret
add
lahf
mov
inc
fsubrs
aad
mov
inc
dec
jne
adc
iret
xchg
xor
addr16
add
ds
shrb
jg
push
test
jns
aaa
adc
push
test
lock
enter
sub
pop
out
rcrl
cwtl
cmp
xor
jle
aad
mov
adc
mov
push
rorl
sbb
xorb
sub
adcl
in
mov
addr16
mov
sub
in
jno
add
push
mov
adc
inc
add
dec
xlat
mov
add
out
dec
int3
test
call
xlat
xor
testl
cmp
in
inc
add
cmp
adc
fwait
addr16
je
std
out
dec
cmp
xor
jg
lcall
inc
sbbl
dec
nop
aas
mov
cs
or
enter
lods
xchg
sub
ljmp
sub
sbb
mov
scas
sub
mov
inc
xorl
dec
adc
dec
fcomps
imul
inc
and
cmp
push
incb
je
adc
mov
xor
or
mov
jmp
frstor
push
push
mov
popf
fidivs
xchg
xchg
adc
jg
pusha
lock
mov
inc
mov
andb
mov
xchg
loopne
add
dec
mov
shrl
pop
push
movsl
xchg
lahf
pushw
push
or
xchg
push
fs
pop
jmp
jno
jp
loope
nop
pop
cmpsb
imul
lahf
lahf
jg
imul
pop
adc
pop
mov
cmp
cltd
dec
int
cvttps2pi
pushl
or
fwait
out
cmp
test
pop
jg
movsl
ljmp
mov
inc
mov
loop
mov
and
mov
mov
stos
mov
or
aad
jbe
sub
or
outsb
cltd
sahf
aaa
idivb
dec
dec
out
mov
lods
xorb
inc
daa
test
mov
xchg
iret
cmp
mov
lret
fisttpll
xlat
jb
xor
push
in
inc
push
sbb
lods
sub
insl
sub
fcmovb
imul
stc
lret
push
pushf
cmp
cwtl
je
outsb
daa
es
or
adc
es
sbb
fimull
and
fdivrs
push
movsl
fs
dec
pop
shll
ljmp
fmul
adc
dec
or
cmp
jmp
addl
sar
add
pusha
dec
mov
and
jbe
bound
or
jns
data16
in
mov
sbb
lcall
pop
in
jmp
in
xchg
call
xchg
movsl
or
lock
dec
add
xchg
fnstenv
mov
ja
in
out
xchg
insl
clc
rcll
mov
stos
rcl
iret
fsubrs
jns
push
pop
xchg
mov
push
pop
sbb
call
sub
dec
mov
mov
fstp
ds
sub
movsl
int3
dec
in
ljmp
rorl
lahf
std
cmpsl
imul
addb
test
shrl
popa
sub
not
stos
es
sub
dec
push
sbb
xlat
mov
mov
dec
std
mov
or
dec
push
mov
mov
repnz
push
gs
lods
and
dec
icebp
mov
jo
jno
ret
sub
lret
jg
arpl
cmpsb
pusha
mov
adc
sub
dec
ja
mov
or
xchg
pushl
cmp
mov
inc
or
sub
cli
enter
adc
push
and
hlt
out
enter
movsl
push
scas
les
sub
pop
sbb
dec
out
in
nop
pop
dec
ja
sahf
inc
dec
sub
or
dec
jne
pop
and
in
dec
out
cmpsb
gs
adc
mov
out
mov
aad
and
pop
mov
mov
cs
es
cmpsl
jmp
pop
std
and
add
pop
jmp
mov
mov
jmp
cwtl
cltd
scas
movsl
adc
mov
xor
dec
test
jmp
xchg
fisttpl
jno
fstps
xor
in
rorb
xchg
cs
mov
mov
add
movsb
mov
fsubl
gs
rcrl
jns
xlat
fimuls
cmp
lds
aaa
loope
out
in
test
mov
pop
scas
pop
cld
xchg
movsb
jbe
test
push
mov
rclb
pop
rcll
pop
into
xor
bound
jmp
jne
sti
cmp
decb
push
outsb
iret
bound
mov
fildl
or
sbb
jnp
out
fs
cmp
gs
mov
and
adc
cmpsl
sarl
sbb
lea
andl
dec
scas
dec
imul
xor
scas
fwait
push
imul
mov
int3
dec
inc
add
cmp
jmp
mov
push
std
inc
daa
fnsave
adc
aad
test
cmp
xor
loope
dec
ret
pop
mov
and
in
imul
out
jne
je
or
call
loop
outsl
hlt
mov
in
jl
or
sahf
stos
scas
inc
xchg
mov
inc
pop
std
mov
pop
test
dec
rol
mov
mov
xchg
das
rorb
push
mov
out
jl
pop
jne
repnz
mov
and
stos
std
out
mov
out
mov
mov
mov
rcrl
scas
pop
movsl
jmp
mov
dec
in
or
popa
sar
and
inc
test
and
fwait
out
adc
imul
xlat
xchg
adc
shrb
mov
sbb
pop
jl
out
or
xlat
int3
arpl
push
scas
jp
fistpll
cmp
push
enter
cmp
mov
pop
shlb
add
fwait
xchg
push
movsl
xchg
jle
xchg
aaa
add
in
sub
js
enter
push
jmp
jb
adc
dec
cld
stc
push
adc
leave
out
mov
rcr
bound
jae
jl
xchg
ja
sub
aad
int3
dec
cmp
cmpsb
ror
inc
mov
pop
mov
push
pop
rclb
pushf
adc
mov
in
movsl
test
add
adc
adc
pusha
rcll
ret
test
dec
add
into
ror
fucomip
or
xor
call
aam
jo
and
mov
xor
and
repnz
jo
fstps
sbb
cli
mov
cmp
fcoms
dec
pop
out
das
inc
aam
fbstp
xchg
push
imul
push
push
xor
mov
pop
in
xor
aas
sahf
cmpsl
add
dec
aaa
addl
ffreep
fbstp
lcall
in
loopne
aam
sbb
mov
xchg
outsb
adc
enter
in
ljmp
sbb
jbe
je
cs
fcomps
test
daa
jae
xchg
pop
dec
fwait
adc
sub
sub
ficomps
into
and
pusha
push
mov
ficoms
mov
xor
or
push
test
outsb
and
fldcw
xchg
push
push
jle
sbb
test
xchg
push
jno
in
std
popf
mov
mov
movsb
push
push
inc
push
outsl
call
mov
push
mov
stos
cmp
cli
xchg
push
sahf
jno
sbb
jo
push
or
pusha
and
push
or
test
mov
cmp
push
adc
sub
imul
outsb
mov
stos
sbb
jb
add
or
fldz
mov
add
mov
xor
jnp
mov
out
lods
fisttpll
divb
and
das
fdivrl
jne
xor
shll
jecxz
xchg
mov
cld
leave
mov
neg
stos
bound
in
pop
cmp
in
into
shll
pop
daa
fistpl
and
mov
adc
inc
cmp
and
push
pop
insl
adc
inc
sub
andb
sub
inc
fisubs
cmp
fidivs
jmp
repnz
push
jns
pop
filds
das
mov
add
lcall
mov
test
or
sub
xor
out
jl
cmp
movsl
out
or
mov
fidivrs
shll
inc
push
testl
add
and
ljmp
push
daa
xchg
push
outsb
xchg
js
movsb
aas
out
aas
pop
ja
and
fs
mov
or
sbb
fs
push
pop
fists
inc
clc
mov
dec
scas
jns
clc
sbb
cwtl
stos
test
jge
mov
and
add
mov
les
lahf
xor
push
out
js
cs
fnstsw
inc
cmp
xchg
test
cmp
mov
push
data16
cwtl
pushf
loop
cmc
push
int
pop
inc
cs
push
ja
mov
pop
mov
push
add
nop
test
mov
cmc
add
fildl
lods
xchg
sub
loopne
lcall
stos
and
rolb
jl
pop
adc
lods
adc
adc
aas
movsb
aaa
sub
cltd
jl
je
pusha
outsb
sub
push
ja
inc
jbe
scas
jp
jnp
out
push
inc
xor
clc
jo
mov
stc
sub
xchg
incb
push
mov
mov
mov
sbb
jno
dec
xchg
inc
shrb
add
push
xor
jne
cmpsb
cmp
inc
in
inc
or
jnp
insl
mov
loopne
lock
das
dec
sbb
shrl
xchg
mov
jg
out
jae
sub
inc
inc
addr16
dec
int3
addps
cmp
add
lods
cmp
push
in
mov
dec
add
jmp
faddp
imul
popa
jg
pop
mov
sbb
pop
test
lahf
mov
pop
xchg
dec
jne
mov
pop
fadd
test
loop
push
repnz
add
mov
mov
loopne
imul
jecxz
add
fidivrl
je
sub
call
int
fmulp
dec
xchg
mov
add
pop
and
sti
jno
dec
sbb
mov
fadds
ror
inc
xor
clc
sub
addr16
push
loop
xacquire
cmp
sub
in
sub
add
pop
and
and
iret
jmp
iret
ret
mov
fcomp
adc
xchg
push
mov
sbb
int3
push
jmp
cmpsb
mov
popa
daa
mov
sub
out
es
mov
je
jae
lods
fistpl
arpl
xchg
dec
cmc
sbb
or
iret
push
adc
dec
xchg
push
mov
out
je
ffreep
dec
cli
mov
test
pop
mov
cltd
les
scas
cmp
adc
repnz
jbe
cmp
repnz
jne
mov
mov
xor
lret
lods
sbb
aas
out
xlat
fwait
int3
xchg
sub
inc
popf
jmp
push
sbb
mov
push
hlt
sbb
enter
rcrl
push
andb
push
fldl2e
and
or
xor
jbe
push
xchg
addr16
push
mov
sub
push
xchg
or
xchg
fisttpll
lock
aas
mov
scas
out
xchg
inc
adc
mov
or
pop
mov
insb
sub
and
nop
leave
sub
sahf
adc
cli
lahf
inc
lea
xor
mov
push
xor
cmp
ss
fst
push
insl
in
push
inc
xchg
pushf
outsl
lret
push
popa
fwait
adc
out
mov
dec
test
adc
jle
sbb
inc
lahf
mov
mov
dec
dec
vmovntps
push
dec
aad
jbe
int
pop
testl
xchg
sub
jno
stos
ret
jmp
jle
cmp
ljmp
imul
add
xor
xchg
ret
sbb
sbb
dec
cmp
in
push
add
xor
push
mov
insl
push
addr16
mov
sub
jno
imul
cld
mov
outsb
std
lods
insb
cld
adc
addb
mov
movsl
sub
push
and
pop
mov
adc
sub
test
fcomip
push
fwait
xchg
das
mov
push
cmc
jle
rclb
pop
ret
xor
fsubs
test
jge
mov
lret
cld
inc
or
pop
inc
insl
and
push
lret
outsb
inc
sbb
addb
sub
inc
lahf
test
adc
in
enter
outsb
in
les
xor
stos
icebp
test
jnp
mov
mov
por
xchg
xchg
or
sub
shll
ret
inc
nop
adc
or
xchg
pushl
cmp
inc
enter
jmp
push
in
and
cld
inc
lock
or
neg
in
sarb
clc
mov
in
lret
pop
bnd
sub
aas
jmp
iret
or
ljmp
lret
js
test
mov
adc
and
test
xor
xchg
je
inc
push
shrl
add
add
add
cld
cmpsb
mov
jne
loopne
ss
dec
mov
xchg
push
mov
movsl
repz
sub
xchg
or
std
adc
push
je
out
jge
mov
or
sub
fisubrs
outsl
or
aaa
fwait
outsb
imul
jnp
fcmovne
sub
lcall
sbb
dec
sub
or
shll
mov
test
stos
jae
xchg
mov
jmp
aas
jnp
xchg
mov
insb
inc
push
add
fiadds
cli
popa
fistpl
stos
ret
xorb
leave
andl
and
out
jne
mov
add
sbb
movsl
adc
dec
adc
sahf
pusha
xor
mov
mov
subps
stos
add
fidivs
cmpsl
popa
lock
xchg
sbb
mov
jecxz
ljmp
xchg
orb
stc
das
sub
fsubr
fcmovb
in
addr16
jno
jle
xorb
mov
mov
movsb
insl
cld
push
outsl
mov
or
cmp
cwtl
cmpsl
psubw
rcll
rclb
nop
loop
jo
or
ficoms
lret
sti
shll
loopne,pn
repnz
push
jne
dec
call
ret
movsb
sahf
push
daa
rorb
jmp
lret
mov
adc
out
movsb
xor
dec
push
insb
movsl
xor
pop
in
inc
cmp
cmp
xchg
lret
cmp
in
sbb
sub
test
mov
in
xchg
ret
ds
pushf
addl
fdivr
iret
xchg
inc
sub
and
jnp
dec
or
enter
test
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
mov
ja
add
arpl
add
jo
popl
fiaddl
in
outsb
orl
push
mov
pop
add
jae
cmp
and
push
dec
cmp
sub
pop
mov
or
inc
sti
pop
lcall
lods
pop
ret
sbb
or
int3
xorl
sarb
fnsave
subl
sub
adc
cmp
out
pop
xchg
push
fcmove
add
arpl
add
into
cmp
jp
hlt
mov
bound
sbb
cmp
lods
test
mov
sbb
int3
rorb
in
std
dec
rorb
push
or
mov
xchg
cmc
fnstsw
mov
mov
push
fisubrl
cmp
js
adc
imul
xor
add
add
sub
sub
addb
into
add
arpl
add
push
lock
mov
adc
mov
pop
pop
cmp
push
mov
sub
or
cmp
and
pop
in
push
ljmp
push
or
in
push
pop
dec
divb
test
std
cmpsl
jmp
loope
hlt
jno
cs
in
lahf
imul
outsb
inc
xchg
push
shlb
lcall
std
push
add
add
add
and
aam
aam
ljmp
je
das
adc
mov
arpl
add
hlt
push
sbbl
cmpsl
ret
pushf
fistpll
icebp
sahf
je
insb
scas
cld
ss
adc
loope
cli
iret
dec
add
jb
sub
jns
daa
iret
dec
or
sbb
cmpsl
aaa
into
mov
sub
mov
call
or
mov
movsb
jne
jge
dec
imul
add
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
add
add
arpl
add
or
testb
xor
xor
loope
mov
aad
shrl
lret
push
mov
mov
xor
dec
repnz
inc
test
in
or
pop
pop
sbbl
push
iret
cmp
mov
stos
jb
lock
fldenv
mov
mov
icebp
push
and
jecxz
sub
out
ret
add
add
out
lods
cmp
stc
stc
je
jae
iretw
add
arpl
add
push
sub
cwtl
mov
test
mov
jno
call
xchg
inc
mov
rorb
addr16
movsl
push
lds
xchg
cmpsb
push
popl
je
push
call
mov
bound
push
xchg
pop
das
imul
outsl
test
add
add
add
inc
gs
aaa
push
sahf
sbbl
add
add
es
fwait
loope
sbb
insb
test
cmp
mov
xchg
movsb
test
mul
xor
sarl
push
jmp
jbe
push
movsb
adc
adc
je
ja
dec
imul
cltd
ficompl
pop
mov
push
std
jmp
xor
add
mov
push
adc
cwtl
out
jno,pn
cmpb
add
test
or
test
pop
lea
jp
daa
addr16
int3
aad
xor
cmp
repz
dec
mov
mov
add
fcomp
xchg
ds
popa
repz
dec
pop
pop
sub
cmpb
arpl
test
pop
stc
sbb
call
out
mov
add
add
dec
inc
sub
das
jle
jg
imul
psllw
push
pop
jecxz
add
add
cli
fcomps
pop
and
pop
mov
xor
shrb
push
dec
mov
and
push
divb
or
or
jp
cltd
add
andl
clc
fistpl
inc
les
xchg
aam
repnz
inc
cli
pop
sbb
loopne
mov
xchg
cld
insb
cmp
pusha
aas
loop
add
add
add
and
mov
mov
bound
and
add
add
incl
ljmp
les
jmp
inc
test
or
lods
jecxz
jmp
movsb
les
sarb
mov
xchg
xor
imul
imulb
in
aas
insb
inc
mov
push
xor
fstpl
dec
sub
add
popa
pop
fcomps
nop
pop
jne
lcall
add
ret
or
ret
lods
sub
mov
mov
arpl
add
idivl
pop
arpl
imull
in
in
mov
ret
jae
ret
in
mov
ljmp
stos
repz
adc
lock
sahf
push
negb
icebp
push
adc
adc
add
cwtl
pop
enter
out
filds
lods
popa
inc
mov
sarb
mov
add
add
add
ret
pop
iret
fst
enter
lret
repnz
in
add
add
or
sti
cmp
scas
les
and
xchg
inc
imul
mov
or
mov
loop
cli
mov
insl
icebp
lods
shll
dec
mov
sti
fnstcw
andb
adc
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ficomps
inc
add
sbb
add
sbb
add
sbb
inc
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
cs
inc
add
test
loop
inc
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
into
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
ret
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
jns
in
xlat
add
arpl
add
or
cmp
jg
pop
mov
lock
push
mov
lret
mov
sub
fwait
mov
inc
lea
lds
mov
mov
icebp
xchg
enter
dec
aaa
or
fs
dec
movsl
or
add
xchg
ljmp
dec
jnp
test
add
add
add
add
mov
push
mov
xlat
push
test
xlat
add
arpl
add
cmp
insl
xchg
xchg
mov
stos
ss
rcll
adc
call
loop
jge
jp
inc
rcrb
sti
dec
adc
loopne
pop
mov
stos
add
imulb
sub
xchg
mov
mov
jp
cmp
stos
jns
in
sti
and
mov
cmpsb
mov
push
add
add
mov
jg
ljmp
push
push
call
add
add
sbb
jne
test
aas
jns
pop
test
fildll
lea
sahf
pop
inc
cld
lahf
subl
pushf
cltd
mov
leave
mov
jnp
pop
ljmp
dec
fstps
gs
inc
xchg
mov
pop
mov
or
jmp
sti
aas
adc
sub
xchg
fistpl
add
add
add
cmp
in
fimuls
icebp
xor
arpl
add
mov
and
jl
mov
add
adc
adc
leave
cmpsl
mov
ljmp
or
lcall
int
shl
xor
arpl
cli
cmpsl
push
les
dec
fimuls
jmp
test
inc
push
ret
sub
mov
mov
mov
xchg
inc
out
inc
cmp
cmp
add
add
fnstenv
std
negb
sub
shlb
add
arpl
add
dec
in
cwtl
push
adc
cltd
cli
in
popf
in
in
inc
stc
addr16
jmp
adc
xor
movsb
clc
pop
mov
sti
mov
enter
cmp
xchg
pop
fildl
adc
bound
mov
ret
sub
push
rcrl
fdivrs
ljmp
inc
adc
add
add
fidivl
xchg
mov
scas
fbstp
inc
mov
hlt
adc
add
arpl
add
inc
fnsave
sub
xchg
jne
test
push
push
sbb
fs
push
cmp
pushf
jl
ficomps
enter
lret
mov
and
add
sub
stos
jl
or
mov
jecxz
push
dec
nop
lret
mov
test
pushf
cmpsb
xor
pusha
fiadds
int
insl
add
add
add
add
pop
sub
xor
add
add
cs
test
outsb
sahf
jne
lock
mov
xchg
std
push
iret
mov
cld
cmp
movsb
sahf
cmpsb
cltd
movsl
cmpsb
push
loopne
cli
adc
sub
jge
and
test
sub
adc
fstps
dec
add
mov
subl
imulb
cli
inc
lods
imul
lods
dec
cltd
add
add
add
mov
aam
xor
and
xlat
flds
add
add
lds
aam
test
fldl
sbb
sub
xchg
push
cmpsb
sbb
cmpsl
int3
imul
cmp
lret
mov
out
sub
fwait
test
pop
push
push
sub
scas
test
xchg
pop
jl
out
mov
mov
pop
xor
xchg
pop
adcl
add
add
add
push
add
mov
out
sbb
cmp
add
arpl
add
test
lods
lds
or
xor
push
mov
push
push
lret
fidivl
outsb
out
sbbl
enter
mov
mov
stos
loopne
sbb
dec
add
jl
js
es
fdivrl
mov
or
dec
loopne
test
add
add
jmp
repz
fimull
mov
add
arpl
add
sub
stc
adcb
mov
in
fcoms
insb
jbe
rcll
shll
scas
scas
in
or
adc
int3
adc
jno
sbb
fnstsw
xchg
mov
sqrtps
fildl
jb
je
cmp
cmp
filds
in
push
dec
mov
lods
inc
add
add
add
pop
iret
pop
aad
ss
dec
adc
add
arpl
add
pop
or
push
push
mov
push
pop
push
dec
icebp
lods
pop
in
xchg
jns
mov
fdivrs
rolb
push
hlt
loope
call
jbe
mov
jns
mov
jo
outsb
outsb
sbb
nop
or
cmp
pop
cmp
jne
ss
xor
arpl
pop
hlt
sbb
negl
add
add
add
cld
cmc
mov
xor
arpl
add
fldl
inc
or
xchg
movsl
adc
aaa
xlat
enter
dec
adcl
mov
inc
lret
sub
xchg
mov
pop
lret
jns
ficoml
cmpsb
pop
or
ret
push
mov
std
subb
test
js
xor
pop
and
cwtl
sbb
push
cltd
loopne
jmp
add
add
add
lock
jle
repz
test
add
add
and
push
bound
xchg
cmp
test
into
cs
repz
repz
rcl
test
pop
fldenv
push
scas
ljmp
adc
sub
mov
xchg
mov
cltd
mov
mov
xor
sbb
xlat
or
add
add
cmc
adc
adc
mov
lds
sub
add
arpl
add
mov
in
sub
psubd
ljmp
dec
mov
add
movsb
lcall
inc
xchg
andb
mov
mov
xchg
outsl
mov
lods
inc
sub
lods
cmpsb
int3
stc
push
jl
jecxz
mov
xchg
ret
push
mov
mov
les
add
add
cmp
mov
ror
push
push
mov
add
arpl
add
clc
mov
pop
sarl
mov
xchg
sbb
in
mov
iret
iret
out
fs
in
loop
cmpsb
call
std
mov
repz
xor
and
cld
xchg
mov
fdiv
inc
cmp
js
and
mov
leave
jo
int3
adc
aas
frstor
mov
imul
xchg
add
add
add
sqrtps
cmc
das
sbb
xchg
iret
xchg
cmp
sbb
faddl
add
add
fnstsw
and
stc
imul
push
adc
jo
mov
sbb
adc
adc
and
cmpsl
stos
lock
bound
mov
out
int3
pop
shlb
out
dec
mov
xchg
mov
sbb
push
fldcw
jl
sti
add
push
add
add
add
sub
fildll
in
fists
add
arpl
add
sbb
rclb
cmc
mov
adc
push
xlat
mov
imul
insb
jae
cmp
pop
loop
mov
cs
arpl
mov
int3
test
pop
add
out
push
xor
gs
fldl
leave
cmovnp
push
adc
shr
lods
add
add
add
fs
testl
stos
lret
add
arpl
add
jl
and
xor
xchg
inc
xor
mov
pop
cld
roll
fs
push
cmc
lea
cmp
ret
icebp
loope
mov
xchg
push
repnz
das
pop
shll
addr16
cmp
mov
outsl
pop
cmp
or
insb
adc
popl
jo
ja
jmp
add
add
add
jne
jg
clc
cs
push
sub
add
arpl
add
cmp
pop
lahf
jne
add
mov
sbb
icebp
hlt
xor
repnz
inc
mov
repnz
adc
push
imul
jge
push
les
jmp
cwtl
notl
mov
push
mov
sub
out
lods
sub
test
jb
dec
push
in
jae
mov
popa
mov
or
add
add
or
dec
mov
je
lcall
add
arpl
add
xorl
imul
pop
sub
dec
sbb
lahf
jno
push
push
pop
push
das
fisubl
inc
and
xor
push
loope
lret
or
mov
or
lods
dec
xor
and
fnsave
push
or
or
mov
or
add
add
add
push
mov
mov
xchg
adc
scas
je
repnz
add
add
jns
scas
test
addr16
ss
dec
xchg
xor
jmp
js
or
sbb
push
ds
lods
add
arpl
mul
rcll
fisubl
aad
and
dec
xchg
cmp
dec
xor
addr16
xchg
insb
in
push
jle
fists
enter
adc
xchg
ds
pop
pop
das
clc
repz
add
add
xchg
fcmovu
fisttps
push
mov
roll
add
add
dec
fsts
jge
mov
jle
outsl
jmp
sbb
ss
lret
mov
pop
outsl
ds
negb
adc
imul
xchg
or
mov
push
xor
lret
insl
int3
fdivrl
xchg
sub
iret
test
xchg
hlt
lahf
or
test
push
mov
adcl
add
add
jle
out
sbb
mov
roll
add
add
gs
fcmovbe
jnp
je
or
mov
aas
imul
loope
mov
xchg
stos
fstp
stos
subl
fdivs
std
lahf
mov
sbb
mov
mov
adc
push
and
jl
adc
mov
inc
mov
int3
mov
add
add
add
and
cmp
jp
sbbb
add
arpl
add
dec
sar
cmp
xor
sbb
add
hlt
xor
pusha
aas
bound
xor
push
sbb
adc
mov
clc
cld
push
icebp
sti
mov
pop
incb
xchg
into
lret
mov
sub
shlb
roll
fstl
ljmp
mov
add
cmp
add
xchg
nop
ffree
popf
aam
push
jno
jle
add
arpl
add
add
ds
jbe
lret
and
repz
pop
fisubrs
adc
inc
rcrl
loope
inc
push
cmp
adc
jp
arpl
mov
adc
out
sbb
in
push
in
inc
testb
mov
out
sbb
cltd
out
pop
cmp
jb
mov
arpl
xor
daa
add
add
add
mov
jbe
hlt
mov
and
cmpsb
cmp
add
arpl
add
nop
xor
pop
sub
inc
sub
mov
jl
push
sub
int
imul
push
scas
push
mov
push
in
add
inc
jb
lods
cmp
jo
scas
js
sarb
mov
jno
mov
int3
and
jecxz
lock
push
push
dec
aam
addb
cmp
xchg
xchg
mov
add
add
xor
into
mov
sub
out
lods
dec
mov
roll
add
add
or
aad
shlb
add
xor
pop
call
xlat
test
inc
pop
out
xchg
outsb
movb
adc
xor
sub
fnstcw
test
test
je
push
nop
cli
mov
ja
ljmp
stc
in
jno
jmp
sub
add
add
add
add
in
outsb
and
pop
mov
cmpsl
roll
add
add
push
sbb
push
dec
add
outsb
dec
outsb
inc
push
mov
jecxz
mov
mov
popf
mov
mov
push
lds
arpl
mov
cmpsl
aam
lret
stos
pop
push
mov
xor
not
sbb
inc
cld
cs
jle
lods
fldl
jbe
mov
dec
jne
int3
cmpsb
push
arpl
aad
add
add
add
mov
and
aad
aam
add
add
pop
adc
jmp
adc
mov
ret
cli
es
out
daa
orb
int
xor
adc
pop
vpshufhw
subb
add
xchg
jo
leave
jne
inc
in
push
inc
adc
push
cmc
call
jae
pop
enter
es
lret
xor
add
add
add
stc
call
into
inc
mov
jns
arpl
insl
aam
add
add
sbb
dec
js
lea
rorb
jb
roll
pop
push
insl
jae
bound
rcll
sub
sbb
push
xchg
sti
mov
sub
push
in
imul
std
pop
push
pop
jns
bnd
movb
subl
inc
or
adc
fcoms
xor
popf
roll
add
add
sub
sub
jp
or
rcl
add
arpl
add
dec
test
outsb
jle
sbb
inc
aam
cmpsl
aam
xchg
push
pop
sarl
inc
xchg
ljmp
adc
push
dec
ds
fidivl
lds
imul
in
jg
das
xchg
and
sbb
ljmp
pop
fmul
sub
push
addr16
mov
test
add
add
add
int3
sbb
out
loopne
lods
push
push
add
arpl
add
push
adc
scas
mov
cmpb
das
outsl
add
or
mov
adc
addr16
dec
jo
popa
cmpsl
or
add
push
add
mov
push
sbb
loop
cli
sbb
lock
popf
inc
subl
stos
addr16
push
xchg
sbb
xchg
inc
lret
jne
movsb
mov
add
test
fildll
sub
xchg
xchg
aad
add
add
loop
cmpsl
punpckldq
fistps
popf
adc
subl
std
or
pop
add
mov
pop
mov
or
mov
rorl
sub
xor
sbbb
jge
scas
gs
imul
in
inc
adc
das
inc
cmp
sub
sbb
js
add
add
fwait
loope
sub
sarb
add
ds
aad
add
add
inc
rolb
roll
cld
int3
ja
sbb
sbb
mov
iret
stos
ret
sub
shll
push
lds
mov
dec
mov
es
mov
jmp
sbb
repnz
imul
aas
cmp
pop
cmp
mov
dec
arpl
test
jl
lret
inc
add
add
add
divl
dec
cmp
dec
or
pop
add
arpl
add
sub
outsb
pop
xchg
scas
jmp
dec
cmp
mov
jno
jno
in
dec
iret
movsb
push
xchg
out
adc
fldcw
out
iret
int
mov
int3
xchg
mov
sar
addr16
cli
out
or
sub
push
ja
enter
add
cmp
flds
jb
sub
mov
imul
mov
scas
cs
pop
xchg
add
add
add
arpl
jge
mov
daa
xor
xor
add
add
lret
push
cld
sub
cmpsb
stc
jl
mov
enter
lods
in
dec
data16
push
mov
cld
test
stos
cwtl
jl
scas
movsl
cltd
lahf
add
data16
les
lods
fisubl
daa
ret
test
cld
inc
orb
repz
cmpl
fidivrs
loope
mov
mov
mov
mov
add
add
push
imul
dec
jg,pt
sbb
add
arpl
add
dec
adc
or
mov
jmp
ret
add
mov
cld
cmp
aas
cld
or
imul
jl
push
add
mov
xchg
fisubs
xor
mov
or
dec
dec
leave
cs
roll
fisttps
ds
fnstenv
xor
mov
daa
push
mov
sub
dec
ljmp
add
daa
ss
xor
and
push
add
add
push
push
rcrl
shrb
mov
push
push
ret
out
jl
stc
sbb
lea
sbb
icebp
sbb
cmp
xchg
sub
mov
push
test
and
loopne
push
xchg
shl
imulb
shrl
ret
and
jno
fcmovu
lods
icebp
add
add
add
out
mul
aaa
cmc
xchg
lcall
add
arpl
add
push
pop
or
adc
cli
xchg
aaa
xchg
mov
push
lret
int
inc
int3
sahf
fdivr
cmp
jmp
lods
sbb
or
stc
cs
sarl
jno
je
cld
lret
inc
dec
sub
daa
mov
mov
or
mov
out
inc
in
shll
xorl
add
add
push
aad
out
fucomip
ss
cmp
rcll
arpl
add
mov
jb
push
xchg
or
fcomps
bound
jne
mov
or
jno
sub
in
inc
dec
add
inc
pop
inc
sub
les
xchg
sbb
jno
xlat
repz
sub
inc
popa
cmp
xor
xor
cs
cmp
es
mov
add
add
in
cld
fisubrl
sbb
lods
movsb
filds
add
add
cld
ds
and
rcrl
icebp
push
loop
sbb
mov
and
push
pop
jne
push
negb
loope
xchg
add
mov
push
hlt
pusha
cltd
arpl
inc
and
xchg
iret
clc
std
inc
out
jnp
push
nop
push
sub
jbe
subb
push
dec
mov
add
add
push
les
in
lahf
sti
ja
rcll
push
loopne
add
add
out
sbb
shlb
popf
cli
mov
pop
mov
out
xchg
mov
adc
add
cmp
sbb
lock
adc
movsb
mov
and
shrb
push
inc
lret
mov
fdivr
and
enter
pop
shll
adc
inc
push
mov
ljmp
rol
xchg
or
add
add
add
jle
call
cli
lcall
add
arpl
add
add
pop
push
sbb
ret
sub
test
fisubl
hlt
inc
push
orb
add
add
push
and
mov
ds
pusha
sbb
mov
pusha
andl
stos
dec
repnz
mov
jns
aam
repz
sub
cmp
in
mov
dec
int
xor
add
add
add
fincstp
shl
frstor
pop
dec
not
int
int
add
arpl
add
cltd
adc
or
mov
sbb
push
jmp
fistpll
lds
push
dec
push
add
ret
pop
jge
mov
sbb
xor
ja
xor
in
outsl
jp
jge
dec
leave
dec
pop
xor
shrl
xor
mov
sub
iret
call
pushf
xor
mov
lock
add
add
aam
fnstsw
out
fcmovu
in
xchg
cmp
loope
add
add
and
xchg
jp
ds
or
push
and
xchg
inc
mov
wbinvd
push
mov
mov
xorl
stos
jge
push
aam
and
mov
mov
push
stos
aaa
movntq
mov
test
adc
lock
mov
out
adc
add
add
add
sbb
inc
jecxz
mov
cwtl
pop
and
add
add
mov
mov
pop
xchg
cli
xor
and
fstpl
cmp
xlat
aas
ds
into
loopne
cmpsb
mov
ficompl
mov
mov
filds
pushw
cmp
lret
xor
sbb
arpl
pop
dec
out
mov
cmp
add
mov
mov
icebp
and
adc
mul
add
arpl
add
xlat
jle
mov
push
jno
lods
dec
and
dec
and
int
sbb
push
push
andl
outsb
stos
aam
pop
xor
aad
mov
adc
mov
dec
lahf
rcr
paddq
aam
sbb
adc
or
jae
mov
mov
mov
adc
mov
add
adc
repz
das
cli
fists
dec
es
sbb
jg
pop
loop
add
add
rol
jb
loop
jae
jno
loop
xchg
mov
add
cld
iret
xchg
iret
mov
pop
aas
pushf
cmp
fimull
cmp
pop
mov
test
push
sbb
xor
xor
dec
js
pop
aas
push
es
ss
jne
mov
rorb
mov
mov
fldenv
insl
pop
lret
ja
inc
je
lahf
scas
add
add
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
add
add
add
add
add
add
add
add
clc
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
