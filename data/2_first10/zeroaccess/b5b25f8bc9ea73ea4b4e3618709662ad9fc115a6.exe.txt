add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
push
or
cmp
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
inc
mov
inc
push
lcall
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
mov
jl
mov
test
inc
pop
call
add
mov
xor
mov
sub
lock
mov
dec
jnp
daa
mov
icebp
inc
sbb
pop
sbb
test
lods
loop
test
jae
ja
pop
into
push
sub
test
mov
dec
std
shll
or
jle
jns
cmpb
test
fiaddl
ds
mov
cmp
cmp
and
data16
cld
mov
arpl
xor
in
lcall
ss
push
add
xor
lar
dec
sub
daa
adc
leave
ss
loope
push
test
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
jb
call
jl
jl
mov
xor
movsb
les
add
xor
test
mov
nop
and
push
dec
sub
hlt
push
jmp
push
scas
outsb
loop
add
in
movsl
ret
dec
icebp
jge
mov
rcll
stos
inc
and
or
push
inc
mov
jl
mov
jmp
rolb
pop
inc
call
sbb
jg
push
out
stos
cltd
sub
rorb
ret
pop
add
inc
outsb
jne
sbb
push
dec
movsb
andb
adc
lahf
sbbb
sar
lock
fdiv
cli
xchg
dec
xchg
inc
cwtl
add
push
mov
inc
je
add
jb
test
loopne
mov
sub
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
stos
mov
push
jle
jl
jl
jl
cwtl
inc
cmp
xor
and
cmpsl
rorb
je
outsb
ret
lds
add
outsl
push
out
push
sub
cltd
stos
fmul
add
fstl
sbb
inc
add
out
mov
shll
testb
mov
lcall
jge
dec
je
in
jo
pop
pop
sti
cmp
call
mov
lods
repz
push
mov
inc
aam
sarb
push
jno
rorl
jae
pop
or
or
aas
repnz
mov
pop
pop
jno
enter
and
cli
mov
aad
mov
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
fbld
jl
mov
pop
cmpsb
cmp
imul
pop
mov
in
adc
push
pop
jne
outsl
out
repz
mov
xchg
pop
repnz
dec
cmp
jo
add
or
fcmove
bound
pop
or
movsb
inc
fadds
and
cld
or
fstl
pushf
xor
adc
movsb
mov
and
add
fidivrl
xchg
jbe
inc
xchg
push
aas
les
mov
xchg
push
pusha
jne
mov
mov
mov
mull
and
mov
xorb
out
dec
or
xor
add
pop
push
repnz
sbbl
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
ret
jl
mov
call
jb
into
and
loope
pop
das
sbb
inc
mov
scas
leave
adc
mov
push
insb
sbbl
dec
repz
push
sbb
mov
pop
lods
pop
cmp
mov
cld
iret
dec
xlat
dec
adc
dec
jnp
sbb
inc
cmp
cmpsb
sbb
imul
adc
or
out
dec
xorl
cs
cmpl
mov
push
enter
jbe
jecxz
push
in
inc
popf
pushf
scas
push
cmpl
icebp
jnp
mov
hlt
gs
shll
pop
sti
dec
shlb
cmp
loope
ret
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
dec
nop
xor
jl
jl
jl
decb
sbb
lret
mov
js
daa
out
sub
cld
cltd
add
pop
aad
jmp
dec
es
push
push
inc
push
sub
push
and
sbb
and
xchg
rclb
dec
test
aaa
daa
andl
repnz
dec
pop
adc
mov
cmc
inc
mov
adc
jb
jae
push
push
adc
mov
sbb
out
dec
and
xchg
xchg
or
push
xchg
jbe
lods
dec
and
pop
and
inc
mov
gs
stos
addr16
sti
fs
dec
out
fmuls
and
cmc
push
mov
shr
cmp
dec
repnz
ljmp
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
ret
jo
jl
jl
jl
dec
jecxz
push
pop
pop
jle
or
loope
xchg
push
fimull
sub
jl
xor
data16
sbb
dec
jne
sbb
adc
mov
cmpsb
imul
push
and
mov
add
fdivs
mull
jge
outsl
leave
jno
ss
icebp
lret
rcl
pop
sub
push
xchg
add
std
out
push
pushf
ja
test
loope
push
push
cmp
and
jmp
dec
dec
dec
and
jmp
sub
in
call
xor
adc
icebp
in
imul
and
mov
sar
or
mov
into
add
add
mov
mov
dec
mov
aad
adc
jl
mov
mov
pop
jge
cwtl
js
xor
jle
push
lahf
sub
sub
scas
lods
js
sbb
bound
loopne
lret
int
gs
sahf
inc
aad
daa
js
out
jg
inc
jo
push
jl
roll
data16
mov
dec
pop
mov
push
mov
aad
jnp
call
jo
mov
xor
pop
jmp
adc
jae
loope
cs
jnp
clc
aad
jnp
mov
dec
hlt
push
out
daa
pop
repz
cmp
xchg
or
jne
out
add
cmpsl
xor
cmpb
hlt
add
lds
and
dec
sub
cld
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
ja
pop
shlb
jl
jl
jl
pop
mov
jnp
mov
aam
cmp
or
dec
ljmp
jecxz
mov
loopne
sub
xchg
push
mov
lret
mov
xchg
ret
adc
mov
testl
pop
pop
sub
adc
add
cmpb
sub
xlat
mov
shlb
dec
push
jge,pt
leave
fidivrs
setl
not
stos
push
lret
add
test
enter
inc
lret
sub
mov
lock
stc
xor
pop
aam
nop
lods
std
push
jo
std
insb
cld
testb
cmp
xchg
mov
add
mov
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
mov
fdivr
sbb
jl
jl
jl
bound
sub
inc
ficompl
pop
add
out
jo
inc
adc
adc
sub
sub
jl
push
or
mov
and
mov
ljmp
inc
sahf
sahf
mov
sbbb
xchg
test
and
add
adc
out
ffreep
mov
mov
push
adc
sub
cmp
sbb
xchg
jp
xor
xchg
xor
cmp
inc
inc
push
insb
dec
sub
sub
stc
jbe
or
push
mov
cmp
stc
imul
imul
aam
jnp
xchg
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
scas
jb
dec
dec
jne
jl
jl
jl
xchg
jnp
aas
cmp
int
cwtl
cmc
ljmp
cld
push
ret
js
ss
and
push
inc
gs
cmp
xor
nop
mov
xchg
add
and
lahf
popf
pop
mov
mov
push
pop
sbb
sub
add
push
cmp
aas
pop
add
popa
aaa
mov
sbb
lret
dec
cmp
push
add
or
outsl
jnp
adc
adc
jnp
xchg
mov
lods
in
jg
mov
in
or
ja
cmpl
mov
mov
adc
stos
xchg
pop
mov
adc
ud0
mov
dec
or
or
lea
mov
push
pushl
jmp
pop
jecxz
xchg
mov
jb
daa
pop
test
mov
mov
mov
or
sbbb
fisttpll
int3
dec
sarb
pop
stos
inc
jmp
les
xchg
clc
fists
inc
sub
push
fs
hlt
pop
hlt
pop
ret
or
xor
sub
pop
pop
jbe
lock
adc
rcll
push
xchg
lds
push
jns
inc
dec
call
popa
jo
jge
fcmovb
adc
mov
add
jecxz
mov
mov
pop
mov
adc
or
xlat
sub
xorl
mov
lds
in
scas
and
add
jmp
or
mov
mov
push
int3
xchg
xchg
int
loope
mov
ja
jl
jl
jl
push
xchg
add
dec
fmull
lahf
add
jns
xchg
imul
xlat
dec
daa
add
fnstcw
pop
and
shlb
sbb
push
inc
fsubl
push
adc
add
and
in
mov
xor
or
aaa
xchg
pop
mov
fs
pop
sbb
jnp
aas
sbbb
lcall
pop
mov
mov
and
mov
xrelease
mov
ljmp
sbb
lcall
jl
mov
repz
jns
inc
xchg
xor
adc
iret
inc
inc
add
aas
clc
outsb
int
fmulp
call
mov
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
xchg
pusha
ja
jl
jl
jl
lahf
mov
add
mov
jno
mov
in
ljmp
push
xchg
mov
dec
mov
xor
dec
ja
fwait
sbb
outsl
push
imull
int
xchg
and
pop
inc
inc
int3
js
mov
pop
push
jb
sbb
enter
mov
ljmp
sub
pop
mov
xchg
or
or
ljmp
lea
mov
imul
test
dec
in
dec
cmpsl
push
add
mov
cld
shl
ss
aaa
xor
out
out
les
rolb
test
mov
shl
in
mov
cmpsb
std
pop
ficomps
clc
mov
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
insb
popa
xchg
jbe
jl
jl
jl
jge
mov
insl
mov
jg
xchg
xchg
shll
push
xor
adc
mov
mov
loopne
sub
icebp
ljmp
mov
subb
adcl
call
pop
or
xchg
add
flds
cltd
jl
jmp
pop
mov
mov
sub
inc
dec
pop
popa
arpl
jp
sub
push
jp
jle
dec
mov
int
or
mov
jo
andl
fimuls
cmpsl
jmp
adc
inc
or
inc
cld
mov
jmp
xchg
sub
cltd
cmp
mov
and
mov
or
jl
jl
ret
push
xchg
mov
pop
push
push
ret
cli
fsubs
out
fiadds
idivl
daa
lret
xlat
xor
sbb
popf
fidivl
arpl
add
xchg
cwtl
add
sub
ljmp
cli
push
and
insl
lock
xor
or
mov
jo
pop
dec
pop
aas
inc
cs
clc
cmp
jp
fdivrs
mov
xchg
adc
cld
cmpsb
push
outsl
cmpsb
add
lea
sbb
or
mov
jle
sbb
cs
stos
or
das
add
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
add
mov
mov
fwait
xchg
sbb
dec
mov
hlt
popf
loope
dec
lret
jbe
aas
jo
add
cmpsb
ja
fstpt
mov
jge
mov
in
pop
mov
sti
push
push
sub
pop
push
mov
sub
cmp
aam
mov
push
push
popf
cld
cmp
jne
adc
and
mov
add
adc
out
fiaddl
fdivl
push
arpl
repz
xchg
xchg
jbe
adc
in
dec
sar
sahf
pop
pop
cli
enter
cltd
jnp
xchg
loopne
lret
ret
jmp
inc
and
pop
ja
or
aam
xor
test
add
xor
add
mov
jmp
and
rep
lods
sti
pop
xorl
lock
dec
or
jl
jl
cmpsl
dec
dec
xchg
mov
nop
addr16
inc
and
push
xchg
into
add
xchg
push
xor
inc
stos
lods
aam
sub
dec
mov
xchg
fcomps
mov
mov
mov
jmp
fs
into
add
xchg
dec
sub
shl
icebp
add
pop
mov
mov
cmp
dec
and
sarl
adc
dec
dec
imul
cmp
mov
inc
xchg
lods
mov
jle
or
es
jecxz
dec
xor
mov
cmp
lods
xchg
outsl
xchg
pop
icebp
fistps
sarl
fstpt
push
pop
div
sbb
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
or
jl
jl
pop
add
xchg
dec
mov
fwait
outsb
daa
xchg
mul
sbb
and
subb
imul
pusha
push
out
into
call
lock
jno
or
aas
mov
inc
mov
enter
dec
arpl
mov
xchg
adc
mov
scas
repz
fidivrs
push
lds
add
pusha
jnp
pop
in
fadds
fsubrl
sub
daa
dec
in
hlt
lock
push
outsl
outsl
pop
sub
push
and
fbstp
mov
jne
mov
mov
addr16
out
jne
pushf
divb
ret
fildl
mov
jmp
mov
mov
xor
jmp
fsub
mov
clc
mov
jle
xlat
and
jl
mov
ljmp
mov
dec
mov
popa
push
jecxz
arpl
jmp
addb
mov
push
inc
sbb
inc
xor
sbb
cmp
pop
xor
push
sbb
dec
cli
in
jg
aas
movsb
test
xor
mov
psubsb
dec
popf
sub
out
add
adc
or
data16
mov
lret
sub
push
test
scas
push
push
push
int
fdivrp
ljmp
or
testb
je
mov
std
pop
jp
gs
dec
or
pop
loopne
cmp
cmp
dec
aaa
icebp
xor
push
ds
xor
mov
add
mov
jmp
pop
fimuls
cltd
push
mov
sbb
push
jl
mov
push
adc
pop
lods
arpl
shlb
sub
ds
fwait
inc
or
icebp
xor
mov
jle
inc
cltd
mov
inc
movsb
popa
test
lods
test
mov
les
pop
nop
jns
in
xchg
xchg
loope
mov
dec
pop
inc
xchg
mov
outsb
dec
cmp
gs
cmp
sbb
jo
loopne
sti
dec
outsb
inc
inc
adc
mov
xor
cmp
adc
cltd
sahf
pop
dec
outsl
ss
daa
stc
test
jl
scas
xchg
add
inc
push
inc
xor
dec
cltd
loop
repz
and
or
sbb
push
std
cmp
ds
xor
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
sbbb
das
nop
or
jl
jmp
cld
rolb
gs
mov
rcrl
fs
xchg
cs
jae
repz
mov
sbb
fcomi
xor
cltd
or
fcompl
jo
stc
and
cli
mov
in
push
out
xchg
repnz
into
xchg
mov
loop
pop
hlt
pop
jbe
jbe
fsts
cs
rcl
xchg
enter
nop
fstpt
jecxz
and
push
lret
minps
fisttpl
fldt
or
arpl
mov
mov
popf
mov
xchg
shlb
dec
leave
lcall
jg
push
inc
test
out
test
or
push
int
or
test
add
add
add
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
lods
rcll
jl
jl
jl
imul
dec
mov
pop
int
push
jne
shrl
ja
sbb
js
mov
aam
pop
fcmovnb
xor
jle
mov
lods
sub
push
mov
out
out
add
push
popf
aam
sbb
adc
js
pushf
xor
adc
leave
xor
sub
xor
int
je
and
jle
mov
add
popa
push
adc
cmp
enter
jae
mov
sub
aam
inc
cmp
imul
mov
push
push
inc
dec
bound
cli
push
push
mov
sub
or
fs
mov
sbb
jmp
in
test
sti
mov
jl
stos
sbb
jl
mov
stc
fwait
sub
add
and
stos
je
cmc
stc
ficoml
pop
lods
or
mov
or
xlat
ret
push
test
mov
add
ss
mov
aaa
adc
cmpsb
sub
xor
popf
jmp
insb
addr16
cs
sti
mov
int3
testb
imul
cmp
dec
fisttps
mov
and
pop
pop
vmptrst
loopne
xchg
nop
daa
pop
outsb
inc
clc
and
mov
jmp
xor
cmpsb
sub
cmpsl
mov
mov
xor
jne
jg
push
aaa
lea
popf
imul
int3
jbe
xor
add
jmp
dec
jge
cmpb
jge
push
loope
call
jl
jl
jl
lods
scas
push
sub
notb
jg
rcr
movsb
jle
dec
test
pop
push
dec
test
adc
inc
loop
mov
lea
sbb
subl
xor
insl
aad
iret
push
stos
mov
daa
pop
je
inc
repnz
sub
cmp
cmp
adc
rcl
int3
fisubrs
sahf
pop
or
or
fstpl
sub
jbe
sbb
out
pop
or
cwtl
pop
sti
iret
xchg
sbb
and
xchg
hlt
les
mov
mov
push
sub
jno
fcomps
push
inc
fsubrl
or
mov
in
add
fdiv
xor
sti
dec
xchg
dec
sub
xchg
hlt
mov
dec
jb
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
pop
and
clc
push
jl
into
jg
jl
cmp
mov
lock
xchg
aad
stos
push
ljmp
nop
or
cmp
cltd
mov
mov
mov
push
sub
pop
xor
mov
popa
sub
xchg
xchg
cmovne
ja
mov
aas
pop
cmp
das
scas
dec
dec
sub
out
xchg
sbb
adc
adc
sti
lea
negb
mov
dec
mov
call
loope
ja
fdivr
mov
lahf
sbb
jae
ds
push
mov
xlat
pop
pop
inc
stc
les
fcoms
cmp
scas
xchg
and
mov
xor
testl
into
notl
frstor
lods
jmp
in
inc
lods
xor
xchg
popa
sbb
xchg
and
cmp
pop
movd
push
enter
stos
mov
pop
xor
lret
pop
int3
sbb
inc
enter
mov
jg
jbe
jne
mov
add
mov
and
lock
comiss
fistpll
les
xor
les
out
dec
std
rcl
mov
and
sub
pop
add
into
mov
pop
in
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
dec
mov
int3
dec
add
jg
jl
cli
enter
adc
cli
movsb
xchg
jns
loopne
pop
xor
mov
xor
mov
mov
push
or
sbbl
loopne
cmpl
iret
stc
popf
movsl
out
pop
add
sbb
xchg
int3
add
jbe
fldl
lods
mov
subb
xchg
sbb
pop
push
pop
iret
xor
pushf
testl
push
add
sub
inc
rcll
cld
das
ror
cmp
aas
cs
loope
mov
pop
icebp
add
pop
dec
sti
adc
jnp
icebp
cmp
dec
pop
mov
shrb
out
mov
shlb
xchg
stos
xor
mov
xor
sarb
push
jbe
sti
inc
clc
cmpsb
or
sbb
icebp
mov
mov
jae
fwait
mov
xchg
out
dec
mov
jo
cltd
xchg
pop
jo
adc
adc
mov
insb
cli
incl
xchg
lock
out
sub
shrl
clc
mull
js
jg
call
push
cmp
bound
mov
fsubrp
in
push
adc
xchg
or
pop
js
mov
enter
sub
sbbl
pop
mov
jmp
jno
in
cli
insl
cmpl
cmp
inc
sbb
jl
into
jg
jl
shll
scas
lcall
cmc
test
mov
mov
in
negl
add
xchg
push
dec
mov
lods
push
cmc
jp
push
out
jg
pop
mov
cmpsb
jge
comiss
int3
adc
jne
out
cld
mov
and
lock
ss
mov
pop
stos
cmp
push
xor
dec
repnz
pop
mov
dec
loope
mov
fdivp
out
cmp
jge
inc
sbb
aam
sbb
ds
push
mov
dec
inc
enter
lds
movsl
cmp
stos
aas
or
jp
inc
push
jg
hlt
dec
mov
push
pop
sub
call
jp
dec
icebp
rdmsr
aaa
leave
pop
push
mov
adc
jnp
cmp
lret
mov
pop
jbe
mov
sub
icebp
cs
dec
jbe
cmp
pop
sbb
push
sahf
xor
sub
inc
aas
daa
sub
hlt
pushf
ss
jb
pop
std
aas
lcall
stc
into
xor
xchg
xchg
cmp
xchg
cmpb
rolb
add
inc
sbb
fadd
push
in
sbb
iret
ret
insb
xchg
sbb
inc
xor
rcrb
aas
fiadds
les
out
add
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
das
mov
jl
hlt
jl
jl
andl
sub
fisttpl
repz
cmp
jno
add
dec
out
inc
mov
cmp
mov
mov
xor
add
pop
or
test
int3
js
aad
inc
jmp
pop
test
sbb
bound
push
lods
shrl
mov
out
addl
es
ja
fwait
aaa
pushf
jae
clc
testl
sub
or
ret
add
add
js
cmp
fucomp
in
sarb
data16
jl
jl
stc
jo
icebp
pushf
out
or
aam
jno
repz
cwtl
movsl
mov
test
fnsave
ror
add
mov
out
fnstsw
pop
loope
add
mov
pop
fistpll
rolb
push
movsb
aas
rcrb
push
test
pop
clc
fwait
cmp
stos
add
inc
jnp
lahf
pop
xor
cmp
data16
mov
enter
mov
mov
jg
repnz
sarl
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
mov
jl
jl
jl
sti
or
mov
pop
and
jl
xlat
testl
in
cmp
cmpsb
cmc
movsl
pop
sbb
dec
or
cmpsl
ret
lock
outsl
adc
and
fwait
and
bnd
insl
arpl
fiadds
dec
aaa
stos
je
cmp
daa
sti
ja
imul
push
xchg
popf
and
jnp
pop
fs
mov
ret
call
pop
mov
pusha
xchg
push
gs
sub
outsl
pop
pop
mov
js
adc
inc
add
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
scas
inc
xor
jl
xor
jl
pop
nop
insb
adc
mov
cmpb
orb
or
jb
movsl
mov
dec
loopne
dec
out
ss
loop
popa
cmpsl
mov
in
ljmp
push
ja
imul
mov
jb
xlat
fimuls
in
mov
mov
int
dec
jns
mov
cmp
xor
out
gs
sbb
pop
adc
leave
xor
rorb
pop
add
adc
inc
scas
mov
jecxz
jne
out
inc
adc
mov
sbb
mov
pop
or
cli
imul
out
jecxz
es
lods
ret
lahf
pop
stos
or
sub
push
xor
call
cmp
insl
lods
push
test
rcrl
ds
rcr
xchg
aas
clc
inc
ret
mov
nop
icebp
mov
push
xor
lds
stos
xor
or
mov
fdivs
sub
stos
push
sarl
mov
outsl
or
jbe
push
rcrl
sbb
add
repz
xor
icebp
mov
stc
cmp
lahf
rorl
sbb
push
push
jl
outsb
clc
popl
inc
sarb
sarb
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
lock
inc
into
pop
jl
xor
jl
stc
iret
mov
cmp
fistpll
or
cmp
cmp
scas
mov
ds
out
mov
mov
lods
xchg
adc
push
and
aam
or
jno
int3
ja
inc
xchg
push
out
push
in
push
mov
mov
sub
test
xor
lcall
test
cmp
mov
lret
mov
inc
xchg
sub
xlat
xor
sarb
pop
and
lds
sbb
sbb
mov
jecxz
mov
mov
jle
clc
push
mov
orb
daa
clc
jne
sub
in
mov
hlt
adc
jp
dec
imul
inc
push
fisubrs
hlt
adc
cmpsb
shufps
sahf
mov
push
scas
pop
imul
adc
pop
repnz
cli
xor
xor
pop
imul
cli
sub
mov
ret
sahf
lock
popa
adc
ror
xor
sub
outsl
shll
xor
das
xor
addr16
mov
push
pop
test
or
xor
mov
jne
lods
jge
frstor
jae
and
adc
inc
add
push
cld
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
notb
jl
xor
jl
je
gs
mov
adc
pop
mov
sub
or
push
dec
nop
fnsave
mov
nop
mov
in
lods
or
fldcw
nop
aaa
out
pop
mov
push
test
add
xchg
pop
push
and
and
xchg
push
loopne
mov
push
enter
mov
int3
or
xor
cltd
mov
andb
jp
add
addl
lods
push
adc
data16
das
ljmp
pusha
dec
dec
inc
dec
lods
push
mov
jecxz
mov
lock
movsb
lds
cli
mov
adc
cmp
cmp
mov
xlat
scas
jns
cmp
adc
rolb
add
enter
in
add
lods
cmp
sti
sahf
pop
cmp
and
and
inc
dec
dec
lock
sub
popa
roll
sti
aas
into
test
cmp
xor
push
icebp
cwtl
jecxz
and
aam
sub
cmp
xchg
push
add
mov
and
mov
jmp
push
xchg
stos
push
bound
add
xchg
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
lock
jl
xor
jl
test
dec
das
sbb
frndint
aad
out
cmp
xchg
inc
and
scas
dec
pop
jmp
add
or
addr16
mov
sbb
cmc
add
cwtl
sbb
loope
fildl
movsl
repnz
pop
sar
cmp
icebp
repz
and
mov
push
lret
sbb
cltd
popa
sbb
cltd
mov
mov
movsb
push
test
cwtl
sbb
mov
xchg
jae
jbe
cmp
jae
arpl
pushf
pop
repz
scas
jno
repnz
mov
xchg
push
enter
mov
into
mov
cmp
dec
divl
mov
mov
fimuls
mov
or
cmp
es
jg
inc
or
mov
xchg
mov
add
and
repz
sub
fwait
jo
xchg
sub
stos
xchg
jo
loopne
jno
mov
lds
jp
push
xor
jp
xor
add
pusha
test
lea
jnp
xor
mov
inc
jb
mov
pop
movsl
cmp
imul
sbb
push
outsl
sub
pop
jecxz
dec
cmp
cmpsb
test
inc
pushf
call
add
movsb
sub
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
ficoml
jl
jg
jl
xor
nop
dec
inc
and
insl
sbb
ja
or
fwait
shl
ss
stos
jbe
fdivs
cltd
jge
js
clc
cld
clc
dec
jge
cmpsb
mov
mov
pop
mov
in
loopne
fwait
dec
arpl
sti
fwait
push
lret
mov
mov
cmp
lock
mov
repnz
ds
pop
jle
scas
sarl
mov
call
daa
inc
out
mov
movsb
js
outsb
dec
jae
sub
sbb
pop
mov
in
test
les
inc
in
inc
mov
xchg
push
icebp
and
dec
cmc
enter
jb
out
je,pn
sbb
cmp
mov
sti
jge
lret
jmp
in
sbb
inc
lcall
insl
and
neg
vdivps
pop
cmp
mov
push
test
and
ret
or
pop
sahf
dec
pop
test
in
add
mov
push
shr
mov
hlt
xor
shl
roll
xlat
and
cmpl
inc
or
inc
std
xor
adc
loopne
xor
fisttpll
pop
sbbl
xchg
add
add
add
add
cld
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
xchg
iret
jge
out
sbb
jg
jl
xchg
xor
mov
clc
js
push
mov
test
dec
icebp
sbb
jl
incb
fildl
fistpl
out
loop
shlb
out
mov
es
fdivrp
pop
stc
fs
repnz
jge
mov
jg
xchg
sbb
enter
stos
xchg
push
leave
mov
xor
jns
fiadds
jmp
loopne
mov
enter
sbb
sbb
in
push
dec
ret
cmpsb
sub
sbb
negb
xchg
dec
es
sbb
pop
mov
sysret
add
sti
sub
adc
call
push
dec
mov
lea
or
cmpsl
mov
popf
push
ficoms
inc
pop
rorl
xor
push
adc
jmp
int3
fmuls
mov
sahf
pop
fisttps
test
jl
mov
push
mov
repnz
lret
jb
ret
mov
ljmp
test
mov
ret
push
shrl
adc
sbb
test
rcrl
or
mov
pusha
ljmp
int
loop
fwait
sbb
inc
inc
mov
add
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
dec
xchg
sbb
cmpsb
sbb
jl
ljmp
icebp
js
push
ljmp
test
scas
in
cmpsl
pop
mov
push
rclb
push
cltd
add
nop
mov
dec
lds
enter
jecxz
ret
movsl
clc
push
add
pop
push
loopne
xor
stc
daa
mov
mov
leave
mov
push
mov
divb
mov
sub
jecxz
data16
sub
and
icebp
xor
gs
std
mov
and
sbb
adc
cmp
es
in
icebp
insb
or
xchg
cli
sub
nop
mov
iret
ret
or
cld
lcall
dec
sbbl
mov
das
xchg
xchg
sbb
jecxz
fwait
insb
movsb
jecxz
and
andl
dec
and
cli
mov
add
fwait
dec
mov
imulb
pop
jno
or
repz
mov
inc
aaa
jle
inc
adc
add
outsl
scas
push
adc
std
scas
insl
jne
lods
in
xchg
and
dec
mov
inc
xchg
mov
sbb
mov
mov
xor
fnsave
imul
cmp
inc
push
add
ljmp
xor
mov
jmp
psraw
out
frstor
fcompl
jl
xor
jl
insl
add
mov
ret
cmp
repz
rcl
clc
pop
cld
sub
and
cmp
mov
mov
jo
jge
pusha
push
rcrl
testb
pop
mov
lahf
pop
adc
xchg
push
cmp
mov
lret
and
test
pusha
jmp
lock
inc
xchg
repnz
shrb
sub
pop
out
lods
pushf
test
popa
stos
int3
dec
push
fistpll
pop
ds
cmp
pop
push
adc
cmp
xchg
popf
int3
in
xor
lock
mov
or
xor
subl
sahf
xor
dec
in
imul
es
jmp
inc
sbb
mov
cwtl
idivl
and
outsb
jle
imul
mov
adc
push
jg
out
dec
jg
add
xor
jl
out
xchg
push
fbstp
dec
movsl
imul
or
sub
mov
das
mov
cld
ficoms
repz
movsb
cmp
push
bound
xchg
cltd
or
push
sub
inc
andb
insb
pop
add
fmuls
repnz
int3
cs
push
and
sub
push
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
xor
adc
test
xor
jge
ljmp
cli
outsl
outsl
inc
dec
jp
call
inc
or
rorl
or
or
dec
xchg
repnz
shl
pop
inc
mov
sub
dec
mov
les
push
pop
vandnps
push
lea
out
inc
jnp
pop
cmpl
mov
in
pop
fidivrl
in
cli
add
xchg
jae
and
or
int
insb
push
cmc
std
aad
sahf
rol
data16
stos
inc
mov
addr16
mov
jns
or
lods
outsl
je
xor
jns
lea
cmp
inc
xor
cmp
jmp
xor
mov
jo
dec
sub
cli
xorb
out
xor
repnz
pop
push
mov
mov
sub
lret
adcl
jae
pop
xlat
shrb
cs
in
stos
push
loopne
jge
adc
xor
lret
out
addr16
pop
inc
insl
ss
jnp
sub
cld
dec
jbe
aam
pusha
sbb
adcb
sahf
cmpsb
shr
pop
pop
inc
fdivrl
adc
arpl
hlt
xchg
jne
test
xchg
push
das
sti
rorl
cmp
scas
xlat
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
fs
push
mov
jl
xor
jl
add
rclb
adc
jbe
or
mov
repnz
ret
or
cmpsb
mov
jns
inc
mov
mov
pusha
mov
xchg
push
dec
and
adc
cltd
push
fimull
cwtl
push
sub
cli
iret
into
sbb
adcl
imull
mov
outsb
jno
ds
adc
dec
in
xchg
sub
sub
mov
rep
popa
sub
pop
or
jge
sub
insb
fidivrl
adc
mov
jge
mov
inc
dec
add
jge
dec
cmp
mov
mov
jo
xor
lahf
das
sar
fisttps
jecxz
pop
mov
pop
fcomps
sub
or
inc
int
std
mov
dec
dec
sbb
xchg
into
jl
sarb
adc
outsl
aaa
cmp
bound
sahf
popf
inc
and
dec
test
mov
cmp
jg
lock
mov
out
sub
insb
mov
mov
adc
lret
jl
aaa
fsubrs
cmp
mov
inc
js
push
hlt
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
lcall
jecxz
into
or
int
push
in
scas
je
xor
mov
aas
movsb
loop
pop
pop
scas
insl
add
xor
repz
mov
and
xchg
and
pop
mov
sbb
mov
testb
in
nop
gs
subl
mov
push
jecxz
mov
sub
test
aaa
dec
jne
lret
pop
pop
gs
into
ror
sbb
mov
fs
ror
dec
mov
sbb
outsb
cmpsl
or
lods
mov
dec
pushf
shrl
add
fwait
movsb
popf
xor
stos
ret
fs
into
jae
clc
mov
push
jp
push
mov
push
mov
xlat
loop
bound
lods
mov
cltd
scas
pushl
push
andb
sub
repz
cli
pop
loope
inc
repz
int3
add
add
cld
push
jg
pop
js
adcl
pop
popf
push
adc
push
push
in
out
scas
mov
test
jecxz
sub
xor
ja
das
mov
movsl
call
jnp
push
and
lret
sub
mov
xor
push
ret
js
jnp
adc
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
add
nop
push
jno
mov
xchg
xchg
cmp
repnz
shll
fsub
dec
mov
adc
jmp
inc
les
es
xor
lods
fwait
inc
bound
out
les
cmpsb
lahf
and
movsb
sbb
mov
mov
out
dec
call
mov
push
aas
mov
jae
or
mov
or
and
xor
scas
cli
jecxz
pop
ret
insl
sbb
sbb
sbb
adc
insb
imul
std
cmp
roll
test
xor
pop
mov
dec
xchg
jge
adc
aas
std
mov
jmp
into
bound
fsubrl
adc
hlt
pusha
stos
repz
subl
mov
jae
pop
and
insl
xchg
mov
sbb
movsl
jmp
mov
sti
inc
cmc
movb
sbb
xchg
cld
aaa
xor
jge
push
xchg
enter
push
mov
push
cmp
mov
add
xchg
imul
xorl
scas
rorl
fmul
adc
sub
sub
jb
push
in
mov
mov
jmp
or
push
cmp
dec
shll
sub
xor
jl
jb
push
lahf
and
jecxz
sahf
inc
add
cmp
adc
scas
pop
movsl
fdivr
ds
and
fsts
inc
inc
shrl
mov
hlt
fisttpll
jno
or
pop
mov
or
dec
lods
mov
shlb
inc
sbb
inc
xchg
out
cmp
movsb
dec
data16
dec
gs
lock
sbb
test
or
addr16
sub
add
clc
js
ret
scas
int
arpl
call
xchg
xchg
add
fdivrs
filds
movsl
and
and
inc
xchg
xchg
orl
pusha
cltd
js
imul
loopne
pop
les
sub
mov
dec
movsl
cli
jne
mov
push
mov
inc
filds
inc
xor
popf
inc
out
clc
cmp
xor
add
popf
es
fs
adc
mov
lcall
mov
push
xchg
or
jmp
mov
je
out
mov
jle
ds
add
jo
or
jle
mov
mov
inc
pop
popf
or
jle
xor
pop
and
incb
sbb
xchg
cltd
test
mov
add
imul
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
cs
mov
scas
adc
jl
jg
jl
mov
sti
pop
xor
add
mov
test
sub
mov
fidivs
mov
cli
mov
mov
cmpsl
div
and
xor
xchg
cld
dec
bound
pop
and
xchg
push
mov
test
add
cmp
gs
data16
fstl
movb
xchg
push
call
cwtl
cmp
pop
jbe
inc
inc
add
movsl
mov
aaa
sbb
push
cltd
jmp
ds
mov
inc
out
clc
cmp
inc
jecxz
shll
jne
test
aaa
ja
jo
repz
xor
xchg
imul
push
and
daa
movsb
enter
imul
cmpb
aas
or
mov
decb
ror
inc
cmp
jecxz
pop
push
out
jecxz
jge
mov
mov
outsl
sbb
adc
sub
inc
pusha
js
pop
xchg
test
add
sub
mov
xor
push
sbb
and
jo
out
movsl
psrlq
daa
mov
mov
out
in
les
testl
pop
mull
jns
mov
sub
test
push
adcl
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
lods
or
sti
and
adc
xlat
push
adc
aam
sbb
cmp
pop
repnz
pop
sub
sub
icebp
clc
cmp
jnp
enter
jns
cmp
dec
mov
mov
test
jmp
fistpl
inc
in
divb
push
pop
mov
movsb
fs
pop
adc
mov
in
adc
les
mov
mov
xchg
imul
fs
add
xchg
sbb
pop
pop
jb
sbb
mov
cmp
les
or
lods
xchg
pop
mov
aaa
aad
in
addr16
scas
inc
pop
inc
jl
in
das
xlat
jl
jmp
ret
fildll
clc
sub
jle
xchg
icebp
outsb
inc
addl
repnz
xor
mov
in
bound
dec
in
inc
es
adc
ss
lahf
mov
and
mov
xor
cld
sbb
rcrl
mov
mov
pushf
push
push
adc
mov
mov
dec
cmp
mov
jmp
ja
mov
ret
push
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
repz
sub
sub
jl
jl
stos
movsb
outsl
fxch
jecxz
jmp
outsb
sub
popa
sbb
xlat
cmc
rcrl
and
inc
es
mov
jmp
hlt
sub
add
add
and
lahf
in
xchg
call
sete
cld
xchg
sub
cwtl
mov
push
cli
push
dec
pop
jp
movsl
into
sub
mov
pop
shll
roll
mov
pop
inc
pop
repz
test
mov
mov
jecxz
inc
icebp
scas
sub
sahf
inc
inc
into
scas
stos
inc
mov
add
sbb
push
and
inc
mov
and
and
add
jns
mov
stos
ds
pop
sub
das
mov
or
xchg
das
mov
and
inc
push
mov
mov
push
jb
xchg
xor
aad
clc
or
movsb
std
add
jae
push
mov
mov
jmp
shl
xchg
fs
jns
adc
jne
das
ret
push
and
jl
bound
imul
xchg
xor
enter
pop
adc
inc
and
ret
lea
imulb
lahf
out
jnp
movsl
stos
jbe
into
xchg
add
scas
adc
rclb
lcall
jge
inc
xor
fcmovnb
movsl
inc
clc
fcompl
push
mov
lret
aaa
xlat
aaa
call
rcrl
push
jne
ficompl
lret
inc
pop
in
jg
popf
xor
xchg
fprem1
jbe
add
mov
xor
fsqrt
rcrb
jbe
xor
div
mov
and
push
cmp
int3
push
xor
xchg
push
pop
ja
pop
insl
jae
cmp
push
rorl
jp
cld
pop
adc
xchg
call
jmp
sbb
add
std
lcall
adc
stc
insl
jmp
aad
movsb
cli
lods
dec
paddusw
inc
fst
mov
pop
rolb
push
or
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
xchg
out
cvtpi2ps
jl
bound
fstps
cmp
push
ss
pop
out
mov
pusha
dec
call
sub
pop
rol
stos
mov
cmp
stc
xlat
jno
imul
sub
std
adc
in
xor
hlt
or
push
jge
dec
cmc
rcl
rcll
jle
pop
adc
cmp
adcl
insl
or
and
les
repnz
mov
lock
nop
stos
jo
pop
xor
xchg
inc
and
and
aam
or
cmp
out
jge
mov
movsbl
or
mov
fdivrs
mov
repz
stos
lods
addb
jae
jmp
mov
or
loopne
jb
inc
cmpsl
push
and
or
sbb
jne
lock
shrl
test
psraw
daa
jecxz
int
call
out
jge
lea
sub
mov
out
div
mov
and
or
mov
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
call
sbb
jl
lock
es
std
mov
ret
mov
sti
sahf
push
xchg
push
jecxz
data16
fstpt
adcb
mov
sub
push
std
cmp
ss
out
xchg
pop
xor
cmp
addr16
and
xchg
sub
xor
lds
mov
out
arpl
sub
ja
hlt
cmp
sahf
sti
jp
and
das
dec
sbb
mov
test
xor
pop
sbb
push
add
mov
lcall
push
xchg
adc
je
jmp
test
sbb
hlt
cwtl
ds
jmp
std
pop
mov
jns
nop
ds
imul
outsb
lods
sub
popa
adc
in
mov
push
sub
push
cmpsb
ds
jmp
aas
mov
clc
and
pop
sub
and
xchg
or
add
adc
xchg
sub
lods
out
pop
adc
mov
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
cmp
cmp
jl
sbb
jl
mov
sbb
dec
repz
lret
push
test
in
arpl
imul
cwtl
rcll
lea
mov
dec
push
insl
pop
fadd
inc
outsl
sbb
outsl
pop
or
mov
push
roll
mov
add
mov
insb
mov
mov
pushf
push
cwtl
mov
dec
dec
orb
push
repnz
movsl
lret
mov
jecxz
jmp
in
inc
xchg
aad
imul
pop
xor
addr16
in
jge
imul
dec
push
int3
fcomps
lahf
mov
imul
out
xchg
jbe
push
mov
sbb
pop
cmpsl
adc
aad
xchg
xchg
jno
mov
out
xchg
aaa
aad
aas
rcll
dec
mov
fisttps
fbstp
cmp
jmp
xchg
out
call
pop
ror
pop
hlt
fsubr
scas
cmp
std
sbb
jb
scas
sub
mov
fidivs
xor
sbb
pushf
pop
adc
int3
out
cltd
ljmp
xor
orl
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
and
sub
jl
jg
jl
inc
dec
xor
int3
lahf
mov
jle
mov
mov
scas
fstps
insb
popa
orl
mov
jg
inc
pop
push
sbb
push
daa
or
or
mov
xchg
fiadds
push
fbstp
lret
push
xor
sub
inc
dec
mov
out
fsubs
dec
mov
xor
add
mov
xchg
lret
mov
push
mov
shrl
jae
cmp
jae
xchg
test
mov
cmp
inc
push
inc
jo
das
dec
ret
jno
jnp
push
xor
shll
and
icebp
es
xor
xor
loopne
xor
fs
inc
jecxz
movsb
dec
dec
dec
jmp
in
addr16
in
push
pop
jne
or
sub
sbb
test
jp
xor
xor
sbb
sbb
push
xchg
jbe
xchg
push
in
xchg
rcrb
push
cs
fwait
les
xor
dec
lock
clc
xchg
lret
xchg
inc
and
adc
test
jmp
pop
loope
sbb
lret
mov
cs
jl
sbb
jl
pop
add
ffreep
mov
in
imul
and
sbbb
pop
push
push
jge
es
nop
xchg
and
mov
jmp
testl
in
popf
dec
xchg
ja
push
cld
bound
sahf
dec
adc
or
bswap
cmp
and
adc
inc
fistpl
pop
test
test
jmp
mov
push
dec
into
jp
xor
lahf
inc
push
push
xor
sti
in
scas
cmp
cwtl
pop
fdivs
pop
sbb
dec
jo
or
jg
cmp
icebp
mov
jmp
push
mov
mov
cmpsl
imul
loope
xor
mov
int
xchg
rorl
push
jecxz
jae
sub
call
mov
mov
cmpsb
mov
jno
aad
push
xchg
test
inc
fcoms
inc
inc
cmp
out
imul
fiaddl
cmp
outsb
and
jge
xor
adc
cld
lahf
xor
cmp
or
test
add
add
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
in
ds
subb
jl
jg
jl
in
or
fcompl
imul
xor
inc
mov
sbb
push
mov
subl
inc
shlb
addb
sub
sub
mov
jp
mov
test
xor
inc
jg
inc
test
inc
push
psubq
lcall
xchg
mov
mov
dec
sub
lods
sti
daa
fidivs
cld
dec
lret
into
out
xchg
and
pop
dec
into
cmp
or
mov
sub
push
cmp
add
add
inc
ret
mov
lcall
das
fidivrs
nop
sbb
testb
dec
xorb
push
call
inc
or
add
mov
or
insl
pop
fcmovnu
rorl
orb
enter
pop
xor
lahf
rolb
ljmp
pop
es
add
mov
out
mov
mov
mov
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
ficompl
add
jg
jl
mov
inc
adc
andl
cli
pop
lods
ret
xor
sub
jno
insb
sbb
dec
imul
pop
movsl
push
inc
std
lcall
in
shll
xchg
mov
subl
cmp
or
xor
test
sbbb
enter
mov
and
jno
cmp
cmp
mov
xchg
mull
mov
jle
push
fsubp
mov
pop
sarl
call
add
lods
mov
loope
xor
fwait
or
jb
pop
arpl
ljmp
in
sbb
stos
mov
imul
fiaddl
fldcw
loope
out
cltd
mov
and
pop
mov
scas
stos
out
movb
jl
jne
out
push
in
fiadds
mov
lcall
mov
pop
push
push
cmpsl
and
dec
mov
mov
loope
je
mov
or
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
out
lea
scas
and
jg
jl
fidivrl
inc
out
dec
add
arpl
pop
insl
mov
jmp
push
and
cmpsl
cmp
or
inc
ss
jmp
outsl
ss
lds
or
jl
push
mov
rolb
fidivrs
insl
pop
push
shl
jge
or
in
insb
jo
cltd
sbb
adc
aad
and
cmpb
das
inc
dec
adc
scas
in
and
mov
fidivs
lods
mov
mov
cmpsl
stos
sbb
sahf
push
dec
xchg
stc
dec
adc
fbstp
mov
adc
xlat
dec
inc
xor
mov
or
lcall
out
out
pop
adc
cmp
sbb
cmp
sub
mov
and
mov
mov
mov
inc
pop
fcmovbe
pop
loop
mov
insb
icebp
ret
pushf
or
insb
iret
xchg
mov
adc
lret
add
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
push
xor
jg
jl
lock
cmp
lds
lahf
aaa
mov
mov
orl
sahf
loopne
inc
cmp
pop
lahf
push
imul
pushf
sub
push
ds
mov
out
movsb
dec
mov
stc
sbb
loope
jo
insl
pushf
jns
cltd
sbb
dec
lock
daa
or
call
repnz
ds
mov
leave
leave
or
test
pop
leave
add
filds
xchg
das
xlat
inc
sub
add
jecxz
lods
push
adc
xchg
cmp
xorl
out
ret
mov
dec
or
nop
or
jno
mov
adc
sub
adc
cmp
sti
inc
inc
jnp
sub
and
das
ljmp
pop
incb
test
add
int
in
lcall
mov
pop
dec
lret
dec
ret
std
popa
fdivrp
cmpsb
inc
push
pop
push
cmc
cwtl
std
jp
or
mov
push
add
mov
mov
add
aam
add
or
xor
add
jne
addl
jmp
push
repz
adc
cs
dec
and
jg
jl
sbb
adc
sahf
mov
fldenv
fs
mov
push
mov
dec
xchg
scas
aaa
aaa
cld
inc
push
mov
add
lods
loopne
sbb
inc
mov
inc
ljmp
mov
push
out
pop
mov
out
mov
or
pop
test
test
jne
jo
mov
fnstsw
mov
in
or
gs
sub
rorl
pushl
lds
dec
mov
push
or
sahf
adc
dec
sub
mov
sub
std
sub
push
fldt
dec
sub
hlt
inc
adc
add
push
daa
cs
mov
add
adc
xor
and
mov
popa
rol
popa
cmp
add
aam
jmp
aam
out
ja
mov
adcl
sub
sahf
and
fldl
lahf
shll
lcall
add
add
std
pop
cmpsl
inc
adc
sub
rorl
pop
and
jl
ja
dec
xchg
ret
xlat
mov
add
push
dec
pop
jb
xchg
cmp
add
jae
cmp
cmp
rolb
cmp
fidivs
sub
stos
stos
push
rclb
xchg
inc
pop
adc
imul
or
xorb
adc
std
xchg
push
test
fmuls
jle
lock
push
enter
mov
dec
push
add
cmp
aas
adc
push
push
insb
sub
mov
jb
outsb
pop
cmc
je
cmpsb
mov
sub
loope
cltd
inc
shlb
test
xor
jge
dec
addr16
sbb
lock
int3
cmpsl
dec
idivl
shll
aad
rcl
mov
or
aaa
lret
jae
push
mov
ja
shll
js
ljmp
pop
mov
mov
sbb
sbb
js
xor
mov
bound
mov
xchg
or
jmp
incl
add
add
add
mov
inc
in
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
call
and
jl
jg
jl
popa
sub
sub
in
jg
lods
or
and
popa
mov
lret
cmpsl
mov
sbb
mov
inc
lock
xorl
mov
pop
lods
sbb
xlat
cmp
repnz
jmp
sbb
das
push
std
imul
push
sahf
jecxz
fbld
pop
stc
mov
xchg
or
pop
rorl
xchg
imul
jo
cmp
lds
push
rcll
dec
loopne
cmp
xor
mov
jno
fs
mov
xor
and
or
adc
out
subl
fcoml
nop
mulb
inc
dec
sbb
adc
cmp
push
stc
or
shll
sbb
jge
push
out
sbb
jg
pop
out
ja
mov
clc
pop
scas
rcrb
inc
add
not
jns
mov
dec
mov
nop
sub
out
mov
add
daa
add
add
dec
into
hlt
jge
jge
fnstenv
add
jnp
jl
or
and
rclb
dec
dec
cmp
push
sub
jge
xchg
xchg
fdivr
dec
sub
ret
or
scas
mov
lret
cmp
fimull
jle
jne
inc
mov
sbb
mov
out
popa
int
lret
mov
and
leave
dec
and
push
dec
mov
ss
mov
sub
dec
cmp
fs
pop
xchg
mov
shrl
les
mov
push
push
orb
inc
fbld
mov
push
jno
add
into
std
cmpsb
movsb
mov
loopne
inc
xor
cmp
jmp
adc
push
jae
push
add
and
xchg
pusha
inc
into
jnp
pop
pop
mov
sub
jnp
fs
mov
pop
addb
jns
and
mov
inc
insb
push
repz
aad
pushf
mov
inc
faddp
imul
in
mov
rdmsr
cmp
mov
enter
pop
xor
cwtl
add
add
daa
add
add
jmp
in
adc
sti
push
jecxz
cmp
jg
jl
insb
sub
and
lods
lcall
mov
sub
psubsw
or
dec
repz
cmpsl
nop
cltd
bound
add
loop
movsb
fcomps
mov
lahf
test
push
add
mov
in
and
iret
adc
and
into
mov
mov
xchg
dec
jge
int3
xchg
imul
out
movsl
fs
or
push
mov
dec
xchg
or
roll
mov
repnz
add
mov
xchg
fldcw
icebp
mov
loop
stos
sub
inc
scas
xchg
dec
cmp
jmp
nop
enterw
cltd
inc
sub
dec
mov
mov
pusha
add
or
fcoms
sub
jnp
das
sub
add
scas
leave
sbb
xchg
adc
les
dec
inc
int
dec
clc
mov
or
push
push
repz
loop
pusha
ret
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
sub
lahf
sbb
jl
or
xchg
test
jecxz
hlt
mov
mov
shl
fnstsw
pop
arpl
and
push
dec
adc
repnz
popf
jns
js
sbb
jmp
add
loop
mov
fisubrs
loope
sahf
fwait
aam
cld
and
jb
addr16
sbb
sub
xor
ret
sub
inc
push
int3
push
jne
test
out
add
mov
in
scas
push
in
and
mov
rorl
push
enter
xchg
pop
call
cs
aam
mov
mov
outsl
cld
xor
push
sub
cld
push
mov
pop
pop
ret
repnz
shlb
mov
mov
xor
iret
inc
xchg
sub
add
jp
adc
cli
xorl
scas
cmp
inc
pop
int3
lcall
icebp
jmp
stos
add
sarl
jl
pop
push
push
lret
or
pop
repnz
es
xlat
out
call
mov
xor
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
fcomps
or
jmp
fdivrs
jmp
mov
aad
push
xchg
jbe
enter
mov
out
add
jnp
into
mov
das
jmp
enter
sbb
out
jnp
testb
setg
push
xor
jmp
or
inc
stos
mov
ror
mov
enter
aaa
lock
xchg
dec
pop
dec
xor
and
out
push
loopne
ret
jmp
xlat
rcr
add
shl
pop
cmc
in
aam
or
mov
hlt
cmc
xchg
jge
and
xlat
mov
adc
ljmp
ss
decb
push
sbb
sahf
cmc
stos
loop
xor
inc
ss
punpckhwd
sbb
outsl
mov
adc
clc
in
pop
ret
jp
cmpsl
or
dec
lods
lret
lods
in
mov
loope
mov
jecxz
sbb
clc
mov
fcmovne
mov
inc
clc
mov
add
jmp
xchg
out
std
push
gs
repz
push
daa
cmp
jg
jl
inc
push
in
loope
test
mov
sti
jge
jne
sub
xchg
xor
fcomip
push
push
lods
lahf
movsl
mov
mov
lds
scas
mov
sbb
pushf
out
adc
les
lahf
or
mov
das
lret
sub
lcall
test
cli
pop
repnz
push
pmullw
xchg
sbb
out
dec
inc
ljmp
leave
iret
sbb
sub
add
cli
cmp
xchg
xchg
jno
mov
addr16
mov
pop
pushf
popf
pop
xor
dec
jae
add
clc
mov
xchg
movsl
lods
stos
inc
dec
add
hlt
shlb
jecxz
cld
loop
rorl
push
adc
or
cmc
incb
and
mov
adc
inc
nop
nop
std
dec
movb
push
jp
jae
or
mov
rol
int3
and
jns
cmpsb
mov
push
stc
stos
push
loopne
sbb
xchg
push
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
shr
inc
xor
jl
or
dec
jae
mov
pushf
sahf
mov
mov
ja
mov
ficoml
repz
pop
jge
cmp
sbb
mov
loope
add
aad
movsb
ficoml
xlat
mov
inc
shlb
jmp
xor
cmp
cmp
in
loopne
imulb
push
fdivs
jbe
adc
mov
lcall
call
push
test
stos
les
les
jns
or
or
rep
jle
ljmp
inc
cwtl
cmc
shl
adc
rorb
or
jmp
cs
fstp
iret
lea
bound
sbb
jl
cwtl
adc
ds
pop
sub
cmpsl
outsl
fnsetpm(287
dec
xchg
sarl
jmp
das
int3
in
movsb
stos
rcrb
cmp
mov
cmp
xchg
mov
xchg
iret
into
add
cmc
sbb
jle
jmp
daa
and
ret
pusha
pop
outsl
or
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
jmp
sbb
mov
insl
lods
test
es
lds
jl
jg
jl
jp
mov
push
mov
xor
adc
sub
sub
mov
fwait
rolb
sbb
addr16
cmp
fists
pop
sarb
scas
dec
and
rcll
pusha
out
xchg
ret
mov
dec
push
inc
add
aam
daa
push
jecxz
pop
pop
jmp
mov
shr
ja
inc
pop
mov
and
cwtl
add
rcrb
jecxz
xor
inc
adc
and
mov
mov
pop
jo
push
cmp
js
mov
and
cmp
jns
mov
lret
pop
mov
mov
out
xor
xchg
adc
push
mov
cs
daa
inc
in
mov
mov
in
cmc
clc
into
mov
ficoms
scas
and
loope
xor
dec
push
fcomi
jno
or
or
mov
sbb
fstps
outsl
or
std
test
sbb
inc
jb
mov
sub
push
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
mov
aas
jl
or
push
jmp
stos
inc
dec
jecxz
fiaddl
xchg
je
sbb
loope
xchg
imul
mov
dec
mov
shl
adc
filds
ja
shlb
sub
rcll
sub
ljmp
lcall
pop
das
fidivrs
jg
loopne
js
jno
into
repnz
push
jg
mov
jle,pn
adc
into
adc
mov
xchg
dec
mov
gs
fimuls
daa
scas
ds
cmp
mov
pop
into
ret
mov
xchg
into
stos
jnp
lods
out
adc
add
push
jl
add
dec
scas
lea
push
xchg
sub
loope
lock
cwtl
push
mov
adc
inc
gs
sub
adc
shl
aas
ja
ret
add
and
movsb
fdivrp
xchg
mov
push
call
adc
dec
jp
jle
or
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
add
inc
sub
jl,pt
push
jg
jl
andl
imul
gs
icebp
sbb
in
jl
outsl
mov
and
out
pusha
push
into
test
imull
xchg
scas
jne
addr16
and
fildl
ret
stos
movsl
add
jnp,pt
leave
leave
addr16
or
mov
out
leave
jle
out
ljmp
xor
adc
out
out
repz
pusha
call
cltd
lret
leave
jb
jg
pop
sbb
mov
jnp
mov
aaa
mov
decb
xor
cmpsb
jbe
aam
pop
ds
lea
js
jnp
jns
iret
xchg
cmp
adc
pop
int
cmp
pop
in
mov
outsb
pop
cmp
mov
jg
out
add
fdivrs
movsb
jge
sub
mov
mov
mov
in
mov
push
fcomps
push
stc
icebp
add
pop
stos
addr16
push
jg
sub
lock
shrl
push
hlt
movsl
cmp
pop
push
call
pop
xchg
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
push
cmc
push
mov
outsb
rol
scas
cmc
ja
push
popf
aaa
mov
lret
and
inc
dec
mov
pop
or
out
lds
cli
cld
jb
add
lahf
ljmp
loopne
mov
push
cmpsb
bnd
xor
add
mov
and
lret
aaa
pop
mov
movsb
rcr
xor
jp
xlat
xor
ret
ret
jmp
mov
es
int
ljmp
mov
gs
mov
sub
xchg
sbbb
jg
inc
mov
cmp
stos
fwait
das
sahf
inc
dec
push
xor
xchg
push
mov
ja
inc
jge
dec
subb
inc
sub
imul
or
adc
insl
cmp
mov
sbb
stos
ljmp
add
and
jge
ret
mov
mov
cltd
cmpsb
xchg
mov
sarb
iret
lods
fnstsw
leave
aam
pop
popa
inc
sbb
add
add
flds
xor
fmuls
xor
jg
jl
shlb
pop
faddl
js
mov
cwtl
lret
loop
push
mov
mov
jmp
mov
pusha
imul
xchg
or
test
bound
sub
mov
mov
mov
insl
test
xor
sbb
inc
adc
jmp
outsl
enter
xchg
inc
mov
sub
sbb
push
cltd
imul
jns
rolb
inc
xor
xchg
pop
iret
push
mov
jbe
mov
test
lods
cmp
adc
or
jp
push
pusha
pusha
rcr
mov
movb
xchg
leave
stc
popa
sub
in
mov
in
ret
scas
mov
xor
and
ds
inc
mov
icebp
mov
inc
in
lods
test
mov
adc
movsb
xor
loopne
inc
jno
cwtl
jle
add
and
mov
sbb
mov
pushf
lds
roll
call
or
test
or
or
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
xor
xchg
mov
jl
push
jg
jl
mov
mov
sbb
mov
xchg
outsl
and
lods
or
out
push
lea
test
inc
ror
imull
or
pop
and
mov
shlb
lock
into
std
arpl
lret
cmpl
jnp
jo
lods
dec
rolb
call
sbb
ja
movsl
push
dec
dec
iret
das
inc
push
mov
loope
cmp
addr16
shlw
xchg
pop
add
leave
push
lret
pushf
adc
movsl
hlt
fcoms
clc
arpl
jbe
or
daa
movsb
jnp
outsb
loopne
lret
ja
sub
jg
dec
mov
adc
test
jmp
xor
and
jl
jnp
jno
shrb
mov
jmp
movsb
leave
shl
cwtl
shll
ret
and
add
sahf
push
cli
xor
jae
aam
sarb
shrb
and
pop
arpl
xor
lock
arpl
leave
mov
scas
cmp
nop
js
xchg
test
pop
xor
movl
xor
addl
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
cwtl
pop
mov
push
jg
jl
sub
fwait
xor
push
dec
loop
sbb
pop
pop
in
adc
popa
xchg
mov
pop
stos
inc
add
inc
sbb
cs
cmp
cld
rorb
sub
lods
or
xor
and
das
sbbb
arpl
das
outsl
push
test
adc
mov
mov
das
or
mov
jge
and
xchg
rcl
sbb
out
pop
push
xchg
xlat
xchg
jge
int
mov
sbb
and
insb
cmp
out
push
sbb
fimull
mov
repz
mov
mov
push
add
adc
xor
js
mov
adc
outsb
dec
cmp
mov
cld
pop
popf
xor
mov
mov
inc
into
and
mov
clc
int3
mov
fstl
scas
addr16
mov
pop
popa
cld
jl
inc
and
rcl
mov
scas
and
mov
loope
jp
add
in
sahf
sbb
adc
inc
and
add
or
jne
repz
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
loope
add
gs
jl
xor
out
lahf
jno
add
icebp
mov
lret
or
sbb
and
inc
and
dec
xchg
popl
inc
mov
pushf
aas
mov
lret
or
add
pop
popf
mov
js
xor
inc
add
push
notl
cltd
or
cmpsb
adc
hlt
loopne
pop
and
and
ror
fdivr
bound
shll
jne
jns
rcll
ljmp
in
pop
xchg
ljmp
dec
ret
mov
pop
enter
lahf
out
xchg
js
push
roll
jno
mov
dec
sub
sub
sbb
andl
roll
lods
mov
jne
sbb
inc
lock
mov
xchg
xor
ficomps
inc
pop
bound
push
imull
mov
fcomp
sub
hlt
adc
addr16
cmp
dec
sbb
push
cmp
xor
dec
jns
sub
pop
insb
cltd
fs
out
hlt
nop
cmpl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fistps
jl
push
jg
jl
inc
pop
adcl
jle
cmp
dec
fstpl
mov
negb
mov
dec
mov
xor
cwtl
pop
jb
pushf
mov
and
xchg
and
ja
cmpsl
dec
jmp
pop
or
adc
outsb
ss
nop
mov
fisubl
sti
jo
mov
and
pop
cmp
repz
stc
cs
mov
insl
decl
cmpsl
cmp
xchg
xchg
push
in
add
push
imul
rcll
mov
insb
sarl
sbb
sub
arpl
xchg
loope
scas
je
in
jae
jb
mov
adc
adc
push
xchg
sti
mov
ljmp
push
add
or
psubb
clc
jo
push
test
imull
sbb
jns
sbb
jecxz,pn
jle
popa
sub
aam
dec
adc
mov
jo
shlb
notl
inc
ror
pop
movsl
mul
add
in
push
or
ljmp
pop
add
fcompl
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
subb
ficoms
sub
arpl
xor
adc
out
jo
and
mov
pop
iret
and
push
push
scas
sbb
mov
popf
addl
add
push
popf
mov
in
popa
dec
add
lret
push
jns
cmp
stos
sahf
movb
scas
in
sbb
or
loopne
jo
test
pop
cmp
cmp
jb
xchg
lods
stos
mov
xor
repnz
and
mov
pop
pause
scas
stos
mov
jecxz
cmc
jno
jp
mov
dec
and
xchg
lcall
cmp
call
and
ss
repnz
ljmp
mov
lds
or
jle
sbb
loopne
fbld
lods
mov
sub
hlt
mov
sahf
jo
ss
push
jge
imul
jb
sbb
fildl
sbb
iret
mov
mov
ss
pop
push
sbbb
inc
hlt
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
mov
xor
jl
push
jg
jl
dec
or
mov
jne
inc
and
inc
pop
pop
in
scas
or
roll
mov
aad
mov
push
push
cmpsb
stos
aas
and
sar
mov
fidivs
sar
cld
iret
or
inc
or
fistl
aas
mov
rorb
xchg
aad
imul
movsl
mov
pop
jnp
pop
dec
ja
lods
mov
xchg
push
mov
iret
jmp
stos
mov
das
jle
push
dec
ja
ret
jle
nop
sbbb
xchg
cmp
mov
push
xchg
mov
cmp
clc
arpl
adcl
fs
cli
fsubr
and
jmp
insl
sbb
mov
int
in
popf
cmp
push
xchg
incl
or
mov
lds
ret
fwait
sbb
mov
inc
lcall
mov
mov
lahf
stc
dec
ret
cmp
lea
jmp
fists
hlt
hlt
push
lahf
xor
push
mov
cmp
or
jg,pn
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
enter
jg
jl
xor
sahf
stos
pop
dec
jns
das
sbb
int
adc
mov
addr16
sbb
mov
in
mov
jnp
sahf
jle
adc
scas
pushf
cmp
cli
adc
mov
push
jbe
mov
or
and
xor
mov
pop
addr16
push
ret
push
outsl
ja
inc
pop
mov
push
cwtl
xorl
rcl
enter
stos
lods
xor
ljmp
jge
lret
sbb
sub
loope
jne
xor
rorb
pop
pop
fstpt
xchg
divb
pusha
lock
popf
push
push
ss
sbb
arpl
lock
mov
sub
ds
mov
cmc
test
cli
test
pop
cs
mul
cmp
fdivs
jge
cltd
sbbb
call
xor
repnz
addr16
pop
sub
push
lds
icebp
pop
sub
dec
mov
inc
fmull
jge
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
adc
jl
mov
sbb
jbe
push
dec
popa
shll
cmp
xchg
aas
xorb
in
dec
fstp
sbb
jno
push
push
inc
enter
mov
in
daa
stc
in
inc
popa
fs
sub
loopne
add
mov
test
inc
lea
les
insl
jp
sub
test
scas
cmp
add
push
jge
push
and
aad
hlt
mov
mov
push
push
dec
inc
cmpsl
inc
jp
testb
inc
dec
and
pop
repz
mov
adc
in
sub
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
int3
jo
jae
jl
mov
jp
mov
mov
jb
pop
shrb
das
xchg
dec
shll
lahf
dec
cmp
mov
push
mov
std
mov
cltd
or
aaa
fwait
insl
cmp
push
pop
inc
inc
int
mov
sahf
mov
aaa
stos
mov
insb
adc
movsb
popa
pushf
mov
outsb
stos
xchg
lret
cmp
xchg
sub
dec
xor
or
or
popf
jae
sbb
stos
xchg
xchg
mov
dec
fisubs
dec
int3
push
fcompl
movb
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
cmp
or
sub
xor
dec
push
xchg
int
int
adc
push
push
mov
dec
push
mov
icebp
mov
and
cmp
fimuls
pop
packssdw
add
and
mov
adc
inc
jle
add
jg
sbb
fmull
xor
mov
mulb
call
xor
and
mov
sub
jnp
lods
fstpl
shrb
inc
lcall
cld
lods
sub
dec
lret
cltd
lcall
andl
xlat
iret
sub
insb
mov
mov
cmc
inc
cmp
xor
or
cmp
lds
inc
hlt
inc
lods
aas
mov
lahf
jns
shll
push
push
out
cli
cld
mov
das
sbbl
ds
mov
cmp
insl
andl
in
fisttpll
repz
push
push
fs
mov
push
in
call
fstl
lods
shlb
pusha
leave
lret
shlb
stc
xor
mov
sub
incl
add
or
add
in
inc
add
jnp
add
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
cmp
mov
int
jl
jg
jl
leave
shrb
mov
xchg
enter
jb
leave
std
roll
fwait
xchg
sbb
or
shrl
lds
and
jnp
xor
pushf
add
outsb
mov
dec
imul
inc
leave
cltd
mov
test
test
ret
leave
fwait
imul
jmp
popf
stos
movsl
popa
push
xchg
loope
jbe
adc
orb
hlt
aas
scas
cmp
data16
jae
sub
insb
mov
pop
sbb
roll
jmp
je
ljmp
leave
cltd
pop
and
cld
mov
adc
lea
mov
pushf
lcall
mov
lea
sbb
push
scas
mov
inc
arpl
adc
bound
call
lds
adc
inc
lcall
add
push
ss
dec
in
jge
jmp
mov
mov
push
shrl
dec
or
loop
xchg
test
dec
fstl
cmp
mov
arpl
jno
jne
subb
ljmp
add
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
mov
jl
daa
jg
jl
fwait
push
jl
ja
shlb
inc
sarb
xchg
sti
shrl
bound
loopne
stos
and
sbb
movsb
xchg
cwtl
or
lock
inc
push
adc
lcall
mov
mov
or
sahf
push
dec
shl
or
loop
insl
mov
shrb
or
pop
xlat
xchg
inc
aam
add
xchg
out
scas
pop
inc
out
scas
test
xor
or
xchg
mov
xchg
es
and
pop
jge
mov
push
mov
xor
mov
pop
jb
data16
cmp
movsl
movsb
or
mov
popf
xchg
aas
or
outsb
sub
xchg
repnz
mov
cmpsl
jo
jmp
ret
aaa
rorb
cltd
sahf
dec
rorb
sub
or
pop
pop
test
imul
orb
popf
adc
in
subl
sub
jle
cmp
incl
lcall
sbbb
sub
sub
adc
les
fcomps
pop
mov
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
imul
jl
daa
jg
jl
sbb
and
aas
icebp
pop
sub
dec
sub
adc
sbb
jno
mov
pop
aaa
xlat
loop
fcoml
mov
and
addr16
pop
lahf
bnd
mov
mov
cld
pop
xchg
mov
div
lock
lock
add
jge
enter
mov
push
add
aaa
data16
lods
iret
out
pushf
mov
inc
loope
or
sbb
std
ljmp
sub
sub
roll
cmpsl
in
adc
pushf
adc
xchg
pop
loopne
push
leave
std
scas
movsl
pop
testl
ds
jbe
fcmovb
or
fiadds
sub
push
test
scas
mov
xchg
pop
mov
rcrl
out
xor
sti
repz
test
jns
imul
add
mov
adc
mov
mov
in
jne
mov
pop
push
mov
int
add
mov
pop
rcll
dec
mov
test
out
push
inc
push
aaa
stos
and
mov
aad
cmc
xor
cmp
outsb
rorl
cmp
lock
in
ret
rcrb
call
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
lds
jl
lret
jl
cmpsb
je
jmp
gs
and
lock
jle
add
adcb
sub
xchg
int
enter
dec
call
cli
sbb
pop
and
mov
out
shr
adc
push
arpl
cmpsl
pop
imul
call
adc
call
cmp
mov
test
push
dec
sbb
das
lahf
xchg
aam
jbe
inc
fisubrl
or
xchg
jns
aad
xchg
out
pop
jp
pop
pop
or
xor
icebp
jl
adc
adc
add
pop
leave
push
out
in
inc
cs
dec
cli
sub
add
mov
mov
pop
mov
out
in
xchg
sbb
fsts
or
fisubs
push
int3
mov
pop
arpl
push
add
pop
pusha
pusha
mov
stc
lret
cmpsb
xlat
jae
loope
fldl
dec
sub
push
xor
pop
push
imul
iret
das
out
scas
lret
sub
or
push
jle
fmull
push
les
xchg
fnstsw
pop
cli
rolb
mov
push
data16
cmp
adc
loopne
inc
add
add
add
bound
arpl
cltd
jp
fldenv
mov
jl
lret
jl
iret
push
pusha
cmp
rcl
clc
stos
xlat
iret
cmpsl
in
movsb
jo
out
sbb
mov
jmp
cs
xor
or
adc
sub
into
xchg
mov
es
inc
movsl
xor
fmuls
scas
lock
sahf
push
jns
fs
gs
mov
or
fsubl
rorl
or
sub
negl
adc
outsl
sbbb
stc
mov
and
mov
or
scas
mov
mov
hlt
repz
fisubl
repz
test
insb
cli
sbb
sub
mov
or
jl
mov
sub
inc
leave
and
movsl
repnz
rsm
pop
fstpl
data16
push
or
std
jbe
fsubrl
push
cmp
push
repnz
dec
add
cs
rol
cs
mov
pushl
fcmovu
in
xchg
pop
sarl
xor
dec
dec
ljmp
fstps
sub
push
jmp
in
adc
test
jno
pop
or
scas
pushf
add
je
jns
not
cmp
data16
push
lahf
pop
jns
lret
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
dec
loopne
dec
shll
cmp
push
dec
or
cmp
jge
pop
int3
shlb
enter
pop
jbe
xor
jge
aad
cmpb
pop
sbbl
int
jb
add
pop
cmp
xchg
mov
xor
cli
insb
mov
leave
stc
or
jae
sub
rolb
push
push
imul
fisubrs
cli
int
xor
xchg
adc
or
mov
cmp
cmp
imul
or
xchg
pop
int3
filds
fdivrl
popf
sbb
and
pop
inc
jp
out
ret
lods
cmc
cmpsb
xchg
push
sub
xchg
stc
push
idivl
nop
pushl
and
mull
pop
subl
repz
lea
jge
xchg
lret
sbb
push
push
cmp
ss
cmpsb
xor
lock
out
adc
test
jle
in
mov
mov
sub
adc
jge
lods
bsr
xor
inc
out
pop
roll
push
jp
and
dec
push
fisubl
cmpsb
in
clc
xchg
js
mov
add
gs
daa
add
lds
pop
je
mov
jmp
jmp
xchg
test
loopne
bound
add
dec
and
lret
jl
inc
test
adc
ljmp
cmc
push
cld
cmovne
cmp
cli
xchg
lret
stos
cmp
stos
xchg
or
je
jecxz
lods
mov
stos
push
or
mov
xlat
push
hlt
mov
sub
xor
hlt
xchg
push
add
dec
lods
cmc
mov
mov
push
movsl
insl
dec
push
lods
mov
scas
sbb
outsb
lock
dec
jns
pop
adc
dec
ja
mov
inc
mov
or
adc
jl
shll
adc
into
xor
push
mov
xchg
mov
icebp
mov
aas
repz
xlat
pop
lock
orb
fistl
lea
add
mov
enter
or
pop
inc
mov
adc
insl
lret
xor
in
mulb
aaa
aas
cltd
subl
imul
jbe
dec
jae
imul
jae
mov
stos
mov
mov
repz
ret
testb
push
iret
pop
lea
push
aas
shrl
or
mov
push
cs
int
push
addr16
in
jg
inc
xor
mov
jmp
aam
rolb
pop
fs
jge
fdivp
mov
mov
jg
jl
push
lret
sub
push
fwait
pushf
lcall
je
lods
insl
pusha
mov
add
leave
aaa
jecxz
fsubrl
dec
mov
mov
rorl
pop
rcr
mov
cmp
cld
xor
out
cmp
stos
xchg
dec
xlat
xor
mov
cmc
xor
ja
stc
dec
mov
sarl
loopne,pt
mov
adc
xorb
inc
mov
cld
loopne
lods
push
pop
and
cmp
inc
push
xchg
mov
add
push
scas
sahf
out
lds
jmp
mov
inc
scas
int
daa
gs
mul
loopne
and
mov
insl
addr16
cld
cltd
mov
std
or
nop
mov
orb
jb
int3
lahf
jo
inc
cmp
cld
ja
sub
movsb
js
mov
in
lahf
jl
pop
and
lods
xchg
cmp
and
inc
xor
or
cld
inc
jb
mov
sub
mov
or
cwtl
cltd
sub
xchg
movsb
lds
adc
xorl
test
cmp
hlt
xchg
and
lods
mov
cmpsl
sub
outsb
iret
enter
or
mov
add
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
jae
lods
xor
pop
add
pop
aam
cmpsb
cmp
adcl
imul
je
mov
adc
jge
cld
add
inc
add
xchg
mov
lcall
repnz
ret
daa
mov
lods
aam
sub
pop
sahf
scas
cmp
out
xchg
loope
jne
cltd
push
push
icebp
test
jecxz
sarl
js
lea
xor
loopne
mov
and
cmp
push
cltd
jno
push
sub
outsb
adc
fs
movsb
das
sub
leave
add
adc
dec
fldl
add
ret
xlat
and
inc
es
cwtl
inc
adc
loop
cld
insb
sub
push
pop
sub
stos
xchg
inc
shrb
inc
out
mov
jecxz,pn
and
sub
or
lods
pop
sbb
mov
das
mov
xchg
nop
mov
in
fidivl
jge
pop
add
mov
add
shll
sahf
scas
mov
inc
in
jp
insb
lahf
inc
jmp
sbb
jnp
and
out
mov
adc
lea
lds
dec
pop
xor
mov
jbe
mov
loop
xor
out
les
mov
inc
stos
nop
jnp
addr16
jp
jg
dec
jmp
mov
ljmp
int3
sub
xchg
push
push
sti
and
incl
mov
repz
pop
and
out
inc
add
sbb
pop
nop
mov
jle
push
repnz
and
aas
fbstp
xchg
ret
fistps
mov
mov
cmp
cmp
dec
mov
dec
push
inc
cs
inc
and
out
popa
icebp
mov
or
pop
fimuls
fadds
xor
fld
pop
push
call
push
jge
mov
add
test
push
add
rorb
sub
pusha
mov
add
mov
notl
xlat
ret
or
mov
push
enter
loopne
mov
mov
mov
sub
aad
mov
mov
adc
xorb
ja
mov
arpl
fistpll
add
add
xor
xor
outsb
pusha
pop
adc
lods
shlb
rol
icebp
and
inc
xor
repnz
shlb
movb
pop
mov
inc
pop
inc
jno
jnp
call
mov
out
pop
add
mov
cmc
outsb
adc
jae
test
xchg
xchg
std
cmpsb
ljmp
dec
aam
sub
into
push
dec
push
mov
pop
popf
mov
call
or
std
or
rorb
jae
jo
sub
sbb
loop
fdivs
pop
lds
lods
imul
xchg
push
fisubl
and
dec
inc
bound
and
cmpb
ror
ds
in
je
adc
cmp
in
loope
addl
mov
insb
sbb
mov
data16
and
hlt
int
pop
das
adc
in
fcomp
push
mov
test
aas
daa
hlt
push
mov
xchg
ud0
mov
or
sbb
xchg
test
jae
idivl
lahf
daa
inc
lods
pop
push
movsb
push
cltd
je
dec
icebp
cld
mov
jecxz
and
and
fcmovne
sub
shrl
sbb
and
mov
add
ret
pop
xor
out
idivl
ja
push
lds
fnsave
hlt
mov
mov
pop
flds
sub
push
out
bound
jae
xor
das
xor
jno
sub
push
push
loope
stos
mov
add
adc
push
mov
das
clc
fwait
mov
xchg
ret
jne
aaa
call
push
and
fucomp
inc
add
mov
mov
mov
xchg
aas
xchg
sbb
xchg
xlat
xchg
in
pop
push
xor
xor
sbb
mov
in
or
into
mov
fnsave
sbbl
js
lahf
outsl
clc
dec
add
out
mov
mov
adc
xor
aas
adc
icebp
xchg
scas
or
int
shlb
mov
mov
mov
mov
and
leave
lods
sub
addr16
scas
addb
add
and
repz
cmp
xor
in
les
call
pop
cmp
jg
testb
popf
dec
inc
lret
sbb
loope
adc
or
jmp
pop
mov
enter
mov
mov
js
leave
push
ljmp
pop
mov
out
cmp
shlb
cmp
sub
sbb
add
notl
jne
inc
mov
xabort
sbb
push
dec
fistps
not
dec
adc
xor
push
dec
mov
lds
rclb
inc
je
mov
mov
jmp
and
fisttps
inc
iret
dec
xchg
push
mov
cmpsb
sahf
inc
jae
or
dec
movsb
cmpsb
pusha
out
lds
pop
lock
xchg
push
xchg
rcll
jno
cmp
aaa
mov
dec
and
inc
js
inc
xor
sub
mov
cmp
xorb
jmp
cld
inc
sub
mov
addr16
pop
outsl
pop
jg
jns
pop
fdivr
sub
mov
outsl
cld
pop
stos
in
or
aas
pop
jb
out
dec
fmull
mov
sbb
shrl
jne
cmp
dec
mov
fsubs
ja
movl
call
xor
xchg
and
stos
int
sub
pushf
push
fbstp
jp
dec
mov
pop
mov
mov
or
roll
xchg
repnz
mov
xor
jb
inc
inc
loope
call
xor
icebp
and
std
cmp
add
pop
das
lods
sbb
iret
adcl
xor
adc
popf
or
sbb
bnd
sub
aas
into
cmp
bound
jnp
ljmp
mov
movsb
dec
xor
push
adc
cltd
movb
and
mov
in
es
dec
test
out
bound
loope
jns
pushf
jbe
out
or
out
pop
sub
mov
add
xchg
sbb
xchg
push
xor
jle
fisubrl
and
divb
push
or
mov
daa
fdivrs
add
xchg
mov
sbb
movsl
pop
sti
push
call
add
call
add
mov
ss
xlat
pop
les
push
out
lret
mov
adc
flds
and
pop
push
mov
jge
andl
sub
push
dec
mov
xor
or
xor
or
aam
aad
sbb
jne
jo
jmp
lahf
out
mov
push
dec
jmp
rcrb
mov
rcll
es
test
adc
gs
mov
and
icebp
lret
mov
push
adc
in
xor
sub
fs
mov
or
lods
aad
vpsubusw
ljmp
cltd
dec
and
cwtl
jne
pop
adc
mov
mov
lahf
or
mov
jo
add
enter
push
xor
ss
sub
sbb
push
sub
inc
push
jge
mov
aam
dec
pop
pop
int3
insl
test
int3
lcall
loopne
rclb
mov
test
push
dec
xor
hlt
sbb
xchg
mov
lret
pop
je
lods
and
jle
sbb
mov
cmp
adc
rorb
negl
xchg
rcrl
nop
and
test
lods
adc
cltd
mov
test
movsb
adc
sub
add
cmp
pusha
pop
stos
push
pop
mov
cld
mov
add
jmp
adc
pop
or
push
popa
cmc
fs
imul
xchg
fwait
and
sub
bsr
jp
sbb
xchg
xchg
subb
inc
ljmp
movsb
push
or
jg
jns
push
pop
push
cmp
divb
mov
jno
jnp
pop
xor
pop
push
stos
cwtl
cmp
mov
push
push
testl
and
int
adcl
xor
lods
icebp
push
les
lock
pop
test
outsl
cmpsl
and
dec
sbb
push
mov
inc
test
xchg
inc
mov
xor
push
dec
inc
movsb
popf
add
adc
out
lock
jb
jge
test
cmc
mov
sbb
imul
test
test
mov
mov
cmc
inc
repnz
repz
pop
mov
daa
ret
push
or
icebp
or
push
push
ss
push
sub
fsubrs
and
xor
outsb
out
mov
sub
xor
xchg
adc
mov
imul
adc
in
mov
ja
cs
dec
push
xchg
push
mov
jge
mov
mov
aam
mov
enter
jbe
orl
inc
sub
dec
push
clc
pop
ret
xchg
xorb
xchg
insb
dec
shrb
sbb
sbb
push
cmp
push
inc
mov
iret
dec
rolb
xchg
or
pop
inc
add
movsbl
stos
inc
dec
pushf
dec
pop
mov
es
cmp
popa
dec
mov
and
ds
push
loope
push
ljmp
lcall
mov
mov
sbb
ror
aas
imul
push
imul
adc
mov
movsl
int
imul
jbe
jne
xlat
mov
inc
in
or
dec
orl
cvtpi2ps
in
pop
imul
mov
pop
xchg
cmpsb
ja
pop
mov
xchg
sub
stc
fs
adc
addb
cmp
das
jg
or
outsb
jne
or
cwtl
loopne
xor
inc
xlat
sbb
repnz
pop
jo
xor
ret
repz
into
pop
fwait
mov
loope
xchg
or
sbb
sub
scas
in
cmp
scas
in
or
cs
pusha
xor
in
xchg
nop
fiaddl
out
call
jae
fisttps
pop
lret
jecxz
aas
sti
in
add
hlt
jge
sahf
xchg
in
test
sub
in
call
add
or
ja
lcall
adc
scas
fcompl
xor
mov
xchg
aas
mov
cmp
mov
out
jae
or
jecxz
adc
adc
ud0
std
fdivr
xchg
mov
fwait
adc
cld
mov
out
xchg
sar
cmp
stos
pop
std
inc
int
lahf
cmpsb
stc
adc
cwtl
cltd
or
lock
fstl
mov
shlb
mov
mov
lock
je
sub
loope
fdiv
call
cmp
sub
jg
push
sbbb
mov
xor
enter
fndisi(8087
pop
sbb
repz
in
sub
xchg
icebp
hlt
xor
popa
pop
jmp
xchg
and
mov
ss
stos
ret
or
sahf
push
xchg
cmp
lds
and
xchg
arpl
testl
cld
mov
cmp
sub
dec
push
xor
sub
ret
loope
mov
ds
lret
dec
pusha
push
out
addl
mov
pop
and
cmpsb
and
addr16
mov
xor
mov
loop
pop
jmp
repz
add
daa
or
mov
ds
and
mov
jl
and
mov
inc
push
repnz
ja
inc
jg
lret
loope
push
into
aaa
pop
mov
mov
mov
mov
mov
cmp
lods
fs
add
enter
cmp
and
sub
adc
jge
pop
mov
mov
inc
testb
cltd
and
pushf
repnz
lea
test
rcrl
repz
iret
inc
mov
std
adc
dec
stos
ja
push
jo
imul
mov
scas
cmpsb
mov
pop
cltd
push
inc
loop
sahf
sub
xchg
xchg
cmpsl
ret
lods
dec
into
idivl
or
inc
pop
sub
inc
loope
lods
inc
das
jno
mov
aaa
addr16
out
mov
pop
lods
shll
lock
push
sahf
sbb
adc
jnp
aaa
add
xor
out
mov
adc
loop
xlat
pop
test
adcb
in
cmpsl
push
lea
pop
lret
rol
in
fdiv
push
ja
aad
gs
andl
dec
loope
dec
repnz
xchg
jne
aas
shrb
cmp
or
add
ja
std
push
xor
fs
add
fs
mov
aam
push
mov
and
add
push
pop
add
push
adc
add
sbb
in
and
aas
ret
xchg
push
call
test
lret
xor
out
dec
data16
push
inc
fsubrs
jbe
lea
in
lret
pushf
call
jnp
inc
add
mov
jno
lret
movsb
pusha
dec
push
fwait
lea
je
mov
outsb
inc
enter
outsl
js
inc
inc
pop
mov
fildll
nop
inc
repnz
gs
xlat
and
adc
mov
mov
mov
adc
dec
rorl
jb
xor
sub
add
nop
inc
les
sub
add
rcr
pop
xchg
or
inc
roll
test
sahf
cmp
mov
mov
mov
out
jp
jmp
je
sub
inc
pop
test
sbb
pop
hlt
addr16
jmp
loopne
mov
adc
enter
push
jnp
or
aas
xchg
cmc
push
adc
dec
push
daa
ljmp
fwait
cli
push
sub
and
adc
dec
mov
daa
mov
mov
aad
xor
sub
enter
adc
push
fs
daa
fiaddl
inc
adc
and
sub
ja
pop
xchg
dec
je
dec
mov
and
inc
xchg
add
jp
jg
jne
js
jp
pop
sbb
stc
lods
nop
scas
outsb
and
mov
jnp
cmp
out
jae
aad
out
popa
jno
popf
mov
into
and
stos
cmovp
je
ss
jno
rcrl
jno
and
push
insb
shll
and
sbb
and
inc
mov
ljmp
addr16
decb
ja
pop
jmp
test
sbb
stos
xor
push
out
and
scas
lods
cmpxchg
and
xor
mov
scas
roll
and
outsb
cmpsb
add
movsb
push
outsl
xor
xor
mov
pop
mov
jne
pop
int
xor
cltd
adc
stos
xor
lods
lods
mov
xchg
mov
rclb
push
mov
pushf
in
jne
dec
sub
mov
and
mov
sub
iret
xchg
mov
test
call
add
insb
mov
in
rolb
aaa
xor
imul
push
push
sarb
xor
test
pop
int3
jge
pop
lret
imul
sti
push
sub
cmp
subl
and
bound
test
inc
lret
push
mov
add
push
test
xchg
adc
int
mov
call
mov
mov
pop
push
rclb
xor
loop
xchg
jl
jmp
aad
pop
lret
or
push
or
and
leave
mov
xchg
jge
jne
stos
scas
fildl
or
popl
test
hlt
out
pop
fisttpl
lcall
in
aad
pop
into
xlat
mov
dec
aas
lret
pop
sub
or
out
cmpsb
imul
mov
mov
cmc
or
xchg
fsubr
popf
push
push
pop
xor
cmp
scas
jmp
mov
push
push
add
sub
sbb
lods
inc
lret
and
aam
adc
fiadds
aad
dec
jg
mov
daa
lahf
mov
xchg
push
jns
mov
mov
pop
jmp
push
std
pop
rcrl
mov
ret
shrb
imul
loopne
roll
mov
mov
mov
jl
sbb
pop
insl
push
push
mov
callw
sub
sti
cmp
and
lock
cs
shlb
das
daa
push
mov
or
mov
rorl
in
push
ret
std
cmpsb
mov
out
sub
jne
ret
scas
mov
fucom
cmpsl
lret
cmc
cmp
xchg
mov
mov
fsubs
icebp
cld
sub
push
insl
and
loope
fwait
das
int3
xor
popf
cwtl
mov
push
iret
xchg
mov
pop
mov
sbbb
rcll
sbb
out
push
lods
adc
lret
cs
jnp
xlat
pop
sub
push
data16
hlt
push
xchg
and
dec
stos
roll
inc
cmp
inc
jecxz
lds
inc
sbb
and
push
xchg
adc
test
jp
test
sub
add
and
fdivr
xor
pop
clc
push
dec
in
xchg
in
ds
sbb
jno
adc
loopne,pn
and
xchg
xor
mov
jle
and
sarl
call
add
scas
stos
dec
mov
push
sti
das
fwait
rcll
push
out
stos
jmp
jbe
stc
pop
in
push
ja
cmp
data16
lock
cmpsb
inc
insb
and
mov
jno
clc
cmp
mov
cmp
scas
rclb
mov
jb
and
sbb
jns
aad
jmp
sub
dec
jbe
stos
ret
mov
jmp
adc
mov
bnd
fwait
inc
dec
clc
inc
inc
icebp
add
mov
in
aam
out
or
sahf
cmp
add
sbb
stos
sahf
cltd
mov
insb
addr16
jne
addr16
shll
dec
imul
filds
xchg
out
adcb
mov
es
xor
outsb
cmp
dec
add
fdivl
lds
xor
sub
jnp
cmpsb
xor
mov
cwtl
fstl
fwait
icebp
cmc
sub
scas
dec
lock
xor
cmp
mov
jmp
jnp
sbb
jl
push
test
test
jo
fmuls
scas
iret
in
adc
int
xchg
mov
ss
push
pop
jns
je
lea
xchg
xchg
fiadds
mov
stc
test
lcall
mov
dec
cmp
adc
pop
test
scas
hlt
movsb
mov
mov
fwait
cmp
push
sbb
dec
ljmp
or
mov
jnp
or
dec
add
popa
bound
inc
out
dec
jle
inc
fisubs
jecxz
call
xchg
jns
loopne
frstor
mov
loop
dec
pop
push
fwait
sbb
adc
sbb
xchg
pop
inc
mov
mov
gs
push
adc
movsl
call
cmp
dec
jge
add
ss
or
pop
in
testl
pop
mov
testb
push
pop
add
or
jecxz
xchg
jb
jmp
mov
xor
sub
and
cld
jecxz
sub
pop
push
int3
push
add
dec
add
pop
mov
inc
mov
rorl
push
mov
lods
lahf
sbb
inc
divb
jns
out
jmp
or
adc
mov
stos
in
negl
add
inc
test
sahf
cmp
mov
ret
fisttpll
rcrl
xor
int
mov
out
adc
mov
xor
das
in
pop
push
lods
in
xor
add
jle
imul
ret
and
inc
pop
mov
push
pusha
call
das
jge
cs
xlat
out
dec
xchg
push
repz
adc
arpl
mov
xor
hlt
push
mov
scas
fstpl
xchg
mov
xchg
ret
jl
fwait
sub
push
push
lds
imul
sub
pop
mov
nop
jb
enter
mov
out
mov
ret
xor
jecxz
cmp
loop
adc
cmp
cmpsl
xchg
add
mov
push
sub
mov
jecxz
loop
inc
aam
jbe
pop
out
enter
cltd
jge
and
and
xor
nop
mov
adc
notl
sbb
shrb
out
test
push
push
test
push
jno
les
mov
mov
sahf
inc
imul
imul
jo
jp
sahf
stos
aam
fdivs
xor
xor
ret
jge
lds
sahf
push
sahf
add
xchg
mov
arpl
push
xor
jb
push
and
ficoms
add
lcall
gs
movsl
and
sub
aaa
pop
push
out
push
lret
clc
lahf
imull
pop
pop
es
mov
les
test
mov
pop
mov
inc
cld
add
movsl
mov
lret
adc
push
dec
pop
popa
leave
push
repz
sahf
cltd
cmpsb
ret
lods
movsb
lds
pushf
shl
add
jo
les
dec
mov
cs
jb
stos
push
lcall
aaa
lret
jge
fldenv
lcall
nop
or
xor
loop
shrb
and
fwait
push
icebp
xor
and
inc
scas
jae
sub
clc
xor
aaa
int
push
mov
xorb
push
mov
ss
stc
or
xlat
test
sar
daa
cmp
ds
in
push
mov
sbb
cmp
cmc
dec
xlat
jb
aaa
sbb
mov
or
das
loop
sub
rcll
or
ds
push
ficompl
sub
test
pop
adc
outsl
les
mov
cltd
add
lret
out
fistpl
popf
xchg
test
cmp
cmpsl
sub
lock
cmp
insl
mov
cwtl
xchg
cmp
jle
sbb
xchg
mov
pop
das
dec
mov
cld
or
ss
mov
inc
shrl
dec
cs
add
mov
mov
sbb
movsb
cmpsl
fisubs
push
hlt
push
outsl
sub
cmp
pop
jns
mov
jns
jb
xchg
sub
rcll
mov
arpl
add
xor
adc
ds
mov
add
addr16
inc
mov
lret
dec
popl
ret
testl
push
sbb
pop
cli
sbb
cmp
loopne
imul
jnp
scas
mov
jne
das
loop
and
lcall
sbb
icebp
adc
scas
leave
and
gs
and
dec
dec
je
mov
int
outsb
aaa
jmp
or
iret
push
xor
jg
test
and
add
fdivl
ljmp
outsb
push
jmp
leave
ljmp
sarl
nop
ds
pop
xchg
ficomps
es
push
mov
dec
fdiv
repnz
rcrl
sub
repnz
mov
subl
mov
push
jo
jg
pop
cmp
sub
and
sbb
lahf
loop
xor
mov
xchg
in
mov
jmp
jecxz
mov
flds
ret
pushf
xchg
add
fcomps
or
cltd
dec
inc
pop
inc
add
jmp
inc
xchg
pop
divl
or
test
shrl
dec
inc
inc
jecxz
push
sti
pop
popa
and
mov
sti
lods
or
push
cmp
pushl
out
cmpsl
or
jb
xchg
mov
jbe
outsl
mov
sbb
repz
inc
xchg
jnp
pop
lret
adc
enter
jns
lds
fwait
and
shrl
sti
sahf
sbb
repnz
mov
scas
xchg
mov
rcll
pop
mov
sahf
out
pop
or
in
cmpps
mov
adc
icebp
rorb
arpl
sbb
out
pop
xor
ljmp
int
movss
and
dec
cmp
pop
out
mov
xlat
aad
pop
add
lock
adc
aas
mov
int3
sarl
ljmp
jns
dec
es
test
daa
cmp
iret
mov
enter
scas
cltd
cmp
xor
mov
fidivs
icebp
jbe
fdivs
pushf
sub
xchg
sahf
add
std
jns
xchg
mov
and
aad
loop
lret
movb
in
loope
orl
dec
adc
movsl
subl
push
push
icebp
xchg
imul
cmpsl
push
cmp
movsl
andl
movl
lds
dec
mov
hlt
rcrl
mov
jle
adc
dec
inc
mov
imul
popf
xchg
pop
add
mov
push
mov
movsl
or
fbld
xor
mov
mov
inc
pop
cmc
icebp
sbb
push
icebp
cmp
bound
jmp
inc
or
xchg
cltd
rcrb
dec
or
hlt
cmp
jl
mov
int
stos
mov
sbb
popa
push
mov
and
in
es
push
jae
pop
mov
jp
dec
dec
ret
bound
push
stos
jae
cmp
pushf
mov
imul
cmpsb
inc
subl
lods
and
adc
out
adc
add
add
adc
jnp
int
ficoms
mov
add
pop
add
sub
cli
adc
dec
les
cmp
push
xor
popf
xchg
xchg
sbb
out
xchg
mov
mov
mov
repnz
cltd
rcrb
xchg
push
inc
inc
loopne
jg
inc
cltd
jg
hlt
mov
push
in
scas
test
lret
les
divb
insb
sub
imul
lcall
shl
cmp
int
xchg
imul
dec
rorb
jmp
addr16
insb
pop
int
jl
stos
push
inc
adc
adc
inc
fcmovne
addr16
scas
testb
mov
lods
fimull
xchg
cmp
je
cmp
mov
popf
test
mov
and
repz
or
jmp
aam
and
hlt
fstps
jb
dec
outsb
into
aaa
test
clc
leave
insl
and
pop
call
fiadds
bound
test
pop
aaa
xchg
add
xchg
ja
test
jge
imul
popf
adc
pop
xchg
call
rolb
and
cmpb
or
adcb
push
insb
mov
pop
movsb
test
xchg
lods
inc
xchg
gs
mov
push
ret
xor
aaa
int3
inc
sbb
das
cmp
dec
cld
test
addl
shrl
jecxz
inc
inc
lods
mov
scas
add
int
mov
fcoml
mov
xchg
mov
cmp
fstpl
stos
repnz
pop
add
push
mov
clc
pop
cmp
or
jp
fisttpl
and
fadd
mov
in
out
sbb
and
pushf
push
or
and
push
neg
outsb
mov
inc
shrl
cld
aad
inc
mov
hlt
cmc
dec
push
in
stc
rcll
sbb
and
mov
mov
push
iret
addr16
std
or
fbld
or
push
insb
imull
push
je
loope,pn
sbbl
sbb
cmp
mov
push
les
test
mov
lret
sub
rcrb
int
sub
pop
fnstenv
xor
call
or
add
jmp
xor
rolb
mov
fstpl
jp
push
adcl
cld
xchg
scas
mov
pop
jae
fildll
pusha
loope
je
lcall
push
sub
cmp
fdivp
add
mov
mov
test
stos
lahf
inc
aas
sub
sbb
rclb
push
adc
into
xchg
mov
add
aad
rolb
xor
arpl
arpl
mov
xor
ss
sub
test
fs
shlb
jmp
bound
js
mov
imul
out
pop
cmp
js
xorl
push
jb
lock
shrl
lods
dec
orb
cmpsb
ficompl
cmp
mov
shrb
xor
loope
out
and
neg
pop
sbb
fs
dec
mov
mov
loope
adc
imul
ljmp
shll
mov
std
cmp
mov
mov
imul
cmpsb
pushf
popl
movsb
nop
dec
shll
mov
gs
sub
ja
movsb
jmp
mov
cmc
jecxz
push
out
adc
or
push
gs
mov
sbb
fs
lds
jmp
lret
xlat
mov
and
faddl
popf
pop
cwtl
jns
out
or
and
ds
movsl
xor
sarl
adc
mov
dec
pusha
cmp
cmp
rcrb
mov
pop
jns
lcall
xor
cmp
out
lahf
stos
xchg
inc
lret
aas
fucomi
pop
aas
insl
test
js
xchg
xchg
mov
popa
xchg
xor
sarb
rcr
mov
mov
gs
push
fnstcw
inc
cli
jmp
and
nop
push
repz
rorl
add
push
bound
push
dec
dec
dec
pop
iret
repz
sub
outsb
mov
xchg
mov
mov
jle
push
xlat
cltd
icebp
lock
dec
les
mov
and
dec
ss
sbb
in
xor
xchg
sbb
call
jbe
mov
dec
mov
shr
and
sub
pushf
ljmp
push
out
fsubl
sbb
jno
roll
ss
mov
xchg
mov
inc
and
xlat
cli
mov
add
pushf
pop
mov
sahf
scas
fwait
adc
fidivl
sbb
or
repnz
rorb
and
cmp
pop
inc
inc
push
aas
repnz
adc
xchg
mov
insl
or
rorl
lcall
mov
js
and
je
xchg
jp
call
cltd
out
jge
ds
xor
xchg
sbb
jmp
cmpb
pusha
je
jp
sahf
add
cmpsl
arpl
inc
pop
rcr
push
dec
adc
dec
mov
mov
mov
sub
or
push
cmp
cmpsl
dec
ja
adc
cmp
insb
cmp
js
sub
cmp
xchg
addl
ret
and
sub
push
lods
data16
stos
pop
movsb
adc
push
and
sbb
push
pop
scas
add
imulb
and
popl
jg
mov
in
xchg
pop
arpl
lds
and
jae
xchg
cmc
xchg
pop
fcmovnu
and
lret
xchg
hlt
mov
popf
lret
xchg
xorl
mov
xchg
in
enter
ds
mov
mov
cmp
in
leave
out
add
inc
jb
clc
clc
add
movsl
push
push
pop
cmp
loope
cmp
pushf
jge
sahf
fsubs
inc
xchg
mov
test
jns
ds
fbstp
lds
in
sub
mov
inc
dec
aas
and
adc
cmpsl
inc
add
mov
ficompl
adc
cmovns
out
out
test
push
push
jno
cmp
pop
fdivl
dec
and
and
pop
sbb
mov
pusha
mov
xchg
rolb
scas
inc
icebp
xor
mov
dec
test
push
pop
pop
cs
sbb
mov
dec
and
xchg
out
shrl
je
push
imul
push
rolb
add
lahf
pop
jl
lcall
xlat
aam
mov
mov
lret
cmp
add
outsl
movsb
daa
jbe
idivl
mov
inc
fbld
add
add
pop
add
repnz
mov
cmpsl
loope
or
in
das
sub
sbb
pop
pushf
push
pop
scas
xchg
cld
into
cwtl
addl
or
pop
pushf
add
adc
gs
and
jle
mov
ss
dec
fldcw
mov
frstor
pop
jmp
pop
xchg
and
sbb
inc
lcall
idivb
jmp
mov
shll
loop
adc
mov
outsl
add
movsb
jbe
scas
rcrl
sbb
cmp
insb
mov
nop
dec
es
leave
push
pushf
sub
repz
sub
mov
push
cs
cmp
xor
aas
mov
xchg
jg
jp
shlb
cmc
xchg
jecxz
rol
add
fnsave
insb
dec
jo
jg
inc
les
scas
mov
clc
push
fcmovnu
cmp
es
ror
mov
inc
mov
and
sbb
scas
repz
cltd
jg
or
adc
gs
jge
js
popa
xchg
adc
or
and
sbb
sbb
xor
pushf
imul
movsl
outsb
scas
sbb
jmp
and
mov
push
adc
pop
leave
loop
loope,pt
decb
mov
or
addr16
dec
sti
cmp
cmp
pop
out
repz
pop
insl
push
cmp
out
inc
jne
lea
mov
sub
mov
xchg
shll
inc
mov
adc
push
sub
arpl
push
shll
orl
dec
mov
sub
push
test
xchg
lock
mov
fldcw
xor
sbb
inc
sub
and
subb
popa
fst
sub
adc
push
jmp
outsb
imul
and
fdivl
negb
adc
cmp
insl
mov
xor
sub
adc
subps
push
iret
sti
in
pop
lods
test
into
movsl
mov
dec
loopne
pop
fiaddl
in
or
popf
stc
shrb
mov
mov
dec
jmp
dec
sub
jg
push
jl
fdivrs
xor
testl
fwait
adc
movl
lret
adc
xchg
enter
jl
lock
inc
jecxz
outsl
inc
xchg
xchg
mov
push
test
clc
popa
imul
and
aam
mov
stc
push
das
and
inc
lret
ds
xchg
or
pop
add
push
popf
xchg
inc
dec
or
in
xchg
adc
xchg
divb
fmuls
insl
daa
insb
inc
addr16
cmp
add
leave
hlt
loop
test
shrl
lods
push
out
das
adc
mov
dec
jae
sub
das
cli
enter
insl
ja
and
mov
stos
out
push
mov
gs
pop
into
stc
imul
mov
es
xor
mov
cmc
mov
out
movsl
mov
leave
movsl
push
in
inc
sub
pusha
jecxz
mov
pusha
adc
mov
xor
out
mov
pop
cwtl
repz
shrl
dec
iret
mov
pop
xor
movsl
cld
icebp
in
enter
sub
ret
mov
mov
cmp
sbb
mov
mov
sti
sahf
pop
xchg
fwait
ja
dec
idivl
mov
xchg
loop
cmp
pop
push
mov
lcall
add
xor
ret
inc
fcmovbe
test
imul
jns
and
stos
lea
lret
lea
ret
iret
decb
pop
fmull
lea
cmc
mov
popf
xorl
pushf
push
dec
scas
xlat
adc
pop
ds
sbb
addr16
jbe
xchg
loopne
adc
fs
inc
mov
mov
div
enter
mov
mov
fwait
pusha
popa
insl
mov
jbe
out
inc
mov
and
icebp
ret
jecxz
aam
repz
dec
seto
sub
cmpsl
sbb
fisubrl
dec
pusha
or
adc
xor
dec
loop
fwait
mov
jnp
xlat
add
outsb
ds
out
pushf
repz
inc
sub
mov
mov
pop
xchg
imul
xor
leave
add
repnz
inc
cmpsl
jnp
insl
outsl
inc
js
movsb
mov
pop
adc
aad
ret
mov
or
mov
es
xor
ja
mov
stc
jmp
adc
and
push
ficoml
bound
ss
push
rorb
scas
fistpl
cld
pop
pushf
sub
cmc
lds
xchg
or
xchg
imul
sbb
jle
out
dec
and
sub
mov
mov
mov
xor
mov
xchg
out
rcl
pop
subb
sbbl
mov
outsb
sbb
and
add
pop
mov
sbb
add
test
ror
scas
scas
lahf
and
mov
cwtl
add
dec
lea
pusha
mov
xor
or
pop
imul
inc
es
push
xchg
mov
lret
cmpsb
jmp
push
shl
bound
adc
mov
add
lods
mov
das
rolb
pop
jge
imul
arpl
cwtl
rcl
mov
mov
imul
sub
mov
adc
adc
insb
out
mov
lret
pushf
sbb
or
mov
cmp
xor
or
pushf
sub
loope
shrd
jae
push
in
insl
repnz
loopne
movsb
pop
sub
cmp
mov
mov
pop
fwait
pop
inc
jns
mov
mov
cltd
adc
out
mov
push
subl
rorl
fadd
xchg
out
sbb
test
fcmovnu
hlt
imul
imul
std
inc
cmp
incl
cmp
daa
fs
push
jecxz
mov
inc
and
jp
push
xchg
mov
mov
int3
add
aad
imul
and
or
jmp
push
lret
lret
arpl
ret
lea
test
ss
test
flds
jbe
movsb
sbb
test
xchg
xchg
gs
pop
outsb
aam
xor
and
test
lret
stos
pop
rorl
movsl
icebp
push
bound
loope
or
dec
or
xor
and
inc
jno
push
cmpsl
mov
add
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
push
add
add
pop
add
cs
add
test
add
rolb
add
add
add
xor
add
pusha
or
adcb
cmpb
subb
adc
add
call
add
sbbb
add
dec
or
addb
add
sbb
add
cmp
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
bound
add
jp
add
mov
add
andl
enter
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
repnz
add
fstpl
add
adc
add
sub
add
add
add
add
add
add
add
push
or
addb
addb
add
add
add
add
add
add
add
dec
or
sbbb
subb
jo
add
mov
add
add
add
add
add
add
add
jg
add
mov
add
add
add
add
add
add
add
nop
or
cmpb
add
mov
add
xor
add
add
orb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
shrb
add
add
add
add
add
add
add
add
xor
add
mov
add
andb
add
test
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
xchg
or
sbb
add
lock
addb
add
add
add
add
add
add
add
int3
or
orb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
ret
add
or
add
add
add
add
add
sbb
add
or
add
add
add
add
add
and
add
in
add
add
add
loopne
add
push
or
add
add
add
add
add
aaa
add
push
or
add
add
add
add
add
inc
add
add
add
in
add
add
add
testb
push
or
add
add
add
add
add
add
adc
add
in
add
add
add
push
pop
add
push
or
add
add
add
add
add
add
in
add
add
add
xor
add
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
or
add
in
add
add
add
push
mov
add
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
in
add
add
add
bound
add
add
add
add
add
add
in
add
add
add
lcall
add
add
add
add
add
add
in
add
add
add
stos
mov
add
in
add
add
add
mov
add
push
or
add
add
add
add
add
roll
add
or
add
add
add
add
add
fiaddl
add
or
add
add
add
add
add
jecxz
add
or
add
add
add
add
add
in
add
push
or
add
add
add
add
add
cmc
add
or
add
in
add
add
add
lock
add
or
add
add
add
add
add
pop
add
adc
add
in
add
add
add
add
add
push
or
add
add
add
add
add
add
pop
add
add
inc
add
inc
add
aaa
add
xor
or
push
add
xor
pop
add
push
add
add
add
add
add
pop
add
add
add
cmp
cmp
push
add
add
or
inc
add
add
xor
add
add
add
add
xor
xor
add
add
add
cmp
inc
add
add
push
add
pop
add
xor
dec
add
cmp
or
push
add
inc
add
xor
add
add
xor
dec
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
add
inc
add
add
push
add
dec
add
pop
add
add
inc
add
or
push
add
add
add
add
push
add
add
or
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
push
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
dec
add
push
add
dec
add
add
pop
add
inc
add
add
add
xor
xor
add
add
add
add
add
add
add
inc
add
add
dec
add
or
dec
add
dec
add
dec
add
xor
pop
add
add
dec
add
add
cmp
xor
pop
add
add
add
add
dec
add
push
add
xor
inc
add
push
add
add
pop
add
xor
inc
add
add
pop
add
pop
add
add
push
add
cmp
xor
add
pop
add
push
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
dec
add
add
push
add
pop
add
inc
add
add
add
push
add
inc
add
dec
add
inc
add
xor
push
add
push
add
pop
add
inc
add
dec
add
pop
add
push
add
dec
add
add
push
add
add
add
add
add
add
push
add
inc
add
cmp
pop
add
pop
add
add
inc
add
pop
add
aaa
add
pop
add
push
add
push
add
add
xor
xor
pop
add
add
add
cmp
push
add
xor
xor
dec
add
cmp
pop
add
add
cmp
add
add
pop
addl
shl
cltd
addr16
xor
add
pop
add
mov
flds
push
add
pop
mov
test
inc
ja
mov
ret
jle
out
mov
jmp
cmp
aas
xor
cmp
stc
call
adc
pop
sbb
jae
sub
fbstp
mov
mov
out
pop
test
insl
jmp
ret
mov
push
sbb
cmpsb
fisubl
inc
adc
xchg
push
adc
xor
or
out
mov
cmp
aad
push
mov
mov
cmp
inc
clc
adc
in
push
push
ret
lahf
xlat
dec
mov
flds
push
rcr
aaa
into
sbb
mov
js
cld
jno
mov
sub
test
loope
mov
pusha
testb
daa
cs
adc
jle
pop
and
pop
mov
xchg
fidivrs
fdivl
out
mulb
xchg
sbb
mov
daa
mov
ljmp
or
pop
push
popa
idivw
jp
sub
imul
xchg
les
mov
adc
xor
nop
mov
adc
xor
mov
outsl
dec
adc
repz
das
mov
decb
into
xchg
dec
in
inc
adc
ljmp
in
scas
insl
pop
cwtl
push
test
push
jp
push
call
rcll
inc
add
test
push
ror
jnp
xorl
push
fwait
rorb
jbe
push
lock
lods
sahf
sbbb
mov
and
mov
xor
and
xlat
hlt
mov
cwtl
jns
mov
push
fmul
or
in
add
rorl
arpl
mov
das
jg
and
je
pushf
into
push
xchg
xor
xor
lods
jmp
or
sbb
add
stos
sbb
repz
lods
scas
jnp
in
pushf
cltd
loope
sbb
lahf
jae
dec
xorb
out
popf
or
mov
imul
cmp
repnz
insb
xchg
and
andb
icebp
fiaddl
pop
sbbl
sahf
out
js
mov
mov
clc
lock
roll
iret
push
cmp
enter
inc
sbb
aad
les
or
idivl
sbb
xchg
std
mov
sbb
pop
aas
xor
repnz
ljmp
xchg
mov
sub
insl
mov
aam
lea
xor
fisttps
cltd
adc
dec
and
mov
pop
xchg
adc
mov
push
inc
popf
dec
std
push
pop
fcmovne
hlt
inc
out
mov
stos
sahf
test
jp
jmp
push
sub
movsb
xchg
cmp
mov
inc
xlat
orl
pop
aaa
sar
int3
in
jg
pop
out
cmp
sbb
xchg
ret
cmc
or
sahf
xchg
imul
fstpt
or
scas
cltd
aaa
jl
pop
mulb
in
in
or
dec
sbb
cmc
cmp
jmp
das
mov
dec
add
cmp
xor
int3
lods
mov
inc
adc
inc
cmp
cmp
sbb
and
mov
inc
mov
sbb
nop
dec
push
push
das
or
mov
jo
lock
sahf
xor
jle
test
sbb
sahf
inc
xlat
imul
ret
push
or
push
cmp
xchg
or
jecxz
addr16
ljmp
mov
cs
lods
sbb
movb
dec
scas
negl
mov
mov
pushl
lods
scas
outsl
js
push
inc
inc
jnp
xchg
cmp
jl
jl
inc
cli
mov
inc
adc
lret
push
std
and
sahf
mov
pop
dec
fmuls
ret
pop
fdivrs
inc
mov
jmp
jle
add
or
push
in
in
xchg
dec
stos
lock
imul
cmpsb
cld
xor
add
jecxz
sub
sub
into
addr16
jmp
rcrb
and
mov
repnz
loope
mov
les
push
cmp
sbb
nop
cmp
mov
in
in
and
cld
xchg
pop
inc
gs
push
push
jo
xor
fsubp
dec
shlb
cld
enter
ja
cmp
jae
imul
imul
mov
les
dec
cmp
or
scas
mov
icebp
ja
xchg
inc
xchg
pop
mov
push
pop
adc
pop
arpl
arpl
jmp
sti
inc
xchg
push
sub
incb
sbb
or
mov
ds
popa
jle
mov
and
mov
mov
lods
push
enter
shlb
mov
adc
cmovbe
and
loope
shll
scas
mov
scas
ljmp
dec
test
test
push
dec
out
daa
dec
fwait
pop
fiadds
mov
cmpsl
pop
xlat
mov
mov
iret
cld
rorb
xorl
fcomps
dec
jae
or
outsb
std
orb
push
out
or
push
inc
gs
pop
adc
in
imul
pop
test
inc
cli
and
xchg
ret
movsl
add
inc
aas
stos
inc
mov
sub
sbb
inc
rorl
mov
out
cmp
fs
jbe
es
mov
mov
ficompl
push
pop
add
adc
xor
dec
dec
jo
js
sub
dec
xchg
sub
inc
loop
add
xchg
inc
fsubl
insl
out
mov
inc
sbb
and
outsb
push
imul
cmp
ret
push
dec
sbb
sbb
jae
in
dec
adc
jns
stos
rorl
pushf
out
je
sub
jle
pop
int3
mov
or
dec
jno
and
std
loop
mov
xor
mov
pop
daa
in
mov
jmp
and
inc
cmp
xor
stc
cmpsl
cmp
loope
hlt
int3
push
push
xchg
pop
sbb
lcall
popa
imul
sbb
fsubp
mov
inc
je
arpl
adc
andb
jecxz
out
jo
leavew
xchg
or
xchg
repnz
jl
and
xor
out
daa
mov
inc
jbe
inc
add
outsl
in
and
mov
xchg
mov
and
out
mov
les
in
flds
push
pop
add
xchg
ja
aad
lcall
in
cmp
gs
imull
add
xor
xlat
jg
sub
xchg
orb
out
aad
dec
push
jg
xchg
lds
popf
push
inc
cmp
sub
fnstsw
test
sub
mov
clc
fsub
arpl
scas
sub
cmp
add
or
lds
jnp
in
iret
or
lret
icebp
and
sub
push
clc
lods
call
bnd
add
sbb
xchg
dec
add
inc
dec
xor
flds
hlt
dec
int
mov
pushf
add
call
pop
insl
jge
xor
mov
nop
in
xchg
xchg
jp
pop
sbb
decb
mov
dec
ljmp
push
pop
outsb
jmp
xor
popf
loope
nop
sbb
dec
ret
mov
test
testb
in
cmp
xor
mov
jg
pop
jb
pop
xor
xor
je
mov
push
in
and
and
cwtl
pop
mov
shr
in
leave
cmpsl
arpl
jge
mov
sub
lret
scas
and
xchg
test
jb
dec
int
xchg
lods
punpcklbw
mov
xchg
daa
mov
cmpsl
mov
xchg
dec
fsub
popa
lock
sarl
addb
es
push
or
dec
es
test
and
shll
cmpsb
ss
xchg
pop
xlat
leave
or
in
es
stos
out
xor
adcl
movsl
pop
repz
xchg
mov
ljmp
mov
mov
pusha
jmp
mov
adc
or
mov
push
icebp
in
mov
mov
adc
subb
mov
and
push
mov
in
orb
xchg
inc
imulb
jbe
ja
pusha
pop
in
test
mov
addr16
dec
cmp
insl
outsl
cli
mov
mov
cmpsl
sub
cld
sahf
enter
adc
mov
mov
jmp
movsl
lret
xor
sbb
jmp
mov
aaa
mov
mov
les
jecxz
lcall
test
push
or
jl
shrb
xlat
ljmp
pop
inc
xchg
sbb
jne
push
xchg
cmp
mov
cmp
cmpsb
pop
insb
sbb
sbb
and
movsl
enter
xchg
jecxz
mov
push
aad
mov
adc
outsb
sbb
pushf
test
ss
aaa
and
mov
fwait
loope
aam
and
in
mov
pop
notb
jge
das
in
add
mov
mov
shll
lcall
aad
loop
xchg
enter
add
or
js
fsubp
fs
mov
jle
stc
mov
loopne
cmp
test
xor
xchg
and
push
mov
xchg
in
jl
xchg
xor
loop
adc
push
leave
and
lahf
cmpsb
mov
adc
aas
shl
inc
shl
out
sbb
dec
enter
jge
cld
dec
inc
imulb
pusha
xchg
jne
mov
imul
movsl
dec
dec
hlt
mov
jg
or
stos
pop
ja
movsb
test
push
pop
mov
jne
xchg
pop
stos
and
fnclex
mov
ss
mov
adc
inc
xchg
aad
mov
cmpsl
ds
pop
jg
cmp
cltd
xor
adc
lahf
out
das
sbb
mov
fwait
lret
dec
xchg
mov
xchg
dec
lea
scas
mov
out
shll
mov
ds
xlat
jns
popf
push
fdivrl
aad
nop
mov
daa
sub
repnz
mov
je
fildl
out
add
fisubrs
insl
fcmovne
fiadds
filds
jg
push
push
lds
sub
push
gs
xor
test
dec
dec
push
cmp
adc
insb
jne
adc
les
mov
out
push
int3
out
push
sub
mov
pushf
sbb
mov
jecxz
dec
ja
push
jns
loope
cltd
cmpsb
sub
hlt
push
xor
out
hlt
js
adc
jae
not
sub
xchg
test
dec
mov
addr16
xchg
ret
sbb
add
movsb
push
pop
push
push
movsb
arpl
sarl
push
and
adc
adc
dec
es
data16
push
jae
and
fwait
dec
cmp
jne
xor
cmp
xchg
test
sahf
js
xchg
or
inc
cmp
inc
xor
mov
addl
jnp
in
dec
addl
and
push
or
pop
mov
or
push
jp
pop
cmp
add
xchg
xor
mov
insl
xchg
repnz
scas
sbb
sbb
loope
repz
xchg
sub
enter
add
add
dec
movsb
jmp
inc
and
adc
dec
xchg
shrb
sub
xchg
jbe
cli
jge
mov
inc
xor
mov
sbb
mov
cmp
lahf
icebp
sti
ret
ljmp
xlat
mov
or
stos
mov
in
add
jae
or
aad
daa
rolb
loope
clc
mov
xchg
sbb
xlat
mov
mov
loop
and
push
inc
mov
xchg
push
cltd
jl
scas
sub
fdiv
nop
aas
into
sbb
push
mov
fmull
inc
mov
decb
aam
sub
sub
int3
xchg
jle
rorl
clc
mov
pop
dec
mov
test
add
push
aas
por
scas
adcl
adc
in
out
mov
clc
js
das
xor
or
repnz
pop
sub
dec
push
jno
sti
cmpb
push
orl
test
add
jmp
jo
insl
jg
sahf
or
sahf
andb
fs
idiv
into
in
dec
inc
push
js
jl
cmp
xchg
jmp
inc
lret
xlat
push
mov
sub
inc
iret
sbb
or
xor
dec
jbe
inc
daa
push
aam
test
sbb
sbb
jns
mov
pcmpgtd
enter
ret
pop
jp
dec
push
or
mov
xor
call
pop
or
adc
pop
lret
daa
xchg
dec
mov
fsts
es
xchg
mov
sbb
add
add
insl
les
mov
jae
ret
mov
pop
add
call
dec
ljmp
mov
push
lcall
pusha
mov
shlb
rcrl
fs
dec
addr16
movsb
lcall
clc
ds
inc
cmc
mov
aam
ljmp
pop
insl
out
popf
mov
lods
jae
mov
orl
rcrl
mov
fadds
dec
lock
test
sbb
cmp
add
push
enter
loop
rclb
inc
push
aam
test
xchg
rorb
pop
insl
xor
mov
mov
pop
insl
cwtl
cmp
push
mov
clc
outsl
push
mov
push
mov
jnp
pop
gs
jl
rcll
cmp
cli
jns
repz
aam
imul
cltd
add
loope
jo
adc
pop
fbld
jg
mov
cmp
push
adc
add
adc
pop
pusha
imul
adc
pushf
cmp
inc
pusha
lods
mov
mov
lds
mov
movsl
insl
es
push
mov
nop
rcrl
enter
and
into
cmp
shl
jo
cmp
or
or
push
les
pusha
adc
jns
vpshad
inc
test
xlat
pop
ljmp
xchg
out
xor
jmp
dec
or
in
mov
add
clc
or
mov
ret
and
in
mov
jle
inc
cmp
dec
cmp
adc
cmp
lods
stos
pop
sarb
mov
outsb
xchg
or
push
add
pop
sub
mov
pop
aaa
add
fdivs
sarl
xor
jmp
lds
add
bound
dec
gs
test
je
cmp
sub
insb
push
inc
idivb
leave
repnz
stos
inc
cmc
jmp
mov
repz
pop
dec
add
les
pop
xchg
dec
xchg
lods
divl
xchg
push
shlb
repnz
sahf
test
stos
nop
or
stos
inc
add
cwtl
cmp
pop
sub
mov
or
dec
xchg
lahf
inc
push
mov
rorw
loope
rcrb
lahf
jp
mov
xor
mov
pop
jb
pop
sarl
jbe
ss
push
cmpsl
add
mov
jle
jmp
ret
push
lret
js
ja
fstp
lods
sbb
pop
lret
icebp
mov
mov
clc
sbb
adcb
mov
and
les
mov
test
sub
and
hlt
lods
sarb
dec
jnp
dec
aad
push
inc
adc
int
fsubl
leave
dec
pop
mov
pop
cmp
addb
cmp
or
mov
fstps
pop
pop
jge
ror
iret
fs
add
jns
shrb
xchg
and
stc
jg
push
xor
clc
mov
and
xchg
ja
inc
lcall
pop
push
jg
jae
ret
inc
into
add
mov
or
adc
xor
adc
bound
loop
push
daa
mov
stos
test
or
sub
push
fs
mov
out
push
negl
sbb
jmp
fcoms
aaa
test
popf
push
adc
jno
inc
push
inc
loope
sbb
shlb
mov
inc
fs
call
xor
fstl
push
xchg
dec
sbb
jbe
insl
add
out
in
xchg
lea
pop
in
mov
into
arpl
pop
mov
adc
sub
gs
mov
inc
pop
jnp
add
adc
xchg
inc
xchg
cld
ljmp
mov
aas
ds
sub
in
push
jmp
xchg
dec
imulb
sbb
fdivr
push
push
repnz
push
push
and
in
adc
cmp
fdivl
in
lock
sub
adc
pusha
mov
aas
pop
jl
and
and
loope
jg
add
icebp
pop
aas
aam
fwait
adcl
mov
sbb
test
or
sbb
bound
mov
jbe
xchg
imul
testb
jns
popf
dec
mov
cld
mov
lahf
imul
sub
push
rol
mov
adc
add
adc
mov
or
push
jp
adc
xor
rclb
add
inc
das
das
popf
sub
js
sbb
cmpsb
subl
vaddss
dec
cli
stc
cld
cmp
lcall
push
cwtl
mov
iret
xchg
imul
pop
out
pop
aas
or
bound
mov
outsb
push
xor
sub
mov
mov
add
ljmp
pop
mov
das
lcall
jno
mov
dec
jecxz
lock
inc
pop
cmp
imull
sub
inc
or
repnz
mov
into
rcrb
dec
stc
stc
popf
call
jns
js
lcall
cmp
mov
mov
add
loop
jmp
xchg
mov
dec
out
out
jne
pusha
cmp
dec
xchg
jmp
and
lock
cmp
loope
ds
sub
loop
mov
int
test
sub
mov
cli
insb
fsubrs
jno
fidivrl
lods
mov
std
cmp
cmpsb
mov
in
and
xchg
jg
push
xor
xlat
inc
mov
xlat
or
test
mov
push
or
fcom
insb
outsb
mov
jmp
movsb
mov
sti
rclb
or
idivb
jnp
jmp
dec
rol
sarb
lods
push
jae
jmp
and
outsb
add
hlt
fisttpl
shll
popa
test
xchg
sub
mov
sub
jne
lods
stos
lea
stc
cmpsl
daa
or
ljmp
mov
jno
and
xlat
cmp
outsb
repz
aaa
scas
pop
add
push
fnstenv
jecxz
fnstenv
ljmp
inc
rcrl
dec
mov
inc
test
add
sub
jbe
cmpl
lahf
mov
xchg
dec
and
out
xor
add
cmp
stos
and
rcrl
sub
in
add
sub
les
lock
jne
add
add
add
mov
sub
daa
testl
add
jle
inc
pop
mov
js
jmp
pop
scas
ja
or
lret
movsb
subl
loopne
dec
cld
xor
out
lea
cli
jne
repnz
subb
push
mov
mov
je
push
pop
fsubs
adc
push
sbb
add
xchg
mov
jno
jg
dec
sahf
movsl
pop
in
ficomps
add
es
cmp
roll
and
mov
push
sbb
add
icebp
sub
cmp
je
rcr
push
jp
aad
insl
pop
sarb
fcmovb
mov
ret
loop
jne
dec
pop
aas
mov
daa
xor
mov
add
or
xchg
stc
sahf
loope
cmp
jge
push
dec
add
testl
lret
or
imul
sub
xchg
int3
ret
jl
popf
add
data16
sarb
add
jmp
cli
outsb
or
jg
nop
jge
and
pushf
sub
or
test
lcall
lret
sbb
jae
dec
addb
cltd
jns
add
add
out
fistpl
push
add
js
nop
jg
imul
sbb
add
pop
jae
loop
in
adc
inc
cmc
shl
xor
jno
aad
int
and
sub
popf
dec
adc
int
stos
add
cs
lea
js
dec
mov
cmpsb
add
fimull
adc
jae
inc
les
dec
jno
push
xchg
fwait
cmpsb
dec
lcall
insb
cmp
sub
pushf
mov
movsb
clc
xchg
mov
mov
rcrb
pop
vinsertf32x8
xchg
mov
imulb
and
movsb
sub
out
fidivs
dec
popf
xchg
ds
inc
out
cltd
orb
inc
xor
daa
and
mov
fldenv
adc
idivb
mov
test
pop
sarb
or
dec
mov
jbe,pn
outsl
xor
jbe
xchg
js
push
enter
fs
push
dec
pushf
sub
rclb
push
cmp
xlat
mov
xchg
mov
test
mov
rclb
mov
cld
mov
xchg
in
loopne
sbb
push
movb
mov
into
ss
mov
out
scas
push
mov
fs
gs
pusha
daa
jge
push
scas
jne
xor
scas
lods
add
inc
pop
sbb
jle
push
dec
movsl
das
add
aas
mov
jmp
pop
or
or
mov
adc
pop
cmpsb
sub
jnp
adc
jecxz
decb
insb
arpl
xor
inc
ss
lcall
daa
push
fisubs
js
push
shll
shll
push
xchg
dec
mov
movsb
popa
xor
dec
popf
daa
and
adc
mov
test
es
cmp
bound
jl
scas
pop
cmc
push
into
pusha
out
lods
cli
mov
or
inc
test
loopne
or
mov
jmp
je
jmp
aam
shufps
jb
mov
cmp
sub
dec
mov
ja
pop
dec
jne
xchg
daa
decb
adc
ss
je
sub
shrl
into
arpl
lea
ljmp
inc
ret
pop
mov
push
jmp
lock
pop
cli
xchg
pop
std
ds
fimull
adcb
frstor
push
out
mov
dec
dec
andl
and
jl
jmp
aaa
mov
or
rclb
jae
ret
cmp
shlb
fwait
cli
daa
frstor
sub
mov
lock
xchg
xchg
xor
mov
pop
nop
pop
pop
shrl
dec
xor
xchg
test
outsb
sub
xchg
sbb
inc
cmp
repz
idivb
inc
jno
pop
orl
ljmp
jne
dec
jl
push
sbb
into
flds
and
xchg
rcrb
xor
mov
dec
jl
jp
add
jne
in
jecxz
xor
sbbl
cltd
lret
and
rcrl
add
inc
mov
push
adc
lea
loop
xchg
out
iret
sti
aas
add
sub
dec
ret
in
pop
jp
shl
mov
push
cwtl
or
xchg
sbb
ret
cmp
cmpsl
insb
mov
lret
adc
push
mov
lahf
xlat
lret
movsb
popf
loope
in
fildll
addl
sbbb
divb
push
ss
scas
pusha
mov
jnp
mov
aaa
sahf
adc
or
or
outsb
cmp
push
cltd
lods
sub
dec
lret
mov
icebp
cmc
push
xchg
cli
push
and
xor
xor
push
or
in
xor
cmpsl
jp
jb
jo
fnstcw
std
stos
pop
mov
cmp
dec
xor
mov
inc
out
fldt
ret
xadd
fsubrl
cmp
cmpsb
xchg
stos
mov
jp
repnz
inc
pop
in
mov
cmp
daa
ljmp
cld
outsb
sbb
stos
sbb
jb
jl
sbb
xchg
jmp
add
or
jne
in
inc
icebp
dec
lods
out
scas
xor
add
bound
mov
cmp
fisttpll
cmpsl
pop
mov
insl
jge
adc
lock
push
fs
imul
cmp
addr16
mov
mov
cmpb
imul
pusha
test
mov
insl
and
pushf
push
mov
xchg
leave
xchg
and
fiadds
xor
insl
adc
jg
das
jno
mov
inc
mov
dec
push
jp
push
jmp
out
nop
test
jbe
sub
das
or
mov
xorl
test
mov
hlt
mov
add
leave
pop
xor
push
movaps
jl
mov
mov
sub
ja
out
mov
and
xchg
and
leave
and
cwtl
addr16
jb
rolb
xor
movsb
repnz
movsb
sub
addb
and
test
fsts
push
ljmp
in
jle
sub
test
repz
add
pop
or
mov
aaa
sarl
cli
mov
jnp
fs
sbb
xor
inc
daa
mov
fidivl
test
mov
pop
add
rol
push
sti
push
pop
loope
jp
bound
je
inc
iret
or
sbb
jno
mov
rcrl
aas
jecxz
int3
push
jae
jecxz
cmpsb
adc
mov
test
daa
loope
popf
add
push
pop
add
and
shlb
repz
mov
sub
out
je
clc
jg
xchg
int
inc
iret
mov
push
jae
xor
ja
scas
addb
shlb
lret
fsub
nop
popa
sbb
or
jg
out
xchg
inc
insl
mov
dec
scas
ljmp
inc
mov
sub
into
cmp
stos
xor
cmp
rorb
add
inc
and
lods
mov
pop
cmpsl
fisubl
js
pmulhw
mov
pop
out
and
ret
inc
pop
fidivrl
fsubs
adc
cmpsb
into
outsb
xor
ss
pop
adc
into
stos
xsavec
lahf
mov
lret
sbb
addr16
lods
icebp
stos
lea
mov
pop
daa
pop
bound
movsl
xor
sub
movsl
xor
out
dec
ret
and
xchg
xlat
dec
out
rcrl
addr16
ja
ror
push
hlt
mov
mov
pop
hlt
imul
out
out
mov
dec
xchg
mov
mov
pop
jle
mov
jmp
mov
decb
mov
add
mov
adc
idivl
unpcklps
fdivrl
int3
pop
xor
add
xchg
in
inc
or
inc
dec
cltd
or
loopne
fisubs
mov
adc
hlt
data16
and
mov
cltd
movsl
ss
cmp
jg
sarb
or
shl
aam
dec
inc
nop
stos
decb
adc
xchg
sub
xor
test
adc
fs
popa
imul
enter
gs
jp
enter
cmp
pop
jbe
shlb
les
xchg
or
arpl
pop
cli
jl
ja
mov
lret
cmpsl
dec
cmp
rcrb
scas
test
nop
ds
dec
rorb
daa
adc
xor
xchg
mov
xorl
daa
jne
or
aaa
adc
and
loopne
incb
testl
mov
add
loopne
mov
repnz
in
mov
ja
lret
pop
jp
test
lods
push
call
fisttps
add
or
mov
mov
ffree
mov
inc
sbb
outsl
push
push
fs
fwait
sbb
aam
dec
jb
push
daa
fisubs
lods
add
mov
je
imul
pop
loopne
inc
pop
push
mov
std
add
cli
jne
add
mov
push
shll
adc
xor
pop
dec
dec
loop
cwtl
xor
jns
loope
rcrb
out
cmp
shlb
js
pop
mov
wrmsr
mov
mov
test
fcomps
cli
jns
pusha
jl
das
stos
push
dec
mov
fldenv
ljmp
jecxz
inc
pop
xchg
cmovne
in
adc
insl
outsb
jnp
push
jp
outsb
mov
pop
mov
cmp
inc
aaa
dec
sbb
dec
inc
cmp
mov
adcb
stos
es
mov
push
push
divl
aas
stc
stos
int
xchg
enter
aas
loope
push
sarb
and
push
repz
mov
mov
mov
fwait
jo
mov
cmpsb
outsb
es
push
insb
frndint
pop
sahf
decb
stos
inc
xor
addb
or
sbb
inc
mov
jp
xchg
lea
adc
jb
jecxz
adc
cmp
mov
sbb
mov
mov
pop
dec
sbb
xorl
xor
jne
mov
inc
mov
jne
mov
mov
roll
dec
jb
adc
inc
aas
call
xlat
ljmp
mov
lock
pop
push
and
pop
test
mov
inc
inc
rcl
out
lret
ss
daa
add
or
pop
ss
std
lods
lods
xor
repnz
mov
cmc
dec
push
dec
insl
ljmp
add
dec
loop
xchg
mov
xchg
cmp
rclb
lahf
inc
xchg
jp
xchg
loopne
jl
gs
jg
sbb
les
cmp
mov
push
mov
pop
adc
sub
mov
dec
add
dec
jb
cmp
imul
sbb
arpl
and
mov
call
jge
lcall
andl
pop
jne
add
fdivl
jnp
mov
and
lahf
push
aad
fdivl
jg
push
or
int3
sub
add
fsubrs
ss
enter
lcall
mov
inc
popf
sub
adc
dec
shrl
loop
in
mov
cli
mov
loopne
mov
jg
mov
stos
jns
adc
lcall
divb
je
jne
xchg
rol
mov
jns
dec
inc
xor
ds
jecxz
xor
sub
adc
push
pop
sbb
scas
xchg
cmpsb
icebp
xchg
mov
pop
inc
pop
ror
inc
pushf
xchg
dec
shrl
cs
jns
testl
jge
imul
push
jae
adc
push
push
fstpl
ja
push
and
rorl
mov
and
fsts
loopne
cmp
add
pop
or
adc
sahf
loope
ret
adc
pop
ljmp
sub
les
push
ljmp
fsubr
push
dec
ret
sub
adc
mov
adc
out
outsl
dec
xor
dec
sub
mov
xor
pop
and
not
mov
sub
fcompl
add
lea
push
nop
pop
sbb
rcrb
movsb
jp
hlt
out
imull
mov
adc
and
fstpt
std
add
push
movsb
mov
pop
inc
dec
mov
nop
es
sub
or
mulb
dec
in
jmp
pushf
sub
es
inc
xor
or
gs
das
lea
lods
es
test
mov
fwait
or
cmp
mov
or
std
add
pop
in
popf
stc
pop
lods
aaa
mov
loopnew
arpl
scas
mov
push
inc
or
pop
cltd
rorl
cmp
pop
add
sub
lret
les
outsl
int
idivl
popf
sub
xchg
and
mov
in
sub
or
xchg
ljmp
into
rolb
adc
mov
and
xchg
mov
lock
sub
xorb
lods
lock
add
lea
aam
xor
add
xor
lods
mov
mov
sbb
pop
pop
xor
int
inc
or
and
in
imul
testb
call
in
jge
lods
ja
icebp
dec
in
adc
clc
xchg
jns
cmc
or
cmpl
test
xchg
pop
nop
ret
mov
and
adcb
aas
clc
shlb
adc
popa
lcall
ss
arpl
dec
sbb
cli
adcb
es
mov
movsb
sahf
scas
clc
pop
leave
dec
enter
sbb
push
outsb
into
mov
push
xchg
call
jle
push
nop
jp
aam
dec
jle
fsub
cmp
and
xchg
xor
xchg
stc
in
mov
xor
shrl
sbb
call
jnp
lahf
cmp
stos
jle
xchg
push
imul
mov
pop
rorb
inc
mov
inc
adc
sbb
jb
or
cmpsl
popf
ja
xor
insl
aad
cmpsl
pop
in
in
cmpsw
push
sbb
pushw
sub
fs
ljmp
jo
in
sbb
cld
out
mov
lahf
clc
push
pop
test
mov
loop
adc
lret
mov
lods
stos
xor
out
mov
outsb
pop
les
sub
mov
or
mov
push
sub
nop
or
adc
nop
les
jne
xor
adc
shlb
push
insb
lret
stos
fwait
jbe
cwtl
cmp
ss
or
stos
cmp
outsl
jo
push
add
das
sbb
cmp
mov
ret
push
pop
lcall
sbb
fstpt
mov
lea
inc
push
inc
sahf
pop
movsb
pop
orb
pop
sub
aad
jb
int3
sti
movsb
aad
cmp
iret
outsl
xor
les
mov
cmpsb
outsb
movsl
fcmovnbe
add
push
sarl
inc
cmp
jno
aam
mov
sbbb
iret
ror
inc
push
sub
rcr
dec
sbb
inc
inc
imull
fidivl
cmp
or
inc
cmc
pop
adc
daa
and
les
or
mov
fisttpll
sbb
pop
int
fcom
or
test
arpl
cmp
loop
ss
sub
cmpsl
xor
jne
jns
ds
push
incb
xor
dec
aad
xchg
push
dec
jbe
jecxz
mov
xor
test
outsl
adc
push
int
ja
fnstcw
and
sbb
adc
out
cs
shl
pop
mov
lods
les
mov
jne
push
fsubs
shlb
mov
adcb
sti
ljmp
sarl
xchg
les
jne
popf
bound
push
repnz
push
iret
mov
xor
push
sbb
mov
jmp
add
jmp
mov
movb
mov
or
daa
cmp
popl
addl
jo
xchg
lock
fsubr
push
testw
pop
mov
cmp
iret
sbb
adc
add
or
mov
test
dec
jecxz
cmp
std
addr16
frstor
cmp
adc
lods
xchg
insb
int
aad
test
xor
push
add
ss
inc
inc
mov
cmp
jno
push
icebp
outsb
lds
in
in
push
inc
xchg
scas
dec
push
fcmovbe
push
movsl
xor
rorl
cmp
ja
mov
pop
push
xor
push
pop
inc
lods
je
jo
pop
jo
dec
into
out
cli
sbb
out
popf
sub
lahf
leave
pop
shrb
in
aaa
push
ss
push
push
pushf
ficomps
sub
jbe
mov
xor
xor
add
fxtract
cmp
adc
xor
sbb
call
fdivs
xchg
cli
jnp
jge
and
fsubl
cld
jb
jge
addl
xchg
cwtl
subl
fldt
mov
lock
xchg
in
xor
rorl
ljmp
mov
int3
mov
or
ret
xor
fwait
jmp
mov
sarl
xchg
cmp
aaa
mov
sub
mov
jae
xchg
lcall
int
mov
aas
sbb
push
xchg
xchg
les
mov
mov
repz
jnp
cmp
mov
into
sub
cltd
dec
inc
loopne
jnp
sub
sub
dec
pop
cmp
dec
inc
and
lds
xchg
mov
ret
jbe,pt
push
ret
sarb
mov
int
fs
dec
mov
lods
push
outsb
xor
add
nop
and
lock
roll
ret
xor
aam
daa
dec
iret
or
lea
js
xabort
adc
addb
gs
ds
xchg
cld
lods
repnz
xorb
out
mov
mov
adc
push
mov
inc
pop
lcall
lahf
out
xchg
ret
mov
lock
add
pop
iret
outsl
and
rcrb
cwtl
mov
push
pop
xchg
push
dec
lods
mov
sbb
pop
pop
ret
mov
es
push
push
jno
xchg
sub
cmp
mov
daa
pop
fwait
mov
add
sbb
mov
dec
lcall
mov
push
push
sub
mov
inc
gs
push
aad
mov
push
stos
mov
rcll
cwtl
xor
xor
pop
xchg
outsl
outsl
aam
out
dec
cs
or
call
arpl
mov
enter
clc
cld
int3
jmp
dec
dec
pop
fsubrp
insl
cwtl
ss
outsb
jge
test
test
clc
mov
std
rcrl
in
subb
jecxz
jp
cltd
sbb
or
ret
jne
lds
and
iret
sub
mov
call
or
jmp
dec
sti
popa
lret
loope
mov
insl
lcall
stos
pop
outsl
jecxz
dec
testb
mov
xchg
push
lahf
sbb
jecxz
mov
fdivs
xchg
xor
in
sbb
int3
or
out
lahf
in
rcrb
ret
movsl
pop
sub
int3
xor
out
push
inc
jmp
jno
cmp
in
pop
xchg
cmp
xchg
stos
fs
jecxz
add
ja
xchg
popf
mov
sub
jge
add
push
pop
add
cltd
mov
inc
popf
lea
mov
fs
clc
sub
mov
jne
pushf
loopne
and
mov
out
dec
dec
cmp
push
inc
adcl
aas
cmp
xor
xor
xlat
mov
push
mov
adc
arpl
sti
sti
inc
xchg
test
fidivl
rolb
popf
mov
test
sub
addr16
dec
cwtl
hlt
and
popf
cs
mov
lret
lock
jae
test
dec
aaa
insl
call
in
mov
dec
add
movsl
mov
xchg
fsubrl
mov
jns
mov
inc
or
mov
mov
test
jge
sbb
adc
jo
out
pop
je
jnp
loope
mov
hlt
mov
xchg
add
in
dec
repz
sbb
aam
jp
and
gs
rolb
jbe
pop
mov
fwait
testl
scas
lods
cltd
or
fldl
fdivp
mov
xchg
mov
push
or
push
mov
sahf
jp
out
mov
sub
data16
xlat
cmp
dec
mov
push
xchg
xlat
std
in
pop
sbb
cli
push
hlt
ss
push
adc
and
jo
addl
outsl
ror
jnp
mov
adc
movl
int3
mov
mov
inc
repz
inc
and
and
mov
popa
cmp
xor
fildll
pop
ss
sub
mov
add
jl
push
jns
out
ret
cmp
arpl
ja
push
imul
test
scas
sub
adc
dec
repnz
cld
xchg
fisubrs
push
dec
dec
mov
in
popf
fcomip
cmc
ficoms
rcrb
loopne
pop
out
adc
add
inc
xchg
pop
daa
lock
in
add
sub
xor
in
push
lea
inc
sub
mov
fstpt
shll
insl
jle
leave
xchg
in
and
inc
dec
jnp
inc
push
lock
out
sar
sub
cmp
cmp
sbb
call
lret
test
lret
femms
add
imul
sbb
sti
lahf
pushf
jb
mov
flds
and
mov
std
mov
push
pop
out
sub
repnz
pop
adc
insl
mov
cmpsl
jae
movsl
mov
adc
in
stos
pusha
neg
les
cmc
cmp
pop
inc
outsb
test
push
gs
jo
mov
daa
pusha
gs
inc
in
dec
lods
or
and
sbb
shll
mov
inc
dec
mov
out
xlat
mov
jle
in
or
in
movsl
into
loop
insl
add
mov
lea
inc
lret
lcall
push
mov
sbb
pop
enter
out
enter
testl
mov
ret
jb
out
jmp
mov
cmpsb
adc
and
andl
mov
inc
incl
fstpl
push
sub
hlt
sub
mov
push
into
jne
loop
lea
test
aad
inc
push
or
dec
fstpl
outsb
pop
dec
jnp
inc
gs
mov
mov
mov
pop
aad
xor
xor
shll
cmp
mov
mov
inc
adc
shrd
fs
ret
add
scas
cmpsb
es
sbb
lret
loope
pushf
movsl
sar
inc
add
ds
push
mov
pop
cmp
dec
insb
imul
push
inc
bound
cmc
push
push
scas
movsb
lahf
stos
push
imul
mov
daa
sbb
arpl
fildll
in
xchg
movsb
or
fwait
sar
dec
adc
lods
adc
or
shlb
mov
sahf
shrb
test
dec
cmp
jb
int
out
and
shll
dec
xchg
and
mov
xchg
iret
push
cmp
push
leave
outsb
sahf
jb
mov
je
jge
out
sub
enter
inc
mov
lock
push
cmp
pop
enter
push
cli
xor
sub
sub
repnz
push
shr
out
push
repz
rolb
fnsave
cld
add
push
mov
xchg
and
add
clc
leave
fcomp
inc
dec
scas
dec
push
xchg
test
jp
shrl
movsb
fdivr
adc
out
or
insb
or
enter
add
mov
fcom
xchg
jp
lds
adc
adc
ret
mov
js
xchg
insl
xor
pop
test
idivb
ja
sbb
inc
dec
sbb
and
lds
stc
cmp
in
les
cltd
pop
test
insl
xchg
xchg
arpl
stos
in
sub
test
jne
cmp
mov
cmp
push
push
adc
mov
loope
ljmp
mov
jo
cmp
xchg
and
cltd
inc
adc
sbb
pop
mov
sub
cmpsb
shrb
shll
sbb
cmp
xor
leave
lock
gs
inc
sbb
push
rorl
mov
aam
jle
pop
mov
pop
push
and
insl
mov
fimuls
sqrtps
ljmp
mov
fadds
pop
mov
mov
xor
ljmp
or
repz
sub
mov
inc
bound
scas
aas
jecxz
pop
push
testl
mov
inc
sti
inc
arpl
xor
lods
divl
mov
int3
test
cmpsl
cmpsb
sbb
in
into
sub
outsl
dec
pop
lcall
aam
jecxz
test
push
testb
push
pop
insl
andb
pop
pop
loop,pn
jmp
xchg
gs
ja
jne
xchg
add
ja
or
fs
stc
ror
and
push
xor
jp
lret
fwait
and
adc
jbe
inc
in
pop
or
pop
imul
imull
loope
sub
fstps
call
rclb
push
lret
cmp
stc
out
mov
pop
add
push
push
xor
stos
stos
xchg
lods
sub
movsl
out
ret
or
xchg
pop
xlat
adc
cmpsb
sub
andl
in
jae
fistl
push
outsb
fldl
mov
xor
dec
arpl
int
sbb
lcall
out
xchg
sbb
ret
lds
outsl
in
add
add
xchg
dec
idiv
sahf
out
or
cmp
aaa
outsl
push
add
fimuls
mov
stos
mov
lret
dec
pusha
outsl
cmp
lahf
lods
andb
sbb
xor
cmp
dec
mov
or
adc
idiv
sti
push
fildl
or
jmp
sbb
decl
xor
daa
push
pushf
test
fdivrl
xor
xor
nop
dec
mov
jmp
cld
cli
inc
sar
loopne
mov
insb
or
andl
iret
aaa
testb
jno
adc
jge
mov
mov
xor
ficoml
jge
inc
into
loopne
sub
insb
ja
push
push
or
cli
add
leave
test
fistps
addr16
add
inc
mov
mov
mov
push
fabs
or
dec
jnp
or
outsb
dec
fmuls
cmp
xor
cli
data16
push
pop
add
xor
stos
sbb
cmc
fwait
dec
dec
leave
push
mov
cld
add
in
xchg
test
enter
fildll
mov
lcall
adc
xchg
inc
mov
sbb
cld
les
in
mov
enter
shll
pop
enter
pop
cmp
jmp
ds
dec
sub
dec
aad
lea
iret
mov
aad
pop
xchg
dec
push
xchg
shrb
lods
sub
xchg
inc
ljmp
sub
icebp
jg
popa
cmp
mov
jns
ja
jns
xlat
scas
xlat
js
mov
jge
inc
xchg
movsb
decb
rcrl
popa
pop
and
pop
out
in
mov
and
mov
inc
lret
clc
addb
cwtl
in
jecxz
jnp
int
jg
lret
les
mov
inc
shrb
test
cmpsb
dec
mov
push
mul
popf
insl
and
cmp
in
push
ja
push
pop
ds
aaa
push
or
mov
or
hlt
mov
mov
scas
xor
mov
out
pusha
sbb
xor
or
xchg
mov
dec
xor
aad
dec
push
in
jp
testb
mov
xor
lods
fsubrl
stos
fnsave
movb
iret
mov
daa
jae
cmpsl
loope
scas
inc
pop
and
and
ret
cmp
jnp
shrl
adc
jge
in
cli
and
imul
fs
sti
ja
jmp
dec
loopne
inc
dec
ds
mov
aas
jmp
dec
test
push
push
ret
jmp
icebp
cmp
int3
clc
sti
loopne
sub
push
inc
and
shll
jl
out
mov
fiaddl
sub
ret
pop
mov
iret
xor
mov
shr
cmp
jnp,pn
out
lret
sarl
pop
lods
loopne
mov
pop
jg
xor
mov
add
pop
inc
xor
and
jo
add
pop
jne
inc
popf
lods
pop
loope
fisubs
sahf
jp
xor
jno
jl
lret
sbb
sub
xchg
push
gs
lcall
pushf
jo
jo,pt
les
rcll
bound
cmpl
pop
push
cmp
testb
xchg
jb
stc
pcmpeqd
lcall
mov
add
js
push
inc
mov
xlat
sarb
fdivrs
mov
dec
mov
adc
inc
fwait
outsb
das
cmc
xchg
pop
inc
cmpsb
mov
sbb
pushf
xchg
pop
loope
push
idivb
mov
int3
lcall
xor
jp
jl
mov
stos
mov
into
rorb
fdivrl
cwtl
sub
ficompl
push
mov
popf
imul
negb
cmp
lods
les
jmp
out
adc
outsl
subb
or
jmp
add
inc
mov
lcall
movsbw
inc
mov
ljmp
mov
out
jle
jae
rolb
mov
pop
in
sbbl
or
cmpsb
push
fiadds
sub
loop
xchg
insb
lret
pop
sbb
jmp
cmp
push
mov
jp
dec
dec
xchg
loop
pop
jge
cmp
lock
in
mov
or
jns
iret
push
sub
sub
or
or
sbb
and
je
adc
ret
mov
in
scas
push
xchg
call
scas
sbbl
mov
test
jl
mov
loope
dec
mov
cmp
xchg
scas
repz
mov
push
pop
repz
fiaddl
sub
xor
xor
into
sahf
dec
mov
add
daa
mov
nop
fstl
push
cmc
lahf
cmp
mov
int
in
ror
arpl
jmp
jb
jmp
inc
push
cmc
sbb
test
int3
sahf
dec
sbb
popf
lahf
cltd
pop
ljmp
jne
adc
dec
dec
ljmp
into
mov
inc
cmp
jecxz
lcall
test
test
mov
icebp
ja
test
jo
mov
pop
je
or
les
into
inc
pushl
mov
in
clc
cld
je
mov
xor
pop
jb
out
cmp
scas
xchg
dec
push
mov
cpuid
lock
js
in
data16
pop
aas
call
push
sahf
inc
push
adc
push
das
xchg
fstpl
jne
cs
sub
enter
bound
jp
jp
pop
push
icebp
call
popa
in
fsubrp
mov
pop
je
sbb
sbb
push
xlat
sahf
ret
jns
pop
sub
pop
cld
and
aas
orl
imull
rorl
mov
cmpw
stos
sub
ljmp
repnz
mov
xchg
push
inc
popa
cwtl
jle
dec
es
pop
xchg
test
xlat
push
inc
push
sbb
lcall
xor
daa
arpl
ljmp
les
fmuls
jmp
cmp
sbb
stos
lock
xor
pop
insl
pop
cli
movsb
xlat
pop
mov
or
out
mov
cmp
stc
fnstcw
subb
and
daa
push
xchg
loop
pop
lcall
push
es
pop
add
or
lret
jo
test
inc
dec
sbb
mov
push
cmp
adc
jl
call
cmp
push
mov
cmp
adc
popa
mov
mov
inc
xchg
cwtl
ja
adc
and
dec
ds
arpl
xorb
lret
xchg
repz
call
cwtl
xor
ja
lahf
sub
xor
cmp
ficompl
add
jle
ret
repz
std
jle
loope
mov
pop
loop
push
popa
add
push
pop
add
or
mov
jge
and
dec
jle
into
cs
cld
scas
add
gs
dec
push
fsts
outsb
repnz
add
add
pop
xchg
fs
int
xchg
lods
fsubs
popa
lret
rep
push
lods
pop
mov
xchg
adc
loopne
xor
sbb
orb
pop
mov
fsubrs
aam
pop
stos
sti
xor
movsb
sbb
in
test
fs
pop
jne
cmp
loope
jne
sbbl
ret
lret
int3
addl
add
fistps
cli
inc
movsl
mov
int
xor
loopne
aad
and
ss
dec
dec
in
les
movsl
mov
insl
lea
inc
mov
leave
pop
imul
push
xchg
pop
push
hlt
popf
decb
push
xchg
jb
sub
mov
jle
int
inc
scas
add
push
js
test
test
sub
or
jmp
clc
cmp
mov
mov
popa
add
cmpsb
push
aaa
adc
lea
pop
dec
fcomi
mov
sbb
fisubrl
pop
fdivl
jg
or
jno
nop
pop
fcmovnbe
xor
pop
das
jb
dec
xor
sbb
cmpsl
sub
push
int
dec
adc
sbb
jne
nop
inc
movl
and
adc
movsl
aad
cs
and
clc
loope
dec
mov
or
jecxz
inc
sub
dec
dec
lret
fnstenv
popf
loopne
enter
jno
sub
nop
mov
jg
add
xchg
data16
call
mov
mov
out
mov
mov
clc
sbb
in
mov
sub
movsl
addr16
xchg
dec
insl
mov
sub
movsl
sub
mov
cli
mov
sbb
or
fwait
push
ljmp
sbb
mov
add
outsb
insb
pop
push
fstpt
pop
gs
addr16
pop
popa
mov
fildl
addb
pusha
test
xchg
stos
bound
jle
lea
incb
gs
pop
add
xchg
rcr
fldenv
lret
mov
jle
pop
lret
mov
xorl
xor
test
mov
mov
sub
test
adc
adc
movsb
mov
push
lret
fs
jae
test
fbld
cmp
jl
dec
dec
js
ja
movsb
loopne
jae
add
jb
pop
add
mov
popa
xchg
out
xor
xchg
addr16
cltd
fldenv
fildl
ret
test
popa
popa
cmp
mov
add
orl
xchg
ja
lret
fisttps
loop
mov
loope
mov
out
jecxz
push
add
cmc
mov
jne
and
mov
mov
lea
xchg
jns
mov
mov
mov
dec
push
je
ds
mov
sbb
sti
pop
insb
shlb
sbb
push
leave
testl
test
adc
mov
iret
jne
sub
scas
dec
push
xor
in
mov
popa
cmp
pusha
add
arpl
aam
or
stos
and
insb
xchg
cwtl
or
mov
sub
pop
imul
jns
sub
testl
pushf
cmp
pushf
sti
stc
dec
je
dec
fidivl
ljmp
xor
sub
jbe
scas
cmc
ss
xchg
inc
mov
fwait
das
gs
cld
aam
lcall
sbb
int3
out
inc
xchg
movsb
hlt
xor
out
mov
lods
je
ds
dec
dec
sub
mov
xor
sbb
in
shll
mov
or
mov
jnp
add
mov
pusha
decb
cs
test
repz
mov
and
addr16
fcoms
cld
jo
scas
pop
rcrb
jg
fsub
mov
jbe
sbb
pop
dec
fsubl
push
xchg
push
adc
sarl
cmp
fstps
out
in
je
push
es
repnz
outsb
rcll
nop
or
scas
mov
dec
ljmp
mov
out
and
in
lods
and
data16
mov
es
mov
gs
sarl
mov
lea
pop
dec
lret
jo
outsl
push
xchg
mov
xchg
push
rcrb
xchg
or
int
dec
adc
movsb
test
xor
sbb
push
jns
out
lahf
out
outsb
scas
das
mov
sahf
sbb
push
jne
loope
xor
jae
je
mov
inc
add
push
add
pop
push
fsubrl
mov
aam
js
cli
or
aad
dec
xor
push
movsl
sbb
imul
mov
push
insb
sub
lret
mov
pop
jle
in
loope
xchg
cs
pop
popf
out
hlt
mov
mov
jno
das
mov
inc
movb
cld
inc
inc
adc
bound
shll
adc
dec
daa
mov
ret
call
pop
mov
mov
or
leave
jl
cli
jg
jl
out
adc
je
outsb
jecxz
push
pop
js
insb
inc
lcall
gs
sub
sar
push
push
pop
mov
nopl
pop
in
in
clc
and
push
loope
lock
gs
int3
dec
jge
mov
mov
ds
push
stos
mov
add
dec
das
shlb
jb
xor
xor
mov
ds
test
cld
in
aas
xchg
xchg
in
sarb
push
mov
int3
fbld
xchg
outsl
lds
xchg
mov
loop
adc
xchg
sti
mov
pusha
mov
andb
sub
xor
pop
xor
popa
xor
add
ja
push
xor
sub
mov
clc
push
sub
jns
lock
cmpsl
mov
lock
push
jecxz
pop
adc
cmpsb
mov
dec
in
aaa
cmp
imul
imul
jg
inc
ja
hlt
mov
push
jmp
outsl
pop
stos
roll
jge
xor
mov
in
and
add
inc
mov
sti
xorl
popf
xchg
leave
inc
jmp
inc
bound
clc
bound
adc
cmpl
mov
out
cmp
xchg
ret
aad
xchg
mov
insb
filds
repnz
lock
or
xchg
ljmp
cmpsl
mov
or
xchg
xchg
stos
xchg
call
idiv
ficoms
inc
and
mov
add
push
pop
add
pop
sub
push
sub
scas
mov
cli
bound
dec
cmp
xor
test
data16
cmc
xchg
pop
fnstcw
sub
fldcw
xor
xchg
enter
int
call
lcall
dec
imul
xor
dec
in
push
pop
insl
hlt
jae
scas
arpl
xor
ret
add
lahf
fs
xor
jo
pop
jnp
push
sub
mov
cs
mov
gs
fsubr
sbb
push
out
jecxz
addl
mov
addl
inc
and
mov
ret
push
imul
fcmovnu
orb
icebp
pushf
lods
push
mov
daa
jns
popf
cmp
in
push
out
mov
push
stos
jmp
xchg
in
call
lahf
ljmp
addb
xor
icebp
imul
sub
cli
rorb
shlb
mov
jae
or
mov
cli
test
jg
pop
mov
scas
add
jno
and
pop
jne
pop
push
adc
imul
stc
fsts
ret
out
xchg
xor
pusha
mov
movsl
and
jne
aas
jo
insl
out
fs
nop
mov
clc
inc
or
pop
fildll
ret
fldt
js
in
enter
lea
aas
scas
int3
repnz
lock
sbb
xorl
int
out
fldl
pop
mov
rcr
add
mov
hlt
inc
and
loope
fwait
outsb
imul
movsl
mov
pop
push
xchg
mov
flds
sub
mov
fstpl
pop
outsb
inc
xchg
jo
popf
mov
adc
mov
sti
sub
fnsave
add
enter
push
flds
sub
xchg
fnstenv
mov
ds
fstp
push
dec
rcrb
nop
mov
iret
lds
cmp
incl
push
xchg
jae
clc
and
and
jecxz
loop
fbstp
and
sub
pop
addl
test
cmp
ljmp
sahf
fcmove
iret
flds
push
fstpt
test
push
mov
rorb
iret
push
nop
dec
cmc
mov
mov
push
sub
jns
movsl
mov
dec
insb
mov
inc
mov
pop
daa
xor
out
and
out
psubb
xchg
sub
dec
push
push
cmpsl
addb
xor
fwait
mov
jp
aam
xor
sbb
jae
out
ja
ds
std
mov
daa
jno
and
mov
xchg
cmp
add
or
imul
jno
outsl
aam
xchg
mov
or
mov
es
inc
cmc
loop
mov
stos
jge
rcll
repnz
jns
jge
cs
fiaddl
dec
add
je
sbb
pushf
xchg
aas
sahf
in
or
xchg
mov
push
aam
sahf
dec
movsl
cwtl
inc
lods
dec
stos
adc
push
movsb
xor
and
dec
sbb
lods
fcmove
mov
or
cli
aas
push
scas
outsl
xorl
mov
add
mov
leave
and
dec
ja
leave
sbb
jge
addr16
test
es
sbb
adc
mov
and
cmpsl
ds
ret
inc
jmp
xor
stos
aad
rcrl
out
mov
push
pop
fimuls
push
mov
sbb
inc
mov
xchg
xchg
jbe
mov
jnp
faddl
int
mov
ljmp
arpl
mov
dec
aad
pop
xor
out
scas
cmp
lds
das
adc
inc
push
cli
fldcw
or
loopne
fldl
jmp
cld
mov
call
pusha
loop
xchg
xchg
jl
jl
xchg
xchg
adc
pop
jno
fadds
mov
out
test
loopne
repnz
fs
mov
ret
mov
test
sub
addr16
lcall
repz
pop
xchg
and
ss
adc
add
gs
ljmp
jge
sbb
scas
or
test
or
pop
mov
stc
mov
imul
dec
test
adc
fucomp
stos
sbb
and
push
or
cwtl
shl
out
pushf
mov
aas
push
mov
call
in
sub
lret
call
mov
push
dec
xor
mov
adc
call
sbb
stc
cmp
lds
rcrb
std
xlat
push
mov
fimull
mov
aad
cld
xchg
push
les
add
push
les
mov
mov
cmpsb
dec
jl
jg
mov
adc
stc
fsubrs
nop
fldenv
cwtl
jge
mov
jo
mov
popf
lds
pop
and
xor
mov
pop
jle
mov
shlb
mov
inc
mov
cli
jg
push
sub
fcomi
mov
clc
lcall
adc
sbb
cmp
add
sub
sub
push
mov
cltd
xchg
in
mov
js
pop
pop
cli
cmp
add
and
ret
add
out
ljmp
cltd
cmp
popf
addl
jg
push
stos
push
test
sti
jg
xchg
adc
add
aaa
adc
adc
xchg
leave
repz
cmp
pushl
adc
cmp
cli
mov
or
add
dec
int
cmc
mov
push
in
cmp
in
fwait
and
fstl
or
push
fldt
and
ja
test
pop
insb
pop
xor
scas
out
and
rcll
fdiv
xchg
cmp
sbb
jae
and
mov
lods
sub
sub
data16
jbe
filds
or
clc
and
into
jae
add
push
sahf
jno
shlb
loop
shlb
lods
daa
or
xchg
shll
cmp
imul
nop
into
mov
cmp
lret
mov
and
jns
popa
jo
sar
pusha
jb
inc
pusha
mov
pop
enter
dec
sbb
rcrb
push
inc
and
lahf
arpl
leave
outsb
xchg
add
mov
lods
shll
xor
sub
sub
inc
sub
jne
lcall
icebp
imul
dec
movsb
ficoms
out
mov
add
add
cld
jg
and
mov
cmc
les
add
pop
add
test
mov
mov
aam
and
shrb
xchg
jo
popf
push
stos
cmpsb
pop
mov
rol
cs
out
js
dec
cmp
mov
lods
and
les
mov
and
jno
jecxz
cmpsb
outsb
add
rorb
ret
jmp
or
push
pop
ja
push
lods
add
gs
in
enter
xor
je
dec
movsb
cmp
jecxz
das
aam
cmp
out
test
fcompl
xor
stos
adc
pop
int3
stc
sub
cltd
push
ret
xchg
add
icebp
push
mov
jle
out
pop
add
xor
push
popf
lret
push
mov
add
adc
dec
mov
cmc
sbb
pop
dec
jns
sti
orl
movsb
jmp
xchg
test
sub
gs
add
pop
in
call
and
lret
mov
pushf
xchg
std
sub
leave
rorb
xor
sbb
ds
jle
mov
cltd
jnp
jbe
mov
cli
cmp
cli
or
out
mov
mov
mov
mov
adc
xor
push
rcrl
inc
xchg
dec
int
xor
mov
push
test
add
jbe
jbe
stos
xchg
or
imul
daa
cwtl
jecxz
cmp
jp
pop
push
or
es
pop
xor
arpl
stc
push
push
xlat
inc
call
adc
adc
cmp
or
cmpsl
sbb
cmpsl
fnstenv
lcall
xorb
push
mov
sub
out
cmpl
andl
aam
lds
sarl
cmpsl
jmp
lret
cmp
enter
mov
cwtl
or
iret
inc
and
jmp
sbb
push
add
sbb
push
mov
es
mov
cmp
insl
inc
cmp
adc
ficoms
stos
dec
jb
decb
stos
neg
and
adc
icebp
or
xchg
popf
mov
lcall
das
inc
fcom
pop
pusha
inc
or
lock
mov
jge
push
cmpsl
je
sbb
orl
pop
inc
add
mov
inc
leave
mov
jle
inc
pushl
frstor
dec
outsl
add
inc
pop
dec
outsb
aam
sti
cltd
fwait
push
gs
fwait
mov
repnz
stc
daa
push
xor
mov
data16
std
ficomps
mov
xor
je
push
in
mov
pop
mov
dec
adc
cltd
xchg
cmc
aas
xchg
sarl
into
adc
cs
mov
jg
add
loope
xchg
lods
iret
std
or
cmp
push
pop
mov
add
lods
push
pop
stc
and
nop
dec
pop
mov
dec
xor
add
jle
dec
and
sub
ret
jns
mov
insl
movsl
adc
lods
and
in
pushf
aas
test
sahf
jbe
add
jecxz
in
orb
lea
ljmp
dec
scas
pop
mov
mov
mov
mov
cli
push
insb
cmp
or
push
fwait
imul
ljmp
jnp
push
ficoms
sbb
jbe
jne
sarb
loop
inc
push
sub
stos
testl
jp
fcmove
shlb
adc
mov
fcomps
jle
and
aam
mov
lahf
fs
imul
insl
mov
addb
es
lods
push
pop
lock
inc
inc
in
icebp
adc
add
xchg
and
jmp
fcmovnbe
ret
dec
pop
cmp
jns
stos
mov
lods
xchg
pop
nop
cmpsl
sub
pop
mov
ss
outsb
jmp
jbe
and
mov
sbb
jle
or
cmp
icebp
int
jecxz
int3
fstl
push
shlb
mov
test
jne
rorb
sub
xor
divl
hlt
pop
or
or
push
xchg
sbb
inc
push
stc
clc
shrb
stos
fdivs
lds
out
hlt
int
push
cmp
sbb
mov
pop
out
inc
adc
dec
push
xchg
adc
jo
jecxz
adc
outsb
pop
sbb
ret
dec
test
gs
loope
fs
mov
cmp
xor
and
pop
mov
pop
inc
lahf
push
mov
mov
mov
mov
js
lods
sub
outsl
es
xchg
stc
bound
cli
xchg
sbb
shl
mov
jb
or
or
stc
mov
fidivrl
repz
add
scas
mov
clc
enter
xchg
or
push
arpl
xchg
xchg
mov
inc
inc
lock
dec
pause
andb
shrb
jb
inc
adc
aas
xchg
jb
pop
adc
jge
daa
push
ds
cmp
cmp
sti
pop
mov
fidivs
mov
mov
insb
pop
mov
in
iret
add
and
hlt
popf
ds
xor
jnp
jns
sahf
inc
add
sbb
rep
movsl
jbe
add
xchg
xchg
loope
stc
xchg
mov
fmulp
or
mov
xchg
aas
pop
xchg
in
jg
xlat
cs
rcrl
cltd
xchg
jne
insb
inc
aaa
push
gs
cmp
mov
sarl
add
adc
xchg
push
outsb
inc
lods
js
dec
cmpsb
int3
dec
aas
xor
or
sub
popf
dec
and
int3
nop
es
popf
rorb
fbld
xchg
gs
sub
xor
pushl
dec
push
jg
aaa
jmp
xchg
ja
rorb
or
ret
dec
lea
popf
mov
fisubl
loope
pop
fidivl
mov
addr16
or
test
jns
fwait
jmp
int
cmpsb
daa
sbb
xchg
dec
push
xchg
ss
sbb
inc
cli
xlat
ss
scas
fstpt
frstor
aas
mov
sbb
ds
and
xor
ljmp
adc
mov
mov
rorb
jb
inc
add
jno
or
cmpsb
xchg
adc
inc
xchg
push
ret
lea
jl
pop
gs
adc
jae
pop
leave
jmp
dec
jge
mov
mov
jmp
stos
flds
filds
and
sbb
insb
sub
int
and
add
add
mov
sahf
and
mov
hlt
mov
pop
add
cmc
popf
jno
sti
ds
xchg
push
subb
dec
enter
shlb
addr16
gs
xchg
jg
insl
push
in
imul
sub
push
cmpsl
mov
and
mov
fistps
mov
jmp
push
movsl
fucomi
cltd
fsubs
push
inc
or
lods
ret
push
push
add
mov
or
lods
sub
jb
jno
pop
test
adc
mov
mov
pop
lods
lcall
add
orb
into
out
imul
push
negb
dec
jbe
jp
push
xchg
imul
mov
lods
into
cmp
into
pop
fisttps
fmul
fstpl
adc
lock
pop
or
fs
imul
test
xchg
mov
pop
movsl
mov
into
push
or
adc
or
or
shl
mov
popa
sbb
std
ror
shl
fdiv
mov
add
aaa
js
sbb
fbld
push
cmpsb
sub
ljmp
ja
shrl
sub
adc
inc
out
cld
mov
xchg
xchg
cmp
sub
dec
or
add
shll
cltd
out
les
jl
pop
aam
into
mov
daa
ret
cwtl
fistps
loop
lods
jbe
cmp
es
pop
xorl
add
bswap
add
xor
mov
adc
sbb
in
das
mov
pop
jnp
insl
stos
cmp
push
lret
jmp
inc
add
sub
pop
pop
cmpsl
int3
stos
movsl
lcall
test
test
gs
jno
lds
test
cmp
mov
or
fwait
cmp
jns
jb
in
mov
stc
adc
int
cs
jnp
gs
test
clc
outsb
jge
lcall
fistpll
test
push
mov
pop
test
xchg
fistl
adc
and
imul
cmp
inc
scas
xchg
aas
loopne
jne
shl
adc
fadd
int
xchg
xchg
dec
dec
in
ja
inc
aam
loope
xchg
xchg
push
fnsave
ljmp
xchg
lcall
jns
xlat
xor
jmp
bnd
xchg
outsb
hlt
dec
sub
sub
sbb
shl
xchg
out
and
out
nop
in
mov
roll
mov
inc
sbb
dec
leave
sbb
mov
ljmp
dec
adc
push
out
dec
dec
arpl
cli
andl
enter
ds
pop
add
loop
adc
or
int
sbb
in
jbe
cmp
insb
leave
je
xor
fsubl
and
mov
jnp
stos
std
mov
push
lcall
or
push
lea
mov
js
sub
add
shl
jmp
mov
adc
imul
in
test
push
gs
pop
out
ss
out
xchg
dec
addr16
fisubrs
cmp
test
daa
inc
jnp
pop
jnp
cmp
dec
nop
pop
fcmovnbe
sbb
or
inc
adc
mov
daa
mov
lods
mov
in
pop
xor
and
xchg
xchg
jp
scas
aad
imul
inc
loope
into
cmp
mov
cmc
je
inc
xor
mov
inc
adc
xchg
js
das
sub
rcrb
mov
mov
aad
jno
mov
sbb
xchg
lret
add
rcl
jl
outsl
jo,pn
int3
inc
pop
pop
popa
sbb
stos
jle
mov
aad
into
aam
xchg
push
stc
sub
fisttpll
test
mov
ret
jnp
xor
mov
pusha
aad
adc
ja
dec
sbb
outsl
push
imul
jnp
mov
scas
or
cmovg
add
fbld
insl
cwtl
jno
fsubrs
push
jns
xchg
shrl
imul
fs
jp
xchg
xchg
es
mov
test
out
lret
fadds
shlb
push
cld
dec
push
frstor
mov
push
push
out
or
test
mov
push
pop
dec
inc
push
insl
add
movsb
pop
pop
jecxz
lock
push
push
mov
cmpsl
fisubl
jmp
aad
add
cmp
fucom
mov
jg
loop
dec
sub
jne
fnstsw
push
or
mov
loope
test
adc
je
add
insb
jne
cmp
push
enter
pop
jae
pop
jl
adc
insl
mov
out
xchg
xor
cmp
jo
xchg
xchg
sahf
int
push
loopne
movsb
xchg
dec
icebp
loope
in
andl
call
inc
lea
xor
dec
stos
enter
aaa
sbb
lea
mov
das
into
mov
shrb
or
dec
aad
pop
popl
xchg
adc
dec
adc
outsb
jecxz
fstpt
gs
test
cmp
jb
aad
pop
les
mov
ds
out
push
jmp
xor
imul
mov
test
mov
cli
mov
sub
orl
mov
cwtl
rcr
jg
lods
pushf
jl
sub
nop
mul
inc
fsubl
movsl
notl
mov
add
fcoms
push
dec
imull
mov
fldl
sub
lods
mov
ja
xchg
mov
mov
cmp
cmpsb
sti
sub
fmulp
jp
cld
hlt
xchg
ret
and
mov
ljmp
lods
pushf
cmp
scas
nop
frstor
test
loopne
pop
or
mov
andl
inc
fdivrs
mov
pop
sahf
or
xchg
insb
cltd
mov
clc
popa
test
icebp
std
adc
cmp
cmp
pop
repz
inc
jge
fisubrs
push
cltd
dec
sarl
jnp
mov
pop
cwtl
call
push
jae
cmc
mov
or
nop
adc
mov
aaa
ret
fisttpll
inc
out
cmpsl
lcall
sti
fldcw
test
jp
push
sbb
in
insl
jp
add
out
in
add
dec
mov
push
cmp
dec
pushf
and
mov
mov
ja
or
mov
or
cmc
in
in
ljmp
jae
and
xchg
add
das
add
mov
sbb
test
adc
sbb
mov
adc
sub
push
neg
aas
add
add
pushf
sbb
push
sahf
fidivrl
add
or
sub
scas
add
push
pop
add
pop
add
fs
xchg
fildll
sti
pop
fs
dec
sub
test
test
adc
jo
inc
pop
stos
mov
cmpb
repz
pop
pushf
cmpsb
sbb
ss
loope
mov
scas
mov
test
out
pushf
inc
sub
pop
loope
or
imul
mov
mov
rcrl
aam
cmp
arpl
mov
pop
jno
loopne
or
lret
in
shll
rcll
pop
jg
push
mov
lcall
test
jne
fists
fidivrs
fwait
jle
mov
pop
add
push
loop
dec
xchg
push
fs
dec
jg
sarb
sub
jp
addr16
mov
jmp
jmp
pop
or
mov
inc
frstor
int
sbb
xchg
pop
or
mov
and
lcall
and
mov
fcmovnbe
add
loop
push
xchg
mov
stos
testb
jge
xor
mov
addr16
push
mov
aas
js
push
shlb
stos
mov
dec
sbb
or
jge
lock
fucomi
jle
loop
push
push
and
or
out
leave
xor
push
dec
leave
fwait
add
inc
mov
add
aas
xchg
out
lea
cmc
adc
cmp
pop
orl
les
xchg
negl
repnz
rol
mov
pop
inc
gs
int3
pushl
andl
mov
and
push
rcrl
xchg
mov
pusha
jno
test
cmpl
jle
ds
push
jmp
sbb
js
popf
jg
mov
cli
in
and
sbb
add
cmp
xor
sub
rcrl
xchg
fwait
ret
ss
roll
sbb
sub
lea
pusha
enter
clc
iret
fwait
and
call
lahf
flds
scas
jne
add
shl
sub
mov
iret
notl
pop
cli
inc
push
js
lods
movsb
xor
push
mov
std
mov
xor
jle
inc
mov
jbe
push
xchg
insb
mov
or
push
sarl
add
xor
xchg
loopne
jge
sbb
mov
in
cmp
test
jo
lods
lcall
in
dec
je
movsb
push
cltd
cld
loope
fisubl
js
lea
rcrb
bound
mov
cmp
sub
ds
and
stc
cmpsl
test
lods
mov
dec
mov
movl
shll
and
icebp
adc
stos
or
mov
repnz
sub
enter
jecxz
xor
pusha
inc
xlat
in
inc
jp
and
dec
inc
aaa
mov
push
xchg
pop
gs
test
jb
xchg
push
mov
and
test
pop
mov
gs
or
dec
inc
lret
adc
out
jns
or
jle
jmp
std
push
xchg
popf
cmp
xlat
or
inc
mov
popa
rolb
arpl
enter
xchg
jg
pop
dec
cmpsb
mov
push
popf
out
shlb
push
jno
cwtl
jp
sub
fnstcw
das
xlat
sbb
arpl
pop
add
jecxz
or
mov
xchg
fsubrs
movsb
inc
and
rcll
mov
xchg
mov
das
das
cs
mov
sub
stos
scas
imul
dec
mov
sub
pushl
scas
sti
xchg
jo
imul
mov
sub
inc
pop
push
into
dec
stos
sahf
popf
in
mov
lods
test
sbb
fisttpll
aaa
icebp
nop
ss
dec
enter
lret
push
sbb
insl
das
scas
sbb
and
je
aam
dec
dec
invd
lcall
rorb
jns
jnp
out
xor
jo
cmp
aad
lods
xchg
jecxz
jge
lods
or
push
sbb
ss
cltd
les
lahf
mov
mov
lea
gs
mov
sbb
ds
mov
and
and
cmp
dec
xor
xorl
dec
sub
dec
cwtl
outsb
push
scas
std
dec
testl
adc
sbb
outsb
pushf
int3
jecxz
in
mov
stos
popa
popa
cmp
jae
mov
repnz
mov
addl
xchg
jl
std
fisubrl
cs
mov
dec
fs
notl
sbb
insb
pop
jb
lds
dec
sub
ja
and
loopne
mov
mov
sbb
loop
stc
and
mov
fcompl
mov
out
repnz
sbb
xor
movsl
addr16
cmpsl
adc
ret
pop
std
scas
jbe
adc
pop
pop
pop
ret
adc
jns
outsl
sbb
adc
test
aad
lods
sbb
cli
inc
addb
shlb
cwtl
pop
mov
mov
push
cltd
and
jnp
arpl
scas
pop
pushf
movsl
mov
xchg
cld
dec
fprem
mov
mov
inc
pop
das
pop
pusha
mov
cltd
mov
in
clc
loop
jmp
mov
add
mov
mov
lcall
clc
xor
sbb
sbb
repz
add
or
outsl
bound
and
add
sbb
and
or
bnd
dec
mov
out
sub
xor
cli
lret
sbb
mov
adc
out
and
sub
aas
pop
fsts
push
sti
sbb
dec
or
in
and
add
arpl
jg
adc
movsb
mov
cmp
mov
dec
les
push
mov
pop
xor
shrb
sub
add
out
mov
and
sbb
adc
and
aam
or
add
lds
jo
scas
ret
add
fildll
xor
sti
mov
imul
or
pop
enter
mov
push
adc
add
pop
pop
xchg
or
arpl
stos
inc
rcrl
es
lret
mov
pop
mov
xor
cmc
mov
adc
stc
cwtl
inc
loope
data16
sbb
inc
stc
out
inc
std
fidivrs
movsb
dec
lock
jl
xlat
mov
add
icebp
mov
ret
dec
and
mov
mov
adcb
nop/reserved
push
popa
lret
push
test
movsl
sar
icebp
call
loope
loopne
lcall
jbe
pop
pop
inc
cmp
xchg
inc
ljmp
mov
sahf
fs
ret
scas
add
es
push
push
mov
mov
cmp
inc
cs
cmpsb
xchg
arpl
decb
es
fcmovb
nop
push
sbb
pop
sbb
dec
lahf
jmp
icebp
and
mov
cld
xchg
jae
cmp
jae
gs
mov
ret
adc
jnp
pop
mov
in
lret
ficoml
xor
push
icebp
sub
lods
sub
stc
mov
loopne
in
test
movsb
cli
mov
std
mov
mov
adc
sub
jl
adc
das
orl
mov
ljmp
lock
mov
pop
lods
add
out
sahf
mov
sub
test
shl
mov
insl
mov
clc
cmc
or
fisttps
lods
dec
or
test
jnp
cmp
jl
data16
popf
sbb
sub
jl
mov
push
aas
out
push
fs
and
movsl
out
inc
fmull
adc
mov
xor
inc
in
mov
pop
fwait
add
lock
stos
pop
push
sbb
mov
cmc
pushf
aaa
jge
fs
dec
inc
loop
jle
push
clc
mov
ja
or
test
pop
js
dec
test
aaa
push
jp
inc
or
jge
pop
sahf
xor
jo
rorl
notb
negl
and
sub
cli
loopne
jo,pt
push
daa
mov
fisttps
cmc
xor
sbb
push
lock
nop
pop
rorb
pop
jae
and
inc
sarb
xor
jne
push
pop
notb
jmp
subl
and
lods
mov
out
mov
dec
cli
xchg
mov
std
sti
shrb
in
sbb
loopnew
xor
xor
imul
push
mov
and
xor
or
inc
loope
push
icebp
jmp
mov
and
push
stc
pop
or
xor
mov
loop
daa
mov
cli
sbb
xchg
and
hlt
cmp
call
or
jbe
divl
mov
dec
adc
jl
sub
sub
pop
jne
xor
xor
sub
fdivrl
mov
sbb
test
or
loop,pt
movsb
dec
cli
pop
xor
cmp
and
stc
or
push
fiadds
lods
in
adc
outsb
fbld
movsb
icebp
ss
lods
jb
inc
cmp
sbb
cs
aas
push
xlat
mov
in
dec
pop
es
pop
inc
les
jno
jno
popa
lods
mov
pop
lcall
push
dec
add
ret
out
jne
and
or
push
xlat
ja
out
pop
inc
std
adc
cmp
dec
fs
mov
fst
pop
mov
inc
movsl
aas
leave
sub
adc
sbb
ja
jno
je
inc
inc
and
sub
jmp
aas
push
add
pop
xlat
sbb
les
jecxz
stos
cvtps2pi
add
decb
push
cltd
lret
dec
cmp
aad
in
xchg
cmpsl
and
sti
cld
lods
push
ror
pop
loope
or
aaa
les
mov
xor
fldt
dec
lahf
into
mov
punpcklwd
aas
xor
cltd
add
fidivs
loopne
dec
pusha
mov
xor
test
stos
and
mov
aad
mov
pop
mov
mov
outsl
add
out
daa
add
adc
sar
push
aam
mov
fstps
mov
fwait
sub
xchg
leave
xchg
inc
xor
je
dec
insl
jno
xchg
jae
jno
xchg
in
scas
mov
sub
fiadds
cmc
into
test
mov
pop
and
xor
mov
movsl
inc
mov
pop
lret
push
jmp
jo
cmp
sub
dec
sbb
test
scas
insb
aaa
jae
cmp
jno
test
add
mov
pop
rorb
ss
xor
push
popf
mov
or
sub
jmp
fdiv
dec
jge
pop
std
fisttpl
sub
inc
xor
sbbl
loopne
scas
add
dec
mov
hlt
daa
fadds
xor
int
jns
ss
pop
pop
xlat
insl
jmp
inc
pop
xchg
mov
dec
aas
nop
mov
lcall
lock
shlb
mov
cmp
mov
push
std
inc
fdivr
and
lahf
mov
icebp
jae
rcrl
aad
or
ficoms
jbe
adc
jne
jb
and
xor
dec
push
xchg
dec
xor
adc
jg
lcall
or
cmp
or
lahf
sbb
and
mov
xor
mov
cwtl
xchg
loope
sub
pop
fsubr
jp
and
push
mov
roll
out
pushf
fistps
lock
fst
addl
or
stc
cmp
pop
loopne
sub
arpl
fisttpll
sub
nop
dec
push
pop
arpl
mov
adc
jno
push
ror
std
inc
es
cmc
adc
js
cld
mov
and
mov
repz
repnz
cmp
stc
pop
inc
jge
mov
push
fwait
mov
mov
push
int3
mov
scas
jmp
lds
ss
and
xchg
pop
xchg
gs
negb
sub
xchg
stos
or
jno
nop
rol
jne
and
test
dec
cmc
fcmove
sbb
cmc
xchg
roll
xchg
aam
jecxz
out
jo
cmp
lds
ret
call
cmp
cmc
scas
push
in
add
scas
inc
testb
pop
subl
cmpsb
aaa
mov
dec
mov
lds
sar
jae
push
into
ret
in
pop
sbb
push
pop
pop
xchg
push
inc
and
sub
mov
sbbb
xchg
je
add
jb
cmc
ret
stc
in
inc
cmp
pop
xor
jecxz
xchg
test
mov
push
andb
push
adc
enter
lods
mov
aam
popf
das
je
fwait
popa
out
and
pop
mov
inc
push
dec
shr
and
aas
fcomip
out
or
jge
adc
add
push
pop
add
dec
xchg
popf
out
xchg
xchg
rcr
adc
int
jg
enter
les
jb
dec
icebp
in
scas
push
test
out
xchg
jp
gs
shlb
sbb
inc
incl
mov
dec
xchg
cwtl
cs
push
aad
test
and
push
jecxz
cli
add
cmp
cli
cmc
ret
jne
add
sub
das
jecxz
jecxz
adc
aam
sti
pop
div
xor
jae
cmpsb
into
mov
test
push
sbb
popf
mov
jmp
test
xor
xlat
dec
jmp
push
mov
or
sub
movsl
ljmp
sub
pop
mov
fistpl
std
addr16
aam
into
xor
add
shll
mov
xlat
sub
xchg
xchg
cmp
cmpsl
lcall
mov
sbb
xor
sti
out
rclb
ljmp
ds
lock
jmp
ficomps
dec
cmc
cmp
shll
arpl
stos
cli
adc
jno
and
dec
insb
pop
jge
xchg
jl
cmp
nop
mov
pop
mov
and
popf
xchg
imul
push
out
and
or
jmp
xchg
fsubr
cmc
stos
bound
and
cmp
mov
xchg
pop
cmp
pop
ja
push
jns
cli
call
sbb
jmp
ss
enter
sub
xchg
movsb
jno
add
mov
add
test
int3
sarl
xor
and
aam
sbb
jl
cmp
add
pop
or
pop
jns
int3
push
mov
push
jo
aam
push
add
icebp
fisubs
lahf
inc
adcl
aad
es
mov
lods
push
mov
inc
or
repnz
dec
mov
mov
jl
sbb
es
out
fwait
or
mov
stos
mov
jne
mov
leave
pop
notb
cld
out
jmp
mov
sbb
test
test
cmp
fidivs
lret
incb
push
ret
sbb
imul
lahf
icebp
mov
mov
mov
adc
mov
jae
out
cmpsb
cmpsl
sbb
lcall
dec
adc
cwtl
repnz
lock
xchg
cmpsl
scas
cmpsb
adc
push
movl
sti
mov
xchg
fistpl
cmp
push
push
daa
fs
mov
jecxz
dec
in
into
fidivl
adc
jno
jo
xlat
push
or
daa
inc
pop
mov
test
sub
into
push
mov
jmp
adc
in
lret
add
dec
mull
pop
inc
sub
mov
arpl
jns
fadd
cmpsb
xchg
mov
clc
fwait
cmp
push
mov
std
inc
push
pop
or
cmp
sbb
stos
jb
xchg
icebp
xor
mov
xor
xchg
in
or
int
sbb
add
insb
push
mov
mov
mov
pop
push
or
mov
and
fisubrs
pop
jno
inc
jbe
sub
mov
imul
fwait
xchg
mov
pop
mov
mov
and
leave
les
cli
pop
test
push
inc
bound
filds
jmp
leave
ficoms
popf
pop
testb
lahf
add
lea
xchg
out
fisttpll
mov
and
jmp
lods
xchg
jo
mov
shll
push
xor
inc
lcall
mov
test
rcr
jae
and
bound
push
or
jnp
add
pop
sarl
mov
fs
and
mov
js
loope
xchg
add
fsub
add
or
js
fisubrs
cmpb
bound
mov
push
cwtl
and
xor
mov
in
out
in
mov
lret
jbe
andb
mov
sarl
mov
int
lea
sub
mov
xor
xor
push
nop
pop
sub
mov
in
aad
mov
test
fbstp
sbb
mov
fdivl
iret
adc
ss
inc
inc
sbb
testl
int
pop
in
loope
adc
jge
js
or
pop
lods
and
pushf
mov
pop
dec
inc
push
or
inc
and
mov
mov
clc
push
cli
call
cld
outsl
enter
push
and
push
cmp
lock
dec
into
dec
movsl
out
add
inc
movl
push
inc
fwait
pop
rcl
push
mov
cs
in
aam
lahf
inc
in
out
lret
cld
lds
inc
cmp
iret
sub
int
cmp
mov
mull
je
mov
out
aam
push
jge
std
fildl
cmp
ret
mov
shrl
mov
or
jecxz
pop
int
ret
push
push
test
jle
dec
xor
push
jnp
jle
xchg
lds
pushf
adc
mov
cmc
jge
mov
fists
pusha
and
inc
scas
int
jmp
sub
add
or
andl
dec
mov
xor
sbb
call
js,pt
mov
je
jb
cmp
fwait
subl
and
pop
push
dec
mov
ds
aad
cmp
and
cmpsb
sbb
mov
or
lds
lret
push
test
xor
nop
add
clc
cmp
push
push
dec
hlt
fimull
sbb
lret
lahf
xorl
leave
fists
ds
nop
mov
mov
int
add
cmp
xlat
fstps
leave
into
pushf
cld
lret
out
mov
dec
mov
inc
or
aam
enter
in
test
xor
or
mov
clc
inc
pusha
sti
pop
out
pop
inc
mov
sbb
bound
sarl
cmp
mov
push
je
add
sahf
in
movsl
and
mov
jno
ja
add
add
pop
pop
inc
fs
arpl
push
faddl
pop
adc
loop
add
notb
xchg
mov
mov
mov
dec
fs
scas
addr16
xlat
inc
dec
xor
aas
fdivrl
imul
scas
outsl
mov
mov
mov
and
lcall
and
pop
nop
leave
add
clc
mov
outsb
out
xchg
icebp
mov
out
aad
adc
add
push
pop
add
stc
mov
clc
dec
xor
test
inc
rcll
addr16
int
and
lds
jecxz
mov
xchg
sub
and
add
push
inc
dec
ds
mov
outsb
xchg
fmuls
jo
cmp
xlat
loope
mov
fwait
pushf
mov
ficompl
xchg
pop
das
cs
mov
jbe
mov
mov
push
dec
bound
mov
dec
mov
int3
out
outsb
xor
sbb
mov
and
cwtl
aam
dec
fiaddl
mov
push
aas
inc
sub
je
mov
cmc
js
mov
aad
xchg
mov
mov
inc
add
insb
cmp
cltd
sbb
push
pop
dec
test
dec
imul
dec
andl
adc
sbb
sahf
gs
stos
mov
push
push
xchg
xchg
push
xlat
jnp
loope
mov
arpl
sub
in
mov
nop
pop
sbb
cmp
sbb
mov
fiadds
loop
push
imul
xor
add
sti
cmp
andl
mov
cmp
pop
stc
fists
pop
sbb
into
or
cmc
adc
lcall
repz
movsl
addr16
sti
fdivs
dec
cmc
mov
sub
or
into
push
fwait
adc
add
int
sub
into
cmp
push
push
out
sub
mov
aaa
lock
push
dec
add
xor
sbb
frstor
cltd
adc
dec
adc
lea
push
sub
inc
lret
imul
movsl
test
xchg
or
cwtl
loopne
mov
mov
cmp
outsb
cmp
repnz
test
jns
into
sahf
imul
push
add
mov
push
scas
push
dec
fs
jbe
loopne
xchg
push
es
scas
inc
dec
insl
mov
xchg
jo
js
pop
sbb
xchg
mov
imul
pop
icebp
movsb
mov
xor
and
aad
dec
add
mov
and
stos
sbb
sub
or
push
inc
xchg
out
adc
pop
je
idivb
fs
mov
mov
mov
push
xor
fmuls
push
or
lret
mov
or
aam
leave
and
add
dec
cs
lods
rorb
cltd
aaa
and
stos
jg
cmc
repnz
in
nop
cmp
mov
inc
hlt
jmp
push
nop
int
int
sub
adc
ret
inc
outsb
outsb
push
xchg
inc
repz
mov
rorb
filds
inc
sub
lret
mov
mov
insb
jmp
dec
mov
fcom
in
das
mov
xchg
or
les
cwtl
add
jb
gs
sub
outsl
imul
mov
fs
or
nop
adc
pop
lods
xchg
xchg
scas
cltd
lret
xor
sti
loop
pop
cld
push
add
push
cmpsl
in
adc
jge
sub
cld
fisttpl
xor
mov
out
sti
xchg
pop
adc
mov
sti
or
out
pop
xor
cli
xor
jno
fs
mov
pop
adc
xchg
cmp
sbb
aaa
and
and
clc
cmpsl
out
iret
jmp
adc
lea
arpl
dec
lret
mov
jg
pop
subb
movsb
mov
pop
stos
jmp
fcomps
xchg
adc
jo
lret
sub
xor
scas
in
in
syscall
repnz
test
test
xchg
call
push
ficoml
pusha
daa
outsl
mov
cmc
jecxz
lock
popa
bound
icebp
xchg
and
ret
stos
mov
add
roll
adc
repz
inc
andl
sbb
bndstx
loope
cmp
movsl
jg
mov
mov
jl
mov
idivb
lcall
jmp
pop
mov
mov
scas
sub
movsl
mov
mov
fadds
inc
jmp
lret
push
cld
jnp
sbb
in
into
loopne
repz
or
rcll
scas
inc
sbb
imul
pop
pusha
movsb
pop
stc
shlb
cmp
push
out
rcl
push
adc
xchg
jl
fs
lods
sti
in
pop
mov
mov
repz
popa
aas
inc
add
cmp
inc
adc
sbb
or
mov
enter
mov
cmp
dec
andb
or
lret
jbe
ret
dec
rcrb
jecxz
and
mov
or
mov
cwtl
mov
int
std
in
inc
outsb
mull
mov
out
aam
shlb
loop
push
sbbb
das
fisubl
or
mov
push
ret
fsubrs
jae
iret
test
or
push
sbb
cmp
stos
xchg
xchg
lret
ljmp
adc
outsl
and
stc
stos
sahf
push
cmp
loopne
mov
pop
jne
mov
lahf
push
cmp
sbb
mov
int
and
cmp
fbld
mov
sbb
inc
icebp
inc
push
cmc
jle
adc
vmread
cwtl
lcall
out
imul
mov
movsb
xchg
int
pop
aaa
sub
add
push
dec
jo
push
jns
jno
les
aad
push
cwtl
je
xchg
andb
jecxz
cmp
pop
mov
mov
loope
xchg
sub
add
lock
mov
push
iret
and
pop
stc
js
lea
jno
pop
push
adc
jb
sbb
cwtl
xor
sub
sub
pop
call
or
les
mov
inc
and
and
in
pop
movsb
adc
jge
pop
mov
add
cmp
sub
mov
sbb
mov
shl
or
dec
mov
mov
xor
and
mov
outsb
inc
add
imul
repnz
shlb
loop
sbb
mov
adcb
in
js
push
push
mov
pushf
cmc
or
mov
mov
and
hlt
movb
shlb
fwait
sbb
xlat
add
loopne
imul
mov
jb
jne
inc
test
lret
mov
push
out
cmpsb
mov
mov
repz
mov
aas
fbld
add
dec
jbe
ja
sub
lret
movsb
fldl
add
add
imul
sarl
mov
add
in
xchg
add
sub
movsl
xchg
in
xlat
mov
rorb
mov
testb
push
pop
add
xchg
mov
lods
icebp
cmpb
nop
jg
mov
mov
add
jl
sbbb
mov
jo
test
inc
mov
adc
adc
lret
insl
sub
aam
popl
inc
push
aam
mov
dec
cwtl
sub
les
jmp
mov
pop
outsl
jno
pop
mov
sbb
jb
andb
cltd
sbb
sub
stc
aad
cmp
cmp
loope
shrb
pop
pop
push
or
fdivs
in
xchg
mov
xor
sub
xchg
scas
xor
mov
and
jecxz,pt
adc
mov
jae
ficomps
enter
inc
jg
lahf
outsb
mov
ja
imul
fadds
movsb
scas
add
outsb
adc
xchg
arpl
in
insl
jmp
xchg
add
cmpsb
mov
mov
dec
sbb
out
jne
in
mov
jl
dec
dec
jns
sub
xchg
insb
push
clts
cmp
lods
push
mov
pop
inc
sub
lods
sub
outsl
pop
jbe
sbb
dec
ss
jg
pop
mov
sub
add
cmp
jecxz
and
lods
cmp
dec
push
ja
or
pop
push
sbb
mov
rcrb
js
test
test
adcb
aaa
popa
sarb
lea
xchg
mov
sti
cmp
mov
loope
xor
jmp
dec
inc
insl
pop
out
cmp
adc
fxch
aad
pop
and
mov
sbb
adc
icebp
xchg
pop
in
in
jmp
call
ja
jecxz
and
pop
movsl
jns
out
inc
test
mov
data16
sbb
pop
stos
xchg
arpl
xchg
sub
push
clc
lods
xor
shl
movl
sub
pusha
lds
icebp
adc
shll
lahf
add
or
pop
dec
mov
lods
add
repz
mov
call
or
jo
or
ds
xchg
mov
inc
fcompl
and
es
xchg
gs
ficomps
inc
es
fbld
cs
popf
fwait
xor
fwait
or
sub
jle
andb
mov
mov
xchg
or
fcmovb
outsl
pop
jbe
jne
test
fdivl
cs
rorl
inc
xchg
jle
mov
inc
lock
or
adc
cmpl
rcrl
js
mov
adc
pop
cmpsb
repz
leave
inc
xchg
adc
cld
adc
push
dec
add
mov
push
inc
mov
imul
pop
sbb
out
mov
fdivs
loopne
push
and
mov
xchg
xlat
and
testb
xchg
ret
and
insb
dec
sbb
lea
out
adc
and
ja
rcll
lods
gs
push
jns
adc
pop
lods
jle
adc
push
jmp
daa
adc
adc
setg
dec
aad
push
jmp
cmp
cmp
xchg
test
out
movsl
xchg
xor
ja
lods
jl
ror
mov
xor
add
cltd
std
adc
je
lret
insl
mov
mov
rol
call
push
lds
sub
mov
mov
mov
outsl
fwait
cmc
dec
mov
jmp
call
sbb
addr16
js
into
daa
sbb
lods
popf
mov
xlat
jmp
sub
adc
mov
push
xchg
sbb
cmc
addr16
ja
sub
jl
inc
out
shll
sub
sub
mov
cmc
leave
js
inc
jne
ljmp
push
xor
push
std
cmp
and
and
shrb
mov
dec
rcrl
cmp
arpl
andps
rolb
xor
cld
sub
xor
push
fnsave
iret
push
mov
out
sub
push
mov
xchg
das
iret
adc
iret
or
push
divb
dec
iret
sub
insb
jg
pop
mov
mov
mov
and
cmc
int
dec
xchg
mov
push
in
sbb
popa
mov
inc
mov
lahf
pop
mov
xchg
cvttps2pi
rolb
in
and
xchg
mov
fdivs
sub
cs
ljmp
test
xchg
push
adcb
push
sti
es
das
and
jge
lock
mov
mov
push
sbb
dec
pop
fwait
int
and
push
enter
inc
or
jns
xor
mov
fmull
lds
repnz
mov
jb
dec
int
lret
andps
xor
loop
push
ljmp
cmpsl
in
movsl
les
inc
push
pusha
and
sbb
pop
sub
xor
dec
loopne
sahf
enter
inc
lods
pop
push
xor
and
outsl
or
test
lret
jle
sub
ljmp
pusha
fisubl
xchg
fcom
xlat
loope
cmpsb
jbe
dec
xor
bnd
dec
loopne
sbb
hlt
xor
lods
test
push
loopne
repnz
gs
jno
dec
test
dec
nop
push
je
mov
mov
sub
mov
and
or
jne
xchg
mov
mov
inc
and
imul
lret
jbe
pusha
lods
dec
lods
sub
mov
xor
sarb
cmc
add
sub
out
stos
xor
mov
jmp
arpl
add
cmp
or
cmpl
xor
cmc
movsl
push
push
imull
daa
test
mov
push
sub
negl
dec
outsl
fcmovu
testb
adcl
push
in
cmp
lods
rolb
lds
loope
adc
lods
ffree
mov
jp
cmc
repnz
mov
inc
test
fwait
push
dec
jns
add
push
mov
fisubl
adc
icebp
pop
mov
adc
movsl
xchg
jno
aaa
flds
insl
mov
fidivl
xor
xchg
xchg
pop
test
mov
mov
repz
jo
ja
cmp
loopne
jg
push
jle
push
dec
cltd
jg
mov
testb
add
and
repz
movsb
adc
movsb
xchg
mov
test
push
pop
add
lret
mov
xor
pop
movsl
or
sbb
inc
mov
inc
inc
shrl
cmp
fistpl
ja
add
ljmp
cmpsb
mov
lods
xor
xlat
enter
xchg
repnz
inc
je
adc
dec
mov
add
out
mov
sbb
mov
rorb
es
stc
inc
loope
xchg
pop
jns
insl
pop
dec
es
cmp
outsl
inc
jmp
jp
jbe
aaa
add
sub
leave
cld
pop
sub
xchg
cmp
cmc
adc
pop
pop
shll
mov
cmc
mov
jnp
daa
adc
lret
or
out
test
and
inc
imul
cmpsl
jge
daa
int
jne
fsts
invd
mov
mov
sar
lds
icebp
cmp
lahf
leave
fldcw
inc
mov
pop
cmp
aad
in
call
xor
mov
fistl
aam
sbb
add
mov
test
mov
in
mov
jnp
sbb
hlt
inc
in
lcall
mov
mov
pop
popa
popa
xor
add
test
and
cmpl
or
inc
xchg
and
jmp
call
cmp
add
pop
es
mov
pop
jns
xor
add
data16
mov
cmc
out
mov
mov
fsubrl
or
push
out
repz
pop
in
dec
lret
aaa
ljmp
out
hlt
xor
adc
ficompl
out
lods
and
scas
sub
in
je
xor
cmp
loope
insl
mov
leave
in
jmp
jle
lret
loop
or
add
pusha
add
mov
popf
sbb
popa
clc
adc
push
push
cmp
leave
push
inc
hlt
testl
jne
scas
adc
inc
loop
in
std
jbe
mov
mov
or
outsl
and
mov
mov
repz
test
adc
pushf
repnz
add
inc
stc
mov
arpl
jbe
push
jns
add
xchg
and
or
icebp
loop
mov
test
sbb
push
mov
leave
adc
popf
fnstsw
out
lea
adc
das
lret
pop
stos
push
or
and
movsb
mov
les
cwtl
xchg
dec
cwtl
das
das
clc
cwtl
mov
pop
adc
lds
aaa
jge
sub
sub
cmp
sbb
out
sbb
jbe
call
outsl
mov
push
jmp
cmpsb
fnstcw
in
je
sub
movsb
lods
sub
jns
mov
cmc
sbb
push
mov
mov
adc
nop
lods
out
add
push
repnz
push
les
sbb
push
mov
xchg
pminsw
iret
test
sarb
pop
inc
inc
sarb
mov
loopne
lahf
fdivrp
sub
ljmp
mov
inc
jecxz
cmp
add
out
sbb
sti
mov
shll
fidivs
stc
lock
dec
fpatan
mov
shrb
ljmp
push
jne
xchg
nop
stos
push
xchg
mov
mov
ret
int3
int3
test
std
sbb
lret
pop
std
stos
cs
adc
inc
xchg
dec
mov
test
loopne
lock
adc
pop
aad
and
push
adc
add
or
cmp
push
popf
cmp
pop
xor
mov
lret
ror
mov
int
or
push
movsb
lret
cltd
jne
test
xor
adc
pop
sub
rolb
cmp
jo
addr16
lds
add
orl
adc
xchg
clc
or
push
push
stos
les
scas
iret
dec
push
imul
xchg
inc
mov
push
in
ret
frstpm(287
in
adc
pxor
jge
cli
xor
jo
stc
pusha
add
mov
push
filds
mov
or
in
pop
jb
dec
jmp
mov
jp
adc
xor
ss
push
dec
jecxz
sub
pop
loopne
mov
mov
xchg
lcall
lea
push
leave
lds
scas
xor
push
sub
jnp
imulb
pop
fistps
scas
pop
push
popf
mov
push
dec
mov
jns
dec
lds
xchg
imul
dec
push
mov
jg
fs
pop
push
push
rclb
xchg
and
incb
push
frstpm(287
pop
in
pop
mov
dec
adc
iret
dec
cmpsl
int
and
cs
js
sbb
sahf
push
fisttps
mov
sbb
xor
or
in
sbb
mov
mov
sbb
hlt
mov
mov
sbb
outsb
repnz
cli
push
addr16
fbstp
mov
mov
insl
and
push
nop
jl
int
cmp
in
pop
adc
subl
mov
cmp
cmp
inc
jns
sub
pop
inc
dec
ret
inc
ja
dec
bound
push
sbb
pushf
or
mov
pop
scas
jmp
out
or
mov
adc
push
cmp
out
lods
dec
mov
dec
push
pop
imul
in
repz
xchg
ret
loopne
out
xor
aaa
lods
pop
jo
shrl
jno
dec
imul
jp
push
mov
jle
jge
sbb
lahf
dec
push
ljmp
or
add
sbb
add
xor
outsl
adc
in
or
out
in
xchg
addb
mov
or
faddl
cltd
andb
mov
and
xor
insb
stc
push
stos
xor
mov
mov
mov
dec
lods
ret
mov
bound
xchg
mov
add
cmc
lods
clc
or
stos
stc
shlb
movsl
sub
mov
xchg
pop
dec
bound
inc
dec
in
js
xchg
mov
popf
sbb
ljmp
xchg
and
aam
adc
dec
push
out
mov
xchg
jb
jb
and
xor
rcr
fs
mov
jl
add
test
insb
daa
out
pop
outsl
test
xchg
pop
out
enter
call
int
push
outsl
mov
ljmp
mov
xor
loope
icebp
mov
in
jnp
and
mov
add
push
pop
add
or
fmul
out
sti
sbb
cltd
or
mov
bound
leave
into
in
movsl
inc
and
fisttpl
mov
pop
mov
adc
call
jb
adc
cmp
dec
push
dec
jo
add
cmp
lcall
mov
sub
cmpsb
test
lock
jae
mov
iret
out
inc
loope
xor
xor
int
out
sbb
dec
fcomi
jae
ds
or
aam
cmpsb
adc
or
xlat
int3
cltd
cld
ja
popa
loop
punpckhbw
adc
mov
bnd
ljmp
stos
rcrl
push
das
xchg
pop
test
sbb
pop
jne
aas
push
mov
xchg
dec
idivl
shl
adc
fmul
add
scas
and
push
fwait
rorl
sbb
shrb
mov
je
cwtl
sub
dec
sbb
cwtl
mov
lcall
pop
jg
subb
and
mov
pop
adc
mov
mov
mov
mov
pusha
bound
xor
cmp
inc
sti
test
iret
mov
pop
out
daa
loope
test
out
jl
int
jns
mov
in
or
inc
fwait
pop
push
mov
jge
xor
out
mov
aaa
or
cmp
ds
jle
add
pusha
fs
into
pop
mov
push
lahf
push
icebp
fwait
out
adc
out
lret
mov
and
xchg
jmp
push
mov
daa
movsl
rorb
movsl
les
cli
stc
mov
xlat
lods
ss
push
xor
neg
dec
rcl
xchg
lcall
or
in
jecxz
xchg
imul
loop
cmp
mov
push
sub
insl
outsb
mov
popf
ficoms
add
mov
xchg
inc
ds
add
add
sahf
mov
in
pop
lea
sub
fsubs
jg
fmuls
push
lcall
fcmovnb
addr16
and
out
push
mov
add
in
pop
arpl
xor
mov
inc
cwtl
push
cmp
or
shr
mov
into
jne
mov
and
cmpsl
push
adcb
cmp
cmpb
leave
out
inc
mov
pop
test
je
mov
loopw
mov
sub
mov
js
sbb
loop
push
mov
insl
dec
xchg
xor
and
mov
cmp
hlt
xlat
imul
stos
imul
mov
xchg
mov
lret
imul
adc
and
stos
push
sbb
pop
repz
mov
sbb
add
mov
xchg
dec
cmpb
out
jbe
pushf
push
fsubrs
mov
and
data16
les
push
fidivl
sbb
jo
jae
repnz
mov
push
add
int3
clc
in
daa
inc
cmp
cmpsl
scas
ja
xor
sbb
out
out
mov
push
lcall
negl
mov
or
cmpsl
xor
jb
les
xchg
idivb
inc
add
fsts
sbb
das
dec
mov
inc
stos
imul
push
movsl
mov
push
aaa
lds
out
aas
cmc
addl
adc
out
movsl
pop
sub
xor
inc
xchg
pop
push
inc
add
sbb
push
lret
inc
repnz
loop
and
lret
mov
xchg
rol
add
in
pop
rclb
aad
dec
xchg
dec
ret
gs
adc
mov
push
and
in
cmc
cltd
add
icebp
sti
mov
mulb
mov
xor
enter
xchg
sti
and
dec
dec
daa
shll
ffreep
jae
pusha
adc
fmull
fwait
cmp
xchg
mov
push
gs
inc
push
mov
jp
sbb
daa
lcall
cwtl
push
mov
pushf
lret
jge
std
push
pusha
push
int
or
add
adc
out
clc
stos
in
iret
repz
pop
mov
std
jnp,pt
ss
sub
sub
loope
nop
pop
neg
dec
inc
fists
mov
int3
sub
mov
xchg
divb
sub
lock
mov
test
arpl
movsb
mov
adc
or
stos
push
aas
stos
xor
ds
jno
ds
int3
pop
push
in
aad
sahf
dec
popa
mov
inc
xchg
rorb
clc
add
sub
sub
sbb
cmp
out
xchg
sbb
push
jb
ljmp
pop
aam
add
pop
inc
scas
mov
icebp
ja
lahf
int
xchg
sbb
jge
mov
add
mov
cmc
mov
outsl
mov
je
outsb
stos
out
or
notb
sub
xchg
flds
int3
rorb
xchg
into
icebp
popf
mov
cmp
pop
shll
add
add
cmp
inc
mov
rcrl
and
into
insb
pop
mov
insl
mov
xor
subl
mov
aam
sub
mov
fs
mull
ret
pop
lods
in
pop
pop
dec
inc
push
je
mov
pop
sub
xchg
aas
stos
jno
stc
xor
mov
ret
ljmp
adc
xchg
push
test
cmp
js
mov
mov
shll
fsts
ljmp
sbb
add
cld
cli
push
xchg
jge
jle
stos
stos
or
jmp
cmp
jae
sub
mov
je
sbb
sarl
fistps
adc
push
cmpb
and
and
sub
imul
hlt
or
dec
sub
outsb
in
or
testl
jbe
jnp
mov
mov
jle
fstpt
mov
xlat
and
push
rcrb
roll
popf
insl
loope
push
test
jecxz
mov
mov
loopne
inc
lods
ljmp
mov
mulb
push
gs
mov
mov
inc
or
in
movsb
mov
adc
js
mov
jg
xor
ja
stc
dec
aaa
stc
in
das
xor
adc
pop
test
dec
push
push
or
jle
popl
dec
ja
adc
xor
arpl
inc
mov
into
mov
sub
and
jge
stos
or
and
mov
fbstp
jmp
cli
push
stc
add
imul
push
or
add
add
mov
cli
cmp
mov
ja
enter
add
pop
add
scas
mov
ja
or
out
sub
cmp
pop
scas
outsb
mov
pop
jg
outsl
dec
fistpll
xchg
add
xor
mov
outsb
ficoms
dec
scas
inc
xor
xchg
cmp
cld
cli
or
add
loop
add
inc
daa
shlb
push
jnp
call
cmp
mov
jbe
or
jge
pusha
cmp
lea
mov
lcall
mov
ljmp
insl
into
mov
pop
pop
arpl
mov
stos
lock
loope
std
andl
mov
xor
in
jae
xor
mov
xlat
es
cmp
pop
pop
aas
adc
cmp
cmpsl
pushf
subb
mov
xor
aaa
cmp
and
push
inc
lock
jnp
mov
aas
in
mov
xchg
sub
cmp
scas
stos
int3
mov
enter
test
out
jl
pop
insl
lods
jo
adc
andb
mov
jno
sahf
push
jl
mov
sub
call
shll
sbb
test
test
push
repz
push
add
sub
shrl
jns
push
xchg
mov
int3
out
xchg
popf
cmp
bnd
aas
dec
in
dec
sub
xlat
movsb
xchg
jge
ja
fmuls
adc
shlb
sbb
xor
push
out
inc
lock
rcl
clc
pop
pop
aas
sbb
dec
mov
stos
inc
sbb
mov
inc
dec
in
test
jns
nop
sti
adc
cmp
fisubs
pop
sti
mov
addb
cmp
imul
lea
push
int3
outsb
xchg
into
cmc
and
ficoml
outsb
add
out
mov
fstps
sbb
popf
mov
rolb
data16
aas
jle
inc
lcall
shld
dec
mov
sbb
fstl
std
mov
or
jbe
aas
xor
or
or
ficompl
mov
stc
daa
push
pop
out
repz
sbb
sti
ret
out
icebp
jno
xor
push
xchg
or
mov
loop
pop
sbb
and
push
jmp
into
fidivl
sub
out
inc
sahf
pushf
call
mov
cwtl
loop
pop
in
lock
insl
ljmp
mov
xchg
xorl
push
add
lds
pop
mov
cmp
pop
sub
dec
inc
or
enter
mov
and
push
dec
pushf
and
mov
inc
cmp
iret
mov
mov
or
and
mov
jnp
lahf
enter
or
rclb
outsb
push
mov
cltd
mov
sbb
hlt
pop
sti
push
pop
adc
inc
cmp
int
adc
js
inc
lea
jnp
adc
in
sbb
xchg
icebp
ljmp
hlt
cwtl
mov
dec
addr16
sti
jp
mov
mov
xor
jnp
or
mov
add
into
xor
pop
dec
mov
or
subb
cmp
jb,pt
js
pop
loope
push
outsb
std
hlt
mov
jp
leave
cmp
or
push
cmp
hlt
inc
mov
xchg
xchg
in
mov
fnstenv
test
aad
in
xchg
testb
pop
mov
inc
and
pop
xor
icebp
inc
jle
jo
or
int3
inc
pusha
mov
jne
insb
add
subb
cli
or
mov
sub
jo
add
jo
jns
rcll
xchg
notb
addb
and
outsl
push
mov
mov
ret
das
mov
push
sub
das
movsb
sbb
fistpll
push
jecxz
cmp
into
mov
dec
and
and
pop
out
add
call
fdivr
xlat
mov
or
pop
ret
cmp
arpl
mov
sarl
cwtl
fwait
cmp
add
lock
int
outsb
sub
ljmp
test
inc
mov
out
negl
nopl
int
pop
mov
ret
rcll
add
jge
push
ss
fmul
inc
pop
mov
test
test
sbb
call
cmpsl
mov
in
ret
lods
push
inc
dec
add
mov
addr16
loope
add
stc
mov
cld
in
inc
jnp
xor
lods
add
repnz
dec
sub
adc
xlat
push
rcll
jmp
and
daa
test
xchg
inc
push
inc
mov
pop
call
movsl
and
mov
imul
sbb
in
and
adc
pop
push
jo
sar
int
aad
int
orl
mov
mov
mov
xchg
pushf
cmc
lods
lahf
push
aad
fucomi
xorb
stc
add
lcall
mov
jmp
call
mov
rcrl
jge
dec
cmp
sub
dec
pop
int3
push
shrb
das
sbb
dec
add
mov
fimuls
sarb
insb
pop
rorl
jbe
idivl
inc
or
ss
outsb
cli
mov
sarl
stos
cmp
add
movsl
cmp
xchg
sub
les
fistl
lods
add
fs
stos
or
jb
outsb
loop
mov
mov
cwtl
mov
dec
lods
testb
aad
clc
add
enter
rorl
je
pop
inc
add
pusha
sbb
dec
jl
movb
dec
pxor
divb
inc
inc
ja
sub
int3
xor
hlt
sub
movsb
mov
fisttpll
cld
cs
nop
in
fcoms
addr16
push
jno
jae
jo
clc
xor
inc
stc
and
sbb
pop
arpl
push
fidivrs
sbb
ljmp
in
lahf
mov
push
dec
inc
in
insl
cmp
cld
lahf
lea
adc
jbe
push
or
sahf
dec
mov
in
cmp
lock
mov
sub
andb
out
inc
adc
fdivl
test
mov
les
pusha
pop
test
push
dec
cmp
call
adc
out
adc
mov
fistpll
mov
mov
mov
pusha
ret
and
mov
loop
xchg
or
inc
filds
les
adc
aas
pop
push
jb
stc
out
and
jne
mov
add
pop
add
popa
sbb
push
addr16
jmp
mov
and
inc
enter
inc
insb
pushf
dec
les
arpl
std
out
outsb
rcrb
jle
cli
xchg
mov
lcall
jmp
pop
inc
adc
shr
call
push
sub
xlat
mov
push
pop
rorb
jne
mov
decb
in
pop
adc
push
mov
test
xor
nop
jo
mov
xchg
jecxz
or
mov
push
sub
pop
sub
pop
ret
ficoml
xlat
bound
mov
xchg
cli
xchg
es
sbb
jp
ss
cs
dec
icebp
pushl
std
adc
mov
pop
dec
imul
loope
jg
cltd
lahf
mov
and
lret
aaa
out
lock
or
inc
decb
js
mov
dec
dec
nop
jl
inc
sti
and
test
fwait
sbb
xchg
bound
xor
in
or
jle
inc
cmp
fsubl
cwtl
inc
out
pop
cmpsb
loopne
mov
icebp
sub
push
popf
jne
sti
mov
cli
lea
fs
cmp
jae
popf
insb
dec
sbb
out
out
sahf
ret
xor
sub
es
popa
adc
jl
sub
jae
icebp
or
enter
ds
pop
stos
das
xlat
les
mov
sub
lcall
stc
rclb
push
dec
push
pusha
jle
dec
xchg
pusha
sbb
int
push
xchg
mov
cmp
cmpsl
sti
pop
cltd
mov
ret
jmp
xchg
cmp
mov
jmp
pop
imul
pushf
xchg
fs
push
gs
jmp
fistpll
pusha
loope
jmp
jl
sbb
pop
ret
insl
push
sub
xchg
mulb
adc
mov
stos
rol
cmpsb
mov
insl
mov
sub
cmp
adc
in
mov
loopne
lea
sbb
bnd
test
rcl
daa
aam
jp
jno
sub
stos
outsb
pop
rorb
bound
dec
sub
cltd
shl
fiadds
xchg
add
mov
fstpl
xlat
fcmovnu
sub
xchg
movsl
dec
pop
mov
mov
test
lcall
mov
test
pop
dec
mov
popf
cli
mov
jae
xchg
rcr
or
andb
scas
rolb
sub
pop
cli
stos
fisubl
mov
lods
int3
add
fldl
ljmp
loopne
cltd
adc
or
jecxz
sbb
inc
sub
and
insb
movsl
dec
data16
xchg
fwait
adc
lea
dec
scas
mov
xor
mov
cmpsl
cld
test
loop
or
xor
je
icebp
fstpt
loope
dec
in
push
in
test
cld
sub
sub
xor
jne
xchg
fdivs
lds
cmp
dec
push
mov
cltd
xlat
jg
movzbl
pusha
sub
adc
pop
push
cmpsb
popf
dec
enter
lods
leave
inc
sub
out
sub
push
imulb
rclb
ret
mov
jmp
je
aad
mov
mov
cmpsl
insl
fsubrs
fimuls
lcall
jnp
sbb
fistpll
outsb
adc
jb
hlt
jnp
mov
aas
dec
pop
add
jmp
out
ss
js
jae
sbb
lcall
sub
cmpsb
xchg
xchg
push
outsb
icebp
nop
hlt
xor
adc
sbb
out
add
push
dec
jg
push
imul
push
test
test
dec
fildl
push
in
in
mov
xor
ss
sbb
lock
xchg
decb
mov
jne
or
mov
jne
sub
dec
jno
pop
std
push
push
mov
je
sahf
aam
jp
dec
cwtl
mov
cli
inc
pop
repnz
cmp
jb
fwait
in
imul
mov
lea
adcb
mov
push
jp
jmp
cmc
gs
or
inc
pop
scas
xchg
mov
cmpsl
adc
hlt
int
daa
lret
jo
cmp
pushf
xchg
out
sbb
das
sbb
add
cmpb
test
mov
push
xorl
nop
mov
lock
inc
jle
mov
fidivrl
push
pop
fisubrl
insb
out
mov
dec
sbb
lcall
ja
ds
push
mov
pushf
js
adc
je
jge
add
clc
mov
insb
jbe
adc
bound
ret
fiadds
cs
test
push
push
addl
mov
leave
pop
pop
pusha
cltd
lods
mov
jnp
pop
sbb
jp
sbb
ss
or
push
mov
inc
add
mov
inc
shl
aas
pop
sbb
shll
push
and
dec
push
out
cld
data16
leave
mov
jo
mov
test
mov
cmp
lea
xor
or
mov
out
xchg
push
dec
sbb
sbb
push
push
lds
or
es
xor
cld
mov
mov
mov
xchg
jnp
fisubrl
rorb
stos
push
mov
pusha
jl
es
ja
mov
push
adc
cmp
in
pop
jae
dec
aad
decb
inc
stos
and
mov
je
pusha
out
subb
mov
mov
xchg
fadds
leave
push
or
xor
arpl
sbb
pusha
adc
or
jno
xor
fcmovbe
jp
ds
nop
mov
repz
adc
ret
push
mov
repz
xchg
xchg
adc
movsb
mov
mov
sub
jbe
xor
mov
or
or
loop
and
je
lea
push
iret
idivl
push
loope
flds
adc
jp
or
in
adc
adc
push
pushf
loopne
aaa
xor
shlb
decb
xchg
ror
test
mov
mov
mov
jbe
mov
aam
pop
xchg
jbe
arpl
dec
lret
xor
xchg
std
out
xlat
jg
inc
xor
pop
mov
jg
push
ss
jle
and
add
cmpsl
mov
flds
cmpb
add
and
sbb
adc
xchg
out
es
out
or
sbb
and
inc
imul
mov
ret
popa
jbe
lcall
jl
jbe
or
xor
es
in
decl
jle
lock
add
inc
incb
push
jecxz
arpl
testb
push
pop
add
sbb
mov
pop
add
jl
aaa
mov
mov
add
dec
ret
mov
dec
dec
inc
mov
jbe
dec
push
cmp
jnp
mov
mov
mov
sbb
insb
and
pop
adc
sbb
inc
bound
mov
pop
jno
ljmp
bound
in
out
dec
and
jle
xor
test
enter
or
movsl
ffree
aad
jbe
divl
sbb
adc
das
dec
cmpsl
or
pop
mov
sub
xchg
mov
push
adc
in
popa
mov
push
pushf
lods
pop
fxch
xchg
mov
ljmp
into
out
or
sub
or
mov
cmc
icebp
aaa
cmc
int
rolb
inc
cmc
test
fldt
push
ret
mov
subb
sti
pusha
sbb
pop
add
adc
cmp
data16
pop
sub
push
dec
mov
pop
adc
cwtl
fbstp
and
mov
mov
sub
test
fsubrs
mov
cmc
aam
cs
and
cs
mov
fsubr
daa
sub
jnp
jne
sub
pop
out
lods
jmp
in
pop
inc
sub
je
decl
jbe
pop
mov
movsl
int
jl
and
repz
push
cmc
jl
mov
jl
dec
and
in
mov
insb
stos
inc
lods
pop
call
out
and
mov
je
es
cli
aaa
mov
fadds
dec
fstpl
clc
and
fistpl
loope
andl
movsb
and
inc
loopne
cmp
in
push
lea
jnp
stos
dec
mov
and
xor
call
mov
scas
jp
xchg
imul
pop
sbb
stc
inc
fdivrs
pop
loope
repz
jns
aad
pmulhw
dec
arpl
daa
lret
or
cli
mov
sarl
mov
add
leave
ss
jle
sub
in
xor
icebp
fisubrs
inc
dec
cmp
sbb
mov
les
and
or
enter
xchg
loop
inc
sub
cmp
scas
mov
sbbb
mov
test
xchg
mov
lock
and
icebp
inc
pop
insb
pusha
inc
dec
std
enter
pop
xchg
add
inc
bound
mov
roll
pop
iret
xor
sub
dec
ja
xor
js
pop
jle
test
cmp
jns
scas
mov
jmp
sub
xchg
inc
dec
mov
insl
stc
sub
popa
pop
cmc
out
insb
jns
and
icebp
cmp
fwait
cli
subl
jmp
cmp
icebp
mov
imul
icebp
mov
and
loope
rorl
cmp
das
popf
jns
sbb
add
lahf
mov
je
je
dec
ljmp
cmpsb
loopne
pusha
adc
int3
sbb
imul
sbb
sbb
out
nop
shr
or
negb
push
cmp
mov
cmpsl
push
stos
arpl
push
mov
out
movsl
arpl
or
call
push
push
orb
arpl
ss
and
jmp
pop
aas
pusha
adc
inc
movaps
xor
sub
sbb
out
adc
fdivs
lea
mov
out
sub
jae
cmp
xchg
mov
pop
cmp
fdivl
int3
cmpsb
push
jne,pn
dec
fcoms
mov
data16
outsl
mov
aaa
mov
std
outsb
cmp
xlat
push
push
dec
adc
adc
inc
in
movsb
jg
int3
daa
xchg
in
into
and
and
je
sbb
lcall
out
iret
mov
adc
sub
js
repnz
jnp
icebp
mov
ja
lock
mov
int3
sahf
cwtl
jp
in
cmpsl
inc
mov
test
and
lea
push
adc
fdivl
pusha
into
inc
jecxz
push
dec
ret
xchg
ret
cli
cmc
xor
dec
mov
aad
mov
ja
sub
fs
xlat
test
lret
mov
jg
sbb
xchg
xchg
xchg
xor
lds
daa
mov
jae
or
fistpll
and
out
mov
aas
push
adc
lods
jge
in
mov
and
sub
faddl
pop
push
jo
mov
mov
mov
xchg
rcll
xor
fidivrs
test
mov
jp
fdiv
push
sti
dec
mov
daa
sub
sub
movsl
loopne
fs
pop
fldln2
int3
cli
hlt
sub
ret
sbbl
out
adc
xor
lcall
push
jle
sbb
mov
das
inc
test
ret
add
xchg
jge
mov
les
mov
data16
lock
dec
add
sub
add
cmp
push
jecxz
imul
cmp
lock
mov
cli
out
enter
mov
imul
popa
into
testb
push
dec
repz
in
inc
cmpsl
add
ror
cmp
cmp
and
fdivrs
mov
sub
sub
pusha
push
inc
or
aad
lcall
ss
inc
cmpsb
cli
and
sahf
andl
adc
xor
cmpl
repz
cld
dec
or
cwtl
fmull
jne
dec
mov
inc
ficomps
out
jmp
sub
clc
cli
inc
mov
xchg
out
out
lret
pushf
lock
icebp
push
cmp
xorl
es
sbb
into
xor
movl
xor
mov
lret
ljmp
in
fnstcw
xchg
nop
lret
sub
xchg
cmp
xchg
stc
cmpsl
pop
xor
cld
dec
sub
jo
sbb
xor
mov
divl
adc
pop
inc
negb
jg
ss
mov
out
cmp
inc
insb
aaa
fstpt
es
jl
sbb
data16
nop
movsl
jge
ss
loope,pn
imulb
std
daa
jbe
sbb
jnp
jecxz
add
cmp
push
mov
outsl
pushf
cltd
shrb
add
xchg
pop
sbb
inc
nop
pushw
jno
pop
std
std
lcall
push
clc
sub
inc
push
dec
dec
les
loopne
lea
outsb
icebp
sahf
movsl
stos
pop
adc
cmp
in
sarl
rcll
add
pop
repnz
lds
dec
mov
xchg
jb
jnp
inc
and
call
stos
lods
push
pop
mov
pop
es
fwait
cmp
push
pop
add
xchg
push
popf
aaa
adc
lcall
inc
lods
sub
stc
adc
push
adc
sbbb
lret
jle
dec
les
adc
jle
jmp
pop
mov
ficoml
dec
sbb
sub
outsb
or
mov
mov
filds
data16
test
lcall
sub
inc
call
mov
pop
sbb
hlt
mov
movsl
std
negl
mov
icebp
dec
jl
pop
outsl
outsl
lret
dec
mov
pop
and
adc
adc
sbb
cld
add
cwtl
loopne
mov
sub
aas
pop
cmpsb
sahf
mov
stos
pushf
mov
vaddsubps
push
les
lahf
mov
repnz
arpl
aam
or
inc
adc
cmpsb
mov
dec
rolb
inc
xlat
mov
mov
sub
push
outsb
and
cltd
popa
inc
pop
aam
flds
lahf
jp
adcl
lods
daa
pop
dec
xchg
aad
add
loope
in
in
and
inc
dec
in
or
fwait
std
dec
cmp
jmp
adc
inc
push
hlt
jnp
cmp
jg
pop
cwtl
int3
aad
repz
pop
adc
outsb
add
pop
or
js
fcoms
xchg
test
mov
cmp
mov
push
mov
push
outsl
adc
fcomp
pushf
pcmpeqb
imul
sub
dec
or
cld
xchg
jno
sub
cmp
cmp
jnp
and
icebp
fcompl
inc
pop
xorl
frstor
inc
cmp
jb
int3
out
or
push
adc
faddl
cli
rcrl
inc
lahf
add
cmpsb
cmp
add
roll
push
push
inc
mov
mov
sbb
lcall
push
jae
in
fdivp
pop
sub
push
sti
cmc
test
fs
mov
sub
sub
mov
push
dec
inc
leave
inc
fwait
add
add
mov
pop
push
jne
mov
add
into
into
cmpsl
pop
xchg
mov
mov
and
fisubrl
push
sub
je
adc
iret
pop
jae
and
jno
mov
les
sarl
incb
repz
in
fnsave
fucom
pushf
xor
mov
mov
fadd
inc
jp
mov
call
fnstcw
or
jb
add
fisubl
and
fcmovu
lret
divl
sbb
xor
mov
mov
test
ljmp
sub
in
lret
pop
int
loope
enter
mov
and
jp
sbbb
outsb
and
pop
mov
fisubrl
dec
pop
jb
dec
mov
push
sbb
ljmp
add
inc
sti
sbb
imul
dec
and
enter
iret
sub
or
fs
loop
mov
sub
in
int3
fwait
xor
aad
jno
push
sbb
mov
pop
shrl
inc
lret
jbe
mov
add
hlt
je
addr16
jg
call
sub
fldl
repnz
add
jns
das
cwtl
add
mov
ret
xchg
in
fadds
mov
xchg
push
lods
sbb
push
push
pop
and
xlat
dec
call
mov
inc
push
test
xor
xor
mov
mov
insb
lret
dec
rclb
sbb
add
inc
ds
adcl
jne
cmp
popa
xor
and
adc
pop
cmp
lds
fwait
addl
adc
daa
lret
andps
jns,pn
add
fildl
or
xor
nop
mov
fidivl
mov
ja
sti
jecxz
daa
popf
jl
mov
mov
repz
pop
les
out
sbb
loop
and
xchg
inc
or
ja
aas
paddd
mov
sbb
push
mov
test
sbb
sub
adc
shr
mov
shlb
ret
leave
lcall
mov
mov
cmc
and
ret
mov
push
fs
xor
nop
sbb
popf
lods
ja
push
pop
pop
bnd
inc
inc
xchg
int3
pop
jnp
sbb
jp
xchg
inc
aas
fildll
subb
pop
mov
xchg
enter
aad
jae
icebp
stc
cmpsb
sbb
mov
cmp
pop
inc
add
lahf
dec
jecxz
inc
nop
cmp
jp
daa
out
leave
xchg
mov
sbb
outsb
sbbb
mov
inc
pop
mov
lahf
cli
sub
in
decl
add
js
aad
loopne
cwtl
rorb
test
into
adc
out
add
or
imul
push
inc
or
les
push
adc
cmp
scas
rorl
fidivrl
pop
int
xor
inc
dec
pop
cltd
sbb
loope
or
and
out
addl
and
lods
or
int3
lret
adc
loope
out
xchg
and
or
dec
iret
js
mov
add
int
sub
andb
mov
movsb
inc
add
idivl
jge
mov
int3
push
lea
push
and
fwait
or
xchg
push
inc
xchg
xchg
int
jl
jle
sub
mov
add
iret
adc
xchg
nop
lret
mov
mov
ror
and
and
mov
jle
in
fwait
rolb
add
push
pushf
mov
xchg
jle,pt
outsb
test
rcll
pop
cli
iret
mov
int
roll
lcall
adc
fiadds
hlt
push
in
aas
icebp
sub
pop
cmpsl
dec
dec
clc
movsb
int3
enter
lret
icebp
jae
inc
mov
mov
and
sub
xchg
hlt
fstpt
mov
cmp
outsl
shl
sbb
test
lea
cltd
cmp
pop
dec
mov
out
cmpl
cmpsl
xor
jg
sbb
imul
pop
inc
mov
inc
xchg
sbb
jge
jno
pop
push
ss
stc
xlat
lds
jae
add
dec
dec
sub
cld
mov
lret
mov
adc
adc
sbb
les
std
cmpsb
jmp
je
mov
mov
scas
ror
push
pop
mov
cmp
add
push
pop
add
push
inc
pop
and
rorl
or
inc
jo
cli
xor
mov
xor
and
fcoml
sub
push
xor
arpl
xchg
repnz
pop
push
pop
js
jmp
jb
inc
or
aad
pop
das
or
popa
pop
pop
fcmovne
notl
push
cmp
fisttpl
insl
fwait
pusha
mov
mov
stc
add
hlt
insl
sbb
bound
pop
fsubrs
jnp
lock
xlat
fsubp
test
xchg
xchg
xor
pop
inc
sbb
shll
cmp
fbld
push
popa
movsl
test
loopne
inc
xor
and
das
or
pop
cmpl
push
ffree
ret
test
dec
mov
dec
dec
sub
sbb
loopne
push
inc
or
das
cmpsl
inc
add
std
fs
lcall
mov
pop
cli
lcall
dec
jbe
xchg
inc
and
mov
jl
adc
mov
lock
ja
cmpsl
out
or
jge
arpl
or
push
jle
dec
int3
cmp
xchg
out
mov
mov
mov
pop
or
fisttpl
mov
sahf
lods
jl
xchg
loopne
lods
hlt
jae
or
inc
gs
adc
sub
jbe
ds
xor
xor
les
xchg
in
popa
xor
cmpsb
jne
nop
shlb
push
out
dec
mov
in
xchg
xor
shr
ret
pop
adc
xchg
jnp
cmpsb
into
inc
pop
dec
jle
scas
repnz
mov
xchg
lret
jns
stc
push
xor
repnz
sub
arpl
adc
dec
pusha
xor
hlt
or
mov
push
inc
mov
stos
aam
sub
xchg
add
push
sahf
mov
cmp
sub
add
ffree
push
dec
xchg
push
push
cmc
inc
or
sbb
xor
dec
cmpsb
mov
ret
mov
loop
and
mov
push
xor
arpl
jns
clc
sbb
jge
push
inc
push
jl,pt
inc
xchg
dec
cld
dec
loopne
pop
mov
in
out
cmpsb
jnp
loope
loope
jns
dec
mov
movsl
test
lock
outsl
shlb
ret
pushf
dec
movsb
out
out
std
hlt
jl
fimuls
mov
sbb
xchg
sbb
sub
hlt
mov
add
rcl
push
testb
mov
test
xor
xchg
aaa
xor
mov
inc
sub
mov
push
stc
lods
jne
adc
pop
xchg
daa
push
inc
or
sarl
movsb
mov
movsl
sar
out
rorb
clc
jle
mov
addr16
push
add
pop
in
loopne
push
ret
xchg
push
iret
lahf
mov
mov
and
int3
dec
xor
dec
lea
mov
test
lret
mov
add
and
outsl
test
lcall
sub
cmp
push
in
ss
ret
jle
into
and
in
push
adc
mov
divb
fdiv
lret
mov
jae
lock
mov
mov
xchg
insl
mov
pushf
adc
jecxz
mov
in
or
mov
push
cwtl
shll
sub
jg
popf
xchg
sarb
not
repz
ds
test
add
imul
cs
push
ds
ficomps
leave
inc
les
test
ja
es
popa
mov
iret
sub
jg
ds
cmc
je
add
xor
fs
mov
clc
sub
jno
cmpsl
or
out
pop
xchg
jno
addr16
in
jnp
data16
jne
test
jecxz
cmpsb
push
out
sub
iret
sub
js
movsb
out
pop
sub
in
jge
in
pop
cmp
stc
je
add
push
not
cltd
sbb
push
test
bound
add
rcrb
arpl
xchg
sbb
dec
mov
aas
iret
cmp
or
pop
out
mov
btr
lds
jp
add
pusha
push
clc
rclb
fimuls
lods
jmp
push
fstpl
xor
out
stos
cld
ret
jge
lret
xchg
add
xchg
lcall
shll
test
cmp
out
fsubrp
lods
sbb
add
adc
mov
cmp
cmp
dec
ds
sti
mov
mov
leave
scas
push
por
ja
dec
cmp
inc
cmp
gs
scas
push
inc
repz
sti
pop
fs
sti
sti
sub
das
lcall
pop
mov
lea
mov
jg
mov
sti
jmp
pop
fcompl
lds
jnp
push
cmp
push
xor
or
pop
rcll
jecxz
mov
xchg
or
and
adc
push
pushf
loop
les
xchg
sbb
inc
fucomp
jmp
mov
dec
out
mov
insb
inc
mov
push
cltd
data16
fiadds
mov
push
ljmp
mov
gs
and
les
mov
jno
pop
in
aas
jmp
ja
daa
xlat
mov
push
adc
and
fcomip
mov
sub
and
add
sub
sbb
ljmp
stc
ljmp
daa
jl
xor
out
jp
xorb
outsl
cmp
mov
inc
mov
sbb
inc
xor
movsb
leave
mov
lods
inc
repnz
push
and
mov
dec
mov
js
add
dec
sub
jo
les
push
mov
sbbl
sbb
jle
sbb
mov
inc
int3
dec
stc
int
xor
push
xor
xchg
and
pusha
mov
sbb
lret
shlb
xorl
dec
and
push
jne
xchg
pop
in
add
js
mov
push
pusha
mov
xchg
add
das
or
outsb
pop
std
mov
jg
aas
pop
imul
mov
mov
roll
cmpsb
das
and
mov
push
popf
stc
sub
ffree
movsl
lods
and
cld
mov
faddl
add
and
push
sarl
loop
push
mov
adc
add
jns
pop
insl
push
mov
add
xchg
sti
in
jmp
mov
and
or
pop
insl
and
jmp
add
push
ja
daa
inc
call
mov
roll
add
pop
add
mov
push
sub
inc
in
cmp
test
ja
sub
aas
adc
int3
lahf
dec
in
movsb
jae
lcall
xchg
push
xchg
or
das
arpl
sbb
popa
or
inc
fwait
mov
xchg
jne
stc
rolb
jns
pop
push
lret
or
inc
fdivrl
sub
xchg
cmp
loopne
mov
jns
and
inc
lcall
inc
cmc
ret
or
jne
add
push
fsubrs
divb
mov
mov
xchg
into
std
inc
in
mov
dec
mov
mov
test
mov
cs
xor
clc
aas
pop
jo
pop
dec
jnp
xchg
inc
mov
test
test
cmp
push
sahf
jmp
sbb
adc
dec
fstpl
jbe
pop
push
mov
push
loope
aad
roll
stos
mov
dec
sub
das
mov
sbb
mov
repnz
push
jmp
pop
xchg
and
pushf
cmp
push
add
movsl
outsb
insl
jge
lds
sbb
xor
push
sub
xchg
gs
mov
jmp
cld
mov
xchg
jno
xchg
push
es
jge
xchg
add
and
dec
insb
xchg
xor
nop
fidivs
mov
push
jecxz
cwtl
pop
sub
and
pop
mov
imul
add
es
jge
aad
lcall
jg
mov
cwtl
adc
cmp
hlt
int3
xchg
cwtl
scas
hlt
cmpsl
adc
cli
loop
cld
lods
lahf
jnp
shr
dec
pop
mov
dec
enter
cwtl
ret
push
and
pop
lahf
mov
add
add
mov
mov
stos
ljmp
xchg
aad
mov
xor
lret
lock
shlb
aas
xor
add
jge
inc
loope
jbe
adc
in
stc
scas
or
rol
push
cmpsl
fadds
cmpsl
xor
xchg
popa
mov
adc
inc
pushf
jo
or
stos
mov
push
mov
push
repz
xor
les
mov
jp
stos
cmc
cmc
mov
and
adc
dec
sahf
repz
pop
sub
imulb
sub
hlt
scas
leave
int3
les
jae
ds
inc
js
leave
je
lods
out
push
cwtl
lds
lods
xchg
addb
ret
sbb
push
or
ljmp
shll
test
hlt
negl
testb
add
dec
adc
into
sbb
rcr
mov
mov
scas
outsl
inc
jb
insb
mov
adc
sbb
call
and
or
mov
icebp
insb
push
pusha
out
loopne
fdivrl
sbb
outsb
add
test
push
fwait
addr16
jecxz
cmpsb
stos
add
out
mov
jmp
and
lock
dec
dec
js
jle
mov
repz
dec
ficoms
push
sti
adc
jno
stc
cmpsb
or
pop
adc
sbb
and
imul
sahf
sub
and
out
jns
iret
cmp
sti
or
pusha
sub
lock
adc
cmp
cmp
std
push
add
mov
int3
call
xchg
jle
das
gs
dec
sbb
pop
mov
jmp
outsl
mov
push
mov
sarl
repz
mov
inc
mov
incl
in
int3
jns
out
pop
leave
pusha
sub
mov
xchg
js
sbb
and
lahf
inc
sahf
mov
imul
add
lds
push
cmp
es
movsb
sub
jne
mov
pop
jne
sub
mov
movsl
push
xor
inc
jge
pop
mov
sahf
testb
sub
outsb
jl
push
lock
push
and
adc
insl
xor
or
fwait
inc
sbb
loopne
pop
gs
lret
push
dec
andl
adc
xor
scas
in
push
int3
inc
lret
iret
data16
lods
les
sub
daa
mov
jmp
pop
mov
jg
sahf
outsb
mov
loopne
imul
bound
push
movsl
push
and
or
fsubrs
add
xchg
cli
cmp
cmc
or
shl
cwtl
fmuls
xchg
int
pop
add
xor
lock
mul
pop
ja
sub
stc
jge
and
mov
cmp
pop
sbb
dec
outsb
lods
inc
pop
and
pushf
fs
mov
in
jo
addr16
aad
repz
adc
enter
add
in
sbb
mov
sub
mov
lods
xchg
push
fstps
jne
cmpsb
testb
pushf
pop
sbb
incb
push
push
pop
cmpsl
sub
xchg
imulb
pop
and
xorl
push
cmp
mov
add
incb
xchg
lcall
jmp
mov
sub
xchg
push
shrb
iret
jns
add
mov
shrb
jg
push
cltd
or
jmp
std
push
data16
mov
adc
cmp
sbb
inc
lret
mov
leave
push
mov
pop
cmpsl
mov
cmpsb
mov
shrl
rorb
popa
xchg
in
fsubrl
sahf
popf
push
inc
bound
mov
push
clc
fidivrl
mov
ficoml
adc
adc
loope
mov
cltd
mov
xor
lret
insl
arpl
or
test
mov
or
pop
pop
in
stos
pushf
xor
cmp
pushf
adc
xor
cmpsb
rcrb
lock
sbb
in
mov
rol
xor
adc
fisubs
test
inc
pop
cmp
inc
push
inc
sub
scas
and
and
flds
mov
enter
repz
adc
js
int3
xchg
fs
adc
aas
pop
out
mov
and
dec
outsb
jno
mov
aam
sub
add
mov
popa
adc
test
fs
add
xor
xchg
push
or
and
cmp
sti
xchg
add
jmp
lea
mov
divb
loope
int
fsubrl
rol
adc
pushf
aaa
mov
xchg
add
imul
loop
cmp
aas
gs
inc
add
out
xchg
xchg
jp
test
push
sub
rol
cmp
add
cli
out
jg
adc
nop
stos
dec
pop
mov
adc
add
add
sti
mov
ds
ret
in
aaa
inc
lcall
sbb
mov
dec
sar
or
or
arpl
cmp
out
and
push
ljmp
sub
imul
pop
mov
mov
mov
rolb
xchg
xorb
int
rcrl
sti
addr16
incl
repnz
adc
fdiv
cmpsb
psubusb
js
test
imul
cltd
arpl
les
pcmpeqb
or
mov
jnp
cli
pushf
jmp
hlt
fs
leave
push
pushf
ss
or
mov
adc
mov
ror
xchg
enter
icebp
pop
dec
pop
mov
shl
jmp
push
jae
insl
adc
pop
cmp
jmp
enter
jne
stos
sub
lods
addr16
jb
xchg
pusha
xchg
inc
fsts
mov
pop
and
dec
pop
popa
xchg
jo
and
jo
repnz
mov
sub
inc
sub
outsl
mov
pushl
sub
fwait
push
nop
cmp
jo
es
out
icebp
cmpsl
ljmp
insb
rorb
sbb
pop
inc
jecxz
push
xchg
fnstcw
jbe
aaa
popf
and
cmpsl
insl
out
in
or
pop
xchg
lcall
bound
cmp
inc
mov
pop
xor
jle
sub
mov
fsubr
xchg
sub
cmpsb
in
xor
pushl
popw
sub
jge
loopne
cmp
xchg
xor
and
sbb
icebp
in
aas
test
add
dec
mov
gs
add
pop
sarl
adcl
jmp
cmp
inc
push
fidivl
xchg
xor
push
notb
cmpsb
jmp
out
inc
mov
pop
imul
push
jp
out
roll
shl
and
stos
andl
out
push
aad
rcrl
jmp
out
fstl
inc
inc
adc
jecxz
dec
rep
movb
sub
cmp
out
inc
into
outsl
mov
or
fdivs
cmovae
js
or
xchg
lods
cmc
stc
sbb
mov
or
nop
add
dec
sub
mov
mov
ret
sub
jnp
mov
mov
xchg
jns
xor
mov
mov
add
cmp
inc
mov
lea
dec
xor
dec
pusha
ret
in
dec
mov
mov
test
push
aas
sub
cld
jnp
xorl
dec
test
imul
mov
outsl
in
out
cmp
add
mov
jae
addr16
jo
sub
lret
xchg
inc
lock
mov
mov
sub
or
rorl
and
dec
mov
xchg
jo
les
fst
jb
out
inc
aam
mov
cmp
es
sbbb
inc
mov
rolb
sbb
sub
ljmp
mov
test
push
test
sbb
repz
jne
cmpsl
push
in
adc
inc
ja
push
pop
jbe
fstps
push
lahf
subb
adc
xchg
fwait
jg
pop
xchg
fwait
push
inc
fadds
cmp
int3
mov
cli
add
fnstsw
push
outsb
ret
inc
sbb
pop
push
mov
mov
xor
bound
xlat
in
imulb
call
mov
mov
leave
ljmp
add
xchg
test
pop
jecxz
mov
or
shrb
cmp
insl
dec
mov
xchg
test
mov
jne
dec
shlb
stos
clc
fsub
sbb
icebp
bound
mov
pushf
mov
xchg
cld
sbb
jns
xchg
movsl
aaa
mov
add
jns
testl
rcl
inc
outsl
scas
enter
jns
or
dec
sti
sbb
lock
pop
pop
and
mov
js
cmp
mov
pop
jl
das
rcrl
push
cmc
js
cld
repz
cmp
dec
imul
push
or
lods
sbb
cmp
cli
scas
loop
and
dec
mov
insl
sub
sarl
cmp
rcl
mov
jle
push
lods
test
mov
leave
xchg
out
and
xchg
cmp
loopne
lea
sahf
pop
mov
mov
sub
mull
rorl
subps
bound
test
xor
and
out
adc
cld
mov
lock
inc
ss
mov
adc
fists
push
add
push
aad
inc
adc
pop
adc
fmuls
xorl
imul
inc
les
lea
mov
mov
repz
cmp
dec
add
into
loopne
inc
mov
imul
sarl
or
jecxz
push
inc
ds
out
cmp
cld
jne
adc
ja
not
xchg
in
or
arpl
arpl
sbb
or
mov
je
mov
mov
mov
popl
jmp
xchg
jg
dec
cmp
and
ja
sbb
sbb
int3
mov
neg
sti
ja
sti
popf
sbb
clc
sub
fstp
mov
jp
adc
cld
push
or
sbb
jmp
outsl
push
push
inc
popa
inc
add
jle
popa
stos
and
je
nopl
push
xor
add
cmp
sbb
xchg
cs
push
lahf
hlt
insb
and
push
mov
mov
mov
adc
inc
scas
sub
inc
xchg
bound
jo
mov
or
pop
jno
iret
cli
in
xchg
inc
adc
out
leave
cltd
sbb
mov
outsl
lcall
pop
std
or
pop
mov
fiadds
push
ja
les
adc
push
hlt
mov
pop
jno
adc
loopne,pt
sbb
jp
cmpsl
and
jg
lea
or
daa
sbb
scas
add
push
addr16
movsl
mov
adc
inc
addr16
sbb
movsl
fcmovnbe
cmp
inc
divl
mov
adc
popa
pop
xor
shll
xor
add
das
xchg
lock
adc
xor
cmp
loop
xchg
cmp
jmp
shlb
sbb
dec
fwait
inc
xlat
aas
pop
lret
lret
sbb
clc
shll
or
mov
into
test
adc
aaa
cmpsl
lods
lock
enter
pop
xchg
cli
pop
adc
dec
movl
lods
mov
inc
push
mov
xchg
loopne
cmpsl
push
push
daa
and
mov
pusha
lcall
add
pop
add
mul
jmp
cmpsl
enter
inc
cmc
and
fsubs
popa
fdivr
xchg
xor
xor
in
cltd
dec
in
and
shlb
sub
fs
shl
and
xor
and
mov
shlb
scas
stos
shl
mov
fsubl
js
jb
insb
call
out
add
imull
dec
loopne
jge
ret
sub
sbbb
xchg
pop
mov
pop
add
push
dec
inc
neg
outsb
loope
js
ljmp
jg
sub
jne
jg
xchg
shrl
jp
mov
int3
push
clc
mov
push
pop
in
pop
popf
push
daa
fidivl
jmp
leave
out
aaa
test
dec
hlt
inc
dec
sbb
stos
rcrl
cmp
ret
stc
aas
sarb
push
cli
das
int3
dec
mov
paddusw
mov
ja
and
mov
push
loop
cmp
lea
popf
or
arpl
jl
nop
dec
fwait
icebp
pop
jecxz
jae
xor
xor
inc
scas
shll
mull
enter
dec
cld
lcall
adc
cmpsb
ficoml
cli
out
ret
inc
push
out
sbb
sbb
mulb
mov
jbe
mov
inc
mov
and
inc
sbb
test
pop
rclb
cltd
inc
pop
or
test
scas
push
xchg
adc
jl
adc
into
or
out
adc
xor
mov
fistpll
scas
sbb
mov
movsb
mov
xchg
push
sbb
lods
mov
in
dec
ds
imul
jne
pop
mov
bound
dec
adc
loope
aad
mov
test
scas
orb
in
insb
xor
aaa
mov
cmp
sub
push
dec
pop
rorb
xor
test
fs
cld
cld
mov
popf
sbb
ret
dec
nop
in
in
lods
mov
jl
nop
fisubl
sti
add
sub
loop
push
or
or
cmpsb
lea
cli
pushf
mov
mov
jbe
daa
mov
sbb
push
sbb
mov
mov
ss
hlt
ret
push
sti
lds
roll
mov
jne,pn
mov
pop
clc
sbb
xchg
push
int
in
sub
jmp
inc
jo
sarb
pop
pusha
jl
xor
sarb
js
cmp
mov
aad
js
cmp
mov
jbe
push
ftst
sub
xor
fs
mov
lret
xchg
pop
mov
out
icebp
std
test
psrlw
shll
push
inc
ds
adc
xor
jbe
ja
mov
push
je
mov
jno
add
leave
dec
add
jge
mov
add
and
fwait
jne
loope
dec
adc
mov
dec
mov
repz
xlat
pop
cmp
scas
hlt
popa
lds
inc
stos
dec
pop
frstor
bound
xor
decb
fucomip
jbe
dec
test
push
cld
into
mov
or
in
add
mov
es
fimull
cmp
stc
cltd
test
sub
andl
outsb
add
fdivs
pop
mov
daa
inc
int
or
imul
aaa
or
hlt
shrb
divb
imulb
scas
cwtl
aas
sub
stc
pop
mov
rorb
int
push
movsb
pop
mov
nop
cmp
je
inc
mov
mov
arpl
scas
mov
cli
push
out
push
pusha
inc
or
ret
xor
daa
jnp
inc
sub
push
mov
cmp
sbb
mov
rol
je
push
lods
xor
test
movsl
stos
sti
add
ljmp
imul
xchg
shlb
mov
add
int3
push
mov
aaa
jp
addl
pop
push
cli
add
fcmovu
leave
icebp
push
add
lods
jno
fstl
call
mov
aad
test
jne
cmp
add
addr16
push
jnp
sub
mov
and
rclb
dec
roll
scas
sbb
dec
xchg
data16
or
jle
inc
mov
and
push
xor
jecxz
lea
inc
into
sbb
ficompl
xchg
movsl
fnstenv
lods
inc
pop
jmp
add
sbb
jnp
out
cmp
out
add
pop
hlt
pop
mov
adc
aam
repnz
je
mov
fxch
cs
test
pop
add
xchg
xchg
cmp
scas
jecxz
fs
bound
ret
sar
ja
in
fcomps
sbb
mov
mov
es
lcall
ret
aaa
fimuls
loope
nop
pop
test
dec
leave
cmp
xor
pop
testb
lods
or
filds
jne
inc
lret
ja
fldl
and
lret
sbb
adc
push
sbbl
dec
xchg
filds
pop
push
jecxz
jle
or
outsb
push
or
xor
pop
int
mov
pusha
sti
scas
lock
flds
or
mov
push
pop
out
dec
sbb
mov
loop
sti
jg
repz
xchg
cmp
xchg
mov
testl
pushf
dec
adc
cltd
mov
xchg
addr16
pop
xor
adc
mov
sub
hlt
sar
sbb
dec
sbb
insl
pop
out
mov
sub
xchg
leave
xchg
adc
cmp
sub
mov
rcl
inc
sbb
jne
ret
shll
in
jbe
bound
iret
xchg
cmp
sub
push
or
sbb
sahf
mov
mov
mov
mov
pop
mov
lahf
pop
popa
xchg
cltd
js
cmpsb
pushf
in
mov
stc
cld
out
out
inc
add
fbstp
popf
mov
push
mov
and
adcl
push
pop
xchg
jl
mov
sbb
mov
loope
and
dec
sub
push
and
out
pop
xchg
test
pop
enter
fbstp
cld
cmp
lcall
subl
xor
imul
pop
stos
or
inc
lock
fdivl
xchg
stos
outsl
popa
push
pop
jmp
jle
js
aam
inc
dec
lret
add
push
pop
add
xchg
mov
inc
xor
sub
sbb
mov
pop
dec
or
aam
cmp
jp
fidivrl
and
imul
dec
and
sub
mov
aam
sbb
push
mov
imul
cmp
jmp
jg
shrb
clc
mov
test
inc
out
xchg
xchg
cmp
imul
dec
pop
rol
out
push
movntps
dec
or
push
push
cmp
int
mov
test
push
jb
cs
xor
jbe
xchg
dec
push
adc
mov
lea
inc
sbb
arpl
stos
dec
jp
xchg
aaa
add
bound
outsb
mov
movsb
adc
xor
lods
pop
cmpsb
xchg
insl
int3
inc
test
jmp
jnp
adc
push
dec
push
fsubs
xchg
in
sbb
call
add
mov
clc
lock
andb
xor
mov
scas
jb
push
mov
pop
call
out
movsl
ficomps
leave
or
ror
daa
inc
out
cmpl
jp
xor
outsb
shrb
fneni(8087
lods
and
xchg
outsb
jb
stos
push
test
inc
ret
stos
mov
pop
popa
inc
shll
push
or
cmp
jmp
repnz
pushf
pushf
or
nop
cmc
test
mov
fwait
std
stos
add
mov
subl
mov
sub
push
inc
xor
sets
scas
aad
lcall
dec
pop
sub
outsl
and
sbbl
es
jo
ds
lret
repnz
divb
adc
add
push
jne
out
fs
iret
das
inc
rclb
xor
mov
shll
add
or
int
pusha
mov
jns
or
sub
pop
les
sub
test
jl
bound
mov
jle
ljmp
pop
imul
cltd
out
cli
sbb
in
lahf
xor
pushf
outsb
int
jne
cmpsl
mov
out
orb
and
push
mov
push
xlat
and
inc
xchg
ds
fdivrs
cmp
xchg
cwtl
add
rclb
adc
mov
aad
fbld
into
fwait
jnp
cmp
xchg
test
or
mov
shlb
jbe
popf
xchg
push
out
push
out
and
xchg
jmp
inc
shlb
stos
xchg
mov
call
inc
pop
push
push
dec
sbb
fcoml
popf
push
jl
js
adc
dec
and
cmp
ljmp
test
jmp
pop
pusha
rorl
ret
add
out
lea
fistps
push
adc
arpl
fisttpl
jb
daa
stos
inc
pop
call
punpcklwd
push
or
popf
ret
push
jmp
fs
rcrl
xorb
shr
mov
and
xor
cmp
push
cmp
test
cmpsb
sbb
cld
int
loop
aaa
testl
imul
dec
pop
or
push
sub
scas
ficoml
xchg
repnz
out
cmp
add
add
nop
int3
push
mov
mov
jecxz
jo
jp
mov
push
je
inc
sarb
ret
sbb
or
lods
dec
add
mov
in
into
jmp
rorb
mov
icebp
pop
mov
popf
into
cmc
mov
adc
in
std
out
lds
pop
pushf
xchg
outsl
add
push
mov
mov
push
je
mov
std
mov
mov
inc
xor
sub
mov
test
cmp
gs
pop
inc
insl
or
mov
mov
push
pushw
xor
xorb
jb
inc
mov
jns
and
mov
jecxz
cli
mov
outsl
lock
int
outsl
stc
jmp
pop
mov
xchg
jb
mov
incb
and
enter
into
lock
aam
int
mov
push
push
scas
lods
or
inc
repz
out
mov
mov
and
popf
shll
mov
cmp
addb
xchg
sub
iret
hlt
scas
pop
bound
or
test
jno
or
repz
sbb
pop
lret
cld
sub
cltd
popa
rcrb
clc
mov
repz
repz
adc
inc
pusha
lret
iret
ja
shlb
out
add
lea
cs
jne
fld
popf
rcrl
jb
pop
add
addb
xlat
pop
inc
rcr
xchg
fstpt
bound
xchg
fistl
es
adc
pop
mov
cmpsl
push
pop
jle
and
fisttpll
and
popa
mov
aam
ret
lcall
adc
xchg
pop
pop
mov
jo
js
jne
fisubrl
add
jl
ja
sbb
cmp
je
dec
cmc
into
mov
divl
push
and
sub
bound
je
jo
icebp
dec
mov
mov
out
sarl
pop
mov
outsb
aas
mov
xchg
pop
into
data16
cmp
mov
pop
mov
std
rcr
cmc
lahf
sub
sbb
jecxz
mov
stos
mov
rcll
jbe
add
push
push
addr16
push
push
mov
dec
xor
mov
cmpsb
pop
xchg
roll
in
pop
cmp
jne
or
dec
xor
xor
push
in
adc
and
sbb
aad
sub
or
xlat
icebp
mov
and
das
push
outsb
adc
xchg
xchg
inc
shld
decl
xchg
mov
les
shl
sbb
jae
icebp
fiaddl
push
lock
mov
gs
pop
mov
push
daa
addr16
stos
pop
fcoms
icebp
cmp
and
enter
lret
xor
push
dec
pop
push
jecxz
out
jno
sarl
sbb
jns
jns
inc
mov
add
pop
push
sbb
xor
lcall
stos
sahf
in
lds
enter
scas
sub
out
shll
mov
push
imulb
addr16
xlat
dec
or
shlb
ret
push
adc
push
andb
mov
dec
and
shll
or
shl
mov
dec
mov
jnp
or
mov
adc
push
lea
into
out
popf
adc
scas
mov
and
add
ds
fldl2t
mov
andl
inc
mov
xchg
mov
add
adc
in
imul
mov
loope
pop
pop
in
jmp
and
fnstsw
push
out
pop
jo
dec
inc
jbe
xorb
pop
pop
fldl
les
push
or
push
sti
jne
enter
cmpsl
adc
push
mov
and
mov
pusha
add
sbb
xchg
imul
aad
insb
push
mov
outsl
test
mov
testb
aas
mov
or
add
inc
pop
sbb
add
out
xchg
mov
movsb
loope
or
pop
xchg
in
aaa
mov
pop
xchg
divl
loop
mov
test
xchg
sbbb
mov
xor
cld
cmp
inc
notb
mov
mov
or
int3
in
mov
push
xor
iret
cmp
push
sbb
mov
dec
dec
int
repnz
loopne
outsl
popa
mov
mov
arpl
adc
popa
std
jl
lods
loope
popa
nop
dec
push
clc
shll
jns
lret
xor
mov
xorb
mov
ret
xchg
in
icebp
leave
aas
pop
cmp
pop
arpl
ret
sbb
cs
orb
add
mov
jbe
insl
or
mov
and
pop
arpl
cld
das
in
adc
xchg
jns
dec
jg
int
test
xlat
sbb
dec
ja
subl
jb
push
in
leave
mov
popf
inc
repz
or
jae
xlat
andb
xchg
shr
les
push
mov
or
rorl
cli
lea
addl
jmp
imul
outsb
xor
xchg
jecxz
inc
mov
inc
dec
and
xor
sub
jae
mov
icebp
mov
ret
imul
ss
xor
inc
pop
arpl
mov
dec
out
enter
jl
stc
out
rorb
fnstenv
pop
jo
xor
sbb
imul
cltd
push
out
mov
jle
xor
das
arpl
movsb
call
push
lret
or
gs
or
sbb
or
shr
test
pop
jge
notl
push
imulb
mov
mov
call
pop
fsts
jl
fsubl
pusha
pop
adc
sbb
or
jae
movsb
rcrb
cltd
addb
cltd
std
shl
imul
jbe
push
push
popf
mov
icebp
sti
repz
pop
js
stos
mov
xor
fldcw
push
test
and
mov
jno
cmp
push
pop
je
shll
xchg
loope
dec
push
int3
xchg
divl
mov
dec
lds
mov
out
mov
test
rorb
in
or
js
mov
outsl
push
fsubs
leave
pop
adc
xchg
jl
inc
sub
and
jp
jecxz
pop
ret
fbstp
bound
fisubrs
cld
in
pop
shlb
and
in
scas
test
popf
cmc
repz
mov
repz
lahf
ss
xor
mov
pop
repz
sbb
scas
push
iret
pusha
inc
push
mov
fsub
mov
mov
aas
xchg
mulb
stos
aas
add
push
sub
es
mov
mov
inc
rcr
push
mov
xor
daa
test
xor
jg
mov
aam
sbb
dec
subb
addr16
outsl
cmp
lds
inc
mov
add
pop
popf
push
fmul
and
lret
aad
sbb
fs
dec
int
movsl
dec
lahf
and
jns
in
int3
pop
fstl
testb
int3
bound
mov
jg
inc
popa
scas
cmp
inc
push
fnstcw
aam
mov
push
nop
xchg
arpl
icebp
and
dec
dec
or
add
dec
add
std
cmp
pop
int3
sub
xor
add
inc
into
aam
sub
mov
or
out
je
data16
adc
add
sub
sbb
mov
test
repnz
leave
or
mov
popf
jnp
in
and
pop
mov
outsb
test
lds
mov
and
mov
sbb
sbb
add
mov
inc
mov
jle
adc
cmp
lods
dec
inc
sub
test
pop
xchg
int
jmp
iret
andnps
testl
hlt
roll
or
imul
jns
lret
push
inc
in
pop
cmp
jbe
xchg
inc
test
jl
jo
or
shrl
dec
mov
cmpsb
sbb
out
xor
dec
loopne
fucomip
ficoms
cli
add
xchg
stos
ss
adc
jg
aam
jno
scas
addr16
cmp
insb
addr16
adc
je
jb
int3
andb
lds
cmp
push
addr16
xchg
sub
or
mov
sub
adc
rol
xchg
rcr
mov
sbb
push
lods
cvtpi2ps
adc
lods
popf
sbbl
xchg
ss
sub
mov
and
xlat
stc
xchg
mov
mov
jae
enter
pusha
dec
pop
or
cmpsl
adc
adc
pop
data16
sub
dec
mov
movsl
mov
ja
rcll
ret
mov
xchg
sub
cld
adc
sbb
sarl
jae
loop
ja
mov
sub
pop
adc
xchg
lahf
fs
test
cmc
mov
mov
leave
movsb
pushf
mov
xor
imul
dec
mov
pop
aad
mov
loopne
call
scas
adc
mulb
hlt
sub
push
arpl
cmp
xor
push
add
inc
js
xchg
mov
push
pop
ror
pop
test
rcrl
leave
loop
scas
lods
mov
in
jle
pop
push
push
daa
ljmp
dec
ret
mov
lret
sbb
push
aad
bound
mov
in
cwtl
std
dec
loope
fscale
jbe
stos
pusha
ljmp
jae
mov
mov
adc
lret
mov
in
arpl
mov
cmp
aad
aam
pop
lcall
pop
add
xchg
mov
pop
push
or
movsb
xchg
and
jecxz
es
sbbl
add
es
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
mov
xlat
lea
jmp
shr
or
add
pop
add
imul
fmull
xchg
sbb
mov
neg
jg
push
cmp
cs
jb
shlb
mov
sbb
leave
lret
ret
pop
sbb
inc
xchg
inc
ficoml
or
dec
mov
jg
jno
add
push
add
adc
je
mov
pop
in
fsubl
push
jno
leave
jne
push
push
jnp
out
in
sbb
call
std
mov
push
cli
cli
cmpsl
out
pop
sahf
mov
jbe
loop
sahf
xor
jns
mov
addr16
scas
int
push
arpl
popa
xchg
rcrl
mov
sub
loope
jno
inc
rclb
and
mov
sbb
jnp
pop
fmuls
sbb
mov
testb
and
pop
or
aam
test
lret
fcomip
mov
jge
mov
cmp
insl
xor
mov
push
cmpl
mov
movl
push
scas
sbb
in
jecxz
mov
test
push
xor
std
test
not
push
cmp
sti
lods
adc
loopne
jge
push
les
lret
loope
cmp
mov
jne
add
pop
popl
std
out
cmp
aad
and
mov
or
and
pop
aad
mov
xorb
dec
lret
outsb
stos
out
mov
ja
lods
movl
jo
jbe
sbb
mov
pop
cmp
add
mov
cmp
mov
ss
mov
xor
fldenv
jae
lock
and
mov
lret
stos
filds
shrl
pop
pop
mov
push
dec
jns
rolb
addb
mov
sbb
in
xchg
orl
imul
stc
xchg
dec
roll
add
inc
in
xchg
outsb
sub
sub
adc
dec
cmpsl
ret
pop
push
mov
out
imul
leave
int3
pop
arpl
sbb
ud0
dec
or
addr16
fists
sbb
sarl
mov
or
add
and
aad
sbb
cmp
lods
xchg
add
pop
aaa
dec
inc
lock
dec
push
jge
push
mov
mov
nop
add
and
dec
inc
fisubrl
aad
sti
add
lock
pushf
pushl
mov
outsb
addr16
test
out
push
out
das
mov
mov
sarb
adc
sub
fistpll
and
mov
adc
and
outsl
es
in
or
lods
in
mov
sbb
sbbl
jecxz
xchg
loopne
sahf
int
scas
mov
adcb
arpl
xchg
push
push
loop
inc
and
movsb
lds
cmp
out
stos
xchg
mov
jle
mov
fst
or
out
push
dec
push
addr16
aas
push
fldt
jecxz
ds
rcr
ljmp
pop
jl
lea
lock
push
jnp
jne,pt
push
mov
test
jo
sub
sbb
jg
movsb
iret
xchg
sbb
fbld
xchg
out
jecxz
loop
push
enter
arpl
dec
dec
aam
gs
cmpsl
xor
cmp
out
sti
sbb
cwtl
add
dec
inc
pop
dec
pop
popf
sub
cltd
mov
aas
into
bound
pop
sahf
push
push
jmp
or
dec
push
mov
pop
lret
into
and
adc
dec
stc
sub
ss
pop
mov
mov
gs
jg
into
outsb
fadd
fcmovu
and
mov
rcll
nop
dec
insb
bts
loope
sbb
stos
push
stos
sub
pop
ds
test
sti
mov
and
loope
std
lret
push
fwait
dec
mov
xchg
or
mov
adc
inc
jmp
inc
ja
pop
or
pop
ja
pusha
mov
dec
mov
movsb
add
cmp
test
ret
cmp
jl
scas
adc
sub
ja
jbe
ss
scas
xor
push
iret
aad
jmp
sbb
inc
dec
movsl
sarl
ret
fcmovnu
dec
pusha
test
fisubl
lds
pop
sbb
jbe
ljmp
stos
cs
enter
cld
loop
scas
dec
mov
jne
or
dec
add
fsubrl
pop
or
scas
test
lea
cmp
insl
dec
dec
sbb
fs
lds
mov
fcoms
fldcw
in
push
and
adc
xlat
jg
sub
dec
outsb
inc
inc
aad
adc
and
sub
fdivrp
dec
fstps
fnstcw
inc
shrb
and
subb
cmpsl
stc
dec
jecxz
ja
push
stos
inc
mov
fs
cmpsb
outsb
jne
roll
sbb
jge
xchg
add
cmp
ja
enter
xor
lods
mov
mov
xchg
push
les
ss
jb
and
adcb
jb
mov
mov
ja
mov
add
ffreep
dec
adc
add
lock
das
inc
in
jle
and
xor
ds
add
subb
cld
inc
outsl
adc
test
sbb
iret
jo
fwait
xchg
dec
push
adc
xchg
jmp
mov
and
test
xchg
lahf
loope
lret
shr
dec
popa
jecxz
aam
outsl
addr16
add
jmp
daa
jnp
imul
lds
push
insl
jns
mov
add
sub
in
in
jle
xchg
cld
mov
xor
jmp
les
ret
jae
pop
setl
idivb
mov
mov
jae
mov
mov
adc
into
bound
or
fisubl
ja
mov
jnp
jp
cwtl
jg
fstl
jmp
xchg
out
movsb
inc
call
jle
cld
push
fstpt
imul
sub
mov
fisubs
out
cmc
mov
push
ret
lds
adcl
pop
in
sbb
dec
insl
add
mov
cwtl
popf
stos
sub
call
call
xor
iret
dec
mov
inc
je
cmp
adcb
mov
lret
push
mov
sub
jmp
inc
push
das
mov
xchg
adc
jno
pop
xor
lcall
lods
xlat
jp
push
cld
shl
sbb
and
inc
dec
pop
rcrl
dec
sbbb
in
call
push
lret
in
fldcw
mov
dec
mov
pusha
mov
xor
push
or
fsubs
popf
lods
pop
mov
add
adc
jg
stos
mov
es
add
and
push
lods
and
sbb
aam
inc
jp
test
add
push
jl
xchg
lock
push
movsl
pop
mov
mov
or
xor
mov
popf
xorl
mov
les
lret
mov
jge
or
jge
mov
int3
popf
mov
lock
mov
jo
in
jge
mov
mov
mov
push
shrl
cmpl
push
adc
loopne
sarl
decb
jns
mov
sahf
addr16
orb
daa
xchg
mov
outsb
xchg
mov
mov
xchg
mov
lds
nop
and
aas
dec
popa
negb
jge
cmp
mov
mov
fildl
fistl
xor
dec
sbb
xchg
fidivrs
shrb
sbb
fists
les
lds
xchg
jb
call
cmp
cmp
xchg
repnz
and
xor
push
pop
cld
sub
jecxz
mov
mov
jb
sub
push
pop
decb
xchg
inc
xlat
mov
cld
mov
enter
or
adc
dec
jge
pushf
leave
and
mov
in
cmp
das
mov
cmp
dec
push
pop
aas
sbb
out
cmp
aas
movsl
fs
xor
iret
xchg
lods
repnz
push
vaddsubps
lods
scas
ljmp
rcll
push
push
andl
movsb
test
outsl
movsb
pop
mov
pop
sbb
jnp
mov
xchg
mov
std
jne
xlat
movsb
fs
outsl
test
test
dec
push
xor
xor
mov
ja
cmp
dec
ret
inc
dec
jle
fcmovnu
psrld
shr
out
dec
mov
mov
and
jno
pop
lret
jnp
mov
and
and
repnz
aam
movsl
push
sub
dec
fidivs
int3
mov
fstps
add
cmp
shl
bound
rorb
pop
mov
loop
xlat
mov
fsubrs
xor
mov
pop
loopne
fmul
aaa
test
call
ljmp
dec
mov
and
jge
call
loop
adc
xchg
int3
cld
and
inc
dec
jne
dec
adc
jne
sbbb
sahf
out
in
mov
xchg
jmp
jae
sbb
aam
loop
call
loop
pop
outsb
dec
pop
mov
xchg
jmp
push
lock
cmp
test
out
mov
test
mov
into
fstpl
push
movsb
xorl
es
stc
out
stos
and
adc
mov
or
pop
sub
clc
bound
loope
xchg
mov
add
mov
mov
pop
sub
inc
adcb
mov
pop
addr16
sub
jl
orl
xor
daa
shl
pop
and
sub
out
push
loopne
insb
rorb
jo
movl
insb
mov
test
push
inc
roll
and
movl
sarb
xchg
sbb
jge
push
xchg
or
pop
clc
je
add
movsb
sub
loope
push
jp
js
and
stos
repz
cltd
dec
in
pop
jnp
cli
sub
pushf
adc
inc
jne
aaa
jae
sbb
fwait
push
adc
sub
enter
negl
jge
stos
fs
ds
pop
test
add
mov
cmc
add
outsl
ljmp
mov
pop
test
push
fmul
outsb
fiadds
es
jmp
push
push
stos
cli
sub
xlat
mov
push
mov
rcrl
lret
fmull
xchg
in
mov
inc
inc
popa
jle
mov
pop
sub
or
jns
pop
jle
scas
sub
dec
loope
or
mov
xor
mov
add
xor
mov
pop
dec
and
jp
addr16
fmull
sub
xchg
sar
xlat
inc
popa
mov
xor
rep
rcl
jl
adc
js
jge
push
stos
subl
and
ja
inc
jp
push
push
shll
pop
imul
push
xor
insb
insl
out
shr
push
arpl
out
add
and
loopne
dec
cmc
sub
add
pop
xchg
popf
mov
mov
insl
cwtl
shrb
outsl
sub
dec
enter
jge
pop
call
repz
call
jmp
ret
mov
mov
jge
jecxz
push
push
out
mov
lcall
icebp
inc
loopne
xchg
sbb
dec
dec
mov
xchg
mov
push
popa
shl
xchg
divb
mov
jl
add
outsl
inc
neg
mov
add
cmp
adc
leave
sub
fmull
test
mov
dec
pop
xor
stos
sub
cmp
jb
cmp
addb
sahf
incl
xchg
out
fcmovnu
pop
fistpl
popf
xor
decb
mov
enter
mov
aas
sub
clc
out
inc
in
dec
ffree
lods
mov
sbb
jg
xor
iret
lock
inc
cmc
aas
fwait
mov
shl
nop
inc
out
insb
and
pop
mov
pop
iret
mov
les
dec
adc
cmpsl
clc
inc
gs
xrelease
pop
pushf
aas
mul
sub
test
sub
pop
sub
mov
popf
insl
sbbb
pusha
test
imul
out
jl
and
dec
stos
test
in
jmp
and
add
mov
sbb
mov
mov
sbb
and
sbb
pop
cwtl
pop
pop
sub
inc
imul
xchg
push
pop
lret
cmp
lea
dec
test
adc
dec
sub
xchg
in
mov
pop
popf
mov
lcall
dec
out
pop
push
daa
mov
push
mov
adc
dec
aam
mov
push
pop
mov
dec
notb
jmp
pop
push
jnp
xor
push
sub
movsb
rorl
popa
imul
mov
cli
outsb
clc
repnz
adc
jl
dec
xchg
mov
cli
stos
js
imulb
or
push
out
sbb
jns
or
fwait
or
jae
mov
pusha
test
mov
test
gs
stc
mov
fwait
loop
int3
mov
xor
int3
add
sbb
out
cmp
repnz
mov
mov
sbb
add
pop
add
mov
add
sarb
shll
fisttps
jl
cmovg
addl
mov
mov
movsb
test
in
outsb
out
incb
sbb
inc
pushf
insb
xor
outsb
out
xchg
mov
pop
clc
sbb
xor
xchg
ja
ret
jne
enter
xlat
ds
mov
adc
data16
test
inc
adc
sub
pusha
arpl
fucomi
lods
xchg
and
mov
pop
fdiv
popa
sub
rolb
subl
adc
push
or
loope
int
loope
sub
push
adc
out
mov
inc
jne
adc
dec
mov
and
fldenv
xchg
pusha
loop
stc
cmp
bnd
icebp
add
pop
add
aaa
test
push
lods
jbe
je
insb
lea
aad
sbb
mov
mov
adc
push
xchg
xchg
jle
pop
test
adc
add
inc
and
mov
push
dec
nop
mov
sbb
inc
int3
fisubs
and
in
sbb
jecxz
cmpb
xlat
outsb
mov
mov
ret
leave
mov
jp
aas
adc
int
mov
cli
aas
outsl
jnp
inc
jge
and
ljmp
jle
inc
callw
test
sbb
inc
xorb
aas
or
xchg
mov
xlat
push
lahf
push
mov
inc
mov
shlb
cmp
and
movsl
cli
pushf
cmc
test
sub
dec
xorl
dec
add
aaa
insb
fldt
jnp
lods
mov
loope
mov
adc
cmpsb
mov
adc
cmc
mov
inc
xor
insl
setg
fildll
add
jae
jo
cld
jo
mov
xchg
inc
mov
or
stc
mov
mov
incb
popf
sub
mov
or
rcrl
test
xor
pop
adc
cmp
jae
adcl
jge
dec
les
cltd
lds
pop
rclb
in
popa
push
mov
rcrl
outsl
sub
sub
dec
push
lods
mov
movsl
jmp
fs
mul
sub
sub
cmpsl
push
mov
inc
cmpsb
push
or
cmp
or
cmpsl
mov
inc
out
js
push
cmp
xchg
dec
xlat
fidivrl
movsl
adc
mul
int3
push
testl
jnp
add
and
aad
popa
push
call
aad
add
adc
cmc
jns
inc
inc
lret
lods
test
leave
mov
or
cld
lret
scas
xchg
cld
sub
jecxz
sub
dec
fimull
push
in
and
jge
test
fdivs
adc
out
push
notb
aam
jns
push
pop
testb
cmpl
push
insb
je
dec
js
or
fnop
outsb
jp
lret
add
sbbb
in
lods
or
daa
test
int3
int3
xor
pop
lock
dec
xor
fwait
rcr
or
pop
lods
pop
mov
jb
cltd
loopne
fldt
jl
cmp
sbb
sahf
inc
clc
repnz
inc
scas
mov
add
fscale
push
cmpsl
int3
jne
out
xor
mov
data16
clc
dec
mov
int3
push
inc
or
mov
das
push
inc
push
or
or
loopne
sub
xchg
jb
add
or
leave
imul
in
mov
ljmp
gs
add
jecxz
fnstenv
adc
jbe
data16
enter
fdivs
inc
lds
gs
or
or
sub
mov
cmp
xchg
imul
icebp
mov
sti
les
loop
mov
imul
lods
test
in
scas
mov
mov
inc
sbb
rcrl
and
adc
add
jmp
cwtl
test
fwait
sub
ljmp
popa
xor
jo
test
sbb
fiaddl
mov
js
mov
jno
jp
mov
cmp
push
or
cli
shll
push
testl
outsl
sbb
aam
in
js
iret
push
and
add
lods
in
push
or
push
adc
xor
mov
sbb
std
xor
lret
jle
mov
rorl
ljmp
sub
dec
mov
iret
push
cmpsl
cmp
ljmp
popf
adc
cmp
inc
dec
popf
dec
add
out
fmull
jge
or
sub
out
mov
dec
mov
dec
cmp
cmpsl
sbb
insl
shlb
push
dec
jl
test
in
and
or
or
insb
idiv
sub
dec
enter
aam
mov
mov
or
lcall
jno
sahf
push
sbb
scas
iret
mov
cs
xor
or
cmp
stc
mov
xor
int3
sbb
imulb
mov
dec
xor
dec
jbe
push
sub
xor
mov
out
xor
fcomi
add
jbe
fstps
xor
adc
xor
int
xchg
fists
movsb
add
adc
or
sbb
lds
mov
imul
pop
out
xchg
cmp
push
dec
shr
push
push
out
mov
mov
sbb
or
or
jle
push
cmp
mov
mov
jno
aam
subl
imul
leave
xchg
xor
lcall
aas
into
inc
int3
sahf
sqrtps
cwtl
stos
out
xor
sbb
imul
pop
xchg
pop
cli
xor
jns
ljmp
orb
pop
jae
subl
and
or
inc
mov
jmp
in
jb
xchg
or
adc
stc
mov
sbbb
mov
or
cmp
orb
shlb
aaa
aas
jbe
scas
push
mov
imul
sub
xor
adc
pop
mov
jecxz
add
repz
rorb
je
fadds
pop
adc
sub
xor
cli
movsb
and
cwtl
and
mov
icebp
stos
mov
pop
jb
stc
sarb
jg
jb
inc
mov
jo
inc
ljmp
cltd
xchg
shll
adc
mov
out
add
aad
pusha
cld
jne
loope
push
imul
add
cmpsl
gs
jns
adc
test
sbb
sti
fidivrs
sti
pop
out
jg
pop
data16
loop
xor
pop
mov
in
pop
sahf
pusha
loop
in
aad
and
add
out
fstps
and
leave
outsl
loope
mov
xor
jns
ds
bound
fidivrs
xor
addr16
mov
jo
or
jg
sbb
pop
mul
add
repnz
cmpsb
xchg
aam
mov
out
repz
stos
push
leave
and
pminub
call
ret
xchg
sub
cmp
popa
xor
xor
divb
adcl
jg
xchg
mov
pop
int
or
test
mov
stos
test
cmp
js
inc
arpl
std
cmc
nop
push
gs
jo
mov
jl
push
mov
int3
fdivr
and
adc
leave
sbb
dec
add
and
loope
je
cmpsl
mov
cmp
sbb
ds
rdpid
sbb
and
into
lret
test
push
jo
fisttps
iret
ss
push
pop
in
pop
inc
cld
xchg
enter
js
lret
or
fwait
data16
mov
mov
call
int
xchg
push
fbstp
fadd
hlt
inc
ret
cmp
and
mov
out
push
fsubs
in
sub
xchg
aam
cmp
pop
in
bnd
stos
or
out
int
adc
insl
mov
add
push
xchg
dec
pop
cltd
xor
pop
nop
sbb
push
data16
test
inc
clc
test
stos
inc
sti
cltd
jnp
lock
cmp
loopne
or
jb
jb
repz
aad
add
jge
adc
mov
lret
loopne
inc
inc
je
mov
pusha
add
ja
dec
cld
iret
stos
jle
dec
and
mov
sbb
and
fsts
lret
jmp
xchg
push
ljmp
pop
cs
imul
sub
insb
fldenv
xlat
mov
pop
mov
aas
dec
outsb
jg
aaa
or
in
dec
xorb
push
jl
xchg
push
subl
add
inc
push
push
mov
fadds
xor
iret
in
iret
jnp
push
cmpsl
fs
mov
jle
cmp
mov
movsb
fsubr
add
and
andb
test
ret
push
sbb
pop
sahf
in
and
int
xor
cmp
mov
cmpsl
aam
insb
xchg
fiadds
dec
lods
fcomp
mov
and
adc
dec
inc
rclb
push
inc
cs
cwtl
xchg
cli
jno
push
and
and
add
xchg
dec
je
imul
cmp
pop
cli
decl
jae
or
lahf
insl
push
mov
rcl
pop
test
or
inc
in
std
arpl
in
sub
push
popf
popf
imul
cmp
cmpsb
dec
push
jl
sub
jle
add
imul
mov
outsb
lods
fnsave
mov
mov
movsb
push
mov
je
pop
jae
jecxz
sbb
jg
pop
sbb
andb
test
pop
xchg
stos
cmp
ss
and
imul
xor
adc
pop
cmpsl
inc
sbb
push
mov
sub
bound
adc
sub
ret
sub
xor
imul
xchg
xchg
pusha
in
and
rclb
xor
push
popa
les
stos
bnd
cmp
push
push
nop
cmp
enter
add
cmp
mov
mul
sbbl
push
xor
aam
and
sub
or
cmp
sub
dec
xor
sbb
xchg
add
push
cmp
repz
dec
arpl
jno
xor
data16
xor
push
imul
adc
stos
push
jno
lea
stc
lods
mov
push
mov
mov
out
xchg
cltd
adc
inc
jmp
leave
dec
cwtl
and
lea
out
lret
xchg
hlt
jae
inc
es
addr16
push
dec
ficomps
idiv
push
xor
inc
out
js
inc
pusha
in
xor
xchg
imul
mov
or
pop
inc
stc
add
or
dec
sbb
outsl
test
repz
mov
dec
adc
cmpsl
bound
mov
sbb
int3
dec
out
jmp
mov
jb
shrb
dec
test
add
fadd
mov
sbb
xor
pop
mov
das
rcl
jbe
std
mov
xor
inc
and
fs
push
pop
push
xlat
movsb
pslld
mov
incb
cmp
decb
leave
adc
or
sub
push
stc
dec
xchg
fildl
jo
lret
xchg
icebp
test
jno
gs
dec
jmp
jnp
inc
cld
fcmovnu
xchg
xchg
es
sbb
in
nop
mov
xor
leave
shll
xchg
pop
lds
sbbl
cmpl
dec
mov
aas
ret
lcall
out
xorl
dec
pop
cmp
pop
xchg
bound
loope
loop
push
es
xchg
adcl
imul
in
outsb
mov
sbb
xchg
imul
enter
call
push
sbb
jmp
add
shrl
mov
dec
sbb
push
stc
cli
fcmove
jnp
pop
and
mov
pop
or
adc
pop
fistl
push
adc
mov
cmp
push
fisubrl
or
mov
sarl
and
sbb
lcall
test
pop
call
outsl
cmpsb
cmc
movsl
dec
andb
les
sub
cld
fwait
cmp
or
and
clc
sub
jbe
mov
pushf
mov
mov
or
adc
in
xchg
jmp
xchg
inc
sub
pop
and
adc
pop
popa
mov
outsl
mov
arpl
aam
scas
or
jnp
or
in
xor
stos
ljmp
scas
cmc
imul
xchg
or
cli
or
out
add
mov
fisubs
mov
cltd
rcl
xchg
jl
pop
mov
inc
mov
sub
mov
lock
jecxz
repz
pop
push
add
and
add
mov
mov
popa
sub
add
pop
add
popf
es
xor
mov
jecxz
and
cld
dec
push
icebp
popa
pop
mov
adc
dec
adc
xchg
xchg
test
test
mov
leave
inc
pop
iret
pusha
add
aad
xor
sbb
nop
add
imul
leave
add
stc
mov
mov
ss
jp
jg
fs
adc
adc
xchg
enter
push
repnz
cwtl
imul
pusha
jecxz
add
ret
lea
push
lods
dec
iret
mov
js
imul
xor
push
push
cmp
add
adc
mov
lret
sbb
fisubs
in
xchg
cmpsl
rcrl
add
lret
bound
or
push
jmp
imull
mov
and
gs
mov
mov
push
xlat
xchg
add
lcall
dec
or
fildl
mov
mov
sbb
jo
add
mov
bound
mov
rolb
xlat
fs
or
push
int3
inc
fstpl
dec
adc
test
mov
daa
xchg
sub
xchg
sahf
lods
xor
jp
jge
mov
push
jg
mov
push
shl
rcr
inc
dec
loop
adc
shrb
in
jnp
cmp
add
rolb
movsl
or
push
dec
sbbl
subl
imul
lods
mov
xchg
cld
sub
mov
sbb
sub
rcll
pop
mov
xchg
xchg
outsb
mov
into
mov
sarb
cmp
aad
xchg
jae
or
and
jns
es
pop
fistl
cmp
test
insl
insl
test
lret
rcr
push
mov
scas
xchg
test
and
xchg
ljmp
sub
or
mov
pop
sub
mov
adcb
loop
and
jmp
test
and
lahf
pcmpeqd
inc
sub
xchg
aas
or
and
xor
test
je
lock
dec
cmpsl
outsl
enter
shlb
pushf
sar
ds
leave
xlat
insl
subb
lcall
pop
sti
ss
jp
pushf
or
inc
sarb
mov
in
in
ret
sbb
imul
cmc
sub
int3
push
cmp
jnp
jecxz
jns
mov
cmp
sahf
in
fdivr
jmp
push
sti
outsl
test
enter
or
jno
loop
add
lods
or
aaa
push
fldcw
fwait
loop
push
fisttpl
outsb
movsb
cs
or
gs
insl
dec
dec
inc
daa
inc
fldl
xor
sahf
daa
out
insl
cmpsb
pop
fs
cmp
xlat
sub
loop
mov
xlat
clc
push
ret
sub
jg
mov
mov
call
dec
jns
sub
out
xorb
adc
sarl
jecxz,pn
test
cmp
xchg
repnz
lds
iret
xor
sub
add
mov
out
aas
mov
adc
pusha
mov
push
les
hlt
pop
cmp
mov
mov
pushf
cltd
sbb
sbb
sti
push
mov
lret
adc
movsl
lcall
or
dec
mov
sbb
enter
and
dec
movsb
mov
out
cmp
faddl
push
jecxz
xchg
lods
into
pushf
sub
sbb
cmp
xor
sub
pop
in
mov
cmpsb
clc
mov
enter
test
push
leave
int
xchg
mov
bound
and
sahf
pusha
pop
fs
leave
or
push
push
or
icebp
stos
and
outsl
in
loop
fimull
inc
mov
outsb
pop
sahf
cs
xchg
adc
dec
testl
cmpsl
rol
fisttpl
mov
jge
or
loopne
mov
lcall
adc
loop
or
jmp
test
testb
cmp
or
lcall
shl
lea
sub
ret
mov
fs
add
inc
add
test
mov
inc
jle
cmovne
mov
jno
cmp
je
cs
jno
int3
aad
cli
cmp
test
repnz
int
xor
jb
jp
jbe
lods
add
xor
incb
inc
mov
lds
ljmp
icebp
and
push
mov
mov
or
xchg
test
ja
push
sub
mov
and
jne
in
xchg
jp
mov
and
popa
je
mulb
negb
shlb
mov
lret
pop
ss
mov
cmp
rolb
insl
jp
repz
lret
hlt
pop
rolb
arpl
fs
cmp
xchg
dec
mov
sbb
rclb
and
sbb
pop
dec
jg
sbb
add
sbb
addr16
mov
shll
xor
aas
outsl
in
pop
rcl
pop
pop
out
mov
int
pop
dec
mov
inc
pop
insl
xor
adc
pop
lret
mov
es
es
sbb
cmp
push
pop
sbb
inc
enter
push
out
dec
iret
and
jmp
add
sar
std
roll
pop
ret
pop
inc
cmp
and
push
movsl
aas
rclb
mov
mov
jb
sbb
lahf
pop
xchg
in
xor
fsubl
arpl
cli
rcrb
cli
std
stc
sbb
cld
adc
add
mov
lods
arpl
ficoml
enter
cmp
lcall
pop
or
enter
xchg
outsl
push
pop
loope
int3
push
lds
adc
cmc
mov
je
jbe
sub
dec
xchg
xchg
fldcw
test
mov
test
out
mov
rcll
pop
push
inc
xchg
nop
mov
stc
xchg
enter
xchg
sbb
dec
xchg
jl
add
dec
test
inc
sahf
clc
jbe
in
hlt
sub
add
ret
push
xor
lods
outsb
add
add
dec
lahf
lea
pop
bound
cwtl
inc
and
push
insb
cmp
dec
in
cmp
aas
push
js
into
pop
pop
and
clc
incb
loop
in
xadd
or
dec
es
inc
cltd
push
jecxz
xor
fsubl
sbb
pop
mov
pop
clc
std
push
and
push
add
add
popa
jle
pop
lods
into
fisttpl
xchg
lds
jg
add
push
pop
add
outsb
test
xchg
or
xchg
sub
sbb
add
insl
sub
inc
out
stc
xor
inc
js
cwtl
jecxz
push
test
xlat
push
imull
cmpsl
xchg
sbb
jbe
lret
mov
arpl
mov
jno
popa
push
and
aad
sub
mov
push
outsb
gs
cli
cmp
rcll
mov
icebp
mov
xchg
movb
enter
pop
cmpsb
in
push
sub
push
mulb
jle
stc
cld
push
popf
out
add
or
cmp
mov
pusha
test
sbb
xchg
pop
push
in
mov
dec
fwait
fwait
js
or
and
repnz
dec
scas
push
sbb
popf
bound
inc
popa
sbb
xor
jbe
fsubl
lret
imul
jmp
ljmp
sub
pop
push
test
mov
loop
int3
or
sub
or
cmpsb
mov
aaa
xor
addr16
sub
adc
mov
subb
dec
cmp
insl
jb
jns
jno
sarl
jnp
dec
movsl
xchg
scas
sahf
jmp
cltd
xchg
or
or
repnz
cmc
loop
pop
addr16
rcrl
ss
aaa
push
jo
test
loopne
in
add
sti
sub
fbstp
and
add
push
jbe
mov
pushf
mov
in
sub
mov
and
aaa
sub
aad
scas
mov
dec
jmp
push
xchg
xchg
pop
fcoml
pushf
pop
mov
aad
fnstenv
mov
xchg
cmpl
fldcw
pop
dec
fsubs
popf
mov
xlat
cmp
std
dec
aas
lds
out
mov
loopne
repnz
popf
inc
insb
orb
adc
mov
inc
dec
pop
iret
jle
int3
push
andl
outsl
mov
add
ljmp
adc
mov
add
sbb
in
scas
loopne
push
jmp
pop
call
in
test
arpl
int
or
sub
sub
push
imul
scas
cmp
jne
mov
inc
lods
mov
push
jl
add
xchg
jo
pop
mov
in
and
arpl
cmpsb
ret
push
std
mov
dec
xchg
xchg
xchg
add
fsubl
lds
or
push
xchg
ljmp
cmp
lcall
mov
cld
push
cmpsb
cli
mov
fisubrl
std
xchg
dec
jo
jl
or
add
lret
shlb
call
xchg
lahf
or
and
jl
inc
mul
shl
sbb
sar
loopne
jg
xchg
and
mov
movsb
pushf
mov
stos
iret
sub
sbb
sti
push
stos
arpl
lds
sub
cmp
scas
cs
xchg
das
icebp
push
js
pop
sbb
lods
pop
or
loope
mov
jge
cmp
fistps
mov
jns
inc
and
adc
mov
mov
pop
sahf
mov
cwtl
adc
stos
xchg
out
call
mov
call
xor
jge
dec
js
addr16
pushf
push
xchg
lods
stc
mov
ja
shl
mov
adc
sub
ja
pop
xor
das
int3
lcall
mov
jns
mov
mov
outsb
incb
add
nop
dec
rclb
fs
das
push
mov
mov
cltd
insb
xchg
and
int
push
in
jle
je
lret
push
mov
fidivrl
mov
sbb
cmp
cmp
cld
mov
dec
fs
pusha
lods
into
xor
add
in
sahf
inc
mov
pop
out
jnp
pop
leave
clc
jg
test
mov
call
cs
int3
xchg
add
xor
test
loop
aad
sarl
jl
mov
xor
rolb
arpl
ja
xor
cwtl
flds
je
repz
testb
jp
es
pusha
enter
add
out
iret
int
mov
pop
push
pop
clc
orl
xor
add
mov
dec
jecxz
pop
sbb
mov
scas
xchg
xchg
jno
out
inc
xchg
fsubs
sub
aas
adc
leave
loopne
je
cmp
xchg
add
fwait
cli
xchg
dec
rcrb
pop
adc
pop
in
idivb
adc
imul
rcrb
dec
inc
dec
and
or
jmp
and
add
stos
jnp
jp
es
add
xchg
push
sbb
pusha
aaa
jae
or
fwait
call
cmpsb
and
and
adc
das
arpl
and
and
call
cmp
nop
push
cmp
arpl
leave
add
cmp
rol
push
mov
mov
cmp
add
push
in
jmp
mov
sbb
cmp
xchg
cmp
or
mov
fcoms
dec
negl
sarb
outsl
push
cmp
mov
int
dec
sbb
jge
dec
scas
fiadds
sbb
lret
out
xchg
mov
mov
xchg
push
mov
loope
xchg
mov
push
aas
push
adc
fidivrs
in
jge
mov
mov
nop
add
and
inc
mov
dec
xor
push
icebp
xchg
xchg
sub
mov
sub
leave
inc
aaa
mov
fnstcw
mov
scas
xchg
inc
xchg
out
inc
loope
or
add
rolb
dec
xchg
dec
adc
xchg
hlt
mov
out
fwait
mov
mov
push
xor
ds
mov
sahf
test
mov
jecxz
xchg
push
scas
mov
ljmp
fwait
mov
inc
or
pop
push
inc
dec
sub
xor
lock
sub
add
fstps
xchg
pop
insb
pop
lds
push
jb
clc
push
lds
sbb
in
shl
jp
or
xchg
data16
mov
sbb
adc
jecxz
sub
sbb
adc
nop
jmp
mov
inc
lea
xchg
js
sbb
decb
jge
call
xchg
mov
cmc
int
pop
loopne
fisttps
ja
insl
mov
add
cwtl
and
add
adc
mov
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
add
push
xor
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
jo
add
add
add
mov
cmp
cmp
cmp
mov
add
in
ss
ss
ss
add
add
or
