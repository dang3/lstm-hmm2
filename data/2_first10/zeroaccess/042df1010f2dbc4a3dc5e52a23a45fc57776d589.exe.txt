push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
push
jne
jle
jle
cli
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
in
ja
sbb
xor
xchg
gs
mov
scas
ficomps
push
jne
push
mov
xchg
xor
shll
mov
dec
mov
sub
rclb
jmp
bound
cmp
into
sub
cltd
or
xchg
in
fisttpl
and
divl
arpl
cmpsl
jecxz
and
fbld
adc
mov
add
xchg
inc
mov
cmpsl
je
xchg
sti
cmp
lret
lds
inc
xchg
aad
mov
adc
xor
cmpsb
pop
decl
add
jnp
mov
xchg
in
jle
jns
sbb
push
ret
xor
pusha
adc
dec
mov
out
adc
or
fldt
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
nop
adc
jle
cli
jg
jle
add
xchg
ja
lret
push
inc
popf
pusha
imul
mov
cs
icebp
push
movb
inc
icebp
xorl
mov
fbstp
sar
jecxz
inc
stc
int
sub
adc
or
xor
loope
pushl
or
mov
push
and
pop
leave
fiadds
hlt
les
mov
ret
adc
ljmp
sub
push
push
inc
call
pop
lods
loope
loope
inc
push
stos
adc
dec
cmp
les
es
or
hlt
scas
xchg
or
cmp
pop
fisubrs
push
inc
inc
je
dec
shl
push
jmp
push
js
mov
imul
xchg
xor
es
xchg
xor
xor
or
pushf
popa
adc
je
cmpsl
loope
fbld
add
add
lods
pop
jns
leave
pop
mov
clc
or
nop
cwtl
xchg
adc
push
cld
dec
mov
daa
test
out
push
loope
fists
icebp
push
aaa
int
sub
sub
sub
inc
add
push
fldln2
ljmp
inc
loope
mov
arpl
jg
lods
fucom
mov
xchg
jno
pop
inc
fcmovbe
cwtl
cmpsl
rcl
mov
push
push
cmp
jecxz
dec
sarl
sbb
lods
xchg
add
add
je
mov
fsubrl
xlat
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
sbb
jge
jle
jg
jle
pop
mov
cmp
pop
sahf
xchg
stos
and
fcomi
into
mulb
xchg
push
scas
cmc
notb
xor
xchg
iret
adcb
jns
cwtl
das
cs
mov
mov
mov
push
scas
ret
jne
add
mov
shr
int
out
rep
push
pop
add
ficoml
test
and
mov
mov
stos
aam
xor
sti
jo
in
push
inc
and
and
clc
xor
outsl
or
lods
sub
mov
je
sub
les
test
addb
popf
mov
scas
cmp
movb
jno
push
out
in
jge
fwait
mov
mov
inc
lea
rcrb
mov
dec
jmp
push
fistps
jecxz
jle
fs
mov
jle
mov
daa
mov
out
jmp
mov
or
lods
adc
into
and
cmp
mov
pop
sahf
inc
jg
je
movsb
dec
mov
mov
testb
lock
add
xor
es
mov
das
bound
lea
pushl
pop
or
in
and
adc
fdiv
in
inc
push
cltd
sbb
call
out
and
ret
cld
loop
sti
repz
dec
addr16
fsubp
xchg
sub
push
mov
fldt
mov
sub
movsb
leave
dec
aad
pop
mov
inc
int3
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
mov
jle
jg
jle
jns
sub
cmp
and
add
jae
popf
cmp
cmp
cmp
dec
lret
cmp
imul
popf
ljmp
mov
imul
stos
and
cltd
fadds
mov
xor
imul
andl
add
pop
lods
bound
jne
xor
out
push
gs
test
fsubl
inc
mov
das
in
mov
dec
or
sbb
jg
iret
movsl
fisubs
mov
test
stos
xchg
cmp
or
mov
loop
xor
mov
movsl
gs
push
loope
fiaddl
jl
dec
popfw
dec
out
cmp
or
orb
jmp
push
pushf
call
and
xchg
push
push
pop
push
jle
sbb
mov
daa
jg
pop
aam
dec
mov
js
nop
scas
xchg
pushf
lret
cmp
pop
lret
jge
dec
sbb
cmc
inc
adcl
dec
xchg
pop
xchg
mov
dec
mov
xchg
jno
cwtl
jmp
jecxz
fnstenv
fcompl
mov
outsl
mov
outsl
pop
lock
cmp
xor
es
add
xor
inc
lods
add
xchg
js
xor
mov
jle
in
in
out
xchg
and
dec
add
cmpl
shrl
mov
add
dec
push
add
xchg
mov
jmp
xchg
mov
push
jo
adc
dec
roll
push
push
js
jle
jg
jle
fwait
adc
ljmp
dec
jmp
pop
xor
pop
lcall
ror
push
ret
or
mov
imul
jb
inc
pop
lea
aam
mov
sbb
out
xchg
push
push
inc
jl
popf
test
js
stos
or
fstps
int
sbb
fdivrs
insl
adc
movsl
sbb
inc
push
xchg
sub
pop
jl
sbb
scas
inc
sub
pop
int3
mov
add
loopne
sahf
cli
cmp
cltd
jae
lea
pop
lret
xchg
xor
push
add
mov
in
and
idivb
or
imul
loopne
jb
jge
shll
dec
xchg
jnp
xor
mov
out
stos
and
fldpi
pop
lock
cmp
push
and
loopne
clc
popa
es
push
inc
pop
mov
xor
mov
adc
daa
sub
and
mov
push
pop
aaa
mov
or
adc
push
push
stos
dec
sbbl
imul
pop
fcmove
lds
and
sub
aad
loopne
dec
into
loopne
cli
loopne
test
int
jno
insb
in
and
or
fs
xchg
fisubrs
das
xor
cld
ret
test
push
movsl
jp
or
xor
enter
imul
icebp
mov
addr16
mov
shl
stos
mov
daa
push
cmpsb
lds
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
mov
jns
jle
jg
jle
mov
leave
clc
and
andb
cmp
cmp
dec
adc
sbb
jne
lahf
iret
or
adc
insb
fisttpl
sarl
adc
jo
adc
xorps
out
xchg
pop
sbb
mov
jg
loope
jno
fidivrs
pop
sarb
sbb
out
cli
xor
jmp
sti
or
xchg
int3
out
mov
rolb
orl
out
jne
jo
jne
inc
push
or
adc
jo,pn
pop
les
div
aam
call
dec
inc
xchg
mov
mov
das
aas
push
sbb
adc
hlt
pop
mov
xchg
mov
aam
into
mov
xorw
fwait
int
sahf
movsb
push
mov
repz
ss
adc
fistps
ret
or
inc
and
and
pop
sbb
lods
iret
ss
mov
push
mov
mov
xlat
mov
cmp
ljmp
xchg
cmp
mov
daa
insl
pusha
dec
sub
fwait
aaa
mov
sub
pop
cmpsl
pop
cs
cmp
mov
popf
in
and
push
inc
mov
mov
ftst
add
mov
xor
or
mov
push
sub
cli
or
das
pop
imul
insl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
or
pop
jle
cli
jg
jle
jle
add
dec
pop
cmp
mov
jno
ffreep
sbb
dec
sub
pop
fisttpll
data16
outsl
sbb
push
imul
xor
fsubl
sti
sbb
inc
dec
jl
xchg
lret
movsb
dec
xor
mov
mov
dec
imul
add
push
das
jecxz
xorl
adc
in
cmc
pop
dec
push
fcomp
mov
and
test
xor
lods
jno
cmp
loope
add
loopne
cwtl
aas
dec
in
ja
and
mov
add
hlt
repnz
fldcw
jns
jp
popf
mov
jo
dec
lea
bound
pop
inc
xchg
in
addl
rcrb
sbb
arpl
adc
cmpl
lahf
sub
fcomip
sahf
pop
outsb
and
lea
in
sbb
ja
ret
fistps
sbb
xlat
out
into
cmp
popa
pop
add
ljmp
js
dec
pop
sub
out
pop
push
mov
loop
cmc
into
mov
xor
lods
push
xor
jbe
pop
mov
dec
push
fcmovu
jge
lods
aad
in
cmpsb
test
enter
sbbb
inc
cmc
mov
cs
dec
push
inc
jno
in
mov
cwtl
sub
or
dec
les
loope
out
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
dec
mov
imul
xchg
push
jns
ljmp
mov
mov
loop
pop
mov
andl
stos
shl
push
add
jb
xchg
cmpsb
mov
adc
inc
sbb
jo
xor
dec
loope
imul
notl
inc
cmp
in
sub
and
inc
lods
icebp
or
in
mov
push
jp
dec
mov
leave
xchg
dec
add
xchg
test
in
cmpsl
mov
cmp
out
in
inc
in
es
neg
cmp
pop
imul
rclb
jge
xlat
pushf
aaa
fisttps
sub
inc
mov
xchg
inc
fmull
xor
pusha
idivb
mov
lock
push
call
mov
lods
mov
adc
mov
test
jnp
sbb
fxtract
clc
subl
xchg
push
mov
les
stos
mov
popf
or
pop
je
and
rorl
push
xor
ja
sub
xchg
sub
test
insb
add
bound
mov
inc
mov
std
cmp
or
jge
mov
shl
outsb
pop
mov
nop
div
mov
icebp
or
cwtl
and
mov
fstpl
cmpsb
cmp
sub
add
push
adc
les
fdivrs
cmp
out
cmpsl
aad
cmp
push
push
add
xor
mov
add
jmp
cmc
dec
and
jno
push
mov
loope
rcrb
add
cli
jg
jle
ljmp
test
adc
xor
nop
add
outsl
daa
ljmp
mov
or
ja
and
cmp
mov
sbb
movsb
adc
call
xchg
addr16
inc
sbb
inc
cs
fsubrl
lahf
xor
fdivr
and
fistl
sub
fcomps
add
pop
lock
inc
sbb
popa
jo
lahf
outsb
stos
in
push
dec
hlt
xor
add
xchg
inc
bnd
inc
mov
push
dec
jb
sub
lods
int
in
in
add
jmp
mov
inc
stc
xchg
lea
adc
dec
ja
mov
push
les
pop
rcll
and
sti
inc
xor
sbb
dec
or
movsb
push
sbb
mov
push
xlat
dec
or
mov
inc
sbb
out
xchg
addr16
orb
out
jbe
jle
int
std
adc
and
out
cmpsl
adc
mov
out
in
cmp
or
xchg
outsb
xchg
mov
shlb
dec
xchg
mov
test
xchg
push
cmp
cs
dec
mul
out
sbb
inc
inc
cwtl
mov
loope
cmp
scas
fisttpll
jmp
jne
in
dec
mov
mov
scas
inc
xlat
lods
fs
in
in
fldcw
sub
loopne
jle
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
jl
cmp
lcall
jle
gs
and
xor
test
jecxz
loope
or
jb
lret
inc
cmp
bound
popf
sbb
leave
xchg
dec
dec
sarl
sub
out
sub
js
idivl
xchg
imul
in
or
dec
inc
outsb
test
test
mov
dec
xchg
push
dec
mov
jp
ud1
lahf
add
mov
mov
icebp
pop
lret
in
out
ja
add
mov
inc
cld
stos
xchg
ss
jae
test
pop
mov
push
sahf
ja
mov
jmp
leave
add
or
int3
je
jp
addr16
and
xchg
mov
or
push
out
xchg
mov
cmp
sub
dec
sbb
addl
jnp
test
pusha
and
lock
filds
jge
fdivrs
mov
pop
daa
mov
jns
lock
shll
fdivs
xor
ret
xchg
loopne
loop
arpl
pop
add
dec
int3
inc
fnstcw
arpl
out
pop
and
in
repnz
jp
mov
lods
out
mov
inc
repz
cmp
sub
ficoms
pop
mov
in
cmc
push
sub
mov
adc
outsl
leave
rcll
aam
xchg
jl
mov
int3
xchg
xchg
lds
cltd
sbb
push
push
insl
xor
aad
push
jge
xorb
jl
fisubrl
xchg
mov
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
ljmp
jle
jg
jle
and
mov
loop
push
cwtl
loope
jg
nop
xlat
ret
mov
adc
arpl
fistpll
inc
lods
jae
mov
arpl
das
and
add
mov
adc
int
test
or
inc
das
jb
lods
mov
test
push
je
je
add
ja
test
addr16
sbb
jae
loop
lret
je
lods
jns
iret
lahf
sub
mov
add
sbb
lahf
fdivl
mov
hlt
pcmpeqw
push
sub
jle
sti
test
ja
xchg
jae
imul
jmp
adc
jp
mov
mov
mov
ljmp
fisttpll
data16
ret
inc
in
ret
fdiv
pop
lock
xchg
adc
js
pop
pushf
sub
xchg
inc
int3
loope
push
mov
fmull
cli
add
fsub
inc
fsubrl
push
sbb
lret
or
mov
or
dec
loopne
cltd
push
adc
pop
cmp
mov
iret
xchg
jns
push
sub
out
pop
cmp
imulb
sub
add
call
adc
mov
arpl
cmpsl
fs
dec
mov
shlb
and
std
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
inc
mov
outsl
mov
jg
jle
xor
popf
add
pusha
push
xor
mov
daa
ja
ffree
or
sub
stos
or
loopne
mov
mov
shlb
jns
xor
daa
adc
jle
popl
mov
jmp
cwtl
jmp
and
xlat
add
popf
scas
pop
aas
mov
sarb
cmp
sub
lds
dec
stc
cmp
push
into
jnp
xchg
pop
gs
ret
arpl
and
and
xchg
dec
add
ljmp
clc
and
insb
add
and
jg
or
xchg
push
jmp
icebp
and
cmp
scas
sbb
sbb
pop
testl
popa
sub
gs
xchg
stos
adc
xor
dec
icebp
out
xor
jle
scas
lret
pop
push
xchg
ljmp
syscall
mov
dec
push
mov
and
sub
lcall
repnz
pop
push
mov
clc
andb
inc
jecxz
rcr
jns
push
shrb
push
sub
xchg
sub
xor
inc
jbe
fisttps
ret
fs
imul
enter
xor
push
mov
sbbl
fiadds
xchg
lods
insb
es
fnsave
dec
loop
xor
leave
cmc
mov
movsl
pop
xchg
fsubs
push
xlat
shl
add
lret
mov
cltd
or
loop
mov
or
loope
cmpsb
popa
or
pop
roll
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
push
adc
jle
jg
jle
mov
add
loope
push
loopnew
xor
mov
mull
pop
in
insb
aam
pop
int
push
xchg
icebp
cmp
test
push
cmp
xchg
ja
sbb
mov
data16
sti
mul
popa
and
pop
jbe
push
iret
sbb
ja
fnsave
rorl
scas
push
add
add
pusha
shll
test
idivl
out
sbbb
icebp
mov
adc
dec
jmp
pop
adc
inc
sahf
and
outsl
dec
testl
gs
cmpsl
push
fsubrs
imul
pop
xchg
cltd
lret
mov
inc
repnz
mov
push
inc
adc
mov
push
sub
dec
pop
movsl
sbb
mov
es
in
mov
stos
inc
jbe
test
sahf
xlat
ret
mov
int
or
sub
inc
push
inc
cmp
out
mov
out
lods
and
int
pop
push
aad
mov
ja
leave
mov
fisubrl
scas
sar
mov
std
ret
nop
sbb
and
pusha
cltd
mov
xchg
les
lods
mov
cwtl
xchg
dec
sbb
scas
or
xor
xchg
cli
and
pop
mov
aas
mov
jmp
in
jae
test
add
and
popa
cs
ss
push
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
icebp
mov
jle
cli
jg
jle
shll
lret
fistl
pop
cmc
mov
dec
jmp
jns
mov
outsb
pop
sbb
xchg
add
out
push
adc
add
lock
jb
cmp
or
xchg
test
sub
or
or
inc
aas
pusha
mov
sbb
shll
xchg
pop
inc
test
xchg
fcom
or
in
cmp
sahf
fcomi
jns
mov
push
mov
sub
push
ret
js
mov
int
and
jbe
jp
mov
out
imul
lea
fists
push
jns
cmc
outsb
in
xor
gs
add
popf
insl
xchg
imul
js
inc
xor
scas
std
mov
leave
adc
pusha
fstpt
mov
xor
inc
pop
imul
lret
add
jne
jge
add
and
out
wrmsr
or
cltd
inc
xor
mov
jmp
std
xchg
popf
fidivrs
cmp
push
lret
aam
das
stos
cmp
jg
std
xor
leave
or
cli
xor
sub
pop
rclb
aaa
inc
rclb
sar
jns
or
push
shrb
push
jae
jecxz
mov
repz
fwait
sbb
dec
aaa
mov
mov
subl
and
in
imul
sub
push
jp
test
flds
rorb
sub
add
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
xchg
jle
cli
jg
jle
inc
dec
cmpsb
mov
mov
hlt
inc
outsl
in
insb
loop
ljmp
test
dec
sbb
fmull
xor
sbb
fwait
gs
mov
sub
loopne
mov
pop
int3
dec
ds
cmp
gs
mov
fisttpl
push
in
ja
cmp
inc
mov
jmp
jb
mov
inc
stos
push
pop
mov
jecxz
or
mov
cmp
leave
or
mov
adc
filds
add
or
mov
inc
nop
sub
add
mov
push
mov
pusha
adc
mov
int
cmp
jp
arpl
mov
js
adc
notl
mov
ret
mov
cmp
fdivl
rcl
push
or
scas
push
imul
jb
sahf
hlt
sahf
out
aam
out
pop
shl
ss
es
mov
mov
std
jecxz
fdivrp
fimuls
pop
stos
xchg
aaa
dec
call
jne
push
iret
rcrl
jne
shrb
rcll
xchg
jle
sahf
in
mov
inc
pop
or
sub
mov
cmpsl
sbb
fnstcw
cmpsb
sub
cmpsb
stc
and
jg
cmp
dec
dec
push
lahf
sbb
aaa
popf
adc
jb
mov
xchg
and
call
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
cmp
mov
jle
cli
jg
jle
leave
and
mulb
sti
mov
sbb
dec
jle
ret
outsl
sub
and
lods
mov
nop
filds
or
dec
sbb
in
popa
xchg
inc
lahf
cltd
fadds
push
or
mov
fistpll
sbb
les
mov
ds
ret
mov
out
int3
pop
clc
sub
xor
xor
inc
sbb
out
mov
test
mov
dec
pop
ds
aam
repz
in
call
push
dec
or
push
lret
loop
jne
push
mov
pop
dec
outsb
dec
rorl
jne
fstl
push
pop
sbb
arpl
rcrb
adcl
xorl
mov
enter
cltd
sbb
ljmp
mov
outsb
xchg
out
lods
adc
nop
enter
sbb
cwtl
pushf
push
dec
sub
in
cmpsl
ljmp
leave
jb
mov
pop
inc
sarb
loop
dec
sub
test
stos
mov
fdivs
push
test
mov
or
xor
push
jno
das
pop
dec
xchg
xchg
pop
arpl
incl
sbb
clc
shll
jle
adc
pop
roll
sub
mov
dec
lret
dec
sbb
pop
dec
or
hlt
out
scas
jbe
imul
mov
xchg
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
dec
jmp
cli
jg
jle
xchg
mov
xchg
popf
cmpsb
in
push
xor
ret
cmpsb
in
sub
cmp
mov
jns
xchg
addr16
fdivs
test
jmp
int3
int3
ljmp
stc
pushf
dec
mov
les
add
sbbl
dec
stos
push
fwait
sbb
sub
sub
xchg
lds
mov
mov
adc
movl
in
inc
addl
outsb
stc
hlt
aad
fists
mov
insb
jecxz
rol
cli
xor
aad
stos
pop
pop
scas
jno
dec
cmp
or
jae
hlt
dec
loopne
bound
test
fdivs
bound
add
jae
add
push
dec
adc
ja
sahf
add
inc
cmp
dec
gs
add
sub
cmpsb
xchg
mov
cltd
inc
out
dec
or
sbb
pop
testb
add
inc
aaa
ret
pop
push
or
push
lret
dec
inc
push
pop
pop
aam
xchg
js
pop
jne
arpl
mov
inc
pop
cmpb
shll
add
and
mov
inc
sahf
cmp
adc
push
pop
jno
xor
jp
mov
push
pop
xchg
les
adc
lds
xchg
cwtl
andb
cld
repz
in
scas
outsl
neg
fisttpl
xor
jl
xchg
aad
dec
cmp
mov
pop
dec
xchg
addb
dec
inc
add
mov
or
push
decb
mov
inc
add
or
pushf
add
add
adc
mov
xchg
pop
shl
insl
test
jg
jle
je
enter
aaa
jb
jb
test
in
or
pop
xor
adc
nop
pop
mov
jge
push
cmpsl
xor
sub
xchg
or
movl
pusha
aas
or
jo
ja
mov
stos
and
dec
loop
scas
dec
mov
aam
das
leave
jne
movsl
inc
in
cmp
inc
and
dec
fdivrl
jne
lcall
or
sbb
sbb
pusha
cmp
iret
mov
mov
in
push
roll
mov
and
ss
xchg
sbb
cmp
cli
push
addr16
out
pusha
lods
ret
add
lods
dec
adcb
adc
rorl
je
cwtl
jns
cltd
icebp
push
sbb
rcrb
pop
sbb
jl
fsubr
and
adc
es
stos
mov
push
addb
sbb
cmpsl
iret
scas
movsl
lret
push
xor
sbb
and
sub
pop
xchg
add
ret
sti
inc
adc
xor
push
xchg
push
and
lret
es
cmp
jg
mov
shll
cmp
sbb
fistpl
mov
stc
push
std
shll
enter
dec
mov
pop
lds
add
pusha
mov
add
pop
cmp
mov
cmp
out
mov
xchg
inc
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
add
adc
jle
xchg
dec
popf
mov
or
mov
fxtract
aam
cmpb
stos
imul
fldenv
inc
sub
mov
push
jp
sub
cmpsb
lds
jmp
pop
clc
loope
call
in
push
ror
lods
stos
imul
or
dec
push
rcrl
mov
ret
nop
fmuls
adc
pop
push
dec
mov
and
rcll
mov
mov
dec
lahf
stc
sub
stos
pop
daa
push
jge
aam
popf
mov
mov
loopne
cs
mov
xchg
mov
jmp
dec
pushf
cmp
fwait
neg
scas
mov
repz
lea
iret
adc
push
stos
stc
loop
jns
push
scas
mov
ret
adc
jae
inc
pop
and
adc
xchg
push
inc
add
fisubs
iret
adc
push
cmp
or
add
mov
inc
lea
xor
mov
adc
mov
imul
add
addb
mov
dec
call
push
xchg
les
jae
cwtl
mov
pop
call
loope
jp
fisttpll
or
xor
cmp
jge
inc
in
outsb
cmp
ljmp
sti
xor
shl
jae
stos
adc
add
pop
push
inc
jnp
fsubrl
or
sub
dec
loop
mov
and
pop
xor
idivl
mov
addl
cmpsb
jno
imul
cmp
icebp
pop
cmpsl
fldl
mov
cmp
dec
iret
mov
imul
stos
out
loop
imul
push
stos
les
dec
mov
adc
popf
je
jbe
arpl
mov
add
sbb
pushf
xor
inc
icebp
cmpsb
notb
xchg
xchg
sti
and
jb
nop
sbb
call
sub
mov
cmp
jp
sub
and
ds
shlb
fcmovbe
ljmp
roll
dec
int
movsb
rcrb
sub
popa
arpl
int3
cld
jb
xor
inc
adc
mov
mov
insl
xchg
bound
push
mov
ds
bound
stos
shl
aad
mov
dec
add
adc
pop
loopne
jecxz
das
adc
rcrl
adc
xchg
les
mov
test
mov
push
xor
or
lods
add
cmc
insl
fucomip
pop
icebp
clc
insl
filds
repnz
aas
push
cmp
cmpsb
xchg
mov
call
add
enter
push
mov
jb
dec
popf
sbb
outsl
rcrb
sbb
xlat
ds
hlt
mov
lret
inc
les
test
inc
add
stos
ss
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
mov
jle
pop
jl
jle
jne
fidivs
cmp
les
mov
enter
sbbl
fmull
cmp
daa
ljmp
lods
pop
cmc
xchg
add
xor
fistps
js
gs
xchg
jb
lods
lock
jns
or
sti
mov
es
popa
cmp
sahf
hlt
adc
in
add
dec
popf
pop
in
sbb
and
nop
cs
sti
push
loope
inc
bts
arpl
fmull
pop
push
inc
lret
ret
stc
js
cmpsb
cmpsl
lock
into
pop
scas
ret
js
les
loop
pop
xchg
mov
cmp
jecxz,pn
inc
or
jns
repz
push
lds
repnz
dec
sbb
push
jl
insl
or
stos
outsb
lcall
in
sbb
lret
fisubs
push
in
jnp
test
rorl
jg
pusha
insb
in
or
adc
and
jne
stos
adc
xor
inc
in
pop
xchg
imul
and
aaa
or
loopne
sbb
rol
sbb
das
bound
cmc
xor
in
mov
clc
int3
adc
mov
fstpl
ret
popa
fcoms
pop
out
outsb
daa
les
lahf
jo
fcoml
mov
add
lret
cs
sub
test
mov
jecxz
dec
dec
pop
add
adc
pop
dec
lret
adc
jecxz
mov
jns
lcall
loopne
gs
xlat
test
nop
sub
repnz
xor
mov
mov
outsb
fcompl
addr16
in
bound
data16
outsl
jg
jbe
dec
pop
or
outsb
aaa
push
out
rclb
pop
jno
bound
int
cmp
mov
data16
cli
mov
test
rclb
xor
add
popf
cs
mov
jle
movsb
push
das
mov
pop
sti
add
push
mov
popf
xor
lods
add
inc
cmp
xor
ret
ss
adc
and
jle
int
xchg
xor
cmc
ret
mov
xchg
and
data16
jns
test
push
mov
inc
jbe
scas
push
jmp
sub
pop
js
flds
call
in
sub
out
shlb
pusha
cmp
in
mov
xchg
bt
mov
jmp
xor
mov
sbb
gs
pop
fstpl
movsb
in
add
jns
imul
pop
push
or
addl
or
std
icebp
push
aas
adc
mov
ljmp
das
xor
xchg
cmp
aas
fs
mov
insb
loop
sbb
push
mov
add
cmp
js
add
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
lsl
pop
jl
jle
xor
outsl
pop
mov
mov
mov
ret
jb
mov
in
sbb
stos
ret
mov
xlat
adc
jne
and
dec
int3
push
into
mov
mov
cmpb
fildll
jl
stc
es
jnp
loope
imul
cli
enter
xor
int
cmp
movsl
into
fildl
xor
insl
cs
pusha
xchg
dec
dec
sbb
xchg
pop
sub
fwait
jg
jae
and
lds
rcll
push
icebp
sub
sub
and
cmp
divb
mov
sarb
rclb
popf
mov
or
or
fisubrs
aam
mov
and
jg
jne
testb
or
inc
in
fsubrl
pusha
popa
and
jmp
mov
dec
enter
and
insl
cmpl
bound
or
lahf
jp
je
mov
dec
out
scas
std
stc
dec
ljmp
mov
aas
lea
sti
loopne
out
loopne
imul
sub
loopne
mov
in
xchg
xchg
int
add
xchg
or
xor
dec
adc
push
pop
insl
sbb
shl
xor
ret
push
push
aas
jl
mov
dec
inc
pop
sti
jle
in
mov
arpl
lret
test
cmpsl
icebp
pop
cld
xchg
add
cmp
or
pop
bnd
mov
push
call
pop
js
js
andl
adc
popf
lcall
dec
add
cltd
testl
push
sub
mov
pop
xor
mov
out
xor
mov
mov
pushf
lods
popa
arpl
aas
xor
mov
dec
cltd
testl
out
cmc
data16
notl
movsb
mov
sub
mov
fldcw
sbb
xchg
push
xchg
sbb
xor
sub
or
sub
pusha
jo
sbb
fists
das
jecxz
movb
xchg
jecxz
inc
arpl
loopne
xchg
mov
dec
mov
cmpb
push
cmp
stc
xchg
jmp
lret
ljmp
addr16
mov
nop
pop
stc
jmp
movsb
pop
sbb
repz
add
sub
imul
ljmp
nop
aaa
sub
testl
mov
pop
mov
adc
jne
fcoml
and
mov
xor
repnz
xor
out
push
mov
sarl
xor
mov
jo
out
push
xchg
js
outsb
repz
mov
daa
jb
jbe
add
in
leave
es
dec
lock
pop
dec
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
jo
xor
jle
jl
jle
push
inc
bound
lahf
nop
sub
aad
add
xor
fwait
inc
fimull
les
adc
pop
xchg
scas
mov
dec
inc
ds
iret
out
push
push
sbb
mov
dec
mov
sub
icebp
out
lahf
xor
outsl
out
stc
shll
xchg
adc
sub
cmp
es
nop
repnz
xchg
pusha
scas
adc
xchg
adc
cltd
sbb
in
jb
testb
imul
adc
push
pop
into
bound
and
cmc
jle
cmc
inc
or
mov
repnz
jns
out
int
add
in
icebp
sbb
aad
arpl
sbb
push
sub
xlat
leave
call
push
mov
movsl
mov
mov
in
leave
push
out
push
movsl
addl
mov
xchg
xlat
sbb
sub
jg
pop
in
mov
sbb
inc
fdivrl
cmp
jecxz
pop
mov
xchg
or
and
test
in
leave
imull
pusha
orl
mov
in
in
xor
mov
out
inc
xchg
jns
xchg
dec
lods
out
push
nop
fsubrl
xchg
and
dec
adc
loop
test
push
fs
mov
repnz
push
out
dec
loopne
inc
and
add
adc
rclb
xchg
mov
jg
fisttpl
cwtl
sbb
scas
negl
xor
mov
popf
jne
jecxz
iret
mov
add
inc
movsb
testl
outsb
scas
movsb
pop
xorb
inc
pop
stc
jae
sbb
mov
call
stos
mov
jmp
cmp
mov
call
std
mov
sbb
subb
cmp
out
push
subl
aas
jb
lods
add
out
in
ds
mov
jae
mov
xor
cld
mov
popa
xchg
lcall
aam
jg
mov
data16
sbb
sysenter
dec
xchg
and
mov
xchg
roll
data16
test
aaa
xchg
push
cmpsb
jecxz
jae
inc
or
push
inc
ljmp
in
push
ficomps
and
jg
cmp
push
out
insb
cs
pop
add
sbb
lock
dec
cmp
push
add
dec
adc
js
inc
adc
sbb
arpl
jl
subl
push
pop
mov
das
or
jae
popf
and
cmp
xchg
cmp
rclb
test
jge
xor
adc
scas
sbb
jecxz
mov
loopne
data16
xchg
fwait
leave
or
xor
jmp
add
dec
popa
jno
jne
xor
jle
or
pop
sbb
pop
jl
jle
pop
mov
nop
jle
push
and
pop
sub
xor
inc
stos
dec
xchg
pushf
cmp
cmc
mov
jns
xchg
ret
pop
ret
adc
gs
pop
dec
jmp
scas
out
dec
nop
cmp
and
adc
loop
les
inc
sbb
or
jmp
or
cltd
iret
mov
xchg
outsl
andl
jmp
xor
push
xlat
js
fsubl
fxch
dec
mov
xchg
sbb
lret
sub
inc
imul
sbb
jns
arpl
test
adc
cmp
mov
scas
sbb
pop
adc
mov
dec
into
mov
jno
jns
sub
add
ret
test
in
aaa
inc
loope
int3
aaa
jne
cs
pop
movl
std
outsb
pop
or
cmp
sahf
mov
sbb
insl
jp
jno
push
cmpb
shl
lods
jecxz
jnp
ja
ja
mov
repz
lcall
dec
mov
inc
mov
rcr
or
imul
jne
sbb
outsl
addl
pusha
fsubrs
imul
sub
mov
mov
xor
in
subb
rol
sarl
mov
xlat
pop
jmp
jg
cmp
jb
mov
cs
mov
lods
jl
cmpsl
fsub
push
sbb
add
inc
mov
arpl
jb
sbb
mov
or
in
inc
xor
arpl
mov
adc
popa
les
popf
shrl
push
xchg
cltd
add
pop
ja
icebp
inc
test
xchg
cs
sbb
les
add
xchg
fcmovnbe
lcall
ret
jmp
test
loop
xchg
stc
ret
add
shll
dec
int
loopne
jns
test
push
and
lcall
xor
xchg
or
jmp
outsb
push
and
js
jle
pop
mov
jge
adc
push
jae
stc
scas
cmp
jmp
push
popa
ret
inc
mov
lahf
clc
inc
outsl
mov
inc
mov
add
popf
and
insb
adc
scas
xchg
dec
lcall
and
inc
repnz
ds
ret
sti
sub
dec
stos
jns
mov
nop
mov
mov
pop
popa
inc
sub
je
testl
jo
cld
std
nop
aaa
and
testb
push
sti
xor
push
or
and
dec
cmp
inc
test
rcr
inc
and
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
cmp
daa
jle
pop
jl
jle
insb
ds
in
mov
fnop
mov
cmc
in
gs
lret
fwait
repz
cmpsl
rclb
lea
outsw
imul
mov
mov
mov
cmp
jl
lock
repnz
mov
adc
repnz
inc
jge
andl
push
dec
inc
lret
pop
pmaxsw
pushf
roll
pop
or
aam
andl
xorb
clc
cmp
dec
mov
jne
pushf
jecxz
mov
cmp
inc
fs
pop
push
cmpsb
mov
and
mov
gs
sti
cmp
dec
aam
cli
pop
lods
cltd
mov
or
mov
or
xor
xchg
push
inc
pop
pop
mov
testl
sbb
lods
cltd
sti
xchg
mov
xchg
vpcmov
and
xor
repnz
sti
jmp
cli
xlat
les
into
sbb
shl
cmp
sbb
std
cli
inc
frstor
mov
je
mov
fsts
cmp
xor
imul
mov
in
ret
and
movsl
pop
inc
jle
loopne
les
fbstp
loop
stos
push
and
out
xchg
or
cmp
in
xchg
cmc
lret
repz
les
jns
ljmp
xlat
js
int
mov
in
in
dec
psllq
xor
mov
and
mov
shll
fimuls
pop
mov
dec
jnp
repz
mov
push
out
dec
repnz
or
dec
xor
mov
mov
mov
into
loope
cmp
and
scas
push
sbb
mov
icebp
stc
mov
cmp
fists
sbb
xor
xlat
mov
jp
lret
sahf
cmp
pop
pusha
mov
or
inc
jp
sub
mov
cltd
movsl
test
rcl
push
je
popf
xorb
lods
jbe
movsb
sbb
dec
out
repz
or
sub
mov
imul
ret
andl
mov
cs
inc
adc
bound
neg
rcl
testl
insl
loop
je,pn
add
mov
jecxz
adc
out
scas
sbb
mov
push
push
xor
lcall
xchg
mov
insb
ficomps
mov
jl
mov
or
and
nop
sahf
push
mov
out
cmp
negb
loopne
es
jns
fmuls
dec
pusha
fwait
dec
cltd
insb
test
test
mov
add
jge
sbb
mov
nop
inc
outsl
fldt
xchg
inc
hlt
xor
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
push
and
pop
jl
jle
cmpsb
pop
inc
test
jle
dec
xor
gs
cli
pop
cmp
clc
jg
test
push
dec
pop
jns
pop
cmp
leave
jge
pusha
inc
fldl
les
enter
cmp
ds
or
pop
subl
rorb
adc
loope
pusha
mov
ds
cs
and
lods
add
sub
push
mov
int3
xchg
adc
lds
cwtl
mov
jbe
out
inc
add
or
add
pop
jns
push
aam
hlt
pop
jp
rcrl
or
in
xchg
push
fs
movsb
enter
xlat
jbe
inc
inc
loop
dec
stos
out
inc
adc
fcoms
mov
pop
lods
lahf
cs
flds
repz
sub
rcrl
mov
push
jl
jge
aaa
jns
in
cmpsb
cmp
and
xchg
dec
int
lock
cltd
clc
lahf
popf
mov
jp
in
and
outsl
ljmp
push
cmc
ret
addr16
lret
or
sub
lea
jae
imul
lea
xor
and
iret
push
push
jnp
mov
inc
sub
sarl
mov
cmpsl
scas
fidivrl
inc
push
and
cmpsb
das
test
inc
jae
rcl
or
sbb
inc
lods
shlb
push
mov
push
pushf
sbb
mov
lret
mov
push
popa
jg
sbb
imulb
jbe
sub
sbb
add
aas
iret
cmp
sbb
ljmp
inc
xor
jmp
push
cmc
adc
sbb
hlt
dec
jle
test
cmc
dec
inc
jnp,pn
xchg
adc
movsl
aas
insl
jge
jno
fs
shr
pop
out
mov
in
xor
shlb
or
pop
lret
mov
sbb
push
out
jnp
or
sbb
and
repnz
dec
pop
xor
sarb
call
ds
cmp
leave
adc
mov
mov
mov
in
lea
mov
pop
and
add
out
xor
ss
cltd
pop
loopne
add
pushf
cmp
ret
jne
fiaddl
pop
popa
dec
xchg
repnz
call
dec
test
sarb
push
ljmp
sub
loop
stc
xchg
sub
push
mov
pop
repnz
dec
adc
xchg
cmp
jns
adc
js
fsubrs
mov
inc
call
mov
or
test
mov
push
xchg
adc
ss
js
mov
sub
rcrl
inc
clc
inc
cmp
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
or
mov
jle
pop
jl
jle
jecxz
scas
dec
push
daa
jg
mov
cld
add
dec
sahf
adc
jg
in
rcr
pop
cmpsb
sahf
les
push
sub
mov
jg
and
loope
dec
push
movsb
jae
add
mov
mov
mov
outsb
and
shr
push
push
out
xchg
mov
mov
cmp
rolb
cmpsb
push
aas
push
inc
mov
icebp
pop
loop
inc
ss
jge
scas
jmp
xchg
dec
outsl
inc
out
bound
in
mov
mov
js
add
push
sub
cmpsb
enter
push
stos
jecxz
adc
jl
stos
mov
aas
dec
mov
dec
lock
mov
daa
jns
xor
lahf
fcmove
call
aad
and
xlat
push
into
ljmp
hlt
sbb
stos
jle
sub
xlat
jecxz
cmp
lods
xchg
shlb
ret
add
mov
cmp
jge
insb
mov
inc
je
adc
rorb
cmpsb
movsl
jle
jne
add
cmpsl
leave
mov
adc
and
insb
data16
sbb
or
pop
clc
sub
popf
cmp
jnp
sbb
push
jg
cmpsl
lret
pop
adc
pop
pop
or
or
popa
adc
push
xchg
adcl
ss
in
sbb
xchg
or
test
or
inc
or
push
push
and
jle
lahf
cli
rclb
test
or
jo
and
shlb
and
call
lahf
shrl
mov
xor
xor
xchg
gs
jno
mov
pop
mov
jae
mov
jl
add
int
pop
add
xchg
xor
inc
add
xor
add
inc
aam
cmp
imulb
mov
cs
sub
jbe
shrl
adc
adc
fstps
mov
scas
inc
or
knotw
movsl
xchg
mov
push
adc
cld
mov
popa
xchg
ljmp
cs
imul
mov
stc
cmp
xor
dec
in
out
dec
mov
cmp
mov
xlat
add
cs
and
insb
sub
paddd
cmpsb
filds
and
mov
jbe
mov
fs
xchg
or
test
out
popa
add
out
test
dec
loop
shll
inc
dec
push
movsl
jge
xchg
in
loop
aam
lds
sbb
sbb
inc
fcompl
jg
rcll
add
aad
pusha
lods
cli
inc
lods
or
ss
in
in
or
jns
adc
xor
lock
int3
fsub
rep
loopne
ret
xchg
push
mov
sahf
ret
dec
call
xchg
xchg
jecxz
cmpsl
xor
pop
call
lea
jmp
pusha
das
sti
pop
push
push
out
mov
std
inc
imulb
jle
jl
jle
push
jp
sbb
jl
mov
sub
sub
pop
push
nop
dec
rolb
add
xor
cli
fiadds
je
cli
jmp
aaa
jge
mov
pop
cmp
mov
and
std
dec
bound
xchg
scas
dec
rorl
and
mov
mov
cs
insb
imul
mov
ljmp
or
cmc
addr16
fdiv
pop
insl
sub
jno
gs
cld
movsl
cmp
push
scas
lds
int
ficompl
mov
in
push
mov
sahf
mov
imul
sbb
fiadds
cmp
mov
mov
inc
ret
ret
mov
stos
xor
sbb
inc
scas
xor
mov
push
push
pop
lret
cli
or
dec
adc
sub
mov
aas
jns
add
es
sub
ss
xor
cld
icebp
mov
repnz
aam
xchg
sub
aam
jne
xor
sub
sahf
mov
sbb
add
inc
xchg
or
ja
mov
arpl
push
cmp
mov
jg,pt
mov
inc
in
sti
aad
in
inc
mov
cmp
outsb
lret
mov
gs
and
mov
mov
mov
dec
dec
push
or
ror
or
cmc
call
jmp
test
sbb
cmp
cmc
faddl
mov
fimull
sti
scas
pop
addr16
inc
pop
popa
stc
dec
loopne
rorl
insb
inc
or
mov
in
push
jo
jno
dec
shrl
and
adc
imul
test
arpl
dec
sarl
ss
and
enter
fsub
push
xchg
lods
push
mov
shll
repz
and
inc
mov
mov
lcall
call
shrl
xchg
js
divb
add
jo
and
and
mov
add
jl
les
stos
jae
test
and
xchg
inc
dec
push
xchg
es
out
inc
fwait
clc
movsb
mov
jno
jns
sbb
adc
insb
shll
or
fisubrl
sbb
addr16
sarl
xchg
add
xchg
xor
or
dec
jne
into
sbb
jp
addr16
cmp
inc
xchg
pop
jp
cltd
repnz
add
pop
movsb
xchg
xor
mov
bound
lahf
lret
and
cmp
fimull
xchg
mov
jnp
popa
mul
lret
jo,pn
andl
inc
xchg
out
lret
test
cmp
jecxz
lret
out
xchg
test
test
scas
gs
std
cmpl
jnp
jg
and
jno
or
mov
xchg
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
out
shrb
jle
pop
jl
jle
add
cmpsb
pusha
icebp
mov
xor
lods
mov
add
in
mov
mov
mov
in
jns
push
mov
adc
pop
mov
and
das
dec
unpcklps
sub
fstpt
adc
insl
mov
in
sbb
add
add
push
enter
xchg
push
adcb
mov
sbb
cmpsb
out
xchg
js
dec
imul
fisttpll
out
mov
pushf
cmp
and
lock
adc
jmp
mov
and
movsl
out
or
leave
xchg
inc
xchg
int
aad
xor
icebp
mov
jg
cmp
ds
cmp
stos
sub
fwait
dec
and
nop
jecxz
mov
jns
sub
mov
adc
test
cs
dec
or
xor
popf
dec
nop
sub
xor
add
sbb
and
ds
jbe
mov
xchg
sub
and
mov
or
xor
push
mov
push
add
out
jge
out
add
sub
mov
dec
mov
pop
nop
xchg
js
fistl
mov
mov
repnz
fdivs
ss
lock
fdivs
repz
es
arpl
pop
test
imul
mov
adc
jae
mov
insl
loope
sti
sub
loopne
jnp
mov
inc
push
or
cs
inc
psllq
into
jg
scas
daa
leave
push
push
mov
pop
push
rcrb
add
mov
repnz
nop
in
in
pop
data16
adc
jmp
inc
mov
pusha
dec
and
out
mov
push
jo
ljmp
pop
mov
pop
ja
xor
hlt
inc
pop
clc
les
subb
adc
mov
jno
adc
test
test
addb
pop
lret
adc
fiaddl
js
scas
adc
mov
cmp
sti
mov
push
pop
inc
inc
int
das
pop
div
sub
xchg
stos
fidivl
outsl
out
repnz
adc
addr16
jp
addl
shl
icebp
mov
and
add
adc
push
inc
jp
jb
nop
test
push
inc
mov
ficomps
push
mov
pusha
lods
scas
jb
mov
stos
ret
shrb
aam
out
xor
add
sub
xorl
inc
clc
inc
jl
xchg
aad
arpl
or
icebp
jne
in
fcoms
je
pop
movsl
mov
loopne
stc
notb
rolb
icebp
fs
xchg
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
push
cmp
sub
jle
stos
testl
inc
sub
ret
jecxz
imul
mov
stc
inc
movsb
add
jl
add
inc
hlt
jae
aaa
add
mov
in
rcrb
inc
mov
jmp
divw
rclb
mov
test
adc
stos
pop
mov
pop
jg
test
mov
xorb
icebp
or
add
ja
xor
cmp
cmpsb
mov
es
je
and
sar
xor
pop
jle
pop
in
jno
mov
movsl
push
cli
adc
addb
test
ficoml
imulb
and
push
out
xchg
stos
jp
xlat
fwait
adc
cltd
mov
sub
lahf
in
xor
ljmp
je
adc
lds
ficomps
pop
xchg
sbb
jmp
cmp
cmpl
xor
jmp
and
and
mov
push
xor
ss
or
jno
pop
rcll
mov
mov
rclb
mov
popf
ror
or
pop
fisttps
cmc
add
push
pop
std
movsl
cld
call
loopne
jae
jno
jle
sbbb
popf
es
or
pop
dec
dec
push
test
sahf
jle
mov
jae
and
dec
mov
or
inc
leave
and
mov
mov
cwtl
aam
fsubr
jmp
pop
rcrb
sti
fcoms
dec
mov
mov
and
lods
pop
jns
xor
dec
push
loopne
sub
scas
lds
stos
gs
das
dec
dec
dec
xor
xchg
in
xchg
sbb
cmp
jmp
movsb
lret
jae
out
cmp
daa
sarl
mov
xor
cmp
inc
cltd
test
movsl
and
sub
subl
mov
push
shr
and
clc
sbb
jecxz
sub
scas
pop
lds
pop
mov
mov
jmp
pop
mov
mov
push
orb
mov
rcl
dec
xchg
push
imul
out
imul
dec
cmp
rol
incb
movsl
addr16
cmp
mov
aaa
rcll
sbb
je
inc
faddl
pop
push
fcoml
aam
rolb
sub
addr16
movsl
xchg
jecxz
xchg
cli
sbb
inc
lds
or
cmp
popf
int3
cld
test
mov
pop
dec
test
fs
stos
pop
enter
aad
ret
popf
testl
test
lods
jg
mov
fwait
mov
pop
cmp
sbb
jmp
cmp
ljmp
sub
pop
cmp
test
pushf
movsl
jne
subb
inc
pop
xor
loopne
cmpl
in
sbb
js
cmp
dec
xchg
shrb
adc
push
mov
in
or
cli
sahf
call
dec
adc
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
pop
jmp
test
pop
cmp
ffree
in
mov
jbe
xor
stc
lret
add
cmp
sbb
in
add
dec
xor
out
cmp
fistpl
subb
out
jecxz
xor
push
lcall
loop
ss
sbb
inc
jge
xchg
lcall
add
sahf
ret
xor
cmp
ret
mov
ds
mov
sub
sbb
cs
sti
mov
ret
pop
shlb
sub
xchg
pop
dec
jb
sub
cmp
loop
pop
sbb
dec
les
cs
nop
or
inc
jbe
adc
and
rcrb
in
xchg
xchg
hlt
mov
cmpsl
sarl
sub
jl
sbb
shl
jno
mov
add
push
adc
cli
sahf
mov
jmp
sarl
cld
dec
cmp
jns
roll
xor
adc
sbb
out
jb
dec
dec
popa
adc
orb
rorb
ror
adc
pop
out
lahf
xor
sarb
dec
cmp
leave
cmp
mov
pop
in
mov
mov
and
pop
push
pop
push
lods
xchg
test
or
stc
cmc
and
in
cmp
xchg
or
xchg
and
cld
fmuls
push
cmp
ja
leave
lea
push
jmp
sbb
mov
es
sub
lahf
pop
xlat
push
jns
xlat
add
cmp
sbb
ret
aad
in
mov
cmpsl
mov
mov
jmp
es
jae
dec
jg
dec
subb
sbb
filds
std
jp
ds
pop
outsb
ljmp
gs
nop
sbb
xchg
jns
les
sub
or
push
out
xchg
ret
adc
dec
dec
mov
jl
jmp
int
testb
or
aam
pop
mov
mov
adc
xchg
mov
add
repnz
xor
adcl
inc
sbb
stos
add
or
lahf
lds
aaa
in
inc
xor
loop
mov
xor
cltd
mov
cli
out
jns
xor
out
scas
insb
mov
outsb
mov
jmp
test
sub
lods
adc
sbb
mov
aad
stos
inc
adc
lock
adc
dec
adc
jle
insb
jge,pn
xchg
xchg
or
mov
icebp
sub
hlt
and
popl
mov
push
cmovb
jb
and
sbb
lods
mov
rcl
js
insb
out
stos
push
sub
fbld
insb
test
or
divl
fildll
mov
mov
sub
mov
mov
rcrb
sub
sbb
xchg
add
add
outsb
jmp
pop
xor
neg
jmp
jne
sub
test
test
mov
sub
cmpsb
xor
sub
jle
pop
fs
and
mov
nop
ja
dec
cmp
in
mov
inc
movl
inc
mov
out
divl
jg
adc
test
negl
cmpsl
mov
mov
xor
pop
lock
add
cmpsl
adc
jl
pop
rclb
incb
push
movsb
adc
or
inc
mov
cmp
cld
dec
scas
pop
sub
cmp
lret
out
jo
outsb
subb
mov
fisttpll
outsl
mov
lods
out
pushf
inc
push
dec
test
add
pop
mov
inc
cld
shll
lcall
adc
jne
adc
dec
pop
jmp
sub
sub
jnp
dec
pusha
sbb
sbb
imul
sar
cmc
mov
in
cmp
mov
lret
sbb
jb
inc
fisubs
loopne
xchg
mov
dec
inc
ficoml
push
or
pushf
and
sbb
jae
lret
mov
ret
sbb
pop
xor
dec
pop
add
rcrb
lods
ja
lahf
adc
adc
lock
shll
std
adcb
lock
xchg
push
cmpsl
cmpsl
arpl
fists
js
into
sub
xchg
sub
incb
xchg
andb
test
cmpsl
into
aad
fistl
jp
and
push
and
mov
add
test
mov
cld
jl
popa
call
push
pop
jae
cmp
jo
xchg
pop
xchg
inc
mov
mov
cmp
xor
push
in
sti
mov
or
push
shl
dec
sub
loopne
std
sbb
js
mov
aad
dec
push
shlb
mov
aas
ret
scas
js
mov
mov
enter
outsb
mov
scas
inc
push
inc
ret
xchg
and
inc
pop
mov
mov
jns
cmp
les
add
jp
sub
jg
aas
outsl
pop
push
stc
mov
sbb
clc
xor
cmp
or
adc
lcall
into
or
shrb
cmc
lcall
jle
pop
cltd
jne
sbb
test
cli
mov
pop
test
or
pushw
cmc
mov
mov
std
sti
cmp
daa
int
sub
sub
jmp
cmc
outsl
out
imul
xlat
xor
arpl
inc
movsb
incw
jle
push
shlb
fwait
insb
jg
lahf
in
fucomi
mov
imulb
test
jae
jl
mov
mov
pop
lods
movsb
and
cmp
sub
stos
pop
ret
outsb
mov
push
nop
sub
addb
adc
bound
xchg
rolb
sub
add
mov
sub
cmp
xchg
xchg
sub
lock
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
lret
push
mov
push
aas
jle
sub
jle
add
mov
mov
pop
ds
adc
movsb
gs
loop
sub
testl
stc
push
ss
mov
cmpsl
mov
xchg
jp
mov
jb
ficomps
dec
into
mov
outsb
leave
mov
fwait
icebp
in
out
out
pop
add
adc
std
fadds
dec
mov
inc
pop
jb
pop
imul
lock
add
outsb
mov
push
test
lcall
neg
loop
call
xor
jns
sbb
out
mov
sbb
insl
jae
popf
mov
das
add
sub
rcrl
xchg
cmp
inc
pop
insl
ficoms
inc
mov
push
xchg
and
add
mov
xchg
nop
cmp
fwait
and
sahf
popa
testb
adc
ljmp
flds
test
mov
not
jns
push
stc
out
add
shr
cli
xchg
add
popa
push
inc
xlat
add
aas
xor
outsb
inc
xchg
insl
or
push
sbb
in
call
inc
movl
das
mov
enter
ja
ret
ret
adc
js
jno
mov
loop
ja
mov
dec
imul
mov
inc
andl
aam
jno
addr16
sahf
jne
pop
out
loopne
add
inc
cmp
and
jns
pop
inc
scas
in
aad
sub
pop
ret
scas
pop
and
sub
jns
insb
mov
std
in
das
nop
and
test
sub
insl
jnp
push
adc
cli
adc
dec
or
inc
dec
jne
push
mov
aam
mov
xchg
shrl
push
sbb
sbb
mov
push
pop
cmp
bound
jecxz
xchg
adc
mov
mov
xor
int
xchg
popa
lahf
pop
scas
jne
add
negb
ljmp
add
inc
out
into
jo
pop
fwait
sbb
cmp
add
push
pop
cmp
jns
pop
cmp
fbstp
lods
imul
sbb
add
fidivs
or
push
jae
ret
arpl
jle
pop
shrb
cld
leave
jmp
mov
push
cmc
fisubs
ret
push
pushf
jg
adc
mov
and
ja
xchg
decl
in
and
cmp
daa
in
sbb
mov
push
lods
cmp
jne
daa
dec
add
adc
adc
je
xor
or
cmp
adc
xor
inc
xlat
into
aam
xor
cmp
sbb
inc
enter
dec
roll
push
pop
sbb
daa
addr16
sub
std
xor
mov
loop
mov
sti
imul
inc
data16
mov
or
arpl
cmp
xlat
hlt
cld
pushf
cmp
sub
enter
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
jmp
mov
xor
add
mov
jl
sub
movsb
cli
pop
leave
out
pop
pop
jbe
jns
andb
mov
ja
xchg
orb
clc
insl
cwtl
outsl
pop
std
leave
dec
data16
fdivrl
and
xlat
push
mov
pop
stos
cmp
sahf
jb
inc
sub
mov
test
clc
movsb
pushf
outsl
in
pop
fimuls
sbb
sti
outsb
mov
jns
daa
dec
shll
pop
inc
and
loop
mov
testb
dec
inc
cmp
push
cltd
push
mov
lea
imul
out
xchg
imul
pop
ja
lods
shr
stos
xchg
and
movsb
xchg
sub
loopne
aas
dec
pop
pop
sbb
cmpb
in
rcll
shrb
and
push
pop
or
dec
jle
mov
mov
imul
mov
out
fimull
scas
jne
jne
cmp
add
dec
lea
jle
enter
daa
push
inc
sub
pop
and
int3
mov
adc
rcrb
mov
popf
mov
or
test
dec
test
dec
je
xchg
jmp
xchg
adc
push
insl
mov
imul
xor
jecxz
fdivrl
push
data16
mov
ss
test
xchg
lcall
adc
xchg
sbb
js
inc
mov
jne
dec
in
xor
or
fldt
aam
sub
jae
stos
push
jg
mov
popf
adc
aam
iret
dec
mov
std
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
jge
scas
inc
cmp
mov
or
jnp
dec
push
push
mov
inc
movsb
mov
fstl
dec
dec
pop
xor
les
cmp
or
sub
mov
les
popf
lcall
outsb
jbe
and
or
add
mov
sbbb
test
or
lods
cli
push
loopne
dec
cmp
jle
fwait
add
inc
mov
ficoml
dec
popf
lds
out
and
jns
popa
mov
fcompl
dec
dec
sub
out
loop
sbb
pop
mov
inc
dec
pop
mov
sub
arpl
and
std
push
mov
addr16
jbe
dec
jle
mov
xchg
sahf
adc
int3
cli
rorl
add
add
pop
in
sti
jmp
insb
fsubs
xchg
fwait
sbb
xor
lds
mov
icebp
jns
dec
cmp
adc
or
or
sub
inc
leave
push
push
popf
dec
adc
or
bound
fnsave
dec
ds
push
pop
lods
sbb
add
out
cmp
insl
push
pop
sub
cwtl
jns
pop
mov
ja
inc
xor
sti
repz
cmp
xchg
pop
leave
imul
and
imul
stos
jno
movsb
mov
inc
int3
jp
ret
xchg
ja
pop
pop
sahf
test
in
jecxz
adc
lret
mov
xor
fcmovnbe
mov
ret
xor
xor
call
xor
outsb
test
mov
sahf
rcrb
xchg
ret
jbe
lock
pop
fs
sub
sbb
arpl
scas
call
xchg
inc
mov
mov
hlt
popf
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
movsb
aaa
mov
push
out
in
jle
adc
mov
repz
stc
test
jns
les
inc
popa
xor
pop
ficompl
cli
push
popf
mov
in
adc
dec
das
cmp
js
dec
addr16
jmp
mov
and
mov
pop
mov
sub
aaa
and
xchg
xor
outsb
mov
aaa
lock
and
add
sti
push
xchg
loopne
add
outsb
test
or
and
je
into
leave
dec
mov
imul
mov
cmp
scas
pop
fstpt
push
push
iret
pop
sahf
xchg
lods
rol
sbb
cmp
orb
scas
adc
xchg
sbb
aaa
dec
imul
mov
push
mov
dec
push
vmovupd
and
pop
xchg
mov
adc
mov
cmp
cmp
adc
inc
js
lret
les
adc
bound
fisubrs
sub
add
lods
jno
push
nop
pusha
mov
sub
mov
inc
pushl
bound
inc
sti
in
imul
pop
lahf
andb
ret
test
mov
hlt
aaa
out
inc
mov
jno
inc
cld
xlat
ja
movl
xlat
fcoms
push
push
pmuludq
xor
or
scas
inc
fisttps
inc
je
clc
mov
and
std
dec
cmp
push
and
cmp
idivl
test
shl
out
mov
sub
push
sti
fiaddl
arpl
and
push
inc
std
cmpsl
pop
inc
pushl
call
test
jmp
and
in
popa
push
lret
xchg
xchg
dec
xor
int3
les
mov
cli
push
lods
sub
ror
fidivrs
imul
adc
mov
pop
dec
leave
and
icebp
jo
cmp
jbe
imul
stos
push
push
inc
stc
adc
or
mov
xor
or
pushf
mov
mov
mov
cmp
inc
and
mov
pushf
cmpsb
adc
in
pop
sbb
fisubl
and
cmpsl
pop
mov
sahf
xor
movsl
or
fdivrs
bound
scas
adc
out
jne
sbb
xor
sub
dec
lods
out
push
test
cli
push
ljmp
out
mov
mov
lahf
scas
mov
mov
stos
das
xchg
cmpsb
mov
lahf
mov
popa
or
out
push
cmp
mov
dec
push
jnp
xor
inc
bound
add
addr16
outsl
xchg
addl
loop
cmp
subl
subb
cmp
outsl
cmp
mov
dec
sbb
push
rclb
call
push
imul
dec
daa
mov
bound
adc
add
add
xchg
add
push
jae
call
jb
jae
loop
cs
das
xchg
mov
imul
mov
jecxz
stc
iret
sbb
ret
test
mov
sti
iret
jg
xor
and
sbb
jge
pop
cmpl
fwait
dec
std
cld
push
xor
mov
mov
inc
pop
cmc
clc
shrb
xchg
ds
mov
int
popf
adc
popa
cwtl
inc
sbb
test
pop
push
mov
xor
test
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
mov
pop
or
jle
add
out
ds
dec
push
repnz
lods
adc
cld
and
addr16
cmp
mov
adc
cli
cmp
and
and
sahf
cmp
inc
push
test
inc
mov
cmp
popl
scas
mov
jp
sub
subl
int
mov
mov
or
loope
mov
jns
push
dec
add
int
push
jle
xchg
xchg
pop
out
or
xor
hlt
pop
add
push
xor
push
in
add
dec
or
arpl
jnp
cmp
movsb
pop
movsb
rorb
sub
jmp
jne
dec
xlat
and
mov
cltd
leave
cmp
and
jns
loop
stos
mov
jecxz
inc
enter
std
pop
das
dec
clc
insb
imul
xchg
inc
xchg
jl
test
or
dec
jne,pn
or
jns
cltd
in
sub
popf
lahf
cltd
jge
and
icebp
int3
mov
jnp
mov
test
dec
dec
pop
scas
repnz
inc
inc
jle
push
mov
outsl
repz
iret
bound
push
or
dec
inc
jne
popa
movsb
xor
stos
mov
call
mov
push
aam
inc
pop
and
mov
imul
dec
sub
mov
aaa
lods
aam
sbb
mov
les
pop
jmpw
sti
insb
ret
and
stos
jae
pop
int3
xchg
test
mov
sbb
dec
xchg
jl
jne
das
outsl
dec
mov
push
push
fs
cmp
mov
sbbl
sbb
sar
push
cmp
dec
pop
aas
push
inc
add
xchg
inc
je
mov
in
test
loope
imul
and
pop
das
sub
mov
test
add
lret
in
xchg
pop
dec
jl
jbe
jbe
lods
cltd
pop
aad
movsb
mov
std
movl
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
mov
sarb
jl
jle
pop
or
js
inc
nop
inc
adc
xor
inc
xor
int3
xchg
sbb
test
popf
push
xchg
lods
loop
mov
je
cmp
add
push
leave
adc
addr16
mov
and
icebp
movsb
jbe
xor
push
add
inc
clc
or
adc
sub
lret
sbb
sbb
pop
lcall
pop
aam
ljmp
fs
jno
add
jl
sbb
cli
mov
andps
scas
jmp
pop
fcoml
pop
adc
pop
pusha
mov
out
push
aas
push
sub
repz
andl
pop
mov
cmpsl
cmp
adc
shll
loope
pop
and
fnstenv
cs
xchg
mov
mov
lret
fidivs
xchg
add
out
mov
into
addl
and
adc
rcrl
sub
push
mov
scas
cmpb
jg
push
cmc
sub
push
idiv
insb
aam
add
lret
pop
mov
xchg
pop
mov
dec
push
rcrl
movsl
and
out
rorb
xchg
lods
movsl
sub
lret
push
pop
out
ss
addb
push
gs
sarl
sub
and
cmp
out
stos
xor
mov
jns
mov
test
push
popf
xor
lock
mov
mov
mov
sub
xor
inc
fmulp
ss
test
cltd
push
dec
shrl
mov
adc
cmpsb
pop
xchg
sbb
dec
xor
mov
shrl
pushf
test
and
mov
xchg
sub
test
xchg
out
leave
jnp
push
adc
scas
sbb
mov
mov
push
repz
into
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
xor
jle
jl
jle
bound
sbb
lods
adc
cmp
stos
mov
push
cmc
jg
fwait
notl
mov
xor
clc
add
xor
sub
in
adc
add
pusha
fs
sbb
xchg
test
js
incb
push
mov
jmp
das
push
into
daa
shll
sbb
jmp
xor
bound
push
add
fistl
push
mov
sbb
dec
dec
jns
xchg
add
push
jle
cmc
push
int
ds
jmp
in
insb
lods
jns
data16
push
sbb
or
iret
mov
scas
bound
ds
aad
adc
sbb
mov
iret
fdivl
inc
int
mov
into
xor
rcrb
fistl
xchg
add
and
pop
jae
cmc
mov
cmpsl
ljmp
stos
orl
out
movsl
xchg
repnz
outsl
mov
push
enter
add
and
fisttps
jbe
movb
mov
cmpb
mov
sub
cmp
inc
inc
cmp
sahf
fmull
stos
mov
aaa
dec
sbb
or
push
xor
xor
add
sub
push
lcall
push
imul
cltd
insb
jl
lret
dec
mov
daa
mov
inc
xchg
es
jge
push
pop
xchg
and
or
and
pusha
movsb
je
notb
clc
ret
inc
mov
pop
sub
xor
ret
push
cmc
aam
out
popf
mov
xor
pop
or
scas
ss
outsl
jbe
stos
fisttpll
inc
jecxz
sub
lods
dec
mov
daa
jns
pushl
mov
fisttpl
xchg
sti
popa
loope
fsubl
imul
fcom
dec
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
jg
push
subl
jl
jle
push
std
and
gs
cmc
inc
adc
cltd
pop
xchg
out
pop
repz
mov
mov
lahf
add
test
jg
xchg
jmp
ja
inc
rcr
add
loope
test
xor
jecxz
xchg
inc
iret
loope
into
movsl
scas
mov
repz
push
es
into
imul
shrl
insl
dec
and
push
int
push
mov
mov
fsubrl
fistps
push
pushf
repnz
adc
cmp
jecxz
cli
outsl
ja
cmp
mov
movsl
mov
int
dec
cmpsl
testl
or
xor
add
push
xor
push
leave
inc
xor
cmpsb
cli
xchg
arpl
jle
cmp
inc
push
ret
jmp
or
cmp
rclb
pop
rorl
xor
xor
push
stos
scas
sbb
push
mov
adc
nop
sahf
insl
and
adc
int3
jns
jne
inc
xor
jl
fcoms
adc
lods
or
ss
sarb
sbb
mov
movsb
fwait
icebp
orl
out
cmp
pop
sbb
and
and
push
std
fs
lret
iret
pop
lods
and
add
dec
jae
lods
rcr
cmpsl
movsb
push
xchg
jns
stc
xor
das
pusha
sub
movsl
out
inc
sub
pop
xor
mov
jnp
fnsave
sar
aas
cmpsl
add
add
xchg
inc
shlb
jo
sbb
mull
aas
jge
jecxz
cmp
add
sub
cmpsl
xor
sub
xchg
outsl
iret
xchg
dec
cmp
popf
pop
jo
mov
push
pop
push
cmpsl
cmp
adc
push
jmp
xchg
jo
cs
cmp
cmc
push
in
jno
dec
dec
pop
je
xchg
lahf
push
add
ljmp
and
dec
sub
and
sbb
sar
test
lret
imul
stc
mov
adc
and
orb
pop
add
add
sahf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
and
lret
and
jle
jnp
mov
xor
cli
mov
divb
inc
pushaw
mov
iret
aas
jg
cmp
ret
xchg
jae
sbb
push
fdivs
xchg
lds
sub
or
jb
adc
fsubl
in
add
inc
sbb
adc
int3
leave
push
mov
out
mov
cld
movsl
repnz
rolb
scas
mov
mov
hlt
pop
or
add
xor
cmp
mov
das
pop
sbb
cmpsb
iret
push
mov
test
repz
or
adc
adc
imul
outsl
push
addb
adc
inc
sub
lea
data16
inc
cmpsb
sbb
gs
add
or
jnp
add
inc
mov
ljmp
fsub
push
sub
fisubrs
mov
out
jecxz
insl
lods
decl
sub
push
cli
cltd
jge,pt
aas
mov
outsl
mov
lret
inc
mov
roll
iret
pop
cld
cwtl
hlt
push
in
mov
sbb
mov
movsb
jl
mov
insb
cmp
jmp
mov
jecxz
push
rcrb
pop
fs
insb
inc
in
jge
push
jle
inc
pop
or
in
mov
js
shll
sbb
lock
cmp
in
mov
outsb
imul
mov
enter
mov
push
xor
popa
mov
xchg
push
addr16
dec
sbb
pop
mov
mov
gs
shrl
pop
ret
cld
pop
xchg
aad
pop
pop
add
adc
cmp
pop
jno
pop
pusha
sbb
xor
out
cld
xchg
jo
sub
enter
push
sbb
call
out
cmp
add
xabort
mov
jb
jmp
xchg
scas
lds
daa
sub
add
fmull
je
cmp
adc
leave
in
loopne
scas
dec
jno
or
ja
gs
loop
xchg
ja
push
inc
fcomi
lret
sahf
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
xor
jle
and
jle
mov
xor
sub
std
out
sub
les
sub
dec
lds
aaa
jns
add
push
iret
xchg
jnp
add
mov
sbb
mov
data16
xchg
hlt
es
ret
fmulp
mov
lea
and
xor
mov
movsl
ja
popf
push
jae
and
sahf
orb
add
aas
enter
rolb
movsb
adc
push
pop
sub
inc
mov
pusha
aaa
jp
mov
mov
ljmp
mov
mov
daa
mov
fcmovnb
data16
pop
jl,pn
roll
fchs
adc
outsb
push
pop
jle
fadds
sbb
cltd
stos
stos
popa
xor
xchg
add
cmp
leave
ret
add
push
mov
mov
mov
aam
add
out
es
movsb
cmp
rcrl
clc
test
and
int3
jno
mov
push
sub
fistpll
popa
adc
int
hlt
cli
pop
xchg
out
insb
add
rorl
test
adc
decl
stc
dec
gs
je
inc
mov
ret
scas
js
lret
fsub
unpckhps
push
sub
stc
fcompl
movsl
pop
aad
mov
imul
adc
xor
xchg
fistpl
xor
cld
arpl
cs
rcrl
insb
movl
dec
movsl
add
decl
test
cs
ds
push
lods
mov
xchg
xchg
cmp
fiaddl
xchg
icebp
add
insl
aas
stos
jb
jbe
xchg
popf
push
pop
sbb
add
push
daa
shll
jbe
xlat
mov
mov
cltd
lahf
out
cld
and
mov
in
and
rorl
mov
or
mov
loop
fucomp
insl
pop
mov
sbb
repnz
sbb
ret
lret
sti
insb
scas
mov
pop
rclb
mov
popa
add
lds
xchg
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
arpl
jl
jle
pop
adc
cmpsb
cltd
sbb
int
dec
testb
xchg
cmp
fidivrl
fs
mov
std
mov
cli
rolb
cmpsl
rorl
int3
stc
jb,pt
jl
and
sub
enter
xlat
pop
adc
jno
cmp
cmpsl
mov
insb
cmpsb
sbb
sahf
dec
mov
push
sbb
int3
sbb
stc
icebp
jno
mov
sbb
iret
mov
mull
push
xchg
sti
lret
sahf
xchg
jge
xchg
repz
inc
out
push
mov
or
mov
les
aaa
push
lock
sti
mov
in
push
sub
in
mov
repz
call
dec
out
push
les
dec
int
mov
push
les
arpl
push
lcall
inc
stos
int
outsb
pushf
lds
ljmp
lret
and
or
cmp
popf
leave
dec
fcoml
aad
jp
rol
jge
and
pop
mov
test
xor
fs
sub
dec
ja
insb
cmp
mov
inc
out
int
inc
cmpsl
mov
xorb
cmp
xchg
mov
test
cmp
add
test
dec
and
movsl
imul
scas
pop
mov
lret
push
or
sub
out
push
cmp
call
mov
loope
test
push
loope
jo
inc
mov
xor
pop
pop
aam
call
fisttpl
out
daa
xor
xchg
scas
into
mov
mov
ret
pop
jp
fstps
inc
push
es
cmpsl
push
cmp
sbb
out
inc
jae
xchg
sbb
pop
mov
int
add
add
cmp
lahf
js
sarl
sbb
fnstcw
xor
xchg
adc
lea
mov
lret
aaa
ret
sub
push
sbb
pop
push
jnp
xchg
xchg
adc
sub
inc
pop
jo
mov
xor
sub
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
enter
jle
jl
jle
mov
adcl
and
jns
dec
fnstenv
fs
pop
and
sbb
add
neg
mov
inc
cmc
push
xchg
ret
fsubs
popa
lcall
inc
lret
mov
jns
pop
cmp
mov
test
movsb
cmp
loopne
sbb
or
adc
push
aas
add
pop
call
mov
je
daa
jmp
outsl
mov
jp
loopne
dec
stos
loop
mov
into
stc
mov
inc
icebp
mov
movsb
int3
pusha
pop
push
bound
jmp
ret
xchg
mov
sbb
int3
jne
xor
int3
xchg
jmp
cltd
jno
lea
addl
pop
sub
ror
xchg
cmp
and
inc
call
fucomip
jbe
xor
shrb
adc
xor
xchg
mov
adc
push
or
cmp
add
jp
fisttpll
jno
pop
fs
sbb
pop
push
mov
arpl
imul
inc
fsubrl
bound
push
test
testl
aas
ljmp
push
push
sub
jl
les
test
jp
or
enter
shll
sub
pop
xchg
dec
iret
mov
sbb
test
inc
and
mov
and
cmp
lret
sub
pop
in
xor
cmp
xchg
lock
fsubs
fiaddl
sub
dec
lcall
and
mov
lahf
imul
or
sarb
sbb
dec
adc
jp
push
dec
jno
clc
shll
xor
fldt
gs
mov
adc
mov
mov
jl
imul
insl
push
loope
jmp
movb
mov
sbbb
shll
nop
lea
add
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
insb
mov
sarb
and
jle
es
mov
inc
mov
fisubrl
push
cmp
in
cmpsl
jnp
push
sub
mov
pop
outsl
jg
mov
cltd
fsubrl
fiadds
sub
out
and
popf
test
inc
stc
cmpsb
adcl
rcrb
movsb
clc
into
add
fnsave
push
aad
int
mov
jle
std
fsubrl
popl
pusha
sbbb
sahf
xchg
push
stos
mov
jp
lods
aaa
add
jl
mov
push
and
fsubs
sub
cmc
js
xchg
xchg
ror
outsl
xor
sub
mov
lahf
pop
mov
pop
lea
out
jle
addl
jg
es
pop
xor
ss
mov
insl
in
push
fldt
dec
jmp
jo
adc
xor
jno
ret
lock
insb
mov
inc
pop
loope
push
lods
sbb
mov
and
pop
cmp
sub
adc
daa
lret
pusha
inc
and
cs
rcr
pusha
scas
dec
jp
sub
les
in
sarl
rcll
jecxz
mov
in
test
mov
xchg
movsb
sbb
daa
fiadds
test
rcl
or
mov
adc
mov
jl
adc
dec
out
stos
ret
repnz
repnz
jbe
int3
mov
pmullw
testb
jg
xor
ljmp
jnp
mov
mov
push
lret
push
sub
pop
popf
push
xchg
inc
cwtl
or
cltd
xor
mov
in
dec
pop
jns
cltd
mov
xor
fists
add
cli
jg
push
lcall
negl
mov
xchg
mov
sub
icebp
or
or
sbb
and
in
push
arpl
aad
pop
xchg
inc
ja
shrl
leave
aam
outsl
jns
popf
in
filds
fstpl
push
push
mov
mov
stos
loope
xchg
negb
adc
cmp
into
sbb
inc
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
in
adc
dec
inc
cmpsl
lods
loop
jp
sbbb
dec
lock
int
pop
scas
ja
divl
cmp
lds
push
inc
je
in
bound
insl
xlat
sbb
cmp
fmul
add
xchg
mov
mov
inc
fsubr
push
jl
mov
es
movsb
mov
sub
mov
rcl
fiadds
std
icebp
fmull
mov
add
repz
ror
leave
push
stc
into
stos
or
adc
lahf
pop
push
mov
out
mov
mov
jle
xor
add
scas
push
lcall
sub
push
icebp
int3
mov
je
repz
js
pop
cmpsb
add
inc
push
and
pop
xor
inc
xlat
lret
enter
xlat
lods
loopne
imul
leave
add
mov
sbbb
and
or
rcll
jns
inc
sub
or
shlb
push
fwait
insb
in
into
stc
push
sub
insl
sbb
fimull
fcompl
add
mov
jnp
imul
insb
or
push
and
and
jl
xchg
xor
jb
jmp
xor
pop
int3
inc
sub
cmc
xchg
lcall
mov
aam
xchg
cli
and
sbb
lods
dec
repnz
xorl
or
aas
movsl
inc
pop
xor
daa
loopne
btsl
sub
pop
add
cld
adc
pop
std
jecxz
pop
lret
xor
mov
dec
mov
loope
xchg
sbb
das
inc
cmpsl
pop
add
dec
negl
push
lsl
das
dec
dec
mov
jnp
sub
loope
pop
out
sahf
cmp
loop
stos
adc
fimull
inc
jecxz
in
adc
mov
sbb
pop
ss
adc
cmpsb
call
cmp
mov
insb
in
jg
pop
mov
xor
into
out
push
xchg
sbb
les
fimull
sub
test
fwait
out
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
and
jle
jl
jle
jae
sbb
iret
inc
std
lds
sahf
xchg
xchg
inc
aad
dec
arpl
push
dec
std
dec
stc
movsl
jl
xchg
rcr
int
jns
add
ja
or
and
int3
dec
sbb
jo
inc
mov
fadd
cmpsl
ret
fnstsw
push
sbb
sub
mulb
cmpsb
push
ds
shr
push
cs
mov
movsb
ret
jne
fwait
les
out
outsb
pop
clc
lret
insb
push
push
cmp
inc
in
jp
cmp
xchg
shrb
push
inc
stc
jp
jo
repz
or
out
dec
sub
jno
pop
push
inc
insb
je
xor
ret
ss
mov
jo
xchg
inc
or
or
iret
xor
push
xor
pop
jnp
out
data16
adc
hlt
stos
ljmp
add
sbbb
fnstenv
jle
sbb
leave
subb
or
xlat
imul
insl
call
daa
test
call
mov
dec
fs
xchg
mov
mov
jle
inc
sbb
fdivr
cmp
pop
mov
call
mov
and
mov
frstpm(287
push
push
out
dec
test
sbb
lods
loop
into
dec
cmp
jl
out
outsl
push
inc
testb
jb
push
mov
cmp
pop
std
push
sub
data16
pop
push
jno
cmp
jb
cmp
adc
cli
xchg
push
xor
out
loop
inc
inc
les
fwait
out
pop
inc
jg
cmp
and
test
cmpsb
fdiv
mov
cld
add
jp
push
xchg
aam
push
xchg
pop
mov
ficompl
push
jb
xorl
lret
sahf
or
cld
push
cltd
mov
cmc
notl
pusha
push
jmp
inc
jge
jl
mov
pusha
shrl
pushf
and
outsl
cld
jb
push
xor
jnp
outsb
aaa
add
push
pop
lahf
or
pop
pop
and
mov
ficoml
sub
insb
insl
mov
imulb
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
arpl
arpl
fnstsw
and
jle
mov
xchg
adc
mov
dec
push
test
andl
ror
jae
sbb
xlat
mov
mov
push
aam
sub
imul
mov
shr
out
add
jmp
jge
adc
in
in
jne
pop
data16
jl
inc
enter
xchg
mov
std
and
aad
fs
ljmp
std
add
push
jg
mov
mov
lret
xor
mov
sahf
xlat
mov
repz
lcall
in
and
and
adc
test
xchg
xlat
cmpsl
jb
leave
test
and
xor
push
xchg
xor
push
fcmovbe
out
aaa
push
fcom
daa
and
cmp
ljmp
sahf
leave
cmp
or
sbb
xor
sub
lea
daa
repnz
movsl
iret
addl
daa
xchg
mov
test
inc
lods
add
loop
pop
aam
das
xchg
inc
fimuls
std
mov
mov
mov
xchg
push
mov
iret
loop
jbe
add
mov
aam
mov
sarl
mov
and
ss
in
mov
aaa
pop
jecxz
lret
mov
rcrb
cmp
and
or
xlat
enter
mov
sbb
je
inc
add
out
xor
cmpsb
mov
jns
sbb
or
imul
ret
iret
fwait
pop
outsl
sub
fisubrl
gs
sbb
fsubr
cmp
fwait
in
cmp
mov
xchg
mov
pusha
nop
clc
pand
mov
dec
loop
shrb
pop
jne
movsl
push
sub
loop,pn
push
xchg
adc
scas
nop
push
outsb
jnp
and
fcmovnbe
inc
sub
xchg
ds
jbe
lret
mov
outsl
in
stos
in
or
xor
lahf
mov
call
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
and
test
cmpb
dec
cld
sti
mov
jno
xchg
cmp
bswap
loopne
movsl
xchg
lods
and
dec
sbb
sub
push
dec
sbb
jbe
mov
mov
stos
mov
jecxz
cmp
xchg
mov
test
xlat
mov
inc
lock
clc
sub
sbb
dec
inc
dec
add
shl
bsr
mov
sub
stc
lcall
pop
repz
or
xchg
fldenv
add
or
lea
ds
mov
fwait
cmp
mov
pop
pop
mov
call
out
std
mov
push
mov
mov
cmp
out
outsl
add
xchg
aam
les
mov
cmpsl
psadbw
pop
test
rorb
lea
subl
lock
push
push
call
sub
sbb
add
dec
lret
sbb
negb
scas
sub
push
add
mov
add
mov
mov
cmp
pop
fiadds
mov
cwtl
xchg
sub
add
dec
xlat
int3
pop
out
fsubrs
test
enter
jns
loope
adc
jle,pn
mov
fistpl
fildll
fiaddl
scas
jmp
jne
pop
outsb
xor
xchg
mov
rcl
or
cmpsb
arpl
mov
sub
adc
sub
nop
scas
test
aaa
adc
inc
lret
push
iret
into
mov
dec
adc
push
sbb
rclb
sti
cmp
movsb
sbbl
bound
daa
pop
add
outsb
mov
xor
mov
sub
push
sub
in
hlt
cli
add
mov
xor
loope
xchg
sub
insb
mov
aas
sub
xlat
shrl
dec
xorb
imul
jns
xchg
sbb
xchg
repnz
xchg
push
lock
aam
xor
addr16
popf
lods
fwait
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
inc
mov
jle
cmp
push
mov
adc
into
mov
out
ret
test
out
popa
subl
repz
cmp
xchg
stos
xchg
or
add
mov
ljmp
pop
call
pop
pushf
adc
rcll
xor
dec
adc
fcmove
jg
loope
mov
pop
pop
inc
ret
push
roll
sub
and
fwait
jg
mov
fwait
add
xchg
decl
jnp
xchg
sarl
inc
in
jne
in
lret
mov
and
jmp
clc
ror
jne
push
push
insl
in
test
inc
jns
out
lods
fs
sub
js
shl
aad
sbb
sbb
loopne
lods
jbe
push
mov
sub
push
mov
push
je
or
ret
lods
lds
insb
fld
mov
xchg
stos
mov
test
clc
push
jge
cmpl
ds
ja
mov
pop
pop
hlt
dec
fisubs
mov
pushf
add
stos
ja
jge
rorl
mov
gs
ret
sbb
mov
sub
cmc
dec
push
inc
xchg
inc
cmp
adcl
repz
out
and
out
pop
cmp
mov
imul
adc
push
insb
nop
aaa
push
pop
cmpsb
data16
add
adc
ja
cmpsb
jne
xchg
sbb
lret
pop
sub
jmp
add
cmp
or
jnp
dec
movsb
stos
inc
int
push
into
sbb
mov
call
mov
and
cltd
sarl
addl
or
mov
adc
push
sub
lea
xchg
mov
inc
mov
jne
cli
push
fidivrs
jb
dec
sub
sbb
mov
inc
push
loopne
pop
xchg
mov
mov
loop
xor
push
inc
cmp
jno
and
rorb
fstpl
es
fidivrs
test
add
push
sbbl
jmp
lds
popa
mov
fisttpll
xor
cmp
subb
adc
ret
inc
stos
and
inc
testb
inc
or
ret
push
and
push
out
sbb
and
sub
mov
fdivp
aam
lret
test
or
inc
aaa
popa
insb
lret
imul
push
sahf
push
popa
repnz
push
inc
js
stc
loopne
sub
sbb
mov
dec
sub
xlat
mov
pop
gs
clc
xor
fsub
jno
cmp
div
inc
lret
push
imul
loope
jne
cwtl
and
xlat
xchg
cltd
mov
jne
mov
imul
sbb
mov
inc
jmp
jmp
movsl
mov
aas
call
lret
mov
fiaddl
in
test
lea
sub
xor
add
push
or
jmp
jnp
loope
xchg
pop
imul
dec
pop
popf
lock
rcr
and
or
ds
sbb
gs
push
or
loopne
lock
movsl
inc
roll
mov
inc
xor
push
shrl
fwait
push
lock
adc
cmpsl
pop
inc
mov
cmp
adc
pop
out
cwtl
mov
jns
cmpsb
lret
and
fstl
stos
cwtl
mov
xchg
out
imul
mov
push
pop
mov
rorl
cmp
and
mov
pop
sub
jmp
sub
and
cmpsl
xchg
inc
lret
jno
ljmp
add
gs
pop
push
adc
stc
hlt
data16
cmp
inc
xor
jg
movsb
jecxz
adc
dec
push
imul
dec
je
jbe
cwtl
out
mov
cmpsl
scas
lret
and
inc
pop
in
cmp
lods
lods
add
call
repnz
idivl
imul
inc
cmp
push
xor
icebp
pop
je
movsl
das
in
jno
stc
sbb
sub
and
out
stc
fildl
cmpb
sub
fimuls
jp
dec
lret
out
mov
xchg
sbb
xchg
pusha
fisubl
xor
fcomip
cwtl
inc
xchg
jg
insl
test
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
aad
scas
scas
cmp
jle
cmp
push
sub
outsl
xor
imul
js
mov
or
sub
xchg
dec
test
mov
push
loop
in
jns
mov
mov
fwait
mov
repz
mov
movb
inc
shlb
push
incl
mov
mov
std
adc
fwait
in
inc
cld
ret
inc
pop
mov
stos
jae
rcll
cmpsl
call
sbbb
or
push
mov
insl
push
fistpl
xor
std
pop
pushf
fidivs
or
ljmp
int3
pop
xchg
sbb
int3
cmp
cmpsb
cmpb
mov
cmp
sbb
and
imul
and
lret
sub
push
mov
lds
lcall
in
lret
aam
int
pop
lods
and
cld
sbb
repz
mov
lahf
shl
ds
dec
negb
fsubrl
mov
sub
sub
xor
in
mov
and
cmp
mov
out
push
cmp
xchg
push
popa
jb
pop
adc
xor
fsts
imul
mov
in
mov
dec
mov
das
sahf
dec
fimull
fyl2x
pop
add
mov
fnstsw
cltd
push
fidivrs
nop
push
xlat
xchg
mov
sbb
lahf
sbb
fwait
and
sub
out
add
jecxz
rclb
movsb
lcall
into
repnz
dec
push
mov
cmp
mov
aas
cld
ret
into
or
mov
mov
cmpsb
mov
xchg
leave
pushf
adc
leave
adc
jnp
pop
leave
insl
xchg
jae
push
push
push
dec
mov
mov
dec
xchg
push
cwtl
xchg
fcoml
daa
cs
fldt
xorl
or
pop
and
push
cs
sub
stos
cmp
cs
push
jo
roll
cmc
dec
lahf
mov
lods
pop
jmp
aam
dec
mov
mov
xchg
jno
mov
or
xor
push
mov
loope
fdiv
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
je
mov
and
jle
jl
jle
push
jo
xchg
icebp
bound
les
icebp
xchg
push
movsl
icebp
fstps
sahf
jmp
sub
je
in
jae
or
movsl
nop
mov
loope
and
mov
cli
adc
popa
sub
cmp
pusha
ljmp
cmpsb
cwtl
enter
lret
andb
fs
mov
fdivp
sbb
mov
jb
ss
fadds
add
test
push
call
fistpll
push
ficompl
repnz
mov
popa
popf
fidivrs
jo
sub
inc
aam
add
addr16
and
jmp
cmp
pop
add
outsb
fcompl
inc
inc
mov
les
mov
mov
sahf
xor
lods
ds
jns
or
jecxz
sbbl
inc
outsl
call
stc
das
rcr
fst
add
les
es
into
pop
in
ret
cmp
xor
jbe
repnz
mov
inc
test
lods
mov
mov
xor
push
wbinvd
jle
imul
xor
or
or
cld
stos
arpl
pop
int3
adc
mov
dec
xchg
jne
rcl
popa
repz
test
scas
lcall
repz
mov
pop
cs
adc
fs
stos
mov
popa
push
cmc
jl
push
das
dec
cmpsb
mov
cwtl
pop
fisubrl
xchg
cmc
in
packssdw
push
adc
jp
repnz
cmpb
scas
mov
pushf
jns
xchg
lahf
les
sub
gs
sbb
sbb
push
pop
adc
outsl
push
paddsw
xchg
loopne
scas
xor
aaa
push
mov
xchg
xor
mov
dec
and
mul
test
jo
aam
aaa
push
and
dec
dec
sub
pop
les
fisubrs
daa
dec
aad
push
inc
jb
pop
ljmp
xchg
stos
push
in
inc
cltd
jl
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
xor
jle
cmp
dec
stos
jl
inc
jno
daa
sbb
gs
mov
das
adc
mov
sbb
jge
and
imul
pop
sub
sbb
add
mov
pop
mov
inc
fldt
xor
adc
push
mov
pop
push
inc
or
leave
insl
mov
adc
jb
ret
int
inc
cmpsb
loop
dec
push
loope
xor
fsubs
in
icebp
pop
and
and
xchg
pop
fdivs
xor
test
push
mov
nop
pop
sub
lods
fmul
fs
out
int3
gs
ja
das
and
shl
call
setbe
cwtl
xor
inc
lcall
push
repz
int3
ja
pop
push
mov
mov
jno
add
push
mov
dec
xorl
lret
fidivl
out
jae
lahf
std
das
lret
mov
push
add
insl
lock
pop
shll
jge
aaa
cmp
add
aaa
sbb
add
sub
mov
sbb
xor
add
jp
xor
jp
xchg
movsb
imul
das
or
loop
pushf
inc
cmp
mov
mov
jmp
xor
or
stos
adc
fdivl
push
ljmp
sahf
mov
ds
pusha
les
orb
pop
inc
mov
jns
push
stc
stos
mov
xchg
fistl
cmp
mov
fnsave
out
cmp
js
stc
notb
out
push
jge
xchg
sub
icebp
pop
cmp
enter
out
mov
cltd
popf
mov
pop
test
ja
out
xlat
sub
adc
cltd
mov
inc
sbb
nop
out
popf
scas
fs
shl
pop
pop
ja
cmp
mov
cwtl
sbb
faddl
repnz
xchg
mov
sub
call
incb
xor
pop
push
nop
xchg
fs
xorb
pop
pop
jp
lock
inc
mov
mov
sbb
or
scas
mov
repz
rcll
jle
daa
cmp
cmc
ss
loop
inc
mov
imul
clc
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
inc
in
push
in
jle
cmp
jl
insl
lock
adc
pop
pop
push
add
xor
shll
cmpb
mov
out
cs
stos
add
jl
jp
push
sahf
xchg
push
stos
push
rcr
pop
fwait
lods
shll
std
decl
pusha
rep
mov
mov
imul
stos
pushf
lret
cmp
mov
cmpsb
jle
fistl
jo
addr16
sar
test
loop
out
mov
jne
mov
xlat
dec
sub
lds
testl
out
xchg
repnz
mov
sbb
gs
sub
jge
dec
push
adc
dec
sbb
stc
sarl
cltd
push
negl
mov
out
cmp
sub
cmp
imul
cmp
cmp
iret
add
ds
rol
push
mov
sti
mov
dec
mov
imul
push
dec
cwtl
push
repz
xor
dec
mov
mov
mov
fimuls
ss
xlat
push
pop
dec
movsb
lret
lock
iret
insb
pop
into
insl
mov
pop
lcall
nop
xor
jmp
inc
int3
adc
cmc
mov
mov
out
pop
clc
jecxz
rorl
enter
cmp
push
or
inc
and
mov
mov
fcoml
std
mov
xchg
jnp
and
lcall
jno
add
movsl
mov
mov
dec
adc
cmp
and
rorb
or
das
adc
xchg
aaa
test
mov
pushf
aas
rol
xor
xor
pop
mov
leave
adc
xchg
rclb
mov
push
xor
inc
jl
and
mov
jnp
add
or
scas
xchg
inc
push
int
sahf
popa
out
out
out
scas
xchg
nop
ljmp
in
xchg
outsl
and
sub
movsb
jae
out
and
lods
mov
mov
inc
cld
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
pop
push
jle
cmp
and
sbb
sbb
ljmp
sbb
dec
scas
sub
inc
dec
into
jnp
addr16
pop
sbb
fstpl
negl
loop
sti
mov
fidivrl
adc
testl
jo
pop
inc
enter
ficomps
cld
out
psrad
pusha
bound
dec
ret
mov
mov
enter
mov
repnz
jnp
in
xor
loop
mov
pop
dec
sbb
loopne
mov
shl
insl
pop
mov
sti
mov
nop
rorl
mov
hlt
dec
outsb
mov
add
adc
fisubrl
xchg
mov
stos
mov
pop
cmpsb
cltd
push
test
mov
xchg
or
lds
mov
xchg
push
xchg
xor
dec
aad
jno
fsubrl
sbb
shrl
mov
xchg
popl
pusha
mov
mov
mov
dec
arpl
mov
jb
sarl
pop
or
lds
and
push
pop
cmp
loop
out
add
cmp
inc
arpl
or
insb
push
push
mov
dec
nop
adc
mov
mov
inc
ffreep
shll
mov
test
punpcklwd
into
es
pop
lahf
je
dec
push
addb
lds
out
jmp
inc
movsb
testl
sub
adc
xchg
mov
or
ljmp
or
ss
mov
movsb
jb
test
xor
push
loop
adc
dec
pusha
fs
popf
out
lcall
add
push
push
push
fs
jge
adc
aam
adc
in
stos
adc
out
rcll
sub
mov
lods
mov
inc
test
dec
test
inc
jecxz
cmp
mov
dec
xchg
repnz
push
mov
mov
inc
movsl
dec
inc
jo
jbe
jne
sub
test
pop
fsts
xchg
push
push
cmc
in
lcall
pop
or
imul
add
je
add
out
ss
add
add
add
leave
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
adc
sbb
push
out
xchg
xchg
xchg
fdivl
push
mov
out
loopne
sahf
sbb
lahf
dec
shl
cmc
xchg
bound
cltd
cmp
lahf
xlat
stos
adc
scas
cltd
loope
icebp
dec
cwtl
inc
push
scas
jge
test
inc
ss
loope
addr16
sbb
push
inc
cmp
lea
popf
mov
or
adc
call
jmp
or
in
es
addr16
xor
loopne
mov
push
sub
fdivrl
sub
nop
inc
adc
inc
aas
les
sbb
lret
mov
scas
sub
inc
insb
or
dec
psubb
ss
pop
sbb
sbb
xchg
sbb
inc
iret
clc
leave
fwait
ror
ja
jp
inc
push
sub
push
push
xchg
push
das
inc
xchg
dec
fsts
xor
lods
mov
ds
pop
mov
jb
test
push
mov
int3
jns
inc
jns
sub
icebp
stc
inc
mov
mov
xor
cwtl
jno
nop
xor
sbb
sbb
cli
sarl
insl
mov
adc
pusha
test
jb
xor
pop
popa
inc
orb
jno
rol
mov
das
push
or
push
por
jmp
jg
out
xchg
popa
jge
sbb
fists
pop
pop
jp
mov
push
lret
fsubrp
sbb
or
fidivl
xchg
hlt
in
push
lcall
out
or
pushf
add
sbb
pop
ja
fmull
push
mov
daa
pop
and
clc
jns
mov
sarl
jbe
loope
adc
xchg
sbbl
and
sub
iret
call
mov
xor
add
pop
pop
xchg
iret
mov
jbe
ds
jae
test
add
imul
fcomps
mov
gs
repnz
and
ss
push
jge
xor
or
js
scas
hlt
sbb
or
jmp
test
add
fistpll
sbb
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
jge
pop
insl
idivl
cmp
mov
mov
dec
movsb
and
and
push
daa
xchg
out
popa
mov
push
mov
test
lahf
mov
xor
clc
add
ljmp
aad
sub
xchg
leave
mov
push
mov
push
cld
sub
std
lahf
popa
leave
cmp
push
cmp
inc
push
int3
or
mov
jp
aam
inc
lods
shlb
cli
lret
sbb
insl
data16
in
inc
xor
loopne
xor
mov
stos
js
fcom
mov
dec
scas
xor
int
jg
loop
lock
mov
xor
xchg
mov
mov
inc
cli
ljmp
outsl
cmpb
inc
or
fildl
out
rclb
mov
outsl
loop
mov
aaa
idivb
and
movsl
mov
aaa
int
int
inc
adc
test
ss
gs
and
pusha
insl
add
xor
aaa
or
xor
lret
movsb
jle
jnp
clc
outsl
cmp
dec
xchg
inc
out
sbb
pop
rolb
adc
xchg
jae
mov
test
sub
cmc
pop
es
out
pushf
push
pop
cmp
cmpsl
lods
cmp
filds
imul
movsl
loop
xor
dec
sbb
inc
cmp
shl
sub
push
cmc
scas
aam
js
movsl
idiv
mov
jecxz
add
mov
gs
cmp
sub
test
cmc
jp
xchg
jne
lds
js
push
movsb
jbe
es
sbb
ljmp
lock
cmp
add
movntq
out
loope
popf
sbb
cmp
test
dec
sbb
cld
testb
aad
shr
pop
out
mov
inc
dec
pop
jecxz
jb
pop
and
mov
loope
inc
fldl
data16
push
orl
jae
into
mov
ljmp
pop
sub
mov
test
cwtl
push
addr16
pop
fbstp
inc
dec
xchg
fcompl
sbb
daa
adc
icebp
mov
in
lret
popf
pop
loopne
pusha
div
lods
nop
jp
inc
in
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
inc
or
or
bnd
cmp
cmpb
and
sub
in
fcoms
gs
into
pusha
mov
mov
mov
mov
push
mov
inc
xor
push
sbb
bound
movsb
fbld
movsl
lahf
sbb
jb
cltd
jns
fcmovnb
adc
cli
out
xlat
insl
push
cmp
inc
jmp
push
xchg
cli
dec
sub
adcl
int3
dec
mov
jbe
repz
out
int3
adc
mov
inc
scas
iret
xor
xor
inc
int
nop
imull
aam
imul
pop
or
sub
pop
mov
sub
jo
out
push
lods
popa
int
cmp
imul
sub
push
push
inc
push
daa
or
sbb
mov
scas
int3
cmp
xchg
and
inc
or
test
or
movsb
fdivr
arpl
ja
bound
sbb
jno
inc
test
repnz
loopne
test
and
mov
xor
test
std
cld
ret
and
push
add
xor
adc
or
xchg
xchg
loopne
mov
and
pop
insb
jb
mov
push
inc
mov
aam
jne
aaa
ret
cli
sub
testb
fistps
mov
imul
dec
dec
push
popf
mov
add
scas
aaa
jge
hlt
imul
lods
cmp
adc
or
xor
mov
cwtl
pop
mov
fistpl
add
sti
out
cmc
in
pop
add
movsl
add
pushf
out
mov
jl
inc
dec
jo
pop
adc
mov
icebp
xor
mov
call
mov
inc
lods
lds
add
lock
dec
repz
push
adc
inc
orl
and
push
stos
adc
sub
icebp
rcr
inc
in
mov
push
push
sbb
mov
sbb
jmp
pop
fbstp
mov
mov
cwtl
cwtl
push
cwtl
arpl
dec
xchg
sbb
sub
pop
push
inc
pop
push
out
sbb
les
lret
aad
mov
cmpsl
inc
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
cmp
jge
call
jl
jle
sti
out
mov
push
sbb
mov
jne
dec
lock
scas
and
jecxz
push
inc
xor
into
mov
adc
lds
mov
or
mov
push
rol
xor
push
push
push
and
sub
and
in
ja
inc
movsl
lcall
or
and
sti
pop
stos
push
iret
xchg
je,pn
mov
scas
scas
xchg
adc
fidivrs
inc
fnstenv
rorb
pop
mov
in
in
ss
adcb
adc
ljmp
or
mov
cmp
xchg
push
and
and
xlat
insb
cli
cltd
cld
lods
ja
in
test
leave
push
or
ja
mov
mov
add
bswap
les
push
sub
lods
mov
inc
lret
and
lods
jle
sub
shl
rcrb
xor
jmp
inc
sbb
loop
adc
shl
sub
pusha
ss
jp
fsubrs
movsb
stos
nop
fcmovnb
pop
ja
outsl
xor
jno
pushf
and
and
sub
xchg
out
mov
aaa
pop
repz
xchg
adc
sub
push
push
rcll
add
jo
sub
int
sahf
sbb
repnz
xchg
aaa
andl
loope
push
not
xchg
add
das
mov
mov
jge
sti
or
cmp
jae
shr
hlt
pop
ret
imul
jns
repz
sbb
clc
sbb
adc
mov
in
jmp
and
pop
cli
clc
repz
sub
sbb
xor
sbb
sbb
mov
add
aaa
pusha
and
or
test
lods
jmp
inc
fwait
cmp
xchg
hlt
xor
mov
xor
inc
or
lock
cltd
test
jnp
rcrl
mov
dec
lret
xor
fucomip
sub
inc
jb
sub
mov
xchg
dec
sbb
ret
dec
into
mov
and
jle
cmp
jecxz
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
js
notl
mov
jle
cmp
cmp
add
fcomi
push
xchg
ja
cltd
push
jns
jne
out
cmovns
sub
or
sahf
into
sub
xchg
adcl
into
mov
je
sbb
sub
sbb
iret
dec
mov
xor
jne
sahf
or
test
testb
inc
rcl
push
dec
dec
adc
outsl
in
sti
cmpsl
movsl
std
add
aam
fs
mov
lcall
adc
mov
jb
adc
mov
xchg
arpl
push
and
mov
hlt
lret
imul
add
shrb
mov
and
sub
cmpsl
in
jae
inc
mov
xor
cwtl
xor
cmp
push
pop
daa
into
enter
insl
testl
aaa
fs
jg
inc
adc
into
sbb
xchg
es
out
scas
stc
add
inc
imul
in
mov
xchg
jmp
mov
xlat
ret
dec
sub
aam
mov
sub
in
fucompp
bswap
popa
aas
mov
or
sub
repz
int
ljmp
pop
cs
out
sub
pop
int3
mov
push
jbe
test
push
in
mov
add
ret
leave
cmp
jb
ret
arpl
adc
mov
sbbb
dec
sahf
mov
jb
mov
push
xchg
and
jb
fcompl
add
mov
and
mov
mov
or
cs
outsl
ret
pushf
sub
xchg
ljmp
adc
ljmp
adc
in
ljmp
xchg
loopne
sbb
xor
sbb
cmp
and
repnz
into
and
in
push
mov
dec
sti
and
dec
mov
xchg
push
mov
in
ror
ret
sbb
fstps
adc
mov
jns
ja
ja
inc
push
inc
stos
sub
out
repnz
push
push
imul
fisubrl
mov
roll
cmpl
lea
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
sub
jl
jle
cmp
lret
push
ljmp
mov
mov
push
xor
int
add
fstp
nop
stos
in
iret
movsb
mov
mov
or
cmpsb
repz
daa
es
cmc
or
cmp
fisubrs
mulb
xchg
enter
xchg
dec
push
add
mov
divb
mov
adc
shl
mov
dec
jne
xor
xor
in
mov
xrelease
pop
pop
inc
lock
cmp
mov
es
push
test
pop
popf
movsl
ds
inc
nop
add
lods
inc
push
inc
cltd
xchg
mov
into
jl
sub
out
ret
jge
ja
xchg
jae
faddl
xchg
push
inc
fsubrl
push
jecxz
rclb
decl
lret
add
lea
sub
lock
mov
lods
and
pop
repz
jne
loop
add
jmp
adc
add
nop
scas
jo
fwait
mulb
loop
fs
data16
cwtl
push
inc
fbld
in
xor
sub
jmp
je
and
sub
mov
inc
pop
push
js
pop
jp
stos
dec
jecxz
mov
popa
sbbb
pop
clc
outsb
mov
fs
jns
loopne
mov
xchg
aad
adc
or
clc
cmpsl
sahf
lods
xor
fdivrs
adc
jmp
mov
mov
pusha
cld
add
loope
inc
pop
or
mov
idivl
and
test
imul
es
sbb
repz
sbb
cmp
and
jg
add
imul
pop
push
dec
iret
andl
lcall
xor
sahf
nop
inc
shl
cs
mov
push
scas
out
push
pop
xor
dec
fcomp
out
and
cmp
add
daa
mov
xor
pushf
fs
shll
test
jecxz
xchg
mov
sub
jg
xor
bound
int
cmp
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
imull
repz
sti
jle
cmp
jecxz
push
rorl
out
dec
mov
ja
enter
sbb
inc
mov
jl
inc
inc
jmp
lea
cmp
push
mov
inc
push
imul
enter
aas
dec
push
test
lahf
pop
frstor
cmc
rcl
cmpsb
and
add
out
and
cmp
sbb
and
ret
rcll
mov
inc
push
and
dec
jnp
shr
popa
and
fcmove
mov
inc
sub
jnp
clc
jmp
ja
cmp
mov
xchg
shrb
loop
rorb
ljmp
mov
hlt
xor
sahf
cmp
es
jmp
xor
mov
testl
lcall
push
fwait
imul
jne
jnp
repz
and
stos
stos
xchg
cmp
adc
push
xor
iret
sub
int3
xchg
bswap
cld
lahf
xchg
xchg
xor
mov
int
push
cmp
cmp
xchg
xlat
xor
pop
fwait
xchg
mov
jo
pop
ds
dec
lods
sbb
inc
pop
daa
push
adc
rcrl
and
or
jecxz
xchg
dec
push
mov
shr
pop
pop
clc
addr16
xchg
cwtl
sbb
mov
pop
sbb
sub
push
mov
mov
sarb
int
mov
mov
sbb
cli
outsl
add
xor
mov
jbe
or
jno
jl
jmp
inc
fnstsw
subb
jg,pt
stos
testl
out
push
ss
outsl
lcall
jp
cmp
outsl
insl
jae
or
je
push
pop
push
mov
insl
push
mov
mov
movsb
outsb
lods
and
push
mov
outsl
adc
call
fcom
xor
or
pusha
fisubs
mov
out
xlat
push
pop
adc
xchg
xchg
pop
cli
jge
jnp
les
fidivs
lahf
sbb
shrl
xchg
lea
shl
test
sbb
sarl
pop
fwait
movzwl
jae
in
lcall
add
decl
or
in
rorb
mov
jne
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
nop
cmp
jle
jl
jle
dec
jmp
push
aad
insl
mov
mov
dec
lret
loope
adc
jns
ljmp
pop
iret
mov
repz
ficomps
dec
js
fsubrl
and
iret
xor
jbe
dec
test
jle
movsl
loopne
sub
sub
mov
scas
test
sahf
loopne
jge
xor
sbb
xlat
out
jp
adc
loope
pop
repnz
int3
js
push
adc
push
cld
stc
cmp
movsl
push
xchg
shr
test
loop
push
push
push
pop
js
in
inc
pop
addl
lods
mov
adc
test
inc
push
mov
xchg
adc
cmp
xlat
call
mov
arpl
pop
fisubl
xchg
pop
js
stos
ret
cmc
push
sub
dec
mov
sbb
mov
push
aaa
jbe
and
lock
lahf
sti
dec
icebp
xor
fwait
ss
mov
jnp
sub
and
mov
sbb
shrl
add
mov
xchg
inc
jno
mov
leave
add
adc
xchg
lret
imul
mov
rclb
push
push
inc
adc
dec
std
adc
lds
xchg
push
cmc
aaa
pop
lcall
fstl
sub
testl
mov
push
call
dec
sbb
enter
pushf
sbb
insl
imul
adc
fistps
mov
stc
push
jmp
imul
sbb
nop
jp
sbb
sbb
mov
loop
or
cmp
std
push
hlt
mov
out
clc
add
aas
in
inc
jb
push
dec
insl
and
push
fisubs
push
lods
call
sub
test
divl
and
mov
and
test
int3
xchg
add
imul
fs
pusha
ja
add
jmp
pop
sbb
mov
bound
inc
clc
dec
mov
test
mov
adc
cmc
mov
mov
adc
cld
mov
push
push
lret
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
jp
testb
jle
jl
jle
sub
inc
jg
shlb
dec
addr16
sbb
arpl
xor
mov
mov
andb
xor
or
xor
dec
inc
repnz
aam
sbb
cli
data16
xor
push
test
dec
int
outsb
daa
sub
lods
jb
pop
mov
popf
pop
sub
insb
adc
pop
add
mov
cmpsl
sub
rorb
xchg
xchg
psraw
xor
dec
int
dec
out
sbb
shl
ret
dec
adc
mov
adc
jb
xchg
out
je
dec
or
dec
sbb
lahf
pop
gs
pop
arpl
push
in
out
jecxz
inc
mov
jns
movq
cmp
shr
daa
xlat
dec
es
mov
inc
xchg
addr16
inc
movsb
cli
imul
iret
adc
or
mov
mov
fidivrl
movsb
lds
mov
fwait
adc
lret
fnstenv
popa
test
testl
stos
roll
fdivl
outsl
inc
sub
xor
pop
test
mov
xor
dec
xor
fisttps
add
js
fiadds
add
sbb
repz
add
cmp
gs
push
mov
mov
sbb
movsb
adc
nop
fiaddl
mov
or
cmp
lret
adc
sbb
add
call
jnp
psrld
in
call
dec
cmp
push
pop
xor
pop
into
mov
inc
jns
rdpmc
fwait
adc
ficomps
push
psllq
fcmovu
dec
mov
xchg
mov
mov
xchg
loopne
cmpsb
insl
dec
fcmovb
outsl
int
push
daa
mov
fwait
cmp
clc
mov
rcrb
mov
daa
pop
add
shr
in
dec
xchg
cmpsl
xor
stos
fdivl
inc
xchg
ja
outsl
dec
sub
out
mov
dec
out
push
lahf
sub
int
rorl
negl
arpl
rclb
movsb
int
xchg
sub
push
or
or
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
roll
aas
xchg
adc
jle
cmp
and
fnstsw
jb
inc
cmp
inc
loop
adc
push
popf
cwtl
push
ret
cmpsl
and
add
sub
jp
fucomp
out
test
loop
shrb
push
scas
rcr
push
subl
loope
mov
dec
enter
movl
xchg
das
xchg
aaa
mov
stos
inc
pushf
mov
push
and
in
mov
fwait
add
adc
dec
pop
xchg
cmc
movsb
popf
addl
inc
dec
pop
mov
jmp
xchg
mov
adcl
jae
pop
inc
pop
sbb
xchg
sub
xchg
add
jne
in
insb
and
mov
xchg
add
push
pop
cmp
shlb
rcrb
cmpsl
push
cwtl
jl
and
add
push
adc
push
in
pushf
dec
test
pop
push
add
rcll
mov
xchg
ljmp
cli
sar
cmp
insb
xor
mov
mov
dec
push
ljmp
jg
sub
cld
cld
xor
push
into
sub
push
gs
push
sbb
scas
testl
sbb
mov
jns
dec
and
xlat
insl
lret
jo
mov
xchg
lret
mov
add
lret
mov
cmpsl
repnz
fildll
cmp
out
jo
xor
sahf
add
outsl
jae
enter
rcrb
hlt
ss
shrl
jns
mov
xor
out
insl
jp
xchg
std
out
out
fwait
and
into
rorl
or
aad
dec
nop
in
subb
cmp
jo
sahf
gs
xchg
decl
rorb
sbbl
in
or
ds
stos
aad
imul
xchg
or
and
out
cmp
cwtl
xchg
or
mov
ds
es
push
xchg
sbb
lea
dec
jb
fistpl
ljmp
aas
movsb
push
sarb
inc
inc
jne
sbb
pop
pop
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
cmp
fiadds
jle
fs
cmpsl
je
sbb
jnp
inc
stos
aam
ret
les
xor
stos
push
or
ja
outsb
sbb
mov
mov
into
dec
add
pop
rolb
xchg
out
adc
adc
imul
hlt
mov
mov
lahf
rcrl
imul
loop
adc
fmuls
stc
out
shlb
mov
inc
push
outsl
adc
jne
ds
push
adc
xor
inc
fbstp
add
aam
rcrb
ficoms
fsubr
pop
inc
mov
loope
test
pop
mov
sub
xchg
adc
pushf
jecxz
popa
pop
cmp
pop
incl
jae
jg
pop
jno
inc
jne
dec
jmp
ret
jae
xchg
adc
cli
cmpsb
lods
cmc
xchg
rcl
sahf
jns
aam
sub
ljmp
iret
pusha
in
icebp
fsubrs
dec
pop
test
or
mov
fadd
not
mov
sub
push
xlat
mov
jp
test
mov
xchg
jnp
fistps
sbb
pop
jae
fstpl
leave
xor
pop
lret
in
sbb
jnp
push
jle
aad
gs
mov
xchg
xlat
les
lods
clc
push
lret
jmp
mov
out
mov
movsb
fdivl
mov
mov
leave
mov
shrl
xchg
call
shl
inc
je
sbb
or
mov
loop
xor
sub
cmpsl
xlat
imul
stos
hlt
or
aam
or
push
fmull
inc
push
cmp
jl
pop
mov
sbb
cmp
int
sbb
icebp
pop
cmpsb
outsb
pop
fildll
ds
xor
imul
push
sub
push
loopne
out
jecxz
cs
inc
dec
push
stc
mov
push
subl
xor
xor
and
mov
jo
xchg
cmp
inc
cld
int
inc
or
ja
je
push
push
scas
jle
inc
jle
stc
jno
paddsb
pop
mov
bound
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
mov
cmp
int3
sub
jecxz
mov
adc
or
mov
add
pop
cli
pop
cmp
inc
ret
int3
hlt
sub
int3
inc
loop
cltd
or
jnp
adc
adc
loop
je
add
xchg
out
or
lcall
test
mov
icebp
jb
mov
mov
das
nop
andb
mov
mov
xor
outsl
mov
dec
js
pop
xor
xchg
and
jno
and
mov
inc
pop
pop
mov
fists
mov
xor
into
shrl
jnp
in
or
nop
fs
add
in
outsb
pop
dec
or
mov
incl
pusha
jnp
fnstenv
xchg
icebp
jl
leave
jbe
mov
dec
sbbb
jns
xchg
xchg
dec
and
push
enter
or
das
jbe
push
dec
jle
ljmp
insl
int3
pushf
mov
sbb
mov
int
test
push
stos
outsl
fs
cli
jg
loope
push
ja
pop
push
dec
cmp
xchg
push
cmc
add
mov
or
pop
inc
enter
pushf
fs
in
xor
in
mov
xlat
fsubl
clc
or
clc
sub
mov
cmpb
and
mov
or
idivb
ret
test
xchg
and
repz
xorb
xchg
sbb
adc
test
inc
inc
or
loopne
dec
ret
pop
add
cmp
mov
loopne
inc
stos
enter
sbb
mov
add
shll
je
push
dec
and
mov
sarb
push
and
sbb
fwait
jp
out
mov
and
in
cmp
xchg
jecxz
mov
sub
or
out
adc
repz
inc
sub
adc
shll
fsub
in
cmp
push
inc
mov
jecxz
rorb
clc
and
incb
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
push
outsb
repnz
jle
pushf
loope
xchg
lods
pop
hlt
dec
scas
xlat
push
movsb
and
push
cltd
js
and
into
and
ja
dec
repz
pop
in
repz
sub
jne
sbb
into
out
mov
cmpsb
cmc
mov
movsl
in
aam
lods
mov
jnp
mov
ss
push
mov
dec
cs
jne
xchg
push
xlat
jo
mov
int3
sbb
sar
mov
xorb
loope
fs
xchg
xor
sbb
add
sbb
fldl
cltd
sub
fs
pop
sub
pushf
imul
fcompl
inc
push
pop
xchg
sub
adc
in
inc
inc
inc
pop
insb
imul
mov
lods
mov
movsl
les
xor
gs
pop
push
aad
push
sti
roll
jbe,pn
inc
movsb
in
pcmpeqd
jae
or
repnz
xor
xchg
cs
lock
popf
mov
fmul
xchg
xlat
pop
add
stos
loop
pop
inc
jns
pop
fcom
xchg
or
or
mov
or
add
repz
inc
ffreep
aad
outsb
or
cld
scas
or
inc
or
sbb
mov
lock
lahf
mov
cld
daa
add
daa
xchg
mov
pop
cmp
out
iret
push
add
test
cli
jbe
arpl
cwtl
xchg
pop
adc
fstp
mov
stos
jle
popa
fmull
pusha
jle
or
clc
or
lock
jg
mov
lods
mov
pop
or
sbb
gs
nop
mov
jno
xor
or
cmp
sti
mov
movl
push
sub
mov
in
scas
div
inc
outsb
and
jns
mov
xlat
mov
loop
and
cmc
stc
aad
repnz
repnz
sub
and
arpl
hlt
cwtl
or
into
push
ja
out
mov
mov
sbb
sub
sti
xchg
les
js
imul
loope
nop
jb
mov
cmpb
xor
cmpsl
jnp
jecxz
mov
mov
pop
sub
xchg
jmp
push
std
dec
sahf
push
push
add
into
pop
iret
inc
sub
jle
cmp
push
adc
lods
lret
in
dec
jle
adc
lods
rcll
add
xor
jg
or
sbb
fs
movsb
adc
jle
pop
mov
push
or
fs
cmpsl
lods
cmp
ret
std
out
cmp
pop
cmp
testb
jge
jmp
xor
jns
mov
jbe
inc
movsl
in
adc
or
lods
cmpsl
and
cmp
push
push
scas
test
push
cmp
jle
mov
cmp
sbb
fistl
dec
mov
xor
in
faddl
push
and
push
jmp
xchg
cld
mov
test
outsl
and
dec
cmp
adc
fldl
rcl
loopne
and
sub
pop
xchg
adc
cmp
mov
movsl
jb
lret
cmpsl
lds
push
sub
jmp
sahf
movsl
das
ret
sbb
shrl
inc
loop
daa
mov
add
or
ss
jp
push
paddusb
nop
and
leave
cmp
or
mov
sub
stc
imul
pop
sub
inc
xchg
dec
das
push
jp
vmwrite
cs
and
loop
lods
cltd
pop
xorl
movsb
jg
fsubrs
and
mov
loop
adcl
dec
adc
xchg
int
mov
push
fidivrl
sbb
ss
lea
les
jp
jae
adc
xor
cmp
jmp
aam
mov
psllw
dec
out
mov
aaa
bound
jo
pop
jo
dec
add
lods
cmp
sarb
pop
mov
jns
mov
inc
inc
ljmp
jne
xchg
cmpsl
mov
adc
outsb
dec
pop
mov
cmpsl
ljmp
shl
in
dec
les
call
jmp
gs
inc
fmuls
inc
popf
adc
jecxz
sbb
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
cltd
sahf
jne
testb
jle
mov
test
xchg
test
or
adc
mov
ret
and
mov
enter
mov
enter
iret
aaa
mov
mov
xchg
hlt
test
pop
xchg
sub
lods
adc
pop
push
call
sub
cltd
mov
adc
and
mov
ds
dec
cmpsl
jmp
iret
cmpsb
and
mov
imul
push
gs
out
stc
insb
rcrl
lea
mov
cli
mov
xchg
out
cmp
pusha
xor
adc
lods
fcompl
je
stos
test
les
xchg
stos
jge
repnz
sub
adc
out
lahf
xor
adc
ret
sub
mov
mov
repnz
sub
xchg
dec
jecxz
inc
pop
xchg
rorl
test
lds
and
popl
je
xor
push
sbb
add
aad
xchg
dec
xchg
mov
jge
test
jo
movsb
arpl
ljmp
and
mov
jae
int
out
out
in
xor
ljmp
test
cmc
adc
shl
pop
sbb
cmp
pop
data16
jne
push
push
aaa
xchg
mov
mov
or
and
fldenv
mull
pop
cmp
std
nop
or
js
scas
repnz
mov
lods
dec
mov
shll
mov
pop
cmp
sbb
mov
stos
test
jge
loope
hlt
loopne
aas
jmp
lcall
push
inc
mov
loope
test
jae
or
movsb
test
jne
lods
mov
xchg
iret
mov
int3
fs
das
adc
push
cmp
push
inc
arpl
out
cmpsb
adc
cltd
lea
mov
or
adc
sbb
lret
cltd
test
lahf
push
call
pop
stc
pop
je
lahf
cmpsl
xor
sbb
out
or
inc
xlat
subb
daa
cmpsl
cmp
jge
inc
sbb
jg
loope
int
cmc
jg
ret
xorb
xor
fstpl
push
imul
aam
jmp
fwait
push
mov
mov
mov
pop
adc
loope
mov
jle
cmp
sub
jo
xchg
jmp
add
gs
insl
movsl
out
daa
pop
lcall
or
das
fcmovne
or
mov
testl
lods
add
cmpb
mov
cmp
pushf
divl
fisubs
inc
fldenv
pop
pop
xor
jbe
jle
aad
jmp
adc
out
int
test
outsb
inc
jo
mov
iret
call
jl
dec
or
jns
lea
or
inc
in
add
lds
push
cmp
push
lcall
loop
xor
xchg
inc
out
jecxz
add
mov
mov
test
stc
cmc
jle
movsl
daa
imul
insb
and
scas
jp
jo
lcall
mov
sahf
cli
in
cld
cs
nop
push
mov
push
rolb
or
inc
add
andl
xor
dec
std
fistl
xchg
sub
out
push
daa
push
aaa
test
sahf
push
rcll
mov
pop
dec
mov
es
in
test
aad
adc
out
mov
adc
mov
pop
push
lods
jl
in
mov
and
mov
xchg
pop
imul
and
or
out
fmull
push
pop
mov
adc
icebp
and
push
jg
cmp
out
leave
sub
hlt
rcr
int3
sbb
loopne
rol
mov
sbb
or
inc
push
test
xor
dec
mov
insl
add
dec
cwtl
ds
dec
cmp
add
cmp
das
inc
rorl
mov
xlat
and
ret
fmuls
aaa
lds
sbb
rcll
sbb
rorb
mov
fwait
cmp
popf
scas
sbb
inc
data16
lret
jg
lds
insl
or
mov
imul
xor
dec
xor
icebp
add
sub
enter
sbb
adc
cmp
cltd
ret
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
add
sarb
jle
jl,pt
jle
jns
ss
fnstenv
jecxz
adc
add
xchg
movsl
xor
insb
sahf
mov
test
push
sub
subl
add
and
sbb
test
jo
xchg
push
jb
mov
jno
mov
push
sbb
and
pop
push
sub
mov
pop
sbb
add
jbe
js
mov
add
aad
dec
in
je
add
imul
ja
scas
sbb
xchg
mov
and
daa
add
jp
jne
inc
mov
xor
sbb
mov
aam
inc
popa
lret
loopne
rcrb
je
jns
sub
pop
scas
sub
mov
mov
push
in
repz
outsl
mov
and
push
adc
mov
out
cltd
outsl
jecxz
pop
movsl
movsl
lods
adcl
mov
test
mov
bnd
dec
cmp
sub
dec
mov
enter
jns
cmpsl
sahf
icebp
lahf
xchg
and
xchg
cmp
pop
dec
out
lods
pop
pop
jmp
cmc
push
mov
inc
inc
outsl
xchg
add
push
mov
push
mov
xchg
addb
movb
call
dec
pop
ficoms
fisttpll
ja
push
mov
rol
jmp
push
mov
pop
repnz
ficompl
jbe
lock
mov
xor
add
jns
aaa
mov
cmp
and
inc
cld
int
nop
imul
jle
add
dec
bound
pop
or
and
outsb
out
sub
int3
push
cmp
xchg
push
mov
mov
idivb
sbb
cmp
xchg
imul
mov
sbb
adc
adc
mov
jns
das
pop
das
push
aaa
jge
add
imul
xchg
test
inc
clc
jmp
mov
mov
xor
add
jmp
orl
imul
cmpb
jl,pt
jle
cmp
clc
sbb
sbb
sub
das
mov
dec
sbbb
push
out
adc
mov
out
push
ret
jb
stos
js
int3
add
decl
stc
js
jmp
cs
xor
cmp
stos
adc
mov
push
loop
sahf
es
mov
add
or
xchg
sbb
jmp
in
jb
pop
es
xchg
imul
xor
jae
movsl
lock
inc
loopne
imul
sub
mov
add
jl
mov
lea
clc
cwtl
imul
popf
mov
sub
adc
repz
fnstsw
mov
pop
pop
inc
or
pop
jne
pushf
stos
dec
dec
xor
dec
into
shld
ja
xor
jnp
xor
mov
pop
jne
leave
aad
adc
shrb
inc
and
xor
aaa
divl
les
push
pop
and
jno
movsl
cmp
jle
jg
hlt
or
pop
add
jl
xchg
lds
jecxz
xchg
enter
addl
dec
mov
leave
cmp
mov
fidivrl
push
sub
and
mov
into
or
aad
sbb
inc
or
jp
loope
cmp
cli
out
push
cltd
add
mov
pop
mov
je
jmp
mov
lahf
shll
and
and
sarl
paddusw
ret
mov
jle
mov
jbe
mov
cli
mov
pop
sbb
in
jns
cmp
call
or
cltd
imull
adc
fisubrl
aaa
out
rcrl
ficoml
adc
push
test
imul
or
jp
xor
out
and
popf
mov
scas
lea
mov
dec
stos
xchg
cmp
jno
ja
dec
fwait
and
mov
xor
sbb
xlat
fwait
in
push
arpl
movsl
pop
scas
popl
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
leave
adc
mov
cmpsb
mov
mov
xchg
cmpsl
jl
pop
pushf
call
xchg
test
lods
mov
mov
mov
xchg
or
push
jl
out
or
mov
lods
popf
mov
and
adc
ficompl
pop
mov
xchg
lods
rcl
push
insb
jns
mov
repnz
mov
imul
cmp
mov
jl
adc
imul
inc
clc
sub
mov
sbb
mov
jnp
movsl
adc
unpckhps
pushf
pop
sub
jmp
cmp
out
mov
fucomi
rolb
pop
sbbl
out
int3
stos
std
loop
xchg
push
jae
shlb
ss
sbb
fs
and
dec
mov
push
xor
mov
mov
sub
mov
jb
in
and
cs
and
ffree
ret
mov
push
inc
test
lock
xchg
test
pop
insl
adc
lret
jecxz
push
cmp
les
sub
imul
or
xchg
pop
jne
pop
xlat
jb
cmp
insb
mov
pop
scas
in
icebp
sub
std
sub
push
sbb
dec
addr16
notb
xor
ds
jge
hlt
in
popa
inc
push
xor
das
mov
ret
in
cli
scas
icebp
cli
jo
mov
and
loop
mov
cmpsb
pop
mov
std
cmp
test
inc
fildl
aad
push
push
cmp
in
mov
adc
cmp
push
adc
sbb
sub
loopne
jae
mov
mov
int
push
loop
in
cmp
popf
imul
mov
adc
cmp
xchg
in
pop
pop
jb
push
or
stos
add
mov
mov
div
cmp
pop
mov
insb
jg
mov
xor
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
test
pushf
jle
adc
jle
sub
or
inc
aam
adc
cmp
negl
xorl
test
jl,pt
sti
out
add
cmp
sbb
bound
jle
idivb
adc
cwtl
mov
sub
lret
xor
mov
lock
xchg
mov
cmp
jo
mov
mul
pop
cld
sbb
arpl
subl
addr16
and
add
pop
xor
jnp
stos
inc
fwait
cmc
xchg
adc
jnp
cmc
stos
cld
dec
jmp
int3
sbb
or
repz
es
xchg
jge
mov
xor
cwtl
addr16
xchg
dec
mov
cmpsl
mov
aas
xchg
inc
sub
push
push
insl
lret
xchg
xchg
and
xor
jns
dec
cmp
pop
jno
clc
mov
lds
ret
mov
dec
leave
mov
fsubs
dec
add
daa
dec
dec
mov
push
das
inc
mov
xor
stos
out
imul
xchg
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
or
popaw
pop
popf
jle
adc
jle
inc
and
push
jmp
jbe
loope
ja
pop
scas
sub
xlat
jp
in
movsb
lea
mov
cs
leave
mov
ljmp
fwait
ret
and
mov
mov
lret
adc
cmpsl
pop
stos
test
cltd
nop
mov
jbe
cmp
pop
inc
inc
nop
aad
or
ret
stc
add
insb
jnp
shr
jb
and
mov
jo
xor
add
popa
sub
jg
pop
into
inc
scas
mov
out
iret
xchg
cmc
inc
ret
mov
add
pushw
dec
dec
sub
pop
sub
sahf
xchg
hlt
mov
sbb
jnp
adc
imul
testb
les
mov
jns
lds
pushf
push
shrl
repnz
loop
pop
les
bound
divb
push
sbb
pop
imul
cmpsb
ljmp
adc
jl
xchg
mov
daa
jle
repnz
cmc
add
pop
sbb
push
stos
dec
push
cwtl
fidivl
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
add
int
jb
jle
adc
jle
cmpsb
jg
test
stos
mov
in
and
pop
ror
xchg
jmp
jmp
mov
mov
cmp
inc
stos
test
xor
mov
lods
jno
in
cmc
xchg
add
pop
and
inc
fadd
mov
mov
and
rcll
cmp
aam
and
add
stc
punpckhdq
xchg
addr16
xor
cli
dec
cmp
enter
xchg
dec
repz
adc
arpl
loopne
cs
jp
fbld
push
imul
push
or
test
jp
mov
jl
cs
xorl
pop
sub
es
mov
cmp
sub
ret
jns
adc
loop
add
jmp
mov
lahf
mov
or
sub
push
sub
inc
jnp
sbb
cli
lods
sarb
notb
fsubrl
pusha
out
movsb
or
fadds
test
sahf
dec
and
cmp
push
mov
loopne
push
cmpsb
orb
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
jle
adc
jle
mov
or
jg
add
pop
jbe
arpl
xchg
jno
test
adc
das
mov
push
mov
insl
mov
cmpsb
imul
add
ss
insb
xor
mov
repz
pop
mov
jmp
ret
das
mov
dec
or
mov
xchg
imul
and
xchg
dec
mov
es
les
ret
and
rolb
mov
ljmp
mov
push
or
bound
je
xor
aaa
jecxz
gs
das
nop
insl
pop
addr16
or
fidivrl
push
rcl
sahf
pushf
insb
into
push
outsb
sbb
adc
pop
dec
in
andl
sub
and
push
xor
test
insb
out
xchg
or
divb
push
jmp
push
lret
movsb
popa
daa
xor
arpl
leave
mov
pop
pop
or
lods
push
jbe
sbb
xor
push
mov
mov
or
sub
sub
and
jne
sub
shl
push
mov
cld
sub
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
iret
hlt
xor
cltd
jle
adc
jle
ss
sub
pop
loope
enter
repnz
mov
add
cld
dec
cmp
xor
add
fidivl
cli
xchg
xchg
rcrb
xchg
dec
mov
dec
leave
push
lods
fisubs
fisubrl
xchg
cli
and
sbb
js,pt
mov
aam
mov
jmp
jb
les
xchg
insl
ret
aaa
inc
or
pop
rol
mov
jle
scas
cmp
int3
jecxz
test
mov
xchg
outsb
sbb
inc
daa
lock
inc
nop
jo
jl
lods
insl
andb
pusha
add
mov
push
xlat
aas
pop
sbb
imul
daa
add
push
mov
scas
test
call
push
pop
in
or
out
aad
pop
lea
mov
mov
popf
pop
mov
mov
mov
loopne
adc
ret
ds
cmp
jb
std
sub
pop
loopne
ljmp
stos
adc
sbb
mulb
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
xor
sub
nop
mov
aaa
mov
mov
mov
jb
testb
mov
fnstcw
add
or
les
jae
call
ja
jbe
jge
iret
mov
xchg
test
dec
nop
dec
inc
sub
and
and
jge
lods
push
iret
decl
inc
cmp
cmpsb
add
ds
in
mov
add
iret
xchg
andb
push
sbb
lds
insl
push
xor
lcall
push
add
mov
stos
inc
cmc
mov
inc
sub
das
mov
bound
dec
pop
nop
adc
adc
mov
stos
movsl
mov
push
ret
idivl
fs
adc
out
notl
repnz
xor
push
dec
es
out
or
dec
nop
ljmp
sar
ret
sbb
int3
fstpt
sub
and
xchg
xor
scas
push
push
js
ret
pop
push
dec
inc
imul
inc
cld
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
imul
fsubp
cmpsl
jle
adc
jle
and
testl
or
add
sbb
loopne
fcomps
outsb
cmp
arpl
jo
ds
jb
in
aas
xchg
mov
ja
mov
loopne
adc
add
jo
fistpll
and
movsl
movsb
jmp
nop
cmp
add
push
xchg
sbb
sti
loope
jns
sbb
adcb
add
in
rcl
dec
pusha
fmul
xchg
ljmp
clc
push
lsl
sbb
scas
pop
sub
push
loope
sbb
sub
pop
push
lds
es
ss
jns
mov
lcall
mov
test
mov
outsb
sbb
and
fistpll
lods
push
pop
inc
pop
jb
dec
mov
cmpxchg
adc
lods
arpl
cli
mov
xor
jmp
mulb
mov
ficoml
dec
aam
sbb
sub
test
stc
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
cmp
jg
jle
mov
dec
fiaddl
jl
pop
inc
arpl
push
aad
fcmovnbe
mov
pop
cld
testl
jne
sbb
mov
fwait
aam
or
std
ss
testb
mov
daa
fadds
xchg
add
xor
mov
cmp
out
xor
lret
push
je
inc
xchg
mov
jnp
out
repnz
dec
mov
adc
mov
and
mov
cmpsb
push
push
popa
js
imul
mov
insl
pushf
mov
mov
rorl
jnp
add
adc
arpl
lahf
xchg
lcall
pop
mov
adcb
aad
sbb
roll
pushf
lods
repnz
adc
mov
lcall
int3
in
cmp
jnp
fbld
or
or
icebp
and
lea
push
lock
push
imul
lret
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
lret
lcall
jle
sahf
fistpl
jmp
into
out
xor
push
inc
loopne
loop
xchg
std
outsb
jmp
fs
aad
xchg
pop
fimuls
pushf
mull
mov
add
mov
stos
ds
mov
or
aas
bound
xchg
cmp
push
inc
dec
push
jno
rcll
cmp
mov
sbb
mov
pushf
es
fists
xchg
cmc
dec
or
das
ds
sbb
leave
inc
les
mov
inc
in
jmp
mov
and
xor
adc
xchg
pusha
shll
fistl
lahf
inc
enter
mov
jbe
xchg
xchg
es
xchg
shll
fcompl
nop
mov
test
loopne
inc
mov
mov
sbb
shrb
jb
and
mov
outsl
jecxz
add
enter
sub
and
push
insl
push
insl
outsl
jecxz
push
sub
mov
test
dec
adc
clc
rorl
jns
xor
and
mov
cmpsb
in
fwait
cmp
xor
out
scas
push
ret
int
jne
test
addr16
mov
fidivrs
cmc
mov
sbb
rolb
xor
lret
test
loopne
rcr
xorl
mov
aaa
mov
stc
jg
xor
or
into
std
loope
mov
mov
xchg
outsl
mov
shlb
pop
adc
mov
test
mov
lea
sarl
jne
or
in
inc
roll
loope
push
inc
mov
rorb
or
std
adc
shl
popl
mov
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
arpl
sub
xor
jl
and
fcoml
xchg
xor
test
jne
xor
mov
int3
pusha
dec
pop
in
and
out
movsb
ss
push
in
gs
mov
push
cmp
stos
adc
push
cmp
jmp
das
adc
sbb
outsb
out
out
repnz
testl
int
bound
insl
or
dec
mov
push
add
lds
insb
je
cld
aad
dec
jecxz
ja
fisubl
cld
dec
in
cmp
insb
mov
fs
mov
into
call
xlat
sbb
pop
and
leave
add
push
adc
mov
xchg
jle
add
cltd
shrb
fistpll
call
sub
pop
pop
rorb
jbe
pop
mov
dec
sbb
mov
decl
lahf
int
cmpl
or
mov
xchg
pop
mov
mov
shr
rolb
pop
and
cmpsl
scas
push
inc
mov
or
cmc
jg
test
mov
xor
ds
enter
enter
mov
inc
rorl
cmp
out
jnp
xchg
push
ljmp
imul
out
xor
fadd
fadds
add
mov
or
arpl
adc
out
add
jl
rcl
cmpsb
call
inc
mulb
sub
movl
lock
sbb
mov
dec
call
sub
loopne
outsl
es
sbb
mov
sub
test
and
jl
inc
or
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
mov
jle
jge
jle
mov
call
dec
je
or
fcompl
inc
jae
sbb
ljmp
pushf
add
and
pop
outsb
pop
jo
repz
fcomps
aad
das
push
xor
iret
stc
sbb
je
lock
and
rol
mov
mov
lcall
nop
and
sahf
xchg
xor
xchg
test
insb
xor
dec
lret
outsl
adc
jne
test
ja
or
sti
imul
cmpsl
aas
popa
data16
push
push
pop
inc
dec
test
xchg
enter
jnp
jp
loopne
jnp
cmc
xor
int
cmp
pop
mov
fnsave
ret
jbe
sahf
mov
mov
sbb
xor
inc
lods
sub
push
xor
mov
add
add
mov
subb
js
es
gs
mov
mov
jo
cmpsb
stos
out
loope
popf
mov
sbb
imul
mov
dec
js
or
sub
or
dec
dec
adc
fstpl
adcb
cli
movsl
pusha
js
sahf
sub
scas
and
cs
push
test
dec
daa
xchg
or
std
cmc
ficoms
movsb
and
mov
mov
leave
add
pusha
xor
das
inc
cld
and
or
rclb
nop
in
xor
nop
cli
repz
mov
scas
mov
xchg
jne
aad
cmpsb
iret
jns
in
in
dec
scas
ljmp
lock
push
lret
packuswb
lcall
jne
pop
jb
jnp
insl
bound
mov
out
mov
hlt
jb
sbb
ficompl
std
xor
dec
inc
lcall
adc
cltd
out
jnp
cwtl
lahf
mov
ret
testb
push
sub
aas
les
ret
loopne
cltd
cltd
push
dec
cmp
push
fld
xor
cmp
cli
pop
loope
sbb
xchg
cmp
dec
dec
lcall
cmp
or
push
iret
jb
and
sbb
mov
add
rcll
jge
mov
sahf
push
or
inc
mov
sahf
mov
cmp
xor
xchg
enter
idivb
push
in
xor
sub
add
inc
push
mov
lahf
or
push
lret
scas
pushf
popa
vmread
cs
xchg
lret
enter
loope
loop
rclb
ja
data16
mov
fiaddl
xorl
mov
or
cld
shll
shlb
icebp
jbe
sub
add
and
mov
add
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
mov
jl
jle
ds
pop
pop
jp
rcrl
pop
xchg
pop
cld
js
or
aas
push
inc
ljmp
sbb
mov
scas
jmp
cmp
enter
mov
insb
dec
add
rcl
int3
pop
xchg
lret
xchg
outsl
lcall
and
ret
in
pop
push
out
popf
adc
dec
lea
ss
mov
xor
dec
push
xor
mov
and
andb
loop
and
lret
and
btr
fld
popf
mov
negl
addr16
pop
out
add
adc
gs
mov
jne
xchg
pop
mul
movsb
adc
sub
popa
sbbl
test
clc
cmp
push
test
ja
mov
and
sub
ja
mov
fadd
orb
adc
cmp
clc
cmp
mulb
je
dec
cmp
pop
cmpsl
lret
outsl
jne
mov
xor
filds
or
xchg
mov
fnsave
pop
push
data16
adc
pop
rclb
icebp
fildl
test
mov
lds
sbb
inc
xchg
xchg
lock
test
ds
mov
mov
xor
jmp
inc
mov
scas
sbb
push
sbb
std
test
loope
pop
stos
sub
mov
lods
xor
cmp
mull
stos
imul
ljmp
push
inc
sahf
push
es
xchg
cmp
mov
pop
sbb
jne
jg
sbb
push
seta
xchg
or
or
repz
in
jmp
adc
adc
mov
js
jl
dec
pusha
xchg
adc
pop
jle
fistpll
xchg
in
out
movsb
enter
push
std
inc
pop
adc
xchg
jno
or
jbe
out
mov
mov
mov
imul
es
lods
mov
mov
inc
dec
in
loope
push
jmp
xchg
adc
clc
shl
sub
iret
or
lods
stos
aaa
lods
xor
insl
icebp
xchg
and
jno
outsb
xor
js
out
xor
pop
inc
and
inc
call
cmp
fdivrs
stc
adc
push
out
in
xor
push
or
mov
shll
bound
pop
mov
mov
jp
outsb
pop
jae
dec
or
mov
jecxz
aad
jns
orb
jp
ljmp
in
mov
ss
mov
add
testb
clc
inc
in
movsl
or
mov
movsb
jecxz
mov
dec
rclb
jp
jmp
jno
pop
push
add
jne
test
add
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
fcmovbe
stos
jle
jl
jle
cmp
adc
and
mov
xchg
pop
add
pop
es
adcl
lods
cmc
cmc
jge
add
notl
cmp
sub
test
mov
pop
inc
sbb
daa
push
data16
cmp
sbb
jle
out
loopne
imul
push
push
pop
cmp
pop
movl
adc
stos
mov
xor
ja
jge
adc
mov
xor
jl
into
lock
arpl
xor
xchg
test
iret
in
mov
jb
ja
mov
push
xor
fadds
rorl
pop
xchg
loope
push
dec
add
in
jb,pt
dec
mov
rorb
cmc
lcall
jle
pushf
sbb
and
mov
push
hlt
cmpsl
imul
sub
jg
xchg
jo
scas
mov
inc
add
or
enter
scas
jecxz
xor
mov
pop
and
or
sub
cmp
stos
pop
test
aam
in
insb
sub
cwtl
lock
dec
pusha
mov
das
outsl
insl
mov
popa
sub
loopne
stos
outsb
mov
pushw
jmp
mov
dec
inc
data16
adc
xchg
shll
pop
aad
xor
xor
sar
and
mov
and
movb
in
hlt
leave
rorl
add
repnz
stos
cmp
hlt
pushf
or
aad
in
inc
mov
mov
test
into
cmp
and
ds
cmp
cmp
lret
pop
nop
pop
xchg
iret
fdivl
jnp
pop
cwtl
jo
out
xor
pop
decl
pusha
xchg
jmp
aaa
int3
rolb
sbb
xchg
inc
bound
cltd
add
out
mov
arpl
cs
sub
xchg
add
ljmp
xor
lret
xchg
inc
dec
out
stos
popa
lock
fistl
aam
aaa
outsl
mov
insl
scas
mov
and
out
cmpl
push
nop
shlb
aaa
xor
shlb
or
dec
inc
and
cmp
jp
pop
push
push
adc
cli
out
jl
sbb
cmp
stos
xchg
lock
xor
cwtl
pop
adc
inc
pop
roll
dec
in
dec
or
xorl
add
movsl
mov
mov
iret
adc
outsb
jae
cmp
stos
pop
and
repnz
fs
mov
popa
into
xor
jae
dec
aam
daa
sahf
push
inc
les
pop
leave
add
rorl
cwtl
jae
in
loope
inc
xchg
stc
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
pop
xchg
mov
jl
jle
ret
aaa
movsl
mov
push
dec
add
enter
or
pop
mov
sub
lea
mov
jecxz
lods
aas
sub
xchg
loopne
fiadds
pop
xchg
dec
and
lahf
mov
test
dec
movsb
jp
int3
mov
mov
popf
outsl
mov
popf
and
shlb
sar
and
add
mov
jns
ret
in
aas
popa
sub
insl
fildl
jo
add
sub
mov
sbb
in
pop
imul
arpl
int
dec
jge
in
pushf
jns
or
ja
xor
icebp
popf
inc
sub
adc
sub
pop
adc
clc
xchg
sbb
mov
enter
scas
pop
pusha
pop
xchg
pop
pusha
push
mov
push
or
and
je
ljmp
mov
dec
jge
popa
out
xor
fists
mov
inc
popa
ret
pop
pop
inc
push
icebp
adc
and
scas
icebp
imul
scas
lods
adcb
xor
aas
add
jp
or
out
sub
popa
cmp
adc
mov
dec
jnp
push
jns
xchg
push
push
roll
jl
push
fildl
and
sti
push
loopne
sub
adc
mov
mov
cld
mov
jg
xchg
xchg
cs
push
add
stos
clc
mov
jp
mov
mov
adc
sub
cmp
cmp
sub
pop
lea
cmp
or
ds
or
pushf
fisttps
lods
aam
or
movsb
nop
adc
ss
or
jle
lcall
xor
sub
xchg
push
out
fwait
jmp
pusha
add
testb
cli
xsha256
cmpsb
push
fwait
lea
cld
xor
mov
xchg
mov
into
xchg
mov
xchg
fiaddl
push
xor
mov
cmp
xchg
das
pop
xor
aad
insb
mov
adc
push
rol
inc
pop
insl
out
cmpsl
cmp
call
int
bound
test
loopne
cmp
xchg
push
dec
xchg
fs
sahf
inc
mov
xor
fmuls
lods
xchg
pop
push
jecxz
pop
pop
fistpl
jmp
and
and
mov
push
mov
jo
cmp
and
sbb
pop
add
mov
int3
inc
sbb
mov
inc
xor
xchg
arpl
cltd
mov
add
mov
mov
aad
test
push
inc
dec
jp
outsl
icebp
and
jae
sub
push
inc
cmp
jns
loope
pusha
mov
push
mov
xchg
cmp
push
mov
push
jbe
xchg
push
push
hlt
scas
pop
jmp
add
fstpt
mov
pop
fbstp
push
push
lret
jmp
inc
int
adc
orb
pop
add
mov
xor
mov
jmp
or
pop
jno
xchg
add
leave
aad
mov
jle
jge
jle
lea
data16
mov
inc
add
xchg
test
and
adc
out
fwait
sti
sbb
cmp
xchg
test
mov
xchg
jle
andb
das
add
xor
in
pop
lret
ret
mov
divb
and
inc
inc
or
out
mov
or
or
xchg
scas
lret
jge
gs
stos
xchg
inc
js,pt
jo
pop
mov
cltd
inc
xor
loop
int3
loop
or
add
pusha
loop
and
pushf
insl
dec
int
xor
dec
out
movsl
filds
out
or
xchg
js
mov
scas
pop
negb
inc
call
daa
adc
mov
push
xchg
cmpsl
mov
mov
mov
outsb
xchg
es
ja
cmp
vucomisd
cmpps
mov
add
insb
pushaw
jp
loopne
xor
rcrl
or
push
das
pop
jp
insl
bound
pushf
repz
ja
push
pop
psubusb
iret
and
mov
in
sub
into
mov
and
jno
shrb
outsl
fs
fisttpll
shll
shll
test
stos
adc
dec
out
push
pop
mov
pop
js
xchg
imul
jl
mov
lea
hlt
repnz
leave
cld
adcb
inc
jecxz
cmp
mov
insl
mov
ja
adc
bound
mov
dec
and
cmp
sbb
pop
sbb
mov
jge
lcall
aas
nop
repnz
pop
into
movsl
fs
xchg
push
mov
adc
adc
sub
bound
jmp
out
add
push
xor
int
push
and
movsb
sub
jo
fisttps
lcall
push
pop
sub
cs
lock
jmp
mov
jp
sub
rorb
cmp
je
sbb
je
test
cmpsb
jmp
add
aas
jp
call
not
mov
jle
cmp
cmpsl
sbb
orl
adc
scas
enter
cli
test
repnz
loope
dec
sti
imul
sub
adc
pop
pushf
ret
cmp
inc
ja
call
imul
pop
mov
sbb
popa
push
lea
daa
test
outsl
jo
in
xor
or
dec
sbb
sub
cmpsb
cwtl
arpl
mov
dec
gs
fldt
ss
pop
fcmovbe
xchg
shll
mov
stc
fisubl
pop
sbb
mov
mov
incl
daa
inc
std
test
sbb
loop
ret
mov
inc
dec
inc
jns
mov
test
mov
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
mov
fdivl
jle
pop
push
repz
xor
ljmp
and
add
insl
or
subb
sbb
insl
jge
dec
xor
jnp
dec
pushf
repz
pushf
js
jmp
jno
pushf
jecxz
xchg
or
cmp
mov
xchg
inc
push
addb
sarb
sbb
add
cmpsb
jns
fwait
jne
dec
jecxz
push
bound
cs
sbb
lahf
fbld
inc
pop
shr
xlat
xchg
jecxz
mov
xor
jg
add
bound
test
subb
xchg
jge
popa
pop
sbbl
cmp
call
cmp
out
adc
jmp
pusha
and
or
jge
xchg
sbb
push
inc
sbb
scas
mov
mov
in
into
sub
cmp
sarl
and
mov
shl
mov
addr16
jno
movsb
stos
dec
jno
add
test
mov
mov
imul
stos
xchg
loop
lds
or
xor
dec
mov
ret
sbb
push
insb
mov
dec
mov
daa
in
or
mov
jle
out
sbb
xchg
sbb
nop
mov
cli
ss
mov
pop
pop
or
jns
rol
inc
bound
push
mov
rorb
and
shr
mov
mov
jnp
jae
mov
push
xchg
dec
push
fwait
ret
gs
push
xchg
test
add
ljmp
sub
cmp
dec
xor
mov
push
aaa
lods
insl
cmp
or
pop
icebp
fldt
sub
push
out
lahf
je
push
dec
out
push
xchg
scas
int3
mov
jecxz
cmp
out
lcall
hlt
jbe
inc
dec
cmpsb
jge
push
xchg
cmc
mov
dec
adc
push
sub
xor
jmp
pop
inc
fcompl
add
mov
push
loopne
insb
jecxz
pushf
je
imul
xchg
rsqrtps
mov
or
mov
add
cmp
je
cmp
mov
xchg
xor
push
popa
sbb
leave
outsl
jno
scas
lods
scas
subb
clc
mov
outsb
std
xchg
lcall
insb
jne
and
popl
push
andl
cs
jo
dec
dec
jno
out
pushf
in
cmc
inc
clc
sbb
cmovs
push
int3
icebp
push
xor
xchg
test
jmp
sub
sbb
jb
out
add
fsubl
leave
xorb
sub
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
loope
addr16
inc
jmp
jnp
lock
mulb
test
imul
test
push
nop
scas
push
mov
xchg
jno
push
mov
lea
and
ss
push
ds
insb
jp
divb
jge
adc
mov
mov
mov
adcb
dec
in
mov
fbld
or
and
dec
lcall
arpl
adc
call
negl
jge
xchg
insl
push
lret
ret
fildll
ljmp
push
mov
or
jle
pop
mov
push
cmp
xchg
push
mov
sbb
lods
popf
pop
insl
sub
sahf
outsl
adc
mov
loopne,pn
in
rorb
fcomps
adc
push
hlt
pop
fistpl
fimull
shrb
hlt
pop
jecxz
out
lock
cmp
push
fisubrl
shrb
int3
xchg
mov
mov
nop
and
jne
enter
add
ja
std
stc
icebp
push
push
sub
shlb
pop
negl
xor
aaa
add
jb
sbb
daa
popa
adc
jmp
lret
subb
rcrb
push
sub
jmp
sub
repnz
das
dec
push
sbb
jb
repz
arpl
out
sbb
call
into
or
sar
repnz
movsl
aaa
push
lods
pop
jg
fbstp
in
loopne
cmpsl
fmull
jno
cld
pop
rol
in
push
sbb
jge
push
mov
arpl
out
hlt
fs
adc
out
pop
jl
mov
icebp
jecxz
jo
push
loope
xor
sbb
out
pushf
aaa
test
out
test
jg
lcall
add
xor
aad
std
fstps
popf
cmp
outsb
call
mov
xchg
pop
das
inc
fs
pop
lret
add
notb
outsb
cld
ror
xchg
out
movsb
or
rcrl
inc
cmp
lock
loopne
data16
pop
test
orb
shlb
xchg
mov
subb
xchg
sub
inc
sbb
jecxz
pop
mov
popa
jge
and
add
mov
outsl
or
or
add
xor
daa
jmp
je
cmpsb
jmp
push
xor
pop
mov
js
xor
out
mov
lea
outsl
hlt
fidivs
mov
into
lods
call
and
mov
js
add
jmp
add
fdivl
lock
xchg
pop
jne
mov
mov
jl
jle
push
dec
xchg
out
cld
not
jae
mov
jmp
pop
push
ljmp
loopne
xor
cmc
enter
fldl
jne
and
fldenv
cld
mov
inc
pop
dec
adc
sti
xor
fcompl
push
pusha
cltd
push
in
nop
stos
les
in
or
ret
mov
dec
or
sub
dec
mov
scas
sbb
add
jge
jle
push
mov
flds
lea
dec
mulb
shrb
aas
jecxz
stos
pop
mov
ret
and
xlat
cmc
adc
xchg
je
fdivr
cmp
xchg
imul
pop
jecxz
sbb
test
mov
adc
and
pop
pop
sbb
or
mov
jl
aad
push
into
mov
stos
arpl
xchg
sti
adc
fcoms
aaa
pop
push
jne
gs
jp
xor
cli
test
or
mov
pop
sti
push
cmc
add
inc
aas
pop
fcoms
lds
push
test
ljmp
sahf
jne
rclb
inc
ja
repz
sub
scas
out
addr16
sbbl
pop
fcom
sbbl
fdivrs
adc
mov
xchg
sbb
je
lods
sbb
out
sub
xchg
xor
lds
std
add
pop
xor
sub
dec
jnp
shll
mov
jo
ja
xor
leave
out
js
test
push
jno
stc
out
out
mov
xlat
adc
adc
adc
movsb
add
dec
in
lds
inc
mov
aas
jp
lret
pop
lock
daa
jne
jo
inc
inc
xor
xchg
sbb
daa
cmp
sti
push
xlat
push
xor
inc
shr
in
cli
sbb
stos
jne
dec
mov
mov
lahf
subl
xlat
cld
xor
dec
adc
ret
mov
and
fscale
aad
mov
idiv
insl
xor
fcmovbe
mov
mov
repnz
dec
bound
outsb
pop
aas
out
jbe
mov
push
sbb
cld
jecxz
xchg
rol
or
and
adc
fcoms
mov
pushf
je
movswl
add
dec
pop
dec
scas
scas
cld
outsl
fwait
ja
loopne
in
sub
add
sbb
lock
pcmpgtd
insl
mov
mov
out
insb
pop
and
xchg
cmp
mov
iret
dec
ja
clc
lods
je
inc
xlat
and
scas
xchg
cmpsl
flds
cmovs
jmp
je
push
push
lock
outsb
dec
mov
xchg
jmp
jle
scas
jl
jle
popf
pop
sbb
add
fs
fcompl
mov
or
xchg
add
insb
enter
imul
jmp
and
add
pop
xor
jmp
cmp
cmpsl
fcmovne
xchg
jne
ljmp
pop
sub
jbe
shr
in
dec
dec
rcll
iret
shlb
fsubr
iret
adc
push
jo
sub
sub
or
call
std
jle
lock
adc
enter
out
mov
clc
outsb
jg
inc
or
iret
faddl
inc
jp
add
iret
ret
pop
dec
xor
cli
jg
sub
sbb
js
xchg
jae
dec
movsb
dec
sbb
nop
andb
cwtl
inc
pop
orl
cmp
dec
in
ret
gs
dec
sbbl
aas
jnp
sbb
inc
mov
push
xlat
inc
lret
orl
movsl
mov
or
ret
sub
orl
cmp
mov
iret
jae
es
add
xchg
dec
push
cmp
cmp
repnz
out
enter
pop
test
jl
mov
popf
pop
sub
cmp
push
into
cmp
adc
xor
jp
and
es
in
sbb
add
fsub
sub
dec
adc
aaa
and
shlb
jmp
add
pop
subb
xchg
int
lret
ljmp
xchg
add
cmp
add
scas
pushf
iret
outsb
das
cmc
je
and
call
ret
jmp
pop
mov
xor
adc
xchg
jo
jb
push
sub
mov
cmp
sarl
sbb
in
push
sub
imul
lea
dec
mov
push
mov
cwtl
ja
loopne
insb
or
notb
mov
std
lahf
dec
dec
lret
pop
add
mov
add
push
lock
shrb
cmpsb
aam
mov
sbb
push
fsubrs
lcall
cmp
es
movb
xor
mov
stos
pushf
sbb
mov
rcrl
adc
mov
sub
movsl
and
cmp
movsl
bound
dec
push
pop
shl
mov
xor
push
repz
jb
loopne
sub
and
outsl
jns
outsb
sti
jns
ret
pop
mov
mov
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
outsl
adc
scas
jl
jle
sub
jae
mov
add
and
mov
nop
jl
lahf
mov
xlat
pop
test
adc
xchg
cmp
push
xor
mov
pop
icebp
jb
push
icebp
jmp
and
cld
sbb
das
aam
in
sti
inc
jge
stc
loop
shlb
rcll
sbb
jmp
sbb
jp
xorb
and
lods
mov
fstps
mov
add
fucom
pop
inc
jp
jge
xchg
dec
cs
das
mov
cli
iret
add
mov
jmp
add
adc
pushl
gs
scas
push
mov
push
lock
inc
dec
clc
cwtl
imul
repnz
test
or
add
cmp
jno
xor
cwtl
dec
and
pop
stos
aam
mov
shrl
pop
jmp
lcall
enter
xchg
in
ffreep
cli
in
rol
call
push
fidivs
adc
aas
daa
loop
mov
inc
ss
cwtl
push
out
dec
sbb
out
add
icebp
pop
test
outsl
cmp
bound
xchg
aad
lods
lret
cli
push
leave
mov
clc
adc
in
les
mov
test
inc
lret
mov
jecxz
cmp
dec
cmpsl
or
or
dec
int3
gs
jmp
cmp
lcall
add
xchg
mov
in
aas
fldcw
insl
push
repnz
repz
xor
cld
movsb
inc
or
push
pop
xchg
fprem
cmp
jns
mov
lret
or
jbe
ds
jp
xchg
fidivrl
jl
out
inc
lret
mov
repnz
pop
lcall
cmpsb
xor
add
jl
dec
and
aas
add
test
cmp
flds
fsubs
pop
or
rcrb
out
pop
gs
sub
lods
test
mov
jne
roll
movsb
pop
int
arpl
popa
inc
movsl
xor
pop
outsl
fsts
sarl
mov
mov
popa
xor
adc
insl
cmpsb
mov
filds
int3
sarl
stc
fisttpl
cwtl
sub
mov
dec
rcl
sti
inc
movsb
test
lea
or
push
mov
sbb
mov
add
dec
shl
iret
stos
adc
gs
loop
gs
hlt
mov
pop
repnz
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
sub
dec
inc
jle
scas
jl
jle
sub
inc
jl
or
xchg
les
mov
xchg
mov
jmp
shll
jae
mov
popa
xor
loopne
sbb
repnz
scas
push
sub
in
lret
clc
cltd
xchg
je
push
ja
jbe
pop
cwtl
dec
mov
mov
sbb
push
xchg
test
mov
cli
aam
loope
add
and
xor
cld
insl
mov
mov
fldenv
push
sub
popf
sbb
add
pop
fwait
std
cs
adc
lcall
mov
xchg
sbbl
adc
lret
jle
out
cmc
jp
xlat
test
pushf
mov
lods
xchg
push
adc
roll
lret
cmp
in
out
jmp
subb
inc
xchg
add
adcb
inc
pop
arpl
in
xor
outsl
xor
mov
cld
cmp
and
fisubl
test
mov
push
movsl
inc
jno
dec
dec
nopl
bswap
popf
mov
push
lcall
xchg
push
adc
jne
test
popa
test
cmp
push
sub
inc
dec
sbb
pusha
xor
aad
fsubs
movsb
out
pop
mov
add
fisubs
lods
jl
lds
out
xor
cltd
arpl
mov
xchg
dec
lock
sub
dec
jns
xchg
notl
loop
mov
test
clc
mov
sti
push
mov
hlt
cmpsb
stos
push
inc
insl
insl
and
mov
xor
jl
fdivl
and
add
mov
loop
int3
pop
popf
shrb
lret
xlat
pop
push
push
into
xchg
sbb
mov
xchg
jb
inc
jge
xchg
inc
dec
aad
cmp
imul
xor
sub
sub
imul
mov
xchg
ret
lds
neg
fsubrl
push
test
mov
test
outsb
or
mov
rcll
jmp
sbb
je
andl
rorl
dec
rcrl
jg
sbb
out
sub
jno
pop
lock
std
cmpsb
mov
push
icebp
lahf
pop
mov
sbb
xor
popa
push
and
push
sbb
pop
clc
or
dec
inc
add
rorl
insb
enter
mov
add
movsl
adc
hlt
inc
nop
popa
inc
or
imul
add
add
jecxz
inc
cmp
jg
stc
mov
dec
ss
cld
outsb
pop
out
les
adc
cmpb
in
popf
sarb
push
ret
rclb
inc
icebp
push
fisttpl
push
dec
dec
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
mov
inc
jle
movsb
jg
jle
sub
cwtl
mov
pop
adc
push
pop
int
dec
fwait
and
popf
nop
mov
xchg
sahf
jecxz
xor
imul
pop
jmp
test
pop
xchg
pushf
ss
mov
pop
ret
fcomps
aam
dec
gs
xchg
rcl
loope
adc
in
dec
aam
jle
sbb
dec
out
movsb
mov
add
mov
pop
mov
sbb
dec
sub
xchg
jecxz
daa
pusha
je
leave
jl
daa
mov
lcall
mov
fdivp
push
js
and
pop
cmp
call
and
aad
movsl
push
insl
xchg
dec
xor
pop
pusha
xchg
in
out
hlt
mov
out
cmpsb
ss
test
mov
fwait
push
rcl
fistl
jmp
mov
insl
add
push
and
arpl
inc
mov
out
push
stos
out
jg
push
popa
mov
lcall
movsb
test
lods
or
je
and
clc
rorl
cmpsl
test
rcrb
iret
pop
test
mov
scas
push
loopne
sbb
or
mov
mov
cmp
rorb
inc
cld
cmp
xor
icebp
sbb
addr16
fwait
jge
and
mov
fdivrs
ror
xor
push
xchg
mov
mov
push
fs
sbb
add
enter
xchg
and
loop
sub
pop
mov
js
flds
in
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
mov
jle
movsb
jg
jle
popa
add
add
cmp
mov
mov
daa
mov
mov
mov
xchg
cmp
lret
sbb
lock
sub
jb
mov
loope
dec
sbb
push
jg
icebp
or
push
sbb
dec
out
and
push
lcall
inc
repz
pop
test
rcrb
fwait
mov
mov
or
lahf
pop
and
lock
mov
and
cmp
fwait
cmp
mov
push
mov
or
cmc
mov
into
jae
cmp
mov
test
and
jl
arpl
popf
push
dec
push
dec
lea
lcall
pushf
dec
imul
imul
jns
pop
stos
adc
mov
push
jno
in
aas
test
push
call
push
jnp
jle
ljmp
mov
notb
push
rcrl
mov
inc
mov
pop
ss
dec
rcll
loop
adc
in
data16
mov
sbb
and
dec
call
pushl
cmpsb
xlat
out
into
jp
push
xorb
push
fimull
mov
jp
cld
sub
movsb
cli
negb
stos
ffree
addl
iret
jo
fwait
aaa
icebp
scas
sbb
mov
leave
rorl
jge
mov
scas
loop
mov
xchg
leave
xor
pop
sbb
les
xor
test
jne
mov
pop
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
push
insb
addb
add
add
xchg
adc
jmp
inc
cmp
jo
jnp,pn
xlat
mov
xor
xor
adc
fst
or
sbb
add
xor
add
xor
add
xor
jne
xor
lahf
pop
out
rolb
mov
iret
mov
loope
das
fdivs
ret
lods
data16
scas
leave
out
cltd
add
mov
push
sub
sahf
in
jb
add
out
add
pushaw
enter
jnp
or
mov
out
das
push
cmp
insl
mov
shlb
iret
cld
stc
in
cmp
jo
dec
and
xchg
ret
clc
push
inc
xchg
movsl
jecxz
push
mov
pushf
add
bnd
dec
cmp
mov
fnstcw
and
xchg
push
sti
xor
add
les
xor
add
pop
ficoml
in
jle
lcall
stos
loope
add
add
xchg
das
loope
cld
dec
pop
and
cwtl
scas
fistpll
sbb
sbb
sahf
into
and
jg
fs
cmp
stc
dec
in
pushf
mov
push
push
jp
nop
sbb
fsubrs
icebp
test
clc
push
pop
insl
inc
lret
pop
out
fdivp
bound
inc
xchg
popf
push
sti
xchg
sbb
xchg
pushf
jae
or
pusha
shrl
clc
fsubrs
xchg
push
adc
mov
dec
lcall
aas
xchg
out
mov
dec
icebp
dec
cmp
cltd
aas
push
fiaddl
pop
outsl
mov
or
push
hlt
cmp
js
das
push
add
mov
jecxz
ret
lock
adc
inc
pusha
push
arpl
dec
sub
stos
enter
stos
inc
mov
ja
dec
mov
outsb
push
xor
mov
and
cmpsb
je
rclb
adc
dec
orb
aaa
cltd
xchg
das
push
mov
add
add
adc
mov
mov
push
jnp
dec
dec
out
add
add
lods
push
mov
xor
or
scas
testl
loopew
adc
icebp
and
mov
pop
leave
imull
mov
xor
mov
jge
out
lcall
push
in
into
ret
jo
out
inc
lock
push
cmpsl
fnstenv
jmp
jb
dec
int3
std
out
sub
or
push
add
inc
cmp
adc
sbb
push
jo
inc
pop
mov
jp
sbb
out
notl
ficoms
inc
scas
scas
shl
lret
and
loope
jns
mov
push
add
push
jp
mov
pusha
addr16
mov
incl
lock
cld
mov
and
std
in
mov
neg
add
jg
inc
outsb
sub
aam
pushf
loope
inc
mov
xchg
dec
lret
test
jae
mov
inc
dec
xchg
inc
das
xchg
pop
xor
add
add
mov
roll
es
jae
aam
add
dec
mov
lret
frstor
popa
je
ljmp
das
pop
or
mov
rcr
jne
test
dec
push
int
fcomi
bound
push
scas
jne
sub
into
insb
jp
sarl
scas
std
push
movl
pop
sahf
fisttps
stos
mov
xchg
jle
outsl
pop
int3
bound
lcall
mov
push
lahf
pop
jns
push
iret
mov
sbb
pop
ror
movsl
pushf
fisubl
int3
out
mov
push
sbbl
mov
pop
push
pop
pushf
shll
jl
mov
mov
lret
jb
mov
jl
aaa
or
lret
jg
inc
xor
out
xchg
lea
push
or
xor
dec
inc
xchg
xor
rorb
loop
jle
mov
mov
addb
outsb
xchg
test
pop
pop
jl
sub
outsb
orb
push
stc
repz
add
add
inc
or
pop
dec
or
cmp
lock
add
sub
lock
stos
shrl
sahf
mov
icebp
jb
ss
clc
ja
fwait
push
pop
call
jecxz
lret
sti
jp
fiaddl
sub
jecxz
sbb
pop
mov
aam
into
xorl
push
lret
stos
push
sbb
mov
andb
or
push
dec
sub
or
outsl
mov
mov
iret
pop
pop
or
or
lea
fists
or
aaa
stc
adc
xor
push
lcall
push
sbb
test
in
out
mov
cmp
stos
ds
sub
jecxz
mov
xchg
pop
cli
jle
mov
jo
rcrb
sub
ds
xchg
pop
mov
adc
int
lods
or
inc
pop
sbb
dec
inc
fwait
repnz
pop
adc
cmc
dec
and
clc
mov
cmp
pop
data16
adc
add
jg
cmc
insl
cmc
out
lcall
enter
cld
xchg
add
add
jp
pop
pop
insl
in
xor
fcmovu
mov
arpl
pop
mov
scas
fmull
loop
mov
mov
roll
jnp
xor
jp
adc
out
nop
ret
lds
mov
dec
enter
shrl
xor
aam
dec
lods
xor
pop
in
sub
loop
xor
cld
mov
fwait
lcall
lock
mov
add
pop
and
pop
imul
mov
pop
stos
sbbb
jmp
pop
ficoml
sub
arpl
mov
add
jmp
int
push
ret
push
hlt
push
hlt
cs
jg
fwait
sbb
add
add
clc
sbb
sbb
jnp
cmp
in
jg
xor
sti
jnp
repnz
aad
std
jle
cld
adc
mov
out
xchg
or
xchg
or
push
xchg
fs
lods
jnp
xchg
repnz
push
jne
jns
sub
lahf
jge
xor
add
add
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
into
fnstenv
add
in
pusha
push
add
in
sub
dec
test
imul
rorb
imul
dec
in
push
mov
aam
mov
xlat
pop
icebp
cltd
push
clc
xchg
or
gs
pop
or
js
jl
adc
sbbl
cwtl
add
dec
mov
mov
das
movsb
cmpsl
xchg
jae
dec
pop
jecxz
adc
sub
leave
gs
mov
bound
nop
out
imul
or
push
ret
mov
iret
xchg
xchg
lret
iret
adc
movsb
in
imul
or
xor
repnz
push
pop
mov
shrb
lock
pop
test
lcall
mov
ljmp
mov
push
in
pop
mov
ds
pop
fcompp
sbb
lahf
popf
loopne
sbb
mov
xchg
or
and
scas
sti
jle
pop
push
pop
mov
and
fadds
add
jl
and
in
xor
test
cli
movsb
insb
sbb
xor
mov
sbb
loopne
dec
pop
cmpsl
add
xorb
cmpsl
mov
push
pop
and
sub
int
jg
movsl
cmp
nop
out
add
mov
inc
adc
test
fs
notl
test
dec
lds
das
ja
rol
mov
stos
cmp
xor
push
stos
lock
cs
cmp
ret
inc
sub
mov
out
xchg
je
mov
int3
mov
lret
arpl
or
push
shrl
es
sbb
cmp
or
popf
idivb
sub
fistpl
popf
push
pusha
adc
mov
mov
fldenv
pusha
lret
addr16
or
fisubrl
pop
mov
mov
mov
ljmp
test
and
xor
jbe
mov
imul
fistpll
shll
push
xor
xchg
push
inc
jmp
add
lahf
fnstcw
ss
lahf
stc
bound
out
dec
add
add
add
and
push
mov
push
jg
add
mov
pop
and
loop
imul
fst
xor
mov
imul
icebp
sbb
or
push
mov
rcrl
or
add
mov
out
and
pop
roll
sub
mov
sahf
jae
adc
jmp
jae
jmp
mov
and
and
mov
test
push
or
mov
hlt
enter
lods
out
push
sbb
mov
fnstenv
sbbl
push
sub
sub
adc
shr
cmp
aaa
lcall
jmp
cmpsl
mov
pop
mov
mov
ffree
dec
sbb
jp
mov
setae
push
mov
xchg
cli
jnp
jge
xchg
dec
cmp
jl
stos
aaa
fsub
and
pusha
sub
mov
setb
xor
push
jl
jle
insb
out
cs
push
rcll
add
add
cwtl
adc
dec
shrl
pusha
xchg
lods
jno
mov
xchg
dec
lds
hlt
jg
jo
sbb
or
pop
jo
in
cmp
push
loop
or
or
ud0
fildl
jo
lcall
dec
mov
push
loopne
xorl
add
je
repnz
and
dec
add
in
push
mov
lcall
mov
pop
rcrb
insl
mov
mov
gs
leave
out
mov
aas
cmp
xchg
sub
orl
out
mov
adcl
in
clc
or
lea
addr16
rolb
push
sub
sub
push
add
add
xorb
lcall
xchg
sbb
rclb
fcmovnb
shl
insl
push
lret
in
pop
repz
adc
adc
or
fdivs
push
mov
mov
inc
mov
add
mov
adc
in
xor
adc
push
faddl
add
aas
xor
jns
dec
add
lea
cmp
mov
mov
pop
inc
xchg
and
out
in
out
ret
adc
mov
pop
jg
cld
into
cli
cld
in
add
loop
loop
insb
aam
push
mov
mov
xchg
or
lret
test
xchg
fnstenv
fists
sbbl
adcl
pop
mov
adc
test
xor
xlat
das
mov
daa
mov
stc
int
inc
dec
sub
sbb
fldln2
fs
ret
ret
out
loope
aam
sbb
bound
mov
add
cmp
imul
mov
sbb
xor
sbb
seta
xorb
das
adc
lret
jns
ljmp
jmp
outsl
adc
mov
cmpsl
xchg
sub
les
dec
add
lret
sti
pop
pusha
int
popf
lock
or
push
sub
add
sti
in
cmpsb
xchg
movsb
repz
sbb
add
data16
jne
mov
lcall
add
add
imul
jns
push
push
inc
stc
shrb
sahf
test
aaa
js
mov
lods
sub
pop
dec
das
add
leave
push
pop
scas
mov
lret
hlt
push
jnp
in
int3
xchg
jl
cmp
lret
dec
imul
js
stos
or
xor
lret
fistpl
lods
sub
jo
arpl
xor
or
add
add
xorb
sbb
cld
mov
sarl
out
jl
inc
stos
push
push
push
es
nop
fldl
or
pop
adc
popf
fldenv
pop
cmc
hlt
jg
add
adc
popf
mov
jnp
fidivrl
nop
or
dec
xchg
clc
push
iret
sbb
cmc
mov
aaa
test
ss
adc
sbb
lret
insb
dec
addr16
xchg
mov
sarb
js
jno
dec
ja
stos
movsb
nop
mov
fmul
cs
push
shrl
jecxz
add
jnp
add
jnp
sti
xchg
lahf
mov
xchg
ficompl
fiadds
add
lock
xchg
inc
rcr
jg
cmp
cmpb
aam
in
mov
into
clc
add
pushf
push
stos
jecxz
push
jmp
push
test
fidivrl
scas
test
jecxz
add
sub
ret
fdivs
cli
mov
mov
and
test
xor
dec
or
repz
cmpb
jnp
and
lds
xchg
pop
dec
cs
inc
stos
jnp
mov
cmp
add
cmp
mov
add
lods
xor
je
sbb
daa
jge
push
sub
add
imul
sahf
pop
mov
push
add
jmp
iret
gs
xchg
sub
jne
sub
addl
mov
xchg
ja
sbb
mov
scas
iret
leave
adc
rcrb
add
int
sti
je
jge
lock
mov
cmpb
add
sub
pop
sarl
mov
sub
add
add
push
push
stos
in
mov
rclb
xchg
dec
mov
xchg
cld
inc
test
adc
ds
inc
dec
lods
lods
xor
cmpsl
mov
mov
sbb
mov
jg
pop
sbb
pop
insl
mov
out
dec
jo
mov
cmp
xor
jl,pn
leave
mov
aaa
pop
xor
xor
fwait
mov
repnz
cmpsl
sub
xchg
inc
sti
xor
leave
adc
xchg
popf
roll
clc
mov
jmp
addr16
std
add
xor
sbb
push
jbe
mov
xor
push
xchg
xor
js
test
push
fiadds
jne
mov
inc
dec
or
mov
shlb
mov
sti
fsubl
mov
xor
mov
mov
mov
repz
mov
mov
mov
sub
adc
add
repz
std
repz
push
lret
loopne
add
jl
mov
jo
fst
xchg
sarb
jl
cmc
mov
rorl
jbe
pop
sub
adc
and
sub
scas
sub
adc
sub
push
leave
dec
jp
or
jecxz
mov
sbb
xchg
enter
stos
rcrb
and
imul
dec
dec
pop
xor
sbb
add
and
pop
das
lods
les
jb
loopne
push
add
movl
xchg
pop
repnz
vunpckhps
movsl
sti
in
aad
inc
mov
out
sub
movsb
movsl
mov
sbb
test
sub
stos
sbb
cmpsb
icebp
dec
mov
inc
imul
cs
adc
jp
fsubs
dec
push
pop
scas
jae
mov
idivl
out
and
jge
repz
or
sub
pop
pusha
xor
sub
pop
je
lods
add
in
sub
cmp
arpl
je
pop
lods
hlt
daa
loope
add
cmp
les
cmpsl
loope
arpl
add
cmp
pop
or
mov
jb
loope
jae
cmp
setns
outsl
fsubs
dec
cmpsb
dec
mov
ja
mov
pusha
fdivrl
test
xor
mov
cwtl
jne
jne
mov
shl
lods
xchg
lock
push
push
fsubrl
mov
jecxz
and
cmpsb
sbb
mov
push
xor
xlat
add
sub
std
dec
xchg
insl
xor
xor
lods
bound
arpl
mov
mov
ret
fsubrl
xchg
fs
idivl
dec
jecxz
ret
das
test
jl
pop
fwait
mov
test
mov
test
mov
aam
adc
pop
pop
nop
mov
or
mov
inc
out
insb
mov
movsl
cmp
push
sbb
inc
js
sarl
out
xchg
xchg
jmp
add
add
mov
mov
push
adc
add
add
jle
scas
mov
and
scas
mov
fistps
rcrb
push
pop
mov
xor
and
lret
xorl
push
mov
jo
jecxz
xchg
stc
es
test
adc
mov
lock
repnz
add
xor
loope
sub
adc
iret
stc
das
loop
pop
adc
sbb
pop
jns
push
mov
cmc
and
outsl
or
mov
xor
xchg
fwait
inc
lret
in
inc
and
mov
sti
andb
std
fmuls
dec
sbb
ficoms
rorb
nop
mov
in
mov
ret
add
xchg
push
dec
dec
pop
ret
mov
mov
data16
getsec
ds
push
call
stc
out
sahf
out
jl
dec
or
sbb
aam
fwait
pushf
js
rcr
xchg
jae
mov
and
lods
xor
add
add
xchg
in
mov
incl
rorl
fwait
aad
jecxz
add
sbbb
test
into
or
jl
push
aad
and
mov
cltd
test
mov
test
loopne
mov
aaa
sub
add
cmp
fmuls
cli
and
loope
test
adc
jb
sub
mov
sub
push
jp
fcomps
pusha
les
sbb
sbb
mov
out
jecxz
test
cmp
and
jne
fldt
jl
stos
adc
lock
mov
jns
out
loopne
pop
arpl
das
nop
xchg
lahf
push
inc
sbb
adc
add
rcrb
fwait
loop
fwait
imul
mov
mov
shlb
int
fdivs
cltd
xor
inc
fildll
cmp
or
jmp
fucomip
js
int
push
pop
fcmove
push
cmc
xchg
xchg
movsl
arpl
mov
mov
xchg
mov
or
add
add
sub
in
negl
sub
movsb
inc
pop
inc
nop
ss
add
ret
pushf
popf
xchg
addr16
inc
inc
sarb
push
xlat
adc
loope
mov
jmp
xor
and
mov
mov
sub
jle
lret
mov
hlt
js
or
xchg
popa
leave
lods
pop
lcall
jns
push
test
xchg
out
mov
test
into
sahf
enter
popf
and
xchg
xchg
dec
cmp
scas
xchg
pop
jge
les
jecxz
aad
fnsave
mov
dec
jg
push
xchg
jno
std
int
adc
mov
outsl
mov
add
daa
loopne
add
fdiv
sub
outsb
shll
mov
sbb
xor
xor
movl
loope
mov
aas
lcall
test
cmp
sahf
ficoml
dec
jno
mov
cmp
or
pop
mov
lret
insb
mov
mov
sub
adc
add
add
mov
stc
dec
push
fcoml
fcmovnbe
cmp
add
add
gs
aam
call
pop
add
inc
cmp
xor
xchg
adc
int
rcll
in
sti
inc
pop
xchg
mov
sub
aad
insl
out
sbb
and
fistpl
lahf
xchg
or
jg
push
jno
fwait
cmp
adc
sbb
push
sbb
sbb
sti
testl
ljmp
and
cmp
negl
add
shll
in
dec
cld
clc
repnz
call
mov
dec
push
pop
aaa
mov
ret
in
jmp
sarl
mov
jo
aaa
push
mov
jnp
dec
and
mov
test
movsl
sub
ret
fisttps
mov
loop
adc
sbb
imul
ds
leave
aad
add
fwait
adc
mov
inc
sarb
call
cld
push
fwait
insb
int
popf
push
jnp
add
cmp
mov
push
push
push
mov
and
add
add
mulb
enter
lds
sets
xor
mov
test
xchg
in
dec
mov
xchg
push
int
push
jae
fs
sbb
sahf
aas
cmpsl
pop
sbb
inc
push
adc
jnp
push
stc
imul
loope
push
push
mov
scas
or
jne
shr
cmp
lcall
adc
xchg
add
outsb
iret
jge
ljmp
xor
adc
push
iret
dec
push
dec
pop
inc
pop
mov
dec
cltd
pop
mov
cmp
cmp
jg
cltd
mov
jg
or
pop
clc
in
mov
mov
dec
push
int
mov
fwait
lea
inc
aaa
insl
lahf
xchg
mov
jle
pop
mov
mov
sub
aam
popf
movsb
lds
and
mov
lahf
xchg
loop
repz
daa
lahf
aas
lds
jno
sbb
out
insl
popa
imul
fisubs
mov
add
repnz
add
pop
lcall
les
iret
ficoml
out
add
out
leave
jbe
inc
and
xchg
xor
dec
jl
inc
jmp
mov
gs
xchg
cwtl
addr16
pushf
adc
jne
push
cmp
loopne
or
fiadds
pusha
dec
mov
shl
repz
in
dec
mov
mov
pop
and
or
pop
stos
inc
xor
xchg
mov
in
and
dec
mov
cmp
pop
stc
loop
inc
ja
nop
sub
add
call
sahf
ljmp
or
mov
insl
shlb
hlt
das
cmp
lcall
add
mov
sbb
lds
dec
pop
lods
clc
test
shlb
faddp
ljmp
mov
js
xchg
sbb
jns
imull
adc
orb
stc
jno
and
lea
cmpsl
dec
popf
fists
cmpsl
addr16
fs
nop
dec
lds
add
pop
mov
push
decl
mov
mov
add
jle
inc
fs
mov
movsl
mov
dec
stos
pop
and
jmp
jae
push
cs
es
mov
mov
mov
rolb
stc
pop
std
setge
loope
int3
insb
in
jne
out
push
icebp
movsl
mov
fcmovu
data16
ljmp
jl
pushf
out
or
into
jne
sub
jns
sbb
mov
jo
sbb
loopne
fdivs
push
mov
rcrl
or
rcr
repz
rorb
mov
sbb
dec
loop
xchg
loopne
lods
out
mov
xchg
das
int3
mov
sub
in
test
push
or
pop
xor
lcall
cs
pushf
mov
mov
push
add
insb
rcr
dec
fadds
pusha
pause
je
pop
jae
pop
repz
jae
mov
add
add
jmp
in
push
sub
cltd
dec
jmp
add
cmp
jne
fs
call
shlb
hlt
icebp
jns
mov
mov
outsl
cmc
add
lods
push
cmpb
filds
and
jbe
lret
inc
aad
jne
imul
mov
dec
in
pop
out
adc
jo
popf
idivb
push
sub
adc
push
xchg
xchg
mov
adc
scas
fistpll
mov
pop
push
in
fisubrl
iret
hlt
pop
sbb
dec
fnstenv
sar
lods
jns
push
in
jbe
or
ja
and
mov
xchg
or
ss
cmp
aas
mov
mov
leave
and
sbb
mov
and
clc
shll
cmpsl
jbe,pt
loopne
imul
xor
pop
inc
lcall
push
ss
out
mov
cwtl
xchg
mov
shl
jmp
daa
ret
packsswb
xor
test
dec
jbe
jo
mov
and
xchg
bound
add
add
outsb
xor
mov
lcall
ljmp
xchg
icebp
fsubs
addr16
lcall
push
xor
mov
pop
add
mov
adc
jbe
push
jbe,pn
loop
inc
insb
lahf
arpl
dec
xlat
adc
jae
dec
lock
stos
mov
pop
adc
in
ret
das
and
lods
negl
hlt
push
mov
cmpsb
lret
test
fs
jne
sbb
ja
xchg
add
jo
push
mov
ds
sub
es
jecxz
cltd
xchg
sbb
jns
enter
sarb
loope
stos
mov
xor
add
hlt
pop
repnz
lret
int3
jbe
xchg
outsl
jo
ds
imul
insb
mov
push
add
in
test
fs
pop
lret
push
int
inc
and
xor
test
popa
or
aas
dec
lret
inc
fidivs
imul
add
lock
mov
movsl
test
icebp
imul
rclb
add
repz
ror
lock
jnp
xor
xchg
cwtl
jne
aam
jmp
add
jns
popf
outsb
sub
push
mov
mov
enter
int3
hlt
data16
and
dec
leave
add
arpl
addl
pushf
pop
mov
mov
mov
xchg
shrl
cld
pop
jne
jo
mov
or
clc
dec
push
dec
and
popf
stc
or
jl
scas
adc
pop
les
stc
jo
and
js
rcrb
ret
xchg
dec
mov
push
ljmp
mov
aam
lcall
test
clc
mov
les
push
jg
pop
push
or
pop
lret
mov
jae
adc
mov
mov
dec
xlat
fdivl
pop
scas
pop
cmp
dec
in
ljmp
add
sub
xor
lret
xchg
pop
cld
shrl
loop
adc
pop
shl
lods
push
aaa
insb
pop
sub
dec
adc
loopne
pop
dec
mov
add
repz
fisubs
mov
add
xchg
xchg
xchg
pop
or
jg
cmp
dec
sbbw
xor
call
xchg
pop
mov
push
jns
pop
and
clc
mov
repz
inc
add
inc
pop
cmpsl
cwtl
xchg
mov
loope
dec
sbb
rorl
or
enter
cmp
mov
adc
lods
icebp
xchg
mov
jo
xchg
pop
outsb
je
pop
sbbl
sub
ja
lret
xor
xor
mov
mov
pop
pop
pushf
std
insb
inc
popf
sub
push
inc
jl
popf
adc
mov
mov
jp
outsb
mov
and
inc
xchg
icebp
imul
pop
lea
adc
and
pop
mov
mov
push
cmp
and
in
mov
jae
xor
mov
push
movsl
inc
dec
scas
es
cltd
loopne
jg
push
mov
arpl
add
out
sbb
cmc
sub
add
dec
inc
adc
out
jne
lret
out
js
or
out
jae
mov
pop
in
push
ja
and
into
repnz
jge
mov
push
inc
sbb
jmp
mull
gs
jge
push
lods
lods
movsl
add
jnp
fs
pop
add
and
int
or
inc
xchg
fldz
test
repz
inc
pop
jo
inc
sub
das
lcall
mov
clc
fcompl
add
mov
mov
jl
lods
jns
repz
push
push
shrb
gs
xchg
jg
pop
push
aad
dec
xchg
pop
push
mov
andb
fists
jl
shr
gs
das
mov
push
xor
xor
imul
mov
iret
or
divb
pop
cs
divb
cltd
dec
sbb
cmp
stos
leave
and
lret
and
add
add
scas
push
repz
cmc
scas
sub
mov
push
add
add
fwait
mov
push
and
stos
pop
imul
xchg
mov
andl
adc
mov
xchg
jmp
push
jnp
mov
cmp
adc
jb
sub
xchg
out
in
jp
in
fidivs
movsl
push
je
push
js
push
sub
daa
jne
popf
mov
dec
sub
flds
std
orb
mov
mov
mov
mov
je
pop
test
ja
xor
pusha
cmp
pop
repnz
or
inc
adc
movb
ret
push
inc
call
mov
or
sbb
cmp
test
dec
out
movl
jnp
and
sub
xchg
inc
sbb
mov
and
lret
pop
stos
cmp
push
sbb
je
pop
mov
push
mov
adc
xor
dec
pop
fistl
fidivrs
int
sbb
test
inc
cmp
add
add
pusha
rorb
cmpsb
mov
in
insl
out
add
add
movsb
rolb
in
push
mov
ss
sub
into
test
and
mov
js
sbb
test
fcomp
xor
or
jno
mov
mov
inc
and
push
jne
mov
adc
roll
mov
xor
dec
testb
or
pop
shll
push
rcrb
fwait
xlat
jecxz
scas
test
lret
in
cmp
arpl
jge
nop
xchg
xor
pop
mov
aaa
jmp
sub
add
cmp
jne
xchg
and
das
addr16
inc
dec
sbb
mov
sarb
pusha
dec
fs
push
and
sti
push
mov
jnp
dec
clc
sbb
aaa
repnz
or
and
push
mov
popa
js
imul
push
les
rcll
cmp
popf
scas
dec
ret
sub
sub
push
loopne
ljmp
push
cmp
adc
add
gs
testl
mov
xor
add
add
xor
movsb
mov
xor
nop
test
push
scas
lret
aaa
hlt
loopne
cs
inc
inc
sbb
mov
iret
ret
and
stos
sbb
cmpsl
repz
aad
enter
pop
jns
push
sarl
testb
jle
fidivs
movsl
out
repnz
icebp
out
lock
out
insb
popf
add
es
xchg
pushf
cmp
mov
mov
cld
xchg
dec
pop
addr16
xchg
sbb
in
xchg
mov
aaa
xchg
pop
xchg
scas
or
test
adc
xchg
test
lret
inc
xchg
jne
popa
mov
mov
jge
stos
xor
dec
addb
sbb
sar
lahf
jge
fs
and
cmp
add
cld
sub
bnd
mov
aaa
arpl
repz
xchg
adc
add
fsubs
xchg
xor
xor
xchg
xchg
bound
repz
add
and
daa
lahf
mov
pop
das
add
scas
nop
ja
add
add
sub
dec
mov
cld
sbb
dec
cwtl
inc
outsl
xlat
nop
inc
xchg
adc
sub
add
mov
scas
or
in
xchg
nop
es
push
icebp
gs
lahf
enter
clc
push
pop
mov
cmp
test
imul
adc
add
rcr
adc
mov
out
xor
or
jp
out
jmp
stc
jp
dec
loope
out
cmp
cld
xchg
inc
mov
daa
out
aam
and
and
dec
xor
add
leave
cmpsb
jne
sar
in
js
fistpl
jnp
std
lods
mov
iret
jo
pop
pop
inc
or
push
cmp
das
data16
insl
mov
shlb
adc
loopne
call
or
or
cwtl
sbb
fnsave
sub
pop
lahf
aad
imul
out
pop
and
adc
add
add
fucomi
xor
adc
add
jo
jo
cmpsl
mov
test
lea
sub
xor
out
sbb
jb
scas
testl
bound
les
cmpsb
addr16
roll
outsl
push
and
enter
cwtl
pop
sbb
lahf
into
nop
test
lock
cwtl
inc
ret
nop
sub
aaa
inc
sti
push
adc
cmp
imul
mov
pop
push
nop
cmpl
addr16
add
sbb
mov
jb
pop
mov
xchg
cmp
in
add
jo
xor
lock
jg
shrb
xor
addr16
cs
sbb
pushf
dec
adc
pusha
cmp
imul
inc
lahf
test
into
and
cmpsb
stos
sbb
inc
jo
or
sub
jl
mov
xchg
mov
cmp
hlt
out
into
nop
push
add
add
push
inc
pop
jns
aas
loopne
sub
repz
add
or
add
outsl
mov
popa
movsl
fisttpll
push
mov
test
hlt
and
rclb
jmp
fs
inc
jge
mov
cli
xchg
movsb
sbb
lcall
fidivs
ds
xchg
insl
imul
popa
mov
mov
inc
pop
sub
mov
pop
test
int3
in
fidivl
mov
imul
xor
pop
into
xchg
push
add
dec
loopne
in
sbb
push
add
mov
mov
jmp
inc
lods
or
xlat
pop
out
mov
mov
jne
test
notb
push
leave
popa
pusha
mov
pop
aas
and
dec
or
lahf
xor
push
push
mov
in
jp
sbb
lcall
or
or
add
push
mov
iret
stc
mov
imul
push
fnsave
dec
lock
cmpsl
scas
sub
cmc
int
add
add
jnp
mov
mov
hlt
add
add
mov
aaa
jbe
aas
daa
add
and
jno
push
arpl
mov
in
sbb
test
jl
push
cli
pop
xor
in
cltd
or
mov
movsb
fidivrl
xor
xchg
pop
pop
inc
repnz
jp
push
test
mov
cmp
pop
xor
test
inc
mov
inc
pop
add
scas
imul
ja
push
mov
add
sarl
push
jns
add
sub
lret
daa
dec
mov
push
movsl
sub
mov
xchg
mov
ljmp
cmp
jge
or
mov
jle
scas
leave
stos
les
mov
add
and
mov
lcall
dec
les
mov
jge
js
test
mov
scas
dec
mov
adc
jno
jo
call
imul
gs
repz
add
add
ss
cmpsb
sub
in
dec
mov
cmp
sub
adc
xor
fwait
inc
dec
push
jge
repz
push
and
int
inc
aam
adc
iret
xchg
xchg
bound
xchg
lock
insb
in
enter
stos
mov
scas
cmpsl
lods
int3
loop
std
sub
add
ss
test
fisubs
test
pmullw
in
lock
popf
adc
inc
mov
xor
mov
push
mov
push
sub
iret
mov
and
mov
mov
inc
push
in
jae
icebp
cmp
cs
mov
rorb
movsb
loopne
cmp
lret
in
mov
cmpsl
gs
xchg
jl
xchg
rclb
clc
ficoml
nop
ret
xor
in
push
cli
arpl
jbe
les
push
stos
jbe
movsl
ficoml
pop
or
xchg
xchg
sti
out
xchg
add
add
fdiv
mov
fs
popa
rclb
add
add
fmuls
in
jbe
xchg
push
and
cmp
outsl
int
push
dec
jae
or
add
or
addr16
pop
fildl
repz
loopne
or
scas
add
inc
adc
ret
popa
jne
jle
inc
xchg
and
mov
jg,pn
cwtl
ljmp
pop
jmp
cmpsl
gs
cltd
xchg
xchg
cmp
or
shl
sbb
cmp
cmp
rolb
xchg
jno
xor
popl
cmp
add
pop
push
lods
cs
pop
xchg
and
in
into
lds
and
mov
and
rorb
test
inc
lea
jno
mov
add
xchg
aad
push
add
add
mov
and
sub
sbb
enter
fdivrp
leave
jecxz
jmp
out
out
popa
cmp
or
std
add
add
mov
fcmove
les
testl
add
xchg
in
out
mov
jae
jo
insb
insb
incb
pushf
mov
insb
stc
daa
imull
sbb
cmp
adc
xor
cmp
sarb
std
sbb
jb
jno
in
or
sbb
push
in
inc
lods
cs
rorl
hlt
lods
in
or
in
sti
push
fdivl
cmp
jno
adc
iret
stos
mov
ret
sti
sub
imul
aad
rclb
push
mov
jbe
pop
test
jmp
int
jmp
push
popa
sub
ds
push
sub
jle
dec
ret
lret
outsb
js
jl
xchg
imul
scas
loope
pop
outsl
sub
dec
xchg
imull
cli
xchg
imul
fnstsw
mov
hlt
fcmovnbe
xor
lahf
ja
scas
sub
mov
mov
jecxz
xlat
jnp
mov
or
inc
repnz
add
jmp
imul
lahf
repnz
test
mov
lcall
add
leave
daa
filds
fstl
mov
mov
rorb
mov
in
stc
xchg
imul
and
fisttpl
mov
fimull
and
mov
push
data16
addl
les
je
js
fisubs
test
leave
inc
push
cmp
stos
mov
lock
and
idivl
xor
xor
imul
mov
in
jle
lret
mov
into
mov
mov
sub
test
lcall
clc
jmp
in
xor
inc
mov
notb
ljmp
jmp
cmp
adc
repnz
jg
lock
outsl
adc
es
cmp
fs
fldt
xor
je
aas
xchg
popa
and
add
adcb
call
fwait
mov
lea
add
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
inc
test
int
stc
add
add
mov
sbb
fisubrs
mov
loope
mov
jns
jae
or
fucomp
mov
mov
sbb
add
cmp
xor
ror
icebp
mov
sbb
add
inc
mov
and
add
dec
add
or
sub
enter
repnz
movsb
arpl
fmull
or
jnp
inc
shlb
push
adc
push
imul
rcrb
adc
shl
mov
js
cmpsl
fbld
loop
dec
aam
rcll
jnp
bound
fs
dec
jno
xchg
xor
shl
xor
cmp
lods
cltd
push
inc
mov
mov
mov
mov
call
nop
inc
jmp
shll
or
sbb
mov
adc
bsf
cwtl
test
jp
sti
test
dec
mov
ss
lods
out
add
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
cmp
mov
imul
sub
out
pop
clc
jecxz
xchg
out
mov
outsb
ljmp
sarl
fldl
loope
xor
add
and
lret
inc
testb
mov
push
lahf
mov
sub
cmpsb
movsl
dec
or
dec
fwait
jge
jnp
xchg
psllw
jmp
cmp
sbb
push
cwtl
cmpsb
mov
leave
inc
ljmp
aas
inc
movb
subb
test
adc
andb
and
jecxz
push
lret
sub
stos
add
pop
xchg
mov
push
jno
cmp
xor
mov
test
mul
leave
pop
jge
in
jmp
push
xor
arpl
add
inc
add
dec
ret
and
outsl
in
stos
or
add
pop
icebp
mov
repnz
lahf
inc
ja
xchg
out
add
add
aam
int
aaa
das
aam
fwait
push
ja
sti
add
add
loope
test
ror
int
sub
in
push
fs
icebp
xorl
je
adc
repz
leave
iret
mov
adc
sti
add
das
fwait
test
addr16
sub
popl
out
mov
sbb
cli
jge
jg
cmp
repz
negb
inc
dec
mov
inc
jnp
subb
pop
insl
mov
outsb
xlat
jl
into
mov
inc
jo
pop
dec
mov
mov
outsb
jp
add
imul
cld
or
lock
pop
rcrl
test
lock
push
dec
push
cld
inc
cli
xchg
adc
les
cmc
sub
arpl
dec
jle
mov
stc
out
cmp
adc
loope
xchg
jle
and
mull
fstpt
jp
xchg
iret
adc
or
ret
cmp
rcrl
jnp
xchg
push
int
mov
mov
xor
clc
or
sub
and
movsl
les
jecxz
add
add
arpl
addr16
sub
scas
ljmp
add
dec
adc
ds
inc
lock
out
insl
in
sbb
stos
and
adc
ds
jmp
leave
pop
outsb
addl
test
xchg
sub
insl
mov
icebp
xchg
mov
fsubl
mov
negl
mov
cmp
mov
scas
pop
loop
sub
or
adc
xor
and
xor
mov
mov
push
inc
mov
movsl
nop
sbb
xchg
ja
repnz
xchg
inc
xor
cld
stos
arpl
inc
mov
in
test
push
or
sub
sub
sbb
inc
shrb
xor
push
and
daa
lea
cmp
test
into
sub
cmp
sbb
push
pusha
call
and
push
and
adc
test
insb
push
sub
inc
mov
ret
mov
jl
dec
push
mov
cld
jno
mov
mov
mov
add
out
cmp
cmp
pushl
xchg
xor
and
lahf
out
std
add
add
out
ss
cmp
jle
orb
push
inc
dec
jno
rcll
out
into
scas
pop
test
mov
fincstp
mov
ret
sub
and
xchg
xchg
mov
cmpsb
pop
fs
cmp
mov
nop
aaa
cmp
inc
jp
inc
mov
cmp
lahf
fmuls
mov
mov
cmp
sarb
rcr
int
mov
xchg
fmull
or
iret
aam
stos
sbb
icebp
jae
push
xchg
cmpsl
loopne
mov
inc
insl
mov
fwait
test
out
arpl
sub
push
sub
sub
lcall
in
setns
mov
xchg
adc
jno
jg
cli
lret
xchg
jmp
mov
scas
cmp
repz
aad
sub
fwait
mov
mov
subb
lahf
adc
sbb
mov
popl
add
push
scas
mov
cli
incl
add
in
mov
clc
pop
ret
mov
xor
cmc
fdivr
fwait
sti
pop
mov
inc
mov
es
cmpsl
adcb
sbb
dec
or
add
in
in
inc
cmp
and
jge
sti
xchg
pop
push
sar
sarl
mov
xchg
pop
pop
enter
add
lods
mov
js
les
outsb
and
movb
fiaddl
imul
xchg
xchg
add
mov
xchg
popf
test
push
mov
fwait
adc
lahf
nop
push
or
jge
add
leave
addr16
pop
aad
push
push
inc
xor
js
icebp
outsl
out
push
sbb
cwtl
or
adc
or
data16
pusha
mov
jo
xlat
fists
inc
mov
pop
push
cmp
inc
repnz
and
je
je
imul
push
xor
adc
sbb
repz
jmp
outsb
cmp
push
lea
push
ss
out
cmpsl
push
adc
add
xchg
and
movsl
mov
mov
mov
sub
add
jmp
xor
cs
ret
inc
mov
mov
orl
imul
xchg
xlat
and
mov
xor
mov
adc
mov
orl
stos
push
adc
xor
inc
loope
fiaddl
dec
lret
jge
sub
out
sbb
ljmp
add
pop
add
pop
cwtl
rorb
push
aam
fstenv
stos
popf
aaa
add
scas
inc
jb
fwait
out
inc
lock
popa
or
jne
sub
repnz
xchg
int3
insb
popf
and
pop
jbe
jmp
add
cltd
enter
cmc
push
lock
mov
xchg
and
scas
sahf
shl
insb
jge
cmp
insl
xlat
xchg
xor
mov
pop
add
lods
dec
out
inc
mov
scas
imul
cmp
fsubl
mov
add
fdivl
mov
add
add
add
stos
mov
clc
popf
and
je
aad
cmp
es
pop
aas
loopne
nop
cmp
lea
or
sub
in
jle
pop
jbe
xchg
lods
cmpb
js
subl
jb
push
fstps
and
aam
fcomp
subb
xchg
jge
xor
divb
shll
popf
inc
mov
mov
pop
mov
call
inc
daa
shl
jne
mov
std
fbld
jge
adcb
into
adc
pop
fidivrl
movsb
mov
adc
inc
and
sub
jae
or
test
dec
fstpt
mov
icebp
pop
push
adc
mov
idivl
subl
out
mov
sbb
mov
sub
inc
push
jg
push
dec
inc
pop
andl
mov
rorb
mov
xor
sbb
push
and
mov
jl
add
add
mov
mov
lods
imul
sbb
in
add
add
xor
add
arpl
xor
arpl
rorb
aad
je
adc
jecxz
adc
in
and
in
add
jle
add
iret
enter
ds
mov
and
dec
sub
or
iret
push
ret
mov
insl
or
adc
stos
test
shll
jg
sbb
dec
outsl
push
push
in
daa
scas
enter
push
scas
xor
movsb
rolb
inc
mov
xchg
outsl
lods
pusha
adc
loop
jns
ja
xchg
mov
add
sbb
aad
mov
and
sbb
jp
jecxz
in
subb
repnz
jo
ret
repz
in
sub
fists
test
sbbb
sub
mov
pop
inc
in
and
cmc
enter
mov
dec
sub
mov
xor
dec
push
and
add
add
mov
cmp
adc
add
add
or
dec
imul
push
dec
push
push
scas
xchg
mov
idivb
adc
rcrl
push
cs
or
aam
inc
lock
test
lds
push
and
inc
or
lock
pushf
gs
jnp
inc
lea
xchg
rol
cwtl
inc
mov
mov
cld
pusha
in
mov
adc
das
sbb
dec
mov
and
mov
shrb
dec
sub
adc
mov
test
xchg
subb
orb
rolb
pop
sbb
or
jl
xchg
cmp
addr16
jne
inc
ret
in
jb
and
add
jge
push
pop
lret
lcall
cmp
mov
and
rolb
inc
insb
or
and
mov
lea
or
sub
or
insb
test
add
xchg
enter
push
fbld
mov
add
add
out
mov
mov
shrb
int3
shlb
shlb
imul
pop
gs
mov
xchg
inc
dec
mov
cmc
adc
shrb
push
pushf
lock
push
fs
inc
lret
or
lret
int3
cmpsl
sbb
hlt
cld
in
sti
add
jl
clc
add
mov
stos
popa
xlat
mov
sbb
repnz
pop
fsubs
das
std
movsl
ret
xchg
cwtl
lods
cmp
and
mov
mov
add
xchg
add
mov
call
pop
jmp
loope
and
pop
adc
cmp
inc
hlt
jmp
shlb
mov
or
pop
cmpsb
stos
and
imul
test
pop
cmp
cmp
sub
shlb
cld
mov
push
push
cmc
shrl
in
jno
or
imul
add
sub
or
ja
push
js
adc
add
mov
into
fwait
add
mov
adc
add
add
lcall
ss
mov
shrb
mov
les
lods
data16
test
sbb
and
lea
xor
push
pop
xor
mov
cmp
shll
aaa
sub
cmp
or
cmpsl
and
sbb
xor
shl
inc
cs
mov
int3
dec
orb
jmp
adc
mov
push
or
sub
jge
imul
add
mov
pop
pushf
pop
and
dec
cld
loope
rcll
mov
repnz
pop
out
xor
cltd
in
pop
fstpt
push
hlt
mov
insb
mov
insb
add
ss
cmc
xchg
stos
push
add
fwait
mov
sub
ja
xor
push
cld
cmp
push
xchg
sti
and
sbb
pop
ja
xchg
dec
mov
push
into
push
and
add
jl
test
out
mov
pop
sarb
in
into
mov
add
pop
mov
scas
mov
xor
loope
xchg
fcmovu
sub
mov
add
add
iret
push
mov
push
roll
jbe
hlt
divl
or
sub
aaa
cmp
dec
mov
lcall
mov
fisubrl
adc
mov
xchg
lcall
cmp
sub
test
fs
popa
adcb
or
mov
ljmp
add
movsb
leave
and
xor
mov
lods
add
cmp
data16
fidivs
inc
enter
inc
xlat
lret
push
lds
xchg
fldt
stos
out
negl
mov
fmul
das
and
pop
dec
into
sbb
cmc
mov
das
push
sbb
aaa
pop
popf
pop
leave
sbbl
jnp
dec
test
adc
xchg
or
inc
xor
stc
xchg
enter
mov
add
xor
loope
jns
mov
pop
sub
add
sti
inc
out
aas
mov
rcrb
push
data16
add
add
cmp
add
cmc
repz
push
adc
xchg
jo
cltd
mov
cmp
inc
pop
rol
lea
sub
neg
iret
arpl
aad
mov
add
sub
mov
das
mov
mov
repz
mov
dec
add
ficoms
sub
mov
sarl
out
lret
lods
hlt
pop
imul
insb
mov
js
popf
cmp
fnstsw
push
repnz
cltd
and
sti
mov
jae
adc
fistl
xor
xor
dec
mov
mov
pop
inc
push
cmp
xor
mov
test
andl
call
jle
pop
je
or
das
addl
in
push
jmp
or
mov
mov
fldt
shr
xchg
mov
hlt
add
add
push
bnd
dec
leave
and
aaa
xchg
push
in
add
add
repnz
jge
sub
dec
int
cld
into
mov
and
js
cli
pop
or
stc
and
sbb
cmpsl
mov
out
push
cvtpi2ps
fucomi
pop
loope
pop
dec
iret
xchg
test
pop
dec
in
lods
mov
xchg
mov
jmp
add
inc
sbb
scas
pop
cmpsb
pop
inc
int
cmp
cmp
jbe
imul
mov
push
jmp
enter
testb
movsl
mov
push
leave
dec
stos
mov
fidivs
imul
cmp
jmp
push
hlt
mov
ds
in
push
pop
or
loope
or
pop
cmp
inc
jo
fwait
sbb
lret
ss
into
cld
cmp
leave
mov
pop
jle
std
pop
pop
roll
cmp
or
sub
push
mov
add
sub
mov
jno
xor
xlat
add
add
in
out
ja
filds
mov
add
add
imul
sbb
lret
lcall
in
cs
pop
enter
cmpxchg
sbb
cltd
or
sub
mov
adc
cltd
call
xor
push
or
mov
stos
jbe
sub
aas
and
inc
test
xor
mov
fs
xor
notb
pop
jg
ja
insl
sti
dec
inc
enter
mov
jge
out
cmp
insl
loopne
lods
cli
sbb
jecxz
nop
sub
in
lahf
pop
int3
je
insl
ret
invd
clc
cmpsb
fwait
stos
cmp
in
bound
sub
jecxz
xor
push
jae
xchg
ja
pop
js
jbe
stc
sti
adc
sbb
mov
fs
pop
inc
xor
rcrb
cmp
insl
sbb
mov
fisttps
iret
or
and
add
push
addr16
add
add
pop
in
inc
push
or
mov
int
or
add
fnstcw
insb
mov
mov
sbb
andb
dec
out
dec
jle
arpl
or
mov
mov
add
std
test
add
fisubs
jle
cmp
addr16
cmp
jmp
nop
adc
xchg
mov
stos
js
pop
mov
mov
dec
push
inc
sub
mov
std
jl
push
stc
fists
cmp
cltd
in
push
rclb
adc
or
pop
mov
jl
sbb
sub
into
pop
data16
cmc
incb
ljmp
push
mov
push
or
dec
mov
jae
lret
mov
inc
mov
sub
cmp
ss
xchg
jno
mov
repnz
push
les
pop
dec
pop
les
test
jbe
dec
and
scas
movb
add
jg
neg
pop
daa
inc
leave
pusha
mov
add
neg
lcall
jno
jno
and
or
lret
fdivrl
cmpsb
xchg
sub
shll
jae
push
and
in
movd
xor
in
repnz
dec
mov
out
jne
shlb
sbbl
inc
rorl
pop
shl
sbb
jge
in
jecxz
imul
cs
pop
test
push
inc
push
outsb
cltd
push
mov
pop
test
negb
fcmovnbe
pushf
outsb
fs
mov
adc
mov
scas
push
daa
mov
test
and
mov
mov
cwtl
cmc
jo
or
ja
imul
lods
adc
and
mov
loop
sub
or
fisttpll
cmp
insl
out
movsl
mov
sub
and
inc
test
sub
cmpsb
xor
cmp
sbb
aam
cmp
addb
mov
out
jecxz
push
aas
dec
dec
sub
cmp
add
add
sti
jg
cmp
je
xor
xchg
or
add
scas
pop
mov
stos
addl
adc
or
xlat
cli
mov
inc
repnz
scas
out
mov
and
fistps
sbb
jae
or
shr
dec
adc
sub
jg
fisubrs
inc
int3
xor
add
fidivs
clc
sbb
lds
or
dec
mov
pop
ds
jecxz
out
lahf
sahf
jg
push
stos
scas
jp
push
hlt
gs
arpl
jns
cmova
adc
pop
mov
cltd
scas
adc
cmp
cmp
leave
std
jp
xchg
sbb
xor
mov
popf
inc
cmp
out
mov
mov
outsb
push
ljmp
jne
sbb
jb
sbb
pop
push
in
jge
lds
add
push
push
hlt
insl
mov
ljmp
imul
loop
sub
pop
xor
inc
push
cmp
in
out
daa
push
jnp
jae
sub
sbb
add
add
jnp
fstp
fcompl
add
mov
add
mov
ficoms
icebp
leave
xchg
inc
jns
shll
adc
mov
call
imul
and
ljmp
stc
cmp
xor
push
push
xchg
stos
add
mov
repz
mov
push
out
popl
xchg
pop
pop
pushf
notb
lods
shr
push
dec
leave
dec
pop
mov
sbb
pop
jne
dec
ljmp
jmp
rorl
pop
dec
push
and
jle
imul
dec
push
dec
pop
cmpl
xor
cli
jle
add
or
mov
cwtl
test
rcll
adc
pop
dec
jns
lret
mov
iret
repz
jno
arpl
mull
mov
mov
dec
sbb
push
push
or
fisubl
loop
mov
lock
dec
sbb
cltd
fldcw
lods
mov
sbb
adc
dec
dec
and
divl
notl
inc
jmp
add
add
outsl
mov
add
cltd
mov
push
add
add
push
or
sbb
xchg
pop
bound
sub
and
outsb
fcoms
dec
lds
filds
in
add
push
push
dec
loope
jno
lret
mov
test
cmc
scas
push
or
repz
fisttps
jle
ret
mov
xchg
lea
gs
jl
push
xlat
cmpsb
inc
scas
sti
shlb
ja
inc
mov
push
test
sub
jp
pop
jmp
in
idivb
pop
xor
seta
mov
data16
jle
cmp
ret
daa
cmp
lock
mov
jp
test
mov
mov
sti
jb
inc
or
xor
push
or
mov
pop
adc
lahf
subl
adc
addr16
xor
adc
push
ljmp
lahf
out
fldl
pop
dec
sar
mov
mov
aaa
decb
xchg
add
add
jmp
dec
and
sgdtl
add
or
mov
movsl
mov
sti
push
in
out
scas
fcmovb
out
jmp
outsl
std
mov
mov
mov
mov
or
sub
xor
mov
popf
ljmp
test
mov
aaa
cmc
jg
shlb
xor
hlt
push
movsl
mov
out
js
push
mov
lods
insb
adc
imul
push
in
xchg
mov
mov
xor
mov
cld
lret
icebp
mov
popa
imul
push
push
shlb
cmc
sub
jl
lods
int
pop
cs
xor
scas
adc
mov
jae
sar
xor
add
xchg
fsin
ljmp
pop
leave
push
dec
repz
jmp
int3
mov
mov
jb
lahf
inc
jecxz
loop
loope,pn
cmpsl
mov
fcomi
clc
ss
push
and
pop
mov
mov
out
loopne
add
xor
xchg
lds
rcll
mov
adc
add
hlt
pushf
cmp
lahf
ja
add
sbb
fstpt
lock
jns
inc
sub
xchg
stos
push
sahf
call
ljmp
jg
daa
idivl
mov
jge
mov
mov
mov
sbb
push
xor
js
dec
test
jecxz
stos
jl
hlt
sub
inc
dec
leave
aas
out
inc
aaa
fdivrs
jge
adc
add
sbb
std
and
es
insb
mov
out
jp
dec
je
jl
fisubs
pop
nop
testb
or
inc
push
inc
mov
mov
sbb
push
cmpsb
jnp
pushf
lahf
adc
ja
cld
pop
or
mov
add
inc
or
or
dec
fdivr
fdivrl
int
call
cmp
out
or
lcall
dec
add
lds
push
addl
add
cli
inc
jg
int
xchg
lods
or
mov
add
add
sti
mov
out
cmp
aam
out
stos
mov
repnz
call
sub
loopne
or
inc
dec
mov
add
shr
sub
xchg
dec
in
cld
pop
sbb
sbb
or
jle
test
xor
orl
cmc
pop
xchg
xchg
jbe
rcll
xor
fmull
cltd
sahf
xor
cmp
leave
jl
xor
cmp
ss
mov
or
cmpsl
aaa
pop
add
icebp
outsb
mov
xchg
add
mov
test
loop
out
fninit
jns
mov
insb
ds
jb
sbb
push
adc
jp
cltd
mov
xchg
xor
cmp
rcll
movsb
popa
fldl
mov
insl
fbld
std
xchg
je
mov
mov
lock
xor
xor
pop
les
add
lock
std
cmp
jle
fistpll
ss
xchg
iret
stos
pop
adc
add
mov
push
aad
ret
sbb
iret
js
test
cmp
int3
mov
mov
or
cmpl
inc
mov
mov
inc
push
fwait
mov
popf
cltd
jne
cmc
ret
mov
repz
and
xor
stos
mov
and
je
gs
sbb
cmp
lock
mov
adc
rorb
push
adc
or
push
jae
sbb
in
push
cmp
push
das
mov
jp
sbb
rcrl
jne
xor
into
inc
mov
repnz
mov
lcall
push
adc
js
fildll
lods
adc
divb
push
stos
xlat
mov
cmc
push
push
adc
pop
lock
dec
stc
or
scas
pop
ds
mov
mov
dec
in
xor
xor
mov
call
adc
aam
daa
mov
xchg
pop
lds
xlat
ficompl
inc
js
ret
jmp
add
mov
pop
repz
push
or
dec
test
loopne
add
and
jl
inc
xchg
mov
mov
mov
ret
jb
adc
lret
test
jno
decw
repz
mov
push
cmp
push
cmp
in
cmp
cmp
cmpsl
or
jbe
xchg
dec
mov
in
in
sbb
cli
movsl
arpl
jo
cmp
in
jl
iret
or
clc
lods
dec
mulb
loope
push
mov
jecxz
cmpl
dec
out
mov
push
xchg
mov
jns
cmp
mov
ljmp
pop
mov
cmp
jae
mov
stos
xchg
mov
cmp
insb
adc
adc
in
jmp
xchg
rcrb
in
out
pop
pop
xorl
js
lods
push
enter
loop
shufps
sahf
mov
inc
and
pop
outsl
push
fs
sbb
sub
rcr
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
lahf
jecxz
and
add
in
add
vmulsd
rorb
adc
ficoml
adc
and
mov
int3
mov
xchg
movsl
jle
in
push
mov
jb
les
aam
cs
xchg
add
xchg
imul
xor
jecxz
adc
sub
inc
jbe
aaa
cld
adc
adc
das
aad
std
adc
mov
push
scas
jl
inc
dec
mov
js
out
fmuls
aam
imul
movsl
xor
push
lock
cli
or
xor
jle
js
fs
inc
ds
andl
xchg
daa
cmp
ljmp
and
cmp
push
fwait
mov
sub
adc
xchg
mov
inc
or
jns
push
bound
ret
mov
sbb
subb
call
gs
dec
sub
or
mov
rolb
add
std
sbb
stc
cld
or
inc
dec
pop
mov
adc
add
push
ss
imul
pop
ret
sbb
test
cs
mov
push
in
rcl
dec
ljmp
out
jns
fwait
push
and
or
dec
test
cli
pop
adc
mov
in
lcall
std
and
cmp
pop
sti
pop
mov
outsb
or
insb
mov
cli
push
jbe
test
xor
dec
fwait
pop
push
sbb
stos
sbb
ss
insl
mov
hlt
mov
leave
push
aaa
ljmp
inc
add
out
daa
sub
es
dec
jbe
dec
cmpsb
sub
in
jmp
mull
movsb
out
dec
sbb
mov
mov
xor
or
push
pusha
sbb
fwait
dec
aas
and
out
lds
fcompl
ret
add
les
xchg
popf
sub
xorl
jge
adc
int
push
sbb
jle
pop
lcall
xchg
into
test
popa
lods
xchg
jecxz
xor
insb
xor
negl
adc
pop
xchg
cmpsb
adc
push
add
add
mov
sub
mov
push
inc
sub
sbb
add
mov
push
push
cli
iret
add
scas
adc
pop
sub
or
add
cmp
imul
sbbb
push
mov
ret
fwait
incl
lret
jmp
divl
jns
xor
xor
popf
dec
fs
sub
fsubrp
into
adc
insb
fs
adc
adc
adc
test
cmc
push
addl
sbb
test
popa
jl
xor
push
lock
jnp
inc
sub
sti
xchg
retw
push
xchg
xchg
xchg
sub
or
xchg
jb
or
stos
arpl
and
jmp
movsb
cmpsl
push
insl
adcb
movsl
jne
push
mov
jno
push
pushf
mov
shlb
mov
pop
pop
insl
jae
ljmp
add
mov
dec
pushl
arpl
scas
xor
add
add
popa
ret
pop
lods
aad
inc
push
ret
sbb
dec
sarl
incl
push
mov
out
inc
pop
mov
call
sub
add
test
jo
aaa
mov
adc
mov
and
sahf
pop
xor
mov
push
imul
add
fnsave
arpl
das
xor
push
xchg
dec
jl
shll
inc
lret
ljmp
scas
jg
sbb
or
loopne
subl
inc
dec
pop
sub
sti
add
mov
lea
outsl
leave
fidivrl
int
into
mov
insl
sub
sbb
int3
jbe
mov
adc
sub
sub
data16
dec
xchg
int
dec
cmp
gs
mov
cwtl
daa
js
pushf
cwtl
call
ret
fdiv
pop
dec
cs
or
scas
std
int
and
movsl
loopne
clc
or
loope
jmp
add
pop
sub
inc
ja
pop
aas
dec
push
frstor
add
idiv
push
testl
xchg
ss
mov
imul
xchg
cli
cmpsl
sub
movsb
pop
imul
loop
movsl
lret
pop
pop
jmp
xor
xchg
mov
lods
jnp
lods
arpl
dec
jle
jg
mov
call
or
test
lcall
imul
inc
adc
arpl
ljmp
adc
pop
xchg
cltd
xchg
or
popa
outsb
clc
hlt
or
xlat
xchg
data16
loopne
sbb
adc
cmpsb
sbb
rolb
jecxz
xor
ja
aad
or
inc
dec
lahf
movsb
hlt
mov
inc
cmp
lea
imul
mov
out
pop
lods
xchg
cmp
orb
or
cld
jae
incb
cmpsb
sub
adc
mov
loop
imul
cmc
sub
aad
pop
pop
mov
push
pop
pusha
test
push
arpl
add
add
xchg
jae
ja
div
mov
in
and
cmp
add
add
ljmp
iret
add
cmp
test
or
mov
movl
adc
pop
sbb
ljmp
sub
inc
push
push
xchg
mov
mov
movsl
clc
push
pop
push
jmp
mov
jb
cmp
insl
push
pushf
addr16
rolb
mov
ss
or
fs
sub
jg
mov
adc
adc
pop
lret
cs
movsl
dec
daa
ljmp
sub
mov
push
lret
daa
inc
pop
in
rcrl
and
icebp
mov
and
mov
movl
movl
xchg
xor
add
mov
cmc
test
mov
popa
sbb
push
sti
cmp
lea
adc
test
fwait
lea
and
ja
dec
or
imulb
jns
js
cmp
jle
leave
push
dec
popf
sub
imul
xor
cli
std
jg
push
pushf
dec
inc
dec
and
aas
sbb
add
shl
cmp
imul
adc
repz
sub
mov
ds
pusha
and
sbb
jg
mov
lcall
cltd
lahf
sbb
shrb
lods
cmp
push
fstl
cmpsb
mov
or
sub
repz
pop
push
cs
stc
insb
pop
jge
pop
mov
inc
inc
gs
sahf
scas
sub
es
xor
in
push
js
leave
mov
mov
repnz
clc
clc
test
adc
subb
sub
aam
add
pop
out
push
mov
cmp
shlb
mov
test
cmp
xlat
pop
cmp
add
inc
shrl
xchg
shl
jmp
mov
pop
mov
cmpsb
pop
movnti
arpl
sub
mov
and
cmp
or
iret
or
out
xchg
dec
xlat
mov
push
aaa
add
add
add
mov
std
incl
sbb
xchg
mov
add
add
movsb
test
add
pop
push
mov
in
imul
cmp
push
popa
xchg
lret
in
addl
out
loope
movsl
dec
pop
das
jno
sahf
lods
and
push
imull
cmp
sahf
sub
and
fidivrl
pop
flds
and
or
hlt
mov
push
xor
inc
stos
push
std
mov
dec
mov
mov
outsb
in
xor
ja
push
xor
ror
xchg
out
mov
gs
or
lods
cmc
push
mov
bound
sub
jbe
xchg
mov
sub
mov
in
loopne
out
add
cmp
negb
lods
xchg
popf
pop
cmp
jg
cwtl
xchg
aaa
fwait
mov
imul
ret
mov
cmp
outsb
adc
scas
mov
push
adc
xchg
xor
xchg
adc
lret
call
shll
movsl
cltd
out
cmp
hlt
mov
fs
je
rcrb
out
mov
xchg
jp
inc
inc
jmp
add
push
es
jg
pop
or
xor
lret
add
add
add
mov
dec
mov
xor
push
sbbl
cmp
iret
xchg
cld
pop
or
cmp
and
int3
mov
out
sub
loopne
inc
ja
dec
mov
popa
mov
jmp
loop
lahf
stos
add
cmp
mov
and
xorb
test
adc
cmpsb
xor
loopne
mov
cmp
xchg
push
mov
push
lcall
ret
sbb
xchg
jb
xor
ljmp
push
jmp
xchg
inc
adc
jbe
mov
or
jl
jnp
jbe
cmp
inc
ljmp
mov
out
bound
jno
std
pop
js
jnp
xchg
cmp
arpl
imul
xor
cmpsl
cmp
pop
adc
push
movsl
push
jbe
or
int
fistpll
xchg
popa
xorl
sbb
add
push
clc
or
dec
push
cmp
sbb
add
out
cmp
movsb
fnstsw
or
jge
loop
cmpsb
rorl
lahf
stos
pop
add
sub
xlat
push
push
cs
jecxz
ret
test
imul
dec
jle
dec
shr
mov
pop
mov
mov
fs
scas
jecxz
negb
test
aaa
pop
and
add
nop
xor
sbb
sti
jne
jae
aaa
add
mov
inc
cmp
dec
data16
xchg
push
cmp
inc
pusha
rol
cmp
jno
cmc
jl
loopne
ret
out
fistpl
int3
jne
xchg
outsl
inc
jno
sbb
sbb
addr16
adc
jecxz
loop
pop
dec
cmpsb
cmpsb
push
xchg
fdivl
xchg
push
adc
not
ja
mov
test
sub
mov
add
lahf
add
cmpl
jno
sub
xchg
inc
xchg
adc
dec
lahf
sbb
and
dec
dec
sub
pop
jmp
jns
add
xor
mov
dec
add
add
add
in
mov
push
push
mov
dec
adc
mov
mov
jge
sbb
loop
aam
xor
cwtl
cld
jnp
sahf
dec
ficompl
out
hlt
mov
rcrb
mov
popf
pop
shrb
push
loop
fbstp
popw
adc
das
daa
add
adc
daa
or
mov
int3
es
test
mov
mov
fs
rolb
sbb
adc
lock
fldt
and
scas
lods
cmp
lea
stos
push
mov
adc
adc
mov
shrb
fidivs
adc
imul
cld
es
mov
shl
add
and
xor
sub
enter
push
outsl
fs
cmc
lret
jl
movsl
cmpsl
stos
mov
sbbb
push
add
push
out
dec
mov
and
ficoms
stos
sbb
call
mov
pop
pop
add
add
jnp
xor
cmp
and
push
jmp
and
sub
arpl
repnz
and
aad
ret
ss
xor
andb
dec
call
je
cwtl
insb
dec
sbb
cmp
cld
dec
pop
cmp
pop
push
pop
push
fcomps
imul
sub
inc
pushf
call
mov
jno
or
xor
loop
mov
xlat
jae
xor
mov
insb
inc
pushf
push
gs
xor
mov
jp
out
xchg
push
pushf
popa
mov
adc
cmpsl
mov
push
sbbb
inc
xchg
lcall
push
stos
lods
add
sbb
mov
xchg
jmp
nop
inc
adc
push
and
fisttpl
pop
shrb
mov
and
arpl
mov
lret
sbb
or
jno
jl
pop
sbb
add
mov
out
stos
jge
or
mov
add
add
imul
push
cmpsb
jno
pop
pop
icebp
add
lods
push
pop
sarb
inc
dec
push
int
pop
fdivrl
adc
inc
hlt
out
leave
push
cmp
inc
mov
sub
loopne
and
jb
mov
clc
cmpl
sub
xor
sub
rol
and
and
jmp
or
add
jae
pop
repnz
push
fisttpll
ljmp
or
pusha
xchg
inc
aas
xchg
int
imulb
xor
out
adc
or
fdiv
push
xor
mov
pop
leave
mov
dec
jg
inc
sarl
jl
data16
das
jo
mov
sar
outsl
cs
loopne
xor
pop
pusha
push
jbe
sahf
mov
jo
pushf
cmpsl
pop
push
pop
aaa
pop
push
loopne
dec
cld
or
jge
out
dec
dec
pop
xchg
mov
add
dec
or
out
xchg
iret
push
aas
jecxz,pt
fbld
add
add
sub
mov
fwait
cmpl
mov
inc
loopne
aad
leave
sahf
insl
ja
jae
sti
push
adc
adc
into
ret
test
sub
or
sub
inc
lods
pop
mov
push
popa
hlt
mov
lahf
adc
aam
idivl
test
sbb
jmp
dec
lods
add
addb
cld
stc
sbb
in
test
rorl
add
xchg
gs
bswap
icebp
outsl
mov
xchg
add
dec
fsubl
je
xchg
or
mov
jo
mov
xor
stc
pop
fisubrl
xor
adc
push
outsb
fwait
inc
movsb
and
sbb
aas
sbb
dec
js
jge
ljmp
mov
inc
mov
xchg
push
fsubp
pop
push
ja
in
and
repz
xchg
or
idivb
out
mov
mov
into
push
mov
test
add
add
in
add
cmp
out
loope
jns
ret
cltd
and
add
sub
je
sub
fwait
or
sbb
gs
xor
pop
pop
cmpsl
mov
jmp
fs
gs
leave
repz
stos
ret
sbb
insl
fs
inc
mov
jle
into
push
dec
and
add
add
jecxz
sub
movsb
fstpl
in
push
imul
outsb
hlt
mov
add
insb
aad
inc
pop
add
inc
and
aas
mov
mov
mov
popw
mov
dec
and
fs
pop
test
cmp
daa
imul
pushf
dec
jge
and
jp
xchg
sbb
sbb
rcrl
ror
inc
push
jnp
sbb
lds
pop
cmp
pop
mov
pop
inc
cmp
xor
mov
and
mov
hlt
xchg
pop
and
into
shlb
in
push
aam
popa
cltd
ret
adc
push
xor
fisttpll
negb
ja
add
add
lods
jg
push
mov
mov
and
add
pushf
inc
mov
movsl
xor
and
cld
aaa
sub
call
dec
push
sahf
jnp
xor
pop
jno
out
lds
mov
jp
rolb
mov
dec
mov
xlat
outsb
mov
xchg
fs
dec
fmulp
es
xchg
jne
iret
jne
movsb
fcmovb
jecxz
cmp
lea
loop
push
call
addl
push
mov
loopne
mov
dec
outsb
movsb
jg
lock
push
or
mov
sbb
add
jp
sbb
adc
adcb
fimull
daa
xchg
mov
subl
mov
adc
nop
sub
fsubrl
sub
shrb
jbe
movsl
fwait
lods
sub
stos
adc
cmp
lahf
lret
push
andb
lret
mov
fildll
cltd
dec
mov
ret
or
dec
dec
jo
lods
into
lds
pop
jmp
add
add
jg
cld
ret
add
sbb
mov
and
add
in
lods
push
lret
xlat
inc
les
stos
mov
sbb
out
dec
iret
cmp
icebp
jo
inc
shrl
out
cs
mov
xor
inc
lods
xchg
sub
ret
dec
mov
sbbl
jp
and
dec
arpl
cmpsl
call
lcall
adcb
sbb
cwtl
js
mov
test
mov
ret
mov
fcmovnu
inc
int3
shlb
aaa
mov
sarl
adc
or
cmc
cmp
jle
jecxz
mov
addb
inc
aad
adc
shll
mov
and
negl
mov
jnp
test
sahf
dec
dec
imul
pop
jge
gs
test
xchg
xor
sbb
pop
mov
aam
rclb
rol
in
jg
aam
inc
repnz
add
mov
iret
mov
ja
pop
or
and
add
pop
cmp
pop
cld
mov
lcall
jle
dec
int
lods
jns
leave
negb
dec
inc
or
mov
fdivrp
popf
xor
mov
adc
push
int3
push
adc
fidivrl
in
pushf
out
lea
loop
push
xlat
pop
ja
enter
push
xor
enter
into
pop
cmp
sbb
jmp
lock
dec
fs
fcomps
fstl
inc
push
or
js
jle
icebp
inc
sti
outsl
add
jae
outsb
daa
dec
mov
loop
mov
dec
pop
adc
jae
xchg
jb
xor
stos
dec
mov
sbb
jle
mov
pop
out
lret
xchg
pop
or
push
add
test
pop
int3
andps
push
or
lea
in
cmp
inc
arpl
pop
test
jle
aas
mov
push
out
mov
adc
sarb
mov
mov
inc
das
add
add
mov
jg
arpl
dec
push
xor
add
add
pop
xchg
push
xchg
popa
aas
sub
cltd
or
cld
push
div
inc
jb
notb
mov
sub
iret
adc
in
in
push
stos
cmp
loopne
mov
pop
mov
hlt
lds
and
movntq
push
dec
cs
scas
xchg
sbbl
push
sub
jae
cld
and
push
push
ror
aam
mov
jp
mov
xchg
xor
jl
xrelease
mov
repz
jle
rcrl
xor
stc
adc
decl
or
push
popf
es
ja
or
jo
out
pop
lret
push
or
cmp
stc
mov
daa
xor
push
dec
mov
add
js
cmc
push
push
arpl
ficoml
add
call
outsb
out
jne
xchg
lods
push
and
fidivl
fcmovbe
fpatan
in
add
add
xor
clc
cli
clc
sarb
sti
mov
jno
andb
add
mov
inc
inc
nop
cli
out
push
push
pop
stos
fs
popa
push
loope
xor
lock
movsl
das
dec
push
arpl
movsl
add
lods
mov
popa
sbb
std
mov
xchg
rolb
dec
shll
or
les
icebp
mov
daa
sub
jbe
ret
test
push
mov
inc
addr16
jecxz
cmp
orb
jge
mov
es
xchg
in
mov
mov
push
adcl
or
xor
inc
cs
arpl
xor
mov
inc
or
out
outsb
lods
aaa
ja
jecxz
subb
pop
inc
int
xchg
mov
mov
stc
sar
rcrb
sahf
in
sub
icebp
mov
inc
les
int
pop
xchg
and
and
sbb
pop
loopne
xchg
push
adc
out
pop
divb
sahf
xchg
and
or
ret
jo
xor
adc
rolb
add
add
jnp
out
mov
dec
and
add
add
test
mov
popf
movsb
inc
push
lcall
mov
pop
xor
mov
cmp
call
dec
adcb
mov
mov
push
les
mov
test
ljmp
stos
jecxz
jle
nop
cmpl
ja
fsubs
mov
sbb
xor
enter
xchg
cmp
hlt
lods
movsl
push
dec
mov
andl
stos
fwait
cwtl
mov
or
fistpll
push
xchg
pop
dec
xchg
in
and
enter
movsl
filds
pop
pusha
xor
jno
sbb
ljmp
daa
dec
xor
int
ret
call
mov
adc
mov
jge
mov
jle
repnz
mov
repnz
xchg
mov
ficomps
fcomp
aam
or
add
add
es
data16
insb
daa
mov
push
popa
cmc
stos
mov
add
add
mov
icebp
or
dec
push
xchg
adc
sahf
mov
or
push
inc
cmp
inc
jnp
inc
sbb
lcall
fwait
out
xchg
fisttpl
push
lret
shll
imul
call
loope
xchg
stc
jg
xchg
xor
and
lods
add
xchg
inc
paddd
pop
movsl
scas
sbbb
push
mov
mov
mov
mov
fisubrl
mov
sahf
lods
sub
in
jecxz
repz
add
cmp
pusha
jecxz
out
clc
lret
imul
addr16
xor
and
mov
mov
inc
pop
cli
or
mov
movsb
xor
push
lcall
jo
gs
dec
shll
pop
jg
push
push
test
movsb
jle
out
in
cmp
sbb
icebp
cltd
repnz
es
sub
inc
imul
call
pushf
imul
cmpsl
mov
roll
add
clc
mov
fldcw
add
push
add
dec
in
cs
stc
daa
dec
out
fwait
test
fisubrl
xchg
mov
pop
subl
fwait
mov
popa
fidivrs
inc
loope
sub
sbb
lea
leave
dec
xor
call
or
shrl
sarb
stos
pusha
sub
cmp
or
jge
ja
ds
movsl
sar
inc
lea
dec
fmuls
sub
and
cmc
xor
test
loop
add
lret
jp
adc
cli
dec
mov
lret
lods
push
adc
testb
ffreep
and
mov
repz
mov
outsl
shlb
dec
jns
repz
xchg
or
mov
dec
or
daa
insl
sbb
cltd
dec
dec
jne
cmpsb
pop
mov
out
adc
movsl
fstpl
rorb
repnz
push
pop
push
or
loope
call
mov
addr16
xor
inc
stos
jecxz
mov
or
cld
jne
push
add
add
repz
push
sti
cmpsl
enter
repnz
stos
test
add
mov
enter
dec
mov
adc
test
cs
pushf
mov
push
mov
push
lds
pushf
shll
push
and
std
xchg
xor
dec
aad
daa
cmpsl
ret
sbb
xor
sub
xchg
mulb
dec
push
jbe
scas
mov
push
xchg
test
mov
add
adc
pop
bnd
jno
sbb
mov
aaa
mov
lea
push
push
sbb
mov
jge
sbb
cld
xor
gs
jle
mov
je
push
lock
xor
mov
xchg
sbb
movsl
lock
dec
loope
adc
sbb
stos
aaa
shr
cmp
sub
leave
js
pop
adc
fwait
mov
add
jmp
sub
ret
enter
mov
xorb
xchg
mov
bound
sbb
shr
add
add
mov
std
mov
dec
push
insl
hlt
fdivrl
add
add
sbb
or
sub
and
and
sbb
fpatan
mov
sbb
mov
cld
pop
dec
mov
ljmp
pop
cmp
mov
sbb
std
jge
cmp
dec
or
pop
mov
bound
movsl
mov
push
scas
fldcw
imul
xor
xchg
in
mov
jo
push
daa
ljmp
push
jnp
int
lock
sbb
ret
mov
cltd
sti
mov
jns
push
jmp
mov
pop
aaa
mov
inc
lods
arpl
jb
les
inc
stos
and
inc
jne
cmp
xor
out
cmpsl
lahf
movsl
sub
out
mov
dec
or
in
popf
dec
jne
dec
xor
add
mov
out
pop
and
std
or
js
bound
bound
out
outsl
add
jle
lods
mov
movsb
ljmp
dec
cwtl
dec
das
lret
or
add
lds
xchg
and
inc
and
lcall
add
add
mov
cmp
xor
adc
stos
andl
inc
jno
xchg
bound
cmpsb
out
fisubl
dec
es
lods
xchg
fcmove
jge
mov
lods
sahf
sbb
push
and
lret
jl
mov
push
cmp
push
test
rcrl
gs
ret
cli
testb
mov
lods
mov
mov
cmp
cmp
rcrl
fwait
mov
ret
rolb
jle
and
bnd
icebp
or
jle
pop
push
nop
push
imul
movsb
andb
mov
push
mov
dec
mov
outsb
repz
repnz
push
dec
ret
mov
mov
repz
sub
push
out
add
jns
pushf
repnz
jno
cmp
dec
cltd
cwtl
test
or
repnz
and
adc
movsl
or
cmp
adc
js
sub
ljmp
add
fiaddl
ret
ficomps
cmp
lahf
mov
add
add
data16
pop
pop
test
jge
addr16
iret
jl
mov
dec
mov
in
pop
gs
int
cmc
mov
jne
mov
mov
pop
jg
or
test
jno
mov
or
pop
imul
int
inc
push
mov
push
push
ss
add
mov
and
inc
enter
mov
pop
aam
mov
movsb
in
lret
popa
inc
mov
adc
andb
push
into
jo
mov
xchg
mov
je
scas
mov
stos
out
mov
xchg
cmp
jmp
push
dec
imul
dec
in
or
dec
mov
fnstenv
std
dec
scas
daa
sbb
push
into
popf
jo
dec
movsl
or
mov
gs
or
loope
ss
xor
add
cmp
mov
mov
gs
in
lahf
mov
out
lock
shlb
inc
addb
add
lods
xor
mov
cmp
pushf
lods
or
add
add
push
mov
lcall
xor
sbb
into
pop
jo
mov
jmp
or
mov
out
aas
fldt
mov
xchg
lods
addr16
cs
or
sub
sub
shrb
mov
cmpsb
xchg
and
insb
cld
add
mov
sar
xorl
and
push
pop
inc
leave
cmpsb
repnz
and
mov
orl
cmp
jns
icebp
adc
jne
dec
nop
stos
pop
test
enter
pop
dec
xchg
inc
pop
pop
idivl
out
jb
pop
jns
ficoms
mov
lret
jae
loope
imul
cmpsb
push
fdivrl
cmp
push
dec
jge
call
lahf
sarl
or
test
scas
js
jge
adcl
mov
lahf
out
jmp
test
cmp
mov
xchg
push
in
aad
adc
or
add
lock
mov
or
dec
in
push
add
sbb
push
lea
push
mov
cltd
lahf
fdivl
mov
inc
movsl
addr16
fwait
int3
outsb
sbb
jle
jb
add
je
mov
sub
addl
cmpsb
mov
cs
shll
adc
push
repnz
ljmp
loope
sub
std
dec
xor
inc
cmp
xorl
mov
sub
loop
iret
jns
dec
test
into
adc
notb
xchg
test
sub
cmp
xchg
das
cwtl
inc
or
mov
fwait
jmp
icebp
add
cmp
call
rorb
xor
sbb
sahf
je
imul
sbb
rorb
inc
cmp
xchg
pop
cld
stos
or
inc
pop
test
addr16
lret
push
push
sub
or
jno
or
push
mov
dec
add
add
sti
pop
jge
neg
hlt
add
pop
mov
add
add
cwtl
pushf
cwtl
enter
jnp
mov
notl
dec
lea
mov
jl
in
addr16
in
rolb
mov
mov
pop
icebp
stos
and
leave
adc
cs
out
jno
mov
pop
lahf
setge
rcll
nop
stc
push
jae
pop
fidivrl
push
inc
cmc
xor
jmp
ret
cmp
rcrl
sbb
les
push
sbb
inc
add
jns
cmc
ret
mull
mov
lods
add
dec
add
incb
ja,pn
mov
orl
adc
push
testl
out
sbbb
js
push
lock
sahf
cld
data16
data16
scas
mov
jmp
ljmp
aam
cmp
sub
pop
pusha
es
mov
nop
mov
push
dec
sbb
jp
fisttps
push
shrl
and
mov
sarl
add
pusha
cltd
fsub
std
in
popf
in
stc
jmp
jmp
cmp
add
lret
repnz
pop
push
cltd
push
push
leave
push
push
sahf
mov
sub
xchg
pop
jb
mov
xchg
in
dec
inc
and
push
jge
mov
ficoml
fxch
jge
push
out
dec
lock
mov
pushf
fisttpl
xchg
orb
pop
pop
popf
add
push
mov
push
aaa
test
call
iret
sbb
lret
or
test
call
insl
jp
inc
rcr
xchg
and
and
push
cmp
mov
sbb
or
das
xchg
test
xor
stc
divb
pop
inc
jae
and
popa
lcall
jbe
mov
popf
call
push
loope
call
or
and
scas
pushf
inc
sub
add
pop
lea
push
lret
or
das
leave
jecxz
roll
ss
lcall
mov
fwait
inc
mov
mov
jo
aam
push
nop
dec
sub
and
add
pop
jp
jnp
sti
xchg
jle
jp
lods
jecxz
mov
mov
add
add
sarb
das
mov
cmp
cmp
mov
adc
gs
jo
jae
add
and
dec
lock
pop
xor
sub
pop
sarb
jb
and
and
xor
mov
cmp
shll
dec
jge
and
out
loope
sbb
popf
jp
lcall
daa
insb
and
jnp
pop
sahf
pop
pusha
int3
inc
pop
nop
out
test
sahf
mov
cmp
pop
rclb
xchg
in
xchg
mov
cmc
pop
adc
mov
jg
imul
rol
pop
adc
cld
mov
mov
xchg
cltd
cmp
pop
adc
subl
sub
cmp
dec
push
arpl
and
addr16
fistps
out
mov
popf
cld
call
xor
mov
ret
sbb
add
push
sti
decb
mov
xadd
add
add
ds
sub
fwait
mov
mov
mov
cmp
ret
mov
mov
test
add
pop
adc
lods
dec
cmpsb
xchg
nop
cltd
sub
sub
lods
xchg
ljmp
jns
adcb
test
mov
andl
pop
out
dec
inc
nop
mov
push
orb
mov
push
sahf
icebp
out
mov
xchg
int3
cli
cwtl
js
inc
ljmp
out
loope
jne
jg
cmp
rorl
and
add
mov
ljmp
scas
or
mov
add
add
sbbb
sub
sbbl
cltd
xor
sub
das
icebp
push
or
mov
shll
pop
scas
xor
sti
mov
and
out
xor
add
add
cmp
xor
hlt
mov
xor
add
sub
fiaddl
in
test
xor
hlt
pop
push
cmp
inc
cmp
push
out
jge
lret
sahf
inc
lds
lret
jbe
cmp
into
leave
add
test
popf
xchg
outsl
movsl
sti
mov
jbe
inc
xchg
jnp
call
adc
pop
mov
stos
pop
xor
lods
repz
dec
mov
jns
or
mov
xor
addl
stc
lods
lret
es
stos
popa
jge
mov
in
push
int
pop
loopne
mov
inc
add
jne
jo
cs
xor
in
gs
and
add
movsl
cwtl
orb
clc
pop
jno
sub
into
sahf
je
in
leave
test
cs
sbb
mov
imul
xor
clc
lret
or
cmp
test
sahf
adc
aad
dec
jg
pusha
jns
ds
add
incb
ljmp
adc
add
add
sub
push
and
cmc
js
xchg
xor
outsb
lods
fsubl
into
rorl
mov
jg
cmpsl
mov
cmc
sub
sub
das
jmp
push
sbb
das
dec
jge
roll
cltd
or
inc
out
lods
stos
dec
cmpsl
sub
jecxz
leave
jns
orl
sti
push
mov
dec
mov
movsb
push
stos
sub
add
push
push
std
push
sbb
pushf
pop
xchg
inc
dec
nop
xor
int
and
jmp
push
fcmovb
adc
jo
sub
data16
je
scas
out
and
out
pop
inc
sub
cmpsl
push
movsl
test
pop
imul
push
stos
dec
jecxz
lods
push
test
in
pop
mov
xchg
mov
cwtl
xchg
jae
imul
and
mov
push
fdivp
pop
ja
cmpsb
lahf
rcl
pop
les
pop
cmpsb
jb
pop
sbb
into
lods
xor
inc
jnp
fs
mov
add
add
add
rclb
nop
lcall
aaa
add
add
jecxz
push
stc
push
mov
cmpsl
sahf
push
mov
add
lret
dec
mov
cmp
ret
sti
push
and
cmp
xor
jecxz
sbb
aam
cltd
movsl
roll
stos
out
into
cli
or
cmp
stc
cmp
std
and
pop
out
aam
insb
cs
adc
out
sub
inc
ret
pop
jb
sub
adc
mov
enter
jns
and
adc
or
fistps
add
push
pop
cmpsb
int3
cmc
das
and
sbb
push
xor
and
xor
mov
xchg
aad
scas
andl
pop
and
dec
inc
aaa
mov
cmpsb
fsubrp
icebp
ret
and
mov
lret
ffreep
outsl
cmp
sahf
aas
jno
pop
push
pop
loope,pn
pop
pop
sbb
lods
jae
mov
xchg
loope
stos
cmovge
xchg
xchg
repnz
cs
jl
lods
leave
lds
in
imul
add
add
jbe
idivl
or
mov
xchg
cmp
add
mov
or
call
push
jo
movsl
inc
cmpsl
dec
pushf
cli
clc
inc
call
out
sbb
xlat
cmpsb
inc
sub
das
push
and
xlat
vdivpd
insb
jo
in
push
pop
jge
nop
cwtl
mov
xor
aas
lret
push
pop
gs
cmp
dec
cmp
push
pop
mov
fwait
add
push
push
xor
mov
and
cmc
xor
test
mov
mov
sub
or
push
fsts
scas
xor
xchg
mov
movsl
js
cmp
push
jge
xor
pop
gs
in
push
sbb
outsl
cs
xchg
ss
and
inc
pop
test
pop
xchg
jg
loopne
xchg
adc
iret
mov
je
aam
mov
mov
jb
pop
pop
test
cld
fcmovb
enter
add
outsb
sub
stos
fs
jmp
leave
aas
out
xlat
jno
cmp
add
xlat
mov
outsb
or
add
les
xor
lcall
xchg
jmp
dec
das
insb
sarb
push
inc
test
jmp
mov
jp
fs
adc
je
pop
xor
lret
sti
imul
mov
out
fs
mov
xchg
fdivs
mov
add
call
aad
fnstenv
push
sbb
dec
sete
std
mov
sub
cld
daa
sub
jb
mov
test
scas
mov
shl
rep
push
xchg
frstor
xchg
dec
cld
jno
aam
dec
adc
push
xchg
fdivl
jnp
lahf
jb
mov
clc
push
sbb
jg
jl
mov
cltd
or
stc
lcall
xchg
or
push
push
lret
push
arpl
cs
pop
sub
cwtl
pushf
dec
mov
hlt
inc
inc
inc
mov
fstpt
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
daa
hlt
fistpll
add
add
shrb
adc
xchg
std
mov
inc
cmc
jecxz
push
pop
scas
outsl
jae
cli
movsbl
out
enter
inc
in
xchg
jb
std
insl
mov
cmc
test
mov
addr16
mov
push
xchg
incb
or
aas
clc
mull
pop
pop
in
andb
sub
shll
push
pop
adc
in
cmp
stc
in
xchg
into
mov
daa
push
xchg
pop
lds
lds
xlat
imul
stc
outsl
test
into
lahf
fwait
lods
in
fdivrl
loope
pusha
pushf
lods
mov
std
fsubrl
pop
jmp
cli
lea
scas
cmpsb
test
ss
jb
inc
sbb
lret
add
sbb
xchg
push
inc
dec
push
fldcw
inc
fwait
inc
cmc
mov
pop
in
and
test
jae
mov
jp
lea
lret
dec
jecxz
mov
adcl
cmp
add
sbb
jnp
jnp
cmp
movsb
push
sbb
ds
jg
cmp
add
fidivrs
fimuls
pop
dec
xchg
iret
frstor
test
movsl
divb
pop
pop
test
pop
int
std
loope
jge
call
andl
mov
mov
int3
add
cmp
sbb
in
mov
ret
sbb
gs
xor
sub
roll
xor
fwait
ja
out
in
mov
sub
pop
inc
loop
and
loopne
adc
maskmovq
mull
sub
mov
test
dec
jle
xlat
loopne
roll
add
int3
les
cs
scas
xchg
das
add
lock
pop
dec
sbb
js
pop
gs
lds
xchg
hlt
xor
jg
stos
pushf
xchg
dec
fs
lds
cmp
es
mov
shr
cld
loop
faddl
xchg
jae
fmull
fistpl
cmc
mov
sar
enter
push
dec
sbb
add
adc
jmp
gs
add
insb
testl
jb
addl
or
adc
dec
test
sub
add
fistps
dec
adc
inc
pop
divb
in
mov
es
and
popf
jle
out
and
repz
dec
outsb
sub
push
mov
in
xor
mov
scas
push
out
and
push
jge
inc
and
mov
cmc
sbbl
push
std
and
je
ret
ds
outsl
sbb
imul
lahf
push
divl
inc
cmp
or
mov
pusha
cmp
mov
push
cmp
in
push
xchg
scas
adc
mov
into
push
mov
dec
sub
mov
sbb
push
push
repnz
push
xor
cmp
xor
insl
arpl
daa
into
stos
popa
push
xchg
lea
xor
inc
in
loop
xor
and
jmp
push
xchg
stc
sub
sbb
shl
mov
and
das
cmp
lods
repz
mov
jne
cmp
cmp
add
and
adc
lods
fdivs
dec
mov
loop
push
lock
ret
mov
cmp
das
shll
sub
je
sbb
popf
enter
out
push
cltd
sub
out
clc
shll
dec
loope
ficompl
cmc
movsb
or
call
icebp
jge
insb
lret
mov
inc
out
sbb
jo
or
es
cmpsl
movsb
xchg
mov
lret
roll
sbb
pusha
repz
ret
lods
xchg
frstor
cltd
nop
sub
mov
enter
test
and
loop
repnz
sbb
xchg
dec
imul
arpl
push
jg
call
js
pop
push
pop
cmp
call
test
ret
mov
mov
aas
jg
xchg
push
in
test
lret
inc
mov
sub
cs
movsl
xchg
xchg
jg
cmp
and
movsb
adc
loopne
lfs
add
add
daa
push
cld
push
std
jmp
dec
push
inc
inc
repz
add
les
jns
mov
add
mov
data16
jl
fwait
xchg
mov
jae
mov
lds
es
adc
call
inc
fistps
sbb
mov
iret
rcr
mov
dec
inc
es
mov
inc
xchg
call
sti
or
push
push
and
fwait
and
push
dec
rol
test
xchg
out
lds
mov
inc
push
mov
rolb
shl
cltd
sub
xchg
iret
pop
scas
lock
pop
sbb
pushf
push
sbb
and
or
stos
mov
cmp
xor
add
cmp
push
add
inc
mov
iret
add
dec
loope
or
xchg
jmp
add
cmp
adc
push
add
xchg
push
test
mov
jnp
and
adc
pop
sbb
hlt
jmp
test
inc
scas
scas
lret
mov
lds
add
add
sbb
dec
push
out
aad
jle
xor
add
push
pop
push
pop
ret
lds
int
pop
les
sbb
mov
leave
jae
add
cmp
sahf
js
outsl
sbb
dec
sahf
insl
adc
lods
mov
addr16
scas
aam
dec
pop
das
mov
pop
mov
sti
outsl
sbb
stc
pusha
push
xchg
loopne
and
add
jmp
mov
and
inc
mov
lods
mov
add
xlat
mov
out
pusha
mull
scas
pop
adc
sub
fs
xor
loopne
outsl
push
stos
aas
or
out
lcall
push
int
lea
addr16
mull
fwait
loop
adc
dec
sbb
xor
cs
insb
fisttpll
add
outsl
subb
push
xchg
jae
mov
mov
lret
mov
xchg
jp
sub
mov
jns
imul
pop
aam
cmpsl
add
stos
add
push
mov
or
jmp
add
add
sbb
jno
stos
pop
rcrl
sbb
sarb
and
xchg
fldt
fs
repz
dec
add
es
dec
xor
jb
lods
push
dec
jge
fisubrs
aam
lods
call
out
cmpl
jmp
imul
call
sub
push
adc
loop
dec
int
and
add
divps
xor
xchg
jl
test
and
or
jecxz
imul
fbstp
cltd
push
inc
sbb
and
sub
ret
cmc
fucomi
jno
cmpsb
push
push
movsb
pop
lret
mov
mov
stos
aas
leave
xor
out
divb
pop
mov
daa
xor
js
ds
test
cmp
pop
sub
xor
push
mov
lcall
push
popa
nop
cli
out
add
push
dec
inc
popf
aas
jmp
push
add
jg
xchg
orl
stos
add
add
and
push
inc
mov
dec
pushf
sub
adc
mov
sbb
and
ljmp
or
pop
cld
xor
xchg
sbbw
movsb
dec
cmp
je
mov
insl
jne
adc
add
push
test
push
jo
push
xchg
sbb
mov
cltd
cmp
and
cld
jle
dec
push
and
fwait
cmp
jmp
lcall
ror
fnsave
movsb
cltd
jge
dec
fildl
dec
jge
and
dec
iret
pusha
lret
dec
idivl
and
shlb
or
test
sub
pop
movsl
inc
in
pop
insb
pop
adc
pop
dec
push
xor
into
mov
lret
pop
sub
shrb
call
push
and
bound
pusha
add
xor
popa
xchg
les
cmc
enter
sub
add
add
push
dec
lret
jmp
imul
aaa
je
les
inc
add
add
add
jne
push
and
into
cli
adc
test
sub
test
inc
jnp
stc
lret
clc
xor
mov
or
adc
adc
mov
jmp
xor
mov
in
mov
or
outsl
imul
jae
mov
jmp
fsubl
in
and
inc
dec
pop
adc
clc
in
push
pop
and
in
dec
mov
dec
sub
mov
or
sbb
inc
inc
cmp
dec
loope
sbb
cmp
inc
fstl
jo
lret
push
pop
inc
sti
cltd
into
out
in
inc
cmc
pop
sarb
cmp
pop
test
cmp
outsl
push
out
sub
lret
scas
inc
jbe
mov
shl
dec
outsb
insl
adc
outsb
pop
gs
jl
push
in
jno
testb
or
pushf
bnd
adc
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
repnz
loope
inc
add
add
push
sbb
das
dec
popa
mov
stos
das
iret
sub
mulb
lods
lea
and
nop
cmp
dec
adc
fstl
jbe
fimuls
jle
popa
jp
adc
test
mov
inc
add
push
pop
cmp
sub
andb
pop
insl
stos
call
mov
mov
fmuls
sti
cmp
push
xchg
pop
push
mov
aaa
add
insb
testl
and
push
xor
sub
pop
sbb
lods
mull
insl
gs
xlat
inc
jnp
or
cmc
add
mov
jecxz
ret
pushl
cmp
loopne
mov
ja
cmp
sbb
add
insb
flds
sub
fs
js
push
xor
pop
push
xor
cmp
xor
and
shlb
cmp
dec
jg
cmc
xor
add
add
jns
xor
jg
push
mov
add
in
loopne
out
adc
push
stos
lahf
ljmp
xchg
cli
and
ret
jae
cltd
dec
stos
dec
push
cmp
lahf
jg
mov
mov
xlat
jmp
inc
push
dec
mov
popa
scas
mov
inc
cmp
fcompl
push
hlt
stos
out
or
mov
repz
push
nop
mov
adc
das
mov
sar
roll
movsl
mov
icebp
push
dec
inc
scas
adc
xchg
nop
dec
xchg
mov
mov
xor
les
or
push
push
xor
shr
stc
fidivrl
sti
movl
cmp
or
pop
insl
test
lock
mov
aas
adc
lahf
or
lret
ljmp
dec
and
xchg
xchg
pop
addr16
stos
mov
lcall
xor
cltd
gs
mov
out
ret
jnp
loope
hlt
fcmovnu
adc
push
sub
out
fldl
adc
add
ret
jg
decl
rol
push
inc
add
add
and
fsts
add
inc
pop
dec
cmp
xor
cmc
jne
cld
add
jno
or
and
jg
cld
inc
repnz
sub
or
mov
out
flds
bound
inc
test
xor
sub
fcoms
mov
in
in
les
icebp
jno
outsl
push
lods
testl
sbb
lock
sahf
es
mov
pop
dec
clc
mov
xor
jbe
jp
rol
mov
inc
sbb
mov
fistl
inc
lods
gs
sarb
repz
cmpsb
testl
rorb
mov
dec
lea
mov
add
push
push
pop
adc
xchg
dec
adc
setb
dec
clc
push
imul
pop
pop
xor
mov
int
pop
ret
dec
xchg
pop
pop
mov
mov
sub
arpl
loope
xchg
push
xor
inc
xchg
add
add
add
das
mov
out
aad
cmp
add
add
int
rclb
test
fimull
push
cwtl
adc
rcrb
pop
fldt
adc
imul
add
shlb
pop
insb
call
pusha
outsb
push
sbb
or
out
inc
mov
adc
ds
and
cmpsb
stos
imul
mov
movsb
lret
jg
pop
mov
sub
clc
mov
aam
jl
add
push
enter
popa
and
imul
push
mov
fdivrp
test
inc
mov
xor
pop
ffree
cmp
out
push
andl
cli
addl
testl
loope
adc
mov
fwait
or
in
imull
and
das
imul
mov
mov
ss
adc
lcall
outsl
enter
inc
sbb
add
hlt
cmpb
aad
mov
insl
add
add
hlt
gs
dec
adc
popa
and
add
mov
cltd
cli
fimuls
push
pop
sbb
jns
rcrl
test
sbbl
test
xor
lgs
ljmp
dec
pushf
fwait
lahf
cli
fisubl
das
insb
popa
dec
or
sub
std
out
xchg
cwtl
xchg
jns
dec
lock
mov
mov
mov
ds
inc
xlat
add
add
pop
jle
or
mov
mov
outsb
sbb
push
or
movsl
jg
mov
les
pop
mov
add
mov
sub
sbb
xchg
loopne
mov
cmpsb
stos
in
sbb
shll
loope
sub
jle
lret
adc
movsl
out
adc
xchg
outsl
push
push
jl
out
push
jmp
lret
ret
add
loope
test
in
fdivrs
insl
sti
cmpsl
pop
cmpb
adc
and
push
movsb
cld
pusha
dec
add
add
aas
gs
pop
repnz
dec
add
add
pop
sbb
or
orb
and
push
sub
fnsave
jns
arpl
shl
fdivrs
dec
dec
inc
jne
mov
lods
jnp
iret
lret
cli
xor
xchg
hlt
mov
incl
stc
push
ja
xchg
vminpd
inc
popa
inc
imul
mov
popa
out
je
dec
xchg
inc
ljmp
push
jno
test
sub
jne
in
mov
subb
and
mov
rclb
popf
mov
mov
jl
popa
daa
movzbl
pop
sub
aaa
cmp
xor
push
inc
icebp
inc
rorl
mov
xchg
jecxz
jecxz
jge
ret
ret
jb
lods
out
shr
sbbb
dec
fsubp
bound
mov
or
addb
or
mov
outsb
adc
cwtl
and
dec
sbb
jmp
mov
adc
cld
sub
repz
add
mov
out
fisttpll
lock
push
mov
add
js
enter
bound
gs
clc
cmp
add
lret
mov
cmp
in
test
mov
push
xor
hlt
fdivl
dec
add
mov
adc
cwtl
into
dec
jo
add
pop
push
data16
ja
rcr
in
mov
xchg
xchg
sub
mov
roll
add
pushl
repz
sub
push
inc
sub
add
xlat
and
ret
into
jg
icebp
mov
sbb
mov
leave
dec
jp
ret
cli
jne
test
add
xchg
pop
fwait
out
sahf
pop
inc
adcb
aam
repz
cli
scas
pushf
mov
sbb
aam
jle
mov
xor
aas
call
mov
mov
sub
sbbl
jne
pop
push
inc
je,pt
pop
jecxz
mov
add
sub
addr16
lods
imul
dec
cmp
mov
push
stc
dec
sbb
jns
aaa
pop
push
jg
add
fildll
mov
ljmp
add
add
jne
sub
icebp
push
push
fs
rolb
das
stos
mov
idivl
or
xor
dec
or
dec
push
lret
ljmp
outsl
xchg
sub
les
add
call
dec
aas
cmp
mov
cmp
add
pop
shll
cmc
mov
lahf
sub
scas
mov
or
pop
repnz
cmc
mov
outsb
insb
or
adc
adc
inc
lcall
pop
mov
xchg
push
push
mov
movsl
add
xchg
in
sahf
outsl
lahf
mov
ja
and
sbb
idivb
dec
jmp
cmp
js
sti
int
dec
mov
xchg
and
xchg
popf
out
ret
xchg
mov
xlat
lret
sbb
mov
xchg
dec
pop
fisubrs
jge
and
jmp
pop
in
mov
cli
mov
xlat
sbb
shr
cmp
dec
add
inc
lea
add
jmp
out
aas
jo
sahf
jb
push
xor
add
jo
inc
adc
cmp
lods
jae
rcl
cmp
dec
push
fs
mov
in
std
ficomps
icebp
movsl
cwtl
dec
loope
xchg
outsb
daa
mov
sbb
fs
mov
mov
inc
es
lds
xor
lods
ds
cmc
mov
mov
push
icebp
aad
ret
mov
ficompl
and
out
fnsave
xchg
nop
shrb
xor
dec
dec
mov
hlt
inc
popf
xchg
enter
mov
in
not
push
xchg
call
daa
stc
or
sahf
xchg
popf
ds
push
xlat
add
call
arpl
shl
inc
lds
iret
inc
jno
aad
jmp
xorl
cmc
jo
stos
andb
jp
xchg
gs
xlat
push
adc
mov
idivl
fldenv
or
repnz
mov
inc
jecxz
add
dec
dec
gs
inc
xchg
pop
lahf
ljmp
push
mov
sub
jmp
cmp
imul
out
mov
mov
pusha
xor
dec
add
add
xor
sbb
mov
cld
lods
push
mov
mov
sbb
scas
jns
jb
mov
cmp
rorb
std
insl
sbb
xchg
clc
aam
ret
jb
mov
test
sahf
cmp
xchg
sub
xchg
adc
fistl
xchg
test
jae
mov
outsb
push
sbb
jecxz
dec
pop
cs
sbb
jp
push
adc
fsubs
xchg
inc
stos
push
sbb
pop
lret
push
sub
push
add
jnp
aam
cs
fs
rolb
ffreep
or
stc
cmp
cmp
into
jae
inc
sbb
xlat
aad
outsb
testb
cli
cmp
sbb
les
lret
cmc
div
push
xchg
xor
in
inc
jo
pop
popf
pop
push
or
ja
jne
lock
ds
daa
push
fidivs
shr
xor
mov
mov
mov
mov
add
js
add
dec
stc
mov
ljmp
ds
add
add
ja
jae
mov
mov
cwtl
dec
and
sbb
enter
inc
cmp
fisttpl
mov
enter
and
xchg
cmp
push
arpl
cmp
test
xchg
les
and
mov
cld
call
pushf
js
adc
test
int
lret
ret
cli
movsb
nop
pop
push
cmpsb
outsl
lcall
fs
mov
xor
and
inc
cmpsl
pushf
mov
mov
fldt
fmul
clc
add
mov
int3
xor
dec
add
inc
cmp
sub
xor
mov
enter
jg
dec
mov
leave
jle
mov
loop
dec
movsb
into
xor
xchg
mov
jge
jge
push
push
push
int3
mov
xchg
mov
inc
jmp
pop
cmpsb
sub
unpckhps
pop
pop
pop
popf
sahf
mov
add
lock
arpl
xchg
cmp
sbb
add
add
jg
cld
lcall
mov
add
add
fstpt
mov
sarb
cwtl
ret
ret
cmp
mov
je
andl
gs
test
inc
divb
aad
pop
add
loop
cmp
rorl
leave
mov
ljmp
movsb
data16
insb
cmp
inc
jno
xchg
xchg
add
mov
outsl
or
adc
or
sub
cmp
iret
popa
mov
lret
push
sti
rclb
shrl
call
inc
mov
jo
loope
xchg
cmp
dec
dec
iret
int
and
stc
cli
outsl
cmpsb
adc
xchg
inc
clc
xor
sbb
cwtl
stos
and
mov
repnz
in
pop
dec
dec
das
sub
fisubl
push
sti
push
mov
stos
rolb
and
pop
sbb
pop
jg
stos
inc
cmp
push
add
movsl
xchg
cmpsb
cmp
adc
add
mov
xchg
mov
pop
vmovss
adc
dec
push
add
add
and
popf
pop
mov
popf
iret
dec
int3
mov
dec
mov
aas
adcl
sub
jl
mov
int3
imul
sbb
jbe
loopne
jg
xchg
pushf
std
xor
lods
mov
les
jne
adc
cmpsl
aam
push
repnz
push
or
int3
out
jbe
inc
repz
add
mov
imul
adc
lahf
mov
cmpsl
loop
jne
cmp
xor
jae
aaa
inc
and
mov
outsb
leave
aam
push
scas
insb
imul
jo
push
pop
in
mov
jnp
lea
ljmp
sbb
pop
push
int
lret
jge
sarb
ja
dec
inc
push
jnp
popa
dec
push
aaa
inc
bound
sbb
mov
jae
jle
pop
aaa
push
dec
inc
out
jmp
push
imul
cmp
test
add
or
mov
and
adc
dec
push
add
add
dec
sbb
popf
out
adc
dec
repnz
cmp
test
mov
jp
pop
sub
or
popa
in
mov
xorl
xlat
jle
dec
xor
dec
xchg
pop
call
jle
adc
mov
cmp
fwait
outsl
imul
adcl
adc
inc
xchg
sbb
into
sub
lock
mov
and
sub
ret
add
stos
mov
mov
mov
dec
mov
sbb
fs
lret
push
lods
in
out
lea
jb
mov
lahf
push
adc
stos
faddp
push
add
sub
movsb
jle
cmp
in
and
pop
sbbb
dec
add
adc
adc
ja
push
add
push
lret
xchg
repnz
dec
dec
insl
rcrb
aam
ja
xchg
out
xor
pop
push
dec
xchg
arpl
dec
add
add
sub
cmp
ret
or
push
ds
push
push
add
add
xor
pusha
cmp
jnp
in
cmpsb
ss
add
push
das
add
mov
aaa
cmpsl
out
mov
xlat
mov
out
es
mov
les
cmp
cwtl
nop
jns
mov
dec
fwait
jge
push
sti
aad
jl
rcrl
mov
iret
inc
rcrb
add
daa
arpl
adc
mov
add
push
insb
and
mov
in
sbb
sbb
mov
xor
pushf
pop
stos
movsl
in
adc
jg
mov
pushf
xchg
push
or
and
lahf
into
shll
out
shl
lahf
xor
fsubl
or
mov
cmp
xor
dec
lahf
sbb
popf
ret
cmp
dec
les
icebp
and
clc
hlt
dec
rcrl
xor
sub
scas
repnz
out
fidivl
rorb
push
inc
icebp
je
cmp
jo
add
add
push
shll
out
pop
pop
pushf
push
loopne
mov
add
and
ret
sub
jg
sbb
js
xor
xchg
sub
and
into
jnp
dec
sbb
movsl
or
mov
and
gs
jo
insl
out
pop
mov
int
stos
mov
out
and
addr16
call
mov
cmp
xchg
outsb
sub
rcrl
jbe
addr16
out
ret
leave
stc
repz
daa
xor
push
outsl
repz
jp
cmpl
add
imul
push
jl
jne
mov
jno
mov
mov
push
fildll
lcall
fldenv
jns
or
or
loopne
call
inc
pop
into
das
add
insb
das
imul
xchg
pop
fdiv
mov
popa
stc
or
movb
lahf
leave
xor
ret
out
jecxz
aaa
xchg
rorb
outsl
xchg
push
testb
add
stos
push
lcall
hlt
mov
adc
jnp
push
add
add
jnp
xorl
sarb
bndstx
mov
mov
pop
int3
daa
mov
mov
std
pop
cmc
mov
iret
adc
and
out
imul
fsubl
xor
xrelease
and
sub
in
lcall
frstor
incl
ss
xchg
data16
lods
rcl
out
pop
mov
xor
out
dec
pop
imul
fsubl
test
je
testl
repz
adc
pop
loopne,pn
shrl
mov
call
int3
push
jo
sub
xchg
lods
adc
dec
pop
adc
sub
stos
dec
jl
out
mov
ja
mov
pop
mov
cwtl
cld
jnp
xor
jne
pop
cmp
cmp
loope
fs
xlat
loop
add
push
fistpll
or
ja
xchg
aas
icebp
aas
xchg
cmp
adc
lods
and
movsb
add
add
jbe
idiv
imul
sbb
add
repnz
inc
ret
ljmp
cmc
and
pushf
pop
lahf
inc
pop
mov
mull
shll
loop
notb
nop
jne
fs
jns
mov
push
lret
out
pusha
mov
cwtl
cmp
cld
lahf
mov
cmp
stc
lret
adc
adc
dec
xor
sbb
xchg
mov
fsubl
in
push
cmpsb
inc
mov
dec
aas
sbb
ja
mov
mov
call
popf
arpl
sub
decb
arpl
mov
mov
stos
sbb
test
push
cmp
fadd
into
and
jae
push
or
jbe
ja
lcall
fiaddl
lcall
xor
ds
jecxz
add
pop
popf
inc
adc
lret
push
in
cwtl
sbb
js
xchg
test
hlt
in
push
lea
xlat
loop
pusha
sbb
sbb
add
add
fwait
cmp
stos
sarb
push
add
add
inc
insl
xchg
dec
sbb
inc
lods
mov
push
ds
sub
sbb
lock
mov
adc
dec
or
stc
sub
cmpl
out
cmp
mov
push
fwait
mov
and
cmpsb
test
push
popa
repz
jo
mov
push
sub
sub
pop
add
dec
test
cltd
push
sahf
jecxz
enter
xchg
stos
pop
or
and
shll
cli
sub
repz
inc
in
mov
sub
pop
push
subl
jbe
push
vrcpss
ss
pop
mov
push
jg
cmp
daa
push
test
dec
push
mov
mov
jp
push
insb
addb
and
test
jo
lea
mov
add
in
xor
xor
xchg
fidivrs
jbe
arpl
scas
repz
int3
add
fst
pop
pop
shll
xchg
xchg
fcoms
add
add
clc
mov
and
hlt
mov
push
add
add
insb
pop
inc
mov
mov
lea
bound
dec
movsb
outsl
mov
lcall
pop
sub
and
mov
into
pop
sub
stc
dec
add
in
loop
xchg
mov
ret
pcmpgtd
lcall
mov
push
jae
call
aam
js
push
lcall
adc
stc
adc
jae
adc
fisubs
out
call
push
pop
sub
lock
or
aaa
lret
dec
mov
loopne
bnd
inc
cmp
and
popa
fildl
lods
or
xchg
fcmovnbe
dec
xor
mul
mov
mov
pop
cmpsl
sbbl
fstl
insb
ss
popf
out
push
adc
cmp
add
inc
pop
out
fucomip
add
out
jnp
outsb
lcall
cmp
cmp
std
sbb
or
dec
imul
mov
repnz
shlb
lret
xor
xchg
pop
pop
mov
les
fs
cmpsl
add
add
shr
mov
loope
shll
add
add
or
and
loop
or
aaa
shlb
pop
cmc
sahf
mov
jb
mov
fucom
and
pusha
bound
inc
bound
stos
scas
mov
lret
xor
test
pop
xor
ret
pop
aas
out
popa
lret
inc
sbb
test
jg
loope
stc
sbb
mov
stc
push
adc
fldcw
mov
mov
mov
lea
loope
add
dec
mulb
aam
repz
push
add
ret
sbb
push
jl
mov
dec
mov
and
jl
roll
cmp
push
jge
fldt
or
pusha
fmuls
and
adc
jns
adc
repnz
rol
pop
xor
cmp
shll
gs
imul
dec
sbb
cwtl
test
jle
insb
mov
sub
xchg
push
aas
lret
xor
movb
add
mov
lds
aad
push
mov
add
sahf
mov
nop
ss
xchg
shlb
or
inc
in
push
into
inc
jns
cmpsb
inc
mov
jg
fcoms
pushl
sub
lock
bound
add
test
push
es
inc
xchg
test
outsl
push
sbb
and
cmpsl
push
es
insl
sbb
std
rsm
xor
stos
aad
outsb
arpl
mov
mov
clc
adc
push
pop
adc
shrb
jmp
jbe
loope
push
shll
push
andl
mov
adc
ljmp
aas
cmc
sub
int3
mov
pop
add
je
push
mov
fstp
push
and
mov
out
jecxz
les
mov
push
mov
xor
mov
loopne
dec
rolw
or
mov
clc
mov
sbb
mov
cmp
lahf
ret
lods
add
add
mov
pusha
scas
cmp
add
or
push
sbb
lods
add
enter
ljmp
sti
iret
out
xchg
xchg
sbb
xchg
cwtl
mov
fs
es
jmp
inc
xlat
fs
mov
or
push
push
cmpsb
cld
cmc
sti
cmp
ret
lahf
jg
in
aas
sbb
lret
les
popf
out
jae
dec
insb
adc
repz
stos
sbb
mov
add
js
aaa
mov
dec
ror
aad
mov
popa
mov
inc
stos
inc
scas
rcl
fsubr
jmp
sub
subb
stos
jb
adc
mov
cmp
sbb
adc
das
pushf
mov
aaa
push
xchg
lahf
dec
bswap
mov
mov
dec
cmp
imul
insl
rcrb
ds
loopne
pop
movsb
pop
inc
xchg
ret
jecxz
or
repz
add
sbb
test
addl
stc
cmpsb
out
jmp
sub
mov
dec
sub
add
fsubl
mov
ja
mov
repnz
and
pop
add
add
jae
dec
push
xor
sarl
pop
cmpsb
scas
jg
dec
popf
ja
pop
dec
sarb
lea
push
fisttpl
add
cmp
lock
and
xor
movsb
inc
mov
jnp
adc
and
jae
cs
and
and
jp
and
jp
adc
cmp
fsubrs
inc
mov
mov
addr16
clc
test
inc
mov
dec
add
jge
mov
push
mov
subl
nop
jb
cmp
mov
mov
or
sub
lahf
push
aaa
aam
mov
ret
add
push
ret
lods
les
and
mov
inc
jp
mov
movsl
jp
icebp
fists
mov
sbb
gs
mov
lret
jle
mov
push
mov
xor
mov
dec
mov
sbb
repnz
inc
adc
fwait
cmpsl
or
scas
add
add
xor
xlat
out
cld
adc
fwait
pop
test
add
mov
mov
mov
inc
add
test
mov
test
sbb
and
lcall
cmp
mov
adc
fs
je
fisubs
adc
cmp
lcall
loope
mov
lahf
jb
mov
es
int
lret
push
fldt
xchg
out
sbb
imul
push
cmp
cmp
jno
sub
in
pusha
inc
into
lds
insb
sbb
xchg
lea
aaa
pop
pop
sbb
ljmp
sub
or
xor
rclb
scas
rep
xlat
jns
orl
scas
mov
xor
pushf
mov
sub
into
mov
gs
inc
pop
mov
sbb
mov
out
xor
popl
je
adc
mov
mov
in
dec
inc
movsb
mov
add
add
pop
repz
ret
in
inc
inc
repnz
xchg
stc
dec
lcall
sub
addr16
jnp
pop
pusha
stos
dec
and
dec
stos
pushf
fstpl
push
dec
fwait
movsb
lods
loopne
ret
jnp
sub
push
stos
pusha
nop
add
test
cmp
mov
jmp
loop
mov
ljmp
in
insl
dec
sub
fisubl
pop
pop
and
rorl
mov
repz
imul
adc
lcall
nop
ja
cmp
cmp
inc
sub
inc
push
xchg
mov
scas
ffree
out
mov
push
jg
jl
jle
pop
mov
imul
push
and
add
lock
popf
mov
sbb
lret
lds
or
jmp
dec
test
or
mov
out
cwtl
popf
popf
cmpsl
and
sbb
push
add
add
push
into
push
push
inc
lahf
mov
mov
add
dec
sbb
fdivl
mov
dec
mov
sti
outsb
gs
inc
test
iret
std
les
pusha
mov
pop
fs
aaa
mov
push
out
ja
cmp
mov
test
clc
sbb
mov
imul
rorb
pop
mov
inc
dec
punpckldq
nop
lods
inc
js
push
test
arpl
sbb
mov
jg
addr16
stc
xchg
cmpsb
jb
lock
addr16
sbb
mov
adc
sub
in
cmp
aad
ret
pop
hlt
je
mov
jne
dec
cld
imul
mov
in
xor
sbb
test
sub
pop
push
cli
pop
cltd
stc
jl
pop
sub
jle
xor
mov
and
and
ljmp
xchg
mov
mov
pop
loope
popa
js
mov
and
test
daa
add
add
xchg
inc
shl
xlat
mov
jg
or
xchg
pop
add
add
aam
xor
roll
outsl
shrb
xchg
orb
out
test
cli
mov
cwtl
mov
icebp
mov
jno
mov
push
cmc
rclb
inc
adc
inc
fsts
or
cs
js
mov
test
stos
lret
dec
adc
push
stc
icebp
or
xor
rcr
scas
fidivrs
xor
xchg
cmp
add
mov
add
roll
int
or
cmp
sar
push
mov
pop
xor
or
pop
mov
cmpsl
outsb
adc
outsb
xor
push
addb
std
in
inc
sub
xor
mov
fstpt
fildll
pusha
cmc
xor
addr16
lock
cli
pop
cmpb
outsb
adc
push
jne
xchg
or
mov
add
icebp
addb
in
cmp
add
lahf
pop
cmpsl
jne
mov
int3
pusha
push
cwtl
pusha
add
add
cld
ljmp
outsl
insl
sti
ret
mov
es
mov
mov
mov
jecxz
mov
inc
dec
dec
xchg
adc
mov
pop
sub
add
or
sbb
or
in
xor
dec
xchg
in
ja
fsubs
push
gs
imulb
or
repnz
stos
or
and
gs
repnz
shlb
loope
mov
les
addb
mov
or
sbb
xlat
cmp
bound
test
jb
lahf
mov
rcrb
sub
push
cmp
lea
stos
pusha
call
aaa
pop
into
push
mov
xor
out
lods
sbb
int3
mov
hlt
test
popa
lret
in
ja
sub
push
mov
sarl
repnz
xchg
leave
adc
inc
insb
xchg
loop
mov
push
add
add
add
idiv
jg
sub
mov
popf
popa
add
add
mov
push
add
nop
adc
cwtl
outsb
dec
inc
xchg
das
push
push
sbb
cmpsl
inc
mov
mov
sbbl
pop
sub
jle
aad
pop
jp
inc
ds
pop
shll
add
das
je
pop
sarb
cmp
mov
cmp
pop
cs
inc
clc
arpl
mov
test
xorb
jnp
xchg
gs
fimuls
push
cmpsl
dec
stc
mov
inc
inc
cmpsb
or
pop
rcrl
mov
je
push
pop
mov
lret
mov
inc
mov
lods
jl
jno
lods
out
rclb
xor
mov
mov
mov
pop
or
mov
in
lock
adc
outsb
cli
test
in
movsl
call
repz
adc
inc
fisttpl
mov
gs
aad
mov
lret
xchg
inc
btl
push
mov
add
inc
pop
mov
fstps
sub
mov
add
add
jno
out
lods
or
add
test
ret
dec
ss
dec
mov
inc
fildl
xchg
jo
ficomps
add
sub
leave
shlb
arpl
cmp
or
add
sbb
repz
mov
stos
mov
sbbb
cmpsb
lcall
cmpsl
and
imul
subb
int3
je
adc
enter
or
pop
pop
iret
fisttps
mov
lcall
add
enter
adc
sub
iret
or
dec
pop
and
push
adc
clc
jne
pop
es
jb
and
in
mov
lods
sbb
out
adcb
xor
inc
push
mov
lods
es
xchg
jmp
fcmove
inc
out
cmp
es
cwtl
pop
lret
dec
xor
pop
je
push
iret
cld
neg
xchg
aas
leave
sti
pop
and
pop
mov
iret
adc
in
rolb
enter
icebp
ljmp
add
add
repnz
movsb
jle
arpl
inc
inc
cmpsl
arpl
add
in
mov
pop
inc
leave
sub
mov
les
dec
sub
jne
push
fwait
cli
adc
test
adc
inc
std
sbb
xor
push
add
mov
dec
repz
sub
ret
repz
dec
dec
pop
jp
je
pop
lods
push
xchg
xchg
mov
stos
inc
pop
hlt
out
mov
shrb
popa
push
shlb
jl
mov
jmp
movsl
mov
mov
ljmp
jne
mov
dec
mov
outsb
sub
aam
mov
xor
push
imul
xchg
mov
sahf
jle,pt
dec
inc
mov
mov
jae
clc
lods
faddl
scas
lret
xor
cs
jne
sub
andl
push
mov
add
int
pop
insb
pop
and
push
aaa
mov
cld
pop
jl
or
or
mov
add
stos
sub
stos
out
jmp
sub
jecxz
dec
subl
daa
jmp
jns
das
leave
sahf
inc
loope
sahf
out
pop
pop
sahf
inc
outsl
sub
repz
das
xchg
jbe
pop
in
xor
movsb
push
jge
jmp
insb
sbb
mov
jo
test
push
sbb
mov
outsb
in
cld
inc
rcll
cld
lret
pop
jle
jl
rcrl
add
cli
bound
test
fstl
add
xchg
cmp
nop
and
sarl
xor
cld
jl
xchg
xchg
xchg
dec
aam
cmpsb
std
and
add
add
mov
pop
cmp
pop
inc
pop
xorb
push
into
ret
sti
mov
shlb
and
mov
cmp
es
inc
add
pop
mov
xor
inc
inc
jo
push
and
out
test
push
xchg
fisttpl
in
popa
jge
outsl
outsb
push
sbb
xor
aad
lods
cmc
gs
sub
dec
imul
add
shll
fnstenv
and
iret
cmp
add
add
jne
into
sbb
out
jns
dec
jno
push
dec
test
or
or
cmpsl
xchg
popf
int3
xchg
enter
insl
adc
and
mov
inc
mov
push
ret
sbb
test
mov
push
xchg
mov
xor
movsb
sub
xchg
sti
addr16
dec
push
sub
xor
fnstenv
hlt
or
xor
dec
mov
ds
jecxz
push
mov
cmp
sbb
adc
inc
inc
cmp
lock
outsl
sub
jns
ret
mov
inc
add
pop
mov
sub
xorb
cmp
test
adc
int
movsl
aaa
dec
and
and
sub
ds
loop
out
inc
dec
adc
and
mov
outsb
test
jnp
mov
inc
lret
les
or
repnz
jmp
xchg
sarl
jge
xchg
popf
lret
test
call
cld
je
jbe
jns
sbb
sub
adc
mov
add
add
lock
movsb
or
rorb
insb
daa
adc
div
add
into
or
and
into
sti
dec
mov
out
or
xlat
mov
xchg
xor
and
pop
ret
jecxz
cmp
es
adc
clc
jne
jo
mov
jle
inc
mov
mov
jo
sbb
lock
jl
sti
adc
aam
mov
push
jmp
imul
mov
dec
loop
inc
fistps
jp
aad
adc
imul
cmpl
sahf
or
fcomps
push
mov
mov
aas
shll
mov
hlt
enter
aad
aam
rcrl
sub
repnz
fstpt
out
notl
pop
leave
stos
cmpsl
pusha
cltd
or
scas
mov
sbb
jae
pop
xchg
les
mov
int3
add
xchg
pop
mov
add
push
cltd
jmp
fildl
or
add
add
or
xchg
bound
ljmp
fnsave
pop
lret
jmp
add
xor
aaa
movsb
in
fisttpll
outsb
push
fstpt
sbb
xor
mov
push
aas
sbb
pop
push
inc
les
test
int
mov
dec
test
ja
and
adc
sbb
shlb
outsb
sbb
inc
jb
ljmp
ret
cli
lret
jo
inc
lcall
pushf
cmc
pop
mov
xlat
mov
js
stos
shlb
ds
pop
mov
mov
cmpsl
pop
je
jbe
scas
lock
cmp
in
or
cmp
inc
pop
push
jae
and
xor
out
rcrl
leave
aas
lret
sbb
pop
test
adcl
arpl
icebp
ds
mov
ja
incb
in
adc
call
mov
add
mov
mov
push
jg
dec
xchg
dec
dec
jge
fld
push
add
fdivrl
push
dec
sbb
xlat
cmp
test
das
inc
rorl
jae
sbb
nop
fcomps
pop
lds
icebp
mov
dec
adc
sbbl
adc
mov
mov
pop
push
lds
popa
sub
roll
jns
mov
lea
popa
fmull
les
and
or
push
negb
add
cmpsb
pop
mov
aas
sbb
pop
scas
call
loopne
lret
int3
clc
ret
fdivl
xor
sbb
loop
pop
jmp
cmpl
aam
aad
or
mov
adc
or
mov
or
cmp
in
aaa
ljmp
jmp
jns
jl
jle
sub
dec
mov
jecxz
aaa
push
xchg
mov
add
pop
pop
daa
pop
xor
jp
movsb
mov
test
loope
add
iret
mov
fucomip
push
insb
xor
mov
aad
lds
add
cli
mov
mov
js
adc
jge
sub
stc
dec
push
inc
lret
xchg
ljmp
mov
loopne
leave
in
jno
inc
gs
je
mov
dec
cld
mov
lods
ds
fldcw
movsl
jae
outsl
es
lret
add
in
mov
insb
push
mov
push
and
ret
shlb
les
push
movsl
or
or
or
test
pop
and
mov
fistpll
call
pop
lods
rcrl
jmp
lods
or
pop
out
scas
xor
add
std
mov
out
int3
sub
sbb
push
in
ljmp
enter
aam
push
jge
sub
sub
jbe
cli
es
inc
rcll
popa
arpl
ret
jb
mov
pop
hlt
jo
and
push
adcb
sti
mov
push
imul
dec
out
iret
jmp
aas
in
push
data16
lret
add
fwait
out
lea
adc
add
sbb
pop
fsubp
mov
aaa
jg
push
daa
cwtl
aad
xor
fldcw
cwtl
inc
dec
fwait
inc
push
popa
jb
and
cmp
bound
jl
cmpsl
add
or
xor
jo
dec
jg
enter
mov
js
enter
icebp
imul
dec
cmp
dec
and
adc
fistl
psubusb
out
out
cmp
push
popf
aaa
xchg
insl
xor
sbb
outsb
push
sub
jns
orl
out
fwait
inc
pushf
pop
dec
push
ja
in
mov
sahf
clc
insb
or
gs
sub
pop
pop
adc
andl
adc
pop
jl
pop
mov
test
in
ret
mov
pop
ds
jb
addr16
xchg
ffreep
je
fcoml
dec
fdivs
daa
andl
add
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
cmp
add
push
call
jg
jo
nop
out
cmp
sub
lds
fldln2
jp
mov
lock
inc
out
cmc
ucomiss
and
repnz
add
fistpl
loop
mov
push
ja
outsb
and
cmp
xchg
jns
push
mov
xor
xor
lds
pop
and
jp
inc
jecxz
sbb
roll
rclb
sub
cmpsl
ret
jg
xchg
or
jle
out
bound
xor
repz
syscall
xchg
ja
jo
jg
or
push
and
and
xchg
out
or
adc
mov
in
out
outsb
add
inc
clc
repnz
aam
mov
hlt
add
test
ljmp
add
cmc
dec
movsl
cmpsl
fs
cmp
in
and
push
ds
push
stc
outsl
cld
out
cltd
inc
and
ljmp
dec
pushf
jb
les
test
push
add
add
neg
std
sub
dec
out
hlt
mov
aam
add
add
sbb
mov
or
sti
dec
push
loopne
imulb
dec
mov
arpl
push
dec
int
fcompl
sub
and
lahf
shll
mov
loop
rcll
or
or
jmp
std
icebp
stos
xchg
sbb
lods
push
inc
xchg
fsubrs
adc
out
sbb
mov
fxch
inc
out
and
xchg
bound
mov
cmpb
iret
out
inc
sbb
sysret
imul
pop
out
stos
cmc
xchg
cltd
fwait
mov
or
mov
inc
cmpsl
std
arpl
aad
stos
test
xchg
dec
mov
daa
inc
sbb
jp
jae
and
lahf
mov
les
test
mov
xchg
push
mov
xchg
in
std
inc
les
movsl
xor
add
sbb
or
push
shl
xor
push
outsb
pop
ljmp
jo
dec
lods
push
cmc
push
mov
mov
add
add
cs
xor
cltd
icebp
shlb
push
fldcw
add
outsl
test
int3
pusha
out
popa
inc
jge
stos
fst
loope
fmul
mov
loope
aas
movsb
ret
cld
sbb
je
js
jbe
jp
rcll
sbb
mov
pop
mov
out
push
cli
dec
adc
mov
add
leave
outsl
and
mov
pop
aaa
movsb
push
ss
ficompl
adc
jne
into
xchg
in
mov
pop
add
jmp
xchg
jnp
mov
dec
mov
popa
sub
repnz
cld
stos
cld
nop
mov
test
pop
jnp
jmp
test
xor
insl
add
frstor
xchg
dec
stc
test
pop
xor
push
mov
push
call
repz
pop
popa
call
push
sbb
cmc
daa
mov
xlat
cmp
imul
insl
dec
lea
imul
es
shlb
mov
mov
roll
cmpsb
cmpsb
lods
mov
xchg
pop
outsb
jmp
hlt
popa
sub
pop
xor
add
add
ja
out
sbb
add
fisubrs
add
and
loope
mov
sbb
xor
movsb
mov
fwait
sub
pop
jg
pop
call
mov
lods
pop
push
fwait
cld
es
test
pop
and
sub
jmp
add
cmp
ds
adc
out
xchg
fisubrl
xor
sbb
outsl
pop
call
sub
sbb
jmp
xchg
sti
sub
or
pushf
shr
xlat
js
incb
inc
insl
movsl
mov
subb
sub
cmp
enter
sti
push
lock
fdivs
mov
fidivrs
cmpsl
scas
sbb
test
sbb
dec
adc
mov
dec
mov
lret
jne
scas
enter
push
imul
xchg
jnp
sub
popf
ret
and
adc
mov
mov
ljmp
mov
clc
ret
inc
pop
mov
add
daa
sub
ja
mov
lahf
gs
outsl
add
add
jo
arpl
pop
loop
sbb
fisubrs
mov
inc
lods
and
scas
and
sub
in
mov
icebp
xor
stc
lods
inc
cs
jmp
mov
in
mov
inc
dec
mov
enter
push
sahf
bound
or
or
mov
mov
scas
adc
ljmp
je
icebp
sahf
sub
cmc
pop
iret
lret
add
int
sbb
xor
in
inc
fnsave
mov
xor
xor
xor
cmpl
ret
push
rcrb
inc
pop
adc
cmp
popf
cmpsb
cmc
add
scas
mov
fsubrs
mov
inc
xchg
stc
add
stc
sub
cmpsb
faddp
add
fisttps
add
sub
ret
outsb
dec
inc
out
sarb
and
xchg
ror
mov
rcrb
push
pusha
repz
xor
in
fs
stos
add
add
cmp
jnp
outsl
cmpsb
loopne
cmp
call
add
add
repz
decl
mov
shl
stos
jl
dec
inc
push
push
jp
mov
mov
sbb
mov
gs
mov
mov
jecxz
xchg
and
das
push
push
repz
jmp
and
and
gs
mov
adc
push
mov
lock
bound
fwait
cmp
ljmp
dec
sub
out
pop
add
pop
xor
or
insb
push
cmc
add
or
xchg
rcrl
ret
loopne
xchg
fildll
push
out
ljmp
pop
pusha
jns
jg
imul
fistps
or
push
inc
lcall
fs
pop
stc
mov
sahf
gs
mov
pop
in
aaa
mov
jno
add
dec
icebp
jne
shlb
hlt
xchg
xorl
out
mov
add
xchg
push
mov
cli
xchg
jle
push
je
pop
cmp
in
jno
add
xor
dec
ss
add
dec
pop
call
mov
and
data16
push
sub
in
fxch
push
mov
into
mull
orb
sahf
sahf
jae
pop
push
push
pop
adc
adc
leave
mov
ds
xchg
sbb
mov
jnp
outsb
and
ds
addr16
int
and
loop
cmc
test
xor
out
adc
cmp
fistpll
aaa
cmp
xlat
fstp
bound
popf
lahf
icebp
jge
and
pop
cmp
cmp
xorl
popf
aad
fsubs
cmpsl
scas
jne
lahf
sub
leave
adcl
or
jno,pn
mov
int
movsb
and
sub
daa
adc
cmp
sbb
dec
adc
fdivs
sti
push
data16
inc
xchg
mov
dec
push
fs
add
inc
aaa
dec
fwait
jnp
aad
sbb
mov
bnd
add
scas
jg
sbb
mov
repz
or
rorb
aaa
icebp
int3
inc
idiv
nop
xchg
adc
dec
xchg
dec
mov
jecxz
push
mov
pop
xor
push
jle
jge
rorl
in
xor
jae
popf
sub
rcl
shl
jno
addb
lcall
push
sub
dec
rolb
orl
sbb
add
aad
rclb
fs
jle
mov
sbb
bound
sarl
daa
and
add
int3
adc
mov
mov
testl
or
cmc
orl
xchg
jae
mov
jae
xlat
inc
stc
loope
cmp
jecxz
gs
mov
cmp
dec
jmp
notl
loop
aam
adc
sbb
sub
outsl
inc
xchg
fstpt
ljmp
xor
add
add
std
mov
sub
jne
push
divl
add
mulb
loop
rcr
pop
and
push
std
insb
jge,pn
inc
jmp
dec
rcll
bound
mov
mov
jecxz
pop
jne
repz
mov
sub
sahf
jmp
sub
sbb
mov
or
mov
fucomi
lods
inc
imul
push
mov
sbb
shl
cmpl
out
in
or
sub
ljmp
sbb
pop
jb
jne
dec
sub
pop
out
loope
cmp
mov
testl
xlat
ds
lds
jae
push
into
xor
iret
adc
cld
cs
enter
mov
push
and
sahf
xor
aam
les
cltd
adc
imul
sahf
divb
ret
mov
lea
lret
lahf
xchg
nop
dec
lods
add
add
fstl
lret
xchg
cmpsb
cld
je
add
and
xor
jae
sub
xor
in
frndint
pusha
adc
mov
aam
adcl
imul
sub
xchg
lods
shlb
scas
stos
mov
xor
jno
xchg
xor
mov
call
js
rol
adc
mov
shl
add
bound
sub
aaa
push
jnp
mov
cld
mov
adc
loope
inc
in
jbe
hlt
xlat
stc
gs
cmp
mov
mov
lods
cmp
push
cmp
and
aam
jle
push
dec
lcall
jno
aam
push
add
xchg
fcmovne
mov
bound
pxor
nop
popf
insl
gs
mov
cld
call
jb
pop
js
sahf
adc
or
pcmpgtd
push
cmpsb
popf
jmp
hlt
les
mov
add
add
bound
sub
sbb
jbe
add
jno
jo
and
xchg
out
cmp
ret
jne
enter
mov
cmp
adc
aam
adc
fs
push
lock
aas
aas
out
sbb
add
hlt
roll
bound
test
out
mov
cltd
xor
jmp
jns
add
dec
rcrl
pop
loopne
mov
pushf
xchg
leave
xchg
std
cmp
fidivrs
mov
cmp
xchg
outsb
sbb
inc
loop
lds
js
pop
jno
cwtl
cmp
cmp
xor
sub
call
push
and
push
fcoml
xchg
mulb
sub
inc
scas
in
mov
cmp
adc
fsubr
es
mov
insb
aas
and
jge
or
cli
nop
sbb
loopne
mov
fistl
sub
lret
mov
stos
outsb
dec
daa
jp,pn
or
popa
rcr
jmp
add
divl
in
sub
push
ja
add
and
dec
pop
ret
push
jecxz
stos
xchg
pushf
mov
shlw
subb
loop
cltd
cmpsl
clc
lea
movsl
mov
xchg
daa
mov
dec
pop
pop
jmp
adc
xchg
test
cmc
or
xchg
mov
xchg
lret
add
mov
sti
mov
push
test
jle
mov
cmp
jl
mov
loopne
jge
xchg
fwait
stc
ficoml
jmp
add
adc
push
cmp
jo
aam
popf
fstl
in
push
mov
fimuls
pop
call
ss
inc
rolb
push
idivb
mov
fistpl
sbb
fs
addr16
mov
ja
mov
lock
jae
clc
loope
rorl
cmc
ss
mov
cltd
mov
or
or
leave
pop
andl
xor
cmp
int
cld
inc
push
cmc
add
add
fisubs
mov
mov
fsubrl
or
add
xor
add
ret
or
cld
popf
std
jg
dec
shrb
daa
fbstp
push
jp
cmp
lahf
in
sbb
and
outsb
cld
cmp
insl
imul
sbb
lea
ss
loop
dec
lret
into
pop
rorl
subb
es
lock
or
push
lds
mov
cmp
cmp
push
out
sahf
push
movsl
pop
mov
xchg
jle
inc
fldcw
lds
out
add
mov
decb
ljmp
rorb
popa
lret
push
mov
push
push
iret
cli
and
xor
fsts
pop
xor
mov
filds
lock
pop
aad
inc
xor
cmp
loop
es
adc
or
test
sbb
xchg
rcll
pop
icebp
dec
or
add
shlb
mov
int
lcall
add
add
pusha
xchg
daa
filds
jbe
or
and
nop
mov
mov
jge
movsb
test
enter
fsubs
mov
imul
int
stc
pop
fidivl
push
jne
movsb
ja
lcall
jb
pop
in
test
or
sbb
push
mov
xchg
std
mov
in
jmp
cmp
and
xchg
mov
push
and
cmpsl
lods
xchg
fwait
mov
mov
fildll
push
pop
mov
push
sqrtps
cltd
rorb
fidivs
sbb
dec
adc
jbe
rolb
dec
fs
pop
ja
pop
mov
pushf
pop
push
adc
lret
jge
pop
xor
mov
or
pusha
movsl
stos
jo
inc
arpl
repz
dec
adc
lcall
xchg
cmpsl
adc
pop
inc
xchg
cmp
jmp
negb
dec
add
add
testl
sub
jp
add
xlat
mov
cmc
inc
mov
adc
pop
dec
jbe
in
mov
sbb
roll
mov
ret
into
cmc
aaa
pop
and
or
sub
push
pop
outsl
xchg
pop
add
lretw
insl
loop
xchg
mov
imul
aas
jecxz
or
and
xchg
sub
imul
imul
out
push
sbb
mov
or
and
orl
clc
outsl
je
lcall
mov
imul
stos
cmc
sub
xchg
add
pop
push
dec
adc
push
sahf
test
cwtl
pop
ss
popa
xlat
push
mov
adc
dec
fsubl
popa
or
rcrb
loopne
pop
cld
sub
daa
ja
cltd
fiaddl
repz
lret
push
stos
imul
lock
pop
jb
lahf
out
xor
add
cs
scas
add
add
xor
jo
ja
std
stos
sbb
ljmp
add
add
fwait
pop
mov
add
xchg
imul
inc
mov
xchg
dec
pop
jp
add
sarl
insb
inc
mov
xchg
sar
das
lods
or
jl
mov
push
sbb
cmp
stc
sub
add
imul
sub
loopne
mov
leave
add
imul
nop
popa
fdiv
mov
xor
xchg
in
stc
mov
adc
jp
shl
mov
add
and
mov
stos
add
push
fldcw
lock
int3
add
adc
pop
test
push
rcrl
scas
mov
xchg
add
andb
orl
clc
rcll
outsl
mov
inc
xchg
adc
mov
pop
xchg
mov
mov
lods
xor
dec
enter
cmpl
add
outsl
jge
test
cs
movsb
testl
imul
add
add
cmpsb
push
sbb
and
pop
jl
add
jecxz
aam
mov
mull
mov
repnz
fimull
into
mov
add
push
push
cld
adc
ret
mov
cmc
inc
in
rolb
daa
mov
inc
push
push
hlt
xchg
inc
fwait
jno
rcrl
adc
in
fidivrs
add
pushf
shlb
jp
adc
lahf
insl
mov
dec
push
je
jne
pusha
scas
test
scas
inc
jmp
adc
mov
popa
sub
popa
pop
negb
or
std
xchg
gs
imul
int3
jecxz
jbe
fs
push
loopne
test
cmp
inc
cli
cld
das
dec
cmc
push
lcall
pushf
int3
call
dec
out
add
aam
ffree
imul
push
dec
jge
and
xor
push
es
xlat
inc
lahf
out
pop
imul
cmp
mov
out
sbb
mov
add
mov
push
xchg
lea
add
xor
cli
mov
sbb
add
add
dec
mov
mov
test
mov
aam
je
idivl
xlat
sub
ja
mov
dec
out
iret
mov
push
js
out
outsl
cld
mov
dec
add
test
pop
shrb
add
js
cmpb
test
ficomps
arpl
adc
stos
xor
orl
mov
pop
adcb
mov
stos
sub
mov
stc
sbb
aad
push
sbb
addr16
mov
and
shl
jge
dec
sub
inc
mov
sub
jl
insb
or
pop
mov
or
loop
scas
repz
mov
mul
movsb
pop
push
mov
lret
aaa
xchg
call
and
dec
call
out
lcall
xor
imul
pop
push
icebp
pop
jmp
rorl
in
mov
cmpsb
inc
dec
jecxz
jns
mov
je
popa
fiaddl
add
std
test
lcall
imull
sub
add
mov
cwtl
clc
int3
mov
sbb
pop
mov
cwtl
sbb
enter
inc
xorb
jne
add
adcb
divl
rolb
inc
or
aaa
hlt
dec
loope
divl
movsb
sti
and
or
jge
filds
fimuls
and
inc
flds
inc
or
adc
add
test
mov
ret
jg
xchg
sub
xchg
mov
xor
add
push
in
cwtl
push
push
mov
mov
outsb
shll
lahf
sub
outsb
cli
adc
mov
clc
xchg
mov
cmpb
add
jnp
cmpsl
jae
setnp
or
aas
xor
fcoms
jne
imulb
sub
adc
jmp
out
cmp
fldcw
jl
push
dec
mov
cmp
and
sub
mov
inc
push
jns
mov
add
add
xchg
xchg
jns
jmp
mov
dec
jg,pn
add
addr16
xor
or
push
ret
push
sub
int
test
sbb
outsl
mov
std
inc
sti
cld
jg
cld
sub
int3
adc
pop
jae
popf
pop
loope
loopne
adcb
jge
sbb
and
jb
push
std
out
sbb
daa
xor
sbb
adc
pop
dec
mov
inc
or
and
mov
int
gs
adc
jg
adc
popf
adc
dec
hlt
jno
fimull
push
xchg
repnz
sub
xor
aaa
and
clc
mov
inc
inc
lcall
inc
js
mov
push
lea
dec
push
and
xorb
mov
mov
lret
or
jne
cmp
cmpl
stos
xchg
fwait
push
pop
and
stc
cmc
jp
subl
inc
or
cmp
rcrb
add
lcall
out
sub
add
mov
add
or
insl
fimull
sbb
imul
and
push
dec
and
aad
popa
adc
negl
bt
jbe
in
sbb
aad
idiv
es
mov
sub
mov
imul
push
jne
jmp
sbb
dec
sti
movsb
pop
add
outsb
fwait
inc
roll
mov
xchg
mov
and
add
cmp
out
ljmp
dec
bound
xchg
nop
movsb
pop
loopne
cmpsl
cmp
inc
sub
add
in
aam
and
xchg
jne
sbb
clc
vmovddup
insl
repz
jne
cltd
ja
subl
aam
fsubr
xchg
sub
repz
ror
popf
jnp
cs
arpl
mov
sbb
sub
scas
or
sbb
sbb
jne
pop
into
fildll
inc
mov
sub
xchg
pop
mov
xchg
add
add
mov
idiv
jne
iret
test
outsl
push
cmp
add
mov
fsubrs
es
mov
sub
cmp
or
insl
test
mov
and
jnp
mov
push
sub
add
jne
jle
push
ja
insb
push
iret
push
mov
out
subl
add
and
aas
pop
adcb
cltd
repz
cli
dec
mov
xchg
stos
cmp
iret
mov
inc
push
les
fisttpll
test
insl
cmpsl
lock
add
mov
fimull
adcl
mov
add
add
decb
sub
les
pop
fistpll
or
je
outsb
lcall
movsb
xchg
pop
cmp
dec
xchg
jmp
in
idivl
pop
mov
xchg
and
jo
test
out
cmpsl
sub
scas
push
xchg
xchg
xchg
in
out
jecxz
jge
mov
push
jo
jo
push
jmp
add
add
pushl
sub
mov
addb
add
xorb
mov
mov
xchg
loop
insl
mov
mov
and
cmp
int3
add
sbb
frstor
mov
push
fildl
add
fdivrl
insl
inc
mov
pmulhuw
outsl
je
adc
sti
xor
pop
fidivrl
sbb
fnstsw
les
mov
jnp
fistpll
lahf
xchg
leave
mov
pusha
out
push
sbb
adc
adc
loope
fstpt
out
add
lods
ds
and
aad
stos
pop
add
mov
add
inc
dec
push
stc
sub
inc
push
aaa
leave
fs
pushf
push
aas
push
inc
push
inc
es
cld
mov
or
cli
mov
sbb
fdivrl
add
mov
fxtract
and
sub
dec
ljmp
mov
addr16
out
sub
lods
and
cli
jns
lea
in
movsl
pop
jge
jge
in
add
add
sti
iret
ss
push
jno
dec
sub
inc
addl
add
mov
dec
stos
push
je
cmp
push
popa
xor
test
xchg
and
push
fldl
xchg
push
mov
js
in
push
sbb
push
mov
adc
jle
outsb
and
insb
sub
loopne
xchg
add
ds
aam
pop
cmp
jno
cs
shlb
jb
mov
lods
inc
aas
std
loope
xchg
popf
pop
adc
hlt
pop
daa
and
mov
and
repz
loop
cmp
out
push
xchg
jp
outsb
dec
out
jl
xchg
push
dec
lret
sub
outsl
addr16
jl
dec
sub
aam
dec
insl
cs
add
sarb
imull
jns
mov
cmp
dec
addb
stos
lods
push
das
mov
clc
mov
ds
and
insb
scas
inc
aam
and
sub
pop
pop
push
push
xorl
cmp
in
inc
cmp
push
sub
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
and
dec
inc
test
add
jbe
and
xchg
nop
clc
dec
push
lock
pushl
cli
lret
jl
pop
inc
xchg
lock
cmp
sub
adc
ljmp
pop
cwtl
and
xchg
data16
sbb
in
mov
mov
or
inc
inc
gs
jns
dec
das
insl
mov
inc
jns
add
hlt
pop
cld
insl
daa
int
or
pusha
and
mov
enter
inc
and
push
filds
xchg
lret
xor
shl
rcrl
movsl
outsl
and
dec
pop
int
imul
sbb
sub
and
mov
mov
aaa
out
inc
ja
pushf
imul
cmp
aas
xor
sub
cmp
addr16
sbb
lahf
mov
sbbb
adc
rcr
pushf
xchg
xchg
cs
lods
mov
stos
popa
arpl
cld
in
jbe
sbb
sahf
gs
push
add
mov
mov
mov
add
ja
xchg
jb
nop
jmp
out
dec
lcall
mov
sbb
jns
mov
jb
or
adc
pop
das
dec
loope
stos
add
jecxz
xchg
mov
cmpsb
subl
iret
mov
jae
lods
or
push
add
sbb
dec
lds
out
popa
jb
mov
daa
xchg
cmpsb
arpl
sbb
push
testl
loopne
sti
jnp
jmp
bnd
test
and
lahf
enter
fs
ss
cli
arpl
sbb
das
cmpsl
adc
cltd
and
fistl
leave
je
int
nop
sbb
xor
jnp
pushf
shlb
daa
ror
and
fwait
clc
les
test
pop
dec
or
repz
lahf
mov
push
pop
jo
cmpxchg
fidivrl
sub
xchg
imul
iret
pop
movl
stos
clc
cli
in
push
std
mov
scas
xchg
xor
in
sub
add
add
pop
test
ljmp
lock
xchg
push
cli
inc
mov
xchg
add
leave
fmul
ficoms
add
out
push
enter
lods
pop
out
sbb
xchg
mov
sbb
and
cli
dec
sbb
or
lret
adc
loope
xchg
sbbb
into
push
lahf
xchg
xchg
ds
mov
test
cs
mov
dec
pop
fmuls
jnp
mov
je
sub
sub
inc
adc
cmp
and
out
adc
sahf
dec
mov
mov
mov
xchg
and
jns
les
hlt
xor
sbb
cwtl
cli
lcall
dec
fwait
xchg
icebp
cmp
sbb
movsb
dec
dec
adc
cmp
fwait
xchg
loopne
scas
ss
dec
add
ror
les
std
mov
push
imul
icebp
imull
mov
aaa
xor
fstps
dec
xchg
adc
push
add
cmp
push
inc
cmp
cmpsb
shrl
pop
jg
inc
dec
cmp
add
add
arpl
jnp
sbb
push
xor
inc
xchg
hlt
push
xchg
add
call
repz
jge
xchg
subb
repz
stc
push
scas
loop
adc
fyl2x
and
iret
leave
repnz
movsb
imul
push
and
cmp
lahf
push
push
sub
std
addr16
push
inc
rorl
cmc
cwtl
mov
or
call
shr
jge
sbb
pop
adc
outsl
out
frstor
data16
cltd
jge
xor
pop
sbbb
cwtl
xor
notb
xchg
in
es
pop
or
mov
js
dec
and
cmp
pop
mov
add
jge
sbb
sub
pop
sbbb
and
jge
dec
shll
cmpsb
insb
add
and
cmpsl
test
mov
stc
imul
xchg
test
fisubrl
and
fdivrl
mov
adc
insl
mov
dec
imul
daa
jg
jl,pt
adc
push
aas
or
mov
mov
inc
out
pop
mov
add
pop
adc
out
fidivrs
jmp
jmp
bound
inc
shrb
pushf
xor
adc
add
rorl
pusha
lret
add
push
ljmp
sbb
mov
mov
or
sub
outsb
push
je
in
dec
mov
pop
out
mov
inc
fs
push
push
mov
adc
adc
pop
lret
cmp
add
xor
cmp
imul
jno
dec
mov
inc
mov
xchg
loope
mov
cs
sahf
mov
cwtl
jbe
cwtl
mov
leave
lahf
jns
sbb
sub
pop
and
cmp
scas
cmp
and
mov
or
std
nop
mov
jl
mov
clc
xchg
mov
int3
test
jnp
data16
adc
pop
cmpsb
mov
pop
push
adc
sbb
adc
cld
sub
jae
push
add
add
push
outsb
fisubs
test
or
mov
add
add
inc
inc
mov
mov
inc
mov
pop
jecxz
dec
pop
inc
or
outsb
sbb
push
or
adc
push
push
xchg
add
pop
pop
jp
sub
pop
jg
jo
mov
dec
ljmp
xchg
jecxz
xchg
or
cmp
push
xchg
mov
push
and
addr16
imul
dec
mov
jb
aaa
mov
movsb
fadd
mov
cs
or
jnp
push
xchg
aam
ret
cmpb
cmp
loopne
out
mov
dec
lahf
outsl
jnp
push
sub
call
popf
in
or
mov
xchg
sub
push
pop
arpl
mov
aam
gs
mov
cwtl
jmp
call
mov
cmp
sub
jp
add
and
scas
inc
mov
cmpb
in
mov
lea
pop
push
push
dec
pop
fwait
pushf
mov
jp
sbb
js
add
add
add
mov
jns
dec
mov
add
imul
nop
scas
jae
in
jns
and
jecxz
push
mov
sbb
cwtl
mov
je
xchg
rorb
pop
add
lahf
cmp
xchg
stos
lods
add
cmpsb
test
push
lock
ret
ds
fldl
das
push
jp
int3
mov
lds
inc
pop
imull
jbe
es
add
in
sbb
in
mov
push
and
notb
ret
aas
popa
mov
cmp
push
cli
mov
mov
cld
loope
push
jecxz
pop
push
jo
or
add
shll
shrb
int3
fldt
daa
dec
xlat
dec
mov
into
sbb
stos
inc
ret
sub
je
jno
add
imul
xor
xchg
repnz
adc
shlb
mov
cmp
mov
mov
add
std
mov
add
add
int
fstp
iret
push
cmpsb
fadd
dec
stos
push
ds
add
add
rcl
imulb
adc
jecxz
clc
jno,pn
inc
xchg
xchg
mov
fsubrs
int3
addb
sarl
pop
shll
out
xlat
aad
and
mov
lea
aaa
add
mov
cmpsl
push
push
mov
in
pushf
clc
mov
scas
sbb
sub
mov
mov
ss
dec
notb
mov
cwtl
cmp
mov
cmp
dec
stc
jb
or
aaa
push
fdivl
jae
mov
push
pop
or
push
jns
test
mov
mov
push
jp
mov
mov
push
popa
gs
nop
xorl
les
hlt
mov
add
loop
ret
mov
popf
movsl
shrl
std
mov
xchg
fiadds
add
mul
or
and
mov
mov
pop
or
in
cmp
leave
ja
sbb
gs
and
add
ficoms
lahf
and
scas
std
out
ljmp
outsl
mov
add
scas
je
pop
and
fldenv
mov
push
jle
aam
mov
jns
adc
cmp
lods
cwtl
adc
sbb
test
in
call
push
pop
cmp
jnp
dec
jae
lret
mov
mull
popf
lods
int3
call
and
xor
pop
dec
int
xchg
or
lods
ss
mov
movsb
xchg
leave
fdivr
and
lret
mov
xchg
arpl
jno
cmc
mov
cltd
and
push
mov
and
nop
xchg
pop
push
mov
pop
das
or
jg
jnp
mov
repnz
out
loope
movsl
insl
movsl
testb
adc
lahf
nop
test
adc
or
setbe
mov
mov
xchg
jbe
hlt
bound
dec
test
add
xchg
orl
adc
mov
xchg
int
and
add
mov
lods
les
jnp
mov
icebp
inc
and
add
xor
addb
fisubrl
fstl
and
or
jnp
imul
shll
dec
es
out
push
imul
mov
pop
lcall
mov
and
and
sbb
pusha
repnz
scas
inc
lods
and
int3
mov
sbb
push
jge
int
cmp
aam
jno
dec
cmc
loop
sbb
sahf
out
and
pop
cmpsl
int
roll
repz
outsl
insb
sti
fwait
xchg
orl
mov
mov
mov
mov
mov
inc
sahf
lret
jge
hlt
mov
rclb
and
adc
rcl
std
and
mov
mov
in
imul
jecxz
cmpsl
adc
je
imul
jl
push
stos
dec
mov
cmp
pop
out
lock
dec
aas
movsl
repnz
add
les
fcomps
add
mov
add
mov
push
ljmp
fwait
hlt
mov
sarb
outsb
sbb
shrd
push
xor
and
sbb
dec
shl
cmc
xchg
push
out
in
fcmovnb
ja
dec
mov
xchg
dec
divb
xor
push
and
sbb
mov
pop
and
mov
mov
push
lods
jmp
addr16
or
mov
out
sbb
aad
add
fucom
test
and
aad
movsl
fstpl
mov
scas
sub
enter
adc
mov
sub
fs
outsb
push
pop
and
cmp
sub
aad
js
add
xchg
push
cmp
mov
add
or
pop
rol
push
test
adc
js
mov
mov
or
push
test
xchg
dec
xor
sbb
and
add
add
ljmp
dec
mov
cltd
icebp
jle
add
add
adc
mov
std
sbb
or
jp
sub
mov
inc
mov
jge
inc
mov
iret
insl
push
enter
enter
mov
rorb
je
and
inc
les
mov
je
test
sti
adc
adc
inc
stc
repz
xor
or
dec
jmp
sbb
call
cmp
mov
jle
jnp
test
lea
pop
sbb
repz
sub
pop
std
loope
jp
mov
ja
lret
out
cmc
fcmovu
lds
test
mov
mov
aam
ds
xor
nop
push
bound
mov
jo
or
outsl
ret
shrl
pop
fadds
movsb
pushf
mov
enter
push
pop
mov
jno
adc
les
sbb
popa
int3
rcr
sbb
cmpsb
mov
js
sub
add
add
aaa
shlb
cmc
div
testl
addb
add
out
in
mov
push
sbb
lar
mov
mov
xor
or
scas
mov
call
call
cmp
xchg
cmp
push
nop
inc
loopne
fidivs
xchg
push
movsl
fistpl
ret
mov
mov
bound
inc
mov
jle
mov
int3
call
popf
mov
nop
js
mov
pop
es
stos
pop
sbb
or
cmpb
mov
cli
add
jne
es
xor
xlat
mov
sub
push
ds
and
es
xchg
fldenv
push
test
sbb
orl
push
xchg
mov
stos
fdivs
popa
inc
jle
test
test
push
mov
outsb
movsb
call
cmpsb
sub
lods
sbb
shll
mov
fistpll
in
push
scas
arpl
enter
gs
add
pop
push
nop
push
sahf
rcr
pop
adcb
insb
fldt
add
mov
leave
lock
cltd
push
flds
test
dec
mov
cmp
jmp
mov
ja
sbb
cmp
sub
nop
inc
jmp
cwtl
dec
add
jmp
push
cmp
mov
enter
push
mov
xor
int
dec
aaa
fs
or
lods
testb
cwtl
test
or
fisubrs
lods
xchg
aas
xchg
inc
sbb
stc
int3
je
sti
mov
cmpsl
jl
sbb
mov
sbb
and
je
pushf
cs
filds
cmp
loop
push
and
mov
push
adc
jb
mov
push
dec
xchg
pushf
xchg
xchg
and
sub
enter
add
testb
stos
out
push
in
sbb
adc
imul
push
jbe
jl
lods
or
push
jb
sub
pop
incl
cmp
push
add
add
arpl
cmpsb
jcxz
fimull
lea
add
aas
add
mov
call
divl
add
sub
dec
aas
mov
mov
hlt
push
data16
pop
inc
shl
cmpsb
shll
lock
dec
xchg
jbe
inc
repnz
mov
jae
add
rep
js
loopne
push
shlb
sti
sub
cmp
scas
outsl
sbb
mov
inc
xor
dec
shrb
or
rcll
das
sub
jns
inc
jnp
sbb
jns
in
call
jmp
cmp
std
repnz
or
adc
imull
das
outsl
mov
pop
add
add
fadds
sbb
push
aad
mov
mov
aam
test
or
add
daa
jnp
pop
ret
gs
mov
inc
test
lods
pusha
adc
cmc
mov
lret
enter
adc
mov
inc
xchg
cmp
sbb
xor
pop
dec
faddl
dec
push
add
add
clc
jnp
jg
in
cli
enter
clc
push
rol
xchg
xchg
add
add
cmp
outsl
mov
sti
hlt
mov
sti
dec
jae
mov
adc
flds
cmp
xchg
pop
cs
dec
cwtl
mov
jne
lods
xchg
loop
xchg
out
lds
xchg
dec
sti
xor
xchg
inc
push
inc
lret
xchg
and
pop
and
ss
int
inc
dec
cmc
mov
aas
push
inc
icebp
inc
cs
fcomi
pop
inc
xor
out
inc
fisttpl
cld
stc
xchg
inc
mov
lods
pop
clc
add
jmp
jo
xlat
jnp
push
sbb
fimull
outsl
xor
adc
rorb
js
push
inc
inc
push
lock
into
xlat
xor
and
scas
mov
cmp
push
adc
pop
jl
pop
inc
mov
outsl
mov
pop
dec
loope
mov
es
repz
in
mov
sub
add
leave
popf
add
xchg
push
repnz
cltd
add
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
inc
mov
sbb
mov
mov
jno
add
fcmovnb
mov
cli
cmpsb
popf
cmp
push
and
sub
outsl
or
push
add
push
jg
dec
push
in
xchg
xchg
divb
fisubl
leave
mov
push
shlb
sarb
add
out
jne
sbb
pop
adc
push
ret
mov
inc
sahf
shl
data16
mov
push
push
or
push
inc
inc
lahf
xchg
xchg
jno
cmpsl
ficompl
popa
add
xorl
aas
in
adc
or
stos
push
scas
in
test
rolb
mov
call
sarb
xchg
push
xor
add
xchg
xor
stos
inc
in
aad
dec
jb
out
lods
out
jl
cmp
cld
inc
sbb
dec
je
push
je
sbb
lea
lds
add
jl
sar
std
jle
pop
popf
scas
imulb
sbb
xchg
add
add
leave
loope
push
js
data16
push
mov
popf
int
sahf
dec
or
scas
mov
daa
xchg
mov
das
and
and
popa
mov
inc
shlb
xchg
mov
dec
outsl
dec
adcl
inc
or
jmp
nop
mov
inc
adc
lret
xor
xchg
andl
inc
sti
pop
push
or
pop
shlb
mov
push
lods
int3
pop
adc
loop
into
or
je
cmpsb
mov
and
aad
js
push
out
adcl
cltd
add
dec
repz
add
jl
sub
jmp
sbbl
shrb
stc
dec
or
fwait
aaa
addr16
pusha
nop
ror
sub
in
inc
leave
xchg
push
cmpsb
dec
pop
pextrw
jg
jnp
fmull
pop
std
lea
jge
mov
sbb
push
cmp
ret
jmp
js
mov
add
add
cwtl
or
stos
xchg
cmp
in
fcoms
add
add
push
dec
xor
popf
jle
aaa
shrl
or
push
and
mov
jle
clc
stos
adc
cmc
lds
push
mov
sahf
adc
cmpsb
aad
jno
xchg
add
loop
stos
or
jg
cld
loop
or
scas
iret
in
inc
pusha
aam
dec
pop
jae
mov
adc
inc
jne
je
mov
push
les
fbstp
flds
mov
test
adc
add
and
jmp
les
fnstenv
jno
push
arpl
data16
adc
sbb
jb
loopne
push
hlt
xlat
cld
and
and
lret
enter
push
movl
aad
ljmp
aad
jne
push
push
jle
icebp
lret
sbb
test
push
js
mov
or
pop
loopne
dec
xor
add
jb
in
jb
sbb
add
add
outsl
sti
mov
mov
push
jg
enter
add
inc
pushf
or
mov
or
sbb
adc
rorl
ds
and
add
mov
add
scas
and
and
push
dec
mov
dec
sar
icebp
es
lahf
jno
mov
dec
pop
adc
test
mov
and
pop
or
mov
mov
xchg
lods
aas
mov
jge
push
push
icebp
in
pop
rorb
jle
jle
inc
mov
push
add
cmp
fsubr
sbb
and
lahf
push
or
mov
dec
rorb
aad
push
bound
dec
fmull
mov
inc
pop
mov
movsl
in
in
daa
lock
sbb
or
scas
faddl
repnz
push
mov
ss
nop
imull
test
mov
loop
mov
ljmp
adc
into
fists
loope
xchg
test
or
add
push
and
xlat
aas
dec
sbb
or
stos
cwtl
add
add
mov
mov
pop
lock
repnz
ja
in
sahf
fldcw
or
stos
int
subl
mov
lcall
xchg
add
mov
bound
jno
xchg
loope
or
loop
fst
xor
sbb
sub
loope
push
and
cmp
mov
dec
pop
dec
enter
iret
xor
adc
fdivr
cmp
dec
stos
mov
fldt
sub
fsubr
fs
cmp
xchg
lcall
inc
outsl
cmp
mov
inc
xor
mov
movsb
jmp
das
inc
xchg
test
dec
dec
std
mov
in
fimull
and
lea
cmp
sbb
pop
fistl
sub
xchg
stos
out
ret
xchg
gs
push
add
xor
dec
dec
in
into
and
push
sbb
pusha
pusha
jnp
jae
fisubl
sbb
push
xchg
add
add
mov
mov
jmp
test
mov
lock
add
add
xchg
outsl
inc
or
sbb
clc
dec
cli
xorl
pop
jmp
sbbb
mov
lea
inc
loop
out
cmp
adc
push
aas
mov
imul
dec
fwait
sub
divb
xor
repnz
out
add
in
jnp
pop
lret
xchg
popa
xor
shlb
aas
pop
sbb
fldt
cmp
shl
stc
xor
add
fbld
std
mov
xor
test
imul
jge
jbe
sub
lahf
or
and
cmc
popa
outsb
int3
jecxz
jmp
add
outsl
subl
loopne
pop
aam
adc
xchg
mov
repz
call
shrl
jmp
lds
dec
mov
xchg
fwait
dec
and
fstpl
repz
xor
push
jl
xor
imul
add
adc
sbbl
popl
loopne
mov
add
add
adc
popa
popf
das
vmptrst
mov
adc
ja
out
cmp
adc
cmp
or
ja
mov
pop
imul
rol
cli
in
pop
mov
addr16
cmc
pop
jnp
push
mov
sahf
movb
dec
jns
mov
call
xchg
mov
leave
data16
cmp
leave
mov
addr16
lds
mov
in
dec
repnz
aad
ja
addr16
jne
sub
subb
xlat
test
lea
mov
shll
mov
aad
adc
fcoms
and
adc
cmp
xchg
test
mov
cmp
adc
scas
dec
iret
jle
stos
jnp
dec
ds
pusha
imul
add
out
mov
mov
adc
cmp
mov
sub
inc
in
sbb
xor
hlt
cmp
mov
ds
add
add
imul
movsb
and
fadds
outsl
mov
add
add
scas
add
lret
mov
xor
xchg
push
jl
nop
inc
push
pop
daa
mov
scas
js
jp
sarb
inc
mov
pushf
mov
xlat
xor
lods
mov
dec
xor
xorb
sub
cmpsb
popa
pop
rcrb
mov
dec
jg
ror
mov
cmpsl
adc
arpl
adc
xor
and
cltd
push
dec
daa
jo
jmp
and
ret
arpl
jmp
inc
movsb
test
dec
add
pop
aad
sub
fwait
xchg
je
inc
xchg
repnz
fcmovne
add
es
daa
ss
jae
imul
cs
lcall
xchg
js
xor
pop
sub
loop
and
in
fdivrs
repz
icebp
mov
ss
xchg
popa
stos
mov
ret
fistps
lea
mov
and
sbb
pop
ja
push
lods
scas
in
test
clc
sbb
add
add
mov
sub
lahf
mov
dec
lahf
je
pushf
add
add
ja
je
or
fisttpl
or
and
xchg
adc
pop
sub
cmp
loope
inc
inc
sbb
mov
mov
push
jns
pushf
inc
insl
ja
ss
and
sub
and
sub
mov
sbb
shl
fnsave
aaa
and
adc
scas
adc
mov
xchg
xor
and
in
mov
mov
sub
mov
stc
sbb
pop
mov
sbb
ja
mov
dec
dec
mov
add
outsl
jo
mov
mov
cwtl
insl
bnd
fucomp
fwait
stos
mov
push
enter
stc
es
add
sahf
mov
aaa
dec
test
inc
or
cmp
call
ljmp
mulb
push
mov
cmc
rcrb
xchg
jg
xorb
roll
add
cltd
sub
out
inc
sub
or
and
add
add
and
ja
mov
test
jne
roll
das
cmpsb
leavew
or
sbb
fs
div
jns
repnz
jns
or
mov
cmpsb
movsb
loopne
push
inc
add
dec
lcall
cmp
xchg
and
pop
mov
pushf
push
lahf
in
xor
mov
addl
push
sbb
lea
fisttps
jecxz
lods
push
js
xchg
in
ss
cmpsl
jbe
sbb
push
cltd
mov
jno
shrb
idiv
test
jg
adc
fildll
add
inc
scas
andl
imul
fwait
xchg
not
and
cwtl
fisubl
cmp
loop
push
lret
cmpsb
lcall
and
mov
dec
sahf
mov
jne
mov
lret
pop
data16
pop
jecxz
jno
aad
dec
pop
fdivl
enter
mov
push
jmp
cmp
insl
mov
js
dec
popa
and
fbstp
adc
fsubrl
test
add
pusha
test
mov
cld
mov
leave
sahf
add
add
jb
adc
clc
int
insb
and
or
xor
aam
popa
dec
adc
outsl
imul
cmp
enter
adc
rcll
outsb
dec
push
loop
mov
adc
pop
or
xchg
xchg
pop
jmp
sbb
hlt
rcll
mov
mov
sbb
lock
into
andb
jecxz
mov
rcrl
lods
pop
mov
mov
sbb
pushf
mov
fistpl
lods
push
addl
hlt
outsb
call
sub
jae
xchg
push
push
cld
push
in
mov
jb
jns
es
pop
or
bound
sbb
adc
in
fwait
daa
mov
mov
xor
adc
sbb
mov
ret
nop
fmuls
dec
and
flds
out
jo
cmp
jmp
add
or
lcall
mov
add
add
mov
pop
pop
pop
filds
iret
pop
dec
cmp
xchg
push
and
cmc
pop
cmpsb
xorb
adc
pop
es
cmpsl
outsl
pushf
jg
mov
push
gs
mov
sti
push
movsl
dec
xchg
xchg
xchg
mov
mov
pop
cli
add
mov
xchg
mov
mov
mov
push
push
jl
mov
scas
out
mov
jbe
dec
fiaddl
and
hlt
fsubp
lret
sub
nop
dec
cmp
mov
pcmpeqd
in
dec
xchg
and
ret
or
ds
shll
add
lcall
stc
int
stos
fcomip
std
jbe
std
addr16
mov
cld
lcall
jl
gs
mov
shll
mov
fistpl
dec
into
ds
lds
mov
out
xchg
mov
and
add
rcll
mov
add
mov
inc
inc
add
mov
add
pop
lock
in
out
jae
sbb
test
testl
xor
fmull
jbe
inc
stos
pop
leave
pushl
sub
lods
pop
ja
fnstsw
mov
cltd
cmp
mov
call
mov
mov
pop
mov
sub
push
pop
out
sbb
cmc
or
scas
jno
cmc
mov
clc
insb
imul
in
or
test
xchg
repz
xlat
shld
ss
sub
cmp
stos
shrl
cmpl
adc
inc
js
ret
jmp
adc
pushf
lods
mov
cmpsl
push
sub
sbb
call
adc
inc
or
in
enter
je
pop
int
xchg
sbb
sub
pop
sahf
js
fistps
rorl
xchg
sbb
sti
in
pop
add
jmp
inc
fwait
pusha
jns
addl
adc
or
add
add
std
inc
mov
test
add
cmp
pop
mov
repz
loope
add
lods
or
jecxz
jae
scas
mov
ljmp
jne
test
out
lret
push
sbb
or
clc
sbb
scas
push
inc
jb
shl
add
cmpsl
cwtl
xchg
inc
xchg
sbb
push
mov
or
mov
arpl
xor
movsb
add
add
fcoms
orb
inc
xchg
mov
jp
cltd
mov
pop
pop
jne
es
cltd
in
cmpsl
mov
push
cmc
or
inc
add
and
or
jg
sub
enter
sti
mov
push
mov
xchg
push
mov
bound
mov
notb
cmpsb
adc
idivb
loop
mov
dec
mov
dec
ret
cltd
mov
dec
lock
add
inc
fdivl
push
dec
mov
frstor
add
jmp
test
les
test
imul
test
fisubrl
xor
pop
push
insb
in
ljmp
pop
or
cmp
repz
adc
cltd
sbb
add
mov
jl
test
sarb
cmp
insl
add
mov
sub
rcl
mov
cld
out
es
xchg
xchg
inc
lcall
and
in
and
mov
out
xor
sbb
jbe
jo
stc
scas
and
jb
mov
inc
xor
cwtl
jbe
xchg
cld
das
cltd
into
daa
shr
ror
frstor
jns
call
in
aaa
mov
cmp
fisubrl
bound
ret
lcall
push
add
rcrb
shl
stc
ss
push
dec
mov
enter
jno
mov
cli
out
mov
mov
pop
pop
push
pusha
pop
cmp
lea
data16
aas
ret
popl
add
adc
mov
sbb
mov
sbb
mov
add
sbb
stos
lahf
data16
mov
rorb
in
or
setl
pop
mov
aaa
jns
imul
pop
loop
inc
enter
out
pop
fbld
in
aas
in
gs
mov
hlt
outsb
cli
inc
cmp
and
push
mov
jmp
movsl
fwait
addr16
in
or
mov
shrl
ljmp
push
jp
push
sbb
nop
adc
in
pop
mov
inc
cltd
je
cmp
data16
and
mov
sti
cmpl
xor
jnp
mov
addr16
cmp
fwait
mov
imul
cwtl
add
jg
jecxz
or
add
dec
pop
popf
js
xlat
pop
lahf
fisubs
out
sbb
shll
in
sbb
cmpsl
stos
jecxz
arpl
in
xor
fisttpl
inc
mov
and
sub
shll
fisttps
sub
push
test
add
pop
test
stos
hlt
jmp
cmp
jbe
into
cmp
add
add
push
jae
lods
pop
sub
in
js
mov
addr16
shlb
sarb
enter
data16
cmp
leave
ja
cld
sti
xlat
ret
addb
pop
adc
int3
or
dec
xor
mov
add
cmp
cmp
pusha
shlb
in
rcll
leave
cltd
dec
out
jge
iret
leave
cmc
pop
push
or
xchg
outsl
fistps
inc
std
shlb
cmp
sarb
sbb
push
push
mov
sbb
pushf
push
call
enter
adc
outsl
popa
mov
sahf
sub
int
ljmp
mov
cltd
fsubl
push
je
jns
xlat
sahf
lahf
inc
hlt
in
fsubrl
repnz
sub
nop
leave
sar
cmp
in
or
mov
or
sbb
push
push
push
inc
ss
mov
and
icebp
cmp
add
add
out
xlat
out
jg
in
xor
fnstenv
movsl
add
add
adc
adc
int
add
nop
and
or
push
push
mov
mov
test
mov
test
sbb
adc
pop
mov
adc
ret
dec
inc
inc
stos
pop
popa
fs
mov
push
int3
call
jge
push
inc
mov
and
imul
lods
mov
mov
sbb
fdivs
dec
mov
leave
dec
outsl
icebp
test
or
mov
xor
lea
jmp
dec
mov
mov
push
addr16
call
jns
jl
rorl
mov
xchg
movsl
push
push
xchg
sti
xchg
repz
je
repnz
jo
inc
aam
ret
rorb
jne
fmul
mov
test
and
sub
rcll
ds
inc
inc
sub
les
ds
or
jns
push
scas
in
add
and
lahf
pop
push
pop
xchg
cltd
cmc
push
add
add
mov
inc
fwait
lds
jo
fldl2e
fmul
pop
adc
add
jns
dec
inc
mov
cmp
lods
sub
pop
cmp
jmp
rclb
jmp
and
hlt
cmp
bound
jb,pn
jl
aaa
jne
shlb
sahf
push
mov
inc
dec
in
xchg
int3
enter
add
sub
cwtl
xor
ret
or
inc
sahf
arpl
sbb
insl
xchg
cwtl
push
icebp
fistl
pusha
out
add
jbe
insb
cmp
sub
neg
comiss
mov
cmpsl
jnp
push
popf
push
adc
mov
pop
lcall
iret
adc
in
jl
aaa
sahf
mov
or
popa
and
rcrl
pop
or
xor
push
lret
sahf
push
loopne
fisttpl
sub
mov
jp
sahf
movsb
cli
xchg
push
iret
cmpsb
mov
jo
pop
xchg
inc
jnp
adc
int
push
fisubrs
jns
inc
and
ret
cltd
xchg
scas
sahf
in
mov
lcall
std
inc
jne
adcl
les
add
mov
jp
pusha
ret
sub
sarb
pop
clc
mov
fists
pop
sbb
sub
push
cmp
jno
mov
movsb
cmc
ret
into
xchg
jmp
jecxz
repnz
fwait
mov
addl
or
movsb
orl
leave
ficompl
nop
push
in
xchg
pop
xor
sub
dec
pop
jo
test
hlt
dec
cmp
push
sub
cld
je
cltd
inc
sub
lods
mov
push
add
sarb
jg
and
mov
mov
sbb
mov
scas
call
data16
aam
xchg
nop
push
cmp
stos
pop
sbb
mov
cli
imul
pop
xchg
sub
scas
sbb
shll
sub
fs
ret
adc
cmpsb
outsl
stos
out
les
rol
outsl
cmpsb
out
mov
js
jg
lcall
add
add
mov
push
sti
jmp
push
mov
notb
test
add
jo
add
pop
js
mov
inc
fs
shlb
je
jg
mov
sub
mov
lahf
dec
iret
movsl
je
std
mov
mov
cmpsb
mov
hlt
lcall
sti
dec
aam
je
leave
inc
jge
das
aaa
and
mov
jmp
xor
test
inc
mov
insb
rcrl
cmp
lods
leave
clc
and
sub
xchg
mov
lcall
push
dec
mov
imul
je
shlb
sub
aad
add
add
out
shr
stc
adc
mov
loop
push
sub
jmp
cli
outsb
loope
push
imul
xchg
push
xchg
stos
mov
ja
mov
mov
add
out
mov
sub
in
lods
mov
loop
xchg
xchg
pop
aas
mov
and
jecxz
cmp
push
shll
add
mov
jecxz
lock
leave
and
stos
add
add
hlt
jmp
repnz
dec
jno
mov
or
shlb
mov
pop
orb
and
xchg
rclb
jb
cmovle
jns
mov
setb
jge
cmp
into
dec
bnd
dec
sbb
inc
fnstenv
enter
in
sbb
inc
push
and
mov
lock
adc
stos
add
andl
imul
xor
movsl
jae
std
mov
inc
aaa
lret
fiadds
mov
fstpl
test
rcrb
repz
cmp
jmp
sbb
pop
cmp
lcall
dec
dec
arpl
mov
fdivp
dec
dec
in
fcmovu
rcrl
xor
sub
test
lahf
pop
notl
mov
adc
int
lahf
mov
mov
faddl
add
add
cld
mov
leave
fcoms
adc
add
add
shll
xchg
xchg
and
gs
ljmp
stos
rclb
pop
inc
inc
xchg
mov
ret
sahf
test
jp
mov
movl
xor
sub
push
iret
data16
jne
jge
dec
jne
pop
push
pop
mov
lahf
mov
dec
ret
outsl
dec
insb
mov
sub
test
pop
mov
mov
add
in
adc
jb
xlat
mov
das
pop
xchg
lret
out
loopne
mov
xchg
fistpl
lds
fmul
mov
rorl
dec
cmp
xor
sbb
pop
test
lods
or
rcl
mov
dec
xchg
adc
push
push
mov
push
out
dec
cwtl
loop
stc
jb
shlb
sub
ret
mov
clc
shr
jb
cmpsl
fadds
and
sti
pop
mov
adcb
xchg
insb
add
add
out
cmc
mov
cmp
arpl
lods
add
add
sbb
rclb
outsb
cmp
jb
or
cmpsb
jg
ds
push
je
cltd
in
test
pusha
inc
lret
out
test
jecxz
pop
or
mov
pop
add
insl
inc
jmp
out
arpl
cmp
jle
jmp
fstl
and
adc
sarl
incb
cltd
push
andb
xchg
jg
cmc
arpl
mov
lret
pop
push
int3
xor
mov
xchg
adc
popl
jmp
stc
push
pop
cld
scas
fldt
cld
cmpsl
cltd
pop
sahf
mov
cltd
xchg
das
into
mov
int
jg
pop
fcmovu
dec
pop
cli
sub
enter
insl
push
movsl
dec
jnp
adc
xchg
fs
ja
pop
enter
popa
jmp
add
es
push
insl
jo
push
das
fs
sarb
in
mul
aad
mov
xor
inc
adc
pop
push
inc
pop
sub
popf
dec
push
stos
inc
fstl
pop
cltd
xchg
adc
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
les
mov
lods
add
add
loop
push
or
sbb
int
mov
lahf
test
or
bound
frstor
subps
int
in
rcl
adc
shl
jnp
mov
mov
xor
jae
mov
push
xchg
mov
sti
dec
out
mov
mov
test
pop
push
add
shrl
adc
maskmovq
ds
fnstsw
mov
pop
sbb
jl
or
pop
fistl
pop
in
sub
aad
push
xchg
dec
lods
xchg
or
lret
inc
jp
daa
enter
clc
int
adc
mov
or
inc
xchg
push
cmp
data16
cld
aas
mov
into
mov
mov
jecxz
mov
push
inc
mov
sbb
loope
loop
mov
loopne
mov
sahf
dec
jle
mov
jmp
faddl
and
fisubrs
sub
xchg
fmulp
cmpsl
dec
pop
xchg
imul
cltd
xchg
sar
pop
inc
add
add
fidivs
loop
ljmp
sub
inc
in
scas
add
add
push
out
ret
push
adc
fwait
push
jae
cmp
inc
sbb
in
push
jo
cmp
pop
xorb
cs
mov
pop
mov
rol
daa
inc
cmp
mov
lods
ficompl
nop
xor
dec
mov
jnp
xchg
sub
mov
lahf
lahf
push
pop
test
in
ds
push
and
arpl
push
in
or
ljmp
ja
dec
rorl
sub
push
sub
mov
clc
add
push
loop
sub
fstpl
jbe
xchg
lret
pop
pop
in
jge
popa
outsl
aaa
cmpsb
imul
mov
scas
jg
sbb
sbb
pop
int
daa
add
bound
add
dec
and
test
gs
push
int
sub
mov
and
push
inc
ss
adc
nop
rcrl
insl
push
sub
add
add
xchg
jg
jmp
std
mov
pop
or
add
jmp
inc
test
rcll
jne
push
lea
scas
adcb
sub
push
std
push
lret
fst
scas
cmp
fidivrl
inc
adc
fs
sbb
mov
js
push
and
push
pushf
xlat
add
cmovo
or
outsb
loope
inc
mov
fldt
push
jg
outsb
neg
pop
mov
dec
outsl
out
mov
lods
dec
test
sub
push
push
push
push
push
idivl
fcoms
mov
inc
loop
jmp
scas
bound
mov
iret
xor
mov
imul
gs
cmp
into
repz
in
add
hlt
loope
loope
fs
cltd
scas
and
pop
mov
out
ret
daa
cmc
or
sbbb
lcall
mov
ret
or
xchg
imul
add
add
xor
inc
mov
cmp
push
mov
add
cmp
jge
push
pop
ja
jle
sti
leave
jbe
or
and
lea
fisttpll
jecxz
cmpsl
int3
pop
xchg
push
insl
jmp
pop
je
jle
push
inc
mov
push
pop
jbe
rcll
mov
addb
jp
adc
pop
setbe
sarb
aad
mov
stos
sub
cs
mov
pop
fsubl
ja
push
imul
jno
test
adc
fisubrl
out
xchg
ja
imul
or
xchg
aad
lret
pushf
daa
loope
push
mov
test
mov
divb
fnsetpm(287
rcl
in
repz
insl
push
dec
ljmp
pop
cmp
push
scas
and
dec
and
inc
mov
jnp
xchg
pop
inc
cmp
sub
inc
lcall
inc
jno
pushf
xchg
hlt
fs
movsl
add
add
add
xor
cmp
inc
call
mov
add
add
sub
ljmp
pop
arpl
and
cs
pop
ss
xor
pushf
xchg
shlb
inc
inc
lret
in
mov
out
dec
xchg
popa
add
ret
sub
in
loopne
xor
sbb
insl
outsl
or
ds
outsb
xor
call
mov
popf
cmp
cli
adc
nop
outsb
pusha
push
cltd
and
mov
subb
enter
xor
sahf
pusha
sub
lret
push
jg
mov
push
mov
out
lods
subb
jl
cmp
loopne
ret
mov
cmp
mov
movsb
shll
mov
mov
mov
sarl
lcall
out
stos
out
lods
lret
pop
sahf
mov
lods
fisubrs
inc
stc
fwait
inc
pop
inc
sbb
ret
jnp
inc
stc
lahf
loope
mov
add
jae
ret
mov
std
jne
inc
pop
cmp
add
dec
insl
push
sub
xchg
mov
mov
mov
add
es
les
mov
arpl
xorl
add
add
stc
aam
adc
push
mov
jp
fbstp
mov
dec
add
jle
lret
paddd
sbb
arpl
jmp
sub
xor
mov
fwait
stos
lcall
mov
or
leave
mov
jae
xor
aad
lret
ds
test
inc
cmp
mov
fdiv
ja
sbb
xor
pop
rorb
jnp
fs
mov
idivl
hlt
pop
jecxz
cmp
mov
add
sub
ret
or
inc
popf
jp
jle
mov
xlat
int
fsub
pop
mov
sub
aas
add
insl
fdivs
xchg
fwait
add
and
ljmp
cli
cmp
xchg
fistl
inc
je
test
xor
int
lds
mov
ret
pop
mov
stc
mov
add
add
clc
pop
stc
out
push
pop
bound
ljmp
add
cmp
push
lock
or
clc
xchg
push
xor
stos
mov
xor
aad
out
movsb
ljmp
jp
push
loope
sbb
push
xchg
iret
or
jne
sbb
out
pop
aaa
test
lahf
sbb
adc
xorl
xchg
loope
in
xor
leave
outsl
adc
shrb
fs
mov
je
or
jns
in
mov
jno
jbe
scas
out
mov
test
fdivr
pop
daa
ja
jae
adc
sbb
push
ret
sbb
lret
pop
fs
push
fwait
mov
lcall
pop
pop
inc
movsl
movsl
mov
pop
xchg
mov
or
fistps
sbb
mov
inc
stos
jle
out
ret
mov
mov
enter
mov
pop
or
cmp
lods
xor
add
add
push
mov
lcall
push
xor
add
cmpsl
clc
sbb
int3
aad
mov
pop
inc
jns
outsl
cmc
cwtl
cmc
fnstenv
inc
mov
add
lret
or
mov
lea
pop
aaa
xor
sbbl
sub
push
dec
fdivr
addl
out
and
nop
jo
cltd
or
xchg
push
push
rolb
movsb
inc
push
mov
mov
rcl
push
mov
and
lea
adc
add
xor
or
xchg
sbb
mov
scas
pop
mov
enter
fistps
push
je
insl
pcmpgtd
sub
iret
cmp
dec
ror
es
pop
out
adc
stos
int
jg
adc
jmp
push
lahf
xor
pop
cmp
jnp
in
arpl
gs
cltd
in
mov
jbe
mov
dec
push
jo
les
aam
cwtl
sbbl
das
sbb
add
jne
mov
int3
insb
lret
js
aaa
mov
add
or
mov
jmp
enter
pop
loop
fimuls
das
xor
add
call
in
push
push
jnp
cli
in
sub
loope
pop
data16
arpl
popl
clc
call
mov
test
jecxz
mov
sbb
test
sbb
pusha
je
rclb
sbb
add
imulb
xchg
mov
xchg
mov
adc
jp
dec
rolb
pop
rcll
pushf
pop
or
lahf
mov
ljmp
into
and
dec
add
fdivs
sbb
dec
in
sbb
enter
jno
sbb
out
les
add
adc
mov
jmp
in
push
rcrl
pushf
cmp
hlt
jp
lret
mov
inc
leave
arpl
sub
movsb
aam
ds
aas
add
add
pop
sbbl
fstp
rorl
or
cmp
add
add
lret
jbe
shlb
test
lds
loop
lret
insb
inc
add
ret
mov
jg
add
addr16
out
into
into
scas
ja
xor
stos
pop
jp
xchg
std
dec
xchg
out
decl
mov
mov
js
mov
cli
cli
arpl
ds
inc
bnd
data16
and
cwtl
adc
into
adc
rcr
sarl
out
fwait
ds
xchg
pop
mov
sub
lods
push
sub
repz
mov
jns
pop
sbb
mov
jl
out
sub
cli
fstps
pop
mov
jno
inc
out
push
mov
aaa
and
cwtl
jecxz
hlt
dec
adc
stos
lea
jns
rcll
les
xor
iret
push
outsb
cmp
adc
push
lahf
xor
push
jmp
cmp
ret
call
aaa
pushf
inc
call
outsb
clc
add
add
in
mov
jecxz
out
mov
adc
add
or
fisttpl
mov
add
mov
xchg
pop
dec
push
pop
xor
or
fld
mov
data16
lock
ret
jno
adc
les
mov
xchg
ret
into
pop
pop
imul
cld
out
pop
pop
lods
fadd
nop
push
or
xor
push
ja
or
sti
sub
pop
call
into
clc
xchg
shlb
fdivrl
xchg
dec
pop
and
lret
jae
iret
cmp
call
xchg
inc
mov
gs
inc
xchg
mov
frstor
jp
aad
adc
sub
sub
sub
jno
push
aad
mov
xor
and
sub
jne
insb
pop
pop
jns
add
mov
add
adc
push
clc
js
cmpl
mov
and
cmp
sub
stos
push
jae
scas
add
dec
fdivrl
add
add
std
test
jg
into
lret
orl
add
add
aaa
sti
outsb
subb
imul
cmp
jg
cs
popa
inc
mov
push
inc
insl
mov
aaa
cmpsb
insl
mov
or
inc
hlt
sbbb
jecxz
aam
push
dec
cmc
add
jmp
adc
vpsravd
cmp
and
js
ficoms
jl
std
into
mov
cltd
pop
add
pop
pop
sbb
loopne
test
je
mov
repz
leave
sbb
js
pop
in
in
add
imul
xor
enter
imul
fs
fwait
lret
inc
or
xchg
movsb
jne
lods
mov
out
mov
idivl
sub
in
fwait
cld
addr16
jmp
mov
xchg
inc
mov
lahf
fs
jg
fimuls
xlat
add
jg
and
mov
je
mov
sbb
outsl
cmp
pop
stos
adc
mov
add
adc
in
lcall
jae
dec
mov
mov
add
add
add
adc
data16
ret
jae
imul
fisubs
je
pop
sbb
adc
push
pusha
dec
cmp
mov
insb
xlat
jb
cs
jne
test
xor
or
outsl
lahf
stc
hlt
push
lret
ljmp
add
sti
cmc
loope
or
rol
adc
js
sti
xchg
sti
push
lock
dec
inc
enter
in
in
fdivr
icebp
fidivrs
mov
scas
cwtl
sub
add
mov
xor
in
adcl
outsl
xor
xchg
filds
add
mov
data16
mov
dec
imul
push
add
inc
loopne
mul
mov
in
mov
fisubl
arpl
imul
cli
xor
dec
adc
jno
jmp
fstp
jo
fbstp
sbb
jecxz
xchg
lock
mov
mov
xchg
add
push
mov
xor
sub
add
dec
or
jg
dec
arpl
mov
add
cli
imul
xchg
jle
repnz
lret
pop
mov
push
out
xbegin
lds
pop
mov
jo
fs
hlt
sti
cltd
fcomi
cmc
fwait
scas
mov
dec
add
push
inc
clc
cld
sbbl
orl
xor
jmp
xchg
leave
aas
mov
mov
sbb
outsb
cld
loop
sbb
mov
pop
fcompl
xchg
xor
mov
int3
call
or
into
out
jb
fwait
in
jno
cmpsl
add
ds
test
jbe
insb
xchg
dec
test
xchg
add
pop
dec
stc
les
jecxz
inc
add
or
and
mov
cwtl
movsl
roll
std
pop
inc
sub
pop
push
fnsave
cs
cmp
xor
test
push
adc
jg
mov
pusha
dec
and
andl
addps
add
add
out
idiv
outsl
mov
movsl
sub
fcoml
add
add
and
sarb
out
mov
test
inc
in
mov
sub
jo
rcr
aad
ja
adcb
jl
dec
pop
sbb
dec
jmp
enter
inc
insb
mov
ret
xchg
pop
and
xchg
jo
mov
nop
push
or
xchg
fisubrl
stc
jmp
sbb
mov
add
cmp
pop
push
inc
pop
cmp
mov
dec
xchg
add
cmp
cmc
xor
sbb
inc
jae
dec
pop
mov
stc
mov
mov
mov
lds
jnp
divb
inc
xor
mov
stos
adcl
ret
ss
pushf
adc
sbb
sbb
pop
sbb
push
adc
or
imul
int3
lret
pop
or
add
push
idivb
loop
popa
and
je
psubsw
pop
shufps
add
xor
mov
pop
and
mov
add
xorb
sub
cmp
xor
push
cmp
or
lret
mov
shlb
sub
rolb
pop
xchg
roll
xchg
dec
lret
adc
fildl
dec
push
or
dec
xor
hlt
repz
ja
loop
mov
insl
ret
xor
popa
xchg
and
and
add
sbbl
mov
xor
mov
adc
cmp
sbb
in
add
stos
cwtl
mov
pop
movsl
mov
cmp
xor
cmc
inc
push
push
aas
xchg
dec
lods
mov
repnz
test
mov
adc
rcrb
dec
ficoml
filds
pop
lret
push
xchg
neg
shrl
jns
cmp
jae
pop
into
insl
adcl
ljmp
fcmovnbe
push
add
add
fistpll
call
cmp
add
add
stos
cmp
cmp
and
push
jmp
xor
push
aam
sarl
rcrb
xor
into
into
fcomip
gs
cmp
xchg
push
sbb
mov
stos
push
rcrl
das
sub
dec
cmc
sub
leave
fists
mov
mov
hlt
dec
xchg
or
notb
divl
inc
push
test
jns
mov
scas
push
ror
sbb
cmp
mov
push
xor
mov
jne
add
test
cs
stos
push
xchg
test
jns
cli
adcl
popa
xlat
into
in
pop
jnp
ds
pop
mov
insl
mov
scas
mov
cs
rorb
into
pop
jbe
pop
repnz
ret
jnp
js
jle
mov
imul
cs
add
cld
scas
divl
dec
sbb
outsb
cmp
add
add
std
sti
leave
sti
iret
jmp
sahf
pop
test
add
xchg
pusha
int3
mov
in
mov
ss
imul
push
daa
cmpsl
ds
inc
pop
aad
jmp
inc
pop
test
subb
inc
dec
cwtl
aad
cmp
cmpsl
jle
aam
mov
jo
xchg
jmp
mov
jns
icebp
pause
jl
inc
adc
iret
inc
xchg
xor
lds
pop
orl
fidivrl
lds
sar
pop
jb
mov
xchg
call
pop
in
sti
xlat
jle
sti
in
and
and
xchg
out
pop
and
pop
xchg
mov
hlt
xchg
imul
std
out
int3
pop
mov
sub
xchg
pop
out
pop
cmp
mov
pop
scas
mov
ja
and
adc
pop
sbb
cmp
and
int3
fistps
dec
sub
cmpsb
sbb
shll
add
mov
mov
xor
push
push
mov
add
or
scas
jg
adc
push
in
xor
cmpsb
or
xchg
mov
xchg
rorb
in
mov
test
movl
lret
test
in
pushf
jl
das
pop
pop
adc
push
rol
pop
fnstenv
je
ret
sti
pushf
xor
pop
jl
mov
cs
dec
fisttpl
cmc
enter
jge
shl
pop
push
icebp
adc
mov
add
jb
cld
sbb
popf
sub
lds
or
mov
jg
pushf
pushf
cmp
test
sub
jae
and
mov
shlb
test
insl
add
or
sbb
inc
mov
mov
and
mov
adc
add
inc
dec
lret
or
mul
mov
aad
hlt
push
or
pop
mov
subb
outsl
sub
push
mov
add
stc
out
aas
clc
cmpsb
shrl
add
jg
mov
sahf
loop
std
jne
jne
rolb
add
cmp
mov
xchg
and
xchg
sbb
jg
pusha
lahf
decl
add
fwait
cltd
stos
adc
mov
in
mov
bound
xor
and
jmp
out
jne
mov
aad
out
push
arpl
fwait
in
or
fwait
out
test
pop
jle
leave
push
jp
push
mov
cltd
push
sbb
aam
cltd
cmpsb
aad
pop
cmpsl
fstpl
jo
pop
rorl
inc
cmpsl
int3
int
gs
mov
test
pop
lods
adcl
xor
jne
cld
or
cs
in
mov
fidivs
sub
inc
das
les
in
xchg
daa
mov
loope
repnz
push
fidivrs
push
rorb
sti
mov
out
insl
into
movsl
xlat
in
jo
lds
psubd
lcall
pop
sahf
nop
pushf
mov
arpl
testl
mov
inc
sub
jg
shr
add
add
inc
enter
pushl
cld
sbb
jae
add
add
push
add
dec
push
or
xlat
mov
push
subl
sarb
test
aad
push
daa
sbb
es
add
jp
in
shll
add
scas
loope,pt
dec
push
dec
orb
dec
decl
test
sahf
dec
and
pop
sub
cmc
xchg
pusha
sar
pushl
cmp
fmuls
jb
repnz
push
bound
lcall
jns
sbb
fcoml
jg
lods
out
cmp
popa
push
insl
and
les
push
loop
jl
lcall
pusha
dec
lods
popf
cmp
xchg
inc
mov
mov
bnd
add
adc
stos
dec
je
shlb
enter
inc
add
and
fldl
mov
pop
stos
jmp
je
in
jb
nop
push
jle
mov
mov
in
faddl
lods
mov
incb
aas
popa
ljmp
pop
inc
push
sar
add
add
pushf
shrb
lcall
sub
js
add
add
out
stos
mov
adc
inc
adcl
and
test
fnsave
dec
stos
cmpsb
jae
add
jae
out
das
pop
outsl
mov
mov
push
jg
push
push
add
bound
jne
and
inc
and
fimull
shrl
or
fcoml
inc
ljmp
out
cs
mov
pop
imul
scas
fcom
mull
push
insl
adc
jo
jnp
std
daa
add
xchg
mov
test
cmpsw
jg
cwtl
bound
vsqrtps
bnd
mov
test
test
mov
out
int3
jg
xchg
pop
lea
ljmp
rcll
inc
je
insl
dec
jp
mov
subl
and
inc
ds
and
pop
test
push
add
repnz
sbb
out
xor
rol
test
clc
cmpl
and
add
sub
scas
mov
aas
scas
mov
add
xchg
add
test
ret
mov
mov
push
leave
and
xor
and
jp
xchg
add
inc
sbb
nop
xchg
sbb
adc
loop
rep
and
mov
and
jp
mov
pop
notl
mov
mov
imul
std
jmp
div
and
push
dec
sub
mov
mov
push
sub
add
pop
mov
test
jnp
jmp
cmp
clc
mov
je
gs
fistps
mov
stos
cmpsl
je
mov
ret
mov
cltd
inc
negl
add
jmp
sbbb
push
add
data16
xchg
imull
push
imul
out
js
arpl
leave
clc
xchg
and
imul
adc
jg
jne
into
xor
mov
and
popf
inc
aam
add
jg
jne
jne
jg
loop
mov
gs
add
icebp
sub
push
fcmovne
inc
adc
add
dec
popa
orb
pusha
lea
xor
ret
pop
xchg
mov
sarb
inc
in
hlt
sbb
push
mov
sarb
dec
mov
scas
push
and
inc
push
dec
stc
xchg
scas
jecxz
push
pop
mov
jmp
ret
inc
in
insb
cmpl
cmp
xchg
or
je
repz
out
fsubl
fwait
lret
sbb
dec
xor
imul
test
xchg
cld
cltd
mov
addl
leave
aas
cli
cmp
or
ret
jne
adc
xrelease
cmc
dec
adc
cmpsb
xchg
xchg
and
or
adc
insb
insl
mov
mov
sbb
loope
or
out
dec
xlat
out
cmpsb
sub
sub
scas
ret
jg
pop
sub
repz
mov
and
sahf
mov
outsb
leave
jmp
add
sbb
mov
cmc
mov
inc
xchg
add
add
cli
xchg
xchg
or
mov
loop
dec
mov
repz
in
dec
push
arpl
jmp
lds
sbb
sub
inc
pop
daa
push
mov
pop
adc
ret
mov
lods
cmc
add
pop
stos
repz
mov
pop
aad
aas
test
lahf
aam
cwtl
and
shl
fs
xchg
jecxz
adc
out
mov
sbbl
push
or
shrb
lret
and
mov
mov
add
pop
cs
pop
mov
mov
fwait
movsb
dec
push
sub
test
xchg
cvtps2pi
subl
rol
dec
aad
or
mov
fwait
cmp
test
jmp
adc
add
inc
xchg
add
shl
and
shrl
aad
mull
mov
jno
leave
outsb
jno
addr16
add
push
push
mov
test
pop
or
out
add
dec
jg
xor
jge
add
and
outsb
jle
lods
testl
movb
add
insb
push
xchg
pusha
sti
lret
movsb
repz
cs
loopne
xchg
fstl
int
sub
fistpll
cmp
pusha
shr
or
mov
pop
iret
xor
pop
sub
je
cmp
add
xor
cmp
loopne
mov
fidivl
pusha
inc
in
pusha
hlt
push
cmc
xor
or
pusha
mov
popa
push
cwtl
jne
jne
lret
xchg
movsl
fistl
dec
fsubrp
inc
in
fcmovb
jmp
push
idivb
sti
jp
cwtl
jmp
js
leave
sub
int
add
push
dec
adc
lock
pop
sub
lret
ss
jne
les
sbb
push
mov
and
lret
sub
faddl
out
cmp
or
inc
and
data16
jmp
xor
les
popf
dec
sub
dec
xor
xchg
sbb
jmp
inc
imul
add
mov
xchg
insb
insl
mov
imul
add
xor
fiadds
js
call
bound
clc
jmp
negl
outsl
ljmp
push
roll
mov
inc
xchg
outsl
mov
dec
jns
and
sbb
scas
mov
jbe
xchg
sub
and
rclb
loopne
dec
loopne
xor
lods
aas
xor
cmpsl
mov
add
out
ja
xor
shlb
cwtl
stos
fldenv
push
mov
in
es
insb
lods
ljmp
adc
mov
cmpsb
out
inc
cld
cmpsb
popa
pop
adc
jo
int
in
xchg
mov
and
adc
test
outsb
push
sbb
fimuls
insl
rcrb
dec
mov
or
add
imul
mov
push
add
pop
and
add
dec
push
addr16
bound
or
fprem
nop
in
pcmpeqb
mov
add
add
out
sti
xlat
in
aad
aaa
xlat
pop
outsb
xchg
enter
add
add
cltd
dec
jge
inc
inc
cli
es
mov
lahf
push
stos
dec
jecxz
popf
mov
mov
mov
jb
cmp
leave
mov
call
xchg
dec
aas
imul
call
mov
and
out
pushf
mov
nopl
loope
add
aam
into
ljmp
xlat
testb
mov
mov
sub
jne
nop
dec
sti
clc
ljmp
outsb
adc
in
xchg
pushf
cmc
and
mov
mov
cmpsl
mov
xlat
loope
sbb
das
ds
aam
sub
fwait
dec
jecxz
sub
sbbl
bound
lahf
xchg
outsl
and
inc
fucomip
mov
loope
fnstenv
mov
adc
inc
pop
cmc
pop
test
inc
rorl
test
pusha
xlat
xor
pop
or
mov
dec
adc
cmpl
mov
push
add
add
push
sub
cmp
jg
and
mov
into
into
push
add
lock
push
iret
cwtl
nop
lods
pop
pop
call
ss
mov
jnp
punpckldq
cld
scas
test
dec
fidivrl
in
into
dec
mov
sub
jne
sbb
or
xchg
call
or
hlt
and
push
jno
test
loope
jle
stos
mov
jns
push
add
popa
adc
dec
rcrb
cmpsl
and
and
mov
jno
cmp
xor
sub
push
xchg
jbe
fisubrs
sarb
shlb
outsl
jmp
jns
push
inc
cmp
cmpsb
pop
std
adc
cltd
daa
lahf
mov
sbb
xlat
jb
dec
add
mov
mov
mov
cmp
and
mov
aam
pusha
or
das
mov
test
mov
jl
dec
aaa
dec
sti
testl
mov
jmp
ds
repz
fcoms
int
or
mov
add
add
rorb
add
jl
jg
je
inc
jb
push
add
insb
test
ret
data16
adcb
adc
jg
ja
cli
jns
cmpsb
add
jnp
sahf
ret
cld
adc
ret
jns
xor
jg,pn
inc
add
lods
inc
sbb
dec
fdivrs
mov
in
movsl
in
push
dec
daa
test
jne
pop
outsl
int
xchg
sub
sbbb
orl
jb
shufps
hlt
lea
mov
ja
icebp
mov
mov
fiadds
mov
mov
icebp
dec
and
daa
int
cmpsb
jbe,pt
addr16
dec
cmp
dec
pop
or
inc
xor
daa
imul
mov
icebp
and
cmp
aam
arpl
aad
jg
fwait
das
outsb
xor
rolb
push
push
leave
rcll
scas
mov
add
loopne
xlat
xor
add
mov
mov
mov
shll
popf
mov
add
push
cwtl
out
cmp
outsl
pusha
mov
mov
rorb
and
fst
xchg
js
mov
lahf
mov
inc
mov
lea
dec
and
mov
int
xor
add
sbb
pushf
pop
or
mov
jg
pop
inc
hlt
xchg
xchg
sbb
push
roll
ficoms
mov
negb
cmp
sahf
daa
jns,pt
popf
mov
lret
xor
xor
cmp
fwait
hlt
dec
mov
xor
sub
xchg
mov
pusha
cmp
adc
aam
sbb
push
dec
mov
add
dec
insb
loopw
mov
loope
adc
xchg
or
mov
xor
int
lret
push
pop
mov
sub
stc
fistpl
and
imul
xchg
fs
jbe
addr16
xchg
out
into
nop
and
add
stc
enter
in
sbb
push
inc
addr16
sub
int3
add
add
jle
imul
loop
shrb
push
push
add
mov
mov
orb
xor
dec
js
mov
xchg
push
das
cli
mov
or
sbb
daa
push
mov
and
ljmp
mov
loop
aad
fs
daa
arpl
add
lret
hlt
adc
dec
jmp
fdivrl
lret
movsl
mov
ficompl
jp
cmp
pop
cltd
jo
aam
arpl
xor
mov
sub
jno
addr16
lea
xchg
jb
out
or
mov
cmp
jp
shlb
jae
xchg
pop
push
ja
ret
mov
repz
push
adcb
ss
sbb
dec
jb
mov
mov
ljmp
pop
std
pop
pop
test
xchg
xor
dec
push
push
pop
mov
imulb
push
mov
add
add
imul
cmc
call
inc
push
popa
fs
cmp
scas
int
add
sbb
es
sahf
adc
mov
jl
xor
cmp
outsb
rcr
mov
cmp
stos
jae
mov
jmp
mov
cmpsl
out
bound
add
push
push
sbb
rcl
inc
cwtl
mov
push
js
mov
mov
ja
dec
lret
gs
xchg
adc
cmpsb
jle
jmp
adc
xor
mov
inc
inc
jmp
xlat
jl
pop
sti
push
mov
cwtl
fnstenv
fcmovne
rorb
or
popa
negb
jecxz
jns
stos
inc
cmp
mov
add
jno
jecxz
das
cmp
lret
cmp
inc
inc
mov
scas
leave
call
dec
mov
movl
push
adc
inc
in
ja
lret
dec
stos
sbb
or
sub
and
imul
nop
fs
add
cmp
negb
or
add
add
ja
iret
sub
je
pop
mov
add
add
pop
flds
add
lds
and
push
pop
mov
or
gs
pop
stc
popa
sarb
jae
mov
mov
f2xm1
insl
popa
scas
push
adc
mov
mov
mov
dec
test
movsb
pop
inc
mov
movsb
adc
xchg
das
mov
addl
push
mov
ret
xchg
jne
mov
sub
stos
sarl
hlt
xchg
pop
shl
xlat
lods
mov
or
xchg
in
mov
and
iret
dec
adc
movsb
ret
stos
repnz
inc
popf
and
test
decb
or
lods
mov
mov
test
js
mov
aam
push
lock
mov
xorb
dec
aam
data16
add
jne
pushf
pop
inc
jb
and
cmp
inc
out
clc
dec
adc
sbb
or
testl
sub
dec
scas
push
fdivl
mov
add
mov
out
out
out
into
gs
cld
test
mov
sarb
add
add
call
sbbb
fidivs
xchg
xchg
lret
push
in
icebp
add
xor
jmp
popa
lea
out
jge
test
mov
push
add
mov
mov
cmp
mov
pop
shll
inc
hlt
stc
rcr
jnp
js
jnp
jg
in
push
ret
insl
jle
xor
out
xlat
push
push
cld
repz
mov
movsl
insb
fsubrl
xchg
push
mov
add
jmp
es
pop
iret
pop
imul
push
cmpsb
pop
aad
jne
add
or
mov
jo,pn
xchg
sbb
popf
inc
stos
dec
shlb
sarb
ret
imul
lea
mov
adc
lcall
add
add
lcall
sub
push
pop
inc
pop
std
mov
cmp
dec
in
imul
in
shll
xchg
mov
or
scas
imul
or
add
add
xchg
and
je
out
mov
imul
add
add
int3
and
mov
ret
jge
push
lods
ret
pop
orb
int
mov
fsubr
mov
or
sarl
sub
mov
or
fs
insl
push
pop
test
pop
dec
fucomp
cs
jbe
cmp
pop
push
xor
jb
loop
jns
cmp
insl
pop
push
mov
aad
dec
shr
xchg
out
lea
insb
adc
pop
or
lcall
jns
iret
orl
fisttpll
jecxz
and
inc
test
mov
dec
dec
sub
mov
stc
xchg
push
mov
sbbl
gs
cmp
cs
pop
pop
rcrl
add
scas
aad
push
mov
out
inc
aad
xor
arpl
mov
sahf
xchg
mov
dec
je
and
jno
test
icebp
cwtl
lahf
jae
pop
out
and
add
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
std
jb
loope
roll
add
xor
dec
add
test
pop
push
mov
outsl
dec
mov
mov
and
push
push
daa
mov
adc
test
mov
inc
xchg
xor
pop
mov
mov
inc
mov
mov
pop
ret
in
sub
push
aad
lret
inc
xor
sub
loop
repnz
sub
lods
mov
cmp
repnz
test
out
jecxz
pop
out
rclb
clc
pop
or
loopne
jmp
call
ss
inc
sub
or
sub
dec
inc
lds
xchg
push
add
out
daa
lret
nop
jge
mov
adc
ficoml
es
mov
js
mov
dec
xchg
mov
mov
xchg
popa
js
cmpsb
in
jnp
mov
gs
cltd
das
xchg
call
loope
xor
push
add
pop
insl
addl
ret
xchg
sbb
adc
add
call
out
lahf
ret
or
jnp
cwtl
enter
add
cld
or
shll
xor
mov
mov
cmp
test
int3
les
jbe
repz
xlat
mov
jo
mov
xchg
push
mov
jo
push
loope
enter
aaa
pop
mov
push
xchg
fstps
scas
xor
jmp
outsb
scas
std
ret
lret
ss
leave
cld
push
incb
dec
iret
xor
and
jmp
rsm
ljmp
jl
cmp
push
aad
pop
fistpll
mov
lods
sub
call
cmp
mov
fs
xchg
mov
pop
or
sub
jo
ud0
and
adc
mov
xchg
rcl
das
into
xor
loope
cmc
pop
adc
adc
addb
or
mov
mov
mov
pop
xchg
or
add
add
in
or
nop
jge
lret
cmpsb
ret
push
jnp,pt
jmp
mov
xor
cmpsl
add
add
aad
sbb
add
adc
jo
mov
dec
stos
loop
out
leave
das
cmp
fnstenv
jo
xchg
dec
inc
test
xchg
pop
popa
pop
adc
xorb
xor
cli
out
dec
movsb
fsts
or
add
xor
jno
nop
lahf
in
mov
push
mov
stos
xor
adc
mov
into
xor
call
xchg
rep
aam
push
rorb
aad
into
cltd
adc
sbb
je
in
push
nop
inc
pop
dec
fisttps
and
mov
dec
movsl
out
mov
clc
aad
cld
rorl
sbb
lods
pop
sub
hlt
mov
jl
js
mov
in
and
lea
add
sbb
gs
add
imul
cltd
add
iret
lcall
add
add
add
sbb
sub
dec
ficompl
add
add
sbb
pop
mov
shll
sub
in
dec
cmp
ffreep
and
or
xor
mov
hlt
imul
in
mov
mov
ret
mov
les
sbb
jnp
dec
bound
data16
inc
lods
test
or
add
out
cs
jg
lods
sub
pop
inc
int3
cmp
imul
movsl
fnop
rcl
gs
inc
xchg
mov
dec
pop
jge
test
jo
ljmp
inc
xor
pop
and
popf
inc
fwait
and
or
adcl
outsb
push
sarl
pop
das
fwait
inc
mov
imul
out
fiaddl
lret
pop
push
add
mov
inc
mov
scas
xchg
pushf
pop
cltd
clc
mov
mov
sub
xchg
jmp
out
js
mov
jge
xlat
mov
and
call
sti
mov
arpl
and
mov
pushf
adc
ds
jae
mov
xlat
aad
add
adc
in
fsubl
inc
push
adc
xchg
or
push
repnz
mov
rolb
inc
cmp
sbb
insl
mov
dec
cmp
fimull
pop
cs
repz
imul
adc
orb
fistpll
test
loope
sahf
negb
mov
repz
fnstsw
jg
push
mov
jp
leave
ds
jmp
cmp
inc
sbb
mov
outsl
stc
cmp
cmp
inc
push
cmp
inc
inc
or
mov
sub
jl
adc
or
or
or
aaa
mov
lods
mov
push
xlat
adc
mov
loop
icebp
pop
mov
adc
popf
cld
pop
mov
loop
fsubrp
int
adc
push
faddl
jl
sbb
sbb
sub
nop
pushf
xchg
push
es
xor
add
xchg
and
idiv
lahf
insl
mov
jb
jo
add
add
sbb
mov
dec
jp
adc
shl
cmp
aaa
sub
jecxz
lods
popf
jle
add
sub
stos
arpl
pop
xor
scas
inc
or
cli
lea
movb
or
xchg
out
jnp
imul
aas
inc
mov
movsl
jns
lcall
or
in
cs
jle
pop
pop
arpl
js
mov
pop
gs
inc
je
int3
push
xor
aad
pop
cwtl
into
cmp
test
sti
in
pop
fdivl
inc
jb
sbb
pop
mov
in
jle
xor
inc
pop
push
scas
push
stos
repz
xor
xchg
adc
xor
mov
scas
pop
dec
in
ds
les
sbb
out
pushl
mov
test
outsl
call
xor
jmp
mov
add
out
out
cmp
lret
adc
cmp
imul
inc
mov
add
cmp
jg
leave
or
mov
xlat
add
add
pushw
cmp
cmp
mov
popa
js
hlt
sub
inc
push
jp
ljmp
bound
add
jl
orb
mov
pop
mov
xchg
in
mov
dec
jge
pop
xlat
cmp
sub
sub
aad
xchg
imul
scas
fucomip
je
scas
jo
push
roll
aaa
inc
jmp
loope
ret
stos
and
pop
pop
lods
inc
cltd
fmulp
call
ljmp
push
jl
hlt
sbb
lcall
arpl
jne
imul
mov
push
mov
xor
sub
adc
out
inc
push
xchg
ret
lahf
subb
je
pop
lahf
pop
or
push
pop
imul
sbb
push
fld
pop
push
loopne
cmp
int
mov
xor
aas
iret
mov
inc
sub
mov
push
out
stos
cwtl
into
and
mov
adc
mov
cmp
cli
add
insb
add
add
int
out
out
imul
nop
xchg
movsb
mov
fadds
add
adc
mov
inc
xlat
jle
stos
dec
push
repnz
rcr
aas
clc
int
push
jecxz
add
repnz
mov
add
fyl2x
pop
and
pop
and
push
popf
push
imul
aad
rcrl
jno
popf
pop
or
push
add
sbb
aad
sbb
fcmovne
jecxz
inc
stos
dec
cld
adc
push
dec
scas
fildll
stos
pop
in
fisubrs
test
inc
stos
or
pop
xchg
adc
cmp
jg
pop
out
xor
sti
enterw
iret
aad
dec
xchg
aad
mov
mov
jmp
rep
mov
jmp
lock
lods
fwait
sbb
out
sti
fdivl
das
adc
loope
mov
fwait
dec
jge
add
cmp
imul
out
and
test
push
adc
pop
imul
add
psubusw
push
in
sub
arpl
flds
add
mov
mov
push
push
test
in
repz
xchg
jle
outsb
jp
push
fmuls
inc
sbb
pop
cmpsb
hlt
dec
jno
mov
stos
mov
out
scas
shrb
adc
test
jae
pop
test
call
push
sbb
lahf
mov
xchg
sti
sub
lods
jns
aam
es
pop
lcall
jecxz
xchg
and
add
and
fildll
aas
in
gs
mov
jl
pop
std
adc
mov
pop
cmp
push
mov
sub
rolw
mov
popa
xor
add
lcall
stos
loop
cmp
mov
mov
lods
jbe
inc
fcomi
jnp
pop
sbb
jmp
pop
outsb
mov
imul
aam
mov
inc
lret
xlat
cli
xchg
jmp
sbb
sti
fwait
xlat
xor
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
cmp
fiaddl
add
and
mov
lret
fwait
cmp
lret
inc
fimuls
movsl
pop
nop
push
shll
hlt
mov
lret
lea
repnz
xchg
jb
stos
testl
lods
popa
mov
jl
adcl
ss
into
push
xor
push
adc
pop
jbe
lock
rcl
sub
jns
xchg
mov
leave
lcall
lock
stc
inc
jno
inc
xchg
xchg
lahf
sub
daa
jnp
pop
cmp
push
aad
fwait
jmp
cld
lods
jo
inc
rcll
ds
mov
test
lock
repz
cmpl
repz
sub
inc
rolb
push
sub
mov
aas
mov
add
jmp
inc
inc
jo
dec
mov
pmaddwd
int
inc
mov
jmp
xor
outsb
fildll
fwait
addr16
push
add
add
jle
jg
std
fstpt
or
cmc
fildl
add
mov
fsubr
push
mov
and
dec
gs
mov
cmpl
adc
adc
std
xchg
dec
pop
and
mov
ret
mov
ss
iret
fsubl
cmp
fisubs
in
adc
inc
insb
add
daa
jb
fdivrs
dec
inc
cli
xchg
xor
daa
in
add
out
movsl
or
mov
push
sbb
fisttpll
cmc
stc
jo
iret
outsl
jp
out
loopne
cmp
leave
push
call
pop
inc
push
ja
xchg
xor
xchg
pop
jnp
std
adc
xchg
dec
aas
out
arpl
xor
imul
push
orb
sub
aaa
lds
pop
push
sub
push
sbb
or
push
icebp
test
pop
mov
mov
cmp
sahf
out
test
repnz
popa
aad
fidivrl
filds
add
cmp
ljmp
stos
mov
sbb
faddl
add
push
cltd
popa
xor
stos
in
add
cmpxchg
out
jo
iret
out
ss
xor
sub
mov
cmp
iret
insb
das
mov
cmp
inc
cmc
stos
out
hlt
sti
frstor
shlb
shlb
rolb
adc
stos
mov
xor
ret
jo
in
mov
std
push
add
aad
dec
les
sub
mov
lods
std
test
push
and
gs
mov
push
imul
je
mov
or
inc
mov
cmp
pop
push
mov
pop
fprem
arpl
cmp
pop
add
and
or
mov
sti
xlat
and
pop
lahf
add
ja
push
inc
xor
mov
sbb
sbb
push
rcrb
mov
xchg
add
sbb
icebp
mov
xchg
flds
adcb
das
mov
push
lods
mov
add
adc
leave
jmp
scas
inc
call
fldl
add
adc
xchg
push
out
jg
inc
insl
xchg
bound
jae
cmp
dec
ret
push
mov
lods
inc
les
js
arpl
jecxz
jl
mov
andb
loope
mov
cmp
adc
repnz
push
dec
cmpsl
in
add
cmc
cld
aad
pushf
icebp
sub
pushf
add
mov
icebp
popf
or
push
cltd
lcall
sbb
rcrl
fmuls
movsl
call
sbb
mov
xchg
enter
aas
iret
fwait
in
ret
test
jns
out
add
test
stos
jle
mov
xor
js
cmp
clc
iret
xor
add
subb
push
popf
in
sbb
jns
xchg
jge
scas
jne
mov
xlat
mov
or
mov
enter
dec
jmp
or
add
push
out
faddl
jp
add
add
add
pop
mov
pop
sbb
shr
push
sbb
add
add
aad
mov
scas
fldenv
pop
iret
jae
addl
jp
or
mov
and
jp
sbb
and
jge
adc
or
rcr
in
outsl
dec
mov
push
pop
icebp
pop
pop
lahf
mov
sbb
push
cmp
mov
lods
sbb
enter
and
sbb
pop
lods
fcmovnb
and
jns
and
sahf
mov
out
jp
mov
mov
push
dec
mov
mov
loopne
cwtl
xchg
inc
mov
mov
and
sub
cmc
cli
jno
xchg
sti
pop
int
clc
jbe
jnp
out
jp
into
pop
sti
pop
inc
insb
mov
mov
inc
fwait
push
adc
push
lds
pop
cmpsl
add
xchg
mov
in
or
shlb
mov
mov
mov
push
dec
mov
or
add
jg
mov
lcall
fisttps
or
or
add
add
add
rorl
mov
test
pop
je
fsts
in
js
pop
xchg
pop
cmp
movsb
mov
insb
push
adc
mov
daa
mov
imul
adc
dec
mov
popf
dec
bswap
adc
mov
pop
ljmp
add
jge
sub
sub
fidivrl
fisubl
xchg
aad
subl
out
int3
pop
cld
lds
mov
inc
or
fsubrl
cmpsb
lock
jl
test
sub
mov
int3
jae
sbb
dec
insb
cmp
push
xor
repnz
test
aad
lods
in
cmp
cli
mov
mov
cwtl
pop
pop
mov
addr16
test
rcrl
xchg
mov
mov
rolb
dec
jg
mov
add
inc
lock
rep
jg
aaa
inc
lods
cli
inc
jb
inc
inc
cmpsb
push
jae
add
leave
mov
add
sbb
jns
xchg
xchg
mov
data16
popf
push
loope
add
adc
pop
imul
mov
mov
xor
test
sbb
fnstcw
cmpsl
bound
push
mov
pop
loop
and
cmp
cld
jge
popf
push
aam
rcl
out
mov
xchg
xchg
sbb
stos
jne
fistl
mov
xor
std
std
lods
movsl
dec
xlat
cmpsb
subl
and
addr16
xor
mov
and
sub
nop
mov
push
sub
push
adc
fbld
lods
or
xchg
test
inc
cmpsb
stos
mov
cltd
shrb
and
mov
add
jb
pop
cwtl
insb
add
cmpsb
fisubrs
mov
mov
rcll
sarb
add
and
push
cld
mov
adc
pop
test
mov
or
inc
inc
sbb
jno
flds
add
jae
fadd
fsubp
jnp
or
cld
les
ja
adc
add
add
dec
mov
jge
fdivl
xor
xlat
jae
lods
andl
inc
sub
int3
jno
and
jmp
lods
iret
xchg
jmp
cwtl
lock
into
mov
xchg
test
mov
ds
lock
arpl
jae
cmp
clc
mov
aad
fucom
mov
pop
or
sbb
push
mov
aad
das
loope
or
fstpl
xchg
outsb
jmp
lahf
rol
das
adc
popa
mov
mov
xlat
pcmpgtb
dec
es
xlat
int3
cwtl
rol
pop
lahf
jno
sub
sub
dec
cmpsb
pop
mov
int3
and
aam
and
int
cmp
ret
xchg
sbb
je
mov
and
cld
xor
mov
cs
jo
mov
data16
fxch
pop
push
mov
or
dec
push
data16
jmp
fwait
iret
mov
push
ds
mov
arpl
add
add
sub
cld
cli
jle
dec
nop
xor
push
inc
sbb
add
add
lds
xchg
push
mov
mov
mov
mov
xchg
aam
int
imul
aaa
or
fiaddl
add
push
loope
pop
jo
cmp
sahf
loopne
orl
mov
outsl
das
pop
push
insb
jnp
gs
pop
mov
pop
in
jnp
shr
ret
cmc
das
mov
scas
sub
int3
sub
sbb
xor
stc
push
sbb
insb
popf
jmp
insb
dec
jp
lds
inc
jnp
stc
out
inc
sub
popf
bound
or
pushf
dec
xor
scas
test
leave
pop
cmp
mov
fucomp
loope
filds
push
pop
fistpl
out
rcll
dec
push
mov
xchg
fcoml
jmp
movsl
xor
pusha
jmp
dec
mov
xchg
lcall
xor
inc
imul
and
add
ljmp
adc
add
add
ja
sti
aaa
out
ja
insl
add
add
add
jmp
inc
imulb
xor
push
jae
cs
mov
mov
mov
sbb
fwait
jmp
inc
cld
push
push
inc
mov
testl
test
out
dec
scas
cvtdq2ps
pop
cwtl
call
pop
mov
pop
negl
mov
cmpsl
lahf
inc
pusha
adc
mov
dec
cwtl
js
xor
mov
les
jmp
cmc
jl
mov
push
mov
loopne
push
sub
lret
jp,pt
loope
ret
mull
fiaddl
repz
mov
enter
adc
dec
push
lea
or
out
inc
scas
aaa
nop
aad
push
ljmp
push
outsl
xor
call
repz
cmp
push
bound
lock
adc
jmp
mov
pop
jno
aaa
out
xchg
pop
loopne
cmp
add
ror
cltd
outsl
mov
aaa
pushf
dec
in
lcall
add
mov
xchg
out
pop
lret
sub
dec
mov
mov
mov
mov
int3
scas
ret
sarb
pop
daa
mov
aas
pop
inc
sbb
iret
or
nop
mov
pop
popa
jb
addr16
xchg
mov
popf
cltd
es
jno
xchg
xchg
mov
fisttps
fisubrl
and
or
xor
jae
mov
jmp
aad
es
cmp
and
pop
mov
or
pusha
xchg
movsb
jns
jnp
mov
ret
in
dec
mov
xchg
mov
mov
repz
mov
lods
mov
in
mov
in
xchg
mov
sti
sbb
push
mov
mov
add
cmp
mov
mov
pop
cmpsl
and
mov
js
mov
mov
adc
and
xor
cmp
loope
or
std
fsts
add
cltd
cmc
adcb
fcos
pop
mov
push
daa
out
add
loop
sub
inc
jecxz
jae
jb
dec
jb
ds
mov
rol
lds
or
rolb
and
push
cmp
shufps
cmp
call
pushf
pop
inc
mov
insl
enter
mov
inc
inc
jns
push
std
ret
xchg
dec
and
int
cli
jb
sbb
shlb
into
data16
rolb
daa
arpl
mov
lahf
xchg
mov
jg
out
in
and
aam
test
xor
fmull
jl
mov
test
loopne
push
popf
nop
add
js
sti
movsl
jg
fwait
push
stc
adc
inc
sbb
jno
hlt
jo
outsl
push
jp
mov
sub
stos
leave
and
mov
cmp
fs
or
andl
lods
lcall
rorl
mov
lahf
loopne
and
xchg
or
xlat
test
jne
je
scas
add
add
add
lock
jg
in
and
mov
sub
add
add
jl
sub
fidivl
adcb
sub
aaa
aas
int
insb
mov
ret
lret
jae
xchg
xor
xor
and
cmp
mov
negb
das
push
add
fsubr
cmc
inc
in
data16
mov
push
aad
mov
mov
stos
xlat
fldcw
push
adc
push
push
test
fdivs
aam
ss
subl
pop
cmp
inc
mov
pop
mov
sbb
jno
sbbl
pusha
mov
sub
push
insb
cmpsl
pop
sub
or
xchg
iret
movsb
lcall
shrl
rcll
lahf
push
xchg
xchg
repz
out
mov
mov
mul
pop
sub
orb
jb
outsb
movsl
adc
popf
dec
ret
jecxz
mov
sub
jle
fcmovnu
gs
je
add
add
add
pop
xlat
fistpl
sbbl
xor
add
add
mov
mov
jmp
nop
out
and
movb
xor
sbb
cli
aad
stc
jecxz
test
jns
mov
mov
lea
cld
pusha
cmpsb
sub
shll
int3
aad
arpl
ficompl
stos
test
loope
push
outsl
out
pop
xchg
or
mov
loope
jne
lods
push
lcall
test
js
mov
inc
ljmp
sahf
mov
rcrb
jae
nop
bound
test
adc
cmp
outsl
mov
faddl
xor
cmp
mov
ljmp
iret
mov
subl
popa
inc
fs
add
xchg
mov
shrl
sbb
test
mov
adc
xlat
aas
stc
xchg
adc
adc
pop
test
or
adc
add
add
mov
dec
js
stc
mov
dec
int
lahf
mov
fdivs
jmp
add
orl
jmp
mov
lds
dec
daa
sub
fdivr
sub
adc
inc
xor
outsl
test
push
call
push
adc
enter
mov
lds
aaa
xchg
pop
enter
cld
xchg
cmp
and
or
mov
js
xchg
sbb
jne
mov
stos
inc
dec
out
or
push
xchg
lods
mov
std
cmp
mov
adc
sbb
int3
and
sbb
out
clc
ret
mov
fwait
push
mov
out
cmpb
add
aaa
cmp
fisubl
jno
and
sbb
bound
mov
imull
push
mov
lods
scas
stos
jecxz
rcl
cmp
sub
inc
cmp
int
mov
xchg
mov
sbb
icebp
std
lcall
mov
lock
roll
add
insl
repz
fwait
jns
jns
xchg
in
add
ljmp
test
mov
les
fdivrl
mov
jle
notb
imul
push
sub
and
xchg
fimuls
popa
cltd
je
pop
pop
mov
minps
sub
bound
sbb
push
fimull
add
xor
pop
cltd
js
mov
xor
cld
xor
aam
xchg
push
pop
sbb
jmp
cmpsl
in
jp
testb
mov
insb
cltd
ljmp
push
xorb
pushf
push
cmp
mov
add
je
xor
sahf
test
cmpsb
fadds
cli
ja
pop
add
mov
and
sub
stos
cmp
xchg
jecxz
lret
clc
mov
mov
jo
adc
push
ljmp
sub
mov
mov
xchg
lock
mov
cltd
mov
cmpsl
stc
stos
dec
arpl
or
add
cmp
jnp
adc
jne
push
movsl
orb
jmp
add
sahf
jb
xor
xor
cmc
rcrl
daa
cwtl
inc
jbe
mov
pop
push
pop
test
mov
xchg
ret
xor
pusha
mov
xlat
or
lahf
stos
out
lods
sti
bound
loopne
dec
or
clc
mov
pop
scas
aas
dec
repnz
aad
mov
mov
lret
pop
lods
jo
js
mov
rcr
jo
out
push
aam
pop
xchg
popf
lea
sbb
dec
pop
rcl
inc
lea
mov
sbb
andl
sub
xchg
sbb
lods
jmp
movsb
insb
adc
aam
mov
lret
or
popf
jle
cs
lods
sbb
aaa
out
out
sbb
sub
in
inc
iret
icebp
jb
sub
sbb
mov
mov
sbb
ljmp
loopne
jo
and
loop
incb
test
stos
test
add
add
subb
fistl
das
push
jmp
add
dec
popa
push
fcomp
dec
and
cltd
mov
jnp
lods
fnstcw
scas
cmp
test
mov
jmp
xchg
jns
xor
mov
pop
sub
pop
pop
cmp
xor
pop
cs
pop
adc
cmovne
push
cmc
cli
and
loop
or
js
adc
or
dec
dec
inc
in
push
testb
mov
jo
cmp
loop
fidivrs
mov
and
dec
and
sbb
stos
dec
sub
sub
daa
addl
out
or
call
std
push
push
das
mov
outsb
mov
pop
mov
xchg
andl
outsl
icebp
loopne
nop
ret
mov
xchg
mov
jg
sub
dec
rclb
data16
mov
jle
loop
call
mov
imul
popf
gs
mov
or
sub
push
add
add
jb
scas
decb
fisttps
cmp
dec
in
add
add
adc
lahf
sbb
fwait
mov
jp
pop
popa
outsl
sbbb
pop
sbb
xlat
outsb
or
mov
loope
insb
xor
mov
adc
xlat
jge
in
cmpsb
pop
mov
jge
pop
mov
das
cmc
rolb
inc
test
jae
out
outsb
loope
rclb
sub
mull
lret
jecxz
scas
xlat
xchg
adc
js
nopl
dec
cmp
lret
hlt
fcomp
in
les
aaa
add
mov
inc
sub
mov
jp
fsub
cmp
fcompl
sub
sub
loope
mov
add
nop
std
scas
add
or
lret
js
xor
insl
dec
je
ss
push
and
xchg
inc
nop
cmp
jp
adc
lea
lcall
mov
mov
gs
loope
lods
cmp
mov
int3
ss
mov
mov
add
xlat
mov
xchg
push
out
add
add
addl
and
pop
fistps
and
adc
loopne
fwait
mov
cwtl
lcall
gs
dec
int3
out
xor
dec
and
and
cmp
inc
inc
es
pushfw
ret
push
sti
stos
inc
fisubl
xor
pop
ret
sarb
jg
popa
pop
mov
ljmp
data16
inc
scas
shlb
adc
imul
lcall
lea
repnz
stos
cmp
lods
cld
xchg
adc
sti
mov
mov
add
dec
add
fdivl
and
cmp
insb
mov
add
mov
xchg
out
pmaxsw
xor
jge
loopne
mov
xchg
lret
rcrb
mov
hlt
subl
and
bound
and
mov
test
sar
mov
out
jno
fsubrl
enter
scas
dec
and
scas
mov
add
mov
aas
mov
cmp
add
stc
popf
pop
bound
inc
add
lret
jecxz
test
lcall
cmc
or
pop
add
mov
loop
cmpl
push
popf
call
mov
mov
push
dec
lods
inc
pusha
movsl
cmpsl
push
mov
aaa
pop
mov
jle
add
paddd
in
rcrb
lock
bound
pusha
mov
aam
pop
imul
sbb
pcmpeqd
lods
jecxz
mov
adc
lods
out
movl
repnz
rcrb
xchg
sarb
jbe
sbb
les
rorl
dec
lods
loop
outsb
mov
notb
out
aad
mov
cltd
lods
mov
cmpsb
xor
aam
inc
daa
into
loopne
xchg
push
or
xchg
shrb
call
in
inc
imul
cwtl
push
xlat
mov
aas
int3
loope
inc
mov
div
popf
sub
add
loop
fadd
sti
mov
xchg
rcrl
add
sbb
loopne
inc
into
jae
or
mov
xchg
mov
popf
mov
and
push
pop
ficoms
inc
aas
addr16
iret
out
xor
scas
push
pop
mov
scas
cmp
cmpsl
scas
or
push
sbb
cmp
call
jae
scas
xchg
sub
mov
incl
dec
lods
dec
sub
cmp
mov
and
mov
sbb
jecxz
mov
xchg
les
jbe
popa
mov
inc
lret
out
enter
sub
cmp
mov
lock
test
roll
rcr
xlat
mov
push
mov
xor
sub
add
xor
jl
setg
ja
mov
push
mov
rol
sahf
fldl2t
loope
scas
pop
sbb
pop
jge
notl
or
xchg
add
add
pop
pop
repnz
sbb
xor
jno
pop
jp
scas
jmp
add
push
cmp
adc
neg
jge
xchg
jns
add
movsb
mov
add
add
sbb
cld
into
push
dec
std
out
dec
clc
repnz
loop
adc
rcrb
dec
dec
cmp
bound
lcall
ss
jl
mov
xor
xchg
xchg
add
pop
push
rorl
dec
fstpt
pop
mov
dec
mov
add
pop
cmp
xor
mov
lea
dec
in
pop
pop
test
test
push
cs
mov
sbb
or
fnsave
rcll
test
fcmovnu
xchg
pop
test
pop
dec
pop
mov
xchg
aam
push
nop
jo
jo
ficoml
dec
arpl
std
jnp
mov
inc
xlat
sbb
push
jle
mov
movsl
mov
cmp
jmp
gs
negl
fdivrs
lret
test
loope
inc
xchg
fxch
ja
push
xor
insl
mov
xchg
and
test
jo
pushf
test
mov
pushf
lea
cmp
push
imul
add
pop
cmp
outsl
jg
jg
sub
ficoml
icebp
dec
arpl
add
add
ds
js
insl
push
cltd
or
cmp
sbb
push
daa
xchg
sub
ss
mov
mov
arpl
fdivrl
or
fnsave
dec
scas
negb
add
mov
sbb
es
mov
leave
int3
arpl
in
xor
xchg
jnp
cmp
push
mov
push
test
popf
mov
std
xor
fstl
push
or
aam
shll
mov
xor
mov
mov
mov
clc
dec
cmc
inc
sahf
cmpsl
pop
outsb
cli
popf
inc
sub
mov
xchg
add
in
dec
jl
int3
push
cmpsl
scas
shlb
out
add
mov
stc
mov
test
mulb
lret
and
aam
jmp
xlat
add
shl
mov
cmpsb
aaa
mov
shrb
jno
and
lds
movsl
icebp
dec
lock
xor
mov
ret
ja
and
aaa
divl
jne
jl
repz
add
sub
fdivp
pop
icebp
jbe
cmp
sbb
outsb
aaa
adc
xor
loop
and
and
pop
jae,pt
mov
daa
sub
jecxz
mov
shll
cmp
xchg
fwait
jno
daa
lret
mull
mov
out
mov
cmp
shl
repz
xor
pop
jge
add
hlt
lods
adc
mov
xchg
jecxz
sbb
pop
cmpsl
cs
cld
xchg
dec
dec
je
or
int3
xchg
test
data16
mov
dec
jns
and
mov
inc
jne
movsl
dec
and
dec
mov
pop
dec
mov
cmp
bound
iret
loopne
mov
stc
push
leave
mov
imul
inc
stc
test
sbb
push
shr
jmp
repz
push
mov
adc
in
mov
xor
lea
add
mov
cmc
mov
push
aam
mov
add
add
lock
pop
pop
sub
aam
push
stc
jmp
sub
mov
outsl
jle,pn
mov
inc
out
sbb
aaa
xchg
jecxz
mov
inc
cmp
pop
and
ds
out
leave
xchg
xlat
clc
mov
push
rcrb
pop
lret
in
add
pushf
insb
xchg
xor
mov
into
adc
fdivrs
pop
imul
adc
popf
das
dec
cmp
ja
insb
pop
mov
mov
scas
add
jmp
test
mov
sbb
daa
mov
cmpsb
gs
pop
in
cmpsb
mov
pop
test
add
cmp
es
adc
mov
movsb
cmp
xor
jle
shl
add
jne
xchg
add
cltd
add
inc
dec
xor
jo
adc
fidivrs
xor
push
lds
subb
fwait
jo
cmp
add
add
jne
pusha
popf
pop
sbbl
add
sub
or
sbb
pop
shrb
push
jno
out
pop
aaa
jne
xchg
das
mov
icebp
pushf
xchg
divb
jp
jmp
push
pop
push
add
and
andl
pusha
jb
xchg
popf
and
mov
int
lds
or
mov
adc
cmp
mov
jg
jno
mov
les
divb
push
test
push
push
sub
or
pop
push
push
test
aad
xchg
jp
sub
xchg
ja
or
pop
xchg
xor
mov
push
jns
popf
sub
mov
orl
push
jg
outsb
inc
lods
pushf
mov
fisttpll
fdivs
mov
test
jne
jns
dec
adc
jle
cmp
xchg
fcmovnbe
sub
sub
nop
daa
jecxz
lods
inc
xchg
gs
aam
sub
faddl
jne
jge
push
push
dec
add
add
imulb
mul
xor
add
add
add
xor
inc
into
xchg
int
cmc
jno
mov
mov
cmc
cmc
sti
sub
enter
jo
negb
dec
mov
jnp
mov
xchg
xchg
or
jnp
inc
data16
inc
stos
nop
roll
sbb
pop
gs
nop
mov
mov
ljmp
test
fistps
cmp
pop
in
mov
add
mov
mov
mov
shr
das
cmp
enter
fstps
mov
adc
call
mov
mov
sbb
mulb
ja
push
ret
call
inc
add
mov
dec
cmp
sub
test
dec
push
push
mov
or
adc
cmpsb
push
fwait
stc
gs
mov
aas
test
or
xchg
rol
sbb
jg
loop
lahf
shrb
push
push
out
in
add
add
add
xor
jb
jae
enter
jl
add
add
call
xor
cmpsl
mov
fisttps
fmull
fadds
mov
mov
fwait
imul
or
std
jge
arpl
cs
add
ret
push
sbb
mov
inc
out
add
jne
pop
cmp
mov
in
inc
fs
xorl
mov
adc
push
repnz
jle
mov
test
and
xor
das
and
test
testl
scas
jecxz
fisubrs
mov
jle
incb
push
fstl
and
sbb
xor
dec
jno
add
incb
inc
sahf
push
cmp
add
adc
outsl
into
sti
js
leave
sbb
add
add
ret
inc
jecxz
lcall
jecxz
add
mov
fsub
jl
mov
add
add
ds
in
idivl
js
mov
mov
clc
add
add
mov
xor
data16
mov
popa
mov
mov
in
xchg
jns
jno
leave
push
shlb
xchg
mov
and
mov
cmp
popa
cmp
ss
xor
lret
bound
xor
pop
ja
xor
aad
fbld
call
adc
aad
shrl
aam
xchg
inc
mov
sbb
jmp
mov
aam
pop
push
daa
fidivs
add
cmpsb
repz
jge
cmpb
lcall
lahf
pop
imul
xchg
fisubrs
mov
push
sub
jmp
dec
call
cmp
hlt
inc
xchg
lock
fwait
shr
les
test
adc
frstor
in
inc
pop
add
mov
sbb
mov
inc
sub
or
pop
idivl
ror
jb
shrl
xchg
push
les
add
add
jecxz
inc
cli
aas
into
lret
push
ljmp
add
cmpl
mov
ret
pop
mov
test
or
das
add
and
jg
mov
and
adc
mov
div
sbb
push
lds
movsb
dec
popa
and
push
dec
push
shll
js
clc
ja
add
pop
mov
insl
push
mov
gs
xor
adc
call
sub
dec
push
lret
stc
movsb
cmp
cltd
fcmovnu
mov
in
mov
gs
iret
movsl
cmpl
mov
rolb
loopne
and
xchg
call
jns
lret
nop
adc
stos
push
daa
sarb
jl
mov
es
adc
adc
sbb
adc
cwtl
scas
sbb
fists
mov
and
movsb
push
nop
sarb
xchg
push
les
test
mov
sub
loop
dec
hlt
inc
jle
sbb
add
add
lcall
xchg
sub
mov
add
add
test
sti
inc
push
jmp
add
or
in
in
pop
lcall
pushf
lahf
inc
outsb
or
add
mov
adc
test
idivl
push
sbb
int3
sbb
test
sbb
xlat
ucomiss
cmp
xor
lahf
xor
xor
fs
adcb
test
imul
mov
jbe
out
loop
stos
mov
clc
in
movl
and
or
cmp
or
std
lcall
sub
adc
nop
aaa
lea
clc
and
sahf
pop
mov
jno
dec
outsl
test
pop
popa
fs
mov
add
xchg
adc
leave
jae
or
dec
mov
xchg
int
lret
and
sbb
test
out
clc
add
add
jae
cltd
dec
mov
jno
sbb
add
add
test
in
dec
inc
jg
testl
frstor
push
pop
sub
outsl
imul
cmpsl
add
xor
fwait
scas
inc
mov
in
add
inc
pop
push
pop
dec
mov
sbbl
fwait
or
les
call
pop
ud2
pushf
test
into
pusha
push
in
imull
mov
mov
push
sbb
xor
les
jg
sbb
jl
jg
enter
clc
lods
imul
adc
loope
xor
xlat
push
arpl
loope
push
arpl
jbe
je
mov
and
sbb
imull
and
nop
sub
imul
mov
xchg
pop
lods
add
loopne
lret
mov
mov
lret
repz
mov
std
fidivrs
iret
out
jge
and
iret
in
pop
inc
test
addr16
ds
into
nop
out
cwtl
jle
push
sub
dec
sbbl
add
test
mov
movsl
xchg
and
inc
add
mov
push
dec
aad
sub
jp
add
adc
inc
ret
push
jge
and
push
fwait
jo
jbe
and
jle
push
pop
push
pop
cmp
js
enter
sarl
loop
test
lcall
aaa
out
or
in
int3
loop
push
mov
xor
sbb
jl
and
rcrb
pop
fcmovnbe
repz
adc
mov
or
xchg
bound
scas
sub
sbb
cmpsl
mov
sbb
jmp
add
das
sub
ret
jno
adc
jg
sbb
dec
add
mov
or
cld
cmpsb
andl
or
add
push
lahf
inc
sub
inc
push
lcall
pop
push
loopne
ljmp
add
jno
test
jg
push
pop
push
mov
lcall
add
cmpsl
mov
in
lods
mov
fs
ret
inc
xor
cwtl
jecxz
adc
jl
jl
jmp
mov
sbbl
push
lret
or
mov
sahf
jp
pop
int
xor
fbstp
pushf
mov
arpl
sahf
cmp
sub
fadd
ror
dec
mov
add
das
testb
rcrb
pop
jg
sub
mov
clc
std
sbb
shll
jge
out
pop
adc
cmpsl
mov
lcall
add
mov
dec
add
jge
pop
pop
dec
in
out
sti
xchg
popf
mov
mov
iret
inc
bound
decl
lock
push
mov
xor
pop
xor
in
jae
movsl
loopne
dec
hlt
popa
mov
adc
fdivp
std
out
mov
dec
arpl
ret
mov
adc
movsb
push
in
cmc
jne
sbb
js
outsl
shl
lahf
incb
add
and
das
jnp
dec
in
add
lahf
and
mov
mov
jp
dec
pusha
mull
mov
adc
leave
sub
outsb
das
or
cmp
movsl
shr
pop
xor
stos
adc
ljmp
sbb
fdivrs
aad
jnp
dec
xchg
jmp
pop
inc
andb
jmp
dec
out
loopne
mov
sbb
jle
ret
push
popf
out
adc
sub
jmp
xchg
in
and
into
mov
dec
inc
adc
xchg
movsb
leave
shlb
sub
mov
xchg
push
jge
loope
add
adc
loopne
fwait
jl
dec
or
enter
es
inc
adc
jo
shlb
mov
add
xchg
test
mov
movsl
pop
dec
roll
popf
movsb
test
xchg
xlat
sbb
mov
adc
stos
xchg
pop
push
andl
stc
mov
dec
in
lods
lret
add
add
out
shlb
aas
out
int3
mov
nop
cmpsb
mov
add
xor
adc
jg
mov
aaa
xor
sbb
sbb
dec
mov
push
fwait
int3
int
xor
test
xor
mov
iret
fldenv
jmp
lea
pop
jp
fmul
jmp
cmpsl
sub
mov
les
daa
jae
gs
push
in
ficoms
push
cs
ja
sub
xchg
roll
jl
pop
lcall
mov
pop
imul
jne
push
mov
lahf
mov
xlat
push
and
mov
dec
iret
push
pop
sbb
push
popa
divb
mov
scas
add
fisttps
out
fs
add
outsl
inc
pop
mov
jb
daa
popa
dec
push
and
loopne
mov
hlt
dec
xchg
cmc
jmp
mov
pop
cli
mov
ljmp
and
xor
bound
test
mov
mov
out
scas
xlat
in
push
hlt
das
dec
movsl
pop
push
sbb
add
or
mov
and
add
add
stos
dec
ljmp
xchg
daa
push
in
fistps
fcompl
and
imulb
pop
pop
add
fidivrl
mov
or
ds
pop
aas
fwait
inc
pop
fldt
insl
cmp
jo
lea
fcompl
cmpsl
andl
xchg
ret
cwtl
lea
arpl
stos
jb
cwtl
dec
mov
mov
ret
xchg
or
dec
decb
repz
push
pop
mov
addr16
aad
push
mov
pop
dec
mov
nop
or
sbb
sbb
and
jmp
cmp
mov
xchg
pusha
orb
fdivr
imull
sub
enter
insl
cmpsb
dec
out
mov
adc
fs
add
mov
out
pushf
cmp
or
jns
mov
mov
jge
dec
ss
xor
shufps
out
sbb
pop
imul
add
ret
bnd
cmc
inc
stos
repz
add
add
jno
push
sbb
cld
xchg
and
movsl
je
pop
lcall
mov
loop
cmpsb
je
repz
xchg
lahf
xchg
xchg
jg
mov
jno
cmp
cltd
lcall
pop
pop
in
popa
mov
mov
pop
mov
movsl
sbb
inc
clc
push
loope
test
jp
stos
or
dec
xchg
mov
int3
xchg
shrb
test
lcall
repz
mov
imul
lret
fwait
clc
dec
push
andb
or
in
out
pop
pop
cmpsb
leave
loop
call
aas
mov
sbb
fs
js
add
xor
sub
lock
xor
lcall
sbb
jmp
cmp
and
and
jl
adc
fdivl
cwtl
mov
sbbb
mov
lock
das
dec
aad
mov
add
out
add
add
add
std
aaa
mov
shll
mov
mov
sbb
rcrb
pop
movsl
rol
xchg
setae
pushf
push
lds
xchg
sbb
dec
mov
dec
adc
jno
jmp
xlat
shlb
sbb
mov
mov
loopne
sti
dec
jne
push
jl
mov
test
dec
daa
dec
lds
add
ss
dec
add
pushf
repz
jbe
call
jmp
inc
jb
lret
xor
add
cmp
ds
int
cmp
inc
push
fcmovnb
jno
frstor
xchg
push
sbb
pop
cmpsb
enter
mov
cltd
aam
out
fbstp
mov
mov
jmp
lds
pop
lods
stos
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
xor
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
ss
add
ss
add
ss
add
ss
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
jecxz
enter
lds
loopne
jecxz
mov
jg
add
add
jns
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
