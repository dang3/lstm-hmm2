push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
lods
pop
mov
jl
pop
jl
adc
and
popa
pusha
aas
fs
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
mov
in
scas
fs
nop
insl
push
fwait
adc
or
jmp
sub
ds
sbb
hlt
adc
outsb
pusha
mov
cmp
sbbb
jmp
loop
dec
mov
or
jp
mov
outsl
int3
pop
clc
rorb
daa
int3
bound
jmp
inc
notl
pop
add
ss
dec
psubsb
or
mov
jne
hlt
repz
loope
cmp
sbb
out
imul
idivl
xor
jp
jmp
pop
aad
push
in
sub
daa
and
cs
dec
jb
leave
fs
mov
cltd
sub
arpl
lret
fucom
repz
pusha
lahf
fnstenv
je
cwtl
lret
mov
ficoms
lret
mov
icebp
or
fmull
and
or
cmp
cmpsb
xchg
mov
es
or
sbb
jmp
int3
add
dec
fdivrl
or
into
lock
pop
mov
adc
pop
fsubs
jnp
jbe
insl
cmpb
mov
jo
arpl
pop
xor
int3
sub
idivb
in
into
aam
mov
enter
lcall
push
push
popf
sahf
shl
movsb
push
scas
inc
loopne
scas
stos
add
mov
sbb
cmp
notl
mov
adc
cmc
jbe
push
pusha
and
pop
stc
out
fwait
adc
mov
sub
sub
pop
jp
fnstsw
xchg
jl
xchg
pop
leave
xchg
push
xchg
lcall
stc
xchg
jno
mov
jecxz
jae
outsb
jns
nop
cmp
xchg
mov
mov
and
cwtl
xor
pop
lock
hlt
pop
dec
adc
test
shlb
lahf
out
pop
aas
arpl
pop
dec
xor
subb
test
bound
scas
pusha
cld
push
jo
push
push
and
lcall
mov
mov
ret
movsb
andl
mov
mov
cmpsb
pop
fs
pop
cltd
shll
rcl
lahf
outsb
xchg
mov
cmpsb
incl
push
sub
scas
mov
or
mov
push
cmp
jo
jne
adcl
nop
jg
daa
lods
sbb
iret
aaa
xor
pop
add
inc
push
sbb
mov
cltd
test
lods
repnz
cli
adc
repnz
cld
loopne
push
push
pop
das
xchg
pop
mov
movsb
les
and
clc
scas
pop
lahf
aad
cli
add
popf
push
xchg
and
lret
mov
dec
and
jo
add
jnp
cmpb
imul
pop
or
mov
or
cmc
movsb
xor
in
stc
fisubs
movsb
adc
cs
mov
push
out
or
add
pushf
movsb
pop
lock
bound
xchg
sbb
cs
insl
sbb
insb
dec
or
cli
fsubrl
inc
out
xor
or
ds
or
cli
xor
adc
idivb
push
js
pop
fcmovb
inc
call
mov
cmpl
or
popf
sbb
inc
les
cltd
test
jge
pop
fucomip
insb
sarl
int3
cmc
mov
adc
mov
jne
sti
lods
fimuls
mov
gs
add
mov
repz
sub
xor
jmp
test
push
rcrb
mov
pop
xor
sub
add
sbb
cmc
dec
jbe
or
daa
popa
fidivrs
jno
xchg
sbb
jae
mov
call
sub
insb
mov
aaa
popa
loope
enter
xor
out
stos
ret
or
pop
aaa
mov
or
pop
pop
loop
xchg
shlb
nop
icebp
rcr
subl
lahf
fwait
into
mov
xchg
insb
xlat
repnz
adc
mov
hlt
mov
mov
arpl
push
xor
mov
push
mov
push
dec
pop
stc
scas
cmp
xor
mov
incb
hlt
in
push
sti
sub
into
pusha
mov
movsb
js
sbb
test
mov
arpl
sti
mov
push
inc
call
loope
std
jae
aaa
xor
ds
pop
inc
cli
push
and
push
subl
fs
gs
jge
lret
xchg
pop
push
subl
jmp
push
enter
es
pop
sbb
dec
test
cld
jno
push
xor
jb
sti
cltd
fcomps
adc
dec
jne
orb
cltd
mov
pop
jae
stos
fists
stc
ret
insb
in
or
pop
out
mov
inc
mov
mov
push
adc
dec
push
lret
fldcw
insl
aam
aad
outsl
pop
lahf
mov
sbb
testb
ss
and
inc
sub
jo
push
push
cmp
and
imulb
sbb
xlat
push
cmpsb
inc
cmp
xor
out
mov
fistl
xor
and
sahf
repz
mov
dec
fsubrl
mov
mov
mov
and
stos
lea
call
cmp
hlt
outsb
mov
fidivs
fstl
dec
in
push
mov
js
push
enter
mov
or
push
push
cwtl
sbb
stc
movsl
mov
loopne
cmpl
dec
add
repnz
outsb
call
lret
movsb
dec
aam
push
dec
addb
xlat
jmp
cmp
adc
ret
and
adc
and
lods
mulb
daa
out
call
lock
lahf
jae
gs
pop
in
popf
mov
ror
in
add
fisubrs
bound
stos
in
in
in
jns
stos
cltd
push
stos
ljmp
adc
out
loope
mov
dec
mov
in
iret
or
fwait
clc
push
ds
sbb
rolb
cmpsb
aas
loopne
ljmp
inc
popa
mulb
scas
into
imul
repnz
nop
mov
cwtl
xor
stos
insl
jge
lock
pop
xchg
mov
mov
jns
jns
push
xorl
or
clc
dec
sbb
loop
xchg
lock
mov
jecxz
push
cmp
jae
mov
push
push
pop
cltd
call
or
xchg
cmp
jno
sub
movsb
jecxz
push
mov
inc
jmp
xchg
clc
dec
mov
pop
push
add
xchg
push
fwait
inc
mov
cld
fucom
add
and
repnz
ficomps
pop
xor
std
ss
mov
ffree
hlt
fisttps
sub
sub
mov
adc
adc
iret
push
mov
fistl
insb
test
sub
dec
inc
adc
cli
scas
and
ja
fisttps
aad
mov
inc
mov
add
xchg
ret
sbb
in
jl
and
dec
sbbb
js,pt
mov
cmp
dec
sub
and
inc
cmpsb
jne
fistl
adc
push
mov
cld
repz
mov
ds
xchg
and
or
stc
sbb
xchg
sub
ret
lea
loope
mov
jae
ret
xchg
push
outsb
fisubrs
inc
and
xor
jle
stos
in
lcall
sbb
or
jo
push
rcrb
push
ret
ret
mov
ret
shr
cmp
xchg
jns
push
inc
push
movsb
dec
test
lds
es
mov
enter
clc
sbb
imul
jl
pop
jb
add
add
aaa
cmc
lea
inc
out
fildl
adc
std
xor
jne
xor
or
mov
cmp
sbb
mov
or
fwait
gs
xchg
fwait
jns
incb
inc
fs
inc
cmp
and
jmp
dec
cltd
inc
mov
jge
lods
dec
jno
gs
sar
outsl
ja
sub
leave
ss
lcall
hlt
push
sub
lea
xor
data16
js
mov
std
dec
or
fimuls
adc
sub
enter
sub
xchg
incl
xlat
ss
fwait
add
ficoms
mov
subl
in
push
pop
hlt
rcr
sbb
cmp
test
in
dec
or
test
xchg
xchg
add
mov
sti
jmp
xchg
call
or
test
stos
cld
lods
jmp
sub
push
xchg
jmp
data16
scas
ret
mov
pop
in
dec
jns
mov
jp
push
jmp
out
aam
dec
cmpsb
les
adc
pop
arpl
mov
sahf
xlat
push
mov
cmpsl
mov
mov
sbb
dec
mov
sahf
xchg
xchg
shll
addr16
inc
xchg
loop
int3
mov
push
sub
scas
cltd
into
shll
xchg
aas
mov
test
cmp
mov
fildll
cmp
cmp
scas
jmp
rolb
jl
call
cmp
and
lds
lods
ret
and
fs
repz
sub
lret
push
ljmp
mov
mov
ljmp
mov
shll
lret
js
jno
cmp
lods
mull
mov
pushf
lret
jge
das
dec
stc
scas
icebp
xor
sti
nop
aad
jg
int
sub
call
dec
pop
clc
dec
sar
lret
jge
mov
roll
cmp
dec
sarl
or
xchg
adc
xor
pop
jns
lds
cmp
nop
cs
call
and
dec
inc
or
mov
add
mov
je
cmp
cmp
xchg
xchg
fs
mov
or
out
push
sub
or
or
ret
loopne
mov
into
ss
ret
or
jnp
xchg
imul
dec
cmp
addl
push
mov
sbbl
out
xchg
pop
gs
xchg
push
adc
fs
stos
inc
push
fnstenv
inc
test
scas
and
or
dec
push
cmp
pushf
xchg
insl
inc
push
loop
sarb
in
scas
xor
dec
test
in
loopne
lea
mov
push
divb
cltd
xorb
cs
jns
pop
xchg
in
dec
mov
dec
lret
fisttps
xor
adc
mov
dec
aam
cmc
scas
adc
test
cltd
icebp
adc
int
or
pop
xor
repz
jge
shr
outsb
mov
cltd
cmp
nop
fdivs
xchg
adc
jne
mov
dec
push
push
lods
and
lahf
fldcw
sub
enter
xor
sbb
aam
xchg
ret
in
call
leave
mov
cltd
sub
sti
mov
sub
jo
icebp
rorl
jp
mov
sbb
ss
stos
mov
scas
mov
inc
stc
decl
push
cs
test
add
sbb
xor
fnstenv
popf
jmp
add
pop
sbb
inc
cltd
mov
icebp
mov
push
das
jo
add
sub
xchg
cmp
or
cmp
mov
jbe
jne
insl
sbb
inc
cmp
divb
jnp
cltd
outsl
pop
faddl
pop
pop
scas
lds
jle
ret
enter
ds
mov
jb
stc
sarl
jae
push
das
pop
out
ficoms
dec
gs
pushf
adc
outsb
outsb
pop
popa
subb
mov
inc
sbb
cmp
xlat
jo
push
dec
call
jl
push
jno
dec
test
icebp
jb
cltd
lods
fstpl
enter
clc
and
adc
jl
cwtl
aad
xchg
inc
inc
movzbl
pop
adc
inc
cs
cli
and
ds
dec
xor
jg
pop
inc
mov
lcall
mov
sub
push
adc
sub
fbld
lahf
repz
lret
inc
mov
out
dec
hlt
mov
sbb
in
enter
mov
xchg
xor
mov
mov
cmpl
mov
hlt
and
xor
call
bound
cmp
xor
push
icebp
out
inc
push
sbb
pop
popf
lret
sub
mov
mov
cmp
jecxz
xor
or
imul
loope
and
loop
mov
jge
mov
xor
sub
xor
cmp
mov
push
imul
in
leave
mov
cmp
scas
sbb
sbb
inc
out
daa
testl
outsl
scas
cs
dec
pop
outsb
xor
xlat
ret
mov
mov
pop
mov
popf
out
cmp
or
test
scas
enter
je
rorl
andb
xchg
das
psubsb
and
fisubrl
and
add
lods
enter
cmc
push
shrl
xor
repz
mov
into
mov
mov
ss
dec
inc
hlt
sbb
and
outsb
mov
nop
add
inc
test
sahf
mov
dec
lea
ret
lock
jo
xchg
jmp
cmp
pusha
add
mov
pusha
pop
cs
cmp
cmpsl
subb
aaa
loop
push
inc
pusha
shll
sub
lret
jge
mov
pop
orl
jge
fdivrl
jmp
push
push
pop
fsubp
pop
mov
repz
loope
push
cmovle
insl
sbb
add
dec
inc
sub
leave
push
sbb
pop
pusha
and
mov
out
scas
jnp
neg
shll
hlt
pop
mov
outsb
cmc
jge
add
fiadds
ror
mov
and
inc
testl
jle
jns
dec
push
sahf
in
stos
mov
xor
scas
insl
movsl
dec
mov
or
fidivrs
fimuls
mov
inc
inc
pushf
aam
mov
jns
leave
dec
or
xchg
pop
add
jne
and
mov
fildl
push
test
xor
lret
cwtl
popf
or
inc
lods
sarb
push
cmp
sub
enter
mov
lcall
xchg
xchg
and
mov
mov
inc
repnz
cmp
fisubrs
pop
out
loope
aas
xor
lcall
inc
mov
mov
and
into
cs
fiaddl
mov
jno
dec
pop
cmp
loop
xor
cmp
xor
inc
xchg
pop
rorl
or
gs
mov
repnz
jmp
clc
xor
pop
out
jae
int3
ret
dec
push
imul
cltd
call
inc
xchg
jnp
into
fadd
cltd
inc
lods
addl
and
ljmp
jl
mov
pop
add
xchg
mov
add
andl
push
fcomp
inc
mov
test
into
add
int
mov
cld
jns
les
aas
jae
mov
mov
rcrb
dec
push
inc
dec
push
incl
pushf
orb
push
dec
fstpl
add
xchg
cltd
jmp
adc
imul
xchg
and
adc
aas
loop,pn
push
push
rorb
lcall
or
xchg
or
mov
pop
rcll
fildl
jno
jle
lcall
outsb
pop
mov
test
fists
pop
and
jne
sbb
mov
stos
add
pop
icebp
and
shll
lds
movsb
aas
mov
jmp
icebp
sbb
int3
pop
jbe
add
push
arpl
mov
xchg
jge
xchg
in
lret
jb
pop
push
stos
xchg
movsb
inc
fnsave
aaa
push
push
xchg
mov
jb
fwait
sbb
mov
and
xlat
pop
enter
pop
push
rcrl
rorl
add
fwait
adc
sub
xlat
outsb
cld
mov
sbb
lds
sub
or
xchg
and
addr16
out
stc
push
jge
scas
xchg
mov
push
mov
push
int3
jbe
es
xchg
repnz
jmp
outsb
stos
adc
dec
js
jne
cmpsb
in
mov
sub
xchg
mov
jo
pop
movsb
in
adc
loopne
repnz
aaa
inc
sub
je
mov
mov
cmp
add
pushf
add
mov
mov
ret
adc
es
sub
cmpsl
cmp
mov
and
push
pop
cmp
and
lds
imul
inc
dec
mov
add
cmp
sbb
jns
jno
shrb
repz
scas
xchg
mov
dec
xchg
and
adc
pop
mov
mov
pop
pop
rol
sub
pop
mov
inc
push
movsb
imul
ja
imul
lret
push
lods
jmp
jle
and
sub
aaa
or
dec
pop
fisubl
push
mov
push
mov
mov
getsec
push
mov
mov
or
mov
mov
rcl
and
jbe
pop
sbb
jg
adc
orb
dec
orl
andl
cltd
insb
lods
adc
cmp
aas
loopne
data16
lods
inc
sub
inc
xchg
daa
stos
int3
add
push
xor
subl
ffree
daa
xchg
popf
adc
ds
mov
cwtl
inc
or
mov
xor
cmp
xchg
pop
stos
jg
rcrb
push
inc
in
mov
lods
mov
decl
pop
cmp
inc
stc
inc
dec
push
mov
leave
sbb
or
mov
loop
ds
cmp
sub
aaa
dec
popfw
sbb
mov
stos
cmc
adc
lahf
dec
mov
mov
adc
dec
xchg
or
push
xor
test
mov
mov
stc
pop
lea
pop
fstpt
mov
leave
add
pop
iret
xchg
jg
mov
push
inc
pop
sub
orl
ret
icebp
fs
cmp
repnz
xor
xor
jo
aam
test
xchg
cmp
aam
inc
xor
fnstcw
insb
xchg
push
add
push
test
xchg
mov
inc
ret
inc
xor
xchg
pop
push
adc
fcoms
xchg
and
int3
jge
es
push
jae
lods
adc
test
sbb
fadd
scas
sarl
xor
lods
xchg
mov
push
rcl
ret
push
outsl
xor
jge
xor
sbb
mov
mov
test
pop
lret
cmp
rcr
inc
xchg
ret
lods
sub
xchg
cmp
andl
sbbl
movsl
pop
test
es
push
sub
xor
or
movsl
pop
in
jb
imul
cli
xchg
fisubrs
iret
ret
mov
sub
std
xlat
jmp
sbb
inc
hlt
mov
and
cli
mov
push
sti
test
in
push
test
push
out
sub
jl
in
jb
sbb
mov
ljmp
cmp
bound
ret
push
lea
pop
xchg
jg
ret
test
out
out
adc
ret
ljmp
enter
xor
aam
or
add
in
pop
cmp
mov
jo
push
and
into
mov
scas
jns
stos
sub
fisubrs
in
cmpl
and
clc
cld
sbb
lahf
pop
xchg
mov
into
mov
mov
ret
push
mov
dec
addl
out
adc
jmp
add
xchg
jge
je
int
adc
adc
sti
mov
adc
mov
icebp
xor
fcoms
sarl
insb
or
pop
aaa
scas
sbb
or
test
push
mov
cmp
jp
and
add
jb
lret
daa
aaa
mov
ficoms
shll
sahf
xchg
lock
out
data16
out
insb
push
adc
out
pusha
adc
rcr
mov
pop
test
insb
mov
in
push
or
push
popa
int
jp
fcoms
cmp
mov
sub
jns
subl
add
sti
sahf
pop
subb
jmp
sbb
bound
cmpsl
xchg
push
dec
sub
out
dec
mov
and
rcrb
dec
jno
mov
insl
hlt
xchg
mov
lock
cmp
cmp
je
test
xor
and
mov
clc
xor
das
mov
mov
xchg
insl
jb
dec
les
add
push
mov
mov
inc
movsl
xor
andl
mov
enter
push
jo
pop
inc
fldenv
shlb
shrb
push
add
add
push
pop
fcmovnbe
in
cmp
or
repnz
sbb
xlat
push
je
lea
pop
enter
ja
aad
push
aad
mov
jp
or
push
push
add
cmp
in
into
mov
adc
sti
in
push
xchg
sub
lahf
jg
jl
mov
and
daa
and
into
mov
add
lret
xor
xlat
nop
cli
sbb
es
xor
push
pop
enter
dec
mov
and
mov
sub
push
lods
mov
mov
outsl
addb
sub
clc
adc
push
out
sbb
sub
cmc
adc
aad
daa
lret
adc
jle
and
jecxz
or
js
lcall
add
ss
inc
or
popf
addb
std
mov
cmp
pop
fdiv
andl
loopne
ljmp
mov
rol
cmp
pop
popf
mov
jno
push
mov
repz
xor
dec
pop
decb
mov
and
data16
jp
out
fldt
jns
sub
add
mov
mov
xchg
cld
mov
pop
stos
repnz
pusha
cwtl
test
adc
cmp
and
jge
mov
jge
js
loop
mov
decl
in
push
insb
scas
pop
push
mov
inc
gs
lea
insb
sub
push
jp
bound
or
sub
shl
push
ret
jae
lret
push
dec
cmp
adc
cld
call
push
mov
in
sub
lahf
inc
fiadds
cmp
shr
pop
jge
adc
orb
mov
pop
loope
pop
pushf
mov
pop
test
imul
fdivl
psllq
sbb
jecxz
or
jp
sub
rol
fisubrl
insl
adcl
mov
mov
dec
shlb
and
mov
mov
mov
push
lods
jle
test
cmp
pop
xor
mov
out
xor
std
xor
mov
jp
sbb
cli
pusha
hlt
push
loope
cmpsb
inc
jne
xchg
jno
cmp
cmp
cmpsb
jge
pushf
and
xchg
fsts
js
scas
xchg
popa
push
mov
into
ds
mov
sbb
mov
mov
sub
xor
sbb
test
pop
cld
jp
aas
mov
clc
mov
paddd
cmp
or
add
cmpsl
add
inc
dec
adc
loop
lods
mov
popl
ljmp
mov
mov
in
pcmpeqw
jl
lret
cmp
dec
das
fsubs
push
jg
inc
pushf
sub
lock
pop
int
mov
push
dec
das
adc
inc
imul
cmp
cs
out
sub
iret
iret
add
mov
test
loope
ficomps
cltd
jmp
jecxz
jle
pop
mov
jle
into
shrl
mov
popa
mov
movsb
add
lock
cltd
lock
ret
add
loop
or
popa
or
fs
movsl
fimuls
or
daa
or
fisubrs
loopne
ds
fs
push
sbb
test
inc
push
pushf
cmpsl
scas
iret
add
add
fisttps
xchg
dec
or
sub
add
xchg
dec
jbe
arpl
pop
outsb
push
icebp
jne
pop
mov
stc
ja
dec
xor
shl
aas
inc
jns
addr16
adc
add
data16
mov
movsb
inc
notb
ljmp
xchg
push
inc
xchg
jnp
mov
and
jp
dec
pushl
pop
and
sbb
pop
lock
or
dec
sbb
pop
adc
movsb
jbe
mov
mov
lods
push
mov
scas
mov
push
jns
mov
inc
or
and
movsb
ficoms
ret
hlt
sub
pushf
mov
pop
mov
jl
pop
xor
scas
push
jg
cli
adc
movsl
shr
jo
or
gs
jl
push
cld
add
pop
pushf
enter
test
add
lret
stc
inc
clc
rol
add
insl
sbb
sub
mov
dec
adc
push
adc
add
add
das
mov
movsl
sub
ljmp
imul
lock
mov
add
jne
in
jge
enter
inc
add
adc
mov
lock
lods
xor
mov
mov
mov
cmp
icebp
or
push
cmpsb
pushf
subl
cmp
cmp
into
and
adc
inc
stos
push
loope
out
xor
push
add
push
jl
pusha
outsl
pop
pop
add
push
fwait
mov
jae
out
hlt
stos
and
dec
sbb
push
fwait
push
jbe
fstpt
scas
mov
mov
sub
shl
adc
mov
and
movsb
popa
lcall
leave
lret
jmp
mov
pop
loopne
ret
or
into
dec
lret
adc
dec
jge
fs
jns
or
lret
nop
jmp
lcall
aam
int3
sbb
or
aaa
ret
jle
jne
cmp
rcll
pop
xlat
dec
stos
pop
inc
sbb
sarb
test
jl
mov
imul
lea
cmp
into
iret
cmovbe
mov
xor
lret
movsl
cmc
cmp
dec
scas
mov
mov
and
lods
or
stos
add
je
cmp
mov
xor
mov
shr
ss
or
push
pop
add
xor
out
into
mov
outsl
scas
push
je
ficomps
cli
jno
lods
pop
into
xchg
call
cli
adc
in
push
scas
jg
mov
mov
mov
lods
popa
bnd
popf
jg
test
pushf
adc
pop
lods
cmp
push
lcall
push
cmp
cmp
add
xor
ds
add
mov
loopne
jl
adc
pop
jno
dec
jmp
arpl
je
cmp
bound
sahf
mov
inc
mov
dec
dec
jae
mov
hlt
push
fucom
xorb
sub
mov
and
jno
out
mov
adc
popf
adc
fld
addl
xchg
mov
cmp
xchg
loopne
and
testb
popa
sub
fdivrl
inc
outsl
sahf
test
insw
mov
scas
add
fs
cmp
mov
jle
xor
outsl
roll
int
xchg
fisubrl
mov
jno
ss
test
bound
insl
in
cmpsl
das
mov
into
sub
in
mov
sub
dec
cmp
ljmp
mov
jp
sub
sbbb
jecxz
dec
enter
xchg
mov
jp
cwtl
xor
sbbb
dec
adc
sarl
jno
xlat
xor
xor
cmp
push
stos
rcl
push
repnz
sbbl
xor
insb
cmp
sbb
imul
int3
jecxz
xor
call
aad
inc
and
test
fs
int
and
out
rclb
cmp
movsb
unpckhps
cltd
push
sahf
rcr
jle
sbb
push
pop
fdivrs
cmpb
cmp
ret
cmc
mov
sbbl
mov
jae
dec
mov
sbb
jnp
dec
inc
clc
scas
outsl
ss
insb
test
pop
cld
push
mov
pop
cmc
stos
xor
enter
mov
shlb
mov
fs
lar
sahf
fistpll
mov
xchg
insl
or
inc
xor
sti
aam
jp
subb
imul
inc
jbe
mov
pop
cmp
inc
repz
push
into
or
add
aas
fs
stc
lcall
pop
in
push
adc
jmp
xchg
sbb
push
push
pop
or
or
dec
mov
or
mov
xor
add
ja
in
add
int
lock
dec
inc
cmp
lret
stos
cmc
das
enter
loope
xor
std
ss
stos
pop
jg
mov
sbb
addr16
sub
mov
cmc
xchg
icebp
insb
mov
mov
push
push
cmp
adc
in
xchg
cwtl
cld
push
mov
mov
jmp
mov
cwtl
pop
pop
cltd
lds
jae
pop
push
push
add
push
jns
movl
or
popa
mov
test
mov
cmp
popf
dec
sar
xchg
bound
sbb
mov
gs
inc
mov
ja
mov
add
out
mov
outsl
fimuls
jns
repnz
hlt
rolb
test
xchg
aad
mov
ss
and
jno
dec
sti
cmp
mov
inc
mov
scas
std
fs
sbb
fistl
cmp
pop
jmp
push
cmpl
enter
divb
jnp
xchg
cltd
sbb
bound
stos
pop
pop
sti
cmp
mov
sub
lret
addr16
mov
negl
mov
dec
push
sub
or
das
sbb
lds
push
dec
push
pop
push
jl
scas
jns
popa
jle
add
mov
mov
sbb
cmpb
xchg
in
or
outsl
int3
push
ljmp
test
and
movsb
sbb
shlb
aaa
popa
jle
sub
cmp
or
ss
pop
cmp
add
je
jge
in
test
push
cmp
mov
fisubrs
sbb
repnz
aad
imul
sbb
loopne
dec
mov
and
adc
xor
jp
imul
push
jnp
lods
jle
xchg
jno
rep
gs
ret
push
aaa
lcall
cmpsl
lcall
scas
icebp
jl
je
inc
lahf
test
xor
mov
arpl
cmp
add
ret
push
outsb
pop
dec
icebp
sbb
loopne
or
adc
adc
pop
adc
stos
inc
loope
sbb
lods
xchg
inc
inc
loopne
aas
push
add
es
lret
std
jge
arpl
sahf
sub
in
pop
adcl
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
pop
jl
dec
pop
jl
sbb
jle
mov
adc
subps
movsl
pop
iret
mov
pushf
lcall
cmp
add
mov
sbb
push
sub
dec
test
cmp
jno
cmp
sub
inc
mov
int
jmp
imul
sbb
jo
inc
clc
push
and
inc
subb
sbb
sti
adc
leave
pop
mov
jge
adc
scas
test
fsubrp
stos
xor
lock
dec
sbbb
jge
popa
mov
lret
add
xchg
fiadds
mov
gs
movd
test
and
jns
xchg
ja
xor
popa
call
push
pop
inc
loope
lret
fucomi
mov
add
cld
bound
testl
push
lds
in
mov
fwait
roll
insb
pop
sub
bound
sbbl
mov
pop
popa
sbb
or
mov
adc
nop
mov
insl
pushf
add
sub
fmuls
dec
hlt
je
push
xchg
cmpb
in
test
leave
xchg
mov
jno
call
decl
in
lods
data16
rolb
mov
nop
mov
repz
and
add
test
fld
popf
test
popa
pop
movsl
dec
hlt
inc
inc
xchg
xchg
fidivrl
xor
jg
cmp
stc
sbb
push
xor
outsl
shlb
in
sub
xchg
mov
xchg
int
dec
fldl
xorb
and
ficoml
cmp
loope
jmp
je
or
jl
push
shlb
dec
add
sbb
jno
push
sub
push
imulb
push
jb
mov
add
jge
push
lea
pop
les
inc
push
push
clc
push
cltd
mov
repz
outsb
stos
loope
loope
jmp
clc
stos
and
lock
xor
daa
push
aad
push
pop
sub
push
jmp
mov
arpl
or
inc
in
cli
inc
add
je
lods
test
andl
mov
jg
or
mov
dec
adc
add
repz
leave
or
push
jnp
and
out
push
lret
popa
into
data16
arpl
jge
xor
jo
xor
jbe
jg
fs
jmp
iret
in
repz
pusha
fimull
or
fwait
hlt
cwtl
lock
xor
xor
and
xchg
ds
mov
push
fcomps
repnz
lods
ret
sti
and
pop
shrb
mov
pop
andl
add
shrb
enter
cmpsl
mov
insl
in
dec
mov
cmp
jmp
sub
sahf
add
testb
jecxz
dec
pop
pop
and
or
mov
fstps
leave
cmpsl
mov
mov
repz
inc
fisttps
test
inc
outsb
xchg
popf
or
dec
ret
fwait
scas
xchg
add
push
insb
aas
xor
jo
insb
mov
jecxz
mov
cmp
and
into
dec
mov
add
lds
push
sub
out
rorb
and
dec
sahf
es
jle
cltd
popa
pop
std
jp
mov
testb
es
push
xlat
loope
cmpsl
movb
repnz
push
inc
cmp
dec
movsb
out
xor
aaa
imul
push
cwtl
cmp
xor
sbb
sub
aad
adc
loopne
lahf
xchg
mov
mov
popa
aas
ja
inc
xlat
sbb
pushf
gs
int3
add
ja
icebp
imul
xlat
sbb
ds
xchg
popa
in
call
mov
mov
cs
xchg
loop
loope
pop
ds
xchg
cld
xchg
call
fidivl
outsb
movsl
sub
data16
pop
or
gs
hlt
dec
jge
mov
sub
mov
xchg
and
inc
adc
pop
int
xchg
popf
cmp
nop
adc
scas
cmp
add
jns
pop
cs
cmc
xchg
inc
inc
sub
fstl
iret
inc
frstor
mov
lret
sub
jnp
sub
adc
insw
sub
sbb
inc
push
rclb
dec
inc
dec
add
cltd
mov
andb
add
mov
test
fwait
push
lret
je
subb
cmp
sub
mov
xor
les
pop
jnp
mov
dec
jb
out
xchg
adc
cld
pop
in
enter
mov
mov
sarl
xor
cmp
idivb
into
dec
popa
in
pop
mov
dec
scas
mov
pop
mov
loopne
xchg
insl
orl
std
and
jecxz
jge
mov
cmp
out
jmp
jno
lret
jp
scas
imul
lret
or
xorl
pusha
jno
lret
push
cltd
dec
or
roll
repnz
dec
pop
cs
mov
jne
popa
aam
shrb
adc
or
jl
cmp
jno
sbb
pop
xor
aas
inc
or
rorl
mov
cmp
inc
inc
je
sub
push
mov
fstps
xchg
das
adc
insb
fcomps
jo
xor
dec
popf
sti
cltd
insl
xchg
mov
ret
aad
inc
aas
popa
push
xor
mov
sub
sub
in
jnp
popf
in
xor
mov
push
divps
add
stos
loope
add
bound
pop
and
cld
mov
cltd
pushf
out
lds
iret
sub
pushf
std
add
mov
push
lods
addr16
punpcklwd
push
dec
inc
fs
push
push
mov
xchg
jns
rorl
and
into
xchg
js
inc
inc
sub
lods
mov
mov
xlat
fimull
jnp
add
adc
mov
pop
fiaddl
fst
lcall
leave
push
loop
lds
scas
xor
xor
xor
xor
add
lahf
in
cld
xor
fcoms
cmp
xor
push
jl
push
fnsave
adc
dec
fldl
out
fidivrl
outsl
adc
test
xor
jmp
xor
push
and
jp
rcrb
mov
pop
jne
stos
cmp
or
popf
int3
mov
or
pop
mov
cmp
rolb
dec
out
rolb
les
mov
xchg
cltd
jecxz
pop
sub
test
bound
data16
outsb
lahf
mov
push
divps
dec
adc
mov
clc
xor
mov
mov
insl
pushf
push
out
and
or
mov
movsl
call
dec
jns
pop
int
jecxz
mov
xorb
pop
pop
fmull
dec
pmullw
rclb
arpl
fidivrl
jle
movsb
lods
or
pop
scas
and
add
gs
xchg
out
sbb
mov
popf
xchg
jno
ret
push
add
test
daa
cmpsl
test
mov
sub
pop
xor
xor
adc
insb
pop
pop
es
and
push
lahf
imul
fnstcw
jle
data16
lahf
cmp
aas
pop
repz
sbb
mov
sbb
or
xchg
stc
scas
and
sbb
incb
push
je
dec
cmpsb
inc
pusha
cwtl
js
shll
inc
adc
cmp
and
pushf
loopne
fbstp
xchg
outsl
stc
ss
cmpsl
insb
lcall
in
popf
sub
sub
dec
xor
jmp
adc
sbb
mov
sbb
xor
les
adc
push
pop
dec
adc
jp
mov
nop
mov
mov
out
dec
or
insb
mov
clc
xor
add
cmp
clc
fldpi
movb
dec
pop
mov
cmpsb
bswap
rcrl
jne
mov
addb
dec
movsb
mov
and
movsb
in
and
imul
jns
jae
popa
mov
js
xlat
cmpb
sbb
roll
out
scas
adc
adc
mov
lods
sbb
aaa
aam
imul
or
jns
add
hlt
stos
push
inc
arpl
push
jno
dec
das
push
mov
lahf
sbb
ss
cmp
cmp
dec
popa
inc
ja
cmpsb
sub
mov
mov
xchg
lods
mov
jge
add
std
xor
pushf
push
cmp
js
clc
rcr
adc
jmp
in
inc
cmp
jae
insl
daa
in
enter
ds
mov
rclb
adc
sti
daa
xor
pop
and
lahf
iret
sarl
cmp
pop
push
and
adc
inc
sub
dec
rol
and
inc
aad
mov
arpl
fdivrl
mov
xchg
test
inc
int
shlb
cmp
js
mov
xchg
inc
in
dec
push
xor
add
mov
shrb
shll
mov
jecxz
outsl
pop
cmc
test
dec
jmp
add
cmc
sub
call
inc
mov
lods
fidivrl
add
add
neg
lret
data16
aas
flds
and
inc
inc
sub
sbb
sbb
mov
pop
and
repz
out
int
or
or
push
sub
inc
ljmp
xchg
leave
outsb
push
jle
inc
and
add
push
lret
pop
mov
mov
and
das
inc
shl
or
nop
push
cmpsb
push
sbb
lds
test
xchg
jno
jle
outsl
in
lock
pop
rcll
or
mov
roll
out
pop
sti
repz
loopne
dec
add
loop
nop
inc
and
pusha
or
push
rol
push
pop
pop
inc
bswap
fs
movsl
cmp
ja
pop
scas
jae
das
add
mov
ret
inc
or
sbbb
call
int3
add
dec
dec
xchg
test
mov
mov
movsl
out
push
or
fiadds
sbb
shlb
xchg
push
mov
loopne
pop
std
inc
daa
ficomps
fsubr
aad
cld
loop
xlat
cmp
cmp
inc
in
push
adc
mov
out
icebp
outsl
lret
or
mov
xchg
sub
jmp
mov
xor
mov
and
pop
fcomi
jnp
gs
scas
je
cmp
fnstcw
out
pop
and
dec
stc
jge
popa
es
cmp
addps
push
pop
jae
jae
je
xor
jb
jp
pushf
std
pop
add
hlt
jle
push
stos
clc
mov
add
loope
dec
add
mov
push
lea
int
loop
sub
adc
ret
jb
cmp
dec
mov
mov
push
sti
xchg
cmp
add
and
shll
filds
jecxz
into
xchg
test
xchg
or
pushf
repz
xchg
rcl
xchg
cmp
jno
add
shlb
xor
sub
push
leave
mov
ret
mov
mov
outsb
icebp
dec
insl
jb
pop
jge
es
pop
xorb
pop
mov
pop
and
dec
mov
mov
dec
adc
sub
mov
je
and
jb
mov
cmp
cmpl
femms
xchg
mov
mov
fildl
not
and
andw
mov
pop
adc
rolb
pop
out
mov
cmpsb
pop
mov
xchg
int3
dec
jge
push
sbb
pushf
adc
inc
dec
aas
cmc
dec
jns
addb
cs
and
mov
cmp
dec
test
and
sub
dec
std
mov
inc
lcall
cmp
push
out
lea
test
insl
dec
push
repnz
add
sbb
add
stos
push
repnz
sub
fisttpll
mov
cmpl
inc
call
xchg
fstp
sub
mov
test
imul
mov
cmp
xchg
lea
or
xchg
arpl
into
out
inc
push
rorl
jno
sti
jecxz
mov
mov
insb
pop
push
loop
mov
icebp
imul
pop
repz
clc
jmp
ficoml
sbbb
pop
add
sarl
test
sbb
xor
shl
adc
sbb
cs
sbb
and
repnz
addr16
adc
fwait
mov
sahf
fisubs
sbb
leave
xchg
mov
mov
jp
ljmp
iret
jnp
out
add
xchg
ret
rclb
sub
push
clc
pop
outsb
fsubl
xchg
loopne
xadd
lods
mov
dec
inc
lods
mov
add
mov
mov
pop
int
mov
mov
sbb
mov
xchg
stc
dec
mov
into
push
and
test
call
ljmp
leave
or
cmp
mov
cld
icebp
add
mov
frstor
jmp
mov
dec
cmp
ficoml
test
dec
xor
xor
ja
push
adc
adc
mov
sbb
jnp
jge
iret
data16
mov
arpl
mov
nop
das
stc
fildll
cmp
addl
push
testb
notl
enter
clc
mov
cmp
push
mov
scas
adc
sbb
js
mov
idivl
popf
add
mov
cltd
dec
jecxz
in
mov
sbb
pop
subb
jno
or
test
add
dec
sub
sbb
in
mov
mov
adc
scas
mov
shlb
add
inc
es
popa
pop
push
decl
or
cmp
je
cli
cwtl
mov
aad
and
push
jmp
or
repz
cltd
rorb
or
call
frstor
popa
enter
mov
and
lods
enter
push
mov
mov
jns
sub
xor
popl
cmc
lods
mov
pop
xchg
scas
sub
sti
das
xor
aas
lahf
scas
pusha
les
jns
mov
cmc
push
dec
scas
mov
daa
loope
jp
cli
xor
jno
cli
stc
xor
bound
aad
in
sbb
inc
ror
aas
scas
shlb
test
scas
mov
mov
add
dec
mov
mov
mov
xchg
leave
sarl
sahf
mov
fildll
inc
fiadds
jb
or
pop
xchg
std
in
jg
sarb
inc
clc
jno
mov
or
sbb
cmpsl
aad
mov
push
add
in
clc
out
clc
aam
dec
or
push
lock
adc
fs
jno
sub
mov
jnp
push
imul
mov
orb
ret
aaa
iret
lock
in
ret
sbb
xchg
testb
sahf
jp
repnz
xchg
jnp
ret
call
insb
inc
ja
xor
test
test
xchg
xor
iret
repz
or
mov
add
adc
xchg
iret
ret
push
lock
int3
jl
xlat
lods
jl
or
outsb
fdivrl
addl
xor
fisubl
push
pushf
push
inc
int
ljmp
movsl
sarb
lret
in
movsb
stc
gs
fisttps
and
cmp
xor
sbb
test
jns
repnz
test
movsb
stos
cmp
pushf
or
inc
das
cltd
pushf
push
push
mov
xchg
jg
mov
mov
push
pop
pshufw
jg
je
gs
mov
addb
pop
inc
mov
out
or
or
jg
ss
aas
lret
popa
push
or
call
mov
xchg
lcall
xchg
in
fsub
movsl
call
scas
cltd
dec
xor
lods
cmc
jl
xchg
test
mov
push
outsl
lahf
sub
adc
int3
adc
mov
fcmovbe
push
jl
push
or
test
fldt
mov
pop
adc
lea
mov
lret
sbb
inc
fildl
inc
xchg
fwait
jae
add
call
shlb
insb
popa
fmuls
into
shlb
movsb
or
inc
mov
rcll
into
lret
fcoml
inc
daa
in
cmp
data16
fwait
add
pushf
sbb
adc
std
push
mov
mov
mov
cmp
out
notl
mov
std
movsl
pop
xchg
pop
xor
lods
into
in
pop
cmpsl
sub
ret
cwtl
push
inc
scas
inc
pop
dec
and
fdivs
aas
pop
loop
out
add
pusha
daa
fidivl
pop
repnz
shll
cmp
lret
xor
xor
pop
sub
imul
mov
pop
in
subb
push
dec
fstpl
int3
push
sbb
insl
push
jl
inc
inc
mov
es
lahf
xchg
push
xchg
addr16
jmp
jb
push
test
inc
lds
int3
and
xor
adc
ret
cmpsb
sarb
popf
inc
jo
scas
cmp
lods
in
add
adc
xor
sti
mov
xchg
dec
mov
shll
mov
pusha
shrl
ljmp
inc
and
inc
mov
or
outsb
jns
test
testl
xor
loope
push
mov
and
xchg
shlb
ret
cmp
and
dec
pop
cmp
sbb
popf
icebp
test
push
cmp
dec
in
dec
mov
aaa
push
and
arpl
pop
popf
dec
jg
psraw
xlat
ret
ljmp
pop
cmp
fidivrs
inc
mov
cmp
push
es
cmp
sub
inc
lods
enter
jno
inc
adc
mov
inc
movsb
push
test
jno
sub
xchg
fnop
call
push
in
or
mov
inc
mov
test
fdivrs
fstl
push
jae
pusha
mov
inc
adc
test
or
and
xchg
ja
test
add
loop
lock
mov
xor
sarb
lods
cmp
push
call
pop
sbb
push
nop
and
inc
add
pop
mov
rolb
ds
and
mov
out
testb
les
mov
bound
mov
jns
shlb
mov
out
push
xor
xchg
into
or
stos
sub
cmpsb
sbb
mov
mov
lahf
ss
sbb
pusha
ss
movsl
xchg
nop
xchg
leave
xor
loope
and
les
xor
mov
jl
cmp
pop
xor
xchg
sub
insl
push
xor
scas
pop
in
adc
add
inc
iret
popa
ja
ret
bound
stos
subl
sbb
mov
enter
and
xor
imul
ja
mov
inc
jo
nop
test
lret
lret
xorb
push
loopne
sub
xchg
sub
mov
scas
or
ficompl
jp
sbb
xchg
push
mov
adc
push
loope
test
cmp
adc
dec
jno
repz
cmp
mov
cmpsb
outsb
sub
sbb
ss
cmp
jmp
adc
inc
push
xchg
fsubrs
mov
and
xchg
std
lcall
mov
dec
stc
pop
imul
cmpsb
jge
lahf
pusha
bound
call
push
push
das
outsb
ftst
ret
mov
loop
cwtl
sub
mov
adc
shll
leave
ficompl
test
xor
or
jns
xchg
xchg
test
xor
shl
fistpl
mov
aas
xor
sahf
hlt
js
in
sub
in
ja
mov
les
xchg
cli
enter
or
sarl
sbb
aaa
mov
fldcw
or
mov
push
icebp
pop
jne
cmp
shll
jge
mov
loop
cmpsb
jbe
push
test
scas
ret
pop
inc
aaa
push
out
add
xchg
push
lret
loopne
mov
xchg
movsb
mov
add
int
dec
das
sahf
lcall
dec
mov
jle
adc
mov
call
adc
hlt
loope
pop
push
adc
and
mov
cmp
pop
mov
add
mov
stos
mov
inc
add
mov
push
push
fwait
es
cmp
stos
cmp
ss
fabs
push
mov
sub
pop
jns
sahf
icebp
cs
nop
jno
pop
add
inc
les
add
popf
xor
sbb
pop
into
icebp
push
and
pop
daa
movsb
mov
jae
mov
out
jl
loopne
sahf
loop
sbb
xor
lods
pop
addl
jnp
mov
and
lock
add
bnd
pop
addr16
sahf
in
repnz
and
das
aas
xchg
pop
inc
mov
cwtl
and
clc
clc
mov
outsb
sbb
xor
mov
sahf
or
jg
adc
mov
std
loop
in
lods
fimull
add
ret
iret
xchg
xlat
std
nop
push
repz
insb
mov
inc
dec
aaa
jno
clc
xor
xor
xchg
inc
add
outsb
pop
pusha
outsl
sbbb
or
jl
stos
and
mov
mov
lret
pop
adc
stos
push
mov
pop
and
rcll
in
int
jb
jle
loop
jmp
aad
shrl
pop
mov
sbb
lea
shrb
inc
sub
movsb
out
pop
insb
cmp
cwtl
cmp
push
nop
mov
pop
dec
ret
fstps
cs
hlt
and
jae
add
mov
sub
cmpsb
outsb
push
in
insb
lret
lret
inc
sbb
xor
mov
fimuls
and
movsb
cmp
sub
movsb
or
cmc
or
push
pop
jle
imul
mov
jae
sub
xor
ds
dec
test
lea
cmpb
testb
cmc
das
aaa
jnp
bound
push
mov
pop
lods
push
adc
data16
rcll
and
mov
int3
mov
xchg
sarl
popa
inc
dec
pop
out
push
repz
pop
pop
in
jle
ss
and
mov
dec
mov
sbb
inc
push
sbb
jecxz
mov
mov
pop
icebp
pop
push
shr
in
mov
fmull
lcall
and
inc
lret
daa
aam
jg
scas
mov
enter
cmpsl
sbb
mull
dec
leave
les
loopne
xchg
insb
mov
lcall
jo
int3
pop
jae
inc
fwait
pushf
insb
mov
rorb
shll
rcr
sbb
or
cmp
rcrl
mov
push
mov
xlat
aam
ret
mov
je
or
loope
or
pop
int
test
cmpsb
in
or
in
push
cmp
sbb
mov
dec
mov
ficoml
popf
sbb
jnp
lcall
jle
into
cmp
mov
es
pop
push
fldcw
jp
cmp
idivb
mov
fstpl
adc
adc
or
sti
jnp
enter
in
fwait
cmpsb
xor
dec
mov
orb
in
or
mov
je
mov
insl
jne
sbb
movb
sub
pop
xor
cmp
xchg
out
jg
int3
inc
cs
enter
mov
rclb
adc
cmp
addr16
mov
inc
mov
mov
cmc
push
xor
test
jmp
into
pop
sar
sbb
mov
jbe
mov
test
sbb
mov
or
ljmp
mov
add
mov
insl
mov
inc
fldt
or
loope
fwait
stos
unpcklps
cmp
ss
mov
and
ljmp
mov
in
dec
mov
iret
js
pop
add
cwtl
jg
add
js
nop
ret
and
aam
lods
loopne
add
and
jg
dec
outsb
inc
int3
mov
sahf
jns
xchg
mov
mov
mov
add
subl
out
mov
cmp
aaa
out
call
adc
stc
and
add
xor
xchg
mov
mov
fstpt
and
scas
into
lods
or
scas
jbe
sub
push
shll
jb
pop
fwait
cmpsb
pop
js
xchg
push
jbe
fprem
test
shrl
adc
lret
movsb
or
in
jecxz
and
mov
push
inc
xor
mov
pusha
dec
lods
push
ljmp
and
scas
fdivl
dec
jbe
push
jb
sbb
push
add
cmp
inc
jl
mov
inc
lret
fdivrp
in
or
out
inc
cmp
jbe
jmp
mov
push
popa
dec
aam
cmp
mov
imull
mov
icebp
jecxz
lcall
mov
mov
fistl
dec
add
repz
sbb
imul
loope
lods
push
inc
jbe
pusha
xlat
mov
pop
les
insb
jno
sahf
sub
sub
mov
jne
aad
aad
out
sti
in
dec
inc
mov
xchg
jo
repnz
int
notb
and
xor
adcb
scas
out
imul
sbb
iret
pop
stos
jecxz
jmp
xchg
jmp
push
push
push
movsb
jne
cmp
ja
cltd
or
mov
daa
nop
jbe
add
push
dec
in
mov
xchg
jo
or
arpl
and
push
xor
jbe
sti
cmovge
inc
sub
pop
sbb
sub
mov
xchg
xor
jmp
jne
and
xor
xor
pusha
jp
push
and
pop
out
ljmp
jnp
push
and
mov
adc
das
xchg
xor
cmp
cmp
lds
sbb
pop
popf
jge
pop
dec
or
sbb
lds
inc
sbb
pop
push
fists
inc
stc
xchg
fidivrl
xor
ljmp
mov
fcoml
loope
jo
lret
xor
add
cmp
mov
clc
jo
rclb
movsb
cmpsl
mov
mov
mov
push
xchg
rcll
push
lret
push
stos
inc
outsl
shrl
hlt
add
ljmp
fnstcw
adc
insb
stc
pop
mov
and
ds
jb
test
dec
aam
lret
divb
or
mov
ja
gs
je
jo
mov
pop
aam
mov
push
adc
loope
mov
pusha
shr
shlb
cmc
or
loop
lret
ret
push
mov
sbb
lds
pop
mov
cmp
pop
cmc
pop
cmp
sbb
jecxz
and
push
xor
dec
jge
xor
lret
pop
bswap
jb
fisttpl
or
js
dec
ja
cvtps2pd
lea
cmp
jle
or
repz
cli
dec
das
jnp
push
stos
push
xchg
mov
in
roll
lret
rolb
dec
fnsave
push
leave
pop
stos
fidivrl
sarb
xchg
dec
ret
repz
mov
enter
test
inc
mov
push
cltd
sahf
movsb
inc
jmp
fwait
cmp
shl
mov
shlb
insl
add
cmc
push
or
lods
loope
stc
rol
dec
sub
push
je
sub
std
mov
faddp
push
fisttps
fadds
sub
sub
jmp
add
pop
fidivs
cmp
nop
adc
adc
push
jp
daa
jle
jbe
outsl
xlat
cmp
cltd
loopne
clc
jecxz
mov
jnp
imul
mov
jl
mov
sbb
and
ds
mov
mov
stos
jge
imul
mov
pop
add
and
mov
xchg
and
inc
mov
fs
test
je
jp
mov
push
lds
sub
flds
fs
dec
leave
jge
gs
outsb
ja
add
mov
int3
xchg
icebp
add
out
lods
adc
add
cmp
mov
xor
xor
lret
xor
int
lock
ja
popf
push
repnz
stos
pushf
adc
adc
data16
fcomps
popl
xchg
jb
pop
add
xor
test
or
mov
sbb
or
mov
dec
mov
push
xor
add
mov
outsb
ss
and
icebp
sbb
add
jb
jl
pop
inc
addr16
sar
add
and
dec
ret
lea
cltd
mov
frstor
cmp
xor
xchg
jl
adc
std
pop
fsub
int3
in
and
mov
xlat
jmp
jne
fldenv
and
xchg
repz
or
div
jno
lahf
mov
pushl
insb
and
xor
mov
repnz
jno
sahf
movsl
and
push
cmp
subb
sbb
adc
sub
jbe
add
lret
vmread
add
test
imul
icebp
xor
ror
test
sbb
mov
push
adc
mov
mov
ss
push
and
or
push
xchg
fwait
mov
adc
xchg
inc
aad
out
test
pop
jmp
sbb
sbb
incl
roll
clc
pop
add
mov
nop
test
idivl
xchg
sbb
negl
xchg
push
sbb
test
daa
add
xor
jg
lret
movsb
fstpt
lock
push
repnz
and
rorb
cmp
jnp
jns
push
testb
pop
push
enter
xchg
inc
int
in
adc
mov
add
and
xchg
pop
mov
pop
push
out
dec
jge
repz
aad
fxam
xor
hlt
sub
shlb
in
push
in
into
ja
sbb
add
ja
cmpsb
mov
addb
aam
fucomip
ds
arpl
lds
fistpll
mov
ss
lea
aad
jno
xchg
loop
xor
adc
pop
push
rorl
aad
push
sub
movsb
movsl
jp
fisubrs
aaa
fs
imul
xlat
mov
xor
push
dec
dec
decl
sbb
adc
ret
sbb
jnp
loopne
cli
dec
pop
ja
xor
cmp
es
xchg
sub
int3
sub
mov
dec
or
cmpsl
fcoml
xlat
sti
inc
popa
adc
jmp
icebp
sub
aaa
cmpsl
lods
and
jb
mov
out
scas
push
or
mov
jmp
cmp
xchg
xchg
pop
mulps
fstl
sub
int3
repnz
adc
in
jne
lcall
or
imul
jnp
rol
pop
ds
mov
mov
pushl
ficoml
xchg
decl
mov
das
xchg
mov
sub
out
pop
std
adc
lret
or
cli
jnp
nop
cmpsb
clc
les
xchg
shrl
out
mov
repz
imul
mov
dec
jmp
mov
cmp
mov
sbb
push
cmp
pop
jl
repnz
inc
sbb
mov
lea
std
dec
js
jb
or
inc
dec
xor
out
fidivrl
cmp
mov
xor
or
mov
arpl
push
movsl
jns
test
cmp
fisubs
mov
sbb
adc
jno
pop
mov
cmpsb
and
and
lods
in
repnz
pop
sarl
rol
movswl
and
pop
xor
lcall
leave
into
cmp
add
pop
sub
and
inc
jb
sidtl
outsl
fiaddl
shld
iret
or
stos
mov
int3
inc
mov
mov
mov
loop
jle
mov
cmc
and
out
sub
aad
jmp
mov
test
jnp
movsb
or
imul
xchg
in
xchg
out
shl
orl
pop
mov
xchg
insl
lock
into
stos
mov
mov
push
mov
mov
imul
orb
sub
cld
add
pop
sbbl
mov
mov
push
sub
aas
xchg
ficompl
lahf
xchg
shl
inc
sbb
mov
les
cwtl
mov
iret
pop
and
enter
aad
xor
imul
lods
lods
fsubrs
nop
cmp
jns
push
sub
fs
xor
shll
daa
jno
shlb
loope
xor
mov
stos
jne
nop
xchg
xchg
in
bound
js
cmpb
bound
push
cmp
mov
ds
cwtl
outsl
xchg
jl
out
add
aam
push
pop
into
xchg
iret
fs
mov
jbe
testl
push
pop
mov
jnp
mov
enter
cmp
inc
jnp
xchg
sub
test
sub
push
sbb
aam
xor
mov
mov
lcall
adc
clc
leave
les
in
add
in
insl
rcrl
pop
fcomip
ja
aaa
inc
or
ja
addr16
ljmp
shlb
scas
das
pop
in
sti
sti
addl
adc
mov
or
xor
xor
in
popf
pop
in
arpl
cld
mov
xor
mov
imul
add
int3
xor
mov
xchg
push
pop
adc
mov
pop
and
mov
int3
cmp
inc
mov
shrb
in
dec
aaa
or
jmp
add
daa
sub
stc
adc
adc
jge
loopne
mov
mov
mov
jo
icebp
insb
andb
test
pop
jne
bound
orl
mov
jo
mov
insb
add
and
mov
mov
push
int3
pop
push
jns
jmp
shrb
push
jnp
bound
adc
mov
lret
inc
sub
sub
ja
divb
movsb
orl
roll
roll
push
and
pop
pop
xor
ss
loop
inc
mov
jnp
pop
mov
push
add
jns
mov
sahf
mov
sub
cld
leave
push
das
arpl
mov
and
mov
xor
xchg
out
xchg
xor
leave
int3
mov
jo
xorps
pop
or
adc
lahf
fdivs
jmp
mov
dec
pushf
push
into
mov
dec
test
push
dec
mov
cmovl
icebp
dec
cmp
out
fsubrp
push
jecxz
lcall
mov
cli
xlat
jle
lret
ja
cmp
add
adc
add
loop
pop
inc
ds
daa
icebp
dec
shlb
lcall
ss
pop
aaa
jb
scas
dec
pop
adc
mov
xor
inc
cmp
mulb
jno
nop
add
push
jg
mov
loope
fs
rorb
imul
sbb
inc
into
sub
sub
sub
enter
movsb
sti
shll
add
fwait
pop
dec
xor
loopne
out
loopne
outsl
cmp
jns
mov
test
pop
lret
rorb
out
push
fwait
and
and
daa
in
aam
xor
idivb
xchg
int
and
imul
std
xor
scas
sti
mov
adcl
or
imul
add
mov
push
xlat
mov
jg
xchg
jmp
or
mov
call
mov
xor
jg
cld
inc
push
in
js
addr16
jmp
stos
sub
and
inc
idivl
stc
negl
cwtl
rorl
xchg
fldt
add
jne
ss
mov
scas
subl
jo
pusha
js
push
add
jne
sbb
roll
cmpl
mov
cmp
and
lahf
mov
sub
loopne
inc
shrl
psubsw
int3
xchg
cmpb
inc
lds
rorb
pop
imul
mov
push
dec
mov
xchg
pop
stos
xchg
adc
push
mov
lds
jge
push
mov
xchg
rcrb
add
add
imul
jmp
sbb
adc
neg
inc
adc
jnp
mov
push
mov
lahf
lock
pop
stos
scas
int3
insb
ficoml
jmp
fwait
pop
fdivl
dec
insb
fistpll
dec
xchg
call
jge
pusha
and
dec
mov
sbb
out
lods
stos
mov
nop
and
pmulhuw
jne
test
inc
dec
lds
adc
stos
testl
lcall
insb
sub
ret
mov
js
subl
std
cmp
push
nop
lea
std
xchg
pop
pusha
icebp
cltd
test
push
mov
xchg
scas
lret
pop
lods
lods
sub
cltd
stos
in
add
daa
xlat
cmp
pop
lahf
fcmovu
mov
ret
lods
fs
stos
xchg
leave
mov
and
sbbl
mov
push
testl
dec
scas
sarl
mov
imul
inc
ds
or
adc
xchg
mov
pop
xor
ljmp
pushf
ja
cmp
add
push
fisubs
jmp
jo
fbstp
mov
mov
inc
out
movsb
push
sub
rcrl
lcall
shl
leave
sbb
pushf
cmpsl
cmp
mov
jp
rol
mov
hlt
jno
fnstsw
xchg
test
outsl
arpl
mov
cmp
cmp
mov
mov
lods
sbb
bound
std
jnp
jne
pushf
jno
push
push
fwait
inc
add
js
push
sbb
lods
js
jnp
xor
iret
jo
and
or
adc
test
pop
dec
sbb
cmp
xor
adc
lcall
faddp
inc
sbbl
xor
pop
mov
add
lea
jne
push
jg
cmc
mov
cmpsl
adc
jmp
cmp
in
in
fcmovb
ljmp
cmp
mov
dec
test
mov
fdivp
push
outsl
pop
les
mov
dec
pusha
in
sub
ss
inc
xchg
dec
arpl
ficoms
data16
mov
lret
cmp
push
int3
enter
js
subl
repz
pop
pop
out
add
outsl
jns
sti
pushf
pop
adc
pop
xor
fisubrs
sub
pop
popa
in
mov
push
cmpsb
popf
mov
or
xchg
loop
aad
sarb
icebp
in
pop
shll
ja
and
mov
jp
lods
enter
lods
jno
lods
push
fidivrl
mov
and
dec
push
imul
sub
cwtl
xchg
outsl
imul
movsl
stc
aad
xchg
xchg
mov
push
mov
adc
sub
dec
push
mov
pop
lahf
iret
fdivrl
mov
xchg
jbe
mov
scas
lahf
fwait
lahf
adc
arpl
into
rolb
stc
mov
cmp
cmp
adc
fisttpll
pop
idivl
in
js
gs
cmp
les
mov
and
cs
fcoml
fsub
fld
lods
push
xor
insl
mov
movsl
adc
adc
int3
call
adc
in
popf
cs
fidivs
push
sbb
ret
ljmp
mov
stc
sti
xor
bnd
jp
loope
out
cmp
jmp
stos
xor
mov
xor
pop
push
push
iret
inc
sbb
frstor
std
das
fwait
dec
or
adc
dec
lods
sbb
dec
cmpsb
pop
mov
jb
ss
mov
push
cmc
sarl
fidivl
sbb
cmc
je
cwtl
pop
and
test
push
adc
adc
mov
sbb
xchg
neg
stos
mov
or
sub
mov
mov
out
fcmove
cmp
pusha
ror
adc
sub
arpl
xor
cmp
mov
cwtl
and
xlat
pop
ljmp
jl
mov
adc
loope
aaa
std
ret
icebp
push
sub
out
aam
push
cwtl
fcoml
shll
dec
rcll
ret
repz
dec
add
pop
shll
xchg
and
adc
cmp
adcb
push
cltd
push
insb
mov
lods
adc
mov
adc
inc
add
cmpsb
dec
or
dec
jae
sub
cmp
inc
test
scas
add
dec
sbbl
jmp
fbstp
data16
or
test
std
fidivs
test
out
arpl
scas
mov
std
repnz
fs
jp
jne
mov
in
out
repnz
mov
xlat
test
cmp
jns
add
mov
push
fs
jbe
ja
fidivrs
cs
dec
cmpl
push
push
and
dec
loop
adcl
jns
xchg
fld1
cs
add
out
sarl
inc
adc
xor
or
xchg
jg
loopne
insl
dec
insb
inc
iret
shl
inc
cmp
sub
insl
mov
movsb
fisubl
gs
repz
adc
fwait
sbb
sbb
jo
lret
pand
gs
out
mov
out
lcall
pop
mov
scas
shll
sahf
pop
pop
pop
push
pop
mov
pop
push
ja
pop
mov
mov
out
popf
and
cmpsl
jge
loop
and
testl
mov
les
jbe
push
mov
mov
fbstp
xlat
mov
pop
stos
jnp
jle
xor
cltd
mov
ds
fcmovne
mov
stc
mov
arpl
mov
aad
jmp
mov
mov
or
stos
fcoml
fwait
in
outsb
dec
adc
lods
sti
mov
stos
daa
pop
outsl
push
sbb
xchg
pop
imul
cmp
aam
mov
push
stos
dec
popf
test
test
out
call
push
xor
mov
inc
roll
stos
testl
mov
push
into
ss
fistpll
int
sub
jmp
push
push
xchg
daa
add
shll
clc
mov
sahf
daa
mov
dec
ja
and
popa
jbe
pop
stos
outsl
xlat
push
jle
sub
popl
cmp
push
repnz
dec
pop
jge
mov
stc
into
fidivs
lret
orl
cltd
orl
cmc
orb
popf
bound
inc
dec
mov
rorl
sbb
cli
js
jmp
pop
arpl
shlb
sub
fbld
sbb
rcll
pop
lret
jnp
xor
inc
or
mov
mov
in
jg
dec
push
push
fs
outsb
bound
mov
adc
pop
dec
out
test
lret
push
inc
inc
and
addb
cmpsb
sbb
call
mov
or
ss
iret
shlb
das
outsl
sub
fbld
addb
in
mov
xor
push
adc
repnz
push
cli
rcll
mov
fimull
fs
xchg
shlb
mov
jmp
lret
clc
mov
pop
jp
jg
push
pop
sub
out
jecxz
mov
push
xor
lock
push
add
shll
push
adc
xchg
pop
inc
movsl
cwtl
xchg
sbb
sbb
sbb
loope
dec
cld
xchg
test
add
mov
xchg
out
xor
jno
inc
movsb
and
sbb
or
jne
into
xor
jbe
inc
clc
push
push
mov
xchg
inc
dec
lock
icebp
jg
cld
push
mov
es
push
push
sub
insl
dec
add
pop
fbstp
sub
paddsb
sbb
mov
push
mov
stos
das
xorb
inc
inc
jl
test
mov
or
addr16
pushf
mov
out
rorl
push
push
cmp
fwait
shlb
out
cltd
jmp
mov
xor
inc
xor
stos
or
xchg
mov
pushf
xchg
jb
pop
data16
or
cwtl
popa
cmp
addr16
bswap
and
int3
lods
popfw
ja
iret
nop
sti
pop
pop
ljmp
push
xchg
mov
hlt
in
les
insb
cmpsb
xor
cs
fisubl
ss
jg
add
cmpsl
adc
shlb
pop
test
repnz
loope
sub
inc
aad
aad
pop
fwait
fwait
into
xchg
data16
adc
sub
jl
insb
sahf
jnp
aas
mov
outsb
adc
pop
push
jo
and
pusha
les
mov
mov
inc
xchg
pop
ss
fistps
ja
pop
mov
xor
imul
cmp
mov
push
ja
sub
les
clc
jo
out
add
add
bound
sbb
and
fwait
sbb
dec
andb
mov
sbb
mov
outsl
es
xchg
repnz
sbb
mov
fisttpll
pop
or
test
call
xlat
cmp
pusha
push
ret
ret
adc
pop
xchg
or
and
sbb
test
mov
rcrl
dec
dec
xchg
sbb
leave
push
aaa
and
xor
sbb
pop
mov
mov
into
pushf
cmpsl
mov
mov
dec
out
pop
jno
mov
mov
pop
dec
imul
mov
add
outsb
dec
loop
fstpt
shl
loop
pop
xchg
shrl
or
and
and
sbb
lret
lret
add
mov
dec
or
xlat
or
adc
fcmove
lods
xor
jle
add
popa
or
push
mov
mov
jno
mov
addb
movlps
daa
jecxz
xor
stos
mov
sub
jmp
add
or
inc
pop
jge
and
push
sub
mov
cltd
adc
add
xor
mov
cmp
pop
shl
jnp
out
or
pop
sub
std
cli
movsb
xor
jmp
popa
xacquire
jne
insb
lret
pusha
adc
add
test
ret
idivl
fs
or
xor
cmp
rorl
stos
movsl
add
sbb
xchg
jecxz
addr16
sub
jno
sbb
mov
dec
xchg
sub
lret
sbb
int3
stc
test
jle
subl
fcomps
jecxz
icebp
sbb
fisubl
out
push
test
pop
pop
pop
aaa
jns
jnp
jno
stos
in
dec
fdivrs
outsl
popf
cmpsl
or
imulb
pop
ror
mov
test
xchg
movsl
pop
cmp
cmp
aas
into
inc
ret
add
cmp
inc
jae
mov
out
movsb
and
mov
xchg
nop
mov
jbe
shrl
push
mov
cld
andb
jb
jl
and
cmp
cmp
stc
mov
in
int
mov
in
aam
cmp
push
into
mov
sarl
add
push
mov
add
call
leave
fistl
fwait
pop
xor
lock
jmp
dec
fwait
mov
fsubrs
pop
adc
pop
add
movsb
fsubrs
lret
rep
rorb
jnp,pt
jb
es
mov
in
call
ret
adc
loopne
push
xor
mov
jae
sbb
push
test
sahf
addr16
mov
arpl
out
sahf
mov
lret
das
repnz
sub
mov
mov
stc
lcall
scas
inc
mov
stos
leave
inc
sti
and
and
adc
inc
push
push
pushf
cli
rolb
xchg
cld
out
pop
mov
xchg
repnz
clc
int
into
cmp
aaa
add
clc
jl
push
inc
and
aaa
cltd
jnp
scas
sub
mov
outsl
mov
inc
inc
sub
pop
pushf
movsl
push
dec
inc
jns
in
mov
xchg
mov
pop
mov
pop
rcrl
in
mov
fisubl
dec
jns
cmpsb
push
mov
sub
mov
mov
jg
cmp
jge
aaa
cld
pop
imul
sbb
test
insl
pop
ljmp
js
aad
pop
inc
mov
adc
dec
jae
xchg
fnsave
call
das
fnsave
sub
out
test
std
jecxz
push
imul
xchg
ljmp
jle
fstl
xchg
movl
push
clc
loop
or
lahf
aaa
push
cmp
in
loope
sbb
aaa
or
cwtl
negb
xchg
imul
sahf
sarb
icebp
pop
mov
mov
mov
mov
stos
mov
outsb
sub
dec
and
pusha
out
lcall
mov
or
push
cmp
pop
es
add
and
subb
sti
in
cltd
add
lods
fistpl
pop
std
jg
push
jp
scas
ficompl
icebp
call
daa
mov
sub
add
mov
jmp
and
mov
fildl
popf
cs
mov
push
dec
mov
leave
inc
int
push
dec
in
adc
pushf
clc
cltd
mov
pusha
mov
xor
outsl
dec
sbb
push
addb
dec
xchg
xor
repz
push
fidivrs
outsb
icebp
cs
or
xlat
add
out
dec
cs
out
mov
and
adc
outsb
aas
mov
jecxz
xchg
push
js
loope
testl
test
fidivrl
inc
and
fwait
dec
addr16
mov
lahf
fsubl
add
lods
adc
mov
jecxz
jge
push
xchg
xorl
sarb
pop
scas
xchg
test
inc
imul
movb
das
leave
ja
adc
lods
inc
mov
push
fwait
out
push
or
out
mov
sub
testl
ret
or
push
stc
fisubs
ret
sub
fldlg2
insl
dec
cmp
dec
subl
pop
jo
xor
fbstp
add
das
or
sbb
adc
loop
call
sub
mov
popf
sarb
push
sbb
dec
outsb
add
clc
push
mov
mov
mov
and
jnp
das
mov
les
jecxz
fisubl
imul
mov
sub
jp
xorb
pop
push
mov
sbb
add
pop
sahf
add
push
add
sahf
jle
lods
add
cwtl
lea
jo
je
daa
xchg
outsb
rcrb
and
out
incb
into
lds
sub
shlb
imul
mov
test
mov
cld
lahf
lahf
mov
orb
inc
mul
mov
push
jge
cmpsl
jnp
push
pop
imul
and
mov
mov
subl
pop
jo
aad
lock
out
rol
jb
scas
aad
mov
xor
or
xor
bound
jae
jl
fwait
sbb
or
sub
xor
pop
hlt
aad
cmpsl
jp
sub
mov
push
mov
out
adc
push
inc
jle
hlt
mov
ficomps
cli
data16
loope
scas
inc
aam
adc
es
jle
push
xchg
stos
inc
pop
dec
xchg
fildll
scas
mov
jle
decb
pop
fs
pop
outsb
xor
je
stc
in
sbb
outsl
lock
into
cltd
lea
mov
loope
add
inc
add
popa
push
aaa
mov
cli
and
std
and
jb
std
xchg
std
mov
daa
or
ss
mov
jns
add
push
xor
jb
je
adc
std
test
pop
mov
scas
cwtl
mov
dec
jg
or
ja
stos
ret
lods
cmp
cmpsb
or
dec
psrlw
in
fwait
and
fwait
cltd
jbe
ljmp
pop
adc
ss
test
rcl
orl
lcall
xor
lahf
mov
imull
add
aas
pop
xor
xchg
aas
fildll
or
test
cmp
sti
inc
movb
pop
pushf
dec
rorl
adc
jle
xor
add
pop
pop
pop
and
inc
dec
dec
cltd
pop
jb
outsl
repnz
mov
mov
sbb
rcll
ds
push
pop
or
jnp
jg
rclb
sub
aas
push
push
cld
push
inc
jb
pop
jg
in
arpl
arpl
out
cmc
nop
adc
mov
push
decb
jmp
sub
test
sbb
sbb
roll
adc
sub
mov
inc
fbstp
lahf
mov
mov
or
xchg
dec
sti
sub
push
push
sub
cmp
fisubrl
add
iret
xor
mov
add
or
stc
xlat
mov
mov
push
and
cmp
fs
addr16
out
mov
js
xchg
mov
pop
push
decl
ftst
fldcw
shl
push
sbb
pop
cs
movsb
outsl
xchg
aaa
push
jns
xor
jl
cmpsl
cmp
inc
cmpsb
stos
mov
push
lock
je
rcr
aaa
fstps
mov
xor
dec
cmp
lret
ja
pop
pop
jmp
mov
sub
mov
gs
or
into
add
jecxz
ja
in
xchg
mov
decb
cli
mov
add
test
aas
sub
arpl
or
stos
lcall
into
inc
and
movsl
mov
shl
sub
xchg
leave
jmp
xchg
xchg
dec
mov
ret
movsb
int
test
inc
fldenv
mov
xchg
and
icebp
shll
lahf
clc
xchg
fcomps
rcrl
xor
sbb
je
dec
insb
insb
add
jnp
adc
sbb
in
outsl
cmp
sbb
sub
mov
rcrb
mov
push
hlt
sti
xorb
push
dec
push
pop
push
cmp
jp
push
xchg
cld
rep
push
sbb
xchg
mov
cmp
xor
pop
inc
call
sbb
lods
jnp
les
daa
mov
lods
adc
xchg
xchg
out
push
add
fs
pop
lods
dec
push
and
movsl
aad
xchg
xorb
pushf
fcoml
or
or
mov
adcl
or
adc
push
sub
repnz
add
dec
in
xchg
mov
and
adc
fs
aas
xchg
xchg
sbb
pop
mov
sar
insb
cs
mov
movsl
sub
inc
cmp
mov
jb
call
xchg
das
in
sahf
mov
xor
movsl
adc
cs
sbb
lds
xchg
xchg
outsl
mov
xor
mov
in
insl
sbb
lahf
lods
dec
repz
push
xor
pop
sti
imul
push
and
je
adcb
test
and
or
stos
adc
pusha
xor
push
filds
jp
mov
xchg
je
mov
adc
aaa
push
push
aas
xchg
push
push
pop
pop
sarb
setno
rorb
clc
leave
xor
push
or
scas
das
ss
mov
pop
mov
test
out
jbe
lods
mov
inc
inc
rcl
andl
repz
adc
cwtl
flds
btr
movsl
shlb
fcom
fneni(8087
adcl
stos
adc
out
adc
aas
inc
inc
inc
xchg
pop
subl
mov
dec
lods
sbb
add
call
lcall
cmpsb
pushf
sbbl
cli
mov
fst
sub
or
ljmp
insb
test
dec
out
sub
xor
ja
or
xchg
xor
dec
stos
mov
bound
cwtl
insl
adc
sub
and
loope
rcl
aad
rorl
stos
fcmovbe
out
pop
inc
js
adc
imul
lods
cmpsl
es
arpl
mov
int3
sbb
xor
mov
lret
ds
pusha
jbe
push
out
adc
rcrb
inc
xchg
fsubrl
arpl
shll
lret
rcll
mov
jno
bound
div
mulb
jl
sbb
xor
adc
insb
inc
dec
adc
lret
mov
into
push
or
mov
push
stos
jmp
mov
mov
int3
es
lods
jle
push
loop
push
pop
mov
pop
out
xchg
sbb
mov
loop
add
pop
or
rcll
hlt
mov
aam
subl
iret
mov
jecxz
fs
add
mov
adc
es
fistpll
pushf
mov
fwait
cmc
subl
test
push
lods
sete
imulb
insl
lea
lods
scas
stc
cmpsl
das
hlt
xor
pop
xchg
mov
mov
mov
or
mov
mov
sbb
fbld
mov
xchg
mov
dec
and
cld
add
or
sub
dec
or
lret
cmp
inc
cmp
dec
cmp
scas
mov
bnd
cmp
aam
lea
mov
push
xchg
out
popa
lods
mov
and
mov
dec
cwtl
jo
and
ret
addr16
xchg
leave
or
sahf
movsl
mov
cmp
mov
sbb
mov
jp
inc
dec
fistl
leave
ljmp
sahf
fstps
outsb
mov
popf
rorl
fldl
das
sub
mov
mov
add
mov
mov
add
into
std
cmp
mov
sub
xor
sbb
ret
inc
cmpsl
jge
clc
mov
and
xor
sbb
jnp
push
or
ds
jo
jp
lret
xchg
test
iret
cltd
mov
push
adc
sub
divl
jecxz
add
add
and
loop
fsubrp
clc
dec
push
jnp
pop
dec
adc
sbb
iret
insb
sub
or
cwtl
jb
push
sub
scas
push
and
test
adc
and
rorb
jmp
xchg
and
repnz
cmp
or
pop
mov
cmc
or
mov
shll
add
push
mov
andl
ficompl
inc
aad
dec
add
cs
push
add
jno
mov
int
sub
sbb
jle
or
lahf
mov
inc
xor
pop
test
xor
rorb
or
xchg
gs
mov
jmp
push
and
data16
and
scas
push
xchg
jecxz
arpl
dec
rcr
sbb
mov
push
in
arpl
les
xchg
lret
cmc
dec
ret
shrb
mov
pusha
cmpsb
mov
cmp
xchg
pop
loopne
shlb
or
out
push
or
cld
jmp
inc
nop
xlat
in
mov
xchg
sbb
fistpl
mov
sbb
mov
or
leave
es
cli
push
loope
xchg
mov
xor
mov
xlat
cmp
scas
cmp
loop
clc
xor
fcmovne
aam
mov
sahf
jne
ds
into
dec
in
in
setne
cltd
adc
mov
test
and
xchg
int3
cmp
out
sbb
sbb
repz
sbb
adc
inc
jp
outsb
ljmp
jb
and
mov
or
cmpsb
ret
jo
movsb
xor
fldl
mov
pop
fwait
test
push
or
lds
sbb
sub
ljmp
xchg
xor
lret
je
inc
in
push
pusha
adc
or
ja
sub
add
test
cmpsl
pop
stos
ret
mov
adc
sub
jb
or
push
ljmp
push
xor
xor
in
or
sub
mov
and
sub
sub
xor
jnp
mov
jle
xor
test
xchg
sarb
cwtl
fbld
aaa
cwtl
loope
pop
mov
jl
outsb
jle
sbb
push
xlat
adc
mov
or
sub
cmp
mov
push
fildl
xorb
adc
out
pop
je
xchg
into
sahf
mov
ds
fsubl
jns
fisubrs
test
movsl
add
fdivs
xor
or
fmul
ljmp
mov
mov
inc
adc
inc
loop
ror
inc
out
push
or
std
out
ficoml
mov
lea
test
adc
pop
sub
stos
mov
sbbl
jo
divb
sub
push
inc
imul
mov
jp
inc
jnp
sahf
pop
mov
rolb
mov
xlat
sbb
mov
fwait
rol
pop
imull
stc
lret
rcll
add
leave
push
orl
jecxz
adc
xor
dec
out
or
mov
or
or
sbb
inc
xor
sti
cmp
xchg
cmp
or
clc
push
pop
adc
push
mov
roll
fimull
inc
xchg
mov
test
fildll
mov
jne
icebp
or
mov
movsl
inc
pop
mov
aas
ja
fnstenv
xchg
cmpsl
std
sbb
xchg
arpl
in
pushf
push
aam
aam
mov
mov
cmp
mov
cmc
and
push
fwait
negb
xor
cmc
mov
hlt
clc
out
dec
or
jecxz
push
mov
lock
sti
jmp
rorb
sahf
inc
aad
lea
push
dec
lret
loope
adc
scas
fmuls
push
fs
rclb
mov
cmp
insl
mov
pop
adc
push
fxch
sti
mov
outsb
mov
jecxz
test
cmp
mov
hlt
jns
shrl
movsl
insb
cmp
mov
pop
pop
add
and
jecxz
jae
inc
insb
cmpsl
sahf
jo
je
popw
jne
lea
leave
imul
bound
xor
or
or
in
jge
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
inc
jge
rolb
jl
xor
inc
mov
outsl
pop
xlat
inc
lret
adc
jmp
inc
or
roll
mov
jl
into
cmp
or
push
fwait
mov
push
std
out
mov
push
jbe
into
jp
sub
sar
push
cmp
pop
mov
jl
and
fildl
lea
out
push
jle
jne
add
pop
rorb
push
loopne
xchg
cmc
pusha
arpl
push
pop
cwtl
mov
iret
mov
ljmp
mull
push
dec
dec
dec
mov
and
fdivrs
repnz
pusha
mov
jle
add
push
mov
or
sub
sub
shl
cmp
and
not
shl
push
dec
xor
push
leave
adc
es
mov
pop
jae
mov
and
faddl
in
inc
shlb
inc
cmp
add
out
pop
cmp
mov
adc
lret
dec
test
dec
scas
xor
pop
or
imul
mov
hlt
add
add
dec
int3
sarb
imul
enter
ror
push
gs
lcall
cs
popa
adc
cmc
or
lods
xor
dec
xchg
xchg
pusha
bound
dec
or
das
fcmovnb
xchg
lods
fistpll
ret
inc
cmp
rolb
leave
and
dec
dec
inc
daa
fiadds
lcall
cmpsb
ret
adc
cmp
add
enter
in
lahf
cltd
adc
xlat
in
xchg
aas
insb
cmc
test
test
mov
sarb
testb
cmpsl
inc
or
shlb
jae
cmp
test
pusha
movsb
clc
push
dec
addr16
jno
cmp
or
dec
and
hlt
in
aam
nop
pop
test
adc
mov
jle
sub
jecxz
aaa
xor
jb
mov
jmp
mov
nop
shr
lret
out
sub
or
fnstenv
jb
pop
mov
push
or
std
sub
scas
push
dec
roll
mov
sbb
stos
mov
push
aad
jle
mov
jmp
or
or
idivl
pop
cs
jbe
and
in
dec
xchg
je
outsl
cmc
adc
mov
cmpsl
xor
and
subl
mov
add
dec
xchg
inc
inc
pop
ss
sbb
push
sub
movsl
test
xchg
cmc
push
std
cmp
mov
ja
in
push
fwait
pop
arpl
call
push
movsb
cmp
popa
dec
dec
adc
push
mov
mov
hlt
stc
sub
jge
das
cmpl
inc
hlt
rorl
sbb
rorl
mov
pop
push
in
lods
cmp
rorb
stos
mov
cwtl
dec
jp
loopne
imul
adc
and
movsb
fadd
out
mov
mov
jmp
dec
push
and
dec
shll
jecxz
loope
mov
daa
inc
aam
push
stos
cltd
sub
xchg
arpl
test
shlb
jbe
sbb
icebp
xchg
inc
and
lock
aas
dec
rcr
push
and
daa
xor
loope
inc
call
out
loope
fists
hlt
out
rep
cs
rcrl
cmp
jae
mov
inc
inc
mov
mov
mov
lcall
mov
or
incl
mov
enter
dec
or
movsb
lods
cld
sti
sbb
mov
pop
mov
imul
lea
mov
push
loope
mov
dec
and
sub
adc
xchg
adc
push
xchg
imull
lret
imul
dec
pop
add
xchg
jnp
cmc
fld
mov
cmp
jno
rcll
sub
push
xor
hlt
sahf
sub
mov
adc
adc
ds
dec
jmp
and
insb
inc
mov
hlt
adc
movsb
dec
ja
mov
lret
sahf
lock
mov
aam
je
sub
mov
xchg
je
aaa
addr16
add
push
scas
ja
or
cmp
inc
push
mov
rcrl
test
jbe
das
idivb
sbb
jp
add
xor
xchg
jecxz
popf
inc
jp
jae
pushf
ret
xchg
inc
leave
mov
sahf
inc
or
jle
or
fwait
daa
adc
dec
adc
repnz
lea
mov
add
mov
dec
cmp
call
adc
repz
push
out
cmp
xor
mov
adc
movb
adc
pop
mov
pop
mov
sbb
push
cld
int3
xor
int
mov
inc
decb
cmc
lock
jle
and
mov
and
pop
scas
xor
dec
lea
jno
lds
bound
adc
xor
fildl
dec
dec
je
mov
lcall
mov
cmp
mov
insl
aam
fmul
mov
pop
push
jecxz
xorl
loope
out
nop
add
cmp
pop
cmpb
out
inc
pushf
push
cld
aas
aad
mov
mov
lahf
mov
adc
lcall
repz
std
lods
mov
sbb
rcrl
jmp
push
jmp
inc
shrb
xchg
xchg
mov
shll
cmp
mov
fs
xchg
lods
inc
push
inc
xchg
xchg
adc
jbe
xor
and
add
mov
lret
pop
mov
mov
out
xor
dec
test
mov
scas
lahf
xor
sbb
cmpsb
sbb
add
cmp
jg
dec
sub
adc
loop
push
mov
xor
insl
js
and
xor
or
sub
lods
mov
fisttpl
test
xchg
lcall
ljmp
sbb
and
mov
add
mov
iret
fdivrp
pop
fwait
cmpsb
lret
xchg
pop
push
pop
xor
mov
sbb
pop
cmp
inc
cmpb
icebp
dec
iret
hlt
xchg
fstpt
mov
mov
add
ljmp
nop
adc
adc
mov
jp
xchg
jns
lsl
dec
enter
test
cmpsl
call
lock
in
mov
testb
loopne
jp
mov
jp
jne
add
pop
xor
rcr
repnz
ljmp
test
ljmp
mov
sbb
sub
adc
sahf
cmpsb
lahf
jge
fsubr
jbe
out
xor
or
and
outsl
hlt
enter
jne
cmp
and
xor
jle
jp
pop
or
push
jno
or
sbb
cmp
inc
pop
inc
fcom
in
enter
push
insb
jg
out
xor
cmp
or
xchg
sbb
fs
push
stc
dec
in
mov
xchg
aas
mov
cmp
fwait
cmpl
test
sub
and
imul
stc
inc
es
dec
and
loop
xchg
repnz
sub
dec
push
lret
sahf
pop
dec
mov
adc
hlt
loope
inc
out
mov
js
ret
mov
adc
fwait
lret
adc
adc
iret
or
mov
or
mov
insb
dec
nop
mov
out
out
add
fdivs
loope
or
sbb
pop
addr16
fadd
pop
cmpsl
adc
pop
xor
jne
jno
push
popf
sbb
insl
scas
mov
cmpsl
jbe
mov
cmp
loopne
pop
mov
inc
rolb
jo
dec
pop
adcb
scas
cmp
test
sub
lret
ret
mov
push
popa
sti
jp
fstpl
movsb
incl
test
mov
lods
cmp
mov
mov
xlat
mov
or
fldenv
nop
enter
jo
jb
orb
ljmp
push
push
and
dec
mov
or
push
inc
icebp
loop
push
inc
xorl
insb
push
inc
testl
push
dec
pushf
push
minps
insb
cmp
jg
push
mov
adc
jmp
mov
fcmovnu
ljmp
outsl
repz
fisubrl
mov
ficompl
jge
pop
adc
cmp
push
push
pop
and
aad
ja
jg
and
incb
sbb
outsl
insl
cltd
push
icebp
in
inc
stc
cmpsl
push
xor
addr16
vpaddusw
cltd
aas
addr16
or
mov
xchg
jp
sbb
sbb
push
jle
xchg
loope
int3
repnz
push
hlt
push
cmp
and
xchg
test
mov
jmp
adc
arpl
sub
ja
stos
popf
push
aam
lock
aaa
ss
movsl
cmp
mov
sbb
xor
pop
pushf
sbb
out
pushf
pop
pop
and
add
stc
stc
inc
lods
xchg
je
jp
nop
or
jmp
outsl
adc
adc
dec
out
icebp
out
ds
adc
xor
xchg
dec
clc
mov
sbb
jmp
sub
add
sbb
in
sub
xor
inc
xor
cmc
cmp
xor
pop
sti
mov
loop
xchg
repz
inc
jle
sbb
cli
lcall
push
insl
dec
test
outsl
cmpsl
dec
fidivs
cmp
bound
fs
loope
and
push
cmpsb
or
or
xor
sub
xchg
and
popa
mov
cwtl
inc
std
mov
xchg
jo
mov
xchg
inc
ret
jbe
iret
mov
mov
gs
leave
fdivs
fiaddl
mov
ds
ret
outsb
inc
mov
clc
bound
jecxz
lods
outsb
mov
fs
repz
ficomps
sub
inc
mov
and
sub
adc
cwtl
std
dec
repnz
decb
js
test
pop
sbb
imul
ret
std
jo
repz
and
arpl
xor
adcl
inc
push
add
sbb
aaa
movsb
sar
adc
pop
jbe
addr16
in
pop
mov
inc
test
and
or
sbb
xor
imul
add
cwtl
or
movsl
xchg
movsl
and
cmp
mov
rcrb
rorl
inc
and
fimull
shrl
imul
inc
lock
mov
jnp
je
mov
mov
jge
jmp
arpl
jecxz
sbbl
sub
cmc
fdivs
iret
ss
inc
pop
jp
pop
xchg
movsl
cmpsl
lds
mov
jp
jecxz
add
pop
and
inc
ja
and
pop
hlt
pop
sbb
in
mov
movsb
bound
inc
pop
adc
fisttpll
push
ds
fs
fcompl
test
inc
jae
stc
lahf
jmp
push
stos
test
push
imul
fistl
std
mov
sbb
sub
pop
inc
pop
mov
push
xor
push
insb
lods
rcr
js
cmpsb
jo
and
leave
mov
adc
xchg
ficompl
fcmovbe
jge
or
fidivs
cmp
mov
out
test
test
pushf
dec
fsubs
push
cli
jo
jae
das
scas
call
dec
ret
in
clc
sub
out
or
shll
repz
std
mov
pusha
mov
jbe
orb
pop
xchg
ss
mov
inc
jnp
dec
repnz
hlt
rolb
cs
cli
outsb
mov
mov
xlat
out
xor
daa
jp
lea
stc
pusha
lods
inc
push
jne
ljmp
dec
xchg
mov
xor
mov
jns
fsts
push
mov
inc
inc
mov
call
notl
call
jge,pn
mov
shl
cli
sbb
mov
movsb
adcb
xor
int3
arpl
fs
pop
mov
or
addr16
lods
or
add
gs
shl
lds
int
dec
push
imul
jo
jmp
mov
movsb
dec
cmp
clc
xor
cmpsl
out
imul
jmp
es
es
mov
lret
lret
incl
lcall
cmp
addr16
pop
jbe
cmpsb
addr16
jae
gs
mov
xchg
jns
pushf
and
test
mov
cmp
sub
mov
cs
lahf
add
adc
mov
and
jp
roll
test
jae
lods
data16
popa
or
mov
jle
nop
cwtl
jns
sbb
jge
mov
insb
test
aaa
dec
cmp
cmp
adc
cld
xorl
jmp
xchg
jb
push
or
imul
xor
ljmp
stos
xchg
mov
stos
cwtl
jmp
pop
pop
cmp
subb
and
sub
addb
int3
dec
add
mov
nop
xchg
dec
lahf
in
aam
cmp
mov
bnd
pushf
mov
push
flds
ja
repnz
sub
pop
jle
dec
je
cmp
jne
mov
mov
pop
pusha
sub
mov
lods
in
xchg
rcl
xor
lret
xchg
idivb
out
movd
fiadds
cli
insb
rolb
mov
xchg
jbe
call
pop
mov
lcall
fwait
cmp
sbb
aam
mov
mov
push
in
popa
jno
pop
push
insl
cmp
stc
dec
and
aam
mov
pop
add
lret
add
and
adc
icebp
mov
jge
in
mov
jmp
xor
ds
cmpb
inc
xchg
pop
out
jne
mov
xor
xchg
data16
pusha
in
in
fs
jl
push
adc
push
mov
mov
adc
xorb
enter
inc
dec
xor
push
testb
pop
mov
jecxz
or
xor
and
jnp
sbb
add
cli
or
gs
fs
aad
xchg
pop
arpl
jp
cmp
sbb
jnp
aam
mov
inc
loopne
jae
adc
pusha
jae
jnp
push
mul
xchg
sbb
lods
insb
data16
scas
sbb
or
sbb
pop
test
ret
rclb
and
mov
cltd
daa
and
mov
test
dec
mov
jmp
adc
dec
xchg
mov
mov
fistpll
inc
push
mov
test
push
inc
jne
stos
pop
call
or
mov
and
test
or
hlt
fistpll
mov
push
jo
fisubl
popf
ja
xor
sbb
or
mov
subb
pushf
ret
jle
inc
pop
bound
pop
lahf
xchg
loope
fidivrl
jp
fnsave
and
sub
int
test
shll
aad
loop
ss
int
js
les
stos
out
stos
sbb
mov
test
push
or
push
xchg
sub
xchg
pop
jp
mov
mov
add
daa
fldl
cmp
mov
icebp
scas
xchg
mov
dec
daa
dec
mov
stos
lahf
adcb
shlb
and
mov
mov
jo
mov
lock
insb
push
mov
push
mov
inc
pop
sti
xorb
jnp
sub
mov
cli
inc
scas
frstor
mov
je
popf
lcall
mov
add
cli
pslld
push
int
in
dec
push
xor
scas
mov
hlt
or
fbld
pop
ja
sub
or
adc
add
sub
sbb
push
xchg
sub
fsubr
test
scas
popa
jns
jae
mov
push
jl
ds
lods
sbb
aaa
movsl
lods
xor
inc
mov
jge
sub
or
xchg
jbe
sbb
xor
fisubrs
mov
inc
and
es
ss
in
mov
sub
mov
fildl
or
ja
mov
mov
jecxz
inc
push
inc
push
cmp
xchg
xchg
and
mov
mov
inc
and
cld
push
mov
cmpsb
fdivr
fists
lods
dec
jns
mov
lods
adc
fdivr
jmp
fs
add
dec
pop
lcall
jg
popa
sbb
jno
mov
mov
lcall
cs
popa
dec
out
mov
inc
adc
out
pop
cmc
inc
lret
adc
xchg
pop
xor
idivb
lahf
mov
push
popa
inc
cmp
mulb
js
push
xor
jb
cmp
pop
mov
xchg
rep
bound
mov
fucomp
ja
jno
jecxz
cltd
fstps
sbb
pop
add
mov
or
mov
flds
jne
daa
pop
mov
repnz
pusha
dec
repz
out
adc
lds
adc
pop
and
mov
push
int
dec
mov
sub
pusha
xchg
in
ds
cmp
sub
das
outsl
sub
mov
cmc
and
out
jb
xorl
shlb
mov
or
into
das
inc
lds
lret
cld
adc
addr16
mov
stc
ss
repnz
fmuls
imul
cmp
xchg
icebp
aam
fistpll
repnz
sbb
jecxz
icebp
sbb
lods
in
sbb
adc
shlb
out
pusha
add
lret
or
jp
sub
fadds
in
lods
ret
or
ja
pop
movsl
gs
inc
and
xlat
jle
adc
iret
into
fld
int3
cmpsl
dec
dec
das
je
jmp
or
and
cmpsl
cmp
jge
add
les
xchg
aam
outsb
xchg
cmp
sub
cmp
loop,pt
mov
push
and
xchg
aad
roll
mov
mov
mov
mov
mov
out
adc
ds
cmp
mov
testl
sbbb
mov
cmp
in
pop
pusha
xchg
les
idivb
add
pop
movsb
jmp
fwait
shl
das
fcomps
aam
arpl
xor
nop
inc
xlat
sbb
mov
aam
xor
aas
cmp
ret
sub
popf
sti
scas
mov
inc
push
rcl
sti
jns
pop
cmpsb
pushf
pop
adc
push
std
or
js
push
lcall
mov
rol
lret
fildll
mov
lds
dec
cmp
push
dec
pop
into
cwtl
dec
and
lret
adc
push
nop
push
dec
movsb
in
sbb
pop
aam
nop
xchg
push
cmp
pop
add
int
jbe
add
movb
add
cld
dec
mov
sub
mov
inc
mov
jns
into
jp
sub
das
xlat
dec
cmp
cmp
xchg
insb
pop
and
dec
push
stos
arpl
or
push
fwait
jg
sbb
inc
bound
repnz
and
push
dec
add
hlt
push
outsb
popf
xor
addr16
mov
divb
pop
jo
sti
sbb
inc
pop
dec
pushf
push
cmp
xlat
lds
or
cld
or
sarb
mov
pop
pushl
pop
mov
cmpsl
and
icebp
je
sbb
das
mov
xor
dec
sbb
adc
cmpl
push
pop
fstl
pop
push
popf
jne
lret
in
hlt
jg
test
push
push
xchg
out
xchg
add
and
mov
fwait
iret
leave
pop
push
cmpsl
jmp
in
push
cltd
lods
loopne
rclb
test
adc
outsl
daa
mov
rcr
adc
dec
dec
pusha
lahf
jmp
push
xor
test
arpl
push
fmuls
jg
icebp
mov
inc
xor
insb
clc
or
out
mov
pop
lds
popa
cmp
pop
int3
in
cmp
adc
ret
or
out
in
push
adc
loopne
loope
shrl
iret
cltd
jmp
push
adc
rolb
imul
stos
outsb
cld
das
setp
in
jle
stos
inc
or
mov
inc
daa
jno
pop
sti
dec
inc
or
les
and
xor
aas
cmp
cmpsb
push
out
mov
mov
add
push
xor
loope
int
inc
push
stos
mov
jmp
adc
ja
mov
stos
jl
in
and
fdivs
js
xor
mov
hlt
and
stos
jecxz
inc
iret
push
mov
hlt
mov
pop
inc
sbb
dec
dec
pop
mov
push
int
xchg
push
cmp
imul
int
xor
fbstp
or
outsl
aad
outsl
repnz
pop
mov
sub
sbb
mov
les
nop
cmp
cmc
out
in
dec
ret
mov
outsl
pop
xchg
test
add
movsl
mov
push
test
sti
dec
cmp
adc
sub
push
mov
sub
jae
scas
and
sti
mov
push
inc
and
mov
mov
pop
push
xchg
cmp
pop
cmp
xchg
rcr
inc
dec
cmpsl
xlat
push
jp
or
test
inc
jae
jmp
psubsb
insl
inc
mov
das
les
inc
xor
pushf
mov
addps
push
in
xchg
dec
xor
mov
lcall
pop
lods
xchg
add
in
int
push
cltd
pop
jns
mov
call
pop
cli
jne
cli
rcrb
mov
out
jbe
clc
repz
xchg
jb
arpl
loopne
out
sub
add
mov
mov
jge
subb
dec
and
arpl
xor
aam
sahf
and
hlt
lock
fwait
pop
pop
or
inc
stos
xor
jp
ror
andb
add
bound
adc
je
jge
cmpsb
mov
inc
mov
popa
dec
mov
in
add
imul
fldcw
xor
adc
push
cmp
jg
jbe
out
sbb
fldcw
aad
xor
sbb
xor
add
jmp
mov
mov
cmc
fwait
pop
ret
mov
fnstcw
adc
test
push
je
nop
cs
xorb
cltd
inc
popa
pusha
das
nop
arpl
into
cmpl
es
adc
test
shrl
int3
scas
xchg
rcrl
js
fwait
jecxz
fcomip
shrd
les
push
nop
lods
jle
test
pop
ss
int
and
jns
dec
adc
sbb
mov
daa
pop
lret
enter
mov
jno
jb
xchg
loopne
mov
add
pushf
mov
in
adc
bound
mov
pop
cmpsb
mov
pop
jae
cmpsl
lock
scas
and
and
cltd
andb
mov
cmpsb
cs
cmpsb
adc
push
xor
push
scas
jb
lret
dec
cmp
push
xchg
and
jns
mov
push
js
sbb
cmpb
lea
ja
repz
push
or
pop
mov
out
inc
dec
movsb
push
jae
dec
xchg
fucom
jecxz
int3
pop
lea
ficoml
addr16
daa
mov
sbb
and
cli
cmp
rol
inc
jl
add
add
sub
lcall
jle
je
or
enter
fs
ja
dec
ret
lret
arpl
lret
roll
push
sarb
pop
stos
xchg
adc
leave
mov
ror
push
add
out
inc
sbb
lcall
repnz
std
jo
pop
add
jae
and
hlt
arpl
push
ss
ret
andb
adc
mov
or
clc
lods
ret
mov
jbe
sbb
in
repz
or
jp
inc
and
xchg
aaa
hlt
add
pop
movsl
jb
mov
gs
jmp
mov
jmp
jns
repz
daa
leave
mov
mov
sarl
adc
pop
sbbl
sbbl
cmp
aad
bound
lea
and
inc
dec
loope
mov
es
mov
test
cmpsl
mov
shrd
jne
cmp
inc
ljmp
cmp
xor
sbb
insb
adc
pop
dec
rcrb
sub
shl
lds
add
xchg
enter
adc
add
pop
movsb
scas
push
stos
mov
pop
loop
mov
jge
cmp
dec
repnz
xchg
js
cwtl
lods
gs
das
cmp
inc
lahf
incb
dec
enter
fidivrl
stc
sub
rolb
movsb
imul
jecxz
xchg
jns
fnstcw
pop
sub
mov
add
fwait
xchg
mov
cmp
aaa
mov
inc
push
mull
shll
movsl
leave
scas
js
imul
in
or
mov
mov
cmp
roll
iret
mov
sahf
push
mov
cmpsb
dec
mov
xor
dec
aas
sbbb
adc
pop
into
sub
mov
fwait
sti
movsb
repz
jge
imul
mov
xchg
lcall
xchg
mov
ss
sbb
test
das
mov
lahf
in
out
push
out
mov
push
in
stos
sub
subb
sbb
adc
or
lret
es
push
jo
push
jae
jmp
xor
lods
sarb
jl
mov
or
cmpsb
cli
outsb
jecxz
lods
lret
lods
pop
sub
adc
jne
or
inc
sahf
sbb
cmpsl
push
xchg
sbb
cmc
and
cmpsb
or
or
sbb
or
leave
jge
jp
sbb
lods
cmp
cmp
inc
cmp
xor
mov
push
jp
mov
cmp
xchg
dec
or
mov
ja
adc
leave
mov
pop
nop
stos
mov
call
fs
stos
cld
adc
xchg
xor
xor
stos
xor
insl
inc
push
hlt
cmpl
push
scas
xchg
vsqrtss
outsb
test
loope
sbb
out
outsb
lret
out
aaa
inc
push
fimull
add
pop
mulb
dec
inc
in
cli
insb
das
js
cli
mov
ficompl
in
add
dec
or
test
das
adc
fistpll
xchg
addr16
mov
mov
xchg
je
movsl
test
sbb
jbe
cmp
loopne
cmp
das
mov
lock
test
jb
inc
lds
adc
pop
loope
jp
out
inc
and
xor
mov
xor
cmpsl
sbb
sub
fsubs
cmp
inc
mov
movsl
repz
iret
mov
lock
push
in
jg
dec
lock
nop
cld
in
fcmovne
pop
cmp
rcll
push
inc
or
inc
negl
es
inc
push
lcall
in
enter
adc
push
mov
in
test
stos
mov
add
sub
xor
ret
mov
rcl
xor
bound
jle
pusha
push
sub
mov
popf
push
or
mov
in
mov
test
lret
fwait
repz
fwait
jbe
jge
pop
aam
sarb
mov
cld
pop
dec
mov
mov
rclb
jb
mov
arpl
mov
push
mov
loope
cmp
scas
sbb
mov
pop
cli
jno
xchg
rolb
mov
js
mov
mov
clc
pop
xchg
sbb
aaa
cmpb
mov
cmp
add
popl
lea
dec
or
jno
test
mov
dec
jno
and
lock
outsl
add
sub
std
mov
jb
mov
push
push
jnp
dec
xlat
mov
pushf
push
and
sbb
jp
cmpsb
movb
inc
sub
iret
jg
insb
and
fdivl
inc
adc
test
bound
mov
popf
lods
cli
mov
popa
xor
into
mull
stc
sbb
adc
das
dec
inc
xchg
insl
cmp
push
dec
add
lcall
xor
ljmp
pop
inc
push
jge
fadds
mov
lds
jb
lahf
gs
insl
pop
push
ss
jae
fwait
pop
js
dec
jnp
out
adc
imul
xchg
loop
mov
mov
inc
mov
and
xor
adc
sti
out
jle
fldcw
shll
inc
xchg
ja
into
repz
sbb
add
iret
mov
stos
push
nop
pop
jg
inc
xor
mov
cmp
shlb
dec
add
push
pop
pop
in
add
mov
push
mov
lret
gs
icebp
dec
mov
js
imull
jo
out
aaa
fstpt
pop
adc
int3
lahf
stos
sub
into
stos
and
mov
push
cmp
loopne
jno,pt
and
cld
test
mov
addr16
dec
lret
add
push
add
fistpl
inc
std
mov
or
jno
or
and
cs
mov
inc
insl
in
icebp
push
pop
test
fs
push
int3
inc
xchg
mov
pushfw
lods
cs
sub
push
aam
push
insl
xlat
addr16
jmp
cmp
dec
fsub
mov
faddl
mov
pop
fs
sbb
xchg
stos
cmpsb
mov
pop
mov
cmp
pop
mov
lret
lds
nop
jno
push
lods
clc
mov
inc
push
cmp
xchg
mov
cmp
mov
fadd
in
xor
test
sbb
pop
and
andl
aad
in
repz
jle
out
jnp
andb
inc
mov
lods
gs
mov
aas
add
dec
xchg
in
add
lea
pop
daa
and
cmp
icebp
iret
pop
lahf
pop
movsl
je
xchg
xor
pop
push
loope
mov
or
mov
iret
hlt
mov
add
or
mov
test
add
jg
std
pop
movsl
and
sbb
mov
adc
mov
adc
hlt
fwait
jb
pop
roll
out
and
jbe
movsl
xor
leave
lods
in
popl
push
inc
test
popf
push
sbb
bound
jp
iret
out
imul
pop
lret
sub
push
ror
lcall
fimull
push
jo
mov
movsl
add
mov
push
int
adc
ja
cmp
xchg
add
adcb
pop
inc
shlb
cmp
stos
insl
outsb
enter
insb
mov
outsl
leave
es
xchg
mov
fsts
loope
clc
pop
sub
scas
jo
jns
jmp
sbb
pop
imul
jmp
nop
mov
jl
cmpsb
pop
sbb
stos
jbe
and
je
ja
jne
pop
dec
adc
lock
enter
mov
jge
sub
pusha
add
in
inc
jle
rcrb
lods
jne
repz
xchg
lea
or
jecxz
cmpsb
sub
and
cwtl
pop
popa
sbb
dec
je
add
into
cld
jb
mov
add
and
ret
imull
popf
sti
sbb
xchg
cli
fcmovnu
popa
push
gs
adc
cmp
pop
addr16
mov
or
insl
pop
loopne
aam
scas
test
add
lea
repnz
push
inc
adc
sub
mull
jecxz
mov
out
test
mov
cmpb
mov
cmpsl
jl
xchg
xchg
jns
sub
pushf
jmp
sbb
pop
rorb
jge
fs
xor
cmp
or
jge
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
aam
inc
mov
pop
jl
rclb
xlat
cmp
test
insb
frstor
pop
jb
xor
fistpl
or
ja
adc
lcall
stc
in
repz
mov
mov
aas
aas
je
jl
jg
mov
add
fnstcw
xchg
mov
or
call
sub
cmp
divl
icebp
shlb
pop
sub
xor
xor
inc
mov
jns
out
sbb
in
xchg
sbb
sahf
inc
std
or
mov
mov
mov
sbb
pop
adc
jp
sub
les
xchg
push
inc
sbb
insl
and
sbb
aas
push
lahf
push
addb
fsubrl
add
aam
jmp
ljmp
lods
lods
das
push
loopne
dec
mov
das
push
sub
out
add
ss
xchg
pop
movsl
sub
xor
pop
mov
mov
and
and
rol
sbb
xor
daa
xchg
loop
xor
cmp
inc
push
mov
fisttpll
pop
add
movsb
nop
movsl
test
add
add
add
fs
sbb
cmpxchg
xchg
xchg
stos
dec
sarb
add
pop
cmp
xchg
cmp
mov
in
sub
fmul
adc
jge
mov
pop
clc
jmp
jbe
mov
ja
adc
rcrb
xchg
jl
sub
jb
into
pop
jmp
jns,pn
hlt
popf
clc
rdmsr
out
or
xlat
bswap
fldenv
jbe
xchg
dec
mov
sarl
jnp
imul
decb
je
sbb
cmp
int
and
pop
shrl
cmpsl
andl
jg
pop
xor
sub
lock
test
int3
popf
int
mov
mov
gs
outsl
inc
leave
shlb
ret
pop
sub
and
es
jb
adc
pop
lock
xor
sub
or
jg
je
outsb
mov
dec
adc
pop
mov
lret
fwait
mov
cwtl
out
out
bound
test
data16
cwtl
dec
cld
mov
repz
inc
neg
pop
orl
lret
adc
gs
cmp
in
mov
pop
fidivrs
ret
daa
cltd
stc
jo
mov
adc
insb
mov
push
iret
inc
test
rcl
add
mov
das
and
jl
lcall
sbb
fstpl
xchg
jl
push
addr16
in
xor
pop
sbb
cwtl
je
or
out
lret
sub
enter
js
mov
dec
jl
mov
mov
ss
or
push
sub
push
ret
or
in
mov
add
orb
mov
pusha
jp
mov
pop
xor
test
mov
bound
nop
push
pop
ljmp
inc
mov
imul
xor
xor
out
clc
in
fbld
inc
fcmovne
mov
bound
push
iret
xchg
and
pop
int3
out
inc
subl
out
dec
js
sub
mov
das
filds
addr16
jo
lcall
jge
push
jne
scas
xchg
repnz
xchg
sbb
leave
pop
xlat
stc
mov
daa
gs
jl
in
sub
xchg
aas
fidivl
iret
stos
les
sub
sahf
ret
push
xor
imul
cmp
scas
mov
test
cmc
push
cltd
add
push
push
into
fcom
int3
pop
mov
addr16
enter
pop
mov
jl
jp
in
fstpt
xlat
pop
xchg
stos
scas
xor
mov
clc
mov
lahf
or
sbb
jno
mov
sub
out
ret
mov
or
xchg
movsb
xor
rorl
nop
xchg
scas
stos
mov
cmp
sub
jg
jne
stc
mov
xor
push
ss
pop
scas
lahf
jp
into
out
mov
and
jmp
pop
stc
rcll
test
roll
fcoms
aas
xchg
sub
addr16
mov
imul
mov
xor
notb
mov
in
sbb
into
mov
adc
cltd
js
fwait
imul
sbb
xchg
adc
fwait
out
add
lahf
mov
arpl
jns
lods
sbb
setl
add
test
or
mov
data16
fs
mov
popf
rorb
int
mov
adc
shrl
push
call
test
and
mov
call
adc
mov
push
mov
and
mov
mov
sbb
inc
sub
xor
cwtl
xchg
stos
aas
cmp
push
aas
xchg
inc
scas
or
pop
pop
dec
out
or
xor
jg
push
push
sbb
stc
adc
fcomps
mov
test
imul
inc
fildl
push
stos
push
mov
push
push
xlat
adc
xor
in
scas
sbb
mov
rcl
sbb
mov
rcll
hlt
jns
adc
hlt
jmp
mov
xor
shrb
movsl
fs
cmp
xchg
lods
push
test
pop
enter
push
aam
pop
clc
scas
inc
aas
fcomps
xor
cmp
sub
fsubr
fstps
in
hlt
lock
ficoml
into
daa
ret
mov
push
pusha
adc
aas
rclb
push
jg
pushf
sub
ret
fidivrs
sbb
test
call
sbb
sbb
mov
sbb
in
mov
js
lods
movsl
out
cmpsb
aam
sub
in
lret
push
and
mov
xchg
push
jge
push
push
cwtl
popf
ds
sub
mov
dec
xchg
aam
pop
mov
jle
ret
loopne
sub
ret
mov
jl
sub
sbb
jmp
mov
scas
mov
leave
sbb
xchg
fldt
sub
sub
aam
sbb
fbstp
add
pop
iret
xchg
jle
sub
test
mov
and
xor
mov
cmp
popf
loope
jnp
outsb
lock
sub
cmp
or
dec
inc
out
sub
pop
sub
jg
push
and
ds
outsl
sarl
test
fimuls
mov
call
pop
ret
push
jne
daa
adc
pusha
rorb
sbb
and
add
sbb
les
lret
and
cmp
sahf
xchg
fistpl
call
add
cmpb
inc
inc
mov
push
jo
jne
scas
movsb
inc
jmp
dec
push
icebp
int
pop
cmp
repz
aas
sahf
push
mov
mov
fstps
ret
push
loopne
jl
dec
out
adc
fsts
ss
outsb
lods
dec
sbb
aad
pushf
sub
test
pop
js
mov
cmp
rorb
rcrl
leave
daa
dec
lods
lock
mov
into
push
leave
out
mov
xchg
push
inc
adc
shrb
sbb
pop
outsb
jae
pop
fimull
xor
mov
cmpl
cmp
dec
cmp
shr
int3
leave
jmp
push
hlt
fistpll
outsb
cli
cmp
lds
pop
jle
ret
inc
aaa
sahf
ror
xchg
repz
test
pop
mov
fcomip
pop
mov
jg
xchg
inc
dec
cmp
jb
lods
sahf
cmp
cli
lahf
std
jno
int3
cmp
mov
imul
add
insl
cli
mov
xchg
cltd
enter
cld
cld
mov
lods
push
insb
popf
pop
ret
scas
daa
dec
lock
xlat
push
sbb
sbbl
scas
xchg
imul
scas
mov
xchg
sbb
es
ret
clc
sub
inc
ficoml
dec
sahf
ret
mov
inc
mov
inc
pushf
out
push
cmp
mov
cmp
cltd
push
addl
and
out
sbb
cli
or
xchg
add
loopne
je
ret
sbb
xor
push
push
jge
push
int3
jns
and
mov
xor
dec
ljmp
stos
dec
fwait
cmc
sbbl
add
pop
je
adc
xor
int
nop
cmp
ret
into
lret
adc
loop
sarb
jno
leave
jle
mov
adc
or
ffree
mov
mov
add
ret
mov
add
mov
push
lcall
in
push
jecxz
and
pop
je
js
sub
mov
aad
pop
xchg
inc
jl
mov
hlt
lock
in
sbb
hlt
jo
in
mov
ja
jle
std
xlat
fnsave
pop
pop
lods
pop
push
sbb
pop
push
adc
xorb
push
add
lret
stc
add
sbb
and
sub
pop
jp
add
inc
fildll
mov
mov
in
push
test
fdivr
mov
mov
call
sub
cmp
popa
mov
adc
mov
sbb
adc
push
push
sub
sub
mov
pop
dec
jnp
and
ss
inc
cmp
andl
repz
popa
xor
ja
or
loopne
adc
cwtl
outsl
inc
and
jle
out
fs
pop
dec
loop
mov
dec
jno
scas
pop
mov
aaa
xchg
inc
movsl
mov
andb
bound
pop
mov
mov
add
lahf
cmp
scas
jle
loopne
in
dec
push
jmp
pop
stc
fxch
jns
cltd
pop
pop
jecxz
test
ljmp
les
insl
pushf
loop
mov
xchg
hlt
mov
adc
cmpsb
sbb
pop
and
mov
and
lea
xor
std
cli
shll
cmpsl
mov
add
pop
adc
sub
mov
lret
jnp
push
pop
or
adc
cmp
in
aam
jmp
mulb
dec
iret
ficomps
sub
lds
jns
pushf
and
jo
insl
bound
scas
std
clc
push
shll
sub
sbbl
cld
xlat
mov
test
or
fs
ret
cltd
stos
rorb
std
aam
imul
andb
mov
xchg
xor
rep
orb
ja
inc
popa
repz
sub
pop
mov
mov
xchg
loopne
lock
pop
inc
jbe
icebp
xor
fcmovne
and
add
sub
cmp
fldl
sub
sbb
add
cmpsl
je
and
arpl
hlt
mov
pop
sar
inc
mov
inc
lds
mov
and
pop
daa
movsb
inc
pop
lret
data16
pop
outsl
repnz
lods
cmp
push
jle
cltd
movsb
loop
imul
pusha
rcl
cltd
je
lea
cltd
sbb
push
inc
outsb
jne
test
xor
mov
sahf
push
sub
and
insl
cmc
or
in
fisttpll
ja
loop
mov
inc
inc
push
dec
nop
mov
push
imul
lock
into
pop
test
cmp
pop
pop
mov
dec
je
jp
pop
xchg
push
daa
mov
loope
sub
int
sub
ss
dec
add
xor
scas
ret
rorl
xchg
inc
pop
mov
or
out
shl
xor
add
dec
lea
jnp
je
popf
mov
xchg
das
push
cmp
sbb
es
nop
cmp
in
mov
cmp
mov
sub
divl
pop
adc
in
cmpsl
scas
adc
movsl
mov
cs
inc
leave
push
mov
xor
mov
or
dec
repz
repnz
xchg
test
aas
popf
lret
sub
into
add
adc
xor
outsb
mov
add
cli
pop
mov
dec
push
lds
mov
dec
fists
sbb
mov
inc
mov
mov
fwait
pop
stc
shll
mov
repz
movsl
and
cmp
lret
mov
adc
cmp
sbb
add
add
sub
les
adc
push
addb
add
fists
xchg
repz
insl
inc
in
adc
mov
push
arpl
stc
add
call
jno
out
pop
fwait
std
jmp
and
jle
dec
jg
dec
enter
adc
mov
pop
mov
cmp
inc
cmc
add
lods
jnp
pop
incb
mov
mov
cmpsb
dec
testl
rsm
sbb
das
add
and
rcll
cld
adc
fimull
dec
adc
into
xchg
dec
daa
data16
out
out
adc
out
xchg
xchg
addl
pop
ljmp
or
pop
cmpsl
data16
int3
jg
into
dec
mov
into
jae
pop
xor
icebp
pop
push
xor
pushf
dec
mov
mov
pop
fiaddl
fistl
pusha
xchg
scas
aaa
imul
xchg
insb
pop
push
enter
mov
cltd
pop
lds
rcrb
popa
xor
sbb
jnp
sbb
xor
int3
stos
xlat
jno
push
out
mov
es
scas
inc
mov
jbe
xchg
int
jo
js
sub
mov
adc
or
enter
sbb
sub
sub
rclb
loopne
mov
pop
xor
addr16
inc
sbb
lret
in
push
loop
push
daa
test
or
pop
or
inc
popa
adc
stc
stos
inc
pop
fnsave
mov
ret
in
ficompl
adc
xor
sti
push
minps
dec
dec
dec
fisubl
test
pop
jns
dec
imul
and
fcomps
add
xlat
jns
dec
pop
cmp
push
xchg
pushf
sbb
xchg
xchg
movsb
cmc
add
push
sbb
stc
sub
push
cmp
or
jbe
jo
cmp
sbb
add
sub
push
imul
fxch
test
mov
daa
test
add
xchg
push
lahf
mov
and
cmp
pop
dec
xor
push
mov
sub
jg
sub
xor
fs
jle
movsb
mov
cwtl
or
mov
leave
cmc
push
dec
mov
fisubrl
cmp
scas
and
mov
sbb
push
and
push
mov
sub
movsl
pushf
outsb
mov
daa
mov
sbb
xchg
mov
orb
pusha
les
pop
xor
test
add
int3
dec
outsb
jge
push
add
ja
xchg
mov
mov
sub
nop
ret
jnp
dec
sbb
test
int3
fildll
mov
jb
cmp
std
dec
dec
lret
sub
pop
add
sub
pop
and
mov
cwtl
es
xchg
jno
mov
repnz
cmp
push
mov
movsb
mov
leave
shl
lods
jl
xor
cmpl
xorb
pavgw
cmc
dec
xchg
jecxz
sub
cmp
stc
xchg
test
mov
mov
iret
jle
sub
mov
cli
mov
in
aas
mov
imul
pusha
test
ret
cmpsb
add
jl
mov
movsb
pop
or
daa
daa
cmpsl
negb
scas
pop
push
shrl
bound
jne
adc
jb
pop
pop
in
dec
and
sti
add
loopne
fcompl
sub
fsubrs
adc
cmpsb
loop
fidivrl
in
cmp
pop
call
dec
icebp
xchg
loopne
sub
mov
sub
into
outsb
out
add
leave
cmpsl
fidivrl
movsl
aaa
imul
fstl
xchg
push
sub
and
adc
lds
adc
add
cwtl
xchg
mov
lea
ljmp
pusha
imul
lcall
test
pop
fisttpl
xor
je
xor
fsubr
push
jb
ljmp
mov
sarl
add
sbb
mov
repnz
in
jne
xchg
xchg
test
dec
jae
sub
and
repz
ss
xchg
push
pushf
cmp
mov
and
lea
push
jb
pop
dec
pop
mov
xchg
dec
add
inc
dec
pusha
sarl
jp
mov
js
loope
les
imul
push
test
mov
xor
shl
pop
adc
xor
inc
pushf
sbb
xchg
sbb
and
pop
or
pop
std
sbb
in
fnstenv
nop
jl
in
add
idivb
in
sbb
movsl
push
xchg
pop
ja
sarb
adc
sti
xchg
das
jns
das
inc
adc
loope
push
je
mov
xor
lahf
scas
xlat
repz
decl
sbb
popf
jmp
jmp
sub
add
ja
xchg
cmp
popa
loope
mov
loopne
sbb
pop
cmc
mov
insl
lret
push
pop
mov
and
jecxz
and
pop
out
int3
insl
mov
push
mov
stos
cmp
jmp
dec
test
cmp
popa
icebp
fcmove
cld
jne
mov
push
into
pop
fisttpll
jae
rolb
jmp
adc
mov
aas
sub
mov
icebp
mov
push
ljmp
stc
adc
mov
sub
arpl
and
jae
lret
shlb
sahf
sbb
add
mov
rcrl
repz
pop
pop
cmp
inc
sbb
adc
lcall
dec
sahf
and
ret
insb
fdivp
mov
mov
outsb
int3
dec
dec
insb
cld
js
or
lods
cmpl
movsl
lods
fwait
push
insl
mov
or
mov
cmp
xchg
cmp
frstor
or
xor
pop
sahf
dec
insb
mov
outsb
xchg
movsb
pop
dec
out
pop
and
or
stos
mov
jno
stc
dec
mov
mov
inc
xchg
mov
scas
push
in
mov
into
pop
movsb
insl
stc
mov
cmp
gs
cmp
rolb
repz
adc
sti
add
dec
in
lcall
xchg
or
sub
lahf
lea
pop
aaa
lock
add
test
push
fsubl
pop
cs
addl
repnz
dec
fxch
or
mov
popa
ss
movsb
mov
jp
enter
jl
mov
call
andl
cmp
xlat
dec
nop
in
cmpsl
fdivr
out
mov
jns
mov
cmc
lods
fidivrl
mov
int
sub
jb
lahf
pop
out
ja
pop
or
shlb
jge
and
sahf
out
adc
adc
sbbb
sbb
cmp
je
popw
shr
test
xchg
sbbl
xchg
and
lahf
aaa
or
add
and
mov
xchg
enter
addr16
scas
andl
sub
sbb
call
mov
outsb
test
fimuls
mov
cmp
roll
icebp
xor
mov
xor
adc
dec
ret
rclb
or
xchg
ffreep
aad
mov
repnz
inc
lock
xchg
cli
adcl
jecxz
inc
adc
negl
loope
adc
test
cmp
cmc
pusha
dec
sbb
push
je
scas
loop
add
out
fwait
dec
pop
ljmp
iret
clc
xor
mov
inc
push
sarb
mov
jb
cmpsb
cmp
cmpsb
fsubr
loopne
pop
out
nop
scas
bnd
jle
sbb
xchg
inc
movsl
add
outsb
sbb
fstp
push
add
dec
and
push
and
int3
popf
int3
pop
pushw
mov
add
outsl
loopne
mov
sub
xlat
into
push
jno
adc
rorb
mov
cmp
mov
shlb
xchg
fmuls
push
aam
and
add
lds
adc
sub
mov
xor
mov
lret
sbb
mov
pop
mov
pusha
xlat
xlat
insb
add
loop
lret
ret
into
test
push
sub
pop
je
adc
cltd
gs
lahf
mov
xor
push
loopne
jp
lahf
subb
dec
sub
or
mov
enter
mov
jge
mov
pushf
jmp
popf
jne
in
scas
push
lret
jmp
adc
dec
out
xchg
mov
test
call
fwait
mov
cmpb
sub
fdivrl
in
in
fsubrs
inc
mov
and
popa
out
sbb
mov
pushf
jmp
or
in
loope
sti
and
dec
cli
add
bnd
mov
mov
pop
leave
push
xor
push
cmpsb
fstps
test
dec
mov
cs
or
pop
std
fwait
dec
add
popf
gs
jle
push
mov
adc
adc
lret
and
rcll
and
mov
dec
lret
out
or
pop
std
js
lret
adc
cmpsl
les
pop
inc
and
scas
pop
jb
bound
insb
ds
sbb
es
scas
jmp
sbb
add
out
lods
xchg
jp
sub
xor
pop
jmp
dec
push
hlt
les
mov
push
push
inc
jb
cld
je
sbb
icebp
rclb
pushl
sbb
push
and
mov
push
sar
lods
sub
jne
xor
cmp
pusha
in
push
dec
lret
pop
jecxz
fwait
or
cld
dec
imul
into
ret
scas
gs
mov
ss
or
cmp
cmc
fsubr
ljmp
rolb
repnz
jecxz
mov
hlt
jle
idivb
test
cli
pop
mov
in
out
cltd
test
gs
nop
sbb
sbb
xchg
xchg
loop
movswl
pop
xchg
and
mov
sbb
shlb
outsl
into
sahf
sti
mov
xor
lret
pop
fstpl
adc
loop
aam
cmpsb
inc
push
and
jge
shlb
enter
sarb
dec
loope
xchg
cli
adc
jb
adc
cmp
pushf
xchg
out
xchg
push
jle
fpatan
sti
push
sti
loopne
mov
adc
adc
sbb
popa
fidivrs
push
inc
pop
and
mov
outsb
xchg
xor
sub
push
clc
sarb
int
xchg
leave
scas
pop
aas
je
std
xor
or
xchg
stc
xor
sahf
xor
in
insl
sbb
sub
dec
mov
into
dec
lock
push
shl
and
xor
push
jno
pop
in
mov
add
mov
sti
fdiv
mov
int3
xor
enter
push
clc
jmp
cltd
sahf
mov
xchg
pusha
push
or
aas
pop
or
ja
cmp
nop
jle
sub
xor
lds
lahf
data16
jecxz
sbb
lahf
in
cmp
fbstp
sar
mov
push
dec
leave
and
xchg
xchg
gs
dec
and
fwait
dec
fldenv
or
jmp
rcrl
adc
dec
sti
in
mov
pop
dec
push
mov
lods
adc
dec
pop
push
push
dec
leave
fildl
pop
mov
xor
jp
xchg
cmp
dec
ret
xor
sar
outsb
and
push
pop
imul
gs
jl
jle
add
enter
test
test
rclb
pop
mov
outsl
cmp
aad
mov
mov
data16
lcall
cmpsb
dec
sub
shlb
cmp
pop
mov
loop
push
mov
pop
sbb
add
daa
pusha
cmp
push
data16
lret
cs
mov
xchg
es
push
popa
cmp
cmp
jmp
cmp
jnp
fsubrs
inc
ret
adc
lcall
add
mov
add
aam
inc
lcall
es
hlt
adc
adc
pop
pop
cmp
and
hlt
sbb
inc
add
mul
in
pop
into
sahf
xchg
inc
dec
cmp
cmp
push
push
dec
sbb
mov
pop
push
in
cwtl
sahf
pop
lret
ljmp
pop
adc
pop
push
fneni(8087
jge
pushf
in
js
add
fisubrl
lcall
jp
rcrb
cmp
jae
iret
clc
mov
inc
xor
mov
cmp
jb
lods
pop
clc
ss
adc
shll
inc
xor
sahf
jo
fidivrl
mov
sbb
dec
jne
pop
mov
mov
aam
mov
pop
push
cmp
lock
xor
and
cld
jg
cmpsb
icebp
push
inc
popf
cmpsl
jg
add
cmp
pop
xchg
dec
test
cmp
push
inc
xor
test
sarb
lcall
je
roll
and
lahf
ljmp
shll
mov
xchg
xchg
mov
jg
xor
add
mov
outsb
jl
xorb
pusha
jo
insl
add
mov
push
xchg
jbe
rcr
cmp
mov
andb
imul
xchg
pop
dec
subl
mov
sbb
mov
push
cld
fwait
imul
adc
dec
push
outsl
popa
mov
sbb
pop
aas
daa
int3
sbb
or
push
rcll
sbb
pop
fucomp
out
das
mov
dec
sarb
mov
pop
rcll
pop
or
dec
lds
lahf
adc
cli
mov
lcall
enter
sub
ja
sbb
sub
and
push
mov
scas
xor
mov
mov
xchg
dec
cmc
jno
dec
movsb
sub
xchg
and
pop
gs
dec
xor
mov
inc
loope
mov
mov
mov
xchg
dec
mov
int3
adc
mov
aas
rcl
imul
and
inc
pop
pop
int
jmp
adc
mov
cmp
jne
lock
push
xor
push
repz
int3
js
add
shrb
aaa
mov
push
xor
pop
ljmp
fldcw
div
shll
sbb
mov
or
inc
shlb
fdivrs
and
pop
sahf
push
std
pop
adc
pop
aam
imul
pop
ret
push
test
mov
test
outsl
js
push
out
push
cmp
aas
jnp
and
and
jae
xchg
dec
and
sarb
arpl
push
fistpll
lods
leave
xchg
push
cmc
inc
cmpsl
xor
cmpb
and
outsl
jecxz
das
inc
js
lds
adc
leave
jge
mov
shrl
push
push
stc
or
lret
ss
data16
cltd
sbb
inc
xor
scas
lcall
nop
ss
out
nop
jg
jno
fidivrs
xchg
es
repz
les
sub
pop
jae
or
ja
mov
mov
outsb
cmp
mov
xchg
pop
jb
push
cmp
sub
stos
pop
ret
cmpsl
sbb
ljmp
xchg
jae
fwait
cmp
or
mov
enter
add
ficompl
call
lea
and
gs
dec
js
or
mov
dec
mov
cwtl
fwait
dec
in
or
in
enter
mov
pop
jnp
shrb
mov
nop
ljmp
xchg
xchg
imul
or
daa
ret
sbb
daa
and
or
or
cmp
stos
inc
add
sbb
in
and
xor
mov
adc
pushf
sub
es
mov
xchg
js
shlb
clc
loopne
mov
and
jb
mov
xor
cmpsl
sbb
sub
add
sub
ret
outsl
movsb
xchg
test
mov
movl
test
cmpl
insl
cld
mov
xlat
cmpl
jno
daa
stos
dec
mov
fcoml
movsl
fsub
adc
pop
mov
in
scas
mov
pop
mov
dec
imull
hlt
pop
stos
jnp
popf
cwtl
push
popa
dec
pusha
js
iret
dec
cmp
push
push
cwtl
mov
shlb
or
addr16
aam
jae
leave
in
inc
mov
pop
push
xchg
fsubrl
mov
cmc
inc
inc
push
mov
fwait
pop
adc
add
pop
push
add
repz
inc
popa
sub
or
jle
push
or
les
sbb
mov
inc
pop
shll
mov
xor
ret
ds
push
cmp
xchg
pop
sahf
xchg
fsubrl
inc
pusha
mov
xrstors
push
insl
mov
adc
repnz
pop
test
aaa
ret
sar
sub
sbb
jg
xchg
push
dec
jo
mov
std
mov
ds
std
or
scas
push
es
push
fisttpl
cmp
or
out
mov
dec
or
xchg
rcl
push
cmp
inc
jo
pushl
xor
aam
aad
aad
stos
fisttpll
outsb
cli
fcoml
int
loopne
enter
shl
test
mov
push
dec
lcall
push
or
push
jp
rcr
cmp
fistl
and
mov
adc
lcall
mov
push
notl
dec
pop
in
out
and
packsswb
jb
jmp
mov
dec
cltd
mov
mov
ret
ss
and
jmp
decb
shll
test
inc
stos
icebp
sbb
adc
lret
clc
movb
insb
data16
out
rclb
lock
dec
insb
pop
movsb
aam
jns
out
fwait
jne
fisttpll
lret
pop
popa
repnz
xchg
ss
dec
xchg
sbbb
push
push
jnp
or
dec
adc
push
repz
xchg
sbb
notl
or
lock
or
xor
mov
fsubrl
jge
xlat
xlat
jl
je
lcall
lcall
in
mov
mov
stos
fs
out
cmpsl
xlat
pop
leave
filds
sub
ds
adc
or
addl
rcrl
pop
pop
leave
cli
test
xchg
jae
cmc
mov
popf
jmp
mov
aas
movb
sub
leave
test
push
cli
es
aas
lahf
jns
xor
lods
rolb
jl
mov
sub
aad
mov
cmp
mov
fildl
aaa
ja,pn
and
jns
sbb
push
adc
imul
notb
inc
push
outsb
cmp
loop
cmp
call
mov
xchg
dec
xor
sti
pusha
decb
inc
dec
pop
or
xchg
mov
sub
test
lcall
cmp
add
pop
mov
pop
icebp
lret
adc
fidivrl
adc
sti
pusha
adc
adc
xchg
adc
mov
sbb
jge
fs
xor
pusha
fadd
dec
aad
jle
push
inc
fsubl
push
sbb
pusha
inc
je
pop
sbb
mov
faddl
mov
shl
xor
inc
imul
sbb
insl
push
sub
shrb
inc
leave
sub
cltd
push
je
pop
cld
nop
int
js
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
negl
or
jl
pop
jl
dec
jno
jbe
jmp
andl
stc
inc
pop
jle
fs
push
add
adc
mov
adc
pop
fidivs
lret
es
rcll
gs
jp
shrb
fsubrl
ret
out
repz
fmull
jo
adc
or
sbb
scas
js
aas
and
rcrl
or
int
add
outsl
aam
sarl
das
dec
push
in
shlb
cltd
pop
ret
cmp
loopne
jmp
in
or
mov
mov
std
mov
jb
ljmp
cmc
imul
stc
cmp
outsb
inc
lret
jae
cmp
pushf
jae
into
aas
js
mov
mov
pop
testl
shll
xor
pop
add
add
shll
xchg
repnz
into
mov
loop
push
xor
mov
pushf
ja
cmc
push
iret
or
sbbb
jp
ja
loop
das
pop
int
sbb
repnz
xor
call
jne
dec
insl
adc
inc
adc
repz
ret
clc
lea
fldt
dec
xorl
inc
sahf
aad
cmp
rorb
mov
mov
fs
jns
mov
rcr
adc
int
stos
mov
pop
or
or
and
xchg
subl
sbb
sbb
out
popf
aaa
pop
jb
test
jge
sbb
es
outsb
adc
rorb
sub
inc
rep
outsl
push
out
lret
call
cmpsb
test
sub
pop
mov
inc
sbb
xchg
adc
hlt
test
pop
jle
xchg
sti
nop
push
cmp
mov
xor
mov
cmp
lods
int3
ret
pop
xor
mov
jp
test
inc
xor
data16
jbe
out
ficompl
mull
jmp
insl
pop
and
or
adc
popf
ficoms
jns
inc
mov
not
push
xchg
cmp
das
cmp
cmp
ss
pop
ljmp
adc
cli
xor
int
hlt
jl
andl
cmp
repz
mov
jno
cmovge
lret
pop
test
movsb
pop
pop
outsb
repz
shrb
into
scas
cmp
jae
push
xchg
sbb
mov
and
fstpt
dec
jg
imul
pop
movsl
jecxz
arpl
insl
or
push
cmp
sub
and
xor
push
fldenv
xchg
call
cmpsl
xchg
pop
and
ljmp
xor
lods
loopne
aad
jne
mov
xchg
test
daa
xchg
sbb
jbe
and
in
xor
ja
into
push
in
push
stc
movsb
xchg
and
stos
dec
testb
dec
mov
das
xor
mov
sbb
in
pop
mov
insb
or
cmp
in
hlt
push
sbb
pop
pop
lea
jle
jne
insb
daa
jl
sub
xchg
mov
and
jno
add
mov
hlt
jl
push
or
add
jbe
mov
jmp
test
pop
fldenv
lret
xchg
cs
ficompl
jae
lcall
icebp
sub
jne
cwtl
xchg
xor
nop
sub
inc
pushf
pop
and
sub
neg
mov
nop
xor
pop
add
nop
popf
cs
sahf
lds
dec
add
fmul
lcall
in
sbbl
and
push
ds
roll
sbb
aaa
stc
dec
loop
add
and
fwait
rcrb
mov
repz
cmp
sti
pop
in
jecxz
mov
icebp
cltd
pop
loopne
aaa
add
mov
inc
dec
vhaddpd
cmp
je
inc
shlb
mov
add
jno
mov
xorb
dec
and
repnz
aaa
movsb
int3
stos
jg
xor
mov
dec
xor
xchg
push
mov
mov
add
addr16
sub
test
xor
cltd
and
xchg
inc
pusha
cwtl
stos
in
pop
inc
insb
xchg
aad
stos
sub
sub
nop
shlb
xchg
loopne
push
loopne
jae
pop
xor
scas
push
int
jns
adcb
jo
pop
in
arpl
pop
jno
mov
adc
stc
push
pushf
and
or
hlt
les
movsl
and
fcomi
sar
sahf
add
ret
in
push
mov
jge
pop
and
das
push
cmpsb
pop
jo
dec
mov
imul
push
sarl
xor
inc
fwait
mov
lods
repz
lret
ret
imul
inc
xchg
sub
sub
sahf
jne
mov
push
jne
push
int3
inc
ljmp
popf
inc
cltd
stos
sub
pop
es
jle
xchg
insb
popf
ret
ret
bound
movsl
sbb
fs
push
movsb
push
push
in
cmp
push
iret
add
cmpsl
leave
sbb
fstpl
icebp
outsl
test
stos
ja
jp
clc
xorb
lods
testb
sti
pop
test
jmp
add
adc
cmp
xchg
push
add
sbb
cmpsb
insb
and
dec
int
cmp
gs
je
push
lret
mov
gs
dec
negl
enter
ret
aas
filds
pop
mov
push
nop
idivb
arpl
xchg
test
nop
lcall
fildll
sar
out
or
lcall
push
adc
xchg
cli
lahf
jle
jmp
outsb
and
icebp
push
call
mov
ud0
cs
cld
in
mov
pop
test
pushf
push
out
sti
sti
add
pop
mov
stos
sub
add
rolb
test
movsl
lret
out
mov
fcoml
roll
cmc
aam
aaa
xor
and
repnz
adc
push
xchg
sub
cmpsl
stc
lds
mov
dec
arpl
outsb
xchg
into
lret
insb
and
sub
imul
rorb
lods
jno
xchg
call
test
outsb
js
push
int
repnz
xor
and
jo
pop
sub
push
dec
mov
leave
mov
push
mov
dec
lret
les
idiv
mov
cmp
inc
cmc
cli
lods
push
dec
jo
lcall
imul
cmp
int
inc
das
mov
xlat
and
push
cmpsl
fwait
fwait
pusha
sbb
or
mov
xchg
call
loope
daa
imul
cmp
es
push
mov
push
push
call
add
dec
inc
cld
sbb
enter
int
sbb
sub
mov
jb
addl
xor
insb
xlat
cld
lahf
and
out
out
dec
and
xchg
dec
or
mov
jecxz
lret
and
insb
in
sub
push
jne
cmp
shlb
imul
xchg
lock
aas
pop
icebp
inc
je
pop
aaa
ljmp
jmp
mov
std
enter
pusha
lret
mul
out
mov
pop
add
mov
scas
inc
dec
inc
gs
add
cmp
and
sub
push
xchg
addr16
sub
mul
jno
sub
fwait
shll
enter
mov
mov
or
in
xchg
or
cmp
mov
mov
pushf
add
aam
xchg
sahf
mov
push
sub
xor
ljmp
jo
leave
testb
insb
mov
out
idivl
leave
mov
lods
jmp
cmp
daa
xchg
jns
sbb
scas
ja
loope
and
insl
push
adc
fldenv
sub
adc
icebp
lahf
insl
imul
fidivrs
inc
jb
xchg
jne
mov
jp
lret
jae
popf
lss
push
mov
ja
daa
xchg
and
cli
xorl
or
lea
adc
push
cmc
jg
dec
sbb
mov
in
shr
jg
arpl
xchg
cmpsb
sti
jp
in
aas
dec
in
jmp
les
mov
lds
mov
mov
mov
icebp
cmp
in
push
or
cltd
out
scas
push
arpl
inc
bound
nop
or
mov
xor
push
loopne
insb
shl
and
mov
push
in
cmp
xor
push
push
test
out
in
add
nop
scas
arpl
xorb
xor
out
test
or
into
popf
sub
shrb
sub
outsb
push
and
icebp
ucomiss
xchg
cmpsl
insl
mov
fimuls
sbb
aad
mov
inc
and
jmp
int
lods
lds
popa
inc
add
in
jl
cmp
mov
cld
jo
lods
fbstp
xchg
decl
inc
mov
aam
jp
popa
mov
outsl
cmp
mov
xchg
fnsave
add
mov
insb
scas
pop
in
mov
dec
int
or
adc
jns
adc
test
popf
lds
mov
xchg
cmp
add
sar
xor
ror
push
pop
loop
rcll
out
cmpsb
fisubs
in
ss
imul
jp
push
mov
sbb
add
jmp
xor
inc
outsb
loope
sub
mov
push
jmpw
mov
sarl
cmp
sbb
dec
sub
popf
fsts
out
sbb
decb
ja
stos
ja
bound
arpl
pusha
stc
xchg
outsb
xchg
adc
rorb
lret
or
sahf
sbb
ficoms
addr16
nop
lods
sub
dec
pop
adc
repz
fbstp
push
sbb
push
push
es
xchg
sti
test
inc
pop
cli
js
mov
outsb
fsubl
popa
enter
aas
mov
xor
inc
fcmove
fstl
pop
gs
in
jo
pop
mov
sbb
pop
pop
call
inc
ror
push
mov
or
pop
mov
xor
dec
adc
lcall
jge
adc
inc
sub
and
jmp
rcr
aas
mov
loopne
test
mov
inc
cmpsl
std
jno
jle
shll
rcr
xchg
pop
jle
cmpsl
adc
add
cmpsb
add
cmp
addr16
gs
inc
fcom
std
dec
clc
xchg
xorl
xchg
loop
sbb
dec
cli
mov
inc
cmp
mov
pop
cmpsb
movsl
fld
ret
push
or
cmpsl
sbb
sub
inc
cmc
mov
insl
add
inc
sub
loope
sub
mov
mov
stc
inc
xchg
and
adc
inc
add
xchg
adc
shll
mov
inc
mov
push
iret
pop
add
add
cmp
mov
mov
jno
adc
mov
stos
loop
mov
leave
icebp
adc
imul
or
das
and
or
addr16
jl
ret
pushf
gs
sbb
fidivl
adc
pop
cmp
push
xchg
sar
inc
aas
sub
cwtl
mov
out
mov
cmp
lea
mov
and
fs
push
sub
lods
sti
mov
add
add
push
stos
loopne
shrb
mov
mov
adc
repz
inc
xchg
inc
out
fnstsw
cmp
xchg
mov
jbe
mov
pusha
lods
inc
lcall
adc
rclb
mov
cmp
loop
mov
out
shr
pop
mov
outsl
cli
jle
sub
fnstcw
pop
mov
mov
sbb
pusha
shr
sbb
jb
dec
loope
lds
sub
pop
dec
lods
incb
adc
mov
imul
sahf
nop
frstpm(287
mov
sub
mov
cli
adc
jae
push
and
les
push
negl
xor
sub
adc
ss
div
push
fnstsw
popl
push
mov
testb
mov
lahf
jo
inc
and
cmp
in
hlt
mov
cltd
dec
rorb
sub
adc
stc
popf
outsl
mov
mov
stos
test
les
es
xchg
sub
xchg
sbb
lods
mov
or
adc
out
mov
pop
jmp
out
push
ds
addl
adc
fsts
subb
sub
xchg
xor
mov
pusha
in
in
sub
out
ret
push
jns
and
ja
pop
in
add
cltd
outsb
ficoms
adc
jl
pop
fildl
pop
jp
sbb
push
inc
push
push
test
imul
xchg
loopw
leave
inc
das
dec
mov
icebp
pop
or
cmpsb
popf
xor
jns
pushf
mov
or
cmc
imul
and
negl
sbb
mov
sti
mov
push
xchg
dec
pop
push
in
mov
inc
push
in
fildll
jecxz
inc
mov
mov
je
loopnew
data16
push
arpl
pushf
or
gs
mov
cmpsb
mov
mov
sahf
lret
mov
negl
mov
jb
push
aad
shlb
lret
add
push
jbe
loopne
into
mov
sub
addr16
fisubrs
or
jne
add
jle
jbe
out
in
sti
jo
fstps
xor
repnz
lea
jl
fsubr
adc
or
adc
aaa
int
cmpl
push
dec
fwait
add
add
xchg
scas
push
inc
loope
cltd
into
bound
clc
cmp
in
lret
ds
stos
sahf
int3
and
inc
cmp
shrl
adc
xchg
cwtl
mov
jne
scas
iret
sti
fs
xchg
popf
js
mov
push
mov
adc
movsb
xchg
jge
jge
mov
dec
daa
lods
and
mov
test
adc
lret
inc
int3
loopne
lret
and
push
out
je
jno
xor
xchg
dec
das
inc
orb
mov
or
leave
sub
rorb
aaa
jbe
lret
les
cmpsb
push
mov
push
sub
xchg
aad
and
andnps
mov
into
jge
mov
mov
push
cli
lcall
cs
loop
pop
lds
test
or
fwait
inc
adc
mov
mov
enter
cmpsb
add
adc
xchg
inc
in
mov
adc
add
xchg
sahf
sub
xchg
mov
jbe
pop
out
lret
inc
mov
out
dec
into
hlt
aam
xchg
cmp
push
pushf
push
in
cmpsb
movsb
sbb
adc
jae
inc
stos
test
popf
je
pop
mov
cwtl
lret
test
inc
xchg
jp
pop
mov
aas
jg
xor
push
neg
test
iret
mov
jno
dec
fsubrs
xor
clc
xchg
dec
and
cmpsb
scas
mov
lahf
loop
shl
fstl
mov
mov
push
add
push
lahf
cmpsl
mov
fstpt
fimull
sti
je
ljmp
stos
jno
rcrl
jne
ja
test
mov
daa
stc
out
adc
dec
mov
int
pop
lea
jmp
test
out
mov
jb
xor
call
in
in
insb
inc
scas
outsl
or
in
mov
dec
nop
insl
dec
in
adc
ljmp
add
cmpsl
push
adc
dec
iret
aaa
inc
scas
inc
sbb
sarl
or
jle
and
repnz
nop
xchg
mov
dec
in
dec
dec
dec
jl
sub
in
inc
push
insb
or
test
cmp
mov
test
call
add
leave
add
lock
cmpsl
cmc
sub
xchg
loopne
xlat
aad
mov
leave
pusha
xor
cmp
push
cltd
lock
repnz
leave
in
dec
in
pop
fwait
sub
and
jb
pusha
out
aad
jo
sub
cwtl
mov
xchg
lods
add
loop
cmp
imul
loope
aas
jmp
cwtl
out
push
fwait
shrb
cmp
dec
and
jae
mov
movsl
xor
mov
jne
and
push
mov
sbb
in
inc
xchg
daa
lcall
in
mov
dec
data16
fisttpl
push
xor
in
lret
sbb
pop
or
rclb
mov
es
jnp
xor
stos
add
repz
adc
mov
dec
sar
pop
outsb
mov
sbb
mov
and
orb
and
movsb
ds
jno
iret
daa
je
subl
or
insb
sahf
dec
sub
out
mull
push
jge
out
jnp
add
mov
clc
xchg
cltd
mov
xchg
clc
or
jmp
add
test
lods
pop
fisubrs
test
sub
popa
adc
sbb
sti
adc
sbb
test
inc
das
mov
pop
dec
repz
dec
cmp
out
inc
and
popl
mov
orb
dec
lret
sub
sbb
std
out
ret
mov
in
addb
dec
loope
sub
negl
stos
push
ffree
xor
push
call
ds
sbbb
and
dec
scas
mov
sub
subl
or
sbb
and
jp
iret
cwtl
jae
fwait
mov
add
xor
dec
xchg
jno
fisubl
sub
xchg
and
leave
push
xchg
sbb
js
mov
ja
js
fwait
lcall
xchg
adc
pop
and
data16
test
and
dec
mov
shlb
sub
or
mov
push
fwait
sbb
out
hlt
and
aas
mov
pop
andl
mov
mov
into
je
xchg
sahf
testl
outsb
pop
mov
out
xchg
movsb
cmpsb
push
mov
ja
cmc
mov
mov
mov
or
push
sub
push
fnstsw
mov
sbb
inc
lahf
pop
out
daa
push
mov
rcrl
imul
or
add
fistpll
xor
mov
lock
pop
aaa
sub
imull
dec
mov
mov
adc
clc
ss
add
add
aaa
repnz
cmp
lcall
or
test
jle
or
sbb
std
xchg
dec
mov
xor
test
inc
sar
adc
adc
mov
sbb
sbb
pop
xchg
std
add
cli
dec
pop
sbb
out
cmp
pop
gs
scas
cmp
xchg
push
xlat
mov
mov
subl
movsb
test
mov
cs
cli
dec
rolb
sbb
and
or
xchg
push
lret
inc
test
js
adc
outsb
jbe
imul
inc
or
inc
pop
call
insb
test
cmp
adc
jo
cmpsl
shrb
and
lock
rcrb
adcl
pop
push
xchg
mov
xchg
sub
cs
xor
push
and
addr16
jge
sub
pop
out
jbe
or
mov
stc
pop
jae
jnp
inc
lock
and
inc
stos
std
pop
push
iret
roll
mov
clc
mov
mov
mov
adc
mov
addr16
adc
daa
scas
pop
ljmp
fistl
sub
mov
test
inc
sub
adc
pop
jno
mov
jge
push
mov
scas
sarl
mov
int
pop
jmp
mov
popf
xlat
mov
sar
jmp
fstl
jne
xchg
std
test
ds
cmp
idivb
rol
xchg
cwtl
xor
xor
es
mov
inc
nop
adc
cs
jl
daa
iret
dec
xrstors
pop
adc
std
xor
imul
jp
jnp
mov
and
lahf
xchg
xchg
or
iret
dec
imul
xchg
out
aad
sub
adc
or
mov
ret
cmp
addr16
adc
mov
out
dec
stos
lret
mov
scas
nop
addb
cmpsl
dec
mov
scas
pusha
mov
inc
popa
push
mov
imul
mov
iret
into
xchg
push
pop
pop
mov
arpl
shll
and
mov
push
mov
mov
hlt
pop
clc
dec
dec
xor
ficomps
dec
sahf
stos
inc
outsl
fwait
sub
out
pop
in
out
js
sbb
jo
jge
pushf
jle
ficoml
pop
push
jb
sti
mov
xor
popa
xlat
inc
sub
mov
and
sub
and
std
pop
into
adc
dec
sbb
nop
sbb
pop
mov
dec
jnp
fldcw
dec
mov
mov
jae
js
call
and
stos
arpl
insl
sbb
int3
xor
punpckldq
jmp
daa
outsb
or
cld
cmpsb
xchg
ds
stos
sub
push
push
sub
fs
push
xor
into
stos
sbb
inc
aas
mov
sar
rcll
sub
add
pop
repz
call
stos
addr16
dec
mov
add
fldt
leave
cmpsl
addb
xchg
fldl
cltd
sbb
in
loope
sub
insb
fidivl
pushf
je
push
pop
sbbb
push
jmp
or
xor
fwait
stc
cmp
loope
pop
test
dec
cmpl
mov
stos
fs
dec
test
cld
sub
out
and
in
mov
call
cwtl
xchg
imulb
fsubr
cmpsl
fistpl
loopne
cwtl
jle
jmp
xchg
sub
and
pop
xchg
or
push
stc
shl
cmp
adc
cmp
hlt
push
hlt
test
out
push
into
mov
testl
adc
fxsave
outsl
movsbl
lods
gs
aas
pop
cmpsl
dec
je
sarl
jp
lods
fistps
cwtl
fwait
sbb
pop
icebp
cmp
int
mov
mov
pop
mov
dec
mov
outsb
ror
sub
dec
mov
mov
test
stos
pop
pusha
cmp
loop
movsl
sbb
push
jg
xor
fcomip
sbb
jno
sbb
and
xchg
nop
aaa
orb
std
int3
scas
and
icebp
stos
add
mov
cmp
insb
add
std
add
cli
icebp
clc
stc
subb
bound
enter
fistpl
inc
add
add
push
clc
les
imul
lock
cmp
dec
mov
cmpsb
iret
cli
inc
or
fsubrl
daa
and
sbb
sub
addr16
mov
sub
xchg
mov
adc
mov
and
orb
push
mov
jno
outsl
mov
or
jb
cld
ret
and
imul
mov
loope
loopne
mov
jae
movsb
cmp
je
ljmp
adcl
pop
jg
adc
imul
adc
inc
add
mov
sahf
mov
jl
mov
scas
loopne
data16
call
das
jb
xor
pop
mov
lret
push
dec
mov
repnz
xchg
push
shll
mov
jnp
jle
inc
lcall
mov
mov
mov
mov
jae
test
daa
sbb
mov
xchg
push
outsb
pop
and
in
bound
mov
pop
cmp
pushf
sbb
mov
cmp
push
xchg
outsl
and
insb
xor
cld
repnz
pop
test
and
push
jge
leave
mov
mov
jne
aaa
mov
push
pop
fldz
jp
cmc
push
dec
sbb
inc
lods
pop
imul
jb
and
pop
xor
sub
push
loope
xor
inc
add
mov
stos
cltd
inc
sbb
iret
or
jbe
and
cli
mov
push
pushf
scas
rcll
test
incb
repz
test
pusha
pop
jno
sbb
jmp
sbb
xor
movsl
jbe
sbb
mov
dec
jns
js
mov
and
mov
jge
pop
rcr
insl
jl
dec
pop
out
push
imul
mov
cwtl
jns
adc
push
jne
lods
xchg
popa
xor
and
push
add
xchg
fisubrl
jp
imul
sub
adc
loop
out
or
fsubp
mov
jp
cmp
adc
and
js
fbstp
push
cmpsl
jnp
adc
cmp
xchg
in
sahf
add
xchg
jbe
pop
mov
lea
lret
ret
jle
or
mov
fldcw
jnp
iret
mov
add
push
inc
insb
sub
fimull
sub
jmp
xchg
mov
inc
rcrl
arpl
mov
popa
sub
or
ficoml
call
outsb
mov
pop
cs
add
lahf
sbb
sahf
shll
or
xor
xor
shrl
xchg
push
mov
nop
data16
mov
lods
hlt
dec
push
lret
jge
arpl
lcall
mov
add
and
imul
stc
scas
ror
pushf
push
inc
mov
in
inc
pop
adc
dec
cmpsl
sbb
fistps
xchg
out
sbb
mov
jle
aas
lret
cmc
jg
int3
mov
mov
es
mov
addl
mov
imul
inc
addr16
push
stos
imul
cmp
pop
cltd
mov
mov
pop
cmp
jae
insb
sub
jmp
stc
je
jns
lea
push
aaa
jg
adc
popf
adc
mov
mov
or
jl
out
or
fwait
das
fisttpl
test
xchg
mov
pop
mov
dec
lods
out
xor
xor
movsb
push
push
adc
push
lock
pop
xchg
inc
in
rolb
or
ds
xor
xor
push
cmp
lahf
fdivrl
stos
mov
mov
lods
mov
pop
inc
jp
imul
loope
mov
sub
xchg
fsubrl
aam
pop
xor
and
push
inc
dec
cmc
adc
faddp
ret
mov
cli
jle
inc
out
lahf
in
shll
lret
xor
xor
rcrb
mov
push
sbb
bound
sbb
lods
xor
or
jp
int3
xor
fldl
jge
jecxz
test
xchg
nop
in
popf
sbb
mov
loopne
cltd
movsb
mov
data16
push
push
mov
insb
inc
adc
ror
call
push
push
jp
aad
inc
mov
cmp
adc
pop
jecxz
scas
xchg
lods
jge
jne
adc
xchg
mov
cmp
push
sahf
sub
mov
or
inc
bound
mov
inc
adc
and
jno
in
push
xchg
sub
sub
clc
fwait
jbe
cmpsl
sbb
jmp
dec
daa
fxch
pop
psrlw
je
jg
add
jo
in
or
or
push
es
aad
test
aad
mov
cltd
lods
dec
cmp
mov
inc
adcl
addl
adc
add
lock
inc
mov
xchg
xchg
xor
int
add
or
add
sbb
imul
imul
push
cmp
daa
std
xor
fldenv
test
sub
stc
add
and
push
mov
pop
les
movsb
out
sbb
cmp
xor
sbb
loope
gs
push
ret
cmc
dec
cmpb
jnp
jg
dec
test
stc
push
rcl
arpl
std
inc
mov
inc
stos
mov
and
push
lcall
or
inc
shl
jbe
loop
mov
xchg
hlt
pop
inc
sbb
fisubrs
enter
out
dec
inc
in
and
test
imul
jmp
ljmp
mov
xlat
icebp
add
shl
mov
cmp
xor
pop
test
or
pop
subb
jb
xchg
mov
aas
inc
arpl
pop
and
xor
mov
inc
add
sbb
cmp
cmpsl
push
cmp
cltd
mov
sahf
mov
shlb
dec
xor
mov
cmpsb
ljmp
sbb
aaa
xchg
lock
pop
pop
packssdw
push
and
enter
outsl
mov
push
movsl
mov
mov
mov
rorb
cltd
and
push
sbb
cltd
lret
stos
mov
fisubrs
mov
adc
sbb
sbb
aaa
into
jae
dec
arpl
mov
dec
sbb
fs
pop
push
pop
out
sub
out
testl
dec
imul
hlt
inc
push
add
inc
mov
adc
push
mov
aas
and
ss
xor
xchg
jo
pop
movsl
sti
das
adc
out
xchg
push
clc
pop
test
adc
jp
nop
mov
xchg
or
sub
test
inc
negb
jae
inc
xchg
adc
cmp
mov
sbb
mov
add
mov
mov
repnz
mov
inc
je
das
mov
mov
fsubrl
or
shll
jne
dec
fiadds
fstpt
sbb
add
jns
pop
mov
xor
or
stc
imul
add
js
xor
xchg
add
xchg
cwtl
flds
lods
mov
xlat
or
xor
push
out
add
pop
jl
test
xchg
in
stos
nop
mov
les
push
icebp
sbb
dec
pop
aaa
shlb
fwait
das
dec
sub
lret
ret
jge
popf
stc
pop
aaa
inc
xor
icebp
push
dec
aas
dec
ret
notl
aas
stos
es
adc
or
mov
xchg
outsl
aas
dec
add
je
lret
pop
lock
fistl
in
jae
daa
aam
sti
sub
call
and
test
mov
dec
fbld
js
daa
cmc
jmp
xor
add
lret
addr16
cmp
inc
add
sahf
adc
fsubrl
jo
cmp
xchg
daa
sbb
cmp
mov
dec
mulb
jno
xlat
lcallw
icebp
pop
pop
mov
jno
mov
cmp
lcall
negl
cmp
sbb
sub
rclb
jno
test
out
and
mov
push
subb
jns
push
das
gs
mov
pop
mov
dec
mov
hlt
pop
jge
and
xor
mov
cmc
mov
mov
xlat
lret
outsl
cltd
fstpt
push
popf
inc
into
sub
and
mov
inc
in
enter
cmp
test
jmp
jecxz
loop
shl
clc
ljmp
aas
jb
shr
xchg
sbb
outsb
lret
cmp
mov
push
sahf
inc
scas
in
xchg
pop
divb
xchg
adc
in
gs
das
mov
xor
inc
jp
inc
ljmp
pop
orl
push
popa
dec
aam
pop
lret
ret
cmp
pop
out
call
adc
sub
cs
jecxz
movsl
les
ljmp
sub
sub
mov
mov
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
das
adcb
inc
scas
jl
inc
pop
jl
enter
adc
cmp
or
sarb
jl
adc
cwtl
cli
ds
sahf
jnp
daa
sub
movsl
js
sti
sbb
xor
ja
inc
in
dec
lds
push
jnp
iret
push
xor
jbe
test
fstps
dec
mov
mov
add
inc
nop
cmc
sarb
push
adc
mov
push
pushf
cmp
call
sti
xchg
sub
outsb
insl
push
jno
test
repz
out
lahf
fmul
lea
adc
dec
fcmovnbe
mov
lods
adc
pop
add
movsb
rclb
xor
lcall
push
pop
das
popf
pusha
jle
addr16
xor
pop
jle
jl
imul
test
jle
cmpl
ror
and
xor
movl
roll
orl
xor
dec
out
push
pop
mov
jmp
jne
add
andps
shlb
rol
push
movsb
pop
jl
mov
or
xor
leave
add
arpl
movsb
jnp
sbb
pop
leave
subb
pop
inc
sbb
cmpsb
stos
scas
xor
cmp
push
inc
jbe
adc
popf
or
incl
test
imull
jle
cmpsl
out
in
dec
and
int
and
and
push
ja
ret
mov
cmpsb
lods
insb
sbb
cltd
cmp
imul
pop
test
aam
cmp
daa
mov
aaa
pushf
sbb
lods
rcll
or
cmp
ljmp
int3
mov
xchg
and
and
jge
stos
lahf
imul
sub
sahf
jns
test
movq
sub
popa
rep
addr16
or
loop
push
mov
icebp
loop
repnz
push
cmp
inc
nop
or
xorb
mov
dec
pop
icebp
lret
fbld
mov
data16
int3
in
mov
std
fsub
jae
mov
push
jp
stos
loopne
xor
pop
insb
dec
xor
xlat
push
dec
jb
ss
loopne
pushf
push
imul
cli
ret
push
or
adc
inc
fwait
mulb
push
jl
jnp
testl
or
shr
mov
je
inc
add
loop
cmc
xor
les
sub
or
push
push
xor
nop
test
stos
push
adc
sub
add
jno
cmpsb
nop
loopne
call
push
fnsave
cwtl
movsl
add
cmp
sbb
cld
dec
cmp
jne
fistpl
mov
xor
fcom
xlat
mov
adc
mov
or
enter
mov
cmp
mov
clc
je
and
in
mov
mov
fwait
sbb
adc
jnp
je
insl
insb
shrb
xchg
jo
sub
adc
cmp
adc
pop
adcb
sbb
cmc
add
xorl
mov
sahf
push
es
notl
movsb
sbb
pop
arpl
das
fdivrs
push
and
or
xor
in
hlt
stc
dec
pusha
in
in
in
aas
xor
clc
les
cmc
sti
dec
dec
adcb
lds
mov
pop
xchg
xor
clc
mov
in
or
pop
mov
in
jle
jno
dec
loopne
jl
mov
push
js
inc
add
nop
and
js
pop
jo
inc
cmp
xchg
adcb
notb
popa
adc
xchg
cmpl
pop
xor
inc
sub
mov
popa
ds
movsl
hlt
and
jno
mov
dec
or
pop
xchg
and
fwait
sub
add
popa
xchg
test
addb
mov
mov
mov
test
insb
andl
lods
mov
xlat
sbb
xchg
push
mov
out
pop
pusha
aam
push
fwait
pop
cmp
adc
add
stos
ffree
lods
jbe
push
xchg
aad
popa
inc
fnstcw
negb
shll
pop
pushl
inc
or
mov
fisubrl
sub
cli
movsl
xor
pop
int3
jle
dec
jecxz
addr16
sub
pop
push
cmc
jmp
cld
mov
sub
fdiv
bound
sub
out
bswap
jp
adcb
mov
inc
ss
sti
cmp
add
xchg
shlb
cmp
ficomps
popa
sbb
adc
or
push
insl
mov
imul
sbb
icebp
push
icebp
out
pop
loope
pop
or
ja
pop
or
xchg
lock
xchg
adc
loopne
push
lret
insl
sbb
int
pop
mov
jo
adc
jo
icebp
loope
sarb
mov
mov
out
cld
cmp
es
inc
inc
inc
bound
ljmp
push
lea
bound
and
mov
adc
xchg
or
aas
sub
test
out
aam
movsb
push
mov
inc
loope
jns
mov
stos
xchg
mov
sub
and
cmpsl
xchg
bound
inc
pop
pop
inc
cwtl
sbb
inc
mov
sbb
aaa
jecxz
aam
shlb
js
hlt
popa
loope
popf
arpl
repnz
test
movsl
adc
inc
add
pushf
mov
sub
fdecstp
sbb
insl
ljmp
mov
sub
out
xor
mov
pop
in
ret
mov
flds
cmp
push
xor
jo
xchg
pop
mov
aad
inc
adc
mov
pop
xlat
subb
test
nop
and
dec
pushf
pop
or
gs
xor
adc
jb
cmp
pop
sbb
jle
sbb
imul
pop
pop
fldenv
mov
xchg
iret
fimull
push
and
popf
cld
sti
jmp
into
sub
pusha
icebp
stos
dec
sbb
xchg
out
idivl
cmp
mov
stos
pushf
xor
enter
add
add
out
jp
cmc
push
xor
cmp
xchg
cmpsl
cmpsl
pop
test
in
dec
and
mov
cmp
or
hlt
jb
dec
jns
pop
xchg
filds
cmp
sbb
mov
inc
mov
sub
mov
push
imul
mov
or
pop
pop
movsb
push
call
xor
sbb
fdivrl
jnp
mov
loop
jge
add
cwtl
inc
add
jle
dec
faddl
add
adc
aad
sbb
stc
stos
movsb
cwtl
pop
lcall
jge
dec
xchg
ljmp
inc
mov
ds
xor
fadds
subl
into
push
pop
in
adc
xor
cltd
pop
cmp
pushf
and
rorl
xor
jne
and
xchg
outsl
pop
in
in
mov
sub
xchg
xchg
inc
adc
inc
jne
out
jmp
nop
xchg
and
and
push
iret
icebp
push
sbb
xchg
sub
sbb
mov
dec
pop
out
or
mov
push
push
fs
jae
mov
popf
jle
aad
mov
and
out
icebp
mov
sbb
inc
or
mov
push
stc
loop,pn
fnstenv
and
inc
cli
xchg
dec
popf
pop
jle
movsl
push
hlt
push
fstps
lock
adc
cmp
mov
leave
lods
and
sub
mov
dec
push
pop
filds
testl
les
insb
ljmp
xchg
loop
mov
data16
jns
outsb
insb
or
bound
movsl
repnz
outsl
dec
xor
sbb
loopne
jb
cmp
hlt
add
adc
sahf
pop
shrb
mov
pushf
add
push
shrb
sti
dec
add
adc
fmulp
mov
push
or
sub
aas
jmp
test
not
add
aam
inc
jge
nop
jle
insb
push
in
fs
aaa
sub
jmp
outsl
mov
daa
inc
lds
stos
pop
in
dec
xor
gs
daa
add
cmp
push
in
popa
push
into
cmpsl
sbb
js
or
scas
or
ficoms
mov
iret
test
insb
xor
test
movsl
ljmp
fnstenv
mov
inc
dec
inc
xchg
ret
lcall
sahf
rol
movl
pop
in
imul
xchg
sub
or
adc
mov
sti
lret
movsb
fisttps
daa
lods
loope
clc
hlt
js,pt
cmp
outsb
and
mov
mov
push
mov
mov
test
mov
and
xchg
adc
int
push
movsl
imul
sub
add
inc
jbe
cmp
or
jg
cmp
adc
test
ret
iret
push
lods
dec
test
fiaddl
into
dec
lods
insl
dec
scas
lods
movsl
outsb
mov
hlt
or
neg
pop
pop
jae
fs
pushf
imul
test
push
lret
nop
jbe
add
sub
pop
adc
mov
std
test
cmpsl
repnz
pop
leave
mov
adc
sub
repz
jecxz
in
push
sti
es
push
sub
in
clc
cmp
dec
and
lea
jo
dec
adcl
rcll
xor
loopne
mov
dec
scas
jp
jg
mov
cmp
test
mov
shrb
daa
jmp
jg
pop
xor
mov
repz
enter
js
gs
aad
shlb
adc
in
add
in
or
leave
and
add
mov
sub
xchg
and
rcr
mov
fbld
dec
mov
fdivl
out
xchg
rol
dec
jns
fldcw
stos
jge
lcall
outsl
xor
mov
in
pusha
fcmovbe
or
adc
cmp
cmp
adc
pushf
add
mov
vmwrite
fistpll
or
lret
jmp
add
out
test
aam
cltd
xchg
daa
mov
dec
test
or
push
mov
je
fmull
inc
push
dec
fbstp
adc
cwtl
add
mov
push
cmp
addl
bound
jmp
mov
inc
and
push
or
sti
mov
icebp
sub
or
or
push
xchg
out
sub
les
xchg
lahf
push
and
pop
leave
pop
add
roll
mov
adc
lods
insl
mov
lods
mov
push
and
jg
xchg
jae
loop
mov
and
fstps
xor
xchg
fs
adc
lods
loopne
aaa
loop
pop
loopne
add
pop
idivl
shrl
xor
mov
sub
in
or
jg
test
or
add
push
frstor
lds
rorb
js
ja
push
push
pop
xchg
aaa
cltd
int
sahf
call
jb
mov
xor
dec
mov
and
bound
ja
push
aam
fcmovnbe
sbb
arpl
adc
stc
in
mov
out
mov
mov
enter
cwtl
iret
jo
aad
lock
popa
xchg
enter
je
int3
mov
push
subb
mov
fs
adc
mov
fiaddl
jmp
sbbl
je
fldl
test
decl
pop
fildll
mov
repnz
adc
or
push
arpl
cmp
lret
add
fisubrs
out
mov
aam
dec
cwtl
push
push
inc
outsb
xor
push
cli
or
xorb
andb
cmp
mov
icebp
lcall
cs
pop
nop
push
sub
pop
in
addr16
mov
or
leave
aas
cs
xor
jl
decb
inc
flds
jb
int
stc
fbstp
pop
push
addr16
adc
jp
pushf
test
fisubl
cwtl
add
cltd
cmp
subl
mov
xchg
cld
stc
cmc
sub
and
and
pop
cmpsl
out
out
xor
inc
lret
xchg
aaa
push
jno
outsl
dec
pop
sub
xor
les
js
xorb
push
ret
push
and
and
dec
inc
dec
and
shlb
adc
in
sbb
cmpl
xor
jne
dec
jmp
rorl
cmp
mov
xchg
ret
ja
sub
xchg
pop
out
fwait
rorb
cwtl
insb
out
aas
shlb
mov
sub
pop
mov
and
cmc
icebp
jmp
jmp
xor
inc
in
jl
cmp
jmp
xchg
ljmp
jl
cmpsb
hlt
rclb
paddq
lods
add
adc
fstps
add
or
sub
es
xchg
stc
mov
out
mov
lret
pop
mov
cs
push
repz
ljmp
mov
aaa
push
and
jb
test
dec
cmpsl
pop
out
movsb
or
dec
mov
mov
je
loopne
jg
pop
add
push
es
out
adc
sbb
gs
out
int
mov
enter
xor
testb
scas
jnp
es
addb
push
push
sarl
jmp
jmp
jg
std
pop
jno
out
jmp
pop
jbe
jo
jno
test
add
imul
jmp
xchg
jne
dec
sub
punpckhwd
adc
mov
xor
insl
inc
lods
in
add
mov
sub
negb
sbb
xchg
push
leave
addb
repz
addr16
adc
push
xor
jae
in
in
pop
test
or
dec
adc
lcall
dec
es
add
pavgb
dec
sbb
stos
scas
mov
lods
sbb
adc
inc
inc
push
jne
repz
shll
mov
inc
xchg
xchg
dec
mov
in
pushl
movsl
cmp
or
cld
xchg
sti
in
pop
cmc
xchg
lret
mov
xchg
ret
inc
stos
stc
idivl
pop
jae
test
mov
jnp
into
inc
nop
imul
test
and
mov
xor
push
cmp
aaa
push
inc
sbb
cmpsb
mov
dec
leave
das
add
adc
in
hlt
out
outsl
dec
enter
pop
psraw
leave
ss
out
lods
xor
mov
leave
mov
stos
pop
xchg
shl
adc
in
sbbl
popf
loop
lcall
mov
xlat
lret
test
sub
push
psubusw
sbb
cld
mov
jmp
scas
repz
fmull
loopne
popa
jp
pop
mov
repz
push
stc
push
out
fs
test
daa
addb
addr16
fisubl
jne
movsl
push
xchg
sbb
dec
mov
fwait
in
mov
xor
cmp
fstl
and
cmp
jl
push
pushf
cmp
mov
ret
sbb
jnp
imul
aaa
lods
lods
jecxz
ds
push
xchg
xlat
out
mov
in
aam
addr16
stos
mov
sbb
inc
inc
cli
test
sti
int
xor
xor
jmp
xor
rorb
dec
adc
nop
in
mov
outsl
jns
or
push
jmp
sub
jecxz
cmpsb
fs
xor
mov
sbb
cli
mov
jb
mov
adc
dec
ljmp
in
push
mov
adc
mov
sbb
cld
or
mov
stc
xlat
in
dec
stc
or
xchg
mov
xchg
jo
es
mov
in
and
outsl
fidivrl
jmp
mov
xchg
out
sbb
pop
aad
leave
jb
in
ja
data16
inc
mov
cli
insl
rolb
sbb
stos
and
or
mov
and
rcrl
icebp
xchg
cmp
lock
andl
sub
icebp
orl
enter
inc
stos
push
pop
mov
mov
movsb
add
sub
adc
add
into
sub
mov
mov
cwtl
leave
lcall
scas
sub
or
cmpsb
stc
mov
pushf
jno
insl
dec
pop
jbe
aam
inc
adc
inc
movsb
cmp
ret
les
pusha
jne
insl
ss
scas
jecxz
iret
int
xlat
pop
nop
mov
mov
inc
pop
mov
psrlq
adc
mov
aad
scas
dec
xchg
sar
xorl
mov
push
ss
jo
icebp
out
in
xlat
out
mov
lds
adc
sbb
aaa
push
cli
in
iret
and
mov
and
cmpsb
and
adc
sub
push
inc
and
xor
pop
xchg
mov
push
sub
test
movswl
mov
lds
stos
sbb
mov
out
dec
pop
lock
add
fldt
mov
cwtl
add
movsl
loop
cmp
out
std
xchg
jbe
test
pop
cld
push
scas
jle
repz
fidivrl
xchg
mov
mov
clc
inc
dec
xorl
xchg
pop
cs
insl
ret
and
loopne
jle
test
add
shl
jge
mov
push
inc
stos
pop
adc
xor
repnz
ds
mov
in
jne
fadds
or
pop
fstps
pop
repnz
add
fmuls
push
bound
pop
in
stos
mov
shl
xor
and
ficompl
xchg
icebp
and
jns
aas
jbe
or
add
jnp
sbb
sub
test
icebp
idiv
dec
push
outsl
std
dec
xchg
xorb
cmp
xor
push
mov
in
jg
popa
popf
cmp
lret
test
xchg
sub
inc
sub
mov
mov
adc
std
add
lret
pop
cld
bound
pop
jmp
and
cli
xchg
adc
xchg
negl
mov
xchg
cli
lahf
inc
sbb
mov
mov
nop
adc
int3
dec
test
push
and
and
loope
jno
cmp
lahf
push
mov
enter
push
shr
cmpsl
das
push
int
jne
xlat
repnz
into
and
push
out
push
mov
xchg
bound
xlat
data16
mov
sbb
add
push
xor
dec
fldt
sub
lret
and
mov
push
mov
inc
or
fildl
jb,pt
lea
add
mov
jge
scas
mov
inc
std
pop
jo
jl
cmpb
mov
cld
test
ja
adc
cmpl
sti
push
mov
sub
cmp
in
imull
dec
test
jg
dec
mov
outsb
cmpsl
movsb
mov
mov
iret
shl
enter
int3
mov
jle
xchg
jge
out
pop
push
ja
mov
push
sub
daa
in
push
jp
and
gs
pop
jmp
gs
dec
loop
call
jnp
xor
push
and
imul
lahf
fstpl
add
aad
adcb
inc
push
push
lret
dec
xor
pop
fs
jmp
cmp
jo
fwait
xchg
fwait
xor
sbb
dec
push
jnp
je
adc
std
push
scas
and
mov
ja
lcall
enter
inc
push
push
push
pop
xor
pusha
loope
mov
fildll
xor
je
mov
mov
mov
cmpsb
lret
pushf
test
icebp
call
push
shlb
mov
pusha
sub
inc
push
jg
notb
test
or
je
dec
ret
fsubr
pop
jle
imul
jp
sahf
out
lods
loope
out
push
pop
push
or
add
fstp
xchg
sbb
dec
int3
dec
xor
test
rol
lahf
fistl
stos
out
push
mov
sbb
addr16
sti
mov
xchg
into
add
cld
and
and
repz
addl
fisubrl
inc
in
fnsave
call
fbstp
pusha
pop
lds
and
lods
fs
frstor
lods
jne
test
jg
jmp
in
or
jp
lods
dec
pusha
and
out
dec
leave
xchg
jecxz
dec
pop
out
sarl
jecxz
aas
push
test
fimuls
jns
jno
push
xor
lcall
out
xor
push
or
xchg
inc
sti
cmp
in
repz
pop
push
and
cmp
fiaddl
rorl
orl
cwtl
cmpsl
cwtl
jae
mov
push
das
lahf
jne
imul
mov
mov
xchg
cmpsb
adc
cmp
adc
adc
iret
fldz
gs
stc
xchg
adc
inc
fdivrl
xor
std
xor
sbb
jnp
lcall
push
nop
pop
jle
pop
pop
inc
xor
loopne
jecxz
shl
arpl
vhsubpd
es
out
in
data16
loope
ret
test
movsl
sar
xor
pusha
mov
jae
or
sti
jge
push
jbe
or
jbe
jb
push
test
dec
xchg
mulps
lods
pop
cmp
mov
adc
xor
in
jg
movsb
aaa
mov
mov
mov
and
push
cltd
aad
popf
push
dec
pop
add
stos
or
and
jp
mov
add
nop
xchg
sbb
in
mov
outsb
in
cmc
aas
stos
push
sbb
sbbb
sbb
mov
dec
testl
push
sub
mov
outsl
call
mov
stos
test
pop
jecxz
sub
or
xor
movsb
aaa
pop
mov
pop
mov
jbe
jle
orl
xchg
enter
bound
xchg
push
incl
inc
addr16
jnp
shlb
repnz
lock
pop
adc
pop
stos
jnp
cld
pushf
les
das
mov
or
fwait
rcl
sbb
mov
es
dec
xchg
cli
fisttpll
jnp
jae
xor
aad
xchg
rol
sub
fimull
sub
addb
xchg
icebp
or
or
push
mov
xor
mov
cmp
lahf
out
adc
data16
adc
mov
faddp
js
mov
fistps
mov
add
mov
inc
sub
arpl
adc
xor
cmp
sahf
mov
and
lock
out
int
movsl
adc
mov
imul
sarb
ds
cld
ficompl
shl
cmp
xor
addr16
iret
imul
sbb
out
leave
lods
mov
pop
ljmp
cmp
and
jae
sub
mov
bound
xchg
jl
popf
int
repnz
cld
xor
mov
xor
icebp
aas
sub
call
pop
fiaddl
push
sbb
mov
in
jb
rcl
jp
ret
xor
sub
jno
nop
shll
mov
std
addr16
push
test
gs
push
mov
jae
mov
mov
test
push
jp
mov
sti
inc
das
or
test
scas
cltd
aas
sbb
call
jae
cmpsb
sbb
add
adc
notl
ret
sbb
fnstenv
in
lds
mov
mov
inc
clc
add
testl
jbe
in
outsl
mov
xor
lcall
rorl
pop
lock
xlat
push
ss
sahf
sbb
mov
sub
and
addb
or
jcxz
xchg
adc
cmp
icebp
lahf
lods
fistl
push
lret
mov
in
test
adc
test
add
push
add
loop
adc
add
add
in
cmpsl
fsubrp
call
add
lcall
sub
inc
jmp
mov
jo
or
insb
not
dec
lret
mov
mov
pop
movl
pop
cmp
and
adc
fbstp
mov
mov
aam
mov
div
aaa
jns
out
cmpsb
mov
mov
cmp
pop
inc
mov
mov
mov
pusha
aam
sbb
jecxz
sbb
into
mov
pusha
test
icebp
inc
orl
ret
cltd
mov
push
into
int3
inc
mov
adc
cmp
sarl
mov
movsl
das
and
shrb
dec
pushf
and
pop
mov
in
xchg
in
jne
outsl
js
hlt
jae
pop
mov
xchg
sbb
mov
mov
pop
in
popa
dec
ja
jae
add
aam
adc
mov
sahf
cmp
push
push
sub
or
mov
data16
adc
xchg
adc
sub
subb
repnz
jno
inc
out
cwtl
mov
in
push
adc
divl
test
xchg
cmp
pop
hlt
mov
push
mov
out
xchg
mov
mov
lock
aad
pop
mov
mov
es
pop
mov
sbbl
xor
pmaxub
mov
out
ret
cli
leave
lods
pop
sbb
daa
dec
out
inc
jnp
leave
int3
sbb
stos
fdiv
push
ljmp
cmc
ds
repnz
pop
lret
pop
insb
lods
xlat
mov
jecxz
push
arpl
enter
nop
mov
lahf
add
and
or
and
loop
sahf
sbb
adc
jns
data16
in
sbb
shll
jp
push
cwtl
adc
mov
and
push
mov
je
movsb
push
mov
in
adc
jnp
das
mov
inc
adc
dec
mov
mov
cld
mov
adc
mov
fdivl
sub
popf
out
push
push
adc
fwait
jbe
repnz
inc
int3
in
enter
mov
pushf
pushf
cmp
loopne
pushl
dec
jge
mov
loope
mov
cs
cwtl
or
push
and
shl
sbb
int
lods
mov
push
pop
lods
jns
mov
arpl
repz
mov
sbb
jp
mov
push
add
loop
lods
cli
push
adcl
dec
fsubl
jecxz
jmp
nop
test
mov
ds
and
mov
sbbl
sahf
repz
movsb
xchg
rcll
mov
fcompl
mov
das
pop
dec
xchg
inc
js
jmp
fstpt
ds
add
loope
daa
push
test
popa
aad
das
mov
dec
xor
mov
inc
fadds
addl
sti
inc
ret
insl
lret
out
inc
sub
sti
insb
inc
int
jle
xor
jmp
xchg
xchg
cmc
or
outsl
roll
shlb
test
fstps
inc
xor
jp
mov
inc
jnp
add
add
push
cmpsl
lahf
cmp
inc
int3
jae
xorl
xchg
push
mov
mov
test
jb
cltd
in
cwtl
nop
out
pop
and
aad
jbe
lods
mov
clc
xor
insb
pop
xor
push
int3
imul
cmp
scas
mov
mov
stc
or
or
xchg
pop
push
pop
and
pop
cld
xchg
lods
ficoml
lret
cmp
pushf
jnp
mov
push
sbb
cmp
loop
mov
jns
fstps
mov
test
cmpsb
addl
ja
dec
cmp
add
cmpsb
mov
and
lret
fwait
testl
push
mov
rolb
popa
les
pushf
push
jge
sub
inc
test
push
pop
pushf
jp
mov
fstps
icebp
xchg
xchg
jae
inc
negl
iret
inc
test
test
mov
jo
sbb
push
jle
fwait
je
incb
sahf
inc
add
and
cmp
push
add
jns
imul
fmulp
sbb
into
xchg
stc
fildll
sbb
cltd
mov
into
gs
mov
lods
lock
push
jmp
rcll
pusha
rol
pop
shll
or
outsl
es
mov
subb
cmp
hlt
mov
mov
push
cs
int
je
adc
and
dec
les
repnz
sub
xor
xorl
lods
lods
cltd
cmc
mov
mov
subl
arpl
pop
inc
sbb
add
xchg
push
cmp
inc
lcall
mov
jl
ret
sbb
lret
adc
loopne
fisttps
sti
sub
xchg
and
shlb
in
lcall
jne
adc
mov
andb
sahf
ljmp
mov
addb
pop
ja
inc
loope
sbb
fcompl
dec
or
inc
push
jbe
or
mov
mov
sbb
fadds
or
leave
loop
sarb
fimull
das
es
pop
shlb
pop
jmp
mov
adc
cmp
rcrl
or
jb
loopne
jle
out
dec
in
lods
popf
sbb
mov
movsb
jmp
inc
lret
das
jp
das
cmp
cmc
cmp
scas
jl
inc
repz
mov
into
inc
out
into
lret
and
inc
xsaves
hlt
cmpsl
add
outsl
lret
rcll
loopne
mov
add
in
mov
xchg
idivl
jge
or
sub
dec
push
fs
ficoms
sbb
clc
jg
test
dec
andb
cmp
sub
mov
push
shl
andl
cmpsb
lds
aam
inc
jmp
mov
jae
push
mov
add
js
mov
pop
cs
add
dec
xchg
fmull
xlat
dec
push
in
decb
inc
pop
mov
xorl
sub
notb
dec
fiadds
mov
ss
push
lods
es
inc
cmpsl
insl
test
mov
mov
push
cmp
fnstsw
jo
adc
adc
inc
xchg
mov
lret
dec
icebp
xchg
sarb
loop
add
mov
std
dec
test
mov
les
sti
inc
cmpsl
add
mov
subb
not
xchg
dec
or
sar
dec
loope
ret
rorb
rcll
or
rol
cli
dec
pop
int3
pop
arpl
sti
mov
xor
scas
mov
sbb
fidivrl
cmp
and
and
scas
loop
fcmovnu
pop
pop
push
cld
pusha
inc
xchg
loop
lret
out
lods
jecxz
jl
clc
xor
insl
les
xlat
lock
iret
sbb
adcl
sbb
dec
mov
pop
fnstenv
test
cwtl
sbbb
xor
pop
xor
mov
test
mov
sub
adc
iret
ficompl
add
lods
imul
mov
mov
notb
aas
pop
jb
nop
push
jns
push
and
dec
cmc
mov
enter
icebp
add
adc
mov
dec
xor
andl
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
enter
mov
pop
jl
pop
js
rorl
scas
mov
and
ficoms
sti
xchg
adc
cld
adc
imul
and
mov
pop
sub
push
fstps
inc
mov
sbb
add
inc
adc
rep
xlat
push
xor
lret
mov
das
outsl
mov
xchg
stos
add
jbe
pop
fisttpl
or
js
or
test
mov
mov
dec
pop
dec
mov
enter
nop
out
sub
jae
adc
popa
stc
mov
lret
dec
add
lods
setl
pop
sbbl
mov
test
aas
js
xor
cmp
push
call
jo
cmp
and
mov
clc
test
inc
sti
ficomps
and
jge
add
stc
jge
fisttpl
and
ds
jecxz
sbb
sub
adc
pop
push
outsl
roll
hlt
xchg
mov
or
out
pushf
ds
xsha1
cmpsb
cmc
push
das
pop
std
addb
and
js
jge
jmp
jge
push
adc
adc
adcb
popf
test
or
pop
mov
out
test
popf
xchg
and
sar
shll
lret
adc
xchg
or
inc
add
inc
test
pop
or
lcall
shll
ja
jae
pop
int3
mov
mov
jb
cmp
inc
pop
loopne
xor
mov
dec
pop
cli
pop
and
mov
mov
mov
pop
cltd
cmp
add
xchg
adc
int3
out
lods
xchg
gs
mov
mov
mov
popa
iret
fs
adc
xorl
inc
jnp
sahf
fsubrl
cli
mov
cmc
mov
cld
idivb
pop
scas
out
cmp
mov
jl
and
add
push
add
xchg
les
pop
and
jp
lods
cmp
mov
push
int3
inc
mov
xchg
pop
lock
inc
add
jge
inc
sbb
mov
or
outsl
fisubrs
or
sub
add
or
es
pop
imul
iret
adc
push
fsubs
mov
adc
add
push
sub
adc
mov
xchg
mov
icebp
movsl
pop
lret
mov
cmpsl
mov
cmp
movsl
push
push
mov
lret
je
outsb
fimull
sbb
pop
into
mov
lahf
inc
fucom
mov
fs
or
push
mov
cmp
dec
xchg
adc
and
mov
mov
mov
movsb
cwtl
sub
pop
pop
jae
sub
mov
nop
jle
lods
scas
sbb
clc
addl
mov
xchg
lret
fs
inc
mov
bound
movsl
mov
jl
inc
jne
outsl
aad
adc
cmp
lcall
lds
push
mov
aad
push
mov
xchg
fiadds
mov
sahf
mov
shlb
jns
inc
sarl
mov
add
xor
popf
mov
jne
jmp
shr
jno
dec
sbb
mov
dec
xor
sub
aaa
fnstsw
cltd
js
fisttps
dec
xchg
cmp
ret
add
test
cmpsl
lahf
pop
popa
scas
in
pop
fwait
scas
subl
cmp
pop
rol
int3
cli
mov
into
shll
adc
test
sti
mov
jge
ds
add
nop
enter
int3
and
iret
lahf
push
std
mov
jp
pop
mov
or
sbb
push
adc
clc
push
xchg
rclb
mov
inc
add
hlt
fistps
loope
or
notl
lds
imul
sahf
arpl
mov
dec
stc
lcall
xor
xor
and
stos
add
enter
arpl
cmpsb
jno
mov
repz
insb
dec
popa
faddl
insl
pop
stc
add
xchg
jg
ljmp
mov
call
mov
imul
lcall
mov
repz
in
mov
aas
shlb
push
rol
addr16
sahf
push
lcall
push
sahf
fdivrp
lds
mov
das
in
jno
shr
pop
addr16
jg
cmp
mov
xchg
cmpl
sbb
jmp
sbb
ss
xchg
adc
add
inc
push
loopw
in
cwtl
xlat
lea
inc
and
loope
addr16
jg
xchg
xchg
push
test
add
xor
cmpsb
insl
xchg
pop
inc
inc
jmp
jno
mov
test
or
mov
sub
mov
pushf
mov
xchg
sarl
push
outsl
xchg
xor
out
mov
fimull
jl
fstpt
mov
push
xchg
stos
test
pop
fiadds
cmc
mov
cltd
xchg
subl
dec
sti
les
sub
repz
mov
add
mov
ficompl
ret
sub
pop
sub
andb
mov
sub
clc
cli
out
adc
pop
loopne
dec
aas
dec
add
cmp
popa
or
insb
negb
lret
fldl
sti
imul
sbb
rorl
mov
cmpsl
or
mov
lret
jb
sub
mov
test
push
or
jo
add
test
repz
out
cs
xlat
xlat
fsubs
push
inc
mov
sub
pushf
jae
jl
lock
nop
mov
push
jns
push
mov
aas
xchg
mov
fnstcw
gs
mov
xchg
ds
inc
popf
jmp
dec
mov
call
fists
cmp
dec
shl
out
popa
push
pop
xor
cmc
xchg
js
or
idivl
popf
insb
inc
btr
cmp
adc
mov
cld
add
pop
jns
add
jecxz
cmc
cwtl
xor
addb
aam
mov
test
jbe
xchg
hlt
sti
insb
inc
and
push
inc
in
add
push
inc
and
popf
cmp
cli
ror
mov
das
sub
mov
imul
push
js
sub
xchg
je
xchg
sahf
or
mov
icebp
dec
lods
sbb
cmp
rcll
adc
add
imul
and
and
pop
aam
mov
xor
mov
les
pop
incl
aad
aam
lods
mov
lret
addr16
testl
inc
repnz
mov
aaa
sbb
es
push
push
nop
inc
push
xor
out
xchg
fdivr
push
shlb
sbb
cwtl
mov
adc
frstor
loope
pop
andb
push
pushf
and
xchg
cld
jno
jecxz
stos
push
jnp
cltd
sub
and
jbe
mov
movsb
mov
loope
push
das
sarl
in
add
push
faddl
pop
clc
pop
lret
push
frstor
cli
sub
aam
ljmp
push
sub
jae
sub
cmpl
pop
sbb
repnz
jnp
push
add
xor
je,pn
jb
and
push
int3
inc
and
rclb
stc
js
xchg
push
fildll
mov
in
cld
mov
inc
xor
nop
shll
cli
or
xor
add
scas
xchg
xor
sub
int3
jo
es
mov
inc
daa
incl
cmp
or
scas
push
xchg
fcmovb
mov
push
sbb
jns
jne
cmpsl
xchg
and
repz
fists
pop
dec
pusha
cmc
fisttpl
jl
push
aaa
or
or
mov
mov
ror
cli
push
dec
rcl
xchg
insb
mov
or
ljmp
test
bound
and
movsl
loop
sub
shl
push
cli
cmp
jg
pop
inc
and
adc
dec
pusha
outsl
rolb
adc
sub
mov
mov
xor
inc
aas
jle
push
cmp
sub
pop
inc
lahf
xchg
les
test
cld
bound
clc
pusha
jle
iret
xchg
ficoms
cmp
jno
gs
movsl
cli
pop
jne
hlt
jl
dec
sub
sarl
inc
arpl
sub
xchg
pop
mov
xchg
push
or
insl
cltd
dec
pop
ja
sbb
imul
jg
xchg
ret
and
inc
fistpl
jno
movsl
inc
xchg
inc
mov
loop
dec
jae
and
jmp
rorb
push
or
mov
mov
test
rcll
add
ss
fwait
cmp
push
add
pop
cli
loopne
xor
xchg
jb
jmp
popf
jecxz
out
xchg
ds
mov
mov
adc
cmpsl
add
sbb
or
xchg
in
repnz
and
cli
mov
vsubps
repnz
call
in
xchg
add
clc
cmpl
cmc
sbb
mov
jno
mov
das
cmc
xchg
sub
lahf
mov
inc
fiadds
aaa
imul
imul
xchg
sbb
roll
bound
and
inc
shrl
sub
mov
jno
in
push
xor
mov
in
mov
out
cmp
xchg
cs
sub
cmp
push
jbe
push
imul
ds
jg
or
insb
or
fstps
ja
daa
push
pop
in
mov
not
xchg
mov
mov
dec
lds
js
les
push
cmp
lret
mov
cmp
dec
ffreep
jb
dec
out
loopne
pop
xchg
rcrl
cmp
pop
cli
out
std
inc
hlt
adc
lahf
inc
mov
rolb
arpl
inc
push
pand
jmp
or
cld
lods
pop
mov
inc
xor
pop
jo
in
in
jg
test
repnz
sahf
dec
jo
pusha
clc
int
pop
xlat
sbb
mov
sbb
and
stos
push
cld
jg
xor
xchg
dec
ret
sti
adc
jmp
jle
mov
jbe
jge
lock
xor
pushf
mov
xchg
gs
mov
jae
push
lret
imul
lret
mov
push
scas
pop
pop
loope
stos
into
mov
and
js
add
das
xchg
mov
cmp
stos
sarl
xchg
push
sbb
or
mov
inc
or
lahf
setl
cli
sub
imul
pushl
inc
aad
loop
inc
test
iret
stc
add
jp
ss
lods
ficoml
inc
insl
repnz
mov
fcomi
cli
push
lahf
jae
aas
fisttpll
sub
lret
add
sub
jno
and
in
enter
jne
push
pop
and
sub
jns
dec
pop
popa
hlt
sbb
cmp
fwait
cwtl
mov
and
cmc
in
add
sub
mov
lds
test
fs
mov
es
fs
sub
je
js
adc
sub
sahf
and
test
and
pop
push
lret
imul
push
fs
jne
inc
pop
pusha
lcall
movsb
sub
cmpsb
lahf
mov
shrl
mov
xor
data16
into
fidivrs
gs
pop
cltd
aam
mull
pop
pop
inc
jnp
jns
sbb
scas
cmpb
sbb
sbb
nop
jne
cmpsl
pop
xor
adc
sub
stos
into
mov
cmp
fldenv
pushaw
sbb
into
and
fwait
dec
iret
movsb
xchg
push
jge
jmp
xchg
push
outsl
in
ret
in
fadds
fucom
scas
nop
outsl
scas
aas
fsubr
dec
pop
cld
jge
hlt
rorl
clc
push
ret
gs
adc
rcrb
addr16
in
sub
rcll
push
shll
push
mov
mov
int
push
push
lahf
dec
cwtl
arpl
and
test
jp
rcl
cmpsl
mov
inc
and
cmp
mov
lods
lcall
mov
loope
out
push
xlat
lods
test
mov
stos
pusha
jmp
hlt
lret
mov
mov
push
gs
mov
mov
mov
sar
xor
movsl
test
mov
xlat
out
out
lea
jle
nop
ja
fisubrl
mov
inc
jg
push
in
lock
mov
scas
ja
cltd
cmp
mov
sbb
and
mov
inc
mov
mov
aas
sub
ljmp
cmpsl
loopne
jle
cmp
jnp
cwtl
int3
push
es
push
mov
adc
pop
mov
pop
add
movsl
nop
outsb
mov
nop
icebp
inc
mov
adc
sbb
inc
addr16
insb
loopne
andl
lahf
ficomps
mov
daa
xchg
and
jmp
adc
pop
xor
ret
mov
push
jecxz
jmp
adc
xchg
repz
pop
mov
dec
idiv
mov
stc
mov
imul
xchg
mov
dec
xchg
sahf
mov
sub
pop
icebp
adc
pop
jne
hlt
sahf
enter
insb
mov
es
lcall
aad
lea
mov
and
dec
imul
inc
push
adc
in
jb
or
mov
iret
in
mov
push
jg
mov
es
mov
pop
rcrb
imul
cmp
pop
and
push
shrb
fdivl
sub
mov
into
and
into
shl
cmp
xchg
xor
pop
in
adc
inc
sub
dec
fsubrl
scas
pop
sbb
mov
xor
and
or
stos
aam
popa
push
xchg
mov
push
mov
inc
xorb
inc
pop
nop
push
shl
outsb
mov
mov
adc
cmp
xor
cmp
pop
mov
add
pop
imul
ret
pop
or
push
cli
hlt
sti
test
inc
shll
int3
xchg
cld
push
mov
pop
stos
insl
xor
cltd
mov
xchg
dec
push
bound
rcll
mov
ljmp
jecxz
in
aaa
arpl
out
mov
outsb
cli
mov
aas
mov
inc
or
xor
push
mov
mov
push
cmpsb
out
pop
push
outsb
stos
dec
jne
mov
inc
sti
out
cwtl
jne
mov
push
dec
sub
notl
inc
sbbb
daa
out
enter
jb
cmp
das
in
movsl
ret
sub
lcall
xchg
aaa
mov
and
push
and
cmp
fldt
and
xchg
cmp
cmpsb
mov
mov
push
leave
cli
imul
or
dec
test
mov
mov
adc
mov
div
pop
adc
cwtl
testl
lea
or
xor
loope
mov
adc
out
mov
mov
push
jmp
stos
out
push
add
sbb
pop
adc
adc
adc
in
test
jae
pop
aaa
loope
clc
in
nop
xchg
xor
push
gs
adc
sbb
movsl
jmp
leave
dec
mov
mov
in
mov
add
add
rcr
add
adc
aaa
out
leave
loope
lret
js
pop
mov
loopne
and
loope
out
mov
mov
in
imul
lahf
jp
or
orb
pop
and
sub
jo
sub
ret
arpl
fs
xchg
orl
mov
pop
cwtl
sahf
pop
mov
sbb
in
dec
and
cmp
xchg
jmp
fs
push
iret
mov
xor
mov
int
je
enter
out
cmpsl
push
inc
rcr
shlb
xor
lods
sbb
add
xchg
rcll
jge
into
iret
add
negb
movl
xor
stc
inc
sbb
mov
fildl
bound
xchg
cmp
jg
into
imul
sbb
lret
sbb
dec
and
add
push
sbb
adc
xchg
add
sbbl
jb
or
mov
cmpb
ds
xor
int
fs
bswap
or
nop/reserved
scas
popf
sub
pushf
jns
shlb
dec
inc
dec
jns
outsb
adc
ficoms
adc
xchg
xor
cs
and
and
jnp
outsb
outsb
out
pop
cwtl
xor
lret
repnz
mov
sahf
mov
xor
ret
mov
xchg
fs
aaa
cmp
bound
mov
cli
mov
es
in
add
in
cmp
cltd
pop
add
or
repnz
rolb
sub
xor
sbb
stos
mov
or
js
push
mov
xor
push
mov
pushf
jae
repz
cltd
dec
fwait
jp
imul
icebp
sar
out
inc
repz
pop
mov
incl
test
lret
pusha
or
lcall
xchg
sti
pusha
push
push
mov
push
arpl
cmp
jae
jp
in
mov
sti
mov
xorb
mov
lcall
hlt
shll
cmpsl
dec
loopne
bnd
mov
das
fldt
jbe
add
imul
loopne
jg
xchg
aaa
mov
loopne
xchg
rcrl
enter
aam
sub
add
push
push
and
movsl
fstpl
lods
inc
fdivs
data16
daa
add
rcrb
dec
pop
adc
int3
gs
mov
dec
mov
es
jmp
fs
and
jl
insb
rcrb
inc
or
movsb
jecxz
lock
popf
adc
xchg
or
pop
sbb
sti
outsb
jno
jb
push
icebp
enter
sbb
adc
add
pop
or
aas
jmp
cmp
or
pop
addr16
or
int3
push
push
mov
mov
mov
sarb
test
mov
xor
incl
lahf
clc
je
lock
sub
pop
inc
push
lds
mov
mov
mov
mov
adc
cmp
inc
nop
mov
xor
and
leave
popa
or
push
xchg
pop
out
xchg
enter
cld
sub
aaa
enter
movsb
jl
xor
lret
xchg
loop
ficomps
push
add
call
cmp
shr
and
loope
push
inc
sbb
dec
lret
movsb
pop
or
sub
jb
jb
repz
jle
aas
lcall
adc
dec
sbb
mov
ds
mov
clc
pop
jecxz
cmc
sub
in
int
adc
pop
in
scas
dec
lret
lret
xor
push
push
scas
xor
in
xchg
pop
pop
and
shlb
xchg
mov
pop
clc
mov
inc
loope
lds
add
clc
scas
sub
movl
pop
or
xor
push
cmp
mov
push
cltd
into
jge
fsubs
jbe
das
and
xchg
inc
les
xor
inc
add
adc
add
push
dec
pop
xor
dec
pop
mov
inc
xchg
testb
add
xor
inc
jle
scas
mov
dec
pusha
test
jmp
add
mov
insb
add
loopne
push
in
cmp
xor
out
jbe
ficomps
je
jl
ret
inc
and
insl
pop
jb
xlat
sbb
pusha
test
pop
loope
dec
mov
push
stc
outsb
iret
icebp
cmc
xchg
aaa
dec
xchg
loopne
call
cltd
inc
and
push
mov
aad
jae
adc
mov
imul
lcall
subl
pop
inc
imul
shll
adc
jp
mov
mov
lods
sti
sarb
sbb
mov
xor
pop
fsubr
loop
popa
xor
in
jmp
dec
or
leave
cltd
out
cltd
lods
mov
enter
ja
jp
jbe
decb
lret
xor
dec
cmp
pop
and
mov
and
jl
pusha
lods
dec
mov
cmpsb
sbb
inc
iret
insl
inc
inc
add
cmp
sub
xchg
xor
jle
nop
lret
out
dec
std
aas
or
out
or
dec
loope
dec
xor
int3
dec
vmovmskps
inc
mov
enter
sub
inc
jecxz
mov
jg
mov
repz
js
jl
xor
rclb
loope
mov
das
xchg
add
ja
adc
mov
fcoms
cmp
and
hlt
xchg
sbb
data16
push
and
cmp
push
pop
ljmp
and
xchg
aas
jmp
jne
clts
sub
scas
or
loope
in
mov
int3
scas
test
push
nop
jl
les
jns
mov
hlt
xor
push
jg
inc
scas
scas
pop
cmp
cmp
test
dec
not
outsl
and
mov
in
test
jb
stos
enter
add
jg
and
push
and
add
fwait
sbb
aam
stc
adc
lret
adc
sbb
aaa
mov
xchg
sbb
sti
adc
outsl
lods
add
aaa
sub
popf
sub
jno
pop
sub
scas
pop
lahf
sti
imul
cmpsl
jle
xor
push
mov
mov
mov
scas
lods
inc
ret
pop
push
lret
push
in
sbb
aas
mov
fstl
sbb
xlat
scas
dec
jns
mov
in
mov
stos
aas
mov
or
jno
lret
xlat
xor
stos
add
adc
div
inc
push
sbb
sub
mov
inc
sahf
mov
pop
xchg
xchg
and
sub
lcall
mov
sub
push
jo
adc
xor
cmp
dec
out
sbb
std
in
or
ds
data16
jno
jmp
mov
cmp
repz
mov
cltd
push
xchg
inc
mov
int3
cmp
gs
sub
inc
pop
out
je
sub
sbb
jno
lret
popa
xor
in
pop
test
add
jnp
or
mov
dec
sbb
mov
jnp
dec
mov
jl
or
mov
int
sub
iret
xchg
push
add
xor
icebp
jae
pop
lea
inc
or
popf
scas
pop
xor
push
inc
pushf
mov
jp
data16
lret
shll
jge
push
dec
les
push
jb
aas
jg
push
cltd
insb
dec
in
jge
ss
scas
pop
and
mov
or
xor
mov
pop
jae
in
xchg
mov
or
jb
rorl
movsb
loop
out
test
jne
jb
dec
add
push
xlat
mov
aas
mov
sbbb
push
mov
and
add
fidivrs
ffree
xchg
add
sub
jmp
andl
in
pusha
nop
insb
jecxz
and
jne
popa
jmp
inc
mov
cmpsb
in
ror
inc
or
and
mov
addr16
inc
cmp
shlb
or
sbb
push
lret
mov
popf
rcrl
or
dec
mov
or
lret
xchg
in
pop
faddl
xor
mov
lret
jns
fwait
dec
bound
xor
out
orb
mov
in
sub
push
imul
outsb
jno
es
xchg
popf
push
sti
popa
jle
scas
mov
or
jecxz
popa
sub
mov
jne
add
mov
push
push
in
and
mov
fs
inc
fistpll
imul
lcall
hlt
rol
fmuls
ss
leave
aam
xchg
cltd
pop
jb
push
cmpl
or
shrb
fisubl
faddl
mov
cwtl
push
push
cmp
hlt
inc
outsb
in
rcrl
dec
xchg
out
add
test
enter
mov
adc
adc
or
mov
lcall
jns
push
les
xor
mov
mov
adc
aaa
or
enter
out
lret
dec
xor
mov
push
movsb
xor
and
cmovl
smsw
and
push
mov
xchg
push
mov
inc
fimuls
outsl
dec
mov
test
clc
std
and
push
inc
pop
mov
xchg
xor
pop
ss
push
push
test
outsb
jnp
jmp
mov
push
std
shll
ret
sub
rorb
push
clc
clc
lods
and
xor
jnp
pop
dec
pop
aam
or
jecxz
sub
xchg
rcrb
mov
dec
pop
xor
jg
icebp
int
cmp
dec
daa
dec
xor
sbb
fmuls
push
in
add
or
adc
test
fwait
popa
clc
xchg
sbb
or
pop
das
mov
or
pop
sbb
jno
aad
xor
sub
bnd
aad
lcall
fisubrs
push
inc
outsb
sub
adc
push
sub
mov
mov
sub
fs
cmp
mov
ja
jmp
pop
push
push
sub
imul
or
dec
add
sub
testb
loop
outsb
data16
loope
insb
movsb
adcb
pop
cmp
xor
lcall
ffree
mov
adc
push
bswap
sub
mov
xchg
xor
mov
cmpsb
mov
dec
shll
and
shr
mov
pusha
and
fsubrl
sbb
stos
aaa
sbb
pop
aam
push
push
dec
je
or
call
in
out
pop
iret
xor
pop
sti
outsl
mov
pop
inc
aaa
insl
inc
jbe
add
mov
add
ljmp
jmp
clc
cmpsb
cmp
adc
pushf
jns
nop
sbb
dec
mov
ljmp
aas
insl
xchg
lods
mov
dec
xchg
std
xlat
mov
ret
sub
xor
sub
mov
mov
jge
xor
mov
jge
fcomps
jle
pusha
imul
sub
movsl
mov
and
int3
jge
cmpsb
jecxz
jbe
stos
push
cmp
cmp
push
push
insl
pop
leave
inc
orl
scas
rorl
fs
aad
pop
push
add
js
int
xchg
cs
pushf
sti
fidivrs
inc
je
pop
cmc
rorb
je
xchg
aam
cmp
mov
add
push
push
mov
and
and
jno
rol
ds
mov
push
pop
and
sub
push
adc
mov
add
mov
adcl
inc
dec
xchg
movsl
mov
xchg
ds
imulb
jae
push
push
xchg
cmpsl
push
xlat
lods
add
xor
add
mov
sarl
sarl
aam
fsts
jnp
push
push
test
mov
and
filds
push
out
dec
and
ret
std
enter
and
xchg
out
pushf
bound
int
into
ficomps
negl
cli
xlat
test
fistps
aad
adc
pop
ljmp
scas
mov
addr16
dec
push
out
pop
or
or
add
cmp
and
inc
pop
adc
sbb
sbb
sarb
rorl
stc
pushf
adc
lods
pop
mov
fs
and
fwait
pop
jno
outsl
cmp
sub
sahf
push
pop
jne
cli
adc
ret
add
cltd
dec
fdivr
in
les
arpl
dec
mov
add
mov
sbb
lcall
inc
mov
adc
shlb
leave
cmp
vmovshdup
inc
cmpsl
add
stc
pop
inc
std
jg
adc
or
pop
ffree
xor
push
shlb
les
cs
push
jmp
stc
push
sar
sub
aaa
pop
gs
jmp
cmpsl
sub
fimuls
roll
pop
xchg
jnp
xchg
fs
cld
imul
xor
mov
or
mov
aam
nop
mov
popa
jne
js
mov
pop
loopne
cs
jno
pop
cmpsb
sti
outsl
clc
push
inc
movq
pop
sbb
mov
mov
mov
sbb
test
fcoms
push
or
lods
data16
shll
xor
sub
mov
popa
lea
inc
test
jge
loopne
test
dec
arpl
xor
test
das
add
mov
mov
idivl
call
shl
cmpl
rcr
pop
and
daa
daa
or
xor
cmp
xor
jl
fiadds
std
mov
or
pop
inc
lcall
inc
mov
xor
fadds
aam
inc
push
xchg
rcrb
rcr
das
jae
int
fcoms
mov
test
jo
je
testb
adc
in
test
dec
stc
mov
xchg
dec
add
aaa
dec
mov
bound
mov
imul
bound
jle
and
mov
stc
test
pop
sub
stos
xor
cmp
add
dec
cli
mov
sub
jbe
pop
pusha
jno
jnp
cmp
movsl
mov
sti
fidivrl
push
enter
mov
stos
xchg
inc
dec
jo
testb
adc
xchg
rol
and
movsb
push
pop
ret
mov
loop
mov
hlt
jmp
mov
adc
arpl
cli
movsl
sti
pop
adc
pop
pop
test
push
mov
arpl
addr16
ret
test
mov
xlat
dec
bound
inc
lcall
jge
jnp
xchg
ret
mov
or
cmpsb
add
mov
jmp
stos
stos
mov
stc
mov
mov
xchg
fucom
unpckhps
das
rclb
xchg
out
jp
movsl
aam
lcall
ror
les
push
pop
insl
scas
pavgw
popa
or
and
mov
imul
xor
mov
pop
fcomps
rcrl
aam
mov
xchg
nop
mov
ss
cmp
cld
imul
xchg
pop
xchg
mov
jle
dec
mov
ret
jle
roll
push
cmp
jmp
sbb
lcall
icebp
popa
mov
xchg
push
into
xchg
inc
adc
mov
roll
pop
mov
inc
sti
jo
cmp
jno
adc
pop
rcl
mov
or
add
jge
aam
rcll
push
mov
push
adc
mov
shr
inc
ret
fmul
inc
adc
push
into
movsl
mov
test
xchg
pop
jo
out
xchg
sbb
icebp
adc
jmp
mov
fmull
scas
dec
sub
jo
add
and
jl
mov
data16
and
cmp
lods
hlt
mov
jno
mov
nop
imul
xchg
lds
xchg
nop
fnstenv
and
xchg
push
dec
push
push
test
mov
xchg
sahf
mov
jecxz
insl
divb
movl
test
xor
sub
push
sbb
dec
dec
cmpsb
pop
mov
add
pop
movsl
stos
movsb
mov
aaa
mov
mov
pop
pop
dec
add
filds
inc
call
jns
xor
mov
pop
arpl
xor
sahf
decl
fdivr
pop
std
xchg
loope
push
cli
aad
xchg
sbb
xchg
pop
popf
xlat
lret
jge
rcll
call
xor
sbb
mov
adc
push
ljmp
add
nop
sub
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
xchg
xlat
xor
add
stos
and
adc
cmp
push
cmp
repz
js
andl
loope
clc
loopne
imulb
push
inc
xor
shll
jnp
fwait
int
in
or
scas
ret
loop
lret
and
jae
push
xchg
popa
push
and
aas
arpl
out
or
arpl
jnp
ss
dec
dec
rolb
xchg
cmp
pop
and
loop
outsl
sub
imul
add
xorb
jg
push
mov
aaa
mov
adc
scas
icebp
cmp
call
es
out
arpl
add
clc
inc
cmpsb
jnp
cmc
in
pop
push
add
inc
insb
rcrb
mov
loopne
fsubs
mov
loopne
daa
int3
push
xchg
adc
mov
inc
dec
stos
or
push
shll
out
jg
pop
mov
sub
lret
fucomi
aam
push
push
mov
shll
inc
mov
pop
sub
popl
dec
mov
es
or
out
loop
lret
lret
push
mov
or
mov
jg
add
cmp
jmp
mov
mov
inc
ss
in
stc
out
dec
out
dec
arpl
pop
inc
lods
andl
push
dec
std
xlat
pop
add
pusha
mov
inc
nop
lods
sub
and
divb
cmp
subl
out
mov
cli
lea
add
insb
push
xchg
push
movsb
add
int3
test
dec
jnp
xchg
and
sbb
dec
lret
xor
shll
das
test
adc
out
in
in
das
pop
testl
jl
and
movsl
mov
inc
cmp
popa
xchg
push
sub
pushf
test
jl
or
xlat
add
inc
test
out
adc
jle
cmp
adc
inc
push
aam
aad
js
lret
pop
ficoms
ret
xor
xchg
push
cld
push
mov
push
pop
popa
or
adc
pop
pushf
xchg
pop
cmp
sbb
xchg
fsts
mov
jmp
lods
iret
adc
mov
or
mov
push
out
lea
push
or
dec
inc
enter
enter
jo
jge
out
sti
mov
xor
frstor
mov
xchg
adc
jo
mov
xlat
cs
lret
jae
push
add
xor
jecxz
push
or
pop
ret
stos
add
out
mov
daa
inc
and
xor
or
add
frstor
insl
and
lock
test
in
sbb
and
cmpsl
sbb
test
mov
mov
das
jp
cmp
fs
inc
test
leave
fsubs
outsl
mov
or
rorb
enter
test
push
push
in
movl
pop
jge
jno
xor
sbb
push
pusha
scas
nop
inc
rol
mov
pusha
add
push
add
mov
es
push
fisubrl
mov
iret
fs
cltd
xor
addl
std
mull
mov
sub
les
into
repnz
mov
iret
out
jecxz
popa
cmp
pop
lods
fildll
sub
fbstp
mov
or
xor
sbb
in
sub
fisttpll
and
adc
jb
es
or
loopne
sbb
inc
cltd
dec
out
mov
mov
test
ficomps
cmp
cmp
jle
imul
sbb
cmp
int3
loop
mov
jge
pop
mov
pop
ficoml
xchg
fs
mov
roll
mov
lock
push
or
mov
faddl
cld
pop
jb
or
add
in
dec
xchg
push
mov
xchg
cmc
push
mov
je
leave
or
dec
in
pusha
frstor
inc
sbb
imul
enter
in
jl
ret
sbb
push
mov
cmp
sbb
xchg
clc
pop
add
cld
lret
les
jno
push
mul
push
cmp
dec
inc
jns
xchg
fnstenv
jbe
xchg
hlt
push
jae
jmp
lock
rcl
inc
or
jmp
add
jne
dec
inc
mov
pusha
sub
insl
in
jno
sub
rclb
or
mulb
mov
push
pop
xlat
jae
in
pop
xchg
sub
repnz
cmp
lcall
pushf
jae
mov
mov
xor
out
lods
leave
inc
sub
xchg
sub
xchg
aas
rcl
cmpsl
fisttpl
insl
aam
fdivs
mov
iret
fwait
jo
push
dec
xor
add
data16
push
push
jp
push
xchg
mov
movsb
fdivrs
dec
fmull
cmp
sub
rcrl
aad
push
mov
push
xchg
or
push
cwtl
sarb
pop
jbe
inc
popf
mov
mov
or
xchg
rorb
sbb
sub
nop
xchg
cmpsb
out
icebp
sti
pop
lods
push
jae
outsl
ret
jg
popa
rol
out
xlat
mov
leave
xchg
pusha
sub
xor
dec
cwtl
imulb
mov
lock
jge
hlt
mov
xor
fiaddl
lods
sub
sub
push
dec
ss
push
xlat
jge
sub
popf
mov
xlat
pop
imul
sete
push
lahf
pop
or
add
cli
test
pushfw
mov
gs
mulb
xchg
mov
es
xor
xor
dec
je
clc
sti
jp
cmp
out
push
repz
cmp
iret
rorl
loopnew
mov
je
pop
cmc
orl
mov
out
push
dec
popf
fistpl
stos
push
mov
das
push
sbbb
or
mov
nop
pusha
loop
call
dec
jmp
and
jmp
movsl
lea
addb
mov
out
hlt
push
push
dec
dec
arpl
xchg
imulb
mov
data16
pop
xchg
call
mov
and
mov
xchg
push
lcall
lods
scas
movl
add
inc
push
sub
lahf
xor
cmp
std
int
dec
test
cmpsl
stos
inc
inc
add
push
rcrl
sbb
mov
fs
cmp
sub
leave
pushf
jl
inc
jbe
cltd
out
and
jge
les
dec
adc
cs
mov
push
sbb
xor
and
mov
xchg
mov
pop
aad
pop
xor
push
push
cmpsb
lea
stc
xorl
pop
mov
mulb
fwait
pop
sub
andl
nop
loope
lods
jle
jns
add
fsubrl
xchg
inc
push
rcll
jmp
daa
mov
fsts
imul
ds
and
cmp
fdiv
test
fmul
lea
mov
inc
push
sbb
mov
jle
jnp
stos
daa
inc
mov
xor
sub
inc
sub
dec
xchg
scas
rcrl
out
sub
hlt
cs
mov
mov
jns
dec
pop
pop
xchg
xor
or
ljmp
sbb
repnz
jbe
sub
sub
mov
and
jo
test
int
mov
ret
mov
cltd
jno
movsl
dec
mov
fadds
inc
dec
rorb
push
test
pop
push
xchg
jo
stc
xchg
xor
movsb
int3
pop
out
mov
add
inc
cmp
sub
and
cmp
push
cld
sub
into
fmulp
mov
add
fstps
insb
mov
sti
jo
inc
push
sub
xor
sbb
pop
test
rolb
int3
jno
in
out
es
cmp
popf
add
xchg
adc
pop
push
ds
xor
shll
cmc
fistps
xor
cmp
pop
jge
iret
movsb
adc
and
pop
jmp
jbe
in
inc
jb
xchg
icebp
int3
and
adc
scas
xor
aam
arpl
and
es
push
pop
fstps
add
lds
xchg
mov
scas
out
fwait
enterw
vpbroadcastq
add
jmp
add
in
ljmp
jle
xor
adc
js
scas
mov
jns
lods
aaa
sub
sbb
fiaddl
adc
ret
mov
int3
push
insb
mov
call
call
inc
das
std
pop
stos
lahf
jae
testb
arpl
rcr
hlt
mov
mov
or
jmp
add
pushf
enter
stos
jle
mov
xorb
rorb
insl
fiadds
cmp
push
jg
cmp
mov
jne
jmp
fld
out
xchg
pop
test
and
pop
cmp
xlat
insb
xor
clc
mov
mov
mov
insl
xor
inc
movsl
nop
scas
repnz
push
pop
jbe
jae
pop
aad
push
push
mov
push
or
test
sbb
dec
test
pop
jmp
std
icebp
movsb
mov
rol
fcmovb
push
pusha
and
pop
push
dec
in
sub
jle
dec
test
cmp
jnp
mov
insb
adc
std
add
enter
ds
jp
shrb
movsb
stc
push
cmp
jecxz
adc
pop
inc
add
pop
push
shl
inc
imull
aaa
in
jae
cmp
pop
movq
xchg
sti
push
mov
mov
dec
lret
scas
mov
lods
fisttpl
adc
data16
sbb
movsb
inc
lods
clc
lcall
sub
and
xor
xchg
lahf
icebp
sub
nop
pop
and
test
outsl
push
ret
mov
dec
xchg
mov
mov
fcmovb
push
push
loopne
loop
aaa
inc
xchg
push
stos
fnstcw
pextrw
pop
call
movsb
and
or
out
mov
xchg
outsl
ljmp
lret
movsb
in
sbb
inc
adc
cli
and
xchg
jbe
adc
xor
mov
sbb
jmp
cmp
aam
mov
pushf
sbb
cmp
jae
cmp
mov
loop
bts
cmpsl
dec
or
nop
cmp
in
inc
mov
inc
out
in
sbb
popa
repz
mov
add
lods
data16
xchg
fldenv
pusha
dec
scas
inc
std
out
arpl
sub
jle
aad
jp
loopne
movsl
push
popa
and
into
push
daa
lcall
xchg
xchg
es
fidivrl
dec
mov
push
push
xchg
divl
add
push
mov
add
je
jmp
mov
out
jae
ficomps
xchg
push
xor
fnsave
adc
mov
das
repnz
mov
push
adc
jecxz
hlt
sub
sbbb
inc
shl
leave
popa
pop
and
add
out
dec
cmp
imul
mov
xchg
repnz
sub
xor
ret
lea
jnp
sbb
jp
cmp
mov
xor
out
and
mov
xchg
in
mov
in
or
outsb
aas
aam
pop
fimuls
rorl
mov
and
jne
stos
jmp
mov
inc
jb
jb
in
ret
ret
push
dec
fsub
mov
jo
and
sbb
sbb
loopne
lahf
cs
int
int3
or
cmpsl
adc
xor
push
jmp
stos
cltd
xchg
xor
sbb
mov
jl
test
int
dec
div
sbb
xor
sahf
or
push
fwait
dec
pop
out
xlat
arpl
in
inc
sbb
sbb
hlt
mov
sahf
daa
mov
or
lcall
cmp
push
fsubl
and
dec
shlb
push
and
jbe
das
adc
les
ret
push
mov
std
sub
and
inc
iret
pusha
mov
out
mov
xchg
mov
in
cmp
jae
add
ror
int3
mov
ficomps
push
cmp
push
sarl
pop
inc
lret
push
pop
adc
dec
and
mov
push
leave
lods
dec
repz
push
std
jae
xor
lods
xchg
nop
add
push
push
mov
jbe
stc
jns
adc
or
xor
xlat
push
sub
pop
and
inc
pop
imul
jno
xor
sub
repnz
pop
gs
dec
test
into
and
pop
jmp
mov
push
stos
insl
jmp
cmp
mov
dec
and
scas
shr
mov
push
jle
inc
xchg
insl
hlt
dec
jnp
pusha
clc
inc
push
add
xchg
or
or
fnstenv
sti
dec
ljmp
mov
xor
push
push
inc
and
mov
inc
outsb
je
gs
xchg
imul
pusha
inc
push
mov
popa
into
inc
sahf
push
out
shrl
rcrb
jns
mov
in
sub
iret
cwtl
aad
cli
adc
adc
cwtl
inc
shlb
int
scas
in
sbb
and
mov
ret
sbb
adc
ja
ret
lret
fcmovnb
push
in
notb
adc
dec
inc
inc
dec
adc
cwtl
mov
insl
mov
mov
icebp
cmp
xor
cmp
mov
pop
pop
pusha
in
dec
mov
es
shl
cltd
ret
jo
sbb
jp
inc
mov
test
adc
push
mov
fildll
stos
loope
test
sti
push
cli
jne
sub
ja
insl
loopne
pop
xchg
outsb
jns
flds
push
push
andl
xlat
repnz
jecxz
fstl
call
cmp
lahf
test
pop
cli
add
pop
push
pop
inc
sbb
outsl
aaa
push
xor
push
add
lds
sarl
sub
insb
aas
cmp
movsb
fldcw
inc
cmpb
nop
and
in
mov
insl
lahf
push
clc
or
das
push
fistl
adc
dec
jb
nop
cmc
pop
stc
pushf
cld
lahf
mov
sbb
sbb
jmp
mov
pop
imul
pop
cmc
mov
or
xor
jmp
xor
pop
stc
push
jnp
xchg
dec
out
dec
in
or
sbb
stos
dec
mov
sahf
scas
jne
sbbl
cmpsb
dec
imul
dec
out
and
mov
jge
jge
neg
mov
xlat
mov
mov
or
inc
sbbl
mov
loopne
mov
sub
lock
push
lahf
in
fstpl
inc
sub
mov
lret
pop
add
popf
xor
jno
adc
leave
ja
xchg
xor
pop
popa
pop
repnz
ret
nop
pop
add
aam
xchg
mov
incb
nop
cmp
call
inc
xchg
and
mov
jnp
in
or
xchg
enter
nop
movhps
mov
imul
sahf
ret
loopne
add
aad
lahf
lcall
aad
mull
sub
scas
ret
cmpsb
sbb
icebp
idivb
enter
addr16
jg
inc
mov
negl
imul
mov
fisttpll
or
cld
push
rorl
mov
mov
sbb
mov
shll
jnp
mov
jge
mov
cmpsl
xchg
lret
mov
repz
jecxz,pn
push
xor
popl
lods
add
stos
mov
xor
cld
sbb
xor
scas
js
lock
add
cmpsb
jmp
xor
pop
mov
mov
cmp
push
ss
in
push
outsl
sbb
hlt
mov
out
enter
insl
push
jb
xrelease
add
push
adc
test
inc
cmp
or
cmp
jo
sbb
lock
or
mov
pop
jae
push
adc
fwait
insb
push
pop
cmpsb
inc
push
mov
cltd
and
in
cmc
loope
test
in
sub
pop
push
jp
fdivl
test
xchg
adc
dec
jmp
mov
mov
data16
mov
xor
or
push
and
stos
mov
fwait
aas
sahf
pop
stos
mov
insl
cmp
or
inc
icebp
dec
pusha
push
xor
bsr
pop
or
inc
inc
cli
adc
std
and
sbb
pop
xor
inc
mov
aaa
int
jle
mov
inc
shlb
dec
ja
mov
cld
sub
pop
cmp
dec
dec
cmp
imul
cmp
mov
push
or
cmp
add
cmc
pop
aad
push
jnp
mov
or
sub
inc
pop
mov
pop
adc
sub
dec
mov
neg
push
rolb
jb
sbb
inc
test
cli
lods
add
stos
pop
pop
sub
cmc
movsl
xchg
ret
rclb
pop
xor
test
mov
sbb
or
mov
roll
mov
mov
into
out
lock
and
mov
xlat
dec
stos
out
xor
mov
xchg
ljmp
mov
lcall
mov
mov
add
aad
push
decb
jns
cs
pop
mov
inc
aas
jmp
pop
sub
mov
pop
in
or
int
cwtl
inc
mov
ror
and
fcompl
mov
pop
inc
or
fiaddl
adc
add
pop
faddp
xchg
fs
adc
notb
in
xchg
subl
test
shr
adc
inc
cmpsl
or
je
jl
mov
mov
ret
nop
pushl
mov
mov
stos
scas
or
jno
cmpsl
jl
in
rorb
push
jo
movsb
imul
iret
pop
push
push
add
sbb
in
push
adc
push
stos
xchg
rolb
fldt
stc
fucomip
aad
pop
pop
repnz
out
lods
das
push
movsl
fidivl
pop
je
stos
call
enter
inc
roll
inc
cmp
dec
mov
xor
aas
pusha
cltd
pushf
fdivs
mov
mov
and
or
mov
cmpsl
add
push
jo
rcrl
aam
adc
je
lret
cld
and
fnstcw
ds
rorl
xchg
jns
mov
int3
cmp
pop
push
xchg
add
push
add
xor
fistl
stos
adc
jb
sbb
or
fadds
mov
out
sub
mov
mov
xchg
or
mov
ret
pusha
cwtl
push
xor
aas
cmpsb
aam
mov
cwtl
push
push
push
outsb
sbb
push
and
adc
sbb
push
ljmp
aam
sub
pop
dec
xchg
imul
ja
sbb
push
jbe
pop
push
daa
outsl
pop
ret
mov
inc
into
and
sub
dec
inc
aaa
jno
stos
fldl
sub
sarb
jb
dec
gs
mov
fisubs
pusha
rcll
xor
lea
jl
jg
adc
fwait
sub
cmc
mov
ficoms
adc
ret
cmp
add
jg
jmp
aas
dec
push
xor
cmp
std
call
mov
rcrl
shl
stos
ljmp
js
sbb
xchg
mov
shll
pop
cmp
fnsave
jmp
in
gs
push
iret
mov
mov
rorl
dec
and
inc
and
jp
push
jmp
push
inc
rorb
push
dec
xor
hlt
push
test
adc
ljmp
jge
out
test
xor
lret
cltd
outsl
ja
xchg
add
mov
xchg
cs
hlt
fdivrl
aas
or
cwtl
push
xlat
pop
cmp
dec
fldt
fwait
in
stos
addr16
adc
push
xlat
and
cmp
lods
aad
jmp
cmpsl
lea
callw
sub
addr16
and
loop
test
jmp
lahf
shrb
jecxz
inc
cmp
mov
in
and
arpl
inc
xchg
push
jecxz
mov
sbb
jae
or
loopne
jb
push
jns
sbb
push
jmp
mov
push
adc
jle
jbe
inc
jp
mov
add
or
dec
inc
in
dec
pusha
fsubrs
xchg
cmc
aas
pop
inc
xchg
cmp
or
shll
popf
push
pushf
adc
out
xchg
push
daa
jmp
add
fisubl
push
mov
call
jnp
add
pop
push
fdivl
mov
pop
lods
inc
sub
inc
xchg
cmp
push
into
add
imul
std
dec
data16
inc
cmp
sub
xchg
sbb
loop
orb
loop
pop
jmp
fwait
sbb
and
push
lods
lods
cltd
or
in
sarl
xor
lods
mov
leave
leave
cmp
jl
mov
stos
dec
cs
or
stos
pushf
call
jg
xchg
dec
sub
in
jb
push
fimuls
test
sub
add
sub
add
cmp
cs
pop
test
pop
mov
push
js
jle
jb
rorl
inc
in
or
mov
dec
mov
jmp
and
loop
std
fldenv
insb
cld
jbe
aaa
lahf
cld
sahf
add
pusha
out
cmp
mov
fstpl
xchg
mov
shlb
popf
loop
jnp
pushf
xor
and
stc
pop
sub
movsl
mov
ja
ret
push
popa
inc
call
cmpsl
ja
push
sbb
loope
push
repz
imul
je
mov
les
xchg
or
jecxz
mov
pop
out
mov
jg
dec
mov
ss
xchg
sub
sbb
lds
push
cmp
test
cmc
or
and
inc
int
sahf
lea
push
pusha
xor
sub
mov
mov
clc
xor
xchg
sub
push
sahf
xor
mov
and
sbb
sub
add
repnz
mov
or
dec
aam
mov
inc
shlb
fwait
cmp
scas
sar
int3
push
aam
fimuls
hlt
js
or
popl
jmp
adc
aaa
jbe
adc
jne
sbb
xchg
xchg
call
in
inc
arpl
xchg
mov
jae,pt
xchg
or
fucomi
mov
dec
jns
jl
cmp
hlt
push
pop
xchg
lea
cwtl
mov
testb
xchg
insl
lods
iret
popf
cmpsb
lahf
fs
mov
shlb
mov
bound
mov
fimull
test
mov
je
test
sub
roll
ret
mov
dec
pushl
cmc
jecxz
fs
pop
fisubs
or
addr16
pusha
jmp
sarb
popf
inc
push
in
inc
jne
adc
cs
mov
pop
mov
xchg
push
cmpsl
ja
fwait
stc
and
or
je
cmp
mov
daa
sub
xor
lods
repnz
je
sbb
clc
data16
cmp
jecxz
xchg
sbb
bound
ja
push
add
test
jbe
flds
leave
movsl
ret
lods
std
add
enter
jo
xlat
into
mov
xchg
inc
push
ja
hlt
iret
or
ljmp
lock
loop
pop
adc
jae
mov
mov
mov
ljmp
xor
mov
or
pop
xor
loopne
loope
xor
rclb
rdpmc
cmp
xchg
je
fstps
js
popf
sbb
xchg
add
int3
cld
cmp
stos
les
push
out
scas
inc
lods
out
sub
jl
sbb
test
ja
stos
fldenv
mov
cli
or
jle
xchg
pop
dec
sub
js
bound
xchg
sarl
int3
mov
or
fidivl
les
gs
shrb
pop
mov
lcall
cmp
mov
lock
mov
mov
cmp
mov
or
inc
iret
in
fbld
xor
in
lcall
clc
ret
ss
jle
pop
mov
sbb
scas
mov
loopne
ffreep
sahf
and
out
out
in
ret
mov
pop
imulb
js
sahf
xchg
xchg
dec
push
and
inc
test
pop
stc
sarl
lcall
or
jbe
pop
mov
ret
and
mov
insb
aaa
sbb
ret
inc
in
ja
xchg
pop
push
or
pop
fsubs
xchg
inc
cwtl
aas
push
dec
lcall
dec
int
pop
dec
std
mov
das
pop
ds
pop
jbe
rorb
mov
push
mulb
adcb
cmc
jg
in
jo
cmp
icebp
xor
stc
lahf
cmp
xor
mov
and
fistpl
inc
xorl
outsb
ror
sub
scas
sbb
out
jg
loop
das
dec
or
mov
enter
negl
lahf
xchg
mov
sbb
bound
cmp
fbstp
sbb
mov
fwait
inc
stos
mov
add
aaa
cmp
clc
nop
jecxz
fiadds
jns
pop
xor
lret
dec
ds
dec
call
push
outsl
outsl
loop
loope
call
sbb
cmpsl
stos
jmp
mov
jp
popf
mov
pop
aas
push
repz
lcall
dec
aam
jb
dec
pop
aam
outsb
jb
pop
js
rorb
leave
mov
cmp
jo
mov
sbb
ja
inc
iret
imulb
inc
push
mov
xchg
adc
cmpsl
rcrb
or
dec
xchg
jp
aaa
adc
mov
sahf
dec
add
stos
gs
daa
xchg
out
lea
ljmp
jb
xchg
or
subb
std
fs
jg
push
push
int
lods
inc
in
add
les
push
pop
fdiv
sarl
jae
orl
add
sti
ficoms
lahf
xor
push
dec
xor
pop
pushf
hlt
sub
xchg
cmp
vpackuswb
push
lods
or
fcomps
es
ret
fdivl
mov
pop
inc
imul
dec
divb
iret
add
sbb
pop
mov
sbb
and
inc
ljmp
sbb
test
sbb
xchg
xor
sbb
push
aaa
or
test
adc
or
jbe
lret
push
xchg
pop
lock
ss
scas
xor
mov
sub
adc
ljmp
mov
or
pop
shll
iret
push
mov
pop
push
mov
inc
fwait
mov
out
mov
dec
add
mov
rcrb
fmuls
or
mov
cld
loop
pop
push
jg
mov
push
fs
jp
push
add
lds
pop
call
pop
xchg
push
nop
add
adc
jecxz
add
xchg
pop
mov
or
imulb
mov
lods
imul
jmp
jmp
add
int
sbb
stos
lcall
testl
dec
mov
inc
mov
insb
insb
dec
push
inc
data16
enter
mov
rep
aad
mov
out
xchg
scas
fcmovu
cmpsb
push
push
inc
mov
insb
lahf
mov
push
divb
daa
pop
es
mov
push
dec
loopne
push
fsubrl
mov
push
sub
orb
adc
jnp
aaa
pop
or
mov
das
mov
insb
lock
mov
stc
sbb
stos
sbbl
fstpt
inc
jnp
mov
add
clc
outsb
xchg
je
imul
aas
lock
loope
out
insb
iret
das
mull
cli
or
pop
fnstcw
xor
es
mov
addb
es
popa
mov
push
cmpsl
faddl
arpl
into
pop
push
pop
lret
cld
inc
jnp
cli
push
test
cld
xor
arpl
inc
pop
mov
cmp
add
xchg
jno
xchg
fbstp
gs
mov
fmull
in
imul
inc
sbb
mov
mov
push
cmp
and
and
sarb
mov
shll
call
inc
sbb
dec
fldt
push
mul
into
test
ret
pop
mov
mov
and
bound
cltd
cli
pushf
xchg
jbe
dec
orl
jno
jnp
xlat
dec
stos
aam
sbb
xchg
int3
gs
inc
pop
sti
dec
aas
sub
repnz
insl
jl
mov
dec
mov
adc
lahf
pop
in
outsb
cltd
cmpsb
jmp
scas
sub
mov
inc
jmp
idivb
inc
push
dec
cmp
pop
cmp
cmp
push
in
sub
aad
jl
out
dec
test
xchg
lahf
lahf
sub
add
stos
aaa
in
test
in
inc
fldl
pop
lods
xchg
ja
nop
cmpsb
push
repnz
imul
mov
add
je
push
or
pop
movsb
fwait
scas
mov
out
pop
push
in
xchg
fcoms
andl
les
sbb
shll
mov
jle
pop
mov
xor
enter
int3
mov
test
xchg
xchg
mov
popw
mov
xchg
das
mov
jns
xchg
loop
loope
test
imul
cltd
cmp
mov
pop
ljmp
xor
xor
mov
xchg
mov
dec
xchg
jecxz,pn
mov
ja
mov
inc
aas
rcrl
decl
fnsave
cmpl
push
add
aaa
mov
dec
push
rcr
jne
jno
mov
cmp
pop
cmp
pop
push
flds
sbb
test
in
or
jge
imul
dec
add
lock
nop
mov
nop
ja
mov
into
mov
cmp
xchg
xor
jo
push
xorb
push
and
fwait
inc
add
das
popa
iret
loop
xor
push
lret
mov
jns
stos
mov
popf
mov
enter
cmp
jb
sub
pop
iret
lret
xor
test
jns
je
mov
fcmovb
filds
jle
pop
sbb
scas
ds
out
lcall
jae
push
xchg
ret
popf
into
xorb
pop
test
mov
loopne
pop
or
popf
test
pop
pop
sbb
loope
sbb
xchg
adc
add
pop
jnp
std
mov
aam
pop
outsl
imul
movsb
icebp
lcall
xchg
pop
mov
mov
in
and
test
mov
test
pop
mov
sbb
and
pop
push
icebp
sbb
xor
fadds
lods
push
jbe
inc
stc
pusha
xlat
add
inc
xchg
xchg
mov
inc
push
or
inc
jb
mov
ljmp
fnsave
mov
xor
pop
sub
jno
and
fidivrs
popaw
sahf
push
lcall
pop
pop
imul
test
mov
fs
aam
mov
pop
push
xor
imul
xor
xor
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
xorl
fxch
xor
inc
pop
jl
loopne
pop
fsubr
outsb
shl
jg
inc
adc
call
push
cmp
aad
clc
jae
rcrl
xchg
ret
sub
loop
aam
mov
mov
add
push
nop
out
jae
fldl
mov
or
lret
lock
push
cmpsl
or
xchg
mov
out
mov
and
fbld
pop
jge
sarl
in
test
data16
stos
data16
jle
jmp
arpl
das
dec
push
push
call
leave
xor
movb
push
xchg
jo
xor
gs
pusha
lret
and
xchg
test
xor
sbb
dec
sbb
insl
dec
frstor
data16
cltd
test
ds
or
daa
and
xchg
add
test
mov
xchg
cltd
mov
cmpsl
sbb
mov
cmp
cwtl
dec
mov
pop
jmp
add
pop
shl
push
pop
adc
and
roll
js
gs
mov
xor
arpl
jecxz
mov
test
scas
xor
jmp
and
sub
adc
jnp
stos
js
incb
xchg
cmp
loope
sbb
push
pop
cld
aam
adc
adc
xchg
dec
pop
cmp
xchg
rorb
shlb
and
cmpsb
xchg
xchg
out
dec
iret
dec
sbbb
pushl
or
sub
pop
movl
cmp
add
idiv
sub
jnp
pop
arpl
cmp
add
pop
lock
lock
rcr
js
movsl
popa
jmp
mov
rorb
pop
cmp
out
inc
sbb
cmp
int3
push
gs
leave
inc
outsb
fcompl
jmp
test
xchg
subl
push
add
repnz
lret
cmp
dec
mov
lds
mov
jg
sbb
mov
xor
sbb
or
outsl
cmp
lcall
mov
push
shr
add
jno
mov
or
mov
dec
testl
lret
fisubs
insb
or
popa
mov
push
aad
les
mov
movsb
sbb
int
stc
rorb
lods
icebp
lret
popa
aam
mov
mov
xor
idivb
mov
sarl
mov
jg
aaa
loopne
mov
jl
mov
int
xor
or
mov
adc
inc
call
int
add
test
adc
mov
out
push
add
out
cli
inc
adc
idivl
add
mov
or
mov
enter
and
ror
jnp
jp
fst
pop
popa
bound
pop
in
lcall
jg
adc
push
nop
insb
loopne
rcrl
adc
sub
bswap
rcrb
push
add
lds
jl
push
in
mov
dec
and
sti
push
or
sub
and
lret
scas
lods
outsb
outsl
shll
pop
sbb
out
jbe
stos
lds
ss
mov
rorb
call
mov
sub
mov
sub
cltd
lods
mov
ret
nop
mull
dec
adc
jp
cwtl
daa
or
insl
fsubrl
and
xor
stos
xchg
nop
inc
inc
mov
lea
push
mov
push
jo
sbb
sub
pop
movsb
pushf
ffreep
jg
dec
jle
je
inc
add
jne
xchg
xor
inc
mov
mov
int3
out
fsubrs
cmpsl
out
lret
iret
lods
outsl
push
mov
jns
mov
aas
loope
jle
sbb
inc
dec
addr16
sti
cmpsl
int
add
add
add
leave
push
stc
mov
subl
jl
aam
mov
div
xor
sbbl
int3
ljmp
aam
lds
out
scas
pop
scas
inc
push
add
test
mov
fcmovu
cli
sbb
xlat
clc
andb
mov
ds
lock
ret
ss
popf
orb
cmp
lods
test
in
or
jle
and
lds
cmp
lahf
cltd
mov
and
xchg
xor
adc
xchg
jnp
mov
xor
cmp
addb
xlat
sahf
cs
jo
je
jmp
xor
loop
mov
lock
in
out
in
sti
xchg
shlb
lock
mov
sti
mov
cmpsb
push
sub
cmp
jo
cltd
pop
adc
pop
shll
loopne
jae
pop
stc
xor
mov
repz
cmp
repz
push
cwtl
loopne
test
add
adc
inc
and
repnz
lock
cli
out
push
sbb
and
mov
xor
jne
dec
push
out
cmp
shll
repz
lods
cltd
in
xchg
sub
dec
dec
cltd
ror
movsb
es
sarb
xchg
dec
repz
js
test
or
mov
aas
jg
js
add
pop
testb
add
test
lock
stos
add
add
popa
or
sahf
jp
hlt
mov
bound
fwait
into
mov
inc
std
rorb
movsl
pop
repz
cmp
and
inc
cmp
or
fdivp
stos
jmp
push
in
jae
test
add
xchg
sub
pop
lds
cmp
ljmp
mov
iret
or
jnp
pop
sahf
addr16
jg
dec
mov
pop
mov
movd
cld
dec
sub
gs
pop
lea
mov
pop
test
cld
inc
jle
cmpsl
test
lret
movsb
pop
adc
add
stos
lcall
dec
cmp
sbb
push
dec
xorl
sbb
loope
adc
add
and
adcl
dec
test
pusha
mov
mov
jmp
aaa
std
or
std
inc
pop
jp
movsb
adc
inc
dec
lock
cmp
xchg
inc
jbe
sahf
dec
mov
fmul
add
into
and
std
in
dec
xlat
pop
xor
mov
xchg
fnsave
scas
jmp
aaa
adc
enter
icebp
sub
pop
or
dec
mov
cmp
mov
xchg
lcall
int3
cltd
sbb
mov
or
aaa
push
push
into
lods
out
sub
inc
or
mov
pop
push
stos
movsb
jbe
mov
jne
mov
in
and
jle
mov
and
mov
in
mov
adc
cmpsl
cmp
notl
ret
adc
xchg
mov
jle
inc
or
fsincos
mov
mov
insb
sbb
mov
dec
lods
push
or
mov
test
add
aaa
popf
aas
out
sbb
lods
jle
jo
mov
imul
in
sub
les
sahf
inc
ror
sti
xlat
fcoms
out
cld
sub
mov
push
dec
and
leave
sbb
inc
test
test
xchg
mov
lds
mov
dec
loope
in
lea
lret
cmp
xor
divl
inc
xchg
push
adc
fmul
rcrb
cmpsl
xchg
fwait
push
ret
shrl
adc
aad
icebp
xor
js
cld
xor
mov
sbb
xor
add
mov
inc
xchg
in
cmpsl
adc
mov
aas
mov
jge
ljmp
les
pop
dec
or
pop
les
sub
int
test
loopne
mov
lcall
aad
fists
rcrl
mov
sahf
in
sub
les
shl
in
dec
lahf
cmpb
dec
movsb
pop
inc
jnp
pop
dec
lret
aas
push
popa
mov
add
mov
bound
fidivs
mov
std
scas
ljmp
push
pusha
das
xchg
and
sub
add
push
push
xor
in
cmc
or
rcrb
sarl
and
aam
cmpsb
or
push
mov
cmpb
sarl
and
jae
js
movsl
sti
pop
mov
sbb
aas
add
dec
push
negl
das
sbb
clc
mov
mov
sti
sahf
mov
and
cld
and
outsl
pop
and
xor
sub
sub
push
xchg
add
test
cltd
pusha
mov
loope
push
xor
imull
xchg
fcmove
loop
pop
gs
rol
ljmp
lock
sub
rclb
xchg
jecxz
xchg
pushf
lret
adc
ljmp
and
nop
mov
push
push
repnz
or
insl
sbb
cmp
xchg
pop
sbbb
pop
cltd
ljmp
jmp
and
jg
ds
ret
insb
das
out
cmp
lret
pop
and
pop
cmp
adc
sub
movsb
or
sbb
lcall
sub
rcrl
push
inc
loope
lret
xchg
addl
and
nop
lds
pop
or
mov
in
pop
clc
push
decl
ret
jg
scas
or
sub
and
mov
push
xchg
test
sbb
adc
sub
fcoms
push
repz
dec
push
enter
pop
dec
and
shr
call
mov
int
pop
jle
mov
mov
or
jmp
mov
out
and
adc
rcr
dec
pop
xchg
jns
mov
jno
cmpsb
nop
push
lods
shlb
mov
jnp
xchg
and
dec
loope
jns
push
in
shlb
adc
mov
mov
mov
cld
jmp
mov
jae
popf
rolb
aam
lcall
test
mov
xor
movsb
push
mov
lahf
adc
sbb
pop
out
pop
loopne
mov
dec
mov
int3
pop
fdiv
xor
lcall
add
test
mov
rclb
scas
xor
or
movsb
shrb
push
add
xchg
pop
outsl
mov
jno
xorl
dec
inc
mov
fisttpll
mov
jle
loope
dec
outsb
jg
add
iret
out
fcom
xchg
out
mov
mov
dec
add
enter
mov
loope
cmpsb
jp
loope
cli
fildl
nop
mov
jo
xchg
xchg
jl
sub
sbb
add
les
int3
push
mov
sahf
mov
and
mov
into
sbb
xchg
sbb
cld
lahf
scas
out
cwtl
jns
cmp
mov
aad
int3
xor
loop
cmpsl
mov
sbb
rorl
insl
mov
or
xlat
in
insb
sbb
add
outsl
sti
scas
xor
out
mov
mov
xchg
nop
mov
push
adc
jmp
lcall
pop
xor
fsts
or
xchg
mov
test
inc
or
pop
movsb
xchg
mov
pop
repnz
sahf
lret
std
lods
outsb
ja
xchg
and
or
mov
pop
add
jge
or
sbb
in
xor
std
test
aaa
jbe
fistps
mov
mov
lret
adc
loopne
mov
xchg
inc
mov
mov
aas
xor
test
adc
iret
sbb
jecxz
mov
cmp
inc
es
push
lret
add
bnd
cmp
push
pop
loope
mov
and
out
imul
daa
dec
dec
test
jbe
inc
in
clc
adc
lret
repnz
int3
push
mov
jge
and
adc
sarl
jne
inc
sub
outsl
je
inc
pop
lcall
jae
mov
pop
out
repz
or
cmp
mov
adc
dec
mov
mov
dec
enter
mov
fdivrl
addr16
push
incl
mov
loop,pn
sbb
jns
insb
cmp
in
movsbl
jge
sbb
and
loopne
mov
lret
xor
or
push
imul
movsl
xchg
push
push
jnp
pop
pop
jb
sbb
adc
dec
cmp
jge
xor
xor
mov
xchg
mov
sahf
mov
lds
sub
cltd
inc
xchg
mov
jle
mov
cmp
ja
or
sub
fwait
or
shl
jnp
lcall
pusha
xor
inc
push
popa
sahf
push
test
mov
mov
movsb
popa
cmpsl
sbb
aam
add
or
jle
push
and
push
jp
dec
movsb
pop
and
jge
jne
push
dec
pushl
mov
out
adc
ja
xor
mov
decl
leave
mov
mov
and
mov
cmp
inc
adc
inc
fwait
sbb
push
pop
xchg
push
into
scas
jmp
mov
call
loope
cli
cmp
pushf
pop
lcall
mov
add
and
hlt
pop
pop
jecxz
pop
inc
sub
test
fnsave
mov
jne
sahf
scas
sbb
jmp
pusha
repz
adc
shl
std
fxch
addr16
stos
jge
jb
fsubs
mov
testb
xor
scas
das
insl
xchg
push
fcom
movl
jl
mov
mov
jecxz
in
dec
out
sub
fisttps
xchg
sbb
jle
mov
push
stc
fdivrl
into
pushf
fs
aas
mov
out
mov
mov
push
mov
test
out
aam
scas
imul
imul
std
orl
push
incb
bound
push
cmpsb
sub
adc
mov
jle
jae
sub
outsb
popa
add
mov
xor
ret
inc
fwait
sub
or
push
cmp
dec
xor
mov
sti
movsl
push
xchg
jmp
imul
jb
push
add
push
xchg
les
mov
stos
inc
loop
daa
stc
jne
or
in
push
out
xchg
jae
sub
lret
adc
xor
out
into
cld
repz
or
xor
dec
jp
pop
stos
idivb
das
nop
and
inc
iret
movsl
mov
fwait
jle
pop
mov
inc
jge
or
incb
or
lds
out
or
xchg
lods
mov
xchg
fldt
add
in
cmp
sub
outsl
adc
or
sub
adc
scas
call
inc
fimuls
mov
inc
inc
dec
popf
lea
outsb
rol
mov
pop
and
outsl
rcrl
lock
cmc
daa
mulb
mov
mov
mov
pop
icebp
xor
test
push
addr16
repnz
inc
inc
and
inc
rcrb
and
cmp
push
push
jp
in
dec
repnz
in
mov
sbb
add
mov
aad
stos
jge
cmc
or
mov
aas
inc
rcr
fidivl
jbe
jo
sbb
scas
fidivs
insl
jnp
lahf
ss
push
jne
mov
adc
rclb
icebp
pushf
fdivp
jecxz
dec
jmp
dec
jae
xor
cli
cs
add
mov
push
pop
popf
in
sub
leave
add
fdivrl
scas
out
sbb
adcb
movsb
pop
outsl
pushf
mov
insl
scas
test
adc
out
stos
mov
push
xchg
testl
mov
cmc
pop
test
dec
mov
sbb
or
and
pop
rorl
lret
dec
xchg
sub
cmp
mov
ljmp
out
inc
int
sbb
xchg
and
xor
sub
jmp
das
loope
dec
sti
xchg
in
pop
scas
xchg
xchg
mov
mov
cmp
fimuls
pop
insb
adc
xchg
addl
fwait
test
cmp
jae
pop
mov
xchg
dec
test
jl
and
flds
xorl
pushw
jmp
ljmp
rclb
imul
mov
jl
enter
inc
cld
out
mov
loopne
repnz
pushf
sahf
cmp
test
xor
and
dec
xchg
push
fs
dec
push
cmp
mov
or
test
xchg
or
iret
jno
dec
push
sub
mov
jo
xor
and
dec
cwtl
js
push
mov
adc
test
mov
scas
es
sub
jnp
imul
mov
mov
inc
sbb
inc
nop
or
rcr
lea
pop
add
jecxz
and
arpl
icebp
dec
aas
mov
xor
xchg
add
dec
push
insl
jno
pushf
pop
mov
inc
mov
mov
add
lret
pop
push
aas
shll
jge
add
xchg
mov
or
and
lods
fisttpll
or
pop
jge
cwtl
push
stos
pop
xchg
and
xchg
sbb
out
loop
mov
push
mov
out
repnz
or
mov
les
xchg
fstps
icebp
movsl
cmp
bnd
add
pop
mov
xchg
aaa
inc
push
into
out
rcll
push
sti
pushf
xchg
pop
std
aad
mov
or
or
push
int3
pop
cltd
les
dec
mov
lcall
data16
stc
mov
push
imulb
cli
sbb
cmp
mov
xchg
add
es
push
adc
pop
int3
mov
lahf
mov
mov
mov
inc
scas
cmp
xchg
outsl
fs
jmp
mov
ja
sub
pop
fwait
mov
mov
cmp
cmp
mov
ja
cmc
fistl
incb
sbb
and
hlt
jmp
adc
stc
mov
jge
lahf
ja
js
pop
mov
xchg
ja
mov
push
iret
add
xchg
cmp
sti
sub
ljmp
jle
pushf
clc
cwtl
and
lcall
and
icebp
cltd
sbb
fsqrt
test
mov
rcrl
fidivrl
push
gs
mov
xchg
mov
and
loope
outsb
aam
dec
xchg
xsha256
cmpsb
adc
repz
das
pop
inc
or
das
subl
pop
dec
or
fbld
mov
jo
adc
jne
pop
pop
push
test
xchg
or
fmul
data16
add
mov
test
xorb
dec
xchg
in
fstl
mov
xor
xchg
push
sbb
jns
aas
xchg
mov
rorl
add
xchg
cmp
mov
and
push
jle
cmpsb
fs
add
mov
in
movsl
jae
and
mov
stos
test
and
jp
sbb
xchg
jbe
cmp
icebp
icebp
cmp
sahf
xor
loopne
cli
test
or
aad
fwait
imul
fiaddl
cli
inc
jg
cmp
jge
mov
dec
dec
test
andl
or
xor
repz
jle
je
das
dec
cs
aas
fidivl
cltd
insb
inc
lret
js
adc
gs
hlt
sub
mul
or
add
mov
push
stc
xchg
lock
cmp
insl
lock
xor
dec
cli
fstps
aaa
push
or
cs
fcomps
inc
push
es
push
jg
repz
fidivrs
dec
aam
dec
xchg
jns
mov
aad
in
mov
std
add
icebp
sub
pushf
outsl
scas
jb
shll
xchg
and
cmp
bnd
cmp
push
notb
out
scas
cltd
imulb
push
repnz
xor
jmp
je
punpckhbw
movsl
jbe
jp
sub
adc
pop
stos
pop
pop
or
addl
das
ffreep
cwtl
jbe
out
sbbl
xor
es
std
xor
insl
int
adcl
mov
push
push
fidivl
pop
inc
xor
in
lret
jmp
addr16
cmpsl
imul
ficoml
out
mov
jb
mov
jle
stc
sbb
push
xchg
test
pop
bound
inc
xchg
sbb
dec
repnz
test
push
inc
mov
pop
mov
cmp
mov
scas
sbbb
mov
dec
sbb
addr16
and
enter
or
xchg
xchg
mov
pop
sub
jmp
push
pop
repnz
es
stc
and
or
fidivrs
push
or
jg
push
jnp
test
clc
add
xor
sti
and
push
cmc
pop
dec
bound
mov
pop
les
subl
sbb
pop
inc
cmp
cld
test
loop
dec
lock
mov
test
arpl
lods
lea
mov
aam
loope
cld
push
jne
and
scas
pop
sub
fistps
scas
in
xor
test
cwtl
out
sbb
lcall
add
movsb
mov
dec
xchg
push
movsb
jno
test
pop
jle
cmpsb
ss
dec
or
xor
rorl
lods
add
pop
mov
lods
mov
loop
test
xchg
jb
xchg
jp
mov
push
adc
test
ljmp
loope
gs
mov
testb
pop
shl
int
push
inc
sbb
ss
inc
dec
shl
ffreep
icebp
int
dec
int
lock
jne
shll
test
sub
ret
pop
and
xor
orl
loop
add
inc
rclb
mov
inc
cld
cmp
mov
outsl
test
push
inc
jmp
clc
xchg
out
faddl
jmp
sub
jne
dec
iret
cltd
jns
jne
xchg
mov
jae
sub
sbb
popf
mov
andb
ja
mov
and
mov
xchg
mov
repnz
add
jbe
add
out
and
shl
mov
push
into
jge
mov
sbb
or
test
cwtl
fcompl
pop
add
adc
pop
xor
sub
fs
arpl
push
sbb
movsb
push
push
negl
andb
xchg
sub
dec
or
or
xor
push
inc
sub
lahf
jle
push
fwait
jo
clc
add
and
pop
stos
stos
lret
into
lock
and
jbe
les
push
adc
pop
dec
xor
arpl
sbb
ds
clc
inc
or
inc
dec
mov
sub
sub
fistpl
fwait
add
jge
or
fwait
mov
mov
incb
xor
and
jge
mov
sub
and
pusha
pop
mov
test
in
mov
mov
jmp
data16
out
ret
jg
stos
rolb
lea
les
jmp
in
push
dec
gs
xchg
andl
lahf
ds
scas
dec
or
sbb
repz
and
push
ret
jge
pop
adc
cli
pop
sbb
cli
imul
cltd
lock
push
jg
pop
int
mov
mov
lcall
ds
dec
cmp
test
sbb
and
mov
aaa
inc
loopne
addr16
cmc
shlb
repz
enter
jmp
out
pop
add
arpl
addr16
xchg
lods
fcmovne
shrb
inc
addb
mov
es
jg
mov
imul
mov
xor
push
pop
int3
sbb
xor
jbe
inc
andb
cwtl
ljmp
xchg
xor
cmp
incb
xor
je
or
mov
pop
mov
jp
jl
scas
pop
push
xor
and
sbb
lock
scas
mov
jle
je
in
dec
sbb
adc
loop
cmpb
push
xchg
std
add
adc
ja
out
push
sahf
push
lret
push
out
xor
push
fdivrs
sbb
pop
shll
jbe
insb
and
std
mov
js
dec
mov
jo
mov
ret
int
stos
in
cwtl
fiaddl
inc
jno
scas
add
push
xor
adc
cmp
push
pushl
jecxz
ffree
dec
orb
push
dec
xchg
arpl
inc
or
mov
in
movsl
dec
movsl
in
aam
loopne
lods
scas
sub
jp
jmp
mov
scas
and
out
inc
xchg
arpl
inc
xchg
cmc
xchg
push
xor
and
or
mov
push
nop
subb
adc
pop
fwait
dec
cltd
aad
cmp
cmp
mov
loop
push
mov
cmp
mov
mov
jmp
xor
push
xchg
xchg
lret
push
mov
mov
mov
addb
xor
jmp
inc
scas
lods
xor
inc
adc
sbb
inc
out
lea
mov
add
sbb
xor
pop
pushf
in
ret
cmp
add
jmp
and
mov
jns
mov
repz
sbb
div
jno
leave
sarl
pop
and
adc
xor
cmp
mov
pop
mov
push
cmpsl
dec
mov
enter
cmp
add
mov
and
shrl
xlat
in
dec
jno
and
jp
repz
push
shl
orb
mov
lret
popa
adc
push
jle
icebp
out
xchg
inc
cmp
and
fwait
xchg
lea
add
imul
xchg
mov
sbb
pop
push
cmp
cmp
in
and
mov
test
push
lahf
cwtl
xchg
and
and
xchg
fimull
or
inc
inc
pushf
mov
jno
dec
add
sbb
out
mov
fiaddl
xchg
mov
and
jmp
cmp
push
cmpsb
adcl
fldenv
sub
rorl
sarl
test
sub
fcmovu
push
jo
mov
mov
xchg
cmp
adc
stos
xor
jge
jbe
inc
mov
icebp
pop
or
div
push
and
fsubrl
sbb
add
and
mov
or
mov
ret
jnp
fsts
xchg
adc
pop
mov
push
rol
xor
iret
xchg
mov
sbb
or
pushw
nop
cwtl
arpl
out
sbb
lret
std
bound
imul
div
pop
sub
pop
adc
mov
pop
cmp
int3
pusha
sub
pop
negb
es
xchg
repz
mov
jmp
sahf
rcr
insl
or
inc
inc
dec
mov
mov
test
call
jbe
pop
leave
push
mov
mov
pop
stos
pop
inc
dec
rcl
aam
pop
lret
loope
aas
shrb
xor
sti
insb
xchg
cmp
fs
push
jae
dec
lcall
loope
negb
and
xchg
insl
cmp
xchg
xor
mov
cltd
mov
xor
mov
or
cs
xor
ret
gs
jns
aad
ljmp
xor
pop
inc
pop
popf
xor
subl
bound
cld
cmp
loope
jno
dec
loope
adc
sbb
out
daa
mov
push
std
inc
pop
cmpsl
clc
adc
ja
mov
adc
mov
pop
jge
shll
lock
mov
cmc
movsl
icebp
add
xor
sar
pusha
push
lods
lods
xchg
jmp
mov
je
lea
mov
flds
fs
sub
cltd
xor
and
setb
mov
lea
jae
lock
push
jmp
cmpsl
cs
push
or
mov
add
adc
ret
jmp
clc
mov
push
add
xchg
jecxz
popa
sarl
scas
imul
fs
push
or
fdivl
popa
pop
cwtl
scas
push
adc
imulb
push
cli
test
ret
inc
pop
dec
dec
aaa
mov
out
mov
sbb
pop
or
enter
add
iret
and
xchg
or
faddp
cmpsb
mov
dec
fidivl
in
add
lods
popf
push
mov
push
mov
mov
sbb
scas
xchg
mov
popa
pop
fcom
sub
mov
vpcmov
cmp
lods
sub
outsl
lods
cmp
mov
or
mov
cmpsl
shl
fwait
adc
push
cmp
stos
rorb
rcrb
test
popf
out
insb
fs
adc
cmp
clc
sbbb
mov
and
clc
and
mov
mov
cltd
pop
xor
out
int3
call
jno
cs
daa
jecxz
cs
jae
hlt
jb
push
push
movsb
xor
aaa
push
js
cmc
fdivl
mov
sub
dec
cmp
mov
fsubrs
xchg
or
sub
push
sbb
lret
or
fistps
mov
imul
jecxz
std
pop
mov
in
pusha
aas
mov
leave
ss
and
aas
addr16
jo
cmp
in
xchg
stc
dec
or
xchg
fwait
movhps
xchg
mov
adc
push
popa
in
jmp
mov
dec
out
stos
push
push
pop
ret
inc
pop
shl
mov
cltd
mov
jae
xchg
inc
push
xchg
mov
fsubrs
ss
sbb
lea
push
jecxz
xor
push
mov
push
mov
pop
or
xchg
add
jp
in
lahf
lcall
sbb
lcall
mov
enter
push
sbb
mov
xor
push
ret
mov
push
nop
push
mov
inc
adc
ret
mov
push
ficomps
push
and
js
imul
in
std
popf
push
cwtl
adc
dec
test
fcmovbe
ja
sti
movb
fiadds
jne
mov
xlat
and
icebp
imul
adc
insl
adc
mov
stos
push
fisubrs
lods
fldenv
pop
js
rorl
sbb
movsl
mov
dec
mov
aad
mov
bound
dec
cld
xchg
out
inc
enter
std
popl
cmpsb
js
jecxz
adc
push
nop
inc
fsts
stos
mov
lcall
cmp
movsl
and
push
stos
sbb
lea
in
imulb
stos
pop
cli
lret
mov
rorb
jmp
jmp
cmpsl
int
aaa
shlb
and
aam
ret
rcll
mov
xor
lcall
xchg
add
xchg
mov
loope
mov
pop
scas
aam
sar
fildll
divl
sti
xchg
mov
sahf
mov
jg
sbb
jge
dec
cmp
nop
aad
push
arpl
rol
stos
data16
daa
adc
sbb
sbb
or
aad
sub
insl
inc
mov
push
outsb
sbb
cmc
fwait
movsl
jnp
mov
lahf
mov
cmp
ret
scas
mov
call
and
push
lock
add
stc
in
nop
mov
scas
push
add
ja
or
les
iret
cmp
sbb
out
sub
shll
data16
adc
and
fsts
cmp
adc
add
mov
ljmp
lock
push
mov
jae
xchg
add
rcrb
jp
addl
or
mov
test
fsubrl
into
add
loop
dec
push
std
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
pop
nop
adc
inc
pop
jl
outsl
loope
pop
sub
cmpsl
jecxz
test
inc
icebp
loopne
call
cmp
outsl
pop
pop
inc
sbb
sub
stc
jbe
cmpsb
sbb
xor
pop
mov
add
int
dec
lds
pop
rolb
or
adc
push
or
push
pop
ret
leave
pop
out
or
xlat
dec
rolb
lods
jg
xchg
mov
xor
das
mov
and
push
in
scas
test
movsb
lret
jl
test
inc
xchg
sbb
outsb
mov
dec
pop
mov
cmp
daa
ja
mov
ret
outsb
lret
sub
mov
or
clc
or
jg
rcl
adc
in
dec
dec
sbb
aas
sti
shrb
mov
lock
sbb
push
mov
dec
daa
shrb
jmp
xlat
cltd
mov
xchg
xor
test
ret
hlt
lods
ja
orl
mov
xor
xor
jl
ret
and
dec
jns
add
in
adc
rorl
icebp
and
inc
sbb
xor
push
adc
adc
cmp
ud2
add
pop
mov
jne
pop
push
in
pop
outsb
cmpsb
jmp
pop
push
pop
inc
hlt
pop
xchg
std
mov
push
add
mov
bound
jg
into
aaa
insb
cltd
xor
and
faddl
fisubl
dec
cmpsl
aad
or
or
dec
xorl
jge
xor
aam
clc
push
lods
into
jmp
add
xchg
cmc
xor
adc
and
adc
cltd
out
jne
xor
jp
lcall
and
and
mov
aaa
xor
test
pop
insb
arpl
jne
lcall
xor
inc
jae
outsl
cmp
xchg
and
jecxz
insb
clc
sar
es
jle
leave
xor
cmp
out
adc
add
pop
cltd
pop
data16
repz
int
lds
int
push
lret
jge
sub
cmp
sub
add
and
cmp
sbb
pop
lahf
into
cmp
cmp
or
enter
shll
mov
push
ljmp
mov
cmpsl
test
scas
sbb
test
ljmp
xchg
sbb
cmp
test
add
je
lods
ret
xor
sub
shl
mov
jbe
inc
cmp
cmc
jns
push
stc
mov
outsb
cmp
mov
xchg
mov
lret
insb
rolb
shll
cs
xor
adc
sbb
loop
outsb
sbb
sub
iret
xchg
popa
push
mov
call
dec
js
sbbb
xchg
cltd
sbb
push
lds
ret
aam
filds
hlt
fsubs
dec
sbb
sar
xor
mov
xchg
in
inc
inc
addb
out
aaa
add
into
repz
out
fs
jns
xchg
mov
dec
hlt
xor
push
fcmovbe
pop
jae
sahf
push
sbb
fcmovne
adc
lods
pop
push
in
scas
xchg
pop
and
test
and
jle
cmp
xchg
mov
in
jnp
hlt
outsl
ja
add
fdivs
xchg
and
int3
ds
xor
inc
mov
rcrb
das
cmc
mov
xor
lcall
sub
enter
nop
xchg
sarl
mov
subl
test
jno
ret
int3
or
jg
push
imul
dec
gs
arpl
dec
into
xor
or
xchg
roll
sub
sti
insl
jo
jge
and
jp
inc
or
adc
insl
aaa
scas
dec
push
sub
sbb
in
sub
fincstp
and
test
loop
loopne
repnz
sysenter
mov
insl
repz
fdivrl
loop
stos
int
sub
add
fimull
leave
sbb
adc
cmpl
jbe,pt
out
leave
sarb
xchg
sbb
xor
popa
push
dec
or
addr16
dec
divl
divb
stos
inc
add
jns
leave
xchg
lock
icebp
adc
inc
inc
xor
cli
jg
loop
xchg
outsb
in
mov
leave
jge
mov
jg
inc
inc
pop
sub
or
dec
das
arpl
sahf
adc
stos
cmc
xchg
adc
and
or
jle
sbb
push
cmp
out
or
and
and
insb
mov
cld
and
add
adc
insb
icebp
fistpl
in
mov
push
mov
test
mov
scas
cltd
mov
adc
aaa
sub
faddp
add
jmp
fisttpl
sbb
jne
pop
jne
fistpl
daa
jnp,pn
mov
mov
in
aas
push
dec
pop
cltd
lcall
test
push
repnz
inc
inc
rcll
dec
sbb
fidivl
and
cmp
scas
and
dec
loope
rolb
and
mov
adc
or
xor
inc
movsl
cmp
or
rol
stos
test
popa
pop
ror
in
mov
lods
jl
jmp
scas
cwtl
sub
clc
inc
sub
loopne
inc
pop
jmp
jge
push
cs
outsl
xor
insb
and
call
bnd
lea
cmpsl
fisubrl
mov
arpl
mov
test
cli
ljmp
idivl
and
add
push
mull
scas
int
jno
mov
fsqrt
push
aam
enter
in
repz
repz
daa
or
stc
test
mov
and
inc
inc
ficoml
adc
sti
loope
push
outsl
stc
dec
popa
sbb
in
imull
push
pushf
je
mov
lods
xchg
scas
dec
xchg
int3
out
je
ja
mov
mov
sbb
movb
jb
or
ljmp
inc
rcrb
jp
jnp
pusha
push
xchg
inc
and
sbb
lret
ficomps
popf
fldenv
push
js
icebp
outsb
stos
fmull
jo
mov
flds
mov
test
iret
mov
cmc
out
std
dec
jmp
mov
fidivrs
ret
lahf
xchg
cmp
pop
mov
sub
mov
ljmp
stc
mov
cli
and
es
ljmp
jnp
dec
push
pop
mov
add
mov
push
cs
ljmp
xor
mov
mov
dec
and
mov
fs
and
jmp
and
xchg
cmc
pop
pop
pop
xor
cwtl
dec
mov
aas
negl
test
xor
mov
dec
into
xor
dec
xor
adc
add
xchg
pop
mov
mov
lods
imul
js
stc
inc
mov
scas
and
xchg
leave
xchg
inc
cli
dec
popa
mov
popf
faddl
sbb
out
adcl
mov
pop
inc
add
mov
jo
xchg
test
outsl
cmpsb
jg
and
and
mov
cmp
xchg
ds
rorl
scas
fnstenv
sahf
jae
mov
cli
add
mov
in
imulb
test
enter
jae
sbb
xor
xchg
lods
lret
pop
aam
scas
adc
pop
mov
push
cld
and
leave
jmp
adc
sbb
pop
out
cmp
nop
mov
add
insb
xor
sub
and
xchg
ficomps
dec
dec
push
loopne
mov
test
push
fcomi
mov
in
mov
imul
add
push
xor
jg
stc
fwait
mov
stos
sub
adc
and
ret
pop
popf
cli
lods
xchg
jo
cmpsb
xchg
mov
mov
sub
es
xor
stc
adc
aaa
jnp
mov
mov
mov
pop
jo
adc
stos
outsl
outsl
add
adc
jg
daa
mov
push
clc
imul
sbb
add
call
add
call
fimull
sub
outsl
mov
insb
xlat
xor
daa
inc
xor
cmp
and
push
jg
inc
es
add
mov
cld
rcrl
test
out
testb
pushf
in
mov
push
sbb
or
into
es
inc
pop
and
mov
aam
mov
cmpsl
into
repnz
clc
push
or
mov
jne
sbb
pop
dec
jecxz
jl
push
add
mov
aam
or
mov
ljmp
add
aam
jns
js
and
push
push
lods
jl
aas
cmpsb
lea
xchg
dec
xor
xor
iret
xor
jmp
test
call
pop
call
mov
inc
mov
mov
outsb
lea
cmp
cld
inc
or
pop
into
mov
popf
out
inc
xchg
lret
sbbb
jecxz
push
cmp
orb
adc
adc
sbb
orb
gs
xchg
pop
or
inc
insl
and
push
test
outsl
push
into
mov
pop
lahf
mov
cs
jne
jnp
aad
mov
push
mov
sbb
je
cmpsl
notl
push
mov
dec
adc
sbb
jge
or
leave
jp
inc
adc
mov
fwait
cli
pop
into
sub
xchg
out
pop
pop
int3
test
fisubs
mov
popf
cmp
cmc
lods
xor
jmp
jnp
dec
aaa
ss
xchg
fistl
dec
pop
push
icebp
inc
inc
bound
fisttps
insl
push
ror
adc
lds
mov
in
int
cmpsb
notb
outsl
pop
cmp
fisttpll
and
xchg
pop
in
jae
lods
icebp
lods
sti
test
jo
pushf
out
sbb
popf
aas
outsl
sbb
and
sahf
mov
mov
jl
sti
mov
bound
lea
cli
mov
jo
push
adc
mov
fidivl
ret
lods
mov
sub
cmp
pop
mov
xchg
cmp
xor
add
fbstp
out
jno
aam
aad
push
pop
or
int3
pop
xor
stos
test
xchg
ss
test
and
sub
jl
fisttpl
and
inc
je
push
xor
sti
dec
aad
push
sbb
jns
das
pop
subb
sub
data16
subb
shl
mov
sbb
mov
cmp
dec
mov
push
xorl
sbb
xor
xor
xor
mov
pop
pop
bound
in
hlt
push
xchg
inc
testl
jmp
push
lret
and
cmp
sbb
jns
pop
pop
mov
mov
xchg
add
scas
movsl
xor
add
inc
push
adc
orl
nop
mov
xor
stos
pushf
js
xlat
test
fwait
rorl
xchg
loope
xor
jb
scas
lea
jnp
mov
mov
cli
testb
sub
mov
sbb
mov
pop
out
sbb
push
insl
cmp
sub
lcall
mov
pop
das
js
mov
into
es
xor
push
clc
repz
ja
out
shl
push
jp
movb
int3
sbb
js
test
dec
add
mov
lds
push
pop
mov
das
cmp
cmp
xor
push
or
dec
pop
es
push
sarl
lods
cmp
stos
pop
sbb
and
sarb
xchg
fists
fimuls
xchg
sub
mov
cmp
rorl
adc
icebp
sub
rorb
xchg
cmpsb
mov
xchg
inc
lret
mov
sahf
xchg
inc
push
add
popl
orl
or
jo
out
test
repz
es
xor
rcll
test
jmp
push
mov
xchg
sub
ret
cmp
jg
lret
movsb
in
or
sub
push
push
roll
leave
sub
insl
test
stos
sbb
push
sub
mov
mov
xchg
xor
outsb
pop
stos
jg
mov
es
mov
or
sub
sub
inc
aas
mov
fsubrp
call
add
push
dec
mov
negb
std
inc
lods
jcxz
inc
pop
jge
adc
fldz
mov
fistl
mov
mov
xor
fwait
jno
testl
rcrl
inc
dec
mov
xchg
jb
orb
js
mull
call
icebp
pop
sbb
xchg
test
xor
push
cwtl
test
fildll
cmpsl
jg
lahf
pusha
enter
fcomps
mov
push
idivb
mov
dec
mov
and
or
cmpsb
mov
xor
data16
mov
push
dec
mov
cmp
mov
fsub
loope
outsb
xor
lock
xchg
insl
ja
xchg
stc
movsb
popa
decl
adc
ret
or
pop
pop
icebp
arpl
lcall
ja
xchg
in
lods
les
adc
popf
aaa
scas
pop
mov
dec
cmp
mov
insb
or
or
jnp
ret
xchg
sbb
mov
jbe
pop
call
mov
jae
mov
gs
cmc
in
mov
xchg
in
scas
dec
iret
lock
or
pop
in
nop
fbld
in
cmp
test
push
rcll
xsha256
cmpsb
push
push
aas
jmp
pop
mov
lods
sub
stos
and
xchg
movsb
ss
mov
lret
inc
adc
arpl
cmp
sub
adc
shlb
push
cld
inc
and
test
xor
xor
inc
sbb
gs
mov
xchg
sbb
xchg
js
mov
call
xchg
jl
inc
jno
mov
ss
mov
jne
pop
pusha
push
or
push
ja
inc
jbe
mov
hlt
loope
fnstenv
iret
sub
iret
das
popa
out
imul
rcrl
mov
xchg
add
jae
cltd
test
in
inc
inc
push
mov
lahf
aas
pop
in
fmuls
adc
pop
fdivrl
or
shll
sti
out
adc
and
push
cmp
sarb
push
xchg
bound
out
add
stos
sbb
data16
mov
in
push
or
sarb
xor
repz
sub
ret
pop
call
adc
jno
int3
sub
adc
insb
xchg
fstpt
push
xchg
dec
sarb
xchg
lock
mov
out
ljmp
xlat
add
dec
push
or
daa
bswap
sub
xchg
push
rcrb
test
or
out
jge
aad
sub
xor
mov
sar
enter
jno
mov
in
pop
imul
cmp
lods
adc
mov
push
sbb
test
loopne
mov
sub
mov
stc
push
pop
popf
mov
out
ljmp
mov
mov
dec
and
xchg
out
repz
sbb
adc
movsl
or
mov
repz
jb
test
insb
xor
in
fiadds
xlat
cmp
mov
mov
or
add
mov
movsb
xlat
or
nop
adc
sbb
push
mov
and
mov
adc
pop
stos
mov
inc
adc
nop
shl
push
lods
outsl
ret
ret
ds
inc
lcall
add
mov
pop
fcomi
movl
loop
pop
lock
cmp
in
sub
adc
std
cmp
cmpsl
rorb
cld
imull
push
pop
fidivs
adc
cmp
mov
xor
push
out
sub
in
jp
xchg
xor
stos
addr16
sub
xor
pop
fwait
xchg
inc
sbb
and
std
jbe
pop
jne
leave
test
fbstp
les
xchg
aad
cld
dec
jnp
mov
iret
outsb
out
sub
fnsave
cmc
sbb
repnz
push
xchg
pushf
aad
jle
pop
jne
int3
subb
lahf
decl
mov
inc
idiv
andl
pop
inc
insb
cmp
push
lahf
add
sub
sti
mov
sbb
jge
jae
into
mov
push
pop
lea
xor
cmp
and
jnp
hlt
xchg
adc
sbb
in
int3
mov
cmp
mov
scas
add
dec
je
mov
rcrb
xchg
xor
sarb
aad
dec
mov
out
push
addb
pop
dec
and
dec
add
imul
fs
dec
lahf
dec
and
add
pop
adc
jbe
fcompl
mov
pop
or
enter
daa
xchg
sbb
loop
arpl
in
outsl
shll
negl
jnp
xlat
mov
outsl
or
add
stos
add
pusha
leave
pop
lret
cmp
mov
cmp
xchg
xor
sub
insl
loop
push
iret
push
lcall
pop
inc
add
xchg
repnz
sbb
mov
push
push
sbb
sbb
jle
cmc
jle
mov
das
sub
pop
loop
sbb
addr16
outsl
sti
test
inc
and
cli
aad
mov
fildll
mov
push
xor
push
lea
add
xchg
arpl
sbb
sbb
jae
or
xor
jp
std
cmp
mov
inc
das
fsubrl
jge
push
mov
sbbl
jecxz,pn
xchg
test
cmp
push
xor
fldl
outsb
jge
jmp
mov
jle
andl
div
cmpsb
xor
cld
pop
sti
les
sub
lods
jnp
pop
repnz
cmp
xchg
inc
mov
dec
pop
daa
ljmp
in
xor
sub
sub
fs
jno
mov
push
xor
sarl
pop
dec
sbb
iret
add
push
je
pop
scas
pop
dec
cmp
cmpsb
add
movl
pop
push
cmp
mov
mov
sbb
imul
pushf
out
mov
inc
cmp
dec
cmp
xchg
add
into
jo
js
leave
sub
xchg
mov
or
daa
in
sub
jb
push
stc
inc
push
xlat
mov
pop
sarb
inc
and
pushf
dec
dec
in
dec
dec
clc
popa
ss
enter
in
xor
test
aas
xchg
jl
adc
jae
ljmp
cmove
push
or
sbb
sbb
or
sarb
popa
push
enter
clc
pusha
rcr
addr16
sbb
pop
pop
cmp
lret
inc
test
jp
jle
mov
jmp
push
sahf
lcall
jb
sbb
jmp
adc
popf
mov
dec
sar
push
xlat
pop
test
fidivrl
jecxz
jl
cwtl
jmp
push
adc
jns
and
lea
add
les
push
jo
dec
adc
pop
inc
mov
push
add
sbb
dec
and
shrl
jl
jp
inc
xlat
cmpsl
je
or
jecxz
les
insl
jnp
scas
mov
and
pop
aas
add
xor
xor
xor
sbb
jl
lcall
into
fs
pop
mov
aad
test
lods
cmpsl
pop
test
call
add
call
outsl
mov
and
jge
xchg
jnp
mov
adc
jnp
pop
or
pop
cmp
fwait
add
and
hlt
or
push
and
in
shll
and
mov
aam
mov
lods
iret
filds
pop
jae
push
orb
hlt
insl
mov
je
imul
lods
aad
mov
outsl
cmpsb
jnp
jnp
aam
add
lods
push
mov
xlat
mov
pushf
test
sub
add
push
mov
or
lds
push
adc
ret
adc
lods
adc
rclb
jns
loope
xchg
ja
mov
or
in
aas
mov
adc
shl
mov
push
cmpsb
inc
xor
shrb
inc
inc
jno
jo
sbb
addr16
loop
rolb
mov
adc
int
pop
jne
clc
lret
add
sbb
push
cli
mov
fsubrp
pushf
sbb
cmpsb
rcrb
dec
mov
popf
adc
shlb
inc
das
in
mov
mov
inc
add
out
stos
test
mov
push
cmpsb
lahf
and
xchg
push
iret
inc
sahf
adc
mov
inc
fcoms
xor
test
xchg
cmp
popf
outsl
mov
int3
cmpl
out
into
jb
cwtl
add
pop
dec
inc
sti
jg
push
jmp
and
inc
stc
jbe
cmp
in
mov
mov
sbb
add
adc
movsl
mov
outsl
mov
fcomps
ja
ror
std
sbb
or
dec
jle
xorb
mov
bound
sub
mov
and
adc
frstor
xchg
push
sub
or
in
and
lret
mov
xchg
in
sti
and
add
jmp
fwait
inc
fsubrl
test
dec
daa
rol
and
add
ja
mov
push
xor
mov
mov
pop
add
mov
lods
cmp
nop
pop
xchg
int3
pop
sti
inc
cwtl
xchg
pop
and
xchg
mov
add
sbb
jae
jp
jne
repz
inc
out
je
arpl
fldl
jl
cmp
lret
mov
cmp
mov
and
jns
lret
jmp
ret
inc
imul
jbe
stc
loope
mov
enter
std
enter
mov
jb
sahf
mov
push
movsb
pop
test
add
dec
daa
insl
ss
jg
rorl
dec
add
sbbb
scas
js
loopne
int
test
add
sub
jb
rorb
sub
or
inc
mov
sbb
or
ret
and
mov
dec
jne
pop
xor
scas
push
popf
dec
mov
je
xchg
out
push
test
sub
dec
scas
jne
outsb
shlb
cs
ja
push
out
cmp
jle
xchg
push
mov
adc
nop
jecxz
out
lahf
lahf
inc
cmpsl
notb
adc
push
inc
inc
lcall
jne
jns
pop
pop
pmuludq
sbb
and
test
sahf
div
test
jno
aad
push
xchg
and
inc
sbb
and
into
imulb
mov
cmp
push
int3
or
adc
jne
mov
push
mov
fcoms
cmpb
sbb
arpl
mov
int
mov
fwait
cmp
jb
cwtl
jae
add
cmc
mov
int3
inc
add
lahf
pop
loop
iret
mov
and
sbb
push
xchg
mov
mov
lcall
cmp
rorb
out
add
pop
test
xchg
iret
add
popa
clc
push
or
mov
or
xchg
mov
lods
mov
lods
push
out
mov
fmull
sarb
cwtl
xlat
cmp
pop
pop
scas
jae
push
pop
sbb
in
hlt
xchg
ja
mov
mov
shl
psubd
js
jo
movsl
clc
jle
cmp
mov
jp
popf
mov
scas
ss
and
xor
inc
fwait
scas
inc
dec
lods
sub
cmp
push
pop
adc
cmp
lret
das
das
xchg
adc
jbe
repz
push
xchg
sub
iret
filds
movsl
sub
popf
in
push
mov
jae
mov
xchg
cmp
xor
sti
ficoms
test
idivb
shrb
mov
xor
jecxz
mov
stos
out
shll
mov
xchg
outsl
adc
and
xchg
or
out
jnp
pop
mov
es
pop
dec
xchg
imul
mov
out
jp
adc
mov
jo
push
mov
adc
push
jo
sub
rolb
pop
repz
add
and
inc
ds
mov
sbb
inc
push
in
pop
or
cmp
xchg
add
cmc
movsb
sbb
dec
outsb
mov
sbb
and
and
int3
pushf
inc
jmp
inc
dec
inc
ret
int3
xchg
stos
xor
pop
mov
xchg
add
imul
xchg
in
das
push
outsb
push
jno
mov
shl
ret
add
xchg
mov
dec
mov
daa
push
sbb
mov
xchg
cs
cmp
popa
pop
aad
int3
mov
shrl
jbe
stc
sbbl
mov
add
adc
out
jge
cwtl
in
or
xlat
inc
mov
jno
shl
sub
fwait
adc
jl
mov
mull
add
jp
pop
mov
mov
cmc
cwtl
notb
inc
dec
not
sbb
in
xchg
or
repnz
jnp
jmp
cmp
pop
daa
or
jae
das
dec
pop
data16
sbb
xchg
movb
mov
rcll
push
into
scas
mov
pop
lock
mov
data16
testb
xchg
aam
or
pop
outsb
push
mov
push
mov
movsb
into
insl
shrl
fldt
jne
loope
mov
shll
cmpsl
fidivs
push
or
movsl
jmp
adc
fsubrs
and
fsubrp
mov
mov
jecxz
push
pop
ret
in
mov
fs
push
and
enter
pop
movsl
int
xchg
adc
lret
loop
inc
in
xchg
sarl
ficomps
sub
idiv
mov
insl
stc
shlb
jo
frstor
bound
xchg
ficoml
and
nop
push
pop
das
mov
sbb
jecxz
sub
scas
popf
xor
push
imul
mov
outsb
xor
inc
ds
lahf
cli
mov
stc
jge
sub
xor
push
andb
mov
jnp
icebp
out
xor
mov
sbb
clc
mov
lods
pop
rolb
shll
nop
and
arpl
cmp
jo
clc
inc
loop
stos
stos
push
in
fbld
ret
cmc
add
lcall
inc
xlat
add
xchg
out
ror
imul
xchg
and
fdivp
mov
push
out
push
add
pushf
inc
movl
rorb
adc
icebp
js
loopne
adc
jae
dec
movsl
and
arpl
push
lds
lods
push
sbb
sbb
gs
pop
xor
xchg
or
clc
sub
sbb
insl
sbb
mov
sub
jecxz
pop
cld
mov
mov
add
pop
pop
ljmp
cmp
shll
xchg
enter
xchg
stos
stos
xlat
cmp
fnsave
or
xor
sbb
popl
in
push
mov
ja
in
lods
add
pop
pushf
jo
sbb
mov
aas
hlt
cmp
sbb
in
mov
fistpl
sub
in
das
ds
fcoml
shr
mov
add
sub
or
jmp
repnz
fdivl
add
inc
mov
arpl
lret
inc
sbb
sbb
movsl
inc
xor
adc
loope
in
mov
int
jge
test
push
movsb
inc
adc
sub
xor
insl
cmp
jl
loopne
imul
fcmovne
ret
imulb
xor
fwait
into
inc
mov
loopne
jle
lock
mov
js
ret
call
add
mov
dec
push
rorl
push
out
fstl
iret
enter
xchg
repz
xor
push
pop
xor
adc
subb
cld
mov
divb
mov
cltd
daa
flds
mov
stos
mov
inc
fs
push
push
dec
lock
test
popf
xor
inc
jno
mov
out
lret
arpl
dec
push
jnp
sbb
ja
push
inc
decl
js
ja
cmpsb
in
arpl
cli
ss
mov
jp
mov
jg
mov
loop
imul
rcl
test
ss
push
psrlq
imul
inc
cmp
cmp
sub
xchg
test
mov
push
xlat
inc
cmpsl
int3
sub
in
faddl
lret
jge
mov
cmp
adc
adc
movsl
add
out
cmpsl
pop
mov
mov
addl
mov
add
mov
repz
outsb
fisubs
mov
mov
jns
or
and
fdivrl
lcall
mov
pop
or
inc
lds
stos
or
lret
and
xchg
pop
push
dec
dec
sbb
push
sub
or
pop
gs
sub
dec
into
xchg
call
popf
or
pop
pop
xchg
jmp
mov
and
aas
xor
push
frstor
xor
pop
and
popf
rolb
cmp
push
jle
mov
ljmp
pop
pop
cwtl
scas
pop
and
das
dec
cs
int3
movsb
or
mov
lds
icebp
shlb
lock
xchg
iret
mov
mov
cmp
fbld
push
mov
xchg
push
add
push
mov
push
pop
dec
pop
rol
inc
das
xor
cmp
addr16
int
aas
sti
add
pop
jo
xlat
test
mov
add
pop
es
fstpl
lret
mov
ja
lahf
push
movsl
mov
orl
or
je
xchg
lods
outsb
mov
stos
pop
mov
adc
jg
js
outsb
dec
jne
shr
dec
aas
sbbb
push
sbbb
arpl
push
or
cmp
ret
sub
pushf
nop
imul
or
sbb
sub
cmp
or
lock
xchg
lcall
jne
sub
hlt
rclb
push
push
mov
cmpsb
and
xor
mov
adc
cmp
push
call
jmp
jmp
popl
pop
mov
shr
bound
jns
cld
repnz
in
push
aam
test
pop
jmp
mov
fwait
orl
push
push
jg
into
add
js
jno
pop
xor
cmp
inc
xchg
sub
dec
adc
movsl
lret
addb
scas
loopne
and
push
mov
rcrb
and
push
and
cmp
lcall
add
add
std
inc
add
jne
and
fnsave
shrl
cwtl
push
push
fldenv
dec
int3
pusha
jns
dec
aad
ss
repz
repz
ret
fadds
std
fisttpl
push
sub
jae
lods
mov
mov
pop
mov
mov
bound
ja
lahf
push
test
dec
mov
pop
out
inc
lret
inc
and
xchg
loop
rol
aas
out
cmp
push
xor
ds
stos
and
lea
lcall
xchg
fists
hlt
sbb
add
sub
je
loope
lret
sbb
push
jae
test
pop
mov
movsb
cmp
sbb
sarl
scas
push
gs
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
stos
loop
out
testl
xor
ret
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
dec
out
mov
addl
std
add
add
xor
add
jl
bound
fs
outsl
mov
rcll
add
sbb
jne
sub
mov
idivl
scas
dec
mov
in
int3
jge
cs
cmp
adc
scas
or
mov
dec
jne
inc
xor
push
pop
xchg
pop
das
jecxz
or
push
out
lret
xor
cmpsl
dec
outsl
test
adc
push
xor
push
mov
notb
mov
sbb
fs
pop
cld
test
pusha
pushf
imul
ss
inc
lahf
int
add
mov
sbb
pop
mov
and
and
repnz
xor
or
dec
outsl
cltd
jae
outsl
pop
and
clc
and
cld
push
bswap
adc
mov
jae
mov
mov
inc
int
icebp
mov
add
xchg
jmp
lcall
stc
inc
mov
push
int3
mov
fwait
aam
adc
pop
insb
sub
hlt
xchg
fistpll
test
jno
lds
mov
repz
inc
aaa
mov
pslld
and
cs
arpl
xlat
fimull
cmpsb
pop
lods
inc
fisttpll
push
pop
testb
and
rorb
imul
mov
xchg
mov
mov
rolb
lods
mov
mov
push
mov
inc
rolb
in
dec
push
and
pop
in
or
arpl
dec
pushf
cmp
std
xor
adc
mov
sbb
imull
xchg
adc
xchg
int
or
scas
mov
mov
addl
push
inc
add
add
in
int3
cmpsl
and
aam
cmpsl
dec
clc
sub
repnz
push
jno
jbe
fmul
xor
adc
xor
movsl
jbe
adc
andl
fnsave
add
ja
idiv
jg
mulb
mov
add
add
add
fbstp
sub
dec
xchg
inc
xchg
mov
dec
out
mov
push
xchg
sbb
cmpl
dec
or
mov
and
vmovaps
or
test
cli
pop
pop
pop
jecxz
inc
lea
shr
iret
cltd
daa
bound
rorb
xchg
mov
xor
inc
fnstenv
sub
icebp
push
lcall
or
ret
sbb
adc
clc
and
mov
fs
lcall
cmpsb
pop
stc
mov
push
aas
ss
jbe
test
or
push
aad
idiv
cmc
stos
rclb
aaa
repnz
lret
mov
cmp
flds
pushl
aas
sub
jle
test
jbe
lcall
inc
jmp
adc
pop
cmp
mov
mov
mov
xchg
xor
xor
cmp
add
adc
stos
or
cmc
outsl
push
jbe
enter
mov
adc
jnp
cmp
dec
cmp
dec
pop
sbb
int3
cmp
inc
mov
xor
and
das
xlat
mov
ss
mov
mov
or
adcb
jae
shrb
pop
xchg
loopne
repnz
fisttpl
data16
pop
call
pop
jae
xchg
js
jns
dec
mov
and
lds
mov
ds
outsl
es
sub
pop
mov
dec
outsl
cltd
jg
les
fldl
pop
cmp
sbb
or
mov
lret
mov
or
pop
nop
or
test
dec
cld
int3
fcmovb
or
out
or
cmp
inc
repz
cld
jb
dec
int3
dec
pop
pop
push
shll
mov
inc
xchg
pop
bound
mov
add
pop
sbb
pop
std
jg
mov
add
add
loope
sahf
les
cmpsb
adc
mov
push
jae
xorl
lret
push
xrelease
inc
cwtl
cmp
sbb
jl
xlat
push
test
lds
pop
fs
test
pusha
xor
ret
sbb
push
loope
jo
fimuls
push
inc
cmp
es
hlt
or
adc
sub
pop
and
cwtl
shrb
ljmp
xchg
das
mov
jle
lret
mov
add
xor
cltd
je
jo
mov
in
rclb
int3
stos
pop
cmpsb
lahf
pop
inc
ss
mov
xor
into
jg
je
jnp
lcall
nop
sahf
cmp
xchg
lcall
jo
ret
add
scas
dec
stos
rcll
in
add
out
data16
scas
cmp
sbb
jbe
aad
daa
scas
mov
push
out
adc
sbb
cmp
jbe
addr16
cmp
mov
notb
pop
lds
mov
jecxz
out
jo
xchg
mov
fstl
xchg
test
lods
pop
pop
jno
stc
rol
mov
push
adc
adcl
lahf
and
sub
jae
das
loope
jb
jg
jae
dec
push
or
pop
fs
scas
rolb
shll
mov
das
addr16
adc
jl
and
jnp
int3
pop
add
insb
nop
inc
aaa
adc
das
pushf
pop
icebp
inc
sub
pop
sbb
outsb
sub
sbb
jne
mov
es
iret
aam
sbb
pusha
or
pop
ja
xor
mov
xor
inc
shl
and
inc
pop
loope
stos
shrb
popa
mov
call
popf
ds
ja
add
add
xchg
das
insl
movsl
xchg
xor
or
jae
mov
sbb
repz
push
xchg
test
push
mov
lahf
jmp
add
push
add
mov
int
mov
daa
nop
add
mov
add
add
add
out
mov
mov
negb
jecxz
out
sub
push
mov
lea
ljmp
cli
dec
lcall
cld
xchg
subl
pushl
jle
push
mov
dec
ret
dec
leavew
out
negl
pop
cmp
mov
cmp
add
jnp
aaa
jmp
ja
add
push
jg
cmp
jmp
pop
add
pop
outsl
dec
push
push
sbb
fisubrl
xor
popa
lret
or
inc
testb
inc
mov
jne
adc
and
mov
stos
aaa
aas
lods
mov
xchg
lods
imull
mov
cmp
insl
cltd
mov
movsl
inc
mov
popa
lock
ds
idivb
jmp
push
inc
stos
push
mov
xor
xchg
stos
out
pop
jnp
stc
clc
ficoml
ljmp
fildl
mov
repz
cmp
mov
adc
dec
or
movsl
xor
add
movsbl
imul
mov
mov
pop
arpl
lcall
outsb
lea
outsl
or
scas
inc
adc
stc
lods
and
outsb
dec
cmpsb
shlb
mov
xor
movsl
xchg
cli
mov
std
xchg
out
fwait
mov
out
mov
repz
aad
lret
inc
sub
insb
cmp
popl
fs
stos
and
mov
sbbb
mov
and
out
cld
test
repnz
jo
dec
lock
mov
push
dec
mov
fidivrs
rcrb
int3
sbb
cld
sub
cwtl
addr16
push
mov
aaa
jp
fdivrs
add
fbstp
daa
or
xor
xchg
lea
sbb
xchg
lds
and
mov
dec
push
pushf
cmpsl
stos
cld
pop
xchg
or
lcall
add
js
hlt
mov
std
jl
xor
jg
sbb
add
std
add
add
xchg
pop
fldl
and
cmp
rcrl
cltd
jecxz
insb
push
inc
lods
cli
shll
inc
push
mov
inc
cli
jns
sbb
push
pop
shll
xchg
cld
mov
ja
out
mov
add
sub
or
jo
ljmp
stos
call
push
mov
adc
add
pushf
or
loope
repz
cli
clc
mov
cwtl
mov
add
mov
daa
lods
dec
fistl
movsb
or
adc
ret
pop
test
push
idivb
adc
jecxz
ret
xor
clc
push
sub
pop
pop
dec
aam
jne
jmp
repnz
sub
mov
and
mov
cmp
xchg
and
in
popf
inc
popa
xchg
les
arpl
addl
jb
add
cmc
int3
jne
push
sbbl
mov
xlat
inc
pusha
movsl
dec
in
mov
cmp
and
adc
ret
jp
xlat
popl
dec
popf
xchg
outsb
shll
pusha
mov
iret
jae
pop
out
xchg
pop
shl
mov
movsl
adc
pop
out
or
mov
fdivrl
out
aas
mov
idivb
testb
insb
jecxz
adc
mov
pop
and
add
popf
outsl
pop
jl
dec
ss
push
je
add
push
ljmp
dec
sub
jno
push
movsl
out
stos
pusha
inc
leave
sti
pusha
cwtl
aaa
dec
daa
push
fists
fsts
jae
scas
test
mov
repz
aam
mov
bnd
add
fdivp
add
and
movsb
test
adc
jp
shl
mov
xchg
and
pusha
cwtl
lcall
fmull
jmp
fbld
out
push
pop
repnz
add
add
imul
fdivrl
xchg
jmp
add
add
add
ficoms
aam
sbbb
fisubrl
cmp
push
sub
dec
pop
test
add
scas
dec
into
arpl
sahf
and
xor
push
mov
test
jmp
adc
sub
push
stos
scas
fdivrs
xchg
mov
outsl
mov
lret
jge
cli
inc
lret
cmpsl
fists
int
jge
test
add
sbb
loop
inc
and
or
cmp
stos
cmpsb
pop
push
loop
clc
push
ficomps
repz
icebp
les
mov
addb
xor
or
ficoml
add
pop
pop
inc
or
push
xor
fs
mov
movsl
sub
push
ret
jmp
scas
xor
push
inc
arpl
lea
mov
jbe
mov
dec
in
push
sbb
mov
cwtl
mov
icebp
ret
incl
arpl
adc
mov
enter
cmp
jae
adc
mov
lods
jne
imul
mov
add
arpl
insl
rorl
or
iret
idivl
mov
jmp
lcall
test
rol
popa
stos
pop
mov
stc
add
int3
mov
or
lcall
je
lret
push
sub
jg
das
enter
adc
push
mov
push
or
adcl
pop
cmc
ljmp
loop
sub
adc
loope
out
pop
in
out
fnsave
add
cmc
sahf
inc
mov
dec
pop
ss
cs
or
in
push
sub
sub
push
pop
sub
add
lods
icebp
ljmp
xlat
in
xchg
addr16
lock
mov
dec
jl
xchg
xchg
mov
mov
add
cmpsl
sbb
jg
pop
fstps
testb
add
cmp
bound
out
push
mov
jge
das
outsb
out
insb
xor
mov
push
je
push
sub
pop
jae
rorl
push
inc
bound
add
cltd
incb
jno
ljmp
loop
pop
push
movsl
outsb
mov
pusha
xchg
adc
sub
dec
jmp
fmul
push
push
data16
lea
add
cmp
cmc
inc
jg
inc
fcoms
push
xor
cmp
ret
push
xchg
or
les
lcall
stc
fsts
enter
std
add
push
outsl
movsl
push
mov
clc
and
xchg
jg
mov
mov
pop
pop
and
mov
sub
xor
or
inc
mov
push
mov
push
push
inc
int3
scas
adc
out
inc
negl
xchg
daa
mov
and
scas
xor
bound
rolb
mov
inc
jne
aam
stos
mov
fmull
aaa
loop
jecxz
divl
mov
push
mov
jns
scas
insl
cmp
inc
test
or
fsubp
pop
ret
jno
ja
imul
xchg
mov
fisubrs
pop
push
iret
add
jecxz
mov
dec
mov
mov
xor
ja
fcomps
cmp
les
jne
fisttpl
and
xchg
adc
jb
adc
xchg
pop
shl
and
addl
and
xor
incl
pusha
mov
out
loop
loop
xchg
adc
xor
aam
mov
push
jg
adc
mov
and
ret
or
push
stos
sbb
leave
sarl
dec
add
aaa
aaa
mov
das
push
test
imul
jmp
movq
lcall
stos
js
frstor
loopne
in
ss
mov
int
sub
jmp
push
push
add
add
popf
paddd
fidivl
adc
ja
pause
add
std
add
add
mov
push
bound
jge
and
into
roll
jecxz
cmpsl
cmp
mov
jle
xchg
or
aam
shrb
jnp
cmpsb
scas
sbb
js
out
jbe
lahf
fildll
sub
sbb
add
aaa
psubd
adc
cli
xchg
test
dec
xchg
nop
add
and
rcrb
andb
xor
push
xchg
adc
ljmp
ds
pusha
rclb
negl
cmp
lea
hlt
popf
pop
ret
xor
cli
pop
jl
add
cwtl
pop
xor
add
and
xor
nop
add
movsb
arpl
dec
xor
mov
stc
push
jmp
fistl
push
cmpsb
lods
xchg
pop
or
adc
stc
subb
mov
sub
std
aam
jge
xor
mov
or
xchg
and
loope
aas
mov
dec
mov
insb
mov
or
add
imul
mov
inc
mov
sahf
sbb
sbb
repnz
fsubp
subb
jle
aam
jl
js
sub
xchg
into
sbb
push
jp
movb
dec
cltd
jp
inc
sub
cmpsl
pop
outsb
outsb
xchg
adc
test
out
cmpsl
xchg
imul
xchg
adc
inc
lods
or
jnp
call
fs
test
icebp
cmp
bound
jns
out
or
sbb
push
sub
addr16
jno
scas
cmp
movsl
sub
dec
fcmovne
push
lods
icebp
sarb
xor
lods
jns
rcl
dec
pop
imul
cmpsl
push
push
lods
cmp
insl
add
sbb
jmp
mov
out
add
popf
dec
outsb
xchg
mov
and
add
add
push
movsb
lea
sub
notb
loop
mov
xchg
add
std
add
add
and
jle
or
insb
mov
call
inc
push
dec
std
stos
leave
mov
inc
stos
movsl
push
es
mov
adc
mov
leave
popf
lcall
jbe
cmp
aas
sarl
mov
jae
push
je
push
or
mov
fwait
mov
xchg
cmp
stos
cltd
jg
mov
mov
lods
fcoml
fwait
dec
and
and
ret
cmp
or
stc
test
xor
or
inc
sbb
jne
mov
adc
adc
clc
pop
xchg
mov
pop
push
int
inc
push
mov
xchg
cmp
bt
iret
xor
out
jecxz
push
inc
adc
sub
sub
bound
sub
daa
mov
fwait
aas
push
push
xchg
adc
push
lock
or
cmp
add
icebp
ljmp
cmp
fcompl
loop
xorl
sbb
std
xchg
pop
sbb
movsl
jae
sub
mov
add
insb
mov
pop
jp
fcmovnb
push
fsubrs
dec
sub
add
cmp
cltd
dec
cmpsl
sub
mov
dec
ja
push
sub
cmpl
or
add
test
out
mov
ss
pop
xor
jmp
xlat
adc
scas
mov
bswap
and
mov
mov
movsb
cmc
addl
nop
enter
test
cmp
inc
mov
mov
cmpb
push
or
xor
mov
add
push
orl
push
cmp
enterw
push
ret
data16
test
sbb
inc
sti
mov
jbe
or
dec
ja
cli
shl
and
inc
cmp
add
add
add
add
test
mov
aad
xchg
add
std
add
add
std
pop
jae
mov
add
cmp
out
mov
addl
sbb
adc
icebp
mov
xchg
or
inc
mov
and
jno
js
jecxz
in
rcrb
rcll
cmpsb
dec
roll
mov
mov
pop
dec
adc
xor
enter
mov
filds
xorl
mov
push
sbb
test
inc
leave
sbb
mov
xchg
pop
rolb
cmp
mov
mov
lcall
in
lahf
fisubl
sbb
popa
push
jge
or
or
adc
cld
enter
inc
jne
fdivrp
and
in
ss
mov
int
add
sub
lret
dec
pop
fiaddl
loop
or
inc
xchg
mov
push
cmp
sti
scas
mov
or
add
popa
out
fwait
and
pop
mov
fyl2xp1
mov
jecxz
dec
pushfw
pop
std
mov
xchg
adc
cmp
arpl
ret
and
sbb
jne
push
add
repz
out
sub
jae
iret
lahf
lock
hlt
pop
and
gs
sbb
mov
mov
sahf
rorb
jmp
stc
lds
test
arpl
inc
jl
in
inc
sbb
into
inc
loope
mov
stos
mov
dec
aam
mov
mov
mov
into
stos
cli
int3
add
les
lock
adc
cmp
jbe
xchg
test
jp
cmpb
das
pop
mov
iret
mov
jl
loope
cld
xchg
enter
mov
inc
in
ficoml
add
or
pop
lods
cli
push
mov
sub
add
add
add
xchg
std
jg
mov
add
std
add
add
mov
pop
cltd
out
inc
inc
or
ss
pop
pop
add
dec
xchg
lds
dec
sti
lods
fcmove
add
xor
or
imul
mov
inc
mov
lret
stos
jle
sbb
or
pop
inc
pop
lods
popa
adc
pop
in
push
xchg
idivl
mov
mov
mov
jmp
jge
in
ret
ja
nop
dec
adc
add
adc
xor
aad
sbbb
inc
pushf
aaa
int3
int
nop
xor
xor
mov
sbb
into
imul
adc
xor
xor
sub
xchg
sbb
lahf
sbb
push
xchg
shll
movb
pop
shll
mov
and
movl
add
rclb
insl
dec
popf
movsl
filds
mov
leave
into
test
ljmp
cmp
push
imul
leave
fldl
inc
loop
lds
scas
rcl
ret
mov
jns
jl
dec
push
inc
fdiv
out
cld
pop
imul
mov
xlat
pop
ja
sub
jg
xchg
ror
push
insl
sbb
fistpll
les
inc
lahf
adc
in
mov
decl
adc
mov
cwtl
out
mov
aaa
xchg
mov
push
notl
or
push
js
dec
xlat
aam
bound
mov
jne
lods
pop
jns
rol
fcmovnbe
push
jb
adc
into
fwait
or
paddusw
dec
and
and
imul
pop
cmp
sub
sub
xor
fiaddl
mov
lods
push
adc
test
aaa
loop
sub
pop
or
cmp
xchg
addl
jns
inc
add
add
idiv
iret
rorl
test
out
add
std
add
add
unpcklps
mov
sbb
lret
fcmovnu
push
movsl
sbb
stos
std
in
je
xchg
fs
mov
mov
js
les
push
mov
incb
insb
repnz
xor
repz
sub
mov
sbb
mov
sub
fnstcw
lock
inc
push
int
fs
mov
mov
fmull
adc
push
mov
mov
push
daa
test
fnstsw
cmp
fnstcw
ss
mov
inc
jmp
iret
adc
inc
inc
iret
jne
mov
xchg
push
sub
movsl
jmp
mov
mov
aas
ret
out
sbb
xchg
or
xchg
mov
or
idivl
pop
leave
cli
data16
adc
sbb
and
jbe
mov
mov
repnz
int
mov
or
push
aad
xor
fcomip
adc
fistpl
mov
out
scas
mov
fnstcw
or
mov
xor
push
stc
jl
inc
imul
push
sbb
rcl
insb
mov
jb
shll
rcrb
lods
cli
jmp
test
nop
cmp
mov
jg
loope
push
xlat
xchg
aad
bound
into
loop
jne
ja
xorb
lock
push
jbe
adc
cmpsb
adc
sti
stos
icebp
insb
stos
mov
imul
rclb
push
call
fadds
xlat
adc
es
paddb
xchg
adc
xchg
mov
test
out
xchg
adc
xor
enter
cmpsb
ljmp
jle
fs
ret
call
xchg
jg
add
nop
decl
call
inc
jecxz
add
out
ret
mov
ja
or
mov
lcall
or
jb
pop
inc
and
adc
repz
mov
sub
mov
push
inc
jmp
dec
sub
shrb
or
adc
xor
mov
jbe
jne
orb
in
pop
and
gs
lcall
mov
and
in
shr
or
int3
jns
dec
repz
aaa
mov
jns
stos
pop
int
cmpb
and
mov
fndisi(8087
mov
pop
inc
lods
inc
out
imul
cld
cwtl
push
xchg
mov
inc
aaa
in
xlat
fucomi
scas
out
mov
sti
dec
push
jo
movsl
cmp
xchg
pop
ret
dec
data16
lahf
fcmovnbe
insb
xchg
dec
lahf
sub
cmpsl
mov
push
lods
cmc
and
add
mov
call
add
insl
cs
sub
call
fildll
cmp
push
pop
popa
lods
jge
icebp
mov
loop
loope
sahf
cmc
jp
sbb
je
sbb
movsb
std
retw
scas
cld
lcall
jnp
adc
mov
out
loopne
cs
or
aaa
outsb
cltd
aam
lea
sub
jnp
std
xchg
test
imull
and
test
bound
xor
adc
cmp
popf
hlt
and
add
mov
sub
sub
leave
or
rcll
jle
pop
xchg
ss
mov
cmc
dec
fcmovbe
test
lret
mov
push
mov
push
sarb
cs
adc
inc
mov
xchg
movsl
fildl
ret
mov
and
ret
cmp
loop
mov
jl
idivl
lret
push
loopne
push
mov
and
insl
push
cmp
dec
sbb
jl
cmp
xor
or
xchg
lret
xchg
mov
add
add
push
push
jle
xlat
lret
push
testl
pushf
add
std
add
add
jmp
adc
cmp
jnp
data16
mov
popa
pop
leave
int3
in
lahf
fnstcw
fsubrl
xor
fmul
popa
pop
xlat
xor
jns
adc
imul
shll
mov
jecxz
fisubs
nop
sbb
aam
int3
jmp
or
xor
repz
out
arpl
cmp
mov
imulb
mov
lret
out
hlt
or
je
jne
sub
mov
enter
sti
mov
xlat
ret
out
adc
xor
add
xchg
adc
daa
inc
iret
cmpsb
fildl
jge
pop
push
xor
ret
fcomps
fmuls
loopne
sbb
lds
fsubrl
sub
xchg
sub
sbb
aad
out
jl
jp
ss
hlt
push
sbb
mov
lret
cs
mov
jo
cmp
sti
aam
dec
inc
sbb
fdivrp
add
inc
sub
call
push
addl
xor
out
pop
sub
test
push
adc
mov
xor
inc
jecxz
int
rorb
dec
mov
mov
mov
cmp
sbb
dec
fnstenv
sub
mov
push
and
fxam
popf
jo
rcrb
mov
clc
or
mov
inc
adc
enter
in
cmp
ja
lods
imul
fiaddl
fbstp
addr16
icebp
mov
ret
test
or
bndstx
push
pop
sbb
sub
test
dec
int
pop
pushf
repz
mov
xchg
insb
push
iret
push
imul
sarl
addr16
cltd
pop
pop
xor
aam
out
jb
adc
mov
jp
adc
jmp
lods
insb
add
add
push
or
pop
out
repz
fucomp
ret
dec
ficomps
add
daa
jnp
lahf
addb
inc
push
out
mov
sub
mov
and
dec
push
scas
dec
fwait
sbb
push
mov
popl
jno
ret
lock
subl
sbb
mov
out
stos
or
mov
aaa
orl
imull
cltd
addr16
dec
push
cwtl
inc
daa
adc
xchg
push
pop
inc
pushf
sub
cmpsl
push
sub
int
jno
add
cmpsb
adc
paddd
cmpsl
shrl
jmp
loope
mov
out
sbb
xor
pop
pushf
and
jno
enter
std
and
decb
int3
lods
cltd
loopne
push
jne
or
pop
push
cmpsb
sub
inc
mov
dec
and
rcr
pop
subb
stos
jge
adc
gs
popf
fst
add
cmp
or
push
mov
mov
movsl
lock
hlt
cmp
push
ret
ja
sbb
loopne
dec
pop
cmc
stos
xor
repz
sub
stc
cs
and
lret
stos
stos
sti
and
sbb
jne
xchg
xchg
inc
fcoml
push
aam
mov
in
das
div
lods
clc
pop
pop
mov
int
out
lret
shlb
rorb
xchg
xor
mov
mov
adc
mov
jne
sbb
mov
jmp
mov
xchg
push
add
into
ljmp
xorl
lea
jne
fwait
mov
fwait
leave
xchg
xor
std
cmp
ja
push
in
push
das
inc
loopne
js
mov
dec
jns
xor
in
test
hlt
pop
xchg
sub
into
add
mov
pop
mov
adc
cmp
cmp
add
xor
mov
push
sbb
dec
rolb
fildll
xchg
add
add
xchg
insl
mov
out
nop
sbb
mov
add
pop
push
int
xchg
push
pop
mov
ret
iretw
inc
gs
cmc
adc
inc
adc
mov
adc
std
jb
jge
stos
jo
ljmp
pop
insw
cmp
test
jne
push
into
add
cli
out
push
pusha
mov
dec
adc
pop
movb
xorb
lret
push
rol
xor
sub
pushf
xchg
add
iret
or
leave
fisttpll
xchg
mov
scas
cmp
outsb
xchg
push
clc
jnp
clc
std
push
fldenv
lods
adc
sbb
push
in
xlat
sub
ljmp
cmp
xor
mov
pop
push
cmpsl
mov
sub
jbe
xor
rorl
incb
repz
sahf
pop
xchg
shrl
call
mov
shlb
inc
lcall
adc
fldcw
roll
ja
jbe
mov
int3
inc
cld
cmc
mov
arpl
scas
inc
out
cmp
dec
test
mov
icebp
lcall
jne
mov
out
repz
test
ds
pop
in
outsb
push
mov
xchg
inc
fwait
sbb
push
out
into
mov
sbb
stc
loope,pn
pushf
call
dec
pop
xchg
push
mov
dec
add
popa
movsb
jbe
jg
push
xchg
pushf
pusha
xor
pop
pop
sbb
mov
cltd
mov
sbb
cs
repnz
jno
mov
jle
sti
adc
pop
push
inc
mov
add
cld
pcmpgtw
mov
push
je
daa
or
inc
push
inc
ljmp
fsts
sub
ds
rol
pop
xor
lods
insl
pop
push
insb
lahf
enter
dec
dec
popa
mov
xor
data16
sub
xor
imul
jg
das
or
xchg
inc
adc
push
mov
push
and
add
dec
out
ja
idiv
pop
out
cmp
rclb
fsubs
add
xchg
xchg
sahf
pop
xchg
mov
dec
xor
repnz
push
js
xchg
mov
loopne
mov
popa
lods
je
sarb
mov
add
xor
sbb
adc
dec
hlt
shrl
mov
xlat
or
cli
jo
shlb
dec
cmpsl
enter
jo
nop
sti
cmpsl
mov
movsl
mov
sahf
or
imul
push
stc
fs
xchg
fsubrp
stos
sbb
jb
add
mov
es
int
inc
in
rorb
cmp
fwait
in
pop
andb
insb
mov
dec
daa
movsb
and
lret
cld
das
std
sub
loope
in
data16
sahf
sub
test
lret
dec
sahf
pop
sub
mov
std
in
out
shll
and
push
xor
out
mov
adc
testl
stos
dec
push
dec
inc
frstor
scas
xor
inc
mov
dec
pop
fisubl
cli
xor
sub
std
dec
and
int3
ds
cmpsl
nop
popa
dec
cmpsb
xor
test
push
loop
lods
mov
mov
pushf
cmp
lcall
jle
push
push
sbb
sahf
shr
mov
fistl
lahf
push
mov
add
hlt
movsl
push
mov
movsl
add
xchg
repz
jo
ja
scas
push
push
adc
inc
cltd
scas
arpl
or
jb
fs
insb
push
mov
push
in
scas
mov
jno
cmp
push
adc
scas
lds
add
fidivrl
cmpsb
jp
and
push
pop
adc
xchg
add
cwtl
sub
in
outsb
mov
push
add
push
fnstenv
sti
jecxz
ret
in
mov
cs
and
sbb
dec
inc
adc
push
mov
arpl
outsl
jecxz
jne
cli
xchg
mov
sbb
sti
jne
and
add
add
add
add
sti
mov
inc
cmc
xchg
add
add
add
xor
fwait
xor
dec
push
call
push
push
or
orl
push
mov
xor
jnp
pop
popf
xchg
imul
cmp
adc
enter
out
or
and
pop
xor
push
jecxz
pop
adc
mov
mov
gs
idivb
icebp
pop
shll
or
test
into
xor
dec
jns
lcall
or
xor
arpl
ja
in
mov
pusha
fnsave
adc
aas
mov
push
enter
sub
sub
add
push
mov
jl
negl
ljmp
push
cmp
and
xor
xorl
and
daa
and
mov
push
outsl
popf
mov
mov
rcll
xor
repz
pop
jb
cwtl
xor
push
jo
ret
pop
aas
ficoms
outsl
fwait
cmpl
jnp
add
int3
fmul
pop
add
popf
cwtl
int
adc
rcr
les
cmpb
or
pop
mov
add
rclb
jg
cli
rorl
xor
mov
out
sarl
mov
jno
add
mov
mov
stc
jle
xor
rcll
and
fidivrl
pop
popf
sbbl
daa
insb
subl
mov
mov
aam
mov
mov
mov
and
lods
sarb
xchg
decb
sbbb
fwait
add
test
repz
stos
and
scas
pop
movsb
adc
sahf
xor
pop
push
test
cmc
in
mov
inc
add
and
decb
gs
cli
xchg
mov
pushf
ds
incb
add
xor
sahf
xor
sub
cmpsb
add
std
add
add
cmp
mov
nop
mov
cmp
sub
mov
pop
mov
fisubs
xchg
sbb
push
addb
rcl
aaa
in
rcr
pusha
arpl
lock
in
push
bnd
pop
shrl
daa
mov
nop
aam
sarl
mov
lds
sub
adc
call
push
jns
sbb
jg
push
aad
jge
jl
sbb
or
and
inc
insb
movsb
add
je
cli
imul
dec
lods
movsl
fsubr
push
pop
push
enter
jmp
pop
aaa
stos
icebp
movsl
cmp
cwtl
fsts
ret
pop
adc
jle
jae
dec
push
mov
scas
jbe
dec
cmp
pop
outsb
stc
xchg
repnz
ret
in
icebp
orb
daa
imul
sbb
xchg
pop
adc
aas
push
aaa
cmpsl
aaa
adc
lcall
cwtl
mov
pop
andb
pop
xchg
xlat
or
pop
mov
cld
push
pusha
shrb
or
mov
cmp
leave
adc
jle
mov
es
lds
out
scas
ret
and
inc
jns
jae
sbb
test
rclb
aas
loope
shrl
enter
jae
mov
pmaxub
outsl
mov
scas
notb
outsl
add
adc
cmc
sbb
jmp
scas
aaa
fimuls
call
in
jb
pop
mul
jge
ret
push
push
mov
jp
dec
es
enter
je
sub
add
cmp
xlat
xchg
push
push
inc
data16
pop
jmp
push
ds
scas
ret
bound
cltd
movsl
mov
xchg
push
or
sar
sahf
and
mov
cmp
inc
into
cmp
scas
pop
cmp
mov
adc
sbb
arpl
stc
std
in
mov
mov
std
cmp
jecxz
iret
test
add
add
add
sahf
xor
push
lcall
xor
xchg
jnp
pop
sbbb
or
push
fisttps
lock
rclb
rep
push
mov
cmpsb
jmp
push
aam
sbb
not
shll
loop
scas
add
roll
mov
rorb
lock
jecxz
aas
in
lds
fsubs
fs
sarb
inc
iret
or
insl
mov
pop
pushf
jo
in
or
dec
bound
clc
aas
repnz
push
test
jae
xor
mov
mov
add
dec
stc
movsb
cmp
test
int
es
shll
cmp
lds
outsb
add
into
sti
gs
mov
jge
mov
mov
pop
sbb
sbb
and
out
aam
insb
js
inc
jg
jecxz
jg
fdivrl
inc
push
mov
orb
xchg
fidivrs
insb
pop
nop
in
mov
push
sub
push
add
sub
das
leave
push
outsb
daa
pop
add
popf
lcall
push
mov
jmp
jne
in
aam
pop
jp
fiaddl
mov
dec
daa
cmp
jecxz
lret
loope
push
cmp
jge
ficompl
jno
lea
aaa
sbb
cmp
xor
shlb
repz
mov
mov
rorb
jb
scas
cmp
inc
add
add
jle
mov
shl
gs
pop
sbb
call
fistl
jecxz
sub
push
sbb
dec
aaa
fcomp
pop
cmp
leave
xor
leave
mov
or
jge
mov
testb
shl
fincstp
xchg
mov
inc
lods
pushf
je
fcomps
push
mov
movsb
mov
add
repnz
testb
inc
rorb
add
std
add
add
push
daa
and
dec
xchg
mov
cmp
push
insb
out
jmp
fstps
loope
lahf
mov
mov
popf
jmp
mov
lea
mov
xchg
cli
inc
jne
or
scas
mov
push
mov
jp
fdivrl
loope
push
out
xchg
fsubr
leave
test
xchg
insl
int3
scas
int
imul
rep
push
aad
cmp
repnz
addl
aaa
in
nop
jnp
nop
push
add
push
fisttpl
fmul
jne
fistpl
in
lahf
enter
repz
pushf
push
xchg
cmp
rol
gs
push
aad
bound
sub
lods
push
pop
sbb
jo
mov
int
mov
jle
jmp
imul
cmp
test
adc
scas
addr16
js
loopne
and
popa
xor
flds
ljmp
push
je
pop
adc
sbb
jne
cltd
movb
and
push
jns
leave
cmp
pop
sbb
cmp
outsl
fidivs
mov
ja
sar
fldcw
add
les
cwtl
jbe
out
and
push
daa
je
xlat
cmp
pop
outsl
jne
inc
insb
jecxz
jnp
ljmp
mov
dec
sahf
xchg
mov
cmpsb
in
rcl
sbb
out
call
inc
xor
test
scas
clc
sub
and
pop
cmp
inc
adc
inc
sub
lock
pop
insb
pop
and
test
notl
jns
cmp
mulb
loope
in
mov
test
pop
xor
mov
cmpsl
jge
fisttpll
mov
std
ja
insb
add
rcr
sbb
out
ljmp
mov
jle
mov
inc
inc
popa
data16
gs
mov
std
jnp
fs
lods
add
std
add
add
lahf
push
imul
xchg
xchg
fldt
imul
fdivl
movsb
mov
sbb
daa
push
mov
push
insb
imul
cmpl
mov
sub
xchg
ds
and
fs
jmp
jne
pop
test
sbb
or
cwtl
xchg
and
dec
testl
loopne
xorb
scas
and
push
push
test
push
fnstsw
inc
ficomps
jne
mov
pop
and
stos
ja
repz
shrb
and
mov
inc
xchg
pop
sbb
cmp
inc
push
mov
cmp
cmp
xchg
insl
sbb
test
push
sub
dec
dec
jl
test
add
arpl
mov
xor
add
xchg
das
sbb
cli
add
std
sub
dec
add
idivl
push
inc
fidivrl
sub
mov
ds
movsl
push
icebp
insl
mov
cmpsl
mov
lock
in
mov
pop
cs
cmpsl
lcall
repnz
or
pop
cmp
stc
mov
jecxz
xchg
icebp
mov
popf
insl
mov
push
mov
lcall
fsin
int3
xorl
mov
imul
mov
push
fldenv
stos
sarb
lret
sub
or
pop
pop
jne
xor
jg
arpl
jl
xchg
push
rcrb
hlt
daa
sbb
mov
test
sub
cmp
jno
imul
adc
ret
popa
jb
cmp
jmp
orb
lds
jl
dec
pop
aad
in
scas
add
jecxz
adc
mov
loopne
xchg
daa
adc
adc
pop
sub
cmpsl
pop
rcr
mov
rol
sahf
mov
mov
rcrl
repz
cli
cmp
adc
push
scas
mov
scas
add
std
add
add
xchg
mov
sub
mov
and
adc
xor
inc
in
and
daa
push
add
pop
scas
sbbl
ret
ret
aaa
jo
test
and
or
leave
inc
add
lock
jns
xor
aam
neg
mov
dec
inc
pop
mov
fiaddl
add
das
adc
xor
cli
shll
lret
ja
xor
pop
enter
cli
sarl
jns
aad
xchg
jl
sahf
jne
sub
int3
or
inc
aas
mov
insl
bound
or
ret
cmp
xchg
stc
or
mov
and
pusha
xchg
fisubl
lds
pushf
sahf
jl
orb
stc
xchg
inc
imul
hlt
push
push
pop
rcr
gs
pop
lds
or
int
jp
pop
add
in
stos
in
sub
sbb
mov
ds
add
or
and
mov
inc
cmp
xor
push
cltd
xlat
adc
scas
mov
push
out
daa
pop
adc
sub
mov
xor
into
fisubrs
xlat
out
jns
imul
xchg
and
push
pusha
repnz
aaa
pusha
pop
mov
fstpt
aad
and
cli
or
lret
mov
in
jl
jno
mov
enter
enter
sub
es
xor
jle
push
mov
bound
imul
jge
and
fldl
repz
push
out
stos
js
xor
repnz
mov
sbb
sub
outsl
stos
push
pop
jo
fadds
in
dec
inc
xor
push
mov
or
push
mov
daa
and
aam
movsb
inc
fnstenv
sub
and
mov
add
add
and
push
push
cmp
dec
sub
ret
mov
add
add
add
mov
sub
test
cmp
fcoml
adc
pop
jg
xlat
iret
or
or
or
and
add
push
mov
sbb
xchg
mov
repnz
or
and
push
and
mov
test
dec
in
and
dec
lods
lds
fisubl
inc
sbb
jecxz
pop
enter
xor
cwtl
push
es
mov
and
add
dec
jp
popf
in
lods
mov
xchg
and
pop
pop
jo
xchg
cld
xchg
mov
jns
or
mov
push
xor
xor
adc
cmp
insl
adc
fcomip
and
aas
sarb
test
and
movsl
push
inc
add
inc
sbb
adc
cli
adc
in
jbe
lahf
iret
ljmp
fidivl
jbe
cmp
dec
inc
sbb
fisubl
test
add
mov
std
add
je
push
in
icebp
lahf
mov
or
xor
add
dec
add
shlb
mov
fwait
push
adc
fwait
mov
push
loope
bound
popa
inc
pop
sarl
call
jae
cmp
test
or
in
push
push
jns
mov
xchg
pop
inc
mov
mov
test
jne
xor
dec
jbe
pop
sbb
leave
dec
das
fs
fstl
dec
pop
xchg
mov
mov
adc
mov
call
xchg
pop
fistps
sub
push
xchg
xchg
xchg
xor
cmpsb
aam
dec
mov
insl
aas
imulb
xchg
aad
push
in
add
leave
xor
mov
test
sbb
add
fnstsw
mov
in
outsb
fs
pop
cmpsb
add
mov
add
add
add
sti
nop
or
aam
fadds
jl
cmp
insl
or
fwait
aaa
insb
into
dec
out
xchg
adcl
movsl
and
mov
xchg
sub
rclb
mov
xor
lods
pop
adc
mov
test
cmpsb
lods
cmp
test
cmp
dec
jle
arpl
insl
aaa
adc
xor
xchg
fadds
arpl
mov
sbb
jo
mov
dec
test
rclb
xchg
sbb
ljmp
shrb
mov
into
adc
mov
adc
cmp
sub
subb
leave
xchg
std
icebp
jl
sbb
pop
cs
push
insl
clc
outsb
sbb
mov
inc
mov
mov
jnp
push
sub
and
inc
shlb
test
lds
push
lret
cmp
and
insb
jecxz
cmp
cwtl
icebp
mov
aas
in
sub
ds
inc
mov
xchg
jmp
add
mov
ret
dec
push
dec
mov
lahf
insb
roll
jnp
cmp
fsubrp
nop
lock
les
or
pop
insb
jmp
faddp
mov
cli
cmp
repz
jge
outsb
sbb
pop
mov
sub
mov
test
add
ror
popa
push
or
xor
or
cld
mov
inc
dec
movsl
mov
inc
adc
bswap
test
jp
es
lock
mov
and
sub
xlat
adc
shr
push
shll
movsl
jne
popf
insb
lret
test
lods
jbe
movsl
adc
repz
int3
mov
fwait
xchg
push
xor
pushf
push
cs
push
in
popa
mov
xor
ret
jmp
mov
xor
and
mov
mov
add
add
inc
mov
jb
mov
add
std
add
add
xchg
mov
sub
stos
jecxz
pop
fdecstp
aaa
mov
idivb
adc
push
push
push
lds
lock
out
das
fnstenv
icebp
das
cmp
fstpl
xchg
adc
ret
or
xor
sbb
xor
stos
ret
pop
push
mov
mov
sub
test
cwtl
or
mov
mov
xor
sahf
ds
push
and
mov
repz
add
jo
insb
aas
enter
xchg
out
dec
add
xchg
adc
popf
les
inc
cld
jnp
sbb
stos
addr16
out
nop
xor
mov
sbb
jbe
xor
aaa
inc
and
ljmp
pop
push
enter
jno
nop
pop
cwtl
sub
hlt
push
sub
dec
mov
es
add
mov
movsl
stos
pop
nop
pop
push
pop
js
popf
inc
test
bound
ljmp
orb
popf
out
mov
loop
sub
xchg
jle
ds
rorl
inc
jecxz
jle
xor
jmp
scas
out
mov
dec
pop
jo
cmp
fiaddl
cli
adc
xchg
lods
icebp
cmc
insl
jae
cmp
pop
cmp
inc
xor
dec
mov
sbb
jo
inc
lret
push
mov
std
test
cmp
out
jge
aaa
into
or
dec
cltd
sbb
je
stc
mov
xor
shr
mov
and
in
adcb
dec
cltd
inc
incl
clc
dec
loop
jle
test
scas
sub
pop
or
or
xor
cltd
outsb
push
out
mov
or
out
sahf
aaa
mov
lock
jne
nop
adc
push
mov
jecxz
dec
and
leave
gs
negl
inc
mov
jns
fs
mov
jne
push
add
mov
sti
sub
add
clc
mov
cmp
mov
mov
mov
add
add
mov
pop
cld
mov
pusha
sbbl
mov
mov
in
sti
ljmp
cvtps2pi
add
stc
imul
fnstenv
inc
cmp
jg
jle
in
gs
mov
test
push
lret
fcoml
mov
jae
add
leave
sbb
or
fs
and
mov
xor
jne
cmp
pop
xor
xor
in
fdivs
add
and
aas
mov
push
je
inc
inc
test
mov
in
mov
ja
sbb
addr16
lods
stos
popa
push
inc
mov
jg
fs
sbb
cmp
add
xor
lcall
pop
sbb
cli
xchg
repnz
adc
outsb
sbb
bound
insb
ficoms
push
enter
fisttpll
leave
push
push
es
inc
adc
cmp
bound
add
or
or
mov
jmp
mov
xchg
clc
fwait
jnp
aaa
lds
push
into
repnz
fldenv
jg
adc
mov
in
sahf
and
rcl
adc
add
inc
sbb
adc
lcall
adcl
lds
test
stos
movsl
jns
adc
mov
addr16
mov
xchg
dec
mov
cmpsb
pop
adc
mov
sahf
bound
mov
ljmp
clc
inc
cld
mov
jle
repnz
push
in
out
lock
out
ret
and
lea
loop
cld
aaa
jbe
adc
aam
lcall
in
cwtl
push
pushf
ret
jecxz
lock
pop
cmp
fwait
mov
fdivrs
jge
adc
push
mov
push
repz
out
add
add
sbb
out
idivl
test
out
inc
mov
add
std
add
add
xchg
sbbl
mov
mov
aas
aad
aad
sahf
xchg
cli
mov
inc
pop
sbb
xor
pop
dec
sub
mov
cmpsl
add
aas
adc
mov
out
xor
or
sahf
inc
mov
icebp
xlat
jo
ljmp
shlb
pop
push
lods
push
sti
cmpl
xchg
jmp
in
push
negl
jo
test
cmp
insl
in
jge
or
out
xor
sub
lret
xchg
jae
pop
shrl
xchg
push
dec
inc
push
mov
cmp
jne
jo
jle
fisubrs
hlt
imul
jns
mov
arpl
fs
mov
mov
cmpl
sti
scas
and
lods
in
std
lret
inc
cmp
mov
rorb
mov
out
mov
and
fstpl
pop
mov
das
adc
aas
or
aas
int3
inc
jo
inc
xchg
jno
jbe
mov
mov
lods
call
movsb
loope
pop
subl
add
mov
jecxz
lods
jecxz
mov
jo
ja
inc
call
xchg
xlat
loope
mov
in
test
pusha
jae
cli
pop
dec
inc
xchg
or
inc
test
mov
movsl
dec
lret
sbb
sbb
nop
mov
or
ds
mov
das
and
repnz
cmp
dec
mov
sub
xor
enter
mov
push
adc
jbe
inc
and
push
jne
jmp
adc
leave
push
icebp
xchg
rorb
aad
mov
sysenter
mov
sarl
lret
das
xor
add
movsl
or
andb
lcall
fs
inc
dec
mov
add
gs
fcompp
out
fs
popf
outsb
scas
fstps
mov
add
std
add
add
sub
insb
sub
push
lds
aam
andl
jbe
sbb
cmpsl
ljmp
daa
sub
push
pushf
or
dec
adc
loopne
or
incb
cmpsb
jns
sbb
and
xchg
pusha
inc
subl
cltd
xchg
sbb
mov
ljmp
ljmp
mov
rcr
in
fdiv
iret
lcall
jecxz
adc
imul
jge
cmp
mov
inc
test
push
es
xor
mov
mov
insb
insl
jecxz
jge
mov
jle
repnz
sarb
insl
and
loop
decl
mov
pop
lea
div
test
jecxz
pop
cltd
je
and
dec
popf
out
mov
jne
jg
adc
jns
pop
test
pop
js
cmc
add
fcom
pushf
insl
stos
incl
into
push
repnz
iret
pusha
mov
lods
jb
in
mov
sbb
xchg
cld
jmp
popa
xorb
std
lods
push
idivl
jno
push
ds
inc
pop
xchg
jl
jmp
mov
add
dec
cmp
sbb
test
cmp
mov
mull
push
mov
adc
scas
mov
jno
xchg
add
inc
xor
pop
cli
bound
scas
mov
xor
mov
mov
fstl
icebp
or
sbb
aad
mov
outsb
mov
mov
fcmovu
shll
jle
add
in
repnz
dec
mov
pop
orl
test
leave
mov
jae
ss
cmp
lock
xcrypt-cbc
cmpsl
xlat
sub
add
fsubs
jmp
adc
jl
dec
dec
orb
arpl
add
add
mov
leave
lahf
jg
inc
jb
sbb
jp
push
sbb
aaa
or
add
negl
dec
je
pop
xor
or
lcall
mov
and
sbb
jnp
cmpsb
dec
dec
cmpsl
scas
dec
pop
dec
imul
icebp
pop
cmpb
stos
mov
pop
inc
rorb
dec
dec
mov
fcmovnb
adc
dec
outsb
push
and
sahf
stc
xchg
adcl
enter
cltd
and
mov
jae
enter
jle
cmpl
fwait
cmpsl
pop
lea
adc
inc
inc
int
pop
adc
insb
cltd
jnp
and
data16
sbb
or
out
leave
insb
or
mov
stos
mov
dec
das
aaa
sbb
push
aad
fmull
icebp
inc
dec
rolb
repz
ljmp
xchg
and
fstpt
adc
aam
mov
xchg
scas
lret
mov
add
jmp
mov
loope
cmpsl
sbb
inc
into
pop
xor
mov
idivl
push
sti
jle
push
xchg
les
adc
push
loopne
cmp
sub
dec
mov
outsb
xor
sbb
cmp
add
cli
in
test
pop
mov
inc
sarl
mul
outsb
cld
mov
shrl
lods
xor
fwait
dec
out
divl
popf
nop
sbb
pop
fdivl
jno
roll
mov
and
mov
jo
inc
ja
jecxz
push
jo
mov
aam
or
pop
imul
xchg
nop
in
mov
xor
inc
arpl
mov
mov
xchg
jmp
mov
pop
or
scas
negl
in
movsl
nop
dec
xor
xlat
push
jl
mov
adc
sub
xchg
inc
jg
add
add
and
xor
sub
jmp
std
add
add
mov
scas
sahf
gs
pop
xlat
adc
andl
jnp
gs
inc
insb
jl
cmp
nop
adcl
divb
rorb
push
xor
mov
sub
bound
inc
loope
cmp
pop
scas
arpl
popa
inc
adc
clc
mov
inc
stc
ss
out
in
ja
adc
cmp
aad
pop
imul
or
repz
call
fwait
and
in
xchg
lock
dec
adc
aam
sub
xchg
out
in
push
cmp
faddl
add
mov
fcompl
xor
or
mov
lock
jae
dec
jns
sub
loopne
xchg
aam
mov
std
orb
sbb
xchg
inc
and
aas
insl
das
lods
addb
push
mov
jno
adc
dec
inc
movsl
pusha
jbe
sbb
inc
push
subb
or
or
sahf
aam
adc
cmp
xorb
and
leave
and
push
inc
add
cmp
xchg
cld
arpl
inc
sub
or
outsb
push
scas
dec
cmp
jmp
lahf
mov
mov
sbb
jne
inc
and
rcr
addl
add
cmp
int
pop
sub
dec
cmp
add
shl
sub
dec
andb
std
insl
xorl
ficoml
ja
mov
inc
dec
idiv
in
test
push
xor
aas
mov
cs
adc
xor
movsb
xor
ss
pop
xchg
ds
or
or
ret
and
mov
out
shll
imul
xchg
sti
test
push
add
add
push
jecxz
jg
data16
sbb
push
test
add
add
add
fsubp
int
sbbb
cmpl
mov
xlat
repnz
pusha
lods
scas
bswap
push
mov
mov
cmpsw
or
in
movsb
mov
rolb
jecxz
scas
fistpll
in
addr16
adc
or
xor
lock
mov
fdivrp
js
jge
add
push
insl
lock
jmp
add
dec
sub
xchg
pop
adc
push
xor
stc
add
jns
imul
fcomps
mov
je
ds
mov
push
ss
push
outsb
sahf
push
jg
push
call
mov
mov
mov
addr16
push
lahf
push
cld
and
shll
push
cmp
test
xchg
xlat
ret
xchg
mov
and
lds
mov
jne
mov
cmpsl
mov
out
cmp
jg
adc
mov
sub
lret
mov
sbb
popa
add
mov
aad
xchg
pusha
push
and
mov
add
push
sub
in
adc
cmp
lods
mov
or
mov
cltd
aaa
push
mov
inc
scas
xchg
jno
mov
jo
jp
and
lock
and
fcmovb
sti
aas
cli
jne
lahf
out
jne
neg
dec
mov
mov
lods
add
lcall
mov
pusha
cld
lret
push
mov
test
or
mov
push
inc
dec
lock
cmp
outsl
test
repnz
clc
xchg
sub
jne
and
push
pop
or
popf
lret
lods
in
sub
repnz
pop
sub
mov
xchg
sti
lcall
ret
mov
mov
movsl
shll
or
lcall
and
leave
or
add
add
pusha
jbe
out
test
stos
fadds
add
add
add
dec
mov
out
xorl
ror
fsubrp
out
push
in
xor
xchg
imul
sub
jne
mov
leave
cs
jle
rclb
fwait
cmp
mov
inc
imul
int3
cmp
imul
pop
lds
lahf
push
jbe
lods
inc
imul
jmp
into
and
mov
icebp
aaa
and
icebp
dec
xchg
mov
sahf
imul
sub
pop
fldt
xor
xorl
ret
loopne
in
gs
test
cmpsb
into
enter
add
dec
subb
fisttpll
add
jp
inc
push
mov
and
mov
dec
adc
mov
push
loope
cmp
xchg
pop
bound
addr16
in
pop
adc
stos
pop
fsubr
mov
bound
inc
xlat
and
punpckldq
into
xchg
ljmp
shl
cmpsl
shll
imul
aam
mov
aam
pushf
mov
jbe
lcall
or
add
sub
xchg
push
dec
mov
mov
xchg
sbb
iret
aad
push
push
jle
add
ret
add
idivl
scas
dec
inc
jo
jb
int3
ret
push
push
fildl
xchg
imulb
xchg
sbb
cmpsb
mov
scas
push
pop
or
sti
jg
push
in
popf
sub
insb
aaa
mov
repz
cmp
push
jbe
and
leave
mov
mov
cmp
adc
pop
das
out
cmp
xchg
mov
xor
adc
mov
jmp
xor
cmp
rolb
int
add
inc
or
int
enter
mov
jo
lds
sbb
in
jl
test
insb
movsl
cmpsl
add
add
pop
lcall
addr16
idivb
add
add
add
or
jno
sti
jno
stos
cmpsl
adc
les
decl
xchg
out
sbbb
aas
pusha
loope
dec
mov
xchg
cltd
push
mov
pop
into
aaa
cmp
push
daa
mov
adc
add
je
out
sti
fsubrl
ja
xor
rolb
jbe
inc
insl
adc
arpl
mov
inc
cmp
cmp
lret
js
bound
je
adc
cmp
cltd
mov
out
cs
sub
clc
push
pop
hlt
and
xor
fnsave
dec
repz
cmpsb
ljmp
mov
dec
jns
jnp
pop
fs
inc
fwait
test
jb
in
or
mov
cmp
inc
xchg
dec
or
pusha
cmpl
mov
mov
and
dec
sbb
xor
pusha
cmp
sbb
xchg
mov
out
sbb
in
jecxz
add
mov
dec
enter
ds
into
inc
sahf
shll
mov
aam
call
or
cld
arpl
movsl
xor
out
dec
lret
imul
jl
jle
push
jnp
lret
mov
cmp
xchg
stos
pop
xchg
stos
or
jmp
lret
cmp
fwait
out
and
inc
xor
mov
push
ljmp
mov
sbb
in
mov
bound
mov
sub
pop
xchg
xchg
leave
fs
adc
sbb
adc
cmp
inc
add
jne
fsubl
leave
pop
scas
sahf
pop
xchg
out
mov
ljmp
or
pop
mov
mov
in
mov
fisubl
sub
or
in
orb
test
jp
push
jno
sahf
mov
sbbl
mov
mov
dec
push
mov
jmp
aad
inc
cwtl
cmpsb
fisttps
sbb
xchg
sbb
scas
add
mov
addl
insb
sub
outsl
daa
insl
push
addb
xchg
mov
xor
add
add
xchg
cmpsb
xchg
ret
jp
mov
push
jg
pop
and
gs
incw
push
cmp
test
insl
hlt
sbb
int
fs
pusha
cmp
pushf
or
je
cmpsb
mov
inc
push
push
sbb
emms
jle
jecxz
fidivs
fwait
or
dec
jp
js
dec
sbb
fistps
xchg
fisttps
jecxz
or
and
movsb
lret
adc
xor
cmpl
ffree
pushf
mov
loop
nop
jbe
xor
call
testl
ljmp
push
loop
dec
xlat
and
push
ljmp
add
mov
mov
aas
dec
pop
xchg
sti
insb
mov
dec
rolb
mov
test
sbb
sub
jmp
xorb
xchg
pop
sub
lret
cmp
inc
cmp
insb
shl
xor
push
pop
push
idivl
loopne
jge
fwait
adc
mov
jno
fmul
out
insl
jecxz
jns
and
popa
or
ret
and
mov
cld
push
mov
xchg
in
fdivl
fs
call
add
or
pop
test
les
movsl
out
insb
push
mov
enter
jge
leave
add
inc
popa
lds
mov
push
inc
daa
cmp
mov
dec
inc
mov
xor
stc
test
or
push
outsb
shl
pop
inc
hlt
cmp
lcall
gs
ljmp
cs
jmp
je
test
or
push
popa
or
jp
cmpsb
or
shl
cmp
xchg
lds
push
push
and
roll
add
stc
aas
sbb
bnd
mov
xor
add
add
add
add
pop
and
mov
out
leave
enter
sbb
lahf
enter
add
add
inc
push
divb
cmp
sahf
in
mov
mov
mov
inc
cmp
and
push
stc
and
and
js
lcall
sub
lea
jl
jo
fbstp
fwait
push
sahf
and
insb
sahf
jb
fadds
orb
aad
lcall
inc
jo
imul
and
ds
outsb
xor
hlt
and
es
and
add
sub
pushf
jmp
cmc
outsl
addr16
and
and
pop
test
xor
cmp
sarl
leave
lret
push
cmp
cmp
imulb
test
inc
popf
lcall
push
add
test
fdivrs
outsl
push
notl
cmova
cmp
into
push
xor
push
loop
pop
pusha
imul
jnp
loope
add
stos
inc
cld
sub
and
and
dec
mov
addr16
call
push
add
add
fxch
addr16
fisubrl
cld
jp
aaa
inc
adc
es
fistpl
sbb
andb
out
push
sub
stos
cmp
adc
xor
dec
outsb
repnz
cmp
andl
pop
lods
xorb
mov
xlat
shrl
pop
push
iret
fsubrs
dec
pusha
and
jae
lds
int3
sbb
push
mov
addb
adc
dec
dec
ds
rcll
mov
jb
xchg
aam
pop
mov
mov
add
pop
cs
mov
adc
adc
dec
jmp
in
addr16
mov
mov
nop
mov
rcrb
std
stos
push
cli
inc
lahf
push
popf
adc
test
addb
add
cmp
mov
mov
adc
pushf
lret
std
add
add
pop
push
aam
jle
xchg
lds
repnz
pop
ljmp
shl
out
lcall
fadds
pop
inc
insb
sbb
dec
ficompl
in
jb
lret
xor
loop
pop
repnz
mov
fildll
inc
js
loopne
sub
mov
add
xlat
int3
cmp
in
pop
or
pop
add
scas
jle
aam
jmp
sahf
jg
movsl
fimull
aas
xlat
testl
imul
out
push
orl
dec
xchg
push
in
pop
adc
test
iret
dec
pop
les
imul
out
fs
rcrb
cltd
sbb
pusha
cmp
nop
es
mov
jle
mov
icebp
cmpsb
dec
xchg
ret
mov
sti
cs
je
pop
xchg
or
sub
pusha
outsb
push
adc
int3
scas
sub
dec
pushf
das
outsl
mov
mov
dec
rorb
dec
test
jecxz
mov
add
enter
mov
sti
dec
mov
je
popa
imul
xor
rcrl
out
mov
hlt
nop
fcmovnb
loop
pop
sub
ret
cmpsl
or
adcb
jmp
xchg
cmpsl
movsb
jae
mov
pop
ds
push
shrb
add
aas
or
and
rorl
cli
xor
and
pop
idivl
lds
shlb
mov
rcl
inc
pop
push
push
xlat
xchg
out
dec
adc
cld
add
out
out
sbb
in
call
pop
and
call
fidivl
std
in
inc
sub
sub
inc
add
fs
inc
insb
mov
pop
mov
lods
popa
inc
cs
setae
and
clc
xor
mov
sbb
push
add
add
sbb
jge
aam
dec
jno
jns
cltd
int3
add
std
add
add
and
bound
mov
mov
out
js
imul
xor
push
sub
les
lret
std
push
mov
pavgb
lods
js
jns
fdivl
push
push
push
pop
ljmp
cmpsb
xchg
and
out
icebp
orl
add
mov
mov
jbe
pop
movlps
or
andb
xchg
push
inc
cmp
pushf
sbb
pop
pop
out
sbb
mov
mov
xchg
jle
adc
scas
add
mov
dec
cli
mov
xlat
daa
push
pop
mov
dec
xlat
jo
pop
mov
aam
mov
fwait
in
fisubrs
ljmp
xchg
cwtl
or
addr16
out
or
fdivl
xorl
fucomp
testb
jmp
sub
xor
xlat
insl
push
ja
icebp
dec
cmp
dec
inc
add
or
sub
inc
push
cmc
out
add
shrl
jbe
xlat
jl
out
andb
sbb
jbe
pop
fs
cli
jb
or
mov
mov
sbb
dec
pop
ret
loope
in
bswap
xchg
lret
cli
cmp
and
pop
fsubrl
iret
cmpsw
pusha
xchg
insb
jbe
test
jge
or
push
pop
inc
sbb
or
iret
aaa
push
test
xchg
dec
mov
or
mov
pop
int
mov
leave
mov
sbb
ret
cmpsb
mov
adc
lods
pushf
inc
outsb
jb
cmp
into
mov
fcoms
push
out
leave
aad
fucom
and
icebp
int
cmp
pop
in
sub
clc
push
outsl
mov
jns
arpl
movsl
sbb
in
xor
out
fstl
scas
inc
dec
out
xor
add
add
mov
nop
leave
insb
fisubl
xchg
into
add
std
add
add
mov
hlt
mov
loope
mov
adc
and
xchg
arpl
and
ljmp
mov
mov
mov
movl
sahf
mov
mov
cwtl
pusha
loop
imul
fstpt
dec
dec
ret
ret
sbb
or
cmp
addl
push
or
dec
push
fcoms
outsb
arpl
sbb
add
js
sahf
imul
sub
xchg
xor
fadds
mov
mov
jno
or
sub
ret
sahf
vcvttpd2dqy
adc
push
or
cmp
xchg
cmp
mov
cmp
outsb
std
scas
push
fstpt
outsb
jb
xor
push
arpl
mov
adc
sbb
fisttpl
dec
xchg
push
aaa
movsl
jno
jecxz
adc
push
shll
mov
xchg
in
rolb
mov
and
inc
push
dec
pop
xor
push
mov
push
sti
inc
cld
lahf
daa
fiaddl
mov
cli
ja
stos
daa
mov
jmp
test
test
arpl
mov
inc
jbe
mov
daa
test
test
and
in
mov
push
mov
icebp
mov
xchg
lds
jmp
mov
popa
sahf
pop
addr16
dec
adc
fistpll
or
mov
shrl
shll
mov
sbb
pushf
jge
stos
test
pop
mov
jp
cli
sub
incl
pushl
lret
lods
cmp
outsl
or
push
add
sbb
sub
jns
lret
sub
cmp
add
jle
inc
leave
xchg
inc
lds
xor
or
jae
sbb
add
add
mov
in
dec
cmp
js
mov
add
add
add
adc
lcall
mov
push
add
mov
mov
into
jle
mov
xorb
mov
ja
test
in
aam
movsb
adc
je
add
sbb
mov
ret
je
dec
and
cmp
lods
aad
adc
fistpl
aas
dec
xor
cmc
arpl
clc
repnz
out
popf
sbb
lret
cmpl
sub
add
sub
inc
imull
mov
lret
push
jmp
sbb
pop
xchg
aaa
sub
xchg
and
dec
sub
clc
push
stc
cwtl
aad
xchg
in
stos
lret
int
jl
push
nop
pop
insb
mov
les
scas
or
jmp
sbb
mov
cmp
xchg
mov
ja
int3
cmc
cmp
and
or
stos
into
push
lret
cmp
sub
fidivrs
cwtl
add
fwait
dec
and
push
ljmp
iret
test
fisubrs
inc
sbb
ja
and
mov
cltd
jb
sbb
sub
test
pop
rep
data16
sub
hlt
test
fcoms
sbb
arpl
sbb
dec
lahf
pop
test
cmpsb
adc
cli
mov
mov
dec
mov
xchg
sbb
dec
mov
in
dec
test
add
repnz
mov
mov
addl
xchg
in
cmpsb
and
popf
sub
jl
ljmp
pop
xchg
aaa
mov
popf
sahf
movsb
mov
jmp
cwtl
mov
sahf
hlt
ja
std
mov
and
repnz
pop
mov
psubw
lock
lock
movsl
test
gs
and
ret
adc
dec
lds
ljmp
leave
mov
fmuls
xor
xor
sbb
push
push
and
popa
dec
icebp
outsl
paddw
inc
dec
shrb
sbb
out
add
stos
jo
dec
cli
fldcw
xor
rolb
add
add
add
ret
lret
movsb
ljmp
stos
adc
xor
add
sub
scas
cmc
aaa
jg
fucomi
aad
fldt
data16
adc
push
xchg
cmp
test
xchg
insb
or
add
sti
adc
mov
xor
dec
and
mov
jmp
jle
add
inc
cli
pushf
ds
out
mov
mov
stc
cli
jb
rcpps
loop
mov
pop
add
insb
xchg
mov
test
movsl
push
out
movl
sub
fmul
lret
cwtl
inc
add
int3
jae
test
sbb
in
sbb
inc
lock
xchg
loop
adc
inc
jnp
rorb
or
lret
mov
add
xchg
dec
hlt
mov
test
call
enter
cmp
test
sar
pushf
push
cmpsl
cmp
xchg
test
jne
test
test
lahf
jnp
push
mov
ljmp
iret
xlat
shl
arpl
shlb
ret
bound
js
iret
mov
aaa
cmp
sbb
xor
loopne
mov
push
test
cmp
out
and
es
aam
scas
jne
cmp
stos
insb
jg
ret
cli
sbb
call
rolb
push
adc
lock
jmp
aam
cmp
xchg
movsl
js
jg
inc
repnz
jecxz
xchg
mov
ret
nop
mov
mov
loopne
xchg
xchg
add
mov
push
push
and
fwait
mov
mov
dec
pop
sub
mov
pop
ja
dec
decl
shlb
std
add
test
lock
stos
add
into
sbb
xchg
lret
ss
das
testl
ftst
inc
cmp
out
pop
lret
lcall
lret
push
fwait
mov
dec
xchg
pop
xchg
je
xor
add
add
jbe
lea
into
movl
and
cmp
lcall
add
xor
mov
cmp
enter
sub
out
push
xchg
dec
push
lcall
or
fnstcw
cs
lock
xchg
push
ffreep
lods
inc
cmp
out
and
idiv
pop
mov
mov
sbb
arpl
push
call
mov
mov
xor
testb
mov
pop
repz
adc
insl
subb
or
or
out
andb
jns
fdivl
test
inc
test
adc
sbbl
pop
mov
sub
inc
pop
and
xor
sbb
jmp
push
sbb
test
imul
cli
jge
popf
ds
testb
cmp
sub
clc
dec
adc
push
imul
mov
daa
xchg
pushf
js
or
repnz
mov
aam
sbb
stos
fwait
push
lds
test
mov
mov
fdivs
pop
xchg
scas
subb
xor
fcompl
jle
into
cs
je
sbb
mov
add
lock
lods
push
imul
test
xor
fnsave
call
inc
xchg
hlt
adc
jnp
lds
cmc
andl
movsl
or
jge
xchg
js
fnstenv
insl
fcoms
or
test
hlt
mov
inc
and
push
js
leave
add
out
fsts
shr
into
or
jmp
dec
in
adc
cli
out
pop
daa
mov
xbegin
push
icebp
shll
or
dec
mov
sub
sub
stos
call
add
add
add
pushf
adc
push
mov
sub
iret
js
leave
mov
mov
fucom
adc
xchg
cmc
jns
ds
push
cmp
pushf
push
cmpsl
inc
xor
mov
test
dec
push
shrb
inc
cwtl
ror
pop
aad
jo
sti
and
orl
ficompl
dec
xchg
adc
mov
cmp
jmp
je
andl
jb
push
mov
imul
xchg
mov
enter
jo
daa
inc
out
shlb
xchg
mov
stc
cmp
cmp
aam
out
push
in
or
movsl
ret
sar
test
pop
sbb
jns
inc
rorl
mov
mov
sub
arpl
and
cmpsl
or
ja
and
nop
lret
shlb
mov
fs
fs
pop
leave
and
fnstenv
loop
sub
fs
jecxz
aas
xchg
jne
test
ret
iret
and
in
fs
scas
pop
lods
or
xchg
scas
cli
jno
in
or
push
pusha
int3
repnz
mov
mov
cmp
adc
or
sbb
loop
addr16
iret
imul
scas
cmp
cli
dec
cmp
movsb
insl
mov
jl
jbe
mov
xor
fnsave
enter
fbld
sbb
sub
lods
sub
jbe
add
adc
outsb
mov
lea
jae
dec
shll
pop
xchg
iret
fs
dec
lcall
mov
jge
sti
scas
int
lods
fnstcw
sub
addr16
ret
fistpll
adc
dec
mov
pusha
dec
push
movsb
fwait
push
inc
add
add
and
dec
repz
fldt
loop
sbb
xchg
add
std
add
add
insl
test
lock
sbb
sbb
add
and
sti
mov
inc
xchg
xchg
dec
imul
loop
cmp
pop
xor
loopne
movsb
sub
and
xchg
leave
xorl
outsb
sbb
push
daa
push
leave
imul
dec
xchg
lods
or
xor
jns
pushf
jp
mov
cmp
insl
cmp
lret
test
adcb
or
xchg
xchg
jp
dec
rorb
je
aas
loop
adc
push
push
imul
inc
mov
and
pop
in
cli
rorb
movsb
sub
mov
jnp
jp
push
inc
push
gs
dec
push
xchg
fadds
sbb
jle
pop
mov
jo
pop
xchg
push
cmp
mov
or
cmp
jp
jne
dec
xlat
in
cld
adc
cmc
cli
lret
bound
fsubs
fidivl
enter
mov
les
aaa
add
jmp
jae
out
fdivs
sti
mov
or
sahf
in
add
add
dec
jg
jno
lret
and
ss
push
xchg
push
adc
movsb
repnz
mov
cmp
xchg
push
xchg
fisubrl
xchg
mov
inc
mov
fldenv
jg
enter
stos
adc
pop
int
xor
call
in
lods
das
loope
data16
enter
std
jg
imull
mov
dec
fsubs
mov
and
pop
xor
fnstsw
inc
es
pop
mov
test
fisttps
jo
cmp
movsl
push
xchg
inc
sub
inc
mov
aaa
test
mov
push
push
in
in
insb
jb
lret
add
test
shl
dec
pusha
ss
lods
push
inc
mov
sbb
sarb
add
add
add
lcall
jnp
push
mov
push
je
sbb
add
outsl
testb
dec
xchg
pop
jae
pop
clc
jmp
mov
mov
dec
test
pop
jmp
not
out
loop
cmp
cs
and
and
test
jns
pop
mov
sbb
push
jbe
adc
cld
pop
ja
pop
mov
nop
out
jge
notb
mov
sbb
and
jnp
repz
push
mov
mov
mov
call
test
and
adc
sti
cwtl
aam
scas
add
mov
orb
jo
and
test
aam
out
pop
pop
push
sbb
push
xchg
out
dec
jl
pop
pop
leave
daa
addb
jp
add
ljmp
mov
leave
dec
mov
xchg
fs
pop
stc
nop
lahf
sbb
cltd
push
push
pushf
test
xchg
and
xchg
cmp
rol
inc
pop
pop
sbb
adc
xchg
and
rcr
pop
dec
test
sub
pop
ds
inc
aas
mov
xor
jmp
lock
cmp
push
jp
mov
pop
test
mov
sub
loop
sub
mov
insl
in
leave
inc
lods
cmpsb
dec
orl
jp
pop
mov
aas
or
cmp
lahf
jnp
pop
or
inc
sbb
lods
jl
dec
bound
in
pop
push
push
and
xor
inc
mov
mov
sarl
repnz
lock
jge
pop
scas
inc
adc
xor
loop
fcmovbe
xchg
test
xchg
hlt
in
or
pop
push
insb
sub
paddd
in
mov
hlt
lea
jmp
dec
stos
xchg
scas
mov
push
add
xorl
pop
testb
push
mov
lock
mov
ud1
inc
push
push
push
mov
ja
and
push
pushf
add
add
idivl
jg
cmpsl
dec
aas
sbb
add
fildl
jns
sbb
sbb
lret
add
xchg
cmpl
xchg
int3
sub
jnp
ja
ficompl
mov
xsaveopt
addb
sbb
mov
fimull
loopne
movsl
adc
data16
mov
dec
out
mov
or
stos
std
cmp
aam
cs
sub
ret
sbb
out
sarl
pop
sub
stc
sub
out
nop
inc
mov
out
leave
cmpsl
es
int
ror
jno
bound
hlt
sti
addr16
lea
nop
mov
mov
cltd
mov
into
imul
xchg
test
icebp
test
adc
in
loop
mov
fists
sbb
jnp
dec
dec
cmp
ss
mov
jp
and
dec
repz
scas
faddl
pop
jmp
rolb
out
jp
cmpsb
jl
sysenter
loope
out
mov
push
repnz
std
mov
or
ja
and
mov
mov
out
in
sbb
dec
mov
mov
sbb
and
sarl
aaa
push
lea
adc
leave
or
repnz
stos
lcall
add
adc
inc
sub
imul
dec
mov
jg
aad
push
and
cltd
sub
mov
xor
fisubrs
sbbl
andb
pop
push
pop
add
jae
xchg
daa
mov
sbb
pop
mov
xor
lret
jg
pop
js
rcll
push
stos
ret
pusha
mov
aam
call
fiadds
jb
jecxz
jne
fidivrl
adc
or
and
mov
sbb
mov
jl
cltd
lret
fisubs
mov
stos
clc
mov
and
imul
mov
add
mov
call
mov
les
add
std
add
add
mov
inc
push
int
shll
shl
data16
sbb
mov
fisttpl
fmuls
fisubs
popa
movsb
pop
inc
out
outsl
lcall
dec
mov
roll
mov
and
call
orb
inc
insl
inc
sti
in
xor
cltd
lea
mov
ljmp
outsl
and
xchg
rep
and
cltd
cmp
mov
imul
loopne
push
outsb
jae
pop
fdivrl
in
and
aaa
aam
cmp
add
lods
daa
call
sarb
jle
xor
outsl
frstor
jne
adc
inc
jg
mov
movsl
icebp
in
hlt
cld
push
xchg
jle
xor
js
cltd
in
and
hlt
push
iret
jae
sub
add
loop
pusha
rcrb
and
cmp
xchg
imul
push
cmpsl
aam
push
arpl
jbe
and
push
jns
adc
mov
adc
mov
ret
andl
aad
push
in
xchg
push
and
ljmp
daa
rcr
out
xchg
popa
adc
dec
push
xchg
out
int
push
in
loope
cli
rcl
mov
and
insl
mov
add
sub
je
int3
cld
out
push
rolb
push
test
es
fwait
mov
xchg
xor
jnp
add
pop
inc
sahf
cmp
into
shr
test
pop
cmp
dec
sbb
insb
out
add
cmp
sbb
push
fstpt
mov
cmc
lea
jae
mov
je
lret
adc
lcall
out
add
dec
inc
icebp
mov
mov
pusha
mov
out
in
xor
lods
dec
aas
pop
and
and
jp
inc
mov
push
pusha
xchg
test
shrl
add
add
ficompl
mov
jg
jnp
add
std
add
add
xchg
cmp
pop
dec
cli
pop
mov
jno
popa
dec
adc
fdivr
test
xor
dec
sbb
push
jl
iret
adc
cmp
push
dec
test
js
jae
jae
outsl
pop
sub
jo
mov
and
xchg
dec
pop
adc
mov
js
push
push
xor
xor
push
xorl
jg
es
insb
sbb
cmpsl
fwait
cmp
lahf
jbe
addr16
mov
pop
pop
xor
adc
out
and
hlt
lds
jno
mov
cld
jp
mov
mov
adc
push
xor
mov
mov
movsl
je
data16
jmp
es
mov
mov
or
pop
pop
out
sbb
iret
popf
ret
popa
sbb
push
dec
jg
dec
add
push
scas
popf
cmp
or
pushl
test
push
jbe
inc
pop
adc
movsl
or
mov
loope
mov
add
xchg
in
push
cmpb
adc
jl
adc
daa
cli
arpl
xor
rdtsc
inc
rclb
fwait
sti
inc
mov
lock
addr16
scas
mov
pop
sbb
test
xchg
popa
sbb
fdivl
sbb
push
sub
popf
decl
mov
arpl
mov
shr
cwtl
xlat
jmp
out
add
fisttpl
and
mov
adc
int3
jo
mov
mov
lahf
sbb
or
and
cmp
xor
adc
add
mov
scas
xchg
jo
xor
repz
aad
add
jb
mov
pop
out
and
adc
add
es
or
mov
mov
mov
test
mov
das
lock
fisubrl
gs
xor
add
push
pop
bound
mov
inc
stos
pop
sbb
cli
inc
cli
mov
pop
sarb
add
std
add
add
cwtl
sbb
mov
or
inc
jo
in
test
lcall
xchg
aas
mov
adc
inc
or
push
enter
clc
adcl
mov
or
push
sbb
inc
mov
push
notrack
cmpsl
sbb
xorl
cmp
pusha
and
leave
mov
inc
ror
gs
aas
dec
mov
jne
cmp
jb
sahf
shrb
lcall
adc
mov
jo
add
sti
pusha
cli
xchg
lahf
jo
jae
mov
cwtl
push
adc
in
xor
cmp
sbb
nop
lds
mov
mov
lcall
dec
in
addr16
add
rcrl
pop
mov
iret
push
push
bound
daa
pop
aad
mov
pushf
pushf
ret
xor
popf
jecxz
push
pop
pop
jge
sarl
psubusb
cmp
add
inc
pusha
pop
notl
mov
xor
sub
mov
addr16
push
enter
inc
xchg
into
cli
and
dec
pop
xchg
pop
mov
frndint
dec
dec
into
test
pop
in
addr16
in
idiv
jle
inc
push
lods
or
inc
jo
in
maskmovq
negl
in
mov
add
xchg
and
rcll
mov
rcrb
test
mov
pusha
ror
and
dec
cmp
lea
mov
inc
add
mov
ds
repnz
jmp
scas
lcall
dec
jmp
out
or
mov
mov
push
aas
mov
push
push
fdivrl
add
popa
pop
inc
sarl
call
mov
push
pop
xor
icebp
dec
mov
leave
adc
cmp
mov
repnz
mov
add
add
ja
out
push
lahf
pop
arpl
jne
add
std
add
add
push
ja
fists
sbb
arpl
je
or
pop
mov
pop
sub
fwait
rclb
clc
sbb
loop
mov
dec
fstl
jb
mov
adc
out
mov
addb
popf
mov
sub
mov
jmp
bound
mov
rcrl
repnz
icebp
sub
inc
fs
cmp
xor
sub
shl
inc
stos
pushf
mov
add
xchg
sbb
xor
adc
ret
mov
repz
mov
fs
aas
jb
pop
sti
xor
jmp
xchg
xor
dec
mov
xchg
mov
push
int
ljmp
ljmp
test
add
fists
pop
cmp
sub
inc
jl
xor
pop
lods
stos
test
subl
sbb
mov
cld
pusha
mov
mov
lahf
push
rcrb
sahf
nop
out
jnp
popa
inc
sahf
arpl
shr
sahf
mov
or
xlat
xor
lods
das
jno
popa
nop
cld
out
or
pushf
scas
sbb
mov
push
outsl
in
push
subl
pusha
jnp
lcall
lods
mov
scas
mov
pusha
cmp
sbb
fildll
pop
fdivrp
ret
xchg
leave
cmp
scas
enter
mov
jno
sub
je
pop
icebp
adc
jbe
cmpsb
xchg
test
out
mov
pop
sbb
out
xchg
fnstenv
push
pop
jo
cwtl
loop
xchg
xchg
adc
in
test
insl
out
mov
pusha
mov
loope
std
ficompl
pop
sbb
add
jbe
inc
pop
lods
nop
clc
push
mov
loopne
fidivrs
mov
add
insl
out
xchg
pop
xchg
add
add
rcll
jmp
jnp
add
out
add
add
add
call
xchg
jo
xchg
dec
loopne
loope
jle
loope
xchg
mov
dec
jbe
ds
add
cmp
int
lret
cld
mov
hlt
adc
addl
mov
sub
pop
dec
xchg
test
js
and
loopne
adc
mov
adc
mov
inc
call
mov
cmp
popa
in
sub
pop
mov
repnz
xor
repnz
stos
pop
cmp
sub
lret
sbb
movl
insb
orl
ljmp
inc
pushf
notl
fwait
push
cmc
xchg
cmp
pop
sbb
mov
fbld
sbb
xchg
xor
outsl
pop
inc
cmp
and
push
mov
jno
xchg
js
in
loopne
add
decl
scas
sub
pusha
mov
push
cmp
sub
jl
jmp
aam
inc
repnz
ret
sti
movsl
dec
arpl
shll
ds
lods
cmp
into
shlb
mov
pop
jae
inc
push
pop
gs
push
mov
cwtl
shrl
mov
xchg
lret
popa
mov
inc
mov
cli
cltd
dec
ds
cwtl
loope
and
mov
push
hlt
adc
data16
mov
pop
or
fcoml
pop
and
xchg
icebp
xor
sub
inc
push
je
mov
jb
sbb
mov
repz
dec
test
jle
loope
ljmp
ds
loope
xorl
push
out
push
psrlw
or
pop
ret
arpl
cmp
arpl
inc
cmp
jecxz
aaa
adc
loop
aaa
xchg
push
bound
cmpl
push
cmpsb
sbb
pop
cmp
rorl
into
jp
xor
stos
add
add
negb
mov
xor
add
add
add
addr16
movsb
aas
add
pop
movsb
outsl
add
and
or
xor
xor
movups
add
mov
mov
call
jl
inc
cs
pop
xchg
popa
pop
stos
fmull
int3
ret
xlat
and
mov
inc
mov
pop
test
hlt
cmp
js
pusha
lahf
int
outsb
pusha
inc
cmpsb
xchg
adc
outsb
jecxz
ret
sbb
icebp
mov
jns
arpl
lcall
xor
jg
cmpsl
out
bound
sbb
ss
add
dec
ss
mov
xlat
mov
insb
movq
test
xor
orb
call
or
cmpsl
adc
test
in
inc
fs
sbb
mov
add
lret
xchg
mov
movsl
scas
imul
imul
and
push
negb
addr16
fnstenv
pop
lret
sarl
stos
mov
and
sbb
jnp
inc
mov
mov
xor
inc
lock
lea
es
ret
mov
test
add
xchg
fwait
or
repz
lods
enter
sbbb
add
pop
adc
cld
mov
into
iret
dec
in
out
push
andl
and
mov
sub
mov
bound
jp
data16
fidivl
mov
pushl
xchg
sub
xchg
sbb
mov
mov
and
stos
iret
lahf
xor
jecxz
stos
pop
fwait
inc
add
xor
sahf
pop
xchg
dec
jl
fistpll
jno
mov
or
in
sub
push
movsb
xchg
js
adc
test
jae
sahf
push
jne
mov
in
jb
sbb
push
push
lods
jle
fldt
popa
jg
add
push
push
jnp
outsl
jno
dec
jl
jnp
insb
ljmp
xchg
mov
int3
insl
mov
inc
or
inc
mov
push
jge
mov
daa
sbb
adc
and
jle
inc
bnd
movsb
js
or
and
imul
icebp
enter
sarl
mov
fisubrs
clc
outsb
push
mov
add
shrb
movsl
out
popa
or
dec
stos
and
jno
dec
fwait
cwtl
inc
repnz
shr
dec
fbld
cmpsl
pop
mov
xor
cs
ss
scas
outsl
add
or
dec
pop
rcll
cld
repz
imull
mov
sbb
fs
cmp
jmp
adc
in
or
out
push
aaa
aam
cld
sahf
inc
pop
cwtl
push
jo
add
mov
cmp
cmp
inc
out
lock
inc
loop
mov
cs
outsb
xor
and
mov
dec
jno
sbb
mov
add
inc
fsubs
jl
mov
scas
jae
call
add
popf
into
sarb
inc
mov
loop
test
and
stc
pop
repnz
mov
invd
adc
sub
lcall
push
dec
push
in
jle
call
enter
or
enter
xchg
dec
cmpsb
and
sahf
outsl
sahf
push
cmp
pop
in
push
insb
cmp
nop
inc
add
dec
adc
ljmp
mov
lods
shll
test
into
lcall
and
scas
add
addb
or
loopne
das
xor
popf
lods
icebp
mov
dec
dec
addl
fs
fwait
int
mov
outsb
sbb
sub
dec
cmp
mov
stos
jle
push
adc
push
fistl
stos
and
out
ljmp
add
cltd
enter
mov
stc
popf
enter
imul
add
jecxz
cmpsl
pop
sete
out
test
test
cmp
enter
adc
btr
test
or
xor
scas
xchg
mov
hlt
leave
jno
sbb
cmp
dec
loope
cmp
shlb
mov
xchg
mov
pop
cld
ds
scas
int3
notl
jmp
mov
call
mov
mov
jne
mov
sahf
fdivrs
push
sahf
sbb
aam
lock
or
mov
push
jns
cmp
ds
pop
shl
cmpsl
cmp
lods
dec
cli
push
cmp
adc
push
mov
jno
or
cli
pop
xchg
add
lcall
sbb
sbb
fildll
loopne
subb
xor
sub
jl
ds
xor
cmp
in
sbb
icebp
pushf
repnz
push
jp
dec
addb
and
pop
pop
push
clc
jmp
jns
mov
int
add
inc
cmpsl
push
repz
dec
ss
insb
cmpsl
and
std
loope
or
push
mov
xor
push
xor
jle
fstp
ret
inc
mov
dec
pop
mov
repz
pop
mull
addl
jl
daa
imul
repz
pop
mov
loope
sub
inc
cmp
in
mov
ds
scas
push
jle
loop
ljmp
mov
lahf
mov
adc
jns
in
fld1
ficompl
andb
xlat
mov
jno
sbb
loop
xor
add
cmp
cltd
cmp
add
xchg
ficoml
push
sahf
jbe
repnz
sti
movsb
scas
movsb
cmpsb
and
inc
push
add
shll
pop
in
je
add
mov
jmp
imul
shrb
sti
xchg
and
das
hlt
push
mov
imul
add
add
add
sbb
jge
and
dec
cli
or
add
add
add
fimull
jmp
mov
sahf
ficomps
pop
mov
fs
shlb
orb
xchg
cli
in
mov
mov
jne
mov
push
add
mov
out
out
xor
sahf
xchg
leave
in
mov
popf
das
pop
rorl
pusha
cmc
loopne
incl
cmp
pushf
xor
test
push
sub
aad
add
pop
lds
fldln2
add
and
xor
and
cld
add
mov
pop
jbe
leave
pop
push
sbb
jge
push
pusha
movsb
mov
mov
je
inc
lret
call
push
push
sbb
mov
pop
ja
add
jmp
jb
push
addb
push
in
push
sbb
inc
icebp
and
out
xchg
dec
ja
in
adc
inc
ja
sbb
dec
sbb
aaa
fnstenv
jno
inc
lret
cmp
inc
xchg
bswap
loope
mov
dec
sub
push
jl
mov
fs
test
in
fimuls
pop
jmp
mov
cmp
mov
cmp
sub
inc
adc
mov
cmc
inc
xlat
adc
push
std
xchg
sub
aam
add
clc
mov
add
xchg
loop
xor
xor
cmp
out
pushf
fwait
imul
sbb
mov
push
cli
mov
push
sbb
icebp
push
sti
cli
out
or
jmp
ret
popf
or
iret
pop
xchg
cmc
shlb
cmc
cmp
push
sarl
out
add
ja
ja
lret
inc
es
aam
jecxz
jo
jle
push
adc
scas
shlb
cmp
mov
in
pusha
cmpsb
push
loop
mov
pop
movsb
cwtl
addl
add
roll
pop
arpl
arpl
lock
std
add
add
sub
cmp
maskmovq
negl
std
int
mov
stc
test
lds
jnp
jns
icebp
cmp
ds
mov
es
push
jno
sbb
int3
cltd
fidivrs
mov
int3
out
fistl
scas
cmp
cwtl
aas
jnp
push
adc
jg
lock
stos
mov
out
add
mov
in
sbb
jmp
iret
mov
push
mov
ljmp
xor
and
es
jecxz
mov
xor
and
ljmp
int
cmp
idivb
pop
aad
sub
ja
fidivrl
out
lcall
out
iret
cs
or
leave
mov
outsl
add
das
or
fisttps
sbbb
jmp
push
lods
cmp
inc
call
xchg
or
cs
idivb
push
push
repz
mov
test
scas
out
lret
cltd
fldl
lock
push
sub
jmp
daa
lds
int3
mov
xchg
stc
fnstenv
cmp
adc
loop
stos
dec
mov
xlat
jne
sub
clc
push
stos
hlt
mov
cli
xchg
dec
bound
cli
call
xchg
addb
jbe
aad
push
icebp
lret
fmuls
lcall
xor
add
jmp
clc
pop
fwait
test
fsts
test
cmpsl
add
shll
mov
pusha
add
xchg
push
outsb
pushf
ror
fisubl
fstl
xorl
stos
movsl
cmp
dec
ret
mov
jae
ret
test
add
loope
jl
fsubs
add
pop
pop
ret
repz
inc
xchg
cld
mov
mov
jne
pop
flds
mov
add
add
add
add
sbb
pushf
cli
mov
xchg
out
cltd
mov
xor
pusha
repnz
std
add
add
dec
jge
dec
sub
in
jno
ret
rorb
lods
and
inc
rolb
rorl
jmp
out
rorb
enter
add
xchg
and
in
dec
or
push
inc
daa
jo
stos
outsb
lret
dec
xor
pop
rcll
jbe
rolb
inc
daa
xchg
lods
mov
pop
sub
fdivrs
stos
std
sbb
add
push
xorl
adc
xor
add
sbb
fwait
es
jne
jbe
mov
adc
cmpsl
push
lods
mov
xchg
lds
adc
ffreep
subb
pop
fidivs
mov
mov
imul
mov
inc
cmp
jmp
stc
xor
lods
in
lahf
adc
ljmp
push
pop
arpl
loope
frstor
testl
mov
pop
mov
imul
aam
jo
jl
rolb
add
sbb
mov
pop
sub
pop
mov
fwait
test
jne
mov
aas
push
jmp
adc
out
testb
idivb
mov
xchg
lods
sub
in
xor
jmp
fidivs
push
mov
scas
sub
push
mov
ret
sbb
sub
mov
fs
xlat
xchg
or
xchg
nop
outsb
xor
pop
inc
lret
les
clc
pop
ret
lock
imul
in
xor
push
mov
stos
inc
movsl
cmp
test
aaa
scas
and
xor
hlt
jno
pop
push
mov
adc
jp
lret
pop
mov
fdivp
ljmp
out
mov
mov
xchg
or
add
add
fisubl
and
fcoms
add
add
add
and
pusha
inc
pop
ficoml
pop
into
and
or
pop
sbb
lods
mov
jecxz
mov
int3
psrad
dec
xlat
cmpsb
daa
mov
lea
dec
das
scas
and
rcrb
sub
int
int
imul
mov
cmpsb
push
inc
sbb
sbb
jnp
cmp
aaa
pop
mov
adc
call
testl
fnstcw
ljmp
mov
dec
inc
imul
scas
sbb
call
decb
in
jnp
stos
or
mov
outsl
je
dec
cltd
fmull
ret
scas
pop
aas
aam
inc
and
jle
push
lcall
les
dec
and
or
mov
repnz
fs
imul
jle
xchg
pop
aam
negb
idivl
sahf
test
push
mov
repz
popa
scas
or
cmpsb
cwtl
es
movsl
mov
call
imul
sub
fadd
repz
js
mov
movsl
pop
loopne
pop
push
sub
mov
add
pop
mov
sti
repz
pop
cmp
mov
and
scas
repz
in
pop
into
mov
inc
push
and
fmuls
xor
addb
sub
push
pusha
arpl
xchg
sahf
cmovno
add
mov
and
ja
enter
lea
mov
and
mov
jecxz
cwtl
mov
into
out
jp
dec
mov
mov
lods
xchg
enter
xor
gs
clc
int
pop
sub
and
stc
fcomip
lods
jae
repnz
mov
lods
stc
lret
lcall
dec
mov
inc
je
aad
test
sub
jns
xlat
loop
mov
movl
add
add
nop
stos
es
aas
iret
cmc
sti
pushf
and
push
roll
pop
testb
std
add
add
sti
xchg
ret
push
cmpsb
mov
inc
leave
nop
test
aad
pop
xchg
dec
into
xchg
mov
fucomip
push
cmpsl
pop
repnz
cmp
outsl
mov
push
arpl
sbb
ljmp
hlt
fnstcw
dec
jb
daa
dec
cltd
cmp
scas
mov
gs
icebp
cmp
lods
lahf
xor
jl
jns
pop
ss
movsl
cld
aaa
pop
add
arpl
scas
decb
fmull
loop
cwtl
adc
outsb
flds
push
sub
jecxz
enter
jg
and
cld
decb
xchg
push
mov
xchg
in
in
sub
sub
repz
inc
lahf
mov
sub
lds
inc
sbb
pop
adc
lahf
push
es
int3
mov
mov
mov
ret
popf
cmpsb
jb
pop
sbbl
std
cmp
and
movsl
xchg
mov
xor
fnstcw
popf
dec
fistpll
inc
rol
dec
nop
fdivl
pop
sub
gs
pop
jb
imulb
jle
dec
xchg
pop
shrl
sbb
xlat
add
bound
test
stos
lods
fidivl
adc
bound
mov
pushf
mov
in
ds
test
mov
shlb
add
shll
xor
ffree
jl
sar
lods
ret
rol
cmpsl
cmp
cmc
addr16
cs
rolb
out
lods
in
cs
lea
fsubrs
dec
inc
push
stos
movsb
lcall
mov
mov
fimuls
repnz
sub
test
or
add
in
and
jns
mov
push
outsb
jne
jmp
out
and
cmp
leave
mov
mov
push
and
jb
cmp
xchg
icebp
inc
popf
outsl
fsubrs
lea
pop
push
xchg
pop
xor
xchg
std
ss
adc
or
add
std
cmp
stc
jl
stc
jne
pushf
dec
loopne
clc
add
out
add
add
pop
mov
fimull
and
mov
adc
ds
std
sbb
inc
pop
jno
sar
jb
test
in
loop
repnz
inc
out
outsb
sub
fnstenv
sub
mov
daa
adc
sub
mov
hlt
mov
jl
mov
add
and
sbb
dec
mov
push
cwtl
cmpsb
pop
push
lds
and
fiadds
or
sbb
xchg
ficoms
cmp
mov
xor
push
or
jl
xchg
jecxz
dec
inc
mov
mov
inc
mov
aas
dec
mov
pop
arpl
leave
sahf
loopew
shr
frstor
pushf
jle
pop
scas
adc
stc
mov
push
mov
je
lcall
push
pop
addb
jle
pop
rcr
sti
popa
dec
lahf
lcall
mov
jae
inc
adc
push
cmpsb
pop
je
jb
sar
push
stos
lds
add
addr16
and
mov
movl
mov
xor
std
adc
sub
loope
jnp
imul
push
or
mov
adcb
pop
adc
aas
push
and
xor
aam
addr16
mov
mov
arpl
adc
int
cli
or
sub
cmc
aam
stos
mov
or
add
ss
ss
pop
in
fistl
lcall
xchg
daa
int3
lret
push
shlb
movsb
inc
test
jge
jmp
mov
movntq
out
insb
adc
jb
sti
mov
popa
icebp
cmp
mov
or
ret
mov
test
sahf
inc
dec
mov
