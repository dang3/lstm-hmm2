push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
inc
in
jle
jle
xorb
into
xor
xor
ja
or
lds
cmp
int3
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
xor
sti
sbb
dec
xchg
mov
rolb
fstpl
js
mov
aaa
sbb
test
adc
push
cltd
incl
insb
dec
jns
mov
jl
mov
add
and
rolb
and
sbb
mov
scas
cmp
cmp
dec
repnz
pop
shl
insl
push
sbb
jge
push
fstpt
push
test
ja
adc
pusha
sub
imul
jne
xchg
jmp
aad
shlb
and
pop
divl
xor
jecxz
cwtl
jp
popf
jp
lcall
and
adc
jl
xor
and
mov
mov
xchg
into
inc
imul
rcrl
pop
andl
xchg
lods
in
jns
adc
lret
push
rclb
add
lret
imul
adc
out
sub
clc
cmc
shlb
cmpsl
mov
lock
fwait
cli
scas
cmp
in
insl
daa
xchg
or
mov
mov
xchg
cmp
cmpsl
enter
in
test
shlb
push
inc
mov
mov
push
dec
jns
mov
movsl
rcrb
push
push
leave
and
ror
fidivl
inc
subb
and
das
push
lds
and
hlt
es
mov
add
sub
cli
pop
sub
in
xchg
pop
fwait
sub
das
mov
jns
paddd
mov
lea
mov
mov
pop
jle
cmp
inc
ret
test
dec
add
sbb
xchg
movsb
dec
or
sbb
cmp
lret
sbb
sub
and
jecxz
xchg
mov
adc
dec
push
mov
dec
dec
mov
and
sub
push
shll
and
dec
or
in
push
sbb
push
jmp
add
das
jecxz
inc
cmpsl
push
mov
xchg
movsb
jo
sub
ficoml
les
dec
orb
test
mov
mov
lret
ss
mov
out
idivl
or
xchg
cs
daa
in
cmp
lret
aam
cld
aaa
test
fcmovu
pop
dec
cmpb
pop
pop
add
pop
imul
js
mov
lods
stos
push
pop
inc
jb
jp
in
faddp
and
cmpsl
sub
push
inc
pop
iret
cmp
push
out
data16
mov
stc
ficoms
sbb
add
xchg
pop
lock
shl
loopne
dec
call
dec
imul
clc
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
xchg
aam
xorb
xorb
sub
push
into
outsl
mov
cltd
in
jl
sub
popf
mov
pop
imul
ret
cld
lods
stc
daa
and
loopne
push
int
hlt
sbbb
sub
mov
fcoms
mov
cmp
sbbb
cmp
mov
xchg
mov
mov
test
and
into
hlt
push
in
or
addr16
enter
sbb
cmp
push
enter
aaa
mov
arpl
add
cmp
inc
add
aam
push
imul
dec
push
lcall
pusha
imul
enter
popa
popf
int
pop
adc
dec
repnz
mov
and
psubusb
pop
cmp
popf
cwtl
imul
xchg
add
lcall
push
push
adc
sbb
add
adc
aad
mov
sub
and
popl
test
jbe
mov
scas
or
stos
fcoms
mov
mov
mov
xchg
xlat
faddl
stos
stos
or
mov
add
add
call
push
cmpsl
mov
in
jmp
subb
in
xor
push
mov
sbb
outsl
adc
pop
js
pop
xlat
xor
scas
pop
pop
cmp
pop
xchg
and
repz
test
mov
pop
imul
sti
cld
jae
dec
xor
push
insl
negl
jne
or
popa
add
loope
pop
and
repnz
scas
repz
dec
out
test
test
sub
mov
xor
pop
jg
or
fisttps
call
cmpsb
jge
dec
push
xor
pop
jmp
imul
popf
shrl
and
mulb
mov
adc
pop
mov
fcomps
ss
addl
xchg
pop
movsb
test
std
fsubl
xchg
mov
ja
sub
mov
out
jbe
mov
mov
xor
std
sbbb
push
icebp
pop
sbb
xchg
mov
jb
inc
add
xchg
shrl
mov
push
enter
add
orl
incb
leave
and
pop
ficoms
mov
js
fs
fwait
jmp
cmp
push
pop
add
dec
scas
and
xchg
inc
hlt
pushf
aam
cmc
shl
mull
xchg
push
mov
xchg
add
push
push
xor
inc
inc
shrl
subl
out
ja
cmp
pop
divl
and
xchg
mov
sub
xorl
pop
sahf
daa
inc
popf
popf
jg
cltd
icebp
rcl
or
mov
fwait
ljmp
cmp
stc
or
test
mov
add
mov
push
and
or
pop
frstor
mov
mov
mov
jae
or
mov
xor
repnz
sti
sarb
cmc
mov
inc
jmp
mov
cmp
popf
ret
xchg
xor
add
sti
push
adc
hlt
mov
arpl
in
aad
and
xchg
push
mov
adc
cmp
mov
negl
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
cmpsb
incb
jle
jno
jle
mov
je
mov
sbb
xchg
shrl
push
imul
push
adc
in
xchg
repz
cmp
stos
inc
pop
mov
call
dec
lods
dec
cmp
xlat
subl
jb
jno
in
sbb
ret
sub
add
mov
xchg
sbb
adc
or
movsb
int3
neg
lret
popf
cli
in
sbb
dec
sub
scas
mov
bound
loopne
jae
pop
push
jl
adc
cltd
loope
lcall
cwtl
stos
in
testb
inc
mov
pusha
mov
xchg
jo
roll
mov
mov
and
sub
sub
and
loope
out
push
jne
mov
push
pop
cmpsb
sbb
adc
das
out
and
dec
cwtl
or
sub
push
sub
and
out
cmp
loop
push
push
pusha
sub
ds
xchg
inc
mov
lods
sbb
in
push
loop
fsubrl
mov
js
and
sub
and
jb
add
adc
cld
outsl
fs
and
push
test
add
aaa
jmp
cmpsb
push
cmp
int3
sarb
or
mov
in
aam
xor
pop
jp
xor
xor
mov
cmp
stos
movsl
add
and
into
push
push
mov
xchg
or
mov
dec
sarb
mov
add
or
int
push
addr16
rorb
mov
stos
xchg
cwtl
dec
mov
jle
mov
add
add
cmp
out
push
jnp
aaa
dec
cli
and
push
jmp
add
cmpsb
push
mov
and
out
and
jp
js
cs
icebp
push
call
and
or
ss
cld
or
inc
adc
loope
push
cmp
xlat
fs
inc
mov
in
cli
mov
jbe
lods
cmp
cmc
loopne
adc
insb
push
adc
sbb
iret
out
pop
or
imul
jns
jo
sbb
jl
loopne
dec
ja
xor
rcll
xchg
in
dec
aas
inc
aam
cmp
pop
repnz
pop
add
scas
or
push
mov
cld
jae
jmp
movsb
or
lock
jne
daa
je
std
xor
lcall
arpl
mov
push
idivl
cltd
nop
aas
sbb
xchg
xchg
jb
push
lds
mov
pop
loopne
shll
push
cmp
fiadds
jns
cmpsb
dec
sub
jb
push
out
inc
dec
and
and
inc
ljmp
mov
lcall
ds
sbb
lock
pop
push
mov
dec
adc
adc
jb
sub
pop
sbb
popa
incb
jno
jl
les
push
xlat
push
out
cmpsl
dec
jne
inc
xchg
pop
enter
sub
xchg
shlb
iret
push
cmc
in
enter
test
xchg
dec
pop
cmpb
gs
or
hlt
inc
adc
lret
bound
in
pop
jg
mov
xor
xor
lods
out
xchg
jg
fcmovne
sub
or
xchg
loopne
cmp
inc
dec
icebp
div
movl
jmp
pop
nop
jl
jge
and
jns
push
inc
sarl
jle
jnp
ss
ret
mov
mov
xchg
clc
sub
inc
scas
add
mov
ljmp
mov
popa
mov
pop
loopne
outsl
xchg
add
jmp
dec
dec
ja
jmp
scas
mov
or
jo
xor
push
mov
in
cmc
fcmovne
out
add
xorl
cwtl
inc
int
dec
mull
rcrb
jmp
out
es
xchg
adc
xor
xor
fadds
sub
fstps
test
test
stos
inc
push
mov
fbld
add
out
jbe
adc
inc
dec
inc
jmp
call
push
jns
xchg
dec
roll
fs
dec
mov
aam
jmp
mov
or
pminsw
inc
mov
rcll
xor
daa
icebp
push
push
incb
fcoml
cmp
lret
icebp
pop
sti
imul
cmpl
in
jnp
push
and
add
aaa
ret
dec
shl
movsl
hlt
mov
mov
inc
repnz
adc
sbb
sti
das
push
clc
inc
mov
push
out
les
jle
or
mov
push
gs
push
xor
scas
roll
xchg
inc
and
ljmp
icebp
insb
js
add
cmp
sub
js
stos
jae
or
lods
mov
lods
nop
fldl
xor
decb
aaa
push
addr16
adc
mov
cmp
adc
xlat
xchg
inc
std
cld
ret
pop
inc
inc
std
test
xchg
xor
pop
pop
push
dec
adc
or
fisttpl
sbb
dec
mov
sbb
and
movsb
sbb
or
xchg
mov
inc
jmp
cmc
and
dec
jbe
dec
mov
jp
hlt
ret
xchg
adcb
ret
push
and
imul
pop
test
adcb
mov
or
xor
outsb
add
push
fidivs
stos
pushf
mov
jo
scas
test
push
decb
adc
clc
ss
lea
mov
ds
fs
xor
cmp
push
cmp
rcl
aaa
lods
lods
scas
leave
mov
cltd
sub
xchg
lahf
xor
hlt
jbe
std
lock
dec
fwait
mov
or
inc
adc
fucomip
out
pop
push
test
mov
loopne
roll
ficoms
xchg
or
push
loop
lret
pop
push
ds
int
repz
jb
push
cmp
rorl
dec
and
push
notb
inc
rclb
jbe
or
cmpsb
aad
mov
adc
xchg
stc
dec
int
xchg
ljmp
in
rcr
cmpsb
outsl
mov
movntps
pop
les
jae
out
xchg
xchg
lods
push
xchg
mov
add
push
fistpll
arpl
ret
sub
push
mov
icebp
inc
subl
xor
cmp
dec
call
fidivl
push
std
xchg
stc
mov
pop
xchg
jecxz
popa
inc
xor
pusha
test
outsb
dec
ds
mov
outsl
into
bound
dec
inc
test
testb
shlb
je
mov
sbb
xor
mov
stc
mov
inc
insb
test
movsl
adc
jle
cmp
mov
mov
movl
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
lret
push
xchg
and
mov
push
cmp
int3
or
mov
xor
xor
push
sahf
cmpsw
jp
jne
mov
jge
mov
fisubs
std
mov
push
loope
sub
leave
fistpl
pop
or
ja
xor
out
and
cmpsl
mov
jl
lret
leave
xor
or
mov
test
mov
sbb
push
shlb
inc
mov
fcomip
sbb
dec
rcl
or
aas
pop
pop
or
xor
in
or
pop
scas
and
dec
jb
imul
cwtl
sbb
jb
dec
aas
lods
dec
jno
push
mov
sbb
sbb
inc
sti
cli
mov
and
jo
js
xchg
gs
or
fnstenv
lahf
insb
mov
inc
nop
aam
add
dec
rcr
nop
push
mov
mov
call
push
repnz
jbe
mov
and
insl
push
aad
pop
pop
xchg
leave
fnstenv
sti
cmp
pop
mov
lock
xchg
mov
xchg
or
xchg
mov
sbb
push
cmp
insl
mov
mov
ret
loope
dec
fisttps
push
sub
mov
movsb
test
ljmp
mov
test
mov
bound
mov
inc
fidivrl
sbb
inc
jns
sub
in
mov
push
xor
lock
nop
daa
xor
jmp
sbb
stos
sahf
jae
testb
mov
pop
jecxz
mov
inc
and
and
or
test
into
ret
in
lds
adc
les
jl
jge
test
fistpl
cmp
jle
insb
sbb
sub
pop
stos
adc
mov
cmp
xchg
ret
imul
out
out
adc
xor
loop
ss
orl
cs
cmp
xor
cwtl
adcb
sub
jecxz
jle
insl
clc
int3
jbe
insl
dec
cli
jns
fmulp
xchg
je
or
sub
out
cwtl
fildl
mov
fwait
rcr
push
xchg
adc
repnz
es
scas
pop
add
fwait
inc
lcall
xor
sbb
test
nop
jg
add
jno
dec
jmp
jle
xor
xchg
xchg
jbe
or
test
iret
fsubl
xchg
insl
mov
sbb
lahf
pushf
es
push
call
mov
mov
sbb
adc
adc
pop
pop
and
lods
inc
popf
sbb
dec
cmp
or
test
ret
mov
sbb
xchg
hlt
dec
addl
mov
dec
xchg
sub
add
add
enter
loop
sbbl
inc
mov
pop
je
cmc
bnd
or
inc
shrb
jmp
xchg
repnz
dec
enter
mov
inc
bound
sub
popl
xchg
cltd
sbb
adc
incl
jmp
in
fdivrs
mov
mulb
clc
dec
adc
out
lods
loopne
popa
or
or
lret
inc
inc
jo
adc
cwtl
sub
outsl
sbb
add
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
aaa
call
jle
xorb
cmc
sub
pop
imul
out
fildll
xchg
add
mov
jnp
pop
in
and
pop
or
mov
sub
iret
mov
out
jl
jno
sub
int
insb
sbb
pusha
inc
ret
add
pusha
pop
andb
sbbl
divl
sahf
gs
mov
xor
cmp
adc
lock
cmpsb
cltd
xlat
push
sahf
in
into
add
add
js
xchg
arpl
out
xchg
jg
in
popf
xchg
lret
cmp
adc
add
mov
das
test
xchg
pop
lods
aad
ja
ljmp
dec
and
repnz
ret
mov
sahf
inc
xchg
adcl
xchg
mov
push
sbb
das
aam
rcrl
imul
cmpsl
mov
movsl
and
fwait
add
mov
push
sbb
mov
aas
fbld
ss
in
fldl
push
or
jg
push
push
nop
in
sub
add
inc
pop
add
push
pop
xor
sub
inc
mov
addr16
rorb
sahf
scas
divl
mov
lea
adc
mov
and
addr16
inc
mov
call
mov
aas
rorl
ja
add
out
jl
adc
mov
pop
dec
pusha
jecxz
add
je
pop
mov
jmp
or
lods
pop
jmp
inc
cmp
push
prefetcht0
xchg
pop
cmp
mov
xchg
and
in
adc
outsl
pop
xchg
jo
xchg
lds
pop
leave
jecxz
jg
mov
pop
inc
scas
jg
fstpt
cmp
scas
test
ret
adc
pop
movsb
in
jl
sbb
scas
jmp
ret
lods
leave
aam
pop
xchg
ljmp
bound
arpl
test
mov
nop
incl
or
push
scas
and
push
mov
outsb
das
xor
pop
inc
add
dec
ret
aam
stc
adc
pusha
bound
js
add
adc
rcll
in
fs
mov
test
or
stos
icebp
dec
outsl
or
xlat
cld
adc
push
add
mov
lods
cmpsl
mov
add
push
jno
ljmp
pushl
inc
or
fstpt
pop
or
test
push
js
int3
mov
xchg
fwait
or
inc
outsb
aad
sub
pop
int3
add
fistpll
repz
arpl
fwait
ja
or
mov
or
jno
adc
insb
xor
push
or
jb
lods
cld
cmp
rcrl
aam
dec
dec
xor
add
js
mov
lods
mov
dec
mov
mov
jl
into
je
pop
aam
and
pop
add
mov
xchg
xchg
cmp
fiadds
inc
std
sub
push
sub
nop
clc
dec
jnp
mov
fisubrs
paddb
add
mov
add
das
test
daa
rorl
inc
popf
xchg
mov
popf
insb
orb
jge
xor
in
mov
nop
mov
dec
imul
or
jge
push
xor
or
lods
sbb
imul
testb
shr
scas
shlb
fdivs
sbb
outsl
xchg
scas
icebp
stos
xchg
loope
or
add
adc
add
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
idivl
loop
out
jle
xorb
data16
and
sub
xchg
push
xor
mov
dec
cmp
pop
fbstp
cmp
shlb
sbb
ja
arpl
ret
inc
pop
mov
fidivs
xchg
mov
adc
push
pop
xchg
push
out
pop
push
sub
popf
mov
sbb
and
out
or
daa
jne
sbb
mov
push
sub
mov
push
incb
mov
imul
hlt
loopne
cmp
push
fistpl
jo
mov
lcall
xor
shrb
jg
jo
jb
rclb
push
push
popa
insl
jl
les
push
dec
les
mov
mov
test
ja
ret
aam
mov
xor
in
cmp
and
dec
xchg
rolb
inc
setnp
jno
jmp
pop
fbld
dec
lret
shrl
js
lret
or
addr16
idivl
sub
xor
lock
dec
out
outsb
popa
xchg
imul
mov
xchg
or
pop
data16
xchg
pop
mov
aad
and
hlt
in
mov
xor
in
icebp
fucom
xchg
movsl
cmp
insl
mov
out
mov
push
sub
or
popf
jo
adc
clc
pop
popa
and
mov
nop
testb
ss
adc
dec
cmc
mov
lahf
out
jmp
or
inc
jno
pop
mov
cmp
dec
inc
mov
aas
sub
fld
shll
xchg
pop
cmp
sub
pop
subl
cwtl
pop
xchg
dec
mov
jle
push
jg
mov
sub
adc
addr16
lock
loope
xor
pop
movsb
xchg
cmp
xchg
dec
jns
push
dec
lret
xchg
insl
fidivl
adc
cwtl
inc
pop
cltd
dec
cmpsl
cwtl
imul
test
cmp
inc
xchg
in
inc
movsl
dec
mov
mov
fcompl
addb
jg
xor
inc
pop
test
xchg
fistpll
inc
enter
mov
or
mov
stc
push
add
imul
in
mov
hlt
inc
loopne
dec
mov
fisttpll
in
leave
dec
add
out
pop
cld
in
stos
in
js
xchg
repz
bound
test
in
push
popa
pop
pusha
add
cli
insb
hlt
xor
or
push
add
push
pop
jl
adc
inc
addb
push
inc
lcall
xchg
cmp
subl
ja
dec
mov
aas
fstpl
mov
int
das
jl
adc
pop
mov
call
popf
cs
test
in
imul
pop
fstps
insb
ljmp
mov
jb
inc
and
mov
push
stc
jae
ljmp
adc
pop
add
and
int
mov
and
push
or
stos
int3
adc
mov
jne
jne
sbb
push
mull
rcll
rolb
cmp
inc
cmpsb
sahf
xor
ss
sbb
mov
scas
push
sbb
push
dec
fwait
call
xchg
mov
cmp
daa
movsl
repnz
mov
inc
sub
or
adc
scas
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
out
ljmp
jno
jle
xor
push
xchg
adc
out
ja
jo
lds
mov
mov
mov
push
repnz
and
sarb
movsb
mov
xchg
pop
je
adc
xor
out
cmp
mov
mov
insl
cmp
jae
mov
fsubs
mov
inc
jecxz
bound
dec
pop
arpl
loope
ret
cld
mov
fdivl
icebp
ds
cmovno
inc
iret
insb
xchg
roll
xchg
mov
outsb
adc
subl
pop
movsl
mov
mov
push
push
outsb
xchg
movsl
pop
sbb
pop
hlt
sahf
pop
mov
inc
ffreep
shlb
jg
in
int
out
addr16
sbb
add
sbb
call
jno
enter
inc
mov
or
cmp
jbe
jns
shlb
push
or
adc
sarl
xchg
cli
rcl
or
push
pop
dec
sbb
inc
sti
xlat
cmp
inc
ret
xor
sub
andl
ja
xchg
dec
mov
shll
lahf
mov
push
mov
pop
xor
adc
lahf
jl
daa
push
ror
cmp
pop
stc
scas
shl
fwait
sbb
addr16
pop
leave
ss
mov
xlat
jo
ljmp
dec
push
mov
out
repz
fnstenv
adc
test
push
lret
in
push
lea
or
notb
lcall
cmp
push
pop
pop
xchg
in
mov
arpl
aaa
stc
mov
repnz
push
jge
ljmp
cmpsl
sub
xchg
jns
or
cmpsl
xor
imul
add
cmp
sub
mov
addr16
nop
in
add
out
int3
cli
or
mov
add
es
add
xor
mov
mov
mov
or
fcoms
movsb
jno
sbb
and
addl
jecxz
pop
mov
pop
dec
adc
pop
jno
and
mov
fsubp
sub
adc
fmuls
mov
nop
dec
xor
add
mov
lods
xchg
xor
jge
sbb
fldenv
pop
pop
add
test
jmp
scas
cmpsl
push
or
sbb
in
mov
mov
push
lods
outsl
aas
outsb
fwait
dec
lcall
inc
dec
jmp
sub
jl
sub
xchg
loopne,pt
rcrb
push
add
hlt
adc
push
cmp
mov
test
push
shll
mov
cmp
mov
orl
aas
imul
dec
js
rcrb
or
nop
cmp
movsb
jle
jp
rcrb
dec
lock
jns
pop
jbe
mov
sets
std
mov
sub
adc
aam
mov
adc
jecxz
mov
cmp
jge
shrb
inc
inc
push
addr16
fucom
lea
jecxz
inc
add
jbe
jmp
mov
addl
scas
lret
mov
aad
push
mov
mov
imul
jno
popa
mov
mov
iret
fadds
shlb
push
or
mov
ja
sar
sub
mov
xchg
iret
and
mov
cld
jmp
jl
sub
jge
jge
inc
sbb
fisttpl
insl
dec
sahf
sbb
xorb
test
fdivs
adc
xchg
sub
push
int3
push
cmp
jmp
and
mov
nop
jno
jne
dec
and
sbb
loope
add
mov
lds
insl
jns
in
pop
sub
sbb
pop
insb
outsl
fidivl
ljmp
jno
aam
push
xchg
jae
daa
push
shl
mov
pop
inc
xor
xchg
out
cmp
push
xor
push
cmc
or
mov
jp
mov
sti
add
in
jl
fisubrl
and
out
or
inc
xchg
imul
repnz
inc
or
fistpll
mov
push
dec
loop
jle
push
je
xchg
xor
scas
call
pusha
jno
insb
push
cmp
sub
in
cld
nop
push
cli
pop
es
fadds
test
nop
inc
sbb
dec
xchg
mov
mov
xchg
pop
cmpsb
les
cld
fsubrl
jmp
add
psubusw
test
push
into
jno
push
addr16
inc
test
and
inc
lret
push
mov
mov
loope
stc
push
imul
jnp
test
adc
dec
xor
dec
mov
jmp
jae
push
icebp
jnp
dec
in
lcall
and
sbb
pop
jecxz
mov
hlt
pop
mov
ret
xor
adc
scas
mov
in
loopne
jle
in
cwtl
faddl
or
cmp
les
mov
mov
push
cmc
out
arpl
push
mov
ret
jge
push
mov
jbe
mov
pop
into
shl
xchg
imul
mov
leave
sarb
pop
out
inc
sub
int
xlat
xor
cwtl
andl
jp
push
sbb
or
fcoms
inc
fadds
leave
fsubl
xor
pop
jbe
add
add
gs
aam
inc
xor
ljmp
xlat
fsts
adc
sub
xor
and
movsb
int3
cmp
inc
xchg
mov
int
adc
xchg
ja,pt
sahf
ljmp
loop
add
int
fstl
ja
sbb
cwtl
ds
jecxz
dec
loope
inc
in
incl
pop
sbb
ds
cmp
xor
cmp
test
roll
addr16
int
loopne
test
clc
shlb
push
mov
dec
adc
fdivs
inc
mov
cmp
and
sub
mov
sub
xchg
jmp
das
xlat
inc
pop
nop
imul
sbb
mov
jp
ja
push
in
sbb
call
push
xchg
xchg
vunpcklpd
ss
mov
idivl
jg
mov
fcmovnu
out
mov
mov
pop
jbe
push
aaa
insl
test
mov
xor
pop
and
xor
jl
jecxz
loope
inc
out
and
cmpb
ret
pop
add
repz
sbb
mov
test
cmp
dec
insb
xchg
ja
fisttps
imul
bts
inc
ret
or
xchg
test
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
jge
cmp
xorb
fiaddl
xchg
movsl
rcl
ja
add
xchg
ret
xor
je
lds
push
movzwl
je
cmpb
xor
fmul
sbb
jecxz
pusha
insl
push
dec
addr16
mov
insl
insb
push
jmp
and
pusha
dec
jge
inc
cwtl
mov
popf
movsl
jne
int3
sub
and
cmp
push
outsl
inc
push
adc
xor
mov
add
or
out
sub
ret
dec
insl
or
jo
enter
adc
sub
sub
repz
push
inc
xchg
inc
stos
popa
mov
inc
sbb
icebp
out
inc
popf
and
shlb
shr
xor
inc
mov
stc
call
or
adc
pop
out
push
cmp
jl
into
push
adc
sbb
push
cmc
xor
bound
push
push
push
inc
or
mov
fucomp
enter
data16
inc
fcmove
dec
pop
mov
push
or
sbb
clc
cmpb
mov
mov
out
in
nop
adc
lcall
and
push
enter
xchg
popa
adc
jns
scas
arpl
and
dec
repnz
cmpl
stc
repnz
insw
cmpsb
xor
adcl
jmp
addb
cmp
pop
enter
daa
add
mov
jle
or
movsl
idivl
xchg
or
out
lret
insb
pop
je
sub
jl
lahf
mov
in
dec
shr
jnp
pop
jbe
ljmp
adc
dec
xorb
xlat
mov
sbb
leave
addb
add
aaa
out
nop
stc
xor
cmc
lock
dec
mov
dec
push
pop
cmp
inc
sub
test
ror
repnz
fdiv
ret
dec
push
test
adc
dec
in
mov
mov
adc
gs
repnz
xchg
imul
jmp
rcrb
sub
scas
hlt
mov
pop
cli
gs
stos
push
mov
mull
pop
movsl
cmc
movsl
xchg
add
pop
fsubl
push
adc
mov
sbb
mov
dec
mov
gs
js
cmp
popf
pop
shll
jge
divb
dec
jo
int
or
push
sub
int
fstps
and
fsubs
xor
and
fisubrs
xchg
mov
cmpsl
inc
ss
js
inc
sub
popa
aas
in
out
fistpll
cmpsb
inc
pop
mov
push
nop
scas
aaa
push
lods
adc
das
pop
ret
cmpsl
mov
pop
outsb
dec
sbb
cmp
mov
cmc
sub
movsl
jge
mov
xor
cmp
mov
mov
mov
or
mov
mov
sbb
pop
incb
in
out
pop
xchg
jmp
les
jns
subb
mov
es
and
fcomip
dec
add
int3
test
out
pop
lods
stos
fiaddl
in
jnp
adc
mov
pop
stos
cmp
inc
mov
pop
mov
jle
push
xor
imul
cmp
adcl
aam
data16
jle
sub
lret
cld
push
sbb
cmp
pusha
push
push
jb
push
xchg
push
loopne
gs
cmp
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
adc
mov
jle
cmc
and
imulb
mov
into
push
das
aad
push
in
cmpsl
test
jl
je
loop
ret
mov
stos
sbb
push
das
sahf
xor
jmp
pop
and
xlat
pop
daa
and
ds
xor
push
pop
das
mov
add
int3
pushf
pushf
in
cmp
mov
movsb
cs
std
inc
lea
fmul
sub
adc
sub
push
es
adcb
aas
jbe
call
xchg
mov
lcall
xor
aam
call
js
pop
xchg
cmpsl
pop
mov
or
bound
xchg
push
mov
jmp
push
ds
sub
mov
out
xor
push
or
nop
push
sbb
mov
jg
in
imulb
shll
mov
popf
inc
js
cmpsb
pop
jl
xchg
dec
push
push
rol
cmpsl
aaa
mov
test
int3
cmp
pop
out
mov
dec
repz
push
insl
xor
daa
add
fistpll
cmp
sahf
xchg
push
test
pop
add
test
jbe
pusha
mov
out
pop
rcrb
pop
cwtl
mov
and
insb
jp
jbe
adc
mov
int
lret
mov
mov
or
insl
into
insb
pop
push
or
rol
mov
jmp
adc
add
rol
pop
mov
push
fsubr
dec
pop
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
mov
jle
mov
jle
mov
push
cltd
or
cmpsl
mov
pop
dec
jbe
push
pop
scas
jge
fwait
insb
out
push
sbb
pop
aaa
aam
mov
iret
das
dec
cs
std
add
xlat
cmpsb
int
test
pop
lcall
rorl
dec
xor
jns
ja
aaa
not
in
inc
mov
adcb
jns
and
or
mov
cwtl
jle
xchg
je
mov
jb
loope
push
jnp
dec
sti
pop
xor
iret
gs
xor
fwait
in
sbb
scas
pop
or
and
pop
popf
dec
clc
movsb
and
fistl
shlb
stos
notb
jmp
out
cmp
lock
lods
lret
xor
xor
sub
mov
test
mov
addr16
and
lcall
leave
out
xchg
inc
adc
cmp
js
aam
lcall
or
xor
cmp
imul
dec
out
or
jge
or
test
xchg
add
ret
sbb
jbe
loope
cmp
aas
scas
adc
pop
scas
out
mov
xlat
movsl
cmp
sbb
add
xor
mov
fidivl
pop
push
xor
push
xchg
daa
xor
ss
lds
xchg
mov
adc
fmuls
mov
cmp
mov
ret
repnz
mov
mov
jmp
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
outsl
pop
mov
in
vmaxss
stos
ds
in
iret
push
scas
mov
xchg
icebp
movsb
push
jecxz
cs
sub
mul
out
mov
add
pop
inc
mov
mov
jmp
in
xchg
push
pushf
sub
cs
jecxz
pushf
loope,pn
ljmp
in
or
add
scas
or
xchg
inc
rorb
hlt
cli
arpl
int3
xor
pop
loopne
ss
insl
cs
mov
push
outsb
jb
mov
jne
jo
fwait
inc
xchg
mov
dec
pop
xchg
pop
pop
xchg
pop
popf
sub
dec
pop
fwait
dec
cs
cld
add
stos
push
cmp
aas
jmp
ret
vaddpd
lcall
movsl
sub
xor
push
in
int3
pop
stos
flds
out
push
insl
push
jb
adc
movsl
int
imul
in
out
fbstp
shll
mov
je
stos
int3
add
lret
sub
mov
mov
mov
fsubrl
jle
pop
mov
pop
or
mov
das
mov
cli
inc
or
jge
jge
pop
pop
add
in
and
mov
sub
fcmovb
out
hlt
jnp
adc
mov
mov
jne
jno
xchg
es
icebp
aam
cs
les
dec
jl
mov
aad
imulb
gs
push
xlat
add
cmpsl
xor
xor
jmp
xchg
push
int3
jns
imul
out
inc
loopne
in
push
jle
mov
jle
xchg
xchg
les
and
mov
pop
cmp
int
int
je
push
adc
lods
subb
push
xor
ljmp
cmp
adc
pop
ss
ret
push
pop
cmp
dec
mov
roll
into
movsl
jb
sahf
fisubs
ds
xchg
popa
mov
push
insl
jae
fcoms
insl
fninit
iret
fnstenv
sub
sbb
pushf
or
inc
pop
sub
mov
mov
fstps
test
cld
cmpsl
cmp
les
test
inc
mov
icebp
sbb
xor
mov
ret
or
icebp
sti
pushf
je,pt
out
cmp
popl
xchg
sub
mov
or
xchg
mov
stos
imul
inc
loopne
rclb
jmp
scas
xchg
or
ljmp
jb
cmpsb
push
push
popa
mov
xchg
call
jmp
data16
xchg
adc
cmpsb
fwait
inc
mov
arpl
pop
lahf
enter
xor
cmp
jg
ds
jmp
lret
bound
and
xor
pop
arpl
inc
fwait
nop
clc
cmp
sub
lcall
sbb
pop
movb
icebp
sahf
in
and
sub
mov
into
sub
jmp
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
and
jle
mov
jle
jo
xchg
push
inc
jle
ss
insb
and
stos
jle
inc
pop
fcomps
cmp
add
xchg
nop
adc
pop
add
mov
iret
inc
xchg
sub
adc
rcrl
jbe
xor
pop
out
pop
ret
adc
stc
mov
andl
mov
nop
xchg
push
mov
fadds
sub
aad
loope
dec
cmc
inc
mov
pop
lcall
mov
push
std
sarl
xor
dec
pushf
jae
cmp
in
xor
mov
int3
out
push
push
adc
jge
leave
pop
clc
popa
push
and
inc
xlat
shll
adcl
and
rcl
adc
mov
ret
lods
andb
sub
aas
inc
stos
imul
in
lcall
sbb
add
lcall
imul
out
and
adc
mov
sub
mov
jle
stos
clc
mov
icebp
lret
outsb
jae
iret
jae
inc
and
jno
and
inc
shr
mov
test
ljmp
or
add
mov
pop
fldenv
dec
nop
push
arpl
cmpsb
fmul
cmpsl
and
cmc
cmp
pop
test
sbb
sub
adc
ss
xchg
jb
shrb
dec
insl
pusha
imul
cmpsb
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
lods
mov
sub
mov
jle
enter
pop
outsl
xor
ljmp
ja
in
or
xchg
imul
outsb
mov
xchg
jl
sub
aaa
scas
dec
xchg
mov
push
imul
stc
jae
jmp
xchg
lods
in
pushf
lea
xor
aad
outsl
xlat
adc
icebp
sbb
stos
fwait
mov
add
pop
sub
mov
xchg
inc
inc
test
js
icebp
rorl
mov
into
and
xchg
xchg
mov
loop
fsub
js
loop
dec
and
xor
imul
popf
dec
push
mov
lock
test
iret
icebp
inc
adc
lods
mov
lea
jle
add
add
test
xchg
testb
sub
aas
lds
push
filds
test
lss
stc
rcrl
push
in
cmp
pop
or
aad
int3
stos
adc
mov
add
mov
adc
out
or
jle
xor
hlt
sbb
lahf
je
pop
fisubl
add
mov
test
cld
pop
push
sarb
add
icebp
aam
lds
push
pop
mov
fidivl
ret
or
xchg
mov
push
pusha
lds
sbb
push
jae
dec
push
inc
or
adc
fs
pop
and
mov
cltd
bnd
xor
in
mov
mov
mov
mov
jmp
andb
addw
push
mov
jle
and
cmpb
ficoms
mov
pop
rcll
outsb
sbb
into
sbb
nop
and
sbb
call
jle
imul
pop
mov
cmp
addb
cmp
mov
and
adcl
loopne
jmp
loop
nop
enter
add
pop
push
push
fldlg2
movsb
push
cwtl
mov
les
inc
or
xlat
stos
in
in
lahf
fiaddl
or
enter
xor
js
popf
pushl
fstl
jno
or
int
cs
sub
xor
add
jnp
dec
pusha
mov
xor
shr
int
and
add
loope
push
cmc
jno
inc
mov
dec
sub
cmpsl
gs
fs
jbe
xor
dec
fwait
loop
loopne
mov
jp
lds
xor
jbe
cmpsb
das
or
mov
insb
push
loope
adc
iret
and
xor
aad
test
lret
movsl
hlt
stos
xorl
shrb
int3
movsl
add
mov
sub
jns
lahf
sub
xchg
shl
testl
push
int3
xchg
or
mov
push
mov
jno
scas
sub
push
movsl
mov
add
push
cmp
mov
sbb
out
xor
add
push
into
insl
nop
push
test
je
sub
sub
push
in
jmp
test
xor
push
mov
xor
movsb
jne
sub
jle
jg
jle
scas
in
adc
test
das
insl
adcl
mov
xchg
cltd
xchg
sbb
es
leave
rcrl
outsb
pop
sbb
inc
sub
movsb
jb
into
pushf
out
js
fcoml
in
pop
cltd
aam
add
ss
mov
inc
addr16
out
dec
fidivs
stc
outsb
lods
jae
mov
xor
sub
xchg
pusha
mov
inc
add
aad
std
stos
nop
xlat
sbb
mov
call
out
data16
mov
in
daa
call
or
xchg
mov
arpl
lcall
pop
sbb
rolb
idivl
pop
sbb
out
into
inc
push
pop
push
subb
dec
ljmp
sub
push
dec
pxor
aas
mov
or
pop
push
shlb
shlb
fstl
mov
leave
mov
in
fwait
xor
lods
or
cli
hlt
xchg
xchg
or
cwtl
outsb
adc
hlt
sub
inc
or
cmp
icebp
pop
test
call
shl
push
scas
pop
pop
sub
jnp
fucom
fnstsw
stos
aam
xor
mov
sub
dec
sbb
popf
xorb
and
mov
pop
jle
repz
mov
jecxz
imul
pop
add
stc
lea
loope
push
mov
jbe
imul
stos
fidivs
je
movsb
rorb
pop
mov
and
xchg
cmp
push
or
hlt
xor
add
jmp
in
push
adc
movsl
aas
push
cmpsb
loop
popf
cs
mov
jle
out
jp
or
jl
mov
lods
cs
aad
loopne
into
jns
lcall
pop
dec
dec
aad
aam
adc
or
mov
out
sub
or
xchg
cmp
call
movzwl
jmp
inc
ljmp
mov
or
test
xchg
and
pop
scas
jle
fdivs
out
push
ret
add
adc
sbb
repnz
leave
adc
mov
out
fst
stos
jge
sub
aad
stos
in
je
pop
stos
inc
stos
or
cmp
xchg
addr16
fcoms
testl
ss
push
add
jbe
inc
inc
dec
or
xacquire
fisubrl
or
xchg
les
xchg
mov
pop
data16
pop
push
sbb
pop
cmc
xor
push
push
std
lods
add
in
sbb
test
jne
decl
repnz
dec
xchg
adc
sub
mov
fstpl
jnp
test
loope
enter
mov
inc
xorb
jmp
xor
daa
pushf
test
xor
sub
jne
mov
mov
mov
pop
clc
and
add
daa
mov
in
adc
xor
sbb
lods
rclb
inc
loop
push
imul
gs
jns
adc
pop
das
xchg
xchg
std
lods
push
pop
divl
lds
cmc
lea
jnp
sub
pop
mov
xchg
pop
popf
jb
add
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
das
jle
mov
jle
xor
in
fldcw
scas
es
js
mov
movups
andl
fnstsw
idivl
iret
cwtl
jg
dec
xor
lea
ja
pop
outsb
push
popa
jg
xchg
xor
mov
out
imul
and
lods
lock
repz
filds
push
dec
adc
test
ja
inc
stos
pushf
or
sub
arpl
mov
push
aaa
outsl
and
ret
outsl
mov
xchg
aad
xor
push
ret
mov
push
sub
jb
inc
inc
xchg
and
pop
and
out
cli
movsb
fwait
mov
xchg
cmp
pusha
insb
es
js
sub
pop
lahf
push
xchg
and
mov
ljmp
or
xor
push
sub
js
or
mov
xchg
out
sub
xor
sub
cmp
xor
test
pop
lret
int
mov
xor
mov
pop
inc
cli
sbb
lret
push
mov
dec
jno
shr
push
aad
sbb
cmp
mov
dec
fucomip
pop
cmp
add
add
push
mov
cld
orl
and
ss
jmp
sub
ja
inc
outsl
cmp
and
mov
mov
jecxz
mov
push
stc
imul
jmp
mov
jns
dec
mov
sbb
jle
jg
jle
pop
jl
pop
push
xchg
xor
mov
loopne
in
pop
int3
mov
mov
les
cli
cmp
daa
outsl
sbb
in
mov
insb
movsb
pusha
inc
lret
mov
mov
pushf
add
dec
out
mov
sbbb
push
mov
mov
xor
jmp
mov
dec
jo
data16
mov
xor
in
hlt
push
xor
dec
loopne
inc
int3
nop
push
cs
xchg
dec
or
arpl
pusha
adc
pop
insl
push
leave
orb
mov
adc
jle
pop
data16
push
out
lahf
dec
mov
in
stc
dec
aad
idivl
add
inc
inc
adc
cmpsl
and
mov
sbb
mov
loop
pop
cld
rolb
pop
das
je
int3
or
out
xchg
inc
sarb
xor
push
xor
jp
leave
pop
push
xorl
aas
out
sbb
lea
es
or
inc
addl
pop
addr16
call
lea
faddl
outsb
lods
sub
jo
cmp
cmc
lock
ror
push
sbb
push
jp
fisubl
popa
neg
ljmp
add
mull
push
test
jp
add
in
outsl
mov
std
jb
and
and
cmp
sub
push
ja
and
scas
cmp
nop
jle
pop
call
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
push
inc
out
inc
and
mov
jle
pop
xor
add
addr16
add
sub
movsb
mov
andl
cmpsb
dec
lret
push
bound
dec
js
jne
sub
incl
mov
mov
shrl
adc
adc
cmp
push
jno
lcall
push
fisubrl
xlat
or
jo
add
iret
popa
pushf
negl
nop
lods
bound
sbb
pushf
repz
in
dec
sub
jg
add
movnti
imul
sahf
call
pop
mov
in
adc
mov
push
dec
pop
pop
mov
adc
jle
js
jle
add
cmc
or
mov
loope
cmpl
repz
repz
cmp
ret
int3
lret
inc
outsl
lods
jge
or
cmp
cmp
divb
xor
mov
pop
sub
addr16
lcall
pop
cs
popa
frstor
dec
arpl
int3
nopl
sbb
pop
test
fwait
inc
inc
or
pop
jl
test
jl
or
dec
bound
dec
xor
int3
sub
adc
xor
pushf
aam
cmpsl
mov
shll
push
movsl
inc
icebp
mov
cmp
into
mov
in
gs
mov
mov
leave
outsl
add
test
cs
jns
xor
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
pop
shlb
jle
jno
jle
mov
xor
xchg
mov
shrl
aaa
sbb
aam
pushf
xadd
inc
in
arpl
jns
adc
xor
sub
std
mov
aas
pusha
xor
push
mov
adc
imul
pop
mov
xchg
inc
jmp
sub
or
cltd
dec
and
inc
jae
jbe
jp
mov
mov
cmpsl
fldcw
rorb
pop
mov
movsb
and
pushf
pop
movsb
xor
jno
jae
subb
sbb
mov
jbe
xchg
push
clc
scas
cs
fists
xor
mov
sarb
mov
stc
sbb
dec
push
fwait
cwtl
pusha
sub
pop
dec
or
jns
pop
sti
arpl
sbb
incb
add
pop
add
jae
insl
push
leave
jle
rclb
je
inc
adc
mov
mov
int
fcomps
dec
and
inc
add
cmp
nop
mov
movsl
push
cltd
gs
xchg
aaa
mov
pop
test
xchg
pop
pop
test
rolb
ds
mov
push
ljmp
jmp
xor
je
jp
lahf
inc
jg
inc
aaa
dec
sti
mov
fistpl
mov
push
sub
dec
popf
xchg
jo
addr16
adc
cmp
lods
push
mov
sub
sub
and
mov
popf
dec
jbe
aad
and
sub
xchg
mov
mov
mov
testb
sti
cmpsb
insb
dec
sub
int3
test
jle
jp
repz
push
add
mov
jae
pop
mov
fidivs
inc
imul
cld
daa
mov
pushf
nop
jl
hlt
mov
out
cmpsb
mov
ss
inc
cmp
pop
ja
and
mov
addl
jg
enter
xor
inc
sub
sub
xchg
xchg
fdivrs
mov
mov
rolb
ljmp
outsb
mov
pushf
movsb
xchg
mov
js
rorl
or
arpl
cmpsb
ret
andb
push
das
ficompl
xlat
add
pop
jmp
test
hlt
shll
pushf
jns
test
or
cs
mov
xor
stos
dec
jae
jb
or
fistpll
mov
sbb
out
cmp
pop
xor
xchg
push
fildll
test
pop
mov
mov
mov
xor
pop
cmp
mov
or
cmp
test
stc
repz
mov
dec
out
dec
rorb
popa
adc
jl
repz
inc
or
cmpsb
sbb
jle
les
iret
ljmp
das
xchg
sbb
nop
dec
fnstenv
or
addr16
pop
filds
mov
inc
shrb
sub
or
ficoml
xchg
clc
xchg
frstor
and
rorl
les
pop
stos
in
stc
inc
fimull
mov
mov
dec
cmpsl
and
lcall
xor
xchg
nop
mov
movsb
test
xor
add
or
dec
pop
inc
mov
mov
out
cmp
xchg
pop
sti
scas
jge
lret
cmpl
adc
int3
adcb
insl
aad
sti
jl
cmp
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
mov
cmp
mov
lods
dec
cld
jne
out
mov
repnz
xor
cmp
mov
xchg
mov
mov
in
inc
or
rolb
add
sub
clc
outsb
sub
jle
pop
dec
dec
push
out
imul
adc
fbstp
xchg
popf
sti
dec
aaa
jbe
push
pop
lcall
cmp
addb
cld
lcall
jae
mov
xor
xchg
lcall
mov
add
mov
aaa
testb
fstps
sub
fiadds
xchg
sbb
xor
xchg
subb
mov
in
and
pop
out
or
or
dec
sbb
cmp
xchg
sub
cmp
cmpl
push
movaps
jl
mov
pop
addr16
mov
in
sub
popa
inc
sbb
inc
mov
scas
div
pop
jp
xor
cmp
or
ds
mov
adc
aam
pop
insb
xchg
push
cmp
loop
mov
add
outsl
rorb
add
sbb
dec
and
mov
mov
xchg
dec
sub
or
movsl
cwtl
lcall
rol
mov
jg
repnz
popa
xchg
lds
aaa
out
in
sbb
pushf
je
jle
sub
mov
nop
out
ret
sbb
mov
data16
jp
movsb
push
mov
mov
rorb
fmul
imul
imul
dec
adc
xor
add
jmp
pop
mov
testb
pop
and
sbb
and
sub
inc
jmp
mov
mov
cmp
stos
bnd
sub
jp
xchg
mov
mov
mov
dec
repnz
dec
int
insb
sub
addr16
insb
iret
test
idiv
adc
dec
lcall
push
cmp
fsubl
mov
das
pushf
jp
mov
xchg
outsl
bound
mov
add
mov
push
inc
fwait
mov
mov
mov
sbb
sub
xchg
and
mov
sbb
add
cmpsl
mov
int3
orb
xchg
and
and
inc
testb
sbb
xor
xchg
xor
imul
and
pop
shrl
lahf
into
out
lods
out
adc
sub
into
fstpt
cmp
pop
sub
addl
scas
gs
ret
fdivp
adc
imul
or
mov
add
mov
cmp
stos
mov
iret
fcomps
mov
ljmp
ljmp
cwtl
push
or
nop
aam
inc
or
pop
je
push
mov
or
in
fcomip
mov
push
in
mov
sbb
sti
add
cmpsb
aaa
mov
nop
nop
out
test
jmp
cmp
loop
inc
push
jl
pop
insl
roll
iret
xchg
dec
or
and
xchg
cmp
fistpll
data16
dec
sbb
or
repz
cmpsl
pusha
sbb
aam
fs
cmp
lods
scas
sbb
sbb
dec
pop
ljmp
adc
je
pop
jmp
pop
ret
fldl
jo
dec
adc
in
stc
out
aas
push
or
in
leave
jne
xor
test
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
cmpsb
std
imul
jle
jno
jle
mov
iret
jne
xchg
mov
fstpl
je
nop
rol
lods
push
mov
jmp
mov
out
fwait
or
mov
testl
cmp
andl
movsb
ljmp
dec
mov
xor
push
mov
aam
mov
cmpsb
in
in
dec
add
push
mov
fcompl
mov
orb
jne
mov
jb
mov
psadbw
mov
fcmovnu
mov
fists
lods
ss
stc
fisubs
jb
mov
inc
adc
call
rcr
add
dec
stos
test
jecxz
movsl
adc
sub
mov
icebp
pop
mov
gs
mov
xor
dec
xchg
cmp
mov
mov
ret
sahf
movsb
jns
cmp
mov
or
loope
or
adc
leave
pop
lods
push
cwtl
imul
movsl
loop
stc
sub
cmp
jmp
and
loope
pop
inc
xlat
insb
rol
and
aad
jl
in
loopne
mov
stos
fwait
sbb
mov
mov
das
stos
ficompl
lock
push
fsubr
mov
pop
xor
jg
cli
in
enter
pop
mov
out
stos
or
mov
mov
or
in
ret
push
mov
xchg
ret
cmp
lret
push
jle
push
xor
cmp
adc
daa
iret
dec
or
aas
cmp
pop
lods
jbe
add
jmp
sub
xchg
adc
int3
jnp
sbb
fldt
pop
aam
jge
mov
cmpsb
outsl
je
mov
sbb
cltd
pop
jle
jno
mov
mov
add
scas
mov
std
cmp
mov
pushf
out
inc
inc
sub
sub
lcall
mov
mov
pop
jp
add
cli
fsubr
xchg
push
pop
dec
iret
pop
push
mov
popf
pusha
pop
push
data16
mov
push
jl
into
xor
mov
xor
arpl
sub
cmpsl
mov
add
movsb
jge
push
rcrb
mov
rcl
js
sub
sub
inc
mov
jbe
scas
lods
xor
add
jnp
cs
mov
xchg
testl
inc
sbbl
ret
jle
je
ljmp
addr16
lahf
leave
loopne
xor
stos
or
cwtl
gs
scas
sar
cltd
out
lcall
cli
test
adc
or
mov
push
pop
in
enter
dec
jno
mov
inc
xchg
push
and
test
mov
pop
mov
ficoms
lock
mov
gs
jb
pop
int3
jno
cwtl
fnstcw
es
mov
cltd
repnz
scas
mov
xchg
sub
aas
xor
add
enter
loope
pusha
cmpsb
dec
xchg
dec
lret
in
sub
jmp
divl
shl
ret
adc
cmp
dec
push
push
xor
jbe
mov
fldt
cwtl
push
loopne
ss
cmpb
pop
jmp
ret
inc
call
push
sbb
xor
inc
adcl
push
fldl
std
or
mov
leave
movsb
or
pushl
pop
pop
mov
mov
fs
mov
xor
out
imul
aam
test
and
sub
and
stc
aad
jg
ja
bound
bound
decb
cli
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
fbstp
les
jle
mov
je
lods
pop
mov
in
xor
fnstcw
and
xor
ret
pop
sti
stos
and
lea
push
adc
stc
cmpsb
mov
mov
push
mov
pop
cwtl
push
and
xsavec
jnp
push
and
xchg
push
mov
adc
loope
mov
arpl
cmp
es
pop
cmc
shr
and
je
das
push
cli
insb
push
pushf
cltd
ss
das
or
push
ja
aad
add
movl
mov
dec
movsl
aas
and
add
xor
shll
mov
pop
movsl
pop
lock
push
bound
das
lock
ror
stc
sub
insb
insl
xchg
jbe
mov
push
mov
sahf
and
mov
hlt
hlt
loopne
pushl
and
cmp
int3
add
sbb
cmp
sub
mov
cmp
int
mov
jecxz
cs
xor
xchg
jo
xor
insb
shlb
arpl
out
adc
insb
mov
jg
fwait
jnp
roll
loopne
dec
inc
push
ss
jp
addr16
int3
push
push
mov
std
pop
pop
dec
into
sub
cmpsl
rclb
into
xchg
jecxz
jg
pop
push
inc
adc
cld
movsl
jns
inc
mov
xor
inc
lods
mov
mov
mov
roll
sub
popa
dec
push
aad
ja
imul
dec
test
pop
stos
hlt
push
idivb
aam
mov
out
xchg
pop
imull
mov
sub
bound
jo
inc
adc
sub
orb
iret
orl
mov
cmp
std
popl
mov
sbb
je
je
cwtl
and
jne
sti
aad
ljmp
inc
out
rolb
outsl
pop
xchg
fdivs
sarl
jmp
lods
fildl
hlt
xchg
gs
sbb
xchg
stc
fwait
or
dec
shr
cmpsl
sbb
mov
imul
mov
call
inc
imul
dec
mov
adc
push
add
test
lcall
popa
pop
in
fs
rol
aad
in
cmp
leave
jbe
sahf
into
aam
adc
add
lds
xchg
or
es
xchg
inc
mov
adc
ss
dec
xor
and
stos
std
jns
cmp
leave
pushl
mov
fsub
and
pop
dec
je
inc
out
enter
add
mov
inc
mov
xor
inc
sub
notl
dec
push
leave
les
sub
lcall
outsb
sbb
ss
add
push
pushf
inc
and
and
mov
orb
mov
jp
fs
pop
dec
dec
sub
movsb
jg
popf
sahf
add
jnp
cmp
sub
insb
fs
lcall
lods
cwtl
sbb
pop
in
rolb
push
mov
clc
stos
jge
bound
push
movsl
mov
add
cmp
mov
or
insb
sub
push
sbb
jb
mov
gs
mov
or
jecxz
xchg
mov
ffreep
mov
sbb
out
and
cwtl
andb
lret
jmp
cmp
jno
sub
mov
test
lahf
sub
adc
inc
or
mov
daa
adc
xchg
idiv
lcall
xor
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
sub
cmpsb
sahf
insl
add
out
leave
lret
pop
add
adc
and
shlb
shll
addb
js
sub
test
enter
xchg
fidivs
push
sub
pushf
add
in
inc
sub
mov
idivb
fdivrl
sbb
js
mov
adc
roll
push
mov
cmpsl
adc
int
addr16
lahf
rol
cld
sbb
mov
es
fucomp
adc
iret
inc
mov
iret
fnstcw
xchg
mov
jp
out
adc
incl
cmpsb
lock
stos
xor
jae
sub
lret
outsl
sahf
out
sbb
xchg
sahf
lcall
xchg
test
fisttpl
and
std
popa
xchg
inc
push
outsb
mov
rorl
call
mov
fdivs
popa
xor
jl
cwtl
cmpb
adc
dec
xor
cmp
mov
les
insl
loop
rcr
mov
imul
xchg
sub
test
cli
and
cli
stos
jp
cmp
test
pop
in
jo
out
jno
pusha
mov
push
pop
pop
cwtl
and
push
xchg
mov
cld
jno
or
ret
xor
test
mov
test
pop
jae
jmp
and
push
push
sub
loop
cmpsb
test
mov
lret
add
ss
pop
fisttps
or
push
push
pushf
arpl
bound
pop
cmpb
sbb
cwtl
inc
enter
fcomi
int3
bound
and
cmp
and
push
pusha
aam
xchg
pop
out
loope
or
cmp
cmp
cld
lock
outsb
inc
lods
mov
fwait
mov
ds
mov
jo
push
mov
repz
test
popf
iret
or
imul
hlt
je
inc
notl
mov
dec
or
fcoms
lock
stc
jmp
icebp
aas
in
das
mov
add
ss
sub
insb
sti
pop
pop
or
pop
popf
adc
push
insl
push
sub
xchg
and
adc
xchg
orl
or
daa
loopne
cli
shll
push
lret
jg
sbbb
jle
add
cmp
fidivs
cmpsl
adc
ja
mov
shrl
leave
dec
pop
lds
mov
popa
dec
cmp
insb
adc
cmp
bound
lcall
inc
lret
dec
push
push
sub
mov
or
sbb
pop
out
push
daa
daa
mov
sbb
ja
push
mov
add
loop
push
jnp
mov
mov
cltd
mov
ret
sbb
aas
mov
inc
lds
mov
repz
mov
mov
ss
or
mov
cld
or
movsb
inc
in
je
jg
dec
cmp
inc
and
mov
rcrl
pop
xchg
mov
mov
xor
frstor
mov
sbbl
sub
xor
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
ja
mov
jmp
jle
aad
rcr
adc
add
fwait
mov
or
dec
sub
and
aam
addl
loopne
jl
xchg
call
test
dec
pop
jg
jo
fisttps
add
xor
xor
mov
jl
inc
xchg
loop
aaa
cmpsl
in
add
xor
xor
mov
imul
adc
xlat
in
cld
js
out
mov
jg
in
fcoms
outsl
imul
arpl
bound
out
xor
and
lock
cmp
jo
xchg
inc
pop
ja
sub
dec
adc
imul
mov
out
sub
arpl
and
pop
and
push
sahf
jo
add
imulb
repz
pop
scas
lea
add
testl
dec
arpl
gs
push
ds
sub
adc
sbb
cmp
mov
xchg
jg
lret
cmp
aam
hlt
mov
aas
sbb
faddl
lds
aaa
jl
or
inc
cmp
dec
inc
clc
push
imul
and
shlb
imul
imul
mov
idivl
decl
and
rcll
adc
mov
ficompl
test
dec
mov
xor
dec
dec
cmc
inc
adc
xchg
ds
add
popa
fbstp
jns
mov
mov
inc
inc
dec
cmp
cmp
mov
imul
fxch
jge
popa
into
sub
dec
movsb
lods
xchg
pop
or
fwait
daa
ret
xor
mov
in
adc
mov
mov
xchg
icebp
into
lahf
out
xor
adc
fs
das
mov
rcr
mov
dec
movsl
dec
idiv
test
popf
cltd
sbbb
cltd
lret
and
jle
cmpsb
nop
scas
dec
lea
ret
into
or
insb
out
and
jecxz
sarl
and
mov
loop
mov
popf
xor
outsl
cmp
loop
dec
jo
repz
imul
mov
pop
mov
pop
fwait
jl
inc
fs
pop
dec
jmp
adc
mov
lahf
enter
inc
jne
pop
xchg
in
popa
hlt
out
in
jmp
jl
mov
arpl
repnz
jmp
imul
lods
or
jmp
shrl
push
and
dec
into
push
lahf
popf
mov
inc
shlb
fsubp
push
inc
loop
lret
and
mov
outsb
daa
imul
adc
pop
and
lahf
sub
push
cli
shlb
lret
mov
or
inc
add
std
push
cmp
shrl
sbb
rcl
push
mov
imulb
loope
inc
stc
lods
stc
sub
jmp
call
cmpl
pmaxsw
adc
mov
and
pop
mov
xchg
xor
aad
lods
mov
shr
mov
xchg
jmp
in
decl
hlt
popa
imul
mov
imul
jo
push
jecxz
mov
mov
xor
jmp
repz
inc
or
pop
inc
and
sub
popf
mov
in
cmp
jle
jmp
jle
ficomps
sbb
or
mov
testb
xchg
sbb
shll
add
pop
aad
shll
xchg
add
sub
popf
pushf
add
mov
cmp
ret
pop
push
dec
int
sub
adc
fistps
jle
fstpl
test
out
add
xchg
adc
xor
fmulp
pop
clc
clc
arpl
mov
call
test
pushw
addr16
fstps
fidivrl
mov
cmpsb
hlt
adcl
sbb
push
sbb
adc
push
arpl
inc
shll
jo
dec
and
jecxz
jno
mov
std
mov
sub
scas
fwait
leave
xchg
and
xor
push
pop
pusha
das
aad
out
pop
add
sti
bound
and
movsl
sbb
xlat
in
out
pushl
subl
test
dec
add
aam
pop
cs
xchg
jne
aaa
xor
sbb
ss
and
roll
and
imul
dec
into
cltd
pop
mov
cmp
testb
loope
nop
and
cli
int
xchg
jecxz
loop
sarl
mov
gs
dec
xchg
arpl
mov
pop
lcall
jb
pop
cmp
push
xchg
je
jae
jl
adc
in
int3
sub
lret
int
fldl
stos
and
clc
cmp
xchg
dec
adc
xorb
adc
pop
cltd
shlb
xchg
xchg
xchg
cmpsl
push
xchg
push
es
ret
out
aam
sub
jne
inc
rorb
xor
inc
push
cmp
bound
push
jmp
sarb
ds
in
push
adc
movl
xchg
dec
lahf
cltd
mov
pop
pop
cmpsl
dec
push
fstl
sahf
push
hlt
adc
cs
mov
add
push
fmull
movsl
popa
mov
add
call
sub
sub
lock
test
push
sbb
jbe
movsb
popf
or
sbb
sti
inc
addl
push
jmp
sub
push
clc
in
push
pop
mov
jne
xor
popf
adc
out
jp
pop
shrb
adc
cld
adc
xlat
xchg
jb
neg
int
popa
stos
jle
pop
mov
loopne
adc
push
xor
cmp
pop
fwait
mov
adc
enter
adc
sub
out
stc
test
jnp
fcomi
adc
adcb
sbb
fsubp
cmpsw
mov
movsw
dec
pop
je
cmp
and
test
xor
ljmp
stos
arpl
xchg
std
bound
sub
imul
push
cmp
insl
pop
out
jne
cmp
sbb
xchg
scas
jnp
xchg
sbb
mov
sbb
cmp
jmp
in
lds
xlat
int
shl
loop
add
arpl
ret
and
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
xchg
sub
sub
rep
sub
incb
cmc
xchg
and
out
popf
add
xchg
jno
xchg
jmp
das
ret
outsb
and
movsl
xchg
push
aas
out
add
out
pop
jo
push
pushf
les
xor
insl
out
mov
bswap
push
gs
push
js
sti
or
cwtl
pop
hlt
sub
mov
lods
addb
xor
addr16
repnz
push
js
pop
decb
sub
icebp
stc
iret
pop
ss
mov
or
repz
xchg
pop
xchg
inc
sub
inc
in
in
es
jle
or
ja
jg
shrb
add
in
pop
mov
push
xlat
test
cmp
enter
xchg
icebp
fwait
data16
xor
pushf
fnstcw
jne
jns
addl
inc
dec
adc
sti
or
dec
enter
or
mov
dec
push
iret
sbb
sbb
lcall
jle
data16
cltd
mov
cmp
insl
adc
inc
cmc
xlat
mov
jle
jl
xchg
xor
cmp
lods
jmp
cmp
js
jge
cmp
mov
dec
lods
xor
jno
insl
hlt
pop
mov
cmp
out
lcall
mov
inc
clc
and
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
cwtl
push
daa
or
jle
sarb
jle
dec
jnp
cmp
jne
pop
ss
subb
xchg
adc
fimuls
test
mov
addr16
imul
fwait
loop
dec
idiv
test
pop
mov
xchg
inc
inc
in
lret
icebp
icebp
push
push
sbb
pushf
fwait
mov
jl
and
jbe
adcb
mov
xor
or
xor
xor
cmpsl
loope
cmpsl
jae
pop
aad
add
inc
inc
mov
insl
fildl
mulb
mov
cmp
push
xchg
pop
rorb
cmc
adc
cmp
cmpsb
pop
xchg
enter
or
mov
pushf
add
cmpsl
and
jg
aam
and
loop
inc
mov
push
call
cmp
dec
and
lods
jb
add
in
mov
pushf
js
push
mov
outsl
xchg
and
std
push
and
xor
mov
push
aam
mov
cmp
push
mov
iret
ret
cld
push
cmc
jge
push
loop
push
fs
bound
jg
push
testb
add
inc
int
sahf
mov
test
mov
sbbb
mov
mov
adc
aam
hlt
js
cmp
sub
out
jo
push
gs
ret
and
andb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
add
mov
sarb
jg
jle
bound
fwait
stos
insb
push
cli
mov
dec
das
rcl
push
xlat
mov
jb
cmc
roll
lret
in
cmp
jmp
mov
fisubs
fsubrl
shl
subl
sbb
lods
jle
jb
pop
push
sub
push
xor
adc
inc
imul
cmpsb
cmp
cmp
mov
sub
cli
push
dec
add
out
cmp
mov
dec
movsl
daa
or
je
call
push
lods
and
xor
push
int
xchg
or
sub
lret
jbe
testl
test
pop
cli
mov
les
mov
movl
test
mov
std
insb
je
jae
sub
test
mov
pop
test
jecxz
fxch
push
mov
and
ljmp
lds
in
mov
adc
or
cld
pop
test
dec
pop
outsb
mov
out
aas
inc
inc
and
jns
pop
and
adc
xchg
or
add
add
adc
faddl
mov
in
movsl
insl
dec
cmp
dec
dec
enter
out
ret
mov
jle
sub
lahf
xchg
mov
mov
mov
jmp
jae
cmp
cli
vpaddw
incl
jle
xor
inc
sarl
jg
jle
adc
lahf
inc
scas
sub
cli
roll
mov
test
out
jne
jge
jbe
stos
loop
jmp
lea
mov
rorl
inc
mov
or
mov
imul
jg
imul
jae
xchg
out
pop
inc
js
add
out
dec
stos
insb
push
popa
xor
sbb
push
mov
mov
movsb
sahf
push
rorl
lods
jbe
add
add
pop
icebp
inc
cmp
shlb
sub
pop
mov
sub
mov
push
test
daa
enter
clc
push
xchg
mov
lcall
jbe
add
daa
icebp
mov
cli
mov
test
inc
outsb
sub
int
es
mov
leave
dec
dec
stc
pop
or
push
daa
loope
inc
cmp
movsl
jmp
pusha
fadds
mov
aaa
movsb
pop
pop
enter
jle
pop
ljmp
arpl
mov
push
pop
out
and
mov
leave
mov
add
bound
mov
fdivr
imul
popa
notb
add
jmp
sub
sbb
xor
mov
lods
xchg
fadd
dec
jo
lea
rcrl
mov
adc
push
adcl
inc
mov
add
inc
xchg
add
add
jmp
push
fsubs
pop
xchg
push
movsl
adc
jle
jg
jle
std
or
test
cmpsl
addb
mov
int3
pop
push
add
cmp
les
ljmp
and
mov
push
dec
xlat
xor
das
daa
pop
lds
cmp
jg
xchg
mov
les
xchg
fiadds
in
sub
inc
insl
int
cmc
or
outsb
sub
push
xor
imul
sub
mov
inc
ret
fldcw
sub
jne
mov
out
inc
adc
out
adc
sahf
sub
addb
bound
mov
jg
and
test
leave
jnp
ja
xor
push
lret
pop
bound
mov
mov
lds
inc
lods
daa
and
xor
divl
imul
adc
xchg
mov
xchg
inc
jmp
cmp
cli
push
mov
cs
out
push
stos
xchg
mov
sub
adc
je
jb
mov
inc
add
fisttps
jmp
adc
or
cmp
test
sbb
push
sbbb
or
pop
repnz
add
jle
add
jge
pop
add
inc
data16
cmp
loopne
movzwl
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
adc
jle
sarb
jle
cmp
pop
add
hlt
jb
adcb
fbstp
call
fnstsw
sbb
add
in
je
mov
inc
add
dec
repz
jle
ja
xchg
jbe
add
movsb
jae
push
dec
pop
insb
call
aad
inc
xor
and
pop
jno
mov
sub
and
dec
adc
sti
sub
aaa
mov
daa
movsb
lods
rcrb
mov
pusha
cltd
enter
cmp
les
push
pop
xchg
loope
imul
pop
fwait
leave
and
minps
aas
mov
and
xor
mulb
push
sbb
cmpsl
lock
fsubp
sub
imul
repnz
pop
cwtd
dec
shll
rorb
sbb
test
fwait
mov
dec
sub
inc
lea
sarl
aas
data16
add
jnp
dec
out
aas
sbb
xchg
mov
mov
jno
adc
adc
daa
cmp
xchg
in
push
stos
arpl
mov
lret
icebp
sahf
sbb
repz
popa
and
and
cmp
int
lret
xchg
mov
repz
hlt
jecxz
push
add
mov
jnp
fcmove
out
and
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
inc
dec
fbld
lds
sarb
jle
loope
pushf
js
mov
sbb
or
push
lcall
or
in
pop
cmp
inc
pop
std
add
ficomps
mov
out
arpl
and
cvtpi2ps
fldt
lods
idivl
mov
adc
adc
ljmp
rclb
stos
fcoms
int3
sub
lahf
les
dec
into
or
or
test
push
cli
imul
mov
adc
sbb
ret
test
push
inc
push
scas
cld
enter
movsb
mov
dec
mov
loop
jb
fisttpl
int
ret
jp
mov
push
iret
pop
clc
adc
pop
mov
aaa
scas
lods
mov
lcall
cmp
mov
outsb
pop
inc
inc
orb
cmpsl
lcall
push
mov
jo
cwtl
jp
push
adc
mov
pop
xchg
cmp
lea
push
push
xchg
xor
shl
push
jmp
movsl
in
out
mov
add
shlb
lock
or
add
sub
rorb
in
adc
enter
cld
dec
and
xchg
inc
cmp
clc
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
add
jle
sarb
jle
dec
xchg
pop
mov
or
shll
cmp
pusha
adc
xchg
pop
xor
inc
push
imul
or
sti
mov
loopne
jno
dec
fisubl
jne
iret
pop
sahf
lea
xor
ret
lods
mov
mov
fldenv
icebp
inc
int3
xor
dec
mov
mov
test
cmpsb
mov
inc
je
jg
fwait
xchg
jge
rclb
lret
push
test
pop
cmpl
les
or
ljmp
shlb
sar
inc
xchg
divb
xchg
jnp
xor
sub
rolb
mov
and
xor
pushf
bound
or
xchg
cmp
pop
fnsave
cmpsb
mov
jne
cmp
and
stos
cmp
ja
ljmp
ds
mov
lods
add
lcall
pop
or
mov
hlt
jnp
inc
inc
nop
stos
adc
lret
cmpb
outsb
aam
sti
sub
jge
fisubrs
mov
inc
push
imul
lcall
ljmp
pusha
jecxz
sti
mov
sub
cmpsb
mov
test
or
dec
add
push
lods
ds
es
sbbb
inc
push
cwtl
fiadds
sub
pop
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
dec
in
mov
jle
sarb
jle
movsb
sub
subl
outsl
mov
xor
adc
js
gs
inc
mov
inc
in
xchg
mov
subb
lock
dec
add
pop
pop
mov
push
test
push
fsubrl
fidivs
mov
mov
out
lock
stos
gs
lock
stos
add
dec
icebp
movsb
xchg
mov
mov
sahf
cmp
mov
cmc
mov
inc
mov
pop
rcrl
lock
cmpsb
xor
add
sarl
sub
arpl
sub
sti
in
or
mov
cmp
popf
jg
push
xchg
xchg
mov
repz
xorl
xor
test
sbb
jp
test
lea
mov
in
jge
jl
pusha
sti
in
pop
and
leave
xchg
dec
arpl
dec
dec
xor
xchg
xchg
int
xchg
or
sti
or
mov
and
jecxz
mov
push
cmpsl
push
insb
subb
push
mov
add
repnz
sti
movsl
adc
sldt
xchg
fiaddl
lock
adc
mov
mov
inc
xchg
arpl
jl
sarl
mov
mov
aas
mov
inc
xchg
mov
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
push
xor
bound
mov
cs
mov
stos
cli
jg
sbb
dec
int3
aaa
cmpsl
pop
mov
lret
mov
hlt
jmp
pop
push
mov
clc
jae
dec
jl
or
in
mov
test
xor
aas
push
fnop
pop
shll
push
lcall
sarl
sarb
in
or
dec
cmp
jo
icebp
outsl
loope
scas
nop
jne
lcall
insb
sbb
cwtl
add
cmp
data16
adc
jle
pop
aad
jmp
jle
push
out
xchg
xor
dec
call
das
mov
cmp
test
inc
pop
inc
adc
push
push
sbb
sub
xor
mov
movb
pop
adc
inc
aad
sahf
sub
aas
inc
jge
pop
ja
inc
movsb
and
lret
out
outsl
xchg
inc
mov
xor
xchg
push
mov
pop
adc
push
scas
fs
jp
outsb
and
test
or
shl
xchg
test
or
mov
jmp
dec
test
or
xlat
push
dec
mov
aas
ljmp
xchg
pushl
jo
inc
mov
sub
enter
pop
sub
fmull
or
shr
add
add
fldl
fstpl
inc
inc
jmp
mov
jg
jle
aaa
call
dec
imul
jne
jecxz
out
stc
or
mov
mov
jo
pop
std
xor
xor
push
popa
dec
stc
pushf
std
jne
pop
fisttpll
adc
daa
mov
scas
minps
xor
iret
dec
inc
movsb
fwait
sti
adc
mov
or
xchg
aas
mov
mov
mov
loope
inc
xorb
jnp
sti
cmc
xchg
std
into
dec
aam
push
xchg
call
imul
je
mov
sahf
or
push
sti
nop
xor
scas
inc
adcb
mov
lods
add
adc
mov
or
hlt
pop
mov
stc
jb
dec
lcall
insl
test
test
fxch
out
imul
addl
mov
inc
and
popa
cmpsl
inc
add
mov
aam
cs
out
mov
mov
ljmp
push
push
in
mov
int3
cmp
dec
lahf
jecxz
push
sbb
sbb
mov
dec
xor
sbb
pop
add
dec
ljmp
sarb
mull
jecxz
mov
dec
scas
pop
sbb
mov
testb
adc
pop
xor
outsb
xor
leave
into
add
xor
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
cmpsl
scas
aam
popa
fdivrl
push
jo
jle
dec
mov
sub
in
cld
mov
jno
sbb
int
movsl
inc
andb
fcoms
jl
sarb
xor
cli
mov
fstpl
lret
int3
xchg
gs
into
dec
xorl
es
in
adc
lahf
push
sbb
nop
jl
and
push
or
insb
mov
dec
into
daa
cmc
sub
std
pop
or
hlt
in
pop
cmp
xor
adc
movsl
ds
push
jecxz,pn
jle
mov
sub
jb
sub
add
cmc
adc
mov
and
mov
or
mov
pop
aaa
mov
out
inc
sub
sub
push
xchg
sahf
call
or
mov
andl
mov
repnz
and
pop
adc
pop
mov
dec
jae
notl
mov
je
cmc
pop
cli
mov
cmp
roll
mov
sub
cwtl
push
lock
xchg
adc
lods
push
xchg
cmp
nop
fs
jbe
cmc
movsb
ja
jno
in
hlt
inc
mov
jno
push
mov
insb
sbbl
mov
xor
add
cmp
mov
ljmp
mov
outsl
into
push
out
mov
xlat
xlat
adc
rcrb
mov
xor
iret
in
adc
push
pop
pop
xchg
sbb
mov
mov
lahf
test
adc
mov
int3
rcrl
shlb
rolb
mov
mov
inc
movsbl
imulb
lds
loop
cmpsb
mov
inc
add
or
outsl
mov
inc
daa
pop
sub
jne
aas
outsl
or
and
sbb
cmp
jo
mov
loope
pop
push
pop
rcl
test
fidivl
cmpsb
std
aas
fcomp
lret
lods
mov
xor
jo
int
jo
push
testl
test
ja
mov
jecxz
ss
into
jno
mov
pop
mov
cmp
sub
mov
jge
jg
into
mov
aaa
imul
xchg
pop
add
mov
cld
cmp
pushw
and
mov
jmp
mov
cmp
xchg
incl
testb
xor
daa
fdivl
ret
ret
sbb
mov
in
test
dec
icebp
push
pop
xchg
out
repz
cli
or
mov
xorl
fistps
xlat
fadds
imul
ja
jns
mov
sub
sbb
stc
pextrw
fwait
mov
sbb
imul
mov
lock
stos
outsl
in
lock
xor
mov
div
mov
and
jmp
out
xchg
imul
bound
push
jno
fistpll
push
jo
jle
enter
xor
push
repnz
ds
xchg
imul
fcmove
aas
popa
jmp
outsb
or
insl
xor
ret
jge
mov
cmpsl
dec
sub
jle
sub
fs
mov
call
inc
out
ret
mov
add
inc
pop
sub
jno
lahf
sbb
popa
sub
rolb
jmp
pushf
addr16
loopne
dec
dec
lcall
in
icebp
les
hlt
cwtl
pop
loope
in
push
std
mov
jnp
inc
mov
and
out
cmp
pop
and
pop
adc
shrb
push
pop
cmp
arpl
dec
daa
push
xchg
inc
xchg
lahf
hlt
push
ret
xchg
dec
pop
lcall
or
mov
pusha
dec
pop
xchg
mov
test
cmp
sbb
pusha
divb
sub
stos
cmp
out
out
jb
sub
in
dec
cltd
lahf
pause
cwtl
ror
dec
call
out
sbb
xor
arpl
je
outsb
dec
xchg
testb
xchg
sbb
int3
clc
fwait
mov
pop
adc
mov
shlb
setle
ljmp
cmpsb
dec
jae
xchg
push
loopne
test
rcll
adc
pop
mov
in
mov
cmpsl
shlb
push
pop
dec
pop
int3
push
mov
adc
mov
mov
lret
lds
lea
in
jecxz
mov
lret
xor
sbb
adc
cmp
sbb
nop
dec
and
mov
cmp
ljmp
aad
mov
xchg
sub
pop
mov
pop
pop
ds
push
jge
js
pop
into
inc
xchg
inc
loope
cmp
clc
ja
jle
jmp
dec
mov
add
dec
aaa
xchg
xlat
adc
jmp
fwait
mov
cmpsl
les
bound
add
cli
addl
xor
inc
add
lret
je
dec
clc
jnp
xchg
inc
and
lahf
daa
lret
mov
daa
sub
shl
push
dec
add
xchg
and
arpl
sbb
pop
mov
xor
mov
and
cs
gs
and
xor
test
in
cwtl
and
push
sahf
jmp
notb
movsb
es
xor
inc
lds
or
inc
sahf
pop
int3
inc
arpl
adc
cmc
call
jmp
xor
xchg
fsub
cwtl
lods
ja
xchg
cltd
lods
test
stos
push
jne
loope
xchg
sub
fdiv
int3
jne
cmp
add
orl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
stos
mov
jle
jg
jle
sti
or
lods
stc
fnstenv
ret
xchg
xchg
mov
pop
add
add
popf
jno
cmc
dec
adc
pminub
sub
lock
in
je
negl
dec
sbb
push
insl
push
xor
and
sub
pop
cmp
push
sbb
mov
pop
add
fld
int3
jl
dec
mov
leave
scas
sub
mov
jne
stos
int3
xor
mov
xorl
pop
icebp
stos
fadds
xor
pop
mov
xchg
add
leave
movsl
mov
loopne
xor
sbb
lock
pop
pop
xor
inc
add
jecxz
adc
fwait
jmp
mov
push
push
jge
test
aad
mov
fwait
test
inc
cmp
enter
in
dec
out
lods
mov
add
mov
clc
mov
icebp
jp
movl
pop
cltd
sub
je
push
mov
test
sbb
mull
out
mov
out
test
scas
adc
jno
aas
pop
dec
push
mov
or
push
adc
push
aam
cmpb
mov
fucomi
aas
pop
shl
jno
xor
negb
rcrb
jg
mov
mov
inc
repnz
fsts
push
jb
loope
int
mov
cs
push
loop
add
and
push
aad
jo
test
sbb
movsl
pop
icebp
jge
sub
dec
xchg
pop
xchg
mov
push
jmp
push
xor
and
mov
xchg
popa
lds
test
mov
mov
dec
sub
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
pop
xor
or
jle
in
adc
sbb
les
imul
xor
test
xchg
sti
add
jno
sahf
mov
sub
pushf
pusha
push
ljmp
test
ret
mov
in
test
andnps
inc
mov
inc
das
inc
cld
mov
inc
sbbb
sbb
int3
jne
mov
push
jb
out
adc
push
sbb
inc
movsb
data16
jb
jno
add
into
jno
sahf
xlat
or
lds
jecxz
xchg
cmc
imul
adc
addl
addb
mov
add
xchg
mov
mov
bound
pusha
or
in
daa
mov
pop
push
dec
pop
cmp
sbb
inc
or
jmp
lret
jecxz
jmp
jmp
aad
add
icebp
ficompl
pusha
call
jb
lcall
flds
cmpsb
sub
stos
xor
inc
jo
insl
push
cltd
fsubrs
gs
stc
ja
imul
ds
xor
cmpsl
cmp
lods
sub
xchg
pop
repz
inc
scas
pop
ss
sbb
push
xchg
fwait
fwait
adc
nop
movsb
es
mov
loopne
lds
jnp
repz
mov
and
je
enter
xlat
jecxz
mov
scas
adc
addr16
sub
pop
out
outsb
add
loope
cmp
inc
mov
lcall
mov
pop
add
aad
pop
fidivrs
adc
sub
adc
sar
mov
lock
imul
push
shll
pop
jnp
cs
sbb
xlat
jns
and
imul
xor
add
leave
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
aad
push
push
jmp
push
cmp
out
pop
pop
mov
aaa
addl
lea
sar
xor
aaa
rcl
push
aas
fcmovne
es
push
dec
pop
pop
jg
repz
fwait
sub
xor
pop
jp
pop
out
pushf
sahf
mov
inc
add
out
push
jo
cmp
rcrl
sarb
daa
aaa
xor
dec
bound
mov
hlt
sbb
aaa
mov
test
cltd
das
jb
adc
sub
mov
ficompl
aad
xchg
mov
cmp
in
dec
cmp
test
mov
lahf
mov
into
jmp
scas
aaa
lods
loope
int
shr
lock
iret
leave
jl
fbstp
jno
mov
push
data16
ret
clc
inc
mov
imulb
jo
mov
xchg
mov
cmp
xor
dec
mov
ret
es
mov
data16
cmp
inc
mov
jne
gs
sbb
fmuls
inc
sahf
dec
sbb
adc
out
dec
mov
incl
add
xchg
fstpl
loope
pop
jmp
loope
pop
jbe
push
pop
in
and
xchg
testb
dec
js
xor
rcr
or
out
sbb
xchg
repnz
adc
adc
dec
xor
inc
mov
shll
mov
stc
inc
out
enter
sub
xchg
movsb
into
ss
andb
ret
dec
dec
mov
or
push
lods
xchg
les
js
or
jb
adc
jle
dec
inc
repnz
mov
xor
lret
mov
lods
adc
pop
mov
lods
add
dec
sbb
test
lret
jnp
fucomp
inc
xchg
lds
mov
mov
int3
and
loop
xchg
inc
mov
orl
mov
cmp
ss
jno
mov
xor
gs
mov
sub
jbe
inc
push
dec
movsl
fxch
jge
add
test
pop
push
movsb
xor
cmp
pop
test
ds
inc
jb
insl
push
mov
pop
mov
pop
dec
xchg
and
scas
jmp
mov
mov
aas
cmpl
add
pop
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
cld
mov
jle
fbstp
jle
test
mov
pop
jns
sbb
jecxz
fnstenv
add
push
add
loop
inc
cs
scas
call
xchg
cltd
jae
ja
xor
pop
xor
test
cmp
mov
or
inc
add
fucomip
and
stos
pop
iret
jbe
mov
ficomps
addr16
in
mov
in
filds
xchg
cmpsb
loop
xor
insl
pushf
push
aad
sar
repnz
sbb
jmp
in
sbb
xlat
std
scas
adc
xor
mov
out
popf
and
mov
aaa
xorb
outsl
pop
test
aas
aad
mov
push
icebp
push
jno
aas
jbe
xchg
push
xchg
sbb
inc
cld
insb
andl
daa
sbb
xchg
xchg
cmp
mov
ret
mov
or
jp
and
push
sbb
add
in
test
push
mov
icebp
add
rcrb
jo
mov
or
addr16
arpl
jns
or
iret
cli
add
iret
mov
lods
ficoml
loop
ret
pop
jle
ja
mov
inc
lods
lock
xchg
dec
add
aam
xchg
xor
in
inc
pop
adc
loop
mov
jg
fsts
sti
call
outsb
adc
xbegin
push
push
push
dec
shr
xchg
jle
dec
mov
dec
fnsave
call
cli
dec
fwait
and
mov
pop
mov
inc
mov
xchg
adc
lret
sub
pushf
loope
aad
fcoms
int3
outsb
and
imul
mov
repz
or
leave
jae
mov
pusha
test
jmp
add
in
jne
sti
push
popa
jnp
jno
cmc
or
popf
fstpt
imul
mov
jns
jle
dec
fildll
pop
sub
jb
scas
adc
call
push
jle
and
out
xor
sbb
ret
mov
xor
jecxz
cmp
jecxz
sbb
xchg
inc
sbb
js
xor
push
outsl
out
gs
and
fwait
cmpsb
inc
cmp
pop
pop
loopne
and
jb
add
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
mov
mov
pop
jg
jle
stos
aam
icebp
lret
adc
jb
jb
add
xchg
shr
or
mov
xchg
rol
cmp
ja
and
pusha
lea
inc
test
sub
inc
sub
enter
inc
adc
mov
jp,pn
sub
or
popa
fisubrs
idivb
mov
push
jecxz
pop
movsb
cmpsb
jno
clc
test
lahf
adc
fisttpll
or
stc
jecxz
xchg
clc
adc
cmpsb
xchg
out
adc
push
sub
add
test
mov
mov
pop
ljmp
pushf
int
rcll
aas
mov
sbb
in
jno
mov
enter
pushl
decb
mov
sarb
ss
cmpsl
mov
push
mov
jno
aad
mov
sub
out
fwait
das
xor
mov
pop
mov
sahf
jae
out
adc
cmpsl
xor
ret
pop
stos
pop
stos
adc
imull
mov
and
push
jge
pop
jge
loope
or
fcmovne
push
or
lret
jno
pop
out
add
lock
lock
loopne
inc
and
icebp
in
outsb
inc
pop
sbb
rcrl
out
and
xor
and
std
sbb
jmp
scas
jmp
js
in
xor
add
loope
fidivrs
push
xchg
lahf
sub
inc
jne
lret
lcall
jns
and
push
out
mov
xlat
adc
jns
pop
and
xlat
test
adc
testb
inc
jl
xchg
xchg
lods
les
cld
or
pushf
cwtl
push
insb
jo
jg
test
mov
adc
lret
xor
or
negb
xchg
jo
loop
inc
cld
xor
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
lea
push
jae
jle
pop
jg
jle
ljmp
push
mov
inc
test
and
test
sub
sub
or
popf
jno
outsl
loope
leave
jge
adc
stos
int3
pushf
mov
mov
push
inc
pusha
sub
jp
cmpsl
mov
add
sub
shlb
sub
adcb
in
js
mov
shrb
jns
loop
add
xchg
pop
out
jnp
push
scas
iret
pushf
push
mov
mov
jnp
je
adc
and
std
movsl
xchg
pop
repnz
mov
jp
sub
pushf
jo
fisubl
sahf
xor
adc
dec
dec
test
stos
les
repnz
movsl
scas
not
movsl
and
out
negl
mov
or
push
aaa
push
jg
test
and
out
popf
shlb
in
into
inc
inc
out
rcll
icebp
js
jg
mov
mov
ja
adc
ja
cmp
pop
nop
sbb
out
dec
out
insb
sub
sub
in
imull
mov
lock
insl
mov
and
cmp
adc
dec
adc
scas
lret
movsb
js
add
notb
addr16
fs
xchg
cmc
and
mov
push
outsb
cmc
and
int3
adc
fcomps
aam
imul
sub
dec
andl
sub
jmp
adc
mov
loop
add
bnd
mov
jae
imul
xchg
popfw
pushf
call
repz
xchg
xchg
sub
fdivrl
int3
inc
mov
lahf
ret
xor
and
inc
lock
jmp
popa
stos
fcmove
push
mov
inc
scas
xor
clc
stos
jg
jno
subl
xor
ret
add
jmp
pop
icebp
lds
fs
xchg
imul
inc
push
out
jle
pop
jg
jle
or
sub
daa
dec
fwait
repz
popf
sbb
dec
cld
popf
push
stos
cmp
cmpsb
repz
cltd
es
mov
test
jecxz
cmp
test
jo
leave
movsb
sarl
adc
cltd
sub
test
cmpl
dec
cld
fimuls
xor
adc
fwait
adc
out
add
xor
lods
je
pusha
leave
push
fisubs
out
jns
pusha
in
jb,pt
dec
clc
das
inc
lods
aam
loope
mov
jge
lret
lods
add
rorb
xor
int3
inc
jl
jecxz
sub
cmpsl
or
or
fidivrl
pushf
xchg
mov
inc
mov
xchg
jo
adc
cmp
or
adc
jle
je
and
cmc
pop
cmp
push
pop
pop
gs
xchg
imul
jno
out
sub
test
sbb
or
mov
sbb
scas
leave
scas
pop
mov
mov
pop
lods
int3
sbb
ss
pop
stc
popa
pop
jmp
mov
enter
sbb
jbe
push
mov
sbb
mov
repz
dec
in
mov
jg
sahf
jo
call
lahf
js
pop
movsb
test
stos
add
lds
mov
pop
or
mov
out
in
data16
cmpsb
clc
aad
mov
jnp
xor
inc
xor
inc
lahf
add
sarl
mov
sub
pop
loopne
mov
test
cwtl
mov
lea
jecxz
and
xor
ja
cmp
xor
jo
dec
xor
inc
jns
inc
rep
adc
jno
aaa
push
or
add
imul
or
scas
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
loopne
jle
jg
jle
cld
cmc
inc
adc
inc
dec
inc
insl
xchg
scas
mov
je
loopne
cmp
inc
outsb
dec
leave
test
fsubs
loope
cmp
jecxz
xchg
mov
mov
fs
shrb
cmc
dec
mov
fadds
inc
les
inc
and
fiaddl
popa
push
mov
scas
cli
push
mov
outsl
or
xor
mov
mov
dec
mov
sbbl
test
lods
dec
dec
scas
mov
pop
mov
push
fnstenv
xchg
xorb
dec
inc
fidivs
push
jp
push
mov
in
ljmp
es
mov
cmp
sbb
push
cmpsb
cltd
xchg
imul
cmp
jmp
adc
jns
pop
cli
fsubl
out
movsb
and
loope
mov
inc
popl
and
xchg
xchg
jp
xchg
hlt
div
push
ret
xchg
pop
pusha
xchg
xchg
lret
mov
fidivrs
push
mov
xor
mov
jge
dec
sti
int3
push
lahf
mov
push
in
sbb
xchg
push
sub
out
pop
mov
xchg
js
add
out
lods
les
sub
aas
sti
cmp
push
lock
andl
out
xor
mov
add
stos
lahf
add
pop
mov
inc
cltd
fisubs
popa
daa
ret
push
ss
mov
or
push
cmp
push
call
push
idivl
jp
xchg
das
sub
insl
pop
mov
xchg
cmp
roll
jb
push
xor
sahf
pusha
mov
dec
pop
adc
dec
stc
test
lcall
jns
js
inc
fwait
andl
cltd
cmp
ret
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
pop
imul
loop
jle
jg
jle
inc
push
enter
popf
push
xor
fnsave
popa
jge
stc
push
fsubl
out
gs
push
out
sub
xchg
jo
mov
jp
push
mov
call
push
push
mov
pop
mov
arpl
jge
push
fisttps
jecxz
call
stos
sbb
add
adc
add
push
shrb
inc
insb
shll
mov
add
cs
mov
and
arpl
neg
subb
out
pop
mov
aaa
pop
jne
lods
push
ljmp
sbb
in
inc
shlb
inc
movsl
jae
mov
mov
push
pushf
enter
repz
mov
jns
push
mov
nop
cmp
imul
inc
xorl
loopne
dec
mov
out
iret
jns
cwtl
fmull
cmp
or
fsubl
in
inc
xlat
fistps
cmp
daa
pop
pop
mov
daa
push
dec
insl
test
lods
pushf
das
adc
shll
or
push
jo
mov
mov
mov
cmc
dec
rolb
sbb
inc
xor
hlt
sub
imul
xchg
into
lods
lahf
lock
xor
cmp
and
addr16
lea
push
cs
test
pop
mov
hlt
mov
mov
fdivrs
test
pop
pop
std
or
cmp
xchg
dec
add
hlt
lock
orl
or
xor
xor
cmp
cmp
testl
ja
xor
push
jo
or
adc
icebp
lods
pusha
aaa
sub
and
xor
leave
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
xor
stc
pop
sti
in
jle
jg
jle
xchg
adc
pop
xor
push
and
out
or
mov
pop
scas
xchg
ja
inc
sbb
popa
sub
out
std
pushf
repnz
adc
pusha
push
or
je
rcr
aas
repnz
ret
push
aaa
mov
push
cmp
xchg
pop
insl
movl
iret
jb
add
sti
test
push
gs
out
push
data16
rcr
rcll
push
and
pop
mov
lret
cmp
pop
addb
or
lahf
mov
js
pop
jbe
scas
mov
xor
adcb
cmp
xchg
mov
in
out
add
aaa
pusha
fcmove
icebp
push
pop
xchg
imul
ret
test
stos
rolb
push
loop
es
or
dec
gs
out
adc
je
mov
fidivl
sub
xor
ja
movsb
cmpsl
scas
pop
xchg
insl
js
pop
cli
cmp
xchg
data16
pusha
pop
sub
dec
jg
aas
int3
mov
sub
repnz
pop
and
mov
mov
fsub
xchg
inc
cld
imul
bound
sbb
test
inc
add
add
add
add
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
inc
pop
mov
jg
jle
fs
shlb
jae
jecxz
and
mov
xorb
mov
jmp
sbb
pop
cmp
pop
push
push
mov
inc
ret
popa
fwait
stc
jg
jp
inc
jo
clc
outsb
and
ret
dec
or
ficomps
add
mov
popa
in
sub
sti
mov
iret
mov
adc
stos
gs
stc
adc
mov
ss
fists
mov
xchg
dec
jl
adc
dec
cmp
call
inc
mov
ret
aas
mov
push
push
mov
cwtl
inc
mov
push
dec
in
inc
outsb
sbb
in
popf
push
in
sbb
out
xchg
in
and
test
les
stos
and
dec
jp
mov
jo
das
xorb
jmp
mov
ds
dec
iret
or
mov
andl
sub
popl
mov
les
jl
pop
sub
mov
jns
je
and
mov
inc
cli
jmp
cmpsb
push
stos
pop
mov
jecxz
into
pop
sbb
mov
mov
xchg
popa
outsb
arpl
push
sbb
cmp
mov
fsubs
sbb
mov
or
jmp
gs
xor
pop
xchg
lods
mov
std
jge
jle
aas
jg
jle
adc
adc
push
adcl
lock
mov
add
lea
lods
mov
cmpl
stos
std
dec
mov
or
loopne
push
fsubl
push
insb
out
mov
das
insb
sbb
push
icebp
popa
or
pop
cmp
movsb
sbb
dec
das
push
xchg
ret
add
mov
sub
or
push
cmp
or
and
cmp
mov
xchg
dec
lds
out
mov
sahf
aaa
fbld
push
push
or
add
enter
cmp
lds
pop
rcrb
xchg
rcll
daa
xor
stos
adc
mov
push
sti
cli
xorl
mov
std
push
pop
jg
push
and
data16
pop
push
fwait
cmp
pusha
int
cs
fsub
mov
mov
mov
mov
or
sbb
cmp
cmpsb
fstps
rclb
sub
adc
aam
frstor
mov
ret
ljmp
mov
imul
push
or
mov
inc
push
sub
cmp
int
mov
jne
sbb
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
addb
mov
clc
jle
aas
jg
jle
pop
mov
pop
xchg
es
add
xchg
arpl
mov
push
arpl
sbb
and
lods
push
mov
dec
adc
pop
xlat
fsub
int3
in
push
inc
incb
movsl
movsb
mov
push
xlat
cmpsb
scas
inc
xor
lret
out
push
leave
fidivs
push
getsec
push
shl
cmp
data16
mov
data16
out
jb
fcompl
into
sbb
lret
rorl
aad
cmp
insb
imul
and
pop
xchg
fldenv
xchg
fdivs
stos
or
loopne
or
or
adc
xchg
clc
push
incb
pop
xchg
out
jmp
pop
aas
cwtl
daa
cli
mov
lds
cmpsl
ret
mov
cmp
xor
sub
or
outsl
dec
push
das
mov
test
pop
push
sahf
xchg
push
mov
andl
pop
add
enter
stos
mov
sub
sbb
pop
int3
lcall
mov
mov
in
sub
lcall
lods
dec
stos
mov
lret
jne
or
add
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
test
cmp
stc
jle
aas
jg
jle
cmp
push
pop
icebp
lahf
add
jg
lret
sub
xchg
add
jmp
sub
rorb
or
imul
out
lock
push
cmp
cmp
fildll
dec
xchg
mov
stos
stos
in
test
pop
add
lret
loop
fwait
and
mov
addr16
xchg
or
xor
out
lahf
pushf
push
mov
lcall
pushf
cmp
add
pop
stc
mov
or
out
pop
pushl
jns
mov
mov
jl
push
mov
hlt
scas
jnp
mov
adc
adcl
les
out
rorl
and
aaa
cmc
pop
rorb
xchg
mov
jge
xor
outsb
jl
repnz
and
pop
dec
out
les
mov
mov
pop
sub
outsl
pop
mov
mov
sub
cld
out
jbe
adc
pop
or
mov
stos
call
inc
push
sub
pop
fmul
mov
outsl
mov
negl
dec
inc
mov
imul
les
ret
cmp
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
fstps
pop
int3
mov
jle
aas
jg
jle
pop
pop
xchg
mov
out
stos
sahf
xchg
hlt
fildll
ss
push
push
xchg
ret
nop
out
popf
fadds
ja
mov
lea
lcall
sbb
notl
imul
gs
add
cmp
hlt
es
mov
add
shrl
push
cmpsl
orl
fisubrl
or
int
sahf
je
insb
push
xor
dec
js
sub
xor
sub
sub
add
and
add
xchg
inc
cmp
imul
add
lds
aad
lret
dec
lods
jmp
xchg
scas
dec
movsl
pop
pop
iret
shll
cmp
stos
cmp
adc
shll
lods
clc
dec
arpl
insl
call
push
xchg
xchg
jno
or
and
jp
repnz
jp
mov
ficoms
mov
add
or
nop
testl
out
mov
rolb
mov
jo
sub
psubw
iret
sti
adc
movsb
lea
lahf
leave
push
jecxz
dec
outsl
js
inc
in
mov
sbbl
jmp
fmull
cld
popf
mov
scas
adc
cld
jle
aas
jg
jle
data16
dec
push
sub
int3
in
jmp
loopne
leave
out
pop
xchg
xchg
fs
inc
mov
lahf
inc
test
mov
popf
aad
lea
adc
insl
out
setno
add
xor
dec
sub
iret
les
int
fcmovbe
jne
inc
shl
mov
push
pop
fsave
adc
cltd
out
inc
pop
sub
and
enter
popa
adc
cmp
pop
adc
add
int3
jnp
xchg
xor
push
mov
int3
pop
xor
pop
add
or
pusha
dec
cmpsl
push
pop
pop
test
arpl
mov
pop
clc
jb
rorl
pop
nop
mov
loopne
adc
pop
adc
push
cltd
sbb
mov
inc
or
bound
mov
or
mov
push
sbb
lret
xchg
cbtw
xchg
add
sbb
hlt
into
mov
xor
pop
adcb
cmpsl
shl
dec
xlat
xchg
orl
fs
outsb
adc
imul
mov
mov
cmp
mov
push
outsl
out
sbb
es
imul
popf
and
push
mov
adc
xchg
cmpsl
add
mov
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
jmp
std
jle
aas
jg
jle
cwtl
xor
xchg
pop
inc
test
dec
xchg
sub
mov
push
cmp
sti
movsb
std
dec
jl
insl
pop
lods
cmp
and
jg
push
shlb
aam
iret
sahf
bound
or
xor
enter
inc
test
setno
push
inc
push
jle,pt
fisubrl
cltd
ss
mov
out
jle
xchg
and
jmp
bound
fnstsw
push
ljmp
popf
cmp
inc
fs
mov
fdivr
test
push
and
lods
fwait
sbb
pop
shr
cwtl
call
dec
lea
aaa
lods
xlat
mov
sub
aad
sub
je
adc
push
outsb
jo
dec
jnp
out
int
subb
push
fmuls
data16
es
sbb
popa
inc
sbb
and
sarb
mov
pop
xchg
std
out
gs
or
ds
pop
push
and
jbe
mov
cwtl
repz
lret
sub
out
inc
push
jp
test
adc
lods
mov
loope
pop
imul
or
in
test
in
push
mov
fidivrl
lods
push
sarl
dec
pop
test
mov
bound
mov
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
pop
mov
cmpsl
jg
jns
and
mov
dec
and
jle
outsl
loopne
jns
cmp
jb
jne
xchg
sbb
jnp
inc
sahf
fs
mov
fcomps
sbb
add
xor
pop
dec
fcompl
fiaddl
dec
popf
in
add
pop
fisttps
jmp
xchg
js
popa
leave
jmp
adc
pop
xchg
dec
shlb
loopne
or
dec
rolb
icebp
into
stc
fs
lret
or
cmc
fisubrs
roll
xor
jg
and
adc
ret
data16
in
divb
in
xor
pop
subl
jno
sbb
push
testl
cwtl
outsb
mov
dec
adc
cmp
xlat
hlt
stos
xchg
test
mov
enter
cmp
cld
jmp
inc
or
popa
insl
lret
insl
add
mov
cltd
lret
mov
stos
pop
das
and
loop
sub
cmc
mov
hlt
or
aas
adc
mov
je
rol
loop
adc
lds
jg
subb
sub
pop
adc
fdivrl
adc
add
cltd
push
lea
jmp
and
and
sti
sub
mov
jle
xchg
inc
dec
push
out
sub
jp
sysret
pop
sarl
mov
xchg
inc
fdivr
xchg
lods
rclb
fidivrl
arpl
jbe
out
fdivr
in
in
jae
or
rorl
sbb
xchg
mov
inc
mov
inc
cld
incb
mov
dec
outsl
inc
mov
push
das
shr
aaa
in
sahf
sbb
jmp
jne
mov
pop
sub
imul
jns
fstps
je
push
dec
pop
test
out
cmp
movsl
lock
xor
clc
addb
test
cld
cmp
cmp
cld
loopne
clc
out
jbe
xchg
cmpsb
lret
in
scas
dec
dec
mov
xor
int3
pushf
jge
nop
adc
repnz
ds
out
sub
dec
call
or
stos
imul
jae
sbb
cmp
mov
inc
xchg
repnz
fisttpl
or
or
rcr
xchg
lret
andl
add
dec
dec
rclb
lret
aas
add
cvttps2pi
insl
cltd
sub
rclb
jne
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
push
dec
adc
cwtl
mov
sub
pop
cmp
out
push
clc
push
pop
mov
pop
idivb
pop
add
cli
shrl
and
addr16
or
int3
jle
fwait
xchg
fwait
aad
inc
dec
jge
shll
xchg
lret
ljmp
and
shrl
inc
ljmp
daa
rcrb
push
out
cs
imul
lods
add
push
jb
dec
mov
or
addr16
mov
scas
test
fldcw
pop
incl
mov
pop
and
jl
push
add
sbb
pop
dec
mov
movsb
in
addr16
lcall
pop
jnp
fidivs
shll
rcrl
clc
popf
add
test
in
jno
imul
call
into
push
movsb
negb
jae
cltd
jns
test
out
loop
insb
cmpsl
mov
outsl
xor
sbb
sbb
ja
add
imul
ret
imul
xor
pop
mov
xchg
aaa
inc
pushf
bound
pop
inc
sub
mov
mov
shl
jae
lcall
in
into
test
jbe
or
push
jb
dec
clc
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
adc
jle
aas
jg
jle
sahf
cmp
xlat
mov
repnz
cltd
arpl
add
mov
mov
and
adc
jecxz
daa
pop
and
mov
and
dec
je
xchg
add
int
inc
dec
cmp
push
insl
inc
pushf
jmp
iret
cmpb
xor
xchg
jp
inc
pop
fdivl
jb
xchg
lcall
adc
mov
jmp
jno
lret
mov
push
int3
outsb
jo
fistps
lods
and
xchg
movsl
mov
cmp
stos
fptan
clc
mov
cmc
mov
add
out
mov
test
mov
lcall
rcrb
xchg
cs
bound
mov
cli
adc
xor
jae
pop
frstor
xlat
hlt
push
outsb
push
hlt
mov
and
addr16
ror
repz
adc
int3
aas
ja
repnz
xchg
or
adc
xchg
imul
test
es
imulb
dec
cmp
jg
lea
cltd
xchg
in
mov
pop
add
out
out
cmp
in
insb
sbb
sub
das
mov
mov
push
insb
bound
mov
fidivrs
or
inc
or
in
rorb
jbe
add
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
scas
jae
pop
add
mov
into
inc
pop
adc
sub
jo
mov
inc
lahf
xchg
sub
lock
mov
mov
inc
pop
mov
cmpsl
pop
filds
dec
sbb
fwait
jmp
stos
insl
stos
ficoms
insl
mov
inc
sub
push
rorb
fists
rcrl
cs
or
pop
dec
dec
lret
int
std
lret
shll
jmp
jae
xlat
jbe
nop
mov
push
scas
add
les
mov
jb
jp
cmp
daa
aaa
add
popf
push
pop
popf
movsl
clc
cmpsb
fsub
bound
xlat
lret
fiaddl
xorb
dec
imul
and
dec
movsl
jmp
fs
popf
popf
xor
xchg
and
mov
xor
icebp
pop
or
cmc
and
mov
inc
xchg
jb
into
subl
jno
popf
fs
ja
adc
jbe
aas
int3
out
mov
mov
adc
push
jg
add
into
jb
fstpt
rorb
mov
or
xor
mov
ja
in
sarb
pusha
adc
mov
sbb
add
and
lods
lret
movsl
sub
rorl
jle
jg
jle
std
mov
mov
jl
and
jne
pop
or
cmc
arpl
xor
mov
adc
cli
roll
scas
call
jmp
jmp
outsl
add
cmpsb
daa
and
es
ja
movsl
mov
push
fdiv
popf
mov
add
flds
clc
adc
mov
push
push
es
sbb
fcoml
sbb
lret
cmp
leave
dec
fisttpl
add
add
lret
int3
pushf
and
or
mov
movsb
push
popa
xor
sbb
pop
mov
add
or
testb
jmp
dec
mov
add
out
sbbb
stos
or
insl
inc
jl
and
repnz
dec
divb
xchg
js
pop
lret
adc
imul
sub
in
in
f2xm1
lods
xor
out
xlat
add
or
pop
fbld
pop
xor
iret
test
sbb
mov
je
dec
loopne
rol
fiaddl
incb
insl
jb
push
je
or
not
ss
cmp
aaa
jg
lahf
or
in
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
and
or
jle
aas
jg
jle
mov
ljmp
cmp
mov
lds
loop
scas
std
sarl
leave
adc
mov
mov
aaa
mov
lods
ss
push
roll
adc
sbb
dec
or
test
mov
inc
ficomps
iret
lcall
or
nop
frstor
lods
pop
iret
adc
mov
sbb
imul
sbb
cs
ljmp
dec
std
icebp
jb
cs
xchg
leave
add
cmp
or
cmp
xchg
dec
add
mov
std
push
test
mov
cmpsl
sub
xchg
or
dec
jge
lds
pop
xchg
xor
ds
mov
dec
fsub
icebp
cwtl
scas
mov
mov
xor
dec
jnp
inc
hlt
imul
cmp
shll
pminub
rcr
xor
or
bound
xor
lret
xchg
mov
test
push
inc
repz
jge
loopw
cld
sbb
jge
mov
addl
mov
mov
jmp
test
test
jge
cmp
or
lret
jle
jg
jle
or
dec
mov
fwait
stc
aad
out
idiv
xchg
mov
inc
mov
jno
bound
gs
clc
add
cmpsl
cmpsl
leave
cmpsb
jle
fnstcw
jg
enter
cmpsb
in
add
fdivrs
or
pop
test
addl
lock
dec
push
sbb
mov
xchg
popa
sbb
mov
in
inc
and
xor
adc
inc
or
mov
cmp
stc
push
pop
add
sub
sbb
inc
cmc
shrl
repnz
sub
in
mov
add
arpl
fsubrs
in
sbb
les
jmp
or
mov
lret
cmp
roll
test
dec
out
cmpl
push
outsl
or
test
mov
andb
add
mov
add
test
fwait
nop
jbe
adc
fsub
sub
cmp
jmp
push
popa
data16
jecxz
jo
faddl
mov
push
dec
fnsave
mov
xor
shl
es
imul
sub
lods
push
and
sarl
ret
add
add
jge
out
mov
jo
mov
jle
mov
pop
dec
sahf
lret
push
and
add
sbbl
lods
sub
fcomi
sbb
jns
pop
out
fldl2t
jbe
loop
xchg
mov
sar
jbe
das
je
mov
out
fmul
dec
and
jae
and
xchg
mov
aas
mov
inc
lret
or
xchg
popf
push
mov
addr16
stos
cli
pop
in
push
js
test
mul
mov
mov
lret
fldt
sub
icebp
mov
jns
vpsubw
call
flds
adc
cmp
sub
jge
cmpsb
imul
adc
aam
sub
addr16
add
jb
push
ret
hlt
sbb
cmpsl
and
mov
sbb
addb
pushfw
in
mov
and
cld
jnp
cmp
xor
jno
scas
insl
cmp
enter
pusha
stos
or
cs
out
mov
or
and
dec
or
leave
ss
pop
shrl
ss
andl
dec
pop
cmc
fwait
push
imul
andb
jle
push
out
cmp
dec
rcrb
fstpl
mov
xor
add
mov
imul
mov
jmp
inc
sbb
gs
jae
call
mov
aas
jg
jle
jecxz
cmpsb
test
jle
inc
push
and
pusha
adc
js
xorl
sti
add
cmp
cmpl
adc
mov
xor
mov
loop
insl
stos
mov
xchg
lea
jb
lods
jmp
les
mov
and
xchg
pop
out
scas
jbe
loop
dec
cmpsl
inc
repnz
and
aas
adc
jno
jae
xlat
iret
addr16
fldt
aaa
jge
cmp
or
sbb
fcmove
in
rcrb
popf
imul
lcall
xorl
out
dec
pop
into
adc
jle
mov
or
inc
stos
push
mov
xchg
adc
sti
pop
mov
xor
xlat
test
insb
inc
mov
addr16
sbb
aam
mov
adc
jno
das
jl
jg
sbb
lods
cmc
push
push
pop
sahf
mov
adc
in
ja
cmpsb
dec
mov
das
mov
in
dec
shl
imul
fnsave
lahf
mov
out
dec
push
sub
fcomip
daa
sbb
inc
lcall
push
rcll
jg
mov
test
add
rorl
or
enter
add
call
push
adc
inc
addb
or
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
subb
cmp
aas
jg
jle
pop
lea
rorl
xchg
out
rclb
clc
andb
rclb
cmp
int3
jne
jl
pop
pop
mov
mov
clts
pop
mov
lret
inc
mov
andb
imul
xchg
aad
cmp
xchg
mov
or
mov
repnz
enter
cli
cltd
inc
ja
xchg
push
mov
adc
icebp
loop
push
scas
dec
mov
pop
clc
pushf
insb
fwait
iret
jg
enter
fucomp
in
ss
test
jno
popa
pushf
lcall
pop
sub
enter
inc
es
sub
nop
out
push
dec
xchg
cmp
cld
push
cmc
psrlq
clc
and
andb
cs
and
cmp
adc
or
add
add
popf
movsl
jno
lds
mov
test
add
pop
lcall
mov
shlb
add
in
imul
not
pop
call
lods
out
test
out
adc
ficomps
sti
add
sbb
add
or
test
add
push
or
xchg
mov
mov
xor
lea
mov
mov
jmp
cs
jecxz
jnp
aad
lock
adc
mov
aas
jg
jle
insl
push
movsl
pop
in
cmp
je
scas
adc
loop
push
aad
je
cmc
jl
bound
xor
insl
inc
and
sarb
in
xchg
push
daa
fnstcw
xchg
stos
pop
pop
sahf
mov
enter
pop
ja
cltd
andl
or
pop
mov
std
and
cmp
xchg
pop
sub
mov
sahf
popf
pusha
jge
stc
js
jb
push
fcoml
hlt
inc
fcomps
sbb
stc
xchg
or
cmpsb
std
fdivr
ret
xor
or
les
adc
jae
stos
leave
cmp
movsl
test
arpl
lcall
dec
lahf
sbbb
gs
out
fldl
push
js
fdiv
fsubrl
jmp
andb
push
sbb
fs
cmp
ja
inc
test
insb
xchg
mov
xlat
mov
call
pop
jns
jbe
dec
mov
jb
in
adcb
movb
dec
ds
jge
cmpsl
pop
mov
xchg
xor
push
push
mov
fstps
jecxz
clc
jp
push
and
cli
and
mov
xor
add
imul
jmp
into
jb
pop
inc
pop
fisttpll
imul
jle
popa
adc
push
imul
push
mov
xor
cld
mov
push
adc
leave
jmp
roll
add
push
sbbl
clc
sbb
or
and
mov
inc
xor
and
jnp
inc
rol
xlat
dec
aaa
jmp
in
cwtl
fsubrs
jbe,pn
test
insb
mov
arpl
push
push
or
int3
clc
push
mov
jnp
pop
test
mov
cli
scas
pushf
rcl
mov
jecxz
adc
jl
cmpb
jnp
add
sub
dec
xchg
xor
rorb
dec
aam
push
xchg
popf
lcall
loop
pop
cmp
sub
dec
lock
pop
cmp
test
jno
ja
mov
mov
sarl
or
scas
cmp
xor
test
adc
push
cmpsl
push
pop
mov
das
add
pop
mov
or
jno
loop
ret
jae
in
pushf
push
push
cmp
push
shll
and
sub
cmp
icebp
inc
ljmp
or
ljmp
cld
rcrb
push
cmp
sbb
add
pop
add
add
idivl
push
jp
sti
inc
aaa
mov
aas
sub
jle
aas
jg
jle
and
xchg
and
mov
movsl
lds
bound
pusha
sub
imul
es
sub
pop
mov
or
pop
adc
cli
mov
shll
and
mov
test
aam
mov
lods
push
shl
popa
xor
mov
fwait
pop
push
add
pushf
push
rorl
mov
cmp
xlat
xchg
fiaddl
mov
xchg
mov
cmp
in
fdiv
pop
imul
cmp
dec
imul
cmp
inc
mov
rclb
jbe
mov
adc
les
pop
lds
pop
xchg
filds
popa
test
mov
loope
lea
test
inc
sbb
xchg
int3
sub
cltd
mov
je
shll
and
cmp
mov
fisttpl
test
popf
in
mov
enter
icebp
sbb
mov
lods
hlt
adc
push
cmp
or
cmp
in
push
imul
mov
jle
js
pop
inc
or
fwait
add
xchg
mov
push
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
ds
jge
add
jle
push
es
jp
stos
push
dec
add
enter
pop
mov
dec
jno
jnp
cmp
lret
fnstsw
pop
subl
fcomps
icebp
lret
xchg
clc
cmp
jmp
pop
in
shlb
hlt
mov
call
or
outsl
jp
cmpsb
cltd
mov
sti
mov
shll
inc
sub
fwait
sti
push
js
nop
cmpsl
stos
pop
add
imul
jns
push
cmp
pop
push
in
push
adc
sbb
add
lock
mov
adc
ja
jge
and
mov
std
jne
or
aam
lcall
add
jecxz
dec
out
dec
xor
dec
sbb
xor
rep
push
mov
mov
cmp
push
bound
push
mov
jbe
test
dec
ret
push
and
xchg
stos
jns
addr16
cmp
add
pop
lods
movsl
bound
cmp
dec
mov
jbe
cmp
cmpsl
xchg
aam
cmp
lods
xor
cwtl
pusha
jnp
xor
mov
out
pop
push
cwtl
mov
movl
movsl
dec
lock
mov
pop
add
shll
fucomi
pop
add
add
arpl
imul
mov
fs
cmpl
gs
or
repnz
pushf
les
adc
xchg
mov
nop
sti
and
push
and
lds
repz
test
aam
mov
lahf
push
mov
push
lea
sbb
xchg
sub
xor
xor
xlat
call
loop
xchg
outsl
and
sub
mov
lock
into
mov
fimull
and
xor
jb
push
repz
or
ret
jno
xlat
rorl
into
pop
loop
jg
xor
xor
mov
xchg
add
mov
aas
into
mov
addr16
add
inc
ljmp
mov
push
xchg
fnstsw
push
das
adc
fnsave
daa
adc
addb
pop
movsl
lods
jl
xor
mov
adc
pop
ret
stc
xorb
or
arpl
cld
fs
aam
aaa
xchg
push
dec
dec
insl
mov
dec
mov
mov
push
ds
cmpsl
int
out
cmpsl
dec
cltd
repnz
jg
mov
and
shrb
xchg
aas
pop
sub
inc
jno
js
or
dec
inc
or
fwait
mov
ljmp
in
sti
inc
jmp
jae
aas
mov
cmp
mov
ja
addl
jle
loop
repnz
fnstcw
cmp
add
add
insb
test
pop
testb
idivl
push
leave
enter
jp
xor
mov
sub
or
scas
shlb
xchg
out
loope
sbb
sbb
icebp
xchg
push
fnstenv
cmc
lds
fs
mov
in
hlt
ret
lcall
shrl
mov
shr
sbb
or
push
jnp
adc
ja
lcall
testl
jb
clc
cmp
push
xchg
xchg
push
in
dec
jno
inc
jmp
test
jnp
in
jle
cmpsl
pushf
loopne
gs
cs
das
fidivl
into
stos
sub
sarb
cmp
push
addb
adc
sarb
xorb
inc
call
int
cmp
stos
orl
daa
lock
dec
jnp
and
enter
push
pop
or
lods
js
xchg
rorb
push
xor
je
jmp
xchg
mov
mov
out
mov
ret
inc
cmpl
jg
jle
mov
stc
jne
sub
jle
mov
mov
sti
in
or
shll
xchg
out
mov
xchg
inc
cld
sbb
into
or
popf
les
push
mov
fwait
out
mov
cmc
sbb
popf
std
outsl
paddusb
mov
mov
cmpsb
leave
loopne
fwait
cmp
cmp
push
pop
sbb
imul
adc
adc
adc
jne
ret
jp
sbb
popl
rcll
xchg
xor
dec
jae
pop
inc
mov
and
imul
mov
mov
in
mov
sbb
mov
fs
shlb
fwait
aas
or
mov
cwtl
lea
hlt
push
or
adc
xor
pop
ret
push
push
out
andl
in
clc
and
pop
es
iret
movsl
lods
hlt
push
mov
add
arpl
push
xchg
xor
pop
and
cmp
xor
adc
cmp
fists
fisubrl
ja
addr16
dec
dec
mov
aaa
cmp
and
add
add
sti
lret
jns
rclb
sti
clc
add
jg
jle
fwait
jg
cmp
pop
pop
nop
sbb
jns
pusha
cmc
lret
faddl
shrb
aas
call
fsubrl
jns
mov
shll
and
sub
popf
mov
out
hlt
in
dec
jle
pop
jns
add
xchg
or
inc
fs
and
out
jg
jb
cmp
lods
mov
hlt
xchg
in
xor
or
rcrl
adc
or
dec
cmp
adc
lahf
mov
mov
lock
paddsw
xchg
adc
movsb
cmp
mov
mov
cmp
popf
add
push
popf
addr16
inc
int3
stos
in
insb
xchg
out
scas
fld
fistl
je
jl
jbe
ds
dec
imul
add
inc
xor
xchg
mov
sbb
dec
aas
inc
je
daa
inc
popf
cmpsl
or
popa
fiaddl
addr16
push
into
mov
add
push
pop
sbb
js
sti
jns
test
mov
test
push
into
das
xchg
xchg
ror
mov
mov
push
int
out
dec
xchg
mov
mov
and
dec
fucom
mov
je
jmp
ret
jbe
or
add
inc
xchg
jmp
ss
or
mov
jmp
pop
movb
jle
ret
daa
pusha
ret
popa
inc
mov
sub
das
repz
sbb
jge
push
ljmp
insb
push
mov
mov
mov
xchg
inc
ret
sbb
or
sub
xor
mov
cmp
aam
lods
pop
or
jae
stos
inc
push
mov
in
cmp
insb
and
faddl
mov
lcall
stos
cli
scas
daa
pop
pop
lret
pop
rorl
in
out
cmpsl
leave
or
push
mov
xlat
mov
mov
mov
or
xor
cmp
fwait
pop
scas
bound
jb
sarl
pop
popa
loope
xchg
sub
mov
aas
fstpt
and
aaa
jb
mov
andl
mov
add
inc
imul
enter
jge
ret
mov
mov
out
push
mov
test
push
inc
xchg
cwtl
lahf
mov
jp
outsb
sahf
pop
mov
mov
movsl
push
cmp
jp
subb
in
add
insb
imul
fbld
and
xor
es
adc
push
xchg
pop
adc
fiadds
pop
dec
arpl
xor
flds
in
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
sar
sbbb
aas
jg
jle
stc
call
inc
jge
jns
xor
push
jae
out
outsb
arpl
les
xchg
scas
lret
jl
and
cmp
ja
or
lret
fwait
out
inc
cmp
adc
fidivrs
and
mov
push
js
pusha
pop
leave
add
mov
mov
iret
jb
push
movsl
mov
jmp
lock
and
xlat
fndisi(8087
xor
xchg
scas
push
sbb
and
ret
sub
int3
fs
jle
mov
jl
popf
stc
aam
mov
jg
jmp
into
fsubr
add
ja
cmp
addr16
jecxz
push
arpl
mov
addr16
das
in
and
scas
dec
sbbl
cmp
in
pop
jae
mov
popf
test
jge
clc
jae
test
int
movsl
mov
test
push
xchg
in
sbb
jl
adcb
adc
fiadds
cmc
push
outsl
cld
test
add
mov
pop
xorl
jbe
jle
xor
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
