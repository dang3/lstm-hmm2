push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
jns
lods
adc
adc
int
adc
mov
dec
xor
lea
push
repz
lods
or
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
btc
pop
xchg
push
negl
enter
mov
adc
imul
xchg
lret
sub
add
sbb
orb
lahf
sbb
pop
mov
mov
andl
lcall
pop
movsb
xchg
mov
fcmovnu
faddl
lods
xchg
sub
add
decl
jnp
fld
popa
adc
sti
and
addr16
mov
xchg
lds
pop
mov
sbb
inc
aas
scas
jge
lds
dec
or
xor
rorl
and
mov
sub
pop
or
shll
ret
pop
shlb
inc
test
int3
leave
in
aaa
adc
sbb
pop
test
xor
jne
jge
mov
add
dec
jmp
inc
pop
ljmp
jno
mov
fsubr
inc
aas
mov
sbb
inc
mov
jns
or
xchg
orb
aad
icebp
rcll
pusha
mov
push
inc
outsb
and
and
xor
push
sbb
push
or
sbb
cmc
outsl
lds
shll
sub
shrb
inc
mov
mov
cli
add
mov
out
lock
aad
adc
lcall
outsl
adc
sbb
jmp
add
inc
sbb
add
clc
scas
ja
cmp
inc
fs
rolb
push
shll
pop
add
mov
dec
push
fidivrl
sti
xor
pushf
xchg
repnz
sbb
lea
sarb
xor
fisubrl
xchg
adc
or
ja
jmp
add
xchg
sub
xchg
sbb
jne
sbb
mov
rcr
and
ficoms
xchg
sub
push
pop
es
xchg
repnz
arpl
and
mov
insl
mov
xor
and
repnz
push
pop
call
fs
stc
bound
or
sub
xchg
shlb
mov
lea
clc
adc
or
mov
imul
mov
sbb
lods
jo
jno
mov
pop
movsl
jl
lcall
push
dec
and
in
mov
ss
popf
mov
iret
inc
xorl
ficompl
cmc
lret
adc
mov
popa
adc
push
mov
test
jne
jmp
jmp
pusha
repz
out
insb
fwait
push
push
out
mov
icebp
sbb
xchg
pop
sub
icebp
shll
xorl
jecxz
je
push
xchg
or
loop
sub
fwait
adc
inc
mov
inc
hlt
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
mov
adc
adc
adc
adc
adc
fbld
movsl
jge
add
xor
rclb
xchg
or
movhps
out
gs
call
mulb
mov
push
mov
loop
jo
lret
into
mov
xchg
jge
mov
or
push
pusha
cvtpi2ps
dec
xchg
test
sahf
in
repz
dec
scas
add
xchg
inc
lds
xor
in
loope
enter
loope
stos
in
and
ret
mov
fwait
sbb
or
dec
or
or
daa
mov
push
sbb
adc
mov
push
mov
lcall
addr16
or
adc
sahf
std
xlat
pusha
ss
hlt
addl
push
pop
jle
push
add
or
insb
imul
int
push
shll
mov
bound
and
icebp
inc
mov
movsl
xchg
xor
test
pop
clc
lcall
out
push
push
adc
dec
lds
push
mov
xchg
cmp
or
mov
add
mov
push
jg
insl
ss
jmp
adc
push
mov
sbb
sbb
and
mov
xor
xchg
jbe
push
xchg
jmp
rcr
mov
lret
adc
mov
mov
and
adc
or
push
mov
fwait
and
in
int3
dec
nop
inc
fsubrs
ljmp
aam
fwait
cmpsl
scas
pop
mov
sbb
std
mov
jne
mov
setge
hlt
jmp
xor
jle,pn
mov
mov
loopne
push
fbld
pop
loopne
push
movb
lcall
cmpsl
mov
inc
ljmp
pop
imul
xchg
aaa
cmp
jle
push
cmp
addr16
cmpsb
outsl
mov
pop
hlt
call
and
outsl
mov
insl
jmp
push
xchg
fistps
sub
lret
jecxz
mov
jnp
fldl
jecxz
mov
test
mov
test
mov
or
adcb
dec
fisubs
in
mov
andl
ja
and
cld
fisubrs
lcall
sahf
mov
cli
and
in
je,pn
jnp
dec
inc
push
xchg
jbe
mov
js
lock
decb
or
mov
dec
pushf
ds
add
cmc
hlt
cmpsb
or
mov
mov
aam
cmc
and
xor
std
push
pop
stc
sarb
and
imul
sbb
in
shrl
cmpsl
adc
cmovge
movsb
insb
push
gs
pop
pop
aas
mov
mov
push
data16
cmpsb
outsl
scas
jge,pt
cmp
ds
xor
push
shrb
aam
lock
mov
dec
iret
sub
sbb
dec
std
cmp
sub
jo
ds
or
adc
push
stc
and
jae
pop
ljmp
rcl
lcall
repz
out
pcmpeqd
imul
sub
negb
mov
inc
daa
sub
mov
enter
leave
sahf
pop
jecxz
loop
pop
scas
cmp
mov
fisttpll
lds
ss
ficoms
les
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
lcall
adc
adc
adc
lock
insb
mov
and
mov
fistpll
adcl
mov
add
not
xchg
push
push
jmp
sbb
dec
mov
pop
cpuid
test
xchg
mov
hlt
clc
jne
stos
mov
cmp
mov
cmp
push
push
adc
pop
daa
in
in
lock
data16
hlt
adc
mov
add
stc
add
js
cltd
lahf
sbb
and
cmc
aas
das
push
mov
mulb
repz
jne
mov
stos
fwait
repz
enter
dec
sub
pop
fiaddl
ret
pop
jge
jns
dec
jg
cmp
add
push
sbbl
mov
pop
adc
mov
fcomip
add
les
fdivrs
jge
jno
sahf
inc
dec
adc
movsb
dec
rcll
mov
push
aam
cmp
mov
xor
push
daa
gs
sub
lea
pushl
jbe
ds
mov
jmp
and
ret
sub
mov
in
dec
push
aad
adc
and
scas
movsl
fisubs
dec
pop
movsl
das
xchg
push
pop
mov
add
fs
cmpl
or
jecxz
dec
popf
int3
push
into
cmpsl
stos
push
movsl
daa
sub
dec
addr16
jb
push
push
pop
test
fwait
mov
lock
pop
mov
sbb
scas
in
sarl
adc
sar
pop
or
and
cmc
fsubrl
or
mov
inc
andl
and
inc
dec
cmp
push
jmp
inc
add
aaa
inc
jg
scas
cmpb
inc
shll
mov
iret
imul
mov
es
popa
fwait
pop
pushf
std
push
inc
into
lahf
clc
pushl
hlt
mov
lods
mov
cmp
inc
jmp
cmp
add
adc
ret
movsl
insb
inc
cmpsb
andb
scas
sbb
pop
and
add
movsl
jge
sbb
sahf
lahf
jb
sbb
sbb
sub
jle
mov
in
imul
sub
loopne
iret
add
or
add
loop
pop
sarb
add
push
jg
jns
fmull
jecxz
pop
mov
jp
add
pusha
cmpsl
xchg
out
into
gs
xlat
xchg
enter
push
and
clc
fstps
pop
orps
mov
ss
gs
mov
ss
cmpsl
xchg
imul
hlt
inc
push
sub
adcl
pop
xor
test
cmp
mov
sbb
mov
stos
lahf
pop
inc
scas
daa
xor
test
add
inc
lods
lea
or
ja
loop
jb
or
push
sub
ret
xorl
cmpsb
cmpsb
cmc
test
je
out
ds
roll
lods
mov
pop
stos
cmp
jg
lcall
jmp
cmp
mov
arpl
or
loop
cmpsb
adc
bound
lods
mov
dec
das
mov
inc
outsl
in
lcall
add
push
jmp
mov
adc
sub
jnp
repz
aad
repz
pop
jmp
and
jnp
or
cs
decl
xor
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
lret
das
push
sbb
jnp
jno
das
and
dec
pushf
mov
push
and
je
or
push
int3
scas
sub
shll
mov
sahf
je
push
or
and
pop
fcoms
mov
imul
cwtl
popa
out
dec
sbb
adc
dec
add
or
xchg
add
fisubs
rcl
int3
into
divb
xchg
shr
pop
je
sbb
inc
or
mov
inc
xchg
pusha
push
lods
push
pop
xor
and
fsubrl
lcall
jae
adcb
cmp
gs
mov
fmuls
in
or
icebp
mov
push
into
jmp
mov
add
mov
add
xlat
outsl
lods
movsl
aam
cmp
add
test
push
rcll
lods
mov
test
push
dec
leave
ret
lret
jmp
lods
std
and
es
inc
stos
mov
mov
pop
stc
xor
push
mov
pop
inc
mov
cmp
inc
push
pop
pushw
sti
xor
xor
push
mov
jl
cmp
jo
jg
and
bound
les
dec
mov
lods
push
mov
xchg
pop
pop
jmp
and
add
add
aam
add
fwait
sbb
sahf
loop
iret
add
mov
cmp
std
aad
xchg
lcall
sahf
jge
pop
fisttpll
push
mov
mov
cmpsb
and
shrb
push
in
cmp
mov
jl
xor
dec
leave
movsl
mov
roll
jns
outsb
mov
insl
add
lahf
cld
sbb
mov
dec
shl
in
mov
lret
inc
jno
pop
movsb
out
scas
out
insl
cmpl
xchg
aam
adc
clc
mov
fadds
lret
push
iret
mov
icebp
and
and
je
imul
ret
dec
test
sub
sub
fwait
sub
inc
vpaddw
inc
adc
rorb
ret
mov
mov
mov
cmpsl
ds
mov
loopne
imul
ret
adc
in
adc
adc
js
movb
adcl
shrb
add
je
mov
call
sbb
push
mov
int
aas
out
loope
sahf
loope
dec
jle
mov
outsb
ret
xlat
cwtl
fsubrs
or
test
gs
adcl
popf
insl
loopne
and
push
jmp
popf
sahf
mov
mov
outsl
ja
or
sub
shll
inc
jle
cmp
pop
lcall
jns
jge
mov
out
adc
lea
aas
aas
bound
insl
mov
aam
push
jmp
fs
cli
cmp
sub
mov
enter
ja
data16
pop
add
jbe
ljmp
ss
cld
cwtl
loope
shlb
xchg
add
push
out
lods
cltd
addb
sarl
push
out
loop
push
cmp
fs
cmpsl
inc
fadds
int
xchg
rcrl
xchg
arpl
sahf
mov
insb
xor
out
or
ljmp
rcl
adc
enter
inc
daa
cmpsl
cmp
jne
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
xor
jle
notl
adc
adc
adc
xchg
jmp
arpl
das
in
xor
xor
push
daa
js
add
mov
dec
push
mov
cltd
pushf
mov
pop
int
adc
out
cmp
ja
dec
jno
stos
cmp
xchg
leave
jbe
cmpsl
int3
ss
jle
jo
call
std
inc
sbb
dec
rcll
or
xor
ljmp
mov
xchg
fwait
jecxz
fsubl
or
ss
icebp
pop
or
inc
imul
enter
xchg
adc
push
mov
es
adc
mov
test
cmp
xor
aam
cmp
cli
add
push
in
add
sahf
je
inc
xlat
pop
cltd
cwtl
pop
out
push
push
loope
enter
pop
add
decl
sarb
lods
mov
push
js
jno
or
cmp
mov
mov
movsl
sub
adc
or
xchg
push
or
cmpsb
fdivrs
sub
lods
daa
out
pop
pop
jp
pop
clc
adc
scas
jl
ljmp
push
lock
sbb
inc
xchg
mov
add
outsl
inc
sbb
gs
fucomi
or
cmpsl
inc
rcrl
inc
or
sarb
jmp
cld
sub
filds
or
loopne
stos
cli
inc
inc
out
mov
bound
or
or
or
xchg
add
adc
adc
push
in
js
push
sub
fadd
jl
call
ret
mov
jbe
outsb
addr16
fdivr
push
xchg
inc
rclb
dec
adc
inc
add
mov
jo
push
and
adc
mov
fbstp
adc
inc
hlt
add
ficompl
add
cmpsb
jmp
call
pusha
adc
loop
aaa
sub
out
sbb
jne
fdivrs
pusha
cmp
fcmove
push
push
adc
fidivl
push
ss
mov
in
cli
daa
cwtl
and
jmp
mov
lret
lods
dec
test
jle
lret
ret
je
or
xor
push
or
lcall
pushf
test
mov
scas
enter
push
jns
jmp
jmp
cmc
int
scas
push
icebp
std
jns
or
stc
jmp
jge
fadds
sub
aas
pop
popa
mov
xchg
cwtl
add
insl
xchg
dec
call
mov
push
je
ret
data16
repz
push
dec
cmp
sti
xchg
sub
mov
out
addl
icebp
inc
outsb
inc
cmpsl
or
or
lock
add
negb
push
mov
xchg
push
andl
and
out
scas
in
jae
dec
push
dec
gs
or
and
lods
outsb
rcrl
jl
and
mov
mov
mov
repz
popf
shrb
bound
adc
setg
ror
fildll
jle
ret
xchg
loopne
arpl
hlt
xchg
in
mov
dec
hlt
stos
std
sub
stos
jge
adc
pop
cmc
sbb
pop
jl
xchg
movsb
out
pop
jno,pt
adc
bound
stos
or
jno
outsb
and
push
adc
dec
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
lods
icebp
cmp
out
adc
int
adc
jp
and
rclb
movsb
pop
xor
jmp
aaa
das
cwtl
mov
jge
push
aaa
push
rcll
out
rcrb
lcallw
cmpsl
push
pusha
lret
int3
mov
jmp
repnz
add
and
jns
xlat
add
out
and
pop
xor
stc
mov
mov
sub
mov
jmp
pop
stc
aaa
int3
sbb
jmp
or
xor
or
cli
jo
and
js
mov
or
pop
data16
in
adc
addr16
hlt
pusha
push
data16
cmpsl
dec
rolb
mov
mov
ljmp
mov
jb
int
jl
outsb
push
add
scas
jns
mov
and
cli
fmull
jp
dec
push
ss
xor
cmp
cs
pop
repnz
aad
jmp
adc
cmpsb
mov
dec
shlb
xor
push
xorl
xchg
test
test
ja
adc
dec
sub
cmp
or
pop
pusha
jge
lods
xchg
mov
fnstenv
std
cmp
fidivrs
les
push
sub
or
sbb
in
nop
fcmovu
cmp
lods
std
shll
mov
fnstcw
mov
adc
pop
jbe
inc
add
xor
push
arpl
or
jns
pushf
repnz
xor
inc
push
div
cmpb
jecxz
movsl
pop
mov
mov
inc
divb
cmpsl
cwtl
cmp
mov
and
cmp
jle
pushf
into
stos
ror
movsl
lock
imul
imul
xchg
cmpsb
add
mov
mov
push
data16
sarl
and
jle
lea
std
test
mov
xchg
fs
imul
pop
aas
mov
and
ret
mov
vcvttss2si
inc
stos
jno
add
dec
rcrl
mov
and
cmpsb
or
stos
pop
mov
inc
repz
add
add
mov
int
fwait
pusha
inc
lcall
pop
lock
test
ret
inc
rclb
mov
aas
shl
dec
push
addb
jmp
ljmp
ljmp
daa
mov
insb
pop
sti
cmc
dec
shlb
cld
dec
sub
mov
push
mov
jns
dec
jl
jno
push
xchg
jecxz
pop
cmp
out
cmc
fnsave
add
scas
sbb
jns
andb
iret
sub
sbb
cli
pop
in
mov
mov
mov
fs
pop
jne
mov
mov
inc
mov
xor
ss
sub
into
lcall
fidivrs
data16
cmpsb
adc
push
sbb
sbb
pop
xchg
cmc
fisubl
sub
lds
das
cs
sbb
or
cmovae
fdivrs
cmp
add
cmp
call
xor
lret
adc
xchg
jno
jo
out
addr16
sbb
inc
dec
data16
xchg
pop
xchg
push
sub
push
stc
movnti
in
rorb
push
in
loope
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
nop
adc
adc
int
adc
jmp
pop
adc
xchg
cmp
data16
mov
xchg
jl
sub
and
xor
into
push
mov
int
outsb
gs
mov
test
fcomi
fwait
adc
leave
xor
dec
sub
pushf
and
mov
aad
push
mov
xlat
or
sbb
xchg
sub
subl
lods
jp
and
dec
fsubrl
shll
mov
adc
lock
xor
repz
out
cmpsl
imul
pop
lcall
push
xchg
sub
sbb
loop
lcall
xor
iret
jle
xor
pop
lock
sub
push
inc
or
push
int
mov
add
fidivrs
into
push
mov
lods
cmp
aam
cmp
ss
and
data16
aaa
inc
aaa
rcll
dec
into
das
push
fs
jmp
pop
jo
push
andl
or
in
ss
cmp
pusha
ret
xchg
mov
mov
das
add
xchg
loope
imul
add
cmpsb
negl
bound
mov
jp
sub
lcall
inc
push
add
xlat
loop
imul
xorb
aaa
fxch
js
stos
mov
sub
cmpb
fwait
mov
cltd
aam
cmpsb
fs
xchg
es
xchg
inc
adc
cmp
mov
add
out
lea
add
push
push
xlat
loopne
dec
rorb
test
push
push
mov
out
adc
xchg
mov
push
fnstenv
daa
or
pop
sub
adc
xchg
mov
or
or
sbb
nop
sbb
lods
sbb
cmp
sub
into
lock
sbb
out
mov
adc
dec
loop
or
jp
mov
mov
in
or
jmp
jl
gs
movsb
ljmp
pop
jbe
cmp
test
aad
lret
jl
movsb
loope
enter
notb
mov
dec
shr
pop
outsb
arpl
ljmp
divps
add
icebp
adc
pop
fucomp
jae
sbb
xlat
or
imulb
pop
push
test
jno
pop
rolb
pop
outsl
aaa
jg
sbb
sbb
ljmp
jne
nop
pop
dec
repz
fbstp
pusha
xlat
cmp
enter
jmp
mov
in
cmpsl
xor
inc
lds
cmpsl
popf
pop
loop
xchg
adc
daa
sahf
push
xchg
add
pop
repnz
fstpl
popa
out
jle
loope
push
adc
inc
popf
push
das
inc
fnstsw
cmp
jecxz
pop
push
mov
mov
into
jns
xorb
mov
xchg
lods
pop
cmp
testb
mov
fstp
mov
mov
rorl
add
bound
bndstx
call
mov
push
adc
in
inc
jmp
lods
pushf
mov
add
pop
push
or
xorb
movsl
cmp
cmpsl
int
mov
in
push
inc
dec
push
gs
xlat
popf
mov
loop
cmp
mov
pop
mov
mov
movsl
or
sbb
push
xchg
stc
and
cmp
pop
mov
out
xchg
out
cmc
and
mov
pop
dec
pop
fcompl
mov
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
xor
cmp
out
adc
adc
adc
xchg
fsubs
outsb
iret
data16
inc
lock
lcall
mov
xchg
jl
cs
adc
dec
sahf
or
sti
mov
xchg
jp
movb
jno
aaa
adc
std
subb
iret
sbb
repz
cld
push
xor
out
mov
in
mov
dec
cmp
lods
ja
push
dec
cld
push
xor
daa
xor
mov
jp
iret
je
mov
js
cltd
lods
test
xlat
lret
adc
pop
cmpsl
xchg
pop
sub
xchg
or
and
sahf
movsb
lds
inc
and
pop
inc
movsl
pop
xchg
aad
es
iret
mov
enter
cmovle
sub
stc
aad
mov
fucomp
cmp
jmp
stos
cltd
loop
push
push
stc
cmp
xor
mov
push
pop
mov
jb
out
jnp
push
and
push
addb
mov
rcrl
cld
xor
sbb
es
sbb
mov
cltd
mov
cmp
inc
in
es
stos
je
inc
mov
outsb
pop
cli
in
pop
sub
cpuid
lahf
data16
cli
or
mov
mov
push
iret
daa
push
outsb
add
pop
mov
insb
xchg
pop
inc
mov
shlb
loope
xlat
jb
movsb
mov
scas
test
lcall
test
xor
lock
movsl
inc
sbb
inc
icebp
das
enter
cltd
outsb
lret
sbb
pop
sar
clc
negb
out
xchg
cmp
out
pop
jp
andb
insl
je
push
daa
les
mov
dec
or
push
sub
ss
jno
outsb
xchg
mov
in
pop
daa
cmp
pop
daa
mov
lods
mov
int3
push
jge
and
and
in
loope
pop
scas
xlat
push
mov
imul
in
cli
add
nop
ret
scas
notb
push
jl
test
inc
push
sarb
inc
push
fcomps
mov
jae
lods
frstor
ffreep
loopne
or
xor
and
test
lret
popa
mov
outsb
dec
mov
mov
pop
push
push
push
mov
push
mov
iret
insl
test
cmp
nop
sbb
bnd
scas
mov
mov
and
cwtl
xor
sbb
sarl
inc
mov
dec
pop
dec
fxam
xchg
dec
orb
inc
loop
in
sub
adc
fdivs
je
scas
jecxz
test
shl
scas
cmp
cmovae
popa
sbb
mov
sbb
jge
or
fistpll
adc
xor
push
aad
and
es
adc
mov
mov
cmp
jnp
mov
sub
sbb
xor
stc
icebp
mov
push
inc
pop
add
dec
pusha
mov
jne
cmp
xchg
jmp
loopne
and
arpl
push
fucomi
adc
clc
xchg
mov
jno
xchg
add
cmc
jnp
add
rcr
jg
add
ljmp
fdivrp
mov
je
cmc
aam
cld
bound
je
cs
sbb
add
push
ret
fdivrp
jno
adc
sbb
mov
push
mov
pop
or
push
mov
inc
pop
out
mov
fisubrs
cli
fdivl
push
mov
lea
sub
mov
sub
sbb
fwait
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
movsb
inc
sbb
int
adc
sbb
xor
pop
mov
out
in
fisttpl
aaa
xchg
inc
and
xchg
into
pop
jae
adc
jl
mov
movsb
adc
sbb
xchg
inc
imul
xchg
sbb
dec
fs
in
mov
add
rcr
aas
call
xchg
xchg
pushf
mov
bound
cmpsl
inc
aaa
fadd
or
ds
inc
mov
sbb
cmpsl
ret
pop
hlt
dec
out
out
aaa
and
push
pop
dec
push
inc
mov
std
andb
mov
cwtl
popf
int3
addr16
and
pop
sub
jecxz
shr
xchg
push
inc
arpl
lods
test
jg
pushl
inc
sahf
and
push
ja
adc
or
mov
inc
lock
mov
inc
cmp
dec
nop
dec
add
movl
sti
into
or
xchg
mov
repnz
shl
xlat
int
ror
adc
dec
pushf
rorb
and
adc
sbb
stos
sub
out
inc
mov
mov
cmc
cmp
fwait
test
mov
pop
mov
push
mov
bound
fdivs
repz
push
xchg
cmp
jae
movsl
fists
add
sbb
pop
fwait
movsl
jne
push
shrb
popa
and
stos
jmp
xchg
inc
fadds
test
andb
inc
add
int
pop
in
xchg
in
sub
add
mov
mov
insb
sti
in
in
lcall
test
repnz
pop
mov
push
cmp
ret
jg
xchg
stos
iret
adc
stos
sub
cs
dec
push
roll
jl
iret
stc
xor
lods
repz
mov
add
imul
inc
inc
sahf
lcall
js
mov
loopne
stos
xchg
std
out
pop
dec
movsl
jle
mov
lret
sub
out
popa
nop
cmp
xchg
jle
iret
adc
sub
mov
rolb
cmpsb
daa
push
lcall
outsl
sbb
mov
add
push
jno
adc
sbb
push
cmpl
mov
enter
jae
int3
xlat
inc
mov
sar
dec
scas
xlat
loope
aad
cmp
adcl
adc
adc
jae
in
mov
or
paddsw
add
repnz
adc
std
roll
jb
shlb
testl
loope
imul
fisubl
dec
adc
and
iret
fdivrs
clc
cld
fmuls
jp
inc
test
jmp
inc
daa
pushf
or
scas
push
lidtl
outsl
fxch
sbb
and
mov
sahf
and
sub
shld
mov
loope
pop
adc
js
dec
mov
xchg
andl
add
push
mov
adc
in
lret
mov
jge
leave
daa
mov
adc
stos
inc
push
mov
sub
pusha
jl
scas
jnp
call
xchg
test
add
clc
into
sbb
in
movl
ljmp
mov
push
sub
or
ja
jle
push
lea
push
fmuls
xor
inc
in
and
or
cld
xchg
loope
incl
push
sub
inc
lock
and
cmpsb
aam
popa
or
scas
daa
aaa
fnstsw
push
or
xchg
mov
pop
jge
outsl
push
adcb
sub
mov
mov
mov
pop
inc
shr
mov
mov
shl
jmp
fmuls
sbb
add
jge
adc
int
adc
cmpsl
jnp
xor
dec
xor
add
push
js
lret
dec
xor
aaa
xchg
int3
movsl
loop
push
and
dec
nop
out
ljmp
jl
pop
rolb
jb
pop
xchg
aam
push
xorb
into
ja
inc
iret
sbb
fsts
mov
mov
jne
pop
movsb
xor
lods
pop
mov
outsb
imulb
dec
sub
mov
dec
rorb
fs
pop
sub
mov
mov
dec
inc
movsb
out
push
lret
xor
cmp
mov
jge
iret
xor
mov
mov
fcomip
aas
sub
scas
test
fadd
jle
and
and
jae
dec
aaa
add
inc
jg
cs
mov
std
scas
pop
int3
loop
lods
mov
cmc
push
ret
pop
fsubl
es
lods
and
or
cmp
daa
inc
inc
adcb
mov
mov
aam
sub
xchg
mov
stos
xchg
push
or
repnz
inc
dec
pop
mov
inc
or
pop
dec
adc
lock
mul
inc
pop
jg
add
xchg
add
fs
nop
popa
imul
inc
push
jns
push
xor
push
outsl
pop
and
inc
lods
add
mov
xchg
inc
lods
sahf
fprem
jge
and
ret
jne
aas
mov
sub
fdivs
mov
out
leave
mov
sbb
mov
push
sahf
psubsw
push
push
out
lahf
mov
repnz
nop
xor
sbbb
xor
inc
lcall
pop
imul
adc
adc
pusha
or
movl
push
cwtl
adc
scas
mov
sar
outsl
sahf
incl
push
add
lret
decl
pop
mov
into
negl
fldt
xchg
dec
mov
xchg
gs
ljmp
insl
pop
mov
daa
push
imul
mov
jns
pushf
pop
insb
imul
adcb
pop
into
into
jno
ds
ffree
add
cmp
jnp
cmc
pop
pop
loop
sbb
sbb
jg
aam
stos
scas
dec
add
fs
jmp
les
insb
mov
add
in
mov
cmp
repz
cmp
in
xchg
add
mov
in
adc
insl
and
adc
mov
cmc
lods
test
jge
in
repnz
loope
xor
pop
addr16
les
call
loope
daa
dec
cltd
sbb
test
loop
insb
add
stc
mov
sbb
xchg
xor
xchg
stc
call
movsl
sarl
fists
imul
xchg
and
outsb
loope
orb
cmc
out
sub
cwtl
daa
pop
test
arpl
lret
jmp
mov
mov
popa
or
stos
ja
clc
jecxz
dec
jne
push
jmp
cmp
movsl
fnstenv
add
nop
pushl
repz
popf
mov
cmpsb
leave
imul
sbb
cmp
add
pop
ds
cmp
rolb
cmp
sub
cmp
stc
jp
inc
add
dec
call
sar
fistpll
jecxz
aaa
push
rorb
in
rol
and
arpl
adc
dec
in
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
adc
adc
int
adc
bnd
das
aaa
add
imul
sub
dec
stc
test
or
int3
mov
mov
mov
test
mov
popf
out
fwait
pop
jp
es
es
xchg
xchg
xchg
add
xchg
jg
push
ljmp
mov
repnz
fidivrl
bound
sub
ficoms
arpl
mov
and
dec
test
inc
repz
mov
push
xchg
cmp
inc
icebp
jmp
ret
cli
or
repz
sub
sbb
sarb
enter
sub
jl
push
and
repz
fdivrl
pop
mov
mov
add
mov
push
cltd
jbe
lods
mov
stos
xor
aas
dec
mov
ds
mov
icebp
sti
pop
scas
call
xchg
add
stos
or
xor
or
in
ds
inc
adc
or
and
cld
pop
repz
and
mov
scas
test
popf
out
test
fisubrl
mov
pop
cltd
xchg
daa
fs
or
xchg
mov
fsubr
mov
sbb
sub
push
inc
inc
lret
dec
fbld
cmp
repnz
fnstenv
adc
roll
outsb
pop
mov
cltd
jle
xchg
call
mov
sahf
scas
mov
clc
roll
adcl
and
dec
ds
int
mov
mov
push
pop
bound
xchg
pop
cli
or
xor
fcompl
jle
push
inc
stos
dec
loope
test
frstor
push
pusha
mov
or
lea
cmp
dec
push
out
add
xor
adc
add
mov
frstor
loope
inc
je
cmpsl
xor
adc
pop
ret
daa
and
lock
out
and
les
pusha
lods
and
add
dec
movsb
leave
xor
or
sub
ja
add
jb
cmpsb
or
mov
shrl
addr16
popa
in
mov
sar
sbb
sahf
pop
daa
cmp
xor
push
add
inc
push
iret
or
dec
aas
push
into
scas
or
imul
nop
fimuls
lods
fcmovnu
and
scas
pop
push
cmp
mov
cmpsb
xor
push
pop
adc
pop
dec
fisubrl
mov
xor
jg
shlb
fisttpl
xchg
loopne
adc
loopne
sub
jge
movsl
ret
in
lret
mov
aad
jmp
fisubl
ljmp
das
push
dec
aam
sub
mov
pop
addr16
sub
push
movsl
add
jo
inc
scas
adc
push
push
std
hlt
mov
outsl
or
dec
pop
and
lds
mov
add
or
add
ja
fisttps
push
shrb
jp
jl
mov
or
pop
xchg
into
sti
icebp
xchg
cli
loopne
mov
jl
fisttpl
xchg
test
cli
sub
out
xlat
nop
insl
cmp
ja
mov
dec
mov
nop
mov
xchg
cmpsb
fs
ja
jnp
shlb
iret
test
push
mov
jecxz
cwtl
in
jo
cld
subb
mov
adc
cmp
insb
dec
movsb
or
rorb
add
and
push
repnz
mov
out
imul
push
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
mov
adc
int
adc
test
sub
clc
pop
add
sti
mov
mov
outsl
mov
fdivrl
pop
in
jno
mov
roll
dec
dec
daa
or
je
into
xchg
dec
push
pushf
fs
das
lahf
loopne
xor
lcall
mov
repnz
imul
mov
inc
cmp
xor
push
xor
sbbb
out
test
mov
mov
out
sub
adc
jns
adc
dec
and
arpl
ret
mov
fistpl
test
mull
js
mov
fisubrl
hlt
out
sub
scas
or
in
sub
mov
test
repnz
fwait
xchg
dec
pop
jecxz
lret
mov
xchg
dec
push
faddl
sub
push
sti
jle
xor
sub
cmp
jp
mov
in
or
push
insl
cltd
xchg
xor
lret
mov
mov
xor
aaa
shlb
xor
int
jae
mov
pop
pop
notb
mov
pusha
jns
ds
push
mov
mov
mov
xchg
push
cld
pop
mov
sbb
loopne
sub
mov
mov
std
ss
pop
lds
test
dec
sub
repnz
xchg
push
sbb
ret
pop
push
jno
push
mov
ss
sbb
scas
xchg
addr16
loopne
jg
cs
xchg
pop
movnti
and
out
xor
repz
cmp
and
mov
popa
dec
pextrw
cmp
dec
movsl
jns
mov
fwait
jg
lret
push
out
or
cmc
shrl
xor
cmpsb
sub
imul
insl
hlt
ret
hlt
and
test
jecxz
ret
es
push
push
cwtl
adc
mov
ret
cmp
xchg
jo
test
pop
pushf
or
xor
insb
pushf
cmp
or
in
adc
sub
cmpsb
enter
lods
push
mov
mov
pusha
lods
mov
push
cmp
lods
sbb
fsubrl
das
cld
jo
lret
movsl
pop
loopne
xchg
data16
js
cwtl
shlw
pop
in
sbb
iret
adc
movl
jl
cmp
pop
loopne
iret
idiv
jle
jl
push
addl
lods
sub
imul
pop
lea
lea
dec
or
mov
cmp
adcb
addr16
mov
xchg
sbb
xchg
pop
iret
ss
pop
sbb
fdivrl
and
inc
scas
fdivl
inc
pusha
pop
call
insl
push
and
mov
arpl
xor
mov
int3
call
gs
push
les
enter
pop
lea
dec
cmp
mov
xlat
inc
and
push
and
mov
mov
xor
fidivs
inc
orl
adc
aam
cmp
sub
outsl
push
adc
or
adc
insl
lods
xchg
cltd
add
xchg
call
vmovaps
leave
or
push
loope
addr16
pushf
dec
clc
in
shlb
insb
icebp
stc
add
push
xor
incb
jg
rorl
pusha
pop
repz
push
lea
in
jmp
mov
sbb
lahf
push
mov
pop
prefetch
xchg
jl,pt
sahf
stos
fs
add
lods
cld
xlat
add
mov
iret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
or
adc
ret
int
adc
or
and
and
cmp
in
ja
jnp
in
add
ljmp
push
mov
aas
sti
jg
lock
mov
ljmp
cmpsb
repnz
or
lods
and
lea
mov
cmp
lods
jne
cmp
push
xchg
mull
into
mov
or
jno
jnp
adc
dec
push
jno
ss
inc
in
jne
sub
mov
fldcw
scas
mov
xor
ret
xor
movsl
aad
rorl
jl
fisubrl
jmp
gs
outsb
dec
ljmp
cmp
aam
rcl
in
repz
fsubrl
dec
sub
js
xor
out
jmp
pop
imul
ret
out
xchg
cwtl
mov
mov
inc
and
mov
cmp
lods
das
sub
lret
es
stc
fs
outsl
jb
push
nop
inc
orl
js
cwtl
jge
std
daa
loopne
pop
imul
sti
in
sbb
mov
test
or
xchg
sbb
sub
cmp
call
xchg
jp
add
cmpsl
test
fsubl
loop
fdivl
lods
xchg
mov
out
aaa
xchg
jmp
pop
ss
cmpb
jmp
mov
lcall
cmp
pop
imul
push
out
pushf
mov
scas
fcompl
jo
in
inc
fisubs
out
js
add
flds
ds
xor
cmc
inc
cs
je
lock
or
sub
cmpsl
shr
mov
nop
adc
push
int3
pop
js
insb
and
stos
cmc
aas
das
dec
iret
adc
or
out
add
adc
fs
mov
sti
test
xchg
test
inc
leave
jle
lret
loope
fxch
mov
cmp
xor
stos
imul
or
in
mov
lock
mov
xchg
test
fldl
inc
movsl
pusha
pushf
mov
fwait
addl
push
repnz
mov
shrl
jns
lods
and
inc
cmp
add
inc
adc
and
lods
xchg
popa
or
jns
pushf
add
adc
insl
pop
and
xchg
or
mov
or
mov
xchg
movl
mov
imul
insl
int
adc
xchg
inc
aaa
daa
mov
jbe
pusha
test
cli
fildl
xchg
inc
cltd
imul
aaa
mov
je
pop
fldl
cmp
daa
dec
loop
lock
sub
sbb
out
mov
ficomps
sbb
jle
add
fisttpl
mov
pop
es
cmpsb
lret
fstpt
xchg
jb
xchg
mov
daa
adc
fmuls
out
inc
add
sti
mov
jl
sbb
int3
ret
xchg
movsb
aam
jo
pusha
je
dec
cmp
scas
fmull
ds
push
jnp
pop
jmp
aaa
xchg
jmp
xchg
xchg
lods
dec
in
jb
loope
lds
loope
scas
mov
xor
cltd
mov
xchg
mov
nop
inc
sub
jl
imul
js
sbb
in
pop
lret
movsb
adc
jecxz
lret
daa
ja
and
push
add
shlb
rorb
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
pop
out
stos
push
mov
adc
fisttps
sbb
mov
int3
frstor
or
xchg
mov
xor
js
sahf
and
fucomp
leave
out
jo
scas
fmuls
dec
jl
nop
or
cltd
jb
pop
sub
loopne
lret
ret
sbb
cmp
int3
sub
mov
insb
out
sarb
lds
cmp
mov
stc
pop
adc
cmc
test
dec
dec
add
adc
repz
mov
cli
out
lds
lret
bound
xor
jmp
mov
and
sub
add
icebp
outsl
mov
daa
mov
lea
in
out
jp
icebp
roll
push
cmp
jno
xchg
inc
shl
icebp
adc
mov
lods
je
push
in
int
and
push
or
movsb
push
ret
cmp
ja
add
into
aam
rorl
cmpsb
fimuls
test
ja
popa
scas
loopne
xchg
xchg
bound
stos
lds
fistps
mov
outsl
enter
sbb
push
push
adc
fidivl
inc
ret
add
mov
xor
xor
ret
inc
movsl
xlat
daa
gs
outsl
out
push
pop
lea
adcb
fwait
push
jmp
push
gs
data16
xchg
cli
push
clc
sahf
inc
fildll
loop
sbb
cmpsb
sbb
jg
sbb
in
repnz
gs
pop
js
movsb
push
xchg
lds
ds
xchg
xchg
ja
scas
ds
daa
sar
stc
fimull
fsubrl
jae
adc
lcall
dec
mov
stos
jb
out
xchg
jae
pop
mov
repz
stc
aaa
int
mov
push
cmpsb
enter
aaa
fisubrs
enter
fisubl
jo
idivl
popf
pop
subl
aas
daa
cmpsb
sbb
fsubs
test
imul
mov
stc
imul
xchg
mov
cld
es
aas
dec
push
lods
mov
lcall
sub
fldenv
popf
xlat
lcall
sbb
jb
lods
leave
xchg
shlb
lds
push
daa
xchg
out
not
ljmp
shll
ja
ds
ret
push
add
pop
inc
faddp
jge
add
xchg
ss
jmp
xor
pop
mov
xlat
xor
call
mov
clc
mov
addr16
fdivr
lret
push
stos
lea
pushl
dec
jo
and
pop
cs
gs
mov
inc
fs
or
adc
aam
sbb
and
xor
aaa
loope
jo
outsb
jl
and
lahf
fdivr
sti
orb
lds
test
jne
inc
js
mov
sbb
inc
push
sbb
shl
xlat
mov
sub
xor
jge,pn
rcll
pop
mov
add
lods
ficomps
ljmp
xor
fldenv
sub
xor
fldt
cli
push
xchg
adc
sub
and
int3
fwait
pusha
sbb
adc
jmp
inc
or
jo
rolb
ficomps
adcl
int3
inc
lahf
rcrl
jg
push
mov
mov
cmpsb
clc
sbb
xor
addr16
popf
test
fwait
jecxz
push
jns
sub
adc
jecxz
lret
insb
sbb
add
cwtl
in
popa
cwtl
mov
jns
pushf
dec
lret
aaa
sub
sub
fisttpl
mov
pushf
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
scas
pop
mov
adc
adc
adc
lods
sbb
push
dec
dec
out
pop
inc
xchg
out
cmp
cmp
adc
mov
mov
pop
out
add
mov
insb
out
dec
jmp
iret
ftst
mov
je
jg
jle
cwtl
jp
push
std
xlat
in
icebp
sbb
fwait
add
jns
in
mov
cmp
push
pop
dec
sub
cltd
aam
dec
out
mov
call
jge
push
leave
cmp
jae
ret
adc
arpl
push
jp
jle
or
testb
cmp
test
add
sub
sarb
mov
add
popf
rcl
fstps
ja
and
pop
push
mov
divb
mov
jle
mov
pop
hlt
movsl
mov
dec
loope
xchg
pop
int3
ret
daa
popa
dec
push
xorb
bnd
lods
xor
xor
addr16
inc
push
pop
rep
ljmp
hlt
lods
mov
test
mov
in
into
push
aam
push
decl
shll
mov
push
mov
inc
fdivrl
insb
repz
cmp
pop
cmp
scas
cmp
mov
sub
movsb
jno
xchg
add
mov
in
cld
data16
je
testl
test
rcll
ss
xlat
cli
in
scas
sub
lret
arpl
iret
inc
adc
push
adc
and
shll
sti
dec
fwait
pop
xchg
call
cmp
xor
inc
rcrl
pop
sub
sbb
pusha
pusha
jnp
mov
jle
adc
cmpsl
mov
ret
rclb
adc
jno
popf
es
push
int
inc
xor
cli
in
pop
fcoml
lock
xchg
jl
test
and
jbe
jp
add
sbb
pop
adc
iret
sti
cld
cs
cmp
and
int3
loop
sub
repnz
lret
mov
mov
cmp
xchg
fwait
vpaddusb
adc
inc
loop
adcl
sbb
arpl
jbe
xchg
add
inc
xor
mov
xchg
aaa
xchg
imul
scas
cmc
aas
and
out
mov
cli
scas
js
pop
ror
fldl
mov
inc
cmpsl
inc
test
xor
mov
and
sub
lods
lahf
imul
mov
outsb
pop
sbb
gs
lret
xorl
push
stos
and
inc
sbb
dec
imul
insb
sarl
pop
or
idivb
sub
enter
and
loope
enterw
inc
enter
inc
mov
pop
dec
enter
test
cli
add
outsl
cmp
inc
mov
std
push
jo
sbb
adc
jae
pop
sub
mov
inc
push
outsl
test
popa
adc
pop
and
in
fcmovnb
repnz
outsl
call
or
and
out
sahf
in
jl
sbb
bound
cmp
das
les
sahf
loope
ret
mov
out
dec
add
das
stos
shll
add
test
popa
mov
scas
jnp
sti
jmp
imul
dec
aad
xchg
jg
sub
inc
movsb
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
adc
adc
adc
adc
lock
loop
out
adc
adc
jmp
push
je
cmp
lods
lcall
jmp
xor
lret
xor
test
sub
nop
bnd
notb
out
pop
pushw
mov
neg
loopne
add
clc
push
or
jb
cmp
pop
inc
jle
sbb
frstor
jbe
mov
sti
aaa
into
xor
in
stos
jae
scas
push
pop
push
sbb
push
push
iret
out
lcall
mov
pushf
add
add
ret
loopne
dec
pop
push
cld
cld
inc
adc
nop
rcr
lahf
pusha
daa
pusha
xchg
pop
and
jge
cmp
mov
mov
aad
fiaddl
push
fld
sub
jne
out
dec
jbe
insl
test
jo
inc
insb
std
insb
sbb
adc
xchg
inc
test
mov
cli
mov
push
xorl
fadd
adc
aad
and
call
fdivrl
mov
fldcw
jg
push
adc
std
add
stc
mov
int3
lahf
cmpsl
leave
adc
fldt
lcall
fsubs
push
sbb
sub
rorb
adc
in
pop
mov
ljmp
xor
xchg
loope
mov
lahf
xchg
in
notb
jg
test
shlb
mov
mov
adc
scas
jmp
out
mov
in
and
stos
and
cmpsb
sbb
dec
mov
in
mov
cltd
and
cltd
lcall
bound
ljmp
mov
dec
xchg
add
push
fcoms
fmull
imul
and
popf
pop
mov
jo
add
repz
lods
xchg
movsb
lea
push
imul
sub
add
push
xchg
das
inc
jbe
je
sub
cld
dec
cltd
testb
jbe
bound
jbe
mov
sub
sti
adc
ja
hlt
jle
inc
cmpsb
scas
movsb
adc
cmp
xchg
test
lret
cmpsb
jnp
dec
pop
fists
inc
mov
nop
mov
or
sub
subl
jnp
outsl
bound
das
sahf
call
dec
and
imul
out
sbb
xchg
xor
es
cmpb
add
adc
or
add
mov
cmpsl
push
fdivrl
scas
jno
inc
hlt
fistps
xchg
das
mov
sbb
dec
stos
repz
sbb
sub
lods
mov
adc
shlb
push
dec
jnp
sbb
push
in
push
out
arpl
outsl
mov
lahf
int3
mov
cltd
jae
lret
icebp
testl
mov
inc
adc
fcompl
adc
pop
ret
divl
flds
push
stos
xor
inc
mov
mov
or
cmp
insb
pop
std
rolb
aam
and
mov
popl
stos
jge
mov
les
push
rcr
pusha
mov
test
sub
lahf
inc
dec
xchg
in
shll
ds
sbb
loope
push
pop
or
mov
cmp
pop
xchg
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
push
or
int
adc
jl
mov
inc
push
jecxz
push
mov
mov
push
rclb
cmp
mov
aas
insb
stos
cmp
clc
iret
pop
sti
cmp
dec
fcomps
sub
pop
stc
js
mov
mov
or
jp,pt
scas
jbe
sti
into
sub
and
jg
loope
add
and
loopne
paddsw
fisubl
lret
adc
mov
aam
pop
lock
ret
add
mov
dec
out
jae
loop
pop
xchg
or
or
mov
jae
ficompl
jb
scas
lods
cmp
and
mov
lods
inc
cltd
cs
xchg
daa
xchg
jnp
jnp
jae
jmp
xchg
dec
mov
jns
mov
or
mov
clc
push
jae
mov
aad
fwait
shll
add
dec
pusha
xchg
insb
fisubl
daa
push
or
out
jae
lret
scas
gs
test
sub
jp
fiadds
hlt
mov
popf
repz
mov
aaa
imul
adcb
mov
pop
enter
inc
sbb
insb
xchg
jp
call
call
in
inc
pop
movsl
jnp
dec
pop
or
push
mov
lea
imul
jae
icebp
stc
jmp
js
jno
imul
and
mov
mov
movsb
push
iretw
movsl
or
push
movsw
jge
xchg
stc
clc
push
or
scas
or
aam
sbb
pushf
ljmp
xchg
add
nop
sahf
cmpsb
pop
mov
sbb
pop
cmp
fimuls
xor
sbb
adc
adcl
and
cmp
rol
pop
xchg
pop
add
lcall
and
orb
dec
inc
fs
add
adc
cli
mov
dec
das
ss
imul
xchg
mov
jno
xlat
inc
dec
cmp
cmp
ss
cmp
mov
jg
push
js
pop
add
jae
jne
in
xchg
negl
negb
and
ja
pop
adc
xorl
cmp
inc
cmpb
and
mov
jmp
push
cmpsb
add
cltd
dec
mov
rcll
jmp
pusha
cmp
inc
lods
adc
push
nop
inc
jle
in
dec
pop
mov
insl
std
fsubl
fsubrl
jmp
mov
pop
addr16
rorl
les
push
lock
fsts
into
fisubrl
lods
xchg
test
and
jne
or
adc
fmull
xor
int
das
addl
jg
adc
imull
mov
mov
sahf
loopne
inc
inc
push
faddl
xchg
dec
mov
dec
jo
pop
test
push
sub
test
cmp
add
add
rcrl
jle
icebp
sarl
mov
mov
enter
push
mov
gs
dec
jge
push
test
es
sbb
rclb
pop
leave
mov
popf
xchg
sbb
ds
jge
pavgb
imul
xchg
xor
stos
or
jl
lcall
pop
pop
cmpsb
rorb
dec
movsl
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
leave
jb
sub
adc
adc
adc
sbb
jae
xchg
mov
sbbb
add
jno
or
push
xchg
cli
mov
push
jle
pop
movsb
cmp
push
jbe
scas
pop
in
call
es
add
jb
and
arpl
pusha
mov
inc
mov
fstps
out
xchg
scas
adc
mov
add
in
jp
and
add
adc
mov
fstp
ljmp
rcrb
stos
push
icebp
xchg
popa
pop
test
lea
ret
inc
cmp
push
mov
adc
daa
sbb
daa
xor
adc
mov
xchg
sub
into
inc
mov
shl
in
pop
stos
mov
mov
or
cld
loopne
pop
ss
pop
push
mov
in
cmc
repz
out
and
push
mov
or
push
decb
sbb
divb
pop
out
nop
xchg
in
xor
xor
and
push
mov
mov
movsb
pushf
push
dec
push
clc
movhps
adc
daa
or
jns
or
rcll
mov
loope
out
in
mov
inc
aaa
or
jmp
mov
popf
cmpsb
ffree
out
sub
push
lea
orb
jge
in
es
sub
add
sbbl
cmp
push
dec
mov
xchg
dec
add
repnz
xor
sbb
int
add
mov
inc
shll
sbb
sub
xor
fdivs
arpl
testl
sbb
repz
mov
ficomps
fs
jmp
adc
rclb
push
mov
in
mov
jne
add
adc
cmpsb
dec
fsubrl
icebp
aam
push
cmc
cmp
xor
xchg
mov
int
mov
fstpt
xor
xchg
pop
repnz
dec
loop
and
and
iret
stos
cmp
ss
fdivl
pop
push
or
xchg
inc
mov
fists
outsb
lret
imul
test
inc
sub
xchg
mov
ljmp
repz
icebp
stc
mov
test
cltd
add
xchg
adc
je
out
fdivr
in
mov
enter
js
mov
es
pop
sbb
enter
std
rolb
xor
cmpxchg
rorb
mov
cmpsb
ss
popf
lea
mov
stos
orl
dec
jge
inc
fdivs
fwait
rolb
lcall
jns
and
sub
ss
push
push
movsl
adc
push
je
xor
dec
push
pop
inc
xchg
jge
jmp
sbb
jecxz
test
lcall
or
mov
cmp
loop
imul
cli
xchg
cltd
loop
push
jb
shll
mov
mov
inc
cmp
stos
test
inc
or
pushf
movb
dec
daa
xor
sahf
mov
fisttpll
stos
or
mov
test
push
out
mov
pusha
cmp
mov
js
lea
or
jne
cs
xchg
cli
psignd
scas
pushf
xor
inc
jmp
push
push
rolb
lret
fmuls
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
or
pop
sbb
inc
mov
xor
xchg
or
inc
mov
ret
ss
and
mov
nop
insb
out
loop
pop
flds
repnz
ficomps
add
lea
xorb
adcl
ljmp
out
bound
je
push
test
lds
in
pop
pusha
adcb
pop
decl
adc
and
loope
mov
sbb
test
xor
hlt
xor
mov
cwtl
xor
shll
add
int3
jo
xchg
in
cmpsl
xchg
or
dec
fnsave
sbb
and
loopne
mov
xor
mov
jmp
mov
mov
mov
mov
push
leave
xor
dec
mov
sbb
push
adc
imul
in
cld
adc
daa
mov
jo
jbe
hlt
test
loop
addl
push
dec
or
mov
js
adc
imul
adc
pop
scas
sub
mov
loop
add
mov
lahf
adc
push
inc
jae
pop
push
int
int
mov
add
push
pushw
outsb
aam
push
sub
xchg
mov
dec
and
pop
sbb
mov
add
js
test
out
int
dec
movsl
add
sbb
cmp
sbbl
loope
or
dec
out
jle
push
mov
and
cmpsb
stos
daa
rorl
leave
push
mov
popf
clc
xchg
adc
xor
xor
movsl
pop
sbb
jnp
das
xor
adc
in
std
ljmp
xchg
out
into
xchg
mov
sbb
subb
in
inc
mov
and
sub
aaa
in
push
sbb
pop
mov
and
fisubl
sub
sbb
pop
mov
push
das
xor
add
insb
jbe
pop
int3
and
pop
int
bndldx
cwtl
sbb
mov
and
push
adc
inc
fisttpll
jae
jb
fneni(8087
push
dec
push
aaa
push
or
bound
sub
or
cli
add
inc
pop
or
nop
rolb
aaa
test
imul
mov
xchg
cs
and
jbe
faddl
cmp
pop
push
jmp
jbe
enter
and
sub
pop
rclb
imul
jbe
data16
fistps
aaa
inc
in
mov
inc
cmp
cmp
into
jbe
mov
add
aas
movb
xlat
nop
icebp
xor
int3
inc
mov
push
inc
sub
adc
or
push
fsubl
push
pop
js
incb
mov
sbb
mov
addr16
pop
out
es
cmp
push
pusha
test
decb
hlt
push
and
in
aam
scas
movsl
mov
adc
nop
adc
bound
or
movsb
push
mov
outsb
adc
fiaddl
add
ret
jge
mov
in
jmp
pop
dec
dec
pop
xor
sub
pop
mov
jecxz
xor
insl
jg
inc
or
mov
test
sarb
in
push
lods
out
rcrb
add
jb,pt
lock
loope
in
cmpsb
dec
ret
js
dec
or
daa
bndldx
lock
daa
adc
sbb
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
int3
lods
lcall
adc
add
imul
mov
xchg
inc
push
mov
xor
lds
mov
pop
or
jns
hlt
mov
lret
leave
mov
sahf
into
xor
and
decl
mov
push
int3
js
inc
or
lods
in
sbb
fstl
lds
icebp
pop
pop
pop
ret
mov
cmp
dec
loop
cmc
dec
jl
leave
push
fs
mov
mov
or
dec
mov
fs
inc
mov
or
stos
cmp
sbb
mov
scas
roll
sbb
inc
or
cmp
dec
sti
sbb
mov
xor
aam
mov
ret
add
ljmp
cli
push
ds
ja
jns
xchg
xor
hlt
xor
ds
xchg
xchg
popa
leave
std
insb
or
mov
mov
cmpl
imul
jnp
ds
inc
les
xor
stc
repnz
or
inc
jae
stos
mov
fisubl
dec
movsb
mov
or
push
in
jp
test
cmp
test
sbb
sub
cmp
sti
mov
cs
in
sahf
lret
lahf
jbe
stos
stc
bound
inc
inc
cmp
gs
jle
pop
test
addr16
push
sbb
mov
inc
cmpsb
adc
aad
fcmovnu
bswap
or
cli
loopne
scas
jl
inc
inc
fninit
push
dec
jo
push
inc
dec
negb
outsl
mov
pop
pop
xor
xchg
pop
in
std
sbb
fisttpl
xchg
jge
popf
jo
sub
aad
cmp
jl
add
inc
cwtl
je
rcll
sahf
les
push
nop
cs
and
dec
movsb
add
sub
neg
ds
cmp
jo
sbb
and
push
sub
jns
push
mov
in
push
sbb
and
push
fcomp
sbb
or
das
xor
imul
jp
inc
cmc
iret
and
mov
sub
pop
rorb
test
inc
mov
mov
rep
mov
lcall
in
rclb
mov
icebp
pop
pusha
stc
leave
inc
cmp
repnz
xchg
pop
loop
sar
aaa
xor
mov
mov
add
adc
stos
dec
data16
jle
sbb
mov
negl
mov
adcb
sub
into
adc
cmp
adc
jo
repz
add
xchg
mulb
lods
popf
lcall
hlt
cmp
sbb
stc
xchg
xchg
sbb
in
rcr
and
sub
pop
dec
dec
adc
dec
test
lret
clc
push
fdivrl
add
bound
cmp
sub
push
icebp
xlat
ljmp
lcall
add
repnz
scas
jge
in
xor
jnp
inc
xorl
shrb
cmp
sbb
sbb
mov
add
xor
loope
int
and
jno
ret
movsb
dec
or
ret
xchg
mov
jae
mov
aas
or
push
or
fnstcw
leave
mov
adc
mov
outsl
in
jnp
add
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
xlat
pop
jbe
dec
test
adc
adc
adc
mov
clc
inc
push
dec
adcb
sarb
cmpl
out
fists
cmp
mov
lret
sbb
xchg
aaa
lret
sub
lret
cmc
pop
dec
push
lcall
push
mov
jg
pop
iret
lcall
xor
sbb
add
sti
fcoml
bound
sub
adc
fwait
jnp
add
lock
dec
xor
iret
mov
cmp
imul
fst
roll
xchg
adc
jle
test
pop
dec
or
and
mov
cmp
inc
cmp
push
jle
mov
sbb
jge
ds
lea
cmpsl
leave
scas
mov
fsub
rcl
jg
out
imul
movl
push
scas
cmp
sub
mov
or
aad
fldt
jge
mov
repnz
add
add
mov
mov
sub
lcall
mov
out
jne
mov
pushf
ja
ljmp
call
por
sbb
arpl
sbb
bound
icebp
cmpsl
jns
orb
mov
fwait
and
cltd
jge
lock
aad
jecxz
sub
mov
gs
dec
jle
inc
push
xchg
repnz
mov
and
ds
cmp
loop
aas
xchg
repz
push
mov
mov
je
adc
jb
mov
movsl
and
xor
push
fldcw
mov
inc
fwait
push
pusha
pop
ds
je
mov
push
push
cld
inc
lds
imul
dec
pop
aad
movsb
jl
in
mov
and
imul
adc
popa
mov
lret
scas
sbb
imul
or
add
dec
stc
xchg
aad
fcoml
add
movsb
into
cmp
shll
cmp
add
addr16
popa
addr16
mov
loopne
les
les
xor
push
jmp
mov
pop
mov
jp
xor
out
inc
push
out
or
xchg
subl
shll
push
fildll
mov
ljmp
imulb
sbb
cmp
add
mov
movsb
mov
mov
fmul
shr
mov
call
adc
orb
int3
popa
inc
xor
push
jmp
lcall
aas
int3
cmpsl
aam
xor
lea
xchg
cmpsl
movsl
xchg
cli
outsb
adc
jle
mov
lret
inc
adc
fs
pop
push
sbb
add
xchg
sub
and
sub
loopne
inc
lds
dec
ja
je
sbb
imul
call
test
add
loopne
push
inc
cwtl
out
mov
cltd
inc
fdivs
push
cltd
cwtl
and
jb
or
mul
sub
and
xchg
jecxz
mov
sahf
setnp
cli
jbe
sub
imul
filds
and
inc
fnstsw
mov
or
out
cmp
jae
arpl
lahf
mov
lahf
dec
adc
mov
mov
stos
test
and
ss
mov
sahf
inc
es
xchg
sub
lret
inc
adcb
adc
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
jge
fidivrs
int
adc
mov
sub
xor
movsb
xorl
aaa
loop
loop
jnp
inc
push
testb
pop
xchg
cltd
inc
dec
dec
iret
mov
jp
aas
orb
test
push
sbb
lret
repz
and
push
andl
jno
push
or
inc
out
cmpsl
jns
sbbb
mov
mov
add
jg
push
fs
ret
pop
or
in
xor
gs
pop
adc
cs
dec
pcmpgtw
mov
pop
dec
sub
sbb
xchg
aam
out
pop
pop
add
add
mov
leave
test
mov
das
std
scas
loop
je
push
mov
fadds
or
je
cmp
movsl
stc
cld
std
popf
insl
mov
sar
fiaddl
mov
jnp
xlat
dec
push
jge
jle
or
int3
adc
pop
cld
test
test
xor
out
into
xor
ds
mov
push
leave
icebp
mov
mov
out
and
lahf
repz
hlt
out
push
dec
mov
mov
pop
in
cmp
cwtl
imul
fnstcw
ds
pop
xchg
jmp
fdivr
pop
and
stos
cmp
ljmp
daa
outsl
add
inc
add
jnp
inc
pop
sbb
pusha
sbb
int3
and
cltd
and
push
shrl
jle
jle
jp
nop
dec
lret
pop
pushf
jo
push
call
std
shlb
scas
or
iret
jp
jae
mov
sbb
push
and
and
adc
int3
mov
mov
add
pop
das
rcl
dec
imul
sub
idiv
daa
mov
int
or
mov
subl
dec
mov
add
iret
sahf
loop
cmc
sbb
fidivl
xlat
sbb
std
push
fidivrs
sarl
sahf
setb
nop
push
and
mov
je
cmp
pop
je
addb
cmpsb
xchg
inc
mov
sti
mov
movsb
push
cmp
add
push
cltd
incl
fsin
loop
adc
jmp
call
inc
xlat
xchg
mov
pop
mov
xchg
notl
cmpsl
cmp
adc
or
movsb
push
lods
test
in
dec
and
insl
push
addr16
out
mov
imul
xor
dec
xchg
xlat
pop
pop
repnz
pop
sbbl
cmp
mov
fimull
push
xor
insl
cmp
jl
aas
pop
pop
mov
cmp
in
adc
inc
sbb
negb
cwtl
dec
imul
push
cmp
test
fs
into
push
or
push
in
pop
mov
xchg
ljmp
jae
iret
lret
jmp
mov
mov
sbb
popa
mov
leave
repnz
inc
xor
push
aad
and
adc
mov
xchg
and
aam
cmp
ds
jae
loope
sbb
cvtdq2ps
ret
mov
dec
ljmp
pop
fmull
in
mov
repz
leave
mov
inc
rol
dec
int3
mov
scas
xor
jbe
pop
fsubp
mov
inc
push
hlt
jp
mov
jae
lods
lods
fcom
std
addr16
aas
sub
pop
daa
push
fidivrs
lea
add
push
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
mov
je
adc
adc
adc
mov
sbb
sbb
fnstsw
jbe
mov
xor
sub
sub
inc
and
dec
popa
ja
add
aam
movsl
lods
add
loope
test
pop
out
enter
aas
cmp
shrb
ja
repnz
scas
push
jmp
sbb
movsb
mov
jne
cmp
jo
dec
lahf
mov
mov
arpl
jg
pop
mov
sbb
xor
in
push
movsl
adc
add
out
js
les
lds
or
pop
push
jnp
rcrl
sub
cmpsb
je
xchg
imul
xchg
or
add
lods
xchg
mov
fwait
jae
lods
outsb
sbb
jno
lret
mov
and
frstor
jge
and
out
xchg
jo
pop
cmp
imul
outsl
sub
or
mov
fsubs
mov
inc
test
sub
repz
subb
lcall
in
out
mov
pop
out
sub
iret
cmp
inc
scas
lods
dec
adcl
loope
cwtl
stos
shlb
loopne
les
outsl
std
test
or
insl
jo
fcmovnbe
jp
xor
dec
inc
ljmp
inc
jb
push
or
or
sti
push
cli
mov
cmpsb
cmpsb
leave
fdivrl
fdivl
push
dec
int
mov
mov
insl
pusha
iret
ja
insb
movsb
fsubs
mov
ja
add
nop
push
fidivrs
mov
jg,pn
dec
test
mov
push
jecxz
or
in
mov
popf
lcall
mov
ret
sbbb
or
jp
ss
fwait
push
ljmp
pop
lret
or
andb
in
cwtl
pop
into
int3
inc
inc
scas
sarl
push
jbe
ss
pop
push
pop
out
test
dec
add
push
addr16
mov
adc
fbstp
nop
mov
adc
call
jge
add
sub
xor
fmuls
inc
cld
pop
pop
adc
pop
sti
mov
in
dec
fs
pop
lock
jl
jo
pop
icebp
adc
clc
jg
mov
push
cmpsb
mov
call
push
mov
ret
imul
in
mov
shll
data16
xchg
push
mov
cmpsb
mov
popf
out
jge
sub
cwtl
xor
jns
mov
dec
data16
mov
imul
loope
dec
sub
adc
pop
fistpll
mov
daa
lods
jns
pop
fisubrs
cmpsl
xor
in
push
lahf
ret
or
pop
add
mov
je
jns
imul
cmp
mov
enter
pop
inc
sub
cli
mulb
sbb
xor
sbb
aas
stos
pop
lret
fsubrs
rorb
or
ds
cmpsl
adc
cmp
call
adc
mov
xor
mov
ja
icebp
sub
pop
or
or
sub
pushf
fisubrl
out
hlt
call
pop
sbb
jecxz
add
ret
mov
out
or
ror
adc
mov
test
in
inc
mov
inc
add
dec
or
mov
loop
in
dec
add
gs
shrd
jmp
ja
jle
sub
xchg
mov
ss
pusha
js
jb
adc
adc
adc
fcmovnu
lods
loop
push
add
bound
ret
dec
push
roll
ds
mov
les
mov
sahf
out
fucomp
in
push
das
pop
pusha
mov
xor
mov
cld
jns
enter
test
lods
lahf
jns
iret
mov
dec
mov
fiadds
push
or
cld
jbe
xchg
push
out
lds
cmp
icebp
mov
and
ret
xchg
movsb
xchg
test
pop
sub
lcall
sahf
mov
fldl
enter
pusha
inc
xchg
xchg
jmp
pusha
pop
test
fbld
adc
add
outsb
push
sub
aad
fsubs
dec
sub
or
lds
movsl
mov
or
loope
mov
jo
lds
xor
jge
je
sbb
sub
dec
mov
loope
cmp
mov
mull
clc
ss
cmpsb
mov
out
adc
add
pop
xchg
mov
or
jp
and
testb
or
cld
pop
int3
adc
xchg
jae
gs
inc
mov
mov
mov
rcrl
sbb
in
push
xchg
add
cs
lea
shlb
in
test
push
imul
xlat
xchg
lods
push
mov
sbb
ror
cmpsb
add
stos
out
hlt
mov
and
dec
xchg
push
lods
popa
and
xchg
mov
inc
cs
das
and
mov
lahf
or
ret
inc
add
in
sub
or
add
sti
fmull
inc
cmp
mov
lcall
push
dec
xor
aad
inc
adc
or
rcl
xor
or
inc
xchg
lods
or
sub
cwtl
iret
xor
and
jb
sbb
sahf
dec
and
ror
in
loop
jmp
call
mov
sbb
add
das
cmp
sbb
and
fstl
jns
push
jl
mov
or
setae
sbb
mov
dec
jl
shlb
iret
mov
mov
stos
lods
and
pushf
add
inc
pop
mov
push
hlt
pop
mov
pop
int
shrb
daa
jmp
cmp
lcall
ja
gs
arpl
inc
mov
xchg
out
je
mov
clc
cmp
mulps
sub
lods
je
push
add
jp
int
lods
jp
sub
es
sbb
adc
loopne
das
inc
imull
xor
mov
adc
jb
aad
lods
and
mov
jl
push
jmp
push
inc
sbb
pushf
int
lahf
stc
add
jmp
jp
jae
jb
aam
int3
rclb
mov
gs
es
pop
int
sub
dec
int3
push
mov
loopne
sbb
outsl
scas
stc
mov
and
fsubr
jmp
in
cmc
cmp
dec
hlt
cmp
shrb
jge
popf
cmp
sub
push
push
jo
hlt
cli
es
push
imul
or
pop
jl
xchg
fwait
inc
adc
xor
cwtl
xchg
loop
imul
add
mov
js
jl
bound
cwtl
inc
mov
dec
dec
sbb
sbb
mov
xor
mov
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
rcrl
and
adc
int
adc
mov
mov
jno
js
movsb
mov
push
xchg
mov
hlt
fcoml
bound
mov
cmp
dec
xlat
fisubl
jle
and
test
pop
xor
cmc
arpl
loope
cmpsw
mov
mov
pop
mov
mov
mov
push
jo
ja
cmp
jmp
add
ret
push
adc
and
call
pop
sub
xor
pop
push
pop
shll
xchg
or
sarb
jnp
cmpsb
rolw
aaa
lret
div
fsts
fwait
data16
inc
leave
js
jmp
in
push
ret
adc
mov
lret
or
ret
or
stos
push
or
xchg
mov
jle
xchg
stos
push
sbb
pop
incl
sbb
push
adc
pushf
mov
adc
inc
mov
xchg
ret
cltd
dec
in
lret
popa
pop
cli
fs
or
pop
cmp
or
stos
std
push
sbb
lret
ljmp
int3
cld
call
inc
scas
jns
push
ss
adc
aam
cmpsb
jle
mov
mov
insl
dec
xchg
mov
cltd
or
inc
inc
or
and
inc
xor
xchg
in
xchg
dec
and
popa
jmp
and
sbb
push
push
mov
sti
xchg
push
and
inc
scas
hlt
adc
gs
popa
mov
sub
fcomps
test
aad
and
mov
pop
jbe
aaa
xchg
andb
pushf
imul
mov
outsl
js
xchg
aaa
and
mov
shll
in
popf
push
sti
xchg
pop
js
push
xor
sub
outsl
jb
loope
aas
push
pusha
xchg
and
ret
sbb
les
jbe
push
movsl
dec
or
push
mov
cmpsl
insb
cmp
inc
fwait
pop
sbb
scas
test
sarb
add
idivl
repz
sbb
pusha
sbb
inc
dec
sub
pop
dec
movsb
roll
hlt
leave
addr16
mov
mov
add
rcl
dec
imul
cmp
adc
repz
jg
jl
ss
nop
cmpsl
inc
les
sahf
in
dec
lahf
pop
xchg
stc
test
cmp
push
dec
popa
pusha
jo
daa
jae,pt
subb
mov
inc
icebp
inc
mov
push
push
ss
mov
call
pop
dec
aas
bound
push
je
inc
imul
mov
andb
sbbl
es
dec
adc
cmp
push
mov
jne
mov
sub
popf
mov
cltd
prefetch
or
jnp
and
leave
ljmp
pop
mov
mov
sbb
sbb
je
mov
pop
subb
out
mov
test
ffree
xchg
fidivrs
call
sbb
xchg
les
mov
cmp
pop
cmp
adcl
xchg
sbb
pop
sbb
testl
data16
push
mov
mov
jns
jl
shll
mov
sbb
cmp
mov
add
outsl
cltd
call
sar
scas
mov
pop
mov
shrb
inc
in
cmp
sbb
mov
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
xchg
and
fisubs
adc
adc
repnz
fildll
cwtl
push
pop
xor
jecxz
or
into
subb
and
popa
sbb
adc
ja
inc
jg
test
push
xor
adc
cli
xchg
test
in
sbb
inc
pop
mov
repz
xor
out
mov
sub
sub
leave
dec
and
cmp
clc
jg
push
clc
adc
jl
sahf
and
or
and
je
lret
lods
or
xchg
ljmp
adc
leave
mov
mov
addb
sub
ja
out
dec
mov
pop
ss
jg
dec
popa
js
enter
cmp
pop
mov
mov
push
mov
lahf
push
test
aad
mov
mov
xchg
mov
out
mov
cli
inc
push
push
adc
je
hlt
xchg
xor
xchg
cmp
cltd
ficompl
dec
adc
cmpsl
scas
iret
aaa
aas
sbb
mov
jle
leave
xchg
xchg
jl
and
aaa
or
cmp
subl
mov
xor
sub
out
inc
imul
push
imul
push
out
loopne
je
pushf
inc
xor
sbb
lcall
mov
repz
cmp
adc
fcompl
popf
scas
jecxz
mov
xchg
and
sahf
outsb
lcall
rcrl
dec
push
hlt
xchg
repnz
adc
outsb
repnz
lret
jae
cmc
frstor
pop
pop
iret
fdivl
mov
loopne
inc
mov
jg
jnp
xor
dec
hlt
xor
push
add
lock
mov
icebp
cmp
jne
in
jae
add
jb
dec
jge
testl
mov
dec
xchg
dec
cmp
cwtl
or
jmp
call
and
xor
or
add
shlb
adc
arpl
out
movsb
scas
scas
dec
cmp
test
cmp
imul
xor
syscall
movsb
aad
out
mov
repnz
mov
adc
iret
mov
mov
ret
iret
out
mov
popf
adc
push
mov
bound
popf
dec
push
pop
lock
insl
cwtl
fdivl
xchg
sub
in
and
push
mov
dec
in
sub
cmc
pop
inc
out
add
mov
out
inc
pop
xchg
je
mov
mov
stos
jns
stc
lcall
ret
add
cwtl
xor
jge
jno
out
jns
mov
and
or
mov
mov
out
mov
pop
and
pop
sbb
inc
adc
jne
push
sarl
sbb
pop
sub
movsb
out
dec
in
loope
repnz
movsb
ret
mov
int3
dec
je
andps
test
add
inc
cmp
stos
insl
xor
shlb
ret
into
mov
xchg
jbe
aas
pop
inc
imul
addr16
mov
mov
testb
xor
out
sbb
xor
push
bound
and
add
inc
fs
jb
xchg
mov
xchg
test
jnp
es
cwtl
push
cli
in
adc
sub
sbb
jge
lods
cmp
sub
jp
loopne
out
xor
and
outsl
in
jbe
out
or
dec
jp
lea
pushf
inc
lret
hlt
fwait
adc
pop
fldt
and
in
mov
popa
add
xchg
stos
xchg
cmpsl
cld
xor
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
xchg
mov
adc
xor
adc
lock
pop
mov
pop
add
fsubrp
movsb
scas
in
sti
notl
ljmp
or
mov
cmp
outsl
mov
data16
mov
imul
add
push
xor
sbb
inc
aaa
aam
push
mov
insl
test
jbe
out
nop
push
scas
adc
out
xlat
inc
sub
add
and
add
ror
ret
sub
cli
aam
call
mov
frstor
sub
sbb
lahf
and
scas
cmp
sub
push
fstpt
and
cmp
fcoms
push
sbbl
lea
je
and
push
aas
xchg
adc
or
data16
add
mov
xchg
das
movsb
pop
xchg
jae
gs
or
notl
imulb
fmuls
sbb
adc
xchg
jge
lahf
in
testb
in
jle
sbb
int3
nop
cmc
test
push
jnp
jne
pop
push
sub
movsb
lret
add
adc
jg
mov
lods
mov
scas
lcall
sbb
lahf
cmp
xchg
mov
inc
aaa
inc
xorl
shll
daa
stc
sub
xchg
xchg
push
aad
std
aaa
inc
add
fwait
mov
loop
cwtl
mov
mov
ds
xchg
loope
add
addr16
fwait
pusha
push
test
sub
cmp
stos
addr16
ss
jns
fidivrl
ret
ds
mov
cmp
add
addr16
jbe
jnp
cld
outsb
inc
sbb
pop
inc
popa
stos
fldt
jmp
aas
js
cmovg
pop
sbb
ret
and
stos
or
cmp
xchg
cmc
loopne
popf
or
add
shll
insl
fcom
jnp
mov
pusha
push
push
mov
adc
aaa
mov
jge
loopne
push
mov
adc
out
enter
outsl
mov
and
sub
jbe
adc
movsb
inc
sbb
bound
jne
mov
ror
xchg
mov
cmpsl
jl
orb
mov
popf
cld
xchg
xor
lret
dec
cmp
out
dec
adc
addr16
cmpsb
mov
sbbb
out
push
mov
and
enter
push
and
mov
nop
loopne
mov
jle
scas
or
dec
hlt
pushf
dec
popf
lds
xchg
adc
mov
lret
test
aas
mov
and
pushf
cmc
dec
loopne
jmp
ja
xor
jg
dec
xchg
shl
addr16
insl
add
testl
jecxz
push
mov
dec
dec
mov
sbb
push
rorb
mov
or
adc
sbb
mov
and
or
jp
inc
pop
loopne
push
frstor
pop
or
jl
repz
lret
push
sbb
cld
out
loop
in
push
repz
cmpsl
pop
add
jp
ret
xchg
cmc
lahf
add
addr16
mov
jbe
adc
jg
ret
dec
cmp
cli
pop
mov
dec
push
mov
push
mov
and
test
test
xor
and
jmp
fistpll
jno
sub
shll
leave
or
xchg
out
sbb
nop
bswap
mov
sbb
lea
or
adc
sub
sti
dec
das
cltd
cmp
inc
or
out
inc
subl
je
movsb
jl
in
subb
adc
cmc
int3
jbe
sahf
enter
push
or
lods
xchg
or
ds
shll
mov
data16
orl
clc
shll
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
dec
cmp
push
adc
xor
adc
jp
lods
sbb
jb
sub
add
mov
repz
loope
dec
sbb
mov
mov
sbb
and
notl
mov
sahf
xor
jp
pop
comiss
mulb
cli
popf
lcall
testb
mov
xchg
in
ret
leave
aas
jno
lret
sbb
sub
lods
sti
and
bound
cs
mov
jge
pop
nop
lss
cmovge
dec
inc
test
bound
inc
mov
mov
aam
movsl
mov
mov
cwtl
cwtl
mov
mov
sbb
dec
imul
in
sahf
xor
popf
addr16
sahf
mov
xchg
cmp
pusha
jo
inc
add
sarl
out
rcl
test
adc
aas
cmp
dec
ja
sub
inc
daa
sub
xor
lods
inc
std
xchg
iret
stc
and
mov
xchg
dec
mov
push
scas
je
shrb
cmp
scas
rep
add
xor
out
xor
pusha
or
hlt
repnz
clc
shlb
iret
pop
fwait
repnz
cmpsl
mov
fwait
lea
add
lock
pop
pop
shll
jo
ror
inc
cmpsb
inc
jmp
inc
pop
test
push
adc
pop
je
aas
mov
sbbb
dec
rol
mov
add
jmp
fdivl
push
outsl
mov
rclb
mov
jl
insb
movsl
mov
inc
ror
push
incl
loop
mulb
lret
imul
addr16
mov
dec
inc
add
jge
fdivl
sbb
fisubl
mov
sub
outsl
dec
xor
dec
into
sarb
xlat
pop
xchg
inc
lcall
add
lea
dec
in
sti
sub
movsb
iret
ret
jae
ret
cld
sbb
mov
pushf
stos
mov
add
mov
movlps
jno
subl
loop
mov
aas
xor
cmp
mov
jae
xchg
mov
in
or
sarl
mov
pop
push
pop
arpl
sub
sbb
test
cs
or
jl
and
aas
mov
mov
pop
push
and
nop
pop
push
scas
lcall
imul
jge
ja
out
xchg
aaa
pop
lcall
mov
je
cmp
pop
fcompl
in
dec
jb
ljmp
dec
push
xor
faddl
inc
aam
es
loop
mov
fisubs
fldcw
sti
sbb
fdivrl
xor
fidivs
les
pop
adcl
and
push
add
test
mov
jns
xor
jge
cmp
xchg
xlat
adc
jnp
mov
adc
test
xor
jo
ljmp
cmpsl
push
push
and
inc
push
outsl
xlat
in
mov
filds
push
inc
jp
fcompl
mov
cmp
shlb
lahf
les
test
mov
in
popa
shrb
clc
inc
mov
hlt
pusha
xchg
mov
push
pushf
push
stc
shrb
lret
jne
arpl
xchg
lds
enter
jns
push
shl
arpl
cmp
and
nop
test
dec
xor
or
cltd
inc
test
fdivrp
pop
jbe
inc
xor
adc
vmovdqa
mov
call
mov
push
inc
aam
inc
testb
dec
mov
icebp
lcall
subb
cmp
add
or
hlt
iret
pop
push
mov
pop
stos
jg
lret
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
mov
mov
xor
adc
scas
jo
ljmp
scas
aas
or
or
shll
mov
cmp
loop
cmp
xchg
loopne
repz
jmp
insb
outsl
scas
in
test
je
jae
jg
enter
repnz
or
sbb
mov
fwait
das
push
call
push
sub
or
mov
sbb
cs
movsb
mov
pop
and
repz
pop
in
repnz
pop
sub
sti
pop
cmpsl
dec
dec
leave
lahf
pop
hlt
subl
or
pop
and
iret
dec
loop
jae
lahf
jp
inc
or
dec
push
cmpl
xor
in
pop
xor
icebp
add
divl
std
cmc
sahf
fdivr
sbb
xchg
mov
outsl
mov
mov
das
adc
jmp
mov
sub
ss
xchg
and
mov
scas
jecxz
xlat
shrb
pop
sbb
das
lods
inc
popa
cmc
mov
jge
pop
cmp
leave
jo
pushf
xchg
enter
dec
mov
add
xchg
leave
lret
jne
fldenv
ficompl
clc
scas
inc
push
stos
mov
es
cmc
ds
out
jmp
repz
repnz
mov
mov
lea
hlt
scas
or
fiadds
adc
inc
stc
xchg
and
adc
push
movsb
add
addr16
out
sbb
in
push
jno
js
jns
cmpsl
popf
fcoml
icebp
inc
rorb
push
cmp
xchg
cmp
add
inc
push
test
and
sub
dec
rcl
in
pop
hlt
popf
mov
shll
cli
retw
mov
adc
ficomps
test
stos
lret
fldenv
movsl
roll
hlt
enter
fnstenv
jno
fmull
sub
lock
mov
xchg
fildl
xlat
fldl
push
xor
pop
out
mov
jl
add
cli
test
mov
pop
xlat
push
add
sbb
fs
push
xchg
pop
cmpsl
sub
dec
cli
adc
xor
xchg
loope
add
hlt
notb
cltd
js
clc
loop
movsb
sub
dec
and
repnz
je
jg
jns
or
push
shlb
jbe
leave
push
outsl
dec
loop
jge
enterw
jle
jae
pusha
loop
scas
sahf
loope
fucomp
xor
sub
mov
sbb
scas
cmpsl
and
mov
xor
fisttpl
movsbl
ficompl
inc
mov
cltd
xchg
pop
xlat
or
dec
sbb
or
sbb
lahf
mov
ror
push
add
mov
outsb
mov
rorl
xchg
lret
xchg
aaa
cltd
push
inc
icebp
stos
gs
fcom
out
call
in
fisttps
xchg
pop
lock
inc
call
shll
push
iret
push
popa
fs
sub
gs
inc
fisttpll
in
xor
outsb
push
pop
add
je
test
pushf
pop
in
ljmp
shlb
dec
cmc
fistpll
repnz
or
mov
adc
fdiv
inc
mov
pop
loope
jo
xchg
cmpsl
pop
mov
jno
jge
add
sub
inc
or
push
inc
mov
sbb
loop
push
cltd
es
int
addl
pop
xchg
jb
mov
or
sbb
inc
outsb
lahf
push
pusha
cmp
xchg
sub
fs
stc
aad
ja
adc
aas
and
mov
or
cmpl
adc
sub
xchg
xchg
cld
jb
fsubrs
add
jmp
shll
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
pop
loop
cmpsb
lods
jb
push
imul
je
ret
dec
js
push
cmp
xor
cmp
pop
daa
aad
in
sub
adc
faddp
ja
out
push
fnstsw
sbb
xor
jmp
jo
xchg
xchg
nopl
xchg
rcll
xchg
jl
pop
mov
cltd
pop
ljmp
dec
pusha
cmpsl
testb
xor
mov
inc
jae
mov
gs
add
jb
sub
adc
loop
mov
cmpsb
add
pop
outsb
call
mov
pop
xor
mov
mov
test
dec
xchg
sub
mov
xor
jnp
add
ret
sbb
dec
out
dec
xchg
and
adc
xchg
push
fwait
aam
out
jns
scas
cmp
push
fsubrl
pop
cmp
inc
mov
sarl
jp
repnz
or
insb
clc
cmc
fsubs
sbb
xor
imul
mov
jno
aaa
push
adc
test
xor
pop
push
jns
push
popa
inc
lds
and
pop
lcall
xor
xchg
insb
mov
in
mov
dec
loope
in
mov
or
test
ret
loopne
push
dec
lods
sbb
ljmp
jmp
in
jns
fdivs
push
cmc
jp
adc
fsubl
inc
fsubrs
imul
and
xchg
fldenv
xor
cmpsl
jl
pop
in
lret
ret
ds
lret
fsts
push
pop
cmp
sub
pop
jmp
loope
mov
dec
xor
test
loop
jecxz
jp
push
scas
push
je
int3
mov
sbb
or
inc
xor
into
int3
xlat
cs
sbb
faddl
test
add
xor
outsb
jmp
add
push
lock
in
test
jne
push
add
xchg
das
jecxz
mov
and
sbb
out
adcb
mov
daa
in
xlat
ss
stc
imul
nop
jb
pop
pop
rcrb
jmp
out
dec
xchg
cmc
mov
iret
data16
lds
outsb
or
repz
call
addr16
outsb
call
pop
jb
test
and
jp
xchg
ja
test
stos
adc
repnz
mov
cmp
push
inc
sub
aaa
js
dec
clc
in
add
and
mov
rcrl
adc
adc
push
jb
into
out
push
loop
cmpsb
lods
jmp
push
loope
xor
ljmp
jge
and
repz
loope
mov
testl
add
outsl
xchg
lods
mov
test
xchg
and
mov
popf
inc
sub
xchg
jmp
or
imul
mov
or
das
dec
sub
and
fcos
push
and
lds
rorb
and
mov
sbb
into
test
xchg
out
cmp
in
mov
mov
cmp
mov
adc
outsl
scas
insl
lods
popf
mov
jl
rcr
out
lcall
xchg
popf
fsubl
jae
fwait
add
in
ljmp
lds
pop
pop
ret
adc
mov
in
cmpsb
pop
cltd
inc
pop
mov
add
mov
loope
lods
adc
sub
int
mov
mov
cli
insb
xchg
pop
adc
in
or
xchg
mov
pop
stc
mov
repz
sub
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
xchg
js
cmp
adc
adc
adc
out
or
sub
or
xchg
and
lret
pop
xor
xchg
adc
outsb
test
aad
aaa
push
mov
sahf
pop
lock
rcrl
xchg
cli
test
cmp
aad
dec
outsl
push
xchg
xchg
mov
cmp
xchg
xor
ret
cmp
and
popa
popf
jp
cld
lds
push
fs
xor
pop
dec
loope
inc
xor
sti
inc
and
mov
dec
idivb
in
mov
frstor
mov
out
dec
aas
cmp
es
sbb
dec
push
std
push
loopne
std
push
dec
cmp
ljmp
sub
rcrb
jbe
outsb
mov
stc
add
iret
add
or
push
lods
pop
cwtl
sub
push
jo
and
test
insl
mov
jg
dec
outsb
sub
dec
jae
lock
sti
clc
pushf
push
arpl
fsubp
and
fmull
add
idivl
outsb
out
sbb
adc
pop
push
int3
push
loop
fidivrs
imull
sub
fcmovne
fsubp
pop
inc
fdivrl
mov
sbb
push
sub
sub
or
mov
add
aam
jg
xor
and
out
pop
dec
testl
mov
iret
into
pushf
fcmovu
enter
aam
rolb
shll
gs
pushf
loope
add
fcmove
jns
clc
xor
je
mov
adc
add
or
mov
xchg
and
mov
mov
xor
fdivr
pusha
lods
cmp
ss
mov
inc
scas
inc
pop
bts
fldt
test
je
insl
fcomp
jns
sti
enter
into
andl
jo
push
jp
insl
add
sbb
push
outsl
lahf
adc
lods
cmpsb
sbb
xorb
lods
lods
loop
loopne
jle
outsl
scas
ret
sbb
pop
dec
dec
dec
ret
push
jmp
push
fidivs
test
mov
pop
jo
inc
imul
mov
xchg
call
dec
xchg
mov
cmpsb
push
mov
jp
gs
daa
lock
es
mov
cmp
fsubs
notl
mov
pop
outsl
xchg
fbstp
or
lock
andb
inc
dec
push
mov
and
xor
movsl
cmc
mov
or
lock
pop
fs
cmpl
cmp
cmp
imul
xor
pop
mov
adc
cmpl
add
sbb
test
aad
add
xchg
sbb
call
dec
call
dec
fcomps
outsb
inc
es
xor
jp
arpl
xorb
mov
xchg
iret
mov
fwait
test
pop
into
in
jbe
xchg
aaa
cmpsl
dec
in
xor
sub
mov
scas
mov
jb
jae
sub
fldcw
inc
test
bound
int
pop
gs
loop
xchg
jecxz
popf
mov
icebp
push
loop
in
mov
outsb
xchg
add
mov
or
sub
mov
les
loop
loop
inc
mov
jmp
es
rolb
mov
xor
push
movl
cmp
mov
mov
dec
xor
fs
add
dec
dec
xchg
loopne
add
xor
mov
lock
lds
repnz
cmp
in
or
lret
icebp
subb
sbbb
push
xchg
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
adc
mov
stc
mov
mov
xchg
sbb
add
imul
add
imul
xchg
into
stos
pop
test
pop
inc
mov
subl
mov
mov
outsb
xchg
cmpsb
add
jns
add
sahf
adc
test
inc
push
mov
push
fildll
in
jmp
out
cmp
mov
iret
into
push
and
pop
mov
test
mov
mov
sbb
push
mov
and
jne
push
mov
clc
test
test
hlt
push
cli
int3
add
movsb
sti
adc
sub
pop
jae
pop
clc
dec
dec
jle
dec
add
mov
xchg
lods
mov
mov
lahf
ret
leave
cmpsb
lret
popa
lods
out
popf
xchg
mov
in
add
inc
mov
jae
cmpsl
pop
mov
mov
xchg
mov
scas
cmpsb
aam
lret
clc
cmpsl
cltd
fs
es
push
mov
mov
lahf
sti
lods
roll
in
cmpb
hlt
dec
sahf
mov
stc
mov
in
scas
loope
in
ja
js
inc
lcall
cmc
fisubrs
scas
sub
sub
add
sub
daa
aas
data16
mov
outsl
dec
cmpsl
mov
fistpll
add
push
adc
pop
stos
xlat
rcrb
ss
daa
ss
fs
jne
mov
in
dec
push
movsb
sub
jg
and
pop
push
xchg
sahf
std
push
mov
fdivl
fcompl
es
pop
lea
inc
cmp
iret
mov
mov
sub
jmp
fwait
xchg
or
and
sub
xor
cmp
sbb
xchg
sbb
inc
jmp
cmp
jp
dec
fst
cwtl
int
aaa
adc
cmp
add
jno
and
shll
daa
loop
std
sub
xchg
dec
sbb
mov
xchg
xchg
or
xchg
xlat
mov
in
leave
aad
cli
mov
clc
lds
lock
leave
cmp
sbb
mov
fldl
mov
ror
add
mov
sti
popa
xchg
mov
outsb
outsl
push
xlat
cwtl
add
repz
mov
mov
stos
pop
adc
imul
jecxz
xor
scas
gs
sbb
mov
cwtl
stc
push
cmp
mov
jmp
das
add
shrl
ds
xor
clc
mov
outsl
xor
clc
mov
add
in
xchg
or
out
inc
test
cltd
loopne
or
inc
dec
adc
fcmovnb
rcrl
mov
push
cmp
movb
xorl
test
in
xchg
sub
mov
push
popa
fnsave
stos
sbb
rcrb
movsb
into
mov
lock
push
in
out
test
lret
push
mov
in
xlat
stos
mov
jecxz
ljmp
dec
pop
int
fisttpll
inc
in
outsl
out
pop
jo
mov
aad
iret
call
nop
xchg
jns
dec
hlt
pop
jne
inc
cli
cld
xchg
push
sbb
mov
sbbb
mov
stos
mov
adc
stos
add
in
or
dec
test
adc
xor
xor
mov
int3
push
imul
cmp
subb
inc
femms
shrl
cmpsb
mov
or
test
push
repz
jns
cmp
clc
xor
js
cld
cmpsb
in
scas
dec
ja
xor
mov
xor
call
jle
pop
and
adc
out
pushf
push
movsb
out
loope,pt
add
rolb
xor
jmp
mov
popa
lcall
mov
scas
sub
adc
adc
adc
adc
dec
in
scas
lret
and
adc
xchg
repnz
daa
mov
repz
xor
dec
push
jno
or
xchg
mov
push
in
and
mov
or
fstpl
inc
mov
sbb
cmp
movsl
adc
cli
jae
shll
push
add
daa
jle
bound
xchg
cwtl
adc
pop
repz
xor
sbb
cmc
hlt
inc
sub
lcall
out
xlat
out
push
cmp
mov
int
mov
add
and
jbe
rcrb
sarl
test
add
in
out
xor
sarb
enter
jle
jg
adcl
or
shrl
fdivl
pop
movsl
cld
stc
cmp
imul
sub
push
dec
cmpsl
mov
je
sub
mov
cwtl
test
pop
aaa
push
imul
inc
or
addr16
mov
adc
nop
fnsave
mov
sbb
push
pop
inc
or
or
sti
inc
jns
adcb
cwtl
ja
and
into
das
imul
test
cmp
mov
adcl
loopne
test
dec
xor
sbb
sbb
hlt
test
cmpsl
cmc
xor
sbb
inc
mov
sub
fs
pop
and
rclb
add
clc
pop
xlat
jp
out
mov
mov
jno
inc
or
ds
jle
push
sub
fdiv
jle
bswap
jae
xchg
pop
cmp
mov
lods
sbb
jle
lret
inc
dec
push
add
xor
mov
and
decb
cmp
xor
lret
stos
inc
push
jbe
xchg
xorl
not
nop
mov
push
popl
push
push
sub
fsubrl
jae
xchg
fisubrs
cltd
dec
ss
mov
sub
adc
lahf
push
lret
sbb
xchg
out
in
cltd
sbb
pushf
adc
mov
xchg
pop
lock
movsl
es
lock
mov
scas
clc
imul
inc
xor
repz
lods
jb
lock
cmpsl
movsb
xchg
jbe
gs
pop
rcrl
xchg
mov
jb
inc
mov
cs
xlat
sbb
push
xchg
das
bound
mov
push
clc
xchg
cmp
out
fs
dec
or
push
mov
into
repz
ret
sub
test
dec
iret
bound
in
inc
in
add
stos
cmpsb
pop
adc
movsb
sbb
mov
and
lahf
cmc
out
sar
push
cld
rcll
xchg
movsl
pop
mov
inc
lods
mov
int3
sbb
push
lea
xor
jae
pop
inc
shll
addr16
fs
adc
sar
and
pop
pop
lret
popa
imul
rorl
fwait
clc
aad
jns
cltd
fs
sub
enter
popf
bound
negl
fadds
sbb
xchg
movsb
insb
pusha
adcl
outsl
js
loop
inc
pop
mov
pop
pop
test
adcl
pop
or
sbb
int3
or
aad
pop
dec
repz
sub
test
mov
jecxz
mov
sarl
and
enter
mov
addr16
loop
pop
mov
imulb
test
ds
popa
and
lock
and
xchg
sbb
jo
push
pop
clc
push
jne
sbb
push
sub
push
xchg
mov
outsb
cmp
pop
jb
adc
xor
sbb
inc
inc
orb
call
push
in
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
fiaddl
adc
movlps
xlat
push
outsl
sbb
mov
or
mov
jo
xchg
fcoml
test
sub
mov
shrl
das
jae
sbb
xor
inc
sbb
fcmovnbe
push
jbe
or
dec
lods
mov
xor
ja
hlt
in
sub
fistps
mov
das
mov
inc
jle
bound
fcmovbe
push
mov
sbb
jmp
ljmp
xchg
or
jo
and
jl
inc
movsl
mov
dec
out
dec
add
cmp
clc
gs
sub
sbb
and
xor
lret
jecxz
mov
popf
ret
lds
sbb
adc
fdivrs
xchg
adc
ret
cwtl
pop
ds
jg
popa
fdivrl
lahf
test
daa
stos
lods
jecxz
hlt
or
adc
cmp
cmc
fisubrl
xor
into
dec
aad
xor
sub
jl
into
in
imul
or
adc
and
jne
adc
push
ss
jle
daa
bound
mov
ss
cmp
sahf
push
mov
mov
cmp
lock
imul
or
and
mov
and
imul
test
out
jne
sbb
xlat
int3
adc
pop
sub
aad
or
and
xchg
fnsave
jns
inc
jge
mov
mov
rcr
xchg
sub
add
pop
hlt
leave
into
mov
jnp
xchg
pop
lcall
mov
xchg
dec
hlt
inc
mov
test
inc
pop
or
add
push
jl
xchg
ja
movsl
xorb
cld
rcll
adc
or
enter
je
shrl
stc
mov
dec
mulb
xorl
jnp
leave
sub
pop
jnp
mov
clc
sub
lods
pop
scas
mov
add
push
mov
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
push
inc
stc
jle
sbb
adc
movlps
icebp
mov
in
sub
add
rcll
test
xchg
and
push
aas
imul
repnz
cmp
push
stc
arpl
stos
jecxz
imull
movsb
les
cmp
mov
fisubrs
arpl
inc
and
push
push
lods
loop
dec
lcall
les
fisttps
in
cmp
adc
out
movsb
inc
adc
arpl
cmp
psrld
adc
movsl
xchg
in
cmp
mov
inc
mov
jge
xlat
pop
pop
int3
std
mov
cmp
test
xor
dec
xchg
xchg
repnz
or
sbb
out
jns
adc
ficompl
adc
mov
sbb
adc
sub
xor
or
or
test
test
psubusb
jg
call
ds
aam
and
and
push
xchg
and
stos
stos
mov
inc
jns
out
sub
push
sub
flds
pop
jmp
add
ss
cmp
pop
jmp
xchg
idiv
repnz
jnp
and
loope
adc
stos
pop
adc
in
jbe
adc
hlt
mov
sbb
mov
or
inc
mov
ds
mov
add
popa
cld
pop
jecxz
adc
and
aaa
inc
push
movsb
inc
inc
xlat
jmp
aas
lret
pop
test
lcall
add
imul
into
mov
mov
out
adc
lahf
cltd
xchg
inc
negb
xchg
aam
xlat
je
xchg
jae
push
andb
shll
and
mov
out
lock
mov
cli
sbb
out
sahf
or
dec
shlb
insb
sbb
add
jnp
adc
sti
out
iret
jle
and
jo
roll
inc
jmp
sbb
lret
xchg
aad
jne
inc
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
js
js
sbb
adc
movlps
loop
mov
lret
in
jecxz
push
xchg
mov
xor
sub
cmp
add
add
je
popa
cmpl
inc
insl
loopne
dec
fstpl
xlat
pop
in
pop
xchg
insl
imul
pusha
out
inc
sbb
mov
xchg
popf
repz
sub
cmp
push
lahf
nop
fcmovnb
push
mov
jp
push
fwait
pop
jns
mov
imul
push
pusha
fnstsw
jle
insb
xchg
js
lea
xor
imul
lds
lds
iret
adc
and
test
inc
sbb
adc
push
repnz
jne
push
cwtl
xchg
in
cmpsb
lods
and
mov
test
sbb
sbb
mulb
in
into
addb
inc
test
clc
mov
int3
stc
jle
mov
shl
mov
pop
outsl
xlat
sbb
jns
jne
ljmp
pushf
sbb
cmpsb
add
dec
and
mov
test
xchg
jecxz
jecxz
shl
add
andl
fadds
inc
adc
sbb
ficoms
loop
add
cmp
fsts
sbb
das
dec
mov
push
in
mov
adc
mov
add
shrb
xor
push
lret
and
pop
mov
cmc
lods
sub
push
mov
or
lock
je
jl
xor
je
push
lock
inc
in
jge
cmp
cmpsb
xor
mov
aas
stos
dec
addr16
rcrb
js
add
int3
and
imul
jo
ja
adcl
push
out
mov
jb
loopne
scas
xchg
jns
lock
aas
cmpsb
sub
lea
ret
punpckhwd
ja
jg
mov
stos
hlt
mov
sti
add
lcall
and
enter
sbb
adc
add
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
popf
fs
adc
adc
movlps
mov
dec
xor
and
mov
xor
out
and
adc
dec
or
add
pop
xchg
jb
xchg
add
ljmp
mov
je
movzbl
fnstenv
jnp
fisubrl
cmp
jecxz
jnp
adc
mov
adc
rclb
loop
stos
lea
inc
ret
mov
sbb
xchg
adcl
xor
stos
cmp
and
dec
xchg
repz
data16
and
je
fildl
test
pop
and
mov
or
jp
mov
cmp
push
or
imul
jns
dec
mov
aam
lcall
fisubrl
mov
and
push
xchg
idivb
mov
cmp
xor
sbb
sub
inc
add
push
xchg
mov
sub
jae
inc
repz
push
cmp
pop
out
jle
pusha
scas
imul
in
sub
mov
ds
inc
out
jle
aas
mov
ss
cli
mov
cmpsb
subb
jecxz
imul
outsl
adc
push
int3
in
out
clc
movsl
dec
int
out
js
jo
dec
stos
mov
or
cmpl
dec
push
sahf
cmpsb
out
fcom
dec
cmpb
punpckhwd
sahf
das
sbb
ljmp
fisttpll
mov
cltd
xor
add
adc
stos
inc
add
jbe
sbb
sub
mov
push
xchg
dec
scas
iret
pushf
loopne
cld
inc
xchg
mov
clc
scas
pop
out
aaa
daa
loop
sbb
mov
pop
shlb
int
pop
mov
dec
and
mov
imul
cmp
arpl
xchg
scas
call
adc
mov
or
ljmp
lret
imul
ret
sbb
inc
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
icebp
sub
adc
adc
movlps
jb
mov
fadds
sbbb
inc
fsubrl
shrb
sbb
jl
mov
mov
mov
sub
rcr
mov
cmpsl
hlt
fsubp
lahf
arpl
mulb
mov
in
mov
icebp
mov
xchg
adc
sub
les
addr16
stos
dec
inc
inc
fdivrl
ja
test
inc
int
sub
dec
movsb
dec
sti
inc
jno
stos
or
jmp
das
std
cmp
out
inc
mov
xlat
inc
dec
je
mov
pop
in
mov
pop
add
imul
es
icebp
sbb
in
loopne
jno
or
xor
sub
lretw
in
lret
add
adc
subb
jo
or
jne
inc
add
xor
dec
or
into
adc
push
stos
xor
in
lret
pushf
push
lods
jae
lret
out
or
inc
mov
jge
shlb
lea
lock
addr16
mov
pusha
cmp
jns
mov
ds
jg
pop
aam
ds
or
and
mov
addr16
add
add
inc
xor
pop
or
push
cmp
div
test
testl
push
bound
dec
inc
mov
mov
out
stc
cmc
iret
stos
into
pop
sbb
cmp
and
lahf
dec
cli
daa
xchg
call
popa
pop
sahf
out
in
cvtpi2ps
data16
iret
enter
pushf
sbb
lahf
addr16
cmp
xor
mov
in
sub
jns
fbstp
lahf
imull
or
dec
add
fstpl
sbb
pop
xchg
repz
ret
cmpsb
ljmp
adc
fwait
xor
push
js
shlb
ficoml
jo
lcall
mov
mov
cmp
pop
aam
mov
insl
shrb
mov
cmpb
cmp
leave
shl
mov
add
and
dec
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
js
or
add
mov
pop
fmull
in
cmp
push
out
adc
dec
rol
lret
shrb
lock
ljmp
xchg
test
push
and
cli
push
or
test
cs
dec
ljmp
fsubrs
in
mov
jb
pop
sub
cmc
loop
or
mov
jb
je
mov
test
sub
test
popa
push
push
cmp
add
in
push
and
mov
mov
adc
movsl
jmp
stos
repz
js
xor
aas
imull
pop
int3
jge
push
shll
test
pop
pop
pop
outsb
xchg
sbb
in
mov
xchg
xchg
ret
fisubl
xor
xchg
mov
jmp
int3
push
sub
mov
in
cmc
insl
pop
bound
jo
lcall
push
mov
std
in
arpl
add
movsb
inc
out
xor
addr16
aad
lahf
mov
mov
lds
lahf
scas
cmpb
sub
imul
fdivrs
xchg
ret
jmp
das
stc
jecxz
mov
push
inc
jge
imul
and
enter
out
or
ret
imul
ja
cltd
mov
cmpl
int
inc
dec
inc
sub
das
or
lret
sahf
cmpl
enter
dec
lret
sahf
fsts
cmp
push
dec
subl
sbb
ror
sub
push
lds
ret
sub
icebp
shl
cmp
cmpsb
lods
scas
and
fs
add
jne
cmpsb
push
icebp
cwtl
cltd
cwtl
add
xchg
lcall
xchg
mov
fldenv
stos
push
test
sahf
and
popa
cmp
aam
das
push
lahf
jns
sarb
imulb
outsb
mov
mov
cmp
lcall
cmpsl
fsubl
xor
mov
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
fldcw
adc
movlps
pop
push
mov
lret
lods
mov
adc
pop
cmp
mov
adc
add
insl
dec
in
aam
or
xor
mov
xor
repz
test
gs
inc
outsb
push
pusha
pop
mov
pop
and
mov
mov
nop
jae
xorb
fcompl
jnp
js
cli
mov
fimull
pop
fists
xchg
mov
mov
jp
or
dec
push
dec
fmuls
movsb
inc
call
add
jo
inc
xor
pop
popf
cltd
fildll
add
rolb
mov
inc
or
cmp
push
jmp
out
push
fs
imul
lret
sbb
or
insb
cmc
nop
jnp
jno
push
roll
repz
adc
jnp
aas
cltd
fbstp
mov
fwait
lcall
adc
sahf
inc
mov
rep
lahf
inc
adc
les
lock
es
outsl
sbbl
notl
out
ret
sub
subl
insb
cmpsb
or
fstpl
int3
xchg
insb
push
xor
es
mov
sbb
xchg
sbb
das
mov
mov
loope
xor
xor
les
sahf
sbbb
dec
jmp
loopne
jg
inc
mov
mov
jl
pop
mov
mov
jne
pop
push
loop
xor
loop
outsb
or
lods
xor
mov
xchg
fimuls
sbb
mov
add
leave
rsqrtps
repnz
lret
push
jae
into
jg
fistpll
sub
lods
stos
or
jnp
and
fldl
jne
xor
orl
int3
in
cmpsl
movsl
mov
mov
mov
mov
test
test
lods
cmp
adc
inc
inc
mov
xchg
mov
or
aaa
push
ficoms
mov
push
add
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
inc
jbe
xor
adc
outsl
out
push
xorb
mov
stos
xchg
fstl
push
mov
xor
sarb
repnz
push
push
mov
jnp
add
xor
idivl
and
fwait
sahf
scas
fwait
rcrl
dec
mov
jb
fwait
pop
mov
movsb
sahf
sbb
or
gs
test
sbb
jl
es
fs
cmp
sbb
mov
cmp
fwait
mov
cwtl
sub
xchg
adc
into
xchg
add
push
cmp
lcall
lods
pushf
jae
stos
push
test
outsl
pop
sub
mov
mov
loope
cmp
lods
jno
jmp
shlb
jne
hlt
mov
stc
dec
pop
dec
pop
mov
xlat
xchg
add
xor
popf
and
add
mov
insl
inc
or
fwait
mov
mov
cmp
xchg
in
inc
pusha
sbb
dec
add
jne
mov
arpl
stos
or
inc
push
push
imul
ret
ret
dec
js
scas
fiaddl
movsl
aas
lods
push
lods
int3
dec
lods
repz
add
sub
ret
jmp
mov
out
aam
sbb
inc
dec
cmp
mov
inc
sbb
call
mov
lea
xor
xchg
jecxz
add
in
adc
push
mov
inc
shrl
loopne
rcl
out
or
ret
sub
jmp
lret
xor
stc
dec
mov
adc
adc
sub
ffreep
xchg
pop
inc
xchg
dec
outsl
mov
xchg
cmp
callw
lcall
fcomi
jp
xchg
mov
int
push
jmp
movsl
rolb
repnz
repz
daa
cmp
adc
xchg
test
popa
jle
in
repnz
pop
xor
inc
fs
roll
sbb
pop
mov
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
and
js
mov
push
or
add
movsb
cmp
pop
sbb
sub
lret
inc
push
fsubrl
or
pop
fisubrl
and
mov
movsl
dec
js
mov
stos
adc
push
sbb
insb
push
push
repz
and
sbb
mov
mov
xor
sti
pop
movsb
ja
mov
icebp
jbe
xorb
or
ja
fst
inc
xchg
loopne
push
sub
ret
les
sub
hlt
cwtl
cmp
or
and
stos
repnz
pusha
in
imulb
cmp
test
and
cmp
inc
outsb
mov
call
mov
jno
sbb
jno
loop
and
mov
pop
lret
sbb
sub
xor
adc
jmp
call
fnstsw
cmc
add
into
stos
stos
das
addr16
dec
add
mov
mov
pop
sbb
aaa
aaa
pop
std
loop
mov
sahf
mov
sub
mov
ds
cmp
enter
adc
in
out
sbb
mov
add
pushf
and
sti
or
lcall
and
hlt
dec
hlt
mov
mov
mov
inc
adc
mov
xor
fadds
mov
out
call
icebp
test
xchg
mov
je
jns
sub
pushf
pop
or
cmp
mov
mov
shlb
pop
nopl
ja
mov
inc
jae
inc
imul
mov
and
fcompl
xchg
movntps
movsl
loopne
jb
push
es
in
mov
xor
std
xor
dec
dec
xchg
mov
xchg
cs
push
int3
xor
lcall
enter
xor
lock
cmpsb
lods
ret
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
cmc
outsb
or
fmull
adc
pop
jg
ljmp
mov
lret
cmpl
xchg
stc
imul
adc
ss
dec
cltd
mov
or
and
sbb
adc
rcl
xchg
and
mov
lahf
push
mov
ret
lret
inc
lret
adc
fsubr
or
sub
push
les
cmp
shrl
lahf
and
js
std
pop
mov
das
jne
dec
and
nop
cmp
push
sbb
inc
ljmp
test
cmp
xchg
adc
lret
jp
in
clc
jno
shl
call
and
pop
pop
inc
sub
sar
cmp
sbb
pop
inc
push
xor
push
mov
adc
push
cmpsl
mov
pop
pop
loope
sbb
cmp
jl
ds
stos
jne
inc
idiv
inc
push
pop
rorw
mov
std
cmp
cmp
ss
test
dec
mov
fdivrs
mov
adc
cmp
cld
call
call
call
push
mov
cli
frstor
xor
rorl
test
ret
jmp
cwtl
lret
movzbl
nop
add
jecxz
push
cltd
nop
daa
mov
cmp
enter
nop
cli
sbb
loopne
push
xor
sbb
stos
mov
adc
xchg
popa
loop
push
sbb
dec
jle
mov
fscale
jno
cs
or
cmp
inc
add
test
daa
cli
xchg
sbb
data16
test
cli
and
mov
test
lds
xchg
jmp
mov
pop
sbb
popf
popf
sbb
rol
dec
loope
or
dec
xor
stos
mov
dec
pop
xor
rorb
insl
pop
nop
mov
or
cwtl
adcl
xchg
mov
insl
cmpsl
cmp
repz
add
add
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
adc
mov
movlps
xlat
mov
xor
adc
lret
fists
je
dec
xchg
push
adc
mov
stos
pop
jnp
enter
sarl
jp
loop
iret
int
sbb
jb
jo
imul
or
xchg
push
popa
arpl
data16
push
je
mov
sbb
xchg
mov
or
clc
int3
push
or
ficoms
aas
pop
imul
jecxz
lods
xor
xor
mov
aam
dec
xor
mov
lock
mov
out
or
lret
stos
dec
rolb
cmpsl
lods
fnstcw
sub
jnp
xchg
jae
loopne
mov
and
loop
push
cmpsb
test
cmp
fsubrl
popf
faddl
jmp
push
pop
pop
cmp
jns
add
out
sub
xchg
fmuls
mov
inc
lock
icebp
xor
sahf
sbb
dec
sti
inc
fimuls
mov
or
jmp
pop
sahf
pop
adc
addr16
in
je
fstps
sbb
sti
stos
lcall
loopne
push
int
aaa
add
cmp
push
lcall
jg
inc
sub
hlt
fimull
mov
repnz
mov
and
outsl
add
fnsave
sub
xor
dec
inc
cmpsb
test
test
cmp
inc
jmp
adc
jo
push
inc
data16
dec
ds
les
aam
inc
fxch
xorb
xchg
dec
xchg
and
mov
jae
cmp
xor
mov
fstpt
xchg
mov
sahf
mov
rcrb
sbb
mov
imul
icebp
imul
rcrb
lea
or
add
test
rolb
shrb
or
mov
shrb
xchg
and
jns
push
or
out
cmpsb
xchg
dec
mov
mov
jae
hlt
push
push
and
sahf
cli
and
test
cmp
add
xchg
mov
xor
mov
loopne
ret
add
ret
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
inc
cmp
mov
fmull
adc
mov
lcall
les
add
dec
icebp
mov
cwtl
sti
in
outsl
ret
aam
adc
les
cmpsb
ljmp
and
in
das
sbb
fsubrp
in
mov
mov
dec
adc
ret
adc
add
test
cs
dec
fisubl
lahf
fsubs
push
lahf
inc
jge,pt
ss
pop
jmp
cli
xchg
lods
pop
cmp
and
inc
fistpll
out
mov
dec
xchg
mov
leave
shlb
pop
push
es
adc
adc
scas
in
xchg
repz
cmp
add
insb
push
addr16
js
pop
iret
testl
push
xchg
cmp
iret
xchg
aaa
push
pusha
cmpsl
iret
cmp
dec
fdivrl
sbb
aad
js
jle
mov
inc
cmpsl
adc
xchg
or
scas
mov
push
loope
sub
xlat
mov
decl
bound
pop
sub
icebp
aas
outsl
test
repz
adc
and
negl
int
iret
xor
pop
fidivs
and
int
cld
shl
pop
fcmovnb
pop
jno
xchg
fsubs
imul
mov
inc
pop
fwait
out
dec
stos
call
push
push
push
out
mov
mov
sti
repnz
aaa
or
outsb
daa
mov
mov
lods
cmpsb
fimuls
push
cltd
mov
xchg
xor
scas
scas
scas
jp
cmp
movsb
popf
sub
cmpb
pushf
sub
imul
mov
pop
jnp
packssdw
xor
or
fincstp
jl
scas
jb
mov
push
mov
xor
or
sub
push
mov
in
pop
int
dec
cmp
xor
jp
pop
ret
scas
js
pop
sti
js
lcall
lock
pop
sbb
add
sti
cmpsb
or
lods
outsl
bound
scas
xor
xor
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
scas
mov
dec
filds
or
rorb
vmread
movsb
mov
mov
xchg
mov
mov
out
aad
gs
pop
mov
jmp
push
or
jae
cmp
int3
out
and
jb
loopne
shrd
imul
or
xor
repnz
ret
sbb
outsb
jle
sub
mov
push
fists
scas
xchg
pop
add
cmpsl
lock
jmp
xchg
push
xchg
cmc
xor
jecxz
pusha
outsb
pop
adc
and
jmp
adc
nop
inc
icebp
jmp
push
mov
jno
fcomp
push
add
jecxz
jbe
mov
arpl
divl
mov
lods
sbb
popa
out
sbb
leave
add
out
je
jns
push
add
cmp
mov
push
xlat
mov
movsl
jg
ret
jge
test
shl
orl
add
outsl
and
mov
cmpsl
ss
addr16
pop
out
mov
test
icebp
in
ja
ja
aad
in
hlt
andb
scas
jno
mov
xchg
inc
filds
scas
push
rol
lahf
inc
inc
lahf
pop
sbb
and
data16
mov
dec
popf
test
mov
xor
pushf
fiaddl
aad
scas
xchg
lods
cmp
mov
out
clc
lods
daa
inc
xchg
push
imul
lret
push
push
lods
jno
pusha
cmp
add
test
in
push
push
cmp
sti
jge
mov
addb
jne
sbb
mov
mov
sbb
je
mov
fnstcw
dec
fimuls
dec
je
sbb
hlt
pop
cmc
je
daa
sub
cmpsl
mov
pop
notl
xchg
xchg
test
jp
sub
inc
in
icebp
jle
xchg
inc
mov
pop
push
ret
repz
fisttps
popa
sbb
into
stos
ss
dec
push
lcall
mov
cmp
fnstsw
inc
fisubrl
aam
js
sbb
lds
pop
xor
mov
movsl
cmp
stos
pop
sbb
xor
cs
out
das
jp
sbb
inc
xchg
sub
inc
mov
insb
sub
jle
arpl
push
stos
fsubrp
arpl
inc
mov
mov
dec
jle
xor
mov
test
mov
dec
dec
pop
adc
lock
mov
fs
mov
enter
xchg
loope
mov
not
mov
and
mov
or
dec
scas
mov
inc
out
or
cwtl
mov
std
clc
inc
push
cmp
fadds
mov
dec
pop
adc
cmc
sub
dec
das
rorb
adc
rcl
inc
pushf
es
jl
cwtl
pop
stos
inc
ret
inc
mov
cmp
and
sbb
inc
adc
std
mov
mulb
imul
loope
mov
and
or
cmp
push
addb
sarb
hlt
adc
mov
dec
sbb
stos
push
test
ljmp
aas
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
jmp
js
jmp
adc
push
fsub
repz
fwait
outsl
add
inc
sbb
mov
add
jo
xor
lods
push
sub
cmp
mov
clc
sbb
add
mov
push
jbe
in
push
enter
outsl
icebp
mov
shlb
fcomps
inc
stc
jne
jl
mov
dec
mov
cmc
add
in
pop
mov
mov
lods
adc
shll
xchg
sub
or
ds
into
inc
xchg
or
or
pop
cmp
fiaddl
mov
cld
sub
data16
and
daa
cmp
stos
jmp
mov
sub
je
push
fnstenv
in
lret
sbb
pusha
rcll
stc
test
adc
shll
jecxz
je
in
pushl
sub
adcl
and
outsb
iret
add
rcll
xchg
mov
lods
cmp
dec
cmp
mov
cmp
push
test
adc
adc
ret
loop
and
in
sub
dec
in
fsts
add
dec
mov
fmul
and
mov
or
and
or
test
inc
inc
test
insl
and
cmp
sbb
mulb
xchg
inc
into
jbe
adc
loopne
xchg
test
xchg
cwtl
mov
dec
and
jp
gs
clc
das
jne
dec
test
jae
insl
pop
mov
mov
jp
loop
adc
repnz
sbb
pop
nop
cwtl
aas
sti
lret
add
cltd
push
mov
jg
mov
pop
leave
pop
xchg
addr16
mov
pop
and
sbb
in
fdivp
push
mov
pop
popf
lds
inc
je
icebp
repz
push
dec
sbb
add
sbb
mov
push
cmp
pushf
in
jbe
rcll
test
xchg
fcomps
push
mov
inc
mov
or
or
out
mov
gs
iret
mov
and
sub
aas
enter
jl
mov
add
repnz
nop
mov
je
lret
add
ljmp
call
push
inc
pop
adc
fistpl
dec
pop
xor
mov
sbb
adc
je
iret
mov
les
xor
pop
jl
imul
insl
push
in
lds
adc
mov
mov
bnd
aaa
loopne
enter
scas
jbe
mov
sarb
push
jp
push
dec
out
mov
arpl
inc
scas
cmp
adc
adc
add
jmp
mov
and
cmp
xor
lret
sub
std
and
mov
lret
jnp
xchg
dec
popa
out
fcompl
out
insl
inc
dec
cld
mov
sbb
adc
sbb
cmp
js
popa
and
cltd
shrl
test
mov
cwtl
aas
fmuls
inc
jb
inc
clc
in
jle
test
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
ret
in
adc
jo
adc
add
inc
push
jb
or
inc
aaa
push
jge,pn
mov
add
imul
lods
mov
jecxz
int3
ret
stos
repz
xchg
sub
fldcw
popf
push
ret
mull
sahf
sarb
sbb
mov
lds
push
aas
add
mov
sahf
mov
sti
pop
fs
jmp
push
int
cld
into
jnp
mov
in
negb
sub
negl
sbb
mov
cs
push
outsl
test
push
pop
or
insb
dec
mov
inc
push
jmp
dec
movsl
sbb
sub
out
loop
lahf
inc
jbe
push
stc
stc
mov
inc
outsb
cmc
pop
dec
jnp
enter
arpl
pop
push
dec
add
sar
pop
cmp
cmpsb
sahf
pop
push
scas
stc
adc
mov
jbe
cs
push
jae
stos
xchg
pop
rep
pop
add
jl
jne
mov
xchg
iret
je
imul
int3
testl
aaa
mov
xchg
fwait
inc
insb
stos
sbb
into
jmp
icebp
mov
popa
jp
sbb
mov
mov
loope
and
adc
js
mov
popf
or
xor
cltd
in
repnz
lock
jno
imul
pop
rorb
nop
fbstp
or
xor
sub
in
pop
sub
lret
cmp
fidivrl
inc
cs
int3
div
nop
cld
mov
jmp
arpl
cmc
and
or
mov
jge
mov
mov
insb
in
push
inc
repz
push
adc
aas
jmp
sahf
sub
push
jae
pop
adc
fisubrl
call
mov
xchg
jp
aas
int
movsb
sub
mov
jb
arpl
insl
xchg
rclb
pop
adc
mov
adc
jmp
test
loope
and
dec
fstl
mov
xor
lods
cmp
movsl
pushf
lahf
icebp
pop
lds
mov
cmc
cmp
repnz
arpl
sbb
fsubp
pop
mov
loopne
pusha
pop
inc
mov
mov
loop
aad
lret
dec
and
rcl
xor
repnz
jns
push
inc
dec
add
leave
pop
mov
cmpsl
add
xchg
pop
scas
rcrl
gs
into
addr16
pusha
pop
mov
clc
mov
adc
in
dec
xlat
pusha
lret
inc
aas
cld
out
cmp
movsb
pop
xchg
loope
push
sbb
jae
xor
cmp
inc
hlt
sub
mov
or
jmp
es
adc
popf
mov
or
pop
in
push
ret
adc
adc
adc
sub
mov
fbstp
jge
pop
jo
shll
push
in
adc
push
mov
mov
adcl
test
mov
int3
pop
xor
addr16
add
imul
jl
into
shrb
mov
jecxz
add
adc
pop
fs
add
inc
ret
inc
fst
and
lods
negl
jae
lcall
dec
pusha
out
dec
lods
out
jb
mov
rcrl
or
stos
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
pop
xor
inc
fstl
adc
adc
mov
sbb
adc
sbb
inc
push
push
lods
ss
dec
mov
lock
imul
aas
mov
mov
adc
xchg
xor
sarl
fwait
inc
in
popf
add
mov
jb
leave
sub
inc
insl
adc
jo
jo
outsl
es
leave
dec
inc
movsb
mov
xlat
dec
mov
jnp
sbb
push
dec
insl
test
aas
and
cli
sbb
sbb
pop
adc
loope
adc
mov
xchg
dec
insl
jge
sub
int
xchg
gs
xor
push
inc
sti
call
leave
cmp
ja
fstpt
movsb
add
test
mov
ds
outsb
roll
and
orl
mov
push
stc
ss
data16
in
cmpsl
outsb
rolb
outsb
imul
addb
push
cmp
xlat
inc
clc
mov
mov
lcall
je
sub
cli
filds
mull
out
jbe
xor
cmp
lahf
sti
rcrl
adc
xchg
cmc
arpl
jecxz
loop
sti
pop
or
dec
roll
pusha
push
dec
dec
es
call
movsb
je
cld
sub
lret
test
jle
mov
cmp
mov
sbb
xchg
lahf
pusha
movsl
scas
xlat
and
jo
adc
jno
cwtl
cwtl
lret
lahf
sbb
inc
insl
inc
loop
jbe
ficoms
data16
arpl
cmp
adc
mov
mov
int
arpl
pop
test
stc
jo
int
inc
jne
add
negl
jmp
lcall
lret
lcall
xor
cmc
add
push
loopne
jl
and
loopne
sub
cmp
sub
repz
mov
sub
push
ret
test
adc
clc
xor
icebp
fyl2xp1
jl
lahf
mov
sbb
xor
mov
xlat
ss
jl
cltd
mov
cmp
sbb
push
repz
adc
rcr
es
and
loop
mov
xchg
inc
xchg
cld
hlt
outsl
mov
pop
or
fucom
lods
int3
xchg
mov
or
xor
fldcw
fisttps
out
lahf
loop
insl
psrld
mov
xchg
icebp
sub
add
je
or
xchg
inc
inc
cli
repz
pop
jo
cmp
sbb
add
inc
cmpsb
xchg
lds
jnp
sub
scas
sub
leave
xlat
popf
cmp
xor
or
dec
leave
sarb
test
imul
sbb
mov
roll
jg
mov
and
pop
andb
test
mov
add
into
cmp
inc
scas
fimull
roll
mov
push
pusha
and
mov
stos
pop
inc
pop
cld
or
adc
pop
cmp
lds
cltd
bound
and
dec
and
fs
ja
dec
fldcw
add
adcl
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
mov
aad
adc
adc
shlb
pop
loopne
xlat
xchg
int
sbb
dec
ret
dec
mov
sub
lea
inc
rcrb
dec
mov
sub
pop
notb
sti
add
pop
and
std
sahf
neg
dec
outsb
sub
sbb
loopne
mov
xchg
test
mov
inc
jecxz
out
popa
scas
retw
cmpsb
add
sbb
out
xlat
in
rcll
aaa
inc
sbb
mov
lds
pop
mov
enter
adc
xor
enter
add
adc
std
imul
push
movd
inc
in
mov
or
das
fistps
add
iret
xchg
jb
xor
stc
add
and
out
jnp
aaa
rcrb
sub
aad
pop
mov
fldt
dec
mov
inc
sti
or
mov
add
mov
lret
mov
sbbl
push
dec
sub
lret
iret
insb
ret
scas
andb
cmp
fmuls
push
mov
mov
cmpsl
scas
jnp
xor
outsl
fwait
xchg
and
adc
push
pop
or
or
sbbl
dec
aam
rcl
pop
ds
jecxz
sub
mov
lock
sub
sub
data16
mov
inc
jbe
xor
aam
in
mov
xchg
arpl
ds
inc
cmp
push
cli
add
pusha
adc
pop
dec
push
adc
jp
popf
push
int3
fisubl
add
xchg
nop
and
out
pop
insb
jb
mul
pop
outsb
pop
or
sub
add
repz
cwtl
mov
ror
call
sbb
add
subps
lret
incl
popf
sbb
pop
sub
pop
cmp
sbb
insb
or
lret
popa
xchg
enter
shlb
pop
dec
xchg
push
fisubrs
jge
repz
sub
repnz
mov
jp
out
pop
rolb
jp
cmpsb
cltd
cmpsl
and
cld
xor
sar
dec
inc
xchg
test
jb
dec
inc
mov
cmpsl
lods
jmp
xor
fwait
inc
bound
lcall
pop
xchg
js
insb
add
movsl
xchg
imul
cwtl
mov
sub
xchg
in
fucomp
cltd
test
or
cmp
cmp
cmp
fs
mov
mov
rolb
push
xor
sub
xchg
jae
lea
scas
and
imul
lods
lcall
cmpsl
cld
cmp
adc
movsl
test
cmpl
imul
or
mov
cli
lret
adc
mov
mov
lcall
imul
out
jb
cmp
call
fbld
nop
sti
pop
mov
loop
push
sbb
ret
xchg
mov
fadds
pop
outsl
stos
imul
mov
adc
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
pop
cld
fdivrl
jo
adc
aas
mov
cmpl
cmp
dec
inc
mov
jo
sbb
pop
test
mov
subl
push
mov
sub
xchg
or
xor
test
push
daa
into
or
dec
das
pop
xchg
stos
sub
cmp
mov
je
movsl
sbb
rcr
sahf
xchg
adc
push
mov
ret
lahf
fldpi
pop
sub
aad
test
lock
jecxz
push
jl
scas
pop
adc
insb
dec
xchg
pushw
lods
or
rcrb
popa
mov
test
aas
xchg
in
xchg
mov
xchg
mov
dec
jle
dec
imulb
hlt
sbb
cltd
pusha
orl
add
or
push
adc
jge
cmp
add
insb
mov
xchg
sahf
mov
in
inc
xchg
inc
filds
fstpt
or
mov
cmp
pop
mov
push
hlt
inc
shlb
jl
jle
les
loop
push
std
es
enter
arpl
or
mov
cmp
stos
das
ds
cmpsb
pop
sarb
push
ss
scas
mov
aas
cmp
popa
iret
pop
aas
push
push
adc
jg
fidivrl
mov
mov
ja
pushl
addr16
sbb
pop
rclb
jl
xor
jge
out
sub
stos
mov
lods
in
mov
cmp
dec
lret
adc
loop
inc
add
sub
repz
push
lcall
push
or
cs
inc
outsl
adc
into
jbe
inc
pusha
or
pop
daa
cmp
push
repnz
inc
mov
negb
popa
gs
fistpl
jecxz
gs
lcall
xchg
or
in
inc
arpl
sub
lret
pop
push
lds
arpl
fbld
fwait
and
push
pop
fsubr
pushf
subl
psubsb
data16
cld
xlat
clc
pop
adc
test
inc
loopne
push
xchg
dec
je,pn
jbe
sub
lret
lret
mov
sbb
out
and
lret
stos
and
test
jecxz
pop
icebp
icebp
lret
sub
jle
push
lock
inc
lods
xchg
out
push
lea
sub
ds
add
and
and
jecxz
push
cld
lods
fiaddl
sbb
movsb
movsl
or
hlt
out
lret
scas
cmp
aas
adc
fnstcw
or
xchg
insb
mov
aam
or
jmp
std
jle
pusha
js
enter
or
sub
mov
pop
fiaddl
mov
stc
xchg
xchg
aaa
pop
mov
mov
sahf
cmpb
call
cmc
dec
add
and
out
aaa
sti
jmp
xchg
mov
add
sbb
dec
movsb
dec
sbb
adc
loopne
inc
clc
jae
and
pushf
shlb
pusha
inc
inc
lret
hlt
push
sub
insb
lcall
push
mov
scas
xchg
push
mov
sub
fcomi
dec
std
xchg
jae
jecxz
jl
cmp
les
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
stos
dec
jnp
jo
mov
les
outsb
xor
pop
adc
stos
push
hlt
pop
cmp
push
mov
push
pusha
cmc
ljmp
lea
mov
lods
subl
add
and
out
jl
and
xchg
test
out
adc
mov
sub
lock
fwait
cwtl
pop
jp
addr16
arpl
pop
and
cmp
mov
lods
movsb
data16
lods
mov
or
jne
push
cmp
cmp
test
in
cli
adc
mov
or
mov
fs
loopne
dec
out
outsl
or
sbb
inc
pop
or
xor
cmp
pushf
into
cmp
pop
je
pop
imul
mov
cbtw
repz
adc
add
std
mov
mov
mov
aam
push
out
sub
or
inc
inc
pop
stos
jl
das
in
add
aaa
adc
xor
sub
int
mov
add
pop
dec
out
adc
mov
sub
je
sbbl
xchg
mov
rorb
clc
es
sbb
into
lea
sbb
xchg
into
jbe
leave
mov
sbb
adc
jecxz
sub
repz
jmp
and
je
mov
push
and
and
sub
movsb
xor
adc
out
mov
imul
xchg
mov
orb
jbe
xchg
cmc
add
push
xchg
xor
fidivs
jmp
add
in
lahf
inc
mov
ret
je
jbe
icebp
adc
xor
mov
jge
pop
loop
sbb
pop
insb
inc
and
pop
xorb
or
dec
fs
xchg
fmuls
fwait
jecxz
popa
cmp
cli
cs
pop
cmp
or
xchg
decl
dec
jmp
fwait
in
pop
pop
paddq
push
in
and
pop
xor
mov
addr16
xchg
and
push
inc
aas
das
mov
mov
or
popf
and
out
cmpsl
stos
mov
jle
mov
pop
jmp
insl
sbbb
mov
jnp
loopne
pop
mov
mov
xor
fisubl
adc
enter
cs
leave
adc
into
mov
sub
jl
inc
mov
popa
adc
mov
sbb
push
aad
cmc
lcall
adc
and
push
das
and
lods
call
jae
xchg
ret
jnp
pop
pop
or
popf
cmp
mov
aas
mov
push
xor
aad
mov
lahf
dec
cmpsb
jecxz
or
pop
hlt
dec
and
cmove
imul
rclb
lds
or
imul
mov
adc
out
aas
adc
and
jae
bound
pop
mov
hlt
in
push
xchg
jne
insl
adc
xchg
fbld
mov
and
mov
sarb
pop
nop
sbb
add
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
outsb
adc
adc
adc
sub
mov
xor
pop
aas
add
cmpsb
push
cli
and
int
dec
and
aam
mov
sbb
and
into
js
mov
rcll
jne
rcll
lahf
lcall
imul
or
add
test
xor
test
inc
call
xchg
xor
xorb
mov
cltd
sub
sbb
xlat
subl
xchg
mov
ret
push
push
xor
iret
push
jle
add
push
mov
push
aad
cli
inc
fdiv
cld
les
sbb
lock
outsl
ficoms
add
inc
shll
xchg
mov
shl
sar
or
mov
xchg
mov
enter
pop
les
aaa
xor
les
ja
jb
in
arpl
aad
arpl
mov
and
scas
fnstsw
ret
test
fcoml
gs
sbbl
mov
imul
fs
add
je
out
faddl
cmp
mov
inc
shll
cmp
cmpsb
or
in
mov
jns
jbe
jo
mov
pop
push
cs
mov
out
push
icebp
push
iret
lret
mov
cltd
mov
xchg
add
mov
inc
shll
pop
xorl
adc
loopne
xor
pop
inc
imul
push
and
out
sbb
sarl
xchg
insl
push
lahf
mov
pop
aaa
sbb
daa
aad
sub
fdivs
pop
mov
mov
inc
gs
dec
and
jp
inc
aad
rclb
xchg
lods
fildll
setge
clc
clc
jecxz
adcb
or
push
std
lea
fs
sbb
out
mov
xchg
arpl
inc
mov
loopne
test
or
outsb
lcall
cld
adc
sbb
cltd
sub
hlt
xchg
jle
add
jne
or
mov
sti
and
pop
repz
mov
sub
sbb
dec
test
popf
add
into
xchg
out
pop
mov
out
add
addb
lods
lret
sbb
add
push
adc
inc
or
pop
xor
cmp
mov
lret
sub
ja
mov
hlt
inc
xchg
cld
lea
nop
mov
into
dec
fs
movsl
jnp
mov
scas
cmp
jns
or
ja
xchg
fidivrs
inc
push
popa
xor
push
mov
and
je
insb
jb
add
dec
aas
dec
jge
icebp
fistl
mov
call
in
incl
sub
lret
lret
xchg
push
pushf
mov
and
pop
pop
test
push
mov
icebp
cmp
rcrb
pop
icebp
add
and
aaa
iret
push
cmp
adc
sbb
les
lock
jns
add
cwtl
jge
pop
pop
js
lahf
xor
and
stc
popl
shlb
cwtl
iret
jbe
adc
xchg
sbb
faddp
inc
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
fisubrs
adc
mov
adc
adc
inc
nop
sub
repz
pop
pop
js
out
test
xor
xlat
test
cmc
add
add
sub
ror
fstpl
dec
xchg
sbb
lret
mov
jl
test
stc
aaa
push
stc
int3
stos
es
fisubrl
rcrb
rorl
pop
inc
or
xchg
mov
pmuludq
cmpsl
or
hlt
and
jge
and
sbb
andb
dec
xchg
jo
mov
dec
or
icebp
jb
jne
pusha
and
test
mov
les
pop
push
movsl
sub
lock
iret
xrelease
hlt
jg
ss
arpl
rorl
fucomp
into
lods
sbb
stos
lret
jle
out
cld
inc
out
jae
push
jp
or
sarl
inc
adc
xchg
cmp
xor
sub
pop
sbb
pop
sbb
xchg
push
ljmp
into
gs
lret
xor
mov
dec
popa
and
pushf
in
mov
das
xor
ds
insb
in
mov
ds
aaa
in
jno
repnz
movsb
push
rcrl
mov
js
arpl
sub
jmp
idivb
adc
fbld
xchg
vpunpckhqdq
mov
cmc
add
shll
dec
pop
jg
stos
adc
pushf
push
daa
mov
aaa
lock
xchg
call
movb
ljmp
jp
fcomi
push
data16
add
dec
jns
jl
sub
sbbl
lods
push
xor
adc
jmp
adc
and
arpl
adc
sti
ds
repz
pop
push
sub
data16
xchg
push
or
in
sub
mov
dec
jmp
movsb
sbb
sub
adc
xchg
push
sub
and
jecxz
ss
pop
xchg
leave
dec
jmp
pop
leave
out
mov
push
dec
gs
fiadds
add
js
dec
cmp
inc
or
fs
cmp
adc
push
mov
leave
adc
stos
pop
mov
xchg
push
add
or
mov
stos
cmpsl
loopne
sbb
call
and
enter
popa
lea
xadd
clc
lds
popf
mov
cltd
mov
xor
pop
pop
aaa
pop
mov
aam
dec
push
popf
ret
jp
sarl
test
rol
das
mov
faddl
out
test
pusha
jmp
or
add
pop
lret
paddsw
and
lds
imul
add
push
mov
push
call
fnstsw
repz
cmc
push
cmp
add
bnd
pop
lcall
or
cmpsb
cmpb
mov
cmp
repz
and
adc
data16
cwtl
jecxz
pusha
mov
data16
test
icebp
les
outsl
dec
add
lock
mov
jp
data16
scas
and
out
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
xor
jns
dec
adc
movb
fidivl
int3
and
stc
lods
scas
cmp
popf
arpl
das
std
and
pop
add
loop
sqrtps
push
stos
call
sar
mov
xchg
and
lret
jmp
dec
jg
in
xorb
xchg
in
arpl
sahf
out
xor
push
jecxz
lock
jge
mov
inc
push
sub
xor
xchg
xor
xor
sbb
pop
inc
adc
pop
and
icebp
pop
mov
dec
fimull
out
cmpsb
movsb
jne
fdivrl
sbb
lock
jle
fldl
mov
outsb
outsb
ss
shrl
wrmsr
negl
sbb
in
cli
outsb
push
sbb
lcall
sahf
mov
and
mov
in
jecxz
mov
stos
push
inc
inc
jl
loope
clc
loopne
add
fs
fadd
mov
std
pop
repz
jae
add
stos
push
imul
and
cs
push
jmp
inc
out
pushf
mov
popa
push
adc
lcall
push
out
fnstcw
xor
in
test
fs
dec
scas
ror
inc
sub
mov
loope
sub
fstpt
cs
xor
pop
pushf
pop
add
and
ret
mov
les
fndisi(8087
jno
mov
into
and
pop
into
imul
push
aas
sbb
push
jne
lods
inc
jl
jg
dec
popa
pop
in
pop
xor
add
cltd
ret
and
cmp
add
loope
movsb
in
bound
pop
inc
pop
sub
xor
dec
xor
ficompl
ds
repz
sub
mov
jecxz,pn
fbstp
mov
movsl
lea
inc
push
daa
push
jne
mov
sub
out
mov
dec
xor
outsb
lods
jnp
pushf
push
cmp
insl
pusha
cmpb
dec
lea
pop
jecxz
iret
aad
test
iret
push
scas
push
adc
xchg
push
in
int3
jmp
push
add
mov
push
push
popl
ja
push
in
sbb
mov
outsb
inc
fsts
mov
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
mov
mov
stos
movlps
shlb
pop
pushf
sbb
pop
cmpsb
pusha
push
pop
pop
fcomip
xchg
rcrl
mov
jbe
sub
inc
inc
jo
pusha
rcll
loopne
test
cmp
das
jg
push
xchg
jne
pop
inc
cmpsb
adc
int3
mov
push
cmovle
mul
addr16
add
sbb
aaa
fisttpl
mov
mov
and
psrlq
fucomp
rcl
div
aaa
adc
ret
sub
lock
fnstenv
popf
xor
or
jne
lcall
push
enter
push
shl
mov
fwait
out
stos
sub
ss
movsb
lds
mov
fistl
and
inc
addr16
aaa
mov
xchg
cld
xlat
call
int3
lret
pop
jbe
daa
add
ja
out
bswap
leave
lret
js
add
lret
and
call
rclb
mov
jl
xlat
sahf
pop
mov
leave
lcall
in
punpckhbw
pop
out
jb
shll
aas
or
fnstenv
or
js
int3
cmp
cltd
cmc
dec
xor
ds
std
mov
mov
and
pop
pop
fs
stc
dec
sbb
dec
xor
or
pushl
cmp
fidivrs
movsl
in
or
jmp
arpl
testb
dec
mov
pop
fistpl
push
in
jmp
std
cmp
imul
or
cmc
cwtl
xchg
add
sarb
pop
push
insb
push
push
push
fs
orb
or
cltd
mov
lcall
pop
add
adc
adc
ljmp
in
dec
je
add
pop
push
sub
pop
pop
fisubl
mov
enter
cmpsb
das
inc
mov
adc
mov
js
add
lahf
xchg
insl
lods
jmp
push
mov
mov
fcmovnbe
out
repz
xor
mov
adc
add
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
iret
pushf
lods
mov
adc
addr16
push
test
dec
push
lret
adc
mov
mov
pop
scas
push
les
pop
rorb
xorl
pop
pop
cmp
xchg
push
jecxz
cmpsl
popl
pop
test
stos
data16
adc
inc
mov
clc
or
lods
mov
loope
aad
pop
jp
sbb
loop
dec
aad
mov
mov
or
pop
dec
mov
adc
xchg
stos
aaa
dec
dec
repz
test
dec
push
mov
mov
add
imull
call
fwait
mov
add
gs
out
lcall
mov
mov
and
jnp
scas
jle
pop
or
cmp
xchg
cli
pop
fistl
out
repz
stc
inc
mov
mov
and
dec
mov
cmpsl
frstor
stos
jp
push
ret
aaa
pop
cmp
std
push
mov
mov
mov
cld
cmp
lcall
dec
push
pop
sub
ss
sbbl
daa
push
xorl
adc
addr16
push
or
ret
adc
insb
je
push
loope
mov
add
mov
lret
fmuls
mov
or
icebp
mov
cltd
idivl
lret
dec
fsubl
inc
ret
jg
rol
js
lods
test
jp
icebp
sarl
out
dec
shlb
cmc
pop
push
jbe
cmp
xchg
in
xchg
dec
lods
pop
push
loopne
cmp
cmpsb
jg
xor
xlat
fldcw
xor
inc
sub
xorb
mov
pop
sub
pusha
inc
adc
fistl
push
push
std
test
add
jle
imul
adc
dec
mov
xchg
xchg
adc
lods
inc
fs
scas
mov
mov
xchg
mov
testl
popf
inc
mov
data16
xchg
cwtl
pop
repz
sub
out
les
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
loop
stos
insb
sbb
adc
stos
movlps
xor
ret
rol
std
sub
jp
dec
cmc
or
fxch
outsb
cmp
lods
or
sub
jb
pop
loop
sbb
testb
sbb
out
and
sti
mov
lds
push
or
loope
cmp
mov
out
pusha
and
repz
mov
mov
mov
sbb
inc
lock
xor
add
pop
mov
push
pushf
mov
cs
in
xchg
adc
add
or
pop
test
pusha
out
xor
sbb
rcrb
add
dec
push
popf
les
jbe
push
cmpsl
mov
mov
add
sbb
pop
cmc
push
popa
adc
fsubl
inc
jae
fs
lods
cmp
mov
or
and
ds
lcall
xchg
shl
cmp
push
lods
sbb
push
mov
call
sub
dec
push
cmp
in
adc
pusha
jnp
fisttpl
clc
xchg
imul
push
adc
insb
xor
cmp
test
loop
sub
aam
cltd
cmp
push
aam
js
sub
and
mov
outsl
xlat
rcrl
mov
sbb
lea
in
mov
mov
jmp
push
adc
jo
pop
mull
pusha
dec
jl
test
push
sub
fcoms
jge
xchg
aas
into
pop
cltd
mov
and
nop
adcl
dec
xchg
loopne
jb
jo
mov
inc
addr16
addr16
bound
jp
push
fs
and
add
shll
cmpsl
adc
mov
outsb
inc
add
mov
sub
jne
mov
xlat
repnz
pop
xor
orl
and
cmpsl
gs
mov
dec
sbb
ja
cmpsl
out
scas
adc
xor
pop
in
loopne
cmp
dec
loopne
or
adc
movsb
sbb
ljmp
ljmp
xchg
outsb
fs
cmp
jecxz
fiadds
mov
mov
adcl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
cmp
adc
cmp
dec
xor
xlat
pop
jnp
leave
fsub
jbe
xor
jle
sbb
scas
lcall
cltd
cwtl
insb
popf
adc
cld
dec
out
lds
dec
jecxz
mov
xlat
cli
xchg
movsl
cmp
inc
ljmp
sbb
mov
mov
cld
mov
nop
xchg
xor
lret
pop
test
aam
mov
sub
js
sarl
mov
into
xlat
mov
cwtl
push
dec
sbbb
jne
shll
xchg
mov
dec
cwtl
cltd
clc
hlt
shll
lfs
mov
push
mov
xor
aam
setge
mov
add
mov
sbb
mov
xor
mov
mov
cli
jecxz
shr
inc
andl
xor
pop
xor
xchg
cmp
addr16
add
repz
outsl
movsl
sub
in
jns
scas
adc
push
in
sbb
xor
ss
roll
in
in
ret
inc
jns
int
lds
mov
pop
xchg
dec
mov
jne
mov
shlb
mov
pop
or
add
add
mov
push
mov
cld
and
xchg
cmp
xor
fisubrs
push
in
mov
repz
push
scas
shlb
call
idivb
add
add
sub
and
pop
pop
ljmp
shlb
stos
push
cmp
lcall
and
xchg
adc
lret
js
fmull
cmp
fistps
imul
push
loope
rcrl
lahf
pop
push
xor
ret
cmp
and
flds
lcall
cmp
sub
add
and
jl
div
jg
and
adc
lret
stos
icebp
fimuls
inc
std
lret
add
flds
fucomi
inc
or
mov
xchg
mov
testl
in
addr16
inc
add
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
push
scas
ljmp
in
and
outsl
popa
out
aaa
jl
push
sbb
sub
cmp
loope
xor
push
pop
jae
pop
loope
inc
mov
aam
popf
adc
add
scas
fistps
push
jp
je
mov
gs
dec
adc
out
es
inc
jl
lock
notl
mov
mov
adc
scas
pop
xor
pop
sub
or
test
push
mov
inc
sub
iret
imul
fwait
out
test
jmp
in
cmc
push
shl
sub
xchg
nop
fsts
stc
add
cmp
push
in
inc
and
movsl
sub
repz
jecxz
in
loopne
or
repz
hlt
lods
xlat
or
pop
hlt
push
ret
sti
ss
inc
mov
push
outsb
sub
jb
lret
mov
fmull
push
or
cmpsb
divl
lods
sbb
adc
jns
or
add
pop
addr16
jmp
xor
imul
lahf
mov
xor
xchg
scas
dec
mov
lcall
push
test
pop
xor
iret
mov
idivl
xor
and
pop
mov
and
push
lahf
imul
mov
push
movsb
fdivl
loopne
pop
mov
aaa
push
fidivl
cmp
xchg
fdivrl
cmc
cmp
lock
push
cmp
inc
rorl
xor
cmp
repnz
lds
imul
mov
mov
adc
mov
pop
push
fcmovu
xlat
sub
in
js
arpl
adc
xor
fs
dec
jle
add
fistl
shll
pop
push
in
cmp
stc
movhps
movsb
cmpsb
gs
inc
jle
outsb
loop
or
mov
sub
aaa
push
and
pop
adc
sahf
dec
addr16
mov
pop
pop
xchg
xchg
cmpsb
bound
mov
pop
lods
dec
inc
inc
adc
addl
movsl
inc
push
std
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
js
jmp
lcall
adc
xor
out
arpl
jle
xor
shlb
ss
test
mov
cmp
mov
stc
mov
sub
movsb
xor
mov
cmpsb
fcoml
or
inc
es
xor
pushf
xor
sbb
fcmovnb
in
loope
cwtl
dec
cltd
enter
stos
push
xchg
lock
push
mov
rol
imul
xchg
pop
mov
cmp
cwtl
jno
fisttpll
and
jecxz
mov
or
xor
sbb
inc
js
and
dec
cmpsl
xor
push
fwait
outsl
jae
int
addr16
in
mov
lret
cmp
bound
lret
inc
mov
imul
aas
cmpsw
mov
mov
ja
sub
xor
or
mov
xor
movsl
dec
fldcw
out
dec
mov
ja
push
xchg
iret
fs
mov
xchg
imul
fucomi
mov
push
shlb
aaa
out
mov
jmp
dec
bound
jp
sub
and
xor
mov
push
lcall
lds
adc
rcll
inc
pop
stos
jl
mov
or
enter
mov
sub
and
sar
jns
xor
cmpsl
add
mov
xor
xor
mov
int
dec
mov
fists
lods
mov
jne
in
inc
push
shrl
fiaddl
xchg
sub
xchg
hlt
cmc
jge
movsl
lods
dec
scas
sbb
lock
add
mov
cmc
xor
mov
sub
cli
xor
cmp
push
stos
out
jmp
mov
mov
pop
movsb
xchg
push
pop
pop
lret
dec
xchg
dec
js
or
adc
or
push
loop
xchg
test
faddl
fs
cmc
aam
scas
jl
imul
pop
cmp
mov
pop
sub
xor
outsb
xchg
push
repnz
rorl
add
pop
sbbl
in
add
mov
xor
pop
pop
aad
pushf
std
aas
and
jnp
push
xor
fldt
push
std
sbb
xadd
and
sub
inc
loope
mov
mov
stos
add
pop
imul
fsts
and
scas
nop
loope
mov
mov
xchg
or
inc
mov
insb
cltd
je
cmp
outsb
pusha
xor
push
xor
push
xor
pop
rcll
sub
add
sub
dec
jae
push
pop
pushl
pop
pop
or
test
or
pop
add
mov
push
lahf
add
ror
inc
jp
out
call
outsb
sub
adc
or
cmp
xchg
jne
xor
mov
adc
imul
fwait
jge
in
mov
add
xchg
mov
mov
aas
adc
cmp
mov
les
xor
pop
or
xchg
jne
aaa
scas
je
nop
rclb
dec
mov
aad
xor
xor
or
pop
xor
mov
scas
xor
and
push
dec
sub
lss
scas
cmp
inc
lret
ljmp
adc
lock
mov
arpl
jnp
outsb
mov
int
daa
mov
xor
cmp
sub
cmp
mov
js
fcmovnu
cmp
shll
in
sbbb
insb
pop
insl
pop
add
sub
mov
in
inc
out
pop
mov
xchg
pusha
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
dec
pop
lods
loop
adc
pop
adc
adc
incl
xor
sub
dec
dec
outsl
pop
push
and
aas
jp
add
mov
lcall
push
jae
xchg
scas
adcl
daa
xchg
jnp
pop
lret
sti
sub
add
test
and
outsl
push
xor
cmp
cmp
xor
fistps
aaa
fnstsw
sub
fstpt
push
rorl
mov
push
inc
aas
cmpsb
dec
cld
push
stos
xchg
adc
cmpsb
pushf
scas
pop
or
imul
leave
ficomps
add
jg
jmp
sbb
imul
jnp
repnz
leave
fsubl
loope
fwait
push
sbb
add
test
fadd
jo
fisubl
repz
jnp
addl
mov
xor
scas
and
xchg
inc
sub
adc
mov
sub
adc
sahf
jle
or
xchg
pusha
outsl
xchg
adc
call
ss
gs
or
push
pop
push
rclb
movsb
xor
ds
nop
mov
sbb
pop
xchg
and
jno
xor
jp
mov
daa
mov
test
call
fnstcw
xchg
jecxz
ljmp
push
pop
mov
sub
fldl
push
js
scas
pop
fs
rcrl
inc
ja
scas
cmpsl
rorl
xor
jns
mov
fidivs
cmp
in
adc
adc
lds
sbb
jns
push
xchg
mov
mov
rorb
mov
dec
stos
xchg
inc
mov
jno
mov
inc
mov
int3
stos
pop
jmp
imul
jg
or
mov
pop
add
push
lea
xchg
push
and
shr
out
andb
adc
sub
insl
ljmp
mov
neg
mov
mov
jns
ror
xor
aad
sub
push
inc
mov
pushf
popa
lret
es
sub
into
syscall
fs
icebp
lods
or
fildl
push
or
out
lds
pop
fistps
or
and
les
lahf
adc
sub
in
push
int
dec
pop
mov
xor
add
scas
and
scas
or
enter
out
enter
jmp
popf
das
push
mov
nop
int3
int
shlb
sub
cltd
scas
sub
ja
cmp
je
in
lcall
cmp
movsl
out
or
fldt
loopne
stos
loope
pushf
cmpsb
std
rolb
call
mov
mov
xchg
pop
mov
stc
hlt
enter
xchg
adc
les
lret
loop
xchg
adc
dec
sub
shr
adc
sbb
inc
add
push
popf
adc
cmpsb
js
clc
scas
aad
pushf
cltd
call
dec
out
mov
jp
push
inc
cmc
arpl
sti
or
out
xchg
mov
push
popa
sbb
jmp
imul
inc
gs
add
adc
je
outsl
xor
test
xchg
enter
lods
jne
aad
dec
aam
mov
push
mov
out
scas
std
repnz
cmp
pop
fnsave
jno
pop
pusha
push
pop
mov
push
adc
inc
push
iret
iret
in
mov
movsb
mov
add
roll
jbe
pop
clc
out
loope
cmp
pop
es
xchg
enter
subb
mov
pushf
inc
ret
notl
in
adc
jns
ret
sbb
push
sbb
sbb
add
addb
sub
rorb
bound
fbstp
jbe
mov
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
xor
and
mov
adc
movlps
pop
mov
xchg
push
imul
push
mov
jmp
in
push
fwait
icebp
cmpsl
lea
push
sarl
adc
add
add
imul
adc
sbb
dec
sti
ret
sbb
jp
ds
pushl
push
sbb
test
sahf
addr16
xchg
xchg
adc
xor
sbb
dec
xchg
jge
pop
clc
popa
cli
int
mov
ja
sub
fmulp
cmpsb
dec
scas
stc
add
sbb
xor
nop
and
adc
repz
xor
repz
mov
cld
adc
flds
fs
in
jmp
addr16
inc
pop
add
or
outsl
sbb
dec
cli
add
xor
push
pop
int
bound
cwtl
lds
fs
mov
fidivrl
ret
adc
or
fdivs
push
inc
add
xor
leave
mov
mov
adc
test
rolb
pop
mov
negb
lret
mov
movsl
out
orb
repz
add
cmp
stos
gs
lret
stos
popf
adc
loope
fs
jnp
push
shrb
ret
mov
movsl
loopnew
jae
jl
arpl
xor
add
pop
mov
cmp
dec
int
sub
nop
shlb
fimuls
rcl
add
imul
jmp
jae
xchg
stc
xor
popa
popl
fwait
decl
jno
push
dec
xchg
push
jp
add
hlt
and
cld
frstor
jae
outsb
push
pop
cmc
jl
stos
mov
lock
rcrb
jb
adc
stos
rorb
imul
sub
lock
mov
pop
sbb
mov
and
push
lock
or
pop
stos
push
and
sbbb
push
test
outsl
adc
orb
aas
sbb
cs
pop
pop
nop
mov
and
sub
sarl
xor
xchg
sarb
xchg
repz
pop
push
shlb
xor
inc
pop
add
lea
imul
sub
xchg
sub
aas
add
mov
decl
test
push
mov
and
dec
nop
repnz
cmc
ds
xchg
and
jae
cmpsl
and
push
aad
cmp
adc
push
mov
mov
lock
aam
cs
movl
stos
inc
test
xchg
mov
xor
aas
pop
pop
dec
lret
push
adc
fcompl
jo
test
xor
jbe
aam
push
div
mov
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
or
cmp
lock
jg
mov
pop
lock
jne
adc
push
mov
shrl
fwait
or
jge
push
ss
jo
xchg
mov
decl
ficomps
adc
fs
rolb
jmp
cmp
sahf
lret
hlt
repz
movsb
or
jno
cmp
inc
sub
insl
xchg
dec
mov
mov
cwtl
cmp
dec
iret
popf
jnp
xchg
adc
dec
xor
adc
aaa
adc
pop
mov
roll
push
lods
mov
roll
or
adc
jbe
shrl
adc
out
pop
xchg
aam
adc
ds
lea
sarb
adc
or
ss
pusha
insb
pop
aad
dec
mov
es
in
cltd
icebp
and
jnp
jp
movl
loop
inc
xor
sarb
mov
lods
ret
jnp
int3
out
add
jmp
jnp
js
and
cmc
mov
aad
sub
pop
inc
jns
cmp
inc
jp
imul
sub
lods
adcl
lea
xchg
fwait
pop
adc
xchg
aam
jno
jbe
mov
int3
lea
mov
add
lret
push
fsubs
mov
in
or
lods
mov
pop
call
cmp
add
fadd
clc
push
loop
mov
pop
les
in
imul
call
fs
mov
and
fmul
add
sbb
push
rcr
add
sbb
adc
in
shll
jo
fcomps
cmp
push
adc
dec
dec
xor
les
in
pop
inc
xchg
xchg
lock
xor
push
xor
bound
mov
sbb
or
jmp
cmp
dec
jmp
ljmp
decl
xor
ss
mov
lods
das
leave
ret
incb
fsub
cmc
push
cmp
xchg
push
movnti
add
arpl
mov
sub
icebp
addr16
test
dec
jmp
bound
or
xlat
frstor
lahf
addr16
lods
int3
mov
lret
sahf
cltd
xor
push
sub
mov
test
out
inc
or
jl
mov
mov
out
std
and
sbb
mov
hlt
testl
jno
mov
cmp
fldl
pusha
fdivl
cli
and
push
mov
loope
xchg
sbb
call
xchg
lahf
mov
repnz
stos
add
add
jae
mov
cs
xchg
sahf
es
sbbb
sbb
stos
and
push
xchg
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
mov
adc
movlps
add
xchg
scas
mov
ja
aad
fdivs
aam
cmp
sub
repz
lods
adc
stc
rorb
iret
lods
movsl
loope
xor
in
sbb
es
adc
push
mov
stos
lret
sbb
inc
adc
or
adcb
xor
push
jb
jbe
inc
push
ret
aas
sub
and
dec
les
aaa
cs
es
push
pop
push
rclb
int
pop
or
pop
jle
nop
fistpl
pop
imul
sbb
adc
sbb
or
mov
data16
sub
sbb
mov
idivl
cmp
pop
into
or
ficoms
imul
aaa
pop
movsl
or
xor
jb
pop
into
lret
imul
imul
loop
rorb
and
pop
fstps
sub
xchg
jno
push
and
cmp
push
xor
and
sub
xor
inc
pop
lds
inc
cmp
push
in
fnstsw
les
jo
xor
sub
mov
fcom
jnp
jle
cmpl
sbb
mov
push
ds
shll
cmp
pop
cmp
pop
xor
sub
mov
js
or
xorl
or
icebp
popf
in
sbb
pop
int3
pop
jle
jle
jae
jnp
sbb
pop
cmp
sbb
iret
inc
pop
xchg
mov
fldt
roll
stc
push
mov
out
gs
jmp
dec
xor
shlb
jp
or
jns,pt
insl
jmp
pop
mov
xchg
and
clc
push
xor
mov
fnstsw
mov
outsb
shlb
ja
xor
insl
cmp
mov
cmp
pop
dec
xchg
cmp
out
jns
incb
incl
xchg
dec
xchg
push
sbb
pop
push
jmp
mov
mov
out
nop
mov
pop
add
pusha
push
xchg
loope
xchg
icebp
pop
jne
mov
ja
adc
jb
ljmp
inc
ds
mov
jno
push
sub
add
int
mov
xchg
jl
test
adc
mov
cld
dec
ss
mov
clc
into
out
scas
cmp
test
cwtl
sarb
adcl
mov
jne
insl
jg
mov
cli
xchg
xor
xor
call
adc
dec
lea
add
and
das
mov
pop
gs
dec
insl
or
mov
mov
and
xor
hlt
movsl
repz
xchg
cmp
fldcw
xor
sbb
lahf
jge
loope
shr
sub
pop
ret
add
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
ds
pop
jae
adc
adc
out
inc
ficompl
in
cmc
jne
ja
push
fwait
mov
loop
loope
cmp
jge
add
cmpsl
movsl
pop
loope
ljmp
dec
aas
je
pop
cld
mov
clc
adc
pop
sub
jge
daa
in
xchg
lea
xchg
adc
push
xor
and
xor
push
dec
sti
imul
outsl
shll
push
iret
push
pop
inc
cmc
fdivrs
mov
push
jl
mov
testb
fadd
lea
dec
xor
test
imul
mov
dec
mov
imul
outsl
ret
insb
or
aam
loope
inc
and
aas
inc
aad
adc
inc
or
xor
mov
addl
icebp
ficompl
dec
sub
push
jg
sahf
add
sub
mov
fsubrl
add
or
jmp
adcb
inc
mov
dec
rcll
fcmovb
and
jle
mov
in
je
ds
pop
fildl
lret
inc
mov
adc
pop
and
mov
jbe
pop
stos
outsb
mov
xchg
sub
adc
and
cmp
jmp
call
inc
aas
jnp
xor
bound
pop
adc
pop
and
add
pop
pop
dec
dec
xchg
mov
insb
sbb
cmp
call
xor
cmp
add
inc
lcall
jns
iret
into
repnz
xor
push
and
pop
xchg
jns
fwait
add
push
cmp
push
pop
xchg
mov
sub
mov
adc
test
mov
push
xor
adc
dec
pop
notb
mov
jnp,pn
xchg
sar
adc
mov
bound
js
sbb
mov
out
std
xchg
mov
sbb
ret
adc
xchg
fdivrs
in
jecxz
sub
insl
xlat
inc
pop
dec
dec
notb
loop
das
push
out
filds
fwait
jbe
mov
fsubrs
mov
mov
inc
cmp
shrb
iret
mov
inc
test
insl
fcomp
outsl
mov
or
xchg
pop
sbb
fistps
push
pop
sti
fxch
mov
push
mov
add
mov
cli
clc
add
mov
xchg
js
push
xchg
popa
addr16
jp
push
or
xor
jae
adc
js
mov
ds
push
ror
jle
in
outsb
mov
inc
xor
mov
mov
sbbb
addr16
js
outsl
movsb
roll
sahf
jns
cs
mov
dec
popf
xchg
sbb
sbb
mov
push
sub
inc
lods
or
rclb
mov
aas
sub
mov
data16
arpl
sti
mov
fstpl
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
cltd
test
inc
cltd
out
es
vpperm
mov
negl
adc
jecxz
insl
dec
xor
adc
jb
xor
js
and
pop
pop
cli
or
jbe
fdivs
mov
xchg
push
dec
push
jp
int3
dec
lret
push
mov
mov
roll
pop
ds
sub
leave
cmp
aad
int
and
ja
push
repnz
mov
sbb
out
mov
inc
negl
inc
mov
push
adc
in
call
lds
pop
jg
iret
call
mov
loopne
hlt
fsubr
xor
and
aaa
or
inc
dec
inc
repnz
push
inc
jae
add
rcrb
xor
imul
inc
mov
fsubrs
mov
cmp
mov
data16
mov
xor
jns
xchg
loopne
rorb
pop
fldenv
gs
repnz
inc
inc
pop
dec
stos
mov
scas
add
cmc
inc
xor
mov
ror
mov
xor
ss
hlt
pop
gs
push
jae
sbb
jl
pop
stc
sbb
mov
xlat
fidivrl
popf
cmp
push
fists
mov
scas
pop
add
inc
fnstcw
das
fldz
add
add
sbb
ljmp
push
add
sub
adc
into
stc
out
cmpb
mov
popa
dec
and
std
pop
insl
sub
push
aaa
imul
sbb
xor
mov
movsb
inc
mov
cs
push
cmp
pop
add
fistpl
adc
je
cs
je
jle
test
loopne
lret
or
andl
mov
out
dec
test
mov
int3
xor
pushf
retw
jmp
ds
xchg
ss
fisttps
in
and
sub
jecxz
int
sbbb
shl
fadds
repz
scas
mov
push
mov
shl
icebp
jae
xchg
cmp
test
add
or
clc
cmp
cli
ffree
pop
mov
mov
out
clc
mov
notl
xor
xchg
or
aas
mov
lret
popl
pop
mov
clc
jns
push
inc
adc
pushf
jns
adc
xchg
jp
lcall
dec
xchg
xchg
jp
scas
test
popa
ffreep
ret
bnd
pop
in
shrb
and
mov
inc
inc
in
imul
mov
addr16
jb,pn
dec
ds
xchg
xchg
sub
inc
fwait
loopne
out
int3
lret
je
mov
cmp
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
test
mov
adc
cmp
in
xchg
mov
iret
outsl
push
call
pop
inc
mov
dec
mov
mov
xchg
ss
mov
xchg
add
clc
daa
mov
popa
inc
dec
leave
dec
loop
add
insl
push
es
cmp
sbb
push
push
and
inc
pop
hlt
dec
sbb
mov
cmpsb
ret
jb
sub
push
mov
adc
inc
dec
ret
sub
cmp
jle
adc
loop
scas
test
or
fldcw
xchg
into
cmp
dec
stos
or
insb
ror
dec
jmp
ss
or
xchg
test
shrb
mov
out
pop
nop
aaa
pop
pusha
pop
clc
popa
dec
in
shlb
lods
mov
push
cwtl
inc
xchg
mov
inc
js
pop
aam
mov
inc
xchg
sub
push
sub
pop
adc
arpl
cmp
lock
inc
mov
rcrl
icebp
mov
jg
and
icebp
dec
es
or
mov
popa
pop
sbb
sub
mov
sub
add
sub
sbb
cmp
out
iret
mov
std
sbb
adc
loopne
add
or
ss
inc
xchg
add
inc
sbb
aam
call
sarb
insb
lcall
and
in
loopne
jmp
dec
fldlg2
or
das
push
dec
jae
push
mov
pop
add
movsb
popa
gs
sbbl
repnz
aas
sbb
mov
gs
lahf
out
mov
xchg
sbb
sub
inc
loop
xchg
jmp
jmp
xor
or
ds
push
jns
inc
push
les
stos
cmp
repnz
cld
sti
popa
repz
pop
jno
xor
int3
in
mov
xchg
sbb
pop
rorb
pop
add
cli
mov
rcll
int3
cmc
pop
pop
ss
bound
sti
subb
jmp
xchg
fwait
xor
cmpsb
pop
lret
int
cwtl
mov
sarb
inc
or
adc
leave
clc
jg
ja
sbb
lret
cmp
data16
add
lahf
ret
xchg
cmp
mov
cli
loop
shrl
push
pop
pop
xlat
cmp
outsl
scas
mov
arpl
bound
jge
pop
adc
mov
jb
mov
mov
cld
aas
adc
jmp
mov
mov
inc
cld
jp
js
lods
ret
lock
into
sub
lds
xor
cmp
fiadds
ljmp
pop
stc
bound
mov
sbb
loopne
adc
jns
lods
jae
cmpsb
pop
xchg
xor
in
cmp
fidivrs
mov
mov
in
or
inc
mov
jne
rorb
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
xor
mov
push
xor
and
mov
sbb
adc
scas
inc
and
mov
inc
mov
jns
imul
xchg
sub
inc
in
xchg
popf
popf
inc
adc
sbb
pop
rolb
sub
xchg
call
fistpll
insl
bound
ds
add
imul
jle
xor
div
outsb
push
addl
sbb
inc
and
in
xchg
fs
adcb
enter
les
cmp
pop
mov
mov
les
xor
jbe
lret
mov
add
lods
into
push
icebp
ds
rol
add
dec
lods
sbb
stc
mov
pand
pop
je
subb
jbe
out
test
mov
cmp
push
and
fucomi
jbe
xor
cwtl
ja
mov
xor
cmp
cltd
cld
mov
add
and
or
adc
inc
test
mov
enter
mov
popl
mov
stos
je
mov
pusha
cmp
jnp
xor
mov
movsl
mov
dec
mov
aas
ss
fldl
adc
int3
scas
out
xchg
pop
sbb
lret
xchg
in
and
push
inc
loop
cltd
inc
call
or
icebp
repnz
ja
lds
and
movsl
stos
add
xchg
adc
mov
enter
sbb
dec
mov
push
jbe
lods
in
xchg
lods
in
xor
aad
or
and
mov
mov
or
cwtl
sub
jb
cli
inc
or
push
inc
aas
sub
fwait
cld
int3
jp
push
bound
in
cmpsb
sbb
pop
push
adc
and
xchg
xchg
mov
subb
outsl
jne
insb
loopne
cmp
mov
inc
repnz
jnp
xchg
in
fidivs
and
rolb
std
push
jle
mov
ret
rclb
rolb
pop
mov
xchg
pop
js
test
int3
jbe
or
and
jno
jb
lahf
jecxz
push
andb
mov
adc
pop
out
imul
inc
cwtl
pop
loopne
aam
fwait
je
add
test
stos
filds
pop
lds
dec
jo
outsb
in
sub
xchg
push
jno
pop
cmp
pop
mov
add
xor
mov
xor
cld
xor
movsb
in
cmpb
xchg
push
mov
mov
xchg
adc
dec
inc
fldenv
and
sub
test
push
mov
clc
xor
jne
jle
inc
mov
push
cmp
add
sub
movsb
xor
cmp
fnstsw
push
dec
xor
dec
xchg
jo
xor
push
jmp
mov
push
test
int3
rcrb
push
add
and
cli
inc
repnz
adc
fldcw
mov
shlb
pop
int
movsl
and
cmp
out
jnp
mov
jmp
sbb
push
test
repz
popf
repz
js
lds
cli
std
ja
jg
or
push
lods
ds
into
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
mov
pop
adc
jp
adc
test
add
inc
fstps
negb
push
into
lock
aaa
mov
ret
pop
lret
jne
dec
sub
aad
popf
jmp
test
push
pop
inc
add
js
pop
rcrb
and
and
notb
movb
mov
lret
dec
ss
xchg
mov
clc
pop
bnd
pusha
sub
lcall
inc
adc
adc
or
adc
or
cwtl
leave
xor
xchg
xor
push
xchg
add
xchg
aaa
adc
sbbl
pusha
pop
adc
loope
mov
mov
jb
jbe
xor
xchg
lahf
ja
inc
or
cld
sahf
jp
lcall
and
jl
pop
scas
pop
dec
jb
call
mov
add
stos
sbb
insl
sub
jb
clc
nop
inc
jb
push
mul
xor
xchg
cmp
jno
jno
popa
or
xor
sbb
pop
jno
sbb
ds
fs
cmp
push
ljmp
fcmovnbe
dec
fmull
stc
outsb
mov
mov
fdiv
pop
mov
adc
xchg
es
mov
mov
aad
push
jnp
fsubl
push
aas
push
jns
mov
ficoml
int
add
outsl
pop
xor
fiadds
test
mov
sub
sbb
dec
aas
and
add
inc
mov
push
outsl
xor
std
sbb
rorl
sub
mov
jb
fwait
and
outsl
mov
sbb
mov
sbb
inc
sub
es
mov
add
pop
in
xchg
mov
popf
dec
jae
int3
push
mov
loopne
pop
push
mov
decb
dec
sti
mov
jge
sub
xor
mov
xor
bound
mov
sarl
and
int
and
sbb
mov
or
nop
into
xchg
push
pop
xor
test
push
inc
out
add
out
shrb
xor
or
mov
pop
adc
jbe
movsl
cli
enter
push
fwait
cmpl
ds
jbe
lret
push
shll
sbb
mov
jo
lds
add
loop
sahf
add
mov
lahf
arpl
adc
pushf
out
mov
pmulhw
adc
xor
cmp
jecxz
dec
mov
mov
mov
aam
cmpsl
test
xor
jns
lods
lods
xchg
aaa
or
aas
add
jae
jbe
es
push
jle
daa
adc
in
pop
rcrb
jno
jns
sub
aas
ds
dec
popa
imul
mov
shrl
arpl
xor
xor
es
popa
repnz
adcb
mov
adc
adc
pusha
roll
outsb
pushf
repnz
sbb
xchg
pop
dec
fucomi
mov
cmpsb
and
xor
daa
jo
cli
mov
cmp
cld
mov
add
inc
clc
roll
add
inc
hlt
adc
add
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
imul
test
adc
adc
push
xor
test
mull
fsubp
pop
insb
jo
hlt
adc
push
adc
push
and
cmp
adc
push
in
testb
add
pushf
lret
push
lods
and
mov
or
xchg
dec
cs
and
or
cli
sub
jae
test
cmp
mov
dec
shrl
or
leave
pop
sahf
and
inc
mov
jecxz
rolb
xchg
mov
fisttps
ss
xchg
lods
sbb
orb
std
fldt
mov
xor
popa
sbb
mov
add
cs
mov
movsb
inc
ret
dec
fistpll
push
mov
pop
rcr
fdivrs
mov
aad
push
mov
test
mov
movsb
into
push
out
sbb
into
mov
pop
call
fisubl
pop
int3
mov
mov
xor
lods
and
xchg
push
icebp
aam
xor
dec
or
iret
jo
jp
xchg
mov
call
fwait
dec
dec
sub
iret
sarb
es
xlat
or
add
xor
ss
popa
out
outsb
lock
fcoms
div
sbb
out
out
rolb
in
jae
andb
aas
notl
aas
dec
xchg
icebp
inc
stos
or
stc
lret
iret
xchg
addr16
fidivl
pop
fsts
fimuls
sub
fsubr
in
push
cltd
repz
outsb
add
mov
or
fdiv
inc
fisubrs
add
mov
lcall
cmpsl
and
push
xchg
jle
mov
xor
neg
popf
xchg
adc
dec
aaa
sub
js
adc
shll
pop
aam
push
shrl
fcom
mov
inc
cmpsl
mov
cwtl
jns
addr16
loop
into
in
sub
cmpb
ss
mov
enter
ret
and
mov
adc
mov
aaa
mov
mov
xlat
pop
xchg
mov
dec
lea
scas
pop
cli
movsb
rorl
in
lods
dec
add
mov
cmp
out
or
call
mov
xor
or
out
ret
int3
and
fnstenv
push
sarl
pop
or
mov
xchg
mov
pusha
mov
mov
adc
mov
fs
stc
leave
pop
pop
mov
adc
in
and
inc
scas
cmp
ret
loopne
fbstp
ja
sahf
push
push
mov
repz
push
or
cmpsb
cmpsb
xor
sbb
add
jnp
fwait
aaa
cmp
sub
mov
xchg
lea
cwtl
fcmovnb
jns
clc
movl
inc
test
pushf
stc
lcall
and
xchg
fidivs
inc
dec
jecxz
jecxz
xor
stos
mov
xor
mov
cmp
jne
daa
loopne
and
cmp
adc
andb
movsb
mov
aam
leave
xor
add
mov
xchg
loop
add
into
mov
xchg
mov
fldcw
jl
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
xor
jp
adc
idivl
sahf
sbb
pop
push
repz
jp
push
cli
mov
lds
mov
sysexit
leave
inc
pop
addb
addr16
fs
sub
sbb
fwait
stos
xor
sti
jecxz
ja
mov
leave
repz
addb
adc
iret
call
adc
inc
push
jp
repz
jb
dec
aaa
or
add
out
ss
xchg
in
outsb
push
push
gs
popf
rolb
nop
movsb
inc
pop
in
imul
cmp
cmpsl
pop
or
mov
ljmp
xor
dec
cmpsb
xchg
push
and
jb
pusha
inc
aas
mov
popa
repz
and
cmp
mov
enter
insl
out
leave
stos
jge
lret
sbb
repz
mov
std
lods
mov
stos
jle
jnp
test
fdivrp
fsubr
pop
pop
icebp
pushf
pop
mov
mov
sub
cmp
fs
roll
sub
inc
inc
aaa
lds
pusha
cwtl
pop
adc
push
mov
out
test
jno
stos
sub
jns
mov
fildl
xchg
jecxz
enter
unpcklps
jmp
sub
pusha
inc
movsb
mov
mov
call
push
push
xor
pushf
dec
aad
lahf
lock
jg
add
sbb
and
bound
pop
jmp
push
mov
sub
jge
xchg
xchg
sub
rorb
or
mov
push
outsl
adc
data16
addr16
push
xchg
push
sti
or
xchg
call
stos
pop
jno
mov
hlt
pusha
push
popa
mov
arpl
cld
cmp
cmp
fsubrl
pop
jecxz
bound
loopne
pushl
sti
insb
int
push
in
cld
in
je
pop
push
fidivrs
sub
add
add
cmp
inc
pop
xchg
xchg
enter
call
mov
sbb
repnz
jns
aas
js
imul
pop
ds
rcll
mov
mov
add
call
or
mov
or
mov
cs
push
pop
jnp
int3
adc
adc
sbb
test
stos
or
rcrb
mov
jmp
movsl
xlat
push
aad
out
xor
enter
int
fs
pop
push
pushl
push
inc
add
or
jno
push
cmp
pop
or
xchg
gs
dec
or
cmc
fs
imull
mov
fistpl
les
push
dec
mov
lods
scas
fldenv
mov
sub
fmull
inc
pop
sub
adc
ljmp
pop
fnstsw
aam
andl
jl
popf
inc
mov
push
jge
adc
push
cmp
jle
sbb
gs
stos
insb
cld
sbb
jl
pop
pop
insl
lret
adc
mov
enter
imul
repnz
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
mov
mov
lea
adc
addr16
loop
mov
frstor
jnp
jns
cmpsb
sub
je
push
sub
mov
dec
fdivrp
adc
and
mov
cmp
es
std
outsb
pop
mov
xchg
and
insl
pop
sarl
stos
mov
sbb
or
and
jns
in
ret
mov
pop
push
jg
jb
xchg
in
cli
pop
xchg
pop
pop
rcrl
mov
lds
scas
mov
or
push
out
push
push
shrb
sub
adc
scas
sbb
sbb
clc
out
pop
sub
std
fwait
jmp
repnz
add
lods
push
push
xor
stc
mov
sbb
xlat
call
addr16
xchg
dec
cmp
jmp
push
cmpsb
xchg
jb
outsl
arpl
cmpxchg
jecxz
std
aas
stos
add
out
mov
push
pop
adc
sub
and
ret
push
leave
dec
test
add
fisubrs
push
mov
mov
xchg
xor
scas
fwait
jns
push
mov
inc
and
sub
push
mov
fcmovbe
pop
dec
lds
je
std
popa
ja
push
arpl
sarl
shll
and
jb
mov
shll
lock
mov
jp
mov
daa
sbb
pusha
jmp
bndstx
lock
repnz
pop
popa
and
pop
out
cwtl
jg
xchg
cwtl
fcomi
or
out
push
imul
push
notb
test
cmc
mov
or
mov
and
xchg
dec
clc
mov
sub
popf
mov
lret
pusha
or
xchg
mov
inc
and
sbb
mov
jne
repz
sti
sbb
fldenv
jbe
mov
pop
adc
icebp
add
pop
mov
sbb
mov
and
aad
cmpsb
loopne
xor
mov
jl
bound
sarl
push
into
xor
pop
iret
stos
push
sbb
dec
out
sub
push
cmp
shl
insb
loopne
outsb
adc
pop
and
fiadds
dec
rclb
push
xchg
dec
add
ret
shrb
mov
inc
test
dec
mov
sbb
pusha
push
ss
add
or
aas
hlt
or
cwtl
cmp
bound
fs
in
jp
cmp
jbe
orb
or
xchg
lret
sbb
testb
adc
jae
pushf
loope
sub
hlt
lds
jo
pop
push
inc
cmp
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
repnz
out
xchg
ss
push
push
int
call
fcoml
jbe
aad
pusha
push
mov
inc
subps
cs
leave
jb
aam
push
pop
jns
movsl
ja
mov
test
stos
addr16
mov
xor
inc
push
jno
sarb
jo
jmp
sub
xor
and
ss
or
pop
mov
mov
adc
fldl
add
out
cmp
dec
pop
sub
call
jae
mov
or
pop
pop
xchg
in
js
or
sbb
notb
repnz
xchg
sbb
push
stos
in
std
xchg
addr16
pop
shl
arpl
popa
das
paddd
imul
pop
out
imul
sbb
lret
stos
sub
fisttpll
sbb
jecxz
in
add
fcomi
fsts
jns
inc
mov
std
push
dec
scas
ret
xchg
dec
roll
mov
or
cmc
xchg
push
pop
mov
push
fs
les
imul
xor
movzbl
enter
sub
and
fcoml
pop
in
ret
and
dec
add
bswap
mov
repz
aaa
inc
sarl
sub
adc
mov
xor
lods
cmp
add
repz
push
aas
pop
lret
mov
test
fstl
lds
lds
lahf
jnp
scas
inc
mov
lret
mov
popa
clc
mov
rorb
cmpsb
call
gs
dec
push
cwtl
fwait
stc
xchg
xchg
push
xor
scas
test
jecxz
mov
out
cmp
fildl
mov
sbb
scas
ljmp
rorl
std
xchg
fs
sti
jmp
adc
or
daa
outsl
test
test
push
sti
cmpb
les
cs
jno
pop
out
mov
lods
pop
dec
pop
cmp
inc
jecxz
hlt
jo
call
sub
gs
pop
in
lods
push
sbb
lret
sub
rorb
cmp
mov
int
sarl
push
je
sbb
int3
push
outsb
push
adc
lds
jb
inc
push
jl
decb
sbb
mov
mov
fistl
or
inc
mov
mov
cltd
or
pop
push
jo
enter
repnz
mov
nop
mov
insl
mov
leave
testb
ret
cmp
push
out
pop
jns
push
push
or
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
clc
inc
dec
xor
xchg
xchg
clc
sub
xor
data16
add
sahf
loope
sub
std
inc
cld
sub
inc
hlt
repnz
mov
repz
cmpsl
dec
sub
cmp
jge
pusha
loope
les
cmc
jne
jno
dec
fcoml
add
adc
pop
movsb
in
mov
data16
push
shll
jnp
mov
mov
mov
scas
xchg
push
sti
push
daa
sbb
cmpsb
mov
xchg
mov
push
call
stos
in
scas
fisttps
lea
test
repnz
loope
adc
movb
push
xchg
sub
pushf
jle
mov
ror
fistpll
dec
out
jne
or
das
sbbb
insl
add
push
push
pop
sub
push
pop
mov
sub
sub
adc
scas
test
mov
sub
aam
loope
and
mov
jecxz
and
and
pop
lret
jl
daa
shrl
or
pop
adc
push
xchg
rorb
inc
xor
cmpsl
xchg
sub
loope
out
xchg
or
mov
jne
rcrb
ds
out
mov
and
cmp
pop
add
lret
in
mov
push
push
jne
mov
jns
mov
mov
jb
outsl
mov
sub
test
in
push
xor
lret
nop
test
sbbl
mov
add
sbb
dec
fildll
mov
push
mov
cmpsb
sbb
out
rorl
dec
cwtl
xor
std
daa
pop
sub
movsl
or
push
lahf
add
lds
mov
dec
xchg
and
inc
jnp
adc
mov
out
adc
ljmp
adcl
faddl
cmp
hlt
movsl
or
sbb
mov
mov
rol
pop
scas
adc
out
ja
fwait
sub
cmp
rclw
stos
or
and
push
in
and
mov
jg
rcrl
negb
inc
jle
cld
sti
jno
shrb
sub
scas
add
and
mov
outsb
jbe
imul
xor
jecxz
out
push
or
sub
pop
cltd
aam
rolb
push
fcompl
testb
in
dec
inc
lret
push
push
dec
mov
ds
jo
fbld
cmp
iret
or
dec
scas
dec
fucom
out
std
cmpsb
clc
push
insb
dec
out
add
stos
dec
gs
mov
inc
lcall
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
aam
add
lea
adc
fdivrs
and
xchg
pop
or
lcall
ljmp
adc
fs
mov
shrl
mov
divl
dec
call
ds
repz
clc
cmpsb
jnp
clc
add
jmp
jg
int3
xchg
fcmovnb
add
out
xchg
xchg
and
ja
jmp
add
adc
js
dec
out
inc
push
mov
andb
cli
movsb
int3
push
sbb
in
mov
imul
mov
push
cmp
inc
sub
sub
lds
repz
sub
mov
stos
add
aad
and
cmpsb
pop
xchg
fisubl
nop
xor
test
pop
fsubrs
inc
lret
cmpsl
push
pop
mov
in
or
das
lods
sbb
repz
adc
push
cld
adc
jo
push
enter
jbe
fcoms
inc
les
into
movsl
adc
popa
sti
sub
test
test
negl
outsl
inc
data16
push
out
cmp
shll
inc
adc
push
aas
imul
mov
rorl
faddl
and
jg
sub
xchg
into
fs
adc
mov
or
jmp
cli
adc
rcrb
xchg
outsb
pop
xchg
les
rcr
fimuls
mov
mov
push
jp
mov
xor
adc
movsb
shlb
dec
cmp
sbb
and
mov
nop
gs
ret
xchg
add
addr16
into
dec
movsl
lret
push
xchg
mov
push
ret
pop
cmp
int3
dec
adc
ret
adc
add
rcrl
dec
add
fs
adc
repnz
pop
ret
pop
jge
jge
mov
jmp
cmp
lahf
sub
adcl
pop
imul
xchg
sbb
iret
repz
sar
in
pop
jae
pop
loop
sub
in
xchg
sbb
rcll
and
fdivr
mov
arpl
and
xor
add
mov
jb
aas
mov
pop
mov
aaa
and
lret
fimuls
sbb
cmp
adc
pop
das
ja
decb
xchg
imul
mov
fcompl
mov
inc
cmp
enter
mov
sbb
jb
scas
stos
or
ja
insl
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
scas
and
xor
adc
ret
pop
jb
cmc
mov
push
outsl
pop
jmp
or
mov
sbb
pop
dec
mov
push
aas
sub
frstor
jb
xor
pop
cltd
repnz
push
dec
jmp
mov
sbb
pop
in
dec
push
mov
jle
sbb
js
jecxz
popl
repnz
or
sub
dec
stos
dec
dec
or
push
fadds
rcl
mov
jmp
leave
push
sub
call
in
loopne
xchg
inc
cmp
into
fcomp
mov
xlat
fwait
xor
add
jmp
add
testb
loopne
dec
dec
imul
ja
outsb
movsb
sub
in
mov
dec
popa
or
jb
lret
add
mov
mov
rorl
enter
adc
xor
mov
mov
aaa
jg
iret
pop
and
pop
test
adc
aad
popf
inc
push
aad
subb
and
add
jb
cmp
leave
xchg
adc
lock
push
sub
sub
xlat
jne
fnstcw
movsb
add
and
sub
push
mov
ja
scas
enter
or
sub
sbb
jmp
repz
adc
mov
sbb
aaa
add
cmp
xchg
push
leave
test
add
outsb
dec
rolb
mov
add
test
rorl
mov
xlat
inc
pop
adc
mov
push
dec
lods
xor
push
dec
leave
push
lods
out
xor
and
xchg
std
mov
xor
cmpsl
leave
xorb
xor
dec
adc
out
mov
les
shrb
aam
mov
cmpsb
mov
or
das
test
les
xchg
xchg
sub
insb
je
icebp
stos
mov
push
test
dec
mov
js
shrl
pop
das
fisubs
jge
mov
dec
cltd
faddl
mov
jno
sbbl
aam
call
sbbl
dec
test
mov
fnsave
subb
subl
testl
frstpm(287
nop
stos
pop
jmp
rdtsc
sub
out
dec
enter
data16
mov
mov
lahf
iret
mov
sub
ret
sti
sbbl
addr16
cmpsl
xchg
xchg
idivb
dec
movsl
lahf
enter
test
scas
or
rcll
inc
adc
enter
add
adc
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
stc
add
lea
adc
pop
rcrl
flds
inc
add
mov
cmp
and
sbb
sbb
jp
sbb
sbb
bound
cltd
sbb
dec
jmp
pop
into
adcb
sbb
and
xchg
push
cmp
or
bound
negb
dec
popa
ds
or
fistpll
pop
and
popf
cmp
push
inc
sarb
cmp
ret
mov
pop
in
pop
mov
push
xor
inc
fmuls
inc
test
cli
push
lret
jmp
scas
bound
add
jb
mov
push
or
movsb
daa
xor
push
mov
cmp
lcall
xlat
cmp
notb
jae
inc
sub
popf
mov
jge
sahf
cmp
add
push
or
sahf
mov
mov
sti
fistpll
dec
mov
jne
mov
pop
sbbb
cmp
mov
or
or
sbb
jae
fldt
test
sbb
mov
fcompl
cwtl
movswl
push
inc
inc
jmp
jge
mov
adc
push
lahf
lcall
mov
lret
in
add
cmp
jecxz
push
jl
in
dec
ret
add
iret
jne
out
arpl
lock
cltd
cwtl
pop
adc
inc
js
ljmp
movsl
inc
out
out
cmc
and
in
push
and
mov
test
cltd
cmp
mov
pop
out
mov
cmp
xchg
mov
push
push
jmp
mov
movsl
sub
hlt
ret
js
test
dec
inc
adc
inc
out
orl
lahf
nop
ja
sub
or
insb
push
and
push
lea
jo
push
les
and
pop
pop
arpl
les
or
rclb
pop
xchg
jnp
mov
or
add
adc
test
cmpsb
sbb
jne
push
dec
into
fsubrs
mov
shl
xchg
in
jecxz
mov
xchg
xor
xchg
mov
dec
cld
ret
cmpl
out
cmp
div
pextrw
xchg
push
push
out
sub
adc
adc
addb
dec
iret
jecxz
mov
jmp
scas
cwtl
jecxz
cmpsb
sub
pop
mov
out
leave
int
jecxz
mov
pcmpgtw
sbb
jge
push
jle
dec
sub
dec
sub
inc
ds
cmp
mov
popa
stc
es
pop
hlt
rolb
fxch
push
cmp
xor
loop
dec
or
xor
or
push
add
jmp
and
lods
and
js
lea
lea
adc
addb
negb
in
push
pushf
jnp
mov
cmpl
push
into
xor
sbb
aaa
psllw
int3
out
mov
jns
push
movsb
xchg
js
mov
cmp
inc
stos
lahf
out
pusha
push
jbe
roll
push
mov
push
xlat
sbb
xlat
movsl
out
imul
jle
sbbb
rcll
or
ss
inc
fdiv
jl
cmp
dec
push
aam
jmp
mov
lea
fists
pop
fsubp
and
loop
sbb
inc
mov
bound
wrmsr
out
cwtl
add
iret
jae
pop
cmp
jmp
mov
mov
out
lahf
fwait
insb
and
mov
sbb
repz
push
pop
add
jecxz
sti
push
lods
pop
jns
dec
dec
loope
mov
orl
sti
pop
iret
xchg
fcomip
and
call
mov
clc
cwtl
ret
pop
sbb
arpl
mov
rcll
sub
pop
push
xchg
cmp
or
lret
js
ret
gs
mov
cmc
jbe
xchg
and
xor
lret
xor
ja
inc
rorb
icebp
loop
mov
out
mov
insl
call
add
xchg
sub
daa
pop
push
mov
arpl
idivb
lods
jg
xor
add
outsl
sub
inc
jbe
sub
testl
sub
or
xor
push
pop
bound
inc
shlb
mov
jge
sbb
aaa
sub
jg
lock
jno
mov
fstpl
scas
clc
adc
rcrl
push
push
fcoml
cltd
pop
fidivrs
out
out
ret
jae
mov
adc
or
mov
fmul
or
mov
adc
sub
push
xchg
pop
sub
add
jns
push
into
xchg
stos
sub
in
mov
je
push
pop
mov
push
xchg
add
icebp
out
xchg
rcl
loope
xor
les
adc
push
and
adc
cli
outsl
pop
push
and
or
int3
and
push
cltd
repz
cmp
cmp
adc
test
xchg
mov
mov
les
or
roll
inc
push
test
fs
mov
add
sbb
cld
xchg
je
mov
outsl
xchg
cltd
jae
sti
subb
in
xlat
mov
decb
sub
jge
sbbl
fs
cmp
das
xchg
aam
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
pop
jecxz
sbb
in
sahf
mov
add
lods
mov
ret
loopne
lock
sarb
out
in
add
insl
movsb
dec
lock
jl
mov
mov
mov
insb
bound
mov
pushf
ja
frstor
inc
sti
inc
stos
inc
mov
inc
mov
mov
mov
push
lds
mov
dec
pop
das
cld
or
inc
jge
fst
repnz
pop
fmuls
idivb
sub
xchg
xchg
xchg
scas
pop
clc
dec
add
repnz
out
dec
daa
mov
fdivs
fldl
into
xchg
test
setne
pop
jne
mov
lcall
sbb
mov
xchg
jne
daa
rep
insl
jmp
aad
xor
xor
add
jbe
ds
sub
fstl
aaa
dec
add
stos
sbbl
adc
adc
pop
xchg
pop
inc
fs
xor
mov
push
dec
icebp
xor
outsb
pop
cmpsl
faddl
pop
push
addl
cmpsb
dec
and
xor
add
xorb
in
sarl
add
mov
mov
fsubl
in
loope
dec
or
jp
mov
lcall
cli
sbb
and
push
mov
jecxz
das
cmp
std
movups
mov
and
pop
std
inc
or
movl
leave
push
mov
dec
xchg
test
mov
mov
outsb
push
cmpsl
dec
aam
push
sbb
sbb
mov
rorl
push
inc
sarb
mov
clc
pop
xchg
or
dec
mov
xchg
mov
out
jmp
dec
lea
imul
pop
mov
sbb
or
xchg
push
and
adc
sbb
inc
pop
add
std
pop
aad
cmpsb
lret
shl
lahf
cmpsl
or
jne
pop
push
add
shll
enter
xor
iret
test
bound
jp
gs
mov
jae
into
xchg
sahf
mov
xlat
loop
sub
into
dec
mov
pop
out
mov
lock
lods
jne
jmp
push
lods
cmpsl
mov
pop
push
roll
rorl
add
aas
cld
ljmp
sub
add
and
push
std
fs
fs
sub
jne
jnp
cld
push
inc
xchg
sbb
in
cld
lea
mov
lods
sub
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
xchg
js
sbb
adc
lds
filds
ja
inc
mov
ror
out
les
inc
sbb
loope
sbb
jno
cld
rorl
shll
stos
and
add
push
cltd
dec
jge
pop
xor
push
leave
in
mov
cmc
xchg
add
imul
push
or
cmp
and
jmp
mov
scas
dec
fldenv
push
pusha
dec
lahf
and
inc
ljmp
aad
aam
scas
pop
sbb
lea
xchg
pop
jne
jne
std
pop
cld
js
inc
dec
fisubrl
mov
mov
cld
inc
jecxz
xchg
adc
fdivr
dec
mov
adc
mov
stos
sbb
sub
cmpsb
nop
div
sbb
popa
fisttps
addr16
test
out
jmp
out
popf
das
fadds
mov
xchg
inc
mov
test
fbstp
aas
mov
jg
imul
pop
out
pop
pop
inc
loop
ljmp
fbld
add
dec
pusha
adc
outsl
mov
or
insw
xlat
test
push
sub
and
sbb
inc
mov
or
xchg
and
in
fdivrs
mov
dec
pop
jg
pushf
jb
in
andb
inc
mov
lods
mov
das
add
inc
hlt
scas
fsubs
das
or
ret
lods
mov
mov
test
jmp
push
iret
dec
dec
rcll
loope
adc
cmp
jo
outsl
jle
and
xorb
mov
cwtl
cmp
addr16
and
jns
rol
cmpsb
dec
sub
fcmovnu
lret
out
into
xchg
movsb
ja
inc
adc
scas
push
lods
shll
xor
into
lods
fistl
push
jns
fiaddl
jae
mov
es
ja
stos
sbb
ljmp
test
add
inc
lahf
xor
adc
clc
xchg
pop
ds
cld
imul
test
and
push
fmull
mov
aad
test
push
pop
inc
out
mov
cmpsb
mov
pop
rcll
sub
js
les
sbb
lcall
loopne
adc
and
sbb
xor
sbb
lcall
add
lret
xchg
or
sbb
imul
push
lcall
xor
rorb
aas
ret
popf
pop
lock
pop
icebp
xchg
dec
insl
cmpsb
in
gs
xchg
pushf
xor
mov
and
cmpsb
enter
inc
xchg
and
pushf
lret
lret
xor
andb
stos
imul
xchg
test
cmp
jo
jns
and
lret
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
bound
dec
mov
mov
or
push
scas
mov
adc
mov
imul
les
jb
stc
ljmp
jecxz
and
ljmp
sub
test
fcomps
addb
fsubl
adcl
ret
adc
sbb
jle
fidivl
icebp
mov
mov
push
jg
xor
mov
ds
into
push
lock
scas
js
ret
jbe
cmpsl
and
mov
sbb
iret
adc
stos
mov
mov
gs
jp
out
inc
or
push
xchg
subb
nop
out
gs
mov
jl
mov
pop
sbbb
mov
xchg
cmp
jge
add
test
aas
mov
loope
ja
out
push
movsb
xor
je
call
pop
xchg
sub
mov
test
pop
mov
push
orb
mov
lcall
scas
mov
xor
push
xchg
and
cmp
xor
mov
adc
xchg
jecxz
call
sub
mov
fstl
lcall
out
lcall
out
or
repz
sub
lahf
dec
cmp
iret
or
or
lods
leave
push
insb
inc
mov
adcl
push
sbb
push
ja
inc
fldt
dec
iret
es
add
mov
push
xchg
repnz
jp
cld
dec
loop
jns
ss
pushf
pop
test
fnstenv
movsl
in
sub
shrb
int
push
hlt
aaa
stc
repnz
lods
pop
sbb
xor
clc
jl
in
xor
cmpb
mov
jae
imul
jg
add
inc
cmp
ljmp
scas
cmpsb
push
push
mov
fimull
mov
mov
leave
cmp
test
cmp
sbb
daa
sar
mov
pushf
popf
pop
mov
push
xchg
mov
imul
movsb
mov
pop
adc
inc
ja
xor
dec
daa
jno
pop
cli
push
in
stos
and
push
ds
push
mov
lods
hlt
xor
dec
cmp
scas
jmp
lahf
mov
imul
dec
lock
cmp
fstps
add
popa
xor
testb
mov
and
je
add
adc
mov
sbb
xchg
iret
cmc
cmp
sbb
or
and
sbb
pop
cwtl
pop
pop
pushf
add
sbb
pop
imul
mov
dec
push
inc
js
or
push
stc
ret
add
popf
pop
in
pop
test
jmp
rcll
mov
adc
mov
cwtl
jnp
pushf
popf
out
mov
addl
ds
fimull
or
outsb
mov
mov
mov
neg
mov
xor
aad
and
push
dec
xchg
das
jb
push
jge
or
push
insb
in
in
jmp
sahf
fldenv
adc
xchg
add
mov
roll
ds
and
gs
mov
loopne
sahf
psrad
jmp
fsubl
and
scas
daa
lods
insb
cmpsb
jo
incl
fmulp
iret
pop
pop
std
mov
or
fsubrl
mov
arpl
and
js
dec
xor
mov
inc
cmpsl
xor
test
adc
ret
adc
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
inc
in
jle
unpckhps
mov
or
jmp
test
fxch
div
and
push
in
jb
scas
push
sbb
mov
imul
rorl
outsl
inc
insb
pusha
jne
sbbb
jle
jns
xchg
repz
aas
loop
cmp
out
int
into
or
imul
testl
dec
and
sub
and
sbb
inc
mov
in
dec
xchg
jge
pop
inc
inc
sub
arpl
push
xlat
xchg
mov
pop
insb
push
scas
cli
pop
cld
mov
icebp
scas
sahf
outsb
jae
movb
ss
lret
ret
inc
imul
sbb
pop
enter
pop
xor
and
inc
es
test
jg
call
addr16
sub
lods
adc
jmp
push
repnz
outsl
int3
fwait
xor
std
and
sub
aaa
lock
mov
and
js
mov
repz
xacquire
mov
xor
cs
or
sub
ds
and
sarb
and
add
push
mov
cmp
shlb
mov
pop
mov
lret
nop
lret
fisubrs
add
stos
shr
sub
ds
xor
cltd
fidivl
xchg
pop
pushl
cmp
shl
aam
mov
or
fcomps
aaa
scas
arpl
sbb
movsl
xchg
mov
push
or
xchg
mov
in
inc
or
inc
pushf
and
cmc
ds
push
mov
or
push
lods
popf
call
arpl
or
loop
jp
inc
rol
dec
scas
ds
es
inc
aaa
ret
add
ljmp
adc
dec
and
stos
inc
fwait
xchg
inc
inc
fadd
shl
jns
dec
loope
mov
xlat
mov
mov
ja
ficoml
loop
and
cwtl
mov
dec
push
xchg
lahf
scas
int3
or
popf
sbb
aad
jg
and
push
mov
ljmp
sbb
out
int3
les
clc
jp
sub
popa
sub
xchg
or
push
sub
rcrb
push
stos
mov
cmp
mov
dec
add
xchg
sub
insl
adc
xchg
out
mov
mov
inc
in
mov
mov
xor
shll
mov
mov
popa
nop
or
add
fisubrs
xchg
jle
mov
data16
iret
and
mov
xlat
sbb
loopne
dec
sub
lahf
ds
test
arpl
push
pop
pusha
mov
pmulhw
jle
shlb
shrb
cwtl
push
mov
fadds
mov
push
jle
loope
cmp
inc
sti
arpl
pop
adc
ss
cmp
stos
rorb
bound
test
jae
lcall
aad
orb
or
add
test
inc
fldt
or
insb
data16
jne
dec
cmp
lret
das
mov
out
fs
inc
roll
xchg
out
and
filds
out
nop
cmp
cltd
cmpsl
leave
test
inc
pop
fcmovb
outsl
pop
jnp
aas
out
cmpsl
aaa
mov
push
xchg
shlb
xor
loopne
jne
aam
add
testb
dec
or
jnp
ja
sbb
in
popf
into
xlat
cmp
add
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
mov
mov
sub
js
gs
jecxz
in
test
sbbl
and
jg
and
dec
push
push
add
not
add
jae
pop
add
push
xchg
cli
das
inc
and
xchg
mov
mov
shrb
sar
push
sarb
sub
xchg
add
aad
sub
sbbb
lods
and
lds
push
sbbb
sub
or
test
das
cmp
pop
loop
jb
xor
enter
lcall
test
mov
out
mov
jmp
rol
test
imul
pop
or
fs
fisttpll
jb
ret
push
sbb
cltd
lods
fcmovb
daa
das
leave
lea
pop
mov
loope
jg
mov
cwtl
dec
cmp
xchg
add
jo
xor
insb
sar
dec
push
test
xlat
ja
jmp
mov
je
jns
pop
insb
dec
xor
or
push
ret
fxch
mov
cmp
inc
in
push
inc
test
inc
add
jne
test
leave
mov
mov
xchg
mulb
adc
dec
or
xchg
sub
loope
dec
cmpsl
xor
fstps
sahf
lret
cmpsb
ret
aaa
aas
call
mov
push
push
jp
jne
sbb
pusha
pop
xor
lret
inc
jne
es
stos
pusha
jo
add
jne
lea
inc
add
add
jecxz
addb
pushf
lahf
gs
add
adc
hlt
mov
insl
scas
adc
inc
ljmp
sbb
xchg
and
pop
inc
cmc
popa
outsl
jmp
and
test
call
out
out
pop
sbb
jb
hlt
or
dec
push
add
mov
movsl
mov
jae
jnp
push
ss
rcr
inc
std
mov
mov
mov
mov
lret
mov
mov
add
inc
outsb
ror
sub
negb
fidivl
movsl
out
jne
xchg
pop
sbb
xchg
ss
jns
push
movb
aas
pop
arpl
cld
adc
add
xchg
xor
and
sti
je
xor
jbe
aaa
or
adc
or
adc
pop
popa
rorl
xchg
cmp
xlat
inc
or
xlat
fcmovnu
inc
and
outsl
sti
adc
push
shll
in
sti
clc
xchg
mov
add
gs
push
shrb
into
popf
adc
ret
lods
in
add
mov
sub
inc
aas
push
and
xchg
push
push
push
fimuls
test
jns
and
fcompl
lds
mov
and
pop
dec
les
in
into
mov
xor
insb
dec
aaa
sbb
push
or
fmuls
jge
cmpsb
jmp
mov
mov
jno
mov
push
arpl
push
jnp
jmp
ret
xchg
xchg
imul
loope
xchg
and
ds
fsubrs
jp
gs
jmp
sub
mov
stc
cmc
add
jns
pop
cltd
inc
xorl
ja
scas
ret
mov
rorb
pop
jb
loop,pt
loop
cmp
inc
cs
add
sub
insb
xchg
jae
inc
sbb
loop
cs
sbb
loopne
xchg
ret
mov
pusha
mov
rcr
push
dec
std
xor
add
jl
mov
mov
push
test
lret
xor
shrb
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
insb
dec
loop
mov
adc
adc
loope
and
loop
jbe
xor
insb
dec
and
inc
es
fcmovne
cmp
cmp
lds
add
dec
xor
std
cmpsl
inc
in
lret
fadd
out
sti
cs
xchg
loopne
sbb
add
in
inc
int
dec
stos
leave
dec
rolb
inc
xor
ret
mov
pop
sbb
ret
xchg
dec
mov
mov
and
lock
iret
cmp
cwtl
mov
nop
out
xchg
decl
lcall
xor
mov
pop
stos
fs
pusha
or
xor
push
push
xchg
mov
loop
in
dec
xchg
fs
cmp
mov
std
xchg
shlb
inc
js
fcomps
mov
imul
shll
jge
sub
nop
cltd
push
cmp
into
adc
dec
add
and
sbb
xchg
movsl
pop
decb
arpl
lea
xor
mov
inc
inc
jge
andb
push
insb
push
pusha
mov
lret
pop
stos
rcr
xchg
int
mov
sahf
xchg
stos
add
rorl
cmp
sub
pop
loopne
dec
arpl
arpl
imul
pop
mov
stos
xchg
iret
test
mov
leave
movl
pop
pop
ret
sbb
daa
out
adc
cmpsb
fisubrs
cltd
mov
lds
scas
mov
mov
cmp
cmc
push
nop
sbb
adcb
ja
mov
adc
mov
push
out
shrl
and
xor
push
cmp
rcrl
mov
xor
mov
imul
inc
pop
mov
jl
outsl
jge
scas
pop
adc
aaa
filds
xor
mov
mov
in
loop
mov
inc
leave
repz
das
xchg
clc
stos
jns
jbe
outsb
jl
in
scas
xchg
jle
dec
or
rorl
pop
lahf
mov
scas
stos
xor
std
jle
dec
andl
iret
fiadds
ss
sti
iret
jg
out
gs
mov
fmuls
or
lds
push
dec
out
ljmp
scas
mov
fsubs
dec
lret
je
pop
pop
das
pop
repz
addl
std
cmp
insb
jmp
mov
scas
outsb
jmp
pushf
aas
sti
and
fstps
mov
or
jle
or
int
sti
cs
jbe
pop
sub
sub
idivb
aaa
icebp
cld
mov
adc
mov
mov
xchg
fidivrs
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
test
xchg
movlps
addr16
cmc
pop
add
ror
and
addr16
je
adc
orl
stc
fildll
or
out
jo
inc
push
xor
xor
mov
lret
inc
xchg
mov
push
das
pop
test
xchg
push
push
push
test
sub
mov
data16
adc
lcall
xchg
cmp
das
mov
outsl
xor
stos
xchg
int
adc
jg
inc
shl
add
cmp
add
adc
and
inc
pop
xchg
loopne
add
nop
fimull
test
dec
fistl
fistl
fcoml
cmpl
insl
lock
flds
ds
or
add
loopne
cmp
jb
jmp
adc
or
or
xlat
mov
cmp
mov
movsl
mov
in
andb
testl
hlt
pop
jmp
mov
add
and
mov
push
inc
dec
outsl
inc
mov
and
lods
cmpl
sbb
push
lret
das
imul
popa
aaa
in
mov
add
add
lahf
andb
xor
pusha
ja
arpl
add
sub
lea
mov
push
std
sub
mov
jle
dec
iret
lret
cmp
mov
mov
ret
xlat
cltd
stos
inc
push
pop
mov
movsb
in
lea
aam
hlt
arpl
sahf
xchg
lea
fwait
add
pop
push
outsl
movsb
mov
cld
icebp
out
or
and
imul
movsl
sbb
jae
or
cmp
cmc
shll
out
mov
movsl
mov
fidivs
push
xchg
scas
out
push
xchg
int3
mov
jo
lret
out
addr16
test
dec
mov
or
rolb
insb
daa
mov
xchg
jl
xor
jns
adc
jb
roll
inc
fisubs
mov
ds
inc
inc
sub
lea
into
pop
add
xor
fdivs
cmp
leave
push
and
inc
addr16
xor
popf
and
call
lods
bswap
pop
adc
incb
les
repnz
push
dec
mov
xchg
mov
xchg
push
stos
call
pop
cli
push
pop
xchg
jl
xchg
clc
mov
repz
int
ret
popf
push
test
ret
lock
add
repnz
call
sub
loope
sarb
dec
sub
and
inc
jns
mov
out
cmp
outsb
sbb
fidivrl
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
test
js
stc
adc
adc
mov
loope
sbb
mov
and
fldt
push
sbb
repz
push
imul
jb
dec
arpl
call
inc
adc
jns
lds
cmp
cmp
andb
sbb
and
lds
daa
xor
test
in
mov
sahf
pop
call
out
sbb
cmp
out
idiv
test
aas
sbb
dec
pop
lret
mov
into
ljmp
aam
lret
shlb
adc
or
or
fwait
jo
xor
popf
aad
xorl
call
lret
and
push
icebp
sbb
pop
sub
xor
std
jne
jo
outsb
outsb
pushf
xchg
orl
push
jno
or
test
pop
mov
aam
fnstcw
enter
push
xchg
mov
dec
inc
aad
mov
lea
add
mov
push
pop
fildll
jb
dec
or
ficoml
pop
cwtl
fbstp
inc
in
jb
dec
je
and
mov
pop
mov
mov
lret
mov
sti
push
cmp
sub
test
scas
loopne
sbbb
cmp
inc
test
call
add
stos
loopne
add
xlat
stos
sbb
sub
scas
mov
clc
cmp
xchg
shr
mov
aam
imul
test
jae
xchg
pop
dec
or
sbb
cmp
js
imul
jg
adc
jnp
xor
pop
push
aam
mov
xorb
jno
int
movsb
mov
or
push
lods
push
jns
sarb
fcoml
mov
mov
push
cmp
xchg
loopne
pop
lret
icebp
or
in
lahf
mov
cmpsl
jp
jp
jbe
mov
mov
jo
cmp
fwait
dec
dec
add
add
outsl
testl
or
ss
stos
jae
jle
outsb
and
test
xor
gs
lret
ror
stos
push
leave
aaa
fstl
in
and
outsl
mov
sub
mov
and
xor
inc
xorl
shrl
clc
cltd
mov
leave
nop
sub
cmp
push
pop
lods
test
mov
fnclex
pop
push
out
insb
dec
xlat
mov
cmp
scas
lret
loopne
jbe
repz
push
cld
lahf
arpl
aaa
rorl
cmp
jno
dec
inc
lcall
decb
aas
stc
or
sbb
push
push
mov
jbe
sbb
daa
mov
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
int3
jb
push
out
adc
adc
lahf
loopne
loope
push
ret
or
mov
faddl
push
fists
add
jno
inc
jp
out
loope
pop
xor
add
pop
out
add
xor
std
xor
xor
shll
into
mov
xor
pop
adc
jle,pn
push
aaa
sbb
adc
mov
popf
add
pusha
imulb
mov
fnsave
loope
xchg
xor
or
cmc
mov
data16
imul
pusha
hlt
sub
add
sub
int
cmpsb
and
adc
test
xchg
scas
pop
jmp
pop
loope
mov
jle
in
sbb
xchg
adc
andb
insl
js
pushf
fisubrs
call
out
sbb
ljmp
mov
dec
sub
adc
push
sbb
fwait
xchg
test
mov
scas
push
stos
icebp
scas
xchg
cmp
sbb
fwait
lret
jne
and
xchg
in
push
pop
mov
lea
in
movsb
rorb
mov
sbb
lcall
fldenv
cmp
fsts
xchg
jp
dec
test
mov
out
sub
xor
sahf
jmp
mov
push
inc
ss
les
jns
sbb
mov
and
jecxz
leave
mov
ret
outsb
cmc
mov
and
sbb
jbe
jno
stc
xchg
mov
lret
stos
and
jl
mov
insl
nop
out
int3
add
popf
mov
pop
repz
scas
or
xchg
das
push
stos
mov
loopne
std
sub
sub
addr16
ds
shlb
cmpsb
sub
mov
adc
outsb
mov
mov
imul
test
jle
jno
jecxz
int3
pusha
lods
xchg
sub
sbb
sub
fildll
iret
stos
insb
dec
aaa
popa
pop
push
cli
cmc
pop
hlt
push
inc
cmp
insl
mov
leave
outsl
push
mov
sbb
inc
cmpsb
cli
add
ja
aaa
iret
shll
call
shrb
or
fisubl
leave
fmuls
xchg
fistps
cmpsb
xchg
push
push
push
arpl
cmc
add
aas
inc
jle
pop
mov
in
xor
dec
sbb
xchg
enter
cli
push
push
push
xor
scas
add
inc
ljmp
es
stos
mov
push
nop
mov
dec
sub
push
push
push
ljmp
xor
outsb
cmp
jecxz
loope
inc
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
sbb
in
adc
adc
popa
sbb
test
mov
std
cltd
lret
rolb
xchg
mov
dec
lods
insb
mov
pop
sahf
cwtl
pop
in
mov
sbb
int
loopne
fisttpl
repnz
inc
and
mov
add
or
mov
mov
int
pop
outsl
sub
mov
sbb
xchg
sti
aas
aam
scas
ja
pop
inc
ds
mov
mov
decl
pop
pop
and
hlt
addr16
call
push
ja
aas
jbe
or
and
fcmovne
cmc
jae
nop
inc
adc
cmp
movsb
ficoms
icebp
fwait
stos
dec
sub
xchg
fdiv
and
call
lock
sbb
mov
das
push
push
jbe
fsubp
xchg
aaa
xchg
imul
inc
cwtl
pop
mull
leave
dec
cwtl
mov
cmovle
adc
subl
or
push
inc
add
xchg
daa
stos
sti
mov
add
dec
addr16
bound
add
cmpl
xor
pop
in
xor
sbb
addr16
cmc
mov
xchg
and
inc
mov
addr16
out
fcoms
pop
pop
in
and
lods
cmp
jecxz
push
mov
addl
shrb
mov
and
push
cmpb
jmp
push
pop
xor
jge
pusha
or
psubusb
shl
mov
fs
movsb
xchg
fldl
sbb
xchg
dec
in
or
xchg
jg
decb
dec
jne
jecxz
shll
pop
in
and
stos
ja
dec
push
out
sub
stc
mov
pop
push
sar
ret
andl
jmp
data16
sub
pop
inc
sbb
jns
idivb
inc
mov
sub
int3
js
adc
lea
add
add
hlt
or
sub
scas
mov
push
pop
mov
xchg
lock
cmp
add
out
iret
mov
insl
or
mov
sbb
inc
arpl
test
mov
mov
ss
jmp
mov
sbb
mull
mov
scas
adc
ds
or
fisttpll
dec
jbe
int
or
ljmp
sub
aam
aad
out
testb
fildl
jmp
insl
insl
or
push
jp
ds
add
adc
in
xchg
jns
push
imul
ja
jge
mov
add
sbb
fimull
loop
pop
test
mov
push
repnz
lret
push
ret
inc
outsb
insl
push
cmp
add
lds
inc
es
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
enter
add
adc
adc
iret
push
pop
sbb
cld
movsl
inc
scas
cmp
push
lahf
sbb
sub
xchg
in
lcall
xchg
sbb
testb
mov
fsubrp
jne
jmp
imul
mov
jle
sbb
out
add
movsl
repz
sti
jae
lea
add
mov
sub
xor
pop
xlat
loop
jbe
aas
out
inc
rclb
mov
xchg
push
test
insb
xor
jp
scas
shll
mov
jo
add
in
push
mov
jmp
xchg
jns
test
lahf
sahf
cmp
hlt
xchg
loop
addr16
les
in
jns
xchg
or
sbb
dec
jne
adc
mov
cwtl
and
cmpb
jge
push
xchg
jmp
mov
not
inc
ret
pop
hlt
bound
lret
addr16
outsl
push
inc
imul
lret
and
mov
jg
mov
xchg
xchg
jmp
sub
mov
push
xchg
cwtl
sbb
insl
push
add
jno
mov
shl
push
add
jmp
rorl
addr16
and
lods
shlb
rclb
mov
sahf
stos
mov
mov
mov
mov
pop
jnp
pop
insb
daa
and
sar
ja
ljmp
je
pop
outsl
or
fstpl
mov
cli
sti
push
add
fdivs
cmp
int3
data16
pushf
in
inc
sub
int3
pushf
push
jmp
push
mov
adc
leave
adc
sub
or
adcb
mov
jg
jg
mov
push
cs
int
push
sbb
mov
movsl
jae
and
push
cmp
mov
pop
inc
or
stc
ss
aaa
lret
pop
faddl
jmp
push
adc
adc
inc
pusha
cmpsb
mov
jecxz
mov
js
xchg
or
addps
dec
push
jg
add
jb
pop
push
jnp
mov
xor
ret
dec
in
inc
push
into
mov
out
aam
mov
xchg
loope
addl
loopne
arpl
nop
rolb
cmc
cmpsl
mov
jmp
add
ljmp
sub
scas
mov
pop
stc
js
aaa
adc
jmp
mov
lret
push
pop
pop
mov
jnp
fcompl
mov
lods
sub
xor
mov
repz
cmpsb
and
inc
or
cwtl
sub
dec
and
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
adcb
adc
jmp
xchg
or
cli
dec
imul
and
leave
xor
sub
and
mov
scas
orl
xor
or
jb
fildll
scas
repz
mov
les
mov
imul
and
shrb
mov
cmp
std
cld
insl
lcall
dec
cmpsb
ja
sub
dec
nop
lock
dec
mov
mov
call
mov
lea
fcoms
push
inc
data16
jns
inc
cli
sbb
nop
and
push
repz
lahf
mov
sub
scas
pop
xor
ljmp
sub
and
xchg
mov
pop
fsub
and
in
pop
orb
les
mov
ficompl
sub
mov
dec
cwtl
add
jg
lock
xchg
or
add
and
push
dec
cmpsl
mov
cmp
push
push
cmp
fsub
orb
xchg
addb
mov
dec
mov
or
pop
sbb
aaa
stc
adc
jmp
push
adc
add
aas
out
mov
lret
push
in
jp
push
bswap
cmpsl
cmp
xchg
stos
mov
mov
jbe
aad
add
pop
mov
push
add
xor
lock
popf
or
icebp
ss
sbb
pop
and
sub
lock
mov
inc
mov
push
and
adc
data16
scas
mov
jbe
push
xor
aaa
int
inc
rcrl
jnp
or
sub
in
mov
adc
ret
repnz
loopne
aam
mov
ja
cmp
lds
xor
lcall
js
mov
mov
pop
icebp
adc
add
dec
out
sub
adc
add
aam
test
cmp
push
inc
xlat
movsl
xchg
xor
push
enter
lock
mov
in
sbb
fmulp
mov
lcall
orl
popf
cmp
adc
adc
mov
jge
pop
out
xor
call
cmp
cmpsb
mov
call
jb
inc
dec
add
enter
push
fmuls
leave
mov
mov
fildll
jbe
mov
xchg
imul
adc
dec
out
sub
hlt
dec
mov
daa
sarl
push
jmp
aad
inc
mov
and
ss
ret
mov
push
int
sub
jmp
add
loopne
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
mov
xchg
movlps
push
repz
jecxz
out
mov
add
pop
xchg
and
movsl
sub
adcl
hlt
mov
in
jp
fcomi
push
in
or
xlat
pop
inc
add
js
cmp
and
andl
fisubl
dec
pusha
sub
and
cmp
fstl
clc
inc
test
push
mov
popa
loop
repnz
std
sti
mov
mov
iret
pushf
mov
mov
test
fistpll
out
and
mov
pusha
popf
push
jge
cmp
daa
inc
bound
lret
push
pop
cmp
mov
mov
stc
mov
mov
icebp
fildl
test
addr16
lea
shll
jae
lahf
inc
push
mov
rclb
sub
push
sub
shl
lcall
adc
les
and
repnz
lcall
and
rorl
stos
in
cmpb
sbb
ret
xchg
and
and
xlat
sub
or
sbb
rorb
cs
stos
aaa
dec
sbb
inc
cli
int3
jp
dec
out
push
jp
mov
mov
and
popf
les
stos
lods
mov
jle
pop
mov
mov
fnsave
cmp
fdivrl
pop
lret
fiadds
dec
test
loopne
sbb
enter
sbb
lret
into
test
jg
mov
leave
push
jbe
fists
or
imul
xchg
cmp
cmp
dec
and
cmp
mov
xor
fistpl
inc
inc
lods
cmp
insb
fmul
jmp
jmp
pusha
leave
rorl
aas
mov
hlt
sub
and
mov
inc
pop
mov
divl
jo
xor
imul
gs
sub
or
or
int3
mov
jae
inc
scas
aam
adc
mov
xor
sub
cli
aad
daa
addl
adc
ja
xor
into
jns
in
push
movsl
inc
jl
lods
mov
dec
mov
xchg
jp
rcrl
testl
sub
out
mov
test
cmpsl
pushf
mov
repnz
rorl
pusha
mov
add
lret
sar
or
in
xchg
pop
ss
ljmp
mov
or
adc
inc
notl
hlt
ret
dec
add
cltd
jecxz
add
repnz
test
mov
lret
loope
out
push
movsb
cmc
push
aas
pop
aam
sti
mov
xor
push
push
cli
and
xor
leave
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
das
mov
push
aam
adc
into
hlt
sbb
jge
lcall
fmuls
dec
fisubl
pop
in
dec
sub
scas
mov
jge
outsl
test
lret
ds
shlb
pop
imul
and
loopne
les
mov
pop
hlt
mov
ss
lret
jle
enter
mov
lahf
add
pop
hlt
subl
xor
jnp
xor
inc
xchg
scas
dec
or
lods
mov
notl
lcall
pop
push
adc
and
sub
jae
pop
and
jl
xlat
test
cmp
push
fists
fildll
jge
fwait
add
inc
inc
jno
jb
xlat
enter
shll
cwtl
push
ret
push
imul
jmp
pop
cmp
xlat
mov
lahf
mov
sub
and
mov
lea
xor
push
push
int
jne
or
out
out
lahf
enter
es
out
mov
fisubrl
xchg
xor
adc
int3
out
mov
into
inc
pusha
into
aam
aad
jecxz
push
sbb
xor
xorb
ret
xor
xor
jmp
mov
xchg
std
sbb
mov
js
jge
repnz
or
faddl
aaa
ficomps
xlat
lock
cmp
and
mov
lahf
adc
or
sbb
fcoml
cmpsb
popa
jne
fdivrp
or
cmpsb
fsubrl
lret
jno
xor
sub
sbb
in
push
ja
dec
mov
loopne
mov
test
adc
je
xor
cmp
arpl
cmpsl
in
shll
mov
xchg
adc
sbb
movl
int
sbb
sbb
out
in
scas
sbb
add
jmp
dec
je
sti
lock
fwait
and
call
popf
mov
and
mov
loopne
rcl
push
push
lret
adc
mov
test
insb
or
cmp
lock
push
shll
scas
fs
mov
sub
inc
cmp
push
int
das
ja
sbb
xchg
leave
jbe
jge
push
add
adc
xchg
lods
mov
mov
loopne
cs
pop
push
notl
aam
aas
int3
fmuls
out
sub
mov
int
leave
cmp
sub
mov
dec
call
repnz
or
pushf
mov
xchg
ficoms
das
mov
mov
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
out
jne
mov
imul
in
call
sub
sub
xor
loopne
cmp
mov
and
pop
sbb
xchg
out
into
dec
stos
ja
cld
arpl
jnp
pusha
aas
dec
paddsw
xorl
mov
in
pop
aad
ja
nop
adc
push
jnp
add
cmp
push
lods
cmp
loopne
andl
mov
push
in
hlt
pop
aaa
insb
outsb
out
jns
addr16
sbbb
jmp
mov
inc
sar
push
jnp
cmpsb
inc
push
popf
push
mov
orb
adc
ja
sahf
inc
cmp
mov
sub
sbb
sub
dec
mov
xchg
mov
xchg
mov
push
aad
outsb
fbld
and
aad
daa
stos
xchg
mov
call
mov
fnsave
lock
daa
jns
clc
pop
pusha
fsubp
out
mov
cmp
jmp
xchg
das
or
mov
mov
mov
or
and
jns
mov
adc
cmpsb
fdiv
out
sub
cwtl
pop
mov
cmp
add
jmp
movl
jns
jl
lods
pop
pop
leave
sbb
stos
inc
out
insb
cmp
rcrb
fistl
add
push
pusha
mov
xor
or
in
mov
push
dec
sbb
in
loop
adc
xor
stos
mov
test
mov
pop
lretw
insl
lock
ljmp
hlt
dec
jl
inc
mov
in
aas
push
sbbb
push
sbb
in
imul
push
stos
mov
cmpsl
mov
daa
cmp
sahf
mov
cmp
aam
daa
sti
popa
inc
fists
clc
adc
fisubrl
or
push
and
push
add
inc
add
mov
mov
scas
je
fbstp
and
mov
pop
enter
sub
sub
pushf
insb
inc
or
bound
xchg
jl
and
std
inc
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
stc
fs
into
adc
adc
shl
fbld
adc
adc
push
and
xacquire
sub
insb
push
xor
in
movsb
test
pop
and
sbb
cltd
sub
add
in
and
push
pop
add
data16
add
fisttps
lahf
cmp
repz
mov
data16
addr16
daa
pusha
insl
mov
fcoms
idivl
lods
in
sub
aas
inc
scas
pop
aad
in
dec
inc
pop
outsb
or
jns
mov
lods
cmp
sbb
sarl
push
inc
sub
roll
ja
aam
xchg
adc
daa
adc
fcoml
lods
push
adc
push
mov
jbe
add
inc
jl
mov
fldcw
pop
mov
xchg
cmpl
pop
pop
jns
and
cwtl
cmpsl
jmp
pop
adc
and
out
or
pop
fldcw
sub
js
inc
movsl
mov
fnsave
imul
int
in
insl
rcll
push
mov
shl
inc
dec
scas
adc
xchg
in
and
adc
dec
add
mov
aam
lock
sarb
sub
dec
sbb
adc
mov
dec
pop
adc
sar
jecxz
fidivl
orl
dec
mov
dec
out
arpl
push
push
das
adc
sbb
outsb
add
into
lock
into
loopne
or
aam
shrb
aas
pusha
aas
inc
aas
loope
hlt
in
fs
iret
pop
lret
ret
and
ja
cmp
movsb
sbb
adc
sub
daa
ret
dec
dec
call
lock
cmpl
xchg
fcomps
ja
cmpsl
gs
add
push
notl
cmp
fcoml
sub
lret
inc
push
in
inc
mov
loopne
jae
cmp
cmp
mov
cli
mov
cmp
clc
lret
xor
sub
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
xor
pop
lods
lret
enter
pop
stos
push
xor
in
insb
leave
jno
in
cmovbe
out
xchg
push
mov
lds
lcall
pop
aad
leave
xor
nop
pop
add
gs
mov
or
xor
bound
imul
mov
jle
jae
jns
in
jo
pop
cmp
mov
xchg
popa
pop
inc
mov
cli
std
clc
mov
aad
ljmp
js
repz
mov
sbb
add
sbb
fidivrs
stos
adc
mov
shrb
insb
popa
das
push
out
repz
inc
push
dec
fisttpl
test
sbb
adc
or
mov
inc
icebp
add
nop
mov
ljmp
inc
sbb
adc
mov
xor
jae
mov
out
pop
popa
push
fdivs
ret
out
fidivrl
mov
fadd
mov
xor
jnp
cmp
getsec
ja
mov
mov
jl
cmpsb
iret
lcall
aaa
sbb
out
ja
jbe
xchg
mov
movsl
out
sbb
mov
mov
adc
decb
sahf
cmp
pop
je
or
jo
mov
mov
jmp
shlb
xchg
xchg
test
or
adc
bound
gs
jp
and
xor
push
xor
ljmp
xlat
dec
or
and
xchg
adcl
dec
popf
jo
or
cs
aam
add
pop
test
jp
mov
popa
jae
in
sahf
cmp
fsubp
xor
mov
mov
adc
xchg
xor
cld
xor
inc
imul
mov
xchg
xchg
lods
fldenv
loope
push
pop
adc
push
or
vsqrtsd
negb
xchg
jbe
mov
sarl
jecxz
fwait
sub
repz
adc
pusha
jo
int3
stos
stos
data16
dec
cmp
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
cmpl
push
adc
adc
cltd
xchg
out
loopne
int3
sbb
jnp
adc
mov
movsb
mov
mov
xchg
lcall
das
sub
xchg
test
ja
lahf
sbb
and
dec
add
mov
mov
jle
in
punpckhdq
fdivrp
mov
mov
aad
xchg
imul
loopne
imul
iret
ja
jb
cld
xchg
jae
mov
mov
xchg
xor
sbb
push
mov
jle
fsts
mov
cmp
cmp
sti
xchg
xchg
loope
push
cltd
rcr
jbe
outsb
or
dec
lods
or
imul
mov
cmp
xor
rcrb
movsl
add
mov
arpl
xor
mov
out
nop
lahf
or
aam
iretw
mov
inc
int
push
xor
and
cmp
pop
roll
pop
lds
jmp
cmpsb
push
sub
add
dec
mov
and
jl
cwtl
arpl
bound
data16
xor
nop
inc
sbb
adc
sbb
push
jge
adc
dec
sti
repnz
cmp
sub
inc
mov
push
fdiv
scas
idiv
ljmp
enter
add
sub
ret
adc
call
shl
push
imulb
das
pop
sbb
test
dec
js
call
jmp
mov
mov
divb
adc
xchg
jge
out
push
mov
push
aam
push
cmp
mov
sub
and
or
aaa
push
add
xor
mov
sbb
insl
incl
movsl
cmp
enter
sub
repnz
pop
ret
push
test
ret
push
sub
pop
mov
dec
pop
int
cmp
lea
sbb
xchg
adcl
pop
xchg
insb
or
adc
in
scas
out
das
dec
mov
lahf
jno
pop
test
in
cmpsb
pop
push
std
add
in
push
js
mov
xor
adc
add
mov
or
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
sti
or
enter
or
in
loopne
out
mov
and
aad
fsubrl
xor
out
jnp
xlat
xor
push
jge
mov
mov
jg
cmp
adc
out
sar
popf
int
sub
or
mov
add
int
icebp
add
jle
aad
jmp
cmp
out
jmp
push
or
mov
mov
into
sahf
inc
mov
es
xchg
out
icebp
jmp
cltd
adc
mov
loop
repz
fs
pop
push
or
leave
jecxz
sbb
cwtl
pop
pop
sub
aaa
je
nop
sbb
js
testl
adc
pop
xchg
bound
sbb
repnz
sub
xor
jae
jl
add
sti
ss
xorl
out
out
rcrb
or
gs
jno
xor
push
mov
xor
or
add
pop
adc
push
lds
add
out
cmp
cmp
bound
sub
mov
cpuid
stos
sti
out
push
cmp
adc
sub
lods
mov
sbb
loop
imul
add
sahf
mov
cs
leave
mov
cwtl
out
dec
daa
jbe
sbb
out
lea
xchg
sbb
iret
and
insl
and
jg
pop
sbb
mov
and
dec
loop
push
xchg
cld
stc
aaa
xchg
cmp
inc
sbb
sahf
std
mov
mov
jg
imul
xor
cltd
pop
std
inc
test
mov
xor
sbb
pop
lret
scas
pop
popa
into
icebp
jnp
cs
sub
shrl
xor
cmp
adc
mov
mov
jae
mov
sbb
jb
test
in
and
iret
sbb
add
mov
mov
shll
inc
mov
pop
mov
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
lods
lcall
movlps
aaa
jp
xor
xor
cli
cmp
mov
push
or
stos
dec
fimull
adc
in
jecxz
inc
es
inc
fcomps
rcrl
mov
xchg
sbb
in
lods
lea
or
and
pop
mov
or
push
test
in
cmpsb
pop
cmp
xchg
rcr
mov
jb
mov
sub
movsb
sbb
pop
mov
fadd
mov
push
xchg
cmp
sub
jns
test
fstps
les
in
enter
fistpll
and
mov
repz
stos
jno
pop
mov
outsl
mov
addr16
cmpsl
vpcmpgtb
adc
pop
mov
sbb
in
pop
dec
xor
je
sub
jl
sbb
dec
inc
sub
das
lahf
dec
mov
fs
lret
sub
jb
mov
sub
or
cmp
sbb
movsb
lock
xchg
stc
mov
rcr
dec
pop
sbb
xchg
jecxz
xchg
addr16
push
daa
xor
adc
jg
inc
push
sub
or
mov
sarb
ret
jno
or
insl
shll
shr
sub
inc
adcl
mov
sarl
push
sub
pop
push
lods
sbb
roll
jnp
xchg
adc
loope
test
push
adc
pop
xchg
ror
xchg
and
adc
or
movsl
xor
ret
add
aaa
loopne
lret
push
cmpsb
pop
xor
hlt
mov
je
data16
xor
add
in
popf
out
fcmovnb
add
inc
mov
adc
xor
or
cmp
inc
push
or
cwtl
jle
adc
repnz
loop
add
cwtl
loope
xlat
pop
fdivl
loopne
mov
inc
fimuls
mov
jbe
imul
out
rorb
mov
fnsave
cwtl
popa
fprem
pop
jg
dec
push
ja
into
xchg
fadd
or
mov
and
sbb
jbe
mov
mov
test
incl
testb
adc
test
pop
jmp
faddl
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
xchg
js
mov
adc
icebp
cs
jb
test
sub
insl
js
mov
mull
push
testl
mov
es
mov
ja
add
movsl
xlat
popa
divl
cmc
sbb
inc
push
and
lret
and
mov
js
xor
inc
xlat
inc
and
test
dec
incb
mov
dec
add
pop
adc
pop
mov
pop
xor
adc
mov
lods
pusha
lcall
cli
sti
add
aam
loopne
cmp
repnz
mov
test
imul
test
popf
inc
call
push
cmp
js
cmp
fidivl
leave
pushf
xchg
out
adc
dec
mov
outsl
lods
and
and
int3
xchg
mov
push
nop
int3
mov
pop
sub
adc
push
mov
sahf
add
cmp
inc
data16
shlb
data16
push
jns
jmp
sbb
lret
es
push
out
aam
daa
pop
dec
inc
fmull
mov
outsl
inc
mov
jg
or
out
push
test
cmpsl
jno
out
dec
popf
push
jg
icebp
push
dec
loop
push
fidivs
int
push
shr
lea
insl
inc
lods
xchg
mov
scas
sbb
jge
mov
dec
lods
inc
and
imul
inc
sub
mov
test
adc
push
inc
cmpsb
adc
jg
jg
jg
fs
cmpsl
fdivrp
add
insb
das
test
int
hlt
je
xorb
or
inc
xchg
leave
cli
push
pushf
sbb
rcll
xchg
pop
sbb
jnp
mov
sub
mov
out
mov
add
hlt
imul
bnd
int
cmpsb
sbb
add
cmpsl
in
mov
mov
or
cmp
ffreep
and
gs
inc
je
sub
add
sbb
push
imul
dec
loopne
jae
cltd
jo
out
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
stos
sahf
lods
out
adc
adc
adc
adc
jno
cmp
stc
ds
mov
sarb
mov
inc
mov
sbb
sbb
lcall
inc
shr
in
jg
mov
arpl
mov
fistpl
ss
jl
gs
lret
test
dec
test
pop
xchg
or
sbb
sbb
in
movsb
cmpb
xchg
popa
lods
cmc
jo
ss
pushf
add
add
mov
cmp
mov
and
lret
in
xchg
push
mov
test
xchg
cld
in
jle
mov
pop
aaa
call
sub
sti
clc
jb
fisubrl
dec
fdivrl
jne
daa
arpl
sub
mov
push
mov
xor
push
pop
outsb
xchg
mov
out
ret
add
lahf
add
dec
rclb
or
cmp
cmc
pop
add
push
lods
jmp
pop
leave
cmc
lea
dec
cmp
mov
in
jbe
cs
fisttps
add
clc
insb
dec
inc
pop
jl
push
pop
jae
or
pop
nop
adc
fdivl
pop
aad
or
movsb
inc
add
lcall
loopne
dec
and
orb
pop
or
adc
or
rorl
std
in
xor
mov
pop
adc
mov
adc
orb
cmpl
xor
mov
je
data16
aam
push
ret
jle
push
es
and
clc
cs
pop
fs
out
mov
adc
xchg
pop
es
pusha
push
jo
imul
repz
rcrb
dec
push
cmc
arpl
mov
xor
loope
sbb
popf
mov
andb
lds
jmp
sbb
out
jge
das
lret
push
mov
mov
push
mov
inc
xchg
aas
adc
xchg
daa
out
mov
les
insb
in
mov
pop
dec
and
rolb
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
push
outsb
inc
stos
lcall
adc
jb
bound
lret
mov
test
inc
jae
ja
into
jecxz
lods
pop
or
dec
test
xorl
sub
aaa
cmp
cmc
inc
roll
pop
mov
shlb
or
lcall
idivb
test
hlt
lods
popl
pop
cmpsb
ds
or
or
jle
lock
jmp
clc
xchg
movsb
xor
sahf
scas
inc
sti
sti
pop
sub
imul
add
push
clc
dec
in
xor
repz
std
scas
mov
cmp
in
in
mov
or
adc
inc
sahf
jns
jle
or
push
out
inc
adc
pop
push
jg
mov
sbb
cwtl
lret
movsb
or
jbe
scas
cli
lods
pop
sub
clc
rcll
inc
es
xchg
cld
fwait
dec
dec
xchg
ret
or
xchg
sbb
jb
mov
roll
mov
inc
and
and
je
aas
inc
xchg
pop
pop
dec
call
cmp
ds
test
mov
subl
movsb
pop
cmp
and
data16
outsb
sti
inc
sub
push
cmovge
movsb
stc
sbb
notb
push
fdivrs
popf
neg
int
push
aam
cmp
jne
inc
mov
sbb
or
sub
xor
mov
in
sub
mov
ss
xchg
shrb
ljmp
repnz
sub
add
cmp
test
add
or
pop
mov
std
rcr
push
in
pop
lahf
test
add
rcll
mov
idivl
jge
lods
in
mov
mov
inc
fwait
addr16
adc
adc
outsl
cld
fistps
or
cltd
push
mov
aas
fs
je
sbb
in
cwtl
jns
mov
adc
mov
lds
mov
sbb
push
xchg
pusha
divl
icebp
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
je
enter
adc
adc
xor
cld
cmpl
sub
sbb
mov
movsl
mov
adc
xchg
lahf
push
fdivrs
or
cmpsl
dec
push
jmp
pop
mov
or
popw
jbe
int
test
movsb
out
scas
inc
sbb
sahf
and
jne
lods
mov
sarl
and
sbb
push
stos
lock
test
ss
out
cs
lock
cmp
stos
enter
pop
mov
out
aas
pushf
mov
dec
xor
sbb
dec
ljmp
mov
pop
xchg
and
dec
cmp
mov
and
jo
xchg
mov
ss
jge
xor
dec
mov
mov
mov
add
adc
ja
or
push
adc
pop
add
mov
jecxz
inc
pusha
inc
push
fcoml
stos
fldcw
in
dec
out
xor
repnz
or
hlt
insb
jge
and
test
sbb
into
add
int
pop
lret
cmp
cmp
loop
test
testl
cmpsl
add
push
push
jecxz
in
add
iret
les
mov
lahf
movsb
stc
out
hlt
insb
test
fsub
xor
add
fsubrl
mov
mov
scas
cmpl
mov
dec
xchg
sub
push
xor
inc
xchg
add
enter
dec
ret
dec
inc
cmp
out
xchg
adc
inc
sub
mov
xor
fisttpl
add
imul
call
inc
jnp
jp
mov
xor
loope
arpl
out
and
repnz
ljmp
insl
add
mov
jl
ljmp
fucomip
inc
ljmp
inc
ret
test
lods
cmpsl
in
pop
test
pop
adc
mov
cmp
insl
pop
jnp
lds
sub
mov
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
cmp
mov
enter
loopne
push
ljmp
std
rcll
in
dec
mov
push
lret
mov
and
enter
bound
bound
enter
sbb
test
iret
dec
out
adc
fsts
inc
sub
or
cmc
shl
data16
mov
shrl
jmp
cmp
push
and
clc
jno
jmp
movsl
daa
inc
rcll
es
ds
mov
or
jnp
mov
clc
or
bound
out
scas
outsb
pop
movsb
sub
cmp
mov
js
popf
stc
xchg
int3
cmpsl
mov
subl
outsb
pop
gs
inc
jl
xlat
gs
popa
ret
cmp
pushf
sbb
mov
pop
jp
out
push
lahf
cmp
xchg
out
outsl
lods
into
add
xchg
loop
lret
adcl
jp
adc
cmp
mov
pop
mov
push
mov
and
popf
aad
mov
sub
or
dec
rcrb
lock
das
fcomip
aas
mov
mov
popa
xchg
and
jo
dec
pop
adc
cmp
inc
je
mov
mov
lret
inc
sbb
add
fdivrs
mov
leave
xor
dec
jo
sbb
mov
in
notb
daa
push
pop
push
dec
imul
sub
movsl
add
sbbl
mov
int
sbb
aad
mov
inc
sub
push
fisttpll
lret
jno
fldenv
push
xor
fisttpll
or
popa
popf
mov
push
addr16
sbb
xchg
sti
pop
int3
stos
out
cmp
addr16
xor
inc
mov
adc
out
rcrl
inc
cmp
rorb
mov
lret
mov
loope
inc
out
lods
jmp
mov
jp
movsb
daa
faddl
dec
mov
aam
std
xchg
aas
fldl
pusha
outsb
push
out
inc
int3
inc
lahf
ja
mov
pop
movsb
xchg
aad
mov
test
xchg
pop
in
adc
or
aaa
sbb
repnz
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
stc
jle
mov
adc
adc
jg
stc
xchg
arpl
lret
xor
addb
lods
sbb
mov
adc
xchg
pop
jge
movsl
jge
ret
sbb
cmp
adc
in
cli
push
cmc
xchg
inc
ficomps
sub
pop
gs
adc
data16
mov
mov
push
mov
xchg
inc
ljmp
jno
mov
daa
xor
xchg
iret
sbb
ja,pn
cmp
xor
push
imul
mov
jge
cli
jo
cltd
sub
mov
inc
test
faddl
sbb
cmp
jo
xchg
int3
xchg
push
mov
mov
or
pusha
sbb
sahf
subb
fbld
lcall
pop
mov
test
movsl
int
add
les
push
dec
movsb
mov
into
push
rclb
testl
push
inc
repnz
push
jge
rcrl
adc
push
repz
jl
sub
insb
mov
pop
jne
cmp
mov
repz
mov
scas
cmpl
or
subb
xor
mov
fcomi
aas
sub
fcmovu
xchg
out
mov
dec
jb
sub
xor
pop
addl
dec
insb
fstl
push
sahf
fwait
mov
sarb
cmp
leave
xlat
mov
jo
decb
les
test
jcxz
jns
js
push
sbb
jae
mov
push
add
lcall
and
insl
aam
std
pop
rclb
add
fdivrp
xchg
fstpt
pop
push
lret
inc
popa
cld
and
and
push
cli
push
push
andb
sbb
addr16
in
into
sbb
das
test
lods
outsl
ds
fnstenv
cld
lods
mov
pop
lcall
ret
push
inc
lds
mov
int
and
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
js
pushf
adc
adc
in
add
mov
mov
hlt
push
mov
sub
test
js
or
pop
mov
incb
cmp
mov
insl
ja
mov
repnz
pop
dec
ficoms
pop
orl
clc
or
or
pop
out
xchg
mov
mov
mov
pop
mov
rcl
jg
mov
daa
idivb
ja
iret
and
movsb
adc
cwtl
fcomps
movsl
jecxz
xor
scas
lahf
jmp
jmp
sbb
popf
sbb
ja
add
ja,pt
lahf
xor
cmpsb
rolb
inc
mov
or
sub
inc
xor
std
mov
insb
stc
je
in
mov
outsb
filds
push
push
xchg
push
cld
out
xchg
jmp
dec
or
fwait
call
and
mov
imul
pop
add
movsb
pop
xchg
push
mov
out
or
pop
and
jg
jnp
dec
cmp
stc
ds
xor
adc
inc
xchg
sub
inc
movsl
inc
mov
or
and
ds
cmp
mov
mov
in
adc
ljmp
testl
sub
test
sbb
std
test
inc
rcl
std
stc
or
mov
push
push
push
outsl
in
daa
pop
sahf
rcr
cltd
xchg
fildl
ret
lock
test
mov
mov
in
dec
xchg
movsb
push
lods
inc
cmp
cmpsb
test
sub
loopne
imulb
mov
push
fldenv
jbe,pn
adc
loop
xorb
mov
mov
fwait
lret
js
xchg
jns
loopne
adc
xor
insb
rcrl
jp
mov
jbe
pop
call
push
xor
pop
xchg
sbb
mov
cli
popw
dec
test
adc
ds
stos
int3
repnz
dec
jg
mov
mov
loop
mov
xor
cld
out
xor
mov
orl
or
fnsave
shr
mov
test
cltd
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
movsb
pop
lods
sbb
movlps
aaa
sbb
xor
fldenv
std
lock
insl
sbb
sbb
popl
loop
jl
xor
push
xor
leave
not
xor
mov
insb
cwtl
pop
mov
and
pushf
push
add
arpl
dec
and
and
sub
mov
xor
pop
fdivr
fwait
mov
int3
inc
out
or
and
icebp
js
jecxz
sbb
or
xchg
xchg
ret
sahf
call
inc
push
arpl
push
sub
cmc
cmp
pop
leave
gs
mov
dec
mov
ljmp
push
notb
mov
data16
sub
add
ret
fdivrl
test
js
mov
sub
fwait
inc
add
push
lds
test
mov
or
push
mov
cmc
lock
dec
lret
dec
adc
xchg
js
fdivrl
pushf
push
sbb
lea
gs
xchg
cmc
jmp
adc
push
mov
add
cmp
iret
in
loop
sbb
ja
xor
enter
das
outsb
pop
cltd
xchg
ret
push
jle
dec
jne
jp
adc
orl
inc
dec
popf
leave
pop
push
lds
mov
ja
add
jecxz
fwait
xchg
pop
popa
mov
adc
push
mov
in
inc
sahf
and
lock
cmc
test
insl
xor
push
jnp
fsubl
idiv
icebp
cmp
dec
jae
mov
push
jns,pn
mov
and
cmp
daa
lds
pop
dec
or
adc
test
jmp
cld
les
mov
cmp
adc
inc
arpl
scas
add
adc
pop
insb
push
out
sub
icebp
cmp
arpl
sbb
mov
call
fstps
ret
jp
nop
cltd
ficoms
mov
inc
inc
add
and
add
mov
jne
arpl
jo
or
and
pop
mov
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
jno
js
xchg
adc
adc
jno
fistpll
xchg
push
insb
int3
cmc
int
movsl
test
movsb
in
stc
rol
mov
sub
xchg
push
icebp
call
add
and
lret
dec
cmpsl
sbb
or
adcb
mov
xor
mov
push
cmpsl
push
negb
aaa
mov
aaa
rolb
adc
in
mov
lea
mov
fisubrs
sbb
lods
dec
dec
jb
hlt
lret
push
jg
pop
orb
xor
mov
add
andl
xor
ficoml
sub
jle
cwtl
pop
jo
into
imul
imul
imul
shlb
cmc
out
hlt
xor
jl
adc
mov
divb
cli
dec
js
inc
jmp
mov
outsl
dec
sbbl
ret
cli
jb
xchg
sub
scas
and
or
mov
jnp
cld
mov
es
clc
add
lods
xor
test
shrl
or
xorl
xchg
mov
in
sub
movl
arpl
out
call
in
rclb
pop
dec
xchg
dec
sub
aad
xor
cmp
push
push
mov
sti
jnp
xchg
fbld
aaa
mov
mov
in
scas
cmp
icebp
fcmovb
xor
nop
ret
mov
and
inc
adc
enter
das
rcrl
lock
loopne
addr16
xchg
mov
adc
mov
in
jo
push
inc
inc
pushf
pop
mov
mov
imul
pop
inc
lds
and
xchg
dec
or
cld
mov
fs
imul
lcall
or
mov
rcll
loope
dec
inc
mov
test
jl
rcrb
jno
mov
push
ja
and
ds
pop
add
add
add
mov
or
popa
cmpsb
xchg
jnp
insb
jb
lock
jp
loope
test
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
xor
lods
xchg
adc
out
pop
cli
xor
xchg
into
daa
test
jle
sub
test
jae
iret
mov
daa
sbb
inc
clc
dec
cmp
pop
mull
repz
in
push
dec
hlt
mov
in
out
stos
dec
sub
sub
loop
int
jecxz
xor
dec
push
jb
and
or
in
mov
adc
outsb
mov
in
xchg
mov
xchg
and
test
cld
call
ss
mov
xchg
jge
sub
into
mov
fsubrl
addr16
mov
sub
dec
insl
inc
pushf
rcl
iret
jl
out
mov
shrb
repz
out
pop
add
mov
bound
jle
icebp
jge
pop
scas
pop
adc
cmp
mov
mov
fidivl
jnp
shll
xchg
arpl
imul
vaddpd
clc
pop
sahf
inc
mov
dec
mov
les
loop
pusha
or
inc
mov
shrb
into
pop
adc
adc
movsb
or
imul
cmp
call
aam
cmpl
imul
jae
push
jns
jmp
or
clc
outsl
mov
outsb
mov
adc
iret
hlt
sbb
mov
shrl
jns
xchg
das
std
xchg
stc
lds
mov
mov
stos
and
and
cmp
adc
fldcw
add
loop
outsl
es
in
arpl
loop
sbbb
pop
xchg
call
add
dec
pop
mov
stos
idiv
cs
pop
pop
jecxz
incl
int3
out
pushf
mov
jb
jb
cmp
and
ret
jp
xor
mov
nop
negl
aas
test
into
hlt
popa
jns
out
subb
aad
push
inc
sbb
cli
adcl
mov
xchg
push
adc
sbb
out
cltd
lods
mov
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
pusha
adc
adc
movlps
sub
repz
mov
cmp
or
inc
pop
and
lods
add
inc
shrb
cli
ror
add
es
mov
and
cwtl
xor
jmp
push
dec
enter
call
mov
inc
test
and
pop
push
int
and
mov
test
call
cltd
xorb
stos
dec
xchg
stc
andl
ret
movsb
shlb
imul
fnsave
pop
je
jmp
push
add
sub
jge
test
gs
testl
pop
xchg
shlb
dec
push
cltd
fsubl
outsb
mov
sti
outsb
test
xor
aas
les
sub
es
dec
sbb
mov
cltd
cmpsb
add
movsb
cmpsl
out
xlat
lods
xor
dec
pop
shl
mov
outsl
pop
cmc
jnp
mov
das
clc
push
jne
sub
add
mov
jge
cs
adc
imull
mov
mov
jecxz
xchg
push
mov
and
inc
mov
hlt
jmp
js
mov
js
les
movb
insl
push
clc
cltd
test
lret
loop
mov
inc
pop
testl
out
xchg
addr16
dec
xor
sbb
loope
sbb
mov
and
mov
in
jns
rcrl
jecxz
mov
dec
xor
loopne
cmpsb
inc
push
test
ds
xchg
rcll
push
xchg
adc
test
pusha
in
in
jns
sub
mov
cmpsl
lahf
mov
sti
fmuls
lea
clc
test
aad
jmp
imul
pop
mov
mov
es
push
inc
xchg
gs
xor
pop
xchg
cmp
dec
loop
cwtl
jp
stc
inc
sub
jmp
cmpsl
push
movsl
pop
xchg
test
cmc
push
mov
cmp
cmp
sub
lret
fmuls
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
sbb
ljmp
fisttpl
hlt
stos
lods
cmp
imul
mov
jp
aaa
jmp
fdivrl
add
in
fmuls
xchg
cmc
and
pop
push
mov
pushf
lahf
stos
lock
adc
push
jne
jno
add
pop
in
fidivs
add
mov
cmpsl
pop
fwait
jmp
sbb
pop
jnp
xchg
into
xchg
or
mov
aas
mov
std
popf
add
dec
add
test
mov
xchg
data16
dec
loop
lds
jne
fs
ja
std
add
ja
ja
xchg
data16
fadd
push
and
xchg
mov
out
sub
loopne
jae
add
pop
data16
jmp
pop
lcall
stc
or
out
mov
push
pop
mov
lock
loop
xchg
push
mov
push
inc
aam
push
push
iret
jnp
jne
int
adc
sbb
mov
or
jbe
cmpsb
fisttps
and
fwait
mov
adc
cmp
cmp
call
push
inc
movsb
dec
cld
out
mov
js
stos
xchg
sbb
inc
repz
fs
fnsave
push
xor
es
jl
mov
ficoml
daa
jle
dec
lods
stos
pop
lahf
es
in
pop
lods
mov
push
test
sbb
pop
mov
loop
ds
inc
int3
or
loop
movl
xor
push
push
pop
pushf
and
push
add
fwait
aam
xchg
sarb
out
cmp
push
sub
ljmp
xor
inc
cltd
test
cli
es
push
js
add
faddl
test
jmp
inc
fsubs
ret
add
push
daa
push
ljmp
adc
sbbb
push
roll
ret
cli
mov
decl
inc
inc
je
and
cwtl
ljmp
jns
loope
sbb
xchg
pop
fsts
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
mov
xchg
adc
jmp
out
pop
push
ret
and
imul
add
lods
gs
bound
stc
xchg
and
pop
xchg
scas
pop
xchg
mov
jae
incb
add
inc
and
out
and
push
movsb
fildll
shl
cwtl
sahf
sub
int
jle
xor
cmp
in
xchg
cmpsb
mov
outsl
subb
xlat
mov
shrb
sub
xchg
outsb
or
sbb
inc
fs
push
call
cmp
mov
int
fucomi
repnz
xchg
std
xchg
xor
jnp
cmc
jmp
xlat
ret
sub
mov
push
lcall
mov
xchg
cmp
daa
mov
int3
loop
mov
cs
jg,pt
xchg
scas
loopne
cwtl
int
outsb
loopne
mov
xchg
bound
adc
jmp
loope
aam
rorl
push
mov
or
enter
pushf
rcrl
mov
dec
xchg
mov
jmp
or
add
pusha
mov
insb
mov
cwtl
xchg
test
fwait
stos
mov
cltd
cli
stos
cmp
imull
mov
stc
cli
cmp
jg
ljmp
sub
cmp
mov
in
push
xchg
push
fistl
inc
xor
dec
sbb
sbb
mov
mov
pop
jne
movsb
inc
out
lock
xor
ja
cmp
test
mov
add
out
push
inc
icebp
mov
sbb
imul
xlat
test
mov
adc
cmp
adc
insl
mov
es
and
test
jbe
les
outsl
outsl
aas
pop
sub
dec
jo
lahf
sub
daa
sub
jle
xor
aam
dec
xor
xchg
push
xor
adc
lahf
jp
xor
in
xchg
push
sub
mov
cwtl
faddl
test
out
cli
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
or
push
adcb
add
pusha
sbb
cs
inc
call
jmp
and
sbb
add
in
aam
mov
jp
jl
xlat
sbbb
add
inc
jmp
imul
outsl
xor
fidivs
add
or
mov
frstor
sub
sbb
in
cmp
adc
in
sbb
and
cli
pop
js
push
je
push
ret
scas
pop
dec
push
and
dec
dec
jge
stc
mov
sbb
dec
jp
aas
push
sub
xchg
xor
int
mov
fistps
cmp
jl
mov
push
and
nop
cld
cltd
add
dec
cltd
lds
fstpt
movd
add
or
fisubrs
adc
addr16
push
dec
mov
xchg
xor
pop
mov
xchg
das
lret
arpl
dec
into
popa
add
ja
mov
bound
sub
std
cmp
and
sbb
nop
inc
ss
sbb
out
jnp
in
sbb
and
or
movsl
lock
iret
pop
cmp
jnp
lods
stos
add
in
negl
outsb
jg
cld
jne
push
icebp
icebp
shll
daa
leave
cmp
mov
jne
lds
jmp
push
clc
lret
rcl
scas
fdivrl
dec
mov
xor
fadd
xlat
data16
pop
push
neg
stos
lret
out
or
dec
iret
pop
sti
call
incl
dec
aam
mov
mov
pop
push
lret
test
push
and
adc
popf
xchg
popf
jl
ja
int
push
out
mov
popa
inc
push
ret
imul
fsubrl
mov
dec
or
shl
jno
and
int
dec
ret
mov
xchg
push
mov
lock
inc
andb
mov
pop
test
and
pushf
cld
add
mov
add
fimull
cli
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
vpsubw
js
adc
movlps
mov
cmp
sub
je
fidivrs
mov
xchg
or
xchg
into
in
lahf
push
outsb
xor
inc
and
loopne
lea
xchg
cmpsb
push
imul
cmp
adc
lahf
orb
in
sbb
jmp
sub
mov
mov
jbe
sub
inc
or
cltd
push
inc
push
adc
cwtl
fldcw
ret
stos
shl
inc
dec
cmp
jge
cmpsl
push
xchg
lret
outsl
push
roll
push
xor
hlt
xor
push
lcall
sahf
add
shlb
mov
jmp
add
sub
pop
out
lods
cli
clc
incl
pop
in
mov
xchg
pusha
pop
sti
lods
push
ja
push
adc
inc
mov
and
test
in
inc
sub
lahf
jge
add
jecxz
ljmp
shll
lsl
push
adc
popf
data16
adc
mov
cmc
pop
inc
mov
ljmp
stos
mov
ficoml
jmp
jl
xchg
xor
jmp
jne
ficomps
pushl
sbb
test
mov
xchg
cmp
mov
int3
call
mov
int3
push
jp
leave
sahf
xor
jo
mov
roll
ljmp
int3
outsb
sub
cmp
daa
jae
add
lahf
lods
cmpsb
js
daa
icebp
jmp
jb
addr16
mov
in
sub
or
or
jge
test
nop
mov
jp
xchg
xchg
mov
pop
sub
or
cmc
ja
in
xchg
daa
xor
ss
int3
xchg
in
insb
into
jle
leave
fs
jp
mov
or
dec
xchg
push
cmc
insl
mov
arpl
jl
jge
fwait
cmpsl
sbb
test
sub
enter
lods
pop
mov
add
cmp
and
push
test
aam
add
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
mov
adc
adc
dec
and
nop
jnp
push
out
mov
and
into
test
adc
mov
rorl
out
pop
and
outsb
aam
test
adc
pop
into
xchg
popf
mov
sub
and
lods
lds
in
cli
data16
fsubr
or
dec
mov
dec
clc
jo
xchg
mov
mov
inc
or
or
lea
pop
std
nop
sub
icebp
pop
jae
or
movsl
xchg
push
addr16
stos
xor
lods
test
sbb
jp
fs
clc
loopne
jge
sti
jp
xor
mov
mov
aas
mov
dec
shrb
enter
cltd
pop
mov
rcll
mov
call
ret
lahf
lods
ss
pushf
movsl
aaa
add
std
mov
or
aam
xchg
pop
push
sbbb
stos
in
push
sbb
ljmp
cmpsl
aas
adc
loope
test
cmpsl
cmp
push
or
cwtl
or
mov
jmp
mov
mov
ss
stos
rcr
addr16
in
cmp
enter
es
ret
or
outsl
ret
call
fcoms
add
xchg
fucom
jp
xor
aaa
and
sub
adc
or
add
xor
loopne
scas
imul
test
fwait
push
dec
mov
mov
stos
pop
sub
pop
cmpsl
fs
popa
adc
jnp
mov
mov
push
inc
adc
inc
push
pop
add
lods
mov
std
shrl
sub
outsl
ja
inc
or
test
lret
jmp
push
sub
dec
movsl
jne
push
cmp
pop
scas
outsl
mov
sti
outsl
enter
inc
push
jns
mov
pop
sub
aaa
xchg
mov
insl
insb
mov
outsb
lahf
orl
aaa
push
fs
xchg
outsb
lret
lock
out
negl
add
sahf
scas
sahf
les
repz
imul
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
ss
stos
jb
adc
adc
fs
sbb
test
cmpsl
loop
mov
ret
stc
xchg
pop
out
fs
or
icebp
xor
test
mov
mov
push
xor
dec
addr16
mov
add
cld
clc
int
enter
sahf
je
popa
mov
jbe
int3
jno
cmp
add
and
imulb
mov
cwtl
subl
jo
dec
jmp
subl
jb
push
jb
lock
pop
iret
xor
mov
data16
js
jl
pop
sbb
inc
cmpsb
sbb
sarb
and
out
jge
aas
and
sub
mov
dec
out
add
xor
pusha
lods
repnz
mov
add
shll
cwtl
lds
and
inc
loop
out
sbb
sub
add
mov
loopne
das
mov
loopne
jnp
adc
pop
aas
scas
movzbl
fsub
fdivp
and
scas
enter
aaa
int
lds
in
loop
pop
xchg
ljmp
mov
sub
jnp
jp
jmp
shlb
jmp
sbb
push
lret
or
jb
loope
inc
and
add
loope
lahf
mov
jp
leave
or
push
daa
shrl
stos
cwtl
daa
inc
mov
mov
popf
mov
adc
mov
mov
push
sub
out
cmp
sbb
add
jmp
jno
aaa
push
iret
das
daa
adc
xor
jne
sbb
cmpsl
aas
push
add
arpl
and
mov
out
sbb
mov
shrb
or
lahf
jmp
das
and
cmp
popa
push
pushf
push
jmp
mov
pop
bnd
inc
add
in
push
sbb
mov
aad
or
hlt
push
andb
pop
push
and
mov
test
out
sti
dec
mov
out
pop
xorb
add
push
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
jbe
es
adc
adc
jg
loopne
out
push
mov
or
arpl
mov
jmp
mov
or
lahf
gs
dec
add
mov
outsl
in
daa
test
shrl
push
mov
sbb
ljmp
mov
pop
outsl
outsb
fldlg2
pop
imul
add
rcrl
movsb
repnz
adc
lods
nop
stos
pop
lcall
inc
adc
out
loope
mov
ret
fisubs
orb
mov
pop
push
jecxz
pop
mov
cmp
xchg
je
add
push
aam
jns
xor
cmp
sub
xor
sbb
mov
fnstcw
xchg
test
mov
pop
out
pop
ja
fs
xor
fmuls
jae
popf
pop
xchg
pop
xchg
mov
test
subb
pop
push
xchg
pop
jmp
xchg
adc
gs
inc
pop
and
mov
or
in
or
jno
cmp
sbb
hlt
xchg
js
stos
popa
pop
into
je
popa
mov
psadbw
push
inc
call
mov
pop
sbb
cmp
cmpsl
jge
andl
mov
mul
lods
repnz
and
jmp
stos
shrb
leave
pop
lds
jae
je
push
cltd
std
addl
sbb
inc
push
sti
std
imul
mov
jo
mov
sbb
iret
xchg
shll
fbstp
icebp
mov
femms
mov
pop
pop
cmp
sub
sbb
mov
mov
lea
sub
sub
std
fucomi
jno
adc
loop
aaa
sbb
enter
jmp
les
sub
and
adc
lahf
mov
xor
mov
lcall
mov
mov
dec
into
loop
jae
out
sub
dec
in
out
roll
mov
mov
leave
mov
es
or
loopne
outsb
loope
pusha
xchg
mov
fmuls
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
xchg
inc
inc
stos
fldcw
adc
movlps
xlat
or
daa
xchg
jns
dec
in
sub
fs
aam
das
ja
scas
push
pop
dec
mov
push
ret
ja
fimull
adc
jmp
cmp
repnz
data16
mov
jnp
fimull
js
insb
xor
mov
push
enter
mov
call
in
lret
mov
aam
loopne
sub
push
ret
hlt
int
mov
pop
pop
jmp
mov
jns
mov
daa
cmp
push
test
outsb
sub
sbb
dec
or
xor
pusha
mov
push
jecxz
xor
xchg
dec
push
xor
xor
dec
push
inc
lock
mov
inc
ret
std
fidivrl
adc
xor
adc
mov
cwtl
or
add
push
jb
in
xor
xlat
xlat
jo
pop
cmpsb
adc
xchg
sbb
pop
sbb
adc
daa
je
lret
add
adc
adc
mov
push
arpl
shr
into
das
jecxz
stc
xchg
fnstsw
inc
fdivr
aam
jne
nop
sbb
pop
aaa
push
push
lcall
lods
jno
pop
cwtl
mov
inc
addl
arpl
popf
jbe
xchg
clc
push
mov
add
adcb
cmp
fs
das
pop
cwtl
sarl
je
push
dec
sarl
xchg
mov
mov
popa
and
mov
add
stos
jle
pop
push
or
and
mov
iret
and
push
mov
xchg
push
xchg
int
inc
arpl
pop
push
mov
stos
inc
jge
xor
cmp
sti
or
loop
lret
into
and
dec
icebp
scas
orl
xchg
pop
xchg
cmc
dec
xor
dec
daa
mov
jnp
sarl
sub
and
and
adc
in
jno
ret
clc
mov
movsb
xchg
lret
mov
les
test
pop
stos
add
push
mov
pop
mov
pop
cmpsl
stc
mov
mov
inc
ss
mov
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
jmp
lea
enter
jp
leave
jmp
jne
arpl
push
pop
pop
enter
scas
mov
jp
fisttps
out
push
cmpsb
jecxz
js
cmp
cli
sub
push
int
pop
lret
jae
cli
xor
cmp
hlt
cmpl
repz
xor
test
iret
adc
cs
lds
cmp
dec
repz
xor
mov
mov
adc
mov
fimull
push
movsl
pop
js
inc
leave
aas
fwait
cmp
jns
scas
push
ficomps
mov
shl
xor
jmp
jl
sbb
dec
outsb
test
shlb
ljmp
add
nop
xor
cld
negb
mov
sub
fiaddl
shlb
adc
cmp
mov
xchg
jo
mov
stc
push
mov
sub
dec
mov
push
lret
sub
out
push
jae
pop
push
xchg
in
les
ja
push
mov
mov
sahf
sti
test
popa
aam
mov
cmp
mov
gs
sarl
mov
jp
subb
insl
mov
xchg
imul
jg
inc
fsub
lahf
incb
cmp
subb
nop
adc
mov
data16
popa
mov
cmp
mov
pop
adc
jmp
faddl
and
xlat
xchg
cmp
ret
in
ret
lahf
ja
dec
fsubs
popf
stos
test
les
push
fildll
insb
pusha
sarb
jno
xor
rep
cmp
fadd
or
fisttps
inc
das
push
cld
outsl
lods
fidivl
lcall
pop
ja
cmp
add
and
aas
xchg
leave
imul
int3
jbe
inc
adc
xchg
jno
ret
add
das
sub
xchg
decb
ret
adc
push
jl
std
and
cmpsb
data16
add
jnp
call
sbb
or
lods
lcall
cltd
lret
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
es
mov
xor
dec
lock
xor
mov
out
imul
in
test
lds
and
xchg
jb
mov
sub
or
push
aad
fisubrs
adc
ror
pop
fwait
jle
into
mov
xor
std
popa
inc
movsb
sub
xor
lret
sbb
cs
mov
out
pop
xchg
aad
mov
xchg
add
movl
push
int3
call
leave
adcl
push
out
cmp
dec
jmp
fcmove
push
stos
xchg
jbe
mov
mov
adc
push
fidivl
xor
pop
imul
add
add
inc
ljmp
in
and
mov
loope
sbb
stc
cmc
jns
xor
pop
movsl
xchg
filds
in
add
or
pop
xor
add
xchg
inc
adc
std
sti
xchg
aas
cmp
xchg
daa
pop
stos
adc
jl
add
cmc
cmp
sarb
mov
mov
negb
mov
xchg
stos
jo
mov
popa
repnz
cmp
xchg
test
sti
mov
xchg
xchg
xchg
jns
xor
and
lea
inc
pop
subl
or
sbb
adc
xor
mov
cmovo
add
lret
sub
nop
pop
sbb
or
xchg
scas
sub
cld
push
flds
add
mov
dec
mov
out
mov
xchg
filds
scas
xor
mov
dec
and
stos
cmpsl
or
shr
or
aaa
mov
lds
mov
jbe
xlat
xchg
fildll
add
mov
and
adc
push
sahf
mov
xchg
pusha
mov
inc
and
or
lret
cmp
sub
lods
inc
sub
mov
adc
sub
xchg
jnp
jns
xchg
dec
lods
popf
xor
pop
cltd
sbb
jge
jae
out
mov
int3
add
dec
fstpt
mov
push
cmc
sbb
data16
pop
mov
movw
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
jne
jl
cmc
pop
adc
adc
mov
push
jnp
xor
stc
popa
or
fnstsw
or
xchg
push
idivl
add
jns
inc
dec
sub
or
fs
or
pop
rcrl
xchg
adc
push
adc
jle
jecxz
mov
pop
imul
adc
or
mov
xchg
int3
pop
cmpsl
insb
int3
out
pop
cltd
inc
cwtl
lret
pop
push
mov
int3
out
sti
push
jg
jle
add
jne
or
dec
xchg
mov
into
es
jnp
iret
xchg
jns
add
in
sbb
mov
in
dec
lret
lods
sbbl
inc
and
fsqrt
repnz
sbb
scas
pop
cmp
movsl
sbb
dec
mov
ss
lock
xchg
shlb
push
inc
dec
mov
cwtl
sub
xchg
cmp
push
mov
push
ljmp
mov
mov
mov
leave
cltd
mov
aaa
inc
enter
fildl
cmp
xor
inc
xor
jnp
sbb
roll
lret
xor
aas
and
dec
call
pop
fwait
rcrb
pop
jecxz
cld
adc
daa
or
inc
inc
xchg
inc
push
and
sbb
mov
mov
dec
mov
xchg
mov
cmp
js
xchg
sbb
pop
sbb
mov
sti
jge
shll
mov
lcall
nop
mov
jp
ljmp
jge
hlt
cmpsb
inc
add
xor
jle
rcl
loope
add
sbb
aam
incb
insb
inc
fwait
jo
mov
ret
mov
sub
jno
lret
jo
xchg
dec
inc
mov
test
inc
stc
mov
xor
dec
jae
xchg
xchg
repz
sarl
or
xor
or
rcrb
mov
addr16
mov
out
ss
loopne
pop
mov
mov
pop
sarb
fimuls
xchg
mov
mov
jmp
sbb
out
inc
int3
mov
shl
ret
jg
test
test
decl
test
add
add
decl
decl
decl
xchg
add
adc
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
aaa
test
adc
adc
adc
int
loop
je
push
pop
adc
movsl
xchg
fstps
sbb
sbbb
push
shll
leave
sti
jnp
es
stc
sbb
xchg
sub
ja
xchg
adc
jmp
stos
and
inc
and
push
arpl
out
pop
dec
mov
dec
adc
jge
cli
imul
js
lea
xchg
pop
rcr
fstpl
dec
jb
lahf
mov
mov
aaa
jo
aad
rcrb
pop
cmp
pop
and
jne
sub
dec
xlat
push
sbb
movsl
xchg
sub
xchg
pop
or
sbb
add
lea
mov
clc
hlt
testb
mov
inc
adc
cs
jno
xor
xor
and
int
outsb
cli
push
rorb
sub
js
mov
cmc
pop
sub
adc
ret
cs
ds
aad
loope
hlt
xor
adc
pop
imul
sahf
pop
nop
mov
xchg
xor
pop
dec
add
mov
push
inc
mov
movb
pop
jmp
push
movsb
adc
test
fstpl
in
xchg
fistpl
mov
hlt
sbb
out
rol
mov
ds
in
test
xchg
or
mov
push
std
daa
mov
sub
and
cmc
dec
sub
call
sbb
xchg
xchg
jo
cmp
test
mov
push
xchg
jmp
push
push
ret
in
lcall
push
ret
sarl
mov
pop
add
add
lcall
fsts
outsl
cmpsl
push
jge
mov
cwtl
push
xor
bound
mov
dec
loopne
push
outsb
cmc
add
mov
imul
cmp
cmp
inc
mov
test
jno
push
or
sahf
mov
and
xchg
mov
inc
out
jo
ffree
jle
movsl
ret
xchg
xchg
cmp
lds
loopne
aas
andl
xor
push
cmp
add
jmp
mov
jge
pop
arpl
loopne
out
pop
ss
ret
jne
jae
dec
jecxz
xor
in
idivb
sub
aas
test
mov
out
xor
cmc
mov
movsb
jno
xorb
sbb
xor
push
jmp
and
inc
mov
bnd
pop
shlb
data16
jbe
xchg
scas
jae
incl
push
fimull
mov
pop
fs
inc
xor
enter
in
outsl
mov
aad
push
addr16
push
movsb
bswap
in
mov
cwtl
stos
mov
fsubrl
shll
pop
mov
fisubs
adc
unpckhps
lock
arpl
jbe
out
xchg
adc
xchg
mov
jbe
mov
jecxz
aas
inc
mov
dec
sbb
test
or
dec
es
sub
jmp
jge
aam
std
xchg
xchg
dec
pop
dec
mov
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
insb
push
adc
adc
leave
mov
mov
xchg
xor
xchg
xchg
cmp
fwait
push
pop
sbbl
fildll
fs
lcall
cmp
and
add
flds
pop
pop
cltd
xlat
sbb
inc
loop
fists
and
mov
and
dec
jecxz
push
add
gs
jp
ljmp
out
pop
push
adc
scas
push
mov
lods
popa
int
je
push
inc
sahf
stc
sbb
xchg
scas
mov
out
jae
cmpsl
cmp
mov
sbb
lar
mov
out
or
dec
jo
mov
outsl
mov
andl
les
sbbl
mov
or
pushf
shll
mov
cmp
inc
adc
adc
hlt
dec
sarb
icebp
xchg
xchg
or
xchg
in
movsb
xchg
pop
and
je
out
ret
mov
fildll
jp
aad
or
clc
sub
jns
iret
add
insb
clc
mov
sbb
sub
inc
scas
fistpl
fdiv
cmp
fnstenv
inc
js
xor
and
push
in
xor
or
jne
cmp
testl
das
in
icebp
test
jo
sbb
lods
les
cmp
leave
cmp
pop
fisubs
dec
jp
inc
cmp
aaa
jae
divl
and
xchg
push
jnp
xchg
sub
xorl
fimull
pop
pop
in
pop
daa
stos
mov
sub
inc
mov
xlat
cmc
cltd
mov
push
and
mov
dec
mov
dec
mov
jmp
bound
or
add
in
cld
add
leave
call
dec
in
rcrb
and
jl
add
add
sbb
xor
pop
jecxz
repz
sbbb
dec
fwait
stc
jmp
dec
aaa
xchg
mov
sub
jnp
stos
repz
in
mull
push
aam
in
xorb
push
jg
les
dec
test
pusha
in
sbb
ror
jnp
orb
cmp
shll
loopne
xor
dec
push
dec
mov
cmp
mov
pop
xor
cmpsb
push
adc
aaa
aaa
shrb
inc
enter
jnp
xchg
in
add
jbe
cmp
in
pop
shrb
and
mov
xor
jg
push
xor
push
jmp
jg
xchg
pusha
xor
sub
rcrl
sbb
stos
xchg
cmp
sbb
out
je
xchg
sub
mov
dec
out
cmp
stos
mov
xorl
push
sarl
subl
dec
stc
jae
insl
mov
rclb
loope
roll
pop
pop
dec
imul
inc
jmp
repz
clc
jb
mov
mov
cmp
repnz
push
insb
icebp
sub
adc
sub
shrb
int
insl
cmp
pop
adcb
pop
jg
fcmovne
add
lea
lcall
dec
and
xchg
cmc
arpl
lret
mov
mov
inc
and
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
