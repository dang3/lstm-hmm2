push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
call
jo
jo
jle
jo
xlat
cmp
rol
pop
push
add
pop
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
sbb
jmp
sbb
xor
pop
call
ret
cwtl
jge
xchg
ja
loopne
xlat
hlt
out
cmp
jl
fsubrl
stos
fildll
iret
xlat
iret
pop
or
sub
mov
pop
sahf
jle
mov
sbb
push
sbb
jmp
sub
ficompl
cmpsl
scas
mov
icebp
in
sub
arpl
jne
pusha
cmp
cmpsb
insl
xchg
push
jmp
je
data16
jecxz
test
push
mov
clc
fidivl
mov
and
mov
cld
fstpt
jne
and
mov
sbb
mov
add
mov
push
mov
xchg
scas
jnp
cmc
notb
inc
addr16
sbb
mov
and
or
xchg
sub
pop
loop
or
stc
jno
lock
outsb
add
fs
ss
dec
mov
adc
cltd
jb
mov
add
mov
mov
push
mov
leave
scas
in
stc
cmp
test
popa
push
adc
fidivs
push
jnp
lods
inc
cwtl
inc
xor
in
mov
dec
daa
cmp
and
lds
and
mov
repz
pop
hlt
jmp
icebp
pop
xor
aad
daa
roll
mov
cld
jmp
clc
icebp
mov
icebp
ficompl
xchg
jo
jo
jo
jo
outsl
out
cmp
push
outsl
ja
leave
mov
flds
jge
js
icebp
jbe
pop
inc
add
inc
sub
xor
adc
xor
mov
addr16
pusha
insb
cmp
sbb
enter
ret
shll
hlt
pop
inc
loop
xchg
ja
inc
cmp
and
mov
push
add
add
out
mov
leave
dec
aad
ja
fadds
aad
jle
jbe
imul
push
daa
mov
mov
pusha
popa
stos
sub
inc
movsb
gs
jl
xchg
xchg
iret
test
push
xor
fsts
push
iret
bound
sub
mov
fnstcw
stc
jbe
add
mov
jmp
mov
repnz
mov
popa
mov
push
jno
push
repz
jno
xor
repnz
inc
dec
inc
mov
pop
out
mov
outsl
xchg
out
mov
dec
in
int3
scas
lret
ja
adc
push
inc
int
daa
sahf
add
loope
rcrb
out
negl
push
pop
les
mov
push
xchg
inc
jno
mov
mov
cmp
out
adcb
sub
and
jmp
movsb
out
mov
mov
cmp
inc
jns
shlb
outsl
loope
adc
cmp
and
add
push
lock
xor
mov
popf
pop
adc
imul
int
mov
and
cmp
jno
inc
mov
cmp
sbb
pop
cmp
jo
and
xor
pusha
adc
jno
push
sub
stc
pop
lcall
insl
fcoms
dec
bound
inc
mov
std
or
push
add
and
hlt
rcrl
or
dec
es
cltd
jge
pop
mov
mov
das
movsb
int
fcmovu
inc
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
test
xorl
jo
jle
jo
ret
out
add
jno
pop
cli
out
or
nop
push
lea
cwtl
cli
jb
inc
xor
xchg
or
or
insb
mov
lret
imul
inc
sbbl
cmpsl
test
fincstp
push
inc
mov
rorb
hlt
mov
pop
lods
insl
pop
outsl
xor
in
inc
fists
sti
mov
mov
inc
sub
adc
pop
xor
icebp
or
pop
jmp
test
stos
and
stc
mov
jno
sarl
pop
int3
push
fs
add
nop
icebp
jbe
mov
lea
int3
cmp
xorb
cs
jns
adc
in
and
mov
mov
cltd
insl
std
ret
xor
pusha
and
jmp
inc
mov
rclb
fldl
push
adc
js
js
inc
mov
ret
or
cwtl
sbb
sarb
adc
mov
add
xchg
cmp
loop
test
out
mov
ret
and
outsb
pop
sahf
push
xchg
mov
jne
inc
mov
pusha
jg
lods
cltd
das
arpl
andb
pop
mov
xor
push
cmpsb
loope
cmp
insb
shll
and
mov
inc
es
xchg
mov
mov
in
sub
jp
rcr
dec
jns
jl
inc
inc
dec
pop
cld
scas
dec
arpl
jmp
negl
mov
push
pop
add
mov
mov
push
xchg
dec
xchg
mov
loopne
mov
rol
and
cmp
es
mov
or
les
out
fdivp
mov
push
pop
push
ss
add
push
repnz
imulb
leave
or
inc
fwait
popa
out
and
lret
mov
lock
iret
jecxz
mov
add
push
fimull
push
hlt
aas
rorl
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
shlb
jo
jle
jo
xor
out
xor
adcl
sub
push
inc
ret
jnp
or
in
push
sbb
ficomps
scas
nop
sbb
inc
xchg
mov
movsl
shll
sarb
daa
in
insl
add
or
daa
je
enter
lea
in
aas
cs
jge
xor
mov
lret
pop
testb
pop
shrl
cwtl
icebp
xor
inc
add
loop
jno
ret
sub
pop
and
loope
shrl
lret
movsl
cwtl
lea
cld
sbb
sub
add
and
push
push
sbb
insb
in
out
fmull
iret
push
dec
cmpsl
lods
sub
and
sti
push
adc
jb
mov
pop
add
xchg
mov
icebp
call
jecxz
or
pop
sti
add
and
loopne
pop
fwait
imul
arpl
je
jns
push
xor
daa
leave
pop
cmp
cs
aaa
push
gs
jno
jg
and
popf
int
pop
outsb
pop
inc
inc
xor
fidivrl
xor
int3
aad
lds
mov
out
mov
or
popa
mov
xchg
rcll
xchg
mov
je
mov
neg
inc
cmp
lahf
js
bound
mov
ret
jnp
sbb
or
int3
fdivrp
lcall
insb
xlat
sbbb
int3
mov
adc
inc
mov
in
jo
loope
or
pop
push
fxch
cmpb
fstl
dec
jne
sub
xlat
sbbl
aad
pop
jmp
iret
pop
cmpb
ljmp
add
mov
cmpb
outsl
je
pusha
sub
rorl
inc
sbb
fcoms
shr
lods
andl
dec
sbb
xor
cld
into
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
js
jo
jle
jo
fs
push
mov
out
fucom
sbb
push
inc
rolb
sub
sbb
jae
lods
mov
popf
int3
push
mov
jg
test
pop
mov
xor
pop
aam
lcall
ret
xlat
xchg
xor
add
cltd
mov
sbb
jmp
les
mov
mov
fwait
jb
fdiv
jecxz
push
mov
mov
scas
sbbb
xor
cld
out
jns
cld
je
sbb
jno
das
roll
cmp
jmp
inc
cmpsl
jle
mov
mov
out
out
or
stos
lahf
xor
lahf
sbb
inc
int
mov
mov
mov
mov
subl
xchg
mov
push
sahf
or
or
jbe
dec
cwtl
repz
pop
cmpsb
clc
mov
out
aam
cmpsb
add
inc
ret
outsb
out
add
fdivrs
mov
clc
iret
mov
lock
pop
push
inc
xchg
ret
test
xor
mov
mov
je
call
xchg
cmpsl
xor
loope
daa
push
mov
or
test
mov
test
mov
loopne
add
int
adc
test
sbb
cmpsb
sub
hlt
sarl
andb
pop
lods
popa
cmpb
testb
mov
aaa
cmpsl
and
ds
hlt
cmp
rcll
or
adc
inc
push
inc
mov
shlb
or
adc
imul
xor
mov
xlat
sar
cltd
ficoms
and
pop
dec
jnp
hlt
xor
jl
mov
mov
fisubl
nop
xchg
stos
dec
adc
bound
push
cmpsl
ror
or
shlb
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
fwait
jo,pn
jo
jo
jo
rcrl
stc
inc
mov
addb
add
pushf
aad
mov
ljmp
mov
pop
sbb
push
inc
or
dec
imul
add
movsb
fwait
jecxz
mov
jnp
outsb
jmp
scas
fiadds
jge
orl
mov
ss
cmp
sbb
push
aad
jae
xchg
and
lret
cmpsb
sub
ja
sbb
icebp
inc
loop
mov
sbb
dec
aaa
lods
add
cld
or
push
mov
mov
cmpb
adc
cmp
imul
bound
scas
add
pop
push
pushf
mov
inc
subl
push
push
inc
jecxz
adc
and
rorb
inc
and
es
mov
mov
outsl
sbb
jne
insb
js
fnstsw
jle
lcall
enter
inc
inc
inc
popa
cwtl
in
call
jge
sbb
mov
xchg
loopne
idivl
and
push
add
bound
int3
js
jnp
movsl
ret
test
mov
pop
notl
pop
pop
arpl
ds
ficomps
fistps
pop
pusha
or
adc
add
mov
and
jnp
in
cmp
repz
pop
ds
sub
outsb
loope
cwtl
mov
aaa
aad
push
int3
dec
jl
cmp
adc
mov
dec
cmc
xor
push
push
xlat
test
xchg
orb
testl
xlat
loop
add
or
push
test
jl
sub
lcall
icebp
cmp
fdivrl
adc
jnp
inc
scas
subb
xor
pop
inc
outsb
mov
shrl
xchg
jnp
add
cmp
jmp
ret
gs
cmpsl
insb
subb
rcr
jo
jo
jo
jo
js
imul
aam
jecxz
inc
adc
inc
scas
cli
mov
xchg
out
cs
insb
fisubl
jecxz
repz
xor
enter
jg
ja
mov
and
call
mov
add
xlat
mov
test
inc
jo
jae
testl
js
jne
add
push
or
std
in
jo
stos
push
lods
push
negb
inc
jae
decb
in
cmc
iret
cli
dec
fsubl
and
cwtl
rcrl
jle
mov
mov
fsubrs
pop
dec
into
xchg
mov
sub
int
ja
adc
jecxz
pop
loope
xchg
lds
ljmp
addr16
inc
sbb
dec
inc
mov
stc
pop
inc
or
inc
jo
or
ljmp
into
dec
or
mov
sbbb
mov
call
xlat
lret
xchg
repz
and
dec
je
jge
adc
xchg
cmpsb
push
sbb
or
and
mov
into
stos
cmp
jl,pt
test
fs
jle
imul
enter
mov
sbb
push
lea
xor
jmp
cmp
imulb
adc
mov
sarl
js
inc
mov
testl
and
cmp
cwtl
adc
sarb
sub
mov
sbb
jp
xchg
sarl
mov
mov
movsl
dec
cmp
sahf
insl
xchg
in
cmp
jmp
cmpsb
jl
dec
adc
add
pop
out
xchg
cmp
mov
xchg
inc
add
mov
cld
push
imul
add
xchg
bound
inc
pop
xor
or
pop
push
lea
out
jns
or
sbbl
lret
mov
push
dec
push
sahf
jp
jae
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
add
jo
jo
repnz
into
inc
sbb
inc
ds
add
addr16
test
adc
ljmp
jne
adc
xchg
mov
dec
sub
in
jns
iret
roll
in
mov
pop
jg
mov
jns
in
je
pop
out
shl
mov
pop
add
or
es
mov
rorl
cmp
cmp
pushf
jmp
sbb
out
into
fprem
cmp
test
mov
add
divl
lcall
scas
test
mov
ret
js
test
mov
push
hlt
rcll
dec
bound
mov
and
out
idivb
pop
add
xlat
scas
es
adc
ret
dec
fldenv
fistps
repz
fsubl
rclb
inc
xchg
imul
das
dec
dec
add
mov
rcrl
mov
pop
dec
mov
cwtl
sub
jnp
aam
mov
dec
sub
mov
push
xchg
xor
xor
push
rclb
inc
je
popa
cs
fisubs
cwtl
orb
mov
loop
jne
aam
sub
test
in
or
aas
fnstenv
sub
repz
adc
push
push
pop
in
pop
lea
sbb
ret
insl
pop
ret
in
mov
jl
inc
int3
pop
jge
pop
hlt
cmpsl
jb
data16
pop
lcall
push
push
in
and
push
mov
and
mov
mov
adc
dec
add
lea
or
mov
stos
iret
mov
mov
lahf
cmc
pop
mov
inc
push
jbe
lods
lret
adc
jno
std
inc
push
loope
outsb
sbb
push
sbb
push
imul
ret
cmp
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
xchg
jo
jo
jo
jo
iret
incl
or
cmp
mov
jne
mov
scas
imul
loopne
in
lret
stos
inc
mov
fwait
aaa
repz
and
cmp
ss
les
jb
mov
in
xor
pushf
jnp
add
add
cmc
stos
test
lods
push
out
dec
ss
out
dec
and
cmp
aas
scas
cwtl
mov
dec
iret
inc
push
pop
pop
sarb
mov
push
stos
sub
or
subl
lcall
movsb
lea
inc
iret
push
jno
fst
sbbb
sbb
sti
daa
rcr
arpl
aas
outsl
movsb
clc
sbb
bound
in
scas
xor
push
jg
xchg
add
mov
mov
mov
mov
cmp
push
ds
mov
dec
movsb
jecxz
loop
mov
subl
fcoml
aaa
lea
bound
inc
mov
addr16
pop
jo
fbld
mov
mov
cmp
icebp
mov
ljmp
test
stc
scas
pop
out
push
jae
rol
cld
adc
sub
shrb
je
inc
xchg
mov
mov
mov
push
sti
cmc
push
fdivs
incl
mov
or
in
mov
sbb
mov
mov
dec
xchg
sti
cmpsl
sub
mov
adc
fldl
adc
add
lret
jne
adc
pop
xlat
rcrl
sbb
icebp
pusha
fstpt
or
subb
xor
mov
jno
mov
imull
xor
fstl
sbb
shl
jg
fmuls
xchg
dec
out
and
js
mulps
cld
sti
iret
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
or
dec
cmp
pop
pop
mov
repnz
pop
cmp
cmpsb
loope
lea
inc
sub
adc
mov
insb
arpl
outsb
adc
mov
lret
sbb
and
idivl
push
adc
inc
adc
mov
iret
ja
inc
xor
jge
mov
rorb
int3
adc
add
sub
es
into
out
push
jno
lds
adc
jae
mov
cwtl
or
mov
mov
fwait
or
pop
xorl
adc
int
movsl
aad
loop
sbb
sub
xor
lret
inc
sbb
inc
inc
dec
aaa
adc
dec
stos
inc
nop
bnd
cwtl
daa
xchg
ds
or
push
xchg
ss
clc
outsl
dec
aad
add
pop
rolb
in
pushl
or
mov
jg
sbbb
test
insb
mov
int
data16
lret
sub
fdivs
mov
mov
push
mov
jne
or
cwtl
or
rclb
or
iret
inc
lea
je
cmpsb
mov
xor
ljmp
xchg
aam
dec
aad
pop
push
mov
fldenv
jo
out
adc
push
fldcw
mov
mov
out
pop
mov
lods
divb
insb
push
pop
fwait
jl
lret
mov
xor
jns
or
mov
in
das
aaa
jg
ret
xlat
into
ds
loope
aaa
cmp
popf
inc
adc
pusha
das
lahf
sub
outsb
push
dec
lret
in
pusha
shrl
cmp
mov
mov
subl
loope
jb
hlt
lret
pop
in
daa
jbe
mov
lods
test
add
sbb
faddl
icebp
ret
push
cmp
inc
or
in
in
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
mov
rcl
push
test
and
icebp
dec
push
mov
inc
cli
xor
push
iret
cli
outsl
push
loope
arpl
pop
adc
arpl
sarl
jle
add
cmp
mov
cmp
out
dec
mov
pop
and
mov
xchg
inc
and
jg
es
incl
jmp
pop
iret
dec
xor
or
test
xor
shl
xor
in
cmp
pop
in
test
scas
std
jo
dec
into
repnz
pop
jae
mov
out
movsl
mov
sar
lock
out
icebp
pop
addr16
adc
add
jb
pop
cmc
test
test
xor
out
testb
lret
dec
lods
test
stos
pushf
sub
mov
imul
add
andb
xor
add
mov
inc
fisttps
daa
sarb
dec
test
jmp
or
dec
lods
jno
pop
loopne
mov
lds
adc
and
push
negl
aaa
outsb
jns
jecxz
hlt
cmc
cmpsl
out
scas
in
lds
push
dec
out
test
sbb
and
fidivrs
mov
loop
add
test
fmuls
lods
jae
or
sbb
pop
jp
jb
jge
sbb
xchg
das
notb
aam
jno
cmp
fdivs
clc
inc
sub
lea
mov
jmp
pop
mov
mov
mov
mov
insb
inc
ds
push
in
adc
jno
xchg
out
jo
jno
lock
repz
test
and
hlt
jae
push
repnz
pop
je
jne
js
xchg
push
loope
jne
or
andb
aas
cwtl
gs
arpl
sub
iret
push
fcomps
mov
and
mov
xor
xor
cmp
and
int
jb
sahf
push
out
or
out
xchg
enter
je
pop
inc
imul
xor
das
cmpsl
add
pop
frstor
rcrb
dec
nop
push
addb
ficoms
mov
jl
nop
mov
out
mov
dec
test
mov
jo,pt
inc
insl
sbb
mov
movl
loopne
cs
ficompl
mov
int
in
sub
insl
cmovno
loop
imul
mov
push
xor
pop
cmpsl
rcrb
mov
mov
sbb
mov
pop
cli
outsb
mov
inc
mov
cmpsb
iret
pop
cld
aaa
bound
mov
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
mov
or
mov
ret
dec
pop
icebp
aam
pop
mov
outsb
sub
push
inc
mov
jg
xor
clc
mov
mov
dec
xchg
pop
imul
out
and
leave
xchg
outsl
mov
aaa
jne
jl
stos
pop
or
adc
jbe
mov
jnp
dec
mov
mov
in
mov
insb
sbb
mov
push
adc
jno
insb
jne
rcl
mov
lcall
outsb
push
lahf
sahf
push
jle,pn
arpl
dec
mov
jae
subl
jnp
adc
jmp
call
test
pop
hlt
dec
mov
push
xchg
dec
scas
stc
adc
xor
fldlg2
add
mov
cmp
jmp
bound
sbb
add
mov
cmp
ds
push
xchg
push
xchg
roll
xor
mov
test
pop
push
mov
fdivs
push
sbb
aad
cmp
cmc
sbb
iret
jle
mov
pop
xor
mov
xlat
orb
jle
sbb
mov
dec
and
popa
add
negl
cmp
push
mov
aad
pop
jns
cmp
add
mov
outsb
sub
ss
rcll
cwtl
inc
insl
stos
daa
arpl
pop
or
jecxz
xor
insb
sbb
movsb
inc
sbb
movsl
mov
iret
inc
sub
jnp
dec
dec
pop
shlb
add
mov
enter
daa
and
lods
ja
loopne
or
jl
xor
pushf
repz
stc
and
jne
cmp
xchg
mov
int3
mov
push
imul
jae
cld
pop
ret
sti
mov
pop
rorb
mov
js
js
movsb
jge
ficomps
pop
mov
je
sbb
xchg
stos
push
dec
mov
aam
movsb
mov
pop
jbe
push
ds
clc
out
ficomps
cmpsl
cmpsl
aad
imul
cmpsl
inc
outsb
add
in
xchg
popf
sub
jno
mov
sbb
or
outsb
pop
xchg
jns
lds
push
scas
pusha
data16
enter
cmp
xor
mov
jnp
leave
stos
test
sub
sbb
imul
xchg
cmpps
bound
scas
lods
mov
ljmp
add
out
mov
and
nop
mov
js
addr16
aas
mov
mov
cmp
stc
fnstsw
in
ja
faddl
or
sahf
pop
inc
lcall
mov
xor
mov
mov
xor
add
jmp
fistl
loope
lds
add
xchg
daa
sti
cld
pop
jo
mov
inc
dec
xor
negb
in
cmp
and
cmp
xlat
int
stc
sahf
outsb
jmp
mov
inc
je
push
cmpsb
hlt
ffreep
in
pop
repnz
xchg
push
mov
pop
ss
adc
push
xchg
push
mov
pop
mov
mov
jle
jle
call
lcall
adc
or
mov
mov
xchg
clc
inc
loop
xchg
test
imul
pop
out
into
jb
inc
push
sahf
push
sahf
lret
jne
fwait
daa
stos
out
sub
in
test
cmp
fistps
xlat
xlat
sub
aam
pop
xchg
fimuls
add
je
test
or
xor
push
fsubrs
repz
aad
dec
mov
sti
je
jl
dec
sub
inc
imul
je
sarb
pop
mov
mov
mov
xchg
sbbb
and
dec
push
jb
scas
or
bound
fsubp
orb
xchg
xchg
es
xor
sti
std
mov
subl
test
insb
xchg
cmp
cmp
ret
adc
out
and
cmp
add
movsb
cmpsl
push
xchg
add
sub
jl
cmpsl
xchg
mulb
testl
push
jl
fwait
lds
xor
scas
pushf
or
push
xor
adc
imul
repnz
adc
inc
rol
xor
insb
popa
mov
mov
mov
fisttps
xchg
add
js
push
mov
shll
js
shl
xchg
loopne
or
inc
mov
pop
sbb
enter
dec
xchg
fstl
mov
lods
pop
lock
xchg
mov
adc
and
mov
sub
aam
sbb
lcall
lods
aas
loop
movsl
popf
jle
jecxz
lret
test
jbe
std
mov
add
lods
cmove
mov
mov
xor
dec
in
jae
push
jne
add
and
push
es
in
into
sbb
mov
inc
iret
test
sbb
xchg
clc
mov
dec
mov
jp
sub
fildll
cmpsl
pop
push
iret
mov
pop
inc
jnp
std
mov
ficomps
aaa
mov
pop
lods
test
fwait
sbbb
repz
dec
and
imul
cltd
sub
stos
cmp
jb
shll
xchg
stc
fisttpl
cli
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
paddq
cmp
jo
jle
jo
mov
or
mov
pushf
inc
fwait
out
mov
test
lds
mov
pop
sub
xor
mov
fwait
idivb
cmp
mov
lods
cmp
pushf
mov
daa
pop
sub
test
inc
dec
movsl
mov
mov
xor
mov
sbbl
add
or
xor
jnp
subb
mov
fs
cmp
xchg
pop
dec
leave
movswl
call
adc
and
pop
sahf
das
pop
mov
popa
mov
fisubrl
pop
inc
sub
xor
inc
ja
xchg
jae
pop
cmp
popa
pop
xlat
stc
lret
jae
cmpsl
dec
ret
andl
dec
loop
add
repz
test
pop
xchg
xchg
jmp
stos
dec
mov
mov
jno
push
jmp
cli
add
sbb
outsl
cmc
ss
fnsave
lock
jne
arpl
mov
sub
sahf
nop
jmp
sbb
stos
lds
leave
dec
mov
jb
jmp
mov
mov
filds
je
cs
push
fimuls
dec
xor
jae
stos
xchg
lock
mov
cltd
imul
movsl
xor
mov
int3
xchg
or
add
inc
inc
loopne
pushf
addr16
fidivrs
pop
fiaddl
sub
jnp
push
sub
xchg
movsb
movsl
pop
inc
pop
jmp
pop
aas
ret
xor
xchg
mov
fcompl
fdivrs
mov
and
lods
push
fcomps
push
inc
pop
sti
and
mov
cmp
ret
xchg
push
jnp
dec
cmp
jmp
mov
bound
rcl
pop
mov
pop
pop
ret
cmpsb
mov
popf
jns
jge
mov
or
mov
mov
je
scas
adc
ja
mov
orl
jnp
divb
mov
jecxz
addr16
jno
mov
out
loopne
xchg
pop
cmp
cmp
jb
cmp
lock
push
sub
popf
repz
addr16
pop
inc
iret
int
and
out
or
fwait
movb
jle
pop
xchg
cmp
mov
push
pop
jae
or
push
je
xor
jecxz
mov
jno
aas
mov
lea
or
adc
adc
mov
shrb
or
mov
adc
add
mulps
dec
adc
shrb
aas
rcrb
sub
xor
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
fcoms
jo
jge
jo
call
sub
xchg
adc
cmc
fwait
jno
or
push
mov
pop
popw
test
rcrl
rcll
mov
jge
in
xor
call
or
fcompl
movsl
out
nop
outsl
mov
cmc
dec
xor
sahf
and
inc
adc
mov
in
repnz
and
movb
pop
xchg
mov
sub
es
mov
lret
pop
inc
sahf
adc
xchg
out
hlt
rclb
pop
mov
pop
add
cmp
add
push
push
push
pop
pop
pop
xor
enter
pop
frstor
fcomps
outsb
mov
xor
adc
inc
mov
aam
add
leave
jns
inc
sar
xchg
pop
push
cmp
mov
out
inc
mov
stc
pop
int3
imul
sub
inc
inc
adc
cmpsl
adcl
out
cmp
aam
jle
sbb
std
sti
add
aam
sub
aad
stos
add
cmp
cmp
insb
jle
cmpsl
sub
mov
pop
pop
xor
fs
sub
jbe
push
pop
jmp
in
lea
cld
insb
fistl
inc
dec
rcll
or
inc
fsubl
jae
mov
mov
out
push
andl
inc
out
jno
pusha
jae
cmp
sahf
bound
mov
aam
jb
mov
push
cmpsl
sub
jne
inc
in
and
rol
arpl
sbb
sbbb
and
fsub
test
lock
lahf
jo
or
mov
xor
mov
aam
dec
sub
repnz
gs
mov
mov
jmp
lds
outsl
jl
jae
push
xor
scas
jae
insl
jmp
mov
test
mov
dec
outsl
sub
popf
jle
or
sarb
lods
out
adc
jle
jecxz
enter
lret
mov
mov
shll
mov
xchg
in
sti
mov
ret
enter
mov
shll
pushf
push
sbb
jne
outsb
push
es
sub
push
ja
in
xchg
lods
push
sbb
or
sti
add
push
ret
mov
loope
hlt
push
pop
or
lret
sbb
rorb
in
test
int
sbbb
xchg
adc
or
push
insl
add
or
push
ds
aam
mov
movsb
mov
xor
xchg
rcrb
out
cld
mov
cmp
bnd
out
or
sbb
push
es
jae
pop
or
dec
outsb
inc
outsb
push
into
cmc
popa
inc
ja
aas
and
mov
or
or
imul
lea
stos
push
mov
lahf
mov
lods
shll
mov
stc
test
adc
fwait
jne
mov
movl
nop
sbb
push
mov
movsl
adc
or
push
sbb
loop
fsubr
add
xor
lods
inc
movsl
aam
inc
decl
mov
imul
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
jmp
cmp
jbe
testb
fisubs
mov
repnz
xchg
ja
xlat
and
push
jp
pusha
lcall
out
ret
outsb
into
repnz
popf
repnz
mov
shrb
movsl
addl
inc
push
fsubr
xchg
shr
cmp
xor
jnp
adc
mov
sarb
add
xchg
test
movsb
mov
mov
and
inc
mov
dec
shlb
and
xchg
js
stos
lcall
jmp
ljmp
movsb
cmpsb
push
or
sub
xor
lcall
mov
adc
rcll
adc
popw
fdivrs
ret
mov
mov
scas
add
jmp
mov
aad
add
lcall
jo
and
cmp
and
addr16
cmpsl
loope
enter
lahf
scas
decl
and
dec
jb,pn
cmp
mov
fdivrl
or
push
jge
pop
fmuls
ss
insb
movsb
clc
or
jns
popf
loope
aam
cmp
inc
dec
inc
inc
pop
cli
xchg
std
mov
cmp
stos
aas
pop
adc
iret
cs
scas
inc
jns
xchg
cld
cmp
jae
cmpb
or
mov
add
pop
repnz
cltd
rolb
mov
mov
cltd
sbb
cmp
repz
jle
nop
adc
js
cs
loop
ljmp
dec
cmp
lea
stos
inc
mov
cmpsl
out
imul
fidivrs
rorb
rcrl
pop
enter
je
fidivs
or
in
out
aam
adc
cmp
and
daa
sub
pop
negl
dec
arpl
push
ss
jl
mov
shll
inc
cs
in
push
icebp
and
mov
jle
test
sub
stos
ljmp
stc
addr16
call
sub
xor
mov
mov
pusha
push
mov
add
lods
mov
popa
cltd
lock
fstpt
push
movsb
ss
fwait
loop
fdivrs
fisttpl
cmpl
fcmovnb
fistpl
loope
xchg
jne
xchg
xchg
imul
repz
add
and
add
adc
and
mov
adc
cmpsl
cmp
lock
xchg
cmp
loopne
inc
imul
lahf
push
xchg
push
cmp
clc
pop
mov
mov
mov
sbb
mov
in
sub
sbb
fsubs
in
xor
ds
xlat
cmp
or
pop
xchg
cli
fisubl
pop
sub
arpl
dec
adc
ja
fstps
push
fstpt
loop
xchg
or
push
jbe
pop
lods
in
xor
in
add
or
adc
popf
pop
xchg
mov
cmp
push
ljmp
xor
inc
lret
lahf
stc
movl
mov
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
add
cmp
lret
sbb
adc
test
insl
fbld
rolb
sub
incl
arpl
pop
mov
bound
loop
fwait
adc
inc
fisubl
mov
pop
cbtw
aad
pop
cmpsb
arpl
mov
nop
jmp
inc
les
inc
aam
cltd
or
inc
adc
xor
xchg
mov
idiv
dec
fadds
cmpsb
or
idivl
sbb
jnp
add
sub
aas
cli
cltd
and
sarb
sub
stc
mov
es
jmp
push
xor
out
pop
into
sbb
xchg
pop
in
xor
jne
pushf
jno
mov
push
push
jge
das
mov
cmp
fdivl
lock
std
sbb
fcos
in
fs
rcrb
mov
push
arpl
xchg
dec
rol
mov
lods
mov
imul
ja
out
int3
push
xchg
xchg
push
add
and
xchg
scas
xor
adcl
cs
roll
aam
adc
data16
inc
stc
out
mov
sbb
push
mov
addr16
cld
or
test
ljmp
insb
or
fcmove
cmpsb
sub
aad
add
fcmovnbe
sbb
jo
addr16
jp
mov
pop
sbbb
jp
adc
mov
dec
mov
xchg
movsl
loope
mov
and
fs
sbb
xchg
out
dec
pop
lcall
mov
fwait
cld
jmp
fldenv
adc
insb
jae
test
mov
clc
xor
mov
dec
cld
xchg
ret
add
call
sti
mov
pop
inc
sbb
and
andl
and
dec
xlat
in
sarl
mov
sbbb
aam
hlt
mov
mull
xor
and
popf
jnp,pn
repnz
sahf
xchg
in
inc
mov
cwtl
mov
push
into
dec
rcrb
xorl
orb
inc
loopne
aad
pop
push
push
inc
mov
ja
xchg
jl
rcrl
insl
sti
jno
or
ljmp
mov
add
pusha
cmp
inc
repz
or
add
add
mov
and
sub
jns
push
xchg
add
mov
mov
aam
rorl
inc
leave
mov
ja
scas
addl
add
pop
das
jae
mov
jbe
int
push
push
push
cmp
imul
mov
xchg
ret
into
adc
push
outsb
xchg
mov
pop
cmp
cmp
sbbl
jo
in
sbb
popf
test
daa
cmp
sbb
testb
jl
fcmovnbe
mov
and
inc
out
outsb
inc
es
in
push
mov
ret
sbbl
loop
js
jo
in
in
dec
repz
mov
cmp
pop
mov
movsl
movsb
or
clc
inc
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
movnti
push
dec
sbb
cmp
mov
mov
jns
popf
mov
pop
fadd
aam
test
das
inc
ds
fstpt
mov
sub
mov
xchg
xorb
loopne
mov
sbb
jns
pop
adc
or
mov
sub
xchg
loop
xor
jmp
or
mov
sbb
enter
inc
cltd
inc
imul
inc
fnstsw
mov
fcmovbe
mov
and
in
dec
add
mov
out
xchg
jae
push
je
xchg
sub
dec
pop
fcmovb
mov
cmp
fsts
cli
lods
jae
enter
shll
xor
mov
xchg
imul
pop
mov
outsl
dec
cmc
jns
cmp
idivb
stc
fidivrl
adc
xor
xor
hlt
pop
add
adc
bound
stc
mov
inc
cld
jecxz
mov
stos
mov
enter
add
hlt
clc
icebp
mov
mov
xchg
je
arpl
stos
jbe
into
jl
xchg
adc
imul
sarl
pop
push
aad
fsubs
icebp
js
inc
popf
pop
jbe
fnstsw
adc
mov
div
test
sub
jecxz
cmp
push
sahf
ja
and
mov
sarb
sbb
testb
sub
std
arpl
push
add
inc
std
data16
notl
mov
roll
mov
dec
cwtl
xor
sbb
lea
shlb
jmp
ljmp
out
outsb
pushf
pop
mov
mov
iret
nop
repz
sbb
lds
xor
or
ficompl
mov
mov
push
mov
add
hlt
mov
test
xchg
push
pop
sub
sbb
xchg
mov
or
mov
mov
test
fsts
mov
sbb
jne
inc
adc
sub
pop
rcl
push
testb
pop
dec
mov
mov
mov
dec
in
jecxz
push
in
mov
popf
roll
dec
pusha
adc
fnstenv
push
jb
out
loop
mov
loop
ret
mov
sbb
loop
add
repnz
jl
mov
mov
fiadds
push
mov
add
idiv
insl
clc
pop
cs
les
rorb
insl
pusha
in
fistl
addb
std
sbb
std
aaa
cmp
mov
xor
movsl
shr
adc
std
mov
sbb
out
enter
repnz
ret
les
scas
sbb
cmp
enter
push
fildll
mov
xchg
push
xchg
push
inc
push
icebp
pop
push
pop
fists
adc
shll
movsb
cltd
divl
data16
stc
add
icebp
stc
mov
pop
mov
mov
fbld
jo
shrl
outsl
test
sub
orb
adc
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
or
add
jo
jge
jo
xor
cmp
pop
cmpl
xchg
dec
imul
loop
sbb
or
mov
cli
xor
or
xlat
xchg
pop
rcl
xchg
test
sbb
adc
push
xchg
mov
jecxz
lods
faddl
mov
pushf
shlb
cltd
xchg
sub
xor
mov
data16
lock
pop
jb
test
ss
rorb
mov
pop
mov
pop
mov
mov
movsb
ljmp
jmp
lods
mov
stos
push
mov
mov
mov
push
mov
xor
ds
jle
mov
fimull
popf
or
sub
sub
aaa
hlt
imul
mov
rorl
out
out
sahf
enter
into
out
sarl
mov
xor
and
das
adc
lret
inc
or
rep
arpl
mov
sarb
cwtl
inc
ljmp
nop
mov
mov
sarl
rep
movl
sub
lahf
pusha
or
test
dec
adc
mov
in
fcoms
fcmovbe
in
jmp
js
addr16
jnp
lods
mov
sub
mov
jmp
mov
lret
in
in
mov
cmp
ds
pop
pushf
sbb
jl
mov
dec
rol
dec
rcl
push
mov
loope
mov
mov
add
in
push
push
mov
mov
mov
fs
dec
mov
mov
pop
sub
icebp
fistps
int
xchg
add
ret
icebp
pop
dec
ret
lahf
and
out
adc
pop
aaa
gs
xchg
mov
mov
jmp
in
mov
or
int
scas
addr16
es
loope
scas
fistps
xchg
mov
pop
popf
popf
mov
adc
dec
addr16
das
jp
mov
fimull
movsb
push
movsl
xchg
mov
fidivrl
int
push
jno
lock
ljmp
scas
mov
jmp
pop
sub
test
push
stc
mov
loopne
aas
aad
test
sub
mov
lret
lods
push
xchg
pop
dec
cltd
pop
jne
mov
pop
es
pop
sub
stos
inc
sbb
insb
rorb
jle
fimull
fstpt
jb
fisttps
push
dec
out
sub
adc
xor
jnp
dec
cli
mov
sub
xor
jp
xchg
clc
ljmp
out
sub
stos
sbb
push
mov
pop
mov
in
cmp
mov
add
stos
cmpsl
in
loopne
lds
mov
cmp
push
out
sahf
call
dec
icebp
stos
lcall
xor
jecxz
push
pop
inc
pop
pop
test
aas
push
pop
adc
push
sbb
jg
jmp
cmp
dec
cmpsb
jnp
pop
popf
cs
test
mov
je
imul
jle
mov
inc
hlt
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
xor
movsb
xchg
leave
and
cmp
mov
call
in
jae
test
mov
fstpl
in
rcll
lcall
ds
pop
jne
push
add
pmaddwd
push
fstpt
mov
fwait
xchg
sbb
sbb
inc
mov
xor
and
sbb
cld
data16
cltd
bound
pop
lock
mov
clc
add
jno,pn
push
movsl
addl
cmp
or
mov
insl
push
mov
scas
add
sbb
mov
inc
fnsave
sti
loope
hlt
and
jecxz
sbb
and
fisttpl
aaa
repz
jne
loop
mov
and
popf
shl
or
pushf
cld
lahf
insl
pushf
imul
or
lret
pusha
mov
ret
fldl
js
in
sub
mov
test
dec
sbb
out
pop
jno
ficompl
pop
xor
or
rcl
shll
adc
in
pushf
movsl
cli
push
hlt
push
outsb
mov
scas
pop
xlat
mov
xchg
jmp
sub
dec
pushf
mov
xchg
ds
adc
jge
inc
shrl
nop
push
out
testl
cs
dec
mov
xchg
cld
dec
in
xor
and
sub
scas
mov
pop
or
dec
faddl
mov
mov
jp
iret
xor
jmp
sub
xchg
dec
sub
ss
push
je
test
xchg
jmp
fwait
out
push
and
pop
in
mov
xchg
xor
lea
imul
inc
push
loop
fimuls
sbb
xor
movl
sub
cmpb
xor
lods
xor
lods
shlb
mov
fisubl
push
ljmp
add
test
cmpsl
sarb
in
jmp
mov
cld
std
jg
out
mov
ss
std
mov
rorb
sub
mov
test
pop
mov
decl
dec
loop
iret
arpl
and
fs
push
shrb
lret
push
rcll
call
xlat
jg
fwait
dec
jne
jo
idivb
popa
xchg
push
stc
incl
mov
loopne
rcr
pop
sti
test
push
xlat
pop
cmp
loope
jo
int
mov
cmp
es
ljmp
mov
pop
es
add
std
call
sbbl
inc
push
or
imul
out
in
aad
sub
xchg
pop
or
adc
pop
and
xlat
cmc
ret
aad
pop
in
and
add
adc
addb
cmp
dec
ret
or
call
pop
mov
rorl
ret
ja
imul
dec
arpl
ljmp
aad
test
hlt
inc
loope
mov
pushf
mov
notl
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
sti
je
xchg
jo,pn
cmp
lret
addr16
sahf
mov
cmp
inc
mov
movsb
out
ds
mov
cmp
inc
movsb
shl
rolb
push
mov
jge
in
push
inc
cmp
xchg
call
push
out
xor
jg
inc
sub
and
sub
mov
insb
cmp
xchg
lret
add
mov
pop
mov
push
cmp
lds
ret
push
inc
int
arpl
outsl
sub
push
call
add
imul
jmp
mov
xor
push
push
outsl
cld
pop
pop
mov
nop
sbb
out
aad
clc
aaa
pop
adc
add
xchg
nop
add
jp
mov
jp
in
pusha
ds
dec
jge
js
dec
sti
and
xchg
dec
mov
popa
popf
sbb
add
stos
dec
pop
repnz
and
mov
jne
fcoms
insb
in
dec
mov
lds
add
ds
ja
outsl
sub
stos
jl
gs
jge
mov
std
mov
ds
sbb
mov
arpl
and
repnz
and
fisubs
cld
cmpsb
cmpsl
and
pop
lds
movsb
dec
lock
adc
lods
sub
or
aam
adc
fnstsw
sub
or
and
fs
cltd
or
mov
addb
adc
inc
mov
and
pop
fistl
add
adc
xchg
lea
sbb
call
outsb
out
xchg
sbb
fcmovnbe
add
xor
imul
push
sbb
or
std
inc
adc
push
xchg
or
loop
test
pop
sub
aad
inc
add
mov
shrl
push
and
inc
aam
dec
ror
pop
mov
and
mov
dec
sbb
int
je
sbb
fcmovbe
pop
mov
outsb
jg
push
sub
pop
jg
adc
jl
cld
push
out
dec
stc
lret
imul
and
call
pop
sub
subb
into
int3
push
mov
sub
cmpsl
cmp
jno
and
scas
popa
cmpsb
mov
sbb
xor
insb
jbe
cltd
push
xchg
rcl
leave
sub
stc
addr16
lret
dec
adc
ja
dec
jnp
std
pop
dec
mov
cmp
push
push
pusha
fnstcw
xorb
stc
in
stc
test
mov
mov
cmp
test
gs
mov
pop
push
push
mov
sbb
int
fldenv
mov
fstps
ret
fbstp
in
imul
aam
stos
inc
sub
or
xchg
xchg
adc
repz
std
int3
insl
orb
xor
push
enter
loopne
stos
pop
sbb
mov
push
std
xchg
ds
loop
adcb
push
push
in
mov
ret
fucomip
adc
inc
pop
stos
sub
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
rorl
jo
cmp
pop
cmp
imul
jecxz
adc
lahf
in
xor
sarl
call
aaa
inc
push
movl
adc
movsb
inc
push
jbe
and
pop
ret
in
dec
pop
insb
jno
xor
jns
sub
in
jne
daa
mov
out
jno
sbb
nop
cmp
push
aam
int3
insb
pop
out
enter
loopne
dec
push
push
outsb
fiaddl
cmp
repnz
test
in
outsl
fbld
hlt
push
xor
jns
divb
lea
sarb
outsl
in
push
out
inc
or
or
inc
jmp
mov
std
in
notl
int
das
stc
lret
cmc
dec
pop
bound
dec
clc
mov
test
fldt
sar
push
data16
pushf
lds
aad
adc
test
cmp
cltd
call
out
or
lret
push
daa
test
inc
mov
cmpsb
xchg
pop
push
ror
imul
sbb
pop
loopne
jno
xchg
mov
pushf
or
mov
scas
fistl
adc
pushf
mov
stc
or
push
mov
and
repnz
subl
mov
call
pushf
xor
sahf
mov
sahf
leave
incb
adc
cs
add
mov
push
xchg
lods
adc
or
cmp
inc
mov
in
lret
ret
lea
or
mov
pusha
lret
sub
mov
mov
mov
je
fistps
pop
addr16
push
fld
xor
sahf
dec
jnp
mov
pusha
adc
lahf
loop
push
outsl
mov
lea
js
mov
out
int
arpl
lods
shrl
incl
jle
xor
gs
fistpll
lock
lods
mov
ret
jl
mov
lret
scas
pop
ret
adc
idivl
aas
gs
ror
cs
inc
pop
cmp
xchg
call
ret
in
jmp
mov
ud2
lea
jo
mov
push
mov
adc
jge
imul
push
shl
jo
sahf
cli
lods
mov
adc
inc
cld
lret
jp
adc
nop
mov
inc
push
lahf
jg
jae
lea
in
daa
jmp
fs
movsl
ret
mov
pop
in
outsb
fdiv
hlt
in
out
stc
or
fsubrp
clc
gs
mov
jmp
inc
mov
stos
loopne
les
adc
mov
cwtl
xchg
mov
xchg
mov
jle
gs
push
rolb
out
test
xchg
mov
es
mov
xchg
jecxz
dec
push
arpl
jne
imul
out
xor
les
insb
add
inc
fmuls
xchg
stos
pop
dec
push
jne
push
into
xchg
fisttpll
mov
or
sti
mov
push
mov
sbb
xchg
mov
xor
pop
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
mov
aaa
jo
stos
jle
jo
test
bound
mov
aas
mull
dec
jecxz
stos
jbe
mov
pop
sbb
movsb
mov
loope
jp
cmc
adc
mov
aaa
push
sbb
shll
fwait
and
cmpsl
lods
mov
pop
pusha
inc
and
and
adc
mov
sahf
or
les
into
inc
mov
fcmovnb
bnd
je
inc
pop
or
in
int3
fwait
das
les
and
sti
leave
lret
gs
popf
shrl
dec
dec
mov
adc
cld
mov
out
cmp
mov
and
pushf
pop
dec
leave
xchg
or
cmpsb
clc
adcl
dec
daa
and
cmpb
repz
mov
sti
dec
clc
mov
lea
out
in
test
fwait
add
adc
mov
movsb
xchg
dec
mov
fisubs
jl
and
cs
jmp
push
and
sub
rcrb
dec
enter
in
and
hlt
cmp
mov
repnz
es
cwtl
sbbl
jge
add
dec
out
cmp
or
insl
rcrb
or
int3
xor
mov
enter
or
dec
jb
test
pop
inc
leave
jns
and
or
ljmp
sbb
inc
dec
inc
mov
dec
jg
xchg
push
pop
testb
fisttps
or
fmulp
pop
mov
mov
stos
rcrb
dec
xlat
data16
mov
xchg
mulb
das
sarb
lcall
pop
loope
xchg
daa
cmp
adc
and
mov
xor
inc
outsb
cmpsl
xor
ret
xor
mov
in
xlat
cmpsl
jge
jae
pmullw
in
pusha
mov
scas
mov
lret
and
add
sarb
icebp
cmp
mov
pop
cmc
or
add
or
and
nop
stos
mov
cltd
xor
lret
jnp
test
out
idivl
movaps
cmpsb
pop
adc
jmp
sahf
into
fisubl
sti
jb
adc
and
push
xchg
js
inc
mov
repz
mov
sbb
ljmp
push
xlat
pop
sbb
cs
mov
mov
jg
jecxz
push
inc
fwait
cmp
adc
xor
xchg
adc
jg
push
and
sbb
jne
jno
cld
cltd
stos
inc
inc
movsl
cmp
neg
pop
dec
push
movzwl
and
mov
jmp
ja
and
dec
xchg
arpl
stos
jle
jo
into
or
rolb
inc
pop
inc
into
inc
outsb
inc
mov
adc
sub
movsl
es
leave
mov
push
shll
andl
out
and
shll
ljmp
jmp
sub
or
lcall
lret
cmp
in
adc
sbbl
pop
cmp
push
scas
xchg
imul
in
shr
and
fcmovu
inc
shrb
stc
and
add
popa
push
fstpl
push
sbb
lea
sub
aaa
sub
push
push
aad
adc
cmp
es
inc
sbb
lcall
lcall
inc
push
push
cmpsl
pop
imul
mov
dec
jg
cmp
mov
push
ja
and
cmc
outsl
imul
scas
add
mov
fstps
ljmp
aam
clc
xchg
pop
movsl
es
adc
aaa
rorl
mov
cltd
mov
sarb
mov
or
xchg
xor
andb
stos
leave
sti
jb
nop
dec
sub
scas
sbb
sub
sub
push
and
mov
jmp
pop
fisubs
adc
andl
push
ret
rcrb
iret
mov
mov
insl
mov
call
pusha
or
fldcw
adc
cmp
aas
adc
rorl
stos
repz
lcall
mov
adc
jnp
imul
jecxz
pop
inc
lret
aaa
or
mov
or
cmp
cmp
stos
dec
adc
aam
movsl
ret
nop
add
mov
adc
iret
cmp
dec
fdivrs
lea
mov
or
cmpsb
lock
pushf
sub
bound
pandn
in
outsl
adc
push
ds
cwtl
in
lds
xchg
out
and
bound
xchg
cmpsl
inc
mov
or
stos
mov
cwtl
gs
and
xor
adc
mov
outsl
iret
jnp
inc
sbb
pop
push
pminsw
fidivl
cs
hlt
mov
sub
lcall
xor
in
loopne
int3
test
fcmovnbe
xor
mov
mov
push
fcomps
into
mov
sub
cs
dec
dec
cmp
test
int
dec
movl
and
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
lret
xor
stos
jle
jo
or
movsb
jbe
sbb
dec
adc
scas
into
mov
cmpsl
fldt
addb
cli
jge
pop
inc
mov
adc
xor
fnstsw
ss
gs
fwait
push
dec
daa
sub
subb
fistl
pop
cmp
pushf
mov
mov
cmc
or
push
lcall
push
repz
xchg
lods
in
mov
ja
pop
inc
gs
mov
pop
inc
sub
fs
jg
test
pop
xor
mov
dec
mov
inc
pop
fdivrs
mov
adc
bound
cld
and
in
sbb
mov
and
insl
and
cmc
jge
add
pop
outsl
pop
out
stos
aaa
xor
jmp
or
cmp
movsl
push
stos
ret
loope
mov
ret
ja
pushf
cmp
ret
in
jmp
out
mov
es
mov
mov
inc
cmp
mov
or
movsb
fildl
idivb
or
out
mov
cmp
or
push
adc
adc
pop
nop
dec
or
adc
xor
pop
jle
mov
lret
jne
movsb
and
xchg
sub
outsl
fwait
test
repnz
in
xor
popf
mov
add
jp
mov
mov
sub
pop
stos
ret
dec
mov
ds
and
or
inc
xchg
inc
inc
fmull
inc
lret
xchg
and
sar
xor
popa
call
push
popa
xchg
xor
pop
cmpsl
leave
push
es
push
jl
jg
mov
pushf
mov
or
fistpll
xchg
sbb
pusha
add
daa
aaa
sarb
mov
add
add
stos
arpl
add
or
stos
test
mov
xchg
mov
stos
sti
cmp
jbe
mov
push
out
push
jl
xchg
jg
mov
inc
inc
hlt
sub
pop
inc
enter
or
inc
dec
loope
ljmp
sub
lret
pop
mov
xor
movsl
popa
scas
xchg
xor
sub
jbe
mov
xor
mov
mov
dec
sbb
cmp
or
je
or
scas
les
or
scas
xor
mov
cmpsb
dec
mov
lret
mov
test
cmc
xor
pop
dec
out
pop
shl
xchg
pop
sub
insl
pusha
enter
pusha
loop
add
js
jnp
out
xchg
jb
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
in
mov
aas
jo
cmpsl
jg
jo
mov
dec
adc
lea
dec
cmpsl
icebp
fldcw
arpl
bound
rorl
das
js
out
xchg
jb
xor
jmp
xchg
push
xchg
nop
ficoml
lds
mov
cs
lret
pop
sbbb
xor
xchg
testb
sub
add
subl
ljmp
push
stc
lods
xchg
rolb
shlb
ja
ret
cmp
xchg
or
and
subb
xlat
lea
add
lcall
icebp
notl
fs
inc
ret
xchg
xor
add
mov
lea
stc
movsb
sti
pop
aaa
lea
stc
cmpsl
adcl
test
add
xchg
sub
jne
mov
in
js
mov
lods
adc
xchg
xor
in
loopne
leave
jmp
dec
inc
addl
pop
je
fs
dec
mov
or
jne
fistpl
test
mul
repz
cli
ret
cmp
cmpl
pusha
insb
sti
pop
rcrb
jmp
mov
or
mov
icebp
adc
gs
mov
mov
outsl
push
and
in
sbb
std
jg
push
mov
lret
cmp
xchg
dec
mov
mov
inc
add
or
out
fnstsw
ss
push
addr16
jmp
repnz
pushf
jb
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
aam
jo,pt
cmpsl
jg
jo
loopne
movsl
xchg
pop
jle
sub
loop
adc
enter
mov
sub
and
push
fwait
int
test
xchg
inc
push
pop
insb
cwtl
fsubrl
jne
ret
test
mov
fs
jg
xlat
sub
mov
inc
scas
push
pop
pop
cmp
adc
scas
cmp
inc
jnp
mov
sbb
dec
aas
cwtl
in
pushf
cwtl
jg
xchg
test
clc
xchg
cs
push
clc
cmp
movsb
jp
retw
clc
je
sbb
repnz
cmpsl
jmp
fidivs
stos
dec
out
sti
imul
jle
leave
stos
insb
pop
mov
repnz
inc
cs
out
mov
sub
inc
call
sub
pop
mov
adc
insb
lea
mov
rorb
mov
adcb
ret
mov
lea
dec
add
int
negl
lock
push
adc
xchg
pop
push
mov
idivb
jae
loop
push
cld
insb
mov
cwtl
popa
mov
scas
sub
in
int3
sub
repz
jge
xor
jns
adc
push
inc
sub
add
pop
pop
add
ja
push
loope
addr16
inc
jg
int
aam
or
or
sub
jns
pop
aas
or
xor
jne
out
push
xchg
ljmp
test
inc
mov
and
sbb
xchg
adc
pop
ret
cmp
sbb
mov
inc
add
incb
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
push
dec
push
xchg
jo
rcrb
imul
std
adc
cmp
pop
pop
clc
je
mov
or
xor
pusha
out
int
popa
repz
lret
aam
int3
aas
adc
adc
adc
lret
xor
jp
mov
xor
xchg
leave
xchg
in
xchg
jmp
loope
clc
mov
fdivp
xchg
sti
mov
nop
in
xor
push
dec
ret
clc
iret
jnp
push
leave
mov
roll
sti
cmpb
sahf
hlt
jns
or
mov
dec
sub
push
insb
call
add
cmp
jnp
add
mov
mov
pop
xor
adc
cwtl
cmp
rorb
ret
mov
xchg
das
lods
xor
xchg
or
jge
les
push
jo
mov
pop
aaa
ja
sub
jecxz
int3
push
bound
sub
repz
mov
insl
dec
cmp
loope
je
mov
dec
add
mov
and
mov
jbe
pop
xchg
and
outsl
les
aad
sbb
test
int3
and
fwait
lahf
clc
add
mov
lret
add
inc
pop
xchg
addb
test
out
flds
mov
testb
test
adc
cld
sbb
clc
fmuls
xchg
add
or
fnstcw
sub
cltd
shl
mov
inc
lods
lret
hlt
pop
adc
int
clc
lret
imul
lahf
push
subb
movsb
cmp
xor
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
inc
lahf
dec
daa
xor
jo
loop
jo
sbb
jno
cld
jno
sahf
mov
push
xchg
xchg
out
repnz
in
lds
mov
cmc
cmp
and
jmp
push
test
xchg
out
add
jmp
lcall
pop
cld
sub
xor
inc
repnz
in
dec
out
mov
inc
imulb
hlt
bound
enter
mov
lret
jecxz
inc
out
cmp
cmpsl
push
push
mov
dec
int3
mov
fimuls
cld
ret
das
inc
das
xorl
pop
adc
pusha
imul
or
adc
push
aaa
into
mov
sti
xchg
into
js
mov
fisubs
mov
adc
repnz
loop
ss
dec
es
push
cmpb
pop
xchg
mov
and
nop
inc
sub
sub
sub
iret
inc
mov
insb
mov
jle
aad
cmp
repnz
push
push
inc
jbe
mov
fdivrl
int3
repnz
cmp
sbb
inc
inc
and
leave
fdivs
xchg
sar
lds
mov
jae
push
je
push
pop
sti
cld
fwait
dec
or
dec
and
xor
outsl
int3
inc
xchg
xor
adc
xchg
sar
test
mov
lock
pusha
dec
insb
push
shrd
mov
mov
mov
test
add
inc
in
into
sub
cmp
mov
or
je
test
push
test
cmp
mov
ja
hlt
cmp
out
sub
xorb
dec
test
mov
cpuid
jmp
fwait
gs
mov
pop
popl
cmp
xchg
or
dec
cmp
jmp
mov
and
repnz
subl
sti
add
enter
dec
loopne
inc
dec
and
sub
repz
cld
out
shrl
popf
aas
rolb
jae
test
mov
mov
mov
xchg
jl
rcll
or
cs
cmpsb
mov
shl
pop
inc
lods
pop
sub
mov
shlb
in
jp
aam
into
fidivrs
lahf
in
xor
lea
add
xorl
inc
or
ret
sbb
push
adc
add
sbb
add
and
add
jne
add
jnp
inc
add
jbe
add
gs
inc
add
rorb
inc
or
test
inc
or
xchg
add
sub
test
pushf
lock
add
cmp
loop
jo
sbb
jbe
stc
mov
scas
sub
dec
jo
dec
xchg
into
mov
mov
movsb
cmpsl
fwait
mov
leave
std
adc
stc
imul
scas
dec
add
pop
xlat
jmp
or
mov
add
mov
jp
loop
jl
cmpsb
std
jb
xlat
bound
mov
sahf
sahf
and
lds
dec
cmp
fidivl
mov
sbb
es
mov
mov
lods
and
sbb
jge
dec
pop
cmp
pushf
jo
aaa
xchg
or
mov
fs
cmp
ja
push
rorl
adc
mov
jb
cmp
mov
es
xor
cmc
jcxz
enter
in
xor
movsl
movsb
mov
sub
stos
into
bound
mov
pop
pop
jge
fildl
lods
push
fimull
addr16
push
mov
inc
loop
push
notl
sub
sbb
xor
inc
mov
add
xchg
mov
mov
gs
sub
in
leave
pop
pop
xchg
mov
dec
subb
popf
fsubrp
inc
pusha
sub
jno
cmc
xchg
cmp
je
mov
ds
out
jmp
fyl2xp1
mov
mov
sbb
mov
pusha
movsb
and
xchg
sar
fwait
andl
xchg
xor
rcll
fwait
sti
aad
lds
mov
jbe
xchg
test
sbb
fs
roll
add
xchg
cmpsb
adc
std
iret
sarb
pop
ret
mov
cld
int
das
shll
pusha
fmull
ljmp
sar
popa
push
insl
adc
dec
jae
inc
out
sbb
ljmp
cltd
das
shlb
dec
outsl
out
filds
fcoms
and
mov
ss
xchg
push
divl
mov
inc
nop
test
movsl
dec
ja
test
xor
imul
rorl
jcxz
push
and
mov
mov
test
push
mov
out
push
in
adc
js
mov
popa
cmp
add
push
bound
mov
shrl
mov
mov
cmp
push
lret
xor
rcll
aaa
rcrb
push
sub
mov
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
jg
out
lds
and
jo
sbb
and
mov
addb
lahf
lcall
pop
adc
xchg
shll
mov
add
insb
jp
fs
jae
out
jns
mov
shr
jl
adc
and
and
inc
xchg
adc
mov
dec
and
das
and
jb
xchg
dec
outsb
push
hlt
in
push
gs
inc
scas
mov
insb
ret
xor
push
aaa
test
lods
xorl
das
mov
insb
clc
in
xlat
cmp
test
dec
ror
out
or
add
insb
je
test
mov
push
clc
or
scas
imul
ds
sbb
jmp
dec
fwait
cmp
mov
or
outsl
js
inc
or
fistl
sti
xchg
sbb
outsl
ss
icebp
lods
mov
imul
mov
sub
xchg
in
push
stos
mov
adc
jno
and
jge
addb
fcomip
nop
cmp
fcmovbe
adc
in
push
mov
fstp
sub
jg
mov
outsb
mov
pop
lock
in
lret
cld
cmp
popf
imul
leave
pusha
sub
xor
jno
dec
pop
push
xchg
jecxz
aas
leave
and
sbb
aad
cmpsb
jbe
pop
and
and
insb
int
xor
les
in
and
jmp
adc
arpl
jo
adc
mov
test
push
xchg
cmp
lret
ss
jge
mov
fidivs
inc
mov
stos
out
lods
inc
adc
imul
pop
imulb
lret
mov
add
mov
adc
ljmp
fwait
mov
push
pop
pop
jo
adc
and
aam
into
cmp
fstpt
icebp
push
mov
cmp
cld
cwtl
out
arpl
push
leave
mov
add
out
mov
fwait
xchg
jo
popf
outsb
movsb
mov
out
lahf
dec
or
xchg
push
adc
ds
lahf
mov
scas
sahf
shrl
and
ret
rclb
cmp
pop
test
sub
fisttpll
push
sub
test
les
sbbl
pop
addl
mov
mov
or
mov
jne
fwait
cli
icebp
xlat
push
mov
sahf
cwtl
std
jns
test
push
mov
lods
pusha
loop
xor
fwait
adc
pushf
mov
add
add
lea
and
sbb
loope
push
xor
lahf
loop
icebp
jle
push
sub
adc
push
jl
xor
mov
sub
aas
jle
push
pop
stos
and
fmul
dec
fsubr
inc
pop
inc
je
cmp
test
jno
sub
sti
mov
fs
mov
jecxz
jle
leave
mov
mov
pop
movsl
test
nop
inc
fimuls
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
ret
and
jo
and
pop
outsb
arpl
push
sbb
pop
out
dec
popf
fsubl
adc
jmp
fisttpll
lock
sub
je
adc
out
test
call
push
and
test
dec
mov
sbb
lods
subb
or
jp
lret
push
fwait
cmpsl
mov
xchg
mov
int
and
xorl
out
cmc
bound
or
into
pop
jns
xor
or
sub
fcoms
xor
test
inc
jo
add
jle
rclb
jne
cs
mov
lea
je
jl
cli
ljmp
fstpl
dec
packuswb
add
ds
xchg
mov
cmp
inc
call
out
scas
push
mov
jle
xchg
cmp
inc
mov
dec
mov
or
insb
cmp
push
sbb
push
pop
insb
cmp
or
jae
jne
cmp
adcl
sti
mov
inc
and
pop
dec
dec
mov
movsl
jecxz
scas
cwtl
in
lea
inc
dec
stos
enter
or
or
nop
ret
scas
or
cld
call
jns
in
cmp
add
jmp
mov
in
and
pop
or
out
add
adc
inc
sahf
ret
in
popf
daa
dec
lock
rorb
jl
ljmp
out
xor
xor
xlat
cmpsb
lret
clc
call
call
xchg
idivl
ret
fmull
push
or
test
cmc
sub
cld
int
sbb
in
inc
bnd
movsb
inc
lods
push
inc
and
or
mov
stc
outsl
jmp
push
std
push
jnp
gs
cmp
dec
pop
cmp
sub
ss
mov
xchg
test
xchg
adc
or
leave
insb
movsb
test
adc
hlt
cmp
xchg
pusha
insb
xor
mov
movsb
inc
vpslld
js
imul
pop
push
cmpsb
xor
das
idiv
shrb
inc
ljmp
inc
mov
or
stc
xlat
sarl
sub
mov
add
aam
movb
adc
pop
mov
bound
pop
sub
adc
fistpl
fisubl
mov
pop
and
lahf
repnz
ret
std
out
rclb
xor
sbb
push
sbb
mov
ljmp
fldz
cmp
dec
loope
clc
or
std
fcomps
stos
or
les
xchg
push
mov
push
test
ja
dec
pop
mov
or
sbb
mov
and
test
ljmp
aas
ror
lret
mov
inc
or
jae
repnz
fnstsw
lea
and
or
imul
or
insb
les
or
add
and
add
movb
notb
add
movl
add
in
test
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
and
jo
and
jo
ret
punpcklwd
das
stos
mov
and
dec
sub
push
cld
cmp
inc
mov
mov
adc
or
jle
mov
mov
inc
push
mov
in
and
leave
lahf
dec
jp
lods
and
lods
imul
cmp
aaa
xor
jge
mov
jg
rol
cmp
daa
fidivrs
pop
subl
pop
xor
mov
fsubs
cmc
xchg
mov
rolb
jp
mov
in
pop
shlb
aas
out
idivb
cmp
lea
arpl
mov
lods
js
outsl
push
pop
sub
sti
clc
xchg
or
sub
adc
aam
pop
roll
dec
xchg
mov
cld
daa
adc
dec
fdivl
call
push
out
adc
pop
ficompl
testb
fimull
mov
cltd
jns
sbb
and
cld
int3
adc
mov
pusha
cld
ja
xor
push
mov
popa
mov
nop
dec
push
cmp
loope
repnz
rcr
out
mov
add
inc
pop
xchg
pop
sub
mov
stc
shl
pusha
mov
push
loope
cltd
out
push
adc
add
dec
or
push
in
cwtl
sbb
mov
cld
out
test
xchg
sbb
and
addr16
mov
fadds
in
pop
cmp
fdivp
sub
stc
and
sub
push
mov
mov
jp
dec
jbe
inc
in
fdivrs
jp
fimuls
push
into
test
inc
mov
inc
sub
out
sbb
mov
add
rcl
stos
push
mov
pop
in
xor
mov
jne
mov
or
jmp
ret
mov
test
faddp
popa
nop
add
negb
aad
fisttpll
push
clc
pushf
xor
adc
insl
sti
mov
inc
and
outsb
adc
mov
into
arpl
jl
add
push
sub
mov
or
inc
lock
mov
sahf
mov
stos
and
shlb
mov
or
mov
jecxz
insb
inc
popa
sbb
sbb
dec
adc
jnp
lock
popf
aam
out
cmpsl
or
es
scas
sbb
out
mov
sbb
push
pop
pop
pushf
inc
fldl
sub
jge
cmp
movsb
test
movsl
out
popa
aam
push
mov
cli
lock
popf
stc
and
push
in
popa
iret
push
jbe
fisubs
dec
lock
xlat
and
sbb
jno
jb
daa
fstpl
xorb
popf
insb
push
test
arpl
mov
mov
add
sub
jo
xrelease
gs
je
jle
out
sbb
sbb
cmp
push
lret
xor
add
fdivl
jg
push
and
outsl
aaa
xchg
loopne
add
cli
popf
mov
add
sub
xor
out
inc
fdivl
movb
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
ja
mov
int3
jo
and
jo
test
sub
addb
lret
shl
sbb
call
sarb
cmp
add
in
mov
mov
ja
aad
dec
mov
mov
repz
mov
add
cmp
inc
lcall
insl
sbb
popf
cmp
out
cmpsb
loope
cwtl
mov
and
push
lahf
sbb
xchg
data16
inc
xchg
lock
imul
imul
pop
cld
sqrtps
xorb
sbb
inc
push
jb
stc
idiv
data16
pop
pop
or
xor
adc
mov
sarb
fwait
dec
xor
sub
int
or
sub
pop
daa
sub
repnz
or
sbb
sub
insl
sar
push
dec
andl
and
imul
ret
in
xchg
xor
lock
loop
xorb
sub
cmc
ds
mov
in
test
lods
mov
sbbl
fmull
dec
add
add
repz
pop
sub
cltd
ss
punpckhdq
mov
mov
ss
fmuls
xchg
sbb
sbb
push
shlb
mov
mov
dec
mov
pusha
addl
shlb
push
pop
inc
mov
inc
mov
cmp
gs
aas
push
fcoml
dec
enter
rcrb
js
lret
leave
out
mov
xchg
mov
hlt
out
pop
stos
add
lds
mov
stos
push
lahf
xor
dec
sub
push
sarl
inc
mov
les
pop
lret
clc
and
inc
xor
sarb
inc
jmp
jae
sub
sbb
add
pushf
and
fs
xor
mov
in
movsb
imul
xor
push
int3
jmp
imul
mov
mov
inc
sub
or
rcr
or
inc
xlat
add
or
mov
push
and
out
jmp
sub
rclb
adc
sbb
push
jnp
mov
loopne
std
push
jg
scas
es
pop
fiadds
scas
sahf
in
and
cmpb
call
jbe
mov
outsb
cltd
sub
add
popa
fistl
mov
jo
sbb
cmpl
addl
shr
add
jl
popa
mov
ja
inc
clc
jp
cmp
sub
mov
pushf
fcompl
fstl
push
leave
fisubrs
jbe
les
in
mov
mov
fnstenv
test
dec
pop
arpl
test
sbb
inc
inc
je
or
fcmovbe
or
push
lds
mov
add
call
inc
sub
or
out
pop
out
sahf
and
testl
nop
lds
ss
int3
shll
test
xchg
adc
pop
lret
mov
xor
movb
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
int
mov
and
jo
test
outsl
aad
and
xchg
into
and
pop
cmpsb
outsb
sbbl
xchg
jecxz
movsl
or
sbb
xchg
popf
dec
cmpsb
mov
push
adc
xor
mov
jbe
mov
dec
test
push
test
dec
leave
out
fwait
push
ficomps
mov
lock
ljmp
comiss
cmp
adc
test
pop
mov
mov
orb
dec
cmpsl
and
pop
fsub
jle
xchg
frstor
xor
repz
and
shlb
ficomps
inc
lahf
add
sub
mov
adc
push
fs
lahf
clc
cli
mov
pop
arpl
lcall
sub
int
push
adc
sub
aaa
sbb
cmp
frstor
push
jae
xchg
mov
mov
ds
imul
inc
scas
dec
test
dec
and
lods
or
daa
dec
adc
aad
cmc
mov
stos
lret
mov
cltd
dec
aaa
repnz
push
inc
mov
stos
push
jo
rorl
add
pop
xor
mov
pop
andb
pop
mov
xor
cld
push
lods
movsl
sbb
ret
xor
xchg
xchg
and
out
test
mov
bound
mov
dec
je
mov
or
cltd
rclb
xchg
roll
cmc
adc
test
pop
push
add
jae
cmpsb
push
rorl
sbb
ds
sbb
cmp
mov
cltd
out
or
pushf
cltd
popf
xchg
sbb
cmp
mov
call
gs
das
xchg
cli
mov
cs
cmp
shll
xor
pop
jp
jl
pop
mov
pop
dec
in
imul
sub
inc
cwtl
mov
mov
jns
fdivp
ja
mov
loopne
test
xchg
pop
imul
or
or
movl
enter
cmp
fwait
lds
sub
add
ror
test
inc
xor
pop
sub
or
xchg
inc
xor
loope
stc
xchg
fs
mov
add
ljmp
cltd
pop
mov
cli
cmp
xor
pusha
lahf
fwait
lret
pop
insb
mov
adc
jno
bound
repz
pop
out
mov
and
mov
cmp
add
dec
cmp
push
add
xchg
aad
stos
sbb
adc
and
add
xor
sub
pusha
popl
leave
fiaddl
stos
sbb
jmp
cmp
aaa
fdivl
lcall
push
mov
mov
notb
nop
cmovle
fwait
add
fisubl
data16
cmpsb
inc
pop
or
daa
xchg
imul
xchg
pop
sub
into
fisttpl
test
pop
mov
xor
or
outsb
xor
scas
shr
in
std
out
pop
xor
arpl
or
clc
das
call
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
popa
lret
pop
aad
jo
jge
jo
nop
push
and
mov
es
push
xor
sbb
mov
lea
popf
dec
inc
repz
sbb
mov
dec
jmp
cs
and
mov
fldcw
sahf
xchg
lret
xor
pop
add
cmp
popf
ss
shrl
mov
push
dec
jbe
bound
leave
xor
xchg
mov
pop
push
inc
xchg
pop
mov
cmp
fadds
cmp
or
test
sub
push
mov
jg
mov
lahf
les
xchg
sub
mov
movsb
sbb
test
inc
data16
xor
push
or
enter
adc
xchg
mov
aad
pop
jmp
mov
xlat
daa
or
orb
nop
sbb
sti
mov
sub
pushw
push
fsts
add
and
orb
xor
movsb
jl
bound
pop
sbb
or
or
out
fs
pop
ret
cmp
pop
mov
aas
fisttps
jle
mov
lret
ja
push
pop
dec
mov
je
cmp
adc
movsl
jo
jbe
outsb
jl
aas
pop
test
scas
cmp
pop
mov
push
in
mov
cmc
ret
es
xlat
push
inc
inc
test
and
mov
fdiv
shlb
int
sbb
xchg
movsb
sub
movsl
out
mov
sub
cmp
sarb
ficoml
fldt
or
jmp
notl
mov
cmp
cmp
xchg
aam
insl
mov
cld
aad
adc
cmpsl
jmp
lcall
lods
jmp
mov
jge
jmp
or
std
scas
mov
lretw
mov
not
cmp
dec
andl
fldt
ret
fildll
xchg
subb
mov
mov
dec
aad
mov
lret
xor
cltd
sub
fucomp
and
in
adc
xchg
stos
xchg
mov
xchg
mov
inc
mov
push
cmp
fisubrs
aad
push
xor
stos
out
shll
cmp
testl
sbbb
jae
ds
in
xchg
lds
arpl
jno
xchg
add
dec
iret
imul
scas
lcall
shlb
ljmp
mov
cmp
mov
sbb
cltd
sarb
icebp
nop
push
les
mov
sbb
cmpsb
stc
pop
and
pusha
or
sub
dec
xchg
or
in
add
aad
inc
nop
lret
cmc
leave
mov
sub
mov
cmpsb
sbbb
out
push
jae
dec
jo
add
mov
fcoms
lea
pop
insl
sub
pop
movsb
xlat
pop
sar
cs
lods
inc
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
mov
shlb
and
jo
cmp
pop
xor
pop
pusha
mov
lcall
push
and
sbb
cmp
and
mov
jl
rclb
xor
xchg
sti
sbb
xchg
mov
lods
add
adcl
jecxz
pop
inc
popa
movsl
pop
cld
bound
ror
xor
add
aas
int
sbb
fsub
mov
movsl
push
scas
rol
ds
ds
add
cs
je
fcoms
pusha
xor
sub
cmp
movsl
in
mov
pop
push
in
mov
pop
shlb
cmpsl
adc
dec
fistpll
fdiv
inc
cmp
addr16
jns
fcomi
mov
in
pop
add
adc
sahf
xor
lds
scas
mov
fisttps
nop
mov
pop
dec
outsl
test
rcll
pop
jns
stc
data16
dec
sahf
cmpsl
add
add
cs
cmp
insl
pop
push
jns
test
imul
test
xlat
jbe
vmread
xor
xchg
mov
enter
add
pushf
xorl
fs
mov
call
push
dec
lret
fstpl
pop
out
dec
mov
mov
push
xlat
xlat
xchg
push
or
xor
sub
jmp
xchg
xchg
inc
arpl
addr16
xchg
mov
xchg
mov
rorl
pop
fwait
pop
shl
jb
lret
gs
adc
pop
sbb
fsubs
jb
mov
adc
push
or
inc
push
pop
jb
jae
xchg
fsubp
pop
fidivrl
nop
mov
add
fildll
call
sub
mov
dec
loope
das
js
mov
adcb
xorl
enter
imul
pop
mov
or
lea
cmp
or
or
add
test
xchg
inc
inc
jne
dec
sub
lea
add
mov
cwtl
jle
call
mov
mov
mov
sbb
gs
ret
xor
push
lcall
scas
xor
cmp
inc
jnp
aas
add
mov
mov
jmp
jmp
mov
or
mov
sti
or
add
sar
stos
sbb
xchg
es
hlt
arpl
hlt
dec
jb
push
pop
mov
sub
test
add
push
imul
pop
sbb
mov
movsb
mov
mov
in
mov
dec
out
adc
rsm
repz
loopne
mov
lods
mov
and
js
mov
mov
jb
inc
in
fwait
lods
jae
fdivrs
stc
mov
out
mov
stc
ficomps
mov
sub
mov
push
jae
add
insl
mov
test
fprem
push
je
sbb
xchg
mov
imul
dec
add
add
fisttpl
jp
xchg
mov
out
jo
and
jo
jne
or
cmp
jnp
subl
push
repz
das
jecxz
test
mov
pop
xchg
mov
push
dec
mov
adc
sahf
ret
cmp
inc
pop
out
fnsave
or
insl
adc
dec
push
push
mov
lret
sub
mov
mov
inc
sarl
and
cmpsl
int3
add
repnz
cltd
push
addr16
popa
mov
add
inc
orb
testb
jbe
cmp
shlb
ds
pop
in
lret
popa
insb
jg
and
jmp
je
or
loope,pt
dec
addb
imul
lret
adc
pop
aam
add
leave
jmp
lea
hlt
add
push
jecxz
inc
and
jge
cli
dec
add
popa
xor
cld
scas
cwtl
xor
shrl
mov
outsb
leave
jmp
idivb
scas
mov
jmp
adc
es
adc
mov
mov
mov
mov
aam
mov
and
mov
inc
cli
sbb
add
dec
test
lea
ja
push
push
xorl
neg
push
jae
out
mov
mov
in
mov
movsl
mov
out
outsb
repz
pop
xchg
sbb
or
jae
iret
push
push
push
adc
fldt
sti
pop
fsub
sub
test
inc
aad
push
push
jg
ret
clc
inc
loope
dec
test
jbe
pop
shrl
out
add
or
pop
stos
xor
out
fcomps
mov
xor
and
inc
xor
mov
mov
mov
daa
pop
push
pop
adc
inc
iret
jl
add
pop
int3
aaa
insb
or
cmpsl
add
xorb
jae
sti
roll
stos
in
out
loopne
jle
lret
outsb
jmp
pop
lds
imull
shrl
lcall
mov
ja
repnz
enter
arpl
jmp
repnz
hlt
out
mov
jb
mov
and
pop
out
movsb
pop
rorl
insl
dec
in
sub
rorl
mov
roll
mov
fidivrs
lds
sbbl
movsb
push
int
mov
nop
cltd
aad
xor
test
mov
cmpsb
sub
scas
mov
cltd
xor
sub
fwait
es
into
decb
fsubrp
fsubl
lods
imul
cltd
mov
movsb
xor
pop
ss
bound
and
push
push
sub
fabs
push
cmp
mov
jo
ds
and
lock
aad
pop
or
ret
stos
add
xor
test
mov
push
daa
fists
push
movsb
enter
mov
mov
push
xor
cli
out
push
mov
jb
mov
push
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
and
cmp
fdivl
and
jo
jge
js,pn
out
daa
jo
in
cltd
add
and
or
ret
xchg
cs
jmp
pop
mov
test
out
jae
stos
inc
xchg
loop
cmp
fadds
mov
insb
adc
mov
sbb
push
jnp
add
sti
and
repnz
or
xor
fadds
js
mov
and
lcall
push
mov
adc
into
addb
add
mov
xor
mov
fistpl
add
aaa
xchg
pop
shlb
pop
xor
enter
in
in
inc
sbb
lds
rorb
push
mov
pop
aam
inc
call
and
lds
lock
cmp
adc
sbb
cltd
or
mov
sbb
scas
adc
aad
and
jmp
imul
inc
std
mov
data16
das
sbbb
arpl
lret
dec
mov
ljmp
jg
into
pop
imul
inc
mov
jns
xchg
sub
cmp
and
sub
cli
cld
fsubs
lret
imul
or
popf
int
jle
hlt
sub
js
push
dec
push
dec
test
dec
and
sub
popf
mov
pop
mov
fstpl
and
enter
mov
xor
jb
mov
decb
ret
mov
mov
loopne
jp
loopne
inc
xor
gs
push
and
shl
push
rol
popf
movsl
xchg
ja
xchg
xor
push
sti
lods
movsl
bound
jns
mov
push
addr16
xchg
jnp
cmp
add
andb
or
sbb
xorl
xor
ret
cli
lea
mov
fidivrs
mov
xlat
inc
or
pop
in
ret
mov
lret
inc
imull
mov
cli
rcl
pop
outsl
cmp
pushf
or
inc
sub
pop
rorl
mov
sbb
and
rol
fdivs
xchg
pop
pop
jp
jne
adc
in
aas
cltd
fucomi
imul
mov
roll
inc
test
je
push
mov
pop
mov
popa
mov
adc
fsubp
sbb
test
fcoml
outsl
and
fistpll
fcoms
dec
jb
mov
shrl
outsl
ret
add
xchg
outsb
out
mov
jl
stos
fadd
sti
xchg
mov
pop
in
mov
and
sbb
movb
push
call
pop
addb
mov
mov
dec
mov
inc
ds
stos
ds
mov
insb
cmpsl
pusha
sub
and
push
out
cmp
dec
shll
ret
movsl
and
jne
push
jbe
int
inc
ret
repz
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
outsl
inc
fnstenv
and
jo
sbbl
push
cld
es
psraw
mov
leave
in
in
or
inc
mov
or
pushw
mov
dec
gs
js
pop
fstl
lea
xor
orl
jno
adc
popa
fisubrl
in
cmp
push
push
dec
mov
pop
jge
sarl
in
data16
lcall
push
sbb
adc
mov
test
in
add
mov
push
push
cmp
out
push
jae
int3
mov
fwait
mov
push
adc
icebp
loop
mov
iret
aam
mov
stc
mov
or
lcall
idiv
mov
jb
jb
push
inc
mov
cmpsl
test
push
adc
std
inc
shrl
stc
clc
adc
ret
arpl
mov
sar
sahf
jmp
mov
clc
sbb
mov
test
imul
incb
and
pop
pushf
jne
push
aad
adc
dec
fwait
movl
into
jno
test
pop
fcomps
icebp
push
iret
cmp
sahf
xchg
gs
mov
adc
or
mov
or
sbb
cmp
xor
pop
mov
out
xchg
sub
loopne
and
push
call
shll
push
ds
popl
inc
and
shrb
insl
pop
cmp
in
cmp
adc
mov
mov
xor
push
and
test
in
inc
repnz
add
pop
pop
mov
sbb
sbb
in
or
int
cwtl
dec
pop
adc
js
inc
pop
cwtl
lret
test
xlat
cwtl
sub
push
pop
pop
clc
ljmp
lea
lcall
jle
cmp
jae
dec
aam
inc
insl
fdivrl
or
cld
cmp
jle
jg
mov
mov
mov
fidivl
push
xchg
neg
fs
mov
inc
xchg
gs
adc
sbb
stos
adc
pop
es
adcl
adc
addl
mov
sub
pop
adc
jnp
inc
clc
shll
jmp
shr
std
mov
pop
cwtl
lret
xchg
in
out
sub
push
mov
lock
fcompl
addb
pushf
or
add
xchg
sub
push
mov
int3
adc
popa
aaa
dec
sbb
jo
jge
mov
imul
pop
jmp
fwait
sbb
icebp
xor
mov
add
cmpsb
sub
jge
test
pop
mov
loope
xor
aam
sub
push
xchg
scas
fwait
pushf
xchg
and
bound
in
sti
lods
or
mov
test
add
pop
incb
ds
cld
stos
inc
add
subl
cmc
adc
xor
add
dec
add
add
out
out
xor
call
ja
pop
ja
jo
and
jo
sub
dec
jp
mov
dec
and
fisubrs
xor
in
dec
sbb
call
add
adc
mov
lret
sti
push
xor
ja
fsubs
or
daa
mov
or
add
arpl
or
dec
or
movsb
aaa
mov
pop
mov
dec
pop
push
ret
push
addr16
and
pop
cmpsl
inc
pop
daa
jmp
imul
push
ljmp
aaa
aam
pusha
xor
dec
mov
jg
repz
faddp
pop
sbb
in
ljmp
call
mov
jl
sbb
or
les
xor
scas
mov
and
jecxz
mov
jne
les
xchg
aaa
lea
test
adc
cmp
stc
in
idivb
dec
xor
or
popf
push
roll
orl
or
jecxz
mov
jo
jo
mov
leave
addr16
incl
into
imul
leave
push
dec
std
inc
movsb
xchg
sbb
push
or
iret
push
inc
jg
push
dec
sub
and
out
push
test
out
decb
mov
mov
and
jns
cli
sbb
out
mov
and
cmpsb
cmp
ljmp
push
xchg
mov
mov
push
test
mov
pushf
aam
aaa
xor
mov
imul
adc
mov
mov
ficomps
pushf
int3
gs
xor
pop
mov
pop
or
pop
lds
push
adc
imul
cld
sub
xor
inc
andb
mov
cmpsb
outsl
test
xchg
xchg
mov
scas
push
jecxz
pop
stc
dec
in
int
ss
add
ret
push
pop
sub
iret
jp
filds
dec
dec
aad
sbb
scas
test
sbb
fwait
jbe
inc
fisubrl
mov
sbb
xchg
or
inc
stos
data16
fistl
jb
out
sub
test
les
out
adc
subb
fwait
pop
shr
adc
out
mov
iret
out
push
jmp
xchg
inc
lahf
cmp
push
add
out
jle
mov
jecxz
in
daa
and
call
mov
icebp
and
sbb
push
sti
mov
mov
sub
lods
gs
fistpl
inc
push
mov
pop
movsb
cmp
cli
imul
xor
rcr
nop
orb
cmp
fiadds
push
xchg
sub
mov
lods
or
jp
cmc
cmp
icebp
cmp
in
out
push
mov
in
cmc
push
fldenv
lahf
movsb
mov
cmp
xchg
bound
cmp
dec
mov
push
sub
daa
push
or
call
push
in
pop
or
inc
fs
xor
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
lods
subb
jo
roll
mov
movsb
lods
cmpsb
pop
jp
add
sbb
mov
daa
scas
push
or
add
cmp
shlb
aaa
xor
sbb
mov
popf
sbb
xchg
sub
cmp
push
xchg
sub
icebp
cs
sbb
mov
mov
xchg
addr16
mov
adc
pop
dec
fisttpl
mov
leave
gs
in
pushl
sbb
xchg
cs
adc
xchg
jg
hlt
pop
sub
ja
fwait
push
call
xchg
outsb
push
mov
adc
push
test
cli
jmp
jg
sbb
mov
fildll
sbb
mov
in
mov
lret
mov
or
push
out
xchg
xor
in
dec
mov
cmp
movsl
cmp
xor
mov
bound
sti
or
push
iret
lcall
push
mov
cld
fistps
iret
mov
and
imul
ret
mov
sub
mov
negl
out
jp
cmp
cmc
insb
test
negb
lret
jp
mov
test
sbb
and
and
cmc
fs
es
addr16
jge
dec
xor
or
or
cmp
js
stos
inc
jecxz
xor
rcl
inc
hlt
imul
lods
dec
cmc
stos
push
rcll
adc
push
or
pop
xlat
cmp
xor
push
add
fdivr
negb
xor
sbb
sbb
lret
out
test
and
xchg
jbe
jecxz
cs
out
sub
mov
lret
inc
addr16
push
stos
xchg
mov
push
jg
dec
and
out
aam
add
stos
add
mov
cs
pop
adc
repz
sbb
xor
lcall
mov
sub
dec
xchg
xor
push
in
mov
leave
or
ficompl
mov
nop
int3
stc
leave
cmp
popa
dec
flds
xor
push
pop
inc
pop
jl
xor
insl
cmpsb
mov
xchg
jecxz
ret
stc
inc
cli
pop
sub
xchg
out
cwtl
int3
movl
roll
loop
jge
xor
mov
xchg
adc
iret
scas
adc
sbb
mov
xchg
fnsave
gs
out
mov
lea
add
xchg
out
jg
stc
sbb
xchg
cwtl
push
ss
cmp
push
ljmp
mov
cld
jle
sub
dec
loopne
push
cmc
mov
in
mov
mov
xchg
dec
sub
imul
mov
or
test
negb
sahf
dec
inc
subl
xchg
inc
cs
lods
test
jns
jne
outsl
test
and
xchg
out
push
std
xchg
cmpsb
dec
push
sbb
into
mov
sbb
push
pop
or
mov
adc
call
mov
mov
jmp
out
mov
ja
add
xchg
out
jo
and
jo
push
dec
adc
cmpsl
rol
jo
ljmp
mov
cmc
sarl
das
lock
add
imul
add
test
fisttpl
dec
dec
xor
push
inc
fisubrl
js
nop
shlb
cmp
lods
negb
bound
lret
jp
sub
test
fidivrs
sub
icebp
and
mov
bound
jnp
js
stc
and
out
xchg
mov
sahf
gs
inc
bound
inc
std
daa
je
inc
jmp
xorps
pusha
scas
addr16
mov
pop
adc
popa
jecxz
movsb
xchg
cld
xchg
jae
mov
xor
imul
stc
fdiv
pop
xchg
sub
mov
jg
lds
xchg
aas
dec
push
or
mov
pop
dec
or
jmp
adc
faddl
pop
push
mov
int3
mov
adc
or
or
xchg
add
sub
add
jge
jp
clc
add
aad
fs
divl
add
adc
or
dec
js
aam
xchg
ret
mov
pop
in
mov
mov
and
dec
xchg
lret
add
pop
aas
aaa
clc
add
or
shlb
mov
and
adc
cltd
imul
push
sbbb
dec
xchg
shlb
jl
xchg
xchg
daa
scas
dec
or
or
mov
cmpsb
sub
sub
cmpsb
dec
movsb
pop
sarb
and
call
mov
lret
fmul
or
les
jne
das
pop
loope
cmp
in
cli
jmp
add
aam
gs
js
bound
shr
jecxz
fidivrl
addb
xor
jns
fdivrs
mov
loopne
stos
xor
dec
mul
xchg
pop
das
sbb
adc
mov
push
fs
gs
pop
pop
xor
add
and
outsb
outsl
in
out
fcoms
lret
adc
pop
ja
xchg
mov
xor
mov
in
mov
ds
lock
jmp
push
enter
push
test
adc
movsb
push
sub
dec
sub
cmp
fisubrl
sbb
sar
adc
test
out
fstps
gs
mov
adc
xchg
inc
adc
add
and
popa
lods
movsb
lahf
sarl
or
xlat
jbe
mov
roll
xchg
add
mov
mov
xor
push
push
and
rcll
sbb
inc
xor
into
in
in
pop
jo
xor
frstor
int3
push
popf
test
mov
jg
int3
sub
test
aam
shll
lret
movsb
movsb
xchg
cmp
inc
popa
and
sbb
loope
add
xor
out
imul
lods
push
dec
rcll
push
or
ds
movb
enter
xchg
adc
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
imull
jbe
xchg
jo
lahf
jge
jo
enter
pop
lahf
test
fstpt
add
push
cs
xor
sub
inc
divb
clc
jle
xchg
lods
sahf
push
jmp
pop
sti
add
inc
stos
push
out
jge
lods
mov
mov
movsb
movd
int
push
out
or
jnp
or
sbb
mov
lahf
out
lds
pop
mov
mov
mov
clc
inc
fistpl
repz
pop
icebp
subl
inc
push
jge
lods
cmc
lds
shrl
mov
add
jb
push
lea
sbb
js
inc
test
mov
int
outsl
bound
lret
mov
cmpsl
cmp
mov
jns
jmp
sbb
les
mov
idivl
pop
sarl
or
push
jnp
or
xlat
jmp
repnz
insl
and
lret
dec
sbb
xchg
xor
add
or
mov
cltd
push
dec
jno
mov
fisttpll
cmp
or
dec
dec
push
cmc
sbb
push
jle
clc
repz
mov
inc
sub
imull
pop
and
ds
mov
les
push
adc
sub
sti
inc
ret
loopne
push
nop
outsb
pop
pop
mov
inc
andl
add
scas
sbb
das
dec
or
pushf
sbbl
xchg
pop
cmp
mov
inc
ds
stos
cld
dec
mov
repz
dec
sub
xorb
or
pop
sahf
mov
fstpt
out
or
jg
in
sub
push
fcomip
xchg
aas
movsl
xor
sar
outsb
adcl
pusha
cmp
mov
jae
insb
mov
dec
std
add
mov
mov
shll
rcrl
cmpsb
xchg
adc
iret
xor
inc
fs
and
mov
stc
add
into
mov
sbbb
and
push
daa
faddl
push
aas
mov
inc
fidivrs
jle
xchg
js
xchg
cmc
dec
and
stc
push
and
dec
pusha
popf
and
push
pop
sbb
out
mov
out
jle
int
pop
pop
cmp
and
mov
jns
push
lahf
mov
sub
inc
add
push
cmpxchg
pushf
mov
pop
push
fcoml
mov
dec
xor
xor
sub
stos
push
sbb
mov
adc
je
dec
bound
cltd
movsl
outsb
adc
pop
ds
or
nop
rcrb
and
cwtl
loope
push
inc
ss
or
pusha
sbb
adc
jns
insb
push
arpl
pop
aad
jp
pop
mov
test
ds
mov
stos
addr16
loope
inc
rcrl
insb
ss
hlt
int
jg
push
add
xchg
je
adc
insl
cmc
in
add
cmp
orps
xor
xchg
jle
add
sbb
dec
pop
roll
lret
sbb
dec
mov
cli
ljmp
into
movsl
pushl
sub
inc
mov
cmp
call
sbb
mov
cmp
mov
arpl
fidivl
sti
cld
mov
jmp
inc
sbb
enter
test
movsb
jno
out
filds
cmp
ficoml
divb
jb
std
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
in
mov
jo
lahf
jge
jo
fisttpl
fldl
ja
ja
fwait
dec
mov
jecxz
out
cmp
int
mov
cmpl
mov
push
push
rol
pop
adc
mov
push
aas
inc
sbb
test
xor
add
jns
addr16
adc
xor
cmp
jl
sahf
adc
pop
dec
add
pop
mov
jb
and
lret
pop
fcomps
pop
push
inc
pop
xchg
push
sbb
lods
xorb
cltd
xchg
sub
fwait
scas
push
popa
adc
testb
fisubl
or
jae
test
jecxz
lret
arpl
inc
mov
imul
sbb
push
push
jge
and
data16
sub
enter
cmp
inc
repnz
out
push
xor
adc
or
mull
jecxz
out
dec
mov
in
dec
sahf
jle
mov
xchg
idiv
and
pop
sub
data16
outsb
push
dec
pop
pop
xchg
sbb
sub
rcl
push
jl
in
xor
sub
pusha
mov
jno
mov
lods
add
jecxz
mov
cli
decl
cmp
das
jns
pop
push
aas
cwtl
jns
stos
sub
sbb
mov
fwait
sub
mov
push
lods
dec
jo
dec
jg
xchg
je
sub
and
ret
ret
mov
psubusw
scas
sbb
in
cs
sbb
sub
cmp
mov
gs
mov
push
pop
cmp
xchg
inc
nop
dec
dec
or
xchg
sub
imul
mov
aaa
iret
rolb
inc
mov
adc
leave
jae
and
mov
scas
es
and
jecxz
loope
rcrb
repz
ja
xchg
lea
dec
fs
jecxz
pop
jns
lcall
fchs
les
push
pop
je
fs
jp
loop
cmp
lods
pop
jno
xchg
incl
push
or
sbb
enter
cmpsb
add
mov
hlt
mov
fnstenv
inc
mov
sub
xor
dec
mov
call
fldcw
sbb
sbb
in
mov
roll
and
rcrb
mov
xchg
call
fiaddl
clc
push
ss
push
ljmp
adc
sub
clc
imul
popf
jae
sbb
out
out
mov
xor
addr16
lret
mov
adc
sub
push
push
fdivl
push
push
imul
movsl
mov
cmc
es
inc
js
mov
das
test
or
dec
rcll
cwtl
gs
stos
and
cmp
mov
mov
addr16
jmp
popa
addr16
xor
adc
test
fs
sarl
cli
fwait
or
sbb
lock
fsubp
pop
call
lds
or
hlt
pop
stc
push
inc
ret
adc
adc
dec
mov
and
fiaddl
mov
push
xchg
dec
add
in
shl
jns
in
addl
ss
push
loopne
push
pusha
fisttpll
mov
imul
mov
jae
push
pop
mov
jnp
cmp
adc
sub
adc
xor
or
mov
mov
scas
enter
lods
sub
inc
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
pop
mov
in
cmc
jo
lahf
jge
jo
pop
rcll
or
or
mov
das
mov
jge
imul
sbb
sub
int
or
push
js
lcall
sub
div
fld
cmp
xor
movsl
je
scas
lcall
pop
dec
repnz
out
setg
cmpsl
in
daa
cwtl
push
push
sbb
in
mov
pushf
jmp
add
je
inc
and
loopne
or
cmc
lret
aad
mov
inc
cmc
ret
sub
mov
xchg
xchg
aam
xlat
cmpsl
arpl
mov
xchg
push
mov
outsb
pusha
sub
and
loop
push
and
adc
add
jge
out
aam
test
mov
lock
lods
or
jnp
mov
hlt
pop
cmp
lcall
stc
cmp
je
mov
insb
mov
scas
sub
or
jl
in
lea
jo
and
cltd
mov
jmp
pop
inc
mov
ja
cli
cs
cmc
mov
mov
and
and
fldcw
jg
lret
ret
test
in
xchg
ja
push
fidivl
repnz
xchg
mov
dec
or
or
int
push
mov
cli
inc
lret
icebp
push
mov
clc
rorl
js
adc
and
aad
es
popa
xlat
insb
xlat
push
mov
and
sbb
cmp
sbb
ret
loop
fwait
inc
fcompl
push
scas
std
and
xchg
mov
outsl
push
pcmpgtd
out
and
push
pop
dec
les
leave
push
adcl
sbb
xor
outsb
stc
repz
push
out
jge
mov
js
and
in
pop
out
jmp
scas
add
cs
dec
sbb
mov
lods
push
mov
cmpsl
shl
adc
call
ja
mov
adc
adc
jl
in
mov
or
sub
mov
aas
and
mov
out
inc
jno
loopne
dec
and
or
lods
jg
je
shll
xchg
iret
mov
sbb
push
call
rdmsr
sbb
cmc
es
das
fucomi
scas
mov
mov
cmp
cmc
ret
push
xchg
mov
sbb
dec
sbb
sub
daa
jae
cwtl
dec
shrb
jle
loopne
sub
jns
sbbb
xchg
mov
cmpsb
call
push
mov
scas
in
xchg
faddl
ljmp
test
lcall
add
in
int
and
loopne
data16
testb
repnz
jno
out
push
rolb
shlb
mov
pop
mov
pop
sbb
decl
cmp
xchg
or
jns
lret
mov
xor
call
divb
lret
aam
pop
pop
add
mov
enter
shlb
and
jo
push
push
mov
jmp
gs
gs
stos
fdivl
test
xor
scas
xchg
or
mov
xchg
cs
aad
test
cld
jge
imull
jbe
out
jae
mov
pusha
xor
shrb
adc
push
rcrb
iret
mov
pop
fcmovb
mov
test
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
push
cmp
jo
lahf
jge
jo
stc
mov
and
pop
pop
inc
mov
sbb
out
add
xchg
cmp
test
cmp
je
fwait
push
dec
pushf
loope
mov
setns
mov
jg
ljmp
jg
jno
aad
cmp
mov
mov
cli
xor
and
lods
dec
scas
int
inc
into
dec
sbb
xchg
and
icebp
and
loope
stos
jae
mov
out
dec
rorb
fistps
addr16
push
jne
cmp
pop
lock
sahf
sbb
loopne
mov
mov
jg
icebp
mov
push
mull
xchg
mov
test
cmpl
cwtl
mov
cmp
adc
inc
ljmp
sarb
out
or
pop
enter
std
sahf
sbb
mov
jg
jae
imul
test
cmp
sub
scas
aas
lret
mov
loop
test
inc
push
xchg
or
rcrb
daa
cli
xor
cltd
sbb
popa
xor
lods
mov
popf
divl
lock
pop
mov
mov
mov
add
xchg
or
jle
pop
shll
icebp
cmp
sbb
or
pop
adc
adc
jge
cli
or
dec
outsb
cmpsl
add
jmp
pop
sahf
cld
mov
incl
and
fs
sub
stos
in
lods
cli
lret
cld
rorb
repnz
mov
xor
popf
mov
repz
jle
mov
push
push
mov
xor
mov
lods
testl
mov
in
or
repz
or
inc
pop
mov
xor
incb
pop
fsubr
xchg
xlat
jmp
call
iret
sbb
pop
mov
fcomi
adc
mov
divl
addr16
leave
sahf
les
sbb
push
sub
mov
fwait
call
repnz
sarb
inc
lea
push
xorb
cmp
fists
dec
fdivrs
out
mov
js
push
pop
jg
sbb
mov
push
xor
xchg
add
or
ss
int
cmp
sub
inc
sbb
out
sub
cli
test
fcompl
add
inc
xor
mov
mov
ljmp
ret
in
push
adc
push
pop
xor
inc
mov
stc
sub
cmp
into
or
movaps
xor
mov
jae
sbb
inc
mov
pusha
lods
mov
cmpb
pop
sbb
adc
loopne
push
jns
cmp
ja
cld
xchg
mov
sar
adc
inc
push
xor
or
out
pop
jl
in
and
jp
pop
dec
pop
pop
push
rep
pushf
clc
xchg
jo
push
mov
stos
xchg
jne
jge
daa
and
xchg
aas
arpl
stc
int
hlt
jge
sub
push
inc
push
insb
in
cwtl
mov
add
dec
jnp
cli
xor
loopne
imul
in
mov
imul
pop
insl
lods
mov
push
or
jne
push
outsb
pusha
fldt
xchg
cld
xchg
xchg
cli
movsl
or
das
dec
aaa
mov
xor
out
add
rol
add
fwait
sbb
add
cli
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
popa
roll
lahf
jge
jo
lret
sbb
sub
bound
hlt
in
pop
push
or
cmp
cmpsb
xchg
add
test
lcall
lret
push
sub
sbb
test
xor
jnp
enter
adc
push
gs
hlt
and
arpl
ljmp
ds
shrl
movsb
aam
cmp
jbe
xchg
xchg
mov
fnstsw
vunpcklpd
divps
pop
out
push
adc
in
or
lahf
cmc
adc
mov
jge
mov
push
les
pop
mov
push
inc
mov
jle
pop
push
cmpsl
adc
cltd
adc
lret
adc
adc
sub
into
test
lret
pop
cmpsl
loope
imul
test
xor
jle
call
outsb
xor
les
std
add
inc
je
mov
nop
jecxz
pop
and
inc
dec
push
cmp
aaa
loop
fwait
lret
jge
jge
pop
mov
push
inc
sub
scas
lcall
hlt
loope
or
pusha
sahf
xchg
ret
jmp
icebp
aas
fcoms
mov
sar
pop
pop
inc
dec
sub
ljmp
movsl
sbb
stc
jae
jecxz
aad
pushf
mov
fistps
sbb
mov
popa
push
mov
lahf
jmp
or
mov
sarl
mov
lahf
sub
int
jne
sti
mov
add
xlat
mov
mov
fidivrl
dec
and
jg
push
nop
xchg
stos
fcmovu
sub
adc
mov
add
xlat
hlt
mull
out
test
mov
jmp
push
scas
cs
fwait
push
cmp
push
mov
push
cmp
push
inc
lret
in
stc
or
xchg
bound
stos
das
mov
cmpsl
ret
sti
dec
xchg
bound
xor
add
in
dec
dec
dec
mov
and
insb
subb
sbb
mov
data16
pop
loopne
jmp
loopne
jp
mov
xchg
or
cmp
pop
decb
ror
inc
sub
jno
outsb
sub
inc
out
fsts
subb
add
lret
push
rcrb
and
sbb
loope
sub
push
sub
xor
or
cmp
fnstsw
cmc
jo
sub
mov
pop
dec
sbb
fimull
push
lea
jl
enter
mov
cmp
into
repz
xlat
add
and
dec
add
aas
lret
andl
popa
sbb
and
outsl
loop
pushf
int
sbb
and
inc
fsubrs
shll
cmp
jo
mov
ds
jno
in
repnz
mov
xchg
push
and
mov
je
outsb
sbb
insl
mov
xchg
ljmp
es
or
stc
in
sbb
mov
mov
dec
push
mov
adc
xor
das
or
test
adc
jbe
aaa
jg
fistpll
adc
mov
mov
pop
cmpsb
addb
adc
and
out
cmp
pop
sbb
pop
mov
leave
mov
jo
repz
xchg
and
dec
dec
push
sbb
aad
add
shr
mov
jne
sub
lret
sbb
mov
jge
jo
inc
xor
cmc
mov
out
cmp
inc
icebp
push
cmpsl
hlt
pop
fiadds
cmpb
gs
mov
xorb
and
dec
xchg
xchg
inc
test
cmc
rolb
cltd
or
test
push
push
dec
inc
cmp
addr16
les
mov
imul
call
adc
mov
out
rorl
nop
mov
out
int
adc
imul
xchg
ret
mov
push
push
loopne
inc
sti
je
shll
xlat
clc
xor
clc
pop
leave
cmpsl
mov
int3
lea
popa
xor
mov
cli
jl
mov
jns
or
lods
push
mov
bound
jg
je
mov
sahf
dec
push
das
stos
mov
dec
sub
loope
cmp
sbb
inc
xor
mov
repnz
jnp
or
xchg
sbb
leave
outsb
adc
inc
mov
mov
lret
fwait
xchg
ret
arpl
jns
mov
iret
inc
cltd
or
dec
inc
arpl
jae
cmp
mov
jmp
pusha
daa
cmp
scas
shrl
int
iret
adc
and
cmpsl
inc
inc
dec
cmp
push
test
pop
xor
leave
les
test
dec
mov
pop
movsb
ficompl
lods
addr16
push
ds
stc
or
lea
dec
jns
pop
sbb
mov
pop
stos
inc
sub
sbb
fmuls
cli
cmpsb
stos
rcll
sub
mov
movsb
inc
and
inc
call
xchg
jecxz
xchg
mov
push
mov
mov
movsbl
je
insb
aas
cltd
rorl
mov
arpl
dec
push
push
repnz
pop
push
pop
jno
roll
stc
out
or
repnz
or
mov
sub
mov
sbb
stos
xor
in
mov
nop
add
mov
cltd
out
and
lret
mov
jle
push
int
and
mov
lods
mov
pop
mov
pop
xchg
jge
push
and
push
jb
je
scas
bnd
outsb
loope
mov
lcall
insb
add
sbb
sbb
jecxz
out
insb
push
shlb
repz
fwait
lahf
and
loope
and
mov
inc
mov
mov
sub
mov
leave
test
adc
mov
xor
sti
and
ja
jmp
cmc
pop
dec
lods
or
sbb
aaa
loop
nop
push
cs
fcoms
mov
and
mov
int
dec
inc
cmp
fcmovb
xor
ret
das
pop
fstps
jp
or
shr
inc
jnp
jl
dec
pop
fcom
in
mov
rolb
lea
sub
xlat
pushf
jg
and
ficoms
pop
mov
fstl
lea
addr16
add
xchg
lret
in
inc
stc
enter
mov
fiaddl
pusha
mov
test
mov
pop
jbe
daa
xor
dec
imul
fucomp
leave
mov
dec
out
gs
js
lret
mov
or
popf
jecxz
dec
bound
int
enter
into
and
out
inc
decb
ss
inc
jmp
ljmp
adc
inc
and
cmp
pop
js
mov
fldenv
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
cmp
sub
roll
jo
fsts
add
scas
fidivrs
mov
push
sahf
jl
fcmovnb
les
mov
in
cmc
add
movsb
enter
outsl
xchg
mov
cmp
cmp
mov
xor
iret
xor
pop
jnp
int
sbb
sub
fwait
mov
pop
out
and
std
in
push
or
outsl
test
push
cmp
adc
mov
fidivl
jecxz
lods
jg
or
sub
dec
adc
mov
xchg
mov
test
repnz
std
pop
xchg
cmc
cmp
scas
enter
fmuls
cmp
addr16
pop
dec
xlat
and
incl
fcompl
push
iret
out
fidivl
lds
mov
jb
in
jle
adc
jae
divb
or
stos
bound
push
int3
inc
and
sti
push
push
mov
icebp
std
cld
adc
xchg
push
cli
cs
loopne
cmp
dec
fwait
mov
mov
add
daa
leave
shrb
jnp
add
pop
xor
jl
or
mov
or
sbb
pusha
sub
loope
shll
rorl
push
inc
sbb
xor
push
repnz
out
xchg
xor
pop
sub
mov
or
mov
cmpsb
rolb
or
fstps
jae
jecxz
and
jo
jne
mov
out
jle
rcll
pusha
ds
push
push
shrl
daa
insb
lret
loopne
sbb
das
loop
cli
popf
fisubrs
mov
aas
pop
jl
push
daa
idivb
xor
pop
pusha
ja
icebp
sub
sub
inc
sahf
je
dec
push
mov
adc
mov
xchg
xor
inc
idivl
push
jge
cs
mov
or
fadds
imul
mov
arpl
xchg
daa
mov
pop
rorl
sub
fistl
je
xchg
aaa
dec
and
sbb
mov
ret
push
dec
jmp
jle
xchg
imul
lret
sbb
mov
jb
bound
mov
dec
cmp
popa
push
dec
lret
in
mov
inc
mov
jmp
ret
aas
mov
cld
push
popf
push
sub
shll
or
adc
mov
in
push
mulps
inc
jge
inc
xor
cmc
stos
xchg
pop
pop
repnz
rcr
cmpb
pop
int
ret
xor
adc
cmp
stos
jmp
in
add
inc
dec
test
mov
andl
sub
adc
cmp
gs
addl
or
call
jo
out
sbb
bswap
icebp
jb
dec
xchg
dec
cmpsl
jecxz
scas
mov
ds
and
pop
cwtl
mov
lds
fldt
push
push
lret
inc
iret
push
arpl
shlb
fucom
jb
sbb
or
lea
test
xchg
pop
in
mov
push
ret
and
cltd
mov
push
or
sbb
out
mov
ret
cltd
mov
in
adc
out
aam
push
cmp
inc
xchg
int
test
and
aas
inc
sbb
jp
lds
aad
jge
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
mov
pusha
xorl
jge
jo
outsb
loop
frstor
pop
lds
push
je
sub
xchg
push
push
sub
mov
test
cltd
mov
and
sub
xor
jno
inc
lcall
cwtl
popf
push
lret
mov
loope
scas
ds
imul
outsl
cmp
pop
pushl
inc
andl
mov
movsl
es
loop
cltd
stos
jns
mov
cmp
lock
mov
frstor
add
es
hlt
iret
cmpsl
pusha
cmp
stc
xorb
xchg
sub
push
push
jbe
jo
sahf
xor
sbb
xchg
pop
or
in
outsl
outsl
mov
test
ret
into
repnz
aas
movsl
or
jg
adc
xor
das
mov
xor
lods
not
adc
lahf
dec
arpl
add
popf
pop
pop
shll
inc
rorl
xchg
and
or
into
test
jge
sub
adc
mov
and
push
lcall
mov
sbb
fidivl
add
repz
test
jecxz
cli
test
xchg
in
xor
cli
mov
adc
enter
stos
lock
stos
ss
dec
add
add
sub
or
jp
or
fisubl
jae
xor
mov
cmp
xchg
popa
xor
mov
shlb
cmp
or
mov
fstpl
sbb
aad
sbb
inc
adc
and
dec
pop
cmc
pushf
mov
sbb
js
xor
mov
or
es
aad
out
aaa
sbb
and
mov
adc
mov
les
sarb
outsb
orl
rcll
adc
jne
mov
into
ljmp
pop
cld
inc
fsubrs
pop
pop
dec
xor
scas
mov
inc
pop
fs
cmp
sbb
fsubrp
aam
stos
pusha
inc
outsb
xchg
mov
dec
outsl
xchg
cltd
popa
xlat
shrl
jo
aas
mov
imul
sub
inc
xchg
adc
xchg
inc
xor
sbb
stos
lahf
cmpsb
push
inc
sbb
into
rcr
lock
les
mov
fildll
mov
test
test
push
push
fmul
jnp
popf
fnstsw
sub
outsb
shrb
jle
cmp
mov
xor
and
arpl
fstl
mov
lcall
jns
sub
mov
dec
arpl
les
mov
movsb
out
repnz
or
push
mov
dec
insb
sbb
adc
xor
push
test
adc
mov
adc
scas
aam
loopne
sysret
push
push
sub
add
pop
push
mov
push
jle
fadd
lret
mov
jmp
lock
shlb
aad
loopne
cmp
imul
pop
jp
scas
insb
iret
lcall
jmp
lea
test
std
js
sar
or
mov
idiv
push
xchg
add
data16
aas
test
lock
xor
movsbl
mov
nop
mov
inc
je
adc
xchg
mov
and
test
cs
cs
and
jg
adc
pop
mov
pop
bound
sub
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
dec
sbb
jge
jo
mov
orb
adc
jo
pop
xor
or
ret
js
lahf
mov
mov
sbb
lods
imul
dec
pop
outsl
rorl
jg
xor
sub
inc
iret
cli
adc
fstp
or
pop
inc
mov
dec
sarl
sub
dec
scas
cmpb
out
xor
cmpsb
arpl
fdivr
jnp
hlt
sbb
cs
test
pop
sbb
call
and
test
enter
push
mov
dec
xchg
sti
sti
push
int
sarb
sahf
mov
or
xchg
xor
add
dec
gs
push
movsl
jno
mov
jl
or
add
sbb
mov
mov
arpl
push
adc
push
gs
outsl
lret
in
jbe
out
sub
xchg
inc
lock
sbb
mov
and
mov
das
out
fs
in
cmovae
sbb
lods
pop
add
jmp
dec
test
in
xor
add
cli
cmp
aad
ds
pusha
jle
jae
lret
jae
inc
pop
fsubrs
mov
pop
les
xchg
sub
fwait
out
mov
fs
pop
rcrl
pop
mov
and
adc
jno
stc
daa
out
mov
ja
shlb
arpl
inc
rclb
sar
les
push
or
in
fmull
mov
jmp
xor
and
mov
lea
push
icebp
jge
test
adc
pop
stc
push
pop
sbb
inc
inc
pop
inc
insl
out
mov
mov
stos
adc
or
hlt
xor
pop
jmp
xchg
stos
pop
gs
push
cmp
daa
lahf
pop
fistl
iret
cmp
xchg
push
test
rcl
xorl
cmp
pop
leave
test
inc
lret
leave
pop
arpl
test
aas
xor
adc
adc
cmp
xor
bound
jle
addb
adc
adc
adc
cmpsb
aas
push
fwait
mov
outsl
lahf
dec
sbb
outsl
sub
sbb
pop
push
lahf
xor
daa
filds
shrb
add
fwait
mov
sub
je
sub
stos
or
rclb
and
xor
xor
daa
jbe
mov
adc
cmp
mov
ret
mov
pop
es
inc
cmp
xor
dec
loop
lods
sti
ljmp
cmp
fcmovbe
lcall
cld
and
call
and
sbb
mov
shll
mov
and
sbb
mov
hlt
test
inc
in
or
pop
xchg
mov
sub
adc
loop
inc
imul
fimull
xor
sarl
je
xor
je
aas
or
cmp
dec
imulb
fdivr
pop
xor
mov
push
sub
pop
mov
inc
adc
adc
cmpsb
ds
adc
notb
std
sbb
mov
pop
adc
sarl
cmc
out
sub
cltd
out
add
aaa
mov
shrb
gs
cmpsb
in
inc
xor
mov
or
adc
outsl
data16
data16
in
movsl
lds
sub
lret
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
int3
lcall
jo
lods
xor
inc
fstps
xlat
lds
xchg
mov
sbb
test
push
fdivs
ret
sbb
into
icebp
popl
mov
pop
imul
imul
outsb
dec
dec
mov
sbb
aas
push
jno
xchg
jle
testl
inc
js
hlt
xor
pop
dec
pop
clc
dec
or
dec
mov
imul
pop
mov
xor
lock
and
push
outsl
daa
xchg
add
rcll
aaa
fldenv
clc
pop
add
loop
out
cmc
mov
pop
jo
mov
outsl
mov
leave
mov
stc
lahf
inc
lock
arpl
inc
add
or
jae
iret
dec
stc
pop
push
shlb
inc
xchg
dec
stos
add
sub
sbb
xchg
je
fsub
xor
or
pop
mov
into
repnz
mov
aaa
pusha
jge
inc
or
inc
xchg
jp
xor
loop
xchg
fiadds
int3
ds
aaa
and
mov
inc
sub
cmpl
sbbb
addr16
xchg
xchg
aaa
jae
push
cli
lahf
into
inc
sub
add
pushf
and
popf
xor
movsl
stos
mov
pop
shrb
cmp
or
sbb
adc
insb
ret
inc
insb
or
adc
bound
mov
aaa
fisubrl
push
lret
pop
cmpsb
loopne
dec
adc
repnz
sbb
fnstcw
xor
jo
les
jno
std
dec
lds
add
adc
test
lahf
in
stos
add
pop
loop
adc
push
shll
mov
or
sub
sahf
hlt
inc
pop
mov
fidivrl
cld
sub
enter
or
fisttps
aas
fdivs
push
jmp
shll
mov
push
mov
xchg
or
mov
pop
fsubrl
out
mov
gs
cmpsb
xchg
iret
or
pusha
mov
mov
inc
sub
inc
sbb
sarb
sti
int3
sti
pop
pop
sbb
pop
call
lcall
fildl
out
mov
mov
subb
test
push
call
lock
push
sub
not
stos
cmp
negb
nop
call
clc
pop
flds
mov
push
das
or
push
cmp
out
loop
or
fwait
adc
dec
pop
pop
lea
test
xor
cld
notb
sub
nop
xor
push
sub
dec
or
movsb
cmc
clc
and
mov
cltd
cmp
pop
pop
jp
jbe
test
and
fmull
xchg
movsl
data16
mov
cmc
adc
push
hlt
cmc
cld
mov
test
rcrb
movsl
cld
test
aaa
sbb
gs
push
lahf
stos
lods
xchg
fdivs
add
cmp
mov
scas
push
inc
scas
fnsave
std
add
dec
test
lret
or
mov
aad
push
outsl
stos
push
cmp
les
fldenv
xchg
fstpl
adc
sbbb
dec
adc
inc
xchg
or
add
repz
mov
mov
add
inc
xor
out
xchg
add
inc
adc
push
jge
dec
and
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
sti
pusha
jno
dec
mov
lahf
jge
jo
jno
nop
mov
js
jle
or
dec
push
insl
xchg
pop
ffreep
jecxz
pop
aaa
bound
ret
cmpl
icebp
ds
xor
ret
adc
xchg
jl
lcall
push
jle
test
inc
pop
das
outsb
inc
lds
dec
test
push
ret
pusha
sub
test
cmp
cmp
out
jae
outsb
push
push
sbb
arpl
push
xchg
gs
mov
ss
lea
repz
cs
inc
xor
int
js
mov
or
scas
cs
rcll
sub
pavgb
sbb
push
or
jmp
int3
arpl
ficoml
insl
pushf
pushf
xorl
ljmp
and
clc
fsubl
mov
lret
dec
pop
adcl
mov
push
stc
std
fnstcw
and
push
add
dec
in
push
cltd
pop
mov
clc
rcrb
cmp
fwait
roll
jo
scas
jge
push
mul
xlat
int3
fldpi
pushf
mov
mov
shrb
sub
jg
lods
testb
lcall
mov
inc
test
inc
adc
sub
xchg
sub
add
jmp
adcb
pop
and
stc
mov
es
or
cmpsb
movsl
fdivr
sub
fcoml
xchg
lahf
xchg
and
add
mov
sbb
pop
sub
outsl
dec
icebp
mov
inc
arpl
sti
push
ret
adc
and
out
fdivrs
test
mov
and
inc
imul
fcomps
pusha
shld
pop
int
adc
ret
sbb
adc
push
jno
nop
in
cmpsl
add
jb
ja
adc
aad
movsl
sub
jl
pop
xchg
cmp
cli
fldenv
jp
daa
stos
loopne
inc
adc
loope
or
lret
and
or
shll
xlat
or
push
stos
push
clc
sub
or
notl
in
mov
dec
dec
and
popf
mov
cltd
adc
lcall
xchg
mov
inc
or
pop
mov
xor
or
rcr
jmp
enter
and
mov
xchg
mov
mov
mov
test
or
and
cmpsb
aad
cmpsb
hlt
pop
mov
lret
or
push
xor
sti
xor
push
jns
ucomiss
adc
mov
sub
cmp
sbb
dec
pop
arpl
and
and
pop
iret
push
lcall
dec
sub
xor
mov
and
mov
fdivrl
dec
cmp
or
xor
add
pop
mov
adc
jbe
scas
test
xor
sub
aaa
test
outsl
ret
nop
adc
mov
cmp
mov
repz
xor
sbb
sbb
jmp
daa
bound
inc
pushf
gs
push
add
cmp
and
cwtl
inc
inc
repnz
fldenv
out
jne
xor
dec
sbb
inc
dec
or
mov
out
mov
popf
inc
push
pop
data16
sbbb
sbb
jbe
jns
sbb
jge
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
popa
xor
in
xchg
jo
lahf
jge
jo
fdivrl
push
mov
orb
in
push
gs
rcl
decb
push
xchg
pop
inc
icebp
imul
loope
nop
jl
iret
loopne
stos
lret
shl
fwait
mov
push
movsb
jb
jb
movsb
xor
mov
sbb
out
xorl
test
mov
add
cmp
jge
sub
jcxz
gs
insl
dec
jl
enter
push
roll
aam
or
fs
lret
and
mov
jp
push
lar
xchg
fldt
mov
fwait
mov
mov
mov
mov
nop
out
jnp
call
jae
cmc
pop
sub
andb
jns
or
sbb
lahf
mov
or
pop
jmp
push
push
push
dec
sub
pop
push
jae
shrb
fistl
ror
test
gs
popf
sti
inc
inc
lahf
cwtl
sub
cmp
rorb
mov
or
mov
sbb
or
int3
push
sbb
mov
cltd
push
add
jge
cmp
pop
mov
out
clc
addr16
sbb
mov
mov
xchg
arpl
fmulp
cld
out
cmp
cmp
mov
xchg
lret
sub
ljmp
mov
clc
cmc
dec
mov
xchg
lods
sar
insb
dec
outsb
sub
test
xchg
in
or
mov
sahf
inc
jno
cmp
pushf
sub
ljmp
aaa
mov
inc
push
leave
mov
or
notl
scas
rorl
mov
jge
cmp
aam
mov
mov
pop
adc
jne,pn
jb
push
mov
insl
bound
cmp
cmp
fwait
jnp
outsl
sub
or
cmpsb
loopne
cli
mov
and
push
loop
pushf
mov
dec
mov
jbe
pop
push
out
sbb
and
jle
pop
divb
dec
jecxz
arpl
mov
adc
aas
notl
mov
mov
addr16
into
pop
cmp
pop
scas
loop
jl
xchg
ljmp
inc
repnz
dec
mov
shrb
sub
mov
lods
lds
fwait
fwait
add
fidivl
sbb
insl
jl
jns
inc
out
mov
and
out
sbb
andb
pushw
xchg
dec
das
bound
loope
stos
shlb
mov
cmpsl
xchg
arpl
mov
ffree
fdivrl
sub
fs
jge
mov
jl
xchg
xchg
popa
pop
push
xchg
sub
movsl
enter
mov
mov
cs
pop
cmp
sub
int3
pop
xchg
arpl
sub
push
dec
mov
cmp
jne
dec
push
sbb
aas
fdivl
dec
mov
xchg
movsl
xor
lods
jo
add
cmpsl
out
push
mov
dec
pop
shl
pop
sbb
mov
hlt
inc
das
cltd
pop
sub
push
cld
sbb
fnsave
xchg
adc
inc
test
rolb
sub
or
pop
out
push
aam
daa
movaps
jnp
xchg
push
dec
frstor
pop
movsb
cmp
push
pop
adc
pop
cltd
fsts
xchg
test
movsb
xchg
fwait
ret
cld
or
popl
test
out
pop
test
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
adcl
ret
nop
jo
lahf
jge
jo
jl
mov
cmpsb
ret
imul
divb
test
rclb
add
add
pop
fidivl
pop
aad
mov
lcall
pop
ds
pop
xor
aas
cltd
xchg
daa
xor
mov
xor
ret
push
and
sub
lret
cmp
jnp
insb
add
xor
outsl
mov
pop
mov
jg
mov
adc
pop
gs
pop
pop
xor
sub
sbb
rclb
cmp
cmp
insb
das
mov
cmp
mov
test
sbb
fwait
sub
xchg
mov
imul
ret
and
lods
std
cmp
push
xchg
push
ljmp
jo
lock
sar
mov
pop
sub
leave
cmp
adc
jle
jecxz
into
arpl
test
fstpt
push
icebp
divb
aas
push
and
imul
and
lods
or
jge
pop
mov
sahf
aam
inc
mov
pop
test
das
mov
jne
mov
jne
fdivr
dec
cmpsl
mov
jnp
or
sbb
mov
stos
adc
es
sti
adc
xchg
mov
shr
into
clc
das
and
add
movsb
repz
xchg
and
cld
xlat
icebp
jns
dec
mov
inc
mov
iret
gs
aam
push
inc
add
lret
bound
scas
or
mov
loop
aas
aam
cmp
div
aaa
repz
mov
movsb
sub
push
ss
or
mov
cmp
leave
xchg
pop
inc
jl
and
jo
or
mov
addr16
movsl
ds
fistl
jp
daa
jp
in
in
jo
jb
test
into
testb
aas
cld
lret
ja
dec
jecxz
mov
jne
lock
cmpsl
pop
sti
aas
cmp
mov
adc
push
mov
pushf
mov
cld
sub
inc
cmp
or
repz
notb
in
mov
xchg
lcall
stc
lea
xchg
int3
dec
xchg
sbb
sbb
cmc
lret
imul
lods
jno
mov
cli
pop
inc
aas
mov
sbb
cld
xchg
movsl
movsl
ds
mov
call
leave
xchg
out
sbb
mov
outsl
add
hlt
xchg
jmp
and
cmpsb
cli
jg
xchg
test
out
inc
mov
jns
dec
popf
xor
jg
push
imul
lcall
lahf
addb
shrb
xchg
mov
pop
cmpsb
cmp
orb
divl
inc
not
push
cmp
les
jbe
in
lds
or
sbb
lret
cmp
mov
xor
stc
xchg
sub
mov
sub
adc
pop
pop
jns
jno
mov
push
xchg
lds
fs
pop
or
cs
xchg
sub
fmuls
ret
push
push
mov
add
inc
hlt
iret
rorb
in
lcall
es
xchg
jge
pop
cmc
xlat
pop
in
push
stos
and
push
and
cmp
movsl
loopne
or
xor
in
ja
xchg
xchg
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
outsb
arpl
stos
popf
jo
lahf
jge
jo
push
sbb
es
push
sub
sbbl
ss
or
in
andb
mov
movl
add
add
add
xor
push
mov
jmp
sub
mov
movsl
mov
pushl
mov
fadd
mov
in
push
rorb
inc
and
popa
roll
or
pop
andl
shlb
scas
add
pop
pop
test
scas
sti
push
lds
xor
adc
push
js
mov
fisubs
ror
xchg
add
insl
mov
in
pop
outsl
mov
adc
or
imul
int3
fstpl
mov
and
dec
call
movb
cltd
in
sbb
outsl
inc
or
nop
or
mov
pushf
cmc
pop
lret
add
dec
xlat
add
clc
cmp
movsb
mov
add
mov
sub
mov
jbe
mov
cmc
aaa
inc
mov
mov
or
inc
scas
jne
or
bound
sahf
pop
jae
adc
bound
faddl
push
aad
push
mov
sub
inc
into
call
mov
in
and
and
jne
or
pop
cmp
ror
mov
add
sub
loope
xor
push
inc
bound
cli
jb
pop
loopne
mov
in
adc
add
push
inc
dec
mov
push
push
fsubs
push
call
adc
scas
dec
fisttpll
push
js
mov
adc
and
inc
in
cmc
and
repz
jno
pusha
jns
andb
mov
insl
or
adc
xlat
xor
inc
mov
cltd
xchg
and
mov
push
in
lret
lock
cmc
test
inc
sub
outsb
scas
mov
ret
mov
add
rol
je
std
mov
inc
ljmp
loopne
fadd
or
movsb
into
adc
in
and
mov
lods
pushf
scas
sbbb
insl
mov
xor
jb
inc
or
and
or
popa
insl
fnstenv
push
add
inc
and
xchg
sets
cld
jne
cmp
and
std
aaa
mov
sbb
stos
dec
sti
lret
loope
fsts
shrl
jbe
push
or
add
pop
pop
orl
xchg
popa
dec
or
mov
cmpsb
xchg
call
icebp
stos
icebp
lret
loope
in
sub
pop
mov
enter
dec
push
jmp
xchg
xchg
gs
mov
loopne
lods
mov
xor
movsb
jge
jae
pop
push
jecxz
xchg
inc
imul
and
fchs
pop
jo
dec
jmp
pop
fstl
stc
jl
int
lret
cmp
jle
xchg
fisttpll
pop
sbb
sarl
ret
pop
push
sub
jb
jo
gs
movl
in
jns
lea
and
sub
cwtl
dec
adc
aas
jle
push
xor
xchg
mov
cltd
xchg
cmpsb
fcmovu
jmp
mov
add
mov
fiadds
pop
mov
scas
mov
ds
fcomps
or
ret
out
ss
aad
jns
mov
cmc
sti
fs
or
testl
add
loopne
sarb
sub
jmp
out
inc
push
jno
ljmp
fwait
jbe
leave
cltd
jo
lahf
jge
jo
mov
ret
fisubrl
cmp
fsubl
aam
and
test
movsb
lds
jno
in
push
arpl
xchg
push
pop
cmp
cmp
in
stos
fwait
shlb
and
sahf
dec
jne
dec
or
xchg
push
pop
shll
les
scas
xchg
rcrl
push
xchg
repnz
lods
dec
popf
adc
testb
loope
jno
and
loopne
mov
lahf
mov
outsl
xchg
mov
sub
jno
or
out
inc
out
sahf
popf
fs
ret
out
ret
add
jl
mov
xor
mov
add
mov
lock
jle
shlb
daa
push
jl
cmp
call
mov
js
iret
test
and
movsb
xchg
xor
nop
pop
icebp
pop
dec
xor
mov
mov
adc
push
pop
enter
dec
pop
xor
lea
sti
jae
cwtl
dec
dec
jle
jbe
and
sub
cmpsl
mov
lret
outsl
add
das
push
lret
push
mov
lock
mov
xchg
lock
ss
add
or
mov
pop
xor
pop
sbb
daa
mov
shlb
shrb
mov
push
jo
stos
stc
pushf
lret
adc
int3
pop
enter
xor
ds
les
xor
xor
lcall
jmp
cli
inc
jno
js
clc
call
popa
hlt
loope
mov
push
mov
std
sahf
js
daa
push
xchg
mov
cmpsb
inc
out
adc
flds
mov
js
push
shll
ret
pop
cmpsw
stos
sarb
rcr
or
pop
cmc
pop
popa
and
jns
jns
test
sbb
mov
mov
int3
jbe
xchg
xor
outsl
pop
push
je
filds
push
pop
adcl
push
mov
jle
fistpl
pop
push
push
pop
mov
push
repz
xchg
push
notl
xchg
std
cmpsb
cmpsb
mov
inc
jnp
test
fwait
scas
jl
insb
js
lahf
mov
push
fdiv
int3
fmuls
adc
outsl
mov
xchg
mov
adc
jmp
out
mov
xor
aam
cmp
or
xchg
sahf
aad
rcrl
mov
es
fcom
ja
fs
mov
add
imul
icebp
or
pop
aaa
xchg
sbb
or
jno
sbb
pop
sub
rcr
insl
sbb
lea
mov
mov
push
jg
fwait
jmp
or
push
pop
push
xchg
xor
cmp
or
je
xorb
xor
movsl
sarb
xor
ret
mov
push
loop
xor
adc
fwait
sub
xchg
loop
or
sbb
mov
inc
loope
and
mov
or
repz
or
sarl
clc
cld
ss
adc
rcl
pop
sub
fisubl
add
sahf
and
and
enter
and
addr16
inc
out
and
mov
add
arpl
scas
inc
adc
aam
add
mov
jge
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
push
jg
cmpsb
jo
ret
jg
jo
test
adc
les
mov
add
pop
mov
popa
lods
mov
mov
xor
xlat
pop
imul
mov
rolb
fstl
rorb
mov
les
jmp
push
push
dec
fdivl
xlat
or
sub
jo
sub
cld
sbb
stos
adc
mov
and
ja
loopne
jb
cli
rcrl
dec
leave
mov
inc
out
dec
movsl
in
sti
and
or
pshufw
xchg
pop
lods
loop
iret
rsm
test
mov
into
out
jo
aaa
out
fcmovne
xor
fcmovnb
aam
cld
fcoms
ret
pushf
xchg
enter
dec
movsl
add
mov
mov
push
lods
lds
xchg
or
xchg
daa
xlat
dec
mov
xchg
fsubl
fnstcw
xchg
pop
adc
in
repnz
jno
cli
and
adc
in
ljmp
mov
dec
scas
clc
test
adc
inc
push
pop
cmpsl
hlt
sub
mov
aas
jb
xlat
shlb
mov
push
js
pusha
lds
add
repnz
inc
inc
push
mov
add
push
pop
push
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
ja
cmp
movsb
jo
ret
jg
jo
adc
lcall
loop
xor
ret
pop
xor
jg
dec
mov
pop
notb
pop
cs
add
cmc
xchg
loope
xchg
pop
and
idivl
xlat
inc
fisubl
push
xor
adc
insb
and
in
outsl
cmp
movl
popf
out
je
int3
jmp
in
rorl
imul
mov
jno
aam
out
mov
es
jae
cmp
xchg
hlt
inc
testl
fadd
flds
mov
bound
jmp
ret
xor
outsb
data16
pop
push
cmp
add
jbe
int3
int3
jnp
movsb
mov
clc
xchg
clc
push
mov
mov
pop
fimull
iret
inc
xchg
rcl
data16
xorl
jae
sub
xchg
bound
inc
xor
xchg
ficoms
cmpsl
xchg
mov
push
mov
aad
pop
pop
shrl
in
jecxz
mov
sbb
inc
into
mov
mov
sahf
lret
inc
pop
jb
xchg
pushf
arpl
scas
jnp
sub
jl
and
dec
dec
ja
repnz
std
out
or
sti
movl
and
lea
mov
jmp
rorl
sbb
inc
ret
mov
jo
xor
xchg
mov
add
inc
jecxz
lret
lods
cli
test
pop
inc
daa
movb
push
ds
fs
testl
lods
adc
pop
push
mov
add
xchg
dec
cmp
outsl
icebp
or
push
mov
fs
sub
xor
jp
clc
mov
pop
imul
popa
or
mov
lock
xor
cmp
mov
xchg
adc
lahf
and
data16
mov
mov
sbb
stos
icebp
xor
int
in
mov
sbb
popa
out
dec
pop
cmp
add
add
push
xor
sbb
jge
cwtl
jge
dec
hlt
ret
and
lods
mov
stc
push
arpl
sti
rclb
push
adcl
jbe
fdivrs
inc
xor
add
sub
test
sbb
dec
aam
or
sbbl
push
and
push
push
inc
fnstenv
jmp
sub
mov
scas
pop
pop
out
xor
bound
dec
xchg
in
xchg
inc
in
sbb
lods
adc
lods
gs
mov
outsb
fsubrl
enter
movsl
sub
aad
jp
pushf
mov
je
push
call
into
dec
test
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
shrl
fistl
jo
ret
jg
jo
or
sbb
pop
push
jb
insb
cmp
pop
in
sbb
cwtl
inc
loope
sbb
xchg
loop
dec
jge
inc
call
and
fwait
jp
xorb
and
js
gs
lea
dec
add
js
add
adc
pavgb
mov
stc
mov
test
mov
xor
and
dec
cmp
movsb
sbb
jno
or
and
pop
inc
xor
or
ljmp
xlat
lret
add
xor
insl
fcomp
adc
movl
mov
in
dec
je
pop
repz
dec
lock
xor
xchg
push
pop
adc
mov
push
pop
inc
and
push
or
cmp
mov
adc
shrl
pop
mov
inc
jbe
outsb
push
inc
add
and
aam
and
and
add
push
fcomip
scas
lret
scas
dec
inc
aam
movsb
call
in
adc
dec
les
cmp
rcrl
int3
mov
xor
lods
jmp
stc
test
cmp
or
inc
ret
mov
rorb
inc
add
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
xor
mov
jo
jnp
mov
out
and
popa
icebp
cmp
iret
cmp
and
pop
xchg
out
je
cmpsl
loop
shl
xor
inc
xor
scas
out
daa
inc
and
xor
scas
je
mov
mov
cmp
out
xor
sub
adc
pop
ret
dec
scas
scas
mov
insl
push
hlt
sbb
outsl
rcr
jno
pop
mov
in
push
loop
sub
mov
xor
sahf
insb
and
cmp
je
jl
mov
jl
fidivrl
mov
movsl
dec
outsb
mov
fildll
pop
fnclex
cmp
pop
inc
pop
xor
mov
jb
pop
cmpsl
stos
test
nop
dec
push
out
roll
std
cmp
pop
stc
add
icebp
adc
lahf
xor
xor
push
icebp
push
fistps
push
out
push
or
adc
inc
dec
not
adc
insb
pusha
shll
adc
out
lcall
cmpsb
xchg
int3
mov
decb
xchg
mov
jg
xor
jo
mov
scas
pusha
add
mov
mov
fidivrl
pushf
cmp
adc
sbb
cmp
jne
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
cmp
fcomip
scas
jo
ret
jg
jo
pop
movsl
loope
pushf
inc
int
test
in
pop
pop
mov
jp
ja
out
cmp
ljmp
dec
sub
xor
incb
and
mov
loope
push
and
sub
ret
sbbb
pop
inc
mov
aam
sbb
aaa
mov
dec
aas
repz
jbe
cwtl
pop
lea
push
add
call
shlb
fnstenv
mov
icebp
xor
in
add
fisubs
daa
pop
add
jne
enter
movsl
and
mov
cmp
call
push
or
sbbl
cli
inc
adc
cmp
call
dec
ret
and
mov
jp
pusha
out
mov
push
sub
int
aaa
lods
ret
push
add
inc
jmp
out
sub
lock
test
rcl
ficompl
sahf
jns
dec
pop
mov
repz
jns
ss
inc
push
sbb
out
imul
cmp
or
insb
subb
stos
daa
sub
mov
cmpsl
xchg
pop
jno
xlat
sub
out
rorl
cld
jmp
movntps
push
rep
mov
push
jle
or
sahf
mov
jg
jo
lods
xchg
push
add
movsl
push
mov
les
stos
jmp
mov
test
dec
out
enter
push
add
mov
mov
ljmp
add
sub
ret
sub
jnp
arpl
pop
pop
jmp
xchg
sbb
dec
push
leave
mov
pop
xchg
pop
nop
jge
mov
sbb
sub
adc
and
in
in
jns
adc
je
imul
stc
xchg
or
inc
mov
fadd
dec
int
push
or
inc
and
ljmp
mov
addr16
push
inc
push
ss
mov
jmp
sbb
bound
into
cld
scas
add
jl
mov
std
jg
fwait
enter
test
push
std
adc
jp
movsb
mov
addr16
jge
iret
scas
lods
clc
test
push
inc
cmpb
push
outsb
arpl
test
push
mov
pop
adc
bound
push
jne
out
or
stos
add
outsb
sub
sbb
lret
ds
xor
aad
jle
arpl
jle
ret
cmp
push
push
mov
je
mov
sbb
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
lods
xchg
pop
or
jg
jo
fwait
lret
mov
imul
mov
loop
xchg
jne
imul
enter
out
scas
jl
xor
mov
arpl
sbb
test
xchg
push
sbbl
mov
mov
mov
bound
push
add
lcall
lret
xchg
clc
test
data16
shll
dec
mov
inc
test
cmp
push
sbb
leave
lock
aas
scas
sub
inc
dec
push
pushf
gs
int
pop
mov
addl
sub
pop
mov
mov
sub
sbb
imul
test
shl
lcall
outsb
or
imul
mov
ss
and
xor
jge
xor
fidivrs
mov
out
pusha
ficomps
push
repz
lock
shrb
mov
mov
dec
fcompl
call
mov
scas
aas
shll
popa
out
push
lcall
cli
adc
inc
inc
xchg
xor
xchg
fdivrp
adcb
push
mov
inc
sbbl
out
inc
fdivl
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
jnp
aam
shrb
jo
cld
pop
pushf
inc
push
imul
or
outsl
ret
mov
xor
js
popf
inc
push
loop
or
lret
test
inc
out
dec
xchg
clc
cli
adc
mov
mov
out
sbb
fs
pop
lods
xchg
daa
jp
xchg
pop
cmp
xor
std
lcall
je
dec
rorl
jae
in
ds
dec
cmp
iret
cmp
adc
pop
dec
sbb
insl
shrl
lods
popf
jg
cmc
cmp
inc
jmp
mov
jne
inc
adc
scas
cltd
rcrl
add
push
daa
cmp
dec
add
jns
cmpsb
pop
lret
daa
lods
test
dec
fisubrl
test
mov
pop
or
into
addb
and
ss
repz
test
mov
mov
mov
sub
ret
inc
and
popa
lods
fs
mov
xor
mov
dec
add
shr
push
jmp
sbb
fndisi(8087
and
pop
outsb
dec
cmpsl
stos
test
jmp
aaa
repz
fisubrl
mov
bound
pop
jbe
roll
add
add
sti
out
dec
rorb
mov
add
add
add
add
rep
popa
fdivrs
xchg
test
jo
ret
jg
jo
push
pop
cmpsl
and
mov
xchg
inc
sbb
jno
ret
push
out
int3
jp
and
scas
sbb
lret
pop
xchg
lods
test
add
sub
and
push
push
outsl
xor
dec
out
jae
fsubs
int3
hlt
sub
xor
mov
push
adc
loopne
aam
pop
stos
call
pop
lahf
and
mov
insb
fildl
in
scas
movsl
scas
insl
sbb
cmpsb
scas
test
mov
mov
mov
or
dec
arpl
dec
sbb
sahf
sti
popa
insb
and
divb
or
add
push
inc
add
and
cmpsl
cmp
sahf
jns
call
in
push
dec
or
in
or
dec
and
loope
outsl
push
insb
out
or
adcb
pop
mov
xchg
jb
clc
icebp
pminsw
divl
jg
stc
ljmp
std
pop
bound
pop
lock
fwait
or
pop
lods
pop
add
dec
xchg
nop
jle,pn
popf
xchg
lret
fldl
sahf
lea
jns
loope
inc
xchg
and
inc
lock
aam
mov
inc
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
sar
imul
jbe
jo
ret
jg
jo
subl
and
mov
xchg
sbb
xlat
fcomp
mov
or
fcmovnbe
sbb
dec
add
pop
xor
adc
popa
inc
icebp
insl
push
test
mov
lcall
addb
daa
movsb
mov
inc
or
inc
cld
lahf
aad
test
sub
daa
or
sbb
sbb
xchg
push
cs
mov
xor
mov
ja
stos
int3
or
push
xchg
or
dec
sub
test
cli
pop
mov
loopne
out
sbb
dec
in
jmp
xchg
pop
sub
cltd
mov
out
test
ljmp
mov
xor
rcrl
in
inc
add
pop
insl
xchg
jp
cmp
rolb
push
sub
shrl
pop
leave
or
mov
lea
adc
das
mov
cmp
push
xor
mov
rcr
cltd
sub
xchg
xor
stc
mov
push
fistpl
out
jo
jle
outsl
xchg
in
dec
push
sbb
jbe
mov
std
jno
mov
mov
idiv
sahf
push
and
in
aaa
and
mov
add
mov
jmp
inc
gs
icebp
imul
mov
mov
jo
jg
jo
stos
js
jns
pop
adc
mov
cmp
mov
sbbl
mov
aam
add
adc
and
mov
add
subb
mov
les
andb
fstpl
loope
sbbl
int3
mov
jp
int3
sbb
and
pop
mov
lock
push
rcrb
aaa
dec
cmpsl
push
pop
adc
stos
arpl
movsl
cmp
lds
ret
repz
repnz
imul
ljmp
fdivs
xchg
cmpsl
rcrl
jns
push
nop
arpl
pop
inc
add
lret
call
mov
and
sbb
mov
test
push
or
aam
xor
inc
jne
push
bound
not
inc
and
jne
inc
test
xor
aad
addr16
je
popa
xor
test
int
mov
dec
aaa
mov
sbb
push
ret
es
xchg
stos
imul
or
in
ja
push
xchg
inc
jg
mov
int
cmp
dec
seta
push
in
xchg
dec
pushf
jecxz
pop
imul
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
out
xchg
mov
ret
jg
jo
scas
popl
adc
mov
cmp
movsl
pusha
ja
or
hlt
pusha
sub
and
pop
mov
or
mov
jbe
mov
push
out
and
enter
inc
pop
loope
cmp
pop
xlat
sbbl
xchg
dec
and
add
push
bnd
xor
cmpl
lcall
cmc
lcall
dec
add
mov
xlat
cli
fwait
std
in
jp
xchg
adc
add
int
adc
or
les
and
sahf
mov
and
xchg
cmpsl
repz
jbe
aam
push
mov
dec
call
mov
movsb
outsb
aad
inc
sub
inc
imul
and
hlt
out
mov
pop
mov
in
push
sti
in
ret
xchg
bound
cs
jae
inc
sub
ret
cmc
push
xor
unpckhps
mov
add
popa
inc
xor
je
test
mov
nop
fstpl
cmp
ret
sub
jg
pop
pop
ret
pop
cmc
lret
js
data16
mov
adc
aas
std
adc
adc
push
cmp
enter
xchg
aam
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
repnz
mov
jo
jge
jo
sbb
mov
cmp
std
mov
xchg
jl
lcall
push
jo
inc
in
mov
and
icebp
orl
and
stc
inc
push
pop
mov
gs
rorb
sub
cmp
push
adc
out
stos
cmp
mov
xchg
movsl
jl
push
or
frstor
cmp
pop
mov
push
pop
movsl
aad
aam
push
scas
mov
xor
sub
pop
bound
or
sahf
mov
xchg
insl
inc
or
add
sbb
negb
cmpsl
push
out
loope
pushf
hlt
rclb
dec
cwtl
add
shll
pushl
ds
sub
test
js
mov
out
nop
sub
xor
push
pop
inc
clc
xlat
adc
mov
dec
inc
out
sar
sarb
xchg
mov
scas
jl
add
loopne
jmp
sub
jns
and
sub
daa
jae
pop
pop
ljmp
flds
int3
sbb
and
pop
popf
aaa
lock
gs
in
pop
xlat
cmpb
outsl
addr16
jae
invd
mov
clc
aaa
or
sti
mov
xchg
cmp
test
loop
imul
cmc
repnz
mov
outsb
into
add
or
sahf
inc
jl
outsb
and
imul
scas
add
enter
xor
sti
mov
arpl
jp
mov
out
push
dec
pop
into
xchg
and
xlat
inc
and
push
pop
imul
jo
adc
hlt
fdivrs
js
jg
jne
inc
pop
jg
loope
sbb
aad
mov
mov
jle
dec
sub
inc
ret
pusha
pushf
mov
jg
pushaw
lods
dec
lock
push
xchg
push
cli
or
push
cs
pusha
scas
pop
xor
sub
aad
xlat
aad
stc
mov
mov
test
testl
enter
cmpsl
lcall
ss
outsl
repz
ret
popf
lret
in
sti
mov
fwait
sbb
lret
sahf
inc
pop
clc
mov
mov
inc
test
cmp
or
nop
add
jge
push
adc
sbbb
push
cmpsb
test
pop
std
out
lret
aam
pushw
cli
popf
add
lds
stos
jno
jp
mov
mov
scas
add
sarl
or
inc
pop
es
cmp
inc
sbb
loop
imul
movsl
insb
push
movsb
lock
addb
xchg
je
or
dec
sbb
pop
mov
inc
or
nop
ficomps
jg
ljmp
xchg
hlt
jg
arpl
pop
jl
leave
push
out
ja
sub
push
fs
xchg
push
push
ds
lcall
cmp
adcb
rcl
out
scas
and
and
dec
adc
cmp
add
sub
inc
pop
mov
cmp
mov
leave
sub
cs
cmpb
cmpsl
sbb
dec
in
out
sbb
sub
test
lret
call
jl
stos
jno
and
aad
out
xchg
pop
out
int3
decb
out
popa
dec
imul
ss
adcb
lds
or
mov
xchg
lret
rolb
aad
imul
jge
xor
xor
mov
int3
ret
lahf
mov
dec
xchg
cmc
ljmp
dec
and
mov
imul
sbb
jmp
mov
cli
xor
testb
sbbl
mov
jbe
shll
jnp
push
xchg
mov
or
mov
movsl
or
mov
popf
mov
mov
hlt
repnz
cmpsb
int3
pop
and
enter
xchg
rcrl
orl
mov
pop
test
sub
fdivl
es
adc
dec
shlb
rcl
pop
into
lahf
stos
daa
mov
sbb
rcll
fs
popf
faddp
dec
bound
inc
scas
and
ljmp
xchg
sbb
pop
aaa
jne
ret
popa
nop
and
sahf
mov
pop
fnstcw
xor
xorb
cmpsl
aad
xor
push
pop
loope
roll
xchg
sti
push
js
in
push
sti
jne
repnz
lret
jecxz
mov
sbb
movsb
fisubrs
adc
pop
sub
sub
sbb
push
jg
loop
inc
add
mov
jle
xor
rcl
fistps
mov
frstor
insl
xlat
jmp
stos
pop
pop
mov
ret
in
shll
stos
mov
outsb
enter
mov
insl
aas
fbstp
dec
popa
fldl
adc
fisttpll
push
push
nop
pop
insl
cmpps
add
jae
jo
int3
data16
outsb
ficomps
js
cmpsb
jne
stc
loope
clc
ljmp
adc
cwtl
ljmp
ret
test
add
sbb
xor
jle
les
mov
or
and
pop
jecxz
imull
dec
push
cld
into
imul
inc
out
xor
in
push
xor
inc
rclb
pop
pop
lods
cld
mov
sub
cmp
fbld
sub
sahf
fs
jg
xchg
inc
icebp
ret
sub
bound
xor
pop
push
outsb
and
shl
xor
sub
cltd
gs
ljmp
outsb
repnz
call
and
lock
das
stc
push
lea
xor
mov
xor
add
insb
call
inc
adc
pop
in
std
jge
and
xor
sub
int3
lods
inc
mov
push
fcompl
sbb
xor
jb
testb
jo
cmp
roll
and
and
fs
xor
arpl
rorl
or
pop
inc
sub
in
pop
cs
pop
xor
lock
out
push
mov
push
cmp
loop
icebp
adc
pushf
test
mov
loopne
fidivrl
hlt
push
idiv
mov
insb
fwait
cwtl
mull
out
fwait
mov
jge
mov
mov
mov
ja
jl
jbe
mov
lret
and
loope
inc
fiadds
fisttpll
outsl
aad
lahf
adc
repz
cmp
xchg
xchg
xlat
loope
pop
cmp
aam
xchg
push
adc
and
stos
sbb
sbb
out
call
clc
fsub
mov
ss
test
popa
pop
cld
xchg
cmpsb
push
in
push
stc
add
add
xor
es
hlt
or
dec
mov
dec
cmp
test
roll
test
cmp
shll
cmp
xchg
mov
fidivrl
or
adc
int
adc
lret
loope
lods
ret
sahf
jnp
repz
scas
pop
cmp
test
je
stos
cld
cmp
sarb
aad
movl
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
jo
js
xor
jge
jo
imul
sbb
or
lods
daa
jns
mov
lea
test
xor
fnsave
aad
inc
scas
mov
jo
push
out
jns
push
cld
xor
lods
cmp
and
outsb
daa
adc
lock
subl
es
xor
sub
das
adc
and
dec
pop
pop
pop
js
sbb
mov
dec
cmp
test
cltd
xlat
and
sbb
imul
sbb
mov
idivl
push
adc
in
div
push
jns
pop
or
scas
out
pop
dec
insl
gs
std
jne
mov
rolb
subb
xor
and
mov
into
pushf
push
jg
scas
xlat
sbbb
sahf
pop
push
in
or
inc
out
mul
js
cmp
push
mov
or
daa
push
ljmp
enter
loop
call
sub
or
es
sub
daa
dec
call
inc
jae
scas
bound
and
iret
stos
push
adc
mov
pop
sub
ficoms
sbb
sbb
adc
cmp
lcall
adc
rol
add
cmpsl
xor
jbe
mov
jns
and
loopne
dec
inc
in
fidivs
mov
push
pop
dec
xor
and
jl
cmp
mov
mov
orl
dec
jmp
pop
jge
jo
shrb
cmpsl
jmp
dec
cs
xor
ljmp
ss
inc
pop
adc
mov
mov
cmpsl
inc
mov
nop
rorb
jmp
je
ja
or
dec
pop
imul
rcrb
imul
aam
xor
sub
cmp
jmp
and
call
push
addb
pop
adc
rcl
jmp
mov
fsubr
aas
add
push
dec
clc
cmpl
pop
ss
popf
sub
push
or
popa
sbb
fists
dec
dec
in
je
and
pop
out
dec
fldt
and
roll
sti
sub
nop
xor
scas
add
in
jne
sbb
mov
dec
fbld
lea
mov
pop
dec
pop
mov
or
dec
es
xor
mov
sbb
mov
dec
daa
loope
xchg
data16
mov
mov
mulb
cmp
xchg
add
cmpsl
dec
jp
xchg
ret
inc
mov
mov
jnp
sbb
pop
push
sub
inc
hlt
jle
test
les
pop
fistps
jle
mov
cmp
mov
adcb
mov
fs
das
loopne
repz
jle
xor
lret
xlat
dec
xchg
push
outsl
aad
xor
stos
and
std
xchg
pop
stos
lods
repz
and
add
inc
dec
jle
and
sub
pop
pushf
mov
jl
ffree
pushl
stos
sarb
xchg
repz
popf
xchg
push
xor
mov
xor
xchg
push
dec
jb
dec
pop
xchg
ja
mov
popl
lods
lret
xchg
adc
sahf
dec
mov
and
push
inc
xor
xchg
ds
int
add
adc
fdivrs
mov
outsl
cmp
mov
pop
stos
pop
cmpsl
js
std
inc
or
sbb
and
add
test
inc
add
or
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
sbb
mov
divb
dec
mov
sub
push
ficomps
ret
pop
fistl
sub
mov
cwtl
xchg
cmpsl
test
rclb
pop
cli
sbb
or
sbb
lret
mov
sbb
and
push
pop
pop
fidivrl
jno
fiadds
inc
sub
sbb
rcr
push
icebp
dec
mov
mov
cmc
jecxz
mov
rclb
out
mov
sbb
add
add
mov
pop
push
jbe
jno
xchg
add
jl
outsb
mov
xchg
rorl
rorb
les
mov
movsb
mov
repnz
ja
repz
rclb
cwtl
int3
test
dec
pop
lods
push
out
xor
inc
push
add
subl
and
pop
add
sub
push
lret
push
inc
inc
cmp
dec
arpl
loope
dec
sbb
add
adc
stos
das
xchg
out
xlat
ret
cmc
pop
test
scas
mov
cld
das
divb
cmpsl
push
or
push
loopne
or
jo
cwtl
push
push
or
push
push
cli
test
add
push
jne
and
xchg
mov
aaa
or
popa
ret
add
mov
xchg
movsb
pop
out
cs
mov
mov
data16
xchg
inc
test
inc
mov
bound
mov
rcll
lock
xor
dec
jae
movsb
in
loopne
fwait
enter
add
sbb
call
or
xor
xchg
pop
fbstp
xchg
dec
stc
fbld
mov
push
divb
inc
popf
ja
cmp
dec
roll
es
movsb
adc
pop
mov
or
xchg
pop
ds
scas
jle
or
data16
and
push
inc
cltd
jl
or
and
pushf
dec
test
push
fs
cmp
aas
dec
cwtl
call
das
jmp
scas
xchg
inc
push
push
and
sti
sub
outsl
pop
cli
daa
xchg
fldt
cli
jmp
ljmp
pop
push
xchg
rcll
loop
aad
mov
sub
mov
push
pop
lcall
push
das
cltd
adc
fnstsw
jecxz
orl
stos
pop
ss
push
out
fs
testb
aad
out
push
subb
lods
stos
or
pop
or
incl
xchg
into
adcl
mov
cld
decb
cmp
dec
ljmp
sbb
push
arpl
std
mov
push
inc
icebp
xor
xor
xor
movsb
fs
sbb
xchg
pop
loope
pop
jp
rcrl
pop
sti
push
cmpsl
fwait
aad
sbb
inc
ret
push
ljmp
fstpl
dec
dec
ds
aas
mov
test
nop
iret
adc
lret
xchg
or
sar
jno
mov
enter
jo
pop
and
dec
mov
adc
sbb
or
push
pop
cmp
leave
cltd
cmp
sbbb
mov
out
aas
mov
aad
movb
in
in
push
and
and
inc
es
jmp
mov
sarb
scas
sub
imul
hlt
rcrb
fwait
pop
cmc
pop
mov
outsl
jb
mov
scas
fcompl
daa
dec
cwtl
repz
sbb
jmp
pop
gs
adc
mov
cmpb
mov
or
add
add
jmp
outsl
mov
or
imul
jl
call
jo
jge
jo
repnz
adc
cmp
test
add
popa
mov
test
sarb
int3
rorl
dec
mov
scas
inc
mov
les
addr16
imul
add
mov
or
add
sub
ret
mov
loopne
cltd
mov
pop
cmp
mov
loop
jp
sub
mov
lret
xchg
inc
fiaddl
and
imulb
sub
cltd
mov
fsubl
stc
push
ljmp
movsb
cltd
add
sbb
sbb
lea
mov
pop
cmp
les
call
mov
mov
lret
mov
in
pop
inc
pop
dec
sub
push
test
mov
fstpt
jecxz,pn
xchg
insl
inc
or
out
fwait
pop
xchg
pop
or
movsb
mov
cmc
out
cmp
jle
push
mov
fdivrl
inc
xor
cmp
cli
push
arpl
mov
sbb
mov
fsubs
test
mov
ja
xor
movsb
int3
mov
std
jno
jge
aas
mov
popa
push
loop
dec
mov
mov
out
sbb
or
dec
mov
mov
jns
add
imul
xor
inc
faddl
shll
sbb
stos
push
icebp
imull
lock
movsl
mov
outsb
call
sbb
test
cmc
out
pop
dec
xor
push
push
inc
out
cli
sti
stos
mov
lret
add
jbe
mov
out
fnstsw
jmp
into
and
mov
cwtl
iret
hlt
enter
pusha
sub
loop
pop
aad
and
insb
jbe
push
mov
cmpsl
loop,pn
jecxz
sub
je
ficoms
dec
push
cltd
fisubl
pop
es
sbb
xor
mov
sub
or
rcr
loope
stos
mov
ret
push
cmp
mov
push
push
sub
sub
std
xor
mov
push
and
rclb
aad
jmp
imul
push
aam
sbb
scas
adc
dec
lret
jnp
lods
xchg
clc
sar
ljmp
sbb
jne
push
cwtl
mov
cmp
sub
insb
cwtl
js
xor
sub
sahf
mov
jg
rcll
inc
loope
cs
push
nop
mov
mov
cmp
popa
mov
lods
sub
stc
stos
testb
lds
push
pop
mov
cmp
dec
aas
cmc
adc
mov
sbb
dec
lahf
cmp
lahf
sub
lcallw
cmp
dec
xchg
inc
mov
data16
cmp
not
jne
cltd
jno
mov
add
lcall
scas
xchg
scas
adc
jno
popf
sbbl
mov
xchg
cmp
call
out
add
and
arpl
cwtl
inc
cli
cmp
pusha
adc
or
imul
push
outsl
cmc
fcoml
pop
cmp
inc
daa
dec
jmp
in
cwtl
jl
insb
std
push
out
lcall
lods
jno
jno
aaa
insb
mov
js
and
push
pop
icebp
xchg
repz
sub
push
inc
mov
or
push
push
loop
loop
xchg
stc
mov
push
cmpsl
push
das
push
pushl
es
mov
jl
xor
pop
mov
pop
sbb
add
orl
mov
insl
push
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
sub
inc
jo
pop
jge
jo
bound
push
nop/reserved
mov
pop
lods
clc
add
pop
xchg
xchg
aas
and
jae
loope
arpl
scas
icebp
filds
jecxz
xchg
ret
adc
add
push
dec
or
mov
jecxz
int3
mov
int3
call
mov
pop
shlb
fbld
fdivrl
cmp
sbb
xor
mov
fidivrl
dec
or
stos
push
xor
aas
jne
push
inc
dec
into
add
mov
cltd
cs
in
mov
pushf
adc
gs
mov
or
dec
mov
cmp
shlb
ds
es
pop
dec
inc
sbb
bound
test
out
mov
mov
test
dec
sarl
xor
mov
insl
pop
xchg
fmull
std
mov
scas
push
test
shll
add
xor
xchg
in
sub
and
push
ret
mov
and
insl
or
sub
ret
and
aad
mov
mov
ret
sbb
mov
into
mov
ljmp
jmp
cs
and
mov
ss
out
mov
aas
mov
jno
push
testl
adc
ror
not
or
mov
icebp
jle
sbb
pop
aad
push
sbb
and
movups
adc
imul
dec
out
cmp
test
int3
imul
sahf
dec
or
adc
dec
sub
fldl
adc
mov
dec
mov
add
sbb
int
popa
xor
jmp
dec
in
push
call
pop
pushf
fidivs
add
mov
jecxz
add
jl
or
outsb
lock
adc
jbe
jns
popf
fs
inc
xchg
mov
mov
xor
add
ja
mov
jbe
xchg
pop
or
mov
mov
mov
stos
xchg
mov
rorl
jo
cmp
or
cwtl
imul
pop
je
int
pop
das
jnp
jl
int
pop
scas
frstor
paddusw
rcrb
pop
mov
xor
enter
stos
cmpl
fcmovnb
dec
sbbl
dec
js
jb
insl
popf
cmpb
pop
stc
aam
inc
stos
xchg
sarb
aad
push
mov
sub
push
js
mov
lock
or
mov
push
fnstsw
loope
jp
jl
cmpsb
dec
jmp
xlat
mov
mov
push
sbb
rclb
scas
jno
cli
mov
add
mov
test
and
ss
hlt
jle
cmp
stc
mov
xor
test
or
adc
dec
jle
pop
insb
cmp
dec
aaa
jecxz
dec
inc
fists
pop
ds
xor
cmp
outsl
daa
mov
cmp
pop
mov
mulb
mov
xchg
popf
push
adc
sti
dec
cli
jmp
clc
add
jb
frstor
insb
insl
push
fsubs
inc
push
pop
jno
mov
inc
fisubl
lods
jecxz
mov
ja
inc
aaa
adc
mov
jle
jge
cmp
in
dec
ljmp
repnz
jbe
rep
cmp
int
cmp
mov
call
sbb
out
nop
adc
bound
stos
cmpsl
jbe
adc
movsb
mov
or
stc
mov
jne
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
mov
add
push
pop
sbb
sarl
leave
fs
or
mov
popa
and
lret
inc
es
andb
ljmp
dec
mov
in
dec
xor
cli
shl
sub
push
inc
jnp
fcoms
mov
rcll
mov
sub
push
jnp
repz
inc
lods
ds
out
pop
dec
xchg
loopne
mov
and
dec
clc
aad
dec
pop
test
gs
mov
adcb
and
mov
pop
insb
sbb
iret
or
cs
pmulhuw
ret
sub
push
lock
sbb
stos
test
popa
out
jo
xchg
fadd
sbb
jbe
adc
test
das
and
mov
push
mov
lds
pop
test
inc
out
imul
pop
test
and
add
xlat
jg
sbb
daa
rcrb
jns
and
add
ljmp
clc
pop
mov
cld
or
push
nop
idivb
jnp
int
or
std
mov
sti
adcl
inc
cmpsb
dec
jae
push
push
ds
aam
sbb
sbbl
pop
jp
gs
fcom
test
in
sub
fwait
jge
test
and
sub
push
test
outsl
push
repz
popa
cld
divl
dec
mov
fmuls
push
cwtl
adc
xchg
lcall
ljmp
mov
jne
inc
cmpsl
int3
cmp
inc
jbe
cs
stos
inc
loope
jl
movsl
xor
shl
sub
add
popa
fdivs
mov
fwait
inc
es
sbb
dec
xor
les
pop
inc
ret
mov
push
das
popa
leave
jecxz
call
in
pop
push
scas
xchg
mov
clc
sbbb
mov
push
sbb
out
popa
jp
cld
mov
xor
push
rcrb
cwtl
cwtl
ja
sbb
jb
cli
repz
mov
in
dec
cli
xor
mov
sbbl
int3
fidivrl
fdivs
dec
cld
testl
mov
int3
sbb
or
sub
iret
inc
jnp
and
mov
lret
loope
lods
dec
jo
mov
shll
mov
mov
push
sbb
add
repz
xchg
js
mov
mov
shrl
stos
adc
scas
jne
comiss
adc
push
and
ud1
outsl
mov
ret
cld
ljmp
fisttpl
sbb
push
sub
xorl
jns
sbbb
inc
shrb
lahf
cli
push
leave
xchg
dec
add
mov
out
cmp
push
xchg
or
sbb
enter
inc
push
ret
dec
add
cltd
jle
repz
push
scas
shl
cmp
in
mov
xor
push
lds
xor
rcl
into
pop
xchg
rcrb
stc
movsb
jo
jl
add
mov
push
adc
lods
enter
mov
test
clc
pop
or
js
jne
or
fistpl
jge
jnp
xor
mov
lahf
scas
cmp
mov
mov
sub
roll
sahf
cmpsb
sbb
pop
mov
imul
dec
sub
or
add
xor
in
pop
loop
inc
popf
shlw
loope
xor
sbb
mov
xchg
adc
sbb
push
dec
jp
daa
sahf
out
mov
sarl
xor
and
addr16
xor
dec
mov
decl
popf
rorb
add
in
add
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
cmpsl
pop
inc
jns
dec
jo
pop
jge
jo
addl
outsl
pop
push
outsb
les
adc
xchg
scas
mov
jl
rcrl
xchg
fwait
dec
push
pop
subb
sub
lods
test
insl
push
pop
mov
jg
or
add
insb
cmp
dec
add
lret
stc
inc
mov
jne
stos
xchg
cmc
and
ret
inc
sub
pop
push
and
xchg
jbe
inc
aam
movsb
sbb
fisubl
fdivrl
shlb
aaa
dec
es
or
or
aas
movaps
mov
in
and
mov
fcoml
stos
addr16
popf
or
ret
push
ljmp
imul
out
std
inc
leave
movsb
sub
out
sahf
enter
lahf
sub
xchg
sub
in
in
and
jo
sbb
mov
data16
push
cmc
jge
test
and
dec
data16
push
lret
idiv
mov
push
daa
ljmp
bound
into
xchg
test
dec
dec
adc
stos
movl
gs
mov
or
jnp
or
negb
jg
lock
add
cld
sub
jge
add
imul
je
cli
nop
jmp
sbb
inc
fmuls
sub
xor
pusha
ret
jg
xchg
xor
loop
mov
xor
mov
xor
les
cmpsl
adc
mov
cmp
jno
adc
stos
pusha
cmp
sbb
sbb
inc
pop
cmp
push
lods
ss
push
and
lea
aas
ss
mov
push
and
push
push
and
mov
cmp
jle
lcall
lahf
mov
add
imul
gs
call
adc
mov
jecxz
pop
mov
mov
leave
cmp
out
jns
cmp
dec
push
jg
xor
sbb
mov
lock
xchg
mov
or
daa
iret
push
mov
xchg
jnp
add
sti
mov
and
mov
mov
lret
mov
cmc
loop
popa
cmp
es
sbb
lock
test
xchg
mov
rclb
mov
push
pop
xlat
fwait
mov
pop
inc
jb
mov
adc
shll
adc
cltd
lret
repnz
lock
inc
jge
sbb
repnz
mov
jae
popf
mov
pop
int3
lahf
daa
mov
mov
mov
xchg
cli
repz
lret
enter
push
sbb
and
divl
outsb
jbe
mov
dec
pop
sarb
dec
jno
rcrb
and
and
pop
clc
or
mov
je
mov
mov
fs
adc
outsb
sub
in
xchg
les
shlb
sbb
add
popa
or
sbb
mov
nop
in
cmc
pop
scas
push
fcoml
ljmp
call
fidivs
mov
jne
es
xchg
sarl
jge
aaa
call
pop
aad
jns
xlat
xlat
xlat
pop
jp
push
adc
cs
lret
enter
jb
cltd
mov
divb
push
enter
adc
add
push
sub
ret
mov
sbb
sub
shlb
xchg
lcall
fisubrl
push
les
sbb
lret
fcmovbe
push
hlt
out
aam
xor
gs
sbb
push
sbb
inc
adc
pop
std
jno
in
pop
movsb
and
pop
dec
clc
test
cmp
and
jns
adc
stos
and
push
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
mov
pop
jge
jo
mov
test
repnz
xorb
test
sbb
xchg
adc
jmp
shlb
xchg
dec
faddp
fidivl
inc
loope
xchg
loope
pop
mov
xor
add
ljmp
imull
cli
cwtl
or
cmp
push
xor
adc
jmp
lods
test
pop
adc
repz
mov
add
xor
cmpb
aaa
test
dec
push
data16
cltd
xlat
push
push
jmp
add
int3
or
mov
in
add
or
cmp
push
xchg
pushf
sub
jo
push
sbb
scas
ret
int3
jae
pop
decl
insb
in
and
sbb
mov
das
xor
mov
fbld
pop
inc
cmp
std
std
xchg
cmpsl
xchg
faddl
pop
dec
gs
gs
scas
enter
dec
push
pop
decl
xor
mov
xchg
sbb
adc
int
popf
jno
sub
sub
pop
iret
inc
push
cwtl
cld
mov
ror
adc
mov
adc
push
dec
xchg
push
xor
mov
stc
es
dec
mov
pop
add
xlat
lahf
push
cs
notb
mov
das
fbld
xchg
sbb
fstl
mov
inc
xchg
data16
inc
int
mov
jae
sbb
and
mov
lret
xchg
je
jge
loope
mov
or
out
jae
fwait
repnz
imul
inc
je
mov
mov
lahf
adc
xor
sti
mov
mov
aas
mov
cmp
dec
aaa
push
jmp
pop
add
arpl
lock
pop
inc
jmp
fdivs
aad
mov
sarl
cld
adc
ret
add
lret
jae
adc
and
jne
cmc
insl
dec
cli
xchg
jp
sbb
push
mov
xchg
mov
icebp
add
je
and
and
out
ret
lahf
cmp
mov
lock
insl
lods
lea
orb
mov
test
inc
ja
rcrb
outsl
add
mov
dec
xor
mov
popa
fimull
lock
push
pusha
lds
cmpsl
xor
sbb
xchg
jg
mov
icebp
cmp
pushf
pop
mov
push
push
inc
mov
fwait
xor
lahf
subl
leave
mov
cmp
mov
xor
adcb
enter
out
cmp
xchg
clc
movsl
dec
jo
loopne
sti
mov
aad
pop
cmp
inc
cbtw
jbe
test
or
cs
xchg
cmp
repz
loope
push
es
and
cmp
xor
testb
inc
xor
mov
dec
leave
mov
dec
data16
lock
xor
dec
dec
fisubrl
add
xchg
je
hlt
in
sbb
mov
mov
pop
pop
or
xchg
jle
xchg
movsl
lods
inc
mov
mov
push
gs
in
rcrl
cmp
xchg
loopne
imul
and
mov
loope
inc
mov
mov
lods
adc
lea
push
pusha
mov
xchg
ret
add
cwtl
aad
dec
lcall
test
jp
out
sub
inc
in
xor
addr16
dec
aas
xchg
jp
aas
jle
arpl
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
insb
pop
push
jo
pop
jge
jo
add
inc
test
jno
push
push
xchg
outsb
sub
imul
loopne
sbb
mov
sahf
xchg
mov
pop
cmp
mov
cmc
xchg
aaa
xor
cmp
jno
pop
sbb
repz
jge
nop
cld
push
out
neg
test
ja
cmp
mov
mov
add
inc
mov
dec
insl
mov
and
xchg
sub
andb
or
mov
lret
add
cld
push
test
jmp
in
xorb
aad
in
lea
push
clc
jg
cmp
or
lret
stos
xor
popa
adc
mov
es
testb
lods
leave
stc
test
and
mov
incl
mov
call
cmc
dec
cs
cmpsb
and
int3
dec
lret
movsb
popa
and
js
mov
out
mov
fsubl
add
pop
pop
sbb
sbb
in
cmpsb
push
and
xor
jmp
sub
sbb
lods
xchg
js
push
mov
setno
adc
loop
add
out
dec
dec
imul
and
or
cwtl
push
lret
shlb
add
mov
xor
pusha
nop
jmp
and
xor
push
jge
loopne
inc
repz
and
mov
int
fisubl
scas
call
std
dec
dec
push
pop
mov
cmp
cwtl
inc
xchg
jecxz
aaa
ret
dec
cwtl
call
cmpb
lock
aam
mov
mov
push
and
sub
push
lea
lahf
jno
outsw
add
inc
and
jmp
adc
sbb
addl
arpl
movsl
fisubrl
dec
xor
cmc
cli
fdivr
outsl
mov
adc
mov
loop
xor
xchg
add
xor
push
popf
pop
mov
nop
repz
xchg
shll
push
push
lods
sbb
ljmp
scas
icebp
jge
cwtl
mov
sbb
inc
jne
sub
aad
jae
mov
add
sbb
sub
cmp
dec
data16
out
xlat
loope
dec
cmp
dec
pop
jne
and
sub
mov
inc
mov
mov
xchg
inc
clc
in
xchg
ds
push
pusha
adc
xor
vpsubb
repnz
xor
test
inc
adc
loope
mov
daa
and
pop
mov
mov
hlt
pop
cmp
insb
mov
aaa
add
xor
outsl
hlt
dec
repnz
xor
sti
js
lahf
lret
sub
push
dec
sahf
push
jb
adc
lock
add
xchg
dec
push
xor
es
in
xchg
cmp
mov
pop
insl
xchg
inc
dec
inc
or
xchg
xchg
cwtl
push
mov
or
xchg
cwtl
add
sub
in
ret
cmp
mov
pop
lods
push
fwait
jp
ficomps
pop
ljmp
mov
cli
mov
bound
mov
loopne
or
mov
xor
jmp
push
inc
lcall
outsb
xor
pop
stos
movsb
lods
mov
ljmp
test
xor
cwtl
push
pop
pop
outsb
mov
push
nop
cs
inc
mov
adc
idiv
pop
dec
cmp
addb
inc
jo,pn
jns
dec
in
je
cltd
fnsave
xor
icebp
repnz
pop
jo
inc
pushf
push
stos
imul
mov
pop
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
int
ja
pop
jo
mov
prefetch
xor
sub
push
or
shll
roll
pop
dec
fldenv
lods
sbb
jg
pushf
ret
call
mov
adc
push
popf
inc
and
mov
movsb
or
loop
inc
shl
sahf
dec
dec
jae
iret
hlt
cmpsb
ret
jbe
loop
cmp
dec
xorb
arpl
in
cld
lock
call
xchg
sbb
scas
dec
insl
into
mov
int3
jecxz,pn
push
add
push
lds
sahf
sub
dec
shl
push
adcl
std
and
jecxz
mov
and
scas
mov
fs
or
fs
lcall
mov
mov
mov
dec
jg
or
les
dec
in
adc
imul
fstpl
in
mov
xchg
lea
cmp
adc
or
mov
imul
cld
imul
sbb
stc
sbb
into
pop
prefetch
or
or
sub
loop
fcmovb
inc
xchg
sbb
ret
lcall
aaa
in
insb
pushw
in
mov
inc
pop
push
das
addb
js
sub
out
push
fildll
or
jo
roll
stc
push
sbb
mov
sub
aad
dec
stos
xchg
mov
xor
shll
inc
inc
sbb
iret
mov
jg
inc
pop
xchg
jnp
aam
adc
or
xchg
mov
imul
shll
inc
pop
pushf
or
or
test
mov
pop
adc
inc
xchg
cmp
inc
mov
inc
xchg
lds
subb
push
push
sub
pop
test
shrd
imul
loope
pop
mov
or
in
cmpl
arpl
inc
fisubl
loop
ss
popf
inc
lods
fisubrs
icebp
xchg
ret
movsl
push
xor
sub
imul
lret
jnp
cmc
pop
es
lods
repz
jge
inc
inc
mov
fadds
adc
pop
pushf
int
aas
xor
sarb
push
test
test
add
jb
push
xchg
sahf
dec
push
daa
cmpsb
ficomps
push
dec
int
add
fldl
push
out
push
andb
adc
fnstsw
mov
roll
int3
cmp
repnz
sub
nop
inc
insb
pushf
sbb
mov
in
loop
pushf
dec
adc
iret
xor
dec
and
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
jnp
roll
pop
jo
mov
sarl
sub
xor
sub
or
pop
loop
cmpb
inc
in
in
insb
aad
cmp
push
sahf
add
out
xchg
dec
call
notl
add
cmp
fbld
test
sub
loop
aas
jmp
test
negb
adc
inc
jge
or
mov
int
dec
fstpl
sbb
xchg
sbb
jno
and
dec
lds
push
cld
adc
jae
dec
int3
fnstenv
mov
imul
fwait
rcrl
clc
and
jne
sbb
sub
iret
clc
xlat
push
add
inc
xchg
mov
in
ljmp
pop
sbb
or
sub
out
pusha
cs
ja
clc
and
daa
dec
add
adc
sbb
jmp
fcoml
bound
push
jmp
push
test
add
popf
mov
and
mov
lea
push
and
aad
test
repnz
jle
add
push
inc
icebp
push
mov
roll
jmp
aas
jb
xor
daa
nop
sar
mov
mov
xorl
ss
inc
push
data16
rorl
inc
nop
sub
cmp
inc
push
dec
cmp
dec
cltd
in
divb
es
xchg
push
cmp
push
insb
push
roll
loopne
cmpsb
cmp
cltd
sti
movsl
and
jb
push
cwtl
scas
mov
imul
jp
test
jns
outsb
int
in
cli
xor
fwait
lcall
fldl
repz
add
mov
lods
js
shrd
mov
jnp
lret
sbb
jbe
cli
roll
in
xchg
ljmp
xor
fs
add
inc
sbb
push
ret
xchg
inc
in
adc
pop
mov
xor
rolb
add
cmp
daa
xchg
xor
inc
fdivrl
pop
out
push
popa
add
scas
push
jo
je
jne
test
mov
cli
cmc
dec
mov
push
mov
leave
flds
pop
incl
pop
sarb
xor
cmpsl
subb
rcr
addb
push
call
jl
cld
adc
adc
add
and
adc
pushf
pop
mov
in
add
ljmp
mov
bnd
push
mov
loope
xchg
xchg
lcall
leave
or
add
inc
gs
mov
mov
xchg
xchg
cmp
mov
push
mov
or
sahf
xchg
lods
aas
jb
or
dec
xchg
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
test
mov
push
sub
fdivrp
inc
lds
push
gs
hlt
pop
pop
dec
inc
repnz
xchg
push
mov
push
pop
dec
insb
add
mov
mov
insb
pop
lods
push
push
add
cs
push
in
push
shr
push
push
popf
test
lods
sub
cli
popf
sbb
roll
inc
jne
xor
pop
bound
out
sub
fsubrp
int3
call
mov
and
sbb
push
jnp
mov
fisttps
repnz
adc
push
lods
dec
enter
ret
xchg
push
sbb
sbb
out
pop
hlt
mov
popf
push
fwait
xor
jmp
cmp
mov
sbb
int
mov
sbb
mov
in
mov
pop
pop
orl
gs
xchg
pusha
push
jnp
cmc
pop
outsl
mov
insb
ljmp
addr16
push
test
push
sti
sub
mov
pusha
and
movsb
mov
lock
repnz
je
jnp
repnz
dec
xchg
je
loopne
mov
loop
mov
movsb
mov
push
lea
mov
es
dec
ds
stc
popf
cmpsb
lock
les
xchg
lcall
out
lds
and
fs
and
imul
inc
push
jg
push
cmp
push
hlt
repnz
mov
nop
cmp
sbb
push
adc
inc
ret
jae
sub
cmpsl
lret
jno
test
insl
lret
xchg
dec
jle
pop
push
imul
mov
jmp
nop
ret
iret
pop
popa
popa
outsb
mov
mov
pusha
pop
jl
pop
push
dec
dec
xor
add
cld
repnz
jmp
sahf
pop
xchg
inc
push
jg
or
cmp
dec
addr16
ret
sti
dec
aad
in
mov
inc
pushf
repnz
enter
sarb
adc
pop
test
push
jbe
pop
mov
daa
xlat
cmpsb
jmp
sub
addb
mov
lock
mov
push
jae
pop
jne
inc
dec
es
jge
jns
xorb
fabs
in
xchg
pop
mov
loop
jp
in
pop
pop
ja
data16
xor
negb
stos
cmp
test
inc
xchg
data16
call
into
sub
or
or
andb
mov
sbbl
and
je
cli
fcmovbe
add
fnstenv
addr16
push
inc
lret
ja
jno
push
inc
lcall
or
negl
ja
cmp
dec
ds
test
add
add
mov
or
testb
std
inc
add
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
sub
mov
data16
mov
xor
xlat
sub
and
lods
cwtl
cmpsb
pop
js
xchg
roll
stos
subl
scas
repz
sbb
movb
lock
inc
jge
xchg
add
cli
ja
stc
pop
stos
fs
jl
mov
dec
sbb
jl
lcall
xor
xchg
lahf
ss
stos
stos
repz
fidivrl
incb
stos
xlat
push
and
xchg
push
ss
pop
mov
fadds
jbe
test
repnz
pop
outsb
inc
les
lds
xchg
in
xorb
cli
pushf
gs
push
mov
dec
out
or
push
mov
shll
popf
test
int
pop
sbbl
mov
loope
adc
add
ss
xor
sbb
cmp
sub
loopne
add
nop
lods
fadd
cmp
mov
cmp
dec
call
negl
fidivs
mov
push
xor
add
pop
sub
xchg
fcom
dec
popf
int3
add
aam
lcall
jg
pop
mov
jge
shll
fldenv
aas
xchg
in
ret
jg
push
aad
pop
sarl
sub
xchg
pop
test
push
and
add
add
mov
jno
or
aas
inc
push
add
jnp
inc
xor
sub
int
and
push
daa
pop
repnz
data16
shll
imul
lret
mov
cmp
icebp
mov
sti
sbb
jl
push
movsb
jne
call
jbe
ret
sub
cld
mov
mov
inc
cmp
out
cwtl
loope
adc
lea
xorl
and
pop
es
cmp
pushf
sbb
push
xchg
mov
and
mov
stc
mov
push
sbb
fsubl
pop
je
sbb
xchg
out
lock
push
pop
mov
fldt
jnp
pusha
aaa
push
sahf
jl
mov
loop
add
xchg
cmp
dec
out
sub
cmp
xor
stos
addr16
pop
and
jle
stos
scas
mov
push
imul
and
push
movsl
incl
adcb
in
jae
scas
int
fisubrs
dec
jge
jae
hlt
dec
add
rclb
nop
cli
aam
or
dec
push
mov
pop
push
xor
stos
pop
pushf
xlat
xor
inc
dec
andb
fstpt
mov
mov
incl
mov
and
testb
inc
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
add
jo
mov
lods
out
aam
stc
cmc
push
out
inc
mov
adc
fstps
fs
xchg
xor
mov
in
xchg
xor
mov
sbb
lcall
xlat
call
and
and
inc
fiaddl
xchg
in
jne
shrb
inc
je
mov
mov
xchg
mov
sbb
mov
sub
pop
in
mov
in
sub
out
insl
sahf
cwtl
dec
dec
push
jb
jmp
sub
ljmp
clc
notl
xchg
outsl
dec
fwait
inc
es
add
mov
jmp
fwait
andb
sub
aam
movsl
push
jae
adc
bnd
gs
sbb
sbb
std
inc
jle
adc
pop
jo
lock
addr16
cwtl
divl
lods
lret
jg
mov
pop
add
stos
js
arpl
addr16
aam
pop
add
inc
sbb
and
mov
iret
and
jge
in
aad
mov
int
aad
adc
sbb
loop
cmp
gs
test
mov
arpl
push
imul
mov
out
das
cwtl
adc
mov
mov
or
jecxz
mov
cmpsl
sub
mov
jnp
xorl
mov
xchg
cld
jecxz
sbb
dec
pop
inc
movsb
pop
lock
lock
xchg
inc
dec
mov
movsl
jb
loop
push
mov
sub
jecxz
mov
push
mov
dec
push
mov
lret
shlb
sbb
mov
inc
adc
flds
xchg
imul
in
sarl
xor
and
and
dec
mov
into
lret
add
decl
aas
ds
shll
mov
rcrb
aas
jp
or
mov
repz
jnp
daa
ja
ja
test
mov
cmpsl
aam
sbb
in
or
aam
in
shlb
shll
jge
mov
or
mov
xor
mov
dec
adc
decb
and
loop
std
test
pop
ds
in
sbb
mov
cmp
mov
push
jecxz
dec
sar
ret
stc
push
jb
lods
xchg
sub
andb
mov
inc
dec
stos
out
sbb
mov
and
flds
ror
and
push
push
push
cmp
out
sub
fisttpl
daa
das
dec
popf
lods
icebp
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
shl
and
mov
lret
mov
inc
and
das
aad
js
push
addl
push
shll
xchg
lods
ret
push
mov
jbe
insb
jmp
imul
mov
cmpsb
jge
sub
cmpsb
lret
jecxz
data16
insl
movsl
dec
fs
pop
int3
xchg
ss
lds
out
dec
mov
xchg
mov
sub
movsb
fpatan
scas
stc
call
rorl
fscale
js
in
cs
push
sbb
sahf
mov
in
sbb
sbb
jge
xchg
addr16
add
test
aam
outsb
shll
cmp
test
or
int
ja
or
loop
call
sbb
pop
cltd
fnstsw
mov
add
inc
pop
add
xor
jp
push
ljmp
jle
out
jmp
mov
int
jb
out
insl
pop
push
fidivl
jmp
add
jns
add
cmp
xor
mov
dec
xchg
fistpl
leave
sbb
add
cmp
iret
push
pusha
fstps
cmpsl
xor
pop
mov
fs
int
out
imul
lea
mov
or
add
mul
or
pop
xor
push
sbb
jo
fnsave
pop
das
in
jge
daa
sarb
out
and
fwait
sbb
repz
mull
je
sbb
adc
shrb
jb
jnp
fstpt
sti
dec
gs
sub
fldl
pusha
scas
push
inc
cmpsb
jns
in
adc
call
lea
push
imul
repz
sbb
in
push
xor
mov
ds
xor
dec
iret
cmp
mov
mov
frndint
movsl
mov
mov
in
aaa
gs
or
clc
outsl
orb
and
xchg
xor
sbb
stos
pushf
add
in
add
cmp
xlat
sub
lods
nop
in
ret
cs
repz
clc
mov
sbb
and
lahf
arpl
inc
arpl
mov
sub
and
negb
mov
mov
xlat
roll
mov
push
jmp
je
push
jmp
cmpsb
pop
inc
xor
xor
mov
xchg
dec
aam
lock
jl
add
fadd
push
mov
fisttps
mov
sbb
pop
jmp
in
es
push
xchg
inc
das
sbb
insb
push
dec
xchg
int
pop
and
xor
mov
test
out
outsb
add
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
ja
outsb
jo
mov
bound
mov
in
mov
sarb
aam
gs
or
fadds
gs
mov
imul
mov
inc
pop
cmc
mov
data16
jae
xchg
divb
fcmovu
mov
inc
imul
dec
rcr
and
xor
pusha
mov
and
add
gs
test
mov
test
push
lahf
pop
inc
sti
nop
fs
jb
adc
xchg
jecxz
jae
aas
addl
lods
rcl
sysexit
stos
pushf
flds
push
mov
sub
push
push
add
das
mov
add
mov
int
daa
and
mov
popl
jp
test
outsl
stos
push
cli
add
arpl
out
inc
mov
mov
cltd
int
pop
dec
imul
mov
jl
lret
push
sub
sahf
cmpsl
xor
jnp
sub
ds
in
pop
add
repz
ror
lods
push
jne
jl
mov
cli
out
ja
sbb
jb
lock
sub
ret
in
mov
jae
mov
jo
movsl
dec
add
dec
inc
into
incl
repz
sub
insl
inc
movsb
xor
movl
ret
cmp
jne
sbb
std
inc
sub
popf
aas
lcall
mov
cwtl
fstps
mov
xchg
push
gs
cld
jl
adc
or
jg
pop
sub
pop
loope
jno
loope
stc
lret
xchg
cmpsl
push
aam
mov
faddp
jmp
inc
cmc
mov
add
mov
cltd
stos
xor
fsubrs
call
add
fidivrl
mov
dec
cld
mov
dec
or
arpl
addr16
or
mov
or
scas
pop
frstor
and
arpl
add
into
out
xor
xor
sub
xor
add
iret
loop
push
mov
cmp
jo
or
repz
movsl
add
mov
into
jg
in
push
cli
mov
bound
icebp
loope
push
out
daa
push
aaa
stc
sar
daa
mov
imul
and
cmpsl
fs
into
in
xchg
das
aad
lret
rol
in
in
pop
lret
fnstsw
sahf
mov
cmc
push
jb
imul
scas
nop
xchg
mov
out
cmp
in
and
enter
pushf
mov
inc
cltd
and
int3
stos
mov
aas
stc
jbe
mov
adc
cwtl
out
clc
jne
pushl
jmp
and
lods
shrb
in
jle
cwtl
cmp
jle
jo
fnstenv
pop
data16
out
sbb
loope
out
movsb
sub
pop
jae
dec
lahf
dec
mov
dec
aad
sub
push
daa
add
jg
xor
xchg
fcom
mov
fwait
inc
inc
mov
ljmp
lds
in
mov
lock
push
in
xor
sbb
xchg
pop
xchg
xchg
and
inc
mov
addr16
bound
or
aad
add
int
mov
adc
mov
movsb
test
in
in
mov
fcompl
pop
sbb
adc
pop
xor
idiv
sbb
loopne
adc
xchg
xor
orl
jecxz
lock
xchg
mov
jge
inc
out
mov
sub
lcall
adc
mov
push
mov
mov
adc
pop
loope
adcb
xchg
outsb
ret
dec
insb
or
sub
lret
stos
or
test
movsb
jo
repnz
cld
or
mov
cli
sbb
xor
test
out
outsl
ja
stos
sub
mov
movsl
lea
cmp
xor
jmp
sbb
fsubrl
push
popa
mov
and
idiv
lret
fidivrl
jl
in
inc
test
cs
out
mov
ror
pop
mov
idivb
lea
cwtl
dec
stc
mov
repz
movsb
inc
das
insl
jp
or
test
out
or
insb
movsl
out
nop
push
push
lfs
pop
jmp
mov
adc
xor
repnz
sahf
push
shrb
in
addr16
add
ja
shll
sub
jg
sbb
adc
pop
ficompl
pop
es
imul
mov
inc
cmc
jp
sbb
push
mov
test
int
or
imul
pop
sub
dec
stos
cmp
mov
cmp
add
es
fiadds
jns
sbb
test
add
cmpb
cltd
cmpsb
mov
aam
aam
aaa
std
int3
dec
lret
pop
shlb
push
xchg
out
loop
mov
loop
scas
pusha
mov
daa
repz
repz
aam
xor
inc
add
cmpsb
xor
pop
pushf
cwtl
cmpsl
sub
mov
mov
movb
mov
lods
scas
sarb
leave
sbb
push
cmp
inc
jg
push
lods
outsb
mov
imul
out
mov
mov
add
add
and
xor
insl
jp
or
fdivrl
into
leave
jle
jo
mov
addr16
pop
fists
cmp
jo
pushf
xchg
pop
das
add
ljmp
fisubs
jb
in
es
cmp
xchg
xor
fistl
sti
cmpsb
int
xchg
sarl
xchg
adc
je
icebp
pop
inc
repz
sbb
inc
cmp
ret
in
ror
jb
fisubl
xor
jp
aad
je
sbb
pop
add
jl
or
outsb
xlat
mov
cmp
in
jno
fwait
pop
or
dec
sub
enter
stc
adc
sbb
mov
jp
jg
arpl
mov
ss
imul
adc
cmp
mov
orps
jbe
imul
mov
call
cs
insb
es
mov
popf
add
jno
aam
inc
cwtl
cwtl
or
addr16
scas
int3
ss
inc
or
sub
aam
rcrl
dec
xor
jecxz
push
xor
bnd
lods
push
add
aam
inc
push
enter
adc
outsl
pop
outsb
xlat
jecxz
add
dec
popa
lods
cmp
fisubl
mov
sub
out
dec
pop
mov
jbe
icebp
mov
push
mov
int3
jmp
repnz
sub
fs
push
repnz
sbb
movsb
inc
clc
aaa
jle
fstps
mov
dec
test
sbb
cld
stos
mov
and
mov
inc
out
cmc
xchg
adc
dec
or
stos
mov
andb
imul
mov
xchg
pop
mov
scas
pop
mov
ds
lea
outsb
stos
push
mov
shlb
test
sbb
aam
dec
sbb
jno
mov
push
xchg
jb
jae
paddsb
stos
inc
jl
stc
into
xchg
xchg
cli
mov
mov
imul
cmc
scas
in
les
in
mov
fcoml
add
std
push
sbb
xor
nop
mov
mov
cmp
cwtl
or
adc
inc
cld
xor
push
scas
adc
lea
stos
fwait
inc
and
icebp
imul
add
sbbb
cmpsl
add
mov
jge
rcrl
add
mov
mov
cmp
cmp
iret
and
push
and
stos
sti
jbe
xor
scas
inc
xor
dec
add
int
sub
dec
pusha
pushfw
rol
clc
push
inc
push
jb
jb
pop
cmp
and
sbb
aas
sub
inc
loopne
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
pop
jmp
roll
jo
jle
jo
jmp
cltd
or
lea
mov
adc
sub
push
xor
ljmp
out
pop
decl
sub
lods
pop
or
in
aaa
xchg
jl
jb
or
cmpsb
fcmovnu
vshufps
mov
cmp
sub
jge
sarb
daa
pop
jbe
push
mov
test
in
fistl
ret
push
pop
xchg
imul
out
jo
test
push
test
lods
mov
jmp
sti
sbb
xchg
mov
push
mov
lcall
mov
shll
xlat
jbe
mov
mov
outsb
xlat
fsubrl
adc
jns
inc
pusha
in
lock
mov
or
bound
mov
xor
pushf
data16
dec
mov
movsb
push
das
pop
add
mov
out
xchg
add
mov
flds
push
push
xchg
or
and
adc
lock
loop
sti
fstpt
es
sbb
addr16
mov
aaa
add
jp
jbe
insb
data16
decb
mov
and
popf
mov
test
fidivs
cmpb
in
btr
test
bound
stos
in
xor
jle
test
test
aad
mov
xor
xchg
adc
adc
cmpsb
cmp
das
pop
in
movsb
and
stos
pop
and
outsl
sub
mov
ljmp
inc
aaa
cmp
ds
xor
sbb
ljmp
lret
push
outsl
adc
test
sub
jae
add
mov
aad
or
pushf
push
rcl
inc
mov
insl
rol
add
cli
insb
scas
adc
ds
mov
adc
add
aaa
jmp
imul
xchg
scas
test
push
in
pop
lret
add
mov
adc
test
outsl
int3
int3
and
imul
mov
xchg
inc
cmpsb
data16
ret
ds
xchg
fildl
imul
int3
sub
rdpmc
out
and
aam
ds
mov
loope
mov
push
mov
ret
gs
xchg
pop
inc
int
dec
pop
ljmp
mov
shl
incl
cmpsl
iret
push
dec
push
jno
mov
cmp
adc
push
jmp
mov
mov
push
mov
testl
or
lahf
call
xchg
int3
call
les
lods
mov
inc
inc
popf
ds
ficompl
in
mov
inc
in
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
cmp
flds
jle
jo
stos
fidivrl
sub
xchg
pop
stos
jecxz
or
lods
test
insb
sahf
out
sbb
stos
xchg
arpl
lret
fsubrl
shlb
int3
out
xchg
imul
and
popf
mov
sbb
cld
outsb
sbb
sbb
push
mov
mov
je
popa
inc
pushf
mov
repnz
in
lcall
or
add
pop
adc
and
test
adcb
inc
push
movb
imul
outsb
mov
in
add
adcb
sbb
insl
mov
insb
popa
push
mov
subb
loopne
dec
sbbl
fincstp
fwait
mov
out
nop
xchg
sarl
mov
das
mov
lret
and
rol
mov
in
std
xor
pop
out
sahf
fwait
dec
xor
add
rorb
fiadds
push
cmpsb
icebp
fldl
xor
das
xor
jns
sub
rorl
jb
pop
in
in
repz
adc
push
xor
sbb
add
insl
mov
xchg
xchg
aaa
mov
adc
sub
push
std
data16
stos
push
cltd
sbb
lock
mov
dec
aaa
fucomi
fwait
test
add
aaa
push
aaa
xchg
jbe
sbb
je
dec
das
insb
mov
mov
sub
fcomp
dec
lods
push
inc
shlb
lods
dec
add
cltd
mov
je
fnstcw
adc
sub
xchg
stc
mov
daa
push
dec
jg
lods
rcll
mov
hlt
dec
into
mov
insb
cmp
add
add
cmpsb
xor
sbbb
test
xchg
xchg
mov
sbb
movsb
sbb
repnz
push
test
mov
int
stc
and
aam
xor
cmp
pushf
add
xchg
sub
push
push
inc
inc
mov
test
push
pop
sub
mov
je
mov
sub
scas
iret
sarl
xchg
leave
fs
xchg
fcmove
lret
mov
dec
inc
lods
fdivl
cmp
xor
in
jns
std
rorb
iret
xchg
jmp
jle
lcall
rcrb
lds
mov
xchg
shl
js
xchg
mov
cltd
push
inc
mov
lds
loope
add
push
mov
andl
sbb
xlat
adc
jnp
sub
cmp
mov
xchg
xor
sub
cli
out
jne
aam
mov
pop
jb
test
repz
cs
out
cli
inc
pop
dec
mov
inc
js
orb
sarb
aaa
fucomp
mov
jl
jmp
jne
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
in
cmp
jo
jo
jle
jo
or
add
insl
push
pop
or
inc
aam
hlt
aas
lods
test
daa
scas
jg
outsl
jne
lcall
insb
mov
mov
jno
test
std
xchg
mov
cld
cmp
push
sarb
inc
xchg
jbe
in
inc
in
xchg
mov
imull
leave
ja
and
stos
pop
cltd
aas
idivb
jl
data16
inc
ficoml
push
inc
mov
insb
push
mov
jecxz
mov
rorb
scas
in
pop
or
stos
lret
adc
xor
in
mov
rcll
jg
jbe
repnz
mov
jl
xor
shr
fstpt
test
cmp
iret
add
shrl
mov
cs
mov
inc
sub
out
push
cmp
xchg
loop
mov
sbb
sub
jb
push
jmp
mov
add
ljmp
xor
dec
mov
out
push
push
outsb
ja
mov
pop
push
shll
mov
cmc
cmpsb
pop
mov
mov
cmp
jg
push
xor
lret
in
sarl
sub
std
mov
cwtl
insb
sbb
push
mov
mov
loopne
aaa
xchg
clc
ja
icebp
jecxz
out
fs
arpl
adc
sbb
test
repz
jnp
shlb
push
push
notb
and
popf
mov
scas
push
xor
cmpsb
bound
dec
jbe
sahf
mov
clc
js
rcrl
loop
stc
cltd
les
mov
out
xor
sbb
dec
or
xchg
hlt
call
xlat
out
adc
adc
dec
mov
mov
aad
mov
add
dec
stc
jle
out
es
pop
sahf
mov
aas
mov
outsl
loope
gs
jae
jg
stos
jno
cs
fadds
inc
and
inc
sub
ret
sub
mov
ret
dec
xorb
add
ret
cwtl
arpl
and
inc
sub
mov
mov
add
cmp
mov
test
dec
jecxz
dec
nop
clc
stos
aam
adc
cltd
ss
inc
jle
cli
add
out
or
ret
stos
dec
test
fildll
pop
repz
jae
push
in
rolb
push
push
test
push
hlt
shrl
jl
icebp
pop
ljmp
adc
mov
xlat
xchg
popl
inc
xchg
pop
xor
mov
xor
jmp
add
mov
jb
jge
jge
lods
movsl
stos
adc
jo
jle
jo
xlat
push
repnz
mov
test
movsl
loope
les
in
scas
mov
inc
ret
cltd
and
dec
neg
and
xor
pop
mov
push
loopne
int3
inc
and
inc
or
or
cmp
movsb
add
inc
jecxz
add
lret
mov
add
xor
add
jno,pn
shll
lods
push
push
or
jmp
out
jge
xchg
mov
fs
call
les
sub
loope
aad
or
fsubrl
pop
lods
stc
cmp
in
add
lock
mov
push
cli
xchg
cli
pop
sbb
push
push
test
jae
xchg
lds
addr16
sbb
stos
data16
fmulp
mov
jb
or
mov
cmp
jo
aad
out
jecxz
ja
fidivrl
or
cmc
movsb
inc
sub
movsb
lret
xlat
notb
adc
add
xor
xchg
addr16
jne
cmp
inc
adc
mov
mov
and
test
add
jmp
stos
hlt
xchg
imul
adc
repnz
mov
cmc
mov
jg
xor
scas
sub
ror
fcomps
ss
sbb
mov
mov
hlt
mov
inc
imul
out
jge
aad
aas
data16
mov
loop
sbb
sub
and
cmp
jo
xlat
gs
cld
or
mov
aam
ss
imul
outsb
test
sbb
stc
mov
in
sub
push
xor
fcmovu
ljmp
out
adc
and
in
out
aaa
push
dec
cmc
pushl
in
mov
cmpsb
lods
jmp
jb
ret
stos
jp,pn
repz
lahf
or
or
or
pushf
sub
push
in
push
and
mov
add
mov
cmpsl
and
daa
xor
add
mov
adc
pop
cmp
gs
mov
push
push
hlt
adc
xchg
xor
and
data16
scas
int
push
sbb
add
loop
shll
pusha
mov
ret
in
sub
adc
shll
push
cmp
std
outsb
loopne
stos
adc
adc
lcall
and
mov
xor
jns
jbe
fildll
lds
loope
xchg
icebp
push
test
mov
shll
leave
xor
dec
push
adc
jns
cld
movsl
add
ljmp
shl
or
ret
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
pushf
inc
repnz
jg
mov
loop
push
outsb
sub
lods
fldenv
mov
hlt
or
sub
insb
cmp
jb
mov
jns
cmp
jae
mov
mov
mov
inc
ds
mov
mov
sbb
xor
adc
mov
ds
xor
aad
inc
cmp
decb
rcl
or
repz
xchg
add
jmp
dec
and
cmp
push
jp
movsl
fistpll
push
scas
les
iret
pushf
sbb
int
sub
into
and
out
jl
pop
lret
jg
mov
xor
test
faddl
pop
push
inc
pop
pop
lahf
iret
xchg
inc
jo
add
pusha
pop
xchg
and
push
and
jp
xor
xor
mov
xrstors
jo
mov
call
mov
lcall
or
in
cmp
leave
sub
adc
adc
test
lcall
enter
jns
dec
or
push
les
scas
daa
jmp
add
fdivl
movsl
jmp
add
mov
adc
and
push
mov
daa
movsl
add
mov
mov
or
push
mov
push
dec
rorl
insb
mov
les
out
addr16
not
movsb
mov
mov
cld
andb
insb
lock
out
loop
movsb
pop
mov
or
jnp
imul
enter
adc
les
fs
sti
xchg
push
inc
xchg
jo
mov
mov
fisubrs
in
jns
shrb
fdivp
fiaddl
cld
dec
stos
int
mov
addr16
inc
adc
or
outsl
pop
and
js
call
add
das
dec
cwtl
or
dec
pop
mov
jp
cs
cs
repz
pop
popa
test
push
mov
xchg
dec
jbe
int
push
outsl
mov
xchg
icebp
iret
inc
dec
fwait
test
adc
imul
jno
cmp
in
jo
dec
in
std
pop
jp
sub
call
sbb
xchg
ja
notb
mov
cwtl
cmp
pop
shlb
jecxz
mov
dec
xlat
cmp
mov
cmp
sbb
dec
mov
lds
and
cmp
je
pop
xchg
enter
into
sub
dec
daa
push
fdivl
mov
fdivl
mov
inc
fcmovnbe
stc
add
jl
lret
lea
stos
push
sbb
mov
xchg
inc
int3
push
outsl
pop
pop
cltd
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
fisubrl
frstor
jo
push
add
push
cwtl
or
mov
mov
call
aaa
or
or
lret
outsb
push
sub
fcmovb
movb
cs
scas
iret
push
xchg
dec
cmovnp
lods
and
dec
popf
xchg
pop
fidivs
jo
fmuls
xor
or
roll
and
sub
sub
out
sub
xor
dec
mov
push
sub
ljmp
insb
mov
jns
dec
lret
in
mov
xchg
adc
ja
dec
cld
xlat
lods
push
bound
cmp
loope
inc
sbb
mov
cmpsl
gs
jle
mov
iret
pop
jge
mov
push
fmull
pop
shrb
push
aaa
mov
mov
xorl
popa
cmp
mov
outsb
pop
loopne
lds
out
add
scas
mov
test
inc
mov
jmp
lods
scas
popl
jns
and
mov
mov
xchg
xor
or
stc
cwtl
in
lock
ltr
push
sub
js
mov
inc
lcall
xchg
sub
push
and
xor
jge
imul
inc
xchg
push
lea
scas
inc
xchg
iret
xor
iret
shll
imul
xor
pop
jno
fcmovbe
and
xlat
dec
test
mov
jg
dec
mov
mov
add
add
xchg
xlat
ss
jl
pop
pop
loop
sbb
ds
mov
int3
sbb
sub
sbb
dec
lahf
and
cmp
jno
mov
mov
ds
mov
adc
sbb
pop
imulb
jne
sbb
enter
subl
aad
adc
jb
fs
xchg
lds
push
xor
rol
jecxz
mov
xchg
xchg
es
loop
mov
test
lret
add
xor
pop
arpl
lods
xor
lret
cli
fldt
rol
lods
cmc
daa
sub
pop
test
out
xchg
jbe
fbstp
test
xchg
pop
pop
fmulp
in
lock
sbb
push
inc
insb
push
mov
sub
pop
imul
nop
stc
push
xchg
or
push
insb
fs
rcll
mov
int
in
mov
push
scas
fldcw
jno
enter
divl
rcl
jo
xchg
jp
sbb
or
pop
outsb
cmp
xor
sbb
or
mov
xlat
in
cmpsb
jmp
jb
xlat
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fsts
insb
mov
add
jo
jb
fwait
mov
call
mov
jp
aam
push
and
sub
insl
jg
fists
aaa
jno
xor
cmpsl
xlat
pop
mov
inc
cmp
pop
fldenv
jbe
scas
jmp
out
adc
sar
sbbl
negl
testb
notb
movsl
and
xchg
sti
inc
out
cld
sub
jno
adc
jne
and
test
notb
test
sti
lods
lods
aam
adc
cmp
aam
dec
xchg
xor
ret
imul
jb
fcoml
sti
xchg
divl
sbb
jecxz
mov
dec
push
rorl
adc
aaa
xchg
gs
mov
andb
ret
dec
fistps
jl
mov
mov
cmp
xor
cltd
test
adc
das
mov
filds
mov
xchg
cmp
push
mov
pop
out
inc
mov
movsl
push
ss
ljmp
or
nop
mov
sbb
xor
aas
in
fcomps
arpl
popf
cmp
pop
mov
push
cmpsb
test
mov
mov
mov
call
push
jl
mov
lds
sub
inc
jg
sbb
fcmovnb
les
dec
stos
dec
cmp
xchg
pop
mov
add
icebp
pushf
addb
sub
xchg
inc
fists
add
push
iret
xor
cwtl
mov
push
mov
pop
lods
mov
cmp
mov
pop
cld
sbb
popf
push
jns
call
hlt
push
jns
pop
cmp
xchg
pushf
push
mov
cwtl
pop
mov
inc
orb
lcall
inc
jmp
dec
js
in
fcmovu
cltd
mov
sarl
test
push
inc
push
add
jne
daa
aad
lea
fucomp
loope
bnd
cli
mov
ss
cmp
mov
mov
pop
sahf
jl
mov
cli
les
out
shlb
rcrb
dec
lcall
adc
dec
dec
inc
ds
repz
adc
loope
iret
popf
leave
repz
mov
shlb
cmp
shrl
sbb
insl
scas
stos
iret
lcall
cmp
xor
mov
inc
test
dec
scas
mov
push
ret
ljmp
mov
test
xor
mov
and
ljmp
push
pop
or
xor
aam
cmp
call
mov
and
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
sbb
add
mov
sbb
ljmp
mov
rcrl
mov
jmp
inc
test
inc
into
outsl
sub
mov
out
mov
popf
mov
push
hlt
fcomp
add
pop
and
add
adc
jmp
in
fadds
adc
pushl
adc
jns
xchg
out
es
int3
jbe
sub
fwait
xor
out
cmp
or
dec
xchg
push
adc
sub
fs
mov
scas
popa
imul
dec
call
in
push
pusha
xchg
cmp
test
test
addr16
inc
ljmp
movsb
or
pop
movsl
pop
push
jp
mov
bts
sub
and
xor
inc
xchg
cwtl
ret
xchg
lret
sub
lea
fwait
lock
cwtl
in
subb
pop
dec
in
out
or
stos
add
cs
popf
mov
dec
add
pusha
pop
fsubs
inc
dec
sub
mov
mov
movsb
sbb
dec
js
loop
fwait
test
les
or
shll
inc
mov
mov
ss
add
cmp
sahf
call
xchg
jbe
mov
stos
movnti
fstpt
rcll
sub
sti
pop
out
cld
imul
cltd
aaa
push
loop
les
int
xor
mov
insl
lahf
les
andl
xor
add
inc
insl
push
rcrl
in
outsl
pusha
push
test
adc
decb
push
idiv
mov
xchg
sbb
call
push
js
js
mov
lods
push
test
rorl
xor
mov
adc
mov
stc
push
sub
pop
mov
cmp
xor
mov
ss
mov
adc
cmp
inc
jge
lds
popf
stc
enter
adc
enter
jge
sbb
adc
adc
lcall
repnz
movsl
add
xlat
dec
push
ds
js
sub
scas
loop
and
mov
std
adc
cmp
xchg
fidivrs
fiaddl
and
rsm
and
jle
push
dec
pop
sub
pop
inc
or
fsub
xor
add
xor
add
gs
adc
inc
mov
rolb
movsl
adc
push
nop
insb
dec
dec
mov
mov
lcall
jmp
mov
imul
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
jecxz
xchg
jg
jg
mov
push
in
fsubs
push
jno
or
add
addl
aam
call
mov
dec
mov
pusha
loop
cltd
int
test
dec
mov
shll
fs
inc
sahf
leave
aad
jp
xor
add
fiadds
cmp
jmp
jmp
jbe
push
shld
pop
xor
sub
and
test
mov
xor
mov
push
shl
push
cmp
xor
lcall
mov
and
or
xchg
sbb
ds
mov
xor
jbe
and
imul
fs
mov
jae
rorb
je
shrb
jae
or
stc
les
mov
xor
add
sarl
mov
nop
sub
mov
push
sub
adc
xchg
xchg
cli
dec
add
shl
adc
xor
inc
dec
popf
arpl
repnz
stos
xchg
sbb
fisttpll
sub
mov
jge
daa
ret
scas
inc
repz
mov
mov
faddl
incl
mov
roll
push
popa
mov
push
cltd
rorl
scas
sbb
add
test
and
ds
adc
lret
sbb
lock
fcoms
xchg
push
stc
jle
pop
mov
mov
xor
aam
inc
xor
pop
outsb
pop
mov
mov
pop
push
cmpsb
dec
xchg
lahf
out
bound
test
dec
push
xchg
aad
jnp
push
insb
je
jb
pop
pop
mov
lods
icebp
les
ljmp
and
ret
orb
cmp
fstp
je
addr16
mov
lods
imul
cmp
adcb
lods
xchg
cmp
stos
es
jo
or
mov
lcall
repnz
fstp
mov
dec
push
jl
test
jns
mov
mov
sti
or
test
es
in
jl
call
xlat
cmpsl
dec
fidivs
cmp
add
jnp
inc
xor
fs
sbb
fcomps
and
adc
sahf
mov
out
jno
jno
cmp
in
or
push
push
daa
and
jle
jae
push
rorl
popa
roll
test
jns
pop
add
js
pop
fimull
daa
push
mov
mov
aas
fs
push
call
add
add
add
push
fdivrl
pop
xchg
aas
sbb
movsl
mov
jle
jo
shll
into
xchg
mov
xchg
mov
xor
testl
inc
lcall
ret
pop
sbb
lcall
inc
push
out
aaa
xchg
call
push
push
push
ret
call
mov
in
test
push
fst
inc
or
xor
std
insb
mov
add
xchg
jl
mov
lds
sbb
sub
sub
out
xor
jg
icebp
pop
aad
mov
inc
pop
out
lret
pop
push
aaa
pop
dec
xor
sarl
fs
test
mov
push
inc
mov
sub
out
xor
mov
mov
in
push
int3
xor
add
xor
lcall
jecxz
arpl
mov
stos
cli
lahf
dec
mov
loop
cwtl
mov
mov
ljmp
mov
pop
fs
cmc
cs
in
xor
adc
sbb
arpl
pusha
cmpsb
hlt
adc
push
jo
stos
shl
sahf
xchg
bound
push
stc
jnp
push
movsl
cmc
ret
push
and
stc
outsb
sub
shrl
fcomip
sbb
cmova
ss
pop
gs
mov
add
push
and
test
pop
test
test
hlt
icebp
adc
test
ficoml
or
jae
mov
loope
mov
inc
cmc
cmp
push
sarb
jns
inc
jb
add
xchg
loop
push
shlb
sbb
xchg
in
notb
jl
jmp
shl
mov
dec
cmpb
leave
push
iret
pop
loopne
gs
out
sbb
sti
pop
mov
sbb
enter
mov
xchg
hlt
movsb
cmpsl
data16
dec
pop
pop
sbb
rorb
clc
mov
cld
inc
sub
mov
jnp
cmp
fiadds
divl
jns
lret
or
decl
xchg
add
add
lahf
daa
and
xor
ja
popa
outsl
hlt
mov
pop
scas
jg
and
int
insl
hlt
and
insb
aam
adcb
inc
fsub
daa
pop
cltd
or
cmc
inc
in
lahf
jno
shrb
mov
inc
xchg
sub
push
out
fiaddl
cs
shr
fistpll
shr
xchg
and
push
push
das
scas
enter
js
into
scas
mov
iret
jae
fbstp
mov
add
ljmp
pop
int3
xor
sub
mov
mov
ficomps
add
xor
mov
adc
mov
xchg
push
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
mov
or
mov
cmp
pop
adc
pop
fucom
in
outsb
shrl
mov
ja
jnp
mov
push
ss
inc
mov
xchg
fildl
or
pop
outsb
ss
popf
inc
xor
sbb
cwtl
scas
xchg
lock
xor
lock
mov
mov
fsubs
in
shl
je
and
stos
cld
pop
dec
enter
mov
jnp
flds
jle
out
scas
es
aas
in
or
arpl
pop
data16
mov
repz
mov
dec
out
sarl
test
and
mov
out
out
xchg
or
lret
push
sbb
xor
dec
call
scas
jmp
xor
push
sub
mov
out
jno
adc
rol
add
outsl
and
mov
ror
loop
cmp
dec
clc
fxch
push
jae
dec
aaa
push
jp
lea
sbb
inc
push
pop
adc
pushf
sub
adc
adc
adc
ja
fldt
xchg
aaa
or
cmp
fidivl
add
lret
mov
andl
sar
sarb
mov
inc
je
aas
push
call
mov
dec
imul
xchg
mov
add
push
xorb
jle
lods
xor
jmp
aam
in
mov
outsb
loop
xor
clc
xor
inc
or
addr16
cmc
mov
clc
push
popa
hlt
cs
push
mov
imul
stos
outsb
mov
dec
aaa
jecxz
add
push
inc
ljmp
test
inc
mov
fisttpl
sbbb
pop
push
das
scas
mov
xor
mov
lds
push
js,pt
fdivrl
xor
out
in
cmp
sbb
icebp
shl
xor
pop
cwtl
sbb
mov
jp
lcall
test
jp
les
in
repz
stos
addr16
xor
inc
mov
mov
mov
mov
or
add
cmpsb
sub
repz
or
or
pusha
inc
stc
mov
dec
call
xchg
and
mov
mov
nop
lahf
insb
pop
xor
mov
xchg
insb
adc
fistpl
jmp
std
mov
push
mov
sbb
and
add
xor
xchg
push
or
sbbb
mov
cmpl
and
lret
dec
cmp
fiadds
inc
jo
push
insb
cs
pop
nop
mov
cli
add
mov
cwtl
xchg
imul
push
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
jne
jmp
mov
lcall
xchg
out
loop
dec
repnz
lods
sub
daa
add
scas
jb
xchg
popf
lret
or
push
pop
cmpsl
cmpl
pop
lret
shrl
aaa
push
sbb
mov
and
cmp
jns
std
pop
cmpsl
dec
xor
xchg
insb
cmp
push
pop
mov
sarl
or
out
push
sbb
jle
jle
mov
adc
inc
shll
es
call
jae
out
cmp
ja
inc
xchg
inc
cli
dec
jnp
popa
add
dec
rolb
in
or
addl
or
dec
out
jno
fbld
push
xchg
adc
movsl
movsl
pop
shrl
pusha
in
cmp
movsl
mov
movsb
leave
into
push
dec
xchg
test
xor
jmp
jo
jge
insb
jecxz
cmpsb
xor
movsl
cmpsl
xor
cltd
pop
lds
mov
jl
test
sbb
mov
sbb
push
rcrb
fcmovbe
xchg
lock
jmp
cwtl
pop
cmp
orb
int
xchg
clc
mov
or
mov
sub
hlt
add
cld
in
pop
cmpsb
mov
ss
scas
out
aas
mov
mov
push
add
or
mov
xchg
loopne
push
lret
pop
pop
sahf
outsl
adc
xor
push
mov
inc
movl
dec
or
push
add
in
and
xor
scas
fstl
incl
mov
pop
aam
push
cli
test
mov
add
sbb
out
sarb
int
mov
push
mov
pop
pop
jge
and
pop
repz
pusha
jl
out
jp
scas
mov
add
pushf
adc
dec
inc
imull
mov
sub
fmull
leave
push
and
cld
cmp
or
dec
mov
ljmp
cmp
cmp
lcall
out
pop
push
outsl
mov
jns
xor
shll
push
mov
mov
insl
cmp
pop
xchg
mov
or
jnp
in
push
cmp
mov
shrl
sahf
or
inc
sub
sub
cli
jne
and
pop
scas
mov
or
adc
test
enter
leave
loope
aas
enter
push
sbb
repnz
adc
mov
xchg
cltd
fld
ret
pop
and
and
xchg
push
and
sbb
incl
scas
mov
int
insb
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
sbb
adc
jo
jle
jo
dec
shlb
mov
jg
std
std
inc
push
xor
sahf
mov
outsb
xor
sbbl
and
add
clts
mov
outsb
ja
insb
cmpsl
iret
xor
out
inc
mov
nop
xchg
gs
sub
shl
push
jno
stos
adc
aaa
jns
push
push
lods
inc
jecxz
dec
dec
scas
mov
lret
aam
mov
inc
pop
aad
inc
mov
cmp
jnp
or
pop
cmp
cmc
inc
cmp
push
pushf
push
push
or
push
cmc
xor
xchg
or
dec
sub
fcomps
call
add
out
mov
lds
jecxz
test
ret
cmpsb
adc
xor
fwait
inc
jl
in
cmp
mov
loope
fdivrl
jae
mov
cmpb
fstpt
scas
add
cs
cs
and
pop
fnstcw
xor
cltd
insb
dec
lods
cmp
inc
adc
imul
pop
mov
stos
jne
enter
inc
cld
xor
dec
jne
sub
lcall
fnstcw
push
lods
jp
or
add
gs
fbld
scas
out
dec
or
mov
push
and
mov
push
pop
movl
adc
adc
cs
les
pop
call
sub
push
adc
in
or
aas
fisubrl
out
in
in
pop
inc
cmpsb
shr
or
or
fistl
or
push
mov
add
fucomi
fidivs
popf
mov
pop
mov
ficompl
xorl
cli
push
dec
fidivs
popa
cltd
in
xor
cmc
aas
mulb
test
inc
or
lock
sarb
stos
sarb
and
not
repnz
add
mov
push
or
sbb
test
movsl
push
scas
or
jne
fld
pop
and
pop
sub
out
fs
std
leave
pop
jb
out
mov
popa
inc
popa
add
fs
ret
mov
mov
cmpsb
in
dec
fs
xor
cld
leave
cmpsb
cmp
invd
jge
inc
xchg
cli
or
mov
mov
out
cmc
icebp
xchg
adc
adc
mov
push
mov
in
ret
mov
sbb
and
push
sbb
scas
add
daa
jge
adc
xor
and
inc
out
jge
sub
pop
mov
push
cmpsb
sub
and
inc
sahf
xchg
cwtl
mov
xor
xor
mov
or
add
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
mov
jg
mov
arpl
cmp
stos
push
xchg
sbb
test
ljmp
scas
in
and
or
loope
stos
int3
push
int3
testb
movb
lock
xorl
mov
cmp
push
shll
xchg
in
ja
pop
adc
sbb
pop
pop
jmp
cli
data16
cmpsb
icebp
lcall
mov
pusha
xor
pop
cwtl
dec
fwait
pop
sti
jmp
fs
int
call
ja
mov
pop
xor
push
mov
and
xchg
sbb
dec
sahf
ss
fnstcw
or
mov
mov
mov
cs
inc
call
add
xor
mov
dec
cmc
notl
push
xchg
mov
rolb
lret
xor
mov
mov
dec
fstps
fs
push
les
sbb
hlt
push
mov
fdivrl
cmc
xor
dec
pop
dec
push
mov
push
movsb
mov
lret
movsb
inc
aaa
shll
pop
lds
mov
pusha
cmp
jb
aaa
pop
mov
cmp
push
mov
jle
inc
jmp
arpl
cmpsb
cmpsb
and
nop
out
test
ljmp
jne
stos
dec
add
dec
jno
mov
insl
jo
or
mov
inc
pop
test
and
arpl
stc
lds
loopne
pop
in
aas
and
jle
add
add
jle
cli
lock
pop
or
rep
in
cmpsl
push
jecxz
push
inc
inc
mov
or
das
shll
dec
fisubl
push
mov
xor
adc
loope
leave
cltd
mov
dec
mov
push
pusha
jns
mov
sub
lods
push
out
stc
sbbl
sbb
mov
les
mov
mov
lret
jbe
mov
repz
mov
stos
repnz
ja
jns
mov
and
fwait
jle
jmp
icebp
pop
jp
jge
pop
insb
inc
imul
sbb
mov
or
jl
shrl
data16
jl,pt
inc
mov
xchg
inc
clc
xor
out
cld
xchg
and
and
leave
pop
lds
push
fsubrl
into
loop
dec
outsb
sbb
cmpsb
into
push
xchg
cmc
sbb
out
mov
cmp
sub
inc
std
jl
test
in
aam
fwait
daa
loop
mov
shll
add
or
push
inc
xchg
jmp
cmc
std
fs
jno
mov
addr16
movsl
pop
jg
mov
in
jle
and
scas
std
lock
fisttpll
push
std
mov
outsl
cmc
pop
ss
sbb
in
push
sti
stos
stos
pushf
cmp
jno
add
and
sub
cmp
sbb
lcall
jb
pop
scas
imulb
loope
stos
cmp
inc
cmpsl
aaa
loope
sahf
pop
insb
outsb
adc
inc
inc
xchg
jmp
xchg
add
mov
jmp
cmp
and
inc
fdiv
cld
mov
mov
fwait
adc
push
sbb
pop
mov
add
js
cltd
addb
stos
loop
stos
xor
in
mov
lret
btc
mov
and
out
iret
add
pop
adc
push
ljmp
fdivl
dec
mov
divb
leave
dec
jo
cmp
outsb
mov
rclb
jns
dec
and
dec
add
jmp
leave
push
rcll
sub
sub
into
add
jl
in
adc
sub
data16
aaa
push
xchg
pop
lcall
jae
push
nop
pop
ss
das
rolb
sub
mov
lea
and
outsb
cmp
aad
adc
popf
add
test
sbb
jp
mov
xchg
cltd
enter
lock
movsb
jns
aas
or
in
xor
xchg
iret
arpl
lods
daa
bound
test
adc
stos
nop
cmpsb
cmp
divl
jbe
shll
push
or
adc
adc
cmpsb
xchg
adc
mov
xchg
das
lret
pop
hlt
es
shll
xchg
jge
cmp
inc
sahf
cwtl
in
xor
js
hlt
jle
xchg
pop
mov
js
pop
imul
push
in
cli
inc
mov
mov
fwait
and
leave
fbld
sarb
pop
sub
pushf
std
adc
lahf
add
mov
sarb
mov
pop
cmp
loop
pushf
cmp
sub
in
imul
add
inc
push
push
push
sub
adc
cmc
lds
pop
or
push
mov
ljmp
pop
jns
popl
mov
enter
xchg
sbb
pushf
mov
in
sub
stc
sub
push
xor
pusha
jle
jp
inc
imull
pop
or
fmuls
repnz
pop
push
and
pop
pop
cmp
sbb
lret
popf
mov
add
or
jbe
fs
xor
mov
dec
cmp
inc
pop
add
cmpsb
cltd
ficoms
jecxz
jg
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
jo
stos
push
out
sbb
jo
jle
jo
adc
mov
lret
mov
int3
pop
rorl
inc
fiadds
imul
mov
lret
addr16
inc
push
out
movsl
pusha
inc
int
test
lcall
stos
sarb
pop
ret
sub
decl
pop
cwtl
mov
push
dec
pop
movsb
test
pusha
adc
mov
lods
mov
aaa
mov
jecxz
test
add
lds
imul
iret
jbe
jbe
test
dec
sub
mov
mov
cmp
shrl
adc
mov
mov
cli
mov
jnp
jnp
fisubrl
and
add
mov
imul
enter
hlt
mov
int3
cmp
into
inc
inc
decl
pop
push
jno
imul
mov
cli
mov
pop
and
jne
add
sub
mov
jecxz
mov
dec
mov
pushf
sbb
movsb
out
add
lret
push
jl
mov
lds
pop
sbb
out
rorl
mov
inc
nop
sub
mov
pop
push
or
mov
adc
mov
sbb
js
shlb
add
mov
orl
movsl
pushf
pushf
xor
test
cmpb
stos
sbb
mov
inc
ret
and
ss
int3
fmull
clc
pop
cmpsb
enter
pop
scas
rcrl
push
popa
mov
xor
mov
sbb
jmp
jmp
adc
mov
pop
mov
adc
repnz
xchg
popa
xor
aas
push
jg
icebp
inc
inc
mov
and
jns
pcmpeqw
xchg
out
jge
mov
mov
xchg
cld
adc
or
mov
xor
mov
mov
jbe
push
scas
push
sub
add
movsl
scas
rcl
in
sub
pop
push
mov
ffree
cwtl
sub
daa
jge
loop
testl
test
movsb
push
sbb
repz
mov
lock
mov
lods
out
push
in
pop
fwait
rorl
push
mov
mov
test
push
add
jp
js
mov
push
inc
jb
lods
cmp
outsl
fisttps
imul
scas
mov
je
adc
pop
cmp
and
out
xlat
data16
sti
sub
fs
je
mov
cmp
or
stc
hlt
test
scas
roll
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
xchg
sti
repz
sbb
mov
fidivs
cs
mov
inc
inc
push
xchg
fsubl
and
add
pop
cmp
aaa
ja
jge
pop
jnp
cmp
mov
xor
mov
lahf
bound
imul
or
and
and
cmpsb
and
xchg
sbb
sub
std
scas
jb
and
andb
ret
std
clc
cmc
dec
jae
mov
mov
aas
pop
pusha
cli
lea
sub
cli
out
jno
mov
mov
push
lds
addr16
sub
ret
les
or
xor
bound
jp
mov
test
fidivl
mov
movsl
icebp
pop
xchg
mov
inc
mov
test
outsb
sub
lea
or
cmp
xor
mov
xor
daa
add
sub
sub
mov
dec
cmp
push
push
mov
push
and
jo
mov
insl
inc
mov
sar
jae
xchg
jae
mov
cmp
orl
negb
and
jbe
push
shll
les
sbb
and
push
fstl
adc
mov
inc
mov
push
into
adc
mov
pusha
mov
ljmp
push
xchg
inc
cmpsl
fnstenv
sbb
or
data16
scas
clc
scas
cmpsl
xchg
std
jl
push
inc
cmpsl
push
cmp
fwait
sbb
or
jle
push
fcmove
inc
scas
inc
mov
jo
sub
push
test
sub
lret
xchg
dec
pop
pop
dec
add
and
pusha
pop
jg
mov
sbb
sti
mov
sti
mov
sub
aam
mov
test
xor
orb
fbstp
fbld
andb
fs
mov
les
sar
loop
push
adc
imul
sbb
aam
sub
xor
shlb
cmpsb
or
cmp
mov
lock
push
add
mov
dec
jns
clc
ljmp
lea
insb
ret
ret
ja
ret
imul
xlat
mov
add
push
push
mov
jl
add
jp
xor
add
xor
jmp
xor
icebp
scas
jle
in
cld
lods
cmp
fwait
jle
push
out
pushf
jbe
and
cltd
in
orb
push
arpl
imul
push
insl
mov
insb
test
aaa
mov
jl,pn
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
std
cmp
cmp
jg
mov
or
sbb
das
cld
scas
inc
scas
lahf
and
sub
mov
xor
clc
pop
cmpsb
dec
loop
out
cwtl
cld
pop
sar
cmc
mov
jae
mov
nop
enter
inc
mov
dec
xchg
add
xor
rcrb
fadds
sub
xchg
mov
ss
adc
roll
loopne
repnz
out
dec
inc
dec
ret
xor
mov
sub
mov
lahf
push
inc
push
jmp
rcrl
mov
lcall
unpcklps
lds
pop
rolb
inc
push
add
out
pop
clc
fidivl
mov
pop
xlat
mov
jp
add
mov
dec
mov
push
pop
dec
sahf
lcall
loopne
cli
test
push
test
in
mov
call
ja
sbb
mov
fisubs
push
dec
lds
sub
mov
orb
xor
dec
in
cmpsb
mov
xchg
mov
mov
mov
out
hlt
mov
adc
outsl
sarl
pop
mov
cmp
mov
inc
and
divl
cli
mov
mov
or
adc
inc
or
mov
fs
out
fstpt
sub
rorl
fwait
dec
push
addr16
bound
add
sub
cmp
mov
fwait
gs
stos
push
fs
out
movsb
xor
loop
inc
cmp
push
pop
jmp
aas
and
icebp
jle
lahf
lods
frstor
jmp
in
jno
dec
cmp
test
sbb
push
push
or
or
das
pop
fisubrs
das
cmp
add
outsl
add
pop
shl
mov
out
add
repnz
out
mov
insl
nop
ljmp
scas
daa
jmp
outsl
cld
ret
sub
push
jno
xor
aad
cmc
xor
pop
jo
jno
cmpsl
mov
int
test
and
shlb
les
jb
sbb
cmp
sbb
jmp
jbe
mov
stos
cltd
and
xchg
repz
adc
cs
or
shll
inc
inc
mov
nop
scas
mov
sub
jp
test
pop
movsb
fmull
inc
dec
in
cmpsb
sti
test
dec
cmp
test
loop
mov
push
rcrl
in
xchg
fs
inc
test
ljmp
popa
cmp
push
mov
sub
rolb
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
fwait
dec
mov
jle
jo
sub
jns
add
or
ret
dec
aad
dec
ja
mov
pop
es
lcall
test
int3
out
sub
outsl
cmpsb
test
cmp
fdivrl
out
xchg
mov
stos
loopne
xchg
movsl
jo
incb
cmpsl
sub
insl
push
shr
enter
inc
jo
add
xlat
sar
cmp
push
or
stos
xor
jg
imul
pop
arpl
je
je
lock
mov
push
mov
or
inc
dec
xchg
pop
jno
sbb
xchg
sub
test
aaa
insl
jl
inc
dec
push
sub
mov
xchg
addr16
ret
lcall
inc
dec
fbstp
rorl
cmp
cmp
shl
leave
sbb
ss
call
and
mov
fs
pop
push
add
loope
xchg
xchg
and
sub
push
lods
pop
lahf
mov
mov
dec
mov
ror
pop
pop
or
dec
rcl
adc
mov
cli
ja
sub
sub
sti
ss
and
dec
push
xchg
aas
loopne
push
push
push
jge
inc
jb
mov
inc
ja
xorb
add
sub
sub
lret
push
pop
aaa
call
roll
imulb
scas
mov
add
inc
adc
int
pop
inc
or
pop
pop
shrl
out
xchg
call
add
add
jg
push
es
les
dec
and
mov
stos
loop
push
or
jo
cs
mov
aaa
mov
jge
loop
lods
aad
in
xor
rcll
push
fisttpll
jbe
xchg
and
popa
lret
xor
movsb
ja
ffree
mov
pushf
pop
mov
adc
inc
jecxz
or
and
cmp
iret
sarl
dec
shlb
fcomps
mov
cmpsl
repnz
jl
fsts
mov
lock
and
insb
rcrb
xchg
jmp
movsb
sti
mov
cs
test
popa
inc
jns
cmp
push
in
push
and
cmp
imul
lcall
mov
dec
fisubrs
fbstp
aas
inc
je
ds
mov
and
call
xor
movb
lock
dec
js
add
sahf
in
je
rorl
and
imul
push
hlt
fnstcw
jno
inc
scas
in
add
dec
stc
mov
xor
sahf
add
bt
stos
imul
adc
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
