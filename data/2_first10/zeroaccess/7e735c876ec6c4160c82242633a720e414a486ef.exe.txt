push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
and
fnstsw
les
mov
ds
fucomp
lock
int3
add
ffree
outsb
mov
repnz
adc
out
ss
test
repz
fisubs
mov
mov
icebp
arpl
call
pop
rcr
inc
dec
shll
sub
inc
lds
dec
pop
ret
jnp
cmp
jle
popf
lret
lds
xchg
rolb
js
xor
cmp
out
inc
mov
jmp
mov
lods
mov
and
fcompl
ja
hlt
aaa
jne
sbbb
jo
je
inc
cmpsl
ret
add
sub
mov
int
hlt
lret
jg
negl
popf
jecxz
fwait
xchg
sub
mov
icebp
add
pop
jns
aas
mov
cwtl
pop
sbb
jno
orb
das
mov
jae
imul
fwait
add
inc
and
sub
push
cmp
jl
adc
xor
lods
int
repnz
cmpsl
pop
in
adc
lods
inc
test
pop
test
jle
mov
pop
or
out
popa
mov
cmp
lds
xchg
dec
sbb
sbb
popa
cli
leave
mov
push
dec
sti
xor
orb
ret
sbb
sub
cmp
push
or
test
pop
push
dec
ds
scas
cmc
sbb
push
stos
xchg
loope
push
cmpsb
push
push
cmp
xor
push
add
pop
pop
loopne
js
sahf
inc
xchg
out
xor
jo
jae
ror
jns
mov
fdivs
rorb
cmpsl
xor
outsl
and
pop
mov
ret
aam
inc
daa
cmp
dec
aad
les
jno
imul
gs
fsub
sub
int3
leave
mov
test
sbb
mov
iret
push
inc
mov
fistpll
or
imul
xor
jmp
fisubrl
fstl
outsl
sbb
or
jb
cltd
fists
es
pop
inc
add
sbb
dec
in
arpl
push
jb
out
dec
and
sbb
pop
adc
shlb
ret
push
pavgw
les
adc
mov
mov
xchg
shrl
and
jb
lea
add
push
cmp
add
pop
out
mov
shll
movntq
out
and
lods
inc
mov
sahf
notl
adc
shlb
scas
jge
cmp
insb
mov
add
mov
call
mov
mov
fmuls
jle
pusha
test
stos
and
shlb
mov
int
loope
dec
ret
mov
and
mov
movsl
mov
out
rcrb
mov
mov
lea
sub
jg
dec
cmp
icebp
sbbb
mov
cmpsb
jns
test
in
mov
aad
pop
cmp
out
es
mov
add
scas
or
out
inc
or
cmc
jae
cmpsb
es
insb
out
stos
je
push
js
cmpsl
mov
cwtl
icebp
push
popf
stos
mov
pop
rcrl
mov
push
jle
cmp
out
mov
movsl
das
lret
adc
shll
jae
add
mov
and
add
mov
sbb
mov
subl
sub
movzbl
jmp
testb
mov
rcll
mov
les
fldcw
mov
fdivrl
pop
adc
movsb
hlt
stos
call
pop
mov
into
mov
fldenv
fs
mov
jbe
jns
push
movb
rcrb
test
fdivrl
scas
xchg
repz
cmp
nop
adc
xorb
inc
push
or
sub
dec
xor
popa
mov
mov
aaa
pop
test
loope
pusha
xlat
mov
xchg
jb
cli
js
insb
mov
test
fidivl
in
sbb
sbb
lock
mov
lds
fdivrl
movl
push
in
ret
rorb
mov
ds
push
in
dec
stc
andb
mov
xor
mov
xor
or
hlt
lea
cwtl
int3
mov
mov
mov
call
jp
jns
cmp
xchg
xchg
cmc
and
inc
in
arpl
inc
std
dec
xchg
push
aaa
xchg
out
xchg
bound
cmp
pop
stc
cwtl
adc
xchg
mov
cli
shl
mov
push
lret
cmpl
iret
mov
mov
or
mov
adc
pop
das
adc
ss
pop
mov
arpl
icebp
pop
adc
inc
ret
rcl
or
sbb
subl
or
stos
shlb
and
xor
sub
sub
test
cli
add
add
sub
scas
jnp
aad
jnp
loopne
nop
cli
adc
push
gs
or
scas
loope
inc
mov
sub
cmp
shr
jne
dec
fcmove
dec
lods
mov
lret
or
ss
cmp
ljmp
fnstenv
push
or
pushf
inc
mov
fisttpll
movsl
pop
sbb
lods
sbb
dec
and
icebp
inc
into
gs
add
shll
dec
mulb
in
fdivl
cmp
pop
in
ss
in
push
bound
add
nop
pusha
xchg
jp
mov
and
test
aad
fwait
fs
sbb
push
or
das
add
pop
mov
dec
and
orb
lcall
lea
push
xlat
xor
lods
adc
and
stos
aad
ja
in
fdivrl
out
pop
adc
lods
mov
mov
mov
pop
iret
stos
cmp
out
jbe
and
cltd
or
xchg
mov
jns
push
outsb
inc
sbb
xor
in
jb
adc
lret
into
sbb
sbb
cld
xchg
pop
cmp
insb
cmc
pushf
imul
loopne
and
jecxz
repnz
cmp
xor
or
sbb
leave
imul
push
inc
lock
loope
cmp
or
roll
push
scas
adc
aas
imul
jae
insb
bound
bound
rcl
mov
in
push
gs
lahf
popf
xor
aam
mov
and
les
arpl
fimuls
rcrb
les
xorl
xor
jmp
inc
or
scas
stos
mov
sbb
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
movsb
mov
les
xchg
adc
icebp
sbb
fistl
cmpb
adc
dec
and
push
dec
into
pop
mov
xchg
sub
hlt
xchg
packsswb
cmp
adc
push
dec
inc
mov
mov
adc
orl
cmpsb
icebp
loopne
sub
jg
testb
xchg
hlt
aas
imul
sub
dec
xor
in
fisttps
movsl
daa
mov
stos
js
xchg
pop
aas
ljmp
mov
and
add
mov
pop
and
sbb
mov
xor
inc
cltd
lahf
jbe
and
dec
cmp
in
sbb
lahf
stos
enter
add
dec
mov
lret
or
dec
pop
mov
and
cwtl
outsb
and
stc
aas
sub
iret
sbb
out
ret
mov
pusha
shll
xchg
stos
jnp
mov
lods
cmc
cltd
nop
sbb
lahf
test
pop
stc
xchg
xrelease
adc
fcompl
cmp
lods
xchg
mov
clc
notl
pop
and
add
ljmp
add
jecxz
sub
adc
mov
inc
adc
adc
inc
sbb
loopne
cli
sbb
ret
xlat
add
arpl
loopne
aas
aaa
add
stos
mov
sbb
iret
xor
ss
xor
cmpsb
cli
imul
stc
xor
push
in
cmpsb
jo
aad
or
push
mov
mov
sbb
jbe
cld
fdivrl
insb
loope
dec
pop
cmp
lds
mov
and
jle
pop
cmp
xor
pop
lret
pop
mov
and
mov
fs
dec
rorb
jb
outsl
mov
out
daa
int
dec
leave
movsl
rcrl
ret
shll
or
in
sahf
shlb
sbb
cmpsb
stc
in
cwtl
pop
mov
mov
add
xor
in
xchg
mov
cmp
and
jge
cld
out
mov
and
fwait
inc
jge
xchg
movsb
mov
mov
mov
lods
ljmp
jecxz
mov
mov
cmpsl
mov
xor
flds
mov
push
dec
addl
pop
mov
push
mov
cmpps
add
popl
cmp
test
push
addr16
cmp
and
aas
popa
inc
fdivs
jmp
xlat
jecxz
mov
imul
fidivrs
mov
int
les
pop
stc
bound
jmp
icebp
inc
cmp
sub
leave
lods
cmp
loope
push
sbb
subl
outsb
lea
sub
mov
fdivrl
sbb
addl
cmp
and
xchg
add
xor
test
rol
add
fistpl
fmull
xchg
fidivrs
inc
pushf
lock
ret
iret
xchg
mov
scas
sarl
imul
sub
gs
sbb
inc
lcall
pop
adc
out
pop
jo
mov
mov
mov
sub
out
lock
fnsetpm(287
test
and
mov
int3
into
ss
into
inc
dec
stos
pop
mov
adc
loope
sub
aas
xchg
jg
ljmp
pop
js
loope
inc
nop
push
sub
add
inc
xchg
outsl
inc
add
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
mov
xor
mov
les
mov
dec
repnz
mov
adc
out
pushf
pushf
jl
push
mov
fisttpll
popl
mul
dec
cmp
mov
jo
add
xchg
fdivrs
out
cld
in
mov
mov
sub
fldenv
xchg
pop
mov
add
les
data16
inc
movsb
pop
adc
pusha
imull
dec
and
mov
daa
je
sub
sub
in
mov
addr16
lahf
sub
icebp
adc
xor
add
into
int
test
adc
rol
jne
jle
rcll
push
ljmp
push
in
jge
popf
outsb
fsubs
ja
pop
fcomp
inc
iret
dec
ljmp
xor
inc
or
shrb
push
repnz
mov
sub
pop
mov
fstpl
subb
ss
aad
mov
icebp
and
mov
hlt
mov
pop
inc
incb
push
adc
scas
push
mov
xchg
imul
cmpsl
inc
adc
ficompl
add
cltd
ds
in
test
mov
xor
adc
and
xchg
adcl
dec
mov
inc
in
sti
dec
push
in
js
jecxz
inc
cmp
int
adc
cmc
popf
pop
xlat
sbb
jbe
dec
in
movsb
insb
lea
pop
fs
repnz
fs
pop
push
bound
xchg
xchg
mov
rclb
cwtl
mov
std
cmp
mov
and
or
lock
mov
jns
stos
pop
jl
cmp
sub
xchg
shr
cmp
mov
or
jecxz
orl
into
pop
mov
je
cmc
push
adc
pop
je
jl
out
cmp
iret
xor
or
dec
std
lods
cltd
pop
jae
jle
or
add
mov
adc
dec
xchg
mov
iret
ret
and
mov
stos
inc
mov
jnp
pop
xlat
in
ljmp
xchg
leave
scas
popf
insl
fwait
add
test
repz
xchg
in
shl
lods
xchg
dec
jecxz
mov
ret
sbb
cwtl
dec
cmp
pop
fcmovbe
loopne
setb
and
cmp
dec
xchg
xor
lret
es
aam
je
in
dec
push
daa
jb
pusha
jl
pop
xchg
out
rcr
push
scas
push
xchg
push
mov
sbb
into
in
pop
adc
xor
cmc
inc
jne
pop
push
sbb
loop
mov
adc
dec
mov
sbb
inc
cmp
cwtl
addl
hlt
push
mov
jp
gs
pop
loop
mov
insb
inc
push
int
sti
add
dec
fimull
cmc
mov
aas
cld
mov
pop
imul
ficoml
mov
push
and
mov
inc
pop
pop
call
test
add
push
pushf
lods
mov
popa
sub
xchg
mov
adc
lods
clc
xchg
xor
inc
mov
fxam
mov
pop
int3
and
xlat
repz
mov
addr16
das
mov
es
or
lea
cvtps2pi
add
add
inc
add
dec
incb
add
cmp
addl
push
pushf
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
rcrb
mov
les
xchg
movsb
jmp
push
je
add
in
fistl
fcomps
jno
imul
and
lret
dec
adc
leave
dec
ret
lods
ret
sub
jge
sub
das
in
dec
ja
pop
adc
inc
loopne
push
ds
aad
movsl
ds
neg
mov
and
dec
lea
push
mov
xor
aas
xlat
push
rorb
and
jle
push
ds
sub
popf
popa
cwtl
stos
sub
add
lea
mov
loope
ficoml
lea
je
xor
xchg
add
mov
mov
sti
inc
idivl
test
js
or
jmp
out
inc
xor
movsb
fbstp
jnp
outsl
mov
insb
dec
pop
xor
fldcw
xor
sarl
cwtl
loop
jmp
test
mov
mov
add
repnz
xchg
mull
int
outsl
fs
loope
sub
stos
xor
inc
aam
das
xchg
pop
setbe
push
add
loop
sbb
mov
inc
xchg
push
pop
add
mov
adc
insl
pop
dec
out
pusha
out
mov
cs
adc
dec
shrb
pop
xchg
pop
cld
jmp
shl
xor
xor
xor
int3
mov
lds
mov
cmp
xchg
sti
jo
pop
sub
imul
cmp
int3
inc
sub
or
mov
data16
shrb
fs
cmpsb
adc
xlat
dec
out
xchg
mov
xor
je
mov
push
lods
dec
adc
in
fs
imul
push
dec
pushf
xchg
iret
xchg
test
insb
shl
sbb
test
or
loope
add
or
cmp
ret
rcrb
mov
dec
pop
jnp
dec
mov
ret
add
push
ret
jns
push
pushw
dec
mov
mov
out
adc
cmp
dec
stos
into
jge
insl
mov
cmpsl
adc
mov
or
or
lret
adc
mov
pusha
and
mov
das
push
pop
mov
mov
cmp
mov
add
sub
xlat
mov
adc
sahf
xchg
jno
out
and
xor
xchg
inc
loopne
jb
mov
push
ljmp
lea
aad
stc
inc
mov
mov
xor
jmp
xchg
or
aas
sti
sub
lea
imul
push
imul
in
in
scas
push
sbb
jae
xorl
imul
jo
add
lret
or
inc
gs
mov
aas
dec
jbe
loop
dec
dec
xchg
mov
je
cmp
clc
inc
sbb
jae
sbb
cmpsl
shr
mov
mov
push
mov
bound
sbb
clc
adc
fnsave
xchg
push
sub
in
or
xor
lcall
mov
push
cwtl
push
mov
adc
hlt
push
out
mov
fidivl
push
sbb
pop
mov
jl
or
lret
add
sub
sbb
clc
popa
call
dec
in
cmp
movl
jne
cmpl
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
sti
add
sahf
mov
les
mov
xor
stos
inc
ljmp
mov
dec
add
xchg
fnsave
xchg
js
adc
add
adc
ljmp
test
jg
inc
lret
cltd
fiadds
std
out
or
hlt
push
sub
sti
nop
cmpsl
ljmp
xlat
xorb
daa
xchg
and
into
js
cld
out
fmuls
mov
jp
jae
jge
aad
mov
push
mov
stos
dec
cmp
sub
mov
movsl
clc
push
dec
cltd
mov
jg
dec
loopne
popa
adc
or
and
ja
xor
popf
roll
cmp
push
test
mov
pushf
add
adcb
in
push
test
cmpsb
in
pushf
cmp
or
loopne
sbb
xlat
lret
shlb
pop
bound
lods
or
sti
jb
dec
jnp
int
mov
movsl
clc
insl
xor
lret
shrb
xchg
xchg
push
ljmp
mov
push
sub
int3
jno
int3
cmovb
mov
mov
jne
xor
movsl
int3
add
xor
fisttpll
xchg
cmp
test
jge
out
lret
cltd
or
cmp
cmp
fwait
pop
push
rorb
inc
push
lods
pop
cmp
out
imul
arpl
pop
mov
xor
sub
das
stc
xchg
dec
pushf
das
aaa
adc
das
sbb
outsb
jnp
lock
fwait
sti
mov
ja
scas
sahf
insl
es
fimuls
mov
sub
jmp
inc
cwtl
fwait
push
xchg
lret
jmp
mov
pop
cmp
pop
mov
push
and
rorb
adc
popa
jg
sbb
dec
mov
out
dec
xorl
push
jo
pop
xor
xlat
add
dec
jmp
mov
jnp
jb
jne
jns
fidivl
ljmp
out
mov
iret
mov
xchg
sahf
mov
inc
enter
je
inc
stc
arpl
test
adcl
pusha
adc
dec
std
sub
out
es
std
arpl
cmp
mov
mov
ficompl
dec
mov
inc
inc
jno
jne
jp
sub
lods
mov
xchg
cmp
pusha
sub
push
test
jb
js
adc
add
fdivr
and
xchg
hlt
xchg
push
shlb
daa
xchg
mulb
popa
adc
sub
mov
jp
pop
sbb
mov
push
lret
push
rcrl
lods
and
mov
ja
mov
int3
fwait
inc
aam
dec
push
bound
and
mov
pop
xchg
roll
daa
cmpsw
imul
push
test
jbe
cmpsl
adc
das
jns
or
out
jmp
movb
xor
dec
mov
into
clc
inc
mov
iret
fisubs
pop
xchg
decl
notl
jno
das
addr16
repz
mov
hlt
sbb
sbb
ss
je
loopne
cli
and
dec
sbb
pop
inc
or
insl
jae
hlt
cmpsl
fsubr
movsb
push
mov
ficoms
add
daa
mov
xor
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
fstl
mov
mov
rorb
lcall
pop
dec
push
ret
xchg
out
and
push
testb
aad
sahf
out
mov
pop
std
sarl
roll
xchg
jno
ret
adc
dec
mov
insb
scas
mov
hlt
xor
sub
leave
movsb
adc
enter
xchg
and
repz
push
testb
and
jge
mov
lods
mov
push
imul
shlb
dec
pop
xchg
inc
es
aad
adc
lods
test
sbb
bound
push
jg
add
dec
test
xchg
loop
mov
subl
sarl
add
push
ret
imul
dec
lds
mov
out
xchg
mov
jl
aam
mov
jbe
loope
xchg
loop
dec
arpl
mov
xlat
in
outsb
and
pop
add
or
add
inc
jne
sti
sub
or
mov
enter
movsl
mov
xor
mov
fildll
sbb
push
add
ret
add
out
mov
mulb
push
jne
loopne
add
inc
adc
out
inc
movsb
mov
icebp
fucom
flds
xor
lcall
jb
mov
int
enter
test
outsl
outsb
mov
mov
test
sub
sbb
leave
mov
push
shrl
xchg
enter
hlt
rcrl
in
sarb
push
fsubr
push
pop
call
roll
inc
xorb
out
outsl
sbb
dec
inc
test
js
imul
adc
repz
es
fs
dec
loope
jne
test
iret
out
fstpl
lahf
ljmp
mov
aaa
inc
push
aas
mov
shl
je
dec
roll
test
xchg
into
pop
cmc
jbe
adc
inc
mov
jnp
dec
xchg
inc
pop
dec
lock
mov
jl
jns
lods
cld
xchg
jg
in
das
iret
jbe
fildll
lods
mov
das
in
aas
imul
adc
xor
imul
mov
in
rol
push
mov
push
fsubl
jne
and
das
and
jge
jecxz
push
data16
jno
pushf
cmpsb
pusha
pop
in
pop
clc
xchg
push
icebp
add
sub
cmp
jle
jnp
int3
mov
xor
les
mov
jp
scas
xor
push
inc
rol
inc
inc
out
jge
mov
loop
dec
sbbl
outsl
hlt
push
stos
adc
inc
in
ja
sbb
dec
xacquire
iret
xchg
push
lods
mov
daa
mov
push
loope
stc
test
out
dec
repz
test
ss
hlt
push
push
scas
mov
and
call
push
test
jg
push
into
sub
or
mov
ja
mov
aam
and
inc
sub
loop
test
and
cwtl
push
adc
or
or
fcomi
nop
xorl
xor
icebp
aam
dec
sub
outsl
push
xor
imul
fwait
or
jne
and
pop
stc
sbb
test
pusha
jo
shrd
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
mov
cmovge
jno
lds
stc
js
addb
inc
rcll
mov
dec
add
mov
jae
stos
shlb
les
mov
push
shll
cmp
and
jge
aam
sub
das
sbb
push
mov
ret
dec
lock
jecxz
push
pop
rcll
mov
jge
in
add
inc
dec
add
test
adc
cli
push
je
test
jno
mov
cltd
push
lds
mov
cmp
mov
es
and
call
dec
lret
mov
sub
cmp
add
enter
std
out
orb
and
xor
pop
xor
movsb
insl
mov
add
lret
lock
push
sbb
mov
xor
in
clc
pop
movntps
test
xchg
push
sbb
aad
inc
outsb
cwtl
sub
mov
push
jbe
xchg
ja
or
pop
mov
jo
mov
lods
mov
mov
filds
xchg
jge
inc
sub
inc
pop
mov
pop
movsl
stc
dec
add
les
xchg
divl
sbb
aam
mov
add
jmp
mov
push
lahf
mov
ret
pushf
fucom
insb
jmp
je
outsb
test
mov
dec
jmp
and
fsubrs
pop
pop
popa
fucomi
and
sub
push
mov
xor
pop
hlt
ffree
dec
xor
in
xchg
je
cltd
dec
mov
jns
push
sub
test
gs
lahf
push
jns
mov
movsb
push
adc
pop
inc
or
hlt
push
fistpl
xchg
mov
loop
adc
push
lcall
imul
fnstenv
rep
sub
adc
xor
dec
jno
shrl
lea
cmpsl
es
add
or
pop
shlb
lods
dec
aas
outsb
jecxz
inc
aad
add
sbb
and
testb
int3
arpl
ret
lea
bound
mov
pop
pop
cmp
cmc
and
pop
and
ds
ffreep
test
ror
lods
sbbb
inc
mov
xchg
mov
mov
and
mov
stos
push
mov
scas
inc
rcll
cwtl
bound
sbb
push
adc
sbb
add
jl
mov
xor
in
jp
movsb
mov
push
lahf
pop
test
mov
cmp
movsb
lea
sub
inc
dec
fucomp
add
jns
jecxz
cmp
inc
leave
stos
ret
pop
andb
fwait
push
call
pushf
sub
push
aas
jle
pop
insl
aas
sbb
imulb
f2xm1
inc
or
mov
or
add
dec
cmovnp
int
xorl
roll
or
ds
sub
popa
aas
cmp
hlt
xor
jo
pusha
sub
cmp
dec
jecxz
insl
jge
mov
hlt
lds
pop
or
add
sbb
push
cwtl
jmp
fidivrs
scas
das
std
mov
hlt
mov
inc
lds
and
jo
cwtl
inc
and
rol
ljmp
inc
add
adc
mov
cmpl
mov
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
roll
cmc
mov
mov
mov
mov
xchg
notb
mov
data16
sar
sbb
fwait
inc
test
arpl
pop
cltd
mov
jmp
mov
dec
test
sbb
cmp
iret
cmp
shld
aad
inc
cmpsl
stos
sbb
sahf
inc
inc
or
shlb
or
sub
xor
xchg
push
push
negb
xchg
daa
sbb
lret
fstl
pop
les
mov
inc
insl
xor
xor
lret
pusha
jb
std
mov
lock
mov
into
inc
mov
add
adc
jmp
xlat
xchg
jle
add
in
fstl
pop
nop
loop
sub
xor
mov
cmp
cmp
sbbl
test
xor
adc
test
or
adc
test
imul
xor
rorb
dec
push
pushf
and
insl
jno
adc
mov
repz
out
fsubrs
imul
ret
adcb
and
add
inc
movsb
dec
xchg
cmp
xchg
xchg
rcl
dec
xchg
mov
mov
cmc
cs
into
in
cwtl
push
jmp
mov
xchg
mov
cld
test
fstl
imul
xor
pop
xchg
test
scas
push
test
andb
imul
jmp
sti
cli
nop
shlb
sti
aas
mov
js
lahf
js
test
mov
and
popf
cmpsb
cmp
pop
jns
fyl2x
pop
cmp
nop
lock
mov
bound
mov
outsl
rclb
adc
ret
pop
iret
lock
ret
les
xor
bound
lahf
loop
stc
sti
sti
aaa
cmpsb
into
pop
sbb
mov
popf
adc
push
pop
lds
icebp
loopne
mov
add
imul
lret
push
aad
aam
jno
pop
mov
inc
and
imul
loop
add
sti
and
jecxz
xorb
fstpl
mov
jmp
and
mov
fcoms
lock
ret
jae
pop
pop
lock
psubusw
scas
insl
xchg
shl
adc
xchg
push
fldenv
cwtl
jbe
mov
es
repz
xchg
scas
insb
fsubrp
pusha
adc
mov
nop
dec
stc
mov
xchg
mov
imul
bound
pusha
dec
dec
mov
fldenv
sahf
iret
adc
aad
pop
popf
inc
dec
out
inc
fs
test
push
xchg
cmp
jno
mov
adc
lret
mov
jno
pop
insb
out
or
xchg
xorb
mov
inc
lods
and
das
adc
mov
add
push
out
aad
int
testb
xorb
loope
mov
pop
cmp
add
lret
mov
adc
inc
int3
dec
lret
stc
xchg
stos
adc
sub
and
repz
xchg
cmp
and
mov
mov
cmp
add
rol
add
jmp
add
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
aas
imul
repnz
imul
jno
add
mov
mov
cmpsb
push
movq
insb
repnz
pop
cmpsl
xor
xchg
mov
repz
push
add
scas
int
pop
jmp
movsl
das
xor
xchg
faddp
xchg
pushf
aas
sub
out
and
and
ljmp
and
pushf
loopne
sarb
mov
cmp
pop
push
add
xchg
adc
lahf
lock
mov
xor
adc
fisttpll
jbe
adc
call
loop
addb
mov
mov
mov
sti
cli
sti
inc
repz
jle
lods
shrl
movsl
cmp
stos
pop
inc
arpl
pusha
test
push
hlt
out
std
scas
aas
outsb
cmp
jge,pn
inc
inc
xor
test
fidivs
jp
test
dec
scas
cld
imul
xchg
pop
push
mov
negb
decl
nop
pusha
pop
jns
jbe
mov
mov
adc
mov
adc
fdivrp
mov
mov
movsl
das
xor
push
mov
sub
inc
jl
cli
popa
enter
pop
js
orb
mov
out
push
imul
js
repz
cmp
shl
aam
mov
sti
mov
mov
xlat
cli
mov
jne
cmp
ret
xchg
mov
push
push
cwtl
add
push
mov
mov
pop
stos
dec
ljmp
xchg
bound
mov
test
int
pop
xlat
cmpsl
jae
xchg
mov
dec
scas
jp
fsub
xor
rcrb
xor
xor
cmp
push
sbb
sub
popf
cltd
xchg
push
add
mov
testl
bt
ret
sub
sub
call
jns
sbb
mov
mov
stc
or
out
jmp
nop
push
icebp
sbb
pushf
push
repnz
jecxz
inc
pusha
xor
mov
add
jb
cmpsb
sti
fbld
leave
dec
sbb
div
scas
mov
je
mov
cli
xor
rorb
and
mov
xor
fnstcw
mov
jbe
inc
sub
push
out
push
pop
iret
addl
cmp
pop
push
std
pushf
fisttps
or
leave
add
mov
test
shrb
dec
push
testl
popa
mov
jp
dec
sub
loopne
pop
xor
dec
dec
jl
mov
mov
or
flds
aaa
or
mov
sbb
and
and
mov
es
or
add
mov
test
mov
dec
pushf
in
xor
aad
dec
sub
push
ror
jle
scas
iret
mov
hlt
aas
shrl
aas
jg
leave
add
into
cmp
scas
sub
adcb
xchg
sub
aad
insl
enter
int
inc
inc
out
pop
push
outsl
loope
or
sbb
inc
inc
pop
adc
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
lret
fnstsw
les
mov
movsl
ficoms
pop
out
jmp
clc
sbbl
out
push
or
sub
fcomps
adc
mov
mov
daa
push
xchg
pop
es
dec
repnz
inc
rorl
lods
adc
outsl
into
ror
shrb
pusha
int3
leave
cmpsl
js
lock
push
cltd
cmp
mov
lret
jb
push
pop
insl
mov
sarb
push
test
pop
xchg
aaa
add
pop
loop
sahf
xchg
test
adc
mov
sub
inc
test
mov
dec
push
push
sbb
or
into
jae
cmp
jg
add
jo
xchg
adc
cwtl
jecxz
add
enter
and
adc
jge
outsl
loopne
popa
xor
lds
int3
adc
insl
ss
jl
jl
mov
stc
xchg
leave
mull
sub
into
xchg
lcall
mov
inc
popa
les
xchg
or
mov
loope
jnp
repz
lea
les
add
mov
and
mov
scas
es
push
imul
lret
stos
sti
dec
jnp
and
xchg
cmp
insb
ja
cltd
scas
into
jge
or
fwait
mov
mov
scas
data16
daa
and
adc
out
mov
inc
into
inc
xor
mov
test
clc
fsubrs
adc
xor
outsb
subb
cli
cmp
popf
xchg
adc
dec
inc
lret
nop
popa
cmp
push
xchg
jbe
outsl
cmp
std
repz
lret
out
and
andb
cs
jo
rcl
mov
das
mov
mov
sti
cld
pop
sti
xchg
or
or
lods
mov
pop
fisubs
pop
sub
rolb
inc
dec
add
mov
adc
jle
int
push
add
nop
aam
add
and
adc
pop
std
push
mov
mov
cmpsb
mov
mov
xor
xor
jbe
sahf
dec
adc
cli
dec
xchg
imul
das
fistps
out
xor
or
lock
inc
imul
xor
xor
sbb
or
jb
in
ja
sub
lock
iret
mov
push
and
mov
nopl
daa
inc
nop
xchg
mov
jbe
in
test
xchg
cwtl
push
mov
push
iret
add
mull
cltd
push
cli
add
xchg
pop
pop
cmpsb
pushf
adc
into
shr
enter
mov
movsb
outsb
orl
push
push
adc
cmp
cmp
ret
or
xor
iret
fnclex
cmp
pop
cwtl
mov
jle
sub
push
out
cwtl
lcall
notb
and
mov
sub
adc
js
pop
adc
cmc
in
adc
mov
push
pop
mov
cmpsb
arpl
push
inc
in
xchg
loopne
shl
sahf
pop
push
loopne
outsl
dec
scas
mov
sub
sub
rcrb
lea
add
mov
xchg
ljmp
push
ja
lods
cmpsl
in
lcall
cmpsb
lods
es
xor
mov
inc
stos
fmull
cmpsb
push
inc
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
jle
dec
xchg
mov
les
fisubrl
fucom
fucomp
jno
sub
repz
fsubs
xchg
cmp
insl
dec
mov
cli
mulb
jp
sbb
mov
push
push
cmp
out
lret
jmp
push
xchg
pop
dec
mov
dec
add
adc
jmp
dec
icebp
aam
sbb
inc
mov
cmc
push
popf
test
int
mov
pop
lods
out
imul
xlat
inc
jne
addl
dec
rep
nop
subl
in
xchg
and
jo
mov
sbb
cmpsl
fists
inc
aas
popf
movsb
mov
inc
lea
in
jmp
lcall
inc
adc
daa
popf
mov
test
ret
mov
mov
lcall
mov
rcrl
push
das
aaa
jb
pop
lock
rorl
and
add
inc
or
push
dec
sar
sub
ljmp
sub
and
out
jecxz
es
test
lods
push
or
roll
movsl
adc
into
xorl
nop
fcomip
jne
lea
loop
loope
loop
xchg
insb
dec
shlb
cmpsl
inc
ficoml
or
add
inc
jmp
pop
aam
xlat
out
fnstenv
pushf
test
hlt
pop
cmp
xchg
fisubl
and
lods
pop
cmp
sbb
pop
scas
inc
cmp
loop
call
and
push
out
add
movsl
mov
pop
scas
inc
fidivrs
mov
scas
mov
add
popf
jno
mov
xor
inc
outsb
lds
in
dec
aad
or
cmpl
cld
or
dec
mov
jmp
xchg
sbb
aam
lock
inc
or
inc
push
adc
add
lods
cmp
mov
repnz
mov
sub
jb
sti
mov
mov
cltd
jae
shrl
loopne
dec
jecxz
in
xchg
add
loopne
push
mov
fpatan
sarl
lret
xor
ret
andb
mov
ret
pusha
test
cld
pop
inc
in
or
dec
lea
data16
and
adc
imul
loopne
sbb
lock
loopne
out
xor
inc
ds
pop
outsb
jl
ret
sarl
or
push
sbb
inc
adc
mov
sub
push
movsb
mov
arpl
test
outsl
outsb
mov
iret
mov
repz
push
mov
adc
cmpsb
jle
inc
and
out
ja
xor
enter
inc
pusha
mov
mov
ret
fs
scas
test
xchg
mov
pop
and
mov
js
push
dec
xor
cmpsb
fadds
adcb
adc
add
nop
sbb
out
leave
hlt
mov
je
sbb
add
or
sti
leave
out
cwtl
pop
in
sub
xchg
lock
mov
ret
mov
jmp
push
jmp
shrl
int3
xchg
xchg
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
and
mov
mov
cmpl
mov
dec
cli
or
jno
jb
cmc
cmc
stos
inc
mov
pusha
jge
adc
pushf
and
loopne
xor
pop
aam
daa
jmp
cli
leave
sahf
adc
insl
jns
cmp
dec
dec
pop
and
shll
pop
gs
jb
cs
popa
xchg
dec
adc
mulb
mov
mov
mov
inc
test
mov
cmp
add
into
jae
lahf
ret
nop
cmpl
cmp
iret
stos
addb
repz
int3
enter
scas
add
push
push
aaa
pop
inc
dec
inc
sbb
xor
in
ret
mov
cmpsb
and
cli
add
sbb
lret
repz
or
mov
jb
jmp
and
adc
add
pop
es
fcompl
sub
aas
and
lods
jg
push
outsb
sbb
add
rorl
xor
popa
imul
xor
adc
mov
out
push
mov
adc
aas
inc
int
inc
adc
mov
push
stos
scas
ret
jne
sbbb
lods
jg
and
pop
inc
and
loop
movsl
xchg
repz
paddq
arpl
cmp
add
outsl
lret
mov
mov
push
repz
aad
popa
pop
lods
and
clc
shlb
jle
and
mov
mov
jg
ret
bound
add
sub
repnz
adc
mov
into
push
cmp
call
cmp
inc
add
iret
dec
addr16
cmpsl
jmp
gs
lcall
leave
jmp
mov
adc
call
imul
jl
pop
insl
das
mov
mov
enter
dec
faddl
enter
idivl
fwait
lods
das
xchg
nop
sbb
mov
pusha
adc
add
fidivrs
push
addr16
inc
test
and
or
in
adc
mov
or
ret
mov
mov
stos
dec
pop
outsl
add
push
dec
and
and
adc
xchg
or
mov
mov
lock
das
pop
rcrl
stos
cld
sti
aad
xchg
push
mov
arpl
cmp
jnp
xchg
fdivrs
xlat
mov
adc
mov
loope
mov
sbb
std
push
mov
push
loopne
mov
dec
adc
bound
push
popf
push
mov
fsts
pop
outsb
mov
scas
dec
push
and
in
fmul
xchg
aad
enter
aas
add
jnp
dec
push
dec
push
inc
adcb
adc
pop
jbe
sbb
daa
les
mov
mov
pop
sub
mov
sub
or
out
add
pop
mov
stos
sarl
sub
repz
ljmp
cmp
sahf
adc
push
arpl
cmc
lahf
cmp
in
pushf
outsb
inc
sbb
out
imul
or
jbe
gs
sti
cmpb
ret
into
test
mov
aaa
mov
jmp
jl
and
pop
in
cmp
lret
and
cmp
mov
pop
lahf
sbb
xchg
cmpsl
in
mov
pop
and
push
adc
fldt
mov
mov
shrd
shl
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
lcall
mov
out
les
mov
and
jecxz
mov
mov
test
inc
push
push
or
in
add
fdivrp
ret
lods
andb
push
add
iret
iret
inc
jbe
push
aas
jmp
push
stc
sub
cmp
aad
pushf
outsb
fildll
shl
pop
stos
cmp
dec
orl
out
cmp
shrb
or
push
out
xchg
mov
es
call
test
xchg
jg
hlt
cwtl
sti
xchg
jecxz
dec
fisttpl
jnp
dec
cmpl
out
xor
ss
inc
lock
sbb
js
jge
jo
sub
jecxz
lret
mov
fs
push
data16
sub
fcmove
push
inc
and
or
pop
je
mov
fwait
mov
mov
test
sub
fsubl
dec
adc
std
into
sub
aaa
lods
pop
inc
dec
les
mov
je
sbb
ret
into
ljmp
and
xor
push
mov
scas
bound
icebp
cmp
jl
sbb
fs
or
outsl
lret
adc
fcmovne
pushf
push
fcomps
and
xor
imul
fidivl
mov
mov
repnz
xchg
daa
push
sub
push
cli
cmpsb
pop
cmp
inc
sbb
icebp
scas
xchg
dec
shlb
cltd
int3
enter
xchg
mov
ja
pop
add
sarb
dec
or
mov
mov
pop
bound
icebp
pop
incl
lret
xor
xchg
cmp
faddl
shlb
mov
mov
insb
into
or
sbb
nop
sbb
lds
scas
or
dec
sub
mov
mov
jo
imul
xchg
xchg
punpcklbw
lret
mov
inc
adc
fwait
xor
std
lea
cmpsb
push
jb
mov
add
mov
jns
sbb
mov
std
add
fbstp
mov
cltd
into
mov
sbb
sti
lea
hlt
pop
lcall
xchg
sbb
mov
aad
fadds
enter
scas
decl
mov
sahf
in
testb
cmc
repz
push
out
daa
pop
mov
jg
xchg
cmpsl
into
jnp
lods
push
xor
cmp
mov
mov
pushf
push
push
inc
cmp
xor
xor
inc
cmp
dec
test
and
dec
aas
inc
adc
jno
or
fmuls
insl
icebp
hlt
test
mov
decl
ret
stos
adc
or
xchg
xor
adc
pop
shl
mov
or
pop
aad
xchg
pop
notb
mov
aas
fdiv
iret
and
or
or
ret
jecxz
xor
sarb
repnz
mov
jae
push
pop
or
jae
adc
imul
push
stos
andl
and
cmp
cmp
push
into
repnz
dec
in
or
mov
dec
not
jmp
int
mov
sbb
mov
sarl
mov
mov
dec
push
ret
fildll
mov
and
sbb
hlt
test
or
stos
fisttps
les
jo
cmp
pop
sub
inc
push
lds
xor
stc
repz
push
int3
rcll
iret
dec
mov
cld
cmp
das
pop
stos
mov
mov
xor
adc
pop
jae
cwtl
aad
loop
jne
loop
repnz
cld
testl
mov
push
cmp
fdiv
xlat
cmpsb
test
mov
inc
add
fisttps
mov
push
andb
jl
fs
jp
daa
sbb
jnp
icebp
test
push
mov
fildl
add
je
pop
adc
mov
test
dec
arpl
push
ja
dec
push
stc
test
nop
sbb
cs
push
loop
mov
in
pop
loope
inc
adc
popa
jne
rolb
mov
add
xchg
test
mov
mov
aad
out
test
inc
test
imul
aaa
lea
sahf
add
sbb
jno
mov
loope
adc
or
int
jns
je
movsb
cwtl
xchg
rcll
icebp
stc
and
jg
in
jp
fldcw
jnp
pop
and
xchg
mov
dec
mov
out
lock
push
mov
std
xchg
inc
mov
scas
mov
pop
fwait
das
loopne
push
jge
lock
cmpb
mov
in
or
mov
xor
jle
ss
push
sub
jmp
pop
cli
rcrb
cmp
iret
incb
push
aam
push
fidivrl
mov
jns
mov
ss
jge
add
push
inc
inc
mov
adc
cmpsl
mov
dec
sbb
imul
ljmp
in
dec
into
mov
xor
and
ljmp
and
pop
ljmp
or
dec
fwait
sar
mov
xchg
out
push
mov
fcomps
mov
xor
in
xchg
xchg
dec
xor
dec
pop
out
lret
cmp
mov
inc
cld
xchg
or
inc
enter
lods
pop
popa
subl
int
mov
sbb
sti
cmp
inc
xchg
in
aam
test
mov
dec
fstl
mov
out
mov
jmp
mov
fstl
jmp
js
jnp
dec
xchg
shrb
mov
aaa
and
jle
or
or
loopne
dec
popf
popf
inc
push
jbe
stos
mov
sub
repnz
or
jecxz
inc
es
push
cmp
scas
je
push
cmpsl
mov
mov
scas
aaa
or
jge
xlat
repnz
movsl
mov
nop
repnz
cmpb
gs
adc
sbb
sahf
add
push
out
xor
cld
int3
imul
mov
mov
pop
add
or
dec
sub
fyl2xp1
and
dec
or
jae
adcb
mov
push
loop
movsl
cmp
sbb
jno
add
dec
fucom
lea
repnz
push
call
loop
cmpsb
out
out
mov
das
insl
dec
pop
sub
jns
std
xchg
jmp
dec
sbb
inc
or
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
cmp
fnstsw
les
mov
xor
push
dec
or
mov
xchg
test
test
call
sbb
lret
in
lcall
pop
test
sbb
adc
and
push
mov
add
loope
sbb
mov
lds
je
jl
and
lret
and
stc
jecxz
sti
js
movsl
dec
pop
sbb
lock
and
mov
int
sub
mov
nop
repz
xor
cltd
shl
jbe
cwtl
test
cmp
sub
mov
cmp
out
lods
sahf
iret
jne
jns
push
je
fsubrl
jmp
xchg
cld
pop
mov
ja
or
rcrb
pop
fcmovne
xchg
mov
out
push
adc
sti
iret
outsl
movsb
add
dec
into
xchg
test
into
fsub
mov
out
mov
sbb
in
xchg
or
jae
loopne
popa
add
pop
test
inc
int
adc
mov
sbb
addr16
jecxz
xor
mov
sbb
pop
cmc
stc
pop
and
int3
and
out
int
xchg
stc
lahf
loopne
dec
xor
adcb
push
cmp
or
mov
pop
jnp
sbb
insb
or
mov
mov
mov
mov
jns
cmc
mov
or
es
add
jge
xorl
clc
ret
sbb
jge
je
pushf
shrb
inc
or
mov
data16
outsl
and
jns
push
in
push
cmp
jns
pop
pop
pop
pop
xchg
fdivrs
jmp
loopne
ret
outsb
inc
int
xor
rcrl
out
in
mov
jl
mov
mov
imul
or
pop
es
movsb
pop
bound
mov
and
shll
mov
jmp
mov
mov
mov
or
fisttps
jb
iret
adc
fstps
lret
push
ds
mov
std
pop
push
fsubr
xchg
mull
cld
std
adc
mov
mov
mov
mov
adc
rorb
jns
lds
das
loop
and
outsb
sub
and
cmp
mov
cmp
in
addr16
dec
mov
aad
or
loopne
test
push
dec
push
jno
sbb
test
mov
inc
adc
cmp
xor
int
prefetch
xchg
push
mov
inc
mov
or
cwtl
pop
dec
jge
push
pop
popa
mov
mov
ficoms
fsub
xchg
push
imul
mov
rolb
adc
outsb
jae
andb
in
mov
mov
icebp
fcoms
ror
sti
ret
fstps
pop
sub
xchg
inc
sub
mov
aaa
or
pop
in
loopne
push
cmp
in
inc
jo
xchg
and
fwait
or
push
xchg
bnd
push
mov
jbe
sbb
push
into
inc
and
outsl
pusha
mulb
jle
lret
lods
and
rcrb
dec
add
enter
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
les
mov
les
mov
js
imul
mov
imul
jmp
adc
out
xor
scas
arpl
push
xchg
lds
add
jb
and
pop
sbb
inc
inc
jmp
cs
add
push
xor
mov
xchg
mov
add
push
mov
cld
pause
inc
ret
mov
rcll
mov
lret
adc
lret
shl
mov
mov
out
dec
inc
and
or
adc
jae
scas
lret
and
pushf
aas
jmp
outsl
in
pop
push
pop
jns
imul
jge
dec
xor
sahf
mov
mov
xor
jmp
adc
in
out
mov
or
jg
loop
dec
jnp
cmp
mov
jb
fsubrs
xor
adc
stos
mov
js
incb
addr16
enter
inc
mov
pop
int3
adc
nop
fcom
repnz
jecxz
cmp
test
pop
loop
inc
xchg
cmp
mov
ret
daa
jle
mov
es
sub
cwtl
push
mov
mov
jnp
addr16
rcl
inc
das
movsb
push
idivl
pushf
lret
iret
mov
xchg
sbb
loopne
cmp
dec
imul
in
push
clc
sub
mov
add
aas
mov
adc
push
inc
pushf
insb
xchg
das
out
in
jns
scas
or
sbb
lods
mov
int3
jae
jo
pop
pusha
pinsrw
sbb
dec
or
pusha
movsl
jge
mov
loopne
inc
dec
movsl
xchg
xor
insb
cmp
sub
jb
jg
add
jne
adc
clc
roll
mov
pop
xor
push
xchg
mov
pop
inc
xchg
insl
xchg
shlb
mov
mov
pop
je
push
lods
push
mov
out
inc
jbe
jle
add
sarl
shll
mov
inc
push
pop
and
add
push
daa
imul
push
pop
out
lret
push
dec
popf
xchg
sbbb
jmp
jl
cmp
inc
cmp
add
adc
std
ret
shlb
mov
loop
inc
inc
fdivl
or
lahf
daa
shrl
ficomps
pop
dec
rcrb
or
dec
or
aas
js
inc
jp
and
call
xor
rcll
mov
xchg
ret
jecxz
imulb
sbb
pop
pop
imul
es
pop
lahf
int
in
cmp
jbe
cmpsb
push
ljmp
bnd
dec
sub
ds
dec
out
stc
testl
cmp
jl
jnp
sbb
testb
inc
insl
mov
or
aam
mov
cmp
mov
loope
cs
sbb
dec
cs
adc
arpl
jnp
jbe
adc
xchg
ljmp
cmpsb
mov
cmp
adcb
mov
add
push
insb
xor
mov
repz
mov
pushf
inc
and
sub
lret
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
sbb
mov
mov
sar
mov
dec
dec
inc
in
jp
mov
sbb
mov
cmp
sbb
jbe
xchg
mov
shrl
iret
icebp
adc
sub
scas
sub
mov
sar
add
mov
add
popf
xor
sbb
adc
cltd
stos
dec
aas
mov
movsb
sbb
les
test
test
in
cltd
jecxz
fisubl
mov
lock
scas
cwtl
or
adc
xor
call
xchg
mov
orb
ljmp
push
adc
ret
xor
push
bound
sarb
sbb
stos
jl
add
push
xor
in
bound
mov
pop
inc
mov
adc
fcmovne
add
mov
outsl
aad
sbb
movsl
push
rcll
xlat
movsb
xor
or
jle
stos
xlat
lds
sub
mov
sbb
inc
lods
add
fisubrl
imul
mov
adc
pusha
cltd
mov
xor
dec
fs
movsb
mov
arpl
add
push
pop
loope
jbe
outsl
cmp
cmp
jo
push
sub
cmp
xchg
dec
inc
test
out
test
fmull
xor
fbstp
xchg
fcompl
out
jno
pcmpeqb
xchg
cmc
int
test
ljmp
push
sub
test
aad
fcomps
lcall
push
dec
loope
outsl
call
mov
pop
outsb
shr
notb
mov
pop
call
leave
add
test
and
mov
ret
push
cwtl
or
std
lods
mov
pop
dec
andb
jno
mov
pop
cmp
pop
jge
xor
add
xchg
call
inc
and
arpl
or
mov
mov
sub
cmp
stc
test
push
loop
mov
popl
out
push
sbb
hlt
daa
cmp
xchg
pusha
jb
adc
and
cmpsb
fisubl
push
adc
fnstenv
pop
daa
gs
adc
roll
shlb
pop
pop
mov
cmpsb
insb
clc
and
mov
enter
mov
jno
add
xchg
out
sub
aas
add
outsb
icebp
xor
push
cld
pop
repz
stos
cmp
xchg
outsl
out
mov
pushf
addl
popa
mov
outsb
pop
jge
sub
mov
int
xchg
xchg
js
mov
std
aad
push
push
inc
lcall
fisubs
test
and
inc
pop
enter
or
dec
into
jl
ret
out
sbbl
ja
cs
nop
sbb
cltd
xchg
shll
stc
cwtl
jmp
int
cmpsl
rorl
pop
add
add
test
cmp
add
mov
inc
xchg
mov
hlt
ljmp
add
mov
scas
xor
lret
rol
push
mov
repnz
cmp
xchg
mov
daa
pop
adc
jle
int3
dec
lea
lret
insb
push
clc
loope
dec
push
mov
xor
or
ds
inc
xor
xor
dec
bound
cli
xor
cmpsb
push
insl
movsb
mov
push
aas
stc
adc
and
sbb
add
cmpsl
push
jns
mov
fidivrl
loope
loop
jb
push
add
ja
jns
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
or
mov
les
fsubrl
or
jle
divl
push
fwait
cmpb
sub
frstors
dec
pop
mov
mov
or
loopne
movsb
adc
loope
popf
out
xor
in
jle
cmp
cmp
push
into
xchg
xor
mov
lahf
and
mov
addr16
stos
or
jmp
xchg
rol
hlt
xchg
int3
ljmp
fistps
pop
stos
fcompl
test
mov
xchg
das
test
out
test
or
pop
sbb
xchg
shrb
jmp
out
add
push
xchg
call
cmp
ret
adc
imul
mov
faddl
add
cltd
or
push
in
dec
sub
aad
imul
adc
pop
rorb
jle
mov
and
repnz
insl
mov
inc
jno
cmp
push
aaa
ret
lods
enter
jno
testb
fimull
xor
add
sbb
ljmp
inc
and
push
movsb
pop
pop
inc
dec
xchg
fsubr
inc
cmp
test
and
adc
insb
mov
cmp
movsb
mov
nop
stos
ds
sub
xlat
mov
lret
or
pushf
orl
div
test
decl
adc
or
es
push
push
adc
movsb
aam
and
ljmp
xor
fsubs
fimuls
mov
cwtd
repnz
sub
mov
in
loop
xchg
or
fnsave
lods
stos
xor
cmp
push
ror
cli
ror
inc
cmp
push
jmp
dec
xchg
lret
je
add
xchg
imul
sub
pushf
arpl
push
daa
cs
addr16
lds
cld
andl
pop
fisttpl
jb
fsubp
jno
pusha
push
mov
jne
sbb
imul
sbb
mov
adc
cwtl
scas
jecxz
int3
mov
data16
mov
lock
aad
mov
inc
mov
sub
mov
pop
repz
xor
outsl
daa
fdivp
lods
dec
pop
test
fmul
ret
sbb
add
popa
adc
rolb
jle
jb
lods
mov
sbb
mov
and
es
add
mov
lods
add
inc
jbe
sub
sub
xchg
and
idivl
test
lock
mov
outsb
or
cs
movsb
sarb
sub
push
mov
xor
negl
push
cmc
pop
lods
pop
cwtl
push
repz
jl
pop
mov
push
inc
mov
in
dec
cmp
push
lods
lods
stos
insb
mov
dec
or
in
xor
cmpsb
loop
sbb
ljmpw
pop
in
cmp
pushf
dec
popa
nop
pop
movsl
ljmp
mov
aam
add
mov
dec
cmp
xchg
call
push
enter
cwtl
repz
lods
xchg
inc
xchg
xor
ret
xchg
and
xchg
sti
xchg
ja
neg
mov
test
push
sub
sbb
and
dec
pop
lods
out
push
andb
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
andb
mov
or
out
mov
out
rcr
mov
xor
sbb
arpl
push
test
popf
in
mov
jb
mov
jge
aas
inc
xchg
lea
adc
mov
bound
push
pop
push
ss
movsl
sbb
repnz
xor
mov
fnstcw
mov
lods
shl
imul
shufps
xor
lret
rcrb
iret
sub
push
jo
imul
jge
test
cmp
daa
pop
mov
imul
icebp
push
jp
insl
gs
push
cwtl
mov
cs
aaa
and
loop
and
jle
push
mov
pop
loop
and
lahf
pushf
xchg
dec
jecxz
mov
out
add
daa
mov
mov
nop
jge
lahf
stc
mov
cs
jnp
aas
xor
mov
lahf
dec
xchg
adc
stos
add
mov
add
mov
xlat
dec
addr16
lea
mov
ds
loope
popa
xor
pusha
sti
lea
cld
mov
and
cltd
popf
aaa
popa
push
int
xchg
jne
xor
and
aaa
jnp
inc
jmp
sbb
fsubrs
or
ret
cmpsl
pop
pop
adc
sbb
dec
pop
xchg
lret
movsl
lods
sbb
je
lcall
or
stos
shrb
dec
push
push
sbb
sti
or
dec
cmp
fnstenv
fstpl
mov
push
fildl
nop
loopne
mov
icebp
leave
or
push
pop
lcall
repz
insl
mov
ds
ror
jb
and
pop
jecxz
inc
sbb
jl
adc
sbb
roll
pushf
nop
sbb
cmp
and
cmpsb
rcr
out
lods
shrb
cmc
fisubs
cmp
iret
fs
fsubrp
xor
test
and
push
pop
nop
sbb
stos
lds
pushf
fildl
and
mov
xor
xlat
ret
mov
xchg
imul
cli
jb
mov
insl
inc
or
mov
repz
sbb
pop
ret
sbb
sub
dec
incl
shlb
mov
inc
faddl
imul
popa
mov
shrl
arpl
scas
push
hlt
or
imul
jnp
pop
add
sbb
fadds
mov
out
arpl
sbb
cld
and
jl
pop
push
cld
loop
test
in
data16
jno
fisttpll
outsl
aas
jg
dec
jg
negb
fnstenv
frstor
rcr
hlt
pop
test
push
adc
mov
nop
adc
loop
icebp
mov
sub
sub
xor
int
cmc
mov
aaa
jb
repnz
xor
mov
aad
enter
cmp
movsb
ret
pop
cmp
and
sub
mov
int3
test
popa
xchg
push
sbb
mov
movnti
mov
mov
sbb
clc
mov
nop
scas
push
and
lahf
push
data16
cmp
fimull
stc
je
fsubrl
scas
cld
mov
fadds
pcmpeqd
adc
gs
mov
xchg
push
push
mov
and
mov
je
fmuls
mov
scas
pop
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
bound
fidivrl
shl
add
fcoml
xchg
jg
sbb
jl
shll
dec
xor
rolb
jmp
or
roll
lods
imul
dec
rclb
call
jge
mov
enter
add
jae
jno
mov
sbbl
outsl
test
jne
daa
rclb
mov
and
and
or
popf
fildl
inc
arpl
inc
jb
in
jno
mov
mov
push
icebp
mov
cs
sbb
mov
adc
mov
es
sub
shr
pop
adc
mov
and
mov
inc
mov
lret
mov
and
dec
cltd
mov
in
imul
sub
cmpsl
rclb
pop
adc
clc
pop
mov
mov
repnz
into
adc
and
push
enter
and
and
in
push
push
cltd
pop
sub
xor
aad
jb
mov
popa
test
mov
adc
sbb
aad
std
push
mov
addr16
xorb
xor
cmpsl
imul
xchg
mov
insb
push
sub
mov
push
jbe
clc
pusha
or
pop
inc
icebp
test
fnstenv
decl
adc
stc
das
cli
call
pop
sahf
imul
jo
cmc
out
rcr
ds
mov
jne
xor
aas
add
xor
test
outsb
es
xor
adc
cmp
mov
inc
push
xor
xor
mov
cmp
sbb
sbb
cmpsb
mov
lahf
js
adc
push
movsl
mov
mov
jb
push
mov
imul
adc
pop
sahf
sub
jmp
mov
and
adc
pop
js
pop
fwait
inc
mov
or
mov
mov
sbb
sbb
sub
pop
xchg
sti
repz
mov
and
pop
sbb
mov
aaa
sub
mov
orl
bound
scas
cltd
jmp
and
xchg
rclb
or
clc
jecxz
push
mov
sub
inc
cmpsb
mov
and
mov
mov
test
vmovddup
push
mov
sbb
scas
lret
test
xchg
cmpsl
jns
shlb
mov
jbe
sti
mov
mov
jmp
sub
out
pop
out
push
xchg
sbb
xor
rol
or
inc
dec
adc
ret
imul
scas
test
pop
incl
inc
addb
adc
mov
push
enter
push
fwait
sub
jbe
xor
add
std
push
std
xor
adc
mov
insl
mov
mov
sub
push
mov
add
rcll
xchg
dec
xor
or
rol
mov
cs
leave
shll
push
aam
mov
mov
jg
mov
jmp
pop
adc
hlt
in
add
dec
jp
addb
pop
xor
stc
xor
xor
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
fldl
mov
mov
sub
adcl
fsub
jle
fiaddl
hlt
mov
bnd
notb
inc
or
int3
leave
adc
rol
xchg
pop
jne
and
jae
push
loopw
ds
or
shlb
inc
sbb
mov
int3
js
cltd
sbb
fwait
cld
jl
add
insl
push
and
fdivrl
ljmp
sbb
mov
mov
inc
sub
jmp
pusha
lods
sarb
fldl
pop
test
mov
push
inc
das
mov
clc
cwtl
btrl
orb
int
inc
mov
xchg
clc
pop
mov
xor
mov
sbb
fmull
lods
mov
clc
sahf
pop
shl
push
adc
lods
ret
xchg
add
pop
dec
pop
dec
add
inc
jl
clc
cmp
mov
rol
sbb
sub
xor
jmp
inc
mov
xchg
imul
mov
into
mov
jg
insl
gs
sahf
jnp
cmp
mov
xchg
pop
push
pop
bound
pop
aaa
add
sbb
in
cmpb
mov
call
xchg
leave
cmc
add
jl
lods
je
adc
xor
sub
mov
in
sub
gs
subl
dec
xlat
lahf
fstpl
arpl
lret
xor
mov
inc
aaa
mov
push
pop
lcall
mov
or
push
inc
es
pop
lahf
aaa
adc
inc
add
outsb
mov
mov
mov
cs
addr16
shl
xor
movsl
iret
sub
loop
int3
add
lret
pusha
or
out
sbb
mov
and
push
iret
scas
push
addr16
outsb
aad
arpl
sti
in
sahf
cs
aad
and
lods
sti
push
pop
cmpb
add
mov
aaa
xchg
add
add
repnz
sbb
imul
pop
ret
loope
xor
pop
hlt
fs
push
js
sub
cmp
mov
aas
mov
pushf
int
enter
mov
mov
call
mov
dec
mov
popl
and
lcall
xor
adc
sbb
mov
clc
nop
and
sub
cwtl
scas
rcrb
push
cmp
sahf
jp
test
stos
dec
push
xchg
xor
daa
mov
or
push
sbb
xchg
ret
std
rcll
aad
fwait
insb
xchg
bound
mov
and
jg
cmp
cli
test
add
mov
sarl
arpl
push
adc
mov
jp
pushf
repnz
stos
scas
add
iret
cmpsb
jnp
cld
xchg
shl
aas
addps
das
mov
sub
jmp
xchg
out
out
daa
push
sub
xchg
data16
arpl
out
incl
push
sbb
lods
lahf
mov
jg
mov
in
or
icebp
rcl
push
loope
xchg
fdivrl
xor
cs
lock
nop
push
cmpl
dec
mov
xor
xor
leave
sbb
into
mov
xchg
or
faddl
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
fisttpll
stos
sbb
mov
les
fistl
stc
int
pop
sbb
stos
aam
clc
outsb
in
pop
mov
je
das
push
push
out
mov
sbb
jae
and
dec
pop
repz
pushf
and
int3
push
rcr
je
loope
popa
out
or
test
gs
pop
das
int
inc
movsb
xchg
call
push
sbb
mov
rcr
popf
xlat
adc
lret
stos
add
ftst
mov
mov
stc
lds
mov
enter
in
or
icebp
xor
lods
es
hlt
cmp
mov
shrl
pusha
add
pop
lock
je
push
pop
pusha
outsb
xor
xchg
repz
push
and
lods
fldenv
aam
ja
lods
mov
mov
jmp
in
adc
lods
add
or
dec
cmp
mov
xchg
jg
add
jns
ja
cli
inc
push
mov
ss
cmp
movsl
or
xor
std
mov
mov
jmp
cwtl
rcll
push
sub
sbb
lds
clc
rcll
sub
popa
lret
or
push
jg
push
dec
cli
push
je
dec
popf
mov
xchg
sbb
xchg
lods
push
adc
pop
loope
repnz
push
in
xchg
push
mov
ja
imul
inc
fcomi
jecxz
leavew
push
jge
mov
push
cmp
iret
mov
enter
ret
arpl
aas
dec
hlt
lods
iret
and
sbb
mov
xrelease
xor
jg
mov
or
loopne
das
icebp
aas
cld
in
cmpsb
jecxz
mov
das
sub
jmp
push
dec
rcrb
jo
mov
imul
xchg
mov
push
sbb
aaa
mov
pushf
lcall
push
jne
rcrb
mov
fcom
ss
sahf
push
ljmp
divb
xor
ss
std
sti
and
pusha
std
xchg
push
enter
ret
mov
lea
lea
pop
hlt
pop
je
push
lcall
push
pop
es
in
cmp
sub
test
push
cs
mov
mov
add
mov
sub
mov
mov
add
push
mov
mov
jp
in
data16
mull
jbe
pushf
lds
out
in
sbb
pcmpgtb
mov
icebp
lret
adc
dec
dec
shlb
lock
or
sub
inc
mov
xchg
cld
popa
in
xchg
inc
ss
mov
adc
dec
rorl
nop
rcrl
push
negb
test
sub
xor
jo
cltd
insl
jae
cltd
mov
dec
in
pop
shlb
xor
loop
pop
mov
stos
xchg
push
jge
mov
pop
pusha
xchg
loop
push
jmp
jo
fs
cmc
sti
movsl
data16
addr16
pop
and
mov
ja
lods
or
inc
mov
in
jnp
jbe
mov
mov
adc
dec
shrb
jmp
or
mov
les
les
push
test
mov
les
leave
addr16
out
call
mov
xor
or
mov
iret
dec
shrb
jbe
andb
push
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
dec
insl
lock
mov
les
ret
jns
js
sub
xchg
repnz
cld
jecxz
mov
push
mov
xor
cld
mov
cltd
xchg
ja
mov
sub
rcl
cmpsl
shr
aas
add
call
lds
les
or
dec
push
lret
dec
setle
mov
jp
insl
sub
push
sub
test
pop
or
sub
stos
or
jb
mov
jo
lds
push
repz
push
xor
test
push
sbb
je
mov
adc
inc
das
stos
fwait
push
push
stos
aas
mov
mov
stc
aaa
jecxz
inc
iret
popf
mov
out
mov
ja
mov
sbb
les
cmc
or
mov
mov
or
jg
and
shrb
lock
mov
imul
int3
scas
movsl
add
enter
inc
aas
fdivl
adc
imul
std
movsb
scas
mov
xchg
add
cmc
sub
lahf
add
jmp
dec
lods
jbe
xor
pop
xchg
dec
mov
setne
lret
scas
cld
sub
cli
cld
pop
aam
or
call
and
push
lods
pop
adc
imulb
cmpsb
or
mov
inc
movsl
lock
iret
aas
stos
mov
enter
mov
jge
scas
leave
lahf
jno
insb
sub
mov
leave
lds
push
xchg
mov
rol
rorl
imul
push
pop
addr16
sub
sub
push
lods
jge
sbb
jno
sub
mov
iret
lods
xchg
arpl
scas
pop
cmc
jbe
or
cmc
pusha
and
mov
sbb
push
hlt
repz
mov
cld
cli
cli
lods
incl
adc
push
and
inc
movsl
and
sub
xchg
fs
inc
into
imulb
add
mov
fwait
lods
mov
xchg
test
rclb
lret
es
loope
cmp
sarl
outsl
nopl
loopne
addr16
test
es
outsb
cmc
mov
sub
or
pop
les
rcl
pop
aas
pop
sub
xor
fdivl
xlat
arpl
xchg
mov
les
sbb
push
leave
push
dec
cli
stos
je
aaa
push
fsubr
xchg
mov
movl
fstpt
push
and
shll
mov
lret
bswap
sub
stos
in
jae
fwait
and
jne
jns
pop
adc
data16
xchg
pop
jp
xchg
out
mov
and
notl
iret
push
cmpsb
arpl
dec
das
test
outsl
fs
push
mov
xlat
cmp
es
leave
push
mov
inc
jo
adc
lcall
scas
pop
add
dec
fisubl
inc
dec
cmp
xchg
inc
or
push
jmp
mov
sub
mov
pop
add
cmc
mov
into
and
testb
or
mov
gs
lret
fsubl
xchg
adc
enter
adc
xchg
movsl
pop
addr16
add
aam
and
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
pop
sahf
mov
les
mov
into
pop
push
xchg
sub
psubusb
pop
xchg
jle
test
push
jbe
mov
xchg
mov
adc
lds
ret
pop
adc
loope
push
sub
push
lret
cmp
inc
cltd
add
xchg
xchg
shlb
add
decb
out
sbb
hlt
mov
in
fldcw
push
mov
test
fsts
jp
mov
fs
sub
and
loop
push
lods
fwait
in
jmp
clc
std
rcrl
in
rcrl
jge
shll
lcall
mov
lods
xor
cli
inc
mov
sbb
fildl
push
sbb
stc
pop
pop
lods
cmpsb
or
mov
cmp
pop
mov
cs
fwait
or
push
mov
pop
in
pop
nop
ds
dec
sbb
push
sub
jmp
loopne
lret
sub
js
je
adc
rcll
adc
inc
sub
rcrb
mov
mov
int3
test
scas
jnp
fldl2t
adc
or
xor
or
add
adc
in
adc
cltd
int3
movsb
xor
int3
push
ja
inc
dec
xor
pop
fdiv
push
jmp
and
popf
push
adc
jno
or
push
fildl
in
push
xchg
aam
decb
imul
mov
shlb
xor
ss
or
jb
sbb
int
sbb
lret
cli
cmpsb
jp
outsl
inc
movl
sbb
and
add
inc
adc
inc
mov
stc
loope
add
adc
mov
out
loope
addr16
jbe
cmp
or
out
add
mov
xchg
push
idiv
mov
aas
dec
loope
mov
or
sub
adc
fnstcw
mov
cmpsl
fwait
add
dec
fcoml
mov
jbe
in
loope
leave
jmp
out
cmp
popf
dec
test
mov
pop
pop
iret
iret
bound
data16
adc
jbe
test
xor
mov
shll
iret
pushf
sbb
and
es
insb
mov
cld
and
mov
bnd
push
add
and
fidivrl
push
stos
pop
xchg
push
lcall
or
mov
daa
pop
enter
aad
cmp
aam
pop
sub
out
push
cmp
fstpt
jmp
and
xor
cmc
inc
and
lods
cmpsl
lock
fstpt
je
adc
mov
or
mov
test
pop
mov
cmp
mov
stos
jge
fucom
repnz
jecxz
bound
das
mov
cmp
fsubrl
fildl
cltd
loop
hlt
ljmp
dec
dec
bnd
clc
add
lahf
adc
inc
repnz
aam
cmp
addb
mov
out
ror
out
cmp
pop
adc
fs
les
xor
insb
out
loope
dec
out
push
addr16
xchg
cmpsb
mov
js
aaa
push
jb
rcrl
and
jnp
rclb
mov
in
enter
jecxz
mov
bnd
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
out
das
inc
fnstsw
les
mov
lock
test
pop
outsl
add
mov
shll
mov
dec
and
daa
testb
and
xor
push
xor
iret
sub
lret
ds
xlat
iret
cmpsl
int
sahf
nop
jo
jnp
dec
fisubrl
ljmp
pop
inc
jl
scas
mov
and
scas
lock
sarb
js
shrl
int3
outsb
mov
movsl
push
dec
mov
call
stos
enter
lods
pop
sar
sbb
adc
push
xor
rcrb
inc
push
jb
and
mov
xchg
jge
push
test
scas
lock
sbb
enter
or
mov
imul
xchg
mov
outsb
adc
fcom
mov
xlat
pop
mov
xlat
push
test
inc
fs
aaa
mov
xor
inc
cli
imul
push
test
pop
add
popf
stc
sbb
pop
fldcw
pop
jne
mov
outsl
and
pushf
or
repz
bound
rorb
mov
jecxz
fwait
dec
cmp
xchg
sub
aaa
adc
mov
shrb
out
add
fwait
mov
jno
inc
lds
jl
xlat
lret
dec
dec
jne
sarb
outsl
xorb
jno
push
clc
loope
mov
push
and
push
cli
aaa
push
add
jmp
in
xor
fsts
fcoms
nop
je
test
sub
outsb
push
push
stos
pop
push
sbbb
or
in
fidivl
jecxz
pop
das
jle
incl
push
mulps
or
inc
mov
dec
mov
fwait
inc
mov
cmp
push
sbbl
les
mov
test
aam
xchg
jo
ja
pop
jnp
outsb
xlat
mov
pushf
jmp
cmp
mov
lods
sbb
cmp
and
jmp
lods
xor
test
sahf
mov
cmp
pop
orb
cmp
fcoml
mov
add
sarl
mov
rclb
arpl
push
add
lds
in
sti
lret
mov
lods
addr16
adc
mov
cmp
test
xchg
pushf
ret
sub
daa
pusha
jb
xchg
enter
sbb
push
pop
insl
bound
outsl
shrb
lods
dec
movsb
cltd
push
push
das
dec
pop
cs
dec
or
mov
lea
sbb
mov
popf
jp
pop
mov
xchg
add
sub
roll
adc
and
fbstp
jl
mov
sub
shl
int3
out
fcompl
popa
mov
or
divb
add
cmp
inc
inc
ret
das
xor
jl
jae
rolb
outsl
sub
sub
push
std
push
xchg
add
dec
addb
outsb
lods
jle
inc
fsubs
cld
lret
fwait
mov
lret
je
xchg
mov
int
rcll
xchg
sub
imul
sbb
jbe
inc
popf
pop
cmp
lods
jo
addr16
dec
movsb
adc
fbstp
fisubl
imul
pop
jae
imul
mov
pushf
mov
shrd
or
shr
or
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
bound
xchg
mov
les
fsubl
xchg
hlt
inc
andb
ds
mov
xor
sub
adc
jne
or
lahf
xor
push
or
xor
negl
aaa
sub
or
shll
fimull
jp
push
int3
mov
fsubl
mov
es
sub
inc
ja
jb
push
inc
dec
in
movsl
xor
add
mov
mov
ds
mov
imul
sarl
outsl
into
cld
pop
sub
and
cmp
daa
or
cmpb
int3
js
nop
and
imul
in
push
faddl
jg
clc
stos
pop
mov
lock
icebp
loopne
fiadds
sub
push
out
pop
sub
lods
lods
mov
iret
jae
pop
aam
pushl
je
mov
mov
sbb
pusha
jae
xchg
mov
das
andb
lcall
xor
lret
mov
syscall
sub
cld
insb
xchg
ja
popf
sti
xchg
sti
sub
mov
out
and
loopne
pop
xlat
int
in
ret
and
insl
or
inc
inc
xor
xchg
xor
push
sbb
jbe
je
cmp
mov
js
call
repz
cmp
jmp
pop
rcl
mov
mov
adc
mov
je
sbb
sub
inc
fdiv
stos
in
or
push
dec
dec
adc
cmpsb
pushf
outsl
sarl
ljmp
push
push
xchg
fstps
sbb
int
cmpsb
push
mov
js
ja
fsubrl
inc
stos
movsl
add
mov
xor
xor
fcomps
sbb
xchg
mov
icebp
js
cli
mov
cmp
sbbl
xchg
lcall
cmpsl
mov
jnp
jnp
aad
sbb
addb
pop
adc
pushf
mov
push
daa
push
sub
lcall
scas
push
test
dec
fnstenv
adc
dec
cmpsb
mov
jle
jp
rcrl
fisttpll
xor
jne
cmp
addr16
sbb
dec
adc
pop
xor
push
jnp
xlat
mov
out
sub
mov
incl
sbb
mov
cli
and
jb
cmp
xchg
sbbb
stc
xchg
sbb
inc
popf
lret
shrb
xchg
inc
add
out
aas
mov
mov
mov
sbb
stc
andb
adc
ffreep
adc
ja
mov
cmp
xor
push
inc
add
insb
bound
adc
pop
mov
ret
test
sub
adc
pop
insb
test
lahf
push
add
in
movsb
jecxz
or
or
push
xchg
xor
int
mov
divb
push
std
xchg
mov
pop
rolb
arpl
cwtl
pop
stos
leave
cmp
pop
imul
or
mov
mov
or
and
cmpsl
cmc
ljmp
mov
jg
ds
or
popw
pop
scas
and
ljmp
mov
jns
xor
adc
push
mov
xor
jbe
pop
fs
jne
nop
inc
lock
aam
ret
das
pushf
cltd
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
inc
shll
mov
ret
ss
mov
into
lret
lcall
inc
mov
movsl
outsl
lods
sub
je
push
pop
inc
mov
cmp
or
lret
adc
xlat
test
mov
cmp
fbld
sbb
and
notl
andl
inc
push
les
sbb
outsb
mov
mov
sbb
fcoml
dec
xchg
rep
sbb
jbe
adc
cwtl
loopne
add
push
xor
xor
cmpb
or
xchg
and
dec
stc
lcall
add
add
mov
sub
out
push
xor
sub
and
dec
xor
xor
add
inc
push
cmp
les
push
shl
fidivs
xchg
xchg
mov
and
mov
ret
lods
inc
lret
ss
lcall
inc
sub
inc
divb
fnop
pushf
jg
push
nop
jns
mov
and
push
out
aaa
dec
mov
scas
stos
mov
xor
ss
outsl
in
ds
test
test
mov
or
icebp
jl
into
ret
pusha
lock
out
and
cmp
mov
push
xor
icebp
sub
push
or
inc
test
add
cmc
cwtl
enter
out
cmc
pop
jne
ret
xor
stc
mov
movsb
ret
les
cmp
mov
cmp
neg
mov
inc
xchg
mov
and
cmp
aas
mov
cmp
in
leave
mov
mov
jmp
jo
jbe
cmp
mov
mov
das
push
into
mov
jmp
mov
sub
or
push
jle
xchg
pop
inc
jmp
rolb
imul
lea
imul
leave
sub
imull
lret
sbb
inc
pop
add
insb
mov
lcall
dec
lret
pop
movsb
pop
insb
xor
jno
xor
mov
sub
movl
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
mov
jge
mov
sbb
mov
data16
bnd
or
sub
mov
and
rcrb
leave
xchg
movsb
or
and
inc
dec
sub
cmpsl
add
push
pop
cli
aas
mov
test
ret
xor
scas
gs
sub
jns
adc
inc
dec
cmp
mov
pop
xlat
aas
mov
mov
push
push
test
out
fcmove
shrb
sbbb
ja
fcompl
lret
addl
mov
inc
pop
sarb
test
and
xchg
adc
lock
adc
cmpsb
sub
sbb
lea
xor
gs
mov
jmp
jb
outsl
aam
and
pushf
dec
add
fs
hlt
hlt
into
and
dec
jg
jnp
and
mov
nop
sub
insb
sti
or
and
push
xor
jb
sub
shl
cmp
pop
mov
insl
or
sbb
dec
xor
in
sub
pop
lcall
dec
mov
movsl
ret
adc
inc
adc
lcall
mov
fsubrl
sub
ret
jnp
push
adc
jmp
jmp
loope
dec
jl
xor
xchg
inc
loopne
shll
lds
jo
outsl
test
loop
repnz
and
je
js
lcall
sub
or
sbb
clc
or
sub
cmp
xchg
mov
outsl
mov
pop
insl
fistps
icebp
lock
sub
test
stos
lret
mov
xchg
insl
lahf
cmp
cmp
enter
inc
mov
pop
jbe
jl
pop
insb
sbb
cmp
xor
xor
aaa
adc
sbb
aaa
pusha
test
ds
and
bound
jecxz
and
into
mov
bound
pop
push
cltd
mov
ret
sbb
add
insl
cmc
sub
adc
push
xchg
pop
out
rorl
dec
aam
cmp
xor
test
mov
iret
xor
dec
push
movl
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
pop
and
xor
ret
frstor
flds
adc
push
lahf
cld
test
popf
and
jmp
jno
push
xchg
repz
jnp
jns
mov
and
mov
mov
jb
insb
sbb
xchg
or
cmp
inc
aaa
or
stos
mov
xchg
sbb
pop
mov
mov
in
mov
jns
fs
xchg
cmpsl
and
addb
loop
out
sbb
jnp
or
dec
xacquire
add
out
pushf
sti
inc
outsb
ret
push
inc
jns
ljmp
add
cmp
sub
mov
sbb
in
cs
and
ss
repnz
and
pop
cmp
ficoml
inc
pop
sbb
lea
mov
pop
cmp
sbb
dec
fs
aad
pop
mov
mov
rcrl
in
mov
or
mov
leave
rolb
jge
jbe
xlat
leave
xchg
repnz
pushf
bnd
js
flds
nop
ss
scas
mov
xchg
mov
aas
dec
ljmp
leave
notl
aas
add
lahf
cmpb
add
pop
add
scas
punpckldq
mov
in
and
lret
ss
or
loop
cmp
adc
or
imul
aas
xchg
and
mov
scas
fldl
or
jmp
int3
xor
nop
mov
inc
mov
mov
je
mov
out
lock
mov
ljmp
pop
lcall
loope
push
cmp
dec
xorl
repnz
ljmp
jecxz
lods
lods
ljmp
push
or
jno
leave
stos
icebp
dec
dec
add
aas
int3
sti
out
inc
in
fsubrl
xchg
inc
xor
test
pop
fiadds
or
stc
neg
sub
in
jmp
movsb
mov
jo
test
mov
cmpsb
ss
add
jo
jb
xchg
pop
cmp
aad
orl
pop
sbb
jb
cmp
mov
movsl
cmpsl
test
mov
mov
mov
jl
mov
sahf
idivl
cmp
out
jne
adcl
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
push
and
jns
mov
mov
push
dec
cmc
in
cmp
mov
sub
std
lcall
mov
lods
pop
mov
jecxz
mov
lret
or
std
mov
sub
dec
mov
mov
cmp
jl
cltd
and
adc
sahf
cmp
fs
sahf
rclb
clc
and
cli
out
fcoms
shrl
adc
outsl
dec
add
imul
dec
mov
pop
pushf
jnp
xchg
fsubl
cmpsl
xlat
and
jge
jns
add
jnp
sarl
fsub
add
int3
lock
jmp
jl
adcl
cmp
fiaddl
call
mov
mull
sbb
loop
inc
xor
das
add
aaa
imul
pop
jl
bound
and
cmp
lods
repz
scas
js
js
push
aam
cli
push
aaa
call
or
enter
xor
leave
add
jns
cld
ds
into
inc
popa
dec
cli
rolb
les
and
pop
iret
pop
int3
out
mov
inc
inc
pusha
loop
jae
dec
xor
pop
outsb
roll
inc
sub
jmp
lahf
push
adcb
movsb
dec
out
fcomps
jg
and
lods
pop
mov
push
test
mov
cmpsl
ja
stos
push
xchg
iret
js
data16
icebp
pop
in
add
aam
call
das
ret
rclb
push
movsl
addr16
jno
inc
cmp
inc
sub
aas
xchg
loop
out
xchg
jno
xchg
sub
notl
lods
jae
loopne
adc
js
mov
push
sub
xlat
les
sub
iret
jg,pn
xchg
sub
lea
call
cmp
movsb
inc
sbb
lret
cli
mov
jp
inc
ljmp
pop
dec
pop
aaa
push
test
repnz
sbb
xor
jle
push
loop
dec
scas
mov
jl
rorb
cmc
mov
les
mov
call
insb
sti
lahf
ret
jg
cwtl
xor
jne
push
fwait
push
imul
test
mov
sbb
fiadds
pop
imul
and
inc
rorb
jl
add
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
insb
sub
scas
mov
mov
popf
cmp
xchg
jmp
inc
mov
mov
sbb
repz
mov
sub
dec
jae
push
or
mov
into
or
xlat
shl
out
jmp
mov
jae
or
movsb
imul
mov
sub
pop
xor
or
dec
decl
in
sub
test
jo
add
mov
lea
loopne,pn
test
ss
jp
xlat
btr
loope
adc
loopne
pop
xchg
mov
movsb
xor
adc
int
jne
xor
jmp
dec
pop
mov
sub
mov
hlt
subl
pop
and
or
and
xlat
xchg
test
out
jg
sub
out
hlt
cmpsl
fs
loope
inc
sahf
jae
mov
add
adc
add
dec
xchg
lahf
push
nop
adc
push
cmp
push
xchg
add
xor
dec
test
ss
push
pop
out
mov
aas
inc
add
mov
pop
add
xchg
sub
xor
mov
ljmp
dec
and
outsl
cmp
lar
dec
scas
scas
push
aad
jb
out
cs
dec
pop
and
add
ret
sub
xor
adc
ss
xchg
mov
out
jae
aam
dec
xchg
jp
sub
adc
or
adc
js
sti
mov
int3
pop
shlb
ss
dec
icebp
xchg
or
or
mov
add
inc
dec
repnz
daa
rorl
and
daa
pop
and
mov
mov
ja
das
jae
loop
ljmp
orl
test
fcmovu
mov
inc
cs
pop
andl
inc
inc
mov
cvtpi2ps
fdivr
mov
imul
mov
adc
ret
xorl
into
mov
imul
das
iret
cmp
paddd
scas
aam
pushf
inc
int3
pop
sbb
xchg
and
inc
popf
int
pushw
add
int3
fildll
jo
out
je
enter
mov
push
test
mov
lret
cwtl
pop
lods
lods
sub
std
test
mov
jp
and
jmp
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
push
sahf
imul
std
mov
adc
dec
ja
xchg
pushf
hlt
dec
cs
inc
pop
and
daa
loope
fwait
pop
ds
mov
or
out
stc
repnz
mov
and
mov
testl
cmpsb
scas
push
bound
movsb
pop
mov
xchg
rolb
cli
lods
dec
fs
inc
xlat
imul
dec
cmp
push
mov
fwait
dec
into
cwtl
xor
repnz
inc
xchg
leave
bound
push
jne
sub
fistpll
dec
aam
xchg
fisttps
xchg
test
xor
loopne
lret
push
fmull
cmpsb
push
mov
mov
cltd
mov
cmp
push
fwait
dec
jne
mov
inc
cmp
and
cmp
iret
xchg
imul
inc
push
or
call
pushl
add
push
xor
ds
add
mov
ja
loop
shrb
imul
notb
cmp
jp
adc
jmp
lret
addr16
sub
orl
add
jb
lock
mov
inc
sbb
push
mov
aaa
out
or
dec
pop
push
jne
fisttpll
mov
mov
and
popl
xor
adc
dec
sub
and
dec
lods
aaa
fiadds
cmpsl
push
xor
cld
std
imul
cli
dec
sub
inc
push
mov
loop
push
xchg
popa
cs
adc
mov
or
stos
hlt
cld
daa
cmp
test
xchg
mov
xlat
mul
pop
pop
in
push
dec
xor
mov
mov
test
inc
mulb
ficompl
mov
fsubl
nop
mov
mov
jns
sbb
xorb
mov
pop
xchg
fisubl
mov
jns
mov
xchg
sub
sti
fmulp
aas
sbb
imul
mov
stos
fmull
out
mov
dec
outsl
leave
addl
shll
pop
repnz
in
addl
xchg
mov
popa
adc
lods
jo
fdivrl
imul
cmp
xor
push
setb
shl
scas
adc
push
in
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
daa
mov
test
dec
or
js
and
mulb
pop
enter
gs
in
push
push
xor
or
je
loope
test
pop
out
paddusb
daa
lcall
and
mov
mov
mov
shrb
sub
fs
adc
loopne
lahf
pop
ljmp
dec
dec
jecxz
mov
paddw
sbb
ficomps
lcall
inc
mov
fwait
mov
jo
test
or
jb
dec
mov
lret
pushf
add
mov
das
call
repnz
dec
mov
cmp
or
and
push
call
xchg
adc
scas
ret
mov
push
mov
inc
js
into
fistl
jae
and
pop
stos
out
test
jne
pop
jl
inc
pop
or
mov
outsl
nop
inc
adc
fs
loopne
loopne
aad
sub
push
aas
adc
jne
pop
mov
mov
aaa
xchg
ret
out
out
dec
and
pop
lock
pop
wbinvd
pop
sub
inc
int
cmp
js
jae
loopne
pushf
lret
dec
inc
dec
stos
mov
sub
repz
sar
mov
rol
and
cwtl
pop
push
dec
movsb
jnp
scas
add
cld
fs
mov
mov
sub
adc
jo
std
mov
mov
aam
xchg
inc
jmp
cmp
mov
jecxz
and
mov
cmp
add
inc
dec
push
divl
orb
fistps
insl
and
daa
jnp
jns
in
adc
dec
andps
enter
jge
jle
push
pop
lret
aas
mov
or
fbstp
faddp
jne
es
iret
stos
lods
adc
outsl
cmpsb
jbe
xchg
jmp
jl
lock
or
xor
rorb
movsb
sbb
loope
imul
jp
jb
push
adc
aam
int
fstl
cli
push
xchg
jecxz
mov
jmp
sbb
mov
mov
mov
fistpll
xchg
ficoms
xchg
nop
pop
xor
sbb
mov
add
adc
push
mov
add
rorb
push
or
loop
dec
arpl
rolb
test
add
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
ffree
clc
movsb
adc
mov
xchg
mov
adc
jmp
lret
and
testb
shl
jae
mov
mov
das
mov
repz
bswap
mov
ret
les
popa
sbb
movsb
and
rep
into
and
push
std
sahf
inc
jp
stc
cld
mov
cld
stc
mov
inc
sbb
push
adc
popf
jecxz
cmp
lcall
mov
sbb
inc
xor
lahf
sub
cltd
push
sub
mov
shll
jnp
ds
push
dec
push
and
pop
inc
inc
inc
jmp
lea
pop
rclb
jmp
xor
cmpsl
cmp
inc
ja
scas
es
shr
stc
xchg
and
jnp
cmp
aad
bnd
mov
mov
mov
pop
shll
aam
inc
stos
and
inc
insb
jns
adc
mov
or
icebp
push
push
cwtl
ret
push
cwtl
push
test
dec
or
je
fstpt
aas
push
sbb
mov
in
int
stos
iret
or
sbb
cli
mov
loope
out
jl
stos
outsb
jns
add
scas
insl
sti
test
out
push
and
cmpsb
hlt
daa
mov
dec
xor
push
test
lds
jp
dec
mov
rorl
mov
sub
stc
fdivrs
mov
in
icebp
scas
xchg
or
popw
lds
mov
lret
stos
rorl
sub
pop
fidivs
jmp
push
sarb
dec
inc
pop
mov
dec
sbb
xor
std
les
xlat
xchg
repz
add
push
adc
xor
fisttpll
push
xchg
dec
pusha
sub
xrstors
jg
pop
rcrl
rorl
dec
in
clc
inc
mov
lea
cli
mov
fistpl
pop
inc
mov
adc
andl
sbb
addr16
into
loopne
pop
es
inc
push
cmp
dec
arpl
dec
add
ljmp
jmp
fiaddl
fists
dec
lods
test
lods
xchg
xchg
add
xor
and
mov
sbb
sub
mov
sub
inc
cmp
icebp
push
imull
sbb
in
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
cmovnp
sahf
lahf
mov
mov
add
outsb
mov
and
push
fistl
int
cmp
shlb
xor
aad
lods
mov
inc
mov
repnz
fnstsw
push
sbb
mov
xor
push
pop
sub
mov
mov
lret
pop
bound
mov
dec
addr16
pop
out
xor
hlt
jbe
adc
xchg
cmp
jns
xor
dec
push
call
pop
mov
mov
stos
bound
xchg
mov
mov
iret
inc
ss
mov
mov
jno
clc
jmp
jge
inc
or
in
cmp
sub
lods
loopne
imul
aaa
popa
jne
or
loop
vpcomq
mov
out
in
test
lea
in
div
dec
sbb
dec
rol
inc
jle
mov
lret
cmp
mov
je
ror
sahf
mov
cmc
push
mov
push
push
addl
inc
push
sub
into
dec
xchg
cmp
ret
dec
repnz
xchg
mov
adc
mov
stos
shrb
sbb
mov
adc
sub
out
cmp
std
adc
std
mov
test
mov
sbbl
mov
cmp
add
cmpsl
test
in
popa
jp
or
out
xchg
and
dec
xlat
xchg
jle
lret
sbb
in
iret
pop
frstor
lods
in
adc
push
and
mov
mov
fadd
mov
push
out
xchg
mov
cmpl
inc
xor
sub
jns
in
inc
mov
xor
je
dec
xlat
sub
ret
shll
jp
fldl
sub
fdivrs
pop
clc
jae
pop
aad
push
add
ljmp
dec
pop
and
dec
xor
mov
pusha
add
xchg
jae
xchg
mov
mov
lahf
dec
rorl
mov
shr
inc
cmp
push
inc
and
lea
cli
xchg
mov
lods
shr
lock
xchg
js
mov
gs
lret
dec
mov
loop
ret
div
mov
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
std
and
mov
pop
imul
pop
shlb
es
roll
stc
sbb
lods
das
shr
inc
dec
ja
and
push
fcmovnu
mov
mov
sub
shrl
cmp
repz
mov
push
mov
mov
and
cmp
mov
dec
inc
mov
outsl
sub
and
sbb
mov
pop
add
fdivrp
push
sbb
in
push
fstl
push
cmp
lcall
mov
push
dec
mov
ret
or
mov
ret
mov
pusha
clc
daa
push
imul
lds
xchg
or
test
xchg
inc
in
dec
xor
ret
popf
and
mov
add
push
dec
xor
xchg
push
push
lock
pop
and
inc
inc
and
shll
or
scas
repz
mov
scas
ljmp
or
cld
mov
add
xor
int3
mov
jl
lret
jb
cmpl
test
out
cltd
add
ret
das
pop
stos
jno
or
sub
jg
insl
andl
mov
cs
add
xlat
jne
dec
pop
mov
inc
xor
jmp
rorl
aaa
popa
inc
sbb
roll
insl
insb
and
push
lea
sbb
out
ljmp
mov
jmp
loopne
int3
repz
or
lds
in
stos
arpl
addr16
out
leave
cmp
xchg
bnd
ds
adc
push
lret
sbb
inc
das
lret
xlat
xor
push
call
lret
lret
pop
mov
jp
sub
sbb
rcrb
push
push
inc
jae
imul
mov
movsl
test
scas
outsl
icebp
xchg
jecxz
mov
jo
inc
inc
sub
mov
mov
loope
mov
mov
or
out
lret
andl
or
push
test
outsl
imul
jmp
xchg
ret
push
repnz
or
mov
and
cli
in
fadds
pop
xchg
scas
adc
in
lea
outsl
mov
fsubrs
mov
jo
xor
cld
imul
mov
and
rcr
cmp
or
inc
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
jecxz
test
mov
xchg
lods
pop
dec
mov
cmpl
mov
clc
push
add
jae
xor
rcr
rcl
test
pop
mov
sub
lcall
scas
inc
mov
shll
das
push
das
inc
dec
shlb
inc
and
lcall
mov
je
cwtl
cmp
xchg
out
adc
cmc
push
or
and
loop
aad
lret
out
std
in
fcmovnu
adc
rcl
cli
mov
leave
or
lea
enter
ljmp
jne
clc
xor
lock
xchg
pop
jecxz
cmp
sbb
les
dec
fucomp
into
or
shl
insl
gs
out
test
ds
jno
mov
scas
cmc
dec
scas
hlt
stos
sbb
push
xchg
adc
sti
jb
sub
xchg
mov
outsl
jg
sbb
js
popa
xchg
les
push
mov
jb
jne
test
popf
mov
push
inc
xchg
xlat
outsb
push
ss
jecxz
jl
mov
mov
cmpsb
jae
inc
mov
shlb
test
adc
and
into
jns
mov
sbb
test
add
rolb
push
push
sahf
fsubs
dec
loop
cli
adc
jo
data16
repz
inc
inc
scas
or
jecxz
push
cmp
arpl
xchg
aaa
or
push
cwtl
aam
ja
and
idivb
rcl
pop
inc
add
or
repnz
inc
and
push
cltd
mov
scas
push
lret
cmp
jbe
popf
mov
lods
popf
outsb
xor
push
xor
jbe
mov
push
decl
dec
ljmp
mov
lret
lea
nop
mov
xchg
adc
fstps
imul
jecxz
fcoml
and
mov
add
and
in
lds
dec
xchg
jg
dec
movb
scas
mov
imul
movsl
cwtl
cld
xor
cmpsb
icebp
or
or
and
adc
cmp
test
ret
push
xlat
aad
jne
movb
and
or
fwait
ljmp
outsl
cld
or
bound
and
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
frstor
scas
mov
mov
inc
imull
pop
cld
mov
jno
clc
fldl
mov
notl
push
mov
test
jmp
shrl
pop
call
push
sar
jns
dec
cmpsl
mov
pop
dec
adc
bound
pop
pop
jns
iret
icebp
shlb
enter
xor
insb
mov
and
in
pusha
lock
sti
mov
xchg
gs
add
arpl
mov
mov
shrb
inc
fcmovu
xor
pop
add
jmp
insl
inc
and
js
movsl
dec
cltd
mov
lahf
decb
lret
fiadds
mov
mov
cmp
and
jnp
out
in
inc
sti
mov
mov
xchg
cmp
push
test
les
ret
aaa
inc
out
lcall
cmpsb
jg
ret
je
pop
scas
sub
mov
dec
ss
mov
nop
fistpl
cmp
jbe
mov
aas
inc
cmp
aam
test
in
jb
xor
ljmp
or
jmp
cmpsb
sbb
arpl
push
mov
outsb
xor
inc
inc
imul
call
add
leave
xchg
mov
inc
jmp
dec
push
test
xchg
outsl
into
add
or
mov
shlb
or
gs
sbb
jno
inc
xor
inc
scas
and
out
ds
or
daa
test
cld
or
icebp
call
fildl
adcb
fs
add
pop
in
mov
jmp
pop
add
mov
xchg
and
aaa
push
cmpl
jle
and
ror
jno
cli
loop
cwtl
xor
dec
int
push
fcoml
mov
bound
out
stos
pushf
jnp
xor
push
pop
outsb
fcoml
movsb
mov
lods
andb
outsl
dec
repz
cwtl
bound
inc
subl
dec
jle
adc
sbb
popa
in
pop
dec
inc
fwait
lds
gs
hlt
movsl
jge
scas
dec
and
push
bnd
mov
sbb
inc
xchg
adc
addl
ja
into
adcb
icebp
mov
shrl
lock
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
mov
mov
mov
push
testl
cmpsb
pop
in
mov
pop
pop
loop
mov
or
dec
popa
inc
mov
jmp
out
dec
mov
sbb
pop
test
in
stos
adc
dec
loope
lods
push
mov
out
or
loop
xchg
mov
cmpsl
inc
push
push
cmp
xor
cmpsl
inc
xlat
inc
idivl
test
or
push
insb
lret
cmp
dec
cmpps
call
xchg
sbb
insl
push
incl
mov
jmp
cmpsb
aas
fadds
jmp
jnp
mov
loope
shrl
icebp
pushf
mov
inc
in
in
ret
mov
mov
dec
add
sbb
xchg
lock
xchg
xor
dec
aas
sub
jecxz
imul
mov
cmp
or
adc
cmp
insb
sub
sar
cmp
aam
ja
int
pop
cmpsl
xchg
cmp
inc
dec
lahf
inc
add
inc
add
xchg
jp
insb
fisubl
adc
and
push
and
test
xchg
and
jmp
pop
mov
pop
outsb
push
add
inc
push
scas
leave
and
pop
xor
push
adc
imul
sbb
sbb
shlb
mov
pop
enter
out
mov
mov
inc
push
inc
xlat
jne
stos
push
es
cwtl
mov
xchg
sub
in
mov
mov
rclb
je
dec
call
aaa
inc
add
test
inc
or
mov
ss
inc
jmp
shll
icebp
push
sub
loope
in
std
repz
mov
je
jnp
ret
repz
sub
aam
addl
adc
addr16
in
dec
push
out
pop
hlt
push
cmpsb
push
mov
push
adc
mov
xchg
nop
sbb
mov
lods
stc
dec
cmp
xchg
xchg
mov
out
dec
js
fs
pop
sarl
sub
fnstcw
jae
inc
sub
add
sub
imul
inc
cmp
dec
hlt
mov
out
xor
loope
jb
xlat
addr16
inc
repnz
lahf
stos
pop
fs
mov
roll
test
push
xor
mov
inc
pop
mov
and
pop
dec
outsl
xchg
push
lock
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
inc
fstpl
les
mov
rcrb
fldcw
mov
out
stos
sti
lea
fldenv
fistps
dec
and
mov
scas
out
cmp
movsl
enter
push
pop
adc
test
push
adc
or
jl
pop
out
push
pop
lods
popf
xor
push
push
lock
xchg
cld
je
mov
call
mov
ficomps
insb
test
inc
and
aam
pop
outsl
pop
push
sti
iret
jecxz
cmpb
ds
and
lods
jns
pop
push
xchg
test
lock
jns
push
ret
sub
xor
fimull
addl
pop
pop
sbb
mov
in
sbb
cmpsl
sub
pavgw
arpl
aas
xchg
xor
stc
sub
in
pop
dec
fnstsw
cmp
jo
outsl
and
leave
inc
fnsave
add
ds
stos
inc
adc
sti
jl
sbb
sub
cld
sbb
lods
aas
mov
sbb
add
xchg
lret
push
mov
js
jo
jmp
shl
pop
jae
adcb
cmpsl
sbb
stc
xchg
adc
pop
jmp
enter
shll
mov
xchg
iret
xchg
and
sub
mov
and
dec
mov
cmp
add
insb
lods
mov
test
and
push
mov
xchg
add
adcl
mov
imul
mov
lods
inc
dec
mov
sti
ret
cmpsb
ds
ret
push
xor
sub
mov
shrb
adc
sub
cmp
stos
mov
sub
push
cs
inc
addb
js
bound
subb
cmpsb
ret
adc
enter
mov
jns
ljmp
add
aad
sarl
cmp
loopne
xchg
sbb
leave
out
out
outsb
jns
mov
jns
out
lock
out
sub
mov
push
fmulp
pop
xchg
pop
mov
sbb
mov
mov
xchg
sub
fisubrs
xor
lea
push
cli
test
loope
mov
fs
fcmovne
rolb
int
jge
dec
mov
or
jg
movsb
xlat
shll
xor
push
negb
cmc
aad
add
es
sub
rcll
mov
je
fdivrl
pop
inc
aam
data16
xor
cmp
nop
pop
pop
inc
pop
pop
ret
mov
adc
xchg
xor
cmp
das
push
jg
and
fsubr
int3
andb
jle
sub
pop
cmp
adc
test
ret
push
flds
lock
sub
jle
xor
cmpsb
sbb
inc
pop
aaa
insb
shr
mov
pop
cmpb
pop
hlt
loop
mov
add
pop
mov
aaa
out
cmp
ljmp
aad
cld
mov
testl
out
int
mov
xchg
ljmp
ss
mov
roll
aas
fnstenv
jns
mov
jns
xchg
fcoms
lods
mov
scas
dec
scas
sbb
xchg
test
fsubrp
fdivs
mov
movsb
fwait
xor
jl
pop
xchg
nop
jbe
cmp
popa
lahf
mov
paddusw
bound
and
ret
inc
cmpsb
pop
push
and
push
int3
pop
aaa
lds
jno
mov
dec
stos
mov
loope
mov
xor
add
jb
cmc
outsb
inc
ret
push
dec
outsl
ljmp
and
in
push
lods
xor
xchg
lea
pop
int
in
loope
jns
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
xor
dec
xchg
outsb
mov
mov
fcmovu
movsl
push
xchg
fldcw
vunpckhps
jecxz
or
or
cmp
inc
push
push
clc
or
bound
adc
xor
push
push
jle
lods
stos
ret
mov
or
gs
xchg
xchg
stc
clc
loopne
sub
pop
pop
jb
cmp
cld
pop
inc
jne
sbb
mov
and
mov
inc
mov
dec
dec
sub
inc
ret
es
sub
jb
sub
jle
cmp
clc
xchg
push
mov
sbb
mov
je
popf
nop
add
clc
mov
cmc
push
push
xor
xchg
arpl
das
pop
jmp
inc
sbb
and
xchg
dec
adc
jmp
subb
cmpsl
inc
ss
or
sub
jne
or
std
pop
xor
lcall
add
cs
ds
xlat
fwait
repnz
imul
mov
sti
cmp
cmp
add
sub
adc
xchg
xchg
in
push
in
mov
jp
pushl
sbb
popa
je
inc
loopne
int3
nop
xchg
pop
fdivrs
and
mov
arpl
cli
out
out
lods
dec
pop
mov
jle
nop
cs
and
inc
add
xor
out
icebp
incb
out
mov
push
sub
cli
inc
adc
jb
and
ja
add
sub
add
jns
sbb
clc
or
jg
mov
mov
shll
lahf
shlb
leave
push
xchg
or
adc
jg
add
repz
dec
jl
outsl
dec
sub
mov
jmp
add
inc
xor
mov
bound
or
and
aas
and
loopne
adc
mov
adc
push
mov
dec
sub
es
push
sahf
ljmp
dec
call
sbb
and
push
sahf
sbb
int
in
dec
lahf
push
mov
push
xchg
stc
fst
sbb
repnz
rcrl
add
pop
and
push
mov
int
lahf
xlat
dec
push
sbb
jecxz
cmp
out
or
lcall
popa
rcrb
imul
add
popa
jecxz
add
rcl
mov
fimull
aas
xlat
out
shrl
jno
mov
mov
jbe
out
adc
call
xchg
pop
notb
push
pushf
cmpl
or
test
inc
push
adc
out
xchg
lret
xor
pop
adc
jecxz
fistl
cmp
testl
stos
ret
movsb
lcall
push
fmul
dec
cmp
movsl
pop
stos
jge
mov
and
das
movsb
sub
push
mov
sti
out
aaa
push
xor
outsl
js
dec
push
out
add
mov
pusha
xchg
sbb
rcll
xor
ljmp
jecxz
jbe
adc
jl
in
jmp
adc
int
mov
test
rcl
jmp
daa
pop
mov
mov
jmp
cwtl
mov
pop
or
mov
sbb
cmp
pusha
push
xor
jle
fdiv
mov
push
aam
int3
pushf
cmpsl
cli
add
test
iret
lock
dec
mov
loop
lods
ret
cs
adc
pushf
or
mov
mov
cmpl
fcompl
add
xchg
jns
and
int3
pop
repz
pop
mov
xchg
fs
or
jecxz
test
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
fldl
mov
mov
xchg
pusha
dec
xchg
add
stc
xor
ss
mov
mov
gs
and
jo
mov
test
sbbl
mov
fistpl
js
mov
sbb
jmp
or
imul
out
or
je
in
orl
fbld
xor
aam
or
mov
sbb
pop
stos
xor
sbb
arpl
ficoml
xchg
imul
cltd
mov
cmc
rorw
push
lds
shlb
or
je
xchg
cltd
subl
jo
xchg
leave
xchg
insb
imul
ss
jae
in
mov
addl
push
sbb
push
fwait
mov
inc
add
mov
cmp
data16
jl
scas
imul
aam
mov
mov
divl
push
pop
dec
fld1
xchg
xor
mov
mov
mov
push
and
xlat
test
xchg
sarl
cmp
int
sub
cwtl
repz
cld
add
mov
pop
jle
fcoms
popf
clc
aas
mov
adc
jnp
out
mov
mov
mov
shrb
and
xor
sbb
sbb
stos
jle
add
jmp
insb
cmp
jecxz
pusha
out
decl
xlat
dec
and
cmp
in
fwait
jnp
stc
outsb
mov
enter
mov
mov
das
xor
mov
scas
pushl
inc
jbe
inc
divb
or
sbb
mov
outsl
out
xor
push
cmp
fnstcw
sahf
push
lret
jae
or
dec
or
mov
xchg
popa
pop
push
lds
push
test
out
cwtl
hlt
xor
xor
jbe
int
xor
jp
stc
repnz
mov
xchg
adc
xchg
addr16
ret
adc
jns
test
dec
aaa
outsl
mov
shll
or
jg
imul
or
inc
dec
xor
pop
inc
inc
adc
adc
mov
inc
std
dec
mov
out
cmc
je
inc
xor
scas
fsts
cwtl
ds
or
adc
jmp
movl
pop
dec
lock
mov
lods
incb
push
dec
jb
push
negl
imul
mov
aas
or
dec
aas
popa
dec
das
dec
lret
pop
sub
fwait
sub
or
push
pop
pop
aam
faddp
loopne
mov
lds
pop
incl
je
jae
arpl
inc
in
cltd
jmp
scas
lcall
fiadds
pop
inc
xchg
cmp
ds
test
push
les
andb
sub
lcall
cmp
andl
rclb
lods
xchg
sahf
xlat
xor
sub
sub
sarl
jae
hlt
sahf
and
inc
stos
fxch
movsb
fcomp
dec
mov
out
aam
mov
and
ljmp
scas
and
mov
adc
aaa
into
sbb
bound
inc
test
scas
jbe
stos
data16
pop
ss
jo
imul
jno
subb
mov
cld
cmp
dec
add
adc
push
scas
lock
test
loopne
ret
dec
call
fidivs
aad
xchg
mov
mov
out
mov
sarb
jge
cmp
rcrb
pop
aad
sub
in
lcall
pop
sub
shlb
out
sbb
dec
or
shll
in
push
lods
outsl
pop
out
inc
sbb
mov
out
rcrb
sbb
jae
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
fstl
iret
mov
mov
in
aaa
cmc
mov
and
mov
sub
stos
js
mov
dec
lahf
pop
lds
ret
jns
std
mov
xchg
ljmp
movb
ret
loopne
fcompl
mov
popf
nop
xchg
jbe
sub
xchg
jle
mov
jne
jp
hlt
aam
mov
mov
ret
in
add
lahf
pop
adc
aaa
movsl
ja
xchg
mov
push
test
adcl
dec
mov
sub
inc
or
arpl
lcall
lret
daa
cltd
push
ljmp
jmp
jmp
mov
dec
lods
mov
or
divb
add
xchg
sti
lret
in
das
mov
adc
clc
dec
push
cwtd
sbbb
subl
xor
push
cmpsl
je
hlt
loope
or
xchg
loopne
lods
ss
pop
dec
js
xor
outsb
clc
push
xor
es
inc
pop
pusha
cmp
mov
movsl
stos
cmp
call
xchg
mov
jmp
push
jbe
push
enter
adc
or
lahf
xor
sbb
dec
sbb
cmpsl
dec
movsb
cmp
xchg
push
mov
push
outsb
ja
mov
mov
out
insb
adc
out
dec
test
mov
push
scas
mov
mov
add
dec
sahf
jae
addr16
adc
or
pusha
dec
jo
add
jle
outsb
stos
mov
or
mov
sbb
dec
and
aam
clc
js
inc
and
insb
xor
cmc
addb
ja
add
fstpt
cs
pop
push
stc
ja
ja
insb
dec
xchg
push
mov
adc
xchg
inc
ud0
repnz
test
inc
fisttpl
sbb
mov
jne
cmp
iret
cmp
lods
jno
jecxz
test
outsl
adc
lcall
es
cmp
inc
mov
adc
mov
dec
adc
outsl
push
or
lods
dec
mov
out
push
mov
and
pop
mulb
ret
or
lahf
and
cmp
clc
push
push
push
adc
inc
jne
dec
fcomps
sbb
inc
fs
arpl
inc
in
shlb
stos
lea
mov
push
ficomps
xchg
imul
test
or
xchg
das
jbe
cmpsb
fldt
pop
ds
ss
xorb
popf
adc
or
cltd
xchg
sti
lret
mov
andl
fdivs
sub
mov
int3
cltd
xchg
jp
pop
out
rcrb
adc
mov
gs
sti
add
loop
mov
ljmp
insb
pusha
inc
repnz
push
out
dec
sbb
dec
addr16
inc
inc
repz
jecxz
in
data16
loopne
inc
adc
aaa
push
mov
fdivrs
lea
sahf
je
sbb
dec
sbb
loopne
or
ljmp
jo
lahf
xor
and
push
sub
mov
call
and
xor
je
dec
mov
add
mov
decb
inc
je
add
scas
and
sub
ljmp
mov
pslld
dec
arpl
xchg
stos
fstl
inc
push
hlt
shrb
cmp
inc
add
int3
cld
inc
int
add
ret
mov
mov
pop
dec
push
stos
paddusw
aam
jge
insl
inc
pop
push
push
in
pop
dec
mov
sub
inc
xchg
movl
movl
mov
jmp
fisubrl
mov
or
xchg
nop
jmp
les
ret
and
sub
scas
loop
scas
jmp
xor
insb
fiaddl
jnp
cli
stos
mov
in
dec
mov
out
dec
push
jl
je
lods
mov
popf
xchg
into
xor
test
mov
cmp
jmp
and
xchg
mov
pop
aam
push
outsb
daa
push
aas
and
movsl
ja
jo
sub
pop
aam
cmp
mov
jo
shlb
ss
andl
push
jo
push
cmc
mov
sbb
mov
cli
adc
pop
mov
xchg
dec
and
cmp
or
mov
scas
mov
mov
fwait
sti
adc
aad
andl
cmp
imul
lods
pop
js
cmpsb
push
mov
mov
pushf
nop
jle
rorb
jns
pop
jge
sarb
and
aas
push
mov
jbe
jo
dec
scas
ret
and
fdiv
and
les
sti
js,pn
push
enter
inc
or
add
and
push
sbb
into
lods
xchg
add
hlt
jle
mov
rcl
popa
mov
xchg
mov
scas
movsl
mov
pushf
xor
into
jbe
mov
les
out
sbb
xor
jne
and
pop
mov
sahf
push
and
jno
jnp
movsl
jo
fcompl
jle
dec
push
cli
mov
and
cmpsb
cmp
sub
jmp
sbb
hlt
dec
sbb
lds
xchg
fwait
and
pop
mov
mov
pop
jnp
nop
add
mov
dec
out
pop
mov
xchg
jns
cld
or
outsl
les
cmp
mov
stos
ret
mov
xchg
push
inc
mov
cltd
and
push
or
movsb
fisubrl
mov
pushf
xlat
movsb
jns
mov
add
cmp
ljmp
push
and
dec
fmull
inc
imul
pop
sub
in
je
adc
jno
fnstcw
push
xchg
les
lods
outsb
into
test
pop
test
jns
jp
stc
and
jge
or
or
add
push
inc
mov
clc
rclb
cmpsl
and
jne
jns
push
sub
dec
sbb
aam
pop
es
mov
fwait
jb
cmp
push
jl
loop
dec
add
mov
push
push
cmpsb
jne
mov
sub
in
rcr
arpl
mov
test
ja
xchg
push
clc
xor
add
sysexit
sbb
sub
lds
addb
xor
pop
cs
mov
pop
jle
popa
ja
hlt
daa
add
xor
mov
mov
notb
popf
pop
jg
sub
clc
std
mov
pop
outsb
xchg
cmp
push
shrl
lds
mov
pop
push
cmpsb
sub
jo
inc
xchg
dec
add
inc
jmp
mov
adc
pop
push
dec
mov
fdivl
ja,pt
das
out
cmp
lods
or
pusha
fwait
in
fdivrs
pusha
pop
push
hlt
push
rcll
cmpsl
cmp
test
js
sub
lcall
mov
imul
push
cmp
pop
rcrl
pushf
fsub
xlat
xchg
pop
cmp
call
jnp
add
lds
mov
movsb
pusha
ficoms
mov
imul
fsincos
add
push
pop
xchg
or
inc
pop
js
leave
loope
dec
fcmovbe
mov
jb
pop
mov
mov
add
shl
fmul
addr16
pop
sbb
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
movsl
push
sahf
mov
les
mov
xchg
cmp
mov
mov
daa
fs
push
inc
dec
and
push
xchg
push
insb
call
movsl
sbb
lea
xlat
push
mov
dec
pop
aas
and
lss
jns
hlt
pop
ret
mov
adc
push
mov
xchg
lods
repnz
ja
mov
pop
mov
je
mov
cmp
pop
xchg
rcr
nop
icebp
xor
lock
ja
int3
sti
cmc
lcall
rol
pop
popa
xor
cmp
enter
data16
call
mov
pop
pop
push
or
mov
insb
stc
inc
gs
mov
jno
sub
inc
push
sub
nop
mov
outsl
mov
aas
loope
mov
fiaddl
mov
sbb
sbb
jo
add
aaa
mov
xlat
aas
xor
mov
mov
ja
in
cmp
cmpsl
cmc
add
sub
or
ljmp
pop
and
stc
es
inc
xchg
pop
sbbb
int
sarl
dec
rcrl
or
mov
iret
mov
jbe
or
aad
xchg
cmp
or
add
mov
insl
cmp
push
lcall
mov
aam
mov
xchg
cmp
adc
out
cmpl
je
daa
imul
test
in
cltd
test
pop
inc
ds
sbb
xor
sahf
insb
cltd
lcall
aaa
mov
sahf
je
dec
cmp
ja
lcall
fdivrs
sub
leave
sbb
test
cmp
mov
cmp
sub
dec
fldcw
xor
std
or
int3
push
push
out
xor
js
fmulp
mov
js
shll
ds
repz
in
push
enter
xchg
setge
outsl
sbb
add
cs
add
test
add
xor
sbb
adc
push
adc
mov
push
inc
adc
xchg
call
iret
adc
mov
jecxz
jno
pop
pop
add
lods
cs
aas
outsl
fs
mov
lods
push
out
add
push
mov
verr
ljmp
lock
mov
sbb
xchg
shrb
ds
dec
sub
dec
xor
adcl
fldt
jo
mov
push
pop
add
jg
xor
jl
jl
sbb
mov
pop
enter
lahf
mov
xor
or
fdiv
jns
stos
int3
add
shll
jg
xor
std
sar
clc
ds
cmp
inc
xchg
out
dec
mov
inc
jl
ffree
inc
lret
xchg
shll
sbb
jle
sarb
pop
es
sub
ljmp
jne
fisubs
cmc
xor
jnp
sub
inc
stc
xor
pop
cli
mov
aad
sti
rcl
push
cmp
inc
test
hlt
dec
xor
and
or
xchg
clc
jo
lea
loope
mov
jae
push
mov
ret
sahf
mov
pop
repz
fs
mov
mov
addl
and
jecxz
xor
fsubrp
push
xor
push
adc
mov
out
out
into
shll
cli
shll
insl
and
add
or
xor
pop
or
or
mov
imul
ret
mov
jae
mov
jmp
fadd
roll
mov
mov
stos
xchg
push
add
ja
arpl
xchg
jmp
fsts
rolb
sbb
push
daa
data16
das
jb
leave
pop
xor
loopne
rcrb
push
in
inc
andb
mov
add
inc
xchg
adc
add
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
lcall
mov
out
outsl
xor
sbb
mov
inc
bsr
aad
das
cmpsl
faddp
pop
std
mov
std
clc
les
sub
pop
movsb
rorb
aas
xlat
jae
test
out
and
lods
or
push
mov
int
mov
adcb
dec
movd
cmp
pop
lods
das
xor
stos
push
xor
cwtl
or
in
call
pop
jb
jo
xor
std
jl
and
popf
enter
ret
sub
sbb
add
test
cli
jl
dec
pop
sahf
mov
cmpsl
mov
popa
mov
mov
dec
dec
jle
add
fmul
imul
dec
stos
or
mov
ss
xor
jo
sub
dec
add
es
lea
sub
jle
aaa
or
loop
mov
mov
and
push
xor
testb
jno
pop
sub
lcall
inc
fbstp
lods
stc
mov
jns
dec
adc
add
pop
out
cmp
pop
rcrb
inc
add
adc
cmpsl
pop
out
movlps
jl
mov
xchg
jo
dec
push
and
pop
mov
sbb
mov
cmp
sub
cmpsl
fbld
pop
add
enter
sub
xlat
and
orb
push
push
adc
adc
dec
mov
pushl
aas
mov
popf
and
scas
sbb
sahf
in
imul
or
or
mov
xor
bound
fstpt
adc
scas
in
sub
mov
repz
fs
aad
scas
pusha
imulb
js
mov
lea
popl
arpl
test
int3
xchg
je
cli
dec
je
test
pushf
subb
dec
xchg
xchg
jmp
test
pushfw
mov
fistps
lock
sbb
loopne
adc
aaa
outsl
js
divb
sub
xor
mov
ja
mov
fdiv
and
xchg
push
mov
mov
gs
outsb
adc
dec
push
push
jno
dec
xlat
sbb
push
sub
leave
fs
xor
and
repz
jbe
jle
out
scas
mov
cmpl
and
add
mov
xor
jg
lcall
dec
pop
push
sar
mov
jne
mov
jne
idivl
push
add
mov
add
cmp
lcall
dec
cmp
pop
jns
test
push
mov
inc
mov
leave
stos
inc
jmp
pop
icebp
fimuls
sti
popa
inc
scas
sbb
imul
daa
pop
xor
rorb
sbb
pop
pushl
mov
icebp
or
adc
aad
mov
lret
mov
jmp
out
mov
test
sahf
dec
push
stos
or
stos
in
jb
inc
iret
rclb
pop
sahf
and
push
cs
add
lods
mov
jl
push
xchg
lret
pusha
enter
pushf
bnd
fnsave
das
data16
cld
leave
mov
adc
push
rcl
int
cs
fiaddl
stc
jb
mov
dec
pushl
push
addr16
imul
jnp
jecxz
cmp
lret
xchg
xor
cmpsl
adcb
mov
or
sbb
cmp
sti
dec
shlb
sbb
jbe
mov
jmp
cwtl
stos
movsb
sbb
into
gs
shll
xchg
xor
rcrb
rcll
shl
push
jmp
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
push
sbb
sahf
gs
mov
mov
mov
mov
lods
out
cmp
outsb
mov
sbbb
ss
sbb
inc
mov
data16
out
fstpt
cld
dec
sub
cltd
adc
mov
test
mov
leave
jge
jae
test
cmp
push
cwtl
cmp
subb
mov
ljmp
popf
into
mov
pushf
mov
mov
out
hlt
loope
and
xchg
out
jnp
cmpsl
mov
or
and
cmpsl
sbb
idiv
test
out
jge
xchg
pop
pop
jl
jno
sub
daa
pop
xchg
jp
das
push
es
in
lods
imulb
dec
popa
pop
aaa
fbld
fcomps
push
push
cmp
ss
lea
in
sbb
xchg
jo
shll
fs
mov
inc
in
jo
mulb
dec
pusha
adc
xchg
jp
xor
sarl
pop
cmp
iret
in
inc
and
and
inc
mov
push
enter
rolb
clc
movsb
test
fwait
aad
or
mov
push
xor
je
inc
pop
int
clc
loop
xchg
js
xchg
lods
mov
mov
jb
push
out
lcall
xchg
scas
jg
pop
ret
pop
pusha
leave
sub
jg
mov
xlat
decl
je
jae
in
add
sti
mov
in
lds
out
mov
pop
jnp
mov
mov
mov
out
xchg
pop
add
gs
mov
pop
pop
hlt
dec
popa
adc
cmpsb
pop
mov
xor
je
ror
add
insl
and
idiv
pop
push
aad
inc
ljmp
mov
mov
out
add
daa
lods
cmp
mov
pushl
push
adc
xchg
mov
cmpsb
dec
push
scas
cmp
mov
in
mov
push
fnstcw
dec
nop
and
xor
test
mov
mov
out
mov
imul
movsb
cmpsb
ret
imul
test
adc
or
out
pop
out
data16
int
xchg
or
inc
dec
shrl
ljmp
je
jae
jo
pop
add
in
in
inc
sub
sbb
leave
loop
and
and
lahf
cli
dec
ljmp
pop
rorl
test
xor
hlt
ja,pn
adc
push
popf
and
in
stc
cmp
mov
int3
negl
movsl
hlt
test
lods
and
lret
pop
stc
leave
pop
pop
popa
push
leave
sti
repnz
adc
push
popa
icebp
std
das
das
lcall
insl
xor
in
jbe
pusha
ret
mov
enter
stos
std
aam
mov
enter
sti
repnz
lock
int
fdivr
andb
loopne
repz
dec
add
inc
xchg
xor
sub
xchg
push
jno
mov
je
cmp
lock
std
jecxz
inc
cmp
fildl
xor
sahf
cmp
daa
in
insl
es
mov
jl
xor
jnp
dec
dec
xchg
scas
andb
adc
repnz
dec
test
xchg
push
xor
xchg
xchg
pushf
mov
in
sub
aad
pop
rol
add
jg
nop
mov
aam
sub
and
enter
sahf
xchg
mov
adc
lds
imul
loopne
adc
fldt
sbb
and
pop
test
aad
inc
cmpsb
out
sbb
add
pop
sub
ds
or
in
jge
insb
adc
xchg
xor
adc
and
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
rcll
fists
cltd
ret
mov
xchg
mov
jnp
decb
cmp
loopne
push
pop
xchg
sti
adc
addr16
adc
adc
xchg
xor
test
mov
shrb
ss
mov
es
jne
inc
lret
dec
dec
sub
cltd
xor
or
sbb
push
jg
pop
jno
sti
movsb
lahf
jne
cmp
cld
mov
mov
pop
xchg
repz
lods
das
or
movsl
les
stos
sbb
inc
push
sbb
jnp
mov
inc
lret
sbb
mov
fstl
xchg
dec
aas
dec
lods
popf
dec
push
sub
in
leave
jno
xorl
aas
arpl
jo
fs
js
daa
cmp
in
ss
inc
jno
js
inc
jo
dec
or
out
xor
xchg
rcll
stc
push
sarl
push
bound
fistpl
andl
arpl
push
cmp
dec
data16
sbb
gs
fs
mov
push
std
jnp
xchg
add
clc
ss
cltd
repz
mov
jg
push
rolb
xchg
add
insb
out
mov
mov
adc
adc
push
xchg
dec
xlat
cmp
jmp
xchg
repz
push
cmp
pop
repz
sbb
cmpsb
sub
leave
pop
addr16
jp
scas
cmp
decl
test
and
push
pop
cmp
out
inc
cmp
in
xchg
xlat
sub
mov
or
loope
out
aaa
jmp
mov
lods
stos
call
ret
mov
add
test
jge
ret
outsb
pushf
punpckhwd
les
mov
mov
adc
mov
call
and
push
mov
mov
xchg
sub
insl
xchg
add
mov
push
cmpb
jge
pop
dec
and
in
lcall
jne
les
sbb
cwtl
mov
test
jo
xchg
and
mov
fadd
mov
pop
shr
xchg
stos
dec
mov
arpl
push
cmpl
fsubrs
and
push
test
jnp
repz
xlat
loop
and
xor
lods
fwait
xor
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
pop
xor
xchg
push
cld
mov
mov
icebp
jg
jle
jbe
sub
mov
push
lret
push
cmpsl
xchg
aas
mov
loope
gs
and
cmp
dec
push
into
out
mov
nop
clc
mov
out
add
ja
sub
pop
and
add
sub
test
or
pop
sub
bound
xchg
dec
add
mov
push
std
xchg
mov
adc
inc
adc
mov
bound
push
mov
lea
sub
sub
es
stos
xor
sub
in
cltd
cli
popf
enter
arpl
mov
int
movsl
mov
add
out
into
jne
ficompl
popa
mov
jnp
ffree
sbb
test
inc
movsl
lods
push
out
pop
inc
jge
cmp
icebp
jle
stos
fndisi(8087
imul
xchg
push
jo
cmp
inc
rorl
pop
ret
xchg
or
cmp
std
cltd
popa
aam
cmp
scas
scas
pop
aas
in
cltd
push
ja
xor
inc
out
sub
je
or
inc
leave
in
cmp
jg
push
data16
movsl
or
daa
xchg
inc
je
pop
push
push
mull
pop
sbb
cs
rcrb
push
push
mov
out
xor
pushf
mov
imul
xchg
mov
jecxz
arpl
lods
xorps
dec
pusha
mov
int
mov
scas
jns
cmp
in
test
jmp
fdivrl
negb
push
jae
sbb
loopne
insl
xor
inc
mov
call
push
dec
in
es
jle
out
fcomi
or
xor
shll
sub
sarb
inc
adc
jno
ret
mov
pop
sub
icebp
add
subl
daa
cmp
push
push
lea
jne
scas
clc
xchg
xor
or
andl
scas
lea
ja
mov
outsb
pushf
orl
jecxz
pop
push
fimuls
inc
call
pop
push
pop
ss
iret
stos
dec
jnp
or
or
jg
ss
lds
movsl
jecxz
aaa
push
mov
cmp
fidivrl
jge
mov
cwtl
mov
movl
movl
movl
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
and
mov
mov
lahf
push
imul
and
adcb
sbb
sub
add
insb
xchg
cmpsl
fidivs
cmp
pop
inc
cmp
test
in
xor
xchg
loope
xchg
add
cmp
popl
xchg
or
xlat
ret
xor
sbb
cmp
xor
ja
lret
es
cltd
pop
jge
cmp
or
iret
stos
orl
jo
rorl
aad
and
mov
aam
out
or
pop
sub
pop
add
adc
addb
push
xchg
mov
xor
lods
rcll
ror
testl
sahf
jmp
fcomps
xor
js
std
push
int
xchg
mov
int
cli
or
mov
cmpsl
jle
or
inc
repz
insb
push
mov
dec
pop
sub
les
sbb
das
data16
cmp
pop
stc
mov
xchg
push
lock
push
gs
in
add
jne
lds
inc
insl
xor
mov
hlt
jp
ret
pop
inc
inc
push
pop
ja
sbb
je
mov
inc
jnp
in
mov
jmp
rcll
jmp
in
jle
and
orb
pusha
rcrb
stc
and
inc
mov
invd
gs
add
scas
or
pop
xchg
mov
mov
outsb
stc
jbe
arpl
ja
mov
popa
push
popl
jge
fwait
xor
roll
gs
adc
xchg
sbb
cmp
and
pop
cmc
push
popf
in
lods
in
std
pop
insb
dec
push
std
daa
les
sbb
sbb
testb
push
mov
push
pushf
pop
and
sub
inc
bound
popf
ja
in
sub
xor
andl
leave
sub
or
xchg
mov
aad
in
or
sbb
inc
dec
mov
scas
mov
mov
xchg
loop
popa
cli
push
mov
mov
pushf
orl
sbb
jne
std
loopne
stos
inc
add
sarb
jnp
into
nop
jmp
int
push
lcall
push
pop
jns
adc
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
ffree
add
iret
int
mov
mov
push
mov
adc
rcrb
ret
add
addr16
mov
shrl
fyl2xp1
movsl
int
pop
pop
sub
insb
and
lods
pop
xor
inc
add
push
insb
imul
ficomps
inc
lahf
enter
cli
aas
xor
cmp
mov
out
pop
out
pop
not
mov
imul
pop
out
cmp
xor
mov
mov
inc
popa
xor
cmp
fs
add
pop
pop
cs
cmpsb
outsb
adc
subl
push
or
sbb
and
xor
sub
cs
jge
jnp
mov
cltd
jge
test
pop
sbb
cmpsb
adc
in
adc
xor
adc
rclb
sahf
arpl
lods
mov
push
add
jl
cmpsl
or
mov
push
stos
push
sar
mov
xchg
xchg
pop
nop
jbe
out
mov
fs
int3
sub
lret
lock
lahf
adc
cwtl
icebp
jmp
xor
shll
cmp
mov
mov
ljmp
loopne
roll
inc
sbb
dec
jns
dec
nopl
rorb
aaa
sbb
lea
jg
xchg
jne
jae
sub
cli
dec
cmp
stos
ret
jecxz
je
xor
cs
iret
mov
scas
xchg
dec
mov
insb
mov
test
je
inc
notl
stos
push
nop
outsb
out
adc
orl
adc
test
mov
inc
cmpsl
sti
leave
dec
fbld
mov
cmp
fdivrl
xchg
dec
mov
lods
mov
xchg
loope
insb
jbe
xchg
mov
pop
or
add
add
mov
xor
dec
inc
mov
pusha
scas
fnsave
mov
adc
rep
jns
dec
sar
sub
jbe
pop
hlt
js
adc
dec
lock
mov
push
adc
and
push
pusha
xchg
sub
jo
sbb
xchg
inc
cmpsb
lods
cmpsb
je
aad
lods
xchg
test
stos
nop
sbb
mov
bswap
test
ss
std
cmp
imul
lea
in
out
inc
loopne
cmpsb
or
dec
and
or
add
inc
and
out
sbb
dec
dec
jle
xor
idivl
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
les
mov
mov
and
xchg
divb
je
mov
push
pop
mov
lcall
out
xchg
fsubr
imul
lods
pop
mov
push
mov
je
mov
adc
mov
fdivl
pop
mov
mov
cmp
xor
jecxz
jno
int3
aam
pop
dec
test
adc
push
stos
jne
dec
jle
fs
jge
test
movsl
gs
sarb
mov
aam
cs
adc
mov
sahf
sbb
push
mov
push
dec
movsb
dec
repnz
push
jbe
sar
jb
in
xchg
je
inc
inc
ret
jne
lods
shlb
int3
pop
push
and
cmp
jg
xor
lds
imul
jmp
clc
sti
lcall
jl
cmp
lods
cmp
jl
inc
iret
mov
pop
cltd
xor
adc
and
rcrb
int
ds
loop
push
cmpsl
fnsave
push
adc
nop
push
inc
dec
cmp
js
pop
in
cmpsb
dec
add
icebp
call
dec
pop
fstl
jmp
lret
xchg
out
shll
std
js
push
mov
xchg
push
xchg
jo
inc
lcall
mov
jle
inc
dec
dec
cltd
cmp
mov
sub
mov
jnp
inc
ret
adc
cmpsb
mov
lcall
fdivrl
jbe
test
fcomps
dec
clc
loopne
insl
out
xchg
es
cs
ret
add
xchg
adc
addl
cmp
hlt
cmp
icebp
aad
mov
mov
push
push
aam
sbb
loop,pt
mov
das
enter
lods
jnp
adc
test
mov
mov
stc
cmpsb
adc
jle
mov
lods
orl
sub
xchg
mov
mov
sbb
repnz
adc
push
pop
dec
or
jmp
mov
sub
jmp
loop
jmp
jecxz
fmull
sarb
mov
dec
cmpsl
and
inc
ret
sar
outsl
rorb
in
mov
jl
fcmovu
je
lods
jl
lock
xor
stos
push
sub
int3
xchg
xor
sub
movsl
sub
mov
xor
pop
js
cld
sbb
dec
xor
addr16
cwtl
in
xchg
cs
cli
out
mov
fs
dec
mov
push
andl
jecxz
inc
aam
aaa
js
roll
jns
fimull
insb
inc
lock
popf
jne
aam
ljmp
xchg
lret
dec
out
fcom
xlat
sub
adc
ficoml
in
push
lahf
push
and
mov
xor
jno
pusha
imul
repnz
das
aas
lds
push
scas
fcoms
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
stos
mov
sahf
in
adc
mov
mov
in
imul
push
cmc
stos
cmp
and
mov
enter
mov
scas
dec
pop
bound
and
mov
shlb
fnstcw
loope
insb
stc
push
ror
push
pusha
popf
add
insl
je
push
cmpsb
and
dec
sbb
pop
in
aas
testl
adcl
sub
adc
or
jecxz
adc
mov
fs
outsl
sub
fstpt
outsl
mov
imul
or
and
cmp
xor
xorb
and
rcll
xchg
sbb
das
in
xlat
inc
lcall
daa
push
push
shl
xor
insl
mov
dec
xchg
push
mov
inc
ja
fwait
pop
lods
jbe
or
cltd
push
mov
aaa
pop
mov
mov
iret
sbb
in
hlt
xchg
jb
les
mov
aaa
lds
pop
jle
out
arpl
jg
mov
lds
or
push
push
insb
std
or
or
inc
mov
mov
loopne
mov
mov
push
pop
push
jb
push
mov
imul
cmp
iret
mov
rorb
fcoml
jmp
mov
mov
xchg
mov
cmp
inc
pop
out
ret
mov
xor
scas
mov
pop
insl
mov
cmp
roll
xor
pop
and
les
call
jmp
inc
add
fsubrs
jl
rclb
jbe
iret
pop
dec
nop
in
lods
pushf
fbstp
dec
pop
in
cs
int
lahf
in
jle
rcrl
push
inc
cmc
dec
fildll
inc
sbb
aad
aam
inc
cmp
dec
sub
nop
cmpsl
lods
cld
jl
jmp
pop
lods
sub
js
bound
xchg
insl
std
aam
adc
ljmp
adc
and
cmpsb
outsb
call
cmc
cmp
jns
iret
stos
sub
cld
fldenv
push
sub
mov
mov
sub
mov
pop
mov
mov
xchg
xor
and
pop
ljmp
xor
pop
xchg
add
cmpsb
cmp
out
push
mov
es
lret
mov
jbe
ja
lahf
int3
int
mov
stc
adc
leave
xlat
fildl
push
ffreep
out
add
outsb
xlat
outsb
sub
lods
ror
dec
mov
call
iret
fildl
xchg
out
xor
push
insl
gs
xchg
imull
xchg
add
and
clc
popf
mov
mov
sub
es
repnz
add
fs
sub
cs
leave
cld
call
xchg
jecxz
stos
rcrl
adc
sub
popa
stos
lahf
dec
test
movsb
psrld
insl
and
inc
add
mov
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
sub
movsb
xor
mov
mov
mov
into
pop
pop
push
sbb
sub
aam
inc
and
loope
mov
and
scas
popa
push
aam
jno
pop
or
mov
in
mov
shrb
mov
adcb
inc
ja
inc
sbb
neg
mov
or
pop
movsb
dec
movsl
mov
div
je
js
out
cli
test
xchg
in
cmp
lret
ljmp
popf
jle
les
data16
jecxz
jmp
lods
jb
addl
jnp
leave
sub
push
js
inc
sarl
push
jns
fcmove
dec
add
inc
aad
lret
mov
inc
ja
sub
nop
mov
int3
push
push
out
adc
xor
in
add
cmp
sbb
fsts
out
loope
jg
sbb
pusha
mov
cmp
xor
cmc
into
or
xchg
add
dec
add
jb
jg
popa
ja
adc
jnp
pop
iret
sahf
xchg
dec
dec
cmpsl
jae
adc
pop
jnp
nop
push
mov
int
outsl
inc
inc
aas
popf
cmpsb
mov
xorl
or
std
sahf
outsl
pop
pop
adc
adc
in
pop
pop
cmp
insl
push
stos
icebp
notb
fistpl
inc
pop
mov
xchg
jge
fnstenv
lods
sahf
mov
lea
mov
loope
call
pop
das
pop
subb
bound
sbb
fs
out
mov
in
or
shll
aas
outsb
rcrl
xchg
dec
sahf
add
std
jl
arpl
jge
mov
les
or
xlat
lea
and
inc
lea
dec
jns
or
cwtl
mov
xor
pop
gs
sub
xor
add
add
cmp
bound
fists
lea
push
pop
jmp
ja
loop
cmp
mov
clc
jmp
test
ja
xor
add
jge
pop
out
sub
aad
push
sub
mov
into
cmpsb
ret
rcrb
imul
pop
aam
scas
push
and
and
popf
push
mov
mov
dec
mov
gs
out
fnstsw
int
xchg
mov
je
arpl
ss
xchg
jge
dec
inc
adc
sub
ljmp
mov
les
test
insb
xlat
das
jl
or
ret
xor
pop
and
adc
cmp
mov
add
adc
sub
jbe
adcl
inc
mov
push
jmp
das
xchg
push
cmp
add
rcll
sub
int3
mov
mov
test
sbb
pusha
in
pop
loopne
rcr
jecxz
pop
pop
stos
rolb
push
and
fs
test
je
push
fildll
jl
addr16
sbbb
lahf
cmp
xchg
jae
mov
push
push
push
mov
push
jp
hlt
test
xlat
test
mov
arpl
dec
dec
push
std
add
jmp
add
fwait
loop
push
sbb
add
stc
jo
xchg
dec
dec
push
ss
out
sub
and
and
dec
in
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
pop
push
jbe
pop
push
mov
mov
xorb
fs
lds
ja
ds
scas
ds
inc
xor
xchg
adc
sub
aad
xor
std
jl
fnstsw
sub
mov
push
pop
test
mulb
sub
shlb
jns
jle
cmp
pop
out
leave
stc
sbb
ss
mov
cmp
in
gs
mov
sbb
loop
sbb
cwtl
sbb
scas
jecxz
cmc
fists
pop
push
pop
cmp
mov
xchg
std
mov
xor
jb
leave
fcmovnb
adc
je
push
cmp
out
outsl
adc
inc
sahf
push
hlt
cli
ljmp
xchg
pushf
pop
sub
or
in
cmc
pop
and
sbb
mov
pop
dec
adc
dec
nop
ljmp
das
dec
dec
jl
fcmove
pusha
lcall
jne
or
xchg
out
addl
icebp
or
dec
push
aad
push
lods
arpl
test
mov
xchg
jno
mov
insb
outsl
adc
test
xor
dec
push
push
sub
jo
outsl
in
ds
sub
push
lcall
pop
out
xor
add
mov
mov
mov
or
inc
roll
push
xchg
xor
dec
stos
jne
cmp
mov
mov
aad
adc
and
jb
push
imul
cs
pop
mov
dec
outsl
je
jae
push
sbb
sti
push
sub
dec
out
lcall
repz
pusha
roll
aam
fisubrs
adc
fs
lods
sub
sti
ljmp
xor
pop
aam
jnp
insb
out
adc
add
jg
xor
je
inc
lods
mov
loope
adc
jl
pop
mov
push
hlt
cli
rcll
xor
push
pop
push
push
icebp
fadds
jg
fwait
lret
stc
pop
adc
in
lret
pop
sub
loop
inc
mov
mov
pop
push
stos
leave
in
aaa
sahf
repz
inc
stc
adc
movsl
lahf
nop
push
dec
dec
sub
ret
jno
jmp
push
imul
jg
xchg
xor
xchg
cmc
pop
incb
cmpl
cmp
fwait
in
push
imul
xor
mov
outsl
insb
push
push
movsl
mov
jmp
decl
inc
enter
lea
adc
in
pop
xchg
ja
sbb
stos
fmuls
adc
cmp
cltd
mov
nop
xor
mov
jge
mov
push
pop
iret
inc
xchg
pop
leave
int3
add
cli
daa
fldcw
lahf
mov
mov
push
std
pop
push
pop
sbb
mov
in
je
mov
push
xor
pop
jg
popf
xchg
adc
and
lea
xlat
out
and
pop
divl
push
fnstenv
jecxz
and
and
das
push
jge
jmp
or
xorb
mov
jo
test
adc
dec
xchg
hlt
dec
stos
test
jge
mov
xor
das
gs
mov
fsubrs
fucom
dec
jl
add
adc
and
pop
sbb
inc
xchg
lods
sub
leave
xchg
repnz
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
or
es
mov
outsl
ja
mov
sarl
mov
mov
leave
sub
add
subb
xlat
mov
icebp
sbbl
shlb
lods
or
xchg
push
inc
xchg
jbe
dec
lods
xchg
inc
cmp
lock
movsb
mov
mov
aas
push
das
add
mov
outsl
pop
mov
jmp
dec
in
scas
dec
lret
aam
pusha
mov
mov
jl
ret
int
cmpsl
fs
cmpsl
xchg
jp
pop
jle
std
adc
arpl
divb
adc
and
arpl
or
mov
imul
dec
stos
clc
sub
jmp
daa
aas
push
cmp
add
pop
xchg
xlat
scas
pop
pop
mov
adcb
push
jo
repnz
dec
ficoms
mulb
pop
addl
cmpsl
jns
xchg
psllw
jo
inc
mov
adc
adc
cmpl
pop
jp
mov
xchg
sub
sub
push
iret
mov
mov
or
sub
mov
jg
inc
xor
mov
pop
mov
in
pop
jnp
dec
adc
and
pop
or
and
in
and
or
or
test
xchg
test
lret
outsl
lret
addl
mov
loope
fmulp
mov
test
sti
cld
ljmp
stos
loope
pushf
stc
js
inc
push
inc
cld
clc
push
lock
mov
inc
ret
iret
rdtsc
ret
lds
fwait
pop
subb
and
adc
andb
fsts
pop
xchg
arpl
leave
jne
pop
sti
fs
ss
push
sahf
xor
jae
adc
lret
cli
subb
push
pop
xchg
les
pop
addl
sahf
or
adc
push
js
nop
je
out
mov
and
mov
jbe
dec
sbb
xor
sti
repnz
jnp
sbb
mov
jo
mov
adc
mov
push
jbe
dec
loope
std
or
pushf
dec
pop
icebp
es
imul
scas
mov
push
sbb
jb
lcall
outsb
in
adc
mov
xchg
push
ljmp
call
cmpsb
fiaddl
xchg
jae
mov
aaa
inc
adc
imul
adc
repz
aaa
ret
jns
cmp
testb
add
dec
cmpb
fs
dec
popa
lret
aas
xchg
pop
cmpsb
das
mov
xor
mov
inc
cmp
mov
in
test
sarl
dec
cmp
pop
and
imulb
pop
jg
push
and
cltd
lock
mov
out
ror
xlat
or
icebp
dec
movsl
cmpl
inc
icebp
and
dec
sbb
ja
ds
repz
in
mov
mov
out
pop
add
int
jmp
das
lods
sub
inc
sbb
xchg
xchg
jmp
cmp
xchg
pop
jp
popf
push
fsubr
push
and
lret
inc
push
mov
add
ja
int
push
jnp
xchg
aaa
jp
push
rorb
aad
inc
pop
jge
test
mov
test
adc
test
mov
mov
repz
stc
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
or
sub
mov
add
icebp
fcmove
jo
nop
or
out
mov
imul
jnp
push
sub
sub
adc
loopne
jae
or
icebp
push
or
iret
or
out
jmp
mov
push
jl
pop
popa
das
mov
movsl
pop
imul
ret
pop
and
imul
jg
ret
das
lods
ror
mov
mov
lods
faddl
cmp
mov
push
insl
std
pop
sbb
subb
push
pop
xchg
cs
inc
pop
test
cmpsb
mov
cmp
pop
jne
dec
dec
cs
cmc
fimull
push
in
decl
outsb
mov
in
and
jae
cmovle
ljmp
cmp
shl
jmp
xchg
jae,pt
aad
xchg
dec
stc
outsl
arpl
pop
dec
setae
aas
sub
cmp
ds
inc
jg
push
sbb
dec
fs
jp
leave
xchg
stos
out
xchg
xlat
push
enter
cmp
outsb
mov
fisubrl
mov
sub
jp
sub
xchg
inc
sti
iret
cmpsb
mov
clc
addb
lock
or
mov
lret
mov
in
data16
cwtl
shld
lret
lret
das
out
ret
arpl
cmp
imul
jae
xchg
pop
out
icebp
mov
out
sbb
outsl
sahf
xchg
in
mov
or
cmp
cmpsb
sub
scas
mov
push
push
ljmp
clc
int3
lods
mov
stc
ret
mov
cmp
fcoml
fidivrl
mov
icebp
mov
inc
sub
jmp
mov
sbb
flds
mov
les
notl
insb
lock
xchg
stos
xor
sbb
aam
fbld
pushf
fwait
mov
sub
mov
imul
aad
jae
gs
xor
xor
int3
mov
call
lret
push
arpl
lahf
sarb
push
mov
ja
xor
xor
and
outsb
lret
add
jns
push
xchg
rolb
xlat
push
and
dec
inc
lods
mov
cmpb
jle
loope
ja
out
fdivs
mov
test
addr16
mov
test
inc
jle
imul
dec
lret
out
and
cmp
imul
mov
sbb
or
mov
xor
in
inc
fbstp
iret
jl
mov
hlt
and
adc
xor
int3
sub
push
jb
punpckhdq
fidivrs
pop
icebp
add
pop
popa
inc
in
sub
lret
pop
imulb
inc
xchg
hlt
lods
addl
movb
adc
negb
in
and
repz
and
inc
mov
test
shr
push
cli
sub
push
and
lock
sbb
mov
lods
cwtl
mov
xchg
xchg
fiaddl
popf
jg
insb
cs
subb
pop
pop
inc
xor
fdivl
mov
or
jns,pn
mov
add
pop
lahf
cltd
mov
cmp
in
pop
out
roll
outsl
adc
int
xor
jmp
out
enter
or
xor
fldl
pushf
dec
daa
ret
fdivrs
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
push
and
jecxz
mov
mov
pop
xchg
or
mov
inc
push
sbb
fnstenv
bound
or
mov
enter
stos
push
cmp
adc
fwait
xchg
ss
ret
insb
bound
lcall
or
mov
ja
shlb
sub
dec
cltd
mov
scas
mov
push
scas
lds
scas
jb
dec
or
pop
xchg
push
dec
fstpl
jbe
rorb
popa
fcomi
dec
jge
inc
sarb
mov
xor
loopne
mov
and
push
test
lea
mov
jno,pn
inc
or
loope
rolb
xlat
mov
movsb
inc
cmp
xchg
js
inc
lcall
sub
and
insl
or
mov
push
mov
pop
pop
dec
mov
enter
push
and
lods
or
test
mov
in
mov
fisubrl
imul
in
dec
xor
scas
lods
lret
inc
and
dec
js
fsubrs
pushf
mov
lret
mov
add
pop
dec
jmp
popf
mov
lahf
jae
call
cmp
fisttps
xchg
loopne
cmc
ret
mov
jae
bound
xchg
push
ds
xchg
fidivrl
jp
or
jnp
jae
cmp
adc
cwtl
lock
jno
bnd
pop
xor
ret
pop
dec
dec
shl
jns
xor
push
notb
cmc
cltd
mov
push
nop
unpckhps
and
dec
pop
int3
std
loopne
fistpll
ret
cmp
insl
cmp
push
cltd
sub
xor
push
ss
shl
pop
jbe
je
jp
mov
je
lods
movsb
push
lea
cwtl
gs
pop
pop
mov
jge
lahf
mov
pop
mov
testb
sub
dec
or
or
xchg
in
jl
mov
es
sub
and
out
sub
mov
mov
fsubs
or
mov
jmp
ljmp
dec
mov
cli
mov
iret
mov
xlat
out
adc
xorl
add
into
repnz
adc
pop
loop
jl
in
inc
sub
fwait
jno
sub
aad
ds
lcall
insb
rorl
dec
js
jmp
leave
push
jnp
in
cmp
divb
neg
cs
pop
sub
jne
sub
sbb
cmp
fs
jecxz
cmpsb
xchg
push
out
iret
inc
pushf
je
and
roll
jge
xlat
cli
lahf
lret
call
or
sahf
sub
insb
inc
xlat
sbb
sti
push
cwtl
and
scas
neg
mov
pop
xor
jae
mov
sub
lea
mov
pop
insl
cmp
pop
scas
outsl
pop
test
xor
inc
xlat
push
icebp
sub
lret
push
mov
mov
push
inc
pop
jmp
and
loope
sbb
shrl
xchg
pop
cmp
xor
lea
adc
jne
push
lcall
sahf
lds
xor
pop
pop
icebp
cmp
and
aad
outsb
rol
cmp
orl
bnd
jns
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
fucomp
add
out
cmp
mov
test
or
fsubrs
sub
nop
jg
dec
pop
jg
in
pop
call
lret
out
pop
inc
push
sbbl
jae
add
pop
fcoml
lahf
enter
mov
test
inc
loop
shlb
fimuls
imul
cmc
mov
sub
mov
ret
ret
sub
bnd
hlt
in
mov
inc
lods
addr16
sbb
fs
sub
mov
mov
add
repz
mov
pop
dec
and
sub
mov
scas
mov
in
out
dec
scas
sub
addl
dec
add
popf
lods
xchg
cwtl
aad
test
cmp
inc
sub
es
rolb
aas
xchg
and
fsubrl
mov
inc
pop
shlb
stos
loopne
mov
out
shll
dec
jecxz,pt
push
add
cmp
xchg
nop
and
push
dec
inc
dec
and
dec
fs
pop
mov
icebp
push
mov
pop
inc
or
into
mov
rorl
out
lea
xchg
xchg
mov
inc
pop
cmp
js
imul
arpl
pop
mov
mov
push
cs
jo
sub
test
cli
mov
cli
mov
pop
add
js
jb
pop
lea
sti
fwait
stos
shlb
gs
jmp
aas
inc
dec
jl
shll
ljmp
je
cmpb
stc
mov
mov
xor
imul
in
mov
add
xchg
mov
push
jecxz
lret
addr16
movsb
lret
jnp
ret
push
cmp
outsl
jbe
inc
jmp
ss
adc
dec
mov
shlb
fdecstp
sbb
dec
mov
stos
and
ret
mov
test
xchg
pop
jp
push
pop
pop
stos
into
fdivrl
mov
in
adc
fisttpll
shll
jl
stos
jo
inc
jne
dec
push
call
sub
pop
scas
jae
hlt
mov
bound
adc
mov
push
es
test
cmp
add
add
rcll
push
inc
sbb
movsb
aas
stos
shll
and
loop
outsl
fsubrs
mov
jo
jmp
mov
jg
test
enter
clc
enter
or
xchg
jge
js
mov
add
test
xor
jge
push
push
push
negb
mov
dec
jg
dec
sub
hlt
xchg
cld
fucomip
and
icebp
js
orl
adc
fstl
dec
sbb
les
xor
add
and
mov
movsb
sti
and
daa
lcall
shll
or
or
dec
fs
or
pop
xor
adc
or
shll
popa
pop
out
xor
xor
sub
dec
push
ficoml
je
imul
fcoms
stos
jno
pop
scas
aas
jbe
sti
cli
sbb
mov
sbbb
push
xchg
or
lods
mov
push
das
fnsetpm(287
mov
incl
aad
mov
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
fstl
inc
mov
mov
ss
int
loope
mov
jle
into
cwtl
xlat
sarl
les
cmp
leave
lods
scas
fsubs
sbb
mov
lahf
cmp
xor
shrl
dec
cmc
testb
lds
sbb
pop
dec
push
test
xor
xchg
and
ss
dec
dec
push
decb
mov
inc
std
xchg
cmp
jecxz
mov
inc
imul
test
negl
or
in
mov
pushf
pop
push
repz
dec
and
test
push
fcmovne
cmp
mov
xorb
stos
test
mov
cmp
push
sub
sbb
scas
inc
mov
fdivl
xchg
nop
jl
jnp
sub
orb
mov
aas
add
test
jno
pusha
in
mov
mov
mov
mov
int3
dec
cld
lahf
pusha
test
push
pusha
adc
pop
sbb
push
mov
pop
and
dec
fadds
cs
aad
xchg
push
xchg
adc
ret
dec
jmp
hlt
adc
and
and
jno
lock
syscall
pop
pop
dec
adc
mov
xchg
xor
arpl
int3
mov
sahf
mov
adc
inc
push
mov
inc
cmp
emms
and
jb
jmp
mov
jl
lahf
repz
shrb
dec
inc
and
jecxz
sub
ja
mov
adc
mov
sti
push
pop
xor
out
push
xchg
and
movsb
shlb
and
lret
jbe
inc
pand
cmpsb
ret
push
xchg
popf
adc
stos
fcompl
lea
jmp
fildll
in
leave
push
mov
test
jl
pop
in
shl
mov
push
test
fbld
test
ret
push
and
adcl
push
pop
imul
push
sub
imul
add
iret
and
jg
rolb
inc
sbb
and
loopne
fwait
mov
popf
xchg
xchg
leave
test
movsl
aad
pop
dec
leave
mov
sbb
sub
lods
mov
xor
sub
inc
mov
sti
mov
lods
and
and
movsl
xor
xchg
jmp
push
lcall
jle
mov
punpcklbw
loop
stos
outsb
out
sbbl
test
cmpsl
mov
movsl
xchg
leave
and
js
inc
iret
shl
dec
sub
mov
mov
mov
test
push
imul
lods
fucomip
lahf
ret
mov
not
jne
mov
ljmp
data16
lret
movsl
loop
lods
sub
lds
lret
outsb
inc
mov
leave
add
outsl
adcb
xchg
add
stc
pusha
add
into
les
dec
or
mov
inc
or
mov
call
imul
mov
inc
sahf
je
shlb
lods
push
mov
test
ljmp
push
in
dec
scas
mov
out
or
addr16
jbe
or
insl
xor
xlat
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
arpl
aad
mov
jb
inc
xchg
ds
xchg
mov
repz
lock
cmp
test
out
pop
mov
scas
shll
test
adc
xchg
push
push
and
jne
lret
mov
lock
jne
dec
fstl
notb
mov
dec
mov
hlt
in
sbb
inc
out
in
cmc
jne
call
rol
sbb
cmp
aas
gs
lahf
xchg
lock
ds
mov
dec
loop
sub
xor
aad
fimull
mov
pusha
movb
pop
sub
dec
inc
dec
js
inc
add
movsl
inc
jl
mov
int3
jecxz
daa
add
test
jbe
mov
jg
sahf
dec
loop
pusha
mov
push
aas
or
movsl
jmp
mov
sbb
and
pop
sub
sub
push
push
divb
dec
mov
or
add
popa
jno
and
jne
ficompl
pop
mov
pushf
mov
into
xchg
jmp
cmp
popa
mov
sbb
mov
mov
mov
cmc
pop
ja
and
lods
stc
repz
mov
ret
push
xchg
ficompl
mov
mov
dec
addl
cld
mov
cltd
loop
mov
aaa
pushf
fsubl
gs
cld
sbb
repz
shlb
cltd
xchg
mov
jmp
cmc
add
int
dec
enter
mov
xlat
stos
xchg
dec
lea
inc
es
xor
add
daa
sub
and
cmc
xchg
hlt
pop
in
jle
cltd
fdivrs
cmp
dec
add
int3
cmpsb
aam
pop
ror
jp
popa
jmp
mov
ret
out
cmpsb
sub
ja
push
add
test
enter
sbb
arpl
xchg
mov
mov
jne
lret
jmp
fimull
into
adc
popf
add
xchg
out
inc
and
cwtl
cli
int
lods
sbb
add
dec
mov
sub
mov
aam
cmp
or
andb
and
cmpsb
xchg
movl
movl
movl
jmp
pop
daa
fcompl
mov
aad
push
cli
movsb
or
mov
test
mov
int
scas
je
xor
int
jle
repnz
cmp
and
xor
or
enter
dec
or
cs
shll
jae
cmp
lds
lds
fwait
push
ret
pushf
cmpsl
nop
lret
sub
stos
mov
pop
in
add
je
xchg
add
pop
loope
sahf
push
cmp
mov
pushf
sub
inc
push
inc
xchg
cltd
aad
addr16
in
add
xchg
xchg
lds
pop
sub
pop
lahf
js
insb
data16
pop
jnp
jns
pop
mov
enter
push
sub
bound
scas
sti
sbb
xchg
clc
mov
insb
in
insl
pop
iret
shlb
add
adc
sti
or
out
push
stos
sbb
dec
mov
sub
sub
cmp
adc
jmp
xor
pop
rorb
sbb
sbb
movsl
ds
sbb
sbb
rcl
stos
fisubs
inc
ret
jno
jl
popf
mov
hlt
inc
mov
pop
xchg
lret
pop
mov
arpl
imul
sbb
sub
stc
les
mov
push
fsubrp
cmp
pand
add
or
push
notl
lret
push
xchg
xor
decl
and
add
ret
push
hlt
xchg
cs
fnclex
push
test
xchg
mov
jle
jbe
popf
ja
pop
out
mov
lds
jg
jg
adc
xchg
push
xchg
inc
push
cmpsb
stc
cmpsb
jl
fistps
imul
push
inc
jae
and
mov
dec
and
lret
in
push
sti
mov
adc
mov
movsl
scas
mov
ja
ficoml
es
out
arpl
dec
inc
push
pop
shlb
dec
or
mov
mov
addr16
xchg
pop
mov
es
push
sahf
pop
add
mov
and
push
mov
push
sub
jnp
out
mov
xchg
or
or
pop
insl
outsl
sub
or
mov
cli
push
fs
or
and
mov
xchg
jns
mov
loope
xchg
xor
or
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
in
jecxz
push
mov
mov
jg
xlat
jmp
adc
fs
popf
push
cmp
mov
push
mov
inc
dec
pop
pop
push
xchg
inc
mov
sti
shll
popf
push
add
outsb
ss
or
imull
jg
push
mov
sbb
rorb
push
test
adc
sahf
repnz
xchg
dec
insl
mov
outsb
out
pop
cmp
daa
movaps
loope
iretw
dec
data16
pushf
test
mov
xchg
sub
xor
xchg
inc
loopne
sub
enter
test
test
inc
jmp
push
fldt
lcall
es
cld
fcomps
testl
jns
sbb
ss
loopne
xchg
ud0
mov
add
xor
in
sub
push
mov
lret
jbe
jmp
xor
aam
arpl
pop
icebp
lock
sub
ret
in
jae
mov
mov
fmuls
or
lods
jmp
fnstenv
dec
adc
test
das
inc
out
insl
inc
xor
push
xchg
mov
cmp
xchg
mov
test
mov
cld
lahf
ret
icebp
dec
mov
scas
jl
je
jns
and
loopne
cmpsl
pop
icebp
clc
add
push
lahf
mov
xchg
push
pop
jecxz
jb
or
pop
pop
dec
dec
jge
int
mov
js
add
rorl
ret
cli
insb
fisubrs
xchg
xchg
dec
popf
push
and
jg
dec
mov
and
sbb
ljmp
xchg
push
push
pop
loope
mov
pusha
idivl
imul
mov
call
mov
aad
in
mov
in
loopne
test
push
push
and
jge
push
test
arpl
lds
sbb
mov
loopne
cld
pop
lods
or
repnz
scas
ret
lods
jmp
in
sub
pop
hlt
loop
jp
jmp
adc
nop
gs
int
mov
aaa
in
ret
xchg
lock
dec
rcl
and
xor
xor
pop
ret
stos
rcrb
xor
ljmp
adc
xchg
sbb
test
pushl
mov
xor
lcall
cmp
cmpsl
cltd
cld
scas
ss
imul
xchg
fldcw
stc
test
pop
add
pop
pop
cmpsl
or
ret
mov
in
push
sub
int
push
sbb
out
cmp
xor
pop
fidivs
mov
xchg
or
pop
ret
fiadds
mov
mov
add
addr16
insl
mov
mov
lahf
sub
push
stos
out
popa
pusha
xchg
add
inc
out
jno
les
aas
xchg
cmpsl
xor
orl
out
sahf
dec
cmp
xchg
shlb
rcr
xor
call
or
mov
mov
sti
vmwrite
out
sub
mov
out
outsl
cmpsb
std
icebp
shrb
les
testl
inc
jbe
leave
mov
scas
loop
lods
mov
mov
test
push
addb
pop
ds
add
cs
push
jmp
xlat
xchg
push
lcall
fists
nop
scas
pop
mov
mov
push
repnz
push
pop
daa
cwtl
mov
in
inc
dec
shlb
cmp
adc
or
orl
add
je
or
out
mov
xchg
ljmp
push
sbb
push
mov
xor
test
mov
loop
movsb
clc
dec
data16
sub
por
push
rcr
negl
mov
push
push
xor
cmp
xchg
fidivrs
mov
ss
mov
cmp
jnp
shl
push
pop
cld
mov
repz
sbb
xor
stos
rcrl
mov
aaa
lret
insb
iret
aad
dec
movsl
cmp
cmp
andl
and
fs
shlb
push
loopne
dec
push
stos
pop
loop
sub
in
mov
cmpsl
repz
inc
loop
sub
mov
jp
sub
push
cld
cmp
in
pop
test
sub
xchg
xchg
setg
loop
push
jmp
jno
dec
fnstenv
mov
lahf
pop
push
sbb
aam
in
inc
sti
imul
mov
fcomp
movsb
popf
aam
out
pop
lahf
bound
psadbw
imul
push
push
fdivrs
mov
adc
inc
mov
ret
or
das
sub
jge
mov
inc
repnz
leave
pop
mov
xor
scas
and
into
pop
cmpsb
inc
and
jo
fisubrl
inc
outsb
popa
scas
loope
push
inc
int3
mov
das
cltd
or
or
pop
imul
push
add
repz
mov
inc
push
andl
dec
mov
sbb
mov
add
clc
jb
jae
mov
lods
repz
ja
lods
xor
lret
add
filds
shrl
cmp
sbb
pop
dec
mov
cli
shrb
adc
ds
push
gs
mov
enter
into
mov
pop
xchg
leave
mov
lods
scas
mov
fdivs
add
add
fdivl
and
test
pop
adc
fnstenv
sti
xor
push
sbb
fstl
loope
out
sub
out
mov
ljmp
mov
xor
jp
lds
pusha
fists
xchg
adc
push
or
scas
and
aaa
xchg
and
inc
lahf
movsb
push
jo
in
xchg
dec
aaa
adc
inc
mov
mov
loopne
push
dec
inc
cmp
test
mov
fcompl
mov
sub
repz
push
scas
insl
pop
add
in
fisubrs
notl
aam
fs
pop
mov
sub
mov
pop
cmp
push
jge
icebp
mull
jb
lret
int
popf
inc
int3
stos
push
mov
fwait
lret
pop
popa
lds
popf
iret
mov
outsl
fcomip
xchg
ret
xchg
adc
or
es
xchg
call
mov
cmpsb
mov
adc
adc
mov
adc
pop
int
xor
fimuls
fs
gs
mov
sub
mov
pop
adc
test
inc
and
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
imul
xchg
mov
mov
mov
sar
mov
dec
mov
mov
inc
nop
add
pop
xor
stc
insl
or
or
sub
rcll
mov
inc
sub
sti
add
push
fmuls
orb
aas
pop
pop
jmp
fs
cwtl
jno
fmull
icebp
pop
icebp
jns
into
cmpsl
jmp
popa
cmp
sbb
subl
mov
sbb
out
das
mov
push
leave
sbb
leave
fnsave
cltd
jns
outsb
inc
dec
shll
jecxz
enter
add
xchg
push
in
push
cmpsl
cmpsl
fwait
pop
jne
jo
xchg
lea
ret
ja
mov
lods
data16
and
roll
lds
and
subl
bound
mov
loop
stos
imul
inc
ds
cmp
test
jge
andb
xchg
or
popa
scas
dec
stc
pop
fldl
jns
pop
test
push
cltd
es
sbb
jg
pop
stc
out
mov
or
shll
sub
or
and
and
aam
mov
jns
mulb
xchg
adc
cmc
fs
shl
pop
cmp
out
stc
lret
pop
jbe
xor
sub
repz
out
cmpsb
pushf
mov
nop
mov
adc
out
inc
mov
push
cli
push
leave
mov
rcrl
ror
in
pop
leave
lret
filds
push
js
push
pop
mov
pop
dec
xlat
popf
jae
leave
mov
sub
or
push
cwtl
lock
cmp
sub
jp
mov
push
ss
pusha
cmp
fnsave
rclb
sbb
push
or
xchg
pop
and
ffree
push
aaa
mov
inc
cmp
ret
in
mov
loope
pop
fcmovne
arpl
xor
std
lods
jl
mov
outsb
repnz
mov
mov
dec
pop
adc
inc
out
xchg
push
push
jg
popa
cmp
mov
push
imul
loopne
pop
test
add
out
pop
popf
outsb
roll
ljmp
andb
jns
pop
roll
cmp
fdivl
lea
cmc
jg
hlt
jg
loopne
mov
push
sub
and
or
rcrl
ljmp
cmp
cmp
data16
mov
aam
or
jg
pop
dec
lret
and
pop
rcll
out
mov
sbb
add
xchg
dec
icebp
add
lret
mov
pop
pop
daa
and
lret
lret
in
ret
cmc
mov
ljmp
jns
inc
mov
pusha
lea
movsl
test
add
sub
xchg
pop
mov
scas
int
rclb
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
dec
cmp
mov
andl
stos
je,pn
repnz
mov
push
and
fisubrs
out
cwtl
repnz
in
pop
xor
movsb
cmp
push
dec
fst
mov
mov
imul
adc
pop
nop
mov
imul
inc
test
pop
arpl
and
pop
scas
outsb
sub
inc
or
fidivrs
jbe
sub
lahf
outsb
cmp
push
int
enter
pop
std
add
daa
pusha
mov
mov
out
dec
push
adc
es
into
or
int
and
fcomps
sbbb
xchg
push
dec
pusha
xlat
nop
jmp
cwtl
rcl
and
cwtl
inc
sbb
mov
pop
je
inc
add
xchg
gs
xchg
inc
push
test
gs
cmp
outsb
addr16
lods
in
push
cmpsb
mov
les
and
dec
mov
push
push
ds
xchg
fwait
inc
cmc
leave
cld
cmp
movsl
adc
arpl
mov
cwtl
out
lcall
out
adc
roll
push
rcll
push
daa
sbb
or
out
jge
mov
xchg
pushf
xchg
or
sbbl
inc
dec
jo
out
xchg
dec
popa
cltd
mov
out
add
adc
int
sbb
call
adc
cmpsl
cmp
sarl
adc
inc
mov
mov
jns
jae
cmpsb
mov
fstps
fs
sar
shll
jno
add
int
push
scas
and
push
pop
stos
cmc
movsl
mov
bound
adc
xor
jl
pop
fbstp
sub
add
xor
sub
dec
pop
pop
movsl
pushf
out
pop
push
inc
stos
mov
add
inc
pop
imull
or
hlt
jnp
xor
cmpsl
mov
xchg
inc
cli
jae
jno
je
push
adc
clc
scas
stos
loop
mov
rorl
notl
or
popa
push
ret
sbb
push
inc
push
xor
mov
sub
push
das
mov
mov
dec
pop
cltd
dec
lods
cmpsl
or
sbb
add
sahf
mov
and
push
in
xchg
jmp
jns
sub
lds
mov
cmp
mov
insl
cmp
sarb
cld
xchg
or
loop
adc
inc
lahf
pop
push
pop
add
mov
mov
or
xor
les
es
jns
sub
shll
adc
mov
cwtl
push
jge
mov
mov
inc
or
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
pop
enter
insb
mov
mov
or
mov
lahf
push
push
mov
fdivl
add
jns
inc
int
push
mov
mov
stc
gs
pop
out
fldl
pop
mov
dec
pushw
cs
es
adc
cmpsb
cmovl
adc
mov
sub
stos
loope
mov
stc
fs
in
insb
mov
pop
ljmp
jecxz
or
stos
cmc
jp
stos
ja
out
repz
mov
popa
push
xor
fdivs
or
ss
jbe
jl
shrb
push
loope
test
add
lock
add
enter
xor
cwtl
cmp
fcoms
lds
test
fwait
jle
int
mov
cld
mov
push
push
inc
lods
std
pusha
pop
test
ds
cmp
jecxz
mov
mov
test
xor
jns
jmp
cmp
dec
mov
cmpsb
mov
sub
push
ficoml
push
add
pop
mov
pop
inc
repz
sbb
xorl
dec
movsb
mov
popa
push
sub
mov
dec
cmp
je
xor
test
xor
arpl
push
sbb
cmp
fcompl
ficomps
stc
testb
add
rcll
dec
and
and
pop
xlat
mov
sbb
and
cmp
gs
pushf
dec
xlat
lods
cli
inc
imul
adc
ficoml
push
mov
icebp
aaa
push
inc
jle
adc
mov
jle
or
add
inc
aas
std
int3
jb
stos
add
fcoms
lods
lods
std
ljmp
inc
mov
jmp
movsb
cltd
cmp
xor
push
daa
jnp
in
sbb
jnp
aas
sarb
mov
popa
addr16
push
pop
add
imul
les
xchg
cmp
pop
xadd
out
aad
insl
and
and
xor
js
jns
add
sbb
outsb
cwtl
lds
pop
xchg
push
sahf
movsl
and
or
xchg
lock
insl
icebp
jg
imul
sub
out
xlat
fnstcw
scas
cs
mov
mov
push
testb
xchg
loopne
and
mov
hlt
add
push
jmp
or
hlt
push
mov
movsb
sub
je
lods
repnz
out
jmp
push
and
loop
lret
popf
sbb
popa
ds
or
and
jle
fstl
sahf
push
repnz
inc
mov
lret
imul
mov
or
inc
sbb
cltd
pop
sub
mov
sub
mov
jnp
outsl
xor
stos
lods
shr
sub
sbb
lea
in
sbb
jne
jo
mov
inc
data16
or
pushf
aaa
push
push
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
push
sahf
pop
jb
mov
sub
in
fiadds
ds
or
cmp
xor
pushf
les
lcall
xor
sub
dec
xor
int
or
mov
add
inc
dec
mov
clc
jnp
ds
sbb
sbb
loopne
out
es
in
fwait
push
mov
data16
mov
jmp
push
cmpsl
pop
mov
adc
lock
mov
add
loop
cmc
dec
jno
leave
push
aad
cmc
sub
sub
test
jmp
fisubrs
pushf
cmpsl
loope
cmp
lret
es
repnz
dec
xorb
add
addr16
je
add
pop
lea
movl
and
xor
or
fs
mov
je,pn
setp
ds
dec
sti
out
rcr
mov
fmuls
sub
inc
scas
xor
push
xchg
inc
sub
xchg
cs
test
test
push
cmpsl
adc
mov
xor
loop
inc
cmp
dec
or
pop
xchg
subb
jne
mov
pushf
pop
jns
sbbl
xchg
cs
mov
jmp
dec
and
and
in
mov
test
sahf
xor
dec
sbb
jbe
sub
adc
cld
pushf
sbb
scas
xchg
xor
fdivr
movsl
inc
shl
pushf
add
iret
test
dec
or
ficomps
pop
pop
icebp
jecxz
int
std
ja
sub
int3
add
jge
std
fnstenv
mov
pop
subb
and
adc
mov
adc
push
dec
lahf
xchg
cltd
and
and
std
jno
sbb
push
aas
push
ja
mov
lahf
cmp
cvtps2pi
pop
insb
das
sahf
lcall
jno
mov
dec
xchg
sub
test
fisubl
lods
int3
sub
jg
xchg
xorl
rcrl
in
cld
jne
in
mov
fistpl
inc
insb
repnz
fs
fldl
sub
sub
lods
addr16
xchg
xchg
fsubrp
inc
stos
jno
rorl
imul
xchg
sbb
push
lcall
push
arpl
cld
or
stc
jnp
inc
dec
dec
xor
cmp
push
xchg
mov
mov
scas
ret
jno
test
jae
push
inc
inc
adc
push
les
sbb
cmp
xor
adc
push
test
mov
or
mov
je
mov
cld
fcmovnu
add
ficoml
enter
test
sarb
daa
jmp
and
push
cmc
out
or
js
push
jp
fildll
shl
and
mov
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
ljmp
push
mov
sti
rcrl
adc
enter
push
lcall
sub
jg
orb
outsl
mov
cmp
or
dec
cmp
mov
outsb
ja
mov
rorl
sbb
mov
pop
sub
push
stos
imul
incl
out
pop
test
mov
insb
mov
sti
cmp
mov
enter
pop
rcr
sub
in
fsubs
or
lds
aam
popa
in
rcrl
out
pop
push
push
cmp
cmp
and
lods
loope
push
repnz
adc
out
adc
sbb
test
int
jb
das
das
cmpsb
scas
rcll
dec
xor
into
test
je
arpl
outsl
dec
movl
dec
cmc
shl
push
xorb
dec
or
sbb
arpl
jge
jl
pop
shlb
fnstcw
cli
seta
aad
mov
aad
or
jo
mov
loopne
add
and
je
daa
scas
scas
ljmp
nop
fistpll
inc
push
popa
mov
sub
outsl
xor
sahf
scas
sbb
data16
sbb
jb
scas
movnti
pop
pop
aaa
into
arpl
or
mov
mov
push
jb
ja
xchg
push
sbb
adc
cmp
mov
lods
cmp
fists
mov
jmp
or
fisttps
push
cmp
pop
imul
lods
jle
xchg
dec
data16
inc
dec
es
mov
inc
dec
and
sti
imul
adc
push
je
jmp
das
stc
cwtl
cwtl
arpl
mov
insb
gs
push
cmc
pusha
xchg
xor
mov
pop
les
jne
popf
push
loop
ds
mov
mov
lret
inc
das
push
xchg
ret
movsb
sbb
sbb
push
jl
icebp
push
pop
push
call
pop
lods
xchg
inc
ljmp
or
pop
or
fldln2
int3
xchg
xor
push
inc
movsl
hlt
push
rcl
cld
out
and
aad
enter
push
mov
movsl
shr
aad
or
mov
mov
push
jno
or
ret
scas
sub
mov
addb
inc
adc
lcall
mov
mov
sub
push
idivl
lods
push
cmc
cmp
sbb
mov
dec
xchg
and
xor
mov
movsl
pushl
or
adc
mov
or
daa
loopne
dec
mov
sti
sbb
mov
cmp
mov
das
xchg
lret
lds
loopne
js
jo
xchg
mov
and
or
test
sarl
cld
add
pusha
pop
mov
add
mov
inc
xor
xor
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
insl
rclw
in
les
les
xchg
fcmovnb
jne
mov
adc
inc
lods
adc
mov
jg
push
mov
inc
mov
mov
sub
pop
sub
mov
insb
cmp
jnp
add
jl
push
movsl
fstps
push
dec
xchg
aad
gs
push
mov
jle
mov
sub
enter
lret
adc
sarb
xchg
loop
jg
sbb
or
fwait
push
dec
lea
test
insb
pmaxsw
jecxz
push
out
mov
mov
inc
jl
repz
pusha
fs
test
mov
mov
cmpxchg
subl
lahf
mov
adc
ds
and
xchg
daa
push
sahf
in
push
fwait
scas
cli
mov
xor
clc
rcrl
repnz
cmp
dec
rorb
mov
sti
sub
push
orb
inc
push
ljmp
ret
arpl
into
and
inc
xchg
mov
test
mov
mov
insb
mov
inc
xor
pop
pusha
movsb
and
adc
test
jecxz
lock
cmpsb
inc
and
xlat
rolb
xor
arpl
xor
inc
push
push
loop
sub
call
jg
add
icebp
pushf
ja
ja
mov
and
test
pop
push
flds
and
xchg
int3
xor
lods
mov
pop
mov
out
dec
loopne
jb
in
pop
add
lds
jae
sub
dec
inc
aad
inc
jno
outsb
xlat
pusha
pop
fsubrs
rcrl
xor
fists
cwtl
or
inc
sub
jb
xchg
inc
scas
add
push
cmpsb
sbb
mov
jle
xor
movsb
pop
aas
call
fidivl
into
jne
mov
je
hlt
cs
mov
sti
mov
mov
jg
cld
lods
xlat
pop
aam
lret
test
pop
cmpb
push
stos
cmp
mov
lea
mov
mov
int
push
mov
inc
mov
jb
mov
inc
fdivp
fsubs
sbb
xchg
push
mov
and
add
adc
loopne
add
mov
add
aam
xchg
aaa
sub
cmp
ljmp
loopne
xor
cmp
dec
andb
inc
f2xm1
aad
add
jne
cmpsw
movsl
stc
pop
sbb
xor
sbb
subb
popf
test
jbe
shlb
mov
arpl
test
stc
inc
ud1
sub
adc
andb
sub
cli
outsl
popa
pop
xor
stos
in
lcall
int
arpl
out
dec
aaa
enter
push
cmp
push
orb
push
push
sahf
lods
and
or
cmpl
movl
movzwl
jmp
movl
cmpl
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
lret
in
xchg
mov
jl
clc
test
repnz
test
jl
pushf
jmp
inc
and
push
pushf
cmpsl
ja
sarl
jbe
repnz
add
mov
sbb
mov
pusha
or
mov
in
ljmp
cltd
loopne
in
xchg
imul
popa
test
mov
cmp
ds
sahf
sbb
bound
mov
jbe
xchg
pushf
lods
push
imul
insl
cmp
lock
add
mov
enter
xchg
mov
push
mov
insb
adc
loope
daa
lock
jp
mov
aad
lods
loope
js
and
cmp
pop
ss
xor
les
push
popf
frstor
mov
mov
test
cmpl
jne
cmp
sub
or
mov
mov
test
jge
sub
push
pusha
jae
xchg
imul
adc
pushf
push
add
inc
fadds
out
push
ror
fs
or
sti
inc
loopne
loopne
js
push
bound
fwait
and
daa
mov
je
jl
mov
sbb
insb
loopne
orl
jmp
cmpsb
and
xorl
les
xor
fisubrs
iret
pop
push
sbb
push
in
pop
fs
rcll
sbb
jo
movsl
mov
cld
rorl
pop
mov
cltd
push
lds
adc
mov
or
in
push
fadds
or
fwait
mov
dec
das
push
outsl
xlat
mov
mov
push
push
or
inc
ficomps
sub
orb
sbb
sub
mov
mov
inc
push
icebp
jg
lods
mov
inc
add
clc
movsl
rolb
rorl
pop
pop
sub
gs
cmp
and
jb
fadds
xchg
cmp
pushf
out
outsb
testl
out
shrb
cmpsl
or
or
jg
cmpsl
sarb
dec
rclb
dec
sbb
jmp
push
dec
ficompl
pop
push
cwtl
je
fcompl
adc
orl
dec
pop
movsb
cmc
mov
out
sar
jno
jp
mov
mov
cmp
loop
add
repz
mov
lods
jp
outsl
fistps
rorb
dec
xchg
in
jns
inc
loop
dec
adc
mov
or
adc
sub
in
mov
addr16
and
sbb
sti
js
stc
dec
xchg
faddl
lock
sbb
pop
rcrl
xchg
in
pop
scas
cmp
lret
scas
jecxz
aas
shrl
cmp
iret
mov
test
hlt
jg
xchg
sub
xchg
push
fimuls
adc
lods
enter
add
adc
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
push
sahf
sbb
mov
test
mov
sub
jne
push
in
push
es
les
pop
add
add
adc
fdivrl
mov
aam
mov
fwait
clc
gs
stc
and
sub
stos
add
aad
push
jl
push
inc
dec
std
mov
sub
mov
mov
push
je
cmp
jg
push
roll
cld
aam
bound
pop
test
loope
movsl
mov
pop
fwait
loope
xchg
mov
insb
cmp
pop
mov
ljmp
mov
lcall
cwtl
inc
pop
ficoms
xor
jne
push
pop
xor
outsb
dec
and
dec
pop
xor
mov
jbe
add
clc
xchg
xor
jge
fstp
pop
xlat
push
or
into
jmp
aaa
cmpsl
and
ret
sub
loope
jge
imul
jno
fistpll
xorl
mov
insl
inc
adc
sub
js
sbb
dec
ljmp
add
inc
sbb
mov
xchg
push
jl
stos
xchg
and
or
push
fimull
lcall
dec
adc
mov
arpl
or
test
outsb
imul
inc
test
dec
sub
sub
int3
stos
mov
insl
mov
testb
mov
jle
nop
mov
in
sbbl
je
adc
xchg
adc
cld
insb
xchg
testb
rcr
inc
mov
mov
insl
sbb
lahf
sahf
call
les
lahf
push
std
test
cli
rolb
lea
repnz
mul
aaa
adc
xor
sub
push
bnd
scas
jmp
inc
mov
das
pop
sbb
mov
pop
cmp
scas
push
repz
nop
cmp
repnz
and
les
insl
mov
aam
cmp
and
in
jb
mov
mov
push
lock
orb
lock
xor
dec
xor
int
stc
rol
loop
cmc
inc
adc
hlt
or
pop
insb
cmp
imul
bound
pop
pop
mov
pushf
cmpl
sbb
hlt
sbb
in
mov
mov
daa
mov
cmp
andl
cli
jp
les
sarl
int3
push
cmpsl
repnz
xchg
jne
int3
and
les
jecxz
inc
scas
mov
push
std
xorl
rcrl
int3
push
out
and
rcr
sahf
mov
add
fistl
stc
mov
dec
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
int
dec
xchg
mov
mov
dec
test
adc
lods
jmp
or
repnz
decl
push
sahf
inc
lds
inc
inc
notl
jns
add
xchg
adc
xor
jmp
fs
imul
push
sub
inc
fisttpl
adc
adc
jp
jns
loope
cmpsb
cmp
pop
std
sub
ja
push
movsb
jno
mov
xchg
ljmp
aas
cmp
movsl
mov
cs
mov
pusha
rolb
dec
mov
jbe
cld
nop
sub
imul
pop
lods
cmpsl
sbb
and
lods
push
jne
push
ss
inc
inc
pop
movsb
out
jmp
imul
push
add
mov
xorb
in
movsb
ret
push
insl
cltd
test
shrb
stos
inc
cmp
sub
pop
mov
and
pop
int3
push
pop
fwait
outsl
and
dec
repnz
outsl
fiaddl
dec
inc
add
enter
or
loope
add
xor
negb
ss
lret
or
popf
jno
data16
adc
leave
lret
test
imul
mov
cmpsl
ljmp
cmpsb
out
imull
decb
dec
cmpsb
sub
cmp
inc
fs
mov
in
inc
je
and
jbe
lret
fiadds
stos
jmp
sti
or
andl
test
cmpsl
inc
mov
pusha
mov
fcompl
mov
push
xchg
xor
push
lret
sub
mov
outsb
sbb
sub
jo
mov
outsb
mov
icebp
andl
push
cmp
aam
lods
dec
bound
xchg
in
fs
test
adc
fmuls
push
xlat
imul
scas
bound
rolb
push
xchg
mov
outsl
mov
rclb
ficoms
pop
outsb
mov
lea
xor
mov
cmpsb
mov
inc
fiadds
or
or
or
into
xchg
cmpsl
lahf
cmp
shll
jecxz
xchg
dec
lods
add
pusha
ja
push
fs
dec
mov
enter
int3
cmp
cmp
push
pop
ss
repnz
sub
mov
ret
push
mov
cmp
leave
je
test
test
cmp
add
icebp
lcall
fnstenv
jb
xchg
add
cltd
xor
mov
jbe
subl
sub
loop
std
hlt
cmp
lea
mov
jne
ss
push
js
jmp
es
lods
mov
and
das
push
loopne
lahf
sub
xchg
aam
push
movsl
and
xchg
mov
dec
shl
or
jne
lock
mov
mov
shrd
shr
xor
jmp
cmp
sub
xchg
out
push
out
jnp
mov
mov
std
in
mov
cli
cmpsb
xlat
leave
and
inc
hlt
jge
stc
ss
and
mov
sti
lock
lfs
xlat
repz
pushf
ja
aaa
gs
popa
jnp
loopne
pop
outsb
dec
into
cli
dec
lock
jno
aad
add
cli
mov
pop
mov
sahf
dec
imul
jl
pop
ss
jbe
jae
jb
add
inc
mov
cmp
mov
das
dec
jg
xchg
adc
jno
inc
aad
sub
out
jae
test
cltd
jecxz
test
adc
adc
repz
fistpl
cmc
xor
test
sub
shl
cld
mov
cmp
es
in
out
repnz
mov
loope
insb
push
popa
push
add
cs
iret
mov
ss
ja
jge
sub
lods
rcll
inc
clc
pop
xchg
fs
adc
iret
or
pop
mov
push
aaa
int3
jo
adc
fwait
xor
or
mov
xchg
out
repnz
fstpt
in
das
mov
addr16
arpl
inc
pop
loopne
adcb
mov
xchg
dec
outsl
clc
xor
fisubl
xchg
imul
lahf
xchg
jae
inc
leave
stos
inc
test
pop
xor
cmp
sub
inc
cmp
ret
insb
ljmp
sbb
and
mov
pop
das
bnd
lods
imulb
stos
and
shlb
xor
sbb
xlat
push
mov
cwtl
imul
into
into
jecxz
push
icebp
dec
fnstcw
loope
stos
sbb
adc
rolb
mov
and
lds
in
mov
push
pop
mov
adc
inc
xchg
ljmp
inc
loope
push
cmc
push
cli
xor
push
shrb
adcl
push
nop
outsl
pop
xchg
add
rorl
cmp
scas
jp
call
insl
std
push
jl
int3
mov
or
push
out
sahf
aad
add
xchg
scas
popa
popf
xchg
inc
pop
jbe
out
jle
push
xor
mov
mov
es
cld
adc
jbe
popf
inc
movsl
lea
mov
lds
pop
popa
loop
mov
mov
adc
mov
mov
loop
pop
out
call
inc
aas
mov
inc
inc
push
popf
jne
cmp
and
mov
fmul
xchg
add
test
jne
mov
xor
ficoms
sub
outsb
jp
jnp
sbb
arpl
lahf
jb
lods
icebp
or
add
mov
insl
xor
outsl
test
movsb
cwtl
outsl
test
mov
out
imul
int
test
adc
js
sbb
sahf
jno
mov
mov
mov
dec
movsl
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
pop
shrl
les
fyl2xp1
fsts
cmpsb
jge
xchg
call
mov
sub
out
push
pop
in
arpl
jo
dec
outsl
xchg
jmp
outsb
sub
push
popa
xchg
pop
call
call
sbb
in
xor
or
jg
or
jne
push
xor
pop
pop
inc
dec
idivl
mov
inc
stos
es
cld
lret
test
imulb
push
sti
aam
icebp
js
push
mov
sbb
jge
out
out
sbb
sbb
mov
daa
test
lahf
lods
ds
pop
ret
mov
add
add
outsb
cmp
cld
sub
pop
add
and
dec
in
frstor
addr16
inc
leave
ret
sbb
stos
scas
dec
mov
das
lcall
aaa
es
pushf
adc
pop
in
jno
cltd
cmp
iret
scas
ja
inc
xchg
insl
xor
push
dec
bound
lods
subb
and
inc
lods
int
push
ret
pushf
nop
fdivr
push
lock
cmp
xor
pop
push
dec
xor
sub
or
and
mov
in
add
divb
ds
pop
dec
data16
in
mov
adc
cs
adc
push
sbb
sbb
ja
aam
pop
pop
or
add
insb
insl
call
bound
lods
js
imul
or
stos
lea
in
out
lcall
cmc
mov
or
mov
xor
and
les
lods
cmp
cmp
mov
fsubr
adc
mov
lods
jl
mov
in
jne
pop
xor
out
add
push
add
in
jbe
adc
xor
cmp
mov
jns
mov
in
inc
cmp
adc
in
xchg
stc
pop
cmp
pop
lahf
fldt
mov
cmp
test
ds
in
mov
ja
lock
push
xchg
inc
xor
andl
mov
lcall
sub
sahf
jecxz
ror
lahf
add
adc
dec
add
mov
andl
xor
push
adc
outsl
cmpsb
inc
out
lcall
repnz
push
negl
repz
cmpsl
and
adc
loopne
int3
add
xor
jle
mov
sahf
fbld
inc
dec
xor
push
xor
mov
mov
inc
popa
push
lock
js
iret
in
push
jne
aaa
les
repz
stos
andb
fnstsw
or
sahf
ret
add
les
int3
movsl
test
aaa
sbb
mov
mov
fstpt
enter
loopne
and
out
dec
rolb
inc
push
jp
outsl
mov
dec
adc
lods
enter
add
adc
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
stos
out
iret
mov
xor
sub
test
rclb
enter
sub
addr16
sarb
sbb
in
aam
cmp
cmp
push
jbe
sbb
jbe
mov
fmuls
push
mov
adc
gs
out
pop
or
adc
dec
daa
pop
add
sti
jle
xchg
push
dec
stos
jmp
adc
pop
xchg
sub
repz
cli
push
jmp
imul
fcmove
cmp
xor
or
xor
sbb
push
cmpb
and
lret
jmp
mov
jo
cli
push
push
adc
ret
mov
xchg
push
repnz
cld
sahf
fs
adc
cli
in
mov
ja
icebp
and
js
push
jno
in
in
add
xchg
out
pop
adc
daa
cmc
adc
cmc
xchg
sahf
mov
add
scas
insl
mov
pop
divb
mov
sbb
popf
out
add
adc
cmp
fstps
dec
dec
into
pushf
xchg
lods
lret
mov
pusha
in
pop
mov
das
fisttpl
cmp
cmc
out
lods
pop
mov
hlt
push
and
jecxz
push
dec
mov
je
hlt
cmp
aaa
bsf
int
enter
cli
cmc
sub
sub
dec
lods
add
jo
pop
fcomps
seto
cmp
test
or
sbbb
fisttpl
neg
xchg
inc
jno
dec
cwtl
clc
rcrl
out
push
xlat
mov
cmpsl
int3
je
dec
jge
jb
mov
inc
jecxz
mov
mov
mov
cmp
mul
stos
sub
xor
lds
stos
or
and
pop
je
test
xchg
sbb
xlat
les
jle
repnz
insl
jne
xchg
jo
mov
xchg
mov
pop
push
cmpsb
cmpsb
add
xchg
cs
xor
shrb
loop
add
shrb
aas
sub
les
xchg
inc
pop
pop
mov
subb
inc
ret
jp
insl
push
imul
sub
xor
mov
jge
or
jp
scas
outsb
push
mov
jne
xchg
push
test
lea
cmpsl
inc
scas
cmp
push
cltd
in
and
ja
dec
adc
push
les
push
sub
jl
in
add
push
fstps
xlat
mov
cmp
sti
xchg
out
aad
dec
arpl
rcrb
inc
lret
inc
push
dec
jmp
mov
dec
cmp
jp
mov
xor
int3
int
jge
mov
push
ss
jo
outsl
mov
push
lahf
mov
push
add
and
xchg
sti
in
fwait
mov
pop
xor
cs
lods
repz
adc
ljmp
sub
mov
repz
mov
lods
pop
ss
cmpsb
aaa
ret
jle
sbb
bound
enter
add
call
mov
mov
mov
iret
or
mov
mov
test
xor
xchg
in
shll
or
decl
repnz
fildll
enter
pop
dec
movsl
test
sub
es
lock
div
test
mov
mov
jne
jecxz
or
lods
mov
fnsave
clc
fst
sahf
mov
cmp
loopne
aaa
jb
out
cmc
outsl
or
lret
test
faddp
psubusw
cmp
push
mov
aas
mov
sub
jle
arpl
adc
xchg
jecxz
xchg
push
xchg
or
mov
jb
cmpsb
ret
mov
iret
dec
fcoml
pop
repnz
dec
and
or
icebp
jns
test
lock
dec
xchg
xchg
cwtl
repz
test
sti
imul
sub
mov
xor
ret
push
cmp
jo
mov
adc
add
enter
out
gs
or
inc
loop
outsb
xor
sti
lahf
jecxz
add
sarl
and
push
push
les
outsl
cmp
test
in
adc
loopne
jmp
inc
andl
and
stc
mov
push
xchg
or
add
test
mov
test
adc
lds
mov
scas
ret
pop
sub
mov
pop
inc
test
bound
cmp
addr16
xchg
add
add
add
sbb
movsl
mov
cmc
test
push
pop
push
xor
jno
gs
pop
lods
std
mov
adc
xor
mov
adc
cld
mov
jmp
out
or
ljmp
or
stos
mov
lret
mov
jg
sti
mov
sbb
push
cltd
lock
push
xor
fs
cmp
imull
iret
daa
xchg
ja
in
dec
mov
into
fsubrl
movsb
xor
sub
les
into
fstl
pop
call
clc
js
pop
fldl
cld
rcll
adc
ret
adc
add
pop
popa
cmpsl
lods
mov
into
jmp
or
and
cs
mov
out
mov
jb
push
jmp
in
jl
enter
stos
mov
scas
push
ja
jnp
sbb
scas
lods
clc
imul
xchg
in
lods
mov
nop
sbb
sarb
dec
inc
xchg
arpl
add
out
call
add
dec
aad
inc
arpl
fsubl
and
push
push
sbb
pop
adc
js
ljmp
adc
jno
lods
dec
sub
outsb
mov
dec
inc
arpl
clc
ficomps
add
pop
and
push
pop
movb
out
pop
shlb
fcomps
mov
xchg
repz
jb
test
inc
call
mov
xor
test
jmp
jno
mov
fs
sub
xchg
cmp
sarl
mov
mov
xor
ss
cmp
stos
loopne
data16
xchg
in
insb
add
sti
mov
int3
sbb
cmpsb
xchg
leave
pop
nop
cmp
sbb
mov
popa
mov
pop
pop
popf
repnz
cmp
fiadds
sbb
imul
test
cmc
mov
push
inc
xchg
pop
mov
lock
mov
insb
fwait
addr16
push
inc
mov
push
sbb
fcoml
addr16
sub
xor
test
inc
xchg
test
adc
nop
xor
and
jl
idiv
sti
stc
inc
and
lcallw
out
mov
xchg
xor
mov
arpl
pop
push
sbb
push
mov
adc
ja
push
fcmovnbe
or
les
fisttpl
xor
shl
out
imul
mov
cld
mov
clc
inc
addr16
lods
mov
iret
jmp
pop
xchg
add
call
xchg
ja
cltd
dec
subl
call
idiv
push
pop
inc
icebp
clc
ret
and
mov
fidivs
cmp
fimull
pop
pop
inc
bound
out
neg
add
insb
cmp
repz
jno
push
sbb
inc
cmp
in
in
aam
mov
push
inc
bound
jbe
out
lcall
jl
jb
insb
fs
mov
push
sar
push
push
aam
imul
test
dec
adc
inc
sbbb
dec
mull
pop
lret
pop
dec
je
cmp
xlat
fwait
mov
shlb
fwait
mulps
movsl
xchg
add
mov
cli
mov
mov
lret
orb
clc
mov
sub
push
sbb
aas
into
sub
enter
push
enter
jb
and
pop
setbe
loope
loope
cmpl
xor
sub
pusha
daa
pop
pop
popa
and
int3
xchg
ds
inc
movsb
and
jns
jecxz
mov
sub
pop
in
addr16
int3
push
bound
cmp
hlt
inc
jmp
inc
addr16
daa
push
iret
sbb
sub
scas
pop
cmp
out
fisttpl
cltd
jl
fists
in
xchg
rcll
cmp
lock
push
lds
adcl
out
mov
in
or
popf
in
imull
repz
dec
aad
sbb
imul
xchg
sbb
mov
and
pop
xchg
push
ret
notl
xchg
cmp
mov
ret
leave
cli
push
sub
mov
test
jle
cmp
icebp
aas
lods
cmp
popa
pop
dec
sahf
sub
pop
ds
cltd
jnp
xchg
inc
iret
cwtl
popf
mov
cwtl
je
jge
jp
stc
xor
push
stos
imul
fs
jl
xor
add
fs
ja,pt
test
add
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
fstl
mov
insb
mov
mov
mov
movsl
lret
xlat
mov
shlb
shl
mull
pop
je
push
pop
pop
push
out
cmp
insl
shrb
sub
mov
outsl
adc
adc
sbb
xchg
mov
out
gs
stos
das
ret
dec
cmpsb
mov
pop
jae
into
lods
in
insl
mov
push
arpl
push
add
out
jl
mov
lea
in
pop
out
xor
xchg
pop
inc
bound
cli
mov
lods
sbb
ret
cmp
push
imul
inc
mov
es
mov
push
aas
imul
shlb
fisttpl
sub
or
outsb
and
shll
add
stos
sahf
pop
xchg
push
mov
xor
leave
mov
insl
mov
bound
sbb
xchg
lods
xor
push
sub
pop
sbb
push
pop
adc
xor
cmp
das
imul
lods
stos
mov
aas
xchg
mov
mov
in
jne
arpl
cmp
push
out
mov
ud1
cltd
adc
out
push
sbb
adc
out
mov
negl
jbe
ss
ret
popf
mov
cmp
or
ds
rorl
imul
movsl
push
out
xor
jg
adcb
mov
and
cwtl
std
mov
nop
xchg
sbb
lods
jae
mov
mov
bound
or
repnz
xor
data16
out
repz
pop
lahf
mov
pop
lret
sbb
outsb
out
out
dec
out
cltd
sbb
into
hlt
faddl
repnz
push
and
sub
repnz
pop
xchg
aas
mov
xchg
cwtl
repnz
mov
xchg
adc
imul
cmp
sti
mov
ja
xlat
std
xchg
popf
and
dec
jle
sbb
adc
inc
push
and
push
mov
mov
and
imul
stos
movsb
or
cmp
xchg
mov
stc
mov
in
sbb
lea
cmp
pop
xor
cmpb
mov
dec
fdivrl
mov
add
movsl
xchg
js
dec
shll
std
xor
pusha
imul
icebp
popa
icebp
sbb
cmp
testb
ss
fwait
arpl
sti
pop
inc
stos
mov
dec
jne
icebp
test
and
push
shrb
mov
cmp
xchg
and
ret
es
loopne
movsb
add
push
xchg
dec
and
mov
or
mov
or
and
in
sti
mov
pop
inc
inc
aas
ficoml
adc
add
sbb
mov
jb
add
pop
leave
pop
pop
push
mov
inc
cld
xchg
aad
imul
pop
pop
mov
add
xchg
jmp
mov
testl
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
jecxz
mov
mov
xchg
aas
lret
fmull
jp
jg
iret
int
jmp
pop
insl
push
stos
adc
adc
sub
xchg
call
std
std
xlat
jmp
mov
dec
or
dec
xor
ror
inc
push
mov
or
idivl
xlat
add
repz
mov
sahf
arpl
or
and
inc
arpl
mov
push
cltd
rorb
xor
je
xor
and
mov
jl
and
into
lret
add
out
fs
mov
push
dec
jmp
xchg
mov
mov
out
cltd
push
add
sbbb
movsb
pop
add
inc
jbe
rcll
paddusw
in
inc
sti
lds
inc
mov
js
in
pop
dec
aaa
jp
sub
gs
sbb
lods
cld
add
or
lods
sti
sti
lret
xchg
adc
ljmp
push
dec
jae
cmp
xor
fnsave
jnp
jl
add
adcl
dec
or
xchg
xchg
pop
loop
cli
push
jb
fiaddl
cs
aad
adc
je
dec
cmp
sarb
ss
jge
inc
fldcw
into
repnz
xchg
es
dec
xchg
mov
aam
mov
pop
mov
jg
cmpsl
pop
push
lret
repz
jg
and
stos
sub
adc
sbb
dec
xchg
adcl
icebp
loope
jns
mov
jnp
lret
cmp
dec
jp
xchg
movsl
inc
xchg
les
lods
sub
sarl
sbb
sbb
push
mov
adc
movsl
test
sahf
push
xor
mov
cld
sub
cltd
mov
lods
xor
cmp
daa
arpl
sbb
dec
dec
test
mov
sbb
inc
jecxz
mov
xor
sub
xor
loope
ss
pop
jns
push
jbe
lock
out
cmp
sbb
pop
sarb
push
jle
mov
lret
aaa
and
xchg
outsb
add
lret
sti
pop
jecxz
std
mov
push
shl
xor
mov
ret
cli
loopne
orl
jno
or
outsb
mov
jb
and
adc
mov
xchg
clc
mov
ficoms
mov
fcomps
fidivl
stos
jns
leave
inc
inc
cmpsb
sub
sar
cmp
mov
loop
xlat
adc
mov
xchg
iret
loopne
insl
inc
into
inc
xor
pop
xor
inc
jns
fs
cmp
lods
addr16
push
out
daa
mov
leave
in
push
inc
hlt
repnz
xchg
sub
je
jo
pop
sbb
nop
mov
div
dec
call
jns
cwtl
sarb
or
popa
pop
sub
fwait
adc
loop
or
xchg
hlt
repnz
cmpsb
sahf
xchg
pop
vpcmpgtd
test
jmp
aaa
int
and
ds
loope
push
negl
mov
test
in
rorl
sbb
iret
dec
sbb
adc
inc
gs
pop
mov
inc
bnd
stos
jbe
es
call
je
cli
aas
arpl
mov
adc
xor
into
jae
cmp
test
and
xchg
mov
ja
push
and
imul
lock
jecxz
das
cmp
mov
mov
mov
push
leave
mov
push
sbb
dec
lret
divl
cmpsb
mov
sub
cmp
ja
jmp
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
mov
sbb
pop
insl
mov
mov
mov
mov
jb
aaa
xchg
mull
cmp
push
push
xchg
push
pop
lock
repz
and
outsb
xchg
dec
addl
pause
mov
adc
scas
jbe
cld
fcmovnu
inc
add
dec
and
sub
outsl
mov
aad
test
push
das
mov
test
xor
fs
out
and
clc
pop
sub
mov
repz
stos
push
add
mov
and
push
test
stos
mov
pop
push
out
inc
or
push
xchg
pop
pcmpeqw
pop
pop
push
sbb
ds
test
pop
jecxz
ss
addr16
loop
sbb
mov
testl
jp
ja
cmp
push
push
adc
inc
roll
sub
jno
add
push
lahf
lods
loope
ljmp
scas
bound
sbb
push
fnstcw
in
int
andb
cltd
and
or
jg
xor
addr16
shlb
ja
aam
mov
cld
dec
lret
xor
xor
test
cmpsb
sub
loop
rcr
dec
xor
jecxz
ror
jnp
orb
out
and
xchg
pop
add
nop
inc
pop
aam
leave
movsb
xor
orl
jnp
leave
xchg
and
mov
mov
das
or
mov
out
sahf
sub
adc
and
movsl
stos
fbld
dec
cmp
pop
add
xor
es
mov
out
negb
xor
call
mov
mov
push
mov
inc
or
pop
sub
pop
xor
mov
test
pusha
inc
inc
mov
xorb
das
shlb
scas
imul
pushf
pop
xchg
dec
fsubrs
sub
faddl
pop
jle
daa
push
jl
scas
fs
call
clc
sarl
aam
test
cmc
sbb
mov
jmp
jge
cmc
fists
jle
sbbb
or
xchg
out
icebp
mov
xchg
jb
in
mov
insb
cmp
fidivl
aam
testb
bound
test
fwait
gs
inc
pop
or
pop
add
shlb
sub
mov
movsb
push
or
cmp
inc
mov
lea
adc
mov
cmp
and
ja
les
mov
into
lret
dec
adc
sub
movsb
xchg
inc
xor
mov
pop
push
and
push
shr
enter
push
or
cli
sarl
in
andb
pop
mov
into
push
push
inc
sar
fwait
jge
jle
ret
mov
lret
mov
call
aam
push
cmp
pop
jg
ds
fildl
add
jae
push
sar
mov
or
sub
mov
push
imulb
or
xchg
push
adc
push
mov
mov
adcl
sbb
out
hlt
cmp
and
xchg
fistpl
cmp
jbe
lock
rcll
mov
push
mov
jl
push
call
ljmp
inc
dec
das
gs
xchg
mov
xchg
movsb
test
test
push
fdivrl
fisttps
push
mov
sbb
rcll
xor
push
adc
push
or
hlt
lahf
mov
int
jle
shrl
mov
or
mov
xor
push
imul
fcoml
add
in
sbb
scas
or
push
pop
daa
push
xchg
ficoms
push
xor
es
pop
push
in
xor
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
cmc
dec
add
cmp
sarb
xor
mov
sub
xor
mov
push
adc
push
xchg
xor
mov
mov
xchg
leave
fidivrs
out
js
pop
popa
lahf
pop
dec
insl
jmp
out
push
movsb
scas
pushf
mov
adc
and
idivl
mov
add
movsl
inc
mov
mov
es
push
cli
push
xchg
sub
lock
jne
iret
shll
push
iret
dec
loop
aad
aam
ja
or
pop
and
pop
sub
addr16
dec
or
enter
cld
cmp
test
nop
pusha
arpl
push
cmp
sbb
in
mov
pop
lcall
or
dec
adc
loopne
lahf
dec
adc
repnz
ss
les
neg
dec
sbb
xchg
clc
ss
add
xor
pop
jnp
dec
xchg
pop
fistl
adc
jbe
aaa
dec
jbe
xchg
and
jecxz
xchg
dec
cmp
loope
aad
and
xlat
pop
pop
test
test
shl
or
xchg
jge
xchg
call
or
inc
sub
sub
jecxz
inc
cmpsl
adc
inc
dec
das
and
add
outsb
jo
push
pop
adc
aad
xorb
clc
push
mov
sub
cmp
js
mov
adc
inc
fidivrl
in
push
dec
imul
inc
and
leave
ljmp
std
outsb
aad
sahf
xor
jg
cmp
adc
inc
push
xchg
jb
cmp
imul
js
loop
cs
fsts
jno
jge
fcomps
iret
adc
imul
add
lahf
jle
cmc
mov
in
ret
push
mov
popf
ds
inc
shlb
pop
pop
stc
sbb
inc
jae
mov
dec
aaa
rcrb
dec
adc
sbb
mov
inc
cmp
sub
mov
xchg
xchg
xchg
leave
or
cmp
cmpsl
insl
inc
iret
call
sbb
lea
inc
jne
testb
mov
pop
popf
push
fcmovne
xchg
mov
pop
in
push
das
add
call
cltd
adc
mov
scas
mov
dec
ja
dec
push
push
into
or
roll
popf
fsubs
dec
jns
mov
faddp
lods
mov
pop
xchg
lea
lods
add
jmp
mov
mov
outsb
xchg
insl
sbb
and
pop
cmp
outsb
sti
ja
sar
push
mov
push
dec
mov
loop
scas
inc
jne
sub
lock
push
imul
mov
scas
ja
dec
xor
jae
xor
add
loop
icebp
into
movsb
or
test
xor
mov
repz
das
loop
das
or
aad
xlat
mov
loope
les
rorb
nop
jns
cwtl
adc
push
sbbb
jbe
aad
repnz
dec
cs
mov
mov
mov
sbb
cltd
sbb
mov
arpl
dec
xchg
js
sub
into
sub
and
pop
inc
pop
pop
stc
xchg
pusha
mov
mov
cmpsl
aam
cmp
stos
mov
inc
inc
or
ret
repz
push
outsb
push
mov
sub
in
int
dec
test
insb
pop
push
adc
sub
sti
adc
shl
shl
insb
in
stc
xchg
mov
sub
lods
outsb
je
movsb
ds
jae
xchg
mov
pop
cmc
std
stos
out
test
or
push
out
add
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
inc
fwait
mov
mov
add
inc
ret
mov
inc
mov
icebp
stc
dec
jae
sub
icebp
cmc
fs
into
push
jno
in
negl
lcall
push
ret
xchg
repz
into
push
push
pop
inc
mov
cmp
add
jbe
mov
jecxz
cmp
mov
mov
xchg
jmp
clc
cmp
cli
xchg
mov
mov
mov
mov
ljmp
rcrl
sbb
sbb
hlt
dec
leave
xor
jae
jae
loop
ja
xor
mov
fnstenv
push
mov
adc
fists
jo
insl
fs
push
mov
pop
movaps
into
mov
dec
mov
dec
mov
mov
mov
xor
sub
out
jge
insb
sub
sub
mov
pop
mov
cmp
push
xlat
inc
cmc
outsl
push
cmp
mov
sbb
popf
bound
dec
repz
pusha
fnstcw
mov
pop
pusha
shr
sbb
add
fisttps
std
jmp
shl
jb
idiv
adc
in
in
jp
push
inc
push
dec
aas
lret
insb
jge
cs
setg
adc
loope
jnp
cs
pop
andl
shrb
js
lock
jae
pushf
leave
jmp
xchg
fcmovne
js
lds
cld
sub
jg
decl
stos
xor
jo
xor
xor
jnp
lcall
rcr
lock
xchg
cmp
inc
mov
repz
inc
push
mov
jmp
pop
push
sbbb
arpl
cwtl
add
leave
inc
push
xchg
test
test
repnz
mov
scas
pushf
rcrb
push
shlb
js
mov
sub
aaa
test
jb
push
xchg
dec
dec
decb
mov
cmpsb
xchg
pop
mov
jae
fnstcw
push
in
mov
adc
cltd
and
stc
daa
repz
fimull
call
loop
sub
sahf
icebp
popa
or
jg
sbbl
add
lds
add
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
mov
sarb
outsl
cmpsl
xchg
inc
arpl
mov
lds
adc
pop
push
push
adc
inc
jmp
inc
movsb
jbe
out
cmp
sbb
dec
jae
xchg
mov
rcrl
sub
or
push
push
push
adc
jecxz
pop
jae
int
loop
mov
test
push
mov
out
xchg
pop
or
loopne
push
xor
mov
inc
lods
xchg
aam
push
push
mov
pop
inc
xor
add
add
je
je,pt
pop
loopne
test
in
and
js
lock
cwtl
int3
sub
mov
fsubr
xor
mov
cli
les
lea
mov
ficoms
sub
call
sub
cli
sub
out
jne
add
addr16
das
sub
sbb
xchg
stos
hlt
sub
rcl
shr
jne
push
sbb
aaa
fdivl
mov
out
and
add
adc
mov
mov
cmp
stos
mov
pop
outsb
jecxz
xor
leave
jae
bswap
ljmp
mov
or
fistpll
aaa
lcall
pop
fisubrs
jb
mov
or
iret
push
fwait
jbe
in
bound
pop
xchg
cmp
hlt
mov
sbb
stos
stc
rcll
fs
imul
test
ret
outsl
jns
sub
mov
mov
cwtl
adc
sbb
popa
stc
int
jnp
icebp
orb
push
pop
aam
xor
xchg
popf
loope
sub
jne
push
test
cld
enter
mov
xchg
mov
push
fldt
insb
push
hlt
xor
add
enter
mov
inc
mov
ficompl
test
jecxz
or
jnp
fstpl
cmpsl
lods
std
jns
cmp
cmpsb
movsl
pop
in
lods
ljmp
mov
fstpt
and
stos
mov
sub
xor
add
xchg
jmp
add
loope
iret
jae
dec
and
aad
out
jae
popf
loop
cmp
xchg
jbe
popa
stos
cmp
and
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
mov
sti
faddp
mov
daa
cmp
aas
mov
out
jg
sub
enter
inc
inc
dec
ret
adc
out
sbb
stos
push
dec
pop
outsl
jno
pop
jle
clc
dec
push
mov
dec
stc
push
sahf
mov
pop
xor
fbld
pop
stc
fwait
scas
sub
cmp
je
sub
stc
or
mov
dec
repz
data16
cltd
inc
jge
leave
pushf
js
pop
xchg
popf
into
into
adc
iret
jmp
jae
jbe
sub
repz
sahf
aad
movsb
ljmp
pop
add
dec
lea
jns
incl
sarl
jb
loope
out
pop
add
clc
mov
cs
lds
lods
mov
and
cmpsb
fmull
bswap
mov
ja
ljmp
out
test
into
cmpb
pop
arpl
add
push
jo
loop
mov
push
in
cli
sbb
fisubrl
xchg
push
cld
sbb
mov
loop
adc
repnz
cmc
xchg
or
sbb
inc
sub
addb
ljmp
fildl
pop
xchg
arpl
push
imul
cli
or
loope
inc
add
mov
jmp
insl
xor
mov
hlt
mov
outsl
jg
ds
xchg
xchg
aad
ds
add
mulb
pop
addr16
mov
fsubs
pop
fstl
sub
insl
inc
xchg
mov
inc
pushf
cmpsb
je
mov
ss
std
shlb
lahf
mov
flds
daa
ror
jp
cmp
test
cwtl
mov
cmpsl
push
jecxz
into
fnsave
and
xor
int3
sbb
pop
jl
xchg
ret
sti
dec
pop
add
into
dec
add
adc
ss
rcrl
cmp
stos
push
sbb
adc
sbb
aaa
push
xchg
cmpl
shll
push
push
dec
mov
dec
cmp
or
xchg
rcrl
cmp
mov
out
or
aam
mov
ljmp
push
or
adc
cmpsb
sub
cmpsb
stos
inc
hlt
insl
lock
pop
mov
adcl
jmp
and
fstl
jb
sahf
nop
iret
sbb
sarb
ja
fildl
xchg
je
ret
push
mov
aad
rolb
pop
push
dec
adc
pop
xor
jecxz
mov
int
leave
shll
push
dec
fsts
mov
dec
out
iret
dec
out
or
lcall
hlt
dec
xor
jbe
mov
int
dec
sbb
lods
mov
push
or
and
pop
sub
push
int3
nop
imul
mov
stos
dec
sub
xchg
xor
sbb
incl
adc
jne
dec
mov
fiadds
mov
cld
cmpsb
idivb
popa
fiadds
add
dec
jge
jae
sahf
push
sub
insb
test
cwtl
inc
jno
psrlw
enter
jb
aas
ret
test
out
call
mov
or
lcall
lret
cwtl
cmp
push
pop
xchg
sbb
pop
pop
int
mov
jae
mov
and
imul
insb
jno
stos
xlat
js
popf
rcll
shl
jl
xchg
mov
xor
sbb
sti
sbb
incl
mov
fldl
cli
test
sbb
xor
xchg
sahf
lret
add
pushf
lret
inc
sbb
sbb
pop
ds
ljmp
jmp
imul
push
jge
pop
mov
push
xchg
mov
lea
or
je
mov
mov
out
or
dec
cs
mov
inc
sti
rolb
mov
test
pop
and
call
mov
mov
and
dec
shr
add
sub
gs
shrb
sbbl
pop
adc
out
mov
lds
notb
lret
mov
pusha
sahf
mov
aad
push
xor
sti
xchg
jbe
cmpsl
mov
dec
mov
dec
push
ja
aas
fwait
add
test
push
test
push
xchg
cmp
cmp
je
sbb
add
aam
add
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
frstpm(287
jecxz
out
mov
xor
outsl
cltd
in
mov
mov
fldl
les
mov
sbb
into
adc
mov
shlb
xchg
lds
xchg
dec
jle
lret
cmp
fcoms
in
outsl
lret
dec
das
push
outsb
inc
fcmovbe
loopne
push
mov
adc
mov
xchg
imul
pusha
add
xchg
pop
std
xor
sub
add
xor
jge
jnp
lea
pop
adc
xor
and
nop
jle
mov
and
loope
jnp
cmp
mov
and
inc
mov
mov
mov
pop
sub
aaa
pop
call
jne
test
add
or
movsl
push
push
into
inc
pushf
repnz
dec
int
dec
loop
push
jne
pusha
sub
cs
adcb
enter
cmp
cmp
cld
mov
lods
dec
pop
push
and
lret
push
out
mov
pusha
xchg
popa
sub
in
out
outsl
cli
es
inc
dec
xor
cs
xor
jne
mov
or
in
lcall
test
test
inc
push
adc
fiaddl
ds
push
mov
out
jno
inc
mov
mov
fistpll
popa
in
outsl
int3
fcmovbe
mov
or
push
jne
sbb
cltd
pop
xlat
stos
xchg
mov
and
cli
mov
es
mov
inc
rcrl
dec
push
ljmp
shr
jg
xor
shll
pusha
icebp
add
adc
cmpsb
cmpsl
sbb
cmp
mov
enter
int
rolb
xchg
sbb
push
es
inc
lret
ret
repz
mov
jmp
adc
gs
push
pop
sbb
mov
push
xlat
xchg
and
out
pop
xchg
call
sub
jno
xor
cs
repnz
or
adcb
push
or
arpl
and
call
or
inc
mov
mov
fidivl
mov
faddp
adc
add
out
mov
sub
js
sbb
xor
in
dec
lea
cmpl
movl
movl
movl
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
ror
movsb
fs
adc
mov
jns
xlat
gs
xchg
dec
inc
shl
and
mov
add
arpl
stos
lods
xor
je
xchg
xor
gs
fcomp
sbb
add
pusha
jmp
mulb
xor
cmp
mov
xor
sbb
cld
iret
cwtl
cmp
fimull
daa
setg
mov
int
inc
jnp
das
cmp
cmpsb
in
inc
lret
push
mov
les
jbe
pusha
lcall
ss
sbb
xor
sbb
dec
pop
jns
sahf
cmp
negl
hlt
movsb
mov
test
repnz
and
clc
push
cmp
cs
in
mov
andl
add
movsl
je
mov
sub
xlat
push
mov
aad
movsl
out
hlt
rolb
dec
add
mov
aaa
pusha
mov
repnz
lret
ret
mov
out
mov
fistpll
xor
xchg
mov
shl
sub
bound
jp
jmp
stos
jmp
dec
pop
add
cmc
xchg
hlt
and
test
xchg
adc
push
aas
push
fnstenv
faddl
xchg
outsb
push
dec
jbe
insb
jle
rol
push
rol
psubb
mov
inc
std
daa
mov
inc
ljmp
mov
xchg
lret
sbb
dec
and
adcb
fcompl
sbb
add
addr16
adc
popa
js
je
push
test
pushf
nop
inc
scas
cmp
mov
mov
pushw
xor
lods
adc
and
push
js
into
dec
gs
push
push
inc
popf
mov
and
cmp
lcall
sti
loopw
add
jl
repnz
and
jmp
adc
pusha
add
lods
dec
xchg
mov
sbb
and
call
cli
push
cmp
insl
daa
pop
test
aaa
cmc
scas
inc
jno
push
iret
xor
out
mov
outsb
arpl
xchg
clc
call
rcll
test
repnz
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
fstp
out
sarb
adc
mov
dec
mov
out
lret
fldl2e
stc
aam
lcall
cmp
dec
int3
insl
xchg
pop
lods
test
mov
test
sub
push
stos
lret
mov
dec
xchg
xor
mov
mov
add
mov
add
dec
or
in
imul
rolb
sub
mov
sub
mov
push
aam
in
add
insl
inc
imul
aam
sti
add
adc
clc
adc
ja
xor
lock
jmp
dec
es
mov
pop
hlt
loopne
sub
lcall
adc
push
mov
fs
call
cmp
dec
or
movsb
cwtl
pop
pop
test
out
ds
sbb
xor
test
cmc
shlb
stos
cwtl
mov
xor
lret
or
loop
xchg
pop
and
std
in
out
mov
jne
rep
setg
pop
add
rol
mov
sbb
jbe
adc
sbb
stos
sbbb
jge
jns
dec
je
push
lock
hlt
repnz
xor
mov
pop
sbb
int3
add
jge
daa
mov
rorl
or
mov
xchg
push
es
in
push
fiadds
mov
inc
or
or
pop
or
inc
test
sub
dec
jecxz
xor
add
ret
iret
xchg
popf
inc
pop
ficompl
jns
add
fcom
sar
dec
outsb
push
cli
ja
push
inc
jae
and
xchg
call
out
lcall
fs
or
jo
pop
into
jp
xchg
test
fstpt
xchg
pop
cmp
and
xor
ret
xchg
mov
test
xor
sub
int3
fldenv
fwait
btc
std
mov
fstps
out
or
jle
mov
mov
loopne
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
xchg
push
repz
push
loope
add
in
xor
sbb
inc
cmp
push
push
xchg
rorl
sbb
xor
pop
inc
and
js
test
dec
jne
roll
imul
push
mov
aas
jmp
push
in
daa
push
mov
test
pop
inc
outsl
fstl
int
push
cmp
fimull
movsb
out
imul
out
inc
pop
adc
sbb
add
stos
xor
test
adc
aam
enter
pop
add
pop
dec
test
je
lahf
dec
aam
stc
int3
jmp
cwtl
stos
negl
fwait
cmp
aaa
push
cltd
add
in
daa
mov
hlt
out
ljmp
outsb
out
lret
dec
xlat
push
xchg
fiadds
or
lret
jo
mov
arpl
push
rcr
mov
push
xor
fmull
push
adc
fnstcw
and
call
xor
adc
rcrl
adc
sarl
cltd
ret
push
ljmp
mov
or
jb
call
mulb
test
xor
cmp
inc
cld
jmp
pusha
adcb
outsl
xchg
sbbb
mov
jp
dec
inc
cmp
adc
mov
cmp
loope
or
jecxz
aam
ret
movsb
and
stc
lret
lods
and
popf
pusha
pop
adc
insb
pop
sbb
xchg
in
jb
or
dec
and
push
loope
sub
mov
adc
arpl
mov
mov
std
mov
pop
mov
xor
push
dec
call
mov
mov
js
cwtl
push
push
int
adc
jo
sub
sbb
ds
test
fwait
rcll
jbe
das
out
fbstp
es
dec
sub
inc
insb
mov
inc
cmc
mov
bound
fdiv
ss
sahf
or
icebp
adc
popf
jno
insl
frstor
test
pusha
leave
mov
stos
xor
xor
sarb
jne
fiadds
inc
xchg
or
orl
add
xchg
xor
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
sti
rcrb
test
mov
push
xor
or
cmp
int3
push
lea
xor
pop
dec
and
adc
mov
lahf
push
sarb
mov
sub
loop
pop
out
jbe
push
jb
movsb
popf
ret
test
mov
push
jp
cmp
adc
mov
or
and
push
and
loop
cmovle
add
jecxz
cmp
popf
inc
mov
push
push
xlat
push
das
lods
cmpsl
dec
insb
insl
pop
push
stc
sarb
jbe,pt
aas
lcall
dec
lret
inc
mov
push
decb
cmp
or
jnp
adc
out
pop
cmpsb
cmpl
mov
aaa
jns
aad
pop
xor
imul
adc
imul
mov
das
popa
pop
sub
jno
bound
cmp
ret
decb
imul
adc
leave
out
inc
jb
push
sbb
fwait
xor
jmp
mov
inc
jmp
cmpsb
xor
push
adc
movsl
hlt
rcl
and
cmp
addl
push
mov
pop
fcmovnbe
jae
aad
cmp
aad
xor
int3
lods
pop
je
dec
jns
fdivrl
and
loopne
repnz
push
aas
or
and
test
mov
mov
cmp
and
bound
xor
dec
rcll
lock
cmpsb
jle
and
adc
pop
mov
xlat
or
sub
je
or
pop
cli
xchg
fsubrs
sbb
jb
add
cmp
push
lret
leave
adc
stos
or
xchg
push
push
dec
aam
jecxz
test
lods
push
adc
pop
sub
ljmp
and
add
in
pop
rcll
es
mov
jl
fldcw
test
sub
or
xchg
out
iret
out
xlat
shl
loopne
addb
lods
iret
jge
mov
pop
arpl
sub
cmp
or
mov
leave
test
aad
ret
out
and
negb
in
pop
in
push
mov
mov
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
iret
inc
sti
sarb
push
in
adc
xlat
enter
pop
pusha
xchg
cmp
jmp
push
pusha
inc
xlat
xchg
dec
and
insl
pushf
lahf
add
jnp
pop
in
sub
imul
imul
xor
pusha
mov
cmp
ret
xor
in
lods
jae
icebp
xor
mov
test
mov
sub
or
cmp
or
out
jbe
jmp
push
ret
or
out
adc
mov
inc
iret
sti
and
inc
xchg
fcomp
insb
into
fs
push
fs
adc
insb
dec
mov
repz
mov
lds
jmp
sub
mov
mov
popf
icebp
pop
rolb
test
xchg
jno
mov
pop
repz
cld
xchg
fisubl
xchg
pop
outsl
cmpsl
xchg
add
sbb
pop
cmp
dec
popf
mov
cmp
out
inc
push
test
pcmpgtd
out
lahf
out
mov
adc
sbb
adc
mov
jl
sbb
push
mov
xchg
sub
insb
jmp
stos
pop
jmp
fstpl
dec
sbb
insb
pop
xchg
cltd
in
add
xchg
push
adc
imul
jge
jo
sub
imul
scas
cld
jle
pop
and
pop
sti
cwtl
das
sbb
ja
lret
fs
sub
inc
mov
daa
jno
sub
sub
dec
movb
mov
es
xchg
divl
ja
xchg
inc
outsl
mov
xchg
jno
inc
or
imul
dec
mov
mov
bound
mov
repnz
sahf
cmc
push
cmp
test
sub
cli
xchg
aas
je
xor
jge
dec
gs
jle
jle
push
add
mov
aaa
out
xchg
sub
jnp
push
push
ljmp
mov
cld
jmp
mov
jbe
push
mov
insl
sbbl
sbb
and
add
add
enter
add
add
fimull
test
sbb
add
push
and
xor
shld
jmp
lret
repnz
xchg
xor
or
xor
mov
mov
sahf
inc
imul
inc
call
pop
push
mov
hlt
iret
inc
push
xor
outsl
adc
inc
jmp
jns
dec
or
mov
popf
push
mov
jae
mov
xchg
cltd
out
filds
add
push
js
add
loopne
jno
cmp
inc
icebp
sub
insl
push
dec
sbb
and
cmpsb
inc
bound
repnz
shl
inc
scas
sub
or
xchg
push
pop
sbb
and
mov
lret
pop
pushf
push
pop
lahf
shlb
adc
movsl
pop
pushw
insl
clc
dec
call
out
push
xchg
lods
jmp
add
push
add
jge
cmp
lods
cmc
xor
rcrb
mov
enter
repnz
std
fnstenv
mov
sqrtps
add
pushw
insb
jl
push
repnz
mov
lods
popa
cli
inc
hlt
sbb
add
insl
mov
dec
es
aaa
lahf
fistpl
cmp
and
filds
pop
stc
and
in
sub
iret
sbbb
inc
idiv
push
xor
xor
mov
les
into
inc
movsb
jg
jmp
cmp
sbb
mov
inc
mov
testb
addr16
and
fdivl
decl
inc
mov
incb
mov
int3
xchg
ljmp
push
imul
mov
xchg
das
shrb
mov
test
jnp
mov
dec
incb
fcomip
pop
xor
jno
repnz
or
dec
and
notl
leave
or
daa
cmp
add
mov
insl
popf
push
mov
pop
in
sub
adc
pop
mov
shlb
or
cmp
bound
cmc
add
and
sub
cmpb
lock
dec
xchg
scas
nop
inc
lahf
ljmp
icebp
mov
fnsave
in
jns
mov
jnp
pop
xchg
aas
push
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
mov
sarb
xchg
mov
les
xchg
push
mov
mov
stos
xor
ja
std
mov
loopne
add
flds
and
pusha
out
jl
xchg
inc
add
xor
shll
xchg
or
into
lods
mov
lahf
mov
aad
jmp
or
mov
mov
and
mov
aam
arpl
push
cmp
pop
pop
mov
es
jno
cwtl
dec
xor
cwtl
js
or
mov
push
xor
cwtl
sub
popa
sub
loopne
inc
int3
shl
cmp
loope
jbe
cmp
jne
lods
shrl
fisttpll
clc
xlat
fcompl
mov
stos
dec
sub
inc
aas
adc
mov
pop
and
dec
je
add
pop
sahf
fxch
mov
xor
jmp
movsl
mov
leave
cmp
ret
enter
test
pop
sbb
pop
mov
std
or
fcmovnu
in
pop
adc
cmpsl
inc
in
ja
dec
jae
mov
sbb
int3
mov
push
std
leave
clc
pop
dec
scas
js
hlt
stos
in
dec
loope
rcrl
mov
adc
jge
mov
mov
lcall
inc
push
or
arpl
inc
inc
xchg
pushw
sbb
es
ret
popa
dec
ja
test
pop
arpl
cmp
add
cmpb
cld
jae
add
push
gs
aas
sbb
test
or
mov
add
jmp
popa
jno
pop
iret
enter
inc
out
jg
push
aas
sub
dec
pop
gs
fistps
mov
sarb
sub
and
out
subb
mov
mov
push
adc
mov
popf
xor
hlt
movsb
sbb
aam
pop
add
lcall
sbb
cmp
sub
sub
mov
or
push
loop
cmp
mov
shll
add
mov
lret
and
add
lret
push
and
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
and
cmp
xor
enter
mov
add
sub
jnp
add
outsl
add
mov
add
in
shlb
out
inc
les
outsl
xor
add
lret
pop
sbb
mov
daa
in
jge
add
push
inc
cmc
out
jl
xchg
lahf
aad
inc
pop
xchg
inc
imul
inc
mov
lcall
push
mov
in
std
sub
or
shll
push
jns
xchg
notb
cmpsl
xchg
adcb
pop
cmp
pop
mov
mov
iret
pop
xor
xor
mov
xchg
xor
jg
idivb
mov
cmpsl
adcl
jmp
ret
lock
jl
xchg
mov
jo
lods
mov
bound
inc
dec
jmp
subl
mov
or
loop
aas
xchg
sub
in
das
aaa
scas
and
push
mov
cmp
jb
jnp
adc
mov
mov
sub
dec
sbb
jl
xchg
xchg
dec
pop
inc
xor
ret
or
inc
push
ret
ss
flds
mov
lods
out
test
cmp
lods
adc
add
jnp
iret
out
xor
mov
or
icebp
test
ljmp
mov
adc
rcrb
fs
ds
or
and
mov
or
test
loopne
ret
mov
hlt
leave
mov
lret
rcrb
sub
movsb
push
cmp
inc
test
test
out
jae
or
fwait
pop
sub
ss
sub
cwtl
pusha
out
mov
push
iret
aam
mov
aad
lock
xlat
mov
or
or
xchg
add
push
sub
dec
lock
jecxz
je
es
mov
adc
cmpsb
ficompl
lret
test
stc
mov
jge
cmpsl
add
cwtl
mov
fxch
xchg
bound
into
shl
add
test
sub
xchg
mov
mov
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
or
or
mov
mov
jl
push
xor
jp
popf
mov
push
out
imul
sub
or
lds
mov
mov
cmc
repnz
xchg
cmp
arpl
mov
mov
aas
inc
ljmp
jno
subb
inc
in
sti
sbb
sub
mov
and
in
xchg
adc
popf
test
lods
push
fstpt
jae
int
mov
out
or
bound
enter
inc
popl
je
xchg
push
cmc
jae
mov
mov
cpuid
xchg
mov
std
pop
ret
ljmp
lods
pop
mov
sbb
int3
sbb
jbe
into
stos
pop
lretw
imul
xchg
fisubrl
pop
dec
adcb
je
jb
mov
and
xchg
push
pop
repnz
cmp
pusha
daa
cmp
ret
insl
int3
cmp
enter
rorb
xor
lods
dec
loopne
xlat
push
pop
mov
pop
stos
pop
aaa
or
lods
mov
cld
ds
jecxz
rclb
mov
cmpl
clc
pop
daa
hlt
sub
ficoms
pop
jmp
push
movl
xchg
inc
scas
lcall
jbe
inc
mull
dec
fisubs
test
xchg
int3
inc
sbb
pop
repnz
and
push
add
jle
add
push
or
inc
lret
mov
jge
jne
lret
adc
lret
jecxz
cld
push
test
cli
fstp
inc
fwait
in
fs
add
inc
mov
dec
in
pushf
aaa
mov
cmp
xchg
xor
stos
movsl
inc
rolb
jl
rcrl
dec
scas
js
scas
cmp
pop
dec
xchg
push
mov
jae
andl
and
sti
movsl
pop
loopne
and
ss
ljmp
fadds
out
ja
or
mov
stos
push
stos
int3
das
pop
call
dec
mov
fs
xchg
push
pop
iret
pop
test
iret
push
aad
scas
mov
or
sbb
and
jne
fistpll
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
inc
lds
pushf
adc
mov
adc
pop
in
leave
ja
sbb
xchg
and
out
mov
cld
add
rolb
xor
inc
pop
popf
mov
dec
std
movsl
cltd
xor
add
mov
add
addl
into
fisttpll
dec
aam
cli
cmp
flds
fcompl
pop
jmp
lcall
xor
pop
ljmp
mov
and
sub
mov
mov
xchg
xor
xor
cmp
mov
fsts
sti
jno
mov
xchg
daa
or
rorl
fldenv
mov
std
add
xchg
ficomps
push
add
pop
jg
call
and
mov
jne
and
jne
cmc
push
outsl
stos
and
and
mov
cmp
fnstcw
adc
mov
jno
cs
loopne
repnz
lds
xor
divl
push
sub
xlat
push
fwait
cmp
mov
cmpsl
out
in
dec
dec
push
push
jns
ret
fs
lods
cmp
mov
add
mov
mov
mov
ret
je
jbe
out
lcall
adc
xor
adc
jl
and
jne
in
aaa
sbb
add
lock
and
test
inc
iret
lcall
sahf
jne
outsb
aad
int3
add
cmc
arpl
pop
push
pop
lods
push
xorl
inc
mov
cmp
repz
cmp
andb
push
push
push
mov
gs
xor
push
aad
inc
sub
jecxz
jae
xor
push
popl
lret
test
push
clc
mov
jle
adc
jno
or
dec
push
mov
div
pop
out
jnp
cmp
cs
lret
arpl
pop
imul
or
test
cld
test
sub
out
dec
cli
mov
adc
jns
repnz
insb
mov
pop
mov
xchg
jmp
and
xchg
arpl
pop
xor
jp
lret
jg
dec
movsl
push
in
and
push
add
jnp
pushf
int
xor
or
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
fnstsw
scas
iret
adc
sarb
dec
xchg
push
cmc
pop
lahf
sbb
mov
stos
push
inc
or
add
inc
mov
pop
sub
adc
pop
xor
call
imul
aad
or
imul
xlat
push
sbb
bound
xchg
jmp
sub
push
ret
mulb
inc
orl
mov
lods
dec
imul
push
insb
dec
dec
pusha
outsl
add
add
ss
xor
xchg
mov
xor
dec
mov
mov
mov
test
or
mov
mov
mov
rcrl
outsb
fldenv
imul
mov
loope
mov
cmp
jbe
and
cs
adc
mov
movsl
fidivrl
jns
xchg
fisttps
and
push
cli
mov
pop
jnp
inc
ljmp
adc
hlt
jecxz
mov
push
dec
cs
movl
shrb
add
in
sub
mov
inc
jno
into
bound
movsl
js
loop
enter
sbbb
adc
mov
mov
push
cmp
fnstcw
ljmp
aaa
out
jbe
push
les
ffree
sahf
pop
cs
xchg
movsb
insb
lock
pop
aad
mov
leave
xchg
test
or
xchg
pop
call
mov
pop
push
adc
jecxz
les
mov
xor
push
push
mov
sub
sub
xor
push
cmpsb
dec
jne
stos
sub
xchg
fdivrl
jb
adc
call
lahf
push
icebp
cmc
or
jecxz
mov
rolb
jns
jae
jl
ret
and
scas
inc
in
adc
mov
mov
cmp
lock
dec
test
adc
add
push
xchg
mov
clc
shlb
loop
xchg
add
fnstcw
sub
mov
push
stos
ds
inc
jl
and
mov
lock
cs
push
push
mov
rcl
test
and
out
into
lock
and
xor
shrd
xor
mov
shr
mov
xor
jmp
scas
xchg
mov
mov
pop
sar
dec
repnz
mov
sarb
mov
lods
mull
arpl
inc
jmp
cmp
hlt
sbb
mov
inc
mov
stos
and
push
sub
addr16
imul
adc
mov
nop
mov
jnp
xchg
aaa
cltd
adc
adc
push
jle
adc
imul
mov
shll
mov
sbb
jecxz
adc
sub
sub
mov
insl
pusha
mov
hlt
sbb
xor
scas
xor
ds
std
lods
and
pop
ljmp
and
arpl
add
fiaddl
in
sarl
pop
sbb
push
aaa
out
lock
pop
stos
jmp
or
mov
cwtl
outsl
ja
inc
rcrl
xchg
shll
repz
and
ror
js
sub
lea
push
mov
adc
imul
ljmp
outsb
xchg
nop
mov
outsl
addr16
jp
inc
sbb
leave
pop
or
lds
in
push
addl
xlat
jbe
ja
fstps
mov
idiv
inc
adc
pop
cmp
out
loope
dec
sub
cltd
or
sbb
cmp
or
loop
jl
sbb
cli
test
incl
aam
mov
sub
decl
sub
sbb
das
repz
dec
inc
cmp
cwtl
and
or
cmp
hlt
dec
clc
js
add
stos
int
dec
and
fs
je
cmp
push
shlb
sub
loope
sub
mov
xchg
lcall
out
adc
rorl
pop
dec
xor
push
fadd
iret
fisubrs
mov
pop
mov
gs
mov
adc
mov
test
popf
fcmovne
lret
sar
out
cmpsb
xor
mov
lret
jae
push
add
outsl
popf
and
mov
jo
xlat
adcb
xchg
cmpsb
imul
data16
sti
popf
data16
or
xor
mov
or
rcll
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
mov
pop
sarb
rcr
push
push
pop
je
dec
scas
popa
movsl
mov
es
and
push
cmc
mov
cmp
mov
inc
jmp
les
push
jne
imul
mov
cmpsl
cltd
jo
test
mov
hlt
or
mov
xor
stos
jns
int
imul
and
or
sahf
ds
mov
sub
mov
mov
test
push
xchg
cli
xchg
into
dec
lea
insb
cli
inc
inc
xchg
and
stc
jb
stos
aas
mov
jo
repz
push
or
and
xlat
mov
xchg
pop
shr
mov
fwait
adc
daa
sti
xchg
cmp
sub
xchg
push
subl
cmp
mov
sbbb
inc
mov
sbb
insb
lds
gs
rclb
je
pop
sbb
lock
js
xchg
sahf
cld
xlat
ret
add
inc
cltd
test
mov
inc
loopne
adc
addr16
jl
sub
mov
fsubr
mov
push
jg
add
movsb
out
xchg
stc
fiaddl
in
les
cmp
mov
and
add
call
insl
xor
or
add
insb
mov
test
fs
push
xchg
adc
jge
pop
xor
and
and
addb
ljmp
xor
mov
mov
shll
cld
push
scas
jg
and
movsl
mov
fwait
xlat
jns
sahf
ds
cmpsl
push
imul
push
sarl
cltd
xchg
cmc
xchg
stos
fcomps
dec
in
loopne
sbb
fs
scas
aas
out
inc
scas
jmp
fdivrl
pop
or
clc
das
xchg
push
popa
sub
mov
inc
andb
es
and
pop
dec
sub
xchg
cmp
rolb
dec
xchg
je
jg
sub
repnz
mov
pop
mov
jmp
movsb
cmp
sbb
jne
sub
mov
pop
popa
adc
pushf
out
dec
shrb
shr
inc
mov
lods
roll
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
mov
and
mov
adc
faddl
insb
stc
jb
jae
stos
fs
ror
jp
add
aaa
push
cmp
dec
and
test
pop
push
push
nop
dec
jmp
jmp
lock
shufps
jns
ljmp
test
push
mov
pop
mov
gs
mov
cmp
pusha
push
push
pop
cld
inc
mov
leave
inc
cmp
sbbb
jmp
dec
fmull
in
test
or
shlb
fidivs
jmp
in
cmp
cmpsl
jae
outsl
sub
faddp
ret
xor
ds
mov
push
xor
xorb
cmc
aas
mov
repz
imul
mov
out
pop
ret
jg
out
xor
mov
mulb
xchg
cmpsl
and
jg
outsl
mov
add
and
cmc
fldcw
jb
psubw
jb
cli
hlt
lock
sbb
repz
cs
mov
mov
call
and
test
aaa
clc
into
xlat
xlat
call
out
pusha
cmpsb
cltd
notb
and
flds
mov
std
mov
sub
push
lahf
or
mov
dec
jmp
add
mov
testl
cwtl
popa
and
inc
push
xor
and
sub
aad
das
mov
lret
fs
xor
data16
or
sbb
cmp
inc
xor
inc
data16
and
test
xchg
add
mov
xlat
hlt
movb
cmp
and
dec
mov
pop
outsb
xor
andl
ja
pop
dec
mov
mov
cs
xor
lods
inc
xchg
jne
jne
les
sub
or
cmp
lahf
lcall
je
mov
cmp
push
out
in
inc
pop
arpl
adc
jmp
aas
in
xchg
or
push
enter
mov
mov
ja
inc
mov
xor
lahf
pop
negb
xlat
mov
out
cs
in
jmp
inc
and
insl
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
fdivs
repz
mov
adc
inc
out
add
pop
lods
xor
dec
inc
xor
mov
mov
jno
mov
or
shll
dec
lcall
xchg
lods
imul
push
sbb
mov
mov
inc
mov
push
sbb
add
xchg
cmp
pop
xor
pop
adc
jp
ret
xor
test
dec
and
out
mov
pop
inc
mov
std
iret
sti
int
xor
jb
test
mov
mov
and
lret
xor
dec
pop
lea
xor
aam
test
pop
mov
repnz
je
mov
dec
enter
jge
xchg
or
ret
fs
xor
mov
mov
andb
cmp
mov
fwait
mov
inc
xchg
lds
jle
loope
cmpsl
mov
mov
push
mov
or
fxch
adc
das
mov
rcr
je
lahf
lahf
dec
xlat
cmp
add
addr16
ds
xchg
push
daa
push
xchg
or
imul
mov
push
aam
sub
push
sarb
lods
sar
xchg
les
add
lahf
sbb
test
pop
cmp
and
pop
out
je
dec
inc
pop
aas
pop
aam
inc
jl
lds
cmp
std
int3
inc
xchg
ss
sahf
dec
xchg
outsl
push
pop
pop
jp
jns
sti
fldenv
call
push
popa
repz
inc
lods
push
sahf
pop
divb
sub
mov
xchg
rolb
fstpl
xor
jae
ss
mov
push
sbb
nop
jno
movsb
mov
cltd
movsb
popa
pop
xor
mov
mov
addr16
int
stc
daa
mov
xlat
subb
dec
cmp
testb
jg
push
neg
xchg
repz
and
xchg
push
cmpsl
inc
mov
out
pop
dec
ss
fmull
jne
fists
pop
xchg
jb
in
add
xor
cmc
dec
mov
inc
ret
add
and
jmp
xor
frstor
test
jmp
mov
ret
mov
pop
cs
and
fnstenv
movsb
insl
xor
jmp
mov
stc
iret
xchg
flds
jo
jnp
movsl
fwait
lcall
jmp
shl
out
pop
inc
xchg
adc
fs
jns
bound
push
loope
loopne
rolb
mov
xor
cmp
sub
push
cltd
pop
mov
bound
in
fistps
adc
nop
xchg
leave
dec
or
scas
popa
mov
bnd
and
pop
movsl
and
jnp
das
popa
push
adc
icebp
and
mov
cs
dec
push
aas
insb
push
fistpl
jge
push
sbb
inc
adc
and
insl
lods
sahf
jmp
mov
sbb
xor
cli
sub
push
sbb
dec
pushl
andl
xchg
es
cwtl
outsl
xchg
aas
cltd
int
sub
push
jg
push
mov
popa
and
jp
sti
fs
in
out
loop
jne
mov
cli
mov
jb
push
adc
roll
ds
lock
pushf
inc
lret
add
ds
and
imul
cs
add
fisubl
cmpsb
pop
pushf
jae
fdivp
inc
pop
fists
sbb
mov
inc
negb
enter
ja
imul
neg
pushf
sahf
xor
or
clc
jle
jbe
sti
aas
dec
aas
sbb
jae
inc
and
mov
enter
pushf
dec
leave
gs
adc
movsl
hlt
jp
jle
pop
mov
out
insb
mov
scas
sbb
outsl
jno
dec
lea
out
mov
or
rcl
mov
jae
cmpsl
push
divl
push
jo
inc
xchg
dec
out
call
mov
ss
push
dec
mov
add
ja
sub
imul
and
cmpb
dec
jo
loopne
stos
ret
popa
inc
popf
jo
dec
enter
inc
or
test
loope
add
and
mov
movl
mov
jmp
sub
ljmp
in
xchg
adc
xor
mov
cmc
inc
fimull
subl
aas
pop
mov
push
jno
imul
mov
adc
mov
push
fs
cmp
pushf
into
in
push
push
pop
repnz
ficoml
and
mov
or
stc
cmpsl
scas
inc
test
xchg
push
sub
jne
add
daa
fdivrs
pop
lret
mov
je
cmpsl
aad
pop
sbb
mov
pushf
imul
push
enter
xorl
mov
push
xlat
jns
jg
call
leave
nop
adc
sbbb
bound
icebp
repnz
inc
xchg
imul
dec
mov
mov
lcall
mov
dec
call
out
call
lds
out
bound
mull
mov
cmp
pop
lods
sti
inc
iret
mov
bound
ret
sarl
add
push
cmpsb
pop
cwtl
push
gs
mov
daa
mov
mov
or
test
and
gs
xchg
dec
pusha
ss
cltd
leave
int3
dec
and
push
cmpsb
test
pop
in
das
jg
cmpl
add
inc
rcll
or
ficomps
or
js
rcrb
mov
imul
mov
add
sub
mov
pop
and
ss
adc
and
push
bound
inc
mov
loopne
jge
jmp
outsl
int3
or
push
pop
icebp
sbb
daa
pusha
push
movsl
fs
sbb
movsb
orb
or
or
push
aaa
cwtl
pop
mov
mov
lea
leave
adc
call
fs
fcoml
and
loope
sbbl
sar
inc
mov
add
cmpsl
cmp
stos
jo
xor
or
push
repz
out
pop
cs
test
loopne
orl
mov
aad
xorb
in
inc
subl
pop
xchg
imul
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
stc
adc
sarb
sbb
cli
inc
and
pop
mov
mov
xchg
mov
jle
dec
xor
cmp
mov
dec
and
cmp
and
mov
out
mov
cmpsl
rol
orb
xchg
push
mov
jp
push
mov
mov
stos
test
je
mov
add
pop
adc
pop
dec
mov
popf
in
fisttps
xchg
rcr
push
test
xchg
sub
daa
jecxz
jl
mov
sar
jecxz
push
jmp
out
sbb
sbb
xor
loopne
xchg
mov
and
xchg
jg
push
scas
gs
stos
push
push
xor
jo
test
pop
cmpsl
sar
mov
dec
and
fisubrl
in
adc
mov
andl
lea
mov
xlat
icebp
or
dec
aad
into
jae
das
jmp
dec
dec
sbb
fs
into
ljmp
cmp
mov
dec
cbtw
sbb
pop
mov
loop
ljmp
mov
mov
pop
xchg
sub
cwtl
and
sbb
inc
sbb
mov
sbb
sbb
test
push
mov
imul
push
rcr
mov
pop
and
ljmp
test
push
cli
int3
enter
cwtl
mov
test
sti
and
arpl
int3
or
shl
pop
jbe
jb,pn
push
dec
and
fs
add
xchg
sub
adc
lods
cltd
jle
jns
fldt
fildl
mov
cwtl
sub
testb
bound
aam
divl
shl
mov
jne
out
lods
inc
pusha
or
jmp
sub
and
rcrl
sbb
cmp
out
lcall
rolb
sub
in
add
push
cmp
iret
sti
fcompl
dec
das
mov
cmp
pop
push
and
add
clc
jno
out
and
pop
jge,pt
fxch
xlat
cmpsl
pop
sub
dec
sub
jno
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
sahf
aam
sarb
cmp
mov
xchg
adc
xchg
repnz
jnp
mov
bound
inc
mov
cmpsl
push
xchg
lods
xor
jge
pop
inc
dec
cmpsl
adc
pop
or
fistpll
add
xor
jae
push
xor
jmp
add
mov
xor
enter
aaa
pop
push
mov
repz
mov
lods
mov
xor
jo
add
mov
mov
jae
cld
dec
lods
int
or
scas
xchg
jg
sbb
test
or
das
xchg
ljmp
mov
subb
cli
pop
call
stc
and
aaa
lcall
mov
out
aas
out
hlt
jg
out
fwait
loopne
push
ds
fcompl
call
sahf
inc
mov
add
or
repz
ret
inc
lods
aas
orb
rclb
xchg
mov
sub
insl
cs
je
push
ja
lock
jne
push
jge
shll
jmp
mov
mov
xchg
jbe
faddp
xchg
out
movsb
inc
adc
add
jb
shlb
arpl
ja
jg
sub
mov
loop
lea
pop
ret
fsubl
mov
bnd
sbb
jae,pn
sarb
jo
into
inc
add
push
call
and
icebp
jl
cmp
fnsave
or
js
ss
jbe
pop
adc
dec
xchg
mov
sbb
mov
add
dec
cmp
mov
mov
scas
nop
push
mov
les
fwait
jecxz
add
les
loopne
adc
xor
ds
push
sbb
or
xchg
inc
xor
daa
loope
popf
push
sbb
cmp
test
lock
out
xor
out
lea
adcl
fidivrs
xor
jbe
adc
jge
push
iret
cmp
jecxz
jl
into
outsl
sbb
push
lea
mov
clc
fsubl
icebp
add
inc
jnp
gs
sbb
cwtl
hlt
outsl
bound
repz
jns
jno
xchg
pop
adc
add
scas
or
test
jecxz
daa
or
addr16
sbb
mov
mov
dec
push
sbb
outsl
mov
fwait
mov
jmp
rolb
hlt
icebp
push
insl
add
mov
pop
cmp
or
movsl
mov
in
mov
sub
mov
loope
dec
int3
bound
add
es
xor
subb
movsb
inc
imul
adc
jmp
or
clc
lea
adc
test
jecxz
xchg
stos
inc
mov
popa
ss
repz
jp
loopne
data16
xorl
pop
shr
xchg
inc
in
pusha
std
add
fnstcw
sub
mov
dec
and
ljmp
push
loope
jne
es
daa
jge
lret
and
push
loopne
inc
enter
int
roll
stos
sbb
push
outsl
cld
and
xchg
loope
vmaxsd
in
in
loop
es
stos
xchg
dec
push
mov
insb
adc
fucomi
and
jmp
mov
dec
xor
mov
out
inc
or
aam
xchg
jge
and
imul
xchg
lcall
fimull
xor
mov
sahf
or
mov
xchg
sbb
fcmovnu
mov
add
nop
add
adc
xor
add
xor
daa
cmp
dec
sahf
xchg
xor
xor
mov
sbb
movl
movl
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
adcb
mov
add
or
data16
stos
cs
or
movsb
mov
mov
add
popa
push
dec
add
dec
loope,pn
test
ljmp
jg
push
mov
or
cmp
arpl
orb
fisubrl
pop
dec
inc
mov
test
lock
popa
xor
cwtl
lret
ret
outsl
out
roll
pop
xchg
shr
insl
cs
push
mov
and
adc
popa
arpl
ficomps
add
loopne
rcl
stos
pop
ret
cltd
mov
pop
aad
aad
pop
jnp
je
sbb
lock
cli
in
jmp
imul
xor
sub
leave
or
pop
push
fistpll
mov
inc
mov
mov
imul
jecxz
lcall
mov
popf
imul
mov
js
cmp
jno
lahf
sbb
repz
and
push
scas
ret
decl
sti
aam
pop
insb
test
lahf
in
into
rcll
fst
pop
adc
cmp
dec
mov
mov
sbb
leave
push
mov
push
mov
cltd
dec
cmp
data16
orl
enter
sbb
jecxz
int
ret
xchg
notl
xor
sahf
mov
push
mov
aam
inc
or
add
mov
mov
xchg
mov
fsub
jne
push
out
jb
outsb
and
in
xchg
push
lea
sub
jne
jno
xchg
lea
jbe
shl
mov
inc
jbe
mov
les
pop
movsl
sbb
dec
repz
xchg
xor
xchg
lea
aam
inc
xchg
cmp
push
adc
frstor
adc
fmull
push
jnp
xor
mov
movsl
lds
sbb
les
mov
add
jge
ret
push
inc
pop
adc
popf
imul
dec
int3
push
adc
outsl
adc
xchg
push
pusha
mov
insb
xchg
ss
pusha
lods
sbb
aaa
push
cmp
shrb
inc
inc
xchg
jns
jmp
arpl
dec
aad
pop
popf
ds
repnz
and
push
and
lcall
test
jne
dec
cmp
in
sub
mov
push
jo
rcrb
stc
mov
std
ret
icebp
cmp
bound
out
xchg
adc
js
je
cli
cmpsb
jno
rolb
add
and
es
xorl
cmp
call
pop
xor
std
jge
xchg
rol
fstpt
cmpsb
cmp
and
jo
push
loope
mov
push
add
lcall
test
push
shrb
push
in
jbe
xlat
cmpsl
popa
inc
adc
jb
lret
test
cld
mov
and
pushf
xchg
out
in
out
pusha
pop
sub
ja
xor
in
jecxz
in
jle
daa
mov
mov
and
stos
and
ss
inc
ljmp
stc
pop
mov
dec
sub
imulb
loope
xchg
mov
ja
jo
int
mov
cmp
push
mov
addr16
jbe
mov
xchg
sub
adc
dec
jne
addr16
jge
adc
xor
push
dec
xchg
scas
sbb
repz
in
xor
outsl
push
push
fiaddl
inc
iret
call
cld
aas
sbb
mov
loope
mov
scas
sbb
xor
mov
jmp
xor
sbb
add
orl
sub
mov
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
jmp
shr
dec
sarb
inc
outsb
fistpl
adc
push
sbb
pop
xchg
mov
sub
mov
stos
and
sub
mov
nop
sub
mov
lea
inc
xchg
jbe
and
test
mov
xchg
sbb
jl
or
jno
xlat
adc
mov
xchg
negb
gs
jmp
lock
incl
iret
mov
aaa
dec
add
sbb
mov
mov
lret
enter
jmp
sti
add
adc
xor
clc
or
add
std
shr
das
push
popfw
cmp
loopne
jmp
test
es
pop
or
mov
jae
or
push
or
test
test
jno
sub
sub
jne
mov
dec
fsubrs
fdivl
dec
xor
out
push
out
addr16
push
pop
sahf
mov
sbb
jle
shlb
jnp
adc
dec
mov
cmp
fldenv
pop
leave
insb
dec
cltd
pop
imulb
mov
mov
into
adc
rcrb
mov
push
inc
sub
add
mov
sarl
xchg
hlt
arpl
sti
sbb
push
xor
pop
in
cs
pop
sahf
or
testb
sbb
shl
sbb
out
jmp
adc
xor
rorl
pop
insl
jne
imul
mov
lds
push
loopne
outsb
das
push
add
and
mov
adc
pop
lds
sbb
xchg
aad
push
loop
fiaddl
or
gs
loop
leave
push
and
xchg
imul
dec
stc
lret
sub
fisubs
sbb
test
in
into
ret
aam
out
mov
out
xchg
sbbb
cs
cmp
cmp
cmpsl
je
insl
cmpsl
outsl
cmp
subb
int
ljmp
inc
jmp
lret
sti
ret
lret
fwait
insb
or
cmc
dec
mov
scas
int3
dec
dec
dec
adc
inc
jp
cmp
flds
push
int3
mov
jle
shrl
dec
dec
cmp
jnp
cmpsb
mov
aad
scas
dec
push
cltd
daa
pop
inc
subl
rol
std
out
cli
xchg
jne
fs
rol
loope
mov
clc
cmp
leave
jmp
and
inc
daa
lret
mulb
loope
cmpxchg8b
push
and
or
jns
fnstsw
sbb
mov
adc
xchg
int3
fwait
dec
test
loop
call
repnz
pop
dec
and
scas
mov
inc
dec
or
in
je
jle
xchg
jno
mov
push
and
inc
mov
stos
in
cld
rolb
jae
push
repz
jmp
cmp
jbe
lea
scas
hlt
mov
dec
jne
sub
inc
lea
adc
pop
push
jle
xchg
inc
pop
mov
stos
and
dec
lods
lock
mov
loopne
sub
push
xor
rol
jg
cld
test
jo
rolb
pop
dec
jb
es
mov
ljmp
pop
les
mov
xchg
mov
lret
mov
jmp
sbb
js
mov
or
xchg
push
mov
adc
in
jecxz
mov
lret
mov
cmp
cmpsb
mov
pop
adc
and
dec
cli
movl
xor
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
jns
ret
mov
repnz
in
fnstenv
loopne
cmp
add
shrb
int3
dec
outsl
scas
mov
lock
sbb
addr16
cmp
mov
rclb
and
mov
cmp
push
jae
inc
mov
sahf
lcall
nop
pop
mov
lods
test
add
add
adc
adc
movsl
cwtl
sbb
xchg
loopne
in
cmp
mov
fucomi
mov
adc
popf
pop
into
dec
stc
imul
cmp
sbb
and
pop
test
insb
in
rcrl
xor
add
inc
mov
jl
ret
fisubs
pop
push
mov
aad
iret
mov
stos
lods
neg
dec
jns
dec
pop
push
in
mov
adc
out
popf
insl
xchg
dec
loopne
push
push
cmc
out
mov
xor
repnz
jae
push
jae
dec
into
mov
pop
xchg
out
sub
push
mov
lret
sub
xlat
sbb
mov
sbb
dec
adc
adc
jb
dec
sub
out
xchg
cmp
call
cmp
aad
cmp
movsl
jae
in
push
cli
pop
lods
fsts
in
fs
mov
nop
pop
je
ds
push
cmp
add
les
pushf
push
pop
cmp
mov
sbb
lock
mov
insb
out
jle
dec
and
jae
aaa
lods
fimuls
mov
inc
daa
xchg
sbb
mov
xor
cld
push
xchg
push
daa
lcall
lcall
enter
lock
mov
sub
sahf
ss
jg
mov
cmp
pop
test
mov
and
cmpsb
daa
lcall
jne
inc
mov
lret
xchg
pop
cltd
cmp
repnz
inc
test
sbb
pusha
add
mov
pop
repz
sub
adc
pusha
mov
ljmp
pop
sbb
icebp
hlt
dec
xchg
or
pop
icebp
int3
or
ja
add
cmp
aaa
hlt
sbb
fsubr
mov
popf
loop
dec
fdivl
push
inc
or
fidivrs
push
ljmp
xchg
add
daa
jp
repnz
adc
mov
mov
cmc
bound
in
lret
int3
xor
in
inc
cld
and
mov
inc
rcr
fimull
pop
pop
shll
mov
jbe
inc
lcall
cmc
js
xor
jo
outsb
lret
jns,pt
add
fwait
data16
aam
ficompl
in
pop
fs
clc
lret
and
mov
sbb
mov
lret
pop
pusha
mov
xchg
stc
cli
sar
xchg
sub
loopne
add
lea
lcall
fidivl
roll
es
sub
mov
shrl
mov
das
in
arpl
jl
out
cmovns
push
mov
mov
cmpsb
push
in
fsubr
push
or
xchg
jns
and
adc
inc
push
mov
lea
xlat
jo
cmp
test
pop
lret
je
inc
add
in
add
pop
xor
rcll
or
xor
std
cmp
or
jl
das
gs
mov
movsb
rcr
mov
mov
cmpsb
pop
mov
popa
dec
sub
mov
pushl
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
jno
adc
dec
les
mov
lods
das
jmp
insb
push
pushf
test
and
or
ficompl
or
sbb
ss
cmp
push
push
push
fcomps
pop
inc
dec
and
inc
hlt
imul
adc
xchg
cs
mov
pushf
and
repnz
test
mov
mov
jmp
popl
loope
pop
sbb
in
xchg
sub
xchg
push
in
es
int3
jb
or
mov
roll
cmp
fsts
pushl
jbe
push
imul
lods
gs
mov
sbb
xchg
rep
incl
outsb
adc
pop
xchg
shlb
xchg
js
pop
xchg
adc
or
movsb
mov
insl
aad
add
and
add
inc
icebp
adc
mov
push
dec
rcrb
lock
add
stos
mov
cld
push
mov
jb
and
in
pop
nop
jg
xor
dec
arpl
sahf
sub
mov
outsl
es
adc
sbb
adc
arpl
cmp
pop
xor
jge
cli
adc
mov
mov
fmuls
lahf
insl
outsb
cli
pop
push
mov
jl
cmp
push
or
adc
in
xor
mov
xchg
mov
sbbl
shrl
shll
sarl
data16
sub
enter
and
push
mov
pop
std
adc
leave
sbb
clc
repnz
aam
pop
popf
or
loope
enter
into
hlt
xor
mull
lahf
xchg
dec
dec
out
mov
xchg
shll
jle
sub
ss
and
out
cmp
dec
pushf
pop
dec
or
fimuls
or
scas
sbb
sti
and
testl
jl
inc
lds
iret
bound
mov
jge
lcall
addl
jns
cmp
out
mov
movsl
int3
adc
rcl
inc
es
outsb
mov
pop
xchg
insb
mov
call
mov
push
xchg
mov
call
inc
shrl
adc
rorb
or
into
push
or
cltd
inc
aam
push
clc
cmp
lods
xchg
in
call
sar
jmp
push
roll
fldcw
pop
sti
in
ja
inc
xchg
ret
mov
dec
jae
push
xchg
enter
iret
cmp
push
shl
push
adcl
cwtl
inc
or
dec
and
rcrl
int
and
cmp
fdivrp
mov
fadds
pushf
dec
fmull
cmc
mov
fs
push
adc
mov
shll
lock
insb
sarl
and
or
lds
in
aaa
xor
incl
adc
lcall
sbb
int3
adc
nop
dec
test
inc
mov
aas
pop
call
shll
stos
test
outsl
lret
movsl
test
jp
mov
xchg
insl
pop
mov
mov
outsb
mov
lock
push
jns
xor
imul
and
inc
mov
outsw
mov
out
aas
call
push
or
dec
cli
jmp
ret
inc
and
dec
sub
mov
mov
mov
insb
xlat
push
push
mov
ret
mov
shr
xchg
icebp
add
jp
sbb
push
int
icebp
xchg
lret
stos
adc
mov
lock
lods
adc
int3
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
nop
inc
push
xchg
nop
pop
sarb
out
out
cmp
repnz
xor
sbb
in
and
cmp
out
cmp
inc
test
loope
mov
pop
inc
inc
jg
dec
or
andb
mov
aam
jb
jb
sbb
mov
sahf
in
dec
rorl
and
sar
mov
jp
inc
sbb
cli
imul
sbb
pop
enter
lret
or
in
xchg
leave
pop
popa
mov
in
call
out
jmp
fnstcw
call
cmc
mov
sti
mov
mov
and
jecxz,pt
sbb
out
insl
rclb
pop
test
arpl
loopne
jbe
sti
push
add
test
imul
lods
lret
cmc
pop
xor
movsl
cmp
dec
mov
in
mov
adc
in
cmp
mov
aaa
divb
das
fildll
sbb
pop
jmp
lods
rclb
adc
sub
sub
pop
mov
repnz
into
lock
lret
clc
jo
and
cmp
mov
sbb
jmp
icebp
movsb
pop
push
mov
mov
adc
push
outsl
inc
lods
pop
fwait
lahf
jle
test
mov
std
pop
loop
dec
outsb
subl
rorb
jmp
xor
roll
jno
jge
out
pushf
push
jl
push
loope
xchg
insb
shll
aad
dec
test
add
sub
into
mov
leave
pop
add
xorb
sti
out
outsl
xor
xor
inc
push
adc
hlt
ret
int3
and
inc
sti
jecxz
sbbl
test
repnz
add
popf
ljmp
out
call
or
sbb
inc
adc
dec
push
sub
lock
enter
xchg
int
cmp
xchg
mov
hlt
scas
std
mov
pop
push
jb
pop
pushf
sbb
dec
in
mov
and
out
test
cltd
insb
aas
mov
or
out
push
fmul
dec
pop
mov
mov
js
fdivp
jno
push
cmp
icebp
cmp
fisubs
cmp
sbb
pop
mov
push
cld
xchg
sar
push
xchg
add
es
pop
jmp
out
or
cwtl
cmc
bnd
inc
mov
xchg
pusha
clc
and
jns
clc
push
lea
push
dec
and
shlb
cmpsl
cli
in
stc
iret
jns
xorb
aad
jecxz
xchg
cmp
sahf
mov
mov
stc
sahf
sti
adc
and
aaa
mov
jge
mov
cld
xchg
shrb
aam
inc
bound
fwait
fwait
cmp
mov
mov
mov
pop
and
test
add
push
stos
xor
adc
push
in
popa
es
mov
call
cmpsl
loopne
popa
cmc
faddl
test
pop
adc
pop
leave
das
outsl
push
sub
mov
gs
fwait
cltd
sbb
in
xchg
sar
call
mov
push
push
in
fildl
js
sbb
iret
rcrl
jne
pop
shll
pop
popf
xor
out
jae
push
adc
jecxz
pop
lcall
add
mov
push
test
loop
lods
mov
subb
insb
imul
mov
insl
clc
inc
jecxz
ljmp
jo
sbb
lock
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
ret
addl
mov
and
mov
lea
rcll
je
stos
inc
sbb
inc
or
mov
mov
fimuls
les
mov
inc
dec
sub
inc
fsubrp
lret
sub
outsb
and
mov
xchg
lret
jns
inc
aad
shrb
mov
mov
push
xchg
imul
js
leave
cmp
dec
aad
mov
jno
repz
add
pop
pop
jbe
ja
aam
cmp
push
jge
xchg
pop
lahf
jae
dec
rcrl
cmp
cmpsl
or
shrb
sub
adc
popf
loopne
je
scas
mov
cwtl
scas
jmp
pushf
dec
idivb
ljmp
loope
call
imul
testb
xor
dec
arpl
pop
cs
jne
sbb
pop
ds
cltd
mov
xor
xchg
jne
std
out
dec
rol
sar
nop
push
test
in
pop
mov
icebp
cmp
leave
rorl
scas
cmp
dec
fcmovnu
leave
movsb
icebp
ljmp
push
arpl
jl
or
pop
loopne
xor
mov
inc
jmp
insl
inc
lcall
and
sub
ret
aad
cmp
add
mov
mov
xorl
repz
test
ja
sub
aam
add
je
jns
sub
test
sarb
mov
cmp
out
test
pop
cmp
pop
mov
int3
adc
mov
and
mov
repz
std
test
jp
dec
fidivs
dec
push
loope
pop
jae
xorb
dec
mov
pop
pop
push
mov
mov
imul
test
aaa
mov
mov
push
pop
addb
jp
in
cmpsl
dec
add
jae
push
jmp
xor
cwtl
xchg
or
inc
stc
and
pop
out
aad
fdivrl
or
add
and
out
jbe
mov
mov
cmp
mov
cwtl
aaa
mov
rcrl
and
fistl
popf
sub
push
sub
jnp
cmpsb
adcl
mov
bnd
push
sti
in
adc
leave
imul
into
cmpb
adc
out
scas
das
stos
fmul
enter
insl
pushl
pop
jmp
and
and
push
fwait
dec
imul
out
push
mov
push
shrl
or
lds
les
push
loop
movsl
mov
daa
repz
push
les
mov
repz
add
or
mov
dec
inc
pop
imul
psrad
test
jge
or
rorl
pusha
shlb
addl
mov
flds
enter
sbb
sahf
or
lret
mov
addr16
loope
or
cli
hlt
inc
cmpsl
or
ja
xchg
jle
push
add
jp
push
fwait
cmc
push
aas
xor
mov
loop
call
sbb
adc
rcrl
popa
adc
fdivrs
pop
mov
outsl
pop
in
mov
mov
mov
popf
ljmp
mov
cmpsl
inc
pop
lea
rcrl
xchg
xchg
pop
testb
cmp
push
xchg
cmp
subb
les
lcall
in
shll
xor
stc
cmp
lcall
push
sbb
cmp
inc
testl
sbb
call
mov
cmp
jmp
mov
xor
mov
mov
nop
mov
outsl
sarb
fcmovbe
shr
or
cli
cmpsb
fisubs
test
xor
pop
das
inc
test
dec
shrb
push
push
negb
xchg
sti
lods
mov
xor
iret
mov
adc
mov
add
insl
fcmovne
pop
andb
cmp
dec
pop
subl
jp
adc
mov
mov
jo
lcall
jg
cmp
mov
sub
shl
cld
pop
mov
dec
jns
mov
push
lds
mov
pop
aas
cmp
movsb
rcrl
sub
je
dec
mov
clc
mov
mov
or
mov
jnp
jecxz
faddl
mov
jle
in
mov
add
into
or
mov
std
jge
movsl
dec
mov
andb
mov
fcoml
and
mov
cmovne
out
fnstenv
pop
nop
cmp
mov
inc
mov
call
outsw
stc
mov
sahf
and
idivb
loope
pop
clc
cltd
jno
xchg
popf
repz
sbb
sub
fwait
push
andb
cs
negl
enter
in
in
jg
sar
test
push
fisttpl
cmp
cli
out
mov
lcall
test
fdiv
or
cwtl
lea
jae
cmp
insb
sbbb
aad
xchg
mov
xchg
dec
leave
test
stc
aaa
or
xchg
into
mov
inc
pop
nop
ss
jo
push
int
jbe
mov
mov
mov
imul
lods
enter
enter
jmp
mov
xor
push
xor
pop
scas
and
in
add
mov
add
test
fsts
arpl
test
aad
pop
cmp
popa
imul
mov
jp
insl
mov
and
pop
add
pop
rorb
dec
lds
xorl
push
sub
push
outsb
lock
cltd
pop
ret
jns
add
jmp
mov
mov
incb
fistpll
dec
add
arpl
push
jmp
push
je
je
push
cmpsl
out
pop
mov
repz
stc
rorb
mov
ficompl
mov
insl
inc
ds
cli
movsb
push
sti
mov
sbb
sub
outsl
arpl
lret
mul
push
lret
fwait
cmpsb
lahf
dec
sahf
ss
mov
push
jnp
adc
outsl
ja
sbb
test
test
sbb
addr16
cltd
mov
pop
std
int3
cli
or
mov
out
lods
lds
lret
dec
jae
push
or
std
mov
inc
stos
sbb
lcall
fisubrs
and
cmp
xchg
push
popa
ds
jle
jge
pop
fidivrl
pop
outsb
mov
das
insl
xchg
jg
add
les
sti
pop
scas
in
mov
hlt
lods
testl
lods
inc
imul
pop
inc
js
or
pop
mov
add
sbb
jmp
add
jmp
test
pop
repz
mov
inc
cmp
and
outsl
in
aad
out
lock
mov
or
or
sub
jno
mov
push
pop
pop
insb
inc
and
cmp
pop
or
fwait
test
int
cmp
inc
sti
sbb
roll
add
mov
jmp
cld
sbb
mov
sahf
aam
adc
dec
les
mov
mov
fnstenv
loope
push
push
clc
ret
lea
sti
or
dec
fwait
push
cmp
dec
imul
lret
push
mov
adc
and
stos
and
ja
jnp
cld
imul
aaa
xlat
push
repz
ljmp
out
pop
jmp
scas
repnz
fisubrs
adc
addb
push
sbb
xchg
jae
inc
cmp
add
insl
mov
push
jb
or
je
stos
fmuls
hlt
mov
sbb
pusha
xchg
fisttpl
loope
fs
xchg
dec
or
jg
enter
rcrb
or
retw
add
cmpsb
xchg
jnp
mov
jo
inc
stos
sahf
inc
cmpsb
fwait
mov
shll
sbb
mov
inc
imul
xchg
sub
and
push
daa
dec
push
dec
lret
xor
push
sbb
jnp
cmp
cmp
sub
mov
or
lcall
pop
jae
lock
or
lahf
xor
adc
adc
sub
or
xlat
inc
gs
push
int
daa
mov
mov
or
mov
sbb
dec
sbbl
ja
jl
xchg
aad
lret
jns
push
pop
fidivl
inc
push
and
mov
in
mov
dec
adc
cs
jo
xchg
cmc
or
pop
into
jns
clc
out
loopne
sub
dec
xchg
sbb
dec
mov
xor
ja
or
aad
mov
mov
mov
jp
mov
je
inc
cmp
shr
sub
push
lods
bound
mov
nop
cltd
cmpb
sti
rolb
push
pushf
cmp
sub
mov
add
test
xchg
jb
ficoms
loop
imul
dec
push
movsb
sub
sub
jecxz
push
ffree
imul
scas
add
cmp
push
pop
and
iret
lahf
jge
or
xor
pop
sahf
and
cwtl
das
dec
adc
fcomip
loope
mov
sbb
xor
pop
mov
inc
add
lret
sbb
fisubrs
or
test
dec
mov
out
xor
cmp
lea
sub
pop
loopne
add
imul
ljmp
aas
bound
test
inc
push
jns
and
jg
push
shlb
fiadds
faddl
fisttpll
pop
adc
and
mov
pop
sub
inc
cmp
inc
fcomip
mov
inc
shl
pop
push
xor
fiadds
pop
movsb
outsb
sub
bound
inc
push
adc
int3
sbb
mov
scas
stos
and
and
add
jp
xchg
or
adc
cmc
mov
lods
sahf
xchg
outsb
jle
dec
mov
mov
sbb
add
dec
jmp
pop
das
cmp
xchg
dec
jl
cmpsl
aas
inc
cmp
fstpt
hlt
cmp
sbb
mov
scas
dec
pop
ljmp
ja
stc
out
xor
or
xor
mov
inc
dec
jmp
pop
or
movsl
and
test
arpl
jecxz
and
ret
int
jmp
sahf
insb
ror
cli
repnz
pop
dec
fs
lcall
ds
in
imul
sub
nop
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
testb
sarb
dec
les
ret
insb
fwait
mov
xchg
sbb
xorl
jmp
testl
mov
xor
jg
and
or
out
mov
dec
ret
mov
aad
jnp
push
stc
xchg
adc
sbb
xor
nop
jl
sub
mov
push
add
mov
sub
or
movsl
out
and
sbb
sbb
in
xchg
mov
out
cmc
ret
scas
cmp
cmp
ja
adc
stos
sbb
mov
cmp
jae
pop
jp
jp
stos
lods
ljmp
cmpsb
addb
pop
or
pop
jp
jecxz
cli
push
arpl
lock
fmuls
jp
fcomps
gs
shll
rol
mov
pop
jbe
pop
mov
mov
sahf
push
mov
bound
inc
mov
lret
jne
add
test
sbb
pop
inc
aad
pop
sub
jbe
ljmp
dec
mov
inc
arpl
les
xor
cli
sub
loop
sbb
in
fiaddl
jne
aam
jne
mov
xorl
mov
mov
xlat
push
cmp
mov
adc
cmpsb
mov
in
mov
adc
fsubrs
sbb
nop
sbb
cmp
and
je
sub
out
sbb
shl
adc
mov
stc
mov
mov
sbbl
enter
ret
and
notb
and
mov
mov
movsb
fsubrs
es
test
and
movsl
cmpsl
mov
sahf
pop
pop
mov
push
movsl
jnp
dec
xchg
lock
mov
and
imull
testl
pop
inc
cmp
std
mov
xchg
inc
roll
lock
andb
lret
pop
cs
sahf
inc
mov
mov
push
lea
inc
dec
jnp
or
inc
pop
push
icebp
jns
push
push
inc
mov
cmp
dec
mov
icebp
out
xchg
shlb
mov
in
push
scas
int3
fsubl
or
cmc
lret
pop
cmp
into
fwait
inc
fwait
ret
sub
mov
ss
clc
int
movsl
xchg
int
inc
jecxz
and
jnp
add
jns
fcmovnbe
push
push
xor
fidivrl
mov
lds
stos
repnz
mov
sbb
nop
mov
jns
sub
cmp
jns
inc
cli
insl
cmpsb
imul
inc
sarb
daa
das
inc
lds
jle
daa
push
sub
mov
lret
push
sarl
mov
cmpsb
test
stos
in
movsb
pop
fwait
inc
jnp
sbb
xchg
into
lcall
loop
add
stos
lahf
sbb
dec
and
adc
repz
adc
movsb
mov
xchg
mov
jbe
popf
lea
mov
fs
mov
mov
sti
lea
movsl
test
in
insb
ss
jne
xorb
out
xchg
xchg
fadds
add
stos
adcb
xchg
inc
sbb
lock
repz
add
scas
ret
jno
cmp
push
int
popa
cmpsb
mov
iret
sarb
xorb
mov
in
rorl
lahf
xchg
andb
inc
movsl
cmp
cld
mov
insb
pop
das
or
xchg
andl
imul
pushf
fiaddl
jb
aam
and
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
ds
mov
dec
test
mov
push
ds
fwait
and
int3
in
int
add
movsb
aad
pop
mov
das
mov
bound
mov
cmp
sbb
mov
xor
push
lods
dec
pop
lcall
sbb
pop
mov
cmp
addr16
and
cmpsl
js
push
repz
negb
sbbb
repz
fcompl
push
ficoms
movsb
std
shrl
cwtl
xor
loop
and
js
sub
pop
push
and
ja
sbb
inc
or
sbb
hlt
icebp
push
lock
mov
jo
mov
outsl
ds
mov
sbb
adc
push
js
seto
std
cmpsl
xor
xchg
and
sub
icebp
adc
imul
pop
test
and
fdivl
push
jl
mov
lret
int
loopne
ficomps
jmp
dec
cwtl
jbe
in
mov
xchg
rcrl
stos
and
inc
xchg
imul
push
sub
jo
push
fucom
fidivrs
jb
test
nop
lcall
loope
push
lock
push
push
adc
jns
fadd
cmp
pop
pop
gs
aam
hlt
in
fmull
push
jp
fstps
xchg
pushf
dec
xchg
push
icebp
add
shrb
es
stc
mov
cmp
and
call
mov
cmpsl
or
dec
xchg
sbbl
mov
and
push
hlt
push
mov
push
inc
jp
and
xor
inc
cltd
xchg
xchg
mov
fstps
cmp
pop
xchg
jge
mov
mov
leave
insl
dec
subb
mov
in
call
pop
stos
cmp
push
adc
dec
mov
das
iret
scas
test
in
movswl
daa
adc
in
lcall
sbb
mov
xlat
aas
add
jecxz
lcall
imul
loop
sub
sbb
ss
mov
data16
in
movb
and
pop
jl
push
in
test
mov
cmpb
adc
adc
add
add
icebp
mov
cmpb
inc
paddsb
pop
outsb
push
add
loopne
aam
aas
mov
push
test
add
movsb
mov
pop
pop
and
test
idivb
xor
pusha
nop
fisttpl
jo
fistpll
cmp
xchg
add
cmc
aad
lds
jne
sbb
or
das
or
pop
inc
sub
mov
lcall
hlt
bound
inc
enter
aad
fwait
adc
mov
or
cmp
xchg
les
sbb
subb
mov
in
leave
js
inc
cmpsb
adc
adc
inc
xchg
into
addr16
xchg
pop
xor
shlb
test
test
cmpsl
mov
lea
ss
cmc
adc
inc
sahf
adc
jg
out
pop
cwtl
imul
ret
and
cmp
fsubs
sub
mov
inc
pop
aad
dec
lods
aaa
les
push
scas
jo
jnp
outsl
fxch
sub
lea
and
xor
fwait
es
nop
stc
xor
cmc
jmp
mov
mov
mov
andb
fisttpll
jmp
mov
cwtl
stos
add
or
stos
pop
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
adc
fst
sarb
jo
mov
mov
popa
test
ret
repnz
mov
popf
cmp
sub
push
notb
and
sti
lods
mov
arpl
mov
daa
xor
cmp
leave
arpl
mov
cmp
dec
pop
ljmp
inc
mov
inc
push
stos
jne
jge
push
xor
popa
xchg
bound
ss
test
push
pop
in
push
mov
mov
push
pop
xchg
inc
cmc
xchg
cmp
push
xor
push
jmp
xchg
dec
pop
shlb
mov
loopne
mov
cmc
mov
pop
mov
in
dec
mov
push
sub
inc
aam
or
outsb
lahf
stos
aam
and
sub
jb
push
cmp
lods
xchg
and
or
sahf
outsb
lock
mov
pop
dec
cmpsb
and
dec
sbb
mov
dec
pop
shl
dec
xchg
lea
aas
or
adc
mov
out
test
dec
int3
inc
mov
sub
jg
aas
fistpl
pusha
dec
push
add
or
sti
divb
sub
sub
negb
mov
popa
xchg
inc
movl
bnd
imul
add
pop
mov
repnz
fdiv
pop
scas
push
pop
repz
or
idiv
and
insl
xchg
push
shll
in
sahf
and
inc
or
mov
and
test
mov
sub
and
cmp
repnz
js
out
dec
hlt
stos
push
stos
jns
test
das
sub
cmp
add
xchg
mov
xor
in
andl
test
or
sbb
add
or
jne
xor
outsb
inc
imul
or
fsubrs
mov
pop
and
pop
and
in
and
cmpsb
mov
push
lods
inc
mov
aaa
cwtl
aad
shll
adc
lods
xor
ja
xor
jmp
pop
mov
sub
aad
cmpl
xchg
jb
stos
int
inc
jecxz
mov
adc
jp
xchg
jle
dec
mov
sahf
stos
inc
adc
ret
xlat
pop
pushf
fisubrs
divl
pop
xchg
sbbb
std
pop
in
push
push
outsb
cmp
jns
rorb
sbb
ss
xor
lahf
jae
jp
into
imul
pop
movsl
xchg
das
mov
data16
cld
jmp
leave
mov
push
addr16
leave
test
mov
rol
arpl
mov
cmp
loopne
inc
mov
push
cmc
dec
sub
or
call
pop
cmc
lahf
enter
inc
rcrb
pusha
repz
aad
adc
out
into
mov
mov
jbe
mov
and
sub
pop
lods
xchg
cmpsb
or
lahf
mov
mov
leave
xchg
lcall
rol
add
mov
dec
inc
insb
cmp
out
lret
sahf
sub
push
loopne
xchg
mov
div
or
sbb
dec
mov
inc
ljmp
cmpsl
fdiv
stos
leave
addb
push
adc
or
push
mov
xor
mov
repnz
mov
sub
mov
je
insb
scas
jmp
mov
mov
inc
lahf
inc
cld
xchg
cmp
or
lret
ja
adc
mov
mov
add
icebp
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
das
lret
arpl
mov
xchg
gs
jo
cltd
das
xchg
ss
dec
lea
jns
shlb
mov
test
hlt
or
into
mov
mov
sub
in
jle
push
or
js
popl
adcl
dec
test
sub
push
jno
cmp
jnp
xchg
or
sub
ja
ja
jbe
ret
roll
cltd
outsl
imul
sbb
lock
das
push
dec
ss
sbb
divb
mov
sbb
sub
add
mov
int3
mov
aaa
lds
xchg
pop
mov
xor
pop
pop
bound
mov
out
lods
jmp
lahf
mov
mov
jecxz
sbb
pop
pop
aad
and
push
cwtl
addr16
mov
or
add
add
mov
lahf
mov
mov
inc
cld
xchg
addr16
leave
loopne
and
mov
fidivrs
popf
pop
xchg
adc
enter
dec
xor
mov
xor
mov
dec
or
je
lods
aam
insl
testb
sbb
pop
push
inc
movsb
sub
push
dec
or
in
xchg
ret
push
mov
mov
or
push
nop
or
xchg
scas
ret
repz
add
lret
adc
aaa
sbb
sub
sarb
sti
dec
lret
scas
or
xchg
das
in
cmp
rcr
shr
lods
mov
shrb
mov
mov
inc
mov
loope
cwtl
mov
subl
loope
jge
das
ja
lds
add
inc
pushf
pushf
add
push
jl
out
mov
mov
sub
mov
popf
fistl
lds
sub
mov
shl
mov
imul
loope
mov
push
dec
adc
xor
out
sbb
incb
jl
pop
mov
and
and
cld
add
add
imul
xor
mov
adc
repz
jmp
psrlq
jbe
add
pushf
sbb
gs
sbb
mov
insb
fnstcw
cli
jb
into
add
sbb
cli
pop
and
xchg
cmc
sbbb
mov
inc
xchg
lea
add
fcmovu
push
leave
ds
scas
and
mov
sbb
pop
xchg
test
pop
cli
xchg
adc
popf
or
xchg
jmp
cmpl
xchg
rcrl
sub
pop
xor
inc
movsb
dec
rorl
add
xchg
lds
add
jns
mull
test
popf
xor
dec
push
mov
rcr
mov
mov
loope
mov
mov
push
in
adc
sbb
mov
int
stc
fildll
fimuls
inc
add
add
insl
mov
push
bound
out
test
nop
pop
into
movsb
test
add
adc
dec
outsl
dec
mov
imul
fdivs
cmpl
pop
movsb
pusha
xchg
xchg
push
jle
or
jns
xchg
sbb
out
in
lock
cmp
mov
in
insl
dec
ret
pop
out
repz
mov
xchg
mov
in
or
adcb
and
xchg
adc
xchg
mov
loopne
mov
xor
inc
mov
mov
lea
mov
and
and
sub
xor
mov
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
push
jns
xchg
out
popf
sarb
xchg
cmp
dec
imul
jecxz
xchg
or
adc
inc
pushf
sub
mov
lcall
and
fwait
aas
js
and
sbb
ret
out
lods
and
push
mov
andl
fcmovnbe
and
or
jbe
push
sbb
andl
pop
std
cs
fmull
sub
hlt
adc
and
popf
inc
shll
pop
push
adc
fsubr
test
sbb
mov
mov
inc
adc
xchg
cld
lret
adc
inc
test
dec
ficompl
sti
arpl
movsb
aas
loop
sub
loope
pop
mov
or
outsb
dec
mov
push
push
rorl
in
mov
aas
cmpsl
les
cmp
in
mov
xchg
out
outsl
jbe
adc
inc
js
xorl
out
jp
movsl
scas
xor
jnp
mov
xchg
lcall
enter
dec
icebp
dec
inc
push
frstor
cmp
jle
jle
push
or
scas
adc
or
dec
mov
xor
and
lea
xlat
and
lahf
je
pop
xchg
ret
xchg
jecxz
daa
call
pop
mov
fs
xchg
add
xchg
enter
sub
pop
xchg
imul
pop
jmp
xor
ss
inc
push
pop
jecxz
stc
xchg
ljmp
push
or
negb
jp
push
inc
dec
xchg
in
mov
dec
pop
jae
and
xor
ljmp
ror
pusha
mov
inc
mov
fwait
aas
stos
pop
orl
jg
repnz
add
adc
inc
ret
xchg
jbe
mov
xchg
mov
push
adc
push
test
mov
addr16
mov
call
or
sahf
pop
scas
pusha
dec
xchg
add
lea
pushl
in
imul
cmc
stos
shr
aas
out
frstor
and
dec
lret
stos
mov
push
inc
int3
arpl
sub
jmp
add
jno
push
cmp
jp
xchg
loop
movsb
fdivl
mov
test
mov
shl
and
andl
lock
pushf
lds
call
into
std
aad
clc
repnz
pop
push
xor
inc
pushf
inc
imul
aad
xchg
mov
push
stos
mov
jge
cmp
inc
push
push
stos
lcall
test
jg
mulb
and
push
push
add
stos
sbb
pop
repz
dec
addr16
jns
xchg
cli
stos
xor
ljmp
in
aaa
lods
mov
shl
sbb
stos
fs
repz
push
in
jo
pop
lods
or
inc
out
daa
sbb
sub
scas
ror
insb
xchg
imul
rcll
not
cmpsl
nop
adc
pop
or
adc
rclb
xchg
and
jo
int
cmp
adc
pop
xor
jmp
jb
pop
jbe
sbb
xchg
push
mov
push
aas
pop
repnz
movsb
and
jmp
jge
lret
or
jns
imul
push
mov
push
inc
or
shrl
mov
pop
pop
xor
scas
dec
adc
jb
cmpsl
or
mov
inc
pop
push
sub
or
xor
fisubrl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
xlat
mov
sarb
clc
imul
faddp
push
mov
add
aas
xor
xchg
jmp
jmp
cwtl
pop
mov
mov
jle
xor
out
shll
out
xchg
lods
mov
cmpsb
pop
nop
iret
out
sbb
icebp
push
sbb
and
pop
rcrl
ljmp
stc
ljmp
sub
pop
sub
icebp
jb
or
adc
mov
xchg
xor
sub
push
sbb
sbb
mov
sbb
int3
out
jo
out
pop
nop
or
mov
inc
sub
cmp
lahf
rcl
ljmp
stos
sub
insb
mov
add
pop
aaa
xchg
jmp
movsl
aad
xor
mov
ds
stos
add
mov
scas
cmpsb
mov
cmc
sahf
int3
xor
pushf
cmpsl
lret
mov
outsl
pusha
stc
mov
cwtl
inc
push
cmpsb
lahf
jg
mov
in
cmpsb
xchg
imul
sbb
jle
xlat
jbe
jg
mov
push
mov
pop
pop
jg
cli
fsts
stos
mov
fisttpl
in
hlt
mov
sti
insb
mov
test
sub
mov
out
pop
push
xor
iret
add
cmp
jb
adcb
std
jnp
xchg
mov
loop
sub
movsl
mov
sarb
and
pushf
shll
std
xor
lds
pop
and
jb
jp
icebp
test
or
jo
xchg
jo
xchg
jle
pushf
fldenv
data16
mov
sub
jmp
mov
pop
out
shlb
mov
xchg
decl
jb
and
out
dec
xchg
jno
ret
clc
movsl
add
mov
jnp
and
pop
xchg
sbb
jb
xor
mov
push
jns
mov
nop
adc
adc
sub
inc
xor
add
xor
or
or
mov
mov
in
xchg
mov
pop
add
mov
pop
or
push
dec
and
mov
adc
mov
mov
iret
jno
or
and
adc
nop
dec
imul
inc
bound
mov
mov
aas
gs
mov
add
push
inc
jne
sub
xchg
icebp
jno
push
fsub
cmc
push
jns
mov
fidivrs
ret
bound
test
ret
addr16
mov
mov
shll
bound
sarl
cli
sbb
mov
adc
dec
inc
dec
xchg
push
popa
pop
test
in
mov
lods
cld
cmp
dec
and
sub
sub
das
sbb
mov
insb
imul
cltd
push
jns
jecxz
movsb
lods
adc
call
mov
add
adc
inc
arpl
bound
add
xor
dec
aas
imul
ret
cmp
xchg
repnz
adc
fdivrl
nop
jmp
popf
popf
popa
cmp
flds
lock
loopne
mov
ret
rcl
sub
fdivl
fiaddl
loope
dec
daa
out
and
gs
stc
stos
scas
xor
sar
lock
dec
ret
add
and
xchg
rol
jecxz
lcall
test
mov
dec
jbe
sbb
mov
sub
loop
jbe
int
scas
lcall
popf
xchg
pushf
adc
mov
mov
jmp
jo
mov
mov
rcl
mov
stos
sarb
fwait
cli
int
jns
xor
repz
mov
add
dec
xor
cmp
rorl
dec
lods
xchg
cli
out
enter
push
jne
pop
pop
outsl
adc
dec
aaa
andb
cmpb
pushf
sub
jb
ljmp
in
xor
adc
into
xor
cltd
enter
pusha
negb
pop
push
fsubrl
mov
xchg
pop
test
jno
xchg
mov
in
sbb
pusha
push
jbe
mov
mov
inc
in
and
jle
xchg
loop
fisubl
push
xchg
insl
lret
lcall
jae
adc
cwtl
movsl
in
push
sahf
sbb
mov
fwait
in
mov
add
scas
xchg
xchg
stos
jbe
sbb
push
movsb
cmpsl
pop
shll
xchg
xor
sbb
and
push
fmulp
ljmp
add
js
mov
pop
inc
or
jmp
pop
sbb
or
dec
mov
jb
roll
dec
pop
sti
repnz
pop
mov
add
jb
and
pop
push
ret
xchg
repz
xlat
fwait
add
mov
xchg
nop
movsl
in
insl
pop
ljmp
push
pop
arpl
pop
sub
push
xchg
insb
xlat
fninit
xor
test
push
test
push
xor
daa
mov
movsl
add
mov
rcrl
mov
dec
fstps
mov
pushf
cmpsb
hlt
push
pop
or
jecxz
loop
and
jne
lds
cltd
xchg
cmp
rol
adc
test
data16
pop
arpl
in
cld
movsb
mov
push
fmul
jecxz
sub
sbbl
cmc
ja
jecxz
shrb
mov
xor
sarb
stos
pop
js
nop
nop
mov
xchg
dec
mov
or
aaa
enter
or
xchg
popa
add
adc
shl
mov
inc
stos
push
loope
push
mov
xor
mov
iret
std
pop
jl
lret
mov
in
nop
notl
pop
mov
or
jno
add
pusha
inc
mov
fwait
ljmp
or
inc
xor
dec
push
pop
pop
test
mov
add
in
adc
insb
mov
pushf
inc
add
fldenv
inc
popa
in
cmp
xorb
sbb
add
push
loopne
jnp
dec
subl
mov
or
adc
cltd
lods
dec
pop
movsb
mov
xchg
push
lcall
adc
lds
aam
mov
mov
xor
incb
ja
notl
test
xchg
add
imul
xor
icebp
sarb
mov
insb
stos
or
sbb
fwait
dec
dec
outsl
push
ret
jmp
cmp
clc
xchg
mov
inc
testl
cmp
xchg
mov
adc
jo
jo
dec
mov
ds
jo
xchg
ljmp
jp
xor
mov
mov
fsubr
and
mov
les
cmp
hlt
pop
push
ja
les
xor
xchg
sbb
pop
call
cmp
pop
xor
mov
rcrl
ss
push
bound
les
dec
outsl
mov
jg
dec
sbb
test
adc
add
decl
or
adc
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
das
mov
rcll
les
f2xm1
add
lea
sub
or
xchg
xchg
adc
sub
movb
in
jmp
jle
mov
movsl
xor
jmp
xor
into
mov
and
adc
xchg
push
pop
in
sub
xchg
ljmp
jae
fsubrp
inc
push
adc
add
in
popf
push
aad
inc
push
imul
pop
pop
mov
inc
or
mov
sbb
repnz
jle
cmpsl
outsl
adc
inc
aad
jno
call
lds
lods
inc
push
xchg
mov
lea
push
stc
jo
arpl
cmc
insl
ret
aad
scas
in
out
int3
imul
xchg
pop
fs
mov
loopne
cltd
inc
pop
inc
cmp
fwait
enter
lods
fildl
jnp
sti
push
test
xchg
lret
faddp
insl
shrb
inc
sub
sub
xlat
popa
lods
inc
jbe
xchg
sub
pop
xchg
jmp
or
adc
fstl
imul
shll
push
dec
inc
sub
xor
sub
push
mov
sbb
test
jp
cmpsb
sub
in
hlt
inc
mov
out
aad
push
fdiv
std
and
adc
xchg
pop
push
aas
insl
mov
pop
lcall
mov
sub
xor
sar
ljmp
mov
xor
push
add
push
fidivs
pushf
pop
insl
pop
test
and
pop
shrl
sbb
rcrb
add
dec
insb
dec
movsb
and
cmp
out
les
lret
andb
testl
mov
pop
mov
add
inc
daa
xchg
mov
mov
and
sbb
lcall
int3
pop
and
data16
fadds
push
imul
cltd
imull
rorl
pop
cmpsb
call
pop
pop
lock
adc
jl
in
test
test
outsb
fs
mov
mov
scas
mov
mov
sarl
rol
sahf
aam
aam
ret
lret
lods
int
push
jb
lock
xchg
psubsb
mov
jnp
gs
jb
push
inc
stos
or
rolb
sbb
jns
repz
incb
movsl
pop
stc
cmpsl
repz
testl
lahf
dec
jno
jmp
es
jg
or
gs
xchg
std
lds
aaa
mov
in
jb
and
and
in
mov
clc
dec
pop
clc
add
xchg
std
sbb
mov
fldt
popa
mov
inc
cmpsb
inc
pop
xchg
mul
sahf
add
cwtl
outsb
cmp
dec
sub
and
int3
xchg
xchg
rclb
cmp
cmpsl
ljmp
insb
ljmp
mov
xchg
aam
lods
ret
xchg
stc
negb
jg
aas
inc
enter
adc
mov
cmp
lea
jo
fwait
outsl
call
int
aas
leave
mov
dec
int
loope
mov
inc
loope
lahf
flds
add
add
push
adc
in
push
rolb
add
out
cmp
les
lcall
xchg
pusha
insb
add
popf
adc
stc
jae
data16
sbb
pand
out
cli
jno
popf
cld
jo
out
call
lock
insb
jne
leave
ret
imul
push
sub
add
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
cmovae
rcrl
mov
mov
test
inc
mov
pop
jns
icebp
sbb
jb
inc
push
sub
fsubp
jg
lret
mov
dec
mov
std
mov
push
test
clc
ret
sub
sub
mov
mov
add
xchg
sbb
inc
jl
pusha
xchg
std
repnz
mov
fstl
push
cltd
mov
cmp
push
fstps
hlt
lods
and
dec
in
pop
lret
inc
fistps
mov
test
inc
pop
jo
add
sub
adc
adc
bnd
jmp
jne
out
mov
xchg
sbb
pop
in
imul
xor
dec
xor
lods
jle
inc
enter
cmpsl
test
inc
and
xor
cltd
leave
mov
cmp
cmp
arpl
sub
add
outsl
cltd
dec
fs
inc
mov
aas
or
lods
cmp
out
mov
stc
enter
outsb
adc
mov
sub
ss
or
mov
call
push
mov
adc
or
cmp
addr16
push
xor
xchg
and
cmp
in
inc
fildl
add
lcall
fdiv
ret
sub
imul
outsl
repz
imul
clc
inc
mov
shl
dec
cmpsb
lock
fisttps
subl
mov
mov
mov
xor
mov
xor
adc
int3
int
daa
sar
add
sub
or
jecxz
dec
lea
or
imul
pop
rol
in
leave
rolb
or
aas
daa
hlt
test
cmp
div
sub
jge
mov
sub
fdivrs
fs
pop
push
mov
cmp
fisubs
pop
int
std
push
mov
test
xchg
insl
fstpt
in
mov
add
insb
mov
loope
jbe
in
push
mov
repnz
add
pop
and
lahf
cmpsl
inc
add
insb
hlt
cmpsb
xchg
or
jmp
dec
push
pop
or
outsb
das
in
and
push
out
adc
out
mov
dec
push
std
lea
push
sti
push
mov
jne
inc
sbb
cmp
enter
xchg
call
pusha
adc
ret
sbb
mov
ss
sub
test
jge
fstpl
lcall
fwait
mov
mov
rclb
sub
cmp
lret
mov
or
pusha
inc
mov
popa
std
arpl
pushf
cmp
pop
mov
or
sahf
addl
cmp
aam
popf
push
imul
les
adc
pop
jecxz
adc
xlat
cmp
cmpsb
xor
dec
jle
movsl
stos
jns
rcrb
add
cmp
xchg
sub
int3
sub
in
adc
sub
lods
mov
loopne
test
cmpsb
aas
cli
add
push
nop
jl
xor
fs
ljmp
dec
leave
cmp
shll
lods
pmulhuw
xor
xchg
xor
aaa
mov
adc
and
ror
push
mov
popa
xchg
xchg
shlb
jae
sub
lods
and
xor
mov
jp
xor
inc
aaa
sti
xor
mov
in
push
pop
testl
dec
ljmp
mov
lods
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
jmp
mov
dec
les
ret
jge
xor
jno
rolb
jecxz
fadds
push
stc
sub
jp
inc
mov
adc
pop
inc
mov
test
repnz
dec
sub
ss
pop
arpl
cmp
cmpsb
push
lcall
xchg
lahf
push
cmp
inc
mov
daa
mov
int
call
shrl
scas
imul
xor
dec
mov
mov
stos
jbe
outsb
repz
out
mov
cwtl
cmp
outsl
inc
cmc
mov
inc
fstpt
xchg
loope
cmp
shrl
lds
fdivrs
cmp
lea
mov
je
add
dec
dec
or
pusha
pop
xchg
stc
test
lahf
xlat
sbb
xchg
push
push
loope
mov
daa
mov
pop
mov
sbb
lahf
jp
lods
hlt
out
aaa
mov
add
push
lds
push
pusha
pop
cmp
popa
fcmovu
fdivs
jns
xor
pop
jae
ljmp
loope
mov
lret
mov
jge
movsl
mov
lcall
das
or
repnz
xchg
lea
pushf
jl
mulb
int
inc
inc
mov
fisttpl
pop
push
push
hlt
sbbb
lods
cmpsl
sub
adc
pop
push
ds
cmp
mov
inc
pop
sub
shlb
mov
push
push
dec
pop
orl
fadd
scas
inc
and
cmpsb
sahf
pop
dec
in
loope
insl
rcll
sbb
clc
es
rcl
cs
push
mov
sub
in
out
stc
lret
jge
jo
cmpsl
add
pushf
or
jmp
cli
push
xchg
jno
xchg
cmpsl
shr
mov
sar
jmp
out
lret
jg
or
add
popa
mov
adc
adc
mov
xchg
popa
add
lds
scas
mov
dec
inc
xchg
mov
push
aam
and
enter
iret
or
and
lret
test
or
jle
jmp
pop
sub
fwait
rcl
in
jns
mov
or
mov
push
fsubrl
push
mov
cmpsb
shll
and
fs
imulb
dec
push
xor
lret
in
cwtl
xor
xor
cli
pop
lds
add
pop
icebp
sbb
push
add
xchg
mov
dec
mov
pop
repnz
push
cmpsl
mov
add
fisubrl
push
xor
jnp
push
lahf
fdivl
inc
mov
fidivs
adc
cmp
shl
mov
cmp
mov
xor
cwtl
in
xchg
sti
cmp
mov
push
loopne
pop
or
in
fninit
ffree
rorb
mov
cmp
or
push
push
cmp
and
lret
or
lahf
sbb
not
mov
and
icebp
sub
mov
enter
nop
and
pop
cmp
outsl
add
mov
adc
cwtl
insl
rolb
fsubr
cmp
loop
lahf
cwtl
subl
mov
sbb
jb
adcl
adcl
call
das
jmp
xchg
popl
adc
xorb
rcrb
or
sub
jbe
xor
sub
jl
icebp
and
mov
sub
jbe
mov
adc
jns
movsb
and
xchg
cwtl
or
adc
lea
into
cld
or
test
add
cmc
inc
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
jmp
cmp
sarb
cmpsl
insl
xchg
pop
push
pop
nop
pushf
sbb
cwtl
les
sub
ficoml
shll
cmp
pop
sbb
rcr
sub
add
icebp
push
cli
pop
stos
gs
push
sub
mov
mov
cwtl
addr16
push
dec
movsl
in
push
sarb
frstor
xchg
lea
mov
xchg
xor
dec
and
mov
gs
inc
lock
lea
sub
inc
divb
mov
mov
add
shl
std
xor
decl
decl
mov
xorl
clc
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
mov
insb
gs
arpl
push
outsl
inc
jne
jae
jb
inc
and
add
add
add
add
inc
add
sub
shlb
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
jo
inc
add
add
inc
add
inc
add
jle
add
addl
cld
sub
fs
inc
add
inc
add
sub
int3
daa
inc
add
push
movsl
scas
or
inc
add
sub
inc
sub
push
sub
pusha
sub
mov
and
inc
add
daa
inc
add
sub
scas
fwait
push
movsl
cmp
mov
lock
inc
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addl
ja
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
fs
inc
add
push
movsl
cmp
xlat
movsl
dec
add
pusha
and
sbb
hlt
stc
sarb
inc
pop
jg
add
add
add
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
gs
daa
inc
add
daa
inc
add
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
add
test
or
test
adc
test
sbb
test
arpl
adc
push
xor
add
add
aaa
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
and
test
sub
test
xor
test
cmp
test
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
movsl
das
adc
add
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
movsl
test
test
test
mov
inc
add
test
mov
test
lds
add
test
roll
add
test
fldl
add
inc
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
and
test
sub
test
xor
test
cmp
test
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
add
add
aad
dec
add
add
and
add
add
add
add
add
lock
add
adc
add
lock
add
add
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jp
add
nop
mov
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
add
inc
mov
add
add
pusha
mov
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
jl
add
mov
add
ret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jle
add
mov
add
add
rorb
add
mov
add
add
lea
add
lea
add
add
pop
lea
add
add
jbe
add
test
add
mov
lea
add
lea
add
lea
add
lea
add
lea
add
add
adc
add
and
add
inc
mov
add
add
push
add
js
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
inc
popl
add
add
add
jle
add
xchg
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
nop
add
sbb
add
sub
add
push
nop
add
outsb
nop
add
test
add
test
add
mov
nop
add
fcoml
add
clc
nop
add
push
xchg
add
push
xchg
add
cs
add
cmp
add
push
xchg
add
pop
xchg
add
push
add
jl
add
mov
add
mov
add
ret
add
xchg
add
fcoml
add
xchg
add
or
add
sub
add
dec
xchg
add
pop
xchg
add
add
add
jbe
add
test
add
scas
xchg
add
rclb
add
xchg
add
cld
xchg
add
push
xchg
add
sbb
add
inc
xchg
add
push
xchg
add
pusha
xchg
add
jb
add
test
add
pushf
xchg
add
mov
add
xchg
add
fcoml
add
push
xchg
add
sbb
add
add
push
xchg
add
insb
xchg
add
jp
add
mov
add
xchg
add
loopne
add
repnz
add
add
add
and
add
inc
xchg
add
pop
xchg
add
insb
xchg
add
adcb
add
xchg
add
mov
xchg
add
add
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
push
and
add
xchg
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
