push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
mov
bound
pop
bound
sub
pop
add
pop
jne
xchg
inc
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
in
pop
or
inc
imul
jne
das
add
fucomp
fstpl
fwait
out
rcrb
cmc
notl
sbb
pop
loope
push
jle
inc
sbb
in
enter
inc
and
stc
mov
adc
mov
mull
dec
xor
nop
add
pop
adcb
lock
shll
xor
sbb
loop
mov
or
xor
pusha
je
std
sub
repnz
pop
cmpl
jl
ss
push
movsb
dec
xchg
pop
lea
jbe
pop
lea
inc
push
cvtpi2ps
mov
adc
mov
jnp
xor
out
aas
aad
in
xchg
cmpsb
add
lea
or
pop
test
pop
inc
mov
shlb
stc
negl
out
mov
insl
mov
sbb
in
orl
dec
fldt
push
dec
loope
xchg
fdivrs
push
sbb
jb
xchg
shrd
mov
mov
pop
or
dec
sub
dec
jbe
pop
in
test
adc
mov
hlt
cmp
stos
je
fiaddl
jne
fildl
lret
add
les
adc
outsl
and
outsl
jl
mov
nop
test
pusha
and
inc
dec
adc
inc
cmp
std
fcmovnb
mov
popa
adc
div
movsl
xchg
roll
inc
cmp
cvtps2pd
adc
int3
mov
fcomip
cmp
sti
loopne
cmp
hlt
ljmp
mov
adc
clc
out
lahf
lods
movsl
test
bnd
idivl
add
movsb
in
icebp
mov
add
mov
aaa
push
dec
jo
ret
lcall
jbe
xchg
les
adc
inc
adc
jg
sub
push
addr16
jg
xchg
jbe
incb
dec
fsubrs
mov
nop
cmp
clc
insl
scas
lods
lods
inc
scas
push
mov
in
jae
and
inc
arpl
aam
xchg
push
ljmp
xchg
xchg
mov
cli
pop
gs
or
sahf
loope
scas
xorl
loopne
outsl
xor
xchg
mov
jne
std
js
mov
lock
xor
stos
or
notl
jmp
pop
adc
cmpsl
push
js
in
mov
inc
pop
dec
in
mov
add
into
jg
dec
imull
mov
mov
enter
cltd
pop
dec
outsb
pusha
xchg
pop
mov
cltd
pop
outsl
sbb
add
push
idivb
sbb
and
xchg
inc
fwait
lock
in
jp
test
fsubp
data16
push
cmc
lahf
rcl
mov
sbbb
xlat
scas
mov
lahf
in
inc
bsr
addb
test
xchg
fsubrl
leave
lret
lods
mov
or
fldcw
and
fcom
fsubrs
dec
cwtl
aas
out
dec
in
xchg
pop
jp
dec
inc
and
dec
into
enter
inc
jo
mov
cmp
jle
lcall
push
xchg
sbb
mov
pop
das
jo
jo
push
pop
aaa
incb
inc
shl
aad
in
in
cmc
mov
mov
leave
arpl
push
loopne
sbb
fistl
in
inc
shll
iret
jo
daa
pop
loop
and
enter
xlat
out
mov
das
stos
add
inc
fnstcw
cmpsl
popa
cmp
sbb
xor
push
mov
aam
sbb
into
fwait
or
and
sub
add
test
pextrw
adc
xchg
mov
sub
repnz
and
jle
dec
jl
nop
lea
and
and
jns
adc
hlt
cmp
dec
andb
push
in
and
ds
mov
pop
jnp
popa
and
loop
xchg
jns
adc
adc
cmpsl
mov
cld
add
xchg
push
lret
imul
dec
cmp
and
adc
bnd
pop
sbb
push
stos
pop
int3
loope
aam
or
adc
sti
sarb
mov
mov
das
xor
xlat
jge
jbe
stos
lahf
arpl
pop
movsb
sub
cld
sub
outsl
sub
inc
fwait
pop
ljmp
xlat
mov
repz
mov
scas
jp
sbb
xchg
push
jnp
xchg
in
sub
aaa
xchg
jo
mov
fisttpl
inc
mov
pop
push
cmp
jg
xchg
lds
jbe
adc
push
outsl
sbb
bound
in
mov
push
pop
inc
fisttpl
cmp
jl
pop
repnz
pop
fwait
in
jnp
xchg
cli
test
push
out
daa
shlb
sub
in
adc
jge
out
mov
sub
shll
and
pop
out
inc
dec
shlb
out
inc
cld
xchg
popf
pop
mov
loope
in
push
xchg
gs
stos
inc
roll
testl
push
icebp
popa
xchg
nop
jae
imul
lock
xchg
subl
xchg
mov
cmp
xor
push
ret
xchg
jle
cwtl
add
mov
mov
movsl
ret
sub
pop
shrb
cmp
outsl
dec
fsub
mov
mov
lds
les
ljmp
xchg
push
mov
sbb
and
movsl
cld
lods
outsl
jle
stos
cltd
adc
test
hlt
in
xlat
push
jae
xchg
lea
sarl
adc
xchg
jmp
or
shrb
cmp
andl
cli
sbb
or
subl
testb
push
outsb
pusha
aam
sti
xor
int3
sub
movsb
fwait
push
orl
cld
stos
call
fiadds
fistl
cli
pop
mov
sub
pop
jg
adc
mov
mov
and
dec
sbb
add
xchg
mov
pop
pop
lds
ds
dec
mov
pop
ret
ds
sub
fwait
jb
push
cmpsb
lock
cmp
clc
xor
adc
cmp
bound
ret
push
push
push
test
adc
xchg
and
mov
inc
iret
or
sbb
push
jmp
mov
gs
pop
push
mov
sbb
cltd
ret
loopne
cs
repnz
xchg
imul
sub
clc
movsb
push
and
or
lock
jno
je
pop
dec
stos
inc
ja
lret
cmp
xor
imul
push
enter
adc
adc
add
sarb
cmp
cld
out
repnz
popa
mov
ss
in
mov
mov
je
fidivrl
lods
mov
loop
sbb
add
add
in
mov
jne
mov
xchg
shlb
xchg
or
adc
sarl
fwait
loop
rcl
arpl
int3
imul
xchg
in
nop
xor
xorb
nop
cs
push
sub
loope
jns
or
adc
rol
gs
fiadds
jp
push
mov
mov
jns
movsl
or
and
mov
sub
jbe
js
sub
xchg
mov
ljmp
push
fbld
lea
pop
or
and
pop
push
cmp
lods
push
adc
arpl
sub
ret
call
push
adc
jbe
cs
icebp
jg
sub
test
or
mov
jnp
pop
push
fsts
testb
je
jo
push
loope
mov
or
or
shll
dec
fs
imul
int
dec
cmp
mov
and
in
xchg
imul
mov
test
fcoms
push
aaa
repz
jns
leave
mov
imull
dec
sub
push
movsl
fwait
adc
mov
std
subb
mov
insb
mov
out
dec
mov
ret
or
imul
inc
sbb
xor
addr16
pop
test
call
rorl
or
mov
cld
add
cmp
xor
lret
sbb
filds
out
repnz
jle
lahf
pushf
movsb
test
scas
cmp
xor
mov
lock
xor
out
lods
pop
xchg
adcb
xchg
jns
inc
cmp
decl
cmc
jecxz
shll
or
adc
or
or
xchg
popa
lcall
mov
mov
jl
pop
push
jns
pop
rcrb
pop
rol
add
pop
mov
fst
and
add
dec
jle
rol
sahf
les
cmp
push
je
inc
sti
pop
orl
and
dec
movsl
pop
adc
js
or
xchg
push
in
dec
movsb
out
fnsave
jl
push
mov
adc
inc
out
lea
negl
loopne
dec
cmp
addr16
clc
sbb
cs
clc
popf
cli
mov
sub
test
inc
sub
sub
mov
pop
scas
fidivl
daa
jmp
es
js
or
imul
iret
add
mov
xchg
mov
std
mov
sbb
mov
push
rcll
dec
dec
dec
fwait
xor
adc
fs
or
inc
add
nop
test
cmp
inc
test
mov
call
ret
mov
out
scas
ret
bound
and
rcrb
rorb
push
mov
mull
pop
mov
xor
in
inc
push
xor
pop
cmpsl
mov
jo
daa
jae
push
js
fsubs
lods
xchg
lcall
out
xor
lea
aad
int
mov
insb
pop
loope
sbb
jecxz
pop
out
cmpsl
cmp
lahf
inc
repz
push
loope
flds
xchg
jp
inc
sbb
scas
add
push
imul
icebp
adc
pop
xor
jnp
aam
imul
andl
pop
outsl
adc
int
inc
repnz
mov
ljmp
xchg
packuswb
roll
fistl
fdivrs
rcrb
mov
cmc
leave
jp
cld
adc
call
sbb
push
push
dec
adc
out
cltd
sbb
pop
pop
xor
xchg
test
sub
mov
fs
dec
repnz
dec
sbb
inc
pushf
jp
inc
mov
mov
pusha
cli
sbb
scas
xor
xor
push
sub
lret
icebp
inc
fdivs
adc
and
sub
xchg
inc
out
mov
sahf
out
cmp
mov
inc
inc
cwtl
mov
in
mov
and
icebp
add
pushf
rcl
jb
les
loopne
leave
mov
push
sub
iret
cmc
movsl
rcl
mov
leave
sub
dec
rolb
push
sti
add
popa
arpl
jecxz
sbb
stos
or
cmpsl
subl
ss
je
fcoml
fdivrs
xchg
fidivs
fldl
add
aaa
sbb
sbb
xorl
mov
stos
push
and
cli
fsubrs
sbb
cld
fsubrl
cmp
cmp
sarl
inc
and
es
je
cmp
push
in
in
imul
in
dec
lock
jle
add
jle
mov
add
push
inc
lods
adc
xchg
test
movsl
ret
xor
xor
dec
xchg
fcmovb
xor
mov
sbb
add
xchg
dec
cmp
icebp
xchg
ja
insb
ja
outsb
loopne
jb
push
fistl
out
out
sti
mov
lret
add
jecxz
lea
fistpl
cmpsb
cmp
xchg
cmpsl
cwtl
pop
jns
jno
pop
push
or
filds
mov
stc
mov
pop
aam
push
push
cmc
sar
sarl
mov
xchg
and
jle
lods
mov
or
ja
or
push
jbe
or
sarl
add
xor
test
sub
xchg
pusha
jl
cmc
fsts
in
test
dec
loopne
imul
mov
mov
lock
xor
inc
mov
ss
sbb
jl
add
dec
mov
pop
adc
popa
dec
jge
sub
repz
shlb
decl
inc
adcb
pop
dec
mov
in
mov
xor
out
test
add
jmp
hlt
cmp
insl
xor
hlt
jns
vunpcklps
loopne
add
sbb
jecxz
push
mov
cmpsl
mov
fnop
mov
data16
push
lods
jg
sub
gs
rcrl
push
pop
add
push
mov
outsb
jnp
in
mov
xchg
in
or
mov
cmp
mov
push
fidivrl
add
sbb
push
mov
cmpsl
fstp
xchg
xor
inc
imul
jno
test
sbb
lahf
cs
sub
dec
push
movsl
mov
add
mov
mov
lock
mov
mov
ja
imul
rcll
sbb
push
repnz
add
sub
pop
pushf
inc
insl
loopne
and
mov
mov
outsl
clc
lods
shr
shlb
les
xchg
mov
leave
fisubs
push
xlat
insl
jnp
mov
mov
dec
stos
inc
jge
loope
in
lcall
cmp
inc
adc
dec
int
xor
or
imul
addr16
sub
xchg
fyl2x
mov
repnz
cs
pop
or
jae
sub
pop
imul
loope
divl
stos
adc
xchg
je
test
dec
or
aaa
or
cwtl
fldenv
and
sbb
xor
sar
incb
es
xchg
pop
int
lods
fistl
aam
dec
push
es
out
enter
call
fbld
cmp
cwtl
mov
mov
xor
imul
outsl
add
jge
xchg
outsb
adc
in
adc
leave
mov
mov
faddl
leave
pop
mov
jb
pop
and
pop
dec
fcoml
sub
sbb
rorb
xchg
mov
std
dec
aas
mov
push
xor
rcll
test
lret
xabort
xor
xor
and
inc
xchg
test
popa
inc
add
pop
xchg
add
das
pushf
fisttps
jb
mov
hlt
mov
and
pop
jnp
push
jmp
test
pop
test
mov
das
pop
jecxz
mov
push
or
nop
jne
les
pop
fyl2xp1
xchg
fs
mov
fs
incb
pop
adcl
test
push
mov
rorl
xchg
clc
adc
cmp
inc
mov
fsubl
out
test
cmpsl
rorb
roll
inc
aas
or
mov
in
fs
mov
push
mov
jno
divl
or
cltd
ljmp
cwtl
insb
fmull
rclb
xchg
fwait
sub
enter
out
xor
jne
and
add
dec
mov
lahf
or
cmpsl
movaps
push
sbb
push
fwait
dec
fs
mov
clc
aad
cmp
mov
movsl
inc
xchg
hlt
jle
out
pop
push
leave
mov
xchg
adc
cmc
push
clc
outsl
push
add
out
in
inc
jmp
call
imul
jne
ss
orb
mov
push
dec
in
mov
jge
jae
fsubrl
mov
rcrl
mov
adc
ret
in
in
jmp
pop
out
pop
enter
mov
cmp
mov
dec
pushf
xchg
hlt
pop
adc
loope
cmp
sbb
push
stc
and
pop
and
push
or
in
scas
jg
adc
idivb
jbe
jo
bound
cmp
add
xchg
fcompl
hlt
pop
sbb
xchg
pop
mov
mov
mov
out
mov
cltd
cmp
mov
test
in
ss
dec
sarl
lret
jecxz
mov
fiadds
out
sbb
ja
push
imul
repz
imul
inc
add
repz
test
mov
rcrb
scas
mov
clc
sbb
jp
cmp
je
mov
les
les
add
lret
cld
add
jge
hlt
xor
cli
cmp
mov
addb
cwtl
out
icebp
addr16
negl
repz
sbb
lcall
test
jg
and
nop
mov
adc
int3
mov
dec
mov
jle
mov
push
jnp
sbb
cmpb
mov
lods
aad
dec
cmp
add
mov
bound
andl
movsb
inc
insl
mov
fsubrl
loopne
dec
fwait
scas
fisttps
add
xchg
xor
jbe
dec
out
sub
aad
pop
mulb
imul
or
test
push
push
and
dec
sub
pop
add
inc
iret
dec
xor
enter
shrl
pop
xor
loopne
imul
clc
pop
out
dec
das
cmp
adc
push
mov
outsl
or
add
mov
imul
out
jecxz
mov
mov
dec
js
stos
xchg
push
fwait
mov
add
cltd
push
jnp
sub
iret
cmc
in
fisubl
push
sbb
fldenv
jecxz
xor
cs
pushf
adc
ja
out
pusha
adc
mov
cmpsb
fimull
iret
pusha
xor
push
clc
push
call
jmp
jns
out
bound
inc
jle
dec
out
or
mov
mov
jmp
xchg
outsl
sub
inc
pushf
popf
shll
mov
mov
cwtl
jl
enter
pop
ljmp
sarb
mov
cmp
jge
mov
push
push
adc
jmp
sub
sub
sbb
jmp
push
cli
ja
mov
jge
insb
xlat
popf
jl
sbb
jmp
adc
les
mov
adc
cmp
mov
jl
repz
test
and
fisubl
inc
loopne
test
dec
push
cld
push
inc
cli
jnp
xor
sti
int
je
popl
stos
stos
xor
xor
mov
xorb
xchg
cmp
pop
rclb
dec
push
mov
push
mov
cli
cmc
fdivs
das
out
in
add
add
sbb
pusha
dec
pop
dec
adc
imul
ljmp
mov
adc
mov
les
mov
lea
insl
decb
fstps
sbb
neg
push
sahf
inc
stos
shll
fbld
jns
test
std
imul
je
or
push
fsubl
push
scas
mov
data16
cmp
popf
cmp
shrb
into
insl
pop
pop
xor
mov
jecxz
mov
repz
mov
mov
in
xor
aaa
sahf
push
and
jne
jns
sbb
lcall
dec
inc
push
nop
dec
outsb
repz
scas
out
cmp
xchg
cmpsb
scas
mov
mov
mov
jae
jmp
adc
fists
adc
adc
mov
idivl
mov
cmp
rcll
fidivrs
and
insl
mov
stc
out
pushf
lahf
dec
out
divl
sbb
jne
push
push
mov
add
push
mov
sub
xor
lods
or
or
add
xor
in
add
cmpsb
push
push
dec
ss
rep
loop
pop
mov
xlat
pop
fldcw
cld
xor
mov
in
push
lods
ja
mov
mov
xchg
out
out
jge
adc
add
adc
cmc
adc
and
cli
gs
js
out
es
xor
sarb
arpl
pop
sysenter
loope
repz
and
out
dec
jo
aaa
fbstp
adc
lahf
cli
inc
or
es
pop
pop
test
mov
scas
inc
arpl
adcb
into
imul
scas
pop
divl
pop
sub
jg
cli
sub
out
lods
fmul
pop
inc
stos
sbb
es
mov
inc
jns
and
mov
push
jecxz
scas
push
adc
lret
sbb
pushf
cmp
xor
shll
cmp
stc
cmp
xchg
dec
movsl
jge
xchg
mov
and
mov
ss
push
loop
arpl
out
data16
das
pop
pop
cmc
or
adc
xchg
fimuls
lret
mov
pop
pushf
pop
add
mov
xchg
pop
lds
add
lods
mov
xor
test
mov
mov
popf
xor
pop
xchg
fs
loop
cmp
mov
in
mov
push
shr
add
addr16
clc
arpl
sbb
adc
add
iret
inc
or
mov
pop
pop
sti
sub
mov
ds
fwait
ja,pn
dec
aam
jp
jecxz
subb
or
pusha
scas
mov
movsl
or
cld
fnstsw
jmp
jecxz
ljmp
adc
popf
jae
lret
xchg
pop
mov
dec
inc
mov
sub
inc
shl
dec
jo
popa
or
stos
loop
sub
sbb
xchg
or
movsb
mov
loopne
mov
and
std
jns
and
ret
inc
mov
xor
jb
pop
call
push
sbb
pop
lods
mov
inc
repz
inc
and
cmp
mov
fidivrs
ja
push
int
addb
insl
push
and
movsb
outsb
inc
sar
icebp
arpl
and
out
lret
std
add
mov
pop
mov
mov
xchg
fisttps
xor
pop
aad
jns
daa
inc
icebp
addr16
mov
mov
ljmp
cmp
push
mov
test
push
ficomps
das
outsb
jecxz
pop
sub
cs
mov
push
sbb
push
mov
jbe
test
fcmovnu
sbb
cwtl
test
xor
arpl
cmc
ret
jp
outsl
push
aam
or
push
leave
xchg
mov
mulb
loop
jbe
gs
xor
cmp
rcrl
jb
lret
enter
dec
xor
stos
push
jne
into
sbb
jp
movsb
insb
push
push
xchg
adc
sbb
push
dec
je
jl
push
xor
clc
lds
pop
lock
stos
scas
call
fmuls
rep
dec
xchg
mov
jl
xchg
scas
sbb
rol
inc
mov
ja
fprem1
mov
mov
adc
aad
pop
pop
add
mov
jnp
and
sbb
sbb
rclb
cmp
inc
je
js
cmp
adc
pop
rcll
pop
mov
ror
mov
out
sbb
fbld
adc
xchg
jg
outsb
pop
or
mov
iret
inc
jg
ljmp
popf
mov
lods
roll
lds
pop
mov
int3
jecxz
cmp
mov
sub
clc
in
pop
lcall
enter
ficompl
add
adc
xlat
inc
enter
lahf
cltd
lret
or
psubsw
mov
xchg
cwtl
stc
es
dec
jmp
push
aad
cltd
sbb
mov
cmp
inc
dec
and
push
cmpsl
adc
jne
jge
add
scas
je
out
outsb
mov
cmpsb
addr16
gs
jne
roll
mov
jmp
mov
xor
lahf
gs
jp
sub
cli
add
std
pop
inc
pop
mov
lret
sub
dec
inc
or
mov
mov
int3
out
icebp
pop
jnp
dec
neg
roll
xlat
repnz
std
cmp
cmp
aaa
popa
testb
imul
jge
mov
push
mov
leave
int3
fnstcw
push
dec
jmp
pusha
outsl
jmp
popa
loope
inc
data16
js
xlat
xchg
and
flds
sti
fstpl
add
dec
testl
dec
lahf
sar
mov
test
lret
mov
test
in
jp
pop
shlb
and
lds
outsl
sti
aaa
ror
cs
mov
mov
xor
xchg
inc
or
sahf
sbb
push
iret
movups
mov
outsl
jg
test
shlb
mov
sti
gs
add
or
xor
mov
fcmovu
mov
mov
std
int
das
in
xchg
icebp
in
dec
mov
into
cld
out
dec
mov
int
pushf
dec
and
sub
push
ficoml
repz
daa
out
sbb
outsb
inc
fbstp
mov
pop
push
stos
test
xor
addr16
push
sahf
xor
int
mov
mov
mov
xchg
das
nop
in
cmp
jle
lea
adc
inc
stos
jbe
cli
lods
sbb
fldl
in
ret
adc
mov
pushl
xlat
pop
sbb
ficoms
pop
pushf
in
mov
pop
test
mov
nop
mov
lock
sub
add
adc
and
fcmovne
cmp
xor
and
stc
lret
ja
loop
sbb
sti
call
or
pop
loope
sbbl
pusha
bound
loop
inc
and
sbb
dec
push
cmp
fwait
or
push
cmp
mov
jne
scas
fbstp
ja
mov
inc
adc
popf
push
and
or
loopne
adc
imul
pop
fwait
xorb
pop
movsl
inc
in
jmp
mov
lods
in
ss
cmc
adc
adc
fdivl
push
test
push
std
cmpsb
cmpl
outsl
mov
xchg
addr16
sbb
ret
jg
jnp
ret
push
push
cmp
dec
xchg
repz
mov
or
xor
mov
dec
dec
mov
out
repnz
subb
cmp
fisttpl
sti
jbe
xor
cmp
jg
mov
push
mov
add
and
dec
push
lods
call
xchg
stc
xor
pop
jmp
cmp
xchg
xor
jmp
fdivl
inc
ljmp
insl
pop
mov
jnp
mov
jl
jmp
sub
lcall
mov
inc
sbb
dec
inc
sub
ss
or
adc
dec
and
shll
sbb
jno
adc
push
lea
and
add
fwait
xchg
push
rcr
mov
push
xchg
inc
xchg
iret
sub
sbb
mov
rorl
and
add
cmp
dec
jp
shlb
mov
outsl
xor
push
aam
cmpsl
fcomi
pop
pop
xor
xchg
xchg
loop
sub
push
lret
gs
mov
jmp
mov
cmpsb
or
rcll
mov
stos
xchg
mov
ljmp
dec
push
dec
hlt
stos
movsb
out
mov
mov
das
sub
sbb
mov
int
arpl
adc
pop
cmp
push
out
xchg
jp
cmp
mov
xor
fimuls
inc
sti
push
sbb
sbb
pushf
jl
in
lods
shl
insl
xlat
inc
outsb
shlb
mov
fidivrs
out
sub
push
cmp
push
add
or
mov
mov
jnp
cmpsb
mov
fnstcw
int
cs
das
inc
imul
jecxz
rcrb
jg
inc
dec
sbb
and
sbbl
adc
scas
inc
inc
add
lahf
xchg
add
jecxz
mov
push
xchg
jbe
cli
jecxz
sti
cmpsl
add
mov
cltd
scas
mov
aam
mov
ss
imull
push
pop
popf
ret
dec
fidivrs
out
ljmp
xchg
push
and
jnp
xchg
pop
sbb
mov
sub
mov
or
enter
std
pop
lcall
in
fnsave
lods
mov
aaa
jge
jl
adc
sar
inc
ss
xchg
push
shrb
int3
sbb
xchg
mov
xlat
mov
loope
scas
fwait
lahf
cmp
push
xor
mov
jge
aaa
and
mov
pop
inc
and
add
or
test
pop
jo
xor
push
mov
inc
cmp
imulb
inc
fidivrs
je
push
push
test
insl
aam
cltd
mov
test
inc
call
push
cld
lds
lretw
inc
sub
sbb
les
mov
mov
and
sbb
dec
jnp
jmp
dec
fwait
mov
rolb
daa
mov
gs
jnp
jae
or
mov
lcall
xor
cmp
adc
shrb
cmp
pop
jne
lea
aad
adcb
decb
mov
xchg
jmp
pushl
xor
xor
xchg
pop
aad
ss
jnp
or
cmpsl
scas
ljmp
pop
mov
dec
or
fldenv
jg
inc
aaa
jle
add
mov
or
or
aaa
inc
clc
lea
xchg
or
jbe
mov
shll
cli
xor
in
inc
jnp
loopne
and
and
mov
dec
rcrb
push
bound
pop
stc
jmp
not
test
sahf
mov
test
mov
sub
jle
out
repz
lcall
cli
fisubl
mov
popa
mov
je
lods
add
fcomps
mov
xor
sahf
subl
push
jno
pop
jb
popa
jg
jmp
xchg
pop
cmp
lcall
leave
mov
cltd
jno
sub
push
rcrl
and
out
mov
sbb
sub
cmp
or
mov
push
xor
fldcw
cli
lock
pop
popa
pop
add
cmp
push
or
adc
fildll
cmc
rorb
dec
push
rcll
test
lcall
imul
cltd
add
outsl
adc
mov
stc
and
xchg
leave
push
cld
push
push
lock
jnp
pop
ds
ljmp
mov
adc
or
add
pop
cmpsl
ja
ljmp
dec
adc
inc
xchg
repz
and
xchg
sbb
sub
mov
inc
fsubrs
movsl
cwtl
imul
inc
out
pop
cmp
or
and
js
jl
les
or
sub
jo
subl
rorl
shll
push
jno
fstpl
or
push
jp,pn
inc
jnp
insb
and
adc
addr16
xor
imul
jo
mov
mov
fsubp
pop
xlat
add
xchg
jmp
lret
mov
aaa
jecxz
xchg
mov
dec
sub
adc
rorb
es
aam
fcompl
testb
mov
mov
fmuls
or
xchg
cmpsb
mov
into
xchg
jg
push
lret
shlb
decl
push
aaa
jge
hlt
and
dec
fiadds
dec
imul
cmc
cmp
out
xchg
jbe
movsb
ljmp
imul
pusha
cmp
push
or
mov
adc
sbb
cltd
mov
adc
pusha
xchg
movsl
lret
pop
inc
mov
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
faddl
dec
cmpsl
adc
pop
bound
pop
bound
int3
out
iret
push
sub
in
push
cmp
aad
mov
out
cwtl
gs
out
addr16
mov
int
stc
icebp
xor
stos
in
mov
cltd
pop
inc
out
jo
cmp
or
repz
test
pop
enter
adc
and
rcrl
inc
test
loop
filds
push
cld
les
pop
xchg
fsts
fistpl
push
ret
and
out
mov
hlt
mov
lds
lahf
mov
hlt
push
in
push
and
std
adc
or
leave
rcpps
push
leave
test
incb
xor
push
push
dec
lret
pushf
push
jns
mov
pop
mov
sbb
xchg
mov
cmc
iret
inc
or
jle
mov
push
outsb
cmpsb
sub
shr
push
add
lret
stos
mov
xor
mov
clc
iret
lea
mov
jb
lcall
out
mov
add
test
in
push
pop
ja
repz
pop
inc
sub
push
hlt
out
xchg
pusha
lods
inc
loop
cmpsb
adc
cmpsb
dec
add
mov
cmp
cmpsb
shlb
in
mov
bound
fildll
mov
clc
xchg
jb
iret
dec
dec
test
clc
dec
cmp
cli
xor
push
xorl
std
incb
cmpsb
ljmp
outsb
jne
popa
pop
sbb
adc
pop
sarb
adc
sbb
xchg
mov
dec
icebp
insl
les
add
add
cmp
lahf
mov
in
out
rorb
orl
cld
and
mov
cmp
mov
mov
xor
sub
and
fdivrl
jmp
push
mov
mov
mov
pusha
and
push
push
test
pop
pop
jle
cld
pop
mov
aad
lds
mov
call
dec
xchg
lods
sub
xor
dec
sbb
mov
mov
decb
xchg
sub
iret
add
dec
je
push
icebp
enter
aad
mov
test
shll
stos
subl
addb
rcll
sbb
scas
jae
scas
jl
cmpsb
cmpsl
lods
shl
clc
inc
aaa
out
xlat
cmp
loop
pop
push
adc
ds
andb
nop
ljmp
pusha
stc
push
cmp
daa
push
pop
out
push
sbb
cld
xchg
popf
xchg
mov
orl
aad
ds
hlt
sub
popa
adc
fs
pop
addl
jae
jle
xor
adc
out
iret
pop
inc
push
cmp
ljmp
inc
movsb
test
push
mov
je
mov
rorb
adc
lret
jns
stos
xor
fdivrs
adc
dec
or
jle
shlb
inc
inc
inc
push
mov
xchg
dec
pop
xlat
sbb
xchg
out
and
xchg
mov
testl
mov
out
jne
mov
or
cmpsl
adc
sub
xchg
mov
faddl
jo
test
sti
inc
fcoml
lods
dec
xor
xchg
add
mov
push
dec
and
outsb
aam
push
sub
scas
sub
icebp
hlt
test
cmpsb
test
and
mulb
xchg
repnz
xchg
inc
cmc
decb
lods
iret
into
mov
ss
adc
xchg
or
push
mov
mov
fdivs
dec
call
sbb
mulps
loopne
clc
push
dec
xchg
dec
popa
es
push
add
add
arpl
push
jb
cltd
push
outsb
fisttpll
popa
or
jp
xchg
push
scas
jle
sbb
loop
push
xchg
mov
jge
mov
inc
adc
xor
or
xchg
scas
sahf
mov
rcr
sub
cmc
js
sub
or
faddp
movntq
out
add
mov
ja
fwait
ljmp
cmp
cmp
sub
int
cmp
cli
in
add
inc
jnp
jecxz
adc
push
push
out
dec
pusha
mov
int3
rclb
xor
enter
xchg
fisubrs
mov
pop
bswap
dec
jns
push
ds
or
lds
bound
cmpsl
lods
mov
sub
add
xor
cltd
aas
cmpsb
outsb
add
les
push
pop
push
scas
inc
mov
cli
imul
cmpsb
sbb
cld
pop
outsl
xorl
mov
add
or
mov
pop
movsl
out
incb
testl
sti
shll
push
dec
test
fstp
xor
lahf
rclb
push
xchg
or
fwait
or
mov
jl
cli
add
fildl
popa
lcall
fstps
inc
and
inc
loop
push
out
sub
xor
addr16
xor
sub
ss
sbb
mov
mov
jne
sbb
orl
iret
or
push
and
sbb
add
iret
loop
push
cwtl
jne
cmp
lret
sbb
in
cs
push
push
mov
sub
in
mov
call
mov
ljmp
jge
mov
mov
movsb
stos
pusha
les
sub
aas
xor
pop
xchg
stos
or
out
and
pop
ret
insl
mov
fwait
cli
lcall
stc
rcrl
arpl
nop
sbb
aaa
inc
xchg
das
sbb
xchg
int3
in
push
movsb
scas
test
xor
js
sub
inc
ds
mov
mov
mov
and
or
lret
cs
xchg
lret
push
add
pop
icebp
fistpl
push
pop
pop
and
scas
and
pushf
je
pop
dec
jo
add
jo
mov
and
jmp
leave
stos
notl
mov
ljmp
xchg
cmp
test
xchg
mov
cmc
ss
movsb
mov
and
mov
sbb
mov
call
add
xor
mov
arpl
xlat
pop
cmpb
xorl
xchg
rcll
lock
jns
out
fcmovne
jo
nop
js
stos
mov
notb
sub
inc
push
repz
jle
push
out
dec
fs
out
xor
pop
push
dec
dec
test
shll
notb
int
xor
stos
rclb
neg
scas
add
arpl
daa
jl
sbb
aad
fs
data16
daa
push
bound
loope
stc
add
shrb
push
dec
and
mov
aas
inc
fnstcw
or
decb
xchg
lods
jbe
add
xchg
push
cmp
in
in
and
ljmp
push
sub
jle,pn
daa
repnz
dec
ja
adc
adc
inc
pop
or
sahf
dec
jbe
pusha
push
movsl
les
mov
scas
mov
rcl
repz
daa
mov
mov
gs
notb
enter
xor
and
inc
test
jmp
pop
sbb
loop
sub
add
stc
mov
cmp
add
fisttpll
push
mov
jl
ljmp
add
rcrb
xchg
mov
or
push
push
xchg
andb
cmp
outsl
imul
sub
cmpsb
xor
adc
sbb
sub
mov
sbb
xchg
jp
push
aad
test
out
scas
js
movsb
jbe
jb
int
and
inc
movsl
dec
push
xchg
and
popf
xchg
mov
fsubrl
out
insb
lret
pop
push
outsl
bound
stos
jg
gs
cmc
and
mov
fcoms
push
leave
inc
add
adc
xor
push
push
cmp
fisubl
int
cs
mov
js
fistl
add
call
or
inc
dec
cmc
push
rcrl
xor
repz
jmp
shll
subb
or
push
int
dec
arpl
inc
imul
rclb
pushl
pop
fstpl
add
push
in
sub
fisubs
arpl
push
leave
popa
xchg
xchg
andl
mov
ret
xor
enter
add
inc
sub
sarb
lcall
out
dec
mov
mov
fdivl
insb
sahf
jp
add
in
call
fisubrs
push
sbb
sbb
push
fcomps
cld
cs
popa
subb
rcrb
cmpsb
sbb
push
mov
xor
jge
push
ljmp
push
push
cwtl
test
lret
sbb
into
pusha
add
test
xor
jg
xor
inc
incl
insb
lret
popl
jge
fsub
inc
incb
mov
push
out
stc
cmp
dec
roll
shll
jns
aam
ljmp
repnz
mov
jbe
leave
dec
loopne
mov
cmpsb
test
adc
or
nop
jae
cs
sbbl
imul
shrl
je
add
add
cmp
sbbb
cmp
and
sub
cmp
dec
and
nop
dec
jae
mov
movsb
pop
ret
pop
xlat
pop
sub
mov
mov
loopne
inc
pop
mov
jp
mov
dec
out
mov
xchg
jb
xchg
pop
or
adc
jmp
ret
mov
bound
in
andw
lock
adc
jo
or
lds
or
mov
push
addl
jg
shl
insb
jmp
repz
insl
push
jns
movq
push
sbb
jl
jmp
insb
jnp
push
pop
notl
mov
mov
lcall
jo
dec
xchg
lea
leave
negb
xchg
out
pop
xchg
or
mov
lret
sbb
jmp
aam
sub
insb
sub
jle
xchg
cmp
and
out
hlt
cld
xor
aam
cmp
sbb
fisubs
loope
imul
mov
idiv
ret
inc
sub
les
jne
addl
mov
loopne
pop
clc
pop
xchg
outsl
getsec
xlat
jno
cli
dec
in
lcall
mov
imul
push
movsb
jnp
pop
and
ds
dec
dec
xor
ja
add
cmpl
or
stos
sbb
mov
cmp
mov
xor
push
fsubr
rsm
cmp
xchg
outsl
or
add
push
shlb
pop
mov
xor
aaa
cmpsb
popf
or
je
shrl
movsl
mov
jmp
jg
mov
cmp
icebp
push
xor
inc
inc
cmc
sub
and
mov
xchg
mov
ss
data16
xor
fildl
pop
icebp
xchg
fildll
test
sub
mov
out
subb
dec
insl
int
adc
cmpsb
mov
xor
sbb
fnstenv
cmp
movsb
mov
clc
sti
jg
loop
lret
push
je
cld
jge
sbb
inc
call
xor
mov
push
xchg
jne
mov
ret
mov
xor
lcall
sbb
push
jb
mov
xchg
popw
les
xchg
xchg
incl
mov
cld
xchg
test
sub
pop
mov
cld
hlt
sbbl
xchg
loopne
cwtl
test
pop
push
jns
out
shr
xchg
scas
cmc
scas
mov
divl
dec
pop
int3
fwait
fwait
in
notl
sub
xor
pop
sbb
lahf
in
cmp
sub
out
mov
arpl
xor
sbb
out
add
idiv
pushl
jne
fimuls
lret
testl
aas
fldt
pop
mov
int3
pop
inc
adc
sub
mov
mov
mov
insl
cmp
mov
scas
cmpsb
mov
mov
adc
je
jo
mov
out
cmc
inc
mov
jo
push
in
sbb
and
pop
xor
inc
inc
dec
jo
lahf
lock
sbb
pop
aam
or
nop
rorb
adc
cld
and
jg
push
mov
cmp
pop
mov
loope
xchg
test
mov
and
lret
push
mov
and
cmpsl
push
add
clc
enter
xchg
inc
outsb
aaa
mov
mov
loop
xor
lock
pop
daa
pop
rcpps
xchg
dec
cmpsb
repz
sub
and
sbb
mov
adc
sti
scas
imul
leave
cltd
cmpb
inc
sbb
pop
mov
fwait
aas
cmc
sbb
lahf
icebp
ja
mov
push
in
jp
xchg
sbb
and
sbb
cmp
and
xor
rorb
cld
jb
rclb
cmp
pop
sbb
int
loopne
and
xchg
pop
outsb
xchg
mov
int
push
lret
icebp
les
lret
lea
cwtl
shrb
in
out
xchg
in
adc
push
cmp
cltd
push
xchg
sub
imul
pushf
push
mov
shrl
fwait
sbb
outsb
and
std
xor
fistpl
lods
mov
ljmp
cli
sti
add
sbb
leave
mov
aas
xor
mov
inc
dec
or
fidivs
ficomps
cmp
std
push
stc
aaa
mov
mov
movsl
faddl
add
std
or
xchg
mov
push
xor
or
lahf
lret
aaa
ret
fcoml
jb
inc
fisttps
lahf
fsubrl
dec
adcb
rcr
std
xchg
into
cmpb
cmp
xor
push
add
into
inc
cmc
xor
les
xchg
cmc
icebp
shll
dec
mov
pushf
adc
repz
scas
ljmp
fldenv
jmp
xchg
cmpsb
lcall
cltd
jne
pop
ret
lret
xchg
imul
out
je
fsubrs
test
jb
loop
add
ret
imul
jbe
bound
jnp
das
mov
sub
dec
adc
inc
outsb
add
jns
xchg
push
loop
in
jle
stc
pop
inc
mov
add
jge
lds
fsub
sbb
xchg
popa
ret
xchg
adc
xor
and
into
loop
pushl
lret
sbbb
push
cmp
jp
and
pop
cltd
or
push
mov
xor
std
into
mov
dec
push
sbb
sbb
mov
jbe
xor
imul
sub
xchg
sbb
fbld
es
fbld
loope
cmovp
decb
cmp
andl
xor
push
cmpsb
cli
sbb
divb
cs
movsb
lock
rcrl
sahf
dec
jg
xchg
lcall
in
outsb
ffreep
loop
push
mov
sbb
jno
cmp
xchg
aam
inc
ret
and
inc
outsl
enter
push
push
loope
in
and
cltd
pcmpeqw
cmp
cmpsl
mov
sub
dec
adc
imul
inc
jo
bound
push
sub
sti
or
xchg
and
lcall
jnp
outsb
pop
cmp
mov
mov
mov
xorb
fldln2
mov
adc
mov
das
outsb
push
push
in
imul
ja
inc
pusha
rcrl
or
aad
insb
adc
pusha
inc
loope
jle
adc
sub
push
mov
jae
pop
clc
dec
pop
lea
mov
scas
sub
cmp
sub
cmp
sub
leave
ss
pop
xchg
shll
inc
mov
adc
lcall
and
push
mov
in
testl
test
mov
imulb
sub
out
dec
jp
dec
xchg
aam
mov
mov
sub
push
jns
aaa
test
inc
and
push
movl
adc
jecxz
sbb
dec
push
dec
leave
popl
mov
sahf
test
mov
dec
bound
or
hlt
test
lea
lods
or
mov
jnp
pop
rclb
roll
xor
es
mov
cmpsl
iret
pop
mov
inc
mov
jo
loop
outsl
cmp
jae
scas
lea
pop
push
loop
jb
inc
dec
cli
push
dec
mov
stc
jb
aaa
push
xchg
cltd
dec
lret
pushf
mov
imull
mov
xor
je
pop
xor
add
xor
sbb
dec
cltd
cmp
adc
fsubrl
xchg
pusha
push
mov
ret
sub
mov
lret
pushf
in
rclb
ds
dec
inc
add
pop
sub
outsl
adc
out
sbb
stos
mov
push
hlt
inc
push
mov
shll
xchg
sub
std
imul
xor
or
jg
xor
or
add
inc
in
jg
pop
or
xchg
std
aam
push
mov
lock
enter
out
iret
test
jecxz
sbb
inc
sbb
push
imul
pushf
push
aaa
xlat
sbb
lock
hlt
sub
nop
adc
test
dec
xchg
push
out
or
mov
mov
sbb
fsubl
mov
bound
push
adc
in
rorl
or
xor
in
fnstsw
shrb
ljmp
sub
push
dec
jns
int3
ja
jo
scas
sbb
fdivrl
scas
pop
dec
push
lds
push
fisubrs
jb
fbld
loopne
rolb
sti
cli
sub
cmp
push
inc
sbb
shlb
dec
insl
in
iret
push
jbe
jns
pmullw
sarl
jge
ljmp
movsb
cmp
jecxz
daa
jmp
sbb
out
lahf
packsswb
pushfw
mov
pop
pop
mov
out
lock
mov
cli
mov
imul
not
jmp
aam
jg
sub
adc
push
andl
push
pop
ret
sti
mov
xchg
in
adc
jo
ss
repnz
xchg
push
mov
xlat
mov
xchg
or
dec
rcr
popf
xchg
decl
pop
incl
les
cmc
je
xchg
cmp
inc
xchg
mov
cltd
pop
mov
rolb
nop
hlt
testb
or
sub
mov
pop
jmp
jg
push
mov
shrb
dec
testb
mov
adc
imul
add
mov
pop
or
sub
push
adc
mov
jo
and
mov
out
jmp
push
push
push
add
push
stos
in
into
mov
int
lahf
mov
jnp
mov
jne
mov
rcrb
scas
aam
shrl
cmp
push
lea
push
test
fs
mov
rcrb
add
iret
imul
cmp
inc
dec
jbe
pop
rcl
sbb
adc
icebp
cltd
ss
jb
mov
jmp
fs
cmpsl
enter
cmp
push
pop
cs
add
cmp
mov
ja
imul
or
cmpsb
outsb
repz
xorl
push
cwtd
mov
xchg
sub
sub
lret
cltd
mov
jo
cs
or
inc
test
xchg
sbb
jl
in
adc
ja
push
mov
and
sub
add
mov
out
divl
rolb
push
es
dec
shlb
add
cltd
mov
inc
xor
ja
inc
js
xor
adc
xor
xlat
xchg
in
sbb
mov
jle
mov
mov
popa
shl
mov
mov
fbstp
cmp
jae
adc
sbb
dec
nop
sbb
lcall
adc
adc
lods
or
dec
mov
mov
lret
dec
les
lods
pop
leave
jle
mov
xor
mull
adc
sbb
dec
dec
inc
adc
in
jmp
arpl
bound
xor
rol
add
dec
cltd
arpl
lcall
mov
insb
shll
lcall
sbb
fst
sub
fcoml
xchg
xor
pop
xchg
dec
out
popa
insl
lods
dec
mov
jl
pusha
jns
testb
jb
rcrl
mov
push
lods
add
jns
repz
mov
enter
lock
mov
in
inc
pop
sbb
popf
in
iret
stos
popa
xor
pop
in
cld
jno
aad
or
add
ficoml
mov
mov
or
jp
jp
dec
inc
jmp
sub
or
cs
lret
das
or
cmc
or
cmpl
cmp
mov
and
cmp
jnp
xchg
lahf
push
scas
and
es
ret
lret
xor
loope
jo
inc
andb
jne
je
std
scas
mov
sahf
dec
mov
dec
in
jne
mov
in
mov
mov
jge
cwtl
fsubrl
push
pop
les
mov
aam
daa
aam
cwtl
xor
mov
xchg
xorl
test
mov
mov
xor
cmpsl
outsb
clc
aaa
test
mov
xor
sbb
fld
dec
cltd
xchg
cltd
repz
movups
cli
fs
inc
xchg
sahf
lret
add
or
or
mov
icebp
and
pusha
cmpsb
or
icebp
icebp
std
dec
mov
jg
test
mov
ljmp
imul
or
mov
das
xor
jbe
sbb
pop
or
aam
and
in
add
cmp
fmull
pop
ljmp
hlt
pop
pop
hlt
jmp
xor
test
mov
pop
dec
movsl
and
fs
mov
jae
sub
out
std
fisubl
xor
fs
jecxz
cmp
cmp
inc
inc
sub
mov
mov
mov
adc
or
and
scas
clc
jbe
cmp
pop
jne
icebp
push
add
and
sub
xchg
jecxz
xchg
jmp
movsl
scas
in
push
inc
aad
test
cmp
dec
aas
jnp
fwait
stos
adc
adc
bound
in
jl
cmc
scas
adc
lea
xchg
dec
xlat
flds
push
dec
dec
ja
ja
dec
cmc
sarb
insl
inc
sbbb
fsubrs
adc
rolb
insb
cwtl
xchg
sbb
test
xchg
cmp
out
mov
mov
sbb
aam
sbb
mov
rcrb
mov
add
stos
dec
pop
bound
je
push
mov
movsl
adc
jae
push
jno
jnp
in
jno
mov
scas
jb
push
and
xchg
push
mov
xchg
dec
cmp
std
mov
js,pt
fsubrl
push
mov
flds
xchg
stos
pop
call
stos
jbe
pop
cli
mov
mov
pusha
mov
and
fists
sbb
nop
fs
stos
out
out
into
push
sbb
sti
sub
add
pop
pop
sub
test
push
push
cld
movb
cwtl
mov
cmpsl
cmc
fldcw
leave
enter
sti
jmp
movsb
mulb
cwtl
cmp
add
outsb
mov
adc
mov
sarl
mov
sbb
jmp
out
mov
mov
dec
sbb
cwtl
dec
mov
je
mov
fimull
add
lret
cmc
sub
sbb
mov
call
pusha
dec
cmp
xorb
aam
lds
xchg
or
in
lods
mov
dec
iret
jno
or
mov
negb
stos
clc
mov
cmpsl
int
sbb
lock
or
dec
outsl
and
test
xchg
test
cmpsl
cmpsl
outsb
repnz
or
push
mov
and
add
jbe
xor
pop
cltd
out
daa
scas
cld
mov
stos
out
xchg
dec
sub
inc
sti
and
cmp
loope
xchg
mov
rorl
aam
pop
sbb
mov
xchg
nop
push
movsl
aam
jne
sbb
lea
jl
mov
stos
loopne
pop
sbb
xchg
pop
adc
xchg
and
sub
dec
add
pop
inc
inc
jmp
jecxz
loope
insb
ss
jno
inc
xor
xor
test
fwait
pushf
mov
cli
sbb
sub
jno
in
repnz
stc
aas
inc
sub
out
jno
push
into
or
or
shlb
mov
movl
sbb
inc
test
pop
push
sbb
and
out
outsl
push
popf
popf
xchg
addr16
loopne
fdivr
xchg
add
cmp
test
fsubl
rorl
fstpt
mov
xor
inc
sbb
mov
sbbl
fdivs
add
clc
repnz
sub
xlat
cmp
sub
mov
push
adcl
adc
sbb
lahf
gs
test
pushf
sahf
pop
mov
mov
xchg
loope
rcll
in
mov
decl
jmp
xor
mov
cld
xorb
inc
xor
push
cmpsb
scas
add
push
lret
leave
in
jle
stc
lahf
mov
aad
and
insl
dec
ret
fstpl
dec
pop
loop
xchg
cltd
add
mov
inc
notb
imul
push
or
iret
sbb
insb
push
add
sub
fisttpl
pop
mov
xchg
clc
cmp
in
lret
pop
fnstcw
xor
lret
es
mov
mov
mov
add
pop
inc
mov
mov
stc
insl
inc
not
sbb
sbb
loope
mov
xchg
lret
pushf
enter
mov
add
cmpsl
pop
mov
mov
outsb
xor
xchg
bound
hlt
adc
movsb
and
inc
fwait
rorl
xor
rcrl
push
xor
sub
daa
add
add
addr16
add
call
xchg
cmp
cmp
daa
mov
popa
fs
pop
mov
or
xchg
les
add
xor
jge
stos
aam
dec
jae
adc
dec
addr16
ret
push
movlps
rolb
sbb
arpl
or
clc
cmp
inc
int3
xorl
pusha
into
adc
aaa
dec
rep
xchg
mov
push
xchg
je
loop
pop
dec
sbb
ret
mov
scas
pop
rcl
pop
pop
jbe
cs
decl
pop
je
mov
mov
shl
xchg
cmp
jle
pop
int
xor
stc
and
lods
iret
repnz
dec
outsb
lcall
jmp
lret
pop
mov
ret
push
dec
lahf
and
negl
cmp
pop
std
sub
and
or
dec
in
dec
or
sub
add
inc
pop
add
mov
dec
scas
lret
lock
sbbb
nop
aad
mov
lahf
dec
lret
add
push
jb
cmpsb
scas
int3
fs
js
mov
fdivrl
inc
inc
cmp
ror
mov
jmp
clc
xchg
adc
cs
adc
sbb
inc
mov
jbe
loop
adc
imul
mov
addb
cmp
leave
repnz
test
and
jne
add
js
adc
loopne
jp
sub
and
ret
cltd
mov
jae
stc
sub
fdivrp
xchg
xchg
sbb
imul
mov
out
sub
push
shld
inc
jne
pop
pop
mov
imul
inc
pusha
fdivrs
call
jo
cltd
xor
ret
xor
sbb
out
mov
daa
jnp
cmp
shrl
jle
push
adc
ss
dec
andl
call
stos
out
dec
test
jge
xor
test
adc
xchg
push
mov
cmp
jbe
dec
mov
daa
imul
lds
popa
or
jmp
or
orb
pop
xchg
loop
ret
cs
cmp
inc
flds
and
push
arpl
adc
orl
test
pusha
adc
push
cmpsb
sbb
sahf
dec
pop
or
cmp
mov
jle
cmp
loope
mov
pop
cmpsl
rol
shlb
push
scas
xchg
push
sub
sub
jmp
ja
mov
mov
stos
mov
ret
in
imul
addr16
imul
jmp
xchg
iret
cltd
incl
or
mov
pop
cmp
xchg
outsb
movsb
pop
push
int3
xor
lods
cmpsl
add
xchg
add
xchg
loope
add
mov
repnz
mov
lea
jnp
lock
jmp
imul
int
and
dec
arpl
insl
mov
jle
pop
inc
xchg
daa
xor
cmc
int3
rcll
je
add
das
jb
into
and
ret
out
aas
push
push
mov
leave
add
push
out
ret
nop
mov
nop
add
insb
outsl
in
sub
mov
mov
out
in
lret
aam
scas
sarb
jnp
pop
or
ja
popf
nop
cmp
adc
mov
jno
adc
inc
inc
cwtl
addl
ret
jl
in
aas
pop
ss
cmp
push
mov
pop
movsb
and
jmp
cmp
dec
mov
sbb
mov
hlt
cmp
nop
inc
mov
sub
jg
cwtl
repz
pop
rorb
fs
mov
fdivr
in
int
lahf
xchg
nop
lds
push
sahf
mov
hlt
rcrl
fwait
shlb
mov
cs
push
mov
pop
rorl
lcall
stos
fs
or
jle
int3
fs
movsb
jge
mov
cltd
ja
movsl
stos
out
add
fwait
add
fsub
dec
pop
cmp
jo
xor
push
mov
lods
xchg
mov
mov
and
jne
aaa
xor
push
repz
enter
lcall
add
inc
or
movsb
jmp
sbb
cmpb
adc
inc
mov
xor
lea
insl
pop
ja
test
imul
push
int3
imul
sbb
aas
adc
in
cmpsb
testb
roll
jno,pn
in
std
mov
sbb
addl
sub
lahf
movsb
xor
adc
imul
sbbl
sbb
test
xor
fdivrl
jb
ror
pop
lret
xchg
and
dec
in
push
or
imul
imul
dec
cmpsl
push
aad
jae
leave
les
lods
xor
mov
test
cmp
int
leave
in
in
iret
and
xlat
push
push
ja
and
adc
jbe
sbb
in
sbb
sub
adcl
add
negb
dec
sbb
fcmovnb
pop
test
and
push
dec
popf
cmpsl
jge
xchg
and
sbb
dec
popa
sub
aad
test
mov
add
dec
scas
lods
icebp
sub
lock
push
push
and
lret
mov
and
push
lcall
mov
fcmovne
and
lds
fcoml
dec
fdiv
jne
mov
ljmp
sub
iret
and
mov
std
push
dec
jle
jge
sub
gs
ret
mov
mov
test
jae
movsb
lock
stos
stos
jecxz
stc
inc
fwait
movsb
jmp
cli
xor
aam
push
jmp
xchg
xchg
pop
sub
inc
insl
mov
inc
cwtl
add
inc
out
in
loop
inc
pop
inc
add
inc
add
mov
into
sahf
cltd
imul
insl
pop
push
mov
ret
cs
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
jmp
rol
cmp
adc
lock
lds
out
xchg
pop
imulb
cli
icebp
push
dec
decb
orb
dec
push
and
push
in
cmp
lahf
call
push
jnp
inc
jo
push
mov
mov
pop
cmp
mov
or
pop
call
mov
stos
xor
shll
mov
adc
pop
ds
ljmp
mov
mov
add
cli
rcrl
daa
mov
iret
dec
or
xor
jbe
pop
rorl
adc
push
jg
test
cmp
inc
int3
loop
bound
sahf
and
in
push
pushf
push
mov
dec
lret
movsb
cmc
push
daa
mov
loopne
pop
mov
test
cmp
popf
xchg
std
xchg
out
mov
in
in
sti
outsl
and
gs
nop
out
xor
out
decb
into
into
or
mov
bound
add
xor
pop
in
cld
mov
mov
je
jle
inc
push
out
shrb
xlat
fcomps
repnz
sbb
sbb
cltd
push
popa
inc
jae
xchg
mov
push
dec
rol
enter
mov
add
xchg
lods
sbb
pop
mov
es
mov
stos
fcmove
or
fisttpll
popf
mov
aam
dec
into
icebp
mov
push
xbegin
clc
add
in
mov
add
shlb
jp
xchg
jge
mov
xor
sub
add
cs
lea
call
lods
xor
bound
jns
mov
or
dec
dec
sub
cmp
xlat
outsl
push
mov
xor
mov
xor
sbb
mov
or
push
cmp
cmpsl
adc
jge
repnz
psubw
es
sub
fs
loope
xchg
testl
xor
adc
ds
inc
nop
dec
ret
inc
jbe
sbb
dec
sbb
addr16
mov
stc
cltd
ret
pop
in
inc
push
xchg
add
sub
xlat
cmp
cmpl
aam
test
out
adc
xor
adc
push
outsb
inc
addl
dec
into
and
das
jmp
cmc
jns
xchg
push
cmc
lods
lock
clc
in
inc
rolb
shll
and
mul
inc
jne
sub
mov
pushf
sbb
lcall
test
pusha
jmp
push
push
repnz
mov
jno
imul
nop
repz
jbe
sbb
roll
sub
mov
flds
ss
ret
add
call
mov
xor
or
and
and
xchg
pop
insb
ja
mov
loop
imul
shl
daa
xchg
insb
jnp
mov
lea
std
lods
sub
orl
push
pop
jbe
push
jae,pn
sahf
lock
dec
sar
je
sbb
dec
sub
sti
arpl
sbb
push
rcrl
jp
shlb
iret
dec
add
insb
sbb
cmp
sub
in
sbb
divb
add
shll
add
jle
mull
or
loop
cmp
push
orl
push
push
and
dec
cld
ret
push
notb
out
cmp
or
adc
mov
ret
repz
xchg
sbb
stos
dec
dec
mov
cwtl
stc
lods
mov
inc
jnp
push
add
cwtl
nop
sub
or
test
shll
sub
inc
clc
xchg
or
jecxz
xchg
fs
inc
loope
scas
pusha
rorl
rcl
ds
lds
cmpsb
push
xor
or
pop
rcll
push
mov
or
sub
in
jb
jmp
jecxz
lahf
imul
lock
sub
push
ljmp
out
jecxz
int3
sar
push
jbe
mov
insl
ljmp
movsb
popa
insb
fnstcw
popa
xchg
das
fwait
mov
mov
jbe
jge
cmp
movb
addr16
insl
test
pop
cltd
jb
push
jnp
lods
dec
mov
aam
xor
mov
mov
xchg
push
lcall
out
pop
xor
sbb
cmp
mov
mov
lods
adc
out
adc
hlt
in
lret
dec
outsl
mov
jns
scas
dec
sub
stc
adc
or
mov
cmp
out
sub
xchg
ret
mov
into
xchg
and
mov
lock
pop
pop
mov
fs
add
push
sarb
mov
test
push
dec
lock
sbbl
mov
add
cmp
sbb
ss
insl
daa
stos
lea
pop
out
in
pop
out
mov
add
xor
dec
pop
es
loopne
fldl
jns
stos
and
cld
punpckhwd
fadds
loope
adcl
enter
insl
pop
stc
add
and
pusha
test
dec
mov
jg
shrd
and
push
inc
in
outsl
jle
jno
mov
adc
inc
sbb
mov
pop
dec
adc
stos
xor
loop
add
jp
ljmp
jb
xchg
inc
test
into
xor
ret
fnstsw
orl
push
add
cltd
aas
jmp
mov
pop
add
aaa
jae
int
in
lods
in
jecxz
test
cmpsb
aam
pushf
mov
into
or
insl
jns
dec
cmpl
pop
cmpsb
inc
stos
iret
out
jmp
pop
dec
les
insb
nop
and
aaa
inc
jmp
push
add
mov
sti
rolb
fbld
loop
fwait
bound
sahf
adc
loop
or
or
addr16
xchg
adc
xor
xchg
push
pop
aad
sahf
arpl
xchg
dec
cmova
pushf
dec
dec
xchg
loope
out
jbe
daa
mov
add
rcrb
or
add
mov
push
pop
out
pop
int
cltd
pop
cmp
or
pop
jbe
xchg
lret
clc
stos
lods
arpl
add
fadd
or
jl
fildll
les
mov
aam
addr16
pop
jp
push
pop
sub
aad
popa
xchg
mov
mov
inc
mov
pop
test
jg
lods
gs
enter
cwtd
adc
repnz
xchg
fidivl
lds
aaa
sbb
pop
aad
fmull
in
jnp
sbb
dec
ret
loope
ljmp
fistpll
ja
push
aam
test
jae
stos
cmp
cmp
nop
fildll
lcall
pusha
jmp
pop
aas
lea
lods
popl
xchg
push
fnstcw
push
bnd
test
inc
xchg
add
mov
js
mov
add
dec
test
repnz
jnp
jl
mov
mov
sbb
mov
push
pusha
mov
mov
sahf
xor
ljmp
daa
push
push
cwtl
out
push
pusha
data16
mov
mov
mov
imul
push
arpl
adc
mov
pop
xor
and
arpl
into
push
jbe
aaa
lcall
mov
fcmovbe
clc
js
mov
shrl
push
pop
and
dec
jb
push
or
mov
add
ficompl
in
dec
mov
in
inc
loopne
mov
call
clc
cltd
mov
enter
test
cmp
jecxz
xchg
xchg
sub
sbb
arpl
xchg
loop
push
mov
mov
out
ret
push
mov
into
jbe
fldl
filds
and
add
inc
stc
mov
stc
aaa
mov
dec
inc
jns
imul
mov
fs
push
dec
loope
bound
testl
or
out
fisttpl
sbb
push
push
lret
push
fnsave
sub
out
mov
out
sti
test
stc
lret
cmp
push
cltd
mov
pop
xor
dec
ror
cmp
push
bound
dec
sbb
sub
jae
mov
ljmp
and
mov
lods
mov
je
adc
or
ret
mov
es
sbb
out
rorb
sbb
xchg
mov
cmp
lcall
dec
mov
scas
xchg
push
xor
or
pushf
jns
jp
jge
ret
enter
jo
rorl
jp
adc
and
cld
xchg
pop
sub
lret
xor
imul
pusha
mov
push
dec
sbb
push
outsl
lea
or
sub
test
push
mov
sub
jb
push
push
cmp
push
pop
cmp
sbb
cmp
ss
or
xchg
dec
lahf
repnz
cmp
cmp
xchg
pop
jl
hlt
mov
ficomps
pmaxub
dec
loop
jmp
push
int3
xlat
adc
data16
lret
das
xor
xchg
pop
rorl
out
pop
mov
mov
jb
es
mov
dec
pop
cmp
jle
dec
push
adc
lret
sahf
lods
dec
aam
orb
sub
mov
imul
sbb
out
jo
sub
jbe
or
mov
add
push
push
jb
mov
loope
lock
push
mov
pop
cmp
lods
jmp
int
xor
lea
ror
sub
dec
jg
lret
mov
inc
pop
xlat
and
daa
fwait
call
iret
adc
jg
cmpsl
movsl
dec
js
and
test
adc
cmp
jmp
stos
fs
clc
rcrl
daa
jg
cltd
aad
leave
imul
in
xlat
pop
sub
add
jmp
cs
xor
add
popa
or
aad
das
outsl
test
adc
xor
push
insl
fnsave
and
ds
sub
clc
into
in
fdivr
cs
mov
dec
pop
pop
movsl
fildl
sahf
add
pop
mov
frstor
test
nop
cld
rorl
lret
xchg
fnclex
scas
adc
lret
shlb
mov
sbb
fsubrl
rcrb
inc
aam
dec
ret
cld
shlb
fldl
imul
mov
nop
pusha
push
mov
and
mov
xor
push
add
pop
adc
roll
push
mov
adc
xchg
push
cmp
add
cmpsl
popf
loop
aam
nop
pop
ror
hlt
cwtl
lods
shrb
loopne
xchg
push
lods
mov
fwait
jo
pop
lcall
movsl
xor
mov
fimuls
aam
push
adc
int3
sbb
sub
jmp
add
scas
jno
rcrb
test
pop
scas
in
jae
test
test
xor
mov
sub
out
mov
inc
adc
sbbb
addr16
mov
cli
dec
inc
testl
clc
cmp
pushf
test
dec
es
jl
insl
jl
or
adc
leave
jp
mov
jmp
cmp
mov
push
jp
push
jae
or
mov
testl
push
ds
pusha
xchg
push
imul
mov
movsl
jno
jb
mov
sbb
ds
inc
lret
into
mov
ficomps
and
sbb
js
cwtl
fcompl
sbb
pop
jno
xor
out
icebp
shll
fistpll
xor
cmp
fimuls
ds
mov
cs
imul
jge
subb
mov
inc
adc
lcall
or
mov
fisubrl
icebp
add
rclb
mov
jne
mov
adc
and
xor
mov
in
dec
add
and
cltd
outsb
aaa
js
in
push
or
leave
cmp
pop
cmp
in
or
or
mov
pop
mov
inc
lahf
imul
or
xchg
or
out
add
out
inc
push
dec
pop
movsb
push
sub
dec
aam
dec
push
loop
jae
adc
mov
in
mov
es
sahf
stos
bound
jle
jae
xor
pop
cltd
ljmp
or
lods
dec
loopne
or
fiaddl
fcompl
and
push
mov
or
mov
movsb
popf
mov
dec
lods
orb
cmp
inc
lods
push
push
xor
jmp
xlat
stos
imul
fidivrs
popf
mov
cld
jle
cmp
xor
jmp
push
fdivrs
or
push
cwtl
xchg
cmp
and
adc
loop
xor
lret
inc
push
ljmp
xorl
adc
sub
push
sub
cmp
mov
mov
cld
pushf
loope
dec
xor
outsb
add
scas
sbb
int3
xlat
or
xor
add
cmp
icebp
rcrb
mov
inc
add
xchg
fs
dec
aas
ljmp
push
push
sahf
lods
lds
rol
xchg
subb
icebp
dec
iret
out
mov
daa
into
lock
push
inc
mov
sahf
repnz
pop
jcxz
jmp
push
dec
outsb
pop
push
call
scas
fnsave
mov
test
out
rcr
scas
loop
aam
rcr
rcrb
in
add
cmp
sbb
push
cmp
mov
push
outsb
in
repz
xor
lahf
push
pop
cli
mov
sub
stos
and
xor
movsb
sub
mov
aad
arpl
push
sbb
mov
in
frstor
pop
ljmp
jecxz
or
mov
mov
pop
cmp
jp
clc
pop
mov
sti
xor
cmp
in
popf
fdivrs
test
sub
dec
out
aad
push
inc
es
ret
cs
pop
mov
xor
sbb
sbb
loop
and
push
pop
sub
inc
mov
jecxz
outsb
mov
push
clc
jle
into
divb
out
jae
jecxz
adc
mov
frstor
sbb
or
lcall
jecxz
push
cli
or
push
bound
imul
adc
pop
inc
rcl
shlb
leave
sahf
inc
jmp
push
subb
sbb
data16
mov
scas
outsl
add
addb
jne
inc
push
cli
pop
loopne
xchg
and
in
js
jle
out
das
sbb
jns
call
aas
cmp
push
rcrb
cmc
repz
inc
std
mov
jge
jns
mov
scas
scas
mov
test
push
rol
jbe
mov
cli
sbb
pusha
lock
or
cmp
aaa
shlb
lods
push
cmp
adc
pop
out
enter
jb
mov
xchg
mov
pop
push
jp
cmp
adc
add
pop
fs
xor
in
loop
pusha
inc
dec
out
add
imul
push
xor
mov
test
imul
lcall
adc
xor
int
adc
ret
jnp
jle
xchg
stos
or
mov
push
popa
pop
movsb
fcmovne
xorl
and
daa
inc
mov
cmpsl
shlb
out
jo
das
sbb
lret
sub
outsl
in
inc
imul
xlat
je
pop
pop
sbb
add
out
push
dec
je
mov
push
or
lret
jbe
outsl
xchg
lods
push
pop
jmp
add
outsl
adcb
xlat
jp
lea
adc
test
and
push
insb
push
adc
lcall
movsb
jne
mov
mov
leave
dec
sti
ljmp
in
push
sbb
sub
mov
xlat
xchg
xor
nop
aam
decb
shrl
scas
dec
lahf
stc
adc
dec
mov
imulb
add
shrl
test
sub
jo
jnp
sub
adc
sbb
mov
psrlq
add
outsb
sub
outsb
and
mov
and
cmp
enter
sub
pop
mov
test
and
sarb
andl
cs
push
or
or
aaa
sub
mov
lock
and
dec
in
addr16
cmp
lods
out
ret
lahf
nop
stos
pop
icebp
inc
push
leave
xlat
fbld
or
lret
mov
cmp
push
sub
xchg
stc
sbb
in
xchg
mov
push
fbld
push
mov
mov
push
ja
or
inc
popa
xchg
xchg
test
out
insb
pop
mov
mov
xor
adc
or
lea
mov
repnz
cltd
mov
add
loop
std
out
mov
jle
fldpi
mov
sub
xchg
adc
or
mov
push
imul
roll
fisubrs
dec
xchg
ficoml
je
push
lods
dec
adc
jp
pop
mov
stos
push
pop
sbb
scas
popf
push
mov
jle
xchg
in
inc
out
cld
cld
test
jne
xchg
dec
out
and
push
add
das
popa
sub
mov
scas
pop
pushf
xor
inc
sub
push
fcmovne
jo
insb
xor
je
dec
jecxz
xchg
in
dec
sbb
cmpsl
xchg
aas
test
adc
push
outsb
mov
iret
xorb
pushf
cwtl
movsl
jno
or
or
imul
mov
dec
lret
ljmp
hlt
mov
sbb
jmp
lret
sarb
pushf
repz
lahf
jmp
outsb
into
stos
lea
fldenv
lcall
jne
ja
div
xor
and
jno
dec
mov
testl
and
jbe
jg
sbb
daa
sbb
add
rcr
adcl
xchg
inc
lock
out
cs
and
sbb
cmpsb
xchg
popf
sbb
pop
cmp
ficompl
pop
adc
xor
fildll
sub
mov
mulps
xchg
std
pusha
rcrb
jmp
push
gs
rcl
add
lods
lea
hlt
jno
arpl
fists
xchg
fxch
dec
sbb
mov
jge
xor
test
bound
bound
xchg
imul
push
adc
inc
sub
in
mov
sub
dec
add
insb
adc
mov
cltd
and
cmp
stos
pop
test
mov
sbb
cmp
popf
push
push
lret
push
imul
ficoms
cmp
aaa
and
push
ds
push
insl
and
fsubrl
xor
inc
dec
sub
stos
xchg
in
je
leave
rolb
stos
aad
sub
and
les
and
mov
fidivrs
pusha
adc
and
in
inc
mov
loop
jnp
dec
mov
sub
dec
popf
rcll
mov
orb
cmp
shlb
jnp
imul
push
fs
jno
in
pop
push
sete
shl
mov
push
test
lret
jo
sbb
outsb
sub
inc
mov
insl
cmp
icebp
sub
data16
stos
cmp
ljmp
daa
fstp
das
pop
sub
lods
mov
shll
sub
sub
fisubrl
pop
adc
scas
xor
and
ja
jne
test
les
pop
pop
jns
mov
adcl
add
hlt
or
or
xchg
in
int3
lret
loop
test
sbb
mov
sbb
mov
sub
insb
sbb
cmp
rcrl
loope
enter
pop
outsb
pop
out
push
push
mov
jg
xchg
pop
jo
pop
cmp
pop
inc
cmp
call
inc
inc
add
ja
loopne
inc
ret
cmpb
jmp
cs
mov
mov
dec
loopne
ret
or
mov
xchg
scas
xchg
mov
roll
jg
sub
push
daa
int
pop
cltd
jg
inc
mov
jp
pop
cmp
leave
jbe
pop
sbb
mov
cmp
pop
pushf
mov
xchg
es
fldl
stos
xchg
in
push
inc
xchg
inc
xchg
mov
imul
push
cmp
jbe
cli
jge
sub
lcall
xor
les
add
jl
fs
fwait
sub
jg
xlat
mov
orb
outsl
or
fisubrs
icebp
mov
fdivrl
or
clc
sbb
pushf
in
das
push
repz
inc
mov
push
int
xchg
lahf
xchg
jb
sbb
or
in
imul
sbb
push
sub
push
pop
jmp
push
mov
repnz
mov
xor
cmc
push
add
fucomp
or
xchg
push
xchg
xchg
or
test
stos
stos
rcrb
push
xor
prefetch
or
jo
les
mov
into
arpl
or
xchg
out
cmpl
pop
mov
push
mov
cltd
cmp
sarb
idivl
lahf
mov
add
xrelease
outsl
nop
lret
out
dec
mov
movsl
push
and
cli
mov
sbb
xor
sub
je
and
repnz
or
pop
mov
xchg
add
loop
jmp
sub
xchg
stos
push
iret
sbb
and
insb
rorl
rcr
das
int3
add
push
imul
xchg
test
rcrl
shl
xchg
push
mov
add
sbb
lods
insl
jnp
sub
fwait
ljmp
out
test
jae
lahf
sub
leave
fidivrl
rclb
test
mov
mov
dec
fucomp
out
mov
xlat
push
es
mov
fisubrs
pop
test
orl
into
push
or
add
adc
ljmp
cltd
xor
jno
mov
ficoml
int3
xor
xchg
jbe
pushf
sub
and
sub
enter
pop
mov
outsl
or
in
call
mov
jmp
push
les
sub
mov
sbb
and
leave
sub
xor
cmp
cmp
shl
pop
sahf
in
and
pop
sub
sti
mov
lret
xchg
popa
clc
in
pushf
cld
outsb
pop
movsw
insl
test
sub
cmp
xlat
cmp
xlat
inc
clc
lods
sahf
add
inc
stc
daa
dec
dec
mov
hlt
jmp
rorb
or
jne
xor
xor
shll
popf
repnz
adc
add
jg
in
cmp
fnstsw
popa
mov
mov
cmc
and
push
add
push
mov
shrb
mov
ret
loop
out
shr
and
hlt
ret
inc
sbb
dec
inc
dec
jl
inc
sub
arpl
jae
xor
mov
add
fcmovu
rol
mov
xlat
pop
xchg
mov
add
xchg
mov
mov
rcll
sbb
xlat
xor
dec
repz
sbb
stos
into
mov
and
mov
mov
add
std
das
xchg
addr16
mov
push
in
xchg
xchg
push
iret
leave
add
fstl
inc
cmc
hlt
xchg
xchg
jp
lcall
out
or
inc
pusha
sbb
out
test
sti
out
push
or
and
or
ja
sti
ficompl
jge
xchg
jno
fxch
shll
xlat
std
dec
scas
mov
pop
inc
enter
cmpsl
sbb
pop
mov
dec
inc
lcall
dec
jg
sti
call
and
jno
adc
addr16
fsubl
lods
sub
shll
stos
xchg
xchg
daa
aas
adc
loopne
jae
xor
mov
sbbl
arpl
mov
cmp
push
and
dec
and
test
and
pmaxub
push
aas
dec
dec
fsubrs
fnstcw
pop
mov
mov
push
pop
outsl
dec
push
scas
repnz
in
sub
ds
mov
pop
js
push
dec
test
sbb
adc
push
adc
lods
nop
mov
add
aam
mov
jne
scas
pop
add
scas
add
sub
pop
test
out
ret
out
jnp
pop
mov
lret
dec
js
jno
andb
xor
dec
loope
sahf
mov
add
pop
subb
call
pop
push
popf
add
ds
inc
sub
fidivrs
dec
data16
mov
cmpsl
pop
push
testb
sub
pop
mov
dec
xchg
pop
pop
popa
xchg
lret
insb
pop
dec
arpl
sbb
cmp
jp
add
loopne
mov
sahf
cmp
or
xchg
add
das
mov
inc
rcrb
je
mov
lods
lds
lret
inc
cwtl
jge
jle
scas
dec
sbb
jmp
in
insl
out
jg
loope
push
sub
shlb
mov
push
sbb
fisubrs
add
xlat
xchg
sahf
pop
cmc
push
orl
daa
mov
sbb
xor
or
cmpsl
push
add
aam
xchg
jmp
and
lahf
mov
inc
aas
add
ret
test
repz
mov
fcomps
pop
mov
mov
test
outsl
push
xor
popf
stc
mov
jne
lods
pop
lds
loopne
into
add
cmovl
sub
push
add
fnstcw
or
cmp
insb
and
rorl
lock
xor
cltd
lods
sbb
pop
dec
lcall
xor
and
vpunpcklbw
push
in
push
sub
mov
repnz
mov
cmp
mov
xchg
and
adc
sahf
pop
jae
repnz
xchg
cld
jg
jns
clc
pop
jl
or
xchg
xchg
daa
cmpsb
jmp
loopne,pt
fcomp
push
in
insl
and
push
outsl
sub
jl
and
daa
retw
and
sbb
push
jmp
mov
mov
push
sub
cwtl
fwait
or
or
call
scas
jo
fs
call
cmp
pop
mov
fcoml
ss
ret
xchg
fadds
gs
pushf
mov
addr16
out
js
movsb
mov
mov
push
add
ret
push
mov
dec
xchg
out
cmp
int
shrb
dec
sbb
repz
mov
inc
pushf
test
jle
jne
and
lods
jbe
fistpl
or
jno
mov
rorb
xlat
jo
mov
pop
cmp
inc
in
xchg
push
xor
xchg
int3
rorb
fcmovu
rcrb
rorl
dec
addb
add
mov
stos
adcb
ss
loopne
sbb
and
shll
data16
out
xor
sahf
push
or
out
cs
xchg
fsubp
or
aad
push
mov
fiadds
imul
popa
push
adc
mov
daa
mov
push
dec
mul
aas
push
jge
sub
or
mov
into
xadd
push
scas
or
pop
push
ret
lret
inc
pop
jecxz
enter
in
push
cmp
sbb
jle
push
inc
popl
fistps
sbb
xor
adc
sbb
sahf
stos
gs
push
xchg
sub
sub
or
push
lret
mov
mov
pop
and
inc
xor
sub
push
ficomps
call
sub
jne
subb
mov
mov
lods
scas
call
sub
sbbb
inc
ret
inc
xchg
leave
adc
xor
pop
mov
pop
push
mov
mov
shlb
sbb
inc
xor
stc
xor
mov
mov
fimuls
push
out
les
inc
fcmove
inc
sub
sbb
jge
xchg
dec
push
jecxz
lret
and
sbb
subl
dec
mov
pop
lcall
sub
mov
dec
lods
pop
scas
fstpl
or
or
lea
aas
ja
fiaddl
sbb
rorl
and
shr
mov
ret
add
out
pushf
mov
rclb
push
ficoms
ja
cmpsb
push
xchg
mov
adc
dec
shrl
xor
es
push
mov
adc
xchg
push
mov
inc
pop
jno
xor
daa
filds
aaa
jbe
rol
mov
add
aad
jb
push
cmp
test
adc
xor
mov
and
adc
loope
sub
mov
push
jb
rcl
sub
adcl
xor
stos
mov
and
mov
rep
inc
mov
fnsave
fld
and
mov
mov
mov
scas
cli
mov
loopne
loope
inc
or
cmpsl
shl
adc
cmpsb
push
daa
ficompl
jmp
jmp
xorb
test
add
call
xchg
inc
fdivl
test
and
mov
bound
xchg
xchg
inc
into
ret
xor
jecxz
rcrb
bound
push
arpl
movl
imul
dec
jle
in
mov
fwait
shl
xor
mov
mov
and
pop
fwait
cmp
push
sti
lods
movsl
or
mov
cmp
out
addr16
decl
jns
fwait
ljmp
xchg
xor
add
xchg
fistpll
sub
jp
shlb
inc
add
mov
pop
dec
lahf
in
incb
jo
les
iret
mov
mov
and
mov
sbb
jnp
inc
mov
xchg
mov
ds
cld
cmc
mov
jnp
inc
mov
movsb
les
fistl
mov
or
movsb
add
out
arpl
xor
xchg
sahf
mov
xchg
adc
mov
jg
popa
add
cmp
pop
dec
cmpsl
add
sub
shll
sub
cltd
lcall
adc
sub
pop
lea
mov
sub
dec
fcomps
pop
popa
gs
sub
push
xor
cwtl
mov
fdiv
movsb
add
fldenv
mov
fidivrl
jmp
inc
call
sub
mov
mov
int3
aad
adc
je
mov
mov
pop
fildl
cmpsl
addr16
xlat
loopne
push
dec
jns
lahf
pop
mov
jbe
fs
xor
xor
aaa
mov
ja
ret
mov
shlb
pop
adc
jb
cwtl
jle
enter
xlat
ja
xchg
sti
in
test
roll
and
fstl
cmp
dec
leave
shlb
jp
mov
xor
mov
xchg
jb,pt
mov
dec
dec
push
inc
sbb
jnp
mov
jne
cmp
cmp
pop
cmp
inc
mov
lcall
pop
adc
sub
push
inc
or
sub
inc
popf
outsl
adc
icebp
xor
xorl
pop
outsl
push
adc
xor
push
add
add
cld
out
jbe
push
shlb
inc
sub
outsb
out
push
push
adcl
pop
xchg
fidivrs
adc
adc
scas
loope
jle
mov
push
xchg
call
outsb
cmp
jmp
jae
add
fcompl
mov
lock
cmp
fsubp
cmpb
pop
rcr
mov
sbb
int
pop
push
pusha
lock
mov
sub
sbb
iret
rcrl
add
mov
xchg
shlb
xlat
pop
inc
insl
mov
aad
mov
pop
stos
push
fs
and
cwtl
cwtl
mov
dec
xchg
inc
adc
out
xor
aam
mov
movsb
push
xor
out
push
dec
sub
lds
lret
dec
adc
sbb
xchg
insl
mov
dec
cmp
push
inc
jecxz
ljmp
mov
in
shlb
mov
test
orl
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
in
adc
inc
push
insb
subb
loop
test
jb
scas
ret
add
leave
jge
ljmp
adc
das
rorl
sar
xchg
xchg
cmc
mov
xchg
movsb
mov
shrb
sub
push
insl
inc
clc
sbb
and
push
sbb
popf
lods
out
inc
pop
cmpsl
sub
sbbb
push
pop
xchg
lods
aas
in
iret
mov
xor
inc
fstl
mov
fsub
mov
popf
pop
insb
jnp
mov
test
push
push
xchg
mov
rol
pop
or
pop
shlb
out
call
popa
stc
jae
add
rcrb
mov
jnp
cmpsl
cmpsb
pop
jle
jno
adc
in
adc
test
adc
sbb
jp
shrl
aam
in
push
fcomps
sbb
or
xchg
loop
es
push
pminsw
jg
andb
add
int3
sbb
sub
bound
adc
xor
adcb
jo
gs
fnsave
inc
jb
xchg
icebp
and
mov
xor
cmp
nop
mov
mov
sbb
dec
fbld
sti
push
aaa
sbb
mov
mov
jge
out
cld
ja
pop
inc
fs
out
and
fwait
in
insb
sarl
fcomps
jl
subl
sti
cli
inc
mov
cmp
mov
stc
imul
aad
push
call
hlt
stc
pop
movsl
dec
adc
mov
xchg
inc
bound
add
fstpl
sarl
mov
inc
push
rolb
movsl
mov
imul
mov
je
imulb
sti
or
xchg
adc
mov
xchg
loopne
mov
mov
push
rep
or
sub
jp
xchg
roll
xlat
in
test
fs
mov
cmc
push
jo
dec
outsl
outsb
rcrb
xchg
or
inc
cmp
lahf
inc
jb
push
xchg
insb
sbb
ret
int3
inc
xchg
sti
pushf
add
outsb
pushf
lock
mov
test
add
lods
daa
rorb
mov
xor
mov
es
xchg
fldenv
call
cmp
popf
mov
shlb
cmp
sbb
push
loop
add
arpl
push
jo
mov
leave
add
jmp
loop
lds
add
shrb
fadds
xchg
xchg
ja
aam
mov
imul
fcmove
aas
dec
and
cmp
and
movsb
mov
call
sub
mov
sbb
aaa
jmp
imul
lcall
and
sub
pop
or
xchg
mov
xor
mulb
inc
in
lret
push
fistps
test
push
sbb
imul
fwait
xchg
push
insl
stc
and
push
mov
imul
in
mov
and
movsl
mov
fmuls
fisttps
out
fidivs
and
mov
push
ficomps
popa
aad
sbb
fimuls
insb
jbe
pop
cmp
sbb
aas
and
sub
jns
inc
std
sbb
push
sti
lds
xor
pop
dec
mov
cmpsl
pop
jecxz
jecxz
lock
sub
movsl
imul
push
in
leave
jae
roll
or
scas
arpl
mov
push
sti
fnstcw
push
and
in
adc
add
aad
divb
decl
mov
loope
sbb
mov
outsb
pop
shl
sbb
jnp
inc
push
icebp
jae
shlb
imul
int3
outsb
scas
adc
ret
xchg
jns
xor
mov
sti
jno
jne
hlt
in
or
adc
andl
inc
pop
ss
pop
pusha
jge
pop
insl
dec
jmp
imul
pop
aad
lods
inc
mov
icebp
subl
cmpsl
push
nop
fs
out
dec
jle
adc
daa
mov
pop
push
mov
js
adc
ret
cmp
mov
mov
loopne
sarb
or
mov
fmuls
ret
cmp
test
mov
inc
push
hlt
popa
std
lret
mov
push
sub
test
add
rolb
cmp
cmp
jb
pop
loop
sub
xor
pop
add
or
push
test
xor
push
fwait
xor
sub
and
xchg
imul
jmp
sbb
aaa
cmp
mov
iret
sbb
aaa
push
inc
aas
push
ficoms
out
sbbl
mov
rcl
mov
call
inc
push
fdivrs
test
test
faddl
lret
insl
lret
dec
mov
xchg
jo
mov
inc
into
sub
out
inc
and
loopne
orl
mov
insb
xchg
push
mov
fmull
push
or
mov
faddp
inc
insb
inc
cmpl
add
adc
pop
fcmove
enter
xor
xchg
stc
jbe
stos
mov
pop
jmp
xor
repnz
jl
bound
lock
outsl
dec
ficoml
mov
push
fnsave
pop
clc
cwtl
mov
outsl
inc
iret
jmp
out
nopl
cmpsb
push
sbb
jecxz
dec
inc
xorl
in
dec
dec
xor
out
mov
sti
dec
xchg
es
cwtl
rorl
cwtl
inc
into
fisubl
dec
xchg
sub
lahf
aad
fsts
bound
repz
push
sarl
or
xor
push
test
test
repnz
mov
sub
lcall
cmpsl
hlt
add
jbe
mov
jnp
cmp
shlb
ja
push
mov
push
data16
out
mov
popa
loopne
icebp
push
out
enter
imul
and
add
aad
adc
jns
cli
rcrb
sub
push
dec
pop
call
push
mov
dec
dec
inc
push
loope
outsb
sti
loope
jle
mov
loope
adc
sub
scas
sahf
mov
lret
inc
sub
cmp
fdivl
js
ja
lret
push
outsl
pop
pop
filds
pusha
gs
push
mov
iret
or
fnstsw
xchg
add
popf
lea
popf
push
cmp
call
lock
and
lret
push
daa
cwtl
loope
cld
insb
xor
xchg
jmp
pushf
xor
scas
sub
ret
jmp
mov
push
insb
fstps
xchg
mul
dec
or
std
lret
das
mov
stc
cmp
test
loopne
push
or
jnp
sub
jmp
inc
inc
dec
mov
pop
xorl
lcall
cwtl
jo
ret
cmp
out
call
in
scas
cmp
jl
mov
mov
cmp
aam
arpl
das
test
sub
cltd
out
jle
inc
add
sbbl
pop
cmp
lds
or
mov
mov
int3
in
push
or
or
pushf
cli
std
pop
ja
sub
sbb
or
inc
jl
xchg
test
sti
enter
fdiv
scas
pop
js
xchg
mov
mov
mov
fiaddl
xchg
mov
xor
push
jb
jecxz
cld
xchg
cmp
test
repnz
insl
dec
sbb
divl
add
lods
scas
push
test
xor
icebp
insl
fldt
aam
xor
lahf
mov
iret
sub
jbe
aaa
and
sahf
xlat
push
cwtl
es
mov
cli
mov
scas
std
sub
mov
int3
daa
das
or
aam
add
push
lds
movl
stos
std
ljmp
or
or
repz
mov
sbbb
adc
ljmp
imul
popa
pop
and
in
push
cwtl
cli
pusha
cmp
jo
cmp
aam
lcall
mov
jle
daa
into
in
pop
in
add
mov
pop
test
cmpsb
lock
jle
repnz
sbb
mov
push
in
cmp
scas
mov
adc
or
in
mov
mov
xchg
std
jae
rcll
jae
adc
aam
lss
jbe
push
insl
sbb
cmp
xchg
popa
mov
mov
mov
aaa
lret
arpl
popa
cmp
mov
mov
loope
arpl
push
xchg
add
pop
bound
movsl
inc
adcb
loop
inc
cmp
mov
arpl
fisttpll
dec
std
pop
pusha
es
cmc
pop
xchg
jo
enter
cmp
xchg
push
fcmovu
xchg
fwait
mov
adc
sarb
outsb
dec
jnp
mov
adc
lods
jle
pusha
add
add
insb
lret
test
adcl
or
xor
jecxz
mov
shrl
cmp
popa
dec
inc
and
jae
test
arpl
sub
cmp
inc
mov
in
dec
xchg
cmpl
add
mov
es
mov
call
inc
pop
movb
xchg
rclb
add
cmpsb
adc
push
movsl
shlb
sbb
push
lcall
and
test
mov
xchg
mov
rclb
sbb
jo
lods
xchg
xlat
xor
xorb
jnp
and
aam
out
fmuls
ret
js
pop
and
cmp
sub
pop
js
xlat
outsl
xchg
sti
mov
and
int
xchg
mov
sbb
mov
repnz
jns
inc
cwtl
ret
or
je
movsl
pop
stc
into
dec
lahf
mov
dec
cmp
jbe
or
test
loope
fnsave
jecxz
aas
and
out
dec
mov
aas
pushf
decl
push
inc
adc
dec
ss
stos
mov
mov
icebp
pop
pop
test
sub
dec
lds
ljmp
and
mov
in
out
xchg
xor
loop
push
cwtl
dec
pop
push
cmp
dec
mov
in
adc
mov
xchg
cmp
fnsave
gs
push
jmp
sbb
jl
in
pop
aas
sbb
rcll
xor
sub
outsb
mov
test
sub
lahf
fsubrl
in
scas
out
jmp
xor
inc
gs
jns
lret
xor
mov
insl
in
fdiv
xchg
mov
out
xor
mov
mov
dec
gs
out
movsl
mov
xor
leavew
jge
lret
dec
mov
sti
aad
pop
imul
addr16
add
mov
dec
jns
sbb
jae
fldcw
sbb
imul
pop
xor
stos
and
inc
leave
lea
call
mov
roll
or
xchg
cmp
cmp
fs
sub
incl
aam
aaa
or
and
cmc
dec
sub
sbb
roll
sub
sbb
cmp
imul
pop
cli
scas
leave
shll
cwtl
dec
inc
push
and
dec
dec
dec
or
fistl
mov
arpl
jecxz
dec
or
stc
sbb
lock
mov
xchg
push
push
add
in
das
cmp
sbb
arpl
sub
dec
insb
xchg
dec
mov
dec
lret
and
loop
sbb
and
jo
sub
aam
sahf
sbb
push
xor
sub
or
popl
and
movsb
mov
rclb
mov
sub
cmp
cmp
dec
lods
xchg
stos
insl
imul
fwait
sbb
fwait
pop
test
inc
das
fisubl
sub
pop
leave
and
pop
pop
lods
stc
insb
stos
rcl
orl
fisubrs
call
orb
push
inc
scas
in
leave
jge
inc
adc
das
lret
mov
sbb
and
mov
stos
cwtl
cmp
ds
xor
repnz
push
std
dec
pop
sub
sub
insb
jnp
hlt
dec
mov
test
stos
pop
enter
mov
dec
mov
push
push
jl
negb
ficomps
scas
mov
push
lret
jne
scas
outsb
push
fmul
out
mov
icebp
out
push
or
outsl
add
mov
pop
jne
xor
ljmp
mov
and
gs
fdivs
jle
out
sub
push
ja,pn
inc
xlat
push
call
out
xchg
lock
shll
push
enter
adc
cmpsb
mov
cmp
add
push
lahf
decb
cli
mov
mov
mov
sbb
fistl
push
ffreep
xchg
stos
jmp
subb
dec
js
inc
dec
and
fwait
and
push
dec
xchg
jecxz
xchg
aad
cmp
ja
ret
fnstsw
test
jae
jno
punpckhwd
mov
jl,pt
divb
inc
les
sub
jecxz
mov
and
add
ret
mov
and
push
fadds
divb
xor
stc
ja
push
insb
fs
fsubr
popa
pop
bound
pop
lods
xor
lods
add
clc
pop
sbb
lds
test
push
in
cmp
in
into
mov
xchg
mov
jl
push
sub
insb
idivl
mov
mov
push
les
sbbl
or
mov
outsb
inc
out
cmp
cmp
dec
decb
iret
mov
in
rcl
push
gs
pop
add
cli
or
das
js,pt
mov
xchg
sbb
sbb
dec
lahf
das
pop
mov
jb
add
push
push
movsb
pushf
pop
rolb
out
lret
xor
adc
out
sbb
adc
and
mov
jns
xchg
cmp
cmp
cmp
shrb
loop
std
mov
in
icebp
scas
or
pop
cmc
inc
iret
or
sub
je
test
jecxz
popf
movsl
dec
push
xor
fsub
add
test
push
call
pop
test
ret
pop
inc
sbb
sbb
popf
mov
and
hlt
rolb
idivl
aaa
sbbb
jbe
sti
call
fs
out
shll
inc
adc
outsb
fs
aam
aas
mov
nop
adc
push
push
arpl
pop
rcr
cmp
sub
mov
mov
xchg
insb
les
adc
sub
rcrb
call
sbb
push
sub
es
xchg
fs
mov
jmp
pop
or
sbb
mov
pop
jp
mov
dec
jmp
in
inc
arpl
sahf
inc
inc
scas
jno
mov
repz
arpl
adc
add
mov
mov
sbb
push
jnp
lcall
jmp
mov
push
pop
push
fwait
bound
sbb
push
out
mov
mov
mov
push
pop
outsl
ret
push
mov
repz
add
data16
add
dec
popf
sub
loop
mov
mov
lds
mov
xchg
in
or
dec
jno
push
xor
adc
rolb
ljmp
inc
mov
cmc
das
xor
cmc
cmpsb
gs
xor
push
rorl
mov
sub
sti
jae
sbb
sub
insb
cmpb
mov
fstl
cmp
idiv
mov
cmpsb
add
pop
jmp
insb
sbb
sahf
and
sub
jmp
sub
and
add
jb
jno
fwait
lahf
sar
dec
int3
add
push
orb
and
aad
ret
mov
fimull
sub
pushf
fadds
ss
adc
es
jle
mov
pop
cmpsb
int3
pop
test
inc
in
rolb
pop
insl
and
imul
mov
pop
icebp
ja
sbb
in
push
loope
mov
lahf
mov
xchg
add
lret
adc
sbb
lods
into
int3
mov
das
jecxz
add
cmp
insb
gs
push
imul
adc
cpuid
mov
xchg
mov
clc
push
cmp
call
xor
dec
jle
cmpsb
ret
ret
push
inc
xlat
fadds
mov
into
cli
aas
xor
es
or
repnz
in
fdivrl
loop
fidivrl
outsb
loopne
daa
dec
std
jns
push
dec
pop
mov
shll
jl
xor
scas
jp
pop
outsb
stos
shr
or
mov
mov
dec
lea
cli
int3
loope
jle
out
mov
push
daa
dec
loop
aas
pop
sti
pushf
cmp
jg
ljmp
adc
pop
insl
roll
enter
sbb
call
and
popf
xchg
test
popfw
jnp
out
mov
out
sbb
lods
pop
mov
or
xchg
sbb
call
xchg
andb
rcll
stos
inc
sbb
push
in
jmp
adc
sub
lret
jl
daa
gs
xchg
or
adcl
xor
dec
pop
cmpsb
das
xlat
movsl
jae
xor
mov
mov
mov
mov
fldenv
movsl
xchg
es
scas
cmp
orl
test
cmpb
dec
and
nop
out
adc
xor
inc
scas
lret
cmp
push
hlt
outsb
out
pushf
cmpsl
fbstp
ja
xchg
outsl
add
into
dec
rcrl
jnp
test
je
out
cmp
pop
movsl
dec
mov
push
decb
push
dec
mov
and
jg
mov
clc
lcall
jl
mov
mov
cmp
inc
mov
dec
out
mov
cmpl
adc
or
mov
push
mov
mov
pop
inc
stos
into
or
sub
mov
aam
insl
push
inc
pop
jg
push
jns
inc
jb
jle
xchg
pop
mov
fninit
test
jmp
pop
lcall
sbb
stos
enter
inc
stc
add
and
clc
jnp
enter
xchg
leave
adc
push
push
mov
push
movsb
cmc
xchg
cmpsb
fcoml
xchg
adc
sarl
popf
and
jmp
movsl
sub
push
pop
xchg
aam
into
lret
inc
das
mov
inc
mov
push
xchg
outsb
mov
data16
pop
add
pop
imul
xchg
mov
cmp
sub
adc
xor
pop
jmp
inc
repz
sahf
fnsave
shll
jbe
test
jecxz
test
out
xor
test
xchg
test
movsl
cmp
repnz
add
outsb
push
fsubl
sub
fistpl
sbb
insb
mov
fdivrp
imulb
jmp
ljmp
sbb
ja
in
cmp
sahf
mov
test
mov
mov
push
adc
xchg
clc
cmp
adc
stos
popa
cmp
arpl
push
sub
push
cmp
sub
xlat
dec
xchg
cmpsb
iret
in
inc
xchg
or
adc
sub
adc
or
cli
lods
pop
imul
dec
and
jno
clc
lds
pop
scas
sub
ror
lods
test
flds
xor
inc
es
iret
and
push
fnstcw
leave
divl
sub
jns
adc
mov
sbb
loopne
out
iret
cmp
imul
fidivs
fisubl
insb
mov
dec
repnz
out
jno
ljmp
dec
push
movsb
pop
push
and
test
jo
mov
roll
or
add
mov
xchg
inc
jg
mov
push
sub
cmp
fmuls
outsb
fldl
faddp
jns
out
pop
mov
icebp
mov
sub
jbe
push
repz
aaa
pop
in
pop
movsl
in
xor
repz
and
movsb
cmp
data16
dec
dec
pop
adc
daa
mov
xor
arpl
push
sarb
jg
xor
nop
int
push
rcll
pop
xchg
cld
in
mov
push
inc
test
pop
ljmp
mov
test
ret
and
mov
jb
jge
repnz
stc
repz
cltd
loop
and
xchg
jae
cmc
outsl
subb
popf
ja
and
push
outsb
jle
adc
jne
sbb
xchg
push
lret
shl
xchg
xchg
notl
and
mul
cmp
push
mov
jl
aaa
sbb
mov
je
or
jo
mov
loope
mov
push
sub
cmp
or
adc
arpl
jne
dec
add
movsl
shrb
xlat
sub
rolb
bound
pop
cltd
or
add
push
mov
test
in
xchg
cmp
dec
nop
ficoms
mov
xor
xchg
loop
xor
push
mov
pop
mov
fcmovu
fs
sbb
rclb
xchg
fidivrl
lcall
mov
outsb
vpsrlw
sarb
aam
inc
inc
xor
rcll
loopne
dec
aaa
pop
push
inc
push
cli
push
movsl
mov
imul
jmp
ja
aam
stos
push
adc
mov
mov
popa
mov
call
xchg
mov
mov
jl
pop
push
rcrl
cmc
cmp
imulb
dec
mov
fnstsw
xchg
dec
popa
and
xor
add
fdivrl
inc
andl
fcoms
fs
fsub
ss
add
cwtl
lahf
push
inc
cmpsb
imul
das
mov
in
jge,pn
mov
pop
adc
leave
push
test
add
stc
sub
inc
jge
aam
into
add
leave
add
add
inc
rcll
fstpl
xor
jecxz
pop
cmp
insb
mov
mov
xorl
addr16
sub
sub
lret
sahf
mov
xlat
sbb
push
mov
inc
out
and
std
xchg
arpl
pop
popf
sub
popf
mov
mov
and
lock
adc
adc
inc
pop
mov
out
xchg
in
add
bound
mov
or
repz
cli
ret
fcomps
shrb
mov
arpl
pop
fisubs
mov
dec
push
pop
adc
inc
jnp
push
mov
les
mov
xchg
mov
mov
mov
pop
xchg
jle
push
shlb
adc
orl
std
shr
out
xor
ret
sahf
sbb
add
popl
popa
cmc
and
and
js
aam
test
mov
and
stos
test
sbb
aas
pop
in
hlt
mov
inc
leave
gs
out
cmpsl
fldcw
xchg
and
leave
lea
mov
cwtl
pop
xchg
outsb
push
clc
inc
push
insb
pop
xlat
or
mov
je
je
leave
or
xchg
pop
out
push
std
push
repnz
cmp
ljmp
cmp
mov
add
mov
mov
xchg
sbb
nop
mov
lock
push
xor
sbb
jo
out
adc
frstor
sbb
pop
aaa
push
or
inc
or
movsl
mov
push
sahf
hlt
inc
jle
cmpps
jae
bound
data16
mov
ficoml
inc
mov
sarb
iret
je
jle
adc
cmp
fiadds
push
xchg
push
or
and
rcrb
test
add
inc
xor
adc
and
es
scas
fs
iret
outsl
inc
sahf
js
mov
push
inc
sub
xchg
pop
loope
into
out
rorl
xchg
loopne
xor
jae
jbe
jnp
and
ss
into
daa
push
push
stos
int
imul
xor
fcomip
and
outsl
rorl
divl
push
pop
mov
rclb
in
gs
insb
loope
inc
pushf
fs
and
loopne
out
mov
sbb
pop
dec
lds
pop
add
fisttps
lods
add
pop
add
gs
ljmp
add
fwait
add
cltd
mov
add
add
push
add
mov
ret
pop
jno
or
js
push
mov
repnz
pushf
lret
in
adc
sbb
arpl
aas
jbe
enter
stos
mov
xchg
pop
repz
push
jbe
xchg
arpl
dec
cwtl
pop
testl
movsb
cmpsb
in
sub
mov
push
push
movsb
je
fdivl
cmp
out
ret
orl
fs
mov
xchg
fcmovb
nop
shlb
sar
fstpl
sub
or
mull
lds
in
movsl
lods
adc
popl
xlat
fildl
cmpsl
insl
cmp
inc
in
dec
xchg
or
mov
in
iret
dec
or
jp
je
test
mov
mov
psraw
mov
int
cld
leave
adc
mov
mov
inc
jb
aas
xchg
out
lcall
adc
fiadds
jnp
out
xchg
aas
jae
negl
add
dec
dec
popf
pop
pop
sarl
leave
cmc
xchg
lahf
inc
dec
adc
adc
mov
jmp
mov
lret
mov
ss
push
je
sbb
and
cmp
mov
jo
jb
mul
dec
leave
out
add
mov
xchg
in
inc
xor
lods
add
ret
rol
adc
shlb
in
cmp
mov
es
cmp
xor
inc
xor
cmc
sub
cmp
jbe
sbb
loopne
fcompl
cmp
hlt
mov
cltd
and
add
xchg
out
dec
insl
jnp
cmc
pop
mov
pop
stos
dec
daa
sbbl
mov
mul
ficoml
and
and
cmp
test
imulb
lahf
sub
lods
sub
xor
jne
aad
ljmp
adc
mov
icebp
push
inc
jle
xor
js
add
push
daa
push
shlb
jne
cmp
mov
outsl
je
mov
sahf
cmp
push
push
jne
mov
out
mov
dec
pop
sbb
mov
shll
xchg
andb
lret
dec
xor
lea
sbb
xchg
mov
inc
cmp
pop
pop
xor
lcall
leave
cmpsl
cmp
jns
jns
insl
dec
ja
or
ret
shrb
aas
je
pushf
adc
and
ret
testb
mov
fisttps
fidivl
pop
xor
and
lods
jle
lods
sbb
jp
xchg
dec
out
mov
in
cmp
adc
stc
xor
pop
and
arpl
repz
push
push
sbb
in
pop
fbld
pushf
push
cbtw
xchg
xchg
mov
inc
dec
lea
xchg
lock
xor
je
lret
or
mov
xor
push
sub
jmp
mov
sbb
mov
addl
lods
scas
orl
arpl
pop
jle
lods
shrb
pop
mov
imul
sbb
shl
jo
dec
popf
lods
add
mov
rcll
das
jo
iret
and
mov
dec
push
js
xor
fwait
xchg
dec
subl
aaa
ljmp
fwait
test
int
or
insb
xor
pop
mov
ret
imul
add
mov
inc
xor
xchg
ljmp
sub
sub
or
iret
outsl
jne
sbb
mov
std
test
lahf
pop
mov
cwtl
inc
roll
pop
jae
xchg
testb
int3
pop
into
push
into
aaa
je
cltd
push
call
fildl
push
pop
shl
jns
ret
aaa
mov
call
jle
cmp
rorl
aam
pop
or
mov
in
sbb
scas
dec
mov
and
pop
mov
ds
pop
xchg
push
fisubrl
out
cld
pop
and
push
xchg
cld
jp
clc
arpl
xorl
or
and
arpl
sub
scas
movsl
nop
jle
ds
mov
lahf
hlt
jmp
push
push
fstpl
inc
xchg
shrb
gs
mov
cmp
cmp
repnz
in
or
or
sahf
test
add
jecxz
pop
arpl
cltd
pop
subb
jne
adc
xchg
lods
int
lds
inc
sub
pop
pop
xchg
clc
mov
gs
adc
cmp
add
jnp
ffree
enter
data16
stos
fs
fsub
je
jmp
arpl
in
and
sub
fmull
movsl
cs
ds
or
leave
mov
dec
inc
dec
inc
sub
adc
fstpt
inc
dec
xchg
xor
and
cltd
jb
dec
push
push
jo
jb
cmp
or
into
mov
push
cltd
pusha
mov
mov
ret
push
sbb
push
fxch
aam
and
insb
call
xchg
sbb
scas
into
hlt
adc
out
out
adc
adc
js
jecxz
lcall
pop
xchg
lods
movsb
mov
jl
push
mov
inc
and
mov
dec
xchg
or
pop
sbb
repnz
mov
scas
add
lods
in
mov
xchg
adc
int3
sub
data16
add
xchg
push
stos
lea
cmc
cmp
test
mov
mov
push
inc
and
xor
das
sbb
dec
jae
or
aam
aad
mov
pop
and
movsl
scas
hlt
xor
in
pop
out
inc
pop
fwait
pusha
sbb
aaa
xchg
cmp
icebp
jne
pusha
sahf
mov
adc
in
aaa
mov
lcall
xor
cmp
xchg
insl
xor
push
rorl
cmc
fisubrl
cmp
push
fisubrl
sub
cmp
roll
mov
js
push
inc
stos
jge
add
in
mov
insb
rcrl
jnp
std
cld
jge
cmp
call
xor
mov
out
decb
in
dec
insb
fistpll
rcll
xchg
inc
jl
shl
lods
mov
inc
jnp
jae
sub
cmpsb
sbb
adc
addb
cmp
sbb
xor
sbb
dec
leave
ret
mov
enter
or
cmpsl
fwait
aam
cmp
clc
adc
lock
scas
jl
xlat
shl
outsl
add
sub
loope
into
mov
rorl
ja
sub
adcb
in
mov
movsb
pop
dec
inc
and
inc
pushf
mov
nop
cmpsb
xchg
push
or
imul
outsb
jle
out
dec
mov
jmp
fsubl
les
add
cmpsl
rcl
sub
push
sarl
xchg
or
pop
jnp
das
loope
dec
adc
dec
test
outsl
pop
mov
pusha
push
cli
je
lds
mov
repz
fdivl
pushf
rcrl
jno
ja
jp
bound
cli
or
clc
sbb
inc
inc
cmp
and
sbb
cmpsb
iret
stos
push
inc
fstpt
fs
jg
data16
xor
aam
mov
je
and
add
les
xor
in
lds
test
mov
mov
daa
cmp
mov
movsl
or
out
xchg
stos
jge
popa
roll
call
sbb
adc
sub
pop
lea
fisubrl
gs
pop
sarl
test
nop
or
jbe
fsubs
jmp
mov
shll
aam
inc
push
sti
arpl
pop
das
mov
push
lahf
adc
imul
cmp
mov
sbb
out
jge
out
sub
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
and
bound
pop
bound
mov
and
jg
bound
je
add
aas
ja
outsl
ss
cmc
fmul
mov
addr16
cmpb
test
push
push
jge
add
repz
cmp
int3
ret
xlat
cmp
sbbl
lcall
insb
fsubs
lcall
add
add
popa
inc
insl
lret
mov
pop
rcrl
shlb
shlb
int3
cmpsl
push
xchg
enter
push
and
shll
jle
hlt
mov
fnstenv
icebp
push
jg
mov
outsb
sbb
into
dec
add
and
add
jp
xchg
pop
imul
and
repnz
scas
js
jne
lea
fmull
cld
rorl
push
and
jmp
pop
icebp
int3
insl
je
insb
cmc
push
or
xlat
push
cmpsl
les
fwait
mov
movsl
xchg
adc
cmp
and
fists
sub
jnp
lret
and
pusha
fistl
pop
add
xchg
inc
add
jg
push
dec
loope
push
data16
into
jmp
or
pop
jns
adc
or
push
pushf
mov
fsubr
push
orl
pop
lds
outsl
cmp
push
push
jnp
ljmp
inc
out
scas
leave
add
sti
fnstenv
cwtl
data16
sbb
call
inc
sbb
mov
xchg
adc
push
ja
cmp
rcrl
fldt
mov
jnp
scas
rcll
ljmp
daa
lock
inc
or
xchg
icebp
jns
xchg
pop
xchg
jecxz
arpl
mov
aaa
roll
shl
mov
imul
push
mov
fistpl
add
and
mov
and
dec
push
push
xchg
xchg
or
sub
dec
mov
xor
loopne
fistps
int
xchg
or
pop
movsb
mov
jb
jmp
lds
cwtl
inc
rclb
or
sub
cli
adc
subl
dec
in
jmp
pop
xchg
outsl
xor
jecxz
inc
ds
fxch
inc
adc
cltd
cmp
lock
pop
sub
jg
mov
arpl
pop
int3
inc
out
sub
addl
jno
movl
xchg
add
cs
in
lcall
into
inc
test
dec
cwtl
mov
jl
lcall
stos
xchg
mov
cmc
lea
add
gs
out
iret
in
xorl
cmp
mov
push
sbb
mov
imul
insl
add
jmp
nop
repnz
sbb
out
dec
mov
xchg
inc
cmpsl
aas
mov
fildll
mov
add
or
fisttpl
test
fadd
mov
jno
dec
gs
push
jmp
mov
rcrl
ret
xchg
loop
std
push
xor
or
in
out
inc
or
pusha
sti
pop
jmp
in
test
lcall
jb
mov
jg
jle
jecxz
mov
xor
daa
xor
jmp
xor
or
jae
cmpsl
fidivrl
out
mov
jae
and
int3
or
sub
repz
int
mov
fadds
xchg
mov
pop
mov
or
fsub
out
xchg
test
jecxz
and
adc
pop
sbb
adc
test
fnstsw
dec
xchg
lahf
fwait
sub
leave
insl
aad
sbbl
xor
mov
sub
or
mov
xchg
mov
pop
clc
mov
and
out
or
mov
loop
jle
xchg
xchg
xchg
mov
or
adc
test
std
mov
loopne
pusha
ja
aam
int3
lret
repnz
int3
popa
sub
in
mov
mov
repz
dec
addb
jae
jecxz
jg
xchg
and
inc
sbb
rcrb
fnstcw
add
cmp
insl
fiadds
fsts
xorl
fimull
sub
mov
cltd
push
imul
and
imul
sarl
add
jae
dec
pop
mov
fstpl
mov
xor
sbb
cld
pop
push
dec
xor
fisttpl
or
enter
cltd
sub
jb
mov
mov
in
cwtl
aad
xor
push
int3
movsl
adc
dec
loopne
out
dec
rolb
mov
dec
jo
xchg
stos
mov
call
mov
cmp
pop
mov
sub
aam
lret
into
fdivs
imul
push
shrb
or
scas
outsl
int3
pop
xchg
fs
out
sub
xchg
les
nop
adc
subb
cmp
xchg
fldl
sub
cmp
inc
jbe
test
push
mov
lods
sbb
std
icebp
inc
mov
mov
mov
xor
pushf
psubsb
aaa
and
aas
mov
outsb
es
dec
cli
scas
jp
insb
xchg
sbb
jl
sub
mov
or
dec
xchg
sub
inc
adc
inc
mov
bound
and
data16
jne
xor
aas
mov
ljmp
xchg
loop
xor
add
mov
mov
aad
in
xlat
xchg
push
inc
movsb
aam
repnz
inc
mov
inc
out
jmp
sbb
cmp
out
pop
inc
je
pop
mov
pushf
push
clc
adc
xchg
xchg
nop
add
inc
fdivs
int3
mov
push
pushf
loop
push
in
bound
inc
in
data16
pop
add
shl
out
jb
cld
xchg
jb
add
jnp
mov
test
lds
mov
testl
and
test
rolb
cmp
pop
push
cs
jl
scas
bound
cmp
sub
inc
paddb
cmpsb
into
pop
sub
cld
icebp
shlb
stc
sarb
stc
cmp
in
sub
sub
fstl
ficoml
pusha
fwait
test
pop
out
mov
dec
loop
xchg
mov
popf
test
mov
dec
jmp
cmp
cmpsl
leave
mov
pushf
or
mov
lods
aaa
les
mov
cmpsb
sub
mov
dec
add
imul
test
pop
inc
and
mov
jns
pushf
inc
mov
icebp
lret
enter
call
sbb
sub
xchg
xor
cs
push
inc
adc
mov
cmpsl
mov
cmp
and
movsl
or
mov
cmp
mov
ret
movsb
push
andl
cmc
lds
and
in
adc
int3
mov
jp
add
jns
xlat
mov
push
mov
mov
inc
jecxz
rcl
xor
hlt
inc
mov
sub
aam
sub
lret
repnz
jp
das
lret
add
push
lcall
xlat
or
xchg
test
add
adc
fnstsw
xchg
push
dec
imulb
adc
mov
push
in
out
insb
repnz
inc
enter
xchg
inc
fisubrs
bound
adcb
push
or
or
mov
and
sbb
cmp
test
test
test
inc
mov
nop
mov
push
in
movsb
jns
pop
and
mov
add
mov
jne
or
fwait
shll
stc
inc
mov
xchg
icebp
adc
jne
jmp
sahf
es
inc
sub
gs
mov
push
jmp
lea
scas
mov
popl
bound
dec
test
push
xchg
rorb
fldt
xchg
ret
fdivl
sub
shrb
dec
push
mov
mov
outsl
in
mov
lcall
sbb
xchg
cmp
cmp
pop
add
cmpsl
xlat
mov
inc
mov
cmc
test
jns
out
push
cmp
ret
out
push
insl
mov
xor
ret
imul
sbb
gs
xchg
adc
ljmp
inc
stc
push
test
or
sub
test
pop
dec
xlat
ficomps
jle
test
mov
jnp
ret
clc
xchg
js
rcr
das
call
jno
gs
xor
xchg
push
idivl
push
icebp
adc
pop
mull
cmp
xchg
push
jge
or
pushf
lds
inc
lret
fbstp
or
dec
push
in
inc
jno
xor
int
xchg
in
stc
out
test
add
sub
lds
out
and
mov
lock
pushf
mov
xchg
lcall
clc
add
pop
or
xor
sub
ds
push
insl
shrb
jae
scas
cmp
add
sti
mov
xchg
pop
inc
push
adc
out
and
dec
add
sbb
push
cmp
mov
inc
loopne
ss
mov
pop
cwtl
inc
sub
int
out
mov
repz
or
cmc
inc
insb
push
call
sub
push
adc
cs
cmc
mov
arpl
sub
cmpsb
dec
shll
or
fildll
sbb
in
andl
cli
call
or
vmovshdup
ljmp
mov
mov
shrb
lods
xchg
imul
in
inc
icebp
mov
rclb
mov
int3
jle
jo
and
mov
jo
insb
add
sub
out
cmp
jno
cmp
mov
inc
jbe
mov
rcll
hlt
jle
das
mov
and
cmp
sub
jae
shrl
arpl
pop
pop
fnstenv
daa
mov
sub
idivl
inc
adc
fadd
test
loop
add
xchg
es
jmp
test
inc
aad
pop
add
xchg
push
pop
leave
pop
pushl
adc
enter
rorb
into
pushf
and
push
fwait
test
cld
jge
or
and
aad
pop
inc
in
insb
call
push
dec
repz
push
jmp
push
lret
mov
sarb
incb
pop
pop
testl
aas
cmc
aam
pop
sbbl
cld
ret
xor
int
cmpsl
and
xor
jp
add
sub
and
nop
test
andl
sarb
add
and
repnz
push
xchg
and
fisttps
pop
push
mov
jmp
pusha
fnclex
shlb
fsubl
sarb
stos
add
mov
push
js
jge
mov
outsb
fnsave
inc
push
add
cmp
fsub
xchg
das
mov
aad
add
mov
mov
popa
adc
jns
xlat
repz
jmp
mov
fisubl
pop
adc
sub
cltd
mov
mov
mov
and
insl
xchg
add
stc
insb
insb
jbe
jae
sub
test
push
pop
and
testl
pop
sbb
enter
pop
dec
inc
lea
dec
aas
xor
add
nop
inc
sbb
push
fdivrp
mov
sub
fdivs
mov
push
pop
or
sbb
nop
xchg
lds
inc
jne
or
mov
cmp
lcall
jmp
sbb
ja,pn
jge
in
pop
mov
xchg
dec
test
sbb
rclb
andl
lahf
or
data16
repnz
push
mov
rcr
scas
or
test
lcall
adc
xor
clc
mov
push
aaa
cmp
xchg
mov
pop
ljmp
and
pusha
inc
lahf
jne
dec
mov
xor
dec
lods
xor
nop
lock
sbb
ret
sub
pop
or
pop
iret
out
call
dec
es
out
insl
es
or
xchg
rcl
pushf
pop
cmp
push
or
aam
add
push
pop
inc
push
cmp
movsl
fs
or
lock
scas
push
xor
cmpsl
mov
jecxz
movsl
inc
or
mov
push
repnz
jb
adc
test
mov
inc
xchg
push
inc
icebp
bound
fwait
fs
imul
fbld
scas
sarb
fwait
add
jp
xor
add
test
add
xchg
cmp
xchg
jge
mov
call
and
cmp
inc
lock
push
add
push
xor
and
test
repz
lret
jge
mov
jle
mov
mov
shlb
cmp
shrb
xchg
cwtl
aad
inc
jns
sub
shll
sbb
cmp
andb
into
popf
cltd
std
cmpsl
out
js
push
repnz
and
sbb
sahf
jge
or
mov
inc
push
mov
shll
xor
push
jns
ret
adc
push
pop
shrb
inc
push
or
iret
scas
pushf
and
push
push
fwait
adc
push
divl
out
cmp
std
aas
mov
mov
mov
push
gs
cli
iret
imull
fisubrs
popa
sub
inc
pushf
arpl
ljmp
je
or
popa
xor
cmp
ja
shl
pushf
sbb
cmp
xor
inc
sar
dec
pop
shrl
adc
mov
push
mov
dec
sbb
mov
lea
pop
sti
je
repz
jbe
dec
jle
test
or
and
lea
inc
or
in
out
aas
hlt
inc
sahf
cs
popa
mov
sbb
push
xchg
andl
aaa
fcomp
inc
or
xchg
test
sbbb
pop
out
xchg
mov
ss
fnsave
pop
push
jae
pop
add
sub
sub
push
imul
xchg
cmp
mov
ss
jae
fcmovbe
into
das
jno
lods
out
fisttpl
mov
push
mov
pop
leave
frstor
sti
aaa
mul
scas
or
mov
adc
jae
sub
roll
sbb
pop
sbb
insb
vmaxsd
je
cmp
sbb
shll
scas
sbb
push
dec
pop
cmp
fdivs
lds
and
test
add
mov
cmp
mov
dec
mov
clc
jecxz
out
scas
jge
rcrb
jb
mov
mov
cwtl
push
mov
jns
dec
mov
xchg
test
mov
adc
into
push
dec
pop
xor
clc
or
mov
jbe
int
dec
out
sbb
push
and
dec
or
mov
hlt
stos
push
int
imul
mov
push
lods
test
ja
and
add
outsl
inc
or
mov
cmp
mov
jg
aam
lret
jle
push
and
lahf
pop
inc
xchg
enter
loop
xor
cmp
cmc
shr
pushf
cmp
xchg
bound
sbb
popf
arpl
insl
or
dec
subb
jno
leave
lcall
in
dec
movl
push
push
sub
ss
sub
adc
dec
fidivl
test
or
pop
sahf
push
notb
outsl
jp
xor
test
pop
popa
js
pushf
push
inc
outsl
xchg
mov
testb
stos
mov
xchg
xchg
pop
push
roll
add
push
jge
mov
cld
xor
dec
xor
cmp
das
test
adc
js
into
rcrb
in
mov
int
fs
aas
sbbb
pop
mov
lods
xchg
xchg
divl
and
rclb
shr
jbe
pop
mov
inc
pop
mov
and
sbb
and
sbb
xor
push
mov
ret
adc
mov
mov
popf
mov
jnp
push
ret
mov
xchg
xchg
push
popa
cmpsb
push
dec
cmp
xor
cmc
cwtl
repz
inc
cwtl
mov
movsl
std
cli
ret
faddl
or
out
and
push
cmp
xchg
pop
pusha
push
push
or
rcll
push
mov
inc
adc
data16
add
and
cmpsb
cs
movb
sbb
mov
or
sub
dec
pop
popf
test
scas
mov
icebp
ret
or
mov
cmpsl
in
mov
sub
enter
mov
push
lods
movsl
or
inc
enter
dec
fmull
mov
and
ljmp
mov
add
inc
mov
cmp
cmpb
icebp
aam
test
or
cmp
fsubl
mov
mov
and
xchg
loop
jae
and
hlt
add
ror
aam
loopne
and
rcll
inc
js
int3
xor
dec
and
cwtl
js
or
fsubs
xchg
scas
pop
mov
push
mov
cmp
add
sub
xchg
cmpsb
and
mov
outsb
addr16
test
mov
mov
inc
es
add
shrb
adc
adc
sub
pop
out
and
aam
add
push
mov
or
push
add
sbb
jne
inc
jecxz
leave
jmp
fldt
mov
sub
jbe
push
inc
cli
fiadds
jae
pop
pop
jge
jo
lret
test
push
inc
movsl
sbb
pop
aad
lcall
fsubr
lock
fisttps
jg
push
mov
ljmp
ss
mov
call
add
cmc
iret
xor
ljmp
jbe
xor
gs
popl
mov
cmpsl
std
push
rcll
push
cli
dec
loopne
mov
sub
cli
dec
add
mov
test
rorl
and
pusha
jg
jbe
cli
xor
and
xchg
cmp
sbb
call
pop
loop
xchg
mov
jbe
adc
cmp
int
lods
mov
aam
jecxz
insb
lret
mov
je
cltd
or
imul
popa
or
sbb
push
mov
pushf
sbb
jbe
inc
adc
scas
jp
fdivrs
fdivr
ficompl
imul
scas
ljmp
iret
decl
sahf
add
cs
mov
mov
bound
dec
cmpl
fisttpll
cwtl
icebp
add
adc
and
test
sbb
mov
lret
push
lods
push
imulb
jne
push
insl
xor
andb
dec
aaa
cmp
jmp
pop
aad
pop
aam
xor
sub
mov
loope
outsb
pop
imul
sti
jb
jne,pn
packuswb
std
or
jl
pop
lcall
mov
xor
imulb
xor
cmpb
shl
inc
clc
leave
pop
mov
pop
imul
sbb
jne
inc
scas
repnz
xor
int3
arpl
or
shll
and
dec
dec
in
mov
std
mov
imul
pop
cmp
loopne
rcrl
imul
test
nop
fcomps
enter
in
sahf
lock
loope
push
rorb
fwait
rol
xlat
movsb
aad
lahf
mov
ja
mov
push
aam
fs
fcmovbe
sub
cli
inc
faddl
add
xchg
jmp
mov
jno
int3
xchg
pop
mov
cmp
mov
or
push
in
dec
pop
setae
jmp
mov
arpl
xchg
out
aas
nop
xchg
inc
sahf
mov
insb
sub
loope
jb
mov
imul
ja
pop
xor
enter
fadds
setb
imul
inc
jle
fidivrs
inc
push
outsb
inc
outsb
sbbb
ret
shrl
mov
xchg
roll
pop
std
fdivs
inc
pop
scas
push
je
push
lea
jmp
jnp
rcrl
xchg
rcl
pop
push
xchg
fisubl
dec
sbb
mov
mov
push
int3
mov
mov
jmp
push
jno
test
in
lret
lds
fistpl
out
push
mov
fsubrs
std
pop
je
mov
jmp
pop
sti
inc
pop
movsb
addr16
jle
arpl
mov
add
dec
or
in
or
pop
rcll
sub
aas
or
nop
xor
lahf
sbb
gs
std
pop
mov
mov
xchg
mov
fcoms
mov
sti
add
mov
out
shrl
std
adc
inc
out
and
inc
jl
xchg
sbb
sbb
ret
dec
jbe
lahf
enter
cmp
cmpsb
sbb
inc
add
add
int
or
icebp
test
cmpsl
push
movsl
inc
mov
aaa
arpl
cld
imul
jp
movsl
fcmovnbe
and
xor
pop
shr
xchg
jo
data16
mov
or
cltd
insl
push
jno
jbe
push
sub
aad
xchg
pop
pop
xor
push
mov
add
mov
idivb
xchg
data16
and
inc
js
or
add
jae
sub
and
jno
and
jne
or
mov
mov
inc
push
mov
lea
hlt
adc
cmpsb
mov
xchg
psrld
mov
out
fcmovbe
mov
lds
pop
in
push
arpl
aam
lret
sbb
jbe
std
scas
mov
mov
fs
fmuls
push
or
push
dec
cmpb
jge
cmpsl
ljmp
adc
pop
xlat
int
loope
imul
cmpl
jne
push
cmp
mov
lret
jecxz
les
daa
rcrl
mov
pop
jbe
xchg
cmp
adc
test
ljmp
mov
adc
add
push
and
pop
mov
pop
imul
stc
shrb
in
daa
mov
pop
cmp
ljmp
or
pop
adc
in
idivb
dec
and
push
push
js
cmp
adc
fsubrs
fcmovu
sub
jbe
leave
pushf
outsl
add
add
fimull
xlat
cmp
jno
add
jae
push
jnp
stos
sbb
in
cmpsl
loop
xor
mov
sbb
sbb
out
fidivrl
imull
xorb
mov
sub
xchg
aas
inc
sub
out
mov
lcall
or
mov
inc
cmp
rolb
loopne
xchg
push
pop
daa
sarl
loope
inc
mov
les
imul
adc
pop
xor
shr
cmp
xor
xor
pop
ret
sub
cmc
cwtl
mov
call
sbb
icebp
inc
sub
outsl
loop
mov
loope
inc
bound
fwait
test
mov
jo
and
mov
andb
push
les
sub
outsb
inc
sub
jo
jns
cmp
push
inc
and
imulb
ja
inc
ret
mov
or
pop
adc
and
arpl
mov
pusha
xchg
call
cmp
inc
call
stos
push
loopne
cmp
fmull
or
divb
sub
inc
rcll
cmpsl
in
sub
xor
scas
test
int3
sbbb
adc
addr16
jo
mov
or
lds
repz
fldenv
int3
test
je
inc
pushf
xchg
addl
pop
out
jbe
push
outsl
cs
movsb
cwtl
aaa
repz
push
iret
push
je
sub
xchg
aad
subl
clc
sbb
test
push
int3
cmpsl
aad
aas
push
mov
scas
xor
mov
push
lahf
in
mov
jb
mov
in
mov
and
sub
xor
sarl
outsb
rcr
adc
cmp
jnp
mov
sub
ja
pop
xchg
int3
cmpsb
sub
lret
xchg
jle
nop
xor
js
adc
shrl
pushf
xor
pushf
jb
jmp
sahf
daa
aas
lds
fldlg2
into
jo
lods
or
ds
shll
fsubr
or
jno
repz
jns
adc
xlat
dec
xchg
adc
repnz
inc
arpl
mov
addr16
pop
and
xor
cli
cmp
cmp
imul
push
push
and
out
sbb
xchg
pop
jg
repz
stc
int
jp
call
sub
movsb
repnz
pop
or
fidivrs
mov
rol
loope
push
push
cltd
lret
cld
cs
inc
je
shll
pop
ss
rcr
movsl
int3
mulb
repz
xor
cmpsb
and
mov
cmp
sub
popa
iret
jle
xor
fcomps
lcall
shr
mov
vcomiss
inc
call
out
push
xchg
rclb
shrb
xlat
out
xchg
arpl
stc
js
dec
dec
pop
loopne
sbb
mov
cmpsb
int
insb
cmp
loope
pop
push
xor
pcmpeqd
jbe
sbb
mov
loope
jno
dec
push
les
inc
fwait
push
mov
add
pushf
mov
sti
scas
lret
mov
inc
mov
test
bound
sbb
dec
out
push
jmp
jb
jge
inc
xor
movsl
int3
mov
aas
pop
int
out
cmpsb
mov
or
push
ret
nop
sub
and
dec
lock
adc
mov
nop
ljmp
icebp
mov
stos
sbb
or
ds
divl
imul
push
mov
int
xor
jl
out
sub
sbb
cmp
popl
jae
push
mov
ficomps
pop
lods
cli
cmp
jg
mov
insl
int3
stos
stos
fst
xlat
xor
js
pusha
clc
sahf
and
and
mov
xor
lock
mov
cmp
pop
cli
xor
mov
mov
mov
popw
mov
add
shlb
insb
sbb
xchg
out
inc
sahf
in
xlat
lock
test
pop
rcrb
dec
push
push
rcrb
pop
pop
cwtl
adc
loopne
mov
aad
ficompl
dec
cmp
mov
sub
adc
dec
arpl
pop
lods
mov
dec
cwtl
das
push
xchg
pop
sub
stos
dec
mov
sub
into
adc
cld
jle
xchg
lods
loope
ss
jb
add
and
or
rcrl
imul
scas
fisttps
int
lcall
xor
push
mov
rcrb
insl
inc
mov
or
mov
fistps
into
mov
lea
paddd
call
xchg
jge
rolb
push
out
popf
pop
push
inc
sbb
dec
filds
mov
sub
cmpsl
idivl
add
and
and
add
outsb
sub
jae
loopne
mov
xchg
xlat
insb
pusha
in
fbld
cwtl
cli
jg
jmp
popa
scas
sub
ja
clc
mov
lock
mov
popf
rorl
or
sub
push
les
lods
sbbb
mov
imul
jmp
lahf
insb
fs
inc
sahf
cltd
jb
sbb
jae
das
xchg
cli
inc
bound
testl
lcall
arpl
pop
popf
dec
dec
test
out
clc
xor
cwtl
loopne
sbb
mov
aas
lret
call
inc
push
push
dec
in
sbb
fwait
cmc
subl
cmpsb
cmc
jo
into
mov
cmc
in
lock
test
popa
mov
call
out
mov
rcll
jp
push
xchg
cmp
mov
push
mov
mov
dec
mov
push
push
jae
mov
jnp
sub
jge
or
js
lea
xor
push
and
aam
jae
mov
and
imul
loope
pop
sbb
arpl
sbb
adc
cmp
mov
xchg
mov
lea
test
int3
ffree
popf
jns
xchg
inc
mov
lcall
push
lds
inc
mov
aaa
and
scas
xlat
adc
bound
or
sbb
dec
imull
rolb
jae
inc
jmp
arpl
inc
fwait
and
nop
clc
scas
aam
repz
mov
cli
orb
in
dec
jl
int
mov
mov
add
mov
fcompl
push
add
enter
push
movsl
mov
dec
mov
jmp
adc
enter
mov
in
or
adc
jne
fildl
stos
ss
jo
xchg
mov
jmp
sub
imul
stos
arpl
leave
mov
sub
xor
cltd
rol
ds
mov
nop
sub
mov
rorb
pop
or
std
inc
lcall
push
bound
xchg
mov
jg
or
xor
pop
push
mov
sbb
add
pushf
cmp
cmp
filds
sub
mov
adc
mov
pop
scas
cmc
xorl
dec
and
pusha
sub
js
mov
push
cmc
add
xchg
aaa
xor
lods
call
je
mov
inc
jg
xorl
sub
xor
lret
hlt
addl
push
xor
dec
daa
stos
lock
push
jnp
sub
imul
mov
mov
pop
int3
testl
les
repz
mov
cld
std
insl
popf
fisubl
aam
mov
mov
jae
mov
mov
inc
push
jbe
mov
inc
mov
adc
mov
mov
popl
xor
or
push
fisttps
jmp
loope
movsb
aam
cmp
jae
je
je
icebp
add
dec
push
pop
xchg
mov
je
dec
insb
adc
push
or
in
mov
pop
mov
pop
dec
jle
xlat
cmpsl
loopne
hlt
scas
jnp
hlt
adc
stos
mov
jg
mov
ds
mov
push
leave
dec
out
cli
cmc
xchg
lea
inc
mov
jo
rcr
sbb
scas
xor
pop
sub
xchg
jnp
hlt
movsb
mov
js
jg
inc
jp
mov
testl
out
add
insb
ret
mov
test
aad
xchg
shlb
jbe
rolb
dec
dec
xor
xor
mov
ficoml
pop
cmp
fsubr
aas
mov
dec
cmp
cmpsl
or
push
xor
cltd
shl
out
jp
loopne
popf
cmpsb
loopne
ret
cmp
into
jg
xor
ds
or
scas
mov
jmp
cmp
jle
icebp
ljmp
outsb
arpl
or
push
sub
insb
ljmp
iret
in
dec
out
in
mov
ds
mov
leave
jl
xchg
sub
dec
xchg
jle
add
ds
inc
jmp
out
xchg
cmpsl
dec
xor
jne
movsl
jmp
cmp
sbb
shr
out
adc
pop
fmul
dec
aam
nop
xor
bound
mov
xlat
mov
sub
push
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
mov
shll
jmp
bound
dec
and
imull
xor
data16
fisubl
in
pop
loop
testl
dec
push
je
movsl
sbb
cmp
inc
mov
jne
bound
in
cli
cmp
sahf
cmp
mov
cmp
and
test
adc
es
in
shl
fmuls
pop
fidivrl
mov
inc
xlat
out
jmp
mov
add
lock
in
pop
pop
fwait
hlt
test
add
jmp
rcl
test
push
out
enter
stc
dec
and
scas
repnz
xor
lods
push
sub
jb
test
pop
rcl
sub
aas
or
mov
movsb
mov
jnp
push
mov
rorl
jg
push
pop
inc
cwtl
movsb
and
sbb
jp
aaa
ljmp
add
cmc
shl
sbb
ds
inc
jbe
or
mov
push
mov
jo
dec
fsubr
shlb
fwait
lahf
stos
xor
and
lahf
cmc
cwtl
je
push
lcall
test
jno
mov
or
jne
push
bnd
jmp
call
xor
ret
cs
lahf
das
jecxz
movsl
mov
in
stos
js
add
inc
je
call
divl
inc
sub
pop
push
gs
add
jno
or
or
pop
outsb
stos
adc
jo
sub
and
or
sub
inc
mov
inc
test
sbb
pop
pop
dec
jle
xor
jecxz
jg
fadd
inc
mov
adc
shr
push
psllw
inc
nop
lea
int3
lods
daa
aaa
jb
imul
loopne
jbe
ds
aaa
xor
ds
inc
jbe
pop
leave
mov
dec
popa
mov
clc
cmp
cmp
cmc
add
sub
shll
mov
cmp
std
dec
repz
dec
push
dec
iret
mov
es
je
clc
adc
adc
lock
in
adc
int3
mov
inc
cld
dec
inc
pop
lcall
imul
push
gs
divb
hlt
cmpsb
in
sbb
inc
add
jg
sbb
adc
test
insl
inc
sbb
jns
and
mov
cltd
lcall
push
lds
stos
mov
loop
xchg
mov
push
sbb
loope
addb
jmp
mov
mov
out
mov
xlat
movsb
inc
cwtl
mov
jae
stc
xchg
push
sub
push
mov
push
sti
stc
cmp
sub
es
and
sbb
rcrb
cltd
icebp
icebp
dec
sbb
cld
cmpsl
nop
push
sbb
jb
popf
jnp
pop
xchg
push
dec
imul
out
adc
in
mov
negb
mov
fsubrp
popf
psadbw
lcall
movsb
test
clc
mov
clc
cli
nopl
inc
je
mov
mov
push
mov
mov
test
inc
es
flds
lea
jp
test
stos
mov
mov
mov
lret
mov
xchg
shl
dec
and
inc
ffreep
push
lret
sub
orb
bound
sub
jecxz
je
and
jb
pop
in
push
sbb
sbb
lretw
bound
pop
loope
jb
andl
fiaddl
jae
xlat
mov
adc
pop
mov
pop
leave
pop
dec
icebp
cmp
or
or
ret
lock
mov
in
sti
xchg
pop
xchg
mov
hlt
pop
jns
std
sbb
jl
fnstcw
mov
pop
dec
inc
sbb
pop
jge
pop
jno
mov
inc
mov
or
fs
pop
sub
push
push
xchg
in
addr16
cmp
sbb
notb
sub
gs
sub
test
aam
dec
les
pop
pop
fsubp
pop
mov
lods
add
lret
xchg
mov
mov
mov
jle
cwtl
loop
xchg
test
cli
xchg
jl
scas
push
popa
dec
mov
iret
dec
mov
into
jne
xor
mov
mov
or
pop
mov
sbb
inc
pushf
push
xor
lcall
and
push
and
cli
inc
lahf
sti
sbb
fisubl
inc
sub
shr
ja
outsb
and
sbb
fwait
push
cli
adc
cmp
pop
fbstp
std
cmp
push
out
scas
add
cmp
jo
xor
test
cmp
jns
cld
lods
movl
out
scas
and
mov
or
ds
cmpsl
xchg
cmpb
push
xchg
xor
add
sti
ja
sub
and
jns
fidivrs
or
mov
sbb
cmp
repnz
mov
jg
js
jmp
sahf
cmp
cmp
sub
nop
out
mov
cmp
or
push
xchg
leave
jnp
pop
addr16
push
mov
dec
ret
mov
adc
sbb
dec
mov
js
test
cmp
js
mov
inc
dec
pop
mov
inc
repnz
pop
cwtl
xchg
dec
add
ficoms
testb
mov
mov
mov
push
cmc
mov
sub
cmp
xorl
pop
mov
mov
dec
jecxz
ja
negb
insb
sbb
iret
sub
xor
fimuls
enter
adc
jo
xlat
inc
stos
xchg
pop
xor
lock
lret
lret
jne
ret
in
mov
or
add
repz
adc
mov
aam
mov
dec
add
mov
pop
push
jne
push
push
data16
xor
in
icebp
data16
gs
icebp
in
aaa
sarb
mov
sub
xorl
cwtl
jnp
sub
xchg
add
inc
xorl
cmpsb
xor
inc
clc
les
dec
jno
jp
jae
gs
sbb
in
pop
popa
in
ljmp
lret
es
rolb
aam
adc
insb
mov
ficoml
jge
pop
sbbb
inc
es
aaa
jg
icebp
mov
pop
fdivrs
ss
add
mov
fwait
sahf
or
cmpsl
lret
ss
enter
iret
jmp
mov
and
imul
dec
pop
gs
shl
add
test
nop
cld
mov
lods
pop
mov
add
mov
add
mov
out
jo
add
xor
mov
repnz
pop
mov
or
or
fldl
call
ret
fistl
cli
nop
adc
stos
cmpsl
sarb
pop
xchg
push
hlt
push
mov
cltd
leave
mov
add
addl
xor
xchg
sub
xchg
dec
fstpl
aad
sbbl
in
mov
jecxz
fbld
cmc
mov
call
sub
sar
in
dec
int3
mov
sub
fcmovne
rcl
mov
jno
jg
pop
push
jg
sub
cmpsl
rcrb
and
cld
adc
cmp
lretw
int3
mov
jge
xchg
sbb
dec
ss
add
popa
cli
loop
cli
cmpl
cmpsl
push
push
cs
inc
mov
cli
arpl
les
push
xchg
aaa
repz
lret
xor
inc
gs
loop
fmull
pop
into
pusha
in
pop
mov
or
add
xor
fistl
jbe
repz
mov
or
inc
pop
pushf
mov
lods
sub
shll
aaa
inc
test
push
jo
xor
pop
popf
nop
xlat
movsl
mov
lcall
rcr
mov
or
outsb
je
jge
inc
sbb
mov
or
inc
test
leave
and
pusha
int3
test
hlt
cmp
add
pusha
arpl
enter
cs
in
fs
ret
mov
mov
fdivp
rcll
pop
clc
mov
sbb
add
fdivrs
dec
jo
cmpb
sar
add
and
and
xchg
in
add
dec
rolb
push
divb
mov
arpl
push
lods
icebp
xchg
insb
mov
pop
push
out
rolb
xlat
or
jb
push
daa
sbb
xchg
jge
iret
inc
mov
mov
icebp
movsb
nop
push
mov
mov
aam
lea
dec
add
iret
fcompl
rcl
jbe
cmp
adc
fsubs
lods
mov
js
push
aad
jp
mov
lock
push
push
jmp
push
lods
push
pop
stos
test
mov
jp
mov
or
fcmovbe
das
rorl
rcl
add
bound
lock
cmp
addr16
lods
sbb
xor
push
xchg
imul
or
icebp
les
outsb
mov
dec
mov
jb
std
pop
fwait
mov
xchg
sbb
jmp
jb
adc
sub
repnz
lods
jae
sti
sti
and
jmp
nop
jmp
lcall
lds
and
ja
int
js
cli
mov
sub
test
jae
mov
xchg
mov
out
shll
mov
stc
adc
mov
dec
pop
inc
cwtl
and
out
add
dec
icebp
nop
pop
dec
icebp
ucomiss
cmp
xorb
jae
xchg
fisubrs
adc
fisttps
shlb
mov
fwait
shr
xchg
push
adc
lods
int
iret
sub
sub
jmp
aaa
mulb
jge
cmp
adc
pop
add
xchg
inc
test
loopne
nop
mov
mov
lahf
jae
scas
pop
dec
nop
inc
dec
or
dec
push
aam
stc
lret
push
test
fldl
push
xor
push
rorb
popf
add
int
pop
inc
pushf
outsb
out
dec
imul
out
daa
pop
cmp
xchg
push
pop
test
popa
push
inc
sub
js
daa
jnp
test
adc
sbb
aaa
jne
push
enter
dec
jle
jae
pop
inc
std
pop
movsl
test
xchg
test
or
sbb
movsb
cli
push
dec
sti
pushf
jmp
sbb
stos
inc
sub
js
and
sbb
xor
aas
pop
test
inc
inc
js
dec
and
movsb
insl
mov
cmp
cmp
inc
sub
xchg
mov
jge
fdivrl
and
mov
sub
jmp
dec
movsb
jnp
mov
subb
mov
push
xor
xchg
mov
inc
sti
and
repz
lret
lods
pop
cmp
pop
adc
inc
pushf
mov
jg
adc
arpl
sub
jnp
lock
xor
fs
and
sub
mov
pop
jl
mov
xchg
cmp
stos
lea
cld
fistpl
xchg
fildll
jmp
loop
scas
mov
sarb
aam
jne
inc
out
dec
fnstsw
mov
sub
jns
clc
or
into
push
fmul
out
or
lcall
clc
xor
cltd
insl
stc
ja
aad
inc
mov
or
adc
mov
jle
xchg
data16
stos
mov
ret
dec
shll
cmpsb
movsb
jae
push
in
sarl
clc
pop
lea
mov
js
jno
enter
jb
mov
adc
mov
push
add
ss
in
pop
jmp
push
mov
popl
add
idivb
inc
mov
and
loope
fisubs
adc
shr
data16
enter
sti
push
or
ja
push
adc
mov
lods
andb
int
insb
mov
testl
mov
fs
cmp
subl
scas
repz
mov
pop
sub
xchg
in
xor
jle
inc
cmp
loopne
sti
insb
leave
loop
xor
ret
inc
fwait
cltd
add
std
pop
sbb
into
pop
cmp
lock
push
inc
mov
clc
stos
fldenv
push
xor
mov
cmp
sbbl
sti
jbe
popf
inc
or
in
mov
xlat
jmp
mov
cmp
inc
sbb
xor
push
sbb
push
adc
fidivl
inc
jmp
imulb
push
sbb
jb
sub
sbb
jnp
lret
adc
shll
mov
mov
scas
push
lret
mov
lret
lods
sub
daa
push
dec
pop
dec
repz
xor
xor
push
out
inc
and
sub
mov
jo,pt
jp
sub
mov
mov
push
out
ljmp
loope
repnz
push
or
dec
xor
sub
sbb
popf
outsl
inc
jbe
aad
xor
frstor
dec
inc
inc
lds
mov
in
sub
dec
jge
ja
bound
mov
shl
fwait
inc
mov
scas
xchg
js
xor
lods
fimuls
jo
xor
push
pop
and
scas
push
xor
cs
adc
adc
push
mov
aam
fisubs
mov
fwait
xchg
mov
ret
jecxz
das
fadds
lods
adc
rclb
add
sub
sarl
sbbl
les
popa
inc
popf
mov
adc
out
or
stos
sbb
mov
mov
or
jns
jno
adc
cmpsl
cmp
icebp
negb
movb
orl
xor
jle
sbbl
lret
jmp
call
sub
cmp
nop
dec
jnp
cmp
imul
stos
outsb
or
lea
inc
cwtl
xor
or
xchg
sub
mov
inc
in
decb
mov
in
bndldx
mov
lock
mov
clc
mov
mov
mov
sarl
cmp
xor
mov
testb
orl
cld
sbbl
lods
test
stos
pop
testb
dec
mov
stc
cld
shlb
xor
cmp
cmpsl
das
add
lods
mov
xchg
sub
fstps
cmp
js
sub
mov
jns
cmp
mov
stc
sub
jns
pushf
cmp
icebp
pop
sub
jp
jo
aad
lahf
sti
jns
int3
test
mov
mov
mov
out
jge
aam
out
ret
addl
in
jae
pop
pop
mov
fldl
xchg
shrl
fisubl
cmpb
dec
ja
rcr
and
xchg
jg
mov
mov
add
sbb
mov
cli
addr16
out
and
mov
lcall
jmp
dec
sub
mov
bound
adc
mov
out
xchg
adcl
mov
pop
push
xor
test
pop
in
movsl
add
sub
jecxz
aam
stc
xchg
out
pop
cwtl
mov
lea
in
scas
mov
das
repnz
sub
xchg
xlat
insl
icebp
nop
sub
xchg
xchg
ret
dec
scas
cmp
adc
pusha
sbb
and
or
or
dec
or
dec
mov
mov
xor
push
ss
xor
and
ret
clc
sbb
fbstp
lods
push
xor
call
dec
cmp
push
mov
mov
and
or
pop
adc
aaa
adcl
insl
nop
stos
lods
sbb
lahf
addl
insb
in
mov
inc
aam
rorb
negl
out
xchg
insb
lods
mov
jmp
out
and
or
les
dec
or
push
inc
sub
xor
pop
repnz
in
popa
jmp
mov
testl
scas
push
sub
int3
fcompl
xchg
jo
add
rorl
fistpll
inc
aas
arpl
inc
mov
mov
sbb
push
aas
xchg
cmpsl
movsb
out
jg
stc
mov
mov
pop
ja
or
dec
rcll
sbb
ret
xchg
iret
aad
xor
push
insb
loop
data16
xchg
mov
sub
cmp
mov
test
repz
xchg
xchg
xchg
aas
dec
fstps
outsb
testb
adc
sub
fidivrl
cli
mov
mulb
adcl
mov
ror
cs
popf
fcmovnb
out
mov
xor
adc
jns
jo
push
gs
test
mov
and
in
push
cli
fwait
subb
mov
cmp
adc
inc
inc
inc
stos
xor
xor
pop
jb
dec
push
dec
pop
imul
repnz
cwtl
leave
lods
imull
push
add
xor
sar
jmp
add
mov
pop
add
xchg
mov
scas
push
arpl
dec
mov
aad
pop
adc
dec
dec
xchg
or
cmp
inc
adc
leave
ja
pushf
loop
or
mov
add
loopne
mov
mov
lcall
dec
mov
rorb
lods
rcll
insb
outsb
fld1
scas
mov
xchg
add
xchg
mov
fs
lods
neg
adc
xchg
xchg
xchg
inc
add
xor
idivl
jnp
xchg
or
and
out
ss
adc
xabort
mov
in
arpl
out
out
rcll
mov
mov
scas
adc
rcll
mov
jnp
mov
ds
add
or
or
icebp
std
sti
mov
xchg
gs
push
ds
add
roll
nop
push
lock
add
inc
std
and
ret
jne
add
mov
cs
repz
cmp
in
inc
mov
call
add
movl
mov
adc
xchg
sbb
imul
js
repnz
scas
arpl
sbbl
and
sub
mov
or
inc
aaa
mov
sub
adcl
fidivs
popa
arpl
aad
iret
stc
xlat
movsb
pop
into
sbb
es
test
test
jns
mov
rcl
jl
cmp
pop
adc
scas
dec
mov
jle
ret
imul
daa
dec
xchg
mov
repz
movl
sub
scas
xchg
rcll
sub
fwait
mov
aaa
cmp
adc
inc
popl
jg
pushf
addl
pop
cld
pop
dec
outsb
xchg
in
js
add
enter
push
inc
xor
xor
es
jo
ljmp
pop
jno
push
pop
fwait
add
mov
icebp
jo
xchg
fidivl
scas
and
shlb
or
cmp
jb
ret
cli
shll
cmp
or
out
mov
push
fldcw
repz
loop
lahf
addl
mov
jmp
push
jmp
out
rolb
mov
pop
loop
aaa
pop
mov
lret
cmp
jae
cmp
mov
mov
mov
dec
cltd
xchg
lcall
push
repz
xchg
xchg
sbb
and
daa
sbb
xchg
imul
repz
add
pcmpgtd
movsb
mov
cld
jne
adc
dec
popa
lret
push
cld
fildl
adc
push
jne
adcl
mov
add
sbb
push
pop
pushf
cld
inc
mov
cmc
fsubrl
push
movsb
in
inc
xor
test
inc
jne
push
add
stc
pop
fstps
jmp
loope
shll
in
xor
loop
cmp
sti
stc
or
insb
sub
insb
mov
sub
fwait
xchg
inc
fdivs
pop
jecxz
sub
and
cmp
push
mov
jb
sarl
mov
mov
loope
movsb
pusha
lods
out
jge
jns
jns
or
adc
leave
mov
out
lret
popa
adc
pop
add
out
nop
ret
xchg
jmp
xor
int3
leave
testb
lahf
sbb
push
addr16
push
loope
mov
or
rol
cmp
mov
dec
pop
inc
mov
lret
fbstp
or
ret
ret
insb
test
lods
xchg
push
or
inc
cltd
add
jno
and
lock
lcall
cltd
lret
rcrl
andl
or
xor
aaa
jl
stos
mov
cli
xchg
call
rorl
adc
mov
add
jno
cli
jmp
sbb
push
push
out
jp
mov
test
sbb
jns,pn
in
pop
repnz
cmpl
sahf
cld
lret
repnz
push
xlat
mov
fs
testl
xchg
loopne
fs
jmp
cltd
inc
or
and
pop
aam
aaa
leave
inc
mov
mov
stos
jecxz
mov
movsb
fstpl
inc
repz
repz
add
adc
insb
pop
cmp
out
ja
mov
xor
ret
or
pop
pop
out
shll
mov
out
jbe
test
fldenv
mov
sti
jle
sub
clc
push
rorb
icebp
idiv
orb
shlb
outsb
adc
xorl
fcomi
rolb
add
xchg
subb
jg
cli
hlt
dec
jno
push
jl
popa
add
out
hlt
add
push
fdivl
push
fwait
sub
xchg
popf
popf
and
sbbl
sub
pop
jle
testl
addl
bound
into
mov
icebp
xor
lahf
cmp
rclb
fs
testb
sub
ds
xor
rorb
mov
jo
outsb
imul
arpl
or
stos
push
mov
hlt
cmp
lea
sbb
mov
adc
add
dec
fiaddl
lods
ss
inc
cmp
cmp
xor
mov
xor
dec
adcl
and
pop
and
insb
push
jl
jecxz
repz
mov
test
push
mov
imul
scas
dec
lock
out
call
shrb
jcxz
sbb
pop
add
and
pop
dec
insl
pop
sub
int
pushf
sbb
lret
insl
sbb
idivl
loop
and
push
push
cmp
lahf
cmp
mov
xor
mov
bound
sub
faddl
test
pop
lods
jl
jmp
inc
cli
push
je
call
add
add
add
mov
fimull
mov
lock
inc
fwait
dec
xlat
sub
addr16
fdivrl
jmp
cmpsl
popa
fs
in
cmc
xor
xchg
xchg
xchg
sbb
jbe
into
dec
stc
pop
pushf
jmp
loop
sub
sub
push
cmp
aaa
cmpsb
in
adc
sub
scas
rcl
adc
dec
jo
outsb
shl
fcoms
test
cmpsl
push
mov
mulb
loope
add
xchg
xor
jb
mov
sbb
ret
sub
mov
pusha
jnp
stos
and
cmp
std
mov
sbb
and
push
dec
sbb
insl
lds
std
lods
test
pop
or
js
ficomps
push
enter
das
jnp
push
jne,pn
aam
adc
lods
mov
jle
ret
jg
or
rcl
dec
cmp
into
cmp
jp
inc
jp
dec
lock
frstor
jnp
inc
jne
roll
in
or
js
aad
fcmovbe
popl
xor
dec
mov
cli
icebp
stos
adc
add
inc
stc
mov
out
mov
sub
mov
es
leave
iretw
pop
pusha
lea
sub
es
jp
jnp
or
stos
xchg
mov
mov
aas
inc
fdivl
mov
push
test
push
ss
dec
out
enter
mov
shl
out
ds
lcall
in
imul
sbb
dec
in
bound
lret
arpl
jmp
loopne
mov
subl
std
pop
jae
imulb
pop
and
pusha
cwtl
inc
dec
shrl
sbb
push
push
cmp
out
lea
inc
or
or
sbb
cli
sbb
aam
inc
cmp
addr16
test
repz
into
xchg
dec
adc
hlt
pusha
xor
shlb
push
sbb
cmc
push
mov
in
ud0
movsb
iret
pop
xchg
je
adc
or
jb
adc
lret
shll
test
sub
dec
jae
push
push
push
insb
jnp
xchg
jb
inc
sar
mov
fsubrl
mov
push
aaa
clc
repnz
notb
imul
aad
dec
into
pop
push
push
cmpsl
xor
cmp
add
xchg
lret
ja
int
cmpsb
push
sti
cmp
movsl
lods
call
ret
int
cmp
in
lea
pop
xor
dec
xchg
lahf
sub
pop
dec
out
xchg
and
xor
sbbl
mov
jecxz
mov
mov
xchg
aad
jmp
jno
std
fldcw
aas
ret
jno
pop
and
mov
mov
in
mov
fcom
inc
loopew
push
push
ficoml
fisubs
push
stos
bound
jo
fabs
shll
inc
repnz
push
xchg
sbb
adc
xchg
push
dec
pushf
ret
je
adc
xchg
dec
cmp
dec
pop
dec
rcrl
mov
mov
lods
aas
or
sub
and
cs
pop
pop
cld
jno
mov
fwait
mov
std
adc
mov
mov
mov
and
xlat
test
dec
pop
lea
xchg
push
dec
mov
loop
cmp
cmp
shrb
pop
pop
bound
and
clc
pop
ss
xchg
or
pop
dec
sub
and
xchg
mov
aam
adc
jne
js
dec
pop
sbb
xchg
xor
stos
push
xor
pop
sbb
xchg
mov
rcr
scas
js
jmp
mov
aaa
jno
push
mov
sub
mov
inc
sub
sbb
or
nop
mov
cmp
frstor
xor
or
iret
mov
and
icebp
cmp
je
add
mov
xchg
dec
adc
cli
rol
movsl
loope
push
cli
outsl
cli
push
addr16
pop
pop
ror
xchg
push
sub
loope
xchg
mov
push
push
dec
leave
add
mov
out
push
fs
aam
arpl
jge
pusha
ljmp
mov
mov
shrb
jg
ja
daa
in
outsl
pop
fists
mov
test
mov
and
dec
data16
mov
leave
cmp
sahf
jmp
mov
adc
cltd
sbb
faddl
bound
mov
add
jns
xlat
loop
or
push
mov
or
jle
push
sbb
pop
in
sbb
push
mov
dec
sarb
jo
mov
dec
xchg
xor
dec
or
dec
addb
cmp
fisubrl
mov
dec
sbb
xchg
test
jl
xchg
lods
dec
aaa
outsl
push
aaa
jo
pusha
insl
xchg
int
mov
pop
push
dec
fistpll
out
sbb
mov
sub
mov
std
mov
inc
repnz
cld
inc
sub
push
lret
push
ds
lods
mov
jle
xor
outsl
sbb
repnz
push
mov
jne
je
ficomps
cmc
jg
jo
pop
rorl
idivl
mov
incl
mov
xchg
js
inc
stos
rorb
insb
mov
int
bound
dec
and
fcmovnb
adc
pop
mov
mov
fists
cmp
xor
cld
andb
sub
xchg
add
adc
outsb
add
cmp
mov
cli
mov
cmpsb
xchg
cmp
inc
les
fnstsw
mov
dec
and
hlt
clc
adc
dec
loop
lea
add
cmpsl
movsb
adc
rorl
xor
adc
xchg
adc
mov
mov
shrb
andb
dec
cmp
push
cmp
mov
sbb
les
mov
out
jae
aaa
push
xchg
mulb
aad
ret
out
pop
imul
jns
or
push
stos
aad
test
lcall
add
enter
cltd
mov
xchg
xchg
dec
ja
int
jl
call
ficomps
sbb
shufps
xchg
shrb
adc
test
cmp
jg
xor
shlb
iret
jmp
pop
int3
pop
mov
enter
push
je
jae
lcall
mov
xchg
add
pop
mov
mov
sub
add
inc
mov
sub
repz
sub
add
aam
push
pop
mov
fcmove
push
mov
mov
adc
xchg
test
sbb
sub
mov
inc
mov
mov
jne
rclb
popa
aad
sahf
and
inc
insl
xorb
pop
mov
dec
or
jle
pop
adc
dec
enter
cmp
mov
jne
cmpsb
add
outsl
in
movsl
or
jno
pop
jne
mov
mov
fadd
mov
cld
cmp
add
into
xchg
mov
clc
clc
repz
out
cmp
fwait
jno
mov
cmp
test
cli
dec
xchg
mov
jns
aad
test
pop
andb
inc
jno
dec
mov
or
xchg
loop
lret
int
cmpsl
cld
adc
mov
clc
jns
xchg
out
adc
sbb
idivl
aad
sbb
sub
roll
imul
jae
pop
cmp
pop
sub
inc
xchg
cmp
sahf
cli
jl
push
dec
pop
lahf
inc
cwtl
scas
push
inc
push
outsl
inc
dec
push
mov
jle
add
sarb
xor
and
push
jbe
jg
lret
arpl
adc
stc
loop
xor
xchg
adc
xchg
daa
add
and
lods
lds
fstpl
into
fwait
lret
sahf
cmp
pop
lods
cwtl
dec
sbb
aas
addl
xor
fwait
jo
or
bound
pushf
nop
lea
dec
jns
negb
adc
xor
jbe
or
loopne
roll
ja
xchg
lods
sahf
xchg
enter
dec
push
adc
xchg
loop
mov
push
add
std
insl
in
int
or
mov
scas
dec
movsb
repz
out
fistps
imul
sbbb
loop
clc
incb
push
insb
lret
test
adc
mov
fcomip
lds
outsl
daa
test
lahf
xorb
pop
fst
pop
push
add
test
loop
pop
and
push
dec
sbb
cmp
pop
dec
xchg
mov
in
call
lods
scas
mov
mov
adc
ds
dec
loopne
lcall
mov
fucom
pop
xchg
out
push
aaa
in
push
sub
push
jmp
or
test
daa
enter
add
stc
inc
add
mov
pop
xor
add
das
mov
movsl
cmp
push
push
inc
movsl
ljmp
mov
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
lret
lret
dec
lea
jmp
bound
inc
mov
push
jl
test
fdivrs
ja
fdivs
cmpb
cmp
jbe
inc
test
aas
pop
sub
push
dec
push
subb
lods
fwait
mov
adc
mov
ret
cmp
mov
and
test
mov
loopne
lar
xchg
or
cmp
imul
inc
lahf
orl
inc
insl
cmp
pushf
cwtl
sub
lahf
push
and
and
es
xchg
mov
mov
dec
jp
adc
pop
enter
jno
add
out
pop
mov
movsb
mov
dec
fs
and
out
in
stc
mov
movsl
mov
mov
sbb
dec
in
mov
cli
js
jge
inc
int3
fdivrs
pop
or
xor
xchg
lods
push
cwtl
fistl
iret
xchg
in
mov
adc
add
cld
pusha
sbb
insb
aas
fsubrl
ljmp
push
push
test
adc
xchg
adc
cld
arpl
push
and
inc
xchg
out
push
test
out
ljmp
jle
dec
cltd
loope
outsb
and
pop
jl
dec
push
sbb
fisttps
or
clc
sbb
jecxz
call
push
push
repz
mov
loopne
xlat
inc
jno
out
adc
mov
out
and
xorb
mov
outsl
fdiv
dec
cmpsb
fcmovnb
enter
push
je
jecxz
data16
push
sub
mov
mov
in
push
fidivrl
dec
dec
fbld
outsl
insb
lods
push
sbb
insl
sub
dec
dec
jo
mov
rcl
cmp
repnz
test
ficoms
sbb
aad
dec
mov
das
rorb
mov
cmpsb
cld
sbb
sub
hlt
pop
lcall
push
sbb
shl
mov
mov
push
cmpsb
ljmp
dec
dec
inc
sub
stos
stos
jg
stos
push
or
cmc
mov
cld
and
xor
sti
cmp
in
push
pop
int3
addl
push
push
sbb
loopne
frstor
adc
out
jbe
mov
adc
fwait
lret
mov
mov
insl
stos
inc
jns
inc
push
sbb
push
push
fsubs
add
popa
xor
fs
inc
sbbl
xor
dec
dec
mov
pop
cmp
xchg
and
cmpsb
test
addr16
arpl
dec
or
push
lahf
or
das
scas
pop
add
outsb
xor
movsl
sti
stos
scas
loop
repz
fwait
xchg
jecxz
add
mov
jmp
inc
dec
push
dec
xor
gs
or
ljmp
in
cs
adc
sub
and
and
test
scas
adc
mov
sub
adc
xlat
ljmp
jnp
cmp
pop
push
xchg
into
pop
bound
add
add
pop
test
std
lahf
imul
jb
shlw
hlt
jne
testl
sahf
les
dec
fidivl
imul
push
movsb
mov
lahf
push
lret
sbb
test
inc
mov
mov
arpl
cld
inc
ss
jo
insb
jbe
pop
push
sbb
popf
add
mov
in
fisubrl
push
int3
sub
push
push
movsb
test
xchg
sbb
adc
and
pop
xchg
jl
sub
in
int
notb
leave
mov
sti
cld
mov
pop
inc
sub
and
clc
xchg
enter
pop
pop
cs
daa
dec
push
popf
jmp
xor
fs
mov
int3
jecxz
jne
sbb
mov
mov
jne
lahf
out
jecxz
xlat
push
test
jns
test
push
enter
lcall
push
mov
fistpl
test
push
out
mov
mov
sub
push
cmp
adc
out
xlat
sbb
fwait
cs
and
xlat
add
mov
mov
fisubl
in
jl
xlat
xor
inc
mov
mov
or
xorl
sub
ljmp
xchg
sar
adc
fwait
xor
loop
and
xor
jb
imul
adc
fimuls
xor
adc
pushf
ret
cmp
or
stos
loopne
mov
aam
lea
ds
push
out
add
in
iret
mov
mov
pop
lret
cs
dec
mov
inc
ret
sub
clc
jg
xor
sub
add
fdiv
sub
loop
mov
nop
xchg
negb
push
fucomi
inc
lahf
shlb
bound
jge
or
sub
clc
or
sub
nop
imul
std
js
sbb
leave
mov
pop
pop
sub
cmp
mov
add
js
fidivl
dec
mov
int3
lret
sbb
xchg
sbb
mov
hlt
xor
aad
inc
cmc
dec
sub
jg
imul
xchg
daa
andb
jge
xor
loop
std
fstpl
movsb
jnp
pop
or
mov
cmp
idiv
ret
mov
in
insb
ss
or
mov
int3
jbe
and
add
iret
cmp
rolb
push
lahf
pop
mov
push
sub
das
aad
in
ds
or
in
sti
and
adcl
pop
mov
fdivr
mov
cmpsb
cmp
push
insl
rclb
ret
mov
test
sbb
mov
push
das
insl
pop
imul
adc
int
mov
xchg
adc
in
ret
mov
push
lds
aam
ja
push
dec
sbbl
jle
cmp
mov
sub
inc
push
icebp
jecxz
loope
xchg
fcom
out
sub
adc
pop
jge
lea
cmp
xor
add
in
idiv
out
arpl
and
call
mov
push
inc
or
hlt
js
xchg
leave
lcall
lret
addr16
mul
out
jmp
push
inc
adc
in
add
das
sub
imul
pop
sbb
and
inc
and
pop
jnp
test
mov
test
add
sub
sbb
aaa
sub
aad
fwait
mov
sbb
outsl
cmp
bnd
jg,pn
clc
jbe
ds
and
xor
in
or
push
ret
push
cmp
outsl
gs
mov
addr16
cld
subl
lods
aas
into
ficoml
inc
lods
cltd
test
scas
je
and
cmp
shrb
mov
call
sbb
cld
subb
pop
and
mov
icebp
inc
mov
ret
callw
pop
data16
xchg
xlat
jbe
cmp
fnstsw
fcompl
adc
lods
mov
cli
add
xor
mov
popf
in
pop
mov
mov
dec
neg
pop
pop
addr16
push
xchg
outsb
jb
xchg
lret
pushf
aad
sbb
arpl
into
mov
sub
add
popa
popa
pop
scas
cmp
push
mov
mov
aad
daa
inc
test
es
xor
jg
mov
loopne
lahf
pop
inc
stos
js
dec
shll
ljmp
cmp
mov
mov
iret
push
inc
mov
cmpsb
mov
lea
repnz
pusha
jmp
jl
jg
mov
push
add
lcall
add
xchg
sbb
out
mov
notl
sbb
sti
push
or
pop
sub
pushf
xchg
mov
fstpl
add
inc
sbb
dec
xchg
scas
test
jo
loope
or
sti
jp
popa
outsl
mov
in
and
lret
xor
cmp
jle
push
xchg
in
ja
sarb
std
xchg
adc
xor
insb
xlat
and
or
ret
out
sub
test
add
test
fidivs
lods
into
jno
push
fnsave
and
test
jmp
out
scas
incl
fcomi
nop
add
loop
dec
call
mov
or
or
je
sarl
inc
sahf
dec
or
gs
add
push
fs
and
gs
jg
cmp
in
xor
mov
lods
xorb
cld
sbb
out
movsl
inc
adc
xor
gs
movsb
cmp
mov
incl
fidivrs
dec
or
mov
jns
jns
xchg
adc
inc
inc
arpl
jb
cmp
out
rolb
lret
push
push
inc
add
hlt
imul
test
add
pop
bound
add
repnz
repz
mov
imul
movsb
jge
sub
lcall
testb
mov
js
sbb
dec
or
push
ja
fs
aam
lcall
fs
rol
es
mov
or
sub
mov
and
rorl
ds
pop
dec
pop
xchg
addb
jecxz
ja
cld
mov
shll
mov
iret
push
push
add
or
inc
subb
cmp
jecxz
pop
lret
mov
lret
push
out
cmp
mov
test
jecxz
imull
xor
arpl
lods
lret
or
and
pop
jae
repz
sbb
div
fwait
mov
or
dec
popf
xchg
adc
sbb
xchg
adc
mov
or
xor
pusha
lods
rcl
repz
aad
jmp
cmc
call
dec
cmp
imul
inc
pop
lcall
fidivs
sub
sti
test
mov
lahf
xor
mov
mov
cmpsb
jle
pop
sbb
test
mov
cmpsb
push
mov
inc
lods
test
mov
lea
jp
pusha
sahf
pop
test
cmp
xlat
aaa
mov
xor
imul
or
fcomps
pop
stos
stos
sbb
popa
testl
pop
pop
out
mov
push
mov
pop
loopne
push
fadds
cmp
adc
andl
jmp
or
neg
mov
xlat
mov
aas
sub
inc
int
sbb
sbb
sub
clc
xlat
nop
jno
lock
xor
jae
adc
jnp
dec
fwait
mov
rorl
xor
popa
pop
neg
or
out
ret
shll
imul
mov
sub
stos
call
test
jmp
lahf
sub
roll
aam
frstor
xor
push
cmp
push
push
dec
xchg
jle
sub
mov
jae
loopne
shrl
insb
aam
movsb
dec
dec
and
testb
cmp
push
dec
lds
sub
in
push
fistl
rcrl
fnstcw
stc
mov
add
pop
xor
scas
lcall
sub
push
movsl
mov
int3
mov
mov
adc
jo
rep
sub
pop
and
mov
je
sbb
mov
dec
jbe
push
or
aas
arpl
jle
mov
hlt
fwait
outsb
mov
inc
inc
repz
sti
and
movsb
scas
mov
cmp
scas
jno
cmc
push
into
les
aas
aad
push
adc
test
fucomi
push
in
sub
and
xor
stos
add
stc
fistps
cld
ror
enter
rcrl
int3
xchg
mov
and
mov
add
mov
mov
xchg
out
test
test
or
inc
test
mov
xchg
out
loope
jp,pn
pop
scas
push
test
dec
dec
ja
sahf
repz
or
scas
mov
cmp
jno
dec
jle
jnp
dec
and
push
mov
mov
fwait
sub
dec
stos
pop
js
push
mull
cmpsl
mov
int3
inc
push
xorl
and
push
mov
inc
fisttps
xor
aam
adc
xchg
int
jmp
std
and
roll
mov
ljmp
mov
xchg
shrb
pop
fisubrl
mov
mov
add
ds
fildl
dec
dec
pop
js
jg
cmpl
jge
xchg
lret
xchg
subb
mov
or
cwtl
mov
fwait
xchg
and
ja
subb
dec
fisttpll
or
mov
int3
ljmp
fwait
inc
mov
fistl
and
sub
mov
inc
xor
push
popf
jno
lcall
or
aas
and
push
mov
sbb
cwtl
outsb
or
sti
sbb
nop
xchg
lret
mov
jae
or
repz
mov
ja
cvtps2pi
jno
jl
fidivrl
cmp
rorl
loopne
push
cmp
fdivrl
add
inc
push
mov
hlt
xor
add
pushf
loopne
dec
push
mov
inc
or
cmc
pusha
and
leave
dec
mov
sti
aad
mov
jne
xchg
add
sbb
fmull
inc
xchg
sub
fst
or
psubsb
push
loopne
lods
pop
push
and
xor
jg
and
out
fcompl
sbb
imul
ljmp
inc
les
lret
mov
dec
dec
jb
cmpl
add
xor
pop
and
pop
imul
xchg
xchg
adc
inc
es
cmp
jmp
lods
and
es
movsb
sbb
xchg
out
out
cmp
test
lcall
pop
dec
das
mov
cmpsb
mov
mov
clc
add
fucomp
lock
pop
sti
cmp
mov
push
inc
fcmovnb
push
lock
ror
jecxz
jle
dec
ret
fs
lea
daa
xchg
andl
and
int
lcall
and
and
xor
xchg
jnp
jbe
stc
out
bound
shll
les
pusha
insb
into
jo
bound
push
mov
addl
jo
je
dec
or
daa
enter
sbb
xchg
push
push
lcall
inc
dec
das
and
decl
lea
push
mov
rorb
cmp
sahf
add
push
lds
outsb
add
dec
xor
jnp
out
pop
xchg
into
adc
inc
xor
pop
pop
dec
cmp
loop
jle
dec
hlt
insb
aad
pushf
imul
stc
insb
dec
inc
mov
jmp
mov
ljmp
or
stc
jo
jne
xchg
mov
mov
stos
sbb
inc
pushl
pop
and
mov
push
sbb
adc
mov
insl
outsl
pop
shlb
pop
cmpsl
inc
adc
and
fbstp
jno
fdivs
jmp
arpl
pop
in
fistl
arpl
movsb
mov
ret
pop
adc
push
cltd
sub
jmp
dec
push
out
lods
test
mov
ficompl
sahf
imul
loop
rcrb
or
push
push
clc
fcoml
or
cmc
aam
add
andl
lret
popa
repnz
pop
add
pop
push
imul
pop
gs
jb
daa
out
mov
inc
popa
mov
cmp
sub
push
lods
mov
lret
push
dec
mov
out
push
lods
incl
scas
aaa
pop
test
ret
or
inc
xchg
add
lods
adc
dec
stos
and
popa
pop
lret
jns
add
mov
add
sahf
popf
imul
mov
jb
or
stos
lds
push
hlt
inc
xor
xchg
insl
inc
xchg
dec
addr16
std
shr
dec
das
push
pop
mov
adc
pop
and
pop
inc
add
push
mov
mov
mov
test
or
fsubrl
fwait
sbb
outsb
dec
push
adc
or
mov
int3
mov
sbb
daa
and
movsb
xchg
lods
daa
test
cmp
in
pushf
ds
lahf
or
adc
pop
ljmp
pop
rorb
jb
xlat
sti
pop
add
test
push
inc
testb
xor
jp
add
sahf
adcl
das
dec
adc
out
outsb
or
mov
dec
loop
addb
aam
push
subb
pop
sbbb
and
add
pop
jge
inc
jp
mov
jnp
loope
stc
xor
and
ljmp
cmpsl
std
and
sbb
mov
lock
out
clc
sub
adc
push
inc
push
cmpsb
jmp
jp
lods
jns
xchg
mov
and
aam
scas
sub
inc
idivb
test
and
and
mov
adc
daa
and
hlt
int
or
xchg
sbb
mov
pop
push
pop
test
jle
adc
jns
jae
adc
je
test
mov
fcomps
jmp
cmp
sarb
ds
test
stos
ficompl
clc
xchg
icebp
out
xchg
fiaddl
xchg
dec
jno
sub
lahf
test
ja
lret
fsubrs
mov
cmpsb
mov
loope
fcompl
mov
sahf
lret
insb
xchg
shrb
mov
mov
lods
jne
xchg
vpminub
pop
or
imul
rorl
and
popf
xchg
xor
pop
sub
cli
mov
ss
or
mov
aaa
jecxz
pop
xchg
scas
stos
mov
lods
pusha
lret
jle
adc
sbb
xor
inc
cmp
dec
mov
adc
mov
mov
int
loop
popa
enter
mov
je
repnz
cli
je
aad
cld
jp
stos
or
test
inc
iret
push
mov
sub
xchg
jnp
mov
and
scas
dec
push
and
ret
cld
sub
sub
testb
jo
cs
jecxz
test
dec
fdivl
mov
sbb
cmp
fcompl
pop
mov
jb
or
inc
push
faddl
mov
bound
les
ficoms
test
cmp
xorl
pop
out
mov
add
jbe
cmp
idivb
push
pop
push
inc
push
imul
scas
flds
iret
xchg
rcr
adc
adc
cmpl
cmpsb
pusha
sbb
imul
mov
lcall
stc
adc
rclb
jo
ljmp
int
ja
mov
fsubrl
rcrl
lahf
mov
cmp
in
or
and
xor
pop
add
inc
aad
sub
imul
and
loope
mov
sub
sti
xchg
outsb
or
or
out
sbb
or
mov
dec
inc
jb
jle
into
dec
popf
mov
xchg
hlt
daa
cld
adc
and
cmp
gs
fisubs
mov
fnsave
sbb
sub
dec
hlt
mov
dec
sarb
loopne
add
stos
jl
clc
or
repnz
ficomps
shr
mov
in
sbb
push
pop
cmp
repnz
stos
les
insl
sbb
rcrb
cmpsl
jge
xor
mov
cmp
adc
pop
push
or
jl
les
in
rolb
jmp
lock
adc
add
cmp
stos
pop
inc
fdecstp
mov
sbb
dec
addr16
imul
cmc
or
das
and
loopew
mov
in
mov
push
js
movsb
add
or
daa
or
dec
sti
stos
cli
test
xchg
loop
outsl
adc
pop
push
int3
or
subb
mov
scas
int
and
mov
sub
scas
std
mov
ds
aad
test
gs
stos
mov
xchg
jb
pop
mov
icebp
ficoms
loope
jo
xor
mov
inc
arpl
negl
push
dec
in
mov
rorb
dec
cmp
cli
dec
faddl
addr16
xor
adc
inc
sub
push
aas
sbb
test
je
test
int
jle
mov
jp
dec
stos
inc
and
shll
repnz
mov
in
xor
pop
ret
daa
lea
inc
imul
and
out
mov
out
push
inc
dec
sbb
popa
cmpl
popf
inc
sub
inc
sti
int
add
adc
and
rorb
ja
adc
in
ja
cmc
ljmp
cltd
loopne
jno
int3
addl
adc
mov
rolb
cmp
push
test
pop
adc
fldcw
loopne
out
ja
add
outsl
pop
enter
xchg
in
xchg
aas
mov
push
pushf
mov
jne
sub
subl
scas
lahf
and
jne
xor
inc
cmpsb
jae
lock
sahf
mov
lods
das
jns
inc
adc
xchg
movsl
inc
fistl
mov
cmp
ljmp
add
pop
roll
cmpsb
xor
outsl
mov
add
aam
in
in
imul
aas
mov
sub
add
addb
in
dec
popa
dec
mov
push
jg
cwtl
rorb
sub
ljmp
inc
pop
push
mov
fs
fists
call
dec
cmpsb
mov
hlt
mov
inc
jmp
cmpl
jmp
lock
pop
je
imul
cmp
mov
inc
mov
out
int3
lret
xor
sbb
xchg
rclb
mov
and
popa
aad
mov
sbbl
mov
cmp
mov
adc
xor
inc
addr16
jg
cmp
xchg
adc
cmp
incl
sarb
outsb
dec
adc
cmc
pop
inc
dec
push
mov
pushf
lds
mov
jmp
subb
push
jmp
or
jmp
jecxz
jmp
movsl
pop
sbb
enter
incl
call
loope
bound
xchg
xor
jmp
shlb
clc
jle
sbb
fcoml
add
mov
mov
jle
test
sub
dec
adc
cmp
cmpsl
mov
mov
cmp
and
jl
jmp
xor
in
cmpsb
mov
sub
inc
leave
push
mov
push
mov
add
sub
dec
pop
ret
xor
cmpsb
jge
or
js
xor
xchg
add
sub
in
inc
fisttpll
pop
cltd
cli
test
dec
mov
mov
addr16
push
out
xor
es
aaa
adc
fisubs
idiv
jmp
jecxz
movsb
outsl
stc
ret
or
loope
cli
xor
dec
sbb
add
dec
push
mov
push
loop
stos
xor
aam
fidivrs
je
sub
imul
negb
shlb
movsl
jno
imul
imul
rolb
pop
jg
and
out
inc
xchg
pop
lahf
aam
cmp
movsl
aaa
sbbb
pop
aas
mov
pushf
jne
sub
adc
mov
adc
jp
popf
mov
ss
dec
pop
jg
adc
cmc
das
xor
jmp
sub
lock
adc
sahf
jb
movsb
pop
add
pop
inc
pop
fldenv
mov
inc
cwtl
mov
inc
pop
and
test
das
and
adc
pop
cs
mov
ret
dec
sbb
lcall
mov
xor
and
pop
in
push
testb
mov
icebp
cwtl
or
addr16
repnz
mov
aaa
mov
orb
sub
mov
std
incb
cli
jo
pop
mov
mov
test
cld
and
mov
adc
sub
mov
adc
jmp
loop
popf
stc
dec
dec
adc
mov
ljmp
push
test
push
inc
adc
adc
or
sti
enter
mov
and
sub
mov
and
movsl
adc
stos
inc
or
cs
dec
push
leave
jno
lea
cmp
stos
scas
and
mov
push
mov
sbb
lods
stc
insl
jecxz
adc
cltd
and
mov
jae
mov
in
xchg
push
shlb
sbb
stos
dec
loop
or
out
sub
pop
ljmp
jnp
mov
xor
mov
xor
pop
cmpsl
mov
pop
xchg
stos
and
add
sarb
sbb
clc
int
xor
pusha
cli
push
inc
dec
insb
push
scas
mov
add
repnz
insb
mov
inc
cmp
pop
xchg
out
stos
sbb
cmp
add
ret
push
arpl
bound
xchg
cs
pop
push
sahf
test
add
add
loopne
sbb
icebp
xchg
mov
cmp
shlb
into
pop
filds
out
and
shll
jmp
adc
js
data16
aad
out
add
cmp
lret
movsb
fsubl
fs
js
pop
daa
inc
pop
mov
jle
rcll
adc
pop
out
mov
dec
jno
xor
aam
xchg
scas
jmp
pop
mov
add
repz
clc
sub
mov
mov
call
fisubrl
mov
dec
mov
sti
inc
ficoms
fucom
aam
push
insb
popf
mov
sbb
mov
popf
cwtl
jmp
xor
pop
int
jg
xor
pop
ds
adc
les
or
add
xchg
insb
pushf
je
out
loop
pop
inc
cmpsb
in
rol
pusha
std
sbb
bswap
enter
pusha
mov
inc
scas
dec
sub
es
adc
iret
pusha
or
in
movsb
or
cli
mulb
addr16
shrb
out
ja
arpl
dec
cmp
int3
inc
or
incb
inc
call
mov
cmp
cmc
xchg
test
addr16
cmp
movsl
lods
jge
push
sub
xchg
mov
dec
cmpsl
movsl
jge
ss
aas
push
push
mov
sbb
inc
loopne
sbb
add
and
or
cmp
popf
sbb
sub
jecxz
call
and
mov
icebp
sub
fisttpll
cmp
pop
es
in
inc
loope
dec
xchg
adc
mov
sbb
scas
push
mov
shlb
adc
mov
aas
push
sti
push
sbb
push
mulb
pushf
mov
adc
aaa
mov
dec
xor
jnp
les
mov
and
lods
popf
add
in
inc
into
test
sti
je
pop
hlt
aas
cs
add
add
sbb
inc
mov
out
push
dec
ror
jo
call
lock
or
or
inc
es
popf
inc
mov
mov
das
sti
dec
lea
sub
pop
in
sub
in
mov
jno
sbb
jb
sarl
and
mov
mov
inc
lds
fcmovu
and
ret
mov
orl
std
inc
insb
or
fwait
mov
mov
fwait
lret
daa
mov
mov
adc
sbb
in
sti
add
outsb
cs
outsb
adc
mov
lock
pop
dec
jecxz
in
sub
test
out
inc
mov
and
sbb
dec
ja
jmp
xor
inc
cmp
dec
andb
inc
pop
aad
push
lods
mov
and
or
cli
push
test
adc
stos
and
cld
mov
dec
lock
lea
loope
ljmp
jecxz
fdivr
shl
xchg
xchg
and
sub
in
jge
pop
std
xor
pop
stos
loopne
popf
ljmp
xchg
mov
daa
mov
adc
lret
divl
jl
cmpsl
jge
int3
mov
lcall
stos
add
insb
arpl
push
dec
inc
sahf
mov
sbb
dec
fsubrl
mov
push
push
and
sbbb
sbb
fidivs
stos
xchg
or
hlt
loop
add
popa
call
add
jl
neg
je
jp
leave
adc
imul
dec
test
cwtl
popa
insb
sbb
lock
or
xlat
or
ss
call
mov
push
push
and
add
jb
js
cmp
roll
cmp
or
push
cmp
jb
pushf
xlat
add
fbstp
cmp
mov
pop
mov
hlt
dec
pop
in
push
lret
mov
mov
arpl
pop
xlat
sbb
stc
push
ficomps
rcl
daa
pop
jl
xchg
mov
clc
fcmovbe
call
lret
icebp
sbb
pop
inc
outsl
xchg
int3
lock
icebp
add
xchg
sub
mov
imul
ffree
cmp
adc
lds
mov
jmp
pop
pusha
add
popf
xchg
and
mov
rcrb
enter
mov
test
mov
mov
lds
xchg
mov
mov
xor
jecxz
fistpll
pop
roll
adc
iret
sbb
xchg
mov
insb
incl
pop
mov
and
rcrb
rolb
mov
push
cmpsb
jno
xlat
test
xor
xchg
loopne
dec
outsb
insl
mov
or
pop
mov
push
push
popf
out
dec
fldt
add
mov
arpl
es
or
cmpsb
fmull
sbb
jns
adc
push
cld
add
stos
push
xor
out
mov
jle
enter
and
aad
ljmp
insb
and
xchg
test
sarb
push
jg
jl
xchg
inc
mov
stc
stos
cmp
add
out
mov
fdivs
imul
push
pop
flds
pusha
jecxz
pop
call
ror
jle
call
test
or
pop
push
mov
bound
stos
enter
mov
fwait
pop
repnz
cmp
scas
fcmovnb
mov
xchg
xor
stos
adc
mov
inc
sbb
mov
clc
mov
push
lcall
mov
lea
lods
mov
cs
dec
and
outsl
scas
movsl
adc
mov
mov
insb
inc
ljmp
int3
add
dec
lock
jecxz
mov
pop
pop
cmp
or
push
xor
sti
repz
xor
mov
xchg
das
inc
jno
aad
push
pop
xchg
dec
inc
jne
loop
push
pop
lods
je
jp
cmpb
mov
add
jo
aas
mov
xchg
inc
xor
inc
mov
push
and
push
dec
cli
or
mov
into
in
test
sub
inc
cmc
add
mov
movsw
jb
gs
cmp
sub
frstor
sbb
xor
pusha
and
inc
dec
ret
nop
dec
pop
test
mov
cmpsl
fs
mov
ret
mov
mov
xchg
inc
mov
jne
roll
add
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
movsb
repz
push
jmp
bound
cmpsb
icebp
jp
cmp
mov
negb
pop
insb
cwtl
lods
add
movsb
mov
rcr
mov
dec
enter
mov
hlt
and
xchg
imul
dec
sbb
shll
nop
jmp
pop
add
pop
jmp
adc
mov
mov
pop
sahf
cmpsl
rcrl
sbb
loopne
mov
pop
ret
je
or
mov
inc
adc
out
jp
and
mov
in
or
shll
in
test
test
pop
inc
mov
push
loopne
stc
jns
mov
test
mov
ror
cmpsl
mov
neg
imul
mov
neg
mov
lret
mov
inc
bound
daa
dec
ja
jge
aam
adc
adc
lcall
loope
xchg
jb
fwait
mov
ret
jnp
push
xlat
ljmp
push
repnz
fistpll
aaa
lret
aam
daa
in
xchg
out
stos
clc
je
cmp
iret
icebp
insb
mov
out
xchg
sbb
dec
jmp
fildl
push
xchg
lods
mov
cmp
xchg
inc
xchg
sub
call
gs
mov
sub
fs
test
push
loop
pop
in
jl
jecxz
stos
insl
add
add
cs
lcall
lods
mov
xor
mov
imul
mov
fs
sbb
in
pop
in
cli
push
sti
orl
adc
in
rcll
ja
xchg
pop
cmp
adc
cmp
lods
lgdtl
mov
out
inc
ds
lods
xchg
test
test
dec
xchg
insb
mov
ljmp
sbb
lds
adc
mov
pop
push
pop
addr16
mov
shrb
cs
pop
mov
fs
xchg
cs
pop
in
stos
out
movsb
mov
repz
mov
cmp
lret
mov
sub
xor
add
lahf
jp
lods
test
or
aad
les
push
das
cld
sbb
sub
jle
outsb
ret
repnz
push
test
movsl
or
or
push
lcall
mov
xchg
dec
xchg
stos
mov
push
cmpsl
mov
and
xor
cmpsb
in
inc
jg
push
add
fnstcw
fxch
in
jecxz
xor
fwait
push
jbe
popa
nop
mov
popa
xchg
sar
mov
clc
adc
adc
outsb
sbb
fimuls
dec
and
cwtl
dec
movsb
in
xchg
sub
xor
add
aam
in
inc
adc
insb
inc
jp
addr16
fiadds
ljmp
aaa
pushf
cwtl
push
jle
popf
lahf
cld
inc
int
movsb
sub
mov
dec
clc
xchg
lahf
cmp
in
mov
jp
dec
arpl
lahf
xchg
adc
shlb
push
cs
repnz
icebp
scas
insl
loop
iret
into
sti
sbb
xchg
out
add
cmp
je
add
or
outsl
mov
popf
jg
cmp
out
inc
std
inc
aas
cmp
and
pusha
dec
push
sub
inc
xor
xchg
pop
and
mov
lods
xor
das
xchg
jecxz
xchg
jne
mov
jl
roll
adc
mov
std
mov
dec
add
in
mov
push
fstpl
jbe
testl
lret
es
inc
sub
popa
ja
mov
adc
add
mov
cli
outsl
dec
outsb
mov
bound
ficoml
mov
mov
add
xchg
sbb
cmp
push
inc
stos
loop
das
xchg
pop
fdivrs
scas
cmpsl
loopne
xor
enter
cltd
cld
push
shlb
mov
in
addr16
pusha
cmpsb
cld
int3
les
movsl
int3
lock
xlat
push
ljmp
psrlq
push
sub
insl
iret
cmc
icebp
inc
mov
clc
mov
push
loop
ficoms
pop
xor
das
mov
xchg
sti
ret
push
cmpl
call
mov
sahf
ret
jae
leave
fwait
jns
jg
pop
mov
pop
xchg
insl
lret
setae
cmpsb
cmp
adc
sub
in
push
cltd
sbb
mov
push
add
clc
pop
aad
test
test
sub
ds
int3
pop
push
out
jecxz
data16
pusha
pop
imul
stos
movsb
data16
sbb
and
loop
fs
cltd
cli
roll
fnstenv
cld
movsb
mov
xor
xor
in
lock
outsb
or
lret
inc
fidivs
js
xchg
lods
or
jmp
inc
into
xchg
es
sahf
mov
xchg
aam
cmp
inc
pop
cmpb
rorl
pop
shrb
and
adc
sub
in
aaa
in
nop
ljmp
outsb
mov
inc
xlat
mov
mov
push
pop
pop
fsubr
mov
mov
ja
inc
inc
xor
push
push
mov
rcrb
movsb
scas
pop
sarl
cld
cmp
pminsw
into
mull
das
popa
add
push
xor
sub
or
pop
push
sbb
and
mov
or
hlt
js
xchg
pop
arpl
lock
nop
fcoml
xor
sbb
out
jp
fists
inc
xchg
mov
sbb
xchg
sub
loopne
sarl
mov
lcall
sbb
fstsw
rolb
push
mov
cmp
lds
fisubrs
mov
fimull
stc
inc
mov
jle
jno
inc
repz
mov
xorl
sar
jmp
lcall
pop
adc
inc
mov
pushl
stos
pop
nopl
popa
add
add
ja
mov
xorl
pop
jl
or
mov
gs
test
test
dec
ds
xor
push
clc
outsl
lret
addr16
movsl
dec
xlat
mov
cmp
or
std
mov
jge
scas
inc
shr
inc
and
inc
out
lret
cmp
inc
mov
stos
out
mov
cmc
push
stos
les
cmpsl
lods
fadd
jecxz
inc
jo
ljmp
into
in
sar
inc
jb
mov
outsl
dec
mov
adc
fidivs
xchg
add
xchg
sub
enter
imul
pop
xchg
jmp
arpl
add
in
push
aas
mov
ret
lock
and
cs
lea
mov
mov
cmpsb
cld
ljmp
sub
outsl
sub
frstor
or
dec
mov
aaa
adc
pop
pop
add
dec
into
add
into
fldt
mov
xor
int
idivb
cmpsl
pop
cmp
pushl
push
aaa
in
sarb
hlt
ret
ret
cmp
jmp
pop
inc
mov
add
inc
inc
repz
cmova
bound
inc
shr
mov
jecxz
or
nop
jo
mov
push
push
lds
xor
xlat
addr16
pop
mov
mov
add
lds
leave
loop
mov
xchg
jmp
mov
pop
cld
add
out
inc
jae
rcll
mov
adc
jmp
aaa
sti
iret
shrb
xchg
imul
dec
cmc
loop
push
or
sbb
or
ljmp
xchg
push
pop
mov
jbe
add
and
push
push
insb
aam
out
pushf
jmp
js
es
or
sub
sub
add
push
adc
out
mov
aad
xchg
xchg
push
shrl
pop
pop
sbb
or
leave
and
sbb
in
ret
imul
push
das
adc
jl
gs
push
data16
insl
and
xchg
lret
jge
xor
test
test
cwtl
sub
cmp
imul
xchg
xchg
mov
loope
divb
push
enter
jae
pop
mov
mov
and
cmc
push
pop
nop
in
mov
test
sbb
xchg
test
push
adc
in
fists
xchg
pop
xor
icebp
adc
out
les
shr
out
cmp
or
mov
ret
xor
and
xchg
mov
bnd
adc
pop
fimull
pop
pop
mov
dec
jg
fs
icebp
fwait
adc
or
inc
punpckhbw
sbb
pop
mov
mov
jnp
pop
hlt
push
out
xchg
or
and
or
pop
inc
push
fs
lret
ret
dec
fcmovb
inc
adc
xchg
rol
outsb
das
push
test
push
or
lcall
sbb
adcb
ret
call
dec
xor
fs
adcb
in
aam
or
inc
aaa
adc
js
jbe
jnp
inc
cs
inc
shrl
rclb
clc
dec
in
pushl
outsl
popa
cwtl
nop
jns
lds
aam
push
icebp
les
mov
jb
push
imul
push
add
pop
xchg
test
imul
adc
aaa
nop
aas
aam
cmp
cli
aam
mov
inc
aaa
test
mov
mov
and
jnp
cmpsl
dec
jb
bnd
in
jge
inc
nop
cmp
jb
push
aaa
arpl
jmp
push
sub
lret
incb
jo
jbe
les
mov
fisttps
in
push
lret
add
inc
test
test
lcall
push
push
repnz
and
mov
mov
sub
mov
cwtl
mov
mov
je
add
icebp
jno
pushf
xor
pop
ret
clc
sbb
jle
xchg
pop
add
jnp
adc
xchg
jl
jns
sarl
jg
sub
jmp
call
leave
lahf
loope
cltd
ljmp
pusha
xor
icebp
mov
pop
adc
pushf
in
leave
or
mov
ret
lds
xchg
jno
stc
repz
cmp
fsub
rcrl
idivl
addl
jne
movsb
aas
push
jae
daa
xlat
sbb
cmc
data16
sbb
fldt
addr16
js
sbb
dec
cmp
loope
call
sub
and
in
add
mov
cmpsl
out
push
and
fucomip
int3
into
insl
xchg
in
add
cmpl
add
mov
in
dec
sub
movsl
hlt
dec
je
jl
int
sub
pop
xchg
aad
repz
cmp
mov
rcr
cmp
cs
fstpl
add
adc
inc
jns
or
pop
popf
stos
adc
and
jo
sbb
xchg
inc
in
stos
cmp
test
xchg
adc
mov
push
andb
imul
xlat
xchg
pushf
jp
pushf
cmp
adc
ss
xor
sahf
lcall
cmpsl
adc
mov
inc
push
mov
lock
loopne
pop
sub
push
aam
lcall
xor
dec
cmpsl
repz
or
adc
xchg
mov
mov
mov
push
add
xchg
adcl
fsubs
cmp
inc
aam
adc
inc
inc
call
out
cli
scas
dec
inc
and
cmpsl
rcl
or
mov
xor
dec
and
scas
push
sub
mov
aad
jne
add
ret
lods
dec
aaa
mov
sub
add
aam
adc
ret
sbb
or
imul
and
insb
jae
aaa
mov
test
mov
or
xchg
imul
mov
sub
testb
iret
push
push
imul
mov
push
mov
pusha
push
stos
scas
xor
stc
inc
mov
das
push
rcll
mov
adcl
ret
sub
and
fs
in
bound
imul
js
add
and
cltd
add
mov
jae
bound
add
xchg
in
data16
mov
sub
adc
push
stos
inc
or
sbb
dec
inc
sbb
rorl
and
adc
pop
and
lds
adc
cs
mov
sbb
dec
rcrl
out
sub
xchg
cmc
sbb
mov
aas
mov
mov
sbbl
out
xor
lods
jge
pop
int
pop
cwtl
sub
insl
cmc
inc
mov
xlat
adc
sbb
push
or
push
std
popa
xchg
add
xlat
ficoml
ret
in
icebp
scas
inc
xor
scas
gs
lods
dec
or
and
scas
mov
pop
push
rcll
int
inc
mov
pop
int
and
out
div
icebp
sahf
jb
jo
mov
cmp
xor
cld
push
addr16
lock
mov
mov
outsb
mov
jmp
out
jb
ja
cld
nop
call
jo
cmp
fldt
scas
rep
mov
push
int3
and
rclb
adc
imul
lds
jp
flds
add
int3
inc
or
js
aam
inc
mov
pop
das
sbb
dec
pop
repnz
sbb
mov
mov
jg
xchg
ret
pop
in
daa
mov
jo
mov
inc
pop
push
jle
int
repz
cmpsl
sub
xchg
int
in
dec
pop
out
xchg
push
or
xor
push
cmpsl
roll
inc
cld
mov
imul
sub
adc
sahf
out
adc
sti
push
inc
dec
jmp
mov
sbb
nop
aaa
es
faddl
push
ljmp
dec
fs
lcall
aad
test
not
jnp
push
aas
cmp
fstpl
jno
fstpt
leave
movsb
ret
adc
inc
ljmp
fstpt
divl
gs
dec
inc
mov
cltd
in
adc
aaa
cmp
inc
imul
xor
out
lcall
leave
or
mov
arpl
cmp
iret
pop
dec
andl
xchg
and
insb
out
outsl
mov
out
push
insb
or
cmp
cmp
mov
rolb
std
imul
jl
cmp
fisubrs
push
xlat
clc
dec
rcr
stos
aas
push
pop
add
jmp
cwtl
movsl
xchg
imul
aaa
xorb
dec
mov
cmp
out
insb
cmpsl
push
dec
mov
ljmp
orl
add
js
dec
fldenv
xchg
push
daa
or
movsb
dec
jge
out
sub
jne
mov
or
xchg
outsb
push
dec
sub
dec
cwtl
clc
out
dec
scas
push
adc
cld
push
sarb
int
sti
std
adc
mov
sti
daa
cmp
push
in
lcall
pop
cs
leave
jge
je
ja
jno
dec
xchg
mov
push
arpl
cmp
sub
clc
dec
into
int
push
cmp
insb
and
int3
arpl
loopne
add
xor
add
and
dec
add
add
movsb
xchg
rcll
bswap
jns
mov
int3
mov
ja
addl
daa
clc
out
lret
mov
pusha
and
into
lcall
pop
jle
cmpsb
cmp
pop
mov
sub
mov
lahf
cmp
xlat
or
sub
addr16
xchg
sub
pop
xchg
jne
repz
xor
cmp
scas
cmpsl
or
pop
adc
ret
mov
xor
push
outsb
aaa
xor
sahf
sub
stos
fnsave
addr16
fwait
inc
aam
mov
incl
movsb
sub
movsl
mov
push
jl
lcall
or
lods
jbe
sub
cmpl
sbb
dec
jecxz
mov
mov
push
mov
mov
ds
movsb
test
xchg
leave
mov
fnstcw
dec
xor
cld
mov
xlat
cli
dec
sub
insl
add
mov
mov
call
leave
cld
divb
xor
es
pushf
loope
mov
jno
jne
out
js
inc
ja
cli
sbb
lds
jmp
cli
in
add
sar
jle
rorb
xchg
arpl
jecxz
xchg
cltd
test
jp
mov
mov
adc
cmp
or
or
les
xorl
xchg
mov
add
push
push
jo
testb
push
fldl
sbb
into
int3
loop
jae
sub
sbb
int3
mov
ret
pop
cs
sub
leave
mov
test
inc
pop
lret
sbb
sahf
pop
mov
rolb
arpl
cmp
insb
jbe
sub
lret
fstpt
pop
adc
jge
mov
cmpb
push
inc
push
push
jo
or
lret
addb
cmp
fimull
pop
and
and
aad
rolb
push
shrl
aaa
scas
sbb
scas
or
sbbl
jecxz
out
int
add
mov
int3
sub
adc
jae
dec
mov
cltd
adc
sub
sub
xchg
cmp
icebp
adc
filds
imul
mov
lahf
dec
cmp
scas
test
or
adc
std
nop
adc
aaa
ljmp
push
in
xchg
mov
cli
clc
insl
cmp
out
imul
sbb
sub
inc
repz
add
shl
and
cmp
sub
stc
lmsw
int3
aad
xchg
stos
loop
insl
xor
mov
or
jo
nop
and
push
and
fdivr
shll
daa
pop
dec
imul
test
and
clc
jae
sub
fisttps
pop
add
pop
inc
push
popf
dec
pop
loop
pop
sub
ja
int
cmp
pop
add
push
mov
mov
or
int
fiadds
cmp
pop
mov
add
inc
cmc
sbb
jnp
bound
fs
mov
dec
nop
mov
pusha
nop
pop
call
mov
daa
sti
xor
cld
pop
xchg
mov
pop
or
sbb
scas
add
push
push
push
inc
addl
out
xchg
hlt
add
xor
sti
push
mov
fistps
inc
in
cmp
jb
sbb
bound
mov
stc
cs
xor
mov
lcall
pop
or
xor
shl
cmc
loope
xchg
xchg
stos
or
icebp
jne
pop
push
sbb
insl
leave
sbb
jg
fbld
shr
push
nop
or
xchg
repnz
mov
inc
sti
cltd
pop
lea
fsts
hlt
cmp
sub
rcrl
cmp
icebp
mov
and
inc
xorb
push
jo
jecxz
cmc
bound
dec
xchg
lcall
xchg
cmp
sbb
mov
aam
stos
and
jmp
cmp
adc
je
rolb
test
mov
movsb
mov
iret
cmp
jo
mov
sbb
scas
aam
push
push
nop
insb
dec
add
mov
jno
mulb
enter
push
xor
aas
mov
cmp
daa
in
sub
rcll
mov
pushf
mov
inc
pop
push
gs
into
pop
sbbb
xchg
aas
outsb
jb
aad
and
push
sub
jno
cli
xchg
xchg
jg
cmp
cs
testl
mov
dec
pop
dec
out
lock
add
pop
adc
lock
rsm
int3
out
dec
jo
leave
push
xchg
mov
call
mov
inc
aas
sbb
icebp
jl
es
call
gs
rolb
sub
in
xchg
cmp
std
dec
sbb
pop
pusha
pop
test
dec
imul
inc
cld
xchg
sbb
and
gs
xor
insl
mov
mov
popf
xchg
push
xchg
or
imul
rorb
stos
roll
push
jns
fmuls
inc
into
mov
push
int3
addb
cld
fs
mov
pop
mov
push
mov
lds
daa
pop
aaa
cmpsb
fldcw
sub
jns
fidivs
pop
mov
jno
sub
mov
pop
and
fsts
xor
pop
sbb
inc
pop
jae
int3
aas
cmp
ljmp
popa
cmc
pop
repz
cmpsb
ljmp
inc
clc
xchg
mov
loopne
sbb
xlat
pop
sub
adc
jge
ljmp
xor
push
lds
inc
addr16
jle
push
jle
or
xlat
pop
insb
call
mov
mov
rcl
arpl
into
mov
daa
andb
stc
popf
xchg
insl
fs
and
aad
push
or
mov
mov
cltd
mov
lds
xchg
insl
int3
adc
mov
bound
icebp
icebp
int3
adc
xchg
mov
pop
je
mov
es
jns
push
add
cltd
sbb
lea
lret
sbb
iret
test
stos
jnp
and
lret
mov
repz
loop
loop
adc
jbe
lds
pop
iret
jl
adc
or
push
imul
xchg
pop
mov
les
stos
fldl
and
cmpb
mov
hlt
xchg
inc
lahf
pop
push
scas
out
mov
out
jl
fimull
insb
fnstenv
adc
sbb
call
push
cmp
movb
sub
mov
xchg
mov
dec
mov
in
fcompl
lret
out
and
int3
ljmp
cmc
dec
mov
cmp
xor
negl
dec
pop
les
or
sub
movsb
enter
test
xchg
out
and
push
jp
clc
jecxz
mov
sub
jb
sbb
fisttpll
repnz
push
cli
mov
inc
fcomp
mov
mov
sbb
inc
mov
mov
out
sbb
jmp
mov
int3
mov
bound
cmp
imul
add
fnstcw
sbb
jecxz
push
push
mov
push
mov
test
int3
mov
aas
push
cmp
pop
sahf
jo
aad
test
bound
pop
cwtl
sub
stos
pusha
add
jb
and
cmp
icebp
stos
fdivrs
add
sub
popf
cmp
push
add
aas
cltd
ret
jbe
pusha
push
addr16
and
xchg
nop
mov
inc
cltd
cld
or
xor
xor
pop
sbb
dec
or
jecxz
scas
outsb
push
in
xchg
inc
fisubrs
fidivs
mov
jg
scas
fs
lock
sbb
cmp
adc
fstpt
mov
jg
inc
in
adc
scas
jecxz
in
xlat
xchg
shlb
shrb
enter
push
sbb
in
rcrl
sbb
rcrb
dec
fucomp
icebp
js
mov
pop
or
jl,pn
xchg
mov
jl
adc
adc
lcall
aad
mov
mov
arpl
jle
xchg
aaa
mov
mov
push
lahf
mov
add
lahf
pop
mov
push
cmp
or
daa
sbb
push
clc
loop
rorl
inc
int
insl
loop
sbb
dec
adc
add
out
mov
cmpsl
push
push
lea
adc
mov
pop
mov
lds
dec
mov
ficomps
push
ds
fst
xchg
orl
sub
mov
or
xchg
jp
sub
mov
mov
jecxz
fwait
or
add
lods
pop
les
call
fcoml
outsb
sub
in
sbb
ja
dec
mov
hlt
std
sub
jecxz
jns
aaa
xchg
pusha
adc
xchg
mov
movsb
pop
pop
test
loope
push
mov
lahf
and
test
lea
mov
dec
insl
fists
jp
int3
push
push
cli
dec
inc
xchg
adc
push
push
push
pop
push
scas
cmp
loop
in
mov
sbb
mov
sub
jmpw
ror
push
das
jae
fs
movsl
fisttpll
push
rcr
or
jmp
fisttpll
jo
ror
sub
inc
cmp
ljmp
shll
icebp
mov
and
dec
subl
mov
ret
out
jnp
insb
ret
push
or
nop
in
or
fsubrl
push
sbb
pop
aas
fnstenv
dec
cmp
mov
mov
inc
flds
jl
pusha
xor
test
push
adc
sub
mov
clc
mov
lock
add
mov
add
shrb
in
push
cmp
sub
mov
cmpsb
lret
cmpsb
jne
push
lret
es
stos
stos
sarl
mov
jbe
ja
lea
inc
and
loopne
int
xchg
mov
testl
sarb
mov
mov
mov
in
pop
mov
std
mov
jns
call
test
push
jb
dec
pop
jns
loope
sbbb
sbb
cmpsb
dec
mov
and
lcall
mov
lea
cmp
and
out
shl
lret
rcr
les
faddp
movsl
js
pop
test
xor
and
jl
xchg
or
into
or
rcrl
or
das
sub
push
pop
repz
jbe
scas
loop
lret
mov
mov
pop
inc
arpl
sbb
pop
sarl
fcomps
push
aam
adc
mov
jnp
out
fs
pushf
mov
divl
cmp
push
xlat
mov
sub
jb
scas
add
sub
xor
mov
outsl
popf
lock
dec
mov
pop
dec
jl
in
insb
sbb
sbb
stos
xchg
push
mov
out
pop
inc
lock
xor
shrb
or
test
lcall
decb
cmp
ljmp
pusha
lret
push
rolb
cs
and
sbb
nop
xchg
adc
pop
je
pop
and
mov
int3
or
jne
mov
dec
out
out
and
inc
mov
icebp
pop
dec
pop
push
inc
and
mov
mov
divb
push
xchg
jge
ret
jle
inc
mov
fbstp
inc
jl
push
push
ljmp
rcrl
sub
fistpl
pop
shl
xchg
out
inc
lock
mov
xor
push
adc
outsb
mov
dec
adc
cmp
loope
adc
shrl
lahf
imul
hlt
mov
ret
jmp
aas
sub
xchg
into
pop
and
cmpsl
cmp
cmp
dec
andb
fisttpl
xchg
aas
or
push
sub
test
ret
dec
inc
mov
pop
jbe
test
es
mov
or
jmp
dec
and
rolb
pop
push
jae
xor
nop
shufps
dec
xor
popf
cmpsl
push
lret
mov
inc
xor
out
cmp
lahf
lds
inc
push
dec
sub
imul
popa
sbb
and
cmpl
cmp
or
sub
scas
jno
cli
mov
jbe
dec
stc
cmp
or
lret
pop
jle
rorb
dec
push
fsubrl
inc
push
push
pusha
addr16
mov
push
mov
xchg
xchg
sbbl
mov
repz
sbb
pop
rorb
negl
icebp
jmp
pop
push
mov
xor
fistpl
mov
xor
in
stc
sti
aas
mov
out
fwait
mov
push
lods
sbb
insl
rcrl
aam
out
and
jno
insb
sub
jle
dec
sub
sbb
subb
aam
mov
sub
mov
mov
push
fldcw
cmpb
lock
jmp
push
push
cmp
popf
lods
sub
leave
mov
cmp
sub
fs
std
cld
stc
push
lea
gs
mov
xchg
push
loopne
fidivs
push
sti
cmc
push
dec
test
and
enter
out
lds
mov
xchg
rclb
out
std
push
aaa
xchg
and
fucomi
repz
scas
daa
jmp
test
jo
loope
lahf
mov
mov
xor
orl
test
mov
lcall
fiadds
insb
add
loope
push
xchg
xchg
push
popf
push
jne
inc
adc
xchg
xchg
shlb
lea
es
clc
sahf
dec
mov
mov
hlt
xor
xor
sahf
push
das
pop
bnd
sbb
shrl
out
pop
pop
dec
popf
inc
pop
adc
fisubrs
mov
push
mov
pop
adcb
mov
scas
sbb
out
icebp
sbb
popf
jnp
pop
dec
aam
sahf
push
mov
stc
sbb
lods
and
adc
adc
shll
lea
mov
cltd
fmul
aaa
adc
add
and
sbb
in
iret
mov
push
sbb
movsl
fiadds
pop
mov
jl
jnp
shll
jne
lock
push
movw
or
mov
lret
or
fistpll
and
aaa
jg
or
sub
add
mov
dec
ja
mov
test
je
adc
pusha
stos
insl
push
push
cmp
mov
loope
fucomi
sbb
fs
adc
push
enter
inc
andb
out
aas
adc
mov
notb
pop
cmp
out
pop
mov
addb
es
cmp
sub
sub
xlat
int3
dec
imul
adc
mov
sub
pop
mov
add
fdiv
loop
cmc
cmp
sbb
xchg
mov
sub
and
add
int3
rcl
shlb
xor
scas
les
test
mov
mov
fucomip
add
mov
mov
cmpsl
and
icebp
into
mov
and
in
adc
aad
rcrb
pop
mov
xchg
bound
and
and
sti
xchg
incl
fbld
pop
ds
adc
pop
in
rorl
in
inc
aad
lcall
inc
leave
sbb
ss
test
outsl
sbb
add
lcall
mov
fisubs
xchg
divb
int3
sub
xor
mov
lds
popf
and
or
scas
or
int3
decl
inc
add
in
sub
mov
push
adc
iret
orl
shl
xchg
push
cmp
ljmp
sub
inc
adc
mov
leave
out
outsl
mov
les
out
out
mov
xchg
sbbb
aam
leave
sarl
in
sub
mov
mov
and
rcl
push
sbb
sahf
pushf
xor
data16
adc
dec
mov
mov
cmp
sbb
mulb
jb
stos
inc
push
outsl
push
jg
mul
push
lods
sbb
jno
in
push
fs
frstor
gs
and
sbbb
lock
dec
dec
xchg
rorb
cwtl
mov
cmpsl
fwait
xchg
ret
xlat
lahf
scas
mov
cmp
dec
scas
sub
mov
cmp
dec
cs
add
jp
repnz
cwtl
loop
cmp
testl
push
push
dec
cmpsl
sbb
add
enter
adc
loop
cmp
testl
in
repnz
leave
sub
mov
movsb
adc
fwait
je
stc
xchg
shlb
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
ret
push
sti
jno
inc
popa
rcrb
test
iret
xor
jnp
ss
xchg
mov
ret
xchg
add
lret
mov
sbb
push
or
push
inc
inc
pop
push
jno
sahf
pop
ret
jae
test
xor
jnp
pushf
fbld
popf
stos
add
push
jp
jnp
pop
mov
mov
aad
jg
xor
arpl
sub
sbb
pop
pop
cli
inc
sbb
and
icebp
push
lret
push
cmp
and
xchg
mov
cmc
aam
fistps
or
testb
cmp
roll
icebp
iret
and
int
mov
push
scas
test
loop
lcall
imul
adc
add
dec
xchg
sbb
lret
jnp
xorb
xlat
mov
mov
cli
sub
inc
jne
loope
jp
or
cmp
insl
in
cmp
sbb
sbb
andl
lret
bound
mov
mov
jle
sbb
push
cmp
in
mov
jns
xor
push
pop
xchg
inc
mov
cli
push
out
xchg
je
test
mov
dec
cmp
ljmp
fwait
mov
scas
daa
mov
in
inc
xchg
test
sti
aad
ffree
mov
orl
pop
out
lods
loopne
jno
pop
in
fisubrl
mov
xlat
lea
xchg
sub
push
das
add
fldt
or
mov
add
jmp
pop
lds
in
mov
inc
jl
mov
push
cmp
dec
mov
popf
mov
push
jmp
nop
push
mov
dec
push
or
mov
mov
mov
push
cmp
or
call
out
das
jno
fbld
mov
fs
ljmp
sbb
rorb
adc
lcall
mov
movsl
dec
mov
cwtl
push
std
jo
lret
adc
cmp
jns
mov
fistl
mov
sbb
cmc
ret
out
icebp
bound
arpl
sub
mov
cmpsb
xor
popa
les
add
rorl
inc
mov
jmp
call
stos
mov
xor
cmp
fstp
data16
mov
stc
je
sub
mov
pop
es
add
into
dec
mov
insb
ret
dec
push
push
sbb
push
xor
pop
mov
mov
jge
and
xchg
cltd
mov
mov
jno
inc
push
ret
inc
jl
fwait
sub
movsb
test
out
test
push
push
bound
out
dec
mov
fadds
arpl
ret
mov
jge
stos
inc
jmp
les
jp
popa
in
cli
pusha
mov
mov
mov
jge
or
or
imul
lods
adc
lcall
or
das
mov
cltd
js
cmp
push
addb
fadd
inc
mov
dec
enter
push
sti
fwait
mov
add
int
dec
int
enter
push
cmpb
jae
scas
push
dec
sbb
and
iret
sub
sarl
jne
dec
lock
mov
fsubs
call
and
loope
repnz
cli
dec
mov
mov
dec
es
mov
int
and
sbb
ret
arpl
ror
fidivs
dec
jle
push
mov
add
ret
xor
test
cmp
cmpsl
sub
dec
rclb
fsts
popf
popa
add
mov
add
cmp
loope
pushf
pop
mov
adc
dec
enter
nop
shll
push
pushf
jne
leave
test
lock
dec
daa
sub
leave
cmc
pop
add
inc
pop
sbb
sub
nop
jp
adc
and
repz
loop
movl
dec
xor
cmp
jmp
ret
mov
mov
push
jo
iret
mov
push
sti
insl
jnp
or
jae
subl
jle
mov
aaa
cmp
cmp
in
in
ucomiss
mov
scas
dec
push
sub
fisttpl
cmp
fists
xor
lret
negl
imul
ds
enter
movsl
test
outsb
repnz
sub
popa
lock
push
jno
inc
add
ds
adc
and
push
aas
popf
or
mov
or
ret
xchg
shlb
mov
insb
mov
dec
xchg
fwait
lds
or
sbbb
clc
mov
and
and
jge
sti
cmpl
out
or
add
outsb
loop
add
xchg
les
lods
testb
sbb
push
ljmp
adc
ljmp
scas
xchg
pushf
mov
cltd
dec
gs
push
subl
add
push
adc
test
fisubl
push
push
sub
xchg
push
scas
pushf
mov
push
cmc
lods
add
repz
push
or
lret
xchg
mov
jl
xchg
fwait
and
mov
cmp
orb
shl
jns
inc
loope
sbb
sub
mov
lds
insl
pop
stc
cltd
shrl
sbb
xchg
inc
xchg
lret
mov
inc
mov
cmp
clc
mov
test
cwtl
scas
push
das
movsb
imul
sub
int
and
fcompl
test
shr
in
pop
insl
or
test
and
enter
sbb
aaa
xor
daa
cmp
shl
mov
pop
mov
and
cltd
pop
int3
mov
inc
mov
fiaddl
mov
iret
test
test
js
xchg
out
cmp
imul
lret
and
xor
inc
scas
insb
mov
and
je
xchg
mov
fwait
test
sti
out
enter
fdivs
cmp
jo
rorb
sbb
movsl
mov
mov
sbb
mov
or
lahf
orl
andl
gs
cmpsl
pop
scas
push
test
idiv
loop
or
test
aaa
or
and
les
movsl
mov
daa
test
adc
inc
sub
cwtl
sbb
cmp
movsb
das
hlt
lahf
test
mov
ss
push
lahf
pop
loop
xor
loop
or
and
pop
adc
lahf
fldcw
xchg
push
dec
jbe
or
pop
cmc
jns
pop
scas
fs
cwtl
ds
or
pop
les
fucom
in
in
sbb
dec
xchg
and
jnp
mov
adc
xchg
les
cmp
xchg
or
and
xchg
jg
mov
pop
jmp
cmp
lds
push
cmp
mov
dec
mov
popa
add
push
inc
adc
lcall
test
fimull
xor
arpl
xchg
sbb
sbb
cmp
call
cmp
and
loope
dec
and
or
push
mov
sbb
movsb
mov
dec
pop
popa
push
add
and
jnp
je
dec
insb
dec
lods
pop
iret
lahf
or
cmpsb
int
or
adc
arpl
adc
xor
jge
cltd
cmpsl
popf
xlat
orl
mov
push
mov
cmpsl
jg
data16
jb
fildll
sub
jb
fsts
clc
pop
ret
push
das
js
cmpsl
sub
shll
cmp
loopne
pop
cmp
lret
jecxz
xor
js
call
push
xchg
test
mov
sub
fists
xor
push
lods
adc
mov
inc
lock
push
pop
mov
and
insb
mov
mov
fadd
push
mov
out
in
pop
add
sbb
out
inc
mov
fimull
jecxz
ja
test
inc
out
add
push
pop
ret
into
adc
adc
dec
dec
push
in
jmp
ret
cmpsb
shr
in
test
jae
pop
mov
int
adc
scas
push
subb
sbb
fsubrs
test
into
icebp
sub
jne
movsb
inc
cmpsb
and
pop
cld
pop
sti
jne
push
push
dec
mov
jo
mov
jecxz
jg
in
in
insb
jbe
mov
out
or
jge
sub
jmp
ds
and
jae
icebp
mov
dec
or
sub
cmpb
push
jns
sbb
testb
dec
rcrb
out
and
aad
mov
inc
shrl
mov
adcb
std
movq
adc
scas
adc
mov
cmp
cltd
loope
ljmp
mov
int3
mov
insb
lret
ror
mov
inc
pop
hlt
sbb
test
aam
mov
push
mov
add
cs
cmpsl
lret
icebp
add
jmp
movsb
mov
imul
insb
jno
loopne
roll
mov
mov
jae
divb
mov
out
mov
mov
lret
and
shlb
mov
inc
mov
jg
sbb
push
sbb
or
xor
adc
fs
push
lock
jecxz
jl
outsb
mov
or
enter
pop
xchg
or
pop
aam
push
mov
inc
ror
setno
inc
fnstsw
mov
adcb
cmp
scas
sbb
lods
jp
and
lret
mov
lods
sbb
jae
lea
xchg
pop
lea
repz
mov
pop
test
je
mov
idiv
cld
jg
mov
shr
push
xor
jae
fldenv
pop
stos
dec
xchg
rcrl
leave
iret
or
cmc
mov
add
in
sub
inc
mov
pusha
inc
mov
mov
enter
or
sahf
rcr
push
mov
int3
das
enter
push
in
inc
jle
jge
ljmp
lock
dec
rcll
in
ret
jp
pop
repnz
fstl
xchg
in
and
dec
dec
adc
rorb
lea
cli
ret
add
jl
adc
adc
fwait
xchg
push
push
test
or
out
cmp
scas
faddl
nop
fstpl
and
jmp
mov
les
clc
into
sti
xchg
sti
pop
xchg
add
pop
jns
jns
dec
outsb
mov
jbe
sub
lock
or
jo
or
jb
jle
mov
aad
inc
ss
push
ss
mov
adc
xchg
fisubs
xchg
call
push
adc
fs
subl
hlt
test
pop
pop
daa
xchg
and
pop
mov
dec
cmp
inc
out
cld
outsl
imul
mov
test
cmp
test
aam
jns
jmp
mov
jns
jge
in
pop
ja
lods
insb
adc
ja
pushf
lods
insl
cmp
and
sarl
in
sahf
imul
es
cmovae
ljmp
rorb
mov
xlat
aas
pusha
mov
sahf
add
movb
pop
xor
jge
aas
fdivr
repz
mull
inc
jae
xchg
ss
aad
mov
inc
repz
or
lods
pusha
minps
stc
xchg
sub
add
call
loope
jnp
ds
push
and
out
dec
imulb
xchg
iret
out
add
mov
sbb
das
pop
in
and
pop
imul
mulb
ret
and
inc
push
int3
dec
mov
mov
dec
out
mov
add
lods
repz
xchg
sti
lods
into
jl,pt
nop
out
mov
jae
ja
aam
add
xchg
sub
add
in
subl
push
pop
xchg
mov
into
xchg
pop
adcl
push
pop
out
cmc
out
cmpsb
or
jl
sti
xchg
int
shrb
mov
arpl
ss
ret
push
sub
shlb
xlat
jne
cltd
cmc
sbb
xor
xchg
xor
dec
adc
mov
jmpw
and
and
es
push
movsl
fstl
adc
rclb
minps
les
jns
dec
dec
push
pushf
jno
lret
mov
or
scas
add
mov
xor
mov
popa
mov
jns
add
mov
jne
ret
es
das
out
jmp
int3
mov
jae
dec
sbb
pop
xchg
or
jmp
int3
cmc
test
mov
jmp
cmpsb
mov
adc
add
xchg
out
or
pop
addr16
inc
cmp
mov
scas
mov
adc
mov
push
mov
xor
insb
daa
sbb
loopne
sbb
fwait
mov
or
push
int3
inc
mov
shr
push
lcall
jmp
mov
fadds
arpl
ja
lea
mov
pop
fiadds
data16
pop
add
push
inc
jp
roll
cwtl
in
mov
push
addl
dec
out
enter
and
pop
mov
cltd
lcall
outsl
test
and
addb
call
shrl
inc
inc
cmp
rcll
popf
add
and
push
pushf
rcr
movsl
fmul
fidivl
add
jl
mov
jne
iret
adc
sbb
les
xor
jg
dec
mov
inc
nop
jnp
lock
push
inc
data16
and
mov
pop
mov
jnp
loop
adc
sti
pop
cmp
ret
int
cmp
adc
xor
cltd
nop
in
andb
aam
cmpsb
cmp
enter
sub
sub
outsl
jno
fcmovu
xor
pop
aaa
add
cs
popf
scas
in
je
xor
jmp
cli
insl
repz
and
sbb
sub
pop
pop
inc
aas
mov
insl
aam
outsb
pop
hlt
mov
pop
loop
les
das
xor
push
push
das
test
mov
cmp
test
jp
mov
scas
or
test
addr16
leave
pop
mov
outsb
repnz
sub
adc
jmp
bound
orl
push
in
imul
fildl
and
lods
xchg
mov
pop
jo
inc
out
mov
je
fwait
loopne
rclb
dec
lea
int3
sbb
mov
js
mov
and
out
push
or
add
mov
or
xchg
jmp
imul
push
lcall
js
test
leave
dec
mov
call
adc
cs
loopne
cmp
fbld
inc
pop
jne
inc
loop
test
dec
add
bound
cmpsl
lret
mov
mov
mov
loope
xchg
and
outsl
bound
adc
test
repz
jge
or
shl
mov
sub
push
in
sub
cmpsb
bound
jecxz
pop
sbb
jmp
pop
aas
dec
rorl
scas
jge
je
es
push
ja
xor
push
xchg
pop
mov
aas
cli
orl
sub
and
sbb
mov
fstps
pop
pop
mov
cmp
insb
in
mov
and
push
sub
xchg
adc
imull
xchg
xor
xchg
fs
movsb
test
mov
jne
pop
cmp
or
inc
sub
loop
mov
push
ret
test
push
pop
inc
imul
sub
jge
jecxz
adc
pop
or
in
inc
loope
dec
jp
loope
jbe
notb
in
and
and
jg
jb
adc
test
mov
pop
mov
stos
pusha
add
jae
loopne
mov
jecxz
add
mov
xchg
cltd
lods
and
test
int
push
push
cltd
mov
sbb
movl
lea
jno
addr16
lret
jno
dec
inc
jmp
ret
aad
int3
out
jno
fwait
xlat
bound
mov
jp
inc
mov
insl
in
loop
cmp
cmp
mov
rcl
dec
pop
add
int
xor
xor
int
test
out
test
dec
js,pt
push
cmp
sti
pop
xor
sub
push
xor
ljmp
fsubrs
pop
adc
add
stc
pop
aaa
mov
inc
dec
push
lds
pop
mov
inc
dec
pusha
lods
stos
xor
push
imul
sti
movsl
push
mov
pusha
mov
and
xchg
ffree
jnp
scas
inc
pop
add
popa
inc
out
mov
jmp
insb
repnz
loope
fists
out
ja
lea
or
mov
xchg
add
loop
sub
xchg
out
pop
and
dec
xchg
mov
pop
jmp
mov
mov
lods
int3
mov
jo
aaa
fsubs
std
or
push
xchg
pop
cmpsl
adc
movsb
outsb
jmp
fimuls
inc
push
into
jns
lcall
push
push
xchg
mov
mov
pop
out
hlt
inc
push
and
or
or
bound
test
xchg
or
in
mov
cld
and
lcall
add
mov
out
aaa
mov
gs
loopne
sbb
frstor
ja
gs
popf
xchg
jp
push
out
lock
ds
xchg
data16
lcall
sbb
repz
push
push
cmpsb
add
mov
dec
inc
loop
fs
mov
mov
lret
loop
cmp
stos
std
hlt
lahf
mov
iret
push
xor
sub
daa
je
insb
pop
stc
xor
notb
sub
aas
daa
lcall
jp
out
mov
pop
int3
sub
cmp
or
rorb
adc
lcall
cmp
ja
aaa
mov
mov
bound
mov
pop
int3
aad
mov
insl
sbb
xlat
ss
dec
jne
movd
repnz
repz
shlb
cmp
es
cmp
xchg
ljmp
pop
fimuls
movsb
cmpsl
iret
mov
mov
inc
mov
pop
rcr
lret
arpl
fstpt
test
ret
jnp
notb
mov
mov
sub
ret
mov
cld
adc
scas
dec
mov
test
cmc
pop
aad
outsl
imul
cwtl
jbe
out
fildl
out
aam
out
mov
sub
pop
xchg
mov
adcb
fstps
push
aad
or
mov
clc
mov
adc
xor
fmull
iret
mov
xchg
inc
inc
sbbl
ret
mov
pop
push
lret
xor
rclb
repz
sbb
mov
inc
xor
js
sahf
sti
out
mov
xchg
mov
mov
js
or
popf
push
nop
dec
adc
cwtl
aam
pop
inc
lcall
in
mov
adc
jae
dec
cltd
sbb
jge
out
dec
sbb
xchg
lea
push
sbb
sbb
or
es
pop
test
ds
mov
push
loope
loop
adc
push
push
out
movsb
jl
aam
outsb
adc
ss
push
lods
ds
mov
add
gs
pop
out
and
stos
int3
xchg
fs
sbb
loopne
xchg
mov
xor
mov
xchg
and
push
xor
add
xchg
imul
ret
add
das
jle
in
inc
call
add
fnsave
ret
iret
or
sub
nop
ret
test
sbb
adc
xchg
adc
mov
sub
cmp
js
mov
out
xor
sub
fdivrs
fmull
or
cmp
gs
fcomps
cs
jae
jbe
inc
lods
mov
int
jne
mov
add
icebp
cmp
pop
outsb
sub
pop
pop
imul
push
xor
push
adc
nop
incb
mov
jge
sbb
aaa
mov
dec
push
lret
lahf
mov
push
mov
adc
enter
mov
pop
inc
imul
push
jecxz
rcl
movsl
and
jle
rolb
test
ja
jl
push
cli
sbb
sub
scas
ja
test
xchg
stos
mov
xchg
enter
mov
enter
imul
sbb
in
int
jg
hlt
mov
enter
xor
xlat
daa
and
arpl
mov
adc
fsts
icebp
pusha
and
inc
cmpsl
repnz
cmp
movsb
sub
and
push
in
pop
aam
jge
fisttps
popa
fistps
sbb
jae
push
cmp
stos
aad
push
mov
and
test
xchg
mov
nop
push
vmaxps
cmpsb
loopne
scas
xchg
mov
testb
fcomps
sub
sbb
dec
dec
cmp
sti
rolb
xor
fidivl
es
ds
jnp
shl
and
fnstsw
add
into
test
sub
cs
pushf
rclb
cli
push
stos
push
inc
addr16
mov
and
sbb
pop
inc
in
add
out
and
in
jae
subb
fildll
pop
jne
xchg
jns
pop
daa
mov
faddl
ret
cmp
rcrb
jnp
adc
jo
push
mov
pushf
adc
jmp
test
fsubr
ret
jmp
ret
sahf
and
outsb
jns
mov
and
testl
pop
inc
cmp
mov
or
mov
bound
sti
mov
call
add
xchg
or
xchg
push
aaa
add
and
popa
orb
aas
ljmp
jp
cmpsl
mov
xlat
pop
and
jge
and
mov
mov
mov
fstpl
jo
es
mov
cmpsb
cwtl
enter
push
fwait
or
mov
adc
loop
or
pop
cld
daa
dec
jne
popa
jl
mov
out
pusha
hlt
je
les
sti
mov
xchg
nop
fisubl
xchg
cli
dec
inc
dec
stc
push
mov
fnsave
push
cld
xor
loop,pn
cmp
sub
jp
xchg
cmp
jmp
sbb
fnstsw
insb
rcl
add
xor
das
in
or
mov
call
sbb
es
mov
inc
sub
idivb
in
cmp
jne,pn
adc
and
sbb
test
stos
jl
or
cmpsl
add
mov
scas
cmp
cmp
xchg
leave
dec
xchg
sub
xchg
cs
lcall
or
lret
sbb
cmp
pushf
je
xor
xchg
push
or
mov
cli
int
sub
data16
cld
cmpsl
push
mov
repnz
ss
mov
jnp
mov
jp
inc
adc
mov
mull
fidivrl
inc
sbb
test
sub
movsl
sbb
jl
fnop
push
and
mov
mov
scas
mov
jbe
sub
mov
lods
ret
cmp
pop
shlb
aam
and
and
adc
mov
scas
adc
adc
inc
lret
jp
scas
mov
cmp
outsl
loop
test
cli
cmp
scas
xchg
xor
int
insb
xor
and
mov
arpl
cwtl
lods
jl
xchg
pusha
jmp
sub
mov
outsb
out
addl
outsb
cmp
dec
pop
push
jecxz
imulb
jmp
test
pop
nop
pop
loopne
popa
sbb
lret
jns
cmp
sahf
fisubrs
mov
int
mov
cmc
cs
les
sbbb
push
fildl
mov
push
fildll
pop
mov
cmp
dec
pop
add
sub
pop
cmpsl
les
add
cwtl
adc
dec
jle
jecxz
lahf
mov
adc
leave
jb
lods
push
jg,pn
es
clc
cwtl
rcrl
mov
je
xor
mov
jno
mov
orl
xchg
mov
scas
mov
or
and
push
jle
mov
mov
sub
ret
pop
es
sbb
loope
loop
xchg
adc
adc
dec
add
out
dec
das
std
ds
sub
leave
xchg
sbb
mov
jp
lods
mov
pop
inc
popa
add
jae
dec
cmp
add
lods
xchg
icebp
push
jge
rcll
jle
cltd
subl
lahf
std
mov
shl
cltd
add
push
pop
xchg
rcrb
xchg
mov
pushf
rcrl
cmp
aam
add
inc
lret
ficoms
pushf
sub
push
inc
push
in
and
std
mov
inc
jne
cmp
adc
and
sbb
push
ret
push
xor
and
subb
es
mov
imul
sbb
push
jmp
jae
jge
cwtl
jl
pop
mov
dec
jge
push
pop
inc
mov
cmpsl
clc
aam
ret
xchg
adc
negl
inc
shl
jb
repnz
imul
aam
lock
and
sbb
inc
sbb
push
lcall
loope
fisubrs
mov
push
je
mov
adc
fwait
imul
cli
add
outsl
jbe
adc
sub
cmp
lahf
jbe
add
dec
push
mov
push
cld
faddl
jbe
lock
dec
push
sarl
sub
add
aad
enter
imul
cmp
sahf
lahf
mov
mov
es
gs
es
or
lods
xor
dec
push
in
add
sub
and
bound
out
dec
adc
jp
jno
cmp
popa
jb
scas
mov
lret
mov
push
mov
jecxz
in
cmp
je
imul
sbb
adc
or
xlat
sarb
in
fstpt
loopne
sub
sub
mov
add
pop
jns
ret
insb
icebp
xor
and
mov
aas
scas
sub
lret
mov
push
jb
ljmp
sbb
insl
call
mov
test
mov
fstl
loope
mov
mov
imul
sbb
push
es
aad
dec
add
fsubrl
movsb
nop
xchg
or
push
pop
jmp
sar
bound
das
inc
ja
and
and
nop
xchg
jb
add
scas
jno
push
mov
jg
test
pop
std
and
cltd
js
aas
adc
mov
nop
lret
in
clc
jno
xchg
dec
lds
shl
mov
clc
fucomi
into
cmp
pop
mov
add
enter
mov
push
or
enter
dec
jno
adc
push
inc
dec
sub
lds
sbb
and
sub
fcmovnu
ljmp
mov
and
pop
adc
sbb
int3
jecxz
pop
and
ljmp
mov
fbstp
in
mov
sbb
push
mov
rcrl
mov
pop
je
popa
popa
or
jmp
xorb
ret
lahf
mov
fdivs
dec
sbb
std
ret
pop
adc
test
mov
scas
jbe
repz
adc
cld
je
push
add
repz
sbb
sahf
pop
outsb
fbstp
mov
mov
daa
jno
pop
sub
xchg
aad
or
insl
sahf
sbb
add
push
or
push
arpl
xchg
or
push
xchg
sub
ret
in
fstl
dec
push
flds
mov
stc
hlt
lods
adc
xchg
push
mov
mov
gs
js
and
les
mov
add
dec
add
cmp
sti
jge
lds
rclb
lret
hlt
sub
cmp
inc
dec
mov
icebp
out
repz
fsub
xchg
imul
test
lcall
xchg
js
sbb
lods
das
loop
inc
push
fwait
sub
out
and
dec
cmp
andps
test
adc
inc
mov
inc
mov
es
arpl
sub
sub
dec
pop
inc
cmp
shlb
push
imul
adc
adc
stos
sbb
repnz
out
dec
lods
insb
out
sub
xchg
decb
out
ss
xchg
sub
ljmp
or
adc
outsb
inc
fsubl
adc
mov
push
and
pusha
inc
dec
in
mov
and
call
in
scas
insl
mov
or
xchg
xchg
pop
xchg
xchg
xorl
rolb
pop
cmp
xchg
dec
xor
insl
stos
xor
pop
aam
pop
or
stos
out
lea
inc
and
fstpl
test
jge
or
xor
test
pushfw
mov
fistps
mov
jnp
out
ret
into
bnd
test
frstor
repnz
or
pushf
and
mov
enter
mov
dec
pop
push
out
dec
inc
lock
jne
dec
push
movsb
add
sub
dec
hlt
jge
or
xor
out
inc
and
xor
inc
idivb
mov
mov
add
inc
mov
addr16
push
stos
pop
inc
push
jo
fiaddl
loop
or
lcall
jge
incl
ja
mov
mov
mov
loope
push
push
bound
movsb
ja
cmp
out
aam
pop
cwtl
fcomi
and
out
cmp
xor
adc
fisubrs
xor
dec
movsl
sub
dec
jae
dec
and
in
out
mov
mov
jecxz
loop
jge
dec
push
sbb
adc
test
sbb
jbe
movsb
push
icebp
xchg
cmc
mov
mul
inc
and
and
cmpsb
push
xchg
pop
or
out
mov
add
xor
js
insl
and
inc
popa
push
and
adc
push
xor
outsb
jns
ret
adc
lock
sub
push
aaa
movsl
loop
mov
jo
or
or
arpl
ljmp
or
call
lea
push
xor
out
xor
mov
loope
imul
outsl
test
test
ljmp
cli
inc
idivb
push
imul
pop
out
mov
push
mov
aas
fcoml
push
or
ret
aas
int
ss
jb
out
add
dec
sti
das
push
or
ret
jp
mov
inc
sub
std
xor
sbb
cs
insb
lret
idivb
jns
lock
cmp
jp
sub
scas
mov
cmpb
mov
cs
mov
std
lahf
shlb
dec
xor
aaa
adc
mov
arpl
insl
xchg
aam
shlb
pop
std
mov
push
push
add
aam
ljmp
dec
mov
push
inc
scas
push
or
imul
shll
lret
mov
out
iret
mov
lods
cmpsl
push
sar
inc
xchg
xchg
lcall
fistl
mov
push
and
and
aaa
sub
pusha
shll
ss
in
xchg
or
lds
inc
inc
or
pop
inc
leave
xchg
fninit
cmp
hlt
xor
sbb
das
dec
nop
push
push
arpl
scas
push
xchg
in
dec
in
ja
movb
cmp
xchg
fadds
lea
lret
mov
lods
das
pushf
jge
les
pop
mov
es
cmpsb
test
inc
cmp
mov
icebp
or
jbe
scas
lods
and
xchg
fs
pushf
inc
xchg
data16
mov
xchg
dec
dec
js
ds
lcall
push
and
in
shrl
or
push
subb
mov
negb
push
sbb
insb
movsl
leave
and
push
pop
jge
xchg
pushf
inc
bound
movsb
jbe
insb
scas
nop
scas
mov
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
sarb
popa
rcrb
mov
mov
jnp
mov
mov
jecxz
sub
xchg
les
mov
mov
bound
xchg
sti
out
les
clc
adc
cs
fsubp
mov
aad
inc
sbbl
mov
push
dec
push
or
fiaddl
repnz
sti
mov
mov
sar
xor
enter
add
pop
ror
pop
dec
mov
inc
mov
pop
insb
test
aas
dec
daa
fisttpll
stos
push
jl
inc
scas
pusha
cwtl
sbb
mov
sbb
sti
jns
add
xchg
sbb
in
lret
or
std
xchg
in
dec
dec
and
push
sbb
and
xchg
adcb
outsl
mov
clc
pop
bound
in
mov
inc
lods
dec
inc
nop
xchg
inc
fcom
cltd
jb
jmp
icebp
sub
xor
jno
and
and
jp
jbe
xchg
adc
inc
xlat
xor
lock
push
cmpsb
je
dec
or
orl
dec
inc
xor
test
dec
lahf
xor
inc
pushf
add
test
out
jge
loope
lods
dec
int3
ret
outsb
mov
pop
rol
aam
aas
test
and
or
ret
mov
cmp
mov
add
shll
mov
cltd
ljmp
xor
test
clc
mov
out
adc
in
lahf
leave
scas
add
and
push
inc
mov
sti
mov
jne
pushf
xlat
cli
dec
pop
loop
out
loop
or
out
aad
and
pop
leave
cmpb
cmpl
inc
test
lea
popf
push
shlb
int
iret
out
out
xchg
push
jge
sbb
mov
lock
inc
movsl
or
dec
stc
sbb
mov
sub
add
or
inc
push
enter
sbb
fmuls
cli
cli
or
in
mov
movsl
or
fildl
adc
sbb
or
clc
add
clc
jb
cmp
and
and
call
shll
lcall
lea
lea
idivl
pop
mov
push
fadds
adc
jecxz
repz
or
fidivrl
movsl
jns
mov
pop
sbb
fdivp
mov
insb
or
add
and
and
dec
lcall
jle
cmp
stos
adc
stos
pop
sub
out
sbb
ret
shll
jecxz
ret
je
call
and
push
mov
lahf
cwtl
or
js
sbb
sub
push
stos
ja
xor
daa
or
xchg
inc
mov
push
js
jnp
cmp
stos
or
mov
lds
hlt
dec
pop
lods
dec
pop
ds
xor
aas
mov
xchg
mov
mov
sbb
xor
inc
adc
les
fstl
lods
rclb
dec
sbb
fstp
mov
shl
xchg
insl
sub
and
enter
inc
pop
and
in
sub
xchg
stc
inc
pop
stc
dec
fs
sbb
pop
aaa
sahf
mov
cmpsl
outsl
pushf
lahf
les
cli
jnp
es
out
xor
leave
pop
subl
cld
and
flds
mov
add
addr16
adc
inc
lea
sub
cmpsb
movsl
daa
les
aam
or
cli
dec
fsub
sbb
push
int
sub
cwtl
adc
xchg
add
xchg
sti
cmpsl
scas
pop
mov
int3
adc
xor
xchg
cwtl
test
and
sbb
lock
lcall
cmp
add
outsb
addr16
jno
ljmp
sub
jg
insl
vpsubq
subl
adc
add
jecxz
and
movsb
and
loope
ljmp
bound
xchg
or
mov
jne
test
lret
push
daa
inc
cmc
adc
xchg
jp
push
jb
and
mov
xchg
dec
pop
mov
std
cmp
mov
xor
data16
ret
add
mov
lock
jmp
mov
std
mov
xchg
jne
sub
shlb
leave
and
cwtl
and
popa
lods
cltd
xchg
mov
leave
incl
movsb
jp
mov
push
in
jns
lds
ret
dec
sti
imul
push
movsl
loope
adc
sub
pop
dec
xchg
xchg
andl
subb
jmp
push
ret
mov
in
mov
sub
cmp
cld
mov
pop
dec
adc
add
jo
and
loop
fimull
mov
test
xchg
mov
adc
inc
pop
fstl
inc
push
adc
jg
out
adc
mulb
inc
cmpsl
icebp
scas
in
pop
xor
inc
adc
sbb
mov
sbb
mov
int3
ret
sbb
cld
jmp
adc
add
fistpl
lcall
mov
lock
subl
popf
int3
inc
pop
js
pop
ret
mov
xchg
mov
mov
sti
or
aam
sbb
sbbb
ja
pop
pop
pop
or
jp
das
add
cmp
fistpll
adc
xchg
rcrl
xor
cmp
fisttpll
pop
xchg
xor
dec
lret
aam
add
lea
inc
xchg
mov
xchg
scas
cmpsb
sti
sbb
pusha
adc
jge
and
mov
inc
insl
leave
and
push
mov
xor
mov
repz
mov
divl
into
test
push
mov
mov
inc
mov
fsubrl
repz
call
dec
jle
movsb
dec
in
outsb
mov
xor
mov
aas
pop
pop
xchg
push
insl
xchg
mov
jg
pusha
inc
jb
cmp
out
imul
jno
shlb
lods
inc
cs
and
das
lcall
rcll
mov
mov
add
into
test
mov
das
loope
cmp
sbb
cwtl
imull
and
mov
jns
adc
xchg
sbb
xchg
fsubl
and
daa
xor
fiaddl
out
addl
push
adc
sbb
pop
sbb
and
cli
jae
out
insb
fwait
adc
dec
mov
sbb
or
mov
xchg
out
pop
lret
jne
dec
nop
lahf
adc
mov
test
sub
add
arpl
shlb
cs
lds
sbb
push
mov
push
jnp
jne
inc
pushf
xlat
inc
mov
mov
ret
pop
mov
push
out
xor
ljmp
fucom
pop
scas
dec
cmc
scas
mov
jnp
mov
lret
aas
lcall
or
mov
jnp
int
outsl
mov
movl
ret
iret
mov
xchg
mov
lret
jp
fstps
mov
xorb
outsb
or
jb
mov
es
xchg
jl
ret
loop
out
test
mov
mov
xchg
sbb
xchg
mov
jmp
lods
incl
and
repnz
pop
enter
rcrl
rcrl
xchg
out
lods
das
cmpsb
les
jge
push
jp
jecxz
push
loopne
add
cmc
jecxz
ljmp
mov
xchg
daa
adc
shl
inc
jl
or
cld
add
xor
jmp
inc
sbb
sti
mov
sub
jp
rcll
adc
in
shll
mov
lods
jb
ror
cmp
inc
mov
mov
inc
mov
mov
xor
shrb
dec
dec
enter
cmp
mov
ret
push
gs
pusha
fadds
push
push
lods
inc
push
stos
std
xor
in
cmp
pushf
sbb
in
jne
dec
mov
sub
sbb
adc
push
inc
lock
leave
inc
dec
in
push
mov
jg
push
cmp
insl
mov
fwait
mov
mov
repz
and
jnp
mov
test
mov
je
jle
dec
and
xlat
inc
and
or
pop
mov
fwait
adc
js
fmull
addr16
and
add
inc
daa
adc
mov
in
test
rolb
mov
dec
xchg
mov
rorb
jno
pop
lock
data16
pop
inc
leave
imul
sbb
stos
lock
adc
in
mov
mov
gs
and
jge
push
cmp
sahf
lcall
pop
insl
push
gs
push
call
xchg
mov
lcall
jle
andl
xor
out
fidivl
negb
sub
or
push
inc
in
aaa
pop
jmp
jns
std
sbb
cli
and
in
ja
cmc
fstps
iret
rorl
and
xlat
ffree
test
dec
mov
mov
sub
jg
notl
shrl
outsl
movsb
or
jae
mull
cmpsb
mov
pusha
sbb
cmp
cmp
jmp
cmp
add
mov
mov
int
sbb
cmp
jne
cmp
je
and
test
jg
xchg
cli
sarl
ja
mov
orl
push
fsubr
or
fcmovu
jb
xor
sub
push
and
fidivrl
sub
cltd
push
clc
mov
mull
stos
je
mov
sub
outsb
test
cmp
mov
push
aad
lahf
push
or
push
mov
cltd
aas
adc
fisubrs
adc
ss
adc
mov
pusha
mov
scas
push
jae
imul
dec
daa
and
cmp
sbb
push
inc
test
sub
push
sbb
cmpsl
cmovle
push
or
add
movb
jp
mov
cmp
adc
int3
adc
mov
scas
push
adc
pop
int3
pop
les
sbb
and
xchg
fwait
loop
mov
mov
popa
pusha
pop
mov
dec
sub
sbb
testl
add
test
jne
gs
sahf
cmp
cmpsl
pusha
fs
mov
and
in
mov
fucomip
cmp
lahf
lret
xchg
fiadds
fwait
stos
sti
outsl
inc
inc
xor
dec
mov
bound
jnp
jl
in
loopne
ds
sbb
and
and
jo
jns
aad
nop
imul
mov
pop
ds
xor
dec
fdivl
ja
and
xchg
jnp,pn
jp
pop
int
loope
add
mov
in
imul
inc
mov
daa
mov
popa
sub
add
or
xor
lret
adc
fldenv
mov
mov
xorb
sbb
sbb
jg
pop
mov
popa
mov
pusha
pop
push
mov
stos
shr
loop
push
jbe
ror
cmp
xor
dec
and
xor
lock
sbb
xchg
add
xchg
push
movsb
ja
fs
orb
popa
enter
lret
cmp
lcall
cmp
sub
xlat
shlb
dec
mov
cmp
pop
fdivl
or
lahf
popa
or
bound
fcmovnb
xchg
cmpxchg
fadds
addr16
fmull
in
jne
in
mov
mov
pop
adc
roll
mov
test
es
jae
mov
stos
jno
xchg
aam
or
xor
push
shl
mov
inc
fdivl
inc
sbb
cmpl
lods
jb
dec
pop
and
mov
mov
xchg
adc
adcl
js
and
mov
iret
adc
dec
loop
adc
dec
les
mov
fcomps
mov
mov
pusha
pop
repz
iret
cmp
pop
scas
or
das
push
cmp
add
fadds
nop
xchg
mov
test
lea
dec
sbb
add
movsb
inc
sbb
add
int
je
iret
add
pop
mov
mov
push
nop
push
fsts
je
stos
aam
or
scas
mov
sbb
nop
and
sbb
aaa
mov
mov
daa
movsl
imul
mov
adc
daa
xchg
fcomps
adc
in
clc
negb
mov
enter
lea
pusha
stos
call
data16
push
outsl
jecxz
mov
mov
add
popl
xor
add
out
cs
lods
outsb
test
inc
call
aaa
mov
loopne
sub
jg
mov
ret
lds
movsl
push
add
aam
insb
cltd
iret
inc
mov
and
add
notl
dec
add
fcmovbe
and
mov
in
decl
and
mov
filds
xchg
fs
push
mov
pop
adc
mov
mov
mov
xor
into
mov
imul
lods
xchg
sbb
jne
inc
push
out
mov
ret
cmp
sbb
cwtl
pop
jo
or
sub
clc
lret
bound
addl
mov
dec
cmp
push
xchg
push
mov
aas
dec
fisttps
pushf
jle
add
jns
aam
pop
xchg
dec
jecxz
aam
lret
in
test
mov
pop
jmp
cmp
and
leave
pop
push
repz
or
and
push
sub
mov
sbb
ja
pop
add
fstpt
subl
subb
mov
addr16
leave
dec
mov
lods
adc
inc
sbb
pushf
push
push
aam
dec
sub
lds
cmp
xlat
jns
rolb
sbb
in
jno
hlt
push
mov
cltd
jge
insl
add
push
outsb
xchg
adc
xor
sub
xchg
pop
rol
and
arpl
lods
sub
popf
and
xchg
adc
adc
adc
cli
stos
mov
fwait
push
pop
lods
sbb
stos
jns
pop
sbb
rcl
daa
aad
cmpsl
cld
int3
negl
lods
sub
hlt
insl
xor
pop
inc
lds
shlb
xor
xchg
jge
movsb
sub
and
lods
pop
das
cmp
xchg
mov
imul
jmp
sub
xchg
mov
ror
sub
mov
mov
pop
leave
jo
cmpsl
push
jb
sbb
in
out
leave
test
push
out
dec
sbbl
xor
arpl
inc
dec
jno
ljmp
mov
push
rorb
fistpl
adc
clc
cmp
sbb
inc
fstps
ja
pushf
hlt
imul
mov
rorb
sbb
lds
xor
pop
das
sti
nop
movsl
int3
jp
mov
es
in
loop
and
mov
mov
repnz
cmp
mov
xchg
xor
fmull
push
mov
jl
push
xor
pushf
popf
enter
adc
cld
rcrb
ffree
pop
lods
fisubrl
jle
out
push
add
out
and
cmpsl
xchg
or
arpl
mov
mov
add
andl
cltd
cmp
adc
fwait
and
aaa
into
pop
aaa
push
sbb
cmp
stc
mov
lea
jp
repz
mov
sub
add
inc
je
test
inc
inc
cmp
push
insl
dec
pop
adc
and
xor
aad
jl
fnsave
ds
lds
dec
pop
inc
mov
or
loopne
enter
data16
xchg
push
inc
cmp
jg
das
and
test
lods
test
cs
iret
mov
ficomps
mov
stos
jg
scas
mov
lret
jbe
pushf
jb
mov
out
or
shlb
test
pop
lods
sub
mov
mov
in
dec
mov
bound
mov
sub
je
daa
inc
dec
xchg
dec
int3
or
in
test
or
imul
mov
jmp
ror
pusha
je
xchg
test
mov
mov
ds
sbb
pushf
jae
add
sub
popa
movsb
imul
test
dec
lock
js
sub
jge
dec
loop
rcrl
mov
sbb
xchg
test
in
in
call
sbb
bound
xchg
cmpsb
xor
jae
jle
outsb
inc
add
push
add
push
push
mov
cs
out
outsl
inc
pop
movd
mov
test
int3
mov
sub
mov
pop
fcomps
and
add
cmp
xor
cmp
sti
aas
cli
inc
and
mov
pop
lcall
enter
repnz
lcall
jecxz
cmp
dec
das
mov
mov
mov
pop
and
pop
mov
push
test
flds
push
scas
scas
dec
cmp
out
icebp
andl
sub
in
out
mov
mov
test
xchg
jmp
mov
jg
outsb
adcl
jmp
cld
ret
popa
scas
cli
xor
es
cmp
sbb
stos
dec
or
pusha
or
loop
lock
and
jnp
imul
cmpsl
in
es
pop
jge
sub
flds
scas
adcb
iret
ret
xor
mov
sbb
and
mov
in
lea
mov
xchg
adc
cltd
imul
xchg
sbb
sub
fidivl
fimull
push
ret
mov
jne
je
adc
and
xor
xchg
movsb
sbb
pop
cltd
stc
pop
push
divl
mov
sbbb
lcall
mov
mov
movsl
in
and
int3
xchg
rorl
push
mov
imul
popa
sub
sub
mov
daa
cltd
or
test
lea
mov
movsb
fmuls
push
es
scas
push
popf
jl
clc
stc
push
les
inc
ret
mov
cmp
lock
test
dec
jno
int3
cltd
jno
out
movsl
push
sarb
jno
xorl
add
add
lods
inc
ret
pop
gs
pop
adc
push
pop
icebp
or
mov
ret
dec
insb
cmp
insl
shlb
rorb
ss
cmpsb
ss
sub
insb
loopne
shlb
daa
insl
adc
add
inc
and
in
test
mov
dec
inc
inc
xor
adc
es
or
sahf
mov
sbb
or
cwtl
pop
mov
lea
xchg
ret
das
or
lock
dec
or
cmp
push
xchg
mov
outsb
in
add
adc
nop
pushl
addr16
test
ret
data16
mov
push
xor
sub
sbb
fmuls
popa
imull
lcall
push
out
sti
test
push
xchg
mov
enter
and
int
jb
or
add
push
sub
aad
pop
ret
movsb
in
mov
addr16
int
sahf
insb
push
cs
push
cmpsl
dec
push
mov
xchg
fdivl
test
push
push
inc
cmp
jne
aas
and
mov
xchg
cmp
push
in
cmpsb
dec
xchg
dec
xor
mov
push
mov
adc
test
mov
out
adc
jl
cmc
mov
lods
add
inc
aam
repz
out
cmpsb
fs
cmpsb
jo
cltd
ljmp
push
jecxz
in
stos
xlat
lock
lret
push
pop
cmpsb
subb
cwtl
popf
xchg
jle
xor
xor
mov
mov
mov
sub
add
mov
popfw
movsb
mov
ss
cmc
push
lret
imul
or
cmp
xchg
mov
mov
sub
insb
mov
loop
sbb
hlt
fwait
mov
inc
sbb
shll
and
out
ds
std
and
int
shl
push
mov
out
add
or
dec
mov
cmp
dec
pop
ds
jno
mov
pop
lock
xlat
or
sbb
mov
bound
outsb
sbb
pop
ret
jae
aas
dec
test
adc
je
call
lods
inc
inc
xchg
fs
sbb
data16
push
sub
fs
hlt
lea
sbb
add
adc
ret
icebp
gs
dec
push
clc
popf
ret
add
jg
in
pop
out
inc
sub
cmp
cmpsl
xor
cmp
jo
gs
or
adc
insb
xchg
icebp
fwait
stos
xor
or
ja
lods
pop
add
sbb
int3
pop
aas
cmp
and
test
faddl
xor
negb
xlat
out
xchg
cmpsb
inc
int
pmuludq
ret
sub
cmp
outsb
adc
jae
mov
jl
cmp
shl
in
imul
popf
lret
mov
adc
ljmp
lods
arpl
xchg
lods
mov
dec
adc
xchg
ja
mov
push
fildll
je
xor
out
mov
cmp
mov
inc
mov
or
int
jns
xchg
xchg
xor
cld
ret
and
cli
push
ds
call
lods
mov
push
call
and
jg
lret
xor
test
mov
mov
nop
mov
out
out
jmp
pop
pop
in
sti
adc
sub
test
cwtl
movsl
mov
rorb
xor
js
xchg
pop
lock
or
mov
das
cmp
inc
xor
mov
jbe
clc
inc
ror
cmpsl
cli
xchg
cmc
mov
xchg
pop
scas
cli
and
inc
shl
js
loop
aad
adc
repz
add
xor
adc
scas
mov
jl
or
pop
jns
dec
push
andl
mov
sahf
out
pop
int
adc
sbb
out
jl
lret
sbb
inc
mov
pop
insl
sbb
outsb
pop
xor
iret
adc
test
jl
call
test
sbb
outsl
jge
or
push
lds
sbbl
mov
mov
jno
lahf
cwtl
and
movsb
sbb
pop
lock
inc
test
xchg
imul
jns
inc
sbb
outsl
jae
sbb
lcall
cmp
xchg
sub
adc
iret
jo
cmp
xor
xor
lret
inc
pusha
push
xchg
xor
bound
insl
mov
aam
dec
jl
popf
outsl
out
es
outsl
ljmp
aad
out
rcrb
jg
idivl
in
sub
push
xchg
dec
stos
push
lods
scas
movsl
iret
sub
sbb
jnp
loop
fcmove
fcomip
xchg
mov
in
subb
and
movl
sti
xor
mov
inc
mov
cmpsb
inc
sub
loop
ret
ret
mov
pop
fcoms
das
push
and
inc
test
xchg
idivl
xchg
cld
dec
push
lret
out
sub
mov
inc
and
mov
push
push
jbe,pn
add
push
test
testl
sbb
pushf
clc
enter
rcrb
sahf
jo
insb
add
ret
stos
test
cmp
into
movsb
fisubrs
cmp
mov
jecxz
and
out
mov
push
loopne
subl
push
popa
xchg
pop
jno
in
cmp
std
push
das
mov
sbb
push
mov
insl
insl
mov
lods
into
mov
cmp
gs
jns
jo
push
in
loopne
ss
and
insl
push
hlt
mov
dec
mov
aam
push
int
clc
cmp
cli
push
dec
sbb
adc
adcl
and
push
js
xchg
jb
jp
out
scas
cmp
dec
adc
jo
cld
decb
xor
cwtl
shll
icebp
daa
scas
xchg
scas
sbb
cmpsb
repnz
stos
aam
xor
fbld
in
xor
inc
mov
into
add
push
pop
ljmp
xchg
mov
cli
mov
add
ret
testb
adc
dec
test
pop
push
mov
mov
push
sbb
out
sub
lods
jo
push
jge
andl
sub
dec
xchg
mov
lods
jo
dec
jecxz
jbe
dec
rorb
cmp
ret
cmpsb
fwait
push
sarl
sbb
stos
outsl
push
mov
jns
jmp
imul
push
fs
ret
popa
and
mov
rcrb
divl
lret
dec
dec
arpl
and
push
jp
or
xchg
loopne
notb
xchg
push
test
adc
cmp
dec
mov
cmp
xchg
imul
push
pop
addr16
lea
jnp
data16
pop
or
pop
je
mov
int
sub
jno
or
imul
in
xchg
dec
sbb
xchg
add
mov
retw
xchg
dec
out
out
cmp
mov
or
bound
xor
dec
mov
pop
lret
jecxz
jne
les
sbb
jle
lret
mov
push
lock
jae
mov
xchg
test
sub
imul
xor
or
push
inc
jno
push
movsl
call
pop
xchg
jle
lcall
sbb
fdivs
clc
jp
mov
rclb
jg
in
or
or
dec
pop
xchg
sub
or
jge
cmp
add
and
and
mov
rcr
shlb
gs
sub
out
sub
mov
push
ror
daa
sbb
add
inc
data16
gs
sbb
xchg
dec
pop
adc
dec
outsl
sbb
cmp
xchg
xorb
stos
xor
mov
mov
jb
cld
in
out
ss
xchg
jmp
mov
xchg
mov
adcl
arpl
jle
cli
adcb
sbbl
cltd
enter
adc
cli
add
jg
stos
fwait
lret
rol
iret
arpl
jge
jle
xchg
jne
bound
sbb
in
cmp
popa
icebp
rorb
cs
fwait
popa
cmpsb
sbb
xchg
inc
test
dec
cmp
mov
fs
pop
mov
fs
lcall
shrl
jl
adc
lret
xchg
push
pop
sti
mov
add
jg
jp
sbb
push
cmp
jmp
add
or
sar
mov
jne
adc
pop
or
fists
pop
cmpsl
aaa
movb
push
xchg
mov
xlat
lods
lds
rol
outsb
rcll
leave
or
cmc
aad
mov
sub
push
add
pop
hlt
push
rep
or
cwtl
loopne
pop
mov
sub
mov
push
pop
mov
inc
mov
pop
jb
xchg
lods
lods
xor
les
ss
jg
xchg
je
sbb
popa
outsb
mov
push
jmp
in
ret
add
jne
inc
dec
mov
int
or
mov
inc
stc
fucom
sbb
lret
or
adc
mul
and
in
lret
push
mov
xor
pop
adc
mov
gs
fisubs
mov
cmp
fisubs
leave
mov
testb
sub
repz
int3
push
push
pusha
jge
lahf
insb
adc
shll
dec
shrb
loopne
out
mov
push
adc
dec
mov
es
imulb
xchg
mov
dec
adc
dec
inc
pop
pop
rolb
shlb
ret
sub
fisttpl
pop
pusha
jg
and
or
or
icebp
lcall
data16
mov
ret
ret
dec
ljmp
mov
pop
sarl
pop
fisttpll
scas
mov
sub
xor
inc
mov
jg
xchg
push
mov
dec
cwtl
insl
rcl
es
and
mov
movsb
pop
sti
inc
xchg
push
sbb
sbb
jmp
ss
cmp
outsb
adc
enter
jmp
or
mov
das
inc
add
inc
sub
mov
mov
ret
aas
add
insb
lahf
repz
cmpsl
mov
pop
fcompl
mov
adc
loopne
pushf
mov
inc
adc
and
sbb
push
cmp
cmp
std
mov
fistpl
push
pop
rcr
rolb
test
jp
jmp
jle
or
push
sbb
pavgw
push
mov
mov
sub
in
out
jl,pn
popf
std
rol
add
testb
xchg
cmp
push
daa
popa
fisubl
lods
sbb
sbb
mov
in
or
mov
shl
test
cmp
daa
pop
std
loopne
xlat
fwait
or
cmp
cmp
sbb
in
pop
mov
sarb
out
cwtl
rorb
rol
push
and
and
jnp
addl
out
pop
loopne
add
xlat
dec
fsubl
icebp
ror
adcb
mov
pop
push
adc
sub
xor
sub
test
cmpb
pop
sbb
add
lahf
and
mov
lea
popf
push
cmp
pop
outsb
adc
out
xchg
call
out
and
add
xchg
dec
jae
sahf
sbb
addr16
sbb
mov
sbb
loopne
bnd
aaa
or
xchg
pop
xchg
addb
jp
mov
mov
push
shrb
sub
and
pop
mov
movsb
clc
lcall
pushf
ds
fxch
ret
jno
xchg
cmp
dec
lahf
jecxz
dec
mov
les
push
out
call
lahf
rcrl
mov
rcrb
and
jp
aas
add
pop
popf
pusha
call
vcvtsi2ssl
stc
xor
daa
mov
mov
push
push
jle
mov
jg
xor
cwtl
sbb
pop
push
xchg
jnp
lock
rorl
or
xchg
andl
pop
add
lret
outsl
lcall
test
test
and
test
sbb
test
xchg
mov
mov
pushf
popf
xchg
jge
xor
mov
in
sbb
test
outsl
adc
fadd
sub
sbb
ja
das
or
mov
adc
mov
outsb
jb
sbb
loopne
pop
xchg
pop
rcr
lods
mov
scas
adc
lahf
fdivl
mov
sub
ljmp
sbb
push
dec
inc
es
sbb
dec
mov
mov
and
push
push
cmp
jno
addr16
mov
fsubr
loop
pop
ss
push
dec
fxch
jae
pop
adc
inc
cmp
dec
mov
push
loope
lcall
dec
bound
aad
pop
jp
jge
fldenv
inc
xchg
scas
add
or
adc
jmp
aad
jg
mov
push
pop
dec
fldt
aaa
fwait
mov
int
ret
aas
or
loopne
loope
arpl
xchg
into
imul
xor
ljmp
sbb
je
ja
pusha
push
fbstp
or
cs
add
scas
pop
sbb
dec
movl
cs
adc
dec
flds
xor
subl
outsl
fcmovb
je
dec
mov
cmc
imul
cmc
mov
adc
add
jae
ja
push
push
add
adc
mov
lds
and
and
pop
das
orb
bnd
jbe
daa
test
and
pop
mov
in
push
test
js
mov
cmpsb
outsl
mov
jns
xor
xchg
test
mov
testb
dec
clc
add
imul
jmp
clc
loope
mov
test
mov
outsb
js
xor
pop
popa
rcrb
or
mov
loop
cmpsl
ja
mov
ret
movsb
repnz
mov
mov
pop
adc
notb
imul
shll
jno
mov
int
repz
adc
daa
jecxz
fwait
repnz
outsb
xchg
sti
cmp
jne
fcomps
lock
movsb
cmpsl
outsb
mov
pop
pop
mov
rcl
mov
dec
add
push
pop
gs
in
aas
ds
lahf
sub
pop
jnp
ret
inc
pop
inc
inc
inc
push
sbb
adc
push
inc
push
roll
add
mov
imulb
pop
inc
ja
mov
sub
popa
sbb
jae
js
jge
popf
fisttpl
into
xchg
pop
push
pop
pushf
inc
sub
mov
in
xor
mov
inc
in
imul
xorl
sahf
dec
lcall
xchg
xor
mov
and
fcomps
pop
test
test
jmp
dec
push
adc
in
imul
insb
pop
int3
pop
dec
or
lcall
xchg
lcall
cmpsl
ret
or
push
pop
punpckhdq
cltd
push
xchg
xchg
les
jns
xlat
les
lcall
push
push
jmp
outsl
mov
sahf
mov
add
and
xchg
sub
adc
sarl
mov
mov
in
arpl
jae
jecxz
scas
and
fiadds
pop
decb
pop
std
bound
repnz
dec
repz
sub
sub
jne
in
gs
dec
cmp
xlat
lea
xchg
shrb
in
outsb
add
jae
mov
adc
cmp
stos
and
roll
pop
sub
aam
nop
pop
es
nop
sbbb
sbb
xchg
dec
loope
mov
add
jge
pop
xchg
sub
push
xor
sbb
mov
psubq
mov
cmp
cmpsb
sti
sbb
imul
cmp
or
pusha
sub
cld
push
stos
stos
jmp
inc
jbe
insb
sbb
add
ljmp
mov
pop
and
xor
div
ret
sahf
inc
push
mov
lock
rcr
ds
out
push
dec
lret
mov
std
fwait
jecxz
adc
add
xchg
or
pop
mov
sub
dec
out
add
xor
rolb
cmc
sbb
xchg
ja
sbbl
cltd
cltd
inc
cmpsl
xor
cltd
insb
or
and
push
mov
fs
inc
sbb
xor
mov
xchg
lods
cmp
mov
sub
loop
imul
insl
pop
aad
sbb
aam
sbb
hlt
test
gs
and
arpl
hlt
repnz
addr16
addr16
test
or
je
push
fildll
lcall
insl
loope
in
sbb
prefetchwt1
movb
ret
repnz
pop
pop
lret
aaa
and
mov
mov
push
mov
not
repz
mov
fdivs
dec
stc
shrl
adc
in
loope
xchg
out
in
cs
decl
sub
insb
pop
mov
pop
leave
sbb
insb
sub
jno
std
xchg
push
inc
push
scas
push
imul
fcmovnb
mov
vpmacsdd
cmpsl
jae
sahf
and
xor
mov
and
mov
mov
inc
repz
subl
leave
inc
dec
mov
lds
add
add
gs
sbb
dec
add
sub
orb
jno
mov
lods
std
jp
pop
scas
je
pop
mov
add
push
and
xchg
lods
adc
cmc
out
sub
mov
test
sub
mov
push
pop
movsb
in
mov
or
pop
out
jns
lret
cmp
xchg
mov
and
cmc
add
jmp
in
jge
fildl
das
jecxz
cmp
dec
mov
andl
xor
dec
xchg
lret
cld
push
fcompl
out
dec
shrl
xchg
ret
jae
out
lods
or
mov
and
mov
loop
mov
aas
mov
out
jne
cmc
pop
jne
imul
jns
lods
dec
in
jb
mov
sti
push
mov
add
fimull
dec
xchg
pop
div
dec
mov
mov
dec
or
stos
push
mov
or
cmp
push
and
ljmp
stc
fmulp
push
sub
pop
pushf
shlb
cmp
xchg
xchg
shll
popa
sub
into
xor
mov
mov
mov
adc
mov
mov
inc
xchg
sti
push
add
mov
mov
fldl
mov
inc
mov
jecxz
cltd
dec
add
in
xor
popa
sbb
add
jp
lds
mov
jbe
out
rclb
xor
rcr
push
outsl
xor
dec
adc
adc
gs
repnz
imul
mov
xchg
add
ljmp
shlb
stos
sub
push
dec
push
pop
jns
add
les
inc
lahf
pop
push
xor
out
mov
enter
popf
pusha
xchg
push
adc
dec
and
pop
add
inc
pushf
test
jns
cli
stc
mov
dec
insl
mov
inc
pop
and
imul
sub
clc
mov
jmp
addr16
adc
ret
pop
sbb
cltd
out
lods
xlat
sub
mov
enter
and
dec
int3
inc
scas
xchg
or
sbb
cmc
jb
cmp
sbb
mov
push
cmpsb
nop
pop
addr16
stos
dec
out
jl
loopne
mov
cmp
cmp
sub
bound
outsb
mov
mov
aas
sbbl
adcl
inc
adc
pop
or
jp
rorl
data16
das
inc
xor
mov
or
int
cmp
add
mov
cmp
xor
ret
lds
movsl
xor
sbb
out
cmp
xor
adc
sub
les
push
test
dec
js
sarb
addr16
sbb
in
pop
test
daa
add
loop
sub
mov
sub
enter
cmpsb
inc
pop
cmc
bound
and
pop
loopne
aam
nop
add
mov
je
mov
cmpsb
mov
mov
xchg
mov
js
pop
leave
pop
out
fwait
loopne
add
dec
filds
js
call
or
dec
cld
sub
icebp
and
pusha
add
sbb
out
fisubrl
fidivrs
cmpsl
clc
nop
cmpsb
pop
daa
sbbl
insl
repz
sub
adc
cmpb
fisubrs
fs
xchg
cmp
pusha
cmp
fwait
inc
fs
mov
es
cs
int3
out
arpl
mov
out
mov
lahf
stos
aam
fcmovnbe
cmpl
push
mov
mov
movsl
dec
insb
adcl
js
repz
popf
xor
and
hlt
int3
push
iret
mov
jecxz
cli
shrl
dec
inc
mov
lret
sti
sti
test
fwait
xor
popa
cmp
xor
and
les
sarb
dec
scas
adc
insl
or
das
scas
dec
out
adcb
xorl
fmulp
test
rorb
jecxz
cmpsb
scas
movsl
clc
mov
imulb
xchg
adcl
sbb
mov
mov
mov
inc
mov
in
lret
arpl
sbb
ret
int3
jb
ljmp
add
jnp
shll
jnp
adc
out
lret
ror
push
mov
cmp
mov
push
pushf
iret
jb
cwtl
jbe
fidivrs
das
or
sbb
add
mov
inc
subl
jo
jle
pop
popa
arpl
xchg
scas
jae
push
lahf
add
cmpsl
inc
push
out
sub
pop
dec
neg
out
lods
lock
jle
xor
cltd
xchg
pop
jmp
cmp
out
pushf
cmpsl
push
push
push
dec
and
mov
jnp
les
mov
fcomp
test
add
fs
jno
sti
mov
pop
test
aad
inc
testl
pusha
mov
pop
loopne
push
and
sbb
mov
cmp
jge
add
fdiv
push
cmpsb
push
jg
sub
std
insb
cli
adc
fisttpl
dec
add
push
push
inc
fsubrs
pop
or
repnz
xor
pushf
mov
sbb
mov
ficompl
lods
insl
xchg
adc
mov
cltd
add
mov
jbe
popa
add
movsb
inc
insb
popf
mov
addb
sbb
test
dec
sbb
mov
jnp
mov
push
mov
mov
sub
inc
jl
test
cmp
push
fistpl
and
push
sbb
cltd
and
cmp
pop
jno
cmp
dec
sbb
fcmovnu
jne
fmull
cmp
and
cmp
add
daa
cmc
add
fsubrs
aaa
adc
into
sar
sbb
scas
ja
lret
sub
iret
movsl
inc
in
jmp
ret
stc
adc
jmp
pusha
adc
jl
inc
dec
sub
hlt
cs
pop
aad
mov
add
cmp
adc
xchg
fidivrl
adc
dec
mov
adc
push
mov
mov
daa
xor
sub
lret
sarl
sub
inc
lods
mov
pop
fiadds
jns
sarl
xchg
ljmp
fwait
out
cmpsb
movmskps
ret
cld
adc
xor
push
xor
out
adc
frstpm(287
mov
cmpl
pop
xchg
popa
xor
incb
push
pop
adc
lahf
daa
test
out
test
jbe
jmp
loop
popa
sub
mov
movsb
dec
outsl
mov
out
insl
scas
in
sub
mov
cmpsb
hlt
lds
ljmp
popl
popl
inc
bound
xchg
push
loopne
jle
sbb
ficompl
data16
mov
mov
mov
mov
xor
xchg
divb
mov
xchg
test
xchg
out
adc
pop
push
mov
mov
out
cmpsl
mov
jns
inc
xchg
movsl
push
push
rorb
rcrl
roll
inc
cmpsl
and
ret
and
push
mov
mov
test
jne
push
cwtl
lcall
xor
add
sbb
mov
sbb
seta
aaa
cmpsl
out
js
dec
and
sbb
push
adc
inc
mov
jmp
sub
das
imul
xchg
jne
mov
movsb
lds
xor
adc
int
outsl
int
cmpsb
jb
mov
fdivs
loopne
dec
inc
mov
repz
jp
inc
sub
cmp
out
fcomps
into
outsl
dec
dec
popa
xlat
sbb
dec
test
adc
das
les
aam
mov
inc
sbbb
out
and
push
call
cli
jns
das
dec
repnz
inc
popf
cwtl
movsl
fs
xor
lods
sub
push
ret
adc
mov
dec
push
jmp
or
pop
mov
mov
mov
cmc
movsb
incb
push
das
inc
sub
lds
inc
pandn
out
and
sub
lea
sub
and
mov
outsb
push
xlat
jae
aam
jns
add
mov
sbb
clc
dec
and
pop
mov
cmc
test
arpl
jl
or
inc
repz
inc
adc
or
stos
or
adc
xor
test
mov
pop
mov
std
xor
daa
ljmp
jo
lods
fsubs
push
fimuls
enter
in
add
and
ret
stc
into
mov
arpl
dec
addb
dec
loopne
pop
frstor
mov
orl
mov
add
sbb
loop
jle
adc
jne
xor
mov
loopne
fiaddl
andl
aam
aam
pop
pop
jecxz
jns
mov
push
push
out
sahf
inc
in
scas
xor
push
xor
lods
orb
push
push
pop
repz
in
outsl
cmp
xlat
mov
jnp
stc
add
mov
in
int
xchg
mov
es
xchg
or
jecxz
adc
mov
test
loop
dec
mov
lcall
mov
and
xor
sti
ss
scas
in
popa
lcall
add
pop
jmp
push
jl
adc
ds
pop
imul
shrl
jns
xchg
jbe
popa
aad
mov
lds
test
inc
jae
in
pop
pop
je
addr16
push
or
pop
mov
mov
cli
xorl
filds
sbb
or
and
mov
dec
nop
push
push
push
test
cld
mov
sub
call
mov
and
cwtl
cld
out
sahf
mov
mov
xor
leave
jp
test
add
and
lea
addb
mov
in
pop
sbb
stc
fcoml
or
stos
dec
mov
mov
jmp
xchg
nop
inc
pop
mov
xchg
outsb
mov
roll
inc
or
int
sbbl
or
test
inc
movsl
imul
into
and
ja
les
pop
lods
es
push
lret
sub
push
std
or
cmpsl
cmpsl
sbb
pop
sbb
faddl
xchg
movsb
and
xor
cmp
imul
test
cmpxchg
test
ljmp
or
or
sbb
repnz
clc
push
mov
push
sub
call
xchg
inc
cmp
pusha
and
test
lahf
mov
hlt
vminss
lret
push
idivb
xlat
out
into
dec
pop
cld
imul
adc
fs
lea
xor
xor
sbb
stos
out
stos
hlt
mov
xlat
adc
fisubrs
call
adc
and
outsb
sbb
repnz
lods
jnp
add
es
ret
mov
push
mov
jg
in
scas
pop
pop
jo
gs
stos
outsb
fidivs
stc
add
dec
cmc
cmp
mov
pop
xor
aam
or
pop
dec
subl
pop
and
fs
repz
xchg
mov
sub
inc
xchg
mov
mov
jbe
xadd
insb
movsb
mov
int
loope
scas
ret
mov
mov
push
fxch
and
stos
xor
nop
xor
popa
mov
adc
sahf
jecxz
das
aad
sbb
push
icebp
int3
aas
push
mov
xchg
mov
pushf
mov
sbb
pop
mov
cld
fld
fisubrl
cmp
cmpsl
xor
push
jnp
mov
mov
fsubrl
mov
ret
push
rol
rolb
cmp
mov
hlt
into
mov
lods
mov
aam
xchg
xlat
js
in
pushl
mov
cmp
mov
lsl
mov
mov
addr16
into
jmp
stos
cmc
mov
xchg
pop
jne
add
fmull
xchg
int3
les
inc
sub
sbb
jno
cmpsb
int3
test
push
aas
dec
push
push
mov
sbb
stos
xorb
sbb
jnp
aad
mov
jns
push
xchg
inc
mov
cmc
mov
and
pushf
jmp
xchg
sbb
sti
sbb
jae
dec
xor
fnsave
mov
test
xor
adc
push
adcb
cmp
xchg
stc
leave
xchg
repnz
pop
aad
js
js
dec
lds
push
stos
lods
loopne
jl
clc
jns
adc
xor
test
addb
jne
sbb
js
adc
xchg
pop
addr16
mov
xchg
or
mov
xchg
getsec
adc
mov
les
push
std
mov
jnp
pop
mov
insb
fidivl
leave
lret
pop
sbb
shl
rcl
xchg
clc
cmp
xchg
or
lret
and
cmp
lret
loop
pop
jg
jae
pop
push
rcll
push
push
and
lahf
dec
xor
dec
incb
repnz
xor
lds
cwtl
pop
scas
into
xor
sub
jno
outsl
cmp
sub
imul
sbb
mov
test
xchg
adc
add
fsubrl
sti
sti
or
pushf
outsb
rcr
xchg
loop
jecxz
sarl
sub
popa
add
mov
jecxz
xchg
fistps
std
pop
mov
jns
sahf
add
adc
push
in
ret
sbb
pop
xchg
das
pop
jno
sbb
or
mov
test
push
loop
aaa
adc
stos
std
xor
push
jnp
arpl
fldt
out
cmp
pop
fs
inc
nop
test
cld
daa
enter
lods
pop
pop
out
inc
push
inc
in
leave
cwtl
pop
addr16
xchg
or
imul
pop
cmp
test
repz
mov
jns
xchg
repnz
push
inc
not
mov
outsb
mov
hlt
cmpsl
add
insl
cmpsl
fidivrs
aas
es
inc
lods
imul
mov
iret
repz
out
mov
mov
lahf
je
lret
xchg
ljmp
in
mov
dec
arpl
pop
inc
je
push
dec
rcll
mov
jno
inc
fnstsw
pushf
mov
xchg
and
mov
add
inc
pop
add
cli
push
mov
fcompl
jnp
mov
cmp
dec
jg
loopne
pop
fldl
push
lret
pop
loop
or
xchg
inc
pop
jae
icebp
mov
xor
inc
xchg
xor
mov
sub
xchg
in
sub
addb
inc
outsb
xchg
shlb
adcb
jl
je
mov
icebp
pop
add
test
fcoml
rcrl
mov
adc
mov
or
xchg
mov
inc
mov
js
andb
sub
js
push
mov
sbb
cmp
sbb
and
popa
jno
leave
das
negb
lret
mov
iret
mov
rorb
push
pop
inc
push
shll
push
pop
or
int
mov
cmpsl
test
sbb
adc
dec
leave
and
cmp
test
imul
xchg
hlt
sti
test
inc
popa
loop
notb
and
insb
lock
ljmp
xchg
fsts
adcb
push
mov
mov
push
test
pop
movsl
and
push
jmp
xor
divl
ja
xchg
mov
mov
dec
jmp
inc
jbe
testl
mov
fistl
movsb
mov
adc
testl
shrl
scas
mov
out
in
inc
sbb
clc
cs
lret
mov
dec
pushf
insl
jno
ja
push
pop
mov
and
lock
push
les
sub
adc
ljmp
jmp
movsl
pop
rcll
sahf
adc
push
or
and
adc
gs
sti
aad
pop
shrl
inc
test
lds
sub
aas
and
jno
and
mov
ret
test
sub
push
adc
jb
jl
jno
outsl
or
pop
xchg
subl
sbb
pop
push
not
inc
adc
jnp
pop
xor
mov
cs
sub
sbbb
ret
cli
add
cmp
notl
fucomp
icebp
push
xor
mov
pop
shll
jmp
inc
add
jge
cmpsl
pop
jecxz
mov
dec
mov
das
ret
arpl
dec
bound
mov
rclb
in
and
sbb
scas
cmpsl
mov
pop
jb
mov
cli
je
xchg
xor
xchg
lcall
jne
scas
cmp
inc
ret
pop
lahf
loope
sub
arpl
add
jecxz
add
push
fists
data16
jne
and
cld
or
sub
pop
repz
lock
mov
xor
leave
mov
jge
mov
ljmp
pop
xchg
xor
adc
imul
pop
pop
scas
test
dec
jg
sub
leave
inc
xor
mov
in
ljmp
je
xorl
inc
into
pop
insb
bound
jge
lods
adc
nop
je
or
lret
dec
add
jge
pop
xchg
push
mov
sbb
arpl
test
insb
cmp
pop
push
xchg
lcall
int3
ja
push
mov
ret
mov
pop
mov
leave
xchg
sarb
stos
sidtl
pop
mov
scas
add
mov
outsb
pushf
imul
push
pop
dec
and
push
bound
xor
fstpl
cmp
sub
adc
mov
inc
cli
adc
mov
loope
repz
lods
adc
dec
adc
cmp
sbb
rclb
mov
xorl
sub
pop
loopne
mov
loope
push
push
je
and
mov
inc
push
jge
pop
aam
out
addr16
jg
inc
ds
sub
out
adc
sub
pop
subb
insb
mov
mov
sahf
inc
inc
mov
fmul
mov
cmp
sub
in
popa
mov
rcr
fwait
push
push
and
rol
pop
incb
stos
pop
int3
adc
jae
dec
testb
pop
inc
stos
cwtl
mov
mov
lcall
adc
insb
or
mov
repz
push
lock
mov
arpl
adc
test
mov
jb
xchg
xor
sti
jne
jl
outsl
mov
cmp
jno
inc
popf
mov
addr16
cmp
inc
mov
push
call
jl
aas
imul
jmp
je
jo
sbb
std
sbbb
out
ljmp
xor
into
out
inc
mov
ret
or
stos
sub
stos
lods
mov
pop
sbb
roll
test
mov
mov
mov
mov
mov
popa
lret
dec
pop
shr
cli
mov
mulb
or
push
repnz
lea
push
aam
push
sarl
mov
mov
fwait
or
mov
out
icebp
pop
fistps
pop
rorb
movl
add
or
je
loope
mov
or
lahf
add
mov
hlt
lods
iret
jmp
test
inc
cs
sub
or
pop
and
loope
ds
icebp
cmc
call
cmc
add
int
rorb
push
push
adc
jg
sbb
mov
add
pop
loop
notl
pusha
sti
mov
cmp
xor
imul
in
pop
xor
push
test
mov
dec
outsl
mov
stos
loop
mov
pusha
mov
jmp
popf
or
insl
mov
jns
repz
enter
das
cmp
repz
rolb
cs
in
cld
inc
jo
loope
sbb
daa
jne
es
ja
shll
or
xlat
and
fwait
rcrb
jae
add
cld
cmp
mov
dec
pop
mov
xorb
aam
cmpl
adc
repnz
xlat
xor
inc
aas
enter
gs
xchg
mov
shll
into
pop
jmp
cmpl
or
das
pop
ljmp
cltd
mov
mov
gs
xchg
xchg
sub
jno
out
fmull
xor
mov
out
xorl
gs
jmp
cmp
clc
inc
sbb
push
ljmp
mov
das
ret
inc
fidivrs
test
int3
xchg
jl
js
lds
sub
mov
push
lahf
inc
int3
frstor
xchg
jae
mov
int
pop
sbb
in
test
push
xor
into
mov
sahf
and
mov
or
ror
pop
mov
loop
push
mov
jg
pop
repnz
mov
dec
mov
fstl
mov
jle
jp
repz
lds
cmp
repnz
mov
rcrb
push
or
movsl
loope
push
inc
fnstenv
dec
or
mov
mov
es
cmp
mov
into
xor
push
cmpsb
int3
mov
mov
dec
ljmp
mov
xor
mov
add
cli
jecxz
inc
lock
stos
lock
pop
mov
ljmp
push
lods
insb
nop
js
jle
xchg
idivl
popa
imul
int3
sbb
inc
push
js
popa
jg
aad
adc
imul
mov
lock
call
enter
rcl
aad
popl
mov
xchg
dec
jnp
out
sub
sbb
mov
jmp
ljmp
inc
mov
sbb
sub
push
cmp
sub
jb
stos
cmp
cld
cmpsl
adc
xchg
lcall
xor
lods
push
sub
or
xlat
test
les
jno
sahf
sbb
aad
leave
sub
pop
jecxz
rcrb
xor
sub
iret
fwait
shrl
jecxz
mov
jno
aad
stc
sbb
mov
pop
dec
jae
ret
xchg
aaa
fwait
xchg
jmp
push
js
add
mov
std
in
pop
inc
fnsave
and
nop
sbb
in
sub
cmp
xchg
sub
mov
orb
push
xor
mov
and
ja
rcll
paddb
into
xor
pushf
les
dec
filds
mov
xchg
dec
lret
sub
mov
xor
call
mov
int
and
ds
cmp
jnp
insb
jne
add
in
mov
pop
jno
aas
in
or
cs
mov
jl
in
add
push
xchg
lds
push
mov
adc
sbb
cmpb
jp
shll
adc
outsl
repnz
mov
fstpt
jmp
fwait
xor
negb
mov
je
dec
dec
jp
jnp
fs
push
xchg
repz
xchg
and
rcl
testb
or
sahf
shl
in
dec
jae
repnz
stos
xchg
cmp
sti
inc
test
jecxz
push
or
push
pop
sbb
in
jmp
inc
cmp
pop
cmpsb
or
mov
or
jle
xor
jbe
jmp
cmpl
dec
mov
scas
pop
call
mov
cs
fidivs
sbb
inc
mov
inc
jnp
in
repnz
les
inc
in
aas
xor
ss
pop
outsb
lahf
pusha
je
and
cmpsb
lds
hlt
fdivrs
jle
push
lods
jge
mov
lods
mov
cld
pop
cmp
in
std
sub
mov
jns
inc
jmp
orb
int3
add
sbb
ds
mov
and
lret
es
dec
flds
js
sub
into
imul
sub
aam
xchg
pop
pop
adc
cmp
and
pop
xchg
pop
int3
pop
test
jecxz
aas
ret
imul
lds
pop
insl
push
loop
xlat
mov
xchg
std
movsb
or
mov
xor
mov
rep
outsb
fldt
fcmove
pusha
scas
pop
add
push
inc
popf
repz
test
scas
inc
fsubp
jns
cli
hlt
les
mov
inc
lds
stc
sahf
rcll
sti
inc
movb
push
ss
mov
loop
fsubrs
out
mov
push
inc
lea
mov
jge
sub
mov
lods
push
sbb
lods
adc
or
mov
add
test
andb
adc
and
dec
inc
or
xchg
mov
mov
bound
cli
lods
pop
xor
xor
ja
inc
lahf
and
clc
push
mov
leave
leave
dec
pop
mov
xor
popf
lret
imul
add
mov
add
pop
dec
pop
addr16
js
cmp
cmpsb
sahf
or
mov
scas
mov
fnstenv
adc
push
mov
repz
ja
aas
add
int3
push
jno
cmc
jbe
addl
in
and
push
mov
rcr
add
xor
cmp
mov
sbb
les
inc
mov
mov
icebp
popa
xchg
add
push
adc
sub
cmp
inc
mov
ret
mov
push
aaa
push
xor
leave
nop
sbb
popf
lods
and
mov
sub
sbb
rcll
xor
pop
adc
mov
pop
loopne
bound
push
xchg
and
fnstenv
add
test
fs
xlat
sub
adc
jp
cmp
sahf
dec
test
lods
xor
out
repnz
and
cmp
xorl
and
sbb
pop
mov
jne
mov
scas
jl
jecxz
imul
leave
pop
dec
int3
lahf
cltd
rolb
fistl
movsb
mov
and
aaa
xor
cmp
ljmp
icebp
dec
aaa
call
into
movsl
sub
fdivr
aaa
or
jmp
adc
or
mov
lods
sti
lret
or
mov
push
push
stc
jnp
mov
sub
rclb
in
dec
int
ljmp
cmc
xchg
sub
ret
pusha
jnp
xor
sbbb
loope
mov
push
aaa
sbb
rcr
xchg
xor
push
xchg
fsubs
insl
pop
subb
mov
fmul
pop
popa
enter
push
and
dec
adc
in
mov
cmp
and
adc
pop
pop
xor
es
ret
test
cli
jae
xchg
test
aas
enter
test
rcrl
outsl
mov
dec
nop
ret
xchg
inc
sbb
lret
xchg
sahf
jno
adc
sbb
lea
dec
xor
inc
cmp
arpl
xor
js
or
or
mov
enter
jns
pop
orb
in
and
inc
xor
inc
popl
adc
sub
movsb
and
sub
testl
and
inc
adc
xchg
sbb
push
inc
jecxz
mov
push
sub
clc
ds
mov
in
push
or
testl
das
scas
hlt
dec
inc
push
lcall
repnz
gs
stos
cmc
aad
test
jp
inc
dec
out
mov
sbb
iret
and
sub
dec
mov
adc
notl
nop
test
in
pop
scas
xchg
push
push
rolb
pop
aaa
lock
lods
popa
dec
stos
cmp
xor
push
or
lds
in
leave
fisttpl
call
int
push
repnz
loope
add
and
adc
dec
fnsave
fnsave
in
popa
xchg
xchg
xor
xor
and
adc
je
roll
inc
outsb
aaa
add
popa
fstp
push
fwait
ljmp
cmp
dec
add
jle
cltd
ss
mov
daa
mov
cmpl
sub
in
test
repnz
push
rorl
xor
stc
cli
pop
or
lret
imul
das
imul
testb
clc
push
loop
mov
inc
and
dec
aad
xchg
sbb
mov
pop
mov
inc
test
into
xchg
les
inc
test
in
les
mov
sub
clc
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
int
fs
cld
popa
bound
bound
cld
push
cli
sub
mov
xchg
cmp
or
jae
push
ja
mov
dec
notl
aad
cltd
pop
repnz
shrb
jge
jns
push
mov
mov
sbb
ds
and
pop
dec
insb
jo
mov
lcall
and
jae
je
nop
jo
scas
or
xchg
frstor
lcall
aas
pop
xor
pop
lahf
sbb
pusha
mov
stos
or
clc
push
filds
icebp
mov
test
stos
scas
std
stos
std
fidivrl
cs
and
jmp
push
xlat
adc
dec
cmp
sub
jno
popa
fwait
sbb
cmp
test
mov
cli
cs
gs
data16
ljmp
lcall
adc
std
push
lret
inc
int
fdivr
xchg
mov
adc
jg
aam
daa
push
or
push
mov
mov
xor
xchg
jo
clc
fs
pop
enter
sbb
xor
fdivrl
adc
movsl
jge
shrl
js
cld
cmp
and
dec
mov
shr
mov
call
aam
stc
mov
mov
sbb
hlt
xor
mov
insl
or
icebp
sahf
xchg
cli
dec
adc
cltd
out
pushl
loopne
jae
inc
in
push
movsb
aam
push
xlat
jg
fldt
xchg
and
pop
jecxz
fldl
jo
into
rclb
test
rclb
neg
xor
jb
jp
fcoml
mov
jb
lcall
mov
inc
fcmovb
push
aas
dec
cmc
ja
fdivl
lahf
pop
or
jns
hlt
jge
jnp
pop
test
test
cvtdq2ps
pop
and
cwtl
pop
mov
lds
ljmp
sbb
aas
adc
pop
inc
mov
lods
movsl
xchg
adc
lret
and
inc
dec
xor
icebp
push
out
push
dec
int
dec
notl
sub
js
loopne
divb
inc
test
outsb
mov
stc
loopne
std
leave
das
xor
pop
pop
add
ret
xor
and
pushf
pop
aaa
push
mov
insl
dec
or
ja
flds
inc
mov
push
cmp
mov
pusha
ret
cmp
shlb
es
mov
xchg
lds
fwait
mov
mov
push
stos
inc
jmp
movsl
sti
sbbl
mov
or
mov
mov
mov
mov
dec
stc
fmuls
out
popf
icebp
xlat
cs
inc
jbe
and
jp
and
add
mov
add
inc
loopne
dec
adc
psraw
movsb
cmpsb
add
negb
aaa
add
push
sub
sarl
lret
add
stos
jae
movups
sahf
data16
sub
push
sbb
aas
aaa
ror
pop
in
ljmp
sub
dec
je
mov
and
pop
xchg
imul
shll
dec
mov
inc
push
iret
push
pop
ds
cs
sbb
jle
add
jecxz
mov
mov
push
and
xchg
sub
jle
push
add
imul
cwtl
dec
stc
mov
xor
adc
gs
jmp
sbb
mov
cwtl
imul
mov
push
jmp
or
jecxz
mov
loop
mov
testl
add
jle
stos
mov
pop
loop
notb
cs
fcom
push
lock
mov
xchg
mov
inc
fs
aad
fs
mov
jecxz
mov
lods
cmp
mov
adc
and
shll
dec
js
jne
fs
mov
push
aas
cli
sbb
into
push
push
ror
cmp
cmp
xchg
jl
mov
clc
inc
and
push
mov
mov
cmp
lods
mov
add
pop
inc
pop
je
mov
sub
hlt
out
sbb
push
add
dec
cld
fcompl
inc
cmpsb
mov
sbb
push
jne
fldcw
sub
sub
xor
das
ja
in
ja
xchg
cld
rclb
lret
mov
sbb
xchg
repnz
add
cs
add
loopne
add
dec
jp
imull
mov
xor
jge
scas
mov
sub
popf
imul
dec
imul
mov
cmpsl
enter
xor
mov
xchg
adc
shlb
inc
sarl
paddusw
cmpsb
clc
push
repz
or
mov
sahf
dec
int3
out
lea
jle
pop
xchg
fwait
sub
cmpsb
sbb
sbb
xor
aad
inc
xor
jns
movsl
cld
out
mov
jnp
pop
sub
leave
in
out
outsb
inc
dec
mov
leave
or
test
jno
sbb
jb
mov
in
and
stos
or
inc
test
cmp
ss
mov
mov
movsb
dec
or
push
ret
cmp
push
ds
or
ja
mov
movsb
push
mov
lock
subl
insl
push
adc
ljmp
dec
sbb
mov
pop
mov
mov
mov
int
push
fisttpl
lods
sub
dec
lock
outsb
push
mov
mov
shlb
scas
mov
pop
insl
push
mov
rcrl
and
fs
in
jecxz
mov
aad
popf
inc
xchg
xchg
and
repz
dec
in
and
lock
out
mov
mov
stos
mov
repz
inc
popa
fwait
in
lcall
bound
sub
and
clc
out
test
mov
out
xor
ret
stos
jg
jge
hlt
roll
repnz
or
scas
loopne
dec
push
mov
sbb
arpl
dec
je
dec
mov
insl
outsl
mov
aas
mov
lret
rcrl
push
stos
dec
popf
adc
xor
xchg
push
popa
popa
outsb
popf
sbb
jns
divl
aad
lcall
mov
jg
pop
or
jmp
push
mov
std
mov
faddl
dec
pop
lahf
out
outsb
push
pop
pop
mov
xor
xchg
or
or
sub
shrb
lcall
stos
jnp
sahf
inc
ret
adc
or
std
adc
out
incb
jo
lods
test
je
shlb
mov
cmpsb
xchg
mov
call
pop
cmp
push
mov
mov
cmp
inc
and
push
stc
cmp
adc
xchg
push
out
imull
xor
jns
lahf
sbb
adc
mov
aaa
movsl
fdivl
fwait
mov
inc
ljmp
fmuls
call
adc
enter
enter
leave
dec
aad
mov
push
fdivrp
sbb
inc
jge
push
insl
xor
sbb
fwait
sub
cmp
inc
mov
ja
fistl
mov
ja
jnp
jb
push
in
fidivs
repnz
scas
dec
fimuls
icebp
fstpt
inc
mov
push
pop
mov
lcall
pop
inc
lret
xacquire
pop
das
mov
outsl
mov
outsl
stc
mov
popa
add
iret
jno
sub
jno
pop
in
cmp
imul
int
inc
push
sbb
scas
jl
dec
cmp
fcoms
test
sbb
adc
cmp
ja
daa
mov
jo
push
outsb
ds
push
push
lods
mov
jns
mov
mov
mov
scas
stc
roll
push
fimull
das
mov
mov
mov
lds
ret
sbb
mov
call
jecxz
push
jmp
and
adc
pop
mov
jbe
or
in
enter
or
in
bnd
repnz
jg
push
jno
push
push
into
test
push
and
mov
icebp
loope
inc
or
push
sub
push
daa
adc
nop
jp
loope
data16
roll
cmpsl
pop
pop
shrl
stc
addr16
adc
push
setnp
mov
loopne
jg
outsl
out
mov
sbb
shll
jno
test
mov
ljmp
pop
add
push
and
cs
cmp
mov
xchg
mov
adc
insb
mov
movsl
andl
push
icebp
push
sbb
inc
fidivl
mov
and
xchg
cmp
loopne
mov
mov
iret
dec
aad
xor
daa
movsb
in
mov
pop
leave
sub
and
sbb
in
mov
loope
xchg
mov
adc
mov
ret
bound
loop
lcall
push
daa
jbe
pushf
aaa
cmpsl
jo
dec
push
inc
loop
subb
dec
inc
pop
out
mov
push
mov
test
cli
cmpsl
inc
push
sub
into
or
mov
pop
leave
add
mov
fidivrl
popf
repnz
lods
adc
jge
les
mov
cmp
cmpb
sub
pop
inc
and
les
inc
xor
pusha
xchg
push
sbbl
xchg
ljmp
pop
inc
add
sbb
jecxz
and
cmp
fmuls
and
mov
test
ds
in
imul
xchg
mov
imul
sub
xchg
aas
pop
jb
or
mov
lret
mov
lods
loopne
in
push
fidivrl
mov
movsb
xchg
flds
jl
inc
and
xchg
push
mov
jg
and
jecxz
leave
push
repnz
xchg
add
popf
sbbb
or
mov
insb
push
lods
push
sti
mov
mov
movups
not
mov
mov
clc
scas
jle
push
xchg
icebp
dec
adc
pop
push
pusha
cmp
xor
rol
les
xchg
xor
test
leave
cmpsl
sub
sub
out
mov
dec
inc
adc
psubq
dec
mov
xchg
cs
rcl
inc
je
mov
inc
dec
mov
mov
mov
jl
cmc
ja
popf
test
jnp
enter
subb
dec
bnd
fwait
jmp
bound
stc
pop
out
sub
roll
inc
push
dec
push
add
stos
stos
movsl
jle
add
lods
dec
fcmove
xor
cmpsb
push
in
jns
test
int
std
jl
sub
xor
add
inc
popa
in
lret
pop
dec
popf
lahf
jmp
fsubr
loope
xor
shrl
fs
or
mov
fadds
push
fwait
packssdw
adc
aam
fldcw
dec
pop
dec
xchg
mov
scas
pop
pop
les
int
mov
test
fstpl
leave
inc
dec
lock
sub
mov
fwait
xchg
je
jnp
pop
popf
push
divl
inc
cmpsl
movsl
adc
loop
mov
and
fmuls
aad
in
clc
faddl
ss
jle
ficompl
imul
cmp
andb
cli
jp
sbb
sahf
jg
cmp
ja
xor
fcmovnbe
rcl
add
xchg
arpl
mov
pop
push
pop
addr16
or
cmpsb
mov
xor
or
adc
lds
mov
lods
roll
int
xor
cmpsb
or
das
sti
xchg
mov
mov
inc
enter
add
mov
lcall
pop
pop
and
xorl
xchg
cld
out
adc
xchg
adc
xchg
push
popa
out
jb
je
push
cmp
mov
jbe
pop
std
inc
orb
fstpl
push
sub
clc
jo
cmp
xor
outsb
mov
xchg
mov
mov
insl
cwtl
mov
clc
rolb
lods
movaps
sub
adc
xchg
lods
mov
push
mov
into
daa
lea
repz
dec
xchg
push
adc
or
xchg
mov
jmp
inc
add
push
inc
jbe
ficoms
rcrl
aas
pop
imul
je
dec
lahf
pop
les
sbb
jbe
push
cli
jne
or
int3
mov
inc
fiadds
or
in
test
loope
insb
inc
stc
or
aam
pop
and
pop
sar
add
mov
adc
insb
adc
lret
insl
push
lods
stos
lcall
pop
add
repnz
and
pusha
lods
testb
pop
or
pop
pop
xlat
cmpsl
addr16
ljmp
jnp
les
sub
stc
and
mov
fs
add
mov
cltd
jae
leave
out
gs
xchg
cwtl
jmp
xor
adc
fs
sbb
sbb
lods
or
leave
push
cltd
and
fisubs
adcb
ror
push
push
mov
add
pop
push
enter
lret
add
cwtl
cmc
and
sbb
out
inc
jo
pop
jb
push
and
and
sbb
fnstenv
or
aad
leave
cmp
cmp
das
mov
push
inc
or
jns
test
mov
mov
shll
test
je
jge
jmp
test
iret
rcl
mov
mov
adc
movsb
es
cltd
hlt
pop
nop
aas
sbb
inc
outsl
andl
jnp
push
sub
jle
inc
fsubl
outsb
stos
nop
dec
sbbl
dec
and
push
sub
pop
jge
cmp
pushl
shll
jle
fwait
in
lods
cmp
fmull
pop
add
mov
gs
sbb
adcb
incb
cmp
jbe
mov
cmp
adc
neg
rclb
movsl
inc
cmc
mov
gs
pop
loopne
and
jge
cli
mov
scas
fiaddl
outsl
ja
pop
cmpsb
je
adc
imul
push
add
lret
mov
add
pop
mov
or
das
lods
push
adc
xchg
inc
lds
ja
int3
inc
sub
movhps
gs
jg
mov
insb
cld
mov
mov
das
push
gs
jne
cmp
rcrl
pop
cmc
movsl
scas
lock
add
xor
out
push
pop
inc
jns
int3
xlat
jle
imul
adc
sub
scas
xor
adc
push
jecxz
jge
out
adc
jg
out
leave
dec
cmpsl
mov
int
sbb
sub
lock
and
and
lahf
outsb
outsb
fnstsw
fnsave
add
and
inc
or
adc
mov
mov
cmpsl
iret
fistps
sbbb
mov
lcall
mov
fildll
cmpsb
fwait
and
jo
push
or
fscale
repnz
lods
mov
xchg
cli
cltd
out
cltd
xlat
insb
stc
cltd
cmp
adc
sub
lods
mov
int3
sbb
lret
jle
call
clc
loopne
pusha
test
jecxz
jo
das
mov
lds
ja
add
xor
lcall
scas
jmp
xchg
enter
adc
xor
mov
loope
mov
es
mov
ja
dec
std
adc
call
mov
jae
inc
nop
cmpsb
pop
xlat
sub
mov
jmp
pop
ror
push
jb
push
rclb
sbb
out
inc
dec
mov
jnp
add
sbb
sbb
fdivs
mov
pop
movsl
pop
sti
push
arpl
adc
popa
sbb
adc
aad
push
cmp
into
js
xchg
dec
push
jle
add
mov
loop
xchg
cltd
addr16
shlb
and
repnz
imul
and
xchg
dec
test
les
out
jle
cmp
inc
lods
cltd
enter
loop
pop
pusha
enter
scas
pop
in
mov
stos
push
es
pop
sahf
sbb
ficoms
inc
mov
xchg
jo
adc
cli
adc
add
push
jo
ret
pop
inc
inc
repnz
sub
mov
out
fldl
into
and
mov
test
push
mov
imul
lds
adc
push
mov
adc
push
cmpsb
sub
lret
inc
insl
mov
push
adc
in
sbb
in
lock
icebp
jbe
add
andl
outsb
popf
ret
sbb
imul
push
adc
mov
jge
leave
jg
and
in
in
nop
mov
orl
pop
pop
push
arpl
arpl
icebp
or
mov
sbb
stc
outsb
cmpl
stos
fisubrl
ficomps
data16
add
cmc
scas
out
test
xchg
rcrl
mov
ja
les
mov
aam
and
and
fimull
js
xchg
adc
adc
mov
out
repnz
xchg
arpl
pop
mov
pushf
xchg
aam
popf
push
inc
lret
dec
faddl
imul
test
in
cmp
xchg
out
scas
and
push
enter
movsb
mov
and
xor
lods
ja
cmpsl
mov
int3
xor
fisubrl
pop
xlat
mov
clc
or
sbbl
pop
cmp
sub
add
cmpb
lds
mov
sub
jge
pop
gs
stos
lock
addr16
pop
sub
scas
int
xchg
mov
add
bound
loope
mov
xor
sub
mov
or
pop
fwait
pop
fiadds
cmp
push
inc
lret
sbb
rcll
push
scas
enter
mov
pusha
sub
mov
xor
lret
mov
popa
addr16
inc
repz
mov
mov
cmp
pop
out
popa
sub
jmp
sbb
push
or
inc
pushf
mov
mov
push
or
sub
loop
daa
pop
dec
push
xor
cmp
jg
add
xchg
inc
cmpsb
fsubrl
add
sbb
push
loopne
sarb
mov
iret
jo
or
mov
push
cmpsl
jnp
andl
sahf
pop
movsb
add
jo
roll
cmp
mov
xorb
adc
push
push
add
out
jl
loop
fsubl
int3
dec
or
inc
and
mov
dec
sub
out
sub
cmpb
mov
icebp
jae
sub
stos
inc
in
stos
scas
movsb
data16
stc
loop
sbb
dec
rorl
xor
cmp
btc
cmp
mov
hlt
jg
mull
pop
jae
push
or
adc
xchg
xchg
icebp
andb
pop
clc
mov
xchg
dec
or
dec
adc
cmp
push
push
cmp
lods
jnp
sbb
data16
xlat
inc
dec
xlat
jne
rolb
pop
outsl
fsubs
adc
test
push
into
push
pop
and
adc
xor
pop
sbb
insl
cmpsl
pop
mov
dec
mov
jne
inc
gs
push
push
cmpsb
dec
dec
lahf
and
pushf
leave
outsl
xchg
lcall
test
imul
cmpsl
mov
lds
cs
int3
adcl
sub
nop
or
adc
or
sarl
push
pop
negb
mov
sub
int
rclb
jp
push
mov
imul
sbb
adc
xor
push
jne
jbe
mov
push
test
mov
dec
cmp
jmp
addr16
add
cmovl
lea
xor
cmp
push
aad
movsl
mov
mov
outsl
fstl
stos
je
jo
pop
pop
cmp
lcall
pop
and
fucomip
inc
subb
fstpl
cmp
popf
pop
push
outsl
push
sahf
fcomps
add
and
mov
xchg
pop
loope
dec
mov
jmp
sub
jmp
ss
fcompl
dec
xchg
and
xchg
add
xchg
sbb
hlt
mov
push
dec
adc
fnstcw
add
push
jb
imul
xchg
jb
out
mov
cmpsb
lahf
outsl
enter
xor
outsl
mov
out
cmpb
xchg
ss
mov
jge
and
or
lods
mov
testb
add
mov
in
in
test
iret
cltd
push
fcoml
hlt
inc
scas
in
popa
pop
mov
mov
fimull
mov
pop
fistl
sbb
cmp
pop
fwait
sbb
rorl
out
bound
push
rolb
outsb
pop
xor
mov
sbb
frstor
xor
mov
adc
mov
fdivr
inc
or
push
pop
loope
roll
repnz
lcall
lret
faddp
arpl
mov
fcomp
xchg
push
mov
sbb
arpl
fistpl
test
popf
xor
aam
fsub
or
push
gs
in
xor
test
ret
or
fdiv
iret
dec
out
mul
sub
popf
mov
pop
push
xchg
dec
mov
push
jp
addr16
push
push
leave
pop
iret
jae
mov
sub
test
and
mov
adc
pop
mov
pop
push
pusha
push
lret
push
sub
imul
lock
jp
pushf
mov
pop
nop
fdivl
rcrb
xchg
or
fwait
pop
sub
pushf
mov
inc
jp
js
call
adc
adc
adc
xchg
mov
mov
fwait
das
mov
mov
lock
add
ljmp
push
ds
mov
rorw
popf
sub
fadds
lea
add
imul
adc
das
mul
jb
repz
fsubs
decl
repz
out
cld
mov
push
ljmp
jae
stos
mov
adc
mov
lods
mull
inc
out
mov
mov
clc
sbb
outsl
imul
nop
fildl
push
pop
pop
mov
cmp
loope
mov
pop
pop
jnp
sub
fistpl
or
sbb
nop
lea
inc
xchg
jns
arpl
in
out
mov
cmp
mov
stc
sub
push
pop
popf
fiadds
mov
dec
push
adc
lods
push
les
cmp
aas
sbb
mov
icebp
ret
popa
cmp
lret
push
pop
cli
and
inc
xchg
outsl
cmp
fsubrl
rorb
addr16
push
lods
movsl
jnp
fisubrl
xchg
sbb
movl
enter
lea
mov
cs
pop
pop
cmp
adc
mov
pop
ret
jno
push
gs
mov
adc
cmpsb
push
jle
ret
pop
shl
call
js
rolb
or
stc
mov
fwait
mov
jno
shl
pop
js
pop
out
lods
lock
scas
int3
rorl
out
mov
lds
mov
cwtl
lret
and
sub
lds
cmp
add
jns
xchg
adc
cmpsl
iret
test
mov
je
sbb
cmp
inc
mov
dec
out
xor
sub
pop
jnp
pop
lock
fmull
mov
mov
shrb
nop
fst
pop
mov
movsl
pop
aad
sbb
xor
addr16
decl
fstps
lret
pop
cmc
add
pop
icebp
adc
icebp
fwait
popf
aam
out
ds
or
pop
mov
les
insl
push
pop
xchg
mul
and
xchg
lcall
or
insb
js
cs
rol
andl
jns
jge
pop
jge
pop
arpl
popa
loopne
pop
andb
sbb
idiv
imul
inc
pop
push
repnz
and
roll
je
adc
mov
mov
daa
and
inc
frstor
cmp
popa
and
sub
mov
jp
pop
gs
and
iret
and
and
mov
addl
in
leave
jl
jae
and
aas
gs
sub
or
pop
lock
les
push
xchg
cmp
xor
pop
mov
fdivrs
pop
ficompl
in
cmp
rorl
inc
std
lock
dec
or
hlt
jecxz
push
and
or
mov
xchg
stos
movb
cmp
or
adc
pop
pop
aam
stos
repz
mov
cltd
push
mov
fnsave
dec
xchg
out
sub
leave
pop
and
mov
jecxz
dec
pop
sahf
jo
lods
sbb
js
mov
add
dec
pop
jnp
push
sbb
mov
mov
xor
sub
dec
xchg
mov
cmpsl
jmp
fmuls
ffreep
ds
jp
fnsave
out
xchg
jmp
cld
push
and
lds
aad
sbb
jno
out
scas
mov
je
mov
pop
xlat
dec
xor
pop
push
leave
popa
out
push
add
aaa
push
jno
push
aam
push
inc
mov
mov
pop
repz
add
bound
sub
and
in
add
imul
jae
and
xor
icebp
arpl
or
faddp
mov
shl
jb
and
cmp
jmp
loope
sbb
cmp
sub
loope
sbb
xchg
stc
pop
cmp
fucomi
fadds
mov
in
scas
daa
roll
or
fcoml
jbe
lods
jns
adc
dec
lcall
mov
lahf
sub
sbb
aas
cli
lods
add
inc
cmp
fistps
popa
xchg
cmp
divl
xorb
mov
rcrl
adc
sub
movsb
fistl
outsb
movsl
fadd
in
js
loopne
test
xchg
jmp
mov
nop
arpl
adc
sub
adc
iret
dec
dec
shrl
sub
movl
and
xlat
jns
aaa
out
inc
popa
fistps
mov
inc
add
out
mov
fnstenv
and
fwait
add
or
icebp
mov
mov
inc
in
inc
rcl
dec
stc
add
lcall
mov
mov
popa
bound
js
cs
add
mov
daa
mov
aad
pop
les
aaa
lock
cmp
push
imul
ja
fimull
inc
xchg
cmp
lcall
push
pop
outsb
and
out
insl
mov
pushf
dec
pushf
out
decl
pop
test
dec
push
mov
out
dec
scas
dec
subb
xchg
cmpsb
fnsave
out
and
jo
pop
call
mov
mov
mov
cmp
and
mov
sub
mov
or
push
mov
mov
pushf
dec
inc
std
mov
pop
icebp
cmpsb
imul
dec
xlat
cs
stos
inc
movsb
aad
sub
fistl
fidivs
pop
push
xchg
clc
cmp
bswap
call
push
cmc
push
scas
sub
loope
xchg
mov
imul
outsl
sub
sti
in
mov
jns
lods
and
sub
dec
and
mov
mov
xorb
mov
cwtl
inc
arpl
xor
lret
int3
jae
call
loopne
xor
sbb
cmp
mov
lds
inc
cmc
jmp
bswap
ret
pop
pushf
pop
xlat
cld
daa
sub
mov
std
adc
and
jb
or
cmovbe
jmp
sbb
ja
nop
sub
sub
mov
pop
fsub
mov
jbe
mov
faddl
es
sub
int
mov
jns
ljmp
jg
or
in
mov
lds
pop
jno
shll
lahf
out
sub
jnp
stos
call
mov
push
dec
sbb
scas
mov
cmpsl
push
cwtl
pop
lahf
mul
loopne
and
outsb
pop
and
push
and
jl
mov
sbb
stos
call
push
mov
adc
cmp
mov
mov
sub
and
iret
add
popa
out
int3
das
inc
push
jno
lods
cmpsl
sub
incb
and
lods
gs
jmp
mov
dec
ficoms
jg
xor
popl
adc
add
push
popa
lock
adc
rorb
mov
js
repz
jecxz
dec
in
inc
out
pushf
adc
rcll
shrb
mov
cmc
jbe
in
insb
push
xchg
and
stos
or
inc
sarl
aad
test
stos
test
das
es
dec
pop
fnsave
mov
cmpsl
xor
jg
inc
xor
into
insl
sub
dec
mov
lret
shlb
je
sarl
pusha
jmp
jbe
jmp
test
mov
push
inc
add
pop
gs
ja
mov
xchg
dec
jbe
xor
mov
push
mov
lcall
out
cli
dec
out
out
unpckhps
bnd
mov
jae
pop
mov
std
pop
clc
orl
jmp
mov
aam
out
fiadds
push
or
inc
adc
and
leave
aam
scas
into
rcll
sbbl
or
fs
ss
adcb
popa
divl
add
push
stos
out
notb
jp
sarb
dec
mov
orb
pusha
push
xor
fdivrl
xor
inc
mov
jae
push
fscale
insl
or
add
jl
jno
sbbb
movsl
dec
xor
leave
sbb
hlt
jl
mov
sub
inc
test
xchg
hlt
push
in
push
cmp
and
mov
push
inc
movsl
fstps
pop
loop
insl
lea
push
add
aas
in
jno
push
mov
sti
jne
pop
xor
xor
dec
pop
adc
adc
icebp
daa
ret
sbb
pop
sub
mov
and
imul
adc
or
jne
mov
xor
push
xchg
fcom
jg
jns
aaa
add
inc
push
jecxz
xlat
out
hlt
mov
dec
stc
in
int
pop
in
outsl
ret
loop
ljmp
insb
pop
out
push
sti
fstp
sub
or
in
ret
dec
or
pop
inc
cld
adc
inc
xor
lods
xchg
push
roll
sbbb
int
jg
into
cld
cli
jne
push
cmp
rcrl
cmp
and
int3
fdivrs
dec
leave
dec
jmp
push
mov
sbb
mov
push
jl
cmp
add
mov
mov
or
and
inc
shl
sbbl
inc
inc
into
lret
movsb
jb
or
fcmovnbe
out
mov
jns
inc
cwtl
xor
add
mov
mov
stos
pop
xchg
xchg
iret
cwtl
cwtl
adc
movsl
inc
mov
dec
ss
cmpsl
pop
std
or
jns
mov
adc
scas
gs
mov
arpl
xchg
or
add
add
add
sbb
add
adc
clc
jns
xchg
ret
mov
in
pop
push
inc
shlb
mulb
adc
cwtl
jbe,pn
pop
mov
in
mov
outsl
pop
xor
sub
loopne
rcll
and
add
push
dec
fdivrs
mov
mov
enter
xor
iret
jecxz
add
dec
xor
loop
icebp
mov
jl
es
jecxz
jb
aam
push
clc
dec
inc
ficomps
orl
dec
arpl
lcall
mov
das
xchg
aaa
mov
lret
mov
ficomps
or
push
js
jns
or
add
out
into
stc
adcb
xchg
mov
into
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
or
cmp
bound
pop
aas
flds
aaa
ljmp
push
in
stc
imul
cmp
xlat
sbb
dec
ds
mov
and
call
xlat
cmp
jo
addl
pop
rorb
outsb
mov
out
xor
scas
jle
movd
mov
mov
int
cmp
cld
pusha
jo
imul
pop
and
and
test
ficompl
cmp
hlt
mov
mov
shll
add
roll
adc
mov
scas
xchg
adc
jne
jo
aad
into
repz
fsubr
jge
mov
jno
cmp
pop
inc
stos
mov
jmp
das
xchg
std
es
or
stos
mov
cld
xchg
rorl
stos
sub
jp
aam
rorl
loope
stos
mov
mov
sub
roll
faddp
cwtl
push
fstp
testl
inc
xor
fdivr
cmc
sbb
das
push
or
out
mov
xor
sbb
mov
das
jne
and
sub
lea
lcall
fcmovnbe
cmp
xchg
out
jl
cmp
jo
mov
icebp
dec
int3
dec
mov
pop
push
push
dec
test
dec
jbe
mov
jo
data16
imul
xchg
sbb
rol
dec
clc
popf
push
sbb
pop
jl
pushf
and
mov
les
push
lea
inc
mov
sbbb
repz
jl
xlat
jne
lea
sbb
xlat
call
lds
dec
lock
cmp
outsl
int3
push
popf
pop
xchg
dec
mov
xchg
aas
cli
call
lock
mov
imul
mov
loope
cwtl
pop
int
fs
mov
mov
xor
xchg
pop
notb
imul
inc
repnz
ror
mov
sub
inc
inc
outsl
adc
or
loop
mov
inc
out
aad
outsl
mov
adcb
cmp
call
adc
repz
gs
stc
sub
pushf
and
inc
inc
sahf
aad
out
or
rcll
xlat
add
adcl
inc
push
xchg
aas
pusha
inc
pop
cmp
or
mov
and
push
lods
iret
push
out
sub
gs
testb
push
cwtl
cltd
sub
pop
inc
mov
repnz
xor
mov
mov
or
push
int3
mov
lcall
std
push
or
push
test
fucomi
addb
mov
lahf
out
das
lahf
inc
insb
push
sarb
jmp
loope
sub
pop
pop
shl
test
adc
mov
popl
inc
adc
insl
inc
xchg
pop
into
jge
sub
enter
xor
mov
jae
out
push
mov
xchg
lock
insl
push
gs
dec
subb
fidivrs
scas
es
push
dec
sbb
xchg
adc
sbb
mov
xchg
lock
push
ss
fisubl
ret
inc
cmpxchg
pop
out
dec
push
pop
enter
jle
or
insl
mov
inc
xchg
xchg
pop
jl
jns
mov
push
movsb
in
in
adc
daa
dec
fstps
push
dec
fnstcw
push
test
fisubl
test
loopne
fildll
insl
out
or
dec
gs
jbe
cltd
xchg
stc
movsb
clc
push
imull
cmc
and
lcall
mov
sti
sub
and
mov
push
push
sub
nop
in
cs
lcall
jno
cld
in
mov
in
iret
and
inc
mov
andl
inc
sti
jecxz
cmpsb
fsts
dec
xor
sub
rcll
hlt
andb
in
cmp
push
mov
rclb
sub
repnz
mov
ja
fisubrl
sbb
push
xchg
call
add
sub
and
hlt
or
lret
stc
dec
loop
hlt
lcall
sahf
lret
aad
loope
es
mov
call
mov
pop
mov
mov
xlat
leave
iret
pop
outsb
mov
cmp
stos
cmp
mov
lret
jbe
add
pop
sub
mov
and
lahf
mov
xlat
data16
cmp
lods
jns
lahf
xchg
and
clc
pop
lahf
sbb
push
out
test
popw
mov
pop
mov
rclb
add
rorl
popl
add
cmpsl
imul
bound
mov
in
dec
xchg
mov
sbb
mov
addl
jp
lcall
mov
imul
dec
outsl
pop
jno
lcall
pop
rcll
and
cmc
xchg
cmp
loope
dec
insb
rorl
mov
enter
shlb
push
imul
or
aad
ss
inc
or
dec
mov
adc
jnp
mov
mov
loopne
sbb
mov
test
addl
lock
inc
or
pop
cmp
and
adc
lock
hlt
lods
cmp
sbbl
loopne
fdivrs
into
mov
push
frstor
fimull
mov
pop
pop
std
shll
inc
and
cmp
xchg
lea
mov
out
pusha
dec
insl
xor
mov
xor
clc
in
in
sub
call
in
outsb
pop
jne
push
lret
xchg
pop
inc
stos
xor
push
fimuls
cmpsl
mov
out
insb
ret
ljmp
lods
mov
inc
adc
nop
jle
test
int3
mov
push
xorb
dec
lds
arpl
push
adc
jle
mov
popa
cmp
std
stos
xchg
lret
jle
fsts
jb
ljmp
repz
xorb
enter
hlt
cltd
mov
orb
add
cli
fwait
test
icebp
dec
jmp
xchg
lcall
lock
push
mov
mov
call
and
lahf
repz
into
mov
popa
sbb
mov
sub
jns
inc
test
lret
adc
rcrl
int
fnstenv
pushf
aas
in
mov
cld
add
jg
pop
sub
pop
xor
into
adc
inc
xchg
jmp
mov
and
jne
pop
into
in
stc
clc
outsl
lds
sbb
leave
xlat
and
fidivl
sub
jp
fstps
xchg
ss
or
pop
pop
jno
into
arpl
mov
call
mov
inc
rcrl
hlt
or
out
fcomip
fiaddl
add
sbb
inc
mov
lea
cmp
into
hlt
dec
fsub
popa
daa
popf
cwtl
popf
push
push
xor
addl
mov
fwait
sbb
pop
push
mov
outsb
cwtl
pop
out
lret
popl
pop
pusha
and
pop
push
add
sahf
sbb
push
push
mov
adc
sub
mov
leave
add
push
mov
push
push
sahf
jns
dec
sarb
pop
mov
std
insb
inc
mov
enter
test
sbb
mov
subl
mov
inc
dec
mov
out
inc
sbb
push
shrb
lret
scas
push
push
cwtl
cmp
je
repnz
fistpll
lods
xor
icebp
movsl
xchg
jecxz
outsb
or
hlt
pop
jge
mov
mov
inc
push
js
sti
pusha
fs
pop
popf
mov
jp
add
xchg
aaa
sbb
inc
cmp
fnstsw
sub
pop
lea
pusha
jecxz
xchg
xlat
ret
fldcw
out
in
add
or
adcl
aaa
fisttps
sbb
xchg
movsb
adc
mov
pop
pop
nop
xor
pop
cmpsl
test
pop
sbb
sbb
fbstp
mov
xlat
mov
dec
push
inc
and
inc
test
cltd
cmc
or
dec
cld
andl
inc
add
pop
shrw
add
mov
incl
sub
or
cmp
js
shl
aaa
jae
lods
or
push
or
sti
xchg
cli
jp
and
leave
fnstsw
inc
mov
push
fisubs
and
addr16
jmp
pop
idivl
mov
mov
dec
lret
sarb
mov
daa
js
and
xchg
sbb
sbb
stos
adc
mov
negl
push
in
or
sub
mov
in
push
xchg
aaa
xchg
and
in
sub
push
flds
mov
pop
and
mov
sbb
pop
inc
test
pop
adc
adc
loop
or
std
mov
mov
sub
pop
mov
mov
adc
pop
fmull
out
inc
or
push
push
and
je
pop
lret
push
mov
mov
fnstcw
test
or
and
sub
add
jmp
leave
dec
push
fs
out
test
pushl
lret
cltd
jp
cltd
mov
cmp
jl
cwtl
repnz
data16
or
fcmovne
or
cld
mov
mov
xchg
sub
es
fisubrs
js
loopne
jne
push
mov
and
or
xchg
inc
dec
add
sub
fadds
add
rclb
loop
jmp
mov
lea
dec
popf
ljmp
in
mov
mov
clc
dec
dec
jns
adc
and
in
testl
jge
mov
ret
enter
std
add
jae
and
dec
inc
aas
loope
std
dec
popf
inc
mov
cmp
cmp
pop
xchg
pop
or
fidivs
sbb
push
xchg
xchg
or
xchg
jnp
clc
push
jecxz
cmp
pop
jbe
mul
in
and
loopne
aad
repz
ret
xor
inc
bound
sbb
dec
add
fldcw
xchg
stc
xchg
clc
or
movsl
fmul
mov
pop
jg
jle
and
cs
lock
jnp
dec
ljmp
inc
sti
fnstsw
fstpt
in
outsl
mov
pop
inc
push
bound
movsl
xchg
loop
outsb
movsl
mov
loop
test
hlt
or
sti
je
test
mov
movsb
mov
jmp
les
hlt
adc
stos
repnz
push
and
lds
push
sub
mov
inc
push
add
hlt
testl
or
jnp
mov
sahf
jmp
bound
dec
roll
and
or
loopne
enter
test
fwait
xadd
cmp
fldenv
add
jns
mov
sub
mov
jmp
mov
addr16
push
mov
in
cld
push
xchg
out
xor
bound
add
aaa
lods
lods
popf
lea
xchg
mov
or
loopne
dec
fcompl
leave
inc
mov
xor
fisubrl
ljmp
or
jb
cli
add
xchg
adc
bound
sbb
sti
fs
in
lcall
arpl
sbb
add
sbb
out
sbbl
ret
cmp
cmp
mov
inc
xor
or
rcrb
jle
xchg
popa
xor
jge
lds
sbb
test
add
sar
lods
lret
outsl
add
pop
test
push
lods
pop
cwtl
in
je
inc
mov
es
jmp
cmp
shr
sub
push
and
subl
push
dec
scas
loop
out
push
addb
faddl
or
adcb
add
out
sub
das
js
jae
fcoml
or
xchg
imul
xchg
push
cmp
jno
pop
cs
popf
sti
aas
call
rcll
jae
mov
sub
ret
pop
jge
dec
lret
adc
and
ss
jne
push
loopne
dec
vpmaddwd
pop
clc
seto
xchg
rorb
addl
jmp
inc
std
pop
and
xorb
arpl
mov
mov
mov
adc
cmp
adc
jne
in
cmc
in
test
rcll
sub
jmp
cmp
and
loope
call
ss
shrl
jbe
ja
pop
dec
outsb
jno
imul
dec
xor
pop
cmp
dec
pop
adcl
and
loope
jle
loopne
daa
rolb
pop
sub
inc
add
push
sbbl
push
testl
push
test
in
in
pop
int3
pop
stos
mov
lahf
jo
cmpsb
test
daa
repnz
sbb
lods
jo
jnp
fidivrs
in
aam
cmc
in
ss
jne
or
out
pushf
cmp
pop
adc
xchg
aas
pop
fadd
hlt
jnp
mov
fucom
cli
pop
outsl
xor
and
bound
fwait
pop
mov
adc
mov
add
aaa
repz
repnz
mov
nop
add
addr16
sbb
mov
push
mov
lcall
cld
inc
fiadds
lahf
cmpl
pop
int3
mov
insb
dec
roll
in
mov
roll
inc
into
xchg
ja
or
out
stc
cmp
loope
mov
movb
adc
add
outsl
sub
adc
inc
cmpsl
cmpsb
adc
adc
bound
std
jecxz
sub
cmpsl
jns
mov
mov
fninit
dec
test
orb
push
fnstenv
push
in
mov
dec
xor
cli
mov
sub
pop
shrb
rol
sub
push
xor
fisttpll
inc
adc
lock
cmp
lods
cmp
orl
or
fisubl
mulb
xchg
out
adc
push
jg
sbb
xor
hlt
sbb
jb
and
pcmpeqb
pop
std
getsec
out
movsl
add
out
decl
shl
push
pop
test
sbb
in
stc
push
add
incb
cwtl
push
subb
or
lock
dec
adc
cmp
mov
shlb
mov
mov
dec
int3
jns
shr
bound
adc
mov
jge
xchg
mov
xchg
mov
xchg
mov
jp
fistl
mov
lahf
scas
mov
stos
mov
loopne
xchg
cli
insl
sbb
inc
scas
outsl
cmp
pushf
das
stc
cmp
mov
les
out
mov
pop
inc
mov
fbld
adc
stos
test
dec
sbb
or
xchg
cmpb
psubusb
or
stos
out
popf
stc
aam
aas
mov
call
add
cltd
cli
repz
pop
inc
dec
add
ds
imul
outsl
mov
scas
pop
mov
popf
push
and
jl
stos
mov
lahf
insl
enter
enter
add
sarb
push
sbb
mov
mov
dec
mov
cmpsl
imul
cmp
xlat
loope
mov
pushl
in
arpl
inc
inc
pop
loope
pop
cmp
test
int
filds
adc
sbb
inc
in
xor
fwait
clc
lea
stos
inc
popf
sbb
insb
stos
pop
cli
xchg
mov
jmp
mov
bound
sub
xlat
jl
jbe
pop
mov
aam
jae
fcomps
lds
xchg
sbb
cmp
aad
mov
rcrl
push
inc
fsubl
test
mov
xchg
roll
ljmp
push
out
pushf
jne
cmp
jae
fcmovu
xchg
xchg
shrl
xchg
adc
push
sbb
mov
test
ds
sub
pop
in
xor
lcallw
or
mov
inc
jb
data16
push
xchg
test
insb
xchg
pop
pop
sbb
add
add
dec
fdivrl
push
mov
xchg
sub
pop
leave
sbb
sbb
cmc
clc
mov
add
loopne
xor
inc
sbbb
push
sub
add
mov
mov
xor
sub
mov
mov
push
xchg
ret
lods
lcall
ficoml
mov
dec
jb
scas
dec
cmp
cwtl
aas
pushf
shlb
shlb
inc
ss
jge
sub
dec
jns
jle
dec
pop
xchg
repz
imul
lret
push
push
mov
fdivr
inc
pushf
mov
int3
loopne
out
and
pop
lods
mov
adc
jmp
sub
insb
into
sub
adc
test
cltd
xor
add
cmp
pop
cs
or
ljmp
gs
sti
std
push
xor
call
adc
xchg
xchg
movsb
xor
mov
xchg
and
dec
dec
mov
testb
dec
sbb
stc
js
fstpl
mov
jae
inc
bound
lock
adc
fs
lcall
mov
xchg
mov
adc
adc
jmp
pop
iret
xchg
ja
loopne
dec
mov
cmp
sbb
and
outsl
mov
pop
xor
pop
push
cmp
dec
jg
inc
adc
xor
dec
popa
imull
xchg
fistps
test
out
dec
ret
adc
cld
orb
in
cwtl
lcall
fwait
xor
cmpsl
jp
mov
stos
sub
mov
imul
hlt
lret
push
ljmp
lcall
or
outsb
rcll
js
mov
dec
push
push
sub
subb
test
in
push
xchg
mov
iret
clc
push
and
mov
push
jmp
push
pop
divb
call
aaa
lock
adc
notl
dec
ds
push
xorb
imul
movsb
insb
or
lea
dec
mov
push
out
lcall
dec
fs
sbb
fwait
sbb
dec
rcrl
xor
adc
addb
cmp
inc
insl
xlat
pop
cmp
mov
div
xlat
repnz
les
ret
dec
mov
pop
sbb
in
ret
lds
ficoms
add
rcrl
inc
sub
std
inc
rcrl
arpl
push
pushf
inc
fdivs
mov
cmp
push
inc
or
adc
addr16
push
push
or
icebp
xchg
or
mov
in
pop
test
xor
loope
and
sbb
mov
xchg
inc
aaa
cmc
lods
lea
push
cmp
stc
inc
jg
push
es
and
in
dec
push
cmp
xchg
loopne
sub
shrl
int
cld
roll
es
xor
gs
mov
dec
into
or
xchg
fnsave
daa
inc
pop
xchg
ret
adc
mov
inc
add
xor
jl
xor
in
mov
dec
rdpmc
jmp
or
pusha
pusha
ss
rol
lea
mov
fnsave
sub
push
push
fs
imul
push
push
clc
mov
cmp
xchg
pop
xor
sub
mov
jle
push
or
sarb
clc
mov
cmp
inc
push
roll
ret
sub
mov
daa
insl
fdivr
push
decb
into
stos
cld
jne
test
mov
sub
mov
in
jno
fsubs
cmp
cmp
mov
ljmp
testl
push
js
loopne
jns
call
adc
push
pusha
cmp
push
bound
cmpsb
sub
pop
push
and
ljmp
or
mov
push
cmp
xchg
shrl
jecxz
mov
and
repnz
inc
xorl
add
inc
lds
adc
pop
pop
rcrl
cltd
dec
inc
xor
dec
aam
xchg
mov
mov
xchg
jp
add
add
and
xchg
xchg
pusha
andb
pop
test
mov
dec
push
inc
mov
cmp
xor
xchg
fstpl
mov
xchg
push
hlt
inc
push
add
out
mov
out
in
bound
add
int
addb
inc
mov
mov
xor
add
shrl
xchg
jb
mov
mov
test
xor
leave
adc
jae
and
movsb
loop
imul
pop
outsb
in
and
and
sbb
jle
jg
mov
push
pop
or
repz
cmp
stos
aad
movsb
inc
jle
inc
cmp
xor
insb
movsb
mov
int3
mov
push
and
dec
push
ffree
fdivrl
cmp
out
mov
jo
out
mov
add
dec
sub
cwtl
inc
add
iret
xchg
xchg
or
push
cmp
pop
data16
cmpsl
xchg
lock
cwtl
cmp
xor
xchg
and
lds
lcall
cmp
jo
cmp
jge
fistpll
decl
jb
jecxz,pn
add
and
int
jmp
push
ja
je
mov
ljmp
jmp
dec
daa
ja
ss
in
fsts
fdivs
enter
sbb
inc
or
xchg
mov
push
adcb
mov
std
mov
dec
xchg
jae
pushf
mov
push
movsb
mov
sub
cmp
dec
loopne
arpl
adc
mov
sub
mov
inc
adc
stos
push
add
pop
jnp
insl
sub
enter
fwait
jno
ret
xlat
mov
sbb
ljmp
adc
and
sbb
inc
mov
adc
ds
pop
imul
add
xchg
jmp
inc
insl
push
outsl
hlt
pop
inc
jne
test
mov
sub
sub
popf
outsb
roll
dec
inc
jns
add
bound
mov
mov
lods
mov
or
cmp
pop
lcall
mov
mov
nop
scas
pop
addr16
sbb
mov
nop
cmpb
dec
icebp
inc
ss
rclb
inc
scas
cmp
repz
dec
pop
sbb
or
or
mov
lret
jae
ss
mov
int
jne
pop
aas
jo
fadd
jnp
lcall
lahf
inc
pop
scas
lock
mov
lods
psrad
push
mov
ds
je
mov
fimull
lret
ja
cwtl
xchg
xchg
xchg
push
outsb
mov
xchg
xor
iret
pop
sub
clc
addb
sar
push
and
or
xchg
sti
jne
ret
jecxz
mov
shlb
push
icebp
rcrl
pop
jae
xorb
fsub
cmp
ror
adc
fsts
sub
mov
jno
add
cmp
mov
roll
inc
jbe
aas
lods
xor
ss
dec
push
push
addr16
divl
repz
in
mov
dec
xchg
mov
repnz
mov
xlat
push
or
pop
xor
lret
out
lods
inc
mov
outsb
xlat
lods
fists
pop
xor
pop
xchg
ficompl
scas
pop
dec
stos
add
popa
imul
aas
test
mov
lret
cmp
lret
cmp
rcrb
movsb
add
rol
fdivrl
fs
fldenv
fstpt
push
jae
dec
arpl
out
ret
int3
lret
add
fs
push
mov
fistpl
ljmp
xor
in
imul
mov
mov
lcall
mov
cli
addr16
mov
pop
clc
fmull
push
sbb
mov
mov
enter
mull
inc
xchg
or
sub
cwtl
xorl
stc
xchg
das
pop
mov
push
push
movl
mov
es
mov
movsb
sarb
dec
call
or
movsb
out
cs
nop
mov
cwtl
xchg
push
stos
add
add
xchg
add
and
popaw
outsb
lods
gs
or
lahf
lods
lea
adc
adc
insb
fstpl
aad
fs
nop
mov
inc
lock
add
push
add
or
cmp
aad
and
push
in
movsb
stc
das
lods
incl
jb
fcompl
orl
jno
mov
lock
lret
xchg
fdivr
test
incb
mov
push
aad
call
aad
mov
outsb
js
push
out
insl
pop
cmp
xchg
subb
inc
test
pop
mov
loopne
push
das
fmuls
out
jns
in
fisubl
fisubrs
inc
aam
sbb
sbb
push
pop
movsl
cmp
pop
aam
mov
cltd
push
cmp
cmpsl
push
loop
cld
pop
lcall
and
or
lods
mov
inc
add
mov
mov
pop
adc
js
test
fcomps
xchg
hlt
sub
rolb
cwtl
push
mov
push
mov
lret
jb
sbb
pop
cmp
and
rcrb
push
aam
push
cmp
xchg
xchg
and
adc
cmp
inc
test
mov
das
rcr
push
dec
add
or
and
add
out
jns
pusha
mov
or
push
cld
sub
in
aad
mulb
in
pop
pop
addr16
insb
repnz
push
mov
stc
lcall
push
in
cmp
sbb
daa
mov
leave
mulb
in
fldcw
xor
add
clc
outsl
lcall
inc
loopne
stc
mov
pop
shl
cld
xor
das
mov
lcall
push
xchg
cmp
addr16
ficomps
inc
pop
loopne
sbb
inc
cmp
sbb
jl
lret
xor
cmp
repnz
stos
inc
ds
push
imul
mov
jmp
loop
test
int
xchg
leave
or
inc
push
das
iret
ret
pop
xchg
popf
and
out
popa
xchg
ficompl
mov
jmp
dec
cwtl
sbb
int
repz
and
repz
mov
scas
movsb
cmpsl
into
cmp
mov
bound
inc
fstl
imulb
sub
sub
adc
jl
sub
sub
ljmp
or
mov
inc
iret
mov
repz
pop
inc
mov
ret
fsubs
adc
jnp
shrl
fcoml
pop
dec
mov
mov
cli
cmpsb
pop
sahf
hlt
jecxz
outsb
popa
fists
xor
sub
jecxz
sbb
insb
stos
popw
push
loop
push
push
sub
call
scas
jecxz
mov
daa
scas
sub
mov
repnz
jl
in
jne
jge
repnz
adc
arpl
add
pop
mov
imul
dec
push
xchg
fs
push
mov
xchg
sbb
outsl
xchg
mov
lret
cmp
mov
xor
std
pop
push
sbb
or
stc
sub
imul
in
iret
in
or
lea
sub
lea
sbb
leave
scas
pop
cmpsb
or
js
stc
test
xor
sbb
aaa
ja
and
in
cmpsb
mov
add
cli
nop
mov
pushf
sub
dec
mov
or
ss
repz
into
push
pop
push
xchg
dec
xor
sbb
cmp
aas
add
sbb
adc
dec
cmp
sub
xchg
sbb
mov
dec
mov
fldenv
mov
in
dec
rcr
cmp
pop
cmp
fcoml
in
loope
pop
stos
jne
pop
out
or
inc
or
push
ljmp
popf
dec
mov
mov
mov
lock
call
xchg
cmc
or
and
shll
aaa
xlat
pop
lock
dec
mov
sarl
jns
mov
lock
jnp
stc
lods
jnp
enter
mov
and
in
xor
xchg
dec
rol
insb
cmp
and
ret
icebp
loopne
mov
jb
addb
mov
mov
cli
out
sti
repz
fildll
movsl
rcrb
xchg
mov
and
in
sysexit
mov
sbb
sti
addr16
call
cmp
add
xchg
or
xchg
ss
xor
data16
push
xlat
imul
popa
mov
std
mov
or
ds
add
shll
sbb
mov
push
je
push
xchg
mov
inc
out
sub
and
in
stos
repz
jmp
adc
cmp
sub
mov
xchg
sbb
outsb
mov
mov
pop
cs
addl
xchg
xchg
sbb
add
adc
mov
js
mov
in
cld
out
js
dec
test
lret
add
mov
loope
scas
xor
cmp
adc
fcomps
clc
sbb
jnp
jae
adc
and
in
stos
je
in
add
stos
daa
adc
int3
popa
insl
ret
test
out
in
rcr
je
cmp
mov
sub
mov
push
or
daa
xchg
sarl
test
stos
inc
inc
sbb
mov
dec
and
xor
push
jns
xchg
mov
imul
xchg
rorl
and
and
cmp
cmp
test
ljmp
and
sbb
stos
loop
mov
rcrb
es
je
sbb
mov
add
or
movsl
fwait
push
stc
push
rcrl
cltd
cld
push
nop
je
fstl
jno
mov
xor
fwait
mov
cmc
in
shll
lods
add
jp
sarl
imul
jl
jge
mov
mov
outsb
xchg
fwait
movsb
bound
arpl
mov
lahf
dec
rorl
dec
sbb
push
lods
and
leave
js
cld
data16
fcomps
int
insl
sub
ret
mov
lret
shrb
ds
pop
into
inc
and
lds
inc
mov
lcall
lcall
push
aas
jbe
inc
movsl
push
test
xchg
jbe
outsb
or
aam
arpl
or
inc
dec
subb
pop
stc
mov
repnz
aaa
inc
roll
push
test
sub
and
fs
int3
and
or
or
mov
pop
movsb
xchg
out
outsl
daa
pushf
int
cmp
sbb
neg
jno
mov
shll
xlat
outsl
jle
jp
mov
sub
sbb
ret
iret
pop
imul
sbb
add
xchg
call
int3
mov
jle
addr16
push
mov
xchg
pop
repnz
je
sbb
sbb
jp
fcomps
push
cmp
in
ljmp
outsb
add
pop
arpl
pop
clc
sbb
jmp
jno
in
inc
dec
iret
es
push
movsl
movsl
dec
xor
cld
rclb
pop
lea
add
mov
ret
sti
xor
xchg
xchg
cli
mov
xchg
lods
nop
pop
test
repnz
repz
adc
aaa
cmp
mov
aam
repz
pop
adc
mov
mov
loop
adc
xadd
imul
pop
or
bound
aas
aad
loop
mov
lret
dec
sbb
jecxz
push
ret
add
int3
orb
add
dec
cltd
orb
cmp
icebp
lcall
inc
inc
dec
in
sahf
popa
pop
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
ds
ja
add
pop
add
add
jle
jo
inc
test
scas
add
push
std
pop
scas
fwait
xchg
iret
scas
xchg
call
jne
out
pop
aaa
movsl
fimull
mov
scas
inc
fs
scas
push
cmp
rclb
dec
add
into
bound
repz
jb
mov
push
adc
lret
add
sbbb
add
add
sub
adc
cmp
out
pop
xchg
push
ror
add
pop
add
add
fwait
mov
add
mov
xor
mov
loopne
xchg
into
dec
inc
bound
sbb
mov
sbb
mov
sbb
or
je
add
in
dec
and
adc
push
cmp
or
add
clc
fiaddl
add
add
sub
sub
addb
into
add
pop
add
add
mov
je
inc
es
lahf
jmp
pop
mov
push
mov
out
dec
in
std
fnsave
jg
jb
mov
into
fcompl
pop
repz
mov
and
xchg
jecxz
loop
xor
xchg
jg
xor
mov
xchg
fwait
pop
xchg
xchg
in
roll
shlb
movsl
pop
shll
das
and
aam
aam
ljmp
je
leave
ret
mov
add
pop
add
add
arpl
jo
jmp
and
lock
xchg
mov
lds
imul
mov
dec
sub
lock
push
mov
and
sti
pushf
jns
sti
cmc
mov
fists
dec
mull
dec
dec
push
mov
scas
dec
jecxz
xchg
movsb
adc
add
sub
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
out
add
pop
add
add
call
inc
ret
fstps
ret
sub
lahf
hlt
in
mov
xchg
sti
mov
and
lock
sbb
pop
sub
inc
mov
leave
imul
push
cwtl
mov
or
cli
mov
aam
add
jg
ss
fadds
fistpll
aam
add
add
out
lods
cmp
stc
stc
ret
iret
add
pop
add
add
sub
adc
lods
pop
movsl
test
fiaddl
mov
jae
out
xchg
cli
popa
aas
clc
mov
adc
out
fsubrp
cmp
loopne
and
xor
jge
and
xchg
lods
adc
and
jle
push
jl
push
jle
or
icebp
mov
add
inc
gs
aaa
push
loop
insb
lahf
iret
add
pop
add
add
adc
jmp
jb
jle
and
sbb
lahf
test
data16
push
faddl
test
mov
iret
inc
cmpsb
js
lahf
divl
stos
sbb
xor
fldcw
dec
mov
out
xchg
push
jbe
das
pop
data16
and
adc
add
mov
push
adc
cwtl
out
sti
das
and
cmp
add
pop
add
add
ret
in
cmc
push
xor
add
outsb
outsl
adc
rolb
sbb
popf
add
fcmovb
pop
dec
repz
gs
aad
jge
in
movsb
mov
push
push
cmp
mov
xor
inc
jbe
add
incl
pusha
push
dec
inc
sub
das
jle
jg
imul
loop
repz
pop
add
add
rorl
idivb
outsb
scas
outsb
xchg
les
cld
jmp
notl
dec
ret
cwtl
ljmp
cmp
or
in
jge
and
jb
fcmovnbe
out
js
mov
hlt
and
fbstp
ret
push
pop
shll
out
into
pop
sub
xor
addr16
and
mov
mov
sbb
repz
add
add
les
fstpt
cmp
mov
push
and
jns
mov
xchg
mov
outsl
js
mov
sbb
fisubrs
jge
mov
pop
inc
add
rcrb
xchg
fwait
sub
mov
scas
fisubrs
inc
popa
cmc
xchg
iret
arpl
adc
jg
or
ret
or
ret
lods
sub
mov
stc
dec
loop
add
add
mov
or
sahf
mov
xor
mov
ds
jmp
lods
out
testl
popa
mov
sbb
ror
test
pusha
scas
push
stos
mull
dec
pop
dec
adc
stc
mov
fstpt
cmp
mov
jge
jno
jb
add
add
ret
pop
iret
fst
enter
int
push
stos
loop
add
add
mov
mov
or
test
adc
icebp
sbb
mov
hlt
cmpsl
ret
cvtps2pd
xchg
icebp
adc
shlb
and
mov
mov
inc
cmc
push
incl
dec
or
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
out
sbb
loop
inc
add
sbb
add
sbb
inc
add
sbb
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
ds
inc
add
test
repnz
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
ficomps
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
rcrb
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
jnp
ficompl
pop
add
add
fwait
push
sbb
jae
xchg
stos
int
jp
xlat
or
push
adc
xchg
dec
insb
js
lcall
stc
and
mov
sbb
add
jns
pusha
mov
adc
lret
mov
rol
mov
xor
push
es
clc
movaps
mov
add
add
mov
push
mov
xlat
push
pop
cmc
lahf
outsl
iret
add
pop
add
add
mov
cs
push
mov
loopne
nop
inc
mov
into
clc
dec
sub
jne
outsb
jl
sbb
push
cmp
jle
dec
insb
push
add
push
mov
pop
pop
mov
mov
push
outsl
mov
push
cmp
pop
cld
cmp
mov
add
add
stos
pushl
xchg
push
scas
sub
add
pop
add
add
or
pop
inc
mov
sbb
dec
aaa
mov
and
xchg
stos
pop
fildl
lds
add
mov
and
aas
mov
hlt
xchg
inc
and
adc
xchg
hlt
inc
leave
je
add
push
and
subb
pop
or
cmpsb
ljmp
add
dec
roll
add
add
cmp
in
fimuls
xchg
rcrl
pop
add
add
sbb
outsb
into
push
dec
nop
xchg
xchg
sub
sub
jle
jl
dec
sbb
lods
fs
mov
dec
aaa
xchg
sbbb
fisttpl
pop
mov
ja
je
add
lcall
pop
aas
stc
mov
mov
sbb
xor
adc
jecxz
add
add
mov
sbb
std
negb
sub
jl
rorl
add
add
pop
mov
sub
cmc
aad
out
inc
loop
mov
cs
inc
and
mov
ja
sahf
xor
mov
cmp
jle
sub
or
jmp
cmp
mov
scas
hlt
adc
in
leave
repz
mov
sbb
ss
dec
cs
mov
movsl
fidivl
xchg
mov
scas
fbstp
inc
mov
cld
aas
fadds
add
add
mov
pop
out
mov
in
xchg
mov
fisttpll
jle
cmpsb
or
or
sbb
fcmovne
stos
cmp
mov
iret
jno
xchg
test
jecxz
xchg
add
pop
fiaddl
adc
popa
ja
insl
test
mov
jbe
movsb
xchg
test
xchg
pop
add
add
add
pop
sub
dec
fadds
add
add
aas
imul
lock
jle
loopne
xchg
cmp
outsl
xor
dec
mov
sbb
jecxz
inc
inc
movsb
xchg
outsb
dec
xor
aaa
in
mov
shlb
ficomps
rcrb
xor
in
cmc
daa
jo
push
test
outsl
lods
xchg
and
jnp
push
add
xor
jb
insl
xor
and
neg
add
pop
add
add
mov
nop
std
test
cmp
add
sub
ljmp
adc
inc
push
xor
mov
repz
push
add
sub
push
mov
ds
xor
xchg
cs
or
and
sahf
dec
mov
add
cmp
add
mov
out
insl
fisubl
pop
add
add
subb
add
fistpll
or
movl
pop
aas
aaa
rcrl
cmp
mov
fiaddl
mov
iret
stc
push
das
scas
cmpsb
cmp
pop
pop
repz
lahf
mov
mul
cmp
sbbl
dec
or
cli
xchg
jmp
repz
fimull
sahf
testb
scas
flds
add
add
push
ret
fcomi
lea
inc
inc
ret
aas
outsl
and
cmp
xor
enter
aaa
jecxz
xchg
hlt
pop
ja
lahf
or
and
lods
mov
dec
or
ja
shrb
and
pop
mov
dec
fidivl
xor
std
jp
ljmp
pop
repz
add
pop
iret
pop
aad
ss
dec
iret
xchg
bound
add
add
data16
cld
xor
and
ja
push
jb
adc
pop
ljmp
out
xor
mov
adc
stos
xlat
sub
dec
loopne
and
lcall
into
sbb
mov
lods
mov
into
insl
mov
rcll
mov
xor
add
pushf
repz
add
add
cld
cmpsb
mov
add
add
ja
dec
popa
pop
lcall
push
cmpb
aad
cmpsl
xchg
imul
sub
cwtl
jmp
cmp
mov
daa
push
jb
jbe
mov
sahf
adc
test
sahf
mov
pop
xchg
scas
mov
mov
fidivrl
push
rcrl
outsb
jae
lret
jle
repz
mov
ret
fiaddl
add
add
fs
jb
ret
sbb
xchg
jmp
or
add
mov
adc
fstpl
lcall
hlt
and
ret
push
inc
test
movb
mov
popf
add
xchg
push
gs
fldl
inc
xor
and
pop
ljmp
adc
lret
lea
cmc
adc
adc
mov
lds
pop
fildl
add
add
or
xor
pop
daa
loopne
mov
je
outsl
or
inc
loopne
pusha
outsl
pushf
fbstp
enter
ss
daa
mov
mov
xchg
ret
add
xchg
sbb
sarb
sbb
cld
xor
and
mov
and
and
or
add
add
mov
lock
mov
rol
mov
add
add
and
xor
arpl
xchg
insl
int
ror
pop
fcom
out
rcr
out
rcr
fwait
mov
leave
pop
stos
xchg
mov
jmp
icebp
scas
arpl
rclb
into
ds
test
imul
lods
pop
jle
jg
pop
pop
jno
test
dec
push
ljmp
xchg
add
push
addl
add
add
add
add
sqrtps
cmc
das
sbb
xchg
iret
aas
dec
lret
insb
xlat
fildl
add
add
data16
pop
shrb
bound
pusha
shrb
fsubl
leave
xchg
sub
inc
sbb
mov
stos
test
pop
jg
mov
das
inc
xor
fisttps
filds
lret
gs
daa
xor
fistl
dec
sbb
loop
xor
push
stos
adcb
jne
int
xchg
inc
cmc
sti
fildll
push
sbbl
pop
add
add
data16
pop
stos
leave
inc
and
movsb
adc
and
cmp
pop
pop
sub
mov
lahf
push
dec
imul
dec
inc
jl
and
lea
loope
out
movsb
stc
sbb
push
push
add
pop
cmpb
adc
pop
xchg
insb
mov
jo
fs
adc
testl
nop
fs
faddl
add
add
movl
fsubrs
div
imul
jns
mov
mov
orl
jnp
sub
ds
and
aam
test
sub
jecxz
inc
push
xchg
sub
pop
cli
pusha
xchg
push
fdiv
push
inc
rorl
add
add
jne
jg
clc
cs
push
sti
iret
add
pop
add
add
or
ret
xor
sub
mov
cmp
cmovs
push
adc
fldenv
pop
inc
je
rorb
dec
push
cmp
sbb
cmpsb
push
sbb
inc
test
and
in
jae
mov
in
and
xchg
dec
xchg
pusha
cltd
lock
cwtl
or
popl
add
add
mov
cmp
sti
dec
mov
je
lcall
add
pop
add
add
or
test
fsubs
daa
jb
sub
xchg
mov
dec
mov
pop
daa
adc
mov
mov
mov
add
jmp
out
push
or
ljmp
mov
loopne
ss
call
jl
mov
fyl2xp1
xchg
pop
icebp
or
add
fists
dec
mov
xchg
adc
and
sub
add
add
leave
push
imul
mov
mov
btr
loopne
xchg
mov
lea
aas
lods
ljmp
lock
mov
add
sub
in
jne
adc
push
or
imul
lea
push
rcrb
add
add
fisttps
push
mov
lahf
mov
pop
add
add
aad
jnp
sub
inc
mov
jnp
imul
sbbb
movsb
outsb
stc
rorb
fstl
pop
pop
nop
xor
mov
adc
adc
ficompl
jbe
xor
lahf
dec
xchg
out
sbb
dec
rolb
ret
pop
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
xchg
lock
jbe
cmpl
dec
jns
mov
int3
sbb
cmpb
cltd
xchg
loope
or
fcomps
pop
jl
ds
xor
dec
js
aaa
xchg
pop
es
xchg
xor
add
daa
adc
jo
hlt
movsl
loopne
push
cmpsb
cltd
pop
or
add
add
and
cmp
clc
add
add
add
jge
loop
pop
dec
adc
mov
dec
loope
xlat
cmpsl
fcoml
outsl
dec
icebp
movsb
lds
jno
in
sbb
shlb
add
sub
pop
bound
or
fcoml
stos
xchg
push
pop
push
mov
pop
cmp
add
push
push
repnz
test
push
pop
insb
in
push
mov
xchg
nop
ffree
popf
aam
inc
jl
and
add
pop
add
add
divb
mov
mov
in
pop
or
add
and
pushf
cmp
jns
outsb
pop
scas
test
xchg
pop
fildll
bound
out
insb
outsb
repz
add
fcom
sarb
mov
sub
fs
pop
test
adc
push
cltd
xor
adc
add
hlt
mov
jbe
hlt
mov
and
cmpsb
addr16
cmp
add
pop
add
add
pop
mov
add
mov
lock
sub
cld
jne
fcoml
sub
rcrb
popa
test
hlt
fcomps
jmp
pop
call
jo
pop
frstor
popf
inc
scas
je
aas
cmp
add
cmc
mov
lods
push
out
mov
xor
into
mov
sub
out
push
popf
or
pop
add
add
movsl
pop
add
jle
aaa
adc
pop
cmp
pop
imul
stos
sub
jmp
inc
mov
mov
pop
jl
lcall
pop
ss
sbb
daa
xor
inc
mov
jnp
mov
cld
aaa
cld
out
fucomi
outsb
and
pop
mov
aaa
roll
add
add
stos
jb
push
insb
fnop
jo
lret
rcrl
loop
outsb
push
pop
xor
xchg
or
lea
push
das
mov
and
cs
lds
mov
lock
imul
fcmovu
pop
mov
ljmp
pop
inc
or
mov
inc
js
add
add
mov
and
out
xchg
roll
add
add
pop
pop
inc
loope
daa
lahf
aas
fimull
adc
loope
scas
pop
flds
negl
cmp
aas
or
repz
cmp
dec
test
sub
movups
icebp
xchg
std
loopne
pop
in
fldt
push
movb
fbstp
xchg
jmp
sbb
jle
hlt
mov
add
add
stc
call
into
inc
mov
dec
mov
push
out
roll
add
add
jb
xchg
test
insl
mov
mov
rep
and
add
in
ljmp
xor
leave
dec
or
dec
push
outsl
mov
xor
mov
xchg
sbb
jne
inc
arpl
aas
sbb
cmpsl
push
aaa
insb
add
sbb
cmp
int3
fisubrs
cwtl
sar
repz
js
das
popf
dec
aam
add
add
jl
test
lahf
out
inc
pop
jecxz
adc
and
into
add
pop
mov
lret
inc
sahf
clc
lds
icebp
cmp
pop
pushf
loop
cmp
mov
push
aaa
out
call
cld
dec
and
ret
nop
imul
fmuls
loope
mov
lahf
mov
rolb
or
inc
pop
test
test
add
add
int3
sbb
out
loopne
lods
jmp
jle
cmpsl
aam
add
add
fwait
cmc
into
adc
fucomi
repnz
mov
idiv
xchg
pop
test
inc
mov
xchg
jb
mov
rorl
push
rcll
and
sbb
push
fstpt
jb
iret
pop
pop
outsl
xor
mov
imul
or
mov
cmp
push
test
fildll
icebp
lods
lods
testb
add
pop
add
add
addr16
rcr
repnz
pop
push
sub
mov
push
push
in
sub
jge
add
and
sbb
jno
cli
inc
jno
lret
sub
imul
pop
cltd
xchg
xor
popa
cld
cmp
fsub
out
push
cmpsl
call
aam
dec
mov
mov
dec
stc
out
xchg
or
fwait
loope
sub
sarb
add
pop
mov
add
pop
add
add
icebp
stc
inc
outsl
fs
lea
jnp
fwait
mov
addl
testl
cmpsb
mov
rorb
push
mull
xchg
mov
xchg
rcrb
mov
and
push
imul
insb
iret
mov
mov
sub
mov
jne
or
ja
dec
cmp
dec
jp
into
and
pop
add
add
shrb
cmp
notb
sub
daa
xchg
adc
lods
mov
mov
mov
push
xor
leave
add
adc
mov
outsb
jno
inc
int
xchg
add
repnz
dec
ljmp
out
sub
sahf
call
jle
das
push
insl
outsl
xchg
mov
dec
add
add
arpl
jge
mov
daa
lods
mov
add
pop
add
add
fs
in
cmpsl
inc
mov
iret
ljmp
xlat
int
shll
jmp
dec
sbb
rclb
mov
stos
rcrb
loope
cmpsl
in
and
dec
lods
rcr
and
scas
xor
fs
jno
dec
add
out
mov
ficoms
xchg
sbb
fcomps
aad
cmp
add
add
push
imul
loop
faddl
add
add
cmp
push
xchg
push
inc
xchg
inc
cld
cmp
inc
mov
lret
mov
stos
nop
mov
out
mov
adc
mov
cld
dec
jns
lods
mov
lret
jmp
aas
iret
sti
in
movsl
pop
inc
and
jle
sbb
jb
dec
mov
xchg
in
scas
mov
add
daa
ss
xor
and
xchg
lcall
add
in
aaa
out
and
lret
sti
shrb
mov
in
cld
fists
pushw
scas
xchg
jbe
popf
mov
jle
ret
iret
pop
lock
cmpsb
dec
sub
ret
xchg
sub
test
idiv
mov
push
aas
lret
mov
cmpb
mov
cwtl
inc
test
ds
cs
cmp
popf
mov
aaa
out
mul
aaa
cmc
xchg
lcall
mov
add
add
lea
add
and
xchg
or
jg
orl
cwtl
cmpb
xchg
cmp
jo
addr16
adc
mov
insl
clc
lods
push
inc
mov
push
adc
outsb
rolb
bound
les
mov
js
imul
aaa
rolb
add
add
aad
out
fucomip
ss
cmp
setne
fldl
add
add
lret
pusha
inc
out
sub
std
and
negl
sub
fistpl
ret
mov
mov
mov
aam
jae
add
lret
xor
push
mov
pop
mov
sbbb
add
adc
out
shrl
sbb
xchg
pop
adc
add
add
in
cld
fisubrl
sbb
cmpsb
sbb
fiadds
add
add
shrb
pop
adc
dec
mov
jb
stos
sub
fidivl
or
add
movsb
icebp
lock
fsts
pop
jb
sbb
aam
mov
mov
adc
jmp
add
lock
loopne
test
sti
pop
cmpsb
xorl
add
add
cmp
paddsb
nop
shrl
mov
mov
add
pop
add
add
ret
mov
decb
and
ljmp
das
mov
movsl
pop
imul
insl
push
ss
sbb
xchg
ss
lods
fisubs
mov
pop
inc
inc
or
pusha
pop
mov
xor
scas
inc
cmp
in
mov
out
add
add
jle
call
cli
lcall
add
pop
add
add
movsl
lock
mov
ljmp
out
imul
xchg
bound
fdivr
dec
fldcw
xchg
incb
dec
and
inc
push
mov
pop
stos
in
xchg
jle
sbb
loopne
jns
into
mov
mov
lcall
icebp
sub
lock
lods
or
jns
out
mov
add
fincstp
shl
frstor
pop
dec
dec
fidivs
outsl
filds
add
add
sub
ficompl
xor
xor
stc
push
dec
mov
popf
sub
and
mov
fsubs
sbb
shrb
jmp
test
ret
xchg
xor
jg
mov
xchg
lods
daa
cmp
inc
jecxz
ficoml
sbb
xchg
pop
movsb
mov
test
jno
add
add
aam
fnstsw
out
fcmovu
in
popa
sbb
lret
filds
add
add
push
mov
or
and
jne
loope
ds
js
add
jne
lds
adc
test
mov
push
jno
push
lods
dec
xchg
pop
gs
adc
pop
leave
fldenv
push
mov
push
xchg
push
inc
fstpt
stos
mov
cmpsb
xchg
cmp
imul
or
mov
stc
sbb
inc
jecxz
mov
bound
pop
daa
loopne
add
add
cmpsl
add
cltd
inc
and
imul
pop
aam
lret
sbb
aad
out
sahf
add
and
mull
and
fwait
push
mov
push
dec
pop
iret
add
lcall
test
mov
ja
mov
xchg
stos
add
imul
shlb
mov
mov
icebp
and
fadds
add
add
xor
or
psubusw
fwait
loop
cmp
cwtl
xlat
loope
dec
xchg
mov
repz
cmp
into
add
int
mov
adc
int
sbb
mov
ljmp
repnz
fsubrl
in
scas
inc
stos
fistpl
mov
add
adc
repz
das
cli
fists
dec
es
sub
nop
pop
fnstsw
add
pop
add
add
hlt
inc
pop
bound
test
add
fildl
lret
mov
stos
sti
js
cltd
int3
lods
push
mov
test
idivl
lret
dec
les
js
sbb
pop
pop
in
jb
aam
ret
jecxz
xchg
push
sar
in
notb
icebp
lret
test
std
ficoms
ja
outsb
test
ljmp
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
adc
add
add
add
add
add
add
add
or
add
or
add
adc
add
inc
iret
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
