push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
loopne
addl
subl
and
cmp
sub
inc
jbe
fnstenv
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
mov
and
xor
mov
jae
out
inc
sub
push
jo
arpl
fsubp
icebp
jecxz
insb
xchg
mov
cltd
bound
xor
cmpsb
xchg
push
pop
cli
mov
cmpsb
cmp
call
int3
lcall
shlb
int
mov
sub
jnp
lods
xchg
inc
ja
cltd
pop
jecxz
lret
or
xlat
sbb
xchg
clc
fs
fiaddl
xchg
aaa
mov
mov
or
or
inc
xchg
dec
cmpsb
adcb
insl
push
aam
test
mov
lods
shll
gs
divl
mov
arpl
lods
mov
pop
xor
push
pop
mov
pop
push
enter
push
inc
fistpll
out
adc
and
jp
in
sub
xlat
or
lret
pushf
or
sbb
pop
les
rcll
je
push
enter
clc
lods
xchg
mov
push
cmp
cltd
fucomp
sub
lret
repz
insl
xor
int3
rclb
inc
push
add
or
stos
adc
xchg
pop
negb
loop
shll
jbe
loopne
pop
repnz
das
jl
es
xor
jg
sub
and
les
ficompl
rorb
pop
outsl
jae
repnz
push
xor
xchg
or
mov
out
sbb
daa
les
jecxz
dec
loop
add
jno
lds
jp
jp
pop
push
mov
inc
outsb
insl
xor
push
loop
or
iret
add
out
xchg
or
xor
aam
xor
outsb
push
insl
xchg
dec
jo
push
mov
leave
das
pushf
mov
mov
jno
pop
roll
inc
sbb
repz
jmp
jle
imul
cmovne
gs
in
and
push
or
enter
insb
mov
int3
lret
sub
cmp
pop
push
and
movsb
sbb
addr16
xor
mov
sbb
lods
int3
xchg
push
lods
pushf
dec
adc
mov
jmp
and
xor
shlb
push
cmp
das
mov
stos
ret
add
jne
dec
mov
push
pop
sahf
out
in
xor
addr16
mov
in
push
cli
imul
mov
jl
adc
hlt
cmc
pop
and
push
cs
push
aas
mov
push
push
mov
stos
jle
sbb
pop
aam
cmpsl
pop
push
mov
lods
jnp
aas
xor
in
rol
mov
jo
dec
std
mov
sub
fstps
cmp
enter
insb
in
xor
in
outsb
mov
xchg
loop
aad
int3
xor
pusha
in
jb
pop
push
repnz
push
dec
add
lock
jl
les
es
xchg
jb
push
push
scas
clc
aaa
dec
sahf
inc
call
xchg
sbb
das
add
imul
jp
inc
push
and
mov
popf
xchg
adc
lods
dec
mov
jl
pop
lock
out
test
pop
xchg
imul
sub
sbb
divb
negb
fs
jae
imul
loope
pop
iret
jecxz
jno
inc
sub
cltd
out
fsubrl
lds
daa
xor
repz
fs
decb
sbbb
rorl
add
pop
rcrb
sarb
rcl
repnz
mov
sub
xor
cs
out
mov
jb
mov
pushf
fwait
pop
jae
out
frstor
mov
daa
call
push
je
inc
cld
jns
or
lret
std
cmc
cld
inc
cmpsl
xor
into
fstpl
and
cwtl
lock
outsl
rcl
jo
xchg
jmp
mov
push
mov
pop
insl
and
rorl
cmp
movsb
push
sbb
mov
das
add
out
add
ja
sub
les
sub
jnp
inc
add
sarb
jne
xchg
lods
mov
cmp
push
das
cmp
sbb
imul
fwait
xor
out
add
aas
dec
es
mov
push
pop
aam
push
pop
rcrb
fidivl
subl
std
rolb
xchg
lds
movsw
or
fmuls
cmp
and
outsb
mov
push
repnz
pop
sub
lahf
ja
xor
pop
jecxz
sub
testb
loope,pt
mov
jge
inc
adcl
int
inc
aam
push
push
lods
xchg
jnp
inc
mov
iret
xchg
push
fsubs
in
add
pop
pop
push
jg
inc
popa
lret
jg
les
mov
cmpsb
jbe
xchg
mov
popa
int3
fildll
std
fwait
xlat
pop
popa
pusha
scas
jmp
pop
inc
jo
cmc
jne
add
sbbb
imul
loop
movsb
in
and
andb
jo
push
lea
cmp
lock
ds
and
std
test
movsl
jmp
pop
lret
fldt
pop
jecxz
pop
mov
inc
rol
or
stos
mov
mov
sahf
stos
pop
stc
in
iret
mov
or
jae
mov
cmpsl
aad
cld
sub
test
mov
sub
outsb
test
mov
dec
scas
loopne
and
sub
out
dec
adc
or
shll
mov
push
mov
pop
stos
xchg
or
popa
xchg
adc
mov
inc
mov
jae
call
loope
push
mov
sub
cmpsb
dec
lds
xchg
int3
and
shrl
and
popf
sub
mov
mov
xchg
dec
rcl
mov
xchg
outsb
mov
mov
scas
or
imul
insl
out
and
inc
popa
icebp
fistpl
in
std
out
out
scas
mov
xchg
es
jge
add
nop
addl
and
stc
add
inc
dec
pop
enter
mov
rcrb
jbe
mov
dec
xor
imulb
mov
dec
fwait
push
add
gs
dec
xchg
xor
jle
sbb
mov
pop
aam
xor
or
mov
int
aas
mov
xchg
shrl
sti
es
leave
add
or
mov
rol
mov
das
insl
and
push
adc
cmpsb
aas
dec
enter
outsb
jmp
inc
daa
sbb
mov
add
mov
testl
add
and
or
fcoms
add
mov
incl
je
add
mov
xchg
lcall
push
std
scas
mov
adc
jbe
jnp
xorl
or
jnp
xchg
adc
push
mov
scas
push
aad
xlat
xchg
jno
or
fs
inc
ss
pushf
lea
fcmovb
shrl
and
mov
repnz
mov
cmp
decb
cld
bound
sub
out
cmp
pop
push
jns
icebp
int
mov
ss
add
sub
or
jmp
arpl
and
mov
pop
sbb
and
add
xor
insb
fists
pop
push
or
mov
lock
jae
xor
push
dec
enter
mov
cli
ror
mov
mov
es
aad
mov
sub
adc
out
jle
jle
fmul
and
scas
jae
or
cmp
mov
lock
in
outsl
imul
sar
sbbb
pop
scas
test
ja
push
push
pusha
inc
nop
in
addl
push
ljmp
xchg
pop
mov
cmp
movsl
mov
push
divb
int
push
and
add
cli
xchg
pop
test
push
dec
icebp
std
inc
cmpl
or
cmc
enter
xchg
outsl
dec
pop
cmp
cmpsl
nop
jmp
inc
ss
insl
mov
test
add
es
xchg
or
into
add
or
cmp
das
jp
jge
icebp
fadds
cmp
repz
data16
pop
sub
imul
inc
jmp
mov
loope
push
adc
inc
fcmovne
lcall
hlt
out
test
mov
xor
mov
push
xlat
icebp
adc
push
mov
pop
mov
xlat
mov
popa
push
mov
adc
movsb
notb
out
adc
stos
mov
pop
mov
movsl
les
ljmp
pop
or
out
cli
fisttpll
mull
add
inc
pop
dec
xchg
call
or
test
jle
fistps
push
pop
inc
jb
dec
add
das
std
cmp
imul
sub
inc
aaa
cmpsb
stc
adc
pop
mov
test
push
cmp
jns
enter
bound
int
daa
in
fadds
sbb
decl
pop
out
mov
cmp
out
mov
test
out
out
and
mov
pop
cmp
lret
in
jb
dec
test
ljmp
mov
cmpl
xchg
out
sarb
les
popa
into
fisubs
cmp
adc
dec
ds
lret
push
xchg
adc
mov
mov
fbstp
jmp
dec
add
repz
pop
push
enter
cmp
dec
pusha
adc
mov
xor
jecxz
fucomip
jmp
xchg
sbb
pop
int3
jno
add
sub
xchg
add
jp
jg
mov
pop
jne
js
test
in
popa
roll
xchg
xchg
cltd
sbb
stos
stos
outsb
arpl
dec
mov
jg
jb
cmp
sub
addr16
pushf
mov
loop
loope
jmp
ud2
js
xchg
cmpsb
scas
xor
incl
jno
sub
sbb
mov
lds
sahf
cmp
rcrb
cld
xor
add
loopne
cmp
and
dec
inc
add
enter
div
repnz
inc
out
ret
cld
out
mov
cmp
adc
dec
shll
jp
jbe
mov
mov
mov
mov
pop
and
rclb
imul
sbb
addr16
out
pop
mov
xchg
test
inc
jb
decl
scas
mov
test
repz
sbb
scas
popf
adc
call
mov
es
mov
pop
loope
ljmp
loopne
add
mov
aad
aad
rcll
dec
in
jae
sub
mov
stos
fmuls
test
frstor
cmpsb
arpl
call
sub
pop
xchg
xor
push
cmp
les
jae
inc
bound
or
jp
lods
into
and
addb
inc
pop
repz
pop
inc
dec
cmp
jmp
in
loope
mov
mov
decl
dec
jmp
inc
scas
and
pop
call
push
xchg
jp
shl
shll
jne
jne
adc
pop
pop
aaa
mov
sub
and
xor
cmc
divw
ficoml
repnz
iret
cs
fimull
push
add
jbe
sbb
jne
mov
pusha
sbb
loop
bound
in
pop
data16
ret
lcall
add
jmp
inc
fbld
ret
movsl
je
dec
lock
cmc
jl
stos
xor
imul
push
mov
imul
and
sbb
pop
ret
xor
sub
mov
jecxz
pop
fcoml
lock
jnp
and
jnp
imul
mov
or
jne
sub
int3
scas
sub
imul
fisttpll
mov
xlat
imul
mov
ss
jne
mov
movhps
push
pusha
push
mov
push
mov
cmc
mov
orb
mov
or
pop
das
push
cld
xchg
icebp
push
popf
add
xchg
shl
push
push
adcl
jle
and
sbb
add
into
adc
ss
aas
and
mov
mov
adc
gs
sub
test
inc
fcomp
xchg
xchg
or
jmp
mov
pop
and
inc
add
jne
sbb
jo
mov
sbb
ret
mov
mov
and
mov
leave
cmp
shlb
push
andb
add
or
sub
jp
add
lods
loopne
push
rcrb
xor
push
and
mov
xorl
fs
pop
mov
incl
or
sub
sub
adc
pop
pop
sbb
ds
and
push
iret
jle
ja
xlat
je
or
repnz
sti
xchg
ret
insb
cs
leave
int3
mov
gs
mov
add
pop
or
add
mov
fs
dec
adc
jbe
in
pop
mov
jg
xor
les
dec
scas
insl
cmp
divb
jne
stos
hlt
repz
adc
xor
fidivs
rorl
jnp
lock
fidivl
mov
push
jns
mov
cltd
adc
lcall
cmp
ljmp
add
pop
mov
dec
nop
nop
add
mov
lcall
push
xchg
lret
aaa
dec
inc
adc
sbb
test
out
xor
jmp
aaa
push
das
cmp
push
mov
sahf
jle
aaa
jge
jne
or
push
cmpsb
test
pop
ljmp
ss
pop
je
das
imul
dec
mov
dec
or
xor
inc
xchg
loop
sahf
mov
sti
inc
push
sahf
pushf
mov
add
xchg
and
cmpsl
inc
pop
jl
sub
pop
sub
add
xchg
iret
push
call
mov
and
pop
ret
jnp
fmul
xor
sbb
rcll
pop
jno
inc
pop
ds
push
or
mov
inc
stos
test
push
in
jecxz
xrelease
jbe
dec
add
lahf
jge
icebp
pusha
or
xchg
jecxz
js
jbe
jae
lds
icebp
mov
scas
adc
aas
ret
inc
jle
adc
jle
testl
dec
cmpsb
jnp
jns
pop
outsl
gs
mov
scas
loop
jmp
das
dec
mov
test
dec
shrl
xchg
sbb
loopne
push
repnz
mov
in
adc
sub
or
push
ret
daa
movsb
inc
je
pop
leave
xor
outsb
or
cwtl
pop
scas
and
lret
adc
mov
pop
inc
and
cmp
rol
hlt
cmc
dec
dec
into
mul
hlt
test
xorb
xchg
add
mulb
jb
push
mov
mov
data16
and
mov
rcll
mov
pop
out
xchg
gs
fmulp
xor
xor
jp
repz
leave
cmpsl
jmp
idivb
daa
rep
and
fwait
sbb
pushl
dec
icebp
mov
fistps
cmp
sbb
dec
inc
mov
mov
inc
mov
xchg
mov
and
aad
sahf
jp
push
aaa
pop
shl
mov
sub
addr16
gs
xchg
loope
ljmp
mov
cmpb
xchg
jne
pop
xor
out
or
pop
loope
hlt
dec
test
sub
adc
loop
push
xor
adc
xchg
sbb
in
adc
mov
or
add
push
jl
jmp
add
sub
aad
pop
sub
mov
daa
push
adc
xchg
es
push
sbb
sub
cmp
call
sub
add
out
add
and
and
lods
aam
inc
xor
or
inc
divl
idivl
push
cmp
jbe
push
shlb
call
jo
ja
inc
cmp
pop
pushf
sub
pop
cmp
insb
hlt
int3
or
pusha
and
in
das
and
mov
addb
cmp
jl
ja
pusha
arpl
push
and
in
aaa
cwtl
inc
cld
mov
mul
lcall
and
mov
popl
mov
mov
sbb
dec
out
ljmp
imul
sub
bound
jecxz
lods
inc
mov
loopne
sbb
dec
into
fucomip
pop
jmp
lock
dec
in
push
rcrb
pop
mov
push
xchg
add
sub
int
inc
add
xchg
push
sub
xchg
sbb
sub
fstpt
shlb
mov
xchg
push
jecxz
pushf
ds
std
jl
movl
out
bound
mov
aam
shl
add
or
stos
sti
push
imul
mov
dec
mov
pushf
push
cmpsb
jo
call
ror
jmp
push
push
cmpl
dec
cltd
gs
daa
push
add
out
shll
mov
cli
ret
xchg
jl
outsl
jmp
fnstenv
cvtps2pi
cmp
xchg
adc
cmpsl
ds
shlb
aam
xchg
sub
pushf
icebp
jecxz
push
mov
lods
mov
xlat
test
stos
jle
mov
and
and
sub
jns
dec
sub
roll
and
mov
mov
sub
or
ss
fs
fcomps
imul
fmuls
iret
and
clc
pusha
inc
mov
fwait
jne
mov
xor
adc
or
movsl
cli
xor
js
popa
out
lock
pop
pop
scas
jns
cltd
pop
loope
add
negb
and
cli
mov
sahf
mov
test
popf
jno
int
fs
movsl
or
or
inc
loopne
int3
add
cmp
jae
mov
lahf
cmc
mov
xchg
in
mov
and
and
jno
mov
orb
mov
mov
push
mov
lods
and
les
stos
xlat
xchg
mov
loopne
mov
and
inc
sub
pop
xor
push
jp
push
mov
pop
outsl
stos
inc
aad
scas
insl
dec
sbb
test
repnz
add
clc
xor
pop
and
cmp
fmull
arpl
lahf
ret
stos
sub
out
mov
sub
jmp
pop
dec
cmp
fisubl
shlb
add
mov
test
push
adc
dec
xchg
inc
mov
bound
dec
icebp
fistl
lahf
sbb
mov
in
jns
push
ds
ja
shl
cmp
jp
lcall
fs
sti
xorl
or
mov
cmp
mov
dec
pop
int3
mov
scas
jae
cmpsb
add
inc
xchg
nop
shrb
sbb
push
push
jbe
mov
inc
int3
fistpll
mov
jne
add
ss
inc
aas
in
cmp
dec
imul
fisubrl
rep
jo
jns
dec
add
push
scas
les
lret
enter
jmp
push
gs
push
sub
add
push
mull
mov
push
cmp
ret
inc
loop
sbb
loopne
loopne
jecxz
add
cld
lods
mov
je
push
mov
out
jo
ja
mov
popf
or
cltd
xchg
xchg
jne
ret
shl
js
xor
push
add
add
mov
rcr
out
das
push
xchg
sti
fbld
scas
cmp
or
push
mov
out
fistps
loope
inc
lahf
int3
ds
inc
idivl
add
and
xchg
rcrb
jno
loopne
into
mov
ds
lock
sarl
mov
or
aam
movsb
in
mov
pop
int
push
or
jmp
mov
rorl
xchg
test
orb
dec
inc
pop
repz
pop
int3
out
cmc
push
fisttpl
daa
adcb
mov
inc
dec
adc
sbb
stos
xor
cmp
sbb
xchg
inc
outsl
testl
sbb
push
xchg
push
hlt
popf
push
add
lds
dec
scas
arpl
sub
es
inc
int
mov
jge,pn
inc
mov
pusha
pop
add
jne
jne
outsb
jg
xchg
lcall
xor
push
push
adc
aas
dec
incl
call
mov
cwtl
mov
andb
add
jmp
jne
mov
or
xchg
lods
mov
inc
shl
addb
mov
xor
mov
nop
xor
and
or
inc
mov
mov
or
mov
lock
xor
fimuls
shrb
lods
inc
jbe
xor
or
cmp
mov
jae
repz
xchg
out
fistps
mov
int3
scas
es
dec
outsl
sarl
xchg
xchg
fwait
movb
sbb
iret
add
jb
xchg
iret
jbe
out
jl
sbb
negl
insl
xor
mov
dec
xchg
fbstp
sarl
inc
lea
sbb
pusha
xchg
imul
mov
xchg
lea
jne
scas
pop
xchg
add
lcall
mov
andl
cmp
dec
sub
scas
pop
jge
push
mov
in
mov
add
dec
sbb
adc
dec
xchg
xor
sbb
jns
roll
pop
inc
leave
pop
js
dec
das
enter
xchg
lea
hlt
out
movsb
bound
stc
add
insl
cmp
sub
mulps
data16
add
jnp
stos
test
outsb
loopne
mov
push
test
dec
mov
mov
insb
shlb
sbb
out
sub
jle
ds
sub
ret
iret
push
cmp
fisttpll
xchg
out
es
mov
ja
in
enter
test
nop
shl
mov
and
fiaddl
mov
xchg
mov
lock
fsubs
rclb
sbb
mov
ss
cld
nop
xlat
adc
or
xchg
mov
gs
out
jbe
adc
add
test
cmc
push
test
push
in
dec
and
fcmovne
sub
cld
cmpsb
xchg
aaa
xor
dec
and
push
xchg
mov
shll
das
sbb
fldcw
and
imull
sti
mov
mov
dec
pop
ss
sti
jp
mov
sub
mov
adc
shl
inc
ljmp
sti
je
in
pushf
iret
add
xchg
adc
add
mov
in
mov
shll
sub
pop
mov
jg
je
test
adc
repz
bound
dec
rcll
cmp
loopne
adc
stc
adc
icebp
mov
test
movsl
or
mov
mov
sbb
scas
adc
xchg
xor
dec
scas
outsb
test
sbb
sub
jmp
jle
adc
sub
inc
push
test
int3
iret
and
push
add
push
jecxz
push
aas
mov
rorl
inc
loope
or
cmp
aaa
sub
outsl
arpl
add
fs
out
mov
and
hlt
pop
lock
mov
popf
adc
je
mov
push
push
sub
jbe
rolb
xlat
sbb
pop
jp
jge
cltd
test
stos
mov
cltd
mov
mov
jo
shrb
xor
popa
cmp
in
and
ss
out
cmc
or
lods
pop
inc
cmp
adc
push
mov
mov
xor
bound
pushf
hlt
test
lds
ficoms
test
sarl
js
stos
dec
mov
mov
pop
inc
les
inc
rol
shlb
sub
adcb
mov
insb
mov
daa
and
xchg
scas
in
cli
ja
in
mov
leave
push
and
ljmp
mov
aas
in
sbb
fstpl
sub
pop
gs
cmc
es
imul
clc
push
ffree
shll
mov
sub
jnp
bound
push
adc
adc
fwait
sbb
xchg
mov
data16
xchg
dec
imulb
fildl
inc
push
sub
add
cwtl
fsubl
xchg
out
add
or
sbb
mov
dec
loop
lret
popf
add
fimuls
in
fisubs
dec
insl
mov
leave
pop
int
mov
out
stos
pop
mov
pop
add
in
aad
mov
push
lahf
inc
push
xchg
cwtl
fsubl
mov
sahf
sbb
mov
dec
or
test
mov
sbb
popa
push
cmp
xchg
call
rorb
loop
cmp
lock
rclb
mov
jmp
enter
jge
js
push
mov
jp
loopne
inc
popf
je
fidivl
mov
mov
adc
stos
lods
orl
test
sub
mov
mov
add
mov
fcmovb
lcall
in
mov
scas
jecxz
outsb
enter
jns
xchg
mov
inc
mov
mov
mov
mov
push
add
stos
repnz
imul
cmpb
gs
add
rcrl
cmp
jb
mull
jbe
xchg
stos
in
mov
and
or
mov
or
inc
pop
fs
into
xchg
pop
jg
movsb
cltd
sbb
and
mov
gs
and
mov
mov
je
les
xchg
jge
jno
insb
xchg
loopne
mov
or
lods
pop
fiadds
pop
out
add
push
fiadds
fbstp
std
imul
push
xor
or
adc
rorl
subl
push
ret
adc
outsb
add
dec
cmpsb
mov
insl
repnz
xor
jg
xchg
push
mov
ss
cmp
xchg
aam
or
out
addr16
or
testl
test
fisttpl
mov
push
test
imul
mov
rorl
imul
mov
add
pusha
xchg
scas
sbb
scas
xor
out
cmp
bound
mov
sub
inc
mov
mov
ss
push
arpl
cltd
and
stos
in
sahf
inc
add
js
inc
jge
inc
inc
int
mov
ss
daa
je
ret
pushf
add
insb
mov
or
addr16
push
aam
pop
test
mov
and
sahf
nop
xor
adc
aas
jae
sbb
jl
addb
icebp
cmovg
sarl
call
inc
mov
aas
pop
mov
xor
xor
xchg
enter
sti
pop
cmp
rcl
lods
pop
inc
jge
pop
data16
je
dec
mov
js
dec
adc
dec
gs
sti
sbb
stos
lcall
les
or
ret
lret
sub
xchg
cmpb
sub
push
xchg
fdivl
inc
int3
ljmp
pop
cmp
rcrl
icebp
mov
inc
ss
je
push
push
bound
fcoml
xchg
int3
cmp
subl
outsb
cmp
repnz
sbb
or
jne
mov
sub
in
jge
and
xchg
daa
imul
pop
aaa
imul
or
ds
inc
cmp
cwtl
jns
or
cmp
xor
jno
sub
jp
or
test
cmc
pop
mov
mov
call
dec
inc
fld
jp
adc
in
and
xor
jg
leave
lret
push
inc
mov
jne
clc
pop
push
mov
faddl
add
f2xm1
xchg
lock
test
lcall
das
pop
lea
mov
inc
aas
push
sbb
mov
dec
mov
sbb
xchg
lea
xor
leave
int3
ret
jecxz
repnz
test
jp
and
push
outsb
stos
mov
aaa
mov
push
mov
add
mov
loop
dec
test
adc
and
in
es
push
call
aas
fidivs
mov
mov
sahf
in
push
dec
nop
sbb
imul
add
mov
sub
push
repz
push
int3
insb
sub
and
int3
andb
or
xor
dec
lret
xor
xor
fidivrs
and
fldl
dec
out
xlat
mov
and
jae
jg
test
push
sub
dec
aam
pop
xor
ja
pop
je
pop
inc
and
add
movsb
xor
bound
mov
dec
js
outsl
dec
pusha
lea
jbe
sti
daa
mov
daa
pop
sti
sub
sub
mov
cwtl
mov
jo
cmp
lock
jl
fisubl
das
repnz
js
movsb
out
or
mov
jns
push
dec
add
mov
mov
mov
int3
jmp
xchg
or
shll
adc
fdivl
out
jnp
testb
hlt
je
mov
jl
cli
cld
pop
outsl
pop
neg
xchg
scas
dec
mov
cmp
and
imulb
hlt
jge
push
inc
cmp
jle
cmp
mov
push
adc
sbb
cs
cs
xor
movsl
nop
push
dec
sub
popa
daa
ljmp
in
fmul
sub
push
mov
stc
push
push
dec
mov
and
das
lahf
shrl
pop
inc
push
pop
push
inc
call
js
aas
pop
ror
add
inc
pop
aad
push
or
movsl
movsl
cmp
nop
repnz
cwtl
dec
jmp
fildl
xchg
dec
lock
push
mov
dec
into
xlat
mov
mov
in
mov
adc
lods
ja
xchg
xor
nop
das
lret
mov
movsl
lret
out
and
jae
pushf
out
mov
inc
sub
aas
outsb
loop
adc
cld
sub
and
test
icebp
and
sbbb
add
js
inc
push
push
xlat
sub
stos
cmp
mov
push
fistps
les
xchg
jne
xor
imul
pop
ja
out
fstps
xor
xchg
into
lea
mov
mov
lock
test
ja
mov
add
mov
ss
inc
and
pushf
inc
xchg
jg
xor
cmpl
int3
sub
nop
xor
pop
dec
inc
ret
xor
movsl
lds
mov
xor
fsubr
adc
ljmp
lock
incb
outsl
or
lods
test
lods
daa
repz
in
xor
mov
mov
scas
das
lret
pop
aam
aad
test
or
rclb
mov
push
mov
and
sub
or
popa
outsl
or
push
jns
dec
xchg
mov
inc
pop
adc
push
ret
dec
je
mov
mov
es
call
and
sbb
movsl
pop
out
ds
sti
aaa
jnp
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fnsave
addl
sub
lret
cmp
fldcw
jb
mov
pop
cmpl
xchg
mov
sub
outsb
cmp
lock
out
fistpll
pop
bts
pop
jle
mov
into
jmp
sub
xchg
pop
aad
inc
fs
loopne
or
pop
adc
sub
fsts
jo
popa
add
stos
pop
int
inc
dec
rdpmc
push
mov
adcl
aas
fs
fdivrl
and
stos
clc
repnz
adc
pop
mov
add
loopne
add
xchg
pop
xchg
ljmp
inc
sbb
pop
in
lcall
sub
addb
cmpsb
inc
sbb
add
shlb
les
rcl
test
jg
and
pop
imul
mov
xchg
mov
mov
jmp
aas
je
adc
imul
add
adc
fucomi
mov
inc
fs
mov
inc
lret
cmpsb
in
cs
dec
dec
bound
push
sbb
jp
lahf
push
xchg
inc
xchg
jg
xor
out
dec
pop
sbb
mov
jb
xchg
mov
jnp
cmp
lods
mov
orb
in
popf
cli
or
cmpb
adc
sub
pop
insl
sbb
add
dec
jb
fcoms
ret
addr16
sbb
inc
outsb
stos
cmp
and
mov
jle
int
push
cltd
repnz
subb
xor
idivl
mov
imul
mov
adc
dec
repnz
sub
out
mov
xor
add
push
sbb
cmp
sub
jg
leave
pushf
shlb
pop
cmpsl
add
ds
loop
lods
mov
xor
jle
push
inc
cli
out
rol
fadds
out
add
sub
mov
loope
push
fistl
call
push
or
sti
imul
in
mov
stos
adc
or
dec
mov
loop
jo
xor
push
les
adc
lret
pusha
lds
add
pop
or
xor
leave
jl
sub
cld
jne
pushf
inc
jmp
push
mov
lret
push
mov
data16
das
xchg
movsb
mov
lock
insb
adc
sbb
dec
xchg
mov
enter
sub
xor
mulb
adc
loope
xchg
rcrl
sbb
dec
rcr
cwtl
inc
pop
cmpb
idivl
pop
xlat
push
jmp
xchg
call
dec
adc
mul
adc
stos
mov
mov
xor
inc
lods
pop
sbb
sub
push
push
fs
sbb
xchg
jmp
arpl
jae
cwtl
dec
push
lods
jp
push
ja
xchg
inc
stos
sub
xor
pop
cmp
cmpb
ja
out
push
daa
cmp
mov
jmp
and
js
in
or
pop
stos
movnti
daa
adc
mov
stos
jo
shll
jb
aaa
addl
aam
shr
inc
adc
ds
push
cmpb
or
shl
mov
daa
popf
aad
mov
fisttps
xor
jmp
adc
imul
scas
push
pop
push
adc
loop
in
clc
out
adc
lret
pop
cmp
insl
fdivl
out
xchg
add
mov
xor
cmp
in
pusha
push
or
lock
call
call
xchg
es
sahf
jne
mov
stos
push
in
stos
repz
dec
mulb
pusha
jecxz
mov
insb
pop
xchg
pop
sub
outsl
push
cmp
inc
or
pop
stc
aam
add
dec
and
xor
and
inc
xchg
inc
shrb
mov
sbb
rorl
popf
inc
addl
push
or
xchg
pop
and
sbb
mov
jg
mov
or
loop
mov
scas
loope
push
ret
movsl
into
or
push
mov
cli
shll
mov
ds
and
in
aam
jo
nop
fs
mov
ljmp
cli
mov
loopne
nop
test
ret
and
jb
fistpll
call
and
push
fsubrl
imul
xchg
push
xchg
xchg
fcoml
pop
jae
inc
cwtl
push
push
jns
add
rol
inc
lods
jo
shl
das
inc
popl
pop
jmp
stos
ljmp
scas
imul
dec
in
xor
arpl
pop
mov
push
push
add
es
pop
loopne
mov
ret
jbe
jle
pmaxsw
push
jmp
xchg
movsb
mov
jbe
add
cmp
or
scas
push
xchg
fildl
mov
aaa
sbb
aad
xchg
and
xchg
ret
or
sub
loope
mov
or
ds
dec
pop
xchg
dec
je
pop
adc
pop
mov
sub
stc
mov
push
addr16
cli
push
out
bnd
jge
rclb
jmp
test
mov
rolb
jb
add
xchg
shrb
nop
mov
xchg
pop
lcall
pop
shll
mov
jno
outsl
xchg
pop
jp
stos
mov
lods
ja
sbb
test
out
xchg
dec
push
or
fimuls
dec
adc
outsl
scas
fwait
rorb
fldt
lds
sbb
lds
mov
daa
std
or
and
xchg
xchg
sti
movl
imul
pop
lret
jmp
inc
repz
push
jmp
daa
add
pusha
clc
inc
push
sbb
arpl
cmp
in
leave
and
xchg
push
cmp
adc
rcll
jbe
or
out
jbe
sub
pop
xor
push
pop
sub
xchg
inc
pop
insl
xor
ja
xchg
add
out
cmpsb
dec
xchg
push
inc
outsb
rclb
add
loop
jae
popa
arpl
pusha
rclb
out
stos
xor
out
push
iret
aad
cmpsb
sub
insb
daa
cld
mov
mov
popf
cpuid
cltd
mov
cmp
cmpsl
jmp
xchg
xor
mov
cmp
xchg
mov
mov
scas
je
or
jecxz
sbb
jae
mov
add
xor
cmp
jno
inc
lahf
sbb
pop
jns
fucomp
out
jg
ret
cmp
lea
xchg
test
adc
outsl
adc
push
adc
daa
and
mov
jo
mov
and
jl
mov
cmp
arpl
jb
cs
das
aas
popf
cmp
dec
pop
fsubl
int3
rolb
int
cli
fnsave
inc
rolb
dec
sub
mov
or
ret
cmp
mov
nop
aas
mov
push
pop
lea
push
push
lods
gs
and
push
push
mov
adc
pop
cmc
in
in
sub
fstpl
mov
cwtl
addb
mov
mov
pop
call
mov
test
mov
cs
and
nop
mov
mov
sub
ljmp
loope
adc
ficomps
leave
dec
popf
roll
jno
aad
addr16
xor
dec
lds
mov
push
stos
call
xor
sbb
pop
mov
xlat
mov
or
inc
inc
adc
insl
jge
inc
push
lcall
cmpsb
movsb
sub
repnz
jns
bound
mov
or
aaa
in
hlt
push
insl
sub
fcoml
stos
or
xchg
dec
dec
ja
test
les
call
jmp
inc
cwtl
mov
nop
lret
imul
mov
iret
pop
sub
sbb
mov
scas
mov
push
push
fwait
not
sti
ja
xchg
addr16
xor
divl
data16
data16
fs
lret
imul
lock
movsb
lods
xchg
dec
mov
or
loop
mov
dec
test
outsl
filds
cmovs
inc
notb
ja
pop
dec
je
shlb
loop
jno
call
mov
cmpb
rorl
cli
std
sub
sub
sbb
pop
sbb
fisubl
xchg
lahf
fs
xchg
mov
lea
dec
rorb
lret
mov
aad
pop
and
nop
bound
mov
mov
cli
pop
fstpt
jmp
pusha
adc
xchg
pop
dec
rcll
nop
jne
cmpsl
jns
cld
sub
in
or
inc
shl
mov
xlat
or
aam
pop
push
sbb
jle
pop
adc
and
cwtl
push
add
out
gs
or
xchg
sub
xchg
jo
dec
ret
and
aas
pop
push
bnd
dec
test
add
jbe
pop
ljmp
mov
bound
and
and
insb
lret
dec
mov
mov
mov
aaa
push
popa
imul
adc
enter
dec
sbb
test
movsl
jo
xchg
pop
repz
push
mov
pushf
and
scas
lock
out
adc
xor
pop
sbb
int3
pop
fsts
fdivs
test
adc
aas
je
dec
cmpsb
adc
fs
pop
jns
pop
jbe
mov
lcall
ret
push
mov
jecxz
jne
add
mov
jmp
icebp
sahf
adc
and
xor
jae
lea
rcll
aad
cltd
les
lock
mull
inc
fsubl
mov
dec
into
mov
and
loop
jp
movsb
inc
jecxz
mov
mov
sub
mov
adc
push
pushf
dec
push
fwait
jge
cmc
xchg
ja
ficoml
xchg
addb
adc
jbe
fwait
lret
jge
scas
jp
aam
and
lods
loop
repnz
pop
inc
xchg
xor
mov
loope
mov
rcll
cmc
sar
cmp
sbb
cwtl
pop
jg
aam
cmpsb
inc
lods
scas
cmpsb
inc
and
mov
jno
aad
push
pop
test
shll
cmpsl
sbb
mov
jle,pn
mov
lea
test
xchg
ss
lahf
repnz
mov
test
loop
pusha
mov
incb
enter
out
stos
cli
inc
mov
inc
push
pop
out
mov
cmp
movsl
in
mov
pop
in
or
dec
aam
scas
xor
mov
xchg
push
push
pop
mul
mov
inc
ret
cmp
and
aad
add
aas
aas
push
in
notb
pop
mov
inc
insb
add
aas
pop
out
in
add
ret
cltd
pop
push
push
fidivrs
pop
inc
pushf
ret
xchg
fwait
pop
iret
clc
pop
addl
in
cmc
fstps
xorl
jo
push
out
nop
cmp
in
insl
out
rorb
mov
xchg
enter
add
adc
test
cmp
insb
cmp
sub
mov
pop
insb
jle
rolb
cmpsl
mov
fiadds
mov
dec
mov
push
sbb
add
int
dec
push
repz
js
fwait
dec
or
push
xlat
jno
lcall
aas
adc
movsb
and
outsb
inc
push
lock
mov
push
push
sub
lcall
cltd
sbb
xchg
pop
outsb
sbb
push
push
clc
dec
sti
stos
outsb
push
mov
movsl
daa
std
loop
sub
jmp
in
pushf
rolb
dec
xlat
scas
int3
pop
fmull
leave
adc
fcmove
lret
mov
push
sbb
lahf
or
mov
pop
clc
imul
shrl
add
leavew
aas
push
loop
or
dec
fcmove
neg
clc
divb
dec
or
jnp
dec
insl
cmp
mov
sbb
sub
scas
mov
std
adc
sub
cmpsl
cmp
adc
enter
sub
jmp
pop
push
ret
mov
xchg
scas
aas
fldcw
ja
icebp
xchg
push
xlat
cltd
pop
stos
fldt
out
lret
mov
out
or
fcomip
ret
jbe
cmpl
jecxz
add
pop
mov
and
adc
mov
pop
idivb
cmp
shll
mov
lds
dec
sbb
jle
sbb
sub
xchg
mov
out
mov
mov
add
jecxz
loope
imul
aas
aad
cwtl
andl
data16
xchg
in
leave
jae
push
pop
cmpsl
in
andl
lods
push
cmpsl
push
jnp
inc
cld
cltd
test
call
pop
into
push
mov
mov
jmp
int
stc
jp
jle
cltd
sub
adc
sbb
or
mov
addr16
outsl
xchg
mov
fwait
clc
cmp
jl
sub
xchg
inc
jb
ja
mov
sbb
hlt
cld
out
cmp
dec
or
mov
test
dec
das
pop
cwtl
subl
add
xor
mov
mov
fucom
les
dec
orb
orb
xor
lds
push
add
cmp
sbb
xor
adc
in
repz
lods
insb
dec
lcall
aaa
test
mov
xchg
jecxz
sub
inc
xor
mov
popf
and
pop
cmp
lods
dec
mov
mov
jge
movsl
adc
das
jle
int
push
test
rol
out
pop
and
push
aaa
lock
std
pop
stos
clc
fldcw
sbb
pop
popf
out
mov
repnz
cli
jge
push
xchg
push
lock
dec
movsb
jbe
rolb
push
roll
lods
insb
adc
es
addr16
inc
or
mov
lret
stos
jb
and
mov
repz
test
clc
popf
jmp
dec
mov
lods
jmp
push
outsl
sahf
js
orb
stos
mov
maxps
dec
or
adc
add
cld
push
dec
jl
push
push
mov
out
mov
aaa
and
xchg
jb
jp
pop
imul
sbb
sub
xlat
jo
arpl
mov
mov
js
or
push
aaa
mov
pop
mov
jecxz
ror
ja
jp
push
mov
ret
and
xor
lret
pop
fildll
xor
and
pop
int
cs
mov
iret
imul
xor
dec
repnz
push
inc
fldcw
and
pusha
push
xchg
push
push
int3
push
sub
pop
jp
lds
sub
sub
jmp
out
icebp
fsub
js
cmpsb
push
fildll
std
sbb
cmp
paddsb
notb
xor
sub
lret
adc
sub
test
jecxz
pop
cmp
cltd
mov
adc
and
movsb
mov
xchg
sbb
out
dec
mov
lcall
jge
popf
sbb
jne
pushf
loope
dec
fadds
pop
xor
mov
jno
and
sbb
ja
cwtl
push
mov
cmpsb
aad
mov
arpl
pop
jmp
mov
lea
leave
sub
sahf
jns
scas
das
ret
sub
mov
rcrb
cvtdq2ps
dec
mov
xchg
mov
fs
sbb
call
out
cli
push
and
dec
sub
out
movsb
fidivl
mov
mov
adc
xchg
out
dec
jp
push
dec
xchg
pop
lods
push
mov
cmpsb
jg
movsl
insb
ret
jb
push
test
xchg
imul
call
mov
adcl
xchg
pop
out
inc
sti
mov
rol
jnp
inc
add
add
pop
xchg
jae
pop
pop
jne
xor
fwait
push
fsubl
ja
popa
inc
addr16
mov
mov
inc
dec
out
mov
push
fistpll
add
mov
or
aaa
mov
and
adcl
fwait
inc
xchg
cmp
inc
pop
enter
pop
call
into
shll
out
fisttps
hlt
sub
xor
xchg
sub
leave
popa
cmp
lods
insl
ret
xchg
xchg
mov
in
roll
loopne
sar
rorb
jl
push
push
fsubl
dec
and
or
adc
out
flds
mul
dec
gs
mov
insl
ret
add
sub
fisubl
shrl
neg
cmp
mov
imul
xchg
xchg
add
out
add
aad
shlb
shll
push
cmc
into
and
cmpsl
add
imul
fisubrl
testl
xchg
insl
pop
cwtl
leave
ds
push
push
aam
insl
and
mov
into
push
jns
adc
adc
dec
jmp
inc
test
xchg
test
mov
or
push
cs
push
or
in
fisubrl
xchg
jmp
insl
cmc
into
das
enter
push
roll
loopne
cmp
inc
popf
enter
adc
sbb
subb
nop
imull
xor
add
mov
shl
repz
mov
mov
cmp
add
loopne
lods
je
movsb
notl
shl
popa
pop
cld
dec
nop
mov
xor
ret
xor
rolb
jo
stos
push
dec
sub
or
xchg
push
pop
sub
scas
jmp
sbb
icebp
outsl
add
cmp
or
iret
push
loopne
fbld
jg
lret
or
adc
movsl
cs
arpl
mul
fcoml
dec
jnp
pop
cmp
scas
adc
ret
jecxz
mov
js
or
or
mov
xor
jae
adc
lods
adc
xchg
inc
mov
lret
inc
push
pop
shr
cmp
sub
clc
fiadds
pop
cmp
mov
jge
xchg
jnp
sbb
xchg
jle
fiaddl
jo
mov
jge
data16
push
mulb
jecxz
inc
dec
push
cmp
loopne
in
mov
push
inc
fldl
loopne
scas
lds
sub
test
pop
add
pushl
fisttpl
add
push
pop
bnd
or
ficomps
hlt
mov
and
mov
in
push
push
push
cltd
inc
pop
mov
pop
xchg
mov
insl
push
push
push
push
rcr
lds
cltd
and
cmp
lea
fcoml
insl
sbb
stc
dec
hlt
sbb
jge
mov
inc
movsl
int
xor
push
scas
lahf
xlat
mov
cmp
cmpsl
mov
push
add
jmp
add
mov
jle
outsl
xchg
adc
loop
test
lcall
sub
stc
lret
outsb
or
mov
jno
add
pop
jg
movsl
jecxz
popa
pop
pop
dec
mov
dec
cmp
stc
inc
aad
mov
add
mov
jmp
mov
and
scas
inc
stos
ljmp
in
mov
ret
leave
adc
pop
add
sbb
xchg
mov
jno
lods
scas
scas
add
mov
inc
addr16
test
sbb
and
ja
shrb
dec
pusha
fs
not
sub
aad
out
xchg
mov
popa
stos
bound
test
inc
jne
es
ret
data16
inc
and
outsb
xchg
mov
ret
rorb
movsl
add
loop
mov
cmp
sub
jp
pusha
push
nop
sahf
test
loopne
xchg
pop
xchg
call
jg
mov
movsl
lcall
push
repz
mov
xchg
aam
pop
hlt
xchg
cs
mov
sub
ja
ljmp
aas
xchg
jbe
add
xchg
stos
push
cmp
mov
pusha
pop
fisttps
add
push
fimuls
and
or
or
mov
push
or
sbb
mov
xchg
faddl
mov
cmp
mov
pop
push
test
inc
lret
cmp
test
and
mov
mov
sub
sarl
sbb
fldt
pop
jle
pusha
ja
push
fidivrs
movsl
xchg
dec
and
jbe
pop
xchg
stos
outsl
xor
xchg
push
pop
inc
out
jbe
push
mov
or
dec
lret
inc
ret
jmp
xor
incl
sahf
jb
daa
mov
jo
mov
es
mov
adc
dec
aas
inc
subl
adc
and
jle
jge
lea
cmpsb
pushf
fistpll
aas
push
lods
cmp
push
data16
lods
pop
pop
push
lret
dec
into
cmp
movsl
xor
mov
fcoms
in
clc
mov
fsubs
ret
lods
pop
push
cmc
mov
loop
xchg
lea
xor
into
sbb
sbb
xchg
iret
cs
jb
xchg
mov
jp
loopne
mov
les
push
xlat
xor
or
repnz
popf
sbb
lods
pushl
hlt
inc
loop
rolb
stc
out
jmp
mov
inc
jle
add
pop
add
insl
mov
add
ljmp
hlt
imul
pushf
mov
xorl
loop
cmp
mov
cmp
mov
daa
xchg
or
adc
mov
sub
mov
test
and
xchg
jge
and
fistpl
xchg
es
mov
notb
daa
cmp
push
push
jns
and
hlt
outsl
repnz
push
das
add
cs
jl
pop
fsubl
shr
sbb
mov
pop
inc
shrl
xchg
push
or
adc
add
jl
in
pop
fists
mov
pop
mov
pop
mov
fldt
pop
push
add
dec
stc
mov
daa
dec
popf
lds
xor
cld
cmp
loopne
pusha
inc
dec
sbb
push
inc
mov
out
rcll
mov
and
outsb
adc
sbb
cmp
pop
mov
cwtl
fmul
xchg
iret
mov
xor
das
fldcw
cmp
sbb
mov
push
fcoms
xchg
sub
test
flds
popf
push
lcall
out
add
ds
push
addr16
mov
mov
outsl
pop
imul
mov
icebp
and
adc
rcr
test
and
insb
cwtl
jg
cmpsl
inc
jne
in
pop
mov
cmpsb
jae
sub
push
cmp
mov
jbe
shl
sbb
mov
imul
fs
imul
mov
movups
into
mov
adc
xchg
lock
dec
jno
scas
or
and
jmp
pop
popf
mov
fistl
mov
enter
mov
jns
mov
mov
int
arpl
inc
fucomi
test
xor
nop
mov
fidivrl
xchg
mov
in
push
dec
add
xchg
aad
test
imul
fimull
mov
push
in
jle
pushf
lods
out
int
push
loope
dec
sub
repz
shlb
ljmp
mov
mov
mov
dec
loopne
jmp
loop
xchg
adc
lret
mov
nop
sub
pop
cmp
xor
ja
roll
rcrl
mov
fldt
ficoml
sahf
adc
mov
pop
xorl
arpl
push
mov
xchg
jp
push
verr
imul
push
arpl
xor
xchg
mov
ret
pop
aad
insl
aaa
fs
xchg
es
or
add
xor
test
mov
fidivrs
cmp
mov
push
arpl
jmp
xor
sub
add
mov
imul
cmpsl
aas
jmp
loop
test
cli
push
push
inc
out
dec
jecxz
jne
sub
push
or
and
loope
and
adc
adc
inc
enter
pop
sub
jl
pop
fs
or
and
or
scas
mov
pop
xor
cmp
mov
int
xchg
ss
imul
dec
cmp
xor
fadds
xor
dec
insl
push
sub
mov
hlt
sub
sub
pop
subl
idivl
bound
add
or
out
scas
adc
xor
xchg
rcl
mov
rclb
push
mov
daa
addr16
xchg
js
pop
mov
out
add
fisttpl
pop
lods
mov
and
push
in
ret
pushf
mov
jns
sbb
cmp
filds
repnz
insb
mov
push
add
rorl
pop
dec
out
jbe
test
add
push
mov
xchg
sbb
js
test
mov
mov
mov
push
mov
or
movsb
xlat
jb
adc
pop
cmp
push
xchg
lds
lea
or
add
stos
xor
mov
dec
push
push
addr16
sbb
xchg
movl
inc
sbb
mov
add
jl
cmp
sahf
in
in
lock
sbb
xchg
cmp
mov
dec
dec
jmp
add
or
mov
adc
mov
push
mov
lcall
jae
insb
pop
dec
jbe
mov
stos
outsl
jbe
loop
loopne
movsl
std
int3
shl
adc
aad
fwait
add
aam
jmp
aaa
sub
inc
imul
jp
adc
ds
jp
or
sub
pop
daa
and
push
stos
sub
daa
mov
push
fistps
ret
xlat
push
in
lea
push
mov
cmpsb
in
popa
aaa
imul
out
movsb
mov
out
mov
popf
push
leave
mov
popf
jbe
int
testb
adc
pop
rolb
rclb
xchg
rcrb
xor
xchg
pusha
mov
sbb
hlt
jns
push
xor
sbbl
xlat
jae
test
addr16
sarl
repnz
and
mov
addb
mov
adc
lea
rcl
pop
into
ret
das
in
outsb
fwait
mov
std
vandnps
xor
xor
ljmp
dec
jbe
in
xlat
bound
cmpsb
jge
and
fs
mov
mov
movsl
or
cmp
sub
cs
int3
repz
mov
push
push
inc
mov
mov
dec
xchg
or
stc
fwait
mov
mov
pop
dec
xor
xor
imul
repnz
push
test
add
lret
das
arpl
mov
push
aaa
out
adc
mov
sti
lds
dec
stc
push
ss
push
jb
int
stos
outsl
out
jl
leave
mov
gs
rorl
adc
xor
pushf
pop
data16
xchg
aas
lret
and
aas
fistpll
pop
sbb
imul
sub
dec
xor
inc
mov
mov
xchg
mov
cmc
mov
and
inc
cmp
cmp
add
mov
pmuludq
cmpsl
mov
dec
out
jnp
or
fiaddl
fidivrl
dec
fwait
shrl
ret
adc
pop
ja
mov
stos
mov
mov
iret
pop
sar
sbb
in
arpl
dec
adc
outsl
imull
clc
iret
push
jno
and
rcll
das
div
ss
sbb
push
stos
xchg
adc
jne
jo
cltd
cld
push
sbb
ljmp
int3
imul
ret
ret
jo
cltd
fisubrl
stc
cmp
adc
lods
out
mov
xchg
imul
push
add
jne
and
inc
add
int3
ret
subb
in
fsts
jecxz
out
push
mov
pusha
dec
cmp
inc
inc
call
adc
ja
cmpb
mov
test
push
xor
xchg
pop
outsb
stos
or
cmp
mov
lods
adc
dec
cwtl
ss
out
xor
cmc
loop
arpl
mov
jae
shrl
mov
nop
mov
call
inc
fadds
repz
mov
es
fidivl
cmp
movl
rclb
mov
sahf
lock
ljmp
adc
or
and
aas
jb
jge
sbb
jns
ds
js
cmp
sti
mov
jno
ficoml
pop
mov
jle
add
aas
mov
cmp
testb
or
dec
adc
lods
cli
ss
jae
fnstenv
mov
mov
mull
add
repnz
test
or
mov
pop
or
sarl
ja
xor
into
stos
pop
jecxz
cmpsb
mov
mov
lds
jmp
and
xor
mov
cli
and
js
mov
iret
mov
sub
adc
sub
push
push
lret
push
and
fdiv
xor
ja
jp
sarb
loop
mov
push
push
adc
lock
out
repnz
sub
cmp
in
xor
nop
or
das
sbb
or
sbb
insb
push
stos
cmpb
stos
mov
push
gs
insl
shlb
test
inc
adc
xchg
mov
xor
insb
cmp
ds
es
pop
shlb
in
cmp
pop
jnp
aam
xchg
fwait
lds
nop
add
adc
mov
inc
insl
into
or
mov
pop
test
cmp
aaa
jae
out
pop
int
imul
bnd
jle
adc
xorl
jp
in
adc
aaa
xchg
mov
jp
jno
dec
nop
std
lret
test
es
rcl
add
adc
lret
jmp
in
pop
popf
push
adc
xorl
aad
push
adc
dec
adc
sub
lret
push
mov
aas
insl
xchg
jnp
mov
jae
iret
lock
add
ror
out
mov
sub
in
das
inc
fs
adc
mov
inc
pop
fwait
dec
in
or
subl
sbb
push
add
ret
decl
daa
xor
scas
or
cltd
xor
scas
sbb
cmp
adc
push
add
jmp
lock
push
add
push
or
jbe
jbe
xor
fsubrl
xchg
cmp
xchg
fstpl
sbb
and
xchg
rol
jmp
add
test
push
clc
mov
add
inc
das
xchg
cmc
stos
popf
imul
test
jno
mov
or
sbb
pop
sti
xlat
mov
mov
cltd
aam
test
shlb
jle
sets
push
pop
aaa
lods
out
xor
jp
mov
mov
fistl
push
test
sti
int3
push
mov
enter
pop
sbb
pop
lods
je
or
lods
movsl
mov
xor
mov
rorl
insb
cmp
mov
pop
out
xchg
sti
sub
popf
and
mov
cli
cmp
outsl
lcall
jp
jle
push
fcompl
shrl
cmp
and
imul
push
dec
inc
mov
dec
push
mov
sbb
xchg
push
cmp
pop
mov
pusha
inc
cmp
imul
jno
pop
sarl
jg
test
or
dec
pmaddwd
jno
ja
scas
inc
movsb
mov
pop
cs
inc
fs
xchg
lods
cmpb
ds
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
jne
test
cmp
sbbl
push
xchg
jns
and
aas
pop
cwtl
pusha
in
and
sub
jmp
ja
pop
mov
cld
xchg
pop
push
ljmp
cmpsb
xchg
push
cmp
or
sub
ljmp
mov
cmp
lret
cmc
je
push
mov
shll
sahf
int
add
jecxz
xchg
js
insb
dec
shlb
dec
adc
jmp
jnp
shrb
ljmp
fidivrl
or
jge
in
rcr
jmp
arpl
xor
and
cmp
addr16
and
in
xchg
in
adc
mov
add
test
or
gs
enter
in
pop
cmp
sbb
cmp
pop
adc
jg
shlb
test
inc
dec
pop
xor
add
ljmp
sbb
cld
out
test
test
hlt
pop
xor
jbe
add
addb
or
adc
push
dec
xor
sub
sbbl
pop
mov
mov
add
mov
pop
and
and
mov
pushw
mov
enter
arpl
aaa
jbe
jnp
lods
inc
pusha
bound
fisubrs
jae
sbbl
lods
mov
cmp
lods
sub
in
or
mov
xchg
sub
stos
loopne
xor
add
scas
icebp
push
inc
arpl
pop
push
jo
lods
insl
sbb
fs
jecxz
repz
js
adc
sbb
sub
push
mov
push
and
test
dec
lahf
js
ds
loop
cmp
lea
and
jne
dec
ftst
aaa
aaa
rcll
shlb
enter
cwtl
scas
add
lahf
dec
xor
xchg
cmp
loop
test
mov
das
push
mov
loop
push
mov
push
mov
xchg
pop
gs
popa
cmp
jns
pop
push
or
pop
lock
cltd
cmpsb
xchg
cli
xor
mov
mov
push
jb
cmp
and
dec
test
hlt
mov
add
xor
daa
je
and
out
inc
adc
mov
add
aas
xlat
xor
push
test
add
fnclex
sub
notb
shrb
ret
cmp
daa
cwtl
xchg
mov
adc
xor
in
adc
adc
or
mov
lcall
push
jns
pop
pop
cmp
dec
cmp
scas
xor
sahf
popf
sub
jge
sub
dec
lods
ljmp
and
push
icebp
or
mov
stos
dec
aaa
xorb
repz
out
xor
and
test
cmp
int
xor
xlat
mov
iret
and
dec
hlt
fisubrl
lahf
xchg
and
inc
ret
xchg
sbb
inc
imul
push
test
sbb
sbb
pop
fwait
cmp
sbb
mov
dec
addr16
push
inc
ss
and
movb
add
shll
iret
sub
add
jmp
cli
dec
jle
dec
dec
ds
sbb
mov
cmp
xchg
lret
popw
cmp
mov
push
fwait
cmp
insb
in
and
xchg
jae
sbbb
or
jmp
xor
loope
call
addl
clc
inc
push
xchg
inc
add
not
scas
nop
or
cmpsl
push
adc
mov
ficomps
pusha
push
cmp
adc
push
mov
scas
sub
aas
incl
repz
or
dec
cmp
fcoml
mov
cmp
pop
dec
adc
sbb
sti
xchg
cltd
xor
imul
aaa
stos
out
xchg
and
lret
pop
cli
daa
mov
je
dec
and
into
mov
and
ja
ror
mov
in
xchg
in
sbb
arpl
aad
mov
push
or
jne
mov
xchg
push
mov
push
or
lods
mov
pop
test
push
push
int
xchg
out
xlat
enter
sahf
push
mov
xor
in
repz
lods
inc
fsubrs
test
jle
cltd
pop
adc
jecxz
inc
cwtl
inc
fs
aaa
in
sbb
pushf
or
add
dec
hlt
out
es
lea
call
mov
int
sbb
mov
or
stos
push
stc
call
xchg
xchg
aad
add
rorb
jb
shll
push
outsl
xlat
repnz
jns
cli
stc
pop
xchg
jo
dec
pusha
sbb
lcall
cmc
sub
out
dec
into
cmp
out
imul
inc
dec
mov
xor
jecxz
inc
and
sub
fnsave
ficompl
dec
fnstsw
xchg
push
pop
cmc
push
jl
test
dec
js
mov
loop
int
icebp
and
mov
push
cld
hlt
fnsave
in
lahf
test
mov
push
cmpsb
cmp
mov
jle
gs
cltd
dec
dec
lock
pop
aas
in
and
jp
lret
mov
mov
shr
or
pop
and
jb
mov
jb
push
dec
ds
mov
mov
loopne
mov
mov
sub
cmp
jecxz
dec
rcr
gs
mov
sbb
scas
loop
and
sbb
xchg
fimuls
mov
pop
hlt
test
cmp
roll
jecxz
ret
push
xchg
in
mov
stc
sbb
mov
push
xor
scas
stos
out
inc
dec
inc
repnz
sub
xor
outsl
or
or
es
mov
push
sub
repz
fwait
mov
insb
mov
cmp
sub
addr16
mov
ret
out
lcall
add
gs
cmpsb
sub
pop
out
sbb
outsb
jae
std
in
shrl
pop
jge
adc
into
dec
pop
in
nop
sub
cs
push
mov
sub
pop
dec
dec
dec
lcall
add
lahf
or
jecxz
out
sub
icebp
mov
xchg
sub
test
sub
aad
push
push
fsubs
mov
lret
jae
mov
mov
adc
pop
popf
and
inc
mov
mov
xchg
andl
inc
xor
mov
mov
loop
jg
push
js
mov
das
xor
dec
push
icebp
pop
addr16
xor
sbb
cmp
scas
and
jle,pt
stos
mov
sbb
orb
pushf
mov
xchg
popa
dec
jo
or
imul
clc
test
mov
movsl
jns
scas
add
insb
pop
inc
movsl
cmp
ret
ret
dec
inc
push
arpl
push
sbb
push
jb
push
cltd
enter
dec
mov
cs
and
pop
pop
sub
mov
cmp
or
enter
mov
mov
gs
add
mov
shll
cmp
and
rcrl
shl
add
xor
push
add
xor
pop
test
loope
push
jle
fldl
or
xchg
xchg
mov
sbb
ja
or
jmp
enter
ds
mov
cmp
shl
faddl
lcall
aam
out
dec
push
pop
stos
inc
out
xchg
add
dec
jnp
repz
mov
push
shlb
rol
and
or
dec
sbb
sbb
dec
mov
cld
xor
and
enter
xor
xchg
dec
adc
mov
loope
lea
imul
jno
jne
jne
xor
cmp
fidivrs
addr16
mov
imul
pop
iret
jnp
dec
jg
jmp
mov
dec
sub
jb
jl
testb
les
and
and
loop
xor
data16
aaa
test
mov
adc
ja
inc
xchg
out
lea
cmp
lahf
test
pop
mov
std
add
loope
sti
push
adc
mov
jno
jl
call
popa
sbb
cmp
xor
idivl
repz
std
or
jmp
sahf
popf
pop
mov
mov
popf
cmp
cmp
sub
test
xor
stos
sub
pop
mov
addl
mov
jp
insb
adc
rcrl
or
mov
lods
xchg
mov
out
cmp
sub
outsb
mov
pusha
iret
lods
ds
pop
mov
inc
pop
int3
dec
icebp
test
mov
out
scas
fwait
pop
mov
or
shl
adc
pop
popf
xchg
mov
or
popa
in
jbe
xor
loopne
lea
xchg
jns
test
fistps
pop
xchg
mov
test
push
in
push
dec
enter
addr16
dec
jbe
fsubrl
mov
push
popa
test
sbb
data16
stos
aaa
std
leave
mov
call
xchg
pop
ds
gs
shl
imulb
rclb
test
inc
jge
or
imul
lahf
inc
xchg
popf
adc
sub
add
adc
jno
scas
mov
into
js
or
mov
pop
xchg
inc
cmp
orb
add
and
adc
or
call
xor
sahf
out
sub
into
cli
nop
cltd
cli
fimuls
mov
or
adc
inc
lds
cmp
and
cmc
pop
cmp
pop
or
cld
and
dec
in
mov
add
and
shll
jns
jl
shlb
adc
mov
xor
and
mov
loope
out
ss
insb
fucomi
sahf
jl
or
loope
jg
dec
jns
loopne
addr16
lods
popa
sarb
aad
lods
mov
cmpsb
jmp
testb
aas
adc
insb
dec
stos
pop
popf
xchg
fbstp
xchg
out
stc
inc
mov
inc
cmp
mov
fdivr
scas
push
inc
lods
xor
push
pop
mov
ret
imul
mov
loopne
add
jbe
mov
push
movsl
aas
jbe
mov
fdivp
and
add
sbb
sbb
pop
mov
push
dec
xchg
movsb
dec
std
push
jle
loopne
rorl
sbb
int
sbb
mov
inc
add
pushf
or
addr16
ss
or
les
mov
or
add
jbe
frstor
enter
xchg
mov
jo
cmpsl
enter
lea
xchg
daa
dec
stos
lret
mov
pop
cmp
pushf
and
cli
inc
xor
and
fstpl
xor
push
adc
popa
pop
inc
add
mov
stos
inc
leave
dec
or
sub
sub
mov
mov
push
pop
or
pop
inc
xchg
mov
mov
dec
lds
jbe
hlt
icebp
dec
mov
gs
test
fwait
mov
repz
inc
clc
cld
je
ret
xchg
push
dec
add
mov
mov
push
mov
lds
lods
ja
insl
js
push
fdivrl
or
xchg
xor
mov
je
scas
mov
gs
pop
xchg
jecxz
cmp
rcll
shr
aaa
cmp
jno
insl
sbb
test
lret
push
mov
cmp
cs
out
xor
cmpsl
int3
movsl
cs
push
cwtl
add
lcall
sbb
push
loop
mov
shl
push
bound
cli
pusha
push
or
fisttpl
dec
pop
push
mov
inc
sar
mov
xchg
lock
add
push
inc
add
ja
cmp
push
shrl
adcl
mov
in
sub
jo
mov
xlat
inc
dec
inc
mov
xor
xor
out
je
or
cwtl
push
or
lods
jae
call
ljmp
and
cmp
ror
adc
mov
xchg
mov
xchg
push
lret
fildl
inc
add
test
bound
pop
icebp
mov
cmp
adc
sbb
cltd
jge
xor
adc
or
xor
scas
out
int
add
sbb
loop
pop
sub
scas
sbb
mov
ljmp
mov
adc
fdivrl
dec
clc
aad
movsb
jae
ret
icebp
or
jmp
xor
add
adc
sbbb
xchg
cmp
icebp
sbb
movsl
shll
es
aad
and
sub
je
push
lcall
cmp
daa
push
sarb
cmp
scas
enter
adc
lods
or
mov
and
or
hlt
js
lock
lock
loopne
push
aaa
dec
push
hlt
mov
fstpt
mov
jle
cmp
adc
js
iret
jb
cmp
aaa
mov
cmp
aaa
iret
xchg
out
push
lea
bound
mov
adc
mov
add
xchg
outsl
lods
cli
enter
mov
inc
mov
sbb
push
push
addb
icebp
and
cmpsl
dec
fistl
jbe
clc
push
add
xchg
adc
sbb
xchg
xchg
repz
lds
pop
andb
test
push
andb
cwtl
xchg
sub
or
das
stc
pop
adc
subb
sub
testl
fdivrl
xchg
adc
inc
fnstenv
sahf
roll
cmp
insl
int3
pop
inc
jns
push
andl
aaa
add
test
mov
push
push
addr16
dec
xor
pusha
cs
xor
inc
pushf
xchg
mov
mov
outsb
add
int
int3
ficoml
outsb
xor
divl
out
popf
arpl
sbb
insb
aam
push
or
mov
xor
aam
or
movsb
andb
xchg
xchg
jnp
jb
inc
pop
cwtl
sub
es
xor
unpcklps
mov
andps
jo
repnz
inc
dec
or
ret
adc
mov
adc
or
ret
fsubs
in
mov
sarb
xchg
push
mov
mov
out
movsb
out
and
inc
inc
sbb
pop
int
fcoms
push
das
cmpsl
or
pop
mov
shrb
ds
mov
inc
sarl
das
inc
inc
push
sub
ljmp
sub
cmpsb
iret
outsl
or
and
push
xchg
les
lds
pop
mov
cmp
and
xor
ret
imul
insl
or
rolb
cmc
hlt
lret
add
mov
inc
in
pop
fldcw
xchg
and
fldt
std
jo
inc
inc
xchg
js
outsl
nop
shlb
add
mov
mov
dec
mov
xchg
rcll
jge
adc
call
pop
mov
mov
out
shrl
jb
mov
cld
imul
add
push
cltd
pop
sub
inc
in
mov
pusha
lock
sbbb
sti
sbb
clc
adc
addr16
mov
jl
push
add
insb
lahf
mov
or
repnz
or
subb
clc
push
sub
pop
cmp
push
and
clc
cmpsw
scas
fmull
adc
mov
mov
sub
fisttpl
test
push
lods
enter
stc
inc
xchg
out
dec
popa
stos
pop
lods
dec
and
roll
lret
inc
mov
and
dec
jns
aas
mov
cmpsb
adc
lcall
das
jl
dec
movsb
out
xchg
jmp
repnz
sarb
or
xchg
jo
sbbl
shlb
add
sbb
les
int
faddl
aam
sarb
xchg
sub
insl
in
rol
into
jne
sub
lods
jecxz
push
out
add
cwtl
repz
jo
xchg
push
repz
pop
mov
enter
js
addl
inc
inc
fdivp
push
or
cltd
cwtl
adc
jb
fisttps
xor
int3
ficomps
mov
sub
mov
int3
xor
push
mov
int
aam
xor
xor
xchg
int3
ds
push
repnz
mov
sub
jne
aad
cmp
lods
add
in
rolb
sub
call
iret
mov
std
adc
cli
mov
popa
scas
jb
test
ficoml
jb
loopne
inc
fucomi
aad
lahf
adc
rorl
add
insb
mov
jns
into
cmpsl
mov
test
mov
sub
sub
add
int
mov
inc
ficompl
inc
sub
mov
shlb
sub
mov
nop
jl
dec
je
aaa
mov
or
rcll
iret
dec
outsb
ret
fcmovb
cwtl
cmp
insb
add
and
or
out
int3
scas
and
dec
stos
es
fucomp
lock
xchg
xchg
xchg
leave
add
xor
roll
cmpsb
icebp
dec
jns
movsb
jnp
daa
xchg
mov
negl
add
mov
sbb
push
int3
jae
and
ss
rolb
inc
insl
bound
and
scas
push
xor
jmp
out
dec
dec
mov
movsl
mov
in
insl
xchg
add
popa
ss
push
in
adc
stos
cmp
sub
mov
xchg
inc
push
sbb
inc
out
les
call
in
mov
je
add
jae
mov
in
movsb
stos
jge
rorl
pop
jnp
inc
mov
popa
or
pop
imul
adc
popa
adc
sub
push
je
pop
shr
stos
push
pop
cmp
cmp
xor
pop
or
sub
jno
adc
fisubrs
jb
cmp
mov
cmp
jns
mov
cmp
jbe
aad
pop
xchg
enter
lock
or
sbb
cmp
jmp
xchg
pop
es
push
std
mov
inc
loope
mov
lods
adc
push
das
sbb
jb
mov
mov
dec
mull
and
pop
jge
es
mov
mov
cmp
imull
mov
les
sarl
out
xchg
fsubrl
stc
xor
add
jo
mov
mov
mov
mov
cmpsb
sub
inc
loopne
in
jle
mov
mov
ficoml
and
jg
adc
sub
cmp
leave
test
fnstcw
adc
stos
loopne
xchg
int
mov
push
or
jl
jmp
lock
push
cwtl
lret
in
push
sbb
sbb
adc
inc
rolb
add
inc
cmpb
pushf
divb
pop
popf
mov
insb
filds
stos
fsts
clc
sahf
adc
jecxz
lcall
push
insb
and
push
xchg
mov
cltd
repz
jb
mov
sbb
stc
push
push
je
popf
sti
outsb
mov
xchg
fisubs
xor
shrb
xor
test
xchg
lahf
gs
adc
or
incl
mov
sbb
or
out
aam
xchg
push
ljmp
call
mov
or
sub
push
lret
rcrl
movsl
dec
pop
mov
cld
mov
frstor
sarb
dec
cwtl
adc
sub
or
out
push
sub
sbb
in
into
cmpsl
pop
jmp
outsl
ja
fildl
es
xchg
xor
leave
clc
hlt
mov
pop
cmp
mov
pop
mov
cmp
inc
fisubrl
jmp
enter
adc
push
rolb
mov
imul
in
test
repnz
adc
jns
adc
packsswb
mulb
dec
decl
lea
ja
pop
push
cmpsb
adc
mov
cmp
mov
sbb
rcrl
lock
cmpsb
sti
jb
xor
cmp
insb
test
arpl
aaa
in
pop
cmc
fcmovb
cltd
cmp
mov
loope
jno
adc
push
ljmp
test
neg
fstl
mov
sbb
imul
mov
xchg
push
mov
scas
adc
cmp
pusha
xchg
in
inc
fmull
cwtl
test
sbb
imul
rcll
fistpl
sbbb
xor
sub
mov
rolb
mov
fsubrl
daa
leave
mov
nop
cmp
lods
stos
aad
mov
or
bound
cwtl
in
leave
inc
mov
jae
push
dec
cmc
daa
aad
xor
xlat
addr16
sti
add
pop
lods
mov
inc
cmp
adc
pop
xchg
leave
mov
push
xor
lds
mov
sti
cmp
bound
add
test
dec
mov
ret
sub
push
mov
and
lods
ljmp
test
fstpl
cmovle
adc
jbe
adc
in
fsts
out
insl
sbb
cmp
leave
lods
cmp
mov
and
out
lret
sbb
mov
sub
and
and
pop
cmp
out
out
push
cmp
jge
mov
mov
sub
arpl
adc
add
sbb
push
mov
xchg
es
mov
pop
stos
cli
mov
gs
cmp
ljmp
push
push
inc
lcall
pop
mov
in
mov
aas
out
sbbb
addr16
push
sub
cltd
hlt
xor
sub
lods
pop
jmp
hlt
pop
pushf
in
ss
cmp
movsb
xchg
movsl
movsb
std
pop
xchg
cmp
dec
sub
loop
daa
dec
aam
xor
aam
push
out
xchg
mov
test
hlt
xchg
mov
pop
scas
cltd
adc
add
fildl
in
out
out
jae
rorb
into
sub
jbe
stos
sbb
fstpl
sbb
jns
xlat
stos
in
ss
mov
inc
sub
cld
mov
mov
mov
call
sub
pop
popa
add
iret
js
incl
push
je
call
pop
lds
pop
inc
pushf
aam
ja
add
insb
pop
cmpsl
add
sbb
arpl
and
ret
scas
movsb
insb
call
lcall
mov
fdivrs
cld
nop
shl
adc
dec
shl
imul
adc
jl
pop
fcoml
mov
add
imul
or
aaa
mov
sub
mov
add
mov
hlt
ljmp
aad
popf
jno
mov
sub
dec
das
push
insb
jp
jae
in
push
jle
bound
psubusb
pushf
jb
gs
lcall
fidivrl
jnp
sbb
jmp
adc
xchg
mov
mov
jno
jb
shr
les
cmp
mov
pop
sti
inc
ret
insl
fldl
xchg
adc
loope
pushf
and
pop
xchg
popa
jg
les
push
mov
rcrl
and
int3
cmp
cmpsb
cwtl
sub
lcall
cmp
loope
push
cli
fucomi
insl
adc
stos
mov
popf
mov
test
ljmp
stos
adcl
movsl
fwait
push
pop
mov
mov
or
pop
js
inc
scas
or
and
mov
mov
mov
dec
sbb
addb
lds
inc
dec
mov
push
dec
into
mov
rcrb
pop
fwait
ss
icebp
es
mov
xor
orb
mov
in
pop
leave
sub
int3
aam
pop
push
pop
and
enter
in
pop
ret
pop
mov
push
inc
and
or
out
in
mov
xor
fwait
or
adc
cmpsb
filds
in
cmpsl
outsl
push
xor
movsb
cmp
js
imul
add
xor
dec
add
rcrb
test
and
enter
pop
outsb
mov
xor
cwtl
outsl
decb
lcall
xchg
mov
or
shll
test
and
jge
pop
mov
pop
int3
jae
or
dec
adc
std
inc
sub
inc
cwtl
imul
mov
mov
inc
je
in
loop
mov
add
ret
and
jmp
jg
sbb
mov
fcmovu
repz
xlat
sbb
jbe
lahf
mov
incl
in
loopne,pt
js
xor
mov
jns
jno
test
pop
dec
arpl
je
aad
or
and
dec
mov
shll
imulb
mov
or
lret
push
mov
sbb
subb
mov
jae
or
inc
and
add
sub
xchg
cmp
js
sbb
out
std
push
inc
fs
arpl
or
in
jns
test
je
test
push
xchg
scas
or
push
pop
cmp
outsb
aam
mov
ret
jae
fdivs
rorb
or
xchg
jb
inc
sub
cmp
sbbl
sub
mov
and
sbb
shlb
add
lods
dec
flds
jg
mov
adc
scas
mov
sub
mov
das
cmp
push
testb
mov
jge
int3
fildll
push
mov
lret
js
push
push
ljmp
ret
popa
aad
mov
xchg
inc
enter
lcall
jbe
pop
adc
into
addr16
lock
rorl
outsb
xchg
insl
es
idiv
popf
jnp
fnstenv
cmp
sbb
iret
xchg
xchg
jb
mov
in
pusha
mov
mov
jno
test
xor
add
scas
std
hlt
sbb
push
imull
adc
sub
icebp
mov
jg
xlat
nop
xor
dec
push
cmp
sub
sub
aad
pop
push
ret
lods
inc
sub
mov
fists
and
or
pop
cmp
leave
jmp
push
andb
fidivrl
jle
sub
mov
icebp
adc
rolb
movsl
mov
repnz
and
test
sub
in
jo
inc
das
push
popa
push
aam
addr16
shll
test
jg
pop
xchg
decb
int
pop
fwait
popa
and
fiaddl
fnsave
daa
out
push
mov
mov
or
or
pop
sbb
sub
shl
lods
xchg
sbb
data16
jo
push
push
gs
push
arpl
cmp
insb
insb
lods
sbb
cmpsb
add
xor
push
xor
pop
xor
fnsave
add
addr16
adcb
jo
inc
jmp
push
add
xor
insl
aas
call
mov
mov
mov
push
mov
xchg
sbb
movsb
out
dec
das
imull
sahf
pop
icebp
rcl
notl
pop
or
aam
loop
cltd
jno
mov
int
cmp
dec
mov
nop
ss
stc
stos
sbb
movsb
mov
daa
out
nop
loopne
loopne
or
sahf
inc
push
pop
cmp
orl
outsb
icebp
sub
das
ret
nop
cmc
mov
lods
roll
dec
roll
daa
inc
xor
mov
jne
jg
ss
arpl
jmp
out
ss
xor
scas
in
cmp
lcall
xor
xchg
jge
popa
int3
mov
lahf
jmp
jg
mov
lods
repz
popa
or
mov
jg
dec
add
pop
or
jle
daa
jecxz
roll
push
lret
out
int
fsubr
push
and
mov
sbb
mov
cli
push
cmp
mov
adc
xor
jg
pop
fistps
add
imul
outsb
dec
push
test
cmp
xor
mov
mul
jecxz
cmpsb
clc
or
es
add
sti
inc
dec
mov
mov
xchg
outsb
sbb
out
xchg
pop
push
add
xchg
rorl
xor
jmp
mov
sub
mov
nop
cmpb
and
in
dec
leave
loop
cmp
dec
dec
ja
mov
fnstsw
ss
mov
dec
mov
push
fidivs
pop
mov
lret
mov
dec
jnp
cmp
mov
adc
mov
jns
mov
inc
mov
dec
repnz
in
cmpsl
fiaddl
dec
in
push
mov
sbb
test
push
js
repz
in
mov
pop
in
mov
loop
imul
aaa
pop
xor
mov
mov
xchg
add
mov
inc
cltd
nop/reserved
cmp
jle
addr16
cmpsl
in
ficomps
loope
lea
rcr
mov
inc
fildll
call
adc
xor
outsl
cmpb
mov
sub
rclb
fbld
push
and
fcoml
sbb
popa
into
add
sbb
cmp
xchg
and
in
movsb
lods
rorl
lret
aad
test
imul
test
out
pop
ds
test
mov
push
sbb
testb
cmp
test
xlat
and
in
scas
mov
lret
push
dec
jl
push
int
mov
cs
xchg
mov
hlt
rorl
movsl
and
fmulp
stos
or
in
scas
jae
daa
xchg
add
pop
mov
jo
and
stos
out
call
imulb
adc
lods
pop
loop
xchg
push
sbb
ljmp
mov
xchg
test
les
pop
jno
fptan
adc
and
xchg
fwait
mov
mov
jp
mov
push
lea
or
inc
int3
enter
test
push
xchg
inc
cmp
inc
pop
add
push
mov
in
call
mov
mov
pusha
out
es
arpl
lea
or
in
push
pusha
jp
mov
pop
icebp
roll
add
push
hlt
ja
nop
in
imulb
lcall
jge
outsb
sub
mov
dec
lods
aam
les
es
pop
imul
inc
jns
lret
in
xchg
dec
pop
mov
inc
mov
in
and
insl
enter
cltd
pusha
lcall
outsl
es
dec
xor
push
push
xlat
notl
pop
mov
test
push
xor
or
jo
inc
dec
stos
mov
inc
dec
fdivr
aam
inc
adc
clc
jo
leave
xor
int3
stos
jo
gs
pop
lea
push
fs
fnstcw
mov
jge,pt
fldl
bound
and
jecxz
mov
shll
or
inc
xchg
push
push
out
fwait
outsl
cmp
push
setbe
insl
incl
adc
inc
mov
cmpsl
pop
dec
and
xchg
adc
inc
sbb
xchg
orb
out
inc
jl
scas
fcmovnu
int3
or
insl
jecxz
sbb
and
in
xchg
test
ds
sub
bound
fimuls
adc
aas
outsb
les
ljmp
pop
jge
test
pop
test
testb
xchg
jl
mov
cs
lcall
sub
stc
out
jmp
push
sti
cmpsl
cs
mov
pop
or
out
mov
push
ffree
adc
jg
jge
or
call
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
data16
adc
addl
pop
cld
cmpb
adc
xor
add
in
sbb
hlt
jnp
in
fcoms
shlb
pop
add
mov
jge
lahf
sbb
test
das
rcrb
push
ds
fcomi
addl
cld
push
lret
cltd
add
ror
fwait
pop
inc
divps
int3
rcrl
ret
or
js
int
movsb
cli
bound
add
lret
inc
bound
mov
je
fwait
ljmp
paddsb
inc
in
into
in
popa
sub
loopne
lret
or
data16
pop
mov
mov
enter
aaa
xor
mov
or
add
mov
or
push
jne
pop
outsb
aam
mov
adc
bound
enter
shlb
ljmp
xor
mov
pop
sahf
jo
inc
sbb
push
or
into
cmpsl
in
insb
cwtl
sub
push
xor
or
mov
inc
add
jmp
cmp
jle
sub
adc
cwtl
es
stc
out
scas
xor
adc
cli
jle
cltd
jne
pop
jl
push
and
sbb
xchg
cs
mov
insl
dec
test
mov
xchg
cld
xor
xor
icebp
dec
imul
ret
or
mov
dec
divb
mov
call
pop
lds
fidivl
outsb
pusha
cmp
or
call
adc
roll
xchg
xchg
mov
rcr
imul
mov
sbb
push
jae
fsubs
cmpb
scas
pop
repz
or
add
adc
cs
and
xchg
sbb
fsubrl
dec
repz
mov
inc
loope
lgs
adc
mov
mov
fidivs
xchg
stos
sti
xor
lods
pop
or
out
and
mov
xlat
call
stc
or
mov
mov
pushf
pop
cmp
mov
fs
ljmp
pop
mov
fwait
cmp
or
push
cmp
push
lods
adc
adc
mov
imul
xor
lret
cltd
dec
push
cld
sarl
mov
mov
jge
inc
mov
jo
lods
add
mov
shr
adc
pop
cmp
or
add
xor
cmp
test
xchg
inc
sbb
add
add
mov
ret
xchg
aam
dec
out
cs
lcall
rcr
dec
test
mov
lods
mov
jl
test
add
mov
jbe
xlat
and
xchg
shlb
or
sbb
sti
jnp
sub
add
jge
add
pop
faddl
js
jb
inc
mov
xor
into
inc
mov
mov
mov
mov
ja
test
adc
dec
insl
or
loopne
mov
mov
cld
lock
fnstenv
mov
cli
dec
inc
incb
mov
scas
xor
jb
jns
rcll
repnz
xlat
test
cmp
jge
cmp
xlat
sub
shll
adc
mov
lret
mull
mov
add
and
pop
jno
out
imul
push
push
add
jl
pop
mov
ret
adc
ja
and
push
repnz
scas
inc
mov
repnz
dec
jnp
jb
into
in
cmp
cwtl
ja
push
adc
jo
es
inc
in
ja
arpl
jp
stos
lret
lock
cmp
jbe
outsl
cld
jp
insl
hlt
mov
xchg
shr
outsl
mov
int3
xchg
fs
push
adc
lds
hlt
movsb
repz
out
adc
inc
push
je
jns
daa
and
mov
imul
popf
sub
cmpsl
xchg
mov
mov
bound
fsubr
fwait
add
fneni(8087
pop
cld
roll
add
scas
cmp
mov
sti
jp
jne
flds
das
inc
lcall
dec
cmp
dec
pop
xor
mov
adc
cld
fdivp
and
mov
and
or
push
movsb
mov
repz
lret
lcall
insl
hlt
fidivrs
xchg
and
lahf
jge
jmp
ljmp
cwtl
xor
mov
data16
out
and
push
inc
fbld
into
push
mov
and
mov
aas
mov
gs
testl
or
add
sub
or
pop
out
ja
negb
cmp
xchg
rcr
mov
mov
dec
dec
test
push
add
pop
pop
rcr
pop
push
push
push
sbb
out
push
xorb
dec
push
std
cli
or
cmp
xchg
and
mov
jns
push
xchg
mov
push
add
jmp
push
dec
popf
lret
mov
push
test
hlt
fucomp
enter
sbb
ss
ljmp
in
in
mov
mov
gs
cmc
lcall
dec
push
bts
mov
hlt
add
jp
xchg
jmp
sbbb
in
mov
inc
push
push
stos
mov
adc
cs
aas
jae
aam
test
or
sub
mov
fwait
jl
jmp
fcmovnb
in
div
xchg
int3
stos
xorl
sti
adc
mov
or
pop
or
dec
push
push
push
mov
fwait
sbb
leave
pop
outsl
pusha
adcb
cld
jg
xor
sub
movsl
jge
ret
in
sub
rcrb
mov
push
fidivs
shlb
xchg
iret
sub
adc
mov
push
mov
push
mov
insb
or
mov
out
add
dec
lcall
adc
add
hlt
sbb
pusha
dec
cmp
outsl
mov
loopne
push
push
sub
aas
xlat
enter
ds
hlt
icebp
stos
orb
sub
or
ljmp
jne
xor
test
cmp
test
hlt
fdiv
das
sub
jge
cmp
iret
rcl
frstor
cld
fldt
sbb
cmp
cmp
leave
mov
cmp
mov
xlat
test
ret
loopne
sbb
cmp
mov
push
cli
cmp
sub
arpl
xor
push
lret
mov
mov
gs
ds
jge
lea
ds
mov
gs
xchg
pop
dec
pop
cmp
iret
add
arpl
cmc
cmp
xor
fs
pop
out
lds
jne
and
cmp
inc
stos
ret
xor
in
mov
dec
sub
rorl
mov
inc
xor
stos
in
popf
cmp
adc
dec
push
popa
insb
stc
fstpt
dec
push
roll
aas
addr16
push
repnz
cmpsb
inc
pop
sbb
sbb
and
mov
ja
inc
push
cmp
nop
mov
mov
popa
imul
jo
cmpsl
ficomps
test
stos
popa
xor
out
testl
pop
jns
mov
dec
addr16
mov
inc
inc
push
stos
popa
mov
xchg
iret
pop
jp
inc
dec
jle
and
lods
push
fidivs
ja
in
adc
stc
imul
ret
and
frstor
or
adc
das
scas
jo
mov
pop
and
cmc
push
cmp
inc
inc
cmp
or
dec
push
loopne
push
sar
mov
add
cmp
jns
outsl
sti
xchg
out
lods
notb
mov
adcb
into
add
pop
out
nop
test
sub
divb
stos
mov
xchg
outsl
out
xlat
mov
enter
inc
mov
aam
fists
pusha
push
xor
rolb
outsb
imul
mov
iret
adc
int3
adc
inc
shlb
xor
inc
lret
test
test
add
adc
push
adc
jp
dec
push
mov
sub
sub
sub
push
shlb
inc
inc
in
xchg
sub
fcmovbe
push
inc
push
cmp
mov
push
and
pop
shrb
dec
divb
and
mov
xchg
sti
jecxz
test
ljmp
mov
mov
push
mov
cltd
sbbb
divb
push
loop
loopne
stos
xchg
jl
cltd
push
adc
pushf
lahf
lods
addb
outsb
cmp
mov
insl
psubusw
movsl
inc
out
cli
jbe
pop
js
jg
xchg
jecxz
adc
cmc
fnsetpm(287
js
cli
std
imul
fidivl
bound
mov
mov
mov
jo,pn
xchg
push
mov
push
adc
call
mov
into
hlt
sub
nop
push
push
popa
or
cmpsb
aas
jnp
mov
dec
insb
repz
fs
test
cmp
les
test
fcomi
es
ja
mov
xchg
into
mov
mov
fwait
aad
inc
dec
push
and
popf
sub
xchg
ficompl
pop
ja
xor
lods
pusha
inc
arpl
stc
adc
push
pop
inc
adc
cmpsb
cld
sti
insl
mov
xlat
jmp
add
pop
xchg
or
xor
or
pop
stos
mov
xor
test
inc
sti
or
xchg
mov
add
push
int3
fistl
outsb
lret
bound
pop
test
out
jae
dec
push
xor
fnstcw
pusha
add
push
sub
adcl
out
roll
xchg
push
or
add
mov
sub
push
dec
in
sbb
arpl
bndstx
loope
or
sahf
sahf
shll
addr16
cmp
int
xchg
push
push
mov
js
xchg
adc
out
xor
ret
pushf
stos
ja
fstpt
cmp
mov
leave
pop
sar
mov
fildll
adc
lahf
xorl
add
sbb
jne
jp
test
out
jns
sub
dec
std
ds
mov
icebp
jns
inc
aam
insl
xor
test
minps
xchg
jmp
push
cmp
and
dec
arpl
lock
notb
aad
in
push
jle
ja
sub
xchg
xchg
ret
mov
aaa
sbb
xor
sub
int3
sbb
hlt
sbb
subb
nop
mov
dec
pop
lock
sahf
xor
enter
jge
add
jo
jle
rcrb
dec
xchg
into
mov
xchg
push
cli
xchg
leave
mov
sub
push
addr16
test
cltd
sahf
jg
mov
sbb
fdivrs
jnp,pt
push
lock
jns
out
outsb
das
loop
xor
push
int
pop
push
or
pop
lret
and
mov
pop
sbb
gs
push
pop
cltd
aam
les
sbb
and
int3
xchg
dec
mov
xor
dec
test
push
mov
push
test
jbe
pop
adc
mov
jno
fldcw
push
jle
stos
in
xchg
mov
mov
inc
jno
xor
call
xchg
cmp
mov
test
xor
sbb
cmc
and
movsb
and
mov
lea
sarl
imul
stos
mov
cmpsb
ljmp
push
pop
mov
in
xchg
test
mov
pop
scas
xor
add
adc
push
repnz
adc
xor
mov
pop
lods
cmpb
arpl
lret
mov
lock
adc
test
mov
mov
mov
cmp
icebp
xor
pop
fsubs
subl
into
mov
mov
mov
mov
ss
lds
jbe
xchg
loop
jno
sbb
repnz
and
adc
aaa
out
inc
sub
and
xchg
mov
call
xchg
fildl
jl
adc
jae
mov
or
jns
dec
inc
je
or
dec
iret
jmp
inc
jb
out
lahf
jge
test
fisubrl
xor
push
push
xchg
in
in
adc
popa
stos
ret
push
jp
into
aas
ja
mov
cltd
clc
sub
jecxz
sbb
dec
push
js
inc
pop
mov
mov
inc
pop
sub
pop
dec
bndldx
cmp
sbb
stos
or
jmp
sti
add
or
outsb
inc
in
pop
xchg
mov
test
aas
mov
push
sbb
insb
sbb
insl
mov
or
sti
mov
insl
shlb
push
fldenv
pop
aas
xchg
jbe
dec
or
pop
or
lahf
jno
jg
cmp
add
into
cmp
mov
jl
adc
sbb
sbbb
push
xor
cmp
mov
xor
aaa
cmp
repz
pushf
js
clc
or
pop
push
mov
pop
cltd
cli
cmp
sahf
mov
sahf
sbbb
lret
loope
xchg
in
xlat
out
arpl
inc
add
mov
and
mov
and
lock
push
jo
inc
xor
jmp
mov
mov
jb
ret
and
inc
inc
or
enter
add
js
mov
mov
mov
push
mov
call
mov
mov
imul
arpl
ret
cmp
nop
out
shll
popf
movsb
sarb
fcoml
or
sbb
cmp
xor
sub
repz
jg
mov
data16
js
pop
in
push
das
out
adc
ret
push
jge,pt
loope
outsb
mov
rorl
imul
sub
repz
arpl
or
stos
addl
rcrb
dec
push
ret
push
hlt
add
rcrl
movsb
push
fstps
mov
pop
or
clc
aad
pop
stos
pop
xchg
and
aad
ret
cmp
outsl
mov
and
jnp
push
mov
mov
lds
mov
data16
in
fdivs
insb
std
mov
cmp
lods
sub
jge
push
xchg
and
loop
push
iret
loopne
insl
pop
xor
add
and
ret
outsl
jb
jge
inc
jns
daa
dec
cmp
jmp
popaw
dec
loop
mov
js
jb
pop
adcb
mov
int
mov
divb
push
movsl
jae
dec
int
mov
std
sarb
int3
mov
xchg
and
mov
mov
sbb
jo
jo
pop
sub
ljmp
enter
mov
add
cmp
mov
test
xchg
ja
popa
sbbb
mov
stos
cmpsl
mov
test
jecxz
loopne
or
out
mov
push
fdivl
cmpl
xor
aaa
xor
adc
xor
setg
push
push
insl
xchg
sub
popa
xor
inc
mov
lea
pop
ret
in
mov
sub
imul
jp
test
popa
cmp
aas
push
adc
add
sarl
cmp
in
iret
xor
in
bound
into
fbstp
adc
cmp
fisubrs
rol
add
imul
jbe
jne
popf
cmp
inc
adc
cwtl
or
jecxz
jnp
or
sbb
lock
cmp
push
mov
add
out
push
scas
fwait
inc
fistpl
cwtl
mov
push
mov
aad
aaa
aas
lods
adc
cltd
fistps
mov
pop
mov
outsl
dec
jge
push
fists
fsubp
fwait
mov
fbstp
outsb
add
xlat
popa
in
inc
imul
insb
xchg
xor
push
jp
je
sbb
mov
lret
push
xlat
jp
aad
stc
xlat
adc
jae
adc
mov
jb
xchg
sub
gs
push
inc
iret
jle
push
repnz
mov
push
shrb
in
lahf
nop
and
cmp
popf
xor
hlt
movsl
mov
arpl
pop
mov
cmp
lret
loope
sbb
cmp
bound
mov
mov
add
sbb
cwtl
sub
or
adc
push
fdiv
push
lea
aas
pop
mov
push
stos
popf
nop
push
dec
outsl
fidivs
call
adc
sbb
stos
fisubrl
fcompl
sbb
addr16
cli
mov
xchg
xlat
sbb
outsb
xchg
dec
ret
aad
xchg
or
mov
and
dec
lret
cmp
ror
add
inc
fcomps
int
jmp
scas
xchg
jo
adcl
das
mov
cltd
stos
xor
outsl
nop
push
xlat
int3
out
xor
out
cmc
scas
fildll
mov
cmp
add
scas
adc
dec
orl
xor
pop
xchg
shll
push
dec
fmul
cmp
pop
dec
sub
rorl
or
cmp
fsubrl
stc
fsubs
bsf
add
das
dec
add
push
stos
test
cmp
jnp
daa
dec
and
pusha
addb
pop
stos
sub
cmp
mov
lcall
out
mov
xchg
or
push
test
and
mov
jp
and
rorl
fimuls
adc
lret
mov
loop
dec
mov
sub
mov
or
adc
jle
jl
push
dec
xor
ja
loope
jb
or
popa
or
lock
call
lea
mov
pop
lock
cld
push
dec
jnp
mov
ror
scas
lcall
adc
mov
insl
sbb
add
pop
sub
push
push
mov
pop
call
sahf
popa
jns
xor
push
jge
fsubs
lret
cmp
and
fistpll
jno
pusha
test
lea
out
in
push
jne
mov
jmp
popf
rorb
mov
sbb
pop
sbb
mov
inc
mov
mov
and
or
lret
pop
push
inc
into
push
bound
lahf
dec
mov
daa
rcr
xor
fldl
mov
dec
cmpsb
mov
push
repnz
and
lret
inc
sub
jnp
test
scas
scas
push
or
das
cli
inc
aas
fsubl
sti
xor
insl
cltd
mov
subb
je
pop
push
xchg
jae
push
fistl
rorb
bound
movsl
inc
daa
mov
mov
mov
push
dec
mov
dec
mov
es
dec
pop
mov
repnz
pop
stos
aas
sahf
imul
les
dec
add
mov
and
lret
pop
nop
adc
and
repz
inc
mov
setb
inc
leave
sub
out
out
jl
and
cmp
or
repnz
jbe
sti
xchg
pop
jl
loop
cmp
xlat
lods
push
xor
xor
and
mov
push
out
aas
ret
push
push
cmp
mov
mov
and
push
xchg
xchg
mov
movsb
inc
int
mov
mov
sbb
fidivs
push
jg
add
jmp
clc
cmp
push
dec
mov
movsl
mov
lret
loopne
mov
push
mov
mov
int
pushf
test
insb
jo
repz
stos
jg
jns
pop
mov
test
inc
jnp
stos
fiadds
inc
pop
popaw
pushf
sub
sahf
dec
imul
rol
ljmp
frstor
arpl
ret
filds
jge
les
xchg
pusha
leave
ja
xlat
ds
cwtl
adc
pusha
mov
lock
mov
sub
mov
mov
sub
cmp
cmp
add
test
mov
arpl
stos
mov
xor
dec
add
push
test
out
enter
hlt
mov
hlt
mov
inc
fstps
xchg
and
mov
jmp
in
push
cmp
cmpsb
mov
inc
out
sbb
in
xchg
subb
mov
or
repnz
movsb
push
int
in
out
int
push
sub
jae
enter
out
cli
lock
cld
mov
iret
mov
xchg
lods
sbb
aas
adc
sbb
je
scas
aas
loope
xchg
cltd
fwait
and
cmp
mov
or
adc
jae
test
adc
jmp
add
ret
lcall
jle
lock
or
imul
xchg
jmp
test
add
hlt
jne
pop
cmpsl
and
jb
pop
add
push
xchg
pop
into
hlt
xor
into
mov
dec
ja
lock
add
lret
stos
mov
cmpsl
ret
movntq
out
test
sbb
dec
cmc
cli
cmpl
sti
inc
loope
add
adc
pop
mov
test
hlt
sbb
xor
mov
sub
push
psrlw
lcall
add
or
mov
or
mov
scas
rcl
cmc
xchg
dec
xchg
jo
idiv
adc
mov
xor
add
test
xor
or
xchg
test
mov
div
rcrb
push
and
negb
dec
mov
xchg
fnsave
call
andl
and
imul
adc
jge
fwait
or
pop
jp
scas
mov
sub
mov
in
xor
mov
sub
pop
sbb
or
jge
iret
test
or
imul
das
sahf
or
je
mov
insb
in
or
jnp
popa
pop
sub
inc
jo
stc
mov
loop
and
add
jne
adc
inc
lret
rcr
mov
lods
add
push
fdivs
jmp
and
inc
add
int
enter
xchg
shll
es
jae
lods
mov
jb
daa
in
aas
pop
and
add
sub
daa
aam
fsubl
fs
out
sbb
mov
mov
in
pop
sub
xchg
pop
aad
scas
mov
mov
out
xchg
mov
aad
test
ss
cmp
outsl
sbb
dec
mov
pop
lahf
int
outsl
mov
or
stc
leave
fisubs
or
sbb
ret
sub
dec
repnz
dec
add
mov
out
rcll
and
scas
rcrl
test
imul
pop
shrb
lcall
mov
in
mov
jbe
push
pop
dec
addr16
and
cmc
push
ret
repz
jge
sbb
pop
psadbw
loopne
fcmovbe
cmp
mov
xor
inc
inc
jns
xor
cmpsl
fwait
ljmp
add
lods
popa
ja
mov
movsb
mov
in
and
jecxz
push
lds
cmc
push
sub
mov
dec
clc
mov
fcompl
out
stos
adc
or
iret
rorb
xor
scas
inc
stos
mov
cmp
or
mov
out
addb
jge
je
mov
ret
jl
das
jns
lds
sub
mov
sbb
add
sbb
push
jg
loop
decl
inc
cmpsb
ds
jmp
pushf
mov
cmc
mov
dec
sbb
fdivrs
aas
out
xchg
scas
iret
sub
rcrb
sahf
pop
adc
jge
dec
flds
dec
pop
mov
fcmovbe
lock
clc
or
enter
repz
cltd
inc
and
repnz
adc
push
mov
popl
jmp
cmc
sub
and
dec
movsb
add
mov
out
mov
and
into
jb
lret
inc
pop
xchg
scas
test
es
push
data16
loopne
sbb
dec
sbb
lret
sar
push
out
xchg
leave
fst
xchg
lods
insb
cmp
inc
in
lret
fldcw
shl
rcrb
aam
add
push
mov
rolb
add
test
in
pop
xor
popf
cmc
cli
xorb
in
mov
mov
mov
pop
sub
lock
cmpl
sbb
lret
gs
gs
fsub
out
xchg
sbb
fisubrs
mov
or
push
jecxz
xlat
es
xor
fcompl
movsl
icebp
dec
lahf
mov
cmp
int
xchg
lret
jns
cmp
in
dec
mov
sub
adc
adc
pop
test
js
push
mov
shr
leave
into
mov
sbb
loope
add
inc
mov
adc
jge
packuswb
mov
cmp
mov
sti
dec
push
jns
ficoms
cmp
cmp
xchg
xor
mov
bound
dec
ds
aam
imull
addb
mov
les
loop
ficompl
sarl
aas
aad
je,pn
push
in
push
das
xchg
mov
loopne
cmpsl
push
mov
and
or
mov
shr
test
repnz
test
stos
jge
mov
andl
test
mov
repnz
xchg
in
into
add
dec
jl
adc
cmp
pop
push
lods
push
ja
xor
jp
or
pusha
rcrl
jae
xchg
push
mov
cmpl
xor
int
mov
jnp
sahf
and
lds
mov
mov
pop
push
push
add
push
pop
sub
xor
ret
jno
fldenv
aam
pop
insl
dec
xor
rol
mulb
imul
adc
pop
stc
xchg
insl
pop
and
lds
stc
mov
jmp
jno
out
and
aam
repnz
jno
and
ss
mov
fs
sub
aam
cli
xlat
leave
push
dec
and
pop
dec
daa
inc
mov
movsl
push
add
das
and
inc
popf
xchg
out
xor
sysenter
jl
sbb
and
push
pop
and
jle
or
xchg
add
mov
leave
inc
add
jg
jnp
mov
add
hlt
test
arpl
or
mov
dec
sti
cmpsb
int
mov
pop
movsl
shr
jae
and
pop
fwait
clc
add
jae
stos
push
mov
icebp
cmp
mov
call
rcrb
jmp
mov
in
aas
cld
add
jo
in
push
jg
clc
adc
daa
and
mov
lods
add
in
fisubrs
rol
movsl
imul
xor
fldenv
pop
gs
and
loope
sbb
inc
aam
dec
jb
push
mov
xchg
push
emms
push
fbstp
cmp
fwait
dec
push
jmp
jg
mov
mov
lcall
out
cs
insb
subl
push
pop
xor
push
jne
or
dec
pop
fwait
xchg
mov
shrb
cmpsb
js
outsl
adc
and
in
xor
jb
jae
xor
mov
pop
popa
in
insb
push
cmpl
test
cltd
mov
xor
mov
subl
das
inc
jge
sub
clc
hlt
inc
es
in
mov
xchg
cmp
push
lods
rcr
outsb
jne
adc
outsb
mov
inc
jns
aas
lret
test
fadds
int3
addr16
icebp
sbb
fbld
iret
stc
imul
leave
lock
aas
mov
or
out
dec
mov
sbb
and
mov
pop
test
insb
lock
pop
outsb
jl
int3
stos
xchg
dec
out
xor
dec
in
shlb
cmc
out
mov
dec
outsl
mov
pop
stc
or
add
repnz
mov
xchg
stos
rcll
pop
jl
mov
pop
cwtl
xchg
in
cld
in
inc
cmp
dec
xchg
add
clc
nop
lcall
mov
cwtl
sbb
mov
fxch
push
jle
jecxz
insl
addr16
mov
fwait
add
inc
jle
pop
inc
pushf
sbb
out
adc
shrb
mov
rol
fbld
pop
pop
push
out
fsubl
outsl
pop
mov
pop
pop
cmp
pop
icebp
mov
pop
xchg
xchg
dec
adc
sbb
inc
je
jp
cli
loop
es
shrb
add
mov
mov
out
add
arpl
and
fcomps
outsl
add
sbb
push
pop
aaa
dec
xchg
aaa
idivb
bound
pop
shl
inc
clc
pop
push
xlat
push
pop
pop
and
xor
out
jmp
and
lahf
dec
outsl
dec
in
mov
cmp
fistpll
pop
std
pushf
jmp
jmp
jmp
push
and
cwtl
cmp
cltd
cmp
scas
into
cmp
mov
orb
orb
int
mov
add
and
add
cltd
lahf
dec
xchg
test
lock
lcall
loope
outsb
pop
cltd
mov
loopne
stos
scas
sub
jne
inc
or
imul
fisttpll
cmp
xchg
dec
mov
out
sti
stc
mov
cmpsb
jae
and
mov
jb
sbbl
scas
pop
stos
clc
imul
cld
mov
jne
and
outsl
arpl
xchg
repnz
cmpsb
adc
arpl
rcll
mov
sbb
and
ficoml
mov
fwait
insb
xchg
repnz
cltd
pusha
cmc
lock
inc
and
push
js
jp
cmc
shll
sub
fmul
fcompl
and
xchg
out
popa
mov
xchg
or
and
add
push
push
popf
mov
sub
mov
test
mov
std
dec
jp
and
or
mov
xchg
sti
dec
sti
sbb
in
inc
inc
pop
push
call
jmp
int
lahf
add
scas
jp,pn
mov
shr
xchg
adc
mov
cmp
icebp
subb
cmp
shl
mov
jnp
icebp
test
xchg
push
sbb
adcl
mov
pop
icebp
or
fidivs
mov
mov
add
sub
rsqrtps
test
push
xchg
mov
xor
jae
sbb
faddl
out
dec
or
pop
gs
insl
push
clc
out
jecxz
sub
adc
outsb
lret
mov
and
in
cmp
out
ficomps
cmpsb
dec
mov
or
stos
adcb
int
mov
aad
pop
cmp
jle
adc
movsl
or
sub
xor
pusha
cmpsl
aad
mov
sbb
stc
lahf
ja
lret
mov
adc
inc
inc
jns
out
fldl
ret
or
sbb
jns
dec
scas
sub
xchg
mov
mov
ds
sbb
ret
dec
imul
stos
pop
sbb
in
ret
xchg
adc
clc
aad
ss
fisubrl
jne
les
jmp
lods
in
mov
stos
loope,pt
and
mov
js
orb
jo
daa
push
ret
jl
push
std
jnp
add
pop
lahf
call
add
js
int
sbb
jbe
pop
add
mov
pop
ss
testl
mov
mov
inc
dec
je
ljmp
xlat
jecxz
scas
lods
dec
clc
mov
add
subl
cmpsb
and
ja
movsb
decl
sub
pop
jle
decb
and
dec
fisttpll
les
mov
test
pop
pop
push
jno
aad
mov
push
xchg
xchg
in
iret
jl
ds
mov
les
sbb
shlb
ss
mov
iret
mov
sbb
fistpll
cmp
and
add
into
push
fwait
dec
or
adc
and
inc
or
cmp
mov
mov
insl
mov
sbb
ds
xchg
cmp
xchg
std
loopne
and
mov
idivl
data16
add
movzbl
out
push
jmp
outsl
mov
unpckhps
and
int
jb
cwtl
inc
js
lods
mov
ljmp
inc
mov
lret
ss
jge
fistpll
mov
sarl
cmp
and
xlat
push
repnz
fnstsw
push
cmp
into
add
mov
pop
pop
add
jns
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
arpl
jg
mov
int
sbb
test
inc
add
jae
cld
pop
pushf
xchg
xchg
hlt
dec
sbb
and
cli
jnp
pop
into
add
ja
outsb
cmpsb
insb
fcmovu
push
mov
adc
dec
ss
test
xorb
lahf
movsl
ret
sti
xor
push
daa
cmp
push
adc
lods
iret
stos
pop
add
cmpsb
or
and
cld
rol
mov
sahf
fnstsw
pop
out
and
fs
sbb
mov
jecxz
xchg
add
adc
dec
movsb
or
icebp
jecxz
mov
call
push
lock
fnstcw
sti
lahf
xchg
cmp
mov
dec
imul
cmp
lcall
jge
cmp
pop
out
mov
ficomps
or
ds
mov
push
add
movsb
pop
loope
dec
fimull
jo
jnp
xchg
inc
sub
nop
pop
in
mov
and
and
cli
insb
sub
dec
mov
xchg
icebp
bound
clc
pop
add
dec
push
xor
lahf
cmp
fldenv
xchg
dec
sub
mov
xchg
push
les
lret
lods
fnsave
mov
sub
dec
cmp
pop
jbe
pop
jae
clc
cli
mov
int3
xchg
push
xchg
mov
stos
sbbl
xchg
push
pop
xor
xor
xor
ret
jbe
fadd
mov
push
sbb
xchg
mov
scas
jecxz
xorb
ja
rolb
in
mov
loop
roll
js
rol
int3
out
pop
sbb
push
jge
out
dec
lods
push
cmc
xor
xchg
andb
aad
sub
push
ret
mulb
aas
mov
mov
in
mov
fnstenv
fadds
mov
push
pop
out
mov
add
out
or
outsl
jge
call
lods
cmp
push
jns
dec
sbb
or
outsb
ljmp
add
ret
and
mov
cmpsb
inc
mov
jp
cmpsl
ficoml
int
cmpsb
mov
lahf
and
in
rorl
sar
and
lods
xchg
jl
popa
or
divb
and
or
xchg
lea
push
ja
sbb
addr16
pushf
cmpsb
divl
mov
push
or
dec
fmuls
testb
movsb
adc
std
jnp
in
xchg
cli
mov
mov
iret
jnp
cmp
repz
mov
jo
mov
sahf
add
sub
jp
lahf
divl
cs
push
cwtl
lock
push
cmpl
push
sbb
ja
sub
xor
inc
jnp
mov
pusha
mov
push
sub
cltd
sbb
insl
aad
pop
fcomps
pop
out
int
aaa
sub
daa
add
negb
xor
mov
fwait
pushf
test
sbb
mov
xlat
lods
sbb
mov
lahf
in
sarb
pop
lret
mov
and
adc
inc
adc
icebp
jle
mov
adc
jb
mov
movsl
enter
test
pop
sub
add
sub
mov
imul
data16
lahf
pop
jle
cli
int3
gs
xchg
inc
push
xlat
lock
mov
cs
pop
stc
xor
imul
adc
mov
imul
mov
push
adc
ret
orb
sub
in
div
popf
aaa
push
popf
hlt
lock
or
shrl
repnz
xor
ret
push
in
push
call
icebp
xor
nop
or
popf
repnz
arpl
add
push
lea
mov
scas
mov
jl
test
cmc
mov
pop
jmp
negb
int3
scas
je
test
arpl
shlb
stos
lods
mov
bound
lahf
pop
mov
jns
push
ror
sub
xchg
test
sub
inc
or
pop
in
cmp
mull
lcall
lods
aaa
or
and
mov
cs
adc
sbb
sbb
dec
in
adc
mov
cltd
fsqrt
and
cmp
negb
pushf
xchg
mov
sbb
jno
ret
fwait
in
cmpsb
insl
and
push
shll
mov
cwtl
test
imul
and
test
xchg
scas
in
mov
push
sub
sub
aam
pop
nop
or
decb
shll
push
push
cmpsb
inc
mov
roll
scas
sbb
repnz
or
mov
rcll
pop
pop
popf
adc
sbbl
mov
hlt
mov
mov
push
add
mov
lea
dec
nop
cmc
sbb
daa
push
repnz
dec
pop
stos
lahf
mov
scas
push
inc
bnd
sub
cmpsb
pusha
add
inc
sbb
mov
adc
mov
push
mov
mov
je
push
repnz
pop
and
movsb
push
pop
add
adc
or
sub
sub
mov
clc
push
jb
jbe
mov
cmp
lods
push
je
shufps
addr16
pop
mov
test
dec
add
out
xor
pop
sub
out
push
loopne
cmp
repnz
dec
sub
xor
mov
mov
jle
leave
jecxz
mov
xchg
jl
push
in
add
out
dec
testb
jnp
out
aaa
pusha
or
or
jae
scas
adc
sub
movl
faddl
mov
pusha
fildll
xor
pmuludq
fisttpl
test
ljmp
jl
in
inc
dec
js
aam
inc
sub
call
and
dec
insb
pop
and
mov
jge
jb
pop
mov
mov
and
mov
mov
and
pop
jnp
inc
std
push
push
mov
mov
push
push
arpl
sti
jnp
ja
test
dec
push
adc
jg
mov
cltd
inc
mov
push
jbe
mov
ret
mov
cs
dec
push
jo
mov
pop
fs
mov
inc
push
xchg
jmp
pop
fisubs
addr16
mov
ret
dec
sti
sti
fsubrs
test
adc
inc
inc
out
xchg
fcmovnu
fpatan
jno
inc
sbb
test
push
add
mov
mov
bound
inc
je
pop
adc
inc
mov
in
sbb
xchg
sbb
in
pop
dec
mov
xchg
addr16
ljmp
jmp
mov
nop
mov
lahf
push
data16
and
in
add
iret
jae
iret
stc
mov
cmp
cmp
data16
inc
push
ror
in
aam
cld
call
lahf
test
mov
dec
or
sbbl
xchg
sbb
je
add
mov
js
ret
mov
push
js
test
push
jns
shrb
lar
and
aaa
outsl
jecxz
push
loope
and
test
cmpsb
test
aad
and
mov
sub
lcall
ja
jne
out
stos
lret
imul
sub
insl
fdivr
mov
icebp
lahf
clc
nop
int
movsl
mov
loop
xor
mov
fsubrs
push
adc
push
out
mov
push
clc
mov
fst
cwtl
pop
push
sahf
push
adc
sbb
movsb
sbbb
test
and
mov
push
push
pushf
push
cld
sbb
cs
jp
lods
jp
loope
in
mov
andb
clc
or
ds
test
sbbl
fnstenv
mov
and
cmc
pop
add
cmpsb
mov
inc
rolb
mov
adc
push
cwtl
ljmp
sub
clc
fists
in
call
cmp
aad
pop
pop
mov
sahf
lds
and
rcll
inc
mov
addr16
jae
rclb
push
test
cwtl
adc
cmpsb
mov
sub
mov
or
jno
ds
int
test
and
daa
or
dec
xor
cmp
lret
or
icebp
aas
cmp
sbb
jo
popf
ret
adc
out
sbb
mov
fwait
xchg
nop
addl
or
decb
mov
fucomi
pushf
or
imul
into
popa
bound
add
loopne
mov
stos
cltd
cli
jbe
je
vpsllw
sbbl
rorl
rorb
jmp
push
loop
int3
fs
rcrl
lds
fisubrl
mov
and
cmp
shr
fdivr
out
bound
and
push
js
rorl
and
divl
ds
pusha
ret
test
jae
aaa
push
iret
add
les
movsl
popa
call
adc
aas
jg
mov
aas
int
in
jae
js
jp
mov
in
push
int
pusha
add
addr16
pop
mov
inc
sti
pop
sbb
inc
mov
lods
data16
gs
jp
aad
mov
jl
push
push
xor
mov
mov
mov
and
mov
inc
jecxz
mov
push
push
mov
jle
daa
mov
jle
or
add
shrl
mov
mov
loopne
mov
stc
jb
push
mov
sbb
fnstsw
dec
in
cmp
or
sti
dec
stc
cmp
push
cmp
subb
imul
sbbb
mov
xor
jmp
xchg
cld
divb
push
xor
cmpb
mov
or
mov
xchg
xor
stos
shl
xchg
xlat
adc
jae
xor
dec
hsubpd
gs
and
sub
test
rcl
mov
test
adc
or
pop
comiss
insl
xor
jo
repnz
jns
das
hlt
ljmp
pop
movsl
lahf
sub
sar
dec
and
mov
mov
push
fisubrl
dec
pop
xlat
sub
lods
and
pop
and
and
lods
push
and
sbb
es
aad
mov
test
and
sar
mov
inc
jecxz
sub
xchg
xchg
push
fisubrs
jl
add
inc
mov
out
popf
jnp
push
dec
mov
mov
leave
lcall
cmp
in
mov
push
push
dec
dec
pop
je
arpl
push
insl
into
pop
xor
mov
mov
shrl
adc
add
or
and
or
pop
dec
cmp
and
pop
rolb
and
cmp
je
xor
add
mov
sbb
sbb
imul
scas
mov
mov
gs
cld
and
mov
push
ret
cmpsl
icebp
xchg
call
and
add
mov
sti
mov
inc
subb
mov
cld
scas
nop
pop
mov
fs
repnz
ret
loopne
in
movsb
jmp
push
test
mov
addr16
inc
test
outsl
mov
pop
mov
mov
sbb
inc
jb
mov
mov
pop
js
in
and
mov
shrd
push
out
push
jne
pop
lret
ret
icebp
push
fisttps
iret
mov
xchg
sub
dec
clc
xchg
gs
ja
fistl
mov
pusha
outsl
mov
mov
aam
fwait
sbb
sti
pushf
mov
rcrl
loope
inc
mov
dec
and
and
cmc
jne
lcall
movsb
pusha
fnstcw
push
lods
and
lahf
outsl
addr16
push
ret
std
sbb
xchg
push
or
push
je
mov
mov
xchg
mov
lods
jne
jb
aad
mov
sbb
ret
call
pop
in
cmpl
mov
jg
cmc
jno
sbb
pop
mov
test
call
xchg
mov
jp
and
rsm
repnz
or
cmpsb
cwtl
xchg
pushf
out
lock
jp
repz
cwtl
in
lock
addr16
orb
push
loop
cs
das
dec
mov
dec
push
lods
mov
jp
sub
cltd
cmc
xor
xchg
jne
ret
cmp
mov
addr16
sti
mov
sub
jnp
fdivs
pop
stos
xor
xchg
movsl
cmpl
jge
jno
scas
sarl
in
xchg
sahf
pop
into
cli
sbb
mov
lods
scas
bound
pop
stos
mov
inc
sbb
push
into
lea
in
jecxz
xor
or
add
jne
adc
xchg
cmc
add
data16
lret
jns
or
push
xchg
sub
repz
es
das
shll
divb
lods
or
push
fdivrs
cmp
lea
sub
pop
rcrb
xchg
or
xlat
repnz
xor
mov
fiadds
sbb
loopne
lret
fiaddl
xchg
mov
in
sbb
out
stos
xchg
cmp
jns
pop
outsb
loopne
sub
imul
hlt
xor
jg
and
mov
inc
adc
shl
and
add
orl
rolb
and
fwait
daa
dec
cltd
leave
adc
mov
outsl
cltd
push
idiv
mov
gs
je
push
pop
sub
push
dec
xchg
sub
hlt
js
xchg
mov
pminub
and
subb
xchg
loopne
lretw
and
cmp
xor
pop
jle
cmp
testl
scas
sub
pop
sub
es
cmp
xchg
je
stos
out
bound
push
mov
mov
mov
push
popa
adcb
iret
add
mov
subb
aas
fnstenv
or
enter
cmp
mov
push
test
stos
pop
cmp
pop
nop
jno
inc
mov
mull
inc
cmc
test
push
pop
dec
fsqrt
ljmp
sbb
std
mov
out
mov
mov
fwait
mov
jae
ret
fildll
mov
stc
push
orb
dec
xchg
loope
call
push
cltd
out
scas
shll
fwait
lahf
sahf
and
cli
sub
push
in
mov
sub
jecxz
and
imul
inc
inc
and
cmp
cmp
mov
mov
shlb
mov
rcrb
loope
les
in
std
jp
leave
jecxz
enter
inc
lods
fisubl
test
in
add
push
addl
xor
mov
ljmp
cmpsl
dec
inc
aam
dec
push
int
sub
mov
stc
push
aad
out
or
jne
mov
add
pop
cmp
arpl
addr16
jo
push
or
popf
ja
mov
stc
and
lds
mov
lods
add
mov
fwait
je
add
mov
adc
mov
mov
outsb
stos
stos
in
xor
jbe
adc
dec
into
rorb
adc
mov
enter
imul
out
mov
pop
jecxz
add
lea
cmpsb
shr
stos
sbb
shlb
cmc
cmpsl
or
push
xchg
mov
jae
push
in
cltd
cltd
in
leave
add
dec
outsb
pusha
push
pop
inc
cltd
mov
fimull
insb
insb
in
fistps
jmp
push
imul
pushf
mov
shl
stc
mov
hlt
hlt
iret
movl
es
mov
or
dec
add
test
es
testb
pop
sub
testb
int3
or
jno
test
stc
icebp
pop
push
test
sub
stc
push
jns
rol
mov
shl
shlb
mov
jns
popl
xlat
or
icebp
jbe
lea
test
pop
lcall
shl
scas
pop
push
lds
mov
out
pop
aad
mov
or
jp
pop
test
xor
mov
je
mov
popf
sbb
mov
subb
mov
jb
mov
mov
push
dec
push
stc
mov
enter
adc
popa
pop
xor
ds
test
jne
dec
dec
movsl
ror
pushl
adc
jb
addr16
andl
mov
fcmovu
xor
mov
sbb
out
add
or
ja
imul
je
add
out
in
xchg
insb
xchg
lods
repz
es
je
mov
and
pop
dec
outsb
inc
sbb
clc
fisttps
inc
jle
add
or
xor
mov
testl
and
int3
ret
or
cs
inc
cmp
inc
push
sti
push
inc
es
mov
xchg
jbe,pn
mov
dec
pop
loop
inc
xchg
pop
clc
adc
scas
arpl
loope
pop
in
xchg
mov
add
and
in
xor
inc
xor
ja
gs
movsb
in
fs
push
lds
outsb
divb
adc
dec
xor
and
or
movsb
push
hlt
popa
cld
movsl
pop
jno
sets
dec
and
dec
cld
sub
inc
mov
and
mov
std
and
aaa
mov
dec
mov
sbb
mov
and
or
fildl
pushf
adc
iret
pusha
leave
es
js
inc
leave
xchg
out
sahf
inc
mov
cwtl
repz
jp
into
stc
fcoms
sub
scas
rcll
test
xor
dec
jg
nop
fstpt
dec
adc
cwtl
ja
lock
hlt
out
ljmp
out
test
fs
movsb
leave
mov
push
cmp
pop
inc
popf
sbb
jno
adc
mov
xlat
sbb
orl
inc
push
sarb
inc
rolb
testb
test
aas
movsb
mov
repz
xor
dec
movsl
pop
subb
les
invd
sbb
roll
mov
xchg
js
pop
inc
adc
ss
cmp
mov
cmp
and
cmp
mov
ds
test
cmpsb
imul
xor
sub
aad
jge
stc
daa
mov
rcl
imul
and
int3
cli
dec
pop
mov
mov
and
das
das
dec
cmp
mov
scas
cmp
inc
adc
xlat
xlat
mov
shrl
xor
inc
mov
popa
mov
rcl
enter
dec
sub
adc
mov
xor
push
mov
sub
rcrl
lods
cmp
dec
add
adc
or
mov
xchg
cld
push
shll
les
cmp
aam
pop
pop
lods
lret
bound
xchg
sbb
dec
jmp
jecxz
push
bnd
or
stc
stc
or
into
xchg
mov
xchg
bound
pop
lock
push
sarl
jg
rclb
lahf
cld
aas
scas
fsubrs
pop
or
mov
movsl
add
mov
lahf
iret
das
jecxz
in
popa
lods
adc
or
mov
push
mov
add
inc
std
xor
in
adc
pop
outsl
clc
pop
push
jp
mul
xor
or
rep
int
push
pop
jle
jmp
pop
icebp
jns
add
adc
insb
xchg
outsb
sub
mov
and
sbb
fcmovnb
cmp
shll
fmull
cmp
leave
xchg
es
fnstenv
inc
stos
jg
scas
fnstcw
and
ja
int
or
mov
loope
inc
xlat
sbb
mov
fdivrp
repz
mov
xchg
sub
fwait
outsb
movsb
into
or
sub
fidivs
movsl
cwtl
pop
inc
rorl
mov
inc
mov
cwtl
inc
xchg
jle
movsl
test
xchg
xor
pop
aam
add
data16
in
mov
mov
lods
add
aaa
clc
dec
jnp
add
mov
jge
or
cwtl
imul
mov
xor
out
subb
cmp
jno
ljmp
inc
test
test
mov
ja
mov
cli
sub
loop
in
rolb
sahf
js
jae
stc
mov
idiv
mov
leave
lods
lcall
lret
call
cmp
mov
cmpsl
xchg
mov
in
je
mulb
and
nop
xor
jne
and
lcall
pop
xchg
andl
clc
dec
rclb
mov
or
ja
gs
lret
sbb
cld
push
es
mov
push
andb
fdivrl
inc
mov
stc
dec
mov
jo,pt
out
sub
lods
push
fs
inc
add
rcrl
out
xchg
mov
jne
or
xor
sub
jmp
testb
xor
rorl
mov
jge
sub
mov
mov
jae
ja
mov
loope
mov
outsl
xor
rorb
mov
lcall
mov
push
pop
popf
cld
ja
or
popf
scas
push
inc
mov
cmpsl
jl
imull
jns
icebp
mov
mov
fiadds
lret
push
mov
idivl
push
push
insb
ja
jae
cmpsb
and
cmp
icebp
push
lahf
pop
jae
sub
dec
cmp
sbb
push
sub
pop
push
enter
lahf
movsl
insl
fmulp
clc
mov
add
sarb
addr16
iret
dec
movsb
pop
jg
mov
mov
pushl
push
iret
or
cmc
mov
inc
insb
insb
push
shr
jle
push
and
sarl
mov
in
or
sub
dec
xor
popl
pop
jp
fcmovnbe
icebp
rolb
pop
mov
ret
pop
xor
jns
adc
arpl
subl
mov
mov
aam
repz
mov
jmp
js
daa
out
xor
push
inc
int3
test
xchg
sti
mov
inc
and
pop
popa
cs
clc
mov
imul
lret
out
sarl
fldl
or
push
pop
int
test
pop
and
stos
dec
dec
lods
cmp
sub
pop
out
loope
push
mov
imul
push
jo
stos
sbb
ds
cmpsb
adc
mov
sub
xchg
stos
jle
icebp
dec
rorl
outsb
insb
gs
mov
js
jns
sub
popf
or
push
stos
mov
mov
sbb
outsb
es
ss
add
aaa
mov
std
pop
dec
out
imul
int
les
pop
int3
stos
popf
xchg
xor
sub
leave
jae
fwait
in
xor
adc
adc
insb
stc
rolb
adc
ja
inc
pop
adc
scas
sub
push
push
stos
jne
subb
fldenv
inc
sub
or
in
mov
test
dec
sets
scas
outsl
pop
lds
loopne
leave
cltd
mov
mov
and
ret
push
pop
loop
push
push
or
push
imul
fisttpl
adc
adc
push
and
sub
push
jo
xor
jno
hlt
xor
in
mov
sarl
add
xchg
and
sbb
test
or
mov
out
fistps
ja
xor
xchg
out
mov
push
adc
pop
add
loop
jl
add
fimuls
scas
jno
inc
pusha
les
ds
bound
mov
push
push
icebp
mov
adc
rcll
pop
mov
xchg
and
mov
mov
push
popf
mov
call
push
and
push
push
pop
sub
repnz
pop
fdivp
rorl
lcall
cmp
xchg
push
ss
test
ljmp
lock
stos
sbb
cmpsl
push
inc
outsb
or
add
pop
add
mov
cmp
fimull
lcall
sbb
sarb
out
cmpsb
shl
test
xchg
repz
pushf
les
dec
arpl
sub
shrd
test
jns
cmc
or
outsb
or
cmc
in
jns
and
jbe
jl
mov
test
cmpl
je
xchg
lds
push
adcl
hlt
addr16
rcr
sbb
js
sarb
dec
je
dec
subl
sahf
dec
pusha
movsb
dec
adc
stos
insb
inc
pop
or
xchg
cmpsb
xlat
sbb
orl
pop
insb
data16
lahf
stos
es
je
mov
add
es
add
or
push
dec
aad
push
cwtl
mov
lret
sub
add
pop
popf
stc
inc
adc
pop
repz
jae
jg
lea
or
andl
orl
xor
fisttpll
or
cmp
loop
cld
cmpsl
fdivs
cli
adc
ret
xor
inc
push
xor
push
rorl
xor
sbbb
pop
adc
xchg
fisubs
sub
adc
and
into
fidivrl
sbb
xchg
add
pop
popf
sub
xchg
movsb
fcmovne
in
sti
inc
add
in
fs
inc
lret
xor
mov
cmpsl
inc
sbb
cs
inc
loop
and
fimull
inc
pushf
sub
mov
inc
and
and
xor
nop
xor
out
xor
jmp
push
xor
movsl
dec
lods
push
lret
cmc
fs
adc
add
and
in
incb
stc
jbe
cmp
ret
fnop
in
call
mov
repnz
cmp
pop
add
sub
pop
data16
mov
popa
cmp
push
out
loopne
push
pop
pop
push
les
bound
in
xchg
xlat
cmp
adc
dec
push
popl
lds
add
sub
rolb
sub
dec
cwtl
mov
adc
test
cmp
pop
inc
inc
or
subb
pop
rcr
sahf
ds
movsl
inc
repnz
or
nop
xor
dec
sub
mov
sbb
jb
dec
fistpl
dec
mov
push
lds
dec
pop
movsl
inc
stc
fidivl
mov
xor
xlat
mov
jg
ret
push
addl
divl
test
js
jnp
and
mov
fnstenv
sahf
mov
pop
stc
int3
or
mov
ds
shll
jmp
cwtl
sub
lock
push
imul
pop
sbb
imul
test
jle,pt
push
mov
mov
fnsave
ret
jg
fcomip
lea
mov
pusha
daa
pop
out
fistl
ss
nop
test
inc
arpl
sahf
aad
in
and
fwait
xor
loop
dec
mov
cld
je
mov
or
push
inc
lahf
in
xor
fstl
lcall
in
xor
lret
inc
mov
push
mov
test
push
push
xchg
daa
xchg
ljmp
push
rcrb
sbb
dec
andb
jo
mov
or
xchg
sub
push
lcall
daa
fsubrs
leave
mov
inc
cmpsl
xlat
adc
lods
rclb
mov
lods
push
ret
imul
xor
nopl
mull
lea
fsubrs
add
pop
xchg
cmpsl
push
popa
iret
icebp
pop
daa
pmaxsw
imul
and
mov
dec
cmpsl
cli
ficompl
cmp
inc
sub
xor
popf
daa
or
movsl
lcall
and
dec
inc
mov
xchg
imulb
in
daa
into
add
ds
sbb
pop
cmp
sub
testb
sub
mov
addb
dec
mov
push
mov
xor
addb
hlt
out
and
es
fs
scas
xchg
mov
jmp
or
mulb
ret
movsl
or
stc
pop
sub
add
jmp
out
mov
or
sbb
aam
cmp
cmp
mov
add
ds
pop
pushf
jae
jb
push
xchg
mov
out
adc
sbb
fsubl
mov
int3
fwait
imul
mov
or
push
imul
sub
jae
sub
mov
lds
jl
inc
stos
idiv
push
loopne
push
out
jnp
aad
push
inc
js
dec
sbb
cmp
pop
hlt
jo
fwait
dec
mov
lods
push
push
nop
ds
loope
and
js
sub
and
push
mov
mov
nop
sub
lcall
addr16
popa
push
roll
fimull
cmpsb
test
or
rorl
sub
mov
sub
stc
imul
xchg
test
test
lods
aas
inc
lcall
ljmp
enter
jecxz
jg
aad
sbb
and
je
or
fdivl
jno
bound
icebp
adc
cmp
mov
adc
sub
cmp
pop
lret
rcr
add
sarl
mov
getsec
xor
fiadds
gs
sub
adc
mov
mov
mov
imul
insb
mov
cmpsb
push
fsubrs
leave
jbe
cli
mov
fists
sbb
jae
test
movb
std
inc
hlt
and
stc
xchg
dec
jecxz
daa
sbb
xchg
mov
aad
je
pop
into
xchg
add
inc
int
mov
je
pusha
add
loope
jae
adc
lea
mov
ret
mov
sub
fimull
sub
ret
call
aas
sbb
out
and
jno
adc
add
sti
mov
shll
mov
sbb
shlb
push
lods
sbb
dec
dec
pop
pop
xor
or
fidivs
loopne
and
frstor
repnz
fsts
or
cmpsl
and
subb
test
mov
dec
lret
test
fcmovnbe
and
ljmp
pop
in
and
test
sub
xchg
lods
mov
push
cmc
sub
mov
mov
fiaddl
mov
loopne
pop
fwait
js
lea
mov
push
dec
mov
gs
out
dec
out
fidivrl
or
insl
inc
in
inc
cmpl
enter
mov
mov
xor
mov
or
scas
dec
js
into
popa
mov
ret
jmp
inc
iret
mov
push
sub
xchg
test
inc
sub
addr16
pusha
mov
lock
add
gs
jmp
and
xor
cmp
orps
out
xor
adc
lods
insl
cld
outsl
push
negl
push
sbb
rorl
cmpsb
testb
test
push
mov
pop
push
xor
lcall
add
cltd
mov
nop
cmp
push
pop
stc
or
and
dec
loope
aad
sub
cmc
sub
popa
push
aad
je
pusha
inc
xor
mov
push
push
jge
inc
inc
ljmp
stos
outsl
mov
mov
mov
pushf
aaa
aam
imul
test
sti
pop
cmp
mov
push
sub
lock
bound
ss
mov
scas
out
mov
popl
mov
pop
mov
test
pop
bound
and
hlt
out
shl
adc
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
add
xchg
rolb
sbbl
push
mov
push
lea
enter
sub
push
mov
pop
push
jl
or
inc
out
insb
fildl
lods
adc
dec
aad
mov
mov
sbb
testl
mov
sub
mov
add
jmp
cmpsb
in
clc
loope
dec
push
mov
mov
or
inc
or
in
scas
and
loope
mov
jecxz
push
lahf
adc
xchg
lea
pop
incb
fists
cwtl
popf
push
sbb
add
arpl
add
shll
cmp
or
mov
popf
fwait
push
xchg
inc
xor
push
sti
pop
mov
fcmovne
imull
in
outsl
or
out
fidivrl
add
mov
jne
push
lods
push
repz
out
sub
adc
rclb
inc
leave
imul
sub
inc
cmp
jae
jl
fldcw
inc
add
repnz
frstor
ficoms
data16
mov
scas
xchg
dec
inc
cmp
out
cli
and
addb
mov
push
jp
sbb
push
cmp
iret
mov
aad
lods
inc
pusha
push
test
inc
popa
shll
jge
xlat
jne
mov
neg
mov
enter
push
adc
cs
lods
cs
push
scas
arpl
ds
fs
mov
pop
jb
pop
lods
mov
das
mov
cmpsl
js
ljmp
arpl
test
adc
hlt
mov
adc
push
pushf
imul
sub
lcall
mul
sti
jae
cmpsb
mov
sbb
jne
cs
jae
lahf
jnp
pop
pop
aam
add
jbe
jns
xor
sub
push
das
popf
stos
mov
mov
icebp
pop
mov
pop
add
lods
fwait
addl
mov
xchg
dec
js
fldenv
cld
adc
sbb
xor
ds
loop
dec
or
js
or
fcmovnb
lahf
adc
xor
int
inc
lea
pop
in
mov
js
fcmove
mov
je
jecxz
test
imul
and
fnstenv
push
cmp
xchg
dec
mul
jno
call
bound
push
push
scas
push
jmp
mov
inc
in
or
clc
int
sbb
mov
mov
fwait
test
gs
cmp
or
adc
outsb
push
out
into
dec
inc
fwait
cmp
popf
shrl
mov
push
insb
insl
jle
std
sub
idivl
pop
mov
es
ljmp
rol
test
in
mov
inc
xor
leave
jge
and
or
cltd
icebp
xchg
movsl
pop
pop
xchg
fldenv
push
jae
sub
inc
dec
jecxz
jbe
cmc
and
into
pop
adcb
pop
xor
push
gs
daa
push
inc
iret
jo
dec
jns
subl
aam
jg
ficoml
xor
stos
mov
dec
and
out
lods
lea
mov
cmp
je
pop
fcoml
cmp
and
movsb
pop
int3
fidivs
cmp
push
sbb
aas
push
add
dec
scas
loope
repz
in
dec
imul
adc
shlb
add
and
jo
dec
out
std
xchg
add
bound
lret
pop
xchg
mov
sub
scas
lret
loopne
out
push
enter
inc
inc
xchg
adc
fsubrl
leave
pop
aaa
jo
cmp
ljmp
outsl
jb
inc
fnstenv
jo
inc
aas
cmpsb
sbb
xchg
out
and
push
adc
adc
nop
adc
enter
or
mov
movsb
mov
jbe
adc
int
cmp
add
cmpsl
mov
outsb
fisttpll
sti
mov
aad
push
mov
mov
es
shll
jb
clc
xchg
je
enter
jg
pop
xor
test
cmc
cmp
scas
fimuls
stos
sbb
lock
rorb
mov
lahf
jae
dec
mov
add
bound
mov
push
xchg
enter
sub
xchg
repz
sti
pop
dec
cld
aad
cmpsb
imul
jecxz
ds
cmp
jmp
das
lea
lret
mov
lret
mov
sarl
fwait
into
add
mov
cmp
mov
shrl
mov
sti
jp
pop
cmpb
cmp
mov
cmp
movsb
fwait
xor
ss
dec
enter
sbb
adc
fisttpll
mov
inc
pop
nop
or
or
mov
xchg
and
dec
push
imul
mov
or
push
xchg
mov
jge
push
push
dec
test
pop
stos
sbb
fistps
cld
jecxz
pop
lcall
ljmp
ljmp
jne
adc
mov
xchg
incb
hlt
pop
movsb
mov
cltd
data16
lods
or
jp
or
add
pop
mov
add
cwtl
fisubl
mov
lahf
jae
hlt
push
out
je
cmp
add
mov
cmp
insl
ds
push
cmc
divb
test
lock
mov
das
mov
xchg
rol
repz
cmpl
sbb
pop
or
adc
ljmp
push
jg
mov
call
or
fs
cli
or
loop
sbb
enter
mov
aam
pop
inc
adc
xor
push
testb
add
dec
enter
aad
mov
out
jb
jns
notl
mov
inc
movntps
push
imul
cmpsb
or
xchg
mov
movsl
dec
mov
xlat
lods
xor
mov
xor
in
sbb
aad
int
or
inc
adc
xchg
icebp
mov
mov
adc
aad
sti
push
adc
sbb
push
frstor
dec
xchg
jno
mov
jle
stos
ret
mov
addr16
xchg
clc
call
fisttpll
sbb
push
into
jbe
pop
mov
incb
int3
pop
rclb
sbb
add
pop
or
xchg
and
sub
dec
mov
rcrb
pop
sub
lret
or
out
mov
pushf
mov
in
adc
xor
mov
or
mov
pushf
out
aaa
mov
stc
in
cmpsb
jmp
lock
inc
cwtl
ja
jnp
aam
inc
pop
rcr
inc
cld
mov
adc
pop
cmp
fdiv
xor
cwtl
je
and
cmp
outsl
hlt
xor
xchg
sub
push
out
ret
jp
outsl
insb
cmp
add
add
in
loopne
pop
out
jne,pt
mov
cmpsl
aas
shl
out
push
pop
add
sub
jns
sub
insb
cmp
outsb
push
mulb
iret
pop
jno
mov
mov
push
in
push
jae
movsb
subl
andl
out
jl
insl
ljmp
push
xorl
mov
std
sahf
das
push
nop
aad
or
movb
mov
fs
jle
fucomip
mov
sbb
out
and
test
mov
lods
insl
repz
daa
std
cmc
pop
mov
sub
cld
popf
adc
cmp
sbb
xchg
in
sbb
push
or
pop
xchg
popf
lcall
adc
mov
lock
insb
idiv
pop
lods
rcrl
mov
sti
popf
sti
xchg
ja
mov
sub
cmp
push
xchg
and
fildll
daa
sbb
insl
stc
jge
pop
cmc
xor
cmpsb
mov
inc
adc
call
xor
mov
adc
xchg
ljmp
jne
pop
repz
testl
lea
mov
lcall
and
dec
sbb
mov
addr16
mov
jnp
or
fldt
fmull
or
ja
mov
stc
xor
sub
pop
sti
push
mov
aaa
xchg
in
fsubl
mov
sarb
call
fisttpl
push
push
jmp
mov
out
jae
test
andl
fmul
mov
flds
shrl
inc
mov
cmp
and
insl
test
aas
or
std
push
adc
sbb
data16
or
out
negb
loop
arpl
int
popf
pop
es
cmc
inc
stos
loope
cwtl
popa
ficomps
test
pop
pop
jnp
gs
pusha
dec
aaa
pop
cltd
data16
and
cmc
negb
lcall
in
les
sub
push
push
nop
test
movsb
das
fiadds
mov
pop
cmp
add
repz
lcall
mov
pop
ret
sti
bound
test
bound
inc
pop
sub
jl
ss
jl
fs
pop
xor
mov
push
rcll
inc
jge
jbe
xchg
xor
inc
fsubs
rcrl
add
out
daa
cmp
test
jae
cli
test
cmp
jl
mov
fdiv
icebp
in
dec
std
scas
pushf
cvtdq2ps
inc
pop
fisttpl
jnp
mov
push
mov
ss
lret
push
inc
cmp
repnz
mov
sbb
mov
popa
pop
negl
mov
in
mov
outsb
dec
scas
rcl
pop
lds
adc
jae
int3
popf
lcall
push
jno
cmpl
mov
cltd
scas
lock
ret
int3
mov
mov
lds
dec
push
inc
cmp
mov
mov
rolb
lods
push
rorl
mov
xchg
push
push
pop
loopne
jno
and
pop
ljmp
lock
xor
ror
imul
adc
popf
jmp
ljmp
outsl
cmp
cmp
std
dec
pop
test
sub
inc
mov
pushf
and
pop
imul
cmp
cli
sub
mov
push
inc
or
mov
bound
xchg
data16
insl
ficomps
push
ret
cmpl
pushf
in
das
cwtl
cmpsb
fsubrs
filds
sub
sbb
shl
ljmp
pop
pop
outsb
push
jbe
sub
xor
nop
in
or
push
xor
in
push
repz
push
loop
xchg
pop
jne
xchg
pusha
fsub
loope
fimull
mov
mov
cmpsl
jno
lret
lds
mov
xchg
mov
sbb
xor
xchg
incl
in
sub
sti
rcr
fisttpl
xchg
mov
out
loopne
mov
cmp
ljmp
sub
lahf
in
inc
testb
out
aam
fadd
jp
cltd
pop
jecxz
ret
push
mov
sbb
rorb
pop
jle
test
mov
and
sub
dec
test
or
and
push
dec
xchg
mov
and
sub
sub
xchg
or
out
and
test
sti
je
bound
lea
inc
in
xor
mov
cli
cltd
cwtl
jns
xorb
jmp
pop
pop
add
arpl
and
sub
repnz
cmp
imul
add
insl
sub
jbe
xchg
pushf
and
xchg
mov
mov
cmpsl
xchg
cmpsl
xchg
pop
repnz
cs
mov
ljmp
fcomps
cmp
xchg
int3
mov
lcall
in
ljmp
cli
xchg
test
cmp
ss
popa
mov
or
or
cmp
jp
gs
frstor
iret
or
mov
cmpsb
mov
xor
out
testl
and
mov
imul
adc
cmp
cmpb
fnop
into
push
xchg
mov
mov
aam
ss
pop
and
mov
jbe
cld
ljmp
rcrb
xor
adc
xchg
adc
cwtl
add
cs
stos
adc
gs
push
rol
pop
mov
pushf
into
lret
nop
cmp
jae
test
xor
ja
push
ret
orl
lcall
pop
lea
call
in
test
insb
dec
cwtl
lods
fistpl
mov
push
push
addr16
or
add
mov
out
xchg
cld
movsl
inc
ret
lcall
or
in
mov
int3
fsts
std
pop
je
jae
push
repnz
lock
mov
inc
cmc
mov
mov
push
stos
sub
pop
jle
mov
jle
shll
sbb
stos
leave
arpl
jp
push
test
jecxz
sar
mov
mov
or
mov
push
add
pop
mov
inc
add
inc
lret
add
mov
test
mov
es
ljmp
ds
and
pop
xchg
pop
pop
jae
and
add
mov
cwtl
push
std
popf
outsb
in
or
push
arpl
loopne
cmp
inc
pop
das
pop
addr16
add
les
mov
in
fdivr
inc
mov
xchg
push
mov
scas
repz
push
test
lods
push
jl
rorl
xchg
adc
cmp
and
aaa
shrl
loope
push
int3
dec
or
or
shll
sub
inc
or
inc
mov
adc
xor
sbb
inc
lret
icebp
cmp
cmp
adc
ret
subl
dec
push
dec
pushw
sub
push
out
loopne
adc
cmp
data16
lods
push
xchg
mov
cmp
xor
cmpsb
cmp
stos
test
js
jb
fcoml
pop
jecxz
add
jo
fdivr
lds
cmpsb
jp
sahf
pop
adc
out
hlt
xor
ds
sbb
xchg
jbe
lods
out
jmp
popf
adc
push
stos
xor
or
jg
lods
mov
sub
pop
testb
xchg
ret
popa
or
daa
ficompl
ret
aas
ds
add
ret
lock
mov
mov
push
stos
mov
rcrb
int3
mov
push
in
mov
push
jecxz
int
dec
sub
cltd
jb
jle
adc
lds
dec
xlat
fld
mov
inc
pop
sub
or
clc
jp
aas
leave
mov
repz
call
mov
add
repz
xor
xor
fstpl
scas
fidivl
out
xchg
scas
sub
test
sbb
and
mov
out
xchg
xchg
mov
jmp
adc
xchg
dec
rorl
jo
inc
loopne
mov
mov
inc
mov
fs
lret
das
aad
inc
shrl
in
jp
add
pop
jle
stc
aad
cmp
js
movsb
push
insb
fwait
and
fcompl
cwtl
and
dec
sub
dec
outsl
es
mov
jno
es
inc
pop
insl
and
inc
or
aaa
inc
fildl
fcomps
aaa
loop
loope
movsb
orb
sahf
icebp
mov
cli
outsb
js
push
stos
cwtl
xchg
pusha
push
popf
jge
xor
fmuls
jmp
out
push
das
push
mov
mov
sub
mov
xchg
jecxz
xchg
and
mov
jge
adc
cmpb
fcomi
stos
mov
add
stos
iret
cld
dec
and
jmp
and
xchg
inc
adc
movsl
out
jp
mov
lds
cmp
mov
pop
sbb
jbe
add
sub
xchg
pop
cli
jbe
loop
or
shl
insb
movsl
cmpsb
add
xor
cld
imul
lods
add
jle
scas
inc
sahf
mov
push
ds
xchg
jns
cmp
cltd
pop
push
cs
mov
negb
lret
cmp
add
xor
dec
adc
arpl
push
addb
add
clc
push
dec
jne
dec
pop
mov
fs
adc
add
lds
or
cmc
loop
ljmp
std
jl
jae
xchg
pusha
jnp
mov
popl
outsl
mov
and
insb
xor
addr16
ja
shrl
mov
fsubr
sbb
push
pop
or
xchg
fisttpl
push
mov
cwtl
push
push
and
inc
jle
sbb
inc
aas
mov
mov
mov
mov
cmp
outsl
cmp
jg
add
sub
sbb
es
negl
sub
xlat
fstpt
outsl
sbb
pushf
add
and
mov
arpl
jbe
inc
sbbb
cmp
es
addb
popf
cmpsb
push
shlb
pop
insb
sub
std
lret
sbb
lcall
mov
push
mov
aaa
clc
mov
sti
leave
xchg
rorb
les
sub
dec
adc
dec
imul
popa
fwait
mov
sub
cld
stc
xchg
xor
dec
cmp
or
cmc
adc
sub
push
adc
arpl
cmpb
outsl
test
add
movl
stos
aam
push
adcl
and
add
push
les
sahf
push
push
xor
bnd
jmp
xchg
or
insb
sub
sti
mov
test
fistpl
ds
jbe
inc
mov
dec
loop
loopne
enter
pop
das
sbb
and
push
int3
popa
rclb
xchg
test
outsl
pop
ja
add
add
clc
pushl
in
loop
lods
push
dec
jp
mov
push
arpl
pop
fucom
sub
pop
mov
mov
sbb
jge
cltd
scas
ss
std
mov
cs
lahf
jecxz
dec
sub
mov
xor
aam
loop
fisubs
icebp
sahf
adc
dec
or
into
jp
sub
pusha
jns
stos
sub
add
dec
int3
cmp
mov
ficompl
mov
pop
and
jmp
jns
ret
shl
in
xchg
sub
mov
stos
xchg
pop
xchg
xchg
rolb
out
sbb
mov
jnp
sbb
insb
inc
mov
bound
xchg
inc
rcl
ret
sti
fisttpl
xchg
lods
rorl
jbe
push
push
push
mov
or
push
nop
pop
and
fsub
stos
adc
mov
ret
arpl
sahf
push
inc
inc
filds
stos
pop
or
add
insl
mov
pop
jne
pop
lods
cwtl
notl
inc
sub
jo
outsl
orl
inc
push
jae
ljmp
stos
lret
jge
push
lock
int3
or
push
sbb
addb
and
mov
bound
mov
fmul
sti
int3
add
mov
cs
out
inc
loope
inc
pusha
or
cmp
das
pushf
jo
leave
mov
mov
mov
cmp
bound
test
cmp
mov
mov
and
xchg
xor
push
push
inc
js
pop
adc
adc
loopne
mov
pop
xor
sbb
das
pop
out
push
dec
cli
push
push
fsts
or
inc
outsb
pop
lret
inc
pop
and
sbb
add
cmp
je
popa
pop
ljmp
cltd
insl
jbe
call
jl
pop
cld
jle
jle
jge
jnp
cld
push
and
jns
xor
ret
loope
pop
mov
sbb
repz
sub
adc
bound
push
sub
mov
rclb
add
sbb
loope
or
repz
pushf
jle
cmpsl
jo
les
cmp
jge
jp
mov
out
inc
and
sbb
pop
xchg
inc
cmp
push
push
in
data16
iret
or
cmp
jmp
std
inc
inc
mov
ror
pop
push
out
jae
mull
pop
xchg
out
hlt
inc
repnz
outsb
push
nop
lahf
mov
into
test
out
std
mov
inc
xor
push
idivl
aad
popw
inc
add
lret
cmp
ret
pushf
into
jae
mov
mov
jb
and
lea
popa
pop
push
mov
push
in
push
orl
nop
xchg
dec
xor
and
jmp
and
sahf
aas
pop
cmpsb
push
dec
xor
push
aad
mov
cmc
ljmp
test
jge
out
fistpll
lods
and
fnstenv
out
in
inc
stc
add
xchg
popf
mov
mov
add
mov
pop
ret
add
xor
test
xor
fs
ret
fistl
clc
mov
sbb
mov
lods
pop
xchg
and
dec
sub
pop
icebp
sub
push
repnz
outsl
dec
fldcw
mov
loope
sarl
add
insl
jbe
mov
mov
movsl
lcall
cmp
stos
lret
inc
mov
je
adc
or
adc
sub
ret
xchg
xchg
rolb
dec
ljmp
add
rcrl
lret
in
mov
int3
int
daa
in
sub
or
data16
mov
sbb
lea
outsl
enter
lds
out
lds
ja
cmc
xor
dec
rorb
adc
mov
ss
out
out
cltd
out
sub
aad
push
jns
cmpsl
mov
mov
sar
sub
insl
in
insb
clc
and
ja
arpl
loopne
into
lock
xchg
xor
fidivrl
in
out
in
inc
aad
sbbl
dec
push
insl
lahf
mov
pushf
xor
or
xchg
clc
cltd
adc
xor
mov
cli
ret
rcrl
jae
lret
or
xchg
cmp
lret
pop
mov
and
mov
leave
cmp
insb
pop
inc
adc
outsl
repz
xor
mov
pop
add
fiaddl
sbb
stc
ss
ficoml
ljmp
cmp
ret
pop
pop
mov
dec
mov
or
push
dec
add
flds
pop
rorl
xor
inc
sarl
out
push
ficoms
loope
aaa
jl
les
movsl
sbb
jmp
jno
push
loopne
or
jne
pop
mul
xchg
mov
jb
xchg
inc
xor
pushw
insl
dec
insb
testl
jmp
fistpl
cmpsl
add
cmovg
stos
jle
push
or
fcoml
xchg
dec
xchg
push
in
ljmp
movb
xlat
test
sub
dec
ds
stos
sub
pop
stc
mov
and
or
scas
xor
cld
adc
push
lea
push
xor
dec
insb
jnp
fadds
mov
xchg
cmp
test
fmull
cmp
mov
xor
or
in
pop
push
call
mov
add
and
fistps
and
cld
in
roll
fisubs
icebp
and
outsl
push
jb
popa
pop
jbe
cs
jmp
or
sub
mov
inc
ss
sti
inc
stos
mov
cld
jnp
addl
push
ja
mov
or
jge
test
pop
inc
push
mov
cmpsb
sbb
lock
dec
lds
clc
pop
outsb
jge
fs
setbe
xlat
ret
dec
dec
mov
int
subl
arpl
sbb
sbb
push
int3
arpl
sbb
in
std
fsub
testl
cld
or
out
push
cmp
test
or
pop
lcall
test
stos
mov
add
mov
mov
loope
sti
inc
movsb
mov
inc
clc
inc
popa
jp
cltd
sbb
cs
fwait
icebp
push
xchg
inc
idivb
pushf
jl
dec
pop
push
mov
nop
ficoms
rcrb
xchg
mov
cmpsl
imul
pop
jne
xchg
subb
jle
fsubl
cld
rcrl
sbbb
lahf
xor
scas
jmp
cli
and
xchg
into
mov
and
push
fidivrl
lods
fidivs
jle
cmp
gs
repz
push
adc
sahf
adc
mov
cli
mov
mov
dec
bound
hlt
ret
and
into
inc
xlat
mov
xor
sbb
jno
ds
cmp
loope
lret
pushf
dec
insl
sbb
out
fisubrs
jne
pop
lret
push
add
test
outsb
pop
lods
ja
add
dec
fnstsw
lds
mov
aas
cmc
dec
adc
push
pop
xlat
test
mov
in
jo
pop
dec
mov
inc
adc
or
movntq
out
imul
mov
or
neg
adc
stos
jnp
out
jo
lds
adcb
les
xchg
pop
pop
pop
pop
scas
jb
push
dec
orb
je
lcall
lea
movsb
sbb
popa
or
or
pop
or
mov
enter
dec
and
mov
push
ss
and
lahf
jne
clc
inc
out
mov
lahf
cmc
jmp
add
sbb
mov
shlb
cmp
jns
mov
out
rcll
fsts
ret
jae
jl
xchg
enter
adc
lahf
aam
inc
test
paddq
mov
add
dec
scas
cmp
js
iret
inc
xchg
ljmp
frstor
inc
ret
icebp
in
push
dec
testl
jmp
mov
push
inc
push
out
lahf
sarb
cs
out
jns
mov
idivb
imul
test
mov
insl
les
fdiv
lahf
xchg
repz
xchg
das
add
xor
xchg
insb
jp
pop
mov
imul
inc
sub
dec
insl
sbb
xor
fsubs
push
pop
jecxz
cmc
mov
jnp
or
andb
pop
sbb
cmpl
xchg
mov
xchg
xchg
pusha
fld
les
adc
add
cli
jmp
shr
push
push
je
loopne
xorl
fnsave
inc
push
adc
add
sti
cwtl
stos
enter
or
aaa
jnp
fisubl
sbb
mov
sbb
insb
call
adc
stos
das
inc
pop
imul
mov
inc
loop
insb
cmp
jmp
push
lods
fisttps
jns
pop
xchg
lcall
xor
push
push
ja
aaa
imul
and
cltd
out
jbe
jo
xlat
inc
sbb
repz
ja
cwtl
pusha
push
hlt
xor
loopne
lods
xchg
cmp
cs
and
popa
mov
jns
xchg
shl
jbe
mov
fisubs
adc
mov
orl
xchg
lds
mov
hlt
rorb
mov
dec
ret
push
popa
sbb
cmp
nop
shl
aas
dec
lods
jmp
aam
mov
cmp
inc
xacquire
mov
adcl
mov
sbb
sarl
fwait
cwtl
bound
in
test
clc
mov
jo
jmp
leave
pop
cltd
jae
ds
or
push
loope
xchg
adc
add
cmp
popf
addr16
daa
insl
sbb
movsl
clc
adc
jb
mov
xchg
sub
jle
orb
mov
imul
imul
xor
fdivr
repz
hlt
clc
xchg
xor
jb
sub
cmp
pop
xchg
sub
stc
add
push
jb
and
jns
or
aaa
rcll
mov
fdivrl
addb
push
jmp
mov
push
stos
stos
jmp
add
insb
es
adc
dec
dec
das
scas
adc
dec
or
inc
fbstp
ror
dec
out
pop
jl
test
nop
sub
pop
xor
xchg
mov
sub
xchg
daa
mov
aas
idivl
mov
shl
push
lds
ror
fsubs
inc
roll
out
pop
mov
dec
ret
es
adc
sub
pop
and
mov
jge
pop
inc
jns
leave
cmp
int
mov
js
mov
addl
mov
push
movsl
pop
xor
sti
int
cmpsb
dec
sub
xchg
fmulp
into
fwait
push
shrb
add
adc
sbb
lcall
idivb
jns
fwait
inc
sub
push
mov
pop
add
sub
xchg
iret
insl
lods
push
pop
aas
xchg
sub
cmpsb
cmp
leave
sub
shr
or
insl
rcrb
ret
insl
xor
mov
push
or
xor
jmp
and
lahf
bound
mov
push
es
mov
cmc
lret
pmulhw
imul
push
xlat
enter
cli
xor
jo
jl
fwait
lcall
aas
adc
cmp
ja
sbb
jp
lods
mov
dec
add
cmp
aam
sub
xchg
test
ds
jle
push
mov
aam
dec
xor
pop
mov
test
repnz
int3
in
test
retw
jno
idivl
cmp
cmp
or
sarl
test
and
inc
stc
adc
pop
jle
addr16
std
fs
xchg
outsl
xor
mov
dec
lock
imul
jmp
mov
sub
leave
lahf
outsb
movsb
js
mov
and
js
adcb
xor
das
sbbb
into
lods
mov
inc
movsb
mov
movsb
xchg
inc
and
seta
sbb
jecxz
stc
sub
test
inc
gs
in
push
jbe
cli
xchg
jp
cmp
sti
add
xchg
test
arpl
mov
rclb
cmp
loopne
jo
clc
jo
fucomip
xor
popa
jp
and
subw
jbe
insl
xchg
push
add
shlb
sbb
sub
sahf
sbb
sub
scas
int
push
fidivl
mov
dec
ss
fldcw
in
and
cmp
add
mov
iret
push
xor
int3
test
call
andb
jae
push
pop
push
pop
sub
pop
fxch
test
sbb
ret
fldcw
test
pop
mov
fyl2xp1
cmp
in
pop
mov
sarb
out
das
push
jle
pop
int3
js
sub
sbb
lret
adc
in
mov
dec
mov
fcomp
test
div
mov
jle
stos
or
daa
lock
mov
pop
adc
adc
push
push
outsl
lret
and
push
sub
pop
sub
pop
popa
inc
pop
and
pusha
xchg
lods
xchg
mulb
inc
out
mov
jo
xchg
lock
shll
add
das
jb
push
add
jns
out
pop
out
lods
cli
jle
clc
push
arpl
lret
sti
dec
or
xchg
push
pop
sub
or
jecxz
je
les
insb
clc
decb
jne
call
aaa
in
add
sbb
movsl
inc
sub
and
std
jo
xlat
mov
cli
rcl
iret
out
dec
sub
or
ds
das
cld
es
cmp
aas
out
out
push
rcrb
mov
inc
dec
sbb
inc
rcr
popa
dec
dec
lret
push
lea
jmp
pusha
jae
lock
mov
or
cmpsl
jecxz
cmc
mov
cmp
xchg
popf
cmp
inc
push
push
jns
icebp
sub
sbb
mov
out
pusha
mov
scas
ljmp
jnp
mov
or
test
pop
ds
js
cld
les
test
inc
fisttpll
fimuls
pop
mov
dec
push
push
aad
xlat
aam
fistps
adc
dec
iret
jnp
arpl
nop
xchg
fildll
and
sbb
push
mov
lods
insb
xor
sub
push
xchg
clc
mov
mov
bound
adc
js
lret
mov
arpl
mov
sbb
imul
addr16
imul
mov
mov
icebp
push
aad
and
imul
aaa
cmp
mov
enter
jbe
push
mov
add
xor
fcomi
test
and
add
or
in
rorb
dec
and
add
inc
loopne
add
add
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
mov
scas
addl
imul
js
repz
push
mov
js
fidivs
inc
or
fdivl
loopne
cmpl
clc
fcoms
mov
sbb
hlt
inc
lret
fidivs
mov
cwtl
add
imul
sbbb
mov
and
push
push
adc
xor
ret
mov
movsb
inc
test
xor
pop
flds
jmp
adc
inc
or
mov
add
addl
ljmp
popa
push
je
and
add
xchg
mov
lahf
xchg
test
lea
adc
shll
fsin
das
push
cltd
mov
insl
rclb
xor
idivb
xchg
add
fwait
lods
push
enter
xlat
xchg
stos
or
icebp
jle
int3
inc
loope
movsl
xchg
shlb
cmpsl
stc
push
pop
hlt
into
sub
jge
fmul
mov
lcall
out
out
adc
in
movsl
lret
aaa
cmc
xor
cmp
ret
and
push
pop
pop
and
xor
sbb
xor
movsl
push
in
sbb
repnz
jl
std
mov
loop
pop
xchg
and
dec
fldl
sub
arpl
shlb
inc
jl
mov
inc
stos
insl
dec
fmull
and
fnsave
xchg
shlb
mov
test
mov
push
jo
out
or
jne
mov
add
lods
out
xlat
xchg
sbb
rorl
and
mov
cmp
cli
clc
cmp
xchg
xchg
dec
mov
divl
pop
wrmsr
ret
mov
dec
push
ss
add
add
les
push
jecxz
add
mov
imul
mov
xor
ja
cmpl
dec
pop
mov
cld
or
repnz
aad
fdivrl
or
je
nop
push
mov
insl
mov
push
test
add
pop
push
fsubrp
cs
mov
xorl
push
sub
into
cmp
imul
adc
les
pop
lods
pushf
bound
test
and
aaa
push
stc
adc
push
pop
loope
xchg
jo
icebp
btl
jbe
dec
pushf
stos
mov
jbe,pn
jp
cmc
cs
repz
fdiv
fwait
push
mov
cmpsl
jge
icebp
pop
mov
sbb
imul
sub
add
lock
sub
js
push
and
outsl
repnz
insb
xor
repnz
mov
test
fcoms
mov
std
pop
sbb
dec
rcrl
add
cmp
mov
and
cmp
mov
xor
cs
cs
or
imul
popa
jno
out
or
xchg
or
mov
aas
test
sub
fcomp
sub
mov
shll
enter
aad
aam
out
paddsb
mov
sarl
das
push
push
mov
shr
mov
add
insl
js
out
inc
pushf
and
lcall
popf
xchg
or
cmc
int3
and
mov
std
cmpsb
mov
sti
fldcw
mov
xorb
fistpll
andl
sub
jne
add
aam
pop
jb
loopne
mov
push
sub
hlt
sub
pop
xor
jp
int
lock
repz
mov
jecxz
adcb
add
cwtl
ds
enter
scas
cltd
inc
aad
fldl
push
pop
lret
mov
in
es
fimull
xor
aaa
ss
outsb
mov
fs
popa
dec
aas
jecxz
pop
scas
xchg
lcall
mov
add
mov
push
pusha
mov
lods
shll
jp
in
adc
mov
shll
jl
cmp
popf
jb
aad
imul
cli
sub
cmpsb
popa
dec
lahf
or
je
test
xor
vmwrite
imul
test
test
movsb
fwait
stos
mov
vfmsubaddpd
hlt
sbbb
lods
aam
pusha
lret
lret
scas
dec
sub
sti
inc
jno
ret
push
lods
sbb
sbb
lret
add
xchg
jp
sarb
pop
jl
xchg
sbb
mov
pop
icebp
and
sarb
sti
mov
test
sbb
sbb
sti
mov
bound
and
xchg
push
popf
ret
sub
add
lcall
in
into
sbb
clc
lds
inc
pop
mov
cs
lods
sub
cmp
fs
test
sti
pop
loopne
dec
xchg
inc
cld
adc
add
fmuls
add
lahf
lahf
cs
pop
sub
cmpsl
les
sahf
pushf
and
add
ficoms
loope
movsl
cmpsb
cmp
push
js
adc
inc
mov
adc
outsb
xchg
imul
fsub
add
movsb
add
ljmp
sbbl
repz
adc
lahf
jns
jmp
cmp
and
stc
or
test
mov
mov
push
push
out
sbb
pop
insb
mov
or
int
xor
add
dec
push
movl
mov
das
xchg
dec
aam
and
test
inc
mov
sbb
out
movsb
sbb
jg
jmp
mov
pop
jno
xor
movsl
icebp
stos
mov
call
js
sub
push
aas
jle
sub
leave
hlt
jbe
cmp
ja
mov
and
cmp
or
mov
xchg
xchg
and
fiadds
test
es
adc
iret
inc
int
mov
xor
mov
fbstp
test
bound
mov
adc
jb
das
fisttpl
sbb
es
ret
int
xor
andl
in
ror
mov
out
dec
push
mov
jnp
xchg
xchg
jle
loopne
clc
mov
fldenv
hlt
stos
stos
mov
test
ret
mov
loopne
adc
std
pop
jne
mov
negb
jo
adc
addr16
and
mov
and
aad
sub
sub
sbb
mov
pop
mov
mov
in
pop
xchg
in
xor
jl
add
push
vaddss
and
and
in
push
cwtl
inc
in
dec
xor
ffreep
mov
push
dec
and
out
mov
bound
dec
cmp
xchg
mov
and
inc
or
cmp
add
adc
mov
sbb
push
jl
xor
gs
imul
pop
jo
push
mov
mov
imul
out
xchg
test
je
loope
jmp
pop
mov
sub
push
repnz
les
ja
pop
mov
jbe
cmpsb
inc
daa
mov
xor
fmull
cltd
mov
jmp
rorb
jne
jp
inc
lock
jae
cli
xorb
jbe
fcoms
mov
pop
out
pop
mov
inc
mov
ror
jb
add
aad
stos
jbe
pop
or
mov
sbb
jb
repnz
lcall
mov
jle
or
cmp
sub
xchg
sbb
sti
sti
and
cmpsb
mov
aad
popf
leave
mov
cmpsb
mov
in
lret
push
xchg
pop
ret
inc
or
sti
push
mov
fsubrl
arpl
xor
mov
or
out
or
ss
xchg
lcall
inc
leave
inc
dec
fcmove
cmp
arpl
jns
mov
dec
in
nop
dec
add
ret
sub
stos
and
inc
out
lods
loopne
andb
cmp
mov
lcall
sub
mov
mov
fsub
test
xor
into
pop
repnz
nop
lret
mov
fildll
xor
stc
cmp
add
int3
pop
sub
sub
add
mov
cmp
mov
out
mov
paddw
adc
ss
push
lea
cli
or
cmpsb
sahf
pop
xchg
fldt
imul
fdivl
and
out
int
cld
sbb
sbb
cwtl
inc
les
in
das
ret
movsb
inc
orl
sarb
cmp
sbb
mov
sub
in
pop
push
xor
into
mov
data16
add
push
jo
mov
or
inc
cmc
fidivs
orl
testb
xor
adc
mull
and
push
inc
mov
aas
fucompp
call
sub
mov
or
dec
scas
das
aas
cli
adc
mov
shl
add
pop
and
jle
repnz
stos
fmuls
mov
cmpsb
repnz
shll
cld
pop
nopl
xchg
inc
sub
jns
cmp
xchg
nop
mov
aad
jno
movsb
mov
lcall
pop
repnz
mov
jb
sbb
ss
jbe
cli
sahf
push
or
jbe
scas
fnstcw
inc
jne
incl
movaps
and
cld
xor
pop
mov
adc
out
outsl
mov
cmp
push
enter
adc
clc
cmpsb
bnd
popf
jo
test
stos
nopl
in
call
stc
ja
sbb
cltd
jmp
xchg
or
jmp
mov
push
mov
mov
int
scas
or
and
sbb
lea
fisubrs
and
insb
js
dec
dec
in
test
dec
xchg
mov
and
pusha
sarb
and
pop
lret
aam
movsb
sbb
pop
or
mov
sbb
leave
mov
imul
and
mov
xor
jo
mov
fldenv
shll
xchg
test
push
stos
cmp
xorb
pop
and
pop
in
shll
dec
adc
or
or
inc
push
xor
sahf
loopne
out
int3
rorl
push
test
inc
push
pop
mov
sbb
xchg
xor
pop
mov
mov
dec
jne
fbstp
dec
fwait
xchg
jnp
mov
xchg
cmp
loope
lods
mov
out
and
lea
add
sbb
rcrb
dec
pop
outsl
xor
je
xchg
add
dec
rorl
popl
xor
pop
jp
xor
dec
xchg
inc
pop
pop
dec
je
xor
shll
sbb
push
clc
jo
rcrb
rcrl
pop
or
sub
xor
and
jb
sub
adc
jne
lea
int
lahf
cltd
sbb
imul
clc
xchg
sub
inc
divl
xchg
addr16
and
ficompl
jle
sub
test
dec
jo
mov
sbb
dec
xor
cld
fistpl
sbb
sub
outsb
xor
nop
push
sbb
stc
inc
pop
adc
notb
cli
pop
jecxz
jl
pop
fisttps
cmp
pop
sub
add
setnp
je
call
ja
adc
inc
bound
into
sub
fidivl
pop
shll
or
jb
notl
mov
sbb
mov
fwait
lret
rcr
jg
popa
add
insb
outsl
test
or
lret
push
int
scas
adc
imul
in
adc
mov
fwait
cmp
scas
pop
loopne
aad
jns
cmpsb
les
ficomps
add
mov
jne
test
inc
sub
aam
sub
out
in
ljmp
rcrl
subl
repz
pop
mov
cmp
jnp
idivb
mov
gs
xchg
pop
sbb
pop
dec
outsl
pusha
pop
cmpsb
mov
push
gs
ljmp
dec
xchg
pop
push
stc
or
rcll
push
mov
inc
dec
or
lea
fwait
add
inc
inc
movsl
pop
test
cmc
les
aas
rolb
into
rolb
addr16
aam
imul
mov
xchg
imul
adc
mov
andb
xor
in
lods
xor
pop
fldcw
sub
push
lret
popl
jbe
int3
dec
js
jecxz
push
sbb
cwtl
test
test
cmc
jle
nop
out
test
jae
ret
add
sub
xchg
repz
or
add
outsb
repz
sar
mov
decb
push
fcom
in
mov
push
mov
jge
and
add
mov
jo
es
xor
bound
sbb
and
mov
ret
jl
gs
fildll
lcall
and
fcomps
pop
in
mov
cld
push
jno
nop
sarb
rcll
xor
jns
fisubrs
test
test
sti
mov
push
movsb
mov
mov
push
xchg
sub
test
inc
loopne
outsl
mov
mov
mov
mov
mov
mov
or
sbb
mov
mov
sub
data16
test
out
push
fmulp
add
sbb
xor
sub
js
inc
mov
mov
scas
pop
xchg
call
lock
daa
xlat
negl
mov
lcall
scas
jp
cmp
call
fwait
scas
mov
aas
push
jne
push
xlat
jo
pop
cli
inc
cmpsb
mov
sbb
ret
psubusb
inc
ds
stos
dec
in
mov
or
mov
js
fsub
imulb
iret
cmp
loopne
pop
ffreep
dec
xor
cmp
fsts
cmp
mov
mov
sbb
fisubrs
je
sbb
insl
fisubl
xor
lea
ja
sub
push
fisttpll
add
lock
sbb
int3
adc
push
jl
fbld
jecxz
call
mov
jae
sub
ss
dec
lds
add
push
mov
pop
mov
fisttpl
sbb
sub
aaa
or
sbb
sarl
sbb
out
add
mov
mov
push
jo
pop
inc
test
outsb
lcall
jmp
icebp
inc
sub
shll
stc
subl
mov
nop
push
mov
cmp
pop
xor
xchg
pop
aad
xor
cmp
ret
or
mov
sbb
imul
into
iret
mov
dec
adc
jae
movsb
pushf
add
adc
movsb
std
loope
mov
push
pop
cmp
sbb
repz
pop
mov
dec
inc
in
stc
mov
sahf
mov
iret
and
pop
aas
adc
orb
add
add
mov
mov
lea
in
sbb
add
repz
adc
icebp
xchg
adc
jmp
push
scas
mov
jo
repz
or
xor
lods
cmp
ret
pop
push
adc
sbb
sbb
jae
add
xor
or
fdiv
jbe
jmp
cmp
and
mov
pop
rcll
lods
mov
push
test
outsb
lcall
jb
xorps
int3
jb
sub
cmpsb
and
fisttpll
push
push
jmp
mov
cmpsb
cmp
fcmovne
and
and
jae
cmp
inc
fcompl
ficoml
inc
or
outsb
push
fiaddl
xchg
sahf
sub
lock
idivl
fsubl
mov
and
lods
adc
fcoms
out
ds
fs
add
out
xchg
pop
mov
pushf
mov
dec
xchg
jle
sahf
data16
mov
jnp
push
sub
cmc
add
jb
aam
xchg
out
inc
jbe
popl
mov
jle
mov
pop
sub
xchg
lods
xchg
shlb
sub
add
aas
rorl
xchg
mov
jp
fcoms
pop
sbb
mov
adc
jnp
sub
add
or
mov
xlat
dec
adc
enter
xor
or
sti
adc
cli
dec
push
add
das
inc
xchg
inc
xchg
das
pop
std
xchg
jg
dec
pusha
pop
lea
xchg
popf
lock
mul
gs
pop
jbe
popa
ss
adc
dec
push
xor
sub
fldenv
lret
and
inc
sbb
mov
into
inc
xor
jbe
cmp
imul
mov
or
push
and
lods
inc
and
inc
stos
pushf
mov
mov
or
sbb
xchg
and
stos
imul
and
inc
fstpl
pand
repz
dec
xchg
xchg
loopne
add
xchg
jnp
movsl
jge
mov
ja
sbb
pop
div
cmp
xchg
aas
andb
sub
lods
adc
push
dec
pop
mov
cmp
xchg
aad
fstp
icebp
pop
xchg
push
insb
ja
cmpps
adc
or
lret
call
test
add
in
pop
dec
xor
inc
daa
sub
jge
das
xor
inc
ret
dec
xorb
int3
out
sbb
aad
lcall
iret
mov
fsubrp
fdivl
and
gs
xchg
clc
jge
dec
jl
cmp
fidivrl
lods
imul
xchg
lock
xor
aam
test
xchg
mov
xor
hlt
popf
stc
xor
jle
or
push
pop
data16
xor
add
pop
push
xor
add
xchg
xchg
pop
dec
dec
jno
pusha
or
iret
iret
sub
sbb
mov
ss
mov
call
lods
shll
push
test
das
ljmp
and
mov
popa
pop
sbb
mov
popf
test
fildll
push
add
mov
rcr
sub
xchg
xchg
mov
add
ret
aaa
daa
icebp
mov
jmp
sbb
mov
outsb
and
loopne
lret
pop
jmp
pop
push
pop
movaps
aas
xchg
pop
sub
or
shlb
pop
pop
push
mov
or
add
mov
push
mov
in
sarl
insb
dec
jbe
sbb
cld
or
and
pop
xor
xchg
jae
fidivl
mov
sbb
dec
fiaddl
aas
cmp
pop
cmpsl
pop
mov
sub
sub
sub
push
mov
jno
lods
mov
fsubs
outsb
das
lock
jnp
int3
test
cmp
cmpl
jl
jbe
clc
dec
mov
outsl
sti
jmp
lcall
cmpsl
mov
xor
mov
test
mulps
dec
dec
sbb
inc
pop
push
std
sti
adc
inc
inc
pop
cmp
or
push
cli
fmull
dec
add
mov
nop
lea
jno
jmp
and
leave
faddp
mov
mov
lahf
dec
loopne
mov
ficompl
sub
xchg
loop
out
cltd
sub
sub
arpl
test
add
add
fstps
out
ljmp
cld
mov
jne
jmp
pop
dec
outsb
ficoms
pop
icebp
loopne
sbb
add
cmc
xchg
notb
dec
mov
cmp
xchg
jo
sub
pop
repz
hlt
not
xlat
sbb
or
push
test
ja
xor
mov
data16
inc
and
das
mov
lods
fstl
cmp
pop
pop
push
das
bound
pop
lock
add
scas
mov
pop
pop
popa
xor
mov
nop
pop
dec
les
jmp
lock
pop
clc
xor
jl
pop
scas
hlt
push
and
into
xchg
adc
dec
mov
ret
xchg
sub
data16
leave
xor
jb
faddp
stos
dec
mov
dec
insl
scas
dec
jg
mov
jp
pop
pop
fimuls
dec
ds
adc
inc
fadds
mov
mov
popa
lds
mov
mov
daa
mov
scas
xor
je,pn
fsubrp
cmp
mov
lret
out
push
dec
inc
add
outsb
push
mov
push
push
xor
shlb
test
clc
pop
rolb
arpl
cmpsb
test
pop
pop
movsb
stos
xchg
cmp
mul
in
mov
arpl
pop
cli
mov
mov
xchg
push
push
cld
mov
lock
xchg
insb
test
sub
push
xchg
int
xchg
loop
fisubs
lds
inc
and
mov
cmc
cmp
shll
inc
add
mov
cmp
test
pop
sahf
cmp
dec
add
lds
cbtw
inc
dec
sbb
daa
inc
xchg
xchg
adc
inc
sbb
inc
fists
addl
xor
notl
sbb
cli
add
mov
mov
xchg
and
mov
and
pusha
loope
and
outsl
lahf
sbb
into
std
sbb
fs
xlat
hlt
adcb
cmpl
lea
dec
push
xor
and
pop
adc
add
inc
sub
je
out
sbb
jmp
mov
mov
adc
xchg
scas
and
cld
data16
mov
jmp
in
and
xor
test
mov
test
cmpsb
sbb
add
lds
xlat
lret
xchg
sbb
call
cmp
ficomps
add
pop
xor
pop
ja
pop
push
loopne
lock
push
cld
js
push
xor
pop
push
pop
imul
scas
jns
fs
sub
mov
addr16
call
test
xlat
xchg
fstps
sbb
sbb
dec
test
data16
adcl
mov
and
or
pop
mov
dec
push
pop
push
out
sete
jnp
fstl
pop
ja
dec
dec
stos
lret
and
or
sub
sub
cmp
hlt
gs
and
fdivr
mov
push
mov
xchg
cmp
cmp
pop
add
je
add
xchg
fsts
push
mov
pop
das
lock
fildll
jge
das
sub
sbb
mov
or
repnz
xor
mov
mov
and
sub
aam
sub
mov
imul
mov
jl
pop
fcmovb
bound
dec
mov
lock
int3
int3
in
sub
jl
arpl
pop
lret
insb
mov
xchg
and
lcall
jae
pop
repnz
popf
and
mov
dec
cmp
sbbb
jae
stos
add
pop
xor
mov
pop
inc
pop
mov
mov
dec
test
rcl
jg
pop
inc
imul
mov
sbb
cmc
outsl
mov
mov
jmp
xchg
rcrb
push
mov
test
js
push
int
lret
mov
add
inc
sub
outsl
mov
stos
cmp
clc
or
loopne
mov
movsb
xchg
jns
sbb
stos
inc
cwtl
mov
test
cmp
aad
mov
adc
popa
jno
mov
jno
xor
sti
xchg
jb
imul
fimuls
insl
mov
or
stos
push
mov
dec
rclb
out
cmc
sbb
push
mov
add
inc
mov
adc
loop
push
push
imul
fiaddl
push
jecxz
punpckldq
mov
cmp
arpl
shll
setp
scas
xchg
mov
pusha
fisttps
jno
cli
dec
push
popf
sub
mov
xor
jae
mov
leave
adc
nop
repz
popa
mov
xchg
sbb
and
jmp
jge
and
arpl
pop
int
inc
rcr
mov
or
popf
mov
mov
daa
mov
fsubl
in
mov
mov
xchg
pop
adc
jo
sbb
pop
popa
jno
jl
jp
jle
mov
cmp
stc
dec
mov
aaa
mov
xor
insb
cmpsb
xlat
popa
push
out
mov
sarb
fstps
ljmp
shlb
popa
dec
push
fdiv
cld
stos
xor
sarl
cs
push
cs
sbbl
mov
cmp
dec
sti
mov
pop
lock
add
rolb
and
out
lea
or
enter
jne
pop
sbb
or
push
in
imulb
repz
pcmpgtb
dec
int3
jl
sub
or
clc
andb
jp
inc
and
xchg
cli
dec
stos
jbe
pop
repnz
inc
sahf
push
sub
stc
pop
repz
aam
sti
int
out
popf
jne
push
test
incb
sbb
dec
stos
ret
or
sti
call
lcall
inc
lea
xor
arpl
mov
mov
jne
cmc
mov
pop
les
jg
cld
je
pop
and
push
dec
lcall
pushf
mov
fadds
jne
push
testl
cmpsb
cmc
je
insl
insl
mov
cmp
dec
sbbb
inc
sbb
test
sbb
mov
mov
popa
in
push
inc
lods
cs
pop
rcll
mov
lods
adc
inc
push
daa
xchg
loope
jbe
cs
movsl
lods
adc
test
adc
mov
enter
movsl
dec
or
adcb
inc
fisttpl
out
repnz
push
jns
xor
sahf
mov
pop
int3
mov
rcll
or
inc
shrl
fsts
xor
push
aam
popl
push
inc
lahf
xor
les
add
cmp
mov
pop
loopne
pop
mov
shrl
jno
ss
push
lock
mov
dec
ljmp
xchg
mov
cmpsb
lods
xor
xchg
cmpsl
clc
aad
out
fiadds
cli
cld
out
ds
dec
mov
and
mov
sbb
dec
fwait
mov
call
sahf
mov
jl
enter
mull
push
pop
pop
repz
add
mov
xor
loope
lock
pop
jmp
sub
fstpl
dec
je
pop
fidivrs
mov
in
pop
jp
lret
shrb
aas
fstpl
inc
dec
xlat
sbb
mov
push
fldenv
adc
insb
pushf
out
cld
movsb
add
js
addb
pop
shlb
jmp
mov
cmp
sub
fwait
push
shr
adc
or
bound
popa
mov
hlt
call
cld
test
cld
es
ret
subb
adc
xchg
fcom
es
sub
mov
jle
out
imul
dec
daa
lods
cmpl
xchg
ffreep
adc
pop
push
gs
out
and
adc
pop
in
sub
sub
fmuls
ficoml
xchg
mov
mov
xchg
mov
push
fs
stc
inc
cmp
ds
mov
jne
push
xchg
sub
fwait
test
ds
movsl
adcb
dec
adc
xchg
movsb
jmp
fimull
sub
push
pop
or
sbb
inc
cmp
mov
jns
movsb
pop
inc
fbstp
push
mov
icebp
dec
mov
out
ljmp
imulb
in
cmp
aad
push
pop
sbb
or
xchg
cmpsl
es
ja
add
test
insb
imul
jmp
mov
xor
test
mov
mov
adc
scas
dec
fs
data16
xorb
loop
mov
dec
mov
daa
push
loope
or
mov
xchg
pop
cmpsl
mov
mov
push
mov
sub
add
push
loopne
sub
movsb
pusha
movsb
xor
out
mov
or
or
inc
or
add
dec
imul
xor
bound
inc
aam
or
sub
jge
jno
sbb
push
lret
mov
movsb
adc
or
les
dec
or
scas
pushf
popf
in
sub
cld
inc
pop
or
int3
cs
shll
or
pop
cmp
xor
lods
mov
fidivrl
or
fwait
mov
popf
and
mov
and
iret
jg
inc
pusha
mov
in
jns
inc
bound
sahf
dec
mov
test
stos
fwait
insl
inc
push
push
mov
add
dec
imul
mov
jae
sub
cmp
arpl
sub
mov
int
sbb
stos
inc
mov
icebp
push
inc
jmp
andl
std
mov
add
bound
fbld
jno
lahf
and
jae
pop
jmp
lret
hlt
adc
dec
fildll
sbb
or
adc
shll
decl
in
lods
push
mov
shlb
add
pop
dec
fidivl
test
cmp
xor
ret
ja
int
mov
jp
mov
out
mov
mov
jmp
js
ret
inc
bound
jnp
movsl
inc
jae
xor
jnp
out
lea
adc
mov
mov
pusha
dec
shll
add
ret
inc
repz
testl
xchg
in
inc
ds
int3
aad
mov
loop
fdivs
adc
push
and
ljmp
jg
hlt
es
jns
dec
imul
xchg
icebp
ds
jbe
mov
inc
mov
and
pusha
mov
pop
cld
add
das
mov
dec
push
mov
sub
daa
mov
push
loop
scas
cltd
or
push
loope
mov
mov
cwtl
sar
insl
xor
inc
pop
push
jb
arpl
jle
out
jmp
in
pop
cli
sbb
call
ljmp
bound
sub
xchg
fs
push
inc
imul
insb
fistps
sbbl
adc
cmp
mov
in
inc
xor
xchg
sub
sub
or
xor
sub
mov
jb
dec
fisubrs
sahf
mov
adc
push
jnp
xor
rcl
mov
sub
hlt
lea
lods
adc
pusha
int
add
pop
lret
out
mov
insl
or
jl
fs
scas
push
push
sbb
call
or
ret
imul
insl
ret
add
xor
xchg
xchg
aas
outsl
jmp
sbbb
mov
pusha
mov
mov
or
jne
and
mov
sub
pop
add
stc
push
jecxz
out
data16
insb
bound
ja
inc
lea
jle
stc
or
loop
jno
inc
lret
mov
sbb
inc
mov
jg
lahf
inc
test
into
mov
fstps
mov
mov
inc
loop
sub
daa
dec
call
push
out
jae
je
je
daa
pop
icebp
scas
fisubs
out
xchg
stc
xchg
xchg
mov
push
ret
popa
xor
test
loope
in
testb
int
loop
lcall
andl
stos
mov
out
scas
shll
andb
mov
jbe
enter
sbb
shrb
and
pop
fldt
call
mov
add
jns
xchg
mov
mov
or
inc
dec
or
fbld
sbb
push
inc
inc
jb
mov
js
fdivl
dec
fnsave
xchg
mov
aaa
mov
imul
in
fs
lret
pop
add
pushf
adc
xor
sub
leave
out
or
xor
pop
inc
mov
addb
test
mov
clts
je
jl
mov
inc
jno
pop
or
sbb
adc
lahf
daa
xchg
inc
sbb
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
cs
adcl
addl
gs
mov
push
std
xchg
mov
daa
fildl
or
cmpsb
out
sti
pop
push
arpl
adc
inc
orl
jb
inc
sub
int3
sub
xor
insl
rorb
cmpb
cmp
and
pop
sbb
fucomi
adc
cmpsb
mov
jle
out
scas
push
fisubrl
ror
repnz
shll
mov
xchg
push
jns
xchg
mov
ficomps
ret
pop
cs
add
clc
mov
pusha
mov
mov
scas
dec
js
dec
mov
cmp
imul
inc
xchg
and
pop
or
push
in
cmp
in
inc
enter
dec
add
popfw
cmp
ljmp
sbb
jo
nop
stos
sbb
and
xor
sti
aam
cmc
scas
xchg
adc
sub
gs
mov
movsb
pop
mov
insb
loope
add
or
insb
orl
mov
fsubrs
mov
inc
aas
ror
mov
mov
lods
dec
lcall
and
idiv
loope
dec
inc
adc
mov
xor
fmull
rorb
inc
xchg
jge
xor
push
push
mov
jbe
outsl
lahf
jge
aaa
push
mov
andl
adc
add
inc
jno
fimuls
in
aam
inc
out
jg
in
xor
mov
outsl
lock
stos
mov
add
mov
outsl
add
push
imul
loope
jmp
mov
fldt
add
loop
movsl
aaa
subl
sub
cmp
cmc
imul
add
sub
stos
and
push
fld
in
add
loope
scas
movsb
or
sub
sbb
push
jns
lret
xchg
xchg
push
int3
iret
mov
aaa
jae
addr16
out
sub
int3
push
mov
mov
rclb
cmp
or
lods
and
out
and
outsb
negl
cmp
or
cmp
adc
js
rcl
jg
insb
pop
test
dec
sbb
pop
mov
jnp
ret
lods
jne
cwtl
in
jno
cmp
iret
sbb
arpl
add
sti
popa
lret
fldl
sbb
scas
push
insl
mov
call
sbbb
hlt
test
popf
sub
jg
inc
stos
mov
mov
add
mov
aad
in
fs
imul
out
js
fwait
adcl
aas
inc
or
cmc
or
insb
imull
cmc
mov
and
push
inc
jo
push
loop
or
push
dec
imul
jns
scas
cmp
call
xchg
add
aam
pop
mov
jae
push
add
clc
lods
sub
aam
ljmp
std
sti
sar
sbbl
mov
mov
mov
inc
movsb
mov
and
sbb
xlat
into
ljmp
iret
inc
sbb
cltd
mov
test
lock
add
cmp
xchg
out
pop
jae
aam
sub
or
lods
dec
sahf
inc
test
in
cs
dec
inc
insb
jecxz
lock
xchg
ss
push
mov
std
out
insl
mov
cmp
adc
es
push
sbb
push
fsubrs
cwtl
out
nop
jb
lret
test
xchg
pop
lods
adc
in
jae
mov
fld
iret
loop
repnz
push
xchg
mov
jmp
mov
out
lock
mov
push
mov
push
push
sbbb
jmp
test
jmp
insl
cmpsl
jl
repnz
xchg
mov
mov
sbb
in
xchg
push
es
stc
xor
adc
in
cld
in
mov
push
mov
mov
lret
cmpsl
xchg
imul
stos
mov
repnz
pop
adc
sub
sbb
std
pop
pop
sti
icebp
pop
ja
and
add
mov
rorl
mov
add
or
sahf
xor
das
mov
or
pop
xor
adc
lea
and
outsb
test
not
jmp
ss
lretw
push
mov
js
popa
add
shl
inc
adc
mov
and
scas
or
mov
mov
aas
jnp
dec
scas
mov
lods
ror
jb
push
inc
jecxz
sbb
push
and
or
mov
aam
aam
jnp
ljmp
repnz
in
shrb
push
out
repz
adc
hlt
test
insl
jno
fisttpl
into
jnp
es
dec
push
xchg
mov
dec
jnp
push
in
pop
push
popf
jle
cmp
subl
out
adc
push
loope
dec
mov
das
mov
js
sbb
dec
jge
sub
das
xor
push
dec
loope
int3
jp
mov
loopne
rcpps
es
push
je
jns
ret
lock
stos
mov
ja
mov
jnp
stos
xchg
daa
pop
lods
ret
hlt
fdiv
ret
dec
inc
lret
cld
mov
inc
add
jns
and
mov
rcrl
sub
lods
xor
xchg
scas
mov
or
call
push
and
nop
mov
aad
push
mov
es
lea
xor
repnz
test
cmpsl
cmpl
jle
rcr
fsubrs
xchg
sub
inc
mov
fidivrl
lea
push
jne
not
les
mov
gs
daa
inc
pop
lret
fisubrl
lock
aaa
and
jbe
je
fwait
inc
sbb
sub
and
rcrl
cmp
cmp
adc
push
sub
rorl
dec
xor
xlat
dec
bound
cs
and
cwtl
lcall
mov
xchg
je
sbb
cmpsb
sbb
xor
pop
or
enter
cli
andl
jmp
cmp
cltd
movsb
stos
ret
pop
fsub
insb
lods
jecxz
push
jle
jbe
pop
enter
adc
xchg
ficompl
popa
dec
ds
cmp
xchg
jbe
mov
scas
or
mov
sbb
gs
and
or
js
popa
add
ret
mov
push
fnstcw
xchg
imul
mov
cmpsl
dec
inc
sbb
jns
push
lock
test
lea
fs
enter
inc
mov
loope
jns
ljmp
loope
lahf
ret
sbb
and
adc
xchg
jno
es
add
pop
stos
push
ret
fmul
repz
jp
cltd
mov
adc
daa
sub
dec
out
mov
add
test
in
sbb
xchg
testl
mov
mov
push
push
pop
mov
fildll
sub
mov
xchg
sub
dec
cli
and
jbe
xlat
mov
ja
aad
xchg
pop
pop
aad
daa
mov
in
and
pop
out
test
movl
cld
mov
lds
movsb
jle
xchg
cs
xchg
cld
dec
flds
sbb
cli
negl
xchg
mov
or
cmc
out
sub
test
mov
adc
pop
push
add
inc
mov
xlat
in
add
mov
sbb
adc
or
dec
mov
sarb
addb
pop
ljmp
sahf
or
pop
cmp
stc
xchg
xchg
mov
cwtl
jmp
lahf
in
int3
push
inc
icebp
xor
jmp
inc
scas
or
cmpsl
bound
adc
and
out
xchg
fimuls
addr16
test
jge
or
rcl
mov
dec
mov
mov
fs
xchg
push
sub
push
or
mov
js
test
and
es
xchg
xlat
sub
inc
lock
test
hlt
mov
mov
jg
and
idiv
adc
int
or
adc
jp
insb
add
mov
int3
in
and
cld
stos
pop
in
jne
in
loope
scas
adc
mov
push
or
xorb
icebp
sub
iret
xor
inc
jb
sbb
and
mov
test
mov
stos
push
and
adc
in
ds
aas
pusha
sub
inc
adc
clc
mov
dec
fisttpll
mov
jecxz
lods
out
sub
scas
sub
scas
inc
xor
sbb
pop
push
insl
rorl
push
ficompl
punpckldq
int3
sbb
aaa
pop
incl
dec
lret
dec
push
adc
mov
xchg
xor
inc
insb
jo
sbb
jmp
insb
cmp
inc
xchg
out
movsl
push
cmp
cs
ss
std
aas
in
push
jmp
pop
mov
or
jno
mov
jae
cmp
sbb
push
loop
call
mov
pop
insb
inc
xlat
add
sti
sti
popa
incl
sarl
inc
or
in
cmp
jnp
movsb
in
push
call
and
mov
outsb
sub
and
and
arpl
cmp
push
dec
scas
and
outsb
push
in
addr16
mov
adc
cmpsb
sub
sbb
or
bound
sub
mov
mov
mov
sub
sub
cmpsb
mov
test
pop
lods
in
je
add
adc
pop
or
in
jp
adc
out
mov
mov
xor
pop
insb
xorb
orb
pop
fdivs
test
lahf
pop
stc
mov
xchg
or
add
mov
pop
aad
jge
call
aas
fsubrl
or
jle
jg
repnz
dec
mov
pop
ss
movsl
mov
arpl
or
mov
lock
lods
lret
push
pop
or
clc
mov
mov
jge
idiv
xlat
dec
loop
popa
sbb
int3
adc
loope
mov
jne
out
cltd
orl
out
inc
shlb
xchg
scas
lcall
dec
test
inc
loopne
in
cld
push
jae
stos
push
clc
movsl
mov
gs
mov
and
mov
dec
push
pop
cmp
lock
xchg
jo
aas
pop
repz
outsb
and
gs
add
testl
pop
movsl
imul
lea
outsb
add
fs
cmp
arpl
sub
mov
in
xlat
js
ljmp
mov
mov
jmp
inc
pop
push
sub
jb
pop
and
mov
out
mov
push
ret
push
mov
int
pop
ds
push
test
imul
and
rorb
push
lahf
out
aad
and
mov
dec
adc
jecxz
cltd
mov
push
leave
mov
sbb
inc
ss
jl
lds
xlat
jg
icebp
dec
xchg
lds
add
shll
mov
mov
xorb
pop
and
mov
mov
or
addr16
aas
idivl
sub
imul
test
cmp
and
xchg
adcb
xchg
outsb
sub
and
mov
jb
inc
mov
jbe
inc
adc
mov
fimuls
out
es
mov
or
pop
cwtl
dec
xchg
mov
cli
filds
lods
lea
dec
jl
add
popf
xchg
or
notl
stc
mov
xchg
mov
dec
jmp
mov
shlb
cltd
inc
inc
dec
lea
pusha
insl
rorb
mov
jbe
stos
dec
cs
jo
sbb
mov
adc
je
gs
icebp
int3
insb
push
lret
sbb
sub
sbb
bnd
jge
call
push
mov
bound
add
rorl
mov
sbb
ds
mov
mov
jo
sahf
arpl
lock
dec
mov
int
insb
pop
jbe
fadd
jl
and
orb
lret
xlat
mov
into
out
sarl
outsb
out
sub
xchg
in
or
ljmp
inc
xchg
pop
iret
imul
or
mov
test
push
and
aad
clc
push
push
enter
push
sbbl
mov
pop
in
jmp
jmp
inc
adc
mov
fidivl
cld
jle
lret
xchg
dec
in
dec
sti
xchg
sbb
jno
or
jnp
aas
out
lock
imul
clc
repz
push
out
test
push
add
sbb
cmpsb
push
sub
sbb
jo
out
fcmovnbe
xor
fcomi
movsl
in
dec
cmp
jle
call
pusha
inc
mov
mov
mov
jl
iret
dec
ss
popa
cmp
rclb
shrb
popa
or
loope
sbb
mov
inc
pop
pop
or
mov
add
xchg
mov
sub
aad
or
sbb
movsb
and
and
inc
sub
insl
inc
cmp
push
das
aas
xlat
ljmp
sub
pushf
jae
mov
cmpsl
rcrb
xchg
add
mov
stc
jmp
insb
pop
inc
jle
pop
dec
pop
in
sbb
fsubs
add
addl
and
mov
cmp
inc
jmp
hlt
fstpt
sahf
repz
or
out
lret
jmp
outsb
xchg
jae
in
pusha
mov
jbe
loope
mov
aaa
and
push
lcall
xchg
inc
loop
into
xor
cli
mov
adc
push
fnstcw
gs
lea
scas
dec
jmp
lock
rcr
sub
loopne
mov
xchg
test
sub
pop
push
std
mov
adc
dec
sbb
jl
lret
out
shl
fisubrl
mov
mov
negb
push
mov
ficoms
jg
int
or
lods
fwait
mov
loop
rclb
adcl
xor
xchg
push
cmp
cmp
sub
add
out
shlb
pop
xchg
add
xor
movsb
pop
sti
and
push
push
mov
into
jnp
or
xchg
out
rclb
or
adc
or
xchg
add
mov
sbb
ret
rolb
pop
cmp
into
push
mov
repnz
xchg
add
ljmp
mov
arpl
dec
mov
or
jle
pop
xchg
lret
ja
cmpsl
xchg
xchg
mov
in
in
sub
and
xchg
pop
pusha
dec
add
ret
sbb
push
std
nop
lods
mov
inc
imul
cmp
inc
mov
std
popf
adc
mov
push
mov
sarl
sub
sbb
lret
mov
pop
pop
jg
jae
dec
loope
fs
xchg
mov
add
outsb
in
loopne
xchg
scas
lret
add
and
mov
inc
mov
inc
or
pop
push
pop
jp
insl
jecxz
jbe
daa
push
mov
xorl
push
pop
shrb
out
jp,pt
lret
sub
jne
push
cmp
xchg
adc
xchg
jmp
test
add
sbbl
loopne
push
mov
les
jo
sub
mov
movsw
ljmp
xchg
gs
xchg
aam
addr16
dec
es
add
int
mov
and
inc
shrl
sub
jo
adc
and
jbe
in
sub
xor
mov
fistpl
loope
push
int3
or
imul
or
jo
cmc
movsb
mov
sub
pop
cmp
dec
cmpsl
shll
loop
or
and
mov
mov
ret
or
dec
popl
outsl
mov
and
sub
loope
mov
test
push
mov
xchg
add
or
adc
lods
mov
scas
jge
insb
stos
aad
rcrl
dec
fadds
push
cmp
in
jno
mov
sbb
rcr
scas
jne
lock
loope
dec
dec
shlb
cmp
sub
in
sti
js
jb
or
push
rol
sub
ret
cmp
inc
dec
push
lods
inc
inc
std
add
cmp
push
dec
and
mov
enter
loopne
mov
pushf
dec
dec
jmp
and
loop
mov
sub
sahf
clc
stc
mov
mov
mov
out
daa
nop
js
fsub
xchg
or
pop
movsb
cmc
and
jge
cmc
inc
lret
add
into
mov
xchg
jo
sub
cmpb
das
add
movsb
inc
push
xor
jg
add
pop
jl
mov
ret
xor
cs
xor
add
mov
out
mov
adc
lret
add
and
add
cs
loope
push
mov
movsl
fnstsw
lock
mov
xchg
icebp
es
cmp
out
das
into
xchg
xor
xor
push
out
sbb
sub
scas
adc
mov
sti
push
and
mov
cwtl
xrelease
out
cmp
loope
adc
sahf
or
sub
jl
or
sub
rcrl
mov
add
jmp
xor
mov
lods
adc
nop
cld
inc
jo
sbb
mov
pop
sbb
inc
pop
addr16
xor
jge
lahf
mov
shl
or
fdivs
iret
in
cmp
stos
shrb
test
dec
ds
inc
xcrypt-cfb
cmpsl
cmpsb
inc
pop
lcall
mov
sub
inc
dec
mov
inc
add
cmc
in
mov
negb
push
adc
xchg
es
inc
jl
ss
jbe
hlt
inc
xor
and
test
or
cmp
jl
fwait
bound
sti
lret
gs
daa
pop
adc
inc
push
xlat
inc
sbb
ret
dec
repnz
cmpsb
test
inc
in
adc
insb
cltd
or
mov
mov
inc
icebp
aaa
cltd
in
jne
sub
pop
je
xchg
into
leave
pushf
xlat
push
je
es
icebp
lds
call
rolb
xor
clc
dec
pop
dec
leave
pop
adc
jl
mov
pop
cmp
sti
pop
cwtl
out
rep
pop
bound
std
dec
xchg
cmp
push
push
xchg
or
pop
cmc
mov
aas
in
shrb
jecxz
and
sub
es
adcl
dec
es
fisttps
lea
shrd
jbe
jne
jno
into
stc
pop
push
jnp
rolb
pop
loopne
pop
dec
enter
mov
das
aaa
clc
adc
cltd
test
add
mov
pop
push
fidivl
arpl
popf
or
mov
xor
or
sbb
pop
movsl
mov
out
dec
cmp
xor
push
xor
orl
sbb
push
clc
xchg
decb
stos
mov
jle
xlat
push
lds
pop
int3
pusha
xchg
addb
int
sar
daa
xchg
and
xchg
jnp
jbe
leave
inc
clc
bound
imul
jp
sub
inc
jg,pn
and
xchg
into
popf
stos
jg
jno
stos
add
sti
xchg
hlt
loopne
in
cli
dec
pop
or
pop
cmpsl
cmp
movq
push
cmp
and
loopne
divb
pop
xor
in
shlb
mov
fs
lcall
shll
or
outsl
paddb
pop
push
mov
aas
sbb
cmp
inc
in
xor
mov
popa
dec
cmp
xchg
in
inc
out
push
out
insb
sub
cmp
or
xorl
lret
adc
orl
leave
loope
dec
stos
adc
mov
loop
shrl
ja
or
xor
jae
or
xor
pop
pop
insl
and
mov
jns
mov
shr
sahf
adc
test
sbb
negl
lds
add
in
ss
xor
loop
inc
mov
add
loop
shlb
jmp
sub
subb
ja,pn
jecxz
test
aad
ja
dec
sbb
cmp
push
dec
cmp
daa
cli
call
sub
insl
inc
jge
addr16
jp
cld
inc
jne
scas
fld
and
sti
rol
push
ret
push
xchg
jns
out
test
push
gs
cs
push
xchg
xchg
dec
imul
iret
and
imul
pushf
push
pop
or
mov
gs
and
popa
mov
or
inc
fdivrs
jbe
mov
in
pop
or
imul
adc
in
inc
cli
cli
xchg
pop
or
lds
ds
lret
lret
or
nop
jbe
fucomp
push
sub
pop
in
aam
pop
movsb
movsl
mov
imul
jb
test
test
mov
fstp
sbb
aad
mull
test
xchg
pop
adc
popf
imul
jno
ffreep
sbb
les
fcmovu
mov
xor
je
ljmp
push
jle
add
push
and
psubsb
lods
mov
or
ljmp
cmc
inc
cmp
or
push
je
push
fildl
leave
cmpsb
cli
cmp
pop
ljmp
aam
jb
aam
fwait
dec
add
fidivs
frstor
cmpsb
jmp
call
and
mov
pop
popa
rcrb
pusha
sbb
ss
movsb
addr16
add
add
and
mov
shll
sarb
xchg
cli
and
adc
inc
call
hlt
in
sub
pop
sub
lods
insb
dec
mov
fcom
dec
mov
testb
jno
push
dec
jae
jp
xor
pop
mov
scas
stos
push
adc
fcomps
jnp
mov
xchg
dec
jns
mov
decb
lahf
mov
add
sub
xchg
cwtl
test
nop
inc
insb
mov
cmpl
cmp
xchg
push
xchg
testl
in
xor
xchg
rorb
push
cwtl
mov
sub
mov
mov
cmpsb
inc
jmp
inc
inc
pop
mov
repnz
clc
add
dec
fdivrp
loope
adc
sub
mov
je
sarl
mov
sbb
int3
sbb
dec
mov
pop
icebp
mov
adc
aaa
pop
aam
mov
fmul
sub
mov
inc
lahf
fs
xchg
dec
lret
aas
mov
lds
sbbb
add
xor
push
rcr
les
daa
leave
in
cmp
and
movsb
mov
jge
lods
add
mov
test
out
lret
loop
jb
and
hlt
dec
adc
pusha
pop
mov
lods
cwtl
add
push
shrl
xor
add
mov
sub
mov
sahf
out
les
mov
pop
cmpsb
test
shlb
jo
sub
mov
stos
stc
xchg
in
pop
data16
dec
mov
out
fs
sbb
aas
xor
adc
out
add
shlb
mov
call
ret
mov
fmuls
rcrl
in
dec
mov
aas
pop
pop
aad
xchg
das
lods
inc
jno
push
in
les
loopne
mov
addr16
and
int3
faddl
push
ds
cs
pop
outsl
dec
ret
les
pop
add
ljmp
sub
cmp
push
add
sub
fcomp
in
xchg
popf
lods
sar
arpl
add
mov
lods
stc
or
sbb
cmp
pusha
cmp
ret
popf
push
or
xchg
sti
mov
scas
repz
inc
mov
stc
and
sbb
js
push
mov
jl
aad
pop
out
clc
push
std
loope
mov
ffreep
cwtl
aam
mov
mov
jnp
test
mov
xchg
push
xor
in
xchg
xchg
inc
arpl
fiaddl
dec
sbb
or
add
and
das
mov
scas
xchg
call
stc
or
adc
leave
pop
mov
adc
pusha
add
leave
sahf
pop
push
adc
rolb
aaa
fs
fistps
stos
sbb
add
mov
mov
sti
pop
jns
addr16
movb
cmp
cmp
sub
mov
and
sub
jnp
inc
mov
out
loop
push
mov
lea
scas
cmpsb
and
sbb
jl
jge
lcall
into
lock
lea
mov
and
movsl
stos
jnp
fsubrp
aad
sbb
jmp
mov
insb
leave
dec
iret
dec
mov
int
idivl
nop
out
push
add
aad
sub
lret
add
cmp
dec
les
movsl
jne
ja
xor
dec
pop
sub
insb
das
and
push
test
aaa
adc
cmpsb
nop
sub
daa
push
sub
or
fs
jns
and
xor
test
sub
pop
in
roll
aaa
jg
xchg
xchg
inc
cmp
scas
cmp
or
lcall
les
pop
mov
shll
popf
scas
sarb
dec
cmpsb
dec
xor
dec
ficoms
aaa
add
sbb
cmp
push
push
ds
mov
daa
and
add
mov
sub
jle
test
xor
jns
pop
mov
fisubs
hlt
hlt
jl
xor
jae
sub
scas
inc
pop
lret
mov
mov
dec
inc
aad
frstor
push
inc
leave
insl
xor
fcoms
mov
aad
and
mov
inc
adc
ljmp
mov
test
jge
filds
ja
dec
jno
jl
xor
lret
mov
adc
repnz
stc
push
adc
sub
jp
mov
push
and
daa
jns
adc
add
aam
mov
mov
push
dec
cltd
shl
cmc
and
ss
js
or
or
or
mov
xor
mov
ficoms
enter
loope
test
les
xchg
in
mov
mov
cs
and
lock
pop
push
out
mov
dec
mov
sarl
ljmp
rclb
negb
xchg
dec
add
cmp
inc
mov
sbb
xchg
xchg
jecxz
inc
test
movsb
loope
cltd
das
push
movsl
das
xlat
cli
fisubl
jg
lods
stos
xchg
cltd
inc
in
fiaddl
add
repnz
loop
jmp
mov
fwait
pop
loope
push
mov
movsb
and
jle
push
int
filds
adc
in
fiaddl
dec
test
stc
dec
sbb
fwait
push
stc
fidivrl
outsb
cmp
shl
fsubrp
pop
cmpsl
out
ss
in
sub
testb
mov
fwait
cmp
dec
pop
mov
arpl
dec
les
scas
fstpl
cwtl
xchg
pop
or
movsb
jp
jns
cmp
clc
inc
cltd
and
add
sbb
sub
pop
test
bswap
cmp
mov
adc
jmp
inc
cs
push
rorl
fists
cmpl
jmp
ror
add
punpckhwd
out
rcrl
out
pop
jmp
inc
daa
dec
out
pop
jmp
inc
push
insb
inc
orl
nop
or
xchg
lahf
sub
and
mov
mov
ret
repnz
fdivl
in
cmp
leave
mov
adc
stos
cs
cmp
cmpsl
mov
in
jge
mov
lds
mov
pop
in
xchg
dec
cmp
and
xchg
push
push
sbb
dec
mov
cmp
int3
addr16
adc
push
movsl
scas
insb
jae
mov
cltd
call
push
xor
sub
pop
mov
test
adc
in
lods
shll
sbb
sbb
cmc
std
inc
jnp
repz
hlt
imul
jnp
test
or
sbb
bnd
lahf
xchg
stos
icebp
movsb
movsl
cmp
xchg
out
imul
cld
ja
sbbb
mov
mov
push
rcl
adc
rclb
add
mov
adc
mov
clc
sub
cmp
fnstsw
mov
xor
mov
push
clc
call
das
pop
repz
mov
jge
popa
jle
cmc
dec
pop
lods
repz
push
aam
adc
cltd
mov
outsb
sbb
ja
cmpsl
mov
int3
or
xor
fldl2t
jmp
call
pop
sub
add
insb
xor
jmp
inc
inc
or
addr16
leave
lock
enter
flds
xor
xor
js
fnstenv
push
dec
mov
loopne
daa
sti
add
inc
pop
iret
shr
cmpsl
jae
inc
adc
lods
or
adc
ret
or
xchg
pusha
iret
in
dec
push
imul
push
pushw
fisubs
test
adc
add
shl
mov
xchg
cmpsl
push
lods
scas
xor
rorb
mov
mov
xlat
jae
filds
xchg
fidivs
sbbl
sti
stos
mov
lcall
pushf
sub
sub
lods
sarb
sbb
cmp
push
das
xchg
sbb
bound
testl
dec
sbb
insl
negb
aas
or
cltd
mov
jmp
sahf
das
stos
arpl
pop
mov
popf
loope
cs
clc
xor
js
stos
daa
lods
xor
xor
pop
callw
lret
or
mov
popa
lret
insl
ljmp
push
push
imul
dec
xchg
jp
and
outsl
adc
adc
cs
scas
ret
xor
dec
incb
popf
push
mov
sbb
lock
sbb
movsl
inc
fs
negb
inc
aam
cmp
jae
add
push
push
aad
in
ss
adc
xor
andb
mov
fldl
xor
rorl
clc
pop
cmp
pop
fadds
shll
or
jg
cmp
int3
cmpsl
inc
mov
add
push
sbb
testl
sbb
movsl
add
ss
pop
add
jb
insb
cmpsb
icebp
xchg
out
lret
jo
cmpsb
fmuls
mov
packuswb
or
out
fisubl
dec
adc
fcompp
imul
dec
nop
mov
packssdw
mov
sub
xchg
ja
and
dec
sub
jne
icebp
outsb
imul
xor
mov
outsb
insb
imul
bnd
add
xlat
mov
push
push
inc
adc
mov
push
lods
jle
ret
pusha
icebp
or
xchg
mov
jb
and
stc
loopne
add
shl
dec
add
sti
fmul
sbb
pop
mov
push
xor
dec
cmpsl
out
shll
and
and
cmpsl
js
xor
std
add
push
push
cmp
loope
inc
sub
fcomps
cmc
dec
int3
push
sub
sub
jae
push
cli
add
jle
xor
jle
lock
enter
insb
pop
std
shlb
jno
xor
call
cmpsl
mov
jge
add
xorl
inc
cs
cmp
rcrb
sbb
mov
fiaddl
aad
ljmp
sbb
mov
les
movsb
add
xchg
shrl
adc
dec
sti
mov
inc
test
movsb
add
lds
push
mov
inc
jle
cltd
pop
daa
add
or
jmp
add
sbb
testb
jae
and
and
lea
shrl
gs
add
cmp
es
nop
hlt
xor
subl
cmpsb
int3
stc
int3
pop
pop
dec
cmp
into
shll
out
call
mov
inc
stos
lock
inc
jmp
or
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
ret
addb
sbbl
push
movsl
inc
xchg
ret
test
std
sub
sarb
pop
push
addr16
inc
xchg
lret
or
push
jmp
out
clc
and
and
mov
loop
mov
cli
and
fcomps
adcl
jno
notl
jecxz
mov
rclb
mov
outsl
pusha
adc
clc
jl
add
leave
mov
fstpt
xor
mov
pushf
test
push
fisubrl
inc
leave
adcl
push
pop
lret
lds
and
addr16
outsb
adc
push
ret
cmp
pop
jne
or
leave
adc
mov
pop
out
sub
dec
std
fimull
rorl
sti
dec
mov
cwtl
dec
jb
lods
dec
mov
lods
in
cmpsb
in
push
mov
imull
mov
popa
lds
bound
decb
and
ljmp
out
inc
jl
das
and
jmp
mov
rol
aaa
aaa
pop
sti
mov
xchg
inc
dec
call
inc
mov
sbb
fs
and
push
or
hlt
xchg
fdivrl
push
xor
adc
sub
xorl
ret
mov
xchg
aad
push
or
xchg
push
inc
imul
sub
ret
adcl
mov
loopne
dec
dec
mov
sbb
mov
orl
add
loope
je
stos
xor
into
mov
add
lds
jecxz
cli
cwtl
rcll
mov
outsl
inc
ja
in
fs
outsl
test
imul
scas
xorb
xchg
enter
leave
xchg
mov
int3
js
fdivs
push
arpl
push
jmp
aam
push
xchg
sbb
rcrl
sub
fnstsw
adc
pop
add
adc
sbb
repz
test
inc
dec
mov
filds
jns
xchg
pop
cmp
repnz
add
xlat
jl
mov
imul
and
mov
shr
fs
add
cld
cs
inc
cmpsl
dec
mov
mov
or
sub
movsl
cmp
cld
cmp
cmp
mov
inc
lods
xchg
jb
dec
xorb
xchg
in
andb
sti
ds
and
addr16
ljmp
mov
aad
stos
leave
ja,pn
pop
cmp
push
int
outsb
pop
sub
mov
or
push
jp
lock
sarl
jb
repz
icebp
in
or
sti
loope
jmp
sbb
mov
and
inc
rcr
add
and
sgdtl
push
mov
loopne
cmp
jbe
mov
lea
jae
sahf
sub
jecxz
mov
xchg
xchg
stos
hlt
mov
fdivrs
push
movsb
lret
sub
inc
loope
inc
shlb
lods
in
or
addb
fcomp
mov
mov
insl
mov
fidivrl
insb
pop
mov
bound
mov
push
lret
dec
out
cltd
push
rorl
or
das
mov
stc
fwait
jmp
xor
fisubrl
shlb
sti
adc
filds
mov
or
adc
dec
or
sarl
into
inc
pop
sbb
test
dec
shl
notl
mov
mov
push
push
push
fisubrl
scas
cmp
out
mov
cmp
lret
aam
pop
dec
aaa
shl
dec
inc
repnz
and
test
lcall
sub
add
xor
fcmovbe
mov
iret
test
lods
cltd
imul
pop
xchg
mov
mov
add
jl
jle
stc
jge
and
cmp
mov
scas
das
fwait
mov
xchg
mov
int3
inc
pop
add
jp
mov
nop
mov
fmuls
in
lds
dec
ds
dec
adc
sub
fsubrs
imul
pop
es
push
loop
jg
push
sbb
outsb
xchg
test
mov
or
adc
add
push
jge
adc
pop
int3
jo
divb
int
xorb
push
cltd
adc
in
lds
add
into
push
lea
les
mov
lea
pop
and
movsl
jmp
adc
repz
pushl
pop
mov
pop
leave
xchg
mov
outsl
push
mov
mov
js
bound
push
data16
pop
mov
dec
xchg
mov
add
jp
jg
or
inc
hlt
test
xchg
inc
fdivl
bound
repnz
add
mov
push
and
jno
add
decl
loop
out
dec
jge
addr16
idivb
jg
or
pop
pusha
jbe
data16
sbb
xchg
lahf
shrb
inc
jle
lret
lock
pop
mov
adc
xor
xchg
fdiv
inc
ret
cmp
clc
lret
add
ds
insl
sbb
xchg
jns
insl
daa
andb
int3
sbb
cmp
cltd
int3
inc
cmpsl
jo
add
cmpsl
xor
arpl
mov
les
out
shll
adc
pop
xor
adc
push
xchg
ljmp
inc
pop
pop
mov
push
std
imul
call
insb
movsl
push
add
fcmovnu
pop
stos
mov
insl
mov
push
ljmp
stc
xor
lock
adc
fdivrs
fcompl
dec
dec
jne
mov
mov
daa
rolb
add
add
out
cmp
sbb
lcall
test
jmp
test
aaa
dec
and
fsubrs
mov
mov
dec
jmp
std
outsl
add
add
pop
push
call
dec
sub
and
and
push
std
cltd
jo
mov
push
cmp
adc
mov
outsb
loope
mov
dec
sub
out
sbb
mov
test
fwait
and
out
rcl
jb
lcall
das
cld
repnz
movsb
mov
lods
sbb
cmp
pop
imul
in
push
sub
inc
jecxz
sbb
sti
ss
in
negl
xchg
pop
daa
cmpsb
leave
push
xor
inc
pop
incl
xchg
sti
test
sub
leave
jge
fdiv
std
mov
daa
mov
je
xor
popf
jb
sub
mov
jg
dec
mov
mov
into
inc
mov
sbb
fdivl
sbb
in
add
sti
testb
jno
jae
mov
aam
stos
lea
into
push
in
mov
movsl
outsb
cmpb
inc
cltd
lcall
nop
arpl
mov
adc
repz
call
das
jp
jmp
mov
pop
out
cmc
icebp
je
sub
adc
loop
in
xor
cmp
pop
ljmp
jp
inc
daa
push
mov
insb
sarb
pop
data16
xor
cld
int3
movsb
mov
inc
sbb
dec
and
cmp
arpl
sbb
cwtl
dec
mov
push
dec
or
in
push
aad
repz
fwait
push
jne
enter
push
hlt
movsb
add
scas
mov
popf
push
jecxz
out
inc
adc
mov
xlat
push
test
jbe
popa
inc
cmp
xor
scas
xchg
inc
push
add
jge
in
mov
cmc
sub
cld
xchg
adc
or
jp
sbb
xchg
pop
mov
pop
movsb
push
loopne,pt
xor
pop
xchg
cli
repnz
shl
aaa
in
ja
es
lahf
dec
jmp
jcxz
aas
and
cld
cmp
mov
test
mov
shl
fs
lods
andl
pop
sbb
xchg
add
std
mov
les
sti
mov
test
and
movsb
cli
lods
out
jle
xchg
xor
cltd
cmpsb
repz
test
scas
out
adc
mov
sbb
or
mov
sarb
jne
dec
lret
and
jne
icebp
and
imul
pop
loop
or
cwtl
mov
popf
inc
dec
xchg
and
out
int3
out
js
into
pop
and
ror
mov
xor
dec
and
subb
insb
fdiv
jo
pop
sub
out
ljmp
xlat
lods
les
push
or
and
pop
pop
cmp
enter
mov
push
sbb
or
xchg
mov
daa
lcall
xchg
notl
and
cmpsl
stos
out
lcall
mov
and
shrl
imul
fldl
or
add
lret
xor
add
mov
and
scas
movsl
shl
movsl
fdivs
test
rol
sub
adc
inc
fldl
mov
push
test
movsl
dec
rcll
mov
outsl
xchg
test
jns
cmc
sub
mov
jae
mov
enter
mov
sbb
xlat
jae
loopne
inc
clc
das
jge
sbb
icebp
sbb
loopne,pn
loope
mov
sbb
insb
imul
flds
jle
ljmp
push
notb
popa
jnp
inc
or
call
xchg
fadd
ljmp
test
mov
adc
sub
mov
pop
mov
cmp
add
push
out
in
push
or
decb
jge
jbe
cmc
data16
mov
jg
push
stc
std
mov
sbb
xchg
cmpsb
inc
lret
jmp
loope
in
mov
and
dec
xchg
rcll
mov
sbb
and
inc
jnp
jns
insb
mov
cld
jmp
test
and
popf
sub
loope
mov
std
and
adc
mov
loopne
sub
mov
mov
mov
add
mov
adc
out
xor
pusha
cld
xchg
enter
mov
popa
das
inc
cmp
push
leave
push
shr
adc
in
mov
fs
adc
pop
cmpsl
int3
dec
dec
call
push
leave
dec
stc
fcmovnbe
jle
divl
inc
dec
sub
push
jmp
xchg
jle
dec
cmpl
and
xor
cmp
cmp
fisttpl
scas
fisubrs
in
pop
icebp
jns
outsl
fistps
hlt
sbb
sarb
ja
rcl
jns
scas
ljmp
push
jnp
or
and
lss
int
into
sahf
shlb
pop
and
mov
push
imul
inc
jbe
aaa
pop
scas
addb
std
in
cs
push
xchg
ret
scas
dec
xor
pop
cmpb
iret
cmc
cmc
rcr
cld
ret
movsb
jns
fstpt
xchg
mov
xchg
iret
mov
mov
dec
xor
mov
inc
pop
dec
cmpsb
fsubs
mov
or
lock
aam
adc
inc
mov
lret
fstl
loopne
mov
popf
add
lahf
mov
mov
dec
pop
ret
sbb
or
mov
sbb
cld
mov
sbb
dec
imul
sti
ds
cmp
lret
insb
imul
in
cmpl
and
and
push
fdivs
jbe
and
imul
inc
movl
dec
stos
lcall
pop
imul
mov
iret
xorb
ret
pop
xchg
sub
loop
xchg
mov
lea
mov
loope
mov
add
call
test
or
in
mov
adc
test
rorb
sub
cld
mov
mov
nop
and
adc
fisubrl
test
jge
add
push
cli
inc
or
outsl
cmp
xchg
dec
scas
clgi
xchg
popa
mov
fiaddl
pop
dec
mov
addr16
and
mov
icebp
outsl
pop
mov
aad
sub
aam
inc
inc
sbb
fsubp
pop
or
andb
mov
pop
clc
xor
stos
push
inc
or
xor
int
push
outsl
out
in
sub
out
cmpsb
push
dec
mov
cmc
fisubrl
mov
movsl
jle
sub
icebp
sub
inc
test
ljmp
mov
call
scas
jmp
xchg
and
mov
cmp
movsl
and
sbb
and
sti
jecxz
mov
jae
imul
sbb
jecxz
insb
add
jns
mov
sbb
xor
pushf
mov
mov
repz
xchg
pushf
and
jmp
mov
shl
adc
jle
fmulp
ficoml
outsb
jnp
jno
adc
insl
adc
pop
push
cmpsb
add
lds
inc
call
pop
lcall
cmp
xlat
lahf
lock
push
int3
xchg
std
dec
pop
test
sahf
mov
insb
daa
fistpl
mov
mov
xor
das
jo
push
fiaddl
cmp
testb
pushf
inc
jmp
icebp
adc
orb
pop
arpl
lcall
mov
shll
mov
imul
call
cmp
imul
rcrl
mov
add
xor
jp
push
xchg
les
out
jmp
into
scas
cmpsl
stos
sub
and
cmpsb
test
mov
addb
xchg
dec
lcall
loop
mov
xor
ret
lods
and
jmp
lods
add
subl
sbb
in
push
xchg
stos
jl
mov
inc
add
lcall
jnp
loopne
mov
inc
mov
inc
cmp
movsb
fs
cltd
pop
loop
jb
ds
mov
fistpll
xor
loope
sar
ret
lret
adc
popl
jae
sbb
insl
out
adc
add
sbb
jge
mov
fidivl
or
pop
push
pop
insb
insb
jne
jecxz
or
cli
or
inc
xchg
mov
dec
cwtl
mov
call
jmp
pop
mov
or
lahf
and
lds
fdivrp
sti
sbb
mov
ja
dec
pop
sub
stc
sbb
test
jle
xchg
mov
in
cs
add
pop
xor
xchg
xor
lods
test
adc
fmul
sar
sbb
rclb
pop
scas
scas
das
inc
push
cmp
outsb
or
aad
aad
jb
and
idiv
push
lret
or
mov
adc
in
movsb
shlb
push
inc
pop
adc
mov
lock
inc
xchg
sub
jl
mov
ror
sbb
sub
aad
fwait
mov
add
sbb
inc
test
mov
mov
fimull
add
loopne
cmp
sbb
dec
rcl
rcrb
outsb
xor
div
xor
fcom
or
xor
cli
jle
adc
pop
das
cltd
cmp
movb
fnstsw
sbb
lret
xchg
and
mov
ss
in
js
fimull
dec
gs
lock
push
ret
mov
xchg
xor
inc
sbb
loope
mov
and
subb
mov
imul
and
sbb
mov
cmpl
sbb
dec
add
sbb
pusha
aam
cwtl
lds
fxtract
in
test
jp
or
jmp
movsb
xlat
daa
jmp
push
push
into
cmp
cmpsl
push
mov
mov
mov
in
xchg
push
xchg
jmp
mov
fwait
mov
ljmp
jp
repz
stos
addr16
into
push
je
xor
xchg
in
in
bound
mov
test
mov
push
mov
test
das
loop
adc
loope
xchg
xchg
data16
pop
cmp
jo
in
mov
hlt
out
fmuls
ss
int
insl
insl
jmp
mov
popa
aaa
push
fcmovu
xchg
imul
out
jecxz
repz
rorb
fimuls
mov
incb
lcall
and
test
clc
push
adc
or
pop
xchg
arpl
pushf
cli
cmp
std
pusha
sub
nopl
mov
push
jnp
cmp
sub
sbb
xchg
pop
jle,pt
xlat
pop
stos
adc
mov
sti
push
dec
xor
ret
xchg
cmp
cs
pop
or
popa
mov
xchg
xor
mov
cltd
outsb
sbb
aam
in
sub
jo
push
fidivl
repnz
nop
and
fsubl
fistpl
divl
idivb
adc
rclb
push
addl
repnz
pop
cmpsl
mov
add
ror
lcall
out
inc
aad
imul
imul
int
mov
pop
mov
mov
ds
adc
push
out
imul
jns
imul
mov
push
in
sub
xchg
lret
or
sahf
ljmp
jl
aas
fidivl
into
xchg
dec
pop
xlat
stc
outsb
or
es
cmc
dec
into
jge
out
gs
lea
cltd
dec
test
pop
lret
or
cmp
outsl
push
inc
xchg
jmp
jo
mov
shlb
rcr
data16
mov
outsl
adc
pusha
repz
inc
in
lret
call
cmp
outsl
push
push
mov
push
cltd
fwait
push
xor
push
cs
repz
and
aad
cmp
push
xchg
leave
inc
shlb
iret
sbb
jmp
out
lds
ror
repnz
push
sbb
shll
sahf
adc
add
push
xlat
rolb
das
call
pop
and
inc
test
mov
mov
adc
stos
mov
loope
and
aas
inc
push
dec
cmc
aad
ja
mov
sub
xchg
or
pop
inc
push
or
xor
cmp
pop
bound
pop
in
stos
shrb
push
cmp
das
mov
out
xchg
push
adc
push
sbb
add
cmpsl
jecxz
push
fstl
ja
jo
cmpsl
and
mov
inc
enter
int
lods
cld
sub
pop
jge
pop
lods
imul
pop
std
pop
into
enter
dec
and
cld
pop
pushf
cmp
mov
in
pop
push
and
sbb
test
and
rol
cmpsb
push
dec
lods
cmp
jb
xchg
lds
gs
int3
xchg
shl
push
ds
inc
test
arpl
lock
rolb
jmp
cld
repnz
mov
lods
pop
leave
mov
push
dec
and
or
iret
lret
ljmp
aas
lock
test
pop
ja
ljmp
fistpll
inc
sub
xor
cwtl
stos
pop
cs
popa
popa
inc
mov
pop
fwait
std
inc
mov
push
xor
push
ljmp
out
and
push
cmp
loop
out
mov
jg
jne
push
stc
fmul
aam
xchg
add
out
mov
lods
mov
rep
in
push
out
lcall
fwait
jmp
cmp
int3
daa
inc
orl
ds
push
jg
popf
jb
inc
cmp
xor
ds
cmc
flds
pop
and
cltd
ret
inc
mov
inc
fcompl
stos
orl
subl
cmc
shlb
sbb
or
cmp
int3
xor
and
andl
mov
sahf
mov
divl
xchg
hlt
and
cmc
aam
sub
in
nop
aam
cmp
clc
push
push
fisttpll
inc
repnz
cmc
test
lea
xorb
pop
push
lahf
jmp
lret
fprem1
fwait
push
sub
sbb
mov
xchg
cmp
push
lods
in
ds
jecxz
in
jp
mov
test
adc
mov
test
push
adcl
loop
cmpsl
or
mov
xchg
push
mov
pop
addr16
hlt
sti
pop
and
and
aas
and
cs
cmp
in
dec
cmpl
push
enter
mov
out
jnp
inc
in
insb
mov
lods
cli
pop
movswl
mov
daa
mov
inc
xchg
aam
add
ficomps
adc
sahf
pushf
xor
sub
mov
aas
jae
clc
xor
dec
movsl
or
push
xor
xchg
cmp
add
out
loope
hlt
and
inc
test
subb
lods
leave
push
lock
loope
ret
ja
daa
pusha
dec
lret
dec
fistl
jge
cmp
cmp
fidivrs
movb
or
lock
in
mul
call
ss
mov
cld
scas
xchg
push
es
cmc
outsb
daa
sbb
pop
xchg
lret
mov
ja
ja
fldenv
and
mov
xchg
aad
xor
out
xlat
pop
push
stos
test
or
add
inc
insl
pop
mov
mov
lea
mov
andl
imul
adc
outsl
jecxz
xchg
pop
cmp
out
lea
mov
sub
sbb
sbb
dec
cmc
and
dec
data16
mov
and
dec
adc
cmc
inc
mov
fcmovnb
xchg
lods
pop
jle
dec
mov
xor
mov
cltd
jg
sub
inc
loop
push
adc
cs
mov
inc
pop
in
mov
aaa
sbb
mov
lret
cmp
mov
mov
int3
pop
mov
mov
pushf
loop
pop
pop
adc
adc
cmp
stos
add
sti
in
test
or
into
mov
dec
loope
jl
xchg
iret
mov
or
in
pushf
add
clc
mov
call
mov
sub
pop
xchg
lea
jg
mov
fistl
loope
test
insb
loopne
sar
or
scas
and
shll
les
jg
lea
js
mov
fildll
xabort
cmpsb
sbb
xor
and
stos
pop
out
dec
jae
in
inc
icebp
xchg
nop
sarb
cmp
sbb
shlb
divl
outsb
pop
xlat
in
neg
idiv
dec
or
stc
or
lds
pop
movsl
repnz
sbb
arpl
cmpsl
hlt
cld
mov
or
les
out
cmp
paddq
rcll
xchg
test
rcl
arpl
adc
sub
inc
in
xor
dec
mov
dec
and
addr16
dec
ja
lret
in
lea
mov
inc
jecxz
jge
jecxz
mov
cltd
pusha
mov
or
sbb
mov
add
out
nop
inc
out
jl
xlat
ljmp
int
aaa
xchg
pop
pop
add
jmp
or
lock
stc
xor
and
or
or
xchg
mov
pop
sbb
inc
add
outsb
push
sub
dec
adc
lret
push
jp
les
lret
inc
mov
out
or
inc
insb
mov
ret
pop
nop
or
dec
mov
sahf
loop
mov
hlt
in
lret
ss
leave
scas
in
cltd
and
inc
pop
jmp
adc
cmp
sub
in
imul
inc
or
ljmp
xlat
add
push
pusha
lods
roll
cmc
pop
rorb
add
mov
leave
jae
fdivs
push
fsubr
cmc
in
fcmovbe
loopne
js
mov
mov
out
or
mov
pop
push
imull
sti
mov
in
loopne
outsb
sub
dec
adc
les
or
sbbl
and
outsb
push
push
mov
test
pop
pop
sbb
fnstenv
xor
mov
jb
je
and
ret
sbb
add
mov
in
out
insl
or
adc
adcl
std
fdiv
cmpsb
push
add
pusha
loopne
notl
mov
jae
mov
add
test
cmp
fiaddl
adc
sub
lea
repz
or
push
sub
daa
lock
popa
in
jbe
jmp
icebp
fwait
bound
dec
bound
sahf
and
sbb
inc
fldt
jb
xor
std
mov
push
mov
fnstcw
ds
cs
fs
iret
mov
jo
pop
mov
jg
adc
jnp
pushf
clc
hlt
add
mov
insl
loop
pop
adc
add
jle
xchg
idiv
inc
push
ret
mov
or
fildl
ficoml
adc
cmc
imul
xchg
xor
xchg
fldcw
xchg
xor
mov
adc
aas
loope
or
outsb
pop
sub
shl
push
ja
cmp
push
xor
sbb
test
lcall
adc
sbbl
je
int3
pop
pop
aas
xchg
fs
clc
cmp
jge
divb
addr16
jmp
popf
xor
inc
pop
pop
sub
dec
and
mov
cld
cmp
mov
lods
bswap
stos
lock
fcoml
shl
enter
jge
outsl
pop
add
inc
xchg
jb
pop
data16
jae
int3
mov
dec
mov
popa
jb
push
pop
xchg
fs
or
test
mov
add
arpl
jp
cmpsb
add
lcall
dec
loopne
adc
push
jl
fiadds
jb
sbbb
jo
enter
shll
pop
jbe
and
push
sbb
pop
scas
mov
push
cltd
adc
jecxz
fidivrs
loop
insb
out
lahf
dec
pop
outsl
icebp
in
shll
add
nop
ja
leave
mov
and
stos
jns
dec
inc
into
pop
lock
xchg
add
and
cmp
xor
xor
insb
ljmp
inc
inc
and
jg
stc
fsubs
loop
loop
ret
pop
in
add
push
outsl
div
stc
and
xor
add
outsb
je,pt
mov
dec
xchg
inc
imul
xchg
fwait
test
lret
sub
in
inc
mov
and
push
push
loopne
xchg
scas
out
in
cmp
jp
xchg
test
inc
jne
shlb
push
push
leave
mov
int3
push
jne
mov
inc
mov
sbb
int3
dec
sarb
cmp
push
jecxz
enter
aaa
rorl
or
ficoms
les
or
mov
stos
or
lods
pop
xchg
pop
jmp
and
mov
inc
cltd
sub
xchg
xchg
and
mov
out
ret
sub
imul
out
ror
cli
rcl
int
xchg
push
lods
pop
push
lds
xchg
in
addl
dec
cld
push
mov
push
push
xlat
ds
ljmp
xchg
mov
cmp
aas
insb
test
add
mov
cmp
mov
ds
lcall
sbb
fwait
mov
dec
push
stos
pop
dec
dec
inc
bound
rcrb
xor
aas
add
cmpsb
pop
cwtl
cmp
jae
lret
dec
ret
aas
sbb
pop
inc
add
into
add
sub
mov
cld
test
cmp
stos
push
into
xchg
pop
aas
cmpsl
ret
in
out
sbb
mov
pop
mov
xchg
sub
cmp
xor
lods
testl
inc
sahf
scas
add
xchg
ljmp
aaa
jl
push
xchg
push
push
add
push
xor
lods
and
mov
outsb
mov
das
dec
scas
jl
clc
mov
in
ja
jb
jae
jae
rcrb
add
pusha
mov
ret
lahf
ss
lahf
inc
jo
loopne
inc
pop
mov
or
les
sarl
adc
xorl
dec
jb
pop
iret
scas
mov
xchg
jmp
loope
loope
mov
mov
fnstenv
daa
push
fsubs
or
out
loopne
and
pop
clc
cmp
sar
out
sbb
fwait
sub
rcr
shll
test
nop
inc
mov
mov
lods
test
dec
lods
shll
in
and
or
fists
cs
roll
push
inc
es
push
mov
sub
in
push
add
mov
ret
sub
push
into
push
insb
jp
testl
dec
hlt
sbb
loopne
mov
mov
fs
sbb
or
inc
pushf
scas
dec
dec
sub
ja
in
jg
data16
pop
lds
jo
jp
pop
loopne
jle
mov
dec
loope
xor
psllq
daa
aas
dec
imul
pop
movaps
xchg
push
dec
lcall
and
cli
mov
jae
or
or
fmul
faddl
sbb
sub
mov
push
sti
push
or
adc
dec
add
dec
mov
mov
adc
dec
inc
into
add
mov
pop
jb
mov
add
pushf
ljmp
fwait
ds
push
push
fidivl
xor
and
pop
test
das
dec
les
stos
xor
jmp
push
cs
and
or
fs
sub
je
jle
flds
leave
addr16
push
cmpsl
sti
test
std
push
call
mov
push
es
sbb
lahf
lret
gs
movsl
adc
aas
push
xorb
std
jmp
inc
iret
cld
mov
test
cmc
mov
push
sbbl
sub
push
std
mov
mov
jno
mov
sbb
xor
inc
xor
roll
adc
adc
push
in
stc
aaa
cmpb
or
xor
or
mov
inc
add
xor
fisttpll
imul
xor
pop
cmp
adc
lods
dec
pop
out
adc
pushf
aaa
jecxz
subb
xchg
testl
jne
scas
adc
mov
mov
loope
cmp
push
movl
pop
cmp
test
and
or
sbb
fcmovnb
loopne
insb
lret
ficoml
movsb
or
cli
add
repnz
fistpl
mov
push
out
adc
leave
movsb
pop
shll
insb
xchg
mov
xchg
jmp
sahf
mov
lds
push
add
js
mov
movsb
push
add
sbb
adc
add
cld
adc
or
fiadds
sub
data16
mov
in
out
or
loopne
jecxz
xchg
add
rorl
scas
loopne
adc
aad
inc
mov
test
jns
push
sbb
jle
sbb
pop
push
pop
inc
fcomps
ds
ror
fisttps
mov
data16
xchg
adc
in
sub
push
push
cmp
sarl
or
pop
insb
sbb
pop
int3
xchg
fxch
in
mov
ss
xchg
pop
cmpsl
pop
lods
stc
mov
popf
mov
sti
ret
std
jge
xchg
dec
jae
sahf
cmpsl
bound
inc
adc
daa
jne
add
test
imul
ss
jg
fdivr
movsb
loopne
shll
fcoms
lret
scas
push
jp
xchg
testb
ss
jmp
movsb
dec
ret
ds
in
cmp
fistl
xlat
pop
test
fldenv
jb
push
or
loope
cld
add
xor
inc
push
aaa
out
push
inc
in
outsl
or
xchg
mov
adc
js
push
rcll
inc
inc
jb
test
clc
mov
or
xchg
popa
gs
jecxz
repz
and
xchg
repnz
fiaddl
imul
adc
movsb
pop
lret
lods
clc
lret
test
adc
out
call
jl
xchg
push
cs
outsl
add
jno
popa
insb
pop
jnp
js
or
cmp
inc
inc
push
aaa
pop
les
xor
mov
shll
imul
sbb
mov
bound
out
popf
shrb
and
andw
dec
jo
cltd
sarb
xor
sub
sub
jmp
adc
test
push
addr16
adcl
addl
inc
and
mov
push
jmp
sbb
nop
push
movsl
cmpsl
cmpsl
push
fwait
lret
cmp
fldl
jne
out
int
mov
in
idiv
inc
lcall
push
ret
fisubs
push
jne
rcl
lods
and
and
add
out
cltd
jmp
movsb
cmp
lahf
scas
ret
push
sbb
xchg
lock
mov
jo
test
push
test
cmpsl
sbb
je
shlb
aaa
and
out
imul
mov
add
or
xor
cmp
insb
adc
xchg
insl
mov
cli
cltd
mov
stos
adc
adc
lock
shrl
in
xlat
jb
ss
xorb
icebp
outsb
sbb
cltd
imul
dec
lcall
shlb
std
out
cmp
xor
mov
push
fwait
in
jle
dec
int3
ja
mov
cmp
ficoms
cmpsl
repnz
or
push
push
xor
push
adc
and
xor
insb
mov
test
mov
mov
xchg
push
rorl
and
sub
addr16
cmp
fwait
inc
lret
cmc
xchg
push
inc
inc
scas
js
push
popf
scas
call
cmp
inc
xor
and
or
roll
sbb
sub
sub
pop
inc
icebp
jb
cltd
mov
xchg
dec
mov
mov
aam
rol
jl
mov
movsl
push
inc
clc
pop
xor
jp
xchg
jp
add
ror
mov
mov
xchg
push
push
add
repz
movsl
ja
mov
and
mov
cli
pop
es
fistl
cmp
ret
sub
ret
adc
cld
and
addr16
jecxz
sbb
bound
xchg
sbb
cmp
test
out
sub
loop
mov
jg
push
outsl
aad
mov
fcomps
xchg
xchg
fs
popa
ljmp
rcl
sti
mov
add
cmc
movsb
in
push
out
or
push
push
push
cmc
mov
leave
and
addb
cmc
movhps
push
stc
jns
sbb
mov
addr16
scas
aas
mov
xchg
xor
lds
inc
mov
cld
xor
sbb
fsubrs
xchg
mov
dec
ljmp
sahf
jp
pusha
sub
sub
divb
xor
xchg
arpl
lock
xchg
dec
mov
jg
leave
bound
push
push
dec
lock
push
jb
stos
ds
in
xor
sub
and
mov
push
js
adc
pop
cmpb
cmc
clc
and
pushf
filds
add
mov
mov
fistl
cmpsb
push
sub
cmp
jns
test
ss
shlb
sub
adc
adc
push
jle
pop
push
dec
xor
jno
mov
inc
add
in
adc
xchg
cltd
push
mov
push
dec
fwait
movsl
pop
sbb
jle
sbb
inc
mov
mov
mov
int
pop
add
addr16
cltd
cmp
stos
stc
mov
stc
mov
adc
imul
mov
dec
rorb
xchg
add
mov
dec
mov
jno
xor
rep
mov
int
es
pop
fsubs
stos
dec
out
leave
ficomps
xor
cmp
iret
scas
fcomps
jmp
mov
pop
pop
nop
sbb
subl
jg
add
mov
int3
mov
pushf
pop
mov
cmc
lock
jmp
movsl
loop
push
sbb
shl
and
mov
mov
xchg
adc
sub
dec
out
add
adc
out
shll
mov
xor
mov
xlat
and
pop
mov
jge
mov
mov
test
jle
leave
stos
stos
stc
adc
mov
push
addr16
jge
adc
aas
cld
mov
call
insb
mov
sbb
xor
icebp
xchg
repnz
addr16
mov
and
pop
push
popf
in
lret
mov
ret
xor
or
popa
je
or
xor
pop
dec
data16
int
call
jo
sub
nop
cli
pop
push
pusha
mov
add
mov
xor
dec
adc
mov
lods
add
push
add
lods
and
gs
lcall
cmp
push
jle
sbb
mov
xchg
inc
aad
xor
test
dec
xchg
or
inc
mov
jmp
cmpsb
popf
push
cmc
inc
sbb
subl
push
sbb
jge
cmp
sbb
stos
mov
push
ffree
int
xchg
sti
push
pop
ret
call
xchg
xchg
aad
leave
lock
xor
xchg
dec
das
push
icebp
lds
mov
sbbb
mov
fs
ret
mov
loop
rcl
cmp
fwait
stos
pop
jle
arpl
andl
mov
cli
pusha
dec
sbb
mov
fdivrs
and
jmp
mov
flds
dec
or
add
mov
loopne
test
addr16
int
imul
pop
jp
cltd
xchg
pop
enter
push
dec
popl
sbb
xchg
cmp
cmp
jmp
test
test
push
lods
sbb
pop
xchg
push
push
sub
dec
pop
cli
xor
fsubr
dec
adc
aam
mov
test
jg
movsb
int
cmp
leave
mov
dec
roll
shlb
lods
and
push
mov
mov
mov
sbb
mov
pop
sahf
pop
fstps
pop
jb
add
mov
jle
les
mov
mov
fsubrl
insb
mov
movsb
jb
repz
push
sbb
xchg
dec
inc
push
ljmp
xchg
fwait
adc
xchg
pusha
movsb
lret
aad
xor
adc
mov
rorb
add
and
test
popf
inc
mov
lahf
lods
inc
xor
pop
cli
cld
xor
cmp
dec
mov
push
push
sbb
rcrb
lret
xor
xor
mov
mov
idivl
ja
xor
daa
jno
repnz
cmpsl
mov
je
clc
pop
jge
xor
and
mov
dec
leave
mov
add
in
mov
clc
inc
rcr
cmp
mov
xchg
jp
and
push
or
add
lahf
gs
bound
ja
xchg
sub
movsb
enter
mov
xor
adc
jle
out
inc
lds
pusha
repnz
test
sub
or
sbb
inc
cmp
push
mov
xchg
cmpsb
sbb
fnsave
arpl
mov
lcall
xchg
xchg
sub
jae
into
cmp
and
aad
cmpsl
aam
xor
pop
pop
hlt
dec
sub
xor
mov
adc
outsl
adc
sbb
inc
jns
cmp
lret
mov
sub
cltd
dec
insb
loopne
sub
xor
xchg
hlt
jae
inc
cmp
arpl
test
push
or
or
pop
popf
test
fisttpl
addr16
and
dec
pop
lahf
outsl
inc
ret
fnsave
cmp
sahf
adc
lret
icebp
popf
lods
popf
cmp
popa
jmp
pop
add
lock
or
aas
frstor
es
mov
inc
mov
mov
cmp
ffree
sub
push
mov
daa
pop
adc
cmpsl
xchg
xor
pop
imul
imul
fcompl
out
jo
out
insl
xchg
cmp
pop
sub
mov
dec
loope
hlt
dec
jnp
and
adc
cs
dec
inc
mov
and
ror
mov
testl
jmp
test
and
dec
adc
mov
int
outsl
mov
and
sarl
cmp
outsb
mov
cltd
sbb
adcl
inc
add
icebp
shrb
xor
or
dec
push
push
sbb
mov
and
adc
sbb
or
fiaddl
mov
insl
cltd
cmp
pusha
imul
fwait
jae
cld
test
push
stos
or
cmc
outsl
sbb
adc
dec
cmp
pop
filds
mov
pop
xchg
jle
test
jge
cmc
sub
cld
mulw
inc
dec
push
fsubr
push
scas
mov
push
ja
scas
outsl
cmpsb
aam
rorl
jge
aaa
ret
dec
pop
jge
fmull
jmp
inc
movsl
jecxz
or
push
cs
scas
mov
test
and
sbb
sar
fwait
mov
mov
adc
mov
pushf
out
enter
or
ret
or
inc
jno
mov
sbb
scas
das
and
inc
jns
adc
add
xchg
mov
loop
popa
inc
pop
dec
jmp
push
fnstenv
stc
mov
pusha
ds
push
bnd
pop
pop
mov
or
or
mov
and
addr16
lds
in
enter
and
ljmp
pop
divl
push
ret
sahf
scas
stc
mov
scas
shlb
scas
es
adc
scas
xchg
adc
bound
fwait
dec
or
popa
mov
in
sub
out
adc
ljmp
push
cld
outsb
fiadds
pop
cltd
notb
cli
subl
enter
jg
jmp
or
adc
or
sub
repnz
in
sbb
lds
and
fsubp
sarl
mov
pop
test
add
outsb
jo
xor
icebp
add
fsubl
in
das
sbb
sbb
outsb
lea
cmpl
bound
push
sbb
cmc
mov
lret
call
stc
pop
pop
jbe
or
test
call
fbld
jp
fisttpl
cmc
shr
fists
xchg
push
pop
adc
adc
inc
mov
js
fst
xor
jbe
sub
ror
and
jle
jmp
rcr
outsb
mov
popf
inc
jecxz
push
lea
test
pop
cmpl
or
cmp
mov
loop
es
stos
xor
scas
add
pushw
adc
mov
ds
jae
or
xchg
enter
xor
daa
push
dec
insl
das
outsb
jns
icebp
sub
and
int
mulb
push
mov
in
fs
push
dec
mov
sahf
xor
ljmp
adc
push
fsubl
dec
cmp
pusha
fildl
mov
cmp
clc
sbb
sub
fyl2xp1
jo
test
imul
xor
rclb
lods
push
mov
push
cs
and
push
leave
push
icebp
lods
xor
cld
shl
es
lea
pop
into
leave
orb
sub
in
loopne
sub
xchg
aas
fsubs
in
mov
ss
sbb
dec
mov
out
cmp
movsb
and
les
jbe
pusha
cmp
test
popa
xor
test
sbbl
sbb
and
nop
imul
loope
inc
mov
sbb
mov
icebp
call
lret
clc
sub
xchg
pop
shrb
cmpsb
out
adc
stc
fwait
jne
push
call
in
out
add
icebp
mov
mov
testb
mov
das
icebp
fistl
into
sub
push
pop
ret
mov
cli
or
fldt
xchg
push
clc
dec
shlb
or
sub
xor
mov
lret
in
pop
dec
mov
sub
fadds
or
push
shr
int
ss
ss
les
popf
push
lods
ds
adc
cs
aaa
mov
push
in
inc
out
adc
push
and
push
leave
stos
sub
cmp
das
mov
or
repnz
sarl
jbe
or
in
pop
lds
and
repz
jb
push
popf
push
outsl
sbb
xchg
push
call
iret
cmp
fcompl
in
cmp
popa
lret
in
fs
jnp
mov
adc
mov
out
jae
cmc
xor
mov
aad
fcomps
outsb
movsb
ds
je
in
sarb
push
scas
aas
fwait
or
mov
jns
cli
cmpl
jno
xchg
inc
and
xor
cltd
imul
test
dec
dec
cltd
je
hlt
pop
sbb
xor
jbe
add
cwtl
sbb
mov
mov
rep
mov
sub
fdivrs
sub
sbb
xchg
arpl
ret
cmpsb
cwtl
jp
push
insb
add
fnstcw
dec
add
xor
aaa
fisubrl
cltd
out
pop
cmc
inc
adc
cmp
cmp
pop
jnp
mov
loop
mov
pop
iret
xchg
and
mov
adc
cmp
dec
fsubp
xor
rcl
outsb
das
iret
jl
pop
mov
stos
lea
or
fimuls
loope
mov
scas
cmp
mov
jne
push
and
xchg
pop
mov
push
stos
and
sbb
loope
pop
test
clc
cmc
pop
mov
scas
pusha
inc
push
fisubs
or
cmp
mov
ds
xchg
aam
xor
xchg
sbb
add
xor
hlt
mov
pop
jcxz
push
jnp
je
nop
push
shr
lahf
push
scas
shlb
sbb
and
das
and
stos
xchg
sbb
mov
sub
add
test
ja
aad
add
repnz
dec
dec
scas
mov
hlt
cmc
out
sahf
cwtl
mov
arpl
jmp
scas
ss
cltd
sbb
cmpsb
or
int3
sbb
cmp
stos
push
add
jo
sahf
mov
loopne
mov
hlt
fsubrs
lahf
inc
pop
aam
das
pop
mov
mov
movsb
add
cs
int
cmp
add
jmp
or
fcomi
aam
and
fimull
lds
stc
xor
xchg
lret
jl
lods
dec
inc
mov
mov
std
test
push
add
push
cmp
adc
lret
inc
sub
shr
ror
dec
es
mov
push
mov
cs
or
call
push
sbb
add
shl
call
stos
pop
clc
pushf
imul
aas
add
lds
pop
dec
mov
inc
out
es
mov
out
repnz
outsl
add
jno
sbb
fmulp
popa
jne
mov
xchg
push
clc
push
lea
add
cmpsb
imulb
xchg
clc
lahf
add
adc
jb
push
jmp
and
fistpl
cmp
lock
fisttpl
sub
pop
jle
outsb
dec
sub
pop
add
leave
lods
xchg
add
popl
lds
insb
adc
cmpsb
stos
or
fistps
adc
or
jne
fs
cmp
sahf
xor
adc
lods
xor
inc
pop
lcall
adc
dec
lods
mov
idivb
shrb
xchg
sub
sbbb
lahf
movsb
movsb
add
pop
jns
and
mov
mov
mov
mov
sbb
dec
push
out
cmpb
rolb
mov
movsl
lea
loop
dec
mov
pop
dec
push
push
je
push
xor
push
sbb
pop
or
iret
sti
jle
in
fs
cmp
mov
lcall
test
inc
popl
inc
cltd
in
in
ficompl
mov
or
xchg
in
test
les
std
adc
push
subl
loop
cmc
push
push
inc
movsb
call
pop
addb
fdivs
jae
sbb
jmp
inc
jns
mov
mov
pop
adc
mov
mov
or
pop
mov
repnz
adc
cmc
mov
mov
mov
inc
pop
sbb
nop
aaa
loopne
jbe
fs
negb
mov
sbb
lahf
fdivs
int3
fistpl
enter
xchg
dec
repz
cmpsb
dec
sarl
push
cmp
cmp
js
mov
out
daa
xlat
pop
adc
je
adc
mov
push
push
pop
cmp
xchg
adc
or
lcall
int
cld
add
scas
sub
orl
jb
adc
pusha
inc
or
scas
jmp
scas
xchg
test
test
xor
cli
ret
mov
scas
idivl
jae
jg
inc
pop
sub
mov
dec
data16
or
cmp
out
push
ss
mov
pusha
lods
lds
outsb
fsts
lret
jge
sub
arpl
push
push
pop
lock
xchg
mov
ljmp
push
cmp
lahf
xor
add
jecxz
and
and
insb
std
div
add
das
fnstsw
mov
cmp
out
out
in
adc
cmp
jne
mov
mov
lock
into
movsb
mov
mov
and
leave
inc
and
fnsave
mov
add
and
fsts
xchg
fists
jb
into
iret
pop
jecxz
mov
cli
adc
ss
sbb
pop
cmpsl
cwtl
scas
mov
mov
subb
xchg
xor
and
sub
mov
inc
pavgb
sub
mov
inc
mov
mov
test
dec
or
js
adc
cwtl
add
adc
xlat
adc
mov
fs
pop
jecxz
hlt
loopne
sub
and
pop
std
and
clc
pop
pushf
add
fwait
lret
push
jno
daa
negb
xchg
sub
lds
stos
sub
call
frstor
sbb
inc
sub
sbb
movsl
imul
fstps
xchg
gs
movaps
xor
or
and
or
mov
xchg
loop,pt
or
cmp
inc
xchg
sti
lock
imul
jbe
movsb
dec
cmp
dec
mov
call
shlb
cmp
cmc
sbb
fisubs
insl
add
imul
and
fcmovnbe
jmp
add
mov
into
mov
push
aaa
pop
rclb
jl
pushf
adc
jb
adc
push
mov
es
pop
lcall
pop
test
xchg
pop
lods
ja
repz
in
pop
popf
pop
or
inc
mov
icebp
cmc
or
cmp
or
lret
sbb
xor
push
vmovd
shll
outsb
cmp
mov
mov
ds
xchg
std
push
popa
mov
aas
test
sti
push
insb
xchg
push
stc
call
fisubrl
out
aad
cmp
punpckhwd
sbb
jg
mov
mov
test
in
fadd
imul
add
out
mov
lret
mov
xchg
stc
sti
mov
sbb
xchg
xchg
and
fstp
adc
sub
scas
or
cmp
movsb
or
cs
jp
dec
push
xor
outsb
push
mov
lea
shlb
jl
daa
mov
adc
cs
xchg
mov
neg
test
stos
std
call
negb
xchg
fmull
mov
lret
shll
mov
popf
dec
add
push
and
pop
push
cmp
call
pop
jne
dec
push
or
pusha
ja
std
shlb
out
jb
lret
dec
jmp
out
aas
jecxz
fwait
jbe
dec
les
xor
sub
pop
sub
cmp
shlb
mov
xchg
add
js
mov
adcb
mov
fists
out
push
hlt
mov
or
sub
orb
push
out
int3
inc
pop
dec
sub
push
cltd
inc
daa
rcll
out
mov
nop
or
cltd
out
aad
call
mov
push
or
stc
pop
or
pop
xchg
cmp
pop
xchg
cltd
xchg
imul
test
push
cmp
and
sub
push
test
jnp
mov
sti
push
xchg
jp
dec
pop
push
add
cmp
stos
xorb
and
and
gs
vmwrite
mov
sti
pop
test
stc
mov
fnstenv
incl
xchg
rorb
or
dec
push
cmp
fs
push
loopne
xchg
pushf
sub
fs
cmp
mov
enter
sbb
jecxz
sbbb
inc
xchg
sub
dec
adc
xor
sti
pop
mov
pusha
xor
loope
mov
data16
adc
add
cs
scas
aas
and
imul
mov
fwait
sub
sub
fwait
in
dec
hlt
movl
jnp
call
jecxz
subl
adc
push
xor
mov
aam
mov
xor
shrb
lock
daa
xrelease
push
fcmovnu
out
push
or
pop
pop
cmc
sbb
and
pop
rcl
sub
bndstx
int3
add
cmc
add
jne
add
xor
pop
pop
insb
pmullw
repnz
pusha
push
pushf
aaa
imul
jg
inc
and
into
adc
insb
add
push
gs
add
lock
stos
xchg
out
bound
or
xchg
ja
lret
addr16
push
mov
fimull
push
add
xchg
push
fbstp
sub
jns
out
sbb
xchg
sub
push
mov
sti
into
lret
repnz
cmc
insl
sub
int
fs
sub
mov
pop
into
lds
pop
or
xor
xchg
push
cmp
enter
hlt
add
and
sti
nop
and
shll
lret
pop
fs
sub
mov
and
push
pop
sbbl
repz
cltd
adc
adc
and
int
mov
xlat
xchg
adc
pop
mov
pop
lret
out
jb
xchg
jo
test
test
xchg
das
mov
fsubr
fdiv
je
lea
lret
sar
ret
test
test
rcrb
lret
inc
push
leave
xchg
push
lods
xchg
repnz
xchg
fs
mov
in
sbb
and
jo
add
mov
test
std
or
jae
fimull
icebp
aaa
out
pop
xchg
cld
scas
fdivrs
bound
sti
add
aam
jp
loopne
adc
add
imul
lahf
outsl
aad
addl
stc
inc
mov
into
and
mov
xor
add
in
sbb
aam
mov
xor
xorl
imul
outsb
push
mov
xchg
jne
or
nop
into
add
lock
sahf
cmp
mov
and
shlb
insl
test
out
cmp
xor
js
pop
sbb
pop
idivl
aad
test
sbb
cld
icebp
pop
push
sbb
rcll
mov
pop
std
es
pop
js
sti
hlt
adc
mov
pushf
adc
insl
bound
mov
sub
mov
inc
push
cli
loopne
mov
pushf
pop
pop
cmpsl
call
and
fxtract
push
inc
mov
or
inc
ja
data16
jnp
xchg
mov
push
movsb
mov
arpl
add
subb
ja
int
pop
lcall
popf
sub
sbb
insl
and
jo
mov
jo
xor
jo
xor
mov
fwait
ljmp
cwtl
pop
mov
cmpsb
and
dec
xlat
cmp
add
ret
or
mov
shl
enter
out
jecxz
xchg
mov
pop
fimuls
inc
sub
cltd
jbe
aas
fldt
into
fidivrs
xor
cmc
mov
daa
jmp
adc
out
lods
and
into
pop
mov
jecxz
or
and
movsl
jne
inc
jl
xchg
mov
into
ss
popa
xchg
addr16
rolb
inc
ja
dec
dec
jbe
je
sub
outsl
insb
sub
mov
aad
popa
rcll
mov
mov
mov
rcll
cmp
mov
icebp
add
dec
out
push
ja
push
push
movsb
ss
in
mov
fwait
cmp
cltd
dec
mov
stos
mov
outsl
dec
cmp
cmp
mov
or
popa
js
lea
push
ds
adc
pusha
iret
and
dec
std
mov
add
subps
mov
ffree
mov
fnstsw
cs
lcall
inc
and
xor
lds
mov
test
sti
mov
sarl
insb
jg
mov
inc
xchg
pushf
mov
push
sahf
cwtl
or
popf
enter
insl
adc
ss
scas
dec
aas
adc
and
xor
lcall
mov
loop
inc
or
push
xchg
pop
out
lret
or
and
cs
dec
adc
push
jl
sahf
jae
sub
mov
jb
push
pop
js
std
pusha
out
je
test
test
mov
aas
cmpsl
mov
sbb
fwait
xor
test
sbb
js
lahf
jae
xchg
or
out
jbe
fisttps
pop
scas
jl
rorb
ret
cld
mov
in
pushf
fwait
xchg
loope
push
fistpl
sbb
push
test
mov
cmc
jne
push
adc
xchg
jb
add
push
inc
mov
sub
jp
loop
ds
xchg
adc
cmp
xchg
inc
sahf
test
sub
mov
xor
insl
ds
lcall
rcr
inc
pop
inc
popa
sbb
sbb
loop
shrl
sub
push
xchg
ficoms
das
loop
mov
adc
sub
jbe
ja
imul
xchg
pop
ljmp
insb
or
and
ds
pushf
and
int
inc
lea
mov
cmc
out
dec
inc
and
and
adc
fistps
and
fld
fdivr
sarb
lock
xchg
push
aaa
lahf
aas
imul
ja,pn
jmp
shrl
push
mov
out
test
out
nop
push
inc
mov
das
loop
shll
adc
pop
sahf
icebp
fisubrs
scas
mov
sbb
data16
lahf
jb
xor
pop
inc
iret
mov
ss
xchg
mov
ret
adcl
or
bound
stc
in
pop
and
lret
popl
in
outsl
and
xchg
xchg
add
in
mov
xchg
orl
pop
rolb
or
fsubl
rorb
out
ficoms
cwtl
xchg
cmp
cmpsl
inc
add
pop
imul
movsb
push
stos
sahf
xor
sbbb
cmp
movsl
cmp
adc
arpl
cmp
stc
mov
lret
jge
test
cmpsb
xchg
outsl
and
cmp
or
pop
add
shlb
call
adc
jle
xchg
or
inc
xor
push
bound
leave
scas
sub
cmpsl
pop
pop
out
mov
rcrl
roll
fdivrl
call
insb
rorb
or
mov
and
fucomip
or
loop
test
sbb
inc
inc
add
pushf
pop
pop
fmull
insl
cmp
push
sbb
dec
movsb
aam
add
icebp
jl
jge
fsubr
add
lods
lret
fsubr
lds
loope
popa
jns
mov
sub
jo
gs
xchg
xchg
ds
lds
cmp
mov
adc
and
les
push
shlb
pop
mov
jnp
jg
cmc
and
ljmp
lea
nop
outsl
xlat
jmp
dec
mov
repz
addr16
push
sub
loop
cmp
insb
pop
mov
push
pushf
cmp
aam
sbb
sbb
iret
loopne
aas
aad
fucom
mov
je
xchg
cmpsl
xor
dec
mov
testb
test
xor
cli
insl
xor
mov
adc
arpl
inc
gs
and
and
sbb
pop
xchg
jb
aad
movd
leave
mov
xor
stc
mov
mov
shlb
cwtl
push
xchg
xor
test
mov
loopne
sub
xor
data16
insb
gs
add
cmp
mov
scas
subb
and
loopne
and
lods
pop
je
add
aas
push
fsub
jbe
cmc
aaa
sti
test
push
fs
fimull
adc
in
dec
aas
ret
fsubs
repz
adc
lds
pop
mov
mov
clc
jno
fwait
sbb
jnp
shl
dec
inc
add
testw
mov
adc
mov
rcl
and
sbb
dec
push
cmc
addr16
lods
push
int
stc
nop
inc
inc
outsb
mov
mov
out
cltd
outsb
sub
loope
in
and
push
call
scas
cmpsb
lahf
sbb
loopne
mov
in
out
mov
jbe
in
cmpsb
mov
test
inc
inc
orl
ss
and
pop
lret
pop
add
repz
lret
sbb
movsb
gs
adc
cmp
push
xchg
dec
ja
dec
call
xor
test
mov
dec
cmp
sarl
popf
fcom
lahf
inc
lods
or
cli
outsl
xchg
lcall
inc
add
stos
add
push
in
cwtl
push
sub
inc
mov
movsl
adc
sbb
inc
mov
adc
and
mov
jle
inc
push
xor
cmp
incb
mov
mov
fadds
cltd
out
aam
inc
push
icebp
dec
xchg
orl
jnp
in
xchg
lea
enter
inc
fs
push
pop
test
mov
jmp
sbb
dec
lcall
sub
mov
jge
inc
xchg
xchg
sbb
push
dec
loope
jle
sub
jno
loop
sub
lock
xor
add
scas
in
test
mov
or
add
imul
call
inc
adc
adc
dec
and
out
or
divb
je
pop
mov
mov
xchg
icebp
cli
sub
sub
je
pusha
sbb
test
sbb
lods
hlt
movsbl
xor
scas
jg
es
sbb
jb
or
orb
ljmp
adc
xor
jnp
cs
aad
rol
icebp
inc
adc
aad
sub
xchg
js
dec
das
rcl
xlat
sahf
daa
imul
adcl
fbstp
jmp
jae
fs
push
sub
subb
push
or
push
dec
add
dec
push
icebp
repnz
cli
jmp
jle
xchg
push
inc
and
inc
mov
fcoml
arpl
insb
sub
out
aaa
int3
cmp
jns
inc
and
rorb
cmp
mov
jne
das
out
arpl
and
xor
fcompl
stos
push
repnz
mov
imul
in
inc
jg
es
fprem
jbe,pn
in
cs
or
rcl
aaa
addr16
push
or
mov
cli
mov
inc
loop
aam
push
jns
out
mov
out
sbb
sub
cmpsl
pushf
sub
push
push
outsl
rolb
enter
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
sbb
addb
aam
and
jge
mov
daa
dec
jns
mov
cmp
xlat
cmp
cmp
cld
cmpl
inc
push
dec
fldt
fstpl
cld
jecxz
pop
push
adc
or
sbb
mov
int3
xor
iret
mov
cmp
fildl
repz
stos
fstl
push
mov
jge
adc
mov
mov
dec
icebp
int3
xchg
jle
jae
dec
cmp
insb
repz
pop
sbb
popf
jb
insb
cwtl
sbb
in
lods
dec
adc
sti
sbb
insb
nop
xchg
push
and
ret
les
dec
inc
mov
ljmp
push
sub
loop
inc
sahf
jg
lret
sti
lcall
xor
test
clc
sahf
pusha
mov
les
push
jl
dec
sub
pop
fcmovnu
inc
sub
pop
cmp
cmp
sti
cmp
pop
mov
ret
aam
lds
ret
mov
sti
xchg
das
and
test
cmp
aas
ds
rorb
cmp
aam
cmp
pop
scas
dec
xchg
imul
cmpsb
jb
jmp
or
and
sub
mov
mov
cmpsb
sbbb
out
imulb
ja
jae,pn
iret
decl
jmp
cmp
into
mov
faddl
push
popf
cld
pop
fwait
fcmovnb
xchg
push
jo
out
stos
pop
xor
insl
std
leave
mov
clc
pop
xchg
scas
mov
sbb
rorb
andl
jg
jno
int3
inc
imul
push
xor
lret
andb
mov
test
cli
mov
ret
jl
test
repnz
jmp
pop
jae
out
ret
andb
cltd
adc
and
adc
fcoms
push
xchg
xchg
int
sub
jbe
add
fwait
cmp
in
cld
outsb
dec
mov
xor
mov
sub
pop
lcall
push
mov
addl
jp
or
push
inc
dec
das
and
rcrl
cmp
ds
cmpsb
lahf
out
lods
push
adc
add
repz
lret
pinsrw
sub
popa
roll
dec
stos
cmc
add
frstor
push
roll
lret
mov
fidivl
mov
xor
inc
sarl
out
arpl
fmull
lcall
pop
mov
xchg
fldenv
das
sbb
sti
aad
arpl
xchg
ret
addr16
out
inc
test
out
insb
bound
dec
mov
shl
pop
dec
jno
cwtl
xor
jle
test
mov
js
jp
xlat
pusha
mov
add
repnz
mov
dec
pop
inc
in
pop
mov
pop
push
insl
inc
inc
inc
jle
pop
push
mov
scas
sbb
stos
jmp
sub
inc
pop
inc
fwait
scas
xor
lock
or
pop
hlt
mov
ret
jo
pop
es
gs
and
add
or
adc
mov
lret
and
sub
jl
mov
test
mov
loopne
sbb
arpl
cmp
in
jl
adc
xchg
mov
dec
xlat
mov
adc
hlt
push
add
jmp
test
and
jo
mov
adc
xchg
xlat
ret
sub
clc
loope
xor
and
aad
ss
xchg
add
ss
adc
mov
cmp
test
mov
cmp
add
shll
mov
push
fwait
lahf
push
stc
orb
inc
sbb
sbb
stos
nop
push
cmp
cmp
mov
mov
lahf
jp
iret
movsb
push
je
inc
xchg
adc
popa
popa
push
jb
shl
outsb
mov
cmp
add
inc
sub
shlb
xor
push
sarl
mov
loope
dec
fists
inc
cmpsb
popa
lods
test
xchg
push
dec
out
ret
sarl
mov
mov
mov
movsb
sbb
mov
mov
cmc
bound
pop
hlt
jo
xchg
push
dec
pop
js
inc
adc
fbld
in
pop
mov
stc
loopne
shl
mov
mov
or
les
jae
popf
notb
leave
nop
or
pop
jmp
stos
aad
xor
ljmp
pop
lahf
jns
xor
imul
mov
call
in
mov
into
adcb
shll
or
adc
dec
xchg
mov
lcall
mov
pop
jbe
fimuls
je
out
xlat
pop
dec
push
lds
pop
mov
fcmovnu
mov
icebp
cs
push
jo
xchg
pop
daa
jae
sub
push
add
ret
pop
sub
lret
lock
out
test
mov
cld
stos
jne
stos
mov
or
loop
or
xor
jne
scas
and
lcall
dec
sbb
ret
pop
pop
cmp
sti
add
pop
inc
shlb
movsl
divl
dec
xor
inc
mov
or
addr16
iret
add
mov
dec
sti
repz
push
mov
mov
mov
cmp
sbb
pop
daa
in
cmpsl
xchg
repnz
lods
mov
sbb
jno
ficompl
mov
fisubrl
xchg
movsl
std
leave
mov
std
jg
cmp
xbegin
bound
sub
rorl
lods
xchg
jo
jnp
inc
cld
hlt
mov
cs
mov
cmp
pop
push
dec
lds
outsb
inc
std
mov
imul
jmp
cmpsl
or
mov
push
push
adc
jle
les
hlt
stc
out
movnti
or
pop
int
shl
ljmp
cld
push
lret
lods
test
push
jg
pop
mov
add
lds
or
repz
inc
push
loope
push
les
add
stc
lds
inc
jns
add
mov
stc
je
stos
mov
loop
jecxz
mov
fnstenv
sbbl
xor
int3
pusha
adc
or
sarl
and
push
aaa
pop
mov
js
cwtl
pop
xor
push
fsubrs
lcall
ds
push
test
mov
xor
inc
dec
in
cltd
ret
fs
xchg
inc
add
push
xor
loopne
inc
mov
loope
pop
lock
or
sub
cmp
cwtl
loopne
sub
fadd
add
int
and
jbe
adc
and
jnp
sbb
lock
jl
xor
dec
enter
daa
inc
add
add
adc
or
imul
mov
push
loope
movb
sarb
rcr
lret
mov
jecxz
repz
loop
hlt
inc
ljmp
repnz
lods
pop
mov
pushf
adc
lahf
push
dec
fsubrl
inc
pop
jb
jbe
cmpsl
xchg
rcr
sbb
cmp
stc
mov
mov
les
mov
cld
dec
dec
push
cwtl
pop
xchg
sub
mov
jae
sub
or
fcomp
punpckldq
cmp
sbb
negb
addr16
jbe
mov
outsl
push
cmp
pop
arpl
push
call
aas
mov
test
loopne
mul
inc
es
add
and
leave
lret
fstpl
xor
pop
test
jl
sbb
pop
popa
adc
sub
cmp
add
pusha
add
push
mov
loop
cs
or
mov
push
pop
jg
cmp
mov
and
mov
inc
adc
add
mov
mov
aas
ds
xchg
rol
or
leave
fs
outsl
ja
ret
cli
imul
adc
clc
test
push
mov
leave
push
lcall
int3
pop
jmp
in
xor
mov
hlt
std
push
jg
sub
add
or
push
inc
fidivs
stos
adc
std
inc
outsb
cmpsl
test
je
lea
cmp
js
cli
cmp
aaa
mov
test
inc
lahf
pop
imul
add
testl
loopne
loop
pusha
pop
ret
faddl
dec
cmc
mov
mov
lock
lock
mov
lahf
sbbl
push
in
add
cwtl
nop
pusha
icebp
adc
and
ror
inc
push
push
pop
sbb
bound
clc
mov
pop
sbb
pop
out
push
sub
inc
sbb
xor
das
in
xor
jp
scas
scas
and
ret
scas
in
push
daa
mov
dec
enter
arpl
fwait
pop
xor
mov
cmp
jp
aaa
les
outsl
sarl
add
dec
cmpsl
popf
push
shll
push
dec
in
mov
cmp
lret
icebp
enter
pop
out
mov
mov
xchg
mov
cltd
dec
sub
xchg
daa
xchg
loop
xchg
insl
dec
std
jg
add
jecxz
pop
ficompl
or
cltd
adc
ret
pop
mov
cmp
popf
fldt
cld
mov
xor
mov
jle
movsl
frstor
jp
stos
ljmp
sub
or
faddl
movsb
inc
jo
xchg
push
stc
push
dec
cmp
push
pop
push
rol
mov
movsb
jo
lret
inc
sub
addr16
xor
lcall
xor
dec
dec
shll
mov
add
xchg
sti
sub
in
sti
xor
adc
cltd
xchg
mov
je
lds
or
aaa
pop
xchg
ss
jne
hlt
test
mov
jns
aaa
mov
mov
push
mov
cs
icebp
jae
jb
movsl
jne
xchg
xchg
adc
inc
in
pop
fucomi
scas
arpl
ret
addr16
adc
xchg
and
fwait
jbe
sub
sbb
adc
mov
iret
hlt
cs
bnd
adc
pop
mov
push
mov
mov
repnz
pop
test
aas
xchg
jae
loope
mov
adc
push
xchg
push
adc
mov
xlat
shl
push
add
mov
shlb
leave
or
jb
pop
outsl
jno
sbb
mov
mov
enter
jo
mov
mov
jno
into
aas
pushl
jae
add
jmp
adc
jl
fidivrl
mov
nop
mov
ljmp
je
insl
fiadds
sub
test
push
cmc
and
sbb
imul
pop
push
xor
xor
xor
stos
cmc
cmpsb
lret
cmp
loopne
and
icebp
ljmp
jp
cmp
mov
addr16
outsl
js
fcoml
mov
pop
mov
cmp
ds
stos
dec
fidivs
mov
jae
sbb
xchg
adc
dec
mov
popa
icebp
adc
into
sbb
push
inc
mov
hlt
inc
cmpsb
pop
mov
lahf
andl
decl
inc
out
repz
ss
pop
loopne
push
in
dec
fdivr
popf
insl
scas
push
aad
adc
adc
call
xchg
ffree
pop
sbb
test
lock
pop
jp
nop
push
mov
std
fisttpll
mov
lds
jns
mov
fwait
lcall
mov
sbb
fwait
xchg
mov
insb
clc
jb
icebp
testl
mov
inc
out
cmp
movsb
dec
popf
dec
mov
cmp
cld
xlat
test
mov
pushf
aas
add
bound
shl
or
loopne
ficomps
shrl
stos
test
fsubr
xorb
test
jmp
and
in
pusha
inc
inc
mov
mov
push
insl
nop
mov
jbe
mov
flds
mov
or
xor
mov
sahf
test
xor
add
jmp
lahf
pop
adc
fiaddl
xlat
test
lcall
fdivp
pop
mov
popf
add
sbbb
testl
mov
lods
mov
adc
and
push
in
adc
sbb
inc
mov
dec
sub
and
cmp
and
jecxz
xchg
loopne
adc
sub
push
mov
inc
jnp
dec
les
scas
push
mov
mov
jg
fbstp
or
ret
mov
idivl
inc
dec
lock
fs
insb
xor
mov
cmc
sub
mov
xchg
out
rorl
bound
sarb
popa
mov
cmp
ds
call
xchg
leave
es
stos
out
mov
jae
adc
je
testb
or
fisttpll
jl
push
leave
mulb
or
cmpb
ficompl
cmp
sub
inc
mov
mov
inc
das
imul
sub
inc
cmp
xor
xchg
jnp
gs
insb
or
daa
ss
inc
inc
mov
dec
cmp
scas
jl
fs
test
clc
mov
popf
data16
test
or
stos
mov
ljmp
pop
sub
jmp
jl
and
fimull
push
sbb
pop
ja
fcompl
cltd
sbbl
loop
inc
xor
push
rcrb
push
xor
lea
daa
or
shll
call
dec
adc
in
fwait
sub
adc
add
dec
out
nop
jbe
sarb
dec
add
icebp
add
stos
push
repz
es
test
mov
adc
and
insb
stos
pop
mov
call
xchg
fs
rcrl
ret
xchg
cld
or
jae
jb
incl
dec
mov
fwait
stos
xchg
pop
xorb
sbb
push
xchg
stos
mov
xor
pushf
cmp
add
in
leave
imul
or
int
inc
pusha
jge
pop
loopne
mov
xor
shlb
scas
pop
jl
xchg
cmpsb
jae
aam
mul
repz
rorb
into
and
add
jp
mov
add
cmp
xchg
push
sub
xor
bound
push
mov
xchg
fwait
js
dec
mov
popa
dec
cli
xchg
aaa
data16
fadds
les
jne
invd
add
sbb
inc
stos
or
jecxz
cli
jmp
lods
xor
testl
popa
adc
sub
cmpsb
or
sbb
pop
inc
ds
sbb
inc
sbb
lea
inc
mov
jno
call
push
add
and
ret
nop
dec
loopne
cld
js
iret
fst
ss
mov
cmp
pusha
sub
nop
mov
dec
repnz
add
mov
dec
notb
mov
movsl
pop
xor
mov
sbb
outsb
push
jae
jns
cwtl
cmpl
paddsw
push
icebp
and
lcall
in
sub
sbb
lret
mov
jbe,pn
mov
je
fsubr
shlb
fdivp
enter
insb
and
sbb
std
clc
and
int3
outsb
pop
dec
lods
sub
dec
js
cmc
in
and
or
les
add
scas
lret
jmp
pop
jecxz
xchg
je
faddl
pop
insb
inc
mov
insl
cmpsb
insb
gs
aad
insb
iret
or
xor
and
test
mov
int3
cmp
or
mov
xchg
mov
dec
lods
jno
stos
mov
add
sbb
lret
xchg
ret
ljmp
repnz
mov
add
or
fstps
cmp
mov
data16
pop
adc
loopne
xchg
lods
add
mov
or
xchg
pop
or
rclb
outsw
imul
inc
std
xor
xor
add
sti
pop
outsb
cli
jp
fdivrs
fmull
inc
or
add
dec
imul
push
loop
pusha
xchg
jno
xchg
mov
fidivs
bound
arpl
mov
cwtl
shll
les
imul
fisttps
mov
leave
and
mov
adcb
xor
xchg
mov
xor
mov
and
lahf
push
xchg
mov
jo
add
and
mov
insb
lock
jns
dec
ret
cmp
negl
nop
sub
jecxz
pop
inc
xor
inc
cld
and
adc
nop
xlat
cwtl
mov
inc
sbb
aas
addl
insl
mov
mov
popl
and
adc
fstpl
aam
pop
push
fmull
xor
sbb
mov
clc
sub
and
push
dec
mov
rcrb
pop
mov
add
or
push
mov
andl
and
ds
fs
jb
sub
movsb
pop
enter
mov
fucomip
push
sub
fdivs
call
push
mov
and
pop
xor
adc
pop
mov
xor
add
in
stos
mov
movsl
mov
push
clc
pushf
aas
nop
int
iret
lods
ljmp
ficoml
repz
dec
inc
frstor
test
adc
jno
shl
lds
xor
icebp
test
push
aaa
add
shrl
ret
inc
xchg
loope
add
mov
repz
pop
or
sti
or
inc
dec
and
push
frstor
jecxz
push
call
adc
adc
stos
xchg
pop
push
mov
dec
das
mov
ret
cmp
pop
xchg
mov
loop
jnp
mov
cmp
movups
add
mov
mov
dec
fdivl
or
mov
scas
addb
pusha
or
cmpsb
outsb
cmp
inc
pop
in
testl
mov
in
or
xor
or
in
pop
pop
stos
dec
in
jle
mov
fs
dec
out
movsb
sub
add
enter
mov
jno
mov
jae
and
lds
lret
cmpsl
xchg
leave
sbb
mov
inc
sub
mov
mov
pop
into
inc
sbb
inc
stc
stos
xor
lahf
xchg
mov
loopne
cwtl
lods
test
xchg
jle
dec
pop
xchg
xor
adc
scas
cwtl
daa
inc
mov
push
lds
dec
mov
addr16
test
xchg
dec
jle
push
addr16
jnp
rclb
loop
scas
sti
ret
push
mov
jo
add
cmc
shr
sub
sahf
cmp
aas
add
sbb
xor
push
iret
aam
sbb
icebp
fidivl
sub
cmp
rclb
addl
test
mov
push
idiv
xchg
mov
cld
jns
pusha
int3
add
inc
fidivl
sbb
js
xlat
pop
jl
xchg
adc
lcall
daa
pop
adc
pusha
push
or
call
data16
xor
pop
popa
sbb
and
push
shrb
or
adc
dec
or
push
jnp
xor
mov
cmpsb
pop
inc
mov
cmpsb
fstp
dec
es
addr16
mov
sbb
shll
popf
movsb
mov
inc
push
pop
xchg
cs
cmc
das
ds
shll
cmp
pop
out
push
sahf
jb
xchg
shlb
dec
ficompl
insb
outsl
pop
push
cs
mov
nop
icebp
or
pop
cmp
cmp
lods
mov
mov
stos
icebp
movsl
add
data16
mov
nop
mov
outsb
pusha
shll
lret
lea
jmp
jno
mov
mov
lds
ret
fistpll
push
int3
std
lods
and
loopne
adc
push
push
nop
stos
pop
clc
jae
in
mov
cmp
mov
mov
dec
lods
insb
out
loope
stos
outsb
or
push
lds
jo
in
and
cld
shlb
pop
xor
lds
mov
xor
inc
inc
or
adc
mov
push
fisttpl
insl
push
and
or
cmp
testb
notb
sub
xchg
aas
jmp
arpl
push
mov
add
pop
fisubs
lods
mov
in
pop
sahf
xchg
int3
add
mov
rolb
inc
inc
insl
pusha
push
stos
aaa
fmuls
int
mulb
mov
and
sbb
pop
jae
ret
sarl
rep
or
in
ja
clc
xchg
cmp
cltd
sbb
adc
insb
mov
test
mov
or
dec
jg
lret
loope
or
jle
mov
sbb
jmp
cmp
fistpl
sub
sub
mov
vpsrlw
pop
outsl
icebp
xchg
lods
shll
push
mov
dec
shrl
or
mov
sbbl
pusha
or
mov
sbb
jmp
cmp
lret
fs
mov
ja
mov
pop
imul
xchg
stos
inc
shll
pop
pop
push
mull
mov
xor
xor
test
movb
lret
and
stc
loopne
dec
mov
aad
or
and
push
fidivrl
jp
daa
shrl
cwtl
lahf
xor
div
orl
xor
xchg
in
leave
xor
stos
data16
stos
pop
fdivs
enter
pop
mov
xor
xor
mov
data16
addb
into
mov
xor
dec
inc
sbb
xor
push
fwait
dec
sub
je
scas
icebp
mov
add
inc
sti
mov
or
and
add
lahf
mov
sbb
fnsave
dec
mov
or
mov
repz
or
or
mov
dec
and
pop
pop
inc
sbb
stos
popf
push
push
jno
loopne
mov
adc
cmp
and
pop
je
cmc
xor
dec
in
jne
mov
add
inc
or
mov
out
outsb
sbb
dec
adcl
shll
cltd
aad
les
lods
pop
xchg
repz
cltd
or
jge
mov
nop
cmp
fists
push
or
add
lcall
popf
into
mov
or
insl
hlt
into
adc
push
repz
mov
lret
xchg
sahf
imul
leave
mov
std
pop
lock
cld
insb
cli
add
mov
incl
loope
push
adc
pop
scas
lea
push
push
cmp
nop
leave
push
bnd
pushf
inc
mov
adc
pop
pop
testb
sbb
xor
lcall
inc
jge
stos
lea
daa
out
rclb
ret
inc
mulps
jbe
fdivs
pop
dec
repz
push
lods
rol
and
sbb
test
push
daa
popa
pushf
xor
fidivs
insb
xor
or
popa
je
pop
jmp
mov
mov
outsb
scas
lods
sbb
ret
dec
test
repz
xchg
es
xor
mov
repnz
or
data16
sbb
xchg
push
sti
and
stc
cmpsl
stos
aas
call
pop
cmp
lock
vpmaxuw
cld
push
mov
pop
jo
xor
mull
adc
cmpsl
mov
test
or
xchg
dec
andl
jbe
push
data16
stc
jg
mov
outsl
mov
mov
shll
rcl
into
lock
out
push
xor
mov
or
push
imul
jecxz
aas
cmp
sbb
pop
in
les
pop
inc
push
add
in
sbb
adc
push
loop
and
test
in
cli
scas
shl
clc
fidivl
sub
jbe
les
repnz
jb
fcmovne
out
sbb
add
jecxz
popf
jb
arpl
nop
inc
mov
mov
xor
pop
xchg
inc
cmpsb
inc
pop
jno
test
mov
sbb
dec
cmp
cmp
push
repz
pop
imul
enter
and
hlt
add
adc
sub
pop
idivl
cwtl
int
mov
mov
pop
leave
cmpsb
outsl
push
inc
iret
or
jae
mov
xchg
or
adc
stos
fwait
rcl
nop
sub
lret
loopne
adc
rcll
lret
icebp
enter
dec
fwait
push
sbb
cmp
sbb
sbb
inc
cld
movsl
or
sti
mov
sbb
out
loopne
ljmp
dec
stos
mov
rcr
out
outsl
dec
scas
loope
adc
push
aam
mov
sub
test
dec
cmp
loop
sub
mov
adc
pop
mov
enter
push
aad
dec
jns
cmp
fbstp
pop
mov
js
cmp
loop
into
pop
pop
push
cs
data16
lock
mov
mov
inc
addl
adc
lock
ljmp
xchg
jnp
xor
addr16
sbb
das
mov
sahf
sahf
iret
das
cmc
in
lock
imul
scas
sub
push
push
xor
aam
cmp
mov
jae
aam
push
sub
daa
cmc
xchg
fcmovu
xchg
stc
xchg
pop
fldenv
mov
mov
sub
cmp
jecxz
shll
mov
sbb
popa
stc
adcl
or
sub
or
pop
mov
scas
mov
test
rolb
testb
fcoml
shlb
dec
sbb
adc
mov
cwtl
popf
sbb
ljmp
mov
ss
ljmp
xlat
les
push
fcoms
pop
icebp
add
in
and
push
push
lds
das
inc
xchg
dec
test
adcl
jp
rcrb
in
push
repnz
cmp
and
ret
orl
repnz
gs
int3
icebp
push
std
mov
test
pop
test
ret
das
leave
and
mov
lock
mov
lret
xchg
mov
sub
in
loop
xor
fdivs
sbb
add
jg
rorl
mov
adc
imul
pusha
mov
sbb
jo
jge
subb
and
adc
int
jecxz
test
mov
lcall
fwait
adc
mov
jnp
push
gs
push
adc
aam
lahf
iret
inc
sbb
je,pt
mov
xchg
call
xlat
push
outsl
dec
bound
scas
sti
mov
pop
lret
dec
jmp
lock
scas
fcomp
jae
cmp
mov
in
aas
mov
or
fcomp
mov
xchg
push
adc
loopne
inc
call
sub
push
call
cmp
jns
pop
lea
cmpsb
cmp
xchg
and
push
stos
mov
xchg
jno
cltd
jnp
mov
push
outsl
iret
push
jae
in
push
cmp
outsb
xchg
iret
inc
mov
mov
shll
add
in
sti
aad
test
stc
xchg
adc
jbe
sbb
js
js
xchg
fs
xor
aam
inc
mov
and
add
xchg
clc
fmul
fcom
dec
and
ret
call
jecxz
je
mov
sahf
nop
pop
or
lahf
or
lcall
push
mov
mov
outsb
mov
fldt
mov
int
mov
rcll
rol
sub
fistpl
xchg
aaa
mov
or
nop
xor
mov
push
fidivrs
xor
xlat
les
cmpsb
sub
cmpsb
dec
aaa
pop
enter
xor
jb
lods
or
cli
pop
in
lret
cmp
popf
fdivrl
outsb
lret
stc
rclb
and
imul
fadds
lock
pushf
loope
popa
adc
repz
or
sbb
orb
out
fnsave
mov
inc
ljmp
pop
cmp
push
sbb
push
pop
or
fcomip
dec
movsl
mov
decb
push
mov
movsb
in
int3
fwait
cltd
jp
rolb
pop
stos
int
jns
and
adcb
adc
jl
mov
pop
jle
outsl
adc
shl
rcrl
mov
pop
shrl
jne
jo
mov
dec
add
adc
pop
cld
pop
fbld
sbb
mov
inc
sbb
fistpll
sti
mov
inc
shll
sub
aad
xchg
outsl
adc
mov
rorl
das
xchg
in
push
add
shlb
xchg
push
stc
shl
lea
outsb
lods
les
dec
negb
sarb
pop
mov
and
mov
fsubl
sar
subb
gs
fcompl
or
add
rorl
sub
and
push
add
lret
shll
pop
sbb
sbb
push
out
pop
mov
push
jnp
add
scas
mov
push
inc
shll
stc
push
jg
das
cltd
test
sarl
mov
pushf
stc
dec
jno
fdivs
sub
aaa
in
push
mov
sahf
aad
jnp
sbb
int3
or
push
out
inc
rcrl
cltd
jbe
stos
imul
andl
push
mov
call
popa
das
xor
xchg
rcrl
lds
jl
add
into
arpl
inc
fcmovu
arpl
sub
pop
xor
je
fldenv
pop
mov
adc
or
jo
clc
add
test
fwait
imul
mov
or
pushf
mov
popa
ret
imul
sub
out
cld
cmpsb
jmp
aad
std
add
xor
ljmp
loop
hlt
pop
adc
mov
dec
cmp
push
push
add
xchg
icebp
loopne
sbb
repz
scas
int3
mov
add
test
subl
push
daa
inc
adc
stos
loopne
movsl
dec
adc
nop
loop
popa
add
in
pop
insb
in
and
inc
mov
pushf
cmp
fs
xor
mov
pop
ja
shll
leave
fisttps
mov
and
and
mov
adc
and
je
xor
mov
sub
enter
cmpb
push
lcall
and
jae
repnz
xchg
dec
cmp
das
movsl
xchg
jp
mov
lahf
xor
xchg
push
or
sbb
movsb
sub
mov
xlat
cltd
mov
lcall
add
cmc
loopne
mov
lret
cmpl
roll
dec
outsb
insl
ret
ljmp
outsb
jp
jmp
cmp
addr16
rep
inc
mov
enter
popf
cwtl
xcrypt-cfb
cmpsl
adc
add
xchg
stc
push
add
pop
outsl
adc
xor
imul
test
dec
sbb
push
adc
and
push
pop
cmp
call
cmpsb
or
je
cmp
int3
jb
or
repz
in
test
out
popf
jbe
push
and
enter
hlt
test
push
pop
out
mov
adc
pushl
icebp
or
mov
out
sahf
stos
lret
xlat
xlat
aas
cmpsl
int
ficoml
fmull
adc
test
push
lods
dec
xor
imul
daa
adc
pop
add
mov
cli
divl
push
rorb
xchg
jmp
jne
pop
pop
sub
jmp
int
cmpsb
add
jl
aam
jo
lods
xor
jecxz
cmp
add
lret
cmc
inc
mov
cmp
in
test
push
inc
mov
aaa
faddl
mov
xor
push
pop
fcoml
sbb
repz
roll
ror
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shrl
stc
addb
xchg
test
arpl
and
adc
mov
lock
inc
js
movsb
outsb
push
push
xor
add
jo
add
scas
mov
inc
adc
mov
aas
neg
mov
dec
not
outsb
stc
test
cli
jnp
stos
pop
xchg
xchg
mov
ret
mov
mov
cmp
jnp
arpl
int
mov
inc
test
xchg
enter
out
lcall
hlt
icebp
push
shlb
insb
jae
fisubs
cmp
pop
ret
je
cmp
out
inc
and
sbb
fstpt
and
xor
adc
repnz
mov
sti
push
bound
dec
popa
lcall
cli
add
xchg
cmpsb
xchg
jne
repnz
sub
xor
push
loop
xchg
and
pop
aam
sbb
ror
cmp
xor
sbb
fidivs
jge
int3
pop
sub
cmp
outsb
sbb
pop
sbb
xchg
cld
rcrb
loopne
int3
lock
lret
filds
xchg
and
popf
mov
mov
out
xchg
xchg
insb
insb
call
sub
jns
stc
lcall
cmp
lahf
repz
les
push
adc
cmp
mov
or
dec
mov
xor
sbb
addr16
mov
imul
stos
sbb
rsqrtps
jecxz
jl
xor
fdivrs
mov
and
inc
rcrb
push
lahf
sub
xor
out
xlat
or
fnstcw
jle
and
outsl
mov
fidivl
push
sarl
mov
movsb
hlt
mov
cmp
pop
dec
mov
add
div
out
scas
psubsw
xor
hlt
push
add
pushf
notl
aas
push
das
add
faddl
mov
sub
and
and
inc
int3
in
and
jl
sbb
sbb
lret
mov
sub
inc
jns
mov
or
adc
bound
xor
dec
mov
mov
frstor
insb
adc
push
movsb
out
test
call
popf
loope
mov
sub
stos
stc
xchg
and
into
jns
arpl
mov
or
jbe
mov
sub
mov
add
lea
pop
add
je
fisubrl
gs
outsl
xchg
or
xchg
dec
std
bound
mov
mov
cltd
sub
lret
mov
fbstp
pop
pop
dec
adc
cmpl
jb
lret
idivl
mov
pop
push
repz
inc
mov
mov
mov
sbb
sub
and
shl
ficomps
sub
pop
or
punpckhbw
add
add
jecxz
lea
and
sbb
push
pop
xchg
pop
int
jno
dec
mov
add
jmp
scas
cli
scas
stc
sbb
cltd
out
outsl
je
imulb
lahf
inc
push
aaa
jo
adc
icebp
dec
clc
sbb
dec
adcl
out
in
in
repz
pop
mov
jecxz
movsl
and
stos
movb
adc
out
sbb
leave
rorb
lods
int3
cmc
hlt
mov
sub
mov
nop
aam
adc
xchg
test
sub
fstp
xchg
mov
mov
movsl
mov
inc
or
xchg
aam
jne
xchg
ficomps
cld
cmpsb
and
jns
mov
xor
jo
lds
xor
ljmp
fists
out
push
and
fdiv
adc
stc
mov
and
fisubl
xor
jns
xchg
jo
sbb
hlt
aas
push
mov
adc
incl
hlt
in
push
js
aas
repz
test
pushf
ljmp
je
jnp
cmp
ss
mov
test
adc
xor
mov
dec
inc
into
cld
mov
ljmp
mov
leave
lods
ret
in
pop
flds
lcall
push
mov
mov
mov
pop
push
inc
cmp
pushl
sub
cmc
push
lret
lret
adc
xor
inc
mov
mov
cmc
arpl
cmp
ja
lret
jge
cmp
lahf
in
xor
cmp
shl
inc
in
popf
mov
out
dec
pop
dec
inc
or
lret
lret
and
mov
into
cmp
pop
stc
or
aas
imul
xor
pusha
movsb
xlat
mov
sti
aas
arpl
cs
cmc
adc
xor
insl
lea
xor
arpl
jecxz
and
pop
imul
idivb
mov
rep
inc
call
and
lahf
sti
ja
leave
flds
adc
data16
outsb
dec
jbe
or
sub
jns
add
ds
les
and
sub
sahf
sub
insl
jmp
insb
pop
xchg
lcall
inc
mov
jp
loope
mov
pusha
movsl
adc
out
push
aas
lret
mov
test
or
jmp
sti
mov
cmpsb
testb
movsb
cmp
pop
insb
lahf
pop
mov
mov
sbb
pushf
and
adc
filds
adc
ret
mov
lods
mov
mov
or
inc
dec
and
or
into
xlat
jmp
cmp
cmp
xchg
movsl
cwtl
rcll
add
push
xor
push
test
icebp
mov
xor
roll
cmc
mov
jl
xchg
xchg
enter
push
mov
push
out
daa
pop
in
cmp
repz
dec
out
mov
dec
mov
arpl
push
ret
lods
mov
dec
cmp
sub
out
push
pop
push
jae
mov
jns
pop
test
xor
stos
out
test
cltd
mov
mov
inc
sub
xlat
int
divl
sbb
fldt
insb
cwtl
lods
push
mov
mov
insb
or
subl
mov
ds
jnp
outsb
lea
and
inc
sbb
sub
out
jo
xor
push
xor
icebp
sahf
cmpps
inc
loope
jmp
inc
jmp
jle
push
arpl
loope
push
push
pop
imul
frstor
adc
mov
data16
stos
sub
lret
in
dec
cmp
jbe
and
ds
ja
testl
add
sahf
mov
xor
ficomps
lret
push
test
stc
push
and
mov
ret
inc
cld
leave
outsl
sub
test
jno
add
and
dec
cmp
inc
inc
xchg
mov
fldt
cmp
int3
sbb
xchg
pop
xchg
lea
mov
ret
push
lods
lahf
pop
out
push
fcoml
sub
jl
xor
pop
popa
dec
xor
aam
test
pop
fsubl
jns
test
inc
or
mov
loope
bound
sbb
addr16
rolb
repz
xchg
mov
inc
gs
pop
enter
xchg
sub
cld
cmpsb
inc
fst
movsb
pop
gs
movsb
jb
add
mov
aad
aam
aad
cmp
and
xor
movsb
jg
fidivrl
xchg
flds
dec
cwtl
mov
cmc
xchg
movsl
xchg
scas
test
mov
dec
cwtl
nop
notl
mov
dec
mov
cwtl
ftst
jbe
sbb
xor
sti
xor
repnz
add
stos
jbe
push
aaa
outsl
insb
dec
sarb
and
dec
mov
inc
pop
xor
scas
mov
dec
inc
das
cmpsl
std
ret
cli
ljmp
pop
dec
aad
fwait
sub
repz
sbb
mov
dec
orb
nop
call
fbstp
or
outsb
and
outsb
in
mov
sub
push
pop
dec
les
xor
pop
mov
cmpsl
mov
idiv
leave
stos
push
scas
and
dec
adc
mov
push
cmp
xor
lea
jg
cltd
repnz
mov
das
out
add
scas
dec
fmuls
push
push
lret
outsl
add
fildl
insb
rclb
mov
lea
adc
adc
inc
stos
mov
sub
stos
fldl
and
pop
fildll
sub
cli
out
push
push
shrl
loop
imull
and
pop
jecxz
fs
insb
sub
mov
in
sub
imul
mov
mov
and
fwait
add
shll
jp
repz
jne
fmuls
jmp
cli
xchg
mov
stos
and
movsl
mov
test
out
aam
adc
iret
or
cmpsb
add
mov
cmpl
push
jne
pop
and
daa
mov
mov
pop
mov
dec
dec
test
outsl
adc
rolb
mov
test
xchg
jg
jecxz
pop
je
aam
inc
mov
inc
fcmove
movsb
scas
pop
sbb
bound
cld
lea
jp
mov
mov
push
or
sub
data16
aam
inc
and
push
icebp
out
iret
repnz
mov
les
push
sub
aad
sar
stos
xor
mov
cltd
mov
test
or
lods
daa
push
mov
enter
scas
ss
pusha
pop
cmpb
pop
cli
movsb
in
nop
out
xchg
or
insl
dec
sbb
in
cmpsb
add
repz
std
jl
and
jb
fdivs
pop
into
cs
push
mov
mov
pushf
jl
mov
loope
fdivrs
mov
mov
jae
out
mov
or
gs
adc
test
xchg
fmull
lods
xor
mov
imul
jge
mov
movsl
aaa
cmp
cmpsl
sbb
enterw
dec
pop
in
xchg
scas
les
lods
xchg
leave
push
push
jae
mov
mov
lret
add
mov
es
and
mov
sar
pop
inc
in
testl
nop
jg
nop
movsb
mov
pusha
cmovs
jbe
pop
daa
xor
fisttpl
sub
test
imul
and
mov
into
loope
add
cmp
adc
stc
adc
sub
mov
out
inc
add
faddl
jge
push
pop
cmp
jns
ud0
jb
pop
or
lods
cmp
in
sub
pop
xchg
jne
fisttpll
xchg
mov
fldl
sub
das
stos
mov
xchg
xor
out
hlt
add
mov
mov
enter
sub
fldenv
cli
fdivp
xlat
int3
sbb
sahf
sti
add
movsb
or
sahf
sbb
lahf
jmp
loopne
sbb
in
ja
jbe
mov
in
test
dec
pop
pop
push
xor
sub
push
inc
mov
mov
mov
andb
in
lcall
insl
push
ret
and
pushf
mov
push
out
and
mov
roll
inc
xchg
lea
or
mov
cltd
mov
jo
or
xor
add
or
test
xor
inc
test
shl
xor
in
sti
lret
js
push
and
fcomp
lds
or
test
pop
je
loop
dec
pop
adc
lock
fldenv
fs
dec
frstor
scas
stos
sbb
orb
rorl
mov
push
mov
jmp
out
leave
scas
pop
cwtl
mov
sbb
push
xor
adc
fbld
mov
mov
fs
shlb
sub
inc
gs
cmp
loopne
jne
sbb
pop
js
mov
push
call
cld
mov
push
cld
lret
push
dec
mov
insl
xchg
mov
jns
push
std
mov
jns
add
das
xchg
sbb
dec
pusha
sub
push
sahf
enter
cmc
inc
xor
cld
gs
into
dec
sbb
nop
lcall
jecxz
jg
shrl
lds
test
cmpsl
aam
out
movsb
cwtl
pop
adc
outsb
pusha
repz
add
mov
mov
cmovs
jp
mov
mov
dec
in
sarb
ret
dec
xor
jg
sub
les
mov
add
add
xabort
jno
int
cmp
jo
jecxz
aad
adc
ret
adc
wrmsr
cmp
bound
fs
repnz
dec
jl
sbb
enter
ret
dec
mov
adcb
adc
js
dec
out
push
nop
sub
or
cld
mov
stos
jg
test
sbb
movsl
sbb
sub
push
mov
cli
xchg
fwait
mov
xchg
and
mov
aaa
lds
fmul
mov
pop
lret
lds
das
push
inc
imulb
pop
fisubs
pusha
push
push
jb
faddp
jnp
pop
unpckhps
cmpsb
xchg
adc
shl
int
push
lret
aas
das
pop
nop
dec
xlat
jbe
inc
xor
insl
sarl
cli
inc
inc
jle
add
cmpsb
cmc
dec
out
inc
pop
jl
push
pop
and
and
sub
jecxz
bound
outsb
inc
mov
push
xchg
push
pop
ret
sbb
and
int
aam
nop
sbb
fstps
mov
mov
add
mov
or
outsl
push
xor
xchg
sbb
lcall
aam
push
mov
fistpll
aad
sub
xor
jae
insb
clc
shl
xchg
movsb
shl
push
bound
push
lea
jp
mov
pop
shlb
xor
sbb
dec
pusha
mov
imul
xor
push
add
addr16
cs
fists
aad
imul
jnp
mov
les
out
pop
push
cmpsb
cli
push
into
mov
jp
mov
xchg
xchg
inc
mov
cmp
aaa
bound
das
cmp
outsl
lods
daa
mov
mov
popa
mov
repnz
pop
sbb
jae
movsb
dec
cmp
jnp
lock
jns
mov
pop
das
ret
xchg
adc
or
mov
sub
or
jmp
hlt
gs
out
lock
fdivrs
inc
lock
fsubrp
imul
stos
out
push
insb
mov
movsb
testl
lret
enter
rcl
dec
inc
icebp
dec
in
push
movsb
data16
fmull
lret
jno
sbb
mov
movsb
mov
sub
mov
bound
imul
mov
pop
mov
cli
jne
dec
repnz
mov
in
xor
pop
imul
lcall
es
stos
mov
loopne
inc
filds
cmc
clts
push
jb
in
in
cmp
push
sbb
xor
or
mov
mov
lds
aas
jmp
fnstcw
in
and
sub
jns
iret
lea
decb
inc
bound
mov
sahf
cmpsb
mov
push
push
mov
dec
shlb
in
sti
mov
insl
adc
test
hlt
cmc
ror
adc
mov
jns
sbb
in
pop
jae
dec
mov
add
roll
inc
jg
xor
testl
and
repnz
mov
int
cmpb
daa
test
lea
sub
push
add
mov
mov
lods
sbb
xor
imul
mov
mov
lods
in
sub
inc
push
jnp
push
pop
mov
cmc
aas
pop
adc
mov
mov
xchg
imul
add
lock
and
mov
mov
negb
pop
dec
filds
imul
mov
popa
jnp
push
xchg
mov
loop
aam
bound
cmpsl
cli
adc
pop
int3
sbb
lea
ret
call
out
jns
sahf
push
test
ja
cmpsb
push
push
test
les
test
cmp
lea
push
xor
xor
testl
and
push
daa
divl
xchg
pop
lcall
repnz
jp
xchg
lahf
sbb
xchg
in
push
rorl
stc
ja
mov
mov
adc
lea
scas
or
rcrb
add
fwait
test
cmp
push
adc
fwait
sub
and
jg
or
out
mov
jno
and
xchg
cmp
jb
sbb
mov
adc
cmp
mov
sub
fimuls
repnz
lds
or
mov
loope
sahf
mov
int
outsb
adc
jl
jl
fstpl
in
inc
add
fidivl
fidivrl
scas
jne
fstps
xchg
pop
cmp
and
stc
push
xchg
sbb
mov
xchg
jb
popa
insl
pop
divl
cmp
pop
lds
mov
sub
pop
pop
outsl
sbb
and
pop
in
cmp
mov
xor
mov
jae
adc
push
adc
pop
and
pop
test
nop
xor
test
pop
jo
jecxz
sbb
scas
sub
test
bound
mov
jge
jl
insl
jl
out
mov
inc
pop
mov
movsb
pop
aaa
jb
cmpsb
sti
pop
scas
popf
ror
mov
pop
adcl
je
repnz
jg
mov
addb
inc
cld
jl
push
scas
jns
mov
mov
sub
pop
pop
jnp
arpl
test
roll
jecxz
lret
lock
rcr
lea
add
push
xchg
in
pop
xchg
inc
lahf
shlb
sbb
fadds
xor
rcl
cmp
jns
jae
cs
cmpsb
mov
push
jo
mov
xchg
dec
popa
cmp
sbb
scas
test
sahf
hlt
orl
int
in
or
ret
sub
push
pmulhuw
inc
mov
test
enter
pop
dec
pop
add
dec
dec
stos
xor
xchg
std
and
mov
add
loope
icebp
ds
xchg
push
jbe
addr16
mov
sbb
loope
lcall
xchg
jns
inc
dec
xchg
push
iret
sub
cmpsl
pop
popf
sahf
lods
addr16
loop
addr16
fisubrs
imul
ret
adc
mov
in
mov
sbb
push
mov
popa
aaa
and
jns
and
dec
mov
mov
iret
rorl
in
cltd
and
add
push
jnp
inc
xchg
dec
sahf
mov
mov
sub
push
dec
cmpb
mov
es
inc
movb
dec
popa
loope
fsub
loopne
cld
jg
cmp
pushf
das
sbb
cmpsl
adc
rcll
cld
sbbl
mov
mov
jl
cmp
jmp
in
imul
out
xor
and
sbb
push
sub
ja
aaa
ss
outsb
add
sbb
incb
or
lds
mov
cli
aas
cli
imul
xchg
lahf
in
ss
add
int
dec
xchg
pop
inc
mov
test
pop
imul
pop
sub
nop
inc
loope
xchg
xchg
cmp
xchg
inc
stc
pop
push
repz
test
subb
adc
gs
in
into
pop
int3
divl
add
movsb
mov
pushf
or
pop
andb
lret
mov
sub
dec
mov
or
fnsave
sar
mov
popa
and
jge
push
mov
add
mov
jo
ret
or
aad
out
push
out
sbb
and
sub
jp
cli
stc
and
ds
ret
inc
mov
or
loop
fimull
mov
or
sarl
mov
aad
scas
smsw
jecxz
out
jg
das
jl
and
shr
mov
lods
repnz
mov
aas
mov
or
inc
sbb
xchg
mulb
dec
cltd
xchg
gs
loopne
adc
or
mov
es
mov
push
inc
push
hlt
mov
outsb
pop
push
decl
insb
mov
mov
xlat
fwait
dec
sbb
push
sahf
hlt
bound
xorl
popa
jb
xchg
movl
sbb
shlb
out
ljmp
and
pop
inc
in
cmp
ljmp
addr16
movb
adc
pop
jne
push
mov
sub
pop
out
aaa
daa
lret
mov
iret
inc
out
jbe
lcall
cmp
repz
rcr
pop
stos
test
jnp
fisubrs
arpl
pusha
js
adc
or
inc
addr16
sub
push
movsl
inc
sbb
das
lea
jae
fnstsw
out
push
xorb
lret
lea
jge
jmp
mov
in
xchg
jp
inc
orb
pop
mov
mov
dec
stos
cmp
and
ljmp
or
in
inc
loop
jns
add
jmp
xor
daa
ror
cmp
je
aam
data16
in
rcll
insl
addr16
and
mov
xor
pop
enter
lds
push
mov
mov
ds
lods
iret
pop
inc
mov
pop
pop
mov
push
sub
mov
adc
adc
ret
sub
xchg
push
cmp
dec
push
cs
mov
mov
jmp
pusha
iret
jl
cmpsb
inc
push
mov
mov
sbb
xchg
cwtl
and
pop
jno
mov
nop
subb
out
push
dec
mov
xchg
and
mov
xor
subb
jbe
cs
test
inc
or
mov
das
dec
sbb
in
xchg
and
repnz
stos
es
push
mov
idivb
cwtl
or
ret
sti
fnsave
add
add
lahf
inc
aam
stos
outsb
stc
and
mov
xchg
push
jnp
fdivp
xchg
aam
addr16
or
sbbb
and
dec
aam
inc
dec
sub
notb
push
sub
jl
mov
xchg
pop
push
stos
adc
mov
sahf
inc
sbb
dec
test
pop
jg
call
sub
cmp
xchg
mov
sub
nop
xor
inc
out
aaa
adc
sahf
aad
inc
xor
xorl
into
cmp
cmp
add
es
pop
stc
pop
sbb
add
cmp
mov
xor
push
push
lock
push
scas
push
jae
clc
out
add
mov
orl
pop
shrl
xor
es
mov
mov
adc
pop
add
jnp
shrb
mov
aas
clc
xchg
adc
mov
divl
popa
out
cmpsl
mov
pop
dec
add
negw
jg
fs
or
out
dec
sub
test
mov
es
and
insl
xlat
aas
push
stos
sbb
ffree
and
or
not
mull
cmp
or
xchg
sub
dec
nop
sbbl
js
out
mov
pop
xchg
stos
in
adc
jns
ljmp
ffreep
sti
or
in
inc
inc
lods
mov
push
xor
jns
das
mov
dec
loopne
repz
pop
aam
out
mov
shrb
decb
les
data16
pop
lahf
in
cmpsb
movsb
pop
dec
xor
aaa
setge
sbb
ja
and
push
inc
aad
mov
xor
into
sub
pop
push
jmp
dec
add
rolb
or
xor
xchg
or
divb
xlat
dec
jno
pop
mov
sbb
pop
mov
push
inc
aad
jo
aaa
lret
adc
jg
and
fdivl
mov
leave
fucomp
test
inc
mov
test
inc
push
scas
jae
test
sub
add
push
js
mov
pop
lret
lret
movsl
std
ds
divl
dec
push
fidivl
add
pop
pop
movb
jno
or
out
out
js
adc
sbb
insb
adc
mov
mov
cmc
pop
incb
fidivl
lods
sbb
inc
out
add
jnp
adc
xor
sub
out
jns
mov
dec
jbe
xor
sahf
or
mov
pop
sub
je
dec
inc
scas
ss
lea
sbb
std
push
vmulss
xchg
pop
push
andb
insl
dec
adc
fdiv
mov
inc
pop
loop
fucomip
xchg
in
gs
xchg
je
cmp
loop
dec
cmp
cmp
fcoml
pop
mov
push
pop
ret
cmc
addr16
fwait
cmp
testb
sub
dec
pop
test
sbb
mov
lcall
xchg
xchg
and
iret
aad
mov
popa
cmp
sbb
and
mov
enter
sbb
jnp
clc
add
cmp
xchg
js
mov
dec
mov
sahf
fisubrs
lods
mov
adc
ret
fdivrs
daa
push
cmpsl
ja
iret
jae
jb
sub
in
or
int
pusha
jp
ja
rorb
mov
pop
fs
adc
push
das
pop
cmpsl
xorl
jno
xor
push
push
dec
mov
dec
shrl
lret
lds
and
shlb
add
mov
cmpsb
rcll
ljmp
ret
push
or
push
sbb
loop
adc
sub
test
dec
mov
js
test
pop
jbe
testb
mov
or
xor
cmp
lea
fwait
rorb
jp
insb
mov
andl
int
push
mov
pop
insb
mov
adc
cltd
cltd
push
lods
jp
clc
jns
aaa
push
in
push
lahf
roll
mov
mov
cmp
mov
xchg
std
insb
imul
pop
btr
mov
scas
pmaxsw
adc
ljmp
cli
xchg
daa
ljmp
xor
dec
dec
fldenv
xchg
stos
fcmove
pop
push
in
test
mov
scas
xor
push
inc
insb
dec
xor
xchg
lcall
pop
mov
adc
dec
clc
cld
call
pop
lock
pusha
cmp
insl
pop
cmp
rcll
xor
fdivr
sub
fdivrp
cli
dec
rcll
lret
in
jl
jg
jl
bound
xchg
aam
movsl
xchg
cmpl
push
cmp
stos
push
pusha
pop
pop
scas
arpl
jne
push
lods
test
mov
fsub
inc
mov
pop
sbb
insl
mov
cld
test
xchg
ret
rcrb
dec
repnz
nop
mov
imul
lock
push
and
mov
orb
xchg
pop
data16
dec
sub
mov
cld
inc
add
mov
mov
ret
mov
scas
lea
cmp
leave
push
stc
jmp
repnz
mov
push
aam
add
pusha
mov
xchg
sub
out
mov
cmp
sbb
mov
sub
cli
and
movsl
cmp
enter
insb
ret
pusha
xchg
lods
fsubrl
mov
dec
ljmp
shrd
imul
push
xlat
push
iret
jb
lods
inc
push
dec
cwtl
mov
fisttps
jbe
sub
adc
cmp
fisubrl
stos
lret
jp
push
ret
mov
and
repz
in
push
xor
outsb
leave
imull
xchg
sahf
cmp
xchg
lret
jmp
cmp
shll
ja
sub
mov
clc
xchg
in
xchg
repz
add
mov
hlt
push
cmp
test
sbb
and
iret
sbb
and
fisubs
test
inc
cmp
cmp
lcall
mov
dec
bound
daa
add
mov
jl
fstl
dec
repz
or
iret
jo
movsb
aad
data16
cli
ja
xchg
movsl
scas
adc
or
mov
outsb
sbb
mov
xchg
test
adcb
std
xlat
mov
sbb
inc
add
pop
inc
fstps
cmp
push
ljmp
jbe
filds
push
je
iret
xchg
jbe
in
in
stc
add
test
sbb
sub
int
xor
into
bound
arpl
pop
aad
sbb
out
scas
je
cwtl
mov
push
lret
cmp
jge
fucomip
cmp
fwait
in
pop
cs
adc
sahf
inc
repz
push
sub
mov
loop
push
repnz
fimuls
rcl
and
add
sbb
push
dec
fldenv
rcrl
mov
cltd
js
add
outsl
ret
sahf
outsb
inc
dec
mov
rorb
xchg
int
and
and
out
push
bound
neg
shll
jae
cvtps2pd
xchg
test
iret
jno
mov
test
popf
push
test
cmpsb
jae
ret
cwtl
push
inc
bt
movsb
pusha
int3
add
add
xchg
or
incl
and
scas
push
inc
shrb
cmp
out
mov
insb
jns
imul
jo
mov
inc
iret
movsl
dec
mov
fs
ret
cmp
rcr
dec
cli
pop
fmulp
int3
or
ja
test
push
mov
pusha
inc
mov
out
std
das
xchg
decb
mov
lods
scas
dec
jbe
ljmp
sub
dec
xchg
out
xchg
fidivrl
cmp
addr16
push
rorl
cwtl
cmp
jns
xchg
inc
or
int
xchg
and
mov
sbb
jb
out
hlt
inc
pop
adc
add
mov
and
sti
test
lea
repz
inc
pop
mov
hlt
cmc
jmp
shlb
push
dec
decb
roll
in
jecxz
or
je
xchg
xchg
add
mov
icebp
enter
mov
xor
rolb
jecxz
aam
mov
test
cli
mov
popf
mov
or
inc
and
adc
ds
mov
iret
mov
xor
lods
adc
sbb
cmpl
js
lds
in
dec
mov
push
rcll
and
pop
cltd
sbb
pop
cmp
out
and
jae
push
adc
ljmp
std
mov
mov
mov
shlb
xchg
in
icebp
cld
lret
test
add
std
test
out
cmp
mov
into
bound
inc
mov
push
adc
sbb
inc
jg
mov
cmp
push
mov
int3
and
cmpsb
sub
leave
jo
fnstcw
jge
sbb
sbb
sarl
and
mov
mov
add
push
leave
or
or
push
sub
mov
shrl
jbe
jo
xchg
fsubrl
loop
mov
cmpsb
push
cld
stos
gs
data16
sub
add
nop
imul
xchg
mov
dec
pop
and
out
pop
sbb
lret
out
inc
adc
cmp
cmc
and
mov
shrl
jbe
jne
icebp
cmc
xor
add
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
cmp
adc
addb
sbb
adc
ret
fisubl
lock
cmpsb
push
pop
daa
push
loop
pop
inc
addb
lret
into
mov
dec
vunpckhps
orb
out
mov
sub
inc
lods
out
mov
push
bound
cmp
cmp
lods
fwait
out
incb
negb
jmp
les
ret
iret
popf
lods
scas
imul
fisttps
mov
xor
iret
pop
into
sub
adc
lahf
xor
jnp
add
cmp
mov
int
sbb
sub
adcl
mov
fnstcw
cli
push
aad
cmp
and
xor
xor
jbe
imul
sub
lahf
jno
int
in
test
mov
test
sub
mov
rep
sub
testl
fbld
mov
int
push
out
push
jge
jne
mov
xor
mov
call
addl
cmp
sarl
out
insb
lret
dec
push
test
cwtl
jb
pop
mov
movsb
ret
in
pop
nop
and
and
push
test
fisubs
cli
aas
xchg
std
push
xchg
jl
and
out
jge
xchg
dec
rclb
adc
mov
jne
jmp
fsubr
sbb
aas
mov
xchg
lods
rcrb
xchg
decl
scas
fists
ficoml
fnstcw
imul
or
mov
pop
nop
dec
sti
cmp
sub
inc
paddusb
mov
lods
sar
cltd
dec
pop
jge
outsb
das
in
or
cld
not
imull
jns
popa
push
add
inc
add
mov
cmpsl
mov
xchg
in
mov
imul
or
ret
fcomps
scas
out
push
and
mov
mov
imul
pop
sti
ds
push
fisttpll
add
sbb
mov
fstpt
lods
xchg
out
sbbl
mov
and
rol
xor
or
mov
cmpsb
cli
inc
fldt
leave
push
movsl
fidivl
mov
in
add
xchg
shl
lret
xchg
ss
pusha
inc
adc
xchg
ret
bound
loop
cmp
into
rcrb
test
and
mov
cwtl
push
push
lods
add
dec
lcall
pop
dec
das
dec
das
xchg
xor
sub
cmc
fiaddl
pusha
cmp
mov
repnz
cmp
shll
in
movsb
fistl
arpl
pop
enter
sbbl
jecxz
dec
add
pop
lahf
mov
sbb
addr16
arpl
adc
andl
inc
dec
mov
divb
and
subb
dec
addr16
fcmovnbe
and
mov
inc
insb
nop
mov
lea
sub
mov
shl
aam
scas
mov
and
add
jb
loope
dec
sub
clc
and
xlat
inc
push
adc
pop
sub
lea
xor
movsl
cltd
push
mov
movb
cmp
clc
dec
push
cltd
shlb
push
dec
lods
clc
pusha
lock
jnp
leave
js
ffreep
mov
loope
call
shrb
xchg
cld
scas
cmp
push
inc
int
mov
pop
sub
idivl
das
inc
or
adc
fstl
jecxz
int
xlat
xor
push
sbbl
fidivl
repz
fdivrs
test
xchg
test
call
dec
sub
and
mov
push
stos
adc
decl
leave
pop
into
fisttpl
add
jmp
sub
cmc
adc
lret
dec
mov
sub
mov
push
pop
sub
in
pop
out
jb
aaa
mov
fstpl
lret
cwtl
in
pop
add
or
xor
pop
jle
int3
add
cmpsb
sub
or
xor
out
ljmp
es
fwait
xor
clc
push
lods
lds
dec
jp
and
inc
test
or
mov
fstpl
je
addr16
sub
dec
push
scas
or
or
cs
inc
lods
pop
clc
jb
nop
mov
popa
sbbl
sub
xchg
rcl
insl
daa
addr16
xor
add
cltd
jg
les
les
fldcw
dec
cmp
xchg
loopne
repz
test
repz
mov
mov
xor
orb
push
inc
mov
aam
pusha
sti
jne
lods
cmp
push
fisttpl
lods
or
sub
mov
mov
sub
mov
sarl
jge
cmp
cmpsb
in
scas
xor
shll
cmp
dec
pop
mov
nop
pop
popf
out
std
sti
jge
les
fists
insb
lods
out
jnp
lods
mov
insb
inc
mov
push
mov
stos
dec
dec
insl
out
sbb
in
fninit
xchg
ja
push
push
fmuls
mov
test
int
mov
pop
mov
jle
mov
jb
imul
addl
test
and
xchg
roll
adcl
test
decl
loope
sar
scas
into
pushf
inc
inc
xlat
cld
repnz
je
xchg
sbbl
add
mov
push
cmp
jnp
test
in
fcompl
pop
in
xor
icebp
inc
shlb
into
sub
rcr
popf
xchg
mov
out
loop
in
mov
popf
sub
xor
stc
mov
movsl
in
xchg
add
lea
cmp
adc
or
and
iret
mov
shl
xorl
mov
dec
xorl
add
filds
fadds
xchg
les
push
out
pusha
xor
pop
loop
lret
lea
lock
xchg
dec
xchg
mov
aam
fistpll
mov
pop
insb
fwait
xchg
int3
orl
imul
or
jbe
fdivs
adc
jecxz
hlt
inc
int
inc
imul
es
daa
outsb
xchg
and
push
dec
sbb
sbb
push
test
stos
add
scas
mov
fcomip
cmp
outsl
lcall
mov
lods
mov
sub
je
cli
aaa
sbb
mov
inc
repnz
cltd
xchg
out
push
ja
or
mov
hlt
xlat
pop
in
sbb
dec
fstpl
and
stos
push
pop
dec
call
cmp
jp
xchg
int3
push
inc
push
add
aam
repz
xor
movsb
stc
ficoms
cmp
mov
dec
lcall
adc
aad
mov
inc
js
push
outsl
and
loopne
shrb
aam
ror
dec
fadd
mov
rclb
pushf
mov
sub
xchg
push
inc
fisubrl
and
push
jno
adc
cli
and
iret
cmp
and
mov
fdivrs
pop
push
scas
cwtl
mov
add
cwtl
je
push
ljmp
int3
cmp
mov
mov
enter
mov
jp
pop
cmpsl
popa
adc
pop
cmp
xor
dec
mov
xchg
nop
mov
test
push
loop
fisubs
addr16
in
pushf
sti
js
add
pusha
mov
popa
mov
sub
dec
xchg
fucomip
inc
adc
loopne
aam
jle
stc
push
imull
loop
rorb
pop
clc
push
mov
rorl
out
arpl
ljmp
add
xlat
mov
adc
gs
and
mov
fisttps
jg
gs
lahf
xor
rcll
iret
push
clc
scas
ficoml
fisubl
enter
mov
dec
in
inc
clc
addb
lahf
dec
std
mov
outsb
cmp
xchg
lds
mov
jg
dec
int3
mov
mov
dec
das
divl
jne
in
frstor
cmpsl
push
stc
psllw
xchg
dec
lods
push
mov
loope
lds
push
outsl
movsb
add
cmpsb
hlt
loope
fildll
sub
mov
loopne
cmp
mov
gs
cmp
xor
es
mov
xor
mov
in
int3
mov
je
pusha
loope
jnp
sbb
push
out
sarb
repnz
aaa
test
mov
cmpsl
lock
ds
pop
inc
mov
cmp
lods
lock
fiaddl
xchg
ret
dec
mov
lds
sti
dec
lret
lahf
pop
shll
jno
xchg
out
out
pop
test
std
xchg
outsl
roll
fcmovbe
stc
xchg
enter
ret
sub
or
mov
lods
lret
and
icebp
mov
push
iret
out
pop
inc
mov
push
and
in
jns
repnz
adc
adc
jbe
insl
rcrl
fidivrl
sti
xchg
in
scas
aaa
in
inc
lahf
pusha
xchg
cmp
dec
mov
lret
xchg
adc
or
sub
pop
xchg
shl
mov
daa
xor
xchg
call
aam
mov
jbe
inc
and
sub
mov
enter
jmp
add
and
add
add
mov
mov
sti
add
push
dec
sarb
cmp
addr16
mov
fnsetpm(287
sub
jb
cmp
push
xchg
and
repnz
out
adc
pop
lods
or
mov
test
push
fcmovbe
jge
and
mov
inc
add
jmp
push
sub
mov
in
je
hlt
fists
xchg
cli
cmp
mov
inc
fwait
gs
inc
aad
xchg
mov
les
fsubrl
adc
pusha
pushf
inc
mov
cmp
cmp
inc
and
sub
xchg
xorb
jbe
idiv
testl
dec
iret
and
shl
mov
lret
pop
dec
pop
ret
xor
hlt
and
jp
movsb
and
test
dec
leave
sahf
sbb
fld
std
jmp
cmpb
aaa
xchg
push
jno
pusha
jnp
adc
addr16
ret
jae
fscale
push
imul
subb
jae
xchg
jns
jmp
dec
aad
shr
scas
movsb
test
inc
dec
ja
mul
mov
pop
pop
icebp
fchs
ret
aad
fwait
dec
jns
psubusw
ss
imul
lcall
imul
xor
jmp
in
mov
iret
incb
subl
jns
ror
jnp
push
fcomps
mov
je
sahf
imul
int
call
jl
sbb
lods
or
sarl
mov
lret
push
stc
xchg
jb
cmpsl
je
and
xchg
popa
mov
dec
in
ds
enter
addr16
cmpsl
pop
ror
cmovle
and
xchg
icebp
push
xor
xchg
shll
mov
and
and
adc
movsb
xchg
gs
pop
and
and
jge
nop
ja
cmp
pop
push
ss
inc
ss
and
rcrb
mov
insb
or
in
or
shlb
enter
mov
inc
aas
jmp
cmpsb
test
insl
mov
ret
sbb
push
adc
notb
outsl
pusha
push
xchg
shr
ret
loopne
or
iret
ds
pushf
sbb
call
adc
pop
fldcw
sbb
insl
mov
push
aam
xchg
cmpb
xchg
insl
mov
outsb
popa
lret
mov
pop
daa
push
sub
icebp
mov
jns
cli
sahf
fcmovnbe
mov
mov
pop
ja
and
les
cmp
adc
jnp
out
push
sub
fisubrl
cmp
or
xor
gs
neg
cli
sub
xchg
out
add
sub
push
lods
ja
sbb
mov
fistpl
jle
pop
test
cmp
ss
mov
or
push
jnp
sub
cmp
add
xchg
jno
and
adc
jo
cmp
inc
adcb
fidivl
sbb
cmpsb
xor
sbb
push
mov
dec
jns
push
or
push
movsl
pop
inc
xchg
jb
shlb
cmp
xor
mov
inc
clc
sbb
cmpsl
es
sahf
jno
sub
incb
adc
fcoml
movsl
and
mov
pop
popf
xor
cmpsb
test
dec
mov
aad
xchg
add
js
rolb
negl
imul
or
sub
cmpsl
mov
pusha
mov
scas
lcall
push
sbb
xor
pop
cmpxchg
aaa
push
icebp
dec
out
sti
frstor
mov
das
sarl
sub
divb
call
fldenv
push
mov
mov
pop
aam
mov
push
sahf
xchg
push
cltd
xor
cli
orl
xchg
lcall
sbb
mov
add
cli
add
mov
jo
stos
or
sbb
dec
lret
and
jne
sub
cltd
fmuls
push
jo
cmpsb
add
addl
inc
push
inc
push
push
dec
jmp
repz
popf
lahf
pop
xor
pop
adc
repnz
lret
lcall
les
lods
in
sbb
jo,pt
fnstsw
ljmp
pcmpgtb
pusha
iret
es
mov
test
out
inc
dec
push
add
jb
jmp
mov
pop
pop
div
adcl
ds
push
fdivs
mov
push
mov
mov
push
mov
inc
pop
dec
add
into
adc
pushf
lret
mov
sbb
fisubrl
mov
dec
add
stos
mov
mov
xlat
jbe
pop
enter
fcoml
pop
inc
xor
dec
aam
inc
sub
cmpl
jecxz
inc
xchg
add
pop
or
sbb
incb
or
pop
loope
sub
push
xchg
movsl
loope
sbb
cs
lds
pop
ljmp
cs
mov
mov
push
inc
in
mov
jns
rol
popa
mov
scas
mov
mov
repz
nop
stos
dec
repz
std
fcomps
push
sub
ret
mov
inc
jecxz
xor
es
test
or
into
pop
mov
xlat
into
push
jno
add
hlt
dec
aas
fcompl
inc
cmp
pop
stc
idivb
fsts
cmp
xchg
add
xchg
sbb
lret
sbbl
mov
je
cwtl
add
jae
aad
clc
scas
cmp
lods
stos
cmp
xor
push
mov
scas
pop
shll
jecxz
push
push
sar
and
mov
xor
in
push
mov
xchg
cli
inc
pushl
mov
adc
push
in
shl
push
cltd
add
xorb
std
aaa
cmpsl
add
dec
jo
xor
xlat
adc
sbb
and
es
push
jae
das
mov
push
lret
sub
out
xchg
and
dec
ret
jge
mov
ret
mov
aad
leave
mov
lods
xor
test
or
sub
fwait
xor
sub
pop
mov
mov
sbb
xor
test
iret
inc
popa
mov
ljmp
adc
adc
xlat
cmc
push
xor
or
sbb
pop
mov
pop
dec
hlt
adc
pop
rorl
stos
mov
mov
mov
jp
jmp
jns
xchg
push
pop
in
aad
sahf
sbb
adc
fsub
out
js
xchg
xor
daa
dec
pop
and
imul
roll
push
mov
cwtl
cld
add
cld
fldl
jae
and
js
arpl
lds
mov
and
outsl
jle
scas
fwait
dec
or
mov
ret
rcrl
xchg
adc
cwtl
cld
push
and
pop
idivl
fildll
icebp
mov
mov
ret
cmp
mov
pop
add
pop
cli
sarb
ljmp
jno
adc
sbb
pushf
rcrb
ljmp
inc
pop
aas
cmp
mov
call
cmpb
add
rorl
mov
add
inc
aas
aaa
push
jp
cmove
sbb
push
jbe
sub
mov
imul
dec
push
dec
jo
inc
mov
sub
aam
pop
jb
add
push
dec
aam
stos
icebp
ja
ljmp
sti
pop
lock
bound
rorb
dec
xchg
push
and
fstps
or
loope
dec
in
sarb
lret
js
lcall
xchg
xchg
mov
orb
push
sub
js
enter
dec
test
fsubrl
clc
rorl
into
mov
gs
sahf
cmc
shrl
mov
xchg
out
fadd
leave
cltd
xchg
divb
add
outsl
pop
jne
sbb
cmp
lock
mov
pushf
mov
daa
sbb
in
mov
pop
repz
mov
jg
add
and
dec
jne
xor
add
or
out
insl
pop
les
add
dec
or
imul
cli
inc
loope
pop
xor
push
xor
xor
mov
pop
push
jle
cmpsb
and
iret
jne
or
stc
dec
fidivrl
mov
add
add
jmp
lcall
push
test
ds
inc
loop
and
mov
test
add
scas
push
push
sbb
xor
pop
xchg
cmpsb
pop
stos
cmp
pop
and
test
pop
dec
icebp
xchg
outsb
dec
push
fnsave
inc
adc
aam
or
mov
stos
orb
pop
adc
fdivs
testl
sbb
test
repz
test
les
lahf
fwait
inc
loopne
add
nop
fwait
movsl
pop
ds
scas
jmp
out
loope
aam
jle
sub
fnstenv
or
jns
cmpsb
ds
sti
out
rolb
jae
inc
xor
gs
sbb
xchg
loopne
adc
cmp
adc
fdivrl
xor
mov
add
xlat
push
adcb
cld
nop
adc
sbb
add
or
cs
repz
xchg
push
sub
xchg
cmp
mov
and
dec
or
sbb
shll
xorl
pop
loop
scas
fiaddl
push
mov
mov
jl
push
xor
ficoms
sub
sbb
sub
mov
xor
or
je
cmp
mov
insb
dec
xor
fs
addr16
xchg
negb
sub
cwtl
inc
xor
mov
adcb
add
inc
cs
jl
rorb
scas
mov
popa
out
scas
lahf
and
icebp
in
pop
push
add
jae
jnp
out
sar
sub
call
cmp
je
int3
mov
ret
test
scas
inc
mov
push
inc
sub
sub
mov
jle
stos
stc
stos
add
faddp
and
sbb
int
loope
mov
in
jns
and
and
sbb
mov
ja
mov
xlat
inc
adc
adc
jnp
push
inc
and
insl
mov
clc
add
filds
testb
enter
push
roll
jnp
lahf
clc
ret
push
movsl
or
push
sbb
insb
and
fisttps
or
icebp
pusha
mov
leave
xor
mov
jg
adc
sub
dec
lock
cmpl
mov
repnz
je
div
pusha
mov
adc
add
push
xchg
enter
xor
fists
andl
and
inc
mov
in
fsubrs
cwtl
inc
ljmp
les
mov
lret
hlt
or
pop
fimull
stos
aas
mov
out
pop
std
cltd
pop
cmp
pop
push
fwait
roll
and
insb
jg
cmpsl
jecxz
adc
scas
out
inc
lea
les
leave
sub
repnz
cmpsl
and
mov
mov
lret
loop
xlat
aaa
ss
xchg
add
stos
inc
jno
addl
pop
cmp
hlt
mov
fsub
cli
daa
inc
sbb
icebp
fldcw
or
mov
jno
inc
fs
loop
sahf
cs
mov
xchg
inc
filds
clc
cmpsl
mov
out
jne
pop
subl
push
in
cmp
filds
pop
ret
inc
out
xchg
mov
pop
push
fisttps
popf
mov
data16
xchg
pop
xchg
fstpt
dec
adc
or
insb
push
jae
lret
cmp
xor
movsl
xor
fcomi
in
jmp
pop
and
imul
xchg
fnstsw
movsb
je
push
mov
rorb
and
stos
scas
cmp
movsl
jno
push
fiaddl
ds
insb
cs
mov
scas
into
mov
xchg
sar
roll
je
cli
dec
adc
lock
insb
cmp
int
jae
mov
sbb
jge
inc
out
daa
in
pop
sub
addr16
rcrl
add
push
push
mov
jns
test
mov
pop
and
push
lcall
xchg
pop
xor
pop
das
adc
ljmp
andb
cmp
fbld
or
and
dec
fimull
in
pusha
fsub
mov
iret
inc
imul
mov
ja
fisubl
jmp
adc
daa
sub
mov
dec
mov
pusha
popl
sub
outsb
and
inc
in
sbb
inc
inc
outsb
es
sbb
lret
divl
or
xor
push
daa
lock
add
leave
loop
and
or
xor
cmovae
lret
aam
enter
gs
lcall
ss
lret
mov
push
pop
push
inc
jns
dec
xchg
into
jnp
dec
sbb
int
add
out
and
push
adc
rcrb
int
dec
rcr
xchg
fwait
mov
mov
mov
aaa
jp
dec
pop
cmp
sbb
movsl
jnp
push
pop
call
dec
repnz
xchg
orb
xchg
push
insb
adc
repz
mov
loopne
insl
xchg
push
adc
in
scas
mov
adcb
das
ss
sub
outsl
sbb
xchg
xor
jecxz
dec
jg
ss
inc
lods
xchg
lcall
add
jg
mov
push
cmp
sti
test
sbb
push
lahf
mov
bound
sub
cmc
sbb
cmp
neg
lods
xchg
movsl
scas
int3
mov
outsl
push
add
shl
xchg
ja
sbb
mov
lods
lds
push
fnstsw
ficompl
cmc
stos
mov
xchg
mulps
jae
lods
rol
popf
jbe
and
addr16
pop
jns
repnz
add
xchg
incl
mov
jo
rcll
imul
inc
mov
test
movsb
loope
dec
pop
ss
or
push
ret
rolb
ss
movsl
xor
xchg
and
sub
xor
js
xlat
add
push
repz
inc
mov
lahf
push
adc
imul
cmp
sti
xchg
mov
jg
and
jno
sub
cmp
das
adc
fistpll
je
mov
popa
jecxz
cmp
push
popa
notb
loopne
outsl
mov
pusha
hlt
sbb
dec
mov
addb
push
adc
int
push
mov
movsb
cmpsb
lock
add
fwait
xchg
mov
inc
push
negb
loop
enter
jmp
imul
sub
outsl
xor
xor
mov
push
fisubs
mov
xor
or
sub
sbb
mov
into
mov
mov
mov
inc
sub
sub
jne
cmp
mov
mov
mov
and
sub
call
call
in
cmp
and
push
repz
and
jo
lock
out
hlt
fisttps
mov
pop
mov
mov
jl
pop
stos
arpl
scas
jmp
cmc
dec
cwtl
movl
stos
mull
and
call
int
push
push
add
pop
ds
aaa
pop
into
sub
dec
hlt
cld
leave
inc
dec
or
in
lods
in
jg
in
hlt
in
and
cmpsl
ljmp
push
and
fldl
rorl
jge
rclb
jne
aad
xchg
sub
cmpl
jbe
aaa
es
mov
add
inc
nop
xchg
push
xchg
data16
hlt
pop
push
lock
cmc
loop
push
push
ret
mov
dec
cli
jb
arpl
repnz
pcmpeqd
cld
jg
pop
cmp
sbb
rcr
cmp
mov
in
je
int3
adc
subb
mov
testl
xor
sub
mov
pop
aaa
and
icebp
jl
icebp
dec
test
lret
add
insb
adc
scas
inc
dec
mov
and
fcmovu
ror
fidivrl
pop
cmp
jne
inc
lret
mov
dec
lods
fcmovnbe
hlt
cs
lds
jno
pop
lcall
outsb
cli
xor
out
jbe
push
stc
xor
stos
mul
inc
imul
jno
jo
pop
insb
jecxz
sahf
ret
sbb
aad
jecxz
fnstsw
and
cmp
sub
aad
inc
jnp
shlb
sub
jb
into
add
out
aas
mov
stos
imul
push
inc
mov
fistpl
lock
jae
pop
out
xor
daa
jns
xor
rcrb
pop
out
dec
push
sub
dec
cld
or
pop
cmpsl
lock
fnstenv
movsb
add
sub
mov
xor
jmp
mov
cmp
and
shll
mov
leave
js
mov
cwtl
xchg
xor
jp
jp
sbbl
in
outsb
xchg
leave
inc
ds
sbb
adc
xor
fistps
inc
xor
jp
or
jmp
jmp
jl
pop
cmpb
xchg
cmp
xchg
jmp
inc
lods
push
and
sub
ret
inc
sbbl
lods
mov
nop
sti
dec
inc
and
fildll
bound
mov
xor
pop
push
ret
bound
mov
jle
mov
adc
lret
in
fcoms
aas
popa
xor
pop
inc
lea
pop
cmpsb
cli
lret
add
movb
leave
movsb
cmp
sbb
cmp
sbb
clc
cli
cmp
inc
fwait
sti
fidivs
gs
push
push
or
mov
std
sbb
mov
in
xor
rolb
or
call
sbb
xor
out
filds
ss
xchg
pop
mov
mov
pop
movsb
addl
push
scas
pop
in
inc
sub
adc
or
call
pop
out
out
inc
rclb
dec
addr16
jle
ficomps
jp
fs
and
enter
jg
xlat
shll
out
push
test
aas
in
ret
nop
lcall
scas
jl
mov
stc
ja
hlt
int
xor
decl
repnz
js
dec
push
sbb
loop
adcb
mov
pop
shll
and
les
sbb
cmp
rcrb
fcmovu
outsl
clc
push
xor
addr16
ds
rcr
imul
fiaddl
and
cmp
loopne
iret
adc
and
cmp
inc
mov
es
shr
push
repz
mov
and
mov
adc
pop
mov
call
and
lret
lahf
inc
cld
mov
mov
pop
outsb
dec
out
loope
jge
xor
orl
mov
inc
hlt
cwtl
mov
sub
in
mov
mov
sbb
pop
insb
out
xor
loopne
or
jae
jbe
xchg
xchg
adc
mov
fsts
stos
daa
lock
xor
dec
add
aam
shr
aaa
push
mov
ret
mov
cmpsb
imul
inc
test
cmp
adc
incb
dec
inc
ljmp
sarl
mov
mov
mov
nop
outsb
sbb
dec
outsb
cld
ficomps
aam
std
mov
and
inc
mov
and
mov
mov
dec
xchg
or
mov
xor
fs
jmp
int3
mov
xor
inc
xor
pop
sub
push
lahf
cmp
fnsave
jge
jge
xor
cwtl
sub
in
push
sub
nop
leave
add
adc
insl
fwait
jbe
add
stos
or
loopne
cmp
sbb
xor
test
stc
inc
jge
jne
dec
in
fsubrl
adc
inc
mov
sti
fcomps
rcrl
dec
lcall
scas
adc
jp
sbb
push
out
mov
xchg
ljmp
cmpsl
rorb
repz
push
xchg
pop
adcl
addr16
movb
push
scas
bound
or
js
pop
pop
cmp
je
mov
lahf
out
push
sbb
clc
fidivl
jmp
cmp
ja
mov
or
lahf
mov
stos
and
into
adc
mov
in
xchg
icebp
mov
popf
xor
cli
sbbl
push
ljmp
fcoml
rcll
mov
rclb
sub
andb
outsl
mov
mov
repnz
divb
nop
add
xchg
dec
mov
sbb
not
in
popf
inc
stos
sub
add
xor
mov
and
mov
xchg
sar
hlt
and
jecxz
inc
repnz
adc
fwait
adc
mov
imul
jecxz
aaa
push
add
pushf
mov
xor
jns
adcb
cmpsl
mov
pop
push
cmp
mov
dec
addr16
popa
into
mov
repz
sar
and
cmp
hlt
stos
ja
iret
adcl
add
and
add
insb
adc
mov
pop
int
ss
stos
loop
decl
add
cmpl
mov
pushf
jle
xor
fldt
sbb
or
cltd
sub
adc
inc
push
push
jns
mov
pop
dec
loope
pushf
lods
or
sti
lret
sahf
out
movsl
subl
ret
xor
sub
jl
adc
xchg
dec
lahf
gs
pop
xchg
pop
mov
sahf
je
inc
andb
jb
xchg
out
push
jge
adc
mov
shrb
mov
in
or
jmp
lret
daa
mov
inc
lock
xor
movsl
pop
mov
or
mov
dec
iret
popf
nop
adc
je
rep
lahf
repz
xchg
or
sbb
popf
mov
ficoms
inc
daa
xchg
jno
adc
or
negl
mov
ret
dec
repnz
mov
dec
and
mov
ret
rorl
xorb
adc
fdivl
dec
jmp
and
push
cmp
mov
data16
or
and
or
cmp
stos
cmp
jno
jg
sti
dec
mov
mov
clc
push
push
movsb
lods
pushf
adc
inc
in
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
add
add
add
inc
inc
out
cmpsb
popa
ds
pop
xchg
fistps
mov
push
add
add
fdivp
cmpsb
inc
xor
jmp
mov
xchg
mov
jg
mov
movsb
cmpsb
adc
test
ja
insl
sti
pusha
and
push
sub
push
daa
dec
xlat
adc
iret
test
xchg
fnsave
dec
ss
adc
inc
icebp
xor
inc
gs
xchg
push
jmp
mov
mov
in
gs
pop
jg
push
or
mov
mov
icebp
pop
testb
dec
or
fdivl
loope
ds
lods
out
jns
push
sbb
fmull
mov
dec
jne
insb
xor
std
ficoms
imul
je
push
fisttpl
dec
popa
lcall
push
dec
xor
hlt
movsl
loope
fidivs
inc
dec
pop
icebp
int3
lret
cmc
and
xchg
int3
fisttps
adc
sub
mov
dec
jmp
cmp
dec
js
adc
xchg
jge
xor
shll
fs
insb
pop
sbbb
icebp
mov
push
xchg
xchg
pop
fadds
pop
cli
sub
add
sbb
pop
divl
in
scas
pushl
dec
cltd
test
or
sub
mov
xchg
sti
pop
push
out
push
stos
mov
xchg
stc
cmp
cmp
je
mov
in
and
sub
fiaddl
in
ror
sbbl
out
das
sahf
in
cmpsl
int3
pop
scas
xchg
nop
sti
mov
scas
scas
or
pop
sub
insl
rep
hlt
xchg
xor
int
xor
ficompl
roll
push
fcoml
lods
pop
lods
pop
jbe
aaa
mov
idivl
push
lahf
icebp
in
repnz
ljmp
pop
mov
xlat
lahf
jae
addb
pop
push
loopne
leave
cld
movsb
imul
jmp
lock
lea
xchg
out
fisubs
fs
dec
je
inc
mov
jbe
or
dec
or
jns
fldenv
mov
sub
out
in
adc
or
fstpt
nop
sbb
sar
js
add
test
xor
or
fsubs
test
ja
mov
cwtl
xor
push
xchg
fsts
out
cmpsb
mov
jecxz
fildll
fnstenv
dec
decl
mov
and
mov
mov
data16
mov
xchg
icebp
push
mov
xchg
iret
fldcw
add
inc
ds
mov
loop
push
repnz
aam
sub
mov
sbb
xchg
cmp
jbe
cmp
dec
lret
fwait
add
fnstenv
int
sub
leave
add
repz
jae
insb
outsl
mov
out
hlt
ss
mov
scas
arpl
mov
insl
xorb
dec
sub
adcb
push
in
dec
outsb
mov
or
or
call
popa
scas
dec
ljmp
pusha
movsl
sub
xor
inc
clc
ljmp
je
xchg
xor
enter
and
lock
stos
xchg
or
or
adc
adc
pop
mov
lret
sub
daa
lahf
stos
icebp
in
movsb
inc
adc
faddp
test
mov
pop
xor
push
aad
test
leave
mov
pop
jno
lods
filds
out
stc
jmp
add
cltd
clc
loop
mov
ss
mov
jecxz
mov
imul
adc
mov
sub
test
icebp
scas
sti
sub
testl
cmc
sbb
mov
add
sub
insl
fmull
sarb
push
jb
stc
sbb
popa
mov
loop
push
adc
lock
adc
dec
popf
shll
xor
sbb
xchg
addr16
xorl
and
and
and
cs
cmpsb
jmp
das
inc
add
adc
jno
lods
imul
inc
loopne
sub
popl
sti
sahf
dec
or
in
push
jbe
jbe
sahf
lret
fisttpl
mov
inc
xor
push
cli
jbe
outsl
sbb
fcmovbe
push
xor
into
add
add
mov
in
adc
jl
lret
pop
aaa
in
ja
lock
jp
push
dec
sbb
jmp
inc
ficomps
add
pushf
pop
pop
and
mov
jp
dec
xor
mov
jmp
push
sbb
ret
xor
cli
mov
and
shlb
jp
mov
std
inc
xchg
fldenv
andl
or
sbb
fistl
push
mov
js
loopne
cmp
test
jb
ret
xchg
xor
sub
je
aas
mov
stc
jne
mov
cmp
mov
mov
mov
xor
sub
enter
cmp
mov
xor
push
fstpl
dec
and
sbb
aas
mov
inc
testb
inc
sahf
out
jno
mov
pop
in
inc
mov
lahf
imulb
sub
push
pop
loopne
into
jns
cmp
mov
and
add
mov
inc
inc
stos
jo
testb
xor
push
popa
mov
pop
add
dec
adc
mul
lods
inc
push
ljmp
cmp
cli
inc
in
out
and
jg
fdivrp
adc
add
jns
sbb
mov
xchg
pop
xor
int
shl
in
mov
xchg
mov
roll
dec
add
lds
nop
jge
pop
test
aam
cltd
fwait
sub
mov
insl
add
xchg
out
push
sbb
adc
or
pop
loop
pop
xor
lcall
rorl
out
shl
insl
mov
test
push
mov
xor
out
fcomps
nop
jbe
adc
push
sbb
lcall
pop
xchg
sub
sub
pushf
ret
cmp
xchg
push
sbb
mov
inc
shrb
sub
xchg
ret
out
adc
jnp
test
out
and
add
mov
orb
push
fidivl
jne
dec
push
test
js
xchg
jl
fistpl
out
and
and
int3
inc
push
hlt
movsb
jo
cwtl
push
lods
fcmovnb
add
scas
addr16
pusha
pop
dec
pushl
std
mov
ret
inc
xchg
mov
fcomip
mov
xor
pop
pop
dec
mov
dec
es
dec
out
cmpb
repnz
jbe
add
or
mov
cmp
add
or
mov
addr16
jl
fnsave
adc
or
ljmp
xlat
lock
lcall
jb
pop
sub
or
pop
ds
pop
xchg
pop
mov
or
jnp
mov
mov
dec
into
outsb
addl
rcll
pop
js
test
cld
mov
xchg
sbb
sbb
ds
icebp
adc
adc
pop
jbe
and
xor
sbb
arpl
out
cmp
jno
dec
ret
push
pop
xlat
in
adc
push
cmp
aad
pop
mull
stos
ja
in
fwait
cmpsb
ret
jno
jbe
sub
in
and
cmp
pop
add
jmp
out
fldt
test
xor
lahf
sbb
add
test
dec
loope
pusha
push
mov
push
pop
bound
inc
outsl
lods
pop
int
stos
xor
lds
dec
iret
pop
repnz
fcmovne
mov
nop
xor
sub
adc
scas
pop
ss
data16
shl
pop
inc
mov
jmp
sub
sub
xchg
mov
xchg
push
push
repnz
pop
inc
pushl
adc
jne
insb
or
inc
push
pop
in
and
xor
lods
pop
imul
jb
into
sub
mov
pop
shll
jg
pop
cmp
add
xchg
pop
outsl
adc
cmp
xchg
xchg
out
clc
or
orb
notb
fcomip
lahf
popa
jbe
lds
repz
pop
mov
lds
jnp
sub
xchg
test
mov
lock
mov
shlb
clc
mov
es
test
jg
adc
jge
cmpsb
test
inc
and
jo
push
xor
dec
bound
cs
jge
mov
fnsave
mov
test
mov
negl
rorb
cmp
dec
add
movsb
inc
xchg
push
scas
cwtl
inc
push
jle
adc
mov
into
xchg
test
stc
les
mov
xor
lcall
stc
mov
mov
test
pop
pop
jne
shll
insb
fdivr
dec
jae
mov
lret
ret
or
mov
push
sti
pop
push
inc
fbstp
out
rcl
or
xlat
fsub
mov
cmp
imull
mul
sub
movsb
loopne
adc
loop
push
iret
stos
popf
fiaddl
insb
jbe
adc
out
out
gs
test
xchg
mov
setle
out
pop
sbb
cmp
push
or
adc
mov
and
lock
fwait
dec
cmp
jns
imul
stc
scas
sarb
sbb
cld
popa
outsb
das
loope
sub
push
pop
push
loope
xlat
movl
and
add
push
dec
or
jb
fisubrl
data16
cwtl
sub
and
push
cltd
cltd
cmpsb
stc
pop
mov
push
cmp
gs
sbb
cwtl
int
lcall
fucomip
test
jp
push
flds
push
arpl
cltd
mov
aad
xchg
stos
leave
cld
jb
xchg
mov
mov
sbb
fidivrl
adc
call
inc
and
pop
sbb
adc
jns
push
push
pop
ja
sbb
xor
cmp
outsl
jbe
repnz
popa
sub
dec
sarb
test
xchg
cmp
and
dec
mov
lcall
vpcomb
pop
pop
pop
scas
rcll
xchg
xchg
lahf
jecxz
icebp
ret
cmpsb
imul
jo
pop
sub
jns
in
addr16
ja
inc
pop
cmp
dec
mov
jbe
cmp
adc
xor
and
outsb
mov
mov
repnz
test
cmp
push
and
xor
in
fwait
push
cmpsl
jnp
gs
mov
lods
loop
xlat
mov
sbb
adc
std
push
mov
cmp
fadds
sbb
xor
pop
insb
adc
inc
inc
add
and
pop
ja
insb
cmp
movsl
and
pop
jnp
sbb
fsubrs
dec
into
xchg
inc
fcomip
xchg
jo
sub
mov
movsb
mov
mov
adc
jmp
das
js
iret
cmc
fistps
cmc
lods
fcompl
dec
ja
push
xor
jmp
xchg
xlat
mov
pop
mov
xchg
fcoml
out
mov
pop
lea
and
addr16
ret
pop
and
pop
in
xlat
jne
cmp
test
shrl
sarl
lods
out
mov
je
arpl
fisttpl
scas
jnp
pop
popa
xchg
and
scas
fwait
inc
jae
push
movsl
jl
jmp
in
inc
cmp
rorl
inc
pop
lds
pop
adc
into
mov
pop
shll
xchg
add
or
sbb
push
push
and
push
add
ds
add
and
sub
cld
mov
sub
xchg
je
xchg
xchg
loop
hlt
rcrb
lcall
pop
sbb
leave
jns
or
jmp
mov
out
mov
data16
mov
and
jb
cs
mov
fcmovb
icebp
sbb
in
xchg
in
psubusb
adc
jo
mov
lret
imull
adc
jle
pop
mov
fwait
sbb
cmpsl
mov
or
pusha
push
lahf
in
xor
xchg
movsl
mov
lods
js
call
les
lds
xchg
xorl
jne
pop
mov
sbb
pop
sets
mov
imul
cwtl
jle
push
push
mov
pop
xchg
pop
bound
into
scas
jg
repnz
dec
xlat
sub
xchg
fldcw
aad
mov
jle
inc
in
cs
pop
or
mov
stos
test
frstor
stos
xor
and
mov
sub
adc
aaa
inc
fsubp
imul
and
out
mov
cwtl
inc
pop
sub
dec
push
jns
jae
cs
lds
orl
mov
jno
cmp
pop
lods
adc
mov
imul
andl
xchg
and
loop
scas
fsubrl
stc
test
fistl
div
xchg
cltd
jmp
jne
data16
pop
aad
cmp
inc
mov
fcompl
mov
jle
test
mov
xchg
xchg
test
cs
xchg
pushf
dec
imul
outsb
mov
adc
pop
scas
scas
movsb
mov
xchg
push
leave
xchg
enter
addl
dec
or
loope
or
movq
jl
rclb
push
mov
out
mov
or
fwait
push
test
int
mull
push
or
out
mov
add
sub
or
push
pusha
adc
sbb
es
insl
aaa
jmp
mov
out
imul
int
jle
orl
mov
out
ds
sub
repnz
jl
push
jbe
ds
arpl
cwtl
cmp
xchg
in
pop
cld
aam
mov
scas
cli
xchg
fsts
in
jmp
outsl
inc
sbb
pop
cmc
sub
repz
loop
in
gs
fwait
test
pop
outsb
mov
mov
in
sub
inc
ss
xor
adc
inc
and
sub
dec
mov
pop
pushf
gs
sbbb
sahf
outsl
sub
mov
clc
and
jo
push
inc
int3
push
mov
add
add
xor
pop
pop
into
test
pop
push
add
in
ror
inc
adc
add
or
xor
sti
push
dec
rcrb
or
lret
jp
cmp
jecxz
jns
pop
test
bound
sub
into
mov
aam
mulb
stos
add
in
ret
xor
xor
fstpl
push
fs
ss
push
lds
pop
jb
stc
xchg
shll
push
inc
aad
cmp
and
imul
adc
loope
andl
mov
pop
push
xchg
add
push
lds
fldenv
xchg
stc
out
jmp
ljmp
sahf
pop
xchg
test
flds
mov
sbb
lcall
or
xchg
adc
cmp
jg
ret
push
mov
outsb
xor
sub
mov
sbb
sahf
dec
iret
mov
inc
divb
sub
aad
mov
add
mov
and
cmpsb
lea
idivl
inc
sbb
jo
xlat
test
das
repnz
sbb
js
sub
fs
pusha
adc
std
std
cmp
xor
push
rorb
cmp
and
cmpsb
and
mov
sub
cmp
mov
add
icebp
add
dec
inc
add
pop
cmp
mov
pop
fcoml
or
sbb
push
xchg
clc
repnz
jl
xor
jb
fistpl
subl
push
mov
jbe
adcb
xchg
popa
dec
pop
pushf
into
dec
xor
inc
mov
scas
cmp
js
mov
imul
out
mov
xor
jle
and
cmp
mov
mov
mov
pop
fmuls
push
xchg
add
pop
xchg
fcompl
mov
push
stos
scas
xor
xchg
push
inc
push
add
ret
rcrl
addb
std
out
xchg
fists
sahf
jge
shlb
lret
in
clc
xorb
and
outsl
mov
add
inc
mov
mov
cs
rcl
mov
xor
dec
lret
push
out
loop
test
mov
jb
gs
test
js
and
xor
gs
cmpsl
mov
fcmove
cltd
lahf
rcrl
push
arpl
sbb
rolb
cli
mov
stos
push
dec
pop
in
cmp
push
loopne
pop
sub
lcall
xchg
pop
fwait
movsb
push
imul
insb
addb
pushf
daa
sahf
loope
sub
jp
sub
ret
inc
cmp
jno
ss
push
je
mov
and
ljmp
sub
cmpsl
sbb
jecxz
push
sub
add
fisubrl
cli
lock
mov
fildll
mov
adc
xor
cmpsb
and
dec
btc
call
pop
mov
notb
push
loopne
sbb
std
js
fmuls
testb
mov
xor
out
mov
sbb
movsb
loope
imulb
dec
add
lret
jne
xchg
push
fstpt
mov
shlb
push
psubsw
pop
ss
into
pop
xchg
fsts
add
lfs
mov
mov
or
gs
fs
roll
mov
pop
scas
dec
clc
ja
scas
aas
xchg
pop
int
cmp
and
lret
es
xor
and
loop
adc
xor
pop
ret
cmp
call
mov
mov
movsb
mov
test
xchg
mov
push
clc
sub
fimuls
xchg
arpl
xchg
lcall
mov
dec
sbb
aaa
mov
xorb
pusha
mov
int
das
sub
sbb
pop
push
fwait
call
jecxz
mov
sahf
insb
mov
pop
in
sarb
pop
add
jg
cld
ret
cmc
or
and
in
lea
fistl
jecxz
imul
cs
roll
dec
movsb
adc
icebp
call
fcomps
jmp
mov
pop
sbb
stos
add
enter
lahf
sub
xor
icebp
repnz
dec
inc
jg
pushf
cmp
insb
fldln2
sbb
mov
cli
cld
sarb
lahf
cmp
pop
add
inc
shufps
pusha
shlb
frstor
es
mov
andnps
xchg
sbb
jmp
and
sub
add
pop
xchg
jnp
insb
mov
mov
aam
repz
inc
loop
cmp
outsl
cmp
sbb
loop
mov
sub
push
xchg
outsl
mov
hlt
inc
cmp
xchg
data16
movsb
das
test
jne
jbe
ds
sbb
or
popf
fiadds
xchg
clc
mov
shr
int3
and
inc
enter
cmpb
inc
test
repz
xchg
jecxz
push
test
lock
sub
push
xchg
push
and
jl
mov
cmpsl
push
movsb
ret
and
or
sarl
jno
mov
mov
fstpt
mov
inc
dec
loopne
mov
sbb
popw
leave
mov
pop
add
push
and
loope
or
repz
inc
jnp
clc
stc
or
icebp
xchg
lret
push
mov
in
shll
imul
jge
lret
lret
jge
dec
add
dec
out
sub
loop
jle
adcl
or
sbb
lds
out
mov
std
mov
cmp
pop
xchg
mov
roll
es
add
cmp
cmp
scas
nop
mov
fidivs
dec
movsb
jae
hlt
mov
mov
fdivs
sarb
mov
mov
jle
divb
loop
push
movsb
push
jg
pop
fmull
jnp
test
or
and
in
popf
inc
pop
outsb
adc
pop
and
outsb
cs
fisttpll
mov
jg
enter
js
xchg
xor
cmp
xchg
pop
pop
mov
jle
xchg
and
in
or
push
insb
xchg
add
in
cld
mov
pop
aaa
mov
sub
sub
adc
sbb
sub
mov
xchg
mov
shr
js
leave
adc
jecxz
pop
or
xor
add
mov
cwtl
mov
mov
push
inc
push
mov
push
sbb
add
daa
cmp
mov
ret
cmp
iret
jns
xor
xor
inc
stos
imul
and
repz
incb
cmp
ja
fs
xchg
popa
fbld
lea
and
aaa
sbbl
push
or
cmp
push
icebp
or
pop
idivl
repnz
mov
movsl
mov
loopne
push
inc
sahf
adc
cmpsb
lock
je
push
es
test
dec
dec
and
test
lret
in
cmpl
test
mov
lods
dec
rolb
lcall
cld
cli
jb
ss
mov
push
cmc
xchg
cmc
mov
loope
jp
jg
jmp
ja
int3
rorb
mov
sbb
push
inc
rclb
sti
or
adc
jge
adc
push
imul
iret
call
call
pop
dec
in
adc
in
js
or
sbb
mov
fisttpll
adc
insw
ja
jmp
and
fcomps
push
lahf
adc
das
insl
andb
lcall
outsl
xor
and
popa
inc
mov
rol
neg
sti
inc
insb
mov
aaa
and
or
cmp
or
js
push
push
nop
lods
pop
imul
gs
les
outsb
push
push
jb
icebp
xor
in
out
jg
lcall
ret
pop
add
adc
inc
jp
bound
addl
fsubrl
inc
imul
pop
ret
in
mov
je
cmp
adcl
add
mov
test
out
xor
inc
lcall
call
mov
lret
dec
xchg
popa
push
int3
mov
xor
popa
dec
lahf
push
xor
seto
sbb
sbbb
push
mov
xchg
push
cwtl
inc
ljmp
sti
std
cmp
xchg
psrlw
inc
addr16
add
cmpsl
adc
add
mov
shrl
adc
loopne
lods
shlb
mov
rcrl
xlat
outsl
add
lods
push
fwait
xchg
push
or
xchg
adc
fcmove
sbb
add
vpmovuswb
imul
push
lret
subb
xor
mov
cmp
call
loope
scas
dec
lods
lock
mov
inc
ljmp
adc
call
je
push
fs
sub
and
mov
mov
divb
lock
or
testl
jp
sbb
cmp
and
sbb
mov
ror
mov
ljmp
movsl
adc
add
fistpl
sub
nop
dec
faddl
mov
jae
sbb
jo
mov
xchg
pop
movsb
mov
fninit
pop
les
jne
loopne
pop
pop
adc
in
mov
icebp
ffree
sbb
clc
jb
in
in
cmp
je
clc
mov
jae
xor
mov
loop
xchg
loope
dec
xchg
fcmovne
dec
and
mov
int3
dec
sub
stc
ret
jae
adc
cs
popf
adc
mov
xor
ja
imul
jno
jg
or
setle
sahf
nop
repz
sub
jle
cmpsb
lea
popl
mov
sbbl
sub
sbb
push
mov
xchg
push
pushl
push
cwtl
nop
push
fldt
imul
aam
movsl
mov
mov
test
insb
shrl
dec
int3
push
push
sub
data16
xchg
cli
rcl
lret
loopne
cmp
andb
push
xchg
cmp
movsb
sahf
dec
repnz
in
mov
sub
rcrb
fldt
push
mov
xsaves
pushf
ljmp
jge
popa
repnz
jne
jg
inc
pop
sarl
mov
xor
rcrl
leave
or
cmp
jnp
mov
cmpsl
in
shlb
push
dec
repz
testb
outsl
cmpsb
movl
mov
add
out
push
cmp
jge
push
adc
dec
outsb
adc
dec
mov
idivb
or
or
les
cltd
test
xchg
das
inc
sub
gs
mov
loope
push
sub
pop
pop
cld
std
es
pop
fs
movsl
add
jl
stos
ljmp
inc
jmp
fmull
lahf
dec
jge
sti
jno
xchg
xor
shrl
mov
daa
mov
out
add
in
push
jne
jge
inc
movsb
bound
mov
add
jg
pop
or
mov
push
clc
loopne
adc
mov
loope
jo
iret
movsb
stos
sbb
xor
xor
cmp
adc
inc
nop
test
cmp
stos
sbb
iret
int
push
ja
out
rcrl
push
mov
push
xchg
hlt
stc
mov
xchg
out
sub
in
dec
mov
sbbl
push
out
push
and
cli
cmp
ljmp
sbb
frstor
or
and
mov
mov
sub
int
pop
jne
pop
pop
insl
add
pop
jmp
cli
mov
inc
insb
adc
sub
sbb
mov
fcomip
scas
sub
adc
iret
adc
aam
aas
mov
in
cwtl
sbb
movsb
js
sbb
and
push
sahf
mov
mov
dec
mull
mov
jae
scas
jmp
loope
pop
or
push
xor
cli
adc
daa
rcll
ror
popa
test
jae
ja
into
xor
stos
dec
movsb
push
jge
sbb
mov
mov
lea
ficoml
xchg
xor
add
pop
or
movsl
push
jge
dec
push
or
push
cmp
roll
jp
imul
sbb
sbb
or
inc
pop
push
mov
test
sub
add
sbb
jae
jmp
jno
cmp
xchg
mov
add
cmpb
cmpsl
test
add
imul
mov
mov
addl
lds
mov
ret
mov
xlat
sahf
mov
loop
push
fcomi
mov
cmp
lods
and
inc
iret
ret
and
sbb
in
outsb
arpl
dec
clc
out
or
adc
push
jge
push
popa
out
test
cwtl
cltd
and
cmp
push
mov
stos
mov
or
add
add
mov
pop
fs
lock
dec
out
gs
or
scas
leave
js
movsl
push
jo
stc
inc
insl
rcrb
sub
js
xor
and
or
cltd
fmull
popf
cmp
or
inc
orb
loope
push
adc
nop
icebp
in
subb
daa
xor
test
cmp
rcrl
push
jo
aad
mov
push
cli
in
negl
cmc
mov
nop
outsb
xor
sub
test
sbb
fisubs
mov
adc
xor
lods
loop
in
cmp
add
fidivrs
hlt
adc
mov
lcall
sub
iret
push
or
jb
mov
mov
push
mov
dec
mov
into
mov
add
or
fisttps
cmp
jecxz
or
loop
call
xchg
add
pop
cmp
jecxz
mov
xor
loop
imul
adc
xchg
out
add
fisubrl
ss
into
cmp
jecxz
js
sub
int3
fmuls
xchg
call
ds
lahf
mov
rorl
jno
outsb
lea
push
mov
cmp
stos
and
loopne
lret
js
fst
dec
adc
jge
out
adc
imul
inc
sbb
cld
repz
push
push
popf
int
xor
test
cmp
jmp
out
cmp
xchg
mov
out
scas
repz
jbe
xchg
clc
test
push
stos
jno
jge
inc
jnp
or
jne
xor
jmp
push
adc
sbb
dec
sub
add
cmp
popf
adc
pop
idivl
pop
sbb
fs
cmp
add
jg
in
jb
mov
cmp
inc
hlt
cmpsb
pop
push
loopne
cmp
imul
mov
mov
outsl
aas
xchg
fcomp
push
jge
mov
add
xor
sub
add
pop
push
es
je
lahf
pop
out
and
pusha
mov
mov
pop
aam
insl
mov
jne
cmp
add
cmpsb
sub
rcrl
and
mov
xchg
sbb
or
leave
nop
push
adc
inc
mov
jae
add
popf
call
sbb
or
dec
scas
out
xor
stos
dec
jmp
bound
xchg
cmp
imul
push
mov
ret
scas
divb
scas
nop
jnp
stos
mov
and
int3
jge
mov
mov
imul
mov
xchg
enter
mov
rcll
loop
xor
mov
aam
loopne
mov
paddq
insb
iret
add
push
iret
adc
xlat
lahf
dec
jmp
adc
cmp
xchg
shlb
jne
adc
mov
dec
int
xchg
roll
popa
ret
sub
nop
ds
pop
inc
test
xchg
pusha
push
fsubl
mov
jb
push
imul
xor
loop
andb
shll
push
movsb
icebp
loop
push
push
outsl
mov
push
cmp
ds
cli
mov
adc
test
xchg
je
jno
cmp
in
and
test
popf
adc
lods
pop
popa
pop
push
xor
mov
or
push
pusha
ds
rolb
sub
imulb
loop
insb
lods
pop
ret
push
mov
inc
lcall
and
xchg
stc
pusha
cwtl
jb
xor
fistpl
inc
cli
rol
xchg
jl
cmc
int
adc
dec
and
out
pop
ret
jg
push
in
clc
fdivrl
sbb
dec
sub
fildll
sahf
inc
sub
sbb
aas
outsl
inc
es
neg
mov
aas
movsb
push
insb
sbb
movl
pop
test
sbb
and
stos
into
mov
push
xlat
hlt
push
bnd
cli
test
clts
sbbb
lock
xor
push
int3
mov
lret
or
dec
mov
pushf
xor
data16
pop
add
lds
inc
push
jl
mov
push
rorb
push
icebp
cmp
sbb
cs
jle
jmp
je
mov
loop
fs
nop
pop
outsb
pop
mov
pushf
popf
jmp
inc
dec
jge
std
ljmp
pushw
mov
adc
scas
mov
cmp
xor
lods
js
ret
rcll
inc
cli
sub
scas
jno
dec
loop
int
jne
jp
out
cli
push
jbe
sarb
aam
stos
xor
dec
imul
in
pop
cmp
dec
out
insl
int
imul
pop
shr
rcrl
sti
mov
jecxz
scas
movsb
je
mov
mov
inc
cld
and
ds
lret
cli
push
pop
add
and
int3
cs
xor
and
or
fstps
lret
inc
clc
push
jnp
loop
jb
int
cmp
popf
cwtl
je
xor
push
mov
scas
inc
inc
out
rcll
and
int3
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
frstor
je
xchg
mov
pop
inc
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
