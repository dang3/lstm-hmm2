push
mov
sub
mov
mov
jmp
adcb
shrl
loop
jle
jle
jge
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
mov
sub
aas
pop
inc
push
cld
add
xor
ss
icebp
xchg
mov
push
sbb
xchg
pop
xchg
scas
xlat
fisubl
adc
xchg
popf
mov
add
cmp
pop
mov
cwtl
enter
test
fcomp
popa
lea
xor
push
shlb
add
pop
into
fldenv
repnz
mov
sub
cltd
outsl
mov
xor
xchg
jp
cld
in
testl
sbb
push
and
cmpl
add
sub
and
stc
int3
jge
pop
in
sub
mov
addr16
mov
push
sahf
mov
outsb
cs
push
adc
in
xor
pop
int3
cmp
mov
xchg
or
jno
rclb
add
lods
sbb
dec
pop
cld
popf
orb
mov
sahf
push
xor
and
inc
mov
jge
sub
call
and
add
mov
pop
push
imul
outsl
mov
lret
std
and
mov
jae
popa
mov
mov
cltd
loopne
and
sbb
push
pop
bound
jne
add
push
das
sub
jo
in
aaa
cmp
into
jne
and
jae
dec
mov
add
shrl
xchg
sti
sahf
mov
roll
mov
cmp
ror
repz
xlat
mov
cli
inc
out
mov
js
jae
xchg
jnp
fadds
push
xor
push
push
push
test
scas
xchg
pop
jge
stc
pop
lock
out
jg
add
sub
cmp
mov
or
fdivrl
out
pop
ljmp
xchg
and
out
push
stc
xchg
pop
fsubrs
out
or
adc
js
js
insb
sub
inc
and
adc
or
clc
shrl
xchg
push
jnp
sbb
mov
sub
fisttps
mov
xor
add
outsb
jne
int
int3
add
xor
shll
inc
sbbl
pop
dec
xor
sarb
insl
push
push
repz
and
stos
and
movsb
push
xchg
sub
inc
inc
jle
nop
movsl
jg
in
es
xor
xor
add
fsubl
cmp
adc
lcall
in
mov
les
mov
out
or
lahf
sub
push
jle
mov
test
jmp
xor
mov
sbb
stc
xor
ret
push
nop
push
ss
fimull
inc
stc
scas
push
leave
cmpsb
jp
cmpsl
hlt
and
jno
add
stc
stos
jae
movsl
insb
dec
add
pop
jae
in
mov
sbb
mov
ret
loope
xor
addl
jns
mov
or
push
push
inc
rclb
in
shlb
popf
sub
fsubr
push
iret
lea
mov
pop
dec
fisubs
xor
hlt
iret
cmp
xchg
lods
jp
stos
or
xor
xchg
dec
out
rclb
loope
js
adc
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
xor
outsl
jge
jle
jge
jle
or
enter
mov
push
leave
mov
decl
adcb
jecxz
jmp
cmp
cmp
xchg
and
xlat
jmp
dec
dec
sbbl
sarb
adc
cwtl
and
xchg
cltd
mov
pandn
jo
dec
push
cmp
cmpsb
aad
or
inc
dec
jne
dec
xchg
xchg
sub
inc
sub
or
jbe
cmc
sahf
mov
and
in
cmp
pushf
sbbb
fistl
fs
sub
scas
loopne
loop
lods
enter
add
push
inc
xchg
test
and
in
cmpsl
mov
jle
push
cmp
cmc
int
xor
mov
cmp
jae
jae
push
push
xchg
repz
icebp
lods
sub
out
or
mov
jbe
pop
pop
jne
cmc
cmc
pop
inc
ficoms
fnsave
xchg
adc
pop
test
and
adc
adc
sbb
loope
inc
lods
mov
pop
pushf
lods
inc
mov
mov
in
jmp
daa
add
js
dec
adc
ret
into
ret
dec
les
xor
mov
popa
test
sbb
mov
cwtl
fstpt
in
and
mov
sub
dec
pop
or
jl
push
testb
xchg
clc
ds
lahf
test
mov
mov
mov
xor
movsb
sti
inc
xchg
call
sub
dec
and
mov
adc
outsb
outsl
pop
mov
ret
je
push
aaa
and
clc
push
push
pusha
sarb
jl
cmpsb
mov
insb
xchg
dec
sub
cmp
shlb
in
add
lods
fmul
push
pop
adc
jecxz
jecxz
and
mov
cmpsb
sbb
cmpsb
icebp
lret
sar
idiv
iret
js
cs
cmp
push
js
cmp
sarl
mov
ret
les
mov
inc
inc
sbb
in
cmp
cmp
hlt
pop
outsl
mov
shll
pop
loope
or
pushf
mov
loop
dec
cmp
mov
xchg
mov
ret
jns
sub
ljmp
cwtl
xchg
aaa
loopne
mov
mov
inc
ja
mov
scas
xor
xchg
in
mov
jmp
mov
mov
bound
in
xor
fisubrl
jmp
lret
add
popa
mov
hlt
jmp
std
fs
ja
stc
je
or
adc
enter
jnp
or
push
lea
adc
xchg
mov
int
push
xlat
pop
pop
jmp
push
jne
inc
and
mov
gs
aas
push
fcmovb
imul
ja
mov
pusha
imul
test
and
out
ror
fstpt
shlb
in
jns
popa
stos
test
cmp
mov
xchg
pop
push
out
xor
xchg
stos
in
and
xchg
pop
out
jb
push
xchg
mov
subb
add
pop
mulb
dec
mov
test
popf
ss
jge
sbb
or
or
insl
inc
shrl
pop
xchg
arpl
mov
insl
testl
fimuls
push
or
lods
nop
push
fildll
lss
shll
stc
jnp
cmp
mov
clc
mov
or
push
cli
and
cmp
in
push
rorl
repz
or
dec
mov
mov
mov
ret
lret
mov
sub
testl
aaa
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
mov
pop
jns
jle
jge
jle
mov
cli
test
xor
xor
pop
jnp
ds
sbb
cmp
jno
sbb
lcall
out
jp
xchg
mov
outsb
push
add
push
or
sub
bound
movsl
vpsubd
and
xor
sarl
jge
roll
aaa
stc
or
cmp
push
dec
xchg
je
frstor
xor
lret
std
int3
fidivs
inc
les
shlb
pusha
pop
lods
and
hlt
fidivs
data16
cmpsb
enter
lds
xchg
push
stos
adc
mov
lcall
xor
jae
pop
xor
mov
add
sub
lahf
aam
outsl
bnd
outsl
push
sub
lcall
or
lock
cli
sbb
jns
hlt
pop
sbb
enter
cwtl
pop
fcmovne
pop
clc
inc
aas
fsubrs
xchg
fs
cmp
and
loope
or
jl
movsb
pusha
jnp
jb
repz
icebp
movsl
ficoml
and
mov
ss
mov
push
into
push
jno
xlat
insb
aas
xor
sbb
sub
imul
mov
outsl
xor
dec
xor
inc
fwait
mov
out
xchg
xor
outsb
pavgb
fidivrl
cmp
imul
pop
mov
sub
cltd
clc
and
mov
daa
out
xor
jl
adc
mov
lcall
xor
xchg
std
dec
or
xchg
mov
lods
dec
ret
sahf
mov
lods
mov
mov
into
ret
mov
sbb
jne
stos
xchg
test
iret
mov
mov
inc
cmp
repnz
fwait
mov
jns
jbe
mov
cwtl
mov
push
fsts
iret
push
insb
mov
jae
push
push
es
mov
in
hlt
ret
adc
insb
mov
mov
cmp
mov
jle
jmp
cld
cmp
stos
into
cmp
dec
xchg
sub
mov
pop
test
sub
ret
jl
xchg
daa
call
call
cmp
jno
dec
aaa
scas
xchg
test
jge
mov
mov
mov
inc
adc
mov
aad
sahf
imul
rcll
out
push
push
aaa
adc
mov
ljmp
push
lcall
aam
outsl
enter
lods
dec
mov
repz
cmp
cmpsl
adc
xchg
insb
test
fstl
cmp
push
sub
and
inc
mov
lea
xchg
or
sub
lahf
pusha
icebp
mov
mov
test
sbb
dec
cmp
sub
aaa
pop
mov
fs
jo
jne
js
insb
mov
adc
fisubl
add
cmpsb
mov
pop
sub
add
ljmp
movsb
push
in
jbe
sub
inc
ret
ja
scas
fsubs
int3
bnd
mov
aam
xchg
nop
pop
addr16
cmp
test
mov
sub
gs
cwtl
push
in
push
jns
lcall
and
cmp
xor
sti
xchg
push
jo
ret
push
push
xor
jge
adc
fldl
out
out
adc
push
cmp
or
js
arpl
shlb
out
jae
stos
int
mov
mov
or
lcall
fs
adc
les
mov
adc
leave
mov
notl
add
sub
inc
cwtl
ljmp
xchg
xor
sbb
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
pop
in
dec
add
jle
jge
stos
sbbl
adc
xchg
jl
dec
leave
mov
insb
cmp
mov
pop
dec
mov
arpl
mov
imul
inc
incb
sub
in
adc
push
sbb
mov
jp
je
cmpsl
jmp
or
lahf
stos
xchg
leave
jl
sbb
in
pop
loop
repz
xchg
or
inc
xor
xchg
loope
dec
lret
jmp
ffree
sarb
jns
mov
mov
sub
std
repnz
ficomps
in
sbb
mov
mov
les
incb
push
in
mov
push
out
push
and
sbb
or
nop
scas
xchg
mov
ljmp
mov
cmc
inc
sub
pop
and
push
addl
mov
icebp
xchg
daa
aad
repz
sub
mov
outsl
xchg
push
mov
test
add
cwtl
es
in
shrl
mov
mov
cmpsb
cmp
xor
movsl
mov
daa
sub
mov
mov
xchg
icebp
sbbb
sub
push
ds
arpl
cmpsl
mov
addr16
xchg
xor
roll
mov
std
test
cmp
inc
aaa
or
lahf
je
jle
xchg
outsl
jbe
mov
idivl
mov
rol
data16
dec
jge
pop
cmc
or
sub
mov
mulb
xor
mov
push
inc
jmp
loop
cmp
test
outsb
das
mov
subb
mov
test
imul
imul
int
fisubrs
pop
mov
inc
push
sbb
sahf
rcr
sub
fnstsw
mov
adc
jle
push
ljmp
movsb
jecxz
popf
mov
mov
jns
test
ret
sub
mov
loope
out
jno
xor
loopne
lea
push
xlat
lret
inc
cwtl
mov
cmp
ds
mov
imul
push
pop
and
jno
inc
xor
and
outsl
repz
iret
mov
cmp
mov
lea
jle
addr16
mov
push
jnp
adc
test
movsb
stc
fwait
xchg
outsb
pop
cmpsb
adc
js
lods
aaa
loope
inc
xchg
sub
fwait
jo
andl
mov
cmc
cmp
cli
scas
stos
lock
rclb
adc
cmp
jbe
aas
mov
dec
xchg
aad
or
fcoml
mov
in
ret
insl
mov
xor
mov
jl
cmp
jmp
xchg
sbb
mov
pushf
lret
pop
jnp
lea
xchg
in
fsubr
push
mov
mov
movsl
and
pop
test
rorl
sbb
inc
mov
sbb
imul
pop
inc
xorb
cmp
sub
pop
push
add
mov
stos
aas
sahf
xchg
scas
sbb
out
sarb
jnp
mov
sbb
cld
mov
clc
fistpll
test
xor
push
cmp
rcrb
push
test
mov
lods
xchg
sbb
cmpsl
sub
test
and
popa
mov
syscall
fidivs
fildll
std
je
sbb
cwtl
icebp
and
ds
pmaxub
test
sbb
push
sub
pop
jnp
inc
jle
lods
jae
lcall
js
out
mov
lods
or
xchg
pop
mov
lea
inc
mov
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
or
jle
jge
jle
jg
xlat
imull
xchg
pop
daa
xor
in
cmpsb
shrb
in
mov
lret
cld
pop
push
dec
xor
xchg
shrw
cmpsl
fistl
stos
ficoml
mov
jne
push
pop
fiadds
aam
fnstenv
xor
call
lods
inc
mov
lcall
jbe
stos
rcr
and
fidivrs
mov
mov
dec
adc
ret
sub
movsb
push
movsb
xchg
rorl
imul
ficoms
iret
sbb
push
inc
mov
mov
pop
scas
rclb
lret
push
inc
imul
adc
mov
push
pop
cmp
rcr
rcrb
add
push
daa
testb
pop
cwtl
fs
lret
aas
sahf
cs
xchg
sbb
in
add
adc
aam
stos
aaa
push
mov
mov
testb
testl
int
xor
jmp
dec
pop
pop
push
xor
mov
jp
idivl
cmp
daa
jb
int3
adc
xchg
dec
xor
jae
test
mov
aad
or
dec
fs
add
cmp
pushl
test
in
mov
pop
push
xchg
lret
mul
dec
into
call
outsb
sub
std
shlb
test
daa
nop
sub
mov
push
jle
jmp
adc
mov
loop
sub
out
and
add
movsb
mov
push
mov
sbb
fs
cli
jg
scas
in
add
adcb
mov
sub
xchg
dec
mov
popa
imul
rcll
or
push
mov
dec
addb
jnp
ljmp
add
insl
lods
and
xchg
or
flds
lret
incl
test
dec
aaa
imul
scas
adc
arpl
in
add
pop
and
fs
sbb
ss
movsl
cmpsb
js
adc
adc
mov
pop
mov
subl
mov
std
addr16
popa
arpl
mov
xchg
add
icebp
jmp
lea
cmp
xchg
in
mov
cld
adc
push
ja
data16
jmp
shll
mov
repnz
pop
stc
mov
cmc
push
out
addl
and
nop
mov
arpl
imul
call
clc
ljmp
mov
push
lea
add
lahf
cmp
add
in
daa
xlat
jmp
nop
jae
loopne
aaa
shrb
stc
dec
dec
sbb
icebp
xlat
fwait
clc
dec
mov
xor
and
jmp
lods
sbb
mov
lods
dec
push
std
jg
cmp
std
test
ja
imul
mov
or
mov
shlb
cmp
andl
fwait
xchg
shlb
mov
xor
or
add
mov
mov
cmp
xor
add
adc
dec
mov
add
enter
negb
mov
sub
cmp
aaa
and
xchg
lea
lahf
xchg
xor
xchg
push
repz
lock
mov
dec
out
push
and
or
in
xchg
lret
mov
push
in
mov
sbb
pop
sti
inc
ljmp
fsubl
push
shrb
cmp
pusha
and
or
outsl
cmpsb
and
sub
xor
inc
ss
xor
lcall
push
pop
push
sub
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
and
jae
mov
push
xchg
mov
outsl
jmp
test
idivb
sub
xchg
sbb
xor
test
popf
rcrb
dec
rcl
testl
out
cmp
mov
and
shlb
popf
int
sti
subl
pop
xor
ret
xchg
mov
insl
aas
jno
xchg
scas
xchg
add
dec
and
jb
test
cld
shll
push
inc
mov
push
lea
pop
mov
outsb
mov
xor
or
lret
lock
std
rclb
shrl
pop
wbinvd
rcrb
mov
out
cmpsl
push
repnz
clc
cwtl
outsb
inc
stos
push
or
push
out
dec
pop
lcall
mov
int3
inc
shlb
push
out
test
test
or
pop
cltd
cmp
adc
push
inc
push
mov
adc
icebp
or
lret
or
inc
dec
ret
adc
sub
inc
cmc
xchg
lret
mov
sbb
popa
mov
sub
pop
fidivrl
adc
into
mov
imul
push
fwait
adc
pop
repnz
pusha
adc
pop
outsl
xchg
cs
pop
nop
xchg
ds
or
jp
fs
jecxz
aam
jno
enter
es
cmp
sbb
xor
push
mov
stos
and
adc
cmp
or
pop
out
cmp
or
xchg
ds
cli
jge
lcall
pop
mov
into
xchg
and
bound
inc
jo
xchg
iret
cmc
pushf
arpl
xlat
add
xchg
dec
sahf
stc
adcl
push
jecxz
add
enter
inc
sahf
ds
mov
dec
aam
mov
jb
sarl
mov
inc
mov
xor
cmp
lods
pushf
add
mov
lahf
insb
icebp
insl
xor
stos
ja
jnp
test
repnz
push
insl
pop
in
and
add
rcrl
scas
lock
push
add
bound
out
loopne
nop
outsl
jecxz
call
adc
cmp
sar
cli
push
test
scas
shlb
or
jbe
and
inc
dec
sub
push
test
imul
std
shll
jmp
ljmp
mull
cmp
mulb
arpl
jmp
sub
dec
add
mov
arpl
add
dec
cwtl
les
ret
and
xchg
mov
stc
mov
xor
jns
add
stos
and
inc
in
jne
inc
xchg
mov
mov
jns
out
int3
mov
daa
xor
fwait
adcl
mov
sarl
cmp
xchg
lea
call
fsubrl
loopne
cmpsl
xchg
test
nop
or
adc
xchg
mov
fildl
es
xor
jo
sub
inc
push
outsl
jp
clc
iret
xchg
sahf
jle
adc
jne
icebp
jl
call
push
arpl
sar
sub
pop
sub
daa
leave
fmul
sub
stc
jmp
mov
jnp
xchg
sub
mov
mov
fistpll
add
fiadds
mov
outsl
dec
icebp
inc
and
ret
inc
push
inc
push
out
std
dec
xorl
gs
ljmp
lea
rcrl
fisubrl
mov
mov
out
push
sub
cltd
imul
pop
subl
out
pop
flds
cwtl
pop
pusha
or
adc
lods
bound
mov
roll
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
ficoml
sahf
add
or
outsl
jge
jle
outsb
adc
adc
loop
mov
xchg
stos
ljmp
test
dec
push
sub
imul
dec
or
aad
mov
add
rcr
xchg
push
push
into
cltd
pop
and
mov
mov
fwait
sbb
fisubrl
push
cmp
cwtl
data16
in
movsl
mov
jg
inc
pop
popf
ja
jo
cmp
xchg
push
pusha
jnp
fimull
pop
aad
and
addr16
int3
mov
nop
pop
or
shlb
adc
pop
jb
fwait
xlat
js
adc
xchg
int
insb
lods
add
sbb
lret
fldl2t
pop
sbb
mov
xchg
das
pop
inc
mov
stc
jg
jle
mov
lret
jl,pn
repz
stos
push
xchg
xlat
addr16
arpl
inc
dec
push
pop
cmp
xchg
imul
mov
mov
pop
call
push
dec
cmp
lret
add
hlt
cmp
roll
xchg
inc
mov
push
xchg
xchg
decl
stos
out
mov
cmpsl
cmpsb
push
mov
add
js
mov
add
pop
or
cmp
add
dec
sti
sub
dec
add
fs
pop
sti
adc
int3
scas
xor
cmp
jecxz
aaa
mov
stc
movsl
outsb
and
inc
or
call
mov
lcall
dec
testb
mov
pop
es
adc
cmc
ss
and
mov
push
jge
pop
cli
add
mov
fbstp
lea
lods
push
push
or
or
stc
sarb
rclb
lea
adc
sar
cltd
call
sub
mov
ror
jno
je
xor
lahf
arpl
imul
adc
jecxz
xorb
aas
test
pop
jle
daa
mov
inc
pushf
filds
aas
jecxz
call
xor
lret
idivb
pop
push
loope
xor
and
mov
lcall
outsl
sti
push
stos
xchg
xchg
call
test
addr16
pop
dec
pop
stos
inc
ret
cltd
cmp
xchg
frstor
dec
push
pop
in
xor
test
mov
push
inc
out
mov
pop
ds
incl
jb
cmp
xchg
mov
cmp
pusha
xlat
jle
cmp
jnp
xchg
movsl
cmpsb
mov
push
pusha
mov
or
ja
jae
sub
clc
mov
and
push
pop
pusha
nop
orl
pop
inc
push
daa
xchg
pushf
xor
mov
fptan
sbb
cltd
dec
popf
shll
xchg
cmp
scas
pop
adc
lock
jl
mov
push
lahf
push
fists
jae
mov
pop
loopne
movsb
mov
cli
add
jb
xchg
in
lock
jbe
stos
stos
sahf
jecxz
outsl
pushf
mov
push
into
aas
push
lods
mov
jl
and
pop
push
mov
push
inc
ret
jae
pop
outsl
test
std
jge
aaa
jb
outsb
dec
loope
sbb
sbb
pop
xor
sbb
pop
hlt
mov
in
sahf
or
sbb
push
imulb
push
fwait
mov
add
ss
lret
in
jmp
or
inc
inc
xor
cmpb
xchg
nop
mov
addr16
or
and
inc
dec
in
add
testl
mov
or
daa
dec
jne
add
mov
daa
movl
sbb
xor
cmp
or
jge
mov
push
push
cld
cwtl
mov
xlat
roll
ret
cmp
xchg
outsb
or
add
sub
jns
add
clc
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
roll
outsl
jge
jle
sub
ret
jno
mov
push
outsl
mov
cli
imul
pop
outsl
add
add
sbb
jmp
lret
mov
stos
mov
out
shlb
jb
mov
add
cs
hlt
add
imul
sub
or
push
sub
jbe
fimull
sub
jbe
imul
mov
push
add
das
testl
sbb
insb
xchg
inc
push
loope
pop
stc
scas
out
fcomip
jno
jns
mov
adc
cltd
inc
neg
jg
and
jo
pop
in
jl
fsubl
mov
inc
lods
test
aaa
loope
sub
and
and
xorb
adc
mov
mov
cmp
add
sbb
setnp
push
sub
ljmp
mov
int
loop
repnz
lods
js
shrl
iret
rolb
mov
inc
pop
inc
adc
aam
jmp
xor
fcmovnbe
inc
loop
aad
mov
push
lods
mov
sbb
bound
inc
shrl
int
int3
out
test
jns
adc
cmp
ret
jg
fcoml
inc
lahf
fs
stos
sti
sbb
sub
aam
mov
pop
loopne
mov
push
bound
movsl
sbb
pusha
mov
adc
scas
inc
add
loope
addl
jle,pt
iret
cmp
or
cli
cwtl
jp,pt
pop
mov
dec
mov
adc
shlb
mov
arpl
fstpt
jmp
cltd
sub
aam
pop
out
out
mov
int
sbb
add
sub
mov
sar
and
mov
add
push
pop
pop
out
pop
jle
mov
rcr
sbb
outsb
cmp
adc
dec
fwait
test
ret
xchg
mov
pop
insb
test
fmulp
daa
daa
ljmp
mov
jecxz
add
movsb
mov
loop
push
outsl
pop
repnz
arpl
push
aaa
xchg
or
cmp
xchg
xchg
and
notl
pop
add
push
outsb
stos
add
mov
mov
mov
pop
inc
dec
sub
mov
in
push
xchg
mov
int
mov
rclb
pop
mov
or
int3
nop
jb
push
mov
addr16
cmpsl
or
movsl
push
cmpsb
decl
cmpsb
dec
xor
stos
stos
adc
sbb
sarb
add
jg
jmp
sub
sbb
push
out
mov
or
std
jmp
out
setns
movsl
scas
mov
push
jmp
imul
out
push
dec
jp
mov
mov
or
dec
lahf
dec
cmc
clc
in
inc
and
fsubl
xchg
pop
jo
or
or
mov
mov
jae
jno
pusha
lods
mov
out
pop
out
mov
dec
ljmp
sub
or
jbe
aaa
aam
lahf
lods
cmc
mov
jne
inc
mov
jno
out
sub
movsl
xlat
or
aas
scas
hlt
test
sbbb
jmp
into
fdivs
outsb
dec
inc
icebp
and
push
sarl
fbstp
movsl
rcrl
sub
and
repnz
jnp
lret
inc
in
cmp
mov
das
mov
shl
stos
mov
push
xchg
mov
out
into
pop
pop
inc
dec
xorl
and
test
mov
push
push
cmp
pop
bound
clc
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
les
jle
outsl
jge
jle
cmpsb
cmc
mov
aam
mov
mov
mov
nop
fwait
scas
push
xchg
movsb
punpckhbw
push
pop
fcoms
or
sti
pop
mov
lret
pop
add
or
sahf
test
and
lcall
orb
xor
ja
loopne
xor
aas
iret
cmp
cmc
push
sub
xor
push
cwtl
gs
pusha
lea
dec
dec
sbb
sbb
mov
xchg
pop
pop
stos
loopne
loop
mul
cmp
push
xor
jb
mov
push
insb
xchg
jmp
sub
or
test
jge
outsb
cmpsl
push
lea
jb
fsts
icebp
cs
int
push
or
pop
lret
pop
movsl
mov
xor
stc
ror
lods
cld
or
cmp
out
ret
xchg
cli
rcrl
hlt
add
lods
js
mov
xor
xor
inc
mov
lahf
pop
les
loop
mov
pop
xchg
adc
sahf
mov
call
dec
xchg
xchg
sbb
scas
int3
nop
or
or
jecxz
popa
lods
sub
iret
sbb
sub
pop
mov
loopne
orb
xor
push
lahf
jmp
stos
cltd
insl
fscale
stos
aad
jge
inc
lea
xor
inc
aaa
add
mov
addb
sti
test
icebp
cmp
inc
xchg
dec
pop
inc
jg
lahf
hlt
test
pop
adc
mov
fcomi
scas
dec
shll
fs
jge
fbstp
hlt
mov
push
pop
in
lcall
adc
fisttps
ss
rcl
xor
test
add
xor
pop
mov
mov
sub
ss
test
pop
repnz
daa
cmc
or
ss
push
jle
mov
pop
rcr
ret
adc
inc
inc
popf
pusha
loopne
mov
repnz
test
addr16
out
xchg
ror
enter
ret
adc
aaa
mov
cmp
jmp
pop
sub
nop
pop
push
sub
cli
icebp
jae
mov
dec
ss
dec
adc
push
les
in
mov
mov
imul
cmp
cld
lret
call
imul
pop
imul
dec
lret
xchg
cli
aam
testl
sbb
pushf
push
jno
ud1
bound
xchg
stos
out
cltd
lds
out
or
jmp
and
xor
in
xor
and
push
sbb
or
nop
fmuls
pop
icebp
leave
std
add
inc
in
rorb
jnp
mov
cmp
inc
mov
in
cmp
xor
adc
scas
push
mov
jae
or
sbb
xchg
jp
into
sub
push
push
inc
repz
add
testl
and
inc
sub
or
fidivs
out
movsb
loopne
sbb
inc
inc
shlb
and
gs
movsl
mov
pusha
jle
in
and
cmp
sbb
xchg
add
or
push
add
loop
subl
jae
in
push
movsl
cmpsl
push
inc
rcr
test
add
inc
rcr
out
mov
mov
jbe
push
xor
fimull
shrb
inc
in
out
sbb
xor
pushf
je
xor
orb
fidivl
loope
repnz
mulb
dec
inc
cmp
and
xor
aaa
daa
in
push
lret
aaa
mov
cmpsl
in
xchg
shrb
das
das
leave
sub
add
divb
and
fmul
loop
in
sahf
jne
loopne
ret
cmp
popl
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
push
rorl
negl
jle
push
mov
addr16
jp
dec
mov
ds
mov
lods
icebp
lret
dec
mov
mov
mov
sub
sub
lret
pop
jp
sub
shrb
push
addb
xor
jecxz
testb
add
test
adc
xor
jo
or
imul
loopne
repnz
adc
mov
mov
xor
rclb
add
push
xor
and
lods
mov
and
lods
jb
insl
lods
lock
jp
push
dec
into
pop
sbb
loope
adc
cmp
mov
push
push
cld
sbbl
data16
std
sahf
clc
mov
cltd
test
roll
mov
sti
mov
ljmp
push
mov
sti
clc
mov
cmp
inc
xor
push
or
or
push
cs
jmp
jecxz
pop
ficoms
lret
outsl
xchg
mov
call
ret
cmc
or
outsb
ljmp
sub
aas
push
sbb
lock
mov
fwait
cmpsb
fbstp
and
jp
sbb
scas
and
loope
jbe
out
sbb
ud0
mov
outsb
pop
push
dec
movsl
or
cmp
xor
jg
inc
mov
call
push
push
lahf
xor
push
pop
inc
ret
insl
mov
sarb
leave
cmc
jmp
cmp
andl
cmpb
and
sub
add
inc
dec
fisttpl
lcall
int
xor
pop
or
push
lahf
jge
inc
jle
rcrb
outsb
cli
lret
mov
xchg
das
sti
enter
shll
in
cwtl
out
test
sbbl
inc
pop
xlat
dec
repnz
xchg
aad
popf
stos
decl
xchg
jns
iret
add
addl
mov
jge
lret
std
and
pop
add
subb
out
xor
and
pop
ret
dec
sbb
sub
push
jge
popf
fisttps
jno
xchg
pop
js
sbb
je
mov
int3
mov
push
in
add
add
sbbl
mov
mov
mov
aaa
daa
mov
loop
iret
clc
out
inc
mov
dec
mov
or
scas
arpl
push
mov
fs
sbb
and
xchg
lods
mov
test
repz
flds
cmp
adc
sti
into
and
add
in
dec
sbb
jb
cmpl
les
loop
add
nop
mov
cmp
ds
mov
xchg
loopne
sti
dec
sti
leave
lods
rorl
push
daa
sub
push
in
es
test
shlb
inc
and
push
sbb
add
sbb
mov
push
lcall
sarb
cmovnp
push
scas
sbb
sub
insb
mov
adc
xor
or
jb,pt
addr16
inc
pop
mov
mov
push
or
or
ljmp
add
idivl
iret
xor
cmp
movsb
andb
xor
aas
pusha
xchg
jns
popf
cmp
popa
gs
pusha
lods
mov
pop
and
mov
into
jne
xchg
cmpsl
imul
xor
xchg
inc
lds
stos
or
loopne
lret
inc
out
scas
xchg
mov
or
jb
out
mov
arpl
popa
mov
pop
lret
sbbl
and
and
loope
mov
xor
movl
gs
int
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
push
or
jle
jge
jle
shlb
inc
lahf
call
ret
mov
popf
push
or
adc
and
movsl
das
cmp
push
mov
pop
and
jo
xchg
sub
inc
aad
cld
pop
push
xor
cld
xor
stos
sbb
xor
mov
mov
pop
lahf
mov
pop
lods
sbb
loopne
jp
aas
push
clc
leave
fs
pop
mov
fcoms
sti
out
popf
push
mov
in
xchg
cmp
ffreep
std
and
gs
rolb
pop
jmp
inc
mov
stos
popf
mov
or
in
dec
andl
xchg
pop
mov
push
sarl
sub
xor
push
pop
jmp
mulb
push
loop
rorl
mov
dec
ret
mov
cmpsb
int3
cli
pop
mov
mov
out
mov
test
cmc
jo
xchg
lock
leave
test
out
cmp
and
mov
je
int
sub
or
lcall
out
sti
mov
push
scas
daa
xlat
or
cmp
stc
and
adc
push
lock
fstps
cmpsb
mov
jle
rcl
push
dec
mov
mov
xor
cmp
add
mov
push
adc
rol
dec
and
and
xchg
std
clc
addr16
arpl
out
pop
adc
out
pusha
xchg
xchg
add
add
adc
and
addr16
jnp
sub
sub
xchg
mov
lret
movsl
push
jns
stmxcsr
jae
lcall
jp
int3
sbbl
jmp
inc
cld
clc
or
fwait
xor
jg
mov
mov
shlb
push
xchg
jmp
sub
pusha
inc
dec
icebp
je
scas
mov
in
pop
fdivp
cltd
mov
adc
and
add
sar
or
sbb
pop
mov
mov
scas
adc
std
je
fistps
imul
clc
shlb
fdivr
push
or
xchg
sahf
adc
push
mov
push
std
sti
leave
sbb
cmp
std
and
jcxz
inc
or
fs
push
add
jmp
xor
test
xor
add
pop
mov
shr
mov
std
das
movsl
push
stos
test
subb
or
push
lods
pop
insl
ds
inc
pop
out
inc
decl
xchg
pop
sub
adc
ficompl
out
or
or
outsl
ja
jne
lcall
insl
call
mov
xor
sarb
pop
ret
xchg
cmp
aad
lret
xchg
outsb
xor
dec
jg
jp
xchg
pop
sar
sbb
test
rcrb
push
scas
mov
or
fcomp
cmp
loope
je
cmp
fsubl
cmp
sarl
sub
xchg
xchg
xor
mov
shl
nop
pop
adc
imul
inc
and
mov
inc
adc
sbb
jo
sbb
pop
inc
xor
lret
xchg
loop
cmp
pusha
loop
sub
mov
call
pop
jl
nop
add
loop
mov
mov
and
out
adc
mov
rorb
or
or
mov
push
cmpsl
pusha
jge
or
scas
push
test
adc
nop
and
mov
xor
inc
scas
cmc
xchg
push
or
mov
aaa
lods
mov
or
or
pop
push
and
mov
pop
rcr
mov
lcall
movsb
mov
addl
imul
pop
dec
inc
push
dec
pop
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
stos
in
and
jle
lods
push
inc
fs
mov
dec
push
mov
mov
andl
add
sbb
rclb
outsb
daa
addl
std
out
fsincos
out
and
adc
aad
test
daa
shll
loopne
push
add
xor
mov
jo
pop
push
cmp
cmp
jnp
mov
pop
and
andl
ficompl
shrl
dec
jns
inc
push
ffree
test
enter
push
test
mov
out
mov
inc
arpl
adc
pop
enter
int
jl
scas
fbstp
jle
sub
dec
xorb
pop
fidivs
push
pop
lcall
mov
cmp
adc
xor
repz
rorl
cmp
cmc
lea
mov
andl
cmpsl
push
mov
xchg
stos
inc
xchg
pop
ret
in
pushf
out
xchg
ja
jl
push
cmpsl
mov
pop
mov
sahf
mov
sti
sub
sbb
push
loope
lret
or
lahf
pop
xor
jno
ljmp
mov
sub
aad
sbb
iret
pop
in
mov
ret
dec
mov
jmp
andb
insb
xor
mov
sbb
fisubrs
add
jg
mov
adc
repz
cmpsb
mov
orl
mov
jle
stos
inc
rorl
leave
std
movsl
adcb
sbb
jno
jbe
pop
jg
test
jg
xor
cmp
stos
in
mov
imul
jle
jo
push
push
sub
popa
sbb
cs
sbb
inc
in
adc
fsubrp
jbe
dec
sbb
jns
leave
ss
sub
push
incb
pusha
add
sbb
jns
jge
jmp
lods
pop
inc
cmp
daa
faddl
xor
shrb
mov
rclb
ja
leave
stos
jne
jb
pop
inc
mov
out
dec
icebp
xchg
sub
lahf
add
stos
xchg
ja
shll
sbb
mov
or
push
sub
repz
out
cmpsb
pop
mov
push
dec
add
pop
rcr
cmp
xorb
es
cmp
jg
adc
jl
sahf
or
adc
fucomi
insb
push
scas
dec
pusha
xchg
insb
std
adc
sbb
sbb
decb
nop
test
mov
xchg
aaa
mov
ljmp
cs
stos
mov
addb
std
fsubs
sbb
js
sahf
gs
movsl
and
xchg
or
mov
and
cmp
cld
out
addr16
bound
mov
adc
test
adc
xor
jae
cmp
jbe
scas
or
inc
es
sub
shl
push
es
inc
mov
fs
cmpsb
daa
and
cltd
cmp
jle
mov
fs
rorl
cmc
cmp
int
cltd
xchg
jo
mov
xchg
shl
jae
pop
and
and
movsb
ss
xchg
sub
pop
ds
xor
cltd
imul
dec
mov
pop
inc
repnz
gs
mov
aaa
xor
stc
add
sbb
mov
mov
js
icebp
inc
cmpsl
lahf
stc
cmp
mov
dec
mov
ds
in
pop
dec
xor
xchg
rep
push
negb
nop
out
pusha
cmpsl
mov
fmulp
mov
cmpb
xor
outsb
cmp
push
xor
xor
add
xor
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
cwtl
ret
jle
jge
jle
adc
adc
mov
imul
jns
jl
insb
sbb
jle
loopne
push
dec
dec
adc
andl
mov
test
add
lsl
or
das
push
xchg
leave
lods
test
pusha
adcb
out
ss
cmpsl
jp
pop
push
xchg
cmp
mov
add
adc
call
dec
xchg
and
xor
xchg
mov
adc
and
and
ja
icebp
mov
pop
out
subl
cltd
nop
movsl
movsl
fdivrl
icebp
ljmp
pop
and
sbb
dec
ret
insl
or
divl
fsts
sahf
repz
sbb
push
xchg
sbb
jecxz
sahf
adc
push
xchg
mov
clc
xchg
dec
lods
mov
pop
outsl
ss
stos
adc
sarl
sub
xchg
out
cmp
pop
jmp
mov
mov
push
xchg
gs
daa
or
sbb
mov
pop
mov
ds
and
add
js
xor
fimuls
pushf
int
stos
sbb
push
into
pushl
jnp
xor
insl
in
mov
and
testl
leave
jo
testb
bound
enter
or
add
lahf
repnz
xor
or
cmp
pop
lock
add
push
inc
sbb
stos
and
stos
fcomip
stc
ds
rclb
mov
xlat
dec
jns
cmp
mov
mov
imul
xchg
cmpsl
cmp
mov
cmpsl
xlat
sahf
inc
dec
jb
inc
jns
ljmp
addr16
dec
arpl
mov
std
ljmp
fwait
jecxz
loopne
jge
and
mov
out
xor
jmp
inc
xor
lods
cmp
lea
lock
cmp
cmp
cmpsb
jo
jb
push
sub
or
mov
aad
cld
sub
jae
inc
or
adc
ficoms
les
sbb
sub
jno
jge
sbb
dec
out
lods
push
testl
mov
daa
in
push
fs
nop
push
add
movsb
mov
add
pop
xlat
out
jo
dec
popa
ja
adc
imul
fst
or
loop
mov
movsb
jp
push
mov
push
pop
into
or
dec
imul
icebp
inc
aam
out
idivb
in
xor
inc
fdivrl
test
arpl
insl
sub
call
xchg
and
out
inc
dec
loope
jecxz
sbb
push
cmp
push
push
dec
xchg
enter
pusha
addr16
rcr
mov
or
and
addr16
sti
pusha
sub
fldcw
loopne
aas
mov
xchg
adc
dec
bound
popf
ror
xchg
stc
inc
pushf
sbb
leave
aas
add
popf
push
xchg
fsubrp
mov
insb
mov
jmp
push
sbb
fbstp
mov
loopne
sub
and
fs
jp
xchg
andb
mov
xor
mov
fwait
and
bound
cmp
or
pop
jne
imul
into
cmpsl
rcrb
jl
jg
mov
or
jns
mov
roll
mov
sbb
mov
fnsave
inc
or
test
rcrb
adc
jle
jnp
add
enter
movsb
fidivrl
rolb
mov
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
dec
lcall
xchg
jb
dec
int3
ljmp
jl
inc
xlat
test
jns
mov
jnp
jecxz
jae
test
in
imul
cmp
lret
sti
sbb
jg
mov
mov
in
testb
mov
xchg
push
xchg
pop
mov
cltd
clc
loope
pop
push
incb
jg
arpl
mov
ljmp
mov
adc
das
in
andl
add
sahf
add
mov
push
pop
mov
push
xchg
andb
es
and
dec
adc
ret
loopne
test
in
lret
and
lods
repz
mov
mov
andl
aaa
imul
das
dec
loop
in
icebp
mov
mov
xchg
sub
loop
mov
xor
jle
and
pop
fs
xchg
stc
lahf
test
add
hlt
dec
lods
cmp
cmp
lahf
ret
sub
inc
fstpt
mov
ds
pop
out
xchg
aaa
out
push
cmpsb
jg
jge
popf
xchg
fidivs
cs
popa
dec
scas
sub
outsb
jg
loop
mov
mov
sub
mov
pusha
inc
pop
push
push
jg
jecxz
leave
scas
cs
adc
adc
jne
insb
sbb
rcr
add
add
mov
fidivl
loopne
scas
sub
aad
cmp
not
loopne
arpl
in
or
push
mov
xorl
pushw
or
sub
jns
aas
test
shll
fwait
xor
or
cmpsb
mov
inc
mov
rolb
jns
sti
inc
xor
jo
inc
lret
pop
enter
inc
aad
std
notl
xlat
pop
cmp
repz
mov
jns
insl
sbb
adc
push
daa
imul
mov
pop
jae
xchg
pop
and
or
popl
pusha
outsb
test
dec
ljmp
xor
insb
test
andl
xor
cmp
aas
loopne
jle,pt
jmp
ja
lods
mov
ficoml
testl
cmp
rcr
mov
out
jp
int3
push
jne
bound
push
adc
push
or
sbb
jns
lea
ds
jno
jmp
sahf
adc
xchg
aas
jmp
xlat
sbb
push
js
aas
int3
clc
inc
add
xor
mov
mov
lahf
std
stos
shl
es
nop
in
sub
sbb
or
dec
and
mov
pop
jmp
test
inc
cmpsl
test
mov
push
or
and
jecxz
add
add
pop
add
cli
and
sbb
inc
dec
outsb
cli
cmp
sub
loopne
lock
add
subl
shlb
or
xlat
push
pop
jns
bound
or
lods
arpl
imul
push
lret
in
jne
dec
out
filds
mov
rcrl
add
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
popf
mov
jle
xor
jle
cmp
popa
insl
mov
xchg
fsubr
cmp
push
sub
mov
loope
sbb
xor
in
loop
std
inc
adc
pop
je
sti
jnp
xor
fimull
je
mov
icebp
push
adcb
or
mov
out
out
jp
in
int
mov
loope
sub
movsb
idivl
pop
lods
das
dec
mov
lock
or
sbb
rorl
mov
in
cs
cmp
gs
jge
push
mov
xor
in
xorb
in
jge
and
fisttpl
pushf
mov
and
push
pop
clc
mov
mov
js
dec
lret
out
int
and
inc
push
push
outsl
sub
jecxz
push
aad
jge
ret
mov
pop
pop
shlb
xor
jae
ja
cmp
rolb
xor
out
loope
mov
fsub
in
mov
test
sbb
ficomps
lds
in
pop
push
ja
shll
mov
and
sub
jno
repnz
lret
mov
mov
loope
in
aaa
int3
loop
mov
push
add
push
roll
js
dec
xchg
jecxz
int3
jne
mov
jp
ret
add
sahf
movsb
call
mov
mov
popf
dec
test
mov
into
mov
push
clc
clc
lret
push
lods
lcall
shrb
dec
nop
inc
hlt
mov
adc
cmp
push
sbb
data16
jmp
adc
adcb
adc
lret
pop
mov
leave
shr
test
fdivp
push
push
repz
or
sbb
nop
iret
push
addr16
fsub
nop
push
jbe
xchg
pop
jp
fbld
fs
or
mov
mov
pop
dec
xor
inc
sub
dec
dec
lret
fcomp
push
or
push
fidivrl
mov
cmc
xor
popa
mov
mov
sub
jp
iret
cmc
outsl
out
out
mov
dec
enter
data16
in
dec
cld
jb
shr
and
ret
lds
lock
iret
arpl
sub
cmc
or
ret
xchg
xlat
fdiv
mov
xor
mov
popw
fldl
mov
cmp
stos
lods
xor
mov
daa
fsubs
adc
inc
mov
or
add
dec
shr
out
sbb
test
inc
dec
mov
dec
pop
adc
enter
add
test
mov
insb
mov
sbb
mov
sbb
inc
inc
add
stc
rol
sbb
jmp
shlb
jae,pt
add
dec
mov
add
mov
idivl
push
xor
lret
xchg
mov
adc
sti
adc
aaa
push
adc
cmpsb
mov
shr
push
sldt
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
pusha
cmp
push
andl
sbb
adcb
and
pop
mov
pop
or
sti
and
mov
and
xlat
xlat
jae
mov
scas
xchg
icebp
sub
pushf
xor
adc
inc
inc
sub
out
aad
rorl
ds
add
jl
xchg
jae
inc
mov
mov
xlat
push
push
das
in
loopne
popa
mov
and
cltd
dec
xor
xchg
fldl
and
pop
repz
mov
dec
cli
sub
or
xchg
mov
jnp
sahf
mov
outsl
sbb
add
popa
mov
ficomps
divl
clc
clc
lods
inc
adc
adc
outsb
cs
mov
rclb
xchg
hlt
jae
nop
subl
sbb
cmp
mov
push
fimuls
push
xchg
or
push
ficoms
insl
mov
ljmp
mov
arpl
imulb
in
jg
fmuls
cmc
sub
int3
stos
das
popa
into
cmp
mov
je
inc
cmc
pop
mov
mov
dec
cmp
js
cltd
filds
dec
mov
dec
dec
xchg
data16
sbb
rcl
fmull
xchg
sub
popf
push
cmp
or
jmp
push
cli
adc
or
sub
jns
cwtl
ljmp
mov
inc
push
out
jo
ds
and
test
mov
lret
mov
addr16
inc
test
out
cmp
loope
fidivs
fwait
xlat
in
roll
mov
ss
push
or
jmp
lods
xor
jb
clc
sbb
bound
addb
adc
push
cmp
lret
subl
add
mov
sub
push
aas
adc
data16
dec
or
mov
lea
jae
cmp
enter
les
xlat
xor
adc
sahf
xchg
shrl
je
pop
cmp
mov
xchg
out
icebp
pop
popf
into
pop
push
mov
loope
stos
mov
and
xchg
sub
shll
sub
mov
fwait
movsb
or
lcall
popf
sarl
cmpsb
pop
insb
in
pop
ret
lret
subl
ja
push
loope
lds
insb
inc
sbb
rcrl
xchg
insl
xchg
enter
js
aad
xor
xor
jo
test
push
lcall
xchg
in
aam
scas
mov
push
repz
fistpll
ss
lret
sahf
jbe
lcall
xchg
negb
mull
mov
addr16
dec
jo
sbb
lcall
and
sbb
lret
push
mov
sub
jge
cmp
cmc
adc
out
rcll
lods
jo
add
inc
inc
mov
cli
dec
jge
push
add
jbe
add
stc
sub
or
cmpl
stos
repz
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
fldcw
jle
xor
jle
incb
xchg
cmp
xchg
jnp
mov
adc
xor
push
popf
and
lcall
and
xchg
xchg
mov
jle
push
or
cwtl
or
movsl
lahf
mov
jmp
pop
daa
xor
cmc
aad
pushf
mov
fmull
icebp
fbstp
gs
mov
pushf
xchg
std
cwtl
dec
inc
jg
pop
inc
cmp
push
pop
dec
inc
and
jecxz
mov
mov
push
mov
jg
cmc
mov
xchg
lret
es
ffreep
jl
jmp
aad
mov
shl
push
shrl
or
bsr
xchg
or
fisttpl
lret
bnd
cs
sarb
fldcw
pop
enter
sub
sti
jg
sbb
aaa
cmpsb
dec
or
fadd
int3
fmull
xchg
dec
repnz
adc
lock
popf
test
incb
xor
push
out
inc
enter
ss
sub
dec
test
ljmp
pushf
inc
mov
cltd
stos
bnd
in
sbb
into
pop
mov
inc
dec
repnz
shl
fsubrp
push
sbb
inc
pop
aas
add
test
pop
pop
lock
sti
lret
dec
mov
push
inc
xchg
cmpsl
test
adc
scas
aam
mov
stos
mov
xor
inc
lea
sbb
loopne
mov
flds
sbb
in
test
cmc
into
xchg
fs
stos
xchg
mov
lret
cmpsb
mov
aad
push
data16
add
daa
outsb
pop
add
sbb
insl
jp
mov
sbb
imul
mov
es
mov
or
icebp
arpl
mov
and
sarb
outsb
stos
lods
xchg
jle
or
incl
jg
mov
mov
cmp
pop
mov
cmpl
pop
sub
hlt
outsb
or
and
fwait
add
add
mov
mov
icebp
aaa
test
xchg
cwtl
mov
shlb
sub
jbe
enter
sub
fadds
aad
js
ljmp
xchg
out
push
inc
negb
add
sub
test
add
jg
pop
ret
dec
mov
sub
xchg
add
sbb
mov
pop
xchg
push
repz
jle
loope
lcall
bound
mov
bound
lahf
aaa
dec
sahf
jno
pusha
lret
lds
arpl
es
xchg
add
out
mov
inc
fsts
shlb
mov
dec
add
rorl
test
mov
xchg
dec
jns
cmp
faddl
daa
xchg
dec
repz
xchg
arpl
in
mov
jecxz
loop
or
adc
jle
cmpsb
popa
loope
pop
js
loopne
push
hlt
daa
add
insl
sbb
xchg
inc
ret
ljmp
iret
pop
sub
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
cmp
jle
xor
jle
jle
add
xor
das
aam
test
mov
je
xchg
lret
je
daa
stos
popa
loop
jne
sbb
arpl
push
loop
mov
dec
lcall
in
iret
and
icebp
and
push
pop
out
pop
das
test
sub
aas
xchg
sti
ja
addl
les
movsb
arpl
mov
lahf
or
mov
or
push
push
mov
adc
sbb
and
cltd
xchg
into
jl
mov
jg
sbbb
ds
jns
repz
es
fidivs
jne
mov
xchg
lcall
das
mov
push
into
pushf
xor
xor
fsubs
hlt
cltd
xchg
clc
out
add
out
cmp
xlat
mov
sbb
inc
inc
cmp
pop
sbb
sub
jae
mov
cmp
lcall
dec
ror
inc
add
dec
pop
xchg
in
je
out
ret
cmp
aad
lock
pop
les
les
dec
jecxz
mov
insb
pop
or
lds
add
push
scas
daa
out
lahf
inc
dec
push
pop
xchg
mov
cmc
cmp
cmc
pop
mov
idiv
adc
enter
out
jo
pop
and
das
stc
pop
jae
xchg
pop
xchg
adc
add
sti
mov
inc
test
pop
sahf
pop
cmpl
add
adc
cmp
fcompl
fidivs
daa
fistps
shlb
je
lods
sub
fstpl
cmpsb
out
add
fwait
pop
pminsw
fsts
mov
ja
negl
sbb
call
xor
pop
lock
mov
mov
xorl
mov
xlat
pop
in
cmp
mov
out
icebp
mov
fwait
shll
movsl
xchg
mov
sub
pop
cmpsl
adc
pop
cmpsl
pusha
jmp
sbb
cmp
daa
jbe
jecxz
jo
ret
int
cltd
push
mov
add
out
jecxz
addb
dec
stos
mov
icebp
loope
cld
int
mov
dec
sahf
sbb
outsl
xor
scas
xor
inc
not
mov
xchg
loope
mov
add
addl
in
cmpsl
stos
push
pop
push
sbb
sarl
das
lods
jb
sahf
pop
cmpsl
add
in
mov
fsts
sub
inc
mov
xor
iret
sbb
cmp
inc
mov
sub
shlb
adc
loopne
jmp
insl
movsl
push
dec
cmp
shrb
clc
and
xor
addr16
cld
jle
dec
cs
xor
ret
mov
sarl
fsubs
cmp
xchg
sahf
mov
add
mov
aad
ds
cmc
push
stc
cmp
mov
jmp
test
jno
ja
shrb
jmp
jle
xor
jle
in
test
inc
pusha
add
add
out
icebp
push
cwtl
mov
out
pop
test
in
rcrb
and
push
mov
mov
stos
dec
sub
push
es
out
or
call
pop
out
test
std
jl
push
mov
xchg
or
mov
dec
loopne
scas
fidivrl
pop
cmp
push
lahf
loop
mov
jg
mov
shlb
jns
push
or
decb
data16
lds
cli
jmp
mov
jnp
mov
popf
sub
pop
xlat
rcrb
incb
or
mov
lea
push
xor
stc
pop
fldt
cmpsl
adc
sub
outsb
lcall
mov
mov
xor
je
pop
mov
fldt
fidivs
xor
stos
mov
lea
mov
call
sahf
xchg
orl
ja
in
outsl
lock
mov
mov
sbb
and
stos
xorl
dec
rcr
repz
stos
pop
mov
addr16
mov
ret
xor
or
dec
cmp
nop
or
sbb
subb
lods
sbb
int3
jnp
xor
idivb
xchg
loopne
fistps
cmpl
movl
out
jmp
xchg
scas
movsb
aam
sahf
sub
inc
js
xor
sub
mov
out
cmp
sbb
jp
ret
jnp
or
adc
cmc
frstor
hlt
adc
data16
jp
es
push
int
pop
cmpsl
pop
pop
or
ss
push
sub
enter
stos
loopne
ret
pop
ss
pop
cmp
inc
and
faddl
stos
mov
pop
lret
xchg
sahf
ret
adc
xchg
dec
jl
iret
dec
into
push
cld
sahf
and
and
in
sub
enter
pop
addl
icebp
shrl
or
cmpsl
mov
lret
int
adc
icebp
mov
adc
aam
fisttpl
fimull
or
in
mov
aad
loop
mov
mov
out
inc
cmova
jecxz
sub
xor
xor
out
les
mov
gs
cmp
mov
inc
popf
xor
lahf
sbb
testb
mov
xlat
icebp
mov
jle
jns
xor
add
dec
cmpsb
fdivl
lods
in
and
je
rcrb
fimull
fcmove
outsl
sub
pop
lock
imul
fs
pop
and
xor
mov
fdivs
sbb
sub
xchg
pop
pop
mov
add
add
pop
in
mov
mov
lods
pop
ss
add
mov
inc
std
inc
fisubl
gs
fcmovb
cmp
jg
test
inc
cmpsb
inc
lds
jae
out
mov
dec
cmp
outsl
dec
stc
push
xor
cmp
mov
mov
jp
xchg
pop
inc
pop
mov
and
lret
dec
subl
out
dec
inc
lock
jne
ficomps
add
lods
bound
xchg
add
add
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
ds
int
cmp
xor
jle
mov
mov
jle
sbb
cli
int3
mov
jmp
mov
sbb
xchg
ljmp
jecxz
jno
pop
les
je
mov
sbb
in
and
rorl
pop
lahf
arpl
movsl
cmpsb
xor
cld
and
fimull
push
push
repnz
and
mov
or
mov
out
cwtl
push
xor
sub
stos
sub
out
imul
movb
dec
jmp
loop
andl
adc
les
cmpsl
mov
stc
xchg
ja
push
fwait
xor
cmpsl
cmp
adc
pop
stos
lret
jbe
dec
cmovs
sar
sub
mov
repz
in
inc
int3
jae
pop
jns
stc
jl
mov
sbb
lret
cmp
mov
movsl
into
jbe
inc
mov
daa
inc
scas
dec
ret
cs
sbb
jo
inc
add
add
pop
cmp
out
sub
aas
add
push
mov
pop
popf
testb
data16
dec
scas
lcall
in
out
mov
mov
mov
sbb
out
outsl
mov
adc
repnz
out
mov
ds
push
push
je
movsl
call
and
sbb
cltd
sbb
and
loopne
sub
cmp
and
or
test
lea
pop
shl
enter
mov
loope
xor
cmpsl
pop
in
into
rolb
add
lods
xor
or
rclb
int3
dec
popf
aam
pop
sbb
sbb
xchg
movsl
sbb
lods
jl
mov
xorb
loope
xchg
mov
ljmp
push
nop
or
loopne
push
fwait
mov
test
add
lret
push
or
jge
in
lea
adcl
dec
cmp
push
dec
loop
push
ret
mov
pop
inc
sub
dec
sti
mov
dec
mov
xor
stos
fs
xchg
add
add
fimuls
xchg
dec
sarb
jmp
xor
out
sbb
repz
insb
sbb
mov
pop
into
push
xchg
cmp
loop
stc
fs
icebp
and
jno
and
push
mov
sbb
loopne
or
imul
adc
xor
cmp
sub
mov
ficomps
xchg
aaa
and
movsb
lods
cmp
and
das
lcall
inc
xchg
dec
adc
mov
sub
shr
mov
adc
xchg
lea
in
and
add
jle
sbb
add
out
outsb
jp
inc
add
pop
sbb
and
shl
mov
xchg
call
enter
leave
mov
cmp
fprem
xchg
adc
cwtl
movl
sub
add
and
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
addr16
jle
jl
jle
les
sub
icebp
scas
sub
cwtl
pop
test
mov
mul
or
xchg
lahf
pusha
push
jno
pop
cmp
lock
mov
mov
push
sub
popa
dec
cli
xchg
push
in
ds
xor
rcl
add
push
and
xchg
out
add
push
and
mov
imull
je
arpl
cmp
and
xchg
incl
inc
mov
test
sti
sub
stos
add
nop
adc
rclb
or
dec
jmp
fucomip
adc
sub
loope
lods
imul
int3
dec
leave
lret
xor
sbb
and
mov
mov
mov
pop
add
cmp
adc
dec
out
repz
test
lret
jae
fisubs
sub
loop
je
bound
int
pop
dec
fildl
push
xchg
subl
jg
xchg
outsb
mov
jne
sti
cmp
sub
lock
push
subl
xor
and
outsb
ret
fiadds
ficoms
f2xm1
dec
mov
ret
jb
mov
leave
add
pop
jg
pushf
jle
int
or
push
push
insl
cmp
pop
mov
mov
dec
cmp
sub
add
daa
mov
mov
mov
ss
icebp
rclb
in
xor
mov
mov
inc
das
int3
mov
fwait
lock
lea
sub
pop
pop
inc
mov
ja
dec
pop
xor
dec
fwait
lods
adcb
cli
jno
mov
add
push
mov
sbb
out
aam
movsl
subb
adc
sbb
mov
jg
xchg
ljmp
push
bound
enter
jg
sub
andb
gs
xchg
mov
jp
cmpsl
movsb
imul
add
shlb
jp
inc
push
in
pop
pop
popf
push
cs
sbbl
inc
and
lcall
jmp
lock
out
and
test
mov
inc
add
xor
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
push
vcmpsd
jl
jle
clc
push
sti
hlt
xor
mov
mov
add
jl
lret
xchg
movsl
out
dec
loop
xchg
mov
aam
jo
ss
dec
shlb
das
cltd
pop
jne
jl
in
adc
cltd
cmp
push
xchg
or
xor
pop
test
add
cmp
int3
insb
je
iret
int3
mov
in
jne
repz
dec
std
mov
lods
in
add
lods
push
lahf
jp
and
arpl
inc
xor
pop
lret
jecxz
ja
orb
adc
mov
hlt
out
insb
mov
inc
dec
pop
xor
mov
or
loop
adc
in
xchg
jecxz
and
fs
es
pop
ret
dec
mov
int3
fisttpl
push
lcall
fisubrs
fsubrs
sub
pop
ljmp
xchg
lock
mov
mov
and
pop
out
in
jg
sbb
adc
pop
out
shlb
mov
loope
xlat
mov
cmpsl
movsl
pushf
sbb
in
pop
sbb
push
mov
pinsrw
mov
lods
sbb
inc
fimull
mov
jg
or
lahf
push
lods
xchg
or
insl
mov
mov
mov
dec
shlb
lods
pop
xor
cmp
je
xor
call
nop
mov
stos
cmp
call
dec
shrb
test
sti
aas
testl
push
push
shr
bsf
add
imul
and
call
jg
xor
cwtl
sbb
popf
das
aaa
adc
ret
ss
sbbl
add
mov
or
lcall
fistl
add
std
cmpsb
out
lods
push
lret
sub
out
int3
push
or
mov
xor
jne
iret
mov
test
xchg
jmp
out
and
scas
decl
in
xor
mov
mov
rcl
cmpsl
lret
dec
popa
lds
das
stos
xchg
insb
xchg
icebp
jg
xor
sbb
insl
sbb
pop
jns
cltd
pop
jns
sub
xchg
jge
push
inc
mov
test
scas
adc
cld
pushf
push
dec
push
cmp
bound
add
leave
sarl
mov
leave
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
fs
jle
and
jle
adc
cmp
sub
inc
mov
aad
add
mov
adc
sarl
lahf
xor
aas
divl
mov
inc
aad
lea
sarb
jmp
or
inc
mov
adc
popa
xchg
mov
mov
ss
daa
pop
mov
add
icebp
out
mov
xor
out
cmp
push
mov
xchg
jb
or
loopne
sub
hlt
adc
pop
scas
out
jb
xor
lods
or
xchg
mov
jmp
ror
movsl
call
orb
dec
aam
and
xchg
js
cmc
fistpll
push
jo
jne
push
hlt
jg
inc
loope
inc
lahf
mov
push
daa
pop
out
xor
or
mov
cltd
pop
sub
dec
and
add
inc
lret
pop
cmpsl
jns
nop
adc
adc
fdivr
repnz
push
mov
into
and
or
fistpl
cmpb
push
pop
cmp
sti
xchg
icebp
loope
clc
pop
pop
shll
test
cmp
incl
lea
aas
daa
or
sbb
ja
pop
xor
adc
lods
jl
cmp
sbb
aam
jge
loope
push
add
test
mov
cmpsb
insb
pop
mov
pop
hlt
icebp
js
or
das
and
enter
push
fidivs
push
jae
test
mov
mov
mov
and
outsl
pushf
loopne
cwtl
sub
mov
jae
push
cltd
pusha
cmp
jge
cmpxchg
jae
nop
push
fbld
imul
test
pop
mov
push
movsb
daa
frstor
pop
push
movsl
mov
and
add
adcb
cwtl
xor
jbe
insl
imul
add
sub
inc
push
add
iret
sbb
push
pop
jmp
addr16
and
ds
cs
push
add
adcb
xchg
inc
sti
daa
imul
aaa
or
cmp
mov
stos
cld
scas
fdivr
movsl
push
insb
xchg
movsb
les
or
jecxz
or
imul
lret
cmp
mov
int
push
inc
xchg
arpl
or
lods
xchg
and
daa
mov
mulb
int3
das
pop
ss
dec
test
pop
cmpsl
imul
loop
or
mov
and
push
pop
repnz
sbb
loopne
out
mov
xchg
lahf
je
mov
scas
pop
std
negl
xchg
shrb
js
shlb
jno
adc
nop
jmp
mov
jl
pusha
jo
jae
bound
mov
in
pop
inc
jne
xchg
sti
pop
xor
cmp
roll
push
mov
push
sub
enter
enter
sbb
jg
repz
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
arpl
and
jle
scas
xchg
dec
add
pushf
in
mov
mov
sub
push
mov
lcall
out
sbb
rolb
dec
pop
pop
mov
inc
cmp
push
mov
lods
cld
sbb
jl
stos
xchg
fisubl
int
imul
mov
push
jbe
cmpsl
das
test
fbstp
mov
fs
push
or
iret
adc
push
xor
cmp
sbb
mov
icebp
pop
dec
jne
push
add
repz
fstl
push
mov
out
rolb
adc
sub
stc
idivb
xchg
jecxz
sub
adc
cli
ljmp
dec
jnp
stos
mov
lds
stos
jne
inc
lcall
jl
sbb
cli
add
lds
lahf
xchg
test
inc
cmc
push
hlt
adc
push
adc
mov
popa
jge
fwait
xchg
dec
ret
sbb
imul
dec
adc
ds
add
mov
cmp
inc
inc
mov
repnz
sysret
fildll
and
mov
jecxz
mov
sbb
or
lret
xchg
jmp
xor
pop
xchg
fldcw
and
mov
dec
ja
mov
js
aam
mov
xchg
pop
fs
jo
int
divb
les
fimuls
das
push
movsl
push
push
loopne
sbb
mov
xchg
into
jbe
cmpsl
add
in
mov
cmpsl
pop
cmpsb
lcall
iret
adc
sub
push
movsb
xchg
xchg
inc
inc
arpl
fsts
ja
or
fisttps
loop
push
or
push
das
pop
adcb
les
and
je
inc
call
sub
jg
inc
sbb
loopne
or
sahf
imul
cmc
cmp
outsb
stos
jp
cmpsl
dec
dec
je
cmpl
fcoml
xor
mov
pop
pushf
xor
lea
adc
mov
xor
pop
mov
clc
leave
mov
pusha
mov
cmpsb
dec
in
push
cld
mov
add
dec
decl
adc
dec
jne
outsl
in
repz
out
cmp
mov
fisubs
sbbl
and
xor
mov
in
test
dec
push
pushl
sbb
and
adc
xchg
hlt
push
or
out
and
fiaddl
inc
pop
ds
dec
addr16
stos
gs
mov
cmp
call
sub
loop
aad
add
dec
pop
dec
aas
shlb
imul
outsl
hlt
imul
mov
fisubl
cmp
test
les
insl
lahf
test
and
sbb
push
sub
mov
lahf
imulb
add
xlat
cmpsl
fimuls
adc
and
cmp
daa
out
fiaddl
xor
enter
add
add
inc
clc
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
xchg
js
js
jle
and
jle
adc
repnz
jg
or
sub
sti
push
cltd
jmp
fstp
push
mov
mov
and
add
test
cmpsb
sub
orl
xor
pusha
xor
xchg
mov
cmp
repnz
aam
xchg
test
xorl
lods
repz
int3
iret
fistpll
mov
insl
and
and
in
nop
ss
call
jle
cmp
pop
aam
test
ds
ss
leave
fwait
jmp
adc
push
pop
xchg
fs
jp
xchg
jb
adc
lret
loopne
test
xlat
call
pop
pop
pop
ljmp
mull
stos
pop
fsubrl
jmp
push
cmp
add
pop
stc
inc
push
int3
dec
pusha
add
arpl
pop
or
stc
inc
int3
insb
loop
dec
cmpsl
pop
push
cmp
sbb
scas
inc
outsl
lea
mov
pop
ret
ss
push
mov
imul
call
mov
dec
out
lahf
add
jle
inc
pop
popa
mov
mov
or
xchg
stos
or
call
push
mov
sub
aas
jnp
into
pop
shrb
in
mov
sub
dec
aaa
adc
call
repz
jae
xor
xchg
outsl
shrb
mov
cmp
or
in
aad
insl
popa
pusha
repz
pop
das
or
rcrb
rorb
aaa
inc
dec
into
jg
push
push
adcl
push
pop
mov
dec
pop
fisubrs
mov
add
inc
mov
push
jl
ljmp
mov
xchg
inc
and
push
in
xchg
or
mov
mov
push
push
rcr
orb
das
cli
lods
sahf
outsb
adc
adc
xchg
dec
adc
dec
add
loope
add
jmp
int3
pop
mov
in
or
jg
xor
xor
cwtl
jmp
jge
xlat
pop
adc
jge
lods
negl
xchg
sub
xchg
nop
jb
xchg
sbb
inc
sbb
leave
fmulp
pop
pop
ret
ds
sbb
sbb
pop
imul
stos
mov
xchg
sub
clc
adc
mov
lock
repnz
std
faddl
ror
jmp
jmp
popf
mov
mov
test
bswap
mov
xchg
shrb
fldenv
or
rorl
ds
mov
cmpsl
aam
je
divb
push
mov
arpl
inc
and
dec
xchg
mov
mov
adc
and
or
cmc
pop
out
push
outsl
pop
or
aas
andl
sbb
fisubs
sbb
push
lods
je
ficoml
dec
cli
xchg
fcomps
cltd
pop
pop
or
bound
and
gs
xor
mov
xchg
dec
popf
cmp
fistpll
adc
add
rorl
lret
mov
cld
mov
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
loopne
or
in
jle
sub
cmpsb
mov
xor
daa
mov
pop
ja
fsubp
int3
out
sbb
jmp
cmp
mov
push
imul
push
mov
mov
repnz
fstpl
faddp
push
xor
pop
lret
loopne
mov
xchg
andb
adcb
jb
pop
mov
pusha
ret
dec
insl
jns
sbb
lret
adc
dec
lods
movsb
jmp
mov
inc
aad
mov
test
fcompl
adc
inc
dec
shll
ficoml
xchg
add
cmp
rcrl
dec
xchg
push
aas
ljmp
pop
out
cmc
mov
mov
out
lahf
jne
sahf
fnstsw
in
std
test
cmc
push
xor
pop
ficomps
les
jno
pop
lret
or
loope
cmpsb
dec
loope
lret
setno
aaa
cmp
and
and
adc
sahf
je
clc
jae
shrb
hlt
test
push
mov
push
lods
xchg
mul
outsl
std
outsl
adc
cmovg
adc
divl
and
adc
lret
cmpsb
cli
adc
xor
mov
adc
mov
bound
fwait
sbb
shll
repnz
lcall
lahf
lret
movl
inc
movl
mov
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
mov
xlat
jle
in
jle
jle
scas
loopne
lock
into
mov
mov
mov
addr16
inc
sbb
mov
ret
negl
sbb
mov
add
mov
test
ret
es
jnp
test
mov
les
ret
pop
pop
and
movsb
push
cli
shrl
pop
pushf
inc
dec
mov
call
mov
mov
sub
sti
jmp
es
rcll
dec
adc
xchg
add
int
inc
cmp
xor
les
sbbl
lds
decb
or
inc
adcb
popf
out
in
pop
or
aad
xor
test
add
push
in
icebp
jmp
xchg
fdiv
adc
test
subl
roll
dec
imul
adc
xlat
ja
loop
gs
rclb
sbb
int3
inc
xor
lahf
mov
iret
sbbb
jnp
jbe
push
adc
fidivl
stc
add
cmpsb
lods
andl
and
xor
mov
rclb
scas
jns
jge
xorb
fstps
and
sbb
cli
fiadds
aaa
mov
dec
stc
jg
iret
add
add
push
roll
jo
add
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
mov
or
popa
aam
lock
call
scas
loop
add
incl
es
mov
mov
into
pop
and
movl
shll
cs
outsl
xlat
fists
adc
sahf
xchg
stc
mov
add
arpl
addr16
hlt
or
out
cmpsl
jmp
or
jns
scas
fcomps
push
jbe
ss
xor
sbb
out
sub
adc
loopne
xor
jg
dec
lds
fcompl
inc
mov
icebp
inc
adc
adcb
mov
cmpsl
subb
loop
mov
fisttpl
gs
add
push
mov
xor
jle
popf
nop
sarb
sahf
stos
xchg
cmp
mov
and
les
outsl
xchg
pop
mov
xchg
adc
jl
insb
jecxz
fdivs
frstor
imul
lock
push
mov
inc
lods
push
cmp
in
movsl
outsb
inc
daa
dec
das
mov
push
cwtl
push
leave
divb
mov
out
aad
mov
pop
ljmp
test
mov
test
out
lret
sbb
or
xlat
mov
adc
inc
call
mov
add
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
jle
add
in
sarb
in
jle
push
call
jmp
test
ja
bound
mov
xchg
dec
inc
jae
push
rclb
mov
push
jb
mov
xor
xchg
jno
in
xor
mov
adc
sarl
daa
xchg
lock
sub
jmp
add
jle
cmp
xor
aas
mov
repz
jne
dec
fcmovnbe
js
adc
adc
sbb
sbb
jbe
popf
aaa
popf
movsb
mov
jne
nop
sbb
inc
out
in
fs
in
pop
add
add
pop
jb
mov
push
sub
add
and
ds
sti
mov
add
movsl
push
mov
add
arpl
stc
decb
add
sbb
cwtl
pop
fisttpll
test
aas
bt
mov
lds
outsb
adc
fstps
les
aad
cmp
pop
xor
xchg
xor
les
lahf
inc
mov
pushf
stc
fsubs
xchg
push
in
pop
pop
mov
or
jle
mov
loopne
repz
data16
fldenv
xorl
inc
stc
negb
or
aam
jmp
add
push
add
jne
cmp
cli
hlt
fimuls
mov
xor
add
jmp
adc
test
or
sarl
in
jle
xorl
movsl
daa
jno
mov
pusha
or
in
or
jne
push
sbb
xchg
cmp
jmp
xor
es
jmp
push
jmp
xor
jmp
cmp
inc
ljmp
push
push
cmp
popa
insb
xchg
clc
push
dec
shl
or
and
movsl
adc
xor
cmp
or
and
mov
fwait
xor
or
fcoms
pop
idivl
ja
dec
and
cmpsl
dec
adc
cs
mov
and
shll
in
mov
testl
inc
xchg
sub
xchg
movsb
or
test
sub
adc
jne
out
jmp
loopne
ret
xchg
lods
mov
lret
test
cmp
jge
popf
cmp
fnstenv
cltd
data16
xchg
inc
push
lret
xchg
mov
pop
rcll
xchg
adc
mov
lock
mov
xor
lahf
testl
pop
dec
mov
pop
adc
adc
or
aam
jge
fs
ret
sub
cmpl
jb
decl
out
mov
add
or
incb
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
es
sarl
in
jle
bound
dec
lret
xchg
mov
repnz
jo
mov
leave
push
ljmp
movsl
test
daa
add
or
pop
jo
call
adc
cli
xor
in
lock
pop
dec
cs
sub
jg
adc
inc
xlat
test
mov
in
cld
push
cwtl
mov
addb
jne
scas
dec
adc
cmc
add
dec
jae
mov
mov
daa
mov
fs
into
popa
popf
mov
xor
push
dec
xlat
faddp
in
mov
ljmp
shlb
sub
mov
cwtl
xchg
cli
jecxz
sub
addl
add
dec
xlat
jo
inc
movsl
out
leave
jnp
cmp
cmc
or
xor
insb
aad
jbe
out
or
sub
jle
cltd
das
xor
adc
dec
sbb
pop
movsl
outsb
fwait
xchg
xlat
or
mov
and
inc
xlat
arpl
mov
ret
lea
icebp
shr
je
and
lret
jno
xchg
sbb
lock
lret
pop
pop
test
inc
jo
mov
mov
sbb
nop
and
dec
movsl
std
jmp
cmp
xchg
sub
loopne
dec
push
leave
sbbl
push
jb
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
adc
fidivrs
in
jle
mov
inc
xor
or
das
cmpsl
push
add
xchg
pop
or
pop
inc
dec
loop
mov
push
ror
leave
dec
test
xchg
push
mov
sub
mov
bound
lds
mov
inc
push
sbbb
sahf
ds
xor
pusha
and
xchg
xchg
int3
fs
push
or
mov
mov
jge
mov
or
call
scas
shll
bound
or
jo
jbe
pop
add
aad
push
mov
rclb
fidivrl
loopne
ja
ds
data16
in
test
test
or
xchg
iret
call
adc
loop
out
cmp
adc
mov
hlt
xor
mov
inc
insl
icebp
adc
mov
std
mov
adc
rolb
loope
or
data16
and
inc
lret
cmpsl
mov
popf
mov
xchg
xchg
dec
cli
mov
loop
mov
jae
add
mov
in
jle
mov
aaa
ja
push
push
dec
out
sub
pop
pop
lret
xor
lcall
and
les
mov
xchg
mov
or
les
dec
div
jl
xchg
sub
jl
js
add
imul
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
add
mov
jle
in
jle
adc
mov
pop
rcll
data16
xchg
sbb
subl
mov
cmp
lret
call
in
lret
jae
sbb
xchg
jle
and
scas
add
outsb
xchg
mov
inc
pushf
aas
adc
jle,pn
insl
xchg
jecxz
mov
aaa
xchg
out
adc
inc
jg
sub
cmp
das
pop
pop
mov
outsl
fucomi
enter
jl
addb
in
push
pop
sahf
jae
mov
jo
adc
fisttpl
pop
inc
dec
ret
or
repz
jg
xchg
push
in
sbbb
neg
or
jle
mov
mov
push
and
mov
mov
cld
cmc
mov
les
or
sbb
negb
ret
push
ficompl
mov
cmpsl
mov
adc
xchg
adc
mov
or
xchg
divl
inc
add
mov
ror
loopne
les
sbb
jnp
scas
push
mov
fists
fisttpll
or
sbb
es
xor
pusha
lea
test
xor
leave
adc
cld
scas
push
xor
loope
rorl
sub
dec
add
data16
pop
jle
inc
divl
ret
or
jp
test
decl
add
idiv
decl
add
add
xchg
xor
jmp
cli
fnstsw
in
jle
es
mov
dec
repz
popa
xlat
mov
and
into
fwait
xor
or
xchg
pop
sub
ret
roll
iret
leave
jge
pusha
ror
test
lock
or
mov
cmp
adc
lds
push
push
mov
lods
jbe
pushf
inc
lcall
in
das
dec
gs
push
and
dec
xor
cmp
mov
mov
sbb
in
out
sbb
push
xchg
push
xor
or
inc
fsubrp
pushf
mov
pushf
das
scas
and
inc
adc
arpl
inc
in
stc
cmp
push
jmp
stos
int3
dec
push
fnstsw
mov
sbb
mov
inc
shr
mov
fwait
mov
ret
popf
jmp
xor
je
lcall
push
dec
rcll
sub
push
imul
dec
call
out
ret
shrl
cli
sbb
adcb
push
ljmp
lret
das
fcoms
push
cmp
fcmovnb
lcall
lcall
pushf
std
xchg
xchg
int
push
mov
arpl
add
sub
insl
cli
push
sub
cmp
fwait
dec
adc
insb
notl
push
dec
mov
inc
ljmp
ss
adc
jl
mov
inc
push
xchg
rolb
mov
and
ds
cmp
je
mov
jmp
push
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
fs
fidivrl
jp
jle
data16
stos
int
cmc
bound
jge
mov
sub
push
mov
dec
sub
jb
lods
lock
push
jne
int3
xchg
mov
sbb
jae
sbb
test
incb
repnz
mov
dec
and
leave
jno
push
or
add
repnz
or
lret
jg
ds
dec
movsl
rclb
fmul
popa
jecxz
ljmp
lret
lds
loope
mov
and
or
pusha
mov
addr16
xlat
into
stos
mov
push
das
roll
xchg
popf
shrb
call
mull
dec
cmc
imul
icebp
lahf
sub
dec
pop
call
mov
sub
push
icebp
divl
or
mov
mov
inc
sbb
icebp
xchg
or
test
adc
mov
in
push
repnz
loop
dec
in
jnp
adc
and
add
xchg
repz
cmpsb
stos
in
lret
ljmp
fstl
cmp
adc
roll
les
mov
scas
ret
fisubrl
mov
in
scas
lods
jnp
xchg
xchg
jnp
popa
jbe
adc
pusha
mov
cvtps2pd
inc
cld
adc
je
rcr
inc
push
out
addl
in
cmp
add
inc
push
cli
jo
mov
aad
push
sbb
lock
push
sbb
clc
dec
jns
inc
movsl
jnp
push
ret
sbb
or
mov
gs
push
int
mov
icebp
push
jp
xchg
addr16
sub
lcall
xchg
mov
nop
mov
int
and
jp
xchg
inc
jne
and
lret
xchg
fmuls
or
test
adc
in
mov
data16
push
inc
pop
cs
cmpsb
mov
pop
ffreep
cmp
and
lods
inc
jne
pop
xor
popf
mov
leave
xor
cld
dec
inc
jge
pop
pop
dec
add
test
mov
in
shlb
ja
adc
adc
mov
cmp
das
shlb
out
mov
idivb
push
mov
and
inc
jb
mov
xchg
dec
dec
mov
inc
xchg
fwait
xor
movsb
movsl
loop
jg
add
jmp
adc
mov
nop
inc
jmp
jbe
or
cld
int
les
rclb
popa
dec
test
pop
stc
cmpsb
fucompp
ret
add
lods
ds
push
movsl
cs
rcrl
cli
xchg
std
ja
adc
jl
iret
adc
into
popa
lods
data16
aaa
ds
idiv
test
or
xlat
xor
pop
push
pop
rcl
xor
xchg
mov
xor
sub
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
jle
fnstcw
jp
jle
repnz
jge
gs
aaa
cld
xor
push
adc
add
pop
xchg
pop
insl
mov
out
or
pop
or
cmp
das
mov
pop
push
rcr
xchg
arpl
inc
mov
repnz
lea
mov
push
inc
roll
mov
sbb
jo
subl
lea
xchg
mov
shlb
lret
and
iret
arpl
aas
sub
jb
loop
shlb
xor
inc
mov
add
adc
mov
cmp
leave
jp
push
scas
xchg
inc
daa
pop
jne
jmp
addr16
loopne
loope
pop
and
sub
loop
sub
xor
sti
push
test
mov
jl
outsl
daa
clc
jb
stc
sub
pushf
dec
jne
adcb
or
fucomp
ret
les
test
xor
sub
mov
xchg
dec
mov
aas
or
inc
les
sbb
leave
scas
cwtl
cmp
pop
outsl
js
mov
sbb
cmp
jb
jb
pop
negl
cld
xchg
adc
imul
sbb
enter
rcr
mov
xchg
cld
pop
nop
sbb
lret
add
lcall
in
sbb
mov
mov
jno
and
jno
or
lret
nop
arpl
dec
loop
jp
loop
popa
fwait
inc
push
popa
negb
mov
in
push
sub
in
inc
cmpsl
pop
movb
pop
pop
mov
jne
or
cmp
sub
mov
cmpsl
sbb
push
xchg
push
lea
xchg
and
dec
sbb
aas
shrl
push
mov
pop
dec
mov
cmpsl
jae
push
dec
sbb
sbb
jnp
mov
stc
popa
mov
scas
and
les
std
dec
mov
mov
fucomi
mov
or
rcrb
inc
cmpsl
inc
cwtl
lock
insb
hlt
in
bound
or
sbb
movsb
cmp
pop
scas
lds
mov
imul
mov
pop
dec
shlb
dec
sti
cmp
jne
jns
fwait
stos
lcall
lret
inc
aad
or
fsubp
mov
jo
pop
shrb
fs
iret
das
cmp
mov
pop
jb
or
movsb
cmp
xchg
xor
add
in
jns
divl
in
cmp
dec
jg
jb
pop
mov
xor
andl
dec
hlt
dec
call
icebp
mov
jae
cmp
mov
cs
add
push
dec
cmp
std
sbb
lods
int
int3
adc
sub
sbb
sub
mov
jae
andl
lret
rolb
ljmp
mov
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
frstor
in
jle
jge
jle
cmp
unpcklps
push
outsl
xchg
lods
xchg
dec
mov
enter
fmuls
das
pushf
or
dec
add
inc
and
aam
add
adc
dec
mov
ss
jecxz
jp,pt
aaa
insb
ss
dec
inc
nop
xchg
cltd
xchg
outsb
leave
sub
cmp
xchg
jp
lds
inc
cli
dec
fcompl
xor
add
orb
adc
add
sbb
pop
and
sbb
flds
std
sti
xchg
stos
fdivrs
sub
xlat
imul
dec
out
xor
pop
fimull
jbe,pt
mov
mov
in
push
fadds
fists
mov
pop
fbld
test
mov
pop
pop
cmp
loope
or
adc
fwait
imul
or
push
lea
mov
and
dec
and
xor
repnz
mov
andl
add
out
rcrl
fisttpll
jne
pusha
cld
sahf
sub
popf
pop
mov
lcall
insb
vphaddwd
inc
adc
mov
xchg
test
mov
outsl
aas
dec
xchg
scas
das
lock
sbb
scas
dec
mov
add
mov
mov
push
mov
nop
sub
in
xchg
int3
push
cmpsl
in
jno
sub
popa
fcom
leave
jbe
ljmp
aaa
mov
xchg
lock
inc
movsb
pop
ret
mov
mov
lds
imul
loope
pop
rcrb
or
cmp
test
cli
add
ret
jg
jo
ja
jbe
subb
in
xor
mov
jb
iret
xor
pop
int
popa
mov
lods
xchg
inc
daa
es
jmp
fiaddl
call
jnp
xchg
in
mov
sbb
imul
loop
gs
int3
aam
cmpsb
mov
movsl
ds
inc
jne
sub
xlat
xchg
cld
fisttpll
push
mov
repnz
sub
shlb
into
lea
pop
mov
out
add
mov
insb
es
xchg
test
add
adc
out
mov
sbb
repnz
xchg
pop
and
clc
nop
xchg
sbb
mov
pop
repnz
je
andl
comiss
jle
xor
mov
adc
add
hlt
sbb
jb
jnp
inc
or
in
mov
sub
pop
cli
cmp
lret
test
fwait
xchg
fcmovb
ja
sub
jle
jns,pn
movsl
dec
and
idivl
jo
mov
inc
lcall
out
sbb
dec
mov
movb
add
call
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
sub
or
jle
jge
jle
pop
ss
push
pop
aas
mov
xlat
xor
call
leave
push
inc
jmp
xchg
add
aas
cwtl
sub
inc
pusha
push
addr16
jl
push
enter
pop
mov
jns
xchg
sbb
push
mov
stos
pop
jl
pop
aad
scas
adc
stos
sbb
mov
hlt
mov
inc
sahf
pop
in
xchg
push
les
xchg
adc
sbb
push
lcall
cmp
in
stos
sbb
cs
pop
fisttps
dec
ret
rolb
lods
fs
xchg
inc
cmp
ficoml
out
mov
mov
insl
xor
cwtl
enter
jb
neg
and
dec
xor
imul
xchg
inc
ss
mov
loope
jp
xorl
xor
mov
movsb
fcmovne
lret
mov
das
scas
cmp
xchg
dec
imul
xchg
mov
cmp
pop
pushf
test
call
rclb
fwait
mov
jne
dec
or
inc
das
hlt
loop
push
popa
std
scas
jns
fcmovne
cmpsb
add
jns
jae
aad
stos
sub
mov
inc
mov
jbe
mov
imul
dec
mov
dec
jle
mov
in
or
dec
je
jae
xor
add
ret
adc
inc
lret
adc
je
dec
adc
xor
aaa
cmp
pop
fdivrl
fldl2t
adc
scas
shrb
jae
loope
jmp
or
cltd
xor
pushf
in
sub
jne
cmc
movl
lods
dec
push
cmpb
aam
enter
xchg
mov
mov
faddl
lcall
xchg
pop
ljmp
push
lock
adc
or
daa
or
test
ja
or
push
mov
leave
sub
sub
push
cmp
and
popa
jecxz
xor
enter
pop
and
cmc
jmp
movsl
push
daa
cmc
dec
dec
aad
dec
push
leave
aad
mov
inc
rol
mov
test
lods
dec
fucom
adc
repnz
inc
add
outsl
outsb
dec
into
das
rcll
fwait
les
loopne
dec
dec
jae
idivl
add
sub
fdivp
mov
sbb
fldl
fs
jle
arpl
push
popa
fsubs
adc
xchg
cltd
leave
mov
jo
and
cs
push
orl
mov
rclb
cmp
adc
and
sbb
insl
mov
nop
xchg
xor
inc
push
and
fistl
cmp
shrb
neg
inc
pop
jg
jge
dec
sarl
incb
je
and
mov
loop
dec
sbb
inc
clc
push
inc
cmp
dec
lock
add
mov
mov
mov
jmp
enter
enter
sbb
mull
push
mov
jle
jge
jle
jo
mov
jmp
inc
jb
mov
mov
cmpsb
pop
gs
clc
loopne
insb
inc
mov
cli
sahf
adc
push
ficompl
mov
add
add
mov
jae
sbb
jg
add
test
push
xchg
or
push
stos
insl
push
push
leave
mov
dec
dec
inc
mov
aaa
mov
mov
pop
jl
es
stos
sbb
lahf
pop
pop
mul
or
loopw
sub
repz
mov
movsl
pop
out
lahf
jle
movsl
ds
add
aam
insl
out
mov
cmp
adc
les
dec
fidivrs
popa
pop
xchg
adc
pop
popf
push
pop
insl
es
daa
dec
mov
mov
addb
jecxz
addr16
add
push
cld
mov
notl
int3
test
jns
call
sar
dec
mov
sbbb
shrb
fmuls
enter
cmp
test
cmp
jecxz
test
cs
inc
inc
cmc
jno
inc
enter
jnp
push
inc
idivb
les
lods
out
mov
push
mov
lock
xchg
pop
inc
movsb
inc
pop
push
cld
mov
jno
jmp
pop
test
dec
out
push
es
sub
cmp
bound
sub
jo
cmpsb
testb
pop
cmpl
testb
adc
test
loopne
nop
cmp
xchg
mov
adc
jno
sti
ret
out
out
and
jecxz
sub
mov
xchg
jg
lock
data16
xor
mov
repz
mov
adc
jns
fwait
xchg
adc
xor
lahf
es
mov
pusha
ljmp
and
xor
cmp
inc
dec
lods
fs
adc
cltd
mov
pop
aas
into
mov
jne
mov
add
insl
sahf
sub
cmp
sbb
andl
ss
cltd
ror
push
nop
jp
inc
rclb
lds
imul
push
dec
lds
fisttpll
pushf
push
loopne
addr16
pop
xchg
sahf
in
xlat
fwait
lcall
test
adc
addb
adc
mov
jne
test
jmp
inc
inc
cmpsl
jle
sbb
or
into
subb
mov
add
jbe
in
fcomps
mov
fmuls
or
hlt
mov
stos
adc
rorb
rorl
push
stc
push
mov
cmp
aad
push
scas
push
gs
jecxz
xchg
jbe
sbb
push
sarl
jge
or
dec
out
xor
rcrb
mov
fildll
sti
and
test
popf
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
aad
leave
popf
jl
jle
jp
jle
outsb
dec
hlt
push
or
aad
adc
cmc
push
jb
mov
jmp
scas
pop
pop
xchg
cltd
inc
xchg
movl
mov
arpl
sub
jnp
into
sub
es
hlt
jnp
adcl
sti
repnz
push
xchg
out
fwait
cs
sbb
jle
mov
lret
ficomps
fcoms
xchg
andb
mov
adc
cmp
dec
add
les
add
les
or
xchg
push
push
lea
testl
out
adc
and
jg
mov
popa
lahf
sbb
pop
leave
lcall
cmp
jl
insb
xchg
xchg
mov
or
stos
icebp
lcall
in
fbstp
mov
sub
mov
sbb
lahf
sbb
fnstenv
mov
push
sahf
js
in
scas
and
mov
mov
fildll
sbb
push
das
mov
out
mov
jbe
aas
cmp
jge
sub
lods
mov
add
pop
stos
sub
movsb
adc
mov
loope
shlb
lcall
stc
sbb
xorl
adc
in
mov
add
insb
outsb
mov
aad
and
mov
cltd
movsb
fldt
jmp
dec
adc
aam
popf
icebp
lock
xchg
inc
dec
and
sbb
sub
push
ja
jmp
imul
and
xchg
xchg
cmp
and
dec
arpl
dec
repnz
xor
lods
ja
es
xor
fsts
idivl
jo
loope
cli
xchg
mov
push
or
sub
int3
pop
xlat
xor
push
cli
mov
ret
sbb
pop
cmp
movsb
into
mov
xor
push
stos
mov
lea
jbe
mov
repz
stos
cmc
or
dec
mov
out
cmp
inc
jp
jo
mov
mov
adc
int3
adc
mov
inc
jl
jo
dec
mov
jmp
inc
cli
jmp
mov
add
aaa
imul
jbe
ror
jl
push
jb
inc
jne
and
fimull
mov
in
lret
int
mov
testb
dec
push
test
pop
cmp
sbbb
lcall
push
mov
jae
lahf
mov
xchg
and
lea
pop
jo
xchg
rcrl
push
adc
scas
push
aam
fsubrl
scas
mov
int
popa
pop
enter
mov
repnz
out
adc
aad
and
dec
xchg
xor
std
mov
push
mov
pop
and
mov
push
in
add
jmp
in
notb
sub
push
rorl
jmp
jle
gs
fmuls
fsubrl
inc
and
loope
popf
mov
cltd
cmp
and
int
push
gs
mov
jmp
inc
mov
ffreep
cmp
mov
gs
dec
popf
movsl
push
inc
sub
xchg
aad
fimull
pusha
xor
loopne
arpl
cmp
out
pop
mov
xor
adc
rcrb
dec
pop
adc
cld
or
or
sarb
jge
test
inc
pushf
insb
inc
mov
dec
insl
sub
jne
mov
sub
orl
mov
mov
fcomps
imul
addr16
and
scas
fst
cmp
xchg
or
jae
js
or
subb
test
adc
stc
lds
push
or
test
aam
sub
push
xor
cwtl
xchg
clc
dec
push
movsb
xchg
adc
cvttps2pi
xchg
ljmp
inc
out
adc
mov
sti
xchg
jmp
sub
push
mov
shll
mov
mov
jnp
test
jmp
sub
and
shl
xchg
dec
cltd
jge
or
popa
fisubrs
rep
data16
xchg
mov
cs
xchg
lret
je
out
cltd
test
jecxz
ret
outsb
nop
or
ds
adc
mov
add
xor
rcrl
mov
mov
pop
insb
and
push
es
popf
stc
outsl
adc
mov
fildl
inc
cs
repz
fisubs
lock
push
push
cld
andb
jb
lods
mov
pop
jmp
outsb
inc
shr
sbb
enter
mov
pop
add
aam
mov
cmp
push
pop
idiv
jb
js
cmp
add
cmp
adc
lods
jmp
xor
pushfw
loope
and
orl
adc
pushf
push
add
adc
out
sbb
or
push
popf
test
lahf
dec
rcrl
cmp
loope
test
mov
cltd
divl
jl
outsb
pop
pop
xchg
xor
scas
pushf
insl
mov
pop
or
and
imul
js
mov
cmp
insb
adcl
daa
sbb
mov
es
and
outsb
lret
je
out
test
jnp
icebp
adc
ja
dec
lods
push
loopne
inc
fs
frstor
test
push
ds
sbb
lahf
mov
pop
inc
and
mov
pop
les
ljmp
push
das
mov
call
pop
sub
hlt
cs
mov
jbe
popa
sub
inc
test
fdivl
push
and
add
mov
mov
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
movsb
fiaddl
jle
jp
jle
inc
cmc
xchg
cs
push
cmc
dec
inc
dec
arpl
xor
jp
fmulp
sbb
dec
inc
mov
cld
xor
inc
shll
jo
test
sbb
jle
enter
int3
cmp
or
stc
sbb
cmp
mov
mov
push
add
xor
or
mov
loope
xchg
jns
cmpsl
dec
int
cmp
pop
adc
lret
xchg
mov
test
mov
mov
lods
push
cmpsl
mov
push
cmp
pusha
jnp
push
fsubrs
lahf
dec
cli
sarl
pop
xchg
jmp
push
cmpsl
xchg
test
clc
dec
loop
mov
ljmp
dec
adc
sahf
adc
pop
dec
test
cmp
lock
push
mov
test
je
icebp
pandn
fs
push
ss
addr16
fwait
cmpsb
fldenv
mov
shrl
cmp
loope
jp
xor
fwait
adc
xlat
pop
sbb
repnz
imul
xchg
dec
dec
inc
lahf
aaa
mov
arpl
pop
push
out
and
scas
push
mov
mov
mov
and
mov
mov
out
stc
sbb
movsl
lea
rcrl
adc
in
xchg
push
sbb
mov
cli
fwait
mov
inc
cmp
shll
fwait
into
push
mov
mov
xchg
dec
mov
ds
rcr
jb
inc
jnp
push
push
scas
add
jmp
xor
gs
loope
jno
jp
and
pop
lret
inc
cmpsb
inc
mov
icebp
jo
push
dec
fstp
push
jl
cmp
ret
pop
mov
bnd
pop
cmp
nop
dec
sub
xchg
aaa
add
insb
bound
sbb
aas
inc
sti
mov
mov
sbb
pmaxub
mov
sub
sub
pop
dec
xchg
jp
sarb
or
sub
mov
dec
into
lods
int3
shll
inc
ja
pop
xchg
lret
ror
out
fldl2e
pop
lods
cmp
dec
adc
jmp
icebp
sbb
or
mov
lret
cmpsb
mov
enter
xor
inc
andl
mov
js
fldt
cmp
into
pop
sahf
and
loopne
leave
imul
loop
mov
mov
hlt
push
cld
push
dec
shr
sahf
dec
mov
loope
lock
pop
shrb
and
sbb
and
push
and
pop
jb
inc
int3
loopne
lcall
mov
push
scas
js
mov
cmp
or
mov
pushf
cmp
jl
lahf
sbb
add
les
icebp
cld
dec
fists
push
push
jne
adc
shrb
cmp
dec
mulps
jl
clc
jo
jo
pop
mov
cld
mov
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
int3
add
jle
jp
jle
mov
dec
leave
in
aaa
xor
dec
fucom
inc
dec
aas
repz
setge
inc
jp
sub
cs
mov
out
jbe
test
cmp
and
ja
dec
sti
outsl
data16
fbstp
xchg
test
stc
scas
iret
outsb
les
xor
pop
popa
dec
ss
aad
lret
or
nop
je
iret
cmc
mov
push
imul
push
jp
clc
and
jo
jb
pushfw
sub
clc
fistpl
js
fldl
xchg
ja
imul
repnz
cwtl
push
int3
aas
xchg
dec
mov
repz
call
push
loopne
adc
leave
jae
shll
inc
jb
in
les
add
dec
ror
loopne
fsubl
loopne
push
adc
adc
and
jg
jecxz
push
data16
lea
inc
push
inc
xor
mov
sbb
imul
push
lock
inc
sub
jp
in
ret
rcrl
push
int3
nop
or
lods
jne
add
jmp
dec
jno
sub
outsb
sbb
pop
and
addr16
outsb
push
cwtl
inc
push
fnstsw
xlat
or
aas
push
icebp
push
xor
aas
addl
mov
jne
fimuls
xor
rcrl
rolb
jp
repnz
enter
stos
pusha
daa
cmovo
iret
sbb
jmp
sbb
add
push
mov
fidivs
dec
out
or
xchg
mov
pop
or
lock
int3
mov
andl
lock
in
loope
andl
cli
xchg
inc
or
pushf
clc
outsl
out
movsb
orl
sub
mov
int
mov
xchg
adc
mov
jmp
aad
pop
sub
push
or
call
add
stos
dec
add
fbstp
clc
lret
and
arpl
mov
iret
add
dec
cltd
das
adc
or
fdivrp
sbb
inc
aas
int3
in
insl
sahf
call
mov
aas
arpl
jge
cmp
lds
in
imul
dec
je
sbb
mov
mov
inc
push
or
imul
repz
xchg
int3
mov
pop
leave
dec
je
movsb
cs
in
ja
inc
repnz
lret
mov
test
mov
stos
mov
mov
stc
enter
in
negl
cwtl
mov
cmpl
mov
cmpsb
jbe
cmp
ret
inc
jb
mov
movsb
dec
xchg
out
mov
mov
mov
push
pop
xchg
push
test
jb
xor
push
in
ficompl
sub
hlt
push
movsb
mov
loop
dec
mov
mov
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
dec
out
fs
jle
jp
jle
mov
or
xchg
cmp
into
add
je
movsb
pushf
sub
push
aam
xchg
sbb
mov
dec
cli
dec
les
mov
fsqrt
out
push
cmp
inc
dec
or
mov
inc
rorl
cmc
out
notb
imul
mov
mov
aam
add
cmp
mov
cmc
or
jb
and
add
sbb
fidivl
movsb
sub
push
push
jnp
movsl
std
and
dec
push
lret
push
pop
ret
pop
sbb
xchg
fwait
js
pop
sahf
or
mov
cmp
insb
outsb
in
push
sti
sub
fcomps
lods
or
mov
in
scas
add
inc
ds
fildll
pop
mov
and
adc
lods
add
push
fwait
clc
cmpsl
inc
mov
or
loope
inc
stos
dec
sub
ss
mov
and
inc
popa
inc
aad
cmp
arpl
cmpsl
xor
mov
adc
xchg
stos
inc
or
sub
add
pop
mov
jns
mov
adc
fldt
stos
cwtl
jecxz
test
mov
push
iret
lret
ret
fildll
jmp
mov
sbb
and
mov
sub
and
hlt
test
dec
popa
in
xor
test
mov
and
cltd
mov
xor
push
jecxz
sti
sti
pop
lock
xor
dec
pushf
push
ret
or
xchg
jno
push
adc
push
inc
xor
adc
mov
sbb
ret
ss
mov
loopne
dec
pop
pop
push
jecxz
mov
stc
mov
insl
add
les
imul
mov
fbld
add
sbb
sbb
arpl
mov
push
out
dec
xor
xor
sub
and
xor
test
dec
mov
xchg
mov
xor
adc
ret
scas
pop
daa
mov
cld
jno
inc
jge
clc
jmp
jl
xchg
data16
scas
push
xchg
fstpl
adc
pop
imul
push
push
sbb
movsb
call
mov
rcrb
cmpsl
mov
pop
aam
xlat
jge
imull
jae
inc
pop
mov
mov
gs
jne
test
xchg
test
dec
arpl
cwtl
mov
aas
push
mov
push
sub
mov
lea
mov
scas
add
aaa
push
mov
in
xor
scas
mov
jae
xorl
ret
shll
jb
std
fs
int3
aaa
cltd
mov
sbb
dec
scas
shrb
sbb
fidivrs
xor
dec
clc
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
mov
in
dec
out
pop
mov
or
test
xlat
outsb
adc
inc
and
add
rcr
pop
jmp
lcall
dec
aas
cltd
mov
jno
mov
or
sub
dec
sub
cli
loope
pop
mov
test
lret
xor
sub
test
rorb
pop
sbb
and
lcall
aam
ret
add
mov
orb
or
cmp
push
mov
es
pop
sbb
mov
dec
xor
cmp
xor
fsubrs
xor
push
mov
adc
int3
mov
mov
pop
test
cmpsb
filds
out
and
cmp
mov
lcall
jne
jl
pusha
adc
imul
outsb
adc
mov
push
or
xor
sbb
push
xlat
jae
xor
xchg
roll
repnz
xchg
dec
mov
pop
shrl
mov
xchg
inc
sub
xchg
push
cmp
push
iret
nop
push
mov
mov
int
les
icebp
jmp
cmpsb
and
and
mov
sbb
mov
xchg
pop
gs
subb
push
xchg
jmp
pushf
sbb
pusha
shrb
pop
ret
or
mov
pop
fs
out
or
push
daa
dec
dec
mov
iret
mov
aaa
int
repz
imul
loop
xchg
in
dec
dec
addr16
sbb
pop
out
inc
push
aad
pop
ja
mov
push
repnz
fisttps
inc
out
in
paddw
sbb
or
scas
sarb
jne
mov
pop
les
xchg
out
pushf
or
movsl
pop
push
and
faddl
shll
jecxz
cmp
or
sbb
jmp
cmp
cmpsb
cmp
sbb
cmp
js
inc
test
mov
pusha
fldpi
icebp
data16
aas
adc
or
jp
mov
jmp
fimuls
xor
lods
lock
aas
pop
daa
pop
in
sbb
mov
cmc
dec
andnps
mov
das
pop
jb
je
inc
shrl
mov
cmpl
add
roll
dec
or
pop
out
adc
fimuls
mov
and
sub
push
xchg
xchg
jb
cmpb
adc
imul
popa
or
adc
jae
add
movsb
dec
sahf
jne
std
add
test
popf
push
imul
xor
or
push
icebp
and
arpl
jb
or
or
test
loope
cmc
cmp
lock
popf
hlt
loopne
lea
jmp
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
test
jle
jge
jle
and
ret
out
dec
pop
adc
das
adc
gs
lret
jne
dec
insb
cmpsb
add
jne
lahf
pop
ljmp
fstpl
rorl
lcall
iret
xor
jne
sub
mov
imul
pop
mov
lea
insl
push
cmpsb
test
ja
nop
std
mov
inc
xor
adc
jo
out
dec
mov
xchg
cmp
sti
mov
nop
mov
mov
sbb
icebp
les
out
add
mov
mov
add
sbb
jno
pop
jle
mov
in
add
loop
pop
add
stc
pop
enter
int
and
int3
push
call
lret
or
jge
out
push
stc
add
sub
xchg
pop
pop
push
jns
js
xchg
mov
jp
jp
xor
push
mov
push
mov
jb
jecxz
fistpll
arpl
xor
jo
mov
push
mov
in
pop
js
mov
or
mov
jmp
lods
cli
int3
sbb
inc
shl
push
testl
gs
xchg
mov
mov
outsl
test
xchg
or
test
pop
mov
sub
mov
lea
pop
lods
cld
jecxz
mov
repnz
pop
shrl
or
mov
push
in
pop
push
and
scas
xor
mov
sahf
pushf
mov
int3
outsl
jge
mov
sar
repz
in
stc
dec
dec
daa
lds
ret
add
dec
add
aas
in
data16
push
incl
inc
push
xchg
sbb
sahf
adc
scas
addl
iret
xor
ljmp
pushf
ja
cmp
mov
rcrl
fs
flds
dec
xlat
in
movsb
mov
cli
xchg
push
sbb
sub
rorb
xor
mov
cld
and
rorl
push
icebp
xchg
add
mov
jg
lahf
push
lock
popf
leave
xchg
pop
in
aad
loopne
mov
jb
sub
orb
sub
push
pop
pop
pand
data16
pop
or
mov
out
aaa
xor
mov
mov
pop
mov
xchg
ja
sbb
addb
lods
ljmp
ss
and
out
jne
js
scas
cltd
das
push
dec
lret
cmc
cwtl
inc
test
or
adc
pusha
sbb
sbb
xor
dec
loopne
cmp
punpckhbw
mov
es
int3
pop
ss
mov
loop
add
mov
mov
lahf
ds
or
mov
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
fsub
adc
jle
int3
mov
adc
xor
scas
and
js
sub
push
lods
fldcw
xorb
jbe
std
jecxz
aad
stos
nop
jge
scas
and
mov
mov
incb
into
push
sbb
scas
jp
and
sbb
jnp
and
es
or
sahf
adcl
mov
out
add
cmp
ds
sub
jecxz
sahf
ljmp
ficoms
mov
es
aam
sbb
pusha
push
jno
jb
add
mov
xor
aad
stos
lahf
stos
repz
ret
cmp
ljmp
call
popf
out
std
popf
sub
sub
popw
inc
sti
lahf
mov
adc
pusha
sub
adc
out
add
roll
test
mov
add
pop
sbb
add
ret
scas
mov
hlt
hlt
ljmp
lret
pop
sbb
icebp
fisttps
sbb
or
sbb
ret
adc
cli
outsl
mov
pop
push
in
adc
push
xchg
leave
xor
and
cmp
adc
movl
and
int
pop
cmc
mov
add
add
and
inc
dec
arpl
xchg
test
xor
mov
inc
sbb
pop
or
es
mulb
movsb
mov
sti
xorl
xchg
push
cmpsl
xchg
fs
outsl
xor
std
outsb
fistpl
pop
and
test
pop
divl
stc
test
sbb
push
jnp
push
outsb
cmp
pop
ds
mov
sub
dec
ljmp
add
popf
and
cmp
mov
scas
cmp
jb
mov
xor
pop
push
mov
xchg
sub
fs
ljmp
mov
xchg
test
inc
push
add
add
clc
int3
mov
adc
jae
andb
cmpsl
jmp
stos
jl
adc
mov
add
xchg
mov
pop
or
outsb
dec
sub
pop
fcoml
lds
rclb
or
mov
mov
aam
mov
mov
and
sbb
out
push
fnstcw
push
add
popa
cmp
insb
mov
pop
add
test
adc
mov
shll
dec
test
movsl
mov
in
lock
sbb
out
popl
sub
jne
mov
cmp
into
fcmovbe
insl
pusha
xor
inc
jle
xor
pop
jecxz
mov
icebp
rcll
addb
aaa
mov
js
jno
insl
or
xlat
aad
pop
lds
or
add
out
xor
mov
loop
into
xor
xchg
or
cmpb
jge
jle
push
into
jb
sub
nop
in
test
int3
icebp
push
rolb
out
stos
add
mov
cmp
aad
xchg
push
lret
das
add
xchg
outsb
into
inc
mov
inc
adc
jno
and
repnz
lods
test
sub
lds
dec
fcom
sbb
cmp
push
push
ds
pushf
bound
add
push
or
jl
mov
jns
mov
sub
jecxz
mov
mov
das
push
gs
and
push
dec
stos
clc
mov
sub
dec
mov
push
and
in
or
sbb
mov
jp
imul
jmp
jne
push
icebp
and
cmp
js
cmp
aaa
add
xchg
add
insl
outsb
lcall
push
pop
xchg
test
insl
ss
mov
cs
mov
mov
test
dec
jp
dec
xor
xchg
stos
xor
sub
aad
sahf
lods
or
xlat
lods
nop
in
jmp
mov
push
inc
xor
cmp
push
pusha
push
pop
xchg
rcrb
sub
call
jno
xor
xchg
mov
data16
jl
loop
xchg
incb
jmp
add
mov
sub
jecxz
xor
jo
xchg
mov
or
sbb
inc
les
mov
xlat
xchg
cmp
jmp
xor
test
fwait
cmp
adc
subps
pop
mov
sub
inc
pop
scas
out
js
xor
sahf
push
dec
jnp
xchg
mov
pop
adc
push
or
mov
fwait
dec
out
sbb
mov
movsl
dec
sub
test
leave
iret
lret
stos
mov
or
in
push
mov
dec
sub
add
dec
repnz
xchg
add
in
add
lods
into
adc
cmpsb
jecxz
mov
test
aaa
test
xchg
fdivs
push
push
aam
cmp
cmc
cld
mov
jecxz
inc
mov
ficoml
pop
shll
mov
pop
jne
jmp
mov
lret
orl
push
je
mov
daa
loopne
ret
dec
negl
add
mov
jl
pop
and
loopne
movsl
jp
data16
jmp
movsb
sub
mov
push
mov
mov
repnz
sub
xor
push
jmp
in
incl
vunpcklps
push
xchg
cmc
and
insb
roll
mov
add
insl
cltd
jnp
adc
push
popf
test
xor
cmpsb
in
jae
rcll
lea
mov
cmp
adc
xlat
lret
ljmp
cli
xchg
inc
xchg
inc
or
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
adcl
jle
jge
jle
or
out
xchg
mov
and
jl
loopne
cltd
jge
dec
sbb
insl
dec
sub
ljmp
pop
inc
mov
lret
adc
stos
mov
enter
scas
pop
xlat
add
cs
lock
insb
cmpsl
mov
xor
popa
das
cli
lea
pusha
pop
cmc
popf
add
aad
and
jno
ja
mov
jns
cmp
push
push
aaa
leave
mov
xor
inc
mov
jp
movsl
sub
test
aas
or
inc
hlt
or
call
call
icebp
dec
inc
pop
lea
in
jp
in
pop
cmpsl
decl
insb
aad
mov
mov
icebp
cmp
cmp
dec
push
pop
aam
push
mov
out
mov
sahf
mov
mov
dec
xor
in
sbb
add
out
leave
push
lcall
rcrl
inc
stc
cwtl
mov
mov
pop
cld
shlb
inc
pop
cmpl
cwtl
imul
sbb
mov
cmp
sbb
out
mov
cmp
roll
rolw
pop
paddq
lahf
js
loop
cmp
rcll
xor
fnsave
leave
or
repz
jns
add
adc
cmp
mov
iret
insb
aas
pop
shr
mov
dec
mov
sbb
sbb
inc
in
imul
inc
hlt
andl
aas
dec
jmp
adc
mov
pusha
sub
test
xor
bound
xchg
std
daa
movsl
loope
sub
lock
sub
in
leave
xchg
sbbl
loopne
pop
lds
addb
sub
add
cld
mov
imul
cli
addb
insl
xchg
divb
scas
lock
push
jbe
loope
sbb
sub
xor
insb
or
add
test
call
je
cwtl
ds
adc
dec
lock
mov
push
outsl
inc
cmp
fidivs
cli
popf
stos
out
testl
fidivs
push
stos
push
test
xorb
and
pop
jno
inc
mov
xor
mov
jmp
lea
xchg
movsb
or
jb
sub
inc
push
addb
mov
pop
pop
adc
add
pop
push
hlt
cmp
jns
imul
insl
push
pushf
add
push
fmul
daa
xlat
mov
hlt
cs
dec
out
sub
mov
roll
dec
add
lock
xchg
or
adc
jp
ret
lock
dec
pop
mov
insb
mov
into
xchg
sub
adc
test
jp
out
mov
fcmovnb
ja
jmp
pop
ret
mov
xor
outsb
inc
scas
ds
mov
inc
mov
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
loopne
pop
inc
daa
mov
jge
jle
inc
cli
pop
insb
mov
jne
and
gs
jno
xchg
shr
ror
stos
cld
pop
xor
cmc
sub
adc
sub
ja
imul
mov
out
addl
popa
adc
jecxz
push
hlt
jnp
sub
xlat
mov
outsl
and
push
add
or
jmp
arpl
mov
data16
inc
es
or
out
push
loope
cmp
sub
dec
dec
out
lods
aam
loop
cmpl
aad
mov
loop
inc
les
test
or
loop
sti
cmp
cltd
ja
out
shl
or
mov
pop
mov
jo,pn
lcall
mov
pop
push
lods
xchg
std
out
sbb
push
push
dec
icebp
cmp
or
pop
mov
fildll
sti
mov
int
cmc
cmpsl
pop
dec
out
xchg
add
test
sti
push
iret
roll
add
dec
in
lret
push
mov
push
dec
push
push
test
jmp
lret
pop
xchg
push
jb
inc
cmpsb
aaa
xchg
sbb
lret
out
sti
mov
sub
or
sti
cmp
inc
push
out
out
movsb
iret
and
fistpl
and
scas
push
mov
pop
jp
cmpsl
fidivrl
cli
mov
adc
pop
testl
sbb
mov
fildl
lret
mov
and
daa
pop
push
jno
rorl
add
pusha
outsb
mov
addr16
out
pop
push
clc
dec
mov
scas
cs
cli
daa
push
daa
mov
dec
inc
ret
adc
imul
inc
je
stos
xchg
sbb
cmp
cltd
inc
mov
outsl
cltd
into
fsubr
addr16
pop
aas
cmp
mov
sub
pop
ljmp
or
mov
test
push
sub
test
push
rcl
sbb
mov
cs
js
popf
inc
sub
pop
mov
stc
mov
push
dec
rclb
lock
adcl
mov
jo
add
jge
outsl
xchg
fwait
sbb
popa
jg
mov
add
push
aad
adc
enter
push
ficoms
ds
mov
pop
sti
daa
inc
cmp
popa
es
test
jae
xchg
popf
into
mov
xchg
and
xor
popa
adc
out
or
aam
dec
xchg
pop
lds
addr16
sahf
inc
movsb
stos
push
mov
es
inc
sub
adc
enter
pop
inc
inc
xor
idiv
out
mov
sub
sub
pop
enter
call
sub
shlb
arpl
ljmp
mov
mov
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
and
jge
pushf
in
pop
into
mov
inc
xchg
or
sarl
loop
sbb
mov
rolb
pop
nop
lock
repnz
pop
fwait
mov
mov
cmp
je
mov
jle
fistpll
cmc
out
jbe
or
scas
sbb
cltd
or
inc
inc
cmpsl
mov
dec
mov
int3
stos
xchg
xchg
test
cmp
es
out
enter
jne
cmovae
inc
cmp
fimuls
cmp
add
pop
push
jno
inc
mov
push
jg
leave
ret
or
push
push
mov
mov
sbb
xchg
sbb
sub
repz
or
jge
das
pop
pop
in
jmp
hlt
mov
xor
into
lcall
xor
sbb
ret
data16
ss
mov
fucom
sub
pop
adc
imull
ret
test
sub
test
lcall
pop
sbb
inc
ss
outsl
sahf
sbb
jg
das
push
es
movl
out
outsb
mov
imul
cli
scas
xchg
mov
cmp
jl
je
push
rorl
sbb
stos
fdivrl
mov
inc
add
scas
pushf
test
out
fbld
insl
ror
and
jae
dec
lcall
cmp
fstpl
inc
in
into
fs
andl
int
xchg
jns
sub
mov
pop
sahf
sub
aaa
daa
stos
fwait
jmp
incb
pop
push
in
outsl
or
stc
imul
data16
and
addr16
lret
ret
adcl
movsl
data16
mov
cmpsl
dec
pusha
pop
pop
push
xchg
movsl
dec
sbb
pop
gs
mov
mov
int
jmp
add
pushf
popf
int3
inc
insl
in
call
hlt
or
cwtl
cmp
xchg
shr
inc
loopne
and
adc
lds
shl
es
xchg
test
outsl
jbe
pop
mov
xor
rcl
and
ret
push
std
cmpsb
xorl
in
pop
outsl
pushf
jge
push
add
sbb
std
mov
xchg
dec
loope
pop
inc
xchg
dec
movsb
lcall
push
add
mov
mov
jmp
cmp
xor
xchg
scas
mov
or
in
cmp
cmp
rol
add
jmp
shll
dec
test
sub
out
daa
add
add
dec
xor
add
add
pop
mov
jae
xor
lds
xchg
movsl
imul
jno
fs
xor
cmp
or
rcll
sub
repz
cmpsb
loopne
inc
or
inc
or
in
rorb
push
add
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
lods
nop
frstor
xchg
jle
jge
jle
lret
jne
mov
sti
ret
fsubrs
ud2
iret
icebp
scas
jno
notl
subb
adc
xor
aas
mov
lret
imul
sub
fcoml
or
jg
leave
or
jns
xchg
ret
sbb
lods
gs
inc
mov
push
aam
adc
out
and
out
mov
daa
ficomps
mov
mov
shr
dec
dec
xchg
mov
out
or
aaa
idivl
int
jmp
aad
roll
mov
adc
jmp
jns
mov
mov
lahf
loopne
inc
cmc
xlat
sub
adc
js
test
sarb
jp
notl
jno
dec
lea
shr
andb
pop
shrl
lret
stos
pop
xor
mov
lds
xchg
stos
aad
sub
mov
repz
pop
fidivl
sbb
sbb
or
or
stos
add
inc
mov
in
out
popl
outsb
rcr
inc
sub
adc
cli
int
cmp
imul
int
adc
ret
js
xor
cmp
pop
fwait
outsb
cs
push
adc
lock
mov
cwtl
lea
outsb
rcrl
insb
je
pop
enter
or
aam
cmp
cmp
adc
jle
fcomip
inc
cld
das
test
mov
ret
sub
enter
popa
lea
jle
andb
leave
xchg
cmp
fs
xchg
lock
cmpsl
jecxz
mov
xchg
pop
push
cwtl
movsl
outsl
cltd
lret
mov
mov
cmp
cmp
add
dec
sbb
cwtl
pop
fstpl
popf
pop
xchg
push
mov
orb
addr16
pushf
add
xchg
ror
jg
out
push
ret
or
mov
jbe
ss
dec
out
out
pop
inc
jae
daa
xchg
sub
mov
add
push
push
out
pusha
iret
ja
clc
vcomisd
out
inc
mov
xchg
cltd
adc
ds
mov
enter
pushf
fstl
faddl
js
sahf
lea
xchg
mov
mov
fildl
cmp
sub
jp
xor
add
enter
aad
popa
lds
out
push
inc
jns
mov
push
push
cmp
aam
pop
xchg
mov
popa
movzbl
mov
mov
add
inc
loopne
hlt
xor
dec
adc
outsl
xchg
test
cwtl
push
fnstcw
rcr
nop
shrb
adc
fwait
xor
ds
mov
sbb
mov
outsl
add
push
es
nop
es
es
in
sbb
mov
ret
dec
fstps
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
dec
aas
bnd
xchg
jle
jge
jle
cs
inc
pop
hlt
pop
dec
dec
insl
or
pop
adc
int3
sti
jbe
add
sub
mov
xor
mov
mov
push
pop
pop
jmp
dec
xchg
scas
mov
cmp
in
ljmp
mov
mov
popf
or
andl
or
arpl
mov
mov
fwait
inc
in
std
ret
ljmp
sbb
call
jns
stos
sahf
fistl
movl
sbb
fadds
mov
test
cmp
jecxz
inc
test
pop
add
push
xor
stc
insb
sub
inc
fs
outsb
pop
lret
lods
pop
leave
sbb
lret
sub
mov
add
or
stos
cmc
jbe
mov
and
popa
add
mov
or
xor
hlt
inc
mov
repnz
add
shll
jns
mov
push
andb
and
int
imul
adc
and
pop
cld
push
int
test
mov
roll
lcall
jl
inc
mov
ja
or
int3
lahf
or
add
inc
xchg
adc
les
out
xchg
icebp
lock
js
dec
adc
loop
and
fwait
mov
aad
popf
movsl
mov
fnstcw
outsb
adc
add
in
mov
sub
gs
push
cmp
inc
out
or
shlb
pop
push
cld
lcall
xchg
ljmp
stos
fwait
dec
fistl
enter
pop
push
dec
pushf
fistps
ja
cmpb
mov
test
loope
enter
js
fdivrs
cmpsb
mov
sbb
popf
add
sub
and
stc
pop
outsl
dec
scas
emms
test
push
ficompl
jb
repnz
mov
mov
inc
adc
ret
mov
shll
fnsave
mov
insb
out
sbb
rorl
je
icebp
aaa
pusha
add
fists
leave
sbb
cmpsb
add
xchg
or
loopne
jle
add
sbb
shlb
out
xchg
and
mov
scas
jb
mov
xchg
push
add
mov
mov
pop
les
ss
pop
mov
xor
xchg
out
ret
cmp
adcb
jae
ja
lahf
adcb
mov
in
mov
fstpl
enter
test
outsb
test
mov
addl
popf
cmp
adc
lods
adc
inc
push
loop
mov
jecxz
es
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
pop
imul
jge
jle
inc
xor
cwtl
ret
mov
cmc
lahf
les
dec
popf
or
xchg
sub
pop
sub
sbb
add
push
call
pop
or
sub
push
xchg
push
cmpsl
xor
and
loope
lea
jbe
ss
out
mov
sub
pop
das
cmp
mov
add
mov
ljmp
test
jge
ds
fnstsw
jge,pn
xchg
aas
adc
stc
jl
jmp
out
test
pushf
xor
mov
xchg
aad
mov
std
lret
icebp
mov
mov
jne
or
pop
fcomp
clc
xchg
das
or
inc
outsl
mov
outsl
mov
cmp
and
push
jp
adc
push
orb
insl
add
mov
push
add
push
sub
fldl
sbb
mov
aaa
sub
lcall
je
sbb
xchg
aas
lahf
rorl
jmp
int3
lea
adc
lods
lods
jl
sub
test
mov
mov
cmp
adc
adc
lahf
enter
jle
je
std
out
sbbl
les
ret
out
xchg
mov
dec
cmp
dec
mov
repnz
dec
rorl
mov
push
sub
add
or
push
test
adc
daa
push
lea
push
loop
mov
shlb
jo
pop
jns
pop
stc
lret
pop
jbe
sbb
cmp
into
mov
lock
outsb
dec
int3
add
jb
sub
pushf
jp
out
push
mov
shrb
cmpsl
lret
xchg
getsec
in
lcall
pop
jne
arpl
leave
mov
dec
mov
add
xchg
mov
push
cs
mov
lea
mov
sbbb
lahf
xor
out
cmc
xlat
xchg
shll
or
cld
lcall
mov
data16
mov
xor
out
sbb
mov
and
outsl
je
sbb
shll
lahf
fs
lret
xor
mov
add
jbe
or
xorb
loopne
or
and
pop
iret
fnstenv
inc
stos
mov
cmc
cmp
fdivrl
sti
movsl
sti
std
aaa
je
scas
mov
hlt
dec
in
mov
es
pop
dec
jmp
nop
jo
insb
lret
push
or
scas
aaa
cmp
cmp
pop
xor
inc
pop
cmpl
jbe
mov
push
ds
test
cs
inc
movsl
mov
sbb
fwait
jle
jnp
out
pop
out
fisubrl
pop
jge
xor
mov
pop
stc
add
mov
daa
inc
and
push
jecxz
bnd
inc
jge
lahf
js
mov
jo
mov
xor
lea
jmp
das
subb
mov
xor
push
sbb
ja
lahf
jle
jge
jle
and
jecxz
imul
inc
and
gs
push
pop
rcll
das
xor
cli
and
cmc
inc
outsl
xchg
in
and
push
cmpsl
scas
in
inc
in
adc
push
mov
cltd
inc
push
aam
insb
fsubrl
sub
inc
mov
cmp
pop
mov
ljmp
sbb
in
push
push
xor
jns
push
cmp
mov
cmp
xchg
mov
fmul
sbb
leave
or
stos
es
imul
adc
mov
adc
test
sbb
add
xchg
push
test
cld
nop
je
data16
mov
jbe
xchg
inc
shrb
cltd
mov
add
pop
xchg
mov
lahf
jge
outsb
cmp
adc
punpckhwd
into
jecxz
sub
or
sub
sahf
fistl
test
or
cmp
push
sub
aam
addr16
divl
mov
sbb
inc
inc
mov
mov
es
lods
clc
insb
outsb
jae
arpl
mov
pop
aaa
add
pop
bound
and
dec
inc
out
sarl
jle
jecxz
pop
insb
jno,pn
aad
les
clc
sahf
clc
xchg
in
cmovno
fnstsw
loop
xchg
cmpsb
loope
push
mov
repz
sub
push
mov
ret
gs
rolb
lahf
push
das
mov
test
push
dec
js
push
out
scas
lcall
mov
sub
mov
loope
fdivs
inc
int
stos
xchg
stos
xor
jno
movsb
inc
lea
inc
sbb
aam
gs
mov
mov
cmp
dec
xor
sbb
movsb
push
leave
xor
pushf
push
push
int3
sub
lods
out
cmp
loopne
stos
lods
jle
cwtl
inc
jns
mov
push
cmp
fisttpll
mov
jns
jmp
jno
dec
mov
pop
dec
daa
xor
movsl
outsl
imul
sbb
sub
in
out
xchg
jmp
rol
jne
pushf
dec
loopne
or
mov
inc
xor
add
mov
addr16
lcall
clc
jle
pop
pcmpeqd
inc
push
inc
add
rcll
and
out
pop
fsubl
out
idivb
lret
jecxz
int3
jb
les
push
icebp
stos
aam
shll
inc
rcrb
sti
ficoml
gs
mov
fmulp
push
inc
mov
imul
mov
adc
int3
loope
int
gs
inc
fildl
stos
cltd
sbb
push
fucomi
scas
scas
dec
add
scas
xor
ror
lea
fisttps
pop
mov
mov
jmp
repnz
adc
aad
fcoms
mov
jge
jle
orb
jno
stc
cmc
imul
mov
mov
std
and
mov
pop
leave
xor
imul
lods
xor
sti
xchg
sahf
jl
stos
xchg
daa
int3
cli
mov
inc
add
cld
mov
insl
popf
sar
lret
push
mov
pop
and
dec
xor
pop
push
loopne
popf
cld
cmp
add
movsb
btr
lret
lret
inc
outsb
jg
out
hlt
push
dec
rorl
cs
mov
lods
sbb
movsl
sub
mov
int
xchg
cmp
pusha
lea
mov
pop
lods
nop
jb
dec
in
jne
jmp
jecxz
mov
jmp
aam
ja
adc
out
cmp
jmp
dec
pop
mov
pop
mov
shlb
nop
push
add
lea
aaa
ds
sub
jbe
inc
hlt
or
iret
jg
and
pop
cli
stos
ret
dec
sbb
pop
inc
js
dec
xchg
cld
or
adcb
into
jns
cld
xchg
hlt
std
daa
stos
movsb
push
cmp
les
dec
adc
lock
mov
push
movsl
and
sub
hlt
fbstp
mov
and
push
push
mov
add
sub
sub
xchg
adc
subb
mov
dec
mov
fs
sub
movsb
add
sub
dec
dec
and
jge
aam
shll
xor
jmp
movsb
inc
sub
cmpsb
jnp
leave
jg
push
mov
scas
add
mov
jne
test
nop
fldenv
outsl
push
push
pop
shrl
test
push
jle
mov
aad
stos
push
aam
dec
nop
inc
fildl
or
jmp
xchg
loop
pop
xchg
mov
mov
cmp
mov
mov
orb
fimuls
cwtl
pop
cmp
lock
sbb
jl
cmp
jo
xchg
in
cwtl
mov
cmpsl
sub
jg
int
fildll
sbb
outsb
adc
sub
mov
xchg
or
mov
pushf
imul
jmp
leave
mov
xor
xor
mov
fldenv
xor
jg
mov
inc
es
cmp
lock
mov
loopne
cltd
loope
sub
adc
pushf
jecxz
pop
push
sub
sub
add
and
add
adc
movsl
cmp
xlat
xor
cmp
shr
adc
out
add
pop
cld
xchg
outsl
push
hlt
je
adc
imul
inc
xor
mov
addr16
hlt
xor
nop
insb
jp
lcall
push
dec
aam
leave
subl
add
repz
sub
arpl
dec
lcall
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
cs
fcom
cmc
xor
jle
ja
into
filds
pop
inc
leave
movlps
jl
pop
pop
xchg
cmp
scas
jl
test
in
gs
js
dec
lods
pushl
cld
in
roll
imul
mov
xchg
mov
and
out
lret
into
mov
lods
push
push
push
addl
popa
pop
imul
mov
rorb
aas
loopne
mov
or
dec
shrb
sti
lret
fisttps
push
sub
cmp
outsb
xor
inc
mov
fistpl
fs
outsb
mov
cltd
lock
or
xor
jo
push
mov
add
insl
cmp
jl
rcr
test
jge
fldcw
daa
xor
imull
popf
lret
stos
adc
mov
mov
pusha
pop
cltd
xor
mov
popf
pusha
popf
shl
push
fcompl
test
sbb
mov
sub
pushf
pop
mov
or
dec
je
cmpsb
xchg
icebp
jae
arpl
cli
js
xchg
inc
js
mov
daa
inc
adc
xor
dec
mov
mov
mov
dec
std
das
out
or
sub
pop
dec
sbb
pop
jns
mov
cld
mov
jl
test
mov
inc
pop
xor
test
hlt
mov
std
test
shl
test
inc
sbb
fisttps
sbb
jl
popa
mov
jae
cld
out
cmp
lds
cmp
in
jge
xchg
push
lods
sub
repnz
dec
xor
out
sbb
xorl
xchg
and
int3
out
adc
dec
pop
nop
mov
push
inc
cmpsb
xchg
cmpsl
iret
push
loope
cmpsb
cmpsb
mov
add
sbb
test
cmp
xor
mov
mov
test
adcb
fsts
out
adc
bound
rcll
fdivrs
sub
cltd
popf
jge
data16
fadds
popf
xchg
ds
cli
add
and
jg
cmp
xlat
pop
xor
push
lods
pop
mov
pushf
xor
mov
xlat
aaa
cmp
adc
test
push
ds
mov
xchg
lret
sub
xlat
in
arpl
stos
jmp
in
in
rcrl
jmp
int
inc
sub
dec
lea
ficoms
jns
data16
mov
sbb
push
xor
aam
push
add
roll
mov
sbb
sarb
jmp
jecxz
push
enter
gs
adc
sahf
mov
je
adc
pop
cmp
jp
les
cmp
pop
pusha
sub
inc
dec
addr16
sbb
jns
or
cmp
jne
push
inc
int
ret
mov
inc
push
dec
jb
pop
das
pop
mov
xchg
add
dec
push
jecxz
mov
lret
in
stos
xchg
fisttpll
pop
hlt
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
pushl
movsb
jle
push
jg
jle
jnp
bound
std
pop
fcom
xchg
mov
ffree
dec
hlt
aad
loop
test
xchg
sahf
inc
cmp
mov
call
out
sahf
adc
iret
adc
mov
jmp
mov
out
jo
test
sub
push
mov
frstor
iret
loopne
fstpt
mov
rcr
mov
addr16
fadds
sbb
cvtpi2ps
out
sbb
dec
sub
cld
shlb
fcomi
dec
mov
outsl
cld
int3
fisttpl
pop
sbb
icebp
lcall
and
mov
mov
jl
mov
stos
out
test
fwait
jg
into
insl
loopne
push
push
pushf
and
in
add
arpl
jbe
and
push
push
mov
in
lahf
push
fbstp
push
adc
mov
out
fistps
sub
cltd
int3
cltd
shlb
ss
dec
in
jb
jo
mov
jg
sub
adc
bound
cwtl
nop
push
cld
dec
je
addl
mov
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
sbb
iret
movsl
jle
push
jg
jle
adc
js
inc
sub
and
mov
fsubrs
mov
int3
jns
test
mov
sqrtps
sub
inc
add
cmc
xchg
out
scas
sbb
adc
inc
psraw
jb
js
test
inc
mov
mov
roll
fcmovu
nop
ret
and
fwait
push
mov
or
mov
pop
nop
adc
les
adc
fwait
mov
adc
call
out
fidivl
in
push
in
mov
inc
scas
cs
ret
pop
add
xlat
mov
lahf
iret
sbbl
lock
shrl
and
xlat
arpl
cwtl
cmc
jmp
rolb
jl
scas
jno
loopne
loope
gs
int3
test
adcl
fs
mov
push
xchg
test
aaa
es
push
pop
sub
ds
sub
ljmp
inc
push
ss
and
mov
xchg
sbb
lods
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
nop
add
mov
jle
lahf
mov
push
xchg
das
xchg
mov
add
jp
or
es
js
and
arpl
sbb
mov
cmp
or
mov
xlat
loope
test
fldcw
ret
mov
pushf
in
add
movb
xlat
and
dec
pop
pop
adc
outsb
or
adcb
push
xchg
xlat
dec
add
xchg
xchg
fs
in
push
xor
insb
lea
and
xlat
mov
xchg
mov
dec
cmpsb
stc
sub
xor
cmp
xchg
aam
sub
sbb
cs
mov
sarb
add
mov
jecxz
shl
pop
jecxz
cmp
inc
sbb
fs
cmp
icebp
pusha
inc
push
fistps
push
mov
xchg
movsl
inc
aaa
addb
leave
clc
loop
lock
push
call
sbb
icebp
jle
push
xchg
das
push
fldcw
rcr
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
xor
pop
out
mov
jle
gs
pop
xchg
pop
pop
dec
lahf
xchg
inc
out
dec
cwtl
xor
iret
js
and
mov
sub
push
mov
fisttps
jp
mov
mov
mov
mov
int
into
ds
pop
arpl
adc
mov
lods
sbb
push
sbbl
pop
inc
pop
xor
mov
loope
cmpsb
lea
ret
js
int3
je
lret
das
mov
andl
pop
es
ret
clc
int3
popf
ret
clc
mov
out
mulb
push
jmp
out
cwtl
popf
mov
sub
xor
adc
lds
in
mov
or
out
sub
xor
les
inc
adc
popf
sub
arpl
ret
repnz
add
jle
rolb
mov
loop
mov
ja
stos
xor
xlat
xchg
stos
cmp
push
es
mov
xchg
cs
sbb
push
inc
sti
inc
sub
add
add
pavgb
xchg
mov
iret
inc
cmp
out
scas
std
ret
or
dec
or
int3
scas
dec
sub
push
sbb
lahf
sbb
push
lcall
jae
rolb
lcall
sti
sub
inc
add
xor
aaa
bound
rorb
or
mov
idivl
xchg
sub
jmp
fdivp
mov
fsubl
cli
pusha
repnz
or
sub
dec
roll
dec
push
cs
cmpb
and
pop
out
ja
sub
mov
or
or
xorl
jae
xor
inc
inc
sbb
fimull
pop
into
and
sbb
sbb
addr16
push
dec
call
push
dec
es
jne
pop
std
rclb
mov
std
arpl
mov
jmp
daa
popa
pop
xor
cs
inc
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
pop
int
pop
fwait
cmp
add
xlat
mov
sbb
in
xchg
js
daa
sti
gs
stc
sbb
fists
mov
loopne
je
and
pop
aas
mov
xor
fmul
lds
test
jne
mov
mov
std
mov
aaa
jo
jnp
je
into
inc
sbb
inc
pop
jno
pop
or
jge
cli
std
push
outsl
sub
inc
add
lahf
adc
aaa
push
and
cmp
add
ret
and
or
cld
dec
fmuls
and
or
scas
dec
and
dec
xchg
xchg
dec
mov
xlat
add
and
and
out
mulb
or
jle
test
jge
inc
das
fildll
sbb
bound
aas
xor
push
add
mov
push
xor
dec
cld
aas
lahf
fldt
pop
iret
jge
mov
push
scas
and
xchg
dec
mov
andb
iret
and
int3
in
jmp
cmp
ficoms
sar
xchg
test
sub
lods
mov
add
sbb
sbb
add
sbb
xor
dec
push
mov
pop
mov
sbb
aaa
imul
cmp
les
mov
les
rcrl
and
jo
mov
jns
cmp
scas
add
cwtl
xor
pop
mov
mov
cmp
mov
int
adc
andb
loop
loope
and
aad
inc
push
lret
pop
mov
mov
pop
lds
pop
cwtl
mov
mov
cmpsl
xchg
mov
bound
push
push
cld
pop
push
testl
jb
mov
nop
mov
pop
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
inc
and
aas
lods
movsb
or
sub
test
fnstcw
dec
xchg
sub
xchg
cltd
outsb
rolb
or
repz
movsb
sbb
cwtl
jno
pop
mov
jbe
clc
popa
dec
jne
inc
pop
das
mov
push
jecxz
inc
pop
add
aaa
jo
out
out
mov
cltd
fwait
sub
pop
dec
dec
adc
sbb
lret
jmp
mov
aaa
adc
mov
ljmp
aaa
adc
bound
inc
sub
adc
data16
xor
inc
adc
pop
addb
fisubrl
rcrb
aad
push
cmc
sub
push
cmp
add
test
fsubs
mov
das
mov
cmp
imul
insl
test
adc
int3
mov
push
popf
or
rorl
hlt
xor
out
in
mov
ret
lahf
jo
mov
mov
cmp
jecxz
call
mov
xor
stc
jbe
inc
mov
out
mov
dec
cltd
mov
das
pusha
inc
rep
dec
outsl
sub
jbe
push
cmp
pop
or
cmp
insl
inc
rcrb
leave
dec
inc
jmp
mov
outsl
or
jmp
inc
pop
arpl
add
pushf
shll
popf
adcl
stos
and
cmp
sbbl
xchg
je
jle
roll
fwait
inc
dec
sub
inc
pop
xchg
lock
add
push
inc
ljmp
lock
sbb
enter
int3
add
push
js
fwait
mov
int
sbb
leave
xchg
inc
adc
push
test
fsub
aad
fldcw
andl
adc
mov
mov
dec
mov
maskmovq
pop
and
out
or
mov
xor
cltd
pop
dec
dec
mov
icebp
dec
test
and
push
jb
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
mov
dec
notl
jecxz
imul
mov
or
mov
jno
pop
and
mov
sub
das
ret
addb
es
rorb
lret
xor
dec
xchg
icebp
jl
in
jl
jb
sarl
fildl
pop
or
daa
push
pop
mov
mov
dec
popf
in
add
or
sbb
or
inc
mov
gs
mov
stc
cld
or
adc
fldl
js
pop
out
xchg
jnp
popf
sub
sbb
xor
mov
cltd
inc
gs
aaa
cs
lcall
cmp
jns
jnp
aad
dec
int3
ljmp
mov
sbb
repz
mov
xlat
dec
testb
insl
insb
mov
push
rorl
cmp
mov
daa
pop
movsb
xchg
lock
lods
add
jnp
mov
ljmp
inc
rorl
push
xor
hlt
jg
lods
or
xchg
pop
mov
cmp
imul
adc
cmpsb
mov
inc
cmpl
push
sbb
or
add
inc
mov
fldt
sbb
bound
hlt
int3
xchg
cmp
repnz
movsl
test
daa
sbb
jnp
jae
outsb
fidivs
push
aad
adc
inc
cmpb
aas
xchg
fmull
pop
repnz
cmp
sbb
iret
stc
mov
dec
gs
fnstcw
jecxz
or
push
sub
jmp
stos
rcl
mov
dec
and
add
sarb
in
push
mov
pop
stos
sub
add
xor
sub
rorl
out
inc
dec
cmp
jmp
insl
cmp
cmp
add
adc
pop
push
ret
push
call
sub
adc
pop
push
fsubp
lods
jb
rolb
xchg
jns
inc
jmp
push
mov
adc
jbe
in
and
ret
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
call
jle
lods
jl
jle
iret
adc
add
pop
inc
add
jmp
repnz
push
test
and
mov
mov
aad
push
imul
dec
repnz
cmpsl
inc
mov
out
dec
in
stos
aam
in
aad
aam
add
or
xchg
jmp
cmc
lret
adc
loopne
shl
dec
sbb
cmp
ljmp
pop
or
cmc
jle
push
das
fs
mov
sarb
or
dec
out
psubusw
fs
mov
or
lods
aam
jne
add
or
popa
ljmp
dec
sahf
sbb
fisubs
in
pop
push
and
out
mov
xlat
lcall
mov
dec
add
mov
inc
es
outsl
sub
enter
loope
adc
xchg
rclb
push
fcmovbe
pop
push
ljmp
call
mov
int3
jo
sbb
scas
jnp
jmp
sarb
jl
in
inc
push
mov
xchg
cmp
test
shl
leave
lods
pop
shl
adc
gs
xchg
mov
inc
cmp
adc
mov
cmpsb
pop
jbe
xchg
xchg
gs
test
xchg
arpl
int3
xchg
xor
sub
xchg
pop
add
sbb
push
push
lret
gs
test
mov
js
repnz
scas
jb
test
and
insb
mov
rdpmc
jle
adc
cltd
mov
pop
popa
push
jg
stos
push
inc
clc
xchg
xor
inc
enter
xchg
ljmp
mov
mov
push
xlat
stos
mov
inc
insl
or
mov
jb
ja
jmp
ljmp
fwait
lods
idivb
filds
inc
out
out
outsb
push
mov
or
lret
pop
jle
stc
test
mov
test
add
mov
mov
xchg
loop
xor
outsl
arpl
dec
and
adc
or
ja
dec
or
mov
lods
sub
mov
fidivs
cmp
xor
daa
int3
xchg
mov
dec
mov
into
pop
das
xchg
mov
cltd
hlt
or
cmp
cmp
popf
scas
fsubl
sbb
adc
adc
sbb
loope
sbb
jnp
loop
or
mov
outsb
pop
jl
in
mov
sbb
in
jbe
js
jmp
mov
pop
repz
mov
je
repz
xchg
movl
subl
mov
addl
jmp
insb
xchg
xchg
in
or
outsb
cld
xchg
neg
mov
jle
jl
jle
js
movl
adc
loopne
sbb
pushf
loop
out
into
cmp
ffree
out
fstl
enter
out
pop
jo
inc
xchg
xor
cwtl
inc
das
fcmovb
sbb
mov
movsb
sahf
mov
arpl
lea
loope
dec
mov
jl
xchg
movsb
or
adc
xchg
pop
jle
push
add
cld
jl
xchg
xchg
sub
aam
nop
mov
int3
lea
das
sbb
ja
mov
jp
pop
loope
push
xchg
and
lret
xlat
arpl
xchg
mov
pop
daa
mov
add
dec
jle
cmpsb
mov
inc
loope
jne
pop
xor
pop
cwtl
aam
jb
jg
and
aad
insb
fsubrl
lret
mov
cmp
mov
inc
fwait
mov
sbb
fsubrs
popa
cmp
jmp
cmp
incl
cmp
pop
mov
or
dec
mov
imul
lret
pop
push
jp
clc
inc
fcmovnu
pop
mov
push
push
sbb
pop
test
out
enter
and
lcall
stc
test
movsb
sub
std
jno
flds
das
jae
xchg
lods
mov
in
mov
jg
xchg
lret
nop
jae
xchg
xchg
push
addb
fisttpl
xor
repnz
arpl
test
ficoml
gs
push
cli
add
imul
xchg
adc
test
xor
pop
sbb
sarl
test
das
sti
or
mov
ss
sub
inc
jl
stc
mov
scas
jbe
inc
int
pop
xchg
pop
mov
out
jl
inc
cwtl
adc
xlat
jnp
ret
out
pop
jno
dec
xchg
xor
movsb
pop
rolb
stc
scas
or
subl
or
mov
sar
lea
pop
aaa
adc
push
in
fcmovnb
jp
jbe
inc
fwait
add
add
mov
cltd
jge
aad
repz
lret
icebp
jecxz
lret
adc
jns
pmulhw
jp
jbe
stc
addb
ret
mov
pop
rolb
or
in
imul
sahf
inc
out
sub
shr
cmp
scas
lods
mov
imul
fstpt
xchg
push
dec
jp
inc
adc
pop
into
xlat
mov
mov
mov
dec
inc
cmp
andl
sub
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
push
pop
ret
mov
jle
jl
jle
xchg
push
lret
shlb
xchg
adc
out
pusha
add
sbb
sti
mov
test
mov
inc
xchg
and
cld
std
fmul
sub
fisubrl
orb
or
outsl
sub
xchg
adc
mov
js
push
lds
mov
xor
out
fwait
cli
cmc
jl
pop
cmp
stos
lds
cltd
sbb
dec
out
iret
cli
mov
add
loopne
or
loopne
cmpl
hlt
pmullw
lds
mov
lods
add
xchg
xchg
adc
in
scas
pop
pop
jge
mov
sbb
pop
lcall
adc
cmp
fwait
jns
pop
pop
and
pusha
and
and
repz
jne
stos
sub
out
push
cs
hlt
in
xor
mov
decb
pop
fwait
pop
dec
les
push
push
add
jp
mov
push
mov
or
rcrl
addb
scas
inc
jecxz
push
fucom
xchg
les
dec
mov
aas
mov
adc
jge
out
and
inc
push
push
sub
lahf
dec
fdivrl
jp
sti
in
lods
fsubs
mov
and
aad
mov
outsl
sub
out
popf
sti
fisubs
inc
mov
dec
jne
cmp
pop
loop
push
in
arpl
pop
imul
shll
dec
mov
rorl
adc
xchg
inc
repnz
iret
ja
pop
xchg
xor
xchg
dec
cmp
push
int
inc
inc
repnz
movsb
orb
jb
inc
mov
push
pop
in
clc
xchg
mov
sahf
push
dec
pop
test
lret
loop
cmpb
or
pop
pusha
inc
pop
addr16
bound
dec
and
sahf
icebp
fcomp
les
inc
jmp
inc
fistl
insl
inc
addb
mov
xchg
cmp
jle
push
mov
aam
lret
call
inc
and
jns
sub
inc
enter
addr16
lret
or
jno
lods
sbb
shl
pop
mov
push
jmp
divl
leave
imul
push
mov
xor
ret
je
push
clc
inc
sbb
jecxz
sbb
les
inc
nop
jo
mov
pushf
test
das
loop
lcall
rolb
inc
loope
or
in
scas
stos
sub
data16
clc
mov
lock
cli
adc
loop
lods
cmp
dec
xchg
pop
sub
sti
pop
jg
aaa
jg
es
add
jmp
lock
arpl
sub
scas
ret
shll
jle
lods
jl
jle
addb
push
add
stos
inc
jnp
add
movsl
xchg
daa
mov
ret
daa
loope
adcl
fmul
ret
or
stc
sub
xor
mov
pop
loop
cwtl
test
xchg
pushf
sbb
shll
sub
ss
xor
fists
fsubrl
adc
mov
mov
or
mov
pop
mov
add
mov
sbb
pushl
push
pop
mov
rcrl
mov
into
mov
repnz
jecxz
sbb
push
cmp
mov
jno
adc
lock
mov
jge
or
xchg
add
outsl
adc
popa
jae
lea
inc
and
pop
push
sub
mov
push
jae
lcall
stos
insl
popf
cmp
jmp
lret
mov
inc
jne
dec
insl
in
popa
scas
lds
push
sub
xor
pop
out
pop
inc
xchg
xor
fsubl
outsb
popa
mov
pop
repz
movsb
clc
pop
xor
jg
outsb
ja
lods
adc
fsubs
test
in
add
lods
sahf
jno
mov
movsb
push
jge
adc
push
daa
inc
cmc
in
cmp
sub
movsb
push
hlt
aas
fldl
shrb
xor
cld
out
test
lds
mov
hlt
into
push
hlt
out
sbb
xchg
or
testb
insb
cmp
mov
mov
das
imul
imul
mov
int3
fwait
jge
lcall
inc
cmp
push
fdivl
jbe
rclb
int3
xchg
les
lods
cmc
adc
scas
push
rorb
movsl
dec
in
push
adc
mov
lock
pusha
pop
in
hlt
xchg
stos
enter
sub
mov
cli
sub
mov
push
rol
mov
mov
mov
jle
adc
clc
mov
fsts
inc
rorb
xor
out
sbb
sub
insb
jg
jge
cmp
cltd
mov
ret
pop
scas
pop
mov
int3
push
pop
call
lea
nop
pop
insb
int3
dec
mov
sub
js
inc
adc
lret
jle,pn
mov
mov
dec
jno
jnp
jns
into
jmp
pop
insb
hlt
cmpsb
mov
ljmp
fidivrs
add
sbb
lods
adc
popf
loope
sub
jb
fidivs
inc
pop
jno
outsl
mov
mov
pushf
pop
mov
ss
aam
push
add
hlt
imul
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
js
idivl
jle
bound
addr16
popf
or
out
call
lods
xchg
shlb
inc
push
imul
test
mov
mov
gs
pop
mov
test
xor
jb
repz
pop
scas
xor
push
add
in
out
xor
iret
stos
pop
xchg
push
adc
add
imul
aam
rcrl
sub
fdivr
icebp
test
add
nop
repnz
mov
roll
sbb
sbb
add
lods
xor
jno
jb
repnz
add
lret
push
inc
inc
lcall
fcmove
dec
jo
cmp
add
aas
ss
std
mov
movsb
mov
cli
aas
push
adc
mov
adcb
repz
mov
test
pushf
dec
jae
mov
mov
gs
movsb
push
mov
dec
daa
adc
in
mov
ds
sub
fbld
or
fiadds
xchg
outsl
or
ja
aaa
push
or
inc
cmp
aaa
shrl
test
ficomps
int
push
cmp
aas
outsb
in
adc
outsl
std
mov
pop
aad
xor
popa
loop
jns
das
xchg
dec
xchg
enter
xor
outsb
outsl
mov
fnsave
lret
add
fimuls
push
outsb
xchg
mov
stos
rep
xor
f2xm1
inc
adc
jp
pop
or
xor
testb
pop
add
insl
xchg
int3
jbe
cmp
push
or
pop
aam
or
push
lods
adc
xlat
jo
stos
jno
stc
or
test
lods
test
lods
pop
add
loope
cmp
outsl
pop
adcl
or
pop
mov
dec
jb
add
repnz
mov
sbb
cmc
xor
sbb
int
cs
mov
lea
dec
cmc
adc
add
cli
add
test
pop
pop
scas
xchg
movsl
mov
adc
mov
mov
stos
or
outsl
stc
sub
movsl
dec
dec
cmp
fs
repnz
es
adc
xchg
inc
pop
mov
clc
cs
xor
xor
push
xchg
jb
es
push
pop
jp
xchg
ret
adc
es
outsl
sbb
mov
mov
notb
js
icebp
mov
pusha
pop
push
fcmove
and
sti
and
enter
sti
mov
sbb
inc
sbb
sub
push
into
popa
aad
nop
mov
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
test
pop
out
push
fs
dec
inc
xor
or
push
cmpsb
mov
push
mov
mov
or
dec
into
jnp
push
dec
std
adc
mov
fisubs
std
stc
movsb
in
in
loopne
mov
test
ret
aaa
mov
push
sbb
push
push
shlb
out
shlb
adc
ret
imul
sbb
jnp
push
fsubp
mov
adc
mov
jnp
in
sbb
mov
lds
inc
fucomi
add
mov
aam
bound
cltd
pop
testl
shr
xor
popa
in
repz
sarb
xchg
push
mov
subl
mov
out
into
mov
fistps
adc
sbb
lock
push
or
cmpsl
lret
inc
lret
addl
out
dec
rcr
mov
lock
cmc
xchg
mov
dec
std
sbb
pop
into
fsubl
push
mov
cwtl
mov
push
sub
nop
mov
in
cmp
fs
jns
or
outsl
int
jbe
dec
in
or
into
mov
int
rcrl
mov
leave
das
jl
xchg
scas
sbb
arpl
push
sbbl
inc
jns
mov
test
xor
out
inc
and
mov
rorb
and
dec
mov
cs
or
mov
pusha
mov
outsl
mov
xchg
cmp
xchg
roll
and
jo
mov
sub
jo
rorl
shrl
ret
jno
stos
out
xor
pop
js
lret
pushf
cmp
dec
adc
dec
pop
mov
cs
movb
mov
mov
clc
aaa
mov
jge
and
js
lret
or
sbb
add
inc
push
movsb
jmp
cmp
sbb
cld
dec
dec
les
sbb
dec
inc
sbb
and
pop
enter
iret
int3
and
mov
jmp
add
insb
xchg
xor
add
mov
in
scas
mov
mov
subb
les
mov
xchg
inc
cld
xor
adc
inc
add
add
add
add
adc
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
jae
aam
xchg
mov
jle
rcrl
rcr
push
loope
fnstcw
shll
icebp
lret
or
adc
scas
negb
mov
and
mov
add
or
xchg
xchg
sub
xor
aam
add
mov
arpl
sbb
lock
cld
fcomps
stos
aad
bound
pop
mov
mov
dec
dec
scas
cmp
out
mov
pop
and
push
mov
jns
jge
xchg
or
lahf
int
mov
dec
push
cmc
cmp
lods
imul
fs
or
xchg
inc
jae
es
lods
addr16
leave
ljmp
cmp
xchg
jl
mov
ret
pop
pop
in
dec
or
popf
fists
cmc
sbb
mov
scas
insb
loop
fmuls
jo
repz
pop
sbb
jne
jg
pop
pop
fistpll
sub
imul
je
mov
xlat
jnp
xor
push
mov
inc
out
lcall
jmp
pop
ror
cmp
test
dec
popl
dec
jmp
add
xorl
xchg
shl
push
stc
xor
mov
jg
in
jl
inc
and
addb
lods
mov
adc
fisttpl
pusha
test
add
fldenv
loopne
mov
ljmp
icebp
iret
pushl
sub
mov
daa
iret
lods
hlt
out
nop
cmc
incl
xchg
out
push
pop
or
inc
push
mov
scas
adc
push
frstor
jns
or
or
test
ret
int
add
ret
adc
int3
repz
popf
daa
add
add
xor
cmp
xor
xchg
pusha
jge
mov
in
lret
insl
in
jb
andl
xor
out
jge
out
out
push
ljmp
ljmp
lods
in
pop
push
rolb
dec
adc
and
imul
insb
out
pop
test
loop
and
mov
aam
sbb
mov
cld
or
ss
imul
mov
mov
cmp
push
mov
scas
aaa
or
mov
mov
clc
adc
int
out
fstl
sub
pushf
test
aas
cwtl
ds
xor
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
xor
cwtl
or
jg
jle
in
dec
shr
insb
stc
inc
int3
fiaddl
push
push
pop
jp
movl
in
or
std
out
in
lods
mov
dec
lods
adc
sub
jno
cwtl
mov
dec
jbe
cmpb
and
mov
adc
pop
addl
jb
pop
ss
loop
fisubrs
push
sub
fnsave
loopne
mov
fistl
fdivr
iret
sahf
call
dec
and
mov
jo
add
mov
dec
hlt
mov
test
xchg
out
pop
ss
orw
lcall
jae
repnz
push
add
cmpsb
and
mov
pop
lods
adc
cld
xor
test
les
pop
loop
and
cld
mov
test
adc
add
daa
fisttpll
fsubrl
mov
scas
xor
push
push
mov
mov
mov
lcall
mov
add
sub
ret
jne
sub
fcompl
xchg
cmp
and
pop
dec
mov
jg
popl
out
in
and
and
dec
mov
or
cmc
cmp
int
ds
aas
cmp
int3
shrl
ja
add
into
enter
adc
push
mov
in
cld
mov
or
sub
xorb
movl
or
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
adc
icebp
jg
jle
inc
pop
jae
insl
inc
mov
adc
lcall
cs
push
cmp
sbb
mov
test
lods
or
aam
sbb
scas
dec
cmp
stos
pop
adc
push
fldcw
cltd
cmc
or
lds
es
adc
movsl
ret
dec
repnz
mov
loopne
insl
cmp
xor
sti
cltd
pop
jbe
scas
jae
stc
and
adc
pop
mov
pop
pusha
nop
jp
iret
andb
les
scas
or
in
mov
push
jge
xorb
xchg
sti
cmp
sub
mov
dec
fstpt
adc
test
and
aas
loopne
xor
or
je
push
mov
inc
dec
add
or
ret
out
inc
pop
jo
aaa
and
cmpl
adc
cmpsl
lds
rol
int3
cwtl
jle
xlat
xlat
and
pusha
sahf
ljmp
jo
and
nop
outsb
outsb
dec
sbb
add
push
loop
push
or
cltd
and
sbb
sarb
cmp
pop
adc
push
stos
incl
fbld
faddl
push
cmp
jae
cmc
stos
sbb
cltd
sub
jg
jne
rclb
daa
aas
mov
sbb
mov
sbb
cmp
inc
frstor
imul
xchg
sub
lahf
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
pop
mov
sub
inc
jle
icebp
jg
jle
xchg
adc
ds
pop
mov
cltd
mov
frstor
pushf
mov
xchg
sbb
push
xchg
outsl
enter
push
pop
push
inc
insl
push
push
stos
and
pop
inc
pop
cmp
pop
mov
add
mov
rcrl
faddp
jmp
pushf
scas
das
fldenv
mov
and
addl
cmp
or
js
lcall
sub
ret
mov
dec
cmp
jne
and
icebp
notl
xlat
xor
cwtl
mov
or
mov
fnstenv
mov
jmp
push
cmp
xchg
cmpsl
xchg
leave
bound
push
cld
ret
push
fstl
mov
pop
inc
fs
and
pop
lret
ds
jns
icebp
ret
loop
cli
push
xchg
repnz
mov
cmp
notl
cmc
pop
call
push
or
addl
out
bswap
xor
mov
xor
aas
push
cs
test
arpl
jecxz
es
push
fisttpl
sub
xchg
dec
sbb
call
je
clc
inc
pop
adc
lahf
mov
cmc
das
cltd
mov
dec
out
popf
cmpsb
add
ret
sbb
test
rorb
lea
jns
imul
mov
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
mov
loopne
inc
jle
icebp
jg
jle
ds
and
fiadds
and
or
sub
test
dec
lods
add
sbb
out
adc
pop
cmp
pusha
popa
mov
pop
les
stos
je
xchg
repnz
rcr
push
adc
mov
shll
mov
loopw
cmp
and
push
pop
jne
adc
dec
xorb
test
jl
dec
ja
outsl
inc
mov
push
out
jne
push
loopne
inc
adc
lods
inc
pop
add
shll
std
aam
dec
push
ret
ret
cli
jecxz
in
pop
outsb
cmp
or
adc
inc
imul
inc
add
imul
mov
test
int3
sub
mov
nop
inc
mov
mov
mov
dec
out
push
pop
dec
cmp
ljmp
out
cmc
push
nop
mov
sbb
insl
loop
mov
test
push
sub
stos
mov
das
sbb
push
sub
in
jne
pop
xlat
sub
sti
cmp
mov
adc
les
xchg
aaa
jbe
pop
loope
pop
clc
ds
jge
jno
into
lds
sub
in
sbb
mov
mov
mov
fidivs
cmp
out
mov
xor
hlt
sbb
stc
inc
pop
out
pop
mov
adc
mov
movsl
inc
push
or
out
sahf
andl
fsubrs
scas
push
shlb
push
jl
in
xchg
sbb
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
jp
inc
jle
icebp
jg
jle
jae
out
sbb
push
loope
cwtl
in
adc
adc
test
ret
dec
ret
out
mov
pop
jecxz
jl
insb
int3
imul
add
lcall
push
rorb
mov
mov
mov
adc
aaa
mov
inc
pop
mov
lret
adc
jl
sbb
jb,pt
pop
sbb
jb
sub
mov
lds
sub
test
inc
push
outsb
leave
and
cmp
rcrl
inc
rcrb
pop
ss
pcmpeqd
icebp
ret
jp
xor
sbb
into
loop
nop
jl
addl
lods
sarl
and
fsubr
aaa
mov
int
enter
adcb
jne
pushf
lock
fnstsw
cmp
inc
aas
jmp
pop
movsb
cmp
pop
test
in
cmpsl
rclb
mov
and
jg
xor
or
sbb
sbb
loop
push
nop
rol
push
mov
mov
outsb
sbb
data16
pop
movsl
clc
dec
mov
push
xor
mov
xchg
xor
and
mov
inc
addr16
pop
daa
xchg
lret
cmc
fsubrl
push
notl
or
hlt
aas
pop
dec
ds
icebp
cmpsb
lcall
aas
lock
adc
or
lahf
jmp
cltd
fs
clc
roll
out
mov
dec
xchg
xchg
sbb
and
xor
pop
cld
decl
jmp
ljmp
jo
fidivs
in
in
jmp
icebp
jg
jle
shll
pushf
repz
les
or
push
cmc
jg
cld
loopne
bound
rcrb
jecxz
push
jp
jae
mov
dec
push
jae
jmp
popf
je
dec
out
scas
sub
inc
pusha
dec
xchg
inc
inc
pop
xchg
xchg
imul
jns
out
dec
cmp
add
fistpl
push
stos
cmp
mov
fsubr
dec
mov
jmp
ja
xchg
sub
cmpsb
lret
lcall
fsubr
popa
cwtl
jmp
bswap
gs
push
fsubl
and
in
sahf
xor
fdivrl
test
sahf
lock
xlat
int3
sub
add
and
adc
sarl
inc
pop
add
test
add
ds
popf
or
out
sub
rcrl
insl
sub
pop
out
mov
in
inc
int
xor
push
and
add
cmp
and
scas
ljmp
and
cmp
leave
fsubrp
lds
mov
push
and
ja
stos
mov
ds
dec
inc
lret
imul
add
mov
mov
outsl
sbbl
in
stos
outsb
out
pop
idivl
ds
xchg
push
jp
lods
push
dec
push
mov
mov
jae
pop
pop
adc
and
in
and
xor
mov
add
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
sub
sahf
andl
sub
loope
cmp
adc
cs
ljmp
jns,pt
mov
ror
jecxz
or
fcmove
xor
mov
cmp
dec
xchg
push
push
iret
jne
dec
jae
iret
add
scas
xor
pop
push
fldt
aam
shrb
xchg
insb
add
aas
mov
ja
ja
repnz
cmp
jae
add
in
pop
cmp
xor
and
dec
roll
loop
xchg
jno
test
ror
jbe
arpl
je
movsl
test
push
ret
clc
pop
sub
push
dec
sub
sub
sub
inc
xchg
test
push
popa
xchg
jnp
sbb
cmpb
push
sar
movl
mov
in
popa
cltd
jle
fucom
repz
cmp
test
int
mov
in
lock
mov
pop
push
xchg
push
xchg
das
xorl
xor
test
mov
push
imul
dec
rcr
pop
jmp
cmp
fwait
sahf
cmp
jno
fiadds
push
outsb
jecxz
ds
in
je
std
or
aas
mov
xor
adc
and
pop
cmp
jae
cmp
fnstcw
jns
mov
daa
addb
adc
mov
inc
or
das
mov
dec
jae
js
cmpsl
cli
jnp
and
dec
sbb
movsb
nop
pop
out
cs
and
or
xchg
adc
mov
icebp
js
jle
test
and
mov
fistpl
and
add
sub
cmp
dec
fiadds
shlb
xlat
in
retw
lods
jns
popf
nop
incb
js
pop
or
adc
out
add
cmpsb
jmp
jbe
dec
push
fldl2t
inc
push
sarl
in
and
icebp
adc
push
orb
cmpsl
mov
push
add
pusha
scas
sbb
xchg
xchg
mov
mov
or
int
dec
cmp
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
and
and
jl
jle
mov
pop
xchg
std
jb
sarb
xabort
jnp
push
insb
add
xor
outsb
or
xchg
lahf
xor
fsub
lods
mov
cmp
push
stc
movsl
out
fists
pop
test
or
movsb
insl
or
lret
xchg
push
movsl
pop
xchg
and
popa
dec
jp
cmpsb
repz
mov
or
loope
push
jmp
in
push
jb
divb
xchg
jmp
dec
lods
subl
mov
dec
add
add
fwait
test
push
inc
push
mov
push
adc
enter
sbb
adc
jb
rclb
sbb
cli
and
filds
inc
clc
out
movsb
out
and
xchg
add
mov
inc
aad
imul
out
shll
sbb
inc
push
jecxz
dec
sub
sub
ja
push
ds
jo
int3
ds
call
dec
inc
neg
mov
push
mov
pop
adc
pop
fisttpl
dec
cmpsb
andl
mov
pop
outsb
insb
int
das
jle
mov
push
jb
dec
mov
jbe
add
or
xor
cwtl
pop
loopne
mov
movsl
jne
mov
daa
pusha
test
or
rolb
pop
mov
jg
ret
mov
sbb
add
sub
rorb
mov
inc
mov
shl
mov
cmpsb
push
in
mov
loope
ficoms
popa
sub
daa
movsl
add
insb
push
adc
jp
xchg
stos
xor
inc
movsl
sbb
movsb
sub
fisubrl
pop
and
das
and
leave
ss
dec
mov
dec
push
in
dec
rcr
inc
push
jp
imul
jmp
mov
or
mov
lods
mov
dec
cmc
push
ret
testl
cmp
ret
xchg
dec
jp
fsubl
sbb
dec
xchg
into
lds
jns
hlt
into
jecxz
mov
in
ret
jne
mov
add
jmp
mov
imul
mov
pop
dec
jle
adc
xchg
sbb
cmpsl
loope
rclb
push
dec
cs
enter
repnz
xchg
or
bound
sahf
addr16
int
imul
iret
sbb
wrmsr
ljmp
sar
jge
out
mov
bound
negl
add
push
enter
dec
or
sub
mov
icebp
ret
cmp
in
mov
mov
sbb
lret
enter
fnsave
cmp
rclb
sti
out
mov
aaa
data16
mov
out
mov
outsb
sub
sub
dec
pop
pushf
cmp
sbb
xchg
into
xor
icebp
in
fmull
add
pop
test
mov
sbb
jo
mov
cmp
push
jb
add
add
call
dec
pop
push
pop
fsubs
pop
mov
in
mov
inc
daa
add
lock
stos
pop
cmp
sbb
adc
xor
shll
xlat
sarl
and
adc
mov
pop
and
std
push
loopne
cmp
cmpsb
dec
inc
aad
lahf
ljmp
push
jmp
mov
cmp
inc
loope
sbb
fdivrs
incl
out
scas
sbb
sbb
enter
or
into
rclb
push
dec
xchg
mov
and
aam
in
cmpsl
outsb
movsl
and
xor
das
fdivrs
cmp
aad
inc
sbbl
pop
cmpsl
xchg
aas
dec
addr16
mov
sbb
out
mov
push
mov
cwtl
cli
dec
xchg
nop
loop
lret
popf
lods
xor
sbb
test
jae
sbb
xchg
xchg
adc
ret
jg
or
aas
aad
in
mov
mov
roll
dec
js
mov
sub
pushf
aaa
push
lret
lds
out
push
imul
sub
lea
inc
or
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
test
add
jp
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
push
mov
add
add
add
out
movsl
add
loope
jle
lahf
fistl
bound
dec
mov
repnz
movb
fwait
repz
jb
cmp
shrb
mov
cmp
jno
sbbl
stos
repz
jo
jnp
xor
outsl
movsb
dec
aam
push
inc
cmp
xchg
cwtl
mov
cmp
repnz
dec
mov
mov
add
mov
push
sbb
mov
cmpsl
dec
movsb
pop
xchg
movsl
out
lret
pop
add
das
or
pop
scas
int3
xrelease
xchg
fcoml
out
cld
mov
mov
shll
pop
sbb
sti
pop
jne
lret
imul
pop
subl
out
and
add
mov
outsl
sbbb
adc
add
xchg
je
cli
xchg
aam
stos
nop
hlt
out
pop
jb
popa
push
aaa
mov
popf
pop
push
and
jb
stos
fwait
mov
fiadds
add
add
push
pusha
in
jle
lcall
aam
fadds
add
add
add
xchg
mov
cmpl
xchg
loop
das
ljmp
sbb
incb
adc
shl
fs
cmc
cltd
movsl
sbb
cmpsb
fisttpll
xchg
xchg
cs
mov
in
fists
xor
stos
arpl
js
bound
jb
xchg
sbb
ds
dec
push
das
divps
inc
loop
je
mov
mov
test
or
mov
jae
mov
mov
lods
lds
cmp
mov
mov
jp
jle
jp
jecxz
xchg
cs
imul
pushf
mov
imul
push
mov
outsb
lcall
es
lods
loop
push
popf
and
mov
dec
clc
test
sbb
jge
out
sbb
lods
push
aam
mov
fmuls
lods
lcall
and
xor
in
scas
insb
push
orb
aam
jo
inc
pushf
xchg
add
add
mov
push
fldl2t
aas
mov
add
add
pop
mov
and
jmp
and
in
jge
lds
in
xchg
dec
clc
bound
into
aad
sbb
clc
dec
icebp
cmc
inc
lahf
mov
test
in
adc
sbb
push
mov
push
pop
enter
ret
adc
movsl
mov
daa
dec
dec
test
int
idivb
lret
pop
in
subb
lock
or
or
dec
loopne
int
cmp
testb
adc
int
push
jmp
dec
pushf
sub
xor
mov
cmpsb
inc
dec
sub
fs
sub
cs
test
mov
stos
pop
sahf
lret
fidivrl
cmpsb
sub
inc
test
xchg
add
pop
jecxz
cwtl
out
jo
xor
push
push
inc
xor
sub
dec
cmp
adc
lock
out
rcrl
psubb
aam
rorb
add
mov
roll
ret
xor
lret
add
add
add
out
int
sbb
test
inc
std
fdivrp
out
xchg
or
je
lea
stos
sub
jns
push
sub
mov
fs
push
sbb
negl
sub
aam
outsb
fbld
shrl
data16
icebp
mov
add
push
fdivrs
dec
loope
sbb
in
lea
popf
repnz
lods
or
insl
pop
jo
int
cltd
push
mov
cs
rclb
clc
push
sbbl
pop
stc
sbb
mov
cmp
jl
sbb
cmp
pop
pop
adc
jbe
inc
clc
inc
outsl
mov
push
pop
jnp
fwait
cli
and
je
outsl
imul
ds
out
hlt
xlat
call
dec
mov
lret
inc
mov
ja
sub
mov
mov
mov
test
pop
jae
or
pop
dec
or
fbld
fildl
add
add
add
lret
sbb
push
cmp
stos
fwait
lds
push
repnz
xchg
add
rorl
or
inc
mov
mov
nop
negl
xor
cwtl
and
inc
fistl
ret
and
repz
sbb
xor
movsb
add
es
sti
push
push
xchg
sahf
ja
cmp
mov
cmp
std
stos
sarb
neg
and
fwait
mov
push
inc
or
jo
aas
popa
jbe
ljmpw
cwtl
imul
mov
in
dec
xchg
push
jno
push
sbb
test
sbb
jg
dec
adc
arpl
sahf
shr
inc
or
aad
fistl
dec
sbb
out
repz
mov
test
pusha
inc
add
mov
push
add
xor
out
lods
and
push
pushf
test
in
stos
mov
jne
lea
xor
cltd
jg
cmc
insl
cmc
out
lcall
enter
sub
add
add
sub
push
je
and
ret
insl
pop
jbe
in
lret
fldt
push
or
scas
xor
add
fwait
mov
or
incb
inc
fstpt
into
cwtl
addr16
loopne
fstpt
ja
pushf
pop
data16
stos
mov
arpl
lcall
and
jp
inc
out
out
sti
xchg
loop
cmpsb
pop
std
inc
jns
pop
sbb
leave
gs
xor
add
cmp
mov
cmp
xchg
and
mov
iret
mov
std
cmpsl
das
inc
adc
cmp
jge
dec
fdivrs
pusha
addl
push
pop
add
ljmp
push
xlat
enter
repnz
int
scas
enter
out
or
add
sbb
jmp
sbb
aaa
mov
shlb
out
dec
int3
out
fisubl
or
cltd
dec
mov
movsb
shlb
hlt
sub
add
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
incb
mov
mov
jecxz
xchg
xchg
test
fucom
inc
fiadds
mov
sbb
fs
shrl
mov
cmpsb
jle
mov
mov
mov
sti
xlat
ljmp
push
pop
mov
nop
mov
popa
xchg
arpl
or
cmp
and
push
jbe
jnp
out
cmpsb
stos
outsb
cld
shrl
pop
or
add
and
int3
mov
fisubs
inc
int3
icebp
addb
add
jg
xor
clc
cmp
sub
rol
cmp
push
sbb
sub
cmp
inc
push
adc
mov
in
dec
dec
pop
int3
sbb
notb
insb
rcll
jl
dec
inc
add
cld
les
pop
shll
dec
jg
pushf
imul
out
sbb
sbb
add
dec
mov
scas
in
xchg
in
mov
sbb
lret
and
js
mov
or
and
scas
sti
jle
pop
push
pop
xchg
out
cmp
fiadds
add
add
add
es
ficomps
mov
add
aas
push
xorb
scas
sub
cs
mov
lea
mov
mov
fistl
sub
sahf
mov
mov
gs
mov
inc
push
inc
inc
sub
cmpsb
lock
ja
jmp
mov
dec
cwtl
adc
outsb
sbb
negl
aas
stos
cmpsb
mov
jno
gs
dec
add
hlt
xor
xor
mov
into
dec
shll
cmc
gs
idivl
jbe
test
orl
aaa
sbbl
xor
cli
cmp
outsl
fnsave
test
xor
inc
loopne
repz
inc
out
loopne
jmp
stos
inc
sub
aad
in
cmp
xor
mov
add
mov
popl
mov
test
mov
ljmp
int3
scas
outsl
gs
fcoms
loope
das
mov
cmpsb
pop
int3
aam
fdivrs
xor
inc
inc
mov
add
negl
arpl
shrb
jae
filds
add
add
add
in
and
div
mov
xor
rcl
scas
stos
out
enter
sub
sbb
loopne
mov
repnz
enter
inc
mov
sarl
jbe
mov
addr16
lea
cli
cltd
dec
push
xor
je
hlt
into
xchg
ljmp
sub
dec
pusha
scas
out
sbb
push
mov
xchg
adc
rcrl
mov
pushf
inc
divl
mov
push
push
popa
pop
in
mov
lods
in
fsts
bnd
sahf
mov
cmp
pop
inc
xchg
test
clc
rorl
add
push
into
jg
sub
pop
test
adc
pop
out
cmpsl
and
aad
pop
jo
loopne
imul
dec
fisttps
fisttpl
rolb
lcall
add
push
jl
jle
insb
out
cs
sub
cmp
add
add
add
push
pop
aam
and
sub
mov
xchg
xor
sbb
pop
notb
in
fcmovu
xor
push
fbld
sahf
fistpll
and
lea
lock
sub
arpl
in
repz
stos
push
mov
pop
in
repz
push
adc
pop
sub
mov
adc
mov
sub
into
jg
lds
icebp
out
sub
xchg
inc
out
jp
ror
cmp
cmp
sti
popa
fisubs
push
mov
fldl
inc
lods
adc
pop
shrb
cmp
sub
cmpl
nop
aas
stos
push
xchg
icebp
fldl
mov
rcpps
inc
sbb
ja
lcall
aas
push
mov
sar
mov
iretw
cmpsl
cmp
mov
and
les
mov
scas
xchg
sub
scas
rcll
xor
test
push
cmp
pop
je
pop
notb
mov
adc
in
xor
adc
loopew
add
add
add
into
fcmove
sarl
cld
and
adc
dec
push
adc
jbe
mov
outsl
mov
jmp
dec
stos
scas
add
loop
ret
loop
mov
or
rorl
clc
xchg
shl
aas
fidivrl
mov
jno
mov
cmpsl
mov
and
jg
ret
fwait
test
push
notl
lcall
in
push
lds
enter
jge
jmp
add
dec
pop
pop
imul
movsb
or
test
inc
rclb
sub
adc
xchg
dec
sbb
pop
cs
sub
xor
jp
sbb
adc
lods
xor
jg
and
clc
add
sub
cld
add
shl
sbb
adc
mov
jo
push
enter
filds
stos
stos
jmp
mov
cli
dec
je
adc
lcall
push
mov
aaa
data16
jne
mov
lcall
add
add
add
cli
fistpll
inc
aad
push
sarb
lcall
add
push
mov
jecxz
mov
jae
dec
ss
dec
or
jle
xchg
or
fimuls
sbb
xor
and
xchg
xchg
mov
fists
leave
fldcw
das
mov
int
sbb
and
mov
mov
inc
lock
outsb
xor
mov
cmp
or
pop
adc
and
pop
push
jb
ljmp
sbb
fst
xchg
inc
jb
and
push
movsl
ret
ljmp
sbb
add
sbb
mov
std
popa
push
adc
subb
mov
mov
lret
js
push
adc
ret
or
jg
imul
cli
mov
in
xchg
mov
int
dec
jns
mov
jb
add
add
add
jnp
sti
xchg
lahf
mov
jmp
jcxz
add
add
add
inc
mov
cs
mov
imul
insl
jp
divb
push
sub
dec
jno
jno
into
je
imul
push
andb
arpl
inc
sbbl
into
call
imul
add
lahf
xchg
fildl
popf
xor
cmpb
mov
or
cwtl
lods
sbb
or
mov
mov
popa
mov
adc
pop
js
fistl
dec
into
jbe
gs
lret
aam
jl
cli
lcall
push
adc
into
icebp
call
mov
or
jno
jge
mov
push
pop
aaa
xchg
iret
ja
lock
mov
xor
mov
dec
imul
mov
out
outsl
into
add
inc
shrl
mov
adc
inc
jp
incb
fidivrs
idivl
ljmp
and
repz
add
pop
sarl
mov
je
in
add
add
add
push
inc
icebp
test
mov
and
popa
clc
inc
jp
sbb
shlb
jns
push
andb
or
mov
ret
cmpsb
test
pop
jnp
pop
cmp
sub
mov
cmp
cli
stc
nop
rcll
imul
fwait
mov
outsl
mov
cmpsb
xchg
pop
ljmp
sbb
insl
add
hlt
cmp
addb
lods
popf
push
push
sub
call
sar
shlb
mov
clc
xchg
cmp
aas
ljmp
les
mov
mov
mov
clc
cmp
cwtl
xor
jns
addr16
adc
fdivr
inc
sub
sahf
cmp
push
xor
jo
mov
mov
push
adc
cmc
mov
add
xor
aaa
sub
or
pop
lret
sarb
add
add
repz
std
repz
bound
addr16
add
add
add
bound
repnz
mov
mov
mov
xor
pop
add
jb
int3
gs
je
lret
sbb
rcrl
add
in
push
xchg
sbb
mov
xchg
jle
loopne
or
pop
push
fsubs
mov
movsb
and
loope
mov
fsubrl
cmp
fld1
xchg
out
cmp
push
es
sarb
adc
outsl
xchg
dec
mov
je
jne
and
mov
cmp
fs
stc
fistps
adc
sub
sbb
adc
jp
mov
xchg
repz
sub
shl
rcll
outsb
les
push
sub
iret
pop
out
in
pusha
inc
mov
cmp
into
mov
or
push
outsl
and
mov
iret
mov
cmp
pop
pop
jo
daa
mov
cmp
movsb
out
es
fdivr
pusha
into
xchg
and
add
stc
add
lea
add
add
lock
cmp
arpl
je
aam
addr16
add
add
add
mov
std
xor
push
xor
sbb
dec
lods
jno
adc
fstpt
inc
in
movsb
gs
fcoms
mov
sub
insb
jo
rorb
fs
mov
inc
sub
xor
aas
lcall
pop
sbb
sbb
adc
test
leave
mov
ss
fistps
frstor
cs
mov
pop
es
mov
aaa
rcrl
dec
cmpsb
cltd
aaa
iret
cld
push
mov
mov
cli
shl
jmp
sbb
mov
adc
dec
xchg
sub
xor
aas
jnp
adc
push
mov
ret
les
or
ljmp
adc
test
lret
cld
add
fmul
sub
sbb
jmp
sbb
stos
push
push
pusha
fnstenv
adc
xor
fadds
xorb
xor
add
mov
mov
pop
sbb
addr16
add
add
add
mov
adc
fsub
inc
imul
sub
ljmp
add
xchg
rorb
stc
xor
mov
stos
aam
push
les
mov
pop
pop
push
in
adc
sub
dec
sub
mov
and
jp
add
daa
cmpb
shlb
andb
pushf
lock
lret
fcmovnb
pop
xor
fwait
add
cltd
jle
in
push
scas
pop
xlat
clc
aad
gs
and
in
push
loop
aam
fisubl
decb
or
add
aam
ljmp
cmc
subb
cmp
fwait
jecxz
mov
mov
add
adc
mov
dec
pop
outsl
lds
sbbb
xor
mov
gs
dec
jg
outsb
lea
xchg
mov
pop
and
sar
dec
mov
call
lret
xchg
in
mov
incl
rcrl
push
mov
add
add
jg
mov
movsl
xor
sbb
or
addr16
scas
sub
repnz
call
lahf
loope
or
xchg
push
mov
mov
loop
jp
jne
ljmp
inc
mov
cmpsb
xchg
xchg
xchg
popl
push
xor
inc
dec
lds
cmpsl
loop
cmpb
mov
xor
lea
xlat
nop
in
lds
into
pushl
cltd
dec
repz
les
andb
shrd
aaa
cmp
xchg
mov
xlat
push
movsl
push
inc
inc
sub
inc
aaa
pop
imul
and
jnp
cmp
test
pop
xchg
gs
shrb
in
in
mov
outsl
sbb
and
js
push
outsb
inc
popf
dec
into
loopne
mov
imul
sbb
out
ss
test
jmp
enter
dec
cmp
cmc
pop
inc
test
jnp
inc
mov
in
negl
sub
movsb
stos
mov
add
add
add
dec
in
jb
fmuls
ss
out
mov
insl
sbb
ja
add
insb
data16
enter
hlt
pop
out
nop
mov
xchg
neg
jecxz
movsb
scas
pop
aas
inc
mov
sub
mov
ds
cmp
pop
ret
aam
xor
lret
pop
adc
pop
jns
addr16
dec
fsubrs
jg
mov
mov
add
jb
fidivl
pop
mov
sub
out
jmp
mov
out
add
or
in
inc
loopne
mov
cmp
out
fisubs
push
lods
test
xchg
mov
stos
dec
ja
mov
icebp
in
mov
int
xor
inc
shr
scas
sahf
xor
sub
cmp
movsb
imul
pop
pushf
mov
or
out
dec
out
int
leave
mov
and
sbb
and
int
daa
pop
movsb
fistpll
stc
dec
push
fsubl
ljmp
push
cmp
aas
in
and
jl
push
rorl
pop
dec
inc
push
push
iret
lret
cmp
xor
push
xor
xchg
setge
push
and
loopne
movsl
jno
ror
and
dec
dec
not
in
pusha
sub
hlt
insb
xchg
sbb
lock
sbb
adc
popf
sbb
sarw
adc
xor
incl
mov
fwait
rcrl
aas
or
jmp
push
mov
mov
mov
adc
loope
rolb
sub
jl
pop
stc
push
push
pop
fdivrs
cwtd
pop
cmp
jb
sub
push
sub
fwait
cmpsb
call
loope
pop
pop
pop
push
adc
mov
stc
aas
jmp
push
scas
in
and
shr
pop
pop
movsb
jp
testl
in
adc
test
pop
mov
sbb
addl
sub
xor
pop
loope
subl
cmp
mov
push
push
push
mov
in
addr16
add
add
add
mov
clc
mov
rol
inc
int3
aaa
aad
dec
test
lret
add
dec
push
mov
fcomp
das
outsb
mov
out
icebp
xor
jb
jmp
out
repz
insl
cmpsb
sbb
xchg
mov
aam
xchg
add
or
push
jo
push
sbb
test
and
inc
mov
or
loope
jl
mov
pop
rcll
iret
rcll
rcr
and
adc
push
jp
shr
cmc
xchg
mov
fdivr
xchg
or
ljmp
test
jge
pop
lahf
jecxz
push
adc
inc
jb
fstpl
scas
std
arpl
or
inc
jae
filds
dec
mov
test
std
iret
fdiv
jbe
mov
dec
movsl
or
or
push
push
jo
mov
push
jb
adc
cmpsl
mov
popa
or
and
mov
add
add
repnz
add
pop
lcall
les
cld
xor
addr16
add
add
add
test
xchg
movsl
dec
jb
je
xchg
xor
push
dec
mov
xchg
mov
iret
mov
or
inc
or
add
push
mov
in
xchg
std
xchg
mov
loope
jg
mov
jae
jl
mov
outsl
cltd
leave
cltd
loopne
xlat
xchg
and
imul
jmp
cs
mov
mov
subl
add
and
adc
clc
idiv
mov
or
or
in
xor
loopne
jg
dec
xor
mov
mov
jnp
mov
shrl
imul
jne
mov
loope
xlat
xor
mov
iret
mov
sarl
outsl
jg
ds
cwtl
mov
pop
push
jmp
xor
mov
sub
mov
add
sub
add
add
mov
push
decl
xchg
stc
clc
addr16
add
add
add
jg
test
adc
fbstp
xchg
push
mov
pop
incl
lods
adc
fwait
inc
push
add
mov
or
outsl
pop
hlt
imul
lret
xor
adc
mov
clc
mov
mov
mov
stos
or
test
pop
add
xor
cmp
or
jge
les
lea
lret
arpl
push
dec
enter
stos
ja
mov
xor
adc
sbbb
inc
mov
add
loop
sbb
dec
push
inc
or
and
ret
sahf
dec
int
fildll
arpl
and
clc
push
ljmp
mov
mov
mov
inc
fisubrl
inc
jb
out
mov
mov
add
jbe
imul
lods
jmp
rorb
movl
add
add
jmp
in
push
sub
mov
add
add
lds
aam
adc
xchg
jb
or
pop
out
xor
pop
mov
inc
hlt
stos
aam
outsl
in
orl
or
xchg
fnsave
cld
push
adc
mov
inc
stos
daa
leave
hlt
int
stos
adc
outsl
ja
push
loope
mov
inc
adc
dec
getsec
cmp
ret
mov
cwtl
push
mov
repz
cmp
insb
push
stos
mov
lea
test
mov
std
xchg
cmpsl
movsb
lock
xor
or
jbe
or
pop
sbb
sub
incb
pusha
mov
inc
insb
into
ret
sub
divb
int3
mov
movsl
mov
fcoms
pop
sbb
aas
push
lods
jmp
cmpsb
sub
rcrb
pop
push
mov
jo
adc
outsb
mov
sub
cmp
xor
cmpsb
inc
mov
mov
insb
mov
imul
and
and
mov
lcall
out
add
add
add
push
xor
ret
or
lret
xchg
arpl
inc
gs
xor
dec
repnz
pop
out
ljmp
mov
mov
lods
mov
mov
push
push
aaa
inc
mov
inc
aaa
xchg
in
pop
sbb
insl
jmp
in
mov
pop
lcall
adc
out
js
fdivrl
mov
inc
lahf
es
lock
cltd
xorb
fld
fcomps
cli
push
and
lds
imul
jmp
cld
sahf
inc
mov
xchg
ret
sbb
outsb
xlat
xchg
mov
imul
dec
iret
sbb
out
jbe
shr
dec
mov
add
pop
sub
jns
cmp
loop
test
inc
rorl
repz
mov
in
push
in
mov
xchg
gs
enter
scas
pop
fwait
arpl
nop
movsl
icebp
mov
add
mov
or
repz
ror
lock
jnp
xor
xchg
mov
notb
add
add
and
dec
scas
in
stos
imul
jnp
pop
jge
and
lock
mov
insb
in
vminps
out
adc
mov
push
pop
adc
add
in
mov
mov
xlat
push
cmc
mov
addl
sub
in
jns
sub
adc
xor
inc
adc
fsubr
mov
push
ret
test
stc
push
push
add
jne
pop
mov
xor
jae
xchg
aam
leave
add
cmp
xor
sub
cmp
xor
pop
xchg
mov
pop
jp
lcall
xor
testb
pop
cmp
mov
aaa
push
mov
mov
stc
dec
and
xchg
iret
test
mov
xchg
fimull
inc
rol
push
or
repz
std
mov
std
test
inc
dec
xor
push
ljmp
cmp
stos
add
jne
push
or
jnp
repnz
add
and
repz
fisubs
and
or
add
add
add
dec
ficomps
dec
loop
sbb
cld
xorl
les
inc
lcall
push
repnz
jae
sbb
adc
aaa
es
xchg
pushf
subl
push
dec
stos
inc
jmp
mov
push
sbb
divl
decl
gs
mov
xchg
sbb
or
mov
outsb
movsb
push
mov
mov
inc
xor
mov
enter
mov
leave
addr16
mov
or
inc
std
inc
adc
scas
sub
insl
test
scas
aaa
jle
sub
setae
stc
mov
mov
pusha
and
fs
sbb
xchg
add
sub
dec
pop
xchg
test
imul
fists
lds
mov
add
cmp
xchg
fwait
iret
mov
clc
mov
xchg
das
sbb
push
pop
inc
cmp
dec
into
pusha
testb
add
out
sbb
loope
ret
repnz
add
add
faddp
frstor
popa
xchg
adc
stos
jb
inc
mul
fucomi
sbb
xor
xor
sbb
jae
pop
sbb
push
add
imul
ds
in
decb
ja
sub
mov
push
enter
push
pop
pop
mov
push
mov
or
jmp
dec
pusha
jae
sub
adc
sub
aaa
repz
in
test
jp,pt
jns
jp
in
jl
push
push
add
test
push
jg
mov
popf
jecxz
out
sbb
add
nop
xchg
xchg
loope
out
cmp
fwait
hlt
aad
sub
xchg
aas
jg
mov
ja
mov
inc
imul
mov
lds
xchg
jg
mov
ficoms
push
je
ja
xchg
nop
inc
xchg
adc
push
mov
fsubs
mov
inc
and
cmp
imul
ret
pop
ds
shrl
cmc
scas
sub
mov
repz
add
add
dec
dec
sub
popa
test
mov
mov
sti
hlt
sarb
outsb
gs
or
adc
pop
paddusw
lcall
xor
lods
test
popf
cmp
ficoms
jnp
dec
mov
add
mov
pop
push
icebp
xor
fsubrs
lahf
adc
cwtl
inc
scas
scas
xchg
cmpsb
pop
mov
fdivp
icebp
inc
pusha
mov
dec
cs
ss
jg
sub
mov
ret
repz
outsl
push
xlat
mov
test
jbe
sti
xchg
cld
dec
push
mov
push
call
les
inc
ja
mov
push
out
pop
xlat
adc
pop
xchg
in
lds
xchg
mov
and
sar
sti
cmp
push
lea
pop
cmpsb
adcl
ss
xor
push
inc
pop
js
movsb
ucomiss
xor
xor
jg
push
dec
sub
addr16
pop
push
add
lret
pusha
rorb
cmpsb
mov
icebp
mov
hlt
add
add
add
xchg
int
mov
jno
sahf
push
das
mov
out
mov
push
cmpsl
test
inc
lods
sbb
ret
inc
add
std
mov
mov
xchg
or
sbb
push
add
mov
test
jge
adc
orb
ljmp
add
fadd
movl
aad
mov
mov
adc
xor
inc
jne
jge
mov
cmp
movsb
repz
loope
in
push
xchg
mov
or
xchg
pop
push
cmpl
add
xor
pusha
sbb
sbb
xlat
jge
divb
push
and
adc
mov
pop
mov
punpckhdq
or
push
inc
push
pop
dec
sbb
adc
lods
pusha
adc
pop
ret
inc
fildll
push
aas
xor
enter
cmpsl
imul
fcomps
push
jecxz
push
testl
sahf
adc
cmc
add
add
add
sti
dec
adc
popf
xchg
jae
mov
jl
lcall
xchg
xor
pop
outsb
push
mov
mov
repz
xchg
pop
ret
das
into
cs
push
into
mov
mov
repz
or
lods
mov
inc
sti
pop
pop
dec
fwait
sarb
and
add
pop
push
nop
pop
aaa
mov
mov
cs
shll
xor
inc
mov
negb
dec
jmp
out
push
jp
ret
imul
cmp
inc
imull
add
lea
popf
sbb
jbe
popf
lock
ja
jp
and
mov
popa
test
xor
mov
ja
push
add
daa
gs
lods
push
xchg
mov
fwait
popa
adc
ret
inc
neg
mov
enter
scas
adc
pop
lret
std
icebp
or
push
dec
stos
or
inc
lock
int
add
add
xchg
mov
mov
pop
das
mov
inc
testb
add
add
mov
xor
es
in
fidivs
pusha
leave
test
aam
cli
out
jecxz
mov
mov
pop
hlt
jge
xchg
test
das
jl
and
out
movsl
pushf
mov
jb
ljmp
ljmp
sahf
daa
loop
fcom
xor
fstpl
jle
cmp
pop
call
mov
das
loope
sub
pop
sub
inc
and
push
decb
mov
enter
jae
add
cmpsl
dec
repz
stos
sbb
adc
xor
xchg
nop
sub
outsw
dec
out
icebp
test
insl
mov
mov
mov
stos
jecxz
inc
shlb
jbe
jbe
fcoml
je
rolb
push
sbb
fmuls
insl
or
mov
stos
xchg
outsl
cmpsl
outsb
jg
xor
pop
nop
daa
out
mov
push
shrb
test
iret
ljmp
sub
push
xchg
dec
mov
fucomi
xor
dec
mov
add
add
fistpl
adcl
sbb
dec
pop
jp
incl
pushf
mov
pusha
rcrb
inc
out
subb
mov
jl
mov
xchg
cwtl
call
decl
enter
add
dec
adc
and
hlt
sbb
jb
dec
mov
sbb
sbb
lret
pop
inc
jae
xchg
dec
pop
jl
xchg
mov
popa
inc
push
sti
arpl
sbbb
popf
and
fdivs
mov
push
jnp
dec
repnz
loop
lods
jb
cmp
iret
pop
jge
and
jbe
loope
fistpll
pushl
jecxz
push
pop
outsl
xchg
sar
sub
arpl
in
inc
mov
das
adc
cmpsb
mov
push
test
ljmp
ds
pop
dec
movsb
jg
aam
lock
call
jns
or
cmc
movsl
mov
rorb
mov
sbb
ffreep
jbe
push
inc
pop
jns
aas
loopne
sub
clc
add
add
add
xchg
int
je
pop
lods
sub
mov
shrb
pop
dec
xchg
sub
sarb
sbb
scas
xchg
jg
xchg
scas
lds
pop
jo
xor
cmpsb
xchg
rcrb
cmp
in
cmpsl
cmp
fdivr
pop
adc
je
scas
jmp
fcmovnbe
lea
cltd
sarl
in
add
xor
adcl
mov
leave
fucomp
movsl
ljmp
adc
inc
insl
mov
or
add
insb
das
out
and
jecxz
xor
out
lds
dec
push
inc
scas
xlat
sbb
inc
xor
inc
ljmp
dec
sub
data16
fsubrs
mov
outsl
pusha
imul
sub
icebp
xor
mov
sbb
and
jl
push
or
jle
pushf
mov
ss
hlt
jnp
ljmp
add
cmpsb
sbb
jnp
mov
int3
or
add
add
add
mov
push
sub
sub
mov
dec
push
rol
imul
out
mov
and
adc
notb
cwtl
int3
push
add
pushf
lcall
scas
push
nop
inc
ds
sub
jg
mov
mov
dec
cmp
pushf
out
push
xchg
in
jns
mov
or
iret
add
cli
arpl
setp
sbb
lock
in
cmp
mov
mov
adc
pmuludq
leave
dec
hlt
ljmp
mov
add
cmpsb
call
mov
clc
cmpsb
cmp
rolb
mov
mov
and
and
enter
subl
adc
inc
insl
subb
push
xchg
jge
movsb
add
xor
scas
and
jbe
mov
stos
push
cmp
push
cltd
mov
mov
imul
gs
mov
cli
add
add
add
or
dec
sub
or
adc
insl
sub
sub
jb
adc
and
jmp
jg
ficoml
inc
daa
stc
or
push
add
test
mov
mov
sub
in
dec
jne
mov
inc
outsl
ret
cmp
outsl
imul
xor
mov
push
inc
jnp
rcrb
xchg
mov
mov
cmp
inc
pop
mov
and
cmpsb
xor
add
hlt
jne
popa
ja
jns
popf
pushf
out
gs
scas
add
imul
addr16
lahf
cmp
mov
repnz
aad
add
icebp
adc
xchg
jnp
stos
addr16
mov
mov
push
lcall
mov
mov
clc
add
and
mov
in
xlat
ret
add
cmp
jp
decl
add
xchg
mov
idivl
lahf
push
push
xchg
addr16
add
add
add
in
in
shrl
push
es
sarl
daa
push
mov
cli
out
mov
icebp
inc
push
jge
xchg
sbb
push
sysenter
movsb
sbbl
lods
bound
loope
jb,pt
outsb
hlt
xchg
mov
xor
mov
in
dec
stos
sbb
scas
push
lods
pop
hlt
into
jns
fmull
das
aam
sbb
arpl
repz
dec
jnp
add
lcall
or
jle
and
sub
add
xor
dec
jnp
mov
imul
pop
adc
pop
in
sti
mov
loopne
scas
iret
in
inc
adc
cltd
add
xchg
jae
mov
sbb
push
push
imul
mov
and
fs
adc
test
and
insl
and
mov
sbb
add
repnz
jnp
mov
test
mov
fidivrl
jnp
addr16
add
add
add
bound
arpl
mov
rcll
pop
jb
jl
jo
fxrstor
sub
adc
mov
filds
inc
jns
shll
rorl
addr16
outsb
sbb
xchg
sahf
jg
inc
int
mov
and
inc
cmp
out
adcb
js
iret
mov
or
push
inc
push
pop
sub
std
dec
into
pop
leave
cmp
btc
or
cmp
les
sub
flds
sbb
add
xor
pop
stos
adc
leave
and
mov
leave
push
or
mov
sbb
pop
pop
sbb
push
imul
push
stos
pushf
mov
arpl
push
xor
cmp
mov
fwait
mov
mov
cltd
movsb
dec
cmp
pop
inc
cmp
stc
stos
jb
loop
pop
in
or
roll
inc
push
push
icebp
sub
jmp
imul
lahf
repnz
pop
xor
addr16
add
add
add
jne
sbb
mov
sbb
and
jmp
movsl
xor
jecxz
add
sub
or
xchg
imul
popa
add
or
arpl
xor
cltd
jle
or
gs
xchg
dec
data16
das
jnp
stos
mov
nop
unpckhps
icebp
mov
mov
inc
mov
mov
add
mov
push
rclb
loope
mov
fmull
out
xor
orl
pop
fidivs
mov
sub
add
xlat
mov
push
sti
adc
fistps
loop
pop
ret
ja
fwait
andl
or
dec
scas
into
mov
lods
mov
dec
lret
mov
stos
out
movsb
jb
out
adc
gs
sbb
and
mov
xchg
mov
in
addl
pop
inc
push
sarl
test
fstl
fsts
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
popf
mov
add
add
add
push
aas
decl
jecxz
adc
inc
mov
outsb
mov
out
stos
xor
in
into
xchg
scas
fbld
adc
pop
pop
in
mov
fcomi
cmp
mov
and
out
jl
cmc
sub
test
lods
adc
mov
fimull
lahf
mov
mov
xchg
stos
lea
push
in
enter
mov
test
sbb
mul
mov
mov
add
sbb
jne
or
jmp
sbbl
lods
fnstcw
jmp
pop
sahf
mov
jle
repz
sub
pop
popa
outsb
pop
icebp
and
xchg
cli
pop
aam
xorl
test
jp
mov
ds
adc
insl
mov
mov
inc
int
daa
scas
aad
repnz
shl
in
mov
add
pushf
xchg
out
mov
mov
add
add
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
cmp
add
dec
jnp
jmp
inc
ja
fisttpl
xor
xchg
movsb
fdivs
or
and
cwtl
ljmp
add
out
and
popa
xchg
push
xor
fidivs
jb
sub
adc
and
xchg
cmp
lahf
push
mov
lahf
dec
imul
iret
outsl
push
jb
dec
movsb
add
lret
mov
mov
cmc
neg
stc
cmc
jg
cmovno
fsubs
push
cld
shlb
sbb
xchg
lds
std
paddusw
iret
jne
je
dec
aas
ss
sbb
ljmp
popa
lret
arpl
repnz
mov
arpl
out
pop
loope
int3
icebp
or
mov
jmp
xchg
jb
cmp
cmp
fbstp
and
cld
aaa
aad
int
ret
sub
cwtl
dec
push
jbe
push
test
push
scas
enter
sti
mov
nop
test
aam
int
aaa
das
aam
rcll
add
add
add
stos
into
fdivrl
mov
notl
fadds
insl
xlat
pop
xor
xchg
daa
fidivrs
bound
and
adc
inc
fistl
mov
aam
shrb
mov
dec
stos
mov
add
cli
lods
push
push
mov
cmp
dec
push
dec
and
shlb
shrl
pop
xchg
mov
in
stc
pusha
xchg
xchg
mov
cmc
pop
dec
xor
test
push
push
fbld
jns
xlat
incl
xchg
inc
rcll
dec
add
jo
mov
notl
inc
das
add
pop
inc
nop
je
dec
hlt
movsb
mov
xor
leave
push
inc
mov
and
je
pop
leave
push
or
fstl
xor
arpl
lods
int3
xchg
dec
movsb
jle
pushw
rcll
int
add
add
arpl
addr16
sub
lret
icebp
mov
add
add
add
add
into
dec
push
mov
cmp
out
das
push
jnp
lahf
divb
imul
scas
insl
pop
ss
pop
or
inc
dec
std
adc
js
insl
outsb
jle
outsl
mov
pop
int
push
jb
test
into
xchg
cltd
lods
push
adc
pop
fsubrs
enter
dec
addr16
lret
es
rcrl
stos
and
sbbl
adc
mov
sub
into
das
jle
or
hlt
cmp
xchg
out
sbb
ret
xchg
jle
sub
scas
push
and
arpl
int3
fistpll
mov
mov
dec
dec
jecxz
lods
rcl
adc
rorb
into
add
stos
pop
loop
outsb
mov
push
adc
and
pop
mov
sbb
and
xchg
in
xchg
dec
pop
xor
aad
jle
sbb
fwait
sub
outsb
psubsw
add
out
out
pushl
xchg
xor
cmp
repnz
add
add
add
subb
push
push
out
pop
add
lods
push
or
cmpb
outsb
repnz
das
fmuls
adc
aas
push
pop
mov
adc
jbe
ficompl
stos
mov
in
adc
rorb
testl
in
repnz
ljmp
xlat
in
and
push
jb
scas
xor
in
insb
cmp
call
and
lret
out
rcrl
xor
sbb
push
sti
cmp
out
pop
jae
mov
mov
sub
iret
int
sub
mov
sarl
jb
test
shr
and
les
jo
mov
testb
and
jb
cmp
test
xchg
fiadds
mov
dec
or
push
or
jns
stc
nop
jne
rcrl
cmp
xchg
pop
or
pop
jmp
jo
push
cmp
in
inc
test
push
scas
mov
shlb
add
add
rorl
je
pusha
dec
mov
cmpsb
xchg
stc
jo
cmp
jle
inc
out
jb
cmp
cli
push
loop
jl
pop
test
add
sbb
loop
jbe
adc
int3
iret
fs
out
loope
xchg
adc
fiadds
jns
pop
inc
inc
ficoms
jns
icebp
push
outsl
lea
xor
cmp
mov
stc
inc
cmp
jb
orb
lock
jmp
add
add
or
xchg
popa
cli
sub
scas
inc
sub
test
or
xchg
ss
aad
fstps
inc
shl
movsb
xor
sbb
xorl
dec
sub
jns
sub
jp
js
shll
jbe
pop
pop
stos
mov
cmp
cltd
jmp
lods
scas
jl
jge
add
jb
push
mov
pop
sbb
add
xchg
and
movsl
mov
mov
mov
inc
xchg
addr16
add
add
add
push
ds
dec
in
mov
sbbb
sbb
loop
sub
sbb
mov
loopne
js
sbb
and
jo
xor
leave
lods
dec
sti
jo
out
ret
push
enter
ret
loope
dec
mov
inc
or
dec
mov
stc
clc
push
pop
fs
jb
xchg
lods
mov
xchg
push
clc
sarb
rcrl
sbb
inc
pop
sub
pop
xorl
jno
sbb
sahf
inc
pushf
sbbb
pop
inc
mov
pop
xor
out
xchg
pop
dec
ret
push
xchg
pop
leave
loopne
mov
mov
pop
inc
out
inc
sbb
mov
fwait
out
pop
mov
jmp
mov
arpl
imul
mov
dec
das
loopne
shrb
cli
rcrb
daa
iret
xchg
cs
sub
add
cmp
sar
push
push
push
mov
mov
cmp
sub
mov
shl
add
add
mov
push
jg
mov
leave
mov
mov
add
add
xor
inc
add
dec
push
pop
push
out
sub
jl
addl
mov
push
mov
push
lret
data16
dec
testb
mov
fs
out
mov
enter
test
test
push
pop
or
test
and
in
mov
jns
mov
subl
dec
add
lods
add
xor
or
out
jl
lret
xor
dec
dec
push
dec
mov
int
sbb
sub
inc
push
or
int3
xchg
shlb
insl
and
mov
and
sub
push
or
pop
mov
outsl
fstps
repnz
in
jae
adc
ljmp
xchg
ret
mov
adc
shlb
lea
negl
pop
inc
stc
mov
mov
lods
imul
xchg
and
into
addr16
add
add
add
arpl
test
imul
jmp
xchg
cmp
movsl
mov
lcall
aas
or
scas
int3
inc
add
sbb
pushf
das
pop
mov
in
xchg
jecxz
lods
mov
andb
std
and
jb
push
je
add
jl
mov
sti
int3
rcr
les
imul
or
cmp
and
nop
dec
push
cmp
and
cmp
nop
lea
aas
in
and
lret
adc
xor
arpl
cmpsb
push
dec
dec
cmp
push
xor
lahf
pop
adc
adc
xor
mov
adc
popf
addr16
lods
adc
or
ljmp
inc
pop
mov
mov
sbb
incb
orb
xchg
scas
adc
push
scas
xchg
and
outsl
jp
mov
int
mov
mov
roll
pop
pop
loop
add
add
mov
cmp
jle
jg
addr16
add
add
add
lahf
jmp
sti
dec
sub
and
jl
xor
movsb
xor
lds
inc
stc
jae
cld
lret
inc
pop
push
loopne
idivl
insl
dec
mov
shrb
xchg
adc
cmpsb
dec
out
inc
imul
xchg
sti
pop
mov
in
sub
dec
icebp
stc
aaa
jb
push
mov
mov
push
pusha
lods
ja
fsubrl
mov
jp
in
mov
mov
lret
neg
repnz
lcall
xchg
iret
adc
filds
aaa
ljmp
sub
gs
mov
stos
mov
por
xor
out
fsubr
ss
andb
xor
adc
je
xchg
sbb
test
dec
mov
sub
in
popa
popa
xchg
push
inc
pop
xor
mov
into
mov
mov
mov
je
cltd
pop
dec
mov
jge
pushf
mov
paddb
add
pop
xchg
enter
push
fbld
jp,pn
or
add
add
add
lock
addr16
jl
lods
xor
jnp
pop
outsb
xchg
and
pop
jge
mov
aas
pop
adc
mov
mov
pop
and
mov
push
sti
out
jmp
mov
mov
lret
cmpsb
aad
push
jge
or
jmp
mov
rclb
fwait
ret
lahf
mov
popf
fcomp
xchg
js
in
dec
pop
popf
xchg
lret
shl
bound
mov
dec
in
mov
jo
mov
les
inc
repz
push
push
and
add
stos
scas
pop
mov
clc
xor
lods
cmp
loopne
sub
mov
ljmp
and
or
aaa
out
stc
in
ficompl
loopne
rcl
or
dec
push
dec
std
jmp
mov
cmp
lcall
cli
xchg
sti
sbb
ret
sbb
sub
sbb
pop
lahf
cmp
jno
faddp
stos
xor
in
int3
xchg
cmp
xor
xchg
adc
push
sub
and
add
add
into
fwait
add
mov
inc
or
add
add
add
ret
sub
mov
cltd
in
jmp
add
rcl
xchg
jnp
sub
jecxz
mov
sub
mov
or
cld
sbb
and
push
adc
into
xchg
inc
daa
or
out
cltd
add
outsl
jl
ret
jne
adc
popf
inc
push
mov
xchg
xchg
mov
sub
out
mov
sbb
mov
xor
jl
dec
xchg
outsl
xchg
addb
jb
mov
xchg
mov
mov
movsl
rorb
mov
cmpsb
and
ljmp
pushf
repz
in
in
adc
in
pop
or
orl
pop
lds
adc
mov
sub
adc
insl
and
pushf
movsl
sbb
cmpsl
push
pushf
fimull
fldt
sub
cmp
xchg
test
test
sub
popa
pop
push
jl
test
out
mov
pop
sarb
in
out
pop
or
add
add
add
push
cmpsl
daa
movsl
in
in
sbb
pop
rcl
sub
adc
popa
xchg
jmp
bound
inc
dec
push
adc
loopne
test
mov
in
cmpl
sub
jl
pop
mov
cmp
stos
pop
punpcklwd
jnp
push
sub
cmp
sbb
pop
divl
push
ss
pop
mov
fptan
iret
fwait
insb
jmp
push
mov
lret
cmp
shlb
lret
loopne
fiaddl
push
jb
jnp
jne
cmp
scas
dec
pusha
pushf
ljmp
jge
pop
dec
mov
rorb
sub
sti
push
scas
mov
adc
es
cli
jbe
cmp
jg
jnp
jns
adc
into
push
xchg
outsl
negl
je
jb
xor
sub
inc
sbb
out
dec
push
test
das
lret
mov
jns
imul
jo
lret
inc
fildl
sbb
add
add
inc
out
aas
mov
ror
pop
dec
pop
or
add
add
add
orl
fists
push
cmpsb
inc
dec
xchg
jecxz
fsubr
jmp
dec
jnp
aaa
outsb
xorl
shrl
gs
hlt
cltd
dec
jns
int
add
leave
cmp
sbb
mov
int
js
rcrb
ss
pushf
inc
movsl
je
pop
rclb
sbb
shrl
fadd
dec
xchg
into
dec
adc
inc
mov
imul
rclb
jl
xlat
xchg
psubsb
arpl
leave
sbb
push
push
loopne
test
mov
mov
cmp
add
jl
aas
stos
pavgw
outsb
mov
aas
pop
in
sbb
lds
jmp
nop
out
lret
add
aaa
divl
testl
iret
push
ror
loopne
push
loopne
popa
xchg
adc
jnp
sbbl
push
imul
out
sub
fsub
clc
and
sub
cmp
add
add
bnd
dec
leave
and
stc
in
addr16
add
add
add
jbe
or
jge
adc
scas
shlb
inc
pusha
ret
aaa
dec
ds
or
sbb
push
ja
orl
mov
subl
mov
push
subb
bound
and
fucomip
stos
popa
icebp
lods
push
sbbb
sub
data16
pop
mov
and
aas
mov
scas
jmp
imul
dec
jno
lods
mov
call
mov
popa
ds
ds
insb
call
push
mov
adc
mov
lds
ss
and
push
dec
les
xor
fisubl
aas
mov
add
mov
in
test
sbb
mov
cltd
xor
push
mov
dec
xchg
shlb
popf
dec
sbb
inc
xor
out
loop
add
add
in
out
ja
filds
lods
pop
repz
add
mov
xor
xchg
jge
lea
sbb
cmpsb
test
jbe
jbe
xor
rcll
pop
add
jge
stos
push
xor
lods
and
fdivrl
pop
lods
sbb
hlt
xchg
ss
mov
pop
and
xchg
pop
sti
sub
push
pop
bound
es
daa
outsb
lret
mov
call
arpl
mov
and
dec
out
arpl
aad
and
xchg
test
dec
or
imul
inc
out
jmp
pushf
push
mov
arpl
mov
fildl
pop
push
sbb
aad
and
push
mov
sub
imul
cwtl
or
mov
cmp
push
gs
pop
test
mov
mov
shr
mov
jne
lret
leave
fsubs
cmpsb
inc
xor
nop
pop
pop
inc
addr16
fidivl
mov
and
lea
inc
stc
lret
rorl
aam
cmp
add
pop
in
inc
push
or
and
add
add
add
jge
xchg
push
jmp
jmp
xor
out
or
pop
pushf
xchg
push
test
xor
ss
test
test
pop
adc
pandn
scas
or
adc
jmp
jp
mov
sub
loopne
jmp
imul
push
inc
gs
stos
pop
test
out
dec
ret
sbb
je
xchg
es
inc
mov
jno
in
jo
cmp
mov
test
mov
arpl
test
cs
lods
cmp
cmp
popf
aas
mov
test
pushf
in
sahf
stos
clc
sub
fistpl
dec
rcll
loope
sbb
ss
test
testl
xchg
xchg
sbb
dec
mov
daa
sti
push
je
outsl
je
fwait
mov
xor
scas
jle
adc
rcrb
xchg
xchg
std
mov
repz
mov
add
add
jg
neg
pop
daa
inc
scas
push
jnp
sgdtl
add
add
mov
jmp
mov
jecxz
adc
andl
hlt
mov
cmp
jns
xor
cmp
and
mov
mov
xorl
divb
lock
pusha
add
out
sarl
dec
ret
jl
jmp
mov
sbb
rolb
xchg
lods
adc
mov
or
mov
sbb
mov
cmp
push
dec
dec
jb
pusha
cld
std
and
daa
jp
and
pop
loop
inc
mov
mov
mov
sub
std
jb
pop
cmpsb
sbb
mov
sub
mov
sub
jmp
push
dec
in
idivb
push
inc
in
push
scas
insl
mov
in
in
mov
loop
lcall
addr16
or
push
test
lcall
sti
nop
and
sub
push
insl
sub
xchg
les
cmp
sti
jg
cmp
je
dec
or
adc
add
add
add
add
imulb
adc
flds
faddl
add
mov
adc
repnz
pop
nop
sbb
dec
paddw
push
adcb
icebp
pop
push
xor
pop
xlat
add
push
fwait
jb
jae
push
js
std
pop
hlt
jns
pushf
cmp
and
dec
mov
jl
jo
movsb
sbb
clc
adc
outsb
jns
push
push
jmp
dec
pop
mov
sahf
jle
xchg
cwtl
mov
aaa
pop
sti
jl
les
or
jmp
nop
push
mov
insb
test
cli
mov
inc
es
or
dec
iret
dec
std
test
loopne
xchg
push
lret
pusha
fiaddl
sbb
xchg
fs
sub
int
mov
fyl2xp1
sub
mov
bound
stos
cmp
mov
fisttpll
or
and
dec
xor
push
and
sbb
push
scas
lea
cmc
dec
cmp
cwtl
and
add
add
jnp
fstp
fcompl
sbb
and
add
add
add
jbe
int
cmp
mov
lods
xchg
movsl
cltd
and
mov
fucomp
push
jmp
inc
stos
sbb
popa
jne
lret
push
push
test
sbb
mov
pop
je
sbb
iret
fstps
ret
push
sbb
mov
daa
mov
dec
inc
pusha
push
or
pushf
lds
push
jno
sub
cmpsb
mov
adc
leave
std
cs
nop
arpl
jecxz
stos
pop
sti
pop
xor
or
imul
jecxz
les
mov
and
xchg
mov
add
pop
jmp
stos
outsb
inc
jle
cmpsb
pop
addl
adc
frstor
adc
jns
fwait
push
dec
dec
loope
and
adc
push
xchg
cmp
pop
ret
fistpl
jno
ss
scas
fsubrs
repnz
pushf
add
mov
sub
and
sbb
add
lods
stos
mov
mov
sub
or
xlat
inc
mov
notl
pop
pop
mov
jno
std
outsl
mov
add
ljmp
add
add
xchg
xchg
dec
cmc
pop
loopne
lea
push
cmpb
dec
in
mov
lds
stos
dec
sub
icebp
sbb
adcl
sub
xor
test
jp
mov
or
pop
sub
adc
pop
mov
cli
and
jle
push
lret
push
jmp
mov
xorl
xor
and
sbb
push
sub
pushf
mov
fimull
pop
aaa
and
sbb
or
adc
fstpt
pop
cli
aas
push
xchg
cmp
cmp
into
out
aam
bound
andb
je
push
packuswb
push
push
mov
out
inc
adc
or
xor
xor
movsl
ficomps
ja
mov
cltd
pop
ds
pushf
clc
push
in
icebp
in
jmp
aaa
lcall
fs
dec
cmp
in
add
sub
pushf
pop
or
ds
sbbb
loope
jmp
lahf
pushf
xchg
adc
add
add
add
imul
xchg
mov
out
daa
sbb
mov
fiadds
and
sahf
sub
sbb
xchg
in
xchg
ss
dec
and
fdivs
pop
sarl
mov
xor
add
movsb
imul
sub
fwait
pushw
in
fnclex
xor
xor
jbe
dec
divl
jecxz
pusha
outsb
loope
or
mov
enter
mov
and
mov
les
mov
add
mov
push
fwait
push
mov
jl
or
daa
leave
xor
adc
into
pop
les
cmp
cltd
sbb
mov
or
push
xor
adc
cld
adc
mov
xor
xor
inc
jo
jl
add
es
add
notl
inc
mov
sahf
xor
mov
insb
aad
mov
insb
loop
push
mov
outsl
mov
jb
mov
sbb
dec
imul
add
xor
xchg
lds
rcll
mov
adc
add
add
add
std
push
cmp
fdivl
negl
jg
cmpsb
in
sub
dec
xchg
adc
std
lds
add
and
sub
into
idiv
mov
mov
pop
sbb
fmull
aaa
pop
inc
jno
negb
inc
mov
adc
movsb
mov
mov
xchg
aad
call
rcll
push
aam
scas
fimuls
lds
cmc
cs
scas
sti
outsb
sub
xor
rcl
stos
dec
add
mov
mov
ja
cmp
rcl
push
scas
fimuls
aam
nop
mov
inc
fwait
mov
and
mov
jecxz
mov
mov
mulb
add
mov
or
jl
mov
push
data16
and
ljmp
xlat
sti
in
aad
and
lret
outsl
mov
cmp
ret
mov
xacquire
mov
pop
dec
loop
xor
add
cli
inc
jg
int
xchg
lods
or
push
and
addr16
add
cli
mov
and
mov
or
lret
cli
loop
xchg
cld
das
inc
inc
mov
dec
das
les
aad
adcb
jae
xchg
fidivl
cli
jl
xor
popa
xchg
mov
out
adc
lods
xor
adc
push
cld
mov
dec
pop
notb
add
jae
adc
push
icebp
pop
cmc
lea
hlt
lods
in
xchg
cmp
movl
push
cmp
add
ret
loopne
dec
into
pop
jbe
mov
inc
mov
test
mov
cmc
popa
xchg
aam
notb
push
ds
ret
not
pushf
iret
addl
js
mov
jle
jo
das
stc
add
fmuls
repnz
sbb
or
rcll
add
pop
add
mov
daa
add
ljmp
xor
xor
leave
movsl
or
inc
push
sbb
hlt
loop
out
push
or
lock
add
add
xchg
std
cmp
jle
fistpll
fimull
dec
addr16
add
add
add
mov
std
push
cmc
push
outsb
int
stos
push
scas
ss
imul
cwtl
sbbl
cmp
cmpsb
mov
das
sbb
sbb
loopne
cmc
js
cmp
jb
xchg
add
mov
aaa
mov
jne
imul
mov
jae
dec
add
scas
movsl
cmp
sub
jge
fiadds
cmp
dec
ds
adc
ss
insl
pop
nop
pop
xorb
test
cmp
lock
dec
test
lcall
test
jmp
push
sub
cld
fnstsw
aam
out
inc
insb
mov
jl
mov
push
in
or
ss
and
xchg
mov
and
xchg
scas
mov
push
orb
jb
cli
dec
pusha
cs
cltd
div
lahf
pop
stc
leave
mov
or
adc
mov
cmpsb
test
and
fwait
sub
xchg
sub
xchg
pop
lds
xlat
ficompl
inc
outsb
dec
cmp
add
add
add
fnsave
xchg
lods
mov
cs
std
xor
out
pop
and
jb
push
adcl
fistpll
sbb
xchg
dec
push
xor
enter
cld
dec
out
jecxz
cwtl
stos
stos
inc
jp
outsb
shrl
or
aas
fwait
test
lcall
sbb
jmp
insb
add
xor
or
adc
cmpsb
inc
mov
out
outsl
mov
mov
jmp
lret
inc
into
jmp
sti
inc
sbbb
dec
or
rclb
mov
pop
jbe
and
movsl
inc
push
sub
mov
jb
sub
pusha
mov
add
or
inc
popa
xlat
mov
sub
inc
sbb
mov
lds
push
or
bt
fbld
test
xor
pop
mov
test
outsl
pop
shlb
xor
xor
xchg
roll
aad
pop
jg
clc
out
in
cmp
add
sub
iret
outsb
jmp
push
test
xchg
cmp
sbb
add
add
add
sahf
add
sub
std
dec
inc
aad
pop
in
xchg
mov
jge
aaa
btcl
je
cmp
out
add
cli
imul
dec
xchg
icebp
mov
pop
stos
push
push
in
int
fildll
lcall
push
enter
adc
bound
imul
push
sbb
sbb
xor
jp
ja
xchg
xchg
lock
scas
cwtl
adc
stos
popf
xchg
cmpsb
fwait
bound
int3
sbb
popa
stos
pusha
xor
negb
lods
add
jo
cmp
movsb
imul
push
cmp
insl
lds
es
je
sub
pop
loopne
cli
mov
adcl
push
pushf
xor
or
mov
mov
xor
cwtl
jnp
inc
lods
mov
jge
aad
out
inc
sub
xchg
add
or
add
add
std
sbb
stc
cld
or
ret
cld
ficomps
sbb
add
add
add
jl
adc
data16
fmuls
cmc
hlt
adc
aas
pop
mov
jne
and
xor
xor
push
fidivs
cwtl
subl
xchg
and
jb
xchg
ljmp
movsl
dec
incb
ja
mov
sub
mov
cmpl
inc
add
and
jns
lea
or
adc
pop
clc
pop
insl
sub
stos
jle
fbstp
adc
push
popf
or
xor
xor
sbb
rcrl
mov
mov
addr16
mov
leave
push
jnp
scas
jne
sub
and
rorb
test
repnz
cld
repz
cmpsl
hlt
js
mov
popf
push
sbb
add
mov
cmp
mov
adc
and
jecxz
lock
enter
lods
call
cmp
and
add
add
pop
test
scas
repz
cld
adc
inc
negb
add
add
je
jg
ss
jo
fisubrs
mov
jg
jmp
xor
mov
out
xchg
repz
imul
xchg
inc
nop
add
push
pop
lock
adc
cmc
jmp
jnp
push
mov
jb
jb
lds
lahf
dec
es
insb
pop
outsb
adc
dec
sub
cmp
sbb
cmp
rorb
pop
fwait
daa
fistps
inc
pop
push
sub
inc
mov
orb
adc
outsl
xor
mov
jo
push
jle
push
sub
sub
or
rclb
notl
xchg
push
xor
scas
push
nop
cltd
mov
xchg
pop
mov
jno
stos
ficomps
loope
cmp
mov
rorb
push
push
mov
test
xor
cwtl
lcall
sti
out
rcrl
int3
bound
push
push
fsubp
lods
dec
fisubs
lds
xor
add
add
dec
pushl
cmp
std
adc
add
add
add
cmpsl
dec
and
xchg
inc
insl
jge
fs
push
mov
xchg
and
or
jno
sub
pop
xor
jns
inc
sti
out
dec
push
or
ficompl
ds
dec
xorb
movsb
aaa
ss
add
mov
fcmovne
jb
clc
push
xchg
imul
in
mov
ja
ret
dec
popa
adc
cmpsl
cld
push
cmc
mov
movsl
xor
sti
xchg
pop
iret
jg
daa
jae
clc
leave
xor
in
or
jns
adc
xchg
leave
xchg
jmp
mov
inc
mov
mov
mov
es
and
dec
lock
je
sbb
cmpsl
mov
bound
xchg
pop
mov
xchg
hlt
loopne
test
xlat
lock
push
es
lock
or
push
jecxz
mov
das
dec
lret
xchg
dec
push
inc
rcl
adc
pop
dec
ljmp
jg
ljmp
pop
sub
inc
ja
pop
aas
dec
push
mov
addr16
add
add
add
imul
lods
jle
dec
jbe
mov
push
stos
ljmp
nop
shrl
inc
mov
repnz
in
cld
add
aad
cmpsl
jno
int3
xchg
sahf
popf
shlb
fimull
scas
pop
mov
pop
adc
test
sbb
rcrl
fs
fisubl
and
adc
je
jecxz
test
and
push
mov
push
mov
cmp
lcall
mov
inc
ror
aad
xchg
mov
adc
daa
cs
xchg
push
insl
inc
dec
add
js
or
or
mov
adcl
scas
sub
mov
pop
mov
mov
cmpsl
cli
mov
loope
ror
adc
jbe
add
add
fchs
sub
sub
jle
mov
cmc
dec
lods
or
cld
mov
repz
jae
ja
div
mov
lcall
add
add
iret
shlb
cmp
cmp
mov
cwtl
xor
or
mov
push
add
pop
cli
outsl
loopne
mov
std
dec
je
lahf
test
xor
xlat
add
mov
push
inc
fstpt
sbb
aaa
mov
xchg
pop
inc
lea
sbbl
aaa
mov
rcll
cvtps2pd
data16
or
pop
push
push
lret
cwtl
push
clc
sbb
scas
outsb
mov
repz
mov
lcall
in
mov
xchg
dec
shlb
xchg
inc
cmp
and
or
jg
mov
rcrl
or
in
pop
cmpsb
mov
call
xor
adc
mov
or
call
push
pusha
sub
aad
daa
lods
dec
cmpsb
dec
xchg
adc
mov
mov
std
cmp
xor
cli
std
jg
push
pushf
dec
fwait
icebp
push
cmp
add
add
add
cs
int
repz
xor
rclb
in
call
mov
pusha
adc
out
or
or
test
jmp
test
jb
and
andb
sahf
inc
mov
adcb
add
fsubs
adc
icebp
inc
mov
and
cltd
sub
mov
cmp
pop
mov
or
mov
out
sbb
fisubrl
fstpl
or
loope
mov
adc
mov
fiaddl
aam
cld
cld
mov
nop
movb
add
mov
adc
loopne
sbb
or
or
jg
std
popf
cld
shll
enter
stc
aad
cld
in
jmp
pop
das
fldt
fnsave
outsl
lahf
pop
imul
sub
add
xor
pop
mov
jecxz
test
add
add
add
mov
std
incl
sbb
add
pop
add
add
add
ljmp
shll
mov
cmp
inc
dec
sub
xor
hlt
mov
sahf
mov
in
mov
in
xor
ficompl
dec
sti
ficompl
jmp
add
add
je
flds
sarb
jle
leave
ud1
ss
xchg
sbb
mov
lea
and
int
andb
sbb
shll
bound
xchg
or
adc
mov
pop
pop
sbb
das
pop
test
cmp
adc
sti
adcb
into
insb
and
jp
lods
push
imul
movsl
pop
out
push
js
inc
and
aaa
xchg
pop
mov
mov
mov
dec
sbb
and
mov
cmp
lret
dec
scas
int3
fsubrp
ja
insb
jno
push
mov
jns
add
ds
iret
mov
pop
xchg
popa
jns
aas
gs
daa
cli
push
es
jg
pop
or
xor
and
add
add
add
cs
push
inc
xchg
and
push
fwait
cmp
insl
fldcw
jge
sbb
fs
pop
pop
loope
clc
mov
icebp
xchg
jno
or
mov
pop
mov
mulb
jp
jecxz
outsb
and
insl
pop
cmpsl
mov
ret
das
aam
lock
mov
pusha
ret
insl
sub
jge
aas
xor
or
xor
and
xchg
shl
in
sbb
and
dec
push
add
jne
orb
sbb
pop
mov
inc
pusha
into
ss
rcr
mov
mov
lret
lods
jecxz
imull
mov
and
mov
movsb
sbbl
shl
rcrb
in
ss
mov
mov
or
and
push
shl
pop
mov
mov
pusha
arpl
aam
cwtl
dec
cltd
fidivrl
xor
aam
xor
into
shlb
push
out
adc
add
push
clc
or
dec
push
cmp
and
add
add
add
je
div
dec
mov
nop
pop
popf
dec
ret
test
pop
adc
jmp
xor
dec
pop
das
mov
js
sub
jb
ret
mov
sbb
imul
sbb
out
repnz
jge
adc
shlb
push
pusha
cmc
jge
jne
std
xchg
sbb
int3
daa
pop
xchg
adc
push
adc
ficoms
lret
xlat
mov
or
mov
dec
stc
and
fdivrs
mov
fnstenv
jo
shr
stos
pop
add
jg
clc
sbb
in
dec
mov
mov
adc
jbe
pusha
cmp
popf
mulb
imul
cmp
mov
inc
ficomps
loop
stos
iret
jmp
jo
in
sub
cmp
shlb
xor
fists
inc
push
test
push
add
xor
inc
in
or
mov
xor
mov
setge
add
add
add
jmp
and
sub
lahf
mov
stos
jg
aam
lcall
mov
pshufw
pop
adc
fs
adc
aas
not
nop
out
outsl
push
xorl
jecxz
pushf
out
test
cld
sbb
rclb
xor
xor
push
dec
jmp
stos
stos
pop
cmc
mov
imul
jne
repz
and
daa
sbb
mov
into
sbb
dec
adc
cwtl
xchg
incb
jl
addl
stc
lea
stos
jmp
inc
int
je
and
fisttpl
orl
xchg
cmp
add
push
fstl
lcall
pop
cmpsl
xor
sub
add
loope
imul
pop
int
or
addb
add
add
ficoms
stos
sbb
call
mov
and
add
add
add
aam
insb
adc
test
pop
mov
lods
lock
rol
out
std
gs
lcall
mov
jg
bound
ljmp
cmp
iret
jns
or
push
mov
push
mov
mov
xchg
nop
mov
or
push
arpl
mov
and
mov
cwtl
pop
ss
xchg
inc
out
or
inc
jecxz
call
ss
sub
pop
push
imul
inc
test
aas
adc
xchg
xor
lea
xor
out
mov
adc
mov
pusha
in
div
les
dec
dec
mov
daa
pop
lahf
mov
or
rol
frstor
out
movl
lret
push
mov
dec
aad
cmp
or
mov
xchg
inc
into
sahf
xor
sarb
jns
pusha
or
push
xor
pushf
in
mov
out
stos
jge
or
into
ret
add
add
add
mov
sub
mov
ret
xchg
lret
push
pop
repz
jnp
push
lds
arpl
xorb
leave
inc
jnp
pop
and
cmp
movsb
xchg
call
adc
xchg
in
cwtl
push
xor
mov
jae
int3
inc
test
popa
mov
mov
sub
pop
dec
rcll
ret
test
push
mov
inc
out
add
shrb
ret
mov
xchg
outsb
mov
jl
dec
pusha
push
cwtl
sbb
jg
or
das
mov
popf
xchg
add
adc
add
mov
or
jle
stos
fld
aas
pusha
cmpsb
cmp
sti
dec
mov
loopne
pop
sub
sub
adc
test
cmp
xchg
jmp
repnz
cmp
clc
xlat
adc
data16
cltd
mov
not
not
ja
int3
pop
cli
lahf
and
mov
mov
pop
cld
cmpsb
lret
aas
dec
or
out
xchg
iret
push
aas
sbb
add
add
add
inc
ja
aad
xor
mov
pop
xchg
sahf
dec
lods
push
mov
pushf
xor
xor
cs
iret
pop
rclb
jmp
test
push
sarb
add
jp
jae
or
faddp
adc
cmpsl
roll
xchg
and
mov
dec
pop
jbe
out
mov
pop
shrb
push
fists
lret
inc
inc
fsubrs
arpl
pop
xorb
mov
aam
push
cmpl
cld
sbb
outsl
fiaddl
add
insl
lods
jg
sub
jb
or
mov
cltd
dec
adc
ret
sbb
xor
int3
pusha
push
and
push
pop
cmpsb
mov
test
jnp
jae
inc
lods
je
mov
fidivs
mov
mov
inc
imul
push
insl
push
or
xor
in
cmpsl
rcll
or
and
into
xchg
fmulp
cmpsl
fnstsw
add
aam
add
cmp
out
loope
jns
int
divl
add
add
cmp
sub
fisttpl
insb
mov
aad
scas
aad
mov
jg
inc
rolb
repnz
int3
pop
pop
into
jae
imull
test
int3
xor
shlb
push
mov
push
cmp
sub
nop
loop
sub
jle
xor
aad
sahf
leave
inc
adc
shrb
xchg
les
push
inc
addl
mov
sub
jno
int3
dec
sbb
mov
mov
out
jno
sbb
push
das
ljmp
popa
cmp
inc
cmpsl
out
mov
test
and
cmc
pop
test
leave
int3
in
outsl
inc
sbb
add
or
push
out
xchg
fistl
push
mov
cs
inc
fstpt
fistpll
arpl
pop
xor
dec
add
les
popa
adc
jle
inc
scas
jl
pslld
dec
xchg
mov
cli
adc
test
sbb
sti
push
mov
add
mov
daa
add
add
add
sub
mov
mov
jb
dec
inc
cmp
leave
jne
mov
add
mov
fst
jns
popa
scas
xlat
push
into
pop
test
es
shlb
std
aam
jmp
ss
loop
repnz
inc
and
mov
jge
push
cmp
xchg
add
jb
std
sets
rol
xchg
lret
or
daa
jmp
fldcw
fists
insl
out
stos
adc
mov
ret
xlat
shrb
addl
add
xchg
arpl
fcomip
jl
pop
xchg
pop
xor
sahf
pop
cmp
ljmp
sbbl
in
push
loop
leave
jae
mov
leave
xchg
stos
jl
clc
nop
adc
jmp
rcrl
and
ret
sbb
pop
mov
and
fs
mov
lcall
add
mov
dec
idivl
cld
ret
add
ss
sub
add
add
add
cs
and
fdivrl
lret
pusha
xchg
and
les
xchg
add
js
sti
push
push
or
icebp
ret
push
adc
clc
jge
push
adc
adc
adc
fcoml
fwait
lock
push
jo
mov
loopne
cmp
xor
addr16
cmp
add
dec
and
jbe
mov
data16
push
cld
add
arpl
clc
movsb
xchg
pop
jecxz
dec
cld
or
xor
ss
jbe
mov
fs
mov
mov
stos
leave
xor
jno
ljmp
lock
sub
add
popf
pop
push
je
or
fidivl
negl
inc
jb
push
xchg
loope
cmpsb
fwait
cltd
mov
add
lcall
mov
pop
ret
aas
insl
push
rclb
push
je
or
or
add
add
mov
iret
mov
sarl
add
add
add
int3
adc
decb
pushf
push
add
clc
fidivl
or
je
jp
pop
mov
lea
aaa
fcoml
insl
jns
sub
mov
lret
sub
and
push
fwait
lods
clc
pop
je
jbe
adc
mov
jle
mov
add
and
sbb
mov
roll
jno
out
pop
and
push
jecxz
bound
cmp
jnp
mov
std
leave
pop
test
push
test
inc
or
sbb
je
jg
mov
lahf
pop
into
into
push
lds
test
pop
cmp
cltd
ljmp
sub
xchg
mov
mov
repz
mov
jg
ret
sbb
scas
aam
add
mov
lcall
clc
rcrb
imul
pop
or
add
adc
call
loopne
add
add
mov
jg
arpl
loope
dec
sub
add
add
add
in
cld
inc
or
enter
adcb
jp
mov
jp
sub
ret
push
int3
in
stc
and
invd
mov
jne
jl
inc
mov
lahf
inc
jecxz
push
lods
stos
mov
dec
fidivrl
rorl
cmpsb
inc
das
mov
ja
mov
in
ficoml
insl
adc
jae
cmpsl
cmp
int
lahf
cmp
loope
stos
fs
mov
loopne
jmp
xor
add
rcll
ja
aaa
pop
imul
in
xchg
xor
cmpsb
xchg
rorb
orb
xchg
orb
in
mov
stos
add
rcl
sbb
fwait
out
cld
fnstcw
lods
hlt
into
mov
in
cmpl
dec
stc
std
sbb
or
pop
lcallw
stos
bound
shlb
cli
clc
cli
clc
sarb
sti
mov
jl
sub
add
add
add
lods
repz
scas
sub
mov
cmc
iret
xor
filds
add
adc
mov
dec
push
sbb
push
scas
fstpt
loop
adc
mov
orb
mov
adc
fisubs
sub
or
cld
xorl
fmuls
mov
mov
shrl
js
sahf
ja
testb
jle
lret
in
mov
dec
dec
inc
mov
mov
insb
data16
shrb
sub
es
aas
stc
and
call
pop
jno
stc
fists
subl
repnz
fs
jns
arpl
cmp
loope
adc
popa
and
outsb
lods
push
je
in
rol
outsb
dec
popa
outsl
mov
add
pop
mov
stc
xchg
or
hlt
sahf
dec
push
cmp
jb
lret
dec
lcall
mov
add
cmp
shll
movsl
jns
push
adc
dec
insb
loop
add
add
jnp
out
mov
dec
sbb
add
add
stos
adc
xchg
or
mov
mov
cld
pushf
inc
dec
fcoml
test
jmp
ljmp
insb
popa
icebp
mov
jmp
mov
pop
adc
pop
in
xorb
imul
xchg
jo
pop
aad
mov
loopne
es
scas
or
sahf
inc
mov
jecxz
pop
mov
lock
mov
push
xor
ror
xchg
jo
add
pop
jb
ds
push
mov
aam
dec
lds
inc
jge
aaa
push
push
pop
add
repnz
xchg
stc
or
ficoms
and
sbb
push
xchg
mov
or
daa
insl
scas
rol
cmpsb
lea
sub
loopne
fildl
scas
popf
xchg
lcall
and
lahf
sbb
and
repnz
mov
xchg
add
jnp
push
inc
roll
push
fs
es
data16
insb
daa
mov
pushf
xchg
mov
add
add
add
jg
inc
jecxz
adc
shrl
rcll
inc
lods
bound
enter
test
arpl
insl
andl
lods
inc
jb
dec
insb
mov
xchg
rorb
movsb
movl
clc
aad
ljmp
sbb
js
xchg
inc
data16
repnz
call
mov
add
aaa
sub
popa
xor
cmpsb
xor
pop
adc
sbb
fildll
pop
scas
inc
fs
maskmovq
testl
mov
pop
insl
decb
imul
nop
outsb
popf
mov
mov
jnp
rcrb
ss
mov
orl
in
int3
mov
insl
push
xorl
jae
jl
mov
out
xchg
daa
xchg
dec
lahf
dec
sbb
clc
pop
push
pop
outsb
popf
inc
gs
dec
lds
push
and
daa
clc
mov
fldcw
add
push
add
add
add
stos
xor
sub
mov
arpl
dec
movsl
dec
ja
popa
jp
js
arpl
icebp
add
jecxz
lock
inc
leave
dec
dec
lock
cs
mov
std
add
je
bound
jle
rolb
leave
jge
mov
mov
sub
pop
ss
jge
jb
dec
or
adc
sbb
mov
mov
je
aas
data16
fwait
xor
cmpsb
je,pt
mov
lea
or
cwtl
repnz
dec
push
mov
cs
outsb
jnp
dec
push
dec
sbb
out
pop
out
pop
or
mov
push
mov
dec
jmp
or
mov
dec
sbb
insb
add
fwait
mov
pop
push
clc
cmp
pop
aas
pop
cmp
jp
ds
adc
cltd
push
inc
fmuls
movb
sbb
ret
in
outsl
nop
movsl
es
and
pop
mov
shll
add
add
and
push
sti
cmpsl
enter
mov
das
add
add
add
mov
jnp
cmp
inc
mov
and
cmpsl
aam
push
pop
loope
inc
and
pop
ljmp
js
orb
inc
lahf
pop
shlb
mov
xchg
dec
stos
leave
das
nop
iret
ss
ret
dec
addr16
dec
sbb
inc
jb
imul
add
jne
dec
loope
repnz
out
cmp
je
rcrb
cmp
outsl
cli
pop
ret
leave
mov
repnz
mov
mov
dec
sbb
jnp
push
and
shl
xchg
insb
inc
enter
mov
adc
ret
dec
pop
add
push
test
outsl
inc
iret
jne
pop
call
cwtl
sbb
jae
xor
fmull
div
mov
push
call
imul
popa
push
xchg
movsb
lret
add
mov
loop
sti
mov
mov
loopne
dec
dec
cli
rorb
adc
movsb
test
lds
jl
inc
push
and
std
mov
dec
push
inc
and
mov
xor
add
add
add
or
outsb
jmp
cltd
inc
or
mov
addr16
and
sbb
push
fists
adc
pop
xchg
arpl
adc
inc
out
orb
std
shlb
sahf
adc
frstor
pop
push
daa
aaa
or
sbb
cmp
ret
dec
mov
inc
xlat
pop
mov
or
sub
push
lret
add
cltd
sbbb
divl
jo
cli
jo
jbe
sub
xor
sarb
xchg
out
call
ljmp
adc
aaa
insl
andb
lock
mov
fists
out
xor
stos
scas
and
push
inc
push
stc
addr16
js
pop
jmp
cltd
subl
nop
mov
xchg
pop
xor
push
add
popf
sub
mov
pop
jmp
xor
lds
xchg
and
inc
and
lcall
add
add
add
sbb
std
jecxz
jno
scas
cli
cld
pop
pop
fstpl
rcrb
xchg
out
vcvtsi2sdl
imul
testb
pushf
jle
mov
addr16
mov
sahf
aaa
inc
mov
adc
sbb
push
add
dec
jp
into
push
pop
and
push
pop
mov
sbb
fs
pop
or
cli
inc
jnp
movsb
mov
lods
lock
sub
outsl
pop
push
sahf
rolb
sub
mov
fwait
jge
cmp
shlb
mov
cmpsb
push
add
loop
push
adc
inc
shl
sub
inc
test
or
call
or
dec
das
mov
xchg
sub
pop
fisttps
std
ficompl
push
fwait
clc
leave
movsl
subb
adc
dec
cld
scas
jnp
jmp
shlb
cmpsb
xchg
adc
cmpsb
mov
push
jae
jmp
xchg
lods
pop
fiaddl
ret
ficomps
cmp
lahf
pop
or
xor
add
add
add
fwait
add
mov
leave
sarb
ss
mov
stos
cmp
pcmpeqd
pusha
sub
ror
arpl
in
mov
nop
xor
jecxz
call
sub
addr16
lcall
jecxz
jo
mov
int3
xchg
mov
sbb
test
xor
mov
imul
mov
mov
cmp
inc
xchg
icebp
xor
sahf
fwait
and
jno
in
push
cltd
lock
sahf
faddl
fisubrl
aam
icebp
call
jns
jo
iret
push
dec
outsl
aad
decl
add
mov
imulb
lret
fwait
cmp
insb
addl
cld
xor
push
mov
xchg
pop
mov
push
pop
int
jge
or
movsb
sbb
out
mov
js
dec
add
out
popf
mov
daa
clc
int
add
cli
cmp
jo
aaa
jns
fidivs
add
arpl
ja
sub
add
push
iret
xor
add
add
add
mov
and
xchg
xchg
jl
xchg
imul
js
nop
add
out
sbb
xchg
cmpsl
or
fcomp
xor
pop
mov
lds
lret
add
enter
cmpsl
add
mov
arpl
inc
ds
xor
xlat
lods
int
push
call
call
xor
cltd
bound
fdivr
push
fldl
jns
std
pop
lahf
int
sub
lds
sahf
and
out
jecxz
cltd
inc
repnz
sub
testb
lret
mov
mov
pusha
call
inc
daa
mov
dec
loop
lret
out
push
push
jne
outsb
ljmp
sti
in
push
mov
jo
jb
es
adc
mov
xchg
outsl
push
jb
fbstp
xor
sbb
push
pop
cwtl
cmp
cli
xchg
mov
push
sbb
out
fstpl
jne
repz
xor
lock
mov
or
scas
jmp
add
add
add
add
movsb
mov
mov
xchg
add
ret
in
mov
ret
xchg
add
add
sub
and
mov
push
out
add
or
jnp
mov
jp
pop
ljmp
mov
adcb
aaa
das
lcall
mov
pop
mov
sub
mov
test
adc
pop
out
pop
inc
leave
mov
lret
int3
in
xchg
inc
test
mov
mov
mov
add
movsb
pusha
push
jno
mov
repz
lds
cmp
decb
popa
roll
loope
push
leave
test
xor
movsb
mov
and
dec
jge
push
mov
adc
xchg
cmp
out
pop
xor
dec
out
jae
js
cltd
xlat
push
rorb
loope
pop
add
push
and
rolb
add
cmp
add
ret
hlt
scas
pop
xchg
push
sub
sti
pop
jge
neg
hlt
add
lahf
addr16
add
push
and
and
andl
push
int3
xchg
and
push
rol
mov
subl
cmp
xor
adc
repz
cmp
inc
cmc
jmp
adc
stc
clc
imul
lret
daa
cmpsb
cmpsb
xchg
mov
hlt
sbb
popf
test
add
aad
jno
andl
dec
aad
xchg
in
cmp
popa
and
cs
and
mov
test
pop
xchg
imul
aam
lea
insl
xor
dec
adc
int3
lods
fldl
xchg
jns
les
sti
jecxz
movsl
push
or
fstpl
cwtl
cmp
mov
xchg
xchg
popa
or
mov
mov
jno
pop
arpl
add
in
or
stos
sbb
pop
imul
xorl
xchg
pop
dec
mov
sbb
adc
ss
pushf
inc
pop
or
adc
sub
sub
push
repz
add
pusha
cltd
fsub
std
in
popf
in
stc
jmp
lds
packuswb
add
add
add
call
jle
add
shll
adc
or
sub
insl
ljmp
sar
mov
pop
xchg
cmp
cmc
filds
mov
cli
inc
shrb
mov
nop
xor
dec
mov
mov
out
mov
lds
out
adc
mov
test
shll
xchg
mov
cs
jge
dec
add
xchg
pop
and
and
add
jg
pop
and
dec
aas
shrl
mov
sti
inc
mov
fists
lods
das
mov
cmpsl
add
adc
jne
push
jp
mov
add
xchg
insb
pop
xchg
xchg
mov
loope
jmp
mov
js
movsl
jnp
sahf
stc
loop
test
loope
mov
clc
or
lret
xchg
shll
fs
fdivs
or
jg
rcll
pushf
ret
jge
vmwrite
fsubrs
in
inc
lahf
pop
in
jle
lret
inc
pop
jp
jnp
sti
xchg
jle
jp
lods
adc
xlat
addr16
add
add
add
mov
push
sub
xor
xor
insl
push
xor
mov
rcr
stos
jge
xchg
in
cmpsb
test
jo
sbb
insl
jnp
aam
add
subl
rcrl
add
andb
push
xor
pop
dec
in
xchg
repz
in
in
ljmp
jns
shrl
clc
pop
xchg
xchg
shlb
adc
insl
mov
and
push
ret
xchg
inc
jg
lea
mov
or
push
scas
sub
xor
test
ds
sbbl
lds
xchg
sub
push
push
into
dec
mov
int3
arpl
xchg
data16
inc
lahf
pop
nop
incb
pminsw
add
dec
aam
insl
add
jnp
push
clc
testl
xor
pop
jp,pt
dec
ss
mov
push
sti
decb
mov
xchg
cmp
add
add
add
aad
push
sub
mov
dec
push
mov
mov
add
pop
test
or
push
xor
push
mov
add
aaa
cmc
sub
xchg
cmpb
cmp
mov
ds
sub
rcr
aad
sub
dec
xchg
jb
mov
cmp
scas
mov
xchg
mov
repnz
cmpsl
fs
pop
add
and
jmp
xor
scas
in
cli
loope
std
stos
sbb
xchg
add
daa
mov
aam
popf
cmp
outsl
fadds
pop
push
leave
mov
push
subl
mov
ljmp
sti
clc
or
mov
arpl
test
in
out
sbb
pop
lcall
adc
mov
testl
mov
cmp
add
mov
adc
lret
fmuls
test
sub
jne
add
add
cmp
xor
hlt
mov
cmp
add
add
add
add
out
sub
cs
lods
inc
inc
pop
lods
adc
cmc
sbb
fiadds
or
push
fcmovb
xor
push
mov
add
or
rcr
dec
hlt
insb
xor
push
jb
adc
rep
mov
xor
xchg
xor
ljmp
lods
push
dec
test
scas
mov
add
ficoml
pop
outsl
movsl
popf
inc
cmpsl
mov
add
addr16
mov
dec
xor
pop
lret
mov
xchg
mov
push
or
inc
ss
or
in
mov
icebp
addb
jo
outsl
int3
pushl
fcoml
imul
xor
sub
shlb
xor
mov
add
cmpsb
jo
inc
imul
sti
in
and
addr16
push
dec
out
decb
sbb
sub
gs
movsl
mov
incb
ljmp
mov
mov
add
add
add
cmpsl
xor
xchg
cli
sbb
stc
into
cwtl
push
jnp
jne
ljmp
ljmp
adc
pop
cmp
jmp
lock
dec
xchg
xor
movsb
pop
fcmovnu
mov
pop
lods
mov
xchg
fnstsw
sbb
jecxz
stc
mov
fld
fists
stos
enter
pop
scas
out
iret
scas
pop
inc
xor
pusha
pop
and
sub
mov
mov
pop
imul
arpl
sub
jb
ret
mov
cltd
xchg
jae
flds
imul
inc
lret
pop
or
mov
or
dec
pop
pop
insl
mov
es
daa
adc
xlat
sbb
or
jge
aad
sub
inc
je
jnp
dec
jne
mov
loop
mov
jge
xchg
xchg
orl
fiaddl
pop
div
js
data16
pop
mov
xlat
divb
rclb
nop
lcall
cmp
add
add
add
frstor
arpl
cmp
fucomp
out
jmp
mov
sbb
call
sub
test
in
cmp
test
sub
sbb
hlt
int3
jae
repnz
add
outsb
pop
xor
pop
movsb
push
and
out
mov
pop
out
sbb
dec
lret
lods
pop
cmc
jge
fbstp
cmp
push
push
test
adc
push
mov
mov
mov
mov
jo
outsl
fsubrp
dec
mov
pop
ss
dec
xor
or
push
call
inc
lahf
mov
sbb
inc
mov
and
pop
and
pop
repnz
sbb
pop
adc
scas
mov
enter
mov
add
lods
push
lock
mov
xchg
push
scas
xor
xchg
and
push
pop
xor
adc
mov
add
add
jbe
idivl
or
lods
imull
cmp
add
add
add
pop
cld
stc
jo
ss
dec
mov
mov
xchg
jl
pop
ja
jo
and
imul
add
sti
jb
mov
push
push
ret
out
mov
xor
int3
stos
cwtl
pop
cs
insl
orb
shl
and
fisttpll
or
test
inc
testb
insb
mov
jno
or
dec
aaa
dec
out
mov
mov
out
pop
push
out
fdivr
cmp
out
xchg
add
outsl
mov
in
aaa
mov
stos
add
das
ljmp
cs
call
or
xchg
movsb
add
stc
sub
push
into
mov
or
cmp
and
jp
push
add
add
sbb
cmp
push
and
push
or
int3
cmp
jne
mov
test
fcmovne
pop
and
outsb
sub
stos
fs
jmp
leave
aas
inc
inc
lahf
pop
addr16
add
out
pop
xchg
mov
pop
mov
add
jno
sar
mov
fs
stos
pop
hlt
out
sahf
inc
sbbb
and
js
sub
je
bound
dec
or
or
jle
jns
xchg
cwtl
add
daa
push
clc
xchg
mov
sbb
loope
sbb
les
push
mul
xchg
lcall
push
xor
jge
out
push
jecxz
mov
push
add
lret
jp
cmpsb
stos
inc
aam
pop
xor
and
add
addr16
jnp
jno
adc
call
xchg
rorl
pusha
push
and
xchg
sub
adc
popa
icebp
data16
push
lock
push
xchg
pop
mov
mov
mov
xor
fisubrs
lea
lods
fwait
or
xchg
shrl
add
dec
and
hlt
pop
mov
pushf
add
add
insb
pop
pushf
scas
fistpll
outsl
sbb
pop
mov
add
add
andb
cmp
lahf
mov
rcrl
add
xchg
push
jge
in
ror
sbb
jmp
gs
xor
test
xchg
mov
or
sub
dec
or
int
in
lods
add
push
mov
fwait
imul
mov
inc
sub
or
cmp
add
sbb
insb
jmp
sbb
and
and
in
push
loop
mov
gs
icebp
popf
sub
sti
rcr
push
dec
repz
stc
lret
push
popa
push
call
sti
cmp
add
jns
mov
clc
cmp
cs
dec
push
hlt
jecxz
pop
cmpsl
sarb
shlb
xlat
repnz
pop
xchg
or
pop
fcom
push
loop
dec
xor
test
stc
cmpl
xchg
int3
shrb
lods
insb
std
xchg
gs
add
add
cmp
movsb
push
sbb
popf
data16
add
add
add
pop
lods
cmp
sbb
arpl
mov
mov
xor
cli
test
jl
idiv
and
lock
ret
cmp
mov
outsb
test
and
roll
push
mov
push
sbb
mov
inc
xchg
push
js
daa
adc
jnp
jmp
xor
or
pushl
outsb
fstp
in
cmp
xchg
adc
xor
cmpsb
ficoms
lock
mov
pop
sub
adc
scas
and
roll
sbb
or
sub
lds
into
xor
cmp
lcall
push
mov
cli
jmp
add
imul
inc
pop
jg
xchg
and
mov
fcmovb
sbb
movsb
sbb
ljmp
jno
inc
add
test
jg
daa
outsl
lret
mov
out
jmp
add
add
add
add
cmp
xor
cmp
xchg
jno
loope
jne
mov
mov
jmp
std
int
pop
pop
push
add
mov
mov
sub
popa
xchg
push
pop
notl
push
dec
rcrb
fldt
jo
sbb
fists
or
pop
adc
or
in
leave
sbb
ret
pop
jmp
xchg
xor
or
lret
dec
pop
dec
scas
lret
pop
fld
pop
sbbb
xchg
les
jno
fs
xchg
cli
loope
fsubrs
fisubrs
ret
pop
out
push
mov
or
jmp
mov
mov
mov
sub
pop
xor
mov
cld
push
mov
xchg
popf
and
rcrl
dec
in
inc
jbe
lods
dec
stc
xchg
aas
lahf
xchg
jnp
jge
mov
lcall
push
cmpsb
sbb
lahf
out
aaa
sbb
add
add
repz
cmp
lods
repz
mov
mov
inc
add
add
add
fildl
inc
cmpsb
scas
mov
mov
in
incl
cmpsl
popf
mov
data16
xchg
and
mov
mov
pop
repz
jl
fwait
dec
lahf
mov
scas
add
jg
sbb
mov
mov
xchg
jmp
jg
out
xor
jae
pop
int3
adc
dec
adc
pop
xor
scas
adc
int3
jg
nop
and
mov
or
sub
jecxz
adc
insb
int
cmp
out
shr
cmp
sub
iret
clc
sub
jecxz
sbb
stos
and
xor
push
or
or
cmpsb
adc
mov
mov
repz
pushf
out
std
cmp
data16
jae
push
jle
xchg
addb
push
pop
mov
outsb
aad
insl
pcmpgtb
inc
xor
imul
inc
test
lods
gs
ret
add
rcll
push
jns
aas
daa
push
cld
push
std
jmp
dec
push
out
hlt
addr16
add
add
add
mov
aad
enter
adc
xchg
movlps
fstpl
adcl
test
shrl
insb
clc
neg
and
gs
out
test
adc
or
les
dec
sbb
nop
jno
lock
jmp
lret
repz
into
test
mov
sbb
or
imul
and
nop
in
push
stos
jno
jb
adcb
insl
sbb
fcoms
xor
insl
mov
xor
jae
mov
out
out
lods
dec
or
das
pop
and
mov
repz
and
fsubrl
rep
inc
jno
push
push
lods
or
mov
jle
fstps
push
mov
push
xor
add
dec
push
jbe
jge
into
lcall
inc
in
sbb
sub
jne
test
inc
and
into
dec
push
add
sbb
dec
push
out
aad
jmp
inc
add
add
add
inc
dec
repnz
pusha
popf
gs
or
insl
or
orl
dec
xchg
push
xchg
orb
in
mov
pop
lock
jnp
into
add
psubq
aaa
das
test
scas
movsl
bswap
sti
fs
adc
mov
lcall
mov
iret
xchg
add
movl
into
jne
adc
dec
movsl
push
int3
xlat
mov
data16
jo
gs
pop
add
jg
adc
dec
or
shll
xchg
add
mov
push
call
int
jle
sbb
in
or
test
shrl
xor
out
out
cwtl
cltd
ljmp
sbb
stos
mov
push
int3
scas
adc
jmp
mov
cmp
lock
inc
mov
mov
ss
sbb
push
mov
call
add
add
idivl
or
dec
insb
aas
addr16
add
add
add
xchg
test
jb
or
arpl
fwait
and
pop
or
mov
imul
sub
mov
sbb
fldcw
xor
lock
jb
fists
jae
cmp
in
out
adc
inc
jns
cwtl
shlb
lahf
push
rcl
jge
dec
adc
dec
xchg
popf
adc
cld
mov
cld
jle
sbb
mov
add
lods
jl
negb
outsb
es
mov
dec
lock
or
arpl
outsl
ljmp
dec
cld
aam
pop
dec
lcall
mov
push
aad
subb
or
pop
lea
mov
xchg
add
sar
lods
aaa
ss
cmpsb
sahf
fs
ljmp
lds
bound
int3
fwait
xor
popa
push
mov
lods
jp
dec
mov
mov
and
add
add
jg
xchg
orl
ljmp
add
inc
imul
xchg
mov
xchg
mov
sub
jo
mov
aas
outsb
push
repnz
xlat
cwtl
test
xor
push
fdivs
jno
es
xor
clc
imul
xor
ficompl
mov
ret
pop
and
cmpsl
dec
test
pop
repnz
mov
idiv
scas
repz
fmuls
lds
or
mov
lds
lcall
cmp
sbb
or
pop
arpl
adc
rorl
pop
ds
lret
je
aas
mov
daa
cmp
ja
lret
sahf
add
mov
pop
jp
sub
xchg
sub
test
mov
jno
repz
iret
rcll
cmp
cmp
or
mov
lcall
cwtl
inc
or
sbb
cs
cmc
int
or
out
and
dec
lret
jmp
imul
aaa
je
xorl
addr16
add
add
add
pop
hlt
or
sahf
add
dec
cmp
into
fcompl
cmp
cli
fildll
push
xor
and
xchg
pop
xor
pop
jcxz
or
clc
xchg
inc
lcall
bound
jne
ljmp
test
sub
inc
leave
jg
push
jne
cmp
scas
jae
cmp
mov
outsb
ficomps
pushl
in
subb
test
adc
pop
int
in
push
add
pop
add
sbb
mov
imul
subl
add
mov
pop
sbbl
out
pop
xchg
fidivrl
scas
je
push
adc
lcall
scas
data16
pusha
mov
fneni(8087
out
pop
cmp
sbbl
sahf
testl
xchg
test
shlb
inc
imul
or
sub
pop
jne
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
adc
add
add
add
je
jo
dec
push
sub
je
imul
ror
das
enter
cmpsb
or
pop
xor
aaa
inc
lds
mov
and
cmp
xlat
pop
push
mov
adc
xchg
add
aaa
pop
adc
dec
jb
lods
mov
inc
xchg
jns
inc
push
pop
cmp
in
sbb
xor
inc
cmp
xchg
jmp
in
mov
dec
mov
mov
test
into
aad
mov
xchg
xor
jp
cmpsl
sbb
adc
sub
adc
inc
in
int3
adc
inc
testb
inc
lcall
adc
lods
pop
and
stc
dec
jl
adc
xchg
sbb
arpl
cmc
mov
test
js
sbb
push
and
insb
sbbb
mov
mov
outsb
or
shlb
imulb
xchg
push
adc
add
add
jns
xor
jg
data16
addr16
add
add
add
xchg
sarb
in
repz
das
lahf
sti
xchg
xchg
sbb
push
loop
adcl
out
jns
jns
pop
mov
adc
sbb
sbb
out
push
xchg
mov
rcrb
mov
xchg
inc
fisttpll
loope
mov
fstp
or
pop
mov
sub
popa
add
sub
ret
int3
inc
mov
pop
push
sti
mov
nop
jbe
fcoms
cmp
xor
dec
mov
mov
dec
xchg
dec
ret
dec
mov
inc
pop
out
inc
cmp
enter
mov
icebp
aaa
push
les
pusha
xchg
clc
fcmovb
jnp
lahf
sahf
scas
sbb
icebp
les
movsb
cltd
and
adc
imul
leave
jl
pop
dec
add
add
fildll
push
push
in
push
sub
push
es
das
pop
and
hlt
iret
and
sti
fadds
add
add
ret
jg
decl
rol
cmp
xchg
sahf
addr16
add
add
add
addr16
xor
shlb
insb
inc
jbe
clc
out
adc
fmull
xchg
add
cld
out
sub
sub
sbb
pop
xor
mov
xchg
inc
and
jne
nop
pop
int3
cld
test
push
xchg
orl
xchg
jnp
inc
mov
mov
int3
es
pop
js
mov
scas
mov
pusha
adc
jno
mov
hlt
sub
test
mov
stc
cld
loope
push
and
loop
nop
adc
pop
add
clc
sub
leave
add
fists
mov
out
mov
fbstp
adc
add
jmp
loopne
cmpsb
xor
mov
pop
das
fsubrs
mov
adc
stos
cli
jmp
aas
and
adc
inc
push
push
adc
cmp
push
sbb
or
pop
fcompl
es
add
adc
mov
out
aad
inc
jns
addr16
add
add
add
clc
out
std
inc
sti
int3
sub
add
xchg
xchg
movsb
adc
xchg
or
sbb
pop
fstl
xchg
inc
sub
repnz
loopne
push
mov
mov
lret
sub
and
pusha
push
jo
fucom
lds
sub
hlt
rcrb
xor
pop
xor
dec
cltd
jne
mov
rcrb
call
movsl
filds
xor
ficomps
sbb
mov
loopne
inc
adcb
mov
jae
std
xchg
aas
pop
push
adc
or
adc
jmp
scas
pop
imul
lret
mov
pushf
out
icebp
insb
inc
xchg
fsubrs
pop
les
push
or
shll
dec
mov
jmp
cmpsb
and
adc
stc
daa
mov
in
fldcw
mov
xchg
jbe
cmpsb
shrl
or
inc
mov
std
andl
mov
add
add
hlt
gs
dec
adc
sti
in
dec
add
add
add
pop
fcoml
xor
shll
sub
imul
add
xor
push
push
shlb
or
add
divl
push
nop
fcoml
pop
add
ss
in
movsb
inc
out
scas
mov
add
dec
lea
clc
push
test
into
sbb
bound
enter
and
mov
jmp
jbe
inc
mulb
cmp
mov
ficoml
fdiv
add
ret
mov
adc
and
inc
sbb
shl
mov
lcall
mov
sbb
int
fcomps
mov
fdiv
xor
pop
pop
and
mov
mov
cs
pop
shrl
in
aaa
inc
test
test
fwait
jge
pop
pop
testl
pop
ds
movsl
lcall
add
aas
gs
pop
repnz
dec
add
add
add
in
cmpb
subl
push
mov
add
insb
pop
gs
les
cmpsb
sbb
or
enter
sti
loope
or
push
jo
clc
push
rcrb
ljmp
inc
mov
push
outsb
int3
cmp
push
decl
xchg
dec
xor
nop
aad
cmpsb
xchg
xchg
adc
mov
dec
and
daa
cmp
stc
addr16
imul
mov
sti
lds
cmp
sti
sub
cwtl
mov
cmp
fnstcw
mov
xchg
inc
mov
outsb
push
lock
lods
and
adc
adc
add
bound
shl
out
ljmp
push
lds
movsl
add
push
jecxz
lods
adc
inc
push
rclb
adc
inc
mov
mov
scas
push
mov
add
out
fisttpll
lock
popf
out
dec
add
add
add
pop
and
mov
jmp
xor
dec
out
and
or
sbb
sub
mov
out
sbb
stos
xlat
mov
ds
inc
sub
mov
jnp
mov
push
mov
fcmovnbe
or
jb
cli
and
js
inc
or
and
mov
cmp
pop
xchg
filds
and
in
aaa
and
pop
pop
es
sbb
shrl
pop
jg
and
push
sbb
test
dec
xchg
in
xchg
lds
sub
xchg
mov
in
jo
push
insl
pusha
mov
sub
inc
pop
lret
popa
enter
arpl
mov
js
push
int
xchg
mov
loop
dec
cmc
push
daa
int3
add
int3
xchg
or
mov
add
add
mov
ljmp
add
add
add
pop
aad
fidivl
fsubs
in
sbb
cmpsl
sbb
inc
jecxz
jno
lret
es
incb
int3
imul
lcall
mov
mov
clc
pop
out
mov
xchg
xchg
jecxz
aaa
push
mov
and
ja
jmp
inc
dec
addl
pusha
ds
enter
int3
outsb
jae
std
test
cs
ret
mov
out
dec
insb
sbb
ljmp
fisubs
cmpb
sbb
sbb
inc
cmp
fdivl
mov
push
clc
clc
xor
aas
pop
lret
aam
out
jg
ret
jecxz
push
sarb
dec
cli
es
insb
out
hlt
xchg
jl
sub
sbb
pop
xchg
divl
xchg
test
fwait
pop
pushl
shlb
and
sub
sub
add
add
jmp
out
aas
jo
sahf
jb
fs
addr16
add
add
add
mov
add
test
xchg
dec
xchg
sub
addr16
jne
jle
pop
movsl
pushf
sub
inc
adc
xor
sub
sub
out
bnd
clc
xor
test
ja
loop
sbb
mov
lods
or
push
pusha
movsb
call
shrl
aad
movsb
std
and
mov
and
cmp
fisubrs
bound
add
lds
sub
xchg
in
int
inc
add
mov
dec
out
cmc
mov
add
mov
std
cltd
push
push
inc
pop
jno
enter
jae
or
mov
daa
fsubl
scas
cmc
mov
stos
fmull
push
rorb
add
aaa
imul
xor
pop
pop
adcb
stos
jb
in
mov
arpl
fwait
pusha
paddb
inc
adc
adc
jl
pop
sbb
add
imul
out
mov
mov
mov
pop
addr16
add
add
add
or
jae
pusha
stos
loope
cmpsb
pushf
add
or
pop
pop
push
lea
sbb
mov
sbb
imul
nop
fs
push
jb
je
pop
xchg
push
je
loop
dec
pop
push
lcall
cld
cmp
adc
xor
es
add
sbb
ret
std
sahf
mov
mov
xchg
sbb
mov
stos
shl
pop
add
add
jne
lock
int
cmp
adc
mov
imul
mov
mov
stc
pop
inc
push
shlb
bnd
sbb
cmp
mov
pop
mov
ja
jmp
imul
mov
imul
jno
or
insb
repz
push
stos
pop
adc
jp
xor
maxss
inc
cmp
ret
mov
push
ficompl
js
add
dec
stc
mov
ljmp
addr16
add
add
add
jae
add
jp
pop
arpl
mov
pop
insb
cltd
jo
inc
stc
push
xchg
sbb
imul
out
adc
sub
imul
jle
imul
lea
lahf
pop
sub
jp
add
dec
jge
iret
mov
test
in
jnp
pop
mov
je
or
shlb
push
jno
call
in
push
mov
sbb
sbb
bound
or
adc
adc
cmp
loopne
fxam
push
hlt
aaa
mov
in
and
and
cli
lds
rep
add
popf
inc
add
mov
aas
push
shll
mov
lods
icebp
cmp
arpl
cmp
push
js
mov
loopne
pop
dec
ficomps
jns,pt
inc
fstp
arpl
mov
cmp
push
xchg
out
mov
movsl
cltd
jb
and
pop
mov
fwait
push
imul
xor
add
add
jg
cld
lcall
addr16
add
add
add
out
ljmp
xor
outsb
mov
decl
xchg
es
data16
ljmp
or
pop
and
dec
pop
fwait
dec
or
xchg
pslld
add
ds
adc
rorl
insb
xchg
xchg
fbld
jns
sub
mov
jge
xchg
adc
fmull
jmp
fnstcw
adc
int3
add
mov
out
add
mov
int
ficoml
and
xor
mov
add
inc
and
sahf
fistpl
out
or
push
xchg
pop
push
aad
loop
das
xor
test
enter
pop
dec
push
xor
pop
mov
xor
cmovno
stos
popa
orl
mov
pop
sub
gs
add
mov
or
das
or
or
dec
pop
xor
push
and
ss
push
dec
sti
sahf
xchg
sahf
cmp
scas
inc
inc
fwait
dec
int
mov
xchg
mov
pop
out
cmc
mov
push
add
add
add
cmp
sbbb
xchg
pop
ret
mov
push
mov
pop
dec
adc
inc
inc
call
insb
mov
mov
push
cmp
push
mov
loop
shrb
inc
dec
cwtl
pop
cld
sahf
aam
xchg
cmpsb
or
mov
mov
push
ss
into
aam
je
mov
imul
mov
dec
scas
inc
xor
pop
das
xchg
mov
clc
xchg
scas
and
jmp
dec
shlb
popf
je
adc
dec
xchg
out
mov
cmpsl
gs
jecxz
lock
cmp
add
in
push
mov
cmp
stos
add
insl
xchg
sbb
cwtl
stos
daa
out
ja
push
sub
jbe
pop
daa
sbb
cli
xchg
mov
lods
repnz
ljmp
sbb
aam
cmp
dec
iret
mov
bound
loope
inc
sar
sbb
xor
jg
sbb
or
inc
hlt
in
je
xor
movsb
pop
sldt
add
or
mov
and
adc
addr16
add
add
add
sub
mov
lea
push
adc
shlb
mov
xor
push
pop
sub
rcr
jnp
cltd
pop
pushf
pop
shr
add
aam
pop
cmp
leave
scas
sbb
add
shlb
add
sbb
mov
add
into
mov
and
lods
adc
xor
iret
jae
push
je
sti
sub
push
lcall
inc
lods
out
pop
clc
jnp
dec
mov
shr
dec
xchg
dec
mov
push
dec
xchg
jge
repz
add
mov
test
and
cs
adc
pusha
sub
mov
inc
xchg
pop
fwait
ret
and
fstps
mov
push
jb
fwait
add
xor
inc
lcall
test
sbb
adc
les
mov
inc
mov
mov
push
cmp
lahf
sbbl
mov
fsubrl
mov
out
cmp
ret
or
ja
add
add
add
push
cmp
mulb
lds
mov
pop
lods
mov
test
es
sub
lock
cmp
cmpsb
leave
pop
lcall
push
cli
and
inc
outsl
mov
sar
fiadds
mov
jecxz
add
mov
popa
cltd
in
out
and
loop
adc
stos
in
mull
sbb
xchg
mov
sub
jmp
lahf
cmpsb
cmp
into
dec
mov
mov
bound
or
xor
lods
inc
xchg
bound
sahf
cmp
mov
dec
or
jle
mov
cwtl
cwtl
push
push
mov
dec
test
and
je
cltd
jns
mov
les
mov
fistps
lahf
pop
mov
sub
mov
adc
test
idivb
xorb
shl
enter
jge
push
ljmp
dec
mov
jmp
mov
add
add
push
shll
out
pop
pop
pushf
push
lock
mov
add
add
add
xchg
and
stc
mov
insl
add
mov
pop
or
and
xchg
icebp
and
shll
fsubrl
xor
xchg
cmpb
sub
and
sub
cli
adc
sub
xchg
mov
mov
pop
and
mov
push
sti
jmp
xchg
pusha
aad
or
lods
lock
pop
lds
addb
mov
push
jns
subl
fbstp
dec
cmp
daa
jbe
and
iret
ret
aaa
xchg
in
into
cmp
outsl
push
push
cmp
aas
dec
and
aaa
and
sbb
pop
hlt
mov
icebp
imul
lods
movsb
insl
test
shl
cmc
mov
dec
test
imul
add
pushf
pop
leave
mov
repz
icebp
sub
ja
fadd
mov
push
out
add
add
out
lcall
hlt
mov
icebp
in
mov
push
add
add
add
mov
bound
mov
cmp
std
sahf
or
test
nop
jl
idivb
and
ret
out
xchg
adc
or
sbbl
loop
cmp
jge
fisttpl
sub
shl
and
dec
insb
dec
imul
xchg
scas
cbtw
mov
lds
orl
fbld
addr16
mov
enter
jg
cmp
enter
adc
cmp
push
ficompl
test
fbld
xor
imul
mov
incl
xor
test
out
in
fldpi
pop
popa
xlat
push
ljmp
or
jno
jge
testl
mov
addb
adc
add
cltd
push
cmp
xor
push
inc
adc
jmp
repnz
repz
ljmp
cmpsb
scas
shll
ss
add
add
jbe
idiv
imul
inc
xor
add
add
add
jns
adc
and
sbb
out
das
mov
js
test
xchg
cmp
jbe
xor
lret
mov
add
xchg
fadds
pop
xor
sub
lret
and
pushf
repz
mov
inc
mov
sbb
jp
add
mov
mov
mov
arpl
bound
loopne
pop
and
lds
sub
cmp
cmp
mov
cmp
mov
cli
cmp
movsl
jmp
inc
fsubs
daa
negl
pop
loop
mov
lea
add
or
add
daa
cld
jo
jp
pop
push
sub
shlb
ror
std
hlt
xchg
sbb
cld
xor
cmc
xchg
pop
sub
add
mov
sub
aam
ja
bound
iret
pop
test
jo
ret
pop
dec
ljmp
mov
add
jae
fwait
cmp
stos
sarb
addr16
add
add
add
jg
lods
mov
cmp
clc
in
stos
cli
cltd
lahf
scas
mov
or
cmpsb
out
xchg
idiv
outsb
and
out
repnz
lret
xchg
mov
js
clc
mov
mov
pop
out
jbe
in
mov
fwait
insl
aad
cmp
mov
das
cmp
jl
cwtl
jp
scas
xor
xorb
add
xlat
jno
push
cld
mov
arpl
mov
ret
leave
sbb
mov
mov
daa
cmp
and
inc
jp
fadds
cmp
xchg
push
sbb
dec
fwait
mov
insl
outsb
je
loop
mov
and
or
mov
sti
or
add
subl
js
out
and
and
pop
out
aas
rcrb
fwait
rcrb
cs
add
add
mov
stos
in
loop
rcrl
sub
imul
add
inc
push
clc
mov
and
hlt
fs
add
add
add
pop
enter
insl
jmp
std
add
xor
pop
mov
inc
inc
out
cmp
jge
mov
loope
rolb
mov
mov
sub
addl
lods
sbb
data16
iret
je
sbb
mov
int3
sub
fs
lea
and
sub
mov
das
int3
test
mov
pop
push
shrl
les
sbb
mov
cli
fcompl
inc
ds
adc
cmp
aam
fstl
xor
xor
dec
jmp
mov
call
and
dec
mov
das
test
cmp
jbe
sahf
iret
out
add
into
ret
sub
xor
sbb
movsl
nop
in
pop
movsl
les
xor
test
pushfw
or
sub
out
inc
scas
xchg
push
adc
out
mov
enter
addr16
add
add
add
mov
or
sub
rorl
pushf
in
fwait
bound
icebp
repz
shlb
xchg
pop
xor
in
xor
sbb
inc
ja
popa
pushf
jbe
cmc
pusha
lea
fimull
xor
loope
daa
cmp
jb
mov
repnz
nop
enter
mov
dec
xchg
jbe
push
std
fists
incl
pop
fwait
scas
fs
xor
mov
sub
jp
jae
adc
testl
hlt
fadds
cltd
and
das
loop
pop
push
stos
cld
sti
inc
aad
in
xchg
cld
icebp
daa
cmp
jle
add
inc
aas
or
test
and
xorb
cmc
jae
cmp
mov
push
lahf
jmp
nop
fisubl
dec
jge
xlat
into
xor
xor
int
scas
and
cwtl
test
dec
add
jle
aad
pop
mov
sbb
test
or
fdivs
cmp
add
add
add
subl
push
in
ficoms
fs
xchg
in
cwtl
imul
leave
push
andl
xchg
adc
out
xchg
inc
fs
push
sbb
and
pop
or
aam
or
and
bsr
jns
rcr
das
xchg
pushf
sahf
fldl
mov
out
xor
jp
arpl
ljmp
mov
jbe
fs
int3
xchg
cmc
in
mov
or
xor
lcall
divl
add
and
hlt
jge
adc
ja
jl
fwait
psubq
ss
imull
jmp
mov
fldt
fildl
mov
push
stos
pop
mov
xchg
fstpl
push
roll
test
mov
cmpsl
out
push
pop
loopne
cltd
inc
shlb
out
dec
xchg
outsl
inc
add
dec
hlt
cmpsb
xchg
push
js
test
lret
mov
inc
add
add
mov
and
das
cmp
pusha
push
into
xchg
addr16
add
add
add
xor
in
add
ficoml
scas
test
push
push
ja
into
stos
scas
xorl
xor
pop
aaa
icebp
xchg
enter
mov
pop
jg
add
hlt
sbb
mov
idivb
or
dec
dec
mov
pop
movsl
mov
ret
push
mov
pop
sbb
jne
in
outsl
insl
mov
fcoml
lcall
add
adc
arpl
imulb
sbb
sub
push
sub
movsl
ror
jp
test
scas
cmp
ret
dec
cmp
adc
xchg
mov
bound
inc
in
adc
clc
sahf
or
mov
int3
jle
imul
fmull
mov
or
lcall
pop
xchg
xor
sbb
subb
ret
mov
xchg
mov
xor
int
std
std
fcomp
sbb
leave
mov
add
add
movsb
jae
jnp
mov
ja
mov
out
adc
addr16
add
add
add
mov
loop
sbb
fcoml
icebp
push
mov
and
leave
mov
add
sbb
push
out
mov
xor
movsl
icebp
out
xor
ret
in
mov
pop
jae
ljmp
ljmp
mov
xchg
mov
pop
test
repnz
outsl
and
lahf
int3
xchg
loop
dec
outsb
int
das
xchg
xor
shll
fadds
and
lds
jmp
dec
fdecstp
andl
dec
pop
push
nop
inc
dec
into
dec
jg
push
jae
mov
fstp
scas
push
mov
cwtl
xor
ds
in
cmp
add
push
lcall
pop
shrb
and
fdivrs
push
mov
rcrb
repnz
jo
xchg
xor
movsl
fdivs
pop
mov
inc
adc
push
mov
fstl
add
add
xor
xlat
out
cld
xchg
fs
addr16
add
add
add
lock
lcall
cmpl
faddp
imul
cwtl
mov
bound
cmp
loop
dec
or
fldpi
stc
pop
outsl
adc
andb
add
sahf
out
test
push
imul
out
int
rcrb
inc
and
jbe
mov
mov
fucomp
xor
hlt
cmp
aam
and
pop
js
fs
mov
adc
cmc
mov
mov
mov
int
lea
jle
out
movl
fiaddl
sub
test
xlat
movsl
cld
loop
scas
adc
scas
fwait
out
in
stos
xor
in
into
scas
hlt
shl
cld
push
inc
pop
push
push
lcall
fcoml
mov
xor
mov
scas
cmpsl
xor
mov
ja
pop
mov
mov
mov
in
push
push
addr16
add
add
add
fmuls
sub
inc
jg
daa
pop
lds
es
dec
ds
roll
pushf
lahf
pop
fs
pop
mov
lret
push
mov
mov
dec
das
ja
mov
jmp
call
jns
xchg
mov
add
inc
xor
inc
les
jp
cmp
inc
cmpxchg
mov
into
jo
insb
jmp
mov
add
aad
jne
jbe
sti
mov
pop
sbbb
dec
ret
imul
test
dec
adc
sbb
leave
push
jno
or
pop
cld
fnstsw
lcall
pop
movb
js
xchg
mov
add
mov
rclb
mov
sti
mov
mov
popw
dec
pop
push
movsl
pop
sub
dec
cmp
test
adc
xor
icebp
jmp
fidivrl
out
into
push
push
inc
lahf
mov
addr16
add
add
add
pop
shrl
sub
ja
mov
ficoms
lahf
mov
aad
test
in
cmp
negl
inc
cwtl
mov
mov
xchg
mov
pop
cmpsb
stc
mov
dec
push
ret
jg
pop
pop
into
push
xor
cmp
xchg
out
fs
int3
mov
dec
divb
cwtl
mov
cmpsb
adc
jno
dec
mov
notb
push
inc
push
add
mov
lods
add
aam
cmpl
mov
rorl
test
jnp
ret
sbb
adc
pop
bound
mov
popf
push
xchg
sub
ja
dec
cmp
adc
sbbl
inc
cs
test
ficoms
pop
pop
push
jo
xor
pop
fwait
cwtl
mov
adc
mull
jb
negb
hlt
in
adc
in
pop
push
pop
sbb
adc
and
mov
jg
or
bound
add
add
add
inc
mov
mov
sub
cmp
pop
out
adc
aad
and
add
andl
ja
pusha
push
or
mov
add
fidivrl
sarb
adc
lods
std
mov
sub
stc
sub
fists
jl
mov
adc
jbe
pop
fildll
cs
pop
data16
mov
mov
in
xor
ret
fiaddl
aad
aas
outsl
push
push
pop
sub
jl
jmp
mov
jne
fldt
dec
inc
ret
movsb
and
adc
inc
jl
cld
cmp
mov
ss
cli
push
push
sete
data16
cli
ret
sbb
movlps
jmp
xchg
idivl
sbb
test
xchg
int
push
dec
mov
xor
fnstenv
stos
or
icebp
mov
mov
sub
repnz
aas
xchg
mov
bnd
add
add
lahf
pop
cmpsl
jne
mov
arpl
add
add
add
mov
mov
cmp
lea
pop
in
shr
mov
mov
adc
pop
sbb
sahf
jecxz
in
xchg
lahf
fisttps
add
je
cmpsl
movsb
test
jbe
xchg
cmp
loop
scas
movsl
insl
jmp
loopne
pop
pop
inc
cmp
data16
or
mov
mov
into
cmp
cmp
pop
pop
pop
xor
test
xchg
fldt
addl
cmp
arpl
xchg
lret
repnz
adc
dec
cmp
in
jp
cmp
mov
jle
daa
sar
je,pn
fldenv
loope
cmpsl
in
xchg
subl
mov
mov
fiadds
sub
xchg
mov
add
out
cmc
jle
jno
xchg
xchg
mov
std
out
test
add
pop
xlat
jo
das
mov
push
push
inc
cld
push
xchg
jmp
add
idiv
jg
sub
shl
add
add
add
lds
add
mov
ljmp
sbb
fmull
pop
sub
je
ficomps
fcomps
add
and
jns
outsb
cwtl
push
fimull
jo
mov
movsl
inc
add
xchg
cli
and
xor
lret
ret
sbb
cmpsb
iret
adc
loopne
xchg
mov
rcll
dec
in
fnstcw
xchg
out
repz
and
cs
aam
mov
mov
sahf
shrb
pop
std
mov
jg
lahf
stos
xor
cmpsb
sbb
jo
ss
pop
pop
mov
fwait
paddusw
push
sub
dec
cwtl
and
out
dec
push
mov
or
dec
adcl
cmp
scas
popa
cltd
and
push
enter
gs
imul
addr16
push
add
jmp
xchg
sub
xchg
inc
push
and
mov
sub
lahf
movsl
push
sub
add
pop
mov
fstps
pushl
add
add
add
shlb
dec
fistpll
xlat
mov
dec
sub
jno
sub
push
test
clc
jle
pop
dec
test
sub
jne
pop
in
lea
mov
lcall
sub
jmp
inc
pushf
ret
xor
mov
loop
cmp
popf
pusha
shrl
cmp
mov
lahf
and
mulb
js
fnsave
push
adc
das
push
inc
ja
mov
int
mov
push
dec
es
lock
mov
push
cltd
call
sub
mov
repnz
daa
mov
movsb
cmp
xchg
rcl
out
lret
daa
stos
mov
and
mov
mov
pop
rorb
inc
testl
imul
ret
mov
mov
adc
sub
nop
sbb
outsl
fwait
push
push
int
add
push
int3
push
gs
fisttpl
cmp
outsl
out
fidivrs
insb
inc
sti
mov
inc
test
add
add
repnz
movsb
jle
arpl
ds
add
add
ret
mov
mov
xor
into
jo
fsubrl
pop
cmpsb
push
cltd
inc
inc
inc
cli
fidivrl
adc
mov
arpl
std
cwtl
xor
xor
push
in
jmp
cmp
mov
leave
add
push
pusha
lods
cltd
mov
fistpll
aas
rorl
jmp
ret
inc
adc
pop
xchg
gs
pop
jl
addb
imul
add
fcmovnb
mov
mov
insb
out
cmp
andl
xchg
or
mov
lods
or
gs
sti
push
rcr
pop
lea
out
or
push
add
jae
aad
fcompl
adc
and
cmc
push
mov
add
lods
lock
pop
rcrb
dec
in
mov
aaa
or
ret
adc
call
adc
mov
mov
lds
dec
test
scas
cmpsb
mov
outsl
push
xor
insb
stos
sub
stos
out
jmp
sub
push
stc
sub
add
add
sub
aad
add
int
cmpsl
leave
iret
jbe
scas
ds
mov
popa
adc
dec
adc
pop
loopne
sbb
sbb
xor
push
xchg
and
in
pop
push
imul
cld
mov
xor
mov
mov
jecxz
push
sahf
and
mov
popa
mov
dec
rorb
or
neg
data16
and
jno
xor
xchg
mov
sti
xor
test
cmp
cwtl
jb
arpl
loopne
and
jl,pt
shlb
push
adc
lahf
xchg
jmp
xchg
andnps
addr16
push
lods
pushf
sbb
xlat
arpl
rolb
pop
jl
jmp
movntq
out
icebp
cmp
sahf
sub
outsb
pop
ljmp
and
or
and
lahf
cmp
or
adc
xor
add
add
mov
fnstenv
cmpsl
int3
xchg
pushf
addr16
add
test
mov
cwtl
imul
je
inc
push
hlt
inc
sub
insl
ja
cmp
call
pusha
push
cmp
fiaddl
dec
mov
cmp
dec
test
push
pop
test
push
xor
lock
les
stos
cmpsl
and
pop
cltd
insb
sbb
rcrb
cmp
fildll
mov
ficoms
mov
jnp
dec
sub
add
dec
pop
mov
mov
xorb
ret
pop
cs
push
and
mov
xchg
repz
xchg
icebp
mov
and
cmpsl
push
outsb
mov
inc
es
sub
jg
sub
or
cld
loop
push
dec
je
das
shll
mov
adc
or
aas
push
enter
push
das
dec
pop
pop
mov
or
loope
movsl
adc
add
cld
je
jbe
jns
sbb
lret
mov
add
add
lahf
push
test
cmc
xchg
mov
xor
or
mov
imul
lret
in
mov
pop
mov
mov
pop
negl
fldt
push
add
aam
pop
pop
cmc
mov
push
inc
stos
xchg
and
mov
lods
or
sbb
pop
ss
pop
les
mov
xor
mov
cmp
lret
inc
and
hlt
into
mov
fbld
out
shll
in
mov
mov
movsl
pop
mov
and
mov
lret
in
push
cmp
inc
orb
ret
or
out
cmp
fstps
mov
sub
mov
lahf
jns
ret
stc
jge
cmp
dec
cmp
sbb
jmp
cmp
shll
or
mov
mov
out
fld
mov
bound
pop
clc
call
add
push
cltd
jmp
fildl
or
lock
addr16
add
add
add
push
push
test
push
sub
jp
test
cli
mov
pop
imul
add
je
lcall
add
add
inc
rol
mov
xor
in
add
dec
cltd
push
mov
cltd
adc
rclb
negl
mov
sub
or
mov
jmp
mov
mov
sub
xchg
add
mov
sbb
rcrb
inc
and
mov
xadd
iret
xchg
add
sti
xor
and
int
subb
lds
sbb
inc
sbb
cmp
pusha
scas
jle
jg
in
add
mov
out
jne
das
iret
xor
jno
shlb
cmp
scas
adc
dec
push
push
jp
inc
in
xchg
inc
repnz
push
das
orl
add
add
push
jg
dec
xchg
dec
cwtl
or
add
add
add
pop
adc
repnz
jl
loope
add
hlt
sbb
mov
mov
popf
das
jmp
outsb
mov
cwtl
add
filds
xchg
jns
cwtl
fwait
dec
lds
test
and
mov
test
push
xor
cmp
push
lock
into
or
orb
dec
sub
mov
daa
call
insb
out
push
shlb
aad
jp
mov
xchg
or
xor
pop
pop
and
lock
jmp
mov
mov
into
lret
lods
mov
sti
dec
mov
mov
push
lock
movb
jg
sbb
dec
out
das
jae
out
shl
xchg
gs
sti
fs
jne
xlat
gs
ja
popa
pop
add
mov
and
jbe
adc
xlat
mov
rorb
aaa
cltd
xor
add
add
mov
fucomip
push
insb
xor
addr16
insb
add
add
add
mov
jg
addr16
fcomp
and
mov
sub
out
negl
jo
add
mov
pop
cltd
xchg
jp
out
scas
roll
lcall
and
mov
xorl
xor
scas
jmp
inc
jne
in
xor
adc
ss
jp
leave
scas
cli
movsl
pushf
insb
out
in
lds
repnz
lret
or
sbb
xchg
testb
jns
and
sbb
lods
push
inc
sti
jns
out
pushf
mov
adcl
pop
pop
mov
mov
pop
pop
ficoml
and
xchg
and
jae
sbb
add
dec
dec
xor
push
pushf
out
lret
mov
ljmp
adc
popa
fisubl
roll
lods
cltd
mov
int
adc
mov
decl
pop
mov
xchg
pop
cmc
in
subb
imul
dec
out
iret
jmp
aas
in
push
dec
or
insl
add
add
add
sub
popa
pop
adc
dec
in
lret
or
push
loop
dec
inc
fists
push
cld
test
mov
dec
jno
xchg
fs
fdivl
xchg
les
test
sub
mov
inc
jbe
xor
aam
lds
sti
ja
bnd
lcall
lods
aaa
in
mov
cmp
push
add
addr16
pop
mov
and
pop
mov
cmp
inc
cmp
push
aas
push
cmp
mov
popf
lods
push
xor
add
dec
mov
jo
sub
enter
aad
shlb
inc
cld
xor
int3
or
xchg
scas
pushf
jmp
les
int3
inc
jg
mov
ss
test
lea
bound
mov
add
jmp
jmp
cmc
mov
pusha
stos
test
lahf
cs
and
fmuls
addb
add
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
dec
adc
outsb
add
add
add
movsb
pop
das
push
sbb
cmp
inc
mov
fimuls
or
mov
imul
mov
pop
aaa
inc
push
gs
mov
pop
xlat
js
iret
shrb
mov
into
idivb
sub
fs
pop
loop
icebp
jmp
dec
xchg
bound
xchg
sti
mov
pushf
clc
xchg
jbe
lcall
sub
pop
xchg
jg
stos
jo
and
loopne
pop
pop
fists
cmpsl
es
xadd
lahf
cli
aaa
sub
fisttpll
pop
mov
ficomps
cld
movsb
sub
mov
filds
aaa
xor
sti
pushl
call
sbb
std
je
mov
aad
mov
cmpsb
outsb
shlb
enter
pop
pop
inc
test
add
push
rcrb
sbb
in
pop
inc
in
repnz
int
int3
xchg
jl
pop
mov
in
lods
imul
neg
std
sub
dec
cmc
addr16
outsl
add
add
add
ret
movsb
jne
xchg
lds
or
loope
mov
sbb
cmp
mov
rorb
test
mul
inc
aad
scas
test
aad
in
fbld
scas
shrl
jle
ja
imul
lods
loop
inc
pop
push
dec
popf
xchg
lret
les
loope
push
loopne
sub
inc
ds
cmp
pushf
ljmp
nop
sub
lret
push
sub
clc
pop
lcall
or
and
xchg
adc
mov
dec
mov
jb
aad
push
mov
scas
call
cld
mov
mov
andl
enter
in
pop
mov
xchg
idivb
pop
sbb
jge
adcb
out
sti
mov
sbb
in
jecxz
icebp
in
xchg
mov
sub
imul
leave
jecxz
or
add
cs
xor
cltd
scas
adc
scas
addr16
add
add
add
in
sbb
mov
out
push
mov
outsb
out
arpl
lock
jle
into
mov
push
jl
jae
xorl
std
pop
leave
dec
insb
out
cmp
jp
push
push
mov
jle
out
imul
fisubrs
add
andb
and
out
fisttpll
daa
pop
cs
push
pop
ret
int
scas
jae
adc
xchg
lock
xchg
lock
dec
lods
test
push
mull
or
jmp
xchg
and
xchg
and
subl
xchg
sub
lahf
arpl
xor
mov
imul
outsb
lea
sbb
xor
mov
divb
mov
adc
push
cmp
xchg
jl
ret
pop
ds
sahf
xchg
add
add
test
les
push
cld
imul
and
pop
popa
mov
cmpsl
xchg
dec
xor
lcall
out
sbb
das
cwtl
addr16
add
add
add
push
shll
std
or
and
movsl
or
std
scas
xor
or
addr16
inc
mov
call
inc
dec
lock
jae
push
mov
mov
dec
cmp
adc
mov
add
fs
pushf
add
or
addr16
scas
mov
dec
xchg
mov
div
ja
fdivl
in
jb
ret
push
inc
add
int
test
les
jae
jne
jg
in
mov
and
xchg
and
mov
pushl
repnz
pop
sbb
adc
sbb
cmp
push
or
lcall
inc
mov
jne
xchg
fadds
rcrb
andb
mov
sahf
sbb
push
mov
or
shll
jb
sub
sbb
gs
scas
cmp
xor
push
negb
pop
mov
add
add
sub
ja
mov
xchg
dec
adc
add
add
add
dec
aas
sbb
and
lea
mov
sbb
adc
pop
mov
ljmp
popf
fbld
repnz
repnz
mov
fldl
lock
test
add
push
add
popf
imul
shr
or
pop
pop
mov
or
jb
mov
ficoml
test
and
sbb
dec
ret
push
aam
ja
shl
and
cmc
xchg
xchg
repnz
and
in
jbe
push
inc
xchg
xchg
test
mov
or
rcl
stos
jnp,pn
in
outsb
orl
mov
in
mov
add
pop
ljmp
or
test
and
rcll
shlb
out
jl
pushf
fwait
sbb
inc
and
cmp
cwtl
shll
mov
cmpsb
lods
inc
das
push
push
adc
add
int
mov
jnp
outsl
cmpsb
loopne
sub
jae
add
add
add
ljmp
pop
mov
mov
out
pop
mov
push
xchg
dec
jnp
jg
test
data16
pop
xor
inc
xchg
jbe
arpl
add
aaa
into
push
popf
xchg
or
dec
cmp
mov
loop
xchg
inc
jne
lahf
mov
fldcw
mov
jno
daa
sub
or
outsl
imulb
fwait
jne
push
xlat
lahf
xchg
mov
stos
mov
dec
or
mov
jmp
mov
jecxz
mov
sbb
xchg
lret
fs
push
sarb
jmp
rorw
mov
mov
push
fldcw
xor
xlat
jle
sub
out
pop
or
cld
sub
aad
mov
xchg
outsl
test
cltd
sub
cli
xor
in
loopne
std
mov
nop
int3
out
cwtl
xchg
xor
push
scas
mov
iret
mov
inc
push
xchg
push
mov
cli
xchg
jle
push
je
mov
ljmp
add
add
mov
mov
filds
push
mov
fstpl
adcb
gs
adc
add
mov
push
push
leave
shl
sub
mov
cmpsl
in
ficoms
and
std
push
push
lret
jmp
lods
test
sti
repz
add
mov
lahf
hlt
jge
ret
xchg
sahf
push
cltd
xor
ja
lods
and
aam
lods
je
scas
mov
adc
imul
inc
push
mov
mov
cmp
jmp
push
vpsubusb
xchg
cmc
push
sbb
ret
jno
mov
dec
cmp
jecxz
lods
divb
stos
out
mov
cs
cmpsl
xchg
popa
ds
and
add
and
flds
jmp
xchg
in
out
xchg
cld
fildll
lahf
mov
or
in
shll
cltd
inc
loop
scas
or
cmp
inc
aaa
dec
fwait
jnp
aad
sbb
add
addr16
add
add
add
andl
mov
push
and
inc
or
push
aad
mov
cmpl
inc
mov
sub
mov
data16
ficomps
adc
pop
cs
loope
jl
imul
dec
mov
inc
mov
jg
mov
dec
and
xchg
cmpsb
pusha
push
inc
xor
jns
xor
sahf
rcrb
cmp
dec
add
fnstenv
shl
push
insl
pop
push
pop
jge
insb
cmp
ficoml
jae
call
aaa
dec
mov
inc
fldenv
cs
mov
xchg
cmp
pop
jbe
xor
adc
sbb
adc
add
packsswb
inc
pop
out
cwtl
fisttpll
mov
and
sbbl
ret
fistl
movsb
cld
mov
sbb
mov
cmp
fcomp
test
inc
xor
das
pop
lret
mov
std
mov
sub
loop
pop
addr16
add
add
add
aas
out
fiadds
mov
fsubrs
into
dec
sbb
push
jns
mov
or
aas
sbb
stos
or
xor
push
mov
icebp
outsb
test
jle
fsub
aaa
and
lsl
xor
adc
lret
jae
ret
lea
xchg
mov
inc
dec
mov
test
imul
xchg
insb
enter
jmp
mov
fsubl
cld
pop
outsl
ds
loopne
test
or
fcoml
xor
fsubr
stc
and
dec
loop
out
pushfw
sub
daa
xchg
popa
xor
mov
cld
rorb
in
xchg
jb
push
and
lret
jae
add
sub
and
inc
pop
jbe
imul
leave
cld
lret
fs
cmp
or
imul
sbb
xchg
fwait
add
insl
sbb
sub
cmp
mov
add
std
hlt
adcl
xchg
fisttps
mov
fldt
add
add
adc
mov
ffreep
out
push
xchg
dec
arpl
mov
int3
test
mov
inc
xor
test
xor
fstps
int
sbb
outsl
add
add
loopne
pop
mov
into
out
sbb
push
sahf
jg
jno
push
gs
adc
mov
jns
sarl
leave
out
or
sbbl
stos
mov
ja
inc
xor
mov
clc
jo
ret
dec
in
mov
popa
movsl
lahf
mov
push
mov
cmpsb
inc
aas
mov
jecxz
iret
es
movsl
hlt
lock
add
leave
test
fs
and
push
call
lret
mov
mov
shrl
or
mov
and
cmp
add
jl
aaa
lret
imul
or
test
scas
or
push
and
inc
jbe
inc
in
mov
mov
out
sub
sbb
js
add
add
add
sbb
sub
inc
bound
popa
xchg
call
movsl
data16
repz
lds
push
out
out
popa
int
jge
loope
lcall
dec
mov
jge
mov
dec
test
jp
rcrb
mulb
daa
push
sub
loopne
fdivs
fwait
cmp
fs
xor
mov
out
and
add
in
pop
and
mov
leave
ja
loopne
mov
push
insl
loop
sub
pushf
xchg
lods
cmpsb
sbb
push
dec
inc
cld
or
out
imul
mov
or
packuswb
sbb
cmp
mov
stos
sti
fstl
sarb
cmp
pop
imul
sbb
sub
lret
adc
or
inc
inc
mov
mov
jge
and
enter
jns
divl
in
sub
addr16
add
add
add
mov
shll
mov
das
aad
xchg
mov
jae
andb
xor
pop
sub
stc
lock
popf
mov
cmp
jb
pop
dec
cmc
jnp
dec
icebp
cmp
out
xchg
mov
jle
mov
clc
loopne
cmp
in
add
push
mov
testl
stc
sbbl
xchg
cmp
ror
pusha
or
lods
scas
fsts
push
xor
bound
stos
dec
in
and
aas
pop
rcll
scas
adc
inc
lret
fidivrl
pop
in
mov
dec
cs
sti
mov
ja
incb
cmp
js
icebp
mov
jp
lods
push
xor
jle
test
enter
xchg
xor
lcall
mull
pusha
and
dec
aam
pop
mov
out
inc
fisubrl
dec
inc
jl
iret
call
std
jo
aaa
pushf
push
mov
inc
sub
mov
clc
fisubs
mov
mov
mov
add
add
add
rorb
ficoms
xor
in
inc
lds
mov
jg
mov
inc
and
xlat
fbld
lods
jmp
xor
ljmp
dec
ja
insl
add
out
mov
sbb
gs
adc
xchg
jbe
adc
test
rcrb
aaa
int
mov
repnz
and
ljmp
sbb
mov
dec
hlt
pop
or
xchg
xor
fucomi
arpl
pop
stos
xor
test
imul
xchg
movsl
pop
sub
shrl
hlt
jle
sbb
xor
add
xor
repnz
sbb
xor
inc
mov
sbb
pop
adc
mov
mov
mov
push
daa
js
and
inc
push
jns
scas
loopne
addb
fldenv
adc
add
mov
mov
lods
sar
mov
cmp
shlb
mov
fbstp
sti
addr16
add
add
add
and
jl
mov
adc
push
cmpsl
xchg
push
test
or
cs
and
cmc
cltd
xchg
mov
outsb
add
lods
popf
iret
lods
std
pop
mov
test
cmp
mov
adc
cmpsb
inc
cmp
cld
out
mov
sbb
cmp
sbb
mov
mov
xchg
pop
fstl
cltd
pop
shr
movsb
dec
jle
mov
and
inc
mov
sbb
cmc
cmp
das
pop
pop
stc
cmp
or
xor
jo
popa
push
insb
cltd
test
adc
mov
aas
aam
scas
sub
inc
dec
cmpsl
fstpl
mov
sar
not
dec
nop
ss
pop
push
in
ds
mov
xchg
loope
insb
adcl
addr16
jmp
inc
fdivp
sbb
test
lret
inc
mov
test
repz
aaa
sahf
lret
jecxz
jne
ret
js
push
sub
pop
outsl
divl
push
push
orl
sub
cld
fwait
orb
ljmp
jl
aam
pusha
add
add
add
add
adcb
imul
cmp
clc
cmp
test
ljmp
jecxz
sbb
xchg
sti
arpl
jbe
mov
xor
aam
popf
subb
or
xor
or
not
push
jle
outsl
dec
stc
cmc
int
nop
fs
pop
notl
imul
mov
sub
repz
je
add
lods
xchg
mov
jmp
push
iret
sbb
popf
iret
sbb
or
in
sahf
push
lds
lret
push
jnp
pop
stos
out
xchg
pop
dec
dec
mov
je
fwait
stos
fmulp
jl
or
ror
mov
fucomp
dec
insl
push
push
mov
cmp
repnz
push
jmp
adc
jmp
lret
loopne
inc
cmpsb
mov
inc
mov
cmp
add
pop
inc
mov
mov
push
rcrl
or
xor
fstpl
loopne
inc
jb
sti
fiaddl
add
add
jo
ja
std
stos
sbb
ljmp
add
add
add
add
jmp
ja
inc
jno
dec
lods
ret
fisubl
ds
leave
stos
add
jb
pop
jmp
sub
in
in
das
mov
xor
mov
and
xchg
fistpl
mov
rcrl
dec
lods
or
sub
jmp
js
imul
ljmp
inc
popaw
pop
add
push
fdivrs
ds
cmpsb
insb
repnz
and
cmp
pushl
lret
loopne
sub
sbb
adc
pop
cli
xchg
cmp
push
pop
ds
lods
sub
divl
or
outsb
pop
ss
or
xor
shlb
push
repz
add
pop
repz
insb
lods
push
xchg
roll
ss
push
push
repnz
lret
push
cltd
out
add
add
cmpsb
push
sbb
sti
ljmp
add
sub
out
pop
mov
pop
arpl
mov
pop
cmp
mov
push
call
sarb
clc
xchg
push
mov
mov
ds
or
or
mov
enter
mov
inc
inc
mov
stc
iret
insl
mov
subl
call
adc
outsb
mov
sbbb
lret
loop
inc
rcrl
pop
popf
xchg
mov
xor
cmp
stos
cmc
xchg
jl
int
or
push
int3
xchg
push
test
or
shrl
pop
sbb
mov
mov
cmp
mov
test
shll
mov
jb
jecxz
or
test
fwait
jecxz
inc
pushw
inc
lea
mov
test
jl
mov
lahf
in
mov
jle
enter
and
shll
pop
cmpsb
sbb
pop
shll
xor
cli
mov
shlb
add
add
add
cmp
push
movsb
out
add
shlb
push
ret
mov
mov
das
lea
cmpsb
aad
sub
lea
add
fisttps
leave
es
bound
cs
push
pop
dec
add
mov
sbb
test
jmp
and
push
fiadds
dec
xchg
data16
rclb
lcall
push
and
and
cmc
push
data16
outsl
push
cmp
aaa
push
or
int
stos
fistps
mov
cmpsb
cld
mov
nop
adc
inc
arpl
pop
rcrb
pop
loop
adc
es
call
out
cli
push
sahf
int3
push
cmp
and
push
scas
arpl
and
jo
dec
xor
adc
ds
mov
int3
adc
sbb
out
jae
into
adc
push
scas
add
sahf
ss
dec
mov
aas
and
cmpsl
outsl
jl
mov
dec
jg
aad
add
add
test
lcall
loop
add
addb
add
add
or
dec
in
mov
sub
mov
ficoml
sarl
inc
sub
xchg
inc
test
jns
lea
push
and
sub
pop
push
xchg
dec
mov
xchg
test
mov
aaa
push
or
stos
pushf
xor
ds
jg
push
ficoms
cmp
lcall
sub
xchg
mov
lods
fnstenv
movsl
xor
cli
and
out
mov
mov
aad
pushf
sbb
xor
xchg
imul
jecxz
mov
es
sub
fnstcw
pop
lcall
mov
addr16
jmp
inc
out
call
dec
mov
dec
and
cmp
or
push
adc
pop
and
dec
pushf
outsl
ss
sub
cs
in
pop
lods
dec
push
xor
xor
testb
daa
mov
stos
addl
add
xchg
cmp
inc
shll
js
jno
mov
aaa
fsts
in
cmp
xor
mov
lods
add
adc
sub
xor
xchg
cli
pusha
sbb
clc
cltd
out
cltd
cmpsb
mov
push
fs
pop
scas
imul
inc
fcomps
loope
gs
jbe
into
mov
jne
fwait
popf
mov
dec
or
mov
mov
cmp
push
push
call
sahf
push
jg
and
xchg
les
addr16
sub
stos
les
loop
add
dec
insb
jle
shll
lock
pop
push
sahf
filds
cwtl
ficoms
cmp
push
pop
repz
xor
mov
mov
push
pop
js
xchg
xlat
scas
lea
mov
jecxz
fldl
shlb
xchg
add
push
bound
stos
fadds
mov
push
das
scas
imul
add
lcall
and
addb
add
add
xchg
mov
inc
in
es
in
stc
decl
xchg
fadds
lcall
cmc
adc
imul
dec
lock
adc
iret
fildl
xchg
mulb
shlb
arpl
data16
fs
mov
jg
outsl
sti
xchg
jns
fwait
adc
fcomip
mov
inc
pop
inc
fcmovnb
sbb
xor
pop
sub
inc
add
push
add
inc
or
add
pop
and
inc
test
dec
mov
icebp
or
or
js
inc
xchg
mov
jne
fdecstp
adc
pop
inc
jl
push
xor
fwait
dec
and
pushf
inc
mov
clc
mov
push
lret
movsb
or
shll
cmp
mov
cmc
mov
mov
xor
pushf
ret
xchg
jl
cs
idiv
jne
iret
sub
dec
shll
add
add
add
repz
adc
xor
pop
mov
incl
pop
int3
mov
push
dec
shll
sarl
push
aas
ss
iret
sbb
fisttpll
push
jno
insb
movsb
test
cmp
fsubrs
xchg
xor
jno
add
adc
mov
or
mov
fsubrl
pop
jno
out
xor
scas
xchg
jmp
lret
push
push
adcb
hlt
adc
js
cmpsb
shrb
jns,pn
sub
xlat
pop
add
cli
ss
cmpsl
mov
jle
popa
daa
jns
pop
pop
inc
hlt
pushf
dec
xchg
mov
insl
popf
sbb
push
fsubl
daa
cmp
sub
sub
push
rorl
and
jl
xchg
pop
mov
es
shrb
add
pop
mov
enter
cmp
xchg
mov
shrb
sar
xlat
push
add
not
iret
in
xchg
pushl
sub
adc
test
add
add
add
mov
aaa
subb
lcall
inc
xor
adc
rcll
icebp
adc
jecxz
mov
xlat
pop
push
adc
xor
mov
jge
cmpsl
lret
aaa
adc
xchg
mov
mov
push
xchg
sub
mov
fucomp
aas
mov
inc
idiv
stos
je
inc
scas
stos
shrl
jns
popf
xchg
push
sub
and
sub
ret
sar
fiadds
inc
mov
push
aad
shr
rorl
jbe
cltd
popa
pop
pop
cmp
inc
or
mov
inc
jnp
mov
adc
call
cmp
mov
sub
popa
or
ss
jmp
and
mov
cmp
mov
rcrb
xor
movsl
mov
lcall
js
clc
xchg
inc
aaa
ja
shll
test
xor
jb
mov
jge
std
sti
iret
ss
push
jno
and
pop
test
add
add
add
in
mov
nop
add
fnstcw
cmp
mov
xor
mov
push
xor
in
mov
mov
test
popf
cmc
hlt
xchg
out
jb
inc
gs
xchg
mov
push
addr16
xchg
cmp
inc
fistps
leave
cmp
push
mov
fdivs
mov
or
stos
push
xor
pop
push
sahf
or
jae
inc
rcl
dec
out
pop
jnp
jp
daa
rcr
jle
cli
cmpsl
mov
out
xchg
stos
in
inc
push
lods
mov
dec
icebp
shlb
adc
or
cmp
mov
lahf
xchg
sbb
clc
dec
cs
jo
inc
cltd
sbb
into
ret
inc
sub
pop
outsl
clc
mov
pop
inc
sub
mov
scas
push
mov
pop
mov
pop
fs
subl
or
cltd
jecxz
xchg
xlat
mov
or
dec
es
pop
fstps
dec
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
hlt
lret
xchg
add
add
add
popf
stos
popf
test
sbb
or
imul
fs
mov
adc
sbb
add
out
push
ljmp
jb
xchg
cmp
xchg
bound
mov
fidivs
mov
outsb
insl
lea
out
setge
clc
adc
rcr
inc
aaa
sub
popf
push
pop
das
mov
stos
xchg
add
out
mov
test
loope
cmp
xor
push
or
cmp
inc
adc
in
gs
add
pop
dec
filds
push
test
pop
lock
repz
repnz
sub
lret
mov
repnz
std
test
in
dec
mov
shl
into
repnz
sbb
sbb
cld
inc
icebp
mov
inc
cmp
xchg
fucomp
shll
loop
or
cmpsb
fs
sub
cmp
jo
addr16
add
dec
inc
cmpsl
sub
cmp
mov
mov
mov
cmpsb
jo
xchg
add
add
add
call
rol
fildl
jb
or
pop
stc
divb
jo
rolb
fiaddl
mov
cli
pusha
jmp
ljmp
scas
cmpsl
jl
fbstp
shll
scas
aam
or
and
pop
cld
sub
mov
jo
popf
add
cmp
in
inc
sub
and
jp
outsl
data16
aam
adc
lock
and
xchg
aas
daa
ja
xor
cmp
jmp
add
pop
pusha
mov
jmp
pop
and
and
lods
or
repnz
es
stos
push
push
mov
mov
fsubrs
ljmp
mov
lea
stc
loop
jne
and
cld
mov
push
push
call
mov
data16
mov
mov
and
pop
rcrb
cltd
or
add
and
out
ljmp
lock
xchg
pop
outsl
dec
dec
mov
add
add
add
cmpsb
mov
cmp
movsl
fisttpll
adc
sub
mov
mov
jb
shl
sub
mov
pop
dec
out
shrl
jns
in
fdiv
cld
pop
push
lahf
lock
xchg
adc
test
lahf
sahf
insl
lcall
jne
mov
mov
enter
scas
cwtl
mov
sbb
xor
aaa
mov
lret
mov
or
cmpb
mov
call
lret
sub
ret
in
sti
in
shlb
fisubrl
rcll
notb
dec
sub
lfs
das
sub
mov
fs
jl
jno
xchg
mov
int3
fisubrl
xor
mov
mov
mov
add
lea
push
jge
xchg
pop
js
mov
lret
lret
or
adc
test
inc
inc
push
and
add
add
arpl
jnp
sbb
push
xor
stos
adc
add
add
add
ret
sub
int3
pop
enter
mov
test
jne
out
bound
and
mov
xchg
and
ss
imul
test
bnd
dec
out
test
pop
fs
loope
das
imul
pop
clc
fsubs
push
push
xchg
imul
xchg
jg
sbb
loopne
and
movsl
mov
and
stc
aaa
imul
inc
or
mov
out
xchg
inc
jecxz,pt
clc
adc
andb
lahf
fidivs
push
push
dec
imul
int3
outsl
cmp
jle
leave
pop
mov
lahf
and
test
mov
imul
inc
insb
jns
movsb
dec
push
jno
fimuls
out
mov
cmp
insl
add
leave
pop
dec
xlat
imul
cmpb
iret
ljmp
and
add
add
aas
or
mov
and
mov
add
add
add
inc
cmp
mov
add
les
jge
push
sub
stc
enter
cs
shlb
xchg
adc
xor
insl
ss
push
aad
mov
dec
das
js
loopne
push
jb
pushf
jne
mov
addl
and
cmp
jl
jl
inc
cltd
xlat
bound
mov
jg
pop
pushf
mov
popf
push
xlat
xor
mov
fsubr
cld
stc
call
fucompp
pop
imul
mov
dec
rcr
iret
pop
inc
insl
push
imul
xchg
ljmp
cmp
test
mov
push
push
adc
fbld
lret
je
stos
into
js
cmp
adc
pop
lock
pushf
or
mov
sub
xchg
dec
pop
add
rorb
stos
hlt
xchg
pop
add
inc
cwtl
mov
outsb
outsb
nop
insb
fidivl
bound
leave
xchg
mov
add
add
add
xor
pop
ds
sub
daa
xchg
xlat
mov
add
int
xchg
clc
add
cmpsb
xchg
mov
xor
jle
sub
ljmp
xchg
int
jno
fwait
mov
add
cmp
aas
cmp
lret
lret
xor
dec
test
xchg
xchg
int
aas
lret
ret
jmp
pop
add
into
xchg
xchg
sahf
mov
je
or
mov
stos
and
push
mov
leave
ret
lods
scas
hlt
jp
fistps
or
jae
inc
pop
mov
repz
add
cmp
jp
nop
and
xchg
sbb
in
mov
sbb
mov
iret
add
mov
xchg
fidivrl
ds
cmc
ja
insb
cmp
xor
sbb
mov
cmp
mov
jns
mov
push
mov
add
add
add
pop
stos
addr16
stos
lods
mov
loop
inc
subb
iret
cmp
ret
sbb
dec
mov
leave
inc
adc
pop
mov
fistps
out
inc
inc
lcall
test
sub
addr16
and
xor
cmp
xor
mov
mov
call
mov
xor
add
pop
lds
adc
inc
or
xchg
mov
loope
in
fwait
xchg
pop
or
out
int3
loop
lea
jns
push
xchg
xor
or
sysret
ror
mov
sub
cwtl
dec
je
roll
jno
inc
rorb
iret
lahf
add
sbb
pop
dec
insl
push
mov
adc
adc
xchg
fisttps
imul
adc
and
rorb
sub
lea
popf
aas
or
lods
sub
cli
pushf
int3
hlt
mov
pop
cmp
call
mov
add
int
fstp
iret
push
cmpsb
fadd
dec
dec
hlt
cmpsb
shlb
add
add
add
and
sahf
shlb
cmp
lret
add
push
outsb
cs
clc
hlt
je
mov
inc
in
js
rclb
dec
jns
movsb
sub
xchg
mov
shll
int3
shlb
sub
add
xchg
icebp
push
arpl
mov
jge
fwait
or
adc
jl
in
fs
pop
inc
dec
aaa
out
repnz
insb
xor
and
loopne
repnz
pop
fstl
sar
shlb
fstpl
adc
pop
pop
xchg
mov
fisttps
test
jne
xor
mov
ror
test
or
scas
and
mov
test
mov
or
ljmp
std
mov
cmp
xorb
jb
sub
xchg
xchg
das
add
adc
lods
test
dec
and
aad
fs
test
lahf
sbb
ret
pop
or
lret
loope
das
cmp
ja
mov
pop
dec
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
add
sti
dec
xor
sub
sbb
lods
cmpsl
popf
fs
vpmacssdql
dec
xchg
out
ret
test
pop
lods
push
aad
jl
mov
in
sub
pop
push
mulb
sbb
mov
jnp
pop
dec
int
popa
xchg
popa
cmpb
mov
aas
xchg
in
jle
seta
adc
or
aaa
xor
xchg
out
mov
push
lods
out
into
pop
imul
out
mov
or
mov
insb
imul
ret
test
mov
call
fcoms
int
push
adc
dec
int3
lock
xchg
cmp
jecxz
std
jae
imul
jp
je
lahf
leave
sub
in
mov
ficoms
cmp
adc
pushf
fimull
shl
cmp
mov
lock
outsl
xchg
dec
dec
add
ljmp
leave
sub
pop
pmulhw
adc
je
push
addl
add
lods
les
jnp
mov
icebp
test
std
aas
popl
add
add
add
nop
rcll
enter
sub
sub
inc
push
daa
mov
fs
jecxz
aam
or
pop
int3
jmp
adc
mov
enter
dec
das
jl,pt
mov
mov
fistl
rolb
dec
std
jae
mov
ljmp
adc
mov
xor
jae
mull
push
jecxz
int
js
ss
xchg
lds
inc
pop
mov
pushf
aam
aas
sbbl
adc
sbb
dec
jbe
movsl
into
in
cs
push
cli
adc
mov
enter
cmp
and
in
fldt
dec
rorl
int
decl
mov
dec
stos
pop
fsts
dec
daa
repz
pop
or
pop
sub
cmp
xor
hlt
jb
fbstp
or
pop
test
data16
push
inc
or
test
fcomps
add
lods
push
add
add
add
pop
add
shlb
movsl
inc
sbb
mov
jle
outsb
movsl
aam
mov
xor
mov
pop
fcmovne
xchg
mov
adc
stos
lods
fistpll
sub
inc
stos
adc
dec
cmp
ror
push
cmpsl
jp
insb
aaa
addr16
mov
jns
loopne
jmp
dec
lock
ljmp
mov
mov
or
sahf
inc
mov
and
inc
rcrl
insl
std
movsl
or
xchg
lods
inc
xchg
movsb
lea
rcrb
out
sbb
lret
pop
lret
fiadds
pop
cmpsl
fcomp
subl
inc
lahf
ficoml
in
test
jl
jecxz
bound
sbb
xlat
stos
cmp
outsl
lret
dec
daa
mov
mov
and
cwtl
cmp
adc
dec
mov
sub
mov
nop
inc
or
mov
pop
xor
xchg
push
mov
ljmp
dec
mov
lea
xchg
add
add
add
sub
imul
xchg
lds
pop
cli
push
mov
repz
and
popf
sub
loop
cmp
push
jbe
sbb
xchg
sbb
xor
fneni(8087
mov
shl
add
aam
movsl
repnz
shll
xor
shrb
inc
cltd
xorl
fidivrs
fs
popf
and
lods
movsl
rcl
js
jg
out
and
and
xor
and
dec
arpl
cmp
decl
push
sub
cltd
test
xchg
dec
movsb
pop
lea
add
into
hlt
sbb
add
ds
push
sbb
stc
in
sub
pop
mov
push
xchg
xchg
ficoms
ljmp
inc
ja
sbb
movsb
sub
push
jo
sub
fbld
pop
jmp
inc
sub
xchg
pop
out
push
adc
andb
mov
lea
xor
add
aaa
shlb
cmc
div
testl
mov
add
add
jo
sub
outsb
adc
add
sub
add
lahf
jle
add
les
ljmp
inc
jge
jno
add
bound
cmc
lea
iret
out
jle
imul
cmpsl
mov
in
adc
xor
je
add
out
bnd
mov
pop
cmp
in
jmp
stos
mov
loop
int
xchg
iret
sti
mov
jo
jge
cmp
addl
inc
jmp
scas
mov
mov
xchg
test
int
or
arpl
sti
bound
inc
xchg
rcrb
leave
mov
jecxz
sbb
or
jbe
and
inc
sub
adc
push
push
sti
push
push
or
lret
push
inc
lock
mov
in
sub
jle
insl
mov
xor
lret
lea
mov
add
pop
push
nop
push
sahf
rcr
pop
adcb
gs
dec
packuswb
add
adc
add
xchg
mov
sub
lods
test
aad
aaa
aam
ss
bound
jle
mov
and
shl
loop
mov
fs
fwait
mov
in
enter
jo
fsub
in
mov
out
sti
pop
xchg
movsb
imul
mov
imulb
dec
mov
js
mov
dec
pusha
hlt
mov
pop
test
cmp
test
dec
jmp
add
pop
mov
push
rcl
xor
loopne
ffreep
cld
mov
fnsave
fiadds
pop
clc
imul
push
fwait
call
push
scas
sbb
nop
xor
pushf
and
lret
nop
insl
mov
fstpl
repnz
and
push
adc
std
fimuls
inc
popa
pop
test
clc
jg
jae
pop
cmp
and
cmp
xrelease
ds
cmp
aaa
shll
cmpsb
jcxz
fimull
addr16
add
add
add
insl
fwait
pop
call
cmpsl
push
fwait
pusha
out
ficoms
es
inc
sub
das
mov
ret
jnp
jge
pusha
test
js
sbb
mov
rcr
ljmp
sub
in
loop
movsb
cmpsl
mov
dec
gs
mov
mov
imul
pop
repz
mov
lcall
test
lods
or
mov
push
cmp
movsb
sbb
mov
adc
xor
iret
mov
imul
sbb
inc
mov
repz
push
pop
ja
jbe
adc
and
mov
mov
mov
jmp
cmp
sub
mov
add
dec
test
out
adc
jbe
adc
cmp
push
arpl
add
or
xchg
push
popf
cltd
and
sahf
cmp
cmp
loope
mov
clc
jnp
jg
in
cli
enter
sbb
add
add
add
shll
mov
cmp
xor
fcmove
popa
add
cmp
mov
ljmp
in
and
enter
xchg
inc
xchg
mov
out
insl
and
and
repz
jbe
push
dec
mov
nop
jne
insl
sbbb
out
out
xchg
shlb
push
les
jbe
xor
mov
es
jo
movsb
xchg
pop
test
add
jbe
dec
adc
cmp
in
idivb
cltd
std
popf
rclb
clc
repz
jge
enter
stos
fs
test
out
fiadds
jnp
je
mov
jmp
jae
push
xchg
adc
loop
xchg
jnp,pt
cmp
stos
outsb
pop
insl
xor
jp
ret
shl
cmp
ret
sti
leave
pop
sar
xor
jecxz
movsb
xlat
je
sbb
loop
add
jnp
or
and
pop
cltd
int3
mov
pop
fidivrs
jge
mov
ljmp
cld
gs
mov
addr16
add
add
add
stc
cmpsl
mov
out
mov
rol
cwtl
sahf
sbb
or
pushf
aad
mov
inc
fisubrl
cmc
dec
das
cmp
outsl
cmp
mov
jg
shll
dec
fdivs
jmp
cmp
xchg
in
sbbl
mov
cmp
add
cmp
stc
mov
sbb
aas
jg
mull
cs
cmp
das
das
in
dec
pop
shll
iret
repnz
std
adc
iret
add
sub
fists
fisubl
mov
jp
cmp
mov
imul
xchg
fs
mov
outsl
cmp
popf
jae
mov
xor
hlt
aas
sti
push
cmp
pop
loope
dec
ja
xchg
rorb
cli
cmp
jecxz
nop
loope
popa
mov
data16
call
add
add
jl
sar
std
jle
pop
popf
scas
pop
cmp
add
add
add
gs
push
xchg
xchg
sub
imul
mov
orb
push
mov
mov
dec
popf
dec
jp
pop
loope
cli
out
shl
mov
sub
dec
pop
fsts
jecxz
push
push
sbb
ja
out
push
orb
aad
jle
mov
fistpll
xchg
inc
dec
cmp
mov
push
scas
movsb
out
loope
cmp
orb
pop
icebp
mov
mov
jmp
aas
adc
mov
push
inc
mov
mov
cmpsl
pop
push
je
sbb
shlb
jo
sub
mov
pop
pop
sbb
mov
je
dec
push
and
jg
jne
push
add
add
xchg
cmpsl
scas
fdivr
das
mov
addr16
add
imul
dec
scas
insl
mov
lret
xor
jmp
or
ja
push
xchg
cmp
cmp
in
dec
inc
jmp
add
add
add
mov
daa
dec
out
pop
stc
out
mov
in
clc
sbb
bound
add
dec
push
mov
inc
fstps
in
cmp
push
lret
sbb
sub
lods
fucomip
jmp
jnp
jb
dec
dec
subb
sub
iret
dec
cli
mov
xchg
iret
scas
add
mov
mov
shll
jg
insb
je
repz
push
xor
mov
clc
adc
ret
dec
cli
icebp
in
aam
and
cmp
lahf
loopne
and
mov
stos
test
data16
xor
dec
mov
imul
sahf
mov
ljmp
inc
xor
ss
inc
lods
and
push
xor
adc
jg
push
or
je
mov
mov
ret
lods
push
lods
xor
sub
jo
shlb
sub
mov
mov
jmp
and
scas
mov
cmp
push
add
add
outsl
sti
mov
mov
in
popa
cmp
addr16
add
add
add
addr16
mov
and
pop
fsubl
jo
inc
mov
xor
mov
adc
mov
popf
sbb
les
cs
int3
stc
pop
int
adc
lcall
pop
in
std
int
xchg
out
cmp
fwait
mov
adc
and
es
dec
lcall
dec
int
jg
inc
stos
sbb
popa
pinsrw
lcall
in
es
loope
adc
icebp
cmp
mov
jns
pop
dec
pop
or
add
movsb
repz
mov
push
scas
or
fisubl
cmpsl
or
pop
mov
cmp
or
pop
inc
cmp
repz
add
fbstp
add
jne
sub
cld
push
push
out
xlat
sub
lods
add
lods
and
or
aam
out
dec
mov
add
add
dec
std
out
xlat
aas
dec
sbb
or
addr16
jmp
call
and
lock
sub
orl
mov
lret
push
mov
fcomi
out
xchg
aaa
outsl
mov
xor
sub
mov
cltd
pop
push
or
adc
lahf
dec
pop
mov
fcomp
mov
xchg
lods
jne
pop
jg
push
sub
mov
jns
mov
test
add
loop
in
adc
lock
out
test
das
imul
mov
fwait
out
push
int3
add
fs
stos
push
mov
and
sbb
mov
pop
mov
inc
imul
mov
cmpsb
mov
subl
or
dec
lea
jecxz
mov
das
lret
add
xchg
adc
lock
lods
mov
loopne
jb
pop
mov
lret
aam
cmpsl
arpl
xchg
nop
loopne
adc
test
aaa
dec
insl
adc
push
push
ret
add
add
mov
mov
jmp
test
fwait
add
add
add
jg
shlb
rcl
xor
sbb
dec
adc
out
mov
aaa
and
mov
jg
jae
adc
lock
mov
jo
and
push
jl
adc
leave
rcrb
and
pusha
pop
ficomps
lahf
jns
es
sub
mov
test
sub
jg
xchg
fidivs
gs
xchg
mov
sub
cld
hlt
dec
fsubr
mov
rol
mov
adc
ja
xchg
jecxz
maxps
shl
hlt
or
push
mov
arpl
mov
cmp
or
add
or
pop
loop
push
push
clc
loopne
cld
pop
popa
lods
imul
dec
xor
std
loope
pop
lds
adc
lea
adc
insl
fstl
jo
or
sbb
insb
add
push
cltd
jo
aad
pop
push
or
adc
pushf
mov
xchg
je
and
add
add
lret
sbbl
popl
stos
js
pushf
add
add
add
push
stos
jmp
popa
mov
xchg
adc
dec
mov
jge
mov
jp
mov
ljmp
aam
dec
push
inc
sbb
js
mov
jae
gs
jo
lods
dec
cmp
mov
into
lret
sbb
xorl
mov
mov
mov
aam
je
jg
mov
jbe
in
dec
push
add
nop
mov
jb
or
or
inc
les
xor
scas
mov
out
cmpsb
inc
xlat
lea
inc
mov
sarl
popf
push
pop
inc
and
sub
test
sti
xor
je
pop
inc
adc
add
push
fnstsw
shll
jecxz
or
mov
cmp
push
sub
xchg
mov
adc
sub
mov
sbbl
sbb
outsl
lods
pop
push
push
repz
repz
out
and
add
add
imul
movsb
and
fidivs
stos
ret
add
add
add
xchg
mov
add
ss
adc
inc
mov
into
add
ljmp
jge
mov
loopne
fisubrs
push
scas
aad
lea
add
mov
lods
mov
sbb
enter
nop
cmp
cmp
push
cmp
push
and
out
test
adc
xor
cmp
scas
or
sti
sbb
js
cs
mov
int
add
lea
stos
fdivrl
ror
clc
cld
mov
aas
and
mov
xor
jg
in
push
ja
or
test
pop
scas
mov
or
push
adc
std
outsb
cmc
pop
or
cli
and
daa
push
add
push
imul
mov
enter
shl
in
popa
and
push
push
xchg
ss
lock
adc
cmc
mov
pop
test
inc
add
fisubl
cmpsl
test
add
mov
jge
jg
ljmp
in
lahf
mov
or
add
add
mov
rcl
pop
mov
jecxz
idiv
sbb
xor
js
or
or
stos
pop
sbb
sub
and
mov
xor
pop
sbb
xchg
js
out
jnp
imul
inc
cmp
js
adc
cs
scas
cmp
inc
cmp
push
das
push
mov
sub
pop
icebp
gs
out
adc
dec
test
mov
mov
dec
lock
xchg
sub
int
sub
cmp
or
jle
push
jo
sbb
mov
mov
add
jge
loope
xor
shrl
ljmp
loop
pop
xor
cltd
out
lret
pop
sbb
cld
mov
mov
inc
int3
imul
inc
in
ffreep
push
push
dec
cmp
mov
iret
xchg
adc
inc
cltd
sub
out
inc
sub
or
mov
add
add
add
shrl
not
dec
test
push
iret
adc
mov
or
cmp
pop
ret
mov
push
xchg
push
cwtl
mov
lds
js
cwtl
or
xlat
jg
push
jecxz
sub
sub
and
mov
shll
inc
clc
inc
loopne
fdivs
jge
sub
mov
addr16
mov
addr16
xor
daa
mov
push
divl
pop
sbb
and
xor
dec
mov
jp
inc
in
xor
mov
into
in
fdivrs
mov
ficomps
es
cs
pop
jo
jmp
or
lahf
sub
shll
call
adc
jb
add
or
imul
pop
mov
stos
out
sti
xchg
lahf
xor
and
push
fs
push
imul
mov
cmp
xor
sub
pop
movsb
or
add
loop
test
mov
cld
mov
addr16
add
add
mov
pop
push
insl
jae
add
mov
addr16
test
iret
pop
and
sbb
mov
pop
or
xchg
inc
imul
push
in
leave
in
or
or
mov
jle
cmpsl
aas
fwait
addr16
ljmp
mov
push
bound
loopne
ja
fcomp
fs
cwtl
arpl
sahf
cltd
hlt
cmpsb
jae
mov
pop
mov
aaa
jno
mov
lods
aaa
rcr
jecxz
shl
xor
inc
fcoms
xchg
inc
lret
les
enter
fistpl
sbb
fwait
dec
mov
xchg
ret
sub
mov
mov
aad
xlat
in
push
ja
pop
cs
hlt
lret
add
lds
mov
dec
sbb
test
cmp
flds
cmpsb
es
dec
sub
mov
jmp
add
push
sahf
or
lcall
out
sub
mov
add
mov
scas
dec
shll
xor
in
jl
dec
sub
mov
and
popf
pop
inc
aad
pop
inc
xchg
xchg
push
mov
movsl
push
or
mov
in
dec
add
cmp
out
cmc
fsubs
xor
std
push
jnp
mov
add
addr16
push
mov
aad
mov
lds
fdivrl
mov
pop
lret
repz
fcoml
ret
outsl
pop
lock
push
loopne
xchg
fwait
xor
xor
mov
subb
sub
push
pop
jl
imul
pop
add
aas
ficomps
pushf
pop
scas
sbb
add
les
cmc
repz
push
adc
and
xchg
cmp
adc
iret
mov
bound
mov
testw
mov
stos
in
and
dec
mov
ret
ret
xor
jg
push
jg
push
push
movsb
mov
mov
inc
inc
add
mov
add
ds
mov
les
sub
and
ss
insl
push
imul
pop
dec
mov
cmpsl
dec
shrl
outsb
mov
or
lret
sub
jg
mov
dec
inc
xchg
mov
cltd
or
push
and
cmpsl
cmpsb
popa
pop
xor
jb
xchg
cmc
je
test
push
mov
push
sub
aas
pop
stc
inc
lock
mov
mov
enter
cltd
ja
hlt
out
mulb
loopne
jae
pop
push
cmp
push
call
movsb
jl
push
sub
jmp
jne
shll
jp
mov
push
rclb
scas
loopne
mov
iret
pop
into
hlt
jbe
add
mov
push
push
dec
ja
mov
lods
add
lcall
cmpsb
daa
in
test
cld
lahf
jl
iret
push
movsb
push
push
sti
add
std
adc
movsb
jmp
cli
or
ja
inc
out
xorl
icebp
popf
pop
add
or
sbb
inc
mov
fs
addr16
add
add
pusha
push
sahf
adcl
popf
popa
xchg
daa
cmp
add
popa
sbb
outsb
fcomp
insl
test
push
adc
push
mov
mov
outsb
or
lcall
or
popa
ljmp
pop
pop
xchg
fs
lea
push
fcmovbe
sub
inc
movsb
xchg
insb
lock
jge
stc
inc
mov
xchg
rorb
xlat
jmp
ret
popa
cmp
cs
add
add
lds
jnp
push
sahf
es
jns
int3
xchg
sbb
mov
test
ja
or
sub
loopne
ret
and
jp
or
jbe
movsl
loope
push
das
xor
stc
stos
pop
imul
and
or
adc
and
fimull
out
sub
jmp
add
hlt
cli
loop
popa
pop
clc
fmulp
loop
data16
and
icebp
inc
scas
adc
add
inc
fdivl
push
dec
mov
movsb
add
add
add
xor
or
iret
and
gs
xlat
jmp
push
inc
and
js
lock
push
add
scas
mov
or
xor
imul
mov
call
xor
mov
xor
add
pop
int3
ret
mov
jmp
mov
cs
inc
loop
data16
stos
mov
fiaddl
mov
sub
in
sti
cmp
pop
jl
cmpsl
mov
jns
cmp
sbb
lock
aas
sub
dec
pop
rcrb
adc
lock
imul
cmp
shlb
leave
icebp
xor
xor
mov
clc
cld
jnp
lods
sub
cmp
ret
pushf
jnp
adc
jnp
mov
pop
pushf
add
out
lea
gs
shlb
cli
rolb
push
and
or
mov
push
sbb
push
push
jecxz
outsl
pop
xchg
stc
addl
add
adc
mov
sbb
movsl
add
add
add
cmp
pusha
scas
test
push
out
ret
adc
cwtl
rcrb
sbb
cld
cmp
movsb
jbe
inc
imulb
or
add
bound
mov
addl
in
test
ljmp
pop
pop
and
stc
das
popa
cmp
and
repz
gs
stos
jb
or
add
jmp
jo
and
leave
adc
dec
cmpsl
andb
outsb
adc
pop
inc
fincstp
sbb
and
es
push
test
les
add
ljmp
mov
jmp
aad
and
lock
outsb
push
leave
push
sbb
push
add
clc
sbb
in
cmc
insb
adc
outsb
repz
push
jno
sar
dec
test
fidivrs
sbb
jne
xchg
pop
mov
pop
test
stos
hlt
jmp
cmp
jbe
xchg
adc
add
add
add
pop
fxtract
or
in
test
stos
jmp
in
int
mov
dec
js
int
dec
jo
idivb
adc
adc
xor
mov
cmp
loope
xor
imul
nop
data16
add
rorb
scas
jle
xor
lret
sti
adc
jns
mov
ds
sub
lock
mov
sub
xchg
jbe
push
mov
adc
and
loopne
aam
loope
xor
mov
dec
hlt
dec
xchg
stc
mov
lret
cmc
jbe
pop
sub
dec
xchg
int
inc
into
pop
ljmp
rorl
int
sub
js
push
push
xchg
add
hlt
cmpb
fists
jp
ret
in
mov
mov
insb
cmp
pusha
faddp
xor
pop
push
mov
xchg
push
imul
lahf
inc
mov
add
out
xlat
out
jg
in
xor
flds
cmpsl
add
add
add
fisttps
mov
xchg
and
aaa
inc
stc
movsl
cld
testb
mov
xor
xorb
cmp
push
test
psubusb
jne
jno
sub
popf
or
push
sbb
enter
mov
shlb
dec
xchg
fsubs
adc
adc
ret
push
aam
inc
add
push
jnp
pop
sub
sbb
dec
imul
call
bound
in
or
mov
xor
in
hlt
pop
cli
movsb
lock
leave
mov
popa
leave
lret
loopne
mov
push
fisttps
ljmp
cmc
sahf
repz
jle
outsl
jb
ss
jge
outsl
shl
test
xor
cwtl
call
push
daa
jmp
aaa
into
adc
jg
cmp
enter
jno
adc
xor
xchg
push
dec
ljmp
push
adc
add
add
mov
inc
fwait
lds
jo
fldl2e
data16
mov
addr16
add
add
add
cmp
in
arpl
lea
int
fisubs
dec
fimull
in
call
divl
adc
sbb
mov
outsb
mov
pop
call
push
jbe
out
mov
movsb
aaa
sub
pop
mov
mov
jmp
mov
xchg
out
dec
lcall
cmp
push
and
clc
adc
clc
sbb
cmpsl
pusha
imul
inc
rolb
mov
into
pop
xor
sbbl
push
dec
add
mov
push
aas
jbe
stc
fsubs
cli
fisubl
mov
sub
insb
fdivs
xor
loope
sub
push
push
out
inc
dec
add
ss
mov
add
add
and
bound
cmp
pop
dec
outsl
repnz
sbb
jp
out
fwait
enter
mov
pop
aaa
dec
inc
or
lcall
std
inc
jne
xorl
test
add
add
and
or
mov
xor
jnp
rcrb
aaa
subb
scas
pop
sbb
fwait
cwtl
inc
je
xor
xchg
adc
mov
out
mov
mov
jb
shlb
out
fld
ret
jae
fsubl
rcll
mov
subb
nop
rclb
sbb
add
mov
mov
mov
jmp
pop
sbb
popf
xchg
add
xchg
or
aas
sub
push
push
sbb
lods
sbb
scas
cmp
add
loop
fdivs
pop
jmp
pop
sbb
lock
add
leave
pop
mov
sbb
jo
ja
pop
fildll
mov
mov
lcall
jne
test
loope
aam
cmp
xor
pop
loopne
fstpt
push
and
and
and
test
scas
stos
sbb
add
add
mov
push
sti
jmp
push
mov
testb
shlb
add
add
add
push
frstor
cmp
stos
insl
push
mov
jb
lock
cmp
cmp
repz
punpcklbw
mov
sbb
cmp
lcall
or
add
inc
orl
lock
popa
push
pop
xchg
sbb
dec
aad
into
sub
pop
aad
xor
add
std
cmc
scas
shlb
into
lcall
sar
fwait
movsb
lock
mov
insb
scas
sbb
pop
std
dec
es
dec
fcomip
adc
sbbl
popf
push
pushf
add
xor
push
repnz
out
mov
bound
add
adc
andb
and
push
fwait
mov
push
cmp
scas
pop
das
xchg
push
lock
or
call
add
jg
mov
push
xchg
es
int
rcll
inc
aad
push
mov
jecxz
lock
ret
stos
add
add
add
pop
inc
xchg
cmpl
lock
adc
enter
adc
push
mov
notb
pop
mov
pushf
ficoml
lahf
into
outsl
ja
fstpl
aas
push
in
mov
out
enter
push
enter
test
mov
cmp
insb
push
xchg
dec
idivb
or
jne
cli
adc
mov
bound
roll
scas
or
and
pushw
rol
sti
pop
inc
add
arpl
mov
in
cmp
cmp
lret
adc
into
dec
ret
ret
mov
and
cmpsl
lahf
pop
cli
push
xor
scas
jl
ljmp
cli
inc
add
and
adc
xor
push
dec
cli
push
into
test
jmp
or
lods
pop
jno
inc
add
je
inc
clc
pusha
mov
mov
gs
or
sbb
aad
add
add
cld
mov
leave
and
insl
test
add
add
imull
add
lahf
xchg
dec
lret
push
xchg
or
es
mov
mov
mov
test
adc
fcomps
sub
pop
inc
int3
cld
cld
dec
push
in
popa
adc
js
mov
xchg
dec
testb
cmc
loopne
sub
or
insb
and
xor
jl
sbb
ret
aad
iret
stc
loope
mov
test
out
add
or
test
aas
lret
pop
dec
in
adc
lock
sti
into
add
xchg
xor
sub
mov
mov
cmp
add
mov
mov
or
xor
bound
fsts
mov
xchg
mov
cwtl
jle
dec
adc
lods
and
aaa
sub
out
data16
cmp
pop
xor
inc
mov
pop
fadds
and
shll
stos
fwait
scas
mov
dec
and
add
add
out
cmc
mov
f2xm1
gs
lods
add
add
add
add
movsb
cmp
or
pop
mov
aad
pop
lds
cmp
and
sbb
cmpb
test
fs
ss
insb
out
pushf
adc
mov
bound
hlt
lahf
lret
rorl
test
mov
mov
es
add
test
push
sbb
pop
faddl
cmp
jl
push
xor
ss
pop
mov
xchg
hlt
pop
pop
movsb
inc
js
add
sar
mov
lea
iret
mov
in
or
pop
out
icebp
repnz
iret
inc
popf
mov
icebp
out
icebp
dec
sub
xlat
mov
pop
adc
pop
xchg
cmpsb
adc
push
in
cmpsl
cmp
cld
lock
or
aam
outsl
arpl
mov
jecxz
mov
lahf
push
pushf
into
std
stc
xor
pop
mov
fisttpl
or
testl
iret
pop
test
mov
stc
adc
fucomip
std
dec
std
pop
lcall
xchg
pop
push
movl
add
add
add
xchg
nop
jmp
int
pop
and
rorb
push
out
or
mov
scas
mov
adc
cmc
mov
outsl
sbb
sub
add
ret
lods
mov
call
clc
lods
xor
push
fcompl
xchg
out
xor
and
jb
mov
mov
cmp
mov
int
hlt
jb
jnp
mov
call
aaa
in
push
cmp
pop
jecxz
aas
xlat
push
jo
ja
mov
scas
fisttpl
or
jecxz
inc
push
lret
les
bound
pop
mov
sbb
push
sahf
push
jle
jp
pop
and
and
sbb
fisubrl
lahf
push
inc
or
dec
out
xlat
leave
pushf
push
ja
aas
hlt
loop
jmp
out
mov
mov
push
jecxz
inc
pushf
fcomp
pop
jmp
jbe
test
rcrb
or
adc
fcmove
int
push
fidivs
loop
ljmp
js
inc
cmp
add
add
add
in
xchg
lds
loopne
mov
mov
addr16
fistpll
insl
pushf
adc
mov
xor
imul
mov
cmpsl
out
in
or
mov
icebp
insb
cmp
popa
mov
movsl
call
incl
pop
adc
push
das
and
cltd
jne
jbe
js
sbb
stc
ret
rolb
mov
dec
xchg
pop
scas
adc
dec
popf
dec
jns
les
mov
cmpsb
push
in
mov
sbb
inc
push
scas
mov
ret
pop
cltd
loop
orl
rol
dec
adc
xchg
cmp
xor
testl
xchg
stos
mov
jle
inc
jno
imul
push
xor
push
popa
cs
das
out
dec
repnz
cmp
loope
call
cld
lods
addr16
mov
pop
push
dec
cli
or
je
test
jb
cmp
push
xchg
jg
jmp
std
mov
sub
push
addr16
add
add
add
pop
cld
cmp
push
dec
lods
mov
stos
fisubrs
or
xor
stc
inc
sub
sub
hlt
in
je
xlat
test
sti
xchg
dec
fwait
das
dec
out
test
or
push
mov
adc
adc
pop
sbb
pop
jg
subl
xlat
xchg
sbb
push
xor
sub
push
xchg
or
dec
pop
or
add
dec
push
mov
dec
mov
sbb
std
cmp
hlt
jle
inc
mov
xchg
rcrl
sbb
add
insl
ret
mov
shrl
push
loopne
dec
mov
insb
push
cmp
shrb
sub
pop
mov
cmpl
outsb
movsl
push
sbb
push
repz
sub
dec
xchg
push
xor
push
cmp
insb
push
adc
cli
movsl
iret
pop
scas
add
insl
sub
mov
sbb
add
add
xor
inc
mov
push
add
add
add
loop
rcll
jne
cmp
pop
dec
mov
add
lea
aaa
and
cmpsl
fwait
jp
inc
ficoml
jecxz
daa
daa
mov
rclb
dec
rcr
ds
and
or
aaa
mov
lods
rcl
pop
mov
cmpsb
sbbl
dec
mov
repz
xchg
mov
cmp
es
fiaddl
shrl
sub
adc
push
mov
add
jl
filds
mov
mov
mov
mov
xor
lret
icebp
imul
std
or
mov
mov
add
shl
push
dec
out
push
xlat
out
mov
imul
mov
leave
cmp
icebp
mov
cmp
mov
push
mov
push
add
add
mov
or
dec
cmpsl
push
pop
pop
push
and
jb
int3
jmp
dec
xchg
push
pop
xor
cmp
inc
call
push
addr16
add
add
add
mov
push
mov
iret
pop
ficoms
mov
mov
push
or
cmp
add
insb
xchg
cmp
cmp
insl
or
push
mov
xchg
jecxz
and
ret
test
mov
sbb
out
sbb
mov
jbe
sbb
jnp
dec
scas
jp
mov
adc
jnp
loop
adc
je,pn
lea
stc
lods
adc
sub
add
or
cmp
cmp
ds
mov
clc
aad
sbb
into
fidivrl
or
adc
stos
stc
sub
jns
inc
add
mov
imul
lcall
pop
mov
add
ja
les
xorl
mov
repnz
fnstcw
jbe
aad
inc
cmp
or
shl
lods
xchg
pushf
xchg
push
mov
add
jp
les
mov
arpl
jecxz
addr16
add
add
add
fisubs
or
out
test
inc
nop
arpl
jbe
or
inc
movsb
outsl
mov
xor
push
jns
dec
or
adc
add
daa
sbb
pushf
push
xor
lods
stos
or
out
popf
loope
pop
loopne
enter
enter
cltd
or
dec
xlat
stos
xchg
inc
and
pusha
xor
loopne
push
daa
sub
or
xchg
test
sub
adc
xor
cmc
out
pop
in
jno
inc
lds
sbb
xor
mov
fldl
mov
cmp
pushf
add
pop
in
sahf
jl
frstor
inc
je
mov
sub
testl
test
mov
xor
xlat
ja
movhps
xchg
xor
cmpsb
call
insb
inc
rcr
mov
cltd
lret
xchg
dec
xor
fwait
mov
cmp
dec
mov
sub
and
add
add
clc
pop
stc
out
push
pop
bound
inc
addr16
add
add
add
jo
fwait
xor
aaa
sbb
jg
shrb
stc
and
pop
loop
mov
fcompl
mov
cmp
push
push
pop
test
sbb
cmpsl
push
lods
adc
inc
jno
inc
cmpsl
cmp
add
ret
scas
or
pushf
or
cmp
fs
out
stos
test
ror
std
and
into
pop
mov
push
ret
add
cmpsb
cltd
sub
popa
sbb
lock
mov
popa
mov
insb
mov
dec
xchg
loopne
je
mov
ja
stc
imul
es
pop
fiaddl
pop
mov
sbb
lret
insb
pushf
and
sbb
mov
jecxz
enter
sub
jp
test
xchg
adc
scas
out
add
sub
dec
mov
pop
mov
xchg
data16
pushf
sbb
xor
dec
lods
lock
das
cmp
out
pop
cmc
data16
mov
test
repnz
and
mov
add
add
push
mov
lcall
push
addr16
add
add
add
ss
out
pushl
or
mov
dec
mov
ljmp
push
imul
jnp
cmc
push
inc
sub
pop
inc
jg
movsl
cmp
loope
fisubl
and
pinsrw
push
dec
push
loope
call
lods
test
dec
fwait
dec
jnp
in
sbb
pop
cwtl
sub
mov
aas
or
mov
pusha
and
jmp
xchg
lahf
ret
or
call
aaa
mov
push
mov
addr16
adc
xchg
lret
fwait
enter
inc
inc
add
or
push
pop
lods
call
push
fsubrs
out
mov
push
out
xor
out
iret
out
mov
sbb
dec
pop
mov
sbb
cmp
mov
popf
ss
pop
mov
add
xchg
int3
lret
daa
decb
cs
cmpsl
lcall
add
add
jne
mov
int3
insb
lret
jae
addr16
add
add
add
add
push
fildl
mov
cld
rorb
or
ficoms
inc
sahf
loope
mov
test
pop
add
addr16
push
lods
je
and
sbb
jecxz
pop
ds
or
xor
outsb
push
pop
inc
adc
insl
jmp
or
xchg
push
cmp
push
pop
sub
xchg
inc
fstps
pop
xlat
data16
lods
mov
jo
mov
cmpsb
xchg
pop
in
push
es
lcall
adc
adc
sub
daa
xchg
mov
shll
mov
add
fwait
add
xchg
rol
dec
rorb
shlb
pop
jg
inc
jno
mov
imul
shll
pushf
clc
rorl
xchg
push
cmp
ffree
out
lock
mov
xorl
aaa
lea
push
and
add
add
pop
sbbl
fstp
rorl
stos
in
addr16
add
add
add
popl
lods
clc
lock
daa
popf
bound
std
lods
cld
pop
jecxz
cmp
xchg
aaa
adc
test
mov
fisubs
mov
cmp
int3
movsl
je
loope
sbb
lret
mov
jns
gs
pushf
hlt
ret
pop
jo
aad
sbb
sarl
pop
out
cli
dec
out
testb
xor
fistpl
jmp
push
pop
add
ja
sti
mov
or
nop
inc
int3
nop
sub
mov
or
sub
xor
fstpl
xchg
jp
in
sbb
lds
icebp
ret
mov
sub
jo
mov
jg
fists
lds
gs
enter
addr16
lret
dec
sbb
or
inc
imul
dec
push
movsl
cmpl
cmp
les
test
pushf
or
mov
sbb
and
dec
fstpt
and
add
loope
mov
jecxz
out
mov
imull
daa
addr16
add
ss
into
outsl
pop
jge
repnz
xlat
imul
adc
dec
cmpps
xchg
fiaddl
xchg
rep
fadds
js
xor
adc
pop
sti
jo
shrb
imul
scas
jg
movsb
xor
addr16
icebp
xor
cmpsl
adc
or
pop
rcrl
xchg
faddl
xor
pop
popf
daa
cltd
fbld
xor
jmp
ds
cmpsb
into
and
lahf
inc
jbe
dec
cmpsb
sbb
repnz
rcll
or
test
das
xchg
cmc
cmpl
sbb
fcmovb
jb
mov
xor
xorl
push
add
jbe
or
mov
xor
scas
mov
add
pop
shrl
hlt
push
pop
or
aas
jb
ds
fs
push
mov
xchg
jecxz
cmpsl
sub
add
add
std
test
jg
into
lret
orl
add
add
mul
sahf
imul
xchg
or
xorb
mov
add
ret
mov
push
lock
repz
aam
pop
push
cmpsb
push
fcoms
jns
inc
mov
je
leave
ljmp
in
inc
out
mov
sbb
sti
and
push
cmp
cmpl
jb
xor
mov
icebp
outsl
seta
ljmp
fbld
lods
lods
mov
sti
push
outsl
aaa
out
push
sub
lea
adc
cmpsb
xorb
mov
adc
mov
or
add
adc
or
rep
fsub
add
cli
es
lods
inc
popa
and
jg
sub
xor
popa
mov
ret
movl
repz
push
hlt
fcmovbe
push
or
cli
mov
fdivs
pop
ds
jnp
push
movsb
lock
in
lcall
jae
dec
mov
push
repnz
mov
add
jg
cmpsl
mov
leave
out
xchg
sbb
mov
mov
movl
aas
rcrl
clc
sbb
jnp
sub
sbb
push
or
bound
xchg
movsb
or
clc
inc
or
stos
jecxz
cmp
sbb
insl
lret
test
mov
pop
fmull
pop
ds
cs
pusha
bound
pop
xor
push
mov
data16
cmp
sbb
xchg
int
popf
enter
xor
lahf
stos
jae
orb
xor
mov
daa
dec
test
dec
stc
mov
pop
and
cwtl
jmp
push
adcb
xor
sbb
xor
xor
cwtl
inc
jge
aas
push
dec
sti
dec
adc
jae
pushf
adc
sarb
cltd
cmp
dec
fdivrs
imul
jmp
dec
mov
or
out
mov
js
mov
add
add
sub
jg,pt
dec
arpl
sub
add
add
add
xor
mov
jecxz
outsb
mov
xchg
or
out
sub
dec
jl
inc
dec
aaa
int
in
mov
rorl
les
mov
rorb
sbb
push
lret
cmp
movsb
dec
xchg
xor
xor
in
mov
cltd
addr16
jle
dec
shl
cmovno
jno
loopne
test
inc
pop
add
or
pushf
testb
ret
outsb
fisubl
movsl
sbb
enter
mov
sahf
fs
mov
mov
ss
or
repz
insb
insl
mov
xor
pop
mov
das
xor
aad
push
cmpsl
scas
pusha
sbb
mov
cmp
ret
or
imul
call
addr16
mov
js
jecxz
movsb
fcoml
test
dec
push
ficoml
mov
rcll
inc
loope
subl
add
add
out
idiv
outsl
mov
testl
add
mov
cmp
xchg
arpl
mov
xchg
inc
lds
inc
stos
mov
in
sub
cld
ret
pushf
int
clc
sub
push
jl
xchg
mov
hlt
xchg
and
enter
inc
addr16
cmp
add
aaa
insl
iret
mov
push
ret
bound
mov
xor
ljmp
mov
out
lret
imul
adc
stc
pushf
lahf
jbe
xchg
jno
push
es
ds
add
push
shrl
mov
imul
aaa
adc
mov
sub
popa
jnp
mov
jp
mov
xor
mov
fisubl
dec
add
inc
push
repz
imul
psraw
test
fsubl
outsb
shrl
frstor
jle
xchg
adc
xchg
lods
pop
push
popf
dec
insb
sub
stos
inc
xor
jno
xor
mov
pop
inc
xchg
push
addr16
add
nop
jmp
nop
int3
xor
leave
xor
cmp
pop
jne
jp
mov
pop
cld
movsl
lret
push
fnsave
loope
sti
mov
repnz
out
jmp
mov
xor
cmp
jp
mov
jnp
mov
sar
mov
inc
and
inc
incl
dec
outsb
cmp
mov
jno
dec
stc
cmp
push
pop
scas
les
push
cmpsb
push
outsl
jg
in
stos
adc
and
divl
fstl
xorb
cmp
ljmp
mov
jnp
add
pop
adc
pop
mov
xchg
add
mov
shll
stos
jnp
ja
jmp
nop
adc
xor
sbbl
movsl
into
jmp
dec
dec
loopw
nop
cwtl
hlt
jns
shlb
and
es
mov
pop
mov
lea
movsb
stos
lret
inc
push
push
fisttpll
xchg
push
push
call
inc
pop
cli
andl
add
add
add
in
jmp
movsb
cmp
jne
push
push
xchg
sbb
cmp
add
or
ljmp
lret
sbb
pop
aam
mov
gs
and
inc
fisubrs
cltd
cmp
aad
mov
jne
jp
xor
sbbl
cmp
cmpb
xchg
push
testl
aad
hlt
lret
adc
shrb
mov
adc
out
or
rcrb
dec
jno
into
xor
jge
mov
push
dec
mov
adc
xchg
incb
lods
mov
mov
mov
repz
lods
loop
jbe
add
cmpsl
dec
jmp
fistpll
push
adc
mov
push
ret
pop
dec
jge
enter
push
lods
hlt
sub
rorb
xchg
sbb
repnz
mov
into
std
sti
leave
sti
iret
jmp
jne
or
add
add
add
out
sti
scas
jp
nop
call
mov
sbbl
fwait
cwtl
and
mov
pop
sub
pop
xchg
cmp
jl
lea
shr
jg
testb
mov
xchg
and
dec
add
call
cli
fprem1
sub
inc
sti
xchg
mov
adc
repz
loop
test
push
aas
inc
mov
call
std
nop
stc
loope
push
imul
rcr
jb
pop
xor
xor
xchg
fxch
push
jecxz
jnp
jle
addr16
scas
mov
enter
cmp
fdivrs
jnp
aam
aad
rcr
fwait
mov
push
int
xor
mov
xchg
pop
mov
and
hlt
mov
push
icebp
pop
sahf
aam
roll
test
sti
fmuls
or
sub
out
adc
es
lahf
in
lds
inc
inc
mov
mov
mov
xor
rolb
add
add
testl
push
andb
lahf
ret
mov
out
xor
sub
sub
mov
nop
in
jmp
orl
popa
and
pop
and
movsb
pop
popa
ret
push
gs
inc
pop
dec
push
xchg
sarb
icebp
cmpsl
push
icebp
cwtl
xor
jl
out
orl
outsb
mov
out
rcrl
add
out
icebp
jg
pop
adc
pop
test
mov
adc
and
mov
insl
stos
aaa
repnz
push
test
pop
push
stc
iret
pop
inc
test
add
jo
lahf
cmpsl
loope
int3
fsubrl
inc
cmp
arpl
icebp
mov
je
lahf
pop
rcll
scas
popa
or
cmp
pop
sub
sbb
sbb
add
dec
cmp
arpl
jmp
mov
or
cbtw
lods
adc
out
incl
sbb
stos
fwait
mov
or
jg
mov
sahf
loop
mov
xor
add
add
add
sbb
stos
xchg
aad
mov
adc
cmc
push
pop
xchg
xchg
das
pop
and
jb
shrb
mov
adc
inc
jle
outsb
pop
into
jae
jmp
cld
xchg
xor
aaa
xchg
cltd
std
sub
push
mov
out
mov
sbb
dec
jmp
ficoms
lahf
shl
jge
xchg
mov
imul
cmc
jne
sahf
adc
jae
fs
movsb
pop
movsb
addr16
shl
jae
shll
addr16
jp
out
cmp
movsb
loope
out
pop
movsl
mov
jl
jge
stos
cmpsb
mov
out
sbb
int
cmpsl
icebp
push
lock
or
fbld
mov
lret
icebp
sbb
mov
cli
lret
jbe
mov
xor
addr16
jecxz
rcrb
xor
fs
insl
into
push
xor
mov
adc
int
xchg
xor
sub
arpl
test
add
xor
push
cld
pushl
cld
sbb
addr16
add
add
jle
inc
repnz
and
mulb
xor
xchg
and
adc
jmp
cmp
sub
rcrl
std
push
ficoml
pop
fstpt
sbb
sbb
stc
mov
stc
sbb
adc
rolb
mov
inc
arpl
xor
test
sbb
jmp
psubusb
pusha
sbb
push
add
add
sbb
cmp
and
lret
call
jnp
add
adc
es
lea
xchg
rorb
push
lret
cmc
or
fsubr
mov
out
movsl
add
scas
pop
push
movsl
sbb
or
int
and
mov
inc
int3
mov
addr16
xor
ja
inc
call
sarb
lock
lods
jp
sub
and
pop
jmp
add
xchg
js
pop
fucomp
ss
sbb
mov
xlat
pushf
shrb
lcall
outsb
das
mov
addr16
add
add
add
xchg
sarb
mov
push
xchg
bound
fstpt
mov
ret
pop
push
sbb
cmp
lret
incb
test
aaa
fcoms
int3
jmp
adc
stc
xchg
shll
dec
or
xor
xor
mov
adc
push
cli
aas
adc
popf
fidivrl
out
and
outsb
inc
push
sbb
push
pop
cltd
cmpsb
mov
sahf
test
lcall
and
xchg
or
ficomps
lahf
jle
mov
push
in
test
push
out
pop
add
or
mov
test
push
sbb
inc
and
cmpsl
int3
nop
push
addr16
cld
jae
xor
aad
insl
or
cmpsl
cli
popa
inc
inc
fs
pop
imul
outsl
fnstcw
sbb
stos
xchg
gs
das
mov
loope
imul
xlat
pop
or
push
cmp
add
sub
scas
mov
aas
scas
fstps
adc
les
add
add
add
mov
icebp
xchg
mov
icebp
in
std
sub
lea
in
test
mov
push
imulb
jb
xchg
imul
mov
push
sub
and
jle
xchg
xlat
xchg
push
pop
xchg
jno
mov
xor
push
or
ffreep
int
cs
imul
pop
xchg
mov
rcll
stos
es
dec
cmc
cmp
cmp
jbe
pop
pusha
xchg
mov
pusha
std
xchg
and
xor
jle
adc
and
int
leave
mov
dec
clc
insb
dec
js
test
mov
xor
out
pop
or
push
mov
sbb
movsb
cmpsl
push
andb
test
fcomps
sbb
jae
sub
lds
push
sbb
adc
imul
pushf
sbb
stos
push
push
aad
add
mov
pop
xor
xor
add
add
jne
jne
jg
loop
mov
mov
add
add
lea
mov
lcall
mov
xor
push
outsb
xor
and
sbb
test
jge
push
inc
or
pop
insb
mov
call
xchg
fisttpl
bnd
pop
shll
cmpsl
shr
mov
rol
test
fisubrl
pushl
push
cmpsb
or
enter
rcr
sbb
fcoms
cmp
into
dec
adc
insl
out
xchg
rcll
cmpl
or
xchg
push
mull
pushf
pusha
pop
cmpl
popf
leave
add
fsts
fwait
ljmp
mov
mov
adc
hlt
push
sub
push
ljmp
xchg
mov
rcrl
stc
lea
into
push
rcr
mov
adc
add
repnz
addr16
pusha
cli
insl
xchg
fwait
inc
mov
in
sub
das
dec
mov
fwait
arpl
jnp
cmpsb
sarl
sbb
mov
cmc
mov
add
add
add
add
arpl
je
push
and
loopne
andb
mov
sbb
inc
rol
xchg
fsts
mov
adc
xorb
cmp
pusha
fwait
or
pop
xchg
in
mov
call
mov
iret
iret
lds
test
adc
adcb
or
aad
movsl
ja
aas
jae
adc
inc
inc
pop
jp
loopne
sub
adc
xor
pop
xor
and
sbb
cmp
dec
mov
movsb
sub
push
stc
stc
sbb
xor
ror
pop
enter
test
cld
pop
dec
rcrl
pop
addr16
add
jo
rclb
xchg
cwtl
pop
aaa
pusha
fidivs
and
sub
in
insb
cmp
pop
sahf
lods
scas
scas
jmp
mov
in
and
sub
push
jle
and
jp
add
call
loop
mov
test
add
add
outsb
jle
lods
testl
movl
add
mov
stos
or
push
cmp
cmpsl
cmc
fwait
add
jle
xchg
sbb
fisttpll
clc
jb,pn
in
pop
insl
addl
sbb
mov
cs
push
inc
mov
mov
jnp
cli
das
jns
or
dec
jg
in
icebp
fs
sub
fwait
cmp
pop
cs
xor
outsb
pop
cmp
insb
adc
out
repnz
ss
xor
lea
daa
adc
movsb
test
xor
jl
mov
popa
xchg
push
les
mov
push
arpl
sbb
xchg
mov
lds
lahf
xchg
push
jmp
mov
pop
lods
stos
test
xchg
cmp
outsl
sbbb
mov
cld
lahf
outsb
into
stos
pop
mov
js
adc
inc
adc
std
fsubrs
lea
push
lret
push
enter
jns
sahf
xlat
and
mov
mov
add
pop
movsb
addr16
add
add
aaa
jae
adc
mov
out
mov
or
pop
das
cmpsl
sub
mov
mov
insl
in
int3
bound
xchg
lea
icebp
jae
scas
out
cld
xor
pop
cmpsb
flds
incl
fs
sbb
movsb
inc
mov
loope
popf
sbb
jecxz,pn
lret
mov
cmp
in
mov
std
cmovp
ds
cmpsb
xchg
je,pn
out
in
dec
jo
mov
cwtl
adc
bound
pop
mov
push
dec
cld
and
test
cmp
repnz
arpl
dec
movsb
jbe
xchg
repz
push
cmp
stos
es
xchg
push
stc
mov
sbb
insl
stc
je
xor
in
sar
push
xchg
sbb
cmpsl
ret
xor
loopne
dec
push
mov
pop
dec
lret
roll
fxtract
fmuls
fisubl
jb
pop
sub
ret
test
sbb
xlat
in
aad
int
movsb
lret
add
add
add
sub
dec
mov
ficoms
lret
test
push
rorl
lea
bound
or
into
cmp
sbb
jbe
data16
mov
sub
push
sbb
and
stc
push
push
push
es
xchg
cs
ja
push
sbb
movsl
pop
jb
sbb
adc
mov
xchg
dec
push
out
cmp
jp
pusha
mov
imul
mov
cmp
mov
sbb
adc
outsb
into
dec
das
cmc
mov
or
cmpsb
jg
aad
push
xor
fstps
dec
and
push
add
inc
cmp
and
and
push
dec
aaa
bswap
ljmp
cmpsb
sbb
dec
mov
scas
popa
in
mov
jl
dec
and
out
xchg
mov
and
push
test
push
pop
ja
ljmp
ds
sub
cmp
jg
and
mov
scas
js
test
add
add
add
fisubl
sbb
push
mov
or
xchg
push
mov
sahf
mov
outsl
mov
sub
adcl
mov
cmp
and
popl
std
test
mov
or
jo
popa
insl
mov
add
dec
mov
mov
jecxz
push
in
js
or
or
jno
mov
xor
call
jb
clc
xor
ret
lea
sti
cmpsb
xchg
les
mov
and
xchg
lods
sub
xchg
popa
inc
push
add
test
cmpsl
out
iret
cmp
fisubrs
hlt
and
pop
outsl
leave
hlt
xchg
sbb
in
fs
in
mov
xor
bound
pop
sub
push
sbb
cltd
xchg
push
adc
test
mov
xor
mov
cltd
fnstsw
out
pop
enter
dec
jno
fs
addr16
jmp
ds
repz
fcoms
add
add
add
add
adc
pop
popa
bound
jle
jb
mov
cmp
xor
inc
pop
cmp
sti
add
sub
enter
cmp
or
cltd
repnz
imul
push
fstl
pop
loopne
cmp
inc
arpl
mov
dec
jne
inc
add
jns
data16
xchg
iret
cmpsb
ret
mov
bound
std
aad
or
pusha
and
sbb
xchg
dec
dec
out
and
push
adc
cwtl
sbb
jb
sti
roll
sbb
pop
lahf
or
bound
add
sub
sbb
sbb
jo
rcrl
lds
jno
jmp
pop
add
mov
jbe
mov
xor
imul
and
ror
sbb
inc
in
or
data16
pop
and
sub
std
mov
mov
mov
inc
jl
xchg
addr16
add
add
add
pushf
jnp
arpl
fdivs
adc
push
addr16
insb
fidivs
div
aas
ficompl
jno
inc
das
jmp
popf
test
repz
pop
lock
fstps
mov
movsb
imul
or
sbb
stos
xchg
fldt
aad
jmp
mov
shrb
pop
fnstcw
mov
add
push
push
nop
dec
mov
adc
data16
fidivs
add
xchg
mov
adcb
sbb
xchg
mov
mov
cmp
out
loope
sbb
push
mov
dec
cmp
adc
cmc
sbb
jmp
out
push
xor
scas
rcll
cli
sbb
nop
mov
shl
mov
add
stos
stos
mov
inc
mov
dec
cwtl
xchg
mov
mov
pop
mov
call
add
stc
enter
in
sbb
push
inc
jns
sub
add
add
insl
gs
aas
mov
cltd
and
pop
pop
lret
adc
adcl
dec
pop
aas
fucomi
mov
xchg
adc
dec
es
dec
fcoms
jge
lock
mov
rolb
jg
push
dec
mov
add
mov
mov
jge
addr16
push
mov
xchg
inc
aam
je
and
jecxz
push
pop
in
aad
jnp
add
ds
jmp
sub
fwait
dec
mov
shlb
movsb
mov
push
hlt
loop
shlb
push
or
cmpb
scas
mov
fcmovnu
inc
repnz
repnz
dec
xchg
ja
or
pop
push
mov
test
testb
or
movsb
ljmp
incb
lcall
jno
dec
cs
pop
outsl
mov
xorb
dec
and
mov
aam
roll
xchg
sub
ficomps
stc
enter
repz
mov
add
add
imul
cmc
call
inc
push
popa
sbb
into
add
add
add
divps
leave
pushf
scas
iret
dec
xchg
sarl
inc
rcrb
ret
mov
mov
sbbb
adc
das
inc
shr
out
out
jecxz
jge
lret
xor
add
cmp
arpl
fisubrs
test
test
pop
and
lock
mov
aad
cltd
dec
jp
loop
push
repz
test
dec
mov
jns
ss
sbb
xchg
cwtl
xchg
out
sbb
call
pop
pushf
mov
xchg
fwait
inc
dec
mov
adc
or
sbb
xchg
xor
push
mov
repnz
nop
rcrl
pop
out
in
jno
pop
fs
xchg
mov
xchg
push
mov
negl
xchg
sbb
mov
negb
aad
lcall
xchg
and
push
rolb
sub
in
fsubs
xorl
lods
jp
or
ret
xchg
ret
pop
imul
add
ja
iret
sub
cmp
pop
addr16
add
add
add
cld
in
ret
sub
push
nop
int
es
mov
test
dec
bound
push
mov
pop
loope
pop
fucomp
lcall
shrl
xlat
in
mov
pop
jnp
dec
mov
and
pop
jle
xor
mov
cmp
cmc
bound
mov
in
loope
add
xchg
cmpl
data16
cmp
jecxz
or
push
fdivrl
in
and
incl
fcomi
xchg
and
cli
xchg
sbb
xor
cmpsb
hlt
addr16
jl
xor
and
mov
add
mov
in
icebp
ret
push
icebp
inc
mov
jge
push
lods
cmp
loop
jle
inc
mov
popf
test
stc
adc
push
or
and
add
adc
jp
add
xchg
jp
dec
pop
mov
inc
fisttpll
fnsave
mov
out
out
out
into
gs
cld
test
dec
scas
rolb
add
add
add
les
ficoml
xor
xchg
mov
ss
cmpsb
aad
or
shrb
ret
xor
inc
bound
and
push
in
pop
es
mov
cmp
iret
jecxz
inc
es
icebp
push
mov
div
pushf
jb
imulb
jns
or
jmp
addr16
inc
xor
pop
push
xchg
xchg
aam
jle
push
push
popf
sbb
cltd
iret
jecxz
adc
cmpsl
adc
repz
ror
xor
movsl
fwait
jmp
daa
pop
movsl
mov
in
jb
lea
loop
inc
into
sub
bound
mov
fmull
mov
incl
push
adc
je
mov
pop
cmp
fldl
push
aas
js
loop
jg
mov
test
ss
mov
ret
pop
mov
movsb
jae
les
ljmp
mov
push
out
andb
loopne
and
je
out
mov
mov
out
aam
roll
add
add
add
fstpl
cmc
outsb
jne
mov
sbb
cmpl
loopne
adc
sub
je
or
arpl
rorb
out
xor
mov
fwait
or
lahf
fwait
stos
xor
push
mov
mov
outsb
cmp
adc
insl
das
sub
mov
arpl
out
lods
sahf
sbb
xor
rclb
mov
sbb
daa
insb
jecxz
cmpl
into
shl
mov
in
aam
add
jmp
insl
sub
xor
or
mov
rcll
adc
mov
sub
ret
jo
shlb
mov
movsl
pop
fcmovnu
sbb
lods
cmp
cld
adc
mov
aam
xchg
xor
clc
mov
mov
xchg
sub
popa
lahf
jmp
xchg
orl
add
mov
add
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
mov
rolb
add
add
add
adc
push
add
mov
jp
sahf
outsl
mov
and
sub
in
xor
cmpsl
inc
andl
mov
repz
out
pop
sub
sbb
xor
dec
jno
outsb
sub
mov
loope
shrl
std
notl
les
icebp
neg
push
stos
not
jno
add
int
mov
out
sbb
stos
inc
or
arpl
test
and
mov
bound
adc
ja
js
mov
add
stc
mov
mov
lcall
insl
mov
add
icebp
mov
add
push
fldt
xchg
mov
les
arpl
jno
and
fstl
mov
scas
test
arpl
pop
ud2
inc
popa
insl
cmc
add
movb
jbe
push
rolb
pop
xchg
test
pop
test
call
call
out
lahf
ret
or
gs
roll
add
add
add
cs
mov
lea
mov
sub
std
out
int
lock
dec
and
push
cmova
or
dec
addr16
mov
jmp
or
mov
je
jbe
sbb
dec
xchg
cmp
adc
mov
mov
sub
jbe
xor
add
and
pop
adc
xor
pop
xor
mov
cmpsl
dec
subb
jg
loop
adc
jecxz
fcompl
pop
or
jecxz
cmpsl
xor
cmp
adc
std
icebp
ret
cmp
dec
pop
adc
fsubs
jo
lock
inc
mov
sub
test
imul
xchg
pushf
out
clc
pop
pop
add
push
xor
sbb
shlb
jecxz
xchg
movsl
mov
loopne
rcr
je
cmp
mov
pop
jg
mov
mov
push
in
push
mov
mov
mov
mov
pop
xchg
or
inc
addr16
add
add
add
rcr
mov
std
arpl
xor
xchg
mov
mov
negb
jne
sub
ret
adc
xchg
lods
cmc
cli
mov
xorl
mov
dec
fisttpl
adc
and
fisttpl
or
imul
mov
jns
lret
aam
mov
leave
add
imul
mov
arpl
pop
fisttpll
mov
nop
mov
mov
xchg
push
mov
pop
cmp
mov
lock
jle
mov
adc
testb
stos
ds
jp
lahf
jae
int3
into
sbbb
push
sbb
dec
lods
ret
lret
out
mov
jae
xor
or
pop
mov
les
fcompl
jns
mov
adc
stos
push
push
add
push
cmp
shl
push
cwtl
xchg
bound
mov
cmp
lcall
mull
add
add
add
sbb
sub
dec
jb
orb
add
add
dec
movl
adc
outsl
push
cmpsb
in
sub
push
push
cmp
cmp
mov
or
and
in
dec
mov
pop
jbe
fwait
es
lock
xor
jnp
inc
movsb
outsb
pop
sbb
clc
sub
loope
cmpsl
jge
stos
sarb
inc
jecxz
mov
cmpsb
dec
int3
cmp
mov
push
mov
test
hlt
pop
movsb
jmp
test
mov
fadd
icebp
pop
aaa
mov
out
mov
or
mov
jbe
or
stc
xchg
sahf
lcall
rolb
rcr
in
lods
outsl
add
xor
out
cli
fdiv
shl
sub
cmpps
pop
loope
mov
xchg
push
and
lea
add
rcrl
rol
xchg
xchg
insl
sti
push
mov
dec
inc
rclb
daa
std
sub
pop
lock
movsb
incl
mov
pushf
adc
ds
jae
and
int
add
add
add
je
cwtl
mov
jae
sti
scas
fcompl
add
and
dec
push
andb
imul
movsb
int
or
stos
repnz
sti
mov
out
jno
add
sti
movl
dec
adc
pop
cmc
hlt
notb
mov
int3
adc
cmp
push
ret
push
scas
lds
xlat
mov
push
mov
and
sub
out
mov
mov
or
lret
popa
push
stos
les
rol
das
push
adc
subl
mov
inc
sub
mov
xchg
xchg
jge
dec
cmc
test
test
lcall
push
sbb
mov
jmp
xor
call
mov
sub
cmpsl
mov
adc
sarb
lret
pop
lods
mov
jge
inc
inc
call
cmp
loop
sbb
sub
add
add
lcall
jnp
fnstsw
add
add
mov
ret
test
adc
test
ljmp
repz
lret
mov
ljmp
jbe
aas
sbb
xchg
icebp
xchg
add
cmc
sbb
mov
je
in
pop
jae
jge
cwtl
ret
ret
aaa
pop
cmp
sbb
or
mov
cmp
xchg
das
xchg
pop
scas
outsl
ret
fwait
je
out
iret
sbb
cmovae
es
xor
or
xchg
es
and
add
repz
repz
xchg
arpl
rclb
hlt
fstpl
sub
cmc
jb
mov
xchg
mov
sub
test
sub
lret
pop
fs
aam
scas
pop
out
and
cmp
cwtl
aaa
dec
loope
sarl
incl
add
jb
leave
cmpsb
outsl
cld
push
sub
add
add
xchg
ja
push
jg
leave
or
sub
push
mov
fadds
add
add
add
test
mov
cmp
mov
mov
mov
mov
xchg
pop
fcmovu
orb
dec
sbb
fwait
hlt
jb
scas
pop
iret
pop
jp
scas
and
stc
xor
pop
enter
fsubrs
push
mov
push
sub
sbb
pop
jb
push
xchg
movsb
and
mov
jle
cli
lcall
pop
pop
inc
dec
inc
xchg
icebp
mov
std
testl
iret
dec
and
push
lret
aam
sbb
or
pop
shl
cmc
dec
cwtl
cmc
dec
out
xchg
sbb
dec
adc
push
mov
sbb
ret
jno
xor
inc
cmp
andl
sub
mov
imul
push
pop
jbe
or
cmpsl
iret
mov
bound
adc
add
setp
pusha
xor
jb
inc
jb
fnstsw
insb
cltd
scas
adc
imul
xchg
movsb
mov
outsb
cmp
add
add
add
push
dec
push
cld
xor
mov
mov
aad
ficomps
push
xlat
fwait
mov
pop
lret
push
sbb
sbbb
sbb
xchg
fldt
jns
cmpsb
mov
xchg
pop
xchg
jne
ja
cpuid
cld
push
loope
flds
adc
scas
nop
in
mov
cmp
lea
repnz
ss
dec
and
into
daa
adc
sub
into
and
mov
popa
adcb
sbb
sub
dec
cmp
xor
inc
pop
popf
lea
mov
mov
cmp
scas
add
xchg
xchg
jns
stc
ret
xor
ret
xchg
xor
inc
mov
sub
scas
scas
test
aam
or
mov
cmpsl
int
shlb
sbb
ja
cmpsb
clc
insl
lcall
sahf
rol
sbb
aaa
scas
add
add
add
psubusw
push
in
sub
jp
fiaddl
add
add
add
cmpsb
mov
test
mov
dec
dec
push
sub
arpl
xlat
push
inc
xor
mov
adc
mov
inc
les
push
bound
pop
push
cld
in
cwtl
mov
dec
cmp
mov
and
stos
push
addl
cmp
int3
movsb
mov
dec
jmp
adc
clc
aaa
jo
xchg
daa
out
mov
and
test
je
xchg
scas
ja
cmp
leave
adc
jecxz
fldcw
in
inc
fadd
mov
pusha
jecxz
jle
movsl
pop
sub
addr16
dec
dec
rorb
rolb
popa
or
mov
cs
movsl
fsubs
sub
arpl
fistl
xor
test
mov
gs
cmp
mov
imul
mov
into
xchg
dec
push
ficompl
ret
and
adc
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
ds
fildl
add
add
add
mov
fcompl
mov
or
outsl
lods
mov
in
mov
loopne
adc
dec
sar
adcb
repz
jmp
push
mov
xchg
ljmp
sbb
aad
popf
stc
arpl
push
cli
and
mov
xchg
push
sbb
inc
test
mov
and
sub
sub
scas
mov
inc
daa
add
lods
push
fwait
lcall
leave
push
pop
pop
stc
xchg
scas
xchg
aam
xor
pop
cli
mov
or
add
pop
push
xchg
dec
loope
add
mov
sarb
aam
adc
cmpsb
psrlq
stos
xchg
or
and
mov
cs
and
mov
lret
je
sbb
test
inc
test
aad
mov
loopne
mov
pop
or
outsl
test
arpl
add
adc
popf
decb
pop
dec
jle
jg
std
fstpt
mov
add
add
add
or
and
xchg
mov
adc
cli
push
mov
popa
ficomps
pushf
clc
cmp
cli
in
jg
roll
inc
clc
clc
push
jl
imul
adc
nop
les
js
cmp
add
stos
add
in
cmp
orb
push
mov
imul
cmpsl
repz
test
cmp
mov
into
test
mov
fdivrs
ffreep
popa
jae
cmpl
jmp
bound
push
std
ljmp
repnz
pop
cmp
fs
mov
mov
cmc
xor
push
scas
out
mov
subb
notl
jno
jns
pop
add
cwtl
mov
aaa
mov
rol
xchg
shrb
dec
mov
jb
jp
out
lret
mov
sti
or
jo
add
add
mov
sti
idiv
lods
pop
sbb
adc
fldl
add
add
add
adc
xor
shlb
mov
sahf
jp
xor
int
inc
mov
ds
pop
sarl
subl
idivb
xchg
push
adc
dec
push
mov
int3
mov
adc
enter
aas
inc
hlt
fstps
cmp
pop
xor
jecxz
ret
icebp
cmpsl
fldt
jmp
push
mov
push
out
or
mov
push
loope
or
push
jnp
sbb
lret
sbbl
cmp
ds
movsb
jne
push
dec
lret
cs
push
fcmovne
push
jl
mov
das
int3
cmp
xor
xor
mov
loopne
insl
xchg
ja
ja
mov
jg
xor
sbb
mov
pop
mov
inc
dec
push
ret
rol
lods
mov
std
adc
rorl
dec
sub
sub
mov
icebp
leave
pop
and
clc
adc
leave
jmp
scas
inc
call
fiadds
add
add
add
inc
or
test
mov
in
test
vshufps
das
cmpl
mov
fistpll
or
in
push
repnz
xchg
out
lea
dec
lea
ja
pop
pop
dec
mov
ja
mov
insb
addr16
sarb
loope
jo
fidivrs
xor
dec
out
cmp
adc
cmp
aaa
jae
xlat
cs
repz
mov
push
add
sub
mov
add
jnp
mov
xor
es
lods
inc
das
dec
lret
test
testb
cmc
mov
mov
ds
jg
jmp
jae
lds
addr16
movsl
mov
insl
mov
out
jge
cmc
test
mov
add
ljmp
scas
xchg
xchg
jp
scas
mov
pop
sbb
cmp
push
ret
push
jns
lcall
pop
cli
lahf
cltd
ret
dec
data16
scas
loope
add
add
push
out
faddl
fisubs
add
add
adc
push
imul
dec
insb
adc
pop
mov
pop
cs
lods
or
sbb
int
shrl
mov
mov
icebp
mov
mov
mov
inc
imul
cmp
std
lea
jo
mov
mov
sbb
stc
lea
jo,pn
add
insl
push
inc
dec
jg
sub
out
jo
or
sbb
repnz
out
jae
into
and
cmp
inc
dec
push
cmpsl
stos
xchg
sub
call
movsb
push
aaa
lcall
popf
test
sbb
lods
pop
mov
jg,pt
add
or
test
mov
lret
inc
push
cltd
pop
jns
loope
fwait
out
movlps
insl
inc
mov
inc
stc
cmc
lods
mov
pushf
xchg
xor
test
rorb
aad
jns
add
add
mov
lcall
fisttps
or
loopnew
add
add
add
mov
fwait
mov
mov
cltd
in
lods
test
ss
into
mov
int3
int
gs
mov
xchg
mov
xchg
xchg
notl
movsl
pop
movsl
in
mov
add
adc
or
out
test
scas
pop
dec
das
addr16
xor
xchg
and
addr16
mov
mov
mov
daa
push
not
mov
inc
cs
push
pop
jp
sti
into
sub
dec
jae
dec
cmp
repz
xchg
pop
pop
out
inc
and
jl
fwait
mov
cli
mov
or
inc
jp
push
xor
in
sub
and
mov
out
push
cmpsb
cmc
push
test
loopne
pop
push
out
pop
lods
int3
rorb
jns
fnstcw
xchg
popa
sub
push
adc
dec
mov
and
push
lea
imul
ljmp
add
add
mov
jns
xchg
xchg
mov
scas
popa
xchg
loopew
add
add
add
int3
mov
mov
shrb
ja
out
add
fbstp
jl
mov
jns
std
mov
dec
outsb
adc
call
xlat
data16
scas
testl
dec
mov
fxch
fwait
mov
pop
ja
and
and
iret
dec
or
imul
stos
mov
xchg
cld
test
mov
imul
xor
and
and
and
jnp
arpl
jle
xchg
and
xchg
addr16
gs
mov
sub
cmpsb
lea
ljmp
jo
sbbb
mov
rcrb
out
mov
jne
mov
outsl
in
leave
mov
jno
mov
sub
rcrb
outsb
out
jo
aad
lcall
rorl
jl
scas
pop
lahf
pop
push
cmc
and
jmp
xchg
sub
jae
fadd
fsubp
jnp
or
cld
les
loop
add
add
add
stc
dec
or
mov
xchg
out
pop
fcmovnb
mov
je
push
sbb
push
mov
aas
ljmp
stos
or
int
in
sub
jl
sbb
push
mov
aas
adc
rorb
cmp
xchg
push
jp
out
sti
repnz
add
stos
pop
adc
call
mov
mov
add
sbb
cmc
mov
out
gs
inc
test
fnstcw
push
xor
cli
in
mov
pop
push
adc
dec
mov
mov
inc
mov
iret
mov
push
add
pop
adc
stc
hlt
mov
jnp
add
stos
pop
inc
pop
gs
push
aad
outsb
subl
icebp
rcrb
dec
imul
jnp,pt
lds
cwtl
aam
mov
cmp
jmp
pusha
sti
in
sbbl
add
inc
push
test
lcall
add
push
cmp
sub
cld
cli
jle
dec
nop
xor
jecxz
add
add
add
in
mov
and
mov
adc
stc
js
popf
ja
hlt
fisubs
mov
xchg
push
push
pop
add
push
mov
sub
jno
mov
fs
adc
scas
xchg
sbb
mov
movsl
lods
push
lock
ja
xchg
gs
into
out
adc
mov
in
xor
orl
scas
cs
adc
nop
lods
sbb
int3
xor
inc
xchg
fs
mov
dec
jg
test
and
pushf
rcrb
nop
inc
xor
and
arpl
dec
rorl
sub
jno
mov
outsl
fnstcw
pushl
sbb
int3
fldt
fdivs
mov
clc
hlt
leave
mov
lcall
mov
mov
mov
in
xchg
push
push
mov
out
mov
push
icebp
and
jge
cmc
sbb
lea
pop
jbe
ja
sti
aaa
out
ja
and
add
add
add
cmpsl
dec
lahf
pop
add
stos
inc
mov
or
xorb
dec
xor
sbb
outsl
popf
dec
xchg
lock
add
push
push
insb
sub
aam
fldenv
adc
or
sub
push
jmp
icebp
mov
leave
stos
push
push
mov
ss
fdivp
mov
lods
je
rcr
cmpsl
fistpll
xor
push
cwtl
int
adc
xor
in
pop
xor
cmpsb
jns
das
mov
sub
dec
out
mov
aad
inc
rcrb
daa
pop
xchg
jno
cs
je
iret
jbe
movl
inc
lods
add
dec
add
dec
lcall
and
or
push
movsl
into
or
lcall
xchg
in
push
outsb
dec
cmp
scas
stos
jp
add
xchg
pop
pusha
js
jbe
lret
inc
test
cltd
loope
inc
sbb
add
into
arpl
pop
xchg
aaa
pushf
cmp
add
add
add
mov
push
imul
shl
mov
dec
out
cmp
adc
cmp
js
jbe
mov
lock
aas
mov
rolb
imul
dec
mov
sbb
imul
je
lahf
int
pop
pop
pop
push
loopne
jp
push
sub
movsl
mov
shll
xchg
sbb
lds
lahf
cmpsb
test
es
cmp
inc
jns
pop
aaa
bound
adc
mov
jnp
and
inc
inc
jl
sbb
pop
push
dec
cmp
pushl
add
mov
mov
and
shlb
arpl
insl
movb
pop
sub
popa
inc
lods
sub
add
push
adc
mov
xchg
sbb
dec
popf
lock
adc
xchg
aas
xchg
roll
repz
adc
aad
fcmovb
pop
push
pop
jns
jae
or
ret
imul
add
add
ja
lcall
mov
push
out
add
add
add
orl
dec
adc
mov
push
adc
in
dec
int3
mov
sbbb
ficoml
jnp
cmp
mov
mov
and
jb
push
xchg
in
aas
jbe
adc
test
sub
pop
cwtl
pop
imul
ss
sbb
add
dec
xor
lods
scas
fucom
cmpsb
test
adc
cmpsb
je
scas
jmp
cld
mov
dec
gs
scas
fwait
addr16
inc
mov
pop
xchg
dec
sbb
scas
ds
stos
int
cmpsl
jp
sahf
fsubr
mov
mov
andl
popf
inc
rclb
mov
loope
xor
jbe
leave
push
sti
out
mov
and
int
mov
push
sahf
mov
ret
insb
inc
add
jne
push
jnp
jae
xchg
and
pop
imul
movsb
jg
data16
repz
lock
jg
in
and
shufps
add
add
mov
fstpt
bound
mov
push
pop
mov
adc
or
stc
shlb
inc
push
or
es
sarl
lods
testb
ret
adc
aam
sub
inc
notl
xlat
int
xlat
xchg
imul
popa
movsl
push
push
mov
hlt
in
daa
mov
inc
les
int
push
sbb
push
push
xor
testl
add
sahf
lcall
movsl
fstps
cmpl
and
push
add
rorb
loop
dec
cmp
mov
cltd
out
dec
adc
and
mov
fstps
push
inc
sbb
cmp
jg
jno
stc
push
cli
jg
push
lret
in
lods
sub
aaa
inc
inc
add
scas
or
mov
xchg
mov
ret
mov
mov
jnp
in
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
loop
enter
add
add
add
push
mov
cli
rcll
ret
fwait
cmp
xor
mov
jo
nop
fdivl
pop
movb
xlat
mov
jmp
lods
dec
lahf
mov
cmpsb
add
mov
jnp
scas
mov
mov
jl
cmp
xlat
mov
ret
cs
mov
stos
mov
or
mov
and
inc
in
test
cwtl
xor
and
mov
xor
lds
xor
test
mov
and
push
lret
addr16
push
dec
pop
outsl
nop
jecxz
popa
in
popa
ret
subps
add
mov
xor
ss
lret
mov
pop
and
cs
sti
cmp
sub
inc
sub
lds
in
divb
mov
jae
int
stc
mov
dec
js
stc
mov
dec
int
xchg
ljmp
add
add
sbbb
movsb
push
mov
out
cmpsl
push
sub
int3
icebp
roll
popf
cmp
push
fstl
ds
sar
out
or
stos
aaa
fdivl
movb
aaa
adc
push
lock
xchg
pop
cmc
mov
jl
sub
cmpsl
int
test
mov
adc
nop
inc
add
out
jecxz
jmp
jle
ja
and
mov
lock
jmp
add
je
jo
xlat
testb
sahf
mov
data16
mov
call
xor
ss
test
aam
dec
mov
or
add
dec
mov
fbld
ss
inc
fnstenv
push
iret
scas
insl
inc
xor
push
sub
sub
jmp
sub
xor
inc
bound
ror
mov
jle
lahf
inc
xchg
push
ja
push
mov
sti
pop
cmp
out
add
add
insl
repz
fwait
jns
jns
dec
add
addr16
xchg
arpl
mov
fistl
scas
pop
rorb
pop
scas
imul
nop
out
mov
test
and
mov
arpl
push
mov
xchg
test
int3
jne
lods
adc
xor
sub
mov
outsb
test
jle
repnz
mov
cmp
cmp
mov
pusha
ret
loop
fidivl
push
xor
sub
addr16
add
mov
js
push
ds
rcl
sbb
cmpsb
add
xorl
loope
xchg
clc
pop
push
push
cmp
das
xlat
scas
xchg
sti
movsl
dec
mov
punpckldq
leave
pop
jae
jno
xchg
jno
andb
jo
outsb
sbb
ds
test
in
inc
push
test
test
or
in
mov
out
mov
jns
subb
mov
fsubl
adc
add
cmp
jnp
adc
jne
movsb
fs
and
add
add
das
xor
add
or
in
sub
ss
push
js
inc
mov
cmpl
fidivrl
testb
fwait
mov
or
nop
mov
sbb
mov
ja
adc
mov
inc
loope
fwait
out
sbb
fwait
dec
push
mov
cmpsb
js
repz
lods
mov
lock
std
lods
xor
jecxz
cld
adc
shrl
jmp
or
mov
imulb
cmp
call
or
fwait
pop
cmp
sbb
mov
mov
icebp
xchg
xchg
pop
jns
fdivl
mov
mov
push
and
dec
popf
lock
inc
sbb
bnd
and
add
clc
dec
jae
jg
jmp
nop
rcrl
jno
mov
push
jb
and
fcmovbe
and
inc
jg
insl
dec
dec
pop
jnp
inc
push
cs
clc
inc
mov
dec
xchg
out
lods
xor
aas
xlat
fistl
das
sti
push
stos
lret
add
add
add
test
loope
and
sahf
xchg
fsubrl
inc
mov
int3
mov
sbb
add
loope
adc
je
jg
imul
cmp
clc
jbe
mov
dec
fsubrs
daa
lahf
mov
ja
cmp
sub
pop
mov
in
adc
ljmp
add
imul
ds
mov
ja
and
and
jno
push
jae
fldl2t
in
push
inc
int
aad
ret
stos
xchg
out
sbb
pop
popl
cmp
cmpsb
fimuls
cmc
xchg
add
out
xorb
adcl
push
push
aas
rcr
jno
lds
sahf
cli
mov
pop
outsl
mov
repnz
aad
pushl
jno
imul
mov
mov
test
dec
or
add
add
jb
scas
decb
fisttps
clc
cs
add
add
add
in
cli
stos
ss
mov
push
fidivl
mov
lcall
xchg
jne
mov
loopne
aaa
fs
cmp
dec
iret
mov
mov
xor
subb
xchg
das
mov
in
jae
rclb
dec
lcall
cmp
notl
pop
cld
sub
xlat
insl
or
mov
int3
push
sbbl
scas
roll
push
lret
iret
lds
pop
pusha
or
cmp
out
rclb
xorb
jp
sub
push
adc
lret
add
in
sbb
stos
popa
out
in
in
push
ret
stc
sub
add
inc
scas
push
ret
xchg
pop
cmp
pusha
popa
insb
dec
push
push
ret
shlb
in
cmp
inc
or
cmp
call
decl
sbb
mov
mov
sub
jp
and
jecxz
shrl
xchg
pop
mov
xlat
mov
xchg
mov
out
add
add
add
cltd
ror
push
add
imull
push
insl
mov
inc
andb
adc
and
inc
add
xor
outsl
jne
aaa
sbbb
cmp
mulb
push
out
scas
mov
cmp
icebp
inc
xchg
aas
mov
jno
rolb
lock
mov
xchg
inc
pop
jae
dec
cmp
cmpsl
jmp
cmp
neg
ljmp
mov
push
mov
insb
jl
in
mov
daa
pop
andl
lcall
jl
packuswb
mov
sti
jge
testb
test
in
mov
and
mov
lock
or
jb
and
mov
imull
popf
xchg
outsb
adc
in
or
sbb
rol
test
dec
xchg
mov
xor
and
cli
and
pop
ss
das
js
inc
mov
pop
lods
cmp
lods
aas
mov
jge
mov
add
add
stos
dec
mov
daa
jno
enter
jno
shl
fs
jne
cmp
jnp
inc
sub
inc
xlat
xchg
nop
jl
dec
jmp
mov
xor
inc
adc
aad
mov
cmp
ret
xor
mov
fwait
loop
jmp
push
movsb
and
rcrl
xchg
enter
xchg
and
into
enter
xchg
sbb
inc
mov
popf
pop
icebp
sbb
popa
push
mov
push
adc
push
scas
mov
mov
pop
test
lret
jg
push
leave
jno
addr16
adc
jae
pop
inc
in
scas
sbb
rcr
movb
mov
stos
ret
lods
mov
mov
stos
xchg
call
jo
mov
pop
shr
test
jns
loop
xlat
sub
scas
inc
js
insb
fldl
loope
push
aam
inc
push
loop
fadd
sti
mov
sub
int
lock
add
add
jle
pop
xchg
jae
jae
enter
stc
add
and
pusha
das
and
mov
sbb
push
sbb
lcall
mov
fistl
fiaddl
xchg
addb
add
pop
lea
push
and
mov
jbe
cmp
xchg
in
lcall
jmp
adc
popf
fcom
test
push
popf
jge
ret
jbe
xor
sub
ss
push
mov
adc
and
in
pusha
or
es
dec
loopne
mov
mov
push
mov
sarb
xchg
mov
subb
or
stc
inc
mov
cmp
dec
es
mov
and
push
movsl
fwait
add
sarl
inc
insl
sbb
jo
mov
ret
in
arpl
adc
and
dec
or
pop
mov
jmp
inc
push
cmp
adc
neg
jge
xchg
jns
sub
push
addr16
add
add
add
pop
mov
stos
xor
jmp
in
xlat
scas
add
add
push
int3
add
sbb
clc
stos
sub
neg
jo
or
jg
pop
call
sub
sbb
into
push
mov
enter
outsb
jecxz
push
inc
mov
int3
push
notb
push
out
mov
jne
mov
insb
jbe
out
inc
insl
cmp
mov
push
rcrl
add
lea
push
test
cmp
dec
mov
pop
cmp
mov
into
out
jge
sbbb
jecxz
xor
adcl
pop
loopne
aaa
mov
jg
mov
stos
add
into
sub
cmp
sub
xchg
or
adc
mov
data16
loop
xor
outsl
mov
sahf
mov
jp
je
aam
sbb
das
pop
xchg
outsl
test
cmp
sub
mov
ja
mov
add
dec
sub
sub
fiaddl
inc
xchg
add
add
add
test
sti
xchg
icebp
cmp
call
and
sbb
out
adc
mov
lock
addb
test
mov
ror
fs
pusha
xor
inc
mov
sbb
adc
xor
push
xor
mov
cs
xor
dec
test
sub
jecxz
jns
xor
inc
in
sub
pop
cwtl
mov
iret
test
push
xor
out
jne
lds
push
push
push
in
mov
loope
aam
cmpsl
mov
dec
add
idivb
aad
cmpb
std
jb
testb
cld
test
loopne
test
pusha
divb
sbb
xchg
test
lahf
rorb
int3
mov
out
mov
ds
les
dec
mov
repnz
inc
aas
hlt
push
jmp
cmp
add
ja
and
aaa
divl
ret
repz
add
add
push
xor
xchg
mov
sbb
pop
divl
cmp
sub
cld
mov
pop
jle
mov
cmp
and
and
sbb
decl
test
jae
xor
mov
inc
les
ljmp
adc
outsl
mov
popf
aas
leave
dec
adcb
mov
mov
enter
scas
mov
shll
jmp
fists
mov
mov
cwtl
push
jo
stos
iret
stc
mov
xchg
xor
in
xor
add
mov
fcomps
xchg
aaa
cmp
lret
mov
popa
dec
iret
xor
lea
into
ffree
jo
les
sbb
shrb
insl
and
xor
mov
and
test
jne
inc
pusha
pushf
xor
pop
in
xchg
jecxz
jmp
mov
xor
jp
hlt
add
add
add
shrb
ss
dec
add
pop
mov
imul
lock
in
cmp
dec
cmpsb
nop
or
loope
pop
add
fsubr
xor
sbb
arpl
fstpt
leave
mov
add
jl
mov
pop
mov
rol
push
aad
imul
aaa
pop
push
shrl
jmp
mov
ret
cld
push
ds
mov
insl
xor
shlb
jmp
sbb
or
pop
repnz
push
shrb
jl
xchg
mov
inc
ss
xor
jns
pop
aam
fcomps
mov
xor
inc
jae
in
push
jmp
add
cmp
repz
mov
fbstp
jp
test
xchg
in
stos
push
in
lods
outsl
in
es
icebp
jb
mov
aam
cmp
add
jne
pusha
popf
pop
subl
add
add
add
inc
jae
or
scas
insl
cmp
and
jmp
ficompl
sub
dec
xchg
je
cli
int3
add
inc
bound
mov
lret
jle
fwait
sub
jg
xor
mov
or
push
pop
js
and
outsl
out
imul
andb
adcb
test
xchg
inc
dec
mov
push
adc
outsb
xlat
mov
inc
test
cmp
outsb
jno
add
shll
iret
arpl
stos
push
orl
jl
es
push
ja
mov
lds
cmpsb
sub
and
dec
mov
ss
or
pop
push
les
fnstcw
cs
sub
stos
test
bound
idiv
fldt
inc
cmp
arpl
cmp
aaa
cmp
xor
dec
jge
sbb
xchg
in
dec
mov
add
sar
test
add
add
imulb
mul
xor
cmp
add
add
add
popa
sbb
adc
or
adc
popf
lea
sbb
and
pop
cmpsb
fdivs
jg
sbb
xchg
shll
aam
pusha
push
cmp
or
or
rorb
lret
xlat
sbb
xchg
arpl
sarl
leave
mov
add
in
fdivl
push
jb
push
xchg
inc
aas
bound
stos
jg
jne
pushf
std
pop
unpckhps
movsl
dec
ret
push
jg
pop
mov
ja
repnz
div
xchg
inc
cli
sub
fiadds
in
nop
or
dec
dec
movsb
dec
xchg
test
incb
testb
push
cmp
sub
xchg
add
shrl
in
stc
jg
popf
into
xchg
mov
mov
inc
mov
xor
cmp
sbb
addr16
sub
mov
mov
cmp
out
rcl
push
ret
lds
scas
mov
add
add
add
xor
jb
jae
andl
add
add
add
fcoms
outsl
cwtl
in
fsubrs
jb
leave
mov
test
add
jle
ror
stc
mov
pop
out
inc
popf
inc
push
adc
js
xor
test
roll
lods
cwtl
test
or
sub
pop
addr16
loop
inc
in
sub
pop
pop
xchg
sub
mov
adc
jecxz
aam
or
cmp
sahf
pop
xlat
sbb
in
pop
scas
add
fwait
jae
test
push
and
incb
push
out
xor
jae
and
pop
sbb
xchg
test
cld
leave
jb
es
sub
ljmp
xor
dec
or
ja
cmp
iret
lds
pop
aam
add
adc
jno
imul
icebp
inc
scas
insb
dec
xchg
sub
dec
sub
or
outsl
inc
add
add
add
adc
int
in
idivl
js
mov
mov
clc
add
add
add
mov
push
je
outsl
jne
mov
int3
mov
jp
and
out
mov
sti
popa
pop
push
fwait
xor
jo
shlb
inc
inc
pusha
daa
sub
lahf
push
push
dec
or
xchg
mov
jnp
aaa
imul
xchg
shl
shl
fsubp
jae
xor
push
pop
mov
mov
push
jp
adc
stc
loop
mov
sub
arpl
xor
mov
mov
mov
pusha
add
dec
fstl
xchg
xchg
imul
inc
mov
mov
jno
or
popl
pop
pushf
mov
mov
mov
scas
mov
inc
and
jnp
cmp
push
rcrb
insl
sbb
dec
sahf
clc
cmp
mov
xor
xor
lea
or
out
ret
repz
or
xchg
jne
jg
pop
ds
pop
int3
push
or
mov
add
out
mov
cmc
repnz
add
pop
es
inc
cli
aas
into
lret
fidivl
stc
add
add
add
movl
cmp
test
jnp
out
test
and
mov
rcl
in
jl
sbb
movsb
or
fdivr
add
out
mov
std
test
mov
inc
popf
xor
sbb
das
data16
dec
arpl
mov
lods
xlat
add
add
mov
cmp
push
addr16
pop
mov
popa
xor
cmpsb
mov
xchg
ret
scas
sbb
jnp
loope
clc
jo
enter
lods
mov
mov
lods
in
jb
insl
sarl
cmp
or
add
xchg
adc
push
dec
add
out
and
insb
sarb
xor
pop
push
add
push
outsb
movsb
jmp
gs
mov
jo
inc
cmp
divl
ret
xchg
mov
andps
add
add
lcall
into
or
cmp
add
add
add
inc
push
push
adc
and
int3
loope
inc
lret
ljmp
inc
dec
clc
push
mov
je
fwait
insb
sub
stc
push
or
pop
and
popa
or
mov
in
lret
mov
ss
pop
arpl
leave
shlb
lret
das
lahf
adc
scas
add
pusha
filds
pop
movsl
ljmp
xor
lods
out
adc
inc
mov
inc
iret
push
mov
sbb
inc
mov
lcall
dec
lret
dec
enter
mov
test
and
push
pop
sub
cmpsb
cltd
cmp
push
inc
inc
pop
mov
mov
imul
xchg
fs
and
loop
or
jge
fwait
xchg
maxps
xchg
xchg
inc
pop
inc
es
ret
fisttpl
rolb
in
repz
test
cmpsl
adc
sbb
aaa
jae
cltd
dec
mov
jno
mov
sti
add
add
add
and
dec
iret
in
sbb
jo
cmp
sub
cwtl
loopne
aam
hlt
xchg
stos
das
cld
jne
lea
fwait
or
xchg
sub
mov
jbe
outsl
pop
rorb
xor
pextrw
shrb
pop
mov
or
cmpsb
popf
mov
movsb
sbbl
or
adcl
add
out
insl
inc
pop
icebp
jp
sub
or
dec
pop
xchg
cmc
xchg
mov
pop
addb
repnz
mov
je
rcl
cmpsb
popf
sbb
jb
dec
sar
lods
and
sub
mov
rclb
pop
movsb
outsb
ret
fildll
cs
cmp
scas
sahf
sub
jle
mull
mov
push
add
mov
xchg
jne
pop
xor
pop
mov
jb
insl
jns
jg
sub
fisttps
adc
jl
ljmp
ds
into
nop
out
cwtl
jle
push
sub
dec
and
add
add
add
nop
mov
push
out
fiaddl
shlb
xor
mov
jno
xlat
fs
sub
dec
pop
fstpt
dec
ja
xor
jne
push
loopne
push
pop
repz
cmpsb
mov
cwtl
in
push
mov
pop
and
fld
scas
and
decl
cwtl
xchg
cmpsb
daa
adc
lock
int3
pop
xchg
shrl
nop
mov
lahf
into
jmp
scas
into
mov
xchg
mov
add
mov
xor
mov
xchg
or
pop
mov
in
cmp
mov
mov
pop
ficompl
fstpl
mov
fldt
dec
pop
push
out
lret
mov
fistpll
xor
nop
inc
and
cmp
jmp
adc
add
insb
ret
dec
stc
int3
push
inc
dec
add
divb
mov
dec
in
mov
stc
in
dec
or
xchg
int3
ljmp
add
test
jg
push
pop
push
mov
addr16
add
add
add
repz
ss
daa
adc
iret
icebp
and
aam
xchg
and
pop
fsubr
xor
dec
pushf
push
loop
movb
mov
aaa
nop
inc
jae
test
out
inc
cld
and
mov
mov
jg
push
push
mov
shrb
mov
dec
addl
mov
xchg
pop
cmp
testl
cmpb
xchg
cmc
iret
inc
push
inc
xchg
and
jmp
push
rclb
xchg
repz
xchg
cmp
push
sub
clc
xchg
ret
lock
mov
inc
mov
in
and
scas
inc
push
push
fs
jg
fs
inc
arpl
aaa
leave
addr16
mov
pushf
inc
and
inc
fisubs
push
mov
sbb
sbb
in
xchg
add
adc
inc
stc
in
cld
pop
pushf
scas
or
fisubl
push
lret
mov
dec
hlt
inc
xlat
mov
adc
add
add
movsb
push
in
cmc
jne
sbb
js
mov
stos
incb
add
add
add
and
mov
test
mov
lods
mov
mov
add
pop
jae
or
fisubrl
adc
dec
xor
sub
dec
add
xchg
fnstenv
sarb
adc
imul
outsl
xchg
jmp
ret
push
pop
icebp
out
out
into
sub
sub
popa
leave
push
mov
pop
shr
lods
xchg
mov
xor
or
adc
sbb
mov
movsl
loop
mov
xchg
pop
call
mov
or
sbb
fidivs
js
popa
xor
sti
dec
mov
shrb
adc
xchg
int3
dec
je
scas
mov
jl
xor
adc
cmpsb
cmc
stos
mov
xor
popf
gs
ficoml
sub
adc
xor
xchg
test
dec
stos
xchg
leave
jno
sbb
shlb
aas
out
int3
mov
fisubrl
add
add
add
pop
add
stos
inc
and
lods
dec
mov
mov
add
xor
push
inc
or
or
inc
sahf
xor
mov
mov
jl
push
icebp
sub
rcll
shrb
orb
sub
int
inc
mov
push
div
cmp
movsb
jns
lods
rorb
pop
hlt
movsb
pop
cld
mov
sahf
add
jnp
cmp
test
pop
ja
adc
xchg
jp
jns
ja
jne
in
aam
pop
pop
xchg
sub
cmp
add
fadds
fnsave
and
cmp
hlt
cmp
fstl
jae
ret
cmpb
call
out
jle
lcall
add
dec
xor
jl
add
xchg
mov
je
and
mov
and
xchg
xor
push
shrb
daa
mov
or
mov
and
jecxz
add
add
add
add
stc
sti
fcompl
push
pop
jecxz
out
mov
mov
cld
test
adc
cwtl
cld
pop
xchg
aas
jo
inc
add
add
imul
cld
popa
lret
mov
mov
mov
dec
and
in
outsb
jp
jae
nop
scas
adc
push
addb
lods
movsb
mov
ss
arpl
xor
push
sub
test
jle
imul
cmp
ror
daa
or
in
faddp
out
leave
aam
and
xchg
add
or
inc
jl
cmc
int
xchg
fsubr
fsubl
call
les
push
jno
dec
dec
mov
das
movsb
mov
mov
movsl
xor
mov
mov
cmp
stos
incb
or
sti
sahf
pop
jle
cltd
jle
cmp
xlat
lret
shrl
dec
rol
lret
clc
cmc
inc
stos
repz
sbb
add
add
add
in
aas
adc
push
or
lea
jae
stos
push
fistpl
and
int3
mov
fimuls
ljmp
leave
xor
dec
push
lcall
mov
or
inc
imul
xor
mov
mov
mul
adc
push
pusha
mov
xchg
mov
ja
les
das
mov
jns
add
sbb
jae
cmp
clc
and
test
insb
mov
call
sarl
fwait
mov
mov
sbb
sub
jo
and
scas
push
add
adc
xor
xchg
push
dec
dec
and
jne
push
push
cmpsl
add
lods
loope
mov
sbb
dec
dec
mov
push
xor
mov
jle
cmpsb
aam
xor
rcrb
jle
aam
push
dec
shlb
add
std
aaa
mov
shll
inc
add
add
fwait
mov
mov
sbb
rorl
inc
test
cwtl
jge
or
and
mov
push
inc
insb
bound
lcall
adc
ljmp
scas
pop
mov
fs
jmp
mov
mov
sub
test
pushf
push
lods
mov
in
lods
mov
or
xor
jnp
aaa
mull
outsb
or
inc
pop
in
push
ficoms
shlb
cwtl
sbb
cmc
mov
jno
push
stos
jmp
ret
add
jns
and
ret
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
ss
add
ss
add
ss
add
ss
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
aaa
inc
add
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
inc
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
int
sub
mov
mov
out
push
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
