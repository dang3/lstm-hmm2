push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
enter
addl
subl
es
cmp
js,pn
je
adc
jae
dec
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
and
inc
outsb
insb
scas
mov
and
push
jb
insb
jge
pop
dec
push
push
test
lahf
inc
add
jne
push
orb
xor
clc
jecxz,pt
fldenv
ja
pop
inc
popa
js
jge
out
mov
bswap
push
or
fsubrs
inc
lcall
cmove
mov
pop
mov
aad
cmpsb
cwtl
es
mov
in
or
mov
flds
mov
jb
add
popa
into
and
pushf
mov
inc
nop
icebp
lret
xor
xchg
hlt
fwait
rcl
add
adc
mov
imulb
sbb
loope
pop
out
mov
fs
push
mov
or
sub
push
mov
mov
mov
jg
iret
int3
push
or
inc
pop
mov
push
push
inc
sub
scas
fmull
dec
dec
push
aad
cmc
inc
test
adc
out
and
subb
mov
or
jns
imul
cli
bound
into
lods
outsl
xchg
cli
inc
mov
popf
pushf
jns
xlat
adc
adc
mov
fcoms
jae
test
movsb
sub
pop
xchg
inc
cmp
cmp
add
aam
enter
loope
cli
inc
adc
jl
mov
xor
and
gs
inc
ficoml
pop
inc
mov
je
xchg
push
shll
popf
add
mov
decb
scas
mov
push
push
lahf
jnp
mov
adc
data16
lea
mov
mov
xchg
loop
std
jecxz
in
daa
inc
fisubrs
cli
dec
sbb
sbb
mov
adc
pop
and
pop
sbb
fsubr
lret
mov
xchg
repnz
pop
cltd
lret
mov
jmp
in
pop
sbb
enter
mov
or
stc
push
add
shll
jnp
or
jne
in
mov
icebp
ret
or
insl
or
lods
mov
pop
mov
test
addr16
lcall
fs
sub
add
cmpsb
lods
inc
jb
jno
test
imul
dec
sbb
and
xchg
insl
int
popa
es
vrsqrtps
jmp
jnp
out
sbbl
push
mov
mov
push
std
ja
or
inc
inc
enter
or
ret
pushf
ror
incb
shrl
mov
xor
lret
in
mov
stc
fdivrs
sbb
adc
xorb
adc
or
pop
pop
xlat
add
jb
fildl
jmp
mov
mov
call
mov
mov
push
push
jae
out
xor
movsl
adc
inc
xchg
insb
lcall
push
and
repz
mov
add
out
jno
punpckhwd
cmp
cmp
test
dec
push
mov
cltd
adc
test
jge
jg
xor
cmpsb
shll
stos
cmp
jge
and
mov
push
sbb
jno
lock
loopne
hlt
xchg
addr16
aaa
ds
and
in
stos
loope
adc
push
scas
jno
jg
cmp
aad
and
jno
cmpsl
ds
lret
adc
push
sub
pop
mov
testl
mov
push
mov
cld
push
scas
insb
cs
popf
xchg
add
out
jne
jge
lret
pop
rcll
jg
xor
pop
leave
pusha
cmp
push
bound
cmpsl
sub
aas
cwtl
aas
pop
popa
addb
sub
push
clc
stc
icebp
popa
stos
fistps
movsl
ss
gs
fcmovbe
cmpsl
aad
fmul
sub
jecxz
sti
xchg
push
jmp
in
fadds
loope
movsb
pop
push
pop
lods
sub
lods
hlt
jo
repnz
mov
sbb
jae
dec
dec
pop
jae
clc
dec
ljmp
test
repz
jp
bound
add
fwait
and
fisubl
dec
ds
push
sahf
cli
mov
mov
mov
adc
cltd
inc
lods
bound
into
fcmovnu
mov
imul
fnsave
jl
push
sbb
repz
lods
fs
adc
out
imul
sbb
outsb
push
mov
push
pop
add
idivb
mov
fidivrl
addr16
outsb
mov
pop
testb
mov
xchg
add
push
cmp
jbe
xlat
push
mov
sbb
xchg
stc
imul
call
add
js
cmp
mov
jae
cmp
pop
and
lods
mov
sbb
jecxz
add
mov
xor
adc
mov
xchg
out
jae
arpl
scas
mov
jbe
xchg
cltd
inc
out
mov
xchg
and
call
insl
addl
cmp
jb
adc
and
jno
push
xlat
pop
sbb
push
cmpsl
sbb
lds
or
adc
pop
add
lret
rcrb
js
pop
dec
push
enter
mov
outsb
pop
cltd
inc
adc
cmc
sbb
jb
mov
dec
lea
pop
pusha
push
scas
iret
push
jb
ret
xchg
out
js
mov
cmc
cmp
lahf
jmp
jge
in
mov
mov
fidivrs
out
shll
dec
inc
lret
out
dec
mov
rcll
pushf
insb
movsl
push
test
ljmp
loope
icebp
bound
js
cmp
es
mov
lahf
adc
pop
out
mov
pop
mov
pushf
xor
dec
loop
sbb
cmp
popa
ds
fldenv
mov
orl
and
inc
mov
pop
ret
xor
div
bound
sub
mov
inc
jmp
mov
bound
push
sbb
cmpsb
popf
inc
cli
adc
std
movsb
mov
lds
or
dec
lods
push
sar
dec
xor
cmpsb
adc
add
js
cmp
aas
scas
and
mov
xchg
jl
add
add
cli
xor
add
outsb
push
adc
sbb
cwtl
iret
lahf
sbb
jg
jb
jne
shrb
or
pop
aaa
and
aam
mov
and
pop
pop
jb
push
mov
shr
sub
mov
stos
nop
inc
and
xor
nop
arpl
mov
movsl
jmp
fwait
mov
addr16
cmp
leave
mov
xchg
push
jmp
and
popa
jmp
inc
mov
clc
inc
scas
xchg
imul
jne
mov
jge
mov
test
cmc
adc
mov
jmp
cmp
cwtl
imul
xor
push
mov
cmpsb
lods
sub
xchg
push
inc
jne
mov
sub
and
push
lods
push
cmp
scas
cmp
sbb
mov
imul
mov
jae
in
les
lds
es
movsb
adcl
lret
push
or
nop
test
test
and
bound
mov
mov
stos
fidivrs
seto
lock
push
shrl
addr16
pop
ja
aas
dec
pop
imul
nop
sarl
pusha
scas
out
cmpsb
pop
dec
adc
push
mov
daa
mov
lea
push
xor
ds
mov
pop
push
cmp
pop
stos
adc
pop
lds
push
cmp
lods
xlat
out
mov
out
mov
fsubrl
fldt
lods
mov
mov
pop
inc
adc
adc
adc
addr16
jae
ret
cmp
imul
inc
xor
sub
jg
or
pop
rol
nop
icebp
pop
dec
push
decl
push
add
pop
inc
push
enter
into
mov
imull
movl
push
popa
sbb
mov
mov
addl
frstor
btc
add
dec
pop
pop
mov
xchg
cmpsb
inc
jno
in
cmpsl
es
lds
jle
mov
les
inc
gs
mov
dec
fwait
cwtl
fwait
cli
push
jb
cmp
test
sbbb
inc
cmp
loopne
and
cltd
inc
cmp
inc
push
fistps
ret
mov
lea
das
sbb
int3
add
lea
xchg
test
fs
push
rolb
mov
mov
pop
jo
xchg
jo
inc
add
sbb
cwtl
adc
mov
in
xchg
fldcw
movsb
pop
mov
stos
xchg
xor
and
popa
mov
sub
insb
cmp
add
bound
mov
xor
adc
mov
pusha
mov
pop
pop
mov
leave
stos
pop
jg
stos
sbb
insb
mov
mov
add
mov
jne
enter
pop
rorb
sar
scas
fiadds
cs
sbb
ss
or
in
pop
pop
add
es
sbb
in
jmp
cmp
in
mov
mov
rolb
jb
xchg
int3
in
pop
xchg
mov
mov
int3
mov
ds
mov
cli
loopne
fadds
clc
adc
nop
xor
adc
in
shll
aaa
jbe
pop
and
test
or
ds
xchg
outsb
dec
insb
addr16
mov
sbb
sub
jecxz
mul
movsl
fstpl
mov
pop
scas
and
add
push
test
mov
imul
dec
out
mov
push
xchg
test
mov
mov
mov
cmp
mov
cli
fmul
fwait
rorl
pop
sub
addl
sbb
jle
popf
mov
arpl
pop
rorb
xor
push
sbb
add
outsl
mov
and
aam
ja
pop
push
pop
sub
aas
lret
inc
xor
addr16
clc
sub
shrb
pop
cmp
xor
jg
jae
push
cmp
mov
sahf
inc
xchg
icebp
adc
jnp
lcall
int
pop
lock
dec
inc
mov
cwtl
icebp
dec
shrl
xchg
loope
popa
jecxz
pop
in
push
sub
pop
xor
cmp
je
divl
mov
inc
out
mov
push
mov
pop
dec
scas
ret
xchg
ja
cmp
sbb
and
in
outsl
in
shl
lods
xor
add
int3
push
test
push
xchg
sti
push
scas
outsb
adc
leave
mov
pop
rol
pop
push
fistl
movsl
cmpsl
fiaddl
or
jno
loop
imul
aad
xlat
outsl
ds
and
js
mov
push
sbb
dec
imul
cmp
out
cmp
gs
dec
in
lcall
push
in
sub
mov
test
fcomip
mov
punpckhdq
in
jne
cmp
enter
loopne
sbb
adc
sbb
adc
outsb
mov
sbb
imul
adc
push
jbe
mov
inc
xor
fdivrl
imul
popf
xor
or
fidivs
cmp
sbb
xor
call
outsl
mov
mov
lea
cmpsb
push
and
int3
add
aas
daa
jb
sub
dec
pushf
loope
jp
jmp
scas
xlat
sub
adc
jb
adc
divl
sbb
xor
lea
mov
or
add
lea
mov
and
inc
pop
stc
fnstcw
or
mov
cli
jnp
xchg
shlb
bound
out
push
sub
inc
mov
rcll
pop
mov
dec
jge
subb
or
mov
int
notl
xchg
and
sub
xchg
fs
add
shll
jg
popf
mov
out
jp
push
mov
adc
mov
les
add
iret
popf
mov
rcrl
sbb
imulb
sbb
cld
setne
incl
pushf
jl
packuswb
push
popf
xchg
add
cli
xor
pop
inc
loopne
lgs
cmp
clc
xor
xchg
test
icebp
je
aam
pop
sub
push
in
out
mov
mov
fs
cld
add
imul
adc
shrl
shl
mov
mov
pop
lret
jp
in
and
xchg
xor
popf
insb
inc
push
push
inc
jne
das
cmp
jae
jge
cmp
mov
jbe
add
cmp
xor
hlt
xchg
jp
pop
dec
insl
sub
in
xor
inc
fisubrs
mov
ret
mov
sub
stos
insl
lret
mov
cmp
jge
xlat
aad
xorl
inc
adc
std
insb
lret
pop
call
dec
mov
mov
pop
lods
cmc
sbb
loop
pushf
push
and
outsl
mov
sarl
dec
push
icebp
push
shr
fsubr
and
movsb
jae
cmpl
adc
mov
dec
push
push
xor
cmp
jns
lahf
imul
xchg
sub
push
add
jmp
in
shlb
sti
pusha
negl
adc
repnz
mov
popa
loope
pop
adc
adc
mov
add
popf
das
add
lods
cmp
push
pop
xor
push
aad
cmpsb
leave
out
lret
subl
stos
bound
imul
push
add
jge
inc
test
repnz
inc
mov
sbbl
test
add
cmp
dec
fildll
in
shrb
and
or
dec
sub
pop
sbb
mov
cmp
cmp
cltd
adc
xlat
ret
enter
xchg
xlat
inc
test
fwait
loope
imul
sbb
or
into
sbb
lret
xor
cmp
mov
in
add
rcr
mov
loope
fs
ficoms
xlat
pushf
sbb
jns
mov
addr16
test
lea
jnp
shll
test
push
gs
fcompl
jmp
flds
mov
push
mov
push
push
adc
aaa
pop
mov
popa
ss
sub
cmpsl
mov
cli
test
ret
pop
insl
and
xor
jmp
jmp
mov
fistps
repz
sbb
cmp
add
sbb
mov
jmp
push
push
or
stos
pushf
shlb
jns
ss
sub
pop
ret
dec
cmp
sahf
mov
int
mov
mov
pop
test
mul
inc
popa
xchg
push
daa
jg
add
mov
mov
mov
ret
popf
subb
es
lock
test
lret
xor
scas
push
mov
popf
pop
jns
cvttps2pi
outsb
cmp
shl
dec
mov
aas
in
fisubrs
sbb
mov
ret
and
adc
pop
ja
sbb
mov
loope
push
cmp
cmp
daa
addr16
popa
and
popa
sub
je
in
into
xchg
fnsave
lea
in
mov
and
aam
mov
fwait
jo
pop
clc
mov
psraw
imul
ljmp
cld
arpl
mov
xor
in
or
mov
jge
mov
and
es
ret
and
out
xchg
inc
xor
test
out
cmp
in
inc
and
dec
imul
xor
andb
aad
fsubrl
cld
out
ljmp
imul
mov
stos
xor
fld
pop
repnz
jae
and
xchg
push
mov
lahf
push
push
lret
add
mov
int
add
push
jae
cmp
push
dec
mov
mov
mov
cwtl
lods
aad
sarl
push
inc
leave
ljmp
lods
sub
setno
adc
and
inc
scas
adcl
ret
sub
push
cmp
ror
cmp
sub
add
roll
data16
jg
loop
mov
sub
adc
fildll
mov
or
pop
repz
nop
nop
repnz
mov
in
sub
or
jb
call
sbb
cltd
and
dec
fs
mov
inc
xchg
out
cmp
mov
sbbb
pop
add
pop
scas
adc
sbb
xlat
push
add
sub
push
and
pop
mov
pop
mov
push
mov
aam
push
in
mov
adc
arpl
ret
sbb
or
mov
test
call
xor
out
mov
xor
fidivrl
xor
mov
les
push
cs
mov
add
jb
stos
adc
xchg
aad
or
push
mov
pop
xlat
xchg
cld
insl
jae
jmp
mov
aas
lock
arpl
pop
mov
dec
jne
shrl
mov
push
dec
test
test
mov
mov
sub
popa
mov
sbb
xor
inc
call
add
mov
ljmp
popa
or
push
or
jnp
lea
pop
mov
fisubl
pop
or
or
out
dec
rorb
mov
leave
loopne
mov
push
fsts
leave
das
push
in
or
cmpsb
cmp
inc
xor
xchg
sahf
mov
pop
and
dec
pop
xchg
test
cs
push
jbe
leave
or
xchg
in
sub
jnp
lret
lahf
jnp
cmp
dec
arpl
add
movsb
ror
rcr
mov
push
jp
push
cmp
inc
fdiv
fldenv
or
pop
stos
out
add
xorl
sub
adc
imul
push
mov
mov
fisttpll
push
inc
xor
scas
mov
xchg
and
mov
mov
xchg
out
negb
mov
cmpsl
insb
sub
and
pop
popw
out
pop
dec
pop
int
or
mov
jmp
jne
xchg
dec
test
mov
aas
cmp
mov
sbb
dec
idiv
movsl
movsb
lcall
or
out
outsb
dec
push
mov
pop
pop
je
inc
inc
pop
adcl
cld
clc
push
data16
jne
test
jo
cmp
test
dec
jo
pop
mov
out
mov
xor
out
scas
pushf
dec
xor
loope
stos
cmp
sbb
lea
insb
addr16
and
enter
fstpt
ljmp
dec
xor
xor
rcrb
jp
repz
push
lock
xchg
add
pop
pop
cmp
cmp
xor
mov
imul
mov
call
mov
les
pop
push
or
dec
imul
orb
cwtl
popf
cmp
and
adc
fstps
pop
sbb
xchg
xor
outsl
mov
sar
stos
dec
nop
pop
outsl
rcrl
outsl
repz
sti
out
pop
movsb
pop
mov
pop
adc
rcll
std
fsubrs
out
pushf
and
xchg
lds
out
push
push
and
dec
dec
inc
pop
and
pushf
mov
loope
pop
lret
add
test
sar
iret
and
rol
sub
push
fadd
xor
int
test
movsb
dec
mov
out
ret
gs
sahf
cmp
xchg
fstpt
mov
ret
mov
out
inc
xor
adcb
sbb
inc
lahf
mov
mov
int3
inc
inc
xchg
jns
pusha
iret
rcll
mov
imul
push
pop
inc
fcmovnbe
gs
js
ret
daa
test
repz
mov
adc
pop
arpl
xlat
xor
push
mov
lcall
dec
ds
sub
bound
or
pushf
jbe
dec
stos
jp
sub
mov
lret
xor
fbld
push
in
pop
loope
xorb
sbb
daa
pop
jp
mov
out
cmp
or
mov
mov
xor
jle
inc
fisttpll
cli
bound
sbb
or
and
rcr
jbe
test
jge
in
mov
stos
push
push
fucomi
sub
mov
fldcw
or
test
pushf
roll
js
pusha
sar
jg
lret
cmpl
dec
mov
push
inc
imul
cmp
hlt
jecxz
or
push
xchg
push
arpl
stc
in
or
out
jns
andb
imul
jns
shl
push
lods
lahf
mov
hlt
test
sbb
pop
and
lahf
push
xor
scas
jle
movsl
mov
or
aaa
dec
and
cltd
or
es
pusha
cmp
mov
and
jl
jae
mov
pop
adc
nop
push
jge
lcall
xlat
arpl
outsb
daa
lods
adcb
aaa
mov
adcb
push
pop
dec
roll
ss
out
aam
icebp
insb
push
ret
cmpsl
jbe
dec
cpuid
xchg
shrb
aad
repnz
sbb
cmp
fwait
cld
aaa
xchg
in
shrw
pop
or
mov
mov
dec
add
mov
int3
testl
jb
stos
pop
rcl
movb
clts
lods
pop
loope
or
inc
cmpsb
jo
jne
pop
inc
mov
imul
pop
daa
cmc
jnp
nop
testb
jp
cmpsl
cmp
inc
fisttpl
sbb
sub
cmpb
pop
adc
mov
aaa
mov
imul
loopne
sbb
rclb
in
fildl
sub
icebp
xor
ffree
into
in
mov
cmpl
icebp
mov
sbb
inc
cmp
lahf
mov
inc
jmp
sub
cmpb
sarl
js
push
aam
cwtl
cld
das
pushl
pop
xor
pop
les
sbb
mov
in
pushf
xchg
mov
jns
sbb
into
scas
sub
pop
in
cmp
mov
ss
mov
aam
jecxz
pop
mov
insb
rclb
mov
pop
aad
mov
inc
jns
mov
fistpl
mov
jmp
shrb
stos
inc
push
jnp
popf
in
int
das
mov
adc
mov
mov
pop
jns
jnp
inc
test
adc
sub
or
repz
lds
aam
icebp
std
je
fnstenv
aam
add
lret
push
adc
pop
dec
cmp
mov
push
stos
daa
inc
je
shlb
mov
jo
pop
cmp
push
and
addr16
jp
in
sbb
or
sbb
test
inc
xor
xchg
sbb
and
xchg
iret
out
pop
sbb
imul
fs
ficompl
pop
stos
sbb
mov
hlt
and
push
scas
mov
or
into
jns
mov
push
mov
xchg
fs
xor
arpl
push
mov
aaa
xchg
xchg
adc
xor
cwtl
ror
imul
mov
and
nop
pop
add
bound
cmp
push
inc
aam
fstps
inc
sbb
dec
outsb
hlt
lods
mov
jae
je
xlat
fwait
inc
jo
outsl
rcll
mov
push
jbe
mov
ficomps
test
aam
ljmp
pop
mov
pop
in
leave
cmpsb
addb
pushf
je
sub
xchg
in
sbb
rcr
sub
xchg
or
and
jo
out
aaa
jmp
mov
ds
jge
pop
flds
push
sbb
aad
mov
in
jne
outsb
int
pop
popa
loope
ja
paddw
enter
lods
pop
in
lret
cmp
pop
add
lods
dec
mov
inc
aaa
pop
ret
daa
inc
jae
cltd
jb
mov
out
inc
mov
mov
pop
push
mov
orb
les
xor
xchg
adc
add
stc
jbe
dec
dec
imul
fnsave
scas
cmp
ret
jb
movsl
pusha
add
scas
add
xor
push
adc
shll
movl
aam
and
inc
sarb
shrl
aad
jecxz
call
mov
jb,pt
lea
adc
stos
ljmp
lret
xchg
je
arpl
lea
dec
insb
mov
lea
arpl
adc
mov
xchg
leave
pop
lea
push
ret
mov
into
pushf
imul
dec
lds
xchg
loopne
test
jne
cwtl
popf
in
push
sbb
daa
movsb
jns
push
dec
test
jnp
js
jo
cli
movsl
or
push
outsb
out
pop
xchg
mov
movsl
lds
cltd
insb
pop
dec
pop
mov
repnz
xchg
cmp
jo
sbb
in
rolb
notb
and
sub
mov
lds
mov
imul
inc
and
in
clc
push
pop
out
push
enter
fwait
sbb
scas
ds
lods
xchg
das
push
mov
imul
insb
jecxz
pushw
dec
clc
ret
dec
test
or
test
loop
adc
lds
sbb
movsb
test
insb
or
ror
mov
arpl
dec
scas
rol
mov
pop
ret
stos
cmp
cld
dec
and
or
pop
dec
lods
mov
loopne
push
bnd
repz
mov
and
jle
negl
lods
popf
call
ss
mov
daa
addr16
ror
ret
sarl
icebp
dec
arpl
jo
or
test
push
movsl
push
mov
das
mov
rol
inc
inc
lahf
cmp
popa
icebp
inc
xor
fdivr
xchg
mov
jge
bound
fcoms
dec
test
add
jge
inc
sbb
in
aaa
lds
xlat
add
adc
jmp
cmp
test
or
xor
jecxz
adc
out
xor
into
mov
adc
xchg
cmp
movsb
pop
jmp
mov
cmp
mov
sub
inc
xchg
sbb
cmp
adc
mov
push
mov
mov
inc
subl
rorl
fcmovb
add
dec
test
push
xlat
sub
add
daa
mov
lret
dec
pop
outsl
mov
cmc
lea
xor
or
sbb
enter
inc
stc
outsb
push
dec
jae
mov
mov
in
mov
inc
fmul
les
jnp
ja
sub
xor
mov
add
push
xor
inc
outsb
pop
push
pop
push
jnp
loop
sahf
out
shrb
icebp
ja
in
push
out
mov
shll
or
add
testb
mov
cld
mov
cmp
and
sbb
inc
test
cmp
cwtl
pushf
inc
xor
xchg
xor
mov
push
and
pusha
dec
mov
sub
adc
in
icebp
mov
jnp
outsb
adc
mov
cmp
jg
inc
ljmp
add
lock
dec
push
fs
or
rcrb
push
add
fcompl
in
dec
adc
and
mov
or
stc
jp
nop
clc
sub
xchg
sbb
cmpl
jae
rclb
shlb
pop
ficoms
loopne
rcll
icebp
inc
enter
inc
jno
mov
jb
in
icebp
ret
in
das
mov
shl
int
idivl
dec
push
ljmp
push
lahf
xchg
mov
sub
sbb
mov
push
push
or
popf
cli
jmp
jnp
push
xchg
mov
cld
pop
xchg
out
inc
xor
sbb
or
cmp
mov
bound
fnsave
inc
iret
sub
pop
test
mov
push
ljmp
aam
hlt
pusha
or
push
inc
or
xor
pop
jmp
daa
cli
pop
ja
sub
dec
fsub
idivb
dec
sub
push
rclb
cmp
adc
push
mov
incw
sbb
clc
sub
xor
in
push
fs
insb
lods
inc
jne
aas
pop
dec
clc
imul
loop
and
xchg
and
jns
loop
xchg
mov
cld
outsl
cmc
mov
shll
movsb
mov
fld1
mov
insl
sub
in
stos
lds
inc
pop
gs
rclb
aam
xchg
in
adc
jp
jo
and
sahf
aam
sbb
add
mov
sbb
lcall
and
loopne
repnz
iret
imul
cltd
push
fiaddl
push
adc
xchg
cmp
aas
cwtl
cmp
fs
addr16
mov
jbe
repz
adc
xchg
jg
hlt
sbbl
insb
and
stos
gs
into
cmpsl
mov
sbb
iret
in
mov
std
pop
aad
loope
leave
insb
cmc
ss
mov
mov
jae
sub
jl
subb
xor
or
out
out
or
mov
jge
int3
mov
aad
into
fnstenv
add
lods
xorb
repnz
xor
mov
aad
stos
push
std
cmp
add
dec
test
add
pop
std
inc
out
add
js
fstpl
sbbl
mov
inc
xor
xchg
xchg
adc
or
mov
hlt
int
out
inc
stos
pop
pop
test
clc
in
xor
mov
push
sub
shrb
test
inc
push
loopne
lret
inc
mov
mov
sub
push
sub
push
loopne
dec
push
dec
sbb
pop
hlt
or
bound
xor
sbb
dec
sbb
iret
das
loopne
cmp
dec
sub
cmp
or
adc
imul
lcall
lods
and
xor
fdivrs
xor
sub
mov
movsl
dec
test
mov
scas
or
ret
inc
in
cmpsl
ret
push
fs
shl
out
insb
cmp
sbb
mov
jmp
mov
pop
dec
cmp
and
sub
lods
jne
test
aas
repz
jmp
jae
dec
xchg
push
jo
xchg
xchg
inc
mov
aas
lods
out
pop
push
aaa
jno
xor
pop
popa
ja
sub
mov
adc
and
cmp
mull
invd
jnp
mov
jno
mov
adc
divb
out
scas
xchg
and
cmp
subb
mov
cli
sarl
or
dec
xlat
push
nop
jns
jmp
add
call
push
xor
or
pop
pop
aaa
cmp
cmp
lret
and
xor
gs
push
lock
shrl
cli
test
push
mov
mov
xor
enter
pop
les
mov
jl
sbb
sar
jnp
add
loope
pop
jne
in
in
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
jmp
and
addl
jecxz
jg
mov
ljmp
mull
xor
mov
neg
push
xor
invd
ret
rolb
cs
dec
inc
inc
mov
or
in
jecxz
fidivs
fdivs
dec
mov
fsubs
fs
cmpsl
adc
test
ficompl
jl
or
mov
hlt
icebp
jae
cmp
xchg
push
xor
mov
outsb
mov
cld
ss
in
xor
andb
sub
jg
sbb
or
lock
pop
cs
pop
mov
ret
xchg
mov
in
in
add
xchg
popa
imul
push
loopne
int3
xor
adc
icebp
popa
hlt
add
inc
or
into
xchg
addr16
add
shlb
fnsave
movsl
int
cmp
xlat
sbb
dec
mov
ret
jmp
gs
or
sbb
xor
adc
cmp
out
add
test
in
outsl
in
cmp
addr16
mov
lock
push
sahf
mov
aam
mov
movsl
mov
mov
dec
mov
enter
and
jge
and
add
loop
fistl
rorb
xorb
push
cmp
lret
pop
jl
shlb
jbe
aad
mov
cmp
inc
aas
pop
enter
testl
cld
fiadds
out
dec
and
xchg
jbe
fdivrs
mov
lret
fiadds
jo
idiv
mov
jne
aad
lahf
cmp
or
mov
xchg
insl
adc
mov
cmp
xor
cmpsl
ljmp
bound
insb
aam
mov
dec
jns
cmpl
fdivrs
inc
mov
adc
push
idivl
icebp
mov
mov
xchg
and
leave
inc
cli
sbb
jbe
cli
xchg
add
scas
inc
cwtl
xchg
repnz
cmp
add
ljmp
gs
pop
pop
ds
sbb
pop
aad
add
out
scas
mov
les
outsb
cs
or
push
insb
adc
lds
popf
repnz
sbb
or
lods
cmp
call
push
pop
sbb
sbb
sti
std
pop
lret
jecxz
mov
mov
ffree
jmp
adc
stos
xchg
xchg
testl
dec
adc
cmc
call
xchg
out
xchg
mov
jnp
sbb
xchg
cs
sbb
loop
test
inc
aad
mov
xor
xchg
add
push
lcall
xchg
inc
mov
add
repz
movsb
add
or
push
and
xorb
pop
mov
sahf
jmp
mov
mov
jmp
cmc
pop
jp
adc
loope
ss
inc
mov
xchg
adc
inc
push
shlb
xchg
out
sbb
fistpll
xor
xchg
mov
inc
xchg
push
jne
dec
jge
mov
repz
mov
int
fildl
into
xorl
test
repz
cmpsl
pop
enter
xchg
xor
loop
sbb
inc
repz
ja
jo
sbb
dec
sub
add
test
add
nop
fcomi
dec
jle
lock
jae
test
leave
dec
jno
and
xchg
int
sub
or
in
push
push
mulb
fcoms
pavgb
mov
into
sub
fcomp
sti
xor
cwtl
xlat
sub
cmp
fldz
push
test
pop
test
clc
ror
pusha
outsb
aas
jle
jle
gs
and
push
addb
mov
test
mov
dec
test
je
rorb
scas
mov
in
cmp
int3
scas
outsl
pop
push
mov
or
pop
lods
pop
sar
jecxz
and
push
imul
sbb
mov
dec
cmp
fmulp
sbb
js
mov
pop
subl
popf
mov
xchg
sbb
inc
add
pop
fisubl
mov
dec
data16
roll
out
test
mov
fidivl
das
push
in
out
push
mov
mov
mov
out
or
dec
dec
es
iret
push
mov
pusha
mov
lods
ffreep
fisubrl
int3
in
mov
enter
add
fbld
in
nop
call
cmp
or
sbb
push
divl
and
mov
cmp
mov
mov
fwait
dec
fistpll
jp
xor
sbb
push
mov
dec
mov
pop
push
imul
mov
cmpsl
ja
xchg
and
sub
cmpsb
pop
mov
fcmovnbe
cmp
inc
jb
and
jne
mov
mov
add
jg
lea
icebp
inc
mov
xchg
cli
mov
adc
cmp
dec
subb
mov
pop
dec
out
mov
inc
into
repnz
in
add
jmp
jo
jle
sbb
enter
sub
cmp
or
stc
sub
sahf
gs
insl
leave
push
lds
mov
movsl
ret
insl
mov
mov
fimull
xchg
inc
dec
and
mov
mov
jmp
test
bound
imul
mov
movsl
insl
loope
mov
cli
loop
cmc
xor
mov
mov
push
call
and
loopne
sub
sbb
xchg
pop
cmp
mov
gs
dec
les
mov
lcall
das
or
icebp
pop
push
cmc
mov
jns
push
xchg
jmp
mov
mov
mov
imul
movsb
xchg
clc
into
mov
adc
jae
arpl
mov
repz
dec
je
jae
mov
push
sub
test
insl
in
mov
lar
pop
mov
sub
shlb
sbbl
mov
mov
test
and
cmpsl
fistl
dec
xchg
jae
daa
mov
out
mov
hlt
rcl
sub
jp
clc
sbb
repz
sub
insl
add
ljmp
fcomps
cmc
mov
sub
sub
cmpsb
movsb
sub
cmpl
lea
xchg
outsl
push
mov
pop
and
cmpsb
fcmovne
insl
scas
sbb
repnz
add
fisttpl
fs
jp
mov
loopne
xchg
xchg
push
jle
mov
lea
sub
aam
mov
test
push
adc
adc
inc
test
ss
lcall
mov
rclb
cli
or
pause
and
dec
imul
pop
arpl
sub
xchg
adc
jp
ja
xor
or
mov
mov
pop
xchg
sbb
mul
out
xor
sub
adc
sub
pop
scas
idivl
jg
pop
jg
mov
mov
std
lcall
mov
lret
mov
add
fdivl
fmulp
enter
jnp
sbb
mov
jbe
jns
gs
outsl
lcall
pop
xchg
fs
sbb
jns
fwait
push
sarb
test
xor
jp
xchg
rol
cld
and
fistpl
cmpsl
dec
push
pop
mov
or
dec
mov
aaa
cli
or
ffree
in
push
mov
xor
lret
dec
dec
sbb
jg
lcall
sub
jmp
pop
inc
cltd
hlt
scas
pop
test
add
mov
mov
dec
aad
cmp
or
jns
xor
adc
sahf
push
mov
leave
ficoms
adc
mov
push
mov
xor
jge
sbb
xor
aam
or
adc
nop
xchg
xchg
lock
mov
dec
fldenv
push
icebp
jge
lea
push
xor
mov
cld
mov
outsl
add
jp
push
icebp
rorb
inc
out
xchg
call
sarb
arpl
loopne
adc
in
mov
mov
push
adc
ljmp
add
insb
je
lods
insl
ret
and
test
adc
test
cmp
cld
dec
mov
adc
out
or
sbb
sub
aaa
mov
aad
adc
xchg
addr16
dec
mov
mov
test
in
mov
ret
insb
into
and
push
shrb
push
sub
or
data16
dec
loope
out
movsl
andb
push
or
mov
jp
push
sub
dec
push
sahf
fadds
mov
shll
int
pop
aad
addr16
adc
push
insb
rcrb
and
test
test
arpl
lahf
xchg
xor
daa
cld
mov
loopne
kmovw
pop
mov
and
outsb
jl
pop
xchg
hlt
mov
mov
in
cltd
icebp
mov
in
cmp
pop
push
adc
mov
addr16
sbb
xchg
cmp
pop
or
insl
mov
pop
pop
jl
popf
adc
push
movsl
mov
int
xlat
es
sbb
imul
ret
ds
push
loopne
mov
out
sbb
sbb
jecxz
push
jmp
fldl
mov
and
insb
xor
ja
outsl
inc
xchg
aaa
int
shrb
jmp
aas
daa
int3
cmpsl
xchg
arpl
jecxz
clc
ret
adc
test
mov
xor
push
add
es
push
ljmp
loopne
dec
scas
test
ret
xorb
ficoms
pop
into
push
data16
lcall
or
insl
mov
cltd
inc
lea
sbb
dec
adc
add
or
insb
xor
mov
sbb
andl
add
pop
push
mov
ja
out
sbb
sti
inc
pop
jne
std
in
out
xor
jmp
int
loope
nop
xorl
cmp
pop
adc
adc
out
xorps
push
jnp
cmp
test
cmp
es
push
les
xchg
frstor
es
fcomp
test
cs
sbb
arpl
hlt
mov
insl
dec
or
rcrl
fmull
cs
out
cwtl
pop
mull
cmp
mov
ljmp
mov
mov
stc
mov
add
lret
ret
dec
or
aas
inc
jecxz
or
wrmsr
shrb
enter
aad
pop
pop
shlb
xor
lock
mov
or
xor
out
es
int
pop
push
inc
jns
aad
push
lods
clc
imul
pop
mov
insl
dec
dec
orl
sub
mov
fldl
sub
in
in
add
out
inc
or
inc
or
xlat
andb
xchg
sub
lods
popf
jmp
xchg
pop
lret
test
hlt
rclb
sbb
outsl
cmp
mov
in
cmpsb
add
enter
mov
jl
and
imul
or
jge
mov
andb
push
movb
fcomps
add
into
lock
jmp
pop
shlb
test
xlat
hlt
mov
sbb
jbe
push
lret
iret
mov
out
mov
inc
loope
iret
xchg
xchg
cmp
ss
push
int
movsw
hlt
cli
pop
xchg
pop
add
xchg
mov
and
jg
hlt
rclb
add
hlt
mov
sub
mov
sub
sub
call
lods
mov
imul
push
sub
insl
ret
mov
jmp
pop
xlat
cmp
push
inc
decl
shr
jo
xor
push
shlb
das
and
inc
adc
addr16
outsb
jne
mov
out
in
les
mov
icebp
scas
adc
cmpsl
push
cmp
lret
out
data16
pop
rclb
ret
or
sbb
pop
out
mov
out
arpl
push
stos
sub
in
testb
mov
loope
add
imull
fbld
pushf
xchg
out
xchg
fnsave
movsl
add
mov
ret
loop
mov
fwait
push
or
or
jmp
aam
ret
popf
test
jbe
into
js
lds
adc
sarl
ja
pop
cmp
dec
out
arpl
jb
out
adc
enter
faddl
aas
mov
mov
das
pop
or
jecxz
sbb
idivb
or
adc
imul
push
mov
mov
out
pop
mov
dec
cwtl
lock
gs
mov
xor
mov
add
sbb
jmp
aam
shlb
out
ja
insb
test
push
movsl
mov
xchg
jl
out
je
call
pop
test
je
lods
add
sub
fisubs
or
push
pop
lret
test
cmpsb
lods
das
andl
das
shl
das
ds
add
and
mov
mov
dec
and
fnstcw
mov
repnz
jmp
inc
push
loop
jle,pn
jno
jne
inc
fcoml
push
call
mov
cltd
push
lcall
das
sub
and
stos
flds
movsl
pop
inc
fs
test
jl
push
ret
sbb
lods
cld
or
neg
cmp
cmp
mov
xor
cld
sbb
leave
inc
mov
std
cmp
pop
loop
pop
dec
rorb
insb
cmp
mov
pop
add
inc
addl
outsb
ds
and
aas
mov
and
push
fbstp
mov
jns
adc
movsl
adc
jg
test
sarb
cld
mov
jp
rcrb
test
xor
cmp
xchg
xchg
arpl
dec
ret
xchg
push
dec
clc
jmp
mov
outsb
adc
movsb
inc
sbb
jb
push
mov
pop
add
mov
jo
sub
popf
test
adc
pop
push
inc
xlat
pextrw
mov
xlat
ficoml
jl
pusha
add
xor
xchg
sbb
cmp
xchg
adc
shlb
idivl
lret
insb
pop
mov
sahf
out
or
subb
lods
pop
push
or
popf
lcall
jno
sti
push
sub
rol
add
loope
movsb
dec
ja
dec
into
jg
inc
push
xchg
test
jmp
jg
int
xor
lods
add
mov
mov
xor
jle
xchg
xlat
movsl
ss
cmp
mov
shr
jg
xor
addr16
add
unpcklps
cmpsl
decb
push
ja
xchg
xchg
into
inc
fs
ds
dec
dec
sub
mov
adc
push
scas
adc
and
push
lods
cmp
pushf
jl
xlat
outsb
jecxz
test
lods
inc
jmp
push
aaa
push
outsb
push
xchg
test
cli
xor
xor
jmp
int3
cli
and
test
std
inc
inc
push
scas
adcl
push
push
mov
rorb
in
inc
cmp
add
cltd
lods
ss
mov
aad
aad
in
out
jl
ficomps
push
xchg
mov
xchg
fsubs
adc
mov
scas
xor
in
movsb
rcrl
out
popf
push
shlb
dec
les
push
cmp
fcmovnb
std
jle
lea
mov
sbb
dec
jb
mov
rcl
pop
aad
jae
and
lret
or
es
xor
ret
sub
cld
pushf
lods
pop
stos
mov
movsl
sbb
mov
mov
add
in
gs
xor
dec
dec
test
aaa
cmp
decb
mov
mov
loop,pt
push
lea
lods
hlt
lret
dec
popf
outsl
loop
push
aaa
add
out
or
sub
and
rorb
pop
out
mov
pop
inc
or
mov
push
mov
push
add
mov
sub
outsl
dec
sbb
and
in
jne
insl
movsl
mov
push
xchg
imul
inc
xchg
sbb
xchg
inc
stc
mov
js
mov
mov
and
pop
mov
push
xor
nop
in
aam
pushl
jecxz
xchg
aas
mov
jle
mov
mov
push
subl
into
les
cmpb
andl
insb
cmp
lods
fs
pop
mov
push
enter
pop
dec
dec
mov
mov
scas
push
or
popa
xchg
mov
xchg
dec
scas
jl
lock
and
adc
xchg
fs
outsb
rcrb
fiadds
lds
mov
jno
jae
lahf
cmp
int
in
pop
jb
mov
int
sbb
inc
jb
xchg
ret
and
cmpxchg
push
xor
mov
sbb
push
jmp
loope
mov
aam
es
mov
jnp
pop
cmp
mov
inc
push
sub
das
and
mov
fisubrl
int3
pop
mov
in
mov
jne
stos
hlt
cmpsl
fucomp
sbb
sub
adc
bnd
shlb
xor
push
pop
gs
push
incb
push
adc
fidivrs
data16
cmp
ja
sahf
int
in
in
loope
jo
sub
into
insl
insl
mov
adc
sub
inc
dec
insb
loope
jmp
mov
imul
push
fwait
inc
jb
nop
and
inc
inc
jne
cltd
stos
inc
xchg
mov
or
push
sub
test
ja
add
shll
repnz
adc
dec
aaa
pop
push
pop
add
jnp
daa
inc
in
icebp
and
jge
xchg
in
jne
test
mov
jns
jb
cmp
or
hlt
jo
stos
push
aaa
je
aas
inc
stos
cltd
out
orb
leave
dec
lods
mov
mov
cmp
push
clc
pop
xchg
xchg
and
push
stos
or
sbb
stc
mov
pop
and
into
cs
orl
adc
rcll
and
mov
clc
xor
push
add
sahf
sti
shr
lcall
xor
cmpb
push
fisubrl
leave
sub
stos
incb
cmpsl
and
cmp
xorl
je
or
push
fbld
and
hlt
push
fsubs
movsl
or
jge
or
shlb
aas
or
mov
mov
push
dec
data16
into
cs
push
fnstsw
and
jae
call
dec
cmp
into
sti
lock
add
sbb
xor
shlb
lods
mov
ffree
outsb
stos
int
jb
pop
dec
sub
mov
push
add
xor
add
xchg
rol
dec
cs
roll
xchg
inc
add
and
and
popf
xchg
js
sub
dec
pushl
test
pusha
mov
jbe
insl
cwtl
cmp
sbb
xor
mov
aam
add
mov
data16
jp
rclb
fimuls
scas
jae
inc
sbb
mov
ds
es
aam
js
leave
jbe
nop
fdivp
jnp
xchg
clc
jae
js
ja
lcall
sarl
lret
adc
sub
push
push
fmuls
ret
xchg
pop
adc
testb
bound
sbb
fists
mov
mov
clc
adc
pop
lret
cli
inc
repz
mov
adc
pop
or
push
dec
js
mov
mov
pop
fwait
loop
imul
aam
xchg
in
xchg
adc
dec
es
dec
jbe
sbbl
mov
popa
push
jnp
pop
jno
mov
iret
pop
cmc
arpl
fimull
cmp
or
inc
divl
push
push
ja
int
test
ficompl
mov
loop
or
mov
mov
call
vcvtsi2ssl
and
scas
ret
mov
test
jecxz
xor
pop
jnp
sub
fistl
rolb
sub
fwait
or
out
cmc
mov
and
ror
dec
mov
aam
cli
scas
mov
flds
sbb
orl
negb
jnp
stc
xchg
pop
fs
xchg
jg
fs
jo
adcb
out
mov
addb
jno
mov
adcl
mov
mov
push
jmp
enter
mov
int
jnp
mov
and
sahf
or
stos
iret
ss
add
test
push
xchg
daa
and
adc
pop
inc
sbb
adc
je
xor
dec
jle
in
dec
insl
inc
fcmovne
sbb
mov
lret
jns
add
aas
clc
push
lahf
adc
stos
cli
lea
fisubrl
stos
pushf
cmp
aad
bound
mov
add
cmp
popa
lret
add
jb,pn
fbld
fdivs
cmpb
call
ret
or
cld
out
insb
dec
dec
and
and
jp
jecxz
movsl
fisubrl
adc
mov
sbb
jl
rorl
rcll
xor
pcmpgtb
imul
in
sbb
rclb
add
jg
lahf
xor
jae
adc
sahf
xchg
in
rcr
or
iret
add
mov
aaa
test
out
jge
cli
rolb
imul
add
mov
push
mov
fnsave
aas
jb
pop
ss
inc
push
loope
add
imul
int
push
pop
inc
adc
mov
lahf
mov
lds
pop
dec
stos
movsl
cwtl
insb
daa
pop
mov
repz
and
aas
fisttpll
out
push
adc
imul
hlt
mov
jmp
cmpl
mov
lret
jbe
and
xchg
adc
pop
pop
xchg
repnz
or
pop
icebp
or
addr16
loopne
xchg
scas
shl
insb
xor
jp
dec
mov
push
adc
and
adc
int
xchg
orl
mov
adc
jno
shrb
out
nop
and
arpl
jmp
or
cltd
adc
mov
xchg
lahf
daa
mov
dec
rolb
mov
adc
add
fxam
push
outsb
and
pop
sahf
fisttpll
mov
push
mov
xchg
mov
jecxz
xor
jnp
jbe
loope
repz
jne
xlat
loop
add
nop
les
xchg
xor
xchg
push
adc
popa
hlt
inc
lods
addr16
add
rcr
or
ret
fsubp
loope
push
adc
shrl
xor
adc
imulb
aaa
pop
pop
inc
cltd
and
or
pop
cmpsb
in
mov
push
outsb
popa
jb
xchg
cmpsl
jne
icebp
data16
mov
ljmp
aam
stos
add
data16
gs
ljmp
adc
cmc
dec
mov
dec
pop
mov
dec
fwait
xorb
inc
cli
shl
mov
ret
pusha
xchg
dec
jo
mov
sub
icebp
mov
lds
insl
xlat
or
jge
mov
jno
adc
adc
mov
mov
addr16
clc
fs
push
int3
adc
and
cmp
mov
arpl
xchg
xchg
cs
dec
insb
pop
enter
sbb
mov
popf
ret
sahf
adc
lea
lods
adc
int3
mov
ficoml
fistl
pop
daa
in
and
stc
mov
push
out
popa
jmp
or
add
ss
out
or
dec
sbb
lds
xor
cmpsb
sbb
pop
jo
xor
mov
pop
add
loopne
jge
into
int
jle
sub
cltd
stos
cmpsb
in
or
pop
shlb
insl
dec
rol
aad
inc
sub
ret
cmovge
or
iret
mov
jge
cmpl
jle
aam
in
leave
sbb
adc
and
cmp
scas
jp
mov
inc
push
ror
rclb
add
adc
stos
cwtl
push
subl
sbb
and
daa
subb
pop
lods
enter
xchg
pop
std
aad
cmp
jne
xor
jg
ficoml
scas
fcomip
ss
mov
stos
pushf
xchg
xchg
dec
inc
mov
out
mov
lock
sahf
sbb
out
mov
jecxz
adc
scas
pop
xchg
mov
jb
movsl
inc
andb
lahf
psubd
addb
jns
xchg
fdivl
xor
inc
or
rclb
dec
fcmovnu
xor
testl
les
cltd
out
cld
out
inc
xor
sbb
hlt
icebp
cwtl
dec
mov
repz
rol
mov
mov
add
push
inc
xchg
test
add
push
pop
push
mov
iret
filds
fucom
sub
outsb
cwtl
out
pop
ja
jns
inc
xchg
push
push
jns
leave
sub
insb
cld
mov
sbb
lock
jns
sub
dec
fistpl
push
das
or
sahf
icebp
div
cs
fldt
xorl
scas
mov
int
daa
push
std
dec
out
xor
mov
xor
jecxz
hlt
cmpsb
dec
xor
mov
nop
sbb
test
in
cmp
cmp
lcall
test
cltd
inc
scas
in
bt
mov
mov
fmuls
addr16
inc
in
insl
test
in
mov
lret
push
lock
xchg
call
stos
xlat
adc
mov
cmp
fdivr
movb
and
sbb
mov
cmp
and
dec
adc
andb
pop
and
fmuls
push
dec
push
aam
outsl
ret
test
inc
aam
inc
and
lods
ljmp
mov
xchg
cli
arpl
inc
cmpsl
or
nop
mov
outsl
int
mov
push
cs
into
sti
mov
loope
stos
inc
xor
or
fcomip
cwtl
sahf
jnp
xchg
cmp
int
sub
cmp
inc
scas
jecxz
sbbl
dec
ret
and
push
jl
adc
pop
dec
js
push
xor
in
into
icebp
gs
mov
push
push
out
repnz
les
dec
ret
jg
mov
sub
in
adc
in
std
inc
mov
insb
mov
or
or
mov
xor
xor
push
xor
mov
jno
imul
test
out
enter
jmp
insl
mov
lods
mov
jl
aam
js
pop
icebp
cwtl
in
push
hlt
or
xchg
insl
cmc
ja
out
add
sub
shlb
jb
mov
insb
pop
insl
daa
pop
flds
xor
pop
mov
out
push
jne
mov
inc
ss
pop
imul
faddp
divps
sub
ja
arpl
mov
xor
lods
lods
test
and
repnz
sti
icebp
lcall
sahf
repnz
push
and
sub
loope
push
jb
fs
aas
cmp
and
lods
inc
jmp
cmp
pop
lea
into
ret
adc
call
adcb
mov
lods
xchg
cmp
mov
lds
daa
imul
sbb
pop
jns
iret
add
lea
mov
lock
mov
movsl
add
cld
or
sahf
pop
mov
jns
add
push
pushf
xchg
outsb
adc
add
mov
jge
orb
repz
stos
fstpl
pop
int3
pop
mov
xlat
sub
shl
inc
or
pop
xor
xchg
lea
outsl
mov
pop
push
stos
xchg
mov
push
icebp
rcrl
adc
mov
pop
repz
imul
jae
gs
inc
or
mov
xchg
add
stos
cltd
dec
inc
fwait
hlt
or
out
adc
ret
lea
cmp
lea
mov
or
in
out
cmp
out
enter
clc
fyl2xp1
shr
jnp
pop
out
in
imul
pop
push
scas
mov
lret
movsl
or
fucomip
add
cmp
rcll
mov
pop
lock
and
test
xor
call
fldt
xchg
test
jle
fdivrs
sub
xchg
add
popa
das
or
in
pushw
adc
in
loopne
cmc
cs
lds
or
sub
sti
push
bound
test
int
ficoms
and
xchg
mov
pop
cltd
les
xor
pushf
mov
pop
jecxz
xchg
or
lahf
or
scas
add
in
sbb
jbe
or
sub
jns
pop
mov
mov
cmp
cltd
pop
push
mov
sahf
sbb
jb
push
adc
push
loope
pop
cli
rep
negb
ret
mov
daa
sbb
cs
pushf
xlat
push
mov
shll
aam
rcrb
jl
mov
xor
inc
dec
lret
sahf
and
jno
jnp
int3
fidivs
dec
sahf
shrb
jl
inc
inc
fwait
dec
fdivr
mov
sub
and
ret
sar
mov
mov
mov
pop
imul
pop
mov
adc
adcl
js
cmpb
and
cmp
mov
cmp
add
in
loop
repnz
jecxz
xlat
mov
test
scas
cmpb
add
movsb
add
fsub
sarl
insl
sbb
pop
add
popa
jmp
dec
xchg
out
stc
js
notl
push
pop
out
scas
test
xor
jg
mov
std
sarb
jne
aam
roll
cld
mov
popa
mov
mov
int3
loop
sbb
adc
fisttps
sbb
popf
mov
scas
movl
or
jle
filds
in
xchg
add
lret
xchg
inc
enter
or
rorl
xchg
and
insl
pop
daa
int
decb
aas
aad
sbb
jle
jbe
or
lds
mov
xchg
mov
mov
icebp
aam
les
rolb
xor
hlt
imul
mov
jle
add
dec
pop
out
push
adc
adc
lret
mov
enter
sbb
in
divl
fiadds
push
jg
and
pushf
jno
lock
mov
orl
icebp
lods
add
and
sbb
pusha
push
gs
push
dec
lahf
mov
push
jl
out
pusha
and
mov
hlt
xor
add
std
jle
js
mov
xor
add
gs
mov
pop
and
and
testl
std
xchg
mov
mov
cmc
popa
pop
aaa
lret
cmp
imull
dec
nop
push
or
pop
mov
andb
cmp
push
xchg
jecxz
lret
xchg
scas
jo
out
dec
push
pop
pop
inc
lock
scas
dec
ja
inc
shll
fidivl
shrl
ret
in
pusha
jp
in
js
jcxz
xor
aam
cmp
push
call
inc
mov
popa
pop
adc
sbb
gs
sbb
std
lret
fisttpll
jge
je
lods
adc
sbb
fdivs
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
xlat
fsubl
orl
sbb
rclb
subb
lock
mov
icebp
flds
jp
or
sbb
je
jno
test
xchg
js,pn
mov
mov
popa
shll
push
xchg
add
pop
out
ss
imul
je
rol
js
sbb
es
push
int
mov
popf
sbb
es
xchg
and
push
cld
lock
cld
mov
loope
pop
pop
scas
pop
sarb
xchg
jecxz
inc
mov
popa
or
pop
dec
lock
fisttpll
dec
repz
fsts
pop
sub
movsb
pop
repz
lahf
scas
scas
or
icebp
mov
xor
push
sub
jl
imul
and
push
push
out
mov
scas
fs
movsl
and
xchg
pop
shrl
dec
movsl
push
or
mov
enter
add
je
nop
sar
ljmp
adc
icebp
jb
jnp
andl
ficompl
sarl
cmp
xor
clc
xor
inc
insb
es
stos
aad
dec
mov
aaa
xlat
jns
sub
filds
mov
and
imul
cltd
loopne
frstor
lea
mov
push
lahf
repnz
mov
ret
jne
mov
and
mov
jae
mov
fiadds
cli
sub
into
push
mov
lcall
out
sarb
and
sub
fidivrl
and
lods
ss
loope
xchg
repz
inc
xchg
int
push
insl
push
pusha
or
ljmp
pop
call
mov
lds
lods
scas
ret
test
int3
mov
sub
mov
imul
pop
push
in
es
jno
imul
daa
or
push
inc
mov
das
mov
jb
jmp
adc
xor
jge
cwtl
push
in
add
jp
test
cmpb
mov
iret
popa
push
mov
jb
fidivl
mov
xor
cmp
je
cmp
adc
mov
add
mov
push
enter
in
xor
add
pushf
push
cld
cwtl
or
jle
jecxz
jbe
or
leave
xchg
mov
push
adc
adc
or
into
js
mov
push
sti
stos
xlat
mov
add
fildll
or
adc
mov
jae
push
outsb
mov
jb
incl
fwait
mov
sahf
loopne
clc
xchg
cmp
pop
stos
dec
mov
aas
out
flds
mov
loopne
ja
js
cmp
stos
inc
mov
or
or
jl
loop
pop
sti
lea
mov
mov
lods
stos
pop
pop
imul
bound
out
push
xchg
out
xchg
sbb
ret
sbb
leave
rorb
insl
mov
dec
add
or
cltd
sbb
mov
mov
gs
push
push
xchg
js
xorb
xchg
ret
mov
jne
jmp
int3
scas
sub
daa
dec
inc
lret
add
adc
mov
jnp
pop
or
jecxz
dec
incb
fwait
xchg
mov
gs
clc
popa
rcl
sbb
mov
pop
jmp
jp
shrb
into
jmp
rcl
call
and
arpl
jns
inc
fbstp
in
insl
mov
xchg
dec
inc
pop
mov
jno
jns
cmc
add
mov
pop
je
lds
jecxz
mov
bound
add
pusha
in
ret
and
fwait
je
add
loop
xchg
xor
add
pop
mov
enter
cli
push
xchg
adc
mov
xchg
adc
leave
mov
xor
mov
cli
bound
mov
clc
mov
out
add
lods
outsl
loopne
dec
repz
ja
jmp
inc
js
test
adc
andl
jb
in
sub
xchg
cmp
inc
mov
mov
scas
jle
dec
mov
jnp
mov
lods
xlat
stc
sbb
or
dec
lods
pop
sbb
sbb
sub
sub
mov
insl
pop
mov
adc
pop
mov
add
paddb
call
iret
cmp
ret
xor
adc
sbb
fcompl
rcrb
jge
add
fcomip
in
mov
das
xor
dec
mov
xor
pop
bound
sub
pop
sti
sahf
scas
jl
mov
cmpsb
pop
cmp
cwtl
sar
outsb
cs
test
sub
lret
call
es
push
stos
loope
xchg
jp
ja
sub
xchg
scas
or
mov
cmp
mov
and
sub
jg
lcall
test
inc
sub
fdivrl
incl
cs
jo
add
xchg
jnp
xchg
pusha
xchg
lea
inc
add
outsb
mov
xor
add
inc
or
and
in
aaa
addr16
push
sub
and
cmpsb
push
pop
and
icebp
dec
fldl
lock
dec
sti
lods
ss
xor
addb
cmp
xchg
add
bound
dec
sbb
jge
daa
loop
pop
xchg
pop
pop
andps
inc
bound
cld
add
xlat
add
adcb
andl
jmp
adc
dec
or
bound
repnz
adc
mov
xchg
cmpsl
int3
mov
data16
popf
push
mov
push
and
pop
and
inc
sub
ret
repnz
lock
push
pop
orl
cwtl
shlb
dec
mov
stos
jp
ja
and
inc
jp
and
dec
pop
pusha
das
inc
aam
sbb
inc
orb
xor
in
jnp
jnp
test
inc
mov
aas
dec
fiadds
mov
fsubs
in
or
hlt
mov
xchg
jecxz
or
jp
sub
sbb
lret
jmp
gs
jno
mov
xor
push
fcmovnb
xor
data16
inc
insb
xchg
lds
add
bound
mull
or
daa
cli
cmp
lods
mov
xor
dec
loope
ficoms
cwtl
and
stos
out
jg
jle
int
lods
pop
xchg
xor
in
sub
fdiv
mov
adc
push
push
std
lcall
movsl
xorl
popa
test
dec
fbstp
push
push
clc
pop
mov
sub
push
dec
mov
and
les
ljmp
movsb
mov
inc
mov
lret
mov
lds
pop
cmp
out
pop
lods
inc
fbstp
enter
pop
jo
idiv
nop
add
or
shl
ljmp
movsb
pop
fldt
mov
dec
dec
fimuls
push
pop
movsl
push
test
imul
sarl
sbb
movsl
ds
add
int
or
out
aam
das
cmp
ds
inc
test
mov
add
xchg
insb
sbb
in
push
mov
idiv
inc
aas
rclb
xor
enter
inc
pushl
xor
rol
sbb
in
push
or
inc
sbb
ja
aam
movsb
sbb
les
xchg
mov
outsb
shll
mov
add
aaa
jo
push
dec
dec
mov
les
test
jmp
pop
and
jns
iret
daa
hlt
inc
lret
ret
sahf
dec
in
sar
fsts
adc
fistps
repz
test
into
mov
push
sub
fldl
or
push
sbb
push
and
xchg
data16
and
xchg
and
push
into
mov
cmp
insl
jb
push
je
and
fmulp
ret
call
jnp
xchg
inc
sbb
and
sub
push
xor
pushf
aaa
mov
ret
push
or
mov
icebp
push
sbb
push
sub
pop
dec
mov
int3
stos
ret
les
in
push
push
inc
xchg
xor
inc
aaa
dec
lret
pop
or
or
push
mov
mov
nop
sbb
pop
cmp
or
mov
out
mov
push
or
call
jbe
pushf
cmpsl
push
cli
xor
iret
outsl
mov
stc
test
xor
ucomiss
sbb
adc
cltd
insl
push
ret
or
add
incl
add
pop
int
lret
fcmovnbe
xchg
pop
xorl
xchg
and
mov
pop
push
push
popf
ret
outsb
iret
xchg
data16
add
in
es
mov
mov
mov
das
pop
cmp
dec
jne
mov
mov
mov
cmpsl
pusha
push
push
dec
ja
std
dec
xor
out
mov
clc
xchg
jg
push
jnp
dec
inc
or
mov
cltd
xchg
movsb
sub
decl
xorl
stc
adc
insb
sub
mov
jae
pop
cmp
aas
add
adc
shld
imul
pop
jl
aam
cltd
movl
mov
dec
pop
xchg
pusha
mov
mov
mov
jecxz
xchg
add
jno
repnz
jecxz
or
arpl
shll
mov
push
dec
addb
xchg
je
dec
mov
cmp
cmpsl
outsl
push
or
xor
in
mov
ret
push
loopne
decl
cmp
add
jp
ffree
sarl
stc
shll
pop
xor
mov
call
mov
or
xor
loopne
dec
cwtl
pop
popl
clc
das
leave
rclb
imul
out
aad
fisubrs
out
ror
mov
xchg
sub
mov
js
fidivl
mov
adc
dec
adc
push
inc
push
sbb
xor
mov
pop
jno
out
lcall
dec
dec
ljmp
mov
push
dec
arpl
frstor
nop
jb
push
das
in
lcall
notb
sub
hlt
xlat
push
pusha
add
and
jp
mov
push
jo,pt
mov
add
fwait
sub
gs
fcmovnb
dec
lea
sub
mov
dec
mov
dec
das
or
push
sub
fstps
adc
dec
xor
fisubs
repnz
xor
in
loop
pop
sbb
or
xchg
mov
sbb
xchg
repz
pop
dec
daa
xchg
inc
pop
mov
shlb
mov
mov
loope
push
xor
rcr
pop
mov
sbb
mov
sub
sbb
push
int3
jb
pop
inc
insb
or
mov
sub
pop
js
ja
in
int3
fimull
cmpsb
mov
loopne
popf
in
cltd
pop
aad
jle
icebp
nop
jns
adc
push
out
mov
int3
push
dec
jbe
mov
fsubrl
repnz
mov
aas
cli
or
mov
je
add
out
mov
xchg
and
ror
lahf
mov
or
or
je
mov
sub
and
aam
jbe
movsl
adc
rcll
stc
out
adc
push
pusha
jle
adc
cli
inc
clc
inc
mov
pop
cli
or
ds
pop
pushf
push
cmp
mov
ret
outsb
cwtl
data16
cmp
jns
cmp
and
mov
xor
xor
inc
mov
les
jne
dec
mov
leave
cltd
int
cmp
ror
jne
std
enter
cmc
aad
sbb
cmp
and
xor
jp
decl
cmp
pop
cli
cmc
add
loope
cmp
orb
sbb
mov
ljmp
leave
test
mov
sub
test
cmp
cmp
push
pop
pop
cmp
dec
adc
sbb
and
in
sub
out
out
inc
add
lock
bound
cmc
out
mov
xchg
in
sti
adc
into
rcll
aaa
pop
or
insl
cmpsb
mov
es
mov
icebp
add
lahf
orb
xorb
jmp
inc
out
adc
movsb
xchg
pop
leave
ret
fstl
iret
imul
ljmp
movsl
inc
xchg
mov
dec
sarb
cs
iret
mov
inc
cli
popa
loope
pop
jne
imul
sub
movsl
outsl
jae
inc
call
mov
and
pop
aad
loopne
outsb
xchg
aas
mov
std
inc
jne
rolb
add
out
ljmp
jns
sub
mov
ret
fmuls
out
fxch
sbb
push
mov
outsb
push
sbb
cltd
adc
sbb
jne
mov
insb
push
cmp
cs
pop
mov
mov
andl
aaa
shl
sub
loopne
adc
std
mov
fmull
add
xchg
inc
icebp
js
scas
mov
mov
les
dec
jmp
xchg
lds
cmp
add
dec
adc
or
subl
ljmp
sub
cmpsb
inc
aas
fucomp
loope
mov
jb
mov
cltd
imulb
push
jb
jg
add
dec
push
aam
or
mov
repz
xchg
lock
or
sbb
cmp
or
jbe
dec
add
scas
call
cmpsb
out
xor
loope
pop
add
push
out
pop
or
sub
push
sub
rolb
aad
shl
stos
subb
lock
repnz
lahf
inc
jl
cli
aaa
pop
ss
lds
das
ret
jle
push
xor
int
cwtl
insl
cmp
insl
add
rclb
fwait
mov
push
xor
mov
aad
sbb
mov
dec
iret
rcr
loopne
repz
mov
sbb
imull
enter
add
add
inc
inc
test
cmc
add
les
cmp
pop
add
addl
mov
jle
sbb
repnz
jbe
mov
pop
das
cmp
out
cmp
mov
mov
xchg
repnz
xor
xchg
mov
gs
cmp
in
jnp
push
gs
or
add
and
les
cmp
cmp
sub
pop
xchg
loopne
sti
cmp
fimuls
arpl
jo
sbb
movl
push
xor
out
xor
mov
mov
pop
mov
mov
and
lret
insl
inc
aaa
xor
rcrl
xchg
lock
bnd
mov
pop
xor
lret
mov
xchg
mov
pushf
repnz
bnd
push
call
out
cwtl
clc
or
cmp
push
imul
lock
fmull
mov
mov
dec
jmp
pop
gs
xlat
and
or
inc
pop
jae
lods
add
aad
add
cld
push
pop
sub
lahf
andb
hlt
mov
sbb
mov
xchg
idivb
jae
arpl
lea
popf
rcrb
insb
mov
les
lock
arpl
xchg
clc
inc
jns
imul
jmp
mov
push
sub
cmc
mov
cmc
pop
cmp
sub
lcall
mov
call
leave
pushf
mov
aam
pop
and
mov
mov
stos
arpl
mov
repnz
ror
out
cmp
loop
add
testb
mov
pop
daa
call
aaa
lea
add
insb
pusha
or
xor
or
in
bnd
push
mov
scas
jmp
xchg
into
jnp
xor
inc
mov
cmp
sub
mov
xchg
push
pop
loope
data16
fnstenv
sub
iret
mov
dec
mov
aas
jno
int
mulb
fisttpll
adc
mov
outsl
hlt
pop
push
push
push
fisubs
fwait
xor
test
cmp
jge
sbb
push
stos
xor
mov
or
leave
xlat
pop
frstor
popf
lea
lldt
jp
cmp
out
mov
aad
sub
xchg
nop
dec
mov
mov
mov
dec
aas
out
jl
dec
add
cmp
sbb
sub
divl
adc
jne
not
leave
mov
int
jns
mov
lcall
fidivrl
stc
int
cmc
inc
add
jbe
mov
lds
test
adc
les
sub
jecxz
sbb
mov
lods
rcrl
jne
pop
dec
jle
mov
mov
lret
push
lds
fidivs
xor
pop
fistpll
adc
lods
es
icebp
adc
jae
sbb
aam
mov
aam
andl
pop
in
dec
add
pop
scas
jmp
sbb
jo
push
inc
xchg
stos
cmp
ljmp
sub
mov
icebp
inc
inc
int3
jb
negl
cmpsb
enter
pop
sar
add
int
push
sbb
loop
repnz
pop
mov
and
fimull
pop
pop
mov
hlt
push
fcompl
lret
fidivrs
xchg
aas
scas
popf
rorb
test
adc
mov
nop
mov
stos
bound
iret
ds
test
mov
sbb
divl
ds
jmp
stc
mov
cwtl
xlat
dec
push
popf
add
ret
dec
mov
repnz
add
ja
nop
popf
inc
clc
sub
shll
ret
mul
lea
mov
faddl
mov
in
std
push
mov
movsl
fwait
pop
inc
subl
test
gs
outsl
test
jmp
stos
loopne
in
push
sbb
mov
inc
cmp
jg
stos
xor
mov
jl
fcoml
sbb
out
lods
adcb
call
addr16
bound
cmpsl
mov
and
sar
add
cmpsb
pop
cmc
push
lea
sarl
cmpsb
mov
jmp
int3
mov
cltd
cmp
pop
mov
in
mov
movsl
xor
rcl
pusha
shrl
les
cmp
movsb
std
fbld
mull
jecxz
hlt
pop
popl
lcall
sbb
mov
mov
sub
or
lods
inc
mov
xchg
ret
sub
lcall
mov
inc
mov
inc
pop
xor
dec
lcall
bound
xor
cmp
insl
int3
sub
and
cmc
mov
mov
adc
and
xchg
xorb
push
pop
out
test
adc
fs
add
fadds
xor
lea
pop
test
mov
fcmovb
sub
xchg
xchg
fsubs
mov
iret
call
into
stos
test
fisttpl
push
xchg
mov
cmp
dec
jns
lods
lods
jg
mov
std
push
in
or
mov
mov
test
lahf
dec
add
test
fcmovbe
add
sub
xchg
cmp
or
mov
incb
and
out
test
or
frstor
mov
push
pop
fcoms
push
sbb
mov
push
cwtl
mov
push
adc
fldl
adc
ficoms
testb
mov
daa
pop
cmp
int3
mov
xor
inc
mov
sbb
cmp
cmp
or
xchg
sbb
adc
pop
dec
aas
pop
test
lahf
test
xor
inc
cmp
cmp
xor
xchg
test
ficomps
mov
fldenv
sbb
dec
outsl
std
in
sti
or
fcoml
mov
fcoms
lods
stos
aad
mov
mov
call
das
push
sub
pop
out
pop
dec
jge
js
inc
daa
sbb
sahf
or
mov
stos
mov
lods
mov
imul
stos
lcall
dec
cmp
pop
movsb
cmp
popf
push
fisubl
test
call
aaa
adc
mov
sarb
leave
mov
pop
and
push
cmp
xor
cmp
incb
mov
pop
mov
clc
mov
sti
fstl
movsl
jg
adc
scas
inc
adc
mov
inc
or
push
stc
xchg
test
fnstenv
hlt
mov
idiv
popf
and
xchg
ficoms
mov
or
jge
jno
ret
dec
cmp
dec
mov
pop
jns
int
add
cli
ds
test
cmpsl
dec
jg
icebp
pop
pop
fldcw
rclb
and
lods
xchg
out
pusha
or
hlt
pop
add
mov
dec
mov
ss
push
aaa
in
stos
jb
ss
in
ds
sub
mov
mov
aad
out
xor
push
xchg
in
test
pop
pop
clc
negl
inc
rcrl
test
xchg
push
jne
addb
insl
call
js
pushf
test
jae
fidivl
pop
fwait
pop
pusha
jnp
outsb
in
or
mov
lds
sub
sbb
or
add
mov
jnp
fldcw
lret
push
mov
pop
or
xchg
lahf
xchg
inc
mov
push
xor
sbb
xor
xchg
cmc
xor
pop
inc
pusha
jg
testl
push
popf
pop
fbld
popf
ljmp
jg
imul
jns
pop
sbb
dec
sbb
inc
mov
stos
mov
lods
pop
out
scas
cmp
mov
insl
scas
sbb
inc
xchg
pop
fmulp
in
call
rcrl
sbb
xchg
fwait
repz
cmp
daa
push
pushf
mov
aam
adc
test
stc
fisttpl
mov
shrb
push
xor
data16
mov
lcall
adcl
push
sahf
fcoml
cli
mov
dec
xchg
add
inc
adc
dec
rorb
inc
lods
sahf
sbb
sub
loopne
scas
xlat
fnstcw
imulb
mov
aaa
mov
jb
or
xchg
popa
dec
cltd
sbb
out
int3
mov
sub
addr16
push
int3
sbb
mov
stos
and
mov
test
cmpl
mov
fiaddl
insb
sub
cwtl
mov
ret
jmp
lahf
add
or
lret
cmc
fimuls
es
icebp
int
shlb
pop
xor
int
jbe
sub
dec
pop
aam
xchg
xchg
repnz
dec
jbe
pusha
or
outsl
pop
cs
xchg
cmpsb
fidivrl
je
xchg
les
arpl
jae
bound
mov
mov
out
shrb
mov
fcomps
mov
roll
inc
lret
mov
xchg
fistps
mov
pop
arpl
repz
imul
lods
cs
out
scas
xlat
xor
popf
add
fcomps
stc
inc
test
jns
aam
icebp
arpl
jns
pop
cmpsl
mov
das
outsl
test
int3
clc
iret
add
stos
xchg
pop
in
xlat
sub
test
test
inc
jne
push
jbe
add
and
je
xor
jl
data16
aas
jno
cli
jnp
sub
fcmovne
xlat
cmp
in
and
push
sub
addb
mov
dec
ds
and
mov
sub
cmp
mov
push
hlt
in
cmp
mov
xchg
mov
ror
or
adc
mov
pop
aam
int
lahf
rolb
xor
call
or
call
xchg
sbbl
popa
push
imul
sbb
dec
sahf
adc
or
sar
js
dec
mov
ret
pusha
lds
ss
sub
push
jno
jg
pusha
cmp
or
data16
dec
pop
lahf
fildl
mov
mov
pushf
cmp
lock
and
mov
cmpsb
loopne
in
aad
out
dec
mov
fcompl
add
fwait
add
lahf
push
cld
push
pop
add
sub
push
scas
push
jno
leave
fstl
in
push
jmp
jmp
inc
ljmp
xorb
mov
cwtl
data16
subl
popa
adc
mov
cmp
push
cmpb
rorl
lds
int3
xor
mov
pop
mov
mov
stos
fnsave
int3
mov
dec
movsl
sar
cs
lret
dec
leave
jo
sub
fwait
jae
cltd
mov
outsl
in
xchg
cs
sub
insb
xor
or
pop
dec
lods
jb
loop
push
mov
pop
xor
push
pushf
mov
std
pop
and
add
shll
push
out
fwait
add
iret
xchg
loope
sbb
loopne
dec
push
mov
ret
out
ja
mov
push
mov
mov
xor
out
mov
xchg
adc
sbb
inc
out
jmp
push
and
xchg
push
push
sub
movsb
lret
pop
nop
push
das
rcrl
cmpsl
aas
aas
jnp
mov
xchg
dec
es
insl
lret
pop
int3
or
imul
add
pop
and
mov
fistpl
imul
popa
and
and
shll
icebp
mov
lcall
sarl
inc
jmp
adc
outsl
xchg
and
mov
imul
xor
loopne
iret
out
fisubs
xor
sub
push
scas
inc
test
ds
xchg
pop
sbb
test
ror
in
and
dec
dec
stos
imul
sub
sbb
mov
inc
popa
out
subl
popa
jo
xchg
cmpl
std
pop
xchg
outsl
fxch
xor
fsubrl
outsb
cmp
jl
xor
lret
bound
xor
inc
pop
andb
and
rcll
xchg
lods
pushf
or
scas
nop
lret
pop
dec
jle
push
jmp
stc
and
mov
shl
push
sbb
insb
cmpl
push
pop
fs
inc
aam
loopne
clc
xchg
jns
jo
cmp
and
shll
inc
sbb
lcall
add
out
rorl
push
add
out
mov
xor
in
xorb
jmp
add
mov
or
cwtl
dec
adc
mov
add
xor
sub
loopne
jecxz
jmp
sub
cmp
sbb
popa
adc
dec
push
in
dec
jmp
cltd
jge
pop
and
and
cmpb
loope
push
jae
das
rcrb
xchg
jecxz
sub
enter
fsubr
adc
pop
jns
call
adc
aas
into
sar
pusha
xchg
push
push
push
ja
rorb
or
out
push
jmp
or
adc
sahf
jl
test
into
pop
fdivrp
xchg
hlt
scas
and
icebp
inc
push
pusha
dec
mov
xchg
sbb
nop
stos
pusha
sbb
mov
mov
and
sbb
push
cmc
popa
aaa
xchg
nop
js
xchg
adc
inc
loope
jmp
fadds
xor
inc
js
ds
jae
clc
pop
iret
sbb
xchg
test
inc
fwait
pop
stos
push
push
ret
aaa
in
enter
cltd
jmp
leave
fs
xor
sbb
das
jl
aaa
push
push
nop
cmpsb
xchg
push
aaa
push
adc
sbb
fst
das
je
call
cs
dec
push
insl
sarl
adc
add
inc
dec
cwtl
in
repnz
int
sbb
jno
pop
jle
movsl
repz
xchg
or
fs
push
test
iret
mov
and
adc
lcall
not
add
fcoms
xor
loop
mov
mov
mov
pop
push
loopne
pop
and
into
and
pop
pop
ficoms
ror
xor
jb
in
out
fistpll
shr
insl
adc
sub
push
dec
les
mov
adc
jb
push
iret
iret
pop
dec
mov
call
xchg
cs
outsl
xchg
pusha
push
jmp
push
clc
enter
lret
ucomiss
mov
inc
call
mov
pop
xor
aaa
mov
in
cmp
loope
push
int
lods
mov
jb
jmp
xchg
cwtl
pusha
enter
movsl
xchg
aas
sbb
inc
sbb
loop
fisubl
fs
pop
les
push
fidivs
ss
sbb
add
inc
fcmovnbe
inc
je
pushf
add
rcr
dec
filds
insl
inc
or
repnz
loope
xor
std
jge
stos
jae
jecxz
psubw
ret
or
pusha
loop
cmpsl
test
mov
xchg
sbb
sub
int
outsb
jnp
arpl
xchg
mov
pop
sti
test
sub
cmp
jp
mov
div
scas
xor
aam
lds
fstpl
pop
mov
mov
into
ret
pop
jecxz
sbb
mov
in
pop
in
fisubl
jne
jecxz
adc
xchg
jmp
mul
aad
in
ret
test
inc
aam
cmp
jb
mov
sbb
mov
lcall
inc
jle
addr16
pop
jno
mov
pop
and
nop
pop
enter
xchg
or
stos
mov
xchg
mov
inc
sbb
cli
jecxz
out
or
sbb
loop
mov
jmp
hlt
mov
or
test
cmp
scas
add
xor
call
sub
sub
mov
sub
and
arpl
mov
adc
pop
pop
adc
mov
lods
push
shll
jl
in
iret
into
mov
pop
fcmovb
jp
ret
cwtl
dec
fsubs
arpl
adc
lcall
test
cmp
dec
mov
lahf
negl
cmp
and
adc
mov
stc
inc
adc
or
adc
roll
imul
stos
pop
xchg
call
sub
sahf
pop
ror
mov
cld
insb
sub
jg
rolb
testl
bound
mov
mov
xchg
enter
sub
sub
jmp
jl
fwait
mov
mov
iret
mov
jb
push
adc
orl
cmpsl
sub
inc
push
popf
push
push
les
sbb
push
pop
xchg
jp
daa
jmp
mull
mov
add
in
loop
xchg
aam
inc
mov
sahf
test
adc
aam
int
stc
mov
call
xchg
cltd
adc
mov
cmp
adc
jl
mov
into
in
and
push
sti
pop
mov
xor
cmc
insl
jno
jg
arpl
cmp
push
xor
inc
jbe
repz
mov
push
sub
adc
repz
jbe
arpl
pop
dec
lret
mov
frstor
mov
rclb
sbb
les
gs
divb
stos
push
and
loop
fwait
jp
arpl
adc
dec
jae
xchg
inc
pop
sub
sub
lds
xchg
pop
jno
push
outsl
mov
lret
test
push
ljmp
dec
popf
mov
xchg
fstl
icebp
stc
negb
imul
aaa
incl
fwait
inc
out
rcrl
les
sub
lea
or
mov
in
addb
movsl
ljmp
rorb
repnz
fwait
mov
mov
pushf
cmp
xor
dec
dec
hlt
ret
in
push
jnp
dec
jmp
mov
mov
mov
sub
mov
popf
mov
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
inc
pushf
sbb
subl
and
jmp
sbb
mov
arpl
ss
testb
push
xchg
cmp
jno
mov
pop
or
clc
xor
pop
mov
sbb
jno
push
push
pop
fstl
aaa
adc
arpl
leave
jg
or
scas
jl
test
push
popa
loopne
pop
adc
push
enter
xchg
je
xor
shl
xor
add
jnp
scas
mov
mov
adc
xorl
pop
dec
filds
push
or
out
inc
sbb
fdivrs
cmp
jae
mov
fcmovnu
jmp
and
dec
int
jnp
cmc
icebp
flds
mov
int
out
pop
int3
lock
inc
dec
enter
fcmovnu
xchg
fcmove
mov
comiss
out
call
mov
push
mov
push
ffree
cwtl
out
andl
inc
popa
rol
sub
rcl
out
pop
lea
jle
imul
es
fs
outsl
nop
xor
sahf
stos
jge
test
cmp
jg
in
pand
pop
int3
int3
sub
adc
fcmove
xchg
cs
pop
out
jge
mov
enter
lods
icebp
arpl
dec
jmp
sub
in
push
mov
ret
add
mov
sub
and
and
inc
mov
mov
add
in
mov
push
js
mov
xchg
dec
popa
sub
xor
inc
lea
jns
sub
xor
mov
jecxz
mov
mov
xor
adc
fisubrl
jl
xor
mov
iret
mov
je
test
cmpsl
push
aaa
mov
inc
ds
cmp
nop
into
pop
inc
in
adc
xchg
mov
jo
ret
into
inc
add
popa
pop
test
es
dec
repz
iret
negl
daa
js
jg
jb
or
in
inc
lea
cmp
lea
jl
xchg
sbb
inc
lods
or
adc
out
and
mov
popf
mov
stc
int3
lret
clc
scas
decl
and
xor
stos
mov
mov
ds
pop
shl
mov
xchg
dec
cs
and
mov
or
cmp
mov
out
lock
pushf
dec
inc
loopne
pop
or
movsl
mov
mov
cwtl
push
xor
in
push
push
cld
add
adc
dec
sub
mov
push
test
sbb
iret
mov
sub
cmpsl
push
pop
into
in
cmp
ret
cltd
adc
notl
sbb
lcall
mov
xchg
add
mov
add
sbb
push
inc
mov
test
pop
roll
sbb
fnstcw
je
mov
xor
dec
and
or
jmp
mov
mov
or
cmp
clc
loope
test
sbb
mov
je
mov
sub
mov
mov
ret
clc
or
daa
adc
jno
push
xchg
xchg
icebp
into
insl
mov
movsl
add
adc
shll
jg
insl
movsl
fisubs
shl
and
jno
jno
pusha
in
dec
aam
jno
pusha
mov
mov
fdivl
or
ficompl
push
in
pop
mov
pop
mov
ret
mov
sub
cmp
aaa
es
jnp
lcall
je
je
adc
ret
shlb
mov
push
inc
jle
inc
sbb
das
aaa
inc
arpl
jmp
dec
inc
xchg
adcl
pushf
xor
sbb
inc
pop
sub
xchg
nop
std
push
push
pop
ret
mov
popa
divb
lods
lea
mov
xchg
sbb
test
lods
outsb
fwait
dec
scas
sub
stos
sub
pop
cmpsb
lret
dec
sub
ja
mov
lcall
mov
sbb
sbb
lock
adc
in
inc
mov
adc
add
test
pusha
dec
iret
mov
dec
outsl
add
jl
clc
xchg
mov
daa
adc
or
and
clc
sbb
sbb
jnp
xor
jmp
je
pop
stc
mov
stos
mov
fs
inc
out
adc
nop
or
popa
mov
pop
popa
daa
inc
dec
add
fcoms
xchg
pop
xor
mulb
inc
je
mov
mov
add
insl
shlb
aas
push
or
mov
jae
or
ljmp
cmp
sbb
add
nop
jmp
jmp
mov
rclb
int3
test
mov
cmpsl
pop
int
popf
pop
sub
sbb
ds
mov
pop
push
loopne
mov
push
inc
jg
xchg
das
mov
adc
ss
not
loopne
cmp
scas
and
loope
jmp
dec
adc
push
or
sahf
insb
hlt
push
inc
dec
mov
cmpsb
add
addr16
mov
leave
xchg
adc
inc
std
les
mov
or
clc
xor
lods
sbb
inc
xlat
push
lret
mov
ds
add
mov
xor
sbb
repz
inc
icebp
mov
mov
and
mov
cld
gs
push
inc
push
sbb
jo
insb
jns,pt
mov
aaa
pop
or
js
xchg
stos
popa
notl
and
imul
mov
lcall
add
aam
dec
xchg
nop
jns
mov
movsl
call
mov
mov
mov
xlat
jmp
pushl
mov
stos
xor
lret
mov
and
push
inc
aad
mov
sub
mov
mov
or
adc
xchg
jae
decb
iret
cmpsl
aad
add
lods
mov
sub
cltd
mov
mov
adc
cmp
cmp
cmp
mov
mov
scas
lcall
jl
lcall
xchg
or
dec
imul
adc
call
mov
jno
and
mov
cmp
repz
sbb
call
nop
out
or
jno
mov
pop
sub
dec
ss
jno
jae
stc
dec
push
xchg
or
mov
sti
nop
out
mov
mov
sbb
jno
xchg
call
mov
mov
loope
and
mov
jg
es
ja
pushf
fs
rcr
jne
add
or
andl
mov
mov
pop
inc
inc
sbb
insl
inc
jae
jo
jle
stos
and
pop
mov
xor
cmp
add
jnp
scas
jge
test
pop
std
sbb
cmp
ret
push
mov
shrl
popa
jge
sahf
bound
fwait
lea
pop
jge
and
inc
sbb
adcb
mov
into
dec
out
inc
sarl
insl
test
and
pop
rclb
jp
add
es
das
loop
dec
mov
cltd
mov
fsubr
jns
pop
jno
cmpsl
mov
mov
sbb
jne
es
dec
sub
rclb
and
xchg
mov
cmp
mov
cmpsl
mov
or
and
stos
ss
aas
sbb
es
fwait
sbb
ja
or
loopne
mov
jg
or
enter
lds
inc
or
xor
pop
fiaddl
mov
dec
add
mov
jns
add
insb
cwtl
xchg
out
iret
adcb
push
mov
xlat
stos
decb
jecxz
and
scas
mov
and
mov
das
jo
lods
mov
outsb
dec
pop
sub
sbb
xorl
xorb
arpl
cmc
and
es
add
cwtl
js
mov
fdivrs
push
jmp
dec
rclb
jns
gs
pop
stos
in
int
mov
loop
mov
shlb
ret
rorb
mov
pop
flds
ret
out
cmp
adc
push
adc
xchg
loopne
fistps
dec
cltd
push
daa
loope
mov
outsb
pop
addr16
pop
stos
adc
mov
lea
ljmp
sahf
mov
ret
mov
xchg
cltd
inc
int
lds
push
adc
sbb
mov
inc
sub
pop
mov
ret
scas
jae
or
test
in
pop
xchg
test
es
mov
leave
pop
xchg
pop
pop
aas
or
sub
inc
sub
adc
shll
adcl
inc
mov
cmpsb
test
adc
add
add
iret
dec
sbb
add
mov
data16
xchg
repnz
icebp
pusha
rclb
jbe
pop
sub
and
ret
movsl
dec
int
cs
mov
stos
mov
data16
subb
enter
mov
clc
jmp
cltd
mov
add
mov
or
sub
xor
sub
pop
in
fcoms
xor
adc
mov
mov
mov
mov
outsl
je
cs
xchg
stc
cmpsb
stos
sub
aad
add
jbe
mov
imul
aas
add
pop
jb
dec
jmp
stos
mov
and
mov
mov
int3
mov
into
add
or
sti
dec
xchg
adc
jns
or
mov
jae
out
ss
and
insl
xor
shr
push
stos
cwtl
in
sbb
and
lods
js
xor
or
aam
sbb
push
dec
lds
icebp
test
sub
inc
loopne
fnstsw
inc
inc
push
stc
xor
sbb
sbb
lock
dec
or
pop
pop
inc
lock
rcll
je
mov
test
xor
pop
sti
enter
xchg
cmp
nop
out
inc
push
cmc
dec
in
push
int3
add
ret
push
in
mov
xor
xor
mov
mov
jge
xchg
or
aad
dec
sbb
hlt
jne
push
bnd
mov
lds
pop
lock
fcoml
inc
inc
imul
sbb
and
jbe
xor
pop
xchg
jnp
xchg
push
add
cmpsl
lahf
sahf
push
decb
xchg
aaa
aas
repz
push
hlt
mov
rclb
cmpsb
ss
ljmp
mov
mov
in
jno
or
repnz
cmp
push
out
sarb
xchg
xor
jbe
jmp
pop
push
data16
mov
cltd
fs
or
cmp
and
pop
and
ljmp
mov
sub
rorb
pusha
fdivrs
mov
push
fs
xchg
roll
adc
ds
ret
gs
dec
xor
lea
jmp
jecxz
cli
leave
mov
dec
stc
push
jmp
inc
jno
ljmp
pop
out
mov
jle
aas
das
lea
nop
rorb
jge
jl
dec
in
cwtl
mov
popa
shr
cmpb
into
andl
in
stos
pop
or
push
xchg
add
push
inc
fisubl
mov
imul
frstor
push
lock
xlat
popa
inc
add
sbb
ret
insl
shll
mov
ja
popf
je
repnz
mov
fmulp
mov
or
sahf
adc
cs
mov
out
rcll
loope
repnz
rclb
pushf
jns
cmp
test
adc
out
mov
imul
insb
jg
jne
flds
mov
test
mov
sub
push
test
mov
lret
scas
loop
sbb
push
add
push
pop
lods
scas
ret
mov
pop
in
xchg
icebp
xlat
out
xlat
lods
cltd
js
fnstcw
fstp
pop
sub
les
pushf
lahf
lahf
fisttps
imul
mov
stos
cld
sbb
xchg
and
scas
stos
inc
leave
sbb
push
mov
push
rcll
cltd
jns
in
nop
sbb
dec
jo
stos
mov
mov
imul
jg
pop
add
dec
adc
inc
mov
cld
iret
adc
mov
ljmp
sbb
push
clc
outsb
cmp
mov
popf
sahf
lds
inc
les
popf
xor
das
cli
ror
ss
mov
scas
insl
pop
adcl
outsl
push
and
loop
pop
jge
aas
inc
xor
inc
loope
xchg
mov
cmp
pop
xlat
lret
fldenv
test
inc
js
push
inc
inc
inc
jno
jmp
mov
cli
dec
jno
xchg
mov
jp
arpl
push
xchg
jmp
pop
cli
sbbl
cmc
mov
aad
adcl
cmpsb
mov
fwait
inc
mov
dec
cld
daa
add
mov
aaa
lahf
lock
pop
cmp
jge
mov
or
jle
push
add
psubw
cli
lods
xchg
jbe
xor
dec
adc
pop
or
jecxz
adc
cltd
lea
test
testb
push
push
cltd
jge
iret
fcoms
fwait
pop
out
push
sahf
pop
mov
pushw
adc
pop
sarb
fcoml
sub
gs
mov
rcr
jmp
xor
sahf
test
add
mov
es
xchg
lock
fldcw
cmp
lods
scas
push
sarb
pop
inc
jp
aad
jb
adc
mov
insb
xor
and
xor
or
in
sbb
jno
imul
push
push
push
mov
jmp
mov
ret
xor
add
and
lret
divl
iret
and
mov
push
add
or
int3
dec
pop
jns
popf
rcrb
xchg
or
std
adc
pop
xor
jbe
out
cltd
in
mov
xor
fldln2
jne
mov
testb
ljmp
stc
add
xor
xor
cltd
xchg
and
int
lock
test
cs
cmpsl
jge
inc
pop
loop
out
hlt
sub
enter
ficompl
in
push
cmp
insb
lret
dec
mov
out
shrl
add
inc
ss
cmp
xor
cmpb
cwtl
add
bound
or
lea
push
push
insb
out
add
dec
sbb
mov
in
arpl
xor
inc
add
xchg
in
pop
jne
mov
repz
xor
rcrl
inc
add
or
push
adc
jle
movsl
sbb
xchg
mov
or
jne
add
xchg
andb
pushl
pusha
cwtl
xor
dec
mov
stos
pop
pop
shlb
out
loope
mov
dec
mov
fs
cmp
sarb
aam
into
scas
mov
sbb
pop
cwtl
jle
cmpsl
int3
pop
mov
in
mov
add
push
out
std
and
adc
push
sbb
lods
cmp
add
mov
out
or
push
sub
pop
into
and
iret
mov
cs
loope
addr16
movsb
hlt
loope
movsl
sub
cli
rolb
sahf
jmp
out
and
outsb
mov
repz
mov
fmulp
cmc
sub
sub
mov
xchg
dec
inc
test
mov
pop
jbe
jbe
push
lcall
outsl
dec
push
testl
pop
push
jno
movsb
xchg
mov
stos
xchg
lret
or
and
jae
lret
call
and
aad
sub
mov
adc
pop
inc
add
pop
dec
lds
imulb
repz
in
jmp
sbb
add
push
addl
sbbl
in
in
iret
in
mov
add
jns
sar
stos
jl
out
fwait
cmpsb
aaa
xor
adc
outsl
xchg
loopne
mov
cmc
inc
aad
xor
xchg
dec
mov
jge
stos
cmp
stos
repnz
and
pop
dec
cwtl
or
mov
mov
icebp
daa
data16
jns
or
outsl
fmulp
mov
rol
push
leave
dec
and
mov
into
gs
lret
xchg
cmp
sub
sub
dec
in
jo
outsb
icebp
fwait
xlat
mov
cmp
pop
cmp
sub
in
mov
cmpsb
mov
test
data16
jge
lods
lret
push
adc
jmp
stos
loope
aas
aaa
or
repnz
inc
cs
jp
mov
filds
sbb
lret
ret
jo
repnz
mov
in
add
xchg
push
lea
push
add
imul
arpl
jo
stos
and
stc
stos
aaa
bound
jae
push
ds
std
aas
mov
shlb
jle
mov
movsb
pop
mov
rorl
mov
ja
fildll
lods
mov
mov
lods
and
mov
add
mov
jle
add
jae,pn
es
and
push
pop
inc
sbb
ljmp
pushf
std
fstpt
fstpt
push
clc
xor
or
gs
lods
pop
iret
xchg
mov
jl
in
fwait
repz
dec
push
jnp
pop
dec
cmpsb
or
jnp
or
sti
jl
sbb
adc
je
jl
ja
inc
and
lret
fstpl
sbb
ss
in
xchg
jge
test
add
loop
out
ret
clc
add
dec
sub
xrelease
cmp
sub
or
mov
xor
lcall
sbb
fists
mov
adc
xchg
mov
fcmovnu
mov
ds
and
mov
cltd
sub
mov
loope
add
inc
ror
push
addr16
aas
cmp
inc
or
test
jae
cli
loope
inc
jns
stos
mov
push
mov
jge
inc
pusha
push
adcl
push
test
inc
xchg
scas
bound
ds
in
daa
sub
test
adc
outsb
ljmp
mov
rclb
nop
js
loopne
add
cmp
xchg
dec
test
out
fnstcw
sarb
adc
and
stos
xchg
push
out
push
movl
dec
andl
fcmovnu
inc
jno
and
bound
add
jns
jbe
cs
cwtl
daa
push
mov
loop
xor
fildll
mov
cwtl
xchg
icebp
xchg
es
adc
mov
les
jl
shrb
mov
scas
add
test
fwait
xchg
stos
xchg
mov
icebp
pop
xchg
lret
sti
fnsave
stos
add
or
js
cs
into
sub
es
jns
sbb
or
push
insb
shrb
jecxz
add
jmp
xor
das
inc
iret
lahf
insb
jbe
cmp
inc
sbb
xor
xor
aas
xchg
jecxz
int
push
pop
adc
ret
fiadds
ljmp
shll
addr16
adc
and
loopew
mov
cmp
enter
in
inc
ss
js
int3
and
fdivrp
movl
ja
cmpsb
ret
clc
pop
aaa
call
xchg
mov
xor
fmull
movsl
and
cmpsb
jle
repz
stos
mov
andb
add
pop
inc
cmp
leave
push
mov
sbb
push
fcomps
jmp
fucomi
sahf
pop
ja
cld
sub
out
ret
shlb
insb
push
in
adc
add
push
ljmp
iret
adc
dec
push
fdivrp
lods
in
jnp
mov
in
movsb
and
add
adc
in
jb
cmpsl
shll
jecxz
mov
xor
lahf
mov
movsl
xchg
push
inc
nop
jle
or
jns
jecxz
and
pop
dec
negb
push
cmp
xlat
jp
aas
sti
adc
fdivrs
add
mov
cmpsl
dec
nop
or
mov
mov
lea
xlat
xchg
push
jno
shrb
and
outsl
rcll
jg
add
std
insb
loop
pushf
aas
negb
jae
jp
iret
aaa
jge
arpl
mov
push
push
loop
je
je
out
add
cs
dec
xor
mov
xorl
xchg
in
cli
cmp
jnp
adc
pop
aam
or
data16
frndint
movsl
mov
sarl
jg
jecxz
ret
hlt
mov
xchg
cmpsl
sahf
xchg
xchg
sbb
or
daa
stos
scas
mov
lock
inc
mov
test
push
xchg
out
and
inc
aaa
pusha
inc
jl
in
push
out
push
sub
mov
dec
and
xor
adc
inc
nop
ss
cmp
add
or
xchg
call
sbb
cmp
push
or
dec
ss
loopne
push
sub
shr
cmp
lds
in
xchg
jecxz
jle
xlat
gs
pop
sbb
jg
pop
cld
jbe
or
and
cmc
or
mov
insl
lds
pushf
enter
mov
sti
xchg
cmp
or
leave
mov
and
into
xor
sbb
outsl
insb
imul
pop
lcall
add
popf
inc
cmc
mov
test
jl
clc
jne
rclb
sti
sbb
js
js
push
xchg
push
mov
mov
lods
sub
inc
gs
sbb
xchg
pop
jne
in
push
cld
sbb
andnps
pop
pminub
aam
sub
adc
xchg
int
sub
lahf
xor
daa
je
inc
push
and
lahf
ret
xlat
pop
sbb
hlt
xchg
adc
jp
iret
xchg
adc
sub
inc
and
dec
mov
adc
mov
popa
mov
arpl
ja
jns
in
outsl
xchg
xchg
in
xor
jge
xchg
dec
cmp
mov
in
jl
lods
dec
setns
push
adc
and
gs
xlat
cli
cmp
jno
fdiv
mul
push
fs
add
sub
dec
stc
mov
sub
and
aaa
ds
dec
jge
test
pop
xchg
xchg
test
push
test
test
cmp
add
dec
dec
mov
ja
hlt
popa
pop
mov
dec
add
repnz
xchg
scas
aad
int3
dec
dec
test
push
loop
mov
and
mov
push
adc
pop
mov
gs
rcl
jg
sbb
jnp
mov
popa
adc
ret
push
and
loope
addr16
and
movsl
dec
push
fsubl
push
fidivrs
and
dec
mov
xor
jl
add
adc
or
loope
inc
jp
sbb
out
pop
movl
into
fsubrl
sti
imul
sub
stc
sbb
mov
or
xor
dec
push
sbb
mov
xchg
cmp
sub
xor
mov
ds
cmp
std
out
mov
mov
stos
sti
mov
test
lds
jl
in
test
stos
add
add
in
loope
test
into
xchg
sub
pop
les
rol
lret
ds
inc
fistps
rol
stc
out
dec
ret
pusha
pop
dec
addr16
pop
dec
push
push
push
cmp
mov
adc
xchg
mov
or
mov
sub
lcall
test
push
xchg
cmp
dec
in
scas
test
mov
int
cmc
cltd
xchg
pop
pop
mov
int3
ja
sub
sbb
push
aas
stc
mov
add
jb
ja
xor
aam
out
jecxz
or
std
mov
mov
and
xor
jge
xchg
push
outsl
mov
xor
add
and
push
cmp
adc
xor
push
jmp
xor
mov
imul
aaa
pop
in
addb
jnp
inc
push
ret
fadds
test
fists
sbb
jnp
sub
in
xchg
and
cmp
sbb
out
dec
pop
ret
jnp
xchg
sbb
lods
aas
dec
xchg
sbb
mov
fneni(8087
repnz
mov
arpl
jb
test
fwait
sub
fwait
imul
push
mov
push
rcrb
into
lea
cmpb
xor
sub
fbstp
or
les
movsb
scas
insl
and
sub
dec
aas
xchg
push
dec
scas
shl
xlat
xchg
mov
fldcw
psubb
int
mov
fisttps
mov
out
xor
mov
and
scas
jg
mov
inc
test
mov
sub
clc
mov
stos
je
lret
and
test
stos
bound
pushf
adcl
data16
jo
xor
adc
mov
xlat
loope
adc
sbb
call
dec
dec
pop
dec
enter
stos
xchg
mov
popl
imul
jle
rclb
jmp
adc
loop
mov
loop
je
jmp
sbb
test
addb
xchg
js
cmp
xor
mov
push
movsl
aas
repnz
scas
xchg
in
sub
scas
in
imul
aaa
in
sub
arpl
add
aaa
out
mov
mov
repz
fadds
mov
pushf
xor
ss
addr16
xchg
imul
push
and
xchg
or
imul
in
leave
dec
sub
push
mov
sbb
into
rorl
aad
mov
out
mov
mov
xchg
rorb
sbb
jbe
shll
repnz
jno
inc
and
push
sub
mov
xchg
mov
mov
in
sub
cli
xlat
cmpsb
jecxz
pop
or
aam
out
in
jbe
rolb
push
in
addr16
xchg
push
inc
div
aad
mov
push
sti
mov
jge
pop
int
int3
add
fisubs
cld
cmpsb
sub
mov
push
inc
cmc
sbb
movsb
sarl
pusha
leave
mov
out
adc
insl
push
push
cmp
xchg
jo
orb
stos
leave
mov
lahf
mov
jp
in
push
add
jb
rclb
or
pop
test
sti
sarb
push
sahf
neg
jecxz
push
cmp
inc
pop
jecxz
rol
sub
inc
inc
hlt
cmp
nop
dec
daa
pop
adc
add
xor
pop
subl
and
sub
xchg
cwtl
dec
imul
push
adc
push
sub
mov
mov
fldcw
mov
cmp
xlat
iret
imul
andb
jo
xor
jns
cmpsl
insl
das
inc
sub
sub
push
aad
fildll
aaa
add
shl
movsb
dec
mov
rolb
adc
outsl
sbb
cmpsl
or
js
outsb
call
pop
gs
js
pop
repnz
std
enter
xchg
int3
inc
and
faddl
fldenv
or
xor
fmuls
jmp
push
je
ljmp
das
sbb
xor
jno
fnstcw
mov
das
nop
enter
lcall
repz
push
jne
xor
jnp
add
xor
pop
sbb
test
mov
push
int3
jle
sarl
add
loopne
repnz
mov
test
jo
push
mov
hlt
in
aam
pushf
les
and
out
xlat
sbb
mov
int3
or
rorl
scas
jmp
dec
xorb
pop
cmpsb
mov
jmp
add
sub
or
aad
in
gs
stc
iret
cltd
cmp
and
mov
and
std
or
jg
loop
xor
shrl
loopne
jnp
test
inc
das
jge
movsb
ljmp
cmp
stos
rcll
test
ret
adc
jle
inc
mov
or
cltd
xchg
loopne
add
testb
jbe
fdivs
mov
sbb
ja
dec
jge
ljmp
push
cmc
xchg
push
sbb
or
mov
stos
mov
movl
mov
inc
mov
xorb
sbb
push
gs
out
sbb
sti
mov
xchg
ss
xchg
sbb
jge
push
nop
push
lret
sbb
in
mov
cwtl
jno
or
fmuls
mov
and
ret
sahf
out
loopne
shlb
cmpsb
dec
mov
sbb
and
inc
mov
insb
pop
push
xchg
jle
mov
mov
movsl
dec
pop
jmp
xor
cs
xor
aaa
add
ja
js
sbb
push
fdivrs
fcoms
push
mov
aam
aad
push
sti
insl
push
mov
push
repnz
mov
xchg
jge
dec
add
jecxz
dec
cmpsb
enter
cmp
test
imul
push
push
and
in
sti
xor
mov
enter
sbb
sub
or
xchg
gs
mov
pop
dec
sbb
test
gs
icebp
imul
mov
in
lahf
sub
in
std
and
shlb
int
sbb
or
sub
mov
sbb
fwait
xor
jo
mov
sbb
fsubrs
out
ljmp
sub
sub
fsubs
jbe
movsl
loope
cwtl
cmp
aam
fcompl
xor
jne
xor
rorb
insl
cmp
add
lcall
sub
mov
subl
adc
mov
in
jae
xor
nop
jae
mov
jp
shlb
sub
cmp
adc
repnz
sub
xchg
and
test
mov
lods
shrb
repnz
aam
stos
xchg
mov
xor
adc
or
cld
fcmovnbe
cld
mov
mov
and
inc
xchg
mov
adc
imul
xor
clc
in
mov
and
jmp
xlat
add
movsl
lods
loope
and
mov
jge
aam
jmp
pushl
xor
lods
int3
mov
iret
jbe
out
jp
loopne
aad
rolb
dec
jbe
jb
jmp
sbb
adc
dec
pop
loopne
pop
push
lahf
lret
rclb
jne
sub
icebp
sbb
cmc
push
xchg
mov
les
or
push
out
adc
jb
inc
xor
callw
xor
xchg
add
push
jne
bound
cmp
jbe
push
lret
xchg
daa
pop
cmc
pusha
xchg
pop
cmpsl
sbb
fsub
jns
sti
lret
js
inc
enter
in
repnz
hlt
fimull
sbb
lret
or
stos
mov
mov
scas
scas
or
jae
and
sub
adc
int3
les
mov
sahf
pushf
cmp
lods
or
inc
addb
loop
sbb
cmc
and
dec
sahf
jecxz
jl
pop
jl
mov
push
js
xchg
lahf
dec
out
movsl
call
xor
out
repnz
adc
mov
scas
rorl
int
jle
je
jmp
mov
sbb
cld
rcr
mov
mov
cmc
push
mov
sbb
push
pop
imul
mov
aas
pop
pop
lret
jbe
mov
xchg
fsubrs
sbb
test
and
aam
jnp
xor
and
pop
test
test
icebp
push
jl
ds
and
lcall
gs
mov
icebp
jno
loop
dec
inc
sbb
jl
cmp
sti
xchg
xchg
mov
in
inc
cld
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
dec
adc
or
addl
popf
cmp
sbb
insl
xchg
sahf
cmc
std
pop
ret
jae
jns
jp
sbb
sub
aaa
lahf
xchg
add
lret
ror
ja
inc
fildl
rolb
pop
jg
dec
movsb
mov
inc
push
inc
jns
fs
cmpsb
jp
dec
adc
sub
xchg
pushf
addr16
pusha
cmp
sbbl
inc
sub
fsubs
jge
mov
pusha
loopne
or
pop
push
add
lods
dec
push
mov
cmp
mov
lds
shl
lock
in
cmp
sbb
add
dec
cmpsb
cwtl
rcpps
and
inc
add
sti
mov
sub
mov
and
ja
sbb
add
dec
fs
pop
mov
mov
and
mov
lcall
xor
mov
xchg
popf
sub
nop
sub
mov
repz
shr
divb
mov
jg
xchg
push
repnz
cmp
jle
lock
fsubrs
inc
lods
add
insb
movsb
mov
push
rclb
jecxz
fiaddl
mov
gs
scas
or
out
sbb
std
push
xchg
mov
xor
repnz
and
aad
xchg
rclb
lret
les
movsl
insl
in
jne
xchg
and
sbb
fists
sub
sbb
inc
ret
sbb
clc
data16
cli
pop
loop
sbb
jb
pop
xor
sarl
cmc
or
repz
jecxz
lea
xchg
aam
jns
sub
addr16
xor
sub
sti
inc
sbb
mov
int
gs
lock
or
sub
and
add
adcl
cmp
fists
jmp
bound
ds
xchg
mulb
fidivl
pop
dec
dec
in
fnsave
cltd
shll
popf
dec
popf
push
cwtl
leave
int
rcrl
or
and
js
sub
ss
push
inc
movsl
add
loop
sub
or
notl
inc
inc
or
call
cmc
xchg
mov
cmc
insb
lock
jbe
ds
fs
insb
les
push
pop
xchg
mov
add
test
cmpsb
jecxz
sbb
adcb
out
je
sub
or
cmp
xchg
jl
outsb
mov
ret
sbb
rcr
int3
in
cmpsl
popa
in
jne
aaa
cs
sbb
in
mov
jbe
push
or
lret
mov
dec
push
push
scas
mov
rclb
mov
out
dec
xchg
mov
shll
scas
push
out
repz
das
fcoml
push
push
out
hlt
rcrb
imul
rcl
jp
cmpsl
gs
add
push
lods
int
imul
cs
in
popa
clc
neg
jl
dec
test
in
add
rorl
leave
push
and
dec
xchg
dec
xchg
cmp
sub
bound
dec
loope
iret
mov
xchg
jns
call
xchg
mov
mov
out
dec
mov
mov
mov
inc
sbb
es
cmpsl
cmpsl
popa
and
popf
push
sbbl
push
mov
xchg
pop
fdivrl
out
xor
bound
cmp
out
inc
ficompl
fldt
pop
insb
inc
cmp
std
xchg
scas
inc
fcmovnu
mov
jg
sbb
add
cmp
push
xor
dec
data16
xchg
in
aas
add
jge
xchg
test
adc
ds
xchg
adc
xor
push
add
fs
pusha
int
mov
jge
pop
inc
mov
popa
addr16
sub
xor
lret
cmp
mov
lcall
jnp
enter
jne
cmp
ucomiss
mov
sti
aam
pushf
dec
insl
jg
cltd
out
inc
lret
xchg
dec
xchg
int3
and
loopne
cltd
cmovnp
mov
addr16
inc
or
loop
add
push
imul
push
ljmp
clc
xchg
int3
cli
xor
pop
lcall
mov
ljmp
cmp
dec
out
das
pusha
sbb
pop
inc
jecxz
jp
rclb
mov
sbb
sub
jge
add
cli
push
adc
movsb
cmp
in
pop
rorb
js
xchg
loop
mov
lahf
xchg
xor
add
dec
pop
nop
adc
jne
mov
mov
pop
and
jb
in
clc
mov
mov
mov
repz
cmp
push
pop
fistpll
xlat
add
push
mov
sbb
mov
aad
pop
jbe
dec
mov
mov
imulb
xchg
dec
and
sub
jmp
jg
dec
popa
push
push
nop
jmp
adc
cwtl
or
or
rcl
or
test
sub
mov
jecxz
add
jno
jmp
sub
cmc
fistpl
dec
cmp
bound
movsb
cli
jbe
pop
loop
enter
data16
jle
popa
dec
push
ret
ret
jle
mov
mov
xchg
jle
aam
fwait
push
push
aas
dec
add
lret
bnd
daa
mov
cmc
aad
gs
dec
mov
pop
insl
inc
icebp
mov
nopl
andl
pop
hlt
jo
ror
lds
mov
dec
push
outsb
push
scas
sub
jnp
pushf
cli
ret
pop
cwtl
sahf
xchg
outsl
push
jge
push
push
and
inc
enter
ret
fdivs
inc
fists
jmp
push
xchg
sub
daa
lcall
inc
jns
sbb
mov
dec
cmp
inc
stos
pusha
or
stos
imul
dec
xor
push
inc
mov
mov
push
mov
pusha
jne
add
test
dec
dec
xlat
sub
dec
or
aam
sahf
inc
repz
mull
mov
lea
fldl
dec
add
lret
or
fisubs
jne
std
mov
jnp
dec
outsl
mov
mov
shlb
stos
inc
mov
ret
test
sbb
sysexit
lret
lds
je,pn
mov
sbb
das
iret
push
adc
mov
repz
add
mov
push
sbbb
mov
jp
stos
adc
movsb
push
loop
icebp
xorb
and
movsl
xchg
insb
out
push
lds
cltd
cmpb
xor
inc
or
xchg
cltd
mov
mov
in
jb
and
sub
sub
and
xchg
push
mov
xor
subb
jo
mov
cmp
mov
sub
and
lahf
in
iret
das
sbb
pop
push
add
movsb
fnsave
mov
or
stos
and
dec
test
push
fdivrl
idiv
sar
lcall
cmp
jle
jno
sbb
loope
ja
bound
out
aas
js
pop
push
sbb
fmul
jmp
mov
cmpsl
add
outsb
cmp
je
mov
notb
dec
lock
sub
cmpl
fwait
inc
hlt
push
jmp
pop
sbb
movsb
bound
inc
outsl
es
mov
test
mov
xchg
pushf
pop
arpl
negl
jmp
jno
jae
pusha
test
sbb
inc
js
lret
push
dec
cmp
cmp
cs
ret
xchg
sub
jbe
cmp
xor
std
inc
jo
test
xor
xchg
mov
in
imul
push
cld
pop
aam
lds
or
stc
stc
ret
mov
push
mov
or
lock
and
mov
cwtl
in
xor
sbb
fcomps
loop
lcall
mov
mov
out
lock
out
int
and
jae
push
cwtl
int3
notl
sarb
pop
repz
dec
pop
adc
push
gs
movsb
daa
xor
das
lahf
or
adc
or
push
insl
dec
out
addr16
es
cmp
out
mov
xchg
xchg
jns
lock
dec
fdivrp
aam
cli
inc
add
lea
in
and
add
comiss
mov
outsb
insb
mov
sbbl
push
out
dec
dec
fmuls
lods
in
fs
fbld
sbb
jp
mov
or
lods
mov
sub
or
mov
jno
push
ficompl
incb
fsubrl
and
adc
mov
xchg
pop
mov
outsb
test
cli
adc
push
inc
out
ljmp
ror
jne
test
or
jb
mov
mov
jo
xor
push
sbb
push
push
jl
sub
mov
lcall
movsl
sbb
cmp
cmpsl
mov
xor
mov
add
test
xlat
push
push
mov
ja
pop
cmc
xchg
jbe
scas
mov
leave
mul
inc
aam
xchg
sbb
out
dec
xchg
pop
pop
fwait
lock
lea
outsb
out
rcrl
stos
cli
mov
jnp
jo
shrb
and
adc
inc
dec
scas
xor
push
sub
ja
popf
or
pop
hlt
popa
inc
lods
mov
test
addb
jo
cmp
movsb
add
add
xchg
cmp
jbe
nop
pop
bound
out
mov
dec
jmp
sbb
fdivrp
ret
push
ret
test
popf
repz
shrl
test
jno
adc
cmp
pop
enter
push
adc
stos
dec
test
loopne
xchg
fcmovbe
repnz
mov
xorb
mov
push
push
lea
inc
and
imul
test
aad
in
fstps
cmp
inc
push
or
sub
jne
xor
movsl
sbb
mov
sub
mov
jl
insl
leave
out
andb
dec
in
repz
mov
jg
les
bound
js
pushf
test
mov
cmp
pushf
imul
cs
ds
fwait
sub
sbb
ret
fldcw
cmpsl
sarl
incl
in
dec
fwait
rcl
pop
xchg
mov
lcall
pop
outsl
dec
jbe
or
les
popf
inc
jmp
pop
add
mov
aas
mov
xor
mov
push
lds
mull
xchg
cmpsb
not
jns
vmaxss
or
push
fimuls
adc
pop
adc
and
mov
icebp
add
movsb
pop
sti
test
xor
jb
add
mov
cmp
xor
push
sub
jmp
insl
mov
pop
shll
inc
mov
icebp
push
nop
and
test
add
int
das
xor
es
pop
or
les
mov
gs
lock
mov
xchg
es
xchg
xchg
add
fsubs
pusha
data16
cwtl
sbb
cmp
sub
icebp
jmp
jbe
xlat
inc
fisubrl
and
push
iret
dec
orl
pushf
pop
pop
push
dec
jno
add
push
mov
xchg
xchg
mov
push
xchg
mov
fdiv
sbb
call
sarb
repz
dec
sti
ds
pop
jl
sbb
out
xchg
pushf
fs
fwait
dec
inc
dec
add
inc
mov
std
add
xchg
mov
clc
fs
in
dec
push
adc
xchg
mov
fcoms
mov
adc
in
cwtl
stos
int3
inc
mov
loop
into
xchg
insl
ret
or
pop
aam
aam
mov
fdivrs
popf
cmp
fstpt
or
iret
pop
adc
dec
pop
mov
pop
inc
mov
mov
inc
rorl
mov
jg
or
test
stos
push
and
adc
out
mov
or
mov
imul
sarb
xor
mov
scas
lahf
pop
cmp
and
sbb
hlt
std
in
mov
xchg
sub
mov
in
mov
push
test
and
sub
aad
xchg
mov
xchg
loope
inc
push
and
das
outsb
out
loopne
sbb
inc
cltd
cmp
jle
sub
sbb
pushf
push
and
cmp
lret
cmp
push
testb
push
cli
mov
aaa
mov
js
jecxz
dec
jae
or
mulb
inc
push
sbb
dec
sti
incl
push
cmpb
mov
jae
push
inc
jecxz
adc
cltd
stos
xor
adc
push
imul
sbb
lds
negl
mov
inc
dec
mov
pop
int
repnz
mov
mov
inc
push
sbb
xor
pusha
and
dec
sahf
add
xor
mov
mov
out
push
fs
data16
subl
xchg
xchg
jne
insb
popf
mov
lds
xor
jp
lock
mov
std
enter
outsb
pop
stos
xorl
jl
sub
movsl
xlat
lods
movsb
dec
and
mov
inc
jno
cmc
sbb
xlat
insl
or
add
pop
in
or
repz
and
dec
or
jo
sub
lcall
int
pop
mov
shrb
dec
clc
leave
and
loope
test
mov
dec
ror
or
pop
fldln2
cs
dec
aaa
stc
fs
in
adc
dec
adc
dec
cld
xor
mov
mov
pop
xor
dec
adc
sbb
sub
add
add
stos
cs
gs
movsl
and
pop
xor
inc
push
leave
xchg
add
xchg
add
ret
leave
or
xchg
mov
out
stc
pop
inc
aad
sti
mov
pusha
xor
dec
mov
adc
mov
ret
divl
repz
dec
jle
cmpsl
push
sub
mov
push
test
pusha
jle
sbb
int3
leave
loop
xchg
pushf
shlb
push
add
xchg
fs
sbb
rcll
mov
adc
out
pop
xlat
xor
mov
fs
imul
jg
rcrb
xchg
pop
in
cltd
inc
dec
pop
popf
lock
or
adc
fiaddl
push
dec
aam
arpl
mov
cmp
jmp
mov
mov
hlt
enter
mov
insl
sub
dec
scas
pop
str
add
bound
xor
xchg
cmp
sub
jecxz
aad
ret
xor
sbb
push
pop
xor
pop
mov
inc
mov
inc
mov
sbb
and
adc
leave
sbb
int3
insb
dec
push
cld
push
sbb
lahf
mov
lcall
and
xor
lods
inc
add
in
js
aas
jp
sub
repz
cmpb
and
test
and
jg
loopne
nop
pop
not
add
out
cmp
in
adc
push
jge
push
push
add
add
sbbb
pop
ret
jg
leave
mov
aas
lock
pop
cmc
pushf
mul
dec
jecxz
inc
add
stc
xchg
adc
cli
push
addr16
pop
sbb
mov
jo
xor
imul
lret
mov
inc
cmp
adc
mov
push
clc
adc
lret
cmpsl
cmp
adc
jno
push
repz
in
sub
push
divl
push
loop
cmp
movsb
inc
stc
dec
mov
push
cmp
pusha
pop
mov
iret
adc
pop
jmp
jne
push
fmuls
test
adc
clc
loop
cmp
mov
fbstp
jnp
dec
jns
dec
in
sub
or
mulb
mov
xor
pop
test
xor
pop
xchg
sahf
shlb
leave
mov
jge
lods
pop
or
lcall
xor
rcrl
pop
bound
sub
sub
xor
adc
repnz
mov
or
sub
pop
test
jl
xor
cmp
fisubrs
es
call
or
push
pop
jne
sbb
fsubs
loop
mov
dec
mov
cmpsb
inc
mov
sbb
es
leave
fstpl
inc
push
clc
jno
xchg
adc
mov
mov
popf
pop
cli
mov
pop
mov
sti
pushf
xchg
xor
mull
imul
aaa
sarb
imull
in
adc
jmp
movsl
pop
aas
loopne
xchg
inc
jno
sub
mov
sti
cltd
add
mov
sub
test
out
mov
inc
shll
inc
int
pop
or
cli
ljmp
sub
movsb
xchg
aad
je
lods
stc
sbb
xor
xchg
inc
out
and
iret
imul
inc
lea
dec
aas
cs
test
scas
xchg
adc
ljmp
daa
daa
enter
pop
add
sbb
push
mov
int3
mov
jmp
inc
loopne
add
sub
sti
loop
in
sub
xchg
inc
mov
fcomps
mov
jge
ljmp
scas
xchg
inc
arpl
mov
sbb
sub
cmp
mov
enter
cmc
cmp
negb
ja
inc
addr16
sbb
arpl
dec
scas
jns
fwait
mov
sti
insl
test
lock
inc
daa
cmp
push
inc
mov
adc
notb
jbe
inc
xchg
test
mov
clc
xor
pop
mov
lea
mov
pop
sub
out
cmp
roll
ljmp
mov
int
jmp
sub
mov
pop
addr16
mov
movsl
out
pop
fldt
fwait
call
movsb
clc
cmpsl
aas
enter
cltd
test
lock
bswap
dec
mov
push
out
in
lahf
inc
fstp
fadds
xchg
test
lret
sbb
outsb
adc
es
inc
push
mov
fistpl
inc
cmpsb
rorb
mov
jge
ret
ds
or
lods
testb
sbb
dec
aas
psubsw
outsb
lods
addb
sahf
xorb
pushf
shll
hlt
repnz
add
xchg
hlt
popa
lods
sub
dec
out
aas
push
dec
sub
pusha
adc
addr16
mov
in
cmpsb
test
xrelease
add
pop
push
adc
push
mov
sahf
mov
jb
lret
fadd
data16
or
fwait
pop
fdivrs
lods
sub
rcrl
push
xor
jp
ds
rcr
jle
out
and
mov
and
mov
pusha
pop
push
into
push
std
add
jns
daa
xchg
adc
inc
lret
add
jbe
and
ret
in
adc
outsb
jge
icebp
xchg
add
stos
dec
adc
addr16
cmpsl
jge
push
dec
add
mov
push
cmpsb
mov
push
stos
jb
out
pop
cmp
shrb
jbe
outsb
clc
repz
or
jns
sarb
stc
sbb
xchg
mov
fcmovb
push
popf
xchg
ljmp
push
scas
test
jecxz
mov
mov
shlb
xchg
adc
pcmpgtw
jl
add
out
lds
or
pop
dec
sub
add
iret
inc
sub
lahf
filds
jb
into
mov
mov
add
jb
fsubs
add
push
xlat
std
testl
mov
dec
mov
int3
icebp
shlw
nop
aaa
add
jno
int3
sbb
mov
fwait
divb
adc
cmpsl
loopne
and
jle
pop
add
pop
inc
loopne
lock
inc
add
inc
out
jb
and
in
addr16
icebp
mov
push
test
fst
data16
aas
fldcw
aaa
movsl
jge
or
pop
mov
or
mov
cld
or
cmp
out
in
push
sbb
dec
add
push
sub
das
inc
fcmovnb
icebp
insb
leave
clc
cmp
aaa
sub
mov
xchg
ja
dec
inc
stos
out
inc
mov
aam
cwtl
add
jae
inc
add
push
jnp,pn
ret
in
imul
out
push
jle
add
and
mov
aad
cmp
sbb
and
push
pop
int3
stos
arpl
xlat
scas
and
mov
jle
out
sub
push
sahf
stos
sar
jne
mov
xchg
and
cmpsb
fdivs
push
ret
cmc
xor
ds
test
jnp
and
pop
push
cmpsb
sub
cmp
inc
in
out
and
mov
jg
stos
ja
cmc
jmp
cld
fcomps
scas
sarl
mov
mov
dec
mov
dec
imul
and
fs
mov
rcll
addr16
ss
or
pop
push
add
shll
cmp
xchg
xrelease
sti
dec
push
dec
stos
cmp
cmp
xor
jle
dec
test
mov
jnp
iret
sbb
cmc
push
dec
xlat
dec
jp
push
lret
les
sub
out
lea
mov
xchg
adc
lock
push
xchg
nop
cmpsb
push
lret
lock
ret
xor
mov
pop
movups
cmp
aad
pop
mov
fdivs
sbb
mov
fucomp
jnp
sub
push
fdivrs
aas
mov
jne
push
mov
fnsave
in
rorl
xchg
mov
jne
mov
push
loopne
in
pop
fisttps
lea
cmc
adc
dec
mov
test
mov
push
adc
fistl
sbb
adc
movsl
mov
clc
aaa
rorb
sarl
mov
ret
xchg
into
adc
cs
test
rorl
jno
ss
ss
outsl
add
mov
push
pop
cmpsb
pop
lcall
xchg
push
add
adc
movsl
rol
push
cmp
cltd
sub
roll
dec
jbe
imul
nop
fsubrl
and
stc
cmp
jge
out
or
imul
stc
mov
nop
jmp
jecxz
sbb
jp
enter
fdiv
dec
call
shlb
mov
mov
nop
sbb
pop
insl
push
test
cmp
aas
mov
dec
mov
inc
sub
js
dec
push
mov
mov
loopne
jae
bound
fcoms
push
push
sbb
insl
scas
mov
out
mov
or
cli
imul
stos
jbe
xor
sti
lcall
test
loopne
mov
jo
add
es
lods
lret
dec
out
and
mov
mov
aad
fsubr
pop
and
ja
nop
fsubs
push
jle
mov
xorb
jns
mov
mov
repz
je
lock
inc
movsl
xchg
sbb
sub
sub
rorb
or
scas
in
fwait
push
mov
cmp
mov
sbb
mov
add
xchg
sbbb
scas
or
and
mov
lahf
jno
jle
scas
stos
xchg
mov
test
and
int3
in
test
pop
dec
xor
cwtl
sbb
jno
pop
js
sub
adc
std
sub
negl
adc
and
in
sarl
add
adc
scas
inc
xor
add
fwait
popa
roll
xor
ret
es
fistpll
mov
insb
pusha
cmp
mov
cltd
icebp
mov
pop
xchg
or
scas
lahf
cmp
jne
imul
sti
les
rol
fimuls
test
push
in
shrl
pop
addb
dec
les
add
ljmp
adc
pop
mov
mov
ficompl
sub
jns
sub
add
sahf
fcmove
dec
pop
ss
jp
sbb
jg
mov
mov
push
das
decb
inc
sub
jb
scas
adc
push
add
xchg
mov
cmp
ret
clc
js
xchg
lods
push
adc
xlat
sub
adc
test
and
push
push
rcrl
add
adc
repz
mov
inc
clc
adc
pop
cmp
scas
push
pop
fwait
or
mov
mov
sbb
sub
popf
fistpll
clc
mov
mov
mov
jae
xlat
and
mov
pop
popf
lods
jns
loopne
jae,pn
test
out
pop
adc
aas
pop
inc
mov
xchg
jno
cmp
cmc
jns
push
jl
mov
xorl
lret
popf
xchg
and
push
lods
daa
mov
pop
sbb
jbe
xchg
xchg
xchg
daa
cmp
divl
push
jg
jne
mov
arpl
fwait
jno
mov
mov
and
sbb
fxch
mov
inc
mov
mov
aad
xor
int
inc
icebp
in
jg
daa
leave
push
and
sub
adc
mov
add
lds
iret
or
gs
adc
dec
pushl
xor
hlt
inc
pop
test
call
or
push
mov
xor
leave
dec
xchg
fwait
out
and
stos
mov
mov
and
inc
or
inc
sub
cmp
sbb
lods
das
daa
xchg
jnp
gs
or
adc
inc
nop
sbb
push
jg
mov
xor
icebp
cmp
xor
adc
and
inc
in
movsb
shlb
mov
movb
xor
or
and
gs
xchg
lods
insb
pusha
sub
ret
xor
dec
lods
mov
push
out
fdivl
mov
mov
fsubl
in
pop
loop
inc
sahf
sbb
inc
sub
out
cmpsl
dec
int
movsl
push
xchg
loope
mov
aam
push
fcomp
add
gs
lods
jae
mov
out
into
rclb
and
stos
mov
rcr
mov
notl
pushf
leave
lret
fimuls
pop
adc
fmul
jno
and
std
xchg
es
or
lods
gs
dec
push
sub
inc
dec
data16
test
pop
rcll
loop
pop
ret
mov
inc
lret
sbb
cltd
insb
leave
mov
inc
pop
les
pop
enter
cs
leave
jo
out
pop
and
rcr
test
pop
inc
les
pop
enter
in
shl
dec
lods
and
xchg
pop
mov
jg
pusha
lret
xlat
and
adc
lods
jmp
movsb
in
adc
pop
daa
xchg
mov
cltd
mov
mov
hlt
aad
cmp
dec
call
insb
insl
sub
pop
out
pop
push
rorb
add
aad
sbb
dec
jae
das
cld
mov
fsub
dec
or
and
xor
movsl
mov
dec
xchg
stc
push
mov
inc
pop
gs
stos
lret
rcr
dec
cmp
fnstcw
push
sbb
mov
mov
mov
bound
movsb
movsb
dec
push
jae
push
cli
jnp
and
ret
adc
lcall
roll
cwtl
arpl
xchg
rclb
lcall
dec
adc
mov
dec
push
push
repz
lret
inc
in
inc
sub
sub
cmpsb
mov
mov
inc
inc
mov
pop
mov
mov
inc
fwait
sbb
cmp
test
mov
jp
imul
dec
inc
mov
jp
adc
add
sahf
sbb
dec
stc
inc
rolb
inc
sbb
loopne
push
pushf
fs
mov
add
xchg
jae
std
roll
jne
adc
repz
add
cmc
inc
sbb
and
jo
mul
mov
sbb
xchg
pop
or
jns
push
mov
mov
pop
ficoms
lods
sub
mov
out
adc
aas
sti
push
inc
fwait
and
das
xchg
je
jp
rorl
aaa
out
mov
dec
mov
sahf
jle
pop
xchg
jo
add
add
mov
leave
cld
into
inc
sub
jo
dec
adc
out
jnp
pop
mov
pop
aad
mov
rcrl
hlt
mov
call
and
or
mov
sbb
adc
and
test
shrb
dec
sub
pop
cmp
push
aaa
mov
add
jne
fcmovnbe
int
cmp
cmp
mov
and
dec
mov
sbb
es
loope
out
xchg
cmpsl
sbb
xlat
sbb
inc
mov
js
aam
add
mov
loopne
loop
les
push
or
leave
insl
bound
dec
nop
sbb
pushf
aad
sub
pop
cmp
xchg
and
add
iret
test
cmpsb
inc
mov
add
rolb
inc
lea
fnstsw
adc
les
push
cmp
sbb
push
add
out
shr
mov
dec
xchg
fcmovb
imul
jno
int
fadd
add
mov
sub
or
inc
push
sahf
mov
add
stos
jg
push
out
jecxz
cmc
adc
fxch
fistpl
fisubrs
cmpsl
imul
mov
cli
inc
lods
popa
push
sub
lret
divb
add
scas
jp
or
push
subb
cmp
popf
lahf
movsb
jmp
orl
incl
ljmp
std
or
dec
sbb
sbb
daa
xorl
int
clc
mov
call
shl
xor
pop
sub
cltd
insl
mov
push
adc
lods
ret
cli
loop
cmp
sbb
pop
clc
pop
ficoml
xchg
int3
aas
push
in
popa
add
jno
xor
cltd
comiss
iret
push
add
mov
leave
mov
out
rcrl
aaa
sub
lahf
loope,pt
jecxz
and
push
mov
inc
aaa
sub
jnp
test
adcb
outsl
loopne
adc
test
cmp
out
sub
xchg
mov
pop
jnp
adc
loop
out
xor
dec
roll
fsub
or
push
inc
mov
jno
pop
sti
lret
out
add
dec
js
push
inc
ret
push
cmp
es
pop
mov
cld
lahf
insb
lahf
pop
push
jns
pop
sub
pop
pusha
push
jl
add
addr16
xchg
or
adc
mov
jo
cmp
sbb
pushf
ss
fmul
stos
stos
adc
ficoml
dec
sarb
out
inc
sub
dec
scas
or
cmp
mov
push
ss
and
add
cmc
out
shll
adcl
loop
adc
inc
inc
adc
push
mov
leave
popf
xor
dec
arpl
aaa
popf
pushl
and
and
insl
sub
cli
stos
hlt
clc
jo
adc
sub
mov
mov
mov
xor
gs
sub
xrstors
rorl
test
jmp
adc
adc
stos
test
fidivs
mov
mov
pop
fisttpll
jno
add
mov
sub
call
jmp
aaa
dec
mov
ljmp
jl
push
xor
dec
cld
dec
mov
shr
outsl
push
and
jle
push
xor
negl
mov
and
jno
mov
cld
mov
jo
leave
fadds
dec
push
out
adc
std
sbb
sti
nop
push
call
sub
add
fldenv
adc
pop
icebp
push
bound
push
push
inc
push
clc
cmc
xchg
pop
lock
data16
pop
jg
leave
sbb
out
icebp
sbb
pop
insb
xor
movsb
das
imul
add
jmp
lods
cmp
xchg
mov
xor
add
test
and
jecxz
clc
sub
pop
sub
pop
xchg
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
je
push
in
roll
xor
push
sub
adc
push
pusha
push
fldl
xchg
sub
in
mov
push
pop
dec
cmpsb
out
jo
iret
enter
daa
mov
xchg
push
andl
xchg
int3
adc
pushf
packsswb
mov
mov
push
push
mov
cmc
jp
bound
add
sub
pop
pop
out
into
lods
pop
xor
adc
push
cmp
mov
aas
mov
mov
jecxz
mov
push
aad
cld
cmpsb
imul
roll
and
stc
xor
sub
dec
inc
cmpsb
dec
inc
je
inc
dec
dec
subb
mov
fstl
pop
divb
sbb
rolb
and
das
mov
mov
je
adc
add
jge
mulb
inc
jns
fs
fimull
xchg
push
sbb
sub
testl
push
rclb
movsb
add
and
icebp
test
jo
fisubrl
mov
add
jae
sahf
pusha
mov
sbb
ljmp
hlt
rcr
bound
adc
aad
inc
inc
lret
mov
sub
xor
jo
adc
int3
mov
sti
ffreep
scas
cltd
dec
add
icebp
cld
fcomps
mov
and
or
fld
ja
leave
pop
mov
std
add
loope
sub
pop
dec
push
mov
loopne
testb
jmp
loope
int3
push
mov
adc
loope
sarl
mov
in
add
dec
outsb
outsb
ret
jmp
dec
jp
cmc
add
xchg
cmp
pusha
jmp
fs
lock
dec
mov
test
xlat
jl
xchg
sbb
pop
out
pop
pop
test
sar
repz
push
je
scas
rorl
inc
aaa
and
inc
shrb
movsb
imul
out
jecxz
pusha
adc
idivl
into
adc
mov
aad
sbb
test
fnsave
and
jg
jecxz
stos
in
int
add
fnstsw
jle
push
lods
cmp
and
and
add
and
mov
iret
outsl
jp
lods
scas
mov
xor
test
sar
xlat
and
loop
shlb
jl
mov
xchg
jmp
sub
mov
int3
jo
test
sbb
push
sahf
and
fsubl
int3
rcrl
icebp
stc
fstps
outsb
inc
jmp
or
jge
loopne
inc
arpl
iret
mov
lock
mov
scas
dec
push
xchg
add
sbb
push
loope
or
fisttpll
inc
xchg
out
adc
cmp
sub
pushf
mov
or
outsb
cmp
and
addr16
cld
adc
dec
dec
xor
jp
cmp
sbb
icebp
jg
cmp
mov
movsl
fcoms
and
stos
pop
and
push
movsl
push
push
cmpsb
filds
insl
fcmovnbe
cmp
das
test
dec
arpl
sbb
sub
inc
cmp
cld
push
addb
mov
sbb
jae
push
movsb
in
enter
imul
mov
sbb
xchg
ffreep
cmp
movsb
inc
xor
pop
pop
das
outsl
sbb
xor
cmpsl
xchg
push
add
inc
xchg
sub
inc
cmp
ja
sub
xchg
insl
movsl
add
arpl
and
and
cwtl
movsb
iret
jnp
jge
or
lods
hlt
mov
dec
out
mov
adc
mov
in
aad
sub
aam
dec
mov
cli
out
les
mov
and
jl
jmp
mov
sbb
aas
sahf
movsb
test
push
xor
pop
dec
jo
pop
imul
dec
adc
test
inc
jnp
sar
mov
std
mov
xchg
cmp
stos
add
inc
pop
mov
rorl
jle
mov
out
cwtl
das
cwtl
inc
cs
nop
cltd
mov
add
addr16
scas
push
jae
loop
xor
incb
pop
xor
or
jmp
mov
int3
das
ret
addb
fcmovbe
sub
test
hlt
sahf
push
pmuludq
imul
push
call
aam
cmp
pop
js
shl
ss
inc
cld
inc
idivl
sbb
fs
adc
ret
push
add
and
dec
out
jmp
lock
fisttpll
aad
pop
cmpsb
mov
jg
dec
adc
call
out
and
push
push
je
pusha
bound
and
adc
add
repz
dec
jp
into
and
xor
js
push
xchg
jno
cmpb
in
scas
ret
insl
push
hlt
mov
mov
movsb
arpl
roll
mov
rcl
icebp
icebp
lahf
mov
fldenv
dec
jge
mov
imulb
mov
xor
mov
cmp
test
mov
pop
pop
scas
ret
ret
or
cli
mov
push
xor
in
xchg
mov
push
shl
loope
add
insl
sar
mov
push
scas
ret
jno
test
sbb
fwait
and
pop
jge
test
inc
jae
pop
push
xlat
xchg
inc
shlb
dec
and
mov
hlt
mov
sti
cltd
cmp
rcll
shll
ret
stc
pop
mov
lcall
xlat
push
xor
shlb
mov
rcr
and
jae
add
gs
test
sub
ret
jnp
sub
mov
push
cltd
sbb
mov
sub
fstps
pop
push
sub
jl
mov
cmp
les
mov
aam
shrl
adc
mov
mov
mov
mov
xor
int
cmp
push
stos
cmc
jbe
jp
iret
push
jns
in
mov
repnz
mov
js
xchg
rcrb
adc
lcall
adc
sbb
sbb
repnz
mov
xchg
pop
xor
rcrl
inc
dec
adc
loope
std
xor
ret
addr16
or
or
push
cmp
ficomps
jns
dec
mov
pop
leave
mov
add
fucom
out
lds
inc
loopnew
add
jne
inc
sub
mov
popf
inc
mov
cmp
mov
sti
subb
xchg
xchg
lock
ret
aaa
adc
mov
pop
mov
jle
ret
loope
icebp
shlb
dec
xchg
into
sub
mov
fldcw
adc
or
in
mov
pop
sub
mov
mov
sub
inc
push
mov
cltd
scas
inc
daa
lods
add
sbb
ja
rclb
dec
jg
lahf
cwtl
inc
jne
out
add
nop
out
push
push
sub
mov
int
sbbb
test
sub
pop
cmp
adc
and
jo
repz
aaa
sbb
jecxz
movsl
call
mov
fisttps
pop
iret
inc
notl
push
lcall
push
inc
outsl
push
bound
jne
not
xchg
jne
pop
xor
xor
fcomp
sub
push
mov
xchg
mov
push
arpl
fidivs
and
push
pop
mov
push
sub
je
test
xchg
aam
sub
dec
sub
lret
arpl
jae
jmp
aaa
cmp
enter
lret
je
ds
aad
push
pop
mov
or
in
mov
and
push
pop
sub
mov
es
vmovaps
xchg
mov
loopne
pop
xchg
iret
movsb
stc
rclb
mov
rcrb
leave
in
adc
stos
or
cmp
push
sub
mov
or
pop
xor
mov
fistps
cs
mov
ljmp
cwtl
in
pcmpeqw
stc
std
out
inc
xchg
pop
hlt
jecxz
pop
rolb
or
cwtl
or
push
mov
fildl
adc
fstl
or
push
frstor
mov
cmp
rcrl
lret
pop
lret
mov
stos
sbb
test
arpl
mov
xchg
shlb
adc
adc
pop
pop
xchg
mov
jle
xchg
iret
inc
xchg
lret
int3
fnstenv
jg
mov
daa
pushf
sub
mov
sbb
in
pop
pushf
popa
and
jne
gs
js
cmp
adc
push
sub
das
mov
sbbl
sbb
push
inc
aad
add
ss
sarl
jle
cltd
mov
adc
dec
les
dec
mov
or
lods
mov
mov
mov
rcrl
popf
gs
stos
pop
xorl
lahf
pop
push
clc
out
test
lock
mov
loopne
xchg
pushf
xchg
mulb
dec
add
arpl
mov
mov
mov
jp
jne
xchg
push
lds
xchg
lods
jb
lcall
cmovnp
aad
push
jbe
push
adc
repnz
and
mov
cmpsl
sti
lret
mov
mov
pop
sbb
test
push
in
in
mov
xor
aad
xor
aam
lds
popa
sbb
movsl
inc
shrb
cmp
lods
jb
int
pop
insb
dec
fcompl
sub
aaa
cltd
xchg
cwtl
pop
popa
out
xchg
jge
call
subb
add
pop
mov
push
add
inc
add
dec
aad
movb
jecxz
gs
lcall
cmpsl
add
les
fstps
or
and
outsb
add
add
xchg
xor
out
fistps
shrb
xor
lcall
rcrl
es
int3
xchg
repnz
lahf
pop
mov
adc
sub
add
jg
out
push
enter
sbb
and
cmc
push
out
jo
push
inc
mov
shl
add
arpl
xlat
les
fstpt
jp
pop
les
sbb
inc
push
lcall
cmc
mov
pop
and
jp,pt
aad
daa
jp
fistpll
cmp
jmp
jp
push
pushf
jns
in
add
movsl
test
jns
fcom
gs
and
and
jbe
xor
jl
addb
mov
push
and
nop
mov
xchg
mov
stos
adc
jmp
pop
pop
push
fbstp
adc
inc
es
mov
adc
dec
bnd
jmp
mov
daa
dec
addr16
cmp
cmp
fists
lahf
rorb
and
or
cmp
stos
jmp
sbb
or
adc
jmp
ret
adc
jge
or
add
mov
sub
mov
mov
aas
imul
jecxz
daa
cltd
xor
sbb
das
movl
add
fucom
shll
scas
and
dec
and
out
xchg
cld
adcb
mov
pop
pop
cmp
mov
and
loope
xor
and
test
test
sbb
arpl
inc
add
int3
push
push
test
push
cmpsb
sbb
repnz
in
dec
gs
xchg
mov
scas
imul
repnz
shrl
mov
mov
je
inc
fcoms
test
xorb
push
sbb
xchg
mov
inc
xchg
push
jge
ss
test
and
sbb
mov
xor
cmc
lock
mov
xor
call
je
inc
aam
sbb
jl
rcpps
fcmovnu
sbb
inc
jbe
hlt
xlat
test
aam
nop
out
sub
mov
push
cmp
xlat
push
stos
and
inc
jp
sbb
and
sub
jno
shr
dec
cmp
mov
jp
mov
sbb
sub
cwtl
xchg
cwtl
xlat
in
daa
mov
iret
aad
or
inc
pop
stos
mov
sti
push
jle
jb
pop
or
movsl
push
mov
jmp
jmp
aam
les
lcall
les
mov
or
dec
loopnew
xor
sbb
cld
push
adc
fwait
movsb
out
mov
xor
les
jns
ss
popf
cmp
pop
mov
push
je
ffree
mov
cwtl
jno
pop
and
jle
adc
inc
lods
mov
add
aam
xchg
frstor
cltd
sub
inc
and
call
loop
pop
in
or
hlt
mov
scas
insl
mov
cmpsb
leave
and
pop
in
add
jl
ret
dec
out
dec
xchg
xor
jno
ret
and
jbe
lahf
mov
addl
hlt
jg
jnp
ret
xor
flds
cmp
cmp
scas
pop
scas
dec
or
and
test
mov
mov
lea
mov
dec
sbb
dec
mov
inc
or
or
adc
or
mov
ljmp
push
cmpsl
ja
adc
and
xor
aaa
cmpl
or
aad
adc
int
cmpl
repz
lea
pop
loopne
stc
jmp
inc
aaa
mov
lret
clc
mov
xchg
loope
pop
das
inc
dec
push
ficomps
or
cmp
test
xlat
pop
mov
imul
aaa
shll
gs
dec
xchg
dec
mov
in
pop
sti
loop
jl
dec
cmc
mov
adc
inc
mov
out
outsl
xor
ljmp
push
rcrb
hlt
fbstp
rclb
shlb
lea
push
xchg
enter
jns
test
sbb
or
aam
sub
xor
dec
test
lcall
outsb
mov
popa
adc
repnz
sub
xchg
fs
xchg
fisttpl
pushf
dec
push
mov
mov
sbb
push
xchg
stos
sti
pop
iret
dec
fcoml
imul
test
dec
ja
icebp
arpl
adcl
es
jle
pop
jb
int3
enter
pop
lock
cmp
cmp
jns
xchg
call
sbb
pop
add
mov
mov
out
imul
push
cmp
xor
push
ljmp
mov
inc
jnp
fnstenv
outsb
rcrb
shlb
dec
rcll
inc
push
jl
in
add
test
hlt
ret
push
cmp
sub
cmp
repnz
mov
pop
xchg
fsubrl
rcll
xchg
aaa
out
lret
aaa
loope
lods
sbb
cmpsb
jecxz
xor
call
loopne
loopne
pop
dec
inc
or
sahf
inc
xchg
mov
ret
cmc
int
sbb
lds
xchg
popa
ret
pop
jmp
inc
mov
test
and
lea
xchg
mov
imul
xchg
cmp
in
push
loop
rol
push
lods
xor
movsb
fiaddl
stc
aad
adcb
xchg
or
fisubrl
testl
lock
popa
scas
mov
popa
mov
fistpll
fstpt
or
cmp
cltd
popa
cld
sbb
sti
test
ret
jg
push
cmp
int3
xchg
cmp
int3
sbb
in
arpl
pop
int3
jmp
jae
xchg
icebp
rcll
push
dec
and
inc
inc
jbe
and
sbb
jmp
adcb
jb
cmc
xchg
into
jne
mov
pop
test
inc
fldt
lret
arpl
notl
wbinvd
mov
in
in
or
mov
test
pusha
mov
repnz
adc
xchg
jmp
in
jp
shl
cmp
scas
dec
dec
gs
ret
pop
sbb
add
xchg
mov
test
outsl
sub
jl
cmp
ret
mov
mov
push
shrl
jb
in
jecxz
dec
cmp
pop
push
in
cmp
pop
cmp
mov
cmp
xchg
int
mov
xchg
pop
mov
shll
or
js
rcll
aad
insb
out
lods
frstor
cmpsb
push
xor
mov
aam
jo
or
cmp
aas
cli
mov
popa
test
aam
rorl
sbb
pushf
sub
call
push
ja
nop
jnp
mov
test
sahf
lret
sub
adc
ret
sub
inc
into
rolb
cwtl
xlat
movsl
ds
cmpsl
nop
cli
inc
add
cmpl
push
xchg
xchg
jp
sbb
jle
pop
movsl
dec
sub
push
pop
imul
jecxz
in
arpl
and
lcall
jl
xor
add
imul
or
std
fcompl
sub
pop
jo
adc
jl
jle
sbb
xchg
std
lds
xchg
int
sbb
pop
pop
cwtl
mov
dec
popf
cmp
stc
sbb
cmp
lret
sti
mov
inc
xor
fwait
loopne
negb
cmp
jo
and
dec
jbe
pop
test
pop
fsub
lret
jl
les
fisttps
pop
dec
mov
mov
cmp
jnp
or
fwait
lret
or
mov
cmpsb
mov
adc
jb
sub
in
dec
cmp
mov
or
sahf
sbb
pop
xor
aam
push
jns
imul
jne
xor
cli
mov
mov
addr16
cmc
data16
lahf
lods
push
add
mov
ror
xchg
jbe
imul
adc
rcll
test
mov
sbb
mov
sub
mov
flds
imull
sbb
sbb
xchg
inc
or
inc
movsb
js
inc
jl
mov
mov
pushf
test
imul
dec
or
push
jns
mov
sub
daa
adc
ljmp
sarl
push
out
sub
stos
dec
mov
nop
ds
push
mov
imul
fisubrs
cmp
mov
pop
cmpl
push
ds
pop
les
pop
jp
mov
movl
cmc
icebp
test
fimull
je
je
mov
sbb
jle
and
or
lcall
mov
fs
jnp
imul
aam
jno
negb
pop
push
vcvtpd2psy
xchg
dec
dec
pop
rcll
out
insl
or
cwtl
arpl
mov
movsl
fsubp
mov
aas
insb
stos
and
xor
xchg
xchg
add
aas
cwtl
hlt
mov
mov
mov
cmp
pop
xor
ret
dec
fwait
push
pop
push
movsl
jo
mov
into
cmp
or
mov
int3
loope
ficompl
mov
or
mov
xor
xor
mov
or
shrb
roll
imul
sub
mov
out
push
mov
in
pop
lods
repnz
lods
cwtl
and
mov
or
into
cmp
mov
or
movsl
out
push
loopne
jle
jno
call
mov
lock
lcall
fbld
mov
pop
enter
jo
subb
push
mov
and
movsb
jae
into
and
fdivrs
push
push
cmp
pusha
pop
inc
test
mov
jl
mov
pusha
push
pop
and
bound
dec
pop
aad
inc
iret
push
arpl
push
icebp
cltd
add
fistpll
or
outsb
mov
and
ss
mov
cmpsb
jmp
test
sbb
sub
pop
dec
xorl
or
mov
int3
and
mov
and
jge
arpl
arpl
cwtl
xorl
rol
mov
jmp
mov
pushl
test
js
imul
sbbl
test
inc
pop
fsts
imul
sbb
out
aas
pop
or
mov
pop
scas
fucomip
mov
pop
mov
mov
popf
loopne
cmp
sbbl
push
sbb
add
xorb
stos
xchg
je
mov
add
fs
push
inc
imul
in
adc
dec
shll
movsl
ja
dec
push
and
shlb
leave
sub
stc
test
sar
pop
in
test
sbb
add
adc
ret
rclb
aam
lea
cld
outsl
xlat
jp
inc
repz
pop
mov
sbb
ja
sbb
push
into
gs
ret
mov
mov
or
lcall
mov
jo
mov
cs
cmpb
mov
xchg
jge
aam
shl
jecxz
mov
movsb
add
jo
sti
nop
mov
push
insl
aad
mov
loope
test
loopne
jb
and
mov
push
pop
jg
setae
daa
loop
cmp
mov
stc
sub
sbb
adc
aad
addr16
cmp
push
pop
fstpt
inc
push
loope
imul
lock
fistps
sbb
cmp
lcall
and
add
or
push
adc
sub
push
pop
jnp
test
fadd
outsl
loopne
xchg
pop
or
cmpsb
std
jno
das
pop
and
xchg
mov
shrl
jae
mov
fnstenv
mov
icebp
hlt
daa
pop
xor
and
scas
dec
faddp
int
sub
push
pop
mov
lcall
ret
jns
mov
rcrl
jge
adc
add
xchg
jae
and
addb
mov
insl
pop
mov
xor
add
cs
js
mov
pop
movsb
adc
mov
cld
pop
xor
pop
mov
sahf
fistpl
aam
sbb
outsb
or
stos
pop
xor
mov
adc
stc
flds
insl
rcrl
push
sahf
cmp
dec
jl
dec
scas
std
in
mov
mov
sub
add
lret
push
lds
fdiv
aad
repz
mov
jnp
mov
lahf
inc
rcrl
pop
xchg
fucomip
dec
add
dec
pusha
sbb
or
enter
mov
lret
cmp
pop
lret
xchg
lock
pop
pusha
jae
pop
pop
lret
xor
fbld
nop
lcall
dec
xchg
call
xchg
jecxz
out
mov
mov
mov
mov
sbb
ljmp
mov
fimuls
xchg
mov
loopne
mov
les
cmp
popa
push
add
cmp
dec
xchg
idivb
test
jmp
mov
mov
push
rcrb
or
pop
les
jle
bound
inc
inc
ss
lock
adc
pop
xor
andb
in
call
inc
rcl
imul
enter
pop
fidivl
cmpsb
adc
xor
sar
dec
xchg
push
fidivrs
inc
cmpb
jge
int
xor
push
lcallw
test
sub
jbe
adc
loope
sbb
fs
mov
mov
je
pop
xchg
lods
xchg
cltd
cmp
sbb
orb
mov
in
loope
jno
adc
add
xor
jge
push
cmc
repz
or
iret
mov
xchg
lahf
add
or
aas
pop
xchg
jp
push
lahf
push
lock
jo
xlat
inc
mov
push
inc
cmp
ret
test
jle
sub
inc
loope
mov
mov
cli
bound
xchg
push
sbb
adc
negb
add
push
imul
mov
push
mov
mov
fabs
xor
xor
fistl
and
imul
xchg
push
pop
ss
add
jns
mov
fbstp
pop
inc
mov
jg
pop
or
dec
and
aad
inc
popf
outsl
in
pmaxsw
sub
jbe
aad
push
fnstsw
sub
push
mov
in
xor
mov
shr
hlt
or
mov
mov
or
xchg
or
adcl
je
sub
sahf
dec
pop
mov
push
sarb
clc
mov
and
test
jnp
insl
and
mov
fstpl
leave
xchg
std
shlb
mov
lcall
movsl
dec
mov
jo
notl
clc
movsb
jo
mov
jp
mov
imul
jecxz
push
mov
out
pop
rcll
js
pop
in
mov
xor
lods
mov
jno
xor
dec
ja
icebp
cmc
jp
dec
xchg
outsl
cmp
fisttpll
add
and
bound
and
aam
xor
scas
dec
pop
outsl
jecxz
xor
push
daa
jle
or
testl
xchg
jge
push
hlt
xchg
pushf
pop
lret
xor
cs
add
inc
lret
leave
mov
pop
in
test
movb
dec
faddp
out
mov
mov
popf
cmpsl
lea
in
lcall
sarb
inc
stos
pusha
inc
xchg
or
adc
int3
jle
pushf
sti
jmp
mov
fs
hlt
mull
push
xchg
add
jg
gs
push
mov
ret
iret
out
call
out
imul
movsl
iret
sub
cmp
jle
inc
cwtl
sbb
idivb
inc
in
xor
dec
in
stos
dec
rol
dec
pop
mov
adc
lods
repz
cmp
clc
ljmp
xor
adc
scas
stos
rorl
rcll
jns
mov
icebp
mov
or
mov
adc
sbb
shl
sub
fwait
adc
das
lods
sbb
repz
mov
fistpll
xchg
mov
cmp
test
xchg
fbld
imul
bound
mov
sar
push
mulb
or
imul
jae
call
cmc
adcb
aam
ja
mov
stos
xorl
mov
or
es
cmp
push
adc
mov
mov
inc
and
mov
xor
push
cmpsl
add
sbb
out
ds
dec
mov
aam
cmp
push
ja
stos
and
sbb
adc
dec
or
inc
std
je
out
sub
lea
adc
loop
fnstsw
repnz
cmc
xchg
add
out
adc
ret
jecxz
sub
in
mov
jo
push
pop
in
leave
loope
test
mov
mov
dec
pop
sub
mov
cmpsl
enter
jbe
inc
sbb
adc
mov
inc
insb
pop
adc
pop
mov
mov
mov
push
call
shlb
out
xlat
jl
xlat
mov
and
faddl
sarl
daa
aam
mov
lds
xchg
pusha
sarb
lahf
dec
sarb
mov
jl
mov
xchg
nop
push
mov
addl
cmpsb
xchg
xor
outsb
movsl
push
loopne
daa
repz
fs
movsl
std
push
jbe
jb
cli
scas
xor
or
hlt
pop
adc
arpl
cmp
push
inc
xor
call
pop
js
and
adc
xchg
inc
mov
repnz
repz
in
mov
xchg
stos
mov
pop
jmp
mov
pop
addr16
mov
cmp
xor
mov
add
pusha
mov
sub
pushaw
and
mov
std
mov
loop
aas
lret
repnz
lods
or
inc
sar
cld
add
push
jae
mov
mov
out
fildll
mov
cmp
inc
gs
jb
imul
pop
mov
xchg
mov
fdivl
adc
fnstsw
aam
scas
test
fsincos
into
mov
push
and
aad
jle
pop
lods
setg
inc
hlt
push
imul
orl
call
xchg
iret
int3
sbbl
xchg
das
xor
jb
xchg
cmp
cli
adc
push
test
nop
push
mov
xor
mov
or
fwait
js
jge
mov
lods
xchg
and
std
or
jmp
aam
push
push
jl
repz
addr16
jl
out
mov
sub
mov
or
sbb
mov
cmpsl
pop
test
or
push
in
fs
push
shlb
xlat
or
sbb
dec
pop
xchg
sti
lods
add
and
es
rolb
int
mov
icebp
or
sti
mov
ds
mov
cltd
les
cmp
mov
pushf
push
or
sbb
inc
cmp
bnd
push
fs
decb
hlt
dec
test
sbb
int3
movsl
xor
jmp
sbb
inc
push
pop
and
cltd
sbb
call
das
sbb
pop
pop
jp
mov
cmc
mov
push
push
and
fisttps
aas
ljmp
lods
mov
pusha
ret
push
gs
xchg
test
xor
ror
push
push
ret
xor
aas
imul
std
divb
mov
in
xchg
das
push
clc
outsl
out
fdivs
fisubs
outsb
mov
insl
sbb
aam
push
testb
xchg
sahf
out
pop
dec
and
jne
jp
lds
jae
loop
mov
or
rorb
pop
cmc
pop
mov
cmp
cmp
lret
sahf
adc
push
fcmovnbe
fs
cli
outsb
push
js,pn
scas
lret
imul
dec
mov
sub
movl
mov
std
jp
push
aam
cltd
cli
shl
test
shlb
fs
fwait
imul
outsb
rcl
stc
push
and
mov
daa
stos
int
in
mov
pop
adc
cmp
ret
stc
push
subb
dec
data16
push
xchg
out
xchg
test
std
jae
mov
mov
push
aas
ljmp
cmp
jg
clc
and
mov
jge
adc
push
fsubr
xchg
shrb
jae
or
das
fxch
xchg
adc
lods
sbb
es
sbb
and
sarl
push
push
fcompl
faddl
and
pop
roll
xor
movsb
add
jbe
sub
jbe
mov
sub
xchg
xorl
push
push
decb
or
add
mov
push
sti
jg
stc
js
lret
mov
iret
nop
sbb
and
pop
and
dec
es
xor
mov
jl
inc
arpl
mov
out
xchg
xor
add
popf
sahf
sub
data16
xchg
mov
popa
cmpsb
push
jae
sub
ret
fdivl
adc
mov
in
jmp
neg
jle
test
xor
pop
add
lods
mov
dec
sub
out
jle
xchg
popa
pop
scas
and
xchg
add
xor
sbb
push
dec
dec
mov
lcall
adcb
xchg
pop
repnz
ret
rol
mov
pop
mov
push
gs
icebp
dec
mov
pushf
call
adc
inc
jmp
std
lret
cs
adc
and
or
pop
xchg
icebp
cmp
push
xchg
insb
mov
fcom
mov
mov
and
cmp
fwait
into
ffree
test
ss
jnp
sti
adc
gs
adc
cmp
pop
aad
sti
xor
aas
icebp
or
dec
fisubs
push
xchg
pop
pop
mov
sti
inc
test
push
cmp
push
repnz
fsts
out
push
sub
and
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
scas
lods
aas
scas
addl
sbb
sbb
push
outsl
mov
jns
mov
enter
push
ret
loopne
xchg
inc
pop
pop
addr16
push
rcr
out
add
cmp
lea
push
in
mov
shll
mov
ja
xor
mov
orl
lds
pop
outsl
aad
sub
inc
fwait
sub
mov
inc
js
or
es
fucomip
mull
push
lods
aas
mov
mov
out
imul
push
mov
loope,pn
pusha
hlt
xlat
popa
or
in
sub
mov
flds
and
cs
mov
ret
mov
dec
xor
fstl
pop
mov
js
jbe
jmp
stc
mov
mov
dec
push
icebp
in
sbb
mov
add
fldenv
pop
popa
xchg
mov
and
jns
dec
outsl
repz
cltd
jp
std
sar
je
js
in
add
mov
cmc
fmuls
js
cli
xchg
mov
push
pop
lcall
rolb
imul
pop
mov
xor
loopne
insb
addr16
rolb
imul
cmpsl
xchg
xchg
sub
stos
movsb
fs
fs
inc
xchg
dec
leave
inc
fldcw
rorl
gs
cltd
mov
leave
cmp
ljmp
jne
insb
imul
add
xor
push
lcall
clc
call
inc
addb
out
sub
push
adc
out
ret
fwait
push
sub
sub
adc
ss
loop
pop
insl
pusha
add
or
loopne
xchg
pusha
pop
dec
lcall
and
adc
faddp
or
xchg
dec
mov
outsl
jl
ret
lcall
insb
out
xor
pop
add
ljmp
push
and
rorl
in
jp
xor
inc
pop
lds
pop
push
ja
adc
pop
sarl
aad
mov
dec
call
or
imul
int3
or
or
inc
std
leave
and
clc
lret
push
out
ror
mov
xchg
adc
leave
add
aam
jbe
das
insb
push
jnp
ja
xchg
jg
xor
cmp
cmc
sub
and
mov
pop
xor
sbbb
cmp
pop
or
iret
sahf
xchg
xchg
xchg
mov
daa
xor
cltd
loopne
or
fcomi
ss
mov
outsl
and
jmp
mov
pop
push
stos
ljmp
fwait
or
cmp
decb
cmpsb
out
and
push
sub
test
sub
shll
mov
ret
adc
out
das
les
fstpl
outsl
jns
dec
iret
popa
jnp
push
xor
mov
cmp
repnz
add
or
add
into
pop
jae
mov
fwait
add
mov
fwait
movsl
dec
pop
sbb
or
sub
je
push
xchg
cmp
dec
pop
outsl
repz
dec
mov
adc
push
repnz
push
in
jnp
mov
sbb
and
repnz
pushf
push
jecxz
ret
insb
xchg
jp
sbb
mov
sub
xlat
pop
jb
add
ret
fimuls
test
jle
mov
jae
xor
pop
outsl
push
flds
and
cltd
adc
xor
in
push
add
sub
add
jnp
pop
jnp
xchg
ret
and
xchg
cli
adc
mov
in
jne
je
lcall
or
mov
dec
or
rorb
cmpsl
cmpsb
push
fstpl
mov
cmpsl
mov
stos
push
leave
rolb
imull
xchg
out
push
pop
jmp
push
aad
enter
out
aad
jge
jle
jae
rorb
iret
push
xor
xor
cwtl
dec
mov
sub
sbb
filds
out
xor
cmp
daa
and
mov
and
mov
stos
xlat
stc
rclb
xchg
call
mov
iret
jo
push
test
xchg
or
stc
or
rorb
mov
daa
sbb
js
mov
and
jecxz
insl
sbb
adc
xchg
adc
div
cli
outsb
arpl
sub
cmpsl
sub
mov
aas
mov
jbe
xor
push
aam
push
inc
arpl
popa
scas
cli
out
std
mov
pop
popa
std
fistl
aam
dec
mov
shl
mov
jp
pop
cmovno
pop
in
xchg
inc
lock
ja
repnz
dec
in
pop
stos
push
sub
icebp
sbb
incb
sbb
pop
daa
rolb
jl
js
ss
ret
cmc
xor
xchg
xor
fstpl
cmpsb
pop
movsl
pushf
out
adc
movsb
imul
loope
out
aam
and
jge
dec
loop
pop
stos
mov
pop
fucompp
int3
xchg
out
sub
mov
or
xchg
lahf
and
aaa
test
stos
test
jmp
lds
std
push
fisubrs
iret
insl
sarl
dec
adc
sbb
mulb
mov
sbb
fstp
movsl
pop
stos
adc
loopne
xor
dec
jge
xchg
daa
sbb
movsl
jb
jmp
out
adc
jae
outsl
imulb
ret
call
jne
popa
ficomps
scas
dec
mov
shrb
incb
test
mov
repnz
xor
pop
insb
test
push
push
jbe
inc
xchg
mov
sbb
mov
scas
and
insb
jmp
xchg
xchg
in
cmp
fnsave
call
icebp
jae
das
into
mov
shll
lret
clc
js
adc
rclb
pop
call
pop
pop
mov
out
cmp
push
insl
std
jge
inc
into
mov
mov
rcl
mov
xchg
fisttpl
aad
pushf
xchg
int
inc
add
jae
jmp
fidivs
push
lret
jbe
sbb
adc
dec
into
adc
fs
fcmove
scas
push
stos
add
push
inc
push
outsl
xor
and
inc
inc
std
mov
dec
ljmp
cmp
incb
cmp
mov
or
lahf
push
sub
repnz
call
cmp
enter
jb
and
mov
bnd
jl
push
test
sbb
push
insb
sbb
xchg
int3
orps
cwtl
add
imul
lret
imul
push
mov
dec
xchg
decl
hlt
in
sbb
test
pop
xchg
or
pop
inc
shlb
nop
inc
pop
mov
or
mov
inc
stos
insb
popa
xchg
sbb
in
imul
das
inc
enter
dec
ret
cmpsb
pop
rolb
stos
je
pushf
fadds
jnp
roll
jecxz
cmc
movb
lds
orb
mov
add
mov
jo
push
pop
ret
in
push
pusha
mov
sti
add
lock
dec
inc
sbb
dec
ljmp
add
sub
fcoml
inc
scas
pusha
fwait
xlat
and
out
icebp
insb
icebp
leave
xchg
xor
push
filds
and
mov
lret
xor
mov
mov
imul
mov
enter
inc
dec
movsl
popf
mov
fnstcw
and
jl
fimuls
adc
cmp
jecxz
pop
aas
es
pop
push
cmp
pop
push
mov
xchg
mov
push
mov
outsl
popl
jecxz
push
cs
cmpsb
addr16
sbb
jge
xchg
imul
pop
scas
sub
sbb
das
or
push
push
fdivp
imul
jns
ljmp
scas
movsb
shll
aaa
sub
lahf
addb
xchg
and
xor
cmp
pop
les
in
mov
cmp
sub
dec
scas
pop
aam
ja
frstor
cmp
out
push
fstl
mov
gs
pushf
stc
aam
stc
test
icebp
lret
gs
out
sbb
filds
dec
stos
insl
mov
movsl
call
in
push
add
outsb
scas
mov
mov
mov
ljmp
rol
pop
cmp
ja
xchg
jae
inc
imulb
sub
pop
pop
sub
mov
ret
jle
arpl
sarb
push
jecxz
adc
mov
mov
jo
ret
bound
lcall
test
fadd
testb
es
pop
cwtl
jmp
cmpsb
sbb
sbb
int
into
add
jle
lret
push
and
inc
jmp
clc
pop
jp
pop
push
push
sti
xor
enter
inc
pop
mov
rorb
or
std
mov
add
rclb
sti
sbb
pop
lahf
sub
cld
lret
jnp
lret
mov
arpl
daa
insb
fwait
xchg
jmp
pushf
test
xchg
jb
sahf
nop
je
adc
adc
sahf
mov
repz
mov
popl
xlat
and
cmp
dec
or
lret
inc
repnz
rolb
xchg
inc
fcoms
xor
and
outsb
cmc
xorl
mov
dec
sub
iret
insb
sub
push
mov
push
jnp
fdivs
lahf
mov
or
mov
aas
sbb
repz
lret
jp
jne
cltd
loope
cltd
and
ret
mov
sbb
pop
cmp
ja
sahf
mov
push
jns
stc
adc
rorl
jle
lcall
adc
adc
mov
test
pop
fsubrl
out
push
fidivrs
xchg
in
jnp
jge
mov
lcall
mov
xchg
loope
into
jno
mov
cld
xchg
xor
push
or
mov
fmuls
adc
iret
popf
aas
lock
jg
loope,pt
cmc
mov
iret
repz
sub
pop
lods
icebp
aam
cmp
xor
or
aam
out
out
and
ret
lcall
or
push
mov
adc
ja
mov
ret
adc
or
xchg
mov
or
cli
rcll
inc
cs
add
sub
fcomi
and
in
lahf
xor
mov
and
jb
lret
jne
pop
into
add
lcall
sbb
jo
ds
lret
xchg
mov
aam
in
test
into
mov
xchg
icebp
push
dec
jb
pop
mov
ret
outsl
mov
adc
and
xchg
or
scas
lret
xchg
add
arpl
pop
pop
inc
push
lock
cltd
mov
sub
bswap
cmp
stc
pushf
pop
stos
push
or
daa
fisttps
and
nop
lods
movsl
orb
mov
push
mov
outsl
push
pop
mov
mov
sub
cmp
mov
out
xchg
sub
mov
out
aad
sbb
cmp
dec
fistpl
aas
insl
adc
and
jle
cltd
das
sti
lea
mull
arpl
dec
cmp
dec
in
mov
mov
and
jp
mov
lret
inc
jo
sbb
fldcw
dec
pop
ja
or
aam
pop
mov
outsb
movsl
aaa
clc
adc
out
cli
adc
xor
or
repnz
subb
jecxz
sub
cli
cmp
xor
ficomps
aad
pop
xchg
mov
xor
repnz
pop
nop
aad
mov
jl
stos
loopne
fisttpll
adc
loope
inc
lods
pop
mov
addl
das
or
mov
xchg
inc
fadd
popf
clc
ja
xchg
inc
and
shll
das
sbb
push
jno
iret
test
add
inc
pushf
ret
add
push
shlb
popf
inc
push
pop
pusha
int3
jns
xor
push
scas
cwtl
shrb
pop
iret
repnz
outsl
testl
jmp
sub
mulb
mov
push
sbb
cltd
daa
fcompl
mov
push
fwait
clc
adc
test
mov
sub
or
jo
aam
inc
sub
inc
jecxz
adc
sbb
shll
scas
or
ret
fwait
and
mov
push
mov
test
jbe
popf
mov
pusha
lret
mov
mov
out
mov
movsb
mov
cmp
lcall
jne
cmp
mov
mov
or
mov
mov
adc
sbb
jbe
rcr
mov
lds
push
push
icebp
insb
lahf
sbb
push
mov
test
cmp
xchg
sub
push
push
mov
imul
shlb
mov
mov
xor
iret
jo
cmp
push
inc
inc
aam
clc
dec
push
movsl
shr
mov
nop
addb
es
add
aas
fldl
jno
cmpb
fildl
pop
sbb
fsubl
into
inc
push
sahf
outsl
or
pop
iret
mov
dec
jbe
mov
mov
mov
leave
xchg
mov
pop
xlat
sub
scas
int3
jbe
jae
mov
sub
jmp
jmp
testb
es
jl
btsl
and
push
push
rcll
dec
nop
cwtl
test
xorl
roll
cmp
repz
pop
scas
outsb
iret
movsb
ljmp
sbb
mov
ret
inc
in
xchg
add
push
sub
sub
mov
movsb
sbb
je
pop
repz
inc
cld
xchg
fisttpl
cld
adc
inc
mov
inc
cmp
insb
movsl
mov
pop
jb
jno
add
lret
mov
sbb
and
shr
fistpll
mov
imul
jl
push
loop
adc
pop
loopne
sub
out
stos
xchg
int3
adc
sbb
mov
or
stc
dec
in
and
popf
pop
push
call
out
cmpsl
pmaxsw
testl
sub
mov
adc
rorb
stos
add
sbb
test
dec
gs
je
andb
fadd
mov
mov
or
and
sbb
xlat
int3
ja
pop
imul
icebp
in
pop
enter
arpl
push
sub
jo
fdivrs
repz
mov
jae
cmc
sub
in
or
fmuls
mov
cli
add
or
int
mov
orl
cmp
notb
dec
test
sbb
std
jnp
pusha
rep
shl
fsubr
push
roll
outsb
pop
ds
enter
fs
test
pop
mov
scas
add
pop
xchg
xchg
mov
cmp
shrb
mov
push
dec
mov
pusha
rcl
push
out
call
icebp
push
scas
adc
sub
repz
adc
xor
push
popa
xchg
outsl
add
loop
sbb
sub
jl
mov
and
fnstcw
mov
lock
push
mov
addb
shl
mov
lds
in
pop
cmp
aad
mov
gs
or
dec
ljmp
shll
out
aas
sahf
mov
repnz
aas
sbb
add
fimuls
lods
sbb
setl
out
push
xchg
inc
nop
rcrb
imul
pop
sub
nop
test
fldl
mov
jae
cld
or
imul
or
getsec
pop
pop
insl
dec
std
mov
ss
fistps
stos
adc
push
addr16
adc
lahf
fwait
std
frstor
mov
sbb
rolb
test
in
jg
lods
sub
lods
fwait
mov
jnp
testl
inc
add
mov
xchg
dec
jge
sbb
dec
cmp
sub
adcl
pop
or
xor
add
stos
mov
xchg
add
mov
nop
out
jnp
xchg
inc
xchg
loopne
cmpxchg
mov
mov
imul
mov
xor
dec
jns
repnz
jnp
jb
inc
cmp
outsb
ret
xchg
mov
clc
cwtl
fisubrs
xor
int
aaa
int3
push
bound
jmp
int
fcom
adc
test
int3
movsl
xchg
mov
ds
outsl
test
gs
test
cmpsl
ja
pop
dec
lock
scas
movsb
test
lock
jmp
ficomps
shl
es
inc
mov
mov
sub
mov
popf
sti
lock
movsl
and
popf
fistps
loope
pusha
lret
jo
and
imul
hlt
and
iret
pop
sti
adc
cmp
popa
test
ds
xchg
adc
mov
inc
jge
sbb
mov
loope
push
icebp
stos
mov
or
int3
imul
pop
je
inc
jb
mov
push
enter
aam
outsl
mov
mov
sbb
fcmovnu
mov
js
std
movsl
mov
dec
js
xor
pushf
addr16
js
cmp
rcr
mov
dec
mov
push
push
inc
xchg
cli
stc
ss
shrl
arpl
add
pusha
in
sub
nop
in
sahf
flds
or
sbb
loop
fstpl
imul
sti
movsb
js
shl
add
popa
fnstenv
aas
mov
inc
andb
jnp
leave
in
shlb
sub
xor
xor
lods
sbb
inc
rorl
and
sub
push
add
push
mov
mov
jmp
stos
pusha
call
ret
push
ret
movsb
inc
int
sub
je
sar
fdivp
fwait
jmp
cltd
add
fiaddl
jp
xchg
mov
pop
imul
sbb
das
lcall
outsl
out
das
fnstsw
pop
xor
jnp
bound
cld
and
xor
cmp
lock
test
add
leave
jmp
in
call
add
data16
xchg
cmp
shrl
addl
aas
add
dec
xor
push
nop
leave
xor
or
lods
lcall
insb
jno
xor
pusha
pop
sbb
mov
inc
mov
ficoml
xchg
pop
in
jmp
xchg
mov
lock
test
test
mov
dec
scas
and
mov
jno,pn
inc
sbbb
sub
push
jb
clc
xlat
leave
insb
pop
cli
pusha
aam
jg
div
iret
sbb
cmp
arpl
popa
int3
fwait
shrb
inc
mov
jmp
leave
add
cli
fmul
mov
ds
adc
fstpl
jae
adc
pop
les
xchg
sbb
jno
imul
add
mov
xor
xor
pop
es
test
insb
int
cmp
iret
testl
arpl
addr16
jb
jg
es
add
jecxz
mov
icebp
add
arpl
repz
push
pop
or
inc
imul
gs
sub
xor
fadd
dec
pop
aad
scas
mov
es
cmp
cmp
mov
inc
mov
push
stc
pop
test
push
fisttpll
shll
xlat
mov
scas
sbb
sub
inc
mov
dec
bound
sub
shlb
push
sbb
xor
push
jnp
imul
push
mov
rolb
in
sub
js
jmp
fwait
in
pop
lea
mov
xor
pusha
aaa
lea
scas
adc
and
xchg
xchg
pop
cmpsb
jno
mov
sub
fstpl
cs
out
adc
adc
out
ret
outsl
mov
sbb
xlat
adc
cmpsl
dec
jp
xlat
mov
pop
pop
push
mov
pop
fsubrl
push
loopne,pn
movsb
pop
jae
jo
icebp
out
lock
adc
out
pushf
aam
movsl
bound
cmp
and
xchg
dec
or
sbb
insb
cld
xchg
scas
add
cmp
adcb
nop
rcll
mov
fwait
mov
mov
clc
sub
sub
adc
scas
pop
cmp
adc
cmc
mov
scas
or
stos
inc
jl
xchg
dec
jge
arpl
xorb
jae
addb
loope
jae
aad
aas
sar
or
xchg
add
mov
cmc
das
pusha
xor
je
dec
inc
das
sub
inc
cmpsl
pop
leave
ret
lock
sbb
hlt
test
aad
push
push
add
scas
adc
mov
cwtl
mov
sub
cmpsb
and
push
loope
cmc
lcall
cmpsb
add
mov
inc
mov
and
mov
jnp
inc
xchg
sbbl
mov
push
xchg
insl
and
ljmp
ljmp
pop
stc
adc
sbb
lock
lock
loopnew
cmp
imul
add
sub
pop
mov
pusha
imul
sbb
jbe
dec
leave
lods
int
pushf
push
or
mov
fwait
js
xor
push
add
scas
aad
loopne
jge
mov
test
movsl
xor
push
push
rclb
adc
leave
cmc
jnp
mov
jne
ret
into
xchg
jmp
movsl
jnp
and
inc
mov
adc
icebp
and
scas
test
sub
cmpl
mulb
into
mov
adc
push
enter
and
ret
pusha
loopne
rolb
dec
jge
ret
out
movsb
test
inc
rcll
imul
mov
sti
out
movsb
xchg
add
jmp
test
in
add
daa
stos
xor
loope
addr16
inc
dec
mov
jge
jle
cld
in
inc
ret
imul
cmpsb
out
fnstsw
leave
jne
xchg
dec
ja
in
adc
loope
jecxz
ja
loopne
rorl
sbb
inc
adc
sub
nop
into
cs
or
inc
in
add
mov
mov
inc
inc
mov
ljmp
fs
into
and
mov
es
jge
pop
cmp
xchg
jle
nop
data16
data16
or
and
cmp
or
mov
push
add
xchg
pop
cli
sbb
outsb
jae
push
mov
fsubs
sahf
dec
mov
iret
push
pop
out
cmp
mov
fsubs
jmp
cmp
xor
pop
pop
pop
aad
shlb
lds
fmulp
fwait
push
mov
fdivl
jmp
pop
leave
sahf
add
cs
in
repnz
mov
mov
je
cmp
xchg
add
add
imulb
jle
pop
jno
push
aas
or
aas
jmp
add
inc
pop
mov
fistpl
sti
or
daa
orl
in
stos
xor
ds
fld
insb
pop
lods
push
shlb
imul
stos
mov
fisttpll
sahf
dec
fxch
dec
cmp
in
or
or
enter
testb
inc
mov
dec
popf
sbb
adc
pop
jecxz
jo
pop
add
or
adc
xchg
clc
fld1
cmp
push
or
mov
fimull
sub
cmpsb
inc
stos
push
mov
outsb
cwtl
lahf
loopne
cltd
movsb
leave
cmp
ds
stos
push
fbstp
stos
imul
xor
cmp
aam
push
cmp
andb
ret
ret
pop
or
ss
das
hlt
sahf
cmp
xchg
mov
add
jl
out
add
nop
stc
stc
cli
daa
adc
out
sbb
mov
mov
xlat
push
xor
ds
dec
xchg
das
js
lds
push
add
inc
adc
outsl
lret
pop
inc
popf
jb
ljmp
and
hlt
enter
mov
std
jae
scas
ret
cmp
out
adc
or
lods
aas
aas
add
in
clc
test
inc
cld
sub
daa
hlt
pop
xchg
push
dec
scas
jg
iret
pop
lahf
dec
adc
insl
mov
add
mov
lock
ror
jmp
test
adc
jp
mov
clc
loopne
in
or
cmpb
ret
jne
mov
cmp
rorl
sti
xor
and
push
scas
jns
and
gs
sub
arpl
in
lds
and
out
pop
xlat
sbb
popa
sahf
rclb
ljmp
jo
shrb
jp
test
loopne
add
cmp
pop
sar
loope
cmp
mov
mov
mov
fisubrs
xor
ss
cmp
popa
jl
out
or
cwtl
mov
mov
aam
sub
cltd
test
ud0
mov
imul
and
pop
stos
imul
mov
or
dec
jnp
add
adc
fldt
cmp
lods
outsl
push
dec
jno
mov
inc
inc
mov
ljmp
rcrb
hlt
inc
insl
sbb
cli
gs
and
sub
mov
jp
adc
lea
or
sub
xor
jg
test
pop
lcall
notl
dec
mov
in
pop
orl
sub
jae
scas
fwait
pop
lcall
scas
inc
andb
addb
sub
and
sub
js
xor
shrl
out
or
push
inc
into
inc
insb
adcb
ss
pop
pop
test
dec
push
rcrl
inc
das
loop
push
mov
xor
test
cwtl
push
dec
repz
loope
cwtl
sbb
jp
bound
cmp
sbb
test
imul
idivb
movsb
inc
add
mov
sub
mov
jns
lcall
shl
cmp
repnz
gs
adc
fwait
sub
push
add
call
jg
or
sbb
mov
dec
std
shrl
push
scas
popa
xor
movl
jp
scas
in
arpl
and
push
cld
sbb
inc
push
lods
mov
ret
mov
push
fnstcw
popf
loop
sbb
xchg
jmp
adc
rcrb
sbb
xchg
ja
movsl
stos
adc
adc
cld
cmc
mov
sbb
ficoml
mov
mov
cs
dec
add
sbb
jge
pop
jmp
pop
dec
repz
scas
ds
add
dec
mov
mov
rclb
cmc
jmp
add
ljmp
in
and
div
jbe
jbe
mov
clc
loop
pop
in
push
jle
add
fcomip
lret
push
sahf
adc
shlb
push
sbb
data16
cwtl
sbb
lahf
inc
sub
xor
fs
in
cwtl
jmp
push
insb
adc
mov
int
mov
shrb
ljmp
dec
int
inc
fldt
pop
sarb
cwtl
jb
inc
sbb
fdivrl
sub
hlt
repnz
adc
dec
jmp
movsl
push
xchg
xchg
out
out
lret
movsl
push
sub
sahf
in
mov
lret
lea
jg
lret
lret
sub
repnz
mov
sub
flds
repnz
scas
pop
insb
scas
rcl
sbb
dec
jne
out
sub
pop
loopne
inc
push
cwtl
ret
push
xchg
out
repnz
jb
sbb
push
push
and
dec
push
push
mov
mov
adc
and
popa
mov
ds
cwtl
sbb
mov
jle
stos
pop
insl
jne
sbb
out
subb
or
test
add
test
loop
movsl
out
dec
inc
cwtl
test
sub
lahf
push
outsl
fimuls
js
outsl
fiaddl
pop
stos
cmp
jle
ljmp
adc
out
push
lds
ret
scas
cmp
pop
xor
pushf
add
fsubrs
ja
rcrb
jle
les
pushf
or
sbb
aas
sbb
inc
inc
rolb
fdivl
push
inc
push
sbb
jmp
notl
mov
mov
lock
iret
sub
hlt
sbb
cmpsl
jbe
das
jl
fldl
rcll
xchg
xorl
push
dec
or
loope
push
fs
fwait
xor
sbb
mov
arpl
mov
js
mov
out
cmpsb
aaa
ret
xor
sbb
mov
std
mov
cmp
je
add
in
rorb
dec
cwtl
out
sub
xor
in
cmp
inc
or
dec
jno
push
pop
iret
cwtl
clc
pop
rol
jl
xchg
and
sub
jno
in
test
adc
adc
or
scas
jl
mov
dec
inc
pop
sub
cld
ret
iret
test
add
loopne
leave
dec
fistpll
icebp
mov
test
sbb
adc
mov
icebp
mov
scas
movsl
popf
xchg
push
xchg
jno
jp
lret
pop
and
push
aam
dec
les
mov
mov
cmpsb
push
sahf
loop
inc
insl
scas
and
ss
test
cmpsl
push
push
ret
pusha
bound
sarl
cmc
pop
sbb
sbb
sti
sub
iret
call
pop
scas
jo
clc
addr16
inc
imul
fnstcw
push
jbe
aas
imul
lret
fsubr
mov
add
imul
sub
xor
mov
lcall
pop
andb
adc
shrb
inc
lea
adc
jo
das
in
out
mov
out
adc
mov
and
enter
lret
cmc
addl
pop
aad
or
xor
push
cmp
and
cwtl
mov
psrlq
out
out
mov
into
push
or
pop
add
fisubrs
fsubrl
mov
in
iret
fs
adc
loope
mov
jge
xlat
xor
jp
xchg
sarb
pop
cmp
mov
xchg
xchg
xchg
hlt
pop
outsb
pop
test
cmp
lret
std
pop
cmc
push
cmp
call
mov
and
and
xlat
stos
adc
mov
jge
sbb
push
idiv
cmp
mov
ljmp
sti
std
out
add
inc
sbb
ret
push
mov
jecxz
mov
jg
loopne
movsb
cmp
push
cmp
and
movl
push
add
and
sub
mov
mov
ret
sub
and
jle
jnp
data16
add
or
push
jge
jge
mov
mov
test
push
push
pop
shlb
dec
test
push
mov
clc
inc
jp
mov
pop
clc
ss
cmpsl
imul
push
jmp
pop
ret
mov
fcomip
lods
sub
mov
and
mov
mov
push
imul
dec
leave
inc
pushf
sbb
flds
mov
into
push
sbb
mov
mov
xchg
jns
inc
rclb
stos
jno
xchg
mov
or
fnstenv
mov
repnz
pop
sbb
insb
inc
adc
ret
je
xor
aaa
lock
sbb
arpl
pop
jns
sub
pop
ret
cltd
inc
pop
lret
ret
ror
mov
outsb
out
leave
pop
imul
shll
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
testb
sar
mov
cmpl
ss
clc
shr
loope
or
mov
mov
inc
cmp
inc
or
pusha
dec
xchg
cmpsb
add
dec
sub
sbb
orb
jno
imul
movsl
push
jno
mov
jp
test
mov
stos
adc
movsl
lahf
movsl
ret
sti
outsl
ficoms
mov
mov
mov
adc
sbb
ds
cmp
lods
call
xorb
mov
sub
in
and
dec
iret
inc
les
jne
jae
dec
and
or
sub
mov
aas
sub
sub
sub
inc
adc
cli
adc
push
xor
daa
lods
fcomps
pop
cmp
aaa
ds
sahf
jns
jp
mov
jb
ss
push
push
sub
xchg
cmp
or
pop
ret
push
push
dec
sar
rorb
test
mov
in
sahf
ret
push
push
data16
enter
fucomi
nop
leave
jo
push
push
jg
adc
mov
int
jp
fidivrl
rorl
mov
test
cmp
push
mov
pop
test
es
sub
addr16
in
test
std
or
sub
scas
push
pusha
cltd
xchg
jecxz
mov
pop
outsl
movsl
xchg
add
es
cmc
ss
rcrl
in
in
xchg
inc
add
xchg
nop
mov
in
xchg
mov
fs
jno
inc
xor
lret
div
fs
daa
xlat
shl
pop
cmp
cwtl
repz
cli
jno
aaa
pop
jge
mov
pop
nop
nop
repnz
mov
cmpsb
icebp
sbb
jmp
or
out
cs
mov
adc
aaa
popa
lock
jo
push
push
xlat
cmp
mov
pop
jae
aad
frstor
dec
adc
js
cltd
ja
sub
lret
or
loope
sub
push
sbb
adc
fiaddl
es
lds
mov
int
cs
push
adc
adc
mov
push
jne
jg
jae
insb
inc
mov
cmp
xchg
nop
push
cmpsl
lods
sarl
dec
pop
push
pop
mov
arpl
mov
cmpsl
repz
inc
lock
testl
xor
faddl
popf
shlb
lret
jbe
cmp
and
add
add
and
or
mov
lock
sbb
push
jns
loope
lret
jnp
bound
scas
pop
add
les
mov
sti
dec
xchg
sbb
xlat
fs
or
popf
jnp
notl
cmp
inc
inc
mov
ret
dec
stos
mov
push
and
lods
in
lock
inc
dec
fstps
data16
cmp
mov
push
mov
mov
push
out
push
dec
jo
ret
push
repz
sub
das
scas
mov
inc
movsb
loop
loope
sahf
push
mov
xor
loopne
mov
orl
aaa
mov
divl
sub
and
ss
pop
push
mov
jl
push
sbb
xchg
adc
test
sub
mov
adc
jo
mov
imul
fimuls
sub
mov
aam
pusha
fimull
ret
cmp
lret
insb
pop
jmp
inc
and
add
sbb
mov
xor
jnp
cld
hlt
sarl
jnp
sti
ss
add
cmp
rcll
sub
push
shrb
pop
cmp
xor
test
shl
repnz
dec
jne,pn
imul
jmp
incb
sti
push
push
xor
bound
xor
pop
rcrl
inc
push
test
and
and
out
jae
push
hlt
mov
fildl
loop
push
mov
inc
sbbl
sahf
jmp
sub
outsb
mov
sbb
pop
sbb
std
add
or
pop
push
jae
sbb
adc
sar
or
mov
sbb
add
sub
cmp
dec
or
rcll
imul
mov
fstps
dec
insb
insb
lea
icebp
cwtl
sub
icebp
pop
dec
inc
pop
ret
les
pop
mov
aam
sahf
mov
fsubs
mov
add
jl
pop
mov
loop
push
gs
sub
pusha
xchg
ljmp
inc
test
popa
pop
clc
xchg
mov
mov
sarb
jecxz
aas
pop
repnz
out
push
lock
xchg
leave
out
pop
dec
daa
lea
pop
sub
stc
js
xchg
cmp
sbb
shrl
ficompl
iret
movsb
xchg
mov
lds
xchg
pop
es
stos
mov
dec
fisttpll
daa
sub
imul
daa
sbb
xor
fwait
mov
loope
addr16
adc
mov
rol
shlb
sbb
xor
nop
and
jbe
imul
fwait
jo
dec
out
outsb
ret
loope
fwait
pop
xchg
jge
pop
repnz
mov
jnp
aas
aad
xor
inc
pop
fs
mov
jno
into
into
ljmp
xlat
add
lods
jbe
insb
sub
cmp
in
je
pushf
mov
or
cmpsl
inc
mov
test
mov
push
add
pop
and
xor
shll
ds
cltd
test
sub
dec
pop
insl
xchg
cwtl
es
jbe
lods
jae
imul
adc
bound
jb
cmp
mov
fucom
mov
insb
mov
adc
ljmp
int
cmp
dec
aad
leave
adc
sub
popf
push
mov
inc
ss
cwtl
cli
and
xchg
sahf
les
fimull
daa
lock
sbb
aad
jno
das
dec
daa
push
test
or
fsubr
cmpsl
fnstsw
pop
adc
out
fadd
insb
jp
cmpl
sub
loope
inc
int3
xchg
in
fistl
and
fiaddl
repnz
mov
ja
je
test
lahf
push
lcall
das
inc
pop
shr
jp
sbb
push
adc
pop
in
into
cmpsb
xor
adc
test
xchg
jno
divb
jo
jge
insb
fmuls
int
stc
sub
lds
mov
bound
jno
and
or
fwait
mov
lret
subb
repnz
adc
clc
add
icebp
jmp
xor
ja
and
cmp
es
add
dec
fnstcw
dec
scas
fmull
xchg
xor
fwait
pop
cmpsw
mov
cltd
je
or
mov
aas
or
pop
pusha
sub
cld
mov
or
leave
dec
ds
xchg
imul
call
jno
fldcw
addb
ja
scas
shrl
daa
ficomps
xor
cmc
sub
dec
pushf
mov
sbb
and
adc
adc
out
test
rolb
mov
push
jne
ficoml
mov
jne
in
xlat
mov
pop
or
scas
mov
and
and
jnp
jne
cmp
lods
xchg
xchg
aaa
sub
dec
xor
enter
xchg
nop
sbb
xorl
roll
inc
repnz
xchg
or
inc
imul
sbb
cmpsl
sub
scas
or
imul
mov
mov
push
sub
pop
fdivs
rcll
lret
insl
mov
fwait
dec
pop
mov
clc
aaa
lahf
out
std
dec
int
xchg
push
adc
out
addl
xchg
pop
loop
jno
and
inc
pop
hlt
int3
pusha
fdivs
inc
rsqrtps
sbb
outsb
sbb
arpl
pop
rclb
iret
arpl
add
push
loope
fsubl
or
sub
fdivrl
pop
xchg
int
fsubl
push
data16
adc
pop
mov
ret
in
add
int
sti
fsubrs
xor
mov
push
pushf
jle
fimuls
mov
push
fnstenv
frstor
pop
sub
imul
call
add
les
test
xor
push
jle
or
das
stos
and
nop
rolb
push
and
les
inc
shl
pop
add
jge
pop
ds
pusha
in
push
adc
shll
je
xor
xor
xor
sbb
dec
mov
daa
sbb
in
inc
dec
xchg
and
shrb
lret
scas
idiv
jae
inc
loop
int
stc
hlt
fadd
pop
xor
pushf
fs
fisubl
gs
sbb
ljmp
stos
xor
in
mov
cli
cmp
mov
pop
jecxz
insb
cmp
mov
mov
cmp
xor
lret
sbb
inc
mov
push
out
jecxz
icebp
add
bound
xchg
scas
ds
cs
xor
stc
cmp
shll
lods
and
xchg
js
into
ret
pop
ljmp
in
mov
push
stos
xor
lock
adc
adc
aam
jg
mov
xlat
std
stos
adc
nop
faddl
fsubr
jnp
cmp
jae
in
jno
jp
pop
js
cmp
je
dec
pop
test
or
push
gs
ret
push
mov
mov
ret
lcall
imul
mov
sub
cwtl
mov
sub
jae
mov
push
pop
jno
call
cmp
cwtl
sub
inc
mov
test
call
rcrb
addl
cmp
mov
jp
cltd
mov
int
push
test
jnp
mov
mov
sarl
pop
hlt
shll
mov
ficoml
js
inc
fwait
mov
addr16
pop
mov
sub
fiaddl
popa
test
xchg
stos
inc
out
jge
inc
sub
mov
nop
fcomps
cli
jge
fcmovu
pop
jecxz
mov
mov
cs
movl
js
jns
pop
xchg
cwtl
push
out
jnp
idiv
pop
imul
out
or
stc
in
sub
cltd
inc
shl
inc
cmp
lcall
nop
fstl
pop
popa
push
lea
or
into
fistpll
mov
movsb
push
jecxz
pop
push
push
sub
jle
outsl
inc
adc
pop
sti
int3
into
shlb
cmp
push
imul
cmp
xor
sbbb
cmp
sub
sub
dec
push
cmp
and
inc
xchg
jnp
int
lods
xor
sbb
mov
popa
cmp
cmpsb
je
inc
mov
jae
xchg
aam
sahf
pop
pop
out
pop
ljmp
jbe
icebp
mov
jg
repnz
jp
std
mov
andb
cwtl
ret
jnp
lods
mov
jbe
loopne
outsb
jb
pusha
push
fs
xor
js
in
ljmp
movsb
scas
push
pop
daa
sbb
fdivs
out
mov
jns
sahf
push
add
rcrl
movsl
stos
jo
mov
sbb
testb
dec
jle
sub
jp
mov
cmp
add
cmp
movsb
mov
cmp
push
xchg
data16
push
cmp
jp
adc
outsl
sahf
mov
pop
cwtl
filds
sub
xchg
sub
pushf
hlt
cld
out
shrd
and
sahf
aam
mov
data16
arpl
std
addr16
cmpsb
xchg
cltd
aas
mov
sbb
add
js
test
add
xchg
movsb
enter
push
popf
adc
dec
adc
das
sub
mov
adc
cli
push
pop
inc
cmp
rorb
outsb
xchg
les
sub
push
sbb
xor
push
repz
nopl
dec
mov
jge
div
push
pop
adc
jmp
mov
mov
ret
sbb
cmp
pop
int3
sbb
mov
cmpsb
pop
mov
or
or
adcb
add
sbb
inc
or
inc
mov
orb
or
and
stc
push
xchg
adc
and
out
sbb
mov
pop
push
mov
sbb
sti
jl
or
int3
jg
jmp
insl
int3
sbb
sahf
hlt
loope
sar
cmp
and
push
cmpl
jge
int
pop
aam
cli
test
ficomps
xor
jmp
xchg
mov
cmpsl
inc
mov
inc
lock
in
xchg
imul
bound
dec
mov
adc
stos
add
in
sbb
xchg
dec
and
jne
lcall
adc
inc
mov
jmp
dec
cltd
jne
fucomp
jle
mov
mov
lds
or
jnp
push
cltd
bound
cli
push
pop
cmpsl
clc
mov
sbb
mov
int
insb
xor
xor
imul
mov
movsb
cwtl
mov
xor
or
sub
loope
pop
roll
sbb
jmp
mov
pop
xchg
mov
pusha
ret
xchg
or
aam
pop
mov
movsl
mov
aas
pusha
jmp
and
adc
gs
dec
int3
pushf
adc
cmp
cmc
mov
nop
pushl
xchg
iret
leave
xchg
add
jnp
test
push
or
sub
mov
dec
mov
or
push
add
andnps
jae
fcompl
lods
inc
stos
sahf
imul
stos
out
inc
xor
lea
xor
inc
mov
scas
xlat
cs
pop
outsl
loop
dec
and
mov
mov
outsl
cld
push
add
fcompl
dec
add
mulb
cmc
and
mov
pop
les
test
mov
shl
jbe
sbb
inc
jl
and
sub
xor
xchg
pop
adc
icebp
xchg
cmc
inc
out
adc
ret
xor
jne
pop
scas
jno
jo
popl
sub
inc
jmp
notb
out
scas
lds
dec
pushf
add
int
out
insl
cli
xchg
cwtl
call
in
call
leave
out
pop
fndisi(8087
cld
loope
ljmp
shll
mov
dec
loope
jo
jnp
in
add
sbb
imul
push
mov
lret
xorl
mov
shlb
add
push
jecxz
mov
xchg
jmp
mov
mov
js
repnz
push
and
and
rorb
xor
jl
ljmp
push
outsb
call
mov
sbb
hlt
sub
xchg
es
xor
lret
push
jecxz
add
pop
push
fs
adc
xchg
pushf
imul
dec
dec
cmp
pusha
out
push
std
stc
test
fldcw
push
pop
xor
jecxz
mov
cld
mov
dec
stc
lods
pop
push
lahf
fists
mov
jns
int
mov
rdpmc
dec
rorb
push
add
lret
push
push
int
add
cld
or
inc
scas
ret
jg
popa
jmp
add
int
cwtl
lahf
mov
ss
add
xor
cli
mov
cmp
jle
push
fnsave
adc
pusha
call
dec
stos
cmp
sub
loope
mov
arpl
int
sarb
shll
sbb
call
push
mov
push
xor
scas
and
pop
jg
cmp
dec
jno
stos
in
sbb
aaa
ljmp
push
out
in
push
inc
push
push
sbb
repz
je,pn
ret
fcompl
cmp
push
jbe
pop
andl
repz
rcr
cltd
xchg
inc
lret
fildl
push
mov
push
lcall
mov
dec
scas
add
shrl
es
sahf
dec
mov
add
jns
lea
cmp
movb
or
pop
sbb
xchg
xchg
in
fwait
aas
sub
repz
push
push
or
cltd
cmpb
add
add
jns
jg
call
dec
movsb
jmp
inc
shll
inc
xchg
jp
iret
push
or
mov
mull
movsb
stos
bnd
inc
xlat
mov
and
jo
push
adcl
enter
add
imul
push
aad
cmpsl
add
roll
or
stos
push
adc
lods
adc
mov
inc
imul
dec
xor
add
movlps
dec
jle
mov
cmp
subl
rcr
ljmp
fcomps
or
es
push
rolb
add
fidivrs
sar
inc
icebp
and
lahf
jg
ficoml
jns
lret
cld
bound
pop
xchg
lock
or
lcall
mov
cmp
mov
mov
mov
xchg
cs
rorb
ret
mov
mov
dec
gs
rcll
imul
xlat
jmp
add
sub
int3
pop
lret
dec
out
sbb
xor
add
filds
mov
fsub
in
shl
lret
mov
or
push
enter
ficompl
push
data16
lock
lret
fcmove
sbb
aam
mov
push
fsubrl
rclb
xor
call
or
mov
dec
xor
push
in
push
sbbl
fstpt
lret
in
push
or
les
adc
mov
sbb
dec
nop
test
lret
pop
aad
ret
push
cmc
rolb
push
adc
out
inc
inc
insl
mov
mov
mov
pop
pop
xor
ljmp
xor
sbb
ja
pop
mov
mov
lret
mov
and
or
and
les
sbb
jg
push
andl
and
adc
mov
pop
push
int3
lds
xor
cmc
pop
cwtl
popf
sbbl
cli
jb
dec
js,pn
int
cmp
add
pop
test
xchg
hlt
in
rcll
movsb
and
popf
cltd
in
xchg
cmp
sub
dec
fnstsw
mov
cld
in
lea
cld
lock
jle
mov
repnz
into
rol
dec
push
dec
sub
out
gs
adc
mov
data16
cmp
movaps
arpl
jmp
enter
loop,pt
scas
push
mov
or
sbbb
xchg
fs
aam
inc
cld
jnp
gs
jle
jmp
clc
ds
sub
ret
lcall
inc
and
mov
fwait
loop
jo
dec
mov
sahf
dec
fidivrs
fldl
push
cwtl
push
adc
pop
loopne
push
adc
mov
cmpsb
sarb
dec
dec
fildll
in
iret
push
movsb
imul
inc
push
xor
std
dec
addr16
mov
jnp
aad
mov
mov
and
inc
scas
add
scas
mov
add
insl
xchg
cmc
inc
mov
xor
and
add
lock
and
lods
pop
sbb
jbe
push
outsl
sahf
nop
and
mov
insb
inc
in
dec
icebp
push
sbb
les
xor
inc
push
ja
imul
adc
cmp
and
jl
inc
and
inc
hlt
mov
or
add
sahf
or
aad
sbb
dec
mov
mov
in
xchg
push
ficoml
cs
xchg
out
cltd
mov
imul
shll
inc
lret
test
xchg
or
dec
sbb
push
cld
mov
pop
or
call
cld
sub
mov
int3
repnz
stos
insl
std
sbb
in
dec
pushf
rcrb
or
jnp
cmpsl
test
pop
shlb
in
sbb
leave
xchg
cmp
add
xor
loop
ljmp
mov
aad
out
in
sub
adc
pop
aas
inc
jl
sub
popf
jne
jbe
push
int3
pop
and
cs
xor
push
loopne
or
pop
lcall
setns
and
ja
cld
stos
mov
lods
test
out
adc
dec
sbb
jno
sub
jns
insb
fstl
fstpl
addr16
out
mov
not
cmp
into
stos
lea
cmp
pop
push
mov
and
mov
mov
out
enter
mov
xchg
insl
add
sub
inc
loope
scas
sub
out
fs
punpckhwd
xor
pop
mov
negl
mov
mov
out
jnp
dec
outsl
cmc
call
in
push
adc
data16
mov
ret
jno
jge
mulb
ss
arpl
mov
leave
dec
cmpsl
rclb
pop
sbb
iret
je
xor
mov
pop
sub
cmp
aaa
mov
int3
mov
jne
nop
ret
data16
icebp
fwait
insl
mov
repnz
inc
cmp
pop
in
add
imul
lock
inc
hlt
mov
xor
shlb
lret
int
bound
in
mov
or
sti
pop
fdivl
cmp
xor
leave
cmpsb
push
xor
add
ficoms
jne
mov
mov
jbe
popa
fnstenv
frstor
sbb
mov
xchg
mov
xchg
mov
xchg
fisubs
stos
fiaddl
adc
addb
fs
lock
adc
fstpl
stos
lea
mov
mov
shlb
fisubrl
jns
cmp
out
mov
dec
or
aaa
xchg
movsl
mov
sbb
mov
mov
and
fnsave
and
mov
push
in
push
gs
push
lcall
xchg
lahf
pop
mov
cmp
lea
or
push
imul
dec
mov
mov
add
dec
pop
in
call
incl
je
roll
jns
and
jp
ds
sbb
fsubrl
pop
lcall
and
add
and
out
push
popa
call
mov
xor
das
xor
xor
out
repnz
mov
je
nop
js
cmp
fcompl
repz
xlat
cmp
das
jne
sub
test
jge
movsl
imul
lret
mov
insb
inc
enter
lds
mov
xor
mov
dec
cmp
push
js
nop
gs
inc
cld
insb
cmp
pop
and
std
jno
pop
mov
push
popl
pop
ret
lods
and
sar
push
sub
inc
or
mov
inc
test
adc
cmc
cmp
jge
testl
enter
push
inc
nop
mov
jbe
punpcklbw
inc
inc
je
sbb
pop
sar
popa
jecxz
pop
xor
sub
ss
sub
and
mov
inc
cmp
popf
dec
mov
stc
mov
aad
or
mov
in
mov
mov
lcall
insb
in
repnz
test
or
es
jmp
or
mov
sub
push
jg
pop
lret
inc
push
test
xchg
cld
imul
fstps
cmp
pop
jl
mov
ret
or
jnp
mov
dec
nop
mov
jmp
test
leave
in
lahf
stc
movsl
mov
cmpsl
jb
jle
lods
sahf
fucomp
and
hlt
xchg
xchg
xor
testl
rol
fisttps
jl
sarb
mov
xchg
xchg
push
test
xorl
fs
fcoml
mov
add
outsb
lds
pop
sub
jg
jb
out
add
in
lds
out
lret
dec
adc
dec
add
lahf
push
in
mov
mov
ja
xchg
pop
dec
xor
mov
es
push
lods
daa
data16
pop
jecxz
fsubs
in
sub
aas
push
xchg
mulb
out
push
icebp
jo
arpl
mov
push
in
inc
mov
inc
dec
aam
xchg
aas
imul
jecxz
dec
push
mov
or
stos
imul
cli
stc
and
jecxz
xor
push
pushw
test
jns
pop
rclb
cmpsl
jne
xor
xchg
xchg
iret
or
nop
fbstp
fistl
lcall
fsubp
push
cmp
enter
dec
sarb
fistps
push
fiaddl
lods
adc
sahf
lods
cmp
out
inc
jl
add
xchg
mov
sbb
dec
es
mov
imul
and
pop
imul
cmp
or
jne
into
push
jnp
setge
aaa
push
cwtl
out
std
dec
inc
push
dec
cmpsl
jge
inc
insb
inc
repnz
and
jg
mov
roll
je
into
daa
je
and
ja
jge
adc
das
subb
mov
sbb
int3
test
cmp
jbe
pop
cmp
pop
dec
and
mov
stos
lds
or
inc
sbb
jo
xchg
sub
jg
jge
rcrl
dec
iret
loop
clc
decl
adc
imul
ja
adc
jp
mov
xorb
adc
jo
arpl
icebp
cmp
mulb
or
pop
pusha
out
fistpll
ss
pop
jbe
ljmp
fisubl
test
push
mov
or
mov
lods
sbb
sub
hlt
ss
aad
mov
jl
xor
add
rclb
jp
xchg
and
xchg
mov
cmp
sub
imul
popa
and
sbb
sahf
das
mov
push
icebp
xchg
cmp
dec
xchg
jmp
sbbb
fsub
mov
add
xlat
push
out
aaa
insb
jns
push
xlat
dec
repnz
popf
pop
inc
mov
or
cmpsl
xor
pop
push
pop
add
pop
mov
mov
jecxz
cmpsb
cmp
pop
push
adc
push
cwtl
loop
std
add
xchg
lret
add
subb
imul
incl
inc
test
cmp
push
fisubs
mov
es
push
cld
add
pop
lcall
movsl
mov
pusha
and
insl
jg
xchg
jo
ja
stos
and
lods
push
mov
inc
cmp
movsl
dec
ljmp
dec
sbb
jne
push
mov
sub
jmp
lock
and
loop
fdiv
mov
mov
jle
mov
test
movsb
mov
repnz
outsb
pushf
mov
in
mov
sbb
sub
jno
scas
outsl
mov
test
xor
popa
xor
addr16
out
pop
pop
cmp
lahf
adc
fwait
sbb
inc
xor
pop
sbbl
dec
cld
lcall
movsb
addl
mulb
test
and
nop
loop
pop
sbb
int3
out
or
je
lret
les
xchg
stos
mov
test
imul
mov
or
call
add
mov
mov
inc
sahf
inc
push
ljmp
inc
cltd
fisttpl
sbbb
lret
push
add
mov
mov
lcall
xlat
mov
jb
cmp
iret
xchg
push
mov
adc
cli
inc
int
jge
mov
lea
testl
sbb
pop
je
jae
aad
mov
pop
jae
or
out
cmp
xchg
std
in
test
hlt
int
lods
pop
and
mov
mov
pop
daa
das
push
fdivrl
add
inc
push
sbb
leave
push
xor
test
xor
inc
xor
test
or
pcmpeqw
xor
adc
mov
dec
mov
inc
xchg
cmpl
push
repnz
adc
lahf
mov
push
xor
cli
jb
jmp
in
cmpsl
sbb
sbb
rorb
ret
sub
outsl
mov
inc
sahf
xchg
roll
inc
sub
cmpsb
subb
mov
cs
pop
inc
sbb
addr16
xorl
push
adc
sbb
clc
insl
insl
dec
inc
insl
scas
jle
repnz
psubusw
imul
xchg
adc
daa
add
add
inc
pop
push
or
repz
sub
sub
repnz
add
adc
mov
inc
stc
shlb
shll
jno
out
ss
pop
adc
and
fs
movsl
cmpsb
cmpl
stos
rorl
fistl
cmp
jb
push
pop
outsb
sti
js
ret
xchg
and
mov
aam
repnz
in
push
adcl
inc
mov
inc
mov
add
mov
out
ficompl
xlat
dec
xor
stc
push
push
arpl
push
js
add
popa
mov
pushf
mov
outsb
and
fcmovne
cmp
out
repz
imul
aad
pop
sbb
jg
jne
pop
rclb
outsb
mov
ja
pop
pop
arpl
sbb
fstl
scas
jecxz
xchg
mov
fldcw
into
dec
movsl
sub
lods
pushf
repz
ret
push
sub
adc
gs
lds
lret
cmpsl
enter
in
xchg
sahf
add
stc
in
repz
jl
dec
xor
cmp
out
push
std
das
jle
in
mov
pop
xchg
mov
pop
mov
out
loopne
rorl
stc
xorl
jle
in
in
lods
pushf
pop
lock
mov
pop
mov
lods
cwtl
clc
mov
inc
loop
xor
pop
fsts
pushf
outsb
pusha
cmpsb
cmp
rclb
lds
pop
xlat
out
or
cltd
push
popa
inc
pusha
cmp
test
jmp
mov
repnz
imul
ficoml
push
sub
mov
call
aam
and
sti
mov
pop
aad
lds
pop
cmpsl
mov
inc
jecxz
fadds
mov
aam
mov
adc
outsb
dec
lods
fsubrl
mov
rcrb
sub
test
mov
test
ror
in
jae
shl
jbe
push
cmp
pop
pop
lods
stos
push
int3
add
mov
push
iret
sti
imul
cmp
pop
inc
inc
lret
sub
sbb
das
or
imul
loop
pop
jbe
shll
int3
add
movsl
xlat
xor
dec
dec
lea
adc
jno
xchg
xor
mov
sti
popa
push
push
fidivrs
bound
shlb
movsb
rol
cmp
insl
sub
addr16
jmp
jl
or
shl
fadds
fwait
daa
lret
ja
scas
ret
mov
push
and
mov
rcl
pop
mov
shrl
inc
mov
cli
pop
jbe
xchg
rcrb
inc
mov
and
fdivp
sbb
or
test
xor
mov
dec
jnp
cmp
jnp
jbe
or
sub
dec
mov
gs
sahf
test
cmp
xchg
add
sbb
jl
xor
insl
pop
mov
popf
sbb
aas
xlat
mov
shr
ficompl
sbb
mov
sar
pop
adc
inc
xor
or
fcompl
mov
xor
mull
or
push
pushl
ret
sub
dec
dec
mov
sbb
sub
popl
in
lods
cli
insl
jns
aas
lret
lea
mov
sbb
popf
cmc
dec
xor
or
mov
cld
idivl
lret
mov
lahf
das
es
rorl
and
cmpb
imul
jl
add
xor
test
cld
push
iret
fldcw
xor
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
push
add
push
xchg
jns
mov
pushw
orl
jge
dec
movsb
test
in
cmpsl
sbb
cmpb
test
pop
mov
mov
jb
lcall
push
sahf
lds
xchg
inc
jo
xchg
test
scas
sub
cwtl
imul
test
in
fwait
mov
out
flds
aas
push
jle
rorl
pop
and
jmp
mov
lods
outsb
pop
and
xchg
lods
inc
cmp
pop
sbb
popa
jb
xlat
jle
jecxz
loopne
icebp
push
xlat
repz
mov
or
mov
mov
pop
jne
movsb
push
jmp
ja
iret
mov
repnz
in
inc
aaa
inc
leave
pop
icebp
sar
pop
movsb
arpl
jmp
je
outsb
mov
sub
jg
icebp
loope
sbb
scas
and
fnstenv
xchg
cltd
xor
adc
pop
fcmovb
subb
shrl
cli
popa
xchg
adc
dec
dec
out
xchg
push
repnz
cmp
add
pushf
push
push
out
cmpsb
clc
outsl
and
mov
xchg
push
arpl
jbe
jnp
cmp
gs
lock
inc
ss
movsb
aad
adc
nop
push
ja
adc
jp
bnd
mov
shrl
xchg
cmpsl
das
push
jp
adc
mov
fwait
xchg
push
test
and
std
pop
adc
cli
push
rorl
adc
dec
inc
mov
shl
test
or
xchg
dec
push
inc
push
lcall
sti
jmp
leave
xor
cmp
sbb
movsl
dec
lds
and
add
aaa
fwait
pop
mov
mov
mov
mov
decb
gs
sbb
cs
mov
xchg
pop
iret
dec
mov
mov
cmp
inc
fadds
push
adc
daa
je
movsl
js
add
sub
sub
stos
add
insb
sub
rcll
pop
jns
add
test
mov
mov
shl
int
jp
lods
outsl
fisttpl
mov
xor
pop
or
add
add
repnz
jecxz
pop
push
and
loope
fidivrs
xchg
inc
js
cmp
out
push
push
xchg
xor
jnp
andb
jbe
or
mulb
es
lock
icebp
sbb
xchg
or
pop
repnz
jnp
outsb
mov
enter
nop
mov
sub
stc
dec
test
sbb
mov
sub
add
mov
mov
xchg
push
xchg
jmp
pop
mov
ja
cmp
mov
push
ud1
xor
xchg
addl
add
mulb
adc
push
dec
dec
aad
jmp
sub
adc
insb
mov
aas
add
out
adc
leave
fimull
mov
adc
or
mulb
in
popf
mov
inc
popa
mov
pop
push
addr16
push
fwait
cmp
mov
dec
fcos
insb
jae
mov
push
ss
fcmovne
mov
adc
sarl
ror
loop
fimull
icebp
hlt
loope
push
adc
dec
outsl
dec
adc
cmp
cmp
and
cmc
and
mov
les
xlat
arpl
std
xchg
sahf
push
or
lret
mov
pop
dec
pop
idivb
add
xlat
cmp
cmpsb
mov
xor
inc
into
push
cmc
dec
bound
test
test
push
lea
ss
jns
in
or
shl
jae
pop
mov
inc
dec
loop
lock
mov
imul
testl
push
lock
inc
mov
inc
or
ret
fbld
inc
aam
ret
mov
movsb
adc
hlt
jl
and
sarb
mov
movsl
xchg
out
cmp
je
and
jno
es
fninit
jb
daa
xor
pop
jae
jne
call
xor
testl
cli
or
jp
nop
mov
dec
mov
xor
pushl
stc
aas
andl
push
mov
popa
fldcw
or
mov
and
out
lods
imulb
sbb
movsb
nop
test
mov
or
loopne
mov
bound
rorb
outsl
xchg
pop
lret
xor
inc
sti
or
imul
jmp
inc
sbb
or
repnz
push
xor
lods
pop
sub
cwtl
push
lret
lcall
ficoms
jae
roll
mov
nop
ret
dec
xor
pop
fs
xchg
xchg
rclb
sub
outsb
adc
test
jp
mov
cli
mov
js
mov
lret
call
cmpl
dec
mov
sbb
aad
jecxz
push
daa
stos
add
subb
or
data16
fisubl
xor
sbb
push
xchg
push
pop
jbe
fadds
shlb
xchg
xchg
adc
mov
cmp
pop
popa
test
test
adc
jecxz
movsl
out
xlat
or
pop
dec
out
push
fs
cmp
fdivl
mov
scas
xlat
js
jp
cmp
sub
cs
in
dec
xchg
add
cmc
sub
aas
add
cmc
jo
lahf
sar
or
and
cmpl
icebp
fdivl
leave
movsb
inc
frstor
xorl
cmp
xorl
xlat
cmp
jno
pop
addb
lcall
fcmovne
in
fcomps
aam
mov
inc
in
mov
pop
repz
jle
ljmp
pop
fwait
je
jae
mov
mov
and
cltd
mov
xor
into
mov
fidivrl
aas
pushf
jecxz
or
hlt
add
xor
mov
push
jp
or
and
test
lock
mov
add
pop
pop
lret
pusha
je
out
lods
enter
ficomps
shll
pop
push
push
fnsave
jmp
inc
hlt
enter
rclb
push
dec
push
lahf
push
scas
cwtl
push
ja
sub
int
movsb
push
popf
add
mov
and
push
insl
shlb
xor
add
and
dec
adc
mov
mov
sbb
xchg
cmp
mov
icebp
xor
repz
imul
sbb
popf
filds
inc
cld
mov
cli
adc
sbb
and
shl
mov
pop
out
enter
fcoml
xlat
loope
repnz
fldt
lods
xlat
push
je
cs
pusha
add
int
sbb
mov
fcoms
test
lret
lret
sbb
js
inc
mov
adc
sbb
jg
pop
adc
pop
outsl
loop
inc
fcmovnb
or
xchg
popf
mov
xchg
inc
pop
aas
sub
mov
push
xor
movsl
inc
dec
cmpsb
jmp
leave
out
lea
orl
jo
das
stos
mov
mov
fsubs
imul
pop
movsb
maskmovq
pop
loope
and
test
call
cmc
mov
nop
dec
or
test
push
inc
ds
jg
repnz
shrl
sbb
in
out
pushf
mov
xchg
out
inc
sub
lea
mov
movsb
push
xchg
orl
nop
outsb
mov
inc
movsl
and
jns
and
fiadds
mov
aas
xor
or
jle
jmp
mov
push
aaa
data16
pushf
stc
out
push
icebp
iret
xchg
les
pop
sub
jns
or
xor
mov
enter
mov
movsl
jp
out
mov
add
fimuls
fadd
pusha
fnstenv
xchg
inc
push
imul
stos
movsb
push
adc
sub
mov
or
out
les
xor
and
push
pop
pop
stos
inc
jo
sub
icebp
ss
mov
shr
mov
mov
jecxz
mov
sub
cmc
sbbl
insl
cmp
ljmp
lcall
sub
test
aas
out
mov
nopl
mov
adcl
lods
jle
mov
xchg
jp
fstpt
popf
out
out
xchg
cli
jge
mov
add
insl
outsl
fbstp
les
mov
add
push
lods
mov
push
adc
das
xor
inc
add
mov
mov
add
and
and
in
cltd
mov
mov
or
jo
xor
insb
clc
cwtl
cmp
int
movb
loopne
sub
xchg
idivb
rolb
pushf
mov
loope
xchg
inc
inc
sbb
mov
adc
sbbb
sub
aad
pop
shrb
in
movsl
fdivs
mov
inc
sbb
cmp
jns
or
pop
mov
jno
hlt
out
sahf
inc
push
or
fwait
adc
repnz
adc
add
inc
xchg
je
push
sbb
mov
xor
repnz
sbb
pushf
sub
xchg
and
int3
fdivl
cmp
sahf
mov
cmp
stos
cmp
test
arpl
xchg
jg
lods
sub
nop
push
cmp
adcl
mov
xorl
sub
mov
add
sahf
div
test
or
insb
pusha
cmp
nop
ret
cmp
dec
push
leave
stos
lcall
dec
cld
lea
pop
in
and
mov
je
adc
mov
mov
xchg
mov
insl
mov
inc
addl
inc
popa
add
loope
loop
mov
adc
ds
pop
mov
sbb
mov
pop
lods
add
push
scas
idivb
pop
test
in
in
lahf
mov
jne
ret
or
repnz
push
mov
inc
mov
pop
pop
nop
push
scas
cld
lods
pop
testl
add
cmp
or
mov
push
les
lock
sub
arpl
mov
in
pop
xchg
xchg
adc
aas
lea
aas
je
movsb
mov
movsl
addl
add
lock
jae
mov
push
rcrb
and
in
push
pop
int3
pushf
cmp
pop
xor
scas
and
xlat
dec
xor
stos
xchg
xchg
subb
sbb
or
fsubs
pop
aam
mov
adc
xchg
xchg
jecxz
cli
aas
mov
inc
pop
es
push
push
icebp
pop
mov
xchg
cwtl
adc
push
push
push
repz
adc
imul
loope
pop
or
popa
xchg
push
fcompl
or
lahf
mov
dec
xor
test
and
add
fiaddl
fucomi
orb
add
outsb
mov
rcll
mov
int3
nop
and
int3
outsb
jmp
ret
jecxz
jbe
push
mov
fs
lcall
js
dec
movsb
xlat
lods
pop
aas
mov
loop
pop
xlat
and
pop
mov
pop
fcomi
insb
mov
cmp
daa
jmp
jno
cs
mov
or
scas
test
je
movsl
out
dec
js
mov
aas
test
repz
movsl
pop
xor
ljmp
loope
and
int
arpl
adc
lret
mov
add
sub
adc
push
add
pop
int
adc
inc
jae
mov
pushf
mov
fbld
add
pop
inc
ret
out
dec
dec
dec
adc
cli
aad
mov
or
loopne
jb
dec
dec
jno
inc
push
test
scas
out
stos
adc
ficoms
outsb
aad
rorl
lods
pop
jae
les
add
clc
cmp
test
mov
pop
mov
add
jp
stos
adc
inc
cli
jae
gs
insl
inc
mov
popa
mov
mov
mov
jns
jno
add
sub
sub
push
ljmp
dec
sbb
pop
ja
pop
push
insb
pop
or
popf
lahf
jo
and
xchg
lods
or
sbb
ret
push
popa
mov
and
arpl
mov
sahf
push
mov
mov
jae
push
pop
pop
movsl
xor
test
inc
out
adc
jne
xchg
enter
and
mov
inc
add
subb
fcoms
jle
repnz
aas
popa
jnp
lret
mov
enter
add
mov
push
pop
xchg
xchg
jnp
movsb
dec
xchg
xchg
cmp
in
cli
es
cmp
ror
repnz
stos
xchg
mov
iret
add
pop
in
aam
iret
push
andl
repz
push
adcl
mov
clc
ret
mov
adc
lcall
sahf
xchg
sbb
and
inc
iret
sub
mov
dec
and
sbb
shrl
pop
test
cmc
inc
cs
dec
push
fs
addr16
pop
pushf
loop
jno
pop
push
fwait
and
jmp
mov
push
imul
mov
xchg
cmp
xchg
loopne
hlt
add
shr
stos
mov
iret
jbe
add
dec
push
enter
mov
mov
mov
sbb
sbb
sti
inc
call
movsb
aam
lret
mov
mov
jbe
iret
dec
scas
sub
shlb
sti
outsl
mov
push
fsubl
mov
fisubs
ljmp
les
sbb
loop
dec
jge
xor
insb
fldl
cmp
pop
int
jo
and
pusha
cltd
mov
add
imul
or
pop
out
in
xchg
fsts
mov
cwtl
outsl
push
ficoms
add
pop
xorl
out
xchg
add
iret
ljmp
les
mov
popf
stos
mov
cmp
scas
lcall
outsl
lods
mov
mov
adc
shll
mov
aaa
lea
aaa
jp
mov
adc
cmp
fldt
sbb
inc
cmc
mov
xchg
addl
loopne
dec
push
sub
je
cmc
pop
cs
jns
dec
mov
cltd
lock
out
xchg
and
or
or
dec
inc
mov
aaa
fcoms
fldt
icebp
xor
clc
dec
pop
testb
mov
inc
add
pushl
xchg
sahf
fldt
pop
pop
int
pop
xchg
fdivrs
pop
push
imul
mov
push
lea
sbb
and
cmp
jge
lods
sub
in
test
jl
lea
and
sbb
xorb
aaa
push
outsl
fbstp
fwait
inc
adc
jge
in
mov
jb
lods
icebp
leave
sbb
mov
cmpsl
ja
outsb
add
enter
ja
ja
stc
dec
sbb
or
mov
xchg
jecxz
sti
stos
out
in
icebp
andl
mov
je
movsb
jb
sub
mov
data16
loop
fdivrs
inc
mov
stc
sbb
rolb
push
mov
nop
mov
pop
jb
dec
rcrl
imul
push
jp
cmpsl
mov
add
mov
pop
shlb
inc
nop
dec
outsb
add
inc
pop
mov
adc
jo,pn
mov
aas
fisttps
das
lea
repz
daa
les
dec
testb
es
js
cmp
cltd
push
pop
fmuls
inc
loope
pause
inc
outsb
test
xor
xor
push
pop
lret
cmp
fildl
push
push
xor
into
pop
out
sbb
xchg
test
mov
imul
movsl
mov
inc
cmp
ds
push
pop
adc
jne
loop
and
loopne
cltd
daa
dec
clc
sbbl
pop
mov
mov
popf
notb
daa
inc
fsubl
repz
jae
xchg
cmp
fbld
aam
sbbb
push
ja
xchg
lds
and
lret
and
xchg
aam
pop
xchg
push
movsb
shll
mov
mov
push
add
stc
nop
add
push
hlt
push
adc
pop
movsb
mov
scas
mov
or
mov
mov
movsb
dec
xchg
stos
pusha
push
push
mov
push
out
sti
inc
out
mov
xor
mov
mov
pop
mov
pop
test
loopne
push
xchg
and
shll
push
nop
mov
sbb
idiv
xchg
ss
aam
or
adc
push
mov
gs
pusha
jmp
push
and
or
nop
inc
lcall
add
pop
in
mov
stos
pop
sbb
push
jo
mov
dec
daa
fisubrs
inc
mov
sarb
outsb
cli
fadds
and
xchg
lahf
movsb
jae
leave
lods
cs
wrmsr
and
xor
pusha
sbb
pop
xchg
push
xchg
shl
insb
or
or
sbb
jge
jge
xor
notl
and
mov
js
lods
mov
test
push
rorl
aas
lea
das
jbe
cltd
mov
mov
jp
movsb
xchg
xchg
jmp
addr16
inc
and
stos
iret
bnd
sub
or
out
sti
movb
push
jge
pop
or
mov
dec
sarl
stc
and
js
dec
push
in
ja
xor
xorb
cmp
sti
inc
fcmovnb
loopne
movsl
js
mov
fnstenv
stc
lret
fstl
incl
inc
iret
in
jecxz
ret
jnp
jo
and
sub
mov
xchg
fcoml
sub
push
xor
in
adc
rcl
mov
not
gs
aaa
mov
inc
jb
cmp
cmp
test
sub
lret
loopne
lods
push
sub
mov
loop
insl
dec
inc
xchg
adc
mov
cmpsl
cmp
add
sarl
int3
sub
sahf
mov
and
aas
aad
mov
dec
arpl
fwait
add
addr16
rorl
imul
cmc
test
aaa
push
mov
sarb
jl
ss
pop
pushf
movsl
inc
ret
je
hlt
out
loopne
sub
repz
stos
push
sahf
cmp
xlat
test
scas
sub
pop
jmp
in
mov
add
in
clc
cmpl
shlb
scas
or
jecxz
imul
and
int
jae
cmp
add
and
sbb
xchg
pop
lock
iret
out
push
xchg
push
pop
lahf
das
aaa
jb
sbb
loop
cld
into
jg
in
in
jne
arpl
aad
cmp
adc
sbb
ss
cmp
push
cmp
nop
jb
mov
push
lods
or
cmpsb
push
leave
or
jnp
pop
pushf
les
inc
cs
popf
and
hlt
mov
jmp
sub
adc
xchg
add
pop
pusha
sbb
xor
sbb
fs
test
mov
in
rcrb
cwtl
or
jp
mov
mov
cmp
jge
loope
cwtd
mov
mov
xlat
movsl
jbe
mov
or
mov
dec
xor
xor
test
push
xchg
lock
int
push
push
inc
pop
cmc
mov
jae
inc
inc
ret
cltd
jp
xlat
ret
lret
dec
cmp
adc
outsl
xchg
je
ljmp
sub
add
js
lods
repz
push
lods
sbb
jg
leave
mov
test
sub
xchg
loopne
aas
adc
and
jg
push
xchg
push
jecxz
enter
enter
fs
aam
insl
test
cmp
add
int
dec
dec
pop
sbb
jnp
pushf
sbb
daa
pusha
dec
pop
inc
ljmp
nop
subb
loope
aad
outsb
sbb
lds
sbb
jnp
mov
popa
xor
or
pop
dec
enter
pop
mov
cmpl
jbe
xchg
sub
clc
fstpt
and
out
sbb
sbb
ret
jno
add
sub
xchg
andl
int
mov
jge
int3
dec
push
sar
xchg
cmpl
xor
xor
mov
clc
addr16
subb
mov
push
and
and
rcrb
mov
pop
nop
push
sub
push
sbb
and
pop
add
inc
shl
pop
sbb
test
mov
xchg
sti
and
leave
addr16
in
xchg
in
xchg
addr16
dec
sbb
pop
push
jle
push
les
mov
hlt
mov
stos
cmpsb
mov
dec
fnsave
jp
fwait
mov
push
mov
cmp
aam
adcl
mov
xor
mov
aas
pop
add
push
ficoml
or
jno
out
cld
out
cmc
or
mov
fidivrs
lret
sub
jl
cmpsl
out
bound
mov
outsl
push
fwait
cmp
movsb
in
mov
test
mulb
clc
shl
xor
inc
movsb
inc
rolb
ss
fiadds
push
inc
sub
cmovge
push
xchg
aad
mov
testl
insb
push
outsl
clc
hlt
shrb
cmp
stc
jno
or
push
mov
xor
test
daa
and
fnstenv
jge
fmuls
sbb
mov
mov
out
in
push
adc
aad
clc
and
or
push
js
or
stc
in
sahf
repz
aaa
loopne
xchg
lret
aas
mov
ljmp
or
xchg
nop
jl
imul
push
add
xor
xor
faddl
test
fsubrs
imul
push
icebp
and
pusha
pop
and
inc
push
repz
jecxz
cmp
xchg
xor
or
mov
jbe
sysenter
sbb
push
adc
fsubl
pop
mov
ja
movsb
pop
mov
sbb
pop
xor
mov
add
dec
icebp
xchg
cmp
test
pusha
add
add
mov
insl
pop
cmp
xchg
cltd
enter
pop
dec
es
ss
xor
and
and
jno
add
stos
aas
adc
cmp
movsb
mov
ret
xchg
out
ss
xlat
sbb
cld
std
pusha
pop
push
sub
enter
sbb
xchg
jle
mov
mov
scas
jge
pop
push
inc
data16
sub
dec
xchg
cmpsl
jns
adc
add
mov
inc
mov
arpl
pop
mov
add
mov
flds
iret
xchg
mov
repnz
lcall
icebp
scas
shr
mov
in
push
jno
or
and
ja
es
stc
cmp
and
movsl
int3
gs
jo
dec
imul
cmpsl
jno
sbbl
outsl
mov
push
sbb
mov
push
popf
pop
shll
in
add
mov
movsl
jmp
std
addb
or
jl
jbe
xor
out
test
js
pusha
jnp
mov
pop
in
and
in
push
dec
sub
pop
sbb
or
std
and
cwtl
and
mov
dec
repz
jecxz
pop
sahf
push
push
dec
pop
mov
xlat
mov
xor
aaa
jg
add
sub
popa
mov
mov
pop
sbb
out
or
dec
mov
test
jne
outsl
push
dec
js
lods
jg
jl
insl
fstpt
pop
scas
or
xchg
pop
push
gs
rcll
fldenv
push
dec
jg
mov
bound
jg
scas
enter
sbb
ds
xor
shl
arpl
push
sbb
xlat
mov
addr16
cmp
popa
out
adc
orl
sti
inc
cmp
ffree
or
sub
cli
push
jno
faddl
stc
mov
nop
sub
lea
pop
jno
jb
mov
fwait
jnp
cmpsb
cmp
ljmp
cmp
sub
mov
loopne
cs
movsb
and
cmp
or
sahf
dec
jae
std
add
fsubl
enter
and
out
cs
sbb
jmp
cld
xchg
ds
repnz
in
fwait
jp
sub
or
data16
out
test
mov
mov
out
adc
pop
jmp
lods
add
out
or
fs
cmp
inc
mov
push
jo
inc
scas
pushf
or
sub
daa
or
ret
dec
popf
shrb
cmc
addr16
cld
add
jnp
std
sub
repz
jne
loope
ss
fdivl
shrb
imul
or
fwait
and
jnp
sub
imul
mov
and
add
cmp
xor
jle
jae
shlb
sbb
inc
jle
data16
dec
inc
pushf
cli
imul
outsl
sbb
sub
mov
jle
push
adc
jge
test
dec
xchg
adc
jg
push
cmpsl
pop
std
xor
pop
jne
pop
jne
pcmpeqb
cmpsb
sbb
mov
push
in
sbb
sub
lds
lcall
and
cmp
rolb
jb
shll
push
push
sbb
aaa
xchg
sbb
xor
popa
adc
outsb
popa
jecxz
cmp
jnp
das
xchg
dec
mov
inc
mov
dec
push
mov
ljmp
pop
icebp
insb
aam
add
jae
rcll
jl
cmpsl
mov
gs
jmp
hlt
inc
mov
xchg
adc
push
repnz
adc
aaa
pop
out
or
shrb
xchg
dec
add
in
push
mov
int3
es
popa
movsl
lock
pop
pop
mov
out
scas
in
repnz
es
push
inc
sbb
sbb
add
sti
mov
icebp
fisttpll
mov
pusha
sahf
movsb
cmp
inc
in
rcll
xchg
ret
mov
xorl
push
mov
rcrl
sub
lahf
push
and
scas
scas
shlb
sbb
dec
lret
les
pop
add
movsl
xor
adc
popl
popa
jnp
inc
lret
add
fistpll
or
test
push
add
jle
pop
pop
aas
fldl
je
popf
dec
in
sub
test
pop
mov
jg
lcall
stos
mov
iret
push
and
pop
mov
or
test
in
scas
into
jecxz
sbb
jmp
call
xlat
sub
and
inc
gs
dec
repz
add
out
daa
fsubrp
cmp
pop
int3
xor
loope
mov
data16
sub
addb
xor
nop
push
cmpsl
aas
and
adc
iret
ja
scas
xchg
aad
lret
andb
pop
sub
push
and
cmp
adc
repz
xor
pusha
stos
aam
idiv
mov
mulb
jp
pushf
cmp
pop
jp
add
out
push
and
iret
fimull
hlt
inc
inc
mov
sbb
in
fs
jle
and
popa
scas
or
test
push
lock
sub
sub
push
ds
mov
int3
cltd
bound
dec
mov
dec
add
mov
movsl
mov
outsl
aas
push
sahf
aaa
out
or
or
jle
sub
fistpl
nop
sbb
int3
push
sub
jp
daa
test
adc
inc
jns
mov
hlt
inc
dec
xor
fcmovnb
dec
adc
pop
dec
and
jge
popa
jae
in
xchg
adc
sti
fwait
shlb
xor
movsb
fsubrl
sbb
sbb
jb
cmp
push
sbbb
cmp
add
out
sbbb
loop
xchg
cwtl
std
in
xchg
xchg
out
mov
insl
test
dec
loop
mov
or
scas
pop
lea
js
pop
sub
and
pop
jno
pop
insl
ja
sbb
fdivrs
xchg
pop
or
rcrb
sub
idivb
inc
add
xchg
jmp
mov
dec
cmp
mov
or
cmp
lretw
loopne
cmp
jo
testl
je
or
sub
test
lret
incl
pop
mov
xchg
jmp
fisttpl
aas
push
push
mov
rorl
or
push
push
and
cmp
mov
sub
add
add
outsl
jmp
inc
sbb
mov
dec
xchg
or
scas
jne
push
loop
mov
js
cltd
addl
icebp
stos
adc
fnsave
andl
fsubl
shr
jae
shll
xchg
aad
jns
sahf
jns
cmpsb
stc
movsl
std
dec
repz
mov
adc
rcl
mov
cmpsb
add
int3
cmc
js
jle
xchg
xor
dec
mov
push
mov
inc
and
adc
icebp
ficoml
jb
sub
repz
adc
in
lods
push
ret
or
cmp
xchg
inc
fwait
test
mov
ds
jl
cs
repz
fwait
roll
clc
clc
mov
stos
aam
push
cmp
xchg
dec
repz
push
out
push
cltd
daa
xchg
sahf
mov
test
movsb
adc
cmc
cmp
std
xor
mov
fldt
mov
popa
mov
nop
je
push
xlat
inc
cld
fldcw
xchg
jl
ss
push
mov
and
adc
or
frstor
fisttpl
int3
into
ja
sar
push
stc
and
mov
notl
or
scas
sbb
test
stos
xchg
movsb
push
ja
clc
int3
pop
mov
cmp
push
lret
or
mov
mov
sbb
add
sub
or
bound
jne
cmp
fs
lahf
jns
dec
cmp
or
pusha
scas
mov
sbb
mov
lret
and
push
push
xchg
sub
loope
mov
sub
jp
inc
out
ret
idiv
mov
icebp
adc
mov
push
add
pop
lods
push
ret
and
adc
ja
test
mov
fmulp
push
xchg
pop
cwtl
popf
cmp
and
clc
jno
fisttpl
sahf
shlb
cmpb
sbb
inc
add
int
pushf
mov
mull
mov
lret
gs
stc
int
scas
call
jnp
sbb
inc
mov
jmp
je
push
mov
adc
cmpl
sub
leave
rorb
cs
pusha
loop
leave
jne
xlat
sbb
aas
push
sbb
pop
ljmp
sub
mov
mov
shrb
arpl
cmp
loope
sarb
jp
ret
inc
jl
repnz
sub
mov
mov
icebp
adc
mov
inc
and
or
push
repz
hlt
jbe
push
fcmovnbe
jl
fsub
or
or
lods
in
jecxz
in
adc
mov
mov
lcall
add
mov
ror
outsl
jg
cmpsl
xlat
test
mov
or
fsub
push
lds
pop
pushf
adc
fs
sub
adc
cltd
cmc
and
push
aas
add
popa
and
jge
loop
dec
or
sbb
leave
popf
fstpl
add
std
push
add
dec
inc
scas
fistps
add
popf
loopne
add
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
lods
stc
and
cmpl
addl
bound
mov
leave
jecxz
roll
pop
and
fldenv
ljmp
insl
adc
cltd
int3
push
pop
jmp
add
insl
insl
aam
mov
roll
xchg
inc
xchg
mov
push
test
test
cmp
les
imul
out
pop
filds
pop
xchg
jp
dec
cltd
mov
xlat
and
sub
fs
fisubrs
pusha
imul
dec
mov
movsl
rorb
je
roll
fisubrl
lds
cltd
sbb
lock
sub
or
mov
clc
or
scas
xchg
xchg
sub
xor
mov
subb
pop
aam
mov
test
cmp
clc
xchg
add
dec
leave
rclb
pop
sbb
or
add
pop
loopne
cmp
int3
jp
jb
sahf
cld
mov
pop
push
jp
mov
shlb
pop
xor
inc
test
sbb
pop
scas
icebp
les
jbe
dec
ret
cltd
pop
xor
sbb
fstpl
xchg
mov
mov
lods
ret
jp
lods
aam
out
or
clc
int3
inc
or
adc
sbb
test
pop
dec
sbb
xor
int3
testl
dec
imul
push
lock
fistl
cmp
mov
subl
jge
iret
add
push
adc
cmpsb
sub
xlat
pop
imul
pop
mov
xor
inc
pop
xor
jno
inc
mov
ds
lock
pop
cmpl
push
divb
pop
ljmp
andb
cmpsl
imul
sub
mov
jbe
mov
cmp
sub
loop
dec
xchg
test
out
push
xchg
rclb
scas
int3
jmp
cmp
add
lock
lahf
cmc
stc
dec
popf
aam
or
mov
adc
or
inc
aas
loopne
pop
fdivl
hlt
and
outsl
cmp
sub
leave
push
scas
sub
pop
xor
test
jmp
push
arpl
dec
sbb
jle
aaa
mov
pop
and
adc
pop
mov
jmp
cmp
cwtl
sub
pop
push
xor
int
push
mov
xchg
cmc
sub
clc
aas
push
cmpsl
push
sub
mov
push
pusha
pop
add
push
pop
jnp
into
inc
fmull
jbe
sbb
outsb
sti
mov
sub
mov
sbb
push
inc
test
xchg
movsl
add
jl
insb
stos
push
sub
cmp
lods
js
xor
sub
jle
add
push
cld
stos
sbb
sbb
sahf
call
jae
cmp
mov
enter
xor
inc
loop
ret
mov
in
aas
mov
jmp
add
add
ret
push
addb
jno
xor
clc
dec
leave
adc
into
sub
test
sbb
subb
setne
enter
addr16
das
mov
ret
lods
mov
cpuid
fstps
lahf
mov
push
jmp
sub
push
movsl
mov
push
pop
mov
inc
push
cs
or
inc
and
cmpl
or
jne
adc
pop
xchg
sahf
mov
fisubrs
ja
sub
in
mov
orl
sbb
insb
lods
cmc
call
daa
stc
in
mov
dec
cmp
fdivl
mov
out
sti
push
daa
lods
pop
lahf
popf
outsb
dec
add
clc
sti
dec
leave
in
test
cmpsl
push
cmpsb
aad
jle
inc
bound
andb
mov
fs
or
into
in
scas
mov
nop
xor
and
out
pop
cli
in
sub
popa
xor
jns
jnp
arpl
ja
into
sbb
or
jmp
jecxz
rorl
hlt
xchg
inc
sbb
loop
add
fdivl
jg
arpl
lret
pop
rorb
adc
frstor
push
dec
jo
xlat
cli
mov
repz
fistl
adc
jg
nop
push
xchg
add
and
out
movsl
mov
imul
mov
dec
daa
push
lock
pop
vmptrst
lock
dec
jp
ret
test
mov
jae
sub
adc
inc
into
xor
cwtl
mov
cmp
popf
fstps
adc
movsl
cmp
fistpl
cld
icebp
lret
movsl
pushf
aaa
dec
dec
or
jg
out
sar
out
daa
fisttps
insb
push
stos
xchg
jmp
shrl
dec
divl
fildl
leave
xor
pusha
loope
dec
xchg
dec
filds
sahf
mov
fcmovne
mov
and
imul
sbb
jg
xor
mov
pop
jl
outsl
fistl
fstpl
mov
outsb
mov
fisttpl
xchg
bound
and
lret
mov
mov
pop
xchg
std
push
sbb
je
loope
pop
push
scas
jge
loop
sbb
movsb
push
loop
mov
sub
fidivs
cmpsb
jns
jno
mov
sub
pop
in
ficomps
add
fsubrp
ljmp
test
jl
pop
cmpsb
dec
int
add
movsl
jg
stc
popa
jne
push
xchg
adc
and
cltd
test
mov
jecxz
mov
mov
mov
add
push
lcall
aas
push
gs
loope
out
xlat
faddl
inc
ja
movsl
ja
je
jns
pushl
int3
nop
aam
mov
or
loope
addb
cmp
nop
insb
pop
mov
push
test
inc
pop
inc
notb
jo
sbb
iret
imull
push
jl
pop
aaa
sub
xor
pop
out
js
gs
mov
pop
repz
mov
mov
jecxz
jle
lret
int3
jne
lods
aam
add
xchg
ficomps
sub
shrb
cltd
inc
in
ljmp
and
cltd
mov
jg
pop
sbb
mov
imul
pop
push
dec
jno
outsb
das
enter
push
xchg
fs
cli
sub
into
mov
and
pop
xchg
fcomps
repz
add
mov
mov
and
pop
mov
addr16
or
push
pop
int
cmpb
lret
mov
out
sbb
data16
in
xor
jbe
jne
adc
jno
rcrl
fs
pop
pop
jne
icebp
push
fs
setnp
and
push
test
xor
cmpsl
cmpl
shrl
mov
insl
mov
jmp
xor
jno
mov
sarl
xchg
sub
mov
inc
or
pop
push
mov
lods
pushf
in
insb
fwait
leave
xor
pushf
or
fisubl
adc
pop
jmp
sbb
push
dec
cmp
aam
push
cltd
in
or
repz
test
loopne
stos
sub
mov
das
push
adc
fildl
js
mov
pop
test
add
ss
xor
adc
push
push
std
inc
ljmp
rorb
inc
test
xchg
pop
test
outsb
iret
mov
pop
idiv
pop
jbe
jecxz
mov
dec
enter
sahf
cmp
adcb
arpl
fwait
pop
xchg
out
aam
push
mov
mov
jl
pop
xor
and
loope
movsl
addb
xchg
outsb
xchg
sti
mov
adc
mov
cmp
mov
mov
sub
fcmovbe
ja
lock
test
xchg
or
lcall
fwait
call
mov
loop
mov
add
adc
in
loopne
out
outsb
rcrb
jl
pop
jnp
xchg
ret
sbb
aad
push
in
dec
add
push
dec
inc
icebp
lret
jl,pn
pop
jns
test
sbb
cmp
push
inc
adc
int
nop
xor
mov
dec
ljmp
pusha
mov
fwait
sbb
add
cmp
aaa
inc
xor
shlb
gs
xor
dec
push
lock
imul
imul
mov
pop
addb
pushf
push
pop
or
sub
push
xchg
push
out
xchg
pop
add
mov
push
pop
add
jno
xchg
inc
adc
jns
lock
ficoms
cmc
cmp
mov
mov
aad
es
cs
jns
addr16
pop
inc
jmp
loopne
jmp
jge
mov
mov
mov
add
xchg
std
adc
fs
pop
push
aaa
fisubl
sub
pusha
sahf
pop
rcrb
inc
jne
xor
add
mov
mov
js
xor
fists
xchg
sub
mov
sub
cmpsl
insb
pop
mov
into
push
add
shlb
fwait
inc
cltd
lods
out
hlt
dec
fs
sahf
pop
mov
or
push
inc
mov
mov
xlat
ret
in
stc
inc
xor
push
cmpsb
cmp
or
sub
mov
xor
dec
xchg
cmp
bound
jle
ljmp
jp
cmpsb
shrl
sub
scas
enter
insl
sub
and
int3
cld
mov
fldenv
cmp
cmp
mov
test
cmp
xlat
mull
int3
sbb
push
xor
testb
sub
add
js
or
adc
ja
lods
mov
js
mov
fcoms
mov
sub
xor
mov
imulb
fstp
inc
outsl
sahf
movsb
sbbl
xchg
insb
jle
and
mov
out
cmp
dec
dec
std
test
orb
pop
cld
js
sub
or
insl
or
pop
subb
and
movb
int
ja
int3
jecxz
pop
out
or
fsub
in
sti
in
push
sahf
mov
lock
dec
jecxz
out
jae
mov
jp
fs
sahf
dec
dec
pop
fstpl
test
and
xchg
dec
addr16
ret
ror
data16
push
xchg
dec
add
jl
ror
mov
stos
mov
lret
sub
dec
xor
clc
mov
or
inc
fldt
xchg
stos
push
jge
imul
cmp
cmpsb
jns
dec
or
cwtl
das
cmp
or
inc
stc
es
sti
jmp
mov
dec
push
insl
xchg
movsb
out
xor
xchg
stc
dec
push
addr16
push
movsb
mov
xchg
lret
out
sub
xchg
or
out
inc
stc
sbb
lahf
mov
sub
mov
pop
jg
insl
pop
mov
pop
cmp
dec
es
dec
vcvtdq2ps
movsb
pop
jno
out
sti
test
lahf
sahf
sub
push
mov
mov
mov
mov
leave
das
shrb
das
cmp
movsb
enter
repnz
ds
cmc
jge
sbbb
out
es
mov
sbb
aas
loop
mov
mov
pop
popa
sarb
push
shlb
sbb
fwait
mov
lret
stos
scas
jnp
cmp
mov
call
fs
jbe,pt
in
inc
mov
xchg
outsb
std
push
loopne
mov
jno
lret
or
push
fsubrs
shlb
dec
rcrb
jle
push
push
xchg
dec
loopne
dec
xchg
and
add
adc
or
dec
rcll
and
mov
daa
sub
mov
xor
or
add
testb
cmp
gs
stos
lcall
sti
gs
fucomip
and
and
fnstenv
aaa
jl
cmpsb
ret
and
bound
and
js
dec
cmp
dec
mov
nop
and
jb
mov
ss
push
movsb
aas
movsl
xchg
pop
cwtl
jmp
inc
mov
subb
popw
jnp
lods
mov
jmp
test
sti
inc
add
popa
adc
xchg
movsl
xchg
mov
push
pop
fimuls
xchg
inc
pusha
pop
sbb
mov
fsts
xchg
jmp
lea
jg
inc
mov
inc
xchg
inc
fxch
push
in
push
imull
inc
adcb
mov
dec
sbb
loop
leave
mov
in
pop
adc
xor
push
scas
loope
mov
into
mov
mov
sbb
arpl
shr
sub
mov
mov
jae
xor
lods
cwtl
push
scas
lahf
push
ss
mov
popa
adc
imul
jno
in
push
xor
mov
jle
xchg
mov
sbb
mov
call
push
icebp
xor
sar
lea
fdivrl
js
and
in
loop
mov
xlat
jmp
add
out
or
into
aam
dec
push
push
jmp
xchg
sbb
mov
dec
fldcw
push
scas
add
in
inc
js
mov
sahf
sub
mov
inc
push
adc
jl
cmp
and
addr16
jg
fs
andb
shll
pop
movsl
mov
mov
pop
shll
xor
push
dec
cli
cmpsb
adc
or
mov
jmp
jg
scas
imulb
sub
cs
mov
adc
mov
inc
mov
imul
les
and
mov
push
xchg
daa
mov
fildll
sbb
inc
outsb
out
icebp
fcoml
mov
pop
or
clc
jmp
jecxz
stos
rolb
call
xchg
push
mov
cmp
test
into
es
in
test
lret
pop
mov
push
or
das
movsl
dec
sub
cmp
jle
or
bound
mov
cmc
dec
mov
aad
lret
insb
sbb
cmp
jns
sbb
cmp
mov
mov
push
inc
sub
pop
lea
sub
out
loope
mov
nopl
or
or
pop
jbe
xorl
mov
stos
int3
mov
mov
pop
mov
arpl
push
push
cmpsb
stos
insl
stc
pop
call
lods
aaa
insl
in
jns
jecxz
stos
pop
adc
in
xchg
push
adc
add
mov
add
sahf
push
mov
push
stc
xchg
add
sub
js
push
ds
out
cmpsb
aaa
cmpsb
or
ret
mov
mov
lods
lahf
outsb
xor
subb
sub
popf
rolb
mov
dec
sbb
insl
scas
lahf
daa
ret
sub
xchg
ret
inc
dec
xor
out
sbb
or
push
pushw
dec
jnp
shll
jne
dec
enter
pop
jo
mov
cld
adc
ljmp
xchg
mov
and
imul
lret
push
popf
xchg
pop
xor
sub
fsubrl
mov
inc
and
add
sbb
mov
popa
and
push
ljmp
mov
ret
dec
out
ret
lret
es
divl
shl
mov
adc
je
dec
pop
cmp
testb
xchg
push
in
int
xchg
push
xor
sbb
jns
mov
das
fwait
into
aam
ds
mov
pushf
sub
test
push
negb
sbb
mov
js
jnp
push
arpl
stos
jmp
test
cmp
mov
scas
pop
imul
push
ret
fimuls
iret
inc
call
xor
sbb
xchg
xchg
rclb
pop
and
dec
dec
mov
push
test
testl
xchg
jbe
jnp
adc
mov
pop
pop
mov
mov
fwait
mov
lods
ret
in
repnz
push
jnp
add
out
dec
mov
xlat
nop
loopne
cmp
dec
pop
loopne
cmp
adc
mov
pop
push
fisttpl
pop
cs
jb
fists
push
pop
js
aaa
aaa
sbb
ret
push
sbbb
shlb
mov
fldpi
fs
inc
push
jmp
cmp
xor
dec
movsl
jbe
inc
push
outsl
sub
xchg
jmp
js
add
shrb
in
or
aad
dec
dec
ss
ret
in
and
mov
dec
popf
cmc
mov
lods
lret
insl
inc
scas
jno
jp
or
mov
inc
dec
int
or
jge
xor
push
xor
incl
fnstsw
ret
cmp
fsubl
test
push
inc
jae
pop
dec
push
sbb
test
mov
cld
fwait
push
jne
jl
ss
sbb
mov
sub
and
sub
lods
adc
mov
lods
cmpsl
aaa
arpl
mov
fwait
dec
lods
push
mov
add
dec
push
mov
ret
jns
push
outsl
jmp
fstp
inc
outsl
clc
lods
push
inc
or
scas
mov
aas
xor
inc
adc
stos
outsb
cmp
addr16
jbe
aam
popa
adc
adc
icebp
adc
ljmp
test
sbb
lea
inc
sbb
jo
push
push
xor
xor
jmp
pop
push
out
in
loope
inc
cs
mov
insb
adc
jae
mov
pop
inc
mov
mov
test
ret
rcrb
ja
lret
fldl
imul
inc
mov
incb
cwtl
std
aad
popf
mov
arpl
cmpsl
stos
popfw
testb
cld
sbb
fidivrl
xchg
in
xor
cmp
ja
inc
iret
inc
fistpl
mov
ret
and
cmp
cltd
ds
pop
mov
push
insb
push
insl
and
pop
mov
ljmp
fcompl
mov
push
aaa
push
popf
jmp
mov
orl
jbe
xor
fstpl
xchg
repnz
sahf
sbb
shl
adc
sbb
das
nop
out
inc
aas
inc
jb
jge
lock
push
add
mov
loope
sti
movsb
mov
inc
jg
lock
ret
bound
inc
mov
ds
pop
outsb
adc
cmc
fistl
sub
dec
cmp
push
in
push
mov
adc
add
inc
in
add
mov
cmc
xor
pop
mov
inc
mov
leave
psraw
imul
xor
or
xchg
or
sti
pop
xchg
adc
cs
mov
fistpl
xor
mov
adc
adc
popf
jl
pop
inc
sub
jmp
xor
nop
js
pushf
mov
push
xchg
push
dec
jmp
call
daa
rcrb
lret
fcompl
mov
out
mov
mov
sarb
shrb
cmpsb
out
cmp
cmp
dec
mov
mov
adc
insb
jo
fbld
js
xchg
insl
jns
lret
stos
jp
test
jb
pop
subl
rolb
bound
jg
ja
lock
cmp
in
ret
dec
pop
orl
sbb
lret
or
jle
xchg
push
cmc
aaa
stos
stos
xchg
sahf
sarl
xor
push
bound
xor
idivl
mov
sbb
mov
sbb
inc
out
mov
sahf
jns
js
and
mov
sbb
xchg
xchg
das
movsl
jecxz
fsts
xchg
out
sbbb
push
sbb
push
inc
mov
pop
inc
adc
andl
shrb
dec
rcll
jo
test
loope
pop
pop
pand
inc
mov
adc
and
test
pop
inc
jl
in
push
push
or
jmp
iret
mov
jbe
out
pop
addr16
enter
mov
movsl
aam
pop
sub
cltd
repnz
movsl
push
cltd
pop
adc
jmp
sbb
mov
insb
popf
in
xor
push
dec
fnstsw
xchg
inc
adc
jle
add
into
lcall
cmp
sahf
mov
xchg
xor
sub
popa
out
repz
sub
fs
jo
jg
jmp
pop
dec
dec
adc
or
add
lock
pop
decl
or
loop
xor
pop
mov
jnp
leave
xor
stos
cmpsl
out
out
clc
push
mov
mov
mov
inc
inc
pop
push
icebp
pop
mov
mov
rol
outsb
cmpsb
add
inc
mov
lcall
out
mov
jns
pop
and
xchg
addb
sti
or
dec
sbb
lock
loop
loope
pusha
mov
jle
aas
xchg
mov
xor
push
sbb
push
test
movsl
aas
jnp
mov
movsb
jp
dec
loop
cmp
add
loope
jo
repz
dec
mov
or
subb
test
mov
out
out
jnp
mov
cltd
push
mov
movsb
insl
add
mov
adc
or
or
cltd
and
dec
jbe
inc
rol
mov
push
pop
test
pop
xchg
ja
push
loopne
shlb
je
scas
mov
int3
mov
cwtl
daa
jp
jg
sub
dec
aam
sbb
cwtl
fldln2
lret
mov
jne
mov
loopne
arpl
mov
mov
jbe
xor
scas
mov
dec
push
pop
sub
mov
sub
mov
mov
push
mov
sub
lcall
ljmp
and
cmpsb
mov
inc
outsb
cmp
outsl
mov
rcl
cmpsl
aaa
and
cmp
ljmp
mov
mov
push
incl
jp
lods
mov
fsub
in
cli
add
cmpb
insl
imul
je
in
or
add
mov
call
and
cs
int
test
mov
lds
push
pop
daa
sub
cmpsb
mov
sub
loopne
cltd
fnsave
jnp
sarb
aaa
push
jno
cmp
stos
adc
mov
cwtl
subl
clc
shll
xchg
mov
rclb
add
ds
out
mov
sahf
lret
lock
push
jns
cltd
mov
fmulp
dec
adc
cmp
and
roll
dec
push
pop
lahf
xchg
imul
enter
hlt
xchg
mov
shrl
lea
push
cmp
mov
test
enter
push
push
imul
jp
push
imul
je
xchg
or
cmp
mov
bound
push
or
bnd
sbb
sub
pop
pop
sbb
cmp
ja
sahf
add
popa
push
push
inc
mov
mov
imul
jl
aam
push
cmp
jbe
jae
cmpsb
jbe
pop
adcb
ret
and
jp
jb
or
or
fst
inc
cmp
testl
ljmp
push
imul
ret
cwtl
push
mulb
std
fldenv
mov
mov
wbinvd
xchg
icebp
test
fwait
out
lret
shll
mov
std
psrad
std
aaa
jbe
scas
sub
faddp
fldcw
movb
scas
or
or
lahf
jmp
push
cmp
sbb
outsb
inc
dec
das
adc
sbb
mov
int3
test
cmp
cmp
mov
pop
test
add
adc
push
jmp
mov
add
call
imul
sbb
mov
adc
loop
ds
adc
mov
mov
pop
xchg
hlt
mov
scas
add
mov
mov
pop
loop
adc
sub
xor
jge
aas
mov
cltd
mov
xchg
pop
mov
xabort
dec
fs
sbb
shr
cmp
dec
sub
cmp
das
add
aad
mov
nop
fucom
inc
mov
ss
repnz
loopne
sbb
stos
xchg
sbb
lahf
mov
rcrb
fimuls
mul
xor
cld
loope
xchg
adc
add
popf
push
out
sbb
js
or
dec
jg
cs
jle
pop
cmpb
sub
add
dec
out
pop
insb
pop
sti
fidivrl
mov
xchg
lcall
les
mov
mov
cmp
lods
insb
pop
push
mov
pop
jnp
cmp
je,pt
sbb
push
xlat
loop
adc
data16
test
add
sub
mov
scas
fs
cmp
mov
xchg
movsb
pop
lods
sahf
lods
push
iret
mov
mov
ja
fadds
xchg
rorb
movsb
aaa
sub
std
and
cmovle
leave
jne
dec
pop
sub
mov
das
ljmp
ja
aam
lds
dec
stos
mov
test
xor
ror
sarl
cltd
aas
adc
out
ret
test
add
lret
repz
clc
in
mov
addb
cltd
ror
jge
pusha
in
pop
add
sub
adc
fisubrl
dec
es
add
icebp
cs
dec
jle
outsb
movsl
push
stos
mov
sub
popf
mov
ficoml
clc
ss
ret
loopne
jg
jns
lret
icebp
and
js
and
in
bound
jno
test
test
lds
xor
jecxz
outsb
int
push
push
dec
popa
mov
hlt
push
bswap
and
aam
or
sub
leave
in
pop
fcoms
jo
movsl
inc
xor
scas
or
cmp
push
jnp
jg
stos
pop
cmpsb
jecxz
pusha
cmovge
mov
enter
inc
dec
add
das
mov
push
mov
cmp
in
dec
jecxz
scas
add
ficoml
mov
loop
sbb
adc
or
shlb
or
aam
push
sbb
mov
or
pop
lcall
add
ss
test
aam
sub
pop
mov
fs
jle
fimuls
js
jle
jno
mov
inc
loope
cmc
nop
cld
inc
add
lret
push
movsb
xchg
cmp
repnz
pop
stos
divb
je
pop
mov
inc
lret
aad
xchg
adc
test
cmp
in
lods
jne
and
loopne
ret
fildl
push
push
sarb
enter
sahf
lcall
imul
adc
lods
pushf
adc
sub
adc
ret
lahf
inc
subl
pop
es
leave
jmp
mov
addr16
out
mov
mov
or
cmpb
push
sahf
stos
inc
xchg
fistl
inc
scas
lods
inc
push
mov
scas
scas
push
lcall
push
fs
xchg
stc
stos
jo
andb
jl
movsl
fstps
repz
pop
jg
sub
out
test
dec
push
fildl
push
sub
stc
bswap
mov
into
in
mov
push
leave
inc
cld
stos
jle
aad
enter
out
es
loopne
fs
inc
lret
push
outsl
outsb
mov
mov
mov
lods
add
js
xchg
mov
rcrb
lods
mov
sub
dec
fwait
je
add
cmpsl
mov
mov
lret
adc
xchg
mov
test
mov
gs
jmp
adc
cmpsb
push
shlb
scas
into
out
int3
pushf
pop
jo
push
sbb
dec
and
fimuls
pop
cmp
enter
test
mov
cld
dec
sbb
pop
inc
sub
jns
push
jecxz
leave
pop
inc
dec
shll
or
xchg
jo
dec
xor
mov
rcl
loopne
mov
xchg
dec
fisttps
cs
pop
imul
and
adc
cwtl
test
cmpsb
lods
call
lret
in
xchg
lcall
aas
mov
iret
inc
xor
sbb
xchg
pop
or
std
pushf
lods
js
outsb
mov
inc
pop
lahf
call
jge
das
adc
jb
cmpsl
lret
fs
jae
fwait
in
sarl
xchg
repz
xchg
in
push
outsb
mov
xor
jge
pop
dec
fs
sbb
xor
addb
es
xor
roll
gs
data16
sub
sahf
insb
cmp
push
mov
lahf
mov
fld
and
or
push
sbb
divl
push
fstpl
fmul
into
cmp
cmp
inc
mov
in
je
push
or
and
or
adcb
pop
aam
repnz
test
mov
adc
cwtl
ret
rolb
test
inc
push
jle
lods
daa
cvttps2pi
pop
and
mov
ss
mov
jne
movsl
sahf
stos
inc
std
dec
pop
negl
lock
inc
xchg
jmp
adc
stos
daa
loopne
dec
cmp
inc
jno
mov
jb,pt
popf
inc
inc
push
movsb
aaa
add
or
rcrb
dec
loope
and
or
insl
data16
or
mov
cmp
stos
adc
jl
movsl
xor
dec
push
shl
push
xor
cmp
push
lds
dec
cltd
adc
pop
cmp
andb
mov
nop
jno
xor
bound
fsubrl
ret
jg
mov
je
mov
call
adc
jns
cmpsb
sub
fmul
sbb
fistpl
fcoms
outsl
rclb
lret
push
mov
subl
loope
sbb
cmp
js
cld
iret
jecxz
cmp
pop
iret
nop
push
adc
stos
popf
mov
cmp
jns
adc
out
or
push
xor
psubusb
dec
xor
inc
add
sarl
outsl
cmp
imul
xor
imul
mov
sbb
sbb
lcall
mov
sti
bnd
cmpsb
or
andl
inc
shll
inc
sub
sub
jbe
sti
pop
push
lahf
dec
or
mov
leave
ret
sub
mov
lods
enter
jle
in
jb
mov
inc
xchg
mov
cld
mov
ja
cmp
jnp
mov
jmp
testb
rcrb
js
rorl
xor
mov
xchg
and
sub
push
icebp
loopne
xchg
push
jns
iret
mov
jnp
sub
int
mov
sub
int
js
aam
and
subb
sahf
push
jl
aad
sbb
add
repz
nop
xchg
push
mov
inc
xor
pop
pop
jle
mov
adcl
sub
xor
lods
jnp
nop
cmp
cmpsl
int
xchg
loopne
pop
adc
psubq
adc
je
shr
cmp
imul
inc
and
shl
jae
or
add
add
sbb
or
and
pop
push
dec
mov
icebp
cwtl
jns
pop
mov
adc
jge
movsl
sahf
dec
dec
push
insl
xchg
imul
add
sbb
daa
int3
and
enter
insl
pop
xchg
add
push
and
mov
loope
subb
in
cld
push
jb
add
sar
sub
scas
test
call
in
cmc
lret
lcall
popf
xor
dec
std
fnstcw
cmp
sbb
sti
rcll
sbb
cwtl
movsb
js
stc
and
data16
je
insl
dec
inc
inc
es
cli
inc
orb
mov
push
pop
test
popa
cmp
sub
insb
jns
pop
in
pushf
fstpt
out
push
out
shlb
push
mov
adc
aad
sub
cmp
jl
push
mov
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
mov
xlat
xor
addb
fstpl
jecxz
sub
mov
inc
and
dec
or
sub
jo
cmpb
dec
fwait
cld
in
or
dec
adc
jns
pop
cmpsl
inc
add
movsl
pop
je
movsb
dec
daa
cwtl
out
push
adc
nop
je
mov
into
repz
in
mov
neg
mov
sub
cmp
dec
lods
or
icebp
xchg
sbb
sbb
mov
adc
imul
adc
les
and
sub
mov
pop
pop
or
mov
outsl
xor
cwtl
repnz
add
daa
push
add
fmull
push
add
push
mov
pop
jg
stc
sub
sbb
shll
mov
jbe
stos
shll
xchg
and
inc
jns
in
out
jg
std
ret
pop
divl
xor
pop
sbb
inc
jb
xchg
mov
lods
mov
jns
mov
js
dec
adc
sbb
loop
cmp
sbb
push
mov
xchg
cmc
or
sbb
sbbb
addr16
xor
sbb
add
mov
and
pop
out
std
mov
scas
jne
shl
or
ss
inc
loope
jno
xor
or
mov
inc
cmp
mov
and
xlat
push
xchg
mov
sub
inc
mov
ja
inc
stos
jmp
push
pusha
enter
stc
xor
xor
popf
fcmovne
imul
adc
cmp
xorl
push
lods
imul
es
xchg
cmp
xor
xchg
loopne
out
sub
stos
add
iret
cmpsb
dec
mov
test
lods
pop
inc
sub
pushf
aam
sub
mov
and
es
fdivrs
in
dec
inc
mov
mov
or
pop
mov
fnsave
push
sub
xchg
insb
sub
sbb
pop
mov
shrb
in
jo
ret
dec
cmp
pusha
xor
stos
mov
lods
sbb
repnz
fs
rolb
insl
fwait
aas
mov
xor
fidivs
inc
push
lret
dec
movsl
push
shlb
xor
jl
inc
jp
jg
jbe
aam
adc
mov
cmp
adc
scas
ret
punpckldq
mov
in
jp
movsl
xor
les
cs
sub
push
adc
dec
adc
mulb
lds
lods
adc
fwait
andb
mov
pop
cmp
jp
ss
and
nop
mov
and
mov
stc
fs
mov
fsub
or
pop
movsb
cmp
push
xor
dec
mov
sub
mov
xchg
sub
jne
pop
stos
inc
cmp
cmp
jge
mov
sub
xor
jns
add
aas
outsl
push
divb
or
les
push
das
test
sbb
pop
dec
jmp
mov
sbb
xchg
daa
sbb
mov
fnsave
cmpsl
inc
push
popa
aas
call
adc
leave
add
shrb
std
movsl
add
loop
xchg
push
mov
xchg
loope
test
dec
xor
adc
xorb
daa
dec
push
cmp
in
stos
lmsw
ffreep
les
sub
jmp
inc
push
in
add
sub
inc
jae
lods
or
dec
lret
es
test
add
xlat
in
incb
mull
call
pushf
hlt
pop
nop
loope
push
or
cmpsl
out
hlt
mov
mov
mov
mov
bound
cmp
xor
xchg
sbb
sub
pop
pop
xor
pop
mov
stos
dec
add
or
jmp
das
je
jb
and
dec
test
sbb
loopne
add
js
sahf
fbld
in
sbb
cmc
pop
movnti
pop
and
dec
mov
jns
icebp
xlat
xor
pop
and
ja
xor
dec
mov
add
lods
sub
cmovae
scas
sub
or
inc
test
js,pn
outsb
push
stos
cmpsb
inc
fwait
inc
in
mov
repz
loopne
mov
jecxz
andl
cmpsb
enter
sbb
lret
movsl
ficompl
dec
repnz
fwait
outsl
and
cmp
push
ja
enter
daa
push
sub
je
jmp
xchg
leave
push
add
dec
mov
cwtl
add
leave
sbb
clc
leave
and
std
fldcw
pusha
cmpsb
sbb
aaa
insb
int3
js
sub
sarb
fidivs
bound
in
negb
push
push
cmp
scas
and
and
daa
pusha
xor
cmp
jmp
and
push
push
sub
imul
fs
scas
cmc
jo
les
test
aaa
or
and
fnsave
push
or
pop
mov
sbbb
mov
imulb
push
lods
imul
fcomp
xchg
arpl
dec
pop
mov
mov
and
add
rcrb
jp
imul
xchg
pop
push
mov
push
mov
lcall
cmp
push
jb
ficoml
xor
fisttpl
insb
inc
dec
lcall
ficoml
sahf
ds
lret
test
sbb
cld
imull
cmpsb
mov
dec
cmpb
inc
mov
add
cwtl
pushf
mov
aad
sarl
jl
inc
jb
aam
adc
lock
mov
cmp
fcomps
add
cmp
mov
mov
mov
cmpsl
mov
add
xchg
mov
int
mov
or
mov
mov
lret
enter
shl
sub
ret
les
pop
icebp
and
stos
fnstsw
into
xchg
adc
loope
mov
imul
lods
mov
adc
and
fldt
fmuls
std
insb
roll
mov
mov
les
inc
cmp
mov
in
fiadds
mov
popf
loope
cld
popf
jle
psubusb
test
push
add
cmpl
mov
jae
add
outsb
adc
jecxz
test
aam
sub
out
std
loopne
or
ljmp
in
sub
lahf
pop
loope
adc
sbb
jecxz
xchg
or
cli
das
cmc
loopne
sub
jb
push
ljmp
fcomi
popf
das
mov
lea
clc
je
mov
adc
sbb
xchg
cmpsb
xchg
mov
pop
aas
fidivl
sub
sbb
icebp
in
mov
add
cmp
mov
dec
mov
jo
imul
fwait
call
ret
iret
sub
sar
pop
fdivrl
cwtl
ljmp
push
jp
mov
leave
dec
xchg
cmp
jo
cmp
add
jae
sub
or
js
xchg
inc
outsl
add
ret
push
mov
imul
pusha
cmpsl
shlb
dec
outsl
sbb
stc
imul
dec
mov
xchg
negl
ss
movswl
je
push
xor
pop
mov
stos
aas
add
mov
repz
das
orb
in
and
lcall
repz
fstps
loope
xchg
mov
mov
xchg
fxch
nop
inc
push
and
mov
cld
adc
nop
xor
mov
test
push
xchg
ret
loope
xor
dec
sub
push
scas
sub
xchg
mov
cmp
scas
mov
and
push
je
pop
inc
add
mov
cmp
pop
mov
out
aam
shlb
dec
bound
shr
daa
std
mov
push
fldenv
hlt
ss
pop
ds
dec
mull
in
xor
cltd
mov
fiadds
dec
pop
fsubrs
add
mov
mov
or
mov
sahf
aas
movsl
dec
mov
sub
imul
mov
pop
jle
test
dec
and
dec
dec
sub
aad
sbb
jne
xchg
pop
sti
push
jae
mov
add
scas
dec
iret
jo
pushf
sbbl
mov
mov
mov
lods
into
pop
mov
in
inc
cmp
lea
sar
push
negl
mov
add
adc
add
jmp
or
inc
dec
insl
jo
sub
cmp
add
cmc
shl
cmp
ss
or
out
ret
and
sub
out
fiaddl
imul
test
push
ret
cmc
mov
lea
shlb
add
cmpsb
pop
movsb
in
add
les
sub
mov
out
xchg
inc
leave
mov
sti
jno
int
out
adc
ja
push
jns
out
leave
jp
dec
jo
movups
test
jbe
xor
jbe
int
mov
out
out
push
pusha
stc
pop
xlat
cmp
push
in
mov
ds
jne
out
frstor
xlat
aas
or
sbb
out
subb
fdivs
stc
lahf
adc
jno
hlt
or
addr16
ficoms
pop
jecxz
iret
dec
pop
rcll
rol
mov
adc
adc
add
fnstenv
cltd
push
insb
sub
stos
xor
stc
or
dec
dec
insb
jp
dec
mov
in
imul
dec
mov
pusha
or
inc
or
dec
jo
jb
xor
and
aaa
lea
jns
shl
add
xorb
mov
xchg
or
push
lret
icebp
inc
sahf
outsb
ret
cli
inc
mov
adc
bt
ds
lock
mov
jl
imul
lahf
adc
dec
or
push
dec
mov
adc
mov
sub
push
negb
pop
sbb
adc
into
mov
int
xchg
cltd
adc
scas
pop
jbe
pop
daa
sub
sti
cmp
push
mov
in
jns
fs
inc
js
mov
add
cmp
sbb
xchg
addl
ljmp
fwait
sbb
je
dec
es
popa
mov
repnz
xor
fnsave
in
mov
cmp
ret
xchg
pop
movb
adc
mov
pop
in
mov
cmpsl
xor
dec
divb
movsl
sbb
out
mov
jno
pop
jmp
mov
mov
mov
pop
and
xchg
sbb
sbb
cs
xor
test
ret
mov
arpl
cmp
jb
data16
fmull
cli
lret
push
xor
adc
repnz
lret
flds
bound
movsl
in
or
loopne
daa
fsubp
xor
js
pop
sti
enter
mov
cmpsl
in
in
cld
sbb
push
das
clc
data16
mov
lea
icebp
leave
inc
ret
clc
xchg
push
or
lea
pusha
hlt
repz
push
cmp
arpl
andl
inc
fsts
fdivl
pop
and
das
push
sbb
outsb
fstl
lods
pavgw
push
pop
cmp
ljmp
test
adc
or
and
pop
faddl
decb
fisubl
hlt
pop
test
push
movsl
jl
data16
jp
cmp
lods
lods
jp
push
cmp
in
pop
xchg
in
out
xlat
push
lret
lea
sbb
sbb
shl
adc
in
cmc
test
int
sarl
xor
mov
scas
mov
mov
sahf
mov
mov
or
add
pop
and
mov
pop
mov
jnp
ss
push
xchg
and
jecxz
mov
pop
and
pushf
icebp
cmpsb
aaa
movsl
and
xor
mov
cmp
xchg
imul
mov
adc
lock
xlat
flds
icebp
repz
pop
and
dec
pop
scas
test
in
mov
jae
lea
sti
outsb
cmpsl
rcl
imul
mov
scas
in
dec
mov
fisubrs
xchg
cmc
push
sub
jnp
andl
loopne
or
sub
jne
mov
push
xor
loopne,pt
pop
loopne
jecxz
mov
add
call
fildll
shr
sbb
cltd
jle
daa
cli
push
notb
movsl
mov
push
inc
or
or
cmp
mov
andb
pop
jle
into
add
cmp
les
lahf
xchg
and
lea
add
or
sbb
inc
xchg
xor
or
jb
sahf
inc
adc
not
aas
es
sub
dec
or
pop
out
movsw
stos
and
mov
and
mov
lcall
jne
adc
inc
xchg
js
pop
outsb
hlt
jo
bound
lods
or
inc
stc
dec
pop
mov
jo
xor
xchg
pop
lock
mov
xlat
xchg
mov
stc
aaa
and
aaa
loopne
js
scas
cmp
adc
mov
sbb
xor
and
or
xchg
push
adc
lods
es
adc
push
jp
js
les
xchg
push
movsl
sahf
mov
pop
adc
jns
leave
push
xor
gs
pop
mov
xorl
jmp
add
mov
mov
cmp
in
inc
xchg
test
int
test
and
inc
iret
fwait
adc
out
push
and
lock
mov
inc
cmp
cmpsl
adc
popa
orb
push
jmp
push
test
mov
cmp
mov
rcl
inc
dec
decl
lcall
imul
test
and
shlb
outsl
sahf
cmpsl
aam
roll
fimull
or
add
mov
sub
pop
sub
pusha
push
mov
arpl
jb
gs
mov
push
mov
push
sub
sbb
xchg
push
jp
xlat
jge
mov
sub
fs
lret
adc
push
in
flds
out
outsb
pop
or
out
sbb
inc
rolb
cmp
and
mov
mov
push
je
mov
adc
lods
int
xor
dec
push
cmp
imul
ljmp
or
dec
sbb
pop
push
cmp
inc
ret
sbb
nop
jb
push
pop
repz
or
sbb
sbb
scas
push
xchg
fsts
jae
int3
jno
jne
add
rcll
cmp
mov
fstpt
shl
cld
push
data16
mov
fdivl
out
fs
jge
lret
adc
dec
movsb
add
mov
icebp
insl
out
lahf
enter
roll
fsubrs
jge
xchg
adc
aas
jb
mov
dec
lock
mov
add
push
movsl
sub
cmp
stc
out
scas
jl
mov
in
mulb
call
cmp
push
xlat
cmpb
rcrb
int3
cmp
cmp
push
aas
sub
xor
ja
fldenv
or
lods
in
das
aad
xlat
daa
out
add
fisubl
sbb
into
adc
ret
int3
shll
jecxz
orl
fwait
dec
loopne
popf
test
stos
fildl
pop
xchg
xchg
daa
mov
add
inc
push
je
mov
loop
sbb
ds
outsl
jp
stos
daa
and
mov
and
dec
mov
rcrb
or
dec
cmovl
lods
jb
jecxz
push
jmp
xor
xchg
je
out
add
sub
dec
xorl
daa
insb
jbe
push
fxch
cmp
adc
leave
or
xchg
movsb
mov
scas
data16
cwtl
adc
cld
cmp
lcall
arpl
aad
jg
jnp,pn
js
xchg
xchg
pop
jecxz
insb
xor
cmpsl
repnz
pop
dec
js
ja
imul
inc
jae
out
mov
aaa
xor
dec
push
cmp
testl
rclb
fisubs
jmp
adc
pop
fsubrs
js
mov
lock
sub
push
xchg
push
pop
repz
lahf
mov
pop
cmp
iret
push
sbb
ret
test
mov
mov
add
mov
rclb
xchg
loopne
mov
sub
cmpsl
mov
ret
fbstp
mov
mov
enter
shll
lods
xchg
mov
mov
mov
adc
sti
lock
dec
cmpsl
lds
lahf
mov
call
push
inc
mov
mov
js
and
jmp
cmp
test
int
xchg
cltd
mov
mov
inc
sbb
push
mov
or
push
mov
scas
into
inc
xchg
mov
in
aam
in
cltd
adc
xchg
xchg
scas
jns
into
cmpsb
inc
out
les
sub
adc
in
outsl
push
divl
lock
adc
jl
add
test
daa
or
ds
pop
mov
cmp
cmp
aaa
push
cmp
jb
or
adc
jmp
pop
or
inc
xor
popf
xchg
and
lret
pop
push
jg
movsl
repz
sub
daa
pop
jb
gs
pop
movsb
pop
loop
sti
test
hlt
outsl
push
test
pop
mov
push
popa
lahf
insb
add
mov
adc
xchg
ret
mov
stc
mov
enter
add
imul
push
es
fs
inc
cmp
sub
movsl
push
or
cmp
mov
jp
sbb
mov
or
push
into
xor
cmpb
adc
loop
or
pop
xchg
fs
iret
pop
inc
add
stos
mov
push
aam
mov
in
push
repz
stos
or
das
cs
mov
icebp
jmp
pop
addl
sub
fwait
sarl
inc
pop
pop
jno
sub
mov
out
shrb
push
stc
pop
stc
pop
sbb
scas
fsubrs
imul
stc
lahf
jge
xor
xchg
sbb
and
jae
mov
out
mov
ss
sub
fdivrl
test
pop
fs
int
in
je
rcrl
ds
add
imul
pop
cs
mov
mov
ss
imul
add
arpl
and
inc
mov
mov
xchg
lods
in
aad
cmp
jp
cmc
jb
cmp
scas
sbb
mov
das
jbe
andl
sub
dec
mov
jp
push
xchg
fucomi
call
adc
inc
fdivs
push
dec
mov
lret
push
xlat
std
push
dec
pop
hlt
ret
mov
cli
pop
mov
leave
dec
and
mov
add
mov
lods
jge
pusha
mov
daa
mov
dec
xor
mov
dec
mov
sbb
cwtl
jmp
jne
sbb
push
xchg
test
inc
ss
ds
dec
mov
imul
mov
sub
decl
ljmp
xchg
adc
pop
cmpsb
movsb
cmpsl
daa
pop
sti
fistpll
mov
cmp
sub
lcall
and
pop
dec
hlt
mov
mov
mov
rolb
stos
mov
cmc
jmp
lret
jmp
cmp
pusha
or
mov
ss
mov
int
mov
sub
jbe
xchg
dec
sub
hlt
sbb
popl
mov
repnz
lcall
ljmp
cld
shr
imul
in
lds
inc
cli
out
xor
cmp
addr16
shrl
jp
xchg
movsl
dec
call
dec
dec
movsb
js
jne
rolb
dec
mov
out
xchg
dec
enter
jns
inc
lods
popf
or
bound
xchg
fldenv
decl
and
lock
mov
ds
mov
lahf
push
daa
fucomi
jmp
sahf
inc
pop
xchg
pop
scas
aaa
push
inc
sub
cmp
xchg
nop
push
aam
mov
xchg
aad
neg
pop
es
mov
sbb
xor
movl
jmp
or
push
or
movsl
mov
movsb
pop
pop
lea
outsl
pushf
xor
popf
fcoms
dec
cmp
test
jmp
repz
jg,pn
popf
add
leave
cltd
imul
rcl
fdivp
push
leave
jne
imul
scas
or
mov
insl
xor
mov
fsincos
mov
hlt
ljmp
shlb
adcb
das
stos
or
mov
loop
mov
add
aas
outsl
push
lret
in
test
stc
jmp
or
add
xchg
jno
insb
mov
lahf
mov
std
arpl
jecxz
push
xlat
in
push
cmp
orb
lret
std
in
cld
ret
xor
mov
dec
std
add
cmpsb
cmp
fsubs
inc
jb
sub
pcmpgtw
mov
push
push
pop
cld
sbb
dec
xchg
fnstenv
fwait
mov
ljmp
add
out
sbbb
mov
insl
mov
inc
sbb
push
test
add
or
daa
cltd
imul
xchg
mov
dec
sub
imul
mov
inc
in
mov
and
sub
push
mov
inc
pop
mov
lret
lahf
xchg
adc
adc
and
and
pop
ja
imul
cs
lods
lret
jae
movlps
xlat
fs
xor
push
je
inc
frstor
lret
jl
xor
add
dec
ret
cmp
xor
jg
jl
in
decl
and
jae
push
les
mov
sub
sbb
or
lods
pop
push
adc
in
insb
rcrb
mov
lds
nop
and
fs
fmul
xlat
jne
stos
aad
loope
pop
xor
movsl
dec
out
cmc
push
addr16
pop
jno
mov
stos
jbe
loope
out
insl
and
dec
lods
cmp
in
dec
mov
leave
pushf
movsl
lcall
dec
cld
out
leave
dec
push
sbb
inc
pop
pop
mov
imul
or
add
adc
adc
aad
or
mov
inc
mov
push
xchg
ds
mov
push
cltd
gs
sbb
ds
adc
sub
add
pop
jle
flds
ja
daa
xor
push
pusha
ret
mov
int3
test
enter
cmp
add
fldl
adc
cs
adc
mov
movsl
mov
jne
add
or
test
sub
sbb
dec
mov
sbb
lods
xor
lock
cmp
in
fnstcw
and
push
pop
jge
pop
adc
push
stos
cmp
inc
neg
and
mov
mov
arpl
push
fstpl
pop
rcl
add
xor
lods
repz
add
mov
scas
adc
mov
cs
enter
out
repnz
dec
mov
insl
lods
inc
add
rclb
test
bound
fwait
pop
mov
mov
and
push
test
xchg
adc
sub
cmpsb
mov
pop
push
push
out
ljmp
dec
jg,pt
dec
es
xchg
das
fwait
xor
loop
popf
cmp
pop
int
adc
mov
mov
add
inc
push
sbb
movsl
call
aam
adc
lahf
pop
ss
insb
addr16
test
dec
jo
lcall
dec
fstpl
jmp
popf
jmp
jbe
cmp
mov
mov
add
fldl
mov
jp
jnp,pt
pop
pop
les
xchg
pop
cmp
outsl
movsl
test
sbb
ja
mov
in
mov
stc
or
adc
mov
push
cmp
mov
fisubrl
jmp
mov
aaa
notl
sbb
lret
loopne
pusha
in
push
pop
pusha
stos
xlat
mov
scas
fwait
dec
pop
jae
jnp
shll
adc
sub
cmp
lods
pop
adc
das
jns
xchg
fldl
mov
adc
ret
sub
mov
cmp
push
mov
inc
bound
fdivr
and
int
pop
push
xchg
fistpll
cmp
jbe
xorl
push
fnsave
scas
ret
or
int
cli
subl
mov
add
dec
push
scas
hlt
andb
loope
and
scas
imul
pop
mov
out
xchg
andb
pop
pop
ljmp
in
mov
add
cmp
dec
push
dec
imul
test
add
scas
adc
dec
jecxz
addr16
sub
stos
fbstp
cld
mov
add
and
sub
xchg
cmp
sbb
and
ficoms
fwait
cmp
stos
mov
in
in
sub
pop
shll
cmp
inc
add
mov
mov
jmp
lods
push
stc
scas
outsb
mov
fmull
or
add
adc
and
dec
gs
mov
dec
xor
xchg
test
lea
scas
sbb
add
test
shlb
push
mov
outsl
inc
and
or
fistps
fmull
inc
and
aas
aas
and
pop
cmpl
xchg
lock
mov
ret
jmp
xor
mov
dec
xchg
pop
or
xor
std
scas
inc
inc
pop
sbb
les
ljmp
ja
clc
mov
and
or
sub
out
mov
in
pop
mov
mov
ja
je
mov
jne
push
stos
loopne
inc
sbb
pop
jg
cmpsl
mov
pop
or
xor
jecxz
mov
lret
lret
es
add
int3
or
je
xchg
sub
push
sbb
cmp
aad
and
xchg
and
enter
into
and
rorl
ret
pop
popa
ret
or
dec
ret
or
test
pop
les
mov
jge
dec
jns
pop
xchg
subb
adc
cmp
or
push
sbb
mov
mov
jmp
xchg
xchg
cltd
mov
push
pusha
shl
and
pop
lret
pop
mov
adc
gs
es
xor
jl
cltd
cltd
mov
mov
dec
push
fcoms
xchg
mov
in
mov
mov
jne
inc
adcb
es
add
inc
dec
enter
jnp
adc
mov
mov
ret
ljmp
fsubrp
xchg
mov
sub
push
xor
out
loope
xchg
inc
movsb
pop
dec
stc
add
cld
sbb
mov
in
ljmp
inc
jmpw
ficoms
mov
loopne
inc
rcll
push
popa
pop
jg
es
jle
mov
addr16
in
adc
mov
shll
lcall
inc
add
add
mov
or
in
les
push
ljmp
loopne
and
push
and
int3
movsb
hlt
sbb
xor
das
or
inc
mov
sbb
mov
mov
and
lret
xchg
jg
loope
mov
les
push
xor
mov
push
pop
rcl
mov
add
dec
outsb
pop
ret
add
jbe
or
dec
sub
pop
sbb
addr16
lods
sub
pop
xchg
jne
ja
ficomps
sub
and
dec
jle
addl
stc
and
jno
testb
pop
clc
rep
and
cld
xchg
mov
adcl
cs
dec
arpl
cmp
aam
cmp
jno
imul
addl
mov
push
shlb
pop
frstor
jmp
je
sub
and
push
sti
jbe
push
jo
pop
jmp
stc
cmpsl
movsl
pop
inc
xchg
pop
das
mov
push
ds
stc
fwait
and
sbb
ret
int
inc
or
enter
repnz
cmp
jb
mov
xchg
mov
ds
push
out
push
jl
insb
xchg
sub
cmpsl
mov
mov
jmp
mov
push
imul
mov
fwait
mov
mov
aad
inc
fistl
sahf
pop
and
int3
lret
mov
jnp
jmp
mov
push
push
xchg
outsb
andb
rorb
mov
shlb
clc
sub
mov
xchg
stos
dec
push
push
jecxz
fimuls
and
push
lret
and
mov
jae
cmp
sub
mov
test
cmp
ds
ficoms
std
daa
scas
sbb
xchg
out
xchg
decl
push
les
mov
xor
negl
popa
stos
mov
pop
popa
push
adc
adc
xor
xchg
mov
cli
dec
sub
push
lock
jmp
in
inc
shll
inc
adc
xor
jge,pt
in
lock
push
or
or
scas
mov
std
les
enter
dec
mov
mov
lock
pop
cmpsl
ja
or
ljmp
sub
mov
push
pop
sbb
mov
add
out
jecxz
cwtl
inc
pop
shlb
dec
idivb
fidivrl
adc
add
mov
adc
push
adc
repnz
or
or
andl
ss
mov
insb
sahf
test
cltd
call
push
pop
sub
jo
fwait
out
sub
or
lret
lret
push
push
into
adc
js
and
dec
inc
comiss
inc
int3
xchg
loope
push
je
mov
pop
cld
aad
scas
jmp
cmpl
inc
xchg
xor
push
pop
mov
fnstcw
sub
pop
in
sub
icebp
iret
mov
pop
and
icebp
or
movsl
cmp
pop
cltd
pushf
push
nop
ret
les
aam
mov
push
jle
lods
xor
mov
jne
sub
aas
and
test
fistpl
ret
iret
inc
and
push
pusha
push
adc
cmp
scas
or
mov
sar
push
mov
sti
push
lahf
push
push
push
inc
leave
ret
fildl
inc
inc
mov
sub
lret
aad
mov
xchg
jmp
std
roll
mov
fnsave
mov
gs
enter
and
shrb
inc
inc
cmp
pop
cmp
inc
jae
movsb
rorb
sub
pop
xor
push
mov
xchg
mov
fsts
jae
popa
in
and
pusha
inc
add
mov
popa
ja
cmp
push
sbb
pop
mov
cmp
jne
cmpsb
or
insb
sub
cli
push
std
fmuls
dec
fs
xchg
lock
pop
test
jae
cmp
jmp
inc
divl
mov
push
fildll
es
sub
cmp
scas
xchg
inc
mov
xor
aad
scas
dec
pop
xor
data16
and
mov
clc
mov
ja
jo
stc
jle
mov
fcmovb
mov
push
push
jmp
fsubrl
aas
les
aam
push
fdivl
into
add
xchg
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
mov
push
jb
incl
cmpl
pop
lods
cmpsl
insb
dec
jno
inc
cwtl
mov
dec
sub
cmp
mov
rclb
pop
xor
in
jl
pop
roll
inc
jae
add
jp
ja
adc
mov
ds
and
jnp
lcall
or
jmp
sbb
mov
aad
cs
push
cli
lods
and
out
or
lret
dec
sbb
cmpsb
mov
std
scas
push
sbb
nop
jg
rorl
or
xchg
pop
insl
frstor
xchg
xchg
iret
cltd
out
test
in
or
mov
lcall
mov
push
push
jb
incl
jg
call
add
test
xor
mov
ret
mov
shrb
adc
aad
push
push
ret
icebp
adc
dec
cmp
jg
sub
push
stos
or
xchg
jae
pop
pop
ljmp
rcll
or
xor
or
jne
shll
frndint
ja
sahf
and
jbe
xchg
pop
mov
fisubs
dec
sub
cld
mov
movsl
out
cmp
adc
scas
push
pop
inc
lea
outsb
and
jg
mov
sub
enter
pushf
sub
lret
inc
pop
cmp
inc
aam
jo
or
push
cwtl
adc
jae
js
pop
inc
jns
nop
xor
outsb
imul
jle
and
lcall
xorb
insl
call
cwtl
aaa
fs
xor
and
sahf
jnp
push
loope
add
jl
div
and
call
mov
sbb
pop
inc
push
jmp
shll
pop
mov
xchg
cmp
mov
mov
add
push
jne
mov
mov
cmp
pop
pushf
pop
pop
pop
testb
xchg
iret
les
mov
mulb
stc
push
ss
test
popa
fs
lahf
dec
fistpll
add
xor
js
leave
call
add
lock
rcrl
popa
jl
jecxz
sub
shlb
scas
xor
mov
int
loop
push
mov
test
imul
push
jmp
xchg
xchg
repz
jp
pop
xor
icebp
push
clc
movsl
xorl
movsl
pop
jecxz
cs
frstor
rol
sub
jne
call
sub
lret
jb
xchg
insl
sahf
sbb
xchg
mov
test
lods
sti
lahf
dec
adc
mov
cmp
sahf
pushf
out
mov
repnz
inc
das
jg
jno
and
and
add
or
int
mov
or
enter
into
pop
inc
popl
jns
aaa
iret
cmp
stos
add
mov
xchg
arpl
imul
pop
or
mov
add
sub
andl
pop
adc
pop
adc
idivl
mov
insl
xor
push
movsb
mov
insl
mov
lds
xchg
dec
out
movsl
scas
out
cmpsl
jns
sbb
sub
or
loopne
jo
sti
imul
out
or
cltd
push
xor
mov
dec
push
xlat
adc
or
or
fidivrs
mov
sbb
ljmp
mull
mov
jl
hlt
loop
filds
femms
or
dec
push
jno
xchg
rcrl
sub
mov
and
mov
jmp
add
xchg
aad
call
jb
ret
arpl
xchg
dec
les
mov
dec
jmp
out
je
sbb
jo
int3
or
push
mov
dec
mov
aaa
mov
pop
xor
adc
sahf
arpl
icebp
jmp
mov
push
sub
mov
ret
rcl
pusha
pop
adc
adc
int
insl
les
lods
repz
cmc
imul
add
dec
out
and
mov
dec
mov
cmp
test
xchg
pop
iret
pushf
ret
xor
stc
sbb
push
dec
jnp
sbb
pop
aas
xor
mov
aam
mov
lea
jecxz
pop
xor
ss
jp
decl
sbb
xchg
sbb
sarb
aam
pusha
into
sub
xor
lret
out
cld
jno
sbbb
or
lcall
fwait
xchg
xchg
xchg
testb
cmp
gs
and
into
pop
xchg
cwtl
cmp
lds
rcrb
push
outsl
cmp
adc
dec
popa
mov
mov
addr16
aam
fstl
mov
jb
inc
pushf
mov
test
inc
dec
cli
cmp
mov
aad
imul
xor
add
cmp
stos
aam
fwait
jp
sub
mov
xor
lds
add
jns
jo
sti
mov
jb
xor
mov
mov
ror
jg
pushf
aaa
std
movsl
cmp
pop
dec
out
loop
fidivrs
int
xchg
xchg
outsb
inc
inc
push
mov
adc
pop
test
ss
aas
sub
add
jns
stos
dec
and
inc
xchg
sahf
dec
fbld
ja
jl
add
out
sbb
paddw
clc
mov
adc
push
add
sbb
es
mov
fimuls
jp
jae
cmp
or
aas
mov
insb
rcrb
inc
mov
jmp
mov
inc
lods
mov
adc
and
mov
mov
test
xchg
xchg
testl
and
test
push
mov
inc
dec
dec
ficoml
aam
jae
imul
cmp
in
pop
stos
jns
outsb
imull
add
cmpsb
push
call
mov
push
rorb
push
xor
inc
mov
or
stc
test
cwtl
int3
std
and
add
lock
addr16
call
sbb
aaa
je
or
inc
and
xor
sub
popf
mov
scas
enter
pop
aaa
fistps
outsl
cmp
faddp
mov
ljmp
pop
icebp
loop
adc
mov
mov
cli
mov
daa
push
sbb
gs
mov
fs
fiadds
jbe
cli
pushl
mov
sbb
dec
in
stos
aad
cmp
es
out
int
hlt
xor
add
out
gs
pop
mov
adc
pop
cli
adc
jo
add
sub
xor
xchg
push
aas
mov
sahf
cld
mov
cs
enter
sub
inc
or
nop
insl
mov
aam
outsl
add
xchg
xchg
jae
mov
push
arpl
iret
inc
pop
and
mov
xor
pop
cmp
ja
es
cs
testl
fsts
bound
fmull
popf
adc
orb
pop
sbb
dec
cmc
or
fcoml
addb
pop
mov
aad
ja
aad
loopne
into
nop
rorl
out
add
mov
adc
aad
mov
push
movswl
mov
cltd
add
stos
inc
ja,pt
in
sti
fadd
popa
loopne
adc
ljmp
pop
popa
aad
add
test
add
jl
ljmp
pop
shrl
xor
and
and
mov
add
daa
sub
or
out
cltd
xchg
dec
aaa
shll
fsubs
movsl
adc
pop
push
aam
shlb
in
jne
sub
pop
push
loope
imul
cmp
out
dec
push
sub
mov
jmp
data16
lret
pop
xchg
stc
sbb
sub
push
or
scas
call
push
push
mov
push
add
lcall
das
jnp
cmp
sbb
shll
sbb
lret
mov
movl
cli
sub
xor
cwtl
cltd
aad
pop
sub
imul
push
das
rorb
push
jmp
sbb
xor
dec
mov
xchg
je
popa
int3
dec
dec
icebp
add
or
out
movsl
dec
xchg
sbb
cmp
and
nop
sbb
ljmp
lds
mov
in
cwtl
xchg
das
loope
loope
test
or
leave
leave
xor
or
pop
cmpsl
addb
sbb
or
loopne
sbb
sahf
shl
xor
xchg
lcall
sbbb
in
cli
insb
cmp
jge
scas
xlat
sbb
pop
sub
and
imul
inc
js
cltd
bnd
dec
loopne
nop
push
repnz
mov
dec
ret
add
xchg
shll
xchg
orps
cltd
xor
sub
push
dec
mov
xchg
push
mov
ss
push
dec
xor
pop
test
xchg
ret
cmp
and
pop
outsl
mov
adcl
adc
jnp
mov
jnp
out
pop
mov
xchg
xor
mov
or
dec
mov
pop
mov
mov
cmp
mov
xchg
mov
subl
xor
test
loope
jecxz
pop
loop
pushf
js
lods
pop
fcmovnu
mov
inc
mov
inc
jnp
das
jae
xchg
and
mov
xor
ja
mov
push
nop
xor
sub
insb
gs
les
std
or
fnstenv
dec
xchg
cltd
xchg
cwtl
add
adc
mov
leave
xor
fidivl
push
loopne
dec
cmpsb
mov
std
xor
push
das
push
popf
push
popa
stos
dec
cmp
xchg
dec
xchg
pop
add
sbbb
rcr
mov
jnp
stos
hlt
and
mov
xor
js
test
mov
xor
mov
movsb
and
jmp
push
dec
pop
pop
nop
push
add
add
ljmp
sub
sahf
xchg
push
rcll
mov
in
lea
jo
sub
sar
ds
or
mov
jmp
lcall
ret
in
sub
je
fwait
mov
mov
jne
xor
maskmovq
divl
push
arpl
pop
lahf
xchg
rcll
and
mov
cmova
sbb
pop
adc
mov
movl
inc
icebp
cmp
shlb
test
arpl
cld
add
push
push
ljmp
mov
cmp
xchg
add
cmp
inc
icebp
ss
mov
xchg
sar
pop
insb
int
idiv
jmp
adc
stos
lods
hlt
iret
ds
ljmp
and
or
lret
pop
outsl
inc
dec
rol
lret
sub
cmp
pushf
adc
lea
insb
push
andl
mov
test
lds
add
lea
inc
xchg
mov
push
or
cwtl
into
push
dec
sbb
add
divl
sub
pop
mov
test
sub
daa
fcmovne
or
xlat
sbb
pop
orl
or
or
sub
repz
stos
nop
add
mov
push
sub
mov
xor
notl
jne
or
mov
in
mov
and
and
push
push
push
jae
cltd
mov
jbe
aaa
mov
loopne
inc
mov
lret
inc
mov
pop
sahf
lea
ljmp
sbb
xchg
add
vmaxsd
iret
int3
fidivrl
and
xchg
inc
sub
push
test
outsb
repnz
adc
aas
add
inc
das
aam
das
inc
fistpll
add
inc
mov
mov
cld
xor
pop
add
or
out
push
jo
movb
into
nop
inc
in
xchg
fcmove
es
inc
imul
inc
andl
pop
sbb
push
mov
jmp
dec
stc
jo
or
dec
fisubrl
popa
shl
jo
push
shlb
out
nop
add
or
pop
dec
xchg
adc
pop
push
test
cs
movsb
ljmp
sbb
cltd
dec
cwtl
orb
mov
mov
or
add
lods
xchg
mov
repnz
mov
mov
mov
shrb
shrl
mov
ret
xchg
roll
push
mov
cmp
pop
mov
loopne
cmp
pop
cbtw
insl
sysret
loopne
add
sti
out
mov
pop
jnp
pop
xchg
out
jl
test
mov
sbb
mov
test
sarl
sub
mov
jns
dec
xor
or
jecxz
adc
imul
fistpll
outsl
repnz
dec
test
cmp
mov
aam
push
jae
xor
insl
mov
push
and
clc
xor
testb
fldenv
das
das
test
test
add
pop
mov
jge
mov
loopne
shlb
insb
repz
jae
lret
or
sahf
adc
mov
jmp
inc
mov
jbe
test
in
and
mov
inc
data16
mov
out
ljmp
pop
adcb
fisubl
mov
mov
mov
fdivr
out
mov
xlat
sbb
adc
cmpsl
repz
repz
in
dec
jb
sub
fldenv
js
xchg
insl
xchg
pop
mul
enter
out
mov
lock
and
dec
iret
std
in
jnp
rcrl
mov
sbb
cmp
push
out
mov
lret
mov
sbb
test
and
dec
enter
loopne
push
sub
incl
cmpsb
pop
push
and
test
jecxz
fisttpl
xor
cmp
add
mov
push
or
pop
cmp
int
dec
es
xchg
aam
pop
test
insl
xor
aas
mov
or
out
cmpsb
and
shl
les
cmp
dec
pop
mov
stos
lods
psrlq
sbb
cmp
jbe
add
fdivrl
aad
pop
jp
in
cmp
sarb
fsubrp
sti
cmpsb
adc
push
inc
jno
jo
adc
leave
mov
xchg
dec
mov
aad
test
push
lgs
js
repnz
mov
popa
add
gs
xchg
cmp
lcall
add
sti
inc
mov
inc
mov
stos
push
loopne
call
out
sbb
frstor
push
jecxz
clc
cmp
in
lock
adc
inc
push
jnp
scas
js
fisubs
mov
scas
mov
push
pop
aam
lods
int3
and
sahf
mov
enter
shl
add
icebp
scas
repz
hlt
icebp
cs
clc
stos
mov
mov
cmc
insb
lret
js
and
and
xlat
pop
scas
icebp
jmp
test
fcomps
popa
cmp
call
into
clc
mov
orb
cmpsb
cmp
aas
enter
ljmp
mov
rclb
and
ja
and
cmpsl
mov
fwait
enter
bound
or
fildl
mov
rclb
mov
fmulp
cld
mov
fs
imul
inc
cmpsb
jne
dec
sub
or
repnz
sub
arpl
push
mov
jbe
pop
adc
pop
decl
sub
pop
or
or
xchg
mov
xor
fs
xchg
ss
sub
cmp
or
loop
nop
call
decl
and
or
bound
xchg
fs
ds
ljmp
push
and
cli
push
dec
into
outsl
inc
movl
fstpl
add
movsb
mov
mov
test
mov
dec
cmp
mov
rolb
ljmp
push
push
adc
pop
adc
inc
out
add
addr16
add
push
out
int
loop
leave
pop
stos
mov
jle
ja
cmpsb
add
dec
fwait
cmp
jmp
push
fxch
jg
call
outsl
xlat
and
mov
cli
je
inc
or
mov
xchg
sbb
sub
push
imul
in
jno
in
sub
push
lods
sub
mov
mov
fs
or
stos
aaa
ss
out
int
xchg
test
loope
test
adc
orb
stos
loope
daa
xor
call
subl
pop
or
lcall
cmp
add
and
pop
aad
lea
jecxz
insl
xchg
mov
inc
add
mov
leave
mov
in
xchg
out
sub
scas
push
lcall
repnz
dec
in
push
pop
lret
lcall
movsl
aad
xor
mov
xchg
sbb
addb
push
push
xor
out
mov
jb
pop
sarl
test
push
sub
call
int
movsl
adc
out
jb
sti
jle
daa
stc
push
iret
stos
push
lret
clc
inc
push
dec
aas
lahf
jecxz
shrl
mov
cmp
xorl
mov
jmp
xor
mov
pop
push
in
frstor
sarb
inc
cwtl
pop
movsb
dec
mov
xor
lds
sub
push
cmp
lock
adc
call
fidivl
cmp
dec
mov
inc
dec
mov
das
rcll
xchg
sub
sbb
sahf
lret
or
and
outsb
loopne
mov
ret
fistps
fstps
pop
dec
aam
xor
xor
add
pop
sti
jne
jb
push
lods
insl
ds
cmpsb
lods
out
popf
stos
xlat
add
add
push
cmp
inc
adc
popf
push
scas
mov
adc
repnz
test
loopne
adc
mov
dec
fists
stos
daa
push
push
out
mov
stos
mov
aam
std
mov
adc
mov
fsts
inc
fst
jmp
xor
cmpsl
loope
jg
dec
aas
mov
add
pop
int3
push
es
in
inc
aam
jmp
test
push
fimull
adc
adc
mov
sub
jg
jae
cmc
cli
mov
push
cli
xor
cld
adc
add
adcl
or
popf
das
cmp
jbe
int3
xchg
fisttps
js
in
mov
sbbl
push
mov
insb
rcll
jp
movsl
and
pop
jbe
and
rorl
mov
add
bound
dec
aad
inc
jns
mov
or
fstl
movsb
push
popa
jne
ds
mov
gs
and
stos
arpl
sbb
call
mulb
push
add
cmp
push
loopne
xchg
imul
adc
pushf
sub
bnd
sbb
jb
decb
fcomps
popa
jns
mov
stos
mov
and
rcll
add
std
imul
dec
adc
and
inc
repz
mov
push
mov
enter
and
popa
and
push
ljmp
adc
test
inc
iret
cltd
rcrb
adc
pop
aad
pusha
jg
mov
fwait
roll
jp
pop
movsl
push
loop
jle
xchg
aam
out
sbb
xchg
outsl
popa
cmpsb
scas
sub
stos
push
stos
pushf
pop
fst
push
inc
dec
or
and
jp
and
loop
ja
mov
pop
mov
int3
dec
xchg
jo
push
cmovae
das
pop
push
jmp
test
sub
jle
cmp
lods
push
inc
xor
mov
dec
sub
fistpll
inc
pop
add
ja
pop
xchg
xchg
stos
loopne
rcll
es
cmp
enter
enter
pop
sub
ret
add
pop
dec
mov
add
or
pop
jne
sub
xchg
movsl
imul
loope
inc
outsl
jmp
push
inc
lds
inc
jmp
adc
push
sub
jge
cmp
push
imul
mov
dec
movsl
mov
cmp
in
repnz
nop
mov
imul
int
mov
xor
jnp
out
xchg
sbb
bound
nop
adc
mov
pushf
js
xchg
aaa
rep
sbb
repz
mov
clc
filds
test
add
adc
dec
fidivrs
add
pop
push
cmpsl
xchg
iret
in
ret
out
jmp
add
sub
loopne
lods
and
popa
xor
adc
fsts
push
fisubs
xchg
clc
or
sbb
cmp
hlt
and
and
inc
push
push
sbb
out
inc
or
sbb
jns
sbb
ficoml
stos
jbe
loope
mov
aad
outsb
and
and
dec
push
fsubs
rclb
sub
push
rolb
shr
pop
push
sub
in
xchg
inc
rorl
and
testl
aas
pop
aam
rcrl
lret
repz
xchg
pop
call
sub
jnp
ds
pop
insl
jl
lds
mov
mov
pop
lea
mov
jbe
les
jbe
jmp
xlat
xchg
mov
outsb
push
outsb
pusha
aad
or
jecxz
cmp
jbe
cmp
sbb
es
mov
scas
dec
dec
xchg
xchg
sub
fisubrl
adc
and
pop
sarl
in
add
xor
mov
mov
sbb
mov
decl
mov
mov
xchg
add
push
add
adc
sbb
sbb
into
inc
into
mov
movl
mov
movl
fstl
mull
int
jno
imul
test
xchg
mov
and
mov
pop
add
xchg
mov
mov
cltd
cmc
adc
mov
into
into
jl
jno
movsb
jmp
jne
scas
push
jo
sbb
push
fnstcw
adc
inc
fidivrl
cli
orl
arpl
jmp
cmc
sbb
xor
addb
cwtl
jmp
jg
dec
push
lds
pusha
push
loop
add
xor
iret
inc
and
cmp
ljmp
sub
ljmp
add
pop
ja
cmp
or
popa
xorb
nop
and
xchg
pop
addb
nop
icebp
and
cmp
insl
or
jno
inc
addl
xchg
ss
imul
dec
jb
mov
push
pop
bound
jle
jmp
ret
inc
pop
into
mov
mov
test
lahf
int
pop
out
bound
push
lahf
push
les
std
lods
notl
divl
xor
popf
insl
cltd
inc
and
test
loop
jno
lahf
push
in
jmp
mov
addr16
movsl
fs
out
aam
push
jns
mov
inc
add
push
mov
or
mov
in
les
pop
ss
es
pop
pop
movsb
mov
jecxz
inc
sub
adc
out
and
cmp
addl
adc
xchg
mov
add
or
mov
fs
cmp
xchg
mov
cltd
pusha
sahf
cwtl
hlt
xor
pop
loopne
jle
mov
shl
xor
push
mov
push
adc
pop
xchg
cltd
in
pop
push
fdivs
fimull
pop
xor
jl
xchg
push
fisttpl
mov
popa
mov
sbb
xchg
jle
dec
push
lcall
mov
pop
jecxz
arpl
das
inc
pop
out
scas
scas
cmp
out
subb
test
loop
loop
cmp
pop
push
int
push
imul
mov
ja
mov
inc
cli
int3
cwtl
sub
mov
inc
cmp
mov
lahf
fiaddl
and
mov
or
push
test
lcall
mov
insb
jl
orl
adcl
cld
pmaxsw
rolb
mov
ss
jmp
mov
lret
decl
loopne
jle
push
or
sahf
xchg
or
dec
mov
mov
movsl
ljmp
popa
sub
xchg
mov
movsl
add
xor
shrb
push
xor
out
pop
push
and
scas
sbb
inc
xor
push
jl
mov
rcrl
mov
gs
push
xchg
or
daa
jle
push
out
das
push
jp
inc
int
in
dec
inc
jno
push
cmp
cwtl
pop
lods
xlat
xor
rcl
cli
cmp
je
inc
lods
mov
pop
gs
cmpl
push
out
clc
push
add
rol
inc
aad
stc
cmp
dec
notb
jno
jns
adc
stos
pop
cmp
push
mov
gs
sti
xor
mov
aas
int3
dec
xchg
fstpl
daa
addr16
jno
test
in
mov
push
loop
pop
arpl
dec
sbb
xchg
pop
pop
or
enter
add
cmpsl
jnp
bound
cmp
sbb
jle
enter
orb
jge
shlb
aas
or
call
daa
adc
mov
movsb
and
jo
cmp
lods
mov
mov
cmp
popa
aaa
in
and
js
sub
sbb
pop
into
das
or
push
js
outsl
jo
inc
xchg
xchg
clc
cmpsb
mov
xor
pop
out
cmpsb
mov
and
lock
pop
stc
es
add
pop
adc
jecxz
shrb
mov
inc
mov
mov
ljmp
addb
or
gs
fwait
dec
mov
shlb
pop
int
cmp
dec
pop
jl
adc
and
ljmp
sub
ds
xchg
bound
or
mov
cs
lcall
notb
and
aam
fadds
and
shll
adc
sbb
adc
sbb
ret
cmp
ds
and
aaa
xchg
inc
inc
push
movsl
mov
jns
int3
jmp
adc
xor
mov
out
cmc
push
repnz
xor
add
loop
inc
int3
in
push
stc
xor
movsl
dec
aam
or
push
pop
and
ja
jae
mov
insl
cld
and
lcall
ja
fs
arpl
xor
mov
cmp
jo
push
jae
xchg
scas
jge
out
inc
insw
stos
pop
sbb
mov
mov
or
cli
jbe
popa
js
daa
mov
fwait
repz
xchg
shl
sub
daa
testb
jp
mov
lock
hlt
adc
jns
xlat
sub
adc
cmp
es
out
push
sbb
sbb
fdivrs
in
repz
xor
inc
cmpsl
insl
dec
es
push
dec
jns
add
jae
push
dec
mov
outsl
inc
adc
ret
ds
lahf
or
mov
pushf
push
hlt
jb
sar
push
lods
cmp
cmp
sub
scas
out
push
mov
les
mov
sbb
js
mov
cs
xor
daa
loop
mov
test
or
or
or
sbb
mov
repnz
call
enter
jns
jno
addr16
or
mov
lods
mov
mov
sti
dec
jecxz
out
leave
loopne
repz
push
jbe
pop
xor
into
cmp
fsubrl
stc
adc
cmp
mov
out
inc
xchg
sub
pop
mov
fsts
addr16
push
icebp
repz
mov
divb
mov
into
aam
and
pop
push
mov
data16
dec
mov
std
inc
push
mov
push
mov
adc
or
mov
pop
sub
addl
inc
pusha
xchg
xor
and
xchg
ljmp
adc
ret
add
adc
mov
stos
int
add
xor
ficomps
sub
and
sbb
xchg
aas
mov
add
pusha
mov
sub
add
out
cmp
out
out
inc
mov
call
data16
pmullw
imul
cmpsl
push
pop
outsb
outsb
inc
cmpsb
cmp
add
add
lods
inc
scas
ljmp
das
fbld
out
scas
or
fmul
out
testl
jg
fbld
cs
pop
pop
orb
mov
fdivrl
jo
and
outsl
in
aas
inc
jge
repz
addr16
jge
insb
rolb
sub
imul
and
jmp
test
dec
enter
nop
add
cmp
sbb
call
mov
pushw
mov
lods
jns
pop
int
mov
mov
lahf
mov
test
clc
imul
push
call
into
imul
imul
inc
nop
cmc
jne
push
push
ret
fwait
ret
and
xor
cmpsb
jne
pop
mov
sub
mov
test
push
pushf
ds
into
pop
jnp
fadds
xchg
mov
std
das
and
popa
shlb
fwait
mov
mov
sbb
jp
inc
cmc
out
and
jle
sub
les
sub
in
lea
or
jge
and
loopne
pusha
mov
in
roll
mov
adc
sarl
jp
mov
cmp
push
xor
or
insb
and
xchg
mov
fdivrs
fstps
insb
adc
mov
push
movmskps
sub
push
xchg
dec
mov
sub
and
popa
cmpb
push
loop
jge
lea
fisubl
xor
mov
push
or
fwait
arpl
or
popa
jae
decb
add
push
pop
push
dec
adc
out
roll
es
mov
sub
test
or
test
pop
sbb
bound
add
sbb
lea
ss
ja
or
gs
add
aas
push
push
dec
ja
mov
xchg
test
push
into
out
scas
idivb
jb
mov
psrlq
dec
sub
cmpsl
inc
pop
inc
cmp
bound
fimuls
jg
add
stos
cltd
mov
ja
cmp
sub
or
xorl
aaa
cli
lods
lret
repz
cli
into
fidivl
aaa
popa
inc
xchg
popf
loopne
lock
subb
orl
popf
pop
popf
aaa
push
push
outsl
ret
cmpsl
cmc
lods
data16
jge
cld
test
sahf
nop
popf
adc
pop
xchg
jb
sub
outsl
add
dec
sub
add
add
cmpb
pop
mov
test
fs
mov
cmp
fcomip
call
mov
loop
xchg
loope
push
add
in
data16
arpl
addl
out
mov
and
dec
pop
mov
mov
cmpsb
repnz
push
mov
jbe
pop
xchg
inc
sbb
cmp
mov
shr
loopne
pop
mov
push
cmpsb
mov
xchg
lds
xchg
inc
ret
mov
xchg
mov
and
jle
xor
and
loope
mov
mov
bound
stos
cmp
push
call
lret
daa
iret
pop
or
imulb
sbb
cltd
ret
mov
roll
cmp
inc
sub
sbb
pop
mov
nop
das
outsb
mov
jmp
inc
stos
push
in
mov
xchg
cmc
scas
xor
popf
jge
fimuls
fidivs
adc
lock
mov
clc
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
cmpsl
adc
jp
addb
xchg
or
scas
lea
call
shlb
xchg
push
mov
in
and
bound
mov
jecxz
les
mov
cmp
lcall
fs
and
mov
cwtl
movsb
rorl
loop
mov
sbb
fnstcw
inc
aaa
into
cmovbe
or
loopne
pop
push
stos
mov
loop
cmpsl
xlat
test
cmp
popa
push
and
cmp
rcl
es
mov
stc
fidivrl
or
push
cmp
fiaddl
mov
divl
push
add
jle
lret
lods
cmp
outsb
shl
lcall
xor
push
call
ret
or
icebp
sar
fldln2
mov
xor
mov
jg
and
jge
outsl
pop
cli
adc
dec
and
jecxz
aaa
inc
test
cmp
rcll
adc
xor
fwait
jecxz
xor
fsubrs
clc
xor
mov
pop
out
iret
ljmp
cmpsb
pop
xchg
lock
and
push
in
push
sub
aam
and
mov
das
lret
mov
push
add
pop
pop
mov
pop
jnp
pop
popf
push
dec
pop
mov
sbb
adc
xor
push
cmpsl
push
lahf
lahf
gs
loopne
xor
sbb
xchg
sub
adc
cmp
xchg
pop
sbb
repnz
loopne
inc
out
loop
in
ret
mov
mov
xchg
mov
bound
inc
add
mov
mov
popa
push
push
test
jl
in
fmull
sbb
or
out
imul
mov
mov
jbe
jmp
push
fmul
pop
fistl
test
mov
mov
inc
jmp
pop
mull
sub
fs
xchg
leave
orb
cli
xchg
mov
imul
gs
fdivs
rorl
sarl
hlt
adc
sub
xchg
flds
dec
mov
lahf
nop
cmpsl
mov
dec
lahf
dec
inc
and
sub
push
leave
xchg
lahf
push
adc
cltd
or
hlt
popf
dec
adc
and
or
mov
pop
push
mov
mov
adc
adc
push
scas
outsb
shll
mov
sub
rdmsr
pop
popf
adc
xchg
xchg
loope
add
jno
out
sbb
lods
dec
and
push
mov
sbb
addr16
addl
jbe
imul
jmp
add
cltd
cmpb
sbb
cli
aam
jns
fdivl
daa
je
scas
jb
mov
in
xchg
jmp
inc
mov
sub
sbb
fadds
push
sbb
gs
xlat
aam
or
cmpsb
dec
andb
lahf
pop
jbe
xor
inc
and
xchg
mov
sbb
and
jle
jp
dec
mov
mov
xor
cmp
mov
add
push
cs
cmc
out
and
faddl
push
aaa
push
mov
mov
xlat
adc
and
push
je
insb
lods
in
mov
je
sbb
mov
test
dec
sub
lods
dec
xchg
pop
cmpsl
fisttpl
fbld
mov
jbe
out
loop
pushf
sub
out
inc
incb
mov
negb
pop
mov
push
cmp
add
adc
or
sub
dec
sbb
fmulp
xor
xor
outsb
mov
popa
jmp
cmp
repz
and
lock
popa
or
xchg
cmp
mov
or
fistpl
into
push
stos
add
and
sub
jns
jl
push
jae
xchg
into
lock
repnz
in
test
mov
nopl
fstps
iret
mov
push
orl
fwait
stc
push
jno
rcl
xor
test
fldenv
inc
mov
idivb
gs
mov
lock
ja
out
sub
scas
adc
jns
cmc
in
mov
or
out
movsb
mov
subb
gs
imull
xor
and
fiaddl
pop
dec
std
mov
and
xor
push
jge
push
push
je
jnp
nop
inc
xchg
xor
ljmp
lds
int3
iret
cmp
repnz
mov
cmpsl
mov
xchg
adc
iret
push
leave
fldenv
mov
popf
fsubrl
add
movsb
dec
mov
xchg
mov
inc
clc
inc
xlat
xchg
mov
and
cmp
jge
cwtl
jmp
xor
add
cmp
adc
in
dec
lods
jle
sub
xchg
rcrb
rcrb
mov
nop
aad
add
sub
popf
repz
not
icebp
jg
or
fs
into
adc
jno
and
pop
jle
aaa
subb
add
inc
jge
inc
mov
mov
cmp
xor
inc
daa
lods
jo
mov
mov
lcall
pushf
pop
jae
sub
adc
mov
add
mov
outsb
mov
cmp
fsubs
fyl2xp1
add
mov
jae
in
dec
fwait
ja
dec
add
mov
push
sahf
inc
add
andl
movsl
movsb
adc
push
mov
mov
clts
adc
fnop
iret
ljmp
dec
rclb
push
or
roll
push
jno
cmp
push
mov
inc
cmp
insb
or
xor
xor
or
sub
push
cwtl
sub
pop
xchg
sahf
adc
aad
jl
imul
addr16
or
out
cmpsl
shlb
push
data16
sbb
or
xor
pop
incb
mov
movsb
mov
push
clc
bswap
jb
push
mov
add
rcll
call
hlt
jl
xor
das
mov
add
sbb
pop
xlat
andb
add
adc
mov
jp
jb
movd
jge
das
mov
scas
movsl
xchg
lret
cli
dec
push
notb
inc
jl
inc
dec
dec
adc
fmuls
mov
mov
iret
aaa
sbb
aam
aad
push
inc
lret
cmp
pop
pop
mov
push
into
imul
pusha
aas
out
mov
sub
push
daa
mov
cmpsl
int3
mov
insb
sbb
mov
or
jl
fsubs
or
mov
add
jge
ss
lods
jnp
xorl
clc
and
pop
aas
mov
adc
push
mov
iret
sar
inc
cmp
filds
mov
lcall
add
lock
cli
aad
xor
lret
jp
sahf
adc
loop
das
js
pop
or
sub
loop
sub
cmpsl
lcall
sub
inc
stos
xlat
incl
scas
adc
loope
ljmp
int
les
int3
jns
and
or
push
xlat
and
xorl
pop
xchg
daa
out
lret
push
inc
dec
fldcw
jmp
mov
cwtl
sub
lahf
cs
sub
sahf
sbb
insl
nop
inc
bswap
mov
cmp
mov
xor
mov
int3
jmp
test
cmp
icebp
mov
or
jl
or
cmp
dec
je
fs
pop
sbbl
addr16
jle
sub
stos
scas
mov
repz
cmpsb
mov
mov
mov
clc
sbb
popa
imul
mov
rolb
fbld
push
mov
mov
sti
and
pop
fld
cmp
cmp
fidivrl
inc
loope
popa
leave
cs
fsts
inc
xchg
pop
ljmpw
add
push
in
or
arpl
or
call
push
data16
shlb
mov
mov
stos
negb
in
push
sbb
fists
cmp
inc
push
ret
inc
out
push
lea
cmc
movsl
add
xor
pop
cmp
clc
xor
bound
jge
rclb
inc
iret
push
mov
jmp
lahf
bound
shl
in
xchg
cmp
pop
lds
inc
mov
and
rcr
add
stos
sub
out
mov
pop
add
popfw
push
ja
xchg
test
clc
test
andb
sarb
cld
cmp
mov
ds
push
sar
add
pop
and
pop
out
jnp
mov
iret
in
jl
out
mov
pop
div
and
inc
xor
loopne
push
mov
pop
mov
pop
and
mov
add
jl
xlat
icebp
cli
ljmp
popa
icebp
pop
mov
push
lock
testb
add
adc
aas
pop
out
push
notb
push
push
xchg
insl
outsb
sub
and
push
subl
ljmp
stos
int
aad
pushf
sbb
lea
shl
mov
sbb
or
ja
adc
cmpsb
bound
push
sarl
mov
mov
push
mov
lahf
flds
jo
fisubrl
aas
pop
adc
lret
jg
stos
insb
aas
inc
idivl
cmp
cmp
mov
les
adc
repnz
add
outsb
adc
fs
or
or
add
mov
lret
mov
repz
cmp
out
cmp
mov
mov
cmp
lahf
icebp
pop
js
mov
push
lret
test
mov
jns
sahf
ljmp
lods
lahf
dec
xchg
or
in
test
mov
mov
mov
jbe
cmpsb
push
add
cli
mov
sbb
addr16
pop
xor
inc
out
inc
mov
add
inc
jl
mov
hlt
pop
inc
sub
cmpsl
into
pop
loope
or
mov
jb
jle
ret
or
jno
aaa
jo
mov
test
mov
pmaxsw
xchg
mov
pop
daa
mov
repnz
data16
mov
gs
or
divl
mov
cmp
fisttpll
cld
ds
ret
and
insl
mov
xchg
cmc
fidivl
push
ret
icebp
decb
pop
mov
daa
cmpsb
nop
pop
mov
cmpsl
pop
mov
dec
rcll
mov
lahf
aad
aad
or
ret
inc
fdivl
enter
iret
cmp
pop
mov
lea
in
stos
out
mov
mov
adc
in
sahf
pop
adc
pop
sub
aas
or
xor
cltd
xchg
scas
ds
inc
mov
cmp
jo
insb
enter
inc
pop
pop
xor
push
mov
pop
lods
pop
jmp
cmpsl
push
jmp
cmp
jecxz
aas
mov
inc
jmp
pusha
testl
out
or
outsl
jecxz
cli
lds
imul
add
mov
dec
sbb
jp
mov
out
sbb
mov
pop
lcall
mov
jae
or
dec
xchg
add
pop
cmp
cmpl
fstl
or
mov
movsl
popa
test
mov
mov
sti
ja
pop
fidivl
jmp
cmp
or
jbe
das
mov
sbb
dec
enter
loop
dec
mov
jecxz
dec
test
lods
dec
sbb
cltd
pop
ss
xchg
dec
pop
inc
lahf
inc
mov
or
dec
inc
sub
int
inc
add
inc
test
xor
cmp
dec
mov
and
sbb
lods
mov
sbb
dec
add
in
adc
pop
and
ficoml
xor
test
jmp
add
repnz
cmp
lds
mov
repz
or
jne
xor
jnp
adc
sahf
repz
cltd
mov
cwtl
xlat
or
test
push
jno
std
ljmp
gs
jo
mov
pushf
cld
dec
dec
movsl
or
jne
inc
mov
inc
mov
dec
lds
es
adc
jnp
pop
pop
pop
push
jbe
or
cmp
mov
sub
jns
mov
xchg
sarb
jmp
jmp
inc
add
cmp
mov
pop
ret
loope
adc
popa
data16
faddl
vpsadbw
xorl
push
out
mov
xor
cmpl
and
sti
mov
dec
adcb
jl
leave
push
or
push
mov
lods
outsb
mov
fmull
mov
ja
nop
push
clc
cmp
adc
out
inc
push
scas
arpl
testb
cmp
data16
xchg
xor
sub
mov
pop
and
mov
jne
hlt
cld
xchg
jle
inc
dec
push
mov
insb
or
or
adc
inc
inc
and
adc
cmp
shll
pop
cwtl
es
call
inc
push
stos
jnp
dec
push
ret
mov
shll
adc
or
stc
aaa
cmp
pusha
fiadds
mov
loopne
es
insl
adc
xchg
jno
mov
out
in
mov
icebp
bound
cmp
iret
test
inc
imul
test
add
iret
sbbl
in
add
dec
add
sti
lahf
imul
adc
loopne
out
mov
testl
pushf
insl
push
in
jne
in
add
in
sub
cwtl
repz
repnz
pop
inc
aaa
ficomps
or
das
pop
cmpsb
hlt
xor
movsl
in
push
popf
sbb
xor
enter
mov
cltd
add
lock
dec
sbb
mov
and
xchg
push
js
or
and
mov
dec
es
loop
iret
xchg
push
divl
xor
ss
push
mov
or
mov
push
jns
push
xlat
flds
in
fsubrp
rcr
in
push
jmp
inc
mov
mov
std
in
enter
dec
xor
jbe
mov
mov
movsl
or
addr16
popa
icebp
test
lahf
and
enter
pop
jecxz
mov
pop
in
dec
inc
addb
lds
inc
add
jmp
addb
cmpsb
jg
jne
movsb
movsl
ja
and
pusha
aas
rcl
mov
xchg
sbb
jle
and
or
subl
stos
push
enter
and
mov
inc
mov
pusha
mov
add
jp
scas
push
and
testb
rcrl
test
pop
lahf
aad
movsb
hlt
push
sbb
pop
orl
mov
pop
push
das
movsl
lcall
movsb
push
xchg
loope
jb,pt
out
into
push
push
js
fbstp
dec
out
js
xor
out
scas
in
xor
jne
push
mov
inc
test
lahf
jae
lds
stos
lahf
std
sbb
arpl
adc
mov
out
sub
adc
push
mov
std
sbbl
push
dec
ja
insl
dec
xchg
xchg
mov
jp
jno
fnstcw
mov
sets
inc
int
push
xchg
mov
stc
fadds
mov
or
inc
dec
shll
or
pop
adc
sbb
cs
mov
stos
push
int3
jle
adc
lods
dec
jmp
dec
cmp
hlt
rcrb
inc
adc
mov
in
pop
pop
cmpsb
aad
ljmp
std
imul
mov
movsl
repnz
mov
ljmp
xchg
jne
dec
sub
faddl
mov
repnz
movsl
mov
mov
mov
fcmovnbe
scas
lahf
nop
jnp
loope
mov
sub
pop
dec
sub
lmsw
add
lret
fwait
inc
inc
stc
int3
xor
popf
sub
andl
dec
dec
jns
or
ja
in
adc
xchg
cmp
mov
gs
mov
in
push
mov
arpl
dec
pop
cmp
decl
inc
cs
xchg
jle
mov
adc
cli
adc
out
dec
adc
js
mov
call
push
testl
sbbl
outsb
dec
icebp
cmp
lds
push
pop
stos
scas
inc
or
mov
je
pop
aad
iret
xchg
out
add
mov
pop
scas
push
cs
jle
je
cwtl
in
mov
add
push
xchg
enter
xor
test
adc
xchg
cmpsb
jmp
clc
or
jae
mov
shlb
push
call
mov
popa
cmc
bnd
cmc
xacquire
jmp
cmp
data16
pop
les
mov
lahf
or
sti
popf
int3
sub
ds
arpl
xor
lret
mov
ficompl
fs
icebp
psubsb
je
jmp
or
inc
cmp
push
inc
inc
dec
jmp
jb
mov
repz
xor
sub
xchg
dec
loop
mov
adc
clc
jecxz
cmp
aas
cmp
mov
inc
cwtl
loope
cmp
int3
ror
lret
pop
stos
ja
jge
jne
les
sahf
imul
push
and
sub
je
xchg
scas
sahf
scas
mov
push
mov
andb
mov
cwtl
jbe
and
jle
push
lods
pop
xchg
dec
or
and
and
xor
ljmp
pushf
pop
mov
or
shlb
adc
movsb
and
movsb
cmp
mov
add
dec
and
cmp
jl
jae
adc
mov
cld
cmp
xor
pop
lock
cltd
push
rcr
popa
pop
or
cwtl
inc
lret
movaps
push
aad
and
dec
dec
pop
loop
data16
ret
roll
outsb
lahf
dec
sub
repz
scas
pop
mov
adc
cld
mov
push
out
andb
mov
mov
inc
mov
jae
in
and
cld
inc
movsl
add
flds
outsb
push
outsb
xchg
jbe
aam
shl
test
in
das
mov
rorb
leave
cmp
test
adc
fabs
add
ljmp
or
mov
movsl
mov
lods
fwait
inc
test
lret
mov
pop
adc
mov
shll
cmc
std
xor
cwtl
cltd
pop
lods
pushf
jl
xor
lcall
ja
sbb
push
mov
cmpsb
cmp
dec
cmc
dec
faddp
pop
xchg
loop
and
repz
syscall
and
inc
in
mov
push
aam
iret
in
stc
cmp
test
dec
mov
cmpsb
cmpsl
cltd
sbb
stos
repnz
stc
iret
jbe
mov
xor
mov
shr
shl
adc
filds
pop
mov
cmc
and
xchg
sub
push
mov
mov
int
packssdw
jg
pop
mov
cmc
jns
movsb
mov
loope
adcl
xorb
fidivs
xchg
les
xchg
out
fimuls
push
cli
out
or
push
shl
ja
scas
sub
mov
nop
pop
inc
jbe
add
pop
push
outsl
jecxz
mov
ds
or
es
mov
xor
int
test
mov
imul
sub
lea
int3
push
lds
mov
fsubrs
fiadds
jns
and
jp
xor
jl
pop
outsl
push
mov
adc
les
sahf
dec
dec
push
mov
repnz
ret
add
jecxz
lret
outsb
adc
es
xchg
xchg
fwait
out
cmp
gs
jne
inc
scas
sbb
divl
ss
jne
in
sbb
jae
ret
mov
pop
or
sub
jmp
push
idiv
or
add
xor
daa
pop
xor
pop
lds
xchg
bound
aam
aam
sahf
jns
xchg
cmp
jmp
icebp
fisubs
mov
mov
add
lods
incl
add
pushf
das
mov
adc
jecxz
dec
in
jae
push
aam
pusha
in
stos
push
xchg
add
add
dec
setp
mulb
mov
cld
rorl
or
sub
cld
or
inc
into
loop
aam
daa
jecxz
jmp
hlt
ret
or
cmp
movsl
fldl
int3
and
roll
out
aas
mov
jg
das
shl
lock
mov
insl
dec
dec
adc
test
and
popf
movsb
mov
outsb
jecxz
pop
or
pop
lods
aaa
sbb
push
xchg
repnz
aad
rcrl
cli
test
inc
push
and
sbb
outsb
xchg
fwait
pop
pop
adc
adcb
loopne
sbb
inc
jecxz
icebp
pop
jg
push
and
scas
or
add
stos
jne
aad
outsl
iret
pop
pop
jb
sub
jp
lahf
repz
mov
into
hlt
and
cmc
fwait
pop
les
jmp
inc
mov
sub
test
or
cmpsb
jo
fldcw
lock
insb
lahf
test
or
add
inc
cmc
cltd
sub
push
roll
gs
lock
or
lahf
decb
testb
je
add
sbb
andl
movsl
ficoms
decb
lcall
push
imul
inc
xor
repnz
addl
xor
or
ss
mov
mov
dec
push
sahf
push
jge
adc
push
lahf
push
xchg
push
daa
xor
arpl
xorl
adc
cmp
pop
ja
xlat
lret
jo
sub
cltd
inc
mov
mov
xchg
outsb
inc
fcmovnbe
cltd
out
shrb
test
or
jne
rcr
into
jno
cmpsl
dec
pop
dec
das
sbb
loopne
bound
test
imul
mov
imul
push
xor
mov
into
push
adc
repnz
lret
sahf
mov
lods
in
leave
in
jp
push
inc
and
in
das
insb
add
mov
clc
test
imul
fdiv
sahf
add
mov
ljmp
push
mov
in
pop
pop
fldl
xor
inc
out
into
rol
orb
jmp
test
jmp
insl
jbe
insl
stos
mov
mov
push
fcmovnu
aad
out
add
push
dec
adc
sbb
mov
mov
lea
add
inc
sbb
loop
pop
insb
pop
dec
popl
cmc
add
inc
or
shrl
fs
push
push
loop
adc
in
lcall
jo
lret
add
ret
add
xchg
jl
mov
xchg
dec
popa
mov
or
shl
gs
outsl
arpl
pop
pushf
ss
inc
faddl
sub
cmpsb
cmp
jne
daa
aam
insl
repnz
cmp
add
dec
sub
in
popa
jp
fistpll
pop
add
add
sub
cmp
jg
gs
pop
shll
testl
sub
jl
daa
es
add
lahf
loop
add
pop
inc
mov
sub
mov
popf
pop
sarb
mov
sti
cs
mov
and
lcall
imul
mov
push
xchg
ds
pop
push
mov
pop
mov
lret
outsl
mov
jl
sbb
insl
dec
enter
jo
lods
jl
cmpsl
jmp
push
lods
lret
addr16
roll
push
test
jae
out
ret
outsb
xor
pusha
and
push
das
aam
das
cmp
outsl
rolb
push
lret
clc
push
ss
sub
sbb
movsl
loop
lret
xchg
cmp
sahf
mov
cmp
inc
dec
push
cmp
out
push
int3
mov
outsb
lods
outsb
push
pop
aam
lods
sbb
push
js
aas
and
shl
mov
int
div
in
mov
mov
scas
lea
sbb
pop
xchg
cmpsb
je
push
or
mov
mov
push
bound
sahf
mov
sbbl
je
int
adc
dec
push
jle
stos
xor
in
aas
sahf
ds
nop
and
jl
dec
cli
int3
ljmp
js
addr16
mov
and
fadds
push
pop
jne
dec
pop
jb
mov
jge
and
sub
leave
xor
and
dec
mov
clc
fwait
std
insl
icebp
cmp
mov
fidivs
push
aad
adc
shlb
icebp
mov
jo
repz
fcmove
xchg
leave
mov
xor
and
fcmove
ds
mov
jmp
push
outsb
mov
dec
daa
sti
pop
jp
aad
pushf
bound
and
test
test
cli
fsubs
xor
mov
cltd
stc
je
cwtl
enter
or
out
lea
pusha
lock
outsb
jl
sub
out
fcmovnbe
sub
add
add
dec
lss
xor
mov
inc
or
jmp
and
mov
or
test
add
pop
fadd
pop
push
xchg
dec
lea
in
xor
negb
mov
ds
or
lret
mov
and
mov
push
in
xor
add
lcall
add
mov
jg
cs
cmc
inc
pop
sahf
addb
lock
sahf
and
mov
fstl
daa
push
inc
in
sbb
mov
pushf
inc
sub
loopne
test
xor
lea
xchg
dec
push
lret
or
push
lea
stos
dec
cli
dec
sub
sub
jbe
sbb
aam
sbb
fs
or
cmovno
pop
mov
in
jne
dec
xor
fsubr
in
fisttpll
lret
pushl
int3
out
jo
rolb
idivl
fdivrs
aad
sbb
lahf
fcmovu
adc
lcall
xor
inc
in
sub
sbb
or
xchg
push
aaa
popa
jno
mov
out
xor
cmpsl
pop
imul
mov
or
test
push
out
jno
mov
movsl
cmpsl
test
mov
xchg
or
cmp
pop
sahf
or
cmc
mov
jmp
imul
cmp
adc
pop
lods
adc
leave
sub
ss
pop
xor
clc
aad
pusha
lahf
mov
mov
cltd
inc
out
jle
inc
jp
xchg
jg
jae
int3
pop
ss
test
push
push
inc
lods
fdivr
jne
popf
inc
cmpsb
clc
push
js
cmp
mov
and
jb
sarl
push
push
push
and
mov
or
addr16
negb
pop
mov
mov
xchg
wbinvd
mov
movb
jo
icebp
clc
xchg
rol
fdivrl
xlat
add
pop
out
and
sbb
mov
popf
jbe
sbb
cmpsl
enter
nop
adc
jb
fwait
nop
sahf
shlb
push
sbb
je
jae
xor
sbb
stos
mov
mov
test
mov
outsl
cmp
mov
cmp
dec
test
push
push
xchg
mov
aaa
inc
mov
loopne
dec
in
inc
aaa
and
in
bound
arpl
imul
andb
mov
outsb
jns
mov
in
push
clc
popf
add
xchg
call
mov
cmp
int
stos
les
sbb
js
cmp
jge
dec
pop
leave
adc
push
dec
cli
gs
lods
test
test
ret
rorl
lcall
lea
mov
jae
lcall
and
popa
jge
push
cmpsb
xchg
pusha
scas
jb
mov
xor
lahf
imull
sbbb
jae
inc
push
or
aas
jge
sub
fdivrl
daa
adc
shrb
rcll
cmp
nop
out
leave
xor
and
mov
icebp
rolb
jecxz
push
mov
js
ret
xlat
and
dec
add
arpl
jne
les
push
jo
iret
daa
adc
cmpsl
test
scas
mov
hlt
mov
mov
shll
mov
dec
aas
push
rclb
jmp
inc
jmp
sub
daa
mov
pop
push
and
push
xor
dec
xchg
stos
sti
xchg
dec
mov
push
pop
fxrstor
and
mov
fcoml
mov
sbb
inc
scas
sbb
sti
jg
xchg
insl
sub
lret
push
and
xor
jnp
imul
dec
jle
call
int
movl
and
jg
mov
ret
loope
sbb
insl
nop
mov
push
cmp
or
pushf
lock
xchg
xchg
jle
add
std
fs
add
mov
xchg
mov
je
pcmpgtd
add
leave
outsl
sbb
push
push
lds
mov
adc
push
ljmp
insb
ja
das
xchg
sub
in
repnz
clc
inc
cmc
mov
sbb
jle
inc
mov
pop
push
loope
xchg
shlb
xor
mov
ret
xchg
pusha
enter
inc
push
divb
ficomps
mov
adcl
mov
cmpsb
ret
ja
daa
add
inc
imul
repnz
idivb
inc
dec
mov
ss
mov
sub
aam
jbe
mov
lahf
stos
xchg
lcall
arpl
cwtl
lods
xor
cmp
pop
jb
cli
inc
imul
sahf
jle
inc
cmp
stos
pop
jecxz
stos
xor
cmpsb
es
and
pop
fdivrl
fadds
push
enter
call
sbb
dec
lahf
icebp
in
mov
cwtl
repnz
out
arpl
mov
idiv
jne
push
cmp
xor
mov
cmpsl
nop
sbbl
shll
mov
sti
inc
push
sbb
fldt
jp
addl
adc
cmpsb
mov
mov
and
adc
mov
sbb
pusha
cmp
leave
mov
inc
cmp
mov
out
or
xlat
cmpsl
sub
xlat
int
insb
lea
cmpb
mov
std
push
push
pop
loop
mov
mov
stos
push
in
xor
jb
lods
fistpll
test
sti
or
stc
xchg
mov
cmp
nop
inc
pop
or
xor
push
inc
cmp
mov
mov
lods
xor
popf
pop
xchg
or
or
repnz
cltd
pop
adc
or
sbb
ss
jnp
adc
cmpsb
popa
ficoms
add
xchg
das
push
adcb
out
insl
shrb
push
cmp
fwait
and
lret
sarl
push
pop
mov
out
push
cli
adc
xorl
sub
cld
pusha
mov
movsl
mov
adc
outsb
bound
push
and
inc
icebp
lods
scas
add
test
dec
lret
cmp
int
sbb
xchg
mov
out
repz
mov
rcll
sub
mov
mull
es
push
imul
mov
xchg
add
lret
lret
sbb
cmc
dec
aaa
repz
int3
inc
add
push
aad
mov
mov
sbb
pop
dec
and
xchg
adc
dec
in
mov
int
in
sbb
jno
mov
and
testl
loope
pop
mov
cmc
dec
push
mov
cld
inc
ret
les
insl
push
jmp
je
jo
push
repnz
fists
sbb
lret
jb
pop
repnz
es
scas
mov
mov
xor
sub
push
mov
nop
popa
icebp
std
and
jmp
daa
adc
jnp
repz
rolb
gs
arpl
jae
fiadds
adc
ljmp
jmp
xchg
xchg
and
popf
movsl
push
bound
repnz
adc
movsl
hlt
shlb
adc
push
mov
ja
test
push
incl
ljmp
jno
jae
test
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
pushw
mov
orl
addl
push
jo
jge
pop
dec
fs
mov
outsl
pop
mov
je
mov
mov
pop
rcr
mov
or
jns
nop
xorb
jne
icebp
out
or
aad
in
sbb
out
push
xor
push
sbb
adc
cmp
insb
push
test
loop
shlb
sub
add
jg
rorl
in
mov
jecxz
out
mov
push
mov
imul
test
mov
out
rorb
nop
or
jg
and
jge
bound
xchg
jp
cltd
fdivs
dec
jle
push
mov
mov
iret
enter
xor
cmp
test
push
jne
adc
lods
or
pop
cmpsb
add
outsb
scas
in
xor
adc
dec
lahf
xchg
mov
fdivr
in
cli
jns
aam
lods
push
shll
lahf
scas
fmuls
ret
ret
scas
frstpm(287
mov
adc
pop
fiadds
repz
lahf
das
and
or
in
mov
lock
in
push
stos
jp
js
fsub
cld
cld
sbb
jnp
push
je
add
movsl
andl
lahf
xchg
repz
sti
xor
gs
push
xchg
out
cmp
cmp
sub
lcall
mov
mov
stos
adc
mov
aam
inc
and
dec
pop
xor
rcrb
xor
push
bound
xor
inc
fnstsw
jnp
mov
les
loopne
xchg
mov
mov
adc
sub
clc
sbb
fdivrl
popa
mov
adc
jecxz
xor
cld
mov
icebp
mov
jb
dec
or
inc
push
dec
and
and
imul
push
push
nop
mov
stc
es
xchg
enter
inc
push
inc
int3
out
sub
test
adc
bound
ret
addl
cli
addr16
xchg
gs
mov
pop
mov
xlat
movsb
movsb
and
aad
cld
or
lea
mov
add
or
or
sbb
xor
dec
mov
add
sub
cwtl
mov
or
fs
pop
movsb
test
or
daa
lods
rcl
insb
rorb
and
xchg
and
dec
inc
test
pop
stos
push
mov
cmp
xor
or
mov
add
int
mov
dec
mov
xchg
mov
sub
lahf
ret
pop
jl
dec
hlt
and
add
jb
or
inc
xor
pop
js
hlt
adc
xchg
inc
into
cmp
pop
and
mov
mov
xor
fdivr
pop
dec
mov
frstor
mov
addr16
fldcw
int
scas
mov
das
inc
pop
rclb
adc
pop
call
lret
cmpb
sub
adc
adc
sub
xlat
in
mov
sbb
insb
add
popa
sti
inc
mov
shll
or
dec
push
into
loopne
mov
cmp
bound
pop
lods
das
movsb
add
out
imul
ljmp
icebp
add
mov
sbb
pop
out
push
mov
or
fistpll
repz
cmpsl
sahf
mov
hlt
add
scas
lret
iret
cs
mov
setne
inc
test
add
stos
sarb
scas
pusha
push
push
into
fwait
cmp
arpl
test
mov
pop
repz
rcrb
inc
inc
jge
jae
insb
jecxz
stos
or
out
imul
insl
cmp
lock
xor
loope
arpl
jae
add
ja
out
repnz
inc
das
lods
xchg
and
das
fidivs
or
and
mov
negl
add
in
sarb
push
cs
mov
inc
add
push
or
std
or
punpckhdq
xor
lcall
in
fwait
xor
ret
dec
ds
mov
mov
enter
fstl
fimuls
dec
adc
add
out
add
dec
in
rorl
hlt
loopne
lods
add
stc
add
pop
cs
add
adc
pop
or
das
sub
mull
jmp
jp
jg
mov
mov
fldenv
movsb
enter
jp
xlat
lret
fidivl
out
or
push
flds
into
popf
lret
mov
inc
mov
nop
sub
fbld
mov
sbb
cwtl
xchg
or
int
adc
cmpl
pop
inc
sbb
ds
dec
add
sub
mov
movsl
mov
cld
and
in
inc
dec
sti
sub
pusha
xor
push
mov
lahf
hlt
jno
repz
xchg
int3
mov
mov
shl
addr16
setne
push
les
and
nop
test
sub
xor
xchg
inc
pushf
imul
add
stos
clc
jno
mov
and
push
call
test
roll
ss
adc
fs
and
pop
sbb
les
dec
and
inc
jmp
inc
mov
cli
push
rol
xor
cmpsb
idivl
xor
sub
popf
lret
fdiv
pop
push
loop
push
mov
dec
enter
and
loope,pt
fneni(8087
xchg
pop
js
sarl
jo
sbb
mov
cmp
push
mov
mov
xchg
out
sub
jbe
fsubr
push
movsl
pop
in
call
cmc
stc
cwtl
pop
mov
outsb
xor
adc
bound
push
sahf
xor
test
lahf
mov
sbb
adc
test
int3
sub
scas
lret
pop
dec
into
jp
push
ror
cmc
aaa
inc
cmc
addr16
or
add
inc
int
call
out
and
enter
iret
mov
aad
pop
out
sub
or
inc
sub
adc
iret
cmpb
cld
rorl
inc
sub
mov
scas
hlt
in
sahf
cmp
pop
add
add
das
into
jns
add
dec
cltd
inc
xor
lock
sub
mov
jmp
pop
in
sub
mov
into
clc
fs
cmpsb
ret
ljmp
inc
xor
lods
inc
mov
add
lds
je
push
sbbb
sbb
sub
push
pop
paddb
adc
cmp
or
sub
insb
mov
cs
test
bound
or
xor
lods
dec
or
mov
pop
movsl
rcrl
stos
aam
push
out
inc
sbb
outsl
jnp
rcll
sbb
sbbb
or
cmp
out
mov
addr16
movsb
les
lea
jle
mov
mov
sbb
call
imulb
pushf
outsl
push
sbb
sbb
mov
pop
int3
fsub
jecxz
loope
cmp
sbb
pop
cltd
cmp
mov
dec
push
mov
dec
jne
out
fcmovnb
addr16
lcall
mov
adc
lds
dec
lds
or
mov
or
xchg
dec
jecxz
icebp
fs
sbbl
dec
inc
negl
pop
inc
cmp
cld
imul
bound
ljmp
or
jg
es
insl
js
es
incl
pop
pop
xorb
lods
and
rcrl
cmp
bnd
jmp
jno
mov
xor
adc
setle
push
int3
lahf
dec
push
lahf
add
rorl
or
jl
cmp
xor
pop
nop
or
mov
mov
insb
shrl
call
push
imul
sbbl
xchg
imul
and
mov
scas
cmc
loop
sbb
lods
fimuls
mov
push
mov
fistps
ficompl
mov
aad
icebp
jecxz
lret
out
gs
ja
les
lods
into
fsubl
cwtl
push
les
push
repnz
push
popf
and
nop
cltd
pop
pop
xlat
mov
pop
sbb
sbb
sbb
inc
outsl
mov
addr16
fs
rcrl
icebp
mov
pop
in
fs
add
js
movsb
daa
inc
cmp
int3
cmp
jo,pt
push
mov
arpl
leave
jb
xchg
xor
push
out
jo
aam
mov
jne
sbb
or
push
mov
pop
xchg
fsts
es
xor
call
lds
push
dec
pop
dec
cmp
fdivs
mov
fmull
mov
in
xchg
cmpsb
jno
aaa
test
movsb
push
xor
sub
sbb
pop
xchg
fcomi
jp
fsub
test
push
scas
jno
cltd
dec
inc
and
rcll
push
mov
jmp
test
imul
fldl
push
hlt
in
and
scas
shll
sbb
rcr
int
add
sub
and
sub
clc
and
push
bound
dec
movsb
jns
scas
and
mov
jne
in
inc
push
jl
rcrl
sbb
lods
inc
sub
rcll
lods
sbb
push
pushf
cmp
add
or
inc
or
int3
call
aaa
out
aam
out
roll
push
clc
ja
jno
in
rol
push
jno
std
js
jbe
jecxz
vphadddq
mov
in
dec
inc
outsl
shrb
or
dec
pop
call
rolb
pop
jp
jp
cmpsl
jp
mov
sub
mov
das
addr16
xor
in
adc
jecxz
out
xchg
nop
cmp
jp
mov
cmp
mov
sub
pop
mov
sbb
repz
or
push
fistl
add
jle
xor
add
jb
orl
call
shll
adc
aas
cmp
dec
cmpsl
pop
cltd
scas
test
movsl
shl
aad
popf
pop
roll
leave
mov
pop
and
add
sub
out
inc
pusha
filds
and
ljmp
jge
jecxz
sub
fstl
rorl
adc
xchg
jnp
daa
sbbl
pop
sbb
jl
or
out
push
mov
pop
int
or
mov
imul
and
cld
mov
fstpt
pop
dec
jno
or
xchg
jae
dec
in
shrl
sub
cmp
pop
rep
in
push
dec
scas
roll
sub
loopne
xlat
xor
jb
or
push
fbld
jns
pop
jle
out
in
dec
mov
jo
sbb
aad
xor
fsubrl
mov
out
jb
sub
call
leave
xor
aad
xchg
adc
jb
xchg
mov
popa
arpl
push
sahf
test
pop
arpl
das
es
mov
mov
cmpsl
filds
mov
adc
cmp
push
adc
push
cmpsb
in
pop
xchg
jnp
fistpl
fstpt
outsb
push
loope
adc
sbb
pop
loope
repnz
sbb
and
dec
pusha
lahf
xchg
and
cwtl
movsl
jnp
cmp
popf
inc
inc
aam
repnz
jno
adc
sub
xor
dec
scas
pop
mov
jo,pn
mov
pop
push
xchg
xchg
jmp
vmptrld
hlt
lods
pushl
push
xchg
add
in
scas
out
shrl
call
mov
stos
test
mov
idivb
xor
cmp
xor
dec
iret
mov
fdivl
out
dec
aaa
mov
repz
add
out
sbbb
cmp
mov
jbe
lcall
es
push
or
into
mov
dec
int
jnp
inc
cmp
stos
add
push
shlb
xor
lock
inc
data16
js
nop
jecxz
lahf
stc
xchg
add
loopne
sub
iret
and
pop
bound
sbb
fldl
sub
jb
dec
insb
je
js
lahf
jg
mov
inc
sbb
loop
cmpsl
push
dec
loop
sahf
xorl
push
outsl
jle
sub
clc
jg
addr16
lcall
gs
nop
out
shl
popf
mov
ds
sbb
sbb
ds
in
ds
mov
popa
add
stc
pop
imul
mov
call
push
xor
stos
dec
lret
enter
or
mov
icebp
lret
shrb
ret
pop
or
push
push
mov
mov
stos
loopne
dec
xor
jmp
add
icebp
test
in
popa
cmp
popf
mov
mov
insl
fwait
add
cmp
lahf
jg,pt
xchg
fsts
lea
xchg
push
in
add
stos
cmpb
pop
pop
inc
pop
xor
inc
stos
jge
mov
int
nop
les
das
stos
loop
out
arpl
pop
sbb
scas
xor
jbe
mov
inc
or
call
lahf
js
nop
mov
outsb
leave
imul
inc
fsubl
jne
divl
xchg
fsubrs
nopl
xorb
cmc
icebp
jnp
add
xchg
test
aaa
add
lcall
sub
pop
mov
and
seta
outsl
loopne
and
in
je
out
xor
pop
push
sub
decl
mov
jle
mov
leave
dec
push
xchg
jns,pn
int3
mov
ja
cmpsl
or
daa
xor
stc
cmovg
mov
or
cmp
or
push
dec
and
xor
pop
shlb
std
push
and
jmp
xor
and
or
xchg
mov
jo
push
sti
push
out
mov
cld
fmulp
fisttpl
pop
lahf
pop
or
mov
mov
mov
adc
mov
pop
fwait
stc
dec
enter
push
adc
xor
or
arpl
repnz
jbe
in
xlat
outsb
push
inc
mov
ja
cwtl
ret
and
in
and
stc
pop
das
mov
popl
inc
aaa
inc
dec
mov
fisttpll
mov
fstpt
imul
xchg
in
cmp
loope
fsubp
ljmp
sarb
fdiv
out
fs
mov
icebp
mov
jnp
aam
testb
sbb
add
lahf
pop
mov
into
pop
ja
mov
dec
stos
or
adc
inc
inc
in
imul
mov
mov
bound
sub
test
jmp
or
je
cmp
or
or
push
mov
aas
pop
pop
or
cmp
test
cwtl
divps
in
push
jl
mov
negb
pop
mov
jne
movsl
and
adc
scas
jecxz
mov
inc
call
jg
movsb
mov
les
shrl
adc
orb
pusha
das
push
outsl
dec
push
jno
add
mov
mov
xchg
jo
jg
jno
dec
out
into
sbb
repz
iret
call
dec
pop
pop
das
pushf
lcall
gs
xor
sbb
mov
jle
mov
push
dec
stos
add
scas
fwait
mov
stos
lcall
jns
jge
jp
inc
mov
fcmovnu
incl
addr16
jns
lods
imul
push
mov
jbe
in
pushf
and
mov
fs
dec
mov
jmp
pop
jle
mov
mov
in
out
inc
jg
gs
das
enter
out
ret
test
xchg
mov
inc
adc
lahf
insl
jmp
imul
cld
sbb
iret
xchg
test
sub
xchg
inc
cmp
or
and
sbb
dec
jle
pop
xchg
xor
xchg
dec
sbb
dec
xchg
pushf
and
nop
hlt
mov
mov
bound
cltd
xchg
std
xchg
scas
sub
js
shlb
push
fsts
xchg
xchg
daa
adc
ds
and
jecxz
scas
imul
xlat
dec
jp
loope
or
sub
cmpsb
pop
ficoml
sbb
loope
cs
pop
aas
push
daa
dec
dec
xchg
and
mov
cmpsb
daa
or
stos
popf
push
push
xchg
push
rolb
std
adc
fs
dec
xlat
ficoml
pop
sbb
jne
mov
jno
add
fildll
jmp
iret
mov
movsl
ds
fstpl
push
ds
jno
std
cmc
popf
in
cmc
mov
mov
pop
ljmp
lahf
cli
lods
mov
daa
aam
outsb
dec
mov
movsl
or
sub
cmp
push
xor
xchg
xchg
mov
cmpsb
popa
mov
cmpsl
bound
and
lret
out
fnstsw
cmp
mov
cld
cmp
cmp
cmc
enter
lret
mov
les
dec
push
call
andb
xor
cmp
loop
lds
dec
mov
mov
or
cmp
pusha
mov
xchg
aaa
push
push
insb
and
push
mov
xchg
pop
cltd
add
mov
sbb
mov
push
int3
lods
cmc
adc
jle
sub
outsb
pop
xchg
mov
mov
mov
xor
rcr
xchg
mov
jnp
xchg
fildll
push
cltd
xor
js
inc
dec
jb
popa
pusha
out
in
pop
xor
mov
pop
fiadds
aaa
sub
pop
push
gs
out
add
and
addr16
ss
mov
loop
repz
push
out
mov
adc
xchg
inc
fists
leave
ljmp
lahf
test
push
js
sub
movsl
inc
inc
sub
fcompl
cmp
repz
subb
out
push
pop
cmp
test
jmp
and
xchg
pop
js
push
test
ss
les
jo
dec
inc
fldt
or
xor
dec
out
test
repnz
sbb
imul
mov
cmpsl
or
cmp
or
and
dec
iret
imulb
movsb
fldt
add
cmp
adcl
pop
add
cmpsb
pop
gs
negl
xor
add
dec
sbb
inc
ffreep
imul
pop
insl
push
adc
in
add
outsb
out
fistps
adc
pop
or
jb
sbb
cwtl
xchg
add
cmp
daa
call
repnz
inc
adc
nop
pop
negl
mov
jo
fdivrp
xor
fidivl
sbbb
faddl
std
mov
popf
aam
es
das
sub
cmpsb
xchg
fs
pop
jnp
movsl
cmc
inc
cltd
xor
ret
adc
cmp
std
sbb
pop
aad
test
addr16
jno
addr16
pushf
mov
adc
outsl
and
lods
jne
jbe
fwait
xchg
inc
push
mov
push
cmpsb
std
add
mov
mov
sub
push
jl
and
push
es
mov
fwait
ja
lret
sbb
jb
arpl
repnz
inc
push
fidivl
pop
mov
in
inc
popf
jecxz
orb
jo
cmp
test
in
inc
push
cwtl
or
je
mov
mov
push
fisubl
hlt
lds
iret
sbb
pop
xor
test
mov
push
test
addb
divb
and
sbbb
inc
lods
roll
sti
shl
lcall
ret
cmp
inc
xor
pop
dec
ret
and
outsb
lods
and
ds
call
mov
enter
jp
xchg
jne
adc
fwait
loope
jns
sub
mov
mov
nop
aad
roll
imul
sub
mov
dec
inc
int
push
lahf
bound
daa
outsb
jns
imul
es
fsubs
fdivrp
mov
loop
cli
cmp
movsl
add
testb
xchg
sbb
inc
jmp
mov
sub
xchg
adc
cmp
pop
xor
repz
sub
push
cmp
cmpsb
and
in
ljmp
mov
pop
add
out
stos
ret
mov
or
add
fwait
movsl
mov
mov
outsb
xchg
int3
call
jle
jnp
add
adc
add
dec
cmp
lock
into
ja
aam
jecxz
filds
add
clc
fisubl
incb
push
mov
pushl
sti
and
neg
scas
dec
adc
stos
xor
lea
cmpsb
cmp
xchg
push
cmp
jb
andb
push
sub
popf
sub
das
push
imul
mov
movsb
push
and
jmp
xchg
mov
nop
lods
imul
add
add
mov
mov
and
in
and
push
je
or
pusha
mov
push
les
inc
and
push
or
add
jns
jg
mov
pop
push
stc
lcall
int
jae
dec
mov
mov
or
mull
mov
in
sbb
push
mov
ret
lcall
sbb
pop
pop
xchg
push
inc
popa
cmp
mov
test
cmp
loope
lea
jb,pt
xor
mov
cmp
mov
out
stos
scas
or
jge
lods
jmp
sbb
fdivs
rclb
jp
or
mov
fmulp
ja
negl
frstor
adc
icebp
add
and
adc
movsb
sub
xchg
pusha
lods
mov
movsb
dec
push
sbb
cmpsl
cmp
out
inc
ds
cmp
cmp
dec
lods
cmp
xor
movsl
push
data16
sbb
or
mov
inc
sti
mov
mov
insb
xchg
es
pop
imul
stos
fcompl
arpl
fldt
hlt
dec
inc
loopne
mov
inc
cli
jne
mov
mov
push
sbb
stos
push
mov
xchg
mov
inc
push
sub
outsl
cwtl
pop
cltd
nop
mov
dec
cmp
enter
repnz
dec
sub
jle
aaa
sub
cmc
lahf
push
push
dec
aam
repz
in
pop
outsb
addl
jle
and
mov
mov
or
fwait
and
pop
cltd
mov
addb
pop
mov
or
rolb
or
sti
in
daa
xchg
push
xorb
pushf
jne
mov
jno
pop
dec
cmp
mov
arpl
stos
fsubp
mov
dec
inc
lcall
scas
test
sbb
xchg
repz
sbb
mov
stos
pusha
cmc
or
inc
cmp
pop
dec
sbb
repz
and
lods
and
ss
jae
fistl
push
inc
lahf
add
dec
sub
add
mov
mov
in
sub
roll
jns
adc
cld
ss
ljmp
hlt
inc
xchg
mov
mov
mov
or
mov
outsb
mov
push
adc
sbb
xor
popa
or
jnp
ret
sbb
aaa
sarl
movsl
xchg
sub
in
int
push
lods
adc
ret
xlat
or
jnp
cmpsl
pop
sub
aam
dec
repz
gs
in
mov
dec
nop
push
mov
out
sub
jge
push
mov
ret
pushf
and
dec
popa
or
int
cmp
jae
push
inc
inc
stos
jae
sub
inc
gs
repz
decb
outsl
adc
es
inc
push
push
jo
jne
stos
mov
pop
adc
jno
leave
sbb
stos
ret
movsb
sub
mov
xchg
lcall
cmp
lods
pop
or
push
outsl
xorl
dec
hlt
and
jecxz
popa
xchg
negb
cmp
subl
cmp
das
lods
stos
jp
cmpsb
cli
xchg
pushf
insb
cmp
or
jbe
into
pushf
stc
and
scas
pop
or
jae
xchg
and
scas
mov
mov
ljmp
push
pop
xor
pop
insl
push
loope
stc
outsb
mov
pop
jae
pop
inc
rolb
dec
push
lret
iret
ljmp
inc
ret
cs
lods
insl
xchg
inc
dec
arpl
xorl
jno
loopne
add
mov
out
mov
ljmp
push
aas
and
or
push
cmp
sub
adc
test
call
out
sub
inc
mov
or
lea
push
es
mov
lcall
push
repz
mov
clc
rorb
push
in
push
adc
and
or
fldl
fcomip
push
aaa
mov
cmpl
ljmp
and
push
mov
popa
push
lret
movsl
insl
xchg
mov
xchg
xchg
lods
push
imull
push
loope
negl
push
clc
into
pop
cmp
add
xchg
stc
jmp
mov
inc
adc
jbe
cmpsl
int3
addl
leave
int3
xchg
fsub
lea
in
sbb
pushf
inc
fs
push
in
mov
pop
adc
imul
aaa
in
pop
clc
sti
or
rcrl
lea
clc
mov
add
mov
repnz
xchg
in
inc
lds
dec
pop
out
notl
and
dec
lcall
dec
xchg
xor
inc
mov
mov
ds
xchg
cmp
aaa
mov
insl
xchg
sbb
repnz
mov
aaa
lds
sti
sub
and
inc
pop
or
ret
xchg
lods
push
jne
mov
or
addr16
cwtl
mov
popa
dec
pop
and
mov
stos
cmp
cs
and
faddp
xchg
shlb
xchg
jno
xor
lret
pop
inc
adc
in
addr16
xor
aam
popf
mov
stc
dec
or
mov
dec
jnp
xchg
jb
shld
and
mov
mov
pop
sub
mov
push
pop
inc
xor
dec
nop
mov
or
push
jecxz
std
mov
sub
int3
and
leave
mov
insl
pop
popa
add
ljmp
inc
fwait
aaa
sbb
cmpl
jae,pt
cli
mov
inc
mov
es
and
push
mov
inc
push
mov
ret
gs
inc
pop
popf
cmp
push
mov
loop
lea
in
out
and
lods
mov
mov
sbb
jo
mov
add
push
mov
jbe
mov
adc
lret
clc
pop
lret
add
mov
aas
lret
push
in
inc
add
repz
adc
mov
scas
adc
arpl
rcrl
into
mov
call
or
dec
loopne
fistpl
je
addr16
pop
dec
adc
jne
jae
mov
jno
mov
loope
loope
dec
xchg
push
adc
cmp
pushf
pop
and
clc
push
mov
jmp
movb
ds
mov
inc
repz
cmp
sbb
cld
jge
add
into
fmul
mov
add
xchg
mov
cmpsb
lahf
mov
out
ret
push
adc
test
adc
cld
pop
je
xchg
pop
pusha
dec
repnz
pop
into
clc
pusha
call
lret
mov
mov
xor
fists
ret
pop
mov
shlb
sbb
andl
movsl
jne
inc
cmp
adc
inc
push
xor
jmp
fildl
scas
push
and
mov
jb
daa
leave
xor
es
xchg
insl
loope
jg
fs
test
or
or
aaa
out
mov
je
clc
or
xor
or
iret
sbb
test
cmp
sub
jno
aaa
adc
xor
shr
cmp
xlat
or
mov
adc
sarl
mov
lea
dec
cld
sbb
mov
roll
sbb
shll
out
add
adc
shlb
aad
mov
outsb
mov
dec
repz
or
push
and
iret
pop
call
or
jbe
inc
nop
dec
ret
sub
xor
in
fwait
push
and
fsts
fiadds
fadd
mov
push
enter
push
dec
add
cli
in
cmovnp
push
pop
jno
jle
push
mov
pop
xchg
fsubl
pop
arpl
testl
lcall
inc
or
mov
adc
sub
jne
loope
jnp
sub
adc
sub
aas
mov
sbb
je
lods
cmp
cmp
mov
push
popl
mov
and
pushf
mov
lret
xor
test
inc
je
xchg
dec
sbb
inc
and
add
adc
outsb
aad
mov
xchg
shr
ja
jae
ja
push
and
add
stc
stc
mov
inc
push
xor
mov
pusha
jle
sub
sbb
mov
lcall
dec
das
and
jnp
lock
cs
test
pop
pop
aaa
nop
mov
mov
push
dec
shrb
out
fidivrs
xchg
adc
lock
imul
stc
nop
or
movsl
cwtl
adc
pop
or
sbb
mov
lret
scas
pop
gs
or
jle
or
dec
dec
dec
in
pusha
pop
adc
das
cmp
leave
ljmp
inc
in
in
in
push
mov
sub
push
adc
daa
mov
jecxz
pusha
ds
daa
mov
out
adc
ret
pop
jecxz
push
rclb
outsl
and
and
into
arpl
imul
cld
jbe
das
push
fistpl
xor
push
daa
aad
or
jmp
jbe
int3
add
pop
mov
jmp
btr
out
dec
bound
in
outsl
stos
dec
jmp
mov
cmp
jg
cmp
lods
fidivs
push
xor
sbb
fcmovne
xor
fs
fwait
repz
sub
adc
popf
adc
insl
push
mov
pop
jnp
push
jne
and
mov
mov
es
scas
dec
mov
loop
mov
xchg
les
test
jnp
mov
jno
adc
aas
inc
dec
pop
inc
push
sbb
mov
jecxz
sbb
je
push
cli
rol
daa
mov
inc
mov
mov
dec
divl
xor
fidivrs
test
clc
fsubp
outsl
sbb
mov
mov
sub
stos
mov
insb
loopne
movsl
or
dec
imul
lods
xchg
jo
adc
repnz
xchg
testb
xchg
cmpsb
add
add
mov
insl
adc
call
rclb
mov
xor
dec
in
ds
mov
cld
push
test
cmp
mov
xor
pop
fsub
pop
push
xchg
xchg
cltd
pop
cmp
cmc
insl
jo
test
stos
or
fldt
loopne
adc
std
xchg
sbb
js
movsl
shlb
int3
stos
push
int3
test
out
inc
mov
mov
stos
mov
cltd
rcll
push
loopne
decb
push
or
push
dec
dec
repnz
mov
push
test
push
les
mov
stos
cmp
jb
mov
pop
adc
xchg
xchg
adcb
lods
insb
xchg
push
pop
xchg
popf
out
jnp
insl
pop
clc
pop
bound
lret
sbb
sub
ret
insb
jns
push
fbstp
in
add
fildl
es
fisubrl
sub
arpl
mov
sbb
inc
movsl
inc
arpl
div
int
in
inc
mov
mov
cmp
out
aas
lods
sahf
xor
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
lcall
std
insb
addl
sbb
mov
jb
in
xor
dec
jle
ret
jecxz
gs
pop
insb
adc
mov
cli
sub
and
dec
negb
pusha
cltd
and
add
sbb
adc
pop
incb
loopne
iret
jmp
mov
cmp
sub
repnz
in
insl
pop
test
sarb
or
mov
push
push
aas
imul
aas
movsl
int
aam
dec
hlt
xchg
outsl
add
data16
outsb
pushf
sbb
and
add
mov
sar
scas
mov
mov
adc
inc
or
fimull
dec
and
rcrb
xor
or
dec
sbb
cwtl
and
pushf
in
and
and
cmp
xchg
je
fs
push
xchg
adc
dec
push
xor
mov
mov
out
push
push
int
aad
rorb
and
add
xchg
pop
sahf
pop
xlat
inc
sub
and
fdivs
xchg
or
icebp
xlat
or
sbb
sub
dec
and
rol
push
stc
jae
ja
and
mov
jle
mov
inc
push
and
pop
leave
icebp
mov
arpl
shll
dec
notb
leave
sahf
sbb
mov
rorl
test
and
pushf
cmp
faddl
jbe
outsb
mov
mov
cmp
nop
insl
or
aam
cltd
sub
push
inc
xor
push
pop
dec
fsubrs
sub
jmp
and
add
add
scas
test
cli
pop
rclb
and
nop
bound
icebp
mov
pop
dec
dec
jmp
sbb
xchg
fwait
loope
in
xchg
xchg
pop
repnz
xchg
in
push
xor
and
inc
add
inc
dec
fs
pushf
icebp
dec
jmp
push
add
xchg
sub
jnp
adc
push
mov
je
cmpsb
xor
sbb
mov
xchg
and
sub
or
cli
adc
push
fwait
int
mov
and
cmpsb
push
xchg
xchg
lcall
xchg
sub
adc
and
js
idivl
scas
xchg
cmp
in
mov
pop
shr
inc
cmpsl
leave
stos
inc
jle
inc
dec
mov
cmp
jo
inc
iret
xchg
xchg
jb
dec
leave
push
xchg
mov
enter
dec
in
dec
inc
mov
movsl
adc
mov
dec
mov
stos
rorb
in
in
mov
push
fwait
loopne
call
shlb
out
fisubs
xor
mov
ljmp
out
add
cmp
hlt
arpl
and
call
stc
mov
enter
ljmp
xchg
lock
pop
rcll
aaa
shrl
sbb
cs
cmp
sub
pop
fdivp
mov
shll
mov
lds
pop
in
add
pusha
jns
pusha
test
aam
cli
cmc
push
jno
sti
adc
adc
lods
sub
inc
out
sub
push
sbb
cmp
fcoms
adc
in
push
out
inc
loopne
mov
js
or
ret
adc
and
roll
jl
and
rclb
mov
push
mov
bound
sub
fcmovnb
fwait
test
xchg
and
jno
lret
pushf
mov
les
sahf
mov
push
jbe
push
dec
mov
rcrb
nop
mov
pusha
jle
cltd
cltd
cmovne
sti
pop
mov
mov
jmp
loopne
push
inc
in
gs
fldenv
hlt
xchg
cmc
xchg
mov
aam
stos
push
movl
aam
ja
sbb
lds
sub
cmp
mov
sbb
test
in
hlt
out
outsl
dec
add
lock
adc
mov
xor
mov
xor
dec
cmp
loopne
dec
js
inc
add
fisubs
push
xor
sub
adc
aaa
pop
add
fldenv
adc
or
in
dec
daa
or
fwait
or
or
stc
cmc
mov
and
int3
notl
aaa
xchg
inc
loope
jne
push
dec
sub
les
orb
int
adc
dec
ret
hlt
cs
cmpsb
mov
inc
cmp
push
pop
jl
adc
and
pop
push
fmul
in
push
cmp
xchg
pop
add
xor
lods
sub
pop
lods
int3
cltd
ss
pop
mov
xor
xor
test
test
add
cmp
cmc
pop
div
rcrb
gs
insb
xor
cld
pop
in
pop
arpl
jg
sahf
lds
repnz
stos
cmp
mov
sub
lods
xor
and
lods
fstps
push
pop
aad
cmpsl
icebp
enter
push
add
add
mov
stos
inc
pop
mov
pop
lret
xchg
test
into
xchg
sbb
jne
adc
in
jo
test
push
add
cmp
outsl
clc
pop
bnd
mov
sbb
inc
mov
xchg
outsb
or
mull
mov
xchg
outsb
xchg
jne
mulb
addb
in
mov
std
mov
sahf
mov
aad
enter
lods
push
push
and
test
jno
xor
bnd
test
inc
cmpsl
xchg
mov
push
imul
fucom
outsb
lock
cli
js
imul
lods
out
jg
or
inc
int3
xchg
aam
push
cmp
stos
push
mov
push
f2xm1
pusha
or
mov
jbe
mov
js
push
sbb
sbb
jle
adc
fwait
push
mov
ficompl
mov
add
lret
lods
pop
inc
shll
mov
insb
adc
aaa
jl
mov
lcall
or
outsl
pusha
popl
push
cmc
cmp
mov
cmp
data16
sub
loope
sub
loop
xchg
sbb
sbb
leave
cmpsb
movsb
jno
jo
xor
fwait
push
inc
or
cs
in
ja
pop
jle
push
push
sbbl
es
cmpsb
sub
cmpsl
movsb
jb
xor
mov
sub
sub
sbb
and
sbb
or
or
iret
dec
aaa
fs
mov
mov
repz
js
les
add
push
xor
xchg
out
hlt
loopne
outsl
jmp
xor
out
outsl
scas
adc
negb
outsb
push
dec
std
lcall
out
jae
xor
mov
outsl
movsb
mov
push
addr16
jle
mov
arpl
movsl
inc
sbb
sub
hlt
test
and
popa
test
js
cld
and
xor
push
ja
loopne
mov
xor
push
cmpsb
mov
mov
adc
ret
stos
xor
pop
adc
mov
adc
cld
test
fisubrs
dec
lds
dec
xchg
mov
mov
fadds
das
inc
inc
das
std
test
pushl
les
mov
jno
flds
xchg
pop
popf
lock
movl
icebp
sbb
mov
fxam
push
push
hlt
or
cmp
inc
les
mov
or
fldl
cs
stc
xchg
sub
push
push
inc
movsb
pop
imull
mov
sbb
mov
pop
adc
cld
jnp
adc
loope
in
testl
add
lahf
arpl
add
pop
dec
jae
rol
push
and
shlb
push
loop
inc
xchg
push
lret
cmc
push
ja
jae
ss
cmpsl
xor
mov
push
add
xlat
sbb
mov
and
cmp
xchg
pusha
push
xchg
and
lea
loop
xchg
push
adc
notl
orb
mov
inc
jmp
pop
movl
adc
out
divl
jnp
inc
xchg
adc
cld
pop
push
push
jp
test
or
or
mov
sub
ja
jno
push
enter
gs
gs
aad
cli
loopne
cmp
fwait
lcall
pop
notl
dec
out
int
pop
shrl
cmp
xchg
ljmp
loope
in
jne
cld
pusha
add
movsl
loop
pop
mov
pcmpeqw
jns
bound
cmpsl
mov
jbe
out
inc
loop
fdivrl
jle
push
jno
xchg
inc
gs
pushf
outsb
insb
hlt
fxch
shll
fnstcw
push
adc
and
mov
into
add
jg
jp
pop
mov
mov
xchg
push
and
sub
std
stc
sbb
jg
ja
mov
jns
inc
sbb
mov
sarl
or
xor
testl
jge
push
dec
sub
jecxz
jg
push
dec
push
mov
cmp
sbb
dec
imul
push
mov
mov
scas
adc
cli
or
mov
xchg
pop
scas
js
addr16
aad
fisttpl
js
and
mov
hlt
mov
push
jle
dec
lahf
pop
mov
movsb
lahf
push
int3
pop
insl
adc
adc
xor
and
inc
mov
iret
loopne
xor
cli
mov
into
jo
lods
mov
mov
sbb
stos
mov
add
sbb
lods
scas
stc
mov
jne
cmc
add
jno
cltd
jg
jae
fidivrl
push
pop
enter
pop
sub
lret
sbb
xchg
iret
or
dec
jmp
loop
pop
mov
inc
repz
movsb
gs
js
daa
sbb
ljmp
fstl
js
xor
add
loopne
jge
xchg
jns
adc
dec
cs
shlb
cmp
ret
xor
and
in
xor
add
imul
iret
push
jmp
aam
add
jg
jbe
and
fcmovnb
or
test
aas
into
xor
sbb
fsubs
xlat
mov
mov
hlt
out
cmpsb
jg
dec
test
out
jp
pop
lret
popf
sbb
js
and
fsubl
push
arpl
inc
vcvtsi2sdl
mov
jp
out
xchg
out
outsl
xchg
jo
pop
push
jae
xchg
test
sbb
mov
push
push
jne
shl
not
push
jge
pop
and
pop
jle
adc
lret
movsl
ja
orl
jo
imul
dec
sub
cmp
daa
xchg
leave
dec
mov
pop
adc
mov
adc
sub
jmp
movsb
inc
dec
mov
push
push
or
fisubrl
mov
hlt
jge
lods
lcall
sub
cltd
ss
adc
divb
xor
sbb
cmp
js
jge
stos
pop
not
fidivs
int3
mov
xchg
lock
jecxz
imul
mov
ror
sarb
push
sbb
in
sbb
sub
jp
out
push
adc
jmp
cwtl
outsb
jbe
sub
rorb
cmp
sbb
and
loope
push
mov
xchg
push
iret
movsb
and
dec
xor
push
and
and
pop
addr16
add
inc
push
mov
mov
mov
or
addr16
jo
push
mov
shl
push
mov
subl
add
xchg
arpl
mov
mov
popa
aas
in
adcl
stos
jge
mov
cmp
cmp
js
or
into
loop
mov
lods
test
mov
in
add
pop
cmp
xorb
inc
shr
adc
xchg
mov
insb
arpl
lret
sbb
hlt
fistpll
xor
clc
daa
fstl
xacquire
push
cmp
mov
enter
or
pop
jmp
pop
jno
fstpl
add
fwait
into
xlat
sbb
dec
mov
sahf
sarb
mov
imul
outsb
std
xor
popf
mov
sub
or
into
outsl
mov
mov
das
les
dec
mov
shrb
sub
fs
push
xchg
push
mov
jo
cmp
mov
push
adcl
mov
mov
sbb
sub
xchg
ret
push
inc
outsb
test
out
sub
sahf
mov
push
xor
jb
data16
cmc
lds
shlb
insl
push
jle
aas
bound
in
lock
pop
aas
pop
inc
and
rcll
test
out
jmp
mov
xchg
add
cld
sub
pop
mov
arpl
sbb
test
int
enter
mov
lahf
cltd
adc
jl
push
or
adc
adc
in
aam
je
jnp
pop
lret
scas
jge
push
xchg
dec
frstor
sbb
lods
pop
mov
cmp
lock
jae
mov
xor
jecxz
and
mov
out
fiadds
jge
jb
scas
sahf
fmulp
out
pop
dec
add
or
je
dec
jo
sti
aaa
shl
das
mulb
call
jb
pusha
and
or
addl
rorl
mov
pop
or
dec
out
ret
dec
cltd
shlb
xor
dec
hlt
stos
fs
xchg
cmpsl
add
mov
outsb
add
add
cli
test
lret
pusha
and
cmp
push
bound
iret
shl
fists
in
cmp
ja
adc
stos
andb
adc
ret
cmp
into
lds
icebp
mov
lods
lcall
jle
scas
lahf
fldl
pop
cmpsl
or
test
jle
xlat
sti
test
test
outsl
sub
cmp
outsb
xchg
mov
lods
aas
fsubrl
and
and
jne
mov
lods
test
rorl
addr16
pop
lods
cli
stc
popf
or
negl
mov
jns
jp
xor
sub
cli
pop
mov
insb
in
cli
fwait
mov
xor
into
adc
pushf
lret
push
lds
movsb
lds
mov
jne
movsl
sahf
pop
pop
lret
rorl
arpl
and
or
test
imul
cld
push
in
mov
out
hlt
cld
mov
loope
sbb
cltd
sbb
sti
lods
inc
insl
js
imul
xlat
push
mov
cmp
int
lea
rcrl
movsl
lret
sub
ret
xor
je
cmpsb
xchg
push
lods
popa
or
lock
sub
inc
adc
lods
xchg
mov
xchg
mov
fs
ds
cmp
mov
idivb
mov
popf
sub
lock
ljmp
mov
in
packuswb
push
xchg
rcr
mov
and
popf
mov
or
shlb
rcrl
into
mov
jns
mov
inc
imul
sub
mov
xchg
fwait
adc
inc
cmp
into
dec
pop
scas
xchg
push
push
xor
add
repnz
rcl
xchg
movsl
call
lods
lods
add
jo
fwait
xchg
cmp
mov
push
xor
pop
rcrl
push
cmc
inc
mov
pop
mov
lods
cmp
add
ja
addl
mov
mov
jbe
dec
mov
mov
sub
test
scas
xchg
sbb
inc
jne
pushf
jne
jbe
jns
loop
xchg
insb
fcomps
popf
rolb
cld
add
idiv
sub
imul
mov
adc
sub
je
repz
adc
and
and
jge
pop
push
aad
in
jl
or
into
inc
mov
dec
push
pop
mov
mov
ss
xor
fisubs
sti
add
sbb
mov
adc
rol
movsb
jb
subb
and
mov
imul
int
sub
lds
push
stos
fdivrl
adc
mov
mov
ss
inc
out
ror
mov
dec
das
ror
pop
leave
cmpsb
sub
jl
test
add
jge
in
inc
fisubrl
stos
loop
dec
sub
xlat
mov
dec
pop
dec
addl
in
adc
addr16
sbb
sub
xchg
fmul
lds
outsb
adc
mov
test
pop
ret
xchg
int
cmpsb
adc
and
mov
int
mov
add
sub
or
test
div
cmpl
xchg
xchg
inc
mov
or
or
test
arpl
xchg
jne
inc
sub
std
jne
or
xchg
push
cli
mov
pusha
mov
cmc
cld
rcrl
loope
lfs
mov
jne
xchg
jb
ret
out
add
in
pop
sbbb
mov
push
in
mov
or
jne
ljmp
jne
lods
jg
enter
xchg
cmpsb
mov
popa
dec
xchg
iret
test
adc
sbb
shlb
popa
mov
mov
adc
jbe
inc
rcrb
lock
arpl
repnz
pop
clc
adc
xchg
or
xchg
adc
mov
std
inc
jae
test
stos
inc
stc
sbb
in
out
mov
stos
imul
sbb
sub
jecxz
mov
stos
fsubrs
mov
sahf
mov
sbb
jecxz
in
mov
dec
xor
insl
jp
and
repnz
xchg
loope
cmp
out
pop
xor
sbb
and
aam
sahf
jmp
push
push
mov
je
sbb
jno
lds
mov
stc
cmp
mov
cmpsb
sbb
aad
sub
jl
rcl
ja
lea
push
movsl
lahf
stos
mov
scas
idiv
inc
or
in
jecxz
clc
data16
je
and
mov
lea
in
cltd
aas
mov
scas
out
sub
fwait
mov
jl
loope
pop
dec
adc
les
xor
inc
test
adc
jp
aas
dec
dec
push
cmp
or
push
cmp
mov
int3
cltd
xor
inc
test
pop
pop
xor
sbb
in
outsb
ds
pop
sub
jae
jmp
mov
mov
into
jno
ljmp
into
jmp
ljmp
xchg
fucom
leave
aas
fwait
add
sub
xor
cs
aam
sbb
ja
adcb
out
inc
push
pop
ret
rorb
test
aam
jb
adc
xchg
leave
stos
cmpsb
repz
iret
fdivr
sub
pop
push
xor
add
jl
inc
pop
rorl
adc
mov
inc
rolb
mov
aas
ljmp
dec
sbb
mov
repz
cmc
adc
xchg
popa
in
and
sub
jmp
or
add
adc
xchg
shll
pop
outsb
hlt
push
or
xchg
cmp
jle
pop
das
into
cmp
xor
sahf
rorl
cs
push
dec
insb
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
int3
cmp
dec
add
add
add
add
add
add
pop
add
lock
add
add
add
push
push
inc
push
mov
clc
enter
mov
add
sti
add
add
inc
cmp
jae
inc
imul
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
