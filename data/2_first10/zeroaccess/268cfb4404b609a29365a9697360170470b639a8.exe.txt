push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
push
cmp
jne
bound
leave
out
scas
adc
in
fwait
lcall
fs
mov
lret
adc
push
ret
add
ljmp
out
mov
sub
inc
xor
xchg
push
jae
fcomps
test
test
test
jmp
stc
flds
out
mov
scas
mov
arpl
div
hlt
fs
add
adc
and
loopne
mov
or
ret
pusha
jmp
push
divb
shrl
mov
inc
dec
fwait
daa
jmp
js
insl
fwait
aas
mov
ffree
sub
sub
ds
clc
movsb
fidivrl
ret
fistps
ljmp
and
xchg
cld
fisttpll
cmp
aaa
adcl
push
jb
mov
mov
push
push
push
lahf
test
jo
int
jns
mov
push
pop
insb
xor
add
repz
pop
lods
and
inc
mov
scas
aad
aad
mov
dec
fisttpl
add
scas
in
xchg
xchg
jl
push
rcr
test
fwait
or
push
xorb
xchg
lods
mov
scas
inc
jmp
adc
pop
push
mov
and
mov
inc
ficoms
inc
push
shll
lcall
arpl
arpl
les
mov
sbb
push
test
jmp
in
adc
mov
stos
xchg
mov
push
daa
sub
jge
dec
mulb
pop
jns
pop
cmp
nop
addr16
aaa
sub
adc
sub
push
test
addr16
loop
in
jne
pop
push
mov
fwait
sar
push
sbb
cmpsl
ja
adc
test
pusha
repnz
dec
lret
mov
sbb
push
cmp
mov
into
lods
in
call
out
jp
adc
sub
sbb
rclb
aam
mov
js
cmp
stos
jb
je
inc
in
jmp
iret
pop
jb
loop
push
dec
jmp
xchg
jno
sub
pop
pop
loop
push
sarl
inc
mov
mov
mov
push
push
mov
js
mov
add
ljmp
mov
push
and
call
ret
in
icebp
sub
arpl
arpl
xchg
mov
sbb
ljmp
int3
push
mov
sti
cmp
pop
test
outsl
loop
or
mov
dec
or
mov
daa
data16
and
cmp
mov
inc
ret
xchg
cmpsl
aas
mov
or
shrd
inc
sbb
cmp
leave
cs
mov
gs
repz
lods
dec
iret
pop
add
stos
xchg
hlt
adc
fs
je
lcall
mov
cmp
stos
fbstp
or
jle
sbbl
ljmp
inc
in
jns
cmp
in
sub
lret
adc
arpl
outsl
jmp
pusha
cli
mov
adc
xor
je
loope
iret
push
pop
pop
cmovg
popa
bound
xor
jle
aas
xchg
and
test
fwait
and
lds
mov
lret
xor
and
in
or
incl
inc
sbb
dec
or
daa
out
ds
leave
jbe
add
das
mov
loop
rcrl
mov
jp
aam
jmp
and
movsl
cmp
mov
imulb
sub
aas
shrl
mov
xchg
ds
sub
test
cmp
fisttpl
inc
fadd
pop
sub
shlb
push
andb
mov
int
rcrb
adc
out
mov
jle
push
dec
or
insl
jge
push
push
jb
fmulp
sub
xor
clc
scas
adc
push
mov
in
fnstcw
cwtl
add
mov
and
js
mov
fnstcw
loope
jno
jle
mov
sahf
int3
mov
push
or
mov
xlat
stos
fs
movsb
arpl
sbb
lret
repnz
jb
inc
outsl
push
negl
cmp
sbbl
popf
clc
or
mov
jge
repz
je
sbbb
push
inc
ficompl
aas
sbb
enter
aas
scas
aam
cmpsl
inc
push
xchg
push
lods
push
and
cmp
mov
ds
outsb
push
and
push
lods
or
add
iret
ss
insl
clc
repnz
sarb
inc
call
bound
inc
movsl
xchg
push
loopne
enter
fdivrl
in
add
out
or
aam
jmp
in
pushf
icebp
popa
test
xchg
in
xchg
lahf
stos
and
idiv
mov
mov
out
pop
cmp
mov
xchg
loopne
shll
mov
xchg
mov
pop
xchg
fwait
pop
ja
imul
ret
je
mov
icebp
xchg
and
mov
sub
lds
mov
clc
and
sar
out
xlat
mov
mov
jb
loope
shll
cmp
mov
jnp
repz
icebp
mov
dec
jp
pop
pop
arpl
mov
shl
pop
movb
mov
shll
sbb
icebp
in
dec
add
ja
cmpb
shll
cltd
dec
fistpll
jmp
fwait
lret
mov
iret
or
xabort
mov
ret
aas
es
xor
push
dec
lock
in
in
movsl
js
inc
lods
stc
inc
jecxz
mov
lods
aaa
int3
jb
inc
push
scas
sbb
repz
jno
mov
pop
sub
lods
add
inc
jnp
faddl
loop
movsb
xor
sbb
arpl
pop
mov
out
push
dec
sub
fnstenv
int
cmpsb
mov
test
pop
xor
loope
mov
jmp
sub
cmpsb
fsubrp
mov
xchg
adc
negl
or
into
call
dec
xchg
mov
dec
add
push
sbb
in
xor
xchg
sub
js
popa
cld
xchg
sub
or
lds
je
mov
sub
mov
lretw
xor
in
in
fldl
cli
adc
adc
pop
xchg
cmp
adc
iret
and
outsl
jbe
mov
add
push
pop
cmc
fwait
jg
sub
and
push
push
adc
xchg
adc
bnd
leave
and
jae
adc
arpl
push
inc
fdivr
stc
orl
lods
es
sbb
lret
enter
mov
xchg
xchg
sub
loop
subb
into
cmp
or
test
cmpxchg
xchg
les
out
pop
ds
or
dec
push
xchg
xchg
xor
dec
or
lods
mov
stos
dec
mov
rorb
jle
lcall
out
cmp
jno
sti
movsb
jo
pusha
push
enter
xchg
hlt
inc
jo
dec
mov
and
inc
stc
pop
xor
movsl
adc
inc
sbb
stos
out
jle
aad
xor
popa
pop
iret
dec
push
inc
sbb
dec
inc
in
mov
mov
das
clc
jge
in
push
mov
enter
aaa
mov
inc
scas
pop
out
mov
mov
cmp
pusha
cmp
dec
jb
pop
in
push
stos
xchg
adc
xchg
push
xchg
imul
clc
jecxz
adc
hlt
into
inc
sbbb
cmp
test
push
das
imul
cmp
daa
xor
push
mov
stc
xchg
xor
out
adc
cmpsb
vmovddup
mov
outsl
jne
jbe
imul
jbe
out
sub
in
inc
jp
and
jecxz
pushf
xor
enter
mov
cmp
cs
mov
add
cltd
add
push
stos
nop
ja
mov
push
rcrb
scas
mov
nop
pop
pop
mov
pop
negl
lds
mul
jb
mov
jb
shrb
into
lods
js
jno
repnz
push
mov
sahf
imul
jns
cwtl
jne
mov
jmp
xchg
mov
test
or
mov
cmp
mov
mov
jns
jmp
xor
lds
clc
in
cmp
popf
add
push
mov
inc
fisubl
gs
or
sub
rcll
subb
insb
push
std
mov
push
mov
sub
jecxz
xchg
push
ret
xor
iret
sub
outsb
pop
mov
jl
pushf
or
stc
xchg
cld
lcall
adc
jg
xorb
js
and
ss
rcrb
es
ds
xor
aam
jg
leave
xchg
xlat
sbb
cmp
push
outsb
pop
fs
xor
pusha
daa
and
push
sub
shrb
push
cmpsl
dec
add
jg
push
sub
fisttps
push
out
jge
inc
repz
pop
or
pop
mov
cmp
pop
out
add
lahf
call
xor
adc
add
xor
xor
dec
test
cmp
dec
arpl
and
aas
imul
pusha
test
dec
dec
loop
and
shlb
adc
mov
getsec
dec
xchg
sub
sub
sub
or
sub
jnp
xchg
outsb
inc
xor
insb
cs
pop
sti
sbb
daa
add
loopne
xlat
dec
outsl
out
ss
pop
push
sbb
mov
jg
movsb
pop
sbb
ds
jmp
ss
pop
sub
add
in
ja
xor
shll
push
loopne
jo
fnstsw
in
incb
dec
lahf
sbb
mov
out
scas
pop
neg
orl
xchg
sub
mov
mov
cmp
and
mov
loop
sahf
sbb
adc
sub
fistpll
add
push
orl
lods
pusha
notb
pop
dec
int
in
sbb
and
adc
loopne
mov
rcrl
ja
out
jle
ds
cld
add
sbb
push
ja
pop
test
notb
outsw
lret
loop
fsubl
cmpb
mov
mov
jbe
sbb
aas
push
adc
dec
jp
pop
fimuls
clc
pop
or
mov
je
out
sahf
sbb
mov
into
xlat
pushf
cmp
mov
xor
xor
addb
adc
popa
mov
dec
mov
xor
scas
iret
fwait
add
mov
inc
mov
ljmp
or
mov
push
fsubp
enter
xlat
mov
inc
mov
mov
sbb
fmul
mov
mov
popf
sub
daa
ljmp
fsubs
mov
cltd
lea
jg
jmp
fistl
jae
mov
outsl
sub
movq
dec
cmp
pop
test
scas
icebp
sbb
scas
ljmp
stos
popa
mov
aaa
pop
icebp
inc
test
adc
push
sub
pop
sub
jno
cmpsl
addr16
dec
mov
push
push
pop
xchg
mov
lods
jge
fdivs
mov
sbb
jne
ja
stos
scas
cmp
lcall
jle
ds
movl
jp
addr16
lods
xchg
xor
sbb
out
addr16
cli
roll
addl
in
xor
add
mov
and
mov
mov
cltd
dec
ja
and
in
sti
sti
sub
or
xor
mov
jp
push
cmpsl
jo
sub
push
mov
out
hlt
imul
pop
cmp
gs
xchg
mov
inc
push
jge
ljmp
rcrl
decb
or
lahf
cli
sub
mov
imul
lds
ret
out
pop
andl
test
inc
jns
ja
nop
adc
aam
pop
jl
sub
add
stos
ret
push
mov
adc
adc
pop
rcrb
enter
rolb
sbb
cmp
mov
mov
sub
in
icebp
pop
inc
lods
push
and
inc
jl
xor
xchg
ss
mov
or
les
pop
mov
push
out
dec
inc
fdivl
sbb
sbb
sub
adc
mov
iret
mov
aas
mov
mov
leave
je
push
pop
cli
push
gs
xchg
mov
std
add
sub
fisubrl
je
ret
xor
inc
out
cmp
mov
mull
xchg
mov
clc
js
push
xor
repz
fwait
outsb
mov
sub
sahf
cmp
jnp
leave
lcall
push
pop
sub
rorb
rorl
dec
mov
mov
add
idivb
popf
daa
repz
mov
cmp
dec
cmc
mov
test
cmc
in
mov
cld
loope
sbb
dec
mov
lea
mov
dec
call
arpl
rcrb
adc
jb
jg
cmpb
push
cltd
movsb
mov
bound
test
adc
pusha
outsl
jne
pushf
push
nop
ja
cmp
mov
jge,pn
inc
aad
sub
xchg
ret
scas
aaa
sahf
sub
test
repz
jg
fdivs
push
lods
call
es
out
sahf
idivl
aam
cmc
and
dec
inc
xor
jns
add
imul
mov
dec
aaa
jns
movsl
xchg
xchg
xor
dec
fcoms
leave
mov
insb
pop
inc
shlb
adc
hlt
jne
pushf
jae
or
cs
xchg
out
dec
adc
sbb
cld
daa
movsl
add
cmp
loope
jmp
dec
test
add
outsl
leave
outsb
pop
je
adc
shl
jb
test
pop
add
add
ds
mov
xorl
mul
inc
clc
cmp
xor
imull
lods
in
dec
and
push
jb
fsubrs
ja
jbe
jae
push
dec
stc
mov
sahf
cmp
xchg
ja
movsl
popa
and
mov
sub
fldt
les
add
test
jg
lods
dec
filds
jle
cli
aas
in
xor
add
shr
out
pop
or
xor
in
add
andb
faddp
jg
mov
jmp
xlat
mov
mov
outsl
adc
or
jecxz
push
pop
outsl
jle
repnz
push
js
out
sub
sbb
jbe
and
mov
dec
inc
pop
mov
mov
add
pop
inc
fbld
jecxz
xor
fsubr
ss
int
lods
in
mov
dec
and
fxch
lea
lcall
stc
fidivrs
jbe
fdivs
xchg
inc
push
push
cmpsl
ret
xchg
adc
dec
insb
leave
sub
clc
scas
mov
popf
jne
xchg
lods
jp
adc
lea
xchg
sub
cmp
jbe
or
xor
ficoml
mov
pop
enter
pop
dec
and
xlat
mov
push
mov
out
push
push
idivl
adc
cmc
fildl
xor
scas
shl
int3
shlb
loop
mov
mov
int3
test
jge
sbb
test
bound
push
xchg
out
mov
and
insl
mov
cld
mov
out
jge
mov
dec
loop
sub
daa
rorl
or
jecxz
dec
xchg
add
out
push
mov
mov
lock
inc
jmp
adc
mov
pop
mov
mov
outsl
sbb
mov
ljmp
sub
xchg
lahf
or
movsl
or
imul
cmpsb
insb
xor
popf
fadds
jl
mov
stc
mov
enter
push
not
sub
negb
in
cmp
hlt
sub
xchg
mov
sbb
sti
fstpl
test
cmp
jg
popf
xchg
xor
out
lock
pusha
out
xor
test
sub
ror
lahf
jnp
xchg
mov
adc
notl
in
adc
cmp
xchg
pop
sahf
push
and
cmp
pop
xchg
fldl
jbe
divb
xor
push
add
sub
lods
nop
and
push
outsb
icebp
ja
dec
mov
popa
mov
pop
and
jo
enter
jmp
sti
scas
mov
or
fbstp
sti
test
shrl
cli
fs
sbb
jle
mov
int3
xchg
clc
add
push
or
cmpsb
gs
nop
pop
mov
sbb
add
test
repnz
cmpsb
ljmp
or
int3
sub
in
insb
stc
dec
inc
jnp
or
xchg
jl
es
xchg
or
xchg
fidivrl
jne
add
mov
xchg
stos
jbe
push
ss
jbe
pushf
insb
imul
dec
dec
stc
xor
in
gs
mov
sub
nop
filds
fwait
imul
jne
or
add
insl
xor
pop
adc
sub
inc
imul
mov
out
rcrb
sbbl
scas
jne
push
outsb
jae
jo
out
fmul
adc
lcall
dec
mov
jg
jmp
add
call
push
inc
rcll
je
mov
dec
cld
adc
out
enter
dec
adc
xchg
jns
adc
xor
call
out
mov
inc
adc
jb
sahf
sar
mov
repz
pmaxsw
test
jle
mov
sbb
xchg
cmp
xor
cmp
stc
and
push
lret
push
push
pop
into
push
mov
add
cltd
test
pminub
test
ret
push
inc
ss
adc
cs
mov
js
ret
dec
shrb
inc
pop
dec
mov
pop
pop
and
dec
scas
xchg
sub
jecxz
icebp
fisttpll
sub
jg
inc
add
sub
jge
sub
movntq
out
out
dec
pop
and
iret
push
dec
divl
outsl
sbb
pop
jmp
xchg
and
xor
jbe
pop
stos
cltd
ljmp
stos
dec
xchg
sub
push
stc
mov
xchg
imul
and
adc
dec
int3
dec
fstps
jnp
or
loopne
dec
or
lret
mov
imul
jbe
mov
xlat
das
mov
cmp
cmc
mov
lea
sbb
mull
cmpsb
dec
inc
icebp
sahf
adc
sbb
cmp
sub
lcall
jnp
lret
pop
rorl
mov
jnp
cmp
cmpsl
jne
in
sahf
xor
mov
pusha
jecxz
push
or
ljmp
addr16
sbb
pop
jnp
repnz
or
xchg
loopne
movsb
xor
lret
xchg
push
pop
decb
lcall
popf
addr16
lods
mov
sub
cli
inc
out
push
in
arpl
jmp
sbbb
pop
dec
ds
scas
mov
mov
mov
add
push
inc
scas
xchg
movsb
test
ljmp
leave
bound
mov
inc
jne
cld
aas
scas
xchg
adc
or
cmpsb
test
insb
jno
xchg
shlb
test
xchg
stos
sbb
xchg
imul
adc
std
sbb
cmovp
add
aas
jl
adc
aad
cmp
and
inc
ja
jg
pop
into
and
dec
xlat
lret
sub
inc
jp
shll
mov
call
imul
cmp
adcl
outsb
out
jnp
leave
je
xor
mov
cld
ret
push
das
add
push
cmp
das
jle
fidivl
xchg
add
or
push
cmpb
pop
and
jmp
stc
cmpsb
or
arpl
test
mov
jmp
push
cmpsl
pop
icebp
mov
ffree
mov
and
or
loopne
aas
filds
cmp
sub
jne
dec
outsl
arpl
sub
lods
and
je
aas
mov
mov
push
outsl
sub
daa
dec
sub
sti
inc
sub
insl
mov
repnz
adc
sub
mov
inc
pop
mov
loopne
mov
arpl
lods
popf
or
mov
loope
or
push
es
sbb
fimull
adc
shrl
cmp
scas
dec
dec
in
cs
xor
pop
sbb
xchg
dec
lods
sub
dec
lds
push
jg
shlb
lret
pusha
pop
es
mov
mov
fcomps
lock
sbb
push
xor
push
add
fisubs
jp
in
adc
push
jge
mov
push
cwtl
cwtl
jp
pop
shll
lock
xchg
xchg
jle
mov
mov
fisttpll
cmp
fs
mov
stc
clc
mov
ret
inc
int
and
dec
dec
inc
or
inc
mov
xchg
pop
decl
sbb
inc
dec
fwait
mov
fwait
and
rcll
outsb
stos
ret
shlb
mov
lret
or
inc
dec
rolb
inc
pop
adc
xor
fiadds
scas
mov
inc
leave
mov
je
fadds
xlat
push
cmp
pop
or
loopne
out
rorl
insb
out
sbb
test
xchg
ret
mov
mov
lret
sbb
push
or
mov
mov
rcrl
shl
sbb
jns
xor
mov
push
push
and
fs
or
call
fistps
sahf
out
scas
add
cmpsb
in
sbb
lahf
bound
or
adc
xor
sti
or
push
cs
jmp
or
lock
xchg
pop
jmp
pop
pop
sub
mov
rcl
dec
lock
adc
adc
xor
out
je
test
mov
or
pop
pop
jge
jb
sbb
call
out
sarb
add
das
jg
mov
xor
loop
gs
test
cmpsl
add
scas
test
mov
pushf
add
or
or
cmp
ljmp
call
cmpsl
icebp
int
pop
and
cmp
rorl
test
cs
imulb
jge
sarb
mov
fstpl
stos
adc
dec
mov
inc
ds
mov
fiaddl
lods
fs
sub
sbb
dec
push
jle
adc
jmp
iret
imul
jnp
std
sub
mov
fbld
pop
add
inc
push
mov
pop
shlb
loop
push
test
mov
add
xchg
push
outsb
and
je
xchg
test
xorb
hlt
in
pop
scas
xchg
add
aas
ja
mov
xchg
hlt
addb
testl
mov
fidivrs
mov
cld
movsl
ljmp
lea
mov
ds
repnz
dec
sahf
cmp
test
xor
rol
xchg
test
in
pop
lahf
xchg
pop
adc
mov
jge
flds
int
jbe
loop
mov
mov
movsl
cmp
cmc
sub
imul
dec
icebp
inc
adc
sub
sub
or
dec
aaa
stos
adc
push
test
lcall
jge
jl
pop
mov
mov
orb
xor
xor
pop
and
in
sbb
inc
ds
test
sbb
push
add
jmp
loope
mov
xchg
xor
stc
and
inc
adc
out
popa
cmp
xor
movsb
stc
lods
ret
sub
xchg
cmp
xor
pop
ds
mov
incb
ficoms
inc
andb
sbb
mov
push
out
jecxz
adc
push
or
sub
hlt
adc
das
fisttps
xchg
sub
or
test
std
xchg
jmp
addr16
cmp
lret
and
in
sbb
dec
pop
hlt
and
lret
adc
push
sub
push
mov
sbb
out
mov
mov
das
mov
fwait
std
popa
lahf
pop
pushf
dec
icebp
loopne
dec
push
loop
lods
les
out
leave
cmc
add
adc
out
ss
push
in
pop
repnz
adcl
xchg
adc
mov
xchg
xchg
mov
or
fdivrl
in
jb
bound
add
push
xor
xchg
cmp
int
or
in
jne
mov
in
jmp
lret
in
add
dec
loope
fists
enter
inc
jb
aam
leave
xchg
cs
test
jge
aad
sbbb
push
push
fsubr
xchg
inc
sub
rcll
pusha
fimull
ret
adc
mov
outsb
xchg
notl
pop
xor
mov
mov
sub
shll
iret
xlat
lahf
add
mov
stc
shlb
sbb
in
mov
orb
xchg
cmpsb
fstpl
cmp
xchg
adc
inc
push
sub
xchg
jno
pop
gs
jae
xchg
fs
xchg
addb
or
fldcw
xchg
mov
push
cmp
or
loopne
ja
mov
pop
xor
adc
addr16
lret
ds
imul
or
es
mov
mov
les
or
fcoml
inc
imul
out
sarl
xor
ds
adc
std
or
mov
sub
and
dec
mov
test
cmp
sub
mov
aaa
sub
leave
fsubrs
xchg
addr16
sub
orb
sub
xor
mov
test
mov
mov
cmpsb
das
push
xchg
xchg
sahf
adc
out
sti
jns
shrb
push
pop
mov
jo
xor
scas
sbb
inc
lcall
adc
loop
fst
add
pop
sbb
arpl
cmpsb
pop
pop
mov
rol
mov
movsb
or
push
inc
pop
push
aad
push
lret
adc
jae
lret
shlb
scas
xchg
rcrb
sti
adc
bound
sub
sarb
pop
cltd
xor
mov
add
sbb
jno
adc
test
inc
popa
iret
shll
inc
pop
nop
std
inc
ja
insl
and
push
lret
sub
insl
and
adc
in
inc
jae
inc
sub
xchg
arpl
push
mov
cld
aam
fwait
xchg
stos
stos
call
stos
sbb
cmpsl
fwait
iret
ja
lret
cmp
push
lret
andb
and
and
push
cmc
xor
notb
push
sbb
roll
aaa
fsubl
mov
or
ffree
aad
cmp
sbb
push
gs
out
xchg
aas
adc
sbb
pop
jno
iret
push
or
scas
sbb
jne
or
cmpsb
push
mov
push
xchg
movsb
jne
cmp
xchg
jo
neg
fistpll
fldl
lcall
mov
fs
jno
mov
daa
xor
test
jle
std
pop
xor
jp
push
in
push
pop
xchg
inc
xor
add
jmp
dec
xchg
or
lods
lods
adc
jbe
push
aas
clc
rolb
movsb
fs
cmp
les
mov
add
mov
sahf
mov
sbb
arpl
in
loop
in
test
xor
outsl
pushf
jb
iret
in
ret
jne
jns
mov
mov
icebp
dec
loope
rorb
jg
cmc
push
cmp
movsb
ja
pop
int3
or
lods
xor
sub
int
cmp
mov
out
int
filds
jmp
and
dec
int3
cmpsl
mov
sub
sub
mov
jge
cmp
test
test
xor
add
mov
orl
test
or
inc
or
mov
sub
mov
fdivr
mov
jle
not
inc
xorb
and
pusha
mov
lahf
cmp
adc
mov
lret
stc
stos
adc
cmp
sub
subb
and
sti
pusha
daa
jns
ss
imul
mov
push
inc
xor
sti
and
or
sub
mov
dec
mov
lcall
mov
lcall
test
inc
out
mov
testl
test
inc
clc
daa
push
push
adc
mov
cmp
out
into
xor
push
stos
popf
sub
cmpsl
cmpsb
lahf
sbb
les
repz
jbe
cmp
mov
xchg
ret
in
movnti
add
add
xor
jbe
faddl
mov
fstpt
mov
ss
insl
dec
pusha
test
xor
repnz
jno
adc
xchg
nop
push
aaa
loopne
cmc
inc
fisttpll
pop
or
test
rcrl
jno
out
fidivs
movsb
in
subb
sub
adc
iret
popf
dec
cmp
mov
cmp
cmp
out
imul
push
sub
add
sbb
lret
pop
mov
push
adc
xchg
jb
bound
mov
in
js
test
push
cmp
jmp
xlat
jmp
mov
hlt
outsb
xchg
into
xchg
test
cmpsl
mov
or
pop
mov
imul
in
xor
adc
stos
addr16
into
lcall
xchg
mull
sahf
out
inc
dec
jno
pop
cmp
addl
jmp
adc
add
mov
jp
add
fs
mov
sbb
roll
dec
stc
cmpsl
and
inc
clc
add
cmp
or
loope
andl
cmpl
mov
add
jnp
or
jae
inc
inc
cwtl
ja
rorb
adc
or
xchg
pminsw
aas
mov
mov
push
addr16
sbb
lock
mov
add
fwait
pushf
mov
push
shlb
and
je
push
icebp
lock
ftst
shll
imul
xchg
and
divb
arpl
cltd
pop
add
sbb
insl
pop
arpl
iret
mov
mov
mov
sbb
mov
enter
lcall
push
insb
xlat
shl
ss
fistpl
mov
dec
aas
fcmove
lds
and
mov
dec
jae
mov
stos
ds
fimull
or
mov
add
and
nop
mov
mov
push
jg
incl
mov
cmpsl
sub
inc
xchg
andl
mov
push
inc
inc
sbb
cmp
aad
adc
push
mov
push
inc
xchg
mov
lods
in
dec
cmp
push
mov
push
cs
dec
loop
push
loopne
stos
movsb
call
push
jno
cmp
shlb
jl
in
lds
testb
add
add
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
pop
shl
jl
dec
pop
jl
xor
mov
movsb
xchg
pop
aaa
mov
pop
in
jle
pop
xrelease
test
inc
stos
lcall
test
jnp
push
or
mov
sbb
pop
inc
nop
jle
jo
aam
inc
lret
jo
in
jbe
pop
jmp
fadds
mov
cmovp
stos
and
popf
fwait
push
outsl
push
or
iret
aam
aad
dec
and
in
ss
je
call
jle
insb
pop
jmp
fucomi
sub
jnp
adc
and
inc
and
ret
inc
sub
sub
cmpl
out
int3
data16
push
pop
imul
sub
cmp
out
arpl
mov
mov
movsb
jge
mov
outsb
orl
mov
rolb
je
inc
mov
jno
push
pushl
leave
and
stc
in
fcoms
sub
or
add
fidivl
sbb
sahf
push
out
sbb
popf
mov
add
cwtl
rcl
cli
pushf
stos
sbb
cwtl
fs
in
cmpsl
lock
clc
in
cmp
xchg
insb
mov
daa
pop
and
jmp
add
hlt
push
push
test
jne
adc
mov
inc
mov
mov
sub
sbb
movsl
sti
sub
mov
and
psrad
popf
in
dec
adc
jl
dec
mov
cmpsb
in
test
stos
lret
inc
icebp
fidivl
popa
inc
icebp
adc
loopne
xchg
xorl
or
rorl
or
add
out
and
mov
clc
pop
add
out
push
mov
inc
jle
shl
popf
and
dec
mov
jns
push
push
add
mov
bound
dec
or
inc
jecxz
les
push
adc
ror
leave
lcall
mov
cld
cltd
jmp
scas
pusha
jge
int3
call
push
sbb
test
negl
cs
push
outsb
inc
jae
dec
or
imul
pop
push
mov
mov
push
test
push
mov
loopne
push
sbb
add
mov
mov
lods
sub
dec
pop
mov
mov
aam
dec
sbb
subb
push
test
pop
or
sub
int
lods
dec
pop
ja
gs
rorb
cmp
add
stos
jno
mov
add
sbb
pop
in
pop
cmp
adc
popf
scas
xor
push
ja
sub
push
pop
lods
mov
cmc
outsb
shrb
js
popf
push
daa
push
mov
cwtl
sbb
outsl
add
pop
stc
pop
ss
jmp
mov
push
jno
ret
and
push
jmp
xchg
jns
or
mov
inc
cld
push
or
adc
aas
push
xchg
xchg
and
and
ret
xchg
add
das
jae
pop
insb
cmp
add
push
inc
gs
hlt
inc
data16
loope
xchg
dec
jmp
sub
out
je
rolb
mov
call
or
add
push
add
push
or
leave
mov
jns
daa
insb
dec
jmp
xchg
jp
mov
movsb
xchg
cmpsl
pop
dec
mov
sbb
aam
lret
loope
cwtl
mov
lea
lock
push
mov
mov
jl
dec
fcomps
push
out
popa
xchg
movsl
pusha
fidivl
enter
sub
mov
mov
inc
jne
xchg
das
in
push
xor
and
out
dec
fistps
jbe
loope
test
mov
dec
cmp
mov
inc
lea
cmp
pusha
popf
fisttpll
in
and
cs
jmp
mov
xor
jmp
movsl
jmp
push
hlt
in
adc
inc
mov
add
and
and
dec
pop
xchg
mov
pop
mov
add
in
insl
inc
mov
js
xchg
push
mov
xchg
mov
add
jge
adc
push
pop
mov
iret
test
jle
or
mov
jl
fwait
cli
sti
pop
inc
ret
xchg
xchg
add
int
xchg
jns
test
xor
stos
jae
sarl
popa
stos
mov
xchg
push
cltd
jnp
adc
sbbl
adc
mov
jmp
out
or
pop
mov
in
adc
xchg
mov
inc
sub
ljmp
cld
xchg
mov
fisubs
and
in
mov
loope
xor
sahf
out
inc
dec
in
and
clc
movsb
mov
add
pop
fidivl
insl
pop
push
inc
outsl
lea
out
jnp
mov
push
xor
pop
orl
mov
test
ret
es
cmc
movsl
stos
daa
hlt
imul
out
movsl
xchg
fnstcw
scas
dec
adcl
mov
pop
fstl
call
out
cmp
jl
add
addb
xor
xor
loop
shrb
dec
icebp
das
sub
aad
mov
loop
js
mov
in
loop
lahf
lods
sub
cmp
push
scas
mov
imul
or
sbb
dec
and
sbb
pop
mov
adc
mov
test
xchg
sub
pop
fwait
or
pop
xchg
iret
cmpsl
clc
xor
nop
mov
cli
cmp
cmc
dec
sbb
xor
sbb
std
push
out
rorl
je
mov
fisubrl
in
xchg
lods
inc
sub
mov
jmp
dec
jne
sub
inc
fiaddl
sbb
lods
negl
int3
mov
xchg
cs
push
test
cmpsb
xchg
test
dec
jle
dec
mov
repz
xchg
pusha
popf
push
lret
dec
cmpsl
shll
jg
iret
adc
prefetcht1
mov
insb
dec
movsl
mov
cmpsl
call
dec
fwait
xlat
and
test
movsb
xlat
int3
push
lods
sarl
fmuls
mov
loop
mov
push
inc
dec
and
mov
xlat
push
mov
or
push
outsl
push
popl
xor
xor
cmpb
sbb
xchg
in
fildl
xor
mov
out
lcall
rcrb
fisubrs
cld
xor
cmc
pop
sarb
call
rolb
mov
add
mov
add
test
and
inc
add
jne
mov
js
vmovss
jne
fld
enter
inc
bound
andb
cmp
mov
cwtl
lods
mov
je
add
add
shll
add
and
loop
scas
jo
test
or
aas
fbld
dec
ss
xlat
xlat
cwtl
in
leave
mov
sbb
shlb
fwait
ja
stc
dec
cwtl
mov
pop
push
mov
sub
stc
jne
aad
je
push
xor
int
mov
sarl
addr16
and
pushf
outsl
dec
pop
dec
and
or
fmuls
pop
test
adc
mov
scas
pushf
xchg
push
cmpl
sub
sbb
add
mov
inc
call
push
pop
je
jae
add
xor
push
mov
jbe
jecxz
cli
mov
ljmp
jg
jbe
pushf
sub
jmp
outsl
subl
lods
pop
mov
mov
mov
sub
jbe
jp
or
stc
std
dec
cs
ljmp
jl
pop
mov
call
sbb
ljmp
add
lock
scas
push
mov
ds
xlat
mov
adc
sahf
inc
imul
sub
pushf
add
inc
insl
push
xchg
inc
fldt
clc
push
subb
jns
pop
or
xchg
int
adc
sahf
add
out
lret
xlat
pop
jo
lods
movsl
push
fcmovne
rolb
cwtl
in
adc
icebp
movsl
shrb
out
lds
and
push
ljmp
mov
sub
nop
cmp
jl
add
and
dec
mov
lcall
scas
lods
push
ds
test
sahf
in
mov
and
lret
sub
jns
std
sub
or
cmp
pop
push
fcmovne
aad
imul
cwtl
out
push
ja
test
cmp
int3
sti
rcll
cld
mov
mov
fnstsw
jp
inc
sub
fistl
dec
sti
xor
imul
imul
xlat
test
aaa
xlat
xchg
mov
aas
or
push
aad
pop
cmp
pop
mov
xor
call
xor
std
leave
fisubl
pop
cmp
mov
mov
mov
hlt
push
push
popa
popa
xchg
jp
mov
lret
and
push
in
jp
ljmp
in
xor
shl
jae
push
mov
out
fsubs
out
cmp
mov
pushf
mov
jo
and
jle
xor
mov
ret
jl
fisttpl
leave
inc
clc
movsb
data16
in
or
ror
ljmp
insb
call
ja
faddl
dec
push
pop
xlat
dec
aam
sbb
jns
adc
nop
pop
jnp
sarl
les
mov
mov
inc
push
xchg
xor
daa
pop
arpl
outsb
mov
hlt
insb
movsb
adcb
cwtl
push
jp
and
dec
pop
fscale
jb
pop
pop
and
xchg
test
push
aaa
cmp
daa
xorb
rcl
cs
or
insb
sti
neg
pop
jbe
int3
add
or
fbld
sbbb
push
jae
insb
les
ss
sbb
push
les
in
inc
sbb
push
vsqrtsd
pop
push
mov
mov
scas
push
das
fdivr
sbb
pop
sub
sarl
cmp
cld
lret
insl
daa
sub
icebp
or
cmc
pop
mov
cwtl
lret
push
mov
aas
pcmpeqd
cmc
lock
push
scas
aam
in
xor
xor
ja
daa
mov
inc
mov
lods
push
cld
data16
mov
sbb
cmpsb
andb
addr16
pusha
enter
mov
out
xor
jecxz
push
mov
jecxz
mov
or
xor
cmp
push
aam
add
push
add
fwait
cs
xchg
aaa
movsl
ja
popa
jge
mov
mov
roll
in
xorb
pop
and
clc
mov
sbb
jae
dec
fwait
cmp
jl
mov
xor
mov
jg
ljmp
mov
cmpsb
xor
rol
repnz
jb
add
push
jae
mov
aas
push
mov
les
scas
and
sar
sbb
pop
ljmp
inc
shrb
popa
out
bound
mov
arpl
cmp
call
js
orl
or
test
aad
xor
sahf
mov
adc
fucom
adc
es
mov
xor
cmp
adc
mov
aas
subl
loop
xor
lcall
pop
inc
das
mov
mov
sub
sub
scas
cmpb
rcll
ret
mov
dec
jl
and
push
fwait
push
les
int3
rorb
aad
cmp
jne
add
mov
std
pop
and
adc
icebp
stc
sahf
test
ss
outsb
loope
inc
dec
xor
inc
push
std
out
enter
or
imul
out
jns
icebp
adc
sub
adc
lods
adc
ds
mov
dec
fwait
orb
dec
mov
xchg
jbe
or
sarl
xor
sahf
and
inc
cmp
out
adc
dec
popf
and
aas
in
shlb
lods
inc
push
pusha
inc
pop
mov
push
mov
inc
imul
xchg
call
gs
add
push
xorb
test
shrl
aaa
es
or
sbb
xchg
sbb
test
sbb
jle
mov
pop
shr
sub
inc
mov
lcall
lock
in
sbb
test
movl
int3
add
mov
pop
pop
dec
test
aad
mov
enter
arpl
enter
mov
es
push
out
jbe
outsb
in
mov
movb
ja
or
or
out
rcl
mov
cmp
jbe
pop
mov
sub
idivb
add
sbb
mov
ja
mov
call
mov
mov
push
adc
xchg
sbb
mov
jne
incl
fstpl
notb
inc
mov
test
aaa
cli
mov
int
mov
inc
pop
int3
push
dec
cmp
test
adc
pusha
mov
push
mov
xor
push
xor
mov
lods
aad
sub
sbb
andb
stos
sti
and
mov
cs
pop
insl
add
mov
rolb
in
ds
sbb
fstl
cld
lret
sub
xlat
outsb
js
out
mov
mov
mov
mov
iret
lret
js
insl
push
in
shrl
pop
ljmp
sbb
xchg
sub
jecxz
mov
verr
adc
call
pop
test
pop
sub
scas
cld
jge
or
inc
sub
je
inc
arpl
push
pusha
or
cltd
push
dec
and
mov
sbbl
mov
push
add
lods
addb
iret
sbb
and
repnz
adc
or
or
dec
lret
jecxz
pop
lods
scas
jbe
cwtl
aas
sbb
arpl
aad
movsb
pop
out
and
adc
fsubl
jb
es
push
mov
iret
int
jnp
mov
popf
xor
pop
adc
mov
add
xchg
add
sub
add
push
test
cmp
fdiv
add
inc
test
pop
sub
or
in
fimull
mov
add
lahf
mov
cli
mov
sub
add
xlat
sub
cwtl
sahf
add
inc
cld
push
add
outsb
lea
push
add
adc
sub
cmpsb
xor
ljmp
sbb
pop
mov
repnz
js
sbb
sahf
cmp
jo
add
or
mov
ficompl
test
jbe
jmp
push
inc
scas
mov
dec
in
adc
in
mov
out
test
and
mov
dec
pop
push
fidivl
inc
mov
test
xchg
fcoml
xchg
xchg
test
mov
or
stc
or
sub
mov
mov
push
in
ja
xsaves
dec
ret
xchg
pop
sub
dec
repnz
or
daa
sub
stos
aad
ljmp
dec
out
in
out
push
dec
repz
rclb
mov
imul
jbe
ss
xchg
fisubl
icebp
and
fwait
jne
fcomps
test
jge
inc
jmp
mov
jle
sub
pop
loope
stos
pushf
test
dec
daa
popf
aam
cld
cmc
stos
or
or
sub
xchg
jnp
ret
shll
and
icebp
dec
mov
repnz
mov
mov
pop
insl
push
test
adc
in
les
jo
repz
pop
mov
daa
int
in
rorl
enter
mov
push
sahf
out
mov
pop
xor
and
sub
xorl
addr16
inc
sahf
in
in
rorb
or
cmp
push
enter
outsb
mov
push
jge
je
ja
mov
xor
sub
fistl
pop
pop
xlat
mov
pop
mov
lahf
cwtl
jg
lock
sbb
insl
pop
push
mov
repnz
jecxz
pop
mov
push
lods
mov
sarl
cmp
pop
mov
es
mov
lods
xchg
jecxz
cmp
cltd
movl
in
ret
out
mov
test
xor
into
loope
xchg
push
lods
pop
jmp
mov
dec
out
shll
idivb
jnp
mov
dec
pop
shrb
xlat
fwait
pop
out
pop
test
loopne
repz
or
xor
in
lea
insl
xor
mov
jmp
jg
xchg
and
xor
movsb
sar
dec
jle
ljmp
shrb
xor
roll
bound
loope
cmp
xor
sbb
addr16
push
test
mov
add
mov
mov
mov
outsl
rorb
cltd
mov
iret
mov
xor
inc
test
and
inc
cmp
into
in
pop
std
inc
repz
or
filds
mov
mov
test
jno
cmp
popf
test
xor
ret
inc
mov
ret
es
jnp
xor
pop
jmp
and
aad
es
cli
lock
sub
xor
mull
and
mov
in
test
fmuls
sub
adc
adc
loope
jecxz
cmp
pusha
hlt
or
push
cmp
pop
shlb
cmp
shrb
imul
fsubs
xchg
lahf
adc
fisubl
out
stc
xchg
xchg
int3
sbb
lcall
sub
dec
imul
or
test
movsb
lret
inc
rorl
cmp
xchg
sbb
push
ljmp
fisubrs
dec
clc
enter
or
int
add
loop
movsl
jb
or
out
test
fistpl
mov
dec
dec
mov
jle
mov
mov
in
xor
lock
icebp
pop
je
push
inc
xlat
jle
mov
loopne
pushf
add
daa
ret
mov
push
call
shrb
cs
push
clc
sub
adc
sbb
ss
adcl
push
ja
add
in
cltd
and
cmp
push
xlat
out
mov
mov
adc
mov
push
mov
mov
imul
lahf
cli
test
nop
xchg
repz
pop
mov
sar
lcall
stos
fdivr
mov
sbb
enter
inc
je
lret
stc
les
loope
pop
sub
and
fwait
shl
jge
or
inc
lods
cli
cmc
ret
xlat
jns
mov
jno
stc
xor
or
sub
aad
imul
push
pop
xor
imul
nop
inc
mov
inc
sub
in
les
cmp
in
mov
in
stc
mov
and
and
inc
divl
fnstsw
or
insl
or
mov
aad
push
ja
xor
test
and
and
jmp
pop
scas
jecxz
test
mov
cmp
or
push
jecxz
push
add
inc
pushl
imul
insl
aad
pop
push
xchg
sbb
pop
ret
fistps
push
sbb
sub
mov
adc
fdivr
cmp
shrb
xor
stos
in
orb
mov
sub
dec
fildll
xchg
fmulp
adc
test
push
mov
fidivrs
push
mov
rcrb
inc
test
jp
xchg
sbb
push
or
bnd
add
mov
or
add
xchg
sub
pop
rcrb
scas
mov
sub
xor
imul
push
stos
ficoml
sbb
mov
stos
jg
scas
and
fcomp
fdivr
sbb
in
adc
mov
mov
dec
fs
and
aad
sbb
adc
inc
and
xchg
ljmp
adc
inc
pop
sbb
cmp
cmpsb
cmp
push
stos
inc
lods
outsb
and
dec
mov
daa
add
pusha
fwait
xor
rolb
add
lock
cmc
insb
fbstp
xchg
pop
out
xchg
or
lds
std
push
stos
lahf
adc
dec
add
dec
cmp
mov
and
es
repnz
rol
sub
inc
push
mov
mov
test
subb
and
mov
or
mov
ja
lods
sub
loop
jge
cmpsb
mov
sbb
inc
arpl
xor
add
add
jmp
xor
mov
and
jne
les
aas
push
cmp
into
or
pushf
mov
jb
pop
rcrl
out
insb
mov
pushf
push
inc
repnz
lds
shrl
dec
dec
pop
cwtl
std
adc
lahf
add
xor
inc
push
aad
cmpps
adc
lcall
mov
dec
dec
out
popf
movsl
gs
insl
mov
push
inc
ss
js
mov
ret
fwait
data16
or
mov
push
jl
cltd
or
fmull
lds
sbb
rolb
cld
pop
dec
mov
or
push
jnp
int
lcall
lods
rol
out
ret
pop
xchg
mov
fadds
pop
movsl
sub
lea
cmp
push
fisubl
imul
fstp
out
int3
dec
test
es
cmp
sbb
pop
call
pushf
scas
mov
and
lds
push
jb
cmp
or
nop
push
push
or
inc
push
inc
sbb
mulw
jbe
dec
into
ds
cmp
adc
les
js
cwtl
jl
xor
sbb
sbb
test
jmp
and
and
mov
daa
sbb
lret
sti
fidivl
inc
inc
mov
or
pop
sub
pop
arpl
mov
jae
sti
addr16
ss
cmp
jl
ret
addr16
cltd
xor
aad
xor
bound
in
add
leave
mov
xor
aam
popa
push
repnz
and
xor
jp
mov
mov
jno
cld
jmp
jl
pop
jecxz
jb
out
adc
cmp
inc
adc
add
daa
dec
inc
loope
inc
pop
popl
sti
imul
mov
jns
int3
lea
and
cmp
sub
xor
inc
outsb
enter
add
xor
xchg
cs
jne
push
mov
loope
clc
xchg
add
add
mov
sbb
lock
lahf
int
mov
mov
push
cmpsb
push
xchg
dec
add
xchg
daa
xchg
jae
js
push
or
jl
aaa
dec
aas
inc
push
je
loopne
fmull
cmp
xchg
mov
stos
imul
xor
movhps
icebp
cld
ds
daa
xchg
xlat
aaa
jno
lcall
adc
xor
dec
stc
xor
cmpsl
popf
out
push
mov
mov
inc
sbb
push
cwtl
stos
repnz
fisubs
xchg
cmp
daa
cmp
iret
xor
push
mov
mov
add
xor
and
aad
xchg
add
xchg
dec
cld
mov
pushf
or
xor
mov
cmp
dec
inc
pop
mov
dec
pop
xchg
data16
lock
lret
imul
xor
sbb
in
mov
jnp
mov
pop
and
add
pushf
sub
test
ret
mov
push
sahf
out
mov
and
xchg
sbb
in
mov
dec
cld
iret
cwtl
gs
ljmp
loope
lods
xor
inc
rep
mov
mov
adc
cmc
stos
xor
and
or
ja
repz
lods
mov
call
rcrl
mov
cwtl
ret
inc
filds
jecxz
xchg
test
insb
nop
shr
gs
cwtl
gs
mov
test
insl
jno
lods
adc
jb
dec
or
pop
icebp
notl
sbb
js
sbb
mov
stos
sub
push
imul
div
push
fistl
data16
dec
sbb
sbb
xchg
enter
stc
inc
xor
shrl
or
adc
push
sti
idivb
and
dec
popa
je
xchg
cmp
inc
fcoms
fdivs
ja
mov
sub
ljmp
adc
sub
inc
xor
inc
dec
aaa
addr16
je
sti
icebp
inc
imulb
mov
sub
movsb
lcall
movsl
adc
add
sbb
xlat
jle
stos
ficomps
cld
sarb
jo
mov
fadds
pop
jg
mov
cli
sahf
push
in
jle
ja
xor
xor
mov
xchg
mov
ret
xchg
cli
inc
mov
mov
sbb
xlat
jl
in
cmc
cmp
daa
aad
dec
lahf
dec
pop
ret
dec
hlt
aam
jge
mov
sub
xchg
cmc
push
xchg
mov
inc
push
mov
jecxz
fldenv
push
mov
ret
inc
jo
mov
xchg
push
fwait
rcrb
cmp
xchg
jae
push
inc
inc
mov
das
push
jecxz
or
cwtl
push
cmp
insb
add
push
mov
stos
fnstsw
sbb
sub
xchg
inc
or
outsb
sub
ffree
mov
movsl
cld
fcompl
rcrl
cmp
scas
ja
xchg
js
mov
dec
jg
xchg
cmp
lds
cld
and
mov
mov
jo
sub
icebp
add
and
fimuls
inc
xchg
fwait
and
inc
repz
shrl
fildll
rcr
leave
push
daa
mov
pop
loop
test
test
jne
jo
cltd
pop
scas
adc
pop
mov
push
ljmp
sub
insb
or
cmp
movsl
and
jns
mov
into
jp
out
xchg
inc
sub
fs
shl
dec
bound
inc
mov
xorl
sahf
sahf
jl
push
scas
popa
ja
jbe
mov
jne
ffree
outsl
repz
cmp
imul
sub
add
sub
aam
jnp
mov
adc
es
lret
sahf
xor
out
ds
into
in
lcall
xor
xor
sarl
aam
pushf
lret
push
pop
sti
push
adc
push
pop
test
mov
jl
cli
push
cmp
leave
syscall
insb
adc
mov
jg
mov
test
dec
lcall
xor
jecxz
imul
fcomps
inc
pop
inc
les
daa
or
ds
ret
sbbl
ss
sarl
ds
test
push
insl
jne
iret
jae
dec
ljmp
push
gs
divps
xchg
mov
push
sub
push
lcall
push
push
lods
fists
jns
adc
push
sbb
mov
sahf
ja
stc
sub
mov
stos
jb
inc
adc
dec
pop
in
sbb
xor
imul
or
mov
js
or
jno
std
lods
jmp
fmuls
test
inc
in
insl
loope
rcl
jnp
test
lret
xor
outsl
dec
js
in
mov
arpl
jne
cmpsb
mov
mov
jbe
jecxz
xorb
sbb
dec
pop
push
sarb
aas
xchg
f2xm1
pop
cltd
or
leave
jno
stos
xor
jg
insb
enter
out
faddp
mov
repz
mov
loop
int3
testl
mov
inc
cmp
xchg
jp
pop
mov
cli
cmp
cltd
std
jne
or
jmp
xor
aaa
lret
out
int
mov
rclb
inc
mov
sbb
pop
xchg
jne
bound
pop
push
mov
push
jp
std
mov
dec
int
cmc
sbb
xchg
aad
hlt
push
fcom
inc
out
ds
ljmp
pop
popa
pop
leave
jno
adc
jl
test
pop
add
xchg
adc
fmull
push
fcmovnb
rorb
std
test
cs
fistpll
out
insl
aad
call
xchg
insl
ret
xchg
pop
inc
push
js
add
cmp
jle
push
shll
mov
cmpsl
data16
pop
jmp
ljmp
jle
fs
push
cmp
ss
fucomi
push
insl
sub
mov
sbb
add
rcll
out
int3
imul
cs
call
jbe
enter
call
rol
test
inc
mov
push
pop
and
call
add
nop
scas
aad
or
and
xchg
jbe
and
cmp
bound
fistpl
bound
sub
push
jge
mov
jne
movsb
pop
lds
inc
lret
out
mov
fcmovne
mov
mov
je
repnz
push
xchg
lods
loop
jg
adc
int
rcr
daa
push
enter
inc
rcrl
inc
or
insb
pushf
push
pop
fcompl
add
out
mov
popf
arpl
mov
and
cmp
jmp
rorl
inc
out
cmp
mov
mov
movsb
sbb
ss
in
inc
cmp
jo
jmp
push
nop
mov
lea
lods
sbb
sti
push
cwtl
arpl
mov
mov
sbb
addr16
popf
iret
and
shlb
inc
data16
fsts
or
pop
lahf
fimuls
pop
leave
jns
in
subb
sbb
bound
add
mov
mov
or
das
dec
push
lds
daa
insl
push
loop
xchg
fisubl
andb
adc
dec
std
insb
jnp
dec
imul
push
or
pmuludq
push
lock
aaa
cmc
inc
pop
movl
insb
push
shl
xchg
pop
mov
add
imul
aam
xor
xor
stos
push
hlt
lcall
clc
sub
rol
ljmp
out
out
lret
add
pop
aam
pop
dec
sub
imul
xorb
xlat
inc
sbb
mov
or
cmp
cmpsb
jbe
sbb
mov
scas
sbb
adcl
inc
faddp
es
int3
jmp
adc
cli
dec
int
jecxz
jp
test
adc
sub
add
pushf
push
std
test
in
mov
cmp
push
dec
dec
jnp
repz
in
jg
push
outsl
stc
push
ret
xor
popf
mov
sbb
sub
enter
pushf
outsb
mov
add
push
fbstp
or
sbb
mov
jecxz
lods
ja
xchg
mov
and
sti
int3
jns
inc
cmp
push
repnz
loop
ret
les
mov
mov
mov
scas
adc
and
fadds
or
fs
jns
xor
dec
lods
and
cwtl
fnstsw
stc
mov
mov
roll
jo
pop
shll
out
filds
imul
in
sub
jle
xchg
adc
enter
lahf
mov
mov
xor
sub
test
lcall
sbb
pop
jle
jne
mov
add
lods
push
addr16
imul
popa
scas
jle
out
pop
test
mov
dec
mov
shll
aaa
scas
outsb
or
inc
jge,pn
ret
dec
cmp
rcll
dec
out
xor
or
mov
push
xor
jle
cmp
xchg
pop
mov
pop
jle
xchg
rcl
aaa
rolb
stc
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
bound
iret
and
pop
jl
in
cmp
popa
pusha
aam
adc
mov
lcall
mov
arpl
ret
rcrb
lcall
pusha
scas
cmp
shll
loope
jle
pop
js
aas
leave
loopne
popa
fdivl
in
dec
cmc
adc
fcomps
lcall
and
inc
mov
and
lcall
pop
and
xor
pop
jne
xchg
leave
lret
ror
mov
dec
lcall
mov
adc
mov
sub
and
nop
lock
xchg
jmp
xlat
jg
dec
sahf
clc
test
mov
sbb
jbe
xor
adc
call
std
pop
inc
mov
pop
shrl
cmp
add
out
inc
xor
jle
in
mov
outsl
adc
icebp
lret
nop
adc
lcall
add
push
sub
popf
push
arpl
jns
mov
andl
jno
aaa
pop
and
jmp
mov
jecxz
repnz
enter
mov
cmpsl
mov
cmpsb
mov
in
sbb
lcall
test
in
pop
add
cmp
gs
cli
lret
arpl
sub
xchg
stos
mov
mov
hlt
lret
cs
cmpsb
xchg
aas
adc
xchg
imul
pop
stos
and
fidivrl
push
push
adc
enter
and
cmc
mov
lahf
push
movsl
or
jae
icebp
inc
adc
cwtl
push
xchg
xor
lock
jle
shll
cwtl
xchg
addb
imul
or
enter
push
dec
shlb
loope
ljmp
loop
push
cmp
xor
int
shl
cmp
mov
mov
jne
dec
cs
jl
and
dec
mov
xor
xlat
fistpl
xchg
push
fs
add
lea
hlt
push
push
cmc
out
pop
imul
xor
repz
addr16
add
xor
ret
lret
test
mov
mov
fstpt
repz
or
roll
rorl
ss
lods
jb
ss
fucomp
sub
sbb
mov
sub
adc
and
pushf
mov
repz
out
das
and
mov
pop
lds
fcoml
push
lret
arpl
in
xor
mov
iret
xor
xor
movsb
jmp
icebp
pop
dec
dec
sub
push
cmp
dec
push
jge
mov
push
add
sub
inc
push
mov
pop
mov
xchg
divb
jb
pop
push
fiadds
add
cmpsb
adc
rep
rcr
xor
push
xor
lods
gs
aas
dec
arpl
cmp
pushf
pop
and
cmp
test
and
ja
jge
mov
mov
aad
cmp
cmpb
xchg
nop
fwait
mov
mov
inc
fbstp
jb
es
inc
inc
int
mov
mov
fiadds
cwtl
sti
fcom
cwtl
divb
rcr
imul
sar
jecxz
loopne
iret
cmp
aaa
push
mov
sbb
leave
xchg
pop
mov
jmp
sub
mov
int3
fs
mov
clc
jo
cmp
stos
inc
jp
xchg
lahf
in
cmpb
pop
or
aad
mov
out
mov
jle
clc
push
inc
mov
sub
hlt
fs
sub
int
rcl
movsl
aaa
stc
inc
mov
pushf
or
pusha
inc
imul
lret
xchg
or
xor
test
push
dec
sbb
push
imul
fdivrl
dec
push
in
xor
mov
dec
push
xor
pop
cltd
scas
mov
xchg
and
arpl
icebp
jp
jg
mov
or
push
sub
cmp
cmp
xor
or
lret
fdecstp
and
cwtl
inc
dec
idiv
mov
mov
sub
push
lcall
cmp
icebp
ffree
push
dec
xlat
and
stos
cmp
repz
or
sub
jge
mov
dec
addr16
fstl
sbb
jb
jmp
or
icebp
nop
ja
sbb
inc
mov
or
sbb
push
and
lock
out
cs
inc
pushaw
mov
jo
je
push
pop
mov
divb
push
adcl
or
lcall
pop
fstpl
xor
out
sbb
dec
arpl
sub
jge
imul
scas
inc
mov
cmp
jge
or
push
in
xchg
imul
call
mov
stos
out
movsb
pop
mov
add
std
inc
outsb
push
xor
jg
jnp
mov
gs
dec
call
and
cmp
aam
sub
xchg
mov
cmp
leave
push
push
negb
and
daa
in
fsts
pop
jno
stos
pop
fldcw
push
jecxz
leave
add
jmp
inc
push
push
sahf
cmp
jmp
pop
popa
pop
jae
pop
or
xchg
vmovlpd
popf
push
xchg
lds
out
jne
hlt
popa
jnp
fbld
clc
inc
in
and
push
pop
cmp
dec
movsb
add
js
jg
jecxz
sbb
in
dec
mov
pusha
inc
push
adc
sub
and
orl
pop
sbb
sbb
push
test
xchg
insl
jge
inc
pop
repnz
lods
in
sbb
aam
push
mov
dec
outsl
stos
aad
insb
jo
aam
and
ret
xchg
xchg
rol
insl
lods
roll
push
in
in
sub
testl
jns
outsb
mov
pushf
in
push
shl
sbb
imul
movl
leave
insl
lods
fcomps
cmp
add
shrl
in
int3
insb
mov
aas
inc
jle
and
daa
push
mov
inc
pop
outsl
fidivs
rorb
push
xor
xorl
fmull
fcompl
cmp
jp
out
pop
ljmp
int3
mov
or
xorl
mov
inc
scas
push
sbb
fildl
das
xchg
pop
loop
mov
ret
pop
sti
out
cmp
in
mov
jmp
lahf
repz
les
lret
push
test
xchg
jnp
mov
add
lods
repnz
cmp
mov
push
andb
push
and
push
mov
mov
call
and
je
imulb
nop
xchg
jno
push
mov
sub
xorl
dec
imul
pusha
lods
inc
push
push
aam
xchg
mov
pushf
and
lret
xchg
push
adc
int3
jo
mov
inc
jle
jae
fstpl
push
nop
push
les
cmp
fstl
or
jmp
xchg
mov
out
xor
arpl
and
cmp
ds
pusha
mov
pminub
mov
pop
int3
xor
inc
lret
dec
gs
out
add
xor
mov
pop
xchg
mov
adc
xchg
xor
ret
xor
scas
sbbb
sbb
xor
subl
adc
sub
mov
imul
jnp
xlat
jmp
out
xor
xchg
cmp
dec
jp
xchg
shll
addr16
pop
pop
mov
add
push
dec
mov
xor
andl
rolb
adc
push
fs
xor
enter
pop
out
arpl
scas
mov
pop
clc
sahf
cmp
orb
sbb
in
repz
mov
lahf
daa
les
ljmp
ss
pop
jp
and
fadd
adc
push
or
int
insl
xor
popf
sub
shlb
jns
mov
and
fidivrl
scas
and
mov
inc
xchg
ljmp
cmp
mov
lret
ret
clc
mov
xor
sbb
adc
inc
lea
fdivrs
int
ret
add
pop
jg
inc
dec
mov
ret
push
fcomi
adc
mov
js
mov
fsubs
shl
gs
xor
fstps
cmp
inc
cmp
mov
inc
imul
or
daa
pop
ret
ds
test
sbb
push
loopne
imul
adc
int3
xor
ret
pop
fidivs
sahf
int3
leave
nop
pop
sub
sbb
mov
mov
add
jne
xorb
pop
pop
mov
jno
test
inc
xchg
pop
fwait
inc
imul
jb
insb
lds
repnz
mov
push
pushf
imul
dec
or
mov
gs
jae
mov
les
jge
cld
jmp
js
add
sub
clc
cmc
push
xchg
fsubs
pop
stc
cld
push
push
inc
adc
mov
jns
sub
mulb
fisubrs
repnz
sti
lods
push
shrl
pop
and
out
mov
and
dec
jbe
fs
jae,pn
clc
stos
je
cmp
lds
ret
pop
ret
pop
cmp
lret
movsl
out
fmull
push
aas
xchg
xchg
mov
adc
cmp
cmc
movsl
sub
cmpsb
lret
rclb
dec
mov
cmpsw
and
adc
cwtl
cld
cmpsl
sti
adc
pusha
js
pop
xchg
shll
push
mov
inc
jb
xchg
lcall
ja
out
mov
sub
add
inc
push
call
mov
sbb
pop
aam
insb
mov
xchg
xchg
inc
add
adc
lret
mov
icebp
in
mov
and
jecxz
pop
fwait
push
insl
mov
xor
stos
jb
xchg
adc
lcall
pop
jae
adc
pop
icebp
jecxz
js
arpl
addr16
pop
pop
mov
jo
adc
sbb
into
cld
mov
inc
cmp
pop
push
sbb
add
leave
stc
mov
sbb
jns
dec
shrb
lock
addl
push
and
xchg
lods
jge
ret
mov
jg
xor
xchg
push
sub
mov
clc
xchg
mov
repz
fstl
ss
pop
and
cmpb
rcrb
xchg
mov
lret
cs
testb
pusha
mov
dec
pop
xchg
ja
add
inc
sub
mov
sbb
pop
add
xor
les
and
les
mov
xchg
ret
xlat
fldl
add
incb
push
ret
push
mov
jecxz
roll
mov
rorl
xor
fimull
test
cmp
dec
dec
sbb
and
in
mov
subb
orl
outsb
or
mov
and
lock
das
out
popf
stos
xor
sti
into
adc
and
insb
pop
dec
test
or
stos
std
push
imul
and
adc
repnz
das
lods
stos
jecxz
mov
cmpsl
cmp
jg
and
cs
popa
inc
push
adc
cs
or
sub
das
mov
xor
and
sti
xchg
xor
loope
and
iret
and
xchg
in
ljmp
push
inc
pusha
in
int3
scas
movsl
jmp
mov
jp
or
push
ret
daa
xchg
mov
enter
inc
pop
or
jns
xlat
mov
lds
push
mov
mov
btsl
rorl
jg
lods
out
loop
xchg
push
test
xor
out
fisubl
mov
sbb
aas
mov
push
xchg
cmpsb
inc
movsl
scas
xor
jne
jb
stos
and
repz
pop
mov
sahf
movsl
add
pushf
int
test
jbe
icebp
out
fisttpl
xor
scas
mov
xchg
dec
movsb
clc
push
and
xchg
cs
test
cli
cmp
sti
out
out
mov
aas
rcrb
imul
hlt
dec
imul
fwait
popf
scas
lock
and
xchg
popa
out
push
jge
imulb
cmp
push
sahf
add
jne
push
sbb
sub
ljmp
cwtl
out
inc
lds
fldl
pop
arpl
jle
xchg
ret
pop
inc
sbb
sub
pop
mov
test
jns
loope
xchg
rcll
pushf
bound
cmp
rcrb
lods
push
jecxz
outsl
mov
test
mov
das
xchg
mov
nop
lea
sbb
cmpsb
aas
out
icebp
cmc
jne
jle
mov
push
dec
dec
enter
sub
xchg
pop
mov
shlb
mov
adc
mov
mov
out
inc
xor
loop
decb
lret
dec
cmpsb
add
mov
int3
xchg
mov
adc
xchg
push
adc
hlt
adc
mov
test
xchg
xchg
add
pop
mov
idiv
daa
adcb
push
jnp
iret
lret
cmpsb
adc
std
insl
push
ret
mov
mov
inc
movsl
cmpsb
xchg
pushl
xchg
pushf
xchg
or
inc
fstpt
push
pop
in
sub
cmp
push
mov
test
pop
mov
or
push
jnp
and
adc
mov
cmovp
jo
xor
test
in
pop
cmpsl
movsb
dec
psrad
das
in
cld
inc
cmpsl
and
sub
add
add
int3
dec
hlt
inc
cmp
nop
inc
mov
push
inc
insl
xchg
ret
mov
popl
nop
outsl
cmc
add
mov
sub
les
lock
dec
xor
jge,pt
cmp
data16
jbe
add
and
sbb
je
mov
mov
xor
dec
push
inc
fnsave
inc
imul
sbb
mov
inc
push
test
mov
notl
dec
into
and
pop
dec
jo
pop
add
inc
mov
pushf
out
pop
or
fcomp
mov
sets
adc
xchg
loop
les
sarb
ret
mov
and
xchg
jecxz
and
xorl
popa
mov
pop
adcb
pop
adc
adc
decb
mov
in
push
rcll
mov
mov
mov
lahf
je
or
fmuls
outsb
xchg
punpckhdq
jo
sub
push
inc
mov
sbb
rolb
sahf
xor
into
cmp
mov
and
xchg
jl
dec
sbb
xlat
daa
jp
scas
inc
add
push
cwtl
push
lahf
xchg
xlat
out
cmp
adc
hlt
clc
inc
pop
pop
lret
mov
and
cmc
mov
jae
xlat
add
pop
and
dec
inc
out
sahf
lret
sub
pop
lods
fbstp
insl
sub
shlb
push
pop
add
inc
dec
movsb
loop
aad
mov
pop
dec
sub
pop
add
lret
and
sbb
sub
mov
cmpsl
dec
js
lcall
in
aaa
inc
mov
ret
mov
inc
inc
mov
or
push
test
cmp
test
and
mov
pop
leave
cltd
aad
and
lds
sub
andps
ja
pop
add
in
jb
push
mov
mov
out
fidivs
lds
add
mov
leave
pop
lret
adc
jg
sbb
in
int
sti
xlat
pusha
iret
jle
xchg
pop
imul
pop
test
xchg
cwtl
push
dec
xchg
scas
test
xchg
push
pop
sub
popf
ficoml
inc
cwtl
popa
xor
inc
cmp
test
mov
jo
push
inc
or
lahf
jo
sahf
out
popa
dec
out
sub
rcl
jb
xchg
lcall
test
fstpl
sbb
les
xor
add
ret
rcl
jo
cmc
and
sub
sbb
mov
xchg
outsl
pop
cmp
lret
xchg
popf
inc
lds
fcoms
jno
int3
es
lock
adc
dec
push
push
lds
mov
jmp
mov
dec
je
inc
sbb
out
mov
or
lcall
push
push
adc
ss
roll
adc
lds
xchg
dec
push
xchg
cmpb
test
sbb
push
mov
push
pop
in
and
cld
pusha
xor
jg
sti
jle
test
out
paddw
inc
mov
mov
das
insl
sahf
jns
lret
cmp
xor
mov
or
cmc
dec
fsubs
and
inc
push
daa
xchg
jl
pop
jl
fildll
mov
inc
mov
adcl
add
inc
mov
fwait
push
in
adc
jmp
iret
pop
andl
jl
jne
int3
clc
lcall
std
in
xchg
nop
pop
push
jp
add
leave
push
mov
sub
xor
inc
aas
lods
cltd
push
jl
lods
outsb
shrl
add
movsl
xchg
call
loopne
cltd
inc
inc
sbb
push
jle
jecxz
push
push
test
test
cli
or
push
into
push
adc
rorb
jge
call
popa
hlt
mov
mov
sar
jge
mov
cmp
and
mov
stos
cmp
es
add
xor
sub
lea
sbb
cmp
add
pop
adc
or
pop
fistps
pop
mov
xor
scas
push
sub
out
xor
test
xor
jmp
insl
int
test
adc
mov
inc
test
sahf
ljmp
mov
pop
or
xchg
shll
jle
and
pop
xchg
das
or
xchg
xor
push
mov
arpl
push
test
popf
pop
mov
cmpsb
int
sbb
and
sub
xchg
jno
adc
adc
push
jbe
test
movsl
mov
aad
xchg
jge
sbb
inc
xor
jmp
js
mov
ljmp
icebp
lds
jne
mov
dec
jb
cmpsb
ret
adc
cmc
add
adc
daa
push
sub
popa
addl
sbbb
std
and
xchg
xchg
cmp
std
iret
mov
lret
adc
adc
and
jb
gs
popf
syscall
leave
push
sahf
aad
cmp
stc
ret
lret
push
shl
out
out
pop
lret
sbb
inc
mov
sub
mov
mov
jmp
mov
and
sub
into
addr16
push
lea
clc
mov
xor
mov
dec
mov
push
push
dec
push
mov
ja
add
xchg
in
adcl
mov
aaa
xor
sub
sub
or
push
xchg
mov
cmp
shll
dec
inc
dec
pop
push
xchg
fmull
xchg
inc
out
aad
or
adc
in
out
imul
shl
jmp
mov
push
ja
pop
arpl
mov
leave
cmp
mov
sub
mov
fwait
out
pop
fsub
xchg
sbb
or
xchg
xor
mov
mov
sbb
lea
jnp
xor
pop
push
clc
roll
xlat
and
sub
subl
sti
aam
shll
push
fisubrl
insb
fucomip
pop
or
xchg
inc
fidivs
cmpl
inc
daa
sbb
add
lods
inc
lock
adc
pop
movsl
xchg
mov
cltd
add
scas
bound
int3
sbb
dec
test
pop
inc
adc
dec
lds
dec
hlt
faddl
or
mov
je
aaa
iret
jae
popf
stc
arpl
inc
mov
pop
in
fisttpl
dec
leave
mov
push
ss
jle
in
xchg
insb
aas
stos
mov
cmp
bound
nop
shll
lret
mov
das
mov
cmp
loope
inc
fisttpll
jle
js
dec
incb
inc
cli
dec
int3
shrb
pop
iret
iret
stos
adc
mov
adc
and
testb
and
loopne
adc
idivw
and
inc
xchg
loopne
mov
add
cmp
or
pop
mov
add
lea
inc
out
pop
shlb
lds
inc
pop
insb
loopne
jns
dec
xchg
sahf
mov
jbe
and
das
mov
stos
scas
sub
addb
add
mov
popa
fcomps
cmc
push
popa
mov
je
xor
and
push
pop
or
mov
dec
fs
pop
cmpsl
in
js
ss
imul
push
xor
fs
rorb
cmpsl
fistpll
nop
popf
pop
aas
fistl
leave
add
xor
jge,pn
sahf
sub
mov
sub
shlb
mov
pop
stc
xchg
rclb
out
das
out
mov
sub
jmp
xor
rcrb
cltd
stos
add
cmp
sub
cmpsl
mov
mov
imul
mov
sti
scas
mov
je
xchg
loop
jmp
data16
fucom
test
fbstp
outsb
mov
or
lahf
int3
aaa
fdivrs
and
pop
cltd
into
mov
aas
cmp
mov
jmp
cmpsl
dec
fwait
sbb
pop
mov
or
in
xchg
or
adc
clc
sub
xor
xchg
arpl
cmp
dec
hlt
ucomiss
cmp
or
xchg
loopne
jp
add
das
mov
int3
lret
xchg
sub
repz
mov
adc
movsb
sub
gs
insl
scas
xchg
mov
mov
pop
in
imull
jno
jmp
ja
cmp
cmp
dec
push
xor
ss
fwait
test
mov
cli
jb
cmp
loope
dec
inc
pusha
fsubs
sbb
sub
push
fs
xor
lock
movsl
and
cli
aad
xchg
das
mov
mov
or
jne
leave
mov
hlt
in
pop
rcl
xchg
addb
sarl
test
inc
jnp
lahf
inc
stos
das
push
cmp
clc
les
test
dec
dec
xchg
jne
mov
mov
movsl
imul
iret
fsts
aam
inc
testb
cmp
adc
call
js
adcl
cmpsl
sbb
xchg
sub
fidivl
out
add
mov
adc
jmp
cmc
fs
into
cld
ret
mov
mov
mov
mov
mov
sbb
adc
push
arpl
xor
pop
jle
pop
movsb
cs
lret
adc
sub
dec
cmp
sbb
in
sub
cltd
dec
jb
mov
dec
fisubrs
in
montmul
cmpsb
ret
jl
mov
lds
ret
mov
jge
push
inc
mov
iret
add
push
popa
cli
jmp
cltd
mov
push
dec
sahf
das
jg
ss
sarl
sbb
cmp
mov
xlat
push
pop
in
inc
dec
ret
loop
pop
push
push
mov
sub
xchg
mov
mov
sbb
test
jge
and
imul
insb
push
sub
icebp
dec
pop
jns
mov
xchg
xchg
jp
sub
sbb
das
sarl
rorb
rcrl
mov
fistpl
aad
or
mov
test
mov
jge
sahf
push
lods
mov
xor
ja
std
mov
push
lds
rcr
push
cmp
jno
and
hlt
pushf
ljmp
pop
sbb
das
mov
xor
pushf
jecxz
xchg
jns
cmp
mov
inc
jl
cmpsb
cmp
popf
aad
push
in
into
cli
xorb
imul
cli
aad
xor
insb
cmpsl
stos
inc
mov
and
arpl
sbb
imul
or
cmp
leave
cwtl
pusha
cmpsl
mov
sub
outsb
fistpl
sbb
jl
push
in
pop
imul
xchg
xchg
mov
and
sub
hlt
out
pop
xor
std
lret
nop
jecxz
cltd
mov
add
pushl
ret
or
int
shll
dec
add
or
pop
mov
mov
out
dec
add
add
sbb
pusha
scas
faddp
leave
xchg
mov
push
push
add
pop
adc
xchg
adc
cmpsl
je
sbb
clc
loopne,pn
sbb
test
mov
xor
cmp
pusha
mov
or
or
or
les
dec
les
pop
cs
rcrb
lea
call
in
movsb
enter
inc
xchg
notl
insb
int
add
xor
jecxz
adc
mov
cmpsb
shll
jb
fdivp
mov
les
popf
inc
pop
loop
stc
push
mov
push
cmp
inc
push
sub
push
or
mov
test
pcmpgtw
dec
pop
cmp
push
dec
mov
in
out
or
in
movsl
cltd
fcoms
xchg
data16
cs
les
popf
cmpsb
inc
test
sbb
or
jo
shl
clc
out
sbb
in
and
ret
adc
mov
loopne
push
shll
add
insb
daa
aam
cmp
sub
repnz
sub
cmp
lcall
lcall
clc
inc
xlat
sub
inc
dec
mov
dec
aad
movsb
lods
and
dec
and
ljmp
xor
ret
andl
xchg
insb
das
xor
in
mov
lcall
rcll
or
arpl
or
sub
test
arpl
bound
inc
aad
adc
xor
add
fidivs
mov
mov
sub
lret
xchg
mov
mov
or
lock
into
pushf
sbb
mov
push
movsb
ficoml
sub
sbb
mov
and
mov
xor
xlat
sar
mov
cs
lea
enter
pusha
xor
xor
repnz
dec
push
adc
jle
add
lods
cmpsl
and
jg
cmp
insl
sbbb
jae
inc
mov
cmp
xor
pop
bound
cld
mov
mov
pushf
das
in
adc
mov
out
test
or
xchg
sbb
nop
and
scas
pop
or
sbb
pop
in
cmc
or
jp
add
rorb
and
push
xor
test
outsb
test
adc
mov
hlt
ret
mov
pop
das
adc
push
les
cmp
mov
fldl
adc
sbb
pop
inc
cmp
call
cmp
and
and
cmpsb
mov
inc
lcall
icebp
fildll
repz
icebp
sarl
mov
jno
nop
adc
repnz
push
sbb
push
mov
popa
imul
pop
jp
jmp
fistpl
dec
or
loop
lds
push
jle
adc
xchg
push
jecxz
push
jnp
adc
imul
mov
rcrb
loopne
and
adc
je
das
or
and
loop
dec
pop
test
inc
or
dec
dec
int
mov
inc
daa
pop
pop
push
or
jbe
and
iret
hlt
jb
pop
loop
iret
push
cmp
add
inc
mov
pop
movsb
inc
sbb
je
dec
and
jbe
lcall
arpl
push
imul
hlt
inc
mov
jecxz
push
push
mov
icebp
lea
je
scas
mov
pop
das
fdivr
int
sbb
push
rol
mov
outsl
fldcw
repz
mov
inc
cmc
dec
push
or
add
stos
out
aas
test
inc
pop
scas
mov
idivb
add
and
inc
and
stos
push
mov
ret
lret
js
je
stc
cmp
je
mov
test
xchg
xchg
fld
sti
mov
out
jp
add
imul
pop
ror
mov
es
lret
mov
push
aaa
pop
mov
sbb
pop
jecxz
rolb
je
mov
push
jne
test
xchg
adc
and
xor
fsub
push
addl
loopne
pop
scas
cld
xchg
rcll
xlat
xchg
in
pop
lea
sbb
popf
je
adc
mov
aam
jnp
and
jae
iret
insb
test
sahf
aad
les
outsb
orb
pusha
enter
mov
mov
add
and
js
or
xchg
mov
cmp
test
sbb
test
xor
repnz
fdivr
lds
popf
addl
cmp
ret
les
xchg
jb
xchg
fistpll
icebp
lods
repz
stc
icebp
shll
fxch
mov
inc
and
lds
cmp
sahf
add
push
push
sub
add
pusha
mov
xor
cmp
push
das
mov
xchg
or
mov
in
mov
sub
fbld
sub
pop
lret
adc
pop
jne
push
push
dec
or
imul
inc
outsb
nop
mov
adcb
mov
jo
sbb
sbb
inc
cmp
dec
ret
push
cmp
int
pop
mov
addr16
movsl
pop
rclb
in
cmpsb
dec
xor
mov
out
insb
aam
in
add
or
int
loopne
mov
sub
shrl
jb
xor
in
clc
sub
in
push
pop
or
int
xor
aad
fs
pop
outsb
cmp
iret
fwait
mov
inc
and
pop
jbe
push
jo
test
repnz
mov
jle
jcxz
sbb
push
mov
dec
inc
decl
cmpsb
sub
mov
pushf
out
jecxz
fcmovu
and
adc
xor
mov
xchg
xchg
int
repz
lock
xchg
xchg
push
test
fdivrs
jle
xchg
push
out
mov
daa
sub
sahf
jno
cmpb
daa
mov
xlat
repnz
ja
xchg
test
and
mov
xchg
cmp
aam
jns
outsl
fldcw
inc
mov
dec
jo
shll
fs
fmulp
icebp
xor
dec
mov
xchg
add
xchg
dec
mov
pop
xchg
lcall
js,pt
into
mov
cmc
test
xor
or
rcrb
mov
jb
cmp
pop
pop
cmp
shrl
jge
and
test
imul
xlat
stos
xor
jbe
xor
or
mov
and
sub
cmpsb
pusha
insb
mov
jecxz
scas
scas
inc
sbb
js
mov
jge
push
lods
jecxz
movl
fstpt
fistpl
dec
lock
arpl
or
dec
adc
jno
pop
lock
xchg
add
mov
clc
xlat
daa
repz
add
imul
lahf
cmp
clc
inc
sahf
call
ds
push
xor
in
in
cmpsb
xchg
push
dec
jae
mov
dec
mov
jb
pop
outsl
dec
sub
ret
pop
movsl
xchg
mul
mov
mov
outsl
push
test
int3
pop
stos
movhps
sub
outsl
fiadds
jge
jns
popf
sub
hlt
mov
decl
xor
pop
xchg
es
jmp
pop
or
mov
in
jne
lock
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
push
mov
daa
push
jl
pop
pop
jl
das
iret
lea
dec
iret
dec
ret
xchg
bound
orb
lods
pop
rcrb
scas
fwait
pushl
cli
iret
cmpsb
jp
mov
lcall
into
dec
fadds
imull
sub
inc
push
xor
imul
leave
cs
add
loopne
sub
test
sub
stos
imul
cltd
mov
lods
and
mov
inc
dec
jno
fidivs
pop
loopne
shll
inc
bound
out
jp
push
xor
dec
xor
cld
mov
dec
andl
std
adc
xor
inc
and
pusha
push
stc
push
rorb
dec
bound
icebp
pop
jge
out
inc
cmpsb
push
enter
jle
jns
inc
aam
stc
or
rcrb
fisttps
cmpsl
dec
imul
push
dec
dec
mov
sbb
lret
xchg
insl
or
or
mov
push
mov
dec
rcll
dec
fimuls
mov
outsb
ljmp
push
mov
jge
loopne
lret
cltd
dec
sbb
jg
aad
popf
jae,pt
pusha
push
aas
loopne
test
cmp
fmull
or
int
adc
add
add
jl
rcll
popf
sub
xor
fisubs
fld
cmp
inc
fucomp
pop
or
out
push
push
movsl
sub
push
cmp
xchg
ret
rcl
sbb
out
std
cmp
sahf
es
scas
aad
mov
iret
adcl
cld
cs
scas
adc
aam
jmp
sub
nop
push
sbb
in
fiadds
idivb
adc
push
cmc
and
mov
jl
mov
fildll
pop
std
inc
xchg
xorb
outsl
popf
in
push
in
inc
sbbb
cmpsl
mov
jae
jle
stos
pop
ljmp
nop
inc
popa
rcl
or
sbb
mov
cmp
sbb
xlat
test
sbb
testl
inc
js
pop
dec
sbb
push
sub
call
pop
pop
mov
mov
jae
pop
cmp
inc
test
cli
pop
lret
dec
not
mov
imul
pop
jne
cmpsb
mov
mov
ljmp
cmpb
popa
movsb
jo
pop
stos
scas
cmpl
lods
lock
fbstp
ja
inc
jnp
push
fnstcw
insb
push
add
subl
ds
push
pop
mov
mov
clc
cs
xor
mov
stos
adc
popf
aaa
xchg
cli
test
psadbw
pop
xchg
jmp
vpsllq
lods
mov
jns
adc
sbb
mov
jbe
loope
cli
sub
outsl
cmp
inc
mov
sahf
add
loopne
inc
push
and
mov
cmp
sub
xchg
insb
fwait
jg
xor
add
ds
jge
push
push
dec
daa
jg
mov
aas
adc
lcall
sbb
testb
add
sbb
sbb
mov
dec
and
xchg
sti
mov
pop
fstl
mov
mov
dec
adc
sti
push
out
push
jg
inc
cs
stos
jnp
fldt
inc
push
lcall
dec
ljmp
repz
leave
std
inc
push
push
xor
jbe
sbb
aas
push
lret
outsb
jae
mov
leave
sub
and
sub
lret
sbbb
or
arpl
sbb
sub
in
lret
xchg
pop
sbb
mov
enter
lea
mov
adc
outsb
lods
lods
lret
push
add
inc
scas
movl
dec
dec
xchg
sbbl
out
add
add
mov
and
das
jo
inc
cld
lods
jo
ds
fsubp
stos
cwtl
js
fiadds
ret
cmp
pop
test
stc
cs
imul
sub
push
loope
rcr
ljmp
or
push
pop
lock
cwtl
add
push
ja
push
dec
out
daa
sub
or
int
or
xchg
add
mov
jbe
cmp
sbb
in
fisttpl
and
and
add
in
clc
int3
xchg
cmp
sub
cmp
hlt
xchg
stos
out
out
out
pop
cmpsl
nopl
orb
fstpl
xor
pop
fadds
icebp
out
cli
mov
mov
dec
popf
sub
sahf
inc
je
dec
ss
and
fwait
mov
adc
adc
mov
push
cmp
call
and
mov
xchg
push
jb
pop
test
pop
cmc
dec
push
mov
cmp
dec
fidivl
imull
push
inc
pushf
lret
inc
jnp
fbld
sub
movsl
daa
xchg
imul
mov
jae
aad
sarb
test
in
inc
movsb
iret
cld
mov
dec
mov
daa
or
sbb
sub
ss
push
jnp
repnz
scas
fstp
adc
cmp
jno
mov
inc
lds
rcl
xchg
push
addb
xchg
int
mov
xor
sbb
sbbl
in
add
loopne
xchg
and
jle
andb
push
int3
add
cmp
push
enter
mov
stos
sub
bnd
int
inc
xor
add
scas
push
shlb
je
inc
and
add
xchg
sbb
hlt
sbb
repnz
jl
inc
sahf
movsb
sarl
lahf
bound
and
mov
xor
mov
and
or
or
sub
inc
mov
or
or
pop
jo
fldl
mov
add
ljmp
jo
mov
sub
cmpsb
dec
push
in
adc
in
aam
push
jmp
push
int3
stc
inc
push
mov
dec
fldt
into
mov
in
sbb
cmp
imul
mov
add
cltd
lret
int
lea
pop
sbb
sbb
fwait
adc
dec
jmp
and
inc
fisubs
in
sbb
das
sub
cmp
pop
cmpsl
fdivrp
testl
xchg
icebp
insl
sti
adc
mov
fidivs
push
sub
xchg
daa
pop
out
pop
out
jne
xchg
sbb
xor
xchg
aam
pushf
xchg
mov
sbb
dec
dec
in
mov
mov
inc
std
outsl
cmp
lcall
arpl
xchg
ret
push
in
xchg
insl
push
mov
aas
fildl
sbb
stc
inc
jle
jge
daa
jmp
adc
sub
popa
gs
sahf
das
roll
ds
gs
sub
and
xlat
test
jno
enter
out
jl
pop
jmp
inc
jnp
and
xlat
fs
iret
cmc
jnp
cmc
mov
and
mov
cmc
das
inc
and
mov
call
mov
and
scas
js
lcall
xchg
aad
and
pop
inc
cmpsl
lcall
lock
pop
ja
shrl
inc
mov
dec
or
aas
dec
out
pusha
std
mov
pushf
push
mov
jecxz
outsl
pop
movsb
cmpsl
out
inc
jbe
xorl
arpl
mov
mov
push
repnz
mov
inc
inc
push
rcrb
xor
jecxz
sbb
sbb
cmc
mov
enter
push
out
add
mov
push
inc
cmp
cmp
aas
dec
sahf
adc
jmp
lods
sti
mov
shrl
aad
mov
js
loope
xor
or
sahf
lds
je
sub
xchg
push
mov
inc
add
outsb
mov
jb
adc
scas
mov
gs
cmp
fst
rcrl
bound
mov
fs
mov
add
lds
jecxz
mov
xor
sub
jnp
inc
bound
rolb
dec
out
loop
mov
fcmovnb
arpl
or
ja
add
movb
fs
mov
xor
fsts
xor
xchg
jb
lret
pop
in
push
lret
xchg
leave
lcall
lods
mov
mov
stos
sbb
xor
pop
cmp
in
adc
xlat
aaa
mov
or
daa
rcl
and
test
cltd
insl
lret
hlt
mov
sarb
icebp
out
movsl
gs
push
call
lods
out
std
adc
dec
mov
jp
push
mov
test
or
push
aaa
mov
stc
push
cwtl
mov
add
int3
fmuls
and
ds
fimuls
xchg
int3
xchg
movaps
arpl
gs
pop
aaa
and
sub
cmpsl
pop
rorb
lcall
out
popa
xlat
push
popa
jnp
mov
mov
aad
mov
xor
test
call
bound
data16
mov
lods
call
scas
or
xor
cmp
and
push
mov
out
inc
cltd
inc
pushf
xchg
popa
movsb
xor
xchg
and
inc
test
in
into
iret
xchg
mov
adc
out
in
and
sbb
rcr
stc
pop
or
pusha
stos
pop
pop
sbb
in
jmp
push
jo
popf
gs
mov
mov
arpl
sub
and
lock
je
push
scas
je
inc
insl
jae
js
call
dec
push
inc
jp
adc
xchg
jge
sbb
jbe
popa
in
or
jns
xchg
jmp
push
mov
sbb
sbb
mov
int3
hlt
xor
xchg
ds
data16
dec
adc
mov
xor
dec
movsb
cmp
pop
mov
xchg
mov
mov
jb
xlat
test
cltd
lcall
xchg
xchg
dec
xlat
add
pop
or
add
jmp
mov
imulb
int3
clc
adc
cmpsb
mov
pop
js
hlt
add
in
mov
inc
jecxz
pop
or
or
int3
or
repnz
xchg
push
jmp
cltd
xchg
jge
xchg
out
jnp
sbb
ds
sbbl
jno
popf
fs
jns
icebp
into
cmp
or
mov
mov
loopne
lock
cwtl
in
pusha
ror
mov
mov
dec
aaa
imul
clc
inc
mov
push
add
dec
cmpl
pop
fwait
out
mov
int3
xchg
iret
out
aam
loope
fidivl
sbb
push
cmpb
aas
hlt
inc
iret
sbb
push
mov
test
test
jle
je
imul
sub
push
adc
push
cmp
push
fisubrs
pusha
movsl
add
fsubp
out
mov
lcall
pop
dec
push
sbb
adc
cs
sbb
daa
loope
sub
xor
mov
or
sahf
test
xchg
push
cmpl
sub
lea
add
adc
mov
push
aam
addl
and
shll
pop
push
push
inc
pop
gs
ss
add
outsb
ret
mov
insl
sub
jo
adc
add
adc
mov
add
test
mov
in
xor
nop
test
jl
or
ss
push
ret
data16
jecxz
sub
lret
jbe
inc
icebp
push
push
test
and
stos
mov
imul
cmp
inc
hlt
or
jmp
aad
mov
sahf
cmp
stos
adc
sti
ss
jecxz
mov
jmp
xchg
gs
jno
ficomps
xchg
insb
push
out
inc
mov
cmp
adc
push
test
dec
jp
xor
test
stos
movsl
lahf
call
push
loop
leave
inc
jnp
jecxz
arpl
out
xchg
push
loop
imul
xor
xor
stc
add
mov
cwtl
jo
mov
in
inc
in
and
out
mov
mov
xchg
js
clc
fcmovb
dec
xlat
mov
or
pusha
lcall
repnz
call
mov
mov
popf
inc
pusha
scas
cmp
fwait
adc
mov
push
je
jb
dec
inc
insl
mov
iret
int
loop
insl
std
adc
notb
bound
daa
outsl
dec
inc
mov
jmp
or
pop
nop
add
int3
xchg
imul
jb
mov
add
inc
int
and
cli
mov
inc
sub
dec
and
in
and
mov
lret
lods
add
jno
xchg
inc
insb
pop
pop
push
outsb
repnz
dec
iret
add
inc
test
cli
xchg
repz
shlb
std
adc
adc
xchg
pop
mov
jb
jge
push
repnz
cld
inc
sbb
inc
ds
std
cmp
jnp
pop
mov
insl
fistl
or
les
mov
ret
arpl
cmp
aam
popf
cmp
dec
lods
xor
enter
xchg
fisttps
lahf
fwait
test
lea
fdivr
and
pop
data16
mov
stc
pop
cmp
mov
sbb
or
sub
mov
test
push
inc
cmpsb
push
push
mov
mov
mov
sti
insl
pextrw
adc
inc
cmpsl
mov
cs
mov
push
insl
mov
mov
addl
sub
into
pop
icebp
cmp
push
and
inc
mov
fcmovnb
or
or
xor
adc
orl
add
testl
movsb
out
push
cmp
pop
js
frstor
stos
or
push
jg
ret
shlb
mov
cmp
dec
sub
push
or
xchg
cmp
pusha
xor
ds
or
and
in
xchg
daa
insb
loop
jne
add
dec
jnp
or
sub
scas
loop
jg
adc
mov
test
addr16
fcoms
push
xor
add
in
lret
xor
inc
lds
jbe
xor
mov
stos
icebp
push
dec
rcrl
cmpsl
mov
jbe
push
lock
stc
cwtl
push
pop
mov
mov
jb
jns
sub
xchg
lods
mov
add
ret
jo
icebp
xchg
imul
pushf
filds
lret
mov
inc
xor
shll
push
add
mov
mov
mov
out
test
dec
movsb
ret
push
sbb
and
iret
jbe
stos
stos
add
lcall
mov
jle
push
lret
pusha
inc
es
dec
arpl
push
enter
in
fxch
imul
cmpsl
jecxz
pop
stos
add
loope
repz
adc
enter
daa
push
push
bound
cmp
loopne
adc
pop
mov
in
addr16
mov
push
repnz
and
ret
add
sub
sub
adc
enter
int
push
popf
or
out
sub
and
and
jno
jecxz
mov
aad
fxch
aaa
lcall
insl
data16
xchg
dec
mov
cmp
sbb
xor
mov
insl
cltd
scas
mov
sti
push
lods
push
xor
or
add
inc
sub
mov
jbe
inc
imul
in
ficoml
aas
jl
call
jge
jl
lods
in
and
jno
fidivl
cmp
aam
inc
dec
in
test
adc
jl
movsl
inc
jo
inc
cmpsl
sub
sar
mov
xor
inc
dec
cli
dec
push
and
push
stos
sbb
cmp
sub
push
xlat
push
js
scas
pop
jmp
mov
js
aaa
or
ss
adc
rcr
pop
clc
push
cmpb
aam
movsb
mov
pop
inc
jns
inc
fsubrs
mov
in
icebp
mov
pop
in
push
xchg
out
arpl
pop
scas
cmp
leave
cmp
pushf
and
mov
fs
mov
bound
xor
or
push
scas
ljmp
into
jmp
test
lcall
xor
jns
mov
dec
lods
std
xchg
pop
icebp
fisubl
or
push
sub
add
mov
insb
in
data16
xor
aas
pusha
dec
jb
mov
pop
ds
clc
or
inc
aaa
lcall
push
push
xor
sbb
iret
pop
outsb
xor
mov
cwtl
incb
and
sbb
insb
dec
mov
movsl
cmp
jb
dec
bswap
addr16
xor
or
insl
fsubs
sbb
and
jo
aas
or
inc
ds
rolb
movsl
pop
lret
sub
das
push
fisubrs
in
inc
hlt
loope
icebp
and
cld
xchg
mov
adc
push
xchg
stos
loopne
sbb
mov
loope
xor
jge
add
repnz
mov
fldt
jge
or
lgs
mov
or
xadd
imul
lock
and
xchg
pop
cld
jmp
sahf
and
and
sbb
adc
mov
cmc
fsts
scas
push
jle
cmp
and
add
negl
sbb
shrb
mov
dec
cmp
mov
out
push
ljmp
mov
popa
sub
xor
inc
in
xchg
mov
out
dec
aas
dec
pushf
push
mov
mov
movsb
inc
add
mov
and
pop
sbb
insl
xlat
xchg
jns
jecxz
rcrb
lock
push
mov
mov
mov
in
flds
dec
push
outsl
les
fsubrl
add
xchg
jp
xor
aad
fldl
jbe
inc
sbbb
push
in
jbe
je
mov
loop
dec
jb
cmp
stos
mov
fcomip
mov
mov
incb
mov
fildll
jnp
adcl
insl
cltd
test
or
bts
push
rcl
mov
test
mov
dec
add
jnp
mov
dec
pshufw
pop
lret
jp
cli
call
push
xchg
and
test
pop
add
in
and
dec
jp
jb
and
out
cmp
fsubrp
jmp
jle
sub
stos
stc
insl
pusha
icebp
push
ljmp
orb
pop
rcrl
jp
rcll
push
test
div
nop
roll
in
vpavgb
aaa
aaa
jnp
sub
je
mov
mov
add
cmove
ljmp
scas
pop
jae
into
fldl
insb
cmp
push
push
cltd
jbe
mov
repz
sbb
ret
cs
or
sbb
pop
mov
mov
add
fnstenv
clc
xor
or
mov
jbe
int3
push
mov
out
ret
mov
cltd
jecxz
adc
js
push
and
pop
push
stos
push
push
in
mov
repz
ja
inc
dec
jb
inc
sub
movsb
dec
adcl
and
mov
lret
pusha
xchg
xor
jne
jmp
cmp
loopne
pop
hlt
adc
mov
shll
out
mov
xchg
mov
cltd
push
fwait
and
clc
mov
out
sub
arpl
jg
jb
rep
std
mov
xchg
mov
mov
or
jne
loopne
pushf
ds
addr16
xor
inc
aam
xchg
cmp
aad
wbinvd
repnz
cli
cmp
test
sbb
les
lock
je
or
leave
cmp
inc
aas
out
stos
mov
outsl
adc
xchg
pop
ficoml
test
pop
movsl
gs
adc
mov
lock
sti
out
frstor
loope
into
ret
mov
cmp
fiaddl
es
push
pushf
popa
dec
jbe
call
sub
rorb
jns
push
xchg
repz
test
sbb
sub
jns
sbb
mov
insl
cmc
dec
movsb
mov
lods
and
imul
cld
adc
mov
pushf
sarb
addr16
mov
scas
sarl
sets
icebp
fstps
push
fisttpll
cmp
pop
jno
movsb
inc
mov
fsub
mov
repnz
jle
roll
nop
aaa
or
xor
mov
xor
imul
loope
or
stos
mov
stos
xchg
jo
dec
xchg
add
sub
scas
aam
cmp
dec
loop
pop
sub
mov
lock
adcl
cltd
xor
fwait
sbb
push
cmp
repz
push
movsb
push
loope
lahf
int
fwait
fwait
and
loop
aam
pushf
xchg
in
xchg
mov
daa
sbb
inc
mov
aad
xchg
in
cmc
in
mov
xor
mov
inc
mov
fisubs
mov
sti
scas
scas
loopne
cmpsl
scas
jnp
push
or
xor
fdivrl
and
shl
inc
sbb
dec
fcomi
outsb
jecxz
mov
iret
inc
mov
loop
cmp
test
dec
in
fadd
cmp
pop
nop
jae
jle
lds
sbb
jne
sbb
int3
mov
arpl
ret
push
dec
xchg
pop
xchg
inc
lods
aaa
lds
stc
out
call
cwtl
and
lea
mov
inc
test
jno
add
insb
bound
lea
mov
mov
mov
shrl
jg
gs
popf
fistps
mov
mov
xchg
jecxz
pop
sti
test
je
mov
movsb
mov
mov
je
in
mov
sbb
sbb
fiadds
jne
fcmovb
ss
or
or
pop
insb
movsb
das
imul
sbb
pop
mov
jg
adc
xchg
pop
sub
pop
mov
movd
mov
outsb
xchg
decl
sarl
outsb
jmp
xor
sub
pop
jge
icebp
lcall
pop
incb
or
or
xor
daa
mov
sbb
mov
lea
cmc
and
mov
lods
xor
icebp
push
inc
push
lock
and
adc
les
mov
fnsave
jo
jo
stc
mov
ret
jmp
pushl
mov
call
fistps
cmp
mov
add
push
and
mov
je
mov
mov
cmc
dec
pop
lahf
cmp
xchg
ljmp
sub
add
adc
ljmp
lods
xor
sbb
push
sbb
fldenv
stc
icebp
lds
frstor
test
cmp
jge
pop
test
scas
cwtl
ds
mov
inc
leave
je
lcall
xchg
sbb
popf
xchg
mov
sti
adc
out
or
sbb
insl
psubusw
xor
mov
push
mov
adc
xchg
ss
mov
dec
jmp
ljmp
ss
aam
mov
loopne
aam
movsb
add
mov
dec
es
fbld
outsb
repnz
call
push
rcll
sbb
mov
sub
push
mov
push
add
jl
adc
xchg
sbb
jmp
jae
jmp
scas
add
mov
bound
adc
adc
shl
pusha
outsl
add
lods
or
xorl
mov
popf
data16
cmp
dec
test
sbb
push
inc
and
repnz
cltd
push
jnp
jl
fiadds
pop
in
sbb
sub
xor
inc
test
test
out
scas
bound
mov
dec
xor
cmpsb
xlat
pop
pop
pop
xchg
push
mov
xchg
sub
fimuls
mov
adc
or
sub
push
dec
sbb
dec
cmpl
int3
xchg
xchg
divl
sub
jnp
imul
enter
out
jno
ds
nop
mov
scas
dec
int3
sbb
test
test
adc
in
or
push
xchg
adc
sbb
bound
movsl
repz
and
mov
nop
sbb
cmp
xchg
jbe
gs
mov
push
dec
arpl
push
into
pop
inc
mov
sub
lds
lock
fcompl
aam
insl
mov
inc
jge
mov
cmpb
and
fmull
cmp
sarb
add
mov
cmpsl
adc
aas
fstpl
mov
sub
xchg
std
insl
cmp
lods
ret
out
mov
lcall
xor
fbstp
hlt
bound
mov
ja
or
aas
dec
adc
loopne
daa
fwait
pop
out
lock
icebp
es
mov
mov
ss
fstl
in
sub
out
lcall
jecxz
mov
add
out
adcb
fadd
ret
jle
pop
sub
xchg
mov
ljmp
jbe
movaps
xor
lods
mov
test
rcrl
mov
bound
cmc
test
outsb
cwtl
loope
loop
and
outsb
sti
push
dec
sti
outsl
mull
pop
push
fwait
test
les
das
cmpsb
iret
imul
rcrl
pusha
jb
pop
inc
pusha
xor
mov
arpl
shll
repnz
add
xor
rclb
push
adc
movsl
orb
nop
cmp
cltd
push
fwait
cwtl
idivb
movsl
pusha
cmc
mov
mov
icebp
xchg
xlat
and
mov
sbb
cwtl
inc
cwtl
ljmp
test
mov
stos
stos
aas
cmc
dec
movsb
js
int3
xor
sub
jno
lret
lea
mov
mov
xchg
push
add
pop
aad
cmpsl
xchg
push
sub
loope
fsub
lcall
jle
into
ss
rcr
jge
inc
test
push
andl
movsb
es
jmp
out
stc
leave
imul
movsl
insl
mov
iret
rcrb
aaa
add
adc
popl
sub
xchg
mov
enter
popf
loopne
pop
ljmp
bound
push
out
jp
pop
add
pop
stos
pushf
add
mov
roll
int3
push
pop
jle
ljmp
into
mov
fstpt
mov
out
push
cmp
mov
xor
cwtl
mov
repnz
mov
pop
lret
mov
aad
push
add
push
xor
sub
mov
adc
mov
jbe
cmp
lods
cmpsb
mov
adc
sar
int3
or
out
add
jmp
enter
loopne
mov
xchg
gs
or
out
adc
jp
jl
push
and
and
and
int
xor
das
outsb
imul
mov
sub
scas
cmp
cmp
bound
adc
insb
push
aam
je
mov
dec
cmc
insb
lret
jne
jmp
stc
enter
in
lea
and
jae
aaa
pushf
imul
roll
cltd
or
out
fwait
in
shlb
and
popf
pop
rcll
push
hlt
scas
test
mov
mov
xor
sbb
bound
cmp
sub
mov
call
lret
or
pushf
push
cwtl
es
sbb
test
cltd
addl
dec
or
popf
mov
movsl
xor
test
loope
mov
jne
push
xchg
das
movsl
notb
lock
push
jg
scas
shrl
ja
aad
mov
mov
mov
push
pop
push
mov
sti
xchg
dec
test
cld
xchg
pop
lds
sub
pop
in
stc
mov
ss
clc
test
fldl
test
pop
sbb
xor
add
xchg
in
push
outsb
and
pusha
mov
subl
or
sbb
xor
adc
test
fmull
jbe
ret
pop
fmull
je
inc
and
fstpt
leave
loope
and
jnp
and
test
fmuls
xchg
jg
mov
jae
inc
pop
add
cmp
sbb
add
enter
pop
lcall
add
repz
nop
jnp
jmp
mov
xchg
mov
jmp
adc
sbb
insb
jo
test
repnz
daa
cmp
sti
jbe
mov
sub
add
add
mov
pushf
pop
push
stos
mov
cmp
pop
cmc
lea
adc
xlat
outsb
movsl
xor
icebp
shlb
dec
mov
inc
sub
in
arpl
xlat
jg
jle
pop
mov
cmp
adc
js
movsl
cmpsb
aam
cmp
xor
pusha
das
enter
insb
mov
dec
xor
cs
adc
call
jo
xchg
mov
add
pop
cli
dec
mov
shll
mov
mov
es
enter
jg
mov
lahf
dec
cmp
repz
xor
sarb
mov
popa
mov
pop
mov
pop
loope
mov
xor
adc
mov
dec
iret
sarl
xor
repz
pusha
out
jge
push
nop
or
pop
std
or
pushf
dec
stc
insl
mov
mov
rcrl
cli
adc
sbb
mov
push
loop
out
repnz
movsb
mov
add
jmp
sti
push
xchg
mov
dec
cmp
test
mov
pop
lods
imul
ss
fdivl
push
push
pushf
dec
mov
adc
ds
fsubrl
push
ret
mov
xor
lds
cmp
mov
sub
inc
ljmp
fstl
cli
in
pop
mov
mov
test
or
sub
jmp
and
adc
stos
in
sub
pop
mov
popa
mov
mov
sbb
movsl
xor
clc
out
add
xchg
cli
cmp
sti
push
loop
and
stc
and
push
pop
mov
nop
shl
mov
repnz
pop
movsl
in
xchg
push
cltd
dec
shrl
std
nop
es
lret
movsb
aad
dec
enter
jg
ficompl
arpl
xchg
imul
out
dec
or
stc
add
add
inc
lahf
outsl
xchg
inc
cmp
insb
das
mov
imul
orl
mov
xchg
lcall
out
mov
stc
adc
ljmp
mov
mov
jb
out
rol
and
sub
bound
dec
scas
jbe
je
call
pop
in
sarb
lods
xchg
jge
movsb
pop
pop
mov
lds
jb
adc
std
bound
mov
mov
test
sub
sub
mov
lret
loop
fisttpl
pusha
fldt
inc
pushf
stos
jb
mov
or
xchg
inc
es
ffreep
stos
or
fsts
outsl
call
imul
sbb
adc
lea
cmp
inc
in
jecxz
outsb
or
call
sbb
out
push
imul
loope
and
push
into
test
xchg
jp
push
dec
and
lods
xchg
leave
fs
mov
or
int
bnd
mov
cmp
das
jno
pushf
mov
add
mov
mov
dec
or
rep
hlt
andb
xchg
lods
jecxz
test
ja
enter
popa
outsl
test
add
xchg
inc
cmpsl
xor
xor
ror
mov
fidivs
xor
cs
loop
imul
mov
mov
adcb
divb
std
rcll
jne
mov
les
mov
test
rol
pop
cwtl
jp
icebp
insb
fs
jge
adc
orb
popl
lock
adc
inc
inc
cmp
xor
xor
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
divl
pop
jl
aas
aad
mov
out
jg
push
xchg
nop
jecxz
frstor
inc
mov
call
sti
sar
js
mov
dec
lock
inc
rsqrtps
xchg
mov
xchg
mov
cmc
xchg
test
push
mov
cmp
into
mov
into
mov
pusha
outsl
mov
xor
jae
jge
sbb
shl
movsb
fldcw
insb
stos
test
inc
ljmp
cmp
cmp
xor
in
sarl
fisttpl
cmp
sbb
aam
pop
cmp
repnz
push
push
xor
imul
lods
jp
xchg
hlt
jg
js
push
fisttpl
ja
ja
mov
movsb
fst
sub
fcoml
nop
lahf
or
cmp
jns
filds
and
imul
dec
mov
outsb
push
or
pop
loop
scas
fnsave
out
es
rorb
xor
mov
xchg
mov
movsl
xor
adc
test
and
jg
pop
sbb
sarb
decb
push
out
daa
cwtl
repnz
repz
xor
inc
data16
sar
lock
inc
mov
mov
js
ljmp
daa
dec
inc
fs
xchg
adc
pushf
sti
iret
insb
sahf
push
jne
lods
mov
mov
fisubrs
inc
and
mov
imul
lea
dec
inc
decl
sbb
dec
test
pop
add
mov
mov
xchg
xchg
jno
outsb
sbb
loope
sbb
fsubl
fildll
int
mov
ss
ljmp
hlt
sbb
add
cmp
movb
and
hlt
rorb
pop
push
lea
adc
icebp
mov
inc
stos
mov
insl
movsb
add
mull
or
mov
ja
or
test
or
imul
movsb
adc
sti
push
push
in
xor
xchg
and
ret
inc
cs
bound
inc
fcmovne
cmp
mov
mov
sbb
std
cmpsb
ljmp
loopne
ret
adc
sub
jecxz
test
sub
dec
cmp
sbb
push
lahf
or
scas
loop
sub
and
scas
and
xchg
adc
xor
sub
or
add
mov
adc
pop
xchg
jmp
and
xchg
notb
mov
loopne
dec
cmp
push
inc
test
xlat
sarl
sub
adc
aaa
in
sti
sub
fcompl
xor
xor
cmp
xor
pop
outsl
adc
pop
or
jg
mov
scas
das
je
popf
out
and
aas
idiv
fiaddl
pop
inc
push
mov
cmpsl
mov
test
jg
mov
loop
pop
sbb
insb
push
ret
stos
mov
dec
fistpll
mov
inc
mov
xchg
out
inc
stos
xlat
ficompl
xor
inc
faddl
cltd
lock
inc
and
cmp
sbb
mov
xor
adc
dec
popa
jl
mov
aas
dec
and
jmp
aam
dec
xchg
cmp
cmp
aaa
mov
lock
mov
sbb
sub
push
sub
in
jmp
push
mov
add
cmp
adc
fnstenv
ja
outsb
movsb
loopne
and
mov
ljmp
lods
ficomps
sub
or
inc
pushf
pop
popf
mov
dec
bound
jo
lds
mov
in
pop
xor
inc
shrl
or
imul
aaa
stos
add
jo
imulb
xor
mov
sub
mov
sbb
sub
pop
mov
mov
aam
and
pop
add
adc
mov
in
xor
popf
xor
gs
pushf
test
and
insb
mov
jb
int3
mov
mov
inc
jl
pop
fucomp
jle
xor
xor
sbb
cmp
cmp
mov
insl
outsl
adc
inc
rorb
pushf
push
pop
leave
or
shrl
push
jp
inc
push
mov
fdivs
pop
push
clc
mov
idiv
repz
and
cmp
daa
lahf
adc
mov
mov
adc
adc
lea
ds
push
push
xchg
dec
repnz
rorl
in
call
fdiv
stos
jne
in
xchg
mov
loop
stc
data16
jb
sbb
sub
or
aam
adc
outsl
cmpsl
rcrl
rclb
scas
inc
dec
pushf
jg
pop
mov
xchg
adcl
push
push
scas
pop
mov
xlat
push
ds
decb
popa
adc
rcrb
cmp
sti
scas
or
push
icebp
add
dec
mov
lods
out
pushf
xchg
pop
cs
pop
push
icebp
xchg
jbe
add
mov
pusha
push
xor
leave
inc
xchg
addl
sti
sbb
sub
adc
adc
dec
adc
mov
shlb
or
xor
mov
xorl
loope
xor
mov
lret
movsb
xor
mov
mov
mov
movsl
inc
aas
addr16
pop
fcmovb
mov
js
mov
enter
adc
sbb
xchg
lods
imul
mov
arpl
jae
outsl
enter
movsb
je
xor
aaa
mov
pop
inc
pop
mov
ds
lds
add
jg
rolb
or
xchg
add
jp
hlt
ret
out
jns
das
outsb
inc
jp
pop
inc
test
repnz
add
pop
push
push
js
jg
jno
mov
cmc
mov
mull
inc
loope
mov
add
out
cli
mov
imul
inc
mov
xor
pop
bound
dec
adc
or
or
jo
out
out
gs
dec
testb
sbb
xchg
mov
rorl
mov
stos
xor
stc
cmp
movsl
daa
and
movl
cmpsb
loopne
mov
shlb
sub
out
call
and
push
push
xchg
mov
pushf
xor
cmp
aaa
push
push
push
insb
je
inc
daa
or
lahf
shrl
jne
dec
fildl
push
icebp
jne
push
ror
add
mov
push
push
xchg
iret
and
cmp
adc
xchg
frstor
in
data16
xchg
sub
dec
cmp
lock
add
dec
jbe
inc
push
mov
lods
mov
roll
flds
shlb
iret
fidivrl
and
stos
leave
pop
aaa
sub
xchg
add
jecxz
imul
dec
int
out
xchg
test
fcoms
cld
push
pop
cmp
jmp
or
je
mov
aaa
mov
mov
cmp
imul
rcrb
jnp
inc
ss
cmp
cmpsl
pop
loop
movsl
jo,pn
push
jbe
gs
shrl
popa
pop
dec
xchg
imul
jl
js
out
inc
clc
out
lds
xlat
pushw
sbb
xchg
ds
lods
cmc
and
xchg
mov
pop
mov
fistpll
cmp
insb
sub
mov
sub
lret
mov
repz
inc
loop
test
sbb
pop
scas
daa
pop
dec
pop
out
dec
loop
dec
mov
jns
lea
ja
rcrb
imul
adc
in
push
cmc
mov
xor
pop
xor
sub
test
mov
xchg
mov
lock
mov
jmp
fcomps
cmc
cmp
insb
xchg
mov
xchg
hlt
out
fldcw
insl
inc
lcall
push
inc
inc
adc
fsubl
pop
add
sub
dec
jne
xchg
mov
dec
mov
pop
pop
lock
and
movsl
mov
mov
cld
or
adc
jl
test
aaa
jns
frstor
jp
push
dec
movsb
in
test
inc
push
out
shl
call
jne
pop
xor
dec
push
ret
fstpl
push
push
inc
mov
or
xor
push
ret
js
mov
clflush
pop
repz
mov
loop
xchg
rcr
inc
xchg
jb
hlt
pop
xor
aam
fcomps
xchg
sub
xor
pushf
xchg
sbb
sbb
dec
jns
out
rcrl
lods
int3
cmp
sbb
pop
fsubs
movsb
inc
add
cmp
add
pop
cmp
pop
clc
jecxz
xchg
mov
sbb
and
ss
push
dec
filds
js
pushf
cmp
xchg
push
sub
xor
push
push
aas
jb
jp
mov
aaa
ret
cmp
cmp
cmp
arpl
out
push
push
sbb
xor
pop
xor
lahf
xor
cld
cmp
jl
mov
les
inc
test
push
jle
imul
jno
mov
lret
fldl
lea
outsb
inc
andl
shlb
inc
rcll
aad
and
gs
push
push
and
jp
repnz
jge
ja
push
ret
pop
inc
inc
push
sub
sub
mov
jo
imul
push
in
dec
jg
pop
lcall
xor
add
push
je
mov
and
loope
jg,pn
xchg
and
call
fwait
lcall
out
xor
or
jmp
dec
es
in
dec
stos
mov
push
push
fistpl
pop
aas
mov
xor
push
fnstcw
les
loop
pop
xlat
or
mov
out
jmp
mov
fprem
jge
cmp
adc
inc
int
adc
jecxz
and
push
and
cmpsl
popf
rorl
push
sbbb
pop
jp
cmp
ljmp
into
push
cmpsl
js
jg
je
scas
inc
jge
mov
pop
mov
movsb
adc
mov
mov
adc
xor
stos
data16
push
mov
sarl
div
jbe
es
pop
push
mov
orw
mov
cmp
jmp
xor
push
dec
jecxz
push
imulb
aaa
insl
and
stos
jp
scas
sbbb
pop
aam
pusha
out
shlb
js
fimull
sub
cltd
add
fwait
xchg
dec
inc
jnp
mov
inc
test
jns
jge
dec
loope
loopne
mov
ret
push
test
popa
and
fsts
insb
cld
cmp
out
mov
rorb
or
sbbb
ss
cmpsb
dec
or
pop
mov
frstor
lods
add
mov
rolb
loop
xchg
push
xchg
mov
cmc
pop
cld
pop
inc
test
fsubrp
lock
lret
pop
hlt
aas
push
in
shlb
sbb
push
mov
inc
fdivl
mov
push
js
daa
add
ss
cmpsb
sub
lds
and
xchg
xor
pop
mov
std
nop
sbb
sbb
sti
xor
push
or
in
shll
xorl
xchg
add
shrb
stos
cmp
pop
loopne
stos
mov
int3
scas
insl
adc
outsl
pop
into
pusha
jae
loopne
cli
and
xchg
daa
mov
dec
jb
mov
cmp
insl
rolb
adc
scas
cwtl
add
shll
aad
popf
pop
fdivl
fcoml
sub
mov
rorb
bound
dec
dec
movsb
mov
jae
cmp
test
dec
out
cmpsb
jmp
jge
cmp
or
ret
adc
xor
mov
aam
hlt
push
xor
out
sbb
in
jg
outsb
cwtl
lea
pop
add
cmpl
shr
test
arpl
scas
pop
sub
lods
jmp
xor
mov
out
mov
inc
or
lcall
jle
mov
repz
inc
jle
pop
mov
jne
mov
xor
jbe
xchg
es
mov
cmp
add
and
jg
ss
int
in
mov
fcmovnb
shrl
jge
mov
leave
shr
push
fistl
mov
out
jnp
push
es
out
xchg
mov
imul
mov
pop
or
sub
insl
lcall
test
dec
int3
fnstenv
sbb
xor
inc
pop
jg
test
add
sbb
dec
push
xor
inc
imul
sbb
jns
lds
pushl
add
lods
cmpsb
mov
mov
repnz
jae
dec
cmc
mov
add
xor
bound
aad
inc
jo
rcll
mov
xchg
mov
mov
nop
mov
jb
addr16
mov
adc
xor
add
insb
imul
in
jo
inc
push
mov
cmp
xchg
add
lods
fwait
or
pop
sub
ret
sub
push
or
stc
repnz
clc
mov
xchg
xor
push
out
into
daa
xlat
pusha
xchg
mov
dec
inc
sub
sub
enter
outsl
rorb
lret
cli
inc
dec
xor
mov
or
in
xor
stc
ret
repz
fwait
divb
icebp
aaa
xor
adc
es
and
data16
daa
test
dec
stos
push
fs
aad
mov
push
call
in
inc
cwtl
cmp
sub
fcompl
xchg
imul
test
mov
mov
xor
xchg
xchg
or
add
rolb
ret
mov
testl
dec
insb
inc
mov
ds
pop
and
and
mov
xchg
fstl
pop
sbb
pusha
xor
xchg
mov
xchg
mov
lcall
jb
pushf
les
lcall
mov
mov
js
push
fiadds
sub
mov
shr
cmpsl
nop
stos
xor
xor
mov
push
int
loop
xchg
ss
ljmp
cmp
xor
int
dec
adc
push
adc
xlat
xor
inc
outsl
cmp
add
stc
dec
ds
loope
mov
mov
repnz
jmp
sub
push
xor
jnp
popa
lea
mov
mov
jge
jmp
mov
mov
scas
xorb
loope
sub
jb
gs
popf
insl
ss
nop
std
xlat
sti
add
lds
xchg
push
mov
adc
ret
push
add
aad
cmp
stos
dec
jne
data16
mov
ficoms
push
pop
jne
push
call
or
sahf
add
clc
push
sub
movl
xchg
jb
or
push
xor
pop
fsubr
ret
cwtl
lcall
sub
mov
imul
popf
mov
cmp
std
sub
sub
add
or
loopne
cmpl
xchg
imul
pop
or
gs
mov
mov
aaa
and
dec
jb
std
daa
lret
std
stos
adc
jne
jne
sbb
lret
add
sti
sub
ficoml
fmul
and
xchg
sbb
sub
imul
xchg
mov
mov
dec
mov
xchg
mov
lods
popf
int
jns
sbb
push
cmp
in
and
outsl
mov
adc
insb
arpl
andb
or
sub
mov
sub
and
mov
mov
lcall
clc
sub
outsb
cltd
push
iret
sub
bound
dec
adc
add
mov
mov
pop
sub
or
std
in
jmp
out
rcl
mov
out
and
fldt
or
popf
add
cwtl
xchg
jne
gs
jle
mov
fdivrs
in
loopne
inc
outsb
inc
push
xor
or
cmpsl
lret
sub
in
nopl
test
in
push
mov
sub
mov
fs
les
mov
xor
clc
sbb
ss
mov
mov
xchg
in
lock
xchg
repz
sahf
adc
xchg
mull
jle
lds
or
mov
out
inc
pop
mov
popf
loop
movsb
fldl
outsb
sbb
movsb
pusha
cmp
icebp
xor
and
adc
dec
dec
std
lahf
cmc
call
lods
shl
push
push
and
dec
cs
sbb
cmpl
cmp
mov
loopne
and
notl
adc
adc
jmp
movsb
push
repz
mov
mov
mov
lretw
xor
cmp
repz
and
sub
xor
mov
imulb
mov
outsb
mov
sbb
cmpsb
dec
jns
mov
andl
xor
lahf
add
xor
fimuls
cmp
popf
movsl
mov
cltd
add
loop
fldt
mov
xchg
dec
pop
or
ja
push
pop
push
rcll
jg
lea
push
je
lahf
iret
pop
pop
add
mov
jge
add
in
and
xchg
call
mov
aam
push
add
cmp
sbb
out
jp
pop
inc
icebp
faddl
sti
in
push
icebp
and
or
mov
xchg
pop
sub
add
aaa
cmp
pop
mov
rolb
inc
add
pop
in
dec
push
mov
add
shrb
hlt
arpl
pusha
stc
es
dec
pop
std
bound
sbb
leave
xlat
inc
adc
sub
fstpl
mov
int
cld
and
outsb
jl
filds
inc
lea
sbb
aad
loop
push
cmp
cmp
cmp
mov
sub
xchg
inc
mov
ror
ret
loope
leave
scas
aam
lods
or
inc
je
into
cmp
mov
nop
cmp
bound
push
fs
hlt
pop
pushf
cmp
or
int3
in
xlat
xor
push
jmp
cmp
aad
idivl
push
jp
popf
pop
cli
test
shrb
mov
outsb
xchg
scas
pop
add
shlb
and
or
psrlw
outsl
adc
std
cmp
mov
pop
adc
push
adc
popf
push
clc
mov
mov
xor
dec
aam
sub
add
lret
mov
sbb
or
mov
pop
testl
push
mov
sub
sahf
rcrb
cs
sbb
fucomip
xchg
movsb
outsb
stos
scas
dec
sbb
clc
arpl
and
jbe
xor
sahf
jge
mov
inc
sub
nop
das
and
dec
popa
sbbb
jmp
jne
jmp
sti
addr16
shl
add
jle
pop
fsub
xchg
das
pop
lods
out
push
push
in
mov
or
addr16
int
popa
dec
icebp
inc
cmp
out
fwait
inc
dec
mov
popf
jb
xor
add
aad
pusha
stc
mov
mov
mov
addr16
push
aaa
sti
lcall
or
cmc
push
gs
movsl
pop
repnz
xchg
push
cwtl
sbb
aas
repz
xchg
bound
jbe
mov
leave
jecxz
mov
cwtl
xlat
sub
mov
xor
out
cmc
add
sbb
je
enter
rorl
out
mov
sub
and
or
cmp
and
mov
mov
js
mov
dec
jmp
or
push
sahf
cmp
jnp
xchg
add
mov
daa
into
test
jb
shll
inc
adc
fsubs
sbb
add
in
popa
ds
aad
sub
repz
out
fwait
sbb
std
jge
lret
fmuls
mov
out
adc
shr
lret
mov
and
lods
jle
out
fcomps
movsb
adc
jae
and
adc
mov
mov
movsb
add
add
sub
pop
scas
iret
mov
add
test
cld
rclb
jge
sbbb
jo
xchg
in
outsb
mov
fcompl
pop
inc
and
mov
bound
sti
subl
pop
out
aad
mov
mov
das
sbb
iret
jmp
popa
pop
or
std
clc
push
lods
cs
seta
pop
je
outsl
pushf
lods
mov
jmp
pop
hlt
jo
lcall
std
push
into
fldl
scas
test
fistpl
pop
adc
out
adc
mov
idiv
arpl
dec
subps
aam
sub
xchg
push
stc
sub
aam
sub
mov
into
sbb
cmpsb
cmp
movsb
sub
cs
mov
faddl
out
sbb
clc
add
out
out
add
sbb
out
sbb
test
mov
ret
dec
out
shll
xchg
push
cwtl
push
sti
pop
pop
jb
lret
testb
aas
in
addb
int3
xchg
mov
cli
inc
push
xchg
xchg
pushf
scas
subl
add
sbb
sub
sub
mov
and
repz
test
push
mov
adc
out
aad
dec
sub
aad
jae
lods
sahf
cmp
pop
das
sub
addb
icebp
iret
outsl
ljmp
inc
pop
icebp
xchg
mov
xor
cmp
incl
push
cmc
daa
sbb
cli
addl
pop
call
cmp
dec
dec
mov
push
push
mov
inc
repnz
jge
mov
inc
xchg
outsb
fst
lods
mov
stc
dec
jno
cmp
shlb
sub
jne
andb
add
or
and
mov
jecxz
jbe
mov
cltd
cli
ss
cmp
cli
mov
and
es
jl
dec
sub
js
lret
idivl
adc
icebp
jno
outsb
or
sbb
loopne
dec
cmp
outsb
loope
out
jae
push
mov
jmp
outsl
adc
arpl
push
je
inc
fldcw
into
cmc
cmp
idivl
cmp
mov
into
out
rcll
fimuls
dec
push
mov
cld
xor
dec
add
xlat
jne
lds
lahf
sti
pusha
rol
sbb
mov
push
and
jge
jle
mov
loope
ss
dec
test
push
push
out
mov
add
fnstsw
pushf
or
rcl
dec
negl
imul
adcb
push
add
int3
nop
jns
aaa
and
jae
inc
jecxz
push
push
sbb
insl
fisttps
repnz
pop
ficomps
into
lock
mov
or
cltd
jns
mov
xchg
movsb
and
cmp
xchg
clc
pop
test
push
fstpl
adc
stos
inc
jl
pushf
dec
mov
jns
addb
cmc
cmp
mov
fxam
and
insb
mov
push
push
jl
pop
js
sbb
pop
aas
dec
js
push
sti
fcmovu
jb
or
cmp
adc
cmp
cmp
inc
call
sbbl
xlat
mov
pop
adc
pop
rorb
fistpl
gs
iret
jo
dec
adc
mov
aas
mov
fs
sbb
ret
inc
push
mov
mov
daa
jo
cmp
int
dec
add
loop
jge
lods
xor
sahf
jge
sahf
mov
mov
icebp
push
into
and
rcll
pusha
push
and
in
lods
gs
sub
jmp
mov
add
inc
mov
and
pop
push
pop
mov
pop
xor
nop
aam
in
mov
push
sbb
xchg
or
push
test
cmc
push
sbbl
sti
or
ss
sbbl
push
and
sbb
arpl
cmp
lods
aas
push
repnz
rep
insl
sbb
adc
pop
imul
mov
les
and
cltd
les
addr16
int3
add
data16
dec
inc
or
popf
add
fidivrs
xchg
sbb
push
xlat
sub
jmp
mov
cmp
rorb
mov
xchg
xchg
jb
popf
mov
orl
mov
sbb
push
sub
imul
inc
or
in
push
in
sub
and
mov
ret
pop
jb
scas
jo
dec
mov
ret
fmul
cmp
sar
test
mov
mov
xchg
pop
mov
call
scas
fidivs
and
cmpsb
int
repz
or
addr16
xor
sbb
mov
mov
cli
mov
push
movsb
mov
fldl
jo
dec
gs
push
push
into
jnp
adc
or
mov
stos
repz
lret
iret
aam
in
jge
test
iret
push
incl
pop
pop
test
pop
adc
mov
stos
inc
into
cmp
inc
pop
rcl
fs
push
or
imul
or
jnp
rorl
fsubrl
jg
or
aas
mov
insl
xor
scas
icebp
test
mov
stos
xchg
push
xchg
test
pop
dec
ret
pop
push
push
push
or
repz
jp
cmpsl
mov
jg
and
push
data16
mov
push
sub
cltd
adc
sub
sbb
sbb
sub
iret
xchg
xchg
mov
popa
push
les
cld
ret
les
outsb
push
jmp
pop
imul
push
inc
pop
int
sahf
mov
mov
roll
xor
dec
imul
cli
sbb
cmc
ror
insl
ret
jb
popa
inc
xchg
push
stc
stos
sbb
or
mov
mov
pop
ret
adc
pushf
add
sbb
clc
mov
andl
xchg
pop
adc
shrl
push
leave
mov
cmc
jae
inc
cltd
or
mov
je
adc
and
inc
testl
addr16
dec
sahf
dec
mov
roll
sbbl
sbb
jecxz
into
xor
cmpsl
fbstp
in
daa
aaa
shll
push
dec
ss
jg
stos
leave
lcall
sbbl
adc
and
lcall
lahf
mov
nop
mov
sbb
or
or
pushf
lock
iret
push
test
aad
fmuls
mov
mov
push
imul
scas
sub
fs
inc
daa
sub
std
pop
movsl
fimuls
fsubs
inc
out
mov
sub
cld
stc
mov
cmp
adcb
leave
icebp
imul
cmp
popa
in
movsb
iret
cmpps
ret
pop
inc
dec
pop
fstl
cmp
dec
int3
call
mov
enter
sbb
inc
imul
pop
enter
mov
add
movsb
jae
aas
mov
sub
mov
jle
cs
fisubrl
push
xor
mov
das
inc
js
cmpsl
popa
loopne
inc
mov
inc
or
rorb
mov
gs
adc
or
xlat
jl
sbb
test
nop
pop
rorl
jp
jl
outsb
incb
aas
addr16
popf
stos
xor
addr16
imul
xchg
sbb
cs
aas
cmpsb
xchg
jge
jmp
cwtl
enter
outsb
es
mov
mov
imul
sti
pusha
dec
or
loope
outsl
insl
out
lcall
inc
push
lret
fsubp
mov
pop
insb
outsb
shr
dec
push
mov
ja
imul
out
or
mov
aad
shl
in
and
jecxz
scas
jp
inc
adc
cmp
xchg
or
es
add
sub
add
loope
loope
sbb
sti
mov
push
lods
clc
add
jne
push
mov
mov
sahf
ja
dec
push
jnp
mov
test
and
js
stos
xorl
fs
fs
xor
leave
dec
lods
or
xor
fnstenv
and
leave
pop
add
jnp
adc
mov
test
iret
out
inc
push
loopne
inc
sbb
outsl
jecxz
mov
dec
pop
add
cmp
xchg
jno
mov
adc
pop
xor
enter
out
pop
xchg
push
mov
add
mov
sub
adc
adc
push
rcll
push
jl
leave
es
push
push
lret
test
mov
loope
lcall
outsb
ljmp
scas
iret
lods
fists
adc
lret
push
xchg
xchg
inc
clc
pop
loopne
or
push
das
pop
xlat
ficoms
cli
fisubl
dec
jns
xor
jg
cmp
xor
mov
add
das
xor
bswap
leave
outsl
imul
mov
sbb
inc
out
movsl
pusha
fildl
int3
idivb
jns
dec
mov
or
daa
or
or
pop
stos
mov
xlat
and
push
cli
sti
jne
add
and
xor
jg
stc
scas
or
jb
mov
frstor
xchg
pop
aam
or
xchg
sbb
insb
mov
enter
test
popf
and
or
inc
in
pop
mov
jmp
rcr
and
shr
or
push
mov
call
inc
js
jbe
mov
shlb
add
mov
push
ss
sbb
cmp
jne
fs
insl
mov
ret
cmp
sbb
jne
cmp
or
rcrl
hlt
sbb
xor
ret
mov
adc
xor
mov
mov
mov
dec
cli
rcl
imul
sub
adc
frndint
push
jl
insb
aas
push
or
pop
loope
insb
xor
cld
call
scas
or
pop
cwtl
cmpsl
fisubs
ja
and
and
inc
mov
stc
adc
mov
stos
adc
out
andb
lahf
imul
and
hlt
arpl
or
pop
mov
in
mov
ret
mov
xor
mov
xchg
cmpsl
or
xchg
inc
xor
stos
and
lea
rclb
or
cld
mov
fildl
mov
test
shl
fwait
inc
jae
lock
jecxz
jg
lods
jp
mov
add
leave
cmpsl
adc
pop
pop
sub
push
inc
add
mov
or
jns
gs
sbb
xchg
jae
andl
pushf
push
mov
inc
cmc
lods
out
jne
leave
jb
xor
mov
test
divb
lret
loope
ljmp
movsb
fdivrp
js
movsl
mov
daa
leave
push
jl
fwait
daa
jp
push
mov
into
nop
ja
nop
sub
inc
daa
push
mov
std
mov
mov
add
and
and
sbb
pop
in
mov
ja
loopne
out
cmp
sarl
xchg
sahf
xchg
xchg
jns
or
or
xor
pop
subb
gs
jb
jl
push
sti
pop
sub
push
jmp
pusha
and
push
mov
lea
inc
sbb
adc
in
sub
jb
inc
xor
xor
cs
sub
imul
inc
enter
lods
mov
mov
aad
aas
xor
roll
inc
arpl
jns
push
scas
je
clc
shlb
fnstenv
es
inc
dec
mov
in
int
cmp
icebp
clc
dec
arpl
in
jbe
in
ret
pushf
mov
adc
fistpll
test
daa
dec
jge
out
testb
sbb
test
cs
and
and
add
ret
mov
sub
out
mov
and
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
fs
jg
xlat
mov
call
pop
push
jne
add
jmp
inc
push
dec
outsb
call
sti
lock
fisubrl
sub
lea
aaa
stc
dec
add
fs
mov
pop
mov
aaa
sub
inc
mov
pop
cli
sub
inc
push
leave
dec
lret
or
jecxz
mov
add
dec
gs
movsl
cmp
mov
xor
aaa
mov
jg
ss
js
and
mov
test
cltd
test
arpl
cwtl
fistl
in
aad
repz
adc
xchg
jns
test
jns
and
dec
outsb
movsl
ljmp
fdivrl
add
ss
and
lea
mov
addr16
push
dec
in
sbb
push
fs
std
cmp
push
adc
xchg
pop
outsl
cmp
in
sub
or
lds
loop
push
adc
fs
mov
aas
cs
pushf
mov
mov
mov
mov
shl
int3
test
or
dec
and
adc
fcmovnbe
sarb
loop
lret
jl
mov
sub
mov
lret
scas
lahf
pop
push
shrl
sar
fdivr
xchg
rcr
cmp
out
sarl
xchg
or
push
or
inc
out
sub
repnz
ret
lock
sub
sub
xchg
adc
repz
lods
call
mov
push
mov
stos
cltd
xchg
dec
push
rclb
inc
fnstsw
and
jle
mov
sbb
fists
sub
and
or
lds
icebp
inc
and
cmp
add
adc
fnstcw
and
call
aam
xor
lods
test
mov
xlat
addl
mov
loopne
hlt
cli
aaa
jns
mov
insl
jl
ret
subl
xchg
pusha
mov
into
mov
xchg
call
adc
inc
clc
adc
mov
cmpsb
adc
and
nop
movsl
jns
jb
and
push
cmpsl
fsubrs
pop
roll
cmp
mov
lret
stos
sbb
scas
lahf
rcr
mov
or
jnp
push
mov
les
push
pop
adcb
pop
les
imul
ljmp
sub
scas
adc
push
jb
sbb
pop
jno
subb
int3
pop
sub
ret
mov
sub
pop
in
repnz
outsl
lcall
pushf
dec
int
mov
push
std
push
xchg
sbb
fwait
cwtl
insb
sarb
fldenv
lea
out
inc
sti
rcrl
cmp
dec
cmp
cmp
aaa
fisttps
mov
cs
and
xchg
inc
or
mov
lock
jg
rorl
xor
loopne
test
sbb
sbb
sbb
inc
jno
push
hlt
ja
divl
and
jbe
orl
push
inc
inc
mov
mov
loop
into
rorl
mov
add
cmc
iret
jecxz
push
pop
cwtl
push
mov
bound
or
imul
int3
fstps
into
push
mov
jo
push
addl
in
lret
subl
inc
sub
mov
or
fistl
or
xchg
xchg
jle
push
inc
mov
lahf
push
dec
mov
roll
inc
xor
pop
add
and
movsb
mov
and
sbb
testl
add
repnz
mov
das
repz
inc
mov
ss
das
or
jmp
mov
stos
pextrw
mov
mov
lea
lret
cli
mov
sub
decl
jl
aas
cmp
out
dec
pop
shrl
out
mov
adcb
int3
stos
imul
sbb
dec
pop
push
push
and
or
inc
loopne
fimull
mov
test
movsb
call
stc
cmpsl
mov
pop
pop
ret
pop
xor
jp
sbb
xor
cmp
jne
sbb
pop
push
loop
sub
and
xchg
in
cli
aaa
inc
insb
je
fsubrl
mov
push
filds
lahf
xchg
aas
push
or
sub
movsl
adc
pop
push
or
sahf
imul
pop
sub
push
lods
call
js
cli
js
mov
fsqrt
pop
mov
out
pop
cmp
push
shrb
dec
je
lret
fdivrs
test
jp
mov
add
push
mov
cmp
xchg
adc
xlat
inc
mov
fstpt
mov
sbb
mov
daa
shll
cmp
scas
push
cwtl
xchg
stc
dec
sbb
out
cltd
sub
push
fs
imul
mov
ss
cld
icebp
lock
cmpsl
scas
roll
clc
push
shl
in
fwait
nop
sbb
jne
test
pusha
dec
outsb
adc
ss
xchg
mov
or
lods
in
dec
movsb
inc
sti
jne
mov
adc
outsl
pushf
inc
clc
dec
dec
mov
repz
push
stos
mov
imul
scas
sub
outsl
push
mov
imul
sbb
inc
addb
aas
in
fisttps
in
aad
xchg
mov
sub
jmp
loopne
jns
cmc
mov
rcrl
pop
jns
call
add
xor
sarb
test
mov
cmp
push
cmp
xor
lcall
in
loop
das
lret
cli
es
fisttps
xor
cmp
je,pn
fwait
xchg
cmp
andl
cmp
je
dec
mov
out
in
sbb
push
xor
in
fimull
test
xchg
or
pop
in
or
mov
sbb
out
sahf
adc
out
push
and
scas
mov
jbe
cmc
adc
shl
cs
sbb
pop
jge
call
mov
jo
repnz
ss
ret
gs
adc
jbe
mov
iret
push
and
jnp
test
pop
loopne
or
mov
daa
mov
or
cmpl
mov
inc
jmp
push
pop
call
outsb
pop
sahf
sti
or
push
mov
popf
pushf
rorb
mov
and
mov
xor
ret
loop
mov
aad
sbb
fs
ret
mov
lahf
xor
mov
sbb
and
scas
leave
push
xor
out
pop
pop
aaa
sub
clc
add
shll
inc
push
iret
push
out
sbb
mov
mov
jecxz
fwait
lcall
test
imul
call
mov
test
jecxz
dec
leave
pop
pop
cli
pop
sbb
int3
addr16
repz
mov
push
out
jb
loope
pop
icebp
stos
cmpl
pop
dec
scas
cmpb
jo
sub
addb
cmpsb
cmp
inc
or
pop
inc
aaa
mov
lret
pop
out
mov
sbb
push
add
and
lret
andb
out
pop
cmpl
outsl
add
jo
cmpl
jp
fiadds
es
imul
xchg
or
pop
sbb
mov
fs
sub
lods
mov
xchg
movsl
xor
fwait
loope
mov
loop
mov
mov
jecxz
shlb
imul
arpl
jge
int
icebp
inc
mov
mov
out
popf
test
scas
inc
stos
outsb
push
pop
and
inc
cld
je
mov
in
lods
dec
xchg
movsb
xchg
cmp
ffree
xlat
pusha
adcl
push
pop
mov
cld
loop
sub
pusha
aas
pop
negl
fsubr
inc
pusha
test
mov
lahf
push
call
mov
and
jge
lock
fmull
pop
dec
insb
out
dec
aam
jbe
addl
mov
mov
push
jmp
bound
mov
cmp
mov
xor
mov
adc
add
add
in
pop
cmp
mov
push
in
ljmp
lret
outsb
and
lock
je
nop
je
push
sbb
xchg
dec
adcl
pop
mov
mov
sub
data16
inc
pop
fwait
xor
in
cmp
bound
filds
cld
bound
loopne
stos
andb
mov
xchg
bound
jl
mov
xor
js
pop
scas
inc
pushf
jmp
lods
dec
decb
cmpsl
or
cmp
sub
leave
xor
out
push
decl
mov
jnp
sub
scas
adc
data16
sbb
leave
push
dec
sbbl
mov
jb
cs
lods
or
add
mov
fildl
or
fistpl
ret
mov
mov
sub
pushf
jbe
mov
out
js
pop
push
push
loop
mov
add
repnz
out
mov
scas
mov
or
loope
fistpll
push
out
xchg
xchg
mov
adc
adc
jp
xor
sub
jne
outsl
mov
mov
das
lret
rcll
pop
cmpb
lret
xchg
popa
clc
fistl
xor
mov
fmuls
fs
jo
push
insl
pop
xchg
js
in
pop
fisubrl
repz
arpl
mov
test
cwtl
and
dec
xorb
push
mov
xlat
daa
xor
repnz
ds
js
push
jl
push
cltd
cmpsl
scas
add
sti
push
pop
push
popf
mov
adc
mov
and
push
cs
adc
jl
outsb
mov
jge
outsl
test
sbb
and
pop
fwait
push
add
jnp
mov
add
addr16
ds
inc
dec
dec
fwait
push
jbe
repz
test
jns
push
cmp
loope
mov
xchg
les
or
fwait
pop
outsb
push
cmp
or
adc
cmp
jg
subb
pop
jge
clc
push
mov
jno
lret
dec
rcrl
xor
cwtl
inc
or
idivb
mov
pop
inc
psubusb
addl
lods
cmpb
repnz
xor
xor
outsb
xor
cs
imul
lods
imul
mov
lods
pop
xchg
ss
lahf
out
rorb
push
ja
sub
dec
movsb
lds
sub
iret
pop
mov
mov
nop
cmpsl
sub
nop
xor
repz
xor
mov
je
add
xchg
or
or
ds
push
aad
test
push
out
inc
fidivrl
or
sub
or
arpl
mov
sbb
imul
adc
daa
rcr
mov
out
jmp
mov
daa
xor
rorb
dec
outsl
jns
pop
aad
enter
cmp
fiaddl
ljmp
shr
fdivrl
mov
add
sbb
lret
insl
sbb
xor
mov
push
out
nopl
aad
daa
les
dec
and
pop
push
inc
push
mov
daa
lock
sub
dec
adc
out
imul
add
xchg
lahf
cmpsl
in
inc
inc
add
push
testb
and
push
ja
repz
mov
push
push
inc
je
xor
and
sbb
and
xor
enter
mov
popa
mov
xchg
cmp
xchg
scas
ja
fistl
jo
les
mov
enter
push
inc
mov
lds
push
xchg
and
cmc
loop
pop
outsl
pushf
stos
sub
shrl
popf
mov
push
sbb
pop
inc
clc
aad
sbb
xor
pop
or
xor
add
mov
mov
fnstcw
sub
fistps
not
dec
or
mov
add
test
mov
push
and
clc
xor
pop
inc
inc
dec
scas
mov
out
fnstenv
cmp
gs
pop
cmp
mov
fmuls
adc
fiaddl
cmpsl
pop
or
adc
jbe
gs
mov
in
push
ror
sub
mov
cwtl
xor
sub
mov
mov
lds
sub
dec
fnsave
test
lock
adc
add
movsl
test
rol
pop
fbld
or
std
aas
jnp
outsb
fcompl
add
sbb
ret
xchg
lea
outsl
movsb
pop
mov
and
shl
packuswb
push
and
fstpt
cmpsl
in
int3
inc
xchg
mov
hlt
xor
mov
imul
sbb
and
mov
ret
lret
mov
xchg
je
cmp
jo
xchg
inc
add
inc
sbb
fst
xlat
pop
imul
inc
pushf
pop
sbb
jns
pop
mov
push
rep
jmp
sar
dec
movsl
dec
add
pop
pop
mov
cwtl
repnz
push
mov
or
and
push
mov
cmpsb
movsb
mov
daa
lret
push
icebp
jb
and
movsb
mov
imul
and
sub
imul
fdivr
lea
lret
cmpb
push
sbb
push
int
scas
push
das
es
mov
out
cmpsl
call
in
and
mov
mov
push
loopne
jnp
shll
mov
sbb
scas
aad
cmc
mov
inc
lods
mov
pop
jae
mov
inc
inc
andl
test
into
inc
mov
ror
or
xchg
sub
adc
int
and
lahf
data16
sub
and
ss
movsl
xor
mov
mov
mov
adc
xchg
sti
push
int
jns
push
mov
ljmp
popa
lock
xorb
movsb
shl
sbb
aam
xchg
in
jne
inc
hlt
or
leave
xchg
rorb
es
pop
mov
imul
sbb
dec
pusha
int3
sbb
mov
inc
add
or
jbe
xor
xchg
mov
out
repz
jle
sahf
jo
jl
xchg
pop
push
fsubrl
mov
lret
test
push
outsl
rcrl
mov
push
mov
xchg
cmpl
inc
mov
cmp
dec
sbbl
sub
push
jecxz
sbb
test
gs
mov
outsl
mov
cmpsl
mov
jg
inc
inc
xchg
roll
mov
mov
lds
sbb
add
pop
xchg
sub
add
ret
xor
dec
xor
or
adc
andl
inc
pop
lea
repz
sub
sub
mov
add
sbb
lods
pop
ret
add
adc
jno
call
call
fidivl
push
xchg
adc
pop
push
mov
mov
mov
xchg
insb
dec
mov
jne
fs
cmp
and
scas
shll
push
out
call
xchg
add
push
sbb
loope
cld
out
loope
mov
mov
imul
adcl
inc
mov
pop
fst
lods
push
std
inc
mov
iret
into
or
dec
xchg
bound
hlt
repz
fcoms
lds
ret
rcr
sti
mov
or
leave
fs
and
pop
add
mov
lret
mov
aam
aaa
in
sub
lcall
and
mov
dec
inc
lret
inc
push
adc
xchg
sub
sarl
movsl
iret
inc
ficomps
popf
add
push
sbb
cli
inc
sbb
push
aaa
inc
bound
cmpsl
pop
repz
mov
or
imull
data16
mov
pop
push
xlat
sahf
inc
test
push
pop
and
xor
out
dec
xor
pushf
xor
jp
mov
xor
cmp
mov
inc
pop
xchg
sbb
in
rcrb
daa
mov
lods
mov
fwait
mov
pushl
movsb
imul
pop
sub
int
scas
ljmpw
mov
mov
enter
dec
mov
jbe
jl
push
out
dec
loopne
into
je
cli
repz
in
and
in
lret
push
jno
fmull
sub
out
mov
cmp
lds
and
lcall
sbb
jne
sub
xor
and
xor
cmp
jmp
sbb
sub
inc
in
sub
das
dec
repz
outsl
mov
push
mov
dec
xor
sbb
int
mov
stc
fnsave
loope
leave
or
cltd
jle
add
inc
mov
movd
jb
sbb
jmp
lock
jg
shrl
arpl
clc
or
addr16
out
arpl
dec
mov
add
pop
push
lret
and
sbb
sbb
das
mov
pop
pop
test
xchg
cli
aad
pop
scas
pop
inc
inc
popa
mov
iret
sbb
jl
jae
js
add
xor
shll
mov
test
arpl
pushf
out
imul
dec
scas
shr
mov
xchg
cli
mov
mov
mov
fmuls
dec
mov
pop
in
push
adc
pop
add
inc
lret
cs
adc
and
fistpll
lea
popf
nop
orl
adc
cld
nop
shlb
mov
or
inc
xchg
gs
shll
and
imul
jae
and
mov
sub
xchg
pop
push
xchg
ret
fwait
xchg
add
dec
mov
and
prefetch
or
pop
daa
lods
jle
jae
movsb
adc
add
sti
mov
or
popf
jle
inc
jbe
adc
adc
sub
xchg
idivb
add
out
popa
into
call
fwait
mov
push
icebp
mov
jb
lods
lds
stos
or
daa
mov
das
aad
int
das
icebp
jmp
jo
xor
cld
out
cli
push
mov
in
or
andnps
inc
xor
mov
jge
xchg
push
cmpl
sbb
add
adc
sub
fsubl
imul
nop
inc
mov
imul
fildl
insl
or
bound
sarl
xchg
aad
dec
jno
lds
cmpsb
dec
int
xchg
ret
dec
mov
mov
pop
in
jl
inc
sub
movsb
fcoml
lidtl
cmp
sbb
ja
sbb
scas
jg
cmp
mov
ja
ja
cld
mov
les
les
ja
dec
inc
and
jnp
jmp
jle
stc
fisubrs
xchg
and
lea
jo
push
mov
mov
addr16
cmc
addl
orl
and
jp
xchg
pop
jne
add
sbbl
push
and
cwtl
push
je
push
mov
pop
sbb
jbe
add
pop
push
inc
in
sbb
jmp
lret
sti
loop
mov
cmpsl
cmp
push
adc
outsb
movsl
adc
stos
inc
mov
movsl
cmp
xchg
push
inc
leave
mov
sbb
rcl
push
dec
mov
or
data16
je
jbe
or
adc
inc
subl
mov
push
add
lock
sub
xchg
ret
adc
sbb
jo
shlb
jne
fnstenv
popf
out
xor
mov
sarl
fstpt
sbb
out
scas
mov
pop
int3
dec
in
adc
inc
dec
pop
dec
pop
movsl
test
dec
jecxz
imul
les
std
jno
inc
sahf
fucomp
daa
dec
sbb
jecxz
pop
cmpsb
jl
mov
lock
push
cli
leave
fsubr
jmp
jmp
test
mov
test
and
rclb
xlat
push
push
inc
sbb
test
dec
lcall
dec
loopne
push
ror
popf
outsl
ret
cmp
enter
pop
inc
sub
mov
mov
push
jle
js
lock
fistps
cld
je
pop
ds
push
adc
dec
jl
and
jnp
loope
pop
gs
fsubl
in
cltd
aas
sbb
les
jp
push
fsubr
mov
sbb
jb
add
ljmp
dec
pop
cmp
adc
ret
test
ljmp
jg
jno
sahf
adc
inc
jmp
test
fidivrl
xor
dec
insl
sbb
pop
outsb
data16
xor
add
rorb
mov
xor
aaa
loope
lret
inc
cmpsl
jne
mov
addr16
std
fwait
insl
mov
outsl
mov
iret
adc
jmp
mov
adc
or
ret
dec
into
jbe
sub
aam
xor
mov
gs
push
int3
cltd
je
sbb
mov
fmul
or
data16
sub
test
cmpsb
shrb
in
daa
dec
in
and
arpl
inc
insb
jne
cmpsl
loopne
mov
outsl
cmp
sub
sbb
fnstsw
call
out
add
scas
mov
mov
idivl
movsb
in
test
jp
outsl
or
xor
subb
scas
icebp
sahf
sub
jl
ss
sub
repnz
xchg
and
pop
stos
jo
fimull
int
sbb
testb
jle
addr16
icebp
inc
in
push
sti
imul
loope
push
lods
and
xor
fwait
mov
in
ret
nop
mov
mov
test
pop
cs
sarl
inc
out
jne
mul
aam
cld
xchg
int
pop
pusha
dec
inc
fsts
std
loop
insl
sub
insb
pop
sti
sub
cmpsl
repnz
pop
and
out
xor
into
adc
and
out
dec
pop
xor
ficompl
inc
pop
mov
jg
stos
movb
movsl
pushf
outsb
push
mov
sub
and
xchg
movsb
and
es
mov
out
loop
pop
std
push
inc
inc
ljmp
adc
enter
push
xchg
mov
outsb
add
mov
imul
leave
or
inc
hlt
add
and
cmp
xor
push
pop
xchg
iret
hlt
out
cmpsl
push
or
sbb
imul
push
mov
jge
aam
outsb
cmp
jmp
push
cmc
xor
inc
out
into
push
pop
leave
fimuls
pop
repnz
sarb
sub
es
int3
mov
xor
mov
je
or
addr16
cmp
or
aas
scas
xor
pop
sub
mov
and
das
mov
jge
jno
out
xor
out
clc
add
xor
divl
daa
pushf
ss
ret
call
les
sbb
lds
sbb
std
xchg
pop
shrl
pop
mov
nop
pop
mov
sbb
inc
mov
inc
repz
outsl
add
scas
and
mov
push
addb
dec
fnstcw
mov
jo
pushl
in
jg
sbb
cmp
pop
clc
inc
mov
int
push
dec
or
insl
js
mov
repnz
out
xor
cmp
hlt
jb
mov
in
xor
and
inc
rcrl
jb
push
inc
pop
es
out
call
jbe
pop
iret
imul
mov
mov
loop
sarb
push
pushf
xor
mov
xor
out
inc
cs
mov
jle
push
rcrl
sti
adc
icebp
and
cmp
sbb
dec
mov
lret
popa
outsb
outsl
lcall
sbb
jne
or
jne
out
pop
push
sbb
sti
inc
imul
cmp
sub
sbb
in
pop
push
into
shl
xchg
rorb
xchg
test
or
jp
test
mov
jge
add
lods
stos
adc
test
cmp
xchg
xchg
loop
jbe
cmpl
fimuls
inc
cli
xor
pop
lock
adc
mov
stc
cmp
ret
shl
pop
orb
cmp
cmp
fwait
daa
insb
add
pop
test
shll
jae
sub
addb
roll
sub
lahf
sbb
fdivs
mov
cmc
andnps
fwait
stos
lahf
into
arpl
adc
xchg
sub
lock
lods
sub
cli
mov
stos
test
pop
pop
ret
jl
dec
sub
and
push
push
dec
addl
movsl
jge
jg
test
cmp
or
sbb
das
jnp
fs
aaa
sub
ljmp
clc
int
mov
adc
mull
push
pop
faddl
fldl
dec
wbinvd
inc
popa
fnstenv
mov
mov
lret
decb
shll
loope
jnp
clc
push
xchg
rcl
pop
mov
test
push
xor
push
test
fadds
mov
or
cmpsl
push
aaa
jecxz
shufps
push
fs
mov
push
insl
add
push
inc
mov
out
bound
inc
or
ret
dec
push
jae
xchg
outsb
in
lds
fdivp
mov
mov
mov
lods
add
pop
aas
lahf
and
jg
or
mov
lcall
push
cld
and
aas
cmc
daa
sub
stos
xor
loope
or
adc
mov
stos
jmp
push
test
xor
pop
pop
gs
sub
xlat
sarl
push
popf
jl
jno
mov
cmp
push
shlb
iret
cmp
stc
mov
or
ret
push
push
les
adc
ds
xchg
out
jmp
arpl
and
push
add
sub
nop
test
mov
flds
lds
ljmp
lcall
mov
bound
add
lcall
lret
push
push
fcoms
mov
test
ret
sub
adc
std
stc
pop
nop
in
aam
shll
pusha
dec
pop
lahf
cmp
or
stos
mov
in
je
rcrl
xchg
imul
cli
rcrl
sahf
push
jne
imul
inc
dec
out
and
cmp
jbe
enter
lods
jb
sub
mov
sub
push
daa
add
subl
dec
daa
outsl
jnp
mov
loopne
std
popf
iret
push
jl
push
dec
mov
lock
aam
outsl
call
pop
xchg
mov
pop
cmp
push
adc
jb
mov
cmp
jmp
xchg
pushf
jmp
inc
jle
loope
int3
insb
xchg
rol
out
mov
xchg
fnsave
xchg
mov
dec
xchg
fstpt
orb
inc
lcall
jmp
mov
push
dec
cmp
rol
sbb
pusha
xchg
cmpsl
xchg
into
push
andb
mov
jmp
inc
nop
mov
cld
out
nop
xor
pop
lahf
jecxz
movl
test
rolb
jbe
jne
sbb
int
scas
pop
push
inc
sbb
xchg
or
into
sti
mov
cld
mov
fldt
mov
shl
pop
shlb
loopne
les
loope
imul
inc
incl
push
les
inc
mov
jecxz
pop
xchg
ja
mov
jmp
jge
inc
and
repz
mov
ja
dec
adc
cmp
xor
push
sti
push
jl
inc
sbb
adc
or
add
outsl
stos
sub
ja
outsl
dec
cli
call
inc
inc
jmp
cmpsl
mov
loopne
in
outsb
ret
mov
enter
jecxz
mov
xchg
lods
lea
aad
in
popf
push
adc
rorl
dec
out
adc
aam
aad
mov
inc
in
repnz
pop
cmp
data16
cltd
les
scas
loope
sar
mov
sub
push
adc
scas
imul
xchg
push
cmp
mov
lods
scas
inc
icebp
movsl
lcall
ljmp
sbb
ja
xor
bound
vpmulhuw
cs
das
or
out
xor
repnz
and
jle
cmp
sub
xchg
xchg
shrb
pop
mov
adc
sti
lret
popf
pop
insl
push
sbb
dec
adc
push
mov
and
aas
ljmp
repz
cmp
push
pop
in
cmc
sub
shll
jl
in
sub
or
imul
fildll
out
repnz
xorl
mov
sbb
or
mov
xchg
lods
mov
pop
sahf
mov
sub
stos
cmp
pop
lcall
test
sbb
and
xor
aad
or
data16
push
sarl
repnz
call
mov
adc
out
cmp
stos
test
popa
pop
mov
bound
add
aam
leave
mov
popl
or
push
les
cmp
pusha
xor
jp
or
pop
pop
mov
pop
xor
fdivrs
in
fwait
jbe
mov
and
mov
mov
int
push
idivl
jecxz
sub
add
cmpsb
sbb
test
js
es
pusha
imul
iret
sub
mov
negl
jmp
ja
sbbl
cmc
pusha
loop
gs
in
pop
sbb
je
fnsave
push
or
inc
xchg
mov
pop
sub
lods
movsb
ja
or
insl
aaa
lcall
xchg
lahf
hlt
inc
call
mov
add
xchg
adc
pop
orl
lret
test
push
push
sbb
cmpb
inc
inc
lret
leave
dec
xchg
push
sbb
insl
mov
push
aas
test
cwtl
test
gs
xchg
and
lahf
es
sbb
incl
ds
addr16
shrl
dec
stos
sbb
xlat
shrb
insb
pop
dec
adc
inc
out
cmp
arpl
jbe
aaa
iret
adc
fsubs
push
xchg
cmp
add
mov
fwait
imul
and
mov
out
iret
cmp
jbe
daa
hlt
add
xor
xor
lock
jo
xchg
rol
scas
xor
inc
scas
jbe
dec
xlat
add
sarb
cs
jg
xchg
cmp
mov
push
adc
inc
rorl
fwait
inc
dec
push
andb
out
and
cmpsb
inc
pop
fisubl
xlat
inc
stos
dec
cmp
or
mov
leave
adc
mov
rorb
js
leave
push
or
jae
pop
sbb
adc
push
or
and
rcl
outsb
sbb
inc
jp
enter
arpl
sub
add
ret
jmp
aaa
out
xchg
sahf
call
mov
repz
sub
mov
cmp
movsb
jmp
mov
jmp
repz
stc
xor
push
add
stos
sbb
ret
out
mov
xor
lods
std
fwait
insl
leave
sbb
jb
cmp
push
fidivrs
mov
dec
sbb
out
fmull
adc
out
and
pusha
cmp
add
sti
sub
inc
aas
sti
cmc
and
rolb
jnp
out
xchg
and
sbb
insl
mov
inc
ret
mov
inc
xchg
and
pop
ret
in
add
mov
jne
mov
enter
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
mov
nop
jl
pop
pop
jl
mov
jnp
mov
cltd
and
stc
sbb
not
push
div
imul
pop
popa
jno
divb
sbb
imul
jg
fistpll
ljmp
or
mov
cs
in
pop
inc
xor
mov
xor
sarl
and
pop
mov
bound
lcall
lds
fmull
sarl
outsl
xor
mov
ljmp
pop
add
lods
fmulp
fsubrp
push
pop
inc
xor
xor
int
add
repz
repnz
pusha
mov
data16
push
pop
xor
test
stc
or
clc
icebp
jge
inc
sbb
push
dec
mov
add
or
insl
fucomi
push
sbb
xor
lcall
mov
iret
fdivl
sbb
lahf
iret
mov
nop
jb
mov
cmpsb
cltd
adc
mov
xlat
mov
cmp
dec
popa
dec
mov
fwait
xchg
push
sahf
pop
aas
inc
popa
int3
test
add
sub
push
xchg
loope
adc
inc
sbb
dec
inc
mov
dec
sbb
mov
cwtl
fmull
outsl
jle
jecxz
push
or
je
dec
popa
dec
je
insb
xchg
cmp
scas
cmp
sbb
arpl
sbb
push
gs
add
in
popf
mov
dec
push
cli
or
cwtl
jmp
fisttps
addr16
int
test
dec
cwtl
xchg
xor
mov
and
inc
xchg
add
pop
scas
add
jae
jae
dec
bound
xlat
inc
xlat
fsubl
push
mov
mov
cli
cmp
xchg
ret
jb
cmp
enter
inc
lea
enter
mov
jecxz
cmpsl
cwtl
test
pop
mov
mov
scas
mov
mov
or
push
jo
out
cmpl
in
adc
add
jge
fsts
js
fcomp
push
dec
hlt
jno
dec
jb
imul
enter
nop
enter
pop
repz
jmp
aad
mov
and
arpl
insl
and
inc
sbbl
jle
mov
repz
in
add
or
jecxz
std
fwait
out
mov
ret
mov
scas
out
mov
fs
jmp
insb
arpl
data16
cmp
jmp
sub
or
ljmp
out
pusha
jg
sahf
pushf
inc
mov
lods
int
sub
inc
push
mov
xchg
popa
loopne
add
addr16
fistps
das
push
mov
nop
out
inc
cmpsl
push
mov
add
sub
and
inc
pop
inc
jns
push
cmc
inc
jp
lods
jl
std
jo
mov
dec
ret
sub
mov
inc
bound
int
ds
rcll
mov
jge
push
dec
popa
popf
push
xor
shrd
mov
inc
xchg
push
pause
int
fwait
pusha
int3
test
sar
xchg
inc
into
aaa
stos
xchg
nop
int3
jmp
pop
push
test
out
ss
cmp
mov
push
inc
or
jge
enter
es
push
lds
inc
adc
dec
xor
repnz
cmc
cmp
cltd
push
mov
ret
jno
ret
mov
clc
andl
outsl
fildll
mov
cmp
inc
sahf
ret
adc
xor
loope
mov
xchg
int
addr16
lods
nop
jp
xchg
pop
dec
sarb
aad
out
lea
cmpsb
outsl
outsl
fs
lea
ret
inc
add
mov
das
lea
cmp
push
movsb
mov
ret
loopne
lea
pop
xchg
xchg
rorl
and
daa
loopne
and
mov
jno
add
jae
jbe
push
lcall
and
stc
cli
pop
je
std
lret
pop
xchg
mov
mov
mov
leave
psubusb
out
clc
dec
pop
cmc
adc
ja
cmp
jns
test
ja
mov
out
stc
popa
xchg
mov
addr16
cli
aaa
cmp
cmp
xor
jecxz
add
xlat
push
rorl
test
es
stos
repz
push
jecxz
fs
inc
test
dec
and
lods
pusha
mov
and
mov
xor
dec
sub
ret
rcll
adc
sbb
pop
das
outsl
dec
lods
sbb
rcrb
loopne
std
inc
push
les
or
enter
clc
in
and
jb
outsl
sbb
repz
int3
cmp
dec
push
imul
xchg
jmp
test
sbb
mov
or
testb
leave
fimull
inc
jge
fnstenv
pop
sbb
xor
out
xchg
inc
sbb
cmp
subb
repz
test
sbb
movsl
mov
mov
dec
ret
xchg
mov
dec
sub
or
mov
add
push
push
or
out
push
mov
dec
mov
sbb
push
pop
icebp
es
adc
out
fstl
dec
in
jae
dec
xor
add
lret
test
inc
std
mov
sbb
sub
iret
sub
dec
jb
inc
fidivrl
mov
scas
pop
scas
addl
mov
jg
add
sbb
faddl
rol
dec
xor
fnstcw
in
push
shrl
xor
push
cld
mov
arpl
inc
fadds
lret
lock
popf
adc
in
dec
mov
mov
popa
mov
pop
out
out
mov
pop
cmp
adc
xor
into
std
mov
xchg
sti
adc
imul
cwtl
and
and
pop
pop
dec
insl
addb
ss
mov
add
mov
fdivl
dec
stos
jp
xchg
cltd
push
popf
aas
inc
push
inc
pop
xchg
adc
sbb
mulb
ror
push
cmc
sbb
lds
pusha
pusha
pushf
cmp
loope
mov
xchg
in
or
xor
ret
dec
in
cmp
cmc
jmp
pushf
pop
push
aaa
xor
scas
out
sbbl
mov
les
lods
pop
test
fdivrs
fmull
sahf
arpl
icebp
aam
movsl
clc
shlb
jo
pushf
cmpsl
nop
std
add
mov
xor
jl
in
int3
inc
or
fcomip
rorl
mov
and
dec
lds
shrb
call
pop
jne
faddl
in
sub
push
jmp
aaa
push
mov
jmp
push
jbe
lcall
ljmp
test
cmpl
dec
fidivl
loop
pop
or
ds
dec
xor
dec
mov
int
dec
mov
fisttpll
cmpsb
negl
out
sbb
dec
js
adc
nop
enter
xchg
fistpl
in
pop
cmp
inc
fwait
jbe
fldt
pop
ja
lcall
loop
mov
mov
push
leave
pop
mov
pop
arpl
add
dec
inc
pop
mov
mov
sub
pop
aam
xchg
aaa
aad
les
scas
out
std
test
mov
lock
jecxz
enter
subb
sbb
test
inc
std
repz
push
cpuid
push
add
xchg
movsl
and
lcall
inc
or
popa
add
rol
push
movsl
aaa
push
popa
dec
mov
cltd
stos
xor
mov
adc
scas
scas
push
pop
jbe
and
jp
cs
jo
or
out
js
mov
ljmp
leave
adc
call
cld
xchg
cmp
rorb
push
mov
in
sub
outsb
or
ja
inc
xchg
call
test
jmp
or
pop
test
mov
cli
adc
shll
mov
dec
xchg
jp
sbb
xchg
adc
jo
push
jae
in
sbb
or
not
mov
xchg
enter
dec
outsb
mov
and
inc
inc
jmp
cwtl
out
jmp
fwait
shrl
ficompl
push
test
cmp
lods
pusha
cmp
push
mov
rorb
jle
and
js
fistpl
push
cs
movsl
outsl
call
xor
out
imulb
sbb
out
sarb
sbb
aad
aad
xchg
sub
imul
flds
mov
aaa
sbb
fucomi
cmp
stos
jno
mov
rolb
add
das
in
fstpl
lret
jbe
es
cmp
sub
pop
shlb
into
push
lods
addr16
pop
gs
push
pushf
test
xchg
sub
jns
inc
andl
cmp
jae
xor
add
mov
insl
push
sub
xchg
jp
clts
mov
cld
jl
dec
sub
mov
sub
movsw
or
stos
or
scas
push
popf
ja
rcrb
push
addr16
inc
les
ljmp
inc
dec
data16
jg
ret
sub
add
rcrl
addr16
mov
mov
cmc
cmpsl
sbb
inc
lret
pop
push
mov
cmp
cmpsl
sbb
hlt
push
out
jge
lcall
cmpsl
insl
jns
jnp
cld
cmp
sub
popf
flds
popf
dec
mov
imul
push
cld
add
sub
mov
in
inc
in
dec
push
in
ds
push
inc
jg
adcb
add
bound
pusha
in
insl
sbb
cmpsb
xchg
jmp
loope
jecxz
mov
jp
xor
idivb
mov
xchg
jne
jge
xor
xor
cmp
into
imul
jle
out
pop
ret
insb
in
mov
out
cs
out
sub
lods
or
push
xor
rolb
sbb
mov
push
fsts
inc
negb
mov
inc
pop
push
ds
mov
enter
pop
cltd
shrb
bnd
push
js
xorb
mov
or
or
shlb
jmp
sti
aaa
ss
mov
nop
insl
into
test
subb
lret
out
sbb
or
dec
and
and
pop
in
mov
jmp
sarl
pop
cmp
cmp
jnp
xchg
sub
leave
lods
push
movsl
pop
mov
fstpl
xor
mov
test
mov
jg
dec
add
mov
push
mov
inc
aad
inc
fimull
mov
cmp
pop
inc
push
repnz
outsl
cmpsl
mov
cltd
imul
lret
inc
sarb
push
shr
add
fisttpl
pop
cltd
push
fxch
shl
mov
cmp
xor
push
lahf
mov
fwait
push
lcall
test
xchg
cltd
imul
cmp
hlt
in
fisubs
ja
or
push
test
jg
ret
xchg
jo
xchg
mov
xor
cs
and
inc
lock
sahf
cmp
fucomi
adc
mov
insl
dec
mov
test
cld
cs
stos
pushf
mov
inc
dec
mov
mov
sbb
fidivrs
xchg
roll
and
jne
pop
mov
pop
loop
outsb
nop
inc
test
push
mov
or
in
stos
lea
stc
imul
adc
in
inc
push
out
loop
pop
ret
fstl
dec
jle
or
mov
sub
xchg
pop
aad
test
gs
les
pop
xchg
sbb
mov
cld
push
mulb
outsl
lcall
sub
or
jns
in
movsl
incb
pop
pop
xchg
cmpsl
out
shr
and
mov
lret
xor
inc
icebp
pop
leave
lock
arpl
xchg
mov
push
inc
and
push
mov
adc
jmp
cmp
mov
lret
imul
inc
es
pop
or
rorb
mov
sbb
and
and
mov
loope
in
in
push
push
jae
cmpsl
int
sti
ja
and
cmp
lods
outsb
or
lea
in
ret
leave
cmc
sbb
in
fwait
mov
in
shlb
sbb
mov
in
fists
loop
sub
dec
xchg
push
inc
add
data16
cmpl
popa
jg
jmp
ret
imul
fstl
jp
cmp
addl
dec
ja
pop
iret
movsb
cltd
aam
repz
cmpl
sbb
cli
movsb
dec
mov
inc
mov
sub
fldt
sub
aam
jecxz
inc
jae
sub
imul
push
push
scas
lret
repnz
paddb
ja
push
into
movsb
jae
sub
push
ja
enter
mov
push
bound
daa
icebp
test
into
adc
mov
add
cli
dec
je
xchg
adc
jl
inc
cmp
push
in
inc
cmpl
int
xchg
xor
pop
mov
sbb
mov
ljmp
aad
out
and
push
bound
sub
fcomps
aas
fidivrs
pusha
popf
decl
sbb
fs
fldl
in
mov
mov
mov
aam
fstpl
add
loop
bnd
dec
cmp
call
ja
pop
subl
loopne
jns
loop
sub
repz
testb
and
sbb
lods
add
js
xchg
push
sahf
shl
cltd
dec
inc
add
lcall
xor
movb
out
add
inc
sbb
ret
jmp
inc
or
adc
mov
movsl
dec
and
cs
popl
dec
in
mov
xchg
test
mov
or
mov
loopne
in
cli
jns
int
leave
push
rcrb
negl
cmp
adc
fidivrl
xchg
aad
or
xchg
pusha
shlb
mov
loop
sbb
jno
adc
movsb
in
adc
pop
decb
loope
fcoml
stos
lea
pop
add
xchg
and
sub
push
jmp
inc
in
dec
das
sbb
mov
inc
mov
addr16
sbb
int3
mov
mov
ficompl
or
mov
mov
sub
fwait
sbb
xor
lock
icebp
cltd
cwtl
jnp
mov
gs
cmp
mov
outsl
add
into
fisubrs
pop
dec
mov
divl
movb
in
and
cli
test
jle
arpl
clc
fimull
pop
mov
cmp
or
inc
jl
add
orl
fs
and
int
ja
sub
push
lock
in
call
es
push
jmp
enter
mov
mov
fs
inc
push
loop
clc
xor
in
mov
mov
mov
sahf
add
sbbl
mov
add
outsl
hlt
mov
lret
or
mov
push
mov
sub
sub
inc
popa
inc
pop
add
subb
xchg
aas
pop
xchg
and
mov
inc
andb
pop
pop
iret
popa
adc
lea
and
sbb
sbb
pusha
mov
cwtl
loope
cltd
dec
cmp
int3
aad
cmp
test
popl
and
add
aas
jmp
xor
jns
in
add
pop
and
push
inc
int
sub
inc
ret
fstpl
shrb
and
ret
mov
or
andb
adc
movsb
cmp
test
lret
stos
arpl
sbb
in
inc
clc
fs
shrb
sub
mov
cmpsl
in
or
repz
push
dec
inc
imul
aas
push
mov
leave
aas
cmp
dec
cmpsl
scas
or
jmp
or
leave
mov
adc
pop
decb
jp
mov
xchg
leave
cmc
xor
movsl
stos
mov
sti
xchg
add
dec
mov
dec
mov
pusha
jecxz
add
lods
mov
pop
dec
lea
shll
or
adc
mov
mov
or
mov
fistps
pop
loopne
mov
mov
jp
fists
mov
xor
or
adcb
jb
xor
mov
pushf
out
scas
sbb
and
xchg
push
inc
dec
xchg
cmp
xor
cld
out
pusha
mov
out
int
mov
cwtl
adc
ss
jnp
repnz
xor
xchg
mov
mov
inc
dec
push
repnz
movsl
jns
jecxz
sbb
shll
in
inc
push
popa
mov
nop
jns
jns
sub
scas
test
push
mov
cmp
in
dec
cmp
adc
into
adc
fadd
xchg
lret
gs
leave
ja
add
ss
movsl
je
push
xor
mull
push
mov
cmc
and
mov
xor
cltd
enter
mov
inc
aad
cmpsl
mov
inc
stos
in
inc
dec
mov
jb
inc
call
test
into
mov
sbb
lcall
sbb
adc
fistps
adc
fucomi
xchg
pop
leave
pusha
sbb
jno
sahf
mov
jl
adc
lcall
inc
dec
dec
dec
fsts
ret
loop
movsl
dec
mov
mov
das
add
jle
pop
jae
add
mov
subb
leave
mov
dec
int
jnp
bound
aam
jl
frstor
call
mov
aaa
out
mov
cmpsl
fucom
test
jae
adc
aad
dec
insb
aad
xor
rcrl
inc
push
xchg
xchg
or
jge
insl
mov
dec
cmpsb
mov
cwtl
dec
add
out
xchg
sub
in
pop
cmp
nop
shl
jo
inc
and
scas
in
sbb
mov
sub
loopne
lock
mov
popf
ds
les
jecxz
xbegin
sbb
fadd
insb
jl
and
pop
mov
insb
and
cmpsb
fsub
push
into
sahf
loopne
mov
test
iret
sbb
repz
jle
sbb
xchg
dec
jno
push
test
jg
jns
loope
stos
mov
mov
jecxz
mov
or
mov
xchg
shl
fs
inc
sbb
xchg
cmp
pop
xor
dec
leave
push
addr16
insb
mov
push
push
and
test
and
pop
subb
xor
in
nop
push
pusha
xor
lcall
dec
pop
mov
test
xlat
imull
mov
loopne
out
stos
adc
xor
in
mov
shlb
lods
jp
ljmp
mov
mov
cmp
adc
call
xchg
fisubl
push
es
push
mov
xchg
int3
test
or
xor
sbb
cs
push
push
insb
lock
outsb
pusha
pop
lahf
push
jns
sbb
lock
ret
pop
jo
lcall
push
ret
push
inc
dec
loope
mov
xchg
bound
pop
adc
loope
dec
mov
xchg
or
or
aaa
adc
into
sub
inc
inc
dec
cwtl
fmulp
sub
dec
aaa
xor
scas
mov
mov
int3
in
inc
xchg
or
fisttpl
adc
loope
int3
jmp
insb
lods
xchg
mov
and
repnz
inc
lahf
test
mov
dec
xor
dec
jge
iret
sub
push
jo
imul
and
mov
out
and
xor
loope
mulb
inc
mov
xchg
pop
xor
jp
and
ljmp
xor
arpl
incl
repnz
mov
cmp
xchg
fwait
ja
js
std
mov
enter
push
sbb
sbb
push
fs
inc
pop
imul
nop
inc
inc
jg
sbb
jge
inc
and
lock
popa
cmpsb
inc
cmp
clc
roll
dec
push
movsb
addr16
add
jne
xor
push
adc
dec
sbb
jge
test
repz
mov
mov
push
adc
jp
xchg
mov
push
push
jae
arpl
dec
pop
movsb
mov
push
and
ret
std
pop
inc
jp
cmp
pop
mov
arpl
std
sbb
sbb
push
add
xchg
xor
int3
pop
leave
jae
adc
cwtl
aaa
add
sub
push
mov
in
inc
mov
inc
divl
mov
fdivl
mov
shll
std
pop
fisubrl
sbb
push
shll
loopne
sub
mov
sub
xchg
cmc
leave
mov
cmp
push
cltd
data16
xchg
sbb
lret
test
fmuls
int3
mov
push
out
cli
rolb
and
sub
fdivr
push
pop
in
divl
and
xor
out
fldenv
push
mov
lock
stc
cmovs
rcrb
push
shrl
and
pop
fs
fwait
inc
dec
lea
mov
inc
jb
xchg
popf
jmp
cs
xchg
sbb
in
leave
das
jg
test
iret
xlat
mov
jl
fs
mov
sbb
mov
xchg
pop
adc
ss
popf
pushf
out
test
shlb
dec
sahf
sub
inc
dec
sbb
aaa
and
sbb
repz
xchg
xor
mov
pushf
or
mov
sub
int
incl
movsl
addr16
lods
add
fs
dec
lds
aam
mov
cmp
into
cmp
dec
je
xchg
loopne
pushf
push
out
popa
adc
jbe
cmp
loopne
push
or
mov
out
fs
lock
mov
sar
sarb
sub
sbb
hlt
sbbb
test
stos
adc
les
mov
bnd
mov
xchg
jno
xchg
jg
jle
popf
iret
popf
fidivl
dec
pop
adc
gs
jge
jl
jp
mov
lret
xor
jmp
push
nop
inc
pushf
xchg
add
jne
leave
js
test
sbb
lret
test
js
mov
jecxz
outsb
adcl
push
shl
push
xchg
out
pop
int
in
push
jb
out
sbb
daa
aas
and
lcall
push
xor
lea
test
xor
int
jo
sbb
xchg
inc
and
clc
outsb
xlat
dec
lahf
mov
dec
in
aam
jmp
shll
loop
inc
sbb
lret
push
stos
out
int
mov
clc
or
andb
rcll
or
push
cld
sbb
push
mov
cli
pop
xchg
out
or
xor
jle
mov
xor
adc
pop
add
in
pop
lret
cltd
add
popf
xchg
xor
mov
push
or
and
aam
bound
imul
test
mov
js
pop
out
mov
cld
ss
xor
mov
xchg
mov
fcoms
inc
xchg
hlt
insb
jmp
and
mov
cmp
sub
sti
sub
sahf
aas
insb
mov
lock
in
data16
mov
dec
inc
sbb
xchg
mov
rcll
xchg
and
scas
push
mov
js
xor
shlb
sti
mov
pop
movsl
push
mov
jbe
call
cmpb
cmp
add
mov
mov
xchg
cwtl
add
leave
cltd
mov
xor
out
pop
sbb
int
les
inc
push
addr16
mov
out
inc
lods
and
mov
call
and
jns
sbb
in
cmp
idivl
xor
xchg
popa
mov
in
sub
fbld
inc
or
and
enter
xchg
rorl
dec
and
mov
fsubs
cmpsl
loopne
mov
scas
loop
out
addl
xor
sub
in
je
push
fwait
and
mov
hlt
mov
enter
loopne
cmp
into
mov
mov
adc
dec
mov
mov
pusha
sbb
push
add
ret
sbb
test
aaa
fldt
sbb
aad
cmp
jl
test
data16
inc
je
pop
mov
jg
and
push
mov
lret
lcall
stos
pop
mov
out
sub
mov
mov
loop
inc
adcl
ret
lock
jo
ds
pop
cmpsb
mov
mov
and
and
sar
testl
xchg
repnz
bound
nop
sbb
xor
xchg
dec
mov
dec
stos
xor
test
adc
in
xor
add
ret
cmpsl
adc
cmp
inc
lcall
es
cmp
push
push
jge
call
mov
or
jl
mov
mov
gs
repz
out
cltd
idivb
out
rcrl
repnz
dec
cmp
mov
jnp
xchg
lds
xchg
xlat
jl
xchg
and
jno
lahf
or
sub
int
cmp
cs
orb
popf
je
mov
in
cmp
mov
data16
cli
mov
adc
xor
sub
inc
lea
imul
inc
mov
push
sbb
je
aaa
int
or
adcl
mov
scas
call
stc
sti
add
iret
dec
cmp
negl
mov
and
push
aam
jecxz
into
popa
adc
aaa
clc
stc
mov
xchg
mov
stc
dec
in
call
pop
je
rolb
jmp
cld
mov
enter
push
test
jecxz
loope
cmp
fcoms
pop
add
in
jmp
fcoms
inc
mov
push
repnz
jbe
rcrl
pop
popa
and
fistps
mov
xchg
mov
std
pop
xor
jno
dec
mov
jge
inc
test
sti
jmp
jb
xlat
das
out
xchg
dec
push
sbb
testb
sub
sbb
out
mov
mov
bound
es
call
jg
cmc
jp
jge
jg
cmp
mov
add
cmp
out
mov
cmp
cmpsl
cli
mov
adc
adc
xchg
test
insb
xor
xlat
cld
push
mov
std
js
inc
cmp
mov
mov
sub
sub
loop
jmp
mov
out
ljmp
xor
xchg
cs
loop
mov
pop
push
sti
sub
repz
sbb
mov
mov
outsb
lds
in
dec
xor
aaa
js
jb
push
adc
js
mov
aad
push
jnp
je,pn
icebp
test
lahf
lcall
enter
bound
xor
pop
jns
mov
into
sarb
mov
mov
popl
or
popa
pop
lea
add
aad
mov
jge
jge
xchg
mulb
fwait
or
pop
xchg
roll
xchg
push
sub
pop
stc
cmpsb
pushf
xlat
dec
pusha
xor
cwtl
fstpl
int3
je
push
adc
les
lret
xchg
mov
out
push
or
insb
hlt
das
iret
movsb
loop
lds
xchg
adcl
mov
out
jns
mov
mov
inc
mov
aad
xchg
jmp
sub
xchg
xor
sahf
xchg
cli
xchg
sbb
in
or
lret
sbb
jl
jbe
jge
cltd
inc
push
clc
jb
mov
mov
stos
jne
adc
sub
dec
dec
cld
arpl
mov
xor
je
pop
inc
mov
test
sbb
in
gs
dec
jne
sbb
mov
insl
outsb
mov
push
dec
aas
mov
cmp
cmp
test
scas
lods
rorb
mov
mov
mov
stos
lods
dec
cli
jmp
loop
mov
loope
mov
in
xchg
insl
jbe
nop
pop
mov
ss
inc
cmp
push
aam
adcl
cmp
push
out
adc
mov
out
cmp
pop
xchg
mov
les
adc
imul
data16
mov
jb
roll
std
sbb
out
cld
addr16
add
and
jno
and
sub
inc
or
cmp
aaa
pop
enter
mov
mov
add
adc
cmp
cld
adc
push
call
popf
xchg
sub
mov
sub
adc
push
into
push
outsb
cmp
or
add
daa
arpl
add
jp
call
and
bound
fidivs
es
mov
cld
jecxz
mov
repnz
xchg
jle
mov
sbb
sub
shrl
iret
movl
out
sub
jae
xchg
xor
not
xorl
push
scas
sub
pop
mov
popf
xchg
into
xchg
loop
nop
rol
out
int3
aam
and
stos
mov
dec
cmp
scas
mov
mov
pop
imul
in
rcrl
jbe
in
lret
adc
push
push
inc
pop
dec
sub
sbb
leave
and
pusha
sbbl
push
gs
jecxz
mov
push
jbe
sbb
pop
dec
ret
loopne
iret
pushw
imul
sub
cwtl
or
aas
dec
jecxz
jg
sahf
xchg
pop
out
mov
adc
je
js
test
xchg
test
or
push
fisubl
adc
add
enter
jmp
mov
sbb
cmp
loope
push
push
fimull
xchg
out
sub
inc
mov
inc
stos
jno
ror
lahf
fstpl
test
repz
lcall
out
dec
adc
or
daa
cmpsb
sbb
movsl
mov
aam
inc
and
in
sarb
push
and
pop
push
pop
mov
daa
in
addr16
mov
bound
jne
sub
popf
dec
mov
pusha
out
movsb
fsubl
popf
clc
out
cmpsb
adc
lock
mov
or
movsb
xchg
aad
xchg
lds
rorl
mov
pop
and
xor
push
mov
insl
jge
mov
add
nop
mov
fs
cmp
pusha
int
xor
push
inc
xchg
shrb
adc
adc
in
pushf
xor
push
push
push
imul
dec
imul
loopne
mov
xchg
stc
in
sbb
jge
in
lea
popf
cs
out
mov
sahf
stos
fdivl
sti
jmp
loope
arpl
and
fildll
outsb
mov
inc
cli
push
inc
pop
mov
adc
sbb
jmp
jge
arpl
ja
xlat
xor
or
rorb
imul
rol
xchg
and
pop
nop
sub
sbb
pushl
add
out
test
enter
dec
sbb
jge
imul
movsl
jmp
adc
xor
ss
outsb
xor
cmp
sbb
adc
dec
sbb
ret
adc
mov
lock
push
inc
mov
xorb
lcall
test
add
lret
xorl
imul
xchg
inc
bound
dec
dec
sti
mov
lods
jg
adc
pop
dec
jg
push
mov
subl
push
pop
ds
jmp
mov
xchg
stos
outsb
gs
pop
lea
movsl
test
pusha
jb
loopne
jnp
push
mov
xor
push
aaa
xor
and
test
xchg
jae
sti
inc
sbb
xlat
shlb
enter
push
jb
popf
fiadds
jno
mov
insb
sub
cmp
and
xorb
insl
in
repz
push
test
sbbb
packsswb
aas
xchg
jbe
jb
in
insl
cmp
pop
push
mov
mov
aas
movsl
fimull
sbb
inc
jl
xlat
imul
icebp
outsb
xchg
rol
dec
aam
push
mov
fwait
add
cmp
and
movsl
hlt
inc
push
cmp
or
sbb
mov
add
mov
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
inc
xchg
ljmp
pushf
cmp
jbe
add
add
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
