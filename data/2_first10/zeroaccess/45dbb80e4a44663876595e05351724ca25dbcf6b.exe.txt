push
mov
sub
mov
jmp
incl
shlb
fs
pop
jle
jle
cwtl
jg
jle
xlat
cmp
rol
pop
add
push
jge
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
pop
jno
cmpsb
mov
or
aad
pop
push
add
and
mov
dec
lahf
repz
test
shrl
lret
test
orb
push
and
fildl
xchg
repz
movl
cmp
sahf
push
js
cmp
xchg
add
mov
stos
test
pop
mov
push
rclb
or
cmpsl
jo
test
push
push
cmpsb
bound
addr16
mov
inc
insl
std
mov
cmp
loop
test
and
orb
mov
xlat
mov
inc
and
aas
movsl
test
loope
fldenv
stos
xchg
mov
into
cmp
cmpsb
jbe
dec
fadds
push
lcall
mov
and
jmp
mov
pop
test
xchg
and
and
test
cmp
outsl
cld
dec
mov
mov
mov
movl
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
mov
pop
aam
into
out
sar
cli
hlt
stos
adc
sub
mov
fisubs
jb
mov
adc
inc
fldt
xchg
ret
adc
lret
cmc
mov
mov
in
mov
push
addr16
or
adc
scas
imulb
jmp
cli
or
aas
int
stos
imul
imul
jmp
ret
pop
cmp
cmp
lahf
mov
cmp
adc
xor
fwait
push
sahf
dec
adcb
lcall
sarb
xor
popa
into
fnstcw
arpl
test
cmc
and
scas
sub
lds
ds
dec
mov
jecxz
and
subl
add
dec
stos
pop
repnz
fistl
rorb
clc
fiaddl
jae
push
iret
call
and
lock
mov
and
jp
in
dec
and
data16
cmpsb
in
stc
add
mov
mov
ret
xchg
sub
lea
or
adc
int
dec
inc
xor
push
fwait
add
hlt
pop
mov
mov
movsb
fsubr
lret
rolb
loopne
xor
dec
rorl
je
es
inc
call
jmp
pop
sbb
aas
or
cld
data16
imul
mov
xchg
jo
mov
add
adcl
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
cmp
jle
jg
jle
jb
lea
popf
xor
loop
jmp
add
aaa
insl
jns
out
rolb
sti
call
pop
setg
call
xchg
inc
repz
ds
xor
mov
and
lods
sub
pop
repnz
jp
or
pop
push
inc
addr16
bound
jnp
or
in
xchg
xchg
rorb
dec
jo
pop
loopne
inc
xchg
sbb
sahf
out
dec
cmp
fmull
mov
lock
pop
mov
call
pop
mov
xchg
push
push
cwtl
pop
jo
inc
fbstp
jle
inc
flds
cmp
cmp
cli
repz
outsl
out
lret
fnstcw
mov
pop
dec
or
out
adc
fs
rcll
test
and
mov
daa
bound
call
nop
cli
insl
dec
dec
or
xchg
xor
mov
out
daa
dec
cmpsb
mov
mov
aam
in
movsl
and
pop
adcb
xchg
jle
out
jge
cmpl
cmp
sbb
push
inc
jb
jle
push
fs
or
daa
cmp
pop
repnz
mov
scas
push
leave
mov
add
and
cmp
jg
xchg
imul
jg
lea
shl
mov
jo
or
sbb
mov
int3
sahf
push
add
leave
dec
ret
xor
xchg
scas
jns
lock
push
and
jmp
push
and
pop
xor
jno
cmpsl
cmp
loopne
adc
jp
jle
jg
jle
out
jmp
fisttps
inc
jbe
xlat
aaa
cld
aas
pop
mov
mov
movsb
loop
mov
xchg
ja
in
je
cld
push
mov
ja
mov
lahf
fmuls
lock
in
xlat
lret
xchg
xor
movsb
dec
add
jae
cmp
push
push
aad
or
mov
fsubs
jae
jl
leave
daa
addr16
jae
jle
sub
ret
insl
fisubrs
adc
sti
sbb
out
pop
sub
notl
push
les
jle
sbb
imul
out
ljmp
cmpsb
les
jae
cld
pop
and
rclb
rol
mov
jg
xchg
add
orl
ret
or
lahf
mov
fmuls
adc
jecxz
adc
or
mov
int3
xchg
cmp
shl
in
and
xor
shll
dec
iret
lds
jp
into
and
push
mov
inc
add
sub
idivb
inc
mov
ss
xchg
gs
stos
or
insl
sarb
fs
sub
loop
testl
mov
test
inc
nop
push
stos
sbb
mov
dec
into
xchg
ret
ds
mov
loop
dec
cld
sbb
jno
out
cmp
sbb
push
fwait
dec
add
andb
xchg
mov
dec
out
movsb
and
xchg
xor
rcrb
xor
cmp
add
mov
add
pusha
add
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
loope
dec
mov
lret
stos
dec
lea
mov
lret
pop
mov
call
xor
sub
push
hlt
jle
push
adc
add
mov
sahf
jmp
add
dec
fwait
in
inc
dec
fsubrl
aam
dec
lcall
lock
cmp
mov
lret
js
mov
scas
adc
and
mov
dec
sbb
rcrb
pop
sbb
mov
xchg
daa
mov
dec
dec
adc
notb
inc
repz
adc
cmp
xlat
mov
aam
das
and
ret
rcll
or
js
sub
xchg
movsb
dec
loopne
dec
nop
paddusw
ljmp
cmpsl
out
fbld
push
lds
xor
in
push
push
mov
adc
push
mov
lods
aam
pop
push
or
mov
lods
hlt
pop
inc
push
or
movsb
adc
jge
xchg
sub
mov
mov
jb
inc
scas
xor
cmp
push
cwtl
shll
lahf
push
pop
inc
pop
pop
scas
ljmp
inc
jbe
mov
mov
push
mov
pusha
pusha
push
mov
or
jp
mov
repnz
rorb
frstor
pop
cld
nop
cmp
cmp
add
movaps
outsl
mov
mov
sub
insl
xorl
inc
dec
dec
mov
push
inc
dec
icebp
mov
pop
inc
sub
dec
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
xchg
loopne
dec
xor
jle
cwtl
jg
jle
orb
adc
push
dec
es
in
loopne
ljmp
pop
fadds
in
daa
adc
jge
popa
mov
imul
aas
pop
adc
pop
xchg
jnp
stos
dec
cmpsb
jle
inc
loop
lret
add
hlt
lret
xchg
mov
jp
adc
cmc
shrl
cmp
and
lret
dec
sti
pop
sub
divb
pop
cld
inc
add
stc
jne
rorl
xor
and
xchg
into
xlat
repnz
rclb
sbb
es
or
mov
push
pop
push
inc
lea
lds
jg
push
or
push
xchg
negb
daa
adc
sahf
cltd
cmp
aad
aas
adc
lock
shr
add
ds
jge
adcl
divl
xorl
cli
push
bound
and
cmpsl
jnp
in
jns
cltd
out
xchg
cmc
and
fcomps
enter
je
jae
ret
pop
pop
mov
ret
fldcw
int
sub
fdivl
xchg
divb
or
adc
and
add
addr16
jge
xchg
andb
adc
ljmp
pop
xchg
add
aas
sti
fsubs
cli
ret
pop
imul
cli
xor
and
les
stos
fwait
jecxz
fsubl
mov
into
xor
mov
mov
gs
bnd
adc
xor
push
add
add
inc
cld
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
test
pop
jle
cwtl
jg
jle
leave
dec
lahf
jnp
fsts
dec
ds
enter
pushf
cs
sub
or
xor
inc
cmp
inc
mov
dec
out
xrelease
dec
popf
cmp
aad
imul
test
gs
std
arpl
xor
pushf
ljmp
mov
xchg
mov
ficoml
sti
sbb
addr16
sahf
in
mov
add
int
sahf
or
js
ljmp
jb
add
mov
push
cmp
cmc
fwait
es
push
subl
sbb
mov
dec
lds
repz
push
inc
jl
lds
dec
ljmp
shrl
xchg
pop
sar
mov
popf
enter
mov
adc
test
mov
sub
sti
dec
mov
fbstp
ljmp
dec
and
xlat
insl
hlt
jns
int
dec
mov
jp
jg
popf
and
daa
and
ret
push
test
test
cmp
bound
mov
negl
sarl
push
inc
jne
push
out
fildll
dec
xor
pop
lods
sbb
push
stos
push
call
arpl
or
mov
leave
inc
pop
inc
mov
xor
push
dec
mov
or
dec
push
and
lods
mov
lahf
in
mov
popf
dec
out
decb
push
ljmp
test
icebp
fdivrs
cld
cmpsb
test
pop
sahf
out
lahf
test
mov
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
lods
hlt
shll
test
jle
xor
mov
aad
sahf
sub
jecxz
mov
and
ficoms
xor
xchg
or
mov
loop
dec
shlb
adc
test
repz
cmp
adc
mov
push
adc
out
mov
adc
idivl
dec
adc
jae
shll
dec
inc
and
or
popl
xchg
sar
mov
or
movsb
push
enter
test
aaa
cltd
stc
addl
dec
inc
and
aas
rcll
lods
scas
pop
push
push
movsl
xor
nop
jmp
xor
ss
adc
sbb
jmp
cwtl
addb
outsb
les
pushf
sbb
ror
dec
out
xchg
lods
sar
call
jmp
mov
iret
shl
sbb
jecxz
dec
clc
cmp
pop
or
std
jb
fyl2x
lcall
int3
fidivrs
movsl
cmp
xor
mov
cmp
sub
je
sub
pop
and
pop
mov
xchg
pushf
inc
leave
aaa
dec
adc
or
or
pop
push
jecxz
addl
fsubrp
int3
push
and
cmpsl
and
dec
cltd
sbb
clc
rorl
cmp
or
or
pop
mul
mov
dec
mov
icebp
inc
outsb
mov
mov
sbb
aad
setp
sub
arpl
sub
mov
sub
sahf
sbb
nop
fdivs
add
mov
shrb
jmp
notb
jge
sbb
adc
jb
cmpb
pop
push
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
daa
mov
jle
jg
jle
ljmp
movsb
push
xchg
in
mov
inc
pop
push
jg
daa
jbe
les
imul
mov
xchg
aas
pop
out
sub
icebp
push
mov
push
mov
mov
movb
pop
jo
hlt
jae
inc
fwait
addb
sub
ds
jno
enter
cmpsl
stc
inc
rcll
sbb
sbb
sbb
jmp
movsl
dec
mov
femms
sub
sbb
stos
push
pop
std
lahf
add
gs
sbb
mov
aam
popf
sub
das
adc
das
cmp
push
sub
test
adc
xchg
int
loopne
stc
pop
and
push
sub
adcb
in
test
cmc
adc
lret
fadds
in
and
leave
movsl
lret
sbbw
aam
mov
fdivrl
cmp
mov
test
xchg
int
lret
inc
mov
jge
stos
ror
cmpsl
jp
shrl
popf
jnp
test
and
fldl
sbb
jp
ja
fs
sahf
xchg
dec
and
inc
aas
test
add
cmpsl
int
rolb
push
sub
add
in
add
cmp
adc
loopne
repnz
dec
popf
pop
or
sbb
or
jecxz
inc
in
out
push
int
shrb
and
pop
cmpsb
dec
xlat
push
inc
dec
sbb
stos
lcall
shlb
push
test
imul
outsl
fmull
jnp
in
and
fiadds
imul
in
test
out
push
andl
mov
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
fs
stc
inc
add
push
jg
jle
scas
imul
mov
lods
pop
cmpsb
sub
lods
pop
sub
call
jmp
mov
push
or
icebp
or
sub
sbb
movsl
pop
aaa
cmpb
push
xorb
mov
sub
jb
sub
outsb
ficoms
je
add
stos
rcl
shll
imul
in
test
pop
rcrb
ficomps
mov
adcl
clc
adc
enter
jb
js
enter
gs
mov
cld
roll
pop
jp
aaa
std
push
and
jecxz
xchg
pushf
push
mov
pusha
outsb
cmp
adc
adc
adc
jecxz
cmpsl
out
mov
pop
lcall
ret
mov
or
cmpsl
and
out
cmp
xor
mov
dec
mov
je
add
stos
adc
cs
xor
push
cld
nop
rorb
insb
pusha
sbb
pusha
mov
add
popf
lcall
xchg
mov
pop
xchg
popf
test
sbb
outsb
xor
jl
out
lods
roll
xchg
call
stos
scas
ficompl
out
sbbl
in
in
pop
mov
fisubrs
sub
jge
js
xchg
das
dec
pop
cmpsb
mov
imul
ret
addr16
arpl
imul
inc
dec
mov
jnp
mov
iret
in
adc
mov
data16
mov
pop
xor
cmp
sub
in
mov
jle
std
popa
sbb
adc
andb
ret
cmc
cli
or
call
jnp
adc
fcmovnbe
add
mov
mov
add
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
sub
jle
push
jg
jle
sbb
xor
ja
fildl
add
jo
loopne
or
ret
sbb
dec
mov
test
das
jle
fadds
pushf
fs
addr16
pop
adc
test
jecxz
sub
mov
push
fidivrs
lods
add
int3
or
mov
sub
sub
repz
cmp
push
roll
adc
stos
mov
add
xor
jnp
test
loope
add
out
push
xchg
or
push
and
push
mov
push
jae
insl
pop
pop
ljmp
pop
inc
push
fisttpl
pop
test
dec
mov
popf
bnd
movsl
sbb
sti
and
add
stos
mov
cmp
outsl
divb
outsl
ja
xor
popf
sbbl
push
add
jg
jb
dec
fnstenv
push
pcmpgtd
pop
inc
mov
jmp
fstpt
js
inc
push
in
push
mov
push
sub
xlat
or
dec
push
rcrb
test
sti
lock
gs
je
scas
fwait
popf
inc
lret
in
aaa
sbb
push
std
outsb
pop
push
lcall
dec
sbb
inc
cmp
cmp
xchg
scas
lods
fldt
dec
ret
arpl
je
push
jbe
xor
xchg
cmp
or
cmp
inc
push
mov
pop
addr16
jmp
adc
out
shll
add
or
jmp
mov
jecxz
jmp
sbb
xchg
out
ret
sti
jle
popf
movsl
pop
mov
add
pop
xchg
jnp
push
jecxz
inc
fs
fdiv
push
xor
cli
aam
sbb
mov
fisubrl
leave
sbb
jbe
movsl
in
ljmp
enter
das
adc
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
and
push
jg
jle
xchg
jo
dec
mov
cli
cld
and
sub
xor
push
loope
pushf
testb
xchg
dec
out
xlat
mov
or
xchg
push
mov
sbb
insb
push
les
icebp
adc
push
pop
movsl
les
cld
jge
je
jns
push
stos
imul
aas
lea
bound
push
and
and
hlt
jne
xor
push
pop
sub
imul
pop
in
cwtl
adc
addb
pushf
jp
into
cmp
daa
mov
lods
dec
sub
ljmp
leave
test
leave
or
test
dec
test
xor
add
mov
call
mov
das
icebp
rcl
xchg
test
mov
lcall
fs
add
mov
lret
rol
sub
jns
or
es
xchg
icebp
jb
ss
js
sub
out
dec
ret
dec
and
push
insl
daa
or
lret
xor
add
imul
stos
pop
cmp
lock
inc
cmp
into
adc
jg
xchg
inc
jb
fildll
push
fbld
pop
jp
inc
xchg
lods
cmp
add
test
or
inc
mov
arpl
push
xchg
cmp
pop
leave
inc
mov
lret
mov
pop
stc
pop
imul
cs
gs
sbb
popa
dec
pusha
adc
data16
xchg
cli
sbb
arpl
out
xchg
stc
sub
sub
repz
lret
mov
imul
stos
push
movsl
loopne
or
das
je
hlt
fimull
xchg
mov
jb
lods
sub
fisubl
push
jp
jnp
cmp
sbb
lds
mov
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
push
lods
dec
or
push
jg
jle
filds
lret
push
pushf
sub
pop
aam
dec
imul
dec
scas
mov
or
aam
pop
cmpl
mov
mov
mov
xor
addl
push
clc
aas
xor
enter
lea
mov
and
or
sahf
mov
scas
fdivrs
dec
dec
sbb
xor
movsb
mov
mov
cli
cmc
in
jns
xchg
aas
test
push
jo
pop
out
or
mov
inc
ja
or
pop
pusha
cli
fdiv
xchg
test
adc
mov
stc
jecxz
jae
and
rcr
add
js
inc
adc
jno
jl
js
mov
ss
addr16
dec
xchg
xchg
stc
cmp
in
xchg
pop
dec
sti
in
popl
es
pop
fxch
enter
pop
lcall
hlt
stos
jle
repz
out
adc
mov
add
inc
icebp
iret
aad
ret
jp
mov
fucom
and
pop
or
and
mov
sbb
xor
cs
out
or
ja
and
pop
pusha
mov
mov
inc
push
add
mov
xchg
int
ds
mov
push
int
push
inc
shlb
loop
cs
mov
xchg
sbb
jno
add
mov
cli
lods
dec
sidtl
xchg
push
pushf
js
test
add
dec
add
mov
cmp
ja
lods
mov
sub
fists
dec
addl
push
xchg
sar
jb
pop
pop
fstl
out
sarb
jns
mov
mov
xchg
sub
adc
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
pop
jnp
mov
or
scas
jg
jle
in
pop
sub
xor
sti
scas
push
ss
push
add
cmpsb
imull
cli
or
mov
adc
popf
xor
sti
push
inc
pop
push
pop
testl
xchg
xchg
ljmp
jo
pop
dec
popa
push
ds
mov
in
stc
inc
xchg
inc
rcr
mov
jg
jmp
shl
and
and
lods
aad
bound
arpl
dec
outsb
adc
bound
std
repz
arpl
ja
cmp
fldcw
scas
addr16
andb
and
cmpsl
mov
shr
daa
xor
xor
arpl
mov
push
pop
pop
enter
fisttps
pop
push
mov
lahf
rolb
test
push
and
mov
sub
jnp
cltd
pop
jle
in
jbe
popa
and
scas
mov
or
out
xor
jb
pushf
jle
xor
in
in
push
lret
jns
out
and
cmc
push
xor
lcallw
jge
push
and
or
push
xchg
push
std
shlb
in
mov
lods
push
test
pop
es
mov
pop
aaa
mov
scas
and
pop
cmp
data16
jmp
jo
sub
push
adc
mov
push
std
aas
adc
adc
add
jb
imul
pushf
addr16
add
dec
imul
mov
lcall
loope
pusha
int3
jl
fisttps
xchg
cmp
shr
xchg
lods
dec
not
cli
loopne
inc
clc
xor
lock
outsl
in
inc
add
or
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
aam
mov
push
jle
scas
jg
jle
ret
lock
subb
fstps
jo
pcmpeqd
ret
push
stos
mov
leave
loope
sbbl
mov
push
adc
cmp
pop
mov
mov
popf
gs
test
lret
out
add
push
pop
add
ret
xchg
jnp
mov
add
add
and
inc
jnp
int3
xchg
cmp
xor
mov
std
pushf
pop
imul
jl
and
or
sbb
sbb
sub
cmp
ja
bnd
inc
fcompl
push
mov
xchg
jno
mov
pop
sub
mov
loopne
sub
xchg
push
cmpsb
inc
mov
cld
add
mov
lahf
pushf
push
fwait
and
and
movsb
fwait
pop
stos
test
aaa
imul
repnz
lret
push
add
subb
mov
cmp
aas
mov
cmpsb
cwtl
add
jne
sub
lock
in
push
sbb
inc
inc
add
or
add
test
fcmove
mov
push
xchg
dec
xchg
hlt
mov
leave
imul
mov
mov
das
popf
rcr
cmp
stos
movsl
xchg
dec
or
pusha
dec
int
in
rcl
negl
mov
sbb
adc
and
stos
inc
movsl
push
sbb
add
sbb
mov
cli
ja
or
jns
fisubs
addr16
jmp
aad
sbb
sti
lea
mov
mov
jecxz
test
push
cmp
lret
mov
negl
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
mov
adc
jle
jg
jle
lret
fsubl
out
mov
int3
or
inc
inc
stos
and
movsl
xchg
ljmp
push
shl
and
or
ret
fsubl
sbb
cmp
out
cs
adc
mov
mov
push
mov
pushf
push
jge
mov
aaa
repz
xchg
cli
scas
cmp
lret
aad
ds
xlat
ret
inc
dec
outsb
push
pop
cmpsb
pop
outsb
ret
rorl
push
push
pushf
mov
jge
notl
loop
setns
mov
fisubs
sbbl
adc
cs
adc
push
in
sbb
out
sbb
push
or
push
popa
add
fidivrs
cli
jno
and
leave
push
jmp
imul
movsl
add
outsb
sub
mov
mov
in
adc
or
das
ds
adc
into
rcll
faddp
pop
adc
xlat
hlt
push
mov
mov
adc
data16
bound
adc
add
lock
inc
in
ficoms
jg
clc
add
aaa
fnstsw
push
mov
xchg
in
dec
lea
adc
mov
or
pop
sub
cmpsl
ret
loope
jmp
dec
lock
xlat
push
push
mov
mov
movsl
mov
testb
ret
push
vunpcklps
pushf
stc
je
sbb
enter
xchg
fimuls
mov
shlb
cmp
daa
daa
ret
jmp
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
push
mov
jle
jg
jle
inc
shrb
jns
inc
cmpsl
pop
mov
enter
mov
pop
test
adc
outsb
sbb
sbb
aam
ret
jno
cmpsl
adc
mov
mov
add
push
rol
cmp
shll
push
clc
mov
loope
int3
dec
mov
cs
out
dec
add
rcr
mov
scas
fisttps
mov
adc
das
mov
cmp
dec
popf
cmp
subb
popl
add
inc
jnp
and
push
cltd
push
cmp
cli
insl
lock
into
pop
dec
cmp
icebp
cld
mov
scas
sbb
jmp
mov
pop
int
and
sahf
out
aad
test
add
stos
lods
jl
and
mov
sahf
pop
push
lea
out
push
cwtl
ret
and
jmp
jae
pop
mov
mov
repnz
push
xchg
sub
out
sub
imul
mov
sub
pusha
popa
or
test
mov
pop
jns
into
outsb
inc
or
ds
xor
ja
push
shl
std
pop
movsb
clc
fcmovu
inc
cmp
adc
ret
lret
mov
sbb
fwait
mov
ss
cmp
cs
std
cmp
fistpll
addr16
xchg
mov
xchg
scas
push
jne
iret
pushf
andl
sbb
adc
je
push
or
mov
stc
ljmp
and
fcmovu
cmp
ss
je
mov
mov
jl
add
insb
xchg
lret
mov
xor
add
jmp
jl
mov
mov
jge
fldl
call
ljmp
jle
les
adc
mov
mov
leave
inc
das
jge
mov
jmp
je
mov
cwtl
or
pop
xor
pop
test
test
sub
adc
mov
sub
inc
push
cmp
push
jp
or
enter
or
mov
and
into
mov
cmp
xlat
mov
dec
inc
enter
jle
divb
cmc
decb
imulb
pushf
mov
xor
movsl
pushw
and
mov
cwtl
out
add
adc
sub
movsb
fmull
scas
cmc
ror
or
mov
outsl
push
inc
xor
in
xchg
ret
inc
bound
jp
sub
lcall
dec
popf
mov
and
dec
push
mov
into
insb
aam
inc
fisubrs
adc
insl
call
mov
icebp
enter
fildl
xchg
lock
pop
mov
sbb
pop
sbb
loopne
inc
add
add
push
cmp
sbb
rorb
dec
ja
sbb
xchg
jg
add
lret
fstpl
int3
dec
imul
sub
and
dec
addr16
rorb
lods
rclb
cs
cmp
sbb
out
mov
add
mov
jp
push
xchg
popa
arpl
cmp
aad
cmc
popa
dec
add
mov
pop
les
mov
pop
or
adc
cwtl
std
aaa
adc
jb
mov
jmp
mov
fstpt
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
sbb
mull
sub
lds
cmp
xchg
and
cld
rorb
cld
orl
pop
mov
stos
cld
ljmp
mov
jmp
test
je
out
fs
movsb
jecxz
push
insb
adc
outsl
xor
push
lahf
out
mov
ja
inc
and
dec
sbb
and
imull
sbb
xor
cwtl
xchg
ss
scas
mov
jno
call
iret
mov
adc
daa
inc
dec
xchg
push
sub
xchg
test
lret
in
mov
xor
mov
sbbb
inc
es
pop
inc
mov
pop
inc
pop
aaa
dec
pop
into
and
shrl
imull
adc
nop
dec
aaa
aaa
mov
stc
cwtl
xchg
xchg
lea
imul
dec
fstpt
stos
cwtl
movsl
push
and
in
inc
mov
les
adc
jae
or
imul
sub
or
and
imul
mov
dec
xor
add
out
mov
call
loop
inc
inc
pop
xor
out
mov
add
icebp
cwtl
push
xor
mov
pop
out
pop
scas
jmp
std
xor
rorl
xor
les
jg
pop
push
js
loope
clc
insb
sti
mov
mov
mov
xchg
inc
loope
mov
in
or
jne
loope
and
push
xchg
xchg
xlat
clc
push
orb
into
or
xor
inc
jecxz
pop
xor
pop
aam
jb
jmp
mov
cmp
test
mov
test
inc
call
jmp
scas
or
xor
mov
mov
jle
scas
jg
jle
in
sbb
loope
inc
jo
fcoms
test
xlat
and
insl
pop
shl
adc
push
lods
adc
inc
je
jecxz
mov
std
ret
imul
bound
push
pop
gs
push
into
stos
pop
cmpsb
cmp
jge
sbb
xchg
add
sahf
pop
cmp
or
mov
test
addr16
jmp
adc
jl
pushf
in
clc
ror
push
fs
sbbl
mov
xor
popf
dec
adc
cmp
sub
push
mov
sahf
cltd
cwtl
mov
jecxz
cwtl
dec
ljmp
daa
mov
popf
nop
mov
xor
pop
pop
mov
cmp
push
out
push
mov
enter
rol
test
pop
xor
popf
adc
push
mov
mov
sbb
std
mov
push
mov
movsl
cmpsl
in
fimuls
stos
pop
add
xchg
daa
insb
push
pop
repnz
into
movsb
out
js
cmp
xorb
lcall
rcrb
loop
lods
out
dec
jo
dec
scas
arpl
adc
dec
xchg
filds
cmp
nop
sbb
mov
or
or
fdiv
sub
or
and
iret
sbb
lock
sbbl
adc
adc
imul
dec
adc
cmp
fwait
cmp
mov
pop
mov
pop
cmc
adc
shll
mov
jecxz
ret
fs
cmpsb
test
inc
popa
push
xor
scas
fwait
outsl
adc
scas
arpl
jo
sub
sbb
pop
push
dec
dec
inc
ljmp
mov
mov
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
jo
mov
cmc
mov
and
cmpb
inc
cmp
ret
bound
addr16
imul
xchg
mov
inc
aas
inc
mov
jmp
adc
imul
mov
mov
test
lcall
hlt
jmp
test
pop
sbbl
add
and
adc
mov
shll
mov
xchg
inc
ljmp
mov
cs
adc
dec
ret
mov
cmp
mov
or
jmp
in
loop
cmp
lret
lock
sbb
mov
cmp
mov
movsb
outsl
xchg
mov
push
loop
ret
push
jmp
xchg
popa
push
or
xchg
lock
cmc
mov
test
adc
inc
sub
add
cmpsb
mov
mov
mov
xchg
pop
into
sbb
inc
dec
mov
lcall
add
push
pop
jg,pt
adc
sbb
das
lea
cs
sub
sbb
out
mov
rorl
andl
mov
adc
add
cmp
int3
repz
dec
fsubl
push
cltd
mov
and
jne
dec
push
jl
pop
push
mov
test
pop
adc
or
jo
pop
cmp
scas
dec
imul
ror
mov
fsub
adc
push
stos
out
push
ror
mov
cwtl
call
rclb
lods
or
stos
push
pop
xlat
aaa
xor
or
mov
fidivl
andb
inc
lock
xor
jmp
pop
sub
dec
insl
dec
imul
and
stos
rolb
push
scas
jg
jle
xchg
cs
and
mov
push
stc
addr16
repz
mov
jmp
popf
and
mov
fldenv
sti
test
add
insb
out
orb
ret
push
mov
mov
mov
mov
cmp
test
inc
fwait
cltd
sub
mov
imul
cs
jge
outsl
in
or
ljmp
mov
mov
inc
mulb
add
inc
fdivr
adc
cld
cmpsl
pop
imul
sbb
push
inc
adc
jl
sub
lods
loop
fst
mov
sub
adc
sahf
mov
push
pop
jg
mov
mov
mov
ret
data16
cld
sub
push
into
call
mov
cli
pop
jl
mov
cmp
scas
mull
div
daa
adc
push
inc
jl
adc
mov
mov
mov
ljmp
sbb
push
outsb
jp
push
pusha
cmp
shrl
or
mov
cmpsb
xor
xchg
push
mov
out
xchg
or
call
fcompl
insl
je
in
addb
les
mov
xchg
rcll
or
stos
add
xchg
mov
jmp
and
pop
daa
xchg
mov
or
push
punpckldq
sub
sub
imul
sub
xor
hlt
stc
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
cltd
fimuls
pop
push
sbb
cltd
jg
jle
or
fwait
mov
lea
out
inc
ficoml
and
pusha
push
fcmovb
xor
roll
sbb
xchg
int3
jl
mov
cmpsl
stc
mov
sbb
or
cmp
movsb
inc
insl
and
dec
popa
repz
stos
lods
xchg
fisubs
rcll
divb
sahf
icebp
dec
push
jne
xchg
or
ror
test
jmp
mov
imul
mov
cltd
mov
and
push
jnp
add
mov
jp
movsb
pop
xor
pop
dec
jns
xchg
js
xchg
xchg
shlb
push
in
or
in
or
shrb
xor
outsl
cmp
push
in
mov
jmp
xor
inc
xchg
xor
sahf
nop
mov
xchg
inc
adc
hlt
xchg
xor
pop
fcmovne
das
and
add
dec
xor
jg
dec
cmp
inc
shrl
addr16
pop
sbb
clc
jmp
or
int
jno
xlat
xchg
nop
mov
scas
lret
fs
jge
inc
xchg
cmpsb
sub
pop
sbb
cmp
lods
test
insb
adc
sarl
aad
add
add
mov
or
sub
adc
pop
jge
mov
pop
xlat
gs
fisubrl
or
adc
rclb
ror
pop
aad
pop
int
mov
sbb
clc
shll
out
sub
add
movl
mov
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
mov
sbb
cltd
jg
jle
sub
iret
test
lds
jl
out
dec
gs
aaa
jmp
sbb
inc
mov
cld
mov
pop
cld
jns
push
cmpsb
jge
cmp
push
and
addr16
pop
ret
xor
sub
xor
in
xchg
inc
jno
cmpsb
push
xor
sarb
popf
les
out
and
iret
jmp
push
loopne
mov
loop
and
loop
insl
mov
mov
or
jecxz
or
arpl
rorb
enter
or
jge
sarb
pop
xor
les
and
jae
lock
push
cltd
stos
outsl
or
sahf
repnz
sti
mov
mov
sahf
lret
or
mov
xchg
pop
push
aas
jge
outsb
sbb
cld
into
cmpl
fwait
outsb
push
push
scas
popa
sub
es
pushl
mov
cld
push
pop
mov
or
sub
xor
dec
mov
mov
cmp
push
rorl
idivl
jns
push
arpl
ret
xchg
jo
and
push
js
fistpl
inc
test
fsubrl
lods
ljmp
inc
inc
xor
rolb
push
mov
cli
ljmp
xor
insb
cmp
in
mov
fists
push
lock
dec
popa
rorb
lahf
push
out
jbe
sbb
inc
push
shlb
lods
pop
mov
dec
test
and
mov
mov
fwait
push
stc
sbb
aam
add
add
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
movb
daa
jle
xchg
jl
jle
js
jnp
adc
inc
ljmp
or
sbbl
inc
mov
xor
negb
cld
push
mov
sbb
add
jno
mov
scas
inc
push
lret
das
jp
sub
outsl
push
icebp
in
jo
aad
fimull
ret
popa
fsubl
jne
mov
scas
pop
jns
mov
decb
or
cmp
sub
sbb
push
dec
pop
aam
mov
fdivs
arpl
iret
imul
cmp
cmc
ss
pop
loop
mov
aam
fnstsw
orb
out
dec
and
nop
jl
mov
adc
jmp
xchg
push
push
jbe
cmp
in
sub
dec
pop
sub
push
pop
fs
fstpt
add
out
push
push
inc
fwait
into
out
pop
mov
dec
pop
test
sti
sbb
aaa
scas
jge
add
es
in
stc
pop
stc
lret
and
shrl
inc
pop
rcrb
clc
sub
push
or
push
lcall
adc
add
ds
fisttpl
or
pop
sahf
push
sub
ret
movsb
popf
mov
jnp
mov
cld
aad
jecxz
mov
outsb
ret
push
lods
ret
sbb
fcomip
shr
inc
inc
push
jns
int3
popf
into
push
mov
cmp
arpl
incb
lret
decb
sar
loopne
int3
orl
mov
icebp
pushf
pop
cmp
xchg
jp
repz
out
xchg
cmp
mov
dec
cmpsl
xor
mov
jle
test
cmp
mov
xor
jno
aam
sub
out
pop
rclb
jle
nop
pop
xchg
pop
jmp
sbb
jns
inc
and
mov
std
sahf
dec
inc
shlb
add
mov
xor
adc
ljmp
icebp
lds
push
or
shll
ficoml
pop
add
test
dec
arpl
sub
sub
mov
popa
and
mov
mov
divl
je
sub
ror
mov
pop
push
xchg
dec
test
dec
mov
lret
les
and
add
test
lods
jne
push
mov
cmp
push
aaa
sbb
cli
sbbb
lods
xor
imul
lds
sbbb
arpl
fldenv
jl
out
xor
or
lea
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
call
and
jle
xchg
adc
mov
inc
mov
aam
push
mov
inc
repnz
add
rolb
movsb
or
xchg
repz
mov
mov
gs
in
aas
stos
fstpl
pop
xchg
push
loop
jbe
in
cmpl
scas
push
mov
imul
lahf
cmp
xchg
dec
les
imul
out
rorl
jp
xor
sbb
cmp
sbb
orl
xorl
fcoml
xor
push
pop
aam
insb
stos
xor
xlat
insb
inc
pop
cwtl
fs
mov
or
jmp
test
das
int3
mov
jbe
bound
movsl
cwtl
enter
dec
xchg
out
mov
dec
insb
mov
pop
sahf
das
cmp
frstor
mov
dec
push
mov
cmp
mov
and
lret
ja
lock
jbe
xchg
push
jecxz
repz
sbb
mov
jnp
icebp
mov
call
xor
fdivp
imul
jb
cmp
sarl
out
mov
cmpsl
jo
mov
push
pusha
ror
pop
adc
pushl
lahf
sub
sub
pop
pop
ss
repnz
sarl
inc
bound
cmp
add
insb
push
andl
inc
adc
jb
mov
adc
into
xchg
adc
repnz
rcrb
and
jmp
jecxz
shrb
fildl
push
xor
loop
cmpsb
testb
sub
xchg
shrb
cld
je
and
sbb
inc
mov
cmp
inc
cs
pop
push
push
fcoml
lock
ret
in
test
addr16
xor
imul
xor
imulb
or
mov
test
pop
fmull
dec
cltd
test
xlat
jo
jecxz
jge
es
lock
test
mov
sbb
mov
test
lret
imul
sbb
arpl
lret
sbb
dec
cmp
shrl
dec
aaa
push
adc
inc
and
bndstx
ja
pop
lcall
mov
mov
dec
push
dec
popf
fildll
jo
push
lods
xor
sub
loope
jbe
ljmp
adc
or
div
mov
and
or
mov
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
test
cwtl
push
mov
mov
imul
jle
out
flds
fld1
xor
inc
dec
icebp
or
mov
ret
sub
adc
les
fdivp
cmp
jl
xchg
inc
xor
int3
cmp
cli
js
push
and
fwait
rcll
and
jnp
jge
cmp
add
xlat
jp
imul
call
rcr
filds
mov
js
cmpl
out
scas
push
mov
dec
mov
xchg
and
mov
aad
xor
mov
adc
gs
adc
testl
data16
gs
mov
mov
mov
sbb
xchg
xchg
cld
jle
cmc
adc
jp
gs
lods
loopne
mov
fwait
add
push
pop
jmp
imul
cmpsl
push
lds
es
xchg
shr
jmp
aaa
cmp
scas
je
lret
xor
call
andb
sbb
xor
shll
mov
push
int
xor
arpl
fildll
or
cmpsl
orl
in
pop
mov
scas
sbb
jns
insb
shl
andl
dec
dec
aaa
cmp
subl
mov
insb
cmp
mov
sub
gs
xchg
lods
and
add
or
cmpsb
into
fnstenv
loop
call
xorb
enter
xlat
xchg
hlt
inc
xchg
jne
mov
and
mov
call
lods
push
nop
fdivrl
mov
movsb
jb
fsubs
xchg
bound
jp
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
jbe
sbb
jle
jg
jle
movsb
js
mov
jae
call
pop
inc
dec
ror
push
jns
setbe
test
loopne
cli
aam
xchg
xor
xor
cwtl
ja
fidivs
mov
push
push
iret
inc
imul
sub
mov
outsl
xorb
das
inc
aas
mov
push
aas
in
aaa
mov
stos
xor
fnsave
into
mov
sub
and
mov
lea
and
jge
adc
jb
adc
xchg
dec
jnp
enter
xor
and
mov
inc
add
pop
push
add
insl
enter
add
fisttps
shl
mov
das
xchg
add
test
pop
jge
std
lods
mov
nop
test
xorl
jno
mov
les
imul
jb
add
xor
xchg
mov
je,pn
es
pop
xor
sbb
les
in
push
jg
push
cmp
sub
stc
push
push
hlt
out
jns
and
movsl
loop
add
shll
aas
pop
fbstp
pop
bound
fnstsw
push
nop
mov
call
pop
pop
repz
lahf
sub
mov
enter
rcrb
loopne
stos
xor
or
push
and
andl
add
and
mov
test
cmp
cmp
icebp
aas
cmp
inc
cmpsb
fwait
xchg
enter
stos
add
xchg
mov
cmp
cmpsl
shrb
and
sbbb
aam
mov
xchg
mov
gs
test
mov
cmp
faddp
xlat
sub
xchg
adc
fidivs
fsubrp
sbb
push
dec
adc
popa
icebp
jne
push
sarl
cmc
lret
out
xlat
arpl
mov
imul
repz
xor
or
arpl
sub
jle
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
sahf
stc
jmp
jle
jg
jle
cmp
push
pushf
push
js
out
lods
insl
sbb
jb
lods
aam
push
cwtl
testl
movsb
mov
xchg
cld
or
nop
xchg
mov
iret
lahf
xor
dec
in
jbe
adc
cs
cmc
into
cmpsb
fwait
sar
loope
add
ss
xchg
mov
lea
icebp
mov
push
loop
js
dec
sub
pop
imul
mov
into
mov
adc
icebp
movsl
fdivrs
out
orl
xchg
jl
stc
lret
mov
and
stos
pop
cltd
addl
rclb
sub
leave
inc
bound
cwtl
in
sbb
dec
mov
cmc
sub
mov
or
aam
add
popf
mov
shrl
xchg
loopew
jnp
mov
sbb
pusha
les
push
cmpsl
cmp
into
ror
mov
mov
daa
push
sbb
insb
imul
pop
jmp
mov
xchg
jle
lcall
pop
xchg
fbld
push
inc
xor
testl
stc
popf
lods
jg
sahf
popa
jmp
cwtl
mov
mov
and
in
in
cmp
les
out
sub
mov
fidivl
cltd
pushf
movsb
inc
push
dec
jns
or
cmpsb
push
test
add
push
sbb
repz
sub
add
fwait
jp
std
popa
lds
jle
xchg
xor
stos
xchg
push
adc
pop
pop
cmp
mov
mov
cltd
call
mov
jp
jae
inc
arpl
dec
mov
sbb
cmp
inc
imul
cmp
sub
fmulp
inc
dec
jmp
inc
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
push
add
sub
push
jg
jle
mov
lock
mov
jo
xor
mov
jge
adc
cmpsb
jne
pushl
jmp
outsb
sub
loop
sbb
push
out
lods
and
imul
sub
xor
mov
pop
adc
adc
repnz
notb
mov
push
xor
pop
inc
inc
jbe
inc
mov
mov
ret
xorl
pop
inc
ror
stos
and
sti
xchg
cmp
adcl
and
jno
pusha
call
jl
cmp
pop
out
and
sbb
cs
mov
bound
push
adc
fs
push
les
mov
movb
into
movsl
imul
xchg
add
insl
in
push
insl
xchg
pop
mov
in
stos
pop
leave
enter
push
mov
div
gs
xchg
int
push
sarb
stos
cmp
and
mov
mov
adc
jb
pop
dec
lret
lods
leave
cmpsb
dec
inc
sub
inc
gs
sbb
call
fcom
sbb
pusha
xchg
imul
insb
hlt
add
scas
xchg
sbb
stos
pop
dec
sub
imul
lods
flds
or
mov
inc
push
pop
movl
shl
push
inc
pop
rcl
xchg
rclb
clc
lret
push
test
mov
insl
dec
jg
mov
mov
ds
stos
mov
ret
add
std
push
cwtl
inc
nop
fdivs
aad
std
inc
std
mov
daa
adc
stos
xor
hlt
test
cmp
add
pop
in
inc
add
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
cltd
cmp
or
jg
jle
push
in
xchg
lcall
hlt
gs
sti
movsb
out
or
inc
mov
call
inc
movsl
xlat
dec
mov
pusha
mov
mov
sbb
mov
outsl
mov
jbe
fsubs
sar
repnz
adc
frstor
fs
std
xchg
std
rcr
ficompl
dec
mov
shll
mov
mov
and
xor
push
test
xchg
mov
add
addr16
mov
and
or
in
xchg
xor
dec
cmpl
ss
mov
dec
xor
out
xchg
push
xchg
add
shll
jo
and
push
add
pusha
cmpsl
sbb
jnp
testb
call
mov
jecxz
cmpsl
dec
mov
pop
jb
popa
rcrl
fs
mov
sub
loopne
popa
popa
lret
aam
fstps
in
fstps
test
xlat
xchg
adcb
in
ljmp
mov
mov
shrl
ret
fscale
out
jno
xchg
sahf
jp
mov
push
addr16
maskmovq
testl
xchg
sahf
xchg
sub
ja
cli
inc
pop
add
stos
sub
aam
les
cli
push
pop
or
mov
and
nop
rorb
xchg
cli
ja
js
pop
mov
inc
das
xchg
aaa
and
enter
iret
dec
fsubrs
jmp
xor
fcomps
jl
xlat
sub
cmpsb
xor
and
lds
cli
xchg
xchg
gs
adc
push
push
cmc
int
rolb
dec
sub
cmp
movb
push
mov
add
push
jmp
jne
adc
flds
mov
dec
xchg
mov
jle
jg
jle
mov
cmp
xchg
jne
ja
push
sbb
or
xchg
inc
push
jmp
iret
outsl
mov
out
xchg
mov
imul
cmp
lods
popa
incl
test
xchg
mov
and
lds
adc
lods
mov
clc
cmp
popa
cltd
sub
sti
push
and
xchg
dec
adc
inc
sbb
jle
lahf
mov
jecxz
loope,pt
lret
ja
daa
mov
lock
push
andb
aaa
cwtl
js
das
mov
mov
and
cld
mov
ljmp
ret
cld
cmp
loopne
inc
xchg
mov
leave
sub
push
orb
cld
in
pushf
dec
add
scas
sbb
nop
shll
dec
sbb
inc
xor
jnp
add
jnp
popf
iret
js
in
xchg
lahf
inc
dec
pop
fwait
mov
jae
cmp
push
je
xorl
jle
jle
jge
push
mov
cmp
aam
push
clc
subb
sbb
jnp
mov
pusha
fsubrp
dec
pop
in
jno
push
pop
and
mov
add
push
aam
push
pop
mov
push
xor
sti
setl
and
in
scas
sub
add
push
mov
cs
mov
sbb
sbb
and
repnz
test
je
xchg
lods
adc
push
add
push
loop
dec
jmp
scas
shrb
rolb
xchg
cmpsl
std
jb
inc
mov
mov
cmp
loope
inc
fstl
in
xlat
fmuls
pop
adcb
in
push
and
cmp
push
imul
add
add
xor
and
add
clc
add
add
add
xchg
push
shll
test
jle
push
jg
jle
inc
push
jge
das
or
or
loop
in
cs
cmp
mov
and
or
sub
mov
pop
xchg
dec
and
pusha
and
sub
movsl
pop
push
push
push
addb
fsub
into
jno
sbb
hlt
aad
sub
movsb
mov
out
add
sbb
bnd
out
test
insl
test
adc
ret
lock
movsl
ret
movsl
xchg
xor
popf
xchg
je
leave
hlt
push
inc
mov
test
jbe
div
push
cltd
inc
cmp
stos
add
push
scas
test
lcall
jp
shlb
pop
jno
pop
sub
in
xchg
aaa
stos
dec
add
cmp
cmp
add
popf
testb
xchg
add
sub
in
mull
call
in
jge
sbb
pop
std
xchg
xchg
mov
fimuls
arpl
mov
or
pop
fs
movsb
and
jle
mov
mov
inc
push
mov
xchg
pop
xchg
repz
rcl
cmp
aam
ja
mov
int3
push
dec
ret
sarl
sti
scas
lods
mov
repz
loop
sub
mov
or
mov
xchg
inc
orb
cmpsl
int3
push
mov
in
inc
mov
shrl
mov
notb
icebp
pop
push
jle
fsubr
inc
inc
mov
stos
call
jb
pop
mov
cli
mov
sbb
pop
sbb
fprem
hlt
pop
loopne
in
in
arpl
movsl
xor
pop
push
jl
int3
adc
sbb
push
sarb
pop
in
stc
sub
pop
fcomps
ficoml
ret
arpl
out
ret
or
iret
jno
shlb
mov
jnp
cmp
outsb
mov
cmpsb
jne
and
inc
loopne
test
repz
add
hlt
pushf
dec
mov
inc
and
lcall
push
jg
jle
pop
in
out
inc
test
test
dec
out
mov
sbbb
pop
pop
lea
xchg
ret
nop
sbb
rolb
cltd
lret
and
mov
mov
enter
or
push
jmp
adc
loopne
roll
das
jae
mov
pop
xchg
cmp
xchg
inc
loope
and
cwtl
aam
in
mov
inc
in
inc
push
xchg
adc
out
jae
pop
leave
ds
repnz
fmul
jecxz
inc
aas
lcall
in
gs
in
mov
outsl
mov
pusha
inc
fsubr
ja
fcmovnb
or
inc
xlat
aam
arpl
loopne
test
data16
addr16
mov
inc
xor
mov
pop
leave
pop
xchg
sarb
xor
sbb
push
scas
cmp
inc
mov
jle
shlb
test
mov
dec
aas
dec
inc
mov
fidivl
cmp
inc
mov
dec
cmp
shll
fnstsw
in
mov
or
pop
mov
fldenv
mov
push
outsl
jno
sub
rolb
inc
mov
jnp
sti
cmpsb
adc
das
icebp
xor
shr
mov
int3
sahf
pop
dec
xchg
adc
movsb
jbe
cs
popl
ret
int
xor
into
repnz
stos
and
imul
ror
and
xchg
daa
xchg
mov
insb
inc
out
in
cmp
ss
imul
jb
daa
shrl
hlt
cmpsl
jl
mov
add
cmp
dec
cmp
rcr
out
imul
fimuls
xor
leave
out
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
pop
imul
jle
jg
jle
jle
mov
jmp
inc
mov
xchg
dec
xchg
jae
adc
push
xchg
inc
add
loope
gs
xor
sti
ja
adc
and
jo
lods
xchg
lret
daa
mov
sahf
pushf
outsb
insb
rcrb
pop
mov
repnz
adc
jge
push
idivb
lds
adc
iret
jne
dec
sub
or
imul
popf
push
jg
in
out
cmp
mov
and
ds
mov
cmc
cmp
xchg
add
loopne
daa
xchg
and
roll
jbe
mov
add
lods
in
jge
loope
test
jbe
lock
aaa
je
notl
mov
push
push
mov
dec
pop
aam
adc
adc
sti
int
jp
lods
xchg
dec
inc
gs
and
rdmsr
xor
or
fistps
pop
test
push
dec
adc
test
xchg
sbb
nop
scas
cs
xchg
cli
mov
loopne
aas
das
sarl
ljmp
mov
adc
lods
jb
into
insl
cmp
jl
inc
pop
ds
mov
push
testb
xor
or
fcoml
dec
push
sub
jb
jge
das
push
lcall
jb
insb
sti
aaa
xchg
adc
push
bound
lret
popf
in
imul
adc
and
fs
mov
js
into
sbb
sbbb
addl
test
mov
insl
scas
ficoms
or
scas
push
dec
and
xlat
mov
cmp
or
inc
hlt
dec
push
dec
xor
jae
out
jle
cmp
mov
neg
loope
clc
shrl
mov
adc
ret
idiv
jne
pushl
jmp
push
mov
dec
sub
enter
ss
aam
jle
push
jg
jle
push
jae
push
in
jge
sbb
push
cwtl
repnz
lret
push
js
bound
movntq
fsubs
xor
mov
jnp
sbb
xor
mov
mov
idivl
shll
fcoml
mov
add
mov
xchg
enter
jnp
test
jne
xchg
xchg
or
pop
adc
jecxz
xchg
pop
loopne
jp
out
pop
xchg
outsb
stos
xchg
pop
sbb
stc
xor
adc
mov
push
hlt
and
cmp
pop
outsl
insl
sahf
jo
pop
fnstcw
cmp
cmc
xchg
xchg
jecxz
pop
notl
dec
mov
xor
jno
xchg
in
cmp
push
mov
mov
pop
mov
sbb
in
shrl
pop
lock
mov
push
adc
or
sbb
rcrl
pop
ret
mov
aad
and
ja
icebp
outsl
xor
testb
adc
scas
bound
cmp
dec
mov
add
push
jo
lods
out
aaa
roll
orl
sbb
ljmp
cs
cwtl
jle
pop
dec
sbb
addr16
cwtl
jmp
inc
int
ja
mov
mov
and
mov
jns
mov
loope
int3
ja
pushf
sub
sub
cmp
loop
scas
icebp
inc
out
sti
pop
cs
push
cltd
adc
xor
scas
out
outsb
sub
mov
mov
mov
divb
out
aad
mov
loope
pop
lcall
cmpsb
test
sti
dec
lods
out
push
hlt
dec
mov
popf
dec
jb
pop
or
and
popaw
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
loope
or
adc
inc
xor
add
out
xorl
enter
rcrb
sbb
add
shlb
cwtl
lods
out
gs
rcrl
xchg
pushf
xchg
adc
xchg
mov
pop
mov
mov
nop
test
mov
sub
lds
into
push
xchg
loop
shrb
pop
por
lods
jle
in
sti
pminsw
addb
adc
mov
inc
les
vpmaxub
pop
rcr
mov
or
aaa
push
sbb
or
jle
clc
fbld
es
lock
cwtl
lea
or
cmp
mov
fcoml
dec
push
aam
cli
mov
push
and
mov
orb
sbb
movsb
pop
mov
lret
push
pop
mov
lahf
je
rcll
out
mov
cmp
mov
movsl
das
mov
push
push
pop
out
adc
dec
push
les
sbb
stos
add
sub
dec
xlat
push
ja
arpl
inc
pop
fs
jmp
fbstp
mov
and
je
psubusb
nop
or
lcall
dec
js
dec
cmp
pop
std
xorb
fidivl
call
scas
sbb
add
nop
roll
int
xor
xor
aas
imul
pop
sbb
mov
ja
mov
loopne
xor
push
sbb
jle
pusha
sub
idivb
fistpl
push
loop
cld
cmpsb
loope
addr16
xchg
dec
jl
hlt
fstpl
mov
gs
int
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
cmc
int
repz
cmp
xchg
ret
mov
mov
ret
jae
sbb
imul
cmp
shll
sub
add
scas
dec
lds
cltd
or
and
and
and
fstps
mov
call
out
adc
pop
incl
sub
mov
rol
das
xor
test
inc
cltd
xor
lods
push
stos
test
push
enter
jne
jmp
out
mov
cmp
push
dec
mov
mov
mov
ficompl
fildl
xchg
setns
movsb
orl
call
lcall
clc
fdivl
decl
insl
push
or
cmpl
push
or
dec
cwtl
pushf
inc
jo
sbbb
dec
iret
fnstcw
xor
pop
mov
lcall
aam
jno
push
cmp
sbb
std
inc
ja
dec
rol
mov
insl
mov
mov
mov
dec
aad
movsb
into
sbb
lahf
ja
in
insb
rorb
mov
ror
sbb
push
shl
adc
add
jge
cs
mov
out
mov
rorl
push
xchg
icebp
mov
xor
pusha
adc
add
in
sbb
xor
shl
mov
push
cmp
das
lods
mov
sbb
fistl
mov
test
in
gs
push
pusha
add
xchg
movsl
mov
mov
jno
call
nop
fisubs
nop
add
xchg
imul
sbb
popa
jne
jo
add
sti
daa
xor
mov
cs
xor
add
or
push
popa
xchg
repnz
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
lret
add
jle
mov
jle
imul
sbbl
ret
push
or
nop
jmp
je
lret
mov
and
xor
idivl
cmp
mov
int
add
mov
ret
xchg
into
lret
mov
push
addr16
rclb
fcoml
imul
rol
aam
ror
inc
lds
fnstenv
imulb
lods
adc
jae
sbb
rclb
setns
movsl
sub
push
out
stc
je
dec
xchg
add
xchg
scas
xor
xchg
jne
cli
sbb
pop
imulb
test
movsb
xchg
in
jecxz
not
sbbb
popa
hlt
adc
or
lds
jmp
mov
xchg
push
jnp
lcall
cld
sarb
push
js
dec
das
adc
cmpsl
mov
or
xchg
jg
imul
sub
inc
jae
adc
cmp
xor
in
jecxz
sub
lret
loop
lret
enter
fisubs
cs
adc
into
sbb
push
xor
in
xchg
xchg
cmp
xor
mov
arpl
jbe
xchg
pop
lods
jg
pop
daa
xor
rcrl
out
aam
mov
or
cmp
and
xchg
pop
je
mov
xlat
loope
jnp
dec
adc
sbb
pop
mov
lret
es
push
shl
mov
stc
inc
jmp
roll
add
add
add
add
cmp
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
lahf
xorb
cmp
mov
jle
inc
clc
jmp
push
fsubrl
lock
pushf
xchg
sbb
cmp
or
mov
pusha
mov
lea
ror
shlb
push
cmp
scas
ret
incl
sbb
jmp
aad
imull
xchg
sub
imul
xor
test
sub
xchg
rcll
inc
lods
jp
frstpm(287
lret
push
xlat
or
lds
shr
mov
sub
hlt
loope
roll
fdivrs
mov
push
mov
fsts
shlb
fimuls
scas
push
sub
mov
cmp
lahf
inc
das
mov
or
xchg
stos
popa
mov
add
and
fucomp
mov
fdiv
push
fimull
pop
das
fdivrs
dec
xchg
or
shll
adc
scas
lods
adc
and
sub
xor
pop
cmpsb
xor
push
cltd
lret
cmp
dec
mov
push
push
dec
adc
cmp
ror
data16
dec
mov
push
jle
repnz
or
push
mov
cltd
sub
push
or
aad
fdivs
xchg
mov
insb
imul
mov
cmp
dec
ret
push
mov
add
pop
cmp
pop
mov
sbb
mov
inc
push
mov
notl
pop
insl
cltd
jecxz
jno
inc
dec
lcall
cmpsb
das
daa
lret
incb
mov
mov
push
clc
mov
xor
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
mov
or
jg
jle
out
add
adc
pop
add
bound
cli
stos
mov
enter
cmp
add
cmpl
jmp
jb
mov
mov
fnstcw
in
pop
push
mov
sbbl
ret
mov
addb
or
jle
fstl
jg
ss
pop
aaa
dec
inc
fs
mov
stos
int3
mov
dec
rcll
add
or
add
repz
inc
sti
jp
fists
mov
adc
sub
jne
loop
push
mov
dec
mov
pop
ss
lahf
mov
addb
daa
in
cwtl
jl
adc
push
ljmp
mov
cs
pushf
mov
adc
cmpsb
sub
enter
loope
jbe
mov
sub
push
dec
pushf
dec
pop
hlt
stos
fidivrs
stos
rcr
loopne
into
sti
pop
adc
cmp
inc
xor
call
dec
pop
push
int
jp
movsl
mov
scas
fnstenv
out
fdiv
test
ss
enter
xor
pop
xchg
rolb
cmp
ret
pop
orb
cld
cmpsl
and
pop
daa
jecxz
lea
ret
xchg
push
pop
cs
mov
mov
mov
movsl
dec
dec
xchg
xchg
sahf
push
push
cmpsb
adc
mov
stos
daa
imul
mov
mov
pop
and
stc
daa
push
loopne
sarl
iret
cltd
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
ss
cltd
jle
mov
jle
hlt
jle
in
cld
cmp
in
fdivrl
lock
pop
cltd
imul
movsb
aas
push
push
arpl
xor
xor
and
dec
and
and
call
mov
dec
cmc
out
jecxz
test
or
dec
inc
xchg
and
xchg
icebp
jae
shll
scas
cmc
add
dec
pusha
or
cmpb
repnz
ret
call
pushf
push
mov
and
mov
jae
and
mov
or
dec
mov
and
sbb
lret
add
inc
cmp
ljmp
or
in
or
cwtl
or
mov
cli
dec
jnp
mov
inc
push
iret
adc
lcall
pop
mov
and
bound
or
rol
mov
mul
test
sbb
outsl
cmc
scas
xor
push
ret
sbb
mov
mov
sahf
int3
add
mov
and
lds
movsb
sub
lret
pop
fwait
ja
pop
aaa
fsubl
mov
insl
lods
xchg
out
movsl
loopne
lcall
lahf
in
mov
lods
lcall
mov
pop
pop
inc
cmp
inc
stos
push
sbb
imul
lea
inc
cmpsl
nop
adc
cmp
add
lret
push
cmp
and
lret
mov
mov
mov
mov
orl
add
movl
cmp
movl
jmp
notl
push
jb
out
or
icebp
inc
jle
lds
mov
jle
popa
and
mov
outsl
push
sbb
xchg
mov
mov
call
shlb
popf
push
push
push
sub
cmp
loope
stos
movl
jg
sahf
mov
xchg
xor
repz
cmpsl
jecxz
push
in
pop
jne
pop
sbb
fiadds
mov
jp
minps
out
cmp
mov
cmpsb
push
out
inc
inc
adc
cmp
sub
mov
sbb
sub
add
aas
cld
popf
fs
sub
jo
xchg
adc
iret
lods
adc
out
js
mov
pop
imul
jmp
push
jge
mov
pusha
inc
fcoml
mov
ds
pop
aam
jp
xchg
faddl
mov
push
bound
pmullw
insl
adc
jl
add
jae
sub
out
mov
jae
and
out
fs
fimull
mov
inc
in
add
aas
sub
es
cs
lret
clc
xchg
shlb
dec
mov
das
pop
ss
in
lret
push
xlat
aam
push
push
movsb
test
dec
mov
loope
bound
mov
jmp
jo
xor
pop
mov
pushf
shlb
push
movsl
xchg
sti
pop
inc
push
sub
pop
sbb
ljmp
mov
add
in
mov
lret
and
fmuls
lock
test
lock
jl
je
push
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
imul
jle
jg
jle
arpl
push
fisubrs
mov
mov
aaa
push
das
loope
pop
jp
aaa
rclb
aam
sbb
rol
or
call
inc
and
inc
cmp
cli
jg
shlb
cmp
notl
inc
mov
popa
mov
daa
mov
decb
gs
int3
shr
xchg
fdiv
js
mov
mov
call
sbb
punpckhbw
repz
or
pop
dec
cmpsl
into
aad
cmp
or
cld
call
rolb
andb
call
out
sbb
popf
nop
loopne
test
mov
pop
insb
xor
xchg
xchg
je
pop
mov
pop
cmp
xor
aad
mov
lret
jp
stos
jns
std
xchg
jno
or
xchg
inc
cmp
adc
mov
rorb
les
stos
pop
xchg
push
shrl
subb
cli
xchg
lahf
xor
cmpsl
test
fimuls
sub
sub
xchg
xchg
aas
mov
dec
cltd
jp
or
iret
inc
repnz
sub
lods
or
fs
dec
fbld
cmp
fisubrl
cmp
mov
jmp
cmp
pop
dec
push
cmpsb
dec
or
and
mov
mov
inc
mov
int3
cmp
insb
pop
out
in
or
ret
push
sub
repz
push
cld
adcl
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
sti
jae
rcr
sarb
jg
jle
sarl
add
pop
mov
jp
add
popa
mov
mov
add
jnp
out
adc
push
arpl
sub
jae
ljmp
test
lahf
clc
sbb
out
and
sbb
xchg
pop
sbb
mov
sbb
hlt
out
movsl
push
mov
outsb
push
inc
lds
cmp
jae
jns
scas
sub
andb
mov
sub
lret
shll
mov
dec
ds
andb
dec
insl
push
add
into
mov
aad
or
adc
jnp
dec
out
sub
insb
inc
mov
andl
add
sbbl
fcoml
push
pushf
mov
pop
scas
cmp
nop
add
pop
es
fistl
cs
inc
pop
stos
xlat
lea
pop
mov
xor
push
jmp
stc
jnp
leave
loopne
cmp
mov
or
stos
test
insb
int
mov
sbb
inc
mov
cmpsl
jbe
and
call
lods
mov
jecxz
hlt
mov
mov
and
push
daa
push
addr16
es
stos
lret
lret
mov
adc
and
ficomps
sti
inc
ret
xor
or
xchg
cmp
add
pop
subb
xchg
scas
popf
inc
lret
mov
sub
bound
cmp
ja
mov
jmp
mov
mov
jmp
mov
dec
jno
les
adc
mov
jle
ss
jp
inc
pop
pop
sbb
test
imul
insb
or
bound
push
cmpsb
push
xor
sbb
pop
pop
pop
bound
fstl
stos
hlt
test
rcrl
inc
dec
mov
fadd
dec
and
sub
and
adc
xchg
rcll
sub
lods
stc
scas
stc
xchg
fsubrp
xor
bound
adc
movsb
jl
cmp
rcl
inc
xor
repz
arpl
jle
push
popa
ret
mov
enter
xchg
outsb
jmp
ror
mov
mov
and
lock
pop
loopne
leave
insl
xchg
cmpsb
popl
test
int3
push
xchg
in
les
popf
jnp
jbe
dec
aaa
enter
jo
loope
xchg
inc
mov
jns
pop
aas
sub
mov
mov
jge
shl
adc
jmp
xchg
std
popa
imul
in
pop
mov
jo
sub
mov
cmp
cld
jecxz
mov
outsl
into
or
dec
insl
add
daa
fnsave
test
pop
movsl
xchg
pop
sbb
mov
cmp
aad
aas
xchg
inc
xchg
mov
stos
xchg
push
xor
pop
xchg
adc
shl
push
aad
lods
ret
xor
xchg
xor
mov
inc
pop
push
jnp
insb
adc
mov
sub
ret
adc
xchg
jge
mov
call
lock
xor
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
push
push
xchg
and
mov
cmp
sahf
addr16
sahf
add
scas
pop
pop
loop
movsl
sahf
fmull
in
mov
mov
inc
popa
daa
fwait
clc
loop
lds
push
pop
xchg
idiv
jl
and
mov
xchg
or
adc
dec
cmc
xor
jmp
mov
aaa
dec
xchg
outsl
rol
loopne
mov
enter
mov
mov
xor
adc
jge
stc
push
cmp
add
stos
cwtl
in
repnz
outsl
inc
lahf
adc
fists
pop
jg
xor
pop
out
jmp
sbb
mov
pop
pop
xlat
lock
out
test
pop
arpl
sbb
mov
cmp
xchg
dec
mov
ret
lds
mov
mov
loopne
data16
inc
mov
insl
scas
gs
fsubrs
mov
jg
sub
dec
ja
in
or
sub
je
push
into
jo
jp
adc
xor
ljmp
lahf
enter
adc
add
pop
add
roll
add
sbb
jmp
in
cwtl
lds
mov
stos
jp
call
mov
sbb
fsts
mov
push
cld
sar
incb
or
add
mov
jmp
mov
mov
xor
xor
jmp
in
test
call
jg
ror
adc
jle
mov
jle
jae
or
or
or
stos
sti
and
or
xlat
jns
inc
mov
cmpl
sti
xchg
sahf
subb
scas
dec
nop
jp
cmc
stc
adc
push
mov
jnp
mov
xchg
mov
fistps
sti
xlat
mov
push
in
push
add
mov
addb
cli
mov
mov
adc
adc
sahf
mov
cltd
add
mov
imul
pop
arpl
xchg
dec
mov
out
insl
shl
jle
mov
mov
ljmp
jo
in
imul
out
icebp
movsb
js
popf
add
jecxz
mov
jp
dec
push
xchg
ret
adc
mov
ss
sub
icebp
cmp
lret
iret
push
imul
sahf
mov
lea
addb
fwait
dec
pop
icebp
sub
mov
or
pop
arpl
data16
rcrl
add
insl
rorl
arpl
mov
cmc
adc
cmp
ret
jl
call
cmp
mov
std
inc
mov
xlat
iret
sub
daa
out
ja
daa
xchg
gs
jle
fwait
sahf
xor
cmpsl
fsub
das
pop
cmp
cmpsl
add
ret
push
addr16
push
adc
adc
and
popf
mov
incb
test
dec
push
xchg
sti
jo
dec
ret
faddl
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
pop
imul
jle
sub
mov
imul
add
fs
or
dec
pop
mov
js
lret
pop
lcall
inc
jmp
push
scas
and
addb
add
fdivrs
or
das
int
jg
pop
test
mov
inc
sbb
out
mov
movl
mov
cld
stc
inc
cmc
adc
bnd
cltd
test
pop
call
push
cmp
xchg
mov
nop
add
mov
and
iret
and
aaa
pop
xchg
pop
fs
adc
int3
lcall
pop
in
bound
or
cltd
imul
js
dec
shll
add
shl
dec
fcoml
jb
js
hlt
jb
push
test
cmp
and
mov
sub
mov
jnp
int3
and
or
mov
xchg
lock
pusha
mov
cwtl
in
movsb
jmp
cmp
and
mov
inc
shlb
lods
mov
mov
cmp
shlb
add
sbb
jbe
add
out
test
xor
xlat
ret
testb
ret
mov
pop
js
cmp
sbb
pop
loopne
push
push
xlat
or
and
in
push
insl
outsb
jb
xchg
xchg
jg
enter
lret
jno
and
mov
sbb
cmp
loopne
loope
fsubrp
or
lret
shr
lods
add
add
add
push
push
jl
ljmp
enter
jg
jle
inc
mov
mov
jns
or
and
jo
shrb
aad
mov
es
xor
sbb
pusha
jmp
sub
loope
into
pop
divl
jl
data16
inc
mov
mov
mov
insb
dec
lcall
fs
fcoms
inc
xor
mov
or
cmp
cld
movsl
dec
jg
test
adc
pop
das
imul
repnz
lret
mov
aaa
out
gs
pop
call
dec
jge
pop
outsb
cwtl
push
sub
loop
pop
sbb
out
lcall
dec
adc
sbb
fs
jae
mov
in
mov
pop
push
pop
push
out
xlat
adc
hlt
out
shrb
pusha
outsb
cmpsl
jb
add
pusha
cmp
movsb
mov
sub
cmp
and
sbb
mov
xchg
scas
xchg
pop
jnp
iret
add
or
stos
imul
mov
cmpsl
pop
push
jecxz
mov
lret
sbb
dec
mov
mov
fbld
mov
movsb
data16
pop
cltd
pop
decb
imul
lods
pop
lods
jge
xchg
dec
out
test
mov
mov
xchg
es
add
mov
lods
sub
fsub
stc
adc
push
imul
mov
mov
sub
jmp
and
xor
movsl
mov
jle
mov
jle
ja
inc
outsb
pushf
test
subb
pop
ljmp
sbb
mov
clc
dec
sbb
adc
push
fisttpll
lds
lahf
and
pusha
xor
xchg
movsl
sub
add
rcll
aaa
loop
sti
scas
jmp
out
inc
cs
sbb
jl
push
add
cmp
hlt
sbb
ror
imul
dec
out
cld
pop
jbe
faddl
out
sub
lret
jmp
xor
cmp
sbb
test
je
add
in
add
push
xchg
mov
jns
mov
mov
inc
cmpsl
xor
ds
insl
adc
lods
xchg
ret
sbb
mov
dec
lahf
sub
sub
test
test
call
add
clc
ljmp
stc
cmp
push
jb
xchg
jecxz
ret
shrl
ja
jnp
xchg
lret
dec
js
mov
loopne
pop
mov
pushl
jmp
data16
dec
scas
xor
push
sub
stos
adc
adc
in
mov
mov
dec
sbb
call
jbe
xchg
testb
movsb
mov
mov
adc
int3
stos
sub
sub
xor
sbb
aaa
cmp
mov
xlat
dec
dec
test
inc
cmp
cmp
sub
repnz
cmc
imul
mov
or
add
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
jno
loope
jle
mov
jle
ja
inc
in
xchg
jns
lahf
mov
out
mov
les
imul
pop
sub
pop
lods
out
inc
xchg
test
adc
inc
adc
adc
adc
fstps
js
outsb
and
cmp
je
in
bound
sub
in
xchg
sub
test
inc
sahf
loope
mov
inc
jnp
fdivrs
lods
inc
mov
mov
and
aad
push
pop
mov
mov
test
cmp
add
jo
mov
adc
mov
lahf
outsl
dec
mov
mov
fldcw
jmp
std
aad
rolb
dec
xor
das
roll
xor
pop
xchg
add
sbb
mov
mov
xor
in
std
and
mov
rclb
or
aaa
xchg
pop
jbe
xchg
sbb
es
sub
or
mov
pop
outsl
scas
or
arpl
pop
adc
mov
enter
loope
xchg
lcall
js
cmc
xlat
or
scas
pop
aas
jle
fcoml
out
shlb
push
dec
test
rorb
adc
je
sub
pop
inc
push
cli
scas
push
cmp
add
cld
mov
or
aam
dec
pushf
and
xchg
inc
inc
push
int
jbe
movsl
xor
popa
or
fwait
add
inc
out
cs
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
pop
dec
cmp
jge
jle
mov
jle
jb
aas
mov
pop
mov
xor
mov
imul
sub
push
inc
inc
sub
out
cs
cs
xor
xlat
xchg
push
andl
mov
dec
je
jecxz
cmp
ficomps
insb
aam
dec
inc
push
push
stc
xchg
jo
jbe
in
roll
xchg
and
into
mov
aam
dec
cltd
jnp
mov
pop
sbb
sub
add
mov
movsb
fsts
mov
ja
movsl
cmpsb
or
jns
sub
jp
test
sub
std
hlt
and
or
pop
jbe
jo
jl
pop
sti
repnz
xchg
fcmove
ja
scas
stos
sbbb
jecxz
mov
out
jle
cmpl
inc
es
xor
clc
sub
pminsw
ret
sbb
push
mov
jmp
inc
fnstcw
je
jl
jo
clc
xchg
push
inc
sub
pop
lods
pop
shr
sub
mov
popl
lahf
mov
lds
fcomip
fsub
cmpsl
mov
sahf
cmp
arpl
push
pop
push
in
xlat
fistpll
out
test
push
shr
sub
ret
test
fcomip
lret
dec
add
cmpb
sbb
cmc
jo
clc
movsb
mov
cwtl
test
cmp
xchg
pop
scas
popa
repz
mov
inc
ret
jle
lcall
xor
push
pushf
add
scas
mov
imul
sub
xor
add
imul
mov
xor
sub
jmp
decl
xor
xchg
lea
xor
inc
mov
jle
mov
jle
loop,pn
leave
xchg
lcall
out
sbb
and
xor
inc
sarb
sub
jb
mov
clc
mov
push
push
scas
cld
jg
jp
xchg
mov
mov
fcompl
fstps
arpl
push
cmp
shl
adc
popf
loopne
stc
mov
lea
sbb
imul
sbb
test
stos
aam
icebp
or
adc
mov
rclb
loope
pop
cmp
adc
das
fldl
or
and
push
test
lea
mov
pushf
int3
filds
mov
pop
mov
cmpsb
push
shr
daa
es
push
inc
dec
shll
mov
jg
sbb
daa
ss
popf
inc
sub
sbb
rcll
pusha
dec
stos
test
shlb
dec
mov
push
mov
adc
pushw
sub
scas
mov
inc
push
jp
sub
pop
test
mov
mov
out
mov
sbb
cs
push
jmp
imul
dec
jp
pusha
dec
add
inc
mov
add
in
mov
pop
mov
arpl
stos
or
pop
in
ss
scas
push
lcall
divb
sub
out
push
adc
bound
shlw
lods
xchg
mov
enter
cmp
xchg
test
cmp
xchg
jg
cmpsl
out
xlat
fistps
push
cli
pushl
pop
fwait
jb
add
cli
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
lahf
movsl
les
mov
jle
jmp
test
bound
dec
dec
aad
mov
sub
sbb
sti
out
dec
xor
rcr
jne
sub
test
lds
pusha
jbe
xchg
inc
push
divb
cltd
repz
fsubl
rol
clc
jl
mov
lods
and
ljmp
loope
adc
adc
xchg
std
mov
dec
test
xchg
hlt
mov
push
xor
push
and
jne
sub
push
mov
fstps
ljmp
stc
fidivrs
mov
inc
xchg
pusha
pop
jbe
xor
dec
pop
sub
cmp
lods
scas
and
not
leave
xchg
iret
cmp
ljmp
or
scas
push
jmp
es
push
out
sbb
scas
jg
dec
bnd
test
mov
arpl
negl
and
mov
jecxz
cmp
inc
xor
outsb
and
sub
sub
dec
push
scas
inc
sbb
sbb
xchg
sbb
and
movsl
lsl
lcall
jmp
sbb
mov
xchg
mov
ret
rcrl
lods
sahf
ret
and
outsb
add
push
movsb
iret
cmp
pop
dec
ffreep
push
nop
mov
in
outsl
jo
jmp
inc
xchg
mov
adc
aam
xor
rep
loopne
pop
das
push
sub
or
arpl
mov
lock
ss
xlat
mov
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
sahf
insl
clc
mov
mov
jle
pop
push
cmp
pushf
cmp
and
mov
push
cmpsb
and
aam
bound
in
clc
xchg
add
out
faddl
inc
add
push
iret
pop
in
push
adcl
sub
test
inc
gs
jae
movl
lret
or
mov
loop
and
cmc
jnp
adc
xor
iret
and
rorb
xchg
adc
out
dec
rcll
out
outsl
push
cmp
int
and
fcoml
js
fsubrs
nop
clc
cs
ljmp
jmp
xor
jnp
cld
cmp
dec
mov
lea
ljmp
insl
insb
loope
imul
push
addr16
jo
loopne
cmp
bound
lds
cltd
push
outsb
leave
sbb
in
outsl
clc
mov
push
mov
mov
cmp
fwait
int
adc
test
xchg
in
mov
push
pop
sets
cmc
pop
add
mov
negb
sbb
xchg
sub
push
xchg
pop
xor
push
add
std
andb
add
scas
out
hlt
jns
cli
add
dec
bound
xor
popa
arpl
pushf
or
or
mov
xchg
std
enter
cmpsb
gs
mov
pop
popa
mov
inc
mov
lods
cmp
jo
scas
in
dec
or
xor
push
rcrl
insb
add
std
rolb
inc
in
mov
gs
outsl
mov
pop
clc
xor
jmp
or
addr16
jne
mov
mov
int3
loop
cmp
fistpll
mov
jle
sbb
fiaddl
xor
cs
fcmovu
cmpsb
pop
mov
adc
cld
xchg
sahf
mov
push
fadds
or
ret
dec
lea
push
or
cmp
sub
cmp
add
push
xchg
xchg
daa
fs
dec
inc
pop
xchg
idivb
clc
scas
mov
sub
repnz
test
fcmove
xor
insb
int
mov
inc
sub
and
ss
test
jo
movsb
xchg
cmpsb
xor
mov
mov
sbb
popa
mov
popa
push
mov
gs
sub
scas
int
mov
gs
fstl
stos
mov
leave
lret
in
xchg
pop
test
mov
push
outsl
enter
cmp
mov
dec
push
out
insl
loope
jo
xchg
jo
daa
pop
mov
daa
xchg
pop
dec
outsb
mov
sub
adc
sbb
dec
inc
lods
dec
shrl
sub
out
adc
lods
lea
fwait
into
subl
cmp
les
mov
inc
roll
dec
xchg
jg
lods
mov
pop
and
mov
movzbl
mov
clc
or
sbb
leave
sub
je
mov
dec
stc
int3
mov
mov
or
add
mov
test
and
dec
fsubrl
sub
push
mov
or
pop
test
rorl
scas
sarl
xlat
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
inc
mov
aam
fdivrl
jge,pn
jle
add
ret
xchg
loope
shlb
mov
jmp
in
test
ret
ja
jno
jbe
loop
adc
popf
lahf
add
xor
dec
adcb
sub
out
dec
push
out
jle
fsubrl
rcrb
lods
xchg
sbb
cmp
xor
xchg
outsb
cmc
loop
pushf
pop
mov
lret
lds
xchg
inc
or
test
stos
adc
pop
testl
ljmp
push
jle
bound
cmc
sub
lea
data16
ja
add
xor
aaa
push
mov
jbe
movsl
mov
jmp
aaa
call
push
mov
xor
hlt
sub
lret
jno
mov
xchg
pushl
lock
add
popf
aad
test
or
mov
cmpsb
mov
fs
mov
daa
adc
mov
inc
and
js
addr16
call
leave
pop
in
cmp
push
out
dec
push
inc
jmp
xchg
sbb
dec
adc
mov
aas
cmpsl
xchg
push
or
js
cmpsb
test
iret
xorl
rcr
and
pop
push
lds
lods
jns
enter
rclb
pop
mov
or
inc
imul
sbb
fnstsw
and
out
mov
mov
lea
pop
adc
sbb
xchg
jns
repnz
mov
int
out
pop
push
movsb
out
sub
xor
pushf
adc
in
dec
ljmp
hlt
cmpsb
mov
repnz
pop
out
push
and
out
ret
loop
cmp
dec
lret
ret
pop
lock
mov
and
adc
mov
rorb
dec
mov
cmp
test
push
fsubs
sub
jb
cmp
and
push
aam
sub
inc
add
adcl
hlt
test
addb
inc
push
xlat
xchg
xchg
aam
in
outsl
loop
jnp
cmpl
dec
mov
push
xchg
jle
push
sub
push
jne
lret
fsubrp
pop
and
stos
repnz
sub
jp
push
out
mov
dec
cmpsl
mov
pushf
push
and
lret
xchg
xchg
xchg
rolb
push
pop
mov
negb
dec
xor
jge
insl
cld
mov
outsl
int
insl
cmp
or
add
add
xchg
push
push
test
mov
mov
inc
xlat
dec
xchg
addr16
fistpll
or
ficompl
outsl
sub
and
lds
sub
imul
add
lea
test
xor
or
outsl
pop
xor
mov
xor
push
or
repz
jg
mov
mov
dec
cmp
sahf
cli
rcr
mov
mov
add
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
test
or
jle
jge,pn
jle
movsb
loope
xor
out
sub
leave
ret
dec
mov
adc
aam
clc
divb
in
jmp
jno
adc
pusha
cmp
pop
loopne
jns
pushf
mov
ljmp
mov
mov
dec
and
int
cmp
add
push
jmp
insl
sarb
in
fisubrs
mov
pop
fwait
ss
xchg
xor
or
xchg
ret
dec
xchg
pusha
les
fisubrl
inc
std
jle
ja
xchg
data16
push
xlat
out
rcr
int3
mov
movsb
insb
out
add
xor
and
bound
pushf
mov
pop
cmc
xor
pop
sub
mov
push
xor
int3
dec
mov
iret
sub
es
lcall
test
adc
loop
int3
out
or
sarb
popf
call
inc
jp
arpl
stc
ds
pop
dec
and
sbb
mov
xchg
adcl
mov
icebp
xor
fs
and
push
clc
xor
jg
jmp
test
mov
ds
in
ret
dec
test
mov
mov
in
inc
mov
jmp
push
stos
enter
push
dec
imulb
test
xchg
ja
sbb
adc
jno
imul
or
push
dec
or
lret
ss
sbb
push
inc
lea
lds
nop
int3
pop
ret
shr
xlat
stos
imul
pop
mov
xchg
lea
cmpb
mov
dec
push
stos
fcompl
repz
mov
out
aaa
aam
add
nop
fmuls
sub
mov
mov
inc
sub
popf
mov
push
ja
fsubs
inc
leave
es
fwait
hlt
test
out
lds
out
sub
and
pop
jns
pop
add
fisubl
push
mov
xor
sbb
mov
dec
or
icebp
aaa
mov
pop
xchg
std
fdivrp
leave
arpl
add
mov
and
mov
cmp
fwait
addr16
lret
mov
fxch
rcrb
in
adc
xorb
add
mov
jae
in
fmuls
push
cwtl
arpl
mov
hlt
stc
insb
test
shrl
adc
cltd
loopne
dec
pop
mov
repnz
jne
or
xor
push
pop
mov
push
jecxz
int
inc
and
adc
push
mov
sub
dec
mov
cmpsb
jle
push
call
mov
call
sar
stos
add
jg
sub
into
cmp
pop
pop
cmpsb
mov
test
cltd
xchg
mov
out
jns
je
add
add
mov
cmp
push
mov
pop
add
push
xchg
jmp
ljmp
xor
jmp
push
or
int3
popa
hlt
jno
jae
and
sbb
out
jle
jge
jle
scas
fyl2x
xchg
cmovne
sbb
sbb
jns
or
sub
es
lds
xchg
xchg
pushf
test
mov
push
lahf
jae
clc
jl
test
push
xchg
xchg
xchg
es
into
in
stos
fincstp
ficoml
xchg
aaa
dec
shlb
push
sub
mov
subl
mov
stos
fwait
add
jo
add
fnstenv
sub
xchg
mov
add
sti
sub
rcrl
mov
aas
enter
mov
and
out
movups
bound
rcll
loopne
out
mov
dec
adc
adc
push
lds
jns
in
scas
aaa
add
movsb
popa
prefetch
das
sub
pop
cld
cld
sub
test
mov
dec
lahf
aas
lods
into
fimuls
adc
cmp
leave
pop
mov
shll
pop
sbbb
jae
cmp
push
dec
sub
mov
loop
fistl
xchg
icebp
cld
add
sub
outsl
or
lods
mov
pop
shl
test
adc
add
and
imul
cmp
mov
xchg
pop
push
inc
insb
scas
xor
sub
mov
dec
dec
dec
dec
inc
pusha
fists
xorl
repz
push
int3
push
sbbl
les
es
adc
leave
mov
or
or
enter
adc
push
ja
pop
testl
or
mov
out
stos
repnz
sti
pop
mov
jg
aaa
daa
rorl
dec
mov
and
pop
mov
push
xor
stos
lcall
aas
inc
push
ret
jns
loop
and
mov
jo
inc
test
rcll
repnz
jnp
adc
stc
jo
sub
daa
mov
mov
ja
leave
add
push
cmp
out
jge
idivl
inc
mov
adc
popf
mov
push
inc
ds
arpl
nop
cmp
and
sub
pop
int3
pop
lret
pop
or
inc
and
mov
xchg
mov
cmp
jmp
dec
push
adc
add
fwait
mov
mov
fnstcw
pushf
jno
rclb
cmpsb
xchg
pop
mov
mov
push
adc
push
lea
adc
ret
cld
push
cmp
xchg
into
mov
xchg
popa
mov
mov
cmp
jnp
or
push
pop
push
fdivl
in
bound
in
mov
mov
xchg
pop
call
inc
stos
sbb
pop
jns
cmp
pop
adcl
bound
mov
pop
adcl
push
loopne
mov
shll
or
arpl
jle
xor
inc
dec
jmp
xor
and
cltd
push
pop
add
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
ss
lods
sub
jle
jge
jle
fists
push
in
dec
sbb
mov
nop
pop
dec
addr16
dec
pop
jne
cli
loop
jmp
lret
push
push
jne
lods
inc
pop
fisttps
inc
js
xchg
or
sub
iret
mov
mov
mov
or
aaa
inc
or
jnp
in
movsb
mov
dec
leave
dec
xchg
dec
dec
xchg
mov
lods
push
pop
stc
fidivrl
push
pop
loopne
mov
int3
arpl
stos
in
push
dec
adc
dec
dec
ljmp
inc
fisubrl
lret
mov
dec
push
jns
int3
jg
xor
fbstp
xor
push
ret
addr16
int
aaa
dec
jne
leave
push
sub
cmp
xchg
enter
cli
sbb
jo
adcl
jp
jo
icebp
ret
stos
xor
mov
imul
sbb
xorl
insb
pop
loope
mov
mov
cmp
jno
xor
push
cltd
xlat
aad
push
lods
loope
add
cmp
je
push
call
or
mov
shr
mov
push
pop
enter
cmp
lret
mov
xchg
push
xor
inc
jle
add
push
ret
daa
adc
or
pop
rcl
push
aaa
fbld
sti
dec
xor
sahf
push
lret
enter
movsl
pop
jne
cmp
or
xchg
int
dec
xor
mov
popf
repz
lods
rorl
mov
push
xchg
pop
int
outsl
cmp
test
or
aaa
and
in
pop
add
pushl
fisttpl
pop
lods
push
push
rclb
mov
xchg
loope
std
cmp
xchg
pop
addb
iret
xor
sahf
xchg
shrb
out
sbb
jecxz
ficompl
or
jns
repz
jo
mov
fadds
fcompl
mov
jne
dec
ret
scas
or
xchg
mov
pusha
and
jge
xchg
xchg
xor
or
ret
mov
sahf
hlt
imul
cmpsb
jne
or
mov
rcl
jle
iret
sub
int3
mov
sub
mov
sub
sub
mov
inc
xchg
and
cmp
int3
cmp
cmp
cli
xchg
stc
std
in
jnp
hlt
aad
arpl
pushf
fldl
int
pop
ret
call
xchg
push
adc
iret
mov
and
inc
dec
sbb
ret
xor
dec
leave
cmp
xor
sub
and
cmp
xchg
mul
add
add
das
insb
dec
add
enter
filds
cli
xchg
jno
jbe
pop
cmp
inc
xchg
cmp
jb
rcll
out
adc
pop
xchg
rclb
pushf
frstor
stc
jno
stos
out
mov
pop
mull
sub
inc
in
stos
pop
sub
xchg
test
popa
imul
testb
fdivrl
incb
sub
jno
add
inc
faddl
add
pop
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
mov
jge
jle
je
xchg
sbb
jmp
sbb
aam
xchg
cmp
xlat
mov
stos
xchg
js
lahf
xchg
aaa
mov
in
and
mov
cmc
int3
out
pop
pop
or
or
push
mov
fwait
dec
mov
mov
jp
fs
or
dec
mov
jb
adc
repnz
xor
ss
insb
lds
inc
xor
pop
pop
push
xchg
dec
jae
lcall
daa
xor
data16
iret
mov
sti
rcrb
sub
or
dec
outsl
or
les
ds
call
in
push
adc
int3
pandn
pop
jp
gs
dec
divb
fisttpl
or
call
cmp
dec
negb
pop
inc
jbe
or
xchg
cmp
es
mov
out
push
in
mov
jbe
aam
or
xor
sbb
inc
xor
push
mov
mov
xchg
aas
mov
inc
xor
and
lock
push
aam
aaa
mov
adc
adc
cmp
cmp
or
mov
shll
sbb
sbb
and
mov
cld
hlt
cmp
dec
sub
cmpb
jb
es
and
aad
ds
push
sub
shll
pop
pop
and
or
test
sbbb
add
push
jns
stos
mov
and
jae
in
pop
stos
imul
subb
or
push
mov
pop
xor
cwtl
popf
lret
jbe
push
push
xchg
aad
inc
or
js
mov
pushw
icebp
cmpsl
fwait
outsl
loope
aas
jp
inc
popf
in
gs
pushf
dec
mov
in
jmp
and
xor
test
repnz
xchg
mov
mov
xor
sub
adc
insb
jecxz
stos
and
sbb
mov
ja
add
cmpsl
test
jecxz
xlat
out
in
xchg
mov
stos
adc
jns
pop
insb
dec
dec
int
or
add
mov
jecxz
movsb
fisttpll
mov
lods
cs
daa
pop
add
cmpsb
iret
pop
mov
aad
inc
xor
adc
dec
lcall
jmp
mov
insl
sbb
dec
stos
push
fdivl
and
aas
jge
fsub
ja
adc
cmpsl
sarl
movsb
movsl
daa
push
insl
and
and
xchg
int
sahf
negl
push
rolb
outsl
cmp
xchg
inc
orb
xchg
adc
sbb
and
insl
shll
shrl
fcompl
aam
sub
push
into
lahf
push
fldcw
mov
mov
or
imul
and
pop
cltd
test
push
outsl
and
mov
test
clc
fisttps
xchg
daa
daa
cmc
enter
dec
aas
dec
mov
pop
pop
and
pop
jecxz
sbb
pop
arpl
out
mov
mov
jmp
leave
inc
mov
inc
xor
icebp
pushf
cmpsl
sub
jle
jge
jle
mov
int3
sbbb
pop
and
outsl
int
cli
dec
outsl
mov
icebp
mov
push
test
jno
shll
mov
pop
in
jle
test
scas
sub
dec
push
shl
jmp
dec
cmp
and
ja
push
sub
xor
out
ss
shl
xor
dec
mov
and
lods
scas
lds
fs
negb
mov
dec
rol
sub
and
mov
std
lahf
push
shrb
pop
rolb
push
jne
xchg
jge
loopne
and
jg
ja
cmpsl
imul
adc
xchg
loope
mov
xchg
decl
sbb
dec
cwtl
xchg
cmp
shrl
scas
mov
mov
mov
jo
or
movsb
out
jno
cmpsl
cltd
arpl
sub
mov
and
pusha
lahf
xchg
sbb
fcmovu
mov
lahf
gs
pop
out
aaa
into
or
push
icebp
sub
lahf
mov
jle
dec
cmp
andl
inc
push
and
fisubs
add
fadd
and
lods
adc
jno
fstpt
xor
sub
out
add
push
int
jns
jns
fmuls
and
lock
das
xchg
jmp
sbb
test
xlat
push
xchg
dec
mov
pushf
and
xor
dec
xor
mov
pop
repnz
loope
jae
mov
test
inc
ret
fcmovb
jo
or
push
int3
xchg
jbe
mov
hlt
mov
add
rcrl
xor
push
imul
pop
dec
and
sub
cmp
or
pop
pop
push
jmp
and
xchg
popa
cmp
cmpsl
push
jp
sub
mov
add
sub
je
jg
or
jne
iret
fisubs
add
mov
fnstenv
int3
push
sbb
inc
push
xor
xchg
lret
lea
cmp
jno
aam
inc
fldl
add
out
insl
jle
or
add
mov
and
nop
mov
ret
cmc
pop
mov
mov
jecxz
fcmovnb
faddl
ficoml
and
daa
dec
dec
fistl
push
imul
push
add
cld
rorb
sbb
movsl
pusha
mov
or
loopne
shlb
es
bound
or
std
push
inc
jne
cmp
mov
outsl
rdtsc
je
lods
pop
mov
fdivp
dec
jns
mov
mov
jl
loopne
pusha
jecxz
addr16
int
popa
movsb
data16
inc
into
rclb
and
sarb
sub
sahf
shl
mov
out
jmp
mov
cmp
cmp
out
out
pop
and
cmpb
add
lods
scas
rorb
sub
sub
cmp
aas
loope
pop
loopne
pop
jp
mov
xchg
out
and
incl
div
aas
mov
mov
mov
mov
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
paddsb
call
jle
mov
sub
pop
lahf
cmp
pop
jp
decl
xchg
stos
cmp
std
pop
lds
mov
scas
aam
sbbb
sub
lea
pop
sbb
mov
push
fsubrp
or
mov
addb
push
sub
rcll
or
and
leave
dec
ss
je
inc
ret
push
sub
call
cmp
addr16
loope
lcall
xchg
divb
shrl
xchg
pusha
mov
push
push
test
push
pop
push
scas
mov
pop
or
out
push
jo
rclb
enter
mov
pcmpgtd
or
sub
out
rclb
cltd
add
mov
fdivs
xor
rcrb
mov
loope
mov
insl
jg
shrb
and
inc
push
sbb
mov
sbbl
pop
mov
movsb
push
pop
dec
js
fists
mov
mov
andb
outsl
xchg
sub
add
sbb
push
jae
stos
xor
dec
cmpsb
lcall
rcrl
pop
xor
xchg
mov
ret
xor
or
sbb
or
icebp
xor
lahf
inc
into
jecxz
mov
mov
stc
dec
in
pop
arpl
inc
dec
addl
and
mov
cwtl
push
fs
mov
push
pop
lcall
in
mov
test
ja
xchg
sarb
lock
aad
andl
out
cltd
jb
mov
imul
iret
js
jge
cmp
cmpsl
loope
push
aam
dec
jecxz
test
mov
int3
push
repnz
sub
inc
adc
dec
ret
ljmp
in
fwait
sahf
call
push
pop
lcall
std
xchg
aam
xchg
mov
push
mov
pop
imul
mov
xchg
mov
scas
cmc
mov
jne
dec
aad
rcrb
cmc
repz
dec
std
aaa
cmp
cmp
sub
repnz
xchg
and
es
jbe
sbb
ret
and
pop
pop
lods
scas
cmpsb
test
fimuls
mov
movsb
sub
mov
inc
idivl
out
sub
fiaddl
xchg
sub
and
shr
inc
xchg
inc
rcll
mov
pushf
inc
js
mov
push
lahf
lea
push
mov
push
outsb
lgs
imul
in
stc
pop
push
jo
dec
imull
mov
loope
leave
and
sub
bound
gs
lods
cmpsb
in
pop
std
cmp
jae
hlt
aam
lcall
data16
repnz
out
aas
repz
cmp
adc
mov
and
cli
xor
test
or
test
in
sub
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
xor
mov
sub
jle
jge,pn
jle
jmp
dec
aaa
push
or
pop
insl
or
xlat
ss
dec
mov
ja
jne
pop
push
inc
xchg
inc
or
dec
mov
sbb
push
pushf
or
outsb
xor
dec
inc
sbb
dec
add
pop
add
ds
jecxz
movsb
in
push
enter
sar
adc
rcll
jb
ret
in
rcl
mov
cmpsb
gs
sarb
inc
in
insl
mov
das
fisubrl
and
fnstenv
xchg
dec
neg
mov
sbb
cmc
add
pop
mov
mov
jg
insl
mov
scas
mov
aas
in
or
ds
and
fwait
test
ds
or
fwait
inc
pop
in
stos
insb
adc
pop
hlt
push
push
lods
jne
and
lahf
push
flds
pop
fsub
loopne
clc
sub
adc
or
fs
hlt
daa
sub
sbb
lock
cmp
lret
sti
sahf
lods
cmp
jns
loop
cmp
fwait
and
jns
addb
add
fidivrs
sbb
outsl
inc
out
dec
adc
or
mov
xchg
or
mov
push
cmp
cmp
add
push
mov
dec
jae
xor
dec
sarb
lods
xchg
pop
push
enter
xchg
cmp
fucom
pop
cmp
inc
popf
jge
icebp
and
movsl
insb
pop
insl
enter
sbb
or
adc
push
test
dec
lock
pop
stos
test
clc
in
test
or
push
push
push
xchg
jb
push
pop
into
js
push
adc
jmp
mov
insb
or
lock
test
push
and
aam
outsl
je
out
std
xchg
xchg
popa
jecxz
out
jecxz
addb
leave
cltd
xor
repz
dec
jnp
hlt
je
sbb
imulb
cmpsl
cmp
add
fnstcw
clc
xchg
enter
sbb
inc
jbe
add
sbbb
inc
mov
js
int
sahf
das
bound
in
lret
jno
sub
outsb
test
push
test
addr16
repnz
stc
add
bound
mov
mov
popf
add
mov
repnz
mov
mov
scas
xor
pop
scas
clc
adc
fidivrl
test
mov
mov
jnp
popf
mov
cmp
mov
int
pop
mull
mov
es
roll
or
outsl
sbb
jle
in
stc
mov
popf
imul
rcr
mov
dec
repz
sub
jle
inc
mov
loopne
stos
mov
aaa
hlt
cmp
adc
xchg
aad
stos
jbe
push
test
push
dec
in
dec
pop
shl
hlt
pop
or
dec
mov
stos
fidivl
pop
out
popf
rcrb
inc
mov
xchg
dec
fisubl
adc
inc
xor
pop
adc
push
stos
bound
test
lret
aaa
clts
test
mov
lods
sbb
sbb
pop
cs
mov
jge
mov
dec
test
ljmp
push
mov
mov
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
stos
cld
rcr
bnd
jge,pn
jle
int3
adc
lock
mov
jo
out
sub
loope
test
iret
in
jecxz
mov
outsl
adc
jge
mov
and
jmp
mov
test
sbbl
add
cwtl
inc
pusha
ljmp
sub
and
or
addr16
aaa
mov
bound
sbb
shrl
ret
and
pop
jecxz
test
xchg
push
shrl
mov
movsl
insb
sbb
notl
rcrl
inc
bound
cli
pop
mov
push
inc
mov
int
xor
mov
addr16
add
jmp
mov
rep
call
sub
iret
cmp
sub
js
sbb
adc
hlt
push
call
enter
mov
ret
int
mulps
cwtl
ja
add
fidivrl
lock
dec
mov
sub
dec
pop
xchg
add
js
cltd
mov
mov
xor
and
ds
mov
mov
add
and
pop
pop
mov
jb
inc
call
sarl
sarb
cmc
jp
loop
adc
mov
mov
loopne
xor
ret
sbb
enter
xchg
mov
mov
dec
pushf
aas
mov
sbb
mov
sub
movsl
cmp
xor
push
imul
ret
cmp
push
inc
mov
mov
mov
in
xchg
or
test
add
xchg
cmp
adc
sarb
cmp
popa
lock
adc
pop
cmp
fstpt
sub
in
repnz
jo
sub
mov
aad
mov
jg
aaa
pop
cmp
and
or
pop
lea
test
jb
push
loop
rorb
out
sub
aaa
std
jge
mov
and
pop
xchg
jae
mov
fnstenv
adc
jmp
test
lds
xchg
jmp
fisubs
or
pop
push
stos
add
jne
push
mov
mov
mov
push
rcrb
mov
rorb
arpl
xor
divl
notl
addr16
movsl
jbe
inc
repz
dec
push
test
push
cli
adc
mov
mov
mov
jp
bnd
hlt
lret
cmp
xchg
or
xchg
jno
out
filds
and
mov
add
test
or
push
in
mov
sahf
sbb
fsubs
in
or
cmpsl
add
and
sti
cltd
jmp
repnz
adc
mov
fdiv
mov
in
xchg
cmpsb
das
or
xor
push
arpl
inc
dec
ljmp
loope
shr
out
cmpsb
jbe
cmp
add
inc
rorb
test
mov
or
fcomps
out
mov
mov
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
xchg
mov
add
jge,pn
jle
adc
aaa
cmpsl
out
shlb
pusha
mov
aam
mov
pop
pusha
and
sub
mov
rcrb
sbb
fidivs
inc
mov
enter
push
push
andl
and
shrl
mov
aad
add
pop
in
mov
lods
dec
les
xor
mov
and
cmc
popa
inc
ds
into
shr
pop
add
arpl
and
cmpsl
aas
shl
jge
jbe
mov
pop
mov
mov
and
and
out
pop
sbb
mov
es
or
jno
sub
jecxz
mov
out
pop
data16
jns
and
pushw
dec
fstl
rcrl
aad
mov
cli
fsubrs
iret
cvtps2pi
lret
sub
xchg
fs
push
movsl
pop
pop
push
sub
mov
arpl
push
sbb
mov
andb
or
ss
push
mov
adc
arpl
pushf
jno
scas
pop
dec
xor
mul
fdivrs
cld
neg
add
pop
sub
adc
les
or
outsl
test
in
jp
sub
scas
sbb
insl
rcl
xlat
add
or
rclb
dec
mov
in
daa
test
jno
cltd
frstor
stos
mulb
daa
pop
push
and
xchg
add
test
jecxz
pop
js
mov
dec
out
and
adc
popa
dec
std
pop
loop
les
in
cmp
add
rcrb
add
push
dec
test
int
rorl
mov
inc
cld
enter
ficompl
sub
xor
jl
sbb
adc
or
mov
ljmp
mov
pop
cli
pop
adc
aaa
inc
call
xchg
inc
lret
and
fwait
pop
aad
cld
sbb
pop
dec
nop
test
mov
rolb
out
insl
clc
stc
xchg
lahf
add
cmpb
jge
jmp
popf
ficompl
jne
jo
into
or
inc
or
cmp
or
out
aad
mov
lods
insl
adc
shrb
fwait
sbb
push
push
inc
popf
push
cmp
dec
or
imul
iret
add
cli
in
and
jmp
add
jae
fcmove
pop
ret
push
jge
and
ret
inc
out
jmp
dec
enter
jns
fwait
rcl
in
sbb
cs
sahf
pop
cltd
pop
addr16
push
scas
iret
movsl
push
xor
shl
inc
int
popf
pop
stos
cwtl
test
push
scas
xchg
in
imul
mov
movl
loopne
mov
xor
test
lods
cli
xchg
rcl
mov
mov
jmp
movsl
popa
int
jmp
lahf
lds
pop
push
push
loope
push
or
ret
push
clc
daa
mov
int
inc
mov
cltd
sub
xorl
inc
dec
sbb
add
inc
mov
xor
add
xor
jmp
pushl
outsl
jno
mov
repnz
push
mov
mov
jge
jle
test
push
add
fidivs
inc
incb
sub
lock
rorl
pop
pop
inc
sub
push
inc
repnz
adc
out
pop
mov
loopne
lret
mov
das
push
je
xchg
adc
cld
xor
rclb
fisttpll
jecxz
xor
mov
lock
and
outsb
and
subb
fsubr
int
data16
mov
push
jbe
movsb
sarl
and
enter
lea
int3
xor
in
arpl
push
jne
and
mov
andl
faddl
sub
imul
sub
sarl
pop
sahf
fdiv
mov
push
rorl
pushf
ds
aad
mov
dec
aas
inc
adc
movsl
fwait
dec
adc
add
mov
pop
inc
pop
dec
sbb
mov
adc
dec
xchg
mov
rcr
inc
xchg
repz
dec
aad
mov
in
inc
int
adc
xchg
xchg
sub
aaa
data16
pop
cmpsl
pop
adc
jo
cmp
jbe
push
mov
jb
cmp
mov
aam
pop
lret
outsl
out
or
daa
loope
pusha
shrb
stos
andb
clc
sub
leave
ret
mov
in
ja
lahf
push
arpl
std
je
mul
test
mov
and
cwtl
cmp
mov
data16
mov
out
jae
test
imul
cltd
leave
xor
and
int3
mov
fldcw
add
mov
out
inc
out
inc
push
js
xor
sub
mov
div
stc
lods
add
pop
les
xor
inc
push
sti
in
sub
pop
out
cmp
pop
jp
xor
scas
gs
loopne
gs
movsl
lahf
ljmp
call
cwtl
adc
mov
sub
imul
sub
cli
in
xchg
std
hlt
scas
xor
xor
mov
pop
pop
dec
jno
jecxz
int
xchg
pop
pop
cmp
push
test
sbb
xchg
pop
icebp
sub
rcrb
or
mov
mov
and
mov
inc
mov
cld
jmp
cltd
and
cmp
push
test
push
jg
add
imul
cmpsl
pop
fcmovbe
pop
add
jns
cwtl
jbe
cmp
sub
das
int
ja
sti
mov
mov
add
vmovdqu
xor
dec
mov
inc
rolb
into
std
imul
fstpt
rolb
xchg
mov
repz
ss
in
out
or
mov
adc
push
aaa
mov
mov
es
stos
lea
imul
mov
ljmp
fidivs
insl
fs
jl
pop
mov
fdivr
xor
sbb
int
and
std
push
sbbl
enter
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
mov
outsb
imul
jle
add
cmpsl
push
sbb
adc
mov
rcrl
inc
in
add
and
jge
and
cmpsl
jno
xchg
mov
mov
ds
or
gs
pushl
rcrb
ljmp
mull
mov
jge
ljmp
int3
fstpl
sbb
mov
push
mov
ss
cli
int3
push
sarb
jo
jle
inc
mov
mov
inc
inc
ss
add
sbb
xlat
mov
enter
rcl
jae
ret
sub
pushf
fs
push
bound
in
ret
xor
xor
lods
arpl
pushf
cwtl
lret
pop
cs
mov
je
inc
push
lock
and
popf
xor
shr
xor
pop
mov
add
lds
and
or
sbb
jmp
loope
push
ljmp
test
loopne
cwtl
sub
repnz
cld
push
add
push
rep
adc
and
cld
mov
and
outsl
repnz
mov
xor
jno
cli
xor
pop
xchg
add
in
mov
rorb
fildll
mov
test
mov
arpl
mov
xor
icebp
hlt
jb
fdivrs
fiaddl
leave
test
cmp
xchg
sub
sub
pop
push
rcrb
cli
push
sbb
jge
xor
testb
mov
jbe
cmc
fwait
in
push
rcrl
ja
xor
scas
mov
movsl
push
and
sbb
aad
jle
or
scas
cmp
jae
mov
test
xor
mov
jecxz
test
adc
push
imul
cs
pop
outsl
inc
pop
mov
insl
test
xchg
pop
xchg
and
sbb
popa
orl
les
jnp
cmpsb
mov
stos
in
sub
xor
cmpsb
aas
push
sub
adc
xor
mov
stos
push
xlat
add
mov
cmp
push
lret
mov
pop
insl
inc
push
nop
push
xorb
movsl
pop
mov
mov
cmp
sbb
xchg
jp
sub
test
int
popw
outsb
insb
dec
js
aas
das
mov
xor
shlb
aam
popa
dec
cmp
pop
bound
jecxz
jbe
jecxz
cmp
sti
jnp
sub
outsl
dec
in
add
scas
sahf
fmul
adc
mov
dec
and
inc
fs
add
push
cmpsb
push
in
loope
push
cmp
clc
and
in
test
mov
or
jg
add
sbb
mov
inc
xor
pop
jp
outsl
mov
push
popf
test
xor
inc
lahf
mov
mov
push
cmp
sbb
jmp
movsb
sbb
jns
call
push
mov
or
subb
lods
in
iret
ljmp
mov
loop
inc
xchg
jb
add
inc
cld
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
rclb
jge,pn
jle
jne
mov
push
fidivl
imul
xchg
inc
mov
xchg
pop
into
data16
add
and
icebp
sbb
push
insb
das
pop
mov
xchg
imul
dec
sub
mov
add
in
pop
pushf
xor
icebp
pop
jmp
ss
sarl
sbb
daa
bound
dec
xor
sbb
xchg
cmp
jp
push
inc
repnz
adc
arpl
or
lcall
lds
je
scas
push
push
push
xlat
push
testl
ds
addl
mov
push
cmpsl
clc
pop
sub
and
ficoml
inc
loope
xor
jae
inc
fsubrl
mov
rorb
dec
xchg
imul
insl
cwtl
into
inc
mov
pusha
adc
dec
add
mov
nop
cltd
cmp
push
in
sbb
cmc
xchg
dec
lock
push
mov
aad
sub
pop
sbbb
sub
clc
and
imul
jae
jge
push
test
lods
xchg
push
cli
jmp
sub
jo
add
jae
jnp,pn
fnsave
movsl
sbb
push
mov
mov
push
and
inc
data16
int3
or
xchg
pop
sub
xor
test
jle
aas
ret
sti
popf
mov
pop
cmp
aad
mov
mov
imul
lds
push
incl
lahf
cli
push
pusha
jl
dec
dec
jns
out
xchg
sti
scas
xor
repnz
rolb
pop
aam
test
xchg
jg
xor
cmp
stc
rol
jb
jecxz
adc
mov
in
cmp
shr
jne
out
or
mov
cwtl
out
in
enter
fcompl
inc
adc
in
std
imul
jae
stc
mov
mov
jp
or
sub
dec
int
add
cmp
sbb
les
jnp
and
ja
jae
nop
jne
pop
xor
rcr
xchg
add
add
cs
lahf
insb
loop
popl
and
popf
out
sub
xor
lret
add
dec
pop
push
mov
push
movsb
adc
sub
mov
sar
add
mov
iret
fsubl
fwait
xchg
sahf
push
out
fdivs
hlt
and
adc
inc
cmp
inc
inc
pop
imul
imul
pusha
imul
adcb
mov
dec
push
das
xorb
push
es
rolb
iret
inc
jmp
pusha
rorb
fisttps
dec
sbbl
bound
push
mov
mov
xchg
clc
mov
xor
cmp
enter
dec
lahf
idivl
mov
mov
lds
jp
and
pop
aam
fisttpll
or
clc
mov
mov
mov
mov
xor
add
mov
mov
jmp
mov
inc
inc
orb
data16
test
loopnew
cmpb
jge
jle
stos
push
inc
aam
shl
fnstenv
repz
mov
push
test
cmc
mov
sub
insb
and
xor
inc
jno
loopne
test
call
stc
mov
pop
lcall
nop
sbb
cmc
and
dec
mov
xchg
inc
sub
clc
mov
cmp
cmp
dec
jmp
les
stc
imul
imul
mov
push
mov
mov
jns
movl
repz
cmpsl
dec
sbb
and
lahf
lods
fimuls
inc
std
mov
ret
test
in
cmpsl
jmp
sbb
adc
ret
xor
add
jb
add
mov
or
xchg
call
jle
mov
mov
ret
stc
cmc
add
cli
mov
roll
movsb
sti
cmp
into
or
xorl
lods
pop
cmp
mov
push
insl
out
std
cmp
or
loop
repz
mov
int3
pop
pop
lahf
and
popf
push
mov
sarb
nop
movsb
aam
in
scas
inc
sub
sbb
and
aad
bound
or
repnz
sub
push
lahf
sub
shl
xor
jecxz
cmp
out
in
je
add
fsubrs
cmc
push
and
cmp
pop
adc
jle
inc
mov
inc
pushf
xchg
mov
mov
fstpl
jae
push
ror
push
lret
add
xchg
or
adc
cmpsb
jb
jnp
pushf
enter
sbb
sbb
arpl
pop
mov
testb
cmp
stos
out
data16
xchg
popf
jecxz
js
test
mov
pop
hlt
insb
mov
cmp
test
in
xor
pushf
shl
rclb
aam
xchg
popf
and
movsw
mov
mov
int3
push
loop
arpl
mov
test
sub
mov
mov
fistl
les
lods
loopne
xchg
xchg
or
push
and
fnstcw
cmpb
dec
sub
mov
mov
in
hlt
jbe
fidivrl
loope
or
jb
pop
dec
lods
imul
daa
sub
jge
and
in
push
mov
pop
jb
mov
adc
test
stos
add
loop
inc
mov
mov
ds
mov
popf
dec
outsl
fwait
test
push
xchg
push
sub
xor
divb
and
pop
push
fcompl
clc
push
adc
clc
mov
lods
sub
mov
test
inc
imul
sbb
jae
cmp
ret
mov
push
inc
cwtl
and
mov
dec
scas
cmpsl
jb
jecxz
push
xorb
xchg
aas
out
inc
repz
test
jne
aad
mov
cmp
popf
cwtl
or
test
add
cmp
cld
cmp
repz
jge
add
stc
dec
in
dec
loopne
movb
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
cmpl
out
xchg
pminsw
pop
movsl
adc
push
sub
mov
mov
in
lock
mov
adc
scas
enter
mov
mov
out
lods
mov
test
stc
out
add
push
shlb
addr16
xchg
imul
out
push
es
dec
outsb
mov
xchg
int3
adc
addl
push
sub
sti
or
arpl
xchg
addl
jle
pop
pop
mov
stc
aas
sbb
or
and
push
popa
cltd
adc
or
out
iret
sbb
lods
js
mov
jns
pop
mov
nop
test
inc
in
add
sub
xchg
divl
cmp
daa
movsl
cmp
add
into
jle
and
cmp
mov
inc
sub
fstp
adc
in
add
mov
decl
cmp
jnp
sub
mov
sahf
popa
cmp
out
div
or
fdivr
push
mov
dec
xchg
jns
testl
lret
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
loopne
lcall
jle
stos
in
rclb
cli
add
aaa
and
lret
xor
cmc
xchg
add
mov
push
addr16
xlat
sbb
jne
and
cld
mov
lret
xor
mov
inc
sbb
cmp
dec
stos
or
cmp
lea
rol
test
sti
adc
fcmovbe
pop
ss
daa
sub
lds
shll
mov
cmp
cltd
das
pop
or
js
inc
lds
ss
pop
jl
int
lea
inc
repnz
adc
scas
in
out
lret
pop
insl
and
adc
and
push
leave
or
in
mov
mov
es
mov
mov
fdivs
into
push
xchg
loope
out
stos
dec
push
cmpsl
mov
xor
in
pop
xor
dec
fistpl
inc
sti
sti
mov
es
cmpsb
das
mov
ret
push
stos
pop
xchg
jnp
push
fistpl
xchg
xor
in
fstpl
or
mov
xor
mov
mov
scas
out
adc
add
sahf
push
mov
push
sub
jne
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
cli
subb
push
jle
and
jle
test
mov
xchg
call
sub
test
dec
mov
cmp
xor
in
lea
sbb
rclb
mov
fdivl
stos
dec
test
fmull
mov
pop
cmp
mov
pop
xor
adc
dec
cmp
add
inc
fists
call
or
test
jae
or
ja
lret
lods
and
imulb
sbb
push
jmp
ret
std
rcrl
addr16
pop
stos
out
iret
imul
in
test
cld
mov
mov
mov
fistpl
mov
nop
int
cmpb
ret
test
inc
lods
and
mov
jnp
pop
jne
xchg
xor
popa
fsub
notl
adc
sbb
cmpsl
jb
sahf
inc
cmp
push
xor
cmp
sar
insl
lcall
jg
lahf
scas
pop
mov
mov
dec
mov
add
clc
cltd
arpl
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
lea
and
jle
jecxz
out
fsubl
mov
ss
cmpsl
lods
and
jae
sahf
outsb
adc
ljmp
leave
and
icebp
bound
les
inc
int3
testb
test
cmpsb
scas
and
sub
cltd
cmp
cwtl
std
mov
aam
sub
jmp
sub
adc
xor
enter
sti
mov
pop
scas
out
je
addr16
jb
add
enter
pop
mov
dec
push
ljmp
dec
dec
mov
in
pop
adc
mov
fcompl
nop
push
outsl
jl
inc
leave
sub
push
insb
sbb
adc
int3
mov
scas
push
push
frstor
out
daa
rorb
test
fcoml
sbb
inc
sahf
dec
mov
jecxz
mov
mov
loop
inc
push
out
cmp
clc
fwait
jb
and
out
es
dec
shrb
iret
fiaddl
jns
dec
mov
stos
xor
je
lods
dec
movsl
into
movsl
mov
jnp
clc
pop
xor
push
dec
pop
xchg
sub
jmp
adc
jae
jno
je
adc
mov
mov
and
jle
fisubrs
xchg
lods
pop
jo
push
adcb
rcr
mov
test
fnstenv
fsts
sbb
adc
loop
adc
and
mov
lds
jbe
loopne
pusha
jmp
inc
add
fisttps
dec
aas
add
and
jbe
xchg
xchg
in
dec
loop
mov
jae
mov
and
je
fwait
push
pop
pushf
sbb
inc
iret
imull
daa
adc
xchg
dec
jae
bound
xchg
loop
and
and
or
dec
add
push
hlt
inc
fs
mov
push
jae
stos
out
cltd
jno
std
sub
insb
and
jns
push
mov
push
or
in
push
or
jns
xor
fimull
add
fisttpll
cmp
mov
cmp
add
andb
and
cmp
sub
mulb
inc
or
fdiv
push
out
fsubrl
cltd
push
xlat
add
fcoml
negb
mov
lret
aam
sbb
sti
dec
mov
lret
jmp
mov
jo
mov
aad
pop
xchg
mov
and
jle
insb
mov
lret
sbb
xor
imul
sub
lods
mov
popf
mov
sbb
xchg
mov
add
cmpsl
cmp
sbb
mov
notb
pop
jno
jge
mov
or
jo
aam
int3
sub
lcall
ja
pop
stos
cmp
jl
int3
test
cmp
clc
mov
jge
push
cld
jecxz
add
ss
cmp
xor
out
rorb
fisttpl
and
sti
in
sbb
jns
fadd
lods
pop
jge
test
aam
fmull
ds
xchg
insl
xchg
and
fld
pop
lods
rcrl
push
clc
out
mov
push
out
scas
mov
rol
insl
push
dec
aas
pop
sub
sbb
sub
cmp
int3
ficoml
iret
lcall
movsl
xor
test
aad
outsb
enter
xchg
orl
inc
pop
pop
and
cmp
pop
jb
repz
mov
mov
xchg
rclb
icebp
cmp
pusha
scas
ret
cmpsb
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
mov
orl
add
sub
cmp
adc
test
push
clc
add
fcoml
outsb
insl
stc
mov
jl
xchg
sub
pop
mov
divb
cmp
add
movsl
sbb
leave
add
frstor
mov
push
pop
xor
stos
aam
push
jb
adc
aam
jge
pop
inc
mov
iret
inc
cmp
out
mov
xchg
inc
dec
cwtl
mov
push
pop
or
or
mov
stos
or
push
bound
out
mov
dec
dec
mov
stos
sub
add
cmpsl
xchg
popa
nop
jecxz
and
push
or
jg
pop
sbb
xor
xor
mov
or
jns
xor
and
sub
stos
dec
inc
push
sbb
ret
lock
push
or
xchg
ja
clc
mov
xor
cli
ljmp
xlat
sbb
or
dec
gs
es
add
adcb
ds
mov
cmc
jnp
push
imul
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
nop
and
lgs
jle
cmpb
jmp
xlat
adc
adc
pop
sub
fwait
mov
cmp
dec
aaa
jns
mov
sahf
inc
orl
pop
out
mov
clc
decb
sub
lods
xor
jmp
mov
mov
dec
push
movsb
xlat
mov
xchg
shll
sub
out
lret
sti
icebp
dec
push
arpl
mov
lea
jecxz
pop
jecxz
aad
sub
repnz
sahf
decb
pop
mov
ficomps
fdivs
mov
cmpsb
xor
mov
cltd
inc
fs
mov
lret
sub
sbb
mov
int3
mov
je
pop
clc
jns
push
inc
dec
lahf
sti
adc
call
xor
aad
int
cmpsb
sub
imul
fldenv
movsb
scas
xchg
or
shrb
sub
pop
out
add
aad
mov
mov
arpl
push
xchg
fwait
xor
or
bound
xor
sub
das
push
pushl
insl
cwtl
es
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
sti
push
aaa
pusha
lods
lret
data16
xor
push
call
ficoms
imull
jl
push
cmpsb
out
test
movsl
fldcw
cli
test
ds
mov
pop
lret
and
mov
pop
sub
aas
arpl
imul
sub
sbb
mov
add
cs
mov
pop
fs
sbb
push
cmp
mov
dec
and
jne
lock
loop
inc
push
in
and
lret
je
loopne
iret
xor
arpl
mov
mov
dec
mov
loope
dec
or
mov
xor
insl
lods
push
outsl
push
sbb
xor
out
push
pushf
mov
je
or
aas
xchg
sahf
adc
xchg
pop
push
jae
dec
add
adc
mov
xor
push
pop
mov
lcall
add
int3
mov
les
js
add
mov
xor
mov
iret
dec
fwait
mov
fsubs
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
