push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
push
adc
int
adc
jns
mov
mov
stos
cmpsb
or
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
dec
pop
lret
pop
push
push
notl
in
enter
cwtl
cmp
sarb
stos
out
pusha
fs
repz
pop
aas
leave
add
lea
out
jp
and
cmp
pop
cmpsb
aaa
rclb
pop
mov
divb
inc
xchg
mov
jb
pop
aam
and
mov
jmp
sbb
or
sbb
push
loope
in
imul
xorb
in
pop
or
cwtl
xor
adc
adc
leave
xor
xchg
xor
stos
push
sub
sub
mov
cmp
ficompl
sti
mov
push
or
fsubr
xor
xor
or
push
dec
in
add
xchg
mov
inc
jecxz
insl
mov
lea
les
adc
mov
inc
cld
pop
sbb
scas
je
cwtl
sbb
int3
lret
mov
daa
push
loopne
fcompl
sbb
dec
clc
addr16
repnz
jmp
or
sub
pop
fwait
sub
jnp
xchg
dec
push
das
sbbb
mov
pop
imul
gs
pop
push
and
inc
sub
aad
mov
lea
sbbl
imul
and
xor
inc
adc
add
mov
cmc
movsl
fcomip
ret
jbe
in
shll
cmpsb
xor
inc
repz
xor
dec
adc
and
cmp
lret
cmp
xlat
lock
ljmp
dec
push
sub
outsl
lcall
enter
and
lods
cltd
and
cmp
jae
cmp
push
cmp
cs
mov
xchg
push
mov
cltd
std
add
movsl
sbb
sub
call
popa
mov
add
outsl
adc
or
sub
popf
xor
push
sub
dec
addr16
xor
mov
in
push
add
nop
dec
adc
cli
lret
or
pop
dec
in
inc
jg
test
or
mov
push
fdivp
lods
adc
aaa
mov
xchg
arpl
ljmp
sbb
and
jmp
je
mov
enter
outsb
leave
ds
jl
stos
add
inc
mov
andl
fisubs
repz
into
cmpsb
pop
arpl
data16
stos
std
repnz
pop
jge
push
lds
mov
daa
cmpsb
jnp
fmull
ret
xchg
push
call
hlt
mov
add
leave
dec
push
pop
std
add
movsb
aam
mov
lock
cld
fwait
lret
rcl
mov
pop
push
inc
sub
pop
jmp
adc
and
les
jne
into
dec
xor
mull
nop
jne
repz
and
fs
jnp
sbb
imul
ret
lcall
add
fs
mov
inc
and
jns
inc
add
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
or
adc
adc
adc
adc
clc
sub
jge
pop
in
sub
decb
out
out
xchg
cmpsb
popa
gs
inc
jo
add
scas
adc
adc
sbb
sbb
movb
arpl
inc
jecxz
xchg
cld
lock
clc
mov
sti
mov
les
push
popf
adc
fistps
jne
cmpsl
push
xchg
out
and
imul
mov
out
out
icebp
shrl
push
jmp
inc
hlt
sbb
cltd
xchg
mov
add
cmpl
fwait
inc
rorb
std
and
mov
xor
loope
out
repz
sub
movsl
push
sub
adc
mov
test
repnz
mov
clc
pop
insb
pop
mov
push
cmp
aaa
lcall
and
mov
js
sti
xchg
bound
xchg
xchg
and
xchg
sbb
pusha
mov
test
lahf
jg
les
jmp
jnp
add
fwait
test
ljmp
icebp
dec
imul
cmp
adc
xchg
fsubrl
repz
out
mov
pushf
pop
js
movsl
daa
mov
jns
std
inc
add
lahf
cmp
shll
or
mov
or
inc
scas
xor
into
cmp
cmpsl
push
push
mov
pop
xor
lret
inc
mov
out
ja
dec
cmp
in
adc
xchg
les
pop
lret
cmpxchg
cld
add
shrl
push
loope
push
stos
call
repnz
mov
in
clc
xchg
sbbb
dec
popa
addl
fistl
inc
jne
cmc
lods
bound
repz
add
clc
popf
lea
jecxz
ret
pop
cmp
cld
lods
cmp
sar
inc
push
mov
xor
sbb
mov
aas
mov
lahf
xchg
out
jmp
cmp
pop
adc
or
xchg
sarb
testl
add
mov
hlt
mov
inc
cmpsb
pop
jb
lret
cltd
ficoms
nop
sbb
or
mov
inc
cmp
lcall
mov
aam
push
mov
jo
adc
xor
rcrb
push
in
push
xor
inc
int3
xor
out
aaa
pop
xchg
repz
out
insl
add
fldl
in
xchg
pop
lea
pushf
cli
mov
mov
push
stos
dec
and
dec
and
outsl
scas
les
mov
mov
mov
xchg
xchg
pushf
pushl
fnsave
xchg
mov
sahf
in
addr16
sub
mov
add
jle
clc
daa
daa
rcr
dec
call
xchg
mov
daa
dec
rcl
xchg
insb
xor
or
jecxz
leave
xchg
ds
pop
repz
test
and
xchg
adc
out
out
jle
inc
jmp
cmp
shrl
jne
mov
xchg
test
fwait
mov
xor
adc
jno
fwait
leave
jle
lahf
mov
not
mov
inc
or
outsb
sub
scas
sub
pop
mov
mov
sub
mov
mov
cmp
push
outsb
sub
outsl
jo
jl,pt
leave
and
cli
adc
popf
jae
cmpsb
mov
adcb
nop
fdivl
push
ret
pop
jo
sti
scas
outsb
repnz
imul
add
mov
mov
les
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
mov
or
adc
adc
adc
in
aas
jecxz
add
add
lock
xchg
mov
or
es
cmpb
sub
inc
or
scas
ja
imul
out
pop
lcall
jle
adc
enter
sub
lods
data16
adcl
mov
pop
push
adc
stc
sbb
and
and
and
out
lret
sbb
inc
rcrl
outsl
addl
imul
pop
inc
push
je
push
and
xchg
inc
ret
jmp
adc
punpcklwd
stos
je
lds
testl
inc
sub
xchg
daa
int3
shll
pusha
and
into
sarb
inc
cmp
mov
outsb
dec
pop
into
shlb
dec
cmpsb
mov
fsubs
aas
aaa
loope
or
insl
insl
movsl
into
movzbl
jne
ja
test
lea
cmp
test
jl
xchg
mov
jne
add
mov
xor
xchg
mov
aad
jo
cltd
lahf
adc
xchg
movsl
shl
pop
fistl
pop
mov
fcomip
mov
and
dec
hlt
ret
daa
or
fcomp
pop
push
mov
das
xchg
repnz
xor
push
inc
mov
mov
add
aam
repz
insb
cmp
and
xchg
adc
stos
lods
cmp
inc
insl
inc
scas
mov
imul
xchg
std
loop
mov
shl
xchg
movsl
dec
in
and
repz
pop
mov
cmp
push
jmp
fs
cmpsl
test
add
sar
lds
mov
sti
xor
ss
leave
inc
jecxz
or
std
xchg
scas
iret
test
sti
cmp
loope
orb
cwtl
mov
js
and
jmp
imul
push
cmpsb
xor
add
sub
inc
movsl
gs
mov
mov
push
ljmp
mov
scas
adc
cmp
loopne
popf
sub
push
inc
jle
xchg
data16
mov
push
loope,pt
cmpsl
and
push
pop
push
cli
jbe
out
mov
out
nop
pop
lahf
pop
push
andb
push
cmp
jecxz
add
int3
sub
movl
jle
or
mov
ss
dec
scas
fsubp
mov
ret
testl
rcrb
jbe
cmp
mov
mov
mov
xchg
in
in
mov
nopl
pop
push
pop
lea
jne
lret
mov
adc
mov
lret
stos
sbb
and
cmpb
into
cmp
test
sub
out
idivb
stos
xchg
das
inc
dec
icebp
adcl
sbb
cmp
inc
or
andb
push
adc
lds
lea
out
cmp
hlt
int3
pop
dec
and
pushl
pop
subl
jg
pop
std
enter
jno
sbb
ret
cmp
inc
inc
xchg
xor
mov
movl
xor
in
cmp
mov
push
mov
mov
jo
popf
popf
int3
std
adc
mov
iret
xchg
outsl
xor
cmp
loope
es
loope
inc
jg
stos
sub
adc
adc
mov
push
push
jge
cli
cltd
dec
ficoms
inc
sbb
test
cs
decl
add
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
lcall
cmp
mov
mov
lock
leave
fldt
stos
jp
mov
inc
sub
cmp
addr16
orl
mov
pop
push
mov
cmp
imul
xor
ret
push
add
dec
cltd
cmpsl
scas
cmp
jp
push
jge
push
or
push
inc
cmp
je
mov
sbb
bound
jo
mov
and
adc
sbb
cmc
fidivrs
mov
fadds
add
lock
xor
loope
xchg
dec
aam
mov
stos
and
loop
cli
mov
scas
and
inc
fists
xor
pop
std
xchg
in
mov
jl
jnp
xchg
inc
or
dec
lahf
js
iret
out
sbb
int
jbe
je
dec
xor
loopne
es
and
lahf
inc
mov
or
jge,pt
lret
cld
insl
cwtl
mov
pushf
add
cwtl
movd
mov
add
xor
leave
or
add
les
push
stc
les
pop
xchg
in
jns
stos
push
adc
shl
rcll
cmp
inc
dec
fdivl
into
add
xlat
mov
test
push
sbb
mov
jae
outsb
inc
add
lods
adc
jecxz
loope
jo
xchg
sbb
iret
xchg
cld
testl
inc
or
mov
inc
xchg
sub
lods
mov
cs
je
cmp
stc
jbe
inc
lods
push
and
pusha
mov
and
aad
and
dec
dec
or
popf
aas
es
out
cmp
pop
roll
sbb
sub
inc
pop
test
adc
sub
fisubrs
cltd
js
stc
or
and
repz
imul
or
ds
arpl
xor
xor
dec
mov
flds
push
cwtl
popa
arpl
cmp
dec
xchg
and
inc
pop
jno
jo
inc
mov
xchg
aas
xlat
movsl
cli
lock
arpl
sahf
cmc
inc
dec
lret
ss
test
inc
std
rorl
das
out
mov
dec
xchg
inc
inc
sub
scas
rorl
repz
shl
adc
popa
fmulp
das
push
xchg
sub
cmp
fnsave
and
scas
sahf
data16
data16
repz
jp
cmpsl
cld
xchg
mov
scas
out
or
inc
test
jns
xor
fcomps
add
test
test
pop
and
in
out
jmp
stos
or
aam
inc
or
adc
outsl
call
inc
sti
sbb
je
push
test
mov
adc
jmp
inc
xchg
test
xlat
movsb
loope
loope
fmuls
sub
in
push
jmp
mov
mov
xor
sarb
shll
jns
push
push
out
stos
dec
mov
and
pop
mov
rcll
jae
and
mov
push
sbb
clc
inc
add
jbe
push
sbb
push
sbb
inc
xchg
mov
jecxz
jb
dec
mov
ljmp
push
sti
rorl
and
hlt
and
stc
ss
lods
xchg
idiv
cmp
adc
lock
in
testl
daa
pusha
mov
inc
inc
pop
adc
xchg
fsts
imul
popf
sbb
fwait
adc
mov
fsubs
loope
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
push
js
in
notl
adc
adc
adc
loopne
mov
decl
lret
inc
fiadds
xor
clc
arpl
dec
pop
jmp
insb
jno
lret
aas
inc
lds
loop
fwait
or
or
fistpll
inc
call
cmp
sahf
outsb
lahf
fdivl
rcrb
push
scas
call
inc
cli
cmp
repnz
call
adc
mov
enter
rol
je,pt
xchg
fstl
inc
les
lcall
push
test
mov
push
into
imul
stos
add
pop
ret
mov
popf
enter
pop
jp
xchg
lahf
pop
js
push
in
cwtl
cld
and
nop
fistl
js
test
and
pop
pop
jmp
fistl
cwtl
imul
mov
add
ljmp
and
les
lea
repz
imul
jmp
push
or
lock
push
xchg
adc
jge
push
mov
push
je
fisttps
aad
clc
add
ret
jmp
push
sub
test
xchg
stos
push
lock
and
aas
or
ficompl
push
inc
pop
mov
out
aaa
cmpl
pop
daa
out
inc
mov
add
shlb
pusha
fstpl
inc
bound
es
jb
js
in
call
mov
push
lods
xor
test
pop
aam
rorl
mov
lahf
xchg
xchg
clc
or
cmp
and
out
cli
push
repz
sbb
ret
sti
or
or
in
mov
pop
dec
sub
jb
mov
jl
mov
xchg
mov
push
adc
pop
cmp
mov
dec
ljmp
mov
or
xchg
mov
lea
dec
into
and
bound
push
jne
sbb
dec
mov
dec
sub
lret
imul
sub
xor
das
aam
cmp
lcall
ss
lock
in
rcrl
test
bound
sub
and
in
xor
mov
pop
xchg
add
or
jle
push
mov
stc
sub
cmp
add
fwait
cmpsb
push
and
cmp
icebp
lock
test
test
push
pop
inc
xchg
mov
jbe
or
aad
popf
hlt
scas
daa
pop
cmpsb
in
lret
push
inc
adc
inc
inc
mov
push
sub
xchg
insl
inc
bound
mov
out
std
jns
mov
das
repnz
mov
jg
lahf
inc
or
subb
push
add
jne
push
insb
std
pop
sahf
add
popa
mov
xlat
fwait
ss
divl
lret
jnp
scas
sub
insl
icebp
in
jnp
xor
inc
mov
loope
imul
or
push
fadds
pop
mov
sbb
xchg
inc
or
enter
cmp
jbe
cli
jl
adc
outsb
pushl
pop
mov
jnp
pop
mov
outsl
clc
sub
insl
sbb
inc
scas
or
mov
and
and
sbb
lods
push
add
imul
cmp
test
mov
jbe
ret
xchg
mov
jno
sbb
bound
lahf
fimuls
cmp
add
add
add
inc
add
add
add
inc
pop
add
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
push
adc
adc
int
adc
lock
xchg
clc
cs
sbb
arpl
dec
push
mov
push
ljmp
into
mov
lods
fisttpll
xor
lds
and
mov
sti
xchg
inc
rep
in
inc
mov
jne
in
xchg
mov
scas
add
arpl
inc
cmp
test
or
pause
mov
jmp
fisttps
dec
out
mov
inc
mov
ret
negb
les
sub
xchg
test
mov
shll
or
mov
inc
out
rolb
arpl
ja
out
ret
test
int3
sbb
jle
je
jne
inc
mov
adc
xchg
roll
cmp
lret
arpl
fisttpll
pop
adc
cltd
sub
cmp
cmp
ds
fsubrl
sub
in
cmc
scas
pusha
repnz
xchg
stos
fwait
loopne
jg
pop
fidivl
fisubs
push
call
ljmp
mov
or
inc
inc
out
sti
sub
insl
subb
xlat
cmc
lds
push
xor
into
or
clc
pusha
imul
push
out
jns
inc
and
lea
mov
rolb
cltd
pop
push
sub
int
outsb
lret
sbb
test
mov
fidivl
sub
out
sbbl
push
push
sbb
cmc
hlt
hlt
and
jle
jno
data16
in
cwtl
dec
xchg
xchg
mov
xchg
inc
or
ljmp
hlt
xchg
push
mov
xchg
xchg
es
or
mov
nop
or
insl
or
cmpsl
fnstenv
lea
adc
mov
movsl
jnp
notrack
loop
insb
repz
mov
push
mov
sbb
addr16
stos
adc
xor
and
fstpl
jno
jae
dec
sbb
push
mov
aaa
push
std
lock
cmpsl
movsl
jae
and
pop
ss
sbb
sbb
sub
iret
adcb
dec
fcmovne
jno
mov
shrl
and
mov
mov
mov
stos
andl
mov
xor
cmp
jmp
fcomps
push
add
jo
int3
xchg
shll
cli
mov
fnstenv
sbb
and
lds
dec
jg
push
out
imul
inc
cmp
int3
pop
lock
notb
pop
data16
dec
add
and
sub
loop
mov
pop
push
test
push
adc
scas
shll
add
dec
cmp
cmc
xor
imul
cmp
add
cmp
jno
sbb
pop
mov
jge
scas
mov
repz
lods
mov
les
or
mov
push
add
xchg
and
fiadds
pop
jmp
dec
fstl
and
cmp
icebp
cmp
aas
repz
xchg
fwait
out
fdivrs
jg
daa
or
outsb
xchg
xor
xchg
in
popa
fwait
pushf
inc
popf
in
mov
jbe
push
push
add
out
ret
arpl
xor
mov
fs
adcb
cltd
xor
lock
jnp
loop
divl
sahf
imul
cmp
push
sbb
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
jo
int3
lods
push
in
adc
int
adc
addr16
dec
xor
mov
and
jg
mov
cmp
add
pop
push
imul
add
dec
cmpl
push
dec
not
cmc
mov
jae
mov
inc
or
cmc
ret
xchg
dec
test
mov
xchg
paddw
cmpb
adc
fidivrs
andb
inc
rcll
sti
jnp
xchg
mov
dec
test
std
fistpl
scas
faddl
js
sahf
jno
xor
call
ja
rol
loope
addl
aam
shlb
jp
in
sub
jnp
out
adc
insb
aas
aam
mov
pop
mov
rcrb
push
inc
pop
adc
bound
in
jle
cmp
lretw
pop
pushf
dec
je
dec
call
cli
test
cli
mov
mov
add
dec
hlt
jne
in
call
es
js
jle
dec
adc
sub
into
fstl
repz
ja
jge
pop
xlat
dec
fld
push
cld
sbb
cmp
and
sub
fidivrs
push
cmp
adc
fwait
inc
js
clc
cmp
adc
adc
push
dec
ds
xchg
sarl
js
mov
adc
stc
test
fcoms
data16
ret
rcll
js
cwtl
mov
add
jbe
int3
sahf
addl
sbb
sub
inc
loope
or
fidivl
ret
in
es
add
mov
test
xor
push
mov
je
hlt
sub
ret
fadd
adc
lods
xchg
ljmp
mov
fmuls
dec
mov
xchg
hlt
mov
enter
pop
sub
mov
sti
mov
push
or
out
adc
popl
jb
mov
js
inc
not
shrl
add
pop
cmp
movsl
enter
pop
test
js
mov
pop
pop
cld
cmp
push
mov
out
push
cmp
jnp
lahf
and
dec
ljmp
push
in
shrl
inc
mov
mov
add
jecxz
add
mov
xchg
aaa
mov
adc
orb
dec
or
mov
data16
lds
pop
test
add
jl
cmp
push
mov
mov
mov
pop
nop
aam
sbb
cmovl
sbb
dec
add
or
dec
sbb
lcall
push
add
dec
loope
adc
push
sub
and
notl
clc
sahf
pushf
jns
or
xlat
jbe
or
or
jo
pop
push
add
jb
inc
outsb
lock
lcall
sub
rcll
cltd
sub
je
in
push
filds
out
popa
xor
xchg
loop
sbb
mov
cli
and
aam
scas
lcall
mov
hlt
jo
xchg
test
dec
lcall
out
orb
outsb
jno
inc
mov
xchg
jne
inc
mov
sbb
insl
and
add
lock
jae
inc
aaa
cmp
adc
and
leave
les
jg
int3
pop
jmp
outsl
push
and
imul
fistpll
dec
jge
inc
sub
ret
mov
sbbb
lea
negl
imul
daa
cs
add
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
inc
repz
adc
adc
int
adc
mov
xchg
loopne
cmp
xor
mov
loope
and
out
cmp
imul
shll
test
fiadds
mov
lods
lahf
mov
ficoml
jne
rorb
imul
cmp
xor
lea
dec
or
xor
inc
out
mov
push
loop
out
jmp
xchg
ss
call
rolb
pop
lahf
sti
sbbb
pop
dec
sub
pop
push
adc
mov
mov
jbe
icebp
cmpsl
sbb
push
leave
jne
out
loopne
xorb
sub
sub
pop
pusha
daa
jno
imul
sbb
ss
in
mov
mov
shll
push
fsubr
mov
das
maskmovq
imull
lods
stc
adc
push
test
sbb
subb
lods
leave
pop
imul
js
sbb
jp
xchg
rcrl
dec
testl
pop
dec
xor
fists
sahf
test
gs
subl
sarb
or
bound
iret
and
js
cwtl
and
loope
repz
fisttpll
insl
and
mov
dec
into
jne
call
int3
enter
aas
jecxz
jge
out
jno
movsb
push
rcr
inc
or
jae,pt
or
mov
pop
cmp
or
aam
call
les
xchg
cmp
fcomps
jmp
cmp
inc
call
sbb
jge
pop
add
jae
or
lcall
mov
dec
mull
out
cltd
leave
or
inc
insb
xchg
cli
les
jno
jae
lahf
clc
jo
add
inc
nop
aaa
add
push
adc
outsb
xchg
in
xchg
pop
icebp
movsl
xor
stos
add
cltd
jg
push
and
xchg
jl
jmp
cli
sbb
aad
pop
daa
iret
cli
dec
push
mov
imul
addr16
repnz
push
fiaddl
mov
shlb
pop
ret
inc
sbb
outsl
pop
mov
adc
adc
cmp
mov
pop
imul
push
test
cmp
mov
sbb
jns
incb
push
mov
jp
mov
xor
jmp
sbb
jle
fldenv
cmpsl
bound
push
nop
cltd
pop
mov
insl
xchg
loope
dec
jbe
jns
mov
jne
sub
or
pop
mov
mov
xchg
cmp
xchg
jnp
mov
es
insb
sbb
iret
xlat
lea
nop
mov
in
fisubrs
xchg
cmp
jp
fidivl
mov
stos
ja
push
sub
cmp
stos
xor
into
into
mov
pop
jle
add
xlat
sub
add
jmp
inc
jp
push
dec
incb
dec
imul
push
sahf
aad
sub
call
pusha
in
mov
adc
aam
push
xor
std
outsl
cmp
js
jecxz
mov
or
adcl
out
insb
ds
shlb
outsl
iret
mov
and
pop
cld
push
movsb
cmpsl
pop
lret
cmp
popf
ds
lds
out
xor
lea
movsl
adc
scas
imul
or
adc
movsb
cmpsl
insl
sub
xlat
pop
cmp
sub
add
leave
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
shl
mov
int
adc
test
cwtl
loop
ret
adc
pop
push
bound
mov
push
add
adc
in
pop
cs
mov
sarb
mov
xor
inc
jae
adc
mov
aam
push
xchg
jae
lods
int3
jno
mov
andl
mov
pop
pop
push
inc
stc
test
rorb
aad
jo
orb
jns
mov
out
icebp
mov
pop
push
push
mov
sbb
lcall
fdivl
cmpps
xlat
inc
pushf
insl
enter
scas
push
mov
jle
dec
jmp
cltd
test
loope
lods
add
js
mov
out
out
jno
popf
add
sub
lcall
ret
pop
out
adc
xor
cli
and
sbb
sbb
leave
imul
inc
mov
cld
push
or
roll
aad
imul
jo
out
pop
js
add
push
leave
cmpsl
imul
xchg
mov
xchg
pop
adc
stos
sbb
inc
lahf
lds
mov
and
cwtl
jo
adc
outsb
jmp
pop
adc
cmp
stos
mov
movsl
out
sbb
push
ret
sub
mov
loopne
out
xor
insl
sub
or
push
rclb
movsl
and
fs
out
sahf
jp
jp
cmp
pop
inc
mov
cli
popa
pusha
lods
sarb
enter
in
aad
inc
ror
xchg
enter
js
xchg
sbb
in
sbb
cmc
push
dec
test
sub
enter
rcl
push
or
loope
mov
and
add
cmp
sbb
movsb
dec
fst
xchg
adc
mov
lods
cltd
shlb
test
adc
repz
jae
push
addr16
adc
stos
add
cmp
inc
dec
adc
mov
xor
jo
mov
xchg
ja
imul
jnp
pop
jp
sbb
xor
cmp
lahf
mov
test
rclb
dec
aas
adc
fchs
and
add
sub
inc
mov
fwait
fistpll
cmp
fidivl
int
sub
jb
adc
scas
test
outsl
das
mov
mov
in
inc
jno
dec
fistpl
fsubrs
cmp
inc
mov
jne
or
pop
test
shrb
pop
jno
jns
andl
mov
push
fisttpll
in
dec
cmp
ja
lret
and
cld
adc
imul
pop
in
sub
arpl
jge
sti
cli
add
ss
mov
mov
cltd
mov
dec
in
repz
adc
mov
inc
and
jle
xchg
xchg
imul
insb
mov
xor
loope
sbb
in
xor
call
mov
insb
inc
add
lods
inc
outsl
xchg
testb
mov
dec
lods
leave
sbb
push
pop
icebp
hlt
xchg
es
push
iret
pop
stos
inc
out
jmp
ret
mov
and
cmpsb
repnz
mov
into
repnz
xchg
nop
xchg
int3
or
pushf
jae
mov
rclb
xchg
xlat
xor
mov
imul
or
cmp
jnp
sbb
or
dec
loopne
push
in
loope
jmp
fmuls
sbb
in
or
adc
int
adc
jg
scas
loopne
inc
rcl
pop
call
dec
pminsw
cmpsb
cmpl
add
outsb
js
xor
jo
push
insl
loopne
xchg
add
popa
mov
add
sub
add
push
xchg
xchg
call
jae
pop
lcall
push
lods
or
ja
xor
sbb
aad
jge
inc
mov
jo
push
inc
dec
fmul
push
imul
jb
xchg
addr16
repnz
pop
dec
data16
cmp
jb
lret
pusha
inc
mov
sbb
fildll
inc
add
insl
cld
sub
out
fcmovne
xor
inc
push
test
insb
adc
out
ljmp
or
pop
aaa
pop
inc
mov
pop
pop
sti
inc
loop
or
hlt
and
jns
std
lea
pop
fiadds
sti
loopne
mov
adc
mov
fs
pop
aam
mov
mov
rcrl
scas
pop
jno
fdivp
mov
xlat
jns
jp
push
sbb
sbb
fildl
imul
sub
mov
pop
push
rcr
sbbb
mov
pop
push
hlt
aad
lret
mov
or
ja
loop
add
and
push
in
mov
fldl
xchg
pop
xor
dec
push
icebp
push
dec
adc
popa
js
fsub
mov
sbb
mov
out
jp
dec
pop
sub
xor
subb
dec
cli
ljmp
inc
and
jnp
lock
shlb
dec
aam
shld
outsl
ficomps
sub
pop
sysenter
hlt
faddl
xchg
or
or
sbbl
lret
xchg
or
sti
dec
jnp
jmp
xchg
clc
in
cwtl
int
add
cmpsb
jae
adc
mov
cmpsl
outsl
lahf
movsb
pop
jo
loopne
fstps
lods
mov
test
or
push
mov
and
dec
and
dec
leave
xor
lret
adc
xor
out
clc
in
je
cmc
jp
ficompl
sub
in
cmpsl
pop
sbb
adc
push
lods
sbb
movsb
mov
icebp
std
fadd
test
fbstp
push
addl
mov
in
lods
dec
fnstenv
xlat
daa
lret
jnp
adc
sbb
aas
rolb
xchg
adc
std
jmp
mov
and
or
call
mov
scas
imul
dec
sbb
lods
xchg
dec
data16
sti
sub
leave
mov
ss
int3
cmp
enter
pop
jne
mov
jge
les
insb
in
cwtl
andb
mov
and
fstl
nop
fucomip
stos
mov
scas
push
mov
push
fbld
add
sbb
or
leave
xchg
ds
sub
add
fcoms
xor
xchg
xor
xchg
dec
push
cs
push
push
mov
jns
mov
adc
daa
or
cmpl
and
push
dec
mov
outsb
sarb
sahf
nop
dec
mov
aaa
lock
pop
fistps
jp
fimull
xor
xor
jns
lahf
or
fbstp
cli
xchg
inc
arpl
pop
jp
mov
dec
in
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
jae
outsb
insb
xor
adc
int
adc
pop
movsl
shrl
cltd
adc
inc
call
out
add
fstpl
movsb
rorl
pop
and
and
sahf
cmp
lock
adc
xlat
jno
imul
inc
push
mov
pop
mov
in
leave
and
lods
fidivl
je
lock
lcall
popa
xorb
test
jne
sbb
mov
test
sbb
pop
sbb
daa
xchg
shlb
stc
popf
add
push
divb
sti
out
mov
mov
sub
arpl
insl
repz
dec
jae
cmp
cmp
orl
nop
or
dec
bound
in
push
sbb
jns
loope
add
jle
lret
mov
or
pop
je
pop
into
fbstp
push
add
inc
mov
cmp
and
and
ret
cmc
dec
jmp
lods
dec
out
and
sub
jle
push
and
sarl
cvtpd2pi
repnz
js
les
les
mov
sbb
sbbl
fcompl
clc
scas
push
mov
movsb
fwait
test
fs
and
push
in
adc
sub
movsl
insl
cmp
xchg
xor
iret
fsubl
in
jae
xor
inc
sbb
pop
gs
pop
fstpl
mov
adc
iret
jno
add
xchg
inc
nop
filds
fs
mov
cmp
pop
push
popf
mov
xchg
bound
lock
mov
inc
sub
cmc
mov
aas
sar
dec
popl
dec
jle
push
sub
enter
and
repz
enter
jmp
loopne
std
repz
pminsw
jle
mov
cmp
sbb
jo
sahf
das
xchg
sbb
mov
insb
test
jns
pop
pop
dec
jecxz
cmp
pop
mov
outsb
es
cs
xchg
out
int3
lods
and
xor
cmpsl
cmp
out
pop
jmp
sbb
and
incl
lret
aam
inc
and
insl
sbb
cmc
imul
loop
inc
mov
out
dec
and
mov
xchg
popa
cmpsl
sbb
xchg
push
dec
call
cmp
sub
push
lods
ja
in
inc
data16
out
sbb
outsl
repz
bound
dec
adc
or
cmp
gs
pop
lods
je
movsl
pusha
rcr
dec
loop
les
js
fimuls
arpl
pop
inc
scas
rorb
xchg
mov
std
mulb
mov
hlt
xchg
inc
or
push
push
jne
and
lds
rorb
pop
std
jge
xchg
out
push
lcall
movsb
fucom
jbe
inc
xor
jno
mov
inc
int
mov
jns
mov
or
mov
mov
shll
mov
adc
adcl
push
xor
sub
shrl
lahf
gs
sbb
adc
cmp
mov
fs
lahf
test
mov
mov
xor
movsl
ret
add
repnz
mov
insb
mov
nop
push
add
lcall
sub
out
dec
adc
loop
imul
mov
out
popl
inc
inc
sbb
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
aam
jl
ljmp
adc
pusha
xchg
pop
add
cmp
notb
cs
aam
dec
add
test
and
pop
cmp
or
xchg
gs
or
rol
ret
in
insb
push
jmp
roll
jle
pop
mov
xchg
jle
lds
imul
push
adc
dec
ret
in
pushl
jle
nop
imul
mov
getsec
addl
xor
and
cmp
subb
scas
fisubs
hlt
ret
and
add
iret
jnp
adc
cmp
fcompl
out
ds
sbb
jae
fistpll
mov
out
mov
aad
leave
out
mov
ror
inc
jb
pusha
pop
dec
cltd
jg
dec
lods
sbb
and
jg
inc
fcompl
scas
out
xor
xchg
fcoms
pop
stos
add
jle
fmull
sbb
aam
fwait
scas
ja
lahf
cmp
mov
in
jnp
lea
push
scas
shll
mov
push
stos
sub
outsb
les
imul
cs
jae
cli
ret
push
int
loopne
in
mov
pop
and
dec
outsl
int
pop
subl
xchg
insb
sub
sahf
add
cmp
addr16
insl
out
mov
in
sti
imul
push
fstpt
cwtl
push
shrb
push
jo
mov
jno
fildl
fadds
push
mov
ret
push
rcrb
mov
mov
cmpsl
push
sub
mov
inc
dec
jmp
in
fwait
into
lock
loopne
mov
sbb
push
je
jo
popa
imul
test
sub
mov
js
lret
push
and
test
sbb
inc
pop
sbbw
call
lar
addr16
or
std
sub
or
pop
pusha
cmp
addr16
leave
fsubrs
test
and
and
sub
mov
push
pop
dec
outsb
sahf
dec
mov
dec
cltd
mov
xchg
data16
push
ljmp
push
jge
sub
clc
adc
pushf
fidivrs
cmp
test
call
fbld
sub
stc
pop
bound
mov
mov
movsb
dec
arpl
dec
out
cmp
lock
std
out
push
cmpsb
add
arpl
das
mov
movsb
leave
pop
lcall
or
jmp
jno
push
and
pop
cltd
jb
xchg
aad
sub
xchg
scas
test
pop
xchg
fstpl
sbb
fcmovne
jno
movsb
mov
scas
clc
mov
loope
cmc
add
aam
sbb
test
add
sub
push
aam
inc
cmpsl
inc
sbb
cld
mov
jbe
je
ja
xor
mov
repnz
xchg
and
daa
sahf
pop
add
ss
in
out
das
dec
pop
xchg
sar
popa
inc
pop
jle
mov
lods
outsb
fdivrp
sbb
xchg
cmp
add
stc
mov
test
ffreep
mov
push
inc
push
call
push
jg
mov
subl
std
call
add
negb
das
lret
pmulhw
cmpsb
outsl
sti
jno,pt
xor
add
pop
inc
mov
cmp
ret
imul
xchg
cmp
xor
ds
sbb
es
xor
sub
jne
movsb
and
inc
cwtl
mulb
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
pop
cmpb
adc
adc
popa
loopne
xchg
mov
xchg
mov
cltd
pop
add
jge
movsb
inc
inc
push
push
das
fcompl
mov
outsb
inc
sbb
xor
mov
lods
lcall
rcl
lret
xchg
dec
adc
orl
repnz
enter
xlat
push
enter
mov
xchg
xchg
orl
decb
dec
out
or
jge
sahf
mov
movsl
sbb
sub
cmc
cmp
pop
mov
xchg
cs
in
gs
sub
or
arpl
and
mov
outsb
loopne
out
push
inc
jp
or
mov
stc
mov
rcrb
inc
out
fcom
ret
sub
or
cld
dec
add
pop
pop
out
fstps
test
stos
cmp
imul
std
ret
inc
fimuls
cmp
sub
hlt
pop
loopne
test
mov
push
stos
fwait
repnz
jg
scas
mov
dec
xor
in
sarl
mov
jnp
pop
mov
push
ljmp
push
movsl
aam
in
cmp
inc
rcll
add
add
in
cmp
mov
jmp
mov
xchg
pop
xor
xchg
sahf
push
nop
aad
push
icebp
mov
aad
fldl
aam
mov
mov
or
add
jo
xlat
insb
push
xor
int
jmp
out
ljmp
or
pop
dec
icebp
mov
daa
jle
xchg
fcompl
daa
lret
lds
mov
shlb
mov
int
lret
mov
mov
in
adc
dec
loopne
cmp
rcrl
cmp
popa
adc
std
dec
es
dec
pushl
std
ja
test
mov
cmp
sub
or
push
daa
dec
daa
popf
sti
adc
stos
inc
cltd
mov
stos
adc
andl
and
sbbb
lods
cmp
addr16
push
js
icebp
fucomi
push
aad
shrb
test
popa
out
mov
mov
imul
mov
xchg
sub
leave
movsl
pop
jo
lds
mov
mov
jle
or
lods
mov
test
fstpt
or
stos
jo
inc
adc
ret
lret
mov
fildll
repz
mov
adc
ja
in
push
adc
aas
mov
lods
test
cmp
pop
shll
sub
int
xchg
fcompl
xchg
loopne
ja
call
jnp
jnp
jo
pop
mov
stos
imul
xchg
sbb
push
mov
or
loop
mov
xor
es
out
jmp
xor
jae
dec
clc
nop
xlat
lea
pop
sahf
imul
fwait
mov
popl
jne
or
sub
inc
shrb
xlat
pushl
jnp
sub
rcrb
push
call
dec
or
mov
cmp
mov
mov
mov
pop
dec
cmc
dec
mov
sbb
ficomps
icebp
shrb
lret
mov
cmpsl
mov
leave
jmp
rcr
arpl
jbe
std
or
lret
or
mov
adc
in
aas
lea
mov
incb
je
mov
jne
movl
pop
mov
lret
in
sub
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
test
adc
int
adc
mov
sbb
push
mov
adc
sbb
mov
shll
add
stos
fldl
xor
jo
test
mov
rolb
inc
out
jo
mov
scas
pop
adc
and
fs
lcall
push
push
mov
fildll
loop
das
xor
enter
xchg
mov
stos
lret
mov
insb
pop
mov
in
loope
or
mov
out
insb
add
imul
jb
xchg
js
adc
or
push
pop
scas
sub
lds
mov
insb
inc
inc
or
mov
out
adc
mov
loop
lcall
fwait
cltd
mov
out
jne
das
clc
adc
jp
aas
rcrb
iret
adc
pop
popf
push
add
push
loopne
test
stos
pop
ljmp
repz
cmp
dec
cld
jle
add
test
js
push
pop
push
mov
repnz
movsl
xlat
inc
sub
xchg
xchg
mov
popa
mov
cmp
xchg
call
inc
mov
pop
dec
mov
adc
push
adc
mov
cmp
out
lods
or
cmp
popa
cli
std
xchg
pusha
fcoms
outsl
movsb
mov
or
fildll
clc
sarl
push
clc
adc
test
cmpsl
ss
scas
ficoml
xor
out
out
shr
inc
adc
aaa
inc
inc
ds
and
cmp
cwtl
dec
xlat
jp
sbbb
in
fsincos
adc
sbb
stos
jnp
pop
shll
dec
stc
pop
incl
sub
fwait
cmp
ljmp
or
sub
pushf
hlt
test
cltd
in
xchg
pop
xchg
pop
out
out
push
jge
out
in
daa
push
jp
mov
aad
xchg
ret
jl
faddl
push
mov
adc
fildll
loop
push
push
pop
adc
pop
lods
mov
repnz
mov
adcl
rorb
inc
cmp
jge
dec
adc
iret
sti
leave
and
mov
push
mov
pop
pop
xor
push
cmpsl
pop
xor
mov
and
xchg
in
mov
call
aad
mov
pop
test
jae
xchg
ret
push
jno
mov
and
jmp
push
push
ret
lret
fwait
adc
or
dec
out
aam
int
cmp
add
xor
push
mov
jmp
shll
sub
stos
ljmp
mov
fs
lods
push
nop
ss
faddp
sub
pop
and
aas
stos
jns
sbb
into
sub
mov
daa
xchg
scas
fldcw
repz
xchg
cmp
push
push
test
jmp
mov
repnz
imul
jae
call
fchs
test
shll
lds
dec
cmp
dec
dec
in
fwait
and
test
aaa
sbb
mov
insl
fwait
icebp
inc
xchg
push
inc
bound
jmp
cs
adcl
cmp
jo
ljmp
enter
mov
cmp
mov
insl
xor
rcrb
std
jmp
add
aaa
cwtl
push
jbe
sarl
or
loop
inc
int3
insb
sbb
dec
push
xor
aas
popf
push
push
mov
mov
gs
pusha
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
repz
adc
int
adc
push
sbb
fisttps
test
out
shlb
movsb
idivb
repnz
int
xchg
inc
cmp
jbe
insl
stc
mov
or
mov
sub
loope
aad
xor
push
loopne
int
sbb
icebp
jae
mov
scas
cmp
add
and
loope
xchg
push
lahf
and
test
lret
mov
shlb
out
cmp
or
pop
mov
sub
jno
hlt
aad
mov
add
cmp
mov
sbbb
inc
das
icebp
mov
call
fldcw
xlat
add
mov
inc
inc
jp
sub
pextrw
bound
int3
adc
push
in
std
fsubl
mov
ljmpw
dec
and
jns
push
je
clc
pop
jg
jo
addr16
sbb
idivl
mov
aas
sub
cmp
cmp
popf
in
mov
pop
arpl
lods
xchg
shl
jns
mov
daa
je
mov
popa
aad
shll
out
add
arpl
mov
push
sbb
inc
and
out
iret
cmpsl
in
fstp
mov
sbb
jle
mov
cmpsl
cli
in
repz
push
cmp
and
popf
adc
xchg
fiaddl
pop
aaa
ffree
testb
push
mov
ds
sub
xchg
xchg
fists
dec
adc
mov
jecxz
es
rclb
fildll
mov
cmp
push
mov
cmpsb
or
lods
addb
pop
loopne
mov
test
mov
xchg
jmp
lea
clc
in
sub
cwtl
mov
push
jmp
cmp
mov
pop
cs
inc
jnp
aas
cmp
adc
fiaddl
pop
push
jmp
pop
lock
out
and
stc
add
pop
push
jge
sbb
inc
inc
test
shll
sbb
out
sti
shr
mov
stos
inc
sbb
int
popa
mov
push
xor
icebp
icebp
sarl
pop
dec
sbb
or
adc
mov
cmp
sub
jbe
cmpl
or
hlt
adc
stc
ljmp
pushl
mov
xchg
stc
and
lahf
scas
xlat
jo
jne
pop
or
lea
sbb
movsb
push
dec
xchg
xchg
mov
imul
arpl
decl
jecxz
cmpw
outsb
ljmp
cld
sbb
lods
je
outsl
shrl
subb
adcl
push
aaa
mov
add
sub
mov
arpl
dec
sub
push
scas
cli
sbb
cld
testb
dec
xchg
iret
sbb
fnsave
push
push
jl
popa
ds
pop
iret
sub
stos
mov
fsts
lahf
cmp
divb
mov
popf
cmp
cmc
rcrl
rcll
sbb
jg
mov
mov
xor
mov
or
lea
enter
cmpsl
xchg
movsl
cld
sub
jns
cli
out
mov
je
daa
stc
out
xchg
cmp
ja
xchg
in
sbb
clc
fistpl
out
cmp
sahf
mov
imul
push
xchg
push
lods
int3
out
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
cmp
adc
int
adc
fcmovb
aad
dec
popf
sub
incl
les
outsb
fcmovnu
cltd
imul
xchg
shlb
push
or
or
sub
imul
popa
loop
mov
movsl
xor
sahf
and
pop
call
repz
lret
cmp
jne
adc
fwait
loop
jg
pushf
lods
dec
jmp
imul
cmpsb
imul
mov
xchg
push
push
jae
mov
ds
std
jb
push
mov
fisubrs
addr16
in
in
fnsave
lahf
pop
mov
cld
aas
sti
lods
fildll
stos
clc
aas
lret
sub
add
test
pusha
pop
je
lods
xchg
add
dec
adc
or
xorl
push
scas
adc
fldl
mov
rorl
bsf
fidivs
scas
add
js
stos
jnp
enter
push
mov
int3
bnd
aas
mov
push
xchg
leave
mov
dec
push
dec
lods
xchg
push
sahf
sti
jbe
fnsave
pop
outsb
mov
stos
adcl
xor
jno
pop
xchg
lret
mov
sub
cld
cmp
jg
movsl
adc
pushf
call
mov
les
sahf
cltd
arpl
gs
xchg
sub
mov
shl
xor
notl
rcr
std
or
mov
dec
fimuls
stos
movsb
xor
mov
outsb
lock
mov
stos
ljmp
out
and
pushl
and
jle
sub
out
scas
jns
fs
pop
jno
mov
ds
lea
ljmp
push
outsb
sbbl
pop
insb
lods
btc
xchg
out
jno
outsb
lretw
cmp
out
and
jb
mov
scas
mov
push
ds
fidivrl
popf
jbe
jl
dec
mov
add
call
sub
aam
and
add
mov
mov
add
test
adc
jno
xchg
scas
negb
outsb
push
ret
clc
sbb
ficomps
push
pop
movsl
mov
adc
shlb
xchg
push
xor
das
in
mov
test
aad
in
push
mul
or
pop
shlb
mov
xchg
adc
test
cmp
cmp
cltd
popf
push
cwtl
sbb
arpl
mov
dec
pop
jne
push
jp
inc
pop
push
push
sbb
mov
xor
aaa
sbb
mov
mov
push
jnp
inc
popa
cmp
mov
xchg
pop
dec
call
xchg
push
sbb
aaa
in
or
lods
repnz
xchg
movsb
stc
inc
dec
inc
add
cmp
jl
out
das
push
add
sti
push
out
xchg
sti
js
rcll
iret
and
movsl
and
adc
or
sub
pop
in
shr
idivb
inc
sub
mov
or
cmp
fmull
dec
mov
imul
push
loopne
pop
loopne
mov
cld
lds
jae
lahf
jae
or
xchg
lahf
test
and
movaps
aaa
jae
or
fwait
int3
dec
pop
jmp
and
and
jbe
inc
xchg
ljmp
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
outsl
push
mov
int
adc
mov
sub
nop
dec
bound
mov
shlb
cmp
out
sub
outsl
xor
test
iret
lahf
xor
push
cltd
inc
movsl
cmpsl
adc
icebp
dec
mov
pop
fs
inc
es
lret
push
adc
xchg
cmp
mov
sbb
push
vpmuludq
or
jno
xchg
cmc
ret
push
xchg
rcl
lods
in
ljmp
inc
pop
inc
fs
xor
flds
cs
sbb
cmpsl
jl
in
fdivs
jle
mov
adcl
in
lret
cwtl
inc
pop
lahf
data16
icebp
jns
lods
push
jmp
pop
bound
lods
in
dec
dec
repz
data16
cmpsl
lods
mov
fnsave
sub
outsb
jbe
inc
pop
inc
mov
xchg
jne
pop
fimull
call
stos
hlt
aam
scas
push
mov
imulb
outsb
pop
jl
ret
rcll
jo
scas
pusha
outsl
call
sti
mov
gs
pop
icebp
xor
xchg
push
roll
adc
popa
inc
add
mov
mov
dec
mov
ficoms
repz
pop
es
or
ds
int
push
loopne
xlat
mov
inc
js
ja
and
or
fisubl
sarb
xor
int
loope
andl
pushf
test
push
adc
mov
push
dec
cmp
mov
outsb
jecxz
xorb
mov
push
jo
divb
sbb
ficomps
fwait
in
mov
and
sub
test
out
mov
push
aam
inc
push
push
lea
fsubrl
lds
lahf
in
int3
into
sti
popf
std
hlt
sbb
mov
insl
mov
mov
daa
ja
daa
cld
pusha
int3
xor
cmp
movsl
sbb
mov
add
jp
mov
lods
mov
or
test
nop
push
testb
jg
scas
or
push
jb
test
gs
test
out
lret
pop
test
fisttpll
lahf
cmp
pop
subl
jg
add
loopne
stc
mov
popf
sbb
ds
imul
pop
sbb
lock
and
add
test
movsl
xor
sbbl
enter
movsl
or
jmp
sbb
dec
jbe
mov
sti
cs
cmpsb
fs
push
push
out
add
add
push
mov
mov
pop
sub
leave
enter
stos
mov
shr
inc
pop
loopne
sub
mov
sub
push
mov
test
pop
sbb
adc
enter
pushl
sahf
out
adc
jmp
or
pop
jb
subl
mov
imul
lock
push
push
insl
fsubrs
adc
es
rcrl
movsl
leave
mov
icebp
dec
push
xor
jno
sub
mov
adc
sub
aad
jmp
jb
inc
lahf
xor
gs
cmpsb
popa
push
outsb
jns
or
or
leave
test
xchg
jb
les
or
xor
popf
out
push
rcll
test
push
push
fcompl
lcall
hlt
push
mov
mov
inc
addr16
jl
rorl
movsl
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
jecxz
mov
int
adc
mov
fwait
loopne
dec
jmp
xchg
test
outsb
jae
imul
rclb
sub
arpl
stc
adc
cmpsl
mov
cmc
push
clc
dec
push
rclb
enter
jg
jmp
push
mov
and
inc
or
lcall
dec
sbb
lods
cmpsl
sahf
and
lea
aad
test
sub
mov
out
sbb
jmp
mov
push
outsl
sbb
push
cmp
mov
imull
dec
iret
mov
pop
out
mov
inc
mov
adc
and
xor
push
scas
add
mov
imul
inc
rol
mov
xor
pop
setnp
shr
inc
je
sub
sarl
repnz
js
icebp
call
add
sub
pop
sub
lret
out
pop
mov
subb
or
or
cmp
jl
negb
pop
mov
add
stos
lret
cltd
jecxz,pt
xor
mov
dec
test
insl
call
mov
push
in
dec
add
sahf
lea
adc
jl
jmp
ljmp
vphadduwd
mov
adc
pop
sbb
fs
cmp
mov
xor
adcb
in
aam
aam
mov
lods
out
cmp
push
xchg
rolb
ret
insb
mull
js
xor
jbe
push
sbb
into
mov
inc
iret
lcall
stc
cwtl
mov
adc
mov
scas
fistpll
pop
jecxz
xlat
lahf
shlb
enter
dec
aaa
aad
sar
pop
dec
dec
mov
imul
pop
cwtl
fistps
gs
xchg
xchg
push
cmp
ret
repz
movsl
inc
or
rorl
cld
loop
or
push
cld
nop
mov
xchg
mov
xor
in
cmpsb
mov
mov
rolb
stos
fs
dec
sub
sbb
loope
pop
mov
xor
incl
xchg
mov
mov
ret
or
inc
std
xchg
or
xchg
cmp
xchg
xor
push
mov
push
mov
les
movsl
pop
insb
and
xchg
cmpsl
dec
mov
clc
iret
jmp
std
or
jbe
mov
test
ljmp
adc
dec
test
insl
adc
call
or
test
or
lds
cmp
iret
cmpsb
mov
mov
and
rorb
imul
insl
and
pop
xor
ret
es
clc
cmp
push
push
test
sbb
xor
jbe
or
cmp
adc
push
ds
stos
es
inc
pop
jb
cmp
shll
xor
addr16
ret
test
jg
sbb
imul
sbb
imul
dec
fstl
jae
mov
xchg
jecxz
inc
ss
sub
jae
mov
lret
fidivs
fwait
leave
andb
mov
shrb
fiaddl
inc
lret
adc
sub
fstl
movsl
cmp
or
aas
xchg
mov
dec
movq
jbe
out
das
inc
sbb
mov
in
out
in
aas
push
xchg
test
inc
sti
jmp
stc
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
dec
test
and
lret
xchg
cmp
pop
test
dec
and
mov
sbb
inc
lock
sbb
mov
inc
inc
out
or
add
adc
mov
loope
jecxz
and
lret
out
and
mov
lret
or
sub
dec
in
sbb
dec
mov
ret
jl
mov
repz
sbb
cltd
jmp
daa
out
jp
sub
mov
and
shlb
ljmp
cmp
push
jne
sbb
cmp
inc
loope
repnz
jne
ljmp
sbbl
xor
push
mov
in
pop
mov
xchg
xchg
out
and
insb
jle
negb
mov
push
aas
popa
or
mov
and
ret
pop
and
push
sbb
jnp
fbstp
call
mov
xchg
xor
sti
cmpsl
mov
lret
mov
test
mov
adc
scas
fadd
repnz
js
icebp
xchg
inc
fsubrp
inc
daa
and
mov
push
in
mov
mov
mov
outsl
enter
mov
int3
push
cmp
sbb
push
pop
sub
sub
mov
jle
lahf
add
push
adc
cwtl
jl
stos
adc
xchg
mov
fisttpll
mov
sbb
jle
icebp
or
push
jb
ret
fdivr
insl
rclb
stc
mov
inc
ss
std
decb
mov
stc
shrb
test
jbe
or
mov
test
push
pop
fidivrl
sbb
pop
imul
xor
loope
mov
repnz
mov
mov
idiv
cmpsb
mov
mov
shl
and
adc
add
decb
mov
sarl
jb
test
and
add
jne
aaa
imul
cwtl
push
xor
pop
shrl
popa
ljmp
cmp
mov
fsubl
mov
and
cmp
les
movsl
pop
stc
adc
inc
pop
cmc
jbe
jmp
fildll
pop
sub
das
cltd
aam
nop
or
test
ljmp
js
sti
fsubrs
jecxz
lcall
xorl
inc
mov
pop
sub
repz
outsl
pop
mov
mov
jae
call
inc
inc
push
and
int
ja
dec
xchg
pop
pop
push
test
ret
fucomp
jl
pop
mov
insb
addb
and
mov
ret
cmp
dec
mov
or
clc
ljmp
lahf
pop
shlb
sub
out
enter
cmc
call
inc
hlt
adc
sbb
movsb
int3
shrl
cltd
clc
aad
jbe
dec
xchg
testl
js
push
sub
repnz
sbb
mov
in
scas
and
mov
inc
int3
shlb
test
mov
push
aas
daa
mov
bound
mov
insl
aad
orb
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
sarb
adc
adc
pop
loop
adc
push
fildll
jp
pmulhuw
inc
lret
fsubrs
pop
pop
mov
inc
push
push
or
add
push
add
je
sarb
enter
stc
push
xorb
test
pop
lods
xchg
in
test
js
jo
lds
xlat
and
xchg
and
int
scas
jp
cld
push
mov
std
fwait
jecxz
popa
test
cmpsl
insl
pop
pop
imul
notl
push
xor
mov
pop
jns
ljmp
in
dec
das
and
loopne
shl
rcrb
push
pushf
test
jno
mov
xchg
cs
mov
mov
and
push
clc
je
jge
add
ljmp
fistpll
scas
inc
dec
mov
mov
jmp
dec
mov
inc
es
clc
fsubp
mov
dec
jp
jne
dec
push
mov
loop
leave
push
icebp
mov
insb
pop
gs
push
js
xchg
or
push
stos
mov
add
int3
into
repz
insb
fsubr
pop
sarl
outsb
pusha
addl
xor
fxch
ja
cmp
cld
and
dec
pushf
daa
cmpb
add
xchg
loop
cmp
cmp
roll
jecxz
in
mov
mov
mov
loopne
push
xchg
aas
mov
jmp
cs
bound
pusha
adc
pop
add
cld
das
scas
and
jg
push
add
sbb
jns
shll
test
cmpsb
jb
out
aaa
pop
scas
repnz
push
sar
and
lret
fildl
ret
cmp
aas
sbb
jle
mov
daa
clc
and
or
cmp
lret
insl
jb
mov
sub
pop
jge
jbe
push
and
mov
sub
or
jne
jae
scas
std
iret
cli
push
sub
movsb
pop
test
pop
jno
fnstcw
aas
rcl
push
mov
rcr
xchg
insl
pop
mull
outsb
xlat
jbe
dec
mov
mov
outsb
inc
pop
enter
or
imull
inc
in
movsb
or
insl
pop
mov
xor
jo
imul
mov
outsl
dec
dec
jns
out
lcall
mov
cmpb
jmp
dec
xchg
inc
out
out
xor
lods
pop
insl
mov
xor
lea
inc
push
fld
sbb
movsb
xchg
dec
fildll
or
mov
and
push
pop
or
push
test
sbb
xchg
sub
mov
push
test
lock
ss
mov
aam
and
icebp
fdivl
adc
mov
add
ret
xor
sbb
cmp
add
mov
sub
into
inc
or
push
mov
mov
int3
xchg
dec
push
or
jg
pushf
loop
imul
xchg
negl
xchg
sub
test
jbe
adc
xor
xchg
andl
out
xchg
das
es
ficompl
add
ret
ret
dec
addr16
lock
adc
mov
roll
shrl
mov
mov
cmp
fmull
push
mov
test
dec
xor
cmp
mov
inc
sbb
cmpsb
dec
inc
lahf
dec
adc
jbe
xchg
pop
jmp
add
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
push
enter
test
adc
adc
adc
or
repz
xchg
in
xchg
xchg
outsb
sub
push
push
hlt
mov
xlat
mov
mov
or
or
lods
fs
cmp
imul
lfs
int
dec
or
outsb
inc
cmp
xor
mov
inc
xchg
mov
lods
cli
and
or
fisttpll
inc
fwait
and
jmp
sub
addr16
cmpsl
push
mov
jl
xchg
hlt
rcrl
sbbl
cld
pop
subb
scas
push
div
into
sahf
lea
sub
aas
gs
pop
sub
push
sbb
add
lods
lret
adc
lcall
shll
sbb
add
jmp
pop
pop
mov
jle,pn
sti
cltd
mov
fistps
cmp
fwait
lock
ret
adc
test
inc
jo
js
jg
sbb
and
lcall
jno
pusha
data16
faddl
jne
in
and
pop
mov
xchg
andl
push
fcmovb
dec
dec
dec
jge
std
aad
xchg
xchg
cmc
inc
rorb
push
std
dec
xchg
popf
xor
adc
push
push
clc
andb
jmp
add
xor
and
add
in
sbb
lods
xchg
xor
add
or
xor
pop
movsl
fildl
fwait
imul
mov
sub
rorl
mov
mov
adc
loopne
fiadds
in
and
aam
sbb
sbb
cltd
mov
jecxz
cmpsb
dec
push
dec
fcom
mov
ret
aam
movsb
hlt
dec
lods
cmp
mov
push
dec
xor
pop
lock
push
daa
lret
rcr
test
stos
rorl
push
pop
mov
popa
imul
mov
pop
sub
sbb
xor
les
sub
jecxz
stos
mov
mov
mov
mov
dec
xor
sbb
leave
push
stos
or
jo
shll
mov
jl
aas
movsb
or
cmp
jbe
call
mov
sub
push
push
xchg
jmp
mov
shrl
jp
imul
cmp
repz
sarl
sbb
int
sub
sbb
inc
pop
jae
insb
dec
stc
in
cmc
mov
push
dec
jle
sbb
xchg
xor
fmuls
addr16
movsb
inc
push
mov
inc
mov
inc
ds
xchg
fcoml
cmp
cmp
mov
popa
je
mov
fdivs
inc
mov
pop
mov
pusha
inc
lea
mov
xchg
lret
das
push
popa
adc
add
cmp
ret
mov
shl
pop
loope
push
cmp
aam
mov
and
or
imul
mov
sub
push
icebp
cmp
ja
add
pop
sub
sub
jle
rol
add
add
mov
push
movsl
sbbb
inc
xor
aam
daa
fisttpll
jbe
jnp
stos
mov
sub
sub
nop
xchg
in
das
pop
cmp
fnsave
lret
or
enter
pop
andb
insl
cwtl
sahf
and
push
push
insl
in
jns
lods
test
stc
xchg
das
mov
mov
pop
dec
ja
inc
cltd
hlt
mov
push
sti
push
das
push
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
lcall
int
adc
mov
mov
xchg
xchg
mulb
lret
arpl
std
loop
adc
stc
cmpsb
lea
imul
push
das
xor
nop
int3
ljmp
push
popf
loop
sub
ds
jp
test
in
xchg
movsb
cmp
hlt
rolb
push
test
jbe
mov
adc
xor
sub
movsb
push
cltd
mov
out
popf
mov
fmul
jecxz
xor
jl
jae
ja
dec
mov
aas
cwtl
and
cmp
test
sbb
pop
ret
lret
and
sbb
cmpsl
adc
mov
fiaddl
or
xchg
jmp
xchg
inc
sub
in
fstps
insl
repz
inc
xchg
xor
sub
lea
sub
aas
pop
sub
add
fisttpll
jo
mov
add
ljmp
ret
mov
push
fdivs
add
js
scas
fimuls
mull
ljmp
aas
push
and
jge
mov
xchg
movsl
test
loop
cmc
jmp
stos
negb
dec
xchg
in
stos
or
dec
inc
outsl
aaa
xchg
mov
mov
or
xchg
out
adc
pop
adc
dec
xchg
je
je
sti
xor
aas
in
loop
shlb
push
jl
add
std
bound
arpl
fiadds
jle
jb
push
addl
cli
sti
rclb
xchg
or
lahf
jle
sub
loopne
out
cmpsl
lods
sbb
es
dec
inc
jg
mov
iret
sbb
dec
pop
xchg
pop
xchg
cmc
rorb
cmp
and
xor
sub
ficoms
cmp
fadds
or
inc
pop
mov
xchg
push
xor
push
enter
pop
fists
adc
or
testb
jns
xchg
sbb
aad
sar
iret
xor
sbb
popf
scas
mov
xchg
test
rcrl
cmp
gs
out
out
mov
scas
lds
in
sti
shrb
adc
pop
lds
jecxz
test
js
add
psrad
sti
sbb
cmp
adc
or
out
rol
cmc
xor
sbb
jmp
mov
mov
ja
fistpl
mov
sub
jle
xchg
jnp
mov
out
cli
hlt
adc
sub
jmp
clc
int
pusha
loope
jnp
sub
xor
inc
jp
xchg
xchg
or
cmp
push
jp
test
xchg
xchg
and
ljmp
jge
in
push
cmp
add
push
into
fldt
and
mov
je
sahf
and
jae
imul
jo
cmp
sub
pop
gs
cmpsl
inc
sbb
mov
cmc
add
xchg
fstpt
mov
mov
adc
pop
ljmp
xchg
lret
xor
fsubs
sbb
aas
ret
push
sbb
and
cltd
gs
mov
fdivs
insb
dec
mov
out
xchg
or
lea
adc
inc
shlb
je
xchg
xchg
test
xchg
test
jp
inc
sarl
cmp
cmp
aad
mov
pushf
jmp
xchg
fs
dec
lods
movsl
call
add
lcall
in
or
popf
shll
lock
cmp
push
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
jecxz
rep
mov
adc
adc
or
sbb
xchg
push
and
xlat
les
ss
dec
fnstcw
addb
inc
mov
js
cmpsb
fs
sbb
sti
fidivs
sub
sbb
sahf
pop
testl
sbb
pop
scas
sub
or
loopne
dec
cmp
shlb
pop
xchg
addr16
jnp
cmp
inc
mov
dec
mov
or
rcrb
sarl
or
push
mov
loop
cmc
mov
add
fisttpl
mov
jg
fwait
es
mov
jl
dec
sub
iret
sub
mov
loopne
les
shll
out
xchg
dec
pop
stc
pop
std
push
inc
inc
enter
lcall
mov
or
lods
addb
jecxz
mov
or
dec
leave
scas
inc
cwtl
ljmp
add
sarl
repnz
stos
sub
xor
sub
adc
add
jg
popf
xor
sbb
sahf
sbb
dec
add
push
int3
pop
dec
xchg
push
cmp
lret
inc
cli
xor
aad
sub
out
insl
and
out
out
xor
out
std
or
push
test
dec
xchg
rcr
and
cmp
cmovae
and
jmp
mov
loopne
mull
les
pop
in
pop
outsb
pusha
es
stc
sbb
inc
arpl
cmp
dec
cmp
cwtl
jnp
sbb
ds
loopne
adc
fcoms
jge
out
push
fcoml
shrl
inc
jmp
mov
es
sub
jle
sbb
push
push
xor
mov
cmp
mov
add
and
sub
ja
lds
cmc
sbb
popa
fs
rcll
xchg
adc
mov
cmp
xor
jl
loope
lods
dec
mov
push
pop
pop
daa
cs
mov
scas
mov
xor
stos
mov
lods
hlt
or
popf
lea
icebp
imul
in
adc
ret
imul
fldcw
xchg
cmpb
dec
imul
aad
inc
outsb
ja
jp
mov
dec
incb
ljmp
jecxz
xchg
aam
insl
push
js
or
out
mov
pop
lcall
pop
push
out
in
sub
sub
add
ljmp
lcall
sbb
mov
jmp
add
adc
push
ret
inc
mov
and
or
cli
fs
mov
mov
loope
sbb
sub
fcoms
adc
mov
jns
ds
hlt
das
test
and
fs
jmp
lods
cmp
mov
aad
xchg
mov
jecxz
or
stc
mov
add
outsl
addr16
push
mov
sub
ss
push
popa
fs
sub
pop
lea
scas
insl
mov
inc
repnz
aad
sub
xor
lds
sub
roll
adc
lret
lahf
inc
and
repz
int3
sbb
fwait
inc
movsl
and
sub
mov
dec
add
gs
shrd
jmp
ja
jle
sub
xchg
mov
lahf
stos
pop
lods
jno
adc
int
adc
sub
std
addb
repz
leave
adc
cmpsb
lock
fxch
dec
adc
fbstp
subl
mov
mov
call
sbb
jae
nop
and
xchg
pop
inc
iret
cmp
jnp
mov
mov
cmpsb
faddl
es
add
xchg
inc
xor
push
cmp
lahf
fsubrl
ds
xchg
je
stos
int
push
test
sbb
popa
in
ret
hlt
mov
aad
dec
add
add
mov
bnd
cmp
push
sahf
outsb
push
mov
or
in
outsl
adc
test
inc
pop
mov
push
jnp
movsb
push
daa
jnp
das
int
jg
aaa
lock
dec
lcall
js
movsb
adc
add
xor
sub
es
pop
fnstsw
popa
lret
jae
out
sbb
js
outsl
pop
jae
mov
andl
outsl
jne
rcl
jae
test
inc
scas
rcrb
adc
add
adc
mov
scas
pushf
mov
jne
shlb
cli
pusha
sub
and
cmp
test
add
sub
sub
aad
and
pcmpgtw
pop
movsb
pop
adc
sub
popf
xchg
jmp
mul
mov
jg
sti
in
mov
cmp
loopne
jmp
insl
ljmp
fisubl
sub
roll
test
mov
test
fildl
push
in
mov
dec
mov
pop
push
inc
testb
sbb
adc
out
sbb
stos
addr16
xchg
pop
mov
sub
test
jnp
ja
cmpsb
divl
fdivs
divl
aas
add
int
xchg
jns
out
and
pushf
les
push
shll
test
insb
das
fdivrl
std
jp
lods
jl
jge
mov
pop
adc
xlat
in
insb
dec
inc
movsl
aaa
xlat
lds
pop
jae
inc
or
das
xor
dec
test
leave
mov
sub
lods
lahf
cmp
xchg
addr16
xchg
out
outsl
jg
pop
rcl
pop
stos
inc
movsb
ljmp
add
add
stos
rorl
dec
imul
sbb
xor
xchg
insl
mov
sbb
push
xchg
sbb
inc
cwtl
adc
stc
xchg
or
add
stos
adc
call
or
popa
mov
punpckhwd
aas
push
iret
xchg
add
mov
sub
add
jl
ffree
push
push
pop
adc
cli
jns
cmp
pushf
daa
sub
sbb
lods
jge
dec
dec
jns
jecxz
jno
mov
xchg
test
popa
test
jno
mov
inc
les
gs
pop
jg
lahf
mov
in
out
pop
push
pusha
cld
push
inc
movsb
inc
mov
dec
xchg
in
mov
push
fsubs
mov
and
jecxz
sbb
dec
dec
repz
cmp
cmp
call
fs
adc
mov
out
fdivl
mov
addb
cmp
out
mov
cmp
sub
mov
mov
mov
jne
dec
pop
in
ds
or
test
xor
xor
cltd
cli
push
xchg
inc
das
mov
push
pop
xchg
inc
std
test
pop
pop
adc
dec
je
xor
shrb
and
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
pop
sti
cmp
push
adc
adc
adc
mov
dec
clc
sbb
lea
mov
inc
mov
movsb
jle
mov
sub
cmpsb
idivl
dec
sbb
int3
roll
leave
pop
and
pop
and
cld
mov
andl
ds
repnz
aas
xor
dec
jnp
add
or
pop
dec
or
stc
leave
mov
and
arpl
push
push
fisttpl
xor
call
pop
fidivrl
add
rorl
push
cmc
aad
ror
xor
mov
sbb
test
inc
mov
cltd
stos
int3
mov
test
sbb
scas
add
xchg
aad
add
int3
clc
test
test
dec
je
adc
add
pop
cmpsb
shrl
mov
inc
dec
or
out
jae
xor
xlat
lock
out
mov
xlat
add
fisubrl
cli
addb
xchg
je
adc
ja
ljmp
pop
dec
xchg
push
insb
jg
mov
into
xor
xlat
hlt
cwtl
ret
add
add
daa
push
or
jg
test
dec
dec
movsl
sbb
test
shrb
push
daa
icebp
mov
movsb
in
jle
mov
sbb
out
mov
jo
pop
nop
les
sub
adc
sahf
imull
jae
shll
lods
test
ljmp
fldcw
test
arpl
pop
or
dec
jp
fprem
mov
xor
sbb
add
lcall
and
mov
mov
mov
pop
xor
lock
push
push
cmc
pop
daa
mov
sbb
dec
cmpsb
mov
xchg
mov
xchg
and
xor
cld
fstl
push
icebp
lret
and
mov
aam
dec
mov
imul
xlat
mov
jns
xlat
and
cmpsb
pop
push
pop
and
lahf
loope
mov
pop
subb
jns
xchg
cmp
mov
push
mov
leave
es
sbb
dec
or
lods
or
out
mov
xchg
xchg
test
cmc
sub
inc
cmp
push
cmpsl
inc
inc
mov
dec
lock
mov
jo
call
mov
or
fistps
sti
inc
out
sarl
mov
mov
aas
xchg
jno
adc
scas
out
sub
sbb
add
adc
adc
pushf
push
scas
cmpsb
cs
daa
jle
pushf
and
pop
nop
es
dec
xchg
jmp
add
mov
test
mov
pop
mov
mov
out
sbb
adc
test
sbb
dec
pop
sbb
pusha
and
cmp
movsl
xor
xor
xchg
orl
insl
jne
enter
mov
xor
mov
rcl
clc
loopne
loop
adc
cli
sahf
gs
jge
aas
dec
xchg
cmpsb
dec
jp
into
ret
ja
sub
mov
jmp
fidivrl
mov
test
adc
mov
gs
leave
cs
sub
loope
fwait
pop
aam
rorl
data16
rolb
repz
rcrb
in
pop
xchg
movsl
arpl
jg
fwait
or
jge
lea
mov
and
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
repnz
adc
push
adc
adc
or
sbb
ljmp
xchg
lahf
shrb
or
jmp
movsb
add
mov
jp
lcall
orl
std
nop
js
lods
adc
sarl
mov
mov
pushf
pushf
xlat
push
in
adcl
mov
mov
xlat
testb
loop
dec
pop
enter
negl
dec
out
jl
cmp
insl
mov
and
mov
in
adc
fbld
xor
decb
push
mov
jo
mov
xchg
adc
and
sub
jmp
adc
jecxz
int3
insb
pop
mov
outsb
and
aad
ds
out
add
inc
mov
test
dec
ds
jb
and
xor
jb
jle
jge
or
pop
pop
inc
ficomps
popf
xor
out
lock
adc
daa
xor
outsl
mov
sub
xchg
subb
xor
clc
fucomi
in
test
dec
mov
inc
repnz
lea
pusha
fwait
data16
sbb
sub
sarb
xchg
jne
pop
das
loope
mov
movsl
mov
pop
scas
aad
loope
push
or
fwait
and
inc
dec
negl
ja
xor
or
stc
sarl
imul
ljmp
negb
ja
sub
lret
dec
jmp
scas
aaa
iret
mov
push
iret
fistps
add
dec
sub
ss
movhps
pop
or
mov
imul
rol
or
daa
sub
cli
mov
into
test
fldl
arpl
push
add
lock
fstpl
ret
pop
pop
cmp
shlb
add
xlat
bound
lret
icebp
add
shll
cli
or
jg
adc
mov
lret
std
jnp
repnz
imul
jmp
dec
pop
mov
sub
mov
sub
mov
mov
stc
jns
inc
sbb
pop
cmp
movsb
pushf
sub
sub
sbb
mov
jmp
enter
mov
jns,pt
fwait
loope
out
mov
jae
test
pop
cmpsb
lods
jecxz
jns
or
shll
inc
addr16
xor
fcomp
sub
fimull
idiv
xor
pop
lret
iret
xor
sbb
mov
dec
rcr
je
cwtl
loopne
add
inc
negb
andl
mov
shll
scas
mov
inc
test
scas
ret
rcrl
clc
imul
lods
jo
push
shl
hlt
inc
inc
pop
aas
addr16
mov
jbe
add
rcpps
push
adc
xor
stc
push
sarw
or
push
add
dec
dec
sbb
mov
scas
mov
aad
lea
mov
stos
xchg
or
pop
pop
ret
in
mov
mov
jmp
inc
sti
cmp
push
inc
or
loop
mov
cltd
hlt
call
enter
sub
mull
mov
cwtl
bound
scas
mov
lods
pop
out
mov
aam
scas
lds
shlb
insl
scas
lahf
xor
dec
in
push
dec
in
sarl
xchg
insb
push
cmp
das
cmp
push
mov
adc
cmp
jg
in
sarb
mov
out
or
scas
sub
cmpsb
call
and
xchg
ret
xchg
sbb
rcrl
xlat
push
rcrb
cmp
cmp
fstpt
repnz
push
ds
adc
mov
cmpsb
pop
call
pushf
xchg
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
mov
adc
pop
adc
xor
adc
adc
or
push
cmp
addr16
shll
sub
cmp
or
cmp
mov
pop
mov
mov
and
loope
cmp
inc
xor
ss
sbb
movsb
mov
mov
cwtl
jbe
lahf
sbb
and
push
jp
icebp
pop
in
sbb
add
ds
add
push
jge
imul
pop
in
icebp
test
add
nop
gs
shll
stos
xor
clc
dec
cld
pop
int
adc
fnstenv
mov
inc
test
aaa
push
stc
sub
mov
dec
fwait
cmp
loop
dec
mov
out
xchg
xor
daa
loope
lcall
adc
cltd
push
push
divl
jl
movsb
jle
pushf
sub
pop
push
idivl
xor
and
xchg
pop
test
mov
pop
mov
mov
push
sarl
insl
sub
fwait
outsl
outsb
sub
pop
sbbl
inc
push
fcmovb
les
push
adc
test
pop
stc
cli
daa
out
push
xchg
push
xchg
lret
or
mov
aam
mov
mov
adc
incb
mov
clc
testb
jle
and
cmp
push
push
mov
repz
pusha
inc
mov
mov
fsubl
and
out
or
dec
movsl
pop
pop
sub
in
out
pop
and
push
icebp
fmul
insl
sti
push
sub
xchg
lcall
and
aaa
scas
adc
cwtl
fwait
or
xchg
int3
cmpsb
dec
sbb
xchg
inc
xchg
jno
hlt
push
xchg
push
ja
cmpl
mull
repnz
mov
adc
arpl
xchg
out
rcrb
rcl
mov
add
stos
das
mov
rorl
inc
sbb
outsb
fildll
lcall
jae
xchg
leave
mov
gs
aad
sub
lods
or
pop
sbbb
mov
push
mov
popa
cld
fwait
daa
int3
dec
sbb
iret
fldt
and
and
or
call
cltd
dec
insl
in
mov
shrl
cmp
pop
xchg
imul
pushf
rorl
cld
ds
inc
xor
mov
cwtl
dec
outsl
fcomp
and
in
and
imul
xorl
flds
jns
popa
xor
movsl
sub
call
mov
pushf
push
dec
xlat
incl
int
lcall
fistl
sbb
push
mov
add
push
shll
pop
outsb
dec
pop
jae
fisubrs
outsl
xlat
mov
and
adc
cltd
cli
jo,pt
dec
imul
sub
pop
pushf
jb
mov
aas
loop
push
mov
popf
mov
adc
or
or
sub
aaa
test
xlat
cmpsl
icebp
rcrb
out
inc
pop
adcl
adc
andb
pop
scas
fstl
mov
aam
nop
or
shlb
xorb
cs
into
cmc
inc
out
sub
jae
adc
jne
xchg
call
mov
icebp
sbb
lret
adc
hlt
push
decl
fdivp
cmp
xchg
mov
popf
inc
jae
std
loopne
mov
icebp
sub
add
mov
jg
or
pop
add
lods
or
pushf
push
dec
mov
fmuls
dec
shrb
mov
ss
inc
jae
jb
dec
add
fxch
popf
sub
inc
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
xor
xor
adc
adc
adc
jo
fbstp
incb
idivl
popl
mov
pop
lods
or
bound
sbb
pop
add
xor
sti
divl
or
or
pop
adc
addr16
push
push
sbb
out
sub
sub
mov
cmp
dec
pop
stos
das
adc
cwtl
arpl
jecxz
xchg
inc
and
sub
cli
jo
and
add
aam
xchg
nop
nop
jbe
and
jne
push
dec
jnp
mov
push
mov
mov
add
dec
dec
mov
movsb
mov
mov
adc
pop
cmp
dec
les
cmc
sub
movsl
out
and
mov
sub
push
mov
cmpsb
mov
mov
shl
sub
jl
outsb
xchg
das
out
adcb
jbe
fcmovne
or
jg
inc
mov
sbb
std
xor
mov
add
aad
insb
sbb
testb
xor
adc
pop
jne
pop
mov
daa
mov
push
fs
sbb
pop
pusha
push
sub
lret
mov
and
xchg
mov
cmpb
sub
fildl
jns
jne
pusha
bound
cmpl
insl
xchg
or
inc
cs
out
loopne
aad
ds
xchg
push
pop
sub
mov
xor
stos
mov
add
mov
rcr
ret
pop
mov
cmc
add
mov
sbb
daa
mov
xlat
shll
in
int3
fcoml
xchg
mov
stos
jno
mov
lds
inc
test
jp
xchg
insb
xchg
ret
push
iret
mov
xchg
jb
mov
lods
sbb
or
scas
nop
loope
stc
mov
stos
push
scas
adc
sbb
dec
cltd
enter
leave
lods
push
mov
jne
addl
xor
mov
lods
leave
scas
mov
mov
ss
jg
jl
add
sbb
push
mov
sub
sbb
cli
ds
fs
or
fstpt
adc
mov
xchg
pop
sahf
push
mov
sbb
mov
xchg
into
sarl
cmp
test
into
cli
test
dec
in
cmp
daa
xor
push
or
or
test
and
and
outsb
mov
xchg
jbe
roll
dec
and
lahf
inc
sbb
sbb
sub
add
ljmp
repnz
scas
test
scas
push
pop
mov
fsubrs
pop
movsb
test
bound
jp
mov
clc
fwait
insb
xor
test
enter
outsl
stc
push
out
les
sbb
and
cmp
xor
jbe
loop
mov
and
mov
or
cmp
out
xor
cmp
xor
inc
jb
mov
inc
dec
rol
in
jae
loop
testb
aas
add
test
mov
loopne
aam
adc
inc
push
adc
imulb
push
arpl
mov
pop
nop
adc
nop
pusha
sti
movsl
sub
sbb
mov
lret
pop
out
or
cld
xor
push
cld
push
push
imul
aas
pop
fwait
test
inc
sub
jnp
sub
out
pop
jg
mov
out
xchg
xchg
out
inc
in
cmc
mov
sub
decl
sub
sbb
xlat
add
hlt
jg
rcr
test
leave
pop
and
jbe
cli
xlat
and
test
shrb
push
sbb
jno
lds
xlat
and
int
add
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
mov
stos
inc
dec
adc
xor
adc
mov
mov
lods
mov
repnz
sbb
adc
or
cmpsb
icebp
int3
xchg
add
dec
fdivl
inc
mov
loope
cmp
mov
sbb
mov
fldenv
scas
mov
xorb
xlat
scas
dec
and
das
push
jge
sbb
push
jp
aas
dec
push
into
rorl
pop
xor
mov
push
ljmp
mov
and
mov
shl
jns
es
addl
pop
pushf
es
mov
inc
xlat
sub
in
jnp
test
imul
adc
xor
mov
dec
or
sub
vpmovusdb
sarb
mov
sbb
addr16
stos
mov
pop
repz
xor
or
lock
xchg
roll
add
or
cltd
nop
not
mov
sbb
fucom
mov
scas
fistpl
mov
push
cmp
jns
cmp
or
ficoms
add
xor
mov
pop
jo
inc
push
popf
movsb
xor
stos
pop
mov
mov
mov
out
mov
mov
mov
fwait
mov
push
sbb
movsb
xchg
lahf
xor
mov
in
cmp
mov
pop
mov
insb
frstor
pop
testb
ret
ljmp
dec
jmp
shl
hlt
leave
dec
mov
inc
jne
pop
test
xchg
xchg
mov
add
lret
jl
or
mov
sub
xor
push
add
sbb
bound
mov
adc
clc
pop
leave
push
scas
mov
outsb
push
mov
test
mov
sti
shll
jge
mov
xor
or
popa
cltd
fdivrl
or
arpl
aaa
test
lock
adc
icebp
sub
int3
and
adcl
jecxz
and
shlb
mov
inc
push
andb
ss
mov
cmp
fwait
test
or
sbb
loop
popf
dec
into
fnstcw
into
mov
es
mov
ss
push
mov
jl
xchg
popa
pop
mov
insb
or
shlb
and
xor
mov
sub
stos
adc
fisttpll
mov
sarl
push
mov
pop
out
xchg
dec
xor
mov
xchg
pushf
mov
sbbl
add
inc
cmp
jb
push
lds
rcrb
mov
test
xor
sub
loope
into
into
ljmp
jb
mov
and
aam
mull
int
es
push
fistpll
push
rorb
movsb
gs
js
mov
out
movups
loope
repz
hlt
sub
push
or
fwait
pop
jnp
nop
sub
cmp
and
mov
cmp
mov
rorl
stc
scas
dec
jne
adc
jp
sbb
mov
adc
pop
pop
cli
bound
pop
mov
mov
mov
inc
inc
jns
and
insl
leave
test
sbb
dec
mov
cmpsb
scas
xchg
jno
arpl
lcall
and
js
imul
in
iret
test
xchg
mov
dec
xor
push
aad
imul
movsb
pop
mov
mov
cmpsl
jnp
stos
test
xchg
mov
jmp
lahf
std
in
jnp
testl
lea
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
or
add
ljmp
xlat
and
mov
mov
insl
enter
les
out
or
adc
cltd
add
sbb
addr16
test
mov
xor
repz
push
idivl
jle
ret
clc
sbb
pushf
mov
mov
pop
fcmovnu
adc
pop
xchg
scas
cmpsl
xorb
ret
inc
ja
mov
xor
adc
add
add
lods
lret
push
mov
addr16
jae
sbb
jns
adc
in
cwtl
cmp
mov
clc
add
scas
out
adc
adc
adc
and
cli
inc
iret
ret
rorl
or
lock
insb
aam
mov
mov
pop
clc
mov
dec
dec
cmpsl
and
cwtl
arpl
or
adc
jno
mull
xchg
mov
inc
outsl
fidivs
imul
sarl
fld
roll
add
pop
push
clc
clc
mov
xchg
push
movsb
mov
and
cs
inc
sbb
jb
sahf
lds
je
pop
xchg
cmp
push
push
pop
sub
dec
int3
mov
push
mov
repnz
pop
jnp
mov
jae
shl
int3
add
add
mov
addr16
mov
jg
lods
push
int3
mov
jl
mov
xchg
pop
pop
pusha
lods
push
repnz
std
test
decb
sbb
cmp
cmp
cltd
cmp
jle
notl
clc
mov
and
push
fisubrs
pop
dec
pop
jge
cmp
ja
lahf
xchg
sub
pop
in
cmp
popa
cli
outsl
pop
popa
push
ljmp
lock
movsl
sbb
mov
sub
and
aaa
mov
push
jo
scas
pop
out
fldcw
gs
ja
dec
push
int
stos
les
shrl
int3
mov
xchg
stos
sbb
outsb
stos
mov
xor
rcll
add
pusha
pop
push
dec
adc
sahf
ss
push
lret
dec
push
and
mov
pop
add
fisttpl
xchg
lods
sbb
in
jmp
cld
cmpsb
pop
push
out
push
dec
dec
test
out
or
adc
or
xchg
push
cmc
subb
sub
in
sbb
les
mov
sub
xchg
pop
sar
faddl
cmp
loope
sti
xchg
xor
pop
sti
and
mov
mov
add
sbb
push
jmp
xchg
inc
mov
outsb
aad
in
mov
fistl
xor
sbb
and
dec
lret
add
pop
mov
out
gs
fisubl
add
icebp
add
pop
xlat
push
into
cwtl
sbb
test
pop
adc
xchg
xorl
das
out
cltd
xor
pop
into
jno
movsb
mov
xchg
jmp
jecxz
adc
cmp
rcr
adc
push
bound
push
mov
dec
fs
jo
rcrb
dec
cmpsb
sbb
jae
leave
adc
sahf
idiv
cmpsb
outsb
xor
dec
outsb
dec
xchg
sub
rorb
test
test
jo
roll
pushf
mov
mov
jmp
or
aas
pop
repnz
push
add
cli
test
hlt
imulb
push
test
cwtl
inc
mov
mov
test
negl
sub
dec
dec
aam
or
sahf
lret
xchg
test
pop
mov
pop
les
push
mov
sbb
inc
sbb
xchg
mov
in
rorb
fcoms
xchg
pop
mov
shl
test
mov
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
xor
xor
adc
push
pop
mov
cmpb
outsb
and
jl
adc
jno
ror
dec
sbb
fnsave
mov
inc
out
xor
cltd
adc
inc
shrl
cmpsl
and
hlt
mov
int
ds
test
mov
test
mov
lret
loope
cmp
xchg
cmc
dec
enter
cmp
xchg
stos
ret
pop
fbstp
les
push
lds
inc
in
scas
xor
add
dec
sbb
mov
cmp
mov
adc
ljmp
test
mov
out
jp
add
adc
mov
rcrl
lods
xor
aam
imulb
xchg
or
scas
nop
xchg
xor
std
test
mov
jmp
jbe
xor
cmp
sub
cmpsb
xchg
sub
pop
mov
xchg
or
clc
mov
mov
fmulp
dec
and
sbbb
push
or
imul
mov
mov
cmp
add
out
test
and
out
pop
shll
lds
mov
dec
mov
and
adc
nop
sbb
pushl
fwait
movsb
push
inc
xchg
push
cmove
cmc
lahf
inc
push
add
ret
add
pop
xlat
sbb
in
notb
rol
inc
sbb
test
lods
and
inc
and
mov
bound
xor
inc
sub
cmpsl
xor
mov
cli
push
mov
push
nop
lahf
inc
clc
sbbb
ljmp
pushf
and
xor
mov
loope
mov
nop
cmp
jp
imul
sub
scas
or
lea
int
fstpl
in
sbb
ret
mov
mov
outsb
into
jne
inc
daa
jge
mov
call
or
outsb
xchg
popa
push
repnz
xchg
jmp
push
add
cmc
xchg
fnstsw
pop
sbb
pop
insb
adc
jo
adcl
incb
loopne
jecxz
std
out
repz
lret
mov
fistpll
arpl
sub
push
and
mov
or
ret
sbb
cmp
loope
mov
mov
ret
repz
mov
stc
mov
clc
adc
adc
repnz
and
std
mov
ljmp
jo
subb
js
or
sub
nop
es
inc
pusha
je
adc
cmc
adc
rol
nop
imul
sub
cs
out
adc
shl
lods
xor
push
mov
or
shl
mov
adc
inc
cs
cltd
xchg
cmpsb
adc
mov
repnz
fwait
dec
cmp
push
pop
pop
xor
jne
sub
jnp
jb
adc
jp
gs
inc
sbb
mov
pusha
call
add
xchg
jns
imul
out
hlt
mov
rclw
pop
xor
push
arpl
shll
shll
mov
mov
lods
lahf
pop
push
lock
daa
xchg
pusha
push
inc
sbb
lods
lock
mov
xor
push
cmc
pop
call
test
sbb
outsb
nop
lock
pushf
imulb
jae
cmp
inc
sbb
add
push
inc
pop
lds
cltd
mov
cmp
lret
add
cmpsl
pop
jmp
pop
mov
fnstcw
xchg
jo
ficompl
cmpsl
loop
aas
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
mov
incb
mov
adc
jg
test
ret
adc
aaa
pop
sbb
inc
cwtl
pop
dec
jl
and
xchg
pushf
add
or
scas
lahf
fwait
cld
repnz
push
push
pop
jmp
mov
mov
or
lea
adc
arpl
xchg
mov
jg
mov
arpl
mov
dec
push
push
rclb
mov
and
aad
cmpl
jbe
popa
cmpsb
or
xchg
clc
pop
add
sub
inc
lea
inc
cmp
mov
jno
and
push
test
xchg
xchg
pop
popf
sbb
cmp
inc
cld
adc
es
lret
xchg
lcall
inc
sub
faddl
xchg
push
sarb
jg
scas
sub
mov
xor
dec
adc
ljmp
cmc
fcompl
movsl
and
mov
sarb
mov
negb
add
in
popa
push
push
lds
fstpt
lods
stos
sbb
adc
dec
push
mov
jb
imul
pop
cmpsl
and
cmpsb
mov
movsl
stos
push
sahf
cmpsb
aas
add
cli
cmp
dec
repnz
add
fs
iret
adc
mov
popf
push
mov
pop
sti
imul
ja
dec
mov
pop
adc
jbe
arpl
jae
mov
test
test
xor
stos
in
cmpxchg
sbb
sbb
xchg
dec
xchg
into
mov
jnp
mov
movsb
mov
mov
mov
fst
loope
int3
pop
andl
sub
aas
imul
add
mov
fisttps
ljmp
sbb
jp
movsb
loopne
stc
lds
fwait
sub
dec
add
mov
jmp
lcall
add
cmp
cmpb
jae
insb
cltd
sti
pusha
cltd
sub
imul
inc
cltd
outsb
popa
lock
mov
sbb
sub
mov
jecxz
xor
js
mov
xor
out
fwait
mov
test
dec
out
lea
push
jle
push
jo
fwait
lock
xor
test
or
dec
hlt
and
loope
push
dec
mov
aad
sahf
out
xor
and
add
mov
xchg
push
scas
push
pop
xchg
push
cmc
sbb
cmp
outsb
shlb
sbb
das
or
pop
clc
add
test
cmc
sub
popa
ret
sar
jbe
mov
push
sbb
daa
xorl
cmp
xor
push
movsl
add
and
xchg
test
mov
cmpsl
pop
mov
out
aam
push
aad
test
or
test
pop
mov
xchg
pushf
mov
push
xchg
sahf
xchg
xchg
xor
fs
pusha
aad
notl
jnp
sbbb
out
mov
dec
in
adc
mov
add
push
xchg
inc
cmp
add
push
or
dec
jl
cmc
arpl
sub
aam
fs
pop
fwait
jmp
pop
adc
lea
cmp
push
cmp
xchg
push
push
add
and
mov
arpl
hlt
lahf
mov
push
push
test
rorb
xchg
mov
aaa
and
xchg
push
or
ss
cmpsb
jno
fwait
mov
lret
in
cmc
ret
cs
aad
aas
outsb
in
sub
dec
or
js
mov
popf
cld
pop
gs
cmp
add
ret
ja
aaa
cli
mov
jno
testl
push
loopne
sbb
out
aam
push
in
shrd
xor
jmp
mov
popa
lcall
mov
adc
xor
adc
sub
add
sbb
shr
and
sbb
lcall
mov
sub
call
fnstcw
insb
les
test
xor
fucom
imul
lcall
push
mov
repnz
pop
imul
pop
mov
rcrl
jae
push
sbb
xor
movsl
push
or
xchg
or
add
test
in
test
nop
inc
or
pop
pop
adc
aam
loopne
ficoml
xchg
loope
ret
or
mov
hlt
pop
idivb
jecxz
fsubrs
shrl
xor
sbb
adc
adc
out
ss
inc
mov
fwait
movq
or
adc
pushf
in
shrl
loope
negb
pop
pop
pop
mov
outsb
inc
cltd
lret
imul
pop
scas
outsl
out
aas
add
shll
fsubs
gs
or
dec
cwtl
xchg
lret
leave
adc
push
add
jge
fstpl
lcall
cltd
xor
sti
cmpsb
ss
scas
sub
gs
test
iret
push
mov
test
lea
push
mov
cld
iret
inc
imul
loope
push
pop
out
add
test
icebp
fisttpll
ja
shl
xchg
lds
mov
and
sub
jge
cmp
cmc
pop
xor
fs
mov
bound
nop
adc
mov
popf
or
loop
imul
cltd
mov
insb
push
inc
cmp
stc
aas
lods
movsl
cs
xor
ss
mov
popa
popf
lods
movsl
movsl
jp
aad
lcall
aad
dec
push
xchg
popf
ja
mov
jp
and
hlt
insl
jnp
xorb
dec
push
pop
sub
sub
rorl
cmp
mov
jne
mov
ficomps
popa
pop
lods
dec
xor
add
pop
in
test
sub
aad
sub
pop
rcl
inc
jo
mov
popa
ljmp
xor
and
mov
lock
jge
in
push
dec
dec
add
and
daa
icebp
pop
lock
sub
push
mov
mov
lods
ljmp
es
rsqrtps
jp
jg
js
xor
test
pop
stos
jle
pop
sbb
sub
rcrb
or
dec
push
data16
jmp
jl
pop
mov
imul
sbb
fisubrl
mov
dec
push
dec
in
incl
cmp
pop
div
pop
inc
movsl
fnstsw
push
out
pusha
movsl
roll
jne
outsl
pop
mov
jno
fildl
std
clc
cmp
jnp
mov
sub
test
mov
jo
push
add
jb
stos
inc
je
push
sbb
sarl
push
push
leave
push
xchg
xchg
xchg
pop
nop
iret
into
stc
ja
pop
and
add
mov
in
inc
push
rcrb
orb
iret
int3
scas
inc
pop
clc
jecxz
pushf
or
or
push
mov
mov
adc
dec
popa
cmp
jne
mov
pop
push
negb
xchg
mov
cs
lods
and
pop
mov
popf
shrb
and
popl
nop
loopne
inc
push
mov
add
xchg
nop
and
dec
or
ss
dec
into
add
or
inc
push
cld
roll
repz
push
mov
pop
pushf
jg
xor
into
out
jmp
pop
lret
lahf
aad
xor
pusha
cli
mov
sbb
fwait
mov
and
ja
stos
inc
pop
fildl
sub
call
push
in
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
lds
stos
int
adc
fmull
adc
cmpsl
mov
adc
mov
aad
rcrl
jp
mov
lret
mov
movsb
pop
into
xchg
lock
lret
andb
sbb
or
push
fs
fmull
les
mov
cli
popl
add
or
xchg
sahf
mov
add
mov
sub
xchg
sub
and
jle
int
rolb
push
dec
xchg
fidivs
jnp
mov
mov
push
mov
push
mov
je
jns
loopne
jo
rorb
dec
push
jnp
dec
fsubr
ds
and
dec
sub
push
addr16
lds
xchg
iret
sub
mov
xor
and
fstpt
outsl
test
scas
push
jb
outsl
sub
xor
jp
es
cmpl
push
sbb
xchg
push
adc
mov
out
mov
mov
mov
mov
adc
push
mov
imul
aad
or
or
add
push
push
fcmove
mov
lret
jmp
cmp
sbb
pop
mov
clc
sub
stc
sti
inc
pop
inc
jno
insb
push
repnz
sbb
repnz
cmp
mov
in
sub
push
push
test
loop
iret
sahf
mov
mov
dec
ror
fsts
mov
mov
xchg
out
daa
mov
int3
imul
xchg
nop
cmp
ja
and
out
sbb
ds
xlat
xchg
mov
pop
in
jl
and
and
cmpl
xchg
rcl
mov
test
lahf
xor
mov
ret
pop
mov
in
or
dec
mov
fisttpl
xchg
in
loopne
push
inc
jle
out
mov
fldt
insl
cmpsb
das
cmpsb
test
dec
mov
sbb
sbb
or
xor
pop
iret
inc
or
daa
or
aaa
nop
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
xchg
test
adc
movlps
lock
push
xor
xor
testb
shufps
aas
jecxz
push
push
mov
arpl
inc
ret
sti
jnp
push
xor
lock
push
cli
andb
adc
mov
push
jno
call
cmpsl
mov
icebp
cmp
push
sbb
xchg
cmp
xchg
repz
push
jno
xchg
pop
push
test
lahf
dec
movsl
mov
movsb
mov
and
inc
mov
sbb
cmp
movsl
or
loopne
test
mov
mov
cmp
std
or
sbb
sbb
cmpsb
pusha
xchg
test
sbb
popa
fildll
jo
jl
sbb
notl
mov
shrl
or
sar
and
pop
enter
test
popf
movsl
push
xchg
in
lock
xchg
imulb
and
out
mov
cmp
ficomps
dec
cmp
int
inc
aas
sbb
aad
jg
sub
out
pop
mov
xchg
xchg
push
jg
push
xchg
push
xor
ret
lods
lahf
lea
repz
cmp
dec
je
fdivrl
pop
outsl
and
mov
fmuls
aam
mov
push
dec
mov
jge
push
ret
push
outsb
inc
fwait
adc
stos
push
jle
xchg
xchg
or
insb
pop
jecxz
lock
lds
test
frstor
pusha
rclb
sbb
popf
lahf
repz
clc
and
mov
movsb
mov
mov
inc
inc
movsb
or
ret
aam
sbb
in
push
cmp
mov
dec
out
mov
cmc
push
jmp
xor
fstpl
push
mov
cwtl
call
loop
push
lock
jne
add
lods
and
dec
pop
cwtl
lcall
out
sbb
jae
xor
hlt
mov
add
jmp
iret
andl
movb
mov
xchg
pop
jae
fs
fidivrs
adc
mov
mov
int3
lea
mov
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
dec
idivl
sbb
adc
movlps
shl
jns
xchg
push
cld
fmull
jae
mov
cmp
shll
and
inc
shrl
jmp
aad
inc
imul
or
popa
dec
cmc
sub
in
pop
out
dec
int3
outsb
cld
xchg
cmp
pop
and
mov
push
fsts
push
mov
ret
lea
decl
xchg
sbb
xchg
div
pop
int
cmp
mov
adc
and
call
push
dec
push
hlt
jmp
cmpsb
int3
pop
sub
loop
jbe
inc
xchg
ret
gs
pusha
and
fwait
add
lahf
jp
sub
and
sbb
push
pop
adc
sbb
push
cld
pop
loopne
mov
mov
sbb
xor
in
and
mov
pushf
movsb
jg
adc
arpl
cs
xor
test
call
adc
add
mov
pop
insb
cmc
aaa
fbld
cltd
or
adc
int
loop
push
iret
loopne
pop
ficoms
or
xchg
enter
sub
dec
jle
movsl
scas
lahf
jno
pusha
or
xchg
jnp
iret
aas
scas
int
mov
xchg
pop
ljmp
push
xor
jmp
push
imul
or
or
sbb
or
test
mov
pushf
or
add
adc
sbb
mov
ret
cs
int3
cmp
shll
jne
xor
mov
outsl
pop
rcll
movsl
xchg
in
std
fdivl
ss
rorb
push
and
jmp
out
jecxz
loopne
mov
fsubl
sahf
xchg
int3
sbb
dec
sbb
and
cmpsl
test
outsb
xlat
scas
adc
mov
push
mov
loope
push
lock
cmp
jb
add
mov
ret
inc
mov
repnz
xchg
pop
insl
inc
jecxz
ss
mov
pop
lea
ljmp
inc
hlt
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
call
adc
fmull
adc
daa
xchg
and
les
mov
cmp
and
mov
push
das
jnp
jg
cmp
testb
dec
add
es
mov
ja
nop
fildl
or
adc
enter
sbb
xchg
iret
shr
lock
aaa
popf
sahf
or
dec
lret
mov
shrl
fcos
fwait
daa
adcl
mov
jne,pn
push
cmp
repnz
pushf
cltd
bound
add
out
xlat
xlat
inc
add
das
pop
cmpsl
sub
xor
dec
mov
pop
adc
mov
sbb
fistpll
or
cli
push
lret
sub
lea
loope
pop
sub
iret
and
cmpsl
xchg
je
lahf
mov
inc
push
cmp
mov
or
iret
daa
movsb
pop
jp
push
popa
pop
sub
dec
mov
test
int3
fildll
or
or
popa
dec
mov
jp
xchg
stos
mov
pusha
or
out
stc
imul
xchg
les
cmp
push
and
cmp
mov
ja
jne
je
pop
xor
repz
mov
sub
or
stos
ret
mov
ret
mov
inc
mov
sti
sahf
sahf
insl
push
and
or
nop
push
dec
or
pop
ret
lock
sub
test
repnz
out
cmp
or
adc
sub
js
adc
sub
xchg
pop
xor
jl
xchg
mov
out
or
jno
add
test
cmp
sub
daa
js
add
jne
mov
addr16
data16
jecxz
xchg
jnp
jl
jo
arpl
aaa
xlat
pop
xchg
aas
cmp
or
movsb
pop
jno
cmpsb
cmp
ljmp
out
dec
lea
mov
mov
mov
mov
stos
pop
test
jg
cld
stos
dec
dec
popf
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
pop
punpckhdq
adc
adc
movlps
ret
sbb
cmp
adc
push
popw
rcr
fnstcw
fimull
lcall
test
les
fsubr
scas
repnz
jne
scas
or
sub
or
out
cmpsb
loope
scas
stc
call
lods
shlb
mov
cmpsl
lret
jb
inc
pop
pop
pop
xchg
fcomps
push
mov
cltd
lds
neg
inc
popl
add
addb
or
mov
outsb
xchg
cli
push
jl
pop
sub
sbb
scas
lret
rorl
repnz
lds
bound
pop
lods
lret
push
jno
test
jnp
add
lahf
in
mov
cwtl
cmp
xchg
pop
clc
fwait
jne
in
outsl
push
repnz
hlt
jbe
mov
mov
mov
scas
mov
leave
add
aaa
loope
mov
subl
pop
jmp
je
add
pop
std
aaa
sti
cmp
lds
pop
aas
enter
loope
std
xchg
pop
sbb
jae
insb
push
sub
aaa
lret
into
or
pop
mov
mov
dec
in
push
and
inc
out
cwtl
das
std
int3
std
in
sub
push
loopne
pushf
mov
xor
jne,pn
dec
mov
add
push
out
fmuls
cld
lahf
out
divl
inc
jno
mov
mov
or
inc
xorb
frstor
adc
out
or
pop
test
clc
lods
and
mov
in
mulb
and
js
jmp
push
imul
pushf
out
out
popf
adc
mov
jecxz
and
sbb
js
xchg
jecxz
xchg
xor
test
dec
ljmp
aaa
cli
and
xor
movsl
or
inc
sub
mov
pusha
out
pop
jg
sub
mov
sub
sbbb
cltd
fimuls
in
test
gs
daa
adc
push
mov
pop
movsl
aaa
cs
push
inc
rclb
sahf
out
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
xor
push
xor
call
leave
in
xor
fcomip
cmpsb
inc
out
pusha
mov
push
insl
pop
fidivs
jbe
int
loopne
dec
sub
insb
rclb
test
xchg
iret
adc
xchg
test
loope
lds
pop
out
lods
loop
fisubrl
mov
scas
mov
insb
mov
push
xor
je
dec
outsb
shrb
cltd
mov
leave
jp
add
add
hlt
or
cltd
mov
add
enter
push
scas
fisttpll
cmpb
xchg
add
jno
pop
aaa
inc
and
ss
outsb
filds
xor
pop
imul
push
mov
scas
je
push
xchg
cs
sub
sbb
jae
frstor
mov
cmp
xchg
add
push
inc
inc
pop
into
and
mov
and
idiv
dec
xchg
pusha
bound
adc
or
mov
dec
repz
inc
jne
adc
popl
lds
xchg
iret
jecxz
mov
or
or
xchg
scas
clc
sbb
sbb
sarb
aad
mov
push
dec
or
mov
or
mov
adcb
mov
aam
or
outsl
mov
jne
jg
xchg
lahf
test
mov
and
leave
movsb
dec
mov
mov
push
sbb
sub
lods
daa
push
mov
inc
mov
imul
outsb
xchg
jo
mov
vunpcklps
insb
or
inc
addr16
fldt
adc
leave
adc
adc
and
add
imul
ljmp
invd
out
outsb
jns
fcoms
and
andb
dec
xor
sbb
imul
mov
jg
enter
outsb
mov
je
inc
out
dec
outsb
neg
xor
or
pop
sbb
add
add
and
and
inc
push
sub
mov
pop
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
mull
fmull
adc
fcmove
call
scas
dec
sar
icebp
xor
in
mov
xchg
enter
shll
push
jo
test
jg
ja
and
fisubs
mov
dec
cmc
fimull
incl
int3
mov
mov
push
mov
mov
repnz
push
shr
sub
hlt
or
out
jns
jmp
sub
bound
repnz
lock
pop
arpl
add
out
imul
mov
loop
int
xor
repnz
fisttps
das
jne
movsl
ss
or
sbb
lcall
pop
or
aad
out
mov
xchg
lods
sti
pop
sahf
inc
les
cwtl
cli
add
aaa
cltd
fcmovb
push
xchg
bound
fnstenv
adc
loopne
sbbb
insb
jnp
negl
add
dec
scas
fnstenv
inc
cmc
sub
jge
jo
addr16
faddl
pusha
sbb
cmp
xchg
cld
int
cmp
es
add
push
repz
int
jb
mov
inc
xor
mov
mov
xchg
jb
sbb
popa
ss
push
daa
add
scas
mov
ds
repz
test
jns
push
and
jae
out
xchg
jne
cs
xchg
pushf
push
sbb
push
or
and
lahf
add
out
aaa
ret
loop
clc
xorb
xchg
jmp
idivb
inc
insb
add
mov
jns
jbe
cltd
xchg
inc
insl
loopne
add
repz
cmp
out
xchg
insb
pop
add
adc
insb
bound
add
add
mov
xor
cmp
add
pop
push
mov
loop
dec
popf
pop
xor
pop
xchg
dec
jmp
xchg
adc
cltd
in
stos
adc
xorb
xchg
sahf
pop
std
pop
add
inc
ret
push
iret
clc
cmp
bound
cmp
cwtl
pusha
into
dec
jge
or
xchg
aas
push
hlt
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
outsl
cmpsl
gs
in
mov
lret
jns
pop
mov
or
test
sub
cltd
add
cs
in
loop
pop
incl
popf
mov
cwtl
enter
lds
pop
aaa
pop
outsl
jp
xchg
xor
std
add
sbb
or
sub
xlat
pop
inc
push
rorb
std
imul
pop
lods
shr
enter
xchg
add
jge
arpl
minps
push
imul
lret
movsl
jp
or
in
clc
inc
mov
fdivl
scas
das
mov
pop
jecxz
push
push
push
xchg
ss
cmc
jns
cli
test
int
pusha
mov
cmp
inc
aas
xor
inc
call
dec
push
ret
add
das
aas
ds
mov
inc
push
adcl
fldl
mov
jnp
fdivl
je
divb
add
loopne
sbb
ficomps
pop
mov
sbb
insb
sar
dec
push
jne
loop
push
mov
xor
cwtl
xchg
pop
fchs
das
add
pop
pop
incb
jb
xchg
and
inc
mov
mov
cmpsl
es
sub
or
outsb
lahf
in
and
xchg
popa
ss
dec
xchg
lea
sbb
inc
testl
mov
add
or
sarb
test
ret
cmp
popa
add
leave
repnz
and
mov
jp
xchg
pusha
or
stos
pop
cmp
push
inc
xor
xchg
cli
and
push
mov
negb
test
sbb
imul
mov
jecxz
mov
out
inc
or
xchg
inc
pop
jle
negl
xchg
sub
xchg
cs
rclb
rorb
mov
std
loopne
lret
mov
in
movsb
arpl
xchg
and
repz
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
push
out
stc
add
je
test
inc
gs
gs
cmpsb
and
push
mov
jae
es
stc
xor
xchg
orl
mov
mov
mov
xchg
adc
and
lret
sbb
mov
popa
jns
jecxz
cmp
cmp
mov
mov
xchg
lahf
jge
sti
les
inc
cmp
push
movsb
xor
inc
leave
dec
lea
push
into
cli
and
mov
sub
add
dec
stc
add
jns
pop
cmp
stc
cmp
push
pop
lret
mov
loope
ret
xchg
inc
pop
inc
pop
or
xor
test
cmp
sarl
leave
xchg
cwtl
sub
mull
or
popa
cmp
fmull
imul
stc
mov
sub
push
push
or
xchg
jge
addr16
push
pop
loope
ret
or
pop
sbb
movsb
fcoml
mov
int3
push
sbb
mov
call
adc
ds
jge
sbb
xchg
pop
insb
sbb
cmp
xlat
and
xchg
daa
push
dec
inc
dec
adc
mov
mov
xchg
fsts
loop
fcoml
scas
push
and
push
or
leave
cmpl
push
push
pop
mov
xchg
inc
fisttpll
movl
lcall
and
or
int
xor
nop
mov
mov
movsl
ds
sub
shl
lret
imulb
cltd
mov
push
or
sbb
repnz
mov
aad
lret
and
xchg
xchg
cmp
mov
adc
out
push
dec
cmpsl
mov
inc
arpl
les
jno
rep
push
xchg
jecxz
pop
cmp
sub
jb
outsb
test
dec
mov
cmpsl
jp
push
pusha
cwtl
push
sahf
sahf
xor
sub
mov
cmp
dec
cmpb
aaa
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
cli
push
ss
aad
adc
fmull
adc
iret
in
sbb
std
das
pop
push
ret
or
add
mov
les
sub
mov
mov
nop
push
and
dec
stc
ljmp
jnp
cmc
sbb
pop
push
pop
push
or
inc
push
js
mov
sbb
test
and
loop
aas
std
imul
rcrb
fsubr
sbb
sahf
mov
stos
jno
lods
mov
cmpsb
es
std
fisubrl
pop
stos
lds
inc
jae
sub
fsubl
mov
movsb
arpl
mov
ss
inc
mov
test
jo
sub
arpl
push
dec
daa
repnz
cli
and
enter
addb
cmpsl
xchg
lock
sub
jge
push
push
leave
outsl
mov
shlb
and
and
sbb
sub
call
lret
jle
pushf
mov
int
sbb
jecxz
mov
in
push
sub
rcrb
adc
clc
mov
inc
popf
xchg
or
mov
repz
mov
sahf
xlat
clc
push
int3
xlat
outsl
and
imul
test
dec
mov
xchg
lahf
or
cmp
mov
dec
add
gs
ds
dec
scas
mov
adc
adc
jno
sbb
out
adc
imul
sub
mov
dec
es
lods
das
push
in
mov
popf
leave
in
or
jmp
and
adc
mov
jbe
pop
cli
dec
jg
push
inc
and
pop
xor
push
xor
inc
xlat
inc
sti
aad
inc
xor
mov
inc
daa
mov
sub
test
aad
inc
call
testb
ret
cmpb
push
cmp
jno
mov
jbe
jae
in
loopne
xchg
xchg
sbb
nop
arpl
mov
jle
ret
ret
jne
lods
and
inc
jmp
popf
or
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
fstl
mov
fmull
adc
aas
fisttpl
nop
gs
addr16
xchg
mull
xchg
mov
cld
fistl
rcrb
into
mov
stos
cmp
jmp
loopne
clc
push
andl
cwtl
inc
dec
arpl
cmpsl
and
loop
and
and
lock
popa
dec
cmp
push
cmpsb
jecxz
frstor
shl
mov
cmc
subl
jecxz
cmp
repnz
xchg
sub
dec
sub
ret
and
icebp
gs
jl
sub
mov
mov
xchg
mov
sbb
movsl
je
inc
xor
popa
ror
or
imul
sbb
ljmp
fcmovnbe
shlb
jno
mov
jbe
jne
xor
cwtl
int
pop
add
aas
pcmpeqd
adc
jne
lods
shll
arpl
iret
sub
jae
cmp
popf
sub
cs
dec
dec
pop
add
jo
aaa
ljmp
inc
xor
das
pushl
cmp
in
ret
dec
roll
dec
mov
fisubs
add
aam
jnp
fwait
adc
in
cmpl
aad
addr16
mov
cmpsb
jne
arpl
out
add
xor
pop
js
ja
push
rorl
mov
dec
jnp
cmp
lret
pop
scas
add
push
ficomps
or
adc
movsb
pop
addr16
in
mov
dec
adc
mov
mov
jb
lock
push
fsts
dec
mov
mov
arpl
repz
sub
xor
lock
inc
stc
jns
insl
xor
and
mov
shrl
and
dec
jb
arpl
mov
mov
jb
inc
movsl
cmp
add
sub
adc
jle
sbb
outsb
lods
je
int
arpl
hlt
adc
xor
xchg
jbe
fndisi(8087
sub
and
popf
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
mov
notb
adc
movlps
ret
out
sbb
inc
and
sub
sbb
dec
lret
roll
pop
pop
mov
add
add
outsl
leave
leave
and
push
repnz
dec
mov
ljmp
fcomps
fnsave
xchg
sub
int
jae
test
mov
pop
popa
mov
dec
pop
jns
xchg
mov
pop
rorb
cmpsl
mov
dec
ds
insl
sahf
clc
nop
xchg
jge
xchg
into
insl
lods
enter
or
popa
inc
jmp
jae
inc
fcmovb
mov
and
mov
push
lea
cmpsl
cmc
rorl
push
pop
dec
es
mov
push
imul
bound
fidivs
shr
push
pop
mov
pop
xchg
lods
mov
inc
xchg
xchg
iretw
aam
outsb
cmpsl
jp
lea
sub
ret
pop
pop
fidivs
lock
jmp
inc
lret
pop
scas
std
in
jl
mull
lds
mov
sub
bound
imul
xchg
je
pop
fists
ds
xchg
lahf
xchg
push
add
add
stos
loop
fidivrs
mov
mov
out
add
aad
or
xchg
pop
ret
cltd
in
push
loope
ljmp
mov
aad
dec
push
outsb
push
push
loope
fs
push
push
nop
cmp
fs
test
movsl
adc
add
lea
mov
jae
adc
inc
test
add
push
testl
aas
cs
mov
loopne
pusha
test
out
notb
dec
fs
int
xchg
dec
xor
rcrl
pusha
stos
push
sahf
adc
outsb
dec
push
or
out
add
repz
cs
insl
dec
mov
sahf
out
jmp
sbb
insb
jg
sub
stc
cmp
sti
fmull
dec
ret
dec
mov
mov
ret
mov
mov
xor
mov
mov
lahf
icebp
hlt
xlat
xor
xor
mov
imul
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
xlat
ret
das
mov
adcl
ljmp
pop
xor
jecxz
icebp
adc
les
adc
xor
gs
cmp
sub
jl
clc
mov
mov
cltd
push
stos
shrl
fistl
fcmovne
adc
fdivrl
cwtl
xchg
mov
leave
xchg
lds
ror
mov
pop
jmp
cwtl
dec
lsl
sbbb
add
adc
fwait
sahf
insb
in
fstpt
cwtl
cmp
pop
aad
xor
xor
dec
fildll
mov
inc
and
mov
aam
mov
mov
mov
adc
into
and
inc
lea
mov
shrl
ffreep
mov
cld
out
ret
mov
xor
int
gs
or
fstpl
dec
adc
pop
mov
jnp
and
or
jae
fdivs
cli
xor
ffree
add
push
dec
sarb
mov
imull
ds
mov
das
inc
ss
cmp
or
bsf
jne
mov
add
lahf
dec
mov
and
cmp
loop
movsb
cwtl
cmp
das
or
or
xchg
loope
out
cmp
mov
mov
in
mov
sti
aam
lcall
pop
jl
stc
sub
cmp
movsl
sbb
in
pop
cmp
pop
aad
xchg
cmp
cmpsl
push
fstpl
pop
rcll
loop
mov
xor
or
push
jg
fwait
mov
cmp
push
sbb
loopne
ds
adc
add
les
xchg
sbb
std
push
lret
adc
and
inc
pushf
xlat
push
ja
outsb
aad
and
test
jl
xor
int3
stc
in
pop
fldt
imul
mov
ss
aad
mov
outsl
jns
cmp
stc
xor
sti
imul
push
cmp
mov
xor
sahf
pop
or
or
fisubs
push
shl
loop
pop
xchg
mov
nop
cs
mov
enter
test
push
mov
rcrl
pusha
cmp
dec
test
ja
mov
fsubs
fwait
xchg
out
add
dec
insl
jl
in
lods
xor
sahf
stos
add
bound
add
mov
cli
lock
adc
jnp
inc
sub
mov
cmp
loop
adc
les
cmp
rclb
addr16
call
imul
adc
ja
jp
gs
mov
xor
jl
repz
mov
mov
aam
data16
fstpt
jbe
pushf
aas
mov
cwtl
loopne
es
lcall
lods
dec
pop
jmp
add
inc
dec
push
sub
mov
sbb
and
movsb
or
sbbl
mov
add
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
arpl
jmp
adc
fistps
outsb
sbb
xchg
or
in
add
test
and
inc
cmp
fdivrs
jle
adc
cmp
int3
mov
sarb
pop
or
sbb
cld
lock
mov
rorb
rclb
push
sahf
cmp
inc
adc
bswap
ss
jne
in
mov
mov
and
mov
dec
or
loopne
pop
mov
jecxz,pn
hlt
test
cwtl
adc
add
or
sbb
gs
in
mov
in
insb
jp
cmp
adc
ja
push
mov
enter
insb
and
jl
sub
cmp
fnstsw
xchg
cmp
adc
pop
mov
or
dec
dec
rcr
lcall
pop
aaa
xchg
shr
mov
aad
aad
sbb
sub
or
add
loop
push
rcl
in
push
dec
xor
mov
aad
jp
or
fucomi
iret
adc
int3
sub
aas
addr16
or
rcrb
jp
lds
shr
xchg
dec
mov
add
pop
cmpsl
incb
insl
sub
add
sub
cmp
iret
jne
xlat
jns
push
add
ljmp
aad
add
push
lods
addr16
sbb
push
data16
repz
or
jg
mov
jecxz
inc
pop
sub
and
sbb
pop
mov
in
sub
test
mov
xor
ljmp
mov
jno
arpl
mov
mov
stos
add
imul
jp
icebp
mov
stc
je
adc
add
pop
mov
mov
jae
dec
and
mov
ds
fcmovnbe
in
cmpb
pop
push
ljmp
push
xchg
loope
fs
sbb
loop
mov
cli
into
les
sub
cwtl
ss
push
adc
xor
sub
jmp
dec
xor
mov
test
test
xor
popl
jge
js
mov
pop
lret
add
mov
out
mov
dec
dec
sbb
sub
pushf
push
pop
movsb
and
ja
repz
icebp
sbb
dec
pop
sub
xchg
sbb
fucomi
sub
adc
pusha
mov
xorl
ret
adc
mov
ret
test
ret
cmp
lock
mov
movsl
test
sbb
nop
sbb
dec
fbld
sub
mov
adc
lahf
adc
popa
jnp
pop
popa
mov
lods
push
cmp
sbb
sub
add
aaa
dec
dec
insl
sbb
cs
and
test
lcall
add
fmul
aaa
push
inc
lcall
outsb
movsb
test
clc
mov
mov
fistl
xor
jmp
rcrb
dec
cmp
jle
adc
inc
clc
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
mov
adc
jo
adc
cltd
lods
xor
cmp
pop
dec
imul
dec
frstor
es
jl
add
stos
fisubs
dec
push
sub
pop
mov
push
xor
xchg
sub
imul
repnz
out
ret
mov
adc
pusha
insb
mov
xor
aaa
das
jb
push
pop
mov
scas
aaa
mov
dec
add
mov
gs
mov
mov
call
add
dec
stc
es
nop
push
push
sbb
xor
add
jbe
imul
test
je
imul
mov
fisubrl
xor
or
fcmovb
les
cmp
cmp
sbb
jb
out
faddp
dec
jo
test
in
daa
cmp
aas
out
sub
imull
mov
xor
adc
addr16
popa
jle
stos
in
addr16
cmp
add
mov
sub
xor
sahf
insl
xor
inc
mov
sub
cmove
push
adc
push
andl
xor
stos
xchg
fldt
out
push
outsl
repz
imul
imull
and
push
cwtl
mov
cmp
jecxz
fsubp
sti
inc
movb
xor
adc
ds
int
outsb
pop
push
mov
adc
mov
stc
nop
cmp
add
mov
imul
inc
sbb
stc
test
stc
cmp
mov
cmpsb
cmp
cmp
mov
pop
loop
cmp
adc
fisttps
repnz
xor
fimull
push
aad
inc
scas
test
and
repz
daa
xchg
push
or
dec
stc
inc
add
int
mov
mov
add
push
sti
in
mov
xchg
repz
fldcw
lea
xchg
fiadds
sub
mov
cmp
addr16
fiadds
and
push
test
mov
testb
inc
fistpl
xor
dec
jnp
add
orb
push
cmpsl
stc
pop
das
movsb
pop
jb
add
ficomps
or
int
icebp
pop
inc
outsl
lret
or
cs
or
and
cs
pop
sbb
std
bound
mov
mov
adc
add
jns
sbb
mov
mov
pop
dec
fdivrs
and
loop
cwtl
lcall
ret
decl
sbb
xchg
and
outsb
cmpsb
lcall
push
adc
fistpll
push
push
cmpb
cwtl
call
fsubrs
pop
mov
lahf
test
scas
mov
mov
mov
test
neg
push
mov
push
insl
jl
xchg
ja
cmp
es
ret
sub
jo
jae
adc
mov
pop
repz
aad
aas
mov
mov
lods
inc
test
lret
mov
popf
mov
cwtl
push
push
sbb
jge
cmpsl
cwtl
cmc
add
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
mov
adc
jo
adc
and
test
adc
pop
pushf
std
pop
ret
lcall
jnp
js
addb
xchg
inc
icebp
push
cld
sbbb
shrl
popf
int
xchg
push
add
lahf
adc
add
jmp
iret
movsl
sahf
pop
call
movsb
lret
dec
xor
dec
inc
jbe
out
mov
dec
scas
test
outsb
adc
fs
je
mul
xchg
jg
shll
mov
and
jl
stc
imul
in
add
jle
daa
mov
stos
negb
inc
imul
xchg
mov
loope
xchg
std
inc
loopne
jno
daa
jg
data16
mov
aam
xchg
mov
nop
xor
pop
push
and
loop
movb
popa
popf
jne
fldl
gs
sti
mov
aam
loope
sbb
xor
ret
imul
cmp
mov
pop
mov
xchg
fistpll
pop
cmpsl
push
into
jbe
cmpsl
adc
xchg
mov
nop
idiv
xchg
mov
popa
adc
aas
in
lods
fnstcw
fistpl
pop
sub
loope
mov
add
sub
mov
adc
lcall
lahf
sub
popa
xchg
and
and
sbb
loopne
lods
jmp
add
setle
adc
dec
jmp
loopne
cli
push
outsl
pop
xor
clc
push
call
mov
incb
loop
adc
fcoms
push
cli
pop
sbb
and
mov
adc
movsl
ja
cmpsl
pop
loop
test
cmp
dec
mov
inc
mov
pop
sbb
xadd
stos
stos
cmp
and
ret
fsubs
push
cmpsl
imul
rcrb
add
sbb
inc
fcmovne
mov
orb
jae
fnstenv
pop
sub
jmp
and
ret
push
das
mov
xchg
cmpb
scas
je
inc
setb
inc
sub
addr16
cmpl
xchg
sbb
and
mov
fsubl
clc
popf
ror
fmuls
cmp
iret
sbbl
popf
int3
push
rcr
push
ficoms
pop
mov
sub
sub
out
pushf
int3
jo
test
aam
in
ret
add
fwait
xor
cmpsl
in
cltd
ss
data16
in
inc
xchg
insl
mov
add
or
mov
scas
call
xor
inc
aas
aaa
or
jnp
mov
clc
in
outsb
lods
lds
sub
fnstcw
test
mov
inc
addr16
jmp
gs
cmp
xchg
jmp
cmp
pop
rorb
push
imul
push
xchg
test
jne
shrb
xchg
lock
int
jmp
mov
int3
inc
adc
push
or
add
scas
scas
add
ss
fmul
aas
call
xor
inc
inc
ret
mov
cmpsl
lahf
cmp
xor
lcall
or
imul
mov
xor
loope
test
jge
push
mov
flds
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
subl
adc
scas
outsb
fwait
loopne
movsl
sub
fsubp
das
popa
xor
mov
loopne
fldcw
jno
jge
dec
xchg
adc
clc
out
sar
or
in
stos
es
mov
mov
sbb
cld
inc
push
cmpsb
outsb
ss
lret
inc
out
inc
rcr
sub
cmp
or
cld
fwait
inc
push
dec
cmc
xor
adc
mov
imul
add
sbb
push
or
push
sbb
leave
outsl
int3
cmpsb
stos
mov
pop
mov
mov
inc
les
ffree
xor
pushf
mov
or
cs
jecxz
pop
inc
dec
cmpsb
jnp
cmp
and
xor
pop
mov
xchg
or
jb
imul
icebp
ret
out
notb
insl
pop
xchg
xor
scas
cmpsl
iret
sbb
jl
dec
sub
movsl
iret
mov
add
int
and
int
add
hlt
mov
mov
push
or
movsb
mov
adc
stc
lods
mov
sub
inc
mov
test
ror
mov
flds
fsubrs
fidivrs
scas
jne
popa
jg
sub
dec
pop
fbstp
jle
pop
and
insb
or
icebp
and
cmp
andb
ret
inc
fs
stos
popf
popa
push
adc
std
scas
and
or
inc
aas
inc
cmp
pop
push
mov
scas
mov
jae
dec
lret
loop
mov
adc
lret
mov
cmc
mov
popf
pop
pop
cmp
je
push
repnz
xchg
add
and
mov
push
dec
mull
loop
fucomi
int3
sub
add
aaa
fadds
cmp
xlat
mov
stc
cmpsb
pop
inc
push
pusha
jae
test
xor
inc
js
add
mov
fildll
lods
dec
aas
pop
fwait
inc
xor
std
cltd
repz
jge
jne
mov
xchg
mov
push
and
subb
aam
popf
xor
popa
and
icebp
fyl2x
mov
adc
fisttpl
add
outsb
inc
dec
pop
xchg
dec
add
dec
inc
lds
push
int
cld
xchg
add
mov
int3
ja
out
loop
cli
push
jge
adc
mov
aam
add
outsb
mov
scas
sbb
fstpt
jb
lds
ret
icebp
bound
mov
scas
in
push
popa
cmpsl
add
pop
push
pop
insb
shrl
sbb
clc
jmp
add
adc
inc
xchg
mov
mov
cld
in
insb
int
arpl
push
test
and
and
mov
xor
mov
push
leave
sarb
lods
mov
push
xor
in
arpl
icebp
mov
sub
inc
push
je
dec
popa
rorl
push
icebp
shrb
dec
inc
stc
dec
xchg
gs
repz
jne
sub
cmpsl
or
mov
sbb
sahf
jbe
add
mov
pop
mov
sub
lahf
jl
bound
imul
repnz
pop
pavgw
leave
insb
and
sbbb
xlat
ror
sub
insl
mov
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
add
cwtl
lods
cli
lret
adc
jo
adc
cmpsl
in
sti
xor
addr16
inc
mov
sub
xor
cmpsl
out
push
out
pop
jmp
subb
ja
imul
stc
je
outsb
xchg
xorl
pop
xlat
add
dec
in
mov
fiadds
push
jae
fucom
fwait
iret
es
cmpsb
nop
loopne
or
xchg
jo
aaa
push
pushf
dec
push
xchg
xchg
sbb
jl
je
pop
pop
sub
sbb
push
jns
aam
repnz
arpl
inc
jbe
enter
or
push
or
push
js
pop
daa
sahf
mov
mov
icebp
mov
out
jno
jmp
mov
push
lcall
cs
inc
in
push
repz
mov
enter
jmp
rorl
adc
scas
inc
sahf
xchg
push
aad
dec
ja
rorb
pop
dec
inc
push
js
nop
data16
sub
mov
ds
or
xchg
add
adc
inc
pusha
fistpl
fadds
aaa
fdivs
cld
mov
cmp
dec
cmp
addl
fucomip
dec
ficoml
scas
sahf
and
lahf
test
dec
and
fprem
sub
inc
out
or
cmpsw
sub
push
call
stos
jne
mov
pop
xchg
orl
xchg
adc
xchg
jo
fcompl
ret
mov
mov
sbb
loope
lahf
rcr
mov
sbb
xor
push
or
mov
xchg
nop
rep
pop
cmp
mov
lds
fimull
mov
push
sub
jecxz
ljmp
ja
xchg
push
jl
adc
add
leave
xor
or
sbb
mov
sub
iret
pop
enter
inc
lcall
shl
into
clc
in
iret
dec
inc
jp
int3
cmp
xlat
cmp
add
mov
inc
dec
xchg
dec
int
outsb
mov
loop
xchg
ljmp
frstor
cli
pop
add
ret
sub
shlb
cmp
fnstenv
imull
jle
push
sahf
cld
dec
push
mov
and
repz
pop
insl
fcomp
add
es
aaa
sub
push
cmpsb
dec
les
inc
insb
sbb
adc
shr
iret
gs
adc
sub
cmc
clc
aad
and
inc
pop
lods
inc
jp
mov
js
out
addl
insb
es
insl
test
fyl2xp1
aam
push
jl
daa
and
fincstp
dec
mov
in
cmp
je
xchg
xchg
jbe
enter
cli
push
es
cmpsb
mov
lcall
push
dec
push
pop
sar
std
xchg
add
and
push
sub
mov
push
xor
xor
sbb
fwait
test
push
addr16
cwtl
sub
sub
lds
sbb
xchg
push
pop
jno
nop
fidivrs
fisubs
push
and
inc
into
xor
pop
loop
lock
bound
sarl
repz
sub
les
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
shr
sahf
loop
mov
pop
add
nop
mov
mul
pop
inc
push
add
test
add
ja
dec
push
ss
jg
and
inc
or
jnp
imul
mov
mov
scas
jmp
sub
addr16
inc
dec
and
xchg
jae
das
mov
mov
cwtl
xor
aad
scas
cmpsb
mov
sahf
pop
xchg
hlt
jmp
push
mov
xlat
or
jmp
test
lds
xor
scas
gs
cmc
xor
xor
mov
or
push
outsb
movsb
mov
ret
push
sub
xchg
mov
test
stc
dec
ret
mov
jmp
clc
xchg
xor
mov
lret
cs
sub
xor
cmc
xor
jge
xor
fs
jbe
pop
aaa
push
and
daa
fldenv
iret
pop
push
rcrl
pop
pop
mov
ficompl
fcmovnb
cli
dec
int
xor
push
xchg
cmp
pop
sbb
das
xchg
icebp
xor
sub
repnz
mov
int
mov
or
int
insl
push
push
jno
out
aam
inc
sub
mov
js
js
xor
aad
sbb
sti
mov
inc
mov
push
adc
incl
xor
stc
lret
into
fucom
movsl
pop
dec
add
and
in
loopne
mov
jge
sbb
sbbb
cmp
lea
test
out
into
out
push
sbb
sub
ljmp
stos
andb
xor
in
bound
mov
xchg
movsl
mov
fiaddl
sbb
insb
scas
or
mov
outsb
and
aam
in
popf
mov
mov
dec
in
push
imul
int
enter
cli
loop
rcl
add
iret
push
pop
cmp
cmp
adc
xor
or
sbb
fnstenv
lods
adc
mov
mov
ljmp
jp
jb
inc
decb
iret
cmp
sub
ja
lret
pushf
shlb
dec
fnstcw
inc
rcrl
orl
xor
mov
test
dec
mov
notl
movb
sub
aad
adc
pusha
xchg
cmc
in
pop
lret
loope
sbb
mov
orb
movnti
jo
into
mov
adc
push
outsb
mov
ret
lcall
loopne
cs
mov
inc
xor
mov
das
in
mov
out
pushf
fnstenv
sub
iret
jp
add
and
xchg
sbb
fsubs
add
mov
das
ret
mov
test
addr16
icebp
sbb
push
xor
mov
sub
fldt
sbb
mov
jne
fnstcw
xchg
jmp
push
jbe
rcrl
insl
mov
mov
xchg
mov
test
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
dec
add
push
rcll
jo
adc
adc
jl
jmp
in
cmp
push
push
outsb
test
xor
push
push
fmull
sub
mov
push
mov
push
mov
adc
pop
pop
scas
psllq
cmp
push
push
cld
jmp
jns
mov
or
ss
add
dec
pop
test
fptan
cmp
sbbl
mov
dec
mov
dec
add
inc
or
mov
gs
pop
xchg
sub
mov
in
lahf
mov
daa
push
roll
je
nop
out
push
mov
outsb
pop
jmp
arpl
pop
lods
loopne
pusha
cwtl
es
outsl
cmp
cmp
and
cmp
or
mov
cltd
cmp
enter
push
add
xor
shlb
fnstcw
add
cs
pop
clc
jle
dec
rcl
lahf
inc
push
jns
aas
repz
je
pop
inc
aaa
inc
js
sti
out
mov
jg
mull
hlt
mov
mov
iret
mov
mov
push
in
cs
jno
mov
ret
xor
mov
push
jbe
add
inc
rcll
out
push
das
mov
sti
jae
stos
ss
cmpsl
loop
imul
push
dec
shlb
les
inc
and
icebp
in
stos
nop
cltd
jne
je
add
aaa
in
sbb
sub
pop
lahf
sbb
mov
in
sbb
push
mov
mov
inc
pop
ljmp
pop
dec
xor
aaa
pushf
xor
out
mov
aam
dec
mov
sub
and
mov
in
lret
je
stos
lret
xor
sub
or
mov
rcl
add
jp
lcall
leave
scas
fwait
int
jmp
fists
imul
clc
jecxz
adc
data16
push
xor
sahf
shlb
hlt
inc
jo
das
orb
pop
insl
movsb
pusha
jmp
in
negl
mov
enter
inc
out
ficomps
xor
adc
pop
mov
roll
adc
pop
pusha
sti
inc
inc
out
adc
pop
mov
fistpl
mov
xlat
xchg
fs
idivb
or
aas
jp
inc
push
push
pop
insl
jbe
push
and
push
enter
push
lret
xchg
dec
fwait
and
xchg
clc
cmp
out
lret
cmpsl
cmpsb
mov
ss
ds
jl
xchg
in
pop
push
loop
mov
cmp
pop
sti
xchg
aam
repz
dec
inc
or
jne
leave
add
dec
dec
in
xlat
mov
mov
addl
and
push
or
nop
scas
fnstsw
add
jmp
sbb
and
movsl
xor
mov
cmpsb
loopne
jo
fsubl
xchg
xchg
mov
sbb
lret
mov
mov
and
inc
mov
repz
jmp
addb
cwtl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
push
sahf
push
push
mov
adc
adc
ljmp
xchg
aaa
js
sbb
sub
pop
and
jle
xchg
int
adc
aaa
stos
pushf
mov
dec
xlat
pop
stos
sub
pushf
sbb
iret
cmp
out
cmpl
std
sbb
adc
mov
icebp
and
sbbb
pop
ja
lods
dec
out
pop
add
jno
mov
mov
mov
mov
cmp
and
adc
jbe
mov
push
jo
mov
sbb
fucomip
sti
aas
outsb
movsl
sbb
movsl
xor
rcl
das
push
push
mov
mov
dec
in
add
cmc
dec
cmp
mov
mov
push
fidivrl
notl
push
pop
pop
cs
fsubs
rorb
and
loope
and
es
into
jecxz
sbb
sub
in
mov
fldl
xchg
ds
repz
insl
stos
data16
dec
int
ret
cmc
push
mov
int
mov
popf
cmp
mov
iret
xchg
das
and
push
or
push
sub
in
mov
cmpsb
ret
in
mov
daa
sub
lods
les
xchg
jp
add
lock
jge
arpl
mov
popa
fnstcw
fs
test
or
shrl
cmpsl
data16
mov
imul
out
xchg
push
push
jno
hlt
scas
lea
lods
stc
or
cmpsl
push
fcoms
jb
sti
push
xor
jo
pop
mov
cmpsb
cltd
repnz
es
sti
fisubl
mov
adc
outsb
cmpl
dec
mov
stc
pushf
sbb
pop
imul
andl
cmp
sub
mov
and
add
or
mov
fs
inc
xchg
push
icebp
xchg
mov
arpl
sbb
pushf
test
addl
pusha
cmp
movsl
cli
insl
push
fcomps
mov
cld
jbe
push
inc
loopne
sub
dec
mov
ror
push
mov
mov
add
fwait
mov
in
rdtsc
xor
mov
js
jecxz
cmp
inc
arpl
pop
mov
push
and
and
cwtl
pop
xchg
dec
test
sub
jmp
ja
fs
jecxz
xor
test
lret
add
js
pop
adc
add
lahf
das
hlt
xchg
scas
xchg
pop
mov
js
mov
mov
mov
jno
cmp
cmp
lods
daa
shlb
repnz
add
push
test
sbb
jae
cmc
mov
insb
lret
bswap
add
mov
mov
sub
mov
popa
jb
into
out
enter
sub
jge
push
push
jge
add
nop
mov
and
xor
mov
test
dec
or
inc
dec
adc
xor
bound
out
lret
cmp
test
lahf
lret
add
jne
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
inc
ljmp
jge
inc
maxps
inc
test
inc
test
pop
adc
lret
cmpsl
jbe
add
imul
lock
xchg
aaa
fs
xchg
cmc
ss
int
and
popa
adc
push
imul
outsb
jmp
std
dec
out
mov
inc
mov
sahf
repnz
xchg
decb
mov
inc
add
in
es
cltd
add
stc
jne
fs
sub
mov
cmp
js
push
cmp
scas
push
gs
pop
outsl
jg
mov
fidivrl
pop
and
clc
mov
mov
scas
leave
inc
mov
dec
imul
inc
xor
dec
out
xchg
data16
jnp
cmp
add
aad
xchg
out
pop
adc
popf
pop
push
add
jnp
imul
clc
inc
dec
pop
ss
mov
xchg
pop
call
popa
in
out
inc
fbld
rcll
xor
fstpl
rolb
jae
inc
dec
mov
mov
sbbb
inc
cmp
cmp
fs
xor
stos
mov
je
jle
push
pushf
cmpsb
sub
mov
jge
sub
in
bound
mov
aad
movsb
ss
mov
test
mov
push
cmpsl
cwtl
or
inc
pushf
xor
push
call
idivb
lfs
push
push
subl
mov
xchg
add
mov
cmpsl
mov
dec
gs
test
and
mov
fdivs
dec
jnp
pop
shll
push
bound
out
pop
outsl
into
in
mov
mov
pop
leave
dec
ret
mov
cmp
mov
shld
mov
pusha
lea
jns
mov
mov
add
dec
and
mov
test
mov
push
mov
movsb
notl
adc
cmp
cmp
fistpl
dec
mov
push
push
fcmovu
cwtl
rolb
mov
cvttps2pi
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
pop
xor
imull
adc
rorb
sbb
and
mov
dec
cmp
ret
push
mov
and
aad
loopne
cmpsb
repz
lds
inc
jno
enter
jo
and
iret
lods
test
repz
add
adc
mov
pop
jo
dec
mov
rcll
inc
cmpsb
adc
inc
das
or
popf
push
inc
push
les
sub
loopne
ja
pop
pop
push
cwtl
push
movsl
loopne
out
loopne
das
shll
sbb
jp
sbb
jns
leave
rclb
xor
push
loopne
mov
sub
push
enter
lret
scas
pop
lret
mov
jle
sub
int3
push
testb
leave
fildll
loopne
mov
leave
loop
push
adc
pop
div
push
cmp
jp
dec
cltd
iret
insl
ja
dec
xchg
in
jae
out
icebp
pop
add
mov
rorl
int
addr16
lods
movsb
xor
into
dec
xchg
inc
cmpsb
pushf
push
cmpsl
es
data16
rorl
roll
fimuls
push
call
lret
add
inc
mov
and
shrb
fstpl
push
or
rcl
repnz
aaa
movsb
inc
mov
xchg
push
movsl
adc
mov
pop
out
pop
out
add
cmp
sub
xchg
xchg
mov
jo
mov
mov
icebp
aad
addl
test
or
ds
clc
jecxz
mov
sbb
add
sbb
idivb
jb
popa
push
ss
aas
cmp
ret
cld
mov
jbe
outsb
mov
mov
scas
movsb
sbbb
mov
jb
fnstenv
dec
cli
negl
mov
cmp
std
push
lahf
addr16
fldt
or
or
sti
inc
mov
sbb
fcmovne
jns
jmp
into
add
mov
sbb
pop
ljmp
fnstsw
ss
xchg
inc
pop
xchg
push
movsl
mov
outsl
test
fidivl
aas
mov
adc
add
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
xor
js
cmpsl
adc
stos
movlps
xchg
jo
loope
or
out
call
jle
push
mov
bound
inc
cmp
mov
negb
inc
ja
lods
cmc
clc
idivl
jecxz
dec
daa
dec
lock
cwtl
xor
jb
fwait
popa
xor
lret
dec
lahf
out
popf
mov
mov
cmp
mov
in
or
insb
popf
inc
xchg
sub
js
cltd
frstor
rcl
leave
scas
xchg
cmp
call
inc
pop
xor
mov
add
push
loope
and
repnz
push
int3
cmpsl
test
dec
cmp
hlt
or
mov
cmpsl
xor
bound
mov
andb
cmp
popa
mov
sub
into
jmp
mov
adc
mov
inc
push
lahf
add
test
in
add
sbb
dec
imul
dec
icebp
dec
xor
mov
fcom
push
dec
and
stc
movsl
fidivrl
mov
add
jno
mov
repz
add
dec
cmp
mov
sub
sub
mov
hlt
leave
mov
je
fiadds
rcrb
ret
pop
adc
rorl
or
into
and
fsubrp
pop
testl
jb
or
cwtl
sub
and
cmp
dec
ljmp
shrl
aad
or
adc
outsb
stos
mov
addb
mov
das
sbb
push
subb
sub
sub
and
jecxz
cmp
mov
aas
adc
idiv
rcr
and
push
test
sub
sbb
stos
inc
cmpl
sbb
roll
push
push
int
inc
and
adc
test
mov
rcrl
jne
inc
mov
mov
push
or
jbe
xor
inc
push
xor
xor
out
add
mov
aas
xor
fmull
cmp
jns
js
cmp
sub
jp
data16
gs
jmp
adcl
flds
fldl
scas
mov
pop
mov
test
mov
mov
rcrl
fldl
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
mov
mov
adc
sbb
sahf
inc
aam
push
decl
xor
arpl
clc
repnz
xor
sub
in
jo
loop
lcall
int3
sahf
clc
add
mov
enter
scas
and
mov
iret
sbb
add
adc
repz
rol
inc
in
arpl
and
dec
mov
scas
pop
gs
jmp
in
out
xchg
rorl
dec
int3
lea
out
int
nop
mov
pop
sbb
xor
push
dec
std
sub
push
mov
push
push
adc
push
and
xlat
xchg
clc
cmp
stos
or
mov
xchg
hlt
add
and
stos
mov
cmp
stc
shrb
imul
incb
je
and
fnstenv
sti
aas
sbb
xchg
es
stos
test
sbb
xchg
aas
rolb
mov
push
pop
inc
sti
push
nop
stc
dec
out
inc
decb
jecxz
pushf
add
jp
and
adc
fsubrs
pop
mov
loop
in
iret
out
out
cs
jg
and
and
ja
cltd
out
shll
insb
les
adc
xchg
cmp
clc
icebp
mov
or
sub
or
in
xchg
ficompl
xchg
cli
sbb
scas
sub
mov
ss
sub
add
shrb
int3
int
cld
mov
test
mov
cmc
test
inc
mov
xor
and
inc
aas
push
cli
mov
clc
inc
jg
adc
fldl
lahf
aad
jmp
push
fistl
push
leave
fisttpll
mov
in
adc
sbb
jp
xchg
cmpsl
mov
lods
jb
jo
xchg
sbb
shll
sbbl
jae
aad
adc
hlt
in
sbb
mov
cmp
rcl
adc
adc
pop
push
adc
xrelease
movsl
pop
push
add
pop
pushf
sarb
mov
imul
jno
fdivl
add
mov
push
stos
cmp
adc
in
sbb
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
test
sbb
stos
movlps
mov
cmp
xor
repnz
mov
into
jg
cmc
and
sub
inc
mov
roll
xor
fcomps
pop
aam
lock
lahf
loop
movsb
sub
nop
push
pop
cmp
xor
fwait
jecxz
out
shr
push
dec
mov
shll
gs
call
arpl
jg
mov
or
repnz
xchg
sarb
push
cmpsl
ljmp
cli
lds
add
xchg
adc
cmp
and
lds
and
push
inc
cli
adc
imul
pop
movsb
js
shlb
movsb
xchg
inc
sahf
out
cwtl
clc
call
and
adc
fisttpll
test
pop
scas
adc
out
xchg
jge
test
ret
ljmp
addl
fldcw
pop
pshufw
ds
mov
into
aaa
das
stos
adc
ljmp
repnz
xchg
imul
ljmp
adc
lcall
xchg
arpl
out
sub
sbb
ffreep
js
inc
jmp
fs
in
psllw
shr
jbe
scas
rol
xchg
dec
mov
push
mov
pop
aas
insl
inc
jl
push
stos
into
clc
test
xor
pop
aas
inc
das
cmpsb
lock
fs
rol
mov
adc
test
jp
in
ja
ljmp
icebp
and
jg
imul
lcall
std
jmp
jge
inc
xor
scas
outsl
ss
outsl
mov
outsl
sbb
std
in
add
lcall
fmuls
outsb
dec
ret
shlb
xchg
cltd
add
aam
mov
or
mov
sbb
dec
pop
sbb
or
mov
jg
jmp
jmp
and
ja
fs
pop
in
cwtl
sbb
in
or
mov
and
scas
nop
cld
add
xor
es
xor
pop
repz
or
cmpl
lret
inc
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
loop
aad
xchg
sub
ds
or
and
or
pop
jmp
push
test
sub
jg
jnp
mov
mov
xchg
pusha
outsb
les
mov
pusha
mov
enter
ja
xor
movsb
cmp
outsl
push
test
emms
xlat
repz
sbb
jb
inc
jl
adc
ss
insb
xchg
nop
aas
push
repnz
test
test
fcmovnu
lret
ljmp
stos
stc
mov
adc
dec
dec
push
xorb
cltd
xchg
push
cmp
xchg
inc
pop
aad
mov
mov
outsl
sub
sub
push
pop
ret
and
rcrl
bound
cs
out
in
pop
lea
push
fcompl
lods
mov
pushf
pop
lods
jbe
in
xchg
or
mov
cmp
aas
ffree
nop
aad
movsb
jns
inc
loop
gs
cmpsl
or
cmp
ret
push
sbb
mull
fcmovb
add
fistpl
enter
mov
js
mov
clts
call
push
fadds
mov
sbb
dec
cmp
xadd
push
repnz
iret
dec
loope
mov
xchg
or
inc
push
lret
push
push
cli
roll
ja
sub
jno
cmp
sarl
lods
lret
repnz
or
imul
or
lret
ss
rol
pop
aad
mov
aaa
xor
popa
pushl
in
out
jg
jns
mov
xor
push
pop
cmc
push
stc
add
and
jbe
andb
das
clc
pop
push
mov
shrb
int3
rcll
dec
ja
cld
ljmp
dec
je
add
sbb
outsl
and
xor
aas
inc
stos
add
xor
pusha
xchg
scas
xor
arpl
push
test
adcl
popa
pushf
pushf
loop
int3
cwtl
mov
jl
leave
ds
or
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
arpl
insb
inc
dec
leave
sbb
ljmp
cmpsb
push
pop
call
mov
mov
outsb
test
mov
daa
xchg
pop
out
andl
push
lds
aaa
pop
jecxz
repnz
clc
test
je
jle
dec
lret
pop
xchg
jno
or
pop
fnop
add
push
rolb
mov
jl
in
std
stos
pushf
push
cmp
jo
jno
dec
cld
popf
cmpsl
cmp
xor
test
jp
add
push
cs
cmp
sbb
subl
push
jno
lods
or
xchg
add
mov
sbb
imul
sarb
out
fucom
push
xchg
test
cli
stc
test
les
fsubp
ljmp
sbb
hlt
filds
pop
or
gs
xor
lock
or
frstor
rdpmc
push
xchg
out
pop
add
bound
jmp
lods
std
adc
test
xchg
sub
push
xlat
movsb
add
neg
mov
leave
mov
lcall
enter
adc
xor
int
fnstsw
adc
rsm
outsb
xchg
pop
cmp
roll
push
cwtl
sbb
and
fisubrs
ljmp
cmpsl
jle
sbb
pop
dec
out
mov
pushl
lret
add
jae
pop
fs
xchg
inc
lds
ljmp
and
sarl
push
xchg
imull
adc
dec
arpl
movsl
push
cmpsb
scas
or
pushl
xor
inc
mov
adc
testl
fucomp
inc
in
jno
pop
fsubrs
pop
jp
scas
pop
inc
iret
jne
push
shl
inc
cmpsb
mov
jg
cmpsl
inc
jno
cmc
mov
test
aaa
cmc
out
pop
icebp
adc
pop
out
fadd
xorb
pop
bound
xchg
pop
xor
aad
test
push
stc
sahf
xor
pop
pop
cmp
inc
lods
push
in
cmp
insb
stos
pop
pop
imul
ljmp
inc
mov
cmpsb
jg
pop
sbb
dec
call
fnstsw
sbb
pop
popl
ss
into
lahf
cmpsb
mov
xor
xchg
push
mov
pop
popf
push
mov
sbb
loop
cltd
fchs
adcb
sbb
inc
push
inc
inc
pushf
cmp
mov
pop
lret
push
das
inc
pop
adc
push
fdivrl
pop
lret
test
cmpsl
lcall
scas
cli
sbb
je
pop
xchg
adc
daa
ret
sti
sub
adc
sbb
loope
add
sub
fisttpll
cmp
sbb
movsl
gs
les
lret
sti
andl
negl
cmp
inc
pusha
pop
out
sub
pop
dec
push
sub
and
out
scas
outsl
adc
les
loopne
jg
shl
push
das
mov
xor
lcall
mov
daa
jo
rorb
adc
ret
pop
cmc
xor
pusha
aam
and
loopne
or
inc
mov
int3
std
mov
stos
pop
adc
sbb
jb
cmp
pop
cli
jae
push
pop
dec
rcl
inc
enter
ret
push
repnz
push
sub
stos
cmp
cmp
scas
out
push
fistps
mov
cmpl
cwtl
jns
lods
jne
xchg
push
xlat
movsl
jae
jnp
or
pusha
xchg
mov
test
xor
fistpll
sub
imul
clc
xlat
adc
lret
push
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
iret
xchg
js
xchg
adc
pop
adc
adc
cld
xchg
dec
fs
or
fwait
and
je
fbstp
faddl
jb
cs
enter
jmp
push
lds
lret
xor
mov
scas
add
ret
pop
mov
inc
push
in
cmp
cmp
pop
adc
popa
nop
scas
int3
popa
iret
xchg
mov
xor
fcompl
mov
cmc
leave
imul
out
mov
out
cs
and
xchg
data16
insl
clc
in
call
pop
xrelease
mov
lea
cld
daa
push
and
addl
xor
inc
xor
icebp
out
dec
or
jmp
popa
jmp
fcomip
scas
leave
dec
mov
mov
loope
popf
aas
rcrb
cltd
rolb
jo
add
jmp
loopne
mov
jg
pop
pop
mov
insb
cltd
jle
sti
sti
loope
in
mov
cld
lahf
sub
add
mov
inc
sahf
cmpsb
ljmp
jg
sub
into
outsb
addr16
jl
ds
inc
call
ret
shlb
mov
mov
jnp
stos
inc
out
mov
mov
sub
push
push
sahf
jb
jno
mov
jecxz
aas
jb
push
pop
test
int3
adc
cli
jae
test
mov
xchg
xor
aam
xor
pushf
insb
les
out
push
pop
pop
inc
lret
sbb
mov
dec
outsb
je
lcall
cmp
stos
aas
enter
xor
push
vpsubq
negb
ret
popa
xchg
stc
jbe
je
cmp
pop
push
popa
fnstenv
call
lea
jbe
sub
pop
cmpsb
cltd
adc
ss
jge
xchg
lea
and
sbb
cwtl
enter
mov
fstpt
pop
mov
mov
dec
pop
mov
pop
sbb
daa
test
retw
jle
and
adc
fidivrs
and
mov
jae
fmul
flds
jb
jb
mov
nop
rcll
xchg
outsl
pop
cmpsl
outsb
inc
xchg
sub
dec
sahf
shrb
sub
push
repnz
pop
lcall
stos
mov
and
lea
sub
clc
xor
in
imul
lock
mov
cwtd
inc
cmp
notl
sbb
jmp
aam
or
cld
insl
test
push
mov
mov
xchg
fs
jmp
sub
es
jo
mov
sub
mov
repnz
sub
mov
add
xchg
cmp
cmp
sbb
shll
cmpsl
xlat
cmc
mov
xchg
sub
lods
xor
rorb
stos
pushf
aad
rcl
popf
mov
mov
imul
xlat
pop
jmp
pop
push
pop
insb
jae
push
mov
push
sti
xor
bound
test
adc
mov
mov
sub
sub
mull
setb
sbbb
mov
outsl
add
pop
fnsave
jbe
dec
test
in
out
outsb
cld
movsl
cmp
or
int
shrd
xchg
fcomip
cmpl
push
cmc
or
xor
pop
icebp
add
movsb
or
adc
jle
shlb
out
fsubr
sbb
or
lock
loope
and
xcrypt-cbc
cmpsl
xchg
pop
cmp
cli
jbe
std
cmp
dec
sarb
jns
popa
cmpsl
lcall
adc
mov
les
mov
mov
incl
cmp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
mov
mov
adc
movlps
test
jb
jae
lods
adc
int
addl
ja
push
mov
cltd
cmp
cmc
add
add
sti
mov
nop
movsl
sub
jecxz
in
cld
and
inc
pop
loope
int
jb
pop
sbbl
xchg
cmp
das
in
mov
sti
mov
iret
idivl
lret
dec
push
push
nop
outsl
pop
nop
test
mov
je
lcall
std
aas
pop
iret
and
fsubrp
gs
jbe
cmp
inc
jge
out
add
inc
rolb
sahf
fidivs
inc
mov
es
cmp
inc
mov
cmp
into
jmp
out
out
js
push
jle
and
sarb
outsl
push
xor
lea
xchg
shl
jae
fwait
out
lods
xor
jge
inc
pop
xchg
fadds
sbb
sub
aaa
sti
jmp
jl
mov
ljmp
jne
push
pop
sbb
lret
andb
xchg
or
fld
jb
dec
pop
and
dec
fimuls
pusha
das
int3
and
fs
jbe
mov
sub
pop
mov
adc
xor
fucomi
ljmp
jb,pt
into
imul
cmp
les
and
xchg
xchg
inc
cmp
mov
fbld
pop
adc
xchg
push
or
pop
pop
out
sbb
add
pop
or
dec
xor
loop
lea
or
push
iret
adc
btr
call
sub
mov
adc
pushf
xor
repnz
lock
mov
or
scas
dec
push
cmpsl
cli
add
jmp
add
xchg
je
out
mov
push
dec
xchg
les
mov
shlb
xchg
sbb
pop
lods
or
dec
fsubrp
js
leave
out
adc
int3
ljmp
cmpsl
fucom
out
imul
jb
mov
aas
test
fistpll
icebp
movsl
outsb
aad
pop
rorl
stc
mov
int3
sti
adc
adc
popa
test
scas
test
sub
pop
add
les
jo
cmp
push
out
hlt
inc
test
mov
stos
sbb
sbb
sbb
mov
cmpl
sbb
pop
sarb
pop
mov
sbb
cmp
xchg
les
or
addr16
cmc
in
mov
dec
dec
jb
fucomi
aas
fwait
pop
cld
mov
call
add
sbb
mov
xchg
dec
lret
cmp
mov
jmp
jge
push
xor
std
inc
or
hlt
pop
push
out
stc
in
sbb
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
or
mov
stc
ret
sahf
mov
pop
xor
push
in
mov
dec
jmp
das
push
and
push
int
ljmp
jge
cmp
pop
mov
jg
jp
cmp
mov
xor
cmp
xor
fistl
jae
in
cmp
or
mov
mov
push
xorl
push
lods
xchg
inc
sub
test
sub
arpl
push
mov
les
inc
pop
in
in
mov
jecxz
mov
negl
push
lret
dec
stos
lds
movsl
sub
ret
push
xor
lea
mov
mov
data16
mov
or
add
ljmp
insl
imul
rorl
jns
adc
in
call
fcmovnbe
addr16
push
fisubrs
and
fdivrs
xlat
mov
push
ret
dec
icebp
das
call
aas
xchg
xor
scas
ss
add
andb
ret
pop
ret
push
lock
int
mov
mov
pusha
fidivl
sub
push
aad
push
adcb
xor
sub
ficoml
push
push
bnd
mov
mov
push
jnp
shll
lea
mov
in
jne
in
cmc
and
ds
orb
aam
cli
dec
mov
cmc
and
mov
xchg
inc
mov
aam
std
or
sbb
dec
mov
mov
test
cmp
lret
gs
aam
xor
cmpsb
ljmp
outsl
xchg
int3
lcall
lods
pop
clc
dec
inc
cld
inc
ljmp
cmp
or
and
movsb
fldcw
jmp
cli
roll
out
adc
and
mov
je
les
cwtl
lcall
pop
movsl
dec
mov
sar
adc
lret
out
cs
fisttps
fcmove
mov
sbb
sub
std
add
jb
cmp
add
cmp
jmp
xor
sti
inc
cmp
repz
loopne
dec
cmp
push
aam
jl
aas
sbb
repz
arpl
into
xchg
xchg
jecxz
into
ss
je
add
adc
push
inc
xlat
xchg
daa
das
inc
fisubrs
iret
cmc
ljmp
movb
mov
cmpsb
xchg
and
sbb
cld
dec
data16
xor
popf
movsb
enter
pop
lock
push
fcoml
add
outsb
push
inc
les
les
mov
fucomip
in
mov
inc
sbb
and
enter
pop
jbe
inc
imul
lea
addr16
call
adc
dec
imul
add
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
cmp
jge
adc
movlps
popa
out
out
dec
int
mov
inc
push
fucomp
sub
jns
outsl
mov
dec
movsl
xchg
aad
or
mov
mov
or
sti
or
xchg
sti
adc
dec
fnstcw
cmp
fstp
je
shl
bound
xchg
fnstcw
xchg
cmp
jo
push
je
dec
pushf
test
mov
inc
jbe
ret
hlt
mov
aas
mov
mov
pop
fisubl
adc
enter
dec
repnz
rcr
imul
out
into
xor
call
mov
mull
or
add
xlat
mov
bound
cwtl
fs
pop
jmp
pop
sub
dec
dec
sub
push
sbbb
push
lds
flds
sbb
cmp
push
mov
push
or
in
dec
mov
enter
sub
cltd
pushf
das
sub
out
pop
daa
adc
hlt
pop
leave
xchg
dec
jae
and
movb
sub
popa
pop
jg
sub
leave
pop
pushf
lods
mov
mov
cli
dec
inc
sbbl
gs
lahf
push
inc
adc
or
or
hlt
push
lock
and
movsb
jmp
jo
mov
fwait
out
imul
sub
mov
cmp
push
js
mov
mov
add
clc
jmp
adc
mov
dec
mov
jb
imul
sar
jmp
mov
lcall
daa
push
call
mov
or
sbb
lcall
mov
lcall
rol
inc
adc
je
nop
out
cltd
jmp
out
cld
mov
and
sti
pop
push
flds
push
icebp
cmpsl
xor
cmp
inc
jg
roll
add
mov
lea
enter
test
push
andl
int
push
mov
in
mov
insl
lods
pop
jle
out
jge
adc
idivl
out
les
enter
push
bound
cmp
fildll
fldcw
lds
das
xchg
adc
aas
cmp
xchg
sbb
hlt
lcall
pop
xchg
pop
jb
adc
stc
dec
pop
mov
and
jge
ja
stos
nop
lods
arpl
dec
stos
fldl2t
in
cmpsl
mov
les
push
xchg
repz
sub
xlat
scas
push
mov
and
and
pop
insl
out
xor
mov
int
or
in
test
xlat
dec
incl
adc
stc
lock
movsb
aam
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
pop
push
aam
pop
jae
adc
cmc
loope,pn
inc
aam
or
faddl
pop
add
out
push
sub
mov
mov
add
ficoml
xchg
ja
popa
scas
mov
imul
icebp
xor
aad
cmp
or
cmp
sub
inc
pushf
or
mov
push
mov
sbb
fstpt
arpl
mov
jg
xchg
xchg
int3
sbb
enter
jbe
xlat
xor
sbb
mov
fistpll
or
std
in
enter
dec
fnstsw
push
jb
sub
cmp
lea
cwtl
mov
sarl
sti
mov
add
xchg
adc
out
and
pushf
in
and
movsl
push
cli
push
js
es
aam
stc
hlt
inc
pop
pop
mov
xchg
xchg
sub
or
mov
dec
into
inc
jns
lret
sub
bound
adc
sbb
nop
ror
add
jnp
xchg
out
jae
out
mov
aam
xchg
xadd
sbb
in
fidivrs
jbe
adc
mov
fiaddl
fldenv
mov
mov
jecxz
push
push
sub
int
cli
outsl
cmp
lods
jae
inc
xor
xor
sub
push
mov
imul
sbbb
cmp
mov
lcall
push
notl
xchg
ret
push
out
jle
stos
out
sbb
dec
dec
stos
sub
ficoms
pop
insl
std
jp
cld
dec
pop
movsb
lds
sub
jbe
fistpl
sub
fimull
push
cmp
fs
not
js
push
pop
fsubr
push
enterw
ds
mov
lret
clc
cmp
lahf
mov
pop
adc
sbb
mov
divl
hlt
bswap
stc
mov
into
push
ficoms
test
mov
push
dec
testl
divb
mov
jge
cli
push
mov
cmp
xchg
dec
andl
arpl
icebp
add
lods
rcll
sbb
jle
lea
inc
sub
add
pushf
iret
jecxz
xor
pop
mov
insb
cli
call
inc
sub
inc
xor
sahf
fldcw
sbb
mov
push
cld
sub
cmp
jno
mov
mov
lods
mov
pop
xor
jp
ret
pmulhuw
mov
adc
aam
rol
lds
nop
lods
arpl
movaps
adcl
icebp
push
mov
lock
es
testb
test
mov
out
mov
mov
xorl
jbe
in
popf
adc
jmp
mov
dec
cmpb
daa
bound
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
fnstcw
mov
sti
mov
test
in
pop
out
xor
cwtl
jp
jne
fidivl
icebp
xchg
sbb
pop
mov
and
and
loopne
jle
push
sbb
sub
popa
push
jge
lcall
xchg
mov
jns
pop
mov
gs
push
add
inc
mov
int
fsts
aad
stos
pop
out
jne
out
push
xlat
xchg
cmpsb
mov
dec
pop
add
cli
jnp
fidivrs
adc
in
xlat
xchg
sbb
and
lahf
xchg
push
dec
mov
cmpsb
pop
lds
inc
or
xchg
out
and
lods
cmpsl
dec
roll
jmp
xor
xchg
mov
jne
loope
cli
jmp
mov
jno
pushl
test
subb
xchg
shl
add
scas
fisttps
in
pop
cld
lods
outsb
cmpsl
lock
lds
scas
std
jo
sub
xchg
scas
loopne
inc
jbe
jmp
sti
push
mov
xor
mov
inc
test
ret
or
sub
roll
push
or
or
gs
sbb
dec
mov
cltd
or
mov
lahf
mov
cmp
daa
inc
mov
lcall
cmpsb
ret
sub
ret
cmc
inc
cwtl
jae
iret
push
daa
jno
mov
mov
push
ror
lds
mov
scas
xchg
test
shrb
jo
shrl
xchg
mov
xchg
mov
jecxz
test
ja
inc
jb
scas
pop
sub
dec
repnz
jns
rcrb
add
mov
stos
cmp
sahf
and
push
in
popa
pop
pop
scas
cmp
push
inc
mov
test
cmp
mov
ret
data16
test
nop
das
mov
inc
outsl
and
sti
pushf
pop
mov
test
repz
mov
popa
jbe
mov
xor
xor
fsubrs
sti
mov
add
push
and
and
es
jae
fstl
mov
fimuls
mov
popf
and
call
pop
pop
fnsave
jne
int3
jbe
xor
outsb
hlt
dec
lock
iret
xchg
push
fstps
pop
sub
es
call
mov
pop
mov
pushw
bound
cld
push
leave
mov
out
stos
push
mov
cmp
mov
repz
lret
in
ja
pop
or
fldl
in
sub
shll
in
hlt
loop
test
mov
inc
sbb
daa
call
arpl
sub
sbb
lret
fstpl
fsts
rcll
inc
xchg
mov
ret
pop
inc
pop
aas
push
jns
test
mov
mov
add
ja
mov
ret
rcr
iret
sbb
add
lock
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
dec
popf
mov
adc
adc
inc
cmp
push
jge
icebp
pushf
clc
lahf
out
jl
addl
test
fistpl
popa
call
jae
fwait
and
inc
mov
jb
pop
int
jecxz
notl
mov
cli
dec
stos
insb
add
sub
sub
lahf
mov
jnp
inc
and
inc
push
mov
mov
xor
div
cmpsl
dec
inc
xor
lock
cmp
fimull
icebp
out
fmull
call
cmpl
push
cld
xchg
xchg
into
scas
fldt
in
cmp
std
lock
int
outsb
xchg
aam
stos
in
xchg
sub
add
or
dec
movsl
mov
aas
iret
sbb
fldln2
mov
mov
movzwl
mov
push
out
jbe
insb
pusha
ffree
icebp
ret
outsb
incl
enter
lods
jge
into
jo
xchg
cmp
dec
mov
in
cmc
mov
daa
jno
lods
mov
rcll
xchg
sbb
push
or
sbb
sbb
outsb
mov
push
inc
xchg
icebp
mov
or
mov
and
into
sub
sub
pop
xchg
movsb
hlt
push
mov
insb
push
in
sbb
es
in
ror
push
data16
daa
sarb
or
shrl
sbb
jbe
cmp
mov
xchg
mov
mov
out
dec
mov
sbb
adc
add
insl
popa
pop
jmp
out
pop
xchg
xlat
mov
leave
mov
repnz
inc
push
nop
aad
dec
data16
add
push
jbe
jne
cmpl
cli
bound
sub
push
sti
lahf
cmp
imul
cmp
sub
pop
cwtl
lahf
popf
cmp
mov
jne
cli
pushf
popl
mov
nop
cmp
and
fidivrl
sbb
lods
lea
sbb
movsl
push
xchg
inc
cmc
enter
shlb
mov
addr16
sub
das
das
loop
sub
pop
inc
dec
add
mov
mov
ja
xor
out
sub
rcr
das
test
mov
gs
inc
cmp
xchg
lret
fs
push
mov
jns
pop
dec
inc
out
push
mov
lock
xchg
and
adc
mov
lcall
and
enter
int
sub
or
jb
ss
aam
movsb
sahf
stc
dec
movsl
sbb
xor
mov
adc
jmp
ret
mov
leave
cmpsb
push
adc
push
adc
dec
jecxz
popa
sub
stos
mov
lods
outsl
mov
fildll
push
pop
cwtl
jmp
icebp
dec
or
lret
add
in
test
jbe
mov
cmpsb
rcrb
mov
addr16
sti
fisttpl
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
dec
leave
bound
call
test
dec
pop
push
push
adc
adc
insb
das
pop
stos
add
test
test
scas
lock
std
jecxz
rcrb
lods
mov
ss
cmc
aas
js
jmp
into
lret
fnstsw
cmp
faddl
fisubs
pop
pop
sti
roll
cld
mov
jle
jle
iret
out
xor
mov
gs
mov
shrl
test
cmp
mov
ret
enter
icebp
mov
notl
pusha
adc
mov
dec
outsl
rcrb
flds
fs
insl
into
lds
mov
shl
mov
movsb
jge
aaa
push
gs
aam
daa
pushf
je
xchg
outsb
mov
mov
sti
jns
test
cmc
mov
pop
inc
and
xor
adc
stos
and
adcb
popl
add
sbb
push
wrmsr
jmp
inc
xchg
jmp
mov
mov
in
cld
inc
mov
test
xchg
lret
and
jb
test
push
push
push
mov
xchg
push
out
inc
dec
cltd
out
aam
insl
or
lock
sub
jecxz
sub
into
jl
data16
inc
and
or
fwait
xorb
ficompl
inc
fidivrs
iret
out
dec
sbb
loopne
jae
pop
sub
mov
mov
and
loop
cmp
addb
repnz
mov
xor
subb
jbe
rol
and
imul
cltd
sub
aam
dec
mov
jnp
cld
inc
mov
ds
dec
shll
cmp
cltd
cmp
jo
popf
sbb
arpl
dec
adcb
jb
outsl
mov
mov
push
mov
mov
out
pushf
lcall
jns
jecxz
sar
shlb
sar
xchg
xchg
arpl
loop
mov
and
cmp
mov
xor
in
push
mov
scas
out
inc
aas
push
inc
or
pop
scas
sar
fisubrl
jle
sti
cmpb
rcll
aad
mov
or
mov
lret
pop
fldl
call
ficoms
cs
cmc
cltd
xchg
aas
adc
je
hlt
pop
mov
pop
add
into
ja
nop
popa
stos
push
add
mov
push
mov
mov
jne
mov
fwait
xchg
popa
ds
xor
mov
jno
cmp
sbb
sub
xor
div
jne
xor
dec
repz
inc
daa
add
out
mov
xlat
add
outsl
add
push
dec
out
cmpsb
push
std
je
push
adc
add
mov
xchg
jbe
cmc
popl
orb
jnp
imul
mov
xchg
rcl
cmp
jbe
jno
clc
into
mov
cmp
add
fistpl
cmp
cmp
fisubrl
xor
mov
mov
ja
add
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
jmp
out
stos
inc
pop
adc
jp
adc
ja
cltd
sbb
push
sbb
mov
mov
jl
pushf
mov
adcl
fldl
mov
or
pop
sbb
adc
adc
and
mov
aaa
push
inc
push
sbb
mov
mov
sahf
add
jp
outsb
sbb
xchg
mov
mov
lock
fs
ss
jns
cltd
cld
fdivl
sbb
lahf
jb
sub
popf
inc
call
pusha
adc
and
jnp
jnp
xchg
fstpt
mov
mov
sub
repz
mov
push
test
pop
sbb
sub
inc
ljmp
cmpsl
push
enter
pop
pop
ret
push
movsb
ja
push
xchg
and
movsl
push
jo
push
cmp
adc
push
ss
cmp
scas
pop
xorl
fisttpll
fwait
inc
and
sub
outsl
rorl
mov
sbb
es
addr16
dec
repz
pop
or
dec
xor
add
shrb
leave
rorb
add
pop
push
fildl
loopne
js
scas
push
cmpl
jp
in
mov
pop
xchg
cmp
xor
movl
dec
inc
jle
aam
pop
push
xchg
lret
aam
shlb
xchg
movsl
mov
lea
fdivl
pusha
sub
pop
dec
adc
fbld
lods
popf
mov
les
cmp
mov
lds
lds
inc
in
inc
ss
cmp
adc
sar
enter
and
pusha
imul
stos
loope
sbb
or
jne
and
push
std
mov
add
into
enter
mov
xchg
lods
repz
out
push
movsb
aas
jle
push
mov
push
dec
mov
or
push
cmp
fldenv
rcrl
repz
push
arpl
data16
jno
mov
aam
sbb
jp
xor
test
outsl
sbb
cld
mov
inc
xchg
jecxz
jno
data16
pop
and
or
and
mov
jle,pn
xor
test
fmul
ret
into
lea
adc
mov
loopne
gs
add
jns
hlt
stos
add
mov
call
repz
mov
in
mov
icebp
xchg
push
out
mov
pop
and
inc
sbb
push
out
inc
xchg
repnz
insb
and
aas
adcb
cmp
and
scas
mov
movsb
pop
mov
rolb
jnp
add
dec
mov
xor
xor
jae
popa
shr
jae
sbb
jae
jne
lea
mov
je
rcl
xchg
cmp
das
loopne
inc
push
lahf
or
push
lock
xchg
aam
pop
and
sti
adc
inc
lea
dec
add
sbb
push
subl
jge
into
or
int
xchg
xor
into
cli
lea
pop
lcall
cmp
adc
sbb
jge
ja
xchg
dec
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
and
adc
jp
adc
sub
cmp
repnz
cmpsl
rorl
sub
pop
mov
push
enter
movsb
jmp
mov
dec
in
addr16
pop
xchg
sbb
dec
and
into
pop
movsl
push
xchg
mov
sub
sbb
std
add
or
pop
in
pushf
aas
pop
testb
dec
mov
pusha
sbbl
call
sub
sub
sub
loope
push
nop
mov
or
mov
dec
dec
into
sub
jmp
jns
stos
jge
push
pop
sysexit
and
icebp
and
xor
loopne
and
dec
xor
cli
in
inc
cs
test
fstps
jno
mov
sbb
xchg
mov
movsb
orb
cmc
cli
jns
hlt
js
repz
pop
repnz
bound
adc
lcall
pop
arpl
std
cmp
sbb
cmp
or
divb
mov
cmp
out
sub
ret
fldt
fmul
fiaddl
xor
fwait
iret
and
les
pop
movsl
sub
sub
in
stos
xchg
xchg
scas
and
jp
xchg
and
mov
int3
push
lcall
add
lods
push
test
lods
test
in
cmp
iret
and
xlat
inc
push
ja,pn
popa
fildl
xor
inc
cmp
inc
xchg
sub
pushl
adc
xchg
adc
add
ret
xor
push
hlt
lods
sbb
test
in
in
xchg
dec
xchg
icebp
out
mov
movsb
add
shr
or
xor
ja
movsl
lcall
imul
and
nop
out
inc
pushf
inc
out
cld
cld
jle
mov
pop
bnd
mov
mov
dec
and
movsl
or
jno
rcll
lock
and
out
cs
mov
jns
mov
push
pop
in
shlb
fistpll
ja
mov
lods
repz
adc
iret
pop
xor
aaa
sub
mov
leave
icebp
dec
mov
xor
rcpps
ficomps
cli
in
mov
add
and
daa
pop
or
mov
out
loope
xchg
add
jmp
je
loopne
xlat
int
mov
sbb
fstpl
push
sbb
leave
mov
fucom
aaa
aam
shrl
adc
push
cmpsb
or
mov
push
mov
std
fs
adc
pop
int
outsb
push
vmulsd
add
mov
pop
lods
adc
push
mov
and
jl
or
mov
inc
cmp
repnz
mov
enter
lea
stc
movsl
xchg
stos
mov
or
sub
dec
push
fstpl
scas
jle
insb
pop
sbb
orb
call
pop
add
es
inc
xor
xchg
inc
ljmp
mov
in
inc
mov
sarl
cwtl
shr
mov
movl
and
mov
sub
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
ljmp
adc
adc
inc
mov
sub
sub
lret
xchg
repz
add
adc
rclb
aam
stos
mov
loope
cmp
or
xchg
dec
push
or
fwait
in
movsl
mov
dec
mov
jns
jno
mov
in
sti
jl
cmp
fildl
sbb
xor
in
jnp
xor
les
jns
sti
push
ficomps
mov
lcall
clc
and
bound
lods
mov
jecxz
xchg
xchg
jmp
data16
pop
rcrl
in
cmp
mov
hlt
cmc
lret
jle
mul
inc
xlat
subb
xchg
sub
pop
stos
jmp
pop
cld
pop
pop
ret
stc
push
sub
out
fwait
mov
in
dec
cltd
lcall
enter
outsb
cmp
mov
leave
sbbb
jo
addr16
and
or
lds
mov
mov
dec
mov
test
pop
cmp
cmp
mov
shlb
jae
hlt
popf
mov
or
cmp
ds
push
and
jbe
jo
mov
lods
xchg
jmp
adcb
cld
mov
push
push
xchg
dec
arpl
xchg
cwtl
sbb
sub
clc
loopne
and
aaa
pop
fisttpl
and
mov
adc
push
xchg
das
or
xlat
push
push
mov
push
jnp
jns
pop
pop
call
mov
in
xchg
mov
aam
popa
cmp
xor
adc
cmp
dec
rorb
or
mov
mov
dec
in
dec
sub
inc
jg
inc
cmp
push
scas
pop
mov
rcrb
fsubp
push
pop
test
outsb
xchg
aam
and
or
xchg
sti
jg
adc
mov
adc
add
repz
jge
test
add
jmp
mov
push
jge
in
push
les
inc
ljmp
movsb
shlb
sbb
lret
ret
xor
pop
jne
xor
setnp
pop
ficoms
sti
jb
inc
dec
inc
or
xchg
adc
lods
dec
inc
js
adc
rorb
sbb
inc
stos
add
lcall
cmp
je
mov
cmp
inc
aad
and
cltd
push
xchg
or
push
lds
rolb
out
shll
mov
frstor
pusha
sti
jl
sbb
clc
push
popf
mov
pop
je
and
aam
mov
lods
out
xor
das
inc
inc
add
and
pushf
lock
jbe
lea
pop
cli
rolb
sub
inc
jl
xor
xor
iret
cli
pop
lcall
mov
cs
mov
cmp
add
xchg
aad
cmp
movsb
xor
shrb
or
ds
fadds
push
push
xchg
xor
mov
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
int3
pop
lods
outsb
inc
adc
lea
adc
outsl
notl
xor
mov
das
cmp
int
mov
push
fwait
jle
movsl
test
sarl
in
ret
pop
jge
push
jnp
xlat
mov
sub
das
fidivs
adc
cmp
xor
jp
sti
scas
scas
cmpsb
and
loop
mov
stos
ljmp
ret
lock
sti
push
andb
dec
andl
lahf
test
out
xchg
ja
lods
bound
in
mov
mov
pusha
mov
nop
pop
scas
je
repz
lahf
xor
fistl
sub
loopne
or
mov
rclb
xchg
mov
lahf
enter
ficoml
push
pop
aam
mov
jp
frstor
lcall
adc
xor
inc
inc
fsubrs
scas
ds
jb
push
adc
lret
orl
into
jg
and
mov
adc
dec
loopnew
lods
mov
mov
sbb
jbe
mov
dec
push
daa
push
ret
sbb
sbb
leave
fnstcw
jp
pushf
xor
and
cmp
or
lahf
inc
es
dec
pop
ss
pop
mov
push
inc
aam
pop
insb
mov
decb
shrb
sar
popa
adc
and
xchg
repz
shrb
jmp
pushf
roll
clc
jmp
ret
gs
xchg
mov
pushl
mov
fiadds
test
pop
daa
lret
pusha
ret
add
mov
adc
mov
lret
jmp
sbb
data16
ljmp
jl
xchg
mov
xchg
add
jno
stc
mov
inc
das
in
into
mov
lret
rcrb
dec
loope
loopne
add
stos
mov
push
and
mov
pop
mov
out
insl
adc
push
shr
cltd
adc
aad
in
stc
movsl
add
jnp
inc
cmpsl
lcall
outsb
xchg
cmpsl
pop
xchg
pushf
add
std
adc
int3
xchg
jle
lret
shll
repz
cmp
rol
out
dec
xchg
or
sub
es
dec
jp
xchg
je
sarb
lret
jo
mov
cld
sub
inc
clc
mov
push
lds
iret
js
inc
scas
add
cmp
gs
cmpsb
sbb
jbe
icebp
leave
pmullw
or
adc
mov
adc
call
xlat
mov
ret
pop
sub
fldcw
add
adc
mov
fs
sti
or
loope
cs
jecxz
mov
shlb
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
sub
adc
cmp
mov
sbb
add
repnz
pop
sbb
cli
mov
jb
inc
add
mov
push
dec
jnp
fisttpl
frstor
and
hlt
addr16
nop
nop
call
inc
daa
out
push
aaa
or
in
inc
sub
cltd
mov
nop
inc
icebp
out
pop
dec
pop
adc
adc
int
outsb
mov
add
loop
lds
mulb
lahf
jne
dec
movsb
aas
xchg
mov
fsts
mov
fsubrp
inc
cmp
cmp
loop
jo
inc
and
mov
daa
es
jnp
sahf
add
cltd
push
call
js
push
fs
add
mov
cmp
loopne
cld
fnsave
push
and
mov
ja
fdivs
add
dec
shrb
repz
into
les
dec
inc
jmp
xchg
sbb
and
or
xchg
push
jl
sub
les
orl
rolb
aas
out
push
mov
lods
cmp
cmp
pop
mov
fcmovne
test
jo
mov
jge
push
mov
sbb
fmull
lods
out
dec
and
xchg
sub
lea
dec
push
mov
jns
or
cmp
dec
movsb
cwtl
ficoml
jle
xor
aaa
sub
out
imul
sar
push
push
movsl
cmp
hlt
in
fisttpll
leave
xchg
jg
dec
lcall
scas
mov
mov
stos
repnz
mov
or
lcall
push
sbb
or
out
call
dec
adc
popf
out
xor
lcall
or
push
jns
pop
pop
cmp
fbld
iret
lcall
je
push
jbe
test
fsubs
imul
fs
leave
push
xor
push
add
add
mov
xchg
sbb
xchg
push
jmp
pop
adc
idiv
mov
pusha
inc
popf
mov
sbb
into
mov
xchg
imul
jge
nop
shlb
and
xchg
inc
cltd
cli
xor
enter
mov
out
clc
mov
fxch
cmpsb
sbb
clc
adc
sahf
pop
insb
into
fcoms
dec
cltd
dec
push
dec
jecxz
add
loop
jnp
cmpsb
lds
rorb
repz
cmp
mov
ljmp
test
in
add
push
jmp
lods
aas
test
rcrb
nop
rol
mov
xor
mov
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
xchg
fnsave
mul
sub
jmp
cli
push
push
xor
and
sub
aad
push
sti
xor
outsl
icebp
pop
loop
pop
imul
ret
loopne
pop
test
xchg
test
jbe
fsubrs
in
dec
gs
testb
xor
mov
mov
sbb
pop
cwtl
dec
dec
inc
inc
xor
test
or
aas
lret
dec
mov
imul
and
inc
sbb
jbe
in
iret
pusha
dec
jne
mov
xchg
nop
mov
mov
test
dec
int
fs
bnd
xchg
out
sub
aaa
and
jne
jle
xchg
jp
loop
pushf
loope
push
jnp
das
rcl
sub
dec
pop
test
pop
iret
es
pop
loop
fwait
in
jecxz
dec
mov
mov
sahf
add
push
inc
lret
ljmp
jns
jb
jmp
xor
xchg
ds
ret
int
jmp
sbb
das
mov
mov
sbb
sub
inc
lret
pushf
call
and
mov
repz
das
imul
into
mov
dec
movsl
push
jae
sbb
fcoml
out
incb
jge
or
xor
push
adc
inc
inc
and
sbb
nopl
pop
xchg
aad
repz
sbb
pop
pop
mov
fdivrs
je
sub
addr16
cli
movsb
sbb
out
xchg
sub
inc
mov
leave
in
sub
repnz
lods
adc
dec
dec
jp
sub
jo
jns
push
and
inc
jle
cwtl
lock
pop
jns,pn
movsb
imul
andl
cld
das
fdivl
cmp
push
push
mov
mov
mov
jne
dec
lods
push
je
push
push
in
dec
shll
fcomi
jg
popa
adc
cmova
xor
into
jl
int
mov
pop
cmp
test
repz
mov
dec
das
xlat
push
sbbl
cwtl
outsb
jl
test
xor
push
repnz
mov
sbb
adc
xchg
rclb
repnz
mov
inc
jge
xchg
sti
pop
insb
or
ret
pop
mov
dec
adcb
and
or
daa
adc
sbb
mov
adc
jnp
mov
push
jmp
jge
cld
mov
sbbb
aam
mov
mov
pop
or
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
gs
ss
lret
aaa
adc
lea
adc
pop
out
mov
adc
pop
mov
adc
adc
int3
add
and
xlat
fwait
ret
jecxz
bswap
push
imul
xor
mov
mov
in
cmp
mov
mov
fidivl
inc
pop
adc
das
fs
jno
imul
pop
stc
int
mov
stos
test
sbb
imul
pop
inc
push
mov
add
repnz
and
movsb
scas
outsl
xchg
cs
fdivrl
test
shrb
pop
mov
mov
pop
mov
cld
add
pop
jmp
in
pop
xor
fisttpl
mov
pop
jl
cmp
sbb
dec
pop
xor
pop
rclb
lods
out
or
stc
sahf
pop
outsb
inc
jl
test
push
mov
mov
arpl
mov
pop
enter
push
cmp
push
cmpsl
mov
and
and
jne
pop
xchg
or
inc
mov
dec
mov
pop
into
movsl
mov
imul
xchg
into
sub
mov
out
lods
dec
std
lods
test
or
add
mov
adc
addr16
sbb
jns
pusha
repz
push
or
mov
data16
les
sub
mov
mov
stos
cmc
out
imul
cmp
shl
repnz
cmp
jl
mov
cmp
cmp
and
movsl
cwtl
pushf
negb
pop
xchg
hlt
into
ret
fistpll
sbb
es
pop
fidivrl
ja
xchg
sub
sbb
in
lea
mov
mov
imul
fdivrl
popa
jg
jnp
xchg
into
push
in
out
mov
mov
mov
mov
mov
test
repz
aas
daa
test
cmp
and
fisttpll
sub
or
imul
mov
inc
int3
cmp
pop
jne
ljmp
jnp
inc
mov
pop
pop
lret
dec
push
rorb
jg
or
ret
cmp
popa
ja
orl
cmovle
and
lahf
fnstsw
sbb
jbe
mov
mov
adc
push
sub
lret
or
mov
lds
pusha
rclb
lcall
and
sti
adc
repz
xchg
pop
sub
sub
and
out
or
adc
rol
loope
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
mov
jle
xor
adc
cmp
jmp
push
push
fcompl
in
fildll
in
adc
adc
nop
lahf
aad
mov
insb
pop
sbb
and
dec
lea
inc
fwait
bnd
out
sahf
add
decl
lret
adc
rclb
mov
sahf
inc
and
call
xor
cmp
ret
test
mov
stos
mov
out
cltd
jp
ret
add
cmpsl
scas
mov
dec
daa
loopne
cltd
rcrl
mov
xor
sbb
jmp
test
sbb
das
sub
daa
data16
sub
and
inc
mov
adc
jbe
add
xchg
mov
test
pop
push
in
sbb
fidivrs
sbb
shrl
pop
cmp
mov
sub
pushl
inc
scas
xchg
push
and
pop
repz
and
pop
pop
shrb
mov
xchg
jle
cmpsb
jo
pop
rcl
mov
xchg
xor
sahf
pop
jp
pop
pop
jecxz
inc
daa
push
fstpl
enter
xlat
sub
pop
push
mov
xor
cmp
je
mov
ret
out
ja
push
mov
jle
jns
fnstenv
and
outsb
sbb
mov
subl
dec
add
cmp
pop
inc
dec
push
fiaddl
push
mov
adc
imul
sub
ljmp
mov
sbb
lcall
mov
cmp
push
adc
jns,pt
xchg
int
pushl
into
arpl
sti
jno
ret
shl
dec
nop
lods
outsb
lret
outsl
gs
test
mov
push
ret
mov
mov
pop
inc
data16
and
scas
adc
jle
jecxz
je
loop
movsl
mov
jmp
xchg
push
add
jmp
mov
cmp
cwtl
adc
jecxz
pop
daa
inc
inc
dec
andb
mov
daa
enter
and
loopne
lods
pop
sbb
push
mov
xchg
xchg
cmp
jo
jnp
mov
aad
subl
pushf
ljmp
pop
js
icebp
xor
add
int3
xor
scas
mov
add
stc
dec
jl
sbb
and
rcrl
cmc
sub
jbe
add
and
cmp
call
in
out
sub
mov
stos
int
pop
pushf
inc
mov
dec
or
lret
sub
inc
lea
mov
lret
inc
in
mov
movsl
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
cmp
insb
mov
movlps
xchg
mov
push
jne
pushf
mov
loop
nop
sub
mov
or
andb
or
cli
push
inc
sub
and
inc
or
cmp
lock
pop
sbb
jae
jno
adc
fs
mov
xor
or
push
dec
sbb
mov
fbld
push
std
xchg
std
ret
stc
stc
push
mov
sbb
dec
in
out
gs
pusha
icebp
je
dec
fldcw
or
stos
fsubs
adc
imul
pop
je
ss
pop
pop
int3
pop
popa
repnz
mov
xor
mov
in
and
scas
lahf
repz
cli
bound
jbe
and
testb
shrb
ret
in
pop
daa
jb
rcl
iret
sub
rcrb
rep
movsb
pop
pop
pop
lret
les
cmp
jmp
aaa
ja
and
push
out
daa
mov
mov
in
loop
test
dec
lret
in
in
xor
add
inc
ret
in
push
inc
rorb
dec
push
xchg
das
adc
into
xor
kmovw
dec
lds
js
and
aad
sbb
sub
into
in
adc
cltd
repnz
in
cld
xor
fbld
jge
addb
aaa
bound
xor
cmp
adc
mov
ljmp
mov
xchg
push
push
pusha
push
push
mov
xor
arpl
xorl
enter
sub
decb
push
cmp
scas
rcrl
jmp
loop
add
adc
and
movsl
leave
lret
jnp
mov
jmp
stos
stc
inc
sub
mov
enter
addr16
out
or
ret
imul
pop
fs
and
dec
sti
xor
out
push
push
sub
lea
mov
cld
and
or
je
mov
iret
push
movsb
mov
aam
jae
fmuls
sbb
mov
sti
jl
addr16
lret
sub
mov
mov
push
icebp
xor
and
dec
and
jle
lock
inc
pusha
cmc
adc
addr16
std
jbe
incl
jmp
dec
repnz
repz
mov
fcoml
xor
aam
and
fisttpll
mov
sbb
xlat
lods
sub
xchg
push
mov
bound
popf
xchg
or
jmp
inc
dec
jns
out
and
jg
sbb
data16
in
push
loope
popa
inc
xchg
or
xor
or
push
add
jmp
and
lods
and
js
int
js
daa
adc
lea
adc
test
or
hlt
jb
aaa
js
clc
cmp
cld
push
inc
mov
pop
fsincos
mov
fadd
ja
into
std
daa
mov
shlb
xchg
sub
and
sub
cmp
sub
imul
mov
sub
push
push
mov
cwtl
jbe
lock
dec
pusha
and
push
rcl
cli
in
imul
push
sar
fisubs
sbb
mov
or
xchg
shlb
scas
addb
mov
notl
sbb
js
or
adc
mov
inc
pop
cmpsb
orb
push
jo
xchg
mov
push
je
popf
cs
loop
adc
repnz
fimull
sbb
ss
jno
dec
cmpsl
sbbb
les
pop
cltd
rcrl
sub
add
cli
test
mov
xor
cmp
mov
fiadds
js
xchg
enter
ficoml
int
mov
xchg
sti
test
jno
sbbl
or
mov
or
testb
testb
push
xor
inc
mov
data16
cmpsl
les
mov
pop
test
cs
xchg
ss
repnz
pop
inc
jecxz
repnz
ja
cwtl
lfence
adc
jne
popf
dec
cld
fisubs
inc
jb
aaa
and
adc
cltd
dec
mov
orl
inc
sbb
xchg
bound
cmpsl
push
sbb
and
push
cmp
icebp
out
gs
or
sbb
std
push
mov
jecxz
mov
loop
cs
or
dec
adc
sbb
jp
in
lods
scas
xchg
cmp
movsb
mov
xchg
jnp
bound
mov
xlat
dec
jg
js
or
aas
fnsave
sti
or
and
lahf
xor
nop
mov
mov
push
push
iret
dec
cmp
mov
mov
xchg
xlat
xchg
jmp
incb
cmp
or
xor
and
mov
jnp
push
inc
xor
les
xchg
out
fimuls
or
pop
dec
pop
fisttpll
test
xchg
jge
stos
cltd
push
push
adc
adc
notl
pushf
pop
hlt
hlt
add
call
in
jge
jne
cmpsb
fwait
push
fsubrl
bound
push
mov
test
ret
pop
jg
mov
pop
pop
fstl
cmp
push
cs
inc
into
popa
cmpsl
popa
fdivs
lret
sahf
adc
in
movsl
fidivl
push
repnz
cmc
and
xor
adc
mov
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
lcall
inc
lcall
sub
cmp
add
cli
and
cmpsb
mov
and
push
sbb
cmp
and
loopne
and
cmp
frstor
add
sti
clc
mov
push
insb
scas
jecxz
dec
xchg
mov
jmp
mov
cmp
xchg
lret
ljmp
enter
call
dec
pop
jne
mov
ss
scas
sub
adc
jl
repnz
xlat
je
sbb
adc
insb
push
test
orl
std
daa
pusha
mov
mov
sub
clc
or
mov
into
insb
and
cmp
jl
mov
std
mov
xchg
rcrl
or
sbb
pop
and
adc
imul
dec
push
xchg
ss
mov
sbb
scas
jns
jge
pop
mov
dec
dec
pop
mov
add
mov
lcall
xor
jmp
push
in
icebp
adcl
out
and
add
dec
rol
jmp
lods
insl
fwait
leave
iret
adc
xchg
in
inc
sub
or
cmp
inc
jne
xor
mov
pop
sub
jg
jge
or
add
lock
fistpl
bound
insb
lea
add
pop
aad
add
sbb
mov
and
lcall
add
xchg
inc
shlb
push
push
mov
cmpsb
push
int
cmpb
lds
xchg
fstps
mov
mov
jl
es
pop
mov
insb
cmc
dec
lea
add
nop
lods
fcmovu
mov
test
xor
xor
out
daa
call
mov
or
adc
out
and
nopl
and
xor
jbe
mov
adc
decl
mov
sbb
cs
stos
icebp
adc
dec
xor
push
fnstsw
xchg
inc
insb
outsb
fildl
mov
cmp
add
and
shll
je
data16
sbb
sti
pushf
cmc
rcll
scas
inc
mov
mov
pop
cltd
or
clc
mov
daa
mov
mov
xorb
pop
iret
push
cmc
mov
inc
sub
dec
cmpsl
pop
enter
jecxz
jns
bnd
fmuls
xchg
add
out
mov
jmp
and
cltd
scas
dec
mov
negl
mov
roll
test
sub
ljmp
aad
dec
das
rorl
adc
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
sub
push
sbb
adc
jo
out
es
ret
jne
jl
push
std
sbb
shlb
ror
push
xor
push
rol
int3
xchg
dec
mov
mov
lods
movsb
cwtl
movsb
push
push
pop
mov
fs
pop
cs
les
add
sub
cwtl
out
mov
cli
sti
arpl
ds
arpl
cmpl
gs
pop
fs
inc
xchg
push
fnsave
mov
cli
jno
sub
dec
insb
push
jge
lock
in
sbb
cmpsl
xchg
and
leave
adc
add
dec
add
aad
popf
jge
push
mov
mov
insl
inc
rorb
outsb
push
cmpsb
mov
or
scas
ja
cli
rorl
or
pop
jl
cmpl
inc
pop
in
cmpsb
mov
aam
mov
cmp
aas
shl
cwtl
cwtl
orl
mov
aaa
mov
fcmovb
or
call
mov
jno
loope
dec
loopne
dec
inc
sbb
movsl
mov
test
jne
jb
leave
lret
subl
xor
sbb
jp
es
jge
cmp
out
inc
arpl
push
imul
xchg
js
or
xor
in
xor
in
sbb
cmpsb
stos
pop
adc
or
in
dec
add
loope
leave
mov
out
mov
adc
scas
addl
ficoml
push
fnstenv
xchg
shr
and
cmp
pop
or
loopne
or
xor
ja
stos
iret
fidivrs
out
pop
mov
add
mov
xor
mov
lock
add
icebp
repz
adc
test
bound
fisubrl
decb
sbb
and
mov
es
mov
mov
cwtl
add
scas
pop
dec
pushf
jb
mov
incb
sbb
stos
add
jmp
movsl
xor
les
push
mov
loop
push
pop
out
push
aaa
divb
popf
popa
xchg
cwtl
push
ss
mov
jbe
sbb
and
les
fisttps
pop
sub
cmp
add
mov
out
div
outsl
xchg
pop
insb
inc
aam
jp
inc
sti
fisttps
mov
jp
and
lret
cmpsl
adc
rcrl
mov
mov
jle
jge
jbe
jnp
dec
adc
repz
sub
xchg
cld
mov
jecxz
int
pop
or
lea
cltd
or
cld
or
sbb
imul
mov
cli
inc
movsb
mov
dec
sahf
mov
int3
inc
pop
fsubs
sub
mov
loope
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
or
les
mov
xchg
push
or
clc
inc
push
movsb
lods
inc
inc
pop
into
dec
jns
hlt
invd
lods
cs
jmp
xchg
in
lahf
jmp
mov
imul
subb
push
fs
stos
cli
inc
leave
and
cmp
mov
repnz
xchg
loopne
ret
push
mov
and
clc
jecxz
mov
xor
daa
repz
les
stos
sarl
je
xchg
dec
push
mov
adc
or
ljmp
pusha
imul
in
dec
dec
fisttpll
push
push
add
insb
mov
push
adc
outsl
cmpsl
xor
pop
or
jmp
call
lea
hlt
cmp
add
mov
fcoml
jge
inc
and
lcall
cmp
fs
sub
shl
loope
mov
pop
push
pusha
inc
lcall
pop
dec
pop
mov
and
test
sub
push
dec
or
out
insb
or
rclb
cmpsl
jns
lret
adc
mov
jmp
dec
push
xor
mov
incl
cmp
cmc
dec
out
sahf
push
pop
push
mov
inc
sbb
and
pusha
xchg
nop
jno
call
or
cld
and
aas
loopne
js
shr
fimull
push
mov
ficompl
mov
xchg
mov
ret
xlat
scas
out
jae
jp
cmp
and
mov
jae
pop
stc
loopne
ds
rolb
xchg
adc
shrb
push
out
and
fisubrs
fiadds
adc
lea
push
or
je
sub
pop
std
adc
push
fwait
stc
shr
mov
mov
das
stos
jb
cwtl
loope
ret
cmpb
mov
out
out
mov
push
daa
push
mov
jecxz
das
aaa
dec
lods
xchg
out
in
inc
or
add
aad
or
in
mov
push
inc
in
imul
sbb
and
mov
lea
imul
xor
loop
insb
inc
in
jae
dec
cmp
jmp
outsl
pop
cmp
jle
mov
cmp
xchg
hlt
ret
push
sbb
jp
jecxz
adc
add
xchg
mov
cmovb
inc
adc
inc
mov
pop
test
fadds
inc
repnz
hlt
sbb
and
xor
outsb
out
repz
and
push
fstl
sbb
sub
mov
shrl
pop
dec
sub
stc
aad
cs
push
cld
outsl
push
push
out
pop
es
mov
xlat
jns
cmc
gs
pop
loope
jo
jae
sub
in
das
outsl
add
mov
pop
imul
jae
addr16
rolb
jnp
mov
mov
stos
outsl
sub
xor
mov
fptan
test
xor
pusha
mov
dec
inc
lea
lahf
sbb
int
ss
cwtl
push
or
call
mov
imul
mov
out
aam
jb
les
cwtl
jl
sub
xor
out
inc
enter
and
jg
xchg
popa
cld
out
addb
adcl
mov
clc
clc
and
xlat
scas
cmp
daa
leave
sub
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
xchg
adc
mov
stos
insb
push
and
cli
pop
icebp
or
int
pop
add
mov
test
lods
in
inc
add
or
sbb
lods
addr16
fucom
xlat
shlb
shlb
cmp
xor
stc
jno
jl
test
fisubrl
in
arpl
mov
adc
ds
jmp
arpl
pop
hlt
jno
mov
sbb
ss
inc
add
out
iret
out
cmp
and
mov
in
xchg
cmp
es
movsl
dec
dec
inc
cmpb
test
and
cltd
jecxz
dec
mov
hlt
out
jbe
push
fs
mov
adc
dec
jmp
jbe
cli
fwait
push
aas
adc
fxtract
int
out
or
xor
cs
dec
mov
jns
shll
cmpsb
pop
aam
sub
rorb
cld
clc
jb
adc
dec
mov
cmp
idivl
sub
stos
dec
mov
cmc
inc
pushf
incl
pop
out
mov
clc
push
push
into
stc
shlb
hlt
jae
loop
mov
test
sub
test
push
pop
xlat
ret
aam
mov
pop
outsb
popa
lods
sbb
jmp
jp
je
aas
push
cmp
xor
gs
xchg
push
mov
push
lret
pop
inc
mov
scas
pop
call
test
push
test
stos
jbe
dec
adc
dec
adc
das
jecxz
push
subl
addr16
or
add
lcall
mov
jb
inc
mov
ljmp
and
xlat
push
jmp
adc
pushw
pop
popa
lcall
inc
dec
cwtl
xchg
mov
insb
jl
in
cmp
mov
dec
fidivrs
cmpsb
jo
test
outsb
test
jns
mov
sub
mov
pop
aaa
sub
int3
push
lds
sbb
std
repnz
lret
scas
orl
mov
jp
imul
or
loopne
cmp
insl
inc
jno
mov
pop
aad
dec
dec
push
fs
popf
enter
sbb
pop
scas
xchg
mov
or
pop
fcompl
inc
push
pop
add
jb
test
fwait
sbb
adc
cmpsl
sub
add
out
xchg
rcll
sbb
repnz
xchg
cmp
and
out
pop
mov
test
xor
shr
pusha
lcall
jns
mov
mov
adc
sar
jl
mov
fwait
mov
pushf
push
pusha
loopne
sub
dec
cmp
vrsqrtss
stc
mov
sbb
dec
lock
inc
jno
mov
push
and
insb
test
scas
sub
jmp
inc
jns
imul
adc
int3
lret
cli
adc
inc
fisubrs
aam
aas
loope
xchg
outsb
int3
push
mov
into
dec
lock
adc
jns
scas
test
pop
or
arpl
jae
ja
lock
xor
fsubl
or
addr16
fisttpl
mov
in
push
and
mov
loope
cmp
jp
mov
lea
push
sbb
inc
sub
inc
adc
insl
push
adc
lods
and
adc
cld
sub
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
js
pop
adc
adc
jb
loope
outsl
shrb
pop
mov
outsb
push
out
aaa
popf
notb
aam
add
pop
inc
nop
fisttpl
in
bound
outsb
sbb
dec
mov
fmul
pushf
scas
add
data16
fwait
popf
pop
ss
stc
mov
sahf
or
js
xchg
iret
and
cwtl
jge
pop
arpl
dec
fiadds
cmpl
call
icebp
popf
mov
mov
dec
or
cmp
in
push
idiv
or
into
and
add
sahf
mov
fwait
or
jno
je
mov
dec
adc
call
das
cmp
gs
push
cs
popa
mov
cmp
in
jl
mov
cmp
lcall
incb
punpcklbw
or
flds
xchg
in
or
push
jne
out
add
mov
mov
shlb
xor
stc
movsl
mov
incl
andb
pop
push
xchg
mov
inc
jb
xchg
rclb
test
aad
aaa
cli
mov
mov
push
pop
inc
inc
xchg
sub
cmp
pop
lock
testb
mov
xchg
pop
inc
and
push
lcall
stos
mov
loopne
ffree
test
sbb
mov
and
outsb
loopne
ja
push
pop
push
adc
pop
add
popa
je
cwtl
int3
es
mov
mov
inc
dec
gs
mov
movsl
sbb
dec
xchg
cmp
pop
jge
mov
lea
clc
cmpsl
das
cld
je
lret
nop
lds
imull
inc
test
rcrl
jb
mov
pop
inc
push
pop
dec
outsb
push
push
pop
mov
inc
in
leave
mov
fisttps
iret
je
jp
daa
xchg
xor
pop
ficoms
es
repz
cmp
test
pop
cmc
jle
aaa
popa
insb
rcll
push
lahf
std
insb
mov
push
out
pop
loope
push
and
pop
das
nop
sbbb
inc
dec
adc
add
adc
jno,pn
cmp
stc
mov
daa
inc
gs
popa
push
mov
jbe
test
jl
mov
lods
xchg
add
xchg
lcall
cmpl
cmp
repz
icebp
pop
add
cwtl
movsl
sarl
add
das
mov
out
jmp
and
lods
mov
icebp
lahf
sub
fsub
loope
stos
mov
rcrb
add
mov
jg
cld
ret
cmp
pop
add
add
pop
inc
cli
adc
test
push
jmp
inc
pop
sti
push
popf
mov
and
add
sbb
inc
mov
jge
push
int
aad
adc
mov
lea
daa
mov
jl,pn
add
fisubrs
dec
hlt
sbb
outsb
bound
or
jbe
pop
cmp
cmpb
call
jl
pop
cmp
cli
pop
pop
out
jecxz
jns
push
je
mov
adc
test
lods
insb
xchg
out
mov
rep
pop
pop
jle
sub
andb
inc
cltd
mov
sub
ret
repnz
shld
lcall
subb
subb
packsswb
stc
stc
adc
xor
cmc
icebp
pop
lds
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
fwait
cmp
call
adc
stos
and
scas
shll
mov
or
pushf
fs
sti
pop
sbb
adc
and
mov
push
fucomp
fstps
gs
dec
inc
push
sub
mov
push
mov
int3
hlt
mov
jns
mov
scas
mov
fldenv
xchg
jne
and
decb
dec
jge
js
adc
pop
cmp
in
jmp
sub
adc
lods
jmp
hlt
mov
adc
inc
add
imul
sbb
sub
into
xchg
das
sub
in
inc
aaa
adc
fstpt
imul
insb
push
add
adc
insl
in
push
push
nop
imul
xchg
adc
jae
push
mov
in
mov
mov
sub
jnp
into
popa
dec
test
mov
loope
mov
lret
pop
loop
jne
pop
loop
pushf
pop
and
xchg
aad
lret
push
and
mov
jp
or
loop
aaa
iret
cmp
loope
sbb
rorl
xor
es
push
out
loop
test
dec
xor
push
mov
sub
xchg
stc
cs
iret
sti
sbb
cld
jo
xor
loopne
dec
imul
sbb
xchg
js
das
pop
lcallw
xor
xchg
inc
xlat
cwtl
out
fs
cmp
mov
pop
ret
xchg
dec
das
clc
lods
or
fisubs
sbb
cmp
mov
outsl
and
sub
scas
das
xchg
lds
pop
stc
or
das
aas
pop
leave
pop
repnz
sbb
adc
adc
dec
or
scas
push
leave
inc
aas
push
dec
mov
add
test
adc
xchg
mov
xchg
popa
movsb
and
inc
add
rol
jl
leave
sbb
mov
cld
fisttpl
push
rcll
mov
idivb
shll
adc
das
mov
sub
pop
popf
xchg
mov
pop
fs
repz
popa
adc
jp
and
xchg
or
sahf
pop
aaa
lock
nop
cmp
sbb
mov
mov
sti
fwait
sbb
cmp
mov
jbe
hlt
js
rcrl
sbb
pop
outsb
mov
inc
mov
mov
loopne
cld
xchg
add
fmul
test
jl
push
lahf
fcompl
sbb
xchg
ss
je
repz
daa
mov
adc
fwait
jle
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
test
adc
adc
xchg
mov
xchg
jbe
sbb
iret
fcoms
shl
and
mov
push
pop
xor
mov
nop
dec
shlb
aam
std
dec
pusha
pop
cli
xor
icebp
std
fdiv
ds
xorl
or
je
inc
aas
cmpsl
cmp
daa
jmp
mov
lret
dec
xchg
rolb
sbb
es
mov
das
push
fdivs
dec
mov
sub
jnp
fdivrl
je
mov
add
add
loop
imul
sbb
pushl
pop
insl
sbb
nop
xchg
xor
jo
jnp
sub
addb
repnz
and
sbb
xchg
dec
or
xchg
mov
in
js
dec
xor
push
shlb
lea
add
sub
adc
cmp
cmp
xchg
jle
clc
jg
push
jle
cmp
ror
cmp
xchg
inc
clc
inc
ds
shll
cwtl
sub
add
bound
call
xchg
sbb
dec
push
shr
xor
push
shrb
sub
add
outsl
xchg
clc
addr16
fisubrs
in
leave
add
jne
adc
scas
cld
jmp
out
dec
insl
push
fadds
sahf
addb
add
pop
scas
ret
sub
pusha
adc
mov
in
daa
mov
scas
jne
xchg
push
fwait
adc
int3
insl
daa
mov
push
rcrl
setl
adc
decb
ja
cld
xor
sbbl
sbb
jns
jbe
inc
and
mov
stos
call
ret
push
push
jno
test
leave
aam
pop
out
ror
aas
pusha
xorb
std
xor
into
jge
pusha
mov
orb
push
pop
mov
lock
add
lods
aam
data16
and
imul
pop
jecxz
mov
fldcw
mov
test
mov
xchg
jmp
push
sbb
cmpsb
pop
push
mov
pop
mov
addr16
rorb
mov
add
or
cmp
xor
cld
mov
inc
fcmovnb
xchg
clc
sbb
fsub
add
lret
jle
ret
int3
addb
fisttpll
lods
mov
pop
fimull
sti
fcomps
pushf
mov
cwtl
and
mov
outsb
inc
cmp
sbb
clc
and
rolb
inc
dec
push
or
mov
imul
sbb
cmp
jne
push
lcall
stc
mov
jae
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
test
jle
stc
adc
adc
lahf
mov
mov
adc
out
arpl
xor
dec
rcrb
pushf
sub
je
or
mov
xor
fsts
aaa
push
shll
xchg
out
mov
arpl
test
mov
fmuls
hlt
in
inc
mov
dec
scas
jp
xchg
or
mov
xchg
mov
mov
mov
shlb
pushf
push
and
pushf
dec
inc
jl
out
mov
push
sub
push
inc
int3
repz
subb
cmc
pop
fldcw
pop
xor
adc
inc
les
mov
test
dec
pop
sbb
test
pusha
test
in
push
mov
out
mov
mov
jno
pop
and
mov
stos
fwait
cmp
xchg
xchg
xchg
pop
mov
and
movsl
mov
dec
xchg
cmp
pop
cld
mov
stc
int
testl
and
inc
imul
mov
lcall
scas
nop
adc
pop
jge
jge
int3
cmpsl
icebp
mov
mov
mov
sbb
subb
jmp
mov
xchg
sub
popa
jmp
xchg
push
add
jb
test
cli
insb
bound
out
mov
das
subl
repnz
xor
mov
je
imul
sbb
inc
jnp
lahf
rcr
push
in
mov
dec
mov
xlat
pushf
sub
mov
and
mov
mov
xchg
xor
xchg
push
mov
mov
mov
insb
pop
leave
sbb
or
arpl
daa
xor
addr16
stc
mov
push
cmc
fwait
fstpl
push
jp
fcmovnu
cmpl
xor
pop
add
jmp
pop
enter
lret
lock
cmpsl
fcompl
ficompl
pusha
push
fldenv
xorl
cmp
aaa
and
xchg
jle
push
xchg
int
imul
lods
xor
outsb
fs
jno
xchg
fs
adc
jl
dec
xor
jne
jle
aas
lahf
jb
or
lcall
push
repnz
sbb
and
push
test
inc
mov
adc
cvtps2pi
subb
stos
test
sbb
push
mov
sbb
shld
pop
sbb
out
jb
or
push
fidivl
stc
ss
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
mov
adc
adc
shrb
fwait
lret
jle
and
inc
hlt
les
les
clc
ret
cmp
lret
inc
mov
rorl
fisubrl
sbb
in
push
std
cli
stos
add
cli
jbe
sub
ret
in
sbb
mov
inc
adc
dec
xor
in
fwait
xlat
dec
mov
sub
adc
in
cmpb
movsb
ja
mov
jg
pushf
aam
cmp
push
adc
xchg
imul
add
xor
pop
lea
mov
int3
or
xor
jno
inc
in
or
rolb
daa
jae
dec
jnp
movzwl
xor
adc
inc
ret
or
cmp
sbb
mov
sbb
mov
inc
loop
jecxz
add
dec
sbb
into
loop
jle
stc
test
mov
cmp
fistl
inc
mov
adc
scas
test
adc
ljmp
jnp
in
pop
cmpsb
mov
cs
jae
sbb
jae
push
pop
pop
aam
mov
dec
jl
push
dec
add
loop
push
sahf
movsl
popf
pop
iret
cmp
mov
fidivrl
adc
inc
inc
mov
fwait
add
and
push
iret
leave
add
mov
leave
and
mov
lret
js
xchg
xchg
push
xlat
sbb
xor
enter
adc
pop
jbe
xchg
dec
ud0
fldt
inc
push
fwait
sub
int3
ficoml
loope
aad
mov
mov
adc
aaa
cmp
add
cmp
mov
pop
shlb
cmp
cwtl
or
fstps
pop
xlat
lea
cli
add
loope
lds
xor
ret
dec
pushf
iret
mov
std
mov
mov
lcall
clc
sbb
inc
pop
enter
ret
push
inc
jns
lods
inc
adc
push
inc
scas
lods
cs
std
jnp
stos
shll
dec
xchg
lahf
ret
dec
addr16
cmp
cmpsl
out
shll
loopne
or
into
sub
ret
pushf
cwtl
pop
push
xlat
lret
jns
mov
cld
xchg
push
call
sub
jl
adc
add
xchg
outsb
aam
js
pop
mov
mov
shrl
mov
mov
pop
mov
out
cwtl
enter
outsb
add
out
mov
push
rcl
xorl
pop
int
pop
cmc
dec
ljmp
movsb
xchg
stc
mov
imul
pop
and
dec
pop
and
das
gs
push
and
xchg
pusha
outsl
adc
pop
inc
mov
test
arpl
call
jne
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
ficoms
adc
adc
xor
pop
sti
push
xchg
xchg
fsubl
decb
mov
adc
mov
xlat
cmp
xor
cli
pop
popa
mov
cmp
mov
test
stos
dec
sbb
add
cmp
out
test
push
gs
lds
in
push
mov
je
mov
xchg
shrb
pusha
or
movsl
movsl
mov
push
fisttps
inc
sbb
mov
mov
push
int3
outsb
daa
leave
cmp
aad
rclb
mov
out
mov
mov
push
cmc
jecxz
xchg
xchg
scas
scas
pop
sar
scas
outsl
fmuls
cmp
test
jecxz
andl
mov
sbb
push
fs
jecxz
ficomps
cmp
sbb
inc
lret
cmp
cmpsb
pop
sbb
ror
sbb
aad
mov
xor
push
jmp
inc
iret
mov
jae
sub
fists
mov
mov
call
pop
hlt
mov
repnz
test
mov
jae
bound
movsb
inc
aam
jmp
sub
rorl
js
sarb
loope
insb
mov
jle
hlt
icebp
cli
loop
sub
xchg
mov
stos
js
popf
ljmp
imul
adc
repz
xchg
mov
setl
jmp
ffreep
shlb
cmp
add
adc
test
imul
dec
jecxz
jo
movsl
test
mov
in
bound
in
cmp
sub
inc
add
fucomi
or
shrl
std
les
nop
xchg
jl
mov
rclb
cmp
testl
or
mov
popf
inc
cli
or
dec
movsb
push
gs
inc
mov
shll
mov
xorl
mov
mov
fadd
int
and
rorl
pop
inc
adc
add
mov
inc
inc
inc
jne
mov
es
lret
clc
int3
and
stos
and
mov
xor
sbb
or
adc
push
jle
inc
and
sbb
aad
adc
imul
push
pop
push
cltd
xchg
rol
stos
inc
testl
ja
lcall
jbe
sbb
ds
and
subl
mov
out
test
mov
xorb
fucomi
inc
cli
push
in
outsb
mov
stc
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
dec
cmp
add
adc
adc
into
inc
call
aad
xchg
decb
outsb
subl
out
mov
or
insl
aam
or
popa
pop
lahf
lds
dec
call
das
aaa
mov
insb
sub
xor
cmp
int3
fisttps
mov
push
pop
push
push
mov
lret
stos
rcrb
jns
xchg
sbb
frstor
pop
xor
push
addr16
cmp
and
add
movb
in
jo
cmp
repnz
xor
fs
jno
ljmp
inc
or
fldcw
dec
call
or
loope
inc
xor
mov
push
scas
pop
jno
push
and
jno
pushf
stos
fldl
shll
push
mov
jne
test
inc
in
aas
add
xor
add
mov
aad
icebp
xor
aam
pusha
xor
sbb
aad
xchg
jl
test
xchg
push
bswap
aas
adc
and
iret
xlat
fwait
fs
xchg
cmp
jno
mov
jle
xor
pushf
mov
adc
jb
fisubl
or
push
arpl
flds
add
mov
es
xor
addr16
add
pop
sti
pop
adc
fmull
ljmp
sub
mov
sti
dec
idivl
inc
push
mov
mov
cmp
jge
mov
sub
nop
mov
bound
sbb
push
inc
sbb
or
fstpt
xchg
sub
sbb
js
scas
add
lret
pop
push
xchg
repnz
lock
scas
pop
add
xlat
push
or
movsl
aas
lcall
jnp
stos
xlat
xorb
sbb
or
aam
cmpsb
inc
inc
lea
cld
nop
xchg
cmpsl
sub
test
xchg
rclb
ficompl
lret
jno
xlat
jnp
stos
repz
test
out
sub
aas
xchg
int
mov
bound
jne
sub
and
or
sub
mov
fwait
mov
push
pop
xor
shll
into
lcall
inc
inc
ret
jno
mov
stos
jns
movsl
or
daa
inc
add
out
sbb
xor
sar
imul
inc
out
jle
and
std
mov
mov
push
mov
addr16
lds
xlat
sar
test
sub
iret
push
cwtl
ds
mov
lods
add
das
and
inc
mov
nop
mov
sub
cmp
xchg
lods
lds
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
cmpb
adc
ret
mov
cmp
insb
cmpsl
dec
rcr
and
in
test
cmpsl
sub
xlat
mov
xlat
cmc
int
int3
aam
dec
testb
add
mov
adc
aas
mov
filds
in
sbb
adc
and
cmp
sbbl
xor
lret
outsb
out
mov
test
std
add
int
cltd
movsl
hlt
jae
push
test
sbb
mov
lods
or
push
mov
jbe
call
insb
dec
enter
push
xor
enter
movsl
adc
xor
xchg
into
mov
gs
fst
sub
adc
js,pn
mov
int3
jae
ds
mov
test
addr16
pop
cmc
loopne
or
adc
mov
pop
sbb
jp
add
xlat
push
les
cmp
or
add
jp
xor
adc
and
fwait
movsb
jg
fbstp
sub
lods
mov
insb
xor
fwait
imul
mov
test
cld
pop
pop
daa
icebp
adc
js
cmp
cmp
add
xor
jle
jge
in
sti
das
sbb
sub
out
or
stos
jp
lcall
add
sbb
in
adc
das
sti
out
add
cmp
scas
pop
add
lcall
push
push
jecxz
xor
insb
pop
push
out
fisubs
test
dec
mov
dec
xor
push
out
jg
add
sbb
mov
add
arpl
sbb
in
mov
leave
xor
and
sbb
daa
mov
lods
loopne
xchg
ljmp
fwait
test
ficomps
scas
inc
add
outsb
jnp
lret
sub
jle
sbb
test
mov
mov
shll
sbbl
dec
loopne
ficoml
lds
rcrl
sub
sbb
sbb
cmp
repnz
pop
push
cmp
push
xor
lcall
sbb
daa
repz
lret
lds
xor
sub
orl
in
or
pushf
fwait
jg
or
cmc
loope
adc
jb
jle
mov
pop
pop
cltd
mov
faddl
xchg
sbbb
sbb
fdivrl
mull
cmp
repz
dec
mov
mov
lods
pop
rcll
imul
mov
push
mov
jl
and
xchg
mov
mov
jg
lock
scas
lock
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
stos
ficoms
adc
or
lock
jnp
jns
cli
or
shll
int3
jp
mov
dec
ss
in
xor
dec
sbb
jo
fdecstp
mov
xchg
sbb
aas
jl
xchg
stos
push
inc
imul
mov
or
or
or
call
in
in
or
imul
ss
or
in
stos
jns
or
dec
sub
inc
out
xchg
icebp
shlb
js
sbbb
or
clc
add
pop
mov
jae
cmp
jns
test
xchg
aad
ljmp
inc
sub
inc
pusha
enter
outsb
and
mov
xchg
out
mov
mov
jl
lods
aam
add
clc
sub
jmp
out
dec
xor
and
pop
mov
popa
adc
movsl
cmp
pop
mov
mov
out
cmpb
scas
inc
stc
mov
dec
inc
sub
mov
push
lods
xor
out
inc
lcall
pop
leave
cmc
cmp
hlt
aaa
sub
idivb
loop
mov
mov
scas
lcall
je
add
mov
icebp
ret
xchg
sti
push
mov
mov
cmpsl
adc
insb
xlat
mov
mov
jns
jns
adc
mov
aam
and
fidivs
int
fwait
cltd
xlat
pop
imul
lret
sub
xchg
and
cmp
daa
cmp
cmc
and
fcmovnu
jmp
pushf
cltd
repz
cltd
inc
jae
std
test
pop
psrad
mov
scas
cltd
fpatan
jp
fisubrs
xor
insb
js
arpl
addl
adc
add
sub
insl
aad
jno
push
jecxz
fisubrs
pop
and
inc
out
push
push
jno
sub
mov
pop
xchg
push
adc
jle
pop
clc
popa
stc
mov
mov
jl
fs
ds
and
jno
mov
ret
inc
adc
fistps
in
xchg
inc
mov
pop
jo
std
push
in
pop
pop
scas
gs
jno
mov
hlt
mov
in
shlb
adc
cli
inc
imul
pushl
sbb
cmp
adc
loopne
pop
out
mov
icebp
gs
in
inc
cs
fisubrs
pop
call
sbb
fsts
push
dec
js
mov
add
and
inc
filds
jge
jns
mov
cs
lahf
add
leave
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
sub
push
js
adc
adc
shrl
stc
mov
js
or
inc
je
cmp
int3
mov
xchg
in
pop
push
xchg
dec
lcall
in
or
sub
and
loopne
sarb
pop
sub
or
add
mov
stos
cltd
mov
rorb
adc
stc
xor
xor
into
and
sbb
test
and
andl
lcall
mov
int3
sahf
icebp
fstpl
and
inc
fwait
leave
in
nop
mov
mov
call
dec
mov
inc
xchg
and
movsl
repz
lahf
rol
or
cmp
or
in
inc
imul
dec
in
xlat
fcomps
outsb
fildl
xchg
pop
mov
hlt
dec
insb
xor
mov
enter
jmp
fwait
subl
ret
add
iret
jmp
sub
xchg
shrb
shll
shrb
mov
out
pushf
call
dec
xor
movsl
aas
fistpl
adc
sub
jg
dec
mov
cwtl
aas
dec
or
and
int3
cmp
incl
xchg
andl
shrb
test
inc
aas
push
lcall
mov
in
out
xchg
daa
test
sbbb
push
fadds
imul
xchg
out
psubb
pop
int
leave
ljmp
inc
sbb
jbe
aaa
in
sbb
test
mov
out
insl
mulb
popa
cmpsb
lcall
aad
inc
fcmovnb
ret
jl
outsb
out
jne
out
inc
mov
push
sahf
addr16
cli
je
mulb
push
mov
mov
arpl
sub
mov
cmc
outsb
loope
repz
imul
xchg
pop
lods
inc
xor
lods
call
sahf
icebp
jo
adc
inc
xchg
adc
dec
insb
aas
pop
and
in
ret
ljmp
push
rolb
cs
scas
or
cmp
push
or
jp
jo
popf
repnz
leave
outsl
xchg
sbb
mov
je
outsb
xor
jae
fdivrs
lds
and
aad
mov
xchg
push
jl
scas
inc
out
and
daa
scas
dec
orb
aad
or
jae
leave
push
cmc
gs
das
mov
ljmp
sti
rorl
cmp
loope
pop
add
imul
jmp
cs
rcll
aam
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
or
cld
mov
mov
pop
test
ficoml
movsb
cmpsb
inc
pop
adc
mov
xor
outsb
xchg
imul
fists
into
stc
add
out
xor
clc
hlt
insl
push
pop
sub
aad
ds
sbb
pop
iret
les
push
pushf
aad
in
sub
mov
mov
xorl
pcmpeqd
and
std
dec
push
imul
fdivrl
arpl
lds
dec
xchg
in
test
jae
push
cmp
xor
dec
push
xor
test
out
and
shlb
lahf
filds
mov
mov
cmc
movsl
sbb
jecxz
or
sti
pop
cmpsb
xchg
jmp
push
lret
cmp
xchg
lret
pop
xchg
xchg
sahf
lods
push
and
int
mov
or
pop
xor
mov
jns
sbb
ljmp
scas
sub
cwtl
inc
imulb
inc
into
push
xor
xchg
pop
xchg
in
add
flds
ficoml
inc
outsl
or
pop
xchg
loop
sub
aam
adc
mov
roll
sbb
movsl
mov
in
mov
stos
push
pop
popa
xlat
enter
cli
scas
sbb
cmp
mov
add
push
xchg
push
add
push
mov
jno
test
mov
dec
lods
cmp
jle
add
push
adc
ja
repnz
push
jns
ret
add
hlt
rorb
and
call
jge
xlat
out
pop
loope
sar
arpl
and
loope
shlb
js
add
push
in
mov
mov
data16
mov
addb
add
adc
pusha
test
sbb
xlat
mov
mov
dec
imulb
std
inc
jno
frstor
sbb
nop
mov
pop
adcl
shr
std
call
inc
jg
lret
jg
dec
lods
mov
shrb
pop
adc
inc
xchg
xchg
mov
testl
je
add
incl
add
inc
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
lock
scas
into
adc
adc
imul
cmpsb
clc
into
lds
jns
mov
idivb
mov
push
lock
xchg
xchg
xchg
sbb
dec
jg
into
mov
or
cmp
mov
mov
pushf
xor
test
movsl
loopne
insb
mov
xchg
aam
rcrb
and
mov
ja
sub
cltd
in
push
inc
rcrb
lds
xchg
lcall
jne
cmpsb
mov
mov
bound
pop
in
mov
das
dec
lret
out
pop
inc
mov
shll
popa
jmp
mov
gs
sbb
imul
rcrl
lods
mov
and
pushf
bound
ja
dec
cmc
pop
in
xchg
fmuls
cmc
test
rcll
pop
xor
push
cmp
insb
aam
into
xchg
mov
aam
movb
test
pop
inc
mov
out
sahf
jo
imul
lret
push
cli
dec
ja
add
pop
push
or
add
sub
mov
fiaddl
call
gs
leave
xchg
gs
and
mov
add
add
jns
xchg
lret
iret
cmc
sub
xlat
add
or
xor
inc
pop
adc
mov
cmp
or
sub
loope
jne
mov
jno
mov
mov
insb
pop
into
jle
pop
inc
lret
push
cs
or
mov
cmp
or
ljmp
mov
lock
test
xlat
fiaddl
arpl
jmp
push
fdivrl
mov
lret
adc
pop
popa
adc
dec
push
jl
jae
sahf
mov
sub
xor
outsl
add
out
call
ret
sarb
sbb
dec
add
mov
jecxz
mov
leave
jl
ds
fiaddl
cmp
pop
mov
mov
js
lret
dec
jne
lds
mov
pop
lods
js
clc
lahf
pop
mov
xor
sub
shll
adc
test
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
rorl
adc
adc
add
loop
pop
pop
sbb
scas
shlb
sbb
mov
icebp
push
mov
test
inc
in
push
pop
sub
add
mov
test
test
xchg
pusha
scas
inc
es
clc
jb
aas
hlt
xor
divb
imul
rol
dec
test
xor
pop
adcb
adc
inc
dec
mull
sub
js
insb
jl
or
add
test
lea
inc
bound
mov
push
and
into
adc
lret
ficoml
fildll
pop
pop
sub
outsl
xchg
adc
or
pop
pop
inc
and
das
pop
daa
in
sbb
outsl
add
cli
mov
std
xchg
imul
call
cmp
leave
xor
or
push
push
pop
aad
mov
mov
repnz
movsl
fbstp
frstor
jmp
fs
ljmp
push
cs
sub
repz
cmp
xchg
popa
loop
lods
cmp
push
pop
push
out
mov
mov
and
and
sarb
adc
cmp
sub
jecxz
lret
ret
cmp
cmp
jp
stos
dec
cmpsb
inc
pop
xor
add
mov
mov
mov
mov
lds
int3
sub
sti
mov
mov
loop
mov
mov
xchg
outsb
in
push
stc
inc
xchg
pop
popf
and
cmp
jp
fwait
mov
mov
pop
arpl
xchg
sbb
cmp
call
sbb
xchg
adc
outsl
adc
decb
adc
mov
pop
ss
lds
out
leave
fsub
push
sbb
inc
scas
pop
xchg
sti
in
pop
imull
jno
adc
mov
pusha
inc
cmp
mov
lcall
mov
or
mov
arpl
jl
mov
xchg
cmp
call
out
test
inc
lods
fdivrs
push
enter
mov
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
sbb
adc
adc
inc
push
xor
in
mov
push
sbb
mov
pop
insb
dec
sub
andl
das
add
sub
filds
mov
fisubl
jmp
jg
sub
int3
push
aas
mov
cmp
insb
pop
rcl
icebp
push
cmpsl
stc
stos
testb
mov
pop
add
call
xchg
arpl
sbb
adc
cmpsb
mov
jle
out
inc
xor
pop
fnstsw
arpl
idivl
add
pop
shrl
adc
jge
mov
jg
stos
dec
adc
xchg
xor
pushw
ja
xorb
jo
addr16
test
mov
push
std
jg
push
sub
cmp
add
push
fstp
std
xor
sbb
jno
pop
cltd
jmp
sub
xchg
mov
fimull
pop
xchg
or
xlat
sarb
std
lret
dec
outsl
jle
dec
loopne
xor
mov
dec
xor
push
std
xchg
or
dec
enter
mov
sub
pop
jp
dec
fiaddl
daa
push
mov
add
pop
dec
rclb
stc
loope
jns
jp
cmp
jns
jl
shll
add
and
xchg
xchg
xor
dec
xchg
sbb
std
stc
push
and
mov
loopne
pop
inc
loope
jns
into
dec
mov
std
fdivrs
out
lea
loope
lret
insb
xchg
in
and
push
mov
pop
mov
lock
xor
push
sahf
sub
adcl
sbb
jb
int
pop
fs
inc
ret
or
divb
sub
cld
pop
xchg
std
ss
iret
mov
in
fsts
push
xor
mov
sbb
stos
sahf
and
repz
jmp
nop
ret
daa
ljmp
xchg
mov
cmp
xchg
lods
or
adc
jne
mov
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
xor
leave
ret
enter
add
pop
aas
or
fwait
push
push
inc
inc
frstor
insb
pop
sub
adc
scas
std
into
aas
and
and
mov
mov
cmc
mov
sbbb
call
rclb
mov
jno
xchg
ja
xchg
adc
aas
add
imull
cwtl
fnstenv
inc
jne
mov
sbbb
lret
out
rcrb
inc
lds
movsl
xchg
ss
imul
sahf
lcall
push
out
jo
in
ja
pop
fdivr
jo
sub
adc
movsl
imul
mov
mov
mov
xchg
pusha
push
les
cli
or
jb
jmp
in
pop
inc
mov
rcr
outsb
pop
mov
pop
mov
jg
sbb
dec
pop
jae
cs
jp
daa
jecxz
xchg
dec
cmpsb
push
push
sbb
pushf
mov
sbb
pop
xlat
and
dec
push
inc
adc
add
mov
push
sub
dec
icebp
and
pop
mov
mov
jne
call
loopne
mov
ret
push
mov
or
daa
stos
xchg
adc
cmpsb
shrl
cmp
or
push
jbe
icebp
mov
and
aam
cmc
fisttps
jo
sub
gs
ret
xor
ret
les
inc
cwtl
loopne
add
outsl
je
aaa
adc
cmp
push
push
inc
xchg
cmp
inc
andb
out
adcb
scas
pop
cltd
outsl
adc
xorl
popf
xor
inc
mov
push
shrl
adc
lock
dec
mov
mov
push
aas
lcall
outsb
jmp
lret
mov
pop
mov
and
xchg
xchg
jmp
sub
push
push
sbb
jbe
int
cmc
push
lea
mov
lods
sub
add
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
insb
dec
mov
enter
jg
push
call
push
xchg
pop
pop
das
aad
js
xchg
pop
push
ret
pop
aas
pushf
dec
test
dec
es
roll
stos
mov
sub
xchg
mulb
inc
sbb
bound
dec
dec
rcrl
xchg
test
sbb
xchg
and
adc
ja
in
shl
rcr
stc
aas
push
xor
or
mov
insl
ficompl
bound
lock
mov
orl
mov
jg
pusha
arpl
shrl
add
out
psrlq
sub
mov
ljmp
mov
lock
fadds
push
jo
das
outsb
xor
loopne
dec
lock
push
stc
cmpsb
leave
push
lock
xorb
inc
pop
xor
add
xor
jecxz
mov
sub
ljmp
push
fists
int
outsb
mull
imul
push
pop
pushf
push
mov
xor
mov
add
imul
inc
jl
xlat
xchg
cmpsb
in
pop
stos
jle
push
push
inc
xor
imul
mov
mov
mov
and
imul
mov
push
ret
scas
sbb
dec
je
mov
mov
mov
jno
jg
cmp
rorl
cmpsl
cmp
push
or
addr16
or
das
xchg
sub
mov
leave
jle
andb
fdivr
icebp
mov
rolb
rcr
or
cltd
repz
inc
cmp
out
loope
add
cmpsb
ror
dec
inc
xchg
ja
xor
sub
cwtl
int
jp
push
aaa
sub
arpl
int3
jle
clc
mov
jmp
mov
jo
xlat
mov
mov
ljmp
pop
push
jg
insl
push
sbb
push
aam
and
call
mov
mov
out
call
push
xchg
leave
xlat
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
lcall
movlps
pusha
push
add
shll
mov
mov
or
inc
shrb
lea
sbb
add
arpl
fs
sub
and
aad
push
stos
std
sbb
outsl
inc
das
sbb
repnz
test
decb
out
cmp
dec
nop
cmp
pop
mov
lds
push
mov
ja
dec
mov
mov
jne
pushf
pop
dec
push
inc
cli
jno
cmp
ja
mov
in
and
out
push
cmp
call
and
inc
test
shl
or
ret
add
sbb
mov
scas
andb
pop
fdivrl
fidivrl
xor
xor
lahf
and
pop
fimuls
sti
outsb
dec
aam
jne
jmp
movsl
mov
mov
loopne
out
loop
or
je
ja
movsl
cmp
pop
fs
xor
int
lods
mov
daa
es
rcl
pop
jg
lods
add
repnz
imul
mov
jno
cmp
test
xchg
js
in
mov
insl
add
aas
or
lcall
shlb
test
ja
fs
xchg
scas
push
imul
sbb
lret
mov
mov
stos
sbb
in
outsl
cmp
push
dec
mov
stc
pushf
fisttpll
outsb
cmp
sbb
je
scas
xchg
or
in
cmpsl
loop
pop
jge
add
lret
and
xor
lods
sub
das
mov
push
cmc
es
push
fisttpll
mov
cmp
rcll
fstl
bound
jecxz
ds
in
sbb
cmpb
and
out
addr16
inc
inc
cli
push
hlt
daa
mov
arpl
enter
mov
add
dec
push
jb
rol
sahf
xor
xchg
push
mov
jno
in
jge
jl
push
and
repnz
dec
push
pop
and
daa
push
cmp
xor
inc
mov
scas
or
sbb
mulb
add
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
adc
push
mov
adc
movlps
sub
pop
sbb
pop
add
out
cmpsl
imul
addb
pop
fidivs
mov
fstps
add
xor
hlt
pop
fisttpl
cmp
pcmpgtd
xchg
test
xchg
mov
push
loopne
inc
and
aad
shlb
or
sbb
fidivs
mov
fcompl
aad
dec
cli
jo
mov
repnz
sbb
or
sbb
pusha
mov
jmp
in
jb
cmc
scas
lahf
loopne
lcall
out
fsubr
rolb
adc
jmp
fsubr
push
xchg
push
push
fsubrs
aad
xor
adc
mov
mov
jns
test
int3
mov
mov
or
in
repnz
dec
cmpsl
addr16
dec
psubq
mov
xor
fisttps
xchg
mov
aam
jmp
xchg
mov
mov
add
lret
inc
jns
xor
test
nop
jno
mov
fistps
sub
xor
mov
imul
sbb
xor
sub
outsb
mov
fsubp
inc
and
dec
call
xchg
push
jne
add
lahf
lock
rorb
adc
mov
and
cs
rorl
add
fmul
ret
pop
popf
movsl
neg
or
lds
fnsave
mov
mov
jns
xor
clc
push
xchg
mov
bound
sub
outsb
fiadds
jo
push
xlat
dec
and
adc
push
arpl
xor
lahf
push
clc
ja
add
repnz
insb
shr
ret
leave
push
jmp
pop
xchg
jo
shr
and
mov
or
and
test
dec
scas
mov
xchg
push
mov
xchg
pop
mov
pop
jl
inc
fisttpl
push
das
jl
mov
popa
movsl
inc
je
scas
mov
orl
into
sub
xor
lahf
aaa
adc
lret
xchg
arpl
std
loop
enter
xchg
dec
out
add
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
push
ljmp
adc
movlps
mov
push
and
cwtl
shrb
jge
in
aaa
dec
fsubs
imul
push
shlb
and
lcall
movb
in
es
xor
fsts
les
inc
dec
into
daa
sub
pop
es
mov
cmp
pop
hlt
mov
mov
dec
mov
xchg
inc
push
insb
cmp
dec
ss
loop
mov
lods
or
loope
jmp
dec
or
and
pop
std
push
ret
scas
in
hlt
std
cltd
and
out
pop
sub
xlat
ljmp
pop
mov
dec
dec
cmp
push
testb
aad
pushf
adc
add
pop
test
pop
inc
divb
mov
push
jbe
or
cmp
dec
mov
dec
lock
pop
jle
adc
jecxz
loop
leave
loope
es
sub
mov
les
inc
or
popa
and
ljmp
inc
dec
xchg
popf
jl
or
or
in
mov
push
push
jmp
cltd
pop
xor
test
push
testb
fs
pop
stc
sub
pop
or
mov
ss
mov
jb
in
mov
das
mov
xchg
jg
test
mov
out
sbbb
repnz
cmpps
lret
mov
pushf
xor
xchg
push
movsb
idivl
sub
xchg
in
fwait
sub
cmp
adc
push
push
or
pop
cwtl
sbb
add
dec
xchg
and
addl
es
cmp
lods
loopne
inc
dec
push
iret
fiaddl
sub
mov
jge
inc
inc
cmp
or
mov
notl
test
mov
and
inc
gs
adc
sub
mov
insb
or
sub
mul
dec
in
xor
dec
xchg
dec
je
pusha
jnp
dec
sbbl
and
and
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
sbb
adc
adc
mov
push
mov
cmp
mov
sbb
xchg
xchg
cwtl
sbb
jo
sbb
test
leave
inc
or
enter
mov
cli
movl
addl
pop
lret
push
or
cmp
negl
jge
jle
xor
fcoms
add
push
ret
pop
test
subl
aas
mov
jb
inc
clc
mov
push
je
xchg
and
aaa
in
inc
cmp
test
or
add
pushl
jb
out
movb
lcall
sbb
cs
mov
mov
fcoms
mov
or
or
pop
pop
add
bound
push
add
add
pop
sbb
and
cmc
mov
lret
dec
lcall
outsl
cmp
cmp
fcomps
push
mov
sbb
pop
or
inc
mov
adc
xchg
dec
call
pusha
in
push
aaa
cmp
or
xchg
jno
pop
sbb
ret
xorb
int3
jno
negb
add
imul
jmp
sbb
outsb
cli
in
imul
add
push
int3
stos
mov
mov
add
jg
cmpsb
xchg
leave
test
into
pop
or
pop
iret
mov
imul
add
ret
mov
lods
outsb
out
or
lds
decb
fdiv
adc
int
add
dec
popf
pop
pop
inc
xorps
mov
jo
and
cmc
cmc
gs
sub
pop
test
daa
and
pop
cmp
rclb
add
cs
xchg
sub
mov
outsb
pop
inc
push
psraw
adc
mov
sub
add
aaa
out
pop
lods
mov
pop
dec
push
icebp
stos
stos
jne
int
lahf
in
sbb
fwait
and
icebp
cs
aas
jecxz
aas
push
xchg
jle
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
cmpsb
add
enter
nop
sbb
lret
add
gs
ror
add
xchg
mov
pop
int
xlat
inc
sub
insl
in
jl
add
and
lds
mov
hlt
inc
ror
pop
push
mov
out
cmp
ja
sbb
or
and
fwait
insb
mov
xor
scas
mov
xchg
leave
jae
lods
ss
les
sub
mov
aaa
cltd
jae
push
mov
pushf
iret
jo
adc
aad
gs
je
jns
repz
mov
and
icebp
xchg
jg
cltd
bound
aaa
xorb
hlt
cmp
lret
jmp
loope
in
push
stos
fwait
sbb
out
cli
inc
cwtl
push
adc
shlb
rcrl
rorb
add
add
cmpsb
mov
jb
mov
inc
pop
or
ja
push
leave
aam
cmp
in
fildll
cmp
xchg
cmp
int
xchg
insl
jg
adc
int3
add
and
sub
hlt
gs
popa
mov
jecxz
out
movsb
mov
push
inc
psubb
loop
and
out
test
lahf
xor
insb
mov
xchg
popa
bound
mov
push
mov
adc
adc
push
fs
cltd
or
push
push
cmp
or
jg
insb
cmpl
add
int
rorb
mov
pop
mov
jge
repz
fisttps
mov
inc
cli
xor
jb
cmp
loope
ret
inc
int
mov
push
cld
cmp
lret
rol
pop
movsl
loop
sahf
or
outsl
fimull
sbbl
push
ja
xlat
les
repz
std
mov
imul
bound
popa
or
xchg
jmp
push
adc
mov
cltd
test
mov
cltd
inc
pop
pop
lahf
je
aad
dec
push
hlt
mov
outsb
cld
mov
aas
push
ret
jne
pop
xchg
loop
ds
sahf
addr16
xchg
pushf
lods
jge
jge
inc
jo
sbb
repnz
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
rcrb
mov
enter
fucomip
psubsb
repnz
scas
pop
mov
mov
push
sahf
mov
pop
and
ret
adc
lahf
pop
imul
fbld
hlt
mov
rolb
cmp
fwait
cwtl
pop
repnz
push
je
mov
and
cmp
push
movsl
je
xor
push
cmc
mov
jnp
scas
sbb
xchg
xlat
int
adc
mov
popa
mov
insl
outsb
test
inc
dec
xor
xorl
out
ret
xchg
in
cmpsb
jne
sbb
movsl
jo
rorl
mov
cli
scas
mov
jo
add
cwtl
hlt
add
in
add
test
jl
mov
out
sub
adc
cli
test
push
pop
add
hlt
inc
xchg
test
jg
cmp
std
mov
in
inc
cld
imul
or
dec
ja
sarl
mov
hlt
out
or
repz
and
and
pop
or
pop
pushf
mov
mov
mov
fnstenv
insb
sbb
imul
jbe
jp
lock
fiadds
push
sbb
lahf
or
mov
cmc
insl
cmpb
or
lock
test
jg
and
out
sbb
cmpl
pop
pop
repz
out
or
rcrl
popa
adc
stos
loopne
pop
fstpt
add
rol
inc
push
and
xor
pop
rclb
stos
adc
add
gs
cwtl
shrb
fcomps
xchg
jo
lcall
sub
das
jle
hlt
xchg
ss
scas
mov
adc
nop
cmp
xchg
jmp
loop
jbe
and
cltd
fs
xor
xor
mov
cmc
xchg
ret
nop
push
movsl
stos
jmp
cmp
lret
ret
loopne
xchg
sbb
mov
fcomp
jns
sub
pop
xor
mov
fcmovu
or
dec
cmp
and
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
mov
enter
xor
lea
roll
pop
insb
pushf
push
mov
fwait
mov
inc
call
xchg
jae
jno
adc
testb
enter
mov
out
stc
xchg
aad
enter
cpuid
mov
jmp
mov
pop
in
inc
addr16
lret
popf
jg
lods
fnstcw
lods
cwtl
inc
dec
cld
mov
sti
cmpsl
cs
loope
insb
out
jns
push
and
rcrb
xchg
cmp
add
push
mov
cs
mov
push
lret
mov
inc
cltd
cli
and
add
inc
ret
jmp
mov
mov
rol
aam
pop
or
jle
mov
and
shr
out
mov
maxps
aam
loopne
xchg
mov
adc
test
and
mov
setb
pop
ficoml
cmp
ret
push
jge
lods
sub
jnp
shr
or
outsl
jno
sahf
mov
fdivs
gs
pop
pop
xor
es
xor
sbb
add
mov
xor
lea
dec
cmp
sbb
push
or
xchg
orl
cmp
xchg
lahf
push
and
xchg
ret
data16
mov
jmp
push
pop
xchg
push
inc
int3
or
mulb
stos
nop
mov
imul
pusha
dec
inc
fcmovne
inc
and
sahf
push
shlb
dec
adc
dec
and
xor
dec
xchg
dec
mov
dec
iret
ja
jge
xchg
mov
sbb
sub
xor
icebp
pushf
jae
mov
fisttpll
mov
add
cwtl
sbbb
loopne
or
mov
jg
dec
inc
sbb
push
imul
sub
add
fstps
xchg
jbe
xor
or
fistl
out
out
xor
push
jnp
bound
mov
push
jae
push
int3
mov
fucomi
mov
test
cltd
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
pop
inc
stos
sbb
movlps
lock
jbe
clc
jg
gs
dec
lods
mov
loop
enter
loopne
loop
pop
fldl
dec
mov
mov
mov
add
addb
jnp
repz
std
inc
mov
int3
mov
xchg
push
or
mov
imul
mov
imul
shll
fnstsw
mov
out
repnz
adc
cs
cmpsb
cmp
jns
xchg
in
push
aam
pop
push
xchg
mov
in
mov
push
sbb
test
in
js
mov
out
mov
mov
and
add
mov
nop
inc
add
add
sub
pusha
scas
imul
fimull
and
or
inc
dec
dec
lcall
xor
pop
or
pop
int
mov
iret
sub
and
incl
xchg
dec
stos
pop
cmp
add
daa
inc
inc
or
fldenv
fcomp
imul
pop
mov
push
idivb
mov
ss
or
and
mov
jnp
out
mov
or
outsl
inc
and
dec
push
loop
mov
sbb
xor
sbb
mov
mov
test
mov
test
push
cmp
movsl
sahf
lds
jb
push
inc
js
notb
sbb
inc
mov
add
nop
mov
loop
movsl
fwait
adcl
out
fimuls
sub
nop
nop
insb
fcomps
fsubl
loope
lods
sbb
push
inc
inc
fmulp
popa
jg
mov
mov
pop
and
addr16
arpl
sub
sbb
in
sub
dec
jae
cmp
lret
dec
lcall
and
aaa
jno
sub
ret
movb
lret
cmp
push
sbb
enter
std
hlt
in
fisubs
fsubl
adc
mov
lock
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
stos
ljmp
movlps
jp
ret
jmp
ror
sarl
or
jl
cmp
xlat
insl
int3
xchg
pop
sbb
xor
jo
rclb
jno
pop
push
popf
ss
ds
add
das
sub
sahf
mov
fadd
bound
fstps
leave
mov
ja
lahf
xlat
cmp
xchg
lods
sbb
repnz
ficoms
xchg
movsb
jmp
pop
shrl
push
pushf
mov
rorb
mov
adc
jb
outsb
ds
pusha
mov
outsb
push
xor
push
pop
adcl
inc
mov
mov
cmp
add
mov
lret
xlat
aad
or
loope
mov
je
dec
add
in
sti
fstpt
test
add
jne
pop
add
push
lret
mov
add
mov
cmp
lcall
xor
repz
icebp
mov
and
pop
jp
pop
push
test
jnp
jno
pop
cmc
faddl
movsl
sbb
rorb
icebp
adc
nop
sarl
xor
lds
test
dec
testb
in
ss
jbe
popa
jns
mov
xor
push
mov
push
scas
popa
repz
or
out
scas
lods
sahf
dec
mov
fsubrs
add
jl
sub
mov
stc
mov
lret
jle
sti
push
xchg
filds
loopne
mov
call
or
sbb
leave
lcall
test
jp
dec
js
jne
and
mov
rcrl
aad
push
add
hlt
fcomip
xor
sub
jne
outsb
rol
dec
mov
test
sub
cltd
pop
mov
or
mov
icebp
in
push
aad
sbb
lods
push
enter
xchg
stos
das
repz
in
add
int
test
test
cmp
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
repz
push
xchg
adc
adc
xor
adc
jmp
adc
fs
xchg
repz
and
cli
or
sbbb
gs
int
or
movsl
and
es
loop
sub
sbb
pmaxub
mov
fsubrp
xchg
ja
mov
cmp
xchg
mov
push
mov
into
push
xorb
icebp
pop
cltd
aaa
cmp
mov
push
loop
cmp
mov
data16
dec
int3
cmp
aaa
sub
mov
add
sbb
imul
aam
das
push
jmp
lret
push
mov
popl
repnz
xor
test
leave
mov
inc
fsubs
xlat
cmp
mov
movsb
xchg
dec
popa
xor
imul
pop
sbb
mov
add
fiaddl
dec
in
pop
mov
sbb
mov
clc
jg
mov
scas
addb
add
xchg
add
jl
sub
int
mov
push
bound
jae
mov
push
std
lea
sbbl
fmuls
mov
sbb
mov
mov
push
aam
xor
xlat
and
std
pop
mov
mov
fwait
push
mov
and
aad
cmpsl
scas
je
dec
sub
mov
out
jns
or
dec
and
les
fiadds
pop
mov
mov
fbld
jmp
ficoms
fnstcw
dec
movl
cs
inc
and
mov
mov
mov
add
fwait
imul
inc
jnp
shlb
cmp
in
iret
sub
sub
xchg
mov
mov
push
cmp
pop
popa
subb
mov
fs
call
pop
ret
add
out
ja
iret
add
or
movsl
mov
popa
and
aas
loop
dec
mov
add
enter
push
mov
repz
add
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
mov
push
push
mov
adc
sub
in
or
jge
je
dec
xlat
cmp
mov
loopne
aaa
cwtl
push
pop
xchg
fsubr
pushf
loope
nop
add
sub
jl
insl
adc
insb
stc
add
dec
cmp
pushf
dec
pop
aad
aam
jp
movsb
shr
imull
mov
sbb
push
dec
xor
fisubrs
mov
clc
mov
test
data16
aad
inc
negl
mov
cmp
pop
mov
push
pop
ljmp
dec
mov
mov
rcr
mov
aam
and
jmp
xchg
sub
push
or
popa
pop
lret
inc
cmp
jbe
jge
loop
data16
iret
xor
push
mov
or
jb
iret
or
pop
dec
fldcw
dec
fbld
jb
cmpsl
xchg
lock
aas
stos
fstpl
movsl
clc
or
inc
xlat
or
clc
dec
fiaddl
rcrb
nop
mov
stos
rcrl
inc
mov
dec
pushf
sahf
enter
idivb
mov
adc
fs
jmp
frndint
cmp
je
ret
xlat
faddl
cmp
jp
dec
adc
in
push
mov
xor
cli
mov
mov
inc
pop
repnz
jnp
sti
fstpt
and
xlat
dec
shll
in
mov
arpl
or
cli
cmc
mov
hlt
cmp
aaa
xor
xchg
imul
push
xor
dec
pop
fdivs
int
movsl
js
rorl
sahf
mov
and
lods
mov
and
stos
sbb
push
inc
rcr
je
int
outsl
cltd
stc
in
push
imul
ja
sbb
in
in
and
mov
xchg
out
ret
sbb
lahf
fstl
xchg
data16
add
mov
push
cmp
fsts
mov
fcmovb
lea
stc
push
scas
rcl
pop
cmp
dec
jg
ljmp
les
or
xchg
and
das
cmp
push
pushf
mov
enter
movsl
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
xchg
fdivs
lahf
cmp
mov
adc
pop
sub
push
imul
mov
pop
mov
punpckldq
mov
mov
pop
xchg
pop
mov
sbb
rclb
sbbb
dec
inc
xor
lock
jbe
fdivr
sti
out
adc
js
std
and
jne
fwait
pop
push
rcll
insl
cmp
mov
std
dec
js
add
mov
dec
repz
out
and
adc
cli
xchg
mov
std
shrl
pop
jmp
sbb
lock
push
and
sbb
call
out
icebp
test
push
inc
xor
mov
sub
mov
fisubl
pop
movsl
sub
in
inc
ss
mov
jo
shll
aas
inc
sub
sbb
psllw
js
jno
ret
test
sub
scas
into
insb
jl
aad
aaa
loopne
cmp
js
pop
xchg
mov
or
cmc
mov
add
cmc
xchg
pop
xchg
loop
sub
enter
inc
popf
xchg
or
xlat
arpl
xchg
mov
mov
dec
xor
and
fisttps
mov
inc
xchg
inc
sbb
lret
stos
sbb
loope
xchg
jle
jae
and
sub
je
mov
add
push
pop
cmp
arpl
aaa
mov
dec
out
repz
outsb
and
ja
push
jns
adc
cld
mov
push
mov
lcall
addb
scas
jno
mul
fldl
outsb
js
stc
popa
xor
mov
shl
jmp
in
push
outsb
out
adc
sbb
pop
adc
mov
aam
ret
push
clc
inc
imul
hlt
out
fidivs
push
fisttpll
subl
psllq
mov
into
aam
inc
pop
int3
lea
mov
fnsave
bound
or
mov
scas
xchg
ds
ss
std
out
mov
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
push
inc
push
mov
enter
add
jp
push
insl
test
addr16
inc
fisubs
outsb
inc
mov
and
adc
or
or
loope
aad
jl
cmp
push
add
lret
rcr
adc
mov
push
jb
xorb
or
jle
push
xor
push
sub
cmpsb
gs
add
cmpsl
aas
or
mov
xor
push
and
pop
cmpl
push
cs
call
in
sti
aad
sbb
hlt
xchg
in
push
inc
orl
adc
ret
xchg
sub
dec
xlat
dec
sub
xchg
movsl
hlt
mov
in
pop
push
cld
adc
insl
or
jp
imul
push
inc
loope
xor
in
jb
int
push
js
leave
rclb
lar
lret
pop
sahf
rcl
mov
dec
and
neg
push
gs
jecxz
mov
or
in
pop
dec
fdivs
and
inc
and
sub
xchg
inc
aaa
sbb
add
adcb
ret
or
fptan
cmp
sub
aad
cmp
mov
jge
or
adc
js
sub
add
inc
pop
lds
dec
pop
jmp
xor
add
push
jns
js
arpl
clc
sbb
push
adc
xor
xchg
cmp
rorb
sbb
pop
pop
add
ret
cltd
movb
fadd
push
jns
ss
imul
inc
insl
mov
ffree
and
add
cmpsl
mov
gs
add
mov
inc
shlb
and
jnp
sub
mov
data16
mov
and
cmp
je
mov
xor
mov
in
daa
add
sti
test
cmp
fldt
loop
aad
aas
lret
fwait
stos
lea
mov
and
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
std
in
jle
adcb
xchg
inc
dec
inc
and
rcrl
fadds
int
inc
test
or
sbbb
jg
test
out
insb
outsl
jns
aas
repz
inc
test
pop
pusha
stos
jb
jle
add
stos
fnsave
shlb
xchg
es
adc
add
sbb
scas
inc
or
out
xchg
vfnmsub231sd
loopne
out
lods
xor
mov
mov
mov
outsb
js
mov
mov
cs
mov
cmp
cs
push
scas
mov
push
mov
mov
ljmp
in
ror
mov
and
fldenv
pop
mov
pusha
idivb
xor
jecxz
add
cwtl
rorb
daa
dec
xor
cmpsb
or
sub
cmp
test
mov
jmp
insl
imul
incb
popw
les
jno
frstor
sbb
inc
mov
ds
mov
inc
mov
clc
pop
sbb
lcall
stc
cld
jmp
aad
jo
and
jbe
xchg
sub
sbb
push
mov
repz
divl
mov
mov
mov
mov
lret
lock
cwtl
fnstenv
mov
aas
daa
xchg
imull
scas
sub
inc
mov
mov
xchg
pop
outsb
xchg
frstor
pop
shll
movsl
mov
dec
xchg
xchg
nop
or
in
and
jo
push
inc
add
mov
jno
xorl
inc
or
stc
aas
ja
testb
jp
test
aam
int
inc
repz
out
dec
stos
mov
nop
pop
loopne
cwtl
dec
lcall
sbb
sbb
jl
sbb
xor
mov
inc
dec
ds
stos
das
insl
add
mov
xlat
inc
jp
stos
data16
sbb
inc
pop
xchg
movsl
jo
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
ficomps
mov
enter
aas
aas
or
out
inc
test
inc
mov
and
and
pop
push
adc
addl
mov
lcall
add
int
jp
mov
and
inc
xor
cmp
pop
cmp
movsl
push
jnp,pn
fcoms
adcl
cmp
adc
clc
pop
cmpsb
push
in
push
pop
fcompl
push
ss
movsl
push
xor
popa
lea
push
jne
inc
dec
icebp
mov
test
lds
pmulhuw
inc
lds
cmpsl
ja
cmp
pop
in
inc
push
inc
xor
and
es
mov
mov
and
ja
test
nop
push
add
cmp
jbe
mov
push
mov
cli
inc
mov
aam
ss
out
adc
adc
mov
xor
mov
push
insl
enter
mov
push
int
inc
pop
scas
rcll
cmp
roll
xor
add
mov
add
xchg
aaa
ret
jnp
movsb
test
or
xchg
pop
cmp
jno
jnp
lea
mov
inc
inc
dec
mov
loope
fadd
push
ds
mov
iret
pop
outsb
popf
subl
test
cmp
out
add
sbb
sbb
loop
pop
stos
jmp
insb
xor
lahf
out
orl
in
and
cmp
pop
push
push
sarb
jbe
shl
add
into
loopne
pushl
add
mov
mov
xchg
stos
push
stos
call
into
mov
test
sbb
in
arpl
ljmp
outsl
test
cmp
stc
negl
shrb
movsl
mov
in
fists
insb
lahf
insb
xor
sti
leave
scas
dec
je
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
outsb
mov
movlps
cmp
mov
add
push
lahf
push
bswap
xor
mov
adc
jb
xchg
adc
sbb
jg
fs
rol
rclb
pop
mov
jo
cs
sbb
mov
arpl
enter
mov
push
inc
pop
cmpsb
push
mov
pop
fdivrl
cs
mov
adc
or
pop
insb
fldcw
pop
es
lret
loope
adc
dec
mov
adc
cmp
repz
push
xchg
xorl
sub
adc
inc
shrb
fistl
push
pop
cmp
movsw
dec
fcoms
jge
insb
dec
inc
lods
xchg
sahf
mov
loope
mov
cmp
addr16
sub
fstl
mov
sub
sub
push
andb
xor
xchg
mov
inc
sub
mov
and
add
fdivl
outsb
insb
call
out
xor
lods
pop
cld
sbbb
xor
out
inc
pop
fdivrl
pop
dec
cld
loopne
pushf
push
movl
push
xchg
inc
fistl
xchg
cmp
or
lret
in
pop
int
and
mov
push
sti
lock
mov
jmp
pop
jge
clc
fcompl
movsb
lret
fwait
jns
in
pop
mov
mov
mov
lcall
test
mov
mov
inc
mov
enter
push
arpl
cs
push
enter
jp
xor
sub
push
jbe
or
les
cli
dec
push
lods
daa
insb
pop
test
jle
dec
add
sbb
sub
scas
fstpt
push
mov
mov
sub
popf
out
mov
adc
fildl
rolb
insb
pop
jne
stc
addl
pop
aaa
das
hlt
scas
fcoms
mov
cmc
outsl
push
pop
jmp
pop
pop
test
out
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
cmp
adc
adc
into
xor
mov
jmp
cwtl
mov
dec
jno
mov
or
fidivrl
fcmovnu
add
mov
lret
push
lret
sahf
rclb
xchg
jnp
call
das
mov
dec
pop
inc
faddp
lcall
popa
in
enter
or
js
push
iret
lods
fsts
fsubs
or
pop
stc
stos
psubq
and
cltd
mov
sbb
cld
shlb
adc
daa
adc
leave
loope
addr16
add
and
and
aas
xchg
and
add
pop
test
cmpsb
cmp
xor
cmp
data16
cmp
mov
dec
push
lds
and
imul
jb
sub
outsl
xchg
jmp
adc
mov
fidivrl
ffree
cmc
mov
fcompl
out
mov
xchg
fldcw
mov
ds
push
sbb
movsb
outsb
jl
cld
xor
sub
addb
adc
lock
and
ret
mov
jo
imul
lret
dec
mov
pop
pop
int
cmpsl
mov
pop
inc
daa
mov
aas
insl
sub
add
repnz
add
out
xchg
aas
stc
xchg
push
xor
inc
int
dec
mov
inc
pop
push
dec
into
cmp
xchg
popa
mov
push
xchg
lods
xor
and
hlt
hlt
dec
out
aam
lock
popf
add
adc
hlt
inc
inc
mov
pop
lret
adc
cltd
jb
push
repnz
and
popa
sub
sbb
in
pop
pop
mov
mov
pop
fcmovnbe
dec
mov
in
push
ret
mov
adc
dec
xor
xchg
aam
cltd
xchg
inc
cwtl
xchg
lods
add
sbb
mov
in
inc
iret
lret
pop
sti
leave
cmp
nop
jge
out
std
ret
lea
pushf
push
js
rclb
sub
rcll
rol
xchg
sub
add
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
mov
and
insb
adc
adc
ficoml
or
icebp
insl
pop
mov
jecxz
adc
mov
inc
data16
enter
xor
scas
cmp
add
ss
bound
pusha
and
aaa
lea
or
ds
arpl
andl
sbb
lret
jns
cltd
and
sub
aas
mov
cmp
xchg
pop
push
addr16
shl
jne
sbb
stc
test
push
mov
cld
data16
push
xchg
stc
adc
pop
jg
sub
push
sub
dec
mov
jns
dec
fiaddl
jp
int
cmp
sub
cmp
mov
xchg
out
sahf
adcl
lahf
or
insb
jl
test
lahf
cld
rcl
cmpsl
xor
leave
movsl
out
jae
mov
xchg
bound
mov
mov
xor
cld
dec
push
out
or
mov
and
pop
push
and
std
test
addr16
rcr
sub
xor
shlb
test
out
outsl
jae
mov
dec
and
xchg
ja
inc
sbb
rcr
adc
or
or
sub
inc
jae
mov
jge
mov
inc
js
and
xor
sub
mov
scas
paddd
mov
xor
add
inc
pmaxsw
xchg
sahf
sub
aaa
nop
and
lret
push
in
xchg
insb
popf
push
mov
ja
add
repnz
cmp
hlt
pop
and
dec
lock
mov
cbtw
insb
pushf
inc
in
fistl
push
mov
adc
outsb
jnp
lds
lahf
add
xor
ss
bound
sti
leave
dec
fxam
mov
dec
jp
jmp
int3
out
and
imul
pusha
add
pop
cmc
sub
imul
pop
div
mov
sub
xor
test
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
pop
push
loopne
fldcw
adc
movlps
dec
fcmovu
sbb
js
inc
dec
dec
push
adc
pop
popa
aam
jge
fmull
cld
rcl
pop
and
std
sarl
jl
add
cmc
gs
mov
mov
inc
pop
or
inc
repnz
call
push
pop
or
mov
shr
pop
jbe
adc
out
arpl
dec
fwait
xchg
cld
pop
pop
cs
sbb
and
mov
mov
xor
pop
xor
loope
out
rorl
fcomps
loope
mov
out
ficoml
jno
shll
cwtl
xchg
cmp
ljmp
pop
xor
cs
cs
mov
pushf
xadd
into
lods
lret
sub
cmp
ficomps
bound
cmpsl
xlat
insl
test
mov
cmpb
sbb
sar
adc
lcall
movsb
dec
dec
mov
push
inc
mov
inc
cmp
add
xchg
out
or
sub
inc
stos
inc
push
inc
xchg
cmpb
push
ja
mov
push
jecxz
adc
cmpsb
fadd
jg
mov
cli
cmp
push
adc
jg
xchg
xchg
insl
add
cwtl
les
cmp
xor
mov
mov
jp
push
xor
jne
jp
subl
and
clc
fucomi
push
pop
jmp
das
pop
xlat
in
mov
mov
mov
repz
pop
ja
je
inc
sbb
ljmp
inc
xchg
stc
iret
in
mov
inc
in
and
push
insb
mov
nop
ficoms
or
jb
mov
xchg
push
and
sub
lods
xchg
mov
in
out
flds
call
mov
xchg
cltd
fwait
xchg
jp
cmp
imul
push
cmc
xor
add
mov
sbb
mov
es
cli
push
xchg
cmc
fdiv
jae
xchg
jno,pt
test
in
lds
rcrl
sbb
into
outsb
movsb
pop
mov
and
xor
jns
loope
mov
or
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
mov
lea
enter
nop
gs
loop
adc
pop
and
jb
shll
or
les
out
shll
popa
fsubs
movsl
pushf
xchg
sbb
int
cmp
stos
sbb
adc
call
inc
lods
mov
aaa
push
add
ret
dec
push
pop
repz
pushl
mov
adc
ret
in
pop
pop
cwtl
ss
test
xor
stc
or
pop
push
adc
ds
pop
aas
fs
hlt
dec
cli
sbb
add
mov
push
sarl
leave
jb
js
frstor
lods
loopne
hlt
mov
fidivs
cmp
xchg
sti
inc
popf
mov
xchg
inc
aaa
or
arpl
scas
or
pop
add
and
mov
adc
lock
aad
dec
pop
adc
mov
out
arpl
out
jo
inc
int
pop
out
sub
mov
mov
xor
mov
pop
or
in
or
cs
pop
xor
mov
fimuls
ljmpw
imul
or
jns
js
dec
mov
sti
ss
cmpsl
inc
xor
or
in
or
ret
jns
mov
stc
pusha
stos
mov
call
jge
push
popa
dec
push
iret
cmp
call
jno
pushf
fisubrl
pop
test
dec
aaa
int
mov
lcall
xlat
mov
cld
mov
mov
pop
test
cmp
pop
dec
mov
push
loopne
addr16
test
daa
daa
faddp
xor
dec
jns
icebp
les
je
in
dec
inc
jp
pop
imul
fwait
dec
push
adc
sbb
cmp
cmpsl
pop
popf
adc
mov
push
stos
stc
test
rolb
sub
dec
jl
adc
cmp
and
adc
inc
mov
out
jp
inc
xor
xor
jae
fldl
dec
dec
ljmp
and
inc
out
dec
lds
adc
sub
xorl
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
enter
cli
cli
data16
cmp
test
push
push
xchg
adc
inc
lcall
sub
push
dec
or
popa
and
js
ja
loopne
jmp
bound
mov
out
or
xchg
mov
lret
clts
outsl
pop
xchg
sahf
pop
incl
out
mov
or
fnstcw
jns
test
lds
loope
fwait
xor
das
sar
mov
stos
pushf
cmp
addr16
enter
mov
add
cmpsb
enter
push
jb
cmp
enter
pop
fmuls
sti
pop
call
xchg
push
sub
shlb
or
push
lock
dec
stos
fisubrl
and
aas
mov
mov
js
add
fisubrs
push
push
mov
leave
push
jne
lock
dec
mov
push
in
mov
sbb
xor
lea
sub
mov
lea
pop
push
and
jns
lods
fdivrs
lds
out
xchg
cmp
sub
loopne
outsb
rcl
popa
callw
pusha
daa
pop
jp
faddl
scas
sbb
jecxz
ljmp
iret
cmp
mov
les
pop
inc
jle
sbb
pop
cmp
adc
xlat
aas
mov
aaa
movsl
movsl
push
sbbb
inc
dec
test
loop
shlb
mov
dec
cli
imul
ds
bound
mov
cmc
mov
movsb
adc
xchg
shll
add
scas
push
fsubrl
inc
lods
hlt
mov
adc
adc
les
mov
sub
aaa
adc
in
loop
pop
sub
fstp
shll
test
inc
sbb
or
inc
xlat
lds
jns
xor
cs
xchg
sti
xchg
ja
push
xchg
cmp
shlb
mov
push
call
stos
in
popf
rol
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
and
insb
cmc
pop
adc
adc
mov
das
push
sbb
pop
or
data16
cmp
xchg
lds
movsl
es
mov
imul
jnp
mov
cmc
xor
fs
mov
mov
scas
sub
pop
xchg
cmp
js
sub
shll
inc
push
pop
jecxz
std
fistps
sbb
mov
mov
enter
cmp
shlb
add
lea
out
mov
mov
xchg
insb
insl
dec
sbb
sub
in
gs
mov
inc
bound
aas
stc
cmpsl
push
mov
dec
push
fbstp
jg
dec
mov
cmp
rol
or
pusha
test
cmpsl
or
in
les
or
insb
push
roll
or
fmull
cld
jo
xchg
inc
xor
mov
shlb
pop
pop
idivb
std
pop
inc
pop
mov
jmp
or
mov
mov
mov
bound
jno
bound
movsb
jl
aaa
fsubp
std
sbb
jl
sub
xor
insb
sub
or
cmp
or
add
add
sub
and
pop
mov
dec
inc
jp
pop
mov
lods
insb
adc
sahf
test
xor
mov
daa
cld
ljmp
mov
and
and
mov
aas
push
pop
mov
addr16
mov
call
jecxz
lahf
in
outsl
rcll
ljmp
gs
sbb
xchg
out
and
int3
mov
jl
xor
xor
inc
stos
ficomps
inc
sarl
mov
jle
push
add
jns
test
mov
jbe
add
cmp
sbb
jge
dec
rclb
movsl
in
das
iret
loop
sub
sti
cmp
jmp
jg
sbb
cmp
cmp
fstpt
jns
shll
test
test
decl
test
add
add
decl
decl
decl
xchg
add
adc
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
adcl
adc
adc
adc
out
jbe
jmp
adc
leave
mov
test
xchg
cwtl
lods
stc
inc
out
cmovbe
jl
cmp
pop
movsl
enter
sbb
mov
inc
mov
dec
cli
in
push
call
push
negb
pushf
ljmp
shlb
roll
aad
xor
gs
xchg
movsb
inc
xor
dec
dec
sub
pop
and
or
hlt
mov
pop
pop
ficomps
or
out
mov
hlt
add
movsl
xchg
into
push
std
dec
loopne
jbe
stos
inc
cs
ret
loopne
test
cmpsl
sbb
in
into
aas
adc
ret
mov
movsb
xlat
adc
xor
xor
xor
test
sub
jmp
icebp
out
adc
jo
cmp
divl
xlat
popa
mov
jne
enter
dec
add
or
popf
lock
jecxz
xor
adc
pop
dec
dec
sub
inc
xchg
setl
insl
sbb
push
loop
dec
addr16
adc
roll
aas
cmp
popa
jae
cmc
test
addl
loopne
sahf
lret
jge
mov
cs
int
movsl
or
adcl
push
inc
push
dec
mov
fs
jno
dec
xlat
cld
pop
xchg
jl
mov
lcall
jmp
test
mov
pop
fisubs
std
mov
lds
xchg
adc
cmpsb
and
insb
divb
nop
scas
sbb
sub
dec
or
das
daa
aaa
and
sbb
ss
adc
push
pop
pushf
jl
es
xor
mov
sbb
imul
push
ja
push
mov
jae
sub
sub
sub
cmc
dec
mov
jp
mov
movsl
mov
lcall
insl
loop
std
push
xor
cmp
mov
add
gs
mov
pop
sbb
iret
jecxz
push
sbb
inc
and
idivl
inc
sbb
test
inc
outsb
xor
sub
mov
jns
pop
jle
les
jmp
sub
int3
lret
push
xorb
mov
mov
push
or
add
subl
addr16
js
bound
jp
xlat
xorl
mov
adc
sub
aad
loope
js
cmp
xor
jbe
jl
cs
ret
inc
mov
out
rcrl
xchg
test
ds
push
cmp
inc
inc
or
mov
jbe
ss
imul
bnd
dec
mov
fcomps
fdivrs
stos
xchg
bound
in
pop
jl
cmpsl
push
jl
pop
mov
xor
and
js
sub
jbe
mov
mov
jg
push
clc
or
mov
sarl
out
into
js
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
mov
adc
adc
rcll
mov
and
push
shlb
cltd
cmpsl
call
pop
jmp
dec
addb
sbb
push
cmp
lahf
lahf
inc
leave
xor
insb
push
push
outsb
ds
fincstp
and
das
movb
inc
out
pop
xorl
lea
les
mov
fidivl
and
push
push
lds
xchg
mov
lds
iret
in
xchg
test
inc
sub
sub
stc
xchg
pop
jmp
jnp
lret
pushf
sbb
mov
push
sub
in
in
cmc
dec
loope
mov
adc
jmp
jne
and
aas
xchg
lods
cmp
pop
push
jns
out
orl
in
jge
cmpsl
movswl
scas
push
inc
adc
mov
mov
out
gs
loopne
adc
shrb
jo
mov
div
xor
scas
xchg
loopnew
or
hlt
add
jp
pop
fdecstp
mov
and
dec
inc
frstor
out
add
cmp
add
push
mov
mov
neg
andb
sub
test
adc
inc
and
jl
dec
int3
outsl
outsb
mov
jmp
ficoms
lahf
in
cmc
aad
std
mov
sbb
and
sahf
idivl
jb
cmp
test
add
stos
cmp
incl
imul
addb
push
ss
dec
add
mov
cld
dec
mov
out
cmpb
or
mov
xor
dec
int
pop
jl
cld
add
mov
ds
xor
popa
push
pop
stos
repnz
xor
divb
mull
pop
mov
lret
aaa
push
cmp
and
fsubr
inc
cmp
pop
cli
pop
xor
dec
int
inc
insb
lret
data16
lock
adc
pop
xor
mov
in
jnp
ljmp
mov
xchg
iret
mov
push
cmpsb
rcll
int3
cltd
lods
imul
aaa
pop
fwait
xor
ja
ja
lret
iret
hlt
push
call
inc
xor
jp
movsb
outsb
dec
push
lret
xchg
pop
arpl
cltd
je
lds
xchg
adc
pop
fidivrs
sub
push
xor
fwait
mov
lock
xchg
or
adc
cmpb
lret
aaa
ja
mov
lods
push
in
jne
inc
idivb
pop
fldl
cmp
lcall
mov
enter
rcll
mov
outsl
cmpsb
lret
ss
movsb
lea
xor
int3
scas
and
mov
push
js
inc
ja
adc
and
fistps
mov
out
ja
aad
pushf
sbb
repnz
jae
pop
mov
jns
icebp
dec
ret
mov
aam
or
add
adc
inc
cmc
cwtl
pusha
jge
hlt
xor
jnp
scas
xor
inc
inc
mov
mov
and
rcr
mov
mov
push
sub
stos
pop
lret
fidivl
rcll
jnp
leave
fs
inc
test
jmp
push
psubq
je
in
orl
lock
fs
stos
jae
inc
pop
in
aas
dec
jns
movsl
adc
test
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
