push
mov
sub
xor
jmp
into
rcr
aad
mov
test
js
js
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
sub
cmp
cmp
xchg
aam
notb
mov
pop
and
sbb
push
cmpsl
pop
jb
sahf
cmp
mov
inc
pop
pop
jne
inc
push
mov
testl
mov
xchg
int3
mov
add
push
adc
cmpl
aaa
push
lret
pop
sub
mov
stos
add
fst
fildll
pushf
aad
pop
loop
mov
test
fldenv
xchg
mov
negb
ljmp
in
test
pop
cmpsb
fadd
mov
mov
add
les
scas
movsb
or
rcrl
dec
xchg
ret
sbb
mov
std
push
sbb
aaa
arpl
xchg
aaa
jnp
jbe
popf
shr
and
xor
jns
pop
xchg
lahf
orl
xor
add
outsl
adc
sahf
mov
and
movsl
aad
in
xchg
and
push
gs
push
pop
scas
jg
and
popa
pop
aas
lods
fidivrs
mov
iret
notl
cmp
data16
xchg
sti
lea
data16
jmp
lea
rcll
arpl
pusha
pop
pop
scas
rolb
jo
mov
std
push
xchg
leave
stos
imul
adc
nop
clc
jns
xchg
stos
mov
jb
lods
pop
int
loop
add
mov
pop
mov
and
pusha
sub
and
scas
fdiv
and
mov
mov
cs
sub
xor
sbb
imul
xor
dec
mov
lret
ror
mov
cmp
or
fsubl
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
push
js
jle
js
mov
add
and
mov
div
sub
mov
push
loopne
pop
leave
mov
adc
loope
mov
orl
inc
mov
sbb
push
lret
sbbl
sahf
test
frstor
mov
xlat
inc
jno
ret
nop
pusha
mov
sbb
sbb
inc
mov
lea
sbb
sarb
and
jb
mov
cld
jae
in
pop
mov
lret
pop
lret
or
xchg
aaa
dec
and
cmp
pushf
mov
inc
aas
push
out
lods
testl
jecxz
add
scas
sub
pop
jle
mov
loope
fs
inc
gs
mov
pop
hlt
test
mov
jne
and
cwtl
push
mov
sbb
jmp
aad
aas
jnp
or
lret
dec
add
jns
call
sarb
mov
mov
inc
or
and
cmc
pop
sub
cmp
mov
fildl
jb
inc
scas
jmp
lods
adc
xor
pop
cmc
ret
jecxz
push
lods
and
mov
dec
xchg
scas
mov
mov
int
lcall
nop
mov
dec
jo
mov
mov
sbb
xor
dec
mov
shll
or
and
loopne
mov
cmp
xor
push
inc
pushf
push
jp
fld
pop
mov
pop
sbb
dec
mov
pop
lret
fs
inc
xchg
imul
fisttps
inc
dec
and
mov
adc
cltd
xor
jne
cmpsb
ror
movsb
and
in
sub
cltd
in
jl
decl
rol
cmpsl
lahf
dec
frstor
mov
mov
mov
sub
sbb
dec
into
push
or
mov
and
pop
dec
add
dec
loopne
cmp
stos
sub
cmpsb
dec
outsl
sbb
mov
mov
xor
mov
adc
cmp
test
mov
roll
mov
push
jg
cld
pushf
pop
or
movsl
jge
add
out
jecxz
xchg
cmpsl
jno
shl
dec
dec
pop
popf
repz
lahf
scas
ds
dec
in
popf
movsl
mov
xchg
fstl
push
roll
je
rol
mov
shl
lsl
xorl
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
push
cld
jl
js
jle
js
pop
push
or
ds
and
xor
push
inc
mov
cmp
and
sub
stc
pop
dec
stos
stos
mov
cmp
int
fcmovbe
mov
mov
and
jl
fcompl
cwtl
imul
out
insb
xor
xchg
mov
sarl
mov
dec
in
mov
arpl
fwait
icebp
sub
adc
cmpsb
pop
incl
das
cmc
loopne
pop
hlt
repz
mov
and
xchg
mov
jnp
inc
aam
ljmp
jecxz
or
jo
jg
scas
ss
inc
addr16
jns
or
xor
mov
js
out
xchg
ret
pop
loop
jne
imulb
sub
ss
xorb
cld
cmp
es
cwtl
mov
push
inc
aam
sub
clc
jecxz
pushf
mov
dec
jne
lcall
stc
popf
push
mov
fcom
test
in
sub
push
je
jae
dec
push
out
jns
mov
jno
aas
movsb
fidivs
insl
xchg
test
lcall
mov
push
mov
add
xchg
dec
xor
cwtl
test
or
jns
sub
cmpsb
sbb
mov
add
mov
xor
jl
rorl
fcompl
adc
int
repnz
lcall
jmp
aaa
xchg
jp
in
adc
pop
cmp
sub
adc
ljmp
subps
sbbb
mov
push
ds
inc
or
jg
iret
mov
test
loope
mov
and
inc
push
fisubrs
ja
stc
lahf
sbb
pusha
jne
scas
rcrl
out
jbe
outsl
ret
sbb
mov
lea
mov
jecxz
add
jns
jl
pop
dec
xchg
in
add
sbb
xchg
pop
inc
ss
out
test
jl
dec
xchg
clc
fs
iret
jp
daa
mov
and
hlt
fadds
jnp
cs
fiadds
mov
jmp
sarb
outsl
push
push
xchg
outsl
outsl
dec
dec
insl
sbb
add
enter
lock
jl
outsl
add
jnp
inc
cmp
fidivs
dec
xor
jecxz
out
push
rorb
add
in
or
rorl
mov
add
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
pop
arpl
icebp
addb
js
jle
js
sbb
sahf
test
sub
or
xor
arpl
adc
add
iret
inc
xchg
pop
fwait
pop
shll
enter
loop
test
and
inc
push
sub
imul
sbb
scas
jle
insb
je
test
nop
pop
sbb
mov
movb
sub
leave
jae
sub
clc
arpl
lock
ret
push
repz
lcall
cmp
ljmp
shll
popf
cmpsb
ror
xor
addb
adcb
add
ss
sub
and
mov
cmc
scas
inc
nop
movsb
dec
and
psraw
movsl
pusha
push
mov
aas
das
or
sub
and
movsl
sti
sbb
xchg
push
mov
test
outsb
stos
icebp
mov
daa
cmpsb
movsl
outsl
call
flds
dec
and
dec
std
mov
addr16
loopne
nop
das
subl
mov
jae
jmp
or
mov
clc
mov
insl
stos
ficoml
pushf
clc
rcl
pop
jb
insl
or
push
lods
or
or
mov
testl
enter
or
stos
jecxz
movsl
pop
lcall
sbb
mov
fwait
xor
dec
lcall
imull
cmp
cld
dec
clc
jmp
mov
sub
inc
inc
enter
mov
mov
adc
data16
lods
xor
aad
sub
jl
loopne
cmp
fidivrs
mov
mov
lea
pop
dec
push
lods
mov
adcl
jecxz
int3
icebp
adc
sub
jecxz
xchg
dec
xchg
pop
or
push
dec
lret
stos
fwait
ret
jb
xor
jle
xor
add
fs
aaa
and
lods
cmc
push
jl
imul
cwtl
xchg
dec
mov
pop
jns
push
ljmp
jo
test
mov
cs
mov
int3
mov
adc
mov
je
loopne
aaa
nop
rcrb
inc
lahf
into
mov
cwtl
xor
daa
sbb
int
scas
dec
jl
fdivr
cmp
call
jmp
xchg
scas
cld
fisttpl
or
push
pop
inc
push
xor
dec
jb
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
insl
movsl
adc
jle
js
shlb
or
cmp
sub
push
jns
mov
mov
jbe
arpl
in
in
push
in
mov
jmp
adc
call
jp
jle
popf
push
jecxz
pop
loope
jecxz
loopne
sbb
dec
xor
inc
xchg
mov
push
out
pop
push
inc
sub
call
mov
fimull
cmpsb
dec
adc
pop
stos
mov
pop
subb
push
jge
push
out
pop
mov
jle
cmp
dec
adc
je
pop
std
ljmp
sbb
xor
jno
xor
rcrb
sub
mov
sbb
jg
adc
pop
hlt
mov
dec
add
jbe
scas
adc
pushf
cmc
jge
xor
out
mov
push
xchg
mov
subl
pop
ret
adc
sbb
inc
mov
pop
mov
inc
dec
push
and
xchg
daa
out
xchg
and
sbb
mov
inc
jo
jl
lea
pop
mov
pusha
adc
faddl
sbb
into
jle
aam
dec
xor
xor
subb
xchg
loop
mov
mov
cmp
movq
es
test
stos
dec
jb
loope
and
push
stc
lods
leave
lock
mov
mov
in
inc
push
iret
and
sbb
testl
pop
cmp
mov
push
ss
inc
xchg
or
mov
in
js
aas
incl
mov
push
stos
cmpl
pop
sbb
sbb
out
jae
xchg
xchg
aaa
adc
movsl
mov
push
lahf
test
cli
jmp
in
addl
sub
jns
test
cltd
pop
out
pop
jnp
loop
outsb
push
push
das
lret
lret
or
mov
repz
lret
dec
inc
jb
in
sbbl
mov
lea
add
pop
call
movsl
dec
mov
cmp
jle
enter
popf
out
or
inc
sbbl
imul
ljmp
pop
sub
pop
in
jl
aam
add
mov
aad
jle
fwait
or
or
into
lcall
xor
nop
adc
mov
xor
add
and
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
fstps
add
js
jle
js
and
xchg
inc
push
sub
loope
pop
into
popa
bound
lods
inc
test
sbb
mov
test
icebp
adc
mov
out
jbe
inc
dec
stc
cmpsb
in
gs
inc
cmp
call
jge
shl
lock
adc
adc
leave
push
add
sbb
mov
add
inc
lods
sbbb
mov
inc
and
lock
sub
inc
push
in
mov
pop
xor
mov
out
push
mov
xchg
inc
add
aaa
jle
cli
dec
pusha
pop
dec
sti
mov
xor
ja
sbb
shr
imul
mov
inc
add
pop
out
repz
fcoms
cmp
les
scas
push
xchg
es
lea
pushf
lds
test
push
or
loopne
rolb
mov
test
ss
push
dec
movsl
jle
movsl
iret
mov
adc
jo
aad
add
imul
or
xbegin
push
shll
das
jl
xor
add
add
lds
lea
addl
out
inc
push
pushf
mov
daa
jbe
fldlg2
lret
je
jecxz
and
cmp
int3
add
test
sbb
inc
mov
ja
or
lods
cmpsl
sbb
data16
hlt
ja
in
ret
ret
push
adc
call
dec
mov
and
pop
es
xchg
add
loopne
add
addr16
mov
dec
or
push
movl
loop
cmp
lods
fidivs
inc
adc
shll
and
movsl
icebp
outsl
mov
aas
mov
popf
inc
fbld
sbb
mov
cmp
mov
xor
xor
lahf
push
out
pop
or
inc
popa
fwait
mov
pop
cmpl
pop
mov
push
push
cltd
xchg
orl
popa
dec
adcb
xchg
and
cmp
mov
jle
adc
xchg
rcrl
inc
in
js
mov
push
loope
enter
jp
mov
adc
fldenv
je
xor
add
gs
lret
mov
add
mov
cmp
stc
xor
out
jae
shl
stos
xor
andl
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
fs
inc
add
js
jle
js
add
ret
mov
pop
dec
sbb
adc
arpl
add
lret
and
cs
jno
arpl
pop
jo
xor
pop
stos
sub
pushf
sub
adc
sub
pusha
leave
inc
popf
lods
sti
cmp
lahf
sub
int
xlat
pop
aaa
jmp
lcall
xor
call
adcb
jnp
mov
inc
ja
push
mov
push
ja
xchg
in
insb
mov
mov
mov
callw
jmp
add
iret
out
jecxz
and
mov
pop
mov
sbb
je
movsl
arpl
jmp
int
sbb
push
popf
in
mov
adc
nop
xor
loop
adc
push
mov
lahf
popf
leave
jbe
add
aad
sub
arpl
insb
movsl
ja
jnp
xchg
mov
int3
xchg
mov
pushf
ss
cmpsl
call
daa
fisttps
pusha
bound
adc
fcmovbe
pop
les
ljmp
ja
push
push
aas
clc
pop
incl
insb
push
xor
inc
adc
cmp
xchg
pop
lret
dec
sub
mov
cmp
test
jno
inc
cmpsl
fcmovbe
adc
push
fcmovu
mov
sub
notl
sbb
je
pushf
shl
xor
mov
lret
test
ror
dec
jnp
xor
mov
cmpsb
jbe
lret
inc
cmp
fmuls
mov
outsl
cld
push
pop
mov
outsb
cmc
repnz
lret
mov
call
clc
jmp
test
add
aam
pop
enter
mov
rcll
jae
shrl
add
sub
test
or
fpatan
or
mov
push
dec
mov
ds
movsb
js
push
ljmpw
and
pop
mov
dec
test
test
jno
sub
pop
add
scas
into
mov
cmovbe
loopne
pop
dec
jb
imulb
in
insl
clc
lods
xchg
add
stos
jecxz
pop
push
sub
jb
xlat
ds
rolb
fldt
lods
xchg
aaa
sub
repz
adc
inc
mov
loope
push
dec
rep
ret
mov
and
push
pop
loopne
pusha
fsubrl
xchg
ljmp
ret
xor
dec
and
jmp
cmp
jne
mov
mov
xor
add
mov
jmp
aas
lret
ret
aad
flds
inc
ret
and
jle
js
lds
inc
popa
push
xchg
jae
dec
cmpsl
mov
ror
jle
mov
push
and
inc
push
cmp
rol
fstps
cld
mov
mov
test
mov
push
or
mov
in
insl
or
push
pusha
dec
fwait
test
in
and
cli
cli
mov
cmc
mov
popa
mov
test
mov
fwait
xchg
inc
hlt
mov
mov
movsb
dec
aas
xchg
fnstcw
cmp
cld
call
pop
daa
xor
pop
cwtl
ljmp
push
or
les
outsl
imul
jecxz
xchg
lods
push
xchg
clc
sbb
iret
pop
xor
ds
pop
xchg
dec
push
rcrl
pushf
js
inc
lods
push
stc
imul
cmp
add
sti
mov
pop
xchg
ret
pop
loope
mov
lea
xchg
inc
pop
enter
cld
fs
cmp
inc
dec
imul
cmc
stc
mov
mov
daa
pop
cli
std
dec
adc
or
mov
inc
inc
lds
mov
push
scas
not
stos
in
or
adc
push
cmpsl
fidivrs
jno
test
dec
ficoms
and
fisttpll
in
cmp
dec
bound
mov
lret
and
push
sbb
pop
jno
pop
add
mov
dec
lret
mov
je
dec
xchg
js
pop
mov
test
xchg
and
xlat
loop
into
mov
cmp
cmpb
and
ss
push
repz
in
lock
ds
dec
push
mov
in
mov
fidivs
adc
pop
mov
int3
add
push
test
inc
fwait
imul
push
push
xor
sbb
sarl
adc
out
addb
ja
jb
filds
popf
mov
loopnew
cmp
cwtl
popa
mov
adc
mov
into
in
pushf
inc
pusha
ja
ret
hlt
cltd
jbe
jb
pop
cmp
nop
push
rclb
dec
mov
rorl
jbe
mov
int
inc
stos
xor
mov
lret
push
shll
cld
pop
inc
and
fadd
repz
cmpsb
fmull
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
and
js
jle
js
mov
xor
clc
lcall
and
neg
mov
data16
ficoml
cmp
cmp
idivb
mov
mov
ret
mov
jmp
push
jne
xor
shlb
ret
in
cwtl
out
sbb
aas
lret
sbb
lcall
xchg
lret
cmp
rolb
adc
aaa
ljmp
push
cmpsl
lods
xchg
sbb
leave
xchg
adc
ds
xor
mov
or
push
pop
jno
stc
loopne
aam
ja
enter
xchg
or
ljmp
stc
flds
and
sub
adc
add
mov
jg
dec
std
mov
mov
cld
int3
cltd
mov
int
mov
push
test
cmc
mov
lahf
jns,pn
and
and
cltd
adc
scas
mov
push
rclb
mov
ljmp
mov
sub
xchg
lahf
sbb
cli
mov
out
test
mov
adc
enter
out
cmc
mov
cmp
das
nop
rorb
js
clc
or
pop
inc
mov
arpl
fwait
mov
fwait
std
loop
and
int
pop
add
aaa
aad
js
mov
daa
ds
pop
imul
dec
mov
jne
xchg
xor
pushf
add
push
and
jno
addr16
test
xor
jae
sahf
or
mov
cmp
xor
xchg
repz
lea
dec
xchg
jno
fs
mov
sub
js
mov
ficoms
xchg
sub
cmpsb
jmp
addr16
mov
mov
push
jne
std
addr16
mov
push
xor
mov
sub
fcmovnb
enter
sti
sbb
lock
or
pop
in
inc
or
outsb
sub
pop
dec
push
or
es
mov
gs
sbb
scas
mov
andl
jno
cmp
jb
mov
or
leave
sub
shrb
cmp
xchg
mov
mov
bound
sub
dec
dec
mov
cs
es
xchg
sbb
xor
jne
dec
fsts
sub
push
xor
cld
fldenv
xlat
testl
add
ror
int
rcr
aad
bound
dec
xchg
inc
mov
js
jle
js
movsb
fcoms
out
fmull
pop
out
nop
inc
mov
shlb
lret
pushf
outsb
sbb
inc
rclb
rcrb
fidivs
lods
adcb
mov
sbb
mov
push
xchg
adc
lock
jl
idivb
mov
inc
ret
pop
push
out
push
jns
inc
mov
loopne
push
adc
xchg
jns
int
minps
stos
jno
int
stos
jp
mov
jg
mov
push
icebp
mov
addr16
aas
bound
pop
shrb
jo
or
sbb
jbe
mov
xchg
ret
mov
sti
push
outsl
jmp
fs
jnp
push
aas
in
scas
shrb
sub
repz
dec
cwtl
xchg
fwait
adc
fcmovne
ror
popf
repz
sbb
flds
push
das
dec
push
dec
adc
pop
mov
xchg
enter
cmp
lods
xchg
sbb
jmp
pavgw
in
jecxz
inc
aam
insb
pusha
push
mov
mov
mov
clc
mov
sar
stos
push
faddl
rcrl
jbe
out
insl
fisubl
cmpsl
dec
lret
arpl
or
jge
stos
scas
sbb
fldenv
mov
adc
sahf
std
xor
cmp
repz
lret
inc
sub
inc
cli
fnstenv
and
and
loope
dec
xor
and
sahf
xchg
and
adc
pop
lret
sahf
stos
stc
xchg
push
scas
mov
add
push
out
add
xchg
dec
lret
inc
iret
xlat
lea
jne
xor
pushf
fadds
cld
xchg
out
fstl
call
pushf
subb
or
aas
push
sbb
sbb
xchg
ds
scas
pusha
cmpsb
stc
repz
xor
pop
divb
scas
and
cmp
mov
xor
xchg
push
mov
push
loop
insl
sub
adc
lods
dec
or
testb
popa
insl
fsubs
pop
xchg
sbbb
pop
mov
and
out
ret
mov
inc
outsl
xchg
or
out
sbb
out
cmp
xchg
hlt
pop
movsb
shrl
ljmp
xorl
and
pop
or
xor
data16
test
jl
shr
lahf
push
mov
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
adc
js
jle
js
repz
sbb
jnp
cmpsb
sbb
cmp
push
sbb
push
dec
subb
jg
xlat
inc
sub
iret
sbb
xor
das
sub
pusha
mov
shrl
test
cmp
sub
sbb
jg
out
ljmp
pop
jmp
fldenv
inc
xchg
add
xchg
fadds
cmp
or
dec
jno
ror
inc
ficoml
js
arpl
mov
add
adc
fs
stos
lds
xorl
inc
ret
mov
jns
inc
add
mov
lea
dec
and
icebp
and
fwait
and
push
lods
gs
and
dec
or
insl
loopne
jno
xchg
ret
enter
sbb
ljmp
cmp
cmp
mov
push
nop
pop
pop
pop
and
mov
or
aam
dec
mov
outsl
mov
pop
test
mov
mov
insb
movsl
mov
pop
daa
outsb
repz
push
add
into
or
xor
pusha
jns
dec
dec
xor
cmp
mov
out
scas
jns
pop
cmp
mov
jo
jnp
sbb
loopne
enter
imul
cmp
or
rcr
fidivrl
cmp
sub
leave
jg
fsubrs
sar
rol
jle
mov
xchg
lahf
data16
mov
mov
mov
or
and
fs
mov
and
jne
jnp
sub
insb
das
add
push
daa
js
pop
mov
push
in
imul
js
pop
nop
ds
cmp
xor
sub
dec
data16
cmp
or
enter
adc
adc
je
push
ljmp
nop
jmp
outsl
pop
xchg
xor
cmp
mov
add
cld
dec
inc
imull
out
aas
int
je
out
mov
jae
push
test
jno
jecxz
mov
ja
scas
cld
jne
imul
push
addb
es
lods
dec
mov
out
hlt
sub
lcall
push
dec
jo
shr
scas
lds
ljmp
insl
sbb
popa
mov
into
xchg
sbb
psadbw
push
mov
mov
mov
jmp
ror
ror
ror
test
xchg
push
xor
pop
adc
adc
js
fyl2xp1
ljmp
push
jle
push
mov
out
insl
sub
sti
pop
inc
pop
cmp
inc
push
mov
mov
lds
mov
popa
pop
mov
test
sbb
inc
in
or
out
push
cmp
aam
das
and
insl
add
movsb
lea
push
jecxz
pop
add
xor
dec
and
pusha
fs
imul
rorb
negb
mov
jae
fsubl
add
push
push
movsb
lock
or
nop
popf
popf
mov
lahf
adc
mov
or
ljmp
sub
mov
js
lods
fdivrs
mov
test
jno
outsl
das
or
rclb
repz
mov
cmp
out
dec
jge
and
loopne
sti
cwtl
mov
movsb
dec
fwait
decl
mov
loope
addb
aad
rolb
xor
push
cmpsb
adc
jle
mov
push
mov
cli
out
in
test
in
fisubl
mov
dec
insl
mov
cmc
stos
cli
sti
xchg
in
push
enter
out
jnp
in
fidivl
stc
subl
and
jns
fiaddl
aaa
inc
lods
lea
pop
loope
inc
cmp
pop
bound
mov
lahf
xorl
movsl
or
push
pusha
and
push
pop
test
cmpsb
aam
inc
push
mov
jnp
inc
xchg
jp
es
and
xchg
jo
btcl
stc
aam
faddl
rcl
insl
lock
pop
std
push
fnstenv
pop
ss
mov
fwait
push
cmpb
add
pop
scas
push
cmp
hlt
mov
fisubrs
aad
rcr
xor
pushf
push
int3
xchg
dec
nop
cmpsb
inc
dec
fdivr
jecxz
jl
xchg
and
pushl
jle
cli
dec
outsb
scas
jno
sbb
mov
dec
loopne
ss
xchg
notb
adc
rclb
call
mov
orl
mov
push
jmp
aas
pop
sub
imul
sub
les
xlat
sti
sub
notl
leave
test
stos
daa
dec
sti
gs
or
sub
push
loopne
push
jle
mov
cmp
es
filds
sub
xchg
aam
arpl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
or
js
jle
js
push
cwtl
loope
add
jl
pop
push
jl
rcrb
push
inc
clc
subb
insl
lods
enter
mov
mov
mov
pop
fbstp
pop
xchg
jno
mov
stos
xchg
push
push
sbb
mov
sbb
int
push
xchg
fistl
aam
xor
pop
andb
sbb
add
addr16
mov
iret
mov
movsb
add
cmp
sbb
imul
mov
shll
mov
xor
in
lods
aad
dec
stos
paddusw
push
pop
cmp
fildl
adc
inc
lahf
aad
pusha
rolb
add
adc
shr
jne
decb
mov
push
jmp
jne
cli
imul
sbb
test
hlt
adc
iret
je
sbb
dec
mov
jl
shlb
std
add
scas
aam
cmpsl
pop
cltd
cmpsb
pop
lret
lods
jns
inc
testb
cmp
pop
imul
loope
xchg
mov
and
dec
rcrl
sarl
lods
lahf
inc
sarl
mov
out
xor
lds
inc
xchg
shll
cmc
divb
dec
outsb
xchg
test
jns
repnz
push
mov
mov
aad
icebp
dec
test
js
push
aaa
shl
fsubrs
shlb
xor
outsb
js
inc
mov
mov
scas
mov
sarl
pop
or
fucomip
push
cltd
push
stc
sub
xchg
jo
out
jae
pop
mov
out
lahf
cmpsb
xchg
addr16
clc
or
add
mov
fcomps
inc
stos
cmp
test
mov
out
clc
jns
dec
cmpsl
clc
rcr
into
adc
mov
or
inc
push
and
out
sub
xchg
mov
pop
imul
pop
cmp
dec
sub
jmp
jecxz
je
lahf
jo
and
or
mov
xor
std
repnz
pusha
cmp
out
adc
cli
imul
mov
pop
adc
cmpsb
and
push
push
dec
push
mov
sub
fs
lock
in
pop
in
sbb
test
dec
inc
fs
xor
mov
out
xchg
fnstsw
inc
jae
dec
call
mov
push
test
sub
inc
call
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
jge
imul
cld
jae
mov
std
hlt
push
jbe
mov
pop
loope
movsb
scas
push
xchg
mov
cmp
adc
daa
cmp
movsl
fidivrs
xor
je
inc
xor
jne
imul
loop
movsb
dec
push
adc
aad
adc
sarl
lahf
push
ss
dec
les
xchg
repnz
xchg
xor
xor
mov
push
xchg
mov
jge
clc
imul
cltd
shll
and
mov
dec
sub
jo
jp
std
in
push
mov
jns
sbb
cld
ds
adc
dec
push
das
pop
fadds
and
test
push
and
or
dec
mov
push
add
lock
cmp
cwtl
adc
ret
jo
repz
mov
inc
idivb
faddp
inc
mov
sbb
pop
fnsave
jle
pop
pusha
fs
pop
ja
in
in
sbb
sbb
sub
mov
jg
iret
rcrb
divl
mov
enter
loop
popf
mov
fwait
inc
mov
adc
shr
ljmp
cmp
into
in
pop
push
sbb
cmp
test
dec
lahf
popf
mov
xor
mov
clc
fdiv
mov
or
ret
popa
icebp
dec
inc
cs
or
in
in
mov
insb
test
pop
push
lahf
mov
push
add
cld
jge
bnd
sbb
aad
push
les
aad
mov
fisubrl
and
loope
adcl
inc
push
adc
fstpl
jge
outsl
push
xchg
ja
in
xchg
lods
ficomps
jge
orb
call
lret
std
imul
pushf
jb
pop
icebp
fbld
mov
sbb
orb
ret
dec
notb
loope
cmp
in
daa
stc
or
add
jp
out
dec
fbld
jns
xor
lret
mov
xchg
test
daa
ss
inc
enter
sub
je
cli
and
adc
push
sub
fs
mov
subl
push
cmp
clc
mov
insl
rorb
add
add
rol
ror
mov
adc
adc
js
jle
js
sahf
jmp
cmp
sub
scas
outsb
jmp
push
cld
adc
adc
dec
ret
mov
mov
or
dec
pop
push
pop
out
sub
jl
or
adcl
jp
adc
add
ss
cmpsl
insb
and
jg
repz
pop
lods
push
sahf
jg
and
mov
jmp
sti
lret
add
addr16
out
or
insb
bound
subps
inc
sbb
add
dec
or
push
fistpll
pushf
aas
push
rcrb
inc
sahf
adc
xchg
in
push
inc
jo
arpl
movsb
leave
lods
pop
push
push
dec
xchg
and
mov
fidivrl
mov
imul
push
jmp
xor
pop
sub
push
insl
jbe
adc
cmp
pop
or
mov
lahf
or
scas
push
sbb
jp
sub
push
pop
inc
inc
rol
ss
dec
stc
lret
inc
mov
mov
jns
lret
fldt
and
mov
fdivs
jmp
neg
inc
call
test
inc
ljmp
jnp
das
cli
add
jnp
xlat
and
mov
rcrl
ret
dec
pushf
or
push
subl
sbb
xor
js
adc
xchg
adc
or
cmp
push
push
test
loop
dec
fidivrl
movsb
scas
and
or
xchg
mov
cltd
sbb
sub
sbb
icebp
xor
movsl
popf
mov
fldl
push
std
pop
scas
cmp
or
jb
stos
loopw
addr16
and
mov
mov
rorb
pushw
xor
sar
or
sbb
les
mov
cmc
imul
out
push
add
pop
int
mov
mov
test
enter
repnz
arpl
andl
shl
shr
mov
mulb
js
in
jb
test
cli
xorb
mov
sub
es
xchg
shlb
cli
push
testl
decb
fmulp
je
fwait
push
gs
or
pop
nop
mov
jl
mov
sti
cmp
test
jl
xchg
jge
cmp
xchg
xchg
loope
sbb
scas
stos
lahf
add
icebp
pop
enter
xor
inc
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
cmp
and
jle
js
ret
fstps
dec
pop
lret
push
shlb
in
bound
fsubr
mov
mov
jg
xchg
pop
lret
xor
clc
cmp
mov
lmsw
push
dec
xchg
and
pushf
inc
loop
cmpsb
sbb
daa
cmp
aad
rorl
inc
and
sbb
add
cmp
mov
pusha
jnp
bound
adcl
inc
dec
call
inc
sbb
fidivrs
inc
mov
or
test
enter
sbb
repnz
jle
loop
repz
out
mov
shlb
cltd
add
js
call
or
ljmp
lcall
mov
ret
cmp
lcall
add
cwtl
inc
inc
mov
es
fisubs
adc
xchg
and
dec
sbb
fistps
mov
mov
shlb
xor
ss
lods
nop
je
call
shrb
lcall
mov
or
pop
nop
sbb
pop
cs
add
loope
adc
test
add
scas
xchg
dec
fistl
rcrl
or
into
adc
out
push
notl
and
idiv
and
ss
inc
stos
jmp
and
jmp
jmp
lcall
and
xor
fstps
rolb
jns
jno
pop
xchg
lea
fcompl
pop
inc
mov
inc
sbb
mov
fnsave
fs
insb
pop
fsubrl
lock
xorb
shrl
andb
movsl
dec
jl
adcl
pmovmskb
dec
inc
lea
ja
stos
dec
mov
aam
xchg
xchg
sub
lret
add
fcoms
addr16
mov
jl
dec
or
mov
adc
push
cmp
cmp
adc
add
cmpsl
dec
clc
adc
mov
inc
sub
decl
mov
jmp
jmp
aaa
ljmp
jmp
int
stos
xchg
lret
pop
xchg
clc
out
scas
aas
cmp
mov
das
cli
into
andl
stos
movsb
insl
xchg
push
imul
sub
iret
ror
fmull
popf
fisttpll
std
push
cli
lods
and
inc
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
cmp
js
jle
js
adc
test
inc
fldcw
fwait
and
outsl
mov
pop
pushf
adc
data16
shr
xor
push
sub
xchg
jl
and
push
cli
shll
test
repz
jo
cmc
in
xchg
cmp
dec
mov
or
pop
cmp
xchg
push
mov
int
imul
sub
jno
xor
mov
jge
lods
cmc
sbb
xchg
xor
lods
gs
mov
fs
clc
imul
loopne
pop
or
adc
mov
movsb
clc
movsl
mov
dec
inc
mov
cmp
cmpsb
jnp
gs
mull
cmp
and
inc
movsl
out
je
ds
test
xlat
mov
and
out
ret
sbb
in
aad
push
mov
mov
or
ss
scas
sub
mov
jge
cmp
sti
lock
push
jecxz
ret
xor
xor
cmp
insl
hlt
in
inc
mov
outsl
aaa
cmpsb
insb
pop
test
xor
lea
inc
xchg
stos
mov
int3
mov
xchg
dec
mov
mov
fiadds
push
inc
xchg
and
push
cmp
mov
pusha
in
xchg
dec
imul
fldenv
les
call
shll
push
pop
shr
jecxz
adc
movsb
je
ret
push
mov
push
orb
clc
and
cmp
cmp
mov
loope
inc
cmp
cli
ficomps
sti
xor
xor
pop
or
push
std
in
add
not
sbb
cmp
sbb
ficomps
mull
mov
test
aad
or
loopne
aad
mov
add
je
subb
andb
inc
xor
mov
movsl
inc
xor
adc
jo
cwtl
in
shr
js
nop
sbbl
hlt
cwtl
jo
cli
out
lret
adc
movl
and
sub
ss
out
popf
push
test
mov
adc
sbbb
arpl
das
add
jecxz
xor
outsl
lret
aas
lahf
stc
cmp
mov
mov
fnsave
pop
and
add
add
add
dec
fwait
jo
and
jmp
mov
clc
push
adc
jmp
jb
mov
std
add
add
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
popl
sahf
es
jle
js
js
inc
arpl
addr16
inc
xchg
outsb
jno
into
add
mov
jo
shlb
xchg
rolb
mov
cld
jo
int
imul
outsl
ss
cmpl
push
adc
sbb
pop
inc
fadd
cmc
mov
mov
in
sub
xchg
inc
push
es
pop
iret
lret
add
mov
mov
xor
stos
jne
jl
lcall
mov
push
sahf
test
in
arpl
outsl
js
dec
test
or
cmp
add
scas
xchg
cmc
lock
pop
fcmove
xchg
mov
inc
dec
cltd
imul
cltd
mov
or
and
jp
lahf
push
adc
mov
push
stos
push
push
insl
pop
push
les
pop
pop
stos
add
mov
or
dec
cmp
clc
cmp
cmpsl
iret
sti
jb
jmp
test
lahf
adc
add
outsb
popa
xor
mov
outsl
adc
jnp
mov
or
and
enter
push
ret
repz
jmp
mov
pop
sub
fbld
lret
testl
test
je
lock
cmp
mov
pop
enter
pop
or
dec
mov
stos
jbe
lcall
push
insl
ljmp
fwait
pop
or
sbb
jge
xor
sub
fildl
xchg
sub
adc
inc
xor
adc
jg
mov
pop
mov
jmp
inc
lea
fildll
push
fisttpll
push
in
sub
mov
or
jae
jp
sbb
in
repz
add
div
sarl
pop
cmpl
adc
andl
lods
pop
aaa
scas
sub
pushf
bound
in
xchg
hlt
dec
test
out
xchg
sbb
in
dec
sbb
call
ficoml
xor
cltd
push
in
sbb
inc
addl
sbb
push
jl
fadds
mov
iret
in
push
inc
xchg
bound
shlb
mov
loopne
aam
push
cmp
mov
jae
fstl
sbb
enter
outsb
add
jmp
ss
inc
popa
mulb
xchg
xor
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
outsl
push
insl
mov
dec
jle
js
mov
cli
lock
mov
inc
dec
rorb
push
cld
test
cmc
fst
add
add
insl
sbb
rorb
out
movsl
mov
adc
xchg
mov
dec
push
fs
clc
or
shlb
jo
or
dec
rcll
jnp
outsb
out
shll
and
sbb
aas
rcll
scas
ja
addl
dec
jg
cmp
jns
sub
popf
sub
and
mov
arpl
and
inc
cmc
jns
xor
xchg
ds
sub
ja
inc
stc
adc
push
pusha
dec
cmp
or
push
std
sbb
mov
lods
xor
std
adc
scas
xchg
pop
imul
lret
and
ret
fdivl
rclb
testb
or
or
sbb
outsb
and
sbb
push
and
xchg
test
dec
sbb
push
push
push
test
outsl
mov
mov
cld
cmc
leave
std
cli
dec
jns
ljmp
jle
outsb
arpl
jge
adc
push
out
popf
mov
out
xchg
lret
add
lods
sub
cmpsb
nop
inc
mov
je
je
mov
jo
lcall
push
adc
cmp
int
mov
fidivl
cmpsb
subl
les
xchg
adc
inc
and
lds
cmpsl
stc
lock
in
cmpsl
mov
adc
inc
sub
inc
test
pop
cwtl
enter
scas
mov
dec
inc
scas
nop
outsl
add
sub
push
es
movsb
dec
test
leave
nop
xor
addb
xor
lds
pop
lds
mov
pop
aas
and
xor
in
xor
pop
jmp
popa
fstpl
cmp
mov
je
movsb
dec
test
inc
dec
mov
dec
data16
sbb
cltd
mov
cld
add
pop
scas
fcoms
ficompl
sbb
jo
mov
fbld
ja
nop
jbe
sbb
lret
sbb
add
and
mov
out
xchg
pusha
adc
mov
push
div
pop
ret
insl
add
jge
lea
cmpl
cmc
mov
cmc
adc
mov
add
add
repnz
imul
outsl
loop
push
jmp
sbb
pop
mov
mov
fs
adc
xchg
imul
pop
in
orb
mov
aas
and
insl
dec
adc
mov
aad
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
xor
dec
jle
js
nop
xchg
inc
aam
mov
cltd
imul
pop
adc
mov
icebp
bound
bound
jge
inc
jg
pop
mov
xchg
jo
fistpl
repz
mov
sbb
lock
stos
daa
shrb
test
loopne
incl
fwait
ret
ret
test
dec
fildll
insl
cmp
bound
xchg
cmovge
pop
fwait
and
push
cmp
mov
mov
sub
out
jne
mov
outsb
in
sub
mov
fsubp
push
lods
lret
in
sub
or
or
inc
mov
add
negl
xor
mov
push
mov
jle
and
roll
inc
mov
pop
pop
leave
or
mov
push
or
sub
dec
cmpl
addl
arpl
scas
inc
pusha
movsl
mov
dec
jne
sub
imul
add
xchg
pop
addr16
pop
mov
jecxz
insl
sbb
insl
cmp
mov
cwtl
pop
loop
push
xchg
mov
push
roll
ret
and
push
stos
paddq
jb
icebp
loop
subb
fisubrs
push
sarb
jb
xor
dec
xchg
pop
mov
jb
sub
icebp
iret
ret
out
cmp
dec
inc
xor
xor
sub
push
fmul
fbld
inc
popa
mov
sahf
xchg
test
lahf
fcomps
mov
mov
shll
dec
mov
in
cld
xlat
repnz
pushf
and
lds
jge
shlb
sbb
dec
or
cmc
loop
or
push
imul
lea
mov
cmpsb
cld
stc
cmpsl
jbe
or
loope
arpl
jo
and
clc
sbb
inc
movsb
push
fisttpl
ljmp
shll
mov
xlat
or
test
les
scas
jnp
sbb
insl
cld
sbb
mov
loop
jbe
movsb
cmp
mov
cmpsl
or
cmp
pusha
pop
jnp
push
out
pop
loope
cmp
sar
ja
mov
push
adc
dec
je
jnp
fsubr
stos
fldt
cmpsb
inc
add
inc
arpl
dec
aam
je
add
mov
iret
stc
cwtl
aam
call
and
mov
jnp
jg
arpl
in
and
cmp
pop
xchg
ss
and
adc
jns
and
mov
add
inc
movsb
lret
fcoms
or
lds
and
jno
sbb
cwtl
fsubrl
and
cs
inc
andb
adc
push
or
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
dec
sahf
inc
push
inc
js,pn
dec
jle
js
push
pop
lahf
pop
add
mov
repnz
push
test
sbb
loop
insb
mov
ss
jb
les
mov
or
int3
pop
xor
pop
in
loop
rcr
je
pop
add
jnp
lret
or
and
fadds
push
test
dec
ficoml
mov
jmp
and
sbb
or
pop
mov
pop
push
and
pop
sbb
in
stos
mov
fnstcw
mov
dec
xor
dec
movsb
or
mov
xchg
add
out
cmc
insl
dec
push
mov
scas
sub
cmp
shr
xchg
or
stos
flds
fwait
cmp
add
mov
mov
mov
icebp
shr
enter
add
fmull
sbb
ret
shll
sub
psrlq
sub
fsubrp
add
mov
or
pop
imulb
lret
dec
cltd
aaa
arpl
cld
cmp
sbb
push
aas
sbb
push
in
ljmp
xor
add
xchg
cs
movsl
arpl
jno
cmp
add
lods
pushf
outsl
aad
subb
jl
mov
test
rol
pop
out
pop
dec
ja
mov
pop
mov
sub
das
shrl
pop
or
ret
jp
scas
sub
xor
repnz
xor
add
rorb
pop
je
pop
push
push
cld
xchg
push
clc
lret
mov
cmpsl
data16
sub
push
xchg
fnstenv
jle
xchg
fdivrs
lret
popf
push
movsl
mov
out
sub
pop
loope
lods
scas
mov
fmuls
add
mov
sti
mov
jne
pop
pop
dec
inc
xchg
leave
enter
les
pop
sbb
and
out
sub
add
cmp
mov
mov
ror
mov
ret
bound
jle
push
ljmp
inc
mov
in
jb
or
or
aam
sbb
inc
fnstsw
xchg
clc
adc
xchg
popf
ret
sub
mov
popf
xor
psubd
filds
ret
or
rorl
out
lods
movsl
pop
shl
add
sub
loopne
jno
mov
or
call
leave
lds
orl
xchg
test
enter
inc
mov
rorl
aaa
sbb
scas
loop
mov
or
mov
jne
stos
adc
push
dec
push
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
in
jae
fwait
xor
dec
jle
js
pop
lahf
or
xchg
xlat
das
mov
adc
xchg
lcall
lds
mov
test
insb
stc
rorl
ja
imul
fidivrl
pushf
push
sub
sahf
je
pop
push
int3
mov
xchg
test
ja
inc
mov
data16
fistps
mov
sbb
pop
nop
imul
lcall
cs
mov
imul
outsl
lret
aas
cmp
mov
mov
and
aas
ret
sub
test
aam
cmp
sub
add
fcoms
sub
dec
fistps
jg
push
mov
adc
pop
mov
dec
insl
cmc
lahf
mov
popa
cmpl
mov
in
clc
xchg
arpl
sub
cmpsb
into
push
xchg
sub
push
ret
add
xor
in
aad
xor
pop
jb
xchg
cmp
cmp
outsl
repnz
shl
test
adc
xchg
ljmp
shl
out
fsubs
clc
sbb
xchg
fists
cmpsb
rclb
sbb
cld
mov
fs
push
inc
lds
xlat
or
daa
outsb
fsqrt
xchg
sub
xor
mov
add
xchg
inc
std
mov
xor
adc
ljmp
stos
ficoms
fwait
test
jno
jnp
fisttpl
push
divb
cmp
mov
shl
push
scas
mov
push
out
sbb
dec
or
test
jp
sub
dec
jmp
int
imul
scas
sub
push
pop
mov
dec
iret
and
pop
pop
add
jecxz
or
push
push
aas
adc
mov
bound
scas
outsb
jp
xor
cvtps2pi
jno
dec
xor
iret
loopne
adc
or
xchg
inc
fmulp
mov
sbbl
sbb
lea
pushf
insl
push
inc
sbb
iret
xchg
xchg
jne
dec
outsl
lds
dec
shrb
push
and
sbb
inc
daa
mov
dec
push
movsb
loope
daa
jmp
mov
push
and
nop
shlb
mov
lods
repz
dec
pushf
sbb
aaa
das
dec
xchg
adc
shr
and
push
push
scas
dec
addr16
sub
rcrl
icebp
sub
ja
mov
push
add
aam
jnp
xor
iret
stos
dec
mov
jb
adc
shlb
mov
mov
out
pop
outsl
and
cs
push
sbb
cmp
iret
xlat
push
mov
into
dec
adc
loopne
jg
jmp
sub
int
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
lret
js
dec
jle
js
fsubrl
jns
ficoml
or
inc
adc
enter
lahf
xchg
es
push
es
push
seto
shll
jb
fucomp
rcl
pop
ljmp
outsl
not
and
test
sub
adc
iret
or
fs
and
add
shrl
data16
cmp
cmp
xchg
or
sti
inc
cmp
aam
test
cwtl
cltd
push
mov
adc
fcmovb
fistpll
sahf
xor
popf
cmp
cs
jno
fsub
cmp
sarb
rclb
shlb
jo
sti
push
mov
push
dec
daa
xchg
hlt
add
test
movaps
add
in
or
scas
mov
jb
sub
cmpb
hlt
popf
xchg
lret
and
dec
filds
add
cmc
fsubl
jbe
lret
je
mov
inc
aas
mov
adc
das
mov
jg
dec
mov
lea
inc
int3
dec
push
mov
and
pop
cld
push
ljmp
mov
push
scas
xor
xor
leave
stos
adc
sbb
add
stos
jmp
clc
xchg
loope
repz
out
jo
test
movsl
mov
inc
mov
adc
shufps
adc
add
mov
xor
fidivrl
xor
sub
icebp
mov
xchg
jno
pop
sti
dec
cmp
popf
enter
add
mov
jb
sbb
cmc
pop
loop
cmp
mov
pop
loopne
adc
pop
ds
fcmovnbe
xchg
sar
mov
jl
sub
or
jb
mov
pop
lahf
dec
cmovs
sub
pop
inc
mov
test
cmp
inc
mov
sbb
fndisi(8087
ss
cld
sbb
movsb
shlb
test
les
mov
push
push
fs
out
mov
add
xlat
xor
lret
push
mov
scas
sub
decb
lods
mov
insl
out
rol
fmull
add
mov
out
into
dec
lahf
repnz
int
dec
xor
ss
out
mov
lea
xchg
sti
and
dec
dec
push
sahf
imul
jb
insb
mov
and
stc
imul
je
mov
mov
aas
outsb
cmp
adc
movsb
sub
cs
sbb
and
push
xchg
scas
mov
jmp
test
inc
cwtl
sub
idivb
cmc
push
add
add
and
lcall
mov
jmp
int
rol
ror
aad
inc
jecxz
fdivrl
jno
and
dec
jle
js
xchg
lods
push
lret
test
fisubrs
dec
sub
test
xchg
into
out
add
call
sub
in
mov
sbb
insb
rorl
and
mov
out
xchg
pop
jmp
jo
call
xlat
mov
lret
int3
ds
push
push
aas
and
jbe
sahf
dec
sub
ss
xchg
sub
mov
jne
hlt
sti
aaa
fwait
outsl
rcrl
inc
or
mov
pop
dec
add
sahf
or
sub
mov
and
rol
ficompl
push
push
jp
test
movsl
sbb
mov
push
xchg
sbb
mov
movsl
xchg
xchg
cmpsl
or
and
sbb
jbe
sar
pusha
inc
pop
pop
outsb
mov
out
js
lock
jns
sarl
movsl
enter
mov
or
movl
pop
push
clc
xorb
lret
push
and
add
inc
sahf
shrl
mov
mov
sub
outsl
fisubl
lret
and
fcoml
xchg
push
xchg
in
out
inc
pusha
sbb
dec
mov
adc
jnp
shrl
or
dec
mov
cmp
mov
push
push
or
xchg
lret
mov
loop
dec
fstps
stc
call
lods
or
xchg
sbb
push
cmpsl
in
das
push
iret
cwtl
jb
lret
mov
mov
pop
ss
daa
cld
dec
fisttpl
jo
mov
or
sbb
lods
xchg
inc
popa
add
lea
or
enter
inc
add
cmp
fcomip
mov
sub
cmp
ret
and
stos
mov
pandn
pop
and
adc
dec
cmp
stc
out
mov
jecxz
cmp
filds
or
loope
mov
cmpsb
or
fcompl
inc
mov
call
and
mov
mov
rol
inc
push
push
inc
sub
or
stos
add
mov
and
inc
dec
jae
clc
loopne
mov
mov
mov
cmpsb
mov
push
flds
jp
dec
mov
out
mov
push
xor
add
cmpb
mov
cmp
negl
adc
bound
test
adc
jg
mov
in
pop
add
pop
lods
std
push
fidivl
jno
lea
jae
cmpb
sbb
sbb
mov
addl
mov
jle
mov
lret
jnp
jge
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
push
xor
js
dec
jle
js
mov
mov
gs
gs
and
pusha
fstpt
push
adc
stc
mov
xchg
inc
adc
cmp
test
xchg
arpl
fildll
xchg
in
inc
mov
xor
ret
jle
es
and
dec
sub
fnstsw
in
lea
sahf
and
enter
xor
scas
pop
dec
add
sahf
filds
adc
movsl
sahf
ss
mov
repnz
aam
mov
xchg
mov
mov
out
push
mov
dec
xchg
bound
xor
call
adcb
das
lds
jae
test
aam
clc
cmp
aad
scas
mov
loop
or
pop
cmp
jl
rclb
xchg
add
scas
add
ja
adc
sti
fstpl
mov
inc
out
adc
test
out
mov
push
inc
scas
dec
bound
adc
mov
or
mov
adc
mov
jl
jl
xchg
aam
cmc
mov
hlt
aad
mov
movsl
aas
loope
sbb
aas
test
mov
outsl
js
int3
call
jne
out
scas
or
inc
inc
in
mov
lds
mov
or
test
cmp
sbb
sarl
lds
xor
in
add
and
add
fmulp
imul
mov
fidivrl
aad
or
mov
inc
rol
jmp
add
xor
lea
repz
divl
xchg
fs
and
fs
imul
jmp
dec
sbb
mov
pushf
outsb
mov
sbb
fstl
lea
sbb
gs
in
mov
inc
jl
in
sub
lahf
push
jb
jnp
push
cmpb
sbbl
fs
out
jge
push
add
fistl
cs
jl
dec
scas
push
and
fwait
or
inc
stos
jg
lock
lcall
push
ljmp
sub
push
adc
inc
aad
cs
xchg
arpl
cmp
dec
or
ljmp
dec
call
or
or
push
or
scas
dec
jnp
xchg
out
scas
je
push
xchg
and
mov
lods
iret
jb
jae
add
add
xor
mov
inc
repnz
icebp
insl
rorl
adc
arpl
cmp
push
push
push
add
push
sti
std
ficomps
pop
sub
mov
je
mov
dec
js
popa
mov
das
addb
adc
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
cld
test
cmp
dec
jle
js
and
fnstenv
jle
mov
inc
inc
lods
pop
or
ret
imulb
roll
imul
pop
ja
jnp
cmpsb
mov
sub
pop
xchg
ret
mov
inc
mov
dec
sub
pop
and
push
pushf
mov
sbb
fsubrl
mov
push
mov
lcall
and
push
xlat
hlt
out
and
push
imul
sahf
xchg
mov
roll
mov
es
inc
adc
sub
repnz
pop
int
pop
xor
je
cmp
out
rorb
fiaddl
mov
add
xlat
sub
notl
pop
lds
fisubrl
in
xchg
adc
pop
aas
cmp
in
sbb
fisttps
scas
cmc
mov
pop
insb
repz
push
cmp
rcll
and
sub
ds
stc
push
xchg
inc
xchg
sub
cmpsb
addl
add
pop
out
js
inc
test
arpl
mov
mov
push
cs
icebp
xor
mov
sbb
test
dec
adc
mov
add
dec
popa
js
arpl
sahf
mov
jmp
ja
mov
inc
inc
cli
lods
push
xorl
sbb
pop
jbe
in
or
fldt
ja
aam
lahf
jns
repz
push
in
and
out
ret
cld
mov
outsb
cmp
fsubl
fnstcw
jo
jb
mov
pop
lcall
mov
add
ss
xchg
pop
jmp
fstps
ljmp
scas
scas
dec
inc
in
xchg
and
mov
xchg
addr16
mov
jle
or
jmp
jae
imul
insl
adc
cmpsl
arpl
cmpsb
add
imul
mov
enter
inc
mov
stos
adc
sbb
nop
lahf
mov
dec
ret
jge
xchg
hlt
stos
cmpl
and
movsb
popa
roll
jno
fadd
inc
hlt
fdivr
ljmp
loop
rcll
add
dec
mov
push
push
gs
or
push
bound
xchg
inc
push
insb
inc
rcll
ljmp
repnz
ja
add
mov
fists
test
in
xchg
jns
lcall
stc
stc
pop
xor
outsl
pop
sbb
clc
mov
or
push
jne
ficompl
adc
repnz
mov
xor
jmp
rol
ror
leave
rcr
aaa
mov
add
dec
jle
js
out
mov
pop
sub
fs
add
jecxz
jo
out
mov
mov
mov
popf
xchg
test
xchg
jle
sbb
out
lds
cli
mov
sub
sub
mov
mov
test
in
jmp
mov
mov
stc
lret
ss
push
or
and
and
adc
daa
pop
push
adc
push
stos
and
jae
jg
iret
lods
mov
xor
mov
ljmp
pop
adc
lret
setne
fildll
mov
sbb
sti
sahf
pop
or
jle
in
pop
imul
mov
pop
pop
mov
mov
aam
mov
mov
inc
xchg
pop
inc
dec
or
cwtl
mov
pop
in
fists
shl
xor
notl
jo
dec
in
cwtl
jae
mov
dec
adc
rcr
fsubs
inc
gs
xchg
icebp
pop
fnstenv
pop
cld
adc
int3
or
outsl
push
cmpsb
mov
jns
loope
lret
jl
mov
xchg
outsb
outsb
cmp
js
push
test
or
inc
cmpsb
inc
jo
lcall
dec
xor
sub
jbe
into
dec
mov
lret
sbb
aad
fndisi(8087
pop
dec
jae
pop
pop
xor
insb
inc
js
cmp
sbb
push
sub
pushf
repz
imul
arpl
push
jb
clc
cmp
bound
jg
and
sub
xor
mov
cmp
shll
clc
lret
jbe
out
inc
xchg
xchg
in
divb
ret
pop
gs
mov
test
adc
sub
dec
divb
pop
nop
mov
mov
add
xchg
mov
push
mov
or
sub
int3
pop
mov
sti
dec
and
push
jle
jbe
sti
or
cmp
test
sbb
in
pop
cmpsl
and
xchg
mov
adc
test
add
in
sbb
int
mov
shl
out
pop
cmpsl
xor
sub
xor
and
cmp
sub
lods
adc
stos
jp
xchg
stos
loopne
les
mov
int3
mov
es
mov
xchg
fsubrp
out
xlat
jl
push
push
push
mov
pop
mov
inc
push
jbe
ss
sbb
frstor
xor
pop
js
daa
push
inc
xor
cltd
xchg
ljmp
nop
adc
mov
push
sahf
jbe
cmp
std
fs
jmp
add
iret
rcl
lret
ror
xlat
lods
and
je
mov
js
jle
js
xor
cmpsb
mov
aad
sub
jns
push
lcall
test
sub
dec
insb
sbb
leave
add
pop
or
decl
aad
dec
jle
lods
imul
sub
sahf
and
in
lds
push
pop
adc
mov
fidivl
push
mov
add
stc
mov
test
adc
in
push
aam
outsb
shlb
xchg
inc
mov
push
xchg
movsl
je
adc
scas
out
cmpsl
rolb
popa
inc
mov
mov
mov
sbb
jp
ret
push
or
mov
jne
mov
push
jo
leave
cmp
ljmp
mov
fnstsw
hlt
fsubl
das
or
cmp
lods
mov
subl
fwait
insb
adc
push
sub
or
test
into
je
mov
cmp
sub
jmp
jne
bound
cmp
mov
push
xchg
fisttps
sub
cmp
imulb
xor
shrl
test
imul
dec
rsm
adc
lcall
ret
pop
iret
call
leave
adc
and
pop
pop
sub
jbe
repnz
mov
pusha
jae
aam
scas
les
lret
jae
xchg
mov
stos
adc
lcall
jo
fiadds
jno
fs
xchg
pop
outsb
call
clc
cs
pop
lahf
pushl
lret
insb
aas
test
out
and
and
add
jns
outsb
ret
xor
cmp
mov
fistpll
adcb
mov
cwtl
fistpll
popa
movsb
out
push
jbe
div
sbb
sub
mov
push
sub
jp
jmp
es
mov
sti
sub
xchg
push
fs
lcall
or
loop
pop
jb
sub
movsl
xchg
fwait
dec
mov
mov
sahf
or
addb
xor
adc
insl
dec
data16
dec
push
adc
dec
scas
ret
dec
std
inc
rcrb
mov
xchg
add
or
or
sbb
cmc
insl
mov
ret
dec
rcll
add
movsl
sti
js
jle
mov
arpl
cmp
testb
xor
inc
psubw
das
clc
or
sbb
mov
in
popa
sbb
xor
push
push
mov
pop
xchg
push
jl
sbb
lods
scas
inc
or
das
lcall
les
div
mov
jmp
aas
ret
rol
sbbl
dec
faddp
js
dec
jle
js
jns
jl
inc
cmp
shll
mov
push
dec
xor
adc
dec
aas
int3
out
lock
loopne
or
or
clc
push
push
xchg
ss
icebp
fcomp
mov
sub
push
push
mov
adc
inc
bound
fwait
stos
push
test
scas
mov
test
lds
imul
inc
icebp
xor
lret
les
mov
stos
movsb
dec
and
pop
xor
loop
add
mov
loope
je
adc
xchg
rolb
mov
gs
pop
subb
int
lea
pop
xchg
add
jge
pop
lcall
imull
mov
jb
push
adc
add
lret
outsl
or
mov
jl,pn
faddl
mov
dec
adc
rcrl
les
xor
ds
push
pop
sahf
fstl
jmp
sub
pop
and
mov
cmp
dec
xor
xchg
lods
or
lret
rcll
xor
int
xor
sub
mov
stos
mov
add
call
repz
repnz
adc
jg
jb
add
iret
fcmovb
or
jb
test
icebp
lds
aad
dec
xchg
decl
cmpsb
scas
xor
inc
lret
scas
imul
lcall
cmp
out
dec
cmpsl
aad
pop
inc
ret
mov
imulb
fiaddl
jb
adc
imul
push
mov
cmpsl
int3
dec
shrb
fmulp
pop
mov
pushf
jge
rcpps
es
rorb
mov
call
loop
mov
inc
loop
fiadds
fildl
cmp
loope
xchg
xor
add
mov
cmp
lahf
sbb
sbb
xor
inc
push
pusha
mov
outsl
xchg
xor
dec
xchg
shr
mov
mov
dec
imul
or
mov
movsl
jne
push
jle
popf
xor
loopne
roll
lods
cmp
cwtl
popa
mov
push
fcomps
mov
lret
xlat
shrb
jnp
stos
out
out
std
arpl
jns
sub
mov
pop
jl
aaa
sub
push
nop
ficompl
or
std
pusha
ficoml
push
cld
popa
test
aam
mov
call
xchg
inc
xor
cmpsb
push
adc
les
xor
and
or
mov
jmp
ds
cmp
mov
leave
mov
mov
les
dec
jle
js
bound
or
aad
xchg
and
lds
les
mov
or
inc
aad
fisubrs
adc
loope
sti
adc
daa
xlat
js
cld
int
inc
or
inc
outsb
or
ficomps
repnz
xor
aaa
add
repnz
repz
xchg
jmp
addr16
decl
cmc
sbb
jmp
mov
jge
dec
in
stos
ret
cli
sub
stc
stos
nop
add
pop
stos
int3
sbb
and
pusha
pop
stos
test
repnz
fdivrl
cmp
ljmp
cwtl
cmp
push
mov
mov
enter
dec
gs
push
pop
nop
idivl
and
cmp
rcrb
in
mov
aas
ror
cmp
inc
dec
mov
add
pop
inc
movsb
xor
or
xchg
mov
jle
pusha
gs
mov
ror
dec
push
movsb
inc
jmp
xor
push
dec
call
nop
pop
sbb
dec
mov
cmp
andb
fidivs
mov
lods
mov
mov
add
jecxz
lods
push
push
lret
jno
cwtl
sahf
or
je
mov
les
sbb
sub
inc
rcl
mov
cmp
add
inc
sti
sub
std
xchg
and
xor
jns
in
adc
pop
xchg
adc
xor
js
test
or
or
pop
dec
inc
das
aaa
adc
mov
jno
push
cmp
imul
popa
push
mov
in
jmp
inc
push
test
scas
push
mov
sar
push
mov
fwait
mov
and
and
decl
aaa
icebp
push
mov
cmp
adc
jb
mov
addb
jmp
lds
imul
mov
add
mov
mov
push
sub
sub
dec
xchg
xchg
lret
in
jp
cmp
daa
sbb
rcll
jno
xchg
mov
xchg
cmp
push
and
mov
or
jge
in
cli
or
push
aaa
pop
pop
pop
mov
cmp
scas
test
or
mov
aad
xchg
outsb
push
add
mov
push
test
sar
inc
mov
cs
push
xor
add
sub
mov
negl
scas
sbb
out
fwait
cmp
cli
or
es
pop
sbb
in
enter
int
and
loopne
fcoms
insb
stos
xchg
cli
hlt
jb
inc
ljmp
pop
push
maskmovq
divl
cmpsl
or
and
sti
pop
push
fisttpl
enter
push
mov
sbb
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
jae
aas
je
leave
js
fs
js
mov
add
xor
aas
push
shll
pop
and
lock
fmull
loope
pop
in
and
cmp
test
leave
shlb
fwait
jge
outsl
cli
and
pop
mov
ficompl
fstps
or
cli
xchg
outsl
add
ficompl
mov
sub
lock
xor
lret
imul
xchg
sbb
cltd
ss
mov
add
sbb
les
mov
add
bound
frstor
jo
mov
pop
test
jb
fisttpll
andl
fcoms
dec
pop
jno
das
and
fs
int3
mov
mov
jle
xor
xor
testb
sahf
lock
ret
out
xor
mov
into
mov
dec
nop
mov
mov
out
in
and
xchg
and
dec
repz
push
add
xor
inc
int3
add
add
xchg
jb
inc
pop
push
sub
mov
push
lods
inc
cmc
xchg
scas
movsl
mov
push
and
xchg
subb
xor
sbb
dec
jb
icebp
sbb
test
jnp
repz
test
rolb
adc
mov
pop
jno
insb
es
jge
int
inc
adc
cmp
ja
mov
push
inc
outsb
mov
shl
pop
mov
daa
add
inc
and
repz
or
push
int3
and
pop
outsl
sub
stos
and
sbb
mov
cmc
cmpb
jnp
ds
call
cmp
and
sbb
cli
cmpsb
or
mov
mov
imul
notl
dec
mov
enter
rcr
hlt
outsb
jnp
sub
adc
fbld
andb
mov
or
sti
loop
cs
pop
cmp
rcl
repz
xor
std
jecxz
pop
test
mov
fcom
repnz
cmpsl
push
daa
aaa
addr16
mov
inc
aas
or
mov
cmpsb
js
lock
lahf
cmpsl
add
stos
xchg
stos
insb
cmc
adc
int3
and
repz
and
push
adc
fs
leave
aam
jo
jnp
jae
xor
negb
jmp
xchg
dec
int
sub
lret
jecxz
mov
inc
mov
jmp
cltd
fiadds
nop
adc
or
inc
leave
pop
stc
or
out
ret
repnz
jg
jp
cmp
popl
out
std
mov
fiaddl
andl
xorb
outsl
out
test
xor
stos
mov
adcl
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
adc
sti
insb
iret
js
fs
js
sub
mov
dec
sbb
dec
push
xlat
inc
fistps
add
sahf
dec
pushl
iret
jo
jge
js
mov
rclb
xlat
inc
jle
jbe
scas
sub
cs
mov
mov
xchg
mov
pop
cmp
cwtl
and
clc
outsb
xor
cmp
inc
xchg
cmpl
jl
mov
mov
sbb
or
push
or
rclb
aad
mov
or
stos
inc
fucom
in
cwtl
cld
mov
aas
xchg
sahf
jno
push
lcall
jp
aam
popa
jno
mov
loope
or
pop
lcall
push
outsb
aaa
iret
sub
loopne
dec
xchg
pop
das
xchg
pop
in
add
loopne
ss
dec
loop
dec
stc
nop
cmpsl
movsb
sbb
scas
mov
add
or
cmc
addr16
ljmp
or
fldcw
push
lods
lret
jne
pop
cwtl
sbb
push
stc
stos
ss
das
inc
ss
sti
add
punpckhbw
fcomi
in
jns
cmpb
or
pusha
outsl
mov
mov
insl
mov
xlat
int3
mov
adc
out
jb
mov
lahf
push
mov
and
stos
add
and
das
out
push
mov
and
xchg
popa
adc
loopne
fcoms
mov
pop
mov
dec
cmpsl
xor
fdivrl
xchg
or
inc
in
mov
mov
mov
sarb
popf
mov
pusha
cmpsb
jle
xchg
divl
in
add
imul
ss
fisttpl
cmc
xor
sbb
mov
test
sarl
push
pop
roll
or
mov
dec
into
lock
cmp
pop
scas
ja
lret
pusha
add
enter
cmp
or
jb
lods
xor
jnp
xchg
stos
add
dec
jge
pusha
pop
adc
aad
movsb
sbb
lods
inc
testl
lret
mov
ljmp
icebp
add
xchg
outsb
inc
or
sarb
dec
aas
cmp
stc
into
or
inc
mov
and
and
lahf
or
jnp
inc
out
mov
aam
mov
adc
inc
cmp
in
lea
push
and
testl
jae
and
hlt
ss
fldpi
inc
arpl
mull
sahf
jns
push
mov
xor
pusha
cltd
fcoms
data16
push
jbe
mov
mov
mov
cmp
rcrb
xlat
cmp
pushf
pop
or
mov
scas
sbb
icebp
fldenv
shl
cmp
das
jae
in
imul
mov
mov
jle
xchg
js
add
sbb
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
cs
rcrl
js
fs
js
xchg
sbb
movsb
or
lods
push
fcomps
popa
xor
iret
lret
add
fcmovne
push
mov
mov
frstor
xor
imul
lret
xchg
and
and
inc
popa
insl
aam
outsl
adc
mov
xchg
fldl
inc
cmp
add
in
cwtl
imul
pop
xor
mov
and
es
and
out
out
xor
mov
cmp
or
shr
or
jecxz
add
sub
jno
mov
or
testl
sub
xlat
loope
rol
mov
adc
call
dec
push
psubw
jmp
or
pop
sub
test
nop
mov
aas
call
fistpl
arpl
jmp
add
js
mov
mov
xchg
jnp
movsb
pop
mov
inc
pop
repz
insb
fucomip
in
jmp
pop
rol
int
shrb
pop
jmp
dec
sbb
mov
inc
push
pop
imul
enter
fsubrp
jno
xlat
test
and
cmpsl
inc
add
loope
mov
and
jle
les
gs
lods
push
xchg
int3
jle
pushf
rcr
movsb
mov
out
fnstsw
lods
sub
scas
ret
lods
stos
inc
movsb
aas
negb
pop
jl
cmp
mov
sbb
inc
test
stos
pop
or
cwtl
mov
or
mov
xchg
xchg
icebp
cmp
mov
cmpsb
sub
cmp
les
pop
nop
xchg
fdivrs
mov
ja
js
add
mov
int
adcb
mov
jl
pop
cmp
pop
xlat
mov
sub
push
out
dec
das
xor
xor
in
push
xlat
cmp
inc
std
mov
mov
in
jne
mov
decb
sub
insb
mov
add
mov
inc
ret
mov
movsl
sbb
ret
add
dec
insl
aas
pop
in
cmpsb
hlt
pop
or
sbb
ret
dec
push
jnp
push
mov
in
test
adc
out
ret
shll
movsb
fs
sub
rolb
test
pop
mov
and
in
mulb
mov
sub
inc
add
scas
and
mov
call
and
and
or
push
in
lcall
lock
xchg
and
fldcw
notl
xor
jg,pn
or
cmc
ret
inc
mov
xor
shll
out
xor
xchg
pop
jp
mov
and
movb
dec
mov
inc
jg
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
lret
add
popf
xchg
mov
shrl
push
dec
shr
xlat
xor
test
mov
je
enter
or
cmp
cmpsb
loop
in
sub
test
add
inc
out
out
mov
mov
fstps
xchg
sti
rcl
ljmp
and
jp
xchg
push
mov
dec
mov
or
pushf
and
mov
ljmp
jecxz
sub
mov
ss
or
jne
fs
or
mov
xor
in
mov
mov
pop
pop
dec
dec
fwait
push
hlt
xor
aad
mov
xor
dec
leave
mov
aas
mov
fldcw
imul
jno
dec
mov
fcom
pop
xchg
xor
out
lret
out
mov
dec
push
out
dec
scas
add
push
mov
lods
insl
pop
shr
mov
pop
sub
aas
mov
push
mov
push
sub
aas
cmp
int
pop
fcmovnbe
adc
pop
xchg
xor
adc
lret
adc
loop
sbb
rcrb
jnp
in
sub
daa
in
std
sub
cmpsl
push
jno
mov
mov
mov
mul
push
imul
test
mov
mov
andl
xchg
mov
std
pop
push
int
insl
dec
js
cmp
in
gs
sub
je
sub
dec
jnp
cli
loope
es
add
adc
and
adcb
push
mov
inc
jmp
sbb
loope
popf
mov
push
inc
adc
pop
inc
out
jp
push
lret
aad
sub
bnd
push
fimuls
ds
ficomps
das
push
mov
sub
call
imulb
cmp
ljmp
mov
adc
sbb
pop
push
ljmp
loope
mov
inc
mov
rorb
jae,pn
mov
or
inc
iret
mov
push
inc
arpl
jecxz
ja
mov
std
xchg
andl
sub
dec
enter
or
inc
je
pop
cmpsb
and
adc
sub
adc
xchg
fs
add
push
dec
dec
in
gs
jecxz
mov
repz
add
mov
jecxz
lds
aas
adc
in
stc
xchg
cld
jmp
cmp
xor
inc
cmp
aaa
rcrb
imul
sbb
test
jmp
loop
inc
and
clc
imul
lods
or
sub
dec
adc
test
incl
add
insb
add
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
sub
mov
js
fs
js
xchg
aam
pop
sti
repnz
adc
push
push
lret
xor
lods
inc
mov
or
jecxz
inc
insb
xor
xor
testb
cmpsb
pop
jns
stos
inc
addr16
cmpb
jp
fwait
lahf
frstor
mov
orl
out
iret
cltd
mov
std
fsub
imul
adc
call
xor
add
add
arpl
out
fdivrl
mov
lahf
ret
or
out
test
add
xchg
mov
and
and
and
fbld
push
push
fisttps
les
cmc
fistpll
je
or
dec
mov
jne
std
mov
mov
push
leave
sbb
push
bound
and
mov
lds
adc
push
jl
jmp
out
cmp
cs
nop
idivw
arpl
mov
xchg
cltd
pop
xor
movsl
and
push
es
out
mov
mov
and
push
nop
mov
shr
nop
cs
outsb
mov
das
mov
stc
fidivl
bound
pop
fsubl
adc
sbb
clc
inc
sbb
pusha
iret
js
adc
mov
fsubs
lds
loopne
adc
cmpsb
sbb
iret
push
fisttps
notl
or
pop
out
stos
sti
cmpsl
cmpsb
add
stos
cwtl
push
call
aas
insb
daa
ds
ds
and
lods
jg
or
push
mov
outsb
out
adc
xchg
jle
inc
jl
cs
xchg
adc
push
push
and
mov
sbb
adcb
sub
and
mov
sub
clc
cmp
clc
popa
repz
fwait
shrl
js
lret
add
hlt
cltd
add
dec
in
jo
stos
adc
mov
call
cmpsb
cmc
shr
inc
dec
cmpsl
jbe
arpl
push
aad
xor
stc
test
inc
jecxz
or
insb
ljmp
gs
mov
xor
jae
fstps
pusha
cltd
enter
pop
mov
adc
fcmovu
popa
pop
cmp
in
add
popf
mov
imul
lock
and
sbb
arpl
iret
jmp
clc
push
mov
mov
xlat
add
test
mov
cmp
push
out
push
cmp
or
push
aas
jg
push
mov
scas
arpl
stos
ss
ja
pop
shrb
jecxz
test
stc
iret
and
lock
and
lock
outsb
rclb
aam
push
sti
jns
orb
add
mov
fmull
shll
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
jb
mov
pushf
fstpt
fs
js
xchg
add
and
xchg
push
jl
push
mov
mov
inc
dec
pop
aad
inc
or
cmpsb
outsb
push
call
ret
adc
dec
ret
add
jmp
arpl
pop
fistpll
scas
adc
pop
push
pushf
mov
pop
mov
pusha
orb
in
push
pop
add
sub
insl
push
sub
lods
or
outsb
mov
sahf
mov
push
add
lds
and
xchg
ret
jp
jb
lock
mov
mov
out
ljmp
mov
xchg
lahf
lods
pop
sarb
xchg
imul
xor
mov
add
and
insb
ljmp
imul
ds
lahf
add
mov
sahf
fs
icebp
lods
mov
out
pusha
mov
pushf
mov
fbstp
and
mov
shlb
shrb
and
test
mov
movsl
mov
hlt
pop
push
push
call
xchg
dec
inc
mov
adc
fcmovu
adc
cs
push
fnsave
jbe
push
cmp
adc
imul
jae
daa
lock
xchg
sub
and
sbb
dec
and
loop
fbld
cltd
push
mov
jecxz
inc
movsl
add
jp
jmp
cwtl
aam
cmp
jmp
gs
add
jne
add
and
add
shlb
pop
inc
dec
xchg
lds
mov
jmp
add
xchg
out
xor
pop
xchg
cld
xchg
jns
push
add
sbb
into
pop
sahf
lahf
inc
cwtl
iret
stos
es
fucomip
in
lods
pushf
or
jbe
or
scas
pop
aam
sub
mov
add
xlat
fwait
push
adc
mov
jbe
into
sub
sub
in
add
outsl
aam
mov
jl
jl
pop
jmp
push
lods
enter
cwtl
lcall
inc
movsl
jmp
bound
sbb
je
push
xchg
push
xchg
add
enter
pop
inc
outsb
int3
aaa
cs
cli
bound
jne
roll
lds
jbe
fwait
mov
inc
stc
cmp
lods
mov
mov
outsl
insb
jnp
in
add
jne
sti
cmp
cmp
jo
lret
mov
lods
insb
or
fxch
lock
aaa
xor
aam
bound
mov
lock
orb
mov
rcr
sarb
popf
dec
cmp
imul
repz
jnp
mov
push
shll
mov
pop
push
dec
mov
pop
push
stc
sub
mov
or
fidivrs
adc
xor
jmp
pop
fisubl
cltd
mov
cmp
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fsubs
fdivrs
fs
js
out
jb
lock
out
sub
fcomps
movsb
xchg
mov
stos
out
sbb
push
fwait
mov
scas
popf
je
pop
adcl
les
push
inc
mov
xchg
xorb
sub
push
pop
call
shrb
lahf
jge
subl
add
jns
lcall
dec
cmp
pop
xchg
mov
fisubs
loope
dec
rcrb
not
stos
push
inc
or
and
sbb
movsb
lods
std
sub
mov
xchg
inc
loopne
jns
pop
inc
mov
xchg
xlat
mov
push
xchg
punpcklbw
adc
ljmp
xlat
andb
imul
sbb
shlb
paddb
dec
add
xor
xchg
in
sbb
pop
xor
pop
lds
xchg
loopne
dec
sub
and
or
aaa
into
and
es
lods
push
pop
inc
scas
out
mov
and
lods
jmp
and
rcrb
repz
rolb
xor
add
popa
jl
inc
mov
out
inc
mov
fisubs
ret
jl
jo
leave
mov
push
pop
mov
sub
xor
adc
push
xchg
gs
fisubrs
jno
or
cli
xchg
imul
sub
loope
test
stc
into
and
cli
fdivrl
sahf
rolb
xor
cli
sahf
mov
push
ds
test
sub
cwtl
jbe
loopne
dec
mov
outsl
stc
popf
sarb
cmp
aaa
repz
adc
push
xchg
mov
or
cmp
pop
clc
bound
jecxz
adc
mov
js
dec
jge
cs
movsl
fstps
add
call
outsb
imul
jbe
test
out
add
ret
roll
push
les
mov
out
ret
cmpsl
lods
xor
push
mov
sahf
xchg
add
faddl
fstps
dec
loop
mov
cmpsl
mov
xor
cmp
fwait
int
sbb
call
sub
mov
stos
icebp
fsts
pushf
fsubrs
repz
xor
push
sbb
mov
sub
dec
inc
divl
shll
dec
js
push
scas
insl
daa
push
sti
subb
aam
sub
adc
outsl
inc
arpl
pop
and
adc
insl
sbb
out
jecxz
std
jnp
dec
cs
aas
xlat
mov
sub
push
loop
mov
sahf
stc
out
add
repz
add
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
mov
fs
js
mov
mov
mov
orb
cmp
mov
ljmp
out
adc
clc
add
nop
decl
nop
xor
pop
in
test
mov
test
cli
arpl
adc
adc
mov
in
pop
push
andl
jl
pop
cmpl
dec
mov
push
pop
mov
scas
das
lds
pop
sub
test
add
mov
icebp
gs
xor
aad
cmpsl
adc
dec
adc
jg
sbb
testl
mov
xchg
lahf
shll
roll
jo
mov
imul
std
cltd
mov
adc
mov
push
ss
and
xor
cmp
in
imul
sahf
jl
jecxz
sub
js
testl
int
xor
jnp
in
or
or
push
fnstcw
sahf
mov
pop
divl
xlat
addr16
pop
ret
es
xchg
xchg
clc
push
fdivrl
dec
dec
mov
dec
adc
dec
mov
bound
push
cmp
stos
mov
sti
push
pop
push
or
xchg
xlat
insb
cmp
call
mov
push
addr16
leave
lods
iret
idiv
xchg
das
jp
stos
cmp
push
outsl
cmp
clc
lods
rcl
and
sub
xchg
test
bound
dec
cmp
mov
insb
das
out
lahf
push
ror
pop
or
ret
jmp
xchg
ficoms
loope
adc
dec
pop
add
inc
and
adc
xchg
and
pop
test
mov
clc
mov
ret
or
cwtl
sub
or
mov
dec
outsl
test
or
cld
dec
loop
jae
mov
xchg
inc
dec
inc
jo
in
leave
push
push
pop
pop
movsl
out
xchg
loop
std
fstpl
imul
icebp
movsl
fsubrp
dec
jg
mov
loopne
leave
dec
push
add
jp
gs
mov
je
jg
in
fdivl
inc
sub
push
movsb
add
test
cmp
or
ss
mov
inc
repz
idivl
daa
scas
aaa
add
xlat
mov
bnd
test
dec
inc
adc
mov
sahf
jo
jae
loop
pop
sarb
es
call
mov
pop
pop
pop
orb
in
push
sahf
push
sub
jl
sbb
jle
ja
inc
sbb
aam
sbb
test
sub
testb
push
sub
mov
iret
inc
ficoml
ret
inc
dec
jmp
scas
fs
movsb
push
pop
pop
imul
imul
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
xor
adc
sbb
add
jmp
fadds
inc
pop
push
push
add
xchg
inc
jnp
mov
cmp
nop
jno
loopne
cmpsl
out
adc
xor
mov
movsl
mov
mov
xchg
js
inc
and
mov
faddl
jnp
fs
jne
add
xlat
lahf
cmpsl
mov
aad
push
mov
pop
sub
xchg
add
in
dec
out
xchg
ret
ret
gs
push
push
sbb
jl
fisttpll
lea
loopne
insb
test
or
mov
notb
mov
xchg
mov
push
es
cs
aas
mov
add
lahf
jl
jbe
xchg
lods
hlt
push
xchg
jmp
fisubs
std
or
fbstp
negb
xor
or
cmc
jno
test
sub
clc
outsb
lcall
mov
mov
sti
push
jo
fstpl
repz
jmp
and
loope
sarl
lods
mov
lock
in
js
and
and
push
pop
cli
cld
inc
cmp
into
mov
add
das
cmp
fstpl
jecxz
sub
mov
insb
adc
push
jno
in
stos
inc
pop
mov
jnp
bnd
shlb
popa
ljmp
xchg
pop
outsl
mov
sub
and
adc
ljmp
jp
int
ficompl
cmp
lods
cs
js
cmpsb
push
mov
and
adc
mov
das
add
xchg
mov
ficoml
xor
cli
imul
adc
dec
cmp
pop
addl
mov
mov
jno
movsb
xchg
orl
fnsave
clc
mov
mov
bound
mov
and
jmp
fidivl
pop
sahf
imul
fwait
jno
push
mov
mov
out
bound
lock
fidivrl
and
inc
and
dec
test
add
ret
jns
out
jge
mov
rcrb
stos
jb
mov
or
push
scas
aas
bound
adc
sbb
mov
mov
mov
mov
and
icebp
cmc
ficoms
pusha
test
mov
inc
mov
icebp
xchg
movsb
dec
sbb
andb
adc
lahf
push
fisttps
xchg
leave
test
sub
aam
cmc
dec
add
inc
and
mov
aam
add
lock
jns
jecxz
mov
das
inc
push
mov
hlt
shll
pop
imul
push
stos
lcall
pop
fadds
push
fwait
xor
cmp
sub
in
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
sbb
neg
int3
out
js
jle
js
stos
lods
enter
add
pop
stc
lret
sub
mov
pop
mov
ljmp
mov
sbb
test
xor
stos
adc
add
push
sbb
xchg
xchg
mov
scas
pop
arpl
cmp
arpl
mov
mov
aas
clc
test
dec
es
mov
ds
sbb
repnz
bnd
loope
dec
sub
cwtl
call
popf
cmpsl
dec
mov
inc
push
test
in
xchg
adcl
xchg
mov
outsl
negb
pop
cltd
rorl
xor
icebp
aad
cmpsb
jb
enter
mov
int
out
pop
lock
dec
dec
outsl
lcall
sub
pop
loop
out
xor
push
pop
fildl
sahf
mov
push
nop
das
nop
lcall
sbb
in
push
jae
pop
rorl
adc
adc
and
jle
jns
cltd
xor
mov
cmp
mov
lret
inc
incb
pop
enter
fdivs
arpl
pop
cltd
jle
pop
push
mov
mov
sti
daa
jns
cmp
int
jae
loop
xchg
jo
cmp
test
cmp
aam
divb
dec
lock
push
dec
inc
cli
stos
cli
cwtl
push
xchg
pop
push
pop
sub
loopne
stos
or
cwtl
push
sahf
in
jg
stc
lock
sub
enter
mov
mov
mov
or
out
and
loop
call
outsb
cmc
jecxz
pop
std
repnz
mov
dec
movnti
pop
xchg
lret
cwtl
out
add
imul
enter
mov
vpunpcklqdq
or
frstor
cld
jbe
lds
jno
fildll
xchg
push
pop
mov
mov
shlb
pop
data16
adc
mov
jne
lds
ss
jecxz
jne
add
cli
and
lock
pusha
sbb
pop
sbbl
stos
fwait
jecxz
std
xor
xchg
xorl
push
popl
loope
movsl
mov
hlt
push
arpl
popa
jns
adc
push
and
icebp
xor
loope
call
insl
fdivrl
sub
dec
jb
sarb
mov
inc
leave
fwait
sbb
cmpsl
pushf
hlt
push
enter
hlt
jae
aaa
xor
inc
add
dec
iret
aam
lcall
out
cmp
sub
mov
inc
outsl
push
out
jb
pop
and
jns
xor
repnz
and
add
mov
cli
xchg
pop
sti
sbb
adc
ss
das
enter
daa
mov
add
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
test
fistpll
in
js
jle
js
xchg
pop
in
pop
xchg
pop
sub
sbb
ljmp
sub
cmpsl
lea
cmp
ret
fs
lret
stos
mov
jle
mov
shll
arpl
je
mov
and
lds
aad
fimuls
cmp
adc
lcall
inc
and
pop
push
bound
lock
hlt
xor
inc
and
outsb
inc
imul
cs
iret
scas
sti
aam
xchg
xchg
adc
pop
jbe
push
rolb
pop
cmc
lahf
bound
decl
dec
imul
push
add
popa
and
ret
sahf
push
nop
dec
fcmovne
imulb
fisttps
sbb
lret
xchg
out
out
sub
stc
mov
mov
nop
pop
push
jnp
mov
jmp
sbb
jae
xchg
aas
cmp
leave
add
test
adcl
imul
pop
cmp
loope
in
mov
lock
xor
xor
and
xor
test
not
cmp
outsl
sub
aas
aam
aaa
mov
mov
xchg
inc
sahf
aam
cmp
notl
push
mov
std
mov
xlat
mov
pop
mov
xchg
cmp
in
int
rorl
adc
lret
jp
ror
sub
xor
ja
stos
scas
sub
leave
arpl
mov
lahf
call
fucomp
leave
xchg
push
test
cmp
xor
jge
add
mov
dec
xlat
jle
sub
add
lods
mov
sub
rcrb
sub
pop
cmp
mov
stos
lock
lahf
pop
xor
addr16
and
adc
je
mov
daa
out
fimuls
scas
pop
movsb
shrl
push
imul
cmp
mov
xor
es
or
mov
in
pop
js
adc
shlb
cld
std
mov
inc
add
push
push
and
lcall
jp
push
iret
push
pop
mov
loopne
push
pop
and
mov
add
aas
movsb
roll
push
loopne
shrl
int
mov
fdivrl
hlt
out
mov
xor
pop
push
cli
cmpsl
enter
sbbl
es
push
lock
loopne
mov
lcall
cmp
test
fcmovnu
sbb
stos
inc
push
jo
sbb
or
pop
cmp
lahf
vpaddsb
cmp
scas
movl
movl
mov
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
and
js
jle
js
push
jg
sub
daa
lods
adc
xor
and
push
fstl
inc
fs
jecxz
leave
test
outsb
int3
bound
mov
pop
sbb
jb
cwtl
cmp
sbb
cmp
sub
stos
push
cmp
inc
cltd
push
mov
push
dec
jnp
sub
or
sbb
lret
jo
fsubrs
push
push
cmp
sub
cltd
mov
jo
xchg
push
hlt
add
and
rcrl
ret
cmp
push
rcrb
insb
hlt
pop
fsts
sbbl
inc
mov
sbb
adc
cmp
subl
hlt
and
fnstsw
or
fcmovnb
adc
inc
add
es
mov
mov
test
data16
popf
int
cmpsb
pop
gs
fwait
mulb
pop
js
jne
popf
and
icebp
mov
mov
xor
arpl
xor
adc
xchg
inc
jge
jb
popf
testl
xor
les
stc
gs
sbb
cltd
mov
in
jmp
bound
scas
dec
fwait
dec
xchg
inc
dec
cmp
push
sbb
dec
repnz
adc
sub
mov
xor
inc
jbe
sub
push
push
inc
add
jo
lds
jae
cmp
or
jne
cmp
or
push
add
xchg
push
push
add
in
shrb
mov
jo
mov
imul
pushf
dec
cmp
aad
out
push
stos
inc
sub
dec
fdivl
jae
fdivr
inc
jmp
mov
ss
rcrl
add
je
adc
xor
lret
in
test
jb
mov
add
jo
cmp
xor
mov
sahf
pop
push
cmp
mov
je
cli
cmp
jbe
into
and
adc
test
inc
dec
outsb
pop
add
cmp
mov
outsl
test
scas
out
outsl
push
aaa
xchg
movsb
imul
xor
test
jle
lods
mov
or
dec
ja
imul
das
subb
test
inc
xchg
and
dec
mov
ja
dec
or
push
jg
sti
aad
hlt
xchg
mov
jns
jge
bound
or
add
or
jg
mov
int
push
cmp
jb
das
pop
cmp
movl
jne
jmp
lret
cmp
mov
push
in
mov
js
cmpsl
jle
js
sub
cmp
sarl
or
aad
rcrb
mov
lcall
pop
xchg
jno
mov
repnz
inc
mov
xor
or
fldt
pop
out
mov
fcmovu
out
xorl
lock
dec
loope
fwait
sub
xor
mov
nop
jno
fisttpll
mov
mov
push
or
xchg
adc
push
adc
jmp
fstpl
aaa
push
lcall
bound
cwtl
fists
jmp
ljmp
pop
cli
add
and
add
rcrb
int
insl
les
add
sbb
mov
call
data16
incl
or
add
lods
jne,pn
jmp
sbb
mov
in
jle
xchg
adcl
and
nop
hlt
imul
outsl
cmp
jp
in
adc
adc
lea
imul
aaa
jns
ja
xchg
cmp
mov
mov
sar
jle
jle
loop
int3
ljmp
jmp
dec
insb
in
test
mov
or
jge
cs
mov
sahf
setle
cwtl
adc
das
pop
inc
adc
pop
push
lret
loop
mov
xchg
into
jb
or
and
testl
xchg
inc
sub
mov
sbb
and
shrb
cld
outsl
fwait
sbb
mov
test
lods
add
lds
loop
and
popf
mov
cmp
inc
pop
fucomp
out
pusha
jecxz
push
lock
and
push
jae
xor
arpl
pop
dec
and
lahf
add
add
push
movzbl
lea
jecxz
repnz
xor
imul
cmp
jmp
xchg
inc
cmp
mov
xchg
xchg
sub
ret
pop
enter
push
mov
sarl
mov
lret
add
mov
test
jmp
add
aas
insb
jle
daa
mov
fwait
rcrb
mov
cmpsb
repnz
inc
ss
mov
jns
jp
fsubs
repnz
pop
jle
clc
inc
xor
xor
add
push
mov
add
mov
mov
sub
inc
push
test
dec
loopne
dec
cmc
out
imul
enter
popf
scas
out
mov
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
and
cmpsl
jle
js
js
stos
xchg
jbe
dec
sub
cs
enter
test
mov
inc
and
inc
sbb
dec
test
push
fsubs
imul
ficoml
neg
cmc
popf
jnp
lea
inc
imul
push
test
ror
add
shll
fstpt
std
lret
lods
jns
push
cli
popf
not
shl
in
cltd
mov
push
popf
cmpsb
nop
push
dec
adcl
ljmp
and
and
icebp
jmp
rol
imul
and
aaa
mov
pop
loop
pop
lods
cmc
lcall
mov
cmp
das
and
push
and
lret
jge
enter
nop
icebp
sbb
sub
int
adc
mov
out
in
loope
subl
lds
clc
dec
stc
sbbl
jne
mov
mov
fucomi
lods
fs
mov
fisttpll
mov
push
pop
pop
rcrb
adc
mov
and
mov
aam
mov
inc
xorl
jno
dec
jb
or
imull
out
out
fwait
cli
ds
std
mov
jle
or
dec
jge
inc
and
and
sbb
sti
mov
add
aam
pop
adc
movsb
cmp
cmp
cwtl
sub
dec
sahf
or
arpl
cmpsb
cmp
into
pop
fisttpll
jb
ss
inc
out
sbb
cwtl
xchg
popa
pop
mov
leave
mov
inc
inc
inc
add
insb
push
iret
pop
cmp
out
fwait
call
add
push
mov
sbb
sub
jb
leave
pop
push
sbb
cs
jne
outsl
and
rcrl
cmp
or
outsb
and
mov
push
adc
xchg
push
jp
cld
xor
mov
int3
adc
cmp
sysexit
nop
xor
mov
dec
cmp
xor
out
popa
jle
or
push
or
cmp
xor
mov
pushl
shll
sbb
add
insb
jp
andb
setnp
cmp
adc
lock
add
xchg
pop
xchg
mov
xlat
sbb
dec
mov
rorb
cmp
add
cmp
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
pop
movsb
mov
push
jle
js
mov
adc
pop
out
xor
out
sub
xorb
sub
jns
stc
push
push
jbe
outsb
push
sti
push
mov
movsb
sahf
stos
in
xor
xchg
je
iret
mov
inc
adc
sub
jbe
dec
rcrb
pop
adc
aaa
mov
add
es
dec
sbb
mov
jne
xor
and
cli
fadd
add
mov
mov
mov
cli
sub
cmp
xchg
or
xchg
inc
push
xor
in
add
push
push
lret
in
pop
addr16
mov
or
cwtl
pop
andl
jmp
mov
test
hlt
nop
push
push
xor
jno
iret
and
mov
test
inc
and
push
shr
xchg
jbe
pop
xchg
adc
faddp
pop
pop
clc
lret
call
and
imul
push
xchg
sti
pop
sub
sub
jl
enter
push
sbb
add
and
and
icebp
and
xchg
movsl
stos
sahf
popf
fcomps
dec
aad
adc
cmp
ja
inc
int3
hlt
mov
shl
xor
clc
leave
fwait
xchg
das
ljmp
call
pop
rdmsr
std
mov
ljmp
xor
xor
mov
xchg
ljmp
cmpsl
jno
dec
les
cmc
inc
xor
cli
cwtl
lods
add
je
pushl
fstpt
push
fwait
repz
jb
dec
or
or
sbb
movsl
outsl
lds
mov
rolb
call
out
cmp
hlt
sbb
aaa
xor
pop
jge
sub
outsb
std
fisubl
rcl
dec
mov
lods
cld
js
sti
cmp
cltd
test
xor
mov
aaa
movb
xor
jno
cmp
dec
push
jge
js
inc
or
cs
sahf
mov
inc
lret
cmp
pop
cmpsb
dec
sbb
lods
sbb
pop
xchg
add
xchg
dec
sub
inc
or
xchg
sub
pop
ret
inc
push
ror
repz
and
negb
jle
mov
cs
in
cmp
xor
test
cld
cmpsl
or
lods
mov
cmp
mov
cld
add
xchg
ret
push
mov
roll
int
pop
sub
dec
inc
or
mov
dec
cwtl
addl
lahf
loope
jo
inc
ret
push
adc
inc
hlt
ficomps
push
sub
jns
mov
dec
sahf
loop
fistpll
arpl
xor
leave
push
mov
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
enter
idivl
push
jle
js
cmc
and
stos
std
andb
jne
test
test
sarb
fistpl
adc
xchg
lods
or
ja
int3
pushl
sub
pop
mov
or
inc
push
pop
sbb
popa
loope
lcall
adc
dec
push
into
ficoml
hlt
dec
daa
mov
push
push
mov
or
loop
jp
and
insl
pushf
out
rcr
test
mov
cwtl
sbb
insl
mov
and
adc
stos
in
pop
lret
push
fiadds
ficoml
rorl
add
not
cltd
cmp
xlat
cld
dec
imul
push
lock
shl
addr16
fiaddl
cmp
pop
mov
out
mov
shll
cmp
cmc
push
mov
adc
adc
movsb
xchg
je
pop
mov
fildl
mov
out
fsubs
stc
loopne
mov
push
xor
arpl
dec
fs
movsl
gs
xor
dec
jno
jno
dec
stos
popa
xchg
cmc
pop
scas
and
mov
int
dec
stos
loopne
add
jne
push
sub
xchg
mov
mov
mov
pop
xchg
xchg
push
mov
push
cltd
add
scas
shll
push
stos
mov
arpl
std
scas
insl
cmp
leave
das
inc
loope
orb
mov
rorl
out
push
jnp
mov
jns
pop
mov
mov
iret
cwtl
sarl
sbb
stc
lea
xchg
out
sahf
dec
aaa
in
push
imul
xchg
jo
pusha
fs
jbe
pop
cmc
inc
xor
bound
mov
push
push
out
sbb
loopne
clc
outsb
fcompl
mov
and
push
fsubr
and
push
and
lahf
loop
jl
cmp
jbe
nop
cs
movsb
mov
cli
in
dec
cmpsb
aad
clc
inc
sub
dec
xchg
mov
xor
and
xchg
and
aad
push
sub
inc
les
jge
mov
or
cld
jb
xor
xor
mov
mov
ret
lds
push
mov
sub
cmp
pop
mov
xor
xor
ljmp
popa
mov
mov
mov
popa
inc
and
inc
lret
mov
push
mov
sbb
xchg
ficoml
mov
pop
mov
out
mulb
adc
mov
or
xor
fists
xor
push
rorb
ret
push
adc
jecxz
xchg
out
xchg
sub
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
call
ss
or
ja
mov
xchg
mov
cmp
lds
repz
jecxz
cli
pop
loopne
je
mov
clc
fadds
jg
dec
leave
loop
in
add
pop
push
xchg
inc
dec
shl
adc
xor
mov
jl
mov
sbb
pop
jnp
into
jne
dec
cmp
sbb
add
jnp
test
mov
std
mov
xor
lds
push
xchg
jle
adc
inc
sbb
into
out
pop
push
and
xchg
jmp
les
popl
into
testl
dec
cmp
mov
push
mov
adc
fisttps
aas
loop
jo
add
jmp
addb
sub
dec
xchg
or
scas
mov
mov
fsub
dec
fwait
testl
jecxz
lret
fwait
outsl
cltd
cmpsl
jge
mov
xor
shrb
fidivrs
xchg
pop
dec
lds
mov
dec
int3
lods
loopne
in
aam
lret
jg
lret
into
xor
test
in
das
fmull
jae
add
pusha
push
dec
mov
fistl
daa
mov
mov
or
and
pop
xchg
aaa
loopne
dec
inc
mov
test
sub
dec
filds
mov
outsb
push
fucomp
je
or
insl
jg
pop
push
pushf
mov
lahf
out
pop
in
sbb
mov
jle
or
fwait
imul
xor
insl
pop
xor
jnp
inc
incb
inc
or
adc
pop
adc
xor
add
sub
scas
icebp
push
mov
cmp
xchg
add
hlt
cmpl
mov
sbbb
xlat
dec
div
test
inc
mov
pop
js
jae
xchg
jae
jae
clc
es
call
sti
lds
sahf
ficompl
mov
enter
xor
cwtl
leave
int
test
ss
or
je
xorl
popa
add
sbb
je
inc
sahf
dec
mov
pop
jne
push
pop
test
or
jp
xchg
mov
add
adc
jmp
lods
sbb
jecxz
xchg
mov
mov
repz
std
es
dec
pushf
push
mov
xor
mov
push
fwait
mov
rolb
imul
adc
imul
sbb
xlat
xchg
sbb
sarl
dec
hlt
cwtl
popa
mov
cmp
or
sub
loopne
dec
jg
xchg
jae
rcr
dec
xor
jae
dec
or
add
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
in
loop
js
je
js
pop
push
testl
push
mov
icebp
mov
stos
insl
push
mov
jb
adc
pop
pop
dec
mov
leave
mov
jne
sub
mov
push
push
xchg
xchg
xchg
sub
pop
push
mov
add
fsubrl
dec
sub
xlat
xchg
sub
jmp
dec
add
or
or
xchg
add
fsubrl
xchg
int3
lcall
stc
mov
dec
aam
add
gs
popa
leave
gs
mov
rcrb
pop
inc
test
stos
fisubl
popf
std
lret
pusha
pop
iret
ror
aas
pop
lods
sub
fistpl
and
cmp
adcb
fstl
int
cli
xlat
sub
sub
add
mov
mov
mul
jmp
shll
adc
mov
xchg
mov
call
dec
mov
push
jge
out
es
and
push
adcl
push
pop
ret
sbb
cltd
and
nop
inc
rcrl
push
mov
jl
mov
popa
fimull
fucomp
xor
push
cmc
push
xor
das
dec
test
fnstsw
mov
lahf
daa
enter
sbb
fs
dec
push
ss
or
push
mov
lahf
in
andl
inc
xor
push
mov
clc
repnz
adc
std
push
inc
jo
test
outsl
pop
leave
shl
hlt
mov
out
movsl
call
mov
movsb
dec
aad
movsb
push
push
data16
sahf
jns
cmp
cld
lcall
mov
popa
leave
inc
mov
mov
sti
push
xchg
jle
pop
cs
test
sbb
test
push
lock
pop
mov
rcrb
dec
push
mov
repnz
pop
mov
fwait
add
ljmp
daa
loope
scas
adc
call
leave
sbb
adc
lock
test
jl
aam
mov
sarl
xor
ret
imul
loopne
sbb
loop
dec
test
arpl
mov
lahf
int3
pusha
push
sub
fwait
push
ljmp
mov
mov
sub
dec
xchg
in
dec
sbb
pop
jae
xor
jecxz
jbe
cmpsb
pop
and
fistpl
pusha
adc
sahf
iret
out
fs
sub
fdivrs
icebp
cmp
ss
in
in
jae
mov
popa
rclb
xchg
in
or
push
fisubs
add
stc
ljmp
inc
faddl
add
inc
fadds
add
xor
add
mov
inc
loopne
and
add
add
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
jg
sbb
js
je
js
mov
mov
cli
jge
and
test
dec
add
add
int
aas
xorb
inc
insb
cltd
jl
or
adc
cli
and
mov
scas
mov
call
mov
xchg
or
mov
ret
pop
lahf
and
sub
xor
lret
scas
popf
mov
cmp
push
sbbb
cmpsl
pop
push
pushf
xchg
cmp
icebp
jb
jns
test
mov
or
imul
mov
and
jge
dec
dec
lret
cltd
or
cmpsb
daa
stc
cmpb
mov
nop
cmp
pusha
mov
fisubl
std
vmwrite
sub
test
popa
dec
rcrb
fsubrs
hlt
fdivr
mov
dec
sbb
cmp
repnz
test
rorb
adc
pop
adc
pop
aam
mov
xor
add
outsl
push
test
iret
fcoml
jae
adc
push
xchg
mov
sti
push
sbbl
fwait
adc
mov
mov
roll
mov
push
rclb
leave
testl
outsl
test
ret
mov
insl
pushf
or
sub
mov
in
popa
sub
adc
pop
adc
movsl
push
sbb
inc
std
mov
std
enter
or
mov
cmp
add
adc
add
cmp
outsb
rcl
lret
fisubrl
idivl
into
mov
cmpsb
das
cmp
xchg
cmp
idiv
sbb
repnz
icebp
jbe
inc
sbb
pop
and
out
imul
cltd
inc
ds
lods
fcomp
xchg
repnz
aam
ret
and
lods
testb
dec
mov
pop
dec
inc
add
lcall
cwtl
shll
xchg
jno
push
lock
fadd
sti
sbb
out
ret
or
in
xchg
pop
jb
and
mov
hlt
dec
mov
push
imul
push
sbb
jp
jbe
mov
dec
mov
inc
stos
sub
jp
es
add
mov
jo
sbb
mov
jbe
xor
push
leave
cwtl
pop
and
mov
test
sub
dec
outsb
sarb
sahf
movb
pop
or
js
mov
leave
jo
sub
xor
mov
daa
mov
and
dec
sahf
lcall
sbb
xor
inc
sub
test
lods
rolb
outsb
push
decb
mov
lcall
loope
inc
repz
pusha
in
movsb
pop
xor
adc
and
xor
pusha
xor
xchg
xchg
stos
mov
mov
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
mov
fiaddl
js
push
movsb
adc
jne
cmpsb
inc
push
les
mov
imul
jg
aas
gs
cmp
xor
mov
or
lea
outsb
adc
xchg
aad
or
inc
int
cmp
sarb
add
ljmp
and
jg
shll
sbb
jns
xchg
in
adc
xchg
inc
jnp
incb
mov
dec
ja
ds
inc
mov
sbb
loopne
cmp
pop
imul
shlb
popf
outsl
or
push
sub
sahf
pop
mov
pop
fucomp
mov
pushf
arpl
xor
jecxz
lea
sub
cmp
dec
xlat
xorl
loop
xor
test
insl
dec
fwait
rcrb
dec
jbe
mov
mov
rclb
sbb
mov
shll
pop
push
add
test
lods
loopne
je
stos
imul
fldt
lock
cmp
push
in
adc
scas
sub
ds
push
test
roll
dec
loopne,pn
gs
cmp
mov
lret
test
and
dec
repz
or
jo
ja
cmpsl
adc
adc
filds
push
push
jnp
mov
pop
push
mov
into
into
pop
outsb
push
jbe
int3
cmpsb
sbb
sbb
jge
fwait
push
ret
fisttps
das
jne
or
xchg
movsl
and
pop
loope
mov
mov
push
dec
xchg
je
mov
dec
and
xchg
dec
cmp
es
repnz
mov
xchg
gs
call
sbb
lea
and
lea
jmp
sub
mov
addr16
outsb
scas
lds
lret
lcall
cmp
jae
add
das
add
xorl
jmp
leave
sub
xchg
push
inc
add
mov
aas
jns
imul
iret
loopne
or
add
int3
push
test
add
xchg
pop
lahf
push
test
cmc
adcl
aas
and
in
je
cmp
sarb
push
mov
mov
dec
pop
mov
rorb
sbb
push
pop
lds
iret
sub
fadd
les
pop
xlat
faddl
push
add
xchg
rcrl
out
fwait
out
mov
pusha
sbb
xor
loopne
inc
mov
sbb
out
adc
dec
mov
xor
jb
andnps
aad
or
popa
mov
clc
cmp
mov
in
shlb
push
mov
mov
and
repnz
inc
mov
cli
or
inc
xor
xchg
push
fwait
xchg
cld
jge
in
loope
adc
push
and
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
hlt
sbb
js
jle
js
add
lret
push
pop
roll
jns
push
imul
dec
add
imul
xchg
cmpsb
mov
adc
pusha
sub
out
push
mull
sbb
add
lods
fstl
sbb
dec
inc
cmp
cld
out
dec
out
dec
mov
inc
cli
add
mov
insl
dec
xchg
mov
fwait
sub
pop
idivb
sub
adc
les
push
and
sub
cli
les
inc
sbb
adc
aam
fcomps
aad
cmpsb
rcr
mov
outsl
insb
sbb
je
dec
cmpsb
imul
popf
test
sarl
test
fs
ror
es
pop
pop
jge
hlt
pop
je
ret
adc
adc
subl
dec
sub
xorb
loopne
inc
ret
jne
iret
jmp
in
ss
loop
push
int3
jecxz
sub
add
loopne
movsb
mov
mov
mov
fwait
into
xor
movsl
inc
jae
cltd
lcall
push
push
out
cmp
lcall
in
mov
xchg
inc
hlt
test
inc
mov
cmp
sbb
andb
cmpsb
push
pop
testb
test
pop
lea
jge
aam
aad
sub
jg
lods
or
shrb
mov
or
or
rcrl
push
fstps
hlt
and
cmp
fwait
adcb
mov
push
arpl
pop
adc
sysret
mov
jne
push
jl
ss
inc
jl
push
je
xlat
int3
xchg
sub
hlt
inc
loopne
mov
mov
mov
inc
inc
insl
add
jno
gs
test
mov
enter
sub
bound
out
pop
sbb
push
sub
mov
negb
jnp
test
add
ja
cmp
mov
mov
enter
in
push
dec
jg
cld
mov
aas
xchg
out
movsb
dec
rcll
scas
imul
and
jmp
call
lret
fwait
mov
sub
mov
adc
inc
aas
lcall
sbb
fimull
adc
popf
jo
sarl
ja
xchg
cmp
jnp
rclb
movsl
pop
sub
dec
repnz
mov
mov
xchg
dec
test
push
std
ret
es
pop
ficomps
xchg
lods
xchg
dec
mov
jge
mov
cmc
mov
outsb
add
sbbl
mul
lret
xchg
dec
mov
inc
iret
pop
xchg
lods
jmp
movsb
sti
pusha
stc
loope
inc
enter
test
fucomip
int3
inc
or
xchg
cmp
enter
mov
jp
call
in
test
mov
jmp
sarl
fcmovne
mov
fsubr
dec
cmp
js
jle
js
push
push
insb
loopne
cmp
jo
push
and
ljmp
jecxz
xor
lahf
xchg
nop
popa
cmp
pop
cmc
mov
iret
cmp
push
cmp
dec
mov
loop
or
xor
nop
cmp
dec
addr16
push
int
mov
cmp
in
arpl
mov
out
pop
sbb
mov
xorl
pushf
bound
cwtl
mov
ja
enter
bound
inc
adc
pop
repnz
cwtl
addl
jnp
stc
pop
les
xchg
roll
out
test
repz
mov
push
insb
add
pop
jl
sub
je
out
fmuls
jb
inc
inc
cmpsb
push
std
testl
xlat
ret
inc
xchg
adc
gs
dec
insl
aaa
mov
inc
push
rorl
je
cmc
cmpsb
lods
and
js
loop
sub
outsl
outsl
mov
mov
ret
cmpsb
mov
xor
mov
aaa
mov
and
or
adc
push
pop
out
mov
and
xor
lret
and
xor
cld
ret
mov
xchg
sbb
stos
inc
cmp
xchg
or
xchg
repnz
rorb
shr
pop
nop
rolb
lcall
cli
ds
push
jb
dec
sub
repz
and
mov
clc
xchg
div
xchg
pop
in
sahf
xor
outsb
dec
cwtl
or
cmp
dec
les
cmp
mov
hlt
aaa
movsb
push
lahf
nop
das
fsubl
pop
mov
adc
es
mov
aas
jg
icebp
loopne
fidivs
or
or
xor
xor
and
int3
and
popa
ja
dec
stos
orb
arpl
pusha
mov
stos
cmp
mov
cwtl
lahf
test
lods
cmp
jp
inc
push
add
lods
stos
pusha
pop
add
daa
or
testb
cmpsl
pushf
scas
lea
in
dec
dec
shrb
nop
and
xchg
aas
xchg
fmull
add
or
push
xchg
lods
adc
jae
jb
loop
cwtl
roll
enter
jp
push
sub
jle
add
mov
pop
ss
and
lods
xor
push
jae
mov
insl
and
adc
cmp
out
icebp
sub
mov
test
test
popf
jnp,pn
jo
std
mov
cli
or
or
pusha
outsb
das
mov
xor
adc
aaa
jb
dec
add
mov
lret
es
insl
or
jmp
rol
leave
fcmove
rcl
pop
mov
popa
xchg
into
mov
je
js
cmc
subb
lods
mov
and
dec
insl
gs
push
fidivrs
jo
inc
mov
sbb
sub
mov
jle
sbb
sbb
dec
push
or
outsb
push
mov
jno
xchg
add
andl
sub
pushf
dec
stos
jle
fistl
cmp
xchg
cmp
stc
push
sbb
jecxz
lret
mov
push
pop
jo
stos
orb
lock
dec
test
sub
and
stos
sbb
mov
and
in
push
or
pop
ret
jg
lahf
adc
cmp
ror
jo
lds
cmp
movsb
xlat
lock
push
mov
outsl
rolb
jae
adc
cwtl
scas
adc
scas
aas
mov
sbb
jae
insb
rorl
fistl
out
pop
inc
scas
jmp
sbb
mov
sub
or
mov
and
loopne
lret
test
and
dec
mov
vpavgb
mov
outsb
xchg
sub
je
push
popl
test
mov
mov
outsl
mov
imul
test
ficoms
sti
inc
adc
popf
sbb
inc
push
xchg
adc
add
fmul
sbb
fwait
fs
orl
fstps
jne
ljmp
cvtpi2ps
mov
testb
es
lret
stc
push
imul
sub
bound
test
mov
lods
push
movsl
mov
mov
jl
sbb
cmp
and
mov
ljmp
ds
pushf
out
sti
sub
pop
inc
jne
push
push
cmp
mov
pop
imul
xchg
test
cmpsb
dec
jge
add
jecxz
negb
int3
mov
add
paddd
inc
pop
cmpsl
or
inc
cltd
inc
jg
dec
sbb
ds
sti
ss
cmp
push
pop
repz
test
push
es
enter
xor
dec
push
aas
rol
cld
sbb
mov
xchg
sarl
adc
mov
imul
cmpsb
orl
test
xchg
cmp
lock
xchg
add
fdivrl
imul
or
shr
pusha
leave
int
cmpsl
enter
cmp
sahf
or
ja
push
notl
fnstcw
ljmp
or
mov
mov
das
aas
les
fwait
xchg
jecxz
hlt
xor
ret
inc
hlt
cmp
mov
cmpsb
cmp
or
cmpsb
xor
and
fsubs
ss
cmp
rcrl
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
and
js
je
js
sahf
aaa
pop
jno
jb
xlat
xorb
jmp
inc
dec
mov
mov
jns
xchg
dec
sub
in
out
xchg
inc
stc
pop
dec
push
nop
dec
mov
imul
aas
outsb
rcll
inc
int3
and
iret
mov
sbb
dec
fimuls
shr
stc
out
clc
pop
lock
sub
pusha
mov
aaa
dec
int
xchg
fcmovnb
sbb
mov
xchg
mov
ljmp
pop
push
fwait
leave
jp
xchg
sbb
mov
mov
mov
xor
xchg
cld
rcl
adc
aaa
cwtl
insb
fwait
in
or
jmp
and
jge
mov
xor
daa
pop
push
sub
push
fiadds
das
mov
scas
or
fsubs
cmp
push
sub
xchg
mov
mov
inc
cmp
adc
pop
mov
mov
jmp
ret
ffree
rclb
dec
mov
hlt
mov
daa
push
mov
imul
icebp
stos
ja
sub
sbb
addr16
mov
ret
nop
xor
dec
fidivs
mov
enter
fsts
frstor
iret
adc
addr16
sarb
das
add
cmp
xchg
mov
push
ret
dec
push
inc
lock
xchg
mov
js
jge
inc
shll
push
or
mov
repz
and
sbb
popf
sub
jnp
cmpsb
jne
subb
loopne,pn
sbb
ss
pop
mov
dec
jle
fdivrl
adc
dec
mov
popf
adc
mov
mov
mov
xlat
inc
push
cltd
out
jnp
sub
sub
add
add
push
inc
ds
sti
jnp
movsl
les
and
push
std
fidivrs
rep
jb
push
dec
sub
sub
clc
ja
mov
mov
and
out
test
test
call
hlt
xchg
pextrw
mov
sub
movsl
xor
xchg
mov
aad
scas
jp
hlt
pop
sub
aam
pop
repz
mulb
mov
jle
push
sbbl
xchg
mov
xor
test
jb
and
push
mov
sbb
xor
dec
push
fs
sbb
jnp
push
sahf
inc
insb
pop
int3
pop
dec
pop
inc
xor
xchg
pavgw
shlb
arpl
dec
push
stos
ret
sti
adc
mov
movsb
pop
xchg
and
jns
fdivl
call
xlat
jne
pusha
cmc
insl
xchg
je
sarl
ds
mov
cwtl
cmp
jno
mov
xchg
xchg
mov
and
fsubrs
addr16
xchg
je
mov
andl
jmp
jmp
into
aas
ds
rcl
add
stos
shll
cwtl
push
mov
je
js
stos
push
insb
pop
mov
js
adc
jle
cmc
aam
je
inc
and
popf
cmp
mov
fisubrl
movsb
add
push
dec
adc
ljmp
pushl
jge
outsb
in
xor
xlat
jmp
and
repz
pop
bound
ret
rorl
add
cmpb
fsubs
dec
cwtl
rcrb
sub
cmc
outsb
xorl
inc
mov
orps
sub
adc
movsb
ret
cmpsb
sti
movsl
adc
loope
jmp
inc
dec
xor
jmp
cmc
and
mov
sbb
inc
push
xchg
mov
inc
shrl
xchg
clc
clc
ret
jge
fadds
adcl
inc
add
pop
dec
inc
cmp
test
negl
or
push
pop
sbbl
test
sbb
cld
fdivrs
pop
fistpl
push
aaa
enter
mov
das
pop
inc
rolb
add
or
xchg
add
xlat
dec
adc
hlt
pop
std
xor
mov
sbb
sarb
adc
ljmp
das
mov
mov
pop
dec
call
std
fsubrs
nop
push
mulb
pusha
jmp
inc
cmp
adcl
push
jp
cli
pop
mov
cmp
or
adc
nop
cmp
outsb
lahf
repnz
lret
stos
and
mov
sub
push
repnz
inc
pop
in
call
and
xor
icebp
dec
iret
ja
outsl
out
sub
cmc
mulb
mov
mov
je
aaa
jmp
pop
pop
sbb
push
pop
xlat
mov
xchg
dec
aaa
xchg
inc
jle
cmpsl
jnp
stos
and
adc
xchg
and
sbb
clc
movsl
push
xchg
xor
cmp
xlat
leave
pop
sub
enter
hlt
add
out
xchg
stos
pop
mov
ds
dec
repz
scas
jg
mov
test
inc
shr
jno
and
mov
xchg
cld
data16
stc
xchg
sub
xchg
xchg
in
cmpsb
dec
stc
into
sub
pusha
push
xchg
mulb
dec
gs
loop
cmp
into
mov
divb
mov
xchg
shrl
cmp
push
movsl
icebp
stos
mov
std
sub
push
dec
mov
sbbb
jnp
sub
jle
xchg
fistpll
loop
adcl
cld
sbb
pop
test
xchg
mov
jno,pn
sbb
push
jae
fisttps
insw
outsb
dec
push
out
movsl
lea
push
scas
arpl
cmp
pop
push
xchg
xor
push
dec
cmp
inc
hlt
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
cmp
adc
je
js
test
pop
adc
or
xchg
cmp
xor
inc
pop
jbe
aam
xchg
mov
jne
mov
sub
pop
sbb
lods
jmp
nop
daa
sub
test
add
mov
lret
fadd
popf
xlat
mov
andl
push
pop
rclb
repnz
lock
push
push
iret
lcall
push
out
in
insl
sub
cmp
mov
and
stos
mov
das
mov
ss
jae
jno
xchg
pop
inc
cmpsl
or
inc
out
std
cmpl
shll
cmc
push
mov
xchg
lahf
and
and
pop
push
sub
mov
rol
mov
shrl
aad
adc
push
sub
xor
adcl
jp
loopne
mov
jno
jmp
push
daa
dec
push
cmc
jecxz
and
sti
test
shl
inc
stos
cmp
movsl
rolb
addr16
adc
iret
outsl
xor
fists
lret
inc
je
shll
inc
inc
push
repnz
iret
stc
rorl
sbb
js
mov
xchg
push
fiaddl
push
cli
xchg
test
test
lcall
ret
xor
std
pushf
and
lret
shl
mov
les
popa
inc
jbe
xor
mov
aad
fdiv
add
inc
rcr
xor
jp
outsb
fstpl
scas
sar
and
sti
xor
mov
lea
mov
sbb
cmovs
add
xchg
out
push
gs
mov
in
arpl
in
repnz
mov
mulb
sahf
mov
xchg
test
pop
fistpll
lcall
dec
sahf
std
fsubr
hlt
cmpsb
mov
test
aam
and
mov
jnp
enter
dec
mov
pop
fiadds
mov
int
jmp
or
mov
fnstenv
fscale
add
sbb
mov
push
pop
add
sbb
test
leave
in
push
int3
gs
pop
and
dec
sarl
imul
sarb
xchg
dec
mov
ret
sbb
es
test
scas
lcall
sbb
aas
ss
psubsb
push
jge
rcll
push
cld
shlb
mov
xchg
nop
xchg
jp
cli
leave
pop
xchg
sbb
stc
add
dec
pushf
pop
insl
jns
or
ljmp
xchg
xor
xor
addl
push
xchg
out
jle
inc
pop
sbb
scas
ret
dec
scas
in
xchg
jmp
iret
fstl
xchg
into
hlt
sbb
push
mov
jl
test
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
popa
inc
iret
ds
js
je
js
jo
icebp
stos
leave
push
jmp
aad
add
lds
inc
imul
push
sbbl
ficoms
lods
mov
push
clc
lea
and
in
xor
rcrb
mov
jecxz
mov
and
lret
popf
enter
sbb
mov
push
cltd
sub
jb
cmpsl
mov
test
xchg
or
sahf
popa
fidivrl
in
pop
jns
jle
push
cmp
les
sbb
add
leave
roll
insl
xchg
push
test
inc
adc
cmp
mov
mov
mov
push
jle
mov
fistl
pusha
les
int3
jl
pop
outsl
loop
insl
jl
rclb
std
push
mov
sbb
mov
inc
test
fsubrp
fxch
mov
jae
lock
rclb
mov
std
insl
and
adc
inc
aam
pop
inc
cmpl
int3
jb
out
gs
push
pop
cmpsl
addr16
stc
mov
inc
mov
sub
xor
test
loope
test
xchg
xor
mov
add
push
mov
push
call
movsl
fstpt
std
jl
mov
or
mov
js
lahf
jecxz
pop
cld
cmp
dec
ficompl
jnp
std
cmpsb
jp
cmp
jne
es
bound
sti
shr
inc
xchg
dec
cld
jg
add
cmc
push
xlat
mov
out
push
outsl
cltd
shlb
xor
mov
xor
jp
roll
popf
lock
stos
rcl
lock
out
inc
cmp
and
in
jg
xlat
loopne
cwtl
aad
out
dec
inc
movsb
mov
jno
mov
or
movsb
dec
pop
leave
add
dec
out
mov
ds
in
xor
sub
scas
inc
dec
push
bswap
adc
sahf
popf
add
and
je
sbb
mov
into
jns
push
aad
imul
pop
cmp
insl
std
ret
sti
mov
inc
jns
push
cmp
test
mov
xor
xlat
mov
inc
dec
std
dec
sbb
xchg
jne
jo
stos
cmpsl
leave
test
xchg
pop
jl
cltd
mov
sti
push
add
or
xchg
fists
adc
and
aam
adc
cmp
pop
sbb
cmp
xor
sbb
mov
jp
icebp
mov
dec
pop
adc
dec
imul
call
dec
mov
pusha
arpl
sub
pop
hlt
cmpsb
lods
sbb
out
dec
fisttpl
mov
mov
xor
lret
add
mov
outsb
add
dec
pusha
and
shll
int
and
xchg
add
in
adc
sbb
pushf
xor
test
jge
and
nop
cmp
adc
movsl
pop
outsl
bound
mov
mov
mov
jmp
xlat
cmp
ds
js
adc
ja
cmpl
jle
js
loopne
mov
sub
cmovno
out
loopne
lret
test
mov
mov
pushf
adc
aas
repnz
xor
lcall
or
inc
xchg
mov
and
adc
jns
int
test
inc
aad
cmp
sub
add
leave
push
pop
mov
adc
pop
shll
mov
mov
pushf
or
outsb
cmpsl
cmp
adc
fdivrl
sahf
mov
sti
adc
ret
pop
inc
push
rorb
sbb
jp
dec
mov
enter
cmpsl
fwait
cmpb
pop
fiadds
jmp
cmp
ds
fisttps
popf
lcall
xchg
rorl
push
ret
mov
push
inc
jg
clc
mov
mov
xchg
sub
lcall
xorl
mov
nop
push
lods
mov
out
jne
in
push
or
pop
loopne
in
sub
outsb
push
jae
xchg
mov
sub
loop
in
repz
aaa
hlt
inc
add
cmpsb
adc
sahf
bnd
das
sub
or
fadd
add
clc
bound
add
add
dec
dec
cmpsb
dec
xor
push
shl
sbb
mov
cmp
push
mov
sub
mov
pop
pop
inc
pop
bound
jg
mov
push
adc
pop
cmp
les
xchg
or
add
mov
aam
cld
insb
ss
lahf
pop
mov
jbe
loope
nop
add
push
rorb
pushf
or
test
fcompl
daa
cmp
lea
and
or
out
inc
loopne
or
mov
jns
loope
mov
mov
js
xor
mov
gs
dec
das
mov
aad
faddl
inc
fmuls
int
divl
insb
test
rorb
dec
jge
mov
add
fisttpll
dec
negl
mov
jno
fidivl
xor
mov
mov
fnsave
mov
fmuls
jno
add
jle
and
pop
or
hlt
push
mov
rcrl
adc
push
inc
outsl
loope
mov
xchg
lds
aaa
push
cmp
xchg
dec
mov
dec
and
jae
pusha
imull
or
lock
stos
xchg
repz
sbb
gs
ret
adc
fcomps
sub
xchg
add
mov
aad
popa
adc
insl
cli
or
fwait
inc
add
ja
movsb
or
in
inc
jns
jmp
mov
insl
jo
sub
shll
je
imul
pop
pop
mov
out
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
out
cmp
cwtl
js
je
js
mov
cwtl
nop
popa
xor
pop
cmpl
shrb
adc
icebp
dec
pushf
out
sbbb
sti
mov
pop
lock
jbe
icebp
out
dec
sub
in
shlb
sub
call
stos
and
mov
mov
shlb
xchg
popf
mov
gs
fs
div
clc
push
mov
jge
dec
repz
movsb
jne
jne
shlb
dec
jb
jp
daa
mul
push
cmp
lds
and
or
fists
out
jns,pt
int
adc
lods
movl
mov
push
mov
xor
insb
insl
xor
inc
lea
xor
cmpsl
jp
pop
push
jecxz
mov
mov
push
hlt
inc
pop
mov
xor
lret
push
cli
lds
mov
inc
push
sbb
mov
cmp
mov
fnstsw
jle
cmp
insl
mov
aam
xchg
ds
adc
mov
or
stos
outsb
out
cmp
inc
insb
add
jge
aaa
add
cmp
adc
in
jg
pop
push
xor
pop
pop
add
ja
fstps
or
mov
nop
adc
mov
ficomps
inc
cmp
in
or
cmp
xor
insl
mov
std
call
lods
mov
cli
loopne
bound
outsb
lods
fistpll
jbe
fistpll
lahf
cltd
mov
sahf
cmc
arpl
xchg
sbbl
cwtl
es
test
jno
pop
call
scas
xchg
push
add
or
addr16
mov
xchg
push
movsb
sub
lods
sub
sar
std
xlat
iret
aad
sbb
repnz
jmp
inc
out
lods
mov
jecxz
lods
sahf
mov
and
sub
in
xlat
xorb
sti
ljmp
jb
loopne
push
jno
loope
sub
jne
xor
jnp
or
mov
sti
into
ret
xor
and
xchg
lds
xor
sbbl
dec
dec
aam
rcl
cmp
or
loopnew
inc
jg
insl
fiadds
test
dec
mov
std
fs
ja
push
mov
mov
aaa
push
sbb
cwtl
fidivrl
pushf
mov
negb
scas
es
repnz
sbb
mov
insb
gs
repz
pop
or
mov
xchg
sbb
mov
push
inc
xchg
dec
lcall
clc
je
in
inc
fnsave
in
ja
xor
test
iret
gs
outsb
add
inc
cmp
pop
add
lods
aaa
nop
push
int
js
push
rorb
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
arpl
xor
js
pusha
mov
mov
sub
in
xor
mov
orl
mov
pushf
mov
xchg
movsl
adc
push
push
into
sti
cld
inc
ss
test
dec
xor
jb
mov
es
test
or
jno
stc
rorb
jle
daa
mov
mov
mov
cs
fcompl
icebp
out
mov
push
push
push
sub
sub
push
lock
fdivs
xchg
addb
inc
or
fwait
das
out
xor
sub
ds
sbb
add
stos
cmp
test
xchg
xlat
push
jg
stos
cmp
sub
cmp
sar
daa
call
push
sahf
popf
cmpsb
lahf
or
push
and
test
adc
out
push
dec
and
push
adc
loope
loope
xchg
mov
xchg
ret
inc
jl
adcl
ss
sbb
adc
adc
jno
addr16
cmp
dec
add
adcl
sbb
xor
or
daa
add
add
mov
mov
adc
out
pop
sbb
and
jl
fsubl
push
movsb
add
mov
mov
cmp
inc
lods
xlat
add
sahf
xchg
mov
fadds
or
xor
or
pop
leave
mov
push
dec
lods
insb
cmpsb
aas
pop
jg
dec
sbb
ret
mov
push
mov
pop
sub
push
jo
dec
jp
lea
push
aaa
mov
mov
or
shrb
int3
cmpsl
shr
push
inc
cmp
test
int3
iret
xchg
inc
test
insb
nop
pop
xlat
and
sub
sbb
fcmovbe
lcall
aam
push
mov
hlt
repz
sbb
clc
or
jbe
mov
dec
hlt
mov
pop
ret
dec
mov
mov
lcall
outsl
sarb
dec
int
dec
or
loop
push
ficoml
lret
out
stos
pop
into
aas
sbb
mov
mov
sub
cwtl
jnp
cmp
xor
js
mov
jge
mov
aad
mov
and
or
ljmp
enter
das
xlat
test
pushf
ss
aad
and
scas
mov
mov
cwtl
pop
mov
nop
cs
lds
and
movsb
inc
clc
cltd
xchg
add
and
ret
mov
pop
mov
inc
jg
fstpt
cmpsb
sbb
shll
dec
jle
push
popa
insb
add
inc
inc
adc
add
arpl
or
pop
adc
sub
lds
jo
or
cmpl
scas
shr
sub
push
adc
adc
cmp
adc
add
rol
ror
aad
xchg
mov
aad
shll
js
jle
js
pop
adc
mov
and
inc
sbb
sbb
lret
scas
test
jmp
aaa
dec
jl
lret
sub
dec
lcall
xchg
sub
pop
fnstsw
cwtl
int3
mov
neg
cltd
mov
repnz
loopne
pusha
scas
add
shll
add
scas
dec
and
mov
arpl
xor
into
push
mov
icebp
or
rol
adc
sub
call
lcall
fs
nop
loopne
mov
out
or
bound
hlt
pushf
mov
movb
or
fadd
jns
out
sbb
clc
je
xor
cli
cmp
leave
jae
sbb
test
aam
xchg
adc
inc
push
andb
xor
sar
jg
mov
xor
clc
xchg
cmp
jg
leave
imul
aam
mov
xchg
scas
pop
or
add
daa
push
xchg
fldcw
jno
notl
ds
ljmp
or
cmpsb
cmp
mov
nop
fst
jnp
or
test
mov
cwtl
enter
jmp
jle
inc
cmova
ss
inc
aad
fidivrs
sub
js
les
jno
inc
and
mov
mov
or
jnp
subl
xchg
clc
repz
faddp
ljmp
popa
add
icebp
jp
cmp
cmp
push
cmp
push
fsubp
daa
fidivrl
push
pusha
out
and
pop
out
sbb
adc
push
repz
mov
sahf
call
xor
jle
imul
cmc
pop
add
pop
mov
pop
stc
xchg
mov
push
xchg
imul
xor
dec
shrl
mov
testb
cmp
xchg
gs
loope
pusha
cld
lret
outsb
pop
mov
dec
xchg
mov
jae
cli
inc
in
inc
popa
call
pop
add
std
inc
outsb
inc
adc
mov
shrb
aam
nop
adc
aad
add
repnz
or
lcall
imul
xor
sub
out
xlat
lret
sub
ret
add
jo
cmp
dec
stos
pop
int
inc
repnz
repnz
add
rorb
mov
sbbl
sbb
cltd
xchg
xor
adcb
sbb
clc
xchg
fstps
int
insl
jge
test
push
lea
add
jae
adc
push
pop
inc
cwtl
out
push
ret
push
aad
xchg
inc
mov
sub
xor
xor
test
mov
mov
test
rorb
test
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
es
mov
sub
js
jne
mov
inc
repz
je
cltd
pop
into
js
push
insb
aad
into
cmpsb
ljmp
mov
mov
fnstsw
repz
adc
sti
test
adc
inc
xchg
gs
scas
js
push
sub
cmp
inc
insl
push
mov
lods
cs
repz
in
repnz
or
mov
fnsave
aad
popf
cmp
push
cmp
shl
test
jg
fwait
sbb
mov
iret
sub
loope
mov
xchg
sbb
mov
or
push
push
jp
cmp
xor
test
mov
jp
ffreep
mov
or
scas
fisttpl
std
call
movsb
aam
jg
fstpl
stos
cwtl
push
jge
jno
or
mov
int
cmp
cmp
scas
xchg
or
test
push
insb
inc
orl
or
mov
sarb
mov
sbb
inc
sub
and
xlat
dec
xor
adc
mov
pop
inc
and
out
cmp
push
insl
rclb
inc
sub
sub
cmpsl
push
pop
mov
daa
mov
mov
jge
fidivs
loop
pop
cs
lds
lock
loope
mov
lret
push
sbb
and
pushf
pop
and
je
aad
jecxz
mov
rclb
and
lods
cmp
ds
dec
adc
push
add
cmp
lahf
inc
cwtl
sub
out
divl
iret
and
jb
adc
inc
ret
cmpsb
or
jecxz
jp
adcb
rcrb
sbb
sub
shl
dec
popa
adc
mov
adc
rorl
pop
mov
mov
jmp
ljmp
mov
enter
rorb
add
sbb
xchg
dec
mov
and
add
rorl
int3
xchg
mov
pop
ret
inc
dec
testb
or
loop
mov
mov
jecxz
lock
xchg
and
ret
data16
jns
adc
cmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
mov
mov
js
jle
js
aaa
scas
rclb
or
or
push
inc
mov
daa
lret
dec
xor
sbb
jge
jecxz
aam
stos
pop
push
lret
cmp
fdivr
mov
sub
outsl
dec
fiadds
mov
outsb
into
jmp
inc
jae
in
iret
or
inc
in
out
push
pushf
lods
lcall
lret
or
loope
dec
pop
aas
enter
add
jge
ds
test
das
ret
inc
fisubrs
cs
outsl
js
jmp
pop
cmpsl
adc
hlt
neg
jnp
icebp
adc
mov
push
popf
test
enter
fiaddl
adc
and
call
adc
dec
enter
xlat
jg
add
xor
cli
push
xor
fbld
sar
bound
ja
iret
daa
mov
stc
mov
pop
sbb
push
loop
fistl
sahf
lahf
push
in
imul
xor
or
sbb
orb
loop
push
lret
test
adc
jge
dec
cld
insl
adc
icebp
xchg
out
addr16
pushf
stos
jb
or
xchg
mov
or
ja
cs
push
mov
enter
ljmp
out
sub
ret
insl
push
cmp
test
mov
gs
bound
and
enter
je
test
das
mov
cmp
jne
xchg
dec
fsubl
lahf
jmp
cmpsb
mov
push
mov
pop
mov
orb
dec
pop
add
js
jne
or
imul
int3
xchg
aaa
xchg
cmp
fwait
hlt
and
dec
push
into
mov
sbb
insb
loop
xor
push
xchg
ljmp
xchg
xchg
xlat
lods
dec
and
xlat
dec
cmpb
pop
cs
adc
push
jnp
adc
fdivrp
enter
sub
aas
leave
inc
dec
test
inc
push
sahf
jb
mov
mov
rol
pusha
push
pushf
sub
ret
sub
or
hlt
fnstenv
sti
adc
fimull
int3
adc
or
scas
or
rcr
movl
movl
andl
add
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
xchg
mov
js
jle
js
xchg
mov
dec
push
mov
in
push
pop
int
les
jmp
outsb
loopne
inc
mov
sub
mov
popf
cmpsb
sbb
mov
in
cmp
mov
insb
cmpsb
sbb
push
xor
ds
rclb
or
dec
jns
out
add
and
imul
jg
jge
mov
int3
addr16
pop
pop
mov
inc
inc
testb
and
push
push
sub
sub
test
and
pop
inc
jle
jg
or
mov
push
std
mov
sti
test
leave
pop
push
or
into
xor
and
mov
icebp
or
nop
fisubl
bndstx
fsubr
insl
inc
in
sub
xchg
call
cmpsl
xor
jno
pop
mov
mov
xchg
imul
mov
mov
pushw
lods
jo
test
leave
sub
and
arpl
push
ljmp
dec
fmull
mov
cmp
adc
sub
or
sahf
sub
orb
fs
mov
adc
or
inc
adc
out
mov
out
inc
mov
mov
pop
pusha
jmp
add
push
in
ret
xor
add
push
adc
lods
cs
pop
fwait
or
mov
rcll
pop
push
ja
mov
out
jle
mov
loop
rol
xor
mov
push
repnz
lds
les
jns
cld
cwtd
negb
mov
pop
inc
and
loop
js
repz
adc
or
or
adc
push
push
cmpsb
clc
cmc
sub
jg
cld
xchg
dec
or
in
sbb
hlt
imul
test
imul
pop
sub
sub
push
adc
mov
jle
mov
xchg
lret
addb
xchg
inc
repnz
loope
and
add
jecxz
scas
adc
hlt
dec
pop
pop
mov
out
adc
sbb
push
pop
jmp
lret
sahf
add
cltd
mov
test
cmp
cmp
movl
jne
and
jmp
int
into
aad
lea
jge,pt
test
js
outsb
aam
cmp
popa
or
sub
mov
outsb
adc
daa
sub
loop
arpl
cmpb
xchg
jle
mov
arpl
mov
pop
adc
dec
jne
xchg
or
cmc
or
nop
aad
push
inc
outsb
inc
sbb
movsb
mov
jecxz
pop
jae
jle
cmp
hlt
mov
jno
dec
cs
les
add
xor
mov
cmp
jae
psubsw
insb
adc
add
loop
popa
push
imul
jns
xchg
xchg
mov
in
ret
test
xchg
mov
hlt
or
imul
jns
adc
sbb
xchg
int
xchg
pop
add
jle
ss
repz
cmp
in
ja
sub
sub
repz
or
fs
adc
stos
pusha
adc
and
repnz
in
out
add
adc
out
sbb
test
and
mov
jecxz
iret
mov
ret
arpl
add
cmp
faddp
mov
adc
dec
pshufw
push
movsl
push
adc
mov
es
jmp
xor
cmc
dec
fisubl
mov
cmp
and
test
lcall
js,pt
sub
jns
adc
sub
mov
or
cmp
sbb
xor
add
insl
cmp
enter
push
je
sub
je
arpl
jg
jo
shlb
xor
add
rorb
push
ret
mov
shlb
pushf
or
mov
xor
in
std
xlat
repz
repz
mov
repz
inc
pop
imul
or
and
mov
jbe
and
xchg
mov
mull
add
loope
xchg
int3
rep
dec
cmp
sbb
repz
jno
jbe
inc
rorl
int
stc
mov
incb
mov
cmp
in
stos
and
icebp
push
adc
std
jbe
sbb
cmp
or
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
jns
jbe
push
scas
js
xor
jnp
scas
movsb
fistl
jle
sbb
xor
aam
sub
cmp
fcompl
in
push
mov
cwtl
push
mov
mov
jbe
jge
scas
mov
push
iret
inc
test
outsb
and
push
mov
cmp
dec
lret
scas
aad
dec
rcll
pop
clc
imul
dec
push
shlb
addr16
pinsrw
int3
or
insb
inc
popa
aad
call
out
fldcw
mov
pop
scas
icebp
cli
iret
xchg
sub
test
mov
popa
pop
and
push
outsl
loope
mov
in
insb
aam
xchg
shlb
dec
sbb
adc
sbb
stos
jns
test
mov
icebp
movsl
sub
or
mov
mov
inc
fadds
xchg
push
sbb
cs
add
shll
fs
int3
sti
fcompl
rcll
pop
cmp
in
dec
cmc
inc
mov
je
stc
add
inc
push
jle
enter
lock
int3
out
test
sbb
lret
insb
aam
mov
xchg
mov
and
arpl
call
cli
outsb
cmp
mov
adc
mov
xor
repz
jb
mov
mov
jo
mov
adc
int3
stos
out
repnz
pop
or
dec
outsl
or
mov
push
jo
jp
sbb
and
inc
mov
in
cltd
xlat
subb
and
mov
lods
fiadds
push
cmp
xchg
movsb
dec
or
and
in
stos
xor
push
jmp
xchg
dec
shl
ss
add
jbe
outsb
scas
clc
mull
cmp
xor
dec
lds
adcl
adc
sbb
inc
jbe
mov
push
jbe
mov
stos
add
sub
arpl
in
cmpsb
cltd
out
outsb
dec
dec
das
cmp
cmp
sbb
les
mov
js
dec
imulb
mov
movsb
jg
push
sti
jg
inc
or
add
add
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
cwtl
push
lods
js
xor
fwait
and
dec
adc
int
es
adc
adc
popf
scas
sub
cmp
push
lahf
add
cs
sbb
jb
sbb
inc
mov
ror
jns
mov
pop
mov
ret
ljmp
das
pop
sbb
or
cltd
cld
aas
mov
pop
or
adc
test
aas
lret
outsb
add
out
aam
iret
xchg
sahf
lret
jecxz
hlt
push
repz
and
jnp
xchg
mov
leave
pop
test
mov
daa
orb
int
mov
inc
cmp
out
mov
arpl
inc
cltd
fcompl
popa
pop
lret
popf
inc
adc
adc
nop
inc
mov
push
enter
scas
or
int3
data16
inc
mov
test
jbe
ja
adc
add
inc
push
sub
adc
sahf
cmpb
fwait
dec
mov
xchg
or
push
out
or
mov
ficoml
push
insl
lods
out
sub
push
bound
adc
mov
mov
sahf
dec
shrl
mov
cmp
add
cld
jno
dec
fldenv
push
jnp
push
xor
or
jbe
jno
sub
jnp
inc
dec
mov
insl
orb
fnstcw
lahf
fcoms
push
jb
cwtl
lock
pusha
sbb
out
inc
in
push
cmp
inc
movsb
and
les
adc
movsl
shrb
mov
enter
and
dec
and
fs
lret
mov
lret
pop
push
pop
xchg
xchg
test
jae
pop
sub
and
jno
js
jae
dec
mov
nop
fnstsw
shlb
cli
dec
mov
prefetch
or
pop
inc
pushf
push
xor
and
test
shlb
setg
xor
jb
int3
pop
mov
lods
push
add
aas
push
leave
imul
and
loope
and
mov
sub
sbb
sub
sub
xchg
push
jnp
push
cli
push
pop
mov
jge
or
pop
sbb
mov
xchg
sbb
pushf
lock
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
fld
add
mov
js
jle
js
ret
out
dec
push
sbb
pop
cltd
jl
lods
jbe
mov
lret
cmp
test
fisttpl
mov
ds
pop
pop
xchg
adcl
inc
and
repz
or
mov
pop
lret
mov
popf
fdivrl
fidivl
imul
xor
inc
add
fldl2t
and
mov
sub
cltd
push
fnstenv
daa
xchg
frstor
addl
mov
daa
mov
xchg
int
adc
into
in
mov
xor
cwtl
xchg
les
and
dec
jae
sti
cmc
sub
mov
mov
push
hlt
mov
or
cmp
daa
test
mov
lds
adc
dec
mov
and
sbb
adc
test
out
mov
mov
cmp
cltd
push
add
fsubrs
stc
das
outsl
into
push
add
imul
out
lea
mov
mov
and
inc
mov
pop
ss
sbb
jae
cwtl
push
push
rcr
mov
out
mov
add
test
scas
int
rol
mov
fstpl
mov
loop
sbb
mov
cmp
lret
and
cmc
mov
cltd
or
pushf
cmp
cmp
push
or
jp
mov
loope
jge
adc
mov
add
dec
test
int
popf
repnz
xchg
ret
dec
mov
mov
and
mov
insb
pusha
mov
lea
mov
int
cmp
mov
jo
pusha
adc
pop
idivl
imul
or
dec
fistpll
adc
push
pop
test
and
jp
dec
jo
jo
movsl
push
mov
ss
cmp
out
loope
pop
cmpsl
mov
fs
sbb
xchg
pop
sub
inc
mov
scas
sub
roll
lds
xchg
frstpm(287
imul
mov
xchg
iret
and
int
xor
add
push
jmp
xlat
lret
fcmovu
aas
cmp
push
sbb
js
xor
cmp
push
sbb
jne
lret
in
test
mov
insl
dec
hlt
ret
out
or
xchg
fs
or
movsb
lods
xchg
lock
or
cld
pop
xchg
cmp
xor
pop
insl
call
repz
imul
popf
adc
insl
adc
cwtl
mov
mov
jb
add
sbb
paddw
xchg
add
lock
leave
xorb
cmp
jmp
shlb
rcr
loope
pop
inc
adcl
loop
jbe
ret
pop
pop
xchg
sub
pusha
pop
push
pop
jno
adc
xchg
addr16
sbb
sub
jo
mov
and
adc
mov
cmp
and
pop
pop
push
insl
loopne
inc
lock
repnz
mov
jb
std
test
fisttps
stc
mulb
addr16
cmp
mov
jecxz
add
and
hlt
in
or
xchg
xchg
aad
in
mov
jge
mov
pop
dec
adc
inc
test
test
cmp
test
jg
inc
fs
or
pusha
ss
pop
inc
inc
xchg
push
and
xchg
out
mov
mov
pop
sbb
and
adc
mov
pop
mov
sub
outsb
or
ret
jg
sbb
or
dec
mov
cltd
mov
mov
add
repnz
test
push
les
in
mov
and
dec
push
mov
mov
pop
sbb
inc
dec
push
and
sbb
iret
fisubrs
pop
fisubrs
call
adc
outsb
cmp
loopne
mov
sbb
lret
into
imul
movsb
movsb
stc
mov
repz
jecxz
repz
push
jecxz
pop
out
xor
push
push
stos
sbb
ja
pop
add
sbb
leave
lcall
add
inc
mov
xor
or
shll
pop
std
xchg
mov
imul
add
cmp
sub
mov
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
cmc
out
add
js
adc
lods
dec
insb
mov
andb
jg
inc
mov
pop
cld
nop
jp
lea
xchg
sbb
rclb
push
outsb
dec
rep
ds
xchg
fsubrp
ret
jle
xor
movsl
mov
cmp
mov
shl
aaa
sub
dec
ret
pushf
negb
xor
sub
popf
cmp
xor
mov
inc
adc
jns
pop
or
je
add
xchg
inc
or
hlt
into
and
lcall
adc
adc
pop
pusha
inc
or
dec
andb
testb
hlt
sub
in
fcmovbe
lds
mov
popf
cmpb
cmovae
in
call
lret
leave
in
stos
ja
pop
stc
adc
test
out
outsl
leave
pop
jnp
cmc
ficompl
cmc
xlat
cmp
imul
xor
scas
test
pop
aad
loop
push
sub
aas
lret
out
inc
sub
lahf
lret
leave
test
pop
mov
out
and
add
sub
dec
inc
jp
xor
mov
popf
insb
int
push
cs
sbb
adc
lret
inc
xor
mov
push
outsl
adcl
cmpsl
pop
test
jge
ss
or
lret
cli
dec
je
cli
mov
sub
fstps
push
push
lcall
lods
aaa
test
rcrb
ffree
fadds
xchg
sbb
aaa
test
sub
push
out
out
push
xchg
into
out
imul
ret
jae
loop
mov
cmp
sub
insb
push
pop
sbb
ljmp
jns
sbb
cld
pop
mov
lret
mov
mov
ljmp
in
lods
into
rclb
notb
pop
push
adc
adc
scas
cmp
fnstsw
mov
inc
cmpsl
out
dec
ds
sub
mov
jo
and
xchg
inc
cmpsb
sub
sbb
and
pop
sub
cmpl
rol
sti
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
ds
or
aas
mov
js
add
sbb
mov
lods
lods
push
jge
std
xor
cltd
scas
int3
in
xor
in
dec
dec
fidivs
inc
call
mov
scas
cmpsl
jns
fisttps
bound
sti
fimuls
test
sahf
lret
adc
mov
inc
std
addr16
icebp
das
push
xor
aam
popf
xchg
xchg
daa
or
sahf
pop
cmp
popa
mull
xor
ds
pop
faddl
add
add
testl
nop
push
dec
cmp
xchg
jne
sbbl
jecxz
cmp
pop
nop
icebp
or
gs
data16
inc
add
mov
sub
scas
pop
dec
push
and
imull
rol
mov
fwait
js
aad
mov
inc
mull
push
fidivrs
mov
and
push
popf
cmp
cwtl
cmp
xor
mov
andb
lcall
cmp
fisttps
dec
adc
lea
jg
mov
mov
adc
mov
fcomi
pushf
xchg
rol
in
lods
scas
and
lea
mov
inc
stc
dec
adc
jmp
adc
push
sbb
sub
push
jnp
cs
or
in
outsb
xchg
in
ret
dec
adcb
outsb
add
jne
andl
iret
pop
jl
mov
xor
sti
cld
dec
and
mov
in
cmp
adc
lods
ficoml
stc
cmpl
notl
cmp
pushf
mov
xor
fs
rcr
push
test
and
outsl
iret
sbb
push
icebp
inc
pop
adc
inc
imul
adc
fsubs
xchg
or
mov
sar
sbb
aaa
lahf
sbb
adc
fiaddl
data16
xor
arpl
cltd
pop
or
mov
fnsave
mov
or
push
in
imul
jle
dec
lods
pop
mov
insl
outsb
inc
sub
cmp
in
arpl
insb
test
push
jae
xorl
xlat
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
cld
pop
loopne
hlt
mov
js
fnstsw
das
call
pop
lret
sbb
pop
dec
cmp
ss
mov
cmp
push
fcoml
ret
sub
in
imull
xchg
cmp
add
mull
lahf
sub
sbb
les
mov
push
or
push
cwtl
mov
mov
test
push
fisttps
cld
cmpsl
mov
dec
out
sbb
xlat
ret
ret
mov
xor
inc
movsb
cmpsl
and
lods
aam
inc
lcall
rclb
sar
pop
stos
sbb
sbb
xchg
into
fiaddl
imul
outsb
imul
fs
push
add
xchg
fistps
loopnew,pt
je
xor
push
mov
jae
inc
push
pop
rolb
cwtl
or
pop
cld
loope
xchg
add
scas
adc
lcall
pop
imul
dec
shlb
push
or
movsb
cmp
cmpsb
dec
sub
data16
cmpl
push
in
bound
sub
cmp
shl
filds
movswl
ljmp
pop
adc
mov
ss
mov
ret
test
ret
lea
xchg
adc
xchg
sub
or
repz
pop
inc
rol
push
push
push
testb
xorb
iret
xchg
mov
adc
mov
paddw
mov
leave
mov
data16
pop
inc
add
or
lret
mov
jp
and
lock
jp
divb
ja
add
or
jmp
jmp
jmp
enter
xor
mov
inc
ljmp
push
mov
jno
int3
cmp
daa
jg
push
loopne
xchg
dec
inc
jg
sub
movsl
mov
aaa
adc
js
cmp
std
push
or
jo
jns
andl
pop
sarb
cmp
add
cmpsb
dec
dec
out
movsb
leave
xchg
push
ret
movsb
pop
push
scas
add
pop
push
arpl
add
ret
stos
testl
or
arpl
xchg
sahf
gs
push
push
je
pusha
xor
mov
jecxz
gs
insl
outsb
jno
xchg
mov
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
fsubrl
cmc
in
popa
mov
js
es
inc
mov
repnz
out
stc
xchg
mov
cmpb
std
test
mov
out
cmp
repz
rorb
popf
cmpsl
test
dec
and
add
fistpll
adc
mov
adc
in
fnstcw
addb
push
xchg
pop
ror
stos
fdiv
orb
insb
scas
mov
addl
mov
shl
lods
fwait
push
pop
les
imul
rcrb
jmp
sub
or
stos
das
nop
jns
fldt
adc
movsb
push
sbb
pop
jge
bound
dec
cs
ret
add
das
pusha
test
xor
xchg
pushf
insl
cmp
mov
lock
sbb
or
lds
mov
cmp
inc
sahf
ficoms
mov
rorb
cmp
icebp
pop
xchg
cmp
test
cltd
push
mov
setle
mov
in
femms
aaa
mov
cwtl
orb
gs
sti
jno
out
orl
xor
push
hlt
mov
outsl
and
xchg
jmp
and
test
mov
shrb
mov
sbb
repz
and
mov
jae
adc
jno
ja
shrb
inc
add
pop
push
mov
jbe
fcmovnu
aas
loope
jne
cli
imul
cmp
dec
ljmp
fadds
add
dec
fistpll
aam
and
sub
out
inc
push
cmp
add
pop
outsl
repz
push
push
lret
fdiv
inc
inc
in
push
cmp
inc
add
div
inc
andb
pop
scas
jns
xor
icebp
bound
adc
dec
stc
sub
scas
push
cmp
xorl
in
sub
mov
ss
stc
pop
push
lods
movsb
popf
dec
cli
cs
dec
in
sahf
pop
xchg
push
das
imul
arpl
orb
sub
push
pop
adc
iret
outsb
sahf
das
lahf
cmp
mov
adc
xchg
fmuls
cltd
clc
mov
aaa
mov
jp
lods
cmp
jno
push
clc
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
sahf
into
fxch
mov
js
push
dec
push
cmpl
jmp
or
ljmp
xchg
sbb
fdiv
test
loope
inc
pop
sahf
dec
stos
out
lcall
sbb
sub
mov
mov
mov
inc
std
mov
xchg
fxch
stos
jge
dec
xor
mov
scas
repz
pop
aam
push
and
push
cwtl
sti
add
test
adc
lods
popa
adc
scas
iret
in
out
lea
mov
subl
lea
decb
sbb
adc
pop
jb
pop
or
xchg
jg
std
inc
testb
mov
or
and
cld
fcompl
ret
xor
stos
mov
pop
cmp
mov
xor
dec
orps
mov
cmc
ficoml
push
jmp
fcmovne
movsb
test
out
xchg
fwait
xor
out
sub
add
loop
fucomp
dec
lds
or
sarl
in
mov
fsubs
outsl
insl
in
popa
int
mov
push
cmpsl
into
popf
jnp
mov
dec
fcoml
int3
xor
mov
ljmp
icebp
fcomip
rclb
inc
pop
sub
xor
in
shrl
jae
mov
cs
in
jg
lret
fs
inc
mov
mov
inc
mov
adc
dec
outsl
cmp
dec
out
call
insl
sbb
lods
aad
pop
ja
xchg
xlat
xchg
cli
lock
fdivl
add
scas
int
sub
pop
pusha
nop
aaa
in
jno
movsl
mov
pusha
clc
push
xchg
cmp
sbb
and
push
lret
pop
mov
jg
hlt
jae
add
cmc
jno
push
or
aaa
dec
jne
adc
xchg
push
in
or
dec
fiaddl
sub
cmpsl
je
insb
movsl
dec
cmpsl
or
pop
push
sarl
in
js
rorl
ss
stos
xchg
aam
cmp
xorb
aaa
and
out
jnp
testl
aad
sub
push
mov
int3
outsb
mov
and
lcall
aas
or
outsl
or
xchg
xchg
test
icebp
movsl
or
add
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
rcrl
sti
push
mov
jle
js
enter
sbbl
fisubl
aam
mov
mov
push
sbbb
lahf
mov
inc
adc
test
jno
icebp
int3
ffreep
lret
cltd
inc
xor
push
jecxz
dec
sub
pop
loope
stc
fildll
fwait
lcall
or
jge
and
sbb
jns
fdivl
inc
inc
imull
mov
test
cmp
cld
addr16
adc
pop
cmp
and
arpl
test
pop
add
aaa
sub
sub
jno
push
lea
fcoms
fildll
lahf
filds
aas
rcr
scas
int3
cmp
or
mov
inc
lods
repnz
aaa
fsubrs
push
xor
lahf
popf
frstor
je
sbb
lods
jno
arpl
cli
pushf
and
push
out
outsl
mov
out
sub
xchg
mov
ret
sbb
cli
shrl
mov
sahf
pop
add
inc
mov
out
leave
pusha
stc
push
pmuludq
inc
pop
sti
add
ja
lea
push
inc
sbb
pop
or
sub
lea
or
cwtl
scas
jecxz
cs
mov
mov
xor
int
jnp
or
fisttpl
imul
jle
push
lahf
mov
stos
push
movsb
ret
xchg
pop
or
adc
jle
repnz
jecxz
dec
or
mov
loop
lods
push
inc
xorl
clc
lods
jmp
pop
jne
pop
xlat
test
jle
inc
mov
imul
shr
dec
scas
movsb
pop
xchg
pop
in
push
popf
fdivrs
push
fcompl
popa
loope
movsb
outsl
cmp
in
cmpsb
jp
testb
cmp
push
cmp
and
and
aad
lods
adc
push
sbb
jl
jo
out
aam
int3
push
faddp
push
mov
jo
inc
mov
xor
push
xchg
pushf
xchg
jns
mov
add
jne
fstpt
scas
lcall
mov
dec
test
mov
pop
out
push
loopne
mov
and
loop
jo
mov
push
xchg
aas
mov
inc
add
cmp
movl
jmp
ret
ret
lret
test
popa
and
js
jle
js
add
imul
aas
int3
xchg
push
setp
cmp
andb
shlb
mov
popa
lahf
fs
scas
sbb
cmp
dec
lahf
xchg
rclb
test
sahf
je
fisttpl
int3
xchg
add
xor
loop
nop
add
add
test
sub
inc
dec
jbe
repnz
mov
xchg
mov
inc
xchg
jecxz
mov
inc
sbb
dec
mov
jo
mov
sbb
xchg
das
pop
and
adc
jbe
repnz
cmc
fcomps
mov
incb
arpl
out
loope
sti
mov
fdivl
inc
pop
adcl
lret
cmp
sub
cmp
inc
out
jae
jmp
mov
sub
std
add
jmp
int
sbb
xor
cmp
in
movsl
mov
add
add
sbb
sbb
pop
fstpl
pop
stos
into
enterw
sub
jg
push
adc
cld
sub
cltd
mov
sbbl
dec
push
pop
dec
stos
xchg
scas
imul
push
xchg
out
int
push
jle
mov
xchg
mov
xor
lahf
jnp
pop
inc
out
bnd
rcr
loope
xor
dec
decb
inc
ret
mov
movsl
ljmp
adc
xlat
push
test
cmpsb
cli
xor
xchg
mov
sarb
adc
jnp
in
out
lods
aas
test
aad
stos
divl
cltd
pop
jle
in
out
mov
pop
pop
adc
movsl
jb
vpavgw
inc
xchg
jns
mov
inc
mov
imul
loope,pt
shl
in
fadd
stos
xchg
push
fstpt
ret
mov
fistpll
xorb
mov
dec
pop
jl
or
sub
xor
xor
adc
pop
sub
addr16
test
sbb
mov
cld
or
scas
rcll
mov
mov
lds
roll
repz
lret
jl
cwtl
sbb
or
mov
ficoml
dec
dec
push
jecxz
inc
test
dec
dec
cli
addr16
test
in
push
je
push
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
cmp
aam
inc
js
in
js
add
mov
pop
gs
lods
scas
outsb
mov
push
mov
cld
repnz
mov
jne
jge
mov
add
pop
or
push
push
jle
pop
ja
mov
or
pushf
int
xchg
rolb
xor
testl
in
mov
jle
sbb
cmp
push
es
push
mov
push
scas
push
mov
repnz
mov
dec
or
push
mov
xchg
imul
fucomip
fucomi
loop
mov
mov
neg
inc
push
and
sbb
push
aas
shlb
push
cmc
out
add
into
inc
sub
test
adc
pop
les
pusha
aaa
test
das
push
mov
jp
sbb
movsl
pop
push
and
stos
lcall
adc
mov
ret
jbe
inc
addr16
out
mov
loopne
daa
dec
sarb
test
mov
pop
and
test
cmp
pop
or
test
sti
movsl
fstpl
cmp
xor
ja
enter
sbbb
aam
dec
mov
adc
popl
and
and
push
cli
xchg
pop
sbbb
add
sbb
mov
lea
flds
je
insb
out
add
xchg
jbe
cmp
sahf
inc
in
lock
sbb
adc
sbb
ja
mov
pop
inc
add
sbb
xchg
cmp
dec
lods
data16
inc
andl
mul
add
inc
mov
cs
decl
jnp
sub
cld
sarb
lods
fnstsw
daa
loope
push
add
dec
mov
xchg
cld
add
ret
roll
inc
jecxz
fisubrs
addr16
mov
lcall
add
sarb
cmp
in
bound
mov
div
ss
fidivrs
shr
mov
movsl
test
pop
test
adc
and
jg
mov
adc
jo
pop
fcoms
lret
mov
sbb
ss
inc
and
fistps
mov
js
inc
jbe
cli
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
cmp
lock
jp
js
in
js
aas
aas
sub
mov
sbb
or
or
jbe
popa
cmc
push
mov
sub
xor
ljmp
cltd
pop
pop
add
loop
test
inc
cmpb
adc
xor
xor
xchg
mov
or
sbb
xchg
psllq
setle
cmp
fldenv
rorl
outsl
lea
fwait
scas
mov
and
lcall
mov
mov
ds
sub
lock
movsl
xchg
enter
dec
cwtl
mov
mov
adc
ja
cmc
mov
rolb
aaa
cmpsb
cltd
sahf
xchg
sub
xchg
repnz
mov
inc
push
imul
shlb
es
jb
pop
jge
xchg
cltd
es
roll
leave
out
mov
jl
mov
test
cltd
pop
cmpsl
xor
cli
cwtl
jge
call
jno
fs
push
xlat
data16
mov
aaa
or
rol
pop
movsl
fbstp
mov
xorl
dec
sub
out
sbb
js
push
cmp
inc
push
push
out
daa
scas
jg
inc
push
std
scas
and
push
repz
cmp
popf
fstps
mov
pushf
mov
xchg
mov
push
mov
outsl
movsl
out
adc
repz
mov
mov
add
sbb
add
push
jns
icebp
icebp
xor
xor
in
jecxz
mov
dec
lds
push
ja
cmp
xchg
fsubp
lock
dec
mov
dec
dec
adc
in
adc
sub
movsl
xlat
or
and
fs
lcall
aam
mov
push
leave
pop
adc
xlat
xor
loope
out
xchg
xchg
inc
das
int
outsl
dec
jg
push
adc
ja
enter
or
imul
or
roll
cltd
fwait
shll
inc
push
ljmp
mov
test
mov
pop
ret
and
add
dec
sub
adc
inc
loope
stc
jbe
push
rcl
cld
pushf
loopne
adc
xchg
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
xchg
push
rclb
js
in
js
ficoms
leave
clc
mov
hlt
pushf
sbb
js
in
daa
movsb
test
std
jne
or
repnz
push
and
xchg
jnp
push
adc
insl
mov
xchg
or
mov
aam
lock
or
jmp
dec
inc
orb
cltd
sahf
cmp
and
bound
sahf
cmp
xlat
into
fdiv
pusha
cmp
sti
add
cmp
fistps
lds
fidivrl
aaa
ret
mov
ffreep
dec
ret
orl
les
std
stos
adc
out
sub
add
xchg
cmpsb
xchg
popa
and
lods
cmpl
pusha
and
icebp
ds
cltd
dec
iret
sbb
dec
stos
loopne
je
scas
or
fisubl
cmpsb
pop
mov
mov
fwait
cmovo
dec
push
mov
lret
int
js
es
movsl
lods
testl
aas
cmp
pop
cmp
loope
dec
mov
in
ret
and
jmp
and
mov
jnp
xchg
out
js
repz
ret
cmp
hlt
push
mov
pop
jg
adc
data16
cld
icebp
xchg
in
loope
ret
nop
pop
push
cs
mov
push
xor
dec
xchg
and
dec
inc
and
bound
ds
add
movsb
repz
repnz
test
xchg
lea
xchg
lahf
imul
mov
lret
popa
test
out
bound
fiadds
in
inc
aaa
loope
jmp
sub
ja
push
in
sbb
int
dec
mov
ss
imul
mov
sarb
repz
jbe
jecxz
dec
js
fistl
ds
dec
push
dec
xchg
aam
mov
mov
sti
imul
lea
into
xor
je
mov
jmp
jne
sub
mov
adc
inc
adc
and
andl
mov
out
push
mov
or
xor
pop
sub
and
dec
mov
aas
pushf
push
lcall
xchg
arpl
push
inc
insb
call
add
dec
push
stc
loopne
jmp
movsb
pushf
leave
adc
push
xchg
pushf
mov
and
push
ds
jecxz
pop
jbe
xchg
scas
daa
push
mov
add
jmp
ret
int
into
xchg
jle
es
dec
mov
in
js
cmp
fdivrl
lcall
fcmovnbe
dec
mov
jo
outsb
cmp
bound
add
cld
pop
add
xchg
push
mov
inc
ror
inc
pop
dec
and
cmp
test
cltd
dec
faddl
adc
fidivrl
insl
addl
cmp
data16
xchg
xchg
call
and
and
xlat
cmpsl
dec
sbb
lock
cmp
mov
dec
xor
inc
mov
jle
rcrl
add
xor
ret
xchg
in
out
dec
push
scas
pushf
bnd
push
and
cli
mov
cmp
add
mov
jns
sub
pusha
in
imul
cld
fwait
cli
lea
adc
test
ret
fistps
pop
sbb
leave
cli
imul
add
pop
aam
lahf
and
iret
mov
inc
sbb
inc
int
icebp
mov
dec
dec
repnz
inc
ret
pop
sub
cwtl
pop
inc
inc
cmc
inc
imul
hlt
jae
mov
mov
jl
xchg
cmp
xor
sbb
lret
arpl
cmp
cwtl
movsb
mov
lret
lea
repnz
movsl
sahf
sar
pop
lea
or
sub
cwtl
clc
jmp
js
stos
nop
cwtl
jae
out
add
insl
mov
jmp
pop
cmpsl
iret
mov
stos
std
mov
sub
sbb
or
loope
push
add
hlt
in
fsubr
mov
mov
cmc
lcall
mov
inc
test
ds
cmpl
inc
mov
dec
xor
rcr
repnz
test
inc
into
pop
or
bound
jb
mov
xchg
stos
lods
cmp
int
call
test
jno,pn
ja
jo
add
jle
cmpsl
xlat
in
in
ror
xrelease
or
jmp
sub
push
cmc
xchg
or
jo
xchg
mov
inc
adc
xor
ret
lcall
gs
int3
push
mov
pop
cwtl
mov
xor
adc
jp
ss
addb
or
adc
stos
cmp
cmpsb
mov
scas
test
or
arpl
repnz
pop
sarb
out
or
lahf
repz
pop
test
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
push
dec
pop
and
in
js
add
icebp
mov
xchg
and
xlat
fsubp
lret
ljmp
mov
data16
lods
outsb
out
inc
push
inc
loope
mov
sbb
cs
shrb
mov
mov
inc
shrb
inc
es
jns
mov
icebp
mov
pop
xor
push
cmp
mov
push
fmuls
mov
dec
sub
mov
xchg
and
cmp
or
inc
stc
lcall
push
mov
mov
es
out
stc
pop
fisttpll
imul
mov
sbb
sub
pop
sub
jmp
push
scas
and
inc
jmp
shll
aas
test
xlat
pop
arpl
int3
mov
andl
notl
in
push
fcomps
repz
cmp
jb
cmpsl
neg
sub
jmp
mov
add
in
ret
lods
fistpl
mov
mov
insb
sbb
les
fistpll
mov
jle
push
sbb
dec
in
mov
lcall
sbb
xchg
cmc
in
test
pop
insl
in
dec
jle
shl
sti
int3
sahf
xlat
je
das
mov
or
ds
hlt
mov
faddl
add
fwait
in
das
fldl
or
stos
imul
adc
push
test
mov
pop
sahf
ret
xchg
rorl
testb
mov
lods
push
jae
imul
enter
ficoml
sub
movsb
lcall
xchg
data16
add
leave
in
out
add
adcl
dec
loope
cmp
decb
pop
pop
mov
mov
dec
out
sbb
outsb
push
push
sbb
fdivrs
lock
or
arpl
fsubrl
xor
mov
mov
lret
pop
sub
push
out
test
testb
pop
dec
test
mov
push
fidivrs
test
and
mov
cld
shlb
jmp
add
ret
stos
rorl
mov
pop
sahf
leave
mov
mov
and
mov
mov
cmp
jmp
into
ror
fcmovnbe
fld
ud0
pop
pushl
js
in
js
adc
test
sbb
pop
inc
mov
add
pop
test
aam
test
je
scas
cmc
inc
fistpll
out
out
sub
aam
imul
sbb
call
out
repz
and
repnz
mov
and
jae
inc
out
add
hlt
xchg
pop
movsb
test
sbb
xor
adc
clc
in
sbb
nop
mov
ss
out
addr16
push
rcl
ret
xor
sbb
sahf
mov
pusha
sub
adc
and
es
cmp
mov
dec
stos
push
outsl
ficoml
fildl
xchg
test
mov
into
sbb
jb
ss
jae
push
out
push
stos
icebp
mov
pusha
mov
repz
xorl
shrl
fistpl
jl
in
aad
popf
cmp
xchg
dec
jns
xor
lret
cld
push
or
mov
adc
xchg
hlt
and
pop
cli
aam
mov
aad
cmp
jmp
leave
and
adc
jecxz
sub
push
enter
mov
xor
aas
push
mov
push
shlb
loop
pop
xor
jbe
mov
pushf
mov
sub
cli
push
xchg
mov
stos
xor
dec
int
clc
mov
roll
sbb
and
test
xlat
xchg
in
rorl
nop
adc
inc
sti
push
mov
adc
xor
xchg
xchg
fsubs
jp
loope
adc
gs
add
aad
or
adc
lds
jmp
ss
push
xorb
ret
shr
ljmp
or
mov
in
mov
mov
cmp
ss
mov
sub
mov
repnz
xchg
in
in
leave
test
pop
js
mov
or
popa
adc
lock
les
das
in
mov
dec
adc
jmp
xchg
sbb
mov
lcall
xchg
adc
sbb
adc
popa
jo
mov
loopne
cld
movsb
js
inc
lods
setl
xchg
add
add
adc
add
cld
xor
xor
jmp
aas
lret
iret
aad
jo
lods
imull
js
adc
js
jle
js
xor
sub
dec
jmp
ljmp
notl
mov
dec
adc
int
pushf
push
mov
je
sub
push
cwtl
or
rclb
sbb
cmp
dec
xchg
mov
cld
lods
lods
or
add
and
not
js
add
in
xchg
inc
push
leave
shr
mov
pop
je
or
test
mov
rcll
inc
lcall
imul
xchg
or
rorl
jb
push
adcb
add
js
adc
leave
outsb
jnp
ds
cwtl
scas
fadds
stos
imul
cmp
lds
sbb
xor
in
in
negl
movl
push
stos
inc
rorl
sbb
xchg
sub
lods
dec
outsb
xchg
shlb
int3
in
lcall
repz
xor
pop
lock
xchg
shll
imul
fcoms
cmp
mov
pop
or
scas
xchg
outsb
fs
addl
ret
arpl
adc
es
outsl
roll
sbb
loopne
test
mov
stos
jae
std
test
cmpsb
dec
lcall
inc
add
jo
sbb
push
addb
mov
aad
ja
imul
hlt
stc
pop
jae
lock
sub
pop
inc
lahf
mov
nop
cmp
rcrl
lods
js
iret
adc
rcll
pop
pushf
xchg
inc
jge
dec
jb
sub
lods
inc
je
iret
test
mov
insb
movsl
push
adc
mov
cli
sub
mov
out
xor
ja
iret
inc
pusha
icebp
addr16
arpl
aad
dec
or
mov
pop
xchg
inc
inc
and
sub
pop
jns
fnstcw
in
xor
dec
shll
into
push
sub
lret
sub
mov
ret
or
stos
push
subl
mov
imul
movsb
cmpsb
xor
dec
adc
xor
stc
mov
and
cmc
ret
pop
pop
fsub
push
dec
xchg
push
leave
push
arpl
gs
sbb
push
fsqrt
mov
imul
push
pop
xchg
pop
add
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
daa
sub
js
in
js
add
je
loopne
xchg
fmuls
orl
dec
cltd
lcall
mov
adc
into
mov
jns
adc
repz
pop
stos
mov
scas
inc
xchg
stc
inc
nop
add
push
call
add
lds
or
fstl
push
inc
je
popa
or
fdiv
inc
sbb
dec
aam
adc
push
inc
fsubl
lods
mov
dec
lret
inc
movsl
pop
xchg
push
add
push
pushf
jnp
push
cmpb
out
adc
popf
push
bound
jb
mov
mov
jecxz
inc
repnz
or
pushf
int
push
mov
fwait
movsb
sahf
adc
hlt
mov
cld
dec
nop
xor
ljmp
insl
sarb
rcrl
cmp
pop
pop
jle
xchg
movsb
or
mov
pop
or
mov
jle
mov
and
and
jg
xchg
sarl
out
jno
mov
jns
push
cmp
and
sub
mov
add
xchg
insl
xchg
std
popf
xor
jl
inc
inc
sti
xchg
pop
sub
mov
pusha
rcrl
and
sti
jp
nop
andb
fistpll
sets
lret
cmpsb
adc
cmpsl
cwtl
or
inc
sahf
lods
dec
clc
mov
inc
and
pop
rcl
stos
cmp
fcoml
push
rorl
lds
cmp
add
sbb
lahf
dec
dec
mov
xor
imul
mov
push
subb
pop
mulb
test
test
jg
and
sbb
int3
outsl
mov
and
push
xchg
xchg
jecxz
or
lds
jns
ja
ljmp
repz
inc
or
xor
fists
sub
fldt
hlt
inc
cmovb
ss
rclb
scas
pop
cs
hlt
cmp
or
and
jo
js
pusha
lock
cwtl
leave
xorl
and
std
inc
cli
es
jge
clc
ja
mov
cmpsb
pop
xchg
inc
xchg
xor
pop
pusha
inc
dec
or
mov
push
fs
jmp
gs
gs
or
push
push
pushf
mov
adc
lods
mov
dec
addl
add
int3
into
ror
rcl
into
jbe
inc
cmpsw
movsb
fbld
js
in
js
movsl
adc
xor
jb
popf
arpl
dec
pop
inc
aam
mov
inc
mov
pop
cmp
divl
ljmp
scas
das
outsb
rcll
xchg
out
fbstp
pop
inc
push
cmp
mov
clc
inc
xlat
je
jne
ret
insb
jo
mov
call
jge
out
aas
pop
pop
sbbl
insb
jne
les
outsb
add
push
out
aad
pop
repz
mov
filds
and
cmc
add
bound
push
icebp
xorb
sub
cmp
rorw
clc
push
push
sub
mov
pop
or
rcrb
inc
adc
jp
add
adc
loope
adc
mov
cmpsl
xor
push
mov
into
ret
fistpl
in
add
mov
icebp
sub
push
jb
xchg
cld
popf
mov
xchg
xor
push
inc
mov
test
mov
adc
jge
dec
ja
pop
jp
imul
or
xchg
les
sub
sbb
js
lods
pop
fnsave
in
dec
push
test
cmpsb
pushf
inc
add
and
xor
xor
loop
jne
into
das
pop
sbb
rcrb
outsl
pop
addr16
shl
jg
xchg
xor
xchg
shlb
mov
mov
xlat
dec
add
idivb
xchg
daa
std
inc
in
jbe
dec
out
gs
shlb
inc
xchg
sahf
call
pop
cmp
mov
jb
shll
test
out
mov
inc
mov
push
sbb
dec
push
filds
sbb
arpl
mov
nop
mov
dec
pop
adc
incb
mov
jecxz
inc
addr16
push
push
ret
loope
mov
fmul
ret
gs
sub
sti
leave
repz
clc
xchg
dec
pushf
call
scas
cld
popf
add
inc
aad
enter
and
data16
jno
sahf
out
pop
jb
inc
cmp
testb
cmc
movsb
out
push
xor
cld
push
shlb
mov
mov
cmp
jle
aas
out
xchg
mov
xlat
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
mov
js
in
js
mov
mov
ja
pop
gs
cld
xor
mov
pushl
jge
or
daa
bound
pop
dec
push
dec
xchg
jge
icebp
cmp
lds
lret
inc
rcll
dec
lea
pop
in
push
mov
inc
cltd
push
sub
test
cmp
les
xchg
xchg
pushf
sub
repnz
out
push
div
sbb
in
in
pop
ljmp
sub
mov
incb
cmp
and
mov
popf
out
das
test
call
cmp
daa
repz
jb
sarl
or
mov
fdivrl
pop
int3
ds
push
sbb
cmp
gs
cmp
xchg
cmc
mov
shrl
std
clc
mov
push
mov
adc
popf
adc
pop
stos
in
dec
xchg
xor
sbb
lret
jecxz
inc
mov
pop
add
insl
inc
mov
test
cmp
xchg
aaa
mov
sbb
pushf
sub
popa
sub
inc
shl
sarb
mov
fs
push
aaa
stos
pushf
stc
test
sub
cmc
adc
lods
mov
lock
adc
jge
scas
divb
shlb
mov
arpl
jmp
lcall
push
mov
imul
popf
mov
pop
sbb
pushl
jno
call
cli
out
jg
cld
xor
lcall
lock
xchg
pushf
dec
fldcw
aas
mov
push
mov
add
aad
mov
popa
sub
adc
xchg
dec
push
fisubrl
insl
test
cmp
iret
aas
dec
dec
out
inc
dec
mov
insb
push
inc
pop
xlat
mov
into
sbb
inc
divb
and
dec
xlat
clc
mov
popf
xor
stos
das
daa
clc
decb
push
mov
and
adc
adc
aas
jmp
jmp
jge
scas
jne
jmp
push
inc
ret
in
gs
pop
std
mov
loopne
inc
mov
decb
popl
stos
mov
jp
sbb
mov
push
push
movsb
jl
lods
cmc
cmp
scas
add
mov
stos
daa
xchg
fistl
rclb
cs
js
jb
and
inc
mov
mov
sub
cmp
ja
jmp
rol
xor
js
jmp
js
jle
js
push
pop
test
call
pop
jnp
iret
leave
xchg
push
repz
aas
mov
mov
gs
pop
les
lods
scas
and
or
shl
mov
imul
bound
mov
mov
enter
push
repnz
shrb
mov
sub
fwait
hlt
aas
imul
aaa
adc
test
lret
das
lahf
rcrb
mov
pushf
jl
jl
xchg
frstor
cmpb
test
or
shrl
ret
cmc
popa
inc
js
add
adc
mov
add
test
fdivp
cmp
stc
jb
outsl
bound
and
andl
adc
sbb
lret
pop
gs
push
push
shrb
xchg
dec
cwtl
xchg
adc
test
pop
adc
mov
push
pop
sub
jmp
in
into
mov
repnz
ds
dec
push
stc
cmc
dec
sub
jb
call
push
icebp
lcall
iret
jb
addl
imul
test
les
xchg
pop
cli
dec
push
stos
in
and
lods
aas
ljmp
sbb
ds
lcall
lcall
add
adc
inc
cwtl
xchg
inc
ret
mov
jbe
fwait
jb
fdivs
jge
add
jl
mov
add
add
lret
mov
testb
lods
fmuls
ss
jno
lock
fld
fdivrs
int
pop
adc
faddl
inc
xchg
mov
jmp
mov
cmp
or
loop
inc
int
test
pusha
xchg
add
or
outsl
fdivr
aam
cmp
outsl
pop
add
in
cmc
iret
xchg
and
aam
xor
add
dec
cmp
cld
pop
insl
pop
sub
and
cwtl
dec
test
lock
cltd
test
adc
test
and
std
mov
sbb
inc
into
push
js
add
inc
mov
gs
mov
filds
mov
or
jp
push
pop
push
cwtl
dec
mov
sub
out
std
xchg
hlt
adc
shr
call
push
enter
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
push
mov
js
in
js
dec
mov
ss
xchg
push
xchg
dec
ja
xchg
adc
loope
and
cli
cmp
icebp
movsl
or
je
int3
cli
sub
popf
mov
jp
or
subl
sbb
sbb
loope
xchg
aad
stos
inc
push
jo
xchg
test
cmc
inc
stos
adc
sbb
push
loop
sbb
or
lcall
shl
imul
dec
mov
xlat
out
loope
cmp
xor
xchg
mov
pop
out
jb
xlat
aam
push
sbb
and
ss
xor
pop
mov
loope
mov
xchg
or
inc
jae
inc
and
pushf
push
scas
dec
in
jbe
popf
rcrb
jge
or
push
fcmovb
xchg
mov
aaa
dec
inc
mov
xlat
mov
ret
int3
xlat
ficomps
flds
adc
das
dec
jmp
sub
shlb
mov
push
pushf
push
call
out
xchg
inc
clc
mov
iret
add
pop
addr16
add
or
jmp
and
in
cwtl
aaa
pop
and
in
cmp
aaa
pop
cld
leave
adc
and
push
lds
or
int3
push
sbb
xchg
adc
imul
mov
or
mov
adc
dec
cld
loope
xchg
xor
test
and
cli
std
mov
rolb
inc
mov
roll
int
je
movsb
mov
cmpb
add
push
sub
mov
aaa
cmc
mov
loope
fmuls
xchg
stos
mov
sahf
movb
adc
aas
sub
xlat
xorl
testb
mov
xchg
ljmp
rorl
cwtl
outsl
leave
and
subl
jnp
xlat
push
mov
cmp
bound
cmpb
adc
mov
pushf
pop
decl
test
cmp
repz
lods
rolb
lock
push
xchg
outsb
andb
fistl
rcl
test
mov
xchg
push
push
mov
sub
mov
and
daa
bound
imul
flds
cmp
push
xor
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
ljmp
in
js
insb
nop
cmp
out
inc
push
mov
fdivrl
mov
mov
inc
cmp
sbb
inc
and
jl
test
pop
inc
ds
mov
bound
and
loopne
mov
cltd
or
int3
test
popf
cmpb
imul
pop
sbb
roll
shll
loop
dec
ds
cmp
xor
xchg
cwtl
pop
xchg
fisttpl
sbb
jle
daa
mov
pop
jb
out
adc
add
push
mov
add
mov
push
cmp
aad
jp
dec
imul
xchg
mov
push
ret
push
pushf
insb
das
xlat
jne
and
dec
mov
sub
mov
mov
data16
jg
push
test
std
nop
push
jbe
imul
cmpl
scas
xchg
cs
xor
push
out
lcall
xor
pop
scas
xlat
mov
pop
sub
mov
mov
gs
xor
jb
insl
arpl
orl
or
cmp
leave
or
dec
xchg
jno
cwtl
pop
pop
enter
out
stos
scas
inc
xchg
loopne
mov
ds
js
lds
in
imul
fldenv
pop
cmp
or
cmc
add
std
aaa
sti
bound
add
sbb
or
aas
test
sbb
repz
in
sti
and
hlt
cmp
shll
jno
jmp
sbb
mov
inc
mov
push
popf
jo
loope
sbb
test
sbb
sbb
xor
and
pop
inc
and
mov
inc
fcomip
andb
cld
inc
inc
rcrl
std
aad
es
test
cmp
fstpl
aam
sbb
jg
inc
out
out
xor
xor
test
aad
pop
pop
dec
lcall
xorb
add
jg
xchg
popl
jle
sbb
jne
outsb
enter
mov
test
mov
out
add
idivl
xor
xchg
enter
aam
push
xchg
pop
jae
jp
mov
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
int
loop
gs
in
js
nop
pushf
inc
lods
stc
jne
testl
sub
cld
push
mov
cmpsb
outsb
mov
loop
xor
int3
divl
and
inc
dec
cmpsl
pop
add
jge
inc
out
sbb
adc
mov
popa
add
dec
and
push
aaa
fsubp
call
add
das
pop
cmp
cmp
icebp
xchg
loope
and
mov
sbb
xchg
adc
popa
popa
into
cli
lods
lahf
testb
or
scas
inc
cld
xchg
jg
mov
sbbb
outsl
ret
xchg
sbb
cmp
or
fsubr
pop
sbb
shr
int3
sti
mov
mov
fcoml
fs
and
push
dec
aam
aaa
mov
dec
bound
insb
loope
add
lods
es
leave
or
sbb
rcrb
data16
xchg
pop
inc
repz
adc
push
dec
jg
jmp
mov
inc
cmpb
cld
dec
out
dec
fisubs
leave
inc
push
scas
jg
adc
mov
xchg
imul
mov
xor
mov
pop
out
shlb
adc
inc
mov
std
or
out
xchg
das
les
xor
or
idivl
mov
inc
imul
and
cmp
std
inc
mov
inc
cwtl
push
inc
sub
xchg
and
and
sahf
pop
mov
push
add
lock
mov
dec
and
push
movsl
stos
lods
or
loope
sbb
lahf
adc
out
pop
or
pop
ss
mov
xchg
es
mov
js
cli
jne
cmp
cmovle
in
lea
pop
enter
inc
fdivrl
xor
xor
ret
aaa
mov
aas
das
hlt
jecxz
mov
xchg
shll
push
stos
and
leave
push
xor
or
imul
mov
jb
pop
hlt
repz
adc
add
sbb
cmp
adc
push
test
jno
dec
sub
mov
rclb
adcb
jge
xor
lds
jno
loopne
dec
lret
enter
add
filds
pop
ja
jae
sbb
push
loop
fs
adc
jmp
adc
mov
xorb
mov
mov
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
mov
loope
imul
jle
js
inc
adc
ffreep
sub
push
push
xchg
mov
subl
les
pusha
push
out
mov
sbb
dec
mov
push
mov
jbe
nop
cltd
and
inc
push
pusha
xor
push
pop
mov
push
pop
sub
sbb
pusha
jne
mov
outsl
mov
rorl
cs
xchg
hlt
jl
xor
inc
js
sbbl
or
inc
jp
sbb
inc
push
mov
jmp
in
std
or
xor
scas
xchg
shrl
jg
lods
inc
xchg
add
cmp
popf
mov
test
test
inc
sub
pop
int
int3
mov
mov
popf
mov
mulb
sti
sbb
mov
fwait
and
mov
mov
xor
cmp
stc
mov
stos
xchg
xor
nop
ss
and
in
push
or
pusha
arpl
out
das
adc
stos
mov
jmp
add
into
jb
xor
dec
arpl
pop
or
xchg
pop
sti
push
mov
mov
push
sub
adcl
loope
shll
cmp
int3
popf
push
fimuls
pop
adc
and
mov
xchg
mov
pop
jbe
xor
jmp
cmpl
push
dec
std
sub
mov
lods
mov
sbb
add
fisubs
lcall
cmp
jl
mov
jno
push
mov
ljmp
js
testl
andl
pushf
lret
or
xchg
push
and
and
movsb
or
or
jnp
in
or
xchg
push
mov
add
push
ret
and
pushf
mov
notb
fnstcw
fistps
pop
xlat
sbb
cmpb
xchg
jno
dec
dec
adc
fidivrs
mov
cmp
xchg
cli
sub
jl
xor
mov
pusha
push
nop
dec
dec
mov
fcoms
stos
mov
xchg
clc
inc
add
or
fstpl
jle
jg
jae
sbb
fbstp
push
add
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
xchg
jae
inc
push
imul
sub
pop
enter
jb
shl
sub
sub
cmp
aas
ffree
sub
test
fldt
sarl
sbb
sbb
dec
into
inc
cmp
fcmove
fsubp
cmp
jo
mov
fsubrp
ljmp
fsubl
jnp
cmp
out
lcall
jno
test
jne
gs
dec
addr16
mov
stc
insb
pushf
bound
das
add
lds
stc
mov
or
xchg
mov
push
push
cmp
cmp
xor
pop
mov
xchg
inc
pop
incb
ljmp
test
xor
movsl
movsl
xor
popa
fldcw
nop
add
mov
jno
ret
mov
ljmp
lea
xchg
dec
jmp
stos
pop
movsl
or
shr
int
test
jb
dec
fsts
inc
adc
and
xor
sub
push
lods
mov
mov
out
sahf
dec
js
bound
stos
dec
sub
test
cmc
or
cli
stc
sti
mov
mov
jle
xor
ja
fcoms
jne
push
loop
scas
ljmp
adc
lcall
or
loop
sbb
cmpsb
pop
sbb
mov
repz
jl
pop
adc
adc
push
adc
jnp
dec
push
fdivs
xchg
mov
or
cmp
xorl
cmp
into
repnz
into
lea
inc
lea
xchg
jb
xchg
push
es
and
hlt
sbb
or
daa
mov
pop
pop
pushf
ds
imul
and
adc
std
sub
outsb
cmp
fnstcw
mov
ljmp
fisubrl
fcmovnu
xchg
xor
jno
cmpsb
in
sti
lock
push
adc
mov
aad
jecxz
shll
ret
fldcw
and
xchg
pop
aad
jle
inc
mov
adc
pop
push
inc
add
popf
jnp
and
mov
js
xchg
adc
lret
ds
dec
adc
call
sarl
pushf
movhps
jne
mov
test
stos
mov
gs
jne
sbb
adc
jmp
iret
ret
rol
fcmovnu
mov
and
daa
cmp
jle
js
mov
and
inc
xorl
inc
pop
leave
sub
jno
mov
je
js
shlb
cs
insl
loop
pushf
hlt
add
hlt
je
js
ljmp
push
addl
dec
bound
outsl
mov
sbb
mov
shll
fcoms
adc
mov
mov
faddl
cld
loope
inc
imul
inc
push
cmp
xor
jge
mov
fnsave
lods
or
push
push
jae
out
lods
cmp
insb
sti
gs
mov
sarl
pop
sbb
lods
push
pop
popa
sbb
jge
sahf
inc
jmp
push
cltd
push
ret
or
test
add
cmpl
push
jp
mov
push
xchg
outsb
push
dec
shl
mov
ljmp
pusha
inc
dec
push
pop
loope
lea
push
xor
out
pop
das
in
test
or
sub
mov
fidivs
cmpsl
cwtl
insb
fdivrl
shr
adc
and
jmp
js
pop
inc
lahf
and
adc
into
dec
ret
jl
les
xchg
push
pop
push
push
testb
pop
shll
add
pop
jmp
xchg
cli
arpl
mov
popa
mov
and
aam
cmp
and
outsl
sbb
jo
testl
test
dec
push
push
inc
inc
or
arpl
mov
mov
test
sahf
insl
dec
fiaddl
fsts
xor
sbb
bound
ror
sub
out
adc
cmp
xchg
leave
jecxz
cmp
pop
pusha
lods
iret
into
xchg
or
cwtl
mov
dec
mov
cmc
sub
sub
out
pop
sarl
call
mov
push
test
mov
push
xchg
jge
test
cmp
test
lods
and
stos
and
insb
dec
repnz
aaa
cmpb
fisttpll
sbb
loop
aam
xchg
call
sbb
stos
int3
adc
jbe
aam
cld
ja
movsl
lcall
dec
leave
xor
ret
push
fidivrs
movsl
dec
divl
dec
nop
pop
fadds
cmp
cmp
mov
jmp
int
ror
fcmove
leave
sub
xor
insb
js
in
js
into
inc
scas
lea
xchg
or
int
mov
ljmp
jnp
xor
ss
add
mov
mov
add
or
xchg
dec
cmp
xlat
nop
inc
mov
cmp
aaa
orl
add
push
jg
icebp
adc
cltd
xchg
out
or
ret
xchg
dec
in
test
push
popf
aaa
int
out
minps
add
inc
inc
push
cmp
jbe
psrlw
add
incb
enter
jecxz
popa
dec
hlt
adc
push
dec
insl
std
push
add
cmp
rcl
mov
mov
mov
stos
pop
xor
dec
inc
cmp
rcrb
in
xor
cmp
or
sti
js
xchg
xchg
mov
icebp
lret
xor
sbb
and
insb
mov
or
xorl
clc
push
jge
mov
sbb
mov
or
out
out
aad
add
imul
and
mov
mov
and
or
insl
fisubrs
push
lea
aam
scas
sti
insb
test
xor
or
out
add
andl
mov
or
out
xchg
into
and
or
negb
lcall
out
xor
and
cltd
jecxz
jl
jle
sub
push
jbe
sbb
mov
daa
lods
sbb
ret
mov
fwait
mov
lods
insb
lahf
mov
mov
or
popa
mov
add
icebp
jg
push
jb
daa
jle
icebp
sbb
loope
inc
lcall
xor
out
inc
ss
push
loopne
sahf
xor
in
xchg
test
push
sbb
sbb
jbe
insb
dec
xchg
jp
push
arpl
mov
pop
dec
adc
push
cmp
pop
mov
call
fs
sarb
lcall
cld
mov
xchg
fldenv
dec
adc
jmp
in
stc
pop
pop
pop
lds
adc
sbb
jb
mov
cmp
out
xor
sbb
rcll
addb
call
jmp
mov
xor
add
jmp
ret
xlat
data16
fildll
js
jle
js
movsb
dec
mov
pop
test
lods
out
or
incl
cld
cmp
cmp
andb
and
and
inc
xchg
inc
es
cmp
arpl
or
mov
enter
rcll
sbb
and
push
ja
mov
insl
pop
mov
dec
xor
shrd
sbb
dec
add
jmp
sbb
jo
pop
ror
push
stc
jge
fnsave
mov
lret
roll
scas
push
adc
rolb
das
sub
mov
adc
lret
dec
jb
mov
insl
rcl
cltd
pop
pop
lock
mov
lds
jns
add
cmp
repz
test
mov
pop
scas
fdivrp
mov
mov
fildl
ja
out
push
cltd
jge
addr16
jecxz
or
inc
and
mov
mull
jno
popf
mov
mov
pop
dec
xchg
and
scas
int3
mov
lret
cld
pop
or
xchg
fimuls
lods
push
enter
push
out
loopne
pop
adc
xchg
xchg
inc
outsb
ret
pushf
inc
mov
adc
repnz
add
test
outsl
pop
mov
mov
push
and
clc
add
push
mov
jl
aas
xchg
repnz
add
or
outsl
in
into
sbb
or
shrl
sbb
push
and
mov
lds
mov
lods
sub
push
out
xor
incb
sbb
push
jbe
or
cmp
sub
xor
dec
fmul
test
rorl
shl
cmpsb
jp
ret
leave
ja
dec
adc
imulb
dec
rol
outsb
xor
adc
cmp
ja
repz
mov
mov
ljmp
mov
nop
in
fistpl
ss
data16
inc
aad
lock
push
xor
jle
lret
les
outsl
xor
daa
mov
push
add
fwait
add
rclb
dec
mov
shrb
push
pop
dec
inc
andl
jmp
or
jmp
cmp
mov
and
scas
movsb
iret
push
and
loopne
shr
ret
and
call
dec
jb
jge
js
mov
mov
jmp
int
xlat
enter
shll
std
xchg
ja
js
jle
js
mov
testl
daa
or
mov
xor
sbb
push
sub
jmp
jg
xchg
fistps
or
mov
cmp
into
loop
fnstenv
roll
push
xchg
cmc
jge
dec
xor
jno
test
jmp
push
cmp
subl
jmp
sub
pop
out
lods
rcrb
loope
in
push
mov
mov
aam
rolb
jb
cli
stos
pop
inc
push
dec
int
inc
xlat
mov
or
xchg
add
divl
cmp
and
jnp
insb
xchg
shr
mov
ret
sub
mov
or
xlat
aam
push
lcall
pushf
adc
cmp
and
leave
test
sub
lcall
jp
fstl
iret
enter
leave
xchg
adc
jb
pop
gs
cltd
sahf
addl
xor
fstpt
nop
lock
sub
pop
mov
nop
jne
and
ljmp
mov
push
jns
xchg
push
fadds
mov
sbb
push
fwait
push
jo
outsl
ss
adc
pop
loop
cmp
and
cmp
dec
inc
loopne
int3
outsl
xchg
mov
add
xor
inc
lds
rolb
repz
pop
stc
enter
stos
pop
fsubs
pop
sbb
adc
mov
push
mov
outsb
imul
xchg
jns
mov
adc
dec
dec
and
pop
sbb
push
and
pop
mov
mov
cwtl
es
push
cmpl
call
adc
sbb
fisubrs
scas
inc
jecxz
xor
cwtl
imul
xchg
fidivl
mov
loop
add
into
rcr
dec
out
shl
jno
push
mov
xor
dec
ficomps
movsb
jmp
inc
pop
gs
inc
mov
test
addl
push
and
xchg
js
bnd
stos
and
inc
dec
mov
jo
and
add
pop
mov
sti
stc
rolb
repz
mov
es
pop
stos
pop
jo
outsb
jns
mov
mov
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
cmp
sahf
imul
js
sub
outsl
mov
sbb
fistpl
ret
pop
hlt
mov
fnstenv
pop
mov
faddl
adc
mov
or
add
sar
out
bound
rorb
and
inc
gs
test
js
xchg
shrl
out
rol
insb
jle
call
into
out
dec
inc
aaa
scas
add
aam
mov
mov
mov
ret
imul
pop
pop
notb
mov
xor
aad
push
test
push
cmpsl
mov
pusha
cmc
sub
sarb
jecxz
insb
sbb
lods
pop
aaa
jns
repz
loopne
rcll
push
mov
mov
sbb
gs
mov
out
sbb
das
movsl
cmpsl
ss
out
and
dec
xchg
mov
xchg
fs
xor
or
sti
sbb
fdivr
push
jg
fwait
jne
xchg
pusha
mov
dec
adc
mov
add
inc
stos
in
cmpsb
jne
insl
pop
xor
lods
adc
nop
into
inc
mov
jp
pop
push
gs
add
sbb
data16
cmp
and
jecxz
fwait
xor
cmp
test
or
jbe
cld
ds
and
mov
or
sub
mov
pop
int
pop
dec
aam
insb
adc
add
repnz
sti
mov
dec
daa
add
out
lea
inc
mov
loopne
imul
dec
popf
cwtl
orl
es
call
sub
ret
inc
add
std
pop
jl
arpl
lods
inc
int
mov
add
lods
lret
or
sbb
imul
push
push
mov
and
inc
ljmp
mov
ret
insl
rorl
pop
pop
stos
lock
push
sbb
xor
adcl
add
push
xor
xchg
pop
inc
sbb
xchg
test
mov
mov
pushf
mov
js
adc
nop
add
mov
mov
cld
push
fwait
mov
mov
das
add
test
push
in
mov
fincstp
shll
fwait
out
and
sbb
bound
mov
cmp
in
test
sub
repnz
lods
mov
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
ret
inc
jp
js
jle
js
push
xor
out
shll
mov
loope
call
divl
xchg
push
mov
mov
fs
mov
cmpl
jmp
into
jae
mov
cmc
incb
in
pop
push
loop
in
inc
insl
mov
sub
ret
dec
xchg
shrb
shl
pop
push
gs
push
sbb
int
andb
jne
dec
out
iret
bound
loope
xchg
aam
xor
and
sub
js
aas
jb
xchg
sbb
mov
inc
in
cmp
ds
cmpsl
mov
adc
std
sbb
push
fs
cmp
nop
jno
cmc
push
push
popa
add
xchg
loop
les
push
mov
mov
push
popa
loop
int3
mov
cmp
lret
sbb
in
mov
mov
cs
xlat
mov
jno
mov
cmp
int3
mov
rorb
mov
aad
xchg
jae
test
das
sbb
repnz
jl
cmp
inc
cltd
cmp
jne
or
sbb
adc
jp
sti
pop
lret
in
push
xchg
les
sahf
cmpl
jl,pn
pushl
jl
shll
std
outsl
gs
mov
sti
imul
push
and
and
sub
stos
nop
ljmp
andl
jecxz
push
mov
roll
sub
pop
daa
jno
or
insb
cmp
mov
dec
cmp
mov
mov
and
test
ja
lea
cltd
jb
push
les
ljmp
inc
sahf
cmp
cli
flds
cmp
dec
mov
mov
lods
outsl
lcall
lahf
ljmp
fstpl
js
mov
mov
xor
push
mov
arpl
inc
je
in
je
aam
sarl
movb
les
add
push
cmp
pop
mov
outsb
in
pusha
lret
stos
inc
fmulp
mov
push
and
icebp
scas
out
cmpsl
inc
mov
jmp
push
ss
pop
scas
push
sub
push
cmc
loop
inc
add
add
mov
mov
jmp
enter
cld
imul
hlt
inc
js
js
jle
js
xor
or
jo
mov
cmpb
lods
xor
cmpsl
insl
jl
out
bound
ret
xchg
mov
jp
punpckhbw
or
jg
and
stos
dec
xchg
lds
or
jns
adc
or
aam
js
and
popf
aad
out
cmp
cmp
cmp
jae
jg
ja
or
je
jnp
lock
insl
jecxz
jg
mov
cmp
bound
sbb
dec
dec
in
xchg
cmp
and
mov
mov
cmp
xlat
xchg
cmp
rcl
jb
jg
xchg
xchg
cmc
std
test
xor
dec
in
ljmp
push
xlat
leave
add
fwait
xor
inc
daa
mov
cmp
mov
mov
push
mov
out
jl
out
daa
push
push
add
sti
stc
mov
mov
ss
sti
lock
scas
ds
rcrb
adc
mov
pop
sbb
xchg
jp
test
mov
pop
sub
mov
ja
or
mov
data16
rcrl
stc
xchg
es
hlt
mov
sbb
pop
fadds
imul
pop
movl
xchg
mov
or
ss
leave
pop
push
sbb
dec
sbb
stos
xor
sub
mov
outsb
inc
sub
xor
jge
push
hlt
ret
das
mov
push
mov
adc
pushf
fistpl
cmp
or
rdtsc
push
rcll
mov
sbb
lods
shlb
xor
lret
ret
push
inc
dec
fldt
pushl
jecxz
xor
and
push
rclb
mov
subl
and
xor
test
roll
data16
pop
lret
mov
push
cmpsb
sub
and
mov
pop
repnz
adc
fdiv
out
loop
fildl
sub
lods
in
xor
arpl
add
fs
aaa
lock
jne
inc
out
xor
js
add
test
cmpsl
scas
rcll
mov
push
int3
repz
ljmp
int
mov
pop
test
xchg
push
push
mov
mov
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
pop
jp
jge
js
jle
js
cmpl
pop
and
sbbb
orb
push
push
cwtl
xor
loope
push
mov
mov
sub
jns
lds
and
mov
mov
rorl
or
or
sahf
hlt
in
ret
fs
les
mov
iret
or
fimull
pushf
jno
push
sub
hlt
icebp
sbb
dec
imul
mov
dec
push
dec
call
fwait
push
inc
xchg
outsl
add
xchg
jp
lret
jae
lahf
jp
pusha
call
popf
bound
stos
test
cmpsb
push
dec
pop
mov
mov
dec
add
fwait
test
mov
adc
sbb
sbb
sub
or
jl
add
mov
out
int3
icebp
mov
jo
flds
ljmp
mov
aad
push
clc
in
xor
dec
mov
pop
dec
inc
xor
test
popa
jnp
test
pop
lods
xor
jae
stos
xchg
mov
stos
ljmp
gs
cmp
jge
loop
dec
stos
js
adc
aaa
sub
aad
or
aad
push
or
dec
push
sbb
cmc
mov
out
xor
cmp
ja
add
push
inc
lock
cld
or
mov
inc
movsl
cmp
nop
sti
enter
pop
sub
and
mov
push
insb
mov
lret
fistpll
xchg
sbb
pop
mov
push
test
xchg
pop
gs
int3
mov
pushf
scas
push
add
ret
xor
movsl
jo
pusha
sbb
adc
shrl
sbb
and
mov
out
sbb
mov
fwait
xchg
jecxz
xchg
adc
test
mov
lret
imul
jg
rorl
popa
jp
out
pushf
mov
stos
aas
sub
push
mov
icebp
xchg
pop
lret
daa
and
in
xchg
mov
pop
icebp
xchg
or
test
and
or
pop
jbe
loop
dec
test
pop
lods
and
es
out
mov
xchg
test
add
or
xlat
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
sub
xchg
add
in
js
mov
push
in
stos
and
mov
xchg
push
push
inc
add
dec
xor
adc
mov
fcomi
xchg
push
arpl
and
cmp
mov
push
lahf
sarb
cs
test
cmp
or
in
mov
jo
inc
mov
loope
movsb
xor
test
fstpl
or
and
pop
lods
mov
jbe
insl
xchg
scas
mov
xchg
sbbl
lods
add
xchg
sbb
xor
into
imul
push
pop
in
jbe
test
push
hlt
daa
insb
data16
pop
stos
ret
fwait
inc
sbb
inc
mov
sub
push
std
scas
insb
movsl
sub
mov
inc
xchg
xchg
mov
imul
scas
pop
xchg
lcall
mov
mov
stos
or
repz
mov
imul
fs
sbb
into
push
sahf
frstor
and
ja
xchg
push
mov
loopne
mov
sub
jb
lea
mov
jno
add
xchg
inc
int3
dec
adc
fcmovnu
xor
inc
in
clc
xor
sbb
cmp
nop
sbb
pop
pop
push
movsb
jmp
imul
sub
stos
into
adc
add
or
in
fimuls
ret
pop
cmp
mov
cmp
cmc
and
test
xor
fsubrl
das
push
subb
sub
scas
test
jno
xchg
repz
jne
push
mov
pop
dec
movsb
push
xor
xor
xor
lret
cltd
std
xor
mov
xor
xlat
ret
outsl
stc
lret
sbb
je
pop
xor
dec
in
sbb
push
shrl
pop
aas
mov
or
testb
in
jl
mov
les
pusha
les
xchg
dec
pop
inc
inc
sbb
test
aad
xchg
jl
std
fisttpl
jnp
mov
shrl
lahf
cmc
iret
mov
mov
xchg
cmc
lds
cli
jle
mov
or
inc
icebp
xchg
or
jns
pop
shll
in
imul
enter
push
sbb
out
pop
repz
mov
data16
adcl
push
in
mov
jge
mov
xor
add
jmp
ror
iret
aam
insl
js
jnp
mov
add
in
js
push
cmc
movsb
addr16
fisttpl
mov
mov
movsl
cmp
mov
jmp
aad
inc
jbe
jle
jbe
adc
loope
adc
pcmpgtb
push
dec
xor
or
fwait
mov
sub
push
or
add
mov
mov
pusha
sbb
jge
sub
pop
std
add
mov
test
sbb
scas
pop
xor
push
add
lock
jns
add
xchg
in
ret
repz
std
and
dec
imul
or
inc
inc
call
jp
lea
pop
nop
sub
xlat
inc
shll
xchg
cmpsb
push
xchg
orl
add
loop
cmp
movsl
out
pop
nop
adc
rol
in
or
add
lea
mov
jmp
cmp
xor
cltd
test
movsl
notl
loopne
dec
ja
fsubrl
gs
test
pop
ja
arpl
sbb
stc
call
out
out
adc
cwtl
loop
dec
or
popf
jns
insb
jb
pop
repz
push
test
lahf
push
xchg
push
inc
idivb
addr16
push
add
cmp
in
pop
sti
inc
out
adc
push
mov
repnz
nop
push
sbb
out
dec
ljmp
jge
mov
decl
inc
or
jle
or
jmp
cmpsl
clc
xor
push
xor
push
test
ljmp
in
mov
repz
and
sti
mov
imul
daa
xchg
adc
cmpsl
sub
xor
fisubrl
ret
arpl
iret
cmp
fisubs
mov
sub
subb
fnsave
cmpsb
pop
roll
gs
jl
pusha
je
dec
cld
arpl
dec
test
aaa
mov
popa
and
cld
cmp
sahf
fxch
jle
shl
or
nop
popa
mov
jae
popf
mov
adc
mov
shrb
in
sbb
xchg
dec
fldenv
loopne
sarb
test
and
push
pop
mov
out
dec
add
clc
or
add
mov
imul
mov
jmp
rol
leave
rcr
rcr
enter
in
aad
out
push
jg
in
js
jns
add
dec
and
ja
pop
test
jbe
mov
or
ljmp
xorb
jg
inc
cmpl
adc
ret
pop
out
push
aaa
pushf
rorb
test
mov
sub
fcmovnb
pop
xor
les
roll
sahf
or
push
and
cmp
js
stos
mov
sbb
push
xor
jnp
sbb
add
jbe
cmpsl
or
enter
mov
js
data16
pop
nop
mov
sub
mov
rclb
mov
andl
nop
clc
sub
or
adc
out
sysret
adc
rclb
mov
sahf
sti
aad
rol
xchg
pop
shrl
jno
dec
repz
and
sahf
inc
icebp
sbb
add
push
jae
into
push
aaa
sub
stos
pop
lahf
dec
nop
jge
mov
fidivs
lods
xchg
ljmp
jle
pushf
int3
mov
movsb
or
and
sbb
movsl
cs
mov
flds
in
pop
in
and
xor
popa
inc
and
lock
hlt
sbb
inc
incl
adc
and
sar
arpl
repnz
and
movl
in
push
push
mov
roll
mov
rcll
sbb
xchg
cmp
xchg
and
sarb
xlat
imul
cli
or
xor
xchg
adc
push
dec
sub
jnp
and
cld
pushf
push
dec
daa
mov
jl
cmpsl
shl
cmp
inc
sbb
lods
mov
lret
fs
inc
adc
lds
call
dec
push
lds
pop
or
adc
fistpl
shl
pop
rcrl
pop
fcomps
popa
pop
outsb
in
inc
test
imul
jmp
call
push
and
cmp
loopne
push
jmp
cltd
enter
lahf
movsb
and
lock
ds
rcrb
mov
sbb
pop
and
fs
fwait
movsl
or
lea
cmp
xor
jmp
les
int
aam
mov
mov
jg
in
js
aad
ficompl
test
dec
or
inc
arpl
mov
push
add
adc
push
jge
dec
fsubl
mov
scas
les
push
mov
imul
jne
cmp
cmpsl
sbb
add
aam
or
cmpsl
std
adc
xchg
dec
icebp
leave
in
mov
xchg
jae
jno
sub
cmpsb
pop
mov
add
iret
out
aaa
dec
rcl
pop
insb
mov
jecxz
push
insl
test
adc
andb
dec
push
fisubl
pop
testl
mov
inc
ljmp
xchg
out
jno
mov
fstl
jecxz
sbb
scas
data16
nop
pusha
lock
sub
sub
pop
arpl
dec
movsb
sub
jge
sbb
xchg
rorl
push
aam
jbe
lea
mov
add
insb
and
sub
test
mov
lods
inc
test
xchg
sub
xor
fbld
mov
sbb
sub
lds
pop
inc
add
out
jnp
pop
adc
mov
fcompl
mov
fcoml
jge
and
cmp
aas
arpl
or
in
sub
lods
pop
dec
jo
and
sbb
mov
push
xchg
fmul
sbb
xlat
mov
popf
and
cmc
cmp
xchg
xchg
in
jle
inc
addr16
inc
mov
inc
repz
dec
aas
push
mov
and
or
sti
test
xor
mov
in
add
pop
mov
aad
jmp
loopw
fnstsw
push
repnz
dec
cmc
jne
loope
adc
int3
ss
sbb
cld
test
mov
ret
mov
ljmp
push
add
popf
or
or
gs
mov
or
add
mov
add
inc
stos
pushf
iret
aad
pop
bound
lret
lock
ss
sub
leave
cmp
sbb
ja
inc
sub
pop
scas
ljmp
and
cmpsb
jle
rcr
gs
pusha
in
lahf
push
push
ljmp
cld
sub
pop
cwtl
jb
add
cli
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
pushf
rorl
js
jle
js
push
in
call
add
cmp
or
mov
js
mov
or
scas
loope
fildll
push
sbb
scas
dec
mov
or
stos
fiadds
inc
repz
lods
test
rclb
cmp
movl
scas
shll
insb
jp
jb
stos
inc
mov
mov
mov
add
in
out
xor
int3
add
dec
ret
mov
pop
movsb
xchg
insb
inc
jae
pop
loopne
dec
ret
fs
cwtl
lea
pop
inc
dec
int3
addb
cltd
rol
push
or
mov
rol
push
in
test
jecxz
cmp
add
sbb
test
pop
mov
in
ljmp
inc
cmp
mov
sub
stc
xchg
ficompl
cmp
in
mov
jb
ljmp
nop
idivb
lods
fs
lret
sbb
std
pushf
lods
fstpl
cmp
and
test
sub
testb
mov
ja
xchg
ja
stos
out
out
js
pop
stos
mov
leave
adc
std
shrl
inc
das
jg
in
stos
pusha
dec
xchg
aam
cs
push
iret
icebp
push
dec
dec
sti
mov
call
cli
xor
jno
ret
push
sub
flds
mov
fs
mov
dec
sub
pop
pop
mov
lret
cld
inc
out
jge
js
jg
imulb
xchg
dec
sub
dec
mov
pop
or
negl
fwait
jae
emms
icebp
scas
mov
cld
imul
into
or
loope
loopne
xchg
xchg
imul
scas
enter
and
lret
ret
add
ss
test
jne
push
out
loop
adc
je
sbb
push
adc
xchg
push
push
nop
lods
outsl
test
scas
in
mov
dec
cmp
or
ja
dec
jbe
adc
dec
push
rolb
scas
fs
out
mov
nop
push
fsts
xor
movsb
push
arpl
cmp
cmp
insl
add
mov
add
inc
mov
sub
jo
or
xchg
leave
rcl
mov
xchg
dec
popa
icebp
rclb
imul
mov
jmp
lret
ret
vpand
ret
subb
or
movq
jle
js
cmpsb
add
cmp
jnp
mov
je
hlt
call
push
adc
rolb
addr16
addr16
push
cmp
sbb
push
adc
sub
iret
mov
xor
jno
sub
pop
add
or
out
bound
stos
push
pop
adc
push
dec
pop
test
repnz
out
mov
imul
std
out
sahf
xor
mov
inc
or
jo
add
push
add
xor
xlat
or
test
xor
sbb
xchg
sbb
cmpsb
cmc
ret
jecxz
sbb
fiaddl
add
jmp
int3
push
testb
incl
inc
dec
jge
or
stos
ret
pop
mov
mov
in
std
dec
push
mov
sub
sbb
out
dec
fidivl
add
into
adc
jns
or
fs
sbb
pusha
imul
fbld
inc
into
leave
aam
sbb
enter
dec
aas
push
sub
fld
mov
mov
or
in
pushf
leave
jmp
adc
das
mov
mov
in
iret
xlat
sar
jecxz
int
and
into
fucom
es
pushf
les
popf
pop
mov
les
fwait
mov
mov
mov
jecxz
jecxz
inc
fdivrs
adc
fldcw
les
inc
icebp
jg
inc
idivl
pop
pop
mov
sti
cmp
flds
adc
out
mov
mov
jne
push
xchg
orl
adc
xchg
test
or
pop
loopne
dec
rcr
scas
rorl
mov
pop
fildll
cli
les
lea
sub
inc
mov
cmp
jns
pop
dec
ja
mov
inc
movsb
jg
fdivl
std
pop
jns
adc
dec
dec
loop
jne
pop
mov
aad
mov
je
shrb
xchg
fnstsw
stos
xor
sub
dec
jnp
js
movhps
sub
jmp
test
adc
fs
mov
mov
xor
and
pusha
cmpsb
enter
shll
adc
pop
push
xchg
ret
xchg
div
in
cmpsb
js
and
or
or
insb
pushf
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
iret
xchg
push
sbb
js
jle
js
aaa
in
shl
divl
ret
aas
call
pop
pop
jg
sbb
jmp
sti
mov
sub
pop
andl
jp
pushf
or
add
ss
pop
clc
sahf
inc
popa
ja
pop
loopne
push
lock
mov
rcl
movl
add
fists
pop
push
pmulhuw
fs
mov
pushf
aam
mov
out
ljmp
mov
adc
vpsubusw
mov
sub
adc
movsl
lret
insb
ret
cwtl
cltd
scas
jecxz
daa
clc
pop
sarl
mov
hlt
clc
fldcw
xor
into
aam
mov
cs
jo
cmp
mov
and
iret
dec
das
test
lods
outsl
add
shld
add
pusha
adc
pop
adc
andl
and
bound
and
daa
lea
add
or
and
out
push
inc
insl
pushf
xlat
and
lret
sub
and
push
jo
ficoms
xchg
cmp
or
push
push
mov
xchg
cmp
push
ja
addl
fcmovne
pop
ror
sti
rclb
lods
inc
xor
dec
xchg
es
inc
cli
jo
jo
pusha
stos
sub
cmp
jo
cmc
fisubl
xchg
testb
jae
xlat
cmp
xchg
push
adc
xor
bnd
scas
sbb
aas
push
shr
xchg
and
cld
icebp
xchg
test
rolb
adc
pop
ficomps
lcallw
sbb
jo
pop
cmp
xchg
lock
push
add
mov
mov
xlat
mov
leave
jns
jo
adc
aad
adc
add
es
mov
push
ljmp
pop
push
out
pop
push
inc
test
add
fs
lret
lcall
and
lret
in
xor
push
adc
or
cmp
aam
xchg
lods
mov
lea
int3
xchg
xlat
pusha
addb
cltd
mov
cmp
lcall
out
les
lock
lods
mov
stos
xor
movsl
test
enter
rorl
scas
sarl
xlat
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
sub
jp
adcb
js
jle
js
sti
mov
xchg
aam
imull
xor
pop
or
jl
push
ret
add
fs
pop
je
jle
iret
outsl
cmp
sub
or
mov
push
jl
dec
and
arpl
or
fstl
out
dec
dec
xchg
icebp
imul
and
rcrl
or
out
mov
sbb
aad
aas
sbbb
outsl
cli
mov
push
xor
nop
sahf
and
push
sbb
insl
mov
sbb
arpl
mov
sub
xor
sbb
xchg
mov
pop
mov
adc
sbb
lret
daa
and
pop
ret
fstl
roll
xlat
and
jo
ret
xlat
imul
lock
mov
repz
into
repz
shr
mov
lret
jno
push
jo
popf
enter
fsubrs
sbb
cltd
push
clc
push
adc
testb
adc
shll
jno
arpl
lods
and
js
jmp
mov
and
mov
jle
addl
jmp
imul
or
adc
adc
subb
jg
xchg
fmuls
aam
cltd
hlt
jnp
rorl
scas
jnp
sub
mov
loope
sbb
mov
xchg
pushf
cmpsl
iret
lods
mov
inc
lret
mov
xlat
mov
and
cld
rcll
cmc
pop
push
xchg
lret
leave
int
inc
inc
jnp
cmp
out
leave
add
and
jo
jp
pop
inc
or
lahf
clc
jmp
data16
test
add
arpl
mov
repnz
lcall
xchg
push
cmp
fsubrl
pop
adc
sub
xchg
fcmovnbe
xchg
jns
cmp
in
movsl
push
or
sub
mov
int
xchg
nop
xchg
xlat
sub
sbb
sub
pop
es
push
sbb
ret
push
xchg
sub
aad
dec
cmp
call
jo
pushf
idiv
cli
stos
ds
es
test
jp
js
pop
inc
mov
rorb
cmpsb
pop
loope
inc
cmpl
sub
fistpl
fsts
sub
test
xlat
jbe
pop
pop
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
xor
dec
insw
adc
xchg
jle
js
repnz
daa
push
jle
pop
lret
jno
adc
andl
push
push
mov
leave
scas
iret
insl
les
fsubs
aaa
stos
clc
into
jmp
dec
mov
or
nop
outsb
repz
pop
sbb
imul
adc
push
out
mov
jge
out
inc
out
int
sub
or
rcrl
rcr
inc
adc
bnd
out
xor
fcoms
out
add
lods
sbb
mov
leave
into
cmpsb
orb
adc
dec
push
xor
xor
mov
mov
ljmp
pop
lea
pop
lds
cmp
inc
iret
sub
test
add
xchg
sub
xor
pusha
cmpsl
inc
jno
das
add
fcomps
add
pop
inc
es
push
mov
pop
xor
outsl
mov
iret
out
jecxz
cmp
cmp
bound
dec
push
movsb
jp
out
dec
push
rcr
jg
test
les
sub
das
loop
lret
out
out
add
lret
shlb
mov
cs
inc
out
leave
xor
test
std
insb
fmull
inc
out
sbb
fimull
mov
std
clc
gs
cmp
push
inc
pop
dec
pop
and
dec
xchg
inc
push
in
cmp
dec
cmp
or
pop
pop
sub
inc
inc
inc
pop
sbbb
sbb
inc
mov
das
call
pop
repnz
test
sbb
jo
cmp
ret
sbb
jg
mov
inc
push
xor
cmpb
mov
loop
mov
jbe
test
add
dec
imul
pop
mov
sub
add
mov
xchg
add
sbb
rcll
xchg
add
push
aam
pop
cmpsl
inc
pop
push
mov
inc
orb
jns
cmpsl
inc
mov
test
cwtl
push
out
ret
fldl
pop
inc
popf
pop
add
mov
jp
inc
aam
lahf
inc
addr16
test
or
dec
sub
in
fwait
ds
lods
lcall
jns
bound
stos
mov
sahf
or
lock
cmp
sub
cmovns
inc
dec
xchg
dec
lds
outsl
je
push
in
dec
cmp
cmpb
xchg
shlb
dec
fs
push
push
fwait
mov
loopne
push
push
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
insb
fwait
adc
js
push
and
std
stc
pop
push
gs
es
je
cmp
popa
ljmp
adc
lock
jmp
int
mov
mov
arpl
pop
push
repz
dec
ljmp
push
adcb
lods
add
xor
jl
push
push
sbb
xchg
cltd
mov
sahf
push
aas
sub
push
movsb
push
sbb
loopne
es
addl
xor
pop
inc
pusha
and
aam
neg
int
ret
or
aaa
jo
sbbb
and
loop
sahf
inc
pop
push
mov
ret
out
mov
daa
xchg
xchg
sbb
mov
cltd
cli
sbb
fstpl
and
jns
dec
in
xchg
mov
pop
adc
lret
push
aad
xor
mov
push
jle
shrl
sub
dec
les
fildll
into
or
sub
lret
cli
push
aad
sbb
hlt
out
jno,pn
xor
stos
jae
adc
les
outsl
adc
movsb
cwtl
fwait
add
push
jmp
movl
add
movsb
inc
ffreep
mov
adc
inc
push
pop
or
mov
imul
enter
pushf
dec
lods
in
jl
pop
mov
xor
sbb
stos
mov
add
js
notb
outsl
das
inc
insl
xchg
pop
fsubrl
fstpl
dec
lock
in
mov
jo
and
aaa
add
adc
sub
stos
inc
push
int
dec
mov
shrb
movsb
arpl
or
repnz
repz
push
add
push
inc
ror
insl
cmp
push
imul
sbb
mov
mov
fildl
test
xor
pop
mov
xchg
jp
lret
outsl
and
dec
les
pop
lds
and
fcmovne
lret
adc
gs
ljmp
pop
jo
addr16
sahf
frstor
out
xabort
fcomip
jp
popa
imul
sahf
xchg
sahf
addr16
mov
stos
push
or
mov
pop
aas
xor
jmp
jb
inc
cs
repnz
jg
inc
cs
mov
shrb
pop
icebp
mov
cwtl
cmp
arpl
mov
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
ret
daa
push
js
jle
js
les
push
adc
fisubrl
mov
inc
call
push
testl
add
xchg
addl
mov
bound
mov
stos
imul
sahf
xor
rcl
mov
stos
xor
callw
fists
lret
mov
call
aaa
xor
adc
iret
mov
xchg
lds
mov
or
ljmp
xorb
ja
jbe
ret
sub
jb
int
push
data16
jno
xchg
adc
pop
xor
dec
outsl
rclb
std
les
mov
and
loope
mov
mov
push
mov
loope
sbb
in
pop
add
jb
dec
rorb
es
subl
dec
std
loop
jo
sarl
and
inc
inc
cmp
jo
or
lcall
jmp
xchg
push
loop
pop
addb
in
shr
icebp
outsl
stos
push
shlb
gs
adc
sti
shlb
cmp
pop
mov
mov
cmp
inc
and
xor
cmpsb
out
pop
cmpsl
dec
mov
pop
jno
aaa
and
addl
push
clc
dec
push
lods
lock
inc
arpl
out
adc
mov
push
xor
cld
add
push
xchg
sti
jo
scas
cmp
pop
mov
push
lret
je
arpl
sub
repz
sbb
push
das
sub
lcall
mov
xchg
mov
inc
mull
clc
movsl
mov
mov
pushf
in
test
xlat
dec
dec
call
xchg
rep
cwtl
int
push
hlt
mov
xchg
je
xchg
pop
sub
stos
jb
ret
notl
push
push
pushf
mov
xchg
xchg
or
bound
and
mov
bound
popa
ja
xor
shr
mov
aad
insl
cli
mov
jmp
popf
push
inc
jb
adc
jecxz
push
rclb
adc
gs
xor
push
subb
xor
bound
je
inc
push
nop
aad
sbb
das
ficoms
xor
cs
jp
aas
mov
dec
pop
inc
adc
subb
insl
int
or
in
movsw
jp
fistpl
xor
adcl
test
test
les
imul
popf
xchg
cmpsl
mov
aad
cltd
jbe
addr16
or
clc
rcll
adc
aam
xor
lods
fs
xchg
je
dec
sarl
jg
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
repz
jle
js
outsl
es
cmpsb
adc
shlb
jmp
lods
and
and
subb
cwtl
ds
cs
pusha
mov
stos
xchg
and
ljmp
xchg
cmp
fimuls
mov
adc
pop
inc
cmp
push
mov
leave
adc
inc
arpl
jecxz
mov
cltd
inc
cmp
jp
mov
cli
int
push
mov
pop
cmp
mov
gs
sub
pop
cmpsb
icebp
jmp
and
into
movsb
cmpb
xor
pop
lods
and
cwtl
repz
test
lret
movsl
js
inc
jmp
loopne
inc
jae
sbb
pop
or
imul
stos
outsl
mov
jbe
push
dec
jns
fists
push
in
push
les
xor
stos
dec
lods
jle
cmp
xor
push
repz
scas
js
cmp
cli
sbb
xchg
pop
and
add
mov
adcb
or
dec
jmp
test
and
sbb
xchg
cmpsb
test
shll
xchg
xchg
push
sbb
lds
push
rorl
adc
dec
sarl
arpl
push
push
cltd
dec
ret
inc
cmp
push
xlat
inc
imul
shll
sbb
and
clc
shl
scas
mov
les
fwait
ljmp
test
out
jge
jmp
jnp
mov
push
mov
mov
pushf
xorl
std
lret
adc
and
mov
imul
push
mov
sub
adc
test
out
movsb
movsb
std
mov
das
inc
mov
cmc
inc
mov
fwait
jne
sbb
or
push
cmp
push
inc
jl
mov
xchg
scas
mov
dec
imul
jl
inc
ror
mov
xchg
aam
aaa
std
jg
iret
pop
sbb
das
xchg
adc
mov
mov
mov
jl
push
out
div
lcall
cmpsb
stos
sbb
pop
shl
pop
sub
fistpl
sub
dec
or
out
and
aas
outsb
jg
inc
fwait
out
int3
icebp
cmp
pop
cmp
leave
idiv
adc
fsubrl
iret
sbb
leave
in
jmp
xlat
adc
insb
addr16
xor
xchg
mov
cmp
ss
leave
xchg
popa
dec
xchg
mov
int3
es
or
sbb
ret
mov
pop
mov
push
lahf
inc
or
dec
stc
movsbl
add
add
add
mov
add
ret
int3
int3
aad
leave
roll
inc
jae
fstps
js
adc
cli
inc
add
adc
shl
into
and
idivb
imul
xor
jmp
pop
dec
mov
lds
shlb
outsb
inc
sahf
adc
push
pop
cld
imul
loop
mov
in
inc
jl
jmp
cwtl
imul
adc
and
in
pop
clc
xlat
loopne
xchg
or
jge
add
push
push
scas
out
mov
push
mov
mov
push
mov
sbb
fisubrl
loopne
insb
mov
mov
imul
mov
test
faddl
dec
xchg
add
cld
push
inc
xor
xchg
add
fld
out
out
pop
inc
mov
andl
arpl
cmpsb
push
les
outsb
out
inc
pop
out
cltd
cli
and
dec
lea
adc
jae
pop
sbb
inc
ds
and
aaa
int3
inc
fldl
je
mov
pop
sbb
ja
rcrl
xor
push
outsb
adc
pop
xorb
sbb
jae
xchg
pop
add
pop
out
decl
mov
add
xorb
jne
push
push
rcrb
dec
lods
or
pop
inc
arpl
pop
add
xorl
and
mov
cmp
mov
xchg
add
int3
js
and
je
adc
les
outsl
divb
jbe
mov
push
bound
lret
daa
dec
inc
popa
xor
dec
ljmp
jnp
hlt
xchg
mov
jmp
xchg
dec
xchg
addr16
mov
loopne
jg
xchg
iret
addr16
cmp
fwait
ret
adc
loope
insb
xchg
orb
es
mov
psadbw
pop
in
fidivrl
ss
movsb
mov
add
test
adc
ss
sub
cs
or
scas
nop
in
dec
sub
jl
push
aas
rorb
mov
push
and
rcl
pushf
popa
cmp
in
call
sub
outsb
je
xchg
lock
mov
loopne
sbb
mov
cltd
cs
sbb
pop
ljmp
faddp
sarl
data16
cmp
sbb
xchg
or
dec
cld
mov
sarl
cmp
stos
mov
dec
das
daa
lret
mov
idivl
adc
lods
pop
sbb
xchg
mov
jmp
jmp
ds
int3
lret
xchg
aam
dec
mov
jo
and
xchg
jle
js
fistpl
lgs
pop
imul
xchg
add
imul
and
clc
inc
push
aad
xchg
dec
cltd
add
out
cld
mov
mov
xor
pop
repnz
sahf
mov
dec
mov
pop
mov
cwtl
jno
popf
dec
ja
in
nop
stos
vmovaps
shl
outsl
xchg
jg
hlt
cmp
out
or
add
jg
js
cmpsl
fdivs
outsb
fnstenv
into
out
pop
mov
arpl
cwtl
ljmp
icebp
pop
cmc
in
mov
lods
mov
push
xor
and
sahf
scas
add
mov
lea
pop
sub
adc
pop
lods
xchg
popf
add
push
adc
repnz
jp
popa
push
mov
xor
stos
daa
xor
mov
pop
jno
xor
add
lea
add
dec
pop
inc
fnstsw
inc
cmp
ljmp
and
push
pop
pop
sbb
add
jl
and
pmulhw
icebp
xchg
mov
sbb
add
sub
dec
lock
and
xor
dec
cld
inc
imul
das
out
sbb
adc
xchg
sub
rclb
push
imul
pop
stos
and
loopne
js
sahf
add
jmp
jmp
addr16
cwtl
shll
lahf
and
or
lods
sbb
and
imul
or
and
sub
pop
fists
aaa
push
data16
add
jmp
jb
icebp
jno
mov
stc
inc
mov
out
addr16
popf
mov
imul
inc
xchg
ret
cmp
mov
lock
cmpsb
leave
jb
inc
dec
testb
or
mov
outsb
push
add
lock
and
and
out
inc
orl
inc
movsb
sub
adc
jg
in
fcomps
and
mov
cli
bound
out
mov
sbb
sbb
sub
mov
dec
and
jb
shll
xchg
dec
fsubp
roll
fstpt
add
fildl
xchg
imul
cltd
clc
sbb
push
les
lods
into
xor
iret
jnp
sbb
add
mov
push
cltd
pop
rclb
fiaddl
mov
jmp
and
mov
jmp
rol
iret
fcmovbe
fcmovne
mov
inc
clc
outsl
xchg
and
xchg
jle
js
xchg
pop
je
sbb
addr16
insl
jae
in
or
popf
shl
inc
sbb
cmc
ret
and
pop
xor
sahf
mov
pop
mov
pop
arpl
sar
inc
vcvtpd2psx
jmp
jo
dec
pop
out
testl
ljmp
enter
dec
cwtl
adc
data16
mov
pop
sbb
repz
in
push
repnz
push
aam
hlt
subl
testb
movl
and
inc
notb
pop
add
out
xor
das
pop
xor
xchg
pop
pop
lds
sbb
jl
in
movsb
push
fidivrl
scas
pop
movsb
add
dec
inc
jbe
nop
xor
fstpl
or
aam
jl
cwtl
adc
cmp
push
xor
xchg
aaa
sub
fbld
shlb
xchg
repnz
pop
mov
xchg
mov
or
js
fisubl
lcall
cmp
and
pushf
fisubl
pop
or
jmp
adc
lret
sub
cmp
mov
subb
mov
sbb
sbb
sub
sarl
add
arpl
inc
into
mov
jp
ja
inc
lods
mov
push
or
fisubrs
add
mov
loopne
inc
and
loope
incl
dec
js
mov
push
mov
sub
mov
out
daa
dec
cltd
adc
mov
push
test
ss
sbb
notb
in
pop
addl
ret
push
pop
jmp
xor
ficoms
sub
jno
cmp
clc
js
ja
fisubl
aad
xor
in
enter
dec
cmp
aas
lcall
inc
insl
cmp
mov
or
mov
jp
push
mov
testb
sets
jecxz
mov
cmp
push
in
int3
rorl
xchg
adc
add
and
cwtl
shlb
mov
sarb
mov
add
mov
enter
out
push
je
push
and
pop
xchg
popf
decb
inc
int
mov
jnp
scas
inc
cmc
scas
fwait
outsb
imul
dec
fisubl
incl
insb
mulb
xchg
mov
jno
pop
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
lea
xor
sbb
idivb
mov
push
test
xor
inc
test
sti
xchg
aas
inc
in
adc
sub
pushf
push
fs
out
dec
add
xchg
mov
inc
adc
add
dec
and
jl
inc
cmp
ret
movsb
xor
xorb
lahf
cmc
mov
push
push
sub
jbe
push
mov
adc
sub
lods
inc
mov
mov
pop
stos
and
in
aam
add
lret
in
test
jge
jl
in
cs
mov
sbb
pop
movsl
mov
lock
imul
cmpsl
cltd
popf
fcmove
add
jmp
xchg
xor
cli
and
mov
pop
inc
insl
repz
shrb
popf
xchg
scas
jle
sbb
sbb
jecxz
das
fisubrs
outsb
lea
cmpsl
in
jp
jno
adc
cmpsb
cwtl
sub
sbb
mov
cli
imul
hlt
jmp
push
popf
es
roll
cli
mov
xchg
mov
stos
sub
mov
xchg
arpl
cmp
cli
pop
mov
mov
imul
outsl
imul
cwtl
pop
jb
xchg
mov
jns
mov
out
popf
inc
sbb
popa
sbb
cmp
rorl
fistpl
jae
jns
inc
pop
mov
push
jecxz
outsl
xor
out
lcall
neg
fs
subb
pop
subl
rcrl
jge
inc
xchg
or
arpl
xor
xchg
movsl
or
hlt
xor
movsb
sub
mov
or
xor
cli
das
sbb
mov
cmp
adc
lds
cmc
or
cmovo
mov
mov
sub
fwait
cltd
push
cmp
push
sti
rcll
insb
mov
loope
das
xchg
or
xor
clc
cmc
xor
icebp
fcmovnu
subb
lret
dec
mov
push
enter
movsb
orl
and
or
xor
inc
popa
sub
sub
idiv
or
repz
notb
sbb
jl
popf
sbb
add
mov
das
leave
out
dec
rorb
pop
sahf
sbb
push
cld
adc
cmp
test
std
dec
mov
addb
xor
insb
pop
mov
jmp
add
mov
add
ret
xlat
leave
rcr
rcr
xlat
cmp
fiadds
jg
xchg
jle
js
int
xchg
adc
pop
xor
adc
lret
iret
xchg
test
out
cmp
jo
out
int3
cmp
sbb
add
xchg
call
inc
sub
inc
inc
ljmp
into
xchg
push
mov
les
lcall
adc
inc
jp
rcr
inc
cmp
rcrb
cmpsl
ljmp
inc
int
cmpsb
sub
pop
daa
jge
shrl
int3
hlt
je,pt
mov
lds
xor
cmpl
xor
loop
sbb
repnz
cwtl
icebp
lods
in
add
jl
ret
in
pop
xchg
fstpt
sub
popa
sub
push
push
adc
sub
mov
jmp
dec
push
fcoml
xor
lock
icebp
fmull
xor
cmpsl
inc
sbb
mov
subl
fildll
cmp
repnz
mov
in
mov
fs
add
lods
movsb
add
int
aas
xchg
xchg
icebp
pop
sarl
pop
imul
cmpl
inc
popf
cmpsb
movsl
int
mov
dec
push
ja
imul
mov
sbb
insl
clc
push
pop
call
ret
or
or
cmp
push
sbb
repz
sub
mov
in
sbb
inc
dec
andb
xchg
fsts
cs
ljmp
cmp
test
and
jl
and
mov
mov
pusha
std
jmp
cmc
test
cltd
push
xchg
inc
fdiv
sub
in
iret
loop
pusha
add
cmpsl
sub
sub
lea
or
or
mov
data16
lods
pushf
sub
iret
push
mov
cmp
cmpsl
fidivrl
pop
notb
sub
sbbl
add
xor
pushf
ret
outsl
or
xor
mov
scas
sahf
out
jno
int
adc
mov
mov
sbb
sbb
push
out
xor
dec
fsub
ljmp
in
sub
int
and
aas
sub
test
push
test
dec
or
push
dec
andl
or
push
adc
repnz
stos
inc
gs
cmp
std
lock
stc
and
mov
fsubr
lahf
lret
jne
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
rol
rcr
jle
sub
xchg
jle
js
aam
inc
outsl
pop
mov
jb
shld
lcall
pushf
mov
push
mov
adc
push
adc
ret
sarb
sar
sbb
iret
cmpb
ficoms
rcrb
push
aas
shl
aaa
lret
mov
dec
adc
sbb
shll
fisttpl
sub
sub
cmc
sub
cmpsl
cwtd
shl
jne
push
leave
dec
sar
xchg
lods
pop
incb
jae
gs
add
xchg
repnz
adc
cmp
roll
pop
pop
add
dec
out
and
daa
fwait
mov
xchg
xlat
xor
cld
arpl
das
test
jecxz
xor
movsb
adc
adc
adc
popa
cmp
add
xchg
call
je
hlt
movsl
fcomip
push
add
fistpll
into
pop
sub
ret
lods
lods
notb
fiadds
push
push
fistpl
add
ret
in
lock
iret
dec
cli
pop
mov
jmp
xchg
push
out
mov
dec
mov
xchg
lods
movsl
xchg
or
mov
sub
push
addr16
icebp
adc
scas
leave
in
scas
cmp
addr16
mov
add
adc
mov
xchg
popa
push
dec
cmp
out
sbb
lret
and
test
dec
mov
sti
inc
ss
mov
shrl
push
sbb
add
addr16
sbb
dec
cmp
pop
out
and
dec
leave
andb
addr16
mov
outsb
mov
test
or
sub
pop
or
inc
outsl
jne
insb
hlt
push
add
and
pop
and
cmp
xor
or
bnd
or
ljmp
sub
lret
ret
mov
aam
mov
fstpl
cli
ljmp
stos
or
in
xor
xor
int
cmpsb
xchg
push
in
lret
outsl
sahf
fdivs
pop
pop
clc
or
dec
push
push
cmpsb
jae
fistpl
pushw
lret
jne
dec
sahf
and
push
jle
jb
lret
xchg
int
mov
outsb
inc
rcll
mov
and
xchg
cmp
test
pop
mov
roll
insb
popf
sub
mov
push
lahf
cmc
dec
pop
add
push
jnp
repnz
push
pop
xchg
dec
and
pop
stc
outsl
ret
xor
or
lea
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
outsl
adc
data16
jg
add
jb
sbb
jns
fnstenv
mov
pop
lret
in
push
pop
dec
sbb
mov
or
pop
icebp
add
stc
push
gs
aad
push
mov
mov
stc
insl
aaa
push
bnd
test
push
push
mov
dec
cmp
push
loop
push
pop
add
aad
fs
mov
out
sbb
pop
shrb
jge
mov
inc
mov
rcrl
adc
jns
mov
jbe
scas
and
xor
mov
xchg
popa
test
xorl
push
pop
neg
fadd
mov
push
pusha
jns
mov
xchg
arpl
jne
in
out
sub
mov
imul
bound
stc
inc
and
add
jge
xor
pop
repnz
fisubrs
lret
mov
lds
adc
rcrl
mov
fisttpll
pop
pushf
sbb
clc
daa
out
adc
sub
xchg
lcall
pop
mov
jae
xchg
pop
or
stc
jnp
mov
mov
push
lock
push
sub
std
xor
lret
ret
ds
push
inc
jnp
push
rcrl
test
jnp
sub
jbe
repz
repnz
sub
dec
in
adc
cld
sbb
in
sti
cmp
fimuls
in
rcll
mov
int
je
addr16
sahf
lcall
or
mov
fdivrs
pop
mov
rcrl
push
cwtl
xlat
push
mov
mov
mov
pop
scas
jg
icebp
sub
push
lcall
or
fldcw
addr16
lahf
push
stc
out
mov
xchg
fistps
push
or
andb
dec
adc
mov
cmpsb
xor
mov
mov
mov
fs
cld
and
notb
jbe
sbbb
dec
cmp
and
add
cmp
aad
aad
popa
adc
mov
xor
add
push
xor
adc
rcrb
xor
cmp
push
fidivs
sbb
pop
mov
cmp
fildl
andb
stos
mov
mov
loop
sbb
xchg
fisubl
add
out
test
sahf
mov
lret
js
mov
dec
push
jne
pushl
out
jg
lret
add
shl
xchg
lds
cmpsb
push
lret
lahf
xor
or
sub
sub
test
test
bts
jp
mov
das
fwait
mov
jg
popf
cmp
int3
dec
or
xorb
stos
mov
ja
jb
sbb
fsin
xchg
repz
iret
and
cmpsb
push
add
std
sti
test
lea
dec
or
mov
mov
lcall
or
sub
and
aaa
mov
rclb
into
adc
jbe
pop
leave
pop
inc
ficoml
aam
xchg
mov
mov
adc
mov
xchg
popf
mov
sbb
fsubrs
push
scas
jg
xchg
mov
scas
movsb
mov
fisubl
jo
or
xor
mov
iret
mov
or
or
dec
dec
das
lock
divl
call
jne
movsl
mov
inc
push
pop
dec
push
mov
gs
adc
mov
cli
mov
push
dec
pop
outsl
test
cwtl
mov
cmp
rcrb
push
hlt
jb
inc
into
inc
sbb
sub
out
cmp
xchg
push
test
mov
imul
shr
stc
add
cmp
inc
js
hlt
mov
mov
add
in
lahf
sub
xor
mov
fwait
mov
lds
lods
cli
add
adc
mov
jae
push
subb
xchg
push
or
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
sbb
xor
add
cli
int3
inc
sbb
or
inc
dec
pop
ret
cmc
icebp
mov
icebp
xchg
rolb
fisttps
test
rorb
fbstp
push
dec
fldt
iret
cmp
movsl
andl
outsl
mov
and
push
rclb
push
cmp
cltd
dec
push
shl
pop
out
incl
popa
call
inc
into
popa
mov
pusha
xor
scas
out
mov
sub
rclb
decb
mov
mov
cwtl
js
in
sub
pop
push
sub
mov
das
mov
inc
or
or
out
jo
lahf
dec
mov
int3
out
and
aaa
jle
push
mov
cmp
xor
je
mov
fistpll
sub
inc
push
setne
pop
and
xchg
cltd
add
test
sbb
icebp
pop
testb
pop
cmc
mov
xchg
adc
add
mov
inc
icebp
fwait
push
adc
and
and
mov
aad
insb
mov
inc
shlb
pop
rcll
rcll
cmp
inc
inc
movb
fiadds
sarb
jg
xchg
mov
sahf
clc
loop
test
jno
hlt
pop
cmc
cmpsb
aas
lds
and
mov
negl
xchg
jl
rcr
push
mov
repz
mov
negl
fsts
out
cmc
test
xor
mov
pop
out
pop
mov
dec
js
pusha
adc
adc
outsl
or
shl
in
sbb
mov
repz
cwtl
jp
mov
inc
je
and
adc
or
xor
xlat
mov
xchg
nop
es
pushf
lahf
push
lods
sti
loope
ret
imul
xchg
mov
cltd
out
mov
push
les
repz
pop
mov
ja
mov
mov
das
push
adc
daa
cli
mov
pop
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
decl
aaa
jg
jnp
js
mov
jne
rorb
mov
cmpl
push
or
sbb
or
push
in
movsb
mov
or
sbb
push
inc
shll
and
sti
xchg
lea
out
stc
jb
xchg
adc
pop
push
jmp
dec
cli
xchg
pop
mov
movsl
xchg
sbb
mov
pop
mov
rcrb
xchg
sbb
pop
out
sbb
xlat
std
outsl
stc
jecxz
and
dec
cmp
or
sbb
fadd
dec
std
scas
sub
sub
aaa
xchg
fidivrs
inc
call
sbb
clc
jp
daa
mov
in
andb
or
sbb
insb
cmp
out
mov
sub
mov
jnp
jg
rcrl
jle
jmp
mov
cwtl
inc
repnz
xchg
jecxz
push
in
pop
mov
inc
out
stos
inc
mov
sub
test
or
mov
lods
pop
mov
aaa
adc
cmp
mov
daa
imul
cwtl
xchg
jb
repz
add
cltd
int
rorb
add
push
push
jg
test
jge
pop
xchg
add
cmp
fdivr
nop
aaa
cmpsl
ja
jle
sti
sbb
dec
pop
jae
sbb
cmp
jg
rorb
jl
mov
jae
jo
jmp
inc
pop
in
ja
adc
cmp
sbb
inc
test
xor
pop
outsb
cmp
push
mov
fidivrs
mov
xchg
push
sahf
or
aam
xchg
inc
outsb
sbb
repz
mov
scas
cwtl
enter
sarb
je
popa
xor
sbb
pushw
mov
xchg
dec
imul
xor
arpl
fisttpl
setne
xor
movsl
popf
movsb
cltd
sub
jae
js
mov
jae
push
adc
cli
add
sti
fildll
loope
ja
cmp
push
jmp
pop
rolb
and
mov
loope
addb
mov
out
movsl
cs
lea
jecxz
cwtl
push
gs
xchg
enter
cmp
inc
stos
insl
stos
cmpsb
dec
jnp
dec
jl
fists
add
cmp
data16
out
xchg
dec
mov
aaa
mov
pop
jae
pop
fwait
pusha
sub
inc
lods
push
xor
roll
sar
sub
cmp
and
dec
push
sbb
pop
and
gs
jns
je
enter
stc
mov
std
icebp
pop
popl
les
mov
iret
outsl
ljmp
or
mov
mov
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
call
xor
js
jle
js
mov
es
mov
xchg
sub
lea
xchg
movl
inc
arpl
bound
mov
popa
fdiv
pop
mov
arpl
mov
mov
xor
aas
lea
test
pop
mov
lcall
call
push
pop
loopne
popa
and
mov
xlat
mov
mov
movsb
sahf
push
jle
repnz
sub
cmc
mov
xor
jb
cmp
add
std
xchg
pushf
pop
xchg
mov
xchg
sbb
fists
inc
arpl
pop
leave
test
jmp
clc
les
in
dec
sub
adc
cli
insl
lods
cmp
xchg
aaa
inc
test
lods
pop
fcomps
jg
nop
out
and
push
and
pop
and
cmp
push
add
xchg
sub
iret
fcom
pop
test
or
insb
stos
lahf
push
xor
fisubs
jge
pop
and
gs
popf
js
push
sti
push
xchg
push
sbb
fcomps
mov
and
clc
xchg
in
cwtl
fnstenv
mov
stos
in
push
repnz
xchg
sub
and
xor
out
icebp
mov
insb
in
clc
dec
sbb
bound
mov
jo
cmp
xchg
xor
jbe
insb
pop
iret
enter
add
fdiv
fsubrp
jbe
jns
sbb
sahf
push
test
das
clc
jle
test
movsb
lret
push
fiadds
or
jno
push
pop
es
inc
mov
fisttpll
sbb
test
pop
popaw
pop
das
jle
push
rol
es
icebp
mov
loopne
sbb
cli
sub
xchg
mov
ss
sbb
xor
jle
movsb
jno
inc
sub
incb
jbe
and
repz
jg
pushf
lret
push
pop
cmpl
dec
fdivrl
test
jbe
js
mov
xchg
mov
sub
sbb
outsb
mov
sub
xchg
popa
jle
xchg
mov
xor
in
jmp
call
mov
insb
stos
and
mov
out
scas
ret
mov
mov
dec
dec
pop
cmpsl
mov
and
addl
cld
sub
jmp
sbb
fcmovu
mov
shrb
int3
pop
rorb
sbb
fstl
jnp
or
aas
cs
rcr
mov
movsb
aaa
aaa
add
call
aam
into
mov
mov
inc
jecxz
jne
stos
pop
or
xchg
mov
test
aad
bound
icebp
sahf
xor
movsb
jg
ret
scas
filds
lcall
adc
lcall
cltd
cld
mov
sub
gs
push
or
sub
stos
aad
outsl
ss
adc
lock
sbb
testl
imul
cltd
cmp
jne
jmp
jmp
int3
les
aam
ror
mov
mov
js
jle
js
testb
add
mov
sbb
mov
dec
jo
dec
sbb
fucomip
pop
and
adc
adc
les
add
adc
and
mov
cmp
pushf
insb
push
cmp
mov
push
cmp
cmp
or
mov
pop
fistl
xlat
jno
jle
cmc
jle
dec
sub
stc
ret
test
mov
dec
jno
pop
daa
daa
cmp
call
lret
fsts
ljmp
lret
xor
pop
xchg
sbb
out
loopne
test
test
jnp
sbb
jle
mov
mov
mov
push
vhsubps
lret
fldl
enter
stos
cmp
jo,pt
xchg
cmp
jo,pn
mov
scas
xchg
add
shll
enter
mov
addr16
in
call
xor
shlb
push
cmc
movsl
pop
xchg
js
push
xchg
les
mov
dec
aad
jl
icebp
jecxz
call
nop
inc
and
in
push
sti
jae
lahf
mov
mov
push
or
push
adc
push
and
cmp
lea
cld
repz
test
push
arpl
jnp
lahf
or
je
addb
dec
movsl
push
sub
xchg
mull
mov
xor
sub
push
in
mov
ficompl
ret
test
incl
add
and
lods
std
mov
mov
xor
xor
repnz
rcll
jb
and
and
hlt
outsl
xchg
sub
ss
add
test
popa
hlt
xchg
dec
ja
pushf
pop
mov
into
neg
jb
xor
adc
stos
out
roll
aad
sbb
mov
inc
mov
xor
adc
mov
inc
cmp
mov
cmp
xor
xor
jo
fdivr
jle
loopne
sub
jne
cmp
xor
bound
outsl
aad
jmp
stc
xchg
bound
sub
mov
cmp
std
sub
mov
stos
call
push
cmp
and
fldcw
dec
lret
pop
inc
jnp
pop
sub
or
xchg
rcrb
add
sub
add
and
cmp
cmp
std
mov
test
pop
push
ja
stos
push
repnz
pushf
and
mov
idivb
push
dec
dec
sub
arpl
bound
xchg
test
pop
mov
fidivrl
xchg
inc
in
mov
push
and
cli
mov
xor
bound
mov
inc
lods
mov
shrl
decl
jne
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
dec
pop
jg,pt
jnp
js
test
inc
call
mov
inc
push
mov
mov
aas
shl
addb
lahf
pushf
dec
mov
pop
dec
lahf
sbb
mov
add
xchg
stos
outsl
les
mov
inc
mov
xor
cmp
xchg
nop
cltd
jmp
js
push
sub
test
negl
sub
mov
mov
popf
gs
adc
dec
xchg
mov
scas
arpl
int
aas
jne
inc
push
push
lahf
sub
xchg
mov
pop
sbb
cmp
mov
pop
mov
jle
roll
xchg
ljmp
fcompl
loope
ljmp
shl
mov
aaa
or
xchg
sbbb
scas
outsl
jl
add
sbb
daa
push
ret
je
fnstsw
jmp
xchg
imul
js
es
outsb
test
test
int
xor
fstpl
dec
sub
adc
mov
incb
xor
nop
xor
add
bound
movaps
das
mov
daa
sub
insb
testl
clc
test
xor
arpl
loopne
movsb
daa
xchg
pop
insb
dec
outsl
mov
inc
add
shl
cld
mov
or
sbb
jno
cmp
jp
jb
xchg
dec
into
shl
insb
shlb
int
stc
jnp
dec
data16
add
sub
fcomip
push
pop
fistpl
lock
pop
mov
pop
xchg
bndldx
cmc
sub
ret
push
inc
ja
mov
mov
or
faddl
cld
aas
xlat
ss
xor
jbe
xorl
sbb
test
dec
out
push
jae
and
das
shrl
cltd
fwait
jbe
and
test
scas
xchg
xchg
loope
jmp
lods
sbb
jle
dec
decl
jo
je
or
sbb
bnd
xchg
adc
idivl
fstps
mov
pushf
pusha
idiv
cmp
ret
out
xchg
ror
and
stos
add
jns
sbb
inc
aam
xchg
push
xlat
inc
inc
push
pop
je
push
lods
xchg
jge
push
xchg
dec
ret
jle
pop
xor
mov
loop
scas
outsl
das
test
sahf
mov
pusha
jl
add
push
jnp
xchg
jp
push
fisttpl
rcll
inc
cmp
fmuls
jg
xchg
sub
call
mov
and
xor
mov
jbe
dec
jno
adc
in
ss
or
xchg
std
pop
lock
dec
inc
pushf
xchg
push
dec
cmpsl
dec
jl
in
out
inc
nop
pushf
in
cmp
xchg
xor
loopne
js
in
or
negl
sbb
xor
add
mov
jg
pop
sbb
popa
pushl
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
fs
adc
jg
jnp
js
xlat
cmc
sub
out
mov
movsl
add
add
arpl
mov
push
and
mov
fisttps
shr
loop
out
sbb
popa
mov
adc
fadds
popa
xorb
mov
arpl
cmp
xor
and
xchg
and
jae
mov
fld
pop
xchg
fnstcw
bound
iret
cs
sub
je
mov
push
sarb
jnp
jmp
test
nop
xchg
pop
insb
mov
stos
adc
popf
and
stc
lcall
inc
popa
out
pop
adc
je
xor
adc
movsb
add
int3
pop
pushf
xchg
push
enter
jbe
lret
imul
inc
mov
mov
mov
mov
insl
cmp
pop
adc
inc
or
sbb
cmpsb
dec
and
and
cltd
push
scas
mov
jno
adc
pop
xchg
adc
ret
sub
stc
mov
adc
or
push
in
adc
push
xchg
add
pop
xor
movswl
jo
xor
and
pop
cli
and
inc
shrl
cmpsb
sbb
out
jnp
ret
ret
lods
cmp
cmp
add
xor
xor
les
mov
das
mov
fcomip
pushf
push
push
xchg
push
inc
adc
stc
dec
sub
jl
pop
push
sub
scas
jle
lods
in
inc
inc
and
stos
mov
in
pop
sahf
and
cmpsb
sbb
out
dec
push
scas
fbstp
das
outsb
xchg
push
jnp,pn
js
lods
adc
leave
pop
aaa
cmp
enter
mov
mov
fstpt
out
je
inc
adc
cmp
pushf
or
inc
iret
push
test
sbb
cmc
pop
cmp
xchg
dec
stos
pop
movsb
inc
mov
incl
rcrb
and
cmp
cltd
repnz
mov
cmp
push
les
add
sbb
pop
out
lods
data16
pop
pop
std
outsb
dec
repnz
jg
cmp
dec
mov
push
or
ja
mov
daa
mov
mov
mov
pop
inc
xchg
insl
pop
sahf
fistps
pop
adc
mov
fisubrs
mov
add
rcrl
jge
mov
fwait
sub
inc
jecxz
push
into
into
cwtl
xor
push
movsl
push
jmp
sbb
mov
pushf
mull
cmp
das
adc
sub
adc
add
or
xchg
mov
dec
out
fnstenv
les
daa
loopne
test
lock
jg
pushl
mov
jmp
lret
rol
leave
shll
pop
int
arpl
jle
js
sub
ljmp
cmp
xchg
loopne
iret
xchg
mov
lret
hlt
mov
and
jns
or
mov
push
lods
lret
cmp
lret
push
jae
idivl
inc
pop
jbe
mov
sub
mov
loopne
jns
and
sahf
xor
fdiv
xchg
pop
mov
loop
push
adcb
dec
xchg
mov
out
add
mov
inc
fisubrs
getsec
adc
shll
dec
xchg
shlb
jnp
lea
enter
outsl
xchg
pop
mov
sub
inc
sti
push
jge
sbb
rcrb
fldenv
and
push
cltd
mov
ret
subb
adc
stos
xchg
pop
fidivrl
jnp
fs
xor
loope
out
adc
leave
subb
lds
sub
sbb
ret
fdivrs
rclb
test
and
bound
hlt
cmp
outsl
call
or
sbb
sahf
pop
and
and
jl
and
lods
or
repnz
mov
scas
rol
outsb
imulb
rorb
call
adc
xchg
or
xchg
push
sbb
sbbl
popa
adc
rorb
jmp
fwait
movsb
out
mov
cs
repz
push
mov
pop
fisttpll
lock
xlat
test
icebp
push
pop
repz
loop
sub
sbb
or
jg
cltd
pop
jb
sub
adc
push
jns
cmp
mov
cmp
gs
xchg
jle
fcomps
xchg
mov
cmpb
dec
stos
adc
es
sub
push
insb
arpl
jmp
cmpsl
jbe
or
cwtl
inc
je
inc
loop
imul
mov
scas
mov
and
add
push
shrb
xchg
push
adc
jle
data16
xchg
cmp
int3
clc
push
test
xchg
cmp
and
push
loop
mov
addr16
pop
aas
insb
jp
enter
jl
mov
mov
pop
adc
mov
sti
cwtl
and
in
dec
iret
hlt
ficoml
jle
inc
xchg
or
scas
pop
xchg
mov
add
dec
jb
loope
cmp
sar
jecxz
mov
paddsw
les
out
in
cmp
dec
xchg
mov
gs
cs
ror
adc
mov
push
ror
push
ret
mov
push
jmp
mov
sbb
pop
cltd
push
push
subb
add
jge
sub
cmp
out
nop
test
push
int3
repnz
xor
and
pop
sub
test
int3
mov
shr
add
add
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
aam
or
jg
adc
js
in
lock
dec
mov
aas
divb
inc
dec
cmp
lea
arpl
dec
or
lret
and
xchg
sarb
mov
mov
imulb
mov
fwait
call
xchg
jg
in
les
icebp
mov
adc
bound
sbb
lret
inc
outsb
mov
xlat
movsb
sar
mov
je
mov
xor
mov
int3
popf
or
or
lods
clc
jecxz
dec
cld
fcompl
cmp
lods
insl
sub
sbb
in
ret
jae,pn
cmpl
sbb
addb
pop
enter
push
daa
dec
popa
je
pop
mov
flds
mov
and
jne
icebp
jns
inc
pop
sbb
cmp
xor
mov
adc
inc
sarl
sbb
test
popa
push
ljmp
in
adc
xor
shll
cmp
mov
xor
mov
rclb
dec
out
movsb
adc
sub
sbb
add
outsb
mov
lea
xchg
arpl
lock
and
in
mov
mov
and
mulb
pop
cmc
dec
and
adc
fxch
jne
call
add
rcrl
adc
add
jp
add
je
xor
lds
or
fmull
mov
xchg
cmp
push
mov
int
iret
std
mov
loopne
dec
iret
bound
rcll
xchg
cmpl
cmpsb
sbb
jecxz
loope
jne
and
mov
push
fwait
add
push
pop
cwtl
dec
outsb
xor
jle
cmpsl
and
jmp
out
repnz
popa
mov
mov
sbb
sti
add
cmpb
pushf
lods
sub
dec
call
neg
push
fcmovnb
and
xor
clc
psrlq
iret
and
or
out
mov
cld
cmp
popf
test
add
add
add
leave
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
add
jle
lret
jg
adc
js
inc
inc
dec
lcall
adc
in
test
pop
loop
inc
mov
mov
gs
addr16
popa
push
insl
inc
xchg
loopne
movsl
mov
rclb
inc
test
jge
and
inc
ret
loope
mov
and
lds
loope
mov
stos
mov
std
or
les
sbb
or
xor
and
or
adc
or
push
fisubrs
sbb
punpckldq
inc
mov
mov
mov
xchg
adc
push
test
mov
test
std
je
and
mov
pop
mov
mov
cld
ss
xor
je
xchg
adc
ss
xor
clc
and
fadds
popl
mov
inc
ljmp
pop
fs
sbb
pop
mov
rcl
xlat
lret
stc
push
enter
pusha
sbb
jb
mov
mov
xor
xor
pop
in
inc
loop
xchg
sbb
into
dec
daa
pop
outsl
mov
xchg
xchg
or
jbe
shll
or
orb
flds
adc
push
cmp
pop
push
pop
add
sub
pop
dec
sahf
xor
std
hlt
sub
or
mov
cmp
mov
jb
test
mov
popf
stos
dec
dec
add
pop
lea
rolb
push
push
mov
xor
les
ficoms
mov
rcrb
imul
es
scas
pop
mov
insl
fwait
mov
jge
pop
xchg
in
roll
pop
inc
cmp
ret
popf
adc
sbb
and
aam
mov
dec
or
gs
xor
les
and
sub
add
int
lret
and
adc
pop
scas
cmp
lret
cmp
push
rcrl
dec
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
lock
leave
jg
adc
js
adc
cmpsl
inc
imul
sub
popa
and
cmp
int3
unpckhps
sti
movsl
test
pop
bound
and
nop
mov
ljmp
incl
rclb
pop
adc
dec
leave
cs
cmp
xorb
sub
out
sub
xlat
repnz
roll
daa
in
mov
mov
lock
ljmp
inc
roll
cmp
mov
dec
or
or
jle
cmp
pusha
dec
cwtl
xchg
or
lahf
cmovb
pushw
cmp
fsts
test
mov
inc
add
push
jmp
mov
into
out
pop
pop
inc
dec
roll
iret
and
mov
movsb
dec
dec
aaa
test
cmp
mov
mov
aad
mov
xor
addr16
test
pop
fwait
sbb
cmp
pop
mov
xchg
push
lahf
notb
or
lret
push
loopne
iret
mov
inc
pop
nop
loop
in
inc
or
and
or
mov
iret
sbb
push
movsl
fsubs
mov
shrb
arpl
into
mov
adc
das
rcrl
cmp
mov
shll
mov
lock
mov
mov
push
inc
xor
xor
dec
dec
scas
iret
pop
dec
fcoml
dec
mov
stos
sub
aas
jmp
mov
das
sub
cmpsl
cltd
xor
jnp
cmp
stc
mov
push
xchg
pop
int
mov
paddsb
in
les
sahf
daa
mov
pop
jl
loop
jg
insl
inc
and
cmp
test
andl
mov
aam
xlat
lret
xchg
mov
outsb
xchg
dec
sbb
mov
mov
leave
insl
in
cmp
or
insb
mov
mov
sbb
clc
cld
popf
or
mov
pop
ja
add
shl
pop
add
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
add
ror
jg
adc
js
fdiv
inc
leave
sahf
ja
lret
cmp
ss
ret
flds
inc
push
xor
xchg
das
mov
sbb
lock
pop
xor
adc
jae
or
mov
xor
pop
xsaves
lahf
push
shll
mov
sbb
add
or
movsb
loopne
mov
imulb
movsl
movl
loop
cmpsl
mov
pop
pop
adc
cmp
mov
sbb
lea
jns
cmpb
mov
sub
or
push
bt
sub
pop
inc
push
push
inc
daa
mov
in
mov
push
push
xor
lret
test
test
repz
cmp
or
push
adc
pop
daa
mov
repz
jecxz
push
loop
andb
sbb
xchg
add
mov
push
sub
mov
fwait
pop
scas
icebp
adcb
movsb
jno
jo
or
aad
addr16
pop
leave
sbb
bnd
test
lds
jl
test
mov
inc
out
sub
and
cli
add
lods
jecxz
mov
rolb
dec
sbb
jnp
or
xor
lcall
rorl
ret
nop
mov
xchg
xchg
mov
push
or
test
insb
test
rcrl
adc
clc
loop
in
mov
push
popw
es
xchg
scas
cmp
xchg
fimull
int3
movsb
mov
and
and
xchg
mov
addr16
fs
inc
inc
mov
mov
add
mov
pushf
repz
pop
movsb
xor
out
popf
cmp
fmulp
sar
cmp
mov
inc
cmpsl
xchg
inc
or
adc
mov
test
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
lea
dec
call
jle
js
lret
or
clc
jle
icebp
rcr
adc
xor
aaa
dec
daa
es
pop
movl
add
into
jns
sbb
icebp
or
or
stos
cld
out
stc
and
adc
push
mov
dec
sbb
mov
in
inc
dec
jno
mov
mov
jae
sbb
int3
cmc
add
xorl
std
cmpsl
and
dec
jg
adc
dec
fisttps
std
lea
inc
jne
dec
fsubl
xchg
movsb
scas
pop
ret
imul
hlt
inc
test
out
mov
ljmp
popa
loopne
fldenv
fs
enter
movsb
mov
and
or
push
mov
loope
aas
adc
inc
jno
pop
rorl
mov
pop
push
push
pop
sbb
xchg
cmp
sub
sub
in
xlat
sbb
sub
fbld
mov
cs
sbb
les
jle
insb
loop
bnd
xchg
sahf
pop
sub
addr16
je,pt
scas
xchg
mov
outsb
inc
aas
mov
shlb
dec
mov
sub
in
xchg
push
pop
mov
jae
cs
rorl
lahf
push
dec
daa
into
jp
cmp
daa
loopne
lock
cmp
mov
into
jb
xor
adc
cmp
add
pusha
dec
or
jge
shrl
jmp
and
pop
mov
lock
aam
push
jb
inc
cmpsl
cld
cmpsb
notb
lahf
xchg
pusha
mov
sbb
xchg
mov
lock
cmpsl
lock
jo
in
shrl
pop
outsl
dec
pop
imul
mulb
mov
inc
mov
xor
jp
idiv
mov
insl
sarl
push
lock
data16
push
pop
sub
xor
xchg
int3
stos
cmpsb
xchg
js
inc
mov
dec
cs
inc
push
data16
xchg
push
add
addl
pushl
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
lock
test
jle
js
add
movsw
or
fwait
push
popa
roll
outsb
push
sub
push
loop
pop
mov
xor
subb
jg
cmpsl
data16
sbb
adcl
and
dec
js
pand
rcrl
pop
mov
adc
div
pop
clc
sbb
movsl
test
movsl
popf
int3
iret
repz
lret
into
dec
insb
stos
out
movsb
mov
xor
xor
std
es
add
push
xor
xor
andb
sahf
or
mov
push
loope
insb
jne
pushf
loope
daa
fiaddl
jg
fcmovnb
jl
lahf
test
push
movsl
push
pop
cld
imul
mov
subb
gs
out
je
loopne
cmp
jnp
push
sti
adc
jo
pop
or
loope
dec
fisubrs
notb
popf
push
jae
mov
in
mov
mov
enter
mov
xchg
xor
pop
arpl
lods
ficomps
xor
xchg
dec
push
or
inc
ljmp
les
jbe
mov
xor
adc
jge
pop
and
xorl
loope
and
xor
cmp
popf
rorb
call
lahf
mov
out
lcall
out
in
pop
push
add
daa
and
scas
ret
mov
dec
jmp
cmc
fcom
adc
push
xchg
inc
xchg
fs
mov
fidivrs
xorl
xchg
fucomip
jg
rclb
cltd
sub
sub
rolb
and
push
cmc
aam
dec
or
imul
popf
inc
in
subb
push
or
out
movsl
jl
push
test
imul
mov
mov
scas
mov
jne
sti
test
mov
decb
loopne
add
sbb
add
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
add
js
jle
js
in
in
adc
push
xor
sbb
dec
cwtl
lcall
xor
mov
jl
pop
pop
sub
mov
out
mov
sahf
xor
xor
ja
and
fidivrs
mov
mov
cmpsl
push
aam
fidivrl
jmp
mov
les
sub
jnp
fdivs
dec
add
mov
pop
jae
insl
jnp
sub
pop
popa
pop
cmpsl
mov
lods
push
mov
push
jo
fbld
jp
rorb
pusha
jle
cmpsl
in
lret
loope
jmp
std
mov
enter
cmp
sub
std
outsb
mov
sbb
xchg
repz
ds
shr
and
stos
lods
pop
inc
das
hlt
sub
mov
into
mov
push
clc
jle
shll
xor
xor
nop
insl
xchg
iret
push
push
sbb
insl
sub
push
mov
push
push
stos
loope
cmpb
insl
add
clc
xchg
mov
jns
xchg
cli
jmp
jbe
cmp
sbb
adc
lea
and
lcall
mov
mov
jne
pop
pop
cmpsl
dec
movb
jnp
add
push
and
jp
mov
sub
jne
mov
ljmp
and
lea
aad
stc
xchg
fistps
add
fcmovbe
in
imul
into
adc
repnz
or
cmpsl
pop
pop
xor
mov
mov
xor
mov
sub
clc
lea
popf
nop
gs
nop
pop
iret
popa
ds
stc
mov
mov
fchs
fcomps
movsl
pop
dec
imulb
popa
xchg
rolb
cs
mov
test
pop
cltd
nop
not
mulb
sbb
out
dec
insb
xor
cmp
push
fstpl
shrl
stc
push
xlat
les
shll
insl
dec
dec
leave
or
dec
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
test
adc
adc
js
mov
sub
cltd
sti
enter
xchg
xor
cmp
mov
sub
add
movl
subl
sbb
js
mov
jae
ss
lret
add
jo
cmp
mov
mov
test
inc
lret
jp
mov
scas
jae
xor
mov
outsb
into
mov
movsl
jge
xchg
adc
xor
jo
test
cmp
ret
sbb
sub
mov
inc
inc
scas
mov
pop
xchg
ljmp
aad
clc
nop
mov
enter
mov
add
xchg
lods
xchg
fsubr
xor
rcr
test
std
jo
add
cmp
popf
test
mov
cmp
add
cli
addr16
and
ficompl
jnp
es
fs
push
aam
int
sbb
jg
sub
jle
push
sbb
stc
fcmovnbe
pop
rcrb
inc
push
mov
mov
jbe
push
cmpsl
xchg
sub
into
push
sar
mov
lahf
stos
stos
or
mov
outsb
push
dec
cmc
outsb
inc
lds
in
cmp
pop
push
leave
imul
mov
xchg
aad
fnsave
lods
ret
xchg
adc
cmpsb
ret
or
adc
xor
out
dec
imull
sbbl
inc
nop
push
dec
ficoms
jp
fildll
inc
insb
pop
inc
test
jg
pop
sub
jl
shl
jns
mov
mov
or
hlt
leave
divb
xor
bound
and
sub
incb
mov
sbb
popa
outsl
and
jnp
cmp
lock
adc
dec
repz
xchg
insb
out
out
xchg
rcrb
int3
push
int3
mov
leave
mov
xor
xchg
call
outsb
in
pop
sbb
cli
mov
fstl
jns
and
inc
and
add
add
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
xor
mov
js
jle
js
jbe
imul
rclb
and
cmp
test
mov
mov
aaa
or
loopne
ljmp
jecxz
xor
xchg
adc
sub
sti
pop
into
and
inc
flds
inc
aam
mov
test
and
mulb
mov
scas
sub
xchg
gs
mov
call
in
and
sbb
mov
out
cmp
mov
loop
push
pop
sub
ja
push
mov
add
fcomps
sti
sahf
sub
in
pop
cs
pop
adc
sub
xchg
je
fs
clc
fidivl
and
mov
in
cmp
sub
lea
in
rolb
dec
adcb
cmp
push
xor
pop
adc
test
lods
inc
sbb
add
sub
xchg
scas
jl
cltd
push
sbb
or
inc
xor
pop
icebp
dec
cltd
loopne
fcoms
loopne
add
int3
fucomi
ss
push
mov
stos
lods
decl
inc
xor
daa
sub
mov
aam
mov
adc
mov
push
or
inc
mov
push
les
push
jbe
jmp
and
mov
cmp
in
cmp
sub
jns
mov
gs
fwait
std
lahf
out
frstor
cwtl
push
and
jmp
inc
xchg
xchg
xchg
sub
dec
add
adc
push
xchg
fnsave
cmp
xchg
dec
aas
mov
xor
std
mov
out
fldenv
shrl
sub
add
add
test
mov
sub
pop
add
aad
imul
outsb
jo
addr16
lds
and
aaa
jne
add
and
push
mov
pop
mov
pop
mulb
pop
les
repz
xchg
pop
fwait
and
sub
sub
cmc
and
lock
xor
pop
jmp
das
sub
filds
rol
jmp
mov
xchg
mov
push
les
push
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
in
fstpt
adc
js
jbe
push
xor
negl
std
sbb
setbe
xchg
mov
adc
fcmovnu
or
or
xchg
loope
lock
push
aad
out
shll
pusha
adc
inc
shrb
cmp
leave
cmp
cli
xor
lret
repz
test
xor
popf
outsl
mov
push
pop
sub
insb
fstl
int3
pxor
insl
push
sbb
out
addr16
prefetch
inc
mov
sbb
sbb
mov
repz
outsl
inc
pop
mov
lock
shlb
add
test
xchg
push
addb
dec
call
ljmp
sub
xor
cmp
jae
ficoml
lods
adc
ds
add
repz
cmp
cmpsb
sub
loop
jnp
push
dec
mov
jne
mov
jle
es
out
xor
push
add
ret
pop
mov
jb
inc
pusha
sbbb
pusha
add
mov
mov
push
cmp
fmuls
fisubrl
dec
dec
or
icebp
jmp
mov
test
sbb
movsb
andl
mov
jg
fsts
insb
inc
xorl
dec
fadds
imull
mov
sub
inc
dec
jae
cmpsb
mov
mov
shll
adc
dec
lods
int
sub
in
inc
ljmp
mov
insb
cmp
scas
sbb
jne
inc
gs
fidivs
ret
xchg
push
push
push
jecxz
xchg
data16
lret
jnp
push
test
mov
rclb
aaa
ret
test
push
sub
add
mov
xor
imul
mov
mov
push
sbb
sub
pop
pop
mov
movsb
sub
outsb
std
push
jmp
mov
pop
popa
adc
xchg
sub
jmp
ret
aas
fxch
rcr
mov
lret
pop
sbb
jg
adc
js
ffreep
imul
jnp
lods
pop
cwtl
mov
jecxz
cwtl
imul
jp
xor
sub
arpl
out
and
ret
pop
push
out
imul
jmp
xchg
hlt
add
cmpsl
pop
xor
push
mov
pop
ret
ja
imul
xor
or
mov
cli
or
arpl
and
push
mov
pop
inc
lcall
cltd
jg
mov
jns
xor
pop
push
sbb
std
sbb
cltd
mov
jno
push
jb
clc
out
clc
std
jl
bound
in
pop
mov
inc
dec
lods
and
shlb
xchg
mov
outsb
clc
insb
add
stc
daa
sub
inc
xor
clc
loope
ss
shlb
test
pop
pop
pop
pop
push
mov
mov
adc
pusha
mov
xor
sti
aam
xchg
sbb
push
das
mov
lret
pop
add
jge
mov
push
es
jae
sbb
cmp
call
sbb
lret
imul
popa
lret
aad
test
rcll
outsl
lret
ret
push
insl
xchg
sti
imul
dec
push
repnz
adc
hlt
sub
ss
pop
int
mov
divl
mov
and
sbb
jecxz
mov
in
loopne
xchg
fwait
out
daa
in
mov
add
ss
mov
ja
cmp
push
repnz
cmp
mov
fstp
mov
jmp
cmp
ret
or
or
fstps
inc
arpl
pusha
xchg
jg
xchg
add
call
mov
call
les
aam
push
sub
or
dec
out
and
out
xor
cli
cmpsb
xchg
dec
aaa
in
push
cmp
fldcw
test
js
ja
dec
out
pop
fwait
cli
dec
cmpsb
adc
mov
inc
adc
adcl
cmp
mov
xor
add
int
int
fnstcw
cltd
nop
sbb
adc
js
fadd
jle
mov
add
adc
shlb
aad
aaa
mov
and
rolb
scas
pop
and
xchg
pop
outsl
mov
jp
stc
dec
loope
mov
pop
jb
jmp
xchg
or
sub
cmp
les
test
mov
xor
lea
lods
test
jl
and
add
lahf
push
xchg
scas
cwtl
cmp
fmull
dec
adc
adc
mov
push
xchg
movsb
ficomps
js
and
subl
pusha
jle
add
xchg
mov
push
cmpsl
pop
testb
jle
push
divb
pushf
fldcw
or
stos
jecxz
bound
incl
push
gs
stos
data16
arpl
and
or
or
out
cmp
or
push
mov
mov
clc
arpl
testl
lret
sub
and
jmp
mov
and
or
out
mov
xor
sbb
sub
in
add
std
and
out
sub
sub
mov
mov
inc
xor
insb
mov
sub
sar
xchg
test
pop
shl
test
mov
push
mov
mov
jp
pop
add
add
mov
adc
mov
lret
dec
jl
push
xor
aam
ss
xchg
pusha
cmp
out
mov
mov
pop
cmp
in
jns
bound
xchg
push
adc
leave
inc
add
sbb
icebp
add
inc
push
inc
jle
and
lock
pop
incl
mov
sub
pop
xor
movsb
dec
mov
xor
mov
jl
adc
adc
jno
iret
pusha
mov
xchg
dec
sti
push
shll
lods
clc
push
mov
adc
jo
dec
mov
jmp
iret
enter
fcmovnu
xlat
push
rclb
sub
jg
adc
js
testl
lahf
cwtl
cmc
js
stos
insl
arpl
arpl
mov
adc
mov
and
dec
in
sarb
aad
int
inc
outsl
xor
inc
out
pop
sbb
test
clc
inc
add
jl
cltd
aaa
sub
or
loop
mov
movl
in
push
pop
and
arpl
enter
lock
mov
daa
fdivl
shl
mov
mov
cmc
outsb
jmp
fstl
push
subl
mov
out
outsl
or
or
pop
dec
pop
sti
les
loop
jae
rcl
inc
xchg
pop
enter
or
pushf
jno
stc
lret
jns
adc
call
js
test
and
mov
push
cmc
mov
add
test
cmp
jbe
pop
sbb
jns
pop
movl
or
test
mov
cld
scas
ret
xchg
xor
push
loope
hlt
imulb
fdivrp
adc
cmp
or
sti
mov
lock
cmp
movsl
dec
sub
test
movsl
gs
jns
mov
cmp
popa
sbb
fsts
mov
pop
aam
sti
inc
in
mov
mov
pop
jle
sbb
outsl
stos
aas
js
iret
jle
rcrb
test
pop
rolb
bound
sahf
fidivrs
xchg
push
inc
es
in
fidivl
movsb
pop
jno
add
jg
xchg
insb
lcall
mov
fcomip
rorb
jb
add
and
mov
add
hlt
mov
dec
sbb
and
js
and
or
dec
push
mov
test
dec
xor
xor
negb
mov
add
fwait
cmpsb
or
insb
sub
adc
daa
jp
stos
fimuls
fsubs
adc
shrb
jp
jbe
or
imul
push
mov
loopne
fmull
or
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
or
or
jg
adc
js
loope
hlt
mov
inc
lds
movl
mov
mov
mov
adc
mov
loope
imul
enter
xlat
jo
mov
mov
bsr
testl
popf
scas
imul
jno
cmp
lods
les
int
and
xchg
adc
push
mov
sbb
inc
jnp
cmp
mov
inc
sub
cmp
inc
pop
mov
scas
hlt
jne
lods
xchg
loop
xor
push
inc
in
dec
aam
lcall
mov
cmp
pop
aas
js
mov
aam
xor
mov
popa
aas
sbb
sub
repz
mov
mov
lds
repnz
push
jo
insl
test
cmovbe
cs
lret
loop
loope
push
cld
fdivl
lock
dec
jmp
push
sbb
and
inc
jp
pushl
push
test
stos
lret
push
or
andl
adc
jne
xchg
bound
sahf
cmp
popf
scas
clc
lret
lods
sbb
call
cmpsb
sub
fwait
jae
adc
mov
push
mov
or
xchg
mov
cmp
mov
and
out
stos
add
jbe
cld
les
fcmovb
inc
scas
mov
out
movsl
iret
adc
sub
call
cmpsb
lea
call
mulb
inc
mov
or
lea
insl
inc
or
sarb
jne
fnstcw
fs
xchg
aam
sbb
cmp
inc
jbe,pn
imul
xor
mov
stc
jg
xchg
mov
pushl
incb
dec
pop
lahf
adc
repz
jns
inc
pop
push
pop
hlt
inc
stc
jge
xchg
iret
lahf
and
popa
cli
mov
push
aad
jbe
in
cmpsb
js
test
cmp
and
pop
stos
in
loope
jns
push
sbb
daa
mov
shrl
jbe
dec
ds
fs
icebp
xor
add
jmp
int
int
rcl
int
cmp
out
ss
jg
adc
js
rcl
add
repz
stos
and
js,pt
cli
jg
out
loope
xor
into
jl
xor
jae
aaa
mov
mov
aas
push
outsb
aas
cmp
lret
jbe
push
ds
mov
loop
fcmovb
mov
pop
inc
jb
call
rcrb
jae
mov
lahf
push
adc
or
dec
cmp
lret
iret
loop
es
cwtl
sub
out
push
pushf
sbb
ja
jae
je
dec
sbb
sub
xchg
push
mov
jg
adc
cmpsl
ss
sti
fidivl
mov
mov
xchg
enter
mov
dec
gs
bound
stos
hlt
xchg
out
mov
xchg
aad
mov
fisubrs
rcll
mov
push
jbe
hlt
insl
and
ja
bound
cmpsl
jmp
test
sub
sbb
rorl
movsb
mov
adc
loope
lea
cmc
pop
out
dec
aam
pop
sub
lret
stos
mov
push
imul
xor
cmc
sbb
dec
in
out
lock
push
jl
adc
stc
jg
jmp
lods
jmp
xor
xchg
sub
add
out
mov
ror
hlt
fyl2xp1
mov
xor
loop
jge
mov
testl
or
test
push
bound
aaa
ret
cltd
and
or
jno
pop
clc
jmp
or
inc
or
mov
and
sub
inc
in
test
outsl
sub
pop
jnp
jbe
xor
cmp
sbb
inc
es
aam
and
and
outsb
xor
lea
enter
or
pop
aaa
sub
sub
jbe
divb
push
add
mov
outsb
mov
fisubl
pop
adc
pushf
leave
push
or
inc
jo
mov
xchg
imul
mov
jmp
lret
xlat
vpsubusw
lret
xor
out
sbb
out
js
jle
js
mov
sub
jns
movsb
rclb
shrb
xchg
inc
jbe
lahf
lahf
unpckhps
out
add
pop
push
mov
push
mov
xor
jl
out
push
test
push
std
pop
xorl
xchg
jno
inc
push
rolb
shrl
je
sbb
xchg
inc
jnp
lds
lods
fs
fcomip
pop
or
std
fisubl
mov
mov
stc
into
aam
push
aam
mov
sub
push
jne
cmpsl
push
jbe
sbb
inc
ret
pop
mov
lods
in
jle
sbb
xor
push
loopne
jp
movl
mov
dec
out
gs
mov
out
jb
testl
jge
popa
mov
in
mov
dec
pmaxub
add
pop
xlat
ffree
mov
and
rol
xchg
sbb
or
cli
inc
jp
lret
out
mov
aad
fwait
jl
iret
les
sub
fwait
push
in
out
cmc
and
sub
mov
in
pop
in
mov
cmpsb
out
pop
and
shrl
lret
notb
sbb
sbb
mov
andb
and
sub
push
inc
clc
repz
aad
add
lret
jmp
imul
pushl
pop
push
sbb
push
jbe
lods
nop
stos
stc
shll
add
and
testl
jmp
lcall
push
loope
sbb
lods
in
fimull
mov
cs
addr16
hlt
test
jbe
leave
xchg
insl
out
dec
jge
pop
and
push
ret
test
leave
dec
mov
and
pop
cmpsl
icebp
fstp
sbb
int3
mov
jb
xor
dec
dec
jmp
cmp
ss
shlb
nop
out
insl
jl
jle
aaa
movsb
mov
add
add
iret
iret
iret
rcl
mov
je
jne
in
js
jle
js
mov
adc
xor
iret
call
aad
loope
imul
dec
stos
and
lret
movsl
inc
sti
adc
rcl
insl
and
mov
lea
sahf
xchg
lods
xchg
pop
xchg
hlt
xor
mov
adc
and
sbb
mov
mov
testl
pusha
adc
out
popf
dec
bound
mov
or
cmp
pop
sbb
fistps
mov
subb
ds
sti
pop
jmp
stos
js
lret
pusha
in
iret
mov
into
cld
test
sub
shll
les
addr16
insl
lret
add
jl
orb
test
fcmovnu
shlb
inc
add
adc
mov
pusha
sub
mov
dec
adc
fnstenv
ret
xor
dec
insb
cmp
inc
mov
adc
push
shll
mov
mov
shll
fisttps
inc
std
cs
adc
push
sub
mov
jns
push
cmpsb
or
addr16
sbb
mov
lret
dec
pop
xor
in
stos
addr16
mov
mov
test
push
mov
fstpl
mov
cmp
mov
sahf
jp
cmc
sub
loopne
xchg
lcall
dec
shl
sbb
scas
clc
inc
mov
ret
js
out
aaa
mov
xor
rcr
les
iret
xchg
icebp
jmp
or
fldl
xchg
movsb
xor
stc
push
rdtsc
bound
aas
adc
cs
lcall
push
adc
insb
mov
ss
ficoml
arpl
pop
in
out
mov
cmp
adcl
out
xor
xor
lea
mov
mov
xchg
outsl
lock
inc
outsb
fmuls
pop
idivb
jb
pop
xchg
xchg
fadds
pop
mov
das
adc
ss
in
mov
mov
jmp
into
leave
leave
rcr
fldcw
stc
push
xchg
xor
ljmp
arpl
lret
push
dec
or
mov
push
andb
movsl
repz
cmp
xor
push
dec
js
out
xchg
pushf
xchg
jno
and
cwtl
pushf
rclb
or
orb
fidivl
mov
or
dec
cli
pushf
leave
jmp
movsb
lret
lcall
sub
xchg
xchg
mov
imul
sbb
frstor
insb
sub
fists
stos
mov
dec
jne
mov
nop
sbb
jmp
sub
lret
out
xchg
cmpb
lahf
dec
movsl
add
lahf
sbb
pusha
movsl
cmpsb
jg
jle
pop
jl
call
xchg
xchg
fisubl
stos
shl
or
cs
adc
mov
mov
ljmp
jne
cmp
mov
ret
xchg
xor
andl
inc
push
imul
into
int3
ja
loopne
add
sbb
arpl
nop
je
inc
outsb
int
dec
bsr
cmp
mov
ret
cmpsb
inc
movsl
rolb
inc
int3
mov
cli
inc
loope
jae
ret
lret
int3
push
test
lods
addb
push
pop
cmpsb
push
aas
ljmp
loop
pop
sti
lahf
ficompl
das
cmp
jge
cwtl
sti
in
and
int3
aas
negl
inc
sbbl
inc
popw
push
and
and
mov
dec
add
sub
dec
jle
stos
push
mov
ror
fcompp
pop
test
lret
xchg
and
dec
jmp
sbbl
jnp
lret
push
mov
in
sbb
mov
pop
insb
loop
adc
notb
test
inc
in
iret
mov
lds
fistpll
sub
popa
dec
mov
lea
cmp
jbe
adc
sbb
inc
popl
lods
xchg
lods
lea
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
enter
mov
jle
js
cmpsl
dec
xchg
sub
arpl
bound
in
jbe
mov
jae
fidivrl
sahf
cmp
sub
xchg
jb
mov
in
fucomi
push
cli
pop
pop
popa
push
out
mov
sbb
gs
std
xchg
out
inc
loopne
or
jp
xchg
fwait
leave
or
addb
data16
cmp
call
pop
jge
pop
test
hlt
pop
pop
call
dec
les
rcrl
int3
adc
pop
insb
add
mul
shlb
push
mov
repnz
sub
adc
cmp
mov
ret
sub
int
mov
out
movsl
arpl
ficompl
test
cmpsl
daa
mov
xor
loop
push
inc
xor
loopne
outsl
pop
mov
icebp
adc
and
rclb
fnsave
stos
insl
cli
mov
fidivrs
fstps
add
ds
pushl
or
rclb
jnp
pop
pushf
mov
arpl
push
xchg
rcrl
enter
mov
adc
mov
jl
mov
inc
mov
fidivrs
sbb
adc
fcmovne
jg
or
jge
jb
aad
sbb
test
out
xchg
mov
icebp
fistpll
or
dec
sub
sub
int3
jb
mov
mov
adc
adc
rcr
subl
pushf
or
mov
sbb
pop
adc
and
fdivs
inc
cmp
gs
adc
pop
fadds
sbb
out
aam
xorb
arpl
inc
pop
ss
cmp
movsb
fldenv
cmp
push
jl
out
pop
push
dec
xor
add
and
in
mov
repz
push
jo
lret
cwtl
lock
addr16
sub
dec
adc
mov
sbb
and
mov
jecxz
sbb
inc
testb
repz
xor
in
and
push
or
add
jmp
cmp
rol
jb
dec
pop
pop
add
js
jle
js
push
imul
fistpl
sub
xchg
xorl
mov
jl
mov
int
fsts
sbb
or
push
aaa
sub
fsubl
xor
cli
std
ret
cmc
fidivs
push
loop
nop
cmp
rcr
and
test
aad
pop
adc
aaa
pop
sub
movsw
ret
aas
bound
sub
or
filds
push
mov
xchg
push
jg
mov
sti
out
aaa
ljmp
add
rorl
mov
cmp
push
inc
shll
xchg
xor
addr16
aas
subb
lcall
sarb
push
jbe
leave
popa
jno
cwtl
loope
jl
xor
cld
push
hlt
sub
stos
orb
mov
jb
orb
add
dec
fcoms
je
aam
jle
fwait
mov
xchg
arpl
adc
mov
in
hlt
xor
and
sbb
cmc
bound
push
or
pop
scas
ret
sbb
add
pop
mov
or
cmp
inc
pop
cmp
dec
mov
or
sarl
mov
mov
dec
push
notb
push
arpl
jnp
scas
fdivrp
cmp
pop
aad
jg
stc
xchg
jo
ss
leave
sub
mov
jae
hlt
in
icebp
and
movsl
popf
sub
jne
fcmove
movsb
mov
push
adc
subb
cld
ret
aas
push
scas
xchg
cwtl
push
mov
daa
in
pop
movsb
adc
mov
lcall
stc
jns
call
adc
inc
lods
imul
aam
hlt
xchg
inc
fstpt
bound
insb
adc
pop
mov
sbb
sub
pop
test
lods
inc
adcl
pop
es
add
inc
jp
insb
popa
xchg
fisubrl
inc
test
pop
push
jbe
popa
mov
xor
add
rol
enter
lret
pop
jp
in
mov
jg
adc
js
and
dec
repz
cmp
xor
stos
dec
fnstenv
js
add
jmp
insb
sbb
push
cs
xor
mov
add
xor
push
lahf
mov
arpl
int
pop
aaa
and
xchg
mov
rcrb
mov
subl
sbb
ss
icebp
js
aas
aam
test
xchg
and
xor
mov
leave
adcl
jge
cmp
or
insb
call
add
mov
jb
inc
ret
rclb
gs
sbb
loopne
cmp
sbb
xlat
pop
pop
inc
sbb
pop
es
mov
or
mov
fsubrs
stc
popa
push
mov
mov
adc
fdivrl
xor
sbb
add
outsl
mov
mov
sbb
ss
add
jl
enter
inc
xor
gs
mov
out
mov
jge
mov
mov
xchg
cmp
sub
mov
ss
inc
inc
xchg
imul
pop
ss
fdivrs
push
aad
sbb
movaps
insl
sub
imul
pop
jno
pop
outsb
push
xor
cs
lods
lahf
notb
jne
nop
fistpll
inc
inc
cmp
push
in
cwtl
push
gs
jmp
lret
jne
xor
cld
test
aaa
adc
lods
jg
or
std
adc
adc
pop
nop
inc
mov
pop
pop
adc
fs
insl
out
xchg
mov
jle
lahf
dec
xchg
aas
call
xor
cs
repnz
lods
in
aaa
test
pop
cmp
lcall
push
xor
in
rorl
xchg
mov
subb
xor
cmpsl
sbb
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
mov
js
jle
js
aam
inc
repnz
push
addr16
int
mov
lods
dec
pop
jle
dec
dec
clc
ljmp
pop
fs
nopl
sbb
mov
adc
arpl
mov
movsl
lock
roll
icebp
mov
loopne
mov
std
out
mov
rcll
mov
fs
bound
push
add
nop
stc
cmp
mov
sbb
je
mov
mov
pusha
cmp
push
ljmp
mov
mov
scas
xchg
push
dec
cmpsl
mov
mov
sbb
jno
sub
inc
xor
loop
lret
mov
mov
inc
out
mov
lret
pushf
imul
and
and
addb
sbb
scas
xor
adc
mov
mov
pop
je
rolb
cmpsl
or
popf
add
ds
sub
pop
ret
add
imul
test
jecxz
sarb
pushf
mov
fwait
int
test
lahf
fstl
push
hlt
xchg
push
push
rcrl
jl
mov
cmpsl
adc
add
add
lret
das
popa
mov
loop
pop
jg
mov
xchg
add
in
mov
push
push
in
lds
into
or
jl
mov
xchg
xchg
mov
cmc
imul
lret
pop
or
xor
push
cltd
push
and
mov
jno
scas
mov
les
fdivl
int3
scas
xchg
push
dec
insl
movsl
movsl
add
push
movsl
fs
push
popf
jecxz
xchg
sti
scas
pop
sub
mov
add
sbbb
add
pop
repz
loope
aas
stos
out
clc
out
daa
xchg
repz
sti
rcr
rorb
xchg
dec
xlat
js
out
pusha
imull
sahf
insl
fisttps
xchg
popf
jne
shll
dec
cmp
stos
scas
dec
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
cmp
cwtl
mov
idivl
adc
js
adc
testb
mov
push
sub
ja
out
arpl
sub
add
cmp
dec
hlt
in
arpl
jmp
stc
addl
cs
sbb
dec
adc
subb
pop
incb
inc
fists
push
pop
mov
je
loopne
mov
sbb
pop
pop
nop
mov
push
test
push
stos
add
fmul
or
mov
rcll
xchg
push
clc
int
xchg
push
cli
pop
push
idiv
mov
ja
jne
out
pop
pop
fisubs
pop
cmp
and
ffree
lock
das
sub
mov
bound
lea
dec
cmp
xor
data16
mov
mov
lret
mov
mov
fucomp
push
fsubrs
pushf
push
rorl
imul
fnstenv
popf
mov
push
push
fscale
push
jbe
inc
cwtl
loop
mov
insl
rol
cs
xchg
aam
inc
jno
js
out
pop
popf
mov
mov
sbb
iret
arpl
adc
pop
jnp
or
test
push
pop
mov
mov
das
adc
jne
stos
inc
fistl
iret
or
into
mov
test
es
dec
sbb
mov
insb
mov
loop
push
jmp
sub
test
mov
nop
inc
push
mov
js
lahf
and
sbb
rorb
add
jecxz
xchg
add
mov
pop
call
ret
sbb
fsubl
cmp
movsb
inc
ds
cmp
out
mov
push
call
add
dec
cli
xor
jns
dec
fwait
jnp
inc
add
fcmovne
das
fs
pop
loope,pn
shrl
addr16
cld
sbb
xlat
or
out
xchg
pop
jmp
into
iret
into
ror
aad
aad
mov
repz
xor
jg
adc
js
shll
inc
pop
inc
imul
xchg
in
jmp
js
dec
mov
inc
mov
dec
xchg
call
xor
cmc
add
sbb
xlat
push
mov
cwtl
push
outsl
scas
xor
scas
out
popa
cld
push
xchg
lahf
je
cmp
cli
mov
test
push
cmp
sub
faddl
mov
push
cmpsb
push
xlat
pop
xor
cmc
stos
movsb
ljmp
jle
adc
inc
xchg
shlb
or
inc
jp
das
ficomps
sbb
aam
or
cmp
insl
xchg
and
rol
xor
icebp
cmpsl
lods
into
iret
scas
shl
xor
daa
xchg
loope
sub
orl
push
mov
dec
sub
out
adc
scas
les
inc
sub
js
leave
or
push
lcall
les
push
cmp
jo
mov
in
addr16
es
lahf
xchg
jnp
sub
loopne
mov
mov
mov
mov
inc
xor
test
mov
hlt
pop
mov
dec
add
stos
push
sub
jae
mov
sbb
movsl
xor
and
dec
jle
in
mov
es
iret
jmp
mov
push
xor
addl
pop
mov
inc
or
dec
xchg
add
pop
adc
pushf
sub
insb
cli
out
mov
sub
cmp
and
jno
mov
insb
pop
popf
mov
jl
inc
pushf
cmpl
fldenv
cmp
adc
aaa
cmp
test
in
idivb
mov
mov
xor
daa
pop
cmp
adc
mov
push
lahf
ja
pop
and
mov
mov
addr16
sbb
gs
push
mov
out
outsb
subb
jle
jae
xchg
inc
pop
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fnsave
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
and
addl
sbb
push
xchg
pop
notb
or
cwtl
dec
sbb
push
inc
mov
adc
rcrl
in
movsl
mov
xlat
stc
int3
add
mov
mov
xchg
cmp
cwtl
sbb
mov
dec
dec
fimull
lods
add
cmpsl
cs
ss
push
shll
mov
test
into
or
loope
testw
stos
adc
and
ret
inc
faddl
das
in
insb
loope
mov
les
out
nop
pop
pmaddwd
mov
in
sbb
lds
cltd
jne
pop
cmpsb
mov
repnz
and
push
mov
movsb
jl
aam
inc
inc
movsb
jmp
in
iret
std
pop
push
push
xchg
jg
add
insb
ror
ret
jge
out
shll
cltd
loopne
jb
dec
mov
cmp
je
es
pop
int
inc
repz
sahf
cltd
and
add
xchg
xchg
pop
mov
mov
and
pop
inc
andb
push
cli
mov
push
out
rcrb
call
imul
push
xor
mov
daa
and
pusha
or
dec
enter
sti
dec
cmpsb
xor
mov
fsubrp
xchg
mov
xchg
fs
icebp
and
mov
fiaddl
insb
jp
nop
jno
and
popf
fldcw
pop
or
cld
in
inc
mov
cld
xchg
inc
jae
test
sbb
pop
daa
xor
cli
mov
cmp
shll
das
pop
cmpsb
shrl
jmp
rcl
iret
cmpsb
push
int
lret
mov
xchg
push
push
jbe,pn
daa
out
adc
loope
pop
popa
lcall
ja
dec
ucomiss
jle
xchg
pop
int
xchg
in
cmpl
pop
cmc
fistps
xchg
sahf
bnd
aad
imul
cmpsb
loope
leave
mov
lahf
inc
fdiv
rol
jo
jno
inc
mov
add
push
push
pop
jae
hlt
add
push
mov
mov
pop
lahf
adc
push
dec
stos
loope
not
jne
mov
outsb
sti
jnp
out
mov
stos
sub
fstpl
adc
mov
mov
lahf
mov
push
dec
movsb
dec
arpl
push
testl
out
lds
pop
in
fldl2e
cmp
cmc
testb
cmp
test
and
in
orb
push
mov
dec
inc
push
outsl
jge
scas
or
jg
or
and
sub
sbb
je
cmp
add
mov
or
xor
sbb
popa
xchg
pop
xchg
mov
cmp
jno
sbb
push
int3
cmp
mov
cmc
mov
imul
cltd
leave
cmpsl
add
ret
mov
mov
inc
mov
in
inc
insl
xor
cwtl
jo
lods
enter
inc
jae
jecxz
xor
mov
xor
jns
push
and
insb
out
mov
adc
xor
xor
ret
adc
or
pop
or
mov
xchg
cmp
cmc
mov
hlt
lret
outsl
xor
or
lahf
mov
pusha
or
pop
cmp
shrb
sbb
xlat
popf
fstps
pusha
mov
jno
adcl
sub
mov
inc
jno
into
gs
out
or
popf
and
cmc
sbb
fiaddl
jne
ljmp
push
pop
jle
movsl
pop
add
inc
sbb
repnz
pushw
cmpsl
divl
lock
mov
mov
inc
sbb
pop
out
popf
lcall
fs
xchg
and
out
ljmp
out
repnz
rorl
fwait
int3
das
addr16
jae
adc
cmp
sub
sbb
shll
lea
inc
xchg
xor
cwtl
fdivrs
pop
out
sti
nop
adc
sub
les
and
or
fmuls
xor
push
aam
iret
jp
sbb
pop
sbb
inc
and
stc
je
in
mov
mov
pop
out
std
xchg
lds
stos
jecxz
add
xchg
sti
jmp
cmp
hlt
mov
xor
mov
mov
int3
je
int3
pop
repz
sti
out
xchg
add
mov
mov
add
jo
cmp
outsb
std
aam
and
sahf
in
mov
cmp
fcmovne
loope
ss
jmp
popf
movsl
fcoml
and
lods
jbe
mov
stos
lret
push
add
dec
adc
fwait
mov
mov
dec
stos
mov
mov
mov
scas
xchg
stos
sbb
cmp
aas
add
in
jb
mov
pushf
fstl
mov
data16
xor
push
and
mov
inc
cmpsl
scas
das
mov
jmp
mov
nop
insb
ret
adc
popf
mov
fwait
push
mov
mov
xor
push
ss
aam
mov
insl
pushf
jb
jl
pop
inc
pop
pop
and
icebp
adc
jns
pop
outsb
and
aaa
test
rorb
aad
js
pop
pop
hlt
dec
pushf
pop
push
sbb
fisubrs
adc
mov
scas
clc
aad
nop
mov
dec
setno
sahf
adc
inc
mov
insl
fsubrl
sub
and
pop
jbe
push
lret
in
cmp
lods
jp
jecxz
or
sub
subl
sub
mov
and
inc
gs
out
dec
loop
mov
jle
mov
adc
and
jae
mov
stc
mov
push
dec
cmpsb
or
mov
pop
cmovge
jbe
fmul
jb
pop
mov
adc
add
dec
mov
into
inc
into
mov
add
push
dec
dec
inc
pop
inc
pop
pop
shrb
inc
nop
lretw
add
addl
add
insl
pop
cmp
out
loopne
stos
es
nop
cld
push
fnstenv
fdivr
in
into
mov
pushf
pcmpgtb
mov
xchg
sbb
bnd
dec
add
push
push
fsub
jae
or
enter
das
push
inc
into
imul
or
or
shl
mov
in
inc
inc
repnz
outsb
ret
cld
and
mov
fucom
popf
inc
adc
inc
and
add
mov
insb
clc
mov
shrl
gs
adc
testb
sub
popf
sub
push
aaa
xchg
jb
popa
sbb
out
arpl
pop
ret
xchg
add
stos
push
les
xchg
jecxz
mov
ss
sub
xor
push
xchg
push
mov
xchg
data16
and
ret
mov
mov
test
pop
sbb
jge
mov
stc
popa
adc
outsl
rcl
je
in
inc
outsl
rorl
mov
inc
cwtl
bound
test
or
mov
jge
pop
mov
jno
xchg
or
ds
call
pushf
pop
jg
inc
cmc
popf
and
nop
movsb
daa
push
stos
ljmp
sub
cli
adc
leave
jge
ljmp
stos
or
loop
push
int3
mov
daa
xchg
shrb
mov
pusha
jl
popa
fwait
sbb
fisubrl
xor
ret
mov
mov
pop
add
cmp
aam
fdivs
popf
test
xchg
or
lds
dec
mov
repz
movsl
cltd
stos
jb
ret
xlat
fimuls
add
pusha
add
mov
outsb
imul
ud1
inc
rcl
or
rep
fcomip
or
push
mov
mov
shl
rorl
push
les
push
inc
xor
mov
adc
popf
jnp
mov
ja
mov
dec
and
icebp
adc
xchg
loop
add
outsb
jecxz
mov
sub
leave
aam
loope
ret
jns
jae
je
or
shll
mov
cwtl
dec
data16
xchg
mov
rcll
popf
lds
cs
lcall
out
or
lcall
mov
jo
in
fcoms
call
mov
xor
push
inc
mov
or
mov
and
fnstenv
mov
std
add
adc
jb
and
fs
cld
leave
jle
cmp
outsb
in
lahf
jb
stc
rorl
popa
mov
cs
cmp
inc
ss
sub
xchg
mov
mov
mov
test
pop
mov
fstps
icebp
divl
push
mov
pop
jecxz
nop
out
sbb
jne
cmp
pop
sub
lods
add
inc
and
rcrl
push
mov
lcall
daa
sbb
into
cltd
fsts
fstpl
lret
inc
mov
and
sub
lods
mov
scas
enter
insb
fsts
mov
and
mov
jge
and
xor
pop
mov
push
push
xor
out
jb
std
out
repnz
or
shrl
and
icebp
mov
sti
jbe
ret
mov
ret
pop
shll
shlb
mov
push
int
adc
push
xor
ss
and
or
pop
stos
push
sub
mov
mov
je
sub
sarl
cmp
pop
in
dec
ljmp
cld
xchg
and
sbb
popa
inc
pop
adc
loope
mov
dec
mov
jne
hlt
or
jp
ret
xor
sar
mov
ror
inc
ss
and
pop
clc
sbb
fistps
push
sub
adc
push
push
xor
aas
inc
cwtl
jbe
jge
sbb
mov
xchg
and
ret
xor
iret
int3
mov
ret
sbb
sti
pop
jle
pushf
push
sub
repnz
xor
mov
adc
sbb
outsl
xor
ret
nop
and
sbb
sub
rcll
lods
and
sbb
cs
insl
setae
add
pop
cltd
shl
inc
pop
xor
jp
mov
inc
pop
ljmp
insl
aam
push
lcall
jae
pusha
mov
add
sbb
inc
rorl
loopne
movl
or
imul
pop
mov
ficoml
mov
fmuls
sub
cmp
pop
or
mov
ja
xchg
add
divb
xchg
aam
adc
mov
sarl
notl
mov
or
stc
jno
sub
ret
jg
jno
or
or
pop
mov
js
fs
rcrb
dec
imul
add
jmp
outsl
fistpl
nop
push
mov
jbe
test
cs
out
push
loop
pushf
xchg
mov
rol
xor
jnp
lods
loopne
icebp
dec
mov
sub
out
pop
fnstenv
or
hlt
pop
inc
fbstp
int3
ja
and
push
fmuls
sbb
jae
sbb
lock
decl
jle
mov
into
push
push
cmpb
push
adc
sub
pop
mov
and
add
dec
or
cli
test
aaa
jae
repnz
lcall
inc
fsub
jno
aaa
sbb
and
fmull
mov
rcrl
test
icebp
pop
sti
out
ljmp
pusha
andnps
xchg
imul
pop
fildll
mov
fsubrs
xchg
push
addb
in
stos
add
movsb
or
outsl
in
cmp
push
mov
fsts
movsb
xchg
cs
leave
xchg
dec
rol
xor
outsb
inc
adc
inc
loopne
xor
add
dec
push
pop
push
pop
dec
mov
dec
push
adc
sub
push
mov
add
dec
pop
mov
push
jmp
cli
lds
xor
outsl
inc
ds
sar
inc
mov
mov
mov
sbb
lret
sahf
jmp
aad
mov
rolb
jnp
in
jbe
pop
cmp
fnsave
enter
sar
lods
mov
sti
adc
mov
andl
mov
mov
xlat
dec
pop
or
sbb
mov
mov
lods
repz
stos
aad
rcrb
jmp
rorl
jne
jecxz
out
test
and
lahf
xor
sbb
mov
lahf
rcl
arpl
push
sbb
dec
adc
pop
mov
prefetch
or
out
pushf
lret
lock
mov
leave
xchg
xchg
in
dec
movsb
push
xlat
mov
es
push
out
mov
xor
jle
enter
mov
out
jne
fbld
sub
popf
sbb
jecxz
daa
lods
dec
cmp
repnz
adc
sub
scas
popf
and
jge
lret
scas
sub
hlt
mov
shl
cmp
push
jns
inc
sub
dec
mov
fiaddl
pop
xchg
sbb
cltd
fsqrt
xchg
mov
pop
in
testl
ss
xlat
sbb
out
push
push
mov
leave
push
rcrb
sub
repz
bound
inc
xchg
pop
and
mov
stc
add
sbb
push
jecxz
int
and
repnz
in
pop
pop
out
cmpl
mov
or
sub
xor
rolb
ret
popf
inc
dec
push
mov
sub
mov
jecxz
cmp
cmc
mov
cli
shrl
addr16
lea
ss
outsb
jg
aam
into
mov
stc
call
loope
and
xchg
lods
pop
imul
aad
into
or
mov
dec
shrl
insl
lods
fs
dec
pop
into
dec
lea
inc
cld
imul
jae
lret
jns
call
sbb
mov
imul
mov
aad
bound
lahf
iret
jmp
inc
test
xor
push
fwait
fs
mov
es
or
pop
sub
and
addl
xor
movsl
inc
hlt
cmpl
xchg
sub
fcompl
sub
mov
and
aas
sbb
loope
push
mov
xor
mov
cmp
test
inc
mov
cmp
mov
push
rcr
lcall
sbb
inc
sub
sub
push
out
cmpsb
mov
xchg
ljmp
push
jmp
inc
push
sarl
push
test
cmp
jbe
mov
dec
jae
fadds
addb
hlt
out
dec
push
xlat
jno
sub
push
cs
pop
es
jmp
inc
pop
cmp
or
bound
jns
mov
adc
push
outsb
addb
aam
fs
cmp
ret
mov
cmc
mov
push
add
lcall
lock
adc
shl
inc
push
pop
fiadds
inc
unpckhps
fldt
loope
xor
ljmp
pushf
xor
mov
paddsw
clc
test
or
xorl
mov
xchg
jns
push
dec
or
lods
mov
jns
loop
adc
scas
xchg
or
jge
add
or
xor
popf
adc
std
bound
sbb
jle
loopne
adc
mov
sarb
add
sub
mov
loop
test
pop
lods
aas
jmp
jmp
xchg
inc
filds
std
sub
mov
pusha
aad
push
jge
lret
stos
shr
xchg
mov
cmp
cld
xchg
arpl
outsl
dec
sub
aam
jge
rcll
adc
jecxz
push
cwtl
ljmp
pop
and
and
add
dec
inc
popf
inc
push
cmpsb
jge
sbb
jnp
or
adc
cmp
cmpsl
fsubrl
clc
inc
cmp
xor
mov
dec
push
test
sub
cli
lods
stc
jge
mov
sarb
mov
ljmp
leave
and
xchg
hlt
sbb
push
mov
clc
fstps
pop
nop
cwtl
mov
fnstsw
rorl
pop
mov
mov
jae
mov
movsl
push
and
and
adc
mov
xor
lea
inc
insb
and
inc
cmp
mov
js
mov
jl
lods
pop
dec
dec
movsb
lds
and
xor
aad
incb
and
fcoml
mov
test
inc
mov
mov
aam
cs
xor
ja
sbb
push
in
xor
cli
daa
ret
push
sbb
out
test
or
mov
jl
out
outsl
mov
and
mov
sub
test
inc
push
mov
xchg
cmp
mov
or
mov
jae
in
jne
test
out
fsubr
scas
pop
lea
test
xchg
xchg
adc
add
js
jno
adc
sbb
adc
daa
in
inc
ret
divl
ds
repnz
notl
popf
mov
or
lods
sti
mov
les
add
push
sub
inc
or
scas
cmpsb
sub
lcall
imul
scas
cmpsl
imul
ljmp
mov
dec
fsub
mov
and
cmp
out
test
out
fldl
jge
push
jmp
test
add
pop
aam
pop
popa
lock
lret
into
mov
inc
push
aaa
mov
add
js
je
clc
pop
xor
outsb
fdivs
xor
negl
fsubl
int3
mov
push
jbe
movl
fcoml
add
inc
dec
dec
pop
pop
push
sub
xchg
sub
fsts
add
je
cmp
cmpsl
and
mull
mov
xor
pop
ret
popa
ret
test
and
loop
out
sbbl
jb
fldl
sarb
sbb
lahf
mov
sbb
push
icebp
dec
sbb
cmp
lahf
dec
jle
scas
push
mov
pop
in
pop
push
xor
pop
test
push
daa
nopl
and
ret
jle
ja
cld
xor
sahf
repz
hlt
test
adc
mov
rcr
fwait
daa
out
fs
mov
aam
lret
les
cmp
adc
std
mov
mov
loope
popf
push
inc
movsb
sub
mov
xchg
sub
into
push
jno
jge
scas
popf
cs
push
xchg
les
in
outsb
movsb
aaa
movsb
loopne
lods
mov
and
xor
ss
arpl
jae
inc
mov
dec
sbb
mov
jns
test
mov
adc
bound
xchg
stos
repz
out
mov
ja
xchg
and
fistpl
cmc
and
inc
mov
in
add
incb
xor
dec
cltd
pop
mov
and
scas
jle
mov
push
les
fmuls
out
or
popf
push
inc
sub
sarb
daa
out
adc
push
pop
shll
fdivr
fimull
fildll
xchg
aas
push
ficoml
mov
pop
mov
fs
mov
mov
and
aad
gs
test
movsb
lahf
stc
in
push
mov
es
cmp
lea
jmp
jae
jg
out
fwait
and
mov
xor
jne
push
and
xor
ds
push
icebp
stc
int3
adc
iret
mov
ja
int3
dec
dec
sub
lret
loopne
or
jle
shr
sbb
xchg
out
cmp
das
rcll
mov
orl
addr16
cwtl
mov
cwtl
cmp
out
push
jnp
jnp
data16
cmpb
sbb
addb
or
rclb
mov
dec
and
adc
aad
ja
js
je
jl
pop
fs
jo
mov
jae
fadd
int
sub
scas
xchg
and
aad
data16
inc
imul
jne
add
mov
mov
jo
das
mov
ret
mov
movsl
or
jne
sub
bound
mov
push
adc
inc
lret
fsub
and
and
inc
push
jge
xor
push
xchg
mov
dec
adc
xchg
sub
inc
inc
or
gs
in
loope
jmp
test
add
ljmp
inc
pusha
test
mov
jl
mov
inc
int
jg
inc
jmp
sbbl
in
movsl
ja
inc
pop
fistps
loope
lea
inc
movsb
bound
adc
pop
cmpsl
mov
sbb
inc
push
mov
inc
in
jg
ss
push
cld
sbb
addr16
and
jl
xchg
cltd
sub
div
lods
rol
xchg
push
sahf
scas
cli
repnz
imul
adc
xchg
lds
cmp
shl
clc
sbb
sbb
mov
inc
shll
inc
cld
into
jecxz
imul
ret
xchg
mov
in
add
gs
imull
leave
push
mov
mov
jle,pn
mov
mov
jmp
cs
push
add
jl
xchg
fwait
push
es
jmp
cmp
mov
ds
fadds
loope
xchg
sub
mov
shlb
jecxz
add
cwtl
xchg
out
xchg
pop
add
and
imul
repz
dec
or
movsl
test
fcomi
daa
stos
cmpsl
xlat
jp
inc
push
stc
js
mov
fcomi
ja
lds
in
fstpl
lods
xchg
push
push
cs
nop
fsts
into
ds
frstor
clc
inc
dec
adc
leave
cmp
aad
pop
lods
mov
xchg
pusha
loopne
mov
mov
add
cmc
push
mov
loope
out
outsl
lret
mov
mov
or
and
cmc
inc
iret
mov
outsb
mov
nop
les
lret
mov
nop
xor
push
push
pop
dec
pusha
loop
xor
xchg
aaa
jl
adc
repz
dec
mov
xchg
pop
jp
aam
icebp
sub
sub
sti
pop
xchg
xchg
xor
ret
rcll
xor
into
lcall
cltd
mov
push
mov
mov
add
cmp
out
in
popf
fidivs
jle
xchg
cltd
leave
dec
lds
mov
and
cld
stc
sahf
test
imul
int
sub
push
inc
lcall
jp
jp
push
test
xchg
js
xor
les
insb
inc
rorb
in
mov
mov
add
ljmp
xchg
push
cmpsb
cmp
mov
aas
mov
jecxz
cmp
cltd
pushf
adc
fcmovnu
ret
int
mulb
xor
insl
jle
cli
out
scas
das
sbbb
loopne
shrb
pop
aaa
mov
adc
rclb
push
adc
imul
push
cs
mov
lods
repz
mov
sbb
xchg
push
adc
sub
jae
daa
jmp
ss
mov
jne
sbb
mov
cltd
cmp
add
arpl
ret
xchg
jmp
lret
xor
ljmp
adc
sub
dec
push
in
cltd
xor
xchg
notl
add
ss
pop
test
sbb
pop
inc
or
shr
ret
add
push
mov
addr16
pop
mov
sti
gs
adc
push
sbb
fsub
lret
insb
andl
out
or
jae
adc
add
push
xchg
mov
xchg
clc
stc
jno
xor
dec
arpl
je
enter
jecxz
dec
test
jmp
pop
or
sbb
fnstsw
das
inc
movsl
mov
aad
add
add
add
dec
dec
dec
inc
dec
sub
addr16
pop
xchg
add
addl
add
shl
stc
xchg
adcl
shrl
push
or
sub
adcl
jb
add
lods
fxch
lock
insl
sub
lret
roll
xor
adc
jo
scas
add
les
push
fstps
pop
and
mov
fidivrl
jo
addb
ret
push
jmp
dec
push
fcoml
es
clc
sub
std
dec
dec
fstpl
cmpsb
sub
cmp
cmpsl
into
movl
test
mov
jne
fldl
sub
iret
nop
shlb
insl
aas
jle
lcall
sbb
or
lds
jg
inc
stc
pop
mov
lods
stos
pop
mov
daa
mov
xor
je
ljmp
jb
lea
mov
dec
icebp
call
pop
orb
lods
bound
fnstcw
or
repnz
push
adc
and
mov
mov
std
fists
xchg
cwtl
dec
push
int3
rcrl
mov
inc
xor
pusha
popa
cmp
sbb
int3
jno
in
ror
decl
addl
add
lcall
loopne
dec
xchg
dec
enter
jae,pt
in
and
jne
lret
pop
shrb
scas
sbb
xchg
imul
test
lret
or
and
lods
dec
mov
les
sti
cld
mov
out
mov
dec
out
cmp
lcall
lock
jns
push
in
test
xchg
test
call
jmp
cmp
mov
repnz
jnp
dec
push
ss
stos
mov
add
es
into
jb
arpl
icebp
out
in
imul
nop
inc
rcr
jae
jge
cmp
fwait
sar
cmp
push
mov
in
movsl
mov
std
xchg
push
lret
ret
sti
push
inc
inc
xchg
fisttps
imul
mov
popa
fbstp
or
and
push
rclb
sbb
enter
sub
mov
add
sub
and
inc
ficomps
xor
fldl
cmpb
es
xchg
pop
adc
cld
xor
loopne
add
shl
or
lods
sarl
icebp
out
in
jle
xchg
or
add
and
imul
movsb
gs
dec
mov
nop
push
in
mulb
cs
cmp
pushf
adc
fcompl
mov
mov
pop
pop
movsl
cs
jmp
or
pop
test
les
sahf
insb
cmp
xor
adc
pop
xor
mov
mov
mov
lods
adc
lahf
call
addr16
or
int3
mov
xor
push
lods
and
inc
sti
mov
xor
call
fmuls
rorl
jge
mov
or
sbb
and
ljmp
leave
inc
xchg
pushf
movsb
xchg
sbb
imul
adc
xlat
push
fidivrs
pop
mov
pop
mov
xor
xchg
stos
mulps
insb
lods
enter
jns
call
shl
or
add
imul
ljmp
loopne
cld
dec
mov
test
push
pop
iret
ljmp
xor
push
mov
stos
and
jg
loop
push
push
pop
sbbb
arpl
sbb
or
pop
lret
pop
inc
sbb
mov
inc
mov
mov
loop
xchg
xchg
lock
sarl
cld
lret
mov
mov
pop
mov
js
cmp
and
rclb
lahf
push
push
outsl
enter
clc
stc
ret
loop
sub
dec
lret
aad
inc
mov
aaa
or
and
insb
adc
add
dec
cmp
mov
sarb
xchg
popf
jl
sti
mov
mov
jge
or
div
push
mov
push
lret
scas
xor
subl
pop
hlt
inc
sub
and
arpl
and
or
ljmp
adc
aas
inc
cs
pushf
pop
push
dec
aam
adc
popf
pop
fwait
mov
out
sub
xchg
jne
pop
shrl
fists
mov
xchg
ja
lock
xchg
fldcw
shr
mov
inc
add
jnp
stos
jmp
fs
movsb
adc
sbb
push
fisttpl
mov
cmp
mov
push
jbe
ss
fdivl
xor
gs
mov
push
inc
xchg
mov
mov
pop
sub
cmc
lods
lods
inc
dec
mov
mov
mov
ljmp
jmp
stos
inc
and
ds
add
call
movsl
push
ds
xor
and
cmpsl
push
adc
loope
mov
or
dec
shll
cmpl
dec
scas
mov
bound
in
jmp
jmp
jb
inc
mov
push
xchg
inc
enter
mov
pop
aam
rcrl
mov
fmull
push
sub
add
andl
jnp
in
in
sti
cmp
leave
loope
pop
fs
sbb
jl
test
cmp
shll
loope
cmp
scas
push
adc
inc
mov
mov
mov
js
adc
das
pop
sub
lret
shll
mov
cmp
mov
cmc
cmp
xchg
test
call
out
repnz
lds
inc
jbe
mov
xor
das
push
nop
mov
push
pop
sbb
pxor
in
into
lahf
jo
aaa
xor
cmp
jmp
sub
adc
or
mov
int
mov
negl
lahf
push
cmc
inc
data16
mov
inc
clc
mov
decb
fdiv
add
add
add
inc
push
pop
pop
push
dec
cmp
or
dec
lcall
popf
add
addl
add
and
in
ss
xor
pop
in
xchg
fnsave
sub
xchg
sbbl
sbb
mov
cld
cmp
cmc
xor
sbb
push
insb
xchg
daa
insl
imul
xlat
aaa
inc
xor
mov
int
mov
insb
enter
sub
cmc
inc
ret
jl
add
mov
cs
mov
lret
fistpl
ficoml
push
rep
bound
int
outsl
xchg
dec
pop
and
sub
test
sahf
lods
adc
mov
and
adc
enter
xor
rcr
push
dec
sub
mov
pop
insb
inc
and
inc
loop
icebp
vcmpps
and
xchg
cmpsl
or
xchg
loopne
fnsave
xchg
in
daa
add
adc
mov
testl
jp
push
ja
dec
rcrl
add
sarb
nopl
push
add
mov
or
or
inc
into
outsl
inc
mov
pop
lcall
jae
add
pop
lret
cmp
scas
mov
out
or
and
and
pop
out
daa
outsl
lret
dec
lahf
pop
dec
mov
daa
loope
jmp
mov
push
test
loop
testl
cmp
jnp
adc
aas
pop
sahf
test
shlb
outsb
fisubrl
mov
or
inc
sbb
iret
out
xor
lea
push
mov
out
cmc
push
pop
add
mov
sub
outsl
scas
sarb
pusha
or
shlb
imul
loope
fdivs
jnp
loopne
aam
pop
test
fs
scas
push
in
adc
or
insb
mov
push
mov
lods
cmp
or
pop
push
testl
or
aaa
test
mov
mov
out
iret
into
hlt
sar
dec
orl
add
xchg
insb
dec
test
jnp
and
into
dec
enter
sub
jmp
aad
mov
js
mull
je
test
mov
mov
pop
jecxz
jns
mov
push
push
sub
ret
jecxz
out
jmp
ficoms
imul
xor
arpl
jno
mov
test
out
mul
cltd
inc
dec
nop
lret
jmp
cmp
test
mov
adc
jbe
pop
in
ja
nop
outsb
push
cli
ror
clc
popf
mov
lret
fs
inc
or
pop
push
lretw
sub
push
jne
and
dec
inc
lahf
jbe
fwait
mov
scas
test
clc
fists
xchg
add
cmp
gs
inc
pop
insl
xor
pop
sub
jbe
les
pop
fs
cmpsb
test
rolb
je
push
dec
xchg
xchg
mov
or
jl
mov
xchg
in
pop
jns
add
ret
add
inc
loopne
adc
fninit
inc
sub
adc
xchg
jbe
leave
mov
insb
jne
mov
das
hlt
mov
mov
and
test
stos
repnz
arpl
jnp
jne
scas
mov
push
mov
in
bound
mov
mov
adc
clc
sbb
sbb
lea
data16
rcrl
daa
sti
xor
imul
xchg
pop
jg
mov
sbb
lock
jecxz
popa
cmc
arpl
inc
fildl
and
aam
mov
adc
pop
stos
sbb
push
add
mov
xchg
mov
hlt
flds
daa
ljmp
xchg
and
sbb
jno
repnz
jge
xchg
stc
pop
or
mov
xchg
in
mov
popf
imul
gs
mov
sub
cli
test
jnp
adc
movsl
out
mov
stos
mov
jne
lods
fstpt
das
out
mov
js
scas
cmp
loopne
ja
lret
cmpsb
xchg
aam
xor
stc
dec
ss
mov
push
cmc
push
sahf
mov
mov
cmc
aam
add
popf
adc
pop
or
fwait
sbb
rcll
push
lret
sbb
mov
fdivp
push
lret
lock
pop
andnps
mov
test
imul
lock
pop
cli
xor
cmp
sub
sbb
sbb
dec
les
icebp
cmpsb
jo
idiv
and
cmpsl
mov
sub
in
ja
xor
out
jb
mov
adc
add
or
or
xor
hlt
js
cmp
mov
push
iret
pop
jmp
cmp
out
std
lea
pop
xchg
inc
fwait
dec
stos
nop
movsl
mov
and
jg
imul
es
cltd
mov
shl
jb
push
je
and
orl
inc
icebp
addr16
push
pop
and
rol
push
outsb
or
jecxz
out
loop
push
lcall
or
jo
insl
push
cmpsl
sub
ffree
push
sahf
test
dec
movsl
cmp
daa
push
sbb
dec
lods
push
daa
fistpl
xchg
mov
aas
jmp
adc
xchg
test
outsl
mov
add
lret
jae
mov
aaa
cmp
fs
pop
jae
test
into
fadds
push
aam
sbb
mov
push
iret
dec
mov
subb
pop
inc
dec
xchg
mov
shrl
fs
iret
fsincos
sbb
dec
pop
aaa
mov
add
out
imul
push
mov
cwtl
push
push
sub
xchg
clc
ja
add
sub
sub
into
arpl
movsl
int3
jne
mov
jg
clc
sub
mov
sar
test
mov
xchg
andb
push
mov
scas
lea
testl
mov
out
or
jg
stos
loopne
mov
in
xchg
js
xor
iret
cmpb
inc
jae
cmp
test
add
add
dec
inc
dec
push
pop
pop
push
inc
cmp
lahf
bound
add
adc
push
adc
or
fistpl
xor
push
jnp
sub
scas
xor
nop
test
add
aam
dec
lcall
stos
fwait
inc
sub
std
pusha
jno
pop
fadds
stc
cmp
push
pop
mov
jp
shlb
pop
or
lret
sarl
movsl
dec
negl
dec
mov
sahf
mov
cli
ret
das
dec
aas
data16
mov
pusha
jo
mov
lcall
pop
cwtl
push
fsubrl
xchg
cmp
cli
into
fisttps
popa
mov
mov
int3
out
and
lcall
push
jl
push
jle
arpl
sbb
filds
sti
je
divl
into
add
fwait
xor
imul
pop
sub
jp
lock
pop
sbbl
pop
inc
ret
push
shlb
xchg
shlb
mov
sarb
pop
cmp
movsb
xor
push
je
sbb
adc
icebp
ffree
add
addr16
out
out
dec
adcb
movsb
sub
cmpsl
es
jno
lock
mov
leave
mov
loopne
test
mov
mov
sbbl
xchg
or
push
xchg
xchg
jl
imul
mov
jne
push
call
pop
insl
int
aam
fs
xor
xchg
pop
push
sub
sub
shrb
jb
adcb
xor
mov
mov
push
repz
push
jne
or
dec
sub
or
in
rcll
sbb
xor
and
pop
pop
clc
roll
das
icebp
jle
dec
jecxz
mov
or
mov
popf
arpl
inc
iret
jbe
mov
insl
shrl
lds
pop
pusha
add
test
cmp
xlat
sti
fyl2xp1
pop
cmp
dec
out
data16
adc
jmp
and
cld
and
xchg
ret
stos
cld
jbe
push
gs
lods
inc
sbb
in
dec
loopne
lea
inc
dec
or
das
sbb
icebp
jb
in
jp
test
push
ss
lcall
push
mov
mov
dec
and
mov
mov
mov
pop
aam
or
sbb
pop
js
pop
add
scas
popf
insb
idivl
imul
enter
inc
js
lahf
or
cs
in
pop
dec
push
add
fnstsw
push
pop
dec
icebp
shrb
jg
mov
cli
test
or
ret
out
push
ds
cmp
jmp
test
lret
pop
mov
push
mov
dec
leave
mov
mov
jl
jp
bound
es
lahf
ljmp
sets
ljmp
push
daa
outsb
fcomps
adc
inc
sarl
or
test
test
dec
pop
jno
fistpll
xchg
scas
xor
loop
aas
mov
cld
mov
les
jns
and
xor
jo
shrb
test
fdivrl
mov
xchg
push
lods
fs
int3
xor
jmp
pop
mov
in
xchg
and
push
pop
add
push
add
in
pop
mov
fcomi
enter
lret
test
sbb
and
lret
sub
xor
out
aaa
adc
jae
and
and
adc
cmp
ljmp
mov
ret
jmp
shll
out
dec
jle
mov
cltd
push
dec
mov
or
ljmp
sbb
xchg
icebp
nop
xchg
inc
mov
push
cmp
sbb
dec
add
mov
pop
and
dec
mov
stc
jb
notb
jp
mov
jg
or
push
or
test
cmp
test
fistl
cs
adc
push
daa
cmp
lret
imul
aam
aam
lea
lods
fcoml
xchg
mov
outsb
mov
shrl
mov
out
mov
cmp
mov
jmp
sbb
les
rorl
cwtl
jp
or
popa
dec
icebp
dec
push
pop
loopne
xchg
mov
ret
sahf
fldenv
jl
push
xor
test
sub
dec
adc
lahf
mov
sahf
fistl
out
or
repz
inc
cmc
xchg
fdivrl
sbbb
cltd
and
xor
jmp
xor
shll
cld
rclb
loope
test
sub
test
sti
inc
pop
xor
xor
sbb
sarb
dec
pop
movsl
pop
jle
movsb
mov
fsub
xchg
sbb
out
xchg
mov
xor
jge
fstps
ss
cltd
or
push
pop
mov
js
add
jne
call
mov
push
lahf
scas
sub
cld
jnp
xchg
fiaddl
xchg
cmp
adcl
mov
mov
dec
lret
aam
cmc
scas
cmpsb
xor
fistl
lock
repnz
add
or
cmp
xor
mov
stos
add
lcall
iret
mov
lret
rcll
cwtl
dec
lds
repnz
push
or
sub
push
mov
not
xchg
adc
xor
mov
arpl
aas
out
mov
jle
movsb
ficompl
jecxz
in
fsubrp
pop
ja
test
hlt
inc
out
adc
mov
mov
cmc
pop
dec
imul
out
inc
test
outsl
int
push
mov
call
leave
dec
out
aaa
in
lods
push
pop
or
lcall
xchg
mov
cmp
add
add
pop
pop
pop
pop
push
dec
mov
divb
stos
add
addl
add
lea
adc
cmp
inc
subb
aas
nop
push
jo
inc
sub
or
adc
mov
jge
sbb
mov
jae
enter
and
sub
push
sbbl
lcall
adc
inc
ja
test
or
subl
addr16
aaa
xor
dec
aas
lret
popf
inc
mov
test
cmp
dec
push
in
add
adc
xlat
sbb
push
sbb
dec
xor
adc
push
sbb
and
aam
mov
subl
push
mov
shl
sub
aas
xor
insb
sahf
in
rolb
cltd
decb
push
adc
dec
pop
lods
das
in
shlb
imul
add
push
popa
sti
imul
or
daa
adcb
outsl
lahf
loop
test
gs
jnp
repnz
mov
outsl
mov
movsb
test
sbb
das
call
rclb
adc
mov
sub
sub
daa
dec
clc
outsb
lock
std
fisttpl
inc
and
stc
jle
xor
jmp
sub
pop
xchg
inc
adc
jno
arpl
and
pop
dec
xor
pop
leave
jne
int
imul
xchg
and
sub
adc
jo
daa
mov
cmp
addb
arpl
js
or
fst
cmpsl
jmp
ljmp
rdpmc
mov
mov
cltd
mov
add
fisubrs
add
loop
imull
push
xchg
gs
pop
mov
insl
sti
insb
push
xor
aad
ret
xchg
or
sbb
call
iret
loope
mov
cltd
cwtl
es
out
gs
out
jne
std
repnz
mov
or
and
bound
or
call
ljmp
inc
es
sbb
inc
ljmp
leave
mov
shr
fstl
sti
sub
mov
jecxz
inc
cmp
xchg
xchg
sbb
pop
fs
ss
lea
jno
push
mov
push
add
inc
mov
mov
cmp
enter
in
push
sbb
scas
add
imul
std
in
dec
adc
mov
sbb
add
lret
push
fldl2e
add
fcmovbe
enter
jb
cmc
pop
push
dec
or
pop
adc
adc
mull
fisubrs
ret
push
cmp
inc
mov
add
xchg
and
push
sub
mov
scas
iret
xchg
insb
jne
std
mov
hlt
adc
jo
xchg
and
rorb
incl
inc
icebp
into
fldcw
add
dec
add
add
test
ds
push
adc
jb
stc
arpl
js
add
mov
jae
ret
pusha
outsb
aas
xlat
xor
movsb
data16
loopne
adc
push
jp
add
stc
xchg
loop
add
test
shrb
das
mov
mov
mov
icebp
mov
cmp
pop
loopne
test
jmp
cltd
cwtl
pop
mov
pop
addr16
mov
inc
xor
mov
ss
pushf
jo
sbb
test
scas
sahf
lock
jge
mov
ja
fs
sarb
pop
fcmovu
dec
dec
cmpl
xor
popa
lcall
cmp
sub
int3
stos
fldcw
mov
inc
int3
popa
mov
inc
dec
fbstp
test
pop
sbb
std
aaa
mov
dec
enter
ja
cli
sbb
sahf
push
notl
and
rclb
loopne
in
insl
xlat
adc
mov
aam
sbb
aaa
jbe
in
out
insl
outsl
lock
lods
cmp
stos
sub
js
repz
popa
stos
sarb
mov
xor
hlt
sub
fsubrl
mov
or
xchg
testl
xor
stos
mov
pop
add
jo
cwtl
popf
insl
mov
es
cmp
movsl
or
lods
inc
xchg
out
cmp
hlt
push
cmp
xor
nop
cmp
fnstcw
cwtl
hlt
in
and
add
stc
push
or
fdivl
push
mov
pop
movsl
arpl
mov
pop
adc
mov
add
mov
ret
xor
movsl
dec
cwtl
in
icebp
loop
push
mov
lea
dec
xor
outsb
jo
add
roll
repz
xor
pop
cmc
xchg
sub
movsb
jnp
or
cmp
add
mov
les
dec
fildl
decl
sub
push
inc
mov
dec
jg
sbb
or
addr16
cltd
lock
sub
in
fst
push
inc
add
mov
lods
pop
hlt
and
shll
mov
pop
push
adc
lret
lret
xchg
mov
push
push
xchg
out
loope
in
pop
insl
jg
or
test
or
outsb
sbb
mov
mov
push
divl
jbe
in
push
movsb
or
cmp
int3
lds
jbe
inc
je
mov
sub
sbb
inc
mov
popa
repnz
bound
pop
addr16
jg
pop
ja
dec
dec
adc
adc
iret
jbe
call
aam
nop
ret
out
mov
jnp
int
or
mov
sbb
int
call
mov
xor
pop
mov
mov
sbb
xor
inc
das
dec
aam
push
jns
mov
lret
fsub
nop
fcmovbe
or
mov
sbb
xor
fisubrl
add
imul
sub
dec
or
movsb
push
dec
imul
xchg
mov
gs
int3
adc
repz
jo
pop
dec
dec
or
jb
jg
ja
stos
mov
loope
dec
cmp
aaa
mov
aad
inc
inc
xchg
cwtl
repz
lahf
test
das
push
lret
ljmp
pop
jnp
aad
pusha
mov
rcrb
mov
std
inc
cltd
adc
rolb
xor
addr16
jne
bound
pop
add
add
add
inc
push
inc
push
push
push
outsl
pop
mov
iret
push
push
add
shr
in
aas
and
aad
rclb
dec
mov
lods
rclb
mov
inc
xor
cmp
nop
inc
adc
pop
add
insb
jae
jge
mov
mov
mov
push
or
fs
iret
test
test
mov
mov
std
sub
ret
pop
mov
fptan
jns
and
pop
movl
dec
mov
movb
sub
mov
sub
inc
sub
pop
fisttps
inc
test
jmp
bound
mov
inc
xor
rcrl
and
into
mov
fdivrp
push
jp
push
xchg
outsl
sub
inc
mov
fmul
lock
or
lcall
iret
mov
or
cmpsl
sub
je
adc
addb
lods
cld
leave
fwait
insl
int
mov
mov
popa
fldl
rorb
imul
or
push
test
xorl
iret
jno
dec
mov
cmp
mov
mov
lods
cltd
push
imul
cmp
push
jl
adc
imul
mov
pop
and
fisttpl
cmp
dec
imul
adc
loop
mov
jae
out
out
dec
push
in
pusha
pop
cltd
in
in
push
movsb
insl
cli
in
cld
test
int3
sbb
add
fsubrs
adc
push
orl
mov
test
jl
inc
fldenv
sub
adc
mov
mov
xchg
mov
aas
lds
bnd
sbb
jle
mov
adc
add
dec
pmuludq
mov
mov
dec
and
cmp
mov
sahf
ret
stos
xchg
sbb
dec
add
and
jge
mov
out
xor
adcb
mov
aad
iret
ss
xor
js
clc
cmp
cmpl
iret
das
sub
xor
jb
fwait
cs
movsb
lahf
xorb
add
jecxz
sbb
mov
int
arpl
imul
xor
dec
or
dec
mov
pop
lahf
push
dec
xchg
or
sub
into
fwait
push
outsl
push
xor
adc
sbb
ss
jbe
les
dec
mov
imul
loope
pushf
jno
lea
fsubl
lea
mov
in
scas
jns
mov
jb
enter
push
push
int
lds
cmp
and
out
pop
or
fdivrl
sti
jo
xchg
or
insl
rcl
xchg
ficoml
inc
popf
jp
mov
adc
pop
jo
iret
outsl
mov
push
ljmp
adc
adc
add
out
pop
or
sub
aad
push
xchg
cmp
sbb
xchg
mov
push
cmpsl
aaa
inc
fwait
sbb
jl
jmp
popf
js
inc
pop
scas
mov
aad
dec
gs
inc
adc
inc
scas
sbb
shrb
ret
and
sbb
loop
jns
ficoms
stos
or
arpl
cld
sbb
add
mull
insl
push
dec
pop
mov
xchg
adc
les
dec
add
pop
mov
fidivs
fdivp
add
sbb
in
or
lret
je
and
call
xor
hlt
sbb
or
pop
push
mov
xor
xchg
xor
and
xor
sbb
insb
xor
ljmp
adc
das
aam
and
sti
dec
je
pushf
imul
adc
mov
mov
test
aas
mov
mov
mov
adc
mov
movsl
enter
push
pop
fs
stc
and
out
popf
orb
cmpsb
daa
push
cmp
mov
xchg
test
stos
push
aas
dec
ljmp
lds
repz
ss
in
psrlq
cmp
sbb
call
pushf
out
pop
lcall
cwtl
lods
fcoml
adc
popf
es
mov
imul
outsb
jmp
fs
inc
inc
adc
adc
subb
insb
inc
sub
pop
mov
xchg
imul
push
mov
jp
lret
enter
pop
dec
lds
fbstp
fmulp
pop
lahf
xor
lods
cmpsb
outsb
inc
mov
loopne
mov
mov
adc
loop
icebp
rorb
fiaddl
test
cmp
dec
rcrl
out
push
out
imul
or
sbb
addb
mov
clc
jb
arpl
jmp
hlt
push
lret
inc
xchg
cli
or
inc
loop
mov
mov
pop
fiaddl
bound
sahf
repz
mov
data16
in
pop
sbb
mov
and
stc
ljmp
mov
mov
arpl
jne
gs
add
aaa
lret
in
xlat
ljmp
xchg
iret
adc
stos
push
dec
out
pop
mov
sub
jns
stos
push
mov
test
pop
adcb
mov
push
pop
cmp
mov
xchg
imul
or
adc
pop
push
add
fbld
cwtl
xchg
faddp
inc
adc
jne
pop
sbb
add
xor
insb
jo
les
decb
je
and
loopne
mov
jno
cmpsb
or
jo
leave
mov
or
adc
out
ret
xchg
xchg
jbe
mov
daa
shll
cmp
fldenv
or
jnp
arpl
lea
ja
inc
ficompl
negb
inc
into
pop
push
cmp
das
xor
adc
test
out
mov
mov
cld
and
push
adc
push
aas
add
add
add
push
dec
pop
dec
pop
push
stos
mov
stc
jl
icebp
xchg
mov
add
sbb
decl
int
pop
add
std
push
jmp
push
aam
mov
or
addr16
push
roll
leave
out
scas
insb
dec
js
xchg
mov
mov
inc
mov
add
movsl
mov
pop
xor
cs
add
jl
ljmp
jl
dec
data16
dec
dec
inc
and
push
bnd
pusha
xchg
dec
loopne
xchg
cs
mov
mov
and
inc
out
xor
call
test
xchg
mov
cltd
xchg
xchg
sbb
mov
shrl
mov
es
orl
push
push
mov
fldcw
repnz
fs
inc
jg
or
das
cli
jo,pt
in
shl
cwtl
inc
mov
dec
fldenv
push
je
xchg
cltd
cmp
mov
mov
repz
inc
ret
mov
and
or
dec
inc
sar
subb
mov
sbb
lahf
xlat
je
xor
inc
mov
mov
and
sub
lret
stc
mov
insl
push
pop
outsb
cmp
and
lock
mov
sub
push
inc
cmpsl
addr16
mov
fwait
lods
imul
out
mov
mov
faddl
jmp
mov
sti
aas
mov
push
hlt
cmp
pop
push
push
scas
push
enter
loop
pop
rorl
jle
imulb
mov
push
shll
mov
push
pop
push
push
jge
lahf
adc
bnd
sti
and
and
icebp
and
sbb
push
and
add
test
loop
mov
sub
jmp
mov
cmp
std
push
aaa
xor
jo
outsb
mov
loopne
mov
gs
cld
movsl
fucomi
faddl
aaa
push
mov
aas
into
push
roll
xchg
arpl
setp
ljmp
stc
mov
push
fcmovnu
cmpsl
mov
stos
xchg
mov
ja
out
popa
mov
into
pop
mov
inc
jns,pn
sbb
jo
fcoml
outsl
pop
pop
fcmovne
xchg
out
push
daa
std
mov
mov
icebp
cmp
dec
mov
out
or
popa
jb
mov
fisubl
mov
js
push
add
outsl
pop
jne
and
roll
addl
push
jbe
dec
push
sub
fwait
arpl
bound
lret
push
stos
jle
and
dec
test
es
aam
sbb
fsubrl
inc
out
jae
cmp
int3
mov
or
xchg
les
inc
subb
inc
push
call
decl
clc
adc
test
les
inc
mov
pop
lea
sub
mov
push
lods
mov
repnz
add
mov
roll
pop
pop
mov
shl
add
or
adc
repnz
jge
fsubl
out
adc
xchg
mov
cli
rcll
adc
mov
jp
xchg
cmc
outsl
sub
inc
rorb
scas
dec
inc
push
jp
in
out
pushf
xchg
shr
cli
mov
ja
jmp
xchg
mov
and
inc
pop
shrl
inc
push
xor
movsb
sbb
xchg
es
jo
sub
in
mov
dec
mov
inc
incb
mov
lahf
mov
stos
daa
push
pushf
xchg
nop
sub
xchg
enter
pop
mov
cmc
mov
mov
popf
sti
push
jge
xlat
dec
pop
xor
push
push
pusha
out
je
test
xchg
iret
mov
nop
lds
mov
sub
and
ljmp
jecxz
xchg
ja
jnp
cmc
ds
jmp
or
imul
cmp
lods
push
mov
push
push
mov
xchg
cmp
adc
pushf
lret
push
sub
popf
insb
adc
lret
push
mov
scas
mov
and
sub
lret
inc
sbb
pop
inc
add
mov
lock
push
add
jnp
insb
xchg
icebp
push
cwtl
out
lock
or
push
cmp
mov
sub
mov
pop
mov
popf
jno
inc
test
fs
aad
inc
shrl
sbb
outsl
adc
mov
mov
les
or
pushf
dec
pushf
imul
les
mov
sub
pop
jl
mov
ret
adc
dec
or
aaa
mov
inc
jbe
mov
mov
gs
les
lret
out
rorb
push
ret
pop
ja
es
cmp
sub
cmp
in
out
aaa
in
jns
xchg
cmp
pop
xor
or
fmul
test
jmp
jle
cmp
mov
dec
dec
dec
stos
in
pop
mov
inc
add
mov
shrl
dec
mov
push
and
lret
and
mov
xchg
or
ss
in
mov
cmpsl
xor
movsl
popa
loop
addr16
ss
int3
fldl2t
mov
jnp
mov
cmp
iret
sbb
push
imul
clc
ds
adc
out
or
adc
nop
jns
lods
sbb
dec
ja
xor
out
sub
outsl
xor
mov
fstpt
fs
hlt
add
lds
or
pop
jle
push
movsl
rcrl
call
xchg
loope
jno
push
aam
sub
mov
dec
loope
gs
enter
add
call
mov
rcrb
xchg
jmp
scas
add
shl
add
pop
pop
idiv
outsb
out
mov
cmp
xor
repnz
add
jb
in
jne
cltd
sbb
int
enter
jge
jae
popa
fmulp
and
push
jmp
ja
test
push
rcrl
pop
dec
int3
add
add
add
dec
push
pop
push
pop
dec
idivb
jns
sbb
jg
mov
add
bound
divl
repz
imul
adc
dec
mov
xor
pop
mov
add
xor
call
push
and
cld
cmp
xor
hlt
ret
xchg
adc
popf
imull
inc
aam
mov
jo
xlat
js
cltd
das
pop
shll
les
fiadds
jns
mov
adc
mov
inc
jns
ljmp
push
jns
pop
int
repnz
lock
xchg
sub
mov
lret
cmpb
mov
xchg
leave
rorl
lahf
fs
ret
sub
mov
adc
cltd
inc
xor
imul
sbb
ljmp
mov
lds
bound
mov
popa
in
data16
xchg
icebp
cmp
cs
or
rolb
dec
in
adc
dec
push
mov
cmc
lods
mov
in
add
mov
daa
mov
cmp
inc
add
cmp
cmp
addl
sbb
inc
jg
int
jl
sub
out
jg
mov
mov
call
bound
jl
pop
shl
cmc
adc
jge
aaa
or
dec
ffreep
push
push
addr16
jbe
and
jno
and
aad
inc
ja
sbb
mov
inc
lods
stc
call
cmpsl
dec
pop
aaa
stos
push
mov
repz
mov
sub
pop
int
stos
push
repz
fstpt
stc
jo
jp
push
jl
mov
ss
inc
in
iret
push
pop
sbb
inc
cmp
xor
push
fldt
push
push
push
in
inc
pop
or
xchg
dec
lcall
add
and
out
adc
cmpsl
mov
mov
ret
arpl
sbbl
rcrb
cli
enter
xchg
mov
fdivl
or
cmc
sbb
dec
sbbb
xchg
pop
fwait
pop
ret
cwtl
push
sub
arpl
xchg
add
fistpll
arpl
lods
jecxz
fldcw
mov
fs
and
mov
sti
xchg
mov
stos
mov
lods
nop
pop
xor
rorl
test
rolb
pop
mov
cmp
mov
push
outsb
and
loope
fsts
xor
test
testb
push
inc
test
addl
repz
push
jnp
mov
pop
xchg
out
clc
sbb
clc
iret
sbb
sub
xor
sub
add
inc
inc
push
dec
fsubrs
or
shlb
loope
mov
xor
inc
jmp
insb
cmp
sub
fistpll
cmp
adc
dec
push
scas
xchg
js
mov
mov
test
jg
sahf
mov
repnz
icebp
sbb
adc
inc
in
in
imull
inc
mov
xchg
mov
call
imul
mov
ja
mov
adcl
jmp
mov
mov
ds
shrl
and
mov
pop
cmp
xchg
repnz
ja
dec
gs
adc
ja
jmp
or
push
mov
dec
fidivrs
sub
out
mov
add
int
push
sti
scas
movsl
mov
ljmp
xor
mov
dec
xchg
push
push
pushf
je
int
fs
inc
push
loop
loop
imul
add
pop
mov
out
cmp
mov
adc
cmp
loope
sbb
das
inc
fldl
aaa
inc
insl
icebp
push
leave
inc
push
mov
mov
fs
xchg
add
adc
rcrb
cmp
divb
sub
mov
insb
into
mov
cmp
in
rol
dec
movsb
out
dec
out
imul
in
jmp
fsubrs
clc
imul
movsl
scas
ljmp
adc
icebp
and
mov
nop
push
cmc
add
outsl
xchg
inc
fwait
mov
fwait
lahf
dec
movsl
jmp
incb
pop
mov
jl
xchg
xchg
sub
outsb
push
jp
lods
mov
xlat
out
repz
adc
popf
mov
dec
and
imulb
add
pop
adc
test
sub
add
loopne
and
mov
or
insl
test
adc
dec
add
dec
test
jecxz
jb
mov
cmp
mov
dec
xchg
jge
mov
dec
add
push
sub
ljmp
int3
mov
mov
sub
mov
ds
xor
ret
cwtl
fdivrp
jno
mov
pop
pop
pop
out
sti
pop
inc
or
mov
xor
int
xor
stc
fstl
push
sahf
add
mov
push
ljmp
sub
dec
jbe
mov
cld
movsl
inc
fsubs
sub
mov
test
push
push
sbb
clc
add
jo
js
mov
loop
cmp
and
test
xchg
inc
lret
mov
fwait
push
pop
popa
movsl
lods
adc
sti
xor
sub
mov
mov
test
push
aam
mov
pop
sti
inc
inc
mov
shlb
and
push
xor
pop
stos
dec
lret
pop
sub
mov
push
pushf
jp
jns
out
and
inc
lret
aam
fwait
add
rcrb
xlat
xor
pop
xchg
inc
out
pop
cmpsb
pushf
push
ljmp
cmpsb
adc
jg
iret
test
aam
gs
in
pop
in
in
imul
mov
push
shlb
mov
push
stos
popa
lock
and
pushl
sbbl
xlat
inc
aaa
pop
sub
xchg
cmp
xchg
xchg
inc
in
xor
imul
lock
adc
sbb
add
add
add
dec
push
dec
push
pop
pop
mov
stos
or
les
add
jp
and
mov
popf
fwait
stc
or
or
and
adcb
inc
or
push
jno
sti
sbb
sub
mov
lahf
lret
mov
sbb
pop
sub
cwtl
out
rcrl
xchg
es
push
cli
mov
jne
fidivl
sub
xchg
shl
scas
rorl
inc
sbb
cmpsb
push
clc
pop
hlt
mov
in
push
orl
rcr
xor
orb
and
and
test
sbbb
and
sub
and
lock
test
inc
adcb
and
sub
das
push
pop
and
and
cmpsl
bnd
jnp
call
push
lods
cli
push
stc
mov
adc
inc
outsb
or
stos
adc
jno
push
push
icebp
mov
fdivp
sbb
pop
cmp
dec
mov
in
aad
sarl
out
repnz
push
inc
sub
fdivl
add
pop
shll
lods
into
sahf
xor
out
cmp
sti
push
aad
scas
popa
xchg
repz
push
mov
dec
push
sub
mov
clc
insb
ret
in
add
mov
movsb
xchg
test
jbe
dec
inc
call
push
mov
sbb
cltd
sub
and
mov
xchg
fsub
aad
xor
repnz
lds
push
fdivs
push
rcrb
shl
bnd
mov
cmp
xor
inc
lock
jge
push
jnp
pop
outsl
xchg
add
iret
pop
push
dec
bound
adcl
inc
sbb
aas
push
mov
cmp
inc
dec
sarb
push
subb
fldcw
icebp
mov
xor
cld
popa
jmp
subl
and
dec
push
xchg
sbb
mov
and
jge
xlat
nop
pushf
fldcw
lds
inc
add
repz
rorl
mov
jns
xor
adc
cs
fsubs
add
adc
or
mov
mov
dec
push
jle
cmpsl
out
rorl
movsl
pop
xchg
inc
mov
sub
xchg
jne
adc
cmp
jno
inc
mov
cmp
mov
out
pop
mov
subl
stos
leave
mov
in
lret
push
add
enter
mov
xor
int3
adc
cltd
push
lods
mov
arpl
inc
pop
mov
mov
cmpsb
pop
mov
out
ret
cmp
sbb
add
inc
outsl
pusha
or
test
divl
xor
adc
inc
push
push
movsb
je
fidivrl
mov
iret
test
sub
mov
sub
mov
andl
in
adc
nop
inc
adc
sahf
or
jns
cli
adc
push
je
mov
das
pop
testb
popa
aaa
add
add
add
pop
jl
mov
sbb
in
leave
and
mov
jae
pop
stos
movnti
mov
cmc
and
into
mov
mul
push
aas
leave
ret
stos
or
das
imull
and
mov
sub
xchg
leave
xor
pop
imul
shlb
add
aas
aam
mov
push
add
shll
test
movsb
sub
add
adc
call
pop
inc
outsl
ret
rclb
in
mov
bound
pop
inc
mov
insb
loope
arpl
push
fwait
xchg
lahf
mov
mov
incl
repnz
or
or
cs
sub
test
jns
mov
push
push
mov
dec
aaa
mov
fidivrl
and
xor
gs
pop
xchg
outsl
jle
push
inc
jne
adc
xchg
ja
fdivr
jp
scas
xor
and
dec
in
sbb
xor
ficomps
mov
jns
out
pusha
cld
push
fwait
lea
bnd
enter
jae
mov
scas
xchg
jp
inc
stos
out
lahf
sbb
shlb
es
cltd
sbb
push
dec
rcrl
adc
push
lock
ret
mov
xchg
mov
mov
out
dec
outsb
adc
fisttps
mov
fidivrs
sub
push
call
xor
mov
inc
pop
lea
repz
adc
xlat
mov
jecxz
cwtl
nop
gs
lret
cmp
aad
mov
stos
and
sbb
je
adc
aas
mov
shlb
int
adcb
sbb
ret
mov
xchg
scas
inc
cwtl
orl
imul
jp
imul
sti
enter
sub
mov
mov
adc
adc
sbb
push
fidivl
sub
stc
in
adc
inc
mov
filds
icebp
stos
mov
lahf
jmp
fnstsw
sbb
ret
pop
or
int3
sbb
lea
out
movsl
mov
inc
push
mov
mov
ds
pop
mov
jns
bound
testl
and
xchg
ds
xor
mov
test
inc
mov
scas
push
and
dec
push
in
ja
les
nop
cmc
bound
or
push
leave
outsl
leave
insl
fisubrl
mov
mov
adc
js
cld
or
jnp
sahf
cmpsl
ret
fmull
xchg
shl
mov
movsb
mov
jb,pt
or
lds
movsb
mov
xchg
test
fmuls
pop
into
popa
push
push
lahf
stc
or
jmp
outsl
aam
sbb
mov
and
sub
mov
call
jge
mov
add
push
es
scas
sub
fiadds
or
add
adc
in
ljmp
ljmp
lods
dec
jmp
cmpsb
gs
andb
add
add
inc
push
push
push
push
push
inc
push
test
mov
je
add
addl
add
idivl
xor
fstl
bound
pop
and
repz
js
push
pop
cli
and
lret
or
xor
clc
jns
sub
mov
rclb
lahf
out
fisubrs
sub
add
jnp
ja
fbstp
dec
fld
test
xor
lods
iret
lock
mov
frstor
loopne
js
inc
xchg
adc
or
sbb
xchg
xor
cmp
and
ljmp
sarl
xor
sub
fs
push
out
push
shrl
loopne
ss
pusha
jae
mov
addr16
shll
xlat
xchg
mov
mov
repz
mov
cmp
loopne
stos
mov
or
stos
inc
push
movsl
pop
cs
into
repz
test
inc
mov
ds
lret
mov
mov
cmp
sbb
and
or
in
jo
mov
popa
xor
mov
mov
js
rcrl
scas
push
jmp
das
nop
jns
dec
mov
xchg
mov
xor
enter
sbbl
mov
ds
lahf
xlat
dec
pop
ficomps
rcl
lds
sahf
inc
cmp
lcall
call
jb
and
sbb
and
ret
lock
imul
mov
leave
adc
mov
imul
popa
or
pop
out
movl
stos
mov
add
mov
pop
add
cmp
mov
daa
in
xor
cmp
fcoms
adc
sbb
adc
jnp
jbe
repnz
ds
fsub
mov
push
enter
ljmp
enter
ljmp
shl
dec
sub
lock
jb
jle
cmpsl
cmpsb
pushf
cld
sbbb
test
dec
das
sbb
inc
sbb
mov
adc
cmp
daa
das
xor
or
lea
std
mov
mov
pop
lret
in
push
jp
dec
cmpsl
gs
mov
fadd
in
aas
lret
mov
xor
push
test
out
outsl
adc
dec
flds
cli
cmp
mov
icebp
cs
add
jle
adc
push
loop
xor
xor
roll
cmp
mov
inc
cli
lcall
ret
fldenv
push
or
imul
pop
adc
mov
shrl
cmp
xor
jmp
shrd
add
out
shrb
pop
mov
push
cwtl
in
mov
subl
push
inc
loope
in
data16
fcmovnb
fstpl
cmp
sbb
in
or
adc
cmp
inc
lods
fidivrs
popf
xchg
mov
les
scas
test
in
lods
or
push
shlb
cmpb
xchg
and
pop
sub
das
pushf
or
and
push
shrl
js
push
aad
pmaxsw
cmp
dec
and
or
or
fidivrl
outsb
popw
jo
mov
icebp
ret
mov
sbb
test
fisubs
mov
lahf
out
clc
sub
push
adc
fmuls
jo
cmp
mov
dec
jb
insl
jge
or
scas
jae
push
popa
push
sub
out
mov
pop
aam
enter
inc
nop
es
or
fstpl
shlb
push
in
rorb
dec
in
dec
dec
adc
mov
and
xchg
repz
ja
xchg
outsl
repz
nop
fiadds
inc
mov
addr16
bound
dec
push
enter
inc
sbb
mov
xchg
clc
mov
icebp
lds
lret
or
addr16
jno
mul
jl
jmp
fs
xchg
aaa
aaa
fnclex
notb
inc
cs
xor
push
cmp
mov
mov
adc
fs
xor
or
or
and
out
nop
jecxz
ror
mov
jno
fcoml
insb
cmpsb
adc
into
fstl
ds
call
call
and
xchg
xor
aas
das
jne
sub
sub
jge
jl
inc
cmpsb
jae
int
pop
enter
push
mov
jnp
xor
mov
pop
pop
enter
hlt
xorb
out
cmp
rcrb
cmp
or
loope
ret
mov
push
xchg
adc
lahf
jno
pushf
cmp
les
push
ss
out
mov
std
sub
jle
adc
xchg
rcll
mov
mov
or
push
sub
jle
repz
cmp
inc
hlt
jmp
mov
inc
inc
bound
xor
stc
pop
sbb
rclb
test
popa
mov
es
mov
in
mov
hlt
push
pushf
push
and
add
jge
jg
in
mov
aad
in
sahf
stos
enter
out
arpl
pop
cmc
aas
mov
shlb
repz
out
xor
xchg
loope
pop
push
stos
ss
inc
pop
add
mov
sub
div
fsubp
movsb
dec
aam
adc
stos
sbb
stc
push
push
loopne
ss
div
rcll
pusha
xor
or
inc
mov
adc
ljmp
ja
sub
xor
pop
sub
icebp
lock
test
in
adc
cmc
fcomps
repnz
mov
dec
add
stos
es
cmp
pop
psrlw
push
mov
jmp
ds
dec
add
inc
in
adc
or
adc
sbbb
fidivrs
loopne
jno
cmpb
xchg
and
js
push
stos
pop
cmc
xchg
popf
or
mov
xor
sub
imull
or
mov
sahf
mov
ja
scas
in
push
or
pop
add
dec
pop
daa
cmc
fistpl
jno
push
mov
mov
jg
and
cmc
mov
jns
push
add
ss
mov
ret
add
add
add
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
negl
not
add
addl
add
mov
mov
and
inc
xchg
les
stos
data16
fisubl
inc
cmp
xchg
rcrb
imul
fistl
mov
xor
dec
xchg
cs
push
ret
cmp
lock
jecxz
out
outsl
add
mov
jecxz
inc
std
mov
jge
push
ss
es
fstpl
fcompl
mov
imul
push
test
shr
pop
inc
fidivl
and
enter
test
stos
sub
div
imul
sub
pop
inc
out
imul
jg
mov
dec
shll
cli
iret
test
fisttpll
dec
inc
es
cmp
jmp
mov
and
add
push
andb
lea
add
pop
inc
sbb
inc
in
dec
push
sub
pop
ja
sbb
sub
push
fcmovnu
xchg
dec
inc
sbb
and
mov
mov
push
pop
jle
xor
pop
lret
ret
xchg
dec
lret
shl
xchg
inc
pop
std
ds
ss
mov
add
fbstp
mov
adc
cltd
in
mov
imul
mov
outsl
gs
ljmp
stos
push
fnstsw
mov
inc
add
cld
xor
mov
je
in
sti
mov
jne
jecxz
insb
shlb
pop
dec
xchg
lds
call
add
cmpb
leave
pop
jmp
mov
daa
inc
orb
test
out
jbe
out
fldt
sbb
pop
inc
leave
inc
dec
and
add
xor
xorl
pop
xor
sbb
mov
dec
pop
mov
cmp
xor
push
call
lods
push
je
addr16
lcall
adc
jp
xchg
or
das
push
mov
aad
lahf
enter
push
bound
jge
pusha
jmp
pop
and
mov
pop
sub
sti
and
out
imul
frstor
mov
pop
in
test
je
mov
inc
dec
jbe
mov
jb
mov
sub
test
push
jmp
in
adc
sbb
mov
mov
or
lea
or
repz
mov
add
mov
push
cmp
mov
mov
xchg
ds
xchg
dec
stc
in
cmp
pusha
sub
into
lahf
inc
fs
dec
or
mov
mov
insb
xor
push
lcall
sub
stos
test
popf
cmpsb
sbb
add
dec
jmp
mov
sbb
push
jo
xchg
jno
jecxz
fisubrs
in
imul
push
jb
es
aam
pop
loopne
xchg
or
adc
cld
dec
xor
xorl
add
lahf
jb
call
adc
bound
cmc
dec
adc
add
clc
push
xchg
jns
nop
popf
xor
mov
ljmp
mov
aas
inc
sbbb
lea
sub
add
ss
adc
jg
insb
add
loopne
mov
ljmp
leave
adc
subl
sbbl
mov
les
int
pcmpeqb
dec
pop
xchg
dec
jg
and
push
pop
mov
fwait
in
lret
mov
div
movsb
and
imul
dec
xchg
cmpl
cmpsb
add
adc
movb
mov
mov
inc
lcall
push
jo
aaa
scas
fxam
test
xchg
xlat
adc
sbb
aam
pop
fldz
jle
arpl
cmp
cmp
clc
adc
int3
cli
mov
xchg
mov
jo
adc
mov
xchg
xor
or
or
je
js
loope
pop
sub
cmp
push
dec
jp
divl
cmp
jp
push
repz
aas
sbb
dec
or
addr16
jmp
repz
xchg
inc
pop
and
sub
ret
dec
popa
or
jge
stc
add
dec
inc
imull
outsb
jecxz
pop
xchg
stc
loop
push
pop
fsubrs
dec
test
dec
adc
repnz
scas
ret
lcall
jo
push
sub
ret
lret
push
pop
xchg
add
movsb
dec
xor
or
and
cmc
aas
test
loope,pn
dec
mov
out
inc
cmp
and
jnp
popa
dec
in
imul
xor
leave
mov
sti
test
das
or
jl
mov
lods
inc
xchg
dec
aad
and
test
out
xchg
sbb
jmp
push
jg
pop
sbb
mov
js
jno
icebp
sti
jnp
mov
mov
or
leave
adc
pop
imul
in
adc
stc
mov
icebp
ds
pop
fstl
fwait
loopne
popa
xor
jns
lods
xor
adc
sub
sub
mov
lahf
bound
bnd
fdivs
rorl
shrb
ret
pop
andb
loop
lahf
ficoml
cmc
jo
cmp
test
in
outsb
dec
sbb
das
sub
ret
into
leave
mov
pop
inc
cmc
lods
inc
movsl
sub
cmpb
insl
fdiv
inc
jb
sub
icebp
js
mov
xchg
or
pop
fisttps
or
inc
mov
jmp
push
int3
push
nop
in
mov
fcmovbe
shll
rcll
icebp
frstor
jae
jbe
lock
leave
adc
add
scas
mov
mov
or
jns
leave
lcall
inc
sbb
les
jl
adc
jmp
js
pop
cmc
psubsb
xchg
sub
subl
les
push
and
mov
bound
mov
sbb
scas
loopne
mov
mov
jbe
sub
sahf
add
das
inc
push
inc
pop
xchg
sub
dec
add
add
add
push
push
push
push
push
inc
rorl
popf
sbb
je
fadds
add
cmp
pop
rol
loop
xlat
inc
popf
jae
test
sbb
pop
ds
cltd
xchg
xchg
stc
rorb
repz
call
cmp
xor
cld
clc
cltd
imul
shlb
clc
subl
xor
arpl
leave
iret
add
pop
ja
hlt
rcl
push
fstpt
outsb
xchg
add
je
adc
push
stc
push
xchg
or
scas
xor
lods
push
aas
lcall
mov
arpl
outsb
insb
mov
push
cmp
mov
or
dec
xchg
fistpl
cmpsl
or
push
inc
mov
lret
cmp
add
in
or
mov
enter
test
xor
push
xchg
xor
adc
lcall
dec
aam
jne
rep
mov
mov
icebp
mov
mov
inc
movlps
addr16
insl
inc
scas
sub
les
push
or
jmp
imul
enter
mov
sarl
push
mov
adc
mov
dec
pop
test
call
push
cltd
sbb
imul
test
lea
mov
rol
cmp
aas
pop
addb
aas
adc
es
insb
ud0
mov
in
std
mov
ljmp
out
sub
pop
sarl
inc
mov
loopne
sbb
jne
cmp
loopne
xor
test
js
sub
add
xor
lret
cli
dec
aad
popf
fs
push
test
incl
xchg
iret
jb
cli
push
pop
cmp
jge
call
loope
fidivrs
mov
or
dec
push
and
aaa
mov
sub
addr16
xchg
jb
add
fistl
push
push
xor
aam
lcall
cmc
repnz
xchg
mov
mov
scas
pop
jnp
jge
xorl
and
mov
pop
pop
adc
xchg
aaa
cmc
inc
cmp
daa
pop
or
loope
pop
lock
jge
sbb
movsb
dec
cmpsl
add
pop
lods
daa
data16
sub
ljmp
stc
pushf
sbb
xchg
std
in
or
js
adc
or
iret
sbb
xchg
loope
mov
iret
ja
in
in
fwait
lcall
pop
sbb
mov
cli
xchg
sbb
adc
push
add
mov
and
push
fadd
pop
repz
repnz
mov
out
or
jne
cwtl
or
pop
and
ret
pop
xor
dec
or
xchg
aaa
mov
jns
xchg
arpl
je
in
pop
lods
aas
mull
xor
lds
jbe
jns
mov
out
lahf
cli
jno
cmp
mov
pop
dec
or
stos
cld
jb
mov
int3
test
imul
ljmp
sub
xchg
adc
outsl
out
pop
fidivs
dec
dec
aam
in
jne
pop
mov
jo
dec
sub
dec
movsl
cmc
xor
cltd
inc
lds
jl
jne
and
cmpsl
cmp
and
jo
ret
push
aaa
rolb
negl
aad
push
adc
xchg
jb
loop
or
aad
lods
fistps
jl
and
push
pop
pop
fsubr
aad
test
mov
jmp
add
scas
in
sbb
mov
cmp
mov
test
sub
cltd
pop
xchg
dec
dec
push
push
push
sub
sub
pop
cmp
aad
inc
js
add
xchg
push
sarb
inc
aas
mov
pop
mov
adc
repz
into
jmp
popa
lret
fldl
mov
add
jle
inc
movsl
inc
cmpsl
movsb
sub
enter
ss
or
mov
push
cmp
fmuls
scas
ds
mov
xor
pop
mov
lods
xlat
cmp
push
dec
les
adc
arpl
inc
int
rolb
notb
jae
cli
pusha
push
mov
bound
or
inc
jb
xchg
jle
std
fadds
fsubs
lock
xchg
mov
imul
xor
insb
push
jecxz
pop
inc
lea
or
mov
int3
sbb
pop
add
pop
imul
pop
fiadds
gs
adc
sbb
pop
push
mov
fimuls
jmp
mov
ror
ficompl
or
pop
mov
jge
lods
das
add
push
aas
pushl
sbb
or
dec
adc
fstl
jmp
jno
xor
movsl
xor
das
cs
enter
sbb
xchg
jl
sti
pop
es
and
lea
add
cltd
add
rol
out
pop
in
push
xlat
mov
xchg
fldcw
dec
cmc
shrl
mov
scas
and
xchg
push
call
pop
sub
mov
push
or
sub
jg
mov
outsb
cli
or
pop
imul
or
cli
mov
mov
inc
in
and
addr16
pop
rorl
mov
sbb
sti
pop
scas
xchg
and
loope
xor
arpl
out
adc
movsb
add
push
lock
mov
or
cmp
dec
sbb
xchg
pop
lock
jl
mov
fists
and
pop
cltd
cmp
or
dec
rcl
jl
dec
pushf
fdivrl
sahf
in
cltd
pushf
ds
daa
lret
mov
and
scas
xchg
mov
sbb
in
mov
aad
pop
jge
xchg
dec
in
mov
xchg
aaa
mov
add
stos
ffree
mov
scas
inc
sbb
mov
adc
sub
adc
hlt
sbb
inc
xchg
push
mov
sub
xor
es
mov
jge
and
shll
mov
shrb
or
ss
ret
les
ja
fsts
outsb
push
add
add
add
push
push
pop
push
pop
pop
xchg
stos
mov
das
std
fiadds
add
leave
adc
mov
mov
pop
jns
dec
pop
sbb
imul
rcrb
and
lret
das
cwtl
aas
imul
xor
rcrb
std
movsl
pop
pop
adc
sub
mov
shr
jp
inc
xorl
in
mov
sti
sbb
rorb
or
or
dec
cmc
push
cs
inc
arpl
fisubrl
push
sub
loop
fnop
loope
inc
mov
in
idiv
dec
jge
and
mov
jnp
fnstsw
repnz
fs
adc
adc
xchg
pop
adc
xchg
add
movsb
inc
push
sub
push
rcrb
xchg
roll
inc
mov
sub
ret
popf
cltd
sub
sbb
daa
rcll
pop
dec
mov
nop
xchg
outsb
push
or
imul
fimuls
mul
jae
sub
adc
lds
stc
adc
mov
sahf
or
scas
mov
xor
fcomi
sahf
nop
ror
jne
std
das
jge
les
jp
ret
sbb
fildll
xor
cmp
or
sar
ffree
dec
and
adc
fucom
cmpsb
add
fldl
inc
in
icebp
aas
mov
ror
pop
sbb
dec
pop
outsl
out
mov
enter
out
xchg
std
data16
arpl
xor
cvtdq2ps
sub
jecxz
mov
jb
pop
inc
mov
inc
jo
dec
inc
adc
inc
push
sub
jbe
arpl
jnp
mov
jae
mov
sub
pop
jp
and
out
cmpsl
jp
push
adc
inc
les
ret
pop
les
iret
dec
mov
dec
std
lods
shll
movsl
jbe
jecxz
adc
xor
outsl
dec
and
cmc
icebp
inc
fwait
popf
enter
cmp
sub
lcall
and
aad
aas
pop
push
mov
fldenv
hlt
lea
cwtl
mov
push
lret
inc
push
add
rcr
shrb
mov
movsl
jae
aad
mul
push
dec
cmpsb
int
repz
pop
fisubs
movsl
movsb
gs
mov
fcmovb
pop
xchg
lea
sbb
xchg
mov
ds
aas
lcall
jns
data16
push
jecxz
lret
jp
or
scas
push
cmc
cmpsl
lods
in
enter
lahf
int
out
cmpxchg
and
aad
cmpsb
sti
loop
ds
insb
pop
test
sbb
and
ss
and
fwait
jmp
lahf
leave
cwtl
xchg
add
inc
cwtl
cli
inc
sub
outsl
push
in
cld
sub
cld
ss
insl
es
dec
pop
mov
sub
cwtl
jbe
les
lds
inc
addr16
enter
rorb
lds
ss
jae
xchg
pusha
cmp
dec
push
cmp
faddl
jae
push
jecxz
lock
mov
idivb
sub
lret
std
roll
jle
iret
fisubrl
and
sbb
mov
int
mov
mov
xchg
sub
push
sbb
push
xchg
mov
push
movb
repz
les
mov
add
mov
mov
test
out
push
ret
ja
inc
int3
fs
mov
std
cmovl
mov
sub
inc
xorl
ds
sub
aad
sbb
sbb
test
and
cmp
ret
mov
insb
loopne
ja
cmp
xchg
pop
jno
rep
lds
and
subl
push
flds
cmpsl
push
ret
xchg
mov
andl
mov
adc
test
mov
lahf
in
les
addr16
fstp
jmp
push
jbe
xchg
mov
imul
pusha
push
scas
cmp
xor
pop
rclb
sub
fisubl
sub
mov
decb
mov
mov
out
lock
adc
out
daa
jmp
xorb
aad
add
lea
insb
xchg
adc
notl
call
push
cwtl
adc
movsb
insl
scas
cmp
sti
sbb
pop
mov
xchg
inc
mov
mov
mov
mov
xor
je
dec
lds
je
icebp
jge
neg
cwtl
sub
fnstsw
sub
rolb
adc
dec
ljmp
cwtl
jecxz
rclb
sbb
mov
data16
xchg
push
xor
es
push
lahf
sbbl
add
dec
adc
enter
adc
pop
push
jbe
cmpl
xlat
mov
xchg
inc
pop
pop
add
jle
lods
push
xchg
nop
stos
jns
decb
inc
xor
dec
sub
mov
dec
mov
xchg
mov
test
bound
lods
cmp
scas
aam
loop
jbe
mov
scas
jbe
daa
mov
shll
pop
mov
out
pop
outsl
push
sbb
pop
or
pushf
or
sub
push
dec
dec
or
js
lret
mov
cmp
mov
out
sbb
pop
inc
push
cmp
mov
inc
push
dec
mov
and
push
gs
mov
daa
outsb
movsb
aam
mull
imul
fcmovnb
inc
mov
iret
sbb
mov
adc
test
das
pushf
or
add
shrl
hlt
mov
es
mov
cwtl
mov
cltd
cmp
push
ja
push
push
mov
mull
add
movsb
mov
inc
jg
test
xchg
push
mov
js
jmp
bound
ljmp
pop
je
cs
adcl
lahf
add
push
xor
add
push
push
pop
push
dec
pop
idiv
and
add
dec
add
cld
xchg
outsb
mov
outsb
mov
cmpsb
sahf
add
jmp
fidivrs
into
out
sbb
cmp
mov
sub
inc
and
hlt
lret
movsb
hlt
stos
mov
pop
xor
lods
jb
xchg
dec
mov
push
iret
imul
jecxz
lret
movsl
dec
mov
mov
lea
ret
nop
insb
clc
std
lea
mov
push
sub
fwait
dec
int3
jne
fldenv
outsl
shl
fistps
pop
mov
shrb
sbb
js
adc
mov
push
add
mov
cmp
sbb
inc
xor
pop
sarl
pop
cmp
in
mov
push
les
and
scas
jae
pushf
add
sahf
xor
enter
cli
out
in
ss
test
hlt
push
int
das
frstor
pop
mov
stos
daa
popa
push
lcall
lods
lea
push
adc
and
lcall
and
loope
add
fsubs
push
clc
push
pop
loopne
mov
ljmp
ds
leave
and
mov
lods
ss
xrelease
adc
loop
jb
and
loope
mov
scas
dec
mov
mov
jmp
rcrl
sbb
sub
mov
mov
sub
mov
jp
fstl
mov
call
inc
scas
std
xchg
jg
sub
sub
out
cld
add
dec
adc
cmp
sbb
sub
add
in
stc
pop
fstpt
cltd
ret
cwtl
test
mov
mov
mov
cli
mov
mov
and
pop
sub
push
outsl
addl
icebp
setbe
cld
mov
in
push
shll
test
out
push
insb
sub
out
jg
mov
dec
cmp
aaa
pop
mov
aas
stos
cmc
add
test
or
xor
stos
jae
loop
adc
or
sub
mov
cmp
dec
xor
sub
sub
push
inc
lcall
shlb
js
stc
xchg
data16
fs
repnz
dec
scas
jb
enter
lods
shll
ret
jg
adc
inc
pop
cmovl
add
pop
jae
pop
jg
mov
sbb
dec
int
enter
adc
mov
out
mov
push
pop
or
daa
add
xchg
push
test
mov
xchg
pusha
imul
ss
jp
or
dec
push
popf
xchg
pop
pop
inc
pusha
push
sbb
out
jecxz
pop
inc
insl
mov
xchg
fwait
popa
dec
arpl
in
outsl
cmp
or
loopne
jmp
movsb
fstpt
int3
pop
lret
sub
in
jmp
mov
sahf
or
push
or
push
add
mov
mov
popa
popf
cmp
sbb
sub
fs
mov
lcall
or
rolb
shll
pop
out
out
add
aas
pop
adc
mov
repz
repz
mov
cmp
and
imulb
gs
insb
inc
and
leave
xchg
add
mov
lds
sahf
jle
mov
dec
cs
mov
popa
outsl
test
stos
sbb
jno
adc
shrl
and
xchg
mov
inc
test
and
movd
jle
jae
or
pop
lods
mov
mov
jg
push
imul
fsubrp
or
cmpsl
mov
xchg
inc
jno
shll
std
mov
jb
lods
pop
pushf
repz
inc
cmc
inc
sbb
pop
movsl
insb
imul
je
add
shl
dec
jg
mov
rcrb
pop
ficomps
out
leave
leave
leave
mov
dec
lea
fcmovbe
lea
mov
xchg
push
testb
fstpl
in
lret
inc
add
cli
int3
add
outsl
push
sub
ljmp
fidivl
shr
out
mov
rcll
mov
pop
js
pusha
jle
or
inc
daa
or
ds
call
jecxz
mov
ljmp
cltd
out
and
push
jae
dec
sbb
fwait
ds
mov
adc
jns
xchg
cmp
nop
shlb
cmp
clc
aad
gs
aam
cmpsb
cmc
out
out
inc
loop
test
sub
rorb
dec
push
ret
cld
mov
push
out
lret
dec
mov
js
ret
into
pop
ds
aas
and
mov
jae
mov
cmp
cwtl
clc
mov
pop
int
inc
xor
fisttpll
outsl
xchg
mov
testb
sub
leave
add
out
jnp
cmp
sbb
xchg
or
pop
scas
inc
lods
leave
fsubrs
dec
out
pusha
adc
xor
scas
or
xchg
arpl
enter
cmp
cmp
and
gs
inc
imul
icebp
jb
lock
xor
lea
inc
sub
add
addr16
icebp
pop
dec
mov
and
inc
jo
xor
mov
jne
lret
and
in
fnstenv
fs
ss
jecxz
nop
js
mov
insb
cmc
xlat
xchg
or
les
nop
cmp
cltd
in
loop
jp
mov
enter
fsts
popf
push
sbb
ds
xor
jl
mov
jo
ja
push
jge
pop
mov
sbb
call
das
test
cs
mov
test
mov
mov
jg
int3
push
push
and
mov
test
rorl
mov
mov
xor
or
mov
xor
test
pop
test
inc
xor
into
andl
clc
in
xor
aaa
les
pushf
int3
push
fistpll
sbb
jmp
ret
mov
or
fwait
les
inc
mov
scas
lret
out
rorl
fldcw
dec
mov
add
add
inc
inc
inc
pop
inc
pop
pop
pop
mov
push
mov
sti
cmp
add
add
addl
add
mov
mov
and
arpl
push
mov
scas
js
xor
jmp
xor
pushf
lea
inc
and
xchg
inc
clc
flds
mov
imul
inc
xor
push
push
sbb
fistpl
or
sbb
lods
jecxz
inc
xchg
fcomip
mov
cltd
inc
jecxz
fnstcw
outsb
arpl
xor
jbe
pop
xchg
cmp
mov
lret
test
xchg
xchg
loopne
sub
dec
test
jecxz
pop
add
sahf
pushf
pcmpgtd
sarl
cli
inc
push
lahf
cmpsb
ret
push
and
repnz
jle
aas
outsb
lods
adc
pop
pop
adc
xchg
push
loop
lret
add
pop
dec
pushf
imul
sbb
dec
int3
test
sahf
sahf
pop
pop
adc
mull
xor
repnz
sbb
lahf
mov
adc
aas
mov
push
inc
ss
loop
push
sbb
add
cmp
mov
loop
hlt
add
ljmp
jmp
insl
loope
mov
mov
add
icebp
add
adc
dec
mov
cmp
jecxz
mov
mov
insl
nop
or
cmp
push
xchg
mov
push
adc
or
or
dec
test
push
aad
mov
scas
mov
scas
xchg
pop
notb
mulb
out
push
pop
iret
add
stos
push
xchg
imul
sbb
imul
repz
leave
inc
test
shrb
pop
imul
sbb
and
dec
or
roll
mov
add
jae
push
fdivs
outsl
repz
cmpb
push
inc
xor
aam
xchg
stc
push
xor
cltd
cmpsl
cwtl
ljmp
push
into
mov
or
gs
adc
into
out
popf
insb
or
mov
aam
daa
js
add
scas
xchg
arpl
or
xlat
pop
stc
sbb
pushf
and
cmp
out
mov
or
adc
sub
cmc
xorb
xchg
cmp
ljmp
sub
or
insb
test
adc
lcall
and
lods
adc
or
cwtl
xlat
adc
test
mov
out
xor
jl
shl
xchg
test
pop
xor
push
icebp
push
inc
push
and
lods
mov
dec
stos
adc
stos
mov
aaa
xor
aam
jecxz
add
jle
loope
jb
lret
inc
inc
fdivrl
ficomps
stos
sahf
pushf
repnz
mov
push
or
jno
fldenv
fwait
mov
int
js
dec
pop
mov
mov
mov
pusha
aaa
cmpsb
icebp
arpl
xor
push
cli
pop
gs
lea
clc
dec
inc
jmp
add
fmuls
mov
xchg
roll
loop
clc
xorb
mov
jle
or
clc
jg
fimull
add
rcr
insl
cmp
add
jl
inc
stos
jb
movsl
cmp
cwtl
and
lods
jmp
push
fmulp
aad
std
jae
out
es
mov
jmp
mov
dec
in
xor
negl
std
mov
out
mov
cmpsb
dec
push
out
fdivp
pop
pushf
mov
testb
insb
int3
daa
sbb
jp
insb
movsb
pop
ficomps
pop
add
push
std
mov
stc
enter
lret
jmp
out
rcll
aad
in
pop
mov
pop
addr16
add
out
jae
rol
jmp
sbb
cmp
xor
enter
out
lret
pop
cmp
push
shlb
popf
pushf
mov
repnz
and
aad
mov
or
pop
sub
sahf
pop
stos
stos
cmpsl
stos
mov
sub
out
mov
dec
fwait
addl
mov
sbb
les
clc
dec
lea
or
ja
bound
addr16
fldenv
adc
mov
cmp
sub
fsub
in
mov
sub
subb
in
cltd
xchg
sbb
xchg
movsl
inc
inc
in
fiaddl
stos
cmp
mov
movsb
pop
sbb
dec
in
pop
or
loope
and
daa
mov
push
mov
mov
add
movsb
xor
cmp
push
or
xchg
xor
data16
std
jae
les
rcr
push
inc
lock
xor
push
lea
jbe
pushf
test
and
cmp
add
pop
inc
dec
jb
test
addr16
fimull
cmpsb
les
andb
js
xchg
cmp
push
rcrl
cmp
into
mov
imul
test
add
movsl
lcall
addr16
add
pop
mov
mov
lahf
adc
pop
sbb
mov
out
cmp
out
ret
push
add
add
mov
sbb
pop
mov
mov
cmp
sub
sbb
into
mov
fwait
cld
sbb
jle
shrb
fldcw
int
mov
iret
clc
or
mulb
push
aam
mov
add
jns
mov
dec
cmc
jae
xlat
in
cmc
or
outsb
mov
or
lcall
inc
and
xlat
ret
rcr
xchg
pop
ja
mul
stos
xor
push
dec
pop
imul
cwtl
dec
push
add
int3
inc
lahf
sbb
or
sub
lods
popa
scas
adc
xchg
js
stos
outsl
or
and
jb
fistps
out
mov
mov
push
push
das
xchg
add
cs
cmp
mov
in
movsl
sub
enter
adc
jge
xchg
nop
push
out
jg
aaa
cmp
scas
adc
jmp
push
repz
les
xor
add
mov
loope
test
fs
dec
xlat
fidivrs
fxch
mov
in
add
loope
out
lods
fmull
cmp
push
rcl
aam
cmp
ret
xchg
inc
add
add
add
inc
push
pop
push
pop
pop
ss
imulb
add
cmp
xchg
add
addl
add
mov
xlat
and
inc
out
imul
test
sbb
and
int
mov
mov
test
mov
xor
flds
mov
out
test
in
pop
rolb
sbb
sub
sbb
ljmp
jp
lret
xor
mov
sbb
sbb
fabs
jecxz
shlb
test
fidivs
ds
out
xor
jg
dec
xchg
push
int3
add
ss
mov
in
sbb
fstl
mov
shll
jno
neg
loope
hlt
dec
dec
shl
mov
jg
inc
lret
xchg
adc
or
ja
jno
cmp
popf
push
cmpsl
jmp
xorl
jg
inc
mov
inc
pop
adc
repz
or
xor
push
sub
sbb
adc
xchg
sbb
xor
loopne
mov
jge
ss
hlt
dec
clc
lea
loope
dec
lds
orl
push
fucomip
pop
out
sub
xchg
loope
leave
sbb
adc
inc
pop
sub
and
xor
pop
or
loopne
lods
cltd
inc
faddl
dec
jnp
xchg
pop
sar
mov
shr
ficompl
push
sbb
inc
and
xor
icebp
jl
cltd
sbb
dec
jae
data16
inc
mov
rcrl
in
sbb
sti
and
add
jg
or
out
adc
popf
pop
inc
test
and
and
jp
mov
xor
mov
mov
xor
popa
pop
pop
dec
dec
jno
clc
movsl
sub
sbb
pop
sub
arpl
jg
scas
stos
cmpsl
ss
rcrl
xor
rorb
into
and
pop
cli
les
mov
inc
ds
inc
cmp
outsb
xlat
push
mov
cmpl
push
dec
cmp
sub
adc
push
sbb
cmp
jnp
cmpsb
mov
das
sarl
push
clc
cli
je
jg
sbb
lret
xchg
lret
negb
dec
xchg
and
xor
cmc
fwait
mov
ret
pop
push
mov
push
pop
arpl
sbb
stc
repnz
mov
adc
pop
mov
or
cli
arpl
pusha
mov
testb
lods
sub
decb
inc
fdivs
out
movsl
pusha
sub
fsubr
std
cs
stos
fistpl
inc
jbe
sarb
test
mov
pop
cmp
xchg
icebp
xchg
lods
inc
in
mov
mov
iret
jle
cmpsl
into
xchg
sbb
dec
fsubs
mov
jg
nop
fs
adc
push
ds
imul
mov
inc
push
push
sbb
and
inc
cs
lret
rcll
inc
aaa
push
ds
xchg
dec
dec
dec
add
add
jbe
mov
hlt
pop
adc
xor
push
push
into
nop
and
sub
and
mov
subb
shl
add
push
jmp
out
push
fadds
sbb
hlt
mov
icebp
int
cmp
add
std
pop
lret
or
out
mov
adc
popf
inc
lock
popf
push
mov
and
or
adc
stos
adc
adc
cld
subb
push
out
fcomip
cmp
mov
or
sbb
fwait
cmp
insb
ret
insl
dec
loopne
sbb
arpl
push
in
int3
inc
aam
std
popa
xchg
test
mov
fstpl
or
lret
mov
inc
jns
jg
mov
xor
pushf
sbb
mov
icebp
in
or
cmp
cmp
lret
adc
push
cmp
mov
orl
xor
xor
out
pop
adc
lds
ds
or
xchg
je
dec
dec
mov
sub
jge
loope
lcall
pop
scas
sbb
cmc
mov
loop
cs
add
insl
testb
pop
inc
sbb
arpl
je
mov
push
pop
fwait
outsl
jl
xchg
hlt
pop
or
sbb
add
lds
rolb
jb
scas
sub
inc
cli
test
adc
dec
pop
jne
nop
lods
cmp
arpl
stc
movsb
rcr
xchg
or
dec
adc
fisubrs
lods
aam
lahf
pop
int
fucomp
sti
enter
in
cmp
pop
addr16
jmp
rolb
bnd
push
pop
insb
mov
sub
scas
pop
inc
negl
in
mov
or
mov
in
adc
inc
sbb
loopne
adc
xchg
les
mov
in
adcl
movsb
and
or
jge
xor
xchg
imul
cmp
pop
pop
fwait
jns
jns
push
in
mov
mov
mov
dec
sahf
inc
xchg
das
push
imull
xchg
add
int3
movsl
pop
and
adc
rolb
out
mov
in
jl
mov
stc
xchg
invd
shlb
fidivs
bound
fs
enter
cld
xchg
test
rcll
or
mov
lds
stos
out
push
int
dec
inc
xor
jns
pop
add
loope
add
sub
cltd
sbb
mov
leave
cmp
jge
lods
popa
loopne
mov
xchg
div
lret
test
mov
cmpsb
jne
fdivl
cmp
enter
push
orb
cmp
mov
push
andb
divl
jne
mov
dec
mov
daa
dec
xchg
je
test
cmp
add
inc
mov
cmp
cmpsb
leave
pop
mov
cmpl
shll
rolb
mov
loop
aas
lcall
jg
imul
mulb
lds
pop
add
adc
inc
add
adc
scas
pop
cli
fwait
jg
cmp
sub
in
xor
mov
sbb
sbb
into
shlb
mov
mov
icebp
add
add
add
dec
inc
pop
pop
dec
push
dec
push
enter
sub
stc
add
addl
add
mov
mov
cmp
mov
lock
mov
mov
call
push
shll
mov
and
mov
fmuls
push
idivb
xor
pop
loope
pop
shl
shll
std
loopne
sub
inc
movsl
aad
mov
or
popf
xchg
dec
out
insb
shr
ljmp
pop
add
xchg
in
fdivr
inc
lds
aam
mov
lds
in
pop
mov
cli
add
jge
fmul
mov
dec
js
mov
and
cld
iret
popf
out
cmpsl
movl
xchg
pop
mov
fisubrs
mov
mov
mov
push
fimuls
jl
sbbb
dec
cltd
cmpsb
jne
imul
pop
push
cmpb
jecxz
pop
leave
mov
adc
fdivs
insb
cmp
mov
fcoml
xchg
das
or
xchg
mov
fwait
int3
int
aas
testl
in
cs
xor
sub
hlt
test
rolb
movsl
mov
cli
xchg
cmp
xchg
xor
addr16
loope
pushf
idiv
das
addr16
fs
dec
cltd
add
add
pop
arpl
cmp
dec
cmp
pushf
xor
outsl
push
push
bound
jne
cli
scas
dec
lcall
jl
push
jb
loopne
test
mov
shll
movsb
sbbb
lods
fdivr
mov
mov
outsl
popa
pop
loop
test
std
loope
sbb
xchg
xchg
mull
pop
add
adc
sub
jg
xorb
hlt
and
mov
push
xchg
adc
sub
push
cmp
mov
pop
push
sbb
push
rcll
inc
jmp
mov
sbb
outsb
loope
roll
xor
test
rcl
movsb
jb
scas
pmullw
pusha
insb
jl
adc
in
test
xor
in
sti
in
movb
in
rcll
shl
stos
shl
mov
fisubrs
hlt
push
loope
mov
dec
cli
popa
sbb
mov
rorb
aam
jmp
add
push
sysexit
and
add
sub
pushf
and
and
sbb
adc
inc
gs
pop
sbb
shl
cmp
xchg
cmp
insb
arpl
fld
cmp
and
rcr
daa
adc
arpl
sub
push
sahf
ja
mov
jnp
xchg
pop
fsubr
movsl
insb
xchg
jb
mov
xor
cmp
mov
jmp
mov
sarb
shl
ja
or
movsb
sbb
jmp
xchg
sbb
test
mov
sbb
pop
lahf
or
ficomps
leave
sub
push
movsb
dec
push
push
mov
mov
xchg
lahf
push
fbstp
and
sbb
repnz
insb
mov
js
jge
in
rcrb
stos
sbb
push
mov
xchg
cwtl
dec
cmp
mov
fsubs
jae
cwtl
lods
std
adc
fisubrs
dec
scas
repz
sub
inc
lock
test
lock
jp
sbb
sub
mov
adc
mov
call
mov
or
adc
push
dec
xor
mov
popf
xor
mov
out
adc
xor
pop
jo
emms
dec
xchg
and
add
xor
pushf
dec
ljmp
outsb
or
pop
loope
sub
rcrb
ret
mov
push
xor
mov
stos
jl
outsl
dec
push
jle
sub
loop
or
ficompl
cmp
xchg
cs
iret
push
pusha
ret
cwtl
pop
sbb
arpl
fstpt
out
stc
lds
mov
pop
mov
mov
ljmp
cmp
addr16
out
fists
sarl
add
enter
arpl
ja
inc
xchg
aad
jg
dec
sub
sub
hlt
imul
sbb
lds
mov
xor
inc
dec
sbb
sub
sbb
or
mov
cmp
dec
xchg
test
push
xor
dec
or
sbb
sbb
mov
jo
jecxz
push
xchg
push
sbb
popa
test
stos
out
push
push
ror
mov
aaa
loope
outsb
jne
jl
jle
loopne
push
dec
ja
mov
mov
sbb
dec
mov
mov
insl
fxch
aam
fsubrl
and
add
jmp
stc
cmp
stos
jle
adc
sahf
movsl
loop
js
test
mov
mov
out
es
add
add
fdivrs
aam
jo
stc
push
leave
xchg
lods
adc
out
pop
enter
cmp
dec
lahf
dec
dec
mov
pop
pop
fwait
scas
insb
mov
int
pop
push
ds
jne
xor
add
out
xor
cld
cld
xor
adc
lahf
mov
hlt
sbb
jg
inc
push
push
lahf
mov
mov
fs
mov
sub
addr16
fcmovb
cltd
adc
out
sub
sub
pop
sub
mov
push
incb
sbb
inc
es
sarb
int3
js
in
or
inc
mov
shr
sbb
mov
dec
aam
pop
inc
loop
lcall
mov
es
int3
mov
sbb
xor
xchg
cwtl
cmp
jb
gs
loope
add
or
andb
in
aaa
je
pop
aad
mov
xchg
mov
in
jmp
cmp
adc
inc
mov
xchg
push
cmp
bound
adc
jle
aad
orb
push
gs
rcrl
lret
mov
pushf
cmp
pop
fistpl
jnp
mov
out
aam
ds
pushf
out
lret
pop
into
sarl
cwtl
andl
mov
xchg
lahf
pop
add
aad
xchg
add
add
add
dec
dec
pop
dec
pop
pop
in
fld
rcrb
mov
add
add
add
scas
femms
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
jns
inc
add
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
test
add
test
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
push
test
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
xchg
test
add
test
add
test
add
test
add
xor
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
lret
addb
mov
mov
in
mov
add
add
pop
outsl
push
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
