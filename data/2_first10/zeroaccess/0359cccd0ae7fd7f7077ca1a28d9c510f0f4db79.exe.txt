push
mov
sub
addl
push
subl
push
xorl
lea
incl
push
push
movl
call
adc
mov
andl
push
xorl
xor
adcl
inc
andl
push
adcl
push
xorl
call
xorl
test
movl
je
push
push
push
andl
call
test
movl
je
adcl
xor
jmp
orl
push
andl
push
addl
call
test
movl
je
lea
push
call
jmp
addl
push
push
addl
push
andl
call
addl
test
movl
jne
push
addl
push
call
jmp
push
push
addl
call
andl
test
jne
andl
push
push
subl
push
sbbl
call
addl
test
movl
jne
andl
push
push
call
adcl
test
movl
jne
mov
mov
and
movl
and
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
movl
sub
movl
xor
add
xor
lea
mov
movzbl
or
mov
lea
mov
mov
addl
mov
xor
mov
add
mov
or
mov
movzbl
sub
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
addl
xor
orl
add
andl
mov
movzwl
or
mov
adcl
xor
orl
add
movl
mov
mov
mov
subl
mov
orl
mov
negl
mov
mov
adcl
mov
orl
mov
movl
push
mov
mov
xor
movl
xorl
mov
xor
add
movl
jmp
notl
mov
xor
lea
adcl
push
xorl
mov
xor
orl
lea
sbbl
push
movl
cmpl
je
cmpl
jl
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
mov
sbbl
pushl
negl
call
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xorl
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
push
pushl
pushl
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
xor
andl
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
xor
movl
lea
movl
cmp
jbe
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
mov
sub
or
mov
mov
movl
sub
andl
xor
mov
mov
mov
cmp
movl
jne
push
xorl
xor
inc
andl
push
subl
push
call
test
movl
jne
sbbl
push
subl
push
call
orl
test
movl
jne
addl
push
adcl
push
adcl
push
call
sbbl
test
jne
sbbl
push
push
andl
call
xorl
test
jne
andl
lea
sbbl
mov
lea
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
xor
add
dec
mov
jmp
mov
test
je
xor
mov
mov
add
mov
mov
add
mov
incl
mov
sbb
mov
inc
mov
movzwl
adc
mov
mov
movl
cltd
mov
andl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
inc
adc
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
movl
mov
adcl
subl
xor
adcl
mov
or
mov
sbbl
xor
movl
mov
cmp
jne
mov
cmp
je
adc
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
push
push
pushl
pushl
call
jmp
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
push
call
cmpl
jb
mov
mov
add
mov
mov
movl
jmp
movl
mov
movl
cmp
je
xor
xor
mov
sub
and
mov
mov
xor
orl
add
movl
cmp
movl
je
andl
push
xor
adcl
inc
push
push
call
adcl
test
jne
adcl
push
push
subl
call
andl
test
movl
jne
push
orl
push
push
addl
call
orl
test
movl
jne
addl
push
push
negl
call
adcl
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
xorl
mov
mov
pushl
mov
pushl
subl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
pushl
call
mov
mov
mov
jmp
push
xor
inc
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
orl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
movl
mov
or
push
or
mov
notl
xor
mov
push
addl
mov
adcl
add
cmp
je
movl
cmpl
je
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
orl
xor
subl
add
add
jmp
lahf
es
mov
fwait
icebp
sub
adc
lcall
pop
pop
jb
adc
and
popa
mov
bound
push
test
insl
push
iret
pop
inc
cmp
jg
mov
sub
data16
imul
xor
mov
xchg
fiadds
add
insl
fldl
push
repnz
arpl
scas
sub
cmpsb
jmp
inc
and
push
icebp
adc
jo
jnp
nop
pop
cmpl
sahf
cmp
mov
shrb
push
sti
iret
andb
enter
imul
or
sbb
fadds
std
push
movsl
icebp
pusha
mov
adc
or
and
test
repnz
scas
and
scas
pop
ss
jo
and
push
mov
imul
hlt
in
loopne
lods
fneni(8087
mov
dec
aad
in
arpl
adc
out
ljmp
js
les
mov
dec
sbb
or
cmp
cs
mov
dec
out
jg
mov
cmp
cmp
push
dec
nop
rcll
xor
out
div
inc
daa
jnp
pop
mov
dec
jnp
hlt
cld
jl
lret
mov
and
fstps
lcall
dec
sbb
daa
cmp
ret
insl
loop
xchg
cmp
shlb
mov
into
adc
and
sub
mov
fimuls
mov
dec
or
mov
stc
adc
inc
aaa
imul
fnstcw
xchg
fxch
cmpsl
leave
push
push
scas
and
xchg
ljmp
mov
cmp
inc
les
mov
push
js
into
mov
mov
mov
loop
xor
add
cltd
dec
ret
les
add
leave
mov
cwtl
push
cmpsb
adc
sub
or
mov
xchg
sbb
mov
hlt
mov
sub
cwtl
cmp
mov
movsl
movsl
cmpsl
cmpsl
push
push
cmp
inc
dec
or
sub
aam
std
jle
inc
loop
jo
sbb
gs
jns
and
mov
lea
movsb
pop
iret
adc
jmp
idivl
or
dec
pushf
pop
jbe
sti
push
dec
fistpll
aas
test
repz
aas
cwtl
pushl
pop
lock
dec
sti
push
dec
fcmove
stos
aaa
mov
jl
in
add
pop
loope
xchg
push
in
xchg
int3
loopne
inc
data16
xor
pop
fiaddl
push
adc
xor
outsl
test
shlb
iret
and
movsl
xlat
jp
mov
ds
cmpsb
rcrl
ret
cmpsl
int3
xchg
leave
cmp
dec
mov
cmp
loop
jecxz
and
add
idivl
pop
inc
and
jnp
test
ficomps
fxtract
movsl
jg
in
xchg
ds
mov
inc
dec
nop
inc
lret
sbb
in
stc
fxch
xchg
and
xchg
xor
movsl
sub
clc
std
push
mov
adc
sbb
add
jmp
mov
cmpsl
popf
daa
jnp
inc
pop
adc
xchg
jg
xchg
pusha
clc
add
nop
loopne
enter
and
xor
xchg
mov
add
mov
jp
fwait
sbb
pop
addr16
std
pushf
push
xchg
test
xor
xorps
sub
imul
mov
sub
dec
sbb
int3
cmpsl
push
repz
pop
dec
xlat
pop
loope
dec
sbb
ss
ljmp
sub
movsl
fnstcw
hlt
sahf
sub
testl
sub
mov
xchg
mov
pop
push
loope
cltd
xchg
cmc
jmp
scas
xor
ds
movsl
pusha
push
and
imul
dec
jnp
scas
adc
or
cmp
out
xchg
dec
or
leave
in
push
outsb
rcr
xchg
sub
cmpsl
cmpsb
loopne
rcrb
inc
pop
or
inc
inc
rcrl
pop
addr16
stos
mov
push
out
into
cmc
insl
inc
push
xchg
in
pop
lcall
decb
mov
outsb
icebp
in
pop
add
pcmpeqd
arpl
mov
cli
lds
lret
stc
in
and
push
xor
lods
jecxz
fdivrl
ljmp
in
subl
cld
jmp
mov
lock
les
and
in
pop
and
push
dec
mov
rorl
adc
mov
mov
enter
out
mov
sbb
scas
xchg
inc
lods
aam
lds
insb
test
inc
dec
and
lods
inc
out
lret
pop
cwtl
inc
mov
cmp
jg
pop
mov
out
gs
iret
adc
jb,pn
adc
inc
cmp
ret
ror
mov
call
scas
add
xor
std
mov
mov
in
out
mov
movsl
push
shlb
call
lods
mov
mov
iret
mov
or
test
insl
pop
jecxz
pop
mov
xor
lods
fwait
inc
push
fwait
rclb
test
in
out
dec
cs
adc
clc
add
jns
ja
loop
cmpsb
sub
xchg
sbb
aaa
inc
xorb
sbb
dec
add
lcall
push
ret
test
pop
jg
lock
sets
int
xorb
shlb
mov
mov
divl
mov
pop
pop
lods
not
dec
pop
hlt
loop
bound
inc
sub
sub
es
les
test
cli
jno
push
sbb
cmp
xchg
lods
add
or
or
mov
insb
in
xor
repz
lods
mov
stc
sarl
dec
movsl
pop
imul
sub
data16
inc
dec
stos
and
jnp
mov
idivb
push
test
cmpl
les
sbbl
test
dec
pop
lock
addr16
lcall
adc
nop
add
adc
ljmp
andl
leave
aad
xlat
loop
jns
arpl
mov
mov
push
out
aam
clc
jne
push
xor
pop
es
fistl
sub
mov
or
jb
add
bound
pop
adc
inc
sub
jae
lahf
jge
pop
mov
out
cmp
mov
ret
sub
sbbb
cmc
sbb
xor
fisubl
je
cmp
outsl
push
testl
sarb
pop
inc
inc
xchg
movsb
inc
popf
imul
inc
pop
pop
xor
mov
push
insb
xchg
pop
pusha
xchg
jo
jnp
fwait
in
xor
push
jp
inc
int3
ljmp
push
pop
jne
cmp
fwait
dec
test
xor
movsb
xchg
clc
push
jecxz
clc
adc
push
xchg
clc
pushf
mov
repz
clc
add
sbb
xchg
mov
mov
int3
pusha
clc
cmpsb
mov
stc
jg
or
push
xchg
xor
sti
dec
pop
lcall
jle
and
dec
jg
popa
ja
mov
gs
or
pop
xchg
ja
mov
pop
mov
outsl
pop
mov
movsb
mov
push
mov
pop
ret
push
pop
mov
or
popf
xchg
shll
rolb
mov
cmpsb
dec
int
out
movsb
pop
dec
xchg
mov
test
pop
mov
outsb
push
mov
inc
repz
pop
mov
ljmp
ret
pop
stos
pop
pop
ret
popa
stos
cld
lcall
mov
insl
stos
sub
dec
test
rclb
pop
push
enter
les
and
mov
mov
xchg
adc
stos
mov
inc
cmpsl
or
addr16
je
shl
lret
test
dec
shll
je
inc
addr16
lock
rclb
push
push
push
ret
push
outsl
iret
out
test
sub
sbb
clc
adc
outsb
cli
xchg
dec
sbb
fists
ret
push
sbb
test
sbb
out
fwait
mov
je
or
notb
das
pop
xlat
fs
fcomps
add
and
adc
test
mov
call
adc
in
inc
sbb
int3
cli
push
add
inc
sti
icebp
lea
xlat
push
ret
inc
pop
pusha
mov
pushf
repz
sarl
testl
add
ja
in
pop
fnsave
sti
cmp
leave
cwtl
and
jne
pcmpeqd
cmp
xchg
jmp
and
cs
push
xor
cmpb
xchg
inc
cmp
sbb
call
fldenv
bound
inc
aas
push
outsl
popa
ret
add
push
aas
push
or
loope
dec
push
aad
cmc
mov
mov
cmp
mov
lret
es
sbb
icebp
inc
mov
roll
popa
add
push
mov
sbb
stc
lcall
mov
cmp
or
push
or
sub
xchg
or
in
mov
mov
mov
dec
adc
iret
daa
test
arpl
xchg
sar
dec
out
xlat
add
ja
inc
push
dec
stos
pop
and
xor
push
leave
ds
xorl
cld
vunpcklpd
inc
mov
add
cli
ret
or
push
cmpsb
and
mov
sub
pushf
outsl
cmp
xorl
dec
jno
sti
mov
loope
out
inc
mov
push
or
addb
ficomps
cmc
subb
mov
push
jb
stos
pusha
inc
cmpsb
sbbb
xor
jge
sbb
test
mov
xchg
inc
jno
jbe
push
xor
popf
jbe
movsb
inc
loope
add
push
fnstsw
cmp
cmp
xchg
jbe
add
std
jg
xor
cltd
xchg
add
or
aad
push
mov
test
xchg
sbb
negb
and
jp
push
mov
repz
rcrb
ljmp
xchg
push
faddl
mov
rorl
call
ficomps
or
inc
je
outsl
fnstsw
adc
insl
ret
mov
ss
imul
inc
leave
iret
nop
out
stos
sarl
leave
adc
lods
fisttpll
das
bound
rolb
sub
sbbl
or
in
mov
fadds
or
inc
push
push
popf
aaa
or
mov
jg
out
clc
repnz
fucom
imul
repz
push
stc
dec
insb
test
cmp
inc
repz
or
add
clc
pushf
das
movsl
push
xchg
popa
imul
push
scas
pushf
js
cld
mov
dec
mov
fldcw
iret
fs
inc
mov
into
jge
or
icebp
or
dec
dec
data16
push
icebp
movsl
shll
jo
imul
xchg
dec
fs
dec
dec
mov
mov
sahf
test
stos
imul
mov
cmpl
bound
push
sti
std
push
pop
mov
incb
pop
inc
test
dec
xchg
xor
push
pop
dec
icebp
div
mulb
adc
insl
fs
hlt
loopne
test
mov
test
add
loope
push
xor
push
push
ret
cmpsb
rcll
jge
dec
or
movsl
test
push
push
iret
xor
mov
cli
xor
cld
mov
cmp
mov
popa
mov
into
mov
xchg
xchg
mov
sbb
cld
jo
cmp
lock
fsubl
dec
or
mov
pop
adc
sub
into
lahf
fsubr
adc
mov
test
cld
add
movsl
pusha
mov
inc
loopne
fwait
jecxz
inc
inc
sub
inc
push
push
add
je
mov
nop
jmp
and
shll
addr16
xchg
fstps
xchg
lock
mov
sbb
ljmp
shlb
dec
or
loope
fxam
dec
leave
outsb
shrl
push
push
add
ljmp
sahf
jp
lds
jmp
lcall
or
sbb
filds
sahf
fwait
push
push
call
jecxz
mov
add
and
cmpsl
inc
mov
aad
repz
test
aaa
mov
mov
mov
pop
xorb
or
scas
aam
rcr
push
notb
jnp
icebp
fcomi
push
lods
or
pop
fistl
gs
pushl
repz
addr16
fsubp
sub
movsl
mov
jmp
into
sbbl
pusha
sbb
adc
dec
jbe
sbb
mov
mov
push
enter
cmc
cmp
out
arpl
sub
pop
cmp
jp
ja
push
test
arpl
xchg
loope
push
inc
push
ss
adc
cmp
jbe
scas
and
stos
leave
mov
cmp
mov
outsl
xchg
loope
dec
jno
inc
jno
xchg
adc
sub
jns
roll
neg
leave
xor
pop
jae
imul
or
in
jle
xlat
pop
stc
cmp
jmp
stc
cmp
jge
ror
add
fists
push
xorl
xchg
les
and
pop
fs
xor
mov
mov
mov
out
or
dec
stc
xorb
cmpsb
stos
stos
jo
cmpsl
xor
cmp
stos
aaa
ret
sbb
xchg
jmp
les
nop
mov
xchg
mov
jae
cmpsb
pop
add
adc
mov
add
adc
addr16
lds
stos
inc
dec
jns
frstor
jecxz
mov
loope
and
inc
addl
inc
mov
or
rcrb
ds
nop
sub
stc
enter
rorl
and
sbb
mov
or
cltd
cmp
lock
rol
bound
add
jp
pop
mov
xchg
dec
fnstsw
cmp
clc
sub
out
or
adcb
cli
mov
dec
enter
gs
arpl
popf
jne
xor
cmp
mov
cmp
add
ljmp
adc
insb
int
add
gs
jnp
ror
mov
aaa
adc
ret
xchg
push
das
ret
sti
cltd
sahf
fwait
cmp
jp
cmc
andl
xchg
or
in
popa
popa
and
shlb
mov
mov
mov
popf
mov
xchg
int
inc
sub
iret
add
daa
out
mull
pop
in
mov
mov
clc
fdivl
test
dec
or
fsub
pmulhuw
in
out
out
lret
and
xchg
lods
movsl
pop
scas
pushf
inc
imul
mov
in
mov
add
jg
mov
add
jne
bound
xchg
cs
dec
adc
xor
jle
movsb
pop
lcall
mov
in
jb
push
in
idivl
push
push
imull
push
out
sub
aam
lock
push
jge
lds
aam
fwait
pop
xchg
in
xchg
pop
push
pop
call
sahf
jl
dec
hlt
sub
inc
push
cmpsb
movsb
inc
pop
cmp
pop
cmp
mov
dec
les
iret
mov
or
xchg
cmc
push
push
sbb
add
jge
xor
jns
pop
outsb
adc
das
pop
add
add
loope
xchg
pop
cwtl
sbb
push
xor
jbe
mov
dec
xor
enter
xchg
push
nop
loop
sub
mov
jp
push
and
lret
sti
ret
pop
add
sbb
xchg
and
dec
push
testb
int3
sub
scas
sbb
lret
int
test
mov
cmp
lea
mov
inc
into
xor
fwait
cmpsb
movsb
mov
sub
cli
mov
mov
cmp
jp
test
arpl
add
mov
inc
xchg
ljmp
movq
pusha
xchg
into
mov
lods
inc
and
ja
push
xor
cmp
jle
dec
daa
rol
mov
int
ljmp
imul
sbb
and
adc
cli
mov
mov
and
add
sub
jge
adc
mov
mov
mov
hlt
scas
adc
ja
cmp
mov
push
fimull
push
sub
jno
jle
lods
push
popf
mov
fwait
inc
xchg
mov
les
pop
jg
les
xchg
ja
pop
into
and
jge
jb
es
xchg
stos
push
cs
xor
add
pop
mov
and
nop
add
mov
sahf
pop
aaa
repz
pushf
push
or
push
mov
les
pop
dec
cmp
mov
pop
pushf
rolb
or
shll
int
inc
in
jo
lods
scas
fiaddl
push
popf
inc
rcrl
dec
add
xor
jno
jb
into
dec
pop
dec
mov
add
mov
add
lcall
ljmp
inc
aas
jns
cmpsb
dec
pushf
mov
or
test
loope
ficomps
mov
outsw
test
xchg
stos
add
push
adc
or
sbb
mov
nop
adc
dec
les
lock
or
mov
pop
cmpsb
jbe
push
int
xchg
shll
out
and
xor
psubd
imul
aas
pop
inc
mov
aam
sub
mov
pop
and
inc
int3
add
xor
ss
jbe
int3
jecxz
ljmp
mov
mov
xchg
pop
leave
mov
mov
push
pop
pop
jl
mov
sbb
mov
jp
aad
and
insb
cmc
leave
mov
or
xchg
hlt
enter
repnz
pop
mov
jp,pn
cmp
daa
mov
xchg
stos
dec
ds
xchg
aad
dec
mov
and
push
jbe
mov
mov
xchg
pop
and
negb
test
xor
mov
out
xor
and
ffree
decl
aas
xor
roll
pusha
xchg
je
adc
imul
movsl
cld
imul
mov
sub
or
or
mov
xor
mov
push
mov
jae
jecxz
jl
sarb
push
shll
roll
and
dec
or
sahf
or
fwait
into
or
mov
or
xor
mov
movsb
pop
or
cmp
push
push
or
inc
into
xor
xchg
mov
icebp
repnz
inc
ret
xchg
insl
xchg
out
jae
xchg
fwait
sti
push
xchg
xadd
add
dec
xor
sbb
jg
adc
or
imul
int
lds
add
xor
sub
sti
fadd
adc
pop
pop
repnz
and
je
jae
xchg
push
or
dec
mov
mov
lds
lret
imul
push
xchg
push
cmpsl
xor
adcl
jp
outsl
shlb
call
aam
fwait
shl
pop
call
pop
xchg
xchg
div
jg
and
shl
mov
jecxz
mov
inc
repz
xor
xchg
aas
xchg
sbb
mov
shll
inc
ss
sarl
add
sub
sbb
jmp
cmp
das
add
xchg
xor
sub
or
mov
mov
mov
pop
pop
pop
sbbb
and
stos
in
sahf
dec
mov
or
outsb
xchg
inc
mov
push
add
inc
call
neg
pop
je
push
inc
mov
xor
mov
ja
in
push
lds
repnz
sbb
ss
aaa
xchg
test
sub
mov
adcl
call
orb
rorl
aam
pusha
inc
add
scas
cwtl
pusha
movsl
push
dec
xchg
sub
or
ss
cs
lea
pop
xchg
lea
mov
xchg
and
xor
movsb
or
imul
push
loop
lods
mov
call
lds
mov
stos
push
inc
ret
daa
jno
or
and
mov
scas
sub
fbld
adc
stos
cmp
or
adc
sub
es
and
adc
mov
jmp
aas
pushf
and
mov
and
test
pop
f2xm1
movsl
mov
in
xorl
out
mov
pusha
mov
fiaddl
pop
add
pop
xchg
cli
cmp
fwait
add
mov
out
aad
mov
xchg
dec
cltd
cmp
dec
push
xchg
mov
cmpsb
pop
pop
adc
stos
mov
fiaddl
insb
inc
outsb
xchg
and
les
fidivrs
sub
or
imul
xchg
xchg
mov
mov
jg
lahf
jae
lock
stos
int
sub
andb
das
cmp
in
sub
imul
movsl
sbb
pop
push
push
inc
fldt
sub
cmp
pop
push
aaa
add
loope
sahf
mov
dec
or
in
out
rclb
push
enter
and
call
xor
cwtl
adc
push
into
mov
mov
outsb
add
iret
mov
mov
push
mov
lea
cltd
push
les
jne
fcoml
mov
mov
incb
mov
rep
jecxz
pop
xor
sbb
pop
jb
imul
out
or
sub
aaa
dec
dec
or
nop
xlat
bound
call
and
repz
cltd
fcoml
fdivs
in
in
repnz
arpl
adc
mov
stos
cmp
or
sub
testl
push
mov
mov
ja
rcrb
insl
sub
fdivr
lret
xchg
ret
ret
mov
jns
sarl
enter
lret
dec
icebp
or
adc
mov
pop
xchg
cwtl
enter
lock
and
scas
add
lods
shrb
inc
ljmp
sbbl
jmp
adc
push
add
mov
cmpsb
and
mov
inc
shl
shrl
mov
sub
jo
mov
push
jns
push
ljmp
pusha
sahf
sbb
std
les
pushf
and
jg
mov
push
mov
scas
cmc
adc
fsubl
jne
lods
jo
mov
pop
enter
movsb
movl
push
mov
dec
sub
dec
scas
insb
iret
les
xchg
icebp
sahf
or
add
sub
jb
cwtl
push
jp
in
scas
adc
inc
ret
cmp
pop
mov
mov
adc
and
fwait
stc
int3
jns
adc
fistpll
in
in
mov
fistpll
scas
jne
push
int
inc
fnstsw
sub
jge
in
leave
cs
std
sti
add
iret
xchg
mov
mov
fistl
leave
lahf
aas
push
popf
jecxz
add
es
and
aad
dec
andl
or
out
loope
pop
mov
lock
call
dec
mov
lahf
in
shl
arpl
xchg
in
pop
aad
into
ja
or
mov
push
jno
ds
fmull
adc
xchg
or
dec
ret
shrb
xchg
mov
inc
inc
xor
push
jae
mov
in
aas
mov
imul
aas
dec
fs
mov
outsl
cmpsb
xor
fsts
xchg
push
fwait
shrb
in
mov
mov
cmp
cmp
ret
push
or
inc
ficompl
andl
pop
repz
jnp
jno
jbe
add
push
xor
sub
lods
pushl
jp
call
je
frstor
pop
in
mov
mov
in
push
inc
mov
loop
pop
push
jle
pusha
adc
fsubs
cmp
sbb
mov
repnz
cmpsb
mov
leave
dec
mov
add
repz
jbe
adcb
xchg
decl
outsb
push
lea
loopne
lods
cmp
mov
repnz
pop
into
fwait
dec
mov
mov
lea
push
sub
cwtl
mov
daa
dec
or
rcr
shll
pop
ja
fs
push
je
scas
jo
mov
imul
jg
pop
lock
lea
cwtl
mov
lcall
cmpb
sbb
sbb
pop
push
popa
xor
adc
loope
xor
pusha
aam
lret
jbe
pop
pop
insl
add
pop
dec
inc
push
inc
xchg
fcomps
or
mov
jmp
push
adc
pop
bound
inc
sub
hlt
andb
push
in
test
push
stos
sub
push
bound
sbb
sbb
jns
rorl
imul
cld
sub
nop
jb
and
pusha
jg
mov
sub
outsl
adc
pop
loop
into
movsb
imul
es
xor
xor
fld
mov
cmc
out
fistl
jge
stos
xchg
pop
lods
das
xchg
rcr
xchg
add
or
jno
gs
xchg
loope
lea
mov
or
out
pop
ss
call
cmp
shrb
and
mov
adc
loopne
sub
sub
mov
pop
pop
xchg
rcll
loope
mov
mov
outsl
xchg
mov
out
cmp
adcb
movsl
test
and
mov
sub
cltd
hlt
fiaddl
pushf
daa
jg
lods
and
cli
dec
mov
mov
sbb
or
pop
inc
pop
gs
je
rol
test
push
jmp
mov
fisubrl
cmp
lds
xchg
mov
pop
rcl
sahf
out
and
dec
mov
fdivs
insb
jg
out
leave
nop
rcrl
lret
xchg
pop
or
xchg
ja
cmp
testl
add
ret
mov
shrl
loop
add
xchg
test
cmp
mov
stos
cld
lcall
pop
leave
enter
jnp
dec
aam
and
mov
jnp
pop
jns
popf
pusha
add
mov
mov
push
fistpl
cmc
filds
jmp
jg
scas
dec
jb
push
sub
lods
icebp
and
mov
xchg
mov
lock
cwtl
out
js
int
jmp
dec
jae
stos
add
and
dec
jmp
add
aaa
mov
les
add
setnp
ficomps
dec
outsl
add
pop
nop
xor
shlb
lock
mov
add
stos
dec
xor
push
inc
bound
outsb
stos
or
es
ja
push
and
out
lock
fwait
xor
mov
pop
dec
pop
fdivl
push
add
mov
shlb
jmp
icebp
mov
mov
pop
add
cmp
adc
imul
lcall
lock
addr16
cmp
pop
xchg
jge
xchg
or
sahf
xchg
cmp
mov
stc
xchg
loop
mov
fdivrp
je
mov
jl
pop
dec
loopne
clc
mov
out
ret
mov
lea
into
sub
lcall
outsb
test
mov
and
leave
cmp
mov
hlt
out
test
lock
lcall
sbb
in
jp
xor
cmp
push
inc
sub
cli
cmc
xchg
cmp
fists
std
inc
jnp
push
test
xchg
enter
pop
or
into
and
jp
rcl
fs
mov
inc
inc
push
xchg
fisttpll
dec
in
shlb
xchg
aas
sar
aas
mov
fidivs
xchg
push
cmp
cltd
mov
sbb
sub
iret
mov
data16
jle
mov
xchg
sub
sub
mov
sub
sbb
les
jle
sbb
sub
dec
or
int3
sub
in
jns
cmp
inc
out
loopne
int3
movsl
cmpsl
mov
fdivp
shlb
lock
and
mov
and
lods
ret
jno
pusha
xor
jne
mov
dec
mov
cmp
jno
jb
dec
mov
add
je
fmuls
mov
mov
sub
mov
xchg
js
fsub
mov
xor
fwait
mov
imul
out
sbb
aam
rorl
ds
dec
repz
jge
dec
rcr
or
test
test
cmp
mov
out
xor
lahf
dec
pop
fisubs
mov
mov
adc
mov
and
sahf
out
sarl
push
fisubs
lcall
mov
fmuls
sub
fnstsw
mov
loope
sbb
insl
or
rorb
test
xor
jne
sarl
xor
add
int3
ret
out
jmp
int
sub
out
rol
dec
add
lock
ret
dec
cltd
mov
aas
dec
decb
fnstenv
hlt
ret
nop
and
int3
scas
scas
cwtl
or
jle
scas
push
jne
xlat
mov
ja
in
cmp
pop
and
xchg
test
xlat
lcall
cli
push
sbb
pop
sub
cmp
add
push
out
je
push
fcomi
pop
mov
int
mov
stc
jl
mov
mov
pop
lcall
aad
aam
dec
pop
push
add
dec
test
lock
pusha
pop
jmp
enter
fisubrl
in
std
ret
call
imul
js
mov
les
nop
pop
xor
or
ds
or
add
stos
add
mov
add
out
jne
int
loopne
test
cwtl
adc
sub
dec
loopne
loope
es
sarb
ror
int
lret
jp
scas
dec
shl
pop
mov
repnz
dec
pusha
icebp
adc
int3
or
clc
mov
sub
in
pop
sbbl
fwait
push
out
test
jmp
gs
mov
arpl
cli
sub
test
xchg
push
mov
add
jecxz
xchg
xor
sbb
inc
pop
cmpb
sub
pop
jnp
popa
xor
push
cs
xlat
jo
cld
dec
fsts
je
stos
sti
xor
ss
int
add
lret
cli
cmp
sti
lock
adc
fcom
test
scas
and
xchg
jmp
ret
cmp
push
das
mov
aaa
push
scas
inc
mov
lahf
divl
inc
out
xor
mov
repnz
iret
jb
xchg
mov
pushf
jnp
push
mov
dec
mov
ret
dec
fmul
shll
mov
lret
lret
scas
mov
clc
mov
push
push
into
pop
xchg
fiaddl
leave
scas
arpl
mov
fcomps
adc
mov
mov
and
xchg
add
fdiv
mov
sub
clc
loopne
push
xor
cmpb
mov
sub
sbb
movsl
xlat
xor
ret
mov
dec
mov
jnp
xor
ret
pushf
outsl
sub
or
mov
mov
mov
xor
xchg
or
daa
add
lret
sub
in
mov
or
mov
jp
dec
and
rcrl
stc
push
jmp
stos
popa
jge
or
pushf
jmp
enter
mov
or
loopne
in
dec
out
mov
jne
mov
and
jle
push
inc
jbe
mov
xlat
sbb
enter
inc
sarl
jnp
mov
push
and
nop
jae
data16
jae
sbb
xchg
mov
pop
iret
dec
cli
push
pop
fiadds
lods
cmp
lret
mov
neg
test
dec
cmpsb
lahf
jp
stc
stc
pop
fsubrs
push
mov
nop
outsb
push
iret
lcall
lmsw
or
or
adc
push
push
insb
mov
pavgw
and
cmc
sub
pop
lret
hlt
and
sar
xor
addl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jb
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
jmp
das
cmp
test
subl
ja
pop
jb
pop
pop
jb
adc
lods
xorl
cltd
fstpt
outsl
cld
cltd
xchg
lods
adc
mov
and
dec
out
or
cli
jo
loop
outsb
add
pop
stc
sbb
mov
repz
rorl
repz
xor
push
inc
stos
push
jne
jg
ljmp
out
mov
cmp
sar
sub
sti
push
jp
repnz
adc
mov
out
push
into
pop
bound
sti
jle
stos
inc
ljmp
fsts
fs
sub
jge
fnsave
test
sub
xor
popf
cmp
mov
sub
sbb
sub
lea
orl
jb
cmc
pop
ja
sbb
pop
test
mov
cmp
data16
roll
into
out
in
push
int
lret
jnp
mov
insb
lds
popl
or
push
mov
jns
xor
dec
adc
into
sbb
or
lea
or
popf
push
adc
dec
std
incb
push
test
add
adc
xchg
fsubs
scas
jo
es
out
push
sub
xchg
dec
push
xor
adc
jmp
mov
push
nop
push
pop
cli
adcb
xlat
push
ja
fs
rcrl
ret
ret
cmp
arpl
jo
jns
mov
push
jl
mov
int3
movsl
dec
dec
mov
push
lret
sti
dec
filds
mov
stc
sub
cs
jmp
sti
aad
ret
mov
adc
pop
divl
jns
out
jle
cmpsl
ja
ja
inc
dec
jmp
mov
lods
push
iret
scas
outsb
mov
icebp
pop
cld
imulb
mov
mov
int3
push
out
add
std
inc
cltd
xchg
sahf
cmp
cmpsb
sarl
jecxz
lret
and
int
push
jnp
dec
sar
stc
fwait
jge
cmp
dec
repz
and
cmpsb
orl
and
push
repnz
stc
dec
lds
stc
dec
ret
test
test
cltd
dec
mov
ss
imul
mov
adc
and
clc
xchg
aaa
mov
xor
les
fxch
fldt
int
xchg
out
xchg
mov
out
fnstsw
insl
jp
out
bound
icebp
xchg
repz
addr16
loopne
cmpsl
pusha
lahf
xor
dec
shr
mov
sub
in
add
hlt
es
inc
mov
iret
enter
sbb
addl
adc
sbb
dec
inc
xchg
js
add
inc
addr16
adc
add
sbb
xorb
cld
sbb
test
test
jo
push
enter
ds
mov
xor
int
xor
in
int
push
leave
lret
cs
dec
jo
or
push
and
mov
pop
xchg
cld
mov
inc
push
rorl
mov
stos
or
mov
imul
cmp
jns
mov
dec
movsl
into
xchg
or
mov
push
sub
shlb
push
dec
loop
pop
cmp
push
xchg
fldl
mov
xchg
mov
xor
xor
add
jl
push
inc
inc
push
xchg
push
stos
and
popa
push
int
in
jbe
sub
jns
popa
in
dec
and
push
arpl
call
push
out
rcrl
loopne
in
das
jg
aam
test
or
dec
in
ss
fstpl
adc
fisttpl
cmpsl
sbb
jnp
bound
sub
cmp
or
lock
mov
ja
jae
rcrl
adcl
pusha
or
fs
jo
cmc
fldl2e
pop
or
pop
lock
dec
aam
and
mov
mov
xchg
andb
cmp
mov
std
scas
xor
cwtl
xchg
inc
sub
jb
pop
test
dec
ds
arpl
ljmp
or
sbb
jp
mov
xor
dec
fisubl
mov
bound
push
clc
insl
push
sbb
aad
cmc
loop
cmp
aaa
loopne
mov
push
fcoml
jp
cli
dec
push
dec
sub
test
cltd
jbe
gs
jnp
lds
out
pop
faddl
jnp
outsb
test
mov
repnz
mov
std
subb
inc
test
mov
xor
in
inc
clc
mov
dec
jge
insb
xchg
pop
ret
xor
xlat
adc
push
mov
pop
cmc
push
pop
push
sti
xchg
inc
fnsave
mov
clc
out
and
or
repz
in
pop
push
rcr
push
jbe
cltd
dec
ljmp
in
sbb
popf
movsl
mov
into
scas
xor
rcr
mov
in
and
notb
enter
mov
out
pusha
mov
push
bound
jbe
push
lret
shll
testl
dec
es
jg
adc
pop
jbe
jge
aad
inc
iret
mov
and
ljmp
xor
jo
mov
into
sarb
add
in
push
mov
nop
and
mov
es
outsb
jbe
imul
sbb
fs
push
mov
mov
pop
mov
aas
mov
lods
and
mov
push
mov
xchg
or
pop
inc
adc
enter
jle
shl
xchg
popa
jnp
push
jg
xchg
aaa
pop
xchg
adc
lret
dec
xor
clc
ds
icebp
jno
push
iretw
into
add
sbb
or
dec
loop
cmp
sub
xlat
test
movsb
or
out
aam
push
adc
adc
jecxz
movsb
cld
je
aaa
aaa
in
adc
push
jbe
add
lods
cmp
pop
mov
lret
cmp
jb
mov
shlb
mov
push
or
sub
cmp
sbb
setg
in
adc
jg
sti
sub
repnz
cs
arpl
test
mov
neg
outsb
dec
clc
je
or
push
imul
les
repz
inc
cli
xlat
xchg
out
jmp
cltd
pop
xchg
xchg
je
movsb
dec
in
loopne
test
jnp
xchg
adc
cmpsl
repnz
push
or
mov
and
mov
addr16
jb
or
sahf
fiaddl
sub
push
hlt
mov
pop
xlat
scas
pop
js
pop
adc
cli
push
sbb
pop
jge
dec
mov
enter
xchg
arpl
out
pop
out
in
movsb
mov
dec
mov
or
adc
into
xor
pop
lods
mov
xchg
push
dec
pop
add
push
jle
push
fists
fcmovnb
sbb
out
or
fidivl
sbb
jge
xor
mov
aas
fisubrl
pop
popl
mov
dec
mov
insb
jl
xchg
push
das
in
addr16
mov
push
mov
and
mov
fwait
jecxz
pop
push
push
das
loope
mov
fwait
push
outsl
push
push
lahf
movsb
cltd
add
xchg
test
in
add
or
xchg
ja
adc
loop
cltd
push
add
and
movl
icebp
pop
repnz
movsl
ret
pusha
ja
pop
pop
dec
xchg
imul
fs
imul
jb
lcall
inc
push
pop
inc
jo
sti
jb
add
sbb
inc
stos
xor
test
stc
sbb
ljmp
xor
aam
cmc
push
add
sub
shr
out
into
jb
test
mov
xchg
fidivrs
and
inc
ret
outsb
mov
xchg
enter
mov
aam
and
push
jb
sbb
pop
dec
aad
cltd
test
sbb
mov
imul
ljmp
inc
and
and
push
insb
mov
push
mov
lcall
lea
les
movsl
daa
add
aad
ss
pop
cli
cli
int
push
ljmp
dec
enter
enter
ficoms
adc
xchg
adc
rol
add
mov
fdivs
cmpb
sti
sahf
mov
xchg
movsb
bound
sub
js
add
je
imul
adc
add
cmpl
arpl
pusha
call
fsubl
subb
mov
jmp
clc
call
imull
addr16
into
jno
lods
mov
adc
adc
push
xor
mov
fildl
jl
push
in
stc
sbb
inc
ret
fs
lds
frstor
pop
and
jae
add
lods
pop
test
push
dec
pop
sbb
fbstp
test
and
adc
dec
fsubl
jo
ds
or
inc
add
stc
adc
enter
lds
pop
dec
fisttpll
mov
or
movsl
push
fwait
mov
pop
inc
inc
xchg
call
fwait
lcall
cli
mov
insl
add
xor
cmpsb
stc
xchg
jp
stos
jl
divb
stos
out
lret
in
jp
jae
dec
pop
or
cltd
cmp
movlps
mov
repnz
dec
xorl
movsl
scas
or
lcall
jbe
add
adc
in
mov
push
je
cmp
cmp
arpl
inc
jns
push
cld
rorb
cli
pusha
stos
mov
and
test
ret
xchg
pop
dec
push
xchg
imul
sarb
minps
push
into
cmc
push
adc
inc
jecxz
add
inc
hlt
icebp
adc
mov
sub
js
cmp
jp
int3
mov
movsl
lcall
jbe
cmc
jo
push
mov
mov
cmpsb
sbb
jecxz
xchg
pop
seta
js
add
push
mov
popa
sbb
pusha
sbb
push
std
inc
pop
data16
or
or
sbb
inc
ret
xor
ja
mov
sub
adc
hlt
inc
dec
test
adcb
filds
popa
jbe
or
cmp
mov
cli
inc
xchg
jae
orb
mov
mov
push
pop
out
shl
fimull
push
pusha
mov
stos
push
clc
sub
pop
stc
xor
lods
into
push
dec
adc
xor
jns
add
push
jnp
in
pop
test
xor
in
cli
movsb
daa
loop
push
cwtl
or
push
xor
push
add
mov
lds
repnz
sbb
daa
dec
xorb
call
loop
adc
jmp
fwait
gs
lret
xor
pop
or
mov
dec
dec
mov
lea
jb
add
push
gs
in
ljmp
das
addr16
cs
jbe
jno
fs
mov
les
je
pop
pop
adc
and
rcpps
lds
gs
subl
cs
arpl
mov
xchg
stc
jae
enter
cmc
int3
inc
mov
xlat
sarl
scas
sub
dec
pushl
cmp
call
in
or
pop
jb
data16
ja
sbb
xchg
mov
push
enter
xlat
shl
lea
xchg
push
lods
mov
xor
push
lcall
repz
cmp
or
subb
loope
push
out
mov
pop
aad
gs
and
dec
jecxz
js
mov
ds
insb
ljmp
addl
test
add
cwtl
leave
hlt
sub
clc
dec
cmp
rcl
in
lea
cmp
xchg
mov
lret
test
std
pop
mov
addr16
inc
in
mov
sub
mov
sbb
jle
dec
lds
in
imul
push
xchg
add
xchg
aad
mov
sbb
mov
lock
jne
out
insl
xchg
movsb
call
cmovo
mov
enter
fsubrs
inc
loope
push
push
add
mov
xchg
fsincos
out
mov
int3
aas
imul
test
sahf
add
call
xor
xchg
cmc
push
hlt
xor
loopne
push
pop
push
movsb
scas
mov
aas
nop
add
fdivrl
mov
outsl
test
dec
arpl
sbb
mov
gs
mov
fnstsw
pop
adcl
jmp
mov
dec
xchg
test
xchg
pop
fdivrl
inc
subl
gs
aad
lcall
sbb
loop
mulb
ficompl
mov
in
stc
dec
jecxz
push
lds
push
mov
in
cmp
xchg
je
pop
xor
xor
iret
das
jge
cmp
jnp
lcall
lea
leave
js
and
jge
xchg
out
add
xchg
pop
jmp
xor
std
or
popf
in
pop
mov
mov
mov
jne
mov
clc
xor
adc
std
xchg
cltd
rcrb
int3
inc
mov
jno
jnp
pushf
pushf
mov
dec
push
and
call
cld
cmp
fwait
push
mov
dec
cltd
mov
mov
mov
test
push
fwait
mov
cmp
mov
pop
sub
lds
pop
mull
xor
pusha
pop
xor
xor
pop
les
push
dec
adc
xlat
in
jle
sarb
divb
and
fsubrp
mov
in
scas
jmp
mov
sarb
shlb
mov
je
das
arpl
cltd
inc
in
daa
and
mov
leave
incb
sbbb
aam
fistps
mov
mov
inc
test
inc
push
mov
add
dec
dec
rcll
dec
cmpsl
aaa
in
mov
and
inc
addr16
dec
push
scas
xchg
je
cmp
js
xchg
fimuls
aam
cmp
jno
cmc
pop
lahf
inc
or
ljmp
shlb
jp
mov
and
lret
data16
inc
insb
xchg
les
sub
aam
repnz
lods
inc
dec
jbe
xchg
xchg
jo
xchg
cmc
lret
loope
dec
jno
sahf
add
mov
inc
int
mov
inc
jno
cmp
adc
push
icebp
out
adc
cmp
jns
nop
push
mov
sbb
daa
nop
push
pop
adc
inc
fsubrs
inc
xorl
mov
fisubs
bound
repnz
insb
mov
repnz
mov
mov
fst
ljmp
loopne
or
std
pop
jae
pushf
aam
ss
jmp
mov
ds
cmp
pop
inc
ret
das
or
daa
int
not
lret
repnz
es
cmp
add
push
in
add
mov
rcrb
xchg
mov
js
out
push
test
gs
dec
sub
fwait
cld
push
int
jle
lcall
jns
shrl
sbb
outsb
mov
and
mov
sbb
hlt
xor
mov
cli
test
and
adc
xlat
cwtl
add
xorl
or
gs
xchg
lods
add
jo
cmpl
mov
test
pop
rol
gs
pusha
pop
sbb
pop
mov
push
lods
xchg
arpl
dec
mov
dec
iret
shrl
ror
dec
jecxz
mov
inc
mov
add
cmpsb
loopne
sub
mov
addr16
test
into
mull
jge
mov
jne
cmp
pop
adc
mov
mov
or
das
sbb
pop
mov
sub
cmp
push
jae
divl
fidivl
adc
out
out
lods
xchg
orl
imul
std
jo
mov
jmp
cmp
inc
scas
jge
cmp
mov
xchg
jnp
mov
and
xchg
repz
jmp
mov
adc
pusha
leave
add
cmp
stos
subl
out
dec
mov
mov
and
test
cmp
push
test
fisttpll
pop
sub
add
or
cmp
pop
sbb
dec
negb
fstps
scas
ret
outsl
bnd
sbb
daa
mov
mov
ret
int3
addr16
aaa
fsubrl
adc
ljmp
and
jg
inc
fwait
push
inc
rclb
pop
testb
jb
insb
test
rolb
test
fildl
push
mov
lock
push
push
rorl
and
insl
lods
mov
rol
push
cmp
xchg
lock
adc
dec
xor
addr16
or
in
in
inc
pop
jle
or
pop
stc
in
or
pop
insl
repz
insb
fs
or
xor
in
fbld
or
call
jbe
in
sbb
cmp
sahf
or
push
mov
stos
shll
pushw
lea
adc
push
mov
jo
cmp
jg
cmp
icebp
call
and
in
stc
add
call
pop
adc
cmp
pop
loope
jle
push
and
insb
sub
sbb
xor
pop
ja
xchg
add
lock
dec
pop
jg
ljmp
mov
fldl
dec
lahf
adc
repnz
inc
pop
xchg
adc
push
jp
cwtl
ficomps
adc
lret
sub
mov
andl
and
hlt
clc
or
dec
pushf
je
fcos
iret
es
int3
into
loop
pushf
mov
cwtl
dec
mov
out
inc
sti
rcrb
loopne
sub
jmp
loopne
mov
dec
pop
ret
scas
jo
subl
ljmp
xlat
loope
xor
sahf
lahf
cltd
mov
test
in
mov
xor
mov
inc
mov
inc
fmull
pop
inc
xorb
jl
mov
adc
es
out
stos
out
inc
sahf
xchg
jno
cs
sbb
lods
repnz
rcrb
clc
sub
andb
mov
aad
ret
mov
cmp
iret
jb
sbb
stos
outsl
int3
mov
aaa
loopne
pop
outsb
add
test
mov
cwtl
mov
lret
fwait
arpl
or
push
rol
mov
fnstsw
adc
in
mov
lcall
sub
jecxz
cld
sbb
jle
push
and
jg,pt
pop
int
je
dec
rcrb
lahf
adc
jbe
pop
lret
jl
inc
add
push
lcall
lea
dec
jge,pn
mov
insl
push
or
jnp
lcall
js
idivl
ja
xchg
test
cld
movsb
int3
mov
sbb
nop
jp
adc
jae
mov
adc
js
and
sbb
js
test
sub
sub
mov
icebp
repnz
jle
ficoml
or
int
sub
cmc
cld
add
xchg
bound
and
mov
mov
imul
sti
mov
adc
xchg
divb
xchg
or
or
add
fists
lods
xchg
inc
insl
xchg
sub
push
sahf
leave
push
mov
test
fs
sub
jmp
inc
lock
leave
int
xchg
inc
stos
loopne
push
sbb
mov
out
notl
xor
jp
cmp
pop
out
lret
fsubr
lcall
cmp
ficoms
or
lahf
push
sub
and
adc
leave
outsb
notb
mov
in
mov
out
mov
jbe
cld
sbb
fsqrt
hlt
je
stos
xchg
push
outsl
lea
shlb
cmpb
dec
imul
decl
dec
dec
xlat
cmp
mov
leave
nop
dec
hlt
mov
repz
iret
dec
and
jmp
cmpb
pop
adc
xor
aam
arpl
pop
mov
lods
adc
sub
ds
subl
jecxz
xor
jnp
lret
sub
lock
pop
nop
xor
or
je
dec
sub
pop
icebp
aam
push
js
pop
cld
mov
pop
xor
pop
jnp
lds
cmp
and
cmpsb
out
ljmp
xchg
int3
dec
push
pop
lea
pop
sub
ret
adc
cli
add
mov
insl
adc
xor
xlat
add
movsl
mov
cmp
mov
and
push
jnp
jnp
fnstenv
jae
movsb
push
aas
dec
xchg
movsl
push
add
clc
pop
dec
add
insl
test
iret
nop
lds
cmpsl
or
fisttpl
cmp
push
sub
or
or
or
mov
hlt
pop
ficoms
xor
loope
andb
push
cld
idivb
jmp
test
mov
sub
mov
pop
call
lods
push
jb
jp
xchg
jb
hlt
iret
add
stc
lret
sbb
xor
cltd
arpl
in
mov
jbe
jnp
sbb
fcompl
dec
into
cmp
mov
mov
jns
hlt
shlb
adc
xchg
xchg
sub
sbb
push
cmp
inc
pushf
call
xlat
dec
scas
ret
mov
dec
insb
ficoms
popf
rorb
out
outsl
bound
xor
adc
mull
jnp
cmp
push
incl
push
neg
dec
fsts
scas
movsb
clc
mov
call
xor
pop
push
cmp
js
mov
mov
or
je
pop
jnp
or
mov
insb
pop
aaa
jmp
adc
add
bound
jae
mov
cwtl
mov
lcall
imul
push
lods
cmpsl
mov
aaa
cmp
pop
ret
sahf
mov
pop
dec
mov
fcompl
imul
cmpsb
cmp
mov
jl
xchg
and
cmpsl
sbb
pop
xlat
fwait
test
das
adc
xor
pop
enter
cmc
das
out
std
push
sbbb
jg
mov
cmpsl
jp
jle
inc
int
inc
leave
cwtl
jg
sub
jbe
inc
scas
push
pop
shlb
mov
out
dec
loope
sbb
add
push
mov
push
cmp
lcall
mov
loopne
adc
sbb
mov
fisttpl
push
jns
mov
rcrl
dec
adc
cs
test
outsl
lds
insl
test
aaa
push
mov
call
cmp
xor
dec
xchg
mov
or
sub
adc
or
mov
js
sti
pop
xchg
cli
fisubrs
pop
sub
pop
mov
cwtl
pop
dec
imul
or
loope
jecxz
jbe
shll
mov
sbb
dec
jg
les
push
adcb
sbb
cltd
mov
dec
xchg
mov
mov
jb
push
push
bound
and
cltd
push
test
stos
xchg
adc
insb
jg
xor
imul
aad
out
push
xor
pop
mov
or
lcall
jmp
mov
pop
push
push
inc
mov
sbb
dec
jo
mov
jne
inc
add
inc
cmp
shll
sbb
add
mov
and
int3
adc
std
leave
dec
testl
into
and
daa
dec
mov
xor
sub
cmpsl
scas
push
sbb
daa
and
hlt
fdivrl
dec
or
repz
outsl
sub
adcb
mov
mov
or
push
les
lcall
divl
pushf
mov
test
addb
push
leave
stc
popa
sbb
test
jns
ss
lcall
mov
inc
dec
xchg
pop
loopne
nop
cmpsb
stos
jg
mov
xor
push
jle
push
sbb
fistps
in
xchg
sahf
mov
inc
pop
ficomps
dec
mov
enter
stc
cmpsb
push
jo
jmp
mov
dec
cltd
aaa
push
mov
push
add
stos
pop
mov
inc
in
dec
xchg
mov
fiaddl
adc
fcomp
adc
push
push
ss
push
je
ret
imul
cmpl
in
xor
out
ss
out
mov
cmc
loopne
andl
jno
movsb
adc
mov
cmc
dec
jbe
gs
pushf
xor
add
in
hlt
ja
pop
in
insl
cmp
iret
fwait
sbb
adc
xor
aas
or
lcall
xchg
ljmp
mov
add
cmp
outsb
andl
xor
and
mov
enter
pop
sub
or
shrl
lea
dec
pop
pop
repnz
lea
push
loope
mov
movsb
dec
push
fbstp
cli
and
and
push
gs
pop
lds
sbb
sub
loope
push
loopne
xor
fs
add
fistpll
hlt
cmpsb
ss
mov
dec
js
inc
push
mov
shrl
pop
sub
add
aad
push
lods
icebp
lods
fildll
mov
int3
test
sbb
xchg
fsubs
inc
or
xchg
loope
cmp
lock
sub
jae
inc
xorl
and
mov
xchg
incb
fs
cli
lret
mov
pop
pusha
rorl
insl
sarl
int
push
sbb
or
or
sub
adc
jecxz
and
cmc
adc
mov
or
ret
aam
mov
xchg
mov
push
xor
jp
test
lret
cmp
repz
movsb
xor
cmpsl
pushl
enter
push
testb
addr16
adcl
je
int
ljmp
mov
mov
jmp
packsswb
pop
mov
daa
imul
jge
nop
cmp
push
jl
repnz
ret
or
sbb
mov
pop
sbb
cmpsl
push
xchg
pop
xchg
jb
les
stc
insl
push
fimuls
jl
nop
ficoms
inc
push
imul
xor
fists
loope
fwait
sahf
push
ljmp
sbb
and
repz
pop
add
scas
xorl
adc
sbb
loope
fdivrs
outsl
fisubl
dec
jl
add
in
outsb
leave
cli
dec
out
mov
dec
fiaddl
jecxz
jl
imul
inc
stos
repnz
call
mov
jecxz
incl
fildl
pop
cmpsl
mov
inc
mov
or
jo
and
ja
mov
pop
mov
lock
loope
ffreep
mov
fldcw
pop
pop
jns
cmp
xor
push
pop
push
mov
mov
push
cld
bound
jne
sbbl
mov
cmp
sub
les
pop
pop
and
cmp
xor
and
test
je
jbe
dec
lea
shl
mull
loopne
mov
jp
mov
sti
ljmp
xchg
jge
int3
push
test
and
push
into
xor
test
cwtl
xlat
pop
adc
inc
adc
imul
sbb
dec
sbb
sub
arpl
mov
movsb
aad
repz
int3
arpl
cmp
inc
pop
add
out
std
xor
fdivs
hlt
fdivrs
sbb
mov
movsb
mov
test
xlat
fisubrl
lods
sbb
jl
mov
xor
jae
and
rcrb
cmc
inc
mov
xchg
inc
sub
pop
sbb
hlt
inc
andb
pop
mov
mov
cmp
pop
add
gs
dec
mov
rcrl
adc
push
or
adc
dec
mov
and
mov
scas
enter
mov
mov
or
stos
adcl
jecxz
icebp
xchg
inc
dec
mov
sbb
stos
pop
push
mov
inc
pop
nop
jae
add
xor
movntq
out
xchg
and
xchg
ret
jle
in
imul
cs
and
pop
in
mov
inc
cmpsb
into
and
mov
inc
stos
or
mov
js
xchg
push
xchg
dec
ret
push
clc
adc
push
push
lret
add
subb
push
adc
xchg
xchg
and
stos
pop
dec
les
aas
imulb
lahf
arpl
clc
cmp
mov
or
insb
inc
stc
addr16
scas
lcall
and
jmp
inc
shl
pop
sahf
add
stc
mov
jno
les
xchg
fisubl
mov
jnp
into
inc
in
push
xchg
loop
add
and
dec
mov
lods
cmp
cmp
dec
push
jo
mov
mov
jb
fstpt
xor
rolb
jmp
add
inc
repnz
dec
xchg
jns
xchg
mov
pop
adc
dec
dec
mov
lds
inc
push
fadds
mov
and
outsl
inc
jp
mov
or
lock
jbe
adc
fiadds
or
cmp
fldenv
loope
lea
mov
mov
xchg
std
or
adc
call
inc
add
loop
or
or
sub
inc
mov
adc
ret
push
pop
push
loop
insl
push
push
or
js
jecxz
aam
and
or
jge
jne
jae
stc
cmpsl
jl
in
jnp
loope
sbb
ss
inc
pusha
xchg
lds
cmpl
rcrl
subl
in
ret
pop
mov
add
adc
sbb
xor
push
adc
sti
aad
jnp
pop
aaa
and
pop
mov
sahf
outsl
mov
movd
xchg
add
xor
lea
insl
iret
out
in
xchg
cmpsl
loope
in
inc
mov
pop
mov
mov
movsl
adc
in
xor
pusha
insb
hlt
mov
jl
and
mov
xchg
sub
icebp
divl
fstps
insl
xor
pushf
xchg
add
insb
or
and
add
jo
ss
or
mov
ss
or
bound
stos
scas
das
lds
jbe
xor
cmp
lods
cwtl
aad
mov
test
scas
xchg
outsb
add
fisubrl
jmp
roll
jno
stos
out
mov
stc
inc
cmpsb
inc
aas
cmp
or
inc
mov
cmp
in
dec
pusha
mov
xor
or
dec
int3
jp
dec
loopne
pop
mov
adc
push
out
cltd
xchg
mov
icebp
in
adc
push
push
mov
sbb
mov
or
repz
fs
addr16
fs
or
push
fsubp
loop
ret
sbb
sbbb
andl
popf
push
jb
jnp
xchg
sbbl
out
cs
cmp
subl
fwait
pop
inc
cld
jg
push
and
imul
sbb
jmp
and
jns
mov
inc
jle
xor
pop
xchg
ss
pop
mov
push
jg
popf
xchg
fsubl
out
call
stc
aaa
out
test
xlat
mov
or
xchg
mov
stos
pop
jb
ret
sub
in
mov
fidivrs
mov
test
adc
adc
xchg
insb
sub
lock
xchg
dec
cld
lahf
imul
test
sahf
out
jle
adc
mov
fcomip
imul
xchg
in
sub
adc
xchg
adc
sbb
adc
xchg
fimull
movb
inc
or
stos
sub
xor
nop
and
sub
sub
fstps
cmc
cmp
clc
or
pop
dec
or
addr16
scas
outsb
dec
fs
popf
insl
add
in
or
loop
iret
stos
inc
mov
xor
rorl
or
push
mov
push
or
movl
mov
not
movsbl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
mov
sbb
sub
mov
xor
movl
cmp
movl
jne
xor
mov
orl
push
mov
add
mov
mov
mov
xor
add
jmp
mov
lret
mov
mov
test
jb
adc
jb
dec
andl
mov
sub
nop
xchg
jecxz
incb
out
adc
fnstcw
dec
mov
popf
push
or
cmp
out
fnstsw
mov
hlt
sbb
jb
xor
pushl
push
jecxz
hlt
mov
lods
std
insb
push
cld
sub
mov
cmpsl
mov
es
mov
iret
mov
sahf
sti
sbb
jl
mov
dec
cmpxchg
xchg
popf
arpl
add
xchg
add
pop
aaa
jb
mov
js
cli
sbb
sarl
dec
mov
test
jo
outsb
mov
mov
or
in
fsubrs
jmp
lods
add
cmpsl
inc
shl
xchg
xchg
add
popa
push
dec
push
divb
fwait
pop
and
fdivrl
shl
in
xchg
stos
sub
shll
mov
test
aad
arpl
inc
mov
aad
pop
push
xor
mov
test
mov
call
jmp
lret
or
in
test
mov
loope
es
dec
pop
lds
sub
arpl
test
cmpsl
or
mov
jecxz
xchg
push
pop
cmpsb
mov
and
imul
movsb
xchg
or
jno
dec
mov
jne
or
xchg
cmpsb
cmp
out
xor
jo
xlat
adc
sub
int
movb
shll
xacquire
mov
mov
jmp
cmpb
push
cmc
rorb
call
fdivrs
mov
dec
push
imul
es
scas
push
or
ja
roll
and
lahf
ja
pushf
pop
cmpsb
and
int3
outsl
js
imul
jae
out
add
test
sti
dec
sub
call
pop
fmul
mov
test
cmp
iret
mov
imul
into
cmp
js
jns
icebp
fists
dec
sub
pop
xor
sbb
dec
add
sub
aas
or
ds
out
aad
pop
test
sbb
lods
jecxz
xchg
addl
push
das
ret
jo
mov
cmp
test
popa
cmp
xor
sub
jge
pop
rorl
insb
sbb
mov
dec
adc
cwtl
out
and
add
mov
mov
pop
insb
inc
sahf
pop
or
outsl
dec
mov
aam
adc
push
leave
btr
sbb
xor
rcrb
ljmp
dec
loop
or
jbe
add
inc
imul
or
add
loop,pt
add
jns
scas
pushf
cmp
mov
mov
push
lret
push
popa
add
lcall
ja
mov
mov
mov
int
jecxz
inc
int3
inc
outsb
movsl
aad
das
repz
mov
sbb
test
jp
fldt
roll
test
add
xor
ret
xchg
lcall
nop
or
mov
mov
add
mov
and
cld
into
jmp
push
sub
xlat
ret
repz
mov
pop
xchg
jge
pop
push
lret
test
inc
out
int3
in
cmp
dec
pop
xor
int3
sbb
pop
pop
mov
ss
sbb
sahf
jne
or
and
inc
shr
add
test
mov
rclb
sub
cmc
dec
jle
sub
popa
pop
stos
cld
jle
jmp
in
scas
add
pop
out
push
jmp
push
data16
mov
jle
jne
shl
cltd
pop
xchg
outsb
push
mov
in
push
xchg
insb
movl
fistps
pop
xor
dec
mov
inc
roll
loop
pop
xor
xor
fwait
in
mov
push
pop
sbb
cltd
int3
daa
dec
pop
aas
cmpb
jns
es
add
xchg
sbb
xchg
or
outsb
mov
push
cmpsl
push
adcl
mov
gs
add
or
shll
aad
in
jns
gs
insb
push
add
mov
repnz
scas
cmc
lahf
rorb
rcll
cmp
xchg
mov
das
add
jl
mov
roll
jle
daa
ss
mov
addr16
fwait
sub
cmp
stos
in
fisttpl
shlb
cs
and
push
push
out
pop
add
push
pusha
or
push
arpl
cmp
addr16
push
add
ss
xor
sbb
into
mov
negb
xor
popa
cmp
ja
push
pushl
ja
lret
dec
pop
sub
sbb
fisubl
sbb
lret
iret
jns
leave
or
xchg
clc
outsl
pop
lahf
subb
mov
pusha
jmp
push
mov
push
movsb
or
pop
mov
paddusw
dec
cmp
adc
clc
xor
sub
cld
pop
pop
fidivrs
into
mov
xchg
cmpsl
inc
or
jge
stos
outsl
fildl
sub
sahf
nop
loopne
cmp
lcall
push
roll
aaa
inc
fimull
xchg
lods
add
jbe
dec
shll
adc
notb
stc
jns
mov
rcll
sarl
add
inc
push
mov
movzbl
or
sbb
pusha
pop
xor
test
xlat
mov
pop
mov
loopne
adc
in
sub
scas
push
pusha
sub
cli
jecxz
repz
or
ret
hlt
outsb
mov
push
int
outsb
scas
out
scas
fidivs
std
dec
test
mov
mov
jle
stos
mov
aam
leave
and
or
bnd
push
cmpsb
fucomp
jmp
gs
sbb
xchg
sub
punpckldq
jle
dec
imul
enter
in
stos
mov
setp
sbb
jp
mov
mov
adc
xchg
mov
inc
lods
aam
sub
inc
mov
pop
stos
cwtl
cmp
xchg
in
dec
ret
adc
lret
mov
or
sub
shrl
or
xchg
or
xor
push
imul
cmpsb
inc
sbb
push
xchg
pop
mov
or
jbe
mov
pop
fwait
out
xor
test
pop
xchg
mov
dec
scas
xor
test
jecxz
add
or
and
sahf
call
int3
inc
fisubl
cmp
cld
xchg
in
jmp
mulb
aaa
sti
std
cmp
mov
aaa
inc
jne
cwtl
cmpsb
int
faddl
fdivrl
dec
insl
int3
mov
push
sbb
pop
js
dec
mov
lock
loopne
cmc
sti
jle
adc
cmpsb
cli
shlb
adc
gs
ret
outsb
call
mov
inc
dec
daa
inc
ret
sbb
push
mov
icebp
ss
lds
and
pop
cli
mov
fists
and
sar
jmp
scas
mov
dec
popf
ficoml
xor
mov
sub
sub
mov
jns
fcmovnu
hlt
sbb
dec
or
imul
bound
push
cmp
jl
leave
cmp
add
jl
cli
popa
bound
ja
sbb
ret
sub
mov
sbb
pop
adc
pop
adc
outsb
mov
xor
loopne
dec
mov
pop
push
mov
inc
out
xchg
push
and
loop,pt
cli
cs
pop
inc
xor
les
into
fiadds
std
pushf
dec
pop
ja
out
jbe
enter
and
mov
ds
sub
lahf
shrl
cmpsb
mov
cwtl
xor
mov
cmp
fimuls
and
rol
jnp
push
js
mov
add
xlat
push
lcall
addl
pop
add
shl
mov
jecxz
rolb
mov
dec
or
cmp
fiaddl
xor
notl
int3
mov
lea
mov
iret
wbinvd
es
cs
inc
xchg
cmp
out
add
sarb
lret
test
pop
adc
or
xchg
jbe
mov
xlat
push
pop
dec
jo
jg
lock
mov
mov
pop
sub
add
pusha
xchg
mov
mov
nop
bound
mov
mov
push
inc
jb
int3
mov
mov
das
sbb
mov
nopl
xor
mov
sub
outsl
cmp
mov
mov
imul
mov
shlb
gs
mov
cmp
lret
adc
cmpsl
mov
cmpl
adc
sbb
outsl
lcall
add
dec
cli
push
pusha
inc
imul
pushf
movsb
jecxz
cld
sbb
and
push
scas
sub
daa
stos
xchg
mov
xchg
inc
pushf
test
imul
or
js
sub
ja
adcb
clc
inc
and
and
mov
scas
xor
lret
fsubp
arpl
sub
lea
clc
mov
mov
mov
movsl
adc
popa
dec
addb
mov
hlt
imul
inc
sbb
int
arpl
lret
dec
cmpsl
xchg
dec
xor
int
aam
lahf
ret
or
mov
mov
and
cwtl
mov
jne
push
xchg
xor
es
push
xor
cmp
jbe
sub
ss
ljmp
inc
push
xor
inc
push
gs
inc
pushf
mov
pop
pop
pop
movq
push
pop
movsb
popa
and
iret
mov
insb
xor
dec
and
int3
or
loopne
stos
cltd
lods
sti
cmpsb
or
lock
out
lods
push
mov
jmp
mov
pusha
xchg
repnz
push
andl
mov
xor
out
xchg
bswap
scas
popl
mov
aam
dec
inc
xchg
mov
cmp
movsb
push
jle
rcll
push
ret
addr16
mov
fwait
mov
or
out
xor
jge
out
jge
not
andb
cmp
int
mov
ret
push
xchg
roll
mov
mov
test
and
adc
gs
aam
orb
mov
fisubs
ret
mov
jbe
lret
loop
push
or
xchg
pop
or
aad
cli
lahf
insl
fstl
adc
int
aam
test
in
call
fdivrs
lret
jmp
xchg
add
lods
add
leave
pop
and
mov
dec
out
test
jb
cmp
popf
in
jo
dec
dec
mov
xchg
sbbb
adc
das
sub
pop
stc
lds
ja
pop
push
jle
ret
fdivs
movsl
cmp
pop
enter
fsubs
sbb
mov
lea
mov
pop
insl
push
inc
test
out
shll
mov
push
jecxz
clc
dec
inc
sub
andl
pushf
aas
and
in
dec
jnp
aam
inc
addl
and
push
add
cli
push
push
xor
outsb
push
jbe
imul
notl
test
pushf
loopne
mov
adc
hlt
mov
sbb
sub
push
pushf
fldenv
and
mov
xchg
add
jp
mov
push
test
sub
dec
bound
push
mov
aam
sbbl
out
xchg
cmp
add
push
xchg
dec
std
sti
mov
std
jb
jge
xchg
popa
in
adc
fdivrl
mov
loopne
fnsave
sub
sub
mov
outsl
xor
cmp
mov
popa
cmpsl
dec
jbe
cwtl
fstps
imul
jmp
ret
movsl
push
fwait
in
fldenv
sahf
dec
dec
add
or
pop
inc
mov
stc
and
clc
ror
push
into
popa
sti
inc
loopne
mov
scas
sbb
sub
bound
mov
mov
dec
dec
stc
rcrl
js
pusha
xlat
pop
lcall
pop
bound
inc
das
das
aas
mov
mov
mov
cmp
jmp
dec
fst
lock
mov
or
stc
push
dec
add
fwait
rorl
fcmovnb
cltd
fwait
aaa
and
dec
mov
cmp
add
mov
sahf
aas
arpl
adc
adc
int3
sub
daa
jg
fucomi
jg
fidivrl
mov
in
xor
cmpsb
outsl
mov
pop
push
add
sahf
mov
out
xchg
xchg
ds
and
ds
mov
cli
scas
fucomi
sbb
enter
arpl
cmp
and
jp
sbb
ljmp
int
push
cmp
lcall
iret
add
adc
lahf
fistps
jmp
mov
xchg
sbb
add
xchg
bound
clc
push
mov
outsl
mov
xchg
xor
pop
mov
inc
cmp
inc
xor
and
adc
jge
out
mov
shrl
jmp
cli
xchg
push
pusha
mov
push
xchg
and
shl
and
jp
std
fs
or
sahf
out
or
mov
push
cmp
xor
push
inc
xchg
add
push
stos
fists
inc
dec
jbe
mov
in
fisttpl
outsb
inc
fwait
inc
push
imul
lods
and
movsl
out
lcall
popa
inc
es
sti
fbld
cmpb
ljmp
aad
popf
mull
jnp
movsb
lock
dec
mov
xlat
lods
push
movsl
xchg
inc
xor
jp
lods
fmull
push
or
dec
push
enter
xchg
mov
btr
push
push
iret
shll
sti
nop
lods
fsubrs
adc
fidivrl
jp
jae
add
or
and
sub
aas
jle
push
xchg
sbb
js
shlb
inc
sub
jno
xor
mov
fcomip
repz
push
lret
push
sbb
pop
mov
inc
mov
addr16
hlt
pop
mov
in
addl
test
leave
std
lahf
lcall
icebp
push
adc
mov
push
mov
test
and
cmc
fucomip
scas
or
and
mov
adc
or
pushf
lods
mov
cmc
outsl
imul
lods
pusha
arpl
jns
mov
xor
out
mov
pop
push
repnz
add
sub
push
loopne
aad
andb
push
inc
cmp
push
fisubs
pop
inc
cmp
inc
adc
ljmpw
inc
pop
push
scas
cmp
or
ds
stos
pop
add
xchg
inc
mov
cmp
sub
aaa
popa
daa
adc
mov
sbb
subl
lahf
lock
insb
xor
int
les
and
dec
xchg
and
xor
outsl
loope
sub
je
out
or
jecxz
and
loope
call
ret
fidivrl
jnp
call
out
pop
dec
loop
cmpsb
and
or
inc
mov
xor
jp
sbb
fmul
repnz
imul
loopne
sub
jno
pop
imul
fsts
cwtl
adc
jge
jb
mov
mov
arpl
cmc
inc
xchg
push
xor
stos
pop
add
out
aas
lahf
jl
mov
rorb
fsubrl
in
and
les
rcrl
and
pop
lods
inc
adc
mov
xor
fistl
data16
jnp
rorb
jae
gs
adc
stos
push
movsl
aaa
xor
pop
in
out
notl
mov
notb
scas
mov
fwait
sbb
xorl
iret
sbb
or
adc
and
and
dec
out
dec
lea
xor
ja
scas
xor
inc
aad
mov
mov
cmp
or
icebp
lock
data16
xor
mov
xor
jle
jns
mull
or
popa
push
mov
popl
or
adcl
mov
stos
fnstenv
push
scas
stc
fnsave
or
outsl
loopne
sub
sub
gs
mov
call
or
mov
hlt
dec
jmp
add
ss
dec
call
movsl
mov
sub
ja
int3
cmp
and
fldenv
hlt
add
and
jne
ror
stc
xchg
lcall
jae
les
inc
insl
xchg
mov
std
push
adc
rorb
and
jbe
data16
mov
iret
push
scas
push
fildll
xchg
dec
pop
pushl
jmp
gs
aad
dec
dec
fistl
fisubl
sbb
add
jne
aaa
and
dec
inc
lret
add
jnp
cmpl
rcl
sbb
out
hlt
push
or
cli
enter
fdivl
iret
inc
cli
in
inc
mov
or
dec
mov
nopl
push
ljmp
cmp
ljmp
subb
iret
pop
xor
scas
jecxz
mov
decl
lods
sbb
scas
inc
hlt
popf
adc
jmp
xchg
clc
jmp
lahf
mov
test
inc
pusha
jl
pop
aad
cmp
cmpsb
out
add
xchg
movsb
xacquire
imul
adc
pop
sbb
or
cld
jl
mov
jo
stos
dec
in
std
rcr
out
not
or
and
stos
jb
add
mov
sub
std
insl
add
jg
lods
icebp
cmp
jo
lods
aaa
jae
mov
adc
sub
addl
xorl
dec
out
inc
hlt
jns
sti
iret
ret
fucomi
dec
and
push
or
rolb
fdivl
dec
mov
daa
and
and
add
jne
andl
repz
std
xor
stos
in
jne
dec
cmpsb
xor
nop
xchg
dec
je
popa
outsl
ret
test
pop
dec
in
cmp
jmp
rcrb
sbb
jae
stos
out
mov
test
jno
cmp
or
cwtl
nop
mov
push
ret
xor
ljmp
xchg
clc
repnz
test
mov
pop
push
pop
xlat
lods
or
sahf
push
sbb
mov
icebp
ret
in
adc
fimuls
outsb
push
jae
lock
push
ljmp
mov
dec
push
xchg
dec
mov
inc
pop
pop
xchg
lret
jmp
adc
shlb
and
push
js
or
cwtl
mov
in
jnp
dec
mov
dec
int3
mov
cmp
and
out
push
stos
and
add
pop
or
fs
xchg
data16
xrelease
xchg
lahf
mov
xchg
or
leave
xchg
mov
into
fdiv
fs
and
xchg
xor
or
mov
fwait
push
iret
xchg
scas
pop
dec
mov
pop
jo
sbb
xchg
ret
cs
push
imul
and
cli
xchg
xor
sub
test
in
in
lahf
mov
movb
iret
cmpsl
rcrb
or
and
adc
or
shll
imul
mov
jle
jge
xchg
daa
scas
lds
pop
popa
fs
adc
pop
cltd
in
fadds
dec
sbb
rcr
fs
mov
movsb
addr16
enter
mov
push
adc
imul
cmp
push
sub
cmpsb
sbb
and
popa
dec
cmpsl
stos
cli
fdiv
push
sti
dec
mov
in
add
push
dec
push
aad
dec
cmp
les
or
insb
repnz
xchg
rorb
add
mov
jbe
cwtl
cld
fidivl
cmpsb
sbb
or
ja
mov
inc
clc
mov
cld
lret
sub
inc
dec
mov
cmp
xor
inc
jae
cltd
arpl
in
fstl
lcall
test
mov
xor
lods
mov
and
jae
dec
test
or
iret
cli
je
out
dec
add
icebp
jne
mov
xchg
rclb
mov
rcrl
stos
adc
jp
mov
lahf
pop
aam
jns
dec
shrb
cmpsl
lea
xchg
jno
fisubl
adc
lret
add
and
xchg
push
loopne
dec
fdivrl
and
sarb
mov
push
xor
stos
pusha
lahf
mov
mov
xchg
xor
arpl
lea
rep
sbb
add
dec
cmp
cs
jecxz
xchg
jns
lcall
add
inc
movl
sbb
pusha
jnp
cmpsb
xchg
dec
pop
lods
test
pop
cmp
push
push
mov
jbe
notl
out
js
push
cmpsb
jecxz
loop
jae
fsts
sbb
test
fcompp
push
repz
leave
fcmove
mov
subb
scas
pop
aad
std
jg
and
test
ja
cmp
sbb
dec
data16
pop
rcrl
stos
popa
ja
into
fucom
add
sub
push
in
outsb
lock
outsl
ret
test
mov
lods
push
dec
in
cli
or
jl
sbbb
mov
and
cli
out
adcb
lds
pusha
ret
xchg
dec
push
popa
adcl
movntq
or
inc
outsb
sbb
inc
enter
call
cmp
cltd
mov
xor
push
push
add
out
pop
cmc
xchg
lret
xchg
nop
adc
mov
into
icebp
cltd
in
jno
xchg
loope
inc
mov
outsb
cmp
into
sub
out
jle
xchg
sub
push
cwtl
nop
jp
cmp
adc
fidivl
pushf
fcompl
jnp
cmpb
test
xor
jbe
sbb
cmp
shlb
xchg
ret
mov
mov
lret
div
into
rcr
fmull
scas
fcomps
addb
mov
mov
outsb
idivl
out
push
xchg
fnstcw
jge
ret
std
push
lods
lds
cltd
jb
and
les
fldenv
enter
and
outsb
pop
fimuls
jl
jb
cmpsl
xchg
loopne
jae
fsub
ret
lods
lock
dec
cmp
stos
dec
push
mov
dec
loop
outsb
fdiv
in
cmp
lahf
cs
add
ret
dec
js
shrl
mov
mov
xor
mov
loopne
mov
jge
dec
lcall
stos
jg
jbe
shl
cmp
sub
cmp
cwtl
aaa
pop
inc
sti
add
cltd
xchg
xor
pop
sub
or
jnp
mov
outsl
ret
add
sub
cmpsl
xor
iret
das
arpl
aam
in
xor
divb
dec
push
ds
pop
pop
ss
sbb
in
testl
pop
cwtl
jge
lret
lcall
push
int
mov
mov
fs
sbbb
loope
js
pop
pushf
dec
test
mov
adc
lret
dec
sub
fstps
inc
icebp
jmp
push
dec
push
sub
xor
or
lods
cmp
inc
inc
push
dec
fcomps
aad
xor
mov
cmc
add
adc
or
inc
push
sub
std
xor
leave
sarl
add
popa
repz
xchg
xchg
and
xchg
popf
fs
sahf
ds
push
jb
pop
dec
cs
stos
adc
dec
sti
cld
shlb
mov
mov
and
rorb
je
hlt
leave
cmp
mov
add
ficomps
les
fnsave
dec
in
sbb
fcomip
or
out
inc
imul
inc
icebp
mov
popf
gs
mov
push
sub
std
pop
or
subb
sub
int3
mov
xlat
movsl
js
out
loop
xor
sbb
addb
jl
mov
sub
jmp
aaa
adc
sub
ja
pusha
orl
dec
sbb
shlb
pop
cli
jns
jp
shlb
lods
div
sbb
adc
shrl
cs
dec
and
data16
cmpsl
adc
pop
or
dec
test
lock
insl
scas
pop
outsb
dec
xchg
std
push
cli
inc
adc
push
dec
ds
les
mov
push
les
shl
aas
pop
sbb
test
daa
mov
call
in
sub
jo
out
repz
pop
adc
xor
int
cli
push
push
push
mov
jb
mov
jb
jge
shl
scas
hlt
in
inc
flds
inc
push
shrb
hlt
test
push
xchg
dec
dec
test
jmp
fcmovu
push
or
addb
lods
sbb
jmp
add
dec
mov
mov
fisubrs
call
push
test
insb
fisttps
sub
shr
movsb
sbbb
aaa
pop
sub
push
cmc
add
mov
push
bound
pop
push
mov
stos
fdivp
jmp
test
lahf
sub
mov
xchg
scas
addr16
test
pop
cltd
mov
notb
aas
push
data16
cmp
mov
scas
sbb
pop
mov
lods
outsl
mov
shrl
shrl
les
jecxz
push
and
daa
xorl
jbe
and
pop
outsb
mov
lahf
pop
fildll
cwtl
mov
hlt
mov
xchg
xchg
fstpl
lret
incb
sbb
cmp
std
xor
pop
arpl
mov
push
add
pop
inc
popa
and
ret
out
or
jg
cmp
lods
push
add
inc
xchg
stos
push
mov
flds
aaa
push
dec
pop
orl
shll
or
test
inc
loopne
std
cmp
add
orb
ror
je
scas
fistps
cmp
sahf
mov
addl
push
jg
test
cli
mov
mov
mov
mov
cld
mov
test
test
and
into
pusha
stos
in
or
mov
or
mov
or
fisubs
call
in
mov
mov
pop
or
mov
les
mov
out
les
arpl
out
xchg
cmpb
test
ret
mov
xchg
xchg
adc
out
jmp
mov
outsl
jbe
icebp
cli
aad
sub
or
insb
repz
inc
cmpsb
mov
mov
dec
mov
cmp
call
mov
aaa
cmpsl
adc
imul
notb
mov
int3
es
fucomip
mov
inc
jno
test
test
cwtl
dec
fisubrs
push
sub
mov
popf
outsl
add
flds
fstps
push
push
ds
in
repz
std
sbb
add
mov
sbb
mov
sub
xor
push
mov
repz
inc
fwait
out
aad
popf
mov
mov
ret
mov
in
push
movsl
and
loop
push
mov
mov
sarb
mov
test
xor
mov
lea
div
jmp
mov
push
mov
jmp
sbb
mov
push
dec
fmulp
je
and
xchg
pop
dec
idivb
add
divl
mov
mov
mov
cmp
jge
cmp
fcmovb
jle
xchg
push
xor
push
data16
pop
mov
outsb
pop
or
outsl
jns
lods
cmpb
scas
mov
pop
imul
mov
stos
popf
aaa
hlt
test
jb
movl
nop
jg
pop
adc
icebp
rol
push
jns
in
aam
or
mov
ret
lea
jp
imul
mov
xor
push
or
or
mov
ret
ja
pop
idiv
rcll
fsubp
add
lods
sarb
pusha
push
shufps
xchg
jbe
idivl
orl
mov
ret
shl
ljmp
or
lock
dec
xchg
int3
je
sbb
fisubrs
and
pusha
jnp
test
inc
dec
repnz
ss
pop
adc
adc
icebp
cmpsb
shll
dec
cmpsb
imul
cmpsl
dec
push
lock
das
popf
ud2
add
pushl
xor
mov
dec
ficoms
cs
aam
mov
and
xor
lahf
xchg
push
lds
iret
outsl
scas
aas
pop
sbb
mov
aam
arpl
lock
mov
arpl
dec
mov
xorl
or
les
inc
sub
sbb
loop
lods
inc
adc
out
cmc
das
cmc
dec
sbb
mov
xchg
cld
cmpl
aad
fsubr
cld
and
mov
and
sub
cld
add
aam
inc
jae
add
jne
pushf
in
test
mov
cmpsl
stc
imul
xchg
push
nop
mov
cmp
mov
test
lds
mov
rolb
adc
push
lock
rclb
inc
add
jo
pusha
pcmpeqw
loope
je
or
xlat
fcoms
jg
or
or
pop
push
gs
imul
sub
gs
scas
repnz
and
and
inc
ret
jne
jecxz
test
int
push
or
inc
in
mov
push
dec
iret
pushf
cmp
push
inc
mov
repnz
jmp
lcall
xor
data16
sbb
outsb
dec
inc
incl
or
test
cmp
popf
das
jmp
cmp
or
xchg
cmp
movsb
push
cmp
ja
mov
nop
iret
orb
in
gs
sub
add
insb
xchg
cmc
movsl
pop
lcall
xlat
popa
pop
add
or
repnz
xlat
cmp
dec
call
das
ret
sbb
and
cwtl
sti
jg
ds
and
test
daa
insl
or
adc
ret
sub
leave
xor
sbb
incb
lahf
sub
repz
jnp
cmp
cmp
std
lret
jbe
inc
icebp
enter
sbb
push
stos
sub
ret
adc
imul
mov
leave
cwtl
inc
xor
dec
ljmp
dec
mov
pop
push
rcll
cmp
jge
addr16
insl
pop
mov
xchg
pop
dec
xchg
leave
loopw
cmpsl
ficoml
xchg
outsb
dec
inc
pop
mov
loope
loope
fs
mov
insl
daa
mov
loopne
sub
stc
sub
imulb
push
sbb
pop
cmp
mov
xchg
mov
pop
hlt
das
and
rolb
mov
ret
adc
shr
cs
jbe
xor
ss
je
movsb
mov
aad
jge
ss
sbb
and
mov
lret
fs
mov
ljmp
xor
xor
aam
inc
mov
add
insl
push
scas
push
lds
insl
push
imul
pop
inc
pop
sti
popf
jge
add
stos
and
inc
sbb
aas
stos
mov
loop
mov
sbb
clc
inc
shrb
mov
dec
arpl
lahf
or
dec
mov
lea
mov
aaa
ja
or
push
pop
lods
hlt
jne
gs
push
xchg
xor
mov
mov
pop
lahf
popa
mov
sbb
push
xlat
push
test
jae
inc
arpl
out
je
cmp
or
test
xor
fisttps
dec
popf
inc
in
rcrl
test
xchg
xorb
dec
push
imul
cltd
insb
mov
icebp
adc
arpl
sti
enter
inc
sub
push
mov
xchg
inc
sbb
inc
push
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
movl
mov
sub
push
sbb
movl
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
push
addl
mov
xor
orl
push
mov
decl
add
sbbl
mov
mov
addl
test
movl
je
mov
and
mov
addl
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
xor
andl
add
mov
mov
xor
or
sub
imul
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
and
add
andl
mov
xor
mov
add
xor
add
sub
mov
mov
sub
xor
add
neg
mov
sub
lea
xor
xor
cmp
movl
je
mov
xor
movl
add
cmp
jne
pushl
orl
call
movzbl
add
mov
movzbl
xor
mov
add
mov
xor
add
cmp
movl
je
pushl
andl
pushl
xorl
call
mov
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
xor
or
dec
mov
jmp
mov
xor
incl
add
movl
cmp
movl
je
mov
mov
mov
mov
inc
mov
subl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
jmp
mov
adc
mov
sbb
mov
xorl
add
dec
mov
sbb
mov
or
mov
xorl
add
movl
mov
movl
jmp
mov
mov
add
orl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
jmp
lret
sbb
ja
mov
sbb
mov
dec
mov
add
jb
pop
jb
cmp
loop
jbe
scas
pusha
jb
movsb
std
inc
push
bound
fidivl
mov
add
popf
xchg
xchg
pop
xchg
insl
testb
jmp
xchg
cmp
das
divl
add
push
pop
std
adc
jge
dec
adc
add
push
and
ja
mov
mov
incl
cmc
aaa
mov
pop
mov
pop
dec
dec
mov
ds
sub
shll
fdivr
push
push
shl
or
pop
mov
xor
popa
jmp
rcr
xlat
sub
push
jp
pop
rcll
xor
mov
mov
adc
lret
pop
dec
movsl
icebp
ret
cmp
mulb
movsl
sbb
add
jno
xchg
xchg
jo
sti
xor
mov
mov
sbb
int
push
jmp
mov
lods
sbb
enter
hlt
aas
add
lods
and
in
pop
cmc
mov
adc
cs
add
dec
dec
push
pop
xor
lods
pop
loopne
andl
popf
lds
ss
ret
adc
push
add
mov
dec
xchg
or
or
sbb
lret
fdivl
sbb
adcl
push
dec
sti
inc
mov
inc
cmpsl
popa
push
out
dec
in
adc
cmpsb
push
arpl
repnz
cmc
lock
jne
dec
xchg
movsl
push
mov
cmpsb
add
push
stos
jecxz
adc
lea
mov
cmp
add
stos
inc
mov
jns
and
mov
int3
sbb
clc
mov
in
mov
dec
dec
loope
ss
cwtl
addb
inc
loop
fnstenv
movsl
scas
adc
ret
leave
jmp
or
test
push
icebp
mov
nop
fbld
push
js
loop
xchg
sbb
js
fs
mov
add
jp
xchg
push
mov
xchg
icebp
sbb
je
daa
dec
lcall
out
push
scas
push
je
ret
rcl
imul
insb
mov
test
icebp
mov
pop
adc
mov
leave
fistpll
jbe
push
sbb
in
aam
fcmovu
gs
sbb
dec
sbb
in
jae
pop
daa
xchg
dec
fsubr
in
push
mov
insl
pop
rcr
fdivr
xor
arpl
aas
inc
lods
sbb
fs
lret
inc
dec
in
ds
add
mov
popa
xor
dec
push
ds
movsl
insl
push
sbb
out
cmp
rep
popf
jp
xor
fldcw
stos
lods
push
or
jbe
pop
mov
hlt
mulps
ss
cmp
dec
sub
adc
pop
dec
rcl
daa
mov
sub
out
xor
mov
mov
pop
shl
ret
insb
lret
stos
cmpsl
pushf
add
xchg
cmp
mov
jae
pop
add
xchg
cs
and
mov
or
sbb
mov
aaa
arpl
inc
dec
loopne
sarl
loopne
aaa
add
in
repz
shlb
imul
dec
sar
cmp
xor
pop
and
fs
decb
rorw
out
aam
cmp
decb
je
jmp
sbb
fbstp
push
mov
push
repnz
inc
or
cmp
sbb
adc
lods
andl
mov
or
lds
xor
push
dec
shlb
sub
jne
cmp
sbb
movsb
adc
adc
dec
fistpll
pop
xor
push
pop
ss
pop
mov
shll
icebp
dec
out
jecxz
jne
outsb
xchg
dec
fidivrs
cmp
pop
xchg
divb
jnp
sbb
pop
jp
addr16
xchg
xor
add
mov
insl
mov
daa
jmp
outsb
pop
inc
icebp
fwait
mov
das
and
pop
push
rcrl
cmpsb
inc
repnz
and
dec
mov
shr
sbb
push
fwait
sbb
or
add
andl
movl
and
in
incl
imul
sbb
subl
xor
rcll
pop
jg
in
call
push
les
adc
cmp
inc
cs
loope
nop
mov
sbb
lds
mov
add
lcall
bound
sub
cmovb
or
repz
aad
outsb
adc
loope
mov
jb
fisubrs
shl
repz
mov
cwtl
pop
lock
xor
inc
cld
sbb
add
hlt
cmp
test
adc
rol
js
out
adc
push
and
cmp
mov
ds
push
or
mov
inc
push
aad
and
iret
dec
adc
movsl
mov
outsb
jne
ret
mov
mov
dec
and
dec
or
xlat
xchg
cwtl
mov
mov
cmpsb
addl
popa
xor
icebp
xchg
adc
data16
pop
clc
dec
push
push
addl
pop
std
jmp
inc
fwait
enter
adc
fwait
dec
adc
js
pop
mov
pusha
sbb
jle
int
dec
stc
xor
int3
test
pop
mov
push
push
fimull
mov
mov
ja
pusha
dec
xchg
es
and
cmpsb
daa
xchg
repnz
pop
pushw
addr16
dec
mov
mov
into
sti
in
shll
mov
jecxz
jp
cmova
gs
es
push
xchg
push
clc
shl
rcl
sub
push
ficoml
or
mov
test
lods
push
pop
push
lea
push
and
loopne
incb
sbb
xor
addb
sbb
shll
jl
cmp
sbb
push
xchg
inc
pop
imull
mov
pop
sub
mov
fnstenv
icebp
in
fistpl
addb
dec
enter
push
popa
ljmp
adc
jbe
push
dec
or
hlt
mov
sub
jg
dec
scas
repnz
cli
mov
push
testl
imul
dec
fnstcw
push
scas
mov
fstps
sbb
xchg
jb
out
cmpsb
test
inc
repz
rcr
jle
stos
das
and
cmpsl
and
sbb
stc
loope
xchg
js
jns
add
insb
outsl
xor
sub
push
lret
fcmovnbe
sbb
jg
rclb
clc
mov
and
push
in
and
lret
push
jnp
add
int
mov
adc
adc
divb
dec
push
ss
pusha
int3
ljmp
stos
sub
daa
sbbl
inc
in
mov
stc
sbb
cld
mov
sbb
jmp
xlat
cmp
icebp
sti
dec
pop
sbb
add
fwait
push
pop
out
inc
sbb
shll
jns
or
inc
dec
lock
mov
jge
pushf
pop
adc
fcmove
hlt
cmpl
addr16
mov
loope
cmp
mov
add
in
cltd
push
inc
popf
inc
inc
int3
imul
dec
push
mov
and
adc
push
mov
push
xchg
in
sbb
adc
std
mov
sbb
pop
shll
test
mov
add
jle
lea
push
movsl
push
mov
mov
ljmp
loopne
sub
repnz
mov
sub
xor
inc
adc
fcoml
xchg
bound
adc
in
into
mov
adcl
cs
mov
fcoml
in
aam
enter
bound
dec
adc
call
jnp
and
push
mov
sub
rorl
inc
xor
bound
jg
cmp
cltd
mov
addr16
sub
sbbb
sbb
jne
lahf
fidivl
std
movsb
xchg
xor
mov
pop
rolb
flds
sbb
test
cmc
shrb
sbb
mov
dec
xor
outsl
daa
ret
jl
mov
or
cs
loopne
fwait
mov
call
xor
cmp
push
push
adc
scas
sub
sbb
sbb
fadd
cmc
pop
mov
mov
shlb
push
adc
mov
lahf
jl
subb
adc
sub
iret
int3
call
stc
push
cltd
sbb
cmp
or
add
push
dec
lea
sahf
je
inc
cmp
jmp
scas
jae
ret
mov
jle
inc
scas
xor
adc
xor
call
inc
daa
xchg
xchg
adc
sbb
sbb
push
adc
sbb
daa
push
lahf
mov
int
mov
dec
add
test
pusha
loop
std
sbb
inc
or
movsb
cmp
dec
shlb
dec
sahf
xchg
leave
pop
imul
fcmovnb
ret
je
scas
ja
pushf
movntq
mov
xor
and
xor
push
aas
jnp
nop
dec
mov
add
aas
push
andb
mov
add
mov
xchg
fcmovne
jl
add
cli
jbe,pn
mov
xlat
pop
and
lods
jl
imul
push
cmpl
and
sahf
js
clc
xor
subb
mov
arpl
imul
sbb
testl
dec
push
mov
jae
and
andl
icebp
fisubs
mov
cs
mov
into
lahf
das
rclb
add
sub
or
ficoml
inc
fs
add
scas
ret
mov
nop
jne
rcl
dec
jae
out
mov
aas
movsl
fs
xchg
adc
std
xor
lock
mov
lods
xchg
cmp
data16
pop
int3
mov
cmp
adc
repz
push
xchg
pop
cmp
ja
add
popa
add
mov
and
push
lahf
pop
outsb
xchg
xor
xchg
loop
jge
insb
cmp
mov
inc
mov
adc
adc
xor
and
sub
mov
mov
inc
in
cmp
jne
loop
imul
push
lret
repnz
sbb
hlt
jo
pushf
test
lea
or
shl
clc
stc
stos
adc
cli
inc
inc
pop
cmc
dec
gs
scas
mov
test
jg
push
inc
mov
jmp
sub
push
jae
mov
push
shl
jmp
movsb
fwait
les
cli
mov
pop
movsl
fnstenv
pop
cmp
xchg
popf
pop
xchg
cs
push
lret
mov
xor
add
lret
add
dec
inc
orl
repz
inc
mov
mov
or
std
aam
shr
aaa
test
aad
dec
jno
pushf
mov
xlat
cmp
hlt
out
mov
xor
lods
out
stos
push
or
enter
jp
cmp
or
inc
shrl
add
jmp
mov
sub
insl
xor
addb
mov
xchg
out
mov
adc
movsb
mov
push
sub
ja
mov
dec
jae
dec
addr16
aam
and
das
sub
les
and
pop
pop
loope
push
mov
out
das
sub
or
inc
jo
dec
jnp
push
mov
incw
movsb
stos
sub
mov
fs
fs
loop
xchg
cmp
mov
xchg
insl
daa
sbb
sub
sahf
lcall
fiadds
loop
cltd
scas
pop
das
loop
push
inc
cmp
sub
xor
icebp
inc
aaa
pop
arpl
andb
cs
in
in
cmpsl
movsb
fists
lock
mov
jmp
add
icebp
or
mov
jnp
dec
cmc
jb
int3
fcomps
and
movsb
inc
adc
sub
lods
inc
jl
push
test
sti
cmp
popa
mov
and
cwtl
insb
flds
mov
movsb
push
jge
enter
and
pop
loope
mov
scas
sbb
out
iret
popa
pushf
pop
xor
stos
stc
sbbb
cmp
pop
cld
mul
insl
imull
cli
ficomps
nop
lretw
and
jae
pop
jp
dec
pop
cmpl
cmp
mov
outsl
clc
mov
repz
or
and
add
xlat
and
push
push
pop
pusha
jnp
inc
imul
push
out
xor
mov
ljmp
or
insb
xchg
mov
xchg
sbb
out
cmpsl
repnz
jbe
jns
orb
test
adcb
icebp
jo
mov
xchg
mov
loop
inc
mov
mov
cmp
cmp
lret
push
das
mov
xchg
pop
mov
fdiv
lock
jns,pn
mov
xchg
rorb
or
shll
dec
gs
mov
dec
mov
in
pop
mov
adc
push
lret
addr16
cmp
lret
mov
pop
insl
rorb
jmp
inc
sbb
and
xlat
leave
lea
mov
ror
or
fwait
push
cwtl
hlt
movsb
sets
lret
mov
gs
sub
xor
cs
out
pop
lea
mov
ljmp
and
fcmovne
imulb
mov
out
or
rorb
fcompl
fwait
inc
clc
push
clc
add
ror
add
xchg
repz
jl
jns
lahf
loop
mov
cwtl
aad
sbb
scas
std
dec
in
mov
iret
ret
inc
xlat
mov
addr16
scas
mov
push
enter
insl
add
mov
daa
inc
xor
sbb
mov
outsb
or
and
into
or
outsl
dec
and
xor
pop
mov
cmp
mov
movsb
outsl
sti
arpl
pop
inc
jae
fcompl
je
xor
cmp
shrb
mov
adc
fiadds
nop
add
repnz
xor
cmp
sbb
cltd
daa
mov
push
xchg
les
popf
or
ficoml
aaa
xor
pushf
add
inc
pop
mov
sbb
mov
and
lds
jnp
xorl
jecxz
lcall
push
fisttpl
les
jge
mov
jns
cmp
out
mov
pop
inc
dec
decl
lock
fsubp
inc
xchg
adcb
cmpsb
or
or
push
cltd
cmp
sub
add
ljmp
sbb
mov
les
sub
fisubs
mov
add
sub
addb
cli
stc
inc
adc
adc
std
stos
idivl
cmc
mov
in
push
ret
cmp
xchg
adc
inc
mov
sub
mov
dec
data16
jmp
push
shll
sub
mov
mov
cmc
xor
dec
lea
jge
daa
pop
adc
jl
xchg
jo
cmpsb
cmp
ret
xchg
shlb
xchg
adc
fwait
xor
sub
push
dec
push
xchg
adc
mov
mov
sub
pop
aam
lock
push
loopne
sahf
fs
out
or
jnp
sbb
pop
xorl
adc
orb
xor
cwtl
add
jae
es
dec
mov
test
push
sarl
or
xor
and
ja
xor
stos
cli
cmc
je
sbb
sub
cmc
loop
mov
popf
repz
xchg
inc
jo
das
and
fsubs
push
mov
scas
mov
adc
hlt
js
jno
enter
inc
clc
add
lcall
or
insl
inc
dec
mov
loop
sti
mov
xor
ficomps
lock
in
cmpsl
popf
test
or
repz
dec
leave
push
adc
stc
ss
out
aas
pusha
call
ret
jae
stc
adc
mov
aad
imull
loope
pop
and
jg
dec
jecxz
aam
lods
sbb
int
dec
xor
fstl
int3
or
mov
movsb
aad
dec
es
out
xlat
lods
les
mov
in
imul
jo
xchg
insb
sbb
inc
adc
mov
pop
xor
les
sbb
pop
sub
jmp
scas
pop
mov
mov
leave
cmpsb
mov
adc
mov
xlat
cmp
xchg
or
bound
lahf
jno
dec
aaa
mov
out
aaa
push
jnp
dec
cmp
adc
jb
ss
mov
mov
pop
stc
or
and
cmp
negl
and
dec
mov
dec
adc
mov
mov
pop
lret
sub
inc
daa
std
sar
iret
push
loope
mov
sbb
loopne
adc
das
in
jbe
je
iret
out
fmuls
push
loope
int
mov
hlt
sti
xchg
lret
mov
sbb
out
add
idivb
sub
xchg
adc
and
aam
xorl
sbb
cmp
jb
leave
iret
ret
out
fwait
arpl
mov
push
shr
in
stos
and
bound
out
sbb
mov
fwait
cltd
inc
lcall
push
jbe
sub
cmc
push
sub
je
pop
fs
loop
mov
fstps
inc
adc
pop
dec
imul
mov
jmp
jb
mov
clc
jl
dec
in
mov
in
ss
cmp
cmp
sub
or
xorb
and
cwtl
mov
xchg
lods
hlt
inc
cmc
int3
sbb
aas
mov
fbstp
ja
dec
push
pusha
test
lds
push
lds
and
mov
sbb
lds
add
jae
mov
testb
mov
std
int3
add
dec
adc
pop
dec
rcrb
repz
into
sbb
xor
lahf
pushaw
cwtl
cmp
mov
js
dec
xor
pop
push
aad
or
cli
daa
xchg
aad
sub
push
call
cmc
and
jmp
cmc
iret
dec
loopne
jge
sbb
shll
pop
xchg
test
cmp
fisttpll
inc
enter
ja
movl
lds
xlat
lcall
pop
dec
hlt
inc
pop
clc
arpl
xor
xor
imul
push
xchg
adc
sub
data16
cltd
push
jno
lods
aam
adc
daa
xor
and
and
mov
sarb
dec
pop
lret
popf
mov
shrb
outsl
dec
jp
mov
test
adc
movsl
sub
clc
jnp
iret
mov
sbb
sbb
movsl
out
test
add
in
ljmp
cmp
dec
cmp
fisttps
loope
addr16
rorb
into
imul
lock
les
jge
dec
xchg
adcb
fistl
jmp
cmp
xor
push
cltd
push
xchg
dec
mov
dec
cmp
repnz
movsl
xchg
pop
add
cmp
jne
mov
movsb
mov
fidivrs
hlt
ret
mov
stos
ror
jmp
dec
test
mov
mov
cmp
sbb
cmp
push
mov
rclb
jbe
in
push
and
dec
lahf
dec
jle,pn
adc
icebp
xor
xchg
inc
sbb
repnz
std
sbb
mov
ret
jmp
sbb
fadd
popf
add
mov
cld
sar
repnz
popa
mov
mov
or
ret
fs
idivb
or
push
shr
out
jb
dec
sub
xchg
inc
mov
sti
stc
pusha
shl
jno
aas
ret
mov
mov
pop
or
outsl
aas
sbb
inc
jp
xor
sub
insl
lock
repnz
xor
xor
repnz
sub
or
xchg
sbb
jp
loop
pop
ja
lds
stc
enter
pusha
mov
mov
inc
inc
notl
and
into
cmpsb
jl
mov
insb
pop
insb
dec
mov
insl
rcll
addl
mov
aaa
sarl
sub
iret
fsts
lahf
sldt
cmp
inc
pop
adc
cmc
test
mov
mov
mov
push
lea
jbe
rorb
test
push
shrl
jg
xor
pusha
movsb
mov
jmp
flds
fs
repnz
mov
or
pop
pop
je
push
jmp
sahf
sbb
rorl
xchg
or
adc
pop
andl
addl
into
push
je
push
fucomi
mov
cmp
mov
push
ret
movsb
push
jp
test
or
daa
mov
adc
mov
add
xor
aaa
push
lahf
je
gs
jmp
adc
push
jne
adc
push
add
int
dec
add
jmp
push
loopne
repz
pop
mov
push
adc
mov
vsqrtpd
jge
jmp
mov
popl
and
add
rol
fcoml
popa
scas
insb
xor
cmpsb
or
ret
pusha
cld
jns
test
data16
and
pop
xchg
imul
das
iret
hlt
ror
pop
stc
dec
lock
cmc
pop
cmp
add
ret
add
push
sbb
and
pop
or
leave
xlat
cwtl
nop
pop
mov
pop
add
xchg
pop
dec
loopne
adc
test
adc
mov
adc
orl
jg
cmc
xchg
and
cmp
je
popa
mov
push
sub
or
lret
push
sub
shrb
jbe
shll
aas
push
cmpsl
xchg
std
fisttps
xchg
mov
cmpsl
iret
jg
inc
adc
das
ja
test
sti
xor
fcomi
push
js
xor
in
fcomps
add
xchg
cmc
mov
mov
int
test
fwait
mov
stos
outsb
movsl
sbb
pop
mov
and
orl
inc
test
mov
push
adc
push
fildll
cmp
mov
xchg
in
shll
ret
pusha
cwtl
jle
loopne
addr16
imul
push
popf
and
dec
inc
stos
xor
scas
jno
jnp
in
dec
loop
sub
xchg
lea
cmp
lock
mov
pop
push
jge
movsb
and
in
aam
pop
js
stos
sahf
loopne
aad
push
adc
adc
adc
in
inc
ds
les
mov
mov
les
jae
mov
into
sub
int
fidivrl
scas
insl
push
insl
enter
out
into
cmpsb
cs
sbb
or
fdivrp
jg
mov
inc
push
popa
inc
jmp
in
inc
popf
mov
cmpsb
jp
addl
in
lds
or
add
inc
insb
je
mov
jmp
inc
xchg
in
fstpl
int3
mov
cmp
xchg
inc
mov
addr16
das
fwait
imul
neg
mov
fldt
or
jmp
add
push
cmc
inc
push
adcb
sub
and
jns
xor
insb
out
push
push
push
mov
enter
inc
cmpsl
sti
in
neg
cltd
arpl
cmp
popf
sahf
in
in
xorl
sub
adc
mov
xor
mov
sbb
imul
out
sub
and
ljmp
cmp
pmullw
nop
cli
cmp
cmpsl
aam
or
testb
sub
mov
pop
sbb
es
xor
adc
sbb
aas
stos
add
imul
aad
iret
sahf
add
int3
xchg
out
ficoms
push
jg
fidivl
shr
and
data16
in
inc
hlt
xor
lret
push
out
shlb
imul
xlat
mov
pop
ljmp
add
inc
data16
fsts
mov
popf
push
xchg
insl
stc
shlb
daa
pusha
adc
call
or
pop
xchg
lahf
leave
jg
or
adc
icebp
adc
push
sbb
imul
sub
jmp
xchg
xchg
jnp
fiadds
gs
mov
cmp
ja,pt
jmp
imull
lea
xor
test
jns
cmp
and
sbb
lcall
mov
adc
aad
mov
jb
push
mov
cmpsl
fdivrl
ds
rcrl
out
mov
cmp
push
repz
adc
lods
nop
mov
sbb
addr16
fwait
imul
test
add
add
jl
and
adc
jecxz
cmpsb
mov
or
cli
jns
call
push
push
add
stos
pop
and
add
sub
jp
mov
into
into
lds
push
dec
clc
mov
test
adc
shrb
jb
add
mov
fsubp
cmp
out
pop
sbb
sbb
cmp
je
jg
push
int
pop
cmp
mov
loope
xor
imul
jbe
cmpsb
lods
add
in
pop
ss
dec
cmpsb
push
cld
sub
jmp
popa
lcall
dec
sbb
xchg
push
inc
sbb
rolb
cld
out
pop
adc
icebp
jb
bound
sahf
out
leave
xchg
jo
scas
xor
mov
inc
or
fldcw
mov
scas
adc
dec
mov
mov
mov
jle
dec
cmpl
aas
test
pop
sarl
xchg
sbb
dec
and
shrl
mov
cmp
movsb
sarb
ds
pop
addb
dec
cltd
test
fnstsw
and
ret
sbb
xchg
pusha
mov
sti
testb
rorb
inc
pop
shll
mov
cmp
insb
addl
movsl
push
outsb
fsubs
test
jl
cmpsb
and
in
bnd
fdivl
andb
mov
les
pop
lods
cli
repnz
jg
hlt
icebp
loop
outsb
ret
xchg
sbb
jge
push
and
shlb
mov
inc
mov
cli
into
in
cmp
stos
xor
shlb
aaa
lea
sbb
add
xor
jne
xchg
stos
fisttpll
in
ljmp
bswap
mov
cli
test
sbb
movsl
mov
push
mov
push
inc
gs
cmpsb
and
pop
xor
mov
inc
rcrb
scas
aad
lock
call
imul
mov
leave
xor
jg
rcrb
arpl
jbe
leave
cmp
loopne
jno
ss
sub
jb
add
test
jp
outsb
out
leave
xor
mov
mov
adcb
aad
mov
xor
mov
call
pop
jne
lock
push
push
push
mov
nop
orb
pop
sarb
or
fdivrs
sbb
cmp
test
ss
insb
push
cld
ret
lret
stos
test
sbb
dec
lcall
mov
dec
jg
fcomps
jecxz
sub
sahf
fistl
stos
js
and
push
mov
cltd
insb
shrb
ljmp
test
test
inc
or
pop
cwtl
aad
stos
xchg
stc
cwtl
test
popa
lods
hlt
ja
rorl
sbb
adc
adcl
orl
loope
mov
ss
fisttps
xlat
jno
fwait
inc
and
inc
repnz
rcll
test
or
cmp
mov
xor
repnz
mov
outsl
aad
bound
pop
or
xor
xchg
lock
and
push
sub
test
pop
fwait
and
cmpl
rol
sub
insl
push
aas
test
and
test
std
or
jmp
movsb
cmp
adc
rol
lods
push
shr
sarb
cmpsb
cmp
mov
cmpsb
inc
dec
fwait
popl
js
in
aas
sbb
cltd
sbb
sahf
sbb
jecxz
sbb
es
cmp
mov
call
xor
leave
jecxz
test
mov
jle
mov
cmp
mov
rclb
jne
jnp
outsb
frstor
adc
addr16
and
add
jl
or
mov
mov
movsl
push
adc
xchg
fucomp
enter
mov
sti
mov
xchg
ss
push
add
add
in
repz
xchg
jp
cwtl
xor
dec
cmp
xor
loopne
pop
pop
mov
bound
stos
je
or
mov
lea
loop
adc
mul
test
mov
outsb
inc
lret
jb
adc
gs
sub
lock
jle
in
dec
cs
cli
jge
enter
mov
xchg
sub
in
mov
orb
mov
stos
pop
sbb
push
xchg
dec
xchg
iret
jbe
mov
jp
mov
enter
mov
jmp
repnz
jecxz
jle
and
push
scas
adc
sbb
out
repz
lock
push
mov
int
bound
cs
push
jne
pushf
xor
push
inc
inc
pop
hlt
cs
sbb
xchg
sub
jmp
xchg
push
fildl
jno
and
movsl
ja
ljmp
add
std
jle
mov
insl
ror
loop
pop
or
dec
mov
inc
jne
arpl
enter
push
pop
cmpl
jne
adc
repz
cmpsb
out
mov
lock
dec
sbb
inc
insl
je
ds
pop
int3
aas
cmpb
xorl
shr
adc
rcr
iret
push
sbb
aas
and
sbb
inc
pop
mov
sbb
sahf
inc
jnp
cs
leave
mov
sub
in
inc
add
les
stos
stos
pop
mov
outsl
adc
cs
mov
sbb
adc
test
orl
push
lods
add
imul
add
xor
in
inc
inc
mov
mov
lret
push
cmp
cwtl
iret
mov
push
dec
mov
fcmovne
int
sahf
rolb
or
ja
repz
sbb
nop
or
and
fs
xor
daa
xor
js
sbb
xchg
pushf
call
and
loope
lret
mov
nop
leave
jg
enter
clc
aam
push
iret
aas
stc
sub
test
rcl
adc
and
xor
cwtl
adc
push
nop
aad
pop
in
mov
mov
sbb
fstl
shl
adc
insb
mov
adc
cmp
and
dec
adc
int
es
sub
shlb
mov
mov
enter
call
mov
insl
add
fiaddl
pop
aaa
mov
push
mov
xor
lahf
lods
sbb
jl
sahf
stos
jb
mov
andb
subl
jno
xchg
fstl
jg
and
push
dec
scas
in
icebp
xlat
xchg
push
mov
imulb
push
mov
jmp
rol
push
loope
add
adc
mov
add
pop
mov
sub
fiaddl
rcrl
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
jmp
xchg
cli
testl
jae
adc
or
jb
out
cmp
js
clc
movsb
jl
or
sahf
cmp
sbb
pop
jb
sbb
xor
das
inc
rcrl
jb
jb
neg
out
cmovs
xor
sahf
add
nop
xlat
jmp
jle
cmpsb
addr16
lret
cmpsb
jbe
clc
mov
mov
xchg
ljmp
jno
mov
addb
push
mov
mov
xlat
leave
pop
fdivs
outsb
or
scas
cmp
aaa
int
pop
or
or
pop
jnp
dec
loopne
popf
mov
add
repnz
jl
and
xchg
mov
dec
sub
rcl
stos
lret
mov
movsl
sahf
lods
mov
push
and
dec
push
inc
aam
xchg
mov
std
loope
psubsw
jmp
fsub
xchg
sbb
mov
stos
leave
aaa
cltd
sti
mov
outsb
es
cmp
or
mov
push
pop
in
mov
ss
out
sbb
inc
push
fnstenv
adc
mov
and
cltd
call
cs
in
add
jbe
lods
inc
xor
push
movsl
fld1
mov
fdivs
sti
and
pushf
ljmp
mov
push
mov
jne
jle
dec
ret
dec
ret
test
scas
dec
xorl
js
rcrb
je
adc
adc
repz
hlt
lret
stos
dec
inc
cmpsb
ljmp
and
imul
incb
scas
pop
xor
test
jl
scas
push
mov
scas
negb
xor
aas
fiaddl
adc
mov
test
lods
push
mov
jge
mov
adc
gs
mov
xchg
ja
dec
pusha
loope
dec
and
fs
scas
push
and
test
xchg
popf
inc
fcoms
out
mov
push
dec
decb
in
push
sbb
sbb
adc
popa
mov
fs
loopne
or
sti
nop
shlb
cld
or
cs
popa
daa
stc
aas
jge
push
sub
lods
nop
test
add
popa
pop
mov
fsubp
xchg
cmp
stos
xor
in
cmp
lahf
push
xchg
jno
pop
stos
cmp
mov
movsl
mov
xor
es
add
jo
xchg
push
mov
setne
mov
mov
sarb
fidivrl
orb
mov
sub
ljmp
cmp
out
fcomps
lods
mov
jle
loope
jnp
pop
push
mov
rolb
pop
push
lret
mov
out
clc
test
xor
sub
push
fistpll
mov
insl
into
push
lahf
pop
add
imul
or
insl
cmpsb
mov
je
bound
mov
inc
sahf
scas
or
adc
push
pop
mov
or
mov
adc
or
xchg
fcomip
mov
addr16
adc
mov
jns
mov
clc
in
add
neg
sbb
and
add
stos
cli
push
push
mov
cmc
scas
test
ds
hlt
stos
jae
cld
stc
mov
lret
and
mov
stos
imul
jb
repz
stos
jne
add
xchg
out
popa
hlt
mov
ljmp
out
mov
cmc
push
mov
jg
xchg
xchg
scas
arpl
add
push
jl
adc
dec
ficomps
pop
ljmp
pop
dec
add
je
mov
inc
xor
pop
scas
add
or
cmp
sbb
fldcw
xor
pusha
mov
lcall
aas
push
xor
adc
sarl
pop
xchg
out
std
fs
add
cmp
xor
pop
add
enter
xchg
add
xor
ror
jp
rcrb
ljmp
rclb
das
dec
xor
les
pop
mov
mov
jg
out
add
inc
mov
xor
mov
push
and
cmpsl
inc
es
push
dec
jg
cmp
mov
add
and
js
xchg
pop
mov
pushf
repz
in
scas
jno
mov
lea
mov
sbb
ret
pop
fnop
imul
subb
push
stos
jnp
xor
cli
mov
lret
scas
xchg
arpl
xchg
xor
out
or
ret
mov
xchg
jbe
test
jmp
fmul
lds
mov
push
pop
cmpsl
cli
sub
jmp
jmp
push
sbb
call
and
stos
fisttpl
divl
xchg
push
fcomi
jne
ja
bound
or
ds
fnclex
addr16
test
jb
jb
nop
or
cmp
add
mov
dec
dec
in
ljmp
mov
arpl
mov
sub
in
es
xchg
daa
mov
clc
push
adc
addl
cmc
cmp
adc
cmpsb
mov
jmp
das
movntq
mov
cmp
sub
inc
cmp
call
xchg
cmp
pushf
mov
dec
imul
addb
inc
test
mov
pop
xor
lods
sar
clc
sarl
nop
jle
scas
rorl
mov
sbb
lret
js
into
cmp
xchg
pusha
and
dec
pushf
and
mov
and
xchg
pop
sbb
popf
clc
das
add
out
or
mov
dec
push
lahf
lahf
test
je
mov
lods
xchg
mov
loop
add
das
fcmovnbe
pushf
pop
push
movups
fbstp
bound
aam
fstl
scas
or
pavgb
bound
sub
add
ret
cmp
jmp
pop
adc
repz
fstpl
dec
lods
ret
repz
jb
in
shlb
pop
jns
xor
mov
int
add
popa
dec
stos
stos
and
cmc
xchg
fists
jl
sbb
mov
shr
lea
push
inc
cmp
cmp
aaa
xlat
mov
xchg
cmp
mov
cld
gs
addr16
cmpsl
es
movl
fcmovbe
xchg
mov
xchg
data16
test
ds
lods
repz
adcb
jb
lahf
cmp
repnz
cmp
leave
loope
sahf
lret
fs
jne
push
fcoms
xchg
and
mov
sbb
ss
and
int
cmp
call
popa
sahf
mov
popf
in
cmp
adc
loope
jbe
xlat
in
movsb
inc
std
mov
and
pop
pop
and
jne
or
mov
and
aad
aad
pop
inc
or
xor
insl
sbb
sub
out
xor
lods
insl
or
add
ljmp
aad
jg
mov
add
and
lds
pop
out
mov
icebp
cld
shll
adc
push
sbb
mov
divl
cmp
ret
cmp
xor
jle
mov
xor
inc
sub
pop
adc
push
jg
pop
xor
pop
sbb
or
aad
test
hlt
leave
push
int
cmpsl
lods
inc
cmp
outsb
shll
push
ror
cs
pop
inc
pop
or
cmp
mov
mov
fidivrl
rolb
loope
dec
cli
out
daa
mov
gs
into
rcll
adc
cmp
into
jge
out
les
cmpsl
clc
lea
das
fisubs
rcll
pop
dec
lock
add
pop
test
and
js
xchg
push
add
push
or
xchg
push
pop
push
xlat
sbb
je
dec
cmp
sbb
xchg
push
pop
aaa
rcrb
dec
adc
dec
xor
fs
in
scas
lods
rcrl
mov
push
popf
lds
jl
outsl
sbb
out
adc
outsl
sub
cmp
xchg
call
fs
cmp
mov
dec
cwtl
repz
mov
jmp
and
icebp
jne
add
lahf
ss
loop
repz
or
push
popf
mov
xor
dec
negb
iret
fcmovbe
in
push
add
out
pop
push
sub
mov
in
cmp
fcomps
loopne
imul
addr16
gs
sbb
addb
daa
stc
dec
dec
mov
pop
shll
call
mov
into
dec
aas
push
jns
int
and
shld
roll
mov
out
lcall
add
jo
jecxz
jl
mov
mov
pop
popw
fmuls
jge
popf
dec
cld
xorl
push
cmp
mov
pop
adc
imul
add
jmp
enter
call
pop
or
mov
inc
addr16
cmp
xchg
pop
jne
outsl
push
sti
stos
jno
add
pop
in
lcall
jae
inc
mov
es
inc
scas
mov
xchg
stc
cmp
xchg
pop
jmp
mov
cltd
mov
xchg
outsl
cmp
mov
in
aas
lods
in
repnz
sbb
mov
icebp
cltd
lods
std
test
push
lret
jns
test
das
cs
and
mov
inc
outsl
adcb
imul
outsb
in
jnp
scas
jl
icebp
jg
mov
les
ret
repz
sbb
dec
pop
dec
push
cmp
pushw
repz
repz
sti
rorb
scas
dec
icebp
movsl
jl
sub
outsl
push
inc
outsl
hlt
or
xchg
jae
xor
pop
pop
scas
mov
mov
push
mov
jecxz
aaa
lock
addb
push
cmp
xchg
and
add
push
subb
xchg
mov
in
xor
cmp
mov
adc
mov
in
aas
sbb
mov
mov
jno
mov
ficomps
aas
loopne
insb
push
mov
inc
push
fnstenv
addr16
fmull
and
fdivs
and
fs
jbe
xchg
xchg
pop
pusha
push
pop
shl
mov
cwtl
stos
loop
gs
mov
scas
sbb
add
lea
arpl
xchg
mov
jecxz
scas
cmpw
ljmp
lock
addb
sub
dec
mov
mov
jno
xor
cmp
dec
fisubs
cld
adc
sbb
pop
loop
xchg
sub
and
lods
sub
lods
lds
mov
in
lds
mov
lds
clc
jmp
notl
adc
hlt
and
arpl
mov
add
mov
sbb
and
je
aad
cli
fsubs
shl
imul
mov
mov
cmp
enter
into
mov
sub
mov
lcall
imul
jmp
loopne
sarl
xchg
je
or
dec
dec
pop
mov
xchg
dec
mov
bound
jo
dec
push
xchg
jbe
imul
pop
xchg
sub
sbb
jns
test
xor
jae
ljmp
stc
aad
mov
or
pop
jae
cmp
cmp
and
add
pop
and
daa
pop
sti
sub
mov
push
arpl
mov
pop
or
and
xlat
and
inc
add
incb
outsb
je
dec
clc
jl
out
ja
movsl
popf
sti
push
test
sbb
lock
cmpsl
loopne
mov
cli
repz
add
jo
adc
paddw
mov
inc
fcoml
aas
cltd
ror
mov
int
xor
popf
inc
inc
inc
nop
mov
clc
dec
pop
rorb
mov
add
pop
mov
push
lcall
int
add
out
mov
cld
int
shll
push
jnp
fnsave
lock
pop
sub
add
iret
popf
and
nop
or
mov
xchg
inc
mov
leave
sbb
sub
adc
jmp
cwtl
enter
andl
aad
in
leave
push
push
movsb
cmp
mov
lods
test
lahf
xor
lods
push
call
popf
mov
aad
jno
add
stos
int3
mov
jo
mov
mov
std
mov
jb
in
sti
inc
addb
mov
mov
mulb
mov
pxor
rcrb
hlt
outsl
repz
add
sahf
lret
lock
test
dec
shll
mov
stos
addr16
pop
in
outsl
leave
and
inc
mov
test
cld
dec
pop
push
mov
outsl
scas
dec
jl
es
ja
push
xor
stc
and
icebp
mull
jnp
cli
imul
pop
loope
dec
xchg
adc
pop
jmp
aad
adc
fisubrl
add
pop
mov
cmp
cmp
fisttps
bound
test
mov
jp
js
gs
pop
dec
pop
stc
jns
mov
adc
jecxz
pop
add
mov
sbb
decl
sbb
scas
shl
xchg
fsubr
cmpsl
and
dec
lods
mov
mov
std
aas
lods
xchg
pop
test
std
ret
scas
fs
add
or
and
xchg
xchg
mov
push
push
jp
out
adc
adc
aas
cs
in
lock
repnz
fisubl
int
and
stos
repnz
lgs
lods
mov
jmp
mov
push
dec
jp
std
scas
mov
inc
xchg
jne
jmp
addl
mov
sub
addr16
in
sbb
sbb
jo
loopne
sti
xchg
out
xchg
push
js
jg
and
pop
push
sbb
adc
push
js
enter
sbb
inc
out
mov
sub
xchg
stos
les
jbe
xlat
sar
and
std
inc
pavgb
inc
imul
in
xor
int
cmp
adc
mov
cwtl
jnp
pop
popa
movsl
sub
cld
dec
xchg
add
push
cld
shrb
adc
cmp
mov
jne
arpl
arpl
call
fistpl
lods
loopne
jmp
ljmp
sbb
mov
dec
sbb
jecxz
or
and
or
loop
push
xchg
lds
push
aas
lock
arpl
mov
iret
or
popf
js
out
subl
sub
fdivp
adc
stos
add
adc
and
psllw
stos
mov
jl
jb
mov
sbb
xchg
xor
in
lahf
xchg
or
gs
leave
cmp
inc
pop
testb
dec
stc
pop
push
rcrl
inc
inc
loopne
add
cli
dec
negb
arpl
fsubs
push
sub
imull
xchg
xchg
in
stos
in
jae
xchg
shrb
shl
or
pop
mov
lds
out
out
fwait
sbb
mov
push
mov
pop
bnd
xchg
and
pop
push
call
pop
add
push
mov
fnclex
push
pop
pop
and
push
pop
sbb
dec
or
cmpsl
jne
outsl
sub
xchg
addr16
out
and
mov
mov
sub
test
mov
add
push
jbe
mov
xchg
sub
and
negb
inc
popf
jmp
mov
aas
cmc
dec
pop
mov
das
test
xor
aas
pop
xchg
mov
mov
sti
and
xor
xor
mov
push
dec
jp
sbb
dec
cmp
xchg
fmull
push
and
adc
subb
xor
jg
mov
or
xor
js
cld
std
mov
dec
mov
lret
pop
sbb
sbb
push
fwait
adc
inc
mov
imul
mov
and
adcl
bnd
mov
and
add
inc
fimull
jne
and
or
jl
pop
cmp
inc
sbbl
push
fildll
out
loope
push
mov
es
dec
push
xchg
cmp
inc
mov
fsubrs
dec
bound
jmp
mov
mov
dec
xlat
cltd
mov
mov
pusha
stos
testl
sbb
inc
fidivrl
inc
inc
popa
in
ret
sahf
out
xchg
cmp
gs
pop
insl
cmpsl
bound
mov
icebp
in
jnp
inc
ja
xchg
push
fcompl
or
shr
mov
mov
out
xlat
ret
pop
out
rcrb
and
icebp
mov
adc
xchg
jmp
out
jb
fisttpl
cwtl
dec
sbb
test
push
aaa
dec
dec
push
imul
mov
bound
cmc
in
inc
xchg
cs
adc
dec
les
push
jb
es
pop
stc
mov
dec
enter
add
sub
dec
ja
cltd
ljmp
repnz
cmpsb
sbb
pop
push
xchg
adc
pop
aam
jge
ss
pop
push
pusha
pop
cmpsb
cli
pop
movsl
mov
and
shlb
push
sub
dec
sub
jno
cmp
push
push
ja
out
nop
inc
cltd
negb
sbb
jmp
leave
mov
pushf
out
ja
test
movsl
into
in
in
stc
test
imul
cld
aaa
lret
clc
add
in
out
std
shrb
outsl
dec
loope
movsb
push
jo
popf
inc
push
xchg
data16
add
outsb
inc
jo
or
es
mov
adc
cmp
std
mov
gs
pop
xor
incb
inc
mov
cltd
pop
add
jl
dec
xchg
xchg
mov
adc
jg
int
imul
je
jge
daa
xor
mov
lock
shlb
push
mov
jne
add
pop
lret
mov
jp
mull
mov
loopne
mov
loopne
movsb
daa
sar
xor
inc
sahf
adc
mov
push
lea
xchg
push
or
lea
and
popaw
and
mov
pop
out
int3
scas
movsb
test
push
push
cmp
xchg
jae
movl
cld
aas
gs
faddl
es
push
push
dec
xchg
jle
or
fildl
sahf
mov
aad
ljmp
mov
sahf
movsl
fildl
add
sti
xor
mov
sub
sbb
imul
xchg
pushf
xchg
movsl
cmc
fcmovu
stc
sarl
xor
mov
shlb
dec
mov
jno
xor
mov
xor
sub
jmp
divl
xchg
xlat
add
jle
mov
add
cmp
andb
cmpsl
inc
xor
xchg
out
cmp
stc
xchg
fcmovnu
daa
fs
out
dec
or
cmpsb
mov
shlb
add
mov
mov
xchg
mov
fmull
jp
inc
inc
mov
sbb
loope
jp
les
sbb
mov
push
inc
movsl
stos
int
pop
jae
lea
push
lea
cmp
into
fstpt
jno
xchg
jmp
adc
nop
outsb
test
or
inc
jp
sbb
mov
mov
jge
loope
dec
mov
mov
mov
pusha
push
je
test
add
push
or
or
push
test
scas
cmp
cltd
popa
xchg
sub
sub
cmp
dec
movsb
jne
push
ror
lds
push
in
pop
jecxz
push
cwtl
lret
xchg
cmpb
enter
inc
xchg
xor
push
push
jp
mov
jge
dec
jae
xchg
pop
mov
aam
dec
xchg
fdivrl
add
adc
shlb
shrl
pop
loopne
adc
repz
inc
fstpt
xor
jecxz
lret
lret
and
jb
mov
cmc
xchg
lock
or
xchg
int
dec
cmp
or
ret
push
and
mov
pop
push
loopne
movsb
xchg
imulb
repnz
adc
jge
pop
sahf
pop
sub
shll
ds
movb
dec
icebp
and
arpl
loope
cwtl
inc
sti
sub
movsl
lret
xor
adc
mov
cs
mov
sbb
jl
cs
xchg
pushf
pop
lret
lods
mov
cmp
cli
es
int3
cld
sub
xchg
and
dec
sub
cmpsl
stc
push
fdivrp
cltd
sbb
fcompp
mov
add
add
dec
sahf
outsb
ja
pusha
sbb
lods
fwait
jg
dec
push
sub
xchg
pop
sbb
clc
adc
mull
mov
jno
xchg
jle
stc
sub
dec
out
pop
lret
ds
movsb
pop
test
and
ficoml
leave
cmp
clc
xor
push
inc
outsb
sbb
adc
loop
popa
int3
dec
or
sub
push
push
out
das
xchg
icebp
pop
int
lahf
lds
sub
or
and
dec
add
jo
cmpsl
mov
cmp
sbb
xchg
dec
adc
test
sbb
mov
js
jne
addb
mov
aam
adcb
repnz
inc
scas
mov
ljmp
cld
fldl2t
xor
pop
int3
add
xor
mov
dec
out
sarb
shrb
add
push
mov
fldcw
jno
mov
orb
cs
pop
aam
xchg
xor
mov
mov
lret
push
sti
fstpl
mov
hlt
pop
xor
je
push
jnp
in
jmp
cmp
sbb
pop
mov
xor
cwtl
stc
inc
sbb
sub
stos
pop
inc
mov
lahf
data16
fbstp
push
sbb
xor
fwait
mov
int
xor
test
leave
cmp
pop
shll
pop
jo
lock
jp
pop
loope
fucomi
xor
push
add
xchg
push
add
inc
movsb
ljmp
scas
jge
lret
addr16
sahf
fldl
stos
call
std
pushf
push
xor
lock
jne
jnp
mov
push
mov
and
or
or
movsb
mov
push
dec
jbe
sub
std
fldenv
cmp
adc
in
in
add
push
push
rclb
or
js
cld
cltd
inc
sahf
xchg
add
mov
call
xor
lods
push
es
mov
mov
sub
mov
xor
jo
mov
add
pop
in
add
daa
inc
scas
gs
sub
hlt
pop
hlt
or
pushf
imulb
arpl
and
sub
mov
xor
subl
jne
cmp
mov
fidivl
aad
sbb
jmp
sahf
jmp
ret
fstpt
in
push
aaa
ds
test
cmp
lds
or
sub
in
add
sbb
lret
fisubrs
sub
lock
mov
imul
inc
iret
mov
insl
clc
or
sbb
in
or
sub
xchg
orl
pop
cmp
mov
stc
jns
call
fcoms
sbb
sub
rclb
cmp
ret
fstps
jnp
or
add
xor
sbb
adcb
xchg
scas
scas
jp
mov
cmpsl
inc
orb
push
push
mov
adc
fwait
dec
add
pop
push
sarl
jo
xor
cld
xchg
sbb
cmp
xchg
push
inc
jecxz
fistpl
adc
mov
dec
dec
pop
dec
mov
test
pop
repnz
mov
mov
pop
movsb
arpl
mov
mov
fildl
ds
pop
and
sub
imul
cli
outsl
fildl
xor
push
dec
leave
cwtl
xchg
pop
nop
sbb
pop
xchg
mov
inc
imul
aad
jns
mov
push
insb
sahf
pop
adcb
gs
jbe
inc
enter
xorb
mov
dec
stc
test
loopne
mov
jle
arpl
or
pushf
sbb
rol
clc
mov
inc
push
push
jle
in
bnd
sbb
sub
aad
loop
lds
jp
repz
pop
mov
cwtl
call
leave
jl
pop
mov
mov
mov
loope
sbb
jne
mov
mov
repnz
aad
popa
repnz
ret
and
fldl
pop
imul
repz
into
add
sbbl
sbb
jg
gs
sti
mov
sub
ja
cmp
push
fildll
jb
insl
repnz
inc
add
ds
mov
cs
bound
adc
in
mov
push
jl
inc
adc
outsb
enter
or
cld
mov
test
setbe
movsb
mov
adc
push
push
mov
jne
mov
xchg
xchg
outsb
lahf
jnp
sbbb
jne
aad
ret
js
mov
mov
add
cmpb
xor
enter
sti
inc
loop
xchg
addr16
mov
test
jae
push
hlt
cmpl
repnz
inc
out
imul
dec
pop
mov
pop
xchg
dec
ret
push
or
sub
cli
ss
mov
cmp
je
sub
leave
mov
or
out
addb
or
add
ja
mov
jge
negb
xchg
addr16
xor
insl
cmp
and
fldenv
cmp
iret
repz
fisttpll
push
xorl
or
ljmp
push
cltd
lock
push
shl
int3
iret
or
lods
fcmovnbe
loope
jecxz
sbb
push
or
push
sub
rolb
not
push
mov
pop
lods
rolb
pop
repnz
outsb
out
jp
in
sbb
adcl
jmp
fwait
stos
leave
imull
mov
push
sbb
inc
push
mov
loopne
mov
or
shl
popf
aas
jl
dec
sub
js
aaa
xchg
dec
xchg
push
mov
cwtl
nop
or
sahf
and
fldcw
scas
or
out
cmp
or
xchg
cmp
inc
rorb
cmpsl
inc
jae
inc
mov
lock
push
call
xchg
push
iret
in
or
inc
cmp
xor
xor
loop
hlt
adc
movhps
xor
cmpsb
cmp
leave
jg
pop
xor
cld
xlat
imul
xor
jl
jae
or
jl
mov
push
stos
and
cmpsl
inc
lret
or
icebp
inc
decb
ror
add
inc
mov
lea
dec
push
imul
cmc
dec
push
loope
dec
dec
sbb
mov
in
insb
xor
bound
mov
fldl
arpl
test
push
adc
out
jp,pn
fxch
iret
adc
and
xchg
pop
xchg
xchg
jae
fwait
pop
ljmp
or
shll
xor
adc
mov
iret
js
pop
stos
mov
shll
mov
test
fs
jno
mov
cmp
test
sub
std
iret
xchg
into
push
pop
mov
pop
sub
popf
lret
in
pop
pop
shll
hlt
test
out
add
xor
xchg
clc
outsl
movsb
je
je
dec
lea
aad
sub
dec
in
xchg
test
shrb
cmpb
dec
or
pusha
mov
mov
sub
cmpl
mov
push
cmp
add
movsl
push
mov
cmp
scas
int3
adc
pushf
mov
iret
pop
fdivrl
add
stos
fists
loope
incl
pop
test
xor
lcall
xor
sub
or
rcr
das
ficompl
loop
inc
cmpl
xchg
push
and
dec
out
mov
cmpsl
jmp
sbb
out
xor
xlat
mov
lret
mov
shll
stos
icebp
call
jns
fwait
jb
add
inc
or
popf
aas
mov
bound
pop
mov
outsb
sbb
push
add
mov
cwtl
add
inc
xor
jo
in
mov
xchg
cmp
insb
loopne
inc
add
xchg
push
aam
scas
push
xchg
incb
mov
sbb
lahf
cs
pop
int
int
xor
push
pushl
mov
xor
in
int3
jle
sub
mov
pushf
insl
inc
mul
push
cmp
fwait
dec
jnp
sub
notl
and
in
pushf
cld
jnp
pop
or
mov
fiaddl
push
dec
mov
mov
xchg
ljmp
daa
sbb
pop
and
imull
icebp
aaa
sbb
stos
xlat
pusha
rcl
mov
int3
push
rorl
pop
pop
cwtl
push
in
sahf
loope
dec
int
iret
ljmp
jae
mov
leave
push
push
dec
lcall
lret
sub
mov
jge
aam
pop
mov
shl
lcall
out
test
push
xchg
cmp
mov
sub
lahf
mov
mov
jne
xchg
xor
xadd
ficoms
loopne
cmc
push
test
inc
gs
pushl
outsb
jae
mov
flds
sbbl
push
lods
movsl
jl
fisubrl
xor
mov
xor
cmp
inc
sbb
int
sub
push
lods
jle
rsm
jmp
inc
inc
je
pop
mov
push
shlb
add
aad
sub
adc
fcmovnb
xor
xchg
out
outsb
insl
jle
push
movsb
gs
pop
imul
cmpsb
push
dec
fwait
cmp
push
or
dec
ret
iret
jbe
xchg
jb
int3
iret
push
cmp
xchg
inc
mov
test
pop
out
xor
outsb
adc
cmpsl
sbb
pusha
movsl
sub
xorl
adc
repnz
and
mov
or
xlat
fidivrl
xchg
sbb
inc
lock
sti
add
outsl
xchg
pop
and
cmp
xor
int
popa
mov
pop
ret
scas
sub
push
clc
xlat
div
je
xor
xor
adc
cltd
leave
jb
xor
xchg
cwtl
cli
sbb
pop
jle
mov
mov
pop
sbb
mov
and
shlb
sub
lahf
test
cmc
arpl
clc
sbb
xchg
mov
insl
mov
sub
pop
aaa
fbld
dec
testl
cld
mov
xchg
repnz
mov
hlt
cmp
mov
adc
add
add
jecxz
fwait
sarl
jle
xor
xor
stos
cmp
mov
inc
fidivl
movsb
mov
push
lock
leave
adc
xorb
mov
pop
gs
pop
test
out
jo
push
xor
sub
lds
adc
push
lods
mov
jmp
mov
out
mov
lcall
fwait
pop
add
pop
or
xchg
rcr
dec
mov
and
fdecstp
mov
adc
jl
pusha
cltd
pop
dec
cmp
and
out
outsl
into
add
mov
push
fwait
or
sbb
fnstenv
sub
sub
jp
pop
jne
mov
add
mov
sub
mov
and
sbb
pop
shlb
popf
les
mov
mov
inc
scas
push
lock
aas
and
xor
and
sbb
cld
xor
xchg
pop
push
push
sub
ja
dec
sbb
sahf
mov
sub
mov
repnz
jns
jbe
js
and
push
int
xchg
adc
dec
cwtl
push
xchg
push
je
clc
sub
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
or
mov
push
push
mov
sbb
mov
and
mov
adc
mov
mov
and
andl
movl
sbb
movl
sbb
mov
mov
neg
sub
xor
add
mov
sub
add
mov
xor
xorl
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
push
push
call
jmp
sub
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
pushl
push
pushl
call
cmpl
jb
orl
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
subl
sub
sub
mov
or
orl
sbb
mov
and
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
xor
movl
lea
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
pushl
call
jmp
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
call
mov
dec
mov
jmp
lea
sub
mov
sbb
mov
mov
xor
mov
sbbl
xor
xorl
add
mov
mov
mov
mov
add
adc
push
mov
adc
mov
sbb
mov
mov
sub
mov
mov
xor
mov
addl
add
movl
cmp
movl
je
mov
jmp
movl
mov
cmp
movl
jne
push
movl
jmp
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
add
andl
mov
orl
mov
adc
mov
xor
orl
add
movl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
movl
add
cmp
notl
mov
movl
push
je
adc
mov
adcl
add
addl
mov
or
mov
xorl
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbb
push
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
movl
push
inc
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
sub
jmp
xor
test
or
loope
cmpl
pop
jb
fistps
dec
jl
and
inc
mov
mov
inc
xor
push
pop
dec
push
mov
jle
cmpsb
add
in
ficoms
jp
sub
lret
mov
imul
rcll
andb
mov
inc
xchg
push
xor
jge
xor
pop
outsl
mov
hlt
popf
addb
out
in
out
pop
inc
push
inc
test
insl
inc
mov
push
jg
pop
loop
cmp
into
repz
sbb
mov
adc
or
je
inc
loopne
shlb
xor
imull
cmp
xor
mov
loopne
div
shll
mov
sub
testb
aas
hlt
mov
xchg
jmp
inc
loopne
vmread
or
sar
rorl
sbb
stos
stos
xor
ret
lcall
mov
inc
loop
movsl
and
jbe
ret
andl
xchg
stos
cld
xchg
push
or
push
ror
mov
lods
iret
jmp
sahf
xchg
jge
shrb
fldenv
in
loop
fmull
enter
arpl
push
mov
push
loop
lcall
mov
and
and
cwtl
std
mov
xor
pop
sub
mov
push
sub
push
mov
orl
decb
or
dec
inc
mov
loop
ds
xor
push
mov
fistl
mov
push
out
or
jno
aam
arpl
mov
jecxz
insb
sbb
shlb
adc
and
lds
sub
xchg
jb
clc
pop
mov
cmpsl
mov
add
xchg
pop
out
and
add
pusha
pop
mov
aam
call
cwtl
mov
mov
loope
and
lcall
loopne
cmp
imul
sbb
enter
imulb
lret
test
and
mov
fists
sbb
int
sub
adc
or
mov
in
lret
dec
divb
gs
xor
cmp
sub
insl
add
test
xor
subb
cmc
lahf
je
sahf
mov
repz
and
cmc
mov
pop
cmp
or
fbstp
dec
fisubrl
sbb
notl
pop
mov
out
mov
in
mov
sub
mov
insl
xchg
inc
sbb
pop
push
and
es
adc
cmp
out
stos
jb
xor
ds
add
adc
das
pop
in
les
mov
jae
in
or
push
fcom
sbb
sbb
hlt
inc
rcrb
sarb
outsb
push
cltd
sub
mov
jns
data16
push
adc
mov
leave
fildl
pop
push
mov
cmpsb
add
sub
test
and
cli
mov
test
or
test
pop
outsl
sti
dec
cmc
push
mov
popl
mov
cwtl
inc
mov
insb
sarb
repnz
sub
xor
rorb
cmp
cmp
mov
jae
sub
xchg
xchg
out
push
pop
xor
mov
xchg
out
shll
mov
jecxz
lock
pop
insl
lods
add
pop
and
int
bnd
les
ss
loope
mov
negb
movsb
push
cld
inc
mov
sub
je
jne
movsb
into
rorl
testl
mov
mov
jb
pop
out
cs
adc
fucomp
sbb
out
imul
aad
loop
test
adc
push
lods
jb
xor
dec
insl
inc
push
pop
pop
mov
lock
jl
jo
loop
je
xchg
clc
stos
xor
movsb
sub
out
lahf
sub
push
cmp
push
or
sub
sbb
dec
mov
ljmp
loopne
pop
add
pop
clts
popa
push
mov
push
lcall
dec
inc
movsb
out
xor
lea
mov
out
ret
lret
or
mov
dec
pop
adc
or
sbb
mov
das
clc
notl
rorb
xchg
rorl
lcall
sbb
out
outsb
mov
lret
pop
in
pop
mov
jl
xchg
loopne
fsubp
in
mov
jmp
dec
jge
push
addr16
in
jo
push
jp
mov
sti
xor
mov
popf
sbb
sub
movaps
fstpl
xor
push
shrb
sar
out
aas
mov
dec
repz
inc
loop
cmp
mov
jg
xor
int3
xor
inc
test
test
adc
lods
cmc
push
in
pop
sbb
push
ss
test
cli
mov
mov
pop
sbb
psubsw
xlat
pop
test
adc
insl
imul
imul
adc
iret
shr
ja
cmpsb
and
mov
pop
ret
stc
nop
aaa
sbb
test
mov
pop
rolb
roll
aas
push
mov
xchg
pop
daa
pop
adc
dec
cmpsl
mov
sbb
pushf
lret
pop
pop
pusha
sbb
jecxz
imul
gs
iret
or
scas
dec
push
data16
fdivl
pop
sub
jmp
mov
pusha
push
idiv
je
inc
mov
ljmp
out
dec
add
mov
push
sbb
jno
inc
gs
ss
fwait
ja
fadd
popa
push
xlat
fs
xor
jmp
in
fwait
loope
jno
fcmovnb
and
fcmovu
push
mov
pop
loopne
ljmp
inc
hlt
sub
mov
xorb
jbe
inc
ret
jne
mov
inc
in
testl
mov
jg
pop
cld
dec
mov
jp
add
adc
jo
cmp
cmc
enter
pusha
adc
jmp
data16
xor
inc
and
dec
imul
push
sbb
icebp
sbb
sbb
cmp
and
and
fmull
ja
mov
scas
jecxz
out
shll
jno
xchg
test
xchg
dec
arpl
in
testl
test
sahf
mov
jns
mov
mov
jb
test
sub
or
lock
mov
out
scas
lds
mov
pop
mov
aas
shl
sbb
pop
sbb
mov
pop
jl
jne
dec
in
cmp
pushl
lcall
dec
jno
fcompl
fdivl
dec
loope
mov
jl,pt
dec
aaa
sahf
ljmp
mov
push
pop
ss
inc
pop
enter
sbb
add
dec
push
stos
mov
push
js
out
inc
inc
in
arpl
pop
jmp
push
insb
jns
sbb
jo
add
add
mov
push
push
inc
movsb
insl
push
fstp
and
stos
sbb
stos
pop
lea
pop
sbb
dec
xchg
cwtl
mov
aaa
ret
loope
shrb
mov
popf
push
xchg
sbb
movsb
or
jo
rcrl
lcall
mov
pop
fdivrs
sahf
aaa
push
movsb
jg
shlb
dec
cmp
pusha
dec
roll
xchg
or
lock
stc
loopne
sbb
fldl
arpl
stc
into
mov
outsl
std
add
mov
fisttps
popf
push
cmp
sbb
xchg
sub
shll
cwtl
mov
pushl
jmp
pop
xchg
push
scas
xchg
sub
push
mov
mov
repz
cmp
xchg
sbb
incb
mov
pop
test
mov
cmp
adc
movsb
icebp
mulb
sbbl
rcl
fistps
add
das
roll
lret
mov
outsb
stos
xchg
mov
sub
and
mov
push
xchg
stos
mov
mov
mov
pop
xor
mov
inc
mov
out
imul
sbb
mov
pop
inc
add
mov
mov
pop
pop
in
shlb
fnstenv
mov
push
pop
mov
dec
fsubp
ds
jae
flds
sub
or
ja
cmp
sbb
mov
push
push
xor
call
lods
shrb
ret
clc
mov
xchg
inc
int
adc
pop
std
jl
xor
rol
sahf
out
loop
cmp
mov
sub
push
jno
add
iret
outsl
ja
push
int3
rorl
adc
push
mov
addr16
xchg
xchg
pop
fistpl
cltd
mov
pop
nop
or
lret
mov
jl
and
loope
adc
mov
add
cs
mov
lahf
adc
jle
xor
mov
rorb
inc
jle
in
pop
shll
mov
rorb
test
pop
add
pop
callw
popl
sub
lock
jns
test
cmp
out
sub
sarb
aad
sub
cmpl
ja
data16
push
jmp
cmp
push
aam
jbe
xchg
jns
jle
enter
sub
push
mov
jo
xchg
ret
sbb
push
mov
jnp
imul
inc
movb
xorb
cmpsb
xor
dec
inc
outsl
adc
mov
push
ret
jne
ror
outsb
sbb
sub
data16
jmp
enter
mov
ficoml
push
clc
das
sti
jns
scas
mov
ja
sub
push
aad
lahf
adcb
cltd
or
rclb
add
inc
mov
pop
push
pop
stos
xchg
jle
movsb
add
test
xor
aaa
addr16
aad
mov
lock
shlb
pop
sti
test
dec
mov
push
push
lret
and
cwtl
xchg
mov
in
or
pop
push
insl
loopne
daa
data16
dec
cmpsb
das
mov
jno
add
mov
mov
decl
inc
int3
adc
mov
xchg
ds
or
repnz
adc
dec
inc
rcll
mov
xorl
mov
arpl
sub
xchg
mov
push
test
jno
and
lock
mov
or
in
jmp
jb
loop
es
sbb
xchg
dec
mov
mov
test
or
jl
xor
fsubrs
push
sbb
sti
nop
mov
aam
popa
in
scas
jno
imul
pop
orl
sub
or
bound
scas
mov
jno
or
insl
mov
add
out
inc
xlat
lods
dec
not
daa
call
push
xor
push
mov
or
lods
adc
adc
pop
adc
sbb
mov
enter
mov
lret
inc
fsub
push
movb
jg
data16
aas
push
pop
out
cmp
pusha
xchg
xchg
pop
pop
nop
mov
sub
pusha
mov
lods
adc
xor
mov
call
add
std
mov
loopne
mov
bound
bound
sbb
mov
and
mov
int3
in
idivl
cmp
out
dec
lds
fimull
mov
xorl
lcall
lock
jp
sbb
into
inc
repz
xlat
xor
shll
add
xchg
lock
cwtl
aas
fdivl
xor
lods
xchg
les
fcoml
loop
jb
jb
ret
inc
movl
dec
bswap
pop
sub
dec
stc
jbe
push
fidivl
sub
lds
dec
adc
or
cmc
push
xchg
xor
out
test
dec
or
jge
test
cmp
and
mov
stc
push
sbb
jae
test
sub
stos
inc
sbb
mov
push
movsb
fwait
clc
mov
mov
daa
mov
mov
scas
scas
fdivrs
data16
ljmp
je
icebp
mov
inc
mov
outsb
xor
xor
dec
leave
adcl
cmp
push
popf
mov
jmp
xchg
mov
or
dec
pushf
lods
sbb
adc
sbb
mov
insb
push
sub
imul
clc
je
add
lret
int
lods
arpl
ljmp
or
inc
xchg
dec
adcl
and
shlb
xchg
addr16
stc
pop
fildll
xor
jmp
pushl
mov
aaa
inc
jl
xchg
ficompl
mov
insl
push
push
stos
imul
cmpsb
lods
xchg
sarl
js
pop
pop
pusha
fcmove
mov
into
xchg
xorb
mov
pop
add
imul
xchg
mov
icebp
xor
dec
lods
pop
fsubrl
sub
stc
jmp
dec
sbb
int3
mov
add
sbb
jmp
xorl
in
imul
or
cmpsb
ja
shlb
mov
adc
mov
test
mov
push
cld
pushw
enter
push
pushf
mov
dec
mov
dec
ljmp
pop
lcall
lcall
sbb
xchg
pushl
std
mov
shrl
loopne
sbb
jbe
fs
ds
sbb
sub
bound
add
movzbl
jge
fwait
sbb
push
or
mov
out
jge
fistpl
xor
insb
bound
inc
dec
cmc
std
jmp
xchg
std
push
in
punpcklbw
sbbl
mov
ds
mov
jo
dec
xchg
pop
rorl
mull
jb
ja
mov
repz
into
mov
push
lea
mov
shlb
inc
sbb
jo
sahf
lret
sbb
daa
cld
orb
pop
pop
ret
xchg
mov
dec
inc
inc
inc
ljmp
dec
outsb
dec
in
shll
ret
dec
cmp
insl
and
mov
pop
sub
mov
jno
dec
mov
lods
aas
mov
inc
shlb
stc
push
mov
mov
xlat
orb
pop
clc
push
pop
mov
sub
jno
fstl
in
shr
lea
les
adc
jno
fs
scas
xlat
cmpsl
add
mov
cmp
insl
insl
sbb
cmp
sahf
std
sbb
push
and
fdivr
outsb
mov
xchg
push
aad
pop
or
icebp
cmp
ficoml
jo
and
jp
jne
enter
fs
aam
loop
sub
add
inc
shll
sbb
shlb
and
dec
dec
xor
out
mov
fwait
je
sub
roll
int
dec
sub
insl
push
jbe
xor
add
cmp
adc
in
inc
shl
fsubs
lret
hlt
xor
dec
out
dec
jno
pop
lods
inc
or
frndint
imul
dec
popa
push
lock
js
stos
mov
pop
fistpl
loopne
adc
inc
arpl
ficoml
mov
std
mov
push
iret
fsin
mov
dec
idivl
testb
lret
pop
dec
xchg
push
mov
pop
xor
rcll
fstpt
daa
push
push
imul
sahf
daa
xchg
imul
stos
and
pop
rorb
out
mov
dec
cs
test
xchg
xor
cmp
mov
xchg
insb
mov
cltd
xor
and
xlat
add
mov
scas
adc
push
int3
cmp
mov
out
cmpsb
mov
and
push
or
dec
mov
pop
enter
das
mov
or
and
push
mov
pushf
inc
popf
lea
movsl
inc
inc
or
push
pop
cmp
cmp
dec
pop
fstpl
inc
pop
ljmp
rorb
rol
sbb
mov
gs
icebp
ffree
push
dec
sub
sub
push
int
mov
rorb
fimuls
cmpsb
jns
lods
jbe
fstpt
mov
popa
mov
aad
sub
mov
rcrl
adc
cmp
cli
xchg
iret
inc
pop
frstor
mov
bound
jmp
cltd
gs
add
fsts
adc
scas
dec
mov
mov
test
push
pushf
sbb
loopne
js
pushl
and
mov
ret
sbb
lock
or
xchg
jno
push
push
xchg
pop
das
rolb
outsl
xor
sahf
jne
and
mov
test
hlt
arpl
jno
xchg
cltd
icebp
outsb
arpl
pushf
scas
in
cmp
pop
aaa
add
jge
les
fdivrl
sbb
dec
xchg
mov
or
insb
ret
xor
rorl
inc
mov
or
ss
ds
pop
rep
int3
or
jecxz
mov
insl
push
jno
push
stc
adc
cmpb
jne
dec
adc
lret
lret
movsb
cli
adc
shlb
push
icebp
xor
or
dec
rclb
imul
das
lcall
cmp
bound
das
hlt
stos
jae
mov
jge
adc
add
cmp
sub
rcrb
cmp
inc
ja
rolb
xor
hlt
movsl
inc
xchg
jle
mov
and
xchg
pop
orl
pop
sub
jae
ss
jns
mov
adc
addr16
shll
std
stos
mul
js
xchg
mov
xorb
pop
fmulp
stc
cs
jbe
mov
daa
pop
js
testb
imul
xchg
loop
out
andb
lea
test
lcall
icebp
sbb
into
mov
gs
adc
in
inc
mov
repz
sbb
xlat
push
mov
enter
idivl
fdivl
jp
je
iret
es
sub
imul
leave
mov
mov
addr16
jbe
cmp
xor
pop
pop
stos
call
aaa
push
mov
idivb
xchg
daa
sub
mov
xchg
add
mov
test
mov
sbb
or
pushf
adc
cmp
sub
rcpps
mov
popa
call
out
cmp
mov
jmp
daa
insl
jnp
pop
movsb
or
movsl
in
cmpsb
xchg
loope
pop
cmpsl
mov
push
lods
mov
jle
jae
aad
xor
sub
xor
dec
adc
mov
test
outsl
xchg
fldt
repz
sub
icebp
or
or
push
fcmovnu
mov
divb
xor
insb
sbb
ret
lret
lret
mov
pop
add
outsb
dec
sbb
cwtl
jmp
adc
dec
mov
mov
mov
aas
dec
and
jns
jle
sbb
les
inc
ljmp
push
out
imul
push
pop
dec
mov
xor
ljmp
pop
sbb
dec
out
popa
or
xchg
scas
iret
icebp
ljmp
std
lret
gs
das
lret
lahf
xor
sub
rcrl
pop
ja
push
insl
aas
aam
xchg
mov
lds
and
cs
test
stos
mov
sti
loope
pop
pop
in
xchg
int
and
addr16
iret
fisttpll
cltd
out
push
xchg
clc
pop
sti
cld
and
push
lcall
leave
push
out
aaa
push
sub
mov
sub
and
daa
push
loop
and
cli
xorb
push
pushf
xchg
mov
lock
arpl
or
jne
xchg
imul
sub
sub
out
testl
cmp
sub
mov
adc
jmp
add
push
loop
xor
push
jb
ds
push
jg
daa
cmp
in
cli
xor
imul
add
les
inc
push
testb
mov
popa
adc
lods
mov
out
outsb
mov
imul
adc
push
bound
ret
ja
cmp
out
push
xlat
push
lret
sahf
lahf
mov
push
fidivrs
out
add
sub
ja
into
xor
outsb
test
pop
cld
fstps
aas
jbe
adc
sbb
jecxz
inc
and
test
xlat
jl
sbb
jge
fldt
dec
jno
jecxz
inc
cmp
mov
sub
mov
add
dec
dec
lea
pop
daa
pop
int
jmp
xchg
push
mov
sub
std
mov
fistpll
dec
xor
std
adc
cltd
jbe
into
std
lods
pop
mov
or
jle
mov
pop
xor
aas
iret
inc
rcrb
pop
lods
jne
hlt
insb
dec
in
add
or
push
repnz
xor
arpl
testl
movsb
insl
outsb
dec
sbb
mov
xorb
sub
jo
sub
mov
pusha
push
pop
push
push
adc
and
fmuls
xlat
clc
je
pop
loope
xor
dec
iret
std
mov
pop
out
sub
sbb
push
or
mov
and
fnstcw
push
push
jge
hlt
mulb
nop
jbe
cmp
or
inc
xor
aad
dec
out
and
mov
movd
mov
loopne
cmc
hlt
adc
stos
mov
dec
lahf
add
pop
mov
mov
pop
lods
loopne
mov
mov
cmp
enter
mov
stos
fimull
pop
or
adc
fsub
shl
cli
mov
lcall
out
jbe
jb
outsb
clc
test
push
pop
je
lock
shr
aad
mov
push
adc
cmp
xchg
addr16
xchg
or
cmc
stos
or
mov
and
mov
nop
sbb
push
inc
int
cmp
fwait
cwtl
ficomps
jbe
not
mov
lahf
xor
adc
push
xchg
in
rcrb
xchg
in
lret
jne
add
jge
loope
test
adc
mov
sar
add
stc
xor
pop
jo
jl
lcall
sbb
push
sbb
sbb
fwait
testl
cmp
mov
jbe
out
fsubrl
jl
dec
xor
inc
and
mov
pop
sbb
inc
sbb
out
push
sbb
mov
popf
mov
mov
cmp
stos
out
mov
dec
xchg
data16
mov
mov
inc
sbb
pushf
and
iret
notl
xchg
xor
mov
addb
pop
rcrb
nop
add
xor
mov
in
or
or
std
pusha
dec
sti
pop
stos
stc
test
dec
lea
test
xchg
mov
call
mov
hlt
das
push
and
dec
out
inc
mov
cs
das
popa
insb
xchg
stos
lods
jp
jmp
xor
out
hlt
xor
dec
xchg
movsb
inc
test
fs
mov
xchg
lcall
jg
clc
in
dec
xchg
cli
inc
mov
aaa
inc
rolb
subl
cmp
mov
sti
stos
sub
adc
push
enter
outsl
cwtl
clc
xchg
pop
cmp
gs
cld
xor
pop
push
test
cld
insb
jns
jnp
push
pop
lds
and
cmp
jb
adc
inc
cs
rol
pop
imul
imul
jb
mov
sti
ret
f2xm1
jp
adc
dec
xchg
cmp
test
addr16
cmp
or
jmp
push
or
fcoml
sub
pop
sbbl
dec
pop
cmpsb
ljmp
repnz
popf
pusha
xchg
mov
dec
mov
jge
cmp
dec
cmp
aas
lahf
xlat
cmp
mov
arpl
and
add
pushf
les
fistpl
ror
cmpsl
loopne
mov
ja
push
mov
add
and
mov
les
jns
sysret
and
jp
and
xlat
sbb
call
lcall
cmp
sub
lods
mov
xchg
cmc
jne
mov
mov
and
push
test
sti
lret
out
daa
inc
xchg
leave
stc
frstor
dec
jle
fldcw
xabort
ljmp
mov
lahf
lds
in
shr
daa
mov
mov
push
dec
pop
arpl
adc
pusha
push
push
mov
cs
insb
insb
addr16
mov
inc
add
lcall
jg
mov
sub
cltd
and
shll
push
lahf
test
xchg
inc
jns
push
lods
sub
push
jmp
jns
dec
movsb
push
mov
rcrl
push
push
outsl
pop
gs
and
aas
and
xchg
repz
movsb
push
stc
mov
out
jnp
inc
lock
dec
push
shr
sub
pop
mov
arpl
das
mov
add
fsubr
sbb
and
mov
mov
jno
daa
pop
movsb
mov
cmp
mov
add
mov
pusha
xchg
aas
mov
in
jmp
jmp
xor
sub
adc
cltd
xor
flds
stc
sbb
cmpsb
jae
cmp
pop
nop
mov
testb
pop
dec
xor
dec
hlt
mov
mov
notl
aad
or
aas
mov
cmpsl
xchg
sti
stos
xchg
aas
or
dec
cwtl
xchg
cmp
dec
pusha
out
je
xchg
dec
mov
push
popa
fidivrs
repz
cmp
dec
leave
call
adc
and
pop
negb
cld
mov
or
ret
fisubrl
push
lea
mov
or
push
xor
subl
mov
out
jg
test
or
incb
sti
push
aam
push
arpl
divb
les
and
loop
hlt
fwait
xor
cmpsb
pop
in
pop
add
mov
cmpsb
inc
xchg
sbb
add
test
inc
mov
repz
cwtl
stos
xor
adc
mov
or
inc
enter
dec
aam
push
xor
shrb
mov
ja
xor
jg
aaa
mov
outsl
mov
mov
sub
shl
cmc
in
mov
lods
enter
cmp
repnz
xor
add
mov
js
mov
ss
test
jns
cmp
fnstenv
jl
ja
jg
out
lahf
inc
pop
lea
out
adc
or
clc
test
int
icebp
std
adc
jne
sbb
shll
fistps
setae
pop
ss
fwait
or
cs
mov
mov
xchg
decl
int3
sub
push
mov
push
subb
mov
inc
sbb
add
imul
stc
frstor
fadd
and
push
rorb
mov
lret
add
add
push
xchg
cmp
gs
or
icebp
test
stos
dec
sub
or
or
inc
loope
shrl
cmp
in
pop
push
outsb
inc
dec
in
leave
in
hlt
xchg
ds
fiadds
int3
push
push
inc
jge
stos
ret
pop
adc
clc
stos
adc
or
fisttpll
negl
call
xor
popf
fs
popa
rolb
mov
mov
aad
aam
popa
sti
call
add
iret
and
push
adc
pop
packssdw
or
mov
js
jmp
mov
or
lock
inc
cmp
fsubr
leave
jne
orb
sysexit
push
sbb
gs
dec
test
mov
pop
cmpsb
mov
cmp
lock
loope
inc
inc
lds
mov
fildll
mov
push
mov
cmpsl
inc
rorl
clc
movsl
fisttpll
or
daa
xor
idivl
or
loope
out
in
in
sar
jne
lea
cs
adc
xor
xor
sub
movsl
shrb
sbb
mov
sub
movsb
adc
lsl
cmpsl
xchg
dec
mov
sti
mov
popa
mov
cld
subb
ja
ljmp
lods
add
jle
in
aam
sbb
ret
pop
jge
imul
icebp
pop
addl
orl
daa
xchg
popa
mov
sti
cmp
enter
mov
int
outsb
pop
jae
jle
mov
pop
out
dec
loopne
pop
pop
and
inc
out
ss
rclb
add
mov
jno
sub
mov
sahf
cld
mov
xchg
dec
mov
sub
or
xchg
imul
dec
and
jge
adc
ficompl
mov
pop
lret
adcb
mov
mov
fmulp
dec
arpl
in
aas
ljmp
cmpsb
push
outsl
cwtl
mov
and
mov
outsl
daa
xor
aas
fistpll
lsl
sub
pop
mov
sbb
jnp
lea
inc
leave
ror
pop
push
and
add
ret
and
mov
lret
mov
and
inc
inc
sbb
pop
adc
mov
mov
aam
stc
divb
or
lds
test
xchg
cmp
stos
fcmove
or
dec
lret
roll
aas
push
inc
testl
ficoml
rolb
sahf
repz
push
push
add
push
xchg
push
and
fiaddl
push
scas
mov
dec
xlat
imul
shlb
or
push
dec
dec
shl
addb
lret
rclb
les
push
jmp
adc
xchg
pop
int3
mov
fldl
rorl
xchg
push
adc
hlt
xchg
mov
or
mov
xor
mov
sti
pop
iret
sti
pop
cmpsb
int
push
adc
inc
cmovno
in
int
rclb
stos
rclb
mov
jbe
or
adc
xchg
movsb
repnz
out
pop
pop
mov
in
rcr
cmp
movsl
movb
cmpsb
fists
adc
movsl
jns
mov
and
popa
cmp
inc
sub
adc
xor
or
pop
imul
xchg
sub
jo
adc
int3
mov
insl
mov
leave
mov
fsubs
adc
test
cmova
mov
jle
xchg
es
xor
bound
mov
and
fwait
xchg
dec
xor
mov
fstpl
jg
jge
jge
mov
lds
inc
test
sub
clc
es
negl
lods
or
mov
cs
xor
cmpxchg
mov
loope
cmp
shr
jnp
sbb
ss
loope
pop
add
cli
imull
fs
cmc
inc
push
test
inc
add
push
dec
shlb
jecxz
orb
add
sbb
fsubl
jb
aas
add
mov
addr16
dec
mov
fisttpll
sub
cmpl
inc
jno
xchg
lods
cmp
push
ds
in
pop
ficomps
int
stos
xchg
fldt
xchg
rorb
fisttps
stos
cmp
xor
add
mov
pop
or
add
xor
xor
subl
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
subl
add
adcl
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
mov
adcl
xor
mov
add
inc
movzwl
mov
xor
movb
lea
or
mov
sbb
mov
mov
addl
xor
orl
sub
orl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
push
movl
xor
mov
movzwl
sbb
push
adcl
mov
adcl
xor
mov
push
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
mov
movl
xor
sbbl
jmp
and
mov
fwait
sbb
sbb
jb
pop
jb
mov
xchg
push
loope
pop
xchg
stos
je
icebp
inc
dec
jne
sbb
cmpsb
mov
sbb
iret
cmc
loopne
cmp
mov
sub
adc
bound
dec
pusha
movlps
pop
testb
sti
mov
in
cli
adc
pop
mull
xchg
inc
fwait
dec
push
ret
popa
dec
sub
arpl
test
lret
lods
cmp
mov
xlat
in
mov
outsb
shlb
les
cmp
rcll
lea
mov
mov
cmp
outsl
lods
dec
xor
inc
test
mov
xor
clc
arpl
lea
add
repnz
xchg
clc
scas
enter
js
xchg
xchg
adc
lret
pop
lahf
js
pusha
inc
jl
rorb
pop
push
mov
push
notl
pop
pop
adc
ja
and
shlb
adc
xchg
stos
and
cmpsb
xorb
xchg
sahf
mov
push
les
jb
fadd
inc
sarl
imul
adc
jle
sbb
sti
andl
hlt
mov
je
mov
mov
pop
sbb
pop
out
mov
cmp
inc
jo
jle
cmp
stos
or
popa
cmpsb
push
mov
pop
xor
adc
ljmp
jecxz
js
add
jge
adcb
sbb
xchg
ljmp
jmp
xor
mov
das
jnp
push
pushf
sahf
mov
push
xchg
push
mov
jo
or
loopne
mov
mov
pop
dec
cmpb
push
movsb
pop
movsb
xor
fcomps
push
data16
jge
das
ds
es
lea
add
jbe
das
lcall
movsb
or
outsw
push
dec
push
lock
aas
add
aas
xchg
inc
and
cmpsl
pop
data16
les
mov
les
xlat
leave
mov
clc
mov
aas
ljmp
pop
and
aaa
pop
out
cwtl
or
out
movsb
mov
mov
inc
mov
add
inc
and
imul
fimuls
outsl
xor
fidivl
jecxz
dec
das
outsb
xchg
jne
lods
cmp
or
lret
aad
sub
add
sbb
or
adc
addr16
sbb
sbb
nop
jnp
test
inc
stos
jl
aad
cld
rcrl
dec
addr16
insl
loopne
lds
cmp
xchg
mov
lea
lea
in
repz
in
and
int3
or
test
test
addr16
faddp
and
daa
call
dec
mov
dec
in
jb
lea
repz
repnz
data16
test
xor
jecxz
in
jecxz
cld
mov
sub
lret
dec
xchg
add
pop
sbbl
iret
aad
notl
add
fstpl
int3
or
fucomp
add
add
adc
repz
sub
sbb
push
xchg
bound
outsl
jp
mov
add
sti
fidivs
cwtl
fwait
or
addr16
pushf
inc
add
sbb
push
daa
pop
lock
sub
loop
lcall
pop
aaa
les
repnz
ljmp
dec
mov
sbb
dec
jl
hlt
push
scas
jnp
addr16
mov
xor
add
sarl
cld
gs
jae
test
mov
mov
adc
xor
jae
call
sar
ja
push
adc
push
dec
orb
lret
push
stos
das
popa
xchg
mov
dec
jl
in
cmp
mov
stc
pop
imull
movsl
lds
pop
pop
xor
out
inc
xchg
sarl
repz
inc
lods
mov
aad
pop
push
xchg
ja
push
dec
fiaddl
xchg
jae
jl
out
movsl
cmp
cmp
sbb
mov
push
cmp
lcall
dec
iret
in
sub
dec
jge
in
aas
xor
xor
mov
aam
sbb
xor
std
stos
nop
daa
sub
cli
outsl
pop
add
sub
xchg
popf
aam
fsub
jmp
jle
fisttpll
aaa
cld
outsl
sub
and
lret
add
pop
ret
mov
sub
push
mov
aaa
test
inc
scas
sub
pop
mov
xchg
rcrl
adc
idivb
stc
cld
cmp
mov
adc
mov
or
mov
int
notl
xchg
mov
adc
and
push
mov
add
lds
jmp
xorb
lcall
jecxz
fstpt
xchg
ja
adc
aaa
sbb
or
pop
cs
pushf
cs
mov
dec
xchg
add
jne
xor
mov
xchg
add
call
jnp
dec
push
mov
push
shll
push
pop
divb
ret
or
mov
ja
inc
mov
lock
and
xchg
pusha
cmp
jmp
lods
test
lods
leave
setl
imul
popf
cmp
pop
push
stos
adc
into
xor
or
test
dec
retw
dec
mov
divb
sbb
xchg
adc
jne
pop
jecxz
stos
pop
into
fstpt
add
add
cmpb
xor
xchg
js
fwait
xchg
test
enter
enter
ffreep
jbe
enter
and
adc
jnp
das
imul
lea
sub
xchg
mov
out
mov
repnz
fsub
jne
jne
sbb
inc
aam
clc
inc
mov
in
hlt
popa
mov
aaa
aad
ja
fisubrl
xor
pop
es
adc
icebp
and
aaa
xchg
pusha
pusha
xlat
lahf
push
xchg
mov
sub
ror
test
push
scas
imul
mov
shll
lods
push
in
adc
add
pop
cmp
mov
dec
add
enter
mov
loop
dec
sbbl
pusha
lret
push
out
mov
sbb
dec
sahf
ja
out
lods
movsb
loop
loopnew
repnz
or
cmp
int3
dec
cli
mov
sbb
icebp
cli
jno
pop
shlb
jp
cmp
and
xchg
adc
into
cmc
jmp
sbb
in
lahf
repnz
mov
int
push
or
data16
sub
push
mov
xchg
mov
pop
xchg
nop
lret
dec
aad
adc
add
mov
pop
cld
out
insl
and
test
hlt
jns
in
inc
out
ljmp
xor
xchg
loope
fldl2t
push
icebp
pop
test
jno
xchg
xorl
sub
push
dec
inc
adcl
push
pop
repz
push
sub
out
lock
xchg
adc
pop
dec
xchg
mov
sub
bt
aas
mov
and
inc
mov
ljmp
iret
fisubs
clc
mov
xchg
mov
dec
push
push
shlb
cs
stos
xchg
pop
mov
xchg
sub
addl
push
pop
repnz
jg
mov
cs
pop
pop
xchg
es
or
sbb
leave
jg
or
bswap
push
xor
aas
pop
pusha
leave
fimull
xchg
inc
insl
inc
pop
and
int3
notl
xor
push
les
mov
and
dec
jl
pop
push
aaa
push
adc
aaa
pusha
pushf
cmp
fs
outsl
repz
std
mov
daa
mov
and
add
mov
lea
scas
icebp
mov
pop
adc
xor
movb
xor
bound
cmp
mov
out
mov
cmp
cmp
push
xchg
push
das
pop
dec
insl
jle
xchg
and
xchg
dec
cltd
sub
mov
std
sbb
out
loope
cmp
lcall
mov
dec
cmp
push
mov
sub
pop
mov
jecxz
in
ss
leave
mov
lret
sbb
mov
xchg
jne
adc
and
repnz
mov
inc
leave
fdivrl
or
lret
lret
incb
ljmp
xor
in
out
xor
cltd
add
fwait
sbb
inc
push
sub
inc
repnz
mov
bound
mov
pop
fsubp
insb
and
or
movsb
pop
sbbb
enter
pop
cld
int
imul
popl
push
add
xchg
pop
inc
cmp
pop
xchg
jl
lret
xor
ja
cmp
inc
into
and
and
lahf
cmp
mov
xchg
dec
lret
xor
test
jmp
orl
clc
inc
xchg
xchg
push
nop
rcrb
push
mov
add
sarl
loope
push
aam
sbb
dec
test
test
adc
jmp
dec
addl
push
clc
push
xor
iret
mov
clc
clc
xor
hlt
inc
or
cmp
es
sti
je
testb
aas
and
shlb
ljmp
ret
cmp
and
mov
fcmovnbe
mov
push
test
mov
sub
repnz
sbbb
pushf
adc
sbb
mov
push
fs
cmp
addr16
or
mov
mov
xor
lret
sub
test
dec
jp
scas
jp
mov
outsb
dec
js
push
mov
xchg
pop
std
pop
jl
or
add
in
add
push
shll
cld
mov
dec
and
or
or
adc
std
mov
cltd
cltd
adc
sbb
xor
mov
ss
push
sti
push
xor
add
les
inc
xor
push
dec
push
outsb
int3
add
sbb
test
outsl
xor
mov
mov
popa
aam
jnp
inc
inc
ljmp
je
loopne
jg
dec
stc
mov
lods
push
cmc
iret
stos
jg
js
mov
and
and
js
mov
mov
in
fbstp
jmp
push
pushl
les
jae
rep
cld
jne
lods
push
nop
adc
insb
les
lret
xor
jnp
movsb
adc
orb
or
shl
repz
aad
daa
jg
popa
outsb
lods
or
insb
loopne
xor
pop
stos
bswap
leave
cmp
inc
push
pop
or
jnp
push
gs
filds
and
mov
add
jbe
xchg
lret
or
fs
push
adc
pusha
jmp
xchg
adc
fmul
jge
pop
xchg
mov
aam
mov
sub
add
mov
arpl
dec
incb
mov
add
ja
sahf
jle
dec
adc
xchg
and
inc
stos
add
out
adc
daa
jnp
in
rorl
mov
mov
daa
divb
or
jns
jne
hlt
cwtl
and
movl
mov
mov
add
cmp
and
sbb
sbb
inc
bound
inc
dec
or
cmp
adc
iret
adc
pop
sub
push
mov
lods
pop
xchg
lahf
push
popf
and
cmp
and
int3
cmp
cwtl
aam
lahf
out
addr16
add
mov
push
je
xor
pushl
pop
out
and
cmp
aam
gs
int3
gs
inc
lock
jg
outsb
sbb
psrlw
frstor
inc
nop
lret
bound
xorb
push
adc
cli
add
sbb
cmp
and
ret
sub
iret
decl
push
mov
cmp
in
xchg
push
stos
imull
lock
int
pop
xor
add
arpl
out
inc
xor
nop
pop
lds
add
adc
mov
lea
mov
jl
sahf
or
adc
fcoml
jnp
out
mov
mov
sbb
xchg
xchg
imul
fwait
cmp
mov
lods
pop
popa
nop
push
mov
shrl
sub
xor
shll
cltd
dec
addb
sbb
cwtl
mov
mov
pop
stc
or
call
shlb
repnz
mov
sbb
fistpll
cwtl
stos
lret
adc
insb
clc
xor
cmovb
or
fidivrs
out
enter
in
imul
push
xorb
fstpl
push
mov
push
xor
movsb
sbb
popf
mov
cmc
jmp
jl
sti
test
sub
mov
div
cld
sbb
into
jl
or
js
les
pop
rol
or
out
test
inc
out
subl
ffree
fldt
xchg
loope
mov
xor
les
popf
cwtl
vpunpckhwd
push
cmpsb
and
xor
jb
shrb
dec
ds
rclb
imul
shl
cwtl
std
mov
jecxz
mov
inc
addr16
dec
dec
mov
pop
out
lds
lods
pop
pop
mov
aad
adc
adc
and
popa
jg
imul
jo
xor
inc
sbb
push
sub
fadd
mov
mov
xor
mov
arpl
xchg
jg
out
inc
pop
jne
ljmp
or
push
lahf
shll
int
outsl
jl
and
jl
pop
pop
mov
dec
jnp
lret
lret
pop
lock
and
mov
jae
mov
sub
ret
setb
jns
scas
xchg
xor
cwtl
jl
xchg
add
mov
repnz
push
xor
ja
incl
add
out
mov
pop
dec
ss
mov
xchg
inc
push
dec
lret
mov
loopne,pn
js
push
test
dec
int3
addb
inc
push
push
cmc
adc
mov
adc
imul
gs
stc
lcall
lds
push
cmp
xor
push
out
mov
cmp
pop
adc
pusha
cs
sti
ss
inc
mov
xchg
mov
jp
mov
popa
mov
cmp
sbb
loopne
sbb
lock
es
sahf
mov
sbb
pop
insb
int3
fbstp
js
or
add
fwait
adc
add
mov
cmp
pop
dec
and
adcb
mov
pop
push
pop
mov
daa
scas
sub
std
mov
dec
xor
shlb
popf
adc
insb
fsubrs
shrl
lock
pop
pop
stos
test
dec
jno
or
jb
mov
sbb
imul
pop
subb
push
xor
aam
lock
push
sar
inc
push
sub
outsb
test
push
les
ss
in
and
outsl
icebp
aad
in
push
pop
jg
outsl
jo
mov
addb
shr
inc
add
daa
aad
leave
insb
sub
out
jmp
add
jmp
add
xor
pop
adc
sbb
int3
fmulp
or
or
add
loopne,pt
pop
cmpb
pop
dec
aam
mov
test
push
inc
enter
mulb
or
lahf
call
push
loope
pusha
sahf
scas
out
jno
leave
pop
cmpsb
test
arpl
sub
gs
xor
repnz
cld
mov
imul
xchg
xor
sub
jno
popf
xor
stc
xlat
mov
stos
mov
jge
insb
xchg
pop
inc
in
sub
imul
cmp
cmp
fiaddl
incb
es
icebp
ja
int
in
cmp
insl
sahf
scas
pop
jns
xchg
out
out
mov
push
std
movsb
scas
pop
jo
lahf
mov
shr
insl
iret
cmp
sub
adcl
mov
imul
xor
call
mov
jecxz
mov
filds
loope
dec
adc
jbe
pop
jb
cli
pop
cmp
adc
mov
ret
pop
mov
in
pop
jp
sbb
cmp
dec
push
popf
push
fimull
push
test
test
adc
out
rclb
cmpsb
aas
dec
and
and
mov
push
arpl
push
data16
or
mov
jl
rcrl
push
mov
sbb
inc
cmpsb
mov
xchg
mov
and
ret
loope
repz
xchg
jno
push
mov
jge
cmpsl
dec
jg
ds
jne
cmpsl
mov
nop
sub
loop
push
roll
movsl
lcall
fsubrp
std
call
push
and
push
and
ljmp
mov
xchg
sahf
fsub
add
js
lods
jecxz
dec
mov
xchg
mov
fisubrl
sub
pop
jp
dec
daa
mov
mov
lahf
cs
aam
fwait
enter
sbb
jg
es
adc
xchg
jb
loope
mov
sub
or
jns
out
and
dec
fchs
in
cmc
aam
movsb
popf
and
jb
out
mov
mov
push
hlt
mov
adc
jbe
jp
cmp
iret
mov
adc
repnz
les
mov
ds
jns
mov
add
mov
add
je
imull
jns
mov
subb
sahf
fisubrs
sbb
bnd
into
jnp
inc
mov
xorb
sub
pop
rcll
es
lcall
movsl
dec
sbb
out
add
xchg
jmp
or
rcll
push
rcl
jno
pop
sar
in
cmc
dec
cmp
js
test
push
mov
daa
mov
out
dec
push
push
test
fistps
adc
aad
idiv
lds
xor
scas
push
lea
mov
mov
hlt
inc
cmp
cmp
add
cmp
lds
inc
fs
inc
or
fsubrl
cmp
pop
and
in
xchg
jl
ret
or
subl
lods
add
movl
or
sub
scas
aas
enter
mov
fbstp
rcll
cli
xchg
lahf
mov
xlat
lahf
mov
sub
push
fidivrs
mov
ss
jmp
add
lds
les
imul
cmpsb
pop
or
jo
xor
into
insb
jns
sub
fimull
nop
mov
inc
xor
dec
dec
add
pop
test
add
stc
mov
mov
cli
and
adc
mov
ret
mov
fisttpl
cmp
sub
gs
jg
cmp
inc
adc
sbb
loope
sub
sub
push
js
test
cmp
je
xlat
leave
loope
pop
ja
outsl
shll
lahf
xchg
pop
xchg
mov
cmp
fwait
xchg
jns
sub
jmp
sub
mov
fnstcw
xor
pop
push
push
push
enter
pop
cmpsl
mov
fnstenv
mov
mov
je
fmuls
lret
outsb
xor
jo
xchg
ss
xchg
notl
enter
mov
push
or
or
icebp
ljmp
out
mov
add
inc
mov
cmc
xor
popa
mov
call
jne
push
dec
dec
sbb
cld
xor
mov
sahf
jmp
sbb
xlat
jnp
cmp
xor
mov
push
jg
xchg
roll
iret
and
xor
enter
inc
push
mov
cmp
nop
xor
mov
loop
add
add
jle
sbb
outsb
jecxz
hlt
mov
pusha
jbe
lea
fwait
pusha
mov
cmp
and
mov
mov
jp
packuswb
fidivs
or
pop
loop
out
das
mov
fnstsw
inc
xchg
inc
pop
mov
imul
cli
les
mov
jno
je
test
and
cmpb
arpl
ljmp
jno
sub
outsb
iret
sbb
out
mov
les
pop
repz
je
adc
cmc
adc
mov
ljmp
push
inc
movsl
fidivl
pop
inc
hlt
popf
or
cmp
popa
add
dec
or
cld
ret
jns
or
xor
nop
int3
xor
repz
cwtl
std
sub
xor
adc
xchg
or
in
xchg
stc
daa
pop
inc
xor
pop
mov
cmpsb
lcall
mov
or
and
push
scas
int
mov
jb
imul
mov
paddq
mov
sbb
sub
add
jne
mov
jns
jne
shrl
and
mov
cltd
test
fldenv
ret
dec
pushf
cmc
mov
adc
imul
ds
test
test
clc
addr16
sbb
adc
popa
enter
or
es
mov
andnps
outsb
mov
inc
mov
sbb
push
out
xchg
repz
fisubrs
js
clc
xor
add
xchg
adc
and
inc
mov
adc
insl
popa
mov
dec
int3
lods
not
rcrb
fs
sbb
add
fistpl
notb
and
loop
adc
xor
push
mov
subb
jle
push
es
flds
jns
mov
clc
loop
sti
pop
sub
ret
aam
roll
xchg
sahf
mov
fs
adc
sbb
push
dec
jl
cmp
inc
dec
jecxz
test
xor
aam
repnz
pop
das
jle
roll
mov
mov
xor
xchg
jmp
mov
inc
js
mov
or
cmpsl
push
loop
rorl
std
cs
jns
sub
fldl
push
faddl
jl
fiaddl
mov
lret
addr16
jbe
in
pop
insb
mov
push
sar
in
or
mov
inc
jecxz
add
pop
clc
mov
scas
and
out
jb
or
xor
inc
in
pushf
call
xor
fs
cmc
cmp
fdivrl
nop
jmp
rclb
pop
fcoml
inc
das
dec
lret
add
push
xchg
xor
enter
mov
sbb
popa
push
push
jo
int3
add
aas
fwait
xchg
fisubs
andl
cmc
out
inc
adc
mull
sub
loop
cmp
mov
jmp
ljmp
or
ja
mulb
jge
dec
arpl
adc
aad
ret
insb
ljmp
mov
jle
cmp
int
in
out
xchg
pop
mov
fiadds
daa
or
dec
sahf
movsl
push
out
lods
cltd
jae
popf
and
in
jb
xlat
nop
mov
inc
push
jns
pop
fidivl
popf
xchg
cld
cmp
xchg
xor
bound
mov
out
test
aas
jmp
mov
adc
jecxz
loop
mov
ret
jp
sub
or
mov
loope
shll
cmc
mov
insl
repz
push
cwtl
imul
lock
cmp
pop
insl
xchg
in
mov
rclb
les
lret
pop
inc
out
rorl
push
insl
test
es
sahf
popa
movl
mov
movsb
pusha
cmp
sarl
cmc
sub
xchg
sbb
call
mov
mov
adc
sahf
inc
mov
jns
in
adc
mov
lret
mov
faddp
cld
dec
inc
add
jge
and
mov
adc
std
ss
das
mov
in
sbb
and
push
and
shll
call
ret
and
aad
sbb
xor
leave
pop
aam
mov
scas
in
fs
mov
aas
mov
setnp
sarb
adc
aam
jae
jl
push
out
pop
data16
mov
test
or
adcb
pop
lods
and
clc
bnd
inc
icebp
cmpl
out
dec
xchg
movsb
out
fstpt
push
sbb
inc
inc
and
out
cld
ljmp
nop
roll
ret
movsl
and
dec
or
ret
int
ss
lods
cmp
testb
repnz
jne
enter
int
mull
cmc
aaa
mov
pop
sbb
aad
push
dec
das
or
inc
ja
bound
cmc
fyl2x
test
pop
jno
jmp
insb
xchg
aam
inc
js
lret
sub
sub
rol
xchg
pop
ja
mov
aad
mov
stos
jmp
in
cmpsl
sub
xchg
call
inc
aas
cld
mov
nop
push
nop
in
lahf
arpl
pop
roll
flds
scas
sbb
rorb
dec
push
push
outsl
and
repnz
or
mov
lds
setp
add
nop
pop
pop
rcrl
cwtl
cmp
repz
ljmp
mov
divb
stos
emms
jle
or
and
lock
adc
movsb
inc
mov
js
fnstsw
ljmp
pushl
add
cmp
xchg
into
mov
push
adc
insl
xorb
push
inc
mov
and
sti
xlat
sti
add
gs
mov
mov
lods
cmp
or
cmp
pop
sbbl
and
into
mov
xchg
dec
pusha
arpl
lock
add
jne
sbb
jmp
orb
hlt
mov
fstl
fwait
stos
push
jmp
sbb
xor
add
mov
push
dec
out
push
arpl
cmp
pop
dec
sahf
fisttpll
negb
out
scas
cli
jnp
sub
jp
fcmovbe
or
xchg
pushf
pop
add
test
jge
test
int3
dec
inc
and
pop
cmp
mov
mov
sub
outsb
loop
cmp
leave
mov
repnz
adc
push
sub
int
je
sub
adc
jb
xchg
movsl
push
dec
dec
pop
mov
inc
inc
das
int
dec
cmp
rclb
gs
incb
sahf
mov
cwtl
mov
hlt
push
lcall
jnp
fnstcw
enter
jecxz
scas
xor
int
pop
jl
imul
daa
or
push
dec
ljmp
in
and
cmp
shll
or
cmp
xor
mov
in
mov
jb
xor
mov
test
inc
pop
cmp
jne
stc
push
or
or
scas
sbb
ds
scas
cmpsb
mov
call
mov
data16
clc
jno
sub
in
pop
in
das
int3
mov
in
mov
aam
add
xor
out
gs
loopne
in
sbb
xor
ja
fwait
dec
or
out
insb
into
fstps
rcr
or
mov
imul
adc
orb
xchg
push
inc
mov
into
adc
into
cld
rorb
dec
in
subb
das
mov
repnz
fisttps
outsb
cmp
jecxz
es
jg
scas
hlt
lods
test
fldt
es
sbb
nop
cmpl
pop
adc
xchg
xchg
jmp
pop
push
mull
inc
or
push
and
adc
das
or
push
xchg
andb
mov
lods
xchg
pop
cmp
push
push
fidivrs
jb
xchg
fsubs
imul
ret
lds
lea
adc
pop
sub
xchg
popf
aam
sbb
inc
xor
or
sar
lock
mov
push
jbe
mov
gs
mov
popa
cmc
fisubs
sub
pop
cld
repnz
xor
test
daa
cmc
adc
scas
jne
push
lock
subb
in
dec
sbb
pop
jmp
dec
lcall
movsl
mov
bound
lahf
jne
sub
cmp
fcomps
mov
dec
call
cli
dec
mov
mov
pop
or
pop
pushf
ds
outsl
mov
pop
jmp
stc
inc
test
rclb
xor
and
add
add
jle
sub
xchg
out
popa
je
jns,pn
mov
pop
jg
adc
jl,pn
js
dec
fstps
xchg
jp
jo
inc
adc
in
sub
test
in
dec
lods
mov
mov
test
aam
xchg
shlb
popa
and
addr16
xor
js
adc
hlt
fldl
faddl
and
and
xchg
sbb
add
pop
fcmovnb
xchg
cwtl
add
xchg
xchg
test
aam
std
mov
mov
pusha
icebp
adcl
xchg
addl
lock
ja
out
push
sub
jb
ficompl
imul
cwtl
mov
sahf
loop
popa
aad
or
dec
lock
aam
icebp
in
rorl
sub
out
mov
jl
or
popf
inc
pop
loop
test
loop
or
push
lods
xchg
cmp
dec
pop
lds
loope,pn
loop
stc
cmp
or
insb
leave
xor
jmp
push
push
or
jae
jp
out
inc
inc
dec
lods
fmuls
stos
lret
jecxz
pop
or
aad
scas
add
add
pop
inc
lret
aad
scas
aad
inc
jle
inc
std
gs
pop
jge
adc
push
pop
lahf
ds
hlt
mov
test
adc
xlat
sbb
fwait
les
out
adcb
ds
mov
rorb
inc
or
jp
jno
int
repz
nop
push
pop
cmp
aam
scas
mov
ss
aaa
mov
out
mov
cltd
lds
add
push
arpl
jb
test
pop
cmp
enterw
xchg
cmpsb
jg
sbb
lods
jno
sub
outsb
cmpsl
mov
or
xchg
fndisi(8087
push
dec
dec
movsl
dec
adc
rcrl
orl
or
xor
aad
adc
roll
mov
ret
jg
in
sub
insl
fwait
sub
push
pusha
insb
inc
shlb
fisubrl
adc
int3
and
ret
push
scas
xlat
movsb
dec
or
mov
shll
sbb
mov
xor
sbb
loopne
pop
fiaddl
js
scas
adc
test
sub
mov
sahf
add
aaa
push
pop
pop
jge
jle
aas
fs
xor
jle
adc
dec
jl
shrb
sbb
pusha
jmp
roll
out
aas
sbb
leave
mov
push
jae
mov
ret
test
enter
mov
fs
or
hlt
clc
fmuls
xlat
dec
jb
decb
or
pop
inc
negl
or
popf
inc
adc
adc
adc
xchg
dec
lcall
cmp
and
jbe
pop
dec
xchg
inc
adc
lds
aad
dec
cmc
push
stos
inc
rorl
or
push
insl
call
mov
adc
mov
mov
enter
pop
hlt
fs
outsl
lret
and
pop
push
stos
mov
push
iret
jmp
dec
inc
repnz
jnp
shrb
pop
adcb
aaa
rcll
inc
icebp
push
in
fwait
ljmp
daa
lahf
stc
mov
or
adc
mov
imul
cmpsb
xchg
iret
add
jecxz
ljmp
imul
int
add
dec
or
sub
out
rolb
jle
rcr
xchg
leave
mov
dec
jne
and
jle
mov
dec
mov
pop
test
add
test
sbb
sub
iret
test
xlat
add
jmp
mov
or
mov
mov
xor
mov
subl
xor
movzwl
or
mov
mov
xorl
add
addl
movzwl
mov
mov
movzwl
sbbl
xor
sbbl
add
mov
mov
mov
inc
mov
cmp
movl
jne
mov
mov
orl
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
dec
mov
mov
xor
xor
sub
add
mov
mov
add
movl
movl
movl
xor
mov
xor
mov
mov
adcl
xor
add
mov
movl
mov
je
andl
mov
adc
mov
xor
orl
xor
adcl
sub
sbbl
sub
adc
xor
mov
mov
mov
subl
add
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
add
or
dec
mov
mov
mov
add
notl
xor
mov
xor
add
xor
or
sub
imul
mov
mov
orl
add
and
adc
mov
mov
add
mov
addl
lea
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
subl
sub
add
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movzbl
or
mov
xor
orl
add
movl
jne
movl
jmp
andl
mov
inc
mov
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movzbl
xor
sub
sbb
xor
neg
mov
mov
mov
sbb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
adcl
xor
sub
xorl
sub
adcl
xor
movl
mov
not
mov
mov
movl
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
push
pushl
call
jmp
mov
xorl
jmp
fnstsw
mov
aam
aas
push
mov
push
test
mov
rcrb
jb
fdivp
sbb
or
sub
mov
vmovlps
loop
sbbl
addr16
sbb
pop
ja
in
or
loop
shlb
data16
jne
fistpll
xchg
push
fimull
mov
jle
mov
hlt
pop
scas
xchg
ret
inc
iret
lods
mov
ret
cli
shrb
cs
scas
xchg
mov
mov
jmp
xchg
xchg
pop
jmp
sbbl
cmp
push
loop
jb
in
into
add
push
movsb
xlat
inc
jge
jecxz
pop
outsl
int
adc
cwtl
sbb
sbb
sahf
insb
mov
pop
xchg
xchg
shlb
lret
jg
aas
or
stos
inc
push
inc
adc
imul
sub
mov
cmpsb
ja
aam
imul
inc
aad
ds
xor
xor
inc
in
adc
rcrl
sbb
sub
pop
sbb
dec
jne
bound
push
bound
fisttps
lret
push
pusha
repnz
das
xchg
add
jbe
cltd
outsl
push
ret
cmp
js
xchg
sbb
jg
enter
addr16
fstl
dec
pop
fistps
sub
mov
imul
ret
in
sbb
hlt
or
sbb
ljmp
hlt
sub
adc
mov
cmp
adc
jae
gs
shlb
data16
mov
ret
dec
ljmp
mov
adc
fwait
pop
mov
push
lret
cmp
mov
dec
dec
movsl
xchg
or
mov
test
test
sub
ss
ficoms
addr16
daa
and
mov
mov
jbe
out
push
sarb
fsts
sub
out
add
mov
repz
push
sbb
movsb
mov
cld
pushf
test
leave
sub
gs
lods
cli
mov
mov
icebp
and
lea
fstps
fsubl
jbe
push
popl
xor
fsubs
xchg
push
xor
mov
in
mov
xchg
das
scas
jne
add
lock
int
sar
dec
jno
lea
push
xchg
dec
xor
scas
mov
out
cs
sahf
cltd
clts
jae
cltd
sbb
insb
mov
sbb
dec
push
cmp
outsl
stos
testl
push
nop
lods
sbb
cltd
xor
sub
jns
mov
js
adc
cld
adc
fwait
xchg
add
xor
or
and
sub
lea
mov
outsl
cmpsl
xchg
jbe
shll
lods
pop
int3
inc
xchg
or
sbb
ds
cmp
in
cmp
or
scas
dec
inc
fsub
lret
fs
jns
rcr
mov
push
fcmovu
lcall
pushf
sbb
in
dec
pushf
add
pop
sbb
fidivs
cmpsl
bound
xor
jo
rcll
jmp
inc
dec
stos
ret
sbb
arpl
sbb
sbb
push
jp
jl
or
push
data16
xchg
mov
adc
sub
ret
jge
mov
pop
fsubl
lock
cmpsb
inc
movsl
dec
loopne
mov
and
xchg
nop
arpl
in
das
cli
push
lods
push
in
into
sub
and
jg
push
mov
or
pop
jns
inc
sbb
into
mov
mov
stc
and
jmp
lods
cmp
inc
imul
lds
xchg
inc
xor
or
insl
incl
cwtl
leave
inc
rorb
dec
in
and
adc
sti
fsubs
lret
push
add
pop
add
imul
mov
cmp
pop
pop
shlb
repz
das
mov
cwtl
mov
pop
sbb
in
lds
shl
sar
lods
out
addb
aas
popa
jae
popf
xchg
ljmp
clc
imul
insb
loope
mov
ljmp
inc
push
repnz
cli
or
or
in
jmp
adc
push
xor
pop
xor
in
pop
fstpl
sbbb
xchg
fwait
repnz
sub
sub
add
mov
and
nop
out
cmp
out
clc
sarb
in
lret
add
into
or
mov
fbstp
outsb
out
mov
inc
xor
or
out
cmpsb
fwait
jb
fcomi
iret
xor
jnp
or
dec
dec
sub
lcall
xchg
ljmp
jae
adc
jo
cltd
add
or
repnz
scas
pop
sub
in
sub
in
jge
bound
call
jno
sbb
push
lods
dec
or
jmp
mov
sbb
data16
push
popa
mov
lea
sub
xchg
out
mov
cmpsl
and
lahf
fnstenv
mov
mov
cli
push
push
cmp
mov
roll
xor
mov
adc
loopne
ja
rol
add
cli
jo
or
sbb
stos
jo
jmp
adc
pop
adc
adc
push
bound
lods
or
stos
lods
das
sarl
and
out
mov
nop
or
hlt
repnz
jae
cmp
and
xchg
sahf
mov
xchg
lock
add
scas
cli
adc
aad
aas
enter
andb
xchg
mov
mov
dec
xchg
sbb
sub
mov
xor
adc
jmp
xor
cld
inc
pop
push
xorb
xchg
std
xchg
arpl
jmp
imul
ret
adc
insb
xor
ljmp
repz
fwait
repnz
dec
shl
fildll
push
sbb
rorb
rol
ret
ss
dec
bound
dec
fwait
or
maskmovq
testl
pop
loop
inc
mov
and
scas
xor
gs
and
xchg
fidivs
push
xchg
pushf
pop
pop
jle
out
push
mov
sub
mov
pop
cmp
loope
sub
int
adc
xor
aam
imul
jmp
add
sub
jp
arpl
jbe
inc
mov
cmp
cld
cmp
daa
xchg
test
inc
cmc
repz
movsl
xor
jle
add
lcall
rcrb
dec
pop
mov
shlb
fsubrl
xchg
faddp
lret
push
sub
jecxz
pop
adc
fldz
inc
mov
fildll
pusha
xchg
cmc
cmpsl
lret
xchg
fstl
jl
or
push
ljmp
cmp
jg
pop
pop
sub
movsb
mov
dec
xlat
setne
jne
sub
push
enter
sbb
dec
jle
add
cld
fxch
nop
and
in
mov
sbb
inc
push
push
dec
mov
fldt
dec
aam
ljmp
daa
push
das
lods
imul
clc
mov
pop
push
movb
cltd
jbe
mov
jmp
iret
int
dec
lret
adc
or
xor
popf
roll
enter
lret
shlb
push
xchg
out
add
push
and
mov
push
dec
lret
les
iret
and
bound
inc
pop
cld
push
fidivrs
and
mov
push
xchg
add
insl
jp
and
das
rcrb
lds
dec
jnp
and
lret
fnstcw
xchg
adc
lock
out
add
test
mov
cmp
jae
sahf
xchg
push
adc
bound
adc
jns
faddl
cmp
divb
pop
faddl
out
orb
out
inc
inc
ljmp
dec
mov
andb
lods
xlat
xor
dec
sbb
cli
aaa
pavgb
or
mov
sti
or
mov
js
pop
mul
test
scas
cmovge
pushf
fsqrt
sti
repnz
inc
mov
or
inc
push
adc
out
mov
pop
or
sahf
lock
pushw
dec
mov
inc
int
cli
pop
xor
jb
mov
call
jle
dec
imulb
cmp
loope
sbb
pop
out
aas
cmpsb
out
adc
jo
sub
std
lods
pusha
xor
testb
push
pop
add
test
jns
mov
and
mov
hlt
int3
shr
sbb
push
fdivs
inc
insb
mov
icebp
mov
popf
mov
mov
sti
addl
jne
pop
gs
sub
push
lods
outsb
cmp
call
in
iret
loope
lds
pop
jb
mov
mov
movsl
or
das
bound
in
popf
dec
fistpll
xor
aad
rcl
add
sbb
test
fbld
js
adc
sbb
inc
inc
shlb
push
rcl
pop
dec
dec
lods
push
aad
pop
out
iret
sahf
movsb
in
xor
pusha
cmc
dec
mov
jne
sar
sti
sbb
and
hlt
push
aaa
cmp
movsl
dec
test
sbb
lea
jo
lea
xchg
adc
dec
ja
ds
pop
mov
push
icebp
push
inc
and
jne
push
mov
shrl
mov
sbb
jbe
xchg
ret
decl
adc
adc
jne
das
lds
je
lods
and
jb
js
push
arpl
add
pop
mov
jecxz
mov
or
in
sbb
testb
call
in
sbb
pusha
adc
jb
xchg
popa
push
mov
ljmp
lcall
out
sbb
leave
stc
sub
cmp
adc
es
jp
lcall
xor
mov
jmp
lcall
pop
test
roll
sub
fstl
cltd
or
scas
sub
or
cmp
cmp
sub
xchg
in
xor
mov
imul
xor
pop
cmc
and
sbb
jo
dec
arpl
sbb
dec
jb
lds
mov
fisubrs
cmp
xor
push
pop
mov
sbb
pop
mov
cltd
sbb
in
mov
fldenv
ljmp
mov
mov
mov
sbb
push
out
mov
pop
fstpl
jb
dec
adc
ljmp
cli
lods
adc
jo
aam
adc
pop
aam
lods
push
sub
adc
jae
sub
shl
int
pusha
mov
jns
repz
stos
shll
sar
add
lods
testl
aam
xor
jb
pop
adcb
arpl
sbb
orb
mov
adc
jmp
leave
inc
je
pop
xchg
xchg
aam
jmp
and
daa
mov
sbb
inc
fs
mov
lcall
mov
cmp
mov
xchg
das
inc
insl
jg
mov
adc
sub
icebp
mov
clc
pop
sub
testb
ja
fldl
mov
adc
pop
cmpsl
jmp
mov
aad
jo
adc
jp
mov
jg
dec
notb
pop
or
xlat
inc
push
xor
pushf
aas
mov
cltd
mov
nop
push
mov
jg
cli
stc
cmp
jo
or
sub
sub
xor
sub
mov
movsb
sub
mov
mov
pop
and
jp
push
push
aaa
add
inc
jbe
mov
sub
gs
cmp
mov
fwait
int3
jle
stos
into
push
das
jmp
stc
cltd
sbb
movl
sbb
cmp
icebp
nop
mov
imul
xorb
fbstp
dec
xchg
in
scas
in
es
xor
inc
scas
fldl
sub
pusha
sub
cmpl
inc
cwtl
mov
jbe
into
push
test
sub
cltd
mov
sub
shr
pop
dec
stos
outsb
xchg
test
mov
sub
dec
and
shrl
out
fmull
andb
and
jb
data16
xchg
mov
lret
dec
repz
call
icebp
sarl
mulb
xchg
subb
and
sub
sub
sub
xor
loope
in
out
adc
sub
sbb
fs
scas
cmpsl
jmp
sti
repz
cmp
fstpt
in
mov
xor
cmp
shrb
shll
pop
jl
mov
pop
addr16
lcall
push
mov
xor
popa
add
xorb
cwtl
aam
repz
or
std
pop
sub
fs
mov
mov
adc
rcll
mov
sub
cld
dec
mov
arpl
stc
stc
clc
enter
out
cld
pop
aaa
or
dec
in
or
cmp
mov
push
mov
cltd
cwtl
mov
push
add
mov
and
inc
lods
sub
iret
shlb
sub
and
sbb
in
hlt
sahf
arpl
push
add
insb
cs
pop
jge
pop
xchg
sbb
mul
mov
push
cmp
outsb
cmpsl
dec
lcall
test
repz
sti
cmp
inc
adc
and
or
add
loopne
mov
jge
mov
mov
sahf
aam
xchg
mov
add
mov
push
lahf
pop
push
push
fwait
jnp
lds
adc
push
push
cld
lods
or
subb
pop
dec
or
scas
or
out
fdivrs
movsb
xchg
mov
adc
sbb
loop
enter
mov
repnz
xor
push
movsb
add
dec
cmp
iret
pop
pop
orl
out
test
aas
pop
mov
jnp
and
and
lea
ret
ja
lahf
mov
xchg
jb
daa
lahf
dec
insb
mov
fwait
pop
nop
pop
fwait
ss
test
jg
sbb
mov
sub
cld
aas
adcl
pop
popa
push
mov
jns
movsb
jae
mov
inc
lods
adc
std
add
cmp
jecxz
nop
pop
jle
mov
inc
in
sub
ret
mov
adc
dec
mov
push
shl
ret
outsl
ret
cmp
xchg
icebp
rcrl
cmp
pusha
xchg
rcrb
mov
add
jae
popa
mov
sarl
and
insl
dec
stc
cmp
and
fidivrl
jge
mov
mov
mov
sahf
inc
dec
push
fistps
iret
popf
sbb
mov
scas
dec
mov
idivl
push
and
or
mov
shll
mov
jmp
int
sub
imul
pop
xchg
or
and
push
ljmp
negl
rcll
add
inc
xor
jnp
dec
jl
bound
dec
fsubs
or
mov
bound
nop
adc
insl
add
cwtl
aaa
fnstsw
xor
test
mov
mov
aaa
je
arpl
stos
push
lahf
dec
adc
gs
test
cwtl
adc
fldenv
adc
rcrl
test
jbe
sbb
movhps
call
sbbl
dec
adc
mov
std
loopne
in
mov
cld
mov
shrl
jle
lcall
call
cmc
jnp
movsb
nop
push
pop
adc
mov
jl
add
and
jne
in
jmp
shl
inc
push
adc
sarb
stos
js
fnstcw
ds
jle
mov
mov
dec
jmp
ret
out
xor
add
push
xchg
stos
fimull
jmp
out
dec
mov
repz
or
in
pop
lcall
cmp
pop
shll
pushl
sbb
sub
cmp
or
mov
inc
mov
sbb
pop
dec
add
mov
jnp
rclb
and
pop
mov
stos
inc
imul
adc
cs
inc
lock
hlt
clc
inc
add
inc
test
xor
int
pop
gs
inc
lret
pop
mov
sarl
cmp
rclb
inc
mov
mov
cmpsl
add
mov
inc
pop
stos
and
xchg
adc
cmpsb
in
xchg
cld
cmp
les
sbb
mov
cs
arpl
cmp
cmp
mov
les
sub
mov
ja
lods
mulb
cmp
jmp
mov
jae
fwait
and
push
aas
inc
sbb
xlat
sar
xchg
test
roll
mov
mov
mov
icebp
ret
mov
dec
hlt
lret
lret
dec
das
pushf
lea
enter
push
xchg
mov
inc
mov
adc
mov
lcall
mov
cmp
ret
jnp
inc
mov
inc
pop
fisubrs
stos
mov
out
ficomps
lds
jmp
out
xor
lock
pusha
or
jb
jno
sarl
xor
rorb
xor
rcr
sub
out
xlat
jb
in
inc
and
sub
fwait
xor
ss
dec
sub
sub
or
dec
dec
out
ret
push
negl
insb
xchg
aaa
mov
xlat
arpl
or
aam
lcall
std
xchg
or
inc
cld
cmc
and
movsl
cmpsb
push
sbb
scas
or
pop
or
test
lods
jo
repz
mov
mov
add
sub
stc
mov
nop
push
sub
xchg
or
pop
jmp
out
scas
inc
inc
inc
cwtl
scas
push
icebp
stos
lret
dec
mov
xor
jae
cmp
aam
mov
test
or
mov
xchg
subl
dec
xchg
aad
test
sbb
jl
dec
xchg
mov
inc
push
inc
mov
mov
rcrb
xchg
inc
mov
adc
aad
out
inc
and
jmp
xchg
push
jp
fwait
out
out
xor
xor
hlt
cmp
outsb
sub
xorb
popf
stos
icebp
mov
jb
loop
fsubrs
sete
xor
and
add
std
push
scas
mov
movsl
mov
xchg
jb
dec
shrl
jge
push
ss
sub
flds
adc
sub
pusha
insb
inc
out
dec
daa
xchg
push
lock
lcall
clc
or
cmp
add
mov
mov
mov
sub
dec
xchg
xor
cmpsl
popa
inc
push
mov
mov
pop
sahf
and
xor
loop
cmpb
push
lods
jnp
pop
jp
or
pop
popa
dec
adc
lahf
xlat
dec
cmp
mov
shlb
mov
out
loope
pextrw
cmp
inc
xor
repz
xor
cli
stos
sbb
scas
std
xchg
pop
mov
leave
adc
pop
sub
pop
push
repz
or
shlb
ss
mov
push
or
push
jae
xor
hlt
in
jl
nop
add
popa
je
xchg
aas
jg
jl
lock
jecxz
pushf
and
and
xchg
pop
sarb
in
pop
jmp
inc
lock
test
in
lds
xor
add
add
outsb
ret
mov
jae
fs
cmpsb
jp
dec
mov
inc
cli
mov
nop
and
mov
ficoml
mov
add
or
or
pop
pop
and
add
imul
out
xor
xor
pop
test
cwtl
mov
scas
aaa
in
sbb
fisubs
mov
ret
icebp
lods
sub
js
inc
mov
adc
out
mov
movsl
test
or
rcll
hlt
shr
in
cmc
xor
mov
lret
sub
mov
jecxz
jecxz
pop
sbb
push
shll
xchg
idivl
imul
scas
jecxz
cmp
xchg
push
mov
sub
pusha
rcll
and
inc
add
daa
push
mov
mov
mov
dec
adc
arpl
mov
pop
les
out
aam
cmp
mov
or
data16
in
push
sub
ja
and
mov
pop
cvtdq2ps
fiaddl
cmp
into
sbb
popf
pop
or
xchg
test
stos
inc
mov
loopne
xor
or
cmpsl
jns
lcall
lret
mov
xchg
sti
js
add
outsb
mov
outsb
subb
ss
mov
inc
adc
shr
pop
adc
mov
pop
out
ja
mov
push
xlat
btc
loop
in
add
loopne
push
jg
jle,pt
mov
pop
xchg
inc
sub
jle
int3
xlat
ja
xlat
xchg
adc
fnstcw
test
imul
cltd
fcmovne
sahf
and
xchg
ret
mull
vcmpss
push
dec
cmp
mov
jmp
mov
in
int
xchg
shll
mov
movsb
adc
mov
incl
pop
adc
sbb
xor
push
out
inc
push
js
sarb
and
xchg
popf
push
imul
mov
fidivrs
sub
jle
movsb
pop
pop
dec
sbb
int3
rcrb
int
add
fcomi
jne
test
pop
roll
int3
enter
xchg
enter
ret
push
jecxz
push
lahf
test
push
popf
pop
sub
or
std
sub
and
je
jecxz
mov
xor
add
loope
adc
hlt
adc
lods
pop
push
push
jp
in
mov
sbb
cmp
mov
and
mov
pop
cli
mov
push
mov
stc
jae
dec
cmc
jb
sbb
daa
ret
xchg
and
out
cltd
cmp
mov
iret
jecxz
and
mov
dec
int
mov
dec
push
out
scas
xor
and
jecxz
mov
mov
push
sti
adc
push
pop
test
out
sub
xor
loope
ss
icebp
inc
neg
dec
mov
adc
dec
mov
test
pop
push
pop
lcall
test
dec
adc
dec
pop
in
fistps
cld
fwait
dec
adc
mov
cmp
inc
loope
loope
xchg
nop
pop
xchg
pusha
or
jle
pop
aam
inc
in
lcall
adc
xchg
sbb
rcr
jb
jbe
push
mov
jg
sub
pop
cmpsb
stos
pusha
int3
shl
stc
in
or
in
shll
lcall
fnstcw
cmp
xchg
jecxz
in
dec
shll
cld
jp
xchg
sbb
push
inc
cli
sbb
push
ret
adc
in
fnstcw
cmp
xchg
shll
rcrb
push
inc
stos
pop
or
sub
negl
ja
pop
scas
dec
push
test
js
rclb
push
and
in
fs
jbe
notl
dec
mov
adc
loop
lahf
lods
sbb
mov
loope
adc
cli
pop
scas
daa
adc
nop
inc
lods
rcr
xorl
or
test
mov
lock
decb
push
cs
mov
sub
in
add
out
pop
ja
arpl
push
ja
sub
inc
bound
movsb
cld
and
fwait
leave
lods
or
push
and
push
or
or
lahf
xor
dec
outsl
cmp
inc
push
jo
lea
mov
mov
jmp
push
cmp
incl
add
icebp
sub
hlt
outsb
mov
sbb
and
inc
and
jl
pop
or
ret
insl
sub
xchg
call
mov
xor
adc
std
iret
ret
add
addr16
js
loope
add
repnz
cwtl
pop
stos
push
xchg
jl
push
sbb
outsl
adc
rcll
out
aam
les
xor
dec
jl
cmp
and
pop
pop
xchg
pusha
bound
cmpb
cmp
rorl
mov
sbb
call
ss
std
mov
push
inc
push
outsl
lcall
in
inc
mov
xlat
int
shrb
push
loop
mov
or
fadd
push
in
xor
and
sbb
stos
xchg
insb
mov
push
pop
arpl
ret
cmc
pop
pop
adc
push
sbbb
dec
lds
xorb
negb
mov
cwtl
dec
aad
xor
cmp
push
dec
mov
enter
sbb
cmp
jg
sbb
pop
push
sub
sbbl
movsb
pop
push
test
movsb
sbb
outsb
inc
fcmovnb
pop
mov
int3
xchg
ret
data16
inc
pop
and
mov
xor
sbb
mov
je
pop
cmp
add
cli
or
or
push
mov
insb
adc
iret
imul
sub
orb
sahf
jge
lods
and
inc
fdivs
push
clc
lds
pop
fwait
aaa
mov
and
dec
xchg
mov
pop
aad
out
lcall
pop
sahf
fldl
gs
shrb
push
sbb
xchg
jp
pop
mov
xor
xchg
jl
rorl
loop
mov
pop
add
xchg
inc
inc
push
fildl
jmp
cli
mov
xchg
aaa
sub
xchg
sbb
orb
push
and
jle
pop
fldcw
pop
in
mov
cmpsb
lea
add
jecxz
mov
inc
mov
add
mov
cmp
inc
pop
das
add
push
cmpsb
push
mov
xchg
mov
mov
outsl
push
out
outsb
aas
daa
cld
lods
inc
mov
dec
push
ds
dec
inc
mov
mov
add
pop
or
xchg
jp
mov
mov
adc
mov
mov
insl
out
ret
das
push
mov
xchg
jg
imul
testb
jns
in
cmp
stc
pop
inc
stos
push
jbe
mov
das
sbb
push
pop
jmp
pop
jno
xor
sbb
lret
movsb
les
push
jne
fwait
jp
or
pop
rcr
add
inc
cmp
push
je
inc
fs
xor
add
sub
mov
aaa
sub
push
sub
cltd
mov
aad
mov
xchg
pusha
fcmovb
mov
ljmp
and
xchg
or
mov
pusha
iret
add
pop
add
push
cld
jl
and
cmpsb
mov
add
roll
cld
mov
jg
mov
and
cmp
jl
jo
imulb
or
adc
subb
inc
mov
jnp
sub
jge
test
rcr
push
fsub
inc
jne
shr
add
mov
ss
cld
adc
sub
cmpsl
ljmp
andb
xchg
mov
jmp
cli
sub
dec
sbb
daa
in
int
jo
and
mov
add
add
aas
fcmove
lock
sub
inc
je
cli
bound
xchg
ret
adc
sub
push
mov
or
jae
lods
jns
fmull
cmc
dec
cs
mov
shr
xchg
loop
in
insl
loope
imul
jle
xor
decb
xor
mov
insl
loope
leave
das
cmpsb
jno
sarl
push
and
jmp
cmpsb
aaa
xor
in
pop
or
adc
mov
loope
adc
outsl
and
fidivl
adcb
pop
push
jbe
aaa
lret
mov
je
mov
repz
mov
jbe
aas
and
out
lret
icebp
aaa
mov
push
add
cmpsb
xchg
jp
addr16
pop
mov
fsubrl
mov
jle
js
dec
pop
xchg
sub
and
pop
jno
ficoml
jmp
dec
lcall
in
mov
dec
clc
jecxz
mov
outsl
in
jle
jl
xorb
addb
ds
std
push
ss
mov
add
in
push
mov
xor
loope
mov
int3
popf
daa
sub
aam
jo
loopne
scas
add
cli
mov
stc
ret
mov
sbb
jmp
mov
mov
popf
ds
mov
movsl
sbb
das
cmp
and
pop
dec
es
js
add
imul
inc
jo
fwait
loope
xor
clc
popf
push
and
cmp
popa
mov
or
sbb
int3
cmp
pushf
aas
sbb
mov
jns
inc
and
cmpb
cmpsb
fbld
ret
sub
insb
mov
xor
push
push
or
loopne
inc
fisubs
insb
xchg
cmp
inc
mov
and
in
sub
cmp
lcall
push
ficomps
dec
aad
ja
jnp
stos
inc
jbe
dec
xor
mov
jnp
xchg
mov
pop
and
lret
jle
mov
mov
loop
subl
sbb
or
and
mov
imul
das
mov
mov
sub
movsb
das
pop
popf
jne
sub
add
add
out
call
stc
and
sbbb
sbb
add
inc
in
push
dec
sti
test
xlat
lret
mov
testl
jns
jb
mov
arpl
cmp
inc
inc
je
pop
flds
or
cmp
lods
add
push
inc
stos
xor
add
push
xor
inc
repz
out
mov
sbb
aas
mov
mov
fwait
pop
xor
xchg
sub
mov
jne
test
adc
rep
popf
pusha
ljmp
jl
sbb
mov
daa
or
dec
shll
leave
stos
shlb
leave
xchg
cmp
stc
out
mov
mov
out
mov
lea
add
xor
adc
aad
rcll
sub
scas
aaa
add
add
inc
popa
ret
outsb
xchg
adc
dec
ftst
testl
lret
sbb
xchg
xorb
insb
push
je
mov
test
add
arpl
push
mov
jmp
cmpsb
pusha
mov
and
popa
inc
nop
pop
out
cmp
orb
movups
or
data16
jmp
push
cmp
cld
xor
dec
inc
adc
add
mov
add
cmp
hlt
sarb
adc
xchg
xchg
sbb
cltd
push
xchg
pusha
dec
jb
filds
jge
fcoms
jmp
lcall
mov
add
pop
cld
mov
push
enter
loopne
push
inc
sub
je
andb
jecxz
scas
adc
ljmp
les
push
add
dec
pop
mov
sbb
cmpsl
int
stos
mov
jbe
pop
xor
or
mov
jle
pushf
in
jnp
cltd
pop
sbb
cli
pop
fbld
push
xlat
cmp
fstl
mov
aaa
add
pop
xchg
call
add
inc
add
xchg
test
pop
lahf
add
dec
or
adc
cmpsl
scas
jae
xlat
sti
adc
inc
sbbb
cmp
lret
add
negb
adc
pop
notl
lahf
aad
or
sub
imul
xchg
jl
loopne
push
xor
fistl
popa
cwtl
mov
ja
ret
movl
jp
ljmp
push
pop
into
aam
repnz
adc
cmp
dec
mov
mov
mov
sub
rclb
popa
sbb
sub
lods
jns
cmp
aas
gs
repz
ficoml
out
mov
push
push
out
xor
rolb
add
inc
add
fsubrs
rcrl
cmp
sub
xor
mov
mov
mov
add
subl
imul
add
mov
add
mov
mov
andl
add
addl
or
mov
adc
mov
sub
mov
incl
add
xor
adc
mov
mov
add
mov
subl
add
orl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
jmp
inc
xor
jae
mov
aam
cmpsl
push
jge
rcrb
jb
mov
movsl
mulb
fimull
lock
clc
jg
sahf
mov
mov
loop
call
push
mov
mov
xchg
outsl
loopne
xchg
loope
adc
push
jne
fmuls
mov
adc
sti
fsubrl
xor
cwtl
push
dec
imul
bound
ja
mov
fwait
add
jae
aas
push
dec
mov
imul
lds
inc
lock
mov
rcll
fcmovbe
adc
icebp
scas
xor
xchg
inc
das
test
lods
xor
jle
pop
and
mov
es
ficoms
shrl
add
cmpsl
dec
sub
outsb
sahf
mov
push
bound
mov
inc
daa
adc
adc
hlt
stc
xchg
push
leave
stos
test
inc
cld
out
xor
xor
inc
and
xor
jb
dec
jbe
jbe,pn
cmpb
outsl
add
fistps
lcall
div
pop
xor
imull
mov
mov
call
outsb
sub
sbb
cmp
ljmp
jp
mov
sub
clc
stos
pop
aad
and
dec
insl
or
xchg
dec
test
mov
inc
fcomps
out
push
call
loop
cld
jle
mov
test
cmp
cltd
push
mov
pop
cmpsb
ret
xor
lea
movsl
push
sub
stos
mov
fsubl
jle
and
mov
cmp
out
mov
fists
out
fbld
sbb
cmc
das
popa
idivl
in
add
dec
les
xchg
pop
add
xor
in
ja
or
push
xchg
jnp
jmp
cmpsl
cmp
mov
mov
inc
fwait
xchg
das
popf
leave
jmp
loop
push
dec
popf
add
xchg
mov
stc
jg
and
fldenv
imul
mov
imull
daa
dec
enter
push
xor
mov
inc
and
push
ret
push
and
daa
movsl
adc
decl
cmpsb
push
pop
sbb
push
dec
leave
and
fsubr
jo
or
int
nop
ss
into
adc
jge
sub
push
mov
push
cmp
ja
in
cmp
insl
dec
ret
xchg
shlb
les
lret
jne
pop
pop
or
iret
or
or
push
or
loope
cmp
or
iret
jnp
or
mov
inc
mov
cmp
or
or
fsubrl
xor
xlat
cmp
add
call
jl
xchg
mov
lret
stos
insl
daa
xor
out
rclb
shl
data16
imul
push
push
or
mov
push
xchg
push
adc
movsl
inc
and
mov
xor
cmp
mov
inc
sub
jge
sbb
cs
mov
addr16
xchg
mov
je
mov
lea
adc
cmp
and
lcall
xchg
dec
push
lods
ja
push
je
inc
sbb
fchs
cltd
xor
xchg
aad
repz
pop
sub
dec
insb
or
pop
fstpl
aas
mov
push
hlt
sub
fimull
xor
movsl
in
mov
add
js
lret
std
lea
xor
or
stos
mov
ljmp
aaa
mov
mov
bound
out
jne
sub
push
aam
repz
shrl
int3
inc
aam
cld
jns
das
mov
add
sub
shlb
adc
push
sti
loopne
dec
in
mov
es
push
add
bound
icebp
push
dec
mov
out
jbe
insl
test
lcall
in
xchg
inc
inc
dec
sbb
sub
popa
rclb
xor
sub
dec
ds
inc
mov
or
insb
or
xlat
push
and
sbb
xchg
pop
mov
push
arpl
sbb
fldenv
xchg
cmp
jg
sbb
js
lds
fimuls
add
jge
mov
mulb
out
mov
outsl
cmpl
icebp
lret
repz
sub
enter
jp
and
mov
dec
rorl
inc
in
repz
sti
outsl
xchg
jmp
imul
pop
sti
or
add
pushf
push
ss
mov
out
cmp
cmp
decb
add
icebp
sbb
sbb
das
fsub
mov
sub
cmp
sub
cmp
or
addl
std
movsl
hlt
cmp
adc
insl
insl
les
jns
aad
cwtl
cs
or
gs
push
addb
je
int3
movb
xchg
clc
cltd
sub
int
jg
mov
cwtl
sbb
cmp
fsubs
scas
imul
pop
cld
mov
ret
ds
outsb
dec
mov
in
push
cmc
and
dec
mov
cld
mov
add
jnp
add
jae
cmpb
xor
mov
iret
mov
outsb
pop
and
push
aas
inc
push
mov
jae
out
add
or
fldcw
sti
add
adc
dec
shll
cld
cmp
pop
outsb
in
jne
adc
inc
int3
dec
lods
add
add
leave
xor
sahf
addl
pop
jae
jmp
mov
push
stos
std
or
gs
lds
jp
cli
decb
jmp
test
jmp
lods
mov
xchg
sub
sbb
insb
dec
movsb
inc
and
mov
sub
jg
sahf
and
mov
adc
jbe
into
and
fs
insl
mov
sti
xchg
fildl
fwait
jbe
sbb
xor
lds
sarb
arpl
insl
cmpsb
sahf
lret
pop
lea
mov
adc
sbb
push
addb
lcall
arpl
loop
inc
cltd
add
push
mov
fwait
xchg
cmp
cmp
repnz
out
jmp
lods
repz
in
inc
fdivs
dec
out
cmp
test
jns
jmp
icebp
xchg
cmp
fdiv
cmpl
subb
xchg
xor
popf
sbb
cmc
test
jo
inc
mov
stc
mov
insl
push
pop
jb
xor
daa
sub
ljmp
stc
inc
push
fdivrs
pop
cmpsl
adc
insb
push
das
mov
test
xor
out
adc
adc
popa
fildl
mov
push
push
cmpsl
jecxz
push
shrl
sub
fldenv
loope
xor
pop
movsl
ret
ljmp
fadd
repnz
inc
lret
and
lds
lds
xor
jle
mov
adc
xchg
mov
ficoms
cmp
or
jecxz
pop
aas
rcll
leave
fnstenv
shrb
lock
cltd
sbb
sub
mov
outsl
xchg
outsb
ret
xlat
xchg
xlat
cmc
shl
mov
inc
stos
xchg
pop
mov
cmp
bound
ret
fwait
mov
bound
out
imul
cmp
fbld
ja
or
insl
rcrl
rol
xchg
xor
push
xor
scas
mov
in
mov
cwtl
jmp
jg
fwait
dec
mov
xchg
lahf
shl
aad
imul
stc
shlb
xorb
jae
cmp
aas
inc
inc
mov
sti
cmp
xchg
leave
aaa
xor
adc
ret
or
xchg
scas
adc
repz
call
frstor
inc
mov
xchg
mov
mov
std
and
add
fisttps
and
jg
add
test
cmpsb
push
outsl
and
mov
faddl
jo
sub
mov
pop
psllq
test
enter
scas
pop
pop
test
int
test
dec
ud2
daa
lods
ret
cmp
inc
jno
add
push
les
sti
clc
dec
xchg
es
aam
dec
add
jb
mov
add
ficompl
divb
mov
xchg
sub
adc
sub
jbe
loope
push
jg
inc
push
inc
popa
pop
or
dec
adc
popa
cli
movsb
mov
fwait
loope
xchg
daa
or
stc
push
sti
addr16
test
sub
ficoms
mov
and
dec
in
sub
mov
rolb
adc
mov
jo
jge
ss
cmp
inc
scas
sbb
mov
outsl
inc
ss
sub
fisttps
mov
enter
or
inc
sahf
mov
sbb
adc
mov
mov
push
call
scas
jge
push
pop
ret
add
dec
mov
scas
ds
loope
mov
mov
outsl
dec
ret
xchg
mov
rorb
and
roll
inc
test
ficoms
sub
and
ffree
pop
lds
jl
sti
in
or
lahf
fninit
pshufw
jmp
lcall
and
gs
leave
in
push
repnz
inc
les
or
daa
inc
nop
ja
insl
mov
stc
imul
bound
rcrl
fadds
std
sbb
ljmp
add
sahf
ljmp
lahf
sub
mov
and
xlat
xchg
and
fdivl
jne
ds
sub
xchg
or
outsb
and
push
xchg
std
cmp
mov
sbb
movsl
and
xor
pusha
mov
outsb
rcrl
in
in
lods
fwait
cmp
and
movsb
aas
cmp
not
jge
sub
xchg
sti
pop
lcall
cltd
xor
jp
test
dec
popl
fisubs
mov
dec
jno
mov
loopne
ljmp
in
adc
add
adc
push
movsl
push
insl
pushf
xor
shll
enter
fmul
cmc
xlat
lds
push
ret
fnstenv
fwait
mov
je
mov
in
fidivrs
lds
sti
jnp
sub
push
in
in
aaa
mov
inc
int3
mov
dec
fdivl
mov
pushf
cmp
or
jo
ret
dec
mov
clc
fiadds
lahf
adc
shrb
xchg
mov
pop
arpl
jns
xor
in
hlt
push
fldpi
sbb
jecxz
mov
sbb
add
mov
mov
sbb
pop
sbb
ja
cmp
dec
adc
icebp
idivl
in
call
mov
imul
pop
nop
pop
or
sar
dec
nop
ss
adc
mov
mov
lds
adc
clc
in
jle
cs
push
jecxz
inc
mov
sbb
cltd
dec
addl
xchg
jno
cld
aaa
push
xor
adc
jg
shr
xor
loop
push
iret
pop
inc
sbb
fs
xor
pop
xor
and
add
imul
leave
and
lds
or
adc
jle
xor
test
mov
or
mov
movsb
add
gs
outsb
imull
mov
incl
sahf
sub
stc
out
cli
mov
mov
stc
or
adc
xor
stos
push
push
addr16
addb
and
and
inc
out
cmp
fldenv
inc
inc
imul
add
pop
mov
mov
ljmp
inc
popa
and
lea
xor
lret
pop
es
aas
jbe
arpl
xchg
inc
xor
cmpb
fldl
ds
cwtl
lret
shlb
cli
stos
aad
sbb
cmpsb
arpl
and
mov
mov
and
xor
in
aaa
xor
enter
pop
dec
pop
aas
scas
nop
xor
mov
xor
add
mov
lods
mov
cmp
dec
mov
push
data16
cli
mov
lods
stos
shlb
jp
jno
lods
sbb
cltd
loope
inc
mov
pop
xor
out
adc
fsts
pop
ficoml
inc
popf
rolb
lret
mov
pop
flds
sbb
fnsave
dec
mov
xor
inc
xor
xchg
leave
dec
cmpsb
lea
sub
imul
aad
dec
mov
sahf
ja
hlt
dec
popa
adc
xor
scas
fs
loopne
ljmp
xchg
repz
or
fisubrs
add
in
xor
push
cld
adc
fdivr
movsb
jl
js
mov
cld
popf
dec
cmc
or
pop
outsb
jns
lods
mov
rcrl
cmp
push
nop
ds
enter
aam
cmp
lcall
in
push
imul
and
xchg
repnz
cmpsl
jg
pushf
lret
pop
add
jno
jb
push
mov
fistpll
ficomps
jb
lahf
in
ret
ds
mov
popa
cs
pop
pop
push
adc
lock
enter
aad
inc
sahf
inc
outsl
jo
push
mov
add
push
pop
jb
pop
dec
je
cmp
aas
movsl
neg
push
dec
or
loope
popf
mov
loope
lgs
out
xchg
out
adcb
insb
cmp
ret
movsl
daa
add
add
test
dec
std
xchg
push
ds
mov
in
pop
dec
and
mov
pop
inc
adc
cmc
jecxz
fwait
out
add
jp
xchg
ficompl
fs
xchg
mov
sbb
mov
lods
and
and
or
mov
shrl
mov
adc
mov
push
xor
clc
inc
loop
lods
push
out
inc
aas
or
jb
push
scas
mov
into
or
lods
mov
or
in
and
cmp
push
mov
int3
popf
dec
mov
fisttps
lret
xor
mov
sub
cmp
mov
cmp
cli
loop
mov
aas
mov
push
out
out
arpl
sarl
push
mov
push
xchg
pop
lahf
push
mov
movsl
jg
pop
adc
shrl
adc
pop
out
xor
mov
and
popa
repz
push
test
jo
sti
sbb
pop
into
add
aam
sbb
inc
jmp
imul
cmpsb
incb
les
xlat
iret
adc
es
fwait
dec
pop
rcll
insb
cmp
pop
test
mov
int
xchg
rclb
in
movsl
fildl
ret
xchg
aad
mov
incl
sub
ret
sub
pop
adcb
sub
popf
outsb
cltd
jne
sbb
push
pop
add
cmp
mov
clc
das
fwait
imul
mov
icebp
daa
dec
scas
jnp
xchg
cmp
jnp
jg
pusha
and
shll
xchg
push
in
jmp
popf
push
out
xor
in
push
sub
addl
lods
aas
hlt
inc
pop
pop
les
mov
rcrl
fidivl
sahf
jecxz
xor
pusha
push
jle
cmc
push
scas
push
add
andb
adc
push
sub
xchg
cmp
test
test
jmp
adc
mov
ljmp
cmp
dec
sub
jmp
hlt
fdivp
add
test
push
or
xchg
stos
repz
movl
lods
pusha
nop
push
mov
fwait
pop
add
cld
in
test
xchg
test
fwait
or
sahf
or
aaa
out
dec
out
push
aaa
clc
inc
icebp
inc
sub
mov
decl
cwtl
xchg
out
adcl
and
lods
enter
push
clc
xchg
cmp
mov
or
gs
cmpsl
or
xchg
or
clc
idiv
loop
ljmp
pop
clc
lret
push
jl
std
lds
mov
cld
sbb
push
xchg
adc
loop
adc
and
add
mov
jmp
mov
mov
icebp
hlt
or
in
inc
js
and
add
lock
xor
push
mov
scas
jg
mov
and
ja
push
ret
push
in
cld
inc
pop
dec
pusha
jge
cmc
add
cld
add
adc
mov
xor
scas
push
push
insl
popa
mov
popa
mov
imul
loop
mov
sbb
mov
jmp
mov
sbb
enter
stos
add
data16
insb
push
out
les
adc
fsubl
push
mov
add
cwtl
inc
mov
add
push
ds
les
pop
imul
shll
xor
push
push
in
cs
jnp
sub
mov
jb
and
add
outsl
call
fimull
push
shrl
lcall
inc
or
and
xor
xlat
pop
popf
sti
sbb
cmp
mov
push
cld
or
cwtl
mov
dec
fdivl
ja
loop
rclb
cmp
mov
aam
push
inc
pop
fwait
cmp
sbb
insl
mov
pop
mov
mov
jp
dec
stc
test
std
in
movsl
sar
ret
loope
out
mov
or
int
fcomps
fs
adc
aad
mov
xchg
inc
insb
cmp
cld
jp
mov
pop
xor
rcll
into
mov
xor
cmpsl
sbb
push
mov
inc
or
sbbl
sti
lods
ja
xlat
bound
repnz
inc
mov
sub
data16
mov
mov
mov
cli
pop
pop
xor
xor
add
inc
subl
add
dec
cmp
fisubrs
imul
cmp
movsl
pop
divb
cmp
cmc
inc
jno
lods
push
inc
cmp
ds
jmp
std
cmp
sbb
outsb
cmpsb
jl
les
add
mov
arpl
sti
pop
jecxz
loopne
into
add
mov
pop
aad
xchg
ret
jl
int3
push
sub
pop
mov
mov
xchg
jg
xor
arpl
pop
test
push
pop
repz
outsl
xorb
mov
jbe
in
adc
jae
mov
clc
cmp
push
xchg
imul
movsl
sti
mov
es
in
jmp
dec
call
dec
inc
in
cmp
dec
lret
pop
pop
xor
sub
fs
or
in
and
bnd
sbb
add
fnstcw
xchg
stos
mov
dec
mov
lods
ljmp
mov
dec
enter
dec
cs
dec
cmc
add
fnclex
jle
xlat
or
sub
addr16
jp
pusha
adc
pop
push
pop
fimull
adc
mov
push
cmp
mulb
and
inc
mov
shrl
add
rol
insl
test
clc
jb
loop
jbe
sbbl
dec
or
pop
out
jae
mov
jb
push
test
bound
or
movsb
pushf
je
enter
dec
mov
sub
imulb
test
leave
sbb
mov
mov
pop
dec
subl
jl
xchg
sbb
sub
lret
in
dec
xchg
stos
fsubl
rcrb
push
push
xchg
xchg
ret
adc
arpl
mov
jle
popa
mov
and
sub
xchg
test
xor
mov
icebp
inc
in
pushf
jne
dec
sarb
inc
inc
dec
stos
repz
rcl
sbb
dec
cmp
cmpsl
xchg
fiadds
mov
pop
rsqrtps
pop
xchg
adc
or
shlb
cltd
ss
xchg
ret
test
jae
add
sbb
int3
mov
popf
out
xchg
shr
mov
mov
pop
shl
push
mov
mov
rol
jbe
pop
sbb
push
push
add
xlat
stos
popf
aas
ret
sarl
ds
fistl
mov
inc
fucom
orl
fdivs
mov
iret
ret
lea
mulb
stc
dec
dec
and
fisubrs
xor
and
pop
in
pop
rorl
and
or
imul
xchg
jno
inc
pop
insl
out
aaa
pop
lods
cwtl
neg
ljmp
in
dec
push
addb
pop
fldt
stc
add
pop
arpl
imul
push
out
push
cmp
adcb
sbbl
lods
scas
fldl
inc
jecxz
arpl
pushf
bound
cmp
iret
xchg
lcall
inc
mov
fwait
rcl
out
jbe
sbb
push
test
adc
sti
jb
sbb
scas
mov
mov
stc
jp
pusha
aam
adcl
add
js
xor
outsl
ljmp
or
mov
sbb
mov
lret
test
test
lahf
xor
push
in
je
loope
lea
cli
pop
mov
rclb
aaa
sbb
add
cmpsl
mov
fwait
add
pushl
xchg
sbb
imul
push
clc
test
lods
lret
jne
ret
popf
int
sub
icebp
enter
mov
jo
dec
jne
adc
out
int3
fdivr
jo
adc
inc
jmp
sub
dec
inc
dec
stos
add
and
mov
sub
call
lret
shr
mov
adc
dec
xor
mov
cmc
pop
dec
add
test
xchg
nop
inc
xchg
ret
pop
movsl
hlt
push
int3
pop
and
sbb
sub
cmp
pop
test
and
adc
aas
test
fildl
jo
jno
je
cmp
push
bound
shlb
add
jg
das
sbb
iret
mov
mov
rolb
mov
cmp
sbb
sar
mov
pop
test
nop
cmp
sahf
dec
mov
mov
loope
xor
inc
es
imul
andl
lfs
dec
push
pop
ss
test
xchg
sub
mov
pusha
push
ds
sbb
and
pushf
jae
and
sti
mov
outsb
cmp
mov
shl
popa
push
pushf
repnz
jmp
sahf
xor
jb
jg
imul
or
jae
andl
and
mov
stc
mov
dec
sub
xchg
dec
xchg
rcll
aas
es
xlat
sahf
int3
in
je
jl
adc
xchg
test
adc
fistps
stos
out
mov
inc
movsl
popa
imul
jge
mov
fucom
cmp
loope
int
push
and
test
dec
paddd
dec
add
xlat
je
lret
es
std
popa
inc
adc
sub
dec
push
sub
ret
and
dec
push
adc
cmp
das
fdivl
push
sti
sbb
stos
pop
pop
and
inc
jo
xor
sarb
pop
adc
sbb
sub
pop
jo
mov
cs
sub
adcb
mov
push
ret
or
jbe
xlat
jns
shr
imul
xchg
shlb
popf
pop
pop
lret
rcll
pop
stos
fwait
rol
jo
and
xor
cld
js
call
addr16
mov
cmc
les
xchg
jnp
inc
repnz
fldenv
fisttpl
sarl
dec
adc
stos
lret
imull
mov
jne
imul
outsl
push
popf
jo
xchg
push
cmpsl
add
jl
clc
jge
loop
inc
cmc
int
xchg
xchg
jns
mov
push
sub
ret
pop
push
jl
xchg
mov
in
mov
xchg
in
adc
dec
sti
xchg
outsb
xor
jg
jle
jl
sar
imul
push
sbb
rcll
imul
pop
push
xchg
jbe
gs
cmpsb
sbb
mov
sub
decb
test
jbe
pusha
xor
gs
loope
jecxz
add
adc
inc
push
sub
loope
lahf
sub
dec
out
or
inc
xor
or
sahf
ds
shll
idivl
loope
and
lret
arpl
add
mov
lahf
dec
xchg
mov
pop
jmp
test
sub
roll
mov
pop
fidivl
fadds
mov
mov
stos
jecxz
mov
pop
or
jne
ss
jge
pop
mov
sub
repz
js
out
sub
fnsave
cmc
sub
add
out
out
test
daa
aam
push
enter
leave
out
clc
pop
or
insl
jb
cmp
xlat
jmp
cwtl
xchg
mov
mov
imul
sbb
mov
mov
cltd
fwait
inc
push
jnp
jg
add
xor
ljmp
push
mov
adc
dec
and
in
jne
pop
pop
mov
push
lret
add
sub
and
enter
xchg
mov
cmpsl
mov
nop
xchg
lret
mov
stos
pop
sub
inc
push
jp
mov
sti
jecxz
jns
add
int3
mov
adc
xchg
daa
std
in
cmp
js
data16
jge
and
pop
dec
ss
out
test
pusha
shl
aas
fldenv
fwait
pop
cmp
daa
insl
pop
jl
and
enter
push
inc
sub
mov
and
jge
and
add
lret
cli
jg
pop
cs
jecxz
stc
jb
movsb
arpl
mov
fstpt
sub
scas
popl
push
js
mov
insl
gs
cld
out
add
ljmp
mov
popa
xchg
rclb
cmp
jno
jg
lret
dec
sbb
and
lods
add
pop
lret
test
mov
mov
iret
pusha
cmpsb
push
jg
push
xor
dec
adc
mov
je
adc
ds
add
out
les
add
inc
dec
mov
repz
xchg
inc
push
js
lahf
pop
mov
pop
das
les
add
mov
sbb
add
mov
lcall
push
bound
push
push
add
in
lock
shlb
jne
xchg
pop
push
and
ja
mov
push
cmp
test
mov
push
pop
cmp
js
xor
or
jbe
sar
pop
mov
jl
int
icebp
stos
pop
je
inc
psubsb
xor
mov
mov
mov
xchg
adc
or
inc
adc
or
hlt
push
inc
cmp
and
or
pop
lahf
cmp
call
mov
rcll
mov
mov
push
outsb
ss
out
and
outsb
pop
or
fistl
and
or
mov
mulb
rcl
or
in
js
sbb
sahf
call
int
scas
sub
lods
cld
push
test
jmp
sub
cmp
mov
jg
or
mov
les
test
inc
jmp
ret
dec
add
inc
sub
xchg
fs
aam
add
push
movb
dec
sbb
jo
cwtl
js
xchg
fldt
stos
rcrb
pop
push
fmulp
pop
loop
test
jge
mov
scas
into
pop
push
adc
std
lcall
bound
clc
mov
dec
imul
test
cmp
pop
shl
fnstsw
imul
push
and
mov
push
add
les
fcmovu
inc
pop
out
push
mov
jmp
xchg
mov
cld
fiadds
add
pop
add
xlat
cmp
icebp
cltd
add
shrb
cmc
hlt
inc
fdiv
xchg
xchg
xor
inc
pop
lret
popa
push
xchg
cld
xchg
hlt
xchg
xchg
sub
fadds
mov
add
pop
cmpl
stos
xchg
les
dec
or
icebp
iret
inc
mov
push
inc
pop
fnstcw
aas
and
scas
xor
mov
pop
xchg
icebp
pop
push
fxch
add
daa
jno
ljmp
jge
jns
add
or
adc
sar
jmp
cmp
leave
dec
adc
dec
pushf
push
push
orl
push
push
loop
cmp
cmp
popf
out
fistpll
push
loopne
repz
bound
js
std
ds
mov
push
je
test
nop
in
imull
sub
movsl
push
push
insb
xor
jmp
pop
sbb
push
loope
js
jmp
and
xchg
add
cmp
adc
popf
inc
leave
pop
cmpb
pop
jecxz
mov
xor
sub
hlt
pushf
iret
aam
or
xlat
icebp
inc
insl
cmp
cmp
pop
or
dec
add
push
aaa
jmp
pop
cwtl
mov
or
xchg
push
mov
cli
mov
jg
pop
test
cmp
push
movsb
mov
cmp
in
mov
popf
push
cmc
jp
jns
mov
xor
icebp
fmuls
hlt
fwait
neg
test
cld
xchg
add
xchg
mov
std
mov
das
decb
imul
lods
lds
mul
mov
jg
mov
dec
cmpsl
ss
dec
test
outsb
add
fdivp
imul
dec
mov
fidivrl
mov
add
cld
hlt
call
and
mov
dec
mov
stos
and
iret
daa
fwait
pop
sub
jl
sub
xchg
mov
ds
pusha
push
xor
mov
pop
loopne
mov
sub
out
fwait
mov
repnz
aas
push
dec
jo
push
iret
aaa
icebp
sbb
fdivrl
add
sub
mov
pop
sbb
cmp
adc
insb
das
in
mov
je
mov
inc
mov
sbb
ja
gs
scas
fwait
jl
ds
push
sub
cld
out
mov
mov
sub
sbb
out
inc
inc
subl
gs
rol
mov
lret
dec
jb
cmp
arpl
aaa
inc
sub
repz
mov
push
mov
das
inc
out
inc
pop
mov
mov
adc
imul
sbb
ss
pop
pop
jge
and
sub
xor
push
mov
repnz
out
stc
pop
aad
inc
push
in
fs
les
xor
leavew
nop
out
ja
jne
out
mov
cmp
scas
imul
xchg
rolb
lods
or
mov
sarb
enter
aaa
in
pushf
xchg
leave
push
popf
mov
aaa
cmp
call
sbb
xor
push
xchg
repz
mov
mov
ret
sbb
push
cmp
loop
mov
adc
xchg
movsb
jae
leave
inc
adc
js
or
hlt
repnz
in
test
push
mov
adc
mov
pop
bound
sub
mov
cld
sub
scas
movsl
adc
push
jle
xchg
add
ret
lods
test
rcr
jae
pop
mov
int3
jb
lods
fs
loopne
js
xor
mov
mov
inc
iret
bswap
or
inc
xor
loop
in
push
subb
jp
cwtl
shll
lods
pop
out
push
sahf
ret
lds
push
sub
inc
loop
add
push
addb
adc
jp
push
ret
cmc
enter
jo
leave
popf
jns
mov
push
scas
fmuls
cmpsb
dec
adcb
gs
jno
jecxz
movsb
xlat
int3
rcll
dec
mov
sbb
sbb
adc
decb
xorb
inc
pop
inc
pop
aaa
mov
out
out
and
je
dec
jns
aam
jg
cmp
cmpb
imul
adc
mov
jbe
jl
mov
jge
insl
mov
sub
ss
pop
cmp
lcall
inc
adc
xchg
mov
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
jmp
or
aad
mov
sahf
fidivrl
inc
add
pop
jb
dec
ja
xor
mov
push
push
es
push
and
jb
jns
pop
xor
push
mov
pop
push
push
aaa
sub
cmp
push
fisttpl
jg
adc
pop
cltd
mov
stos
js
jbe
ret
push
shrl
mov
cmp
popf
stos
mov
ja
adc
inc
pop
pusha
fimull
subl
jbe
sarl
pop
sbb
icebp
sbb
mov
push
push
sub
xchg
scas
jl
les
test
xchg
fldl
fdivr
fdivl
int3
xor
mov
fcmovb
adc
mov
or
pushf
sub
jo
pop
repnz
pop
bound
subb
inc
popa
and
jmp
sub
imul
jl
dec
push
mov
xchg
loope
sub
ljmp
inc
in
out
sbb
dec
imul
add
or
mov
and
daa
pop
fst
lods
xchg
mov
pop
mov
jo
aam
orb
jns
jl
in
imul
pusha
ss
jecxz
xchg
shlb
aaa
cmpsb
mov
push
sub
and
push
imul
das
leave
loop
inc
jp
addr16
addr16
pop
inc
mov
jnp
xchg
mov
jl
cs
int
pop
inc
lock
lods
mov
enter
sbb
test
pop
sbb
inc
sbb
or
sti
movsb
inc
inc
push
fstl
pusha
sub
insb
mov
pusha
xor
or
sbb
es
add
outsb
jge
in
xor
sahf
mov
jl
lds
xor
dec
jns
rcr
scas
mov
adc
insl
mov
mov
test
pop
inc
loopne
sbb
cmpsl
lods
mov
and
fnsave
sub
loope
add
sub
sub
mov
fdivrl
out
fisttps
sbb
shlb
mov
test
sbb
cmpsl
fwait
xchg
insl
shl
mov
pop
sysret
es
xchg
jmp
inc
arpl
or
or
push
dec
cmc
or
aas
sahf
push
lret
push
stc
sti
stc
jnp
jl
lcall
ja
xchg
dec
push
mov
cmp
jbe
test
inc
jne
shl
jne
lcall
add
fiadds
xchg
cmp
push
repnz
pop
push
or
addr16
insb
dec
pop
pop
imul
jge
xchg
out
cwtl
insl
dec
les
add
inc
mov
jno
shlb
xchg
sub
xchg
sbb
ret
in
dec
out
into
fs
pop
lret
xchg
mov
sahf
inc
mov
enter
nop
add
mov
mov
inc
cmp
push
pop
call
cmp
push
lea
adc
ja
mov
shll
pop
mov
sub
aas
add
aam
sub
xor
xor
in
add
mov
sbb
cmp
push
and
push
mov
cmc
dec
xchg
inc
mov
fxam
jp
dec
aam
pop
push
pushf
sbb
in
jle
xchg
dec
lock
or
mov
cmp
push
or
sbb
jb
dec
int3
test
or
cmp
outsb
jmp
imul
outsl
out
adc
add
mov
ficoms
mov
dec
push
xchg
mull
mov
ret
add
pop
ljmp
movb
fs
cli
and
sbb
push
xor
repz
jmp
pop
adc
shlb
loopne
loopne
dec
fstpl
and
dec
in
rcrl
xchg
dec
push
add
movsb
dec
mov
fists
xchg
sbb
arpl
cli
in
shll
cmp
inc
aas
call
jno
mov
std
pop
popa
icebp
mov
push
dec
sti
adc
mov
mov
or
jne
dec
mov
adc
pop
fisubl
sahf
push
cmovb
scas
mov
test
adc
sub
cmp
idiv
pop
add
push
bound
clc
stos
jg
cld
sub
lret
fnstenv
ffreep
mov
cwtl
cs
test
push
push
js
jo
addr16
outsl
xchg
mov
lahf
or
jne
fisubs
sbb
shlb
cwtl
into
std
or
or
mov
push
add
into
cli
sbb
inc
es
movsb
cwtl
jns
mov
notb
out
cmpsb
rolb
imul
jmp
jl
cmp
or
ja
stos
inc
fyl2xp1
fisttps
mov
mov
xor
test
or
test
cmp
js
lahf
mov
iret
pop
leave
faddp
mov
lahf
ss
xlat
adc
xchg
and
inc
es
pop
lar
daa
sarb
xor
cld
xchg
add
hlt
sub
add
in
mov
cmpsl
popa
in
lock
daa
adc
xor
inc
adc
pop
stos
fisubs
xchg
push
push
mov
sbb
jl
jp
test
inc
aaa
pop
jp
xchg
pop
leave
jnp
test
loopne
test
or
cmp
add
repz
mov
lea
ror
mov
push
shll
xchg
insl
push
cltd
fs
jl
xchg
cli
divl
insl
mov
leave
icebp
in
push
stos
lods
shrb
aaa
outsb
ja
adc
aam
or
cmp
xor
cmp
dec
aas
fs
outsl
or
insb
or
push
divl
jns
sbb
jne
jne
fsts
jge
jecxz
popf
jle
xchg
jns
fwait
in
in
mov
clc
sarb
sub
gs
sbb
dec
mov
mov
jmp
pop
vmread
push
aas
int3
jbe
mov
ds
fdivs
popa
pop
mov
aas
sub
int
pop
pop
clc
pusha
mov
lret
outsb
orb
dec
or
subb
ss
xchg
add
push
shlb
out
and
in
fwait
call
fs
push
add
shr
dec
dec
sub
insl
shll
imul
xchg
int3
mov
leave
push
orl
mov
mov
xchg
dec
cs
inc
into
or
sub
lcall
roll
test
loopne
dec
jno
mov
jmp
iret
pop
ljmp
jne
cmp
fdivrp
test
cmp
int
or
cmp
das
sbb
icebp
int
data16
flds
movl
cltd
inc
push
adc
out
sub
jg
adc
pop
sbbb
inc
cmp
lret
dec
inc
xchg
sbb
movsb
or
jne
and
inc
jnp
jp
push
or
lods
aaa
add
rcrb
inc
rcll
stos
insb
stc
in
mov
repz
push
jge
xlat
in
mov
inc
push
xor
jge
andb
lret
lahf
fldl
fsubl
test
in
aad
fisubrl
fs
xchg
or
movsb
cmp
mov
test
push
scas
mov
test
ror
fwait
mov
fisubrl
mov
or
out
and
arpl
lds
inc
add
arpl
stos
je
aam
sti
lods
movl
test
jecxz
adc
or
pushf
jne
xchg
sbb
imul
add
and
or
in
cltd
lret
mov
insl
por
cmp
fcomps
bound
pop
mov
clc
push
lcall
adc
or
xor
dec
jo
sub
into
mov
add
xchg
adcl
scas
xor
movsb
mov
and
ljmp
xor
scas
lahf
sti
pop
enter
insl
add
xchg
xchg
sub
pop
mov
leave
cmc
lea
popa
movsb
adc
test
pop
mov
inc
ljmp
push
adc
push
push
mov
jecxz
rcrl
stc
fmull
xor
outsb
out
sub
out
orl
pop
roll
jle
inc
xor
push
paddsb
ljmp
out
or
sbb
inc
nop
out
or
lock
fsubl
push
inc
inc
movsl
cmp
rolb
sti
push
inc
popf
loop
inc
mov
sbb
add
add
or
jecxz
xor
ficomps
cs
mov
in
pushl
orb
fwait
ret
in
mov
xchg
mov
add
pop
cmc
out
jae
xchg
fcompl
xchg
je
jne
adc
outsl
dec
pop
adc
jae
mov
mov
dec
fcmovb
dec
mov
add
aas
inc
cwtl
in
cwtl
push
int
in
cmp
ficompl
jae
sbb
xor
mov
inc
hlt
lods
push
jb
add
movl
xchg
and
sahf
in
xchg
dec
mov
xor
sbb
cltd
loop
add
pop
and
ror
xchg
mov
out
inc
roll
insb
sub
sbb
inc
or
stos
adc
loop
pop
iret
sbb
push
es
test
cld
lock
pop
jne
daa
lea
fwait
jp
lret
lret
pop
mov
adc
js
loopne
add
test
ljmp
ret
out
mov
jl
adc
addl
aam
scas
test
lods
push
cmc
lods
mov
mov
inc
into
mov
ds
fsts
ret
fcompl
xchg
test
sub
xchg
sbb
mov
inc
mov
adc
out
lcall
ds
sahf
xchg
push
aam
mov
subl
inc
add
int
je
pop
and
cmpsb
or
shll
sub
mov
faddl
xchg
out
adc
jecxz
cwtl
dec
cmpxchg
repz
xchg
movsl
fistl
aam
loop
inc
cmovl
pop
xlat
aas
pusha
movsl
mov
lds
pop
imul
xor
lcall
lcall
sbb
cmpl
pop
mov
mov
icebp
pop
cmp
add
dec
inc
aaa
mov
pop
pop
outsl
add
nop
dec
lock
sbb
outsb
sbb
push
sbb
shrl
shrl
jns
xchg
arpl
mov
loopne
daa
mov
sub
sti
aam
dec
cmp
cmp
insl
rorl
js
inc
out
fildl
cmp
push
lock
mov
mov
push
out
imulb
lret
inc
cmp
arpl
inc
cs
lods
lahf
xchg
adc
pop
repnz
inc
in
mov
dec
xchg
lcall
cmp
fsubrs
dec
sub
pop
mov
push
ljmp
rol
adc
dec
or
or
or
and
aam
mov
lret
xor
aaa
push
jmp
mov
xor
das
jle
or
adc
or
sbb
xor
add
mov
xor
pop
repnz
jns
outsl
mov
mov
mov
lahf
sbb
jne
ds
jb
iret
adc
mov
sbbb
mov
fcoms
aam
les
cmp
fdiv
inc
movsb
fwait
inc
mov
mov
sub
add
and
out
or
lret
rorb
sbbl
stc
nop
pop
sbb
mov
imulb
fs
xor
fdivrp
mov
in
sub
inc
aaa
adc
or
in
jnp
xor
pop
add
sbb
ret
fs
adc
test
jle
add
loop
lock
adc
jmp
test
dec
jae
sti
mov
es
addl
scas
xor
std
jg
jns,pn
mov
je
cmpsb
dec
pop
and
dec
cmp
xchg
xor
push
jmp
in
ja
std
or
pop
movsb
ds
hlt
lahf
insb
push
jge
ds
cwtl
loop
xchg
js
xor
nop
rorb
ds
add
mov
cmc
mov
rolb
icebp
or
adc
xchg
iret
jl
sbb
aaa
jl
pop
or
cs
mov
gs
cmp
jp
mov
inc
pop
mov
cmpsb
repz
lret
mov
adc
add
orb
jne
mov
popf
and
inc
and
xchg
and
xor
mov
fsubrs
aaa
loop
addr16
pop
cmc
fisubl
dec
std
shl
ret
sub
in
and
inc
lea
sbbb
xchg
push
jecxz
adc
cmp
sbb
cld
pop
cwtl
inc
insl
cmpsb
cmovne
jg
mov
ss
div
pop
inc
xchg
jg
and
xor
int3
sub
fadds
mov
inc
aaa
push
insl
sbb
fidivs
jb
fnstenv
cs
arpl
or
arpl
mov
ss
sarl
out
test
daa
lods
or
jg
adcb
mov
and
out
ret
ret
dec
sub
arpl
and
sbb
sbb
mov
sbb
imul
push
mov
ljmp
push
and
mov
mov
or
shr
and
sahf
stos
das
mov
clc
and
mov
push
sub
push
leave
rolb
mov
xchg
test
push
jae
mov
jge
dec
push
cmc
push
jne
pusha
test
lcall
je
daa
stc
std
jb
xor
adc
pop
add
push
into
mov
hlt
xchg
adc
xchg
mov
repz
int
sbb
add
std
xchg
add
jl
jg
stos
icebp
fwait
into
xchg
ret
or
push
mov
adc
or
jl
enter
cltd
pop
dec
pop
push
inc
push
xchg
xor
sbb
iret
fcoml
cmp
cmp
jp
enter
xor
adc
push
mov
xor
outsb
mov
lods
mov
ss
fistps
adcl
ds
popf
std
outsl
push
fbld
pusha
inc
add
or
add
jb
pusha
jg
clc
rclb
scas
cmp
std
mov
or
leave
jl
push
popw
pop
int
mov
int
fdiv
inc
mov
scas
or
inc
pop
mov
xchg
lret
ret
outsl
fs
test
inc
push
cmc
test
sahf
ja
rcl
loope
or
imul
int
sub
sti
mov
mov
repz
cmp
insb
mov
movsb
cmp
icebp
mov
sub
mov
mov
pusha
adc
cmc
inc
jmp
and
sbb
mov
ficomps
sbb
dec
and
loope
test
xor
cmp
push
decl
dec
mov
ftst
test
test
cltd
insl
jbe
inc
shr
scas
cwtl
repz
outsb
cmp
fsubrs
jbe
loopne
add
outsl
jno
addr16
dec
mov
fsubs
sub
pushl
lret
sub
sub
jo
pop
inc
sbb
dec
xor
test
or
imul
outsl
xchg
adc
je
ja
stos
int
popa
mov
mov
or
inc
fs
les
mov
cli
pop
lods
icebp
stos
insb
xor
add
and
ss
sbb
jp
ficoms
xchg
dec
xchg
pop
mov
cs
je
js
data16
xor
je
pop
lcall
lds
mov
leave
decl
lahf
cmpsb
mov
push
les
inc
mov
jg
hlt
xchg
cmp
shl
xchg
inc
testl
mov
mov
jle
in
cltd
jle
xchg
mov
sub
scas
xchg
or
leave
pop
cmp
adc
inc
fstpl
mov
lret
test
scas
les
cwtl
loop
fidivrs
sub
mov
pop
cltd
cmp
xchg
push
sbb
roll
sub
movsb
adc
inc
dec
inc
jo
inc
push
into
xchg
out
iret
bound
mov
sub
movsb
aam
add
lds
mov
xchg
jmp
adc
js
add
xchg
insb
pop
call
sbb
push
lea
add
pusha
faddl
stos
fcoml
ja
testl
jl
or
std
cmp
lock
int
sti
mov
imul
sub
add
lea
jne
lods
out
pop
jnp
lods
push
insl
into
int3
addl
shll
lcall
jns
test
cmp
dec
outsb
and
pop
ficoms
pop
sti
leave
sbb
dec
and
mov
adc
dec
mov
xor
pushf
cmc
cmp
out
into
pop
sbb
pusha
or
jae
or
aad
rclb
jge
sbb
loope
test
sbbl
dec
jecxz
dec
jecxz
shll
mov
or
cld
mov
mov
xchg
js
cmp
jbe
fnstenv
adc
xchg
xchg
mov
ret
scas
add
popa
into
and
shl
fistpll
push
pop
push
push
shll
rcrb
mov
cmp
icebp
and
pop
retw
sub
in
fists
negl
sahf
mov
stc
cld
dec
sub
or
rclb
in
inc
shll
or
and
dec
or
add
int3
jle
xor
loope
imul
cltd
cmpsb
inc
into
add
int3
add
xchg
negb
setnp
jno
notb
jp
hlt
xchg
jns
out
xor
ljmp
jp
enter
push
jle
lea
or
pushf
and
arpl
inc
xchg
out
push
into
in
inc
sub
pop
sbbb
xor
xchg
sti
negb
push
xor
push
movsb
push
movsb
stos
cmpl
adc
fstpt
xchg
and
xor
jl
or
cmp
loope
aas
jae
sub
imul
or
cmpsl
inc
sub
xor
scas
popa
iret
cmp
or
sbb
or
rcrb
fs
outsl
cmp
inc
xor
fs
jp
std
xchg
xchg
ficoms
inc
subb
xor
sbb
adc
xchg
lret
push
pop
dec
movsb
add
inc
mov
lea
aam
fs
push
jg
cs
mov
jno
xchg
fsubrp
out
test
pusha
jae
nop
sub
lret
loopne
inc
daa
mov
jle
psubusw
stos
andl
ret
push
and
cmc
call
xchg
xchg
pop
sub
pop
aas
cmp
xor
dec
addl
pop
jnp
xchg
leave
dec
xchg
inc
mov
jl
imul
loope
jo
inc
pop
mov
rcr
cmpsl
mov
movsb
cmp
pop
mov
hlt
arpl
adc
sbb
verw
ret
pop
bound
and
shlb
jne
pop
nop
repz
xchg
or
pop
clc
adc
stc
test
jecxz
cmpsl
push
orl
pop
cli
and
testl
std
mov
jg
inc
sahf
cld
mov
xor
jbe
outsb
xor
and
push
inc
ret
mov
and
aaa
loop
shll
adc
mov
inc
cmp
arpl
out
fdivrs
popa
inc
scas
jae
sub
out
rcl
inc
jecxz
pop
jns
sahf
scas
test
pop
adc
rclb
and
or
xchg
add
loop
mov
pop
aaa
decl
pop
fsubrl
inc
add
cmp
out
out
jno
jl
jge
xchg
cmp
loope
mov
xchg
das
outsl
jno
add
nop
and
stc
in
cltd
lock
mov
test
mov
daa
into
xor
jecxz
xchg
mov
std
mov
leave
loopne
pop
mov
lods
add
icebp
cld
dec
call
arpl
pop
loope
mov
movsl
mov
dec
sti
sub
test
out
mov
or
jmp
sbb
sub
xchg
loop
scas
in
fsubl
sbb
dec
lods
out
popf
sbb
test
in
mov
std
sbb
push
jnp
mov
cmp
mov
add
mov
xchg
lcall
xlat
sbb
push
jle
pop
cmp
aaa
adc
je
lock
gs
sbb
shl
fnstcw
sbb
outsl
jg
and
movsb
jg
iret
int
and
in
fmuls
fwait
js
ret
repnz
outsb
inc
push
push
jno
cmpsb
leave
jne
mov
mov
cmpsb
xchg
mov
push
out
dec
ljmp
and
cmp
cmp
mov
daa
sahf
push
and
mov
imul
push
test
cltd
jge
in
es
push
jecxz
je
sub
daa
sahf
xor
inc
js
sbb
mov
xor
push
rorb
mov
les
lahf
scas
xor
jle
repz
adc
push
nop
divps
mov
add
mov
or
shlb
pop
ret
jmp
mov
aam
fwait
dec
or
data16
add
unpckhps
stos
inc
lock
cmp
dec
enter
ss
sahf
enter
ret
frstor
xchg
jo
aad
adc
sbb
pusha
movsl
stos
xor
inc
mov
jecxz
jo
dec
xor
dec
ds
loopne
jbe
cmpsb
outsl
xchg
pop
adc
push
mov
mov
jnp
insb
ss
dec
ss
xchg
je
xchg
adc
pop
iret
test
out
pop
clc
into
rcll
or
xchg
pusha
mov
xchg
stc
mov
cld
in
out
les
rorb
les
xlat
jmp
xorb
repz
imul
mov
add
int
subl
push
jb
inc
loopne
pusha
inc
bound
dec
loope
call
xchg
clc
add
pop
xchg
pop
pusha
inc
cmp
xor
inc
sahf
imul
data16
mov
pop
xor
mov
mov
lods
inc
lret
decl
xchg
aad
and
shlb
and
sub
push
cld
call
sub
add
mov
add
fidivl
sub
fisubs
das
push
das
fsubs
cmp
bound
inc
test
in
xor
ss
add
testb
push
insl
adc
cmp
xchg
sub
adc
mov
es
imul
outsb
fisttps
aad
repnz
inc
aad
add
rcll
pusha
push
mov
dec
mov
cld
icebp
pop
sub
in
mov
xor
das
add
add
filds
movsl
fcomip
xor
cmp
daa
xchg
inc
pop
nop
or
sbb
adc
mov
cwtl
adc
adc
fcoml
sub
imull
cmp
sahf
rcl
dec
push
dec
or
and
lea
mov
cmpsb
mov
xorb
cld
imul
cmp
mov
stos
push
xchg
or
or
push
jno
imul
icebp
sub
adc
cld
iret
ljmp
xor
mov
add
and
push
inc
or
hlt
pop
add
cmpsl
inc
test
or
jbe
pop
mov
inc
cmc
cmpsl
negb
hlt
arpl
repz
mov
xchg
sub
sahf
shll
aas
cmp
std
ds
ror
out
sti
mov
imul
xchg
or
jmp
cwtl
xchg
cmp
out
cld
mov
cmp
pushf
cmp
mov
test
das
out
stc
sbb
and
ljmp
fldt
fsubs
mov
jne
leave
insb
adc
lods
pusha
das
movsb
dec
ror
js
insl
dec
pop
mov
inc
aas
dec
and
inc
jmp
scas
mov
push
dec
aaa
inc
mov
mov
xchg
mov
mov
or
cs
pop
mov
out
out
into
lods
dec
sbb
stos
das
daa
fldt
xchg
sub
rep
dec
jns
jge
mov
cmp
loope
mov
mov
sbb
out
cmp
fldl
cmpsb
sbb
mov
inc
ljmp
loope
jo
and
stc
mov
jge
cmp
xor
dec
jl
repz
fs
cmpsl
or
xchg
jl
and
int3
fwait
ret
pusha
pop
rolb
pop
shll
cmp
and
sub
out
jo
stos
fsubp
or
xchg
add
sbb
xchg
and
sbb
in
lahf
dec
pop
lods
loope
sbb
sub
push
mov
and
jmp
call
mov
jns
addl
int3
xor
hlt
or
pop
xchg
shrl
mov
dec
imul
sub
imul
xor
je
fsubrl
pop
in
jge
mov
cld
sub
sub
rol
sbb
pushf
fsts
mov
sahf
or
jo
in
das
loope
inc
jge
jbe
jmp
push
pop
push
adc
loopne
roll
insb
push
popa
sbb
mov
cli
insb
cmpsl
push
or
add
sbb
pop
mov
mov
dec
cwtl
inc
mov
cmpsl
add
or
push
fiadds
shlb
mov
sarl
movsb
sarb
push
push
inc
inc
stos
stos
jge
shrb
shlb
scas
cmp
inc
dec
repz
xchg
or
in
cwtl
push
mov
mov
jge
pop
adc
repnz
xorl
add
bnd
adc
adc
out
mov
pop
dec
sahf
lahf
jo
and
ret
or
xchg
pop
sbb
cmp
inc
sub
jne
incb
or
xchg
gs
fwait
out
sub
lret
stos
push
inc
push
mov
ja
shrb
jl
movswl
test
inc
xor
popl
cmpsb
xor
test
shll
iret
out
scas
daa
mov
dec
dec
xchg
dec
and
push
out
les
xor
xchg
pop
xor
in
adc
int
test
dec
std
out
outsb
and
xor
and
add
aam
inc
inc
sbbb
nop
sahf
addr16
jp
fdivl
cli
clc
std
test
jmp
leave
pop
push
daa
cltd
pop
add
pusha
cpuid
mov
repz
push
int3
sbb
xchg
mov
aaa
sbb
cmp
fcmovb
jp
cmpsl
mov
push
push
test
push
and
cld
xchg
lea
xor
mov
mov
mov
dec
repnz
flds
push
cmp
jne
fidivrl
cwtl
pop
sbb
aam
xchg
ljmp
fsubl
and
stos
pop
pop
stc
fmulp
ret
fisttpll
mov
and
cmp
lods
mov
sub
insl
in
call
cld
loopne
pop
jo
mov
xor
or
jl
dec
out
xor
dec
sbb
pusha
mov
in
jne
mov
and
aaa
loop
or
out
sahf
test
pusha
icebp
inc
or
pushf
mov
adc
les
outsl
gs
pop
push
fistps
in
pop
add
or
or
in
xchg
pop
mov
aas
xor
xor
jle
inc
je
adcb
push
jno
sbb
dec
into
cmpsl
mov
test
cwtl
pop
dec
popa
addl
pop
or
mov
and
sub
cmp
imul
dec
mov
imull
lock
dec
lds
clc
testl
push
sti
inc
aaa
or
dec
data16
add
loop
sub
mov
xchg
xchg
jg
mov
into
push
test
jno
xchg
sahf
stos
pushw
add
push
sbb
and
repz
test
orb
int3
imul
dec
fsub
or
jno
and
dec
mov
push
andl
pusha
loopne
pop
daa
jecxz
inc
jns
dec
dec
ja
in
adc
stc
cmp
hlt
cmp
addr16
pop
sbb
add
out
stc
mov
dec
in
je
or
adc
insl
xor
push
jb
dec
sub
mov
and
test
push
ret
cmp
fnstenv
adc
mov
dec
orl
addb
ret
mov
rcll
arpl
cmp
popf
out
adc
cmp
dec
sub
adc
inc
movsb
aaa
shl
repz
aas
test
mov
inc
mov
jmp
inc
imul
das
xchg
out
or
xor
mov
jno
loopne
mov
cmc
ret
imul
xor
xorl
or
push
sbb
dec
dec
scas
addr16
push
and
xchg
sbb
stc
sub
and
outsl
pop
cwtl
add
xchg
mov
mov
lds
ffreep
add
cmpsb
das
cmp
aam
loop
xor
sub
push
dec
not
je
je
outsb
repnz
fwait
jecxz
jo
jmp
and
mov
jge
rol
ja
cmp
aas
call
cmc
test
mov
xchg
insb
aam
clc
pop
cmp
mov
stos
arpl
pop
ss
or
scas
aaa
bound
xor
jle
push
push
xchg
repz
pop
adc
lcall
pop
mov
lret
aad
dec
dec
mov
lcall
icebp
ffreep
cld
dec
jecxz
fildll
sbb
stos
enter
jmp
jg
out
addl
cmp
xchg
out
adc
loopne
aas
daa
pop
mov
inc
gs
mov
jle
ds
test
int3
jecxz
sbb
pushf
xchg
mov
sub
and
and
subb
lret
imul
add
jmp
sbb
loopne
xorl
pop
fst
cs
hlt
mov
mov
xor
mov
add
cld
pop
jmp
xor
and
push
out
cli
adc
in
sbb
cmpsb
push
out
ljmp
xor
xchg
mov
dec
gs
mov
sti
xchg
and
sub
or
inc
stc
pushf
mov
inc
xchg
fwait
mov
lea
mov
adc
pop
xchg
and
fsubr
ss
sbbb
inc
mov
push
mov
test
dec
out
addr16
cmp
mov
das
adc
mov
fcoml
or
jns
mov
and
sub
test
xchg
push
rclb
lds
adc
sub
daa
hlt
pushf
test
dec
mov
mov
push
inc
pop
sbb
xor
mov
push
or
ss
fdivl
sbb
and
xchg
cmp
mov
addl
cltd
and
xor
in
outsb
fdivl
dec
adc
call
filds
filds
or
inc
ret
mov
cwtl
popf
fucom
mov
int
aad
or
sub
stc
in
push
pop
push
pop
pop
arpl
aaa
jp
cmp
movb
push
test
popf
xchg
dec
cmc
dec
ds
push
mov
sti
pmullw
lock
cmp
jge
sub
pop
fcomps
mov
ror
push
cwtl
aam
mov
aaa
push
out
ret
std
jae,pt
out
mov
scas
pushf
ds
cmp
dec
jns
fdivl
jg
xchg
jl
cmp
mov
adc
and
repz
pop
mov
je
push
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sbb
xrelease
push
mov
aaa
cs
jge
rcrb
jb
push
push
dec
lret
stos
xor
inc
out
out
xlat
pusha
std
jae
add
nop
sbb
xchg
cmp
lds
mov
repnz
mov
adc
pop
out
lock
gs
add
push
fstpt
ret
and
lods
imul
xor
hlt
int3
aam
mov
xchg
es
into
sub
fmuls
negb
sub
hlt
inc
adc
rorb
addb
xor
or
xchg
mov
mov
daa
and
xchg
push
mov
movsb
jne
call
jp
inc
and
xchg
push
sti
repnz
pop
out
pop
and
xchg
cltd
xchg
in
or
jns
jnp
rolb
fldt
fstl
dec
mov
pop
ret
cmp
out
hlt
loopne
cmp
mov
clc
lea
mov
in
xchg
stc
bound
push
jle
fidivl
repz
inc
jb
out
call
push
push
sbb
pop
mov
jecxz
adc
lock
lock
sbb
movsl
test
pop
or
aaa
imul
lods
call
jae
mov
sbb
int3
pop
jne
dec
sbb
cmp
sub
sbb
push
adc
xlat
mov
mov
ja
add
mov
or
add
pop
dec
cwtl
es
cmc
push
mov
jne
pop
push
xchg
push
movsl
add
out
add
cmpb
dec
mov
xor
in
sub
into
ss
cmp
mov
and
jno
aaa
xchg
inc
xorb
popl
pop
mov
decl
pop
sti
leave
fidivs
mov
orl
cld
jnp
sti
or
lahf
mov
add
and
jg
out
or
adc
fiaddl
xchg
imul
loope
mov
inc
jb
xchg
jns
jmp
sub
cli
xchg
loope
sbb
jbe
or
jp
mov
sbb
cltd
mov
es
xchg
daa
inc
xchg
pop
lret
pop
stc
dec
cmpsb
pushf
inc
sahf
bound
inc
sub
mov
push
aaa
dec
mov
or
push
and
lods
int
in
nop
push
push
in
dec
and
mov
and
push
sbb
adc
negl
pop
xchg
lcall
sbb
fbld
cmp
and
xor
gs
cmc
dec
movsl
fisubs
xchg
push
ret
jmp
pop
roll
xor
int
aam
aaa
inc
sti
adc
push
popa
fsubl
repz
in
fbld
xchg
sahf
pop
xchg
push
or
leave
xor
movsl
popa
faddl
or
pop
mov
jo
mov
sarb
clc
xor
lods
pop
and
inc
sbb
cmp
xchg
mov
shufps
in
pop
adcb
dec
mov
xor
xorb
adc
iret
push
mov
les
repnz
xchg
call
inc
mov
inc
push
sub
pop
outsb
lcall
mov
xor
and
push
lods
inc
addr16
jge
rcrl
push
outsb
out
cmpsl
sub
jb
sbb
mov
jmp
or
fwait
jno
icebp
nop
loope
js
enter
mov
mov
push
push
push
add
or
xor
arpl
xchg
xchg
rorl
adc
mov
inc
jnp
xlat
xchg
cmp
xor
loop
outsl
push
popa
xor
sbb
or
jb
inc
xchg
mov
test
es
hlt
movsb
cmp
lods
test
jb
and
jl
stos
mov
cmp
insl
inc
in
mov
jl
fiaddl
cli
out
cmpsb
xor
add
scas
loopne
int
bound
dec
clc
xchg
mov
fwait
xor
out
enter
mov
loopne
push
shl
mov
push
je
cmpsl
push
mov
rcll
fsub
inc
popf
mov
dec
mov
push
xchg
dec
gs
jecxz
add
hlt
mov
jnp
repnz
pop
push
add
out
sub
in
out
je
push
xchg
pop
stos
pop
adc
lahf
push
jns
dec
add
or
inc
mov
inc
in
shlb
out
repz
out
filds
jnp
cmpb
jb,pn
jge
mov
sub
mov
pop
sbb
inc
pop
jmp
sarl
jle
pusha
sarl
out
fwait
xchg
mov
lea
jnp
int3
jmp
or
aas
stc
xchg
in
mov
inc
insb
mov
xor
iret
jae
sbb
aam
in
jno
pop
xchg
insl
dec
push
clc
andb
push
jne
daa
inc
xlat
pop
cs
jnp
cld
mov
loope
mov
dec
lea
sti
les
mov
push
fcmovnu
imul
int3
pushf
cmp
dec
ljmp
test
cmp
iret
jmp
cmp
xchg
in
out
stos
dec
add
ljmp
mov
pop
or
xchg
pop
fdivp
ds
sbb
shlb
bound
jnp
in
mull
xchg
mov
or
xchg
push
xchg
xchg
and
fmul
add
rcrb
xorb
adc
xchg
jns
push
push
sub
ficomps
mov
fmull
icebp
mov
ss
pop
jmp
xchg
test
xchg
dec
scas
ret
fldcw
push
filds
fwait
aad
outsb
adc
mov
lcall
mov
fdivp
sbb
jp
fs
gs
pop
or
jne
jg
lds
aas
test
push
nop
add
mov
outsl
xor
scas
mov
jne
xor
mov
mov
lret
rcr
pop
and
pop
jnp
push
sub
and
rcrb
mov
mov
sub
push
repnz
mov
sub
rol
repnz
aas
mov
cmp
push
dec
testl
pop
sub
sarb
pop
jecxz
push
adc
xchg
pop
addr16
push
daa
cs
ret
into
mov
out
pop
push
in
mov
subb
pushf
icebp
mov
test
jae
mov
cmp
sbb
mov
sub
out
sbb
fsubl
je
pop
fistpll
sahf
test
mov
scas
ss
xor
lea
test
cmp
mov
jle
imul
out
jecxz
jp
xchg
inc
mov
out
mov
cmp
add
sbb
shlb
pop
xorl
out
decb
sti
dec
xchg
gs
push
mov
push
dec
mov
add
sbb
adc
push
sub
lds
push
scas
lock
pusha
inc
jns
enter
nop
fisubl
push
adc
mov
loop
rorl
mov
hlt
lods
push
jne
sbb
icebp
pop
add
popf
fwait
or
jns
call
pop
mov
xor
mov
popf
mov
je
shll
xchg
mov
xor
inc
push
cmp
sbb
sub
xor
pop
xor
movsb
mov
pusha
icebp
pop
test
in
into
out
push
pop
ss
outsb
jecxz
shrb
andl
sub
adc
sbb
push
xchg
ss
aam
and
sub
orb
std
inc
loop,pt
pop
inc
or
das
and
and
sub
push
adc
orb
lahf
and
pop
jnp
jle
das
mov
mov
cwtl
sub
addr16
pop
add
jno
pop
outsb
cmp
aas
mov
and
sub
mov
ret
sub
stc
or
push
xchg
sbb
xor
repz
push
insl
inc
sub
les
mov
pop
xchg
orb
adc
movsb
pusha
fnstcw
flds
and
int
sbb
jg
test
mov
push
inc
xchg
in
fwait
xchg
xor
dec
dec
pop
sub
scas
pop
je
push
scas
pop
ret
leave
sub
lahf
cmp
iret
push
fildl
xchg
hlt
mov
lock
test
mov
and
mov
cwtl
into
push
out
mov
inc
push
inc
int
fsubs
jle,pt
mov
push
lods
mov
dec
push
ja
xchg
ret
adc
insb
out
movsb
dec
fldt
in
jbe
mov
arpl
stos
adc
mov
outsb
fidivs
mov
lock
xchg
ror
inc
fs
adc
xchg
add
test
xchg
xchg
jge
cmp
xchg
and
pop
and
or
lea
lock
add
cmp
rclb
sub
out
lret
jo
unpckhps
mov
ljmp
loop
dec
gs
sbb
repnz
hlt
dec
shl
stos
fdivp
test
inc
xchg
mov
xlat
cltd
lock
sub
adc
mov
fistps
and
pop
fld
aas
imul
fldenv
stos
fld1
jge
outsl
and
and
xchg
dec
mov
dec
push
js
mov
lock
mov
rclb
filds
push
push
xlat
fsubrl
stc
call
fimull
push
mov
mov
mov
test
loopw
pushf
mov
test
in
movsb
pushf
pop
jg
dec
adc
std
xchg
mov
mov
movsl
mov
xor
aas
push
mov
inc
pushf
mov
sbb
pop
push
nop
jecxz
out
jno
dec
xchg
leave
les
ljmp
xchg
fidivrl
sahf
test
enter
adc
cmp
sbb
sub
jns
gs
jp
push
int3
sbb
add
mov
and
or
adc
fidivrs
xchg
adc
or
mov
mov
sub
cmp
dec
sub
repnz
inc
mov
mov
inc
divl
arpl
cli
jp
cmpb
aam
aad
stos
stc
incb
idivb
clc
mov
test
addb
xlat
pop
je
and
in
push
fisttpl
pop
xchg
xchg
in
cmp
jle
fs
sub
pop
sbb
adc
and
sbb
sub
mov
push
data16
push
inc
icebp
popf
stos
das
add
or
stc
mov
xchg
cld
dec
mov
mov
dec
and
fldt
sub
pop
insb
push
adc
xchg
push
aam
push
jno
adc
sbb
add
cmpsb
cmp
jl
xchg
jmp
sub
aad
in
cmp
xchg
mov
dec
xorl
push
test
pop
roll
ret
cmp
xlat
movsb
cmp
lock
push
sbb
mov
repz
es
jle
mov
scas
cmp
gs
or
hlt
inc
fistpll
or
cmp
jecxz
mov
cmpsb
mov
aaa
mov
test
loope
mov
test
mov
outsb
loop
fldcw
adc
shll
mov
sbb
cmp
cmpb
cmp
ret
lock
pop
jmp
pop
shll
test
push
mov
inc
pop
sub
sbb
fcom
mov
shrb
jecxz
mov
in
mov
enter
out
stos
clc
ss
dec
insb
nopl
rolb
ret
in
or
repz
or
aas
or
cmp
sub
leave
pop
inc
xor
sbb
out
lcall
mov
cmp
xchg
or
pop
cs
mov
pop
bound
dec
jp
mov
xchg
dec
cltd
cwtl
mov
push
iret
inc
mov
shlb
or
iret
sbb
dec
mov
jge
mov
lret
les
aam
adc
dec
xor
pushl
lret
popf
sarb
jb
arpl
out
xor
rcrl
push
aam
and
scas
dec
js
sub
iret
sub
iret
cmp
mov
mov
stos
sub
lods
aas
mov
sub
add
rclb
iret
and
xorb
dec
scas
jmp
cli
popf
sahf
dec
clc
and
pop
les
xchg
inc
mov
bound
inc
out
rcrl
mov
sub
jl
out
outsl
fisubl
pop
jnp
jg
or
ds
push
push
ss
cmp
xor
xor
mov
mov
xlat
lret
aas
movsl
stc
loop
jnp
dec
mov
mov
cmp
jno
popf
pop
aam
fdivrl
adc
fucomi
pop
xor
pop
sbb
cmp
stc
and
sub
mov
sub
fwait
ret
lahf
and
les
enter
mov
test
push
mull
or
sbb
cmp
in
lods
cwtl
push
shlb
jl
mov
add
stos
xor
jp
add
pop
mov
and
pop
cli
imul
or
hlt
nop
stos
stc
or
push
aad
movsl
lods
into
test
mov
jecxz
int3
inc
mov
sub
scas
jns
flds
in
jg
inc
add
jp
outsb
test
jbe
pushf
mov
jle
fidivs
std
lock
enter
ds
mov
insb
outsb
cmp
mov
add
jmp
add
push
mov
ficompl
xchg
mov
jmp
cs
fadds
lcall
push
mov
add
add
sub
ret
bound
outsl
cmp
sbb
lea
add
inc
in
dec
pop
and
adc
daa
mov
sbb
je
jne
jmp
adc
adc
loope
xor
aad
adc
or
test
stos
iret
mov
data16
stc
lahf
push
insb
call
sti
push
xor
xchg
idivl
sbb
push
fdivrl
adc
call
and
push
bound
movsb
mov
xor
loope
jae
ljmp
outsb
fldl
xor
js
xchg
aaa
and
test
jbe
mov
mov
adc
sub
dec
notl
lcall
push
or
shll
inc
mov
andb
arpl
mov
add
dec
ret
pop
add
fcmovu
lahf
jne
scas
loop
inc
int3
lods
cli
rorb
test
popa
stc
pushf
int
xor
aad
pop
sub
inc
addl
iret
xorl
fisubs
lret
rcrl
push
jmp
call
icebp
rcrl
sbb
repz
aas
and
test
data16
mov
rorl
jmp
push
and
testb
mov
adc
out
cmp
sub
xchg
sbb
in
xor
sub
aas
lret
orl
pminub
scas
aas
push
maskmovq
divl
mov
add
ror
or
data16
mov
inc
shll
nop
in
push
push
stos
dec
mov
ja
mov
stc
add
pcmpgtb
mov
mov
and
add
sub
jg
or
cmp
stos
inc
add
in
mov
nop
cmp
dec
ror
pop
jle
and
inc
adc
xor
movsb
bound
pop
ss
leave
inc
rorb
xchg
jmp
jns
loope
out
jmp
or
jae
loop
jo
addr16
or
js
xor
pop
in
and
jbe
movsl
mov
xlat
pusha
xchg
cmp
test
popf
adc
adc
sub
cmp
les
test
or
xlat
ret
scas
movsl
xchg
push
or
sbb
mov
sub
or
sub
or
out
imull
dec
movsl
jno
dec
pop
cmp
jg
iret
sub
mov
mov
push
in
xor
jl
out
pop
inc
push
push
xor
and
aas
cwtl
mov
fdivs
sbb
inc
rcl
imul
shr
xchg
ljmp
jp
mov
or
movsl
stos
cltd
or
es
fmuls
lahf
push
jb
cmp
and
jbe
pop
cltd
daa
pop
mov
dec
or
xchg
inc
imul
pop
rcrb
adc
imul
xchg
lea
test
mov
push
mov
std
add
sbb
jns
dec
ret
pop
add
dec
add
cs
out
cmpsb
push
mov
and
mov
xor
pop
and
and
in
pop
arpl
pushf
xchg
pop
pcmpeqb
pop
icebp
inc
inc
in
sbb
mov
dec
lahf
cmp
and
fwait
cltd
or
in
je
jle
adc
out
orl
or
xor
push
in
pop
jle
xor
or
jg
sbb
inc
mov
addr16
xor
je
mov
daa
dec
mov
mov
or
add
aas
dec
dec
repnz
push
lods
dec
incb
dec
repnz
push
adc
hlt
out
sub
das
sbb
cmpsl
leave
xor
insb
dec
push
jb
lret
test
enter
push
jmp
leave
loopne
js
sbb
mov
adc
pushf
xchg
test
mov
xchg
mov
fldenv
in
adc
inc
add
cmp
loop
pop
movaps
test
mov
or
in
test
das
sub
add
or
mov
adc
js
sub
inc
sarl
jecxz
or
aaa
imul
clc
clc
push
cs
add
loopne
aam
xor
int3
cmp
jp
cmpsl
sub
jecxz
xor
adc
inc
or
rcrl
xchg
and
jg
jle
arpl
add
fiaddl
jae
shl
maxps
push
xor
sub
cld
and
mov
icebp
repz
dec
mov
add
sub
test
negl
jo
cmp
add
xor
jnp
mov
mov
add
bnd
sbb
int3
cmp
repz
in
cmc
pop
push
out
repnz
es
xor
jns
cmc
inc
pop
cmp
pop
sbb
mov
sbbb
pop
jmp
or
aas
aam
stos
enter
mul
and
mov
dec
addr16
jnp
test
dec
das
inc
push
inc
xor
pop
xor
fwait
bound
pop
or
arpl
mov
mov
pop
mov
clc
mov
popa
fildl
aam
sbb
lahf
mov
das
add
dec
or
insb
mov
mov
xchg
cmp
loopne
out
mov
pop
mov
mov
push
inc
dec
cmpb
sbb
adc
or
mov
mov
jecxz
stos
pop
mov
fstpl
xchg
push
mov
push
pop
jo
mov
inc
shrd
neg
add
xchg
das
pop
push
pop
imul
dec
repz
mov
xchg
dec
push
xchg
pop
pop
fnstcw
mov
and
xor
dec
stos
inc
test
xor
or
mov
ret
xchg
xorl
psadbw
icebp
and
pushf
pop
bound
cmp
adc
mov
push
mov
add
data16
xlat
push
inc
mov
ds
ja
stc
lock
push
dec
int3
int
adc
repz
and
xor
mov
repnz
les
and
jecxz
stos
fidivrs
adc
enter
jne
mov
add
std
mov
add
push
mov
sbb
and
in
push
xorl
pushf
mov
loope
int3
pop
xor
add
cmpsl
sarb
dec
sub
mov
out
std
imul
sahf
vpunpckhdq
in
push
jnp
lods
and
cltd
push
mov
in
add
mov
sbb
scas
dec
into
jo
fwait
sub
xor
or
sarb
push
jp
dec
add
sbb
mov
into
sbb
jge
or
inc
xchg
call
fiadds
push
jno
shrl
push
fdivrs
dec
test
in
xor
jnp
or
es
dec
sub
xor
mov
sbb
push
mov
mov
xchg
mov
jno
hlt
ja
mov
sub
xor
mov
or
les
mov
pop
dec
stc
or
and
dec
fadds
sub
test
or
shr
sbb
push
rclb
je
nop
cmp
mov
scas
xchg
cmp
out
push
in
or
ja
repz
xchg
enter
xchg
mov
pusha
mov
xchg
xlat
pop
sub
adc
add
ds
add
push
xor
jp
ljmp
sbb
test
mov
jb
in
mov
push
ja
pop
dec
mov
movsb
lahf
repnz
enter
pop
cli
movsb
lods
jae
push
frstor
inc
cmpsb
cmp
cli
stos
adc
adc
lods
push
xor
rcll
scas
pop
fdivrs
test
dec
dec
and
inc
jbe
jp
jge
rcr
xor
mov
icebp
or
adc
push
pop
mov
stc
and
out
push
adc
fsts
or
xor
out
jbe
gs
fwait
sub
add
or
add
adc
jl
sahf
fbstp
pop
pop
dec
std
testb
pop
lret
inc
movsl
adc
arpl
mov
icebp
shlb
and
lahf
repnz
inc
or
dec
mov
pop
int
xchg
or
in
pop
push
mov
and
push
popf
adc
jno
movsb
xchg
fcomps
push
stos
xchg
mov
inc
mov
jle
test
lahf
outsl
cmc
mov
jo
mov
das
leave
pop
jmp
les
jae
mov
cmp
cmp
push
sub
lods
mov
stos
fdivrl
sub
push
cltd
dec
int
ss
mov
repz
mov
repz
jg
mov
divb
lods
xor
sbb
push
cld
or
movsl
rcll
pop
mov
lods
inc
orb
iret
adc
jo
sub
cmp
data16
sbb
push
jmp
cld
push
jb
out
in
mov
inc
fninit
out
ret
dec
aas
lds
addr16
orb
jae
insb
cmpsb
sub
or
jns
subb
dec
andl
adc
popa
cmpsb
add
adc
das
or
mov
jb
stos
ljmp
push
adc
cmp
adcl
movl
insb
repz
push
and
jmp
push
add
mov
test
mov
push
inc
push
popf
aam
cltd
bswap
fisubs
fisttps
jl
mov
jmp
in
lods
xor
push
and
jmp
mov
les
cwtl
push
aad
inc
flds
jns
jecxz
mov
inc
popw
push
iret
pop
cld
jae
add
pop
mov
rcrb
sub
dec
daa
addl
adc
ret
lods
or
scas
das
rclb
mov
push
sub
ret
out
movsl
sub
fnstenv
xor
loopne
push
sbb
mov
out
lret
sub
sbb
aaa
jno,pt
push
decb
inc
loop
dec
movsl
sbb
adc
enter
stos
xchg
and
xchg
pop
imul
sbb
dec
mov
bound
push
popf
cld
sub
xchg
das
data16
mov
mov
dec
mov
pop
pop
lods
stos
addb
shll
test
adc
outsb
cmc
adc
xor
mov
push
adc
sub
addr16
sbb
lods
xchg
push
std
test
into
pop
cmc
clc
pop
dec
adc
jmp
popf
fimuls
in
mov
outsb
daa
mov
rcll
xlat
add
iret
adc
fdivl
dec
mov
push
in
inc
mov
iret
fucom
push
inc
xchg
in
fwait
xchg
xchg
mov
xlat
jecxz
xor
xor
enter
or
push
mov
dec
jbe
shll
insb
pop
xchg
ret
dec
pop
inc
sti
xchg
sub
push
fsub
xor
xorb
lods
pop
sub
scas
mov
adc
movsb
and
sbbl
les
ja
inc
or
dec
leave
fisubs
push
jmp
gs
pop
push
pop
in
int3
mov
lds
fnsave
add
imul
sbb
outsl
pushf
bound
in
mov
dec
jbe
in
sub
js
xor
arpl
test
leave
loope
int3
push
push
sahf
test
leave
adc
xor
and
jecxz
bnd
mov
adc
dec
ret
add
mov
mov
inc
jo
inc
jg
xchg
sub
pop
mov
xchg
js
jbe
pushf
jo
or
in
push
add
call
jp
and
adc
jbe
fstl
xor
loop
lret
nop
mov
imul
cmc
xor
into
call
jno
sub
lcall
sarb
xchg
inc
jg
lret
jne
push
push
push
arpl
dec
mov
cltd
sub
dec
and
push
cmpb
dec
cmpl
cli
fistl
in
dec
mov
pop
paddsw
in
jne
push
pop
add
push
push
xchg
pop
xchg
popa
inc
mov
sbb
das
mov
add
add
mov
int3
enter
movsl
add
push
mov
sbb
outsl
scas
jl
inc
adc
fldl
fisttpll
and
repz
sar
adc
lret
mov
mov
out
les
push
or
dec
ja
mov
xor
inc
hlt
jecxz
lods
pop
xchg
mov
adc
jecxz
shrb
xchg
fildl
sbb
cmpsl
mov
clc
xor
outsb
fldenv
adc
inc
imul
jns
fnsave
add
jb
ljmp
mov
aas
mul
popf
pop
popa
mov
pusha
dec
push
pop
dec
mov
dec
int
xchg
pop
mov
mov
and
jbe
mov
movsl
pushf
add
fwait
arpl
or
out
pop
dec
mov
adc
pop
dec
mov
jg
jnp
ror
mov
inc
cs
ja
mov
adc
xor
mov
jne
dec
mov
mov
ja
inc
mov
push
and
xor
scas
jmp
outsl
jo
outsb
movsb
adc
jns
ss
xchg
inc
enter
addb
dec
aaa
lds
cmp
inc
sub
clc
mov
fucomi
add
and
lods
popa
mov
out
hlt
fimull
pop
lahf
fcoms
inc
sbb
dec
fnsave
pop
mov
mov
xchg
les
les
in
call
dec
aaa
pop
fmuls
xor
push
jmp
out
lcall
aad
push
xchg
dec
sahf
jecxz
aam
xchg
push
or
push
cmp
pushf
dec
out
cmp
inc
imul
jp
mov
repnz
adc
lcall
sbb
fwait
in
push
inc
mov
jnp
sbb
in
fbstp
cmc
xchg
shrb
jae
lock
movsl
fcoml
mov
mov
xchg
std
inc
lret
sub
cmp
dec
dec
jno
in
inc
mov
pop
xchg
and
inc
sbb
xchg
lcall
sbb
cmpsl
sub
popf
fisttpll
cmpsb
pop
jg
jp
out
mov
aad
in
sahf
or
push
clc
pop
add
xor
addr16
fidivrl
or
rclb
rcl
dec
jo
gs
xor
and
mov
pop
clc
dec
outsl
xor
xchg
movsb
mov
or
pop
stc
xchg
cwtl
adc
push
sahf
cmc
mov
mov
in
cmp
xor
popa
or
xchg
sub
xor
aam
cld
inc
cmp
jo
inc
lock
lahf
or
enter
incl
bound
out
push
clc
mov
mov
std
cmp
test
es
pop
lds
sti
lahf
cld
adc
and
ret
pop
pop
mov
hlt
sub
outsl
xchg
mov
out
pushf
xor
outsl
mov
or
out
adc
fcompl
jmp
imul
mov
mov
cltd
or
cmp
mov
popa
and
notl
or
popa
repz
inc
es
and
xlat
incb
pop
push
add
xchg
jmp
arpl
out
inc
rol
mov
lods
call
mov
push
cmp
lret
aas
test
insl
or
loope
out
scas
fists
sbb
js
outsb
push
mov
dec
loopne
nop
js
lahf
test
jbe
mov
sarb
pop
cmp
roll
mov
gs
cmc
cltd
repz
push
sub
jno
sbb
je
sub
rcrl
sti
in
sub
adc
test
sub
out
imul
or
mov
jne
mov
jb
add
stos
scas
call
pop
popa
movsb
jp
mov
mov
call
nop
dec
pop
ja
add
lahf
add
mov
adc
int
in
mov
sub
js
stc
lock
mov
inc
in
orb
pop
rcll
push
add
and
out
jmp
mov
cmp
lahf
pop
xor
mov
arpl
pushf
mull
repnz
je
pushf
pop
mov
and
jo
movsb
decl
jne
mov
cli
jg
mov
sbb
fsubs
test
std
or
clc
add
or
mov
xchg
mov
xor
pop
adc
fiaddl
add
push
mov
shr
add
hlt
mov
imul
mov
lock
push
or
lcall
aaa
sbb
and
sbbl
or
mov
mov
imul
push
iret
pushl
xchg
mov
aad
push
mov
imul
xor
push
xchg
orl
mov
movsb
rcrl
ds
jg
cltd
jo
inc
ds
push
ret
adc
stos
xor
lret
movsl
shl
hlt
cli
pop
enter
or
jne
push
push
jne
jg
dec
adcb
cmp
inc
or
arpl
sub
shll
pusha
out
sub
xchg
insb
push
fldl
jbe
mov
leave
lahf
mov
cwtl
es
or
scas
lea
scas
push
dec
xor
adc
call
ds
dec
adc
arpl
int3
ljmp
add
sbb
scas
push
sbb
ds
xor
push
fldt
dec
call
loope
xchg
lods
popa
push
xor
inc
ljmp
lock
lods
pop
xor
inc
mov
mov
cmp
push
mov
mov
test
xchg
cmp
js
pop
into
rolb
pop
stos
imul
sbb
ljmp
fwait
cmp
and
stc
mov
aam
pusha
jb
loope
rorl
mov
or
xchg
pop
and
mov
testb
ret
fdivr
je
sbb
mov
adc
mov
or
cmp
adc
or
adc
lcall
stos
iret
cwtl
dec
repz
mov
fsubrs
out
icebp
aad
std
andl
dec
mov
clc
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
add
add
inc
add
add
or
inc
add
add
adc
inc
add
add
sbb
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
add
add
add
add
add
add
add
roll
add
lds
add
adc
add
inc
add
adc
or
inc
add
adc
adc
inc
add
adc
sbb
inc
add
add
add
inc
push
dec
or
cli
xor
dec
in
jne
xor
add
add
inc
cmp
outsw
inc
outsl
insb
fs
popa
je
pop
push
imul
outsb
je
jb
popa
insb
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
adc
ret
dec
das
arpl
add
add
sbb
std
loop
in
out
clc
add
dec
xchg
adc
jp
je
popa
sub
call
icebp
arpl
add
or
fmulp
adc
movsb
xor
mov
push
test
adc
mov
mov
and
outsb
leave
mov
sbb
pop
xchg
adc
insl
add
popf
push
or
mov
jmp
ds
ret
or
cmp
xlat
xchg
push
jo
test
xchg
and
jle
push
push
sub
loope,pt
test
cwtl
fwait
mov
cld
push
std
outsl
mov
aas
loop
inc
cmp
pusha
pushf
inc
scas
cmp
flds
or
jg
or
xchg
add
in
sbb
js
filds
mov
add
ja
bound
aam
push
lds
pop
cli
xor
das
add
cmp
mov
sbb
gs
push
push
jnp
out
mov
push
jbe
and
mov
cmp
sub
dec
jecxz
shll
mov
adc
pop
out
xchg
lods
xchg
dec
jno
xchg
cmpsb
into
and
mov
mov
call
roll
cmp
sbb
cmp
xor
jnp
insl
js
xlat
dec
scas
add
fs
mov
or
je
lods
aas
push
fcomps
pop
jo
inc
je
pop
sahf
push
fisttpl
jns
mov
imul
inc
or
lods
in
inc
push
sub
push
call
and
lret
ret
adc
add
in
sub
hlt
test
sbb
pop
cmpsl
or
mov
js
sbb
in
imul
mov
sbb
aaa
pop
andb
js
fwait
into
sbb
lds
data16
cmpsl
idivb
push
lahf
loope
arpl
scas
add
mov
jle
mov
cld
lea
add
mov
int3
andl
loopne
in
decb
and
orl
or
mov
inc
xlat
mov
xor
fisttpll
rclb
pop
ss
pop
loop
adc
jo
inc
jne
dec
add
aad
xor
cltd
adc
sbb
inc
cmp
pop
xchg
ss
sarl
lcall
mov
xchg
insb
adc
cmp
jl
or
cs
das
push
mov
or
out
cmp
jp
jnp
sub
xchg
dec
jnp
jmp
xchg
xchg
pop
pop
daa
pop
xor
outsl
pop
repnz
xlat
shrd
or
ror
lea
xlat
ja
mov
xchg
enter
push
sbb
jecxz
push
sbb
in
sbb
sub
sbb
mov
test
jg
mov
iret
pop
sbb
adc
push
adc
fistpl
xchg
lods
fcoms
and
das
xlat
pop
scas
pop
nop
dec
mov
int
lahf
pop
mov
das
jae
inc
pop
pop
dec
add
test
mov
or
lea
loopne
mov
add
in
cmp
lcall
mov
xor
pop
mov
ljmp
les
add
lret
jae
leave
insb
sbb
ficompl
inc
out
incl
adc
jle
je
shr
jns
jmp
xor
jle
sbb
pop
cmp
in
pop
xchg
xchg
cmp
enter
mov
mov
pop
mov
fbld
in
pop
push
popa
sbb
push
pop
sbb
insl
and
dec
call
test
dec
pop
jmp
add
jmp
pushf
aad
mov
jmp
in
push
js
mov
jne
add
call
dec
mov
pushf
mov
insb
adc
mov
dec
cmpb
cmp
adc
xchg
int
and
mov
loop
sub
mov
jae
lret
push
mov
in
sbb
jno
lods
cmp
out
sarl
jp
outsl
popf
lcall
and
das
mov
es
xor
cmpsb
mov
push
jge
jae
aas
cld
xchg
cmp
fsubrs
nop
dec
add
add
fstps
xor
push
hlt
mov
add
mov
push
into
pop
pop
sub
push
call
jle
push
rcr
aam
xchg
dec
sub
hlt
pop
sbb
rcll
outsb
jbe
push
gs
popa
cmp
cld
fs
mov
dec
and
mov
sub
call
sahf
jne
stos
in
int
test
aad
mov
pop
push
or
add
and
push
js
mov
cmp
and
inc
xchg
push
lcallw
pushf
sar
adc
lock
adc
insb
push
xchg
pop
imul
inc
sbb
fidivrs
mov
add
fcompl
lret
pop
mov
jl
scas
push
sub
dec
rolb
test
jb
mov
xorb
jg
int
icebp
push
shll
adc
mov
int
lods
pop
lock
adc
into
fldt
sbb
pop
mov
mov
dec
pop
icebp
pop
popf
lahf
or
pushf
xor
mov
sub
push
pop
sar
call
or
ss
dec
sbb
movsb
cltd
mov
xor
or
test
pop
out
iret
push
mul
lds
into
pop
xor
pop
push
jmp
inc
clc
gs
popf
jg
enter
test
mov
add
add
add
sahf
jg
sub
lret
sub
popa
or
lea
xor
sbb
mov
jmp
sahf
out
sub
add
leave
add
scas
lds
mov
stos
out
stc
fisubrl
xchg
out
adc
xchg
fwait
lods
mov
fnclex
push
lods
into
mov
or
mov
jg
test
scas
shl
pop
xchg
mov
gs
scas
cmpsl
xor
sbb
adc
int3
jmp
jl
dec
les
subl
popw
jae
adc
pop
enter
xor
xor
dec
mov
mov
inc
sbb
mov
dec
out
cmp
and
pop
mov
inc
sbb
and
scas
aaa
push
repnz
lods
xchg
das
call
xchg
popa
or
push
pop
jge
inc
aaa
sbb
lods
in
push
stos
out
or
inc
push
sub
pop
aam
mov
mov
mov
jl
roll
sub
xchg
cltd
add
enter
and
sbb
sbb
and
sub
push
inc
sti
movsl
or
cltd
push
dec
add
mov
and
sbb
fidivrs
movsb
loope
push
adc
insl
mov
aas
xlat
pop
ds
mov
mov
clc
add
mov
jle
loopne
mov
mov
popa
mov
push
out
popa
rorb
xor
popa
cmp
mov
mov
xchg
inc
inc
push
and
enter
pusha
arpl
fldl
push
or
lods
jo
sbb
sbb
add
xchg
xchg
daa
lods
arpl
lret
div
xchg
mov
cwtl
pop
sbbb
loope
add
mov
add
add
add
cmp
xor
dec
jno
mov
jae
cmp
cmp
jns
and
rolb
repz
pop
std
in
push
movsl
push
loope
iret
add
xchg
ja
inc
loop
adc
pop
mov
mov
mov
add
out
loopne
lea
loope
jmp
fs
out
in
out
mov
dec
dec
sbb
arpl
pop
mov
cli
out
repz
push
cs
mov
aad
std
xor
subb
mov
fadds
sub
cli
test
fsts
and
in
lret
test
fcmovnb
mov
mov
dec
addr16
sti
push
pop
push
outsb
xchg
out
popa
mov
xchg
lret
movsb
es
stos
add
xlat
test
vpcomuq
mov
mov
les
iret
cmc
mov
mov
test
adc
adc
or
push
jo
adc
and
xchg
inc
cld
cwtl
stos
inc
dec
in
and
dec
jg
mov
in
out
push
sahf
inc
out
xor
adc
dec
int3
pop
mov
dec
or
inc
add
mov
xor
inc
mov
dec
or
div
adc
sti
and
add
test
ds
mov
cmp
mov
je
std
cmpsb
jmp
int
int
inc
add
jnp
in
shrl
rorl
fbld
mov
jmp
mov
incl
addl
lods
sub
xchg
mov
xchg
popf
jno
movsl
sub
loopne
and
ficoms
imul
leave
mov
in
aaa
fisttpl
xor
jge
jb
mov
cmp
push
or
call
jecxz
sbb
and
add
add
nop
mov
push
mulb
push
xchg
dec
sbb
xchg
sbb
fwait
sub
insb
pop
hlt
loope
add
jge
and
repz
mov
dec
ret
repnz
lcall
adc
or
imul
push
std
push
sub
je
fwait
icebp
xchg
out
sbb
shll
lret
icebp
mov
mov
or
stos
adc
xlat
inc
leave
xchg
cmpsb
sahf
xor
out
ljmp
sub
stos
cmp
push
xchg
aad
cmp
xor
cmp
inc
movsb
pop
cmc
test
and
pop
movsb
cwtl
mov
addr16
ficoms
iret
sbb
jmp
repnz
mov
movsb
stos
xchg
cld
out
lahf
xchg
xchg
rcrb
cmp
xor
inc
fisttps
lret
pusha
push
shlb
insl
jbe
pop
mov
push
in
sahf
fcmovu
cld
add
inc
add
jge
lods
mov
stos
jg
dec
inc
push
out
push
aaa
mov
inc
push
mov
shlb
sbb
jo
xchg
ret
clc
pushf
adc
xor
xchg
imul
and
int
jbe
mov
pusha
les
fs
cmp
dec
inc
cltd
pop
outsl
pushf
imul
das
cltd
lods
push
scas
leave
or
cmpsl
xchg
mov
push
push
roll
cmpsl
aaa
mov
and
jbe
shr
je
aas
and
inc
fwait
and
lcall
xor
jg
sbb
inc
xchg
int
pushf
adc
pop
mov
popa
adcl
out
dec
out
pop
test
mov
lods
mov
xchg
mov
dec
jb
stc
aaa
ljmp
lods
cld
mov
push
jge
mov
add
add
add
inc
sahf
ja
jns
sub
rclb
addb
cltd
push
nop
addb
dec
mov
mov
out
push
shlb
sub
mov
cmp
mov
stos
add
mul
cmp
and
lcall
jae
push
and
jns
inc
xchg
cmp
inc
popa
pmullw
xchg
movsb
push
or
add
or
mov
add
jp
mov
mov
in
fsubrl
cmp
aaa
loope
fcoml
mov
jae
cmp
repnz
mov
xor
jno
cltd
rorl
loop
mov
call
mov
xor
lods
fidivrl
jge
sub
jge
cmp
pop
and
js
xchg
leave
and
sarl
or
dec
cmpsl
cmpsl
bound
adc
mov
cld
sahf
pop
int3
inc
aad
movsl
lods
mov
in
lods
lahf
push
scas
sti
or
imul
mov
inc
rcrb
in
mov
add
mov
jl
lcall
or
cmpsb
pop
aad
pop
test
bound
cmp
cmp
repz
repz
push
add
jmp
lahf
pop
leave
push
hlt
lea
stos
out
adc
into
jg
arpl
or
int3
and
adc
sub
inc
mov
setbe
pop
jnp
hlt
mov
sbb
ds
aas
and
push
std
inc
enter
inc
xchg
bsr
cld
mov
pop
lds
sub
stc
ficoml
int
mov
cmpsb
bound
mov
cmp
pushf
out
stc
jo
xchg
mov
fs
mov
inc
cmpsl
es
neg
jmp
popa
test
clc
std
xchg
add
call
mov
push
inc
faddp
pop
leave
push
lds
mov
add
adc
and
push
lcall
mov
adc
dec
mov
outsb
sub
jl
fisubs
dec
loop
pop
sbb
push
cmp
aaa
iret
sbb
imul
jo
iret
in
sub
nop
call
adc
cmp
or
jne
xlat
je
pop
xchg
jp
xchg
sbb
outsb
mov
jl
fsubs
stc
jns
loopne
cmp
jae
adc
imul
dec
pop
lea
shrl
push
sub
in
out
cmc
jge
adc
outsb
popa
rcr
xchg
aas
cmp
and
incb
lret
sub
hlt
jo
scas
push
jns
inc
mov
add
test
mov
dec
sbb
mov
sti
or
inc
cmpsb
jmp
jb
add
mov
sub
loop
mov
push
aaa
xor
repz
dec
test
out
adc
jns
mov
cli
je
add
aas
mov
leave
cmc
ret
push
adc
mov
or
popa
pushf
jge
sbb
and
dec
pop
adc
xchg
or
popf
test
sti
push
mov
mov
adc
xchg
xchg
jp
repnz
pusha
push
inc
rcrb
jae
jb
xchg
or
xchg
stos
push
push
push
jmp
aaa
jno
sbbl
fldenv
fstpl
lods
rcll
pop
rdtsc
lods
fidivl
mov
pop
roll
imul
mov
and
inc
cmp
inc
mov
mov
icebp
out
or
adc
test
and
dec
mov
mov
hlt
sti
ljmp
xchg
sarl
call
es
lock
je
mov
cli
xchg
repz
jmp
dec
jge
gs
ja
idivl
xchg
mov
jbe
cld
sarb
inc
hlt
cmp
mov
scas
orl
xor
inc
add
cmc
cs
test
push
pop
dec
and
mov
aam
fists
push
inc
and
sbb
jns
adc
lret
sahf
addl
sbb
inc
test
jmp
fwait
jg
adc
aas
lret
add
addr16
cmp
mov
mov
loope
dec
adc
jne
mov
out
hlt
scas
mov
out
mov
or
mov
rclb
adc
lret
fsubrl
cmp
dec
lret
test
ret
data16
popa
dec
out
cli
nop
xlat
outsb
scas
push
xorl
hlt
push
mov
xchg
xchg
int
xor
imul
cmpsl
popa
sub
inc
push
and
test
cmc
push
ljmp
lds
sti
gs
mov
or
ror
cmp
pop
sbb
push
xor
insl
pop
data16
pop
lods
les
cmp
mov
push
pop
ret
pushf
mov
pop
mov
push
movsb
mov
out
call
lcall
loope
out
gs
out
std
jb
push
gs
pop
std
mov
lods
out
xchg
dec
mov
aam
add
aam
aad
shr
cmc
loopne,pt
mov
outsb
clc
ljmp
cmp
cmp
jecxz
mov
insb
fistpll
add
movsb
add
xchg
or
or
sub
xchg
sbb
push
jne
loop
scas
cmp
add
call
xor
sbb
arpl
pop
jns
rorb
movsl
ret
sub
and
loop
jo
clc
sub
fbld
adc
sub
cmp
xor
mov
sar
mov
imul
add
lahf
ds
imul
or
popf
int3
dec
pop
mov
mov
mov
and
pop
sub
jg
and
repnz
xlat
pop
daa
and
je
stos
xor
sbb
sti
jp
leave
dec
pop
js
push
jns
and
roll
mov
int3
add
pop
ror
jle
shlb
insb
cvtpi2ps
loope
hlt
loope
lret
mov
fcmovnbe
pop
mov
mov
cmc
mov
push
cli
shll
lahf
fxch
lret
mov
orb
inc
sbb
leave
push
pusha
ret
xchg
imul
add
sbb
div
cltd
sub
int3
lods
pop
add
add
insl
out
xor
push
stos
push
shrl
cltd
outsb
mov
jp
ds
arpl
das
stos
ljmp
cmp
mov
out
mov
int3
dec
ret
xchg
pop
call
sbb
cld
lret
and
fwait
lcall
bound
mov
ss
push
in
call
mov
dec
andl
andl
cli
sbb
rolb
rcll
mov
jb
and
and
icebp
rclb
mov
or
ds
dec
cld
dec
insb
shlb
rorl
xchg
add
lahf
mov
testl
inc
stos
lods
bound
adc
mov
or
adc
push
lahf
xchg
xor
mov
int3
jecxz
adc
lret
shlb
out
and
into
and
mov
cltd
add
call
push
mov
cmp
push
test
loop
and
add
inc
push
sarl
hlt
data16
cs
imul
stos
sub
call
mov
xor
jo
popa
andl
or
dec
xor
add
cmc
addr16
mov
testb
nop
dec
cmpsl
jl
rcr
and
and
ss
sti
fs
mov
pop
lods
xor
mov
popf
dec
xchg
out
dec
push
iret
in
enter
js
inc
xchg
pop
push
aad
push
lods
or
stos
push
xchg
fimuls
sub
gs
mov
lret
outsb
sbb
dec
jae
xor
neg
enter
ljmp
lods
xor
std
mov
repz
in
out
dec
fwait
cld
xchg
das
mov
or
cmp
add
add
in
repz
mov
xchg
loop
das
pop
pop
mov
or
push
sbb
fsubl
std
add
push
call
pop
mov
test
pop
inc
sub
add
adc
outsb
xlat
and
int3
and
mov
add
dec
mov
enter
mov
mov
push
fsubl
pop
xor
sbbl
loope
in
hlt
and
movsl
and
mov
daa
mov
mov
fisubrl
pop
js
daa
jl
int
cmp
mov
add
sub
popf
or
outsl
push
push
cmc
push
or
xchg
push
pop
ret
pop
fdivr
mov
loopne
dec
push
mov
out
in
xchg
ficoml
ja
loope
in
jae
push
cmpsb
into
aaa
pushf
pop
sbb
stos
cmp
sub
or
sete
mov
pop
jns
sbb
aas
daa
fdivrl
leave
or
xor
xor
stos
popf
fwait
add
call
and
add
sub
loopne
adc
xchg
pop
mov
or
shrb
pusha
cmp
pop
sub
lret
out
fisttps
dec
fsubl
add
into
pushf
and
or
inc
mov
cmp
sbb
lret
fiaddl
xlat
mov
loop
daa
xchg
xchg
jp
maskmovq
testl
outsb
sbb
sub
push
dec
shll
ljmp
test
push
or
mov
cmp
pop
xchg
or
jge
and
and
xchg
mov
imul
sbb
jp
push
leave
shll
rcrb
negl
xchg
jnp
mov
xor
cld
idiv
push
stos
out
dec
push
daa
jae
mov
pop
push
cmpsb
sar
es
sub
ret
cmp
iret
pop
outsl
int3
pop
rclb
lret
lods
out
xor
xchg
mov
jno
add
aad
jb
test
out
out
adc
sbb
xchg
imul
xor
cmp
jnp
push
dec
sbb
es
dec
adc
ret
sbb
push
in
sub
je
out
lock
ret
jge
cmp
push
pusha
jnp
fdivrs
add
jne
js
xlat
pop
cli
aad
or
adc
and
xor
pop
scas
inc
call
cwtl
mov
sub
loop
int3
stos
popa
insb
es
or
cmp
push
into
scas
scas
es
stc
adc
mov
je
scas
aas
xor
mov
aam
mov
or
jns
mov
adc
pop
or
adcl
outsl
fnstsw
ja
sbb
and
xchg
addr16
or
out
out
out
cltd
ja
daa
loop
xchg
jp
test
add
inc
imul
andl
sbb
dec
adc
outsl
mov
jecxz
pop
je
mov
push
push
movsb
ret
xchg
add
aad
mov
mov
enter
int3
lds
in
scas
bound
and
leave
loope
imul
or
pusha
sti
dec
add
js
lods
or
and
test
adc
das
ja
cmp
cmpsl
addb
movsb
inc
mov
xchg
push
decl
xchg
stc
and
xchg
mov
push
pop
test
push
insl
push
lods
movsb
fmuls
mov
jle
xchg
test
push
or
pushf
in
jne
stc
xor
fs
xor
nop
pop
stc
frstor
cwtl
fdiv
mov
mov
shrl
push
push
loopne
test
movsl
inc
mov
les
or
add
xor
lret
jg
inc
mov
cmp
lret
fiadds
pop
adc
shll
sbb
mov
jb
loopne
sbbl
fptan
xor
sbb
or
idivl
sub
cmovg
std
xchg
push
aaa
xor
and
pop
dec
mov
popa
mov
ret
and
fs
lea
cmp
mov
pop
fldl
xor
rcll
sub
jae
out
sbb
and
test
into
sub
push
jo
jg
cld
sahf
or
lcall
sarl
sub
push
push
bound
sub
jne
outsl
testb
sbb
push
faddl
les
int
hlt
mov
cli
inc
adc
jmp
ds
ljmp
jge
popa
xchg
addb
lcall
cwtl
dec
popa
icebp
mov
mov
pop
push
add
fimuls
or
xchg
inc
mov
or
push
mov
add
add
add
cmp
leave
add
sub
aad
mov
js
xchg
mov
cmp
inc
cmp
test
ljmp
inc
rol
adc
sbb
sbb
mov
lret
jne
icebp
pop
or
in
mov
xchg
and
or
mov
xor
inc
out
mov
aam
stc
xchg
push
pop
xchg
and
lcall
into
clc
mov
pop
int3
aam
sub
xrelease
sbb
mov
xor
add
or
sbb
jmp
jecxz
pop
test
pop
andl
adc
imul
movsl
push
inc
xchg
or
fisubrl
cmp
ret
ret
dec
mov
rolb
adc
xchg
outsl
pop
repz
and
xchg
dec
push
fnsave
mov
mov
mov
sbb
xchg
push
or
push
xchg
fistpll
sbb
pop
pop
xchg
int3
jmp
or
jae
ds
out
pop
add
and
xor
xlat
mov
fidivs
movsl
dec
and
cmc
imul
rolb
mov
push
shrb
repnz
xor
scas
adc
das
pusha
push
aas
test
and
cmp
lahf
test
xchg
loope
mov
es
and
imul
jae
sbb
pop
push
xchg
pusha
jg
fidivrl
fwait
pusha
xchg
inc
ret
adc
ljmp
data16
and
enter
sbb
push
cld
stos
or
pop
je
xchg
lret
jmp
mov
dec
icebp
iret
stc
mov
loopne
aaa
lret
mov
add
insl
mov
pop
inc
sbb
ljmp
lea
jmp
push
lds
adc
mov
cs
and
hlt
push
divl
clc
sbb
jnp
outsb
inc
cmp
aam
adc
sub
push
mov
iret
mov
xorb
xchg
mov
inc
insl
adc
xor
cmpsb
mov
imull
ja
fs
ljmp
jp
dec
out
pop
test
dec
and
fdivrp
and
sub
jbe
fldenv
jle
call
sbb
loopne
inc
sub
icebp
cmp
lock
sub
jmp
lret
iret
decl
pop
mov
add
sti
scas
jl
add
fidivrl
inc
in
dec
ret
mov
lods
xor
call
cmp
sbb
jecxz
sub
int
cmp
decb
or
pop
aad
pop
push
out
cld
outsl
cmp
lret
std
sub
xlat
ljmp
add
sbb
les
push
jns
pop
aad
pop
jbe
rcl
pop
pop
or
push
push
jl,pt
stos
lods
jp
jb
push
adc
insb
xchg
pop
sub
or
movsb
js
dec
dec
sbb
jg
xor
jne
jecxz
int3
jge
add
mov
leave
loopne
inc
mov
je
or
push
mov
scas
dec
fnstsw
icebp
hlt
loop
cmp
in
test
cmp
xlat
inc
orb
add
sbb
sbbb
dec
cwtl
mov
adc
movsb
adc
mov
pop
sbb
push
or
and
dec
cwtl
push
mov
dec
addr16
dec
lret
xor
mov
fists
and
push
scas
jne
xlat
dec
call
loop
les
ja
mov
add
inc
jnp
ret
and
imulb
push
cs
pop
xchg
leave
data16
mov
adc
mov
jg
insb
push
jns
or
and
jg
jp
push
imull
imul
clc
out
adc
in
popa
ja
cmp
scas
ss
dec
outsl
add
jnp
sbb
mov
stc
inc
aad
notl
das
push
dec
gs
xchg
sbb
int3
call
mov
sub
inc
sub
scas
mov
xor
pop
sub
inc
movsb
loopne
or
stc
pop
xor
xchg
mov
push
and
mov
bound
shlb
add
push
push
nop
lret
scas
mov
roll
jl
xchg
scas
adc
mov
insl
mov
jl
mov
bnd
jg
fs
xlat
enter
bound
sub
xchg
mov
push
or
sahf
push
out
mov
fisttps
nopl
scas
je
fs
mov
inc
scas
nop
aam
mov
pop
cmp
fidivs
sbb
mov
jecxz
std
xorb
add
mov
sahf
aaa
adc
xor
jns
sti
test
les
addr16
shll
cmp
fs
push
fdivrl
scas
ficoml
cwtl
lret
mov
ja
adc
xor
jmp
lods
mov
nop
fnsave
out
or
mov
push
or
cmpsl
cmp
std
in
and
add
aaa
xchg
cmpsb
pop
stc
int
cwtl
rcll
sbb
loopne
push
mov
scas
mov
inc
std
cwtl
pandn
lds
out
mov
cmp
sub
xor
jecxz
ljmp
adc
or
icebp
mov
mov
imul
out
jnp
mov
xlat
paddd
cs
and
add
add
mov
mov
add
pop
sbb
lods
clc
push
in
inc
cmc
dec
jns
and
popf
and
cwtl
dec
push
movsl
cmp
jne
clc
add
cmp
shrb
dec
repz
outsl
fnstsw
jno
cli
jns
insl
pop
imul
popf
push
hlt
push
aaa
loope
lds
inc
out
inc
int
cmc
and
mov
add
xor
or
pop
mov
mov
fisttpl
imul
in
mov
mov
fnstcw
jbe
adc
dec
fmull
pop
adc
and
imul
xchg
sub
or
push
cmp
adc
push
aad
pop
mov
shll
inc
mov
lds
push
inc
scas
xor
ja
shl
cmpsl
jmp
sub
cmovne
pop
or
xchg
in
push
mov
out
jle
mov
jecxz
pop
and
mul
inc
mov
lea
notl
mov
loop
mov
stos
ret
add
daa
pop
cld
lret
push
lahf
or
movsb
push
push
push
fstpl
pop
jg
scas
test
pop
sbb
xor
les
mov
insl
mov
jg
sub
fcomip
sbb
das
push
lret
rol
leave
cmpsl
test
dec
cmp
mov
mov
fs
push
sub
xchg
jmp
sub
mov
lods
ja
addl
cs
xchg
repz
out
ja
jo
sub
add
inc
jns
js
sbb
iret
neg
inc
icebp
sbb
adc
inc
or
lock
jns
scas
mov
iret
xlat
enter
mov
dec
ljmp
push
call
adc
jg
jns
dec
lea
dec
pop
or
add
add
fsubs
add
mov
fs
lret
push
enter
pop
jnp
pop
in
stc
push
sub
pop
lea
sub
xchg
mov
add
test
add
sub
sub
jl
jae
add
jns
into
inc
pop
add
sti
sbb
out
adc
lcall
test
jb
subb
xchg
pop
lods
clc
pop
icebp
fdivp
imul
xchg
jmp
int
push
addb
cmp
rclb
pop
fidivl
lds
out
jne
mov
loope
ds
ss
loop
lret
cld
mov
ffreep
ljmp
adc
out
ljmp
jb
cwtl
out
or
jle
cmc
lcall
or
movb
dec
fcomps
out
mov
jae
pop
imul
add
jl
mov
pop
popf
cld
mov
clc
jb
xchg
push
mov
jbe
mov
shll
cmp
adc
lds
pop
aaa
mov
lods
gs
push
push
pop
repnz
lret
cmpsl
addb
or
add
lcall
xchg
inc
cltd
push
iret
inc
add
push
and
sbb
es
sbb
mov
in
pop
dec
stos
xor
xchg
xchg
ljmp
mov
or
jp
rcr
push
cmp
fwait
mov
iret
xchg
dec
std
lret
rorl
rcrl
out
xchg
or
aad
push
add
das
xchg
fsts
fiadds
xor
loope
fnsave
fcmovnbe
sbb
movsl
xchg
mov
pusha
pop
lret
fsubrp
sbb
int3
pop
cli
outsb
idivl
testl
test
add
add
add
clc
add
das
adc
outsl
pop
dec
out
bound
mov
and
outsb
pop
mov
add
int
cltd
mov
mov
hlt
push
ss
and
mov
xchg
push
imul
fbld
andl
leave
sbb
push
push
subb
cmp
and
das
mov
xlat
sub
inc
xlat
pop
xchg
or
jle
out
cmc
mov
cli
cmp
in
scas
jmp
pop
dec
xchg
mov
pop
add
xor
add
sbb
mov
je
fidivs
pop
or
jecxz
es
sahf
lock
cmpsb
pop
push
jge
push
test
jne
ds
stc
loopne
stos
dec
sbb
test
fldcw
sub
inc
sbb
mov
jae
sahf
lahf
das
jb
inc
add
or
inc
mov
arpl
fdivs
mov
fadd
inc
test
or
dec
cwtl
movsb
mov
nop
mov
in
pop
popa
mov
dec
pop
jne
shl
push
jo
popf
pop
sbb
sub
sub
gs
mov
cmp
fstpl
cmp
mov
or
movsl
cltd
lea
inc
sub
cmp
testb
test
pop
xchg
loopne
inc
in
jae
cmp
push
insb
out
jp
add
mov
jbe
cmpsl
ror
push
not
inc
sar
stos
inc
adc
adc
push
test
push
aam
lods
cltd
sub
mov
and
sarl
in
xchg
negl
in
and
out
pop
insb
push
push
leave
xor
mov
lds
lret
addr16
adcb
push
inc
jo
sbb
in
test
jle
mov
les
sti
lods
xchg
loop
xchg
inc
repz
add
push
push
and
fldenv
in
pop
lds
ret
iret
icebp
mull
in
mov
es
cmp
xor
lahf
cmp
lret
outsl
sub
popa
mov
push
or
mov
or
sbb
cmp
cli
mov
xlat
xor
adc
loop
pop
loop
or
push
xor
and
imul
stos
mov
mov
and
or
mov
push
stos
add
xor
in
std
push
aam
sub
dec
test
loopne
mov
mov
adc
fwait
pop
aam
repnz
sbb
cli
pop
jbe
scas
sti
and
daa
std
repz
cmc
sti
mov
pop
cltd
cmp
pop
inc
pusha
inc
clc
jl
in
ss
mov
jp
push
sbb
cmp
iret
enter
jae
in
insl
mov
jl
inc
cmp
dec
arpl
push
lods
xor
push
adc
lahf
gs
stos
movsbl
xchg
mov
inc
xor
popf
stos
dec
xchg
fcomip
or
test
cwtl
outsb
je
jnp
outsl
dec
xchg
movsb
sbb
xchg
mov
xchg
lret
ficoml
adc
cmp
in
jno
adc
pop
mov
sbb
scas
in
fs
ja
sub
or
sbb
sahf
xor
or
add
sub
jp
mov
mov
cmp
xchg
inc
sub
scas
pop
out
jno,pn
push
dec
push
push
mov
call
inc
pop
mov
rolb
std
aam
dec
in
mov
dec
shll
and
jl
xchg
adc
and
mov
faddp
mov
sub
test
jns
insl
inc
xchg
test
mov
pop
or
pop
es
in
push
cld
cs
repnz
std
push
lret
cmp
lds
add
inc
xchg
mov
arpl
imul
adc
popa
stos
sub
lret
rol
add
fwait
push
add
xchg
pusha
push
xor
bound
lods
jns
sbb
dec
lods
shl
imul
sbb
fistps
mov
in
push
and
push
daa
or
inc
dec
or
idiv
xorb
fdivrp
in
xchg
fists
js
pop
pop
mov
or
frstor
sub
getsec
mov
add
in
jns
jns
push
cli
out
jns
adcl
push
and
xchg
jg
jnp
aas
bound
lahf
mov
cld
push
jmp
sub
lds
add
insb
subl
or
cmp
jns
jnp
lcall
test
fxch
mov
push
mov
mov
ret
addr16
sti
mov
scas
sbb
or
pop
xorl
push
mov
pop
test
sbbl
cmp
xor
inc
or
xchg
dec
dec
jge
imul
pop
mov
adc
mov
jbe
lahf
dec
idivb
sub
lea
ficompl
loope
sub
adc
fldl
dec
xorl
add
jnp
mov
int3
xchg
inc
dec
aam
test
mov
sub
fimull
cmp
leave
jp,pn
loope
push
jnp
sbb
mov
mov
es
jmp
aaa
cwtl
sbb
or
pushw
xchg
test
imul
in
mov
out
mov
fwait
insb
sub
popf
pop
push
lret
xchg
iret
rorb
sbb
pop
inc
shrb
add
push
enter
mov
pop
movsb
jg
push
sbb
data16
pop
cmp
xor
lahf
xor
cltd
mov
loopne
gs
jmp
inc
push
xchg
lock
mov
inc
xchg
fdiv
inc
out
cmp
push
into
inc
imul
push
fidivrs
addb
arpl
mov
push
add
mov
test
add
cld
or
outsw
pop
mov
scas
daa
in
fstpt
add
mov
mov
sub
jbe
popa
pop
fists
mov
mov
dec
xor
pop
mov
mov
mov
test
adc
xchg
mov
scas
adc
xchg
add
mov
lret
jo
mov
pop
push
push
cli
mov
push
int
shrb
xor
fidivrs
cli
arpl
inc
out
out
inc
loopne
iret
je
cmp
out
pop
popa
push
out
fwait
mov
ret
fwait
cmp
mov
sub
test
lods
xchg
inc
call
jno
shrb
outsb
fistps
cltd
aad
push
mov
pop
movsl
test
out
sub
lret
adc
lods
add
outsl
pop
pop
imul
das
add
pushf
arpl
in
jno
dec
jecxz
lods
sub
loopne
scas
jmp
repnz
push
push
mov
xchg
xchg
adc
mov
add
mov
xor
cmp
imul
mov
mov
xchg
addr16
push
ds
or
data16
icebp
outsl
inc
adc
fildll
push
icebp
push
jae
dec
jb
jnp
jo
jmp
jne
sub
push
jae
xchg
adc
scas
test
xor
and
repz
fldt
icebp
gs
pusha
cmp
call
insl
out
dec
mov
stc
push
jae
es
lock
xchg
hlt
ficompl
int
jbe
imul
jecxz
std
or
das
sti
cmpsb
xchg
hlt
cld
out
imul
ds
lahf
ret
inc
lods
lret
cltd
nop
jp
or
mov
mov
pop
js
addr16
enter
xchg
dec
jne
adc
adc
sarl
rcl
xor
pop
push
jbe
push
fbld
loope
mov
cmp
ror
mov
movsl
popf
cmpsb
nop
cmpl
mov
stos
jl
data16
dec
in
sbb
and
cmp
hlt
xor
mov
and
pushf
je
jno
roll
xchg
and
cmc
dec
mov
mov
and
sub
push
cld
adc
scas
test
inc
jb
jbe
pop
cs
or
test
inc
mov
push
dec
mov
sbb
mov
pop
pop
or
mov
nop
movsb
xchg
aam
ficoml
sar
cmpl
shl
popf
xor
lret
sarb
lock
mov
sbb
jle
call
mov
shlb
scas
cmpsb
addr16
imull
ret
les
dec
int
fsubl
sbb
or
fldt
lds
add
pop
adc
fisubl
jae
rorb
pop
cmp
dec
mov
test
xchg
or
inc
mov
aam
dec
rep
lret
jbe
xchg
push
loop
lret
stos
fstpt
cmp
lahf
push
aas
les
fisubs
push
mov
call
in
icebp
push
or
sub
das
sbb
jle
xchg
popa
ss
inc
add
inc
daa
or
push
jo
shlb
jge
add
call
ficomps
or
lret
xor
jo
cmova
nop
sbb
inc
push
add
outsb
or
mov
pop
loopne
or
stc
sub
xlat
dec
add
imul
xorb
xchg
cmp
pop
sub
enter
xchg
pop
or
test
insl
jg
add
dec
mov
xchg
stc
jnp
and
xchg
aam
in
or
mov
add
xorb
dec
push
data16
insl
test
daa
or
cmp
xchg
fisubl
and
imul
inc
mov
dec
fcoms
xchg
dec
mov
cld
pop
movsb
push
insb
aad
mov
mov
rdmsr
ret
pop
test
nop
push
inc
int3
pop
xchg
mov
xor
mov
pop
xchg
idivl
mov
add
and
daa
pop
adc
cmp
mov
mov
call
call
rcrb
cmpsl
sarb
fwait
ret
insb
out
mov
lods
popa
int
es
fldl
push
jecxz
iret
bound
push
adc
sub
jle
aaa
loope
sbb
mov
xor
dec
jle
xchg
push
popa
jmp
push
push
dec
adc
dec
cmp
fisubrs
dec
iret
not
pop
pop
push
xchg
fwait
xchg
aas
cs
pop
mov
sahf
push
mov
sbb
aad
mov
xor
inc
push
lcall
mov
aas
push
insb
rclb
addb
xchg
lods
jmp
sbb
sub
mulb
sbb
nop
lret
push
rolb
jbe
push
push
mov
lods
xor
push
imul
call
repnz
mov
icebp
and
and
ss
sbb
pushf
mov
aas
dec
lahf
mov
or
add
call
sbb
dec
cli
adc
mov
sub
sbb
ljmp
icebp
mov
sbb
mov
pop
sub
cs
xchg
pusha
stos
mov
and
sub
jp
xchg
dec
mov
ss
xor
xlat
ret
and
aaa
adc
fwait
insb
mov
inc
jmp
es
loop
test
clc
pop
popf
fdivs
and
cli
outsl
iret
pop
pushf
mov
mov
xchg
sub
adc
xchg
pop
adc
push
cltd
nop
mov
sbb
xor
push
outsl
sbb
call
or
cli
ss
sti
lcall
adcb
test
movsb
mov
xorb
xor
out
fnsave
leave
add
shl
fsubrl
loopne
scas
mov
iret
adc
cmp
xor
sbb
je
mov
int3
aaa
insb
fcomps
sub
xchg
jnp
sti
add
outsb
in
add
mov
push
subl
add
mov
ret
cltd
and
out
fisubs
push
mov
inc
pusha
mov
add
push
pusha
adc
inc
fnstenv
push
adc
pop
in
adc
jge
aam
sbb
je
cmp
lret
push
push
sahf
inc
arpl
scas
dec
cmp
xchg
popf
fnstcw
nop
add
jle
das
inc
push
pop
les
sbb
mov
jns
fcmove
fbstp
push
pushf
mov
jno
xchg
cltd
jbe
xchg
sub
xchg
dec
jmp
cmp
fbld
pusha
popf
rclb
dec
stc
push
add
xchg
ljmp
push
mov
mov
cmpsb
mov
adc
add
add
add
jmp
scas
aas
sub
int
sahf
lret
inc
and
add
mov
and
jo
in
movsb
loopne
cwtl
and
filds
mov
adc
push
mulb
sub
repnz
cmp
sbb
jne
mov
call
jbe
aaa
repz
in
out
lea
test
dec
jecxz
push
test
push
xor
adc
push
aaa
cbtw
mov
push
xchg
iret
in
sbb
cmp
outsb
lret
xchg
repz
rcll
mov
xchg
jo
ljmp
stc
add
test
jae
dec
imul
imul
fldt
movsl
jnp
imull
in
ja
mov
out
repnz
mov
adc
fwait
xchg
stos
sbbl
xchg
ljmp
mov
gs
push
shll
mov
aad
inc
mov
mov
push
mov
mov
out
mov
sbb
pop
mov
repz
stos
mov
pusha
movl
lret
xchg
jb
adc
out
lds
or
add
mov
insl
push
mov
fcoml
add
jecxz
mov
loopne
movsb
sub
ja
shrb
scas
inc
mov
push
push
cld
or
popa
adc
movaps
mov
loop
jmp
icebp
aad
xchg
push
stos
js
pop
cs
sub
aas
andl
xor
rol
scas
lahf
xor
push
mov
mov
mov
sbb
sub
sub
fbstp
mov
ror
fcompp
inc
add
clc
and
test
xchg
mov
jb
xchg
or
lcall
loop
xor
add
add
je
mov
orb
insb
movsl
or
outsb
cmpsl
nop
data16
xor
pop
sub
lcall
inc
mov
add
mov
call
shlb
das
cld
and
mov
dec
sarl
dec
dec
movsb
cmp
push
mov
xlat
repnz
pop
and
pop
insb
jnp
and
xchg
mov
jle
icebp
or
adc
out
pop
push
clc
inc
aaa
aaa
mov
fwait
orb
sbb
loopne
inc
add
lahf
stos
inc
sub
outsl
gs
imul
add
inc
pop
lcall
sub
fstpt
ljmp
and
cmc
cli
sbb
leave
je
xchg
mov
add
jne
mov
data16
mov
lods
fsubl
pushf
xor
adc
loop
adc
mov
add
mov
mov
out
adc
mov
outsl
inc
sub
iret
adc
mov
and
adc
jl
mov
ror
adc
push
enter
inc
or
dec
fimull
cmp
ljmp
mov
mov
and
jecxz
jnp
adc
sub
sub
inc
in
or
leave
out
dec
mov
sub
mov
add
lock
jg
imul
add
mov
ss
out
mov
inc
push
repnz
ds
mov
imul
mov
xchg
xor
loop
inc
ljmp
sub
repnz
nop
mov
fildll
adc
push
movsl
mov
call
mov
add
fs
mov
xor
inc
add
sbb
mov
insb
adc
ret
sbb
jbe
xor
shlb
mov
and
push
add
test
push
ficompl
jge
sahf
push
sbb
popf
ss
in
sbb
sbb
lods
jo
dec
shrb
hlt
dec
in
out
insl
out
cmpsl
icebp
fstl
pusha
inc
adcb
loop
fst
add
pop
imul
icebp
adcb
shll
dec
imul
jle
adc
dec
mov
dec
push
dec
jp
jbe
es
ss
mov
jecxz
lahf
xchg
call
lret
and
in
xlat
jae
and
daa
adc
jbe
lahf
push
cli
data16
test
mov
dec
lds
cs
stos
mov
call
mov
add
adc
jl
sub
adc
iret
es
xor
nop
pop
dec
push
push
push
xor
inc
addl
add
testb
mov
hlt
push
out
and
cmpsl
fstpl
cwtl
movzwl
add
cmpsl
mov
push
push
and
mov
push
std
in
and
push
xlat
fs
xchg
in
lcall
ret
xchg
data16
pushf
mov
repz
hlt
add
cmp
fcoml
add
movsb
mov
jno
push
jns
and
es
mov
cmpsl
xor
xor
les
or
push
test
repnz
test
das
pop
adc
movsb
sbb
loop
dec
test
in
std
xchg
lret
or
loop
mov
add
add
cmp
push
push
repz
fdivrs
add
mov
imul
es
mov
or
inc
xchg
ds
mov
adc
pop
xchg
out
out
push
pop
inc
stos
cmp
mov
mov
adc
xlat
add
jl
adc
sbb
inc
mov
lcall
cwtl
fnstcw
jnp
add
xor
sti
cmp
mov
inc
add
jae
sbb
lahf
es
dec
mov
das
cmc
inc
dec
xor
add
xchg
or
insb
xchg
jnp
pop
gs
push
mov
popf
sbb
mov
cmp
xorl
mov
dec
add
pop
movsl
pop
mov
pop
cmp
sub
test
faddp
jmp
dec
push
and
imul
dec
sti
mov
lods
divl
xchg
push
dec
push
out
mov
shll
push
sub
cmpb
add
xchg
cmp
xchg
pop
mov
int3
fs
orb
pop
jge
leave
mov
bound
cmp
out
pop
or
jl
cmp
push
arpl
stc
lods
imul
pop
jl
mov
dec
mov
cmpsl
jnp
jecxz
stc
xor
enter
cmp
adc
lock
sub
stos
push
out
sub
xor
add
in
fisubs
mov
imul
in
pop
adcl
sub
jge
scas
arpl
mov
cmc
cmc
push
andb
ss
imull
outsl
loop
cmc
cmp
mov
sahf
adc
or
jno
loope
lds
test
lds
xor
cltd
cmp
scas
pop
sbb
inc
inc
xchg
cmp
lahf
mov
adc
adc
popa
in
mov
add
sbb
cmc
add
popa
es
fsts
xchg
test
icebp
je
out
jns
xor
dec
push
les
notl
jle
outsb
pop
jge
cmp
sub
add
inc
xchg
outsb
fdivp
mov
clc
enter
pop
adc
and
sbb
ds
inc
or
outsl
inc
xorb
adc
nop
aam
xor
lret
cld
sahf
imul
loope
mov
dec
inc
xchg
cmp
add
int
in
in
sub
stos
cmc
std
cmp
loope
pushf
xchg
xor
inc
inc
js,pt
out
adc
dec
sub
dec
inc
dec
pop
inc
daa
dec
sbb
out
stos
xlat
adc
loope
aaa
lods
and
ja
mov
add
push
aam
add
cwtl
and
jne
mov
mov
lods
insb
lea
sahf
stos
sub
dec
xchg
mov
xchg
sub
dec
es
mov
sbb
adc
mov
repnz
mov
sub
fdivp
pavgw
pop
lods
and
inc
push
sbbl
lret
sub
test
sahf
xchg
adc
mov
xor
loop
adc
xor
mov
lock
jno
sub
push
fsubl
xchg
add
mov
mov
popa
dec
mov
ds
jp
stos
jo
popf
xor
ljmp
rcr
push
lret
shlb
inc
inc
sub
mov
popa
mov
test
mov
mov
and
push
mov
data16
inc
mov
repnz
loope
inc
dec
out
fwait
xchg
add
adc
pop
jmp
inc
in
sub
cwtl
mov
cmp
ljmp
inc
push
jg
sti
cmc
sahf
je
sti
pop
mov
and
mov
dec
dec
jo
jl
cld
out
jbe
mov
mov
aad
add
call
aas
pop
xor
xchg
loop
sbb
push
test
dec
sub
fs
lock
mov
jmp
std
test
and
nop
rcll
ljmp
rorb
adc
sbb
pusha
and
pop
mov
push
add
ss
jmp
xchg
inc
push
inc
addb
mov
add
cmc
sti
cmp
cwtl
iret
rol
out
orl
mov
imul
push
aad
inc
xlat
xor
div
je
popf
push
pop
iret
shll
cmp
or
nop
out
filds
icebp
cmp
jb
xchg
push
sti
jmp
lahf
mov
push
jbe
dec
jmp
xchg
mov
sbb
push
mov
in
scas
add
dec
adc
jge
pop
mov
xchg
cwtl
inc
out
jnp
or
repz
pop
jb
scas
es
adc
fdivp
jecxz
pop
into
mov
scas
or
xchg
push
jle
nop
inc
cltd
add
insb
pop
imul
push
pushf
sub
mov
pop
je
mov
xchg
fmuls
cmp
cmovbe
inc
sub
cld
pop
test
in
add
fsubl
pop
pop
popf
push
push
adc
fistpl
push
mov
or
outsb
push
loope
bound
mov
bound
and
push
push
aad
sbb
jbe
push
mov
je
xchg
sbb
xor
pop
cmp
stc
xchg
movsb
hlt
sub
das
cmp
inc
mov
fcompl
sbb
test
cmp
inc
pop
or
sub
lret
sbb
mov
loopne
ret
das
jge
fldl
fldl
mov
cmc
push
xlat
pusha
mov
add
add
push
push
std
cmp
cmpsl
or
push
in
push
sbb
sub
cld
dec
dec
insb
sbb
mov
je
negl
ret
jle
stc
in
insl
mov
push
lea
push
push
sar
cmpsb
rcrb
in
mov
popf
dec
sbb
in
jmp
mov
push
out
cli
lods
inc
insl
ja
fistpl
fnsave
js
sub
jmp
call
cltd
pop
lea
xbegin
mov
jl
cmpsl
dec
or
insl
sbb
push
or
dec
scas
mov
jg
mov
outsl
push
enter
mov
xor
clc
xchg
fsubr
and
stos
inc
add
dec
xchg
test
sub
andb
roll
sbb
sbb
inc
push
dec
xchg
dec
push
fnsetpm(287
mov
dec
mov
into
ljmp
jp
std
sub
jle
repz
es
adc
add
bound
aaa
sbb
xchg
fistpl
fbld
call
push
gs
sbb
pop
push
icebp
pop
inc
push
xchg
xchg
adc
xor
xor
inc
lods
jae
sti
pop
shl
js
sbb
mov
jg
sar
sbb
mov
scas
inc
icebp
addl
pop
iret
cmp
mov
andb
sbb
pop
shl
inc
inc
fwait
in
nop
push
mov
js
call
stc
pop
scas
cmp
imul
incl
push
cltd
inc
ss
out
xchg
mov
push
into
add
shlb
inc
sti
push
icebp
mov
jo
scas
add
dec
repz
ljmp
mov
push
inc
cmpsb
cwtl
fucomp
lret
or
add
dec
adc
mov
stc
xor
sahf
jno
lcall
lods
test
ja
pop
imul
mov
xchg
adc
add
ret
add
call
inc
xor
out
loope
inc
cmp
test
repnz
ljmp
lea
push
ja
dec
xchg
xchg
sub
or
or
sahf
arpl
dec
push
imul
adc
pop
inc
mov
aad
and
pop
in
cmp
xor
mov
or
xor
cltd
mov
mov
or
sbb
cmp
fmuls
mov
jno
testb
sti
test
adcb
adc
ss
or
xchg
shl
sbb
sub
mov
sub
std
lahf
das
pop
jbe
xor
data16
in
dec
rorl
xor
add
xchg
lods
cmp
ds
hlt
jl
jp
cmc
xchg
sahf
jb
xchg
pop
iret
lcall
mov
xchg
mov
fisubrl
das
lcall
xchg
stos
outsl
ret
mov
stos
xchg
mov
mov
inc
jo
out
jns
mov
pop
adc
shrb
xor
pop
pop
pop
add
dec
push
jbe
sbb
lahf
int
incb
pushf
mov
sbb
adc
and
lods
pop
xchg
fmuls
shlb
loop
mov
nop
xchg
outsb
stos
jb
adc
sahf
and
pop
fs
aam
or
lods
and
mov
pop
inc
in
jns
inc
lods
std
mov
lcall
lea
ret
mov
sub
xchg
jecxz
clc
adc
push
xor
lret
aad
or
push
pushf
xlat
mov
mov
cmp
dec
jo
addr16
xor
movsl
mov
mov
mov
and
inc
rcl
cmpsb
or
xlat
and
aaa
std
out
test
inc
insl
outsb
cmp
jge
lds
add
add
add
cmp
mov
xchg
sub
decb
in
iret
ficoms
enter
data16
mov
bound
jo
push
cmp
fisubrl
test
push
inc
mov
lock
jnp
inc
mov
add
cmpl
adc
dec
mov
push
out
shlb
popa
or
ret
and
testl
mov
lods
out
push
call
inc
mov
sub
clc
rol
push
fcoml
js
cmp
and
lods
adc
xor
xchg
mov
jl
mov
and
mov
test
pop
adc
movsl
daa
sbb
mov
iret
out
cwtl
sbb
cmp
and
cmc
andl
pop
cmpsl
pop
cs
push
push
mov
sahf
xchg
popl
push
icebp
loop
popa
mov
fwait
daa
fadds
fnstcw
pop
adc
pop
arpl
fistl
xrelease
fs
repz
sarb
adc
insl
push
dec
dec
out
xchg
test
loopne,pt
dec
daa
sbb
mov
xchg
test
xor
in
sti
push
sub
lahf
imul
inc
fwait
movsl
pop
pop
mov
loope
and
jl
dec
loopne
stos
mov
fbld
jl
popa
fwait
out
cltd
and
sarb
push
bound
pop
jmp
repz
pop
scas
je
add
fdivs
pop
xor
jne
mov
dec
inc
adc
lret
test
pop
mov
push
popf
add
dec
in
xchg
and
add
shrl
mov
popf
jb
xchg
pop
jmp
lods
mov
loop
fdivrl
lock
mov
xchg
jne
xor
inc
dec
nop
int3
popf
fistps
aad
pop
jns
and
xorb
add
add
add
ljmp
jb
mov
iret
orb
lds
jl
repnz
xchg
add
shlb
adcb
and
sti
jno
stc
pop
fwait
in
xlat
pop
cmp
out
jecxz
jmp
push
repz
jne
sub
mov
cmp
adc
adc
and
es
adc
jmp
mov
mov
cmp
lahf
arpl
or
fs
or
xchg
inc
test
test
pop
pop
sarl
inc
mov
mov
push
aaa
out
cltd
out
fs
test
xchg
pushf
xor
xchg
adc
cmpsb
xchg
and
mov
jp
stc
pop
inc
adc
push
push
enter
clc
popa
and
xor
jge
ror
jb
test
jo
or
cmp
jl
inc
ja
lds
pop
rcrl
jmp
jecxz
push
pop
ja
jge
movsb
dec
mov
ljmp
arpl
sub
lahf
mov
popa
lcall
dec
lea
in
jnp
pop
mov
inc
push
cmp
and
dec
mov
push
xor
out
sbb
int3
cmp
push
and
std
hlt
mov
or
and
ret
and
test
mov
icebp
jne
pop
aas
push
mov
dec
jbe
sbb
and
lods
mov
pop
push
mov
test
add
xorb
lcall
sbb
push
mov
inc
sbb
int3
andb
dec
sahf
add
ljmp
jns
loopne
imul
jp
sarb
testb
mov
icebp
rcrb
pmaxub
mov
xchg
rorl
mov
ret
mov
pop
mov
loopne
cli
mov
ret
ds
leave
add
call
fcoms
and
cmpb
mov
push
outsb
cli
stos
decb
mov
gs
inc
mov
lcall
out
pushf
rorb
loopne
or
dec
cmp
push
and
out
ss
loope
adc
js
sahf
repnz
fisubs
cmp
xor
ja
mov
out
xchg
lret
out
mov
pusha
pop
pop
push
mov
add
icebp
pop
stos
shlb
mov
aas
dec
outsb
les
aad
mov
das
in
cmc
leave
sahf
imul
dec
mov
out
stos
mov
call
dec
mov
mov
inc
shll
lcall
add
pop
dec
shlb
int3
jmp
cmp
sbb
pop
inc
jg
cmp
xor
and
clc
aas
lcall
data16
dec
ljmp
into
dec
fisttps
jnp
xor
mov
stc
lcall
cli
shlb
movsb
sbb
jl
push
mov
or
popf
rolb
mov
and
mov
and
jp
in
jns
add
mov
mov
inc
sub
icebp
or
inc
stos
dec
insl
sahf
mul
addr16
mov
jae
rcrl
mov
addr16
or
leave
adc
stc
and
cmpsl
adc
xchg
push
cwtl
test
inc
jb
daa
xchg
aaa
aam
fdivs
mov
pop
sti
mov
xchg
mov
orb
inc
dec
pushf
mov
adc
jmp
in
lods
lods
rep
cmpl
mov
fsubrs
fstl
fisttps
negb
push
sub
int3
inc
fdivrp
out
ja
xor
push
xchg
sub
add
add
rorl
mov
sub
pop
cmp
or
adc
daa
gs
jb
sbb
out
fsts
mov
lret
jae
jmp
rolb
rol
sbb
cmp
or
push
mov
xchg
pop
cltd
decl
xchg
shll
jae
adc
pop
mov
daa
imul
mov
jbe
hlt
jb
and
cmpsl
mov
or
cld
sub
push
sti
jmp
sahf
adcl
cmp
nop
cmpl
cltd
dec
pop
fadd
aas
jnp
lea
add
xchg
sahf
sub
pop
js
mov
lcall
sub
xchg
or
shll
mov
push
cmovnp
sbb
or
or
push
xor
add
loop
scas
pop
or
dec
push
pop
cld
push
movsl
cmp
shl
push
les
mov
data16
popf
add
sbb
aas
in
repnz
inc
aam
lcall
insb
mov
push
or
xor
je
rorb
add
mov
jp
xchg
in
xor
mov
clc
xor
dec
sub
push
and
loope
jp
mov
pop
cwtl
pop
xchg
lock
movsb
ret
jmp
fcoms
add
in
mov
es
sbb
ljmp
pop
loopne
jle
sub
xchg
lods
sub
xchg
fs
dec
shlb
and
cmp
jae
addr16
scas
pusha
nop
arpl
jns
pop
adc
xchg
lock
lods
dec
sub
test
inc
dec
mov
pop
push
jo
inc
out
popf
pop
mov
mov
dec
cmp
add
mov
pop
je
mov
int
add
add
add
je
or
adc
pop
cmp
add
sub
mov
std
mov
cmpsb
iret
ds
mov
push
sti
mov
mov
inc
push
mov
mov
mov
lds
mov
inc
adc
pop
mov
inc
dec
and
aam
mov
arpl
xchg
icebp
mov
loope
and
cmp
push
loope
cmpl
ljmp
and
mov
addr16
and
jmp
mov
jg
mov
mov
fcomi
jbe
xchg
out
inc
dec
push
int
xchg
bound
fs
mov
or
icebp
and
xchg
cmp
sub
sbbb
mov
adc
stc
pop
xchg
stos
push
xchg
sbb
xchg
lods
xchg
adc
repnz
lret
cli
xor
add
arpl
mov
mov
popa
xchg
pop
mov
fidivrs
jmp
sahf
add
or
out
and
mov
pushl
call
xchg
inc
lea
divl
cmp
jae
mov
test
pmulhw
imul
xchg
scas
push
pop
es
outsb
aaa
pop
sub
inc
adc
push
inc
cld
lods
and
mov
lock
call
pop
stc
insl
xor
ret
lea
mov
pop
into
test
add
dec
mov
out
out
pop
mov
xor
out
pop
das
rclb
adc
mov
adc
stos
cmc
or
mov
inc
arpl
mov
cmp
mov
pop
mov
xchg
fwait
xchg
fsubp
repnz
pusha
add
jmp
jne
jecxz
xchg
cmp
fnsave
inc
dec
sbb
aas
sub
ds
add
mov
mov
sbb
push
pop
imul
mov
in
push
mov
dec
stc
out
add
aam
mov
xorl
and
push
hlt
fsubrp
in
lock
outsb
ret
aaa
mov
and
outsl
jnp
mov
insb
movsl
adc
arpl
push
mov
push
jge
cltd
push
popa
and
pop
sbb
rolb
pop
cmpsb
sbb
cmpsb
adc
mov
mov
ja
add
cs
pop
scas
jno
test
loope
push
pop
repnz
movsb
les
sbb
or
clc
mov
and
rol
fildll
xchg
push
xor
scas
sub
cmp
rol
xor
inc
les
sub
aas
xchg
popa
jne
cmp
lret
bound
jb
push
xor
cwtl
xor
push
out
int
out
mov
xchg
jno
fidivrl
paddsb
lret
imul
add
dec
adc
jmp
mov
call
inc
jae
sub
mov
fdivrl
cli
enter
push
int3
lock
xor
sbb
es
pop
test
psubsb
mov
dec
cld
fcoms
pushf
push
daa
sbb
xchg
xor
jb
sbb
jo
xchg
sub
adc
and
test
cmp
fwait
lcall
js
push
cltd
sbb
add
mov
ret
mov
mov
loope
fwait
mov
test
dec
adc
add
inc
mov
outsb
and
jg
int
push
outsl
inc
or
xor
mov
push
jnp
mov
adc
push
and
sarb
repnz
xor
cld
push
aam
popw
std
sti
aad
pop
mov
movsb
xchg
push
fildll
dec
push
ret
mov
jge
shrb
test
std
rolb
add
add
add
fstpt
inc
and
dec
cwtl
sub
mov
fstpl
pop
out
mov
push
jnp
in
insl
mov
inc
scas
mov
add
sahf
adc
mov
add
into
loop
dec
add
nop
movsl
outsb
pop
cmpsl
imul
mov
jno
sbb
in
dec
test
jo
mov
aad
lods
mov
rclb
jecxz
fisubrl
sub
sar
repnz
dec
or
add
cmp
lcall
pop
push
lock
sub
arpl
push
test
push
mov
mov
inc
pop
je
cmp
addl
daa
sarb
add
xor
lds
or
cmp
dec
insb
add
fcomp
xor
cmc
arpl
pop
notb
mov
mov
repnz
nop
adc
test
pop
loopne
loop
add
gs
inc
and
pop
lds
testb
xor
jb
jno
ret
cmp
xchg
or
nop
cmpsl
xchg
jp
cs
lods
adcl
xchg
fisttpll
sub
imul
xchg
mov
cli
arpl
and
test
add
js
mov
mov
cli
decb
jl
add
jge
cmp
jbe
dec
aad
add
push
fs
fs
aaa
pop
in
sub
lret
js
mov
pop
jns
ret
jl
outsl
push
aad
js
mov
sbb
sub
push
arpl
out
jnp
sbb
cld
scas
push
adc
push
jmp
cmpsb
xlat
mov
roll
std
dec
ret
mov
int
and
jmp
hlt
sub
mov
lret
dec
scas
dec
cmpl
cmc
mov
sbb
in
jmp
lahf
jle
dec
sub
shlb
add
add
add
and
sub
or
ret
jmp
jmp
insl
pop
test
or
popa
add
adc
pop
out
enter
mov
xchg
dec
bound
in
add
add
movsb
scas
jl
pop
or
dec
pop
cmp
or
mov
pop
std
je
xor
fnstcw
outsb
xchg
in
sbb
pop
setl
ljmp
rcrl
sbb
nop
mov
pop
mov
pop
xor
mov
pmullw
add
jbe
mov
fiaddl
loop
inc
fnstsw
je
add
adc
push
mov
cmc
in
add
or
gs
lock
cwtl
repnz
adc
mov
das
decb
mov
bnd
cld
sub
not
mov
sti
jmp
lret
dec
sahf
test
adc
cld
sbb
jne
int3
mov
lods
push
mov
jae
xchg
mov
push
mov
call
mov
inc
jne
dec
jo
iret
lds
inc
or
add
daa
imul
unpcklps
rcrb
mov
jnp
enter
and
cs
mov
jo
jns
pop
popf
and
lods
mov
pop
jae
leave
ret
mov
inc
in
pop
mov
mov
push
add
incl
adc
xor
xlat
orl
sahf
repnz
std
mov
pushf
mov
fdivrl
mov
int
les
out
daa
cmp
insb
push
xchg
sub
cwtl
je
push
pop
add
jae
inc
sbbb
mov
xchg
mov
mov
incl
bound
dec
int
add
call
stos
outsl
add
ja
or
lret
dec
lahf
int3
sub
sub
mov
sahf
aad
test
aaa
test
xchg
scas
and
je
stos
mov
mov
icebp
call
cmp
ljmp
jnp
mov
cs
jle
shlb
xor
sbb
pop
cmc
movsb
data16
sbb
sub
adc
daa
loop
xchg
mov
jne
mov
aas
les
test
insb
add
imul
cltd
mov
fmuls
int
dec
lds
push
pop
ret
inc
div
cltd
and
mov
sbb
jle
and
lcall
out
sbb
ljmp
lcall
cmp
cwtl
outsb
cmp
inc
xchg
sub
rol
cld
icebp
jmp
mov
adc
inc
loope
loope
mov
sub
cli
push
adc
dec
mov
insl
add
mov
les
std
fnsave
fwait
cld
sahf
push
sbb
push
int
mov
cmpsl
pop
loopne
in
and
leave
mov
and
out
push
add
lret
pop
mov
sbb
mov
push
fisubrl
scas
mov
push
aaa
adc
rep
push
stc
inc
push
mov
sbb
shrl
sbb
sbb
arpl
and
mov
push
das
fnstsw
pop
adc
sbb
sbb
sub
sub
lds
lahf
neg
popa
xchg
mov
mov
nop
sbb
pusha
sbb
mov
mov
stos
je
pop
push
out
jmp
aas
jno
lretw
cli
inc
stos
ja
dec
xchg
inc
or
mov
test
mov
pop
sub
fistl
js
gs
jae
push
adc
lret
xorb
icebp
lret
cld
adc
push
pusha
push
add
add
add
push
test
cmc
dec
xchg
jge
jecxz
fdivl
push
ret
push
int
xor
pushf
dec
mov
push
pushl
fwait
and
cmp
andl
movsb
popa
jecxz
fs
xchg
push
es
bound
pop
jb
push
push
jge
inc
outsb
sbb
jg
fsubrp
sti
lods
inc
pusha
or
push
or
mov
or
arpl
mov
leave
sub
mov
push
inc
cmpsb
adc
jle
push
std
pop
push
mov
in
pop
daa
pop
bound
jmp
dec
mov
inc
xor
and
dec
mov
pop
fmulp
push
pushf
out
xchg
jge
dec
lahf
movsb
or
cli
test
fdivrs
js
sbb
jmp
fs
dec
adc
sbb
pop
mov
loop
sbb
dec
inc
lods
push
es
mov
iret
push
pop
fdivl
dec
imul
fcoms
cld
mov
push
sub
je
mov
into
leave
enter
in
arpl
xlat
ret
enter
xor
mov
subl
mov
icebp
lret
loop
or
or
call
rcrb
rcrb
ficomps
push
loope
push
out
xchg
imul
add
adc
popa
jge
rcl
cwtl
ja
data16
cmp
imul
or
or
mov
es
pop
insl
loop
add
gs
orl
stos
inc
jns
syscall
icebp
xlat
dec
call
in
sub
push
xchg
mov
sbb
sbb
insb
jne
lods
mov
inc
ret
pop
test
out
or
dec
iret
imul
daa
into
in
repz
pop
lahf
fdivp
in
jp
jp
in
xor
xor
cmp
dec
lcall
add
mov
inc
lock
pop
mov
lahf
aaa
lds
cmp
and
icebp
out
jb
xchg
insb
pop
mov
call
sbb
mov
mov
push
lcall
xchg
pop
popa
mov
mov
sar
push
jl
mov
pop
fsubrs
cmpsb
sub
sub
jmp
pop
mov
ss
cmp
xchg
or
inc
cwtl
ret
aaa
sub
mov
shll
icebp
mov
shll
icebp
std
test
mov
push
xchg
lret
inc
loop
je
jno
push
popf
mov
xchg
test
sbb
je
test
out
xor
mov
arpl
sbb
movsb
sub
out
or
les
subb
shlb
pop
cmpsl
xor
fistl
jp
pminsw
rolb
cmp
into
rolb
adc
into
jmp
inc
push
insb
push
inc
xor
aaa
mov
test
xchg
movsl
addr16
in
out
add
imul
in
test
ror
lock
popf
push
jae
es
jne
je
shl
xchg
adc
gs
lret
fsubr
insb
daa
cs
cli
dec
nop
incb
pop
out
ljmp
pop
aas
jle
xchg
pop
test
ret
in
sahf
lock
inc
pop
inc
push
adc
mov
insl
lret
pop
pop
cli
outsb
sbb
fnstsw
xchg
cmp
mov
add
imul
cmp
test
sti
call
jne
or
dec
mov
imul
cwtl
imul
jge
test
scas
imul
jl
jge
lahf
loope
adc
push
in
cmp
test
add
call
insb
dec
xor
popf
ds
ret
outsl
insb
loope
daa
and
pusha
cmp
sub
jns
and
loopne
xor
cmp
add
adc
lret
imul
add
jbe
test
jmp
dec
loopne
push
fisubs
test
xorl
andl
mov
push
pop
mov
rcrl
std
xchg
arpl
mov
ret
add
stos
daa
shlb
pop
or
adc
ret
cli
xlat
pop
mov
push
pop
push
cmc
out
sbb
sbb
pushf
adc
push
sbb
xor
lret
insl
nop
dec
sahf
nop
mov
pop
xor
pusha
hlt
mov
lods
sub
mov
hlt
in
icebp
sub
imul
mov
xchg
cmpl
sahf
mov
cmpsl
adc
stos
cmp
add
sarl
and
cs
lea
xchg
into
push
mov
push
in
push
bound
jb
or
sbb
pop
inc
roll
pop
push
adc
fadds
mov
dec
cld
mov
dec
ret
pop
outsl
in
je
mov
xchg
arpl
cmpsb
scas
sbb
jno
xchg
push
fnstcw
mov
repnz
mov
mov
loopne
fwait
push
jne
and
lret
mov
mov
xor
jb
mov
xchg
mov
out
or
jmp
jmp
jl
mov
enter
or
jno
xchg
dec
fnsave
test
outsb
test
mov
mov
scas
jae
test
pop
xchg
fwait
or
dec
xchg
lret
shll
movsl
shrb
popf
sbb
ret
aaa
test
or
push
and
cld
push
push
mov
mov
idivl
popa
nop
int3
pop
insl
faddl
add
add
add
addb
mov
xor
lret
pusha
sbb
push
rcll
xor
fiaddl
mov
stos
sub
cmp
dec
cmp
xor
jmp
popa
and
loopne
fwait
dec
adc
push
cmpsb
std
shl
stc
xchg
arpl
mov
xlat
in
add
pop
pop
jmp
push
loop
sbb
sbb
xlat
ljmp
inc
addr16
sub
scas
push
dec
sub
movsb
rcll
cmpsl
inc
les
scas
jns
rolb
and
les
push
lret
in
cmp
cmpsb
jnp
xor
inc
xchg
adc
dec
aas
add
out
rolb
push
nop
push
es
push
nop
rcrb
pop
jb
fdivl
adc
jle
jae
jg
les
jb
push
cmp
adc
shr
test
pop
call
daa
movsl
call
inc
push
dec
pop
push
sbb
mov
mov
inc
sti
mov
ret
mov
pop
xchg
addr16
mov
cli
jns
hlt
dec
push
push
aaa
les
or
add
cmp
movsb
xchg
jae
mov
flds
arpl
pop
outsb
das
jns
ljmp
pop
movsl
cmc
cmc
cmc
add
sti
mov
popa
int3
js
cltd
out
sub
in
mov
inc
xchg
mov
mov
lods
cltd
call
add
jp
xor
das
xor
push
push
add
insl
mov
shlb
lcall
test
dec
push
lods
insb
test
sub
inc
stos
sbb
lea
lret
inc
xor
mov
add
pusha
cmpl
sub
ret
lret
repnz
sbb
xchg
sub
sub
je
inc
je
dec
in
fadds
sti
mov
adc
mov
add
call
sub
pop
jae
imul
cmp
addr16
push
or
and
pushl
mov
lods
pop
xor
lret
push
movsl
cmp
cmp
dec
fs
inc
dec
adc
sbb
int3
jns
and
mov
cmp
imul
lea
mov
leave
push
inc
fwait
add
rcrb
test
stos
pop
dec
push
cmp
ljmp
pusha
jns
mov
enter
mov
stc
popf
mov
fistpl
push
sub
lods
cld
cmp
iret
cs
mov
mov
jmp
sub
add
sar
mov
cmc
cmpsb
adc
shll
sub
push
insl
rorl
cmp
stos
mov
and
dec
repnz
xchg
and
pop
das
sbb
cmp
pop
push
cmp
fcmovnu
test
mov
std
and
mov
mov
enter
cltd
test
sahf
ja
ljmp
jl
or
gs
jb
mov
loopne
stc
gs
outsl
stos
out
adc
imul
loopne
mov
jmp
pusha
insl
sub
mov
mov
xchg
adc
adc
divl
fcomps
push
and
shll
pop
lods
popa
dec
push
aad
scas
shl
adc
es
push
mov
push
pop
cld
popf
cld
mov
mov
sbb
or
and
lock
xchg
insl
adcl
mov
add
or
fisubs
enter
pop
mov
push
ror
outsl
scas
ret
mov
cmp
or
pop
xchg
cmp
fmuls
je
int3
mov
or
jno
mov
in
incl
jle
dec
cmp
add
add
mov
pop
or
sbbl
mov
push
cmp
dec
stos
push
vprotb
fcmovne
mov
sub
inc
mov
sti
repz
xchg
out
mov
scas
ja
cltd
pop
cmp
xchg
fsubs
sbb
xor
cmp
or
daa
test
jl
or
bound
mov
and
jp
test
push
pop
sbb
or
je
xor
jle
pop
jp
aad
jle
add
fdivl
lods
jns
in
inc
cmc
inc
lret
ret
aad
mov
pop
call
push
xchg
sbb
std
sti
adc
jns
es
aas
arpl
movsl
inc
sahf
add
test
add
pop
fisttpl
rcrb
push
rcrb
fdivs
ret
iret
inc
std
aad
mov
sub
je
out
pop
cmp
fidivl
repz
aam
mov
push
inc
call
push
ja
mov
rorb
call
xlat
sub
clc
imul
or
lods
or
lret
testl
jno
shrb
mov
addr16
cmp
lock
mov
setno
cwtl
cmp
imul
aaa
jge
lret
inc
es
dec
lret
mov
add
xchg
test
leave
loop
cmpsl
arpl
pop
mov
fwait
outsl
es
insb
fldl2e
pop
pop
adc
out
popa
inc
jp
repnz
xchg
mov
fwait
rcr
mov
adc
mov
cmp
cs
ss
out
sahf
xchg
ljmp
or
bound
xchg
notl
lret
adc
or
scas
jmp
arpl
jae
loop
add
add
add
fwait
jae
and
add
mov
dec
add
ja
push
or
cmove
ljmp
cmp
orb
mov
jno
je
push
pop
pushf
or
xor
cltd
mov
mull
lock
mov
push
push
pushf
inc
xchg
or
jl
rcl
stc
xchg
mov
call
scas
xor
cmc
mov
mov
mov
mov
pop
loop
xchg
jp
fcompp
dec
mov
das
cmp
jmp
cmp
jge
jl
dec
fcmovnu
popf
cmp
mov
cmp
or
push
jl
or
lcall
mov
mov
cmp
mov
scas
mov
mov
jns
sbb
cld
popa
out
add
sbb
pop
cmp
in
mov
push
dec
shrl
je
popl
popf
daa
ja
push
imul
stos
push
ret
aam
sbb
pusha
sub
das
cmp
cmp
shll
enter
ja
scas
repnz
push
hlt
cwtl
jns
jnp
ss
lcall
add
jmp
subl
insb
faddp
ret
xor
movsb
pop
mov
adc
gs
cld
jecxz
hlt
pop
jbe
fadds
lock
xor
fsubl
movaps
jl
sbb
xchg
mov
push
jnp
mov
sarb
repz
jecxz
sbb
jo
jae
cmpsl
fnstsw
mov
xchg
mov
sbb
out
push
sub
or
insb
mov
scas
pop
and
in
test
push
imul
sti
or
add
add
mov
mov
mov
lods
jbe
jns
xchg
pop
jp
cwtl
mov
mov
sub
push
push
sub
adcb
xor
jmp
incb
outsl
dec
bnd
sar
aaa
dec
and
les
sub
pop
das
stc
insb
or
sahf
jmp
and
sti
repnz
daa
dec
inc
fcomps
shrb
aam
out
jb
and
xchg
jecxz
mov
adc
out
roll
jo
imul
jle
or
ja
jle
loop
aam
cld
icebp
in
or
xchg
pusha
mov
jecxz
adc
fisubrl
test
lds
xchg
pop
je
mov
int3
add
shrl
js
scas
pop
xchg
ljmp
test
enter
cmp
mov
dec
in
rorb
push
dec
filds
fildll
ja
sbb
cmpsb
ljmp
mov
inc
mov
pop
cmp
sbb
call
dec
jbe
lods
out
in
sub
mov
or
dec
push
shlb
add
and
les
mov
inc
sub
and
xchg
cltd
sbb
das
lcall
pop
pop
jmp
insl
addr16
sub
decb
cltd
stos
loope
adc
jbe
pop
mov
fwait
into
fs
push
out
call
inc
xchg
in
and
or
xchg
testl
dec
mov
rcll
test
scas
mov
es
jbe
xor
std
pop
ja
cmp
js
mov
fimull
jl
jl
jle
xlat
popf
loop
sbb
jecxz
cs
cmp
leave
popf
lret
popf
pop
xlat
aaa
add
arpl
in
add
add
add
push
mov
sub
xchg
aad
aad
aam
pop
incl
rclb
mov
push
adc
mov
cld
mov
neg
or
push
movsl
js
daa
pusha
arpl
push
dec
mov
in
xchg
xchg
mov
cld
inc
inc
or
cmp
push
sub
mov
and
out
xor
jne
repnz
sarb
and
leave
pop
dec
xor
push
xchg
test
or
je
inc
in
xor
add
inc
mov
sti
inc
lret
and
or
ffree
sub
out
lods
mov
jg
mov
cmpsl
fldl
xor
hlt
mov
mov
stc
adc
jno,pt
repz
cwtl
lea
push
stos
mov
mov
clc
bt
add
xlat
sbbl
xchg
or
iret
xchg
testl
fcompl
subl
xchg
or
add
sarl
in
xchg
dec
in
movsb
sbb
mul
jmp
sbb
jnp
dec
icebp
movsb
in
cltd
popa
pop
push
adc
gs
sbb
sbb
scas
sbb
insl
pop
inc
movsb
xchg
cmp
cmpsb
push
fildll
sahf
mov
push
pop
dec
xlat
loop
call
lcall
mov
loopne
xchg
lcall
mov
mov
sarb
jecxz
in
popf
cmp
pop
repz
mov
cmp
push
in
sub
and
stos
push
fisubs
movsl
ljmp
mov
fwait
and
hlt
ja
xor
jecxz
mov
pop
imul
mov
add
fs
call
pop
out
and
mov
add
add
add
push
push
or
mulb
mov
clc
cmp
in
stos
cmp
cs
lods
xlat
subl
jae
jge
pop
je
jmp
adcb
addr16
mov
es
adc
add
fimuls
dec
mov
inc
xor
fs
mov
sbb
adc
sbb
popa
or
cli
lret
lret
clc
lret
jb
inc
movsl
pop
adc
ljmp
repnz
xchg
loop
mov
pusha
cmp
int
rcrl
call
pusha
nop
ret
enter
ss
fcomp
add
push
lods
divb
int3
adc
or
mov
imul
inc
jb
test
push
cmp
out
fisttps
mov
pop
cmp
aad
nop
hlt
adc
in
ret
icebp
xchg
jo
stos
lods
xor
popl
xchg
es
fwait
inc
sub
sti
pop
dec
fs
jb
inc
mov
cmp
mov
xor
cmp
push
ljmp
pop
xchg
sbb
jge
ror
ficoml
sbb
jns
adc
sub
lds
ret
sbb
loop
fnstsw
inc
mov
sbb
loop
dec
add
and
orb
cli
mov
lret
jb
cli
push
clc
aaa
lock
cmc
and
pop
ficompl
sahf
daa
inc
push
stos
jge
jle
sbbl
jne
arpl
cli
dec
adc
insb
pushl
adc
and
xor
jb
pop
pushf
push
fwait
mov
xchg
lcall
jmp
pusha
push
xchg
mov
jl
cli
push
into
testb
and
mov
sbb
das
ljmp
mov
data16
dec
imul
add
add
add
popf
loop
inc
fimuls
mov
jb
push
adc
mov
inc
push
xor
cli
xor
cmp
xor
dec
sbb
rolb
adc
cmpb
loop
cmp
mov
sbb
pop
leave
and
sbb
inc
xchg
aam
push
movsb
xchg
push
mov
aam
and
rcrb
loopne
lahf
dec
iret
add
dec
das
jno
ss
cmc
xor
pop
xlat
mov
jnp
outsb
stos
mov
sahf
mov
push
or
xor
hlt
scas
mov
inc
fmull
jecxz
sahf
imul
cli
adc
lcall
pop
imul
adc
mov
mov
inc
push
test
push
mov
daa
std
adc
out
test
dec
inc
jl,pn
xchg
mov
mov
std
rorb
cmp
and
dec
je
lahf
push
push
mov
fwait
mov
shll
mov
push
shrb
in
clc
loope
int3
jp
out
jecxz
push
inc
or
cmp
hlt
mov
mov
xchg
hlt
mov
rorl
stos
ss
int3
hlt
jno
mov
pop
push
jmp
push
inc
xlat
pop
inc
sbb
dec
mulps
xchg
imulb
cmp
pop
sti
jmp
nop
pop
dec
cltd
mov
lcall
scas
dec
cmpsl
leave
movsl
lock
mov
inc
fisubrl
aas
mov
jbe
sub
pop
xchg
fbld
not
and
cmpsl
xchg
jecxz
les
aam
adc
sub
je
aad
ret
xchg
in
mov
xchg
test
cld
out
mov
pusha
mov
mov
adc
sub
ss
inc
jo
ja
adcb
clc
nop
and
in
pop
cmp
jp
jmp
into
psrld
rcr
fistps
imul
add
add
add
mov
mov
mov
sub
sbb
stc
pop
aad
loope
jl
mov
jge
and
adc
ja
inc
pop
push
ret
cmp
aaa
push
push
mov
rcrl
sbb
lods
aas
push
pop
lods
in
in
cmp
add
or
jnp
inc
inc
rorl
ret
jnp
cmp
jns
in
pop
inc
add
mov
push
mov
ja
enter
inc
das
pop
inc
fs
pop
sbb
cwtl
mov
filds
das
or
jmp
clc
inc
xchg
push
loopne
or
sub
lods
andl
mov
mov
inc
push
in
xor
rcrb
xor
stos
adc
loopne
loopne
subps
pushl
adc
aaa
mov
xchg
jmp
adc
xlat
and
jae
add
movsl
inc
int
in
jp
dec
ss
push
pop
cmp
loopne
movsl
push
loope
or
mov
imul
mov
pop
inc
sbb
mov
xor
xor
xor
or
js
mov
cmc
push
sahf
push
aam
xchg
out
mov
inc
bound
mov
inc
popf
enter
inc
adc
pop
fnstenv
int
mov
or
aaa
outsb
sbb
inc
mov
les
scas
js
add
xor
push
inc
fbld
pop
jne
repz
mov
dec
mov
add
scas
aaa
cmp
cwtl
sahf
mov
loopne
or
scas
test
adc
push
sub
pop
loop
dec
lock
pushf
pusha
pushf
cld
cld
mov
aaa
or
in
and
xchg
in
add
call
push
jnp
test
imul
mov
arpl
pop
nop
gs
mov
cmp
test
or
push
jl,pt
or
in
adc
test
jmp
je
push
sub
out
sub
cmp
loop
sahf
aam
mov
int3
popa
out
je
jecxz
dec
push
gs
inc
mov
jns
jp
ret
subl
sub
mov
or
das
pop
jg
nop
lods
cld
jmp
push
mov
out
fs
lock
adc
cmc
lea
jecxz
fisubs
mov
scas
push
xchg
xorl
mov
and
sbb
add
in
loopne
insb
xor
loop
orl
lods
pop
pop
insl
jp
and
push
jae
jle
icebp
into
int3
mov
xchg
sub
push
test
pop
mov
fiadds
dec
pop
jge
adc
xchg
test
jne
or
xchg
add
jno
mov
push
sub
sub
jecxz
or
divl
xchg
adc
adc
mov
adc
push
fsubs
daa
cwtl
inc
pop
mov
xchg
dec
fsubp
jns
add
iret
cmp
in
xchg
mov
insb
loopne
cmp
dec
iret
push
sbb
rcrb
insb
cmpb
xchg
push
xchg
xor
cmp
je
or
push
jo
jmp
js
or
and
push
hlt
mov
add
imul
push
and
dec
outsb
clc
sbbl
jns
jmp
push
cmp
subl
aaa
pop
pop
sbb
pushaw
test
xchg
imul
or
xor
add
or
scas
xchg
jecxz
fstl
incb
push
jge
add
call
pop
adc
jns
xor
mov
pop
mov
and
sub
int
ret
repnz
pushf
add
stos
test
data16
outsb
je
sub
je
xchg
loope
mov
test
out
repnz
jmp
gs
xchg
lock
cmp
jecxz
fwait
jbe
popa
add
pop
inc
scas
fsubr
mov
adc
sahf
inc
dec
outsb
pop
addr16
nop
dec
pop
in
shlb
lret
dec
xor
dec
xchg
and
xchg
jecxz
inc
icebp
pop
mov
loopne
push
fists
int
mov
mov
inc
sbb
sbb
xchg
jge
xlat
cmp
add
mov
mov
dec
nop
mov
outsb
arpl
sbbb
enter
mov
dec
pop
gs
and
clc
sti
iret
inc
mov
fcmovnbe
outsl
inc
out
xor
shrb
sub
pop
shlb
push
out
cmp
pop
pushf
test
push
std
js
push
jnp
int
xor
pop
fcoml
sub
push
pop
lea
imul
inc
lods
mov
daa
cs
jnp
mov
or
add
pop
fnstcw
cmp
dec
inc
mov
lods
dec
mov
mov
xchg
mov
inc
pop
mov
xchg
mov
sti
xchg
xor
sti
in
jmp
daa
mov
xchg
sahf
xchg
jg
pop
jnp
cld
les
in
clc
fidivrs
loope
imul
dec
mov
dec
mov
mov
jle
inc
and
xchg
daa
movl
subb
xchg
std
lahf
xchg
and
cmpsl
jge
popf
dec
popf
xchg
and
push
dec
aaa
cld
or
mov
rorb
repz
dec
xchg
dec
into
adc
gs
add
call
cli
fildll
cmpsl
or
and
push
fisubs
int3
les
jmp
cmp
notl
push
pop
adc
sbb
xor
xchg
popa
insb
mov
cmp
enter
xchg
inc
ds
out
in
fwait
sbb
enter
pop
pop
dec
std
sub
pushf
xchg
pushf
loope
insl
adc
adcl
cmpsb
in
outsb
xchg
outsb
pop
and
frstor
inc
lret
lods
sub
mov
jae
dec
scas
lock
pop
cmc
das
cmpsb
test
jle
insb
pop
dec
movsl
es
notl
out
dec
test
in
and
pushf
add
addr16
adc
sub
inc
and
dec
arpl
in
mull
int
push
cmp
jle
mov
iret
pop
jno
add
mov
cltd
push
stc
ljmp
sti
pop
jae
cmpsb
dec
sub
mov
cmp
arpl
sub
sbb
mov
or
addb
loopne
pop
dec
arpl
mov
lods
bound
cmpsl
inc
fcoml
in
dec
xor
mov
out
mov
cmpsl
add
les
xchg
fwait
adc
leave
in
mov
pop
or
dec
pop
mov
lods
xchg
or
sahf
dec
push
divl
pop
loop
dec
fistpll
out
adc
cmpsl
lahf
mov
repnz
ss
add
pop
mov
sarl
rcl
pop
dec
pop
aas
loopne
adc
lods
out
mov
xlat
pop
pop
mov
pop
loop
jnp
pop
mov
dec
aad
wbinvd
mov
stc
add
stos
adc
ss
jb
xchg
pop
jb
and
cld
sbb
test
lds
clc
testb
ret
std
push
subb
js
jg
push
mov
outsb
sbb
repz
call
cmpl
ficomps
adc
sarl
enter
test
iret
out
int
jg
jnp
movsb
sbb
popl
inc
mov
in
jp
test
sar
inc
call
xor
add
or
push
lret
daa
jle
jno
push
pop
into
negl
icebp
xchg
fimuls
nop
call
sti
and
xor
outsb
push
jo
insl
xchg
imul
pop
inc
and
mov
xchg
add
xor
add
xchg
icebp
outsl
xor
adc
shr
les
inc
imul
data16
insb
and
popf
cmp
mov
shl
ret
mov
mov
cli
add
lahf
or
lret
and
outsb
dec
lods
jle
jl
jmp
xor
jne
fcmovb
mov
xacquire
imul
cmp
outsl
clc
ja
inc
add
cltd
push
inc
insl
cmc
adc
mov
mov
mov
cltd
mov
lock
imul
inc
sub
push
scas
ds
cmp
xor
out
leave
mov
test
aas
sbbb
jns
mov
push
dec
fwait
sarb
in
push
fisubrs
xorb
cs
sbb
adc
xchg
test
add
or
dec
insl
insl
and
shll
adc
add
clc
mov
mov
dec
stc
add
mov
jle
push
push
jp
or
pop
xchg
mov
mov
xchg
in
cmp
jnp
mov
mov
dec
mov
call
adc
mov
xor
loopne
cmp
mov
in
cmp
push
pop
icebp
xor
add
add
push
xchg
scas
cmpsb
subl
repnz
push
mov
dec
push
pop
repz
imul
inc
mov
fs
mov
testl
adc
jmp
push
sbb
xor
add
sbbb
fcoml
xchg
das
ja
daa
rcr
notb
sbb
iret
mov
sahf
test
in
add
sbb
popf
jno
cs
sbb
mov
adcb
les
test
iret
cmp
data16
ret
repnz
sti
pop
rcr
inc
je
popf
or
xchg
test
rol
pop
iret
lcall
in
ss
jmp
lods
add
pop
popf
fsubr
or
push
mov
loope
fs
xchg
fidivrs
movsb
mov
sub
or
jnp
sub
dec
in
and
out
aas
push
imul
test
fld
out
popa
lcall
mov
mov
cmp
dec
add
dec
adc
sub
std
outsb
xchg
repnz
xor
fs
sbb
add
pop
ret
mov
in
adc
jg
das
jmp
jnp
clc
mov
xor
add
loopne
jns
and
and
push
add
lea
mov
repnz
test
std
mov
jge
ja
mov
or
in
inc
mov
sbb
inc
jno
cmp
movsl
adc
xchg
xchg
into
cmp
ret
push
add
jb
ss
fimuls
mov
sbb
adc
insb
sbb
ja
jge
jge
fs
lock
adc
cmpb
das
daa
xchg
mov
call
sbb
sbb
popf
je
mov
xlat
fbstp
cmp
add
fldl
add
push
ror
inc
outsb
xor
jle
repnz
loop
xchg
mov
xchg
clc
sarb
xlat
iret
aam
cmpsb
cmp
or
inc
ja
cmp
mov
lea
mov
in
hlt
pop
pop
add
mov
sbb
dec
sbb
std
leave
jp
aas
sbb
mov
shrb
stos
popa
mov
xchg
jg
fbld
popa
jae
adc
dec
mov
mov
push
js
out
dec
in
cltd
icebp
push
mov
fdivr
test
rcr
idivb
push
xor
in
and
mov
movsl
xchg
test
xchg
jl
test
jg
aaa
nop
jecxz
cmp
fsubs
xchg
sbb
scas
into
pushf
cmpsl
or
aad
rcr
out
xor
xchg
test
mov
push
push
xchg
add
inc
stos
rolb
sahf
dec
rorb
or
xor
xchg
fcomps
push
rcl
mov
or
mov
mov
pusha
push
and
daa
pop
mov
lods
sub
mov
or
jg
sbb
xchg
jb
iret
cmp
jle
daa
or
lret
push
fwait
dec
pop
pusha
iret
fldl
addb
ret
mov
inc
nop
loopne
mov
in
mov
div
mov
std
pop
lock
int
pop
repnz
cltd
xchg
inc
xchg
push
xchg
fidivrs
subb
scas
inc
les
mov
gs
mov
adc
or
leave
arpl
inc
sbb
enter
test
push
inc
jbe
cmp
mov
mov
divl
dec
andb
iret
jno
fdivrl
