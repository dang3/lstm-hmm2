push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
adc
inc
xor
jl
pop
jl
adc
and
popa
pusha
arpl
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
xchg
popf
sbb
ja
adc
div
jmp
adc
in
fldenv
dec
pusha
dec
outsb
or
jns
loopne
mov
outsl
int3
inc
in
pop
lock
xchg
lcall
dec
pop
jns
jne
jl
mov
adc
and
jb
mov
lcall
mov
xor
fwait
rol
mov
sarl
mov
push
mov
cmpsb
mov
adcl
ret
pop
ret
loop
mov
out
push
adc
or
cmp
decb
jp
xor
sbb
fcompl
add
in
gs
aad
mov
push
pop
and
repnz
fwait
dec
jmp
fwait
mov
push
in
and
fndisi(8087
dec
lret
cs
inc
imul
test
mov
in
xor
jle
or
mov
pop
mov
cwtl
test
pop
jbe
inc
mov
rcl
stos
adcl
pop
cltd
pop
xor
dec
sub
leave
mov
scas
cli
shlb
cmp
call
jb
pop
adc
scas
lds
mov
mov
mov
cli
mov
xchg
lahf
jle
lea
cmp
int3
jno
or
inc
test
sub
jecxz
jp
gs
and
loop
and
aaa
and
jl
jbe
out
xchg
adc
outsb
xchg
outsb
mov
lock
jg
adc
rcll
push
push
xchg
leave
adc
cmp
andl
sub
cmpsl
dec
cli
jns
das
mov
sahf
lcall
addb
xlat
ror
lcallw
std
mov
dec
jae
lcall
sbb
addr16
add
lds
jb
and
pop
sub
inc
xlat
out
in
std
cmp
dec
add
in
jmp
scas
rorl
inc
mov
pushf
inc
les
or
and
scas
mov
stos
out
xchg
lock
insl
sbb
add
dec
daa
fisttpl
cmp
add
push
dec
sub
cmp
addr16
inc
add
push
xchg
lcall
xchg
cli
imul
sbbl
mov
mov
js
dec
mov
repz
pop
xchg
out
inc
sub
xor
fs
pop
rcrl
or
mov
ss
mov
inc
mov
jmp
cmp
xchg
cmp
mov
sub
jae
fbstp
aam
pop
mov
mov
push
xchg
popf
cmpl
ficoml
nop
cs
lret
mov
sbb
inc
mov
jmp
pop
pop
mul
cwtl
aas
push
adc
leave
fptan
add
cld
lods
repnz
push
xchg
jo
fwait
jle
inc
inc
mov
mov
push
in
es
mov
pop
iret
push
scas
pop
xchg
nop
call
inc
mov
jb
adc
icebp
push
pop
imul
mov
mov
sub
mov
std
mov
push
mov
adcl
adc
xor
add
pop
sub
hlt
js
arpl
lods
push
push
inc
adc
sti
pop
int3
std
cmp
fldl2t
ds
repnz
test
cmp
pusha
lods
cmpsb
incb
lods
or
jbe
or
mov
subl
aad
aas
inc
insl
or
roll
inc
iret
add
lcall
fisubs
push
jecxz
xchg
shlb
rcr
jp
adc
xor
adc
jno
cwtl
xor
fists
loop
mov
cmp
lds
xor
sti
clc
and
mov
inc
mov
insb
test
pop
addr16
imull
ret
js
jo
jle
js
insb
mov
or
inc
movsl
jae
lcall
jb
jecxz
ja
push
pop
pop
jg
lea
sbb
iret
pop
cld
lea
and
cmpsl
aas
jg
fwait
lcall
mov
xlat
xorl
push
movsl
and
add
call
aas
mov
rcr
inc
xchg
adc
inc
iret
push
pop
or
mov
lds
roll
pop
mul
or
jb
add
cmp
pop
imul
xor
fisubrs
aas
push
adc
sub
loopne
in
mov
insl
xchg
inc
test
sub
jne
fs
xchg
pop
cmp
mov
cwtl
aaa
jge
mov
cli
hlt
shrb
jae
lea
sub
or
sub
pop
aad
cmp
mov
push
adc
hlt
mov
stos
sar
mov
mov
cmc
imul
orb
sbb
push
gs
fadds
imul
mov
push
mov
loope
popa
jecxz
cmp
fxch
mov
call
cmp
jp
int
sbb
mov
je
sbb
mov
xchg
cs
inc
xchg
dec
ja
loopnew
sbb
push
mov
jmp
popfw
mov
xor
data16
aas
mov
mov
push
jbe
addr16
imul
pop
sub
pop
pop
lret
movsl
pop
pop
dec
js
pop
cmp
push
loope
icebp
incb
sub
fisttpll
sub
cmpsb
xor
sbb
jne
imulb
mov
popa
jae
mov
nop
mov
cmpl
jmp
loop
or
xor
aam
mov
test
sbb
jo
or
negl
pop
dec
adc
clc
cltd
and
pushf
loop
sbb
pop
test
add
imul
adc
push
push
mov
hlt
andb
sub
push
cmpb
idivl
test
pop
push
inc
inc
xchg
fwait
jmp
xor
std
shrl
xor
ljmp
imul
mov
pop
je
jnp
dec
es
int3
dec
adcl
or
pushf
sub
fisttps
in
scas
arpl
sbb
out
stos
push
dec
lret
test
cmc
out
push
dec
xor
out
inc
cwtl
enter
inc
push
adc
or
mov
ret
pop
or
dec
inc
dec
adc
xor
xchg
test
pop
jecxz
int3
mov
stc
push
add
cmp
mov
subb
ljmp
sti
pop
sub
xchg
pusha
test
daa
dec
gs
pushf
add
lods
test
and
fs
add
in
xor
sbb
mov
and
pop
inc
and
cli
dec
xchg
jle
cmp
movsb
mov
addb
inc
enter
lcall
xor
cmp
fwait
mov
dec
and
add
dec
aad
mov
xchg
or
push
ljmp
mov
insb
cmc
scas
movsb
outsl
add
push
cmpb
jbe
roll
push
xacquire
mov
lret
jb
out
dec
test
fnstcw
mov
jecxz
test
sub
cmp
jle
cmp
pop
inc
stos
sbb
icebp
jo
sub
arpl
lahf
out
mov
cmpsb
mov
out
mov
mov
pop
cmpsl
xchg
sub
or
xchg
sbb
xchg
mov
push
shlb
inc
mov
sub
scas
lock
insb
mov
or
push
mov
mov
in
outsb
imul
xor
lret
test
mov
adc
mov
cld
add
cmp
mov
push
sub
cltd
jecxz
mov
push
mov
sbb
into
mov
lahf
adc
add
sahf
pop
outsl
fildll
push
xor
dec
mul
les
imul
xor
push
popf
xchg
lods
rorb
mov
or
mov
jecxz
incl
jns
xchg
clc
xor
call
out
bound
push
sbb
add
out
jge
fsubrs
mov
mov
dec
cli
jne
or
dec
mov
adc
mov
or
and
scas
dec
hlt
push
mov
jnp
pop
jecxz
or
pop
mov
aaa
movsb
out
xchg
mov
or
or
xchg
sub
lahf
mov
orb
mov
adc
mov
or
mov
sbb
sahf
and
inc
idivb
and
xor
xor
aaa
or
sti
test
push
test
xchg
sbb
mov
sar
and
pop
pop
mov
sbb
nop
jnp
push
cmpsl
daa
add
imul
mov
cs
xor
fdiv
push
sbb
outsb
xor
adcl
lds
das
das
fisubrs
pop
and
dec
gs
popf
in
dec
push
mov
or
adc
pop
ljmp
out
movsl
mov
scas
dec
cmc
or
mov
and
mov
or
out
leave
mov
and
aas
xchg
sub
sub
mov
js
jp
insb
jle
scas
in
mov
sbb
add
cmc
xchg
push
les
mov
das
rcll
lds
mov
std
fbstp
orb
mov
outsl
js
lds
repz
test
pusha
mov
pop
xchg
inc
cli
sbb
mov
cmp
lock
or
fidivs
pop
pop
adc
lcall
jecxz
mov
xor
mov
mov
mov
imul
xchg
jo
test
jge
in
push
inc
out
add
cmp
sbb
aas
stc
or
and
jecxz
adc
loopne
inc
mov
imul
aad
pop
cmp
xchg
jno
fistpll
cmp
xor
clc
ds
or
cmp
xor
xchg
mov
fists
cmp
jecxz
movsb
cmp
pop
inc
repz
lods
cmp
mov
pop
subb
sub
jb
mov
inc
mov
ja
in
jecxz
in
mulb
fildl
adc
out
sub
adc
dec
xor
int
pop
inc
mov
call
xchg
inc
jo
sahf
daa
jnp
inc
and
mov
mov
ja
mov
jo
push
into
push
mov
and
or
out
pop
call
jbe
repnz
or
mov
enter
out
sahf
mov
ss
or
push
cmpsl
dec
push
sbb
sbb
pop
lods
adc
inc
jl
jns
leave
add
negl
pop
jne,pt
push
and
jmp
cmpsb
pusha
mov
xorb
ret
je
ret
mov
xchg
cmpsb
sub
dec
sub
testb
jge
cs
ffreep
or
sbbl
cltd
sub
sub
mov
jnp
in
add
fwait
int
mov
aas
jecxz
imul
into
xor
jne
push
jns
shl
adc
mov
mov
and
test
js
xor
push
jge
mov
fisttps
mov
mov
lret
jae
ss
xchg
adc
lea
mov
push
loop
repnz
cli
lock
and
cmp
pop
or
aaa
adc
adc
or
imul
aam
push
xchg
data16
test
out
leave
mov
in
mov
or
jl
and
and
out
gs
and
xchg
je
fidivl
jns
mov
dec
hlt
xlat
sbb
ret
xor
aad
shlb
or
add
and
mov
insl
mov
test
int3
scas
adc
sub
std
dec
call
test
insb
add
xchg
xchg
sub
adcl
inc
or
enter
out
and
inc
stc
std
jmp
or
xchg
imul
lods
mov
xor
lods
lock
sbb
xchg
adc
fdivrl
push
mov
cmpsb
push
add
jecxz
clc
mov
add
pop
sbb
xor
mov
fdivrs
pop
fistpl
popf
pop
push
push
imul
xor
jne
aad
shll
push
stos
mov
hlt
lods
repnz
dec
pushf
stos
xor
xchg
outsl
push
dec
and
add
dec
or
insl
mov
arpl
fidivrl
cmp
mov
add
xchg
scas
mov
cltd
sub
cmp
fldt
push
call
or
cld
and
inc
cmp
out
xchg
fs
xchg
les
pop
aaa
push
popa
arpl
hlt
jg
int
cltd
fildll
inc
movb
hlt
and
fsubs
pop
jp
imul
mov
mov
popf
movsb
enter
inc
repz
inc
jl
insb
ret
aas
sub
jecxz
stos
cmpsl
xor
and
lods
push
scas
je
and
and
ss
sub
insl
or
shrb
arpl
lcall
add
and
lahf
and
sbbb
in
push
shrb
push
push
push
push
pop
pop
inc
dec
push
xor
add
aad
pop
xchg
adc
push
mov
cmp
cld
scas
xor
xor
imul
clc
nop
dec
xchg
fadd
adc
mov
mov
cmp
lods
icebp
test
jle
sbb
mov
inc
sbb
dec
and
js
fstl
dec
adc
sub
mov
mov
lcall
hlt
lret
arpl
adc
adc
sub
mov
jnp
out
jp
cs
ss
xchg
or
das
mov
scas
mov
inc
add
mov
sub
stos
rolb
pop
or
xor
jmp
ss
add
cmp
jg
sub
nop
rorb
pop
dec
and
cmc
orb
not
insb
loopne
mov
xchg
and
sub
stos
lret
rol
fstps
test
pop
mov
jb
adc
pusha
vpmacsdql
push
or
jge
je
and
mov
xor
ja
sbb
ljmp
pop
push
movsb
out
mov
dec
mov
loop
in
add
inc
fwait
pop
jmp
testl
inc
insb
jno
dec
outsb
push
xchg
mov
mov
dec
and
arpl
mov
or
xor
push
sarl
int
cld
int3
arpl
inc
nop
sbb
and
icebp
int
jl
cmpb
bnd
mov
jge
arpl
sub
lea
stc
repz
in
repnz
push
data16
popfw
fsubs
popf
mov
cmpsb
adc
xor
mov
sbb
test
and
inc
fucomip
jl
insb
stos
aam
adc
add
mov
leave
xchg
mov
das
pop
movsb
jae
sub
enter
repz
out
cltd
cmp
jb
cli
dec
nop
mov
sahf
adc
inc
jp
addr16
xor
jns
lea
aas
enter
aaa
pop
cli
out
mov
jle
add
pusha
sub
lea
mov
xlat
sbb
push
pushf
sbb
loope
sti
addb
dec
xor
mov
icebp
pop
lahf
hlt
or
dec
mov
pop
enter
dec
out
pushf
js
arpl
into
rcrl
sbbl
push
inc
pusha
dec
int
mov
pop
pop
cwtl
bound
popf
and
rorl
test
cmp
in
sbb
sub
mov
sub
mov
ljmp
dec
xchg
pop
xor
adc
cwtl
add
inc
aas
add
or
scas
xor
into
inc
push
jecxz
adc
mov
lds
jae
cwtl
mov
jp
dec
push
pop
mov
incl
test
xchg
jno
sbb
fs
cwtl
mov
adcb
push
stos
cwtl
xorb
or
and
jmp
aaa
jmp
cmpsb
aaa
push
mov
loopne
xchg
lret
xor
pusha
jbe
and
sarb
push
scas
push
push
lret
test
xlat
mov
lret
cmp
push
mov
push
xchg
inc
sbb
lfs
pop
mov
and
aaa
mov
sarb
inc
pop
mov
or
cwtl
push
std
aad
mov
pop
daa
sbb
or
adc
lock
enter
dec
xchg
pop
shrl
mov
pop
mov
xchg
fmul
or
jg
pop
jno
jp
jb
jno
mov
mov
or
jle
mov
orb
insb
fdiv
or
push
xorl
dec
mov
fadds
push
test
rclb
inc
lahf
xor
stc
mov
sub
or
pop
xchg
repnz
iret
sub
or
cltd
dec
inc
or
in
pop
clc
push
test
cmp
dec
clc
push
pop
jmp
repnz
lods
mov
add
or
mov
inc
push
nop
mov
xlat
popf
aaa
in
daa
mov
sbb
mov
in
lods
popf
xchg
dec
sub
call
xor
lret
jb
bound
test
call
scas
or
test
sahf
mov
pushf
push
mov
add
dec
dec
jge
and
in
mov
mov
mov
sub
outsb
lcall
divb
or
addb
pop
iret
cmp
inc
pushf
push
adc
insb
mov
loopne
push
shlb
sahf
mov
dec
nop
xchg
fbld
jmp
mov
dec
mov
roll
adc
or
lea
js
dec
popa
rcrb
push
and
clc
or
call
cltd
test
fdivrl
and
dec
xchg
xchg
scas
add
jle
popa
lret
mov
dec
pop
imul
xor
mov
jno
nop
leave
jecxz
inc
or
scas
pop
cmp
loopne
out
sbb
icebp
fstps
push
sub
and
imul
lcall
push
lods
aam
inc
push
divb
stc
cmpsl
lds
jg
xor
pop
std
mov
sbb
xchg
xor
push
pop
jle
add
aaa
ljmp
mov
mov
fcmovb
cwtl
sub
and
insl
aas
jae
or
and
or
xchg
xor
pop
cltd
add
fadd
in
testb
rorb
push
in
jp
test
inc
sti
xchg
std
cmpsl
addl
jae
js
cmp
mov
jle
adc
dec
push
adc
or
pop
mov
add
xor
out
jge
mov
pop
leavew
lret
orb
dec
pop
aad
mov
pop
jg
lret
scas
jb
push
rorb
jno
jno
push
and
mov
xchg
push
notb
rclb
push
xor
leave
pop
or
mov
cmp
jp
stos
sbb
mov
mov
mov
cltd
xor
push
arpl
and
jbe
cltd
pop
mov
sar
xchg
lcall
repz
aaa
imul
inc
sahf
pushl
sub
or
mov
mov
inc
aaa
cld
out
sbb
push
add
incb
cs
insb
pop
lods
leave
or
pop
test
in
mov
pop
xchg
mov
xor
repnz
mov
pushf
lods
xchg
mov
in
in
or
jp
lds
xchg
int
mov
sbb
sub
test
and
cld
inc
pop
stos
add
into
cmp
sti
enter
pop
or
aam
xor
mov
push
ret
in
lds
les
and
and
push
sti
cmc
jecxz
repnz
sbb
scas
fiadds
sbb
inc
jg
ret
cmp
loop
and
ss
icebp
jae
enter
in
loope
sbb
movsb
loop
fbld
pop
and
int3
jns
adc
sub
adc
ja
dec
call
mov
imul
outsl
or
stos
pusha
cmp
dec
dec
imulb
dec
loope
mov
inc
and
stos
lcall
push
and
and
call
iret
stc
or
shrb
fwait
push
stc
pushf
adc
lahf
rcrb
push
repnz
add
mov
scas
dec
jnp
sbb
pminsw
inc
gs
xor
in
lret
inc
jne
xchg
sub
sbb
push
test
push
pop
pusha
jbe
jle
enter
jl
xor
dec
dec
ret
push
scas
mov
aad
cmpl
mov
sahf
mov
sbb
push
out
and
decl
popa
pusha
lods
adc
mov
int
mov
les
inc
daa
pusha
lock
daa
xor
pusha
and
loopne
fsubrs
mov
popf
xchg
in
add
mov
ja
mov
mov
push
cwtl
jg
pusha
cmp
pop
ljmp
imul
test
hlt
mov
out
push
pop
js
sub
or
movsb
add
dec
jo
test
lahf
insb
dec
fists
pop
imul
pop
in
or
xor
lock
mov
js
mov
nop
pop
out
mov
sub
pop
mov
ss
in
das
adc
mov
push
or
cmp
sbb
fs
cltd
sahf
sti
out
leave
mov
xor
neg
test
add
push
stc
add
jno
add
pushl
push
sbb
jg
aam
fnstsw
xor
bound
gs
pop
mov
xchg
inc
dec
adc
cmpsb
ss
jecxz
or
imul
call
jne
push
imul
scas
lahf
lcall
pop
int3
xchg
int3
dec
add
jns
rolb
jge
icebp
cmp
scas
ljmp
mov
cmp
cmp
je
lea
popw
mov
pop
dec
adc
jno
jecxz
es
dec
xor
jb
mov
jb
push
in
mov
xor
mov
sub
and
shrl
jnp
in
adc
jae
and
pop
nop
adc
mov
int
sub
in
xor
mov
scas
sub
mov
inc
das
adc
and
xlat
pop
lahf
aam
shll
icebp
or
dec
mov
xchg
jmp
dec
mov
ds
mov
cmp
pop
daa
pop
sahf
imul
mov
and
push
cmp
test
cmp
mov
loop
dec
outsl
mov
fsubrl
lea
in
add
mov
jnp
popaw
adc
mov
inc
cmc
push
insl
cmc
mov
repnz
adc
xor
lods
mov
adc
and
jne
paddd
int
or
mov
pop
stos
int3
pop
loop
xor
int3
mov
sub
lock
pop
outsl
cmp
mov
and
das
int3
hlt
mov
in
jge
cmp
hlt
sub
xor
cmp
adc
aad
jmp
loopne
int3
movsl
push
push
jp
dec
dec
lahf
ljmp
or
pusha
into
rclb
js
das
clc
aaa
leave
adc
pop
shlb
fwait
xchg
or
aas
pop
daa
cwtl
or
push
jp
sbb
or
sub
loopne
scas
adc
jg
mov
roll
jl
lods
cmp
inc
adc
testb
cwtl
cmp
sub
pop
dec
push
inc
jl
out
add
iret
js
inc
fs
mov
scas
dec
xchg
pop
push
rorl
loope
out
enter
or
push
fists
les
add
sub
stos
rorl
call
int
shlb
adc
pop
push
pop
jne
gs
jnp
jmp
out
add
std
fnstsw
testb
and
icebp
andl
scas
clc
cmpsb
or
push
push
xor
shlb
sbb
push
pop
sbb
jbe
in
dec
aaa
mov
fwait
cld
in
sbb
pop
lods
inc
cmp
xor
push
outsl
insl
sbb
rcrl
dec
lret
std
std
dec
pop
dec
pop
test
xor
inc
rol
jge
add
dec
mov
fs
pop
mov
adc
es
nop
pusha
push
ljmp
imull
jl
mov
pushf
jne
jne
fldenv
inc
test
mov
add
jmp
mov
dec
adc
xor
mov
test
je
xor
cmp
mov
sbb
jl
outsl
xchg
mov
dec
xor
add
ds
pop
dec
outsl
mov
das
sbb
jge
popa
pusha
jg
insb
add
cli
mov
mov
jae
cwtl
outsb
stos
adc
lds
pop
and
inc
mov
jmp
mov
nop
dec
stc
add
shll
dec
in
flds
cltd
push
or
lock
sbb
hlt
roll
jl
insb
gs
sub
lods
mov
enter
cs
mov
pop
mov
push
push
cmp
pop
dec
cmp
adc
cli
jge
xlat
outsb
cli
mov
add
cli
popf
lods
adc
cltd
lret
adc
out
cmp
arpl
loop
sahf
cmp
fs
mov
and
mov
repz
js
mov
adc
pop
leave
ror
sbb
lods
cltd
cli
dec
ja
mov
out
pop
int
mov
inc
xlat
cmpl
xor
xchg
outsb
lock
or
jmp
jl
mov
jecxz
inc
iret
cwtl
mulb
dec
and
jl
pop
inc
hlt
das
pusha
jno
cmp
add
lret
push
daa
adc
or
insb
sbb
jmp
xor
pop
js
or
jp
push
ja
loope
push
ss
scas
adc
out
pushl
int
sub
pop
outsb
sbb
addb
push
xchg
int3
scas
std
aas
dec
aad
add
dec
pop
xchg
push
xor
jne
insb
sbb
xchg
sub
inc
and
or
ja
pop
inc
jecxz
pop
inc
sub
inc
ss
jae
dec
lea
fdivs
dec
jg
and
testb
push
push
aaa
movsb
dec
addl
shrb
jmp
and
scas
movsb
push
loope
jo
aas
pusha
mov
test
inc
mov
xor
and
xor
jns
mov
lods
loop
add
out
pop
mov
mov
jecxz
mov
mov
jae
cwtl
cltd
repz
test
adc
add
mov
gs
add
pop
andl
icebp
fisttpll
das
out
ror
mov
sbb
in
pop
xor
mov
xchg
adc
and
popw
xchg
aaa
cvttps2pi
adc
jp
xlat
xor
dec
jb
jae
inc
movsl
or
dec
mov
in
sbb
gs
popa
loopne
pop
out
loop
ret
mov
daa
xor
aaa
jmp
lcall
movsl
jnp
aam
fisubl
lock
mov
mov
cmp
data16
shl
sarl
sub
dec
out
enter
sti
pop
movsl
in
jmp
add
sub
in
or
pop
mov
icebp
adc
rcrl
jg
jae
repnz
xchg
cmc
dec
dec
sbb
ret
fisubl
mov
lds
scas
enter
int
fwait
aas
jb
data16
aad
fiaddl
pop
jo
es
sub
adc
das
mov
add
call
mov
imul
inc
cmpsl
sahf
out
xor
pop
mov
pop
lahf
js
ficompl
stos
jl
inc
addr16
popa
lods
lret
cmp
push
or
enter
shll
cli
push
movl
arpl
cld
mov
rolb
das
shr
ds
test
jbe
popf
lock
jg
je
or
test
or
fistpll
adc
dec
pop
fadd
das
mov
jnp
push
pop
cs
mov
fisubl
cmp
push
sbb
mov
cmp
and
mov
imul
push
and
and
ret
dec
adc
in
mov
jl
icebp
lret
outsl
movsb
push
leave
cli
ss
pusha
mov
js
fldl
sub
in
adc
mov
sbb
xchg
and
xchg
imul
stc
in
mov
mov
or
jecxz
push
mov
push
jg
shll
pop
les
and
or
lret
enter
mov
int
jne
jno
lods
pop
imul
in
inc
repz
add
imul
or
aaa
dec
sbb
xor
leave
mov
sub
inc
and
std
aas
cld
divl
xor
xchg
sbb
sub
in
dec
lock
and
in
call
and
cltd
into
mov
add
ds
vmovaps
push
push
jae
adc
bound
jnp
xchg
lcall
cmp
cmp
inc
pop
push
push
push
lds
inc
sbb
orl
pop
lcall
inc
icebp
sahf
lret
add
mov
push
jmp
cmpsl
or
rolb
jmp
cmpsb
je
mov
add
stos
adc
mov
lret
movsb
in
js
jmp
fcomps
in
adc
fcoml
ja
imul
mov
arpl
cmpsb
xor
dec
sub
mov
adc
mov
jl
lock
cwtl
adc
lret
lods
fs
enter
mov
pop
xor
or
dec
lods
sub
test
xchg
add
push
cmp
call
pop
in
and
cwtl
mov
loop
cmp
ja
aam
fisubrs
decw
adc
ljmp
outsb
pop
fcoml
ljmp
mov
xchg
rorl
mov
push
jns
cs
jmp
mov
mov
mov
rcl
test
push
dec
bound
pop
jbe
xchg
mov
cltd
or
adcl
pop
sbb
jge
imul
or
mov
or
dec
test
repz
fstl
mov
out
adc
pop
push
popf
mov
sbb
jl
pop
ret
in
mov
sub
bound
jg
mov
fistpll
cmp
mov
cmp
jmp
xchg
adc
test
dec
inc
pop
mov
or
in
pop
push
jmp
inc
mov
mov
sahf
das
or
jg
ret
mov
push
mov
sbb
fs
imul
xor
ret
lods
xor
pop
xchg
sub
xchg
subl
outsb
scas
adc
mov
into
lock
mov
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
cli
rcrl
jl
pop
jl
xchg
scas
cmp
xor
pop
mov
cmp
loope
pop
cmp
and
imul
inc
sarb
inc
pusha
icebp
or
shll
jnp
jmp
xor
pop
loope
jmp
jne
stc
jnp
inc
sbb
data16
insb
outsb
insl
loope
and
fisttpl
xor
add
mov
cmpsb
les
lea
cltd
mov
jae
out
pop
cmp
adc
repnz
push
mov
add
pop
sbb
or
mov
enter
int3
roll
mov
push
sub
and
bound
call
test
dec
inc
outsl
inc
inc
mov
fcomps
pushf
sub
stc
sub
lret
mov
fs
cmp
jns
dec
push
stc
push
pop
cmp
fistps
cmpsl
sub
scas
inc
das
loope
mov
pop
cli
jbe,pt
mov
push
and
aad
jne
cmp
xlat
mov
inc
ror
xlat
ss
lea
cmp
lods
jno
ret
filds
icebp
cmpl
mov
pop
mov
sub
out
cmp
add
xorb
sbb
pop
or
popf
in
xor
or
cltd
push
jl
ret
mov
mov
xor
pop
cmc
jns
inc
les
push
inc
or
push
test
pop
dec
inc
mov
cmp
fldl
and
icebp
jg
mov
mov
push
and
mov
in
jno
mov
loope
dec
sahf
sub
inc
pop
jns
stos
mov
xlat
xor
adc
clc
add
mov
jg
andl
cmp
stc
dec
fldcw
out
cmp
inc
gs
pop
jl
push
and
fistl
vmovupd
fwait
mov
addr16
sub
mov
inc
fbstp
test
lret
ficompl
add
pop
jnp
mov
cmc
mov
imul
push
adc
xchg
jmp
test
addb
hlt
cmp
cld
dec
jge
aad
repz
and
dec
clc
mov
jae
in
sbb
add
lcall
mov
sbb
shll
inc
cmp
fcmovnu
xchg
jne
dec
in
sbb
out
cmpsl
fstl
mov
scas
lcall
or
movsl
ror
mov
pop
jnp
pushf
mov
cmp
mov
dec
lods
mov
ljmp
and
mov
fs
movups
add
or
fisubl
mov
pop
sbb
jp
int
popf
pop
mov
push
aam
dec
pop
call
ret
stc
enter
in
pop
nop
xchg
push
xor
faddp
xchg
mov
fldt
sbb
popf
lcall
out
sbb
in
inc
sub
inc
cmpsb
popf
mov
cmpsl
ds
ljmp
mov
inc
icebp
in
dec
dec
test
cmp
cli
cltd
notl
xchg
lahf
dec
clc
fsubrs
icebp
cmp
fmull
cmpsb
pop
xchg
xor
test
xchg
shll
jmp
div
sbb
push
mov
data16
daa
pushf
push
fucomi
out
xchg
les
in
addr16
mov
xor
push
aam
inc
mov
mov
outsl
aad
mov
aam
cmp
mov
jle
jecxz
jg
mov
push
dec
int
cltd
lahf
mov
test
je
mov
int3
lret
jecxz
clc
aad
scas
sti
dec
jb
lea
cmp
pop
xor
pop
test
addr16
ret
xor
aas
notb
std
in
mov
pop
push
dec
pusha
dec
out
je
pop
jp
mov
push
int3
fstps
outsb
addb
orl
imul
sbb
sbb
js
cmp
mov
fisubrl
movsb
pop
mov
xor
xchg
mov
iret
or
sub
ds
stos
jl
fbld
jb
push
pop
ret
popf
mov
mov
xor
or
inc
in
call
divl
xchg
push
sarl
cmpsb
or
ds
aaa
jb
xor
pop
push
rcrb
xor
pop
push
or
test
nop
adc
cmpsb
scas
xchg
aaa
jb
dec
loope
or
int3
xchg
fmull
mov
mov
mov
and
sub
cltd
mov
xchg
mov
jae
push
mov
outsl
out
jl
xor
jno
pcmpgtb
movsl
fidivs
xchg
adc
push
pop
pushf
sahf
in
jbe
mov
dec
arpl
arpl
repnz
push
or
xchg
sub
cmp
fwait
stos
popa
xchg
jb
pop
mov
jg
mull
stc
mov
cli
insl
adc
mov
sbb
cmc
push
aad
sub
incl
mov
arpl
mov
outsb
int3
lret
or
sbbb
aas
jmp
into
cmc
cmpb
loop
clc
mov
and
lods
cltd
mov
movsb
fldt
jg
mov
testb
js
jne
data16
and
push
mov
pop
sbb
mov
ss
jmp
cmp
dec
mov
jle
xlat
jp
sbb
mov
lret
repz
fs
sub
daa
mov
sti
mov
cli
push
fstps
jg
les
lahf
mov
xchg
in
sbb
or
nop
movsl
add
adc
inc
cli
inc
xor
jge
pop
jle
add
fiaddl
int
aaa
mov
cmp
das
mov
cmp
iret
fstps
or
movsl
xor
enter
pop
mov
stos
sbb
push
loope
sub
push
mov
ljmp
cmp
and
or
mov
je
xchg
mov
xor
xorb
imul
xor
pop
inc
xchg
cwtl
dec
and
pop
mov
popa
ror
lock
cs
sub
mov
test
jl
jecxz
out
bound
mov
pushf
incl
cmp
icebp
xchg
xorl
xchg
insl
cmp
inc
inc
shlb
add
cmp
sub
out
dec
push
and
stos
test
insb
mov
push
rorb
mov
ret
divl
xchg
subl
call
cs
pop
jo
scas
jle
repz
sub
out
loope
out
pop
mov
xchg
icebp
sub
cmp
lock
sub
mov
xor
xchg
dec
gs
das
mov
sarb
getsec
dec
and
arpl
orl
adc
jbe
pop
mov
insl
cld
movsb
inc
xchg
repnz
mov
mov
scas
je,pn
repz
dec
xor
and
push
int3
or
fsubr
icebp
adc
xorb
jo
scas
lret
std
mov
arpl
cmc
lock
subl
xchg
mov
cmpsl
jb
adc
into
out
data16
jg
or
adc
fists
fucomi
jnp
lcall
pop
out
popa
addr16
lahf
mov
mov
ret
insb
mov
push
cmp
mov
mov
jecxz
popa
push
mov
test
add
push
mov
scas
rolb
dec
sbb
push
data16
fimuls
shlb
push
xorb
mov
lock
push
bound
xor
mov
sarl
movsb
int
cs
gs
out
jp
jecxz
call
inc
rorl
leave
movsb
cmp
push
sub
sub
jbe
inc
fdivs
sub
or
clc
aas
into
pop
cmpsl
in
cld
sbb
adc
push
mov
outsb
ret
mull
xor
push
stc
inc
test
dec
scas
or
adc
pop
fistps
jmp
jg
add
jns
popf
addr16
mov
jne
adc
sub
adc
dec
adc
nop
movsl
and
rorl
loope
test
mov
in
xchg
inc
xor
test
sub
or
and
jp
popa
xchg
out
gs
adc
dec
push
xchg
dec
xchg
xlat
sub
and
nop
mov
inc
inc
mov
add
adc
movb
and
sbb
push
lret
sub
cltd
imul
or
cmpsb
jl
push
addr16
mov
cs
push
cld
xor
push
jo
fadd
movsb
mov
pushf
in
stos
fdivs
push
in
insl
push
fwait
arpl
mov
cmpsl
aaa
shlb
dec
outsl
iret
mov
sahf
pop
jmp
xchg
mov
mov
popf
movsl
int
adc
or
mov
mov
inc
jge
sub
xchg
inc
into
ret
pop
cmpsl
int
test
sub
mov
bound
test
stos
clc
negb
ror
js
push
arpl
xor
cmp
pop
ds
xor
add
dec
inc
in
clc
and
mov
xor
cmp
cmp
cmpsb
iret
arpl
divps
in
lea
hlt
loopne
addl
fsubrl
out
aad
pusha
cli
mov
push
or
mov
xlat
and
dec
fdivl
jge
mov
data16
mov
push
in
iret
movsb
std
imul
adc
iret
dec
daa
push
arpl
fnstcw
mov
neg
push
lret
xchg
xchg
fiadds
push
arpl
fdivr
testb
gs
jnp
ss
bound
pushf
push
imul
movsl
jbe
adc
in
repnz
and
xchg
scas
rcrb
mov
or
lret
jno
or
pop
pushf
lcall
mov
mov
mov
mov
ret
arpl
test
pop
mov
sub
nop/reserved
ljmp
cli
sub
movl
xchg
insb
cmp
mov
sub
sbb
and
add
orl
add
push
repnz
pop
xor
cwtl
ud1
sub
mov
jnp
mov
outsl
and
add
pop
push
or
inc
dec
or
idivl
ds
mov
jae
rorb
mov
or
mov
mov
mov
adc
ss
mov
jb
fcmove
mov
xor
les
out
lret
pop
rolb
dec
jo
xor
call
aam
pop
sub
mov
inc
cmp
and
jmp
mov
push
stos
inc
sbb
or
lock
adc
popa
dec
sub
out
mov
mov
imul
cmpsb
stc
flds
dec
jecxz
gs
fstl
gs
out
cmpsb
ljmp
mov
lret
push
movb
test
push
jge
or
or
mov
inc
dec
lahf
dec
push
mov
adc
pop
fs
movsb
lods
push
sbb
or
jns
inc
mov
push
xchg
clc
jmp
iret
mov
cmpb
pop
xchg
jge
ret
arpl
jmp
ret
mov
adc
pop
lods
lahf
ret
dec
mov
sub
ljmp
popf
mov
or
push
push
jl
ds
movb
rolb
adc
cwtl
inc
mov
mov
lcall
cld
cmp
sbb
or
out
mov
jb
inc
ja
jbe
into
xorl
lea
lea
mov
cwtl
aas
dec
daa
dec
mov
mov
out
sub
lret
invd
xchg
sbb
test
jl
gs
push
inc
inc
sub
inc
adc
sahf
je
movsb
movsb
aaa
jp
xor
stos
mov
popa
sahf
mov
xor
xchg
cmp
push
cltd
pop
xor
ds
jb
adc
cmp
xchg
inc
inc
mov
movsl
dec
movsb
mov
jb
lock
stos
loop
mov
in
push
or
pop
outsl
and
loop
fistpl
stos
lock
out
mov
push
add
nop
enter
loopne
clc
sub
and
sbb
or
scas
cmp
and
test
dec
mov
fadd
mov
imul
icebp
pop
loopne
push
mov
mov
lahf
inc
jecxz
jl
fisttps
shrl
adc
mov
lea
int
adc
jge
adc
dec
icebp
cmp
out
popa
popl
lret
sub
scas
xchg
test
fdivs
push
jo
outsb
push
or
add
mov
mov
mov
ja
outsl
push
test
cmp
and
sarl
jle
pop
mov
push
mov
xor
mov
jmp
fimull
std
out
sub
cmp
jmp
jp
add
mov
gs
inc
mov
jp
cli
or
mov
inc
sub
lahf
popf
nop
scas
shlb
out
dec
pop
stc
test
fildl
arpl
push
and
nop
push
in
aas
and
stos
adc
cmpsl
pop
pop
xchg
stos
mov
jae
xor
add
mov
bound
mov
lret
adc
call
and
pop
or
cmp
lret
xchg
pop
add
daa
jge
shlb
daa
loop
fisubrl
pop
inc
jge
rolb
push
push
cmp
inc
lcall
cmpsl
pushf
jg
push
inc
xor
add
in
add
jmp
sahf
fs
push
or
clc
mov
loope
in
mov
xor
aaa
insb
sub
pop
jmp
pop
add
idiv
idivl
push
xor
fidivrs
fs
or
jbe
cltd
fiaddl
flds
test
inc
int
cltd
rorl
int
sub
jae
pop
add
ja
jae
sbb
cmp
arpl
lods
add
jns
iret
push
out
jne
lret
dec
jmp
pop
jp
and
mov
jge
push
rcl
or
or
testb
mov
stos
je
data16
pop
pop
cltd
pop
mov
or
rorb
adc
lods
adc
or
scas
push
jge
lret
in
lret
sbb
les
inc
inc
add
mov
xor
je,pn
jbe
jg
addb
add
or
stos
fistl
mov
orl
and
hlt
pop
inc
popa
cmp
adc
sbb
push
inc
out
dec
jns
popa
mov
lret
loope
insb
mov
cmpsl
test
pop
ds
enter
rorb
or
cmc
adcl
test
jl
adc
insb
sub
pop
std
push
and
outsb
adc
in
dec
adc
sbbb
pop
jl
mov
hlt
pop
stos
jne
lea
out
dec
shll
psllw
arpl
gs
push
add
jns
dec
test
lods
pop
or
mov
jp
adc
std
sbb
pop
daa
pop
lds
es
pop
inc
dec
pop
test
jae
cmp
cwtl
and
add
cmp
mov
jecxz
cmp
dec
stc
cmp
mov
pop
xor
push
cmpsb
cmp
add
dec
lock
out
cltd
sbb
int3
sub
inc
fcomi
neg
pop
inc
lods
movsb
mov
xor
xchg
fimuls
inc
adc
hlt
fwait
imul
xor
jle,pt
add
inc
and
bound
dec
mov
out
stos
mov
mov
cmp
xor
daa
sbb
jmp
js
sub
lock
mov
out
sub
dec
mov
jbe
rorl
mov
add
jle
lea
sahf
xchg
in
and
pop
jge
and
insl
incl
mov
mov
adc
mov
lahf
jne
std
mov
mov
adc
jnp
cwtl
and
jbe
push
in
ja
xor
and
or
and
rorl
lahf
ja
lds
outsb
add
cmp
popf
adc
imul
aad
pop
outsl
out
xor
shrl
dec
sbb
xchg
out
xchg
xchg
mov
jb
adc
sub
add
out
loope
mov
stos
out
das
mov
sbb
sbb
movsb
sbb
fwait
and
sbb
cmp
or
sbb
pop
sub
imul
fwait
xor
scas
inc
mov
aaa
push
call
test
and
cltd
sbb
inc
mov
shrl
sub
dec
mov
push
std
adc
loopne
sub
test
loopne
push
sub
or
jo
mov
or
ss
mov
add
popf
stos
or
and
int3
or
xchg
iret
sti
pop
es
mov
dec
mov
shrl
test
lea
dec
cld
cmp
inc
cmp
xlat
cli
xchg
imul
mov
aam
jnp
adcb
gs
cwtl
test
cmp
mov
jns
sbb
mov
mov
movsb
mov
push
pop
mov
fildll
cs
popa
je
add
xlat
sti
je
sub
das
loope
loope
push
cmp
rcr
xchg
xor
mov
mov
aam
mov
mov
fdivs
int
outsb
daa
sub
in
lahf
orl
rcrl
pop
sub
mov
pop
clc
mov
jne
scas
fcompl
and
repz
out
out
std
aas
iret
popf
adc
roll
sub
dec
rclb
popa
aas
xchg
lock
pop
dec
inc
loope
adc
mov
inc
loope
ja
jmp
fiaddl
xor
sbb
cmc
push
cltd
jns
pop
mov
xor
add
mov
adc
jmp
ss
ficoms
and
es
or
cmp
push
pusha
fdivrl
xchg
outsl
stos
mov
dec
adc
and
shll
xchg
lock
call
jle
mov
sti
out
sbb
adc
ja
mov
cwtl
or
in
sub
xchg
ds
ds
pop
and
inc
sbb
sbb
mov
xchg
mov
les
inc
add
movsb
xchg
mov
mov
or
jo
jg
pop
adc
cltd
mov
sbb
cmpsl
jp
add
xchg
cmp
enter
mov
stos
andl
nop
dec
mov
mov
pop
xchg
push
aam
dec
push
das
or
nop
shrl
xchg
pop
lock
ds
in
stos
imul
xlat
cli
pop
xchg
loope
jb
sub
mov
adc
arpl
and
xchg
sbb
cmp
lcall
js
xor
fcomip
lea
mov
mov
xlat
mov
adc
add
into
mov
lods
or
lcall
cmpl
xchg
addr16
mov
fdivrl
ret
popa
popf
or
dec
mov
imul
loope
insl
lret
and
lcall
shl
enter
and
pop
lahf
mov
inc
les
pop
or
jge
imul
mov
pop
cmp
fwait
push
rorb
xor
mov
or
inc
cmp
lock
test
das
lods
inc
mov
pop
push
je
in
je
mov
cmpsb
dec
std
jmp
mov
cld
xorb
stos
inc
push
dec
scas
imul
cmp
sar
aam
int3
clc
ss
adc
scas
and
cli
cwtl
lea
in
sarb
scas
xor
pop
pop
cli
cmp
jns
xchg
xchg
je
popa
add
mov
xchg
scas
jbe
lahf
jmp
shll
dec
pop
jo
push
mov
and
out
lods
lock
pushf
out
pop
xlat
call
ret
push
in
inc
es
cmpsl
fmull
out
mov
xor
mov
sub
daa
rcrb
test
xchg
cli
dec
mov
stos
lret
xor
cmp
xor
jp
cmp
jmp
push
rclb
gs
test
in
shl
shlb
jmp
std
daa
hlt
mov
in
jl
dec
fnstcw
dec
sub
repnz
dec
mov
pop
movsb
mov
call
ret
call
sbb
cs
mov
jp
cmp
lahf
mov
shl
push
popf
mov
sub
xchg
repnz
or
sbb
ficomps
mov
jno
ds
into
ljmp
add
xchg
push
fwait
sbb
fiadds
popf
ror
pop
daa
xchg
xchg
inc
data16
fcoml
or
popa
in
pop
rorl
pop
popf
insb
addr16
cmc
insl
clc
imul
pop
sbbb
adc
or
xchg
fnsetpm(287
inc
test
sbb
test
sub
daa
sbb
adc
jo
aad
mov
cli
ds
mov
mov
fcomp
add
loope
leave
lods
fdivs
dec
rorb
push
dec
xchg
repnz
in
in
adc
aam
mov
lea
ja
repnz
test
dec
and
leave
dec
adcb
jp
push
and
outsb
sarl
jmp
inc
inc
jp
pop
filds
pop
test
or
stc
or
insl
sahf
inc
movb
pop
int3
lods
gs
jnp
and
ret
add
adc
jbe
xchg
mov
xor
and
cld
xorl
push
mov
lahf
and
lods
sti
push
into
mov
sub
push
and
xor
imul
movsl
andl
mov
xor
lds
or
xchg
pop
inc
adc
outsb
pop
adc
lock
lods
ja
stc
dec
sub
dec
mov
xor
shrl
xor
outsl
movsl
addr16
cltd
jge
dec
data16
push
pusha
nop
xchg
daa
pushf
inc
test
sbb
movsb
jae
jge
pusha
mul
cmpsb
push
cmc
or
bound
jb
ffree
dec
mov
mov
stos
call
jmp
rorl
mov
xor
bound
lret
jle
cmp
fcomps
out
mov
or
mov
jne
repz
push
push
enter
sbb
push
neg
dec
pop
daa
mov
and
loope
pop
or
pop
pop
negb
aad
daa
loopne
inc
mov
mov
dec
cmpb
dec
xchg
pushf
cltd
inc
pop
mov
jb
mov
addl
xchg
cmpl
sahf
fisubs
pop
pop
add
push
add
mov
in
out
insl
jmp
aam
inc
insl
je
rol
and
test
mov
dec
xor
pop
sub
inc
pop
inc
dec
addr16
pushf
lods
icebp
sahf
sub
xor
repnz
testb
sub
lods
push
fdivl
out
aas
jae
lods
pop
jle
shlb
stos
mov
cli
shr
sub
dec
cmp
fs
enter
movsl
out
out
stc
int
cmc
ljmp
and
cmp
outsb
adc
outsb
jae
addl
das
and
sbb
imul
push
ds
in
add
mov
pop
arpl
dec
imul
push
notl
jecxz
xchg
jle
xchg
add
mov
adc
push
loopne
push
cmpsl
cmpsl
out
in
cltd
jae
pop
xlat
dec
or
pop
outsl
and
or
mov
fmull
leave
xor
jmp
or
dec
jne
stos
ret
dec
stos
xchg
bound
arpl
in
scas
or
in
push
sti
and
std
adc
negb
and
mov
lret
outsl
nop
xlat
pop
xor
aaa
ror
mov
mov
fwait
jmp
inc
cmp
push
enter
pop
cmpsb
aad
cmp
aam
mull
cmp
mulb
test
mov
in
mov
std
add
xadd
rorb
lods
int3
in
idiv
sbb
push
pushf
stos
mov
loope
orl
loop
shlb
loopne
es
pop
xchg
xor
sti
cmp
stc
xor
lcall
or
mov
xor
lret
pop
int3
push
dec
adc
out
sahf
adc
ljmp
adc
or
and
mov
out
mov
andl
sub
adc
lea
fldl
push
mov
sbbb
aam
push
bound
xor
test
inc
out
add
mov
xchg
cltd
pusha
insl
gs
xor
cmp
test
fsts
lods
add
push
stos
clc
popf
xchg
jp
cmp
outsl
xchg
ret
mov
pop
pop
scas
dec
shll
lea
repz
imul
add
jle
int
sahf
fisttpl
ds
insl
fsts
or
sarl
push
leave
jne
pushf
push
mov
fcoms
notl
in
lds
push
xchg
aad
add
out
ret
pop
mov
mov
fcompp
rcl
in
ret
ljmp
jnp
mov
jge
dec
xchg
popa
inc
jp
fwait
pop
mov
fsub
cli
test
mov
imul
inc
and
inc
leave
arpl
decb
dec
inc
aaa
add
addr16
rolb
mov
in
pop
pop
inc
dec
pop
enter
lret
shll
imul
addr16
mov
enter
pop
popf
pop
cmc
scas
and
stc
jp
xchg
cmp
aad
sbb
xchg
popf
das
les
fneni(8087
int3
add
cmp
or
adc
jmp
pop
pop
mov
xchg
and
dec
cmp
fsubp
mov
push
xchg
daa
out
add
adc
jbe
pop
sub
int
cs
pop
clc
sbb
std
inc
xchg
fcoml
pop
sub
add
cmp
addl
shlw
dec
or
hlt
jle
stos
cmc
sub
mov
xchg
cmpsb
sbbb
mov
lcall
jp
jecxz
mov
aad
pop
insl
rorb
jns
bound
and
es
pop
mov
dec
fsts
inc
xchg
and
jbe
fisubrs
aas
mov
stos
lea
pusha
xor
arpl
imul
cmp
xchg
lods
in
cs
dec
adc
cmp
fsts
fwait
xor
inc
xor
mov
sub
cmp
out
sbb
imul
mov
repz
lock
sub
leave
sub
adc
xor
jle
or
loope
or
icebp
loopne
lcall
xchg
jge
mov
imul
repnz
rolb
je
sub
out
dec
into
adc
out
push
push
lock
arpl
insb
cmp
mov
sub
jge
pushf
cmp
fistpl
xor
out
and
into
roll
mov
lahf
sbb
cld
push
sbb
rcrb
cmp
imul
ss
mov
imul
or
pusha
xchg
sbb
stc
push
cmp
iret
fisubrl
je
push
imul
mov
jg
jns
lock
and
cmp
ljmp
add
aas
xor
stos
cmp
filds
test
out
adc
mov
outsb
int3
add
adc
and
push
sub
inc
outsb
notb
lock
addr16
in
cmp
inc
out
and
hlt
sub
loop
ja
int
mov
scas
mov
adc
movsb
pop
inc
cli
fstpt
jne
push
xor
jo
xor
daa
into
call
xor
mov
dec
movq
cwtl
cmp
pop
cmp
stos
in
add
les
enter
pop
sti
add
push
scas
adc
lea
jne
shll
cmp
movsl
movsl
mov
das
or
scas
in
les
lea
sti
mov
insb
push
test
or
lret
jne
jge
xlat
std
mov
push
xchg
push
sub
and
lds
in
cmp
xor
lahf
lods
rol
mov
mov
jge
arpl
and
dec
xorl
mov
add
sub
mov
data16
xchg
inc
iret
mov
imul
pushf
lods
sub
adc
ja
push
add
imul
lods
or
cmp
xchg
sahf
sbb
add
jmp
mov
notb
inc
ss
and
adc
sbb
es
add
popa
cmp
mov
jmp
aad
jl
jne
int3
and
and
popa
mov
enter
inc
ljmp
lret
dec
jb
ret
ljmp
pop
test
jnp
cmp
inc
repnz
stc
dec
dec
mov
mov
fnsave
icebp
sbb
sub
pop
add
sub
js
xor
test
mov
inc
lods
mov
leave
in
in
cmpsl
jno
js
mov
loopne
inc
mov
and
sub
fincstp
mov
scas
pop
and
push
dec
xor
push
cmp
fdivrp
jbe
cmp
hlt
mov
cmpl
mov
aaa
dec
mov
lock
fsts
xchg
stos
jnp
and
cmp
mov
push
popf
mov
mov
rolb
dec
fs
xor
gs
push
insl
cmpsl
push
mov
shl
mov
dec
insb
adc
pusha
mov
mov
dec
lds
stc
jl
jb
inc
sbb
dec
push
gs
or
jae
xchg
add
ret
bound
add
sub
inc
push
sub
out
sub
pop
mov
addl
enter
jbe
sbb
xchg
jo
inc
sbb
and
sub
in
add
mov
fwait
or
xlat
call
mov
lret
sub
ret
add
ss
aaa
daa
in
dec
inc
jl
xchg
ds
in
cmp
mov
lea
mov
or
pop
pop
xor
cmp
sti
ficomps
cmpl
int3
lea
adc
mov
je
shufps
dec
cs
addr16
hlt
bound
add
cmp
cmpsl
or
popa
fidivrs
adcb
sbb
pusha
cmp
add
push
mov
ret
mov
repnz
mov
arpl
enter
inc
jo
xor
dec
dec
jmp
jle
cld
sbb
xchg
cmpsb
sub
mov
loop
or
popf
icebp
or
adc
clc
jno
mov
enter
sbb
insb
mov
sub
and
xchg
push
fisttpl
stos
mov
out
ret
ja
push
gs
addr16
pop
repz
inc
xchg
xor
hlt
push
jae
mov
sub
daa
lahf
jne
adc
hlt
out
push
ret
add
push
pop
clc
xor
andl
or
push
ja
sbb
popa
jl
inc
shlb
loopne
push
mov
iret
push
mov
push
aam
mov
test
ret
call
enter
xor
sub
in
fiadds
sub
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
mov
out
fnstenv
fists
mov
and
adc
jb
push
sub
mov
in
mov
jns
aam
test
psubb
xor
ficomps
lret
inc
cli
cmp
or
adc
sub
mov
sbb
inc
adc
and
es
sbb
push
scas
imul
sbb
std
dec
sub
sbb
bound
mov
inc
nop
adc
inc
sub
sbb
add
xchg
add
shl
mov
and
push
test
mov
ret
sub
das
ljmp
jle
mov
pop
cmp
jbe
test
push
jno
daa
rorl
inc
fimuls
bound
push
mov
pop
mov
in
loop
cmp
xor
mov
pop
mov
outsb
dec
imul
cmpsb
stc
xchg
jg
dec
andl
jecxz
mov
cmpsl
rcrb
ss
mov
add
cli
sbb
pop
push
adc
mov
pusha
lds
jg
add
fdivrs
jmp
fdivrl
loope
sahf
lods
push
mov
mov
bound
sub
addl
add
cmp
cmp
mov
and
and
dec
popf
mov
mov
add
cmp
dec
mov
adc
in
xchg
std
mov
lock
movsl
inc
push
and
pop
aam
stos
cmp
sub
pusha
pusha
stos
sub
pop
inc
add
jbe
enter
sbb
mov
mov
and
and
pop
ret
inc
lret
xor
fdivrs
mov
inc
cmp
adc
bound
jno
repnz
mov
push
inc
loop
incb
out
cmc
dec
repz
shrl
incb
cmpsl
push
cmp
and
sub
aam
rorb
fdiv
pop
push
stos
or
and
mov
xchg
or
call
xchg
sub
fdivl
inc
push
cmp
jecxz
arpl
add
push
bound
jbe
mov
xchg
xor
mov
mov
sbbl
repnz
inc
mov
insl
movsb
and
test
test
sti
sbb
or
icebp
push
inc
and
aas
aam
jmp
cs
lds
sub
adc
pop
testb
add
leave
mov
xor
xchg
xor
adc
mov
mov
cmc
jbe
ficomps
inc
fwait
lret
sub
push
shl
mov
pop
cmpsb
sub
pushf
je
jmp
jp
lds
jo
dec
sbbl
adc
inc
push
cld
and
push
loope
cmp
jp
adc
sahf
das
inc
mov
ja
jle
mov
in
pop
jne
sub
jo
in
jo
int3
ja
and
scas
ss
fstpt
xor
test
jecxz
sub
cltd
repz
popl
imul
xchg
xchg
daa
dec
mov
sbb
shrb
jo
cmp
cmp
test
mov
ja
mov
lock
popf
cltd
add
adc
mov
jmp
cmp
mov
icebp
add
sbb
pop
rclb
sbb
push
int3
inc
testl
cltd
dec
ret
jo
cwtl
ret
inc
cmp
mov
mov
mov
lret
xchg
or
enter
push
pop
shrl
dec
ljmp
mov
mov
stc
in
sbb
aas
inc
aam
adc
mov
subb
or
sti
leave
cmp
or
daa
sub
loop
xchg
adc
sti
sub
inc
data16
pop
mov
mov
mov
outsl
lods
jmp
fstl
scas
les
loope
in
shl
loop
jl
cmpsb
lret
dec
or
jp
inc
jmp
outsl
cmc
push
lcall
xorb
mov
push
xchg
in
iret
imul
xlat
cs
ret
inc
xchg
xor
xor
cmp
pop
jp
das
jge
ss
inc
mov
push
es
test
pop
outsl
mov
push
ss
movnti
fisttps
jle
movsb
jb
jbe
outsl
test
andb
pop
stos
cmpb
repz
xchg
push
outsb
fwait
pop
xchg
inc
ds
xchg
call
sahf
sbb
jle
popf
nop
xchg
stc
outsl
loopne
das
movsb
sub
mov
push
scas
test
shll
out
jl
ror
mov
mov
movsl
jge
ss
repnz
cld
andb
lods
and
and
xor
xor
xchg
xchg
icebp
and
sarb
dec
mov
sub
mov
fisubs
add
push
xchg
addr16
das
or
fimuls
jl
popa
jge
in
cld
rcll
mov
in
push
mov
es
daa
push
push
stos
ja
pop
or
lea
out
and
and
ret
call
jmp
test
es
lds
addl
in
and
push
mov
xchg
call
addb
int
cld
sub
sub
pop
jle
and
sub
mov
fcompl
xchg
out
sbb
mov
xlat
ss
xchg
jp
fdivrl
or
add
pop
push
enter
add
fbld
pop
sbb
sub
fmul
dec
lahf
jge
leave
push
jb
pop
ljmp
cs
push
sti
scas
push
cmpsb
test
out
icebp
lods
xchg
in
mov
push
inc
push
xchg
ljmp
mov
rol
mov
and
fnsave
cmc
aam
mov
int3
fldcw
notb
mov
jp
lea
push
stos
mov
pop
mov
dec
sbb
push
ficomps
jmp
dec
push
dec
repz
or
fdivs
xor
cltd
or
sub
ss
push
mov
mov
inc
clc
insl
mov
push
dec
xchg
and
jp
testb
xor
dec
inc
and
std
mov
cmpsb
push
sar
xor
fpatan
insl
inc
ret
push
jns
aaa
dec
and
cmp
ja
mov
xor
jae
or
mov
hlt
xchg
pop
push
mov
dec
sti
xor
push
push
dec
lock
adc
push
inc
add
pop
loopne
cld
pop
dec
into
test
test
test
push
push
jmp
pop
jp
lret
adc
lcall
push
fsubs
aad
push
cmp
arpl
push
imul
data16
mov
add
xor
test
inc
cmpsb
ror
dec
add
dec
rcrl
loop
pop
push
enter
jns
popa
sub
movsb
lds
push
cmp
fdivs
aaa
je
sub
int3
add
in
cmc
lret
sbb
mov
fstp
sbb
les
jae
loope
pushf
outsb
and
push
lcall
jns
xchg
pop
cmpsl
leave
mov
fstpt
xchg
jge
iret
insb
iret
xor
and
dec
push
test
mov
inc
jbe
jae
sub
sbb
sbb
leave
push
cmp
xlat
jo
xchg
pusha
fwait
sbb
xchg
roll
repz
mov
stos
mov
sub
adc
clc
test
adc
mov
aad
mov
nop
orl
xor
imul
clflush
jg
insb
mov
mov
sbb
out
stos
insl
ret
insl
or
ds
filds
push
fxch
mov
push
fs
aam
js
push
sbb
mov
mov
push
lret
jle
cmpsl
inc
mov
enter
arpl
ret
outsl
dec
neg
add
cmp
nop
insb
sub
push
pop
add
jne,pn
jl
fcmovnb
cmp
loope
and
hlt
jbe
popa
xchg
inc
out
stc
add
int3
mov
inc
js
and
leave
mov
ret
mov
mov
stos
movsl
fisttpll
pop
mov
xor
mov
ss
pop
sbb
imul
in
das
push
or
les
mov
mov
jo
ret
popa
lahf
stc
pusha
or
cmp
cmc
and
lret
ljmp
push
xchg
mov
and
lea
pop
lcall
unpckhps
push
pop
insl
fs
rcrb
out
and
jl
jbe
push
jge
and
test
rcrb
or
pop
int
add
push
gs
mul
mov
pop
jmp
repnz
popa
pop
clc
lea
mov
inc
into
mov
pop
mov
divb
push
push
imull
pop
test
mov
adc
add
aas
pusha
mov
adc
xchg
cld
ds
clc
in
xchg
rcll
dec
cmpsl
pop
add
or
and
lods
sbbl
clc
jns
je
inc
imul
jae
dec
addr16
xor
mov
in
push
repz
lea
mov
pop
pop
inc
or
in
popa
repnz
or
xchg
lods
dec
dec
pop
test
movsl
cmp
shlb
enter
mov
xchg
imulw
add
adc
clc
sahf
scas
mov
and
loopne
sub
arpl
add
in
xchg
mov
and
pusha
add
mov
and
sbb
push
xchg
pop
push
shr
cmp
inc
sub
jnp
cli
push
jmp
sbb
pop
sub
or
mov
cmp
push
outsl
jno
dec
push
cmp
cwtl
dec
movsb
jb
mov
scas
inc
rcrb
mov
sahf
mov
fldl
or
push
sbb
loop
add
ja
std
cmpsl
out
lods
xor
mov
and
inc
mov
leave
cmp
sbb
ljmp
jne
cmp
hlt
push
loope
adc
sbb
scas
mov
les
ljmp
fists
push
adc
push
lods
gs
dec
lret
ret
rcll
push
test
xorb
xor
loop
adc
cmp
shll
cmp
pop
and
ds
jno
adc
enter
push
mov
je
sbb
dec
xor
lods
push
xor
rcl
nop
addr16
xor
xor
xor
push
cs
out
mov
scas
mov
sahf
bound
mov
cltd
fidivl
or
subl
or
cmp
and
out
jp
pop
mov
imul
in
lahf
arpl
dec
in
pop
aaa
and
loopne
out
mov
jp
jmp
and
pushf
cvtps2pd
test
aaa
lret
dec
out
mov
inc
dec
cwtl
bound
push
dec
adc
cltd
push
inc
inc
xchg
sub
xchg
push
cs
dec
shll
and
add
aam
push
mov
mov
inc
push
sub
in
out
cmp
cmp
repnz
dec
xchg
pop
out
int3
std
das
es
int3
ss
inc
xchg
imul
add
insb
mov
loop
dec
data16
in
sub
fnstsw
dec
dec
pop
xor
inc
sub
sub
or
outsl
aad
sub
or
xchg
push
inc
xor
flds
adc
and
movsb
push
jge
in
dec
addr16
lock
cmp
call
filds
xchg
xchg
ss
inc
cmp
aaa
pusha
mov
cld
push
fs
or
xchg
and
sbb
insb
out
pushf
arpl
lret
shll
in
mov
push
jle
sub
jmp
inc
std
mov
mov
inc
rcrl
loope
mov
lock
addr16
pop
les
or
cld
stos
lea
popf
pop
mov
iret
or
push
pusha
sahf
push
idivb
sub
xchg
or
hlt
in
in
xchg
inc
repnz
loopne
lods
lret
addr16
sub
sub
lret
sbb
jns
jmp
jge
mov
out
pop
jb
xorl
push
pop
sbb
mov
fsubs
ss
sbb
or
icebp
mov
push
and
inc
inc
push
add
les
xchg
scas
and
outsb
push
adc
jmp
and
leave
fs
sub
or
mov
subl
pop
rolb
movsl
imul
cmp
test
and
loop
rcrl
mov
jmp
jmp
into
mov
cwtl
mov
scas
push
mov
or
dec
jnp
mov
inc
add
pop
xor
cld
out
scas
jnp
iret
insl
roll
loope
inc
inc
mov
sub
jo
sbb
mov
jecxz
testb
pop
popa
cli
sbb
sbb
or
add
pop
or
xchg
mov
mov
mov
popa
jo
mov
push
imulb
popa
mov
xor
push
push
shlb
loopne
inc
inc
lret
int3
add
xchg
cld
jg
inc
sbb
in
sub
fwait
mov
adc
pusha
shlb
das
add
test
call
aad
adc
dec
lahf
add
mov
dec
dec
jmp
or
mov
lahf
cwtl
aaa
imulb
dec
jne
repnz
loopne
dec
stos
or
roll
pop
sbb
aas
js
cltd
ret
push
sbb
shrl
leave
mov
lock
rcrl
jae
add
and
cs
cmp
mov
push
test
test
loope
fists
add
xor
das
test
xor
inc
jno
jg
and
in
mov
ljmp
jle
pop
test
add
sbb
fildll
shll
mov
or
jno
inc
mull
xchg
inc
add
xchg
repz
mov
sub
or
testl
mov
cmc
cltd
sbb
jnp
gs
pop
push
jb
xor
adc
out
cmp
push
inc
mov
test
fucomi
ljmp
jo
push
push
mov
ficoml
xchg
and
lock
loope
mov
or
fnsave
mov
mov
mov
ljmp
test
mov
test
aas
mov
mov
insb
xor
adc
mov
or
and
loope
pusha
push
enter
jp
pop
mov
daa
sti
add
jg
jle
cmpsb
aas
ja
and
jae
les
sbb
dec
add
gs
pop
lock
and
xchg
cltd
daa
out
lds
out
pop
add
push
sub
pop
outsl
pushf
daa
xchg
and
movsb
in
or
pusha
cmp
mov
lock
loop
mov
sbb
sbb
add
or
inc
mov
or
sub
lods
push
ss
push
popf
loop
adc
into
les
xor
js
push
cmpsb
loop
mov
shlb
xchg
shl
fwait
pop
jg
insb
leave
jmp
adc
jne,pt
xchg
rorl
int
inc
xchg
bound
xchg
arpl
ss
test
jecxz
imul
mov
add
push
in
ds
mov
cld
pop
jno
call
sub
mov
or
popa
rclb
adc
xchg
sub
test
ss
adc
stos
add
filds
pop
xor
mov
sbb
sbb
outsl
mov
pop
popa
dec
lock
mov
jnp
daa
daa
imul
jae
xchg
mov
js
adc
or
cltd
daa
add
push
push
imul
ja
enter
repnz
xchg
je
fwait
imul
ja
push
jecxz
arpl
lods
cli
push
xchg
sbb
insl
lock
sub
push
jl
cmpsl
fs
cmpsl
shr
lds
jmp
repnz
pop
cmp
cmp
subl
mov
xchg
je
mov
xchg
inc
cwtl
push
or
stos
jno
mov
mov
js
pusha
fcmovne
cld
fwait
jg
orb
add
cltd
std
subl
pop
jno
mov
arpl
push
lods
mov
jb
jge
xchg
lock
cli
jle
movsl
scas
pop
lods
cmp
mov
aaa
adc
and
mov
sub
mov
pop
add
jl
popf
inc
mov
jle
fimull
mov
inc
inc
fcoms
push
cmp
xchg
outsb
or
add
inc
repnz
dec
pop
popa
scas
ss
and
sub
imul
jg
negl
daa
int3
mov
sub
xchg
lea
test
inc
gs
xchg
rclb
xchg
mov
add
mov
aas
insb
and
jmp
cmpsl
mov
imul
mov
or
leave
xchg
dec
fiaddl
jle
xor
repnz
add
out
jbe
add
dec
mov
cmp
mov
out
test
pop
std
sub
sub
jge
lcall
fdivrl
add
xchg
outsb
pop
mov
xor
int3
popa
jp
daa
mov
or
xchg
xor
ja
xor
xor
ficoms
cmc
dec
stc
jbe
sub
bnd
cmpsl
push
push
push
fisubrs
sar
push
jmp
mov
out
jecxz
fistpl
and
mov
or
dec
test
push
sub
push
dec
jb
mov
std
push
or
or
loop
ds
ret
int
mov
xchg
jnp
cwtl
mov
sbb
negb
mov
stc
ja
jg
mov
in
ret
pop
or
push
aas
lret
lret
dec
sub
push
pop
icebp
icebp
and
add
pusha
stc
stc
jne
fisubrs
cmp
idivb
sub
imul
adc
icebp
push
jns
cld
out
pop
push
outsb
mov
mov
add
sbb
jns
add
mov
dec
jno
data16
les
mov
outsl
gs
lahf
neg
add
jnp
fs
mov
adc
popf
and
fistps
or
jle
sub
scas
mov
cmc
jecxz
aad
sti
sub
shll
fildl
mov
mov
cmp
jecxz
addr16
jae
adcb
sub
out
les
imul
xor
pushf
add
and
test
mov
jns
cltd
jecxz
push
les
lret
ret
inc
loope
jbe
mov
sti
mov
mov
push
movsb
adc
inc
xchg
xor
lahf
fstl
cmp
push
movsl
lahf
cmc
lret
adc
xor
enter
inc
xchg
es
popf
or
out
push
nop
add
pop
cwtl
sbb
rolb
adc
add
cmp
push
xor
div
and
into
fucomp
xchg
sbb
mov
repz
push
xor
push
repz
push
addr16
push
xor
jecxz
sahf
int3
dec
xchg
test
jl
push
fidivrl
pop
test
xor
or
add
imul
add
ret
mov
bound
pop
and
arpl
jnp
cmp
fdivrp
xchg
out
fwait
jne
in
lcall
adc
aam
or
inc
repnz
xchg
cmpsb
cmpsb
test
pop
dec
sub
loopne
mov
mov
sub
pop
imul
cmpsb
insb
fldenv
std
in
mov
nop
mov
sub
or
sbb
test
imul
mov
jl
jb
jo
mov
jae
stos
mov
out
sub
cmpsb
aad
or
jmp
xor
pop
rclb
das
orb
lret
les
lock
mov
inc
clc
lds
mov
mov
stos
das
sahf
repz
xor
pop
sub
fisttpl
shll
adc
push
jbe
cmp
mov
out
mov
mov
pop
test
call
js
xchg
and
scas
jb,pt
xlat
pop
xor
jae
cli
pop
shll
flds
stos
pop
cmp
hlt
jae
decl
sub
in
nop
mov
add
jno
cmp
das
sbb
pop
popl
mov
int
test
hlt
sbb
adc
hlt
outsb
leave
lea
mov
push
mov
fadd
push
mov
mov
daa
inc
js,pn
dec
dec
adc
mov
push
push
pop
lea
test
add
mov
mov
fstpl
imul
lods
fcoml
stos
push
push
xor
mov
call
push
lods
xchg
imul
xchg
and
es
ljmp
add
mov
xor
shll
or
cmc
jns
jae
daa
aad
cmp
scas
and
mov
sbb
ficoml
mov
and
lock
mov
xor
sbb
fsts
mov
inc
cltd
nop
fcomi
orb
push
shrl
loope
mov
mov
popa
adc
dec
lcall
cmp
arpl
sub
arpl
push
cmp
inc
mov
and
rcll
fwait
jmp
inc
mov
push
sub
push
inc
faddl
out
addr16
mov
push
xchg
pop
push
mov
fbstp
xor
inc
cmp
pusha
aas
sbb
push
push
repz
test
outsl
xor
push
ljmp
or
push
xchg
add
xchg
fisttpl
fwait
out
lods
stos
jnp
fmull
call
xorl
aaa
into
addr16
insb
push
jl
or
xor
aad
add
mov
div
xchg
out
mov
dec
mov
fcomps
outsl
pusha
xor
js
jge
jb
pop
push
jge,pt
cmp
lock
ja
dec
sbb
mov
repz
mov
push
fistps
mov
inc
sbb
sub
adc
jbe
xchg
ja
xor
jl
adc
int3
push
mov
pop
in
push
adc
jmp
negb
popf
jp
pop
aaa
ds
iret
push
and
ret
in
loop
mov
jno
mov
inc
jle
adc
in
in
push
push
xor
or
sub
xchg
xor
pop
sbb
inc
shll
xchg
pusha
aad
bound
xor
mov
jo
mov
pop
pop
pusha
inc
aad
das
cmp
leave
repz
jnp
mov
and
mov
fwait
and
push
sbb
jecxz
and
mov
sti
insb
adc
shr
std
push
ret
pop
aam
xor
enter
inc
push
push
aas
jns
or
xchg
dec
insl
mov
xor
ljmp
movsl
add
stos
mov
and
mov
xlat
push
push
int3
or
popf
imul
sbb
movsb
subl
or
add
dec
inc
mov
mov
jg
cld
jl
lret
sbb
call
and
cmp
repz
dec
sub
pop
xchg
xor
push
sbb
jb
or
fdivs
cld
and
leave
cmpl
mov
cmp
dec
into
pop
rcr
fisubrl
lahf
imul
push
fnstcw
adc
xchg
add
dec
aam
inc
enter
imul
ja
pop
fiaddl
xor
xor
repz
in
mov
cltd
popf
adc
lods
cwtl
mov
or
xchg
lods
ror
addl
sti
leave
xorl
dec
movsl
decl
test
mov
mov
dec
in
jp
push
push
add
sub
int3
or
add
lea
and
loopne
and
ljmp
stos
test
sub
push
pop
push
xchg
cli
imul
ss
jne
or
cmp
sub
pop
jg
arpl
sarb
aam
xchg
pop
xchg
cmp
push
jle
push
sbb
adc
imul
ds
sbb
into
repz
cmp
xor
add
clc
pusha
and
push
int
push
orb
inc
mov
mov
lea
nop
or
mov
ret
dec
popf
dec
jno
xor
mov
adc
xchg
fdivl
cmp
enter
fcompl
mov
enter
fs
imul
adc
inc
sub
xor
push
or
in
add
push
pop
xorb
add
xlat
sarb
movsl
fcmove
inc
cwtl
bound
es
pop
push
inc
pop
in
cs
fnstsw
in
in
dec
inc
push
sub
push
push
mov
inc
pusha
adc
out
pop
or
fsubrp
fsubrl
sub
inc
cmp
mov
sbbl
sub
mov
int
insl
in
pop
pusha
loop
xor
insb
push
pop
and
xor
mov
call
ja
fildll
xchg
mov
int3
jnp
les
xor
stc
data16
lret
iret
xor
pop
xor
add
xchg
rcrb
addr16
mov
pop
mov
mov
arpl
mov
xchg
ss
sub
or
sub
or
sarl
ret
pop
std
fcmovnu
dec
mov
pop
imul
or
xchg
jne
in
mov
dec
push
insb
cmp
std
xor
xchg
add
pop
jle
pushf
decb
loop
in
ret
icebp
add
clc
lret
xchg
xchg
or
push
test
mov
or
pop
mov
jl
sti
lcall
mov
out
loop
adc
in
mov
xor
jno
int
pop
adc
xchg
int3
sbb
xchg
dec
pop
push
fidivrs
iret
push
jl
lss
rol
mov
nop
std
and
and
hlt
inc
add
shrb
mov
sti
push
mov
repnz
add
in
das
pop
mov
in
add
loop
inc
sub
jb
or
subl
inc
cltd
mov
dec
lea
push
jbe
dec
fs
ficoml
cmp
das
mov
push
sbb
lret
xor
pop
mov
add
cwtl
dec
into
pushf
cmpsl
int
lea
push
std
sub
mov
sbb
cmp
xor
push
lret
popf
ret
in
push
dec
ds
xchg
mov
aaa
and
pop
pop
pusha
es
dec
inc
mov
mov
insl
mov
pop
pusha
popf
out
pop
cmp
daa
mov
andl
outsb
xchg
adc
les
pop
je
in
lea
ret
cwtl
add
cli
aas
inc
fisubs
xlat
lret
imul
push
sbb
loop
out
outsb
int
pop
sbb
push
hlt
adc
pusha
or
je
enter
addl
mov
xchg
dec
mov
int
push
jp
cmpsl
test
addr16
sbb
fsubrl
cmpsb
lods
mov
stc
js
cmp
xor
mov
xchg
cmp
notl
sub
ret
mov
jbe
jo
clc
pop
outsb
cmpb
icebp
add
and
or
jp
mov
sbb
push
mov
cmpsb
xchg
jbe
sub
jle
dec
and
cwtl
loope
stos
scas
fs
loope
sar
stos
adc
push
and
fs
pop
fpatan
fcom
add
xorb
pop
cld
jno
inc
add
fistl
mov
pop
push
dec
aaa
mov
jnp
out
dec
iret
fimull
test
fisubs
mov
roll
xor
adc
cs
and
jb
dec
inc
mov
and
pop
mov
xor
popf
fwait
cmp
scas
popf
dec
xor
test
arpl
and
xor
sub
shl
orb
lcall
add
dec
pop
loop
insb
adc
mov
mov
dec
push
clc
pop
jecxz
scas
mov
xor
and
shlb
aad
out
hlt
mov
and
stc
shlb
inc
sub
clc
jne
inc
sbb
inc
bound
or
pop
mov
or
pop
out
shlb
dec
fstps
add
shlb
adc
push
neg
mov
push
jae
cmp
sti
fdivrl
jmp
js
fcom
lock
dec
xchg
ljmp
cmc
dec
das
jae
cli
sub
xchg
cmpsl
xchg
cmp
in
jb
jg
loopne
and
mov
push
std
nop
push
push
sti
mov
fstpl
mov
es
push
or
bound
lea
shrl
xchg
lcall
fcos
daa
je
cmp
dec
sarl
mov
sub
xchg
insb
fsubrl
push
jge
jmp
sbb
stos
cmp
push
in
pop
repz
test
adc
insb
aas
andb
lcall
jbe
push
jbe
dec
add
dec
jmp
jl
mov
pop
mov
inc
push
inc
cmp
add
push
or
mov
pop
lret
xchg
iret
mov
adc
jo
arpl
mov
int3
aam
push
jecxz
nop
push
ret
push
fstl
xchg
lret
in
push
xchg
outsb
stc
cmovge
sub
clc
xchg
jo
mov
cmc
jbe
ljmp
xor
cwtl
xchg
jle
inc
mov
outsl
add
mov
xor
xchg
stc
pop
popf
fildl
adc
sahf
push
mov
jecxz
cmp
cmpl
setno
hlt
xchg
ss
mov
jnp
int3
gs
lcall
dec
in
iret
or
sub
test
cli
push
cmp
ficoml
and
mov
cmp
pusha
push
xor
sti
ret
xorl
mov
int
in
sbbl
pushf
ljmp
aam
jle
leave
or
fdivr
ljmp
mov
aam
sbb
push
jno
push
push
mov
cli
mov
pop
dec
ljmp
scas
addr16
adc
sub
repnz
jae
inc
and
dec
in
lahf
push
or
scas
lods
lods
nop
pusha
dec
shll
adc
popf
sahf
icebp
lcall
ret
xor
xor
cli
cmpsb
fwait
add
dec
shrb
push
inc
sbb
inc
test
jns
movsb
cltd
jnp
insl
bound
pop
cld
in
insb
sub
mov
sbb
jmp
cmp
or
jge
xchg
pop
jno
mov
daa
dec
mov
xchg
sub
std
leave
ret
jno
add
fs
xchg
sub
push
mov
pop
fsubl
aas
jl
ret
aad
nop
pop
negb
adc
dec
int
inc
xchg
inc
fsubl
adc
xchg
call
dec
subl
mov
mov
inc
mov
pop
inc
sub
mov
outsb
aad
push
sub
dec
je
rcrb
loope
add
inc
insl
sbb
icebp
ret
std
enter
in
sub
sub
push
iret
fistps
icebp
mov
jg
or
dec
cmp
or
push
decb
mov
or
push
fcompl
push
xchg
cmp
out
hlt
pop
aad
mov
xorl
inc
dec
sbb
push
sub
mov
jl
in
lcall
xor
in
add
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
and
push
jl
jmp
jl
dec
inc
xor
fimull
loope
insb
jo
mov
pop
aam
lds
mov
dec
or
xor
enter
fs
jno
and
jb
je
pushf
bound
push
sbb
insl
xchg
lods
inc
push
fbstp
mov
pop
cli
aam
dec
ret
mov
jle
adc
xchg
clc
aad
outsl
mul
sbb
jae
mov
add
sbb
outsl
fwait
cmp
mov
cs
les
cld
mov
xor
jp
mov
sbb
icebp
inc
andb
rcrl
cld
inc
lret
lahf
add
mov
mov
mov
pop
adc
cmp
icebp
aaa
dec
dec
mov
cmp
insb
lods
stos
and
fwait
mov
xor
rcll
shll
jns
and
cmp
fistl
int3
ret
scas
lods
sbb
insb
ljmp
xchg
jp
sti
test
pop
or
push
dec
push
jns
xor
pop
jbe
jne
sub
pop
xor
inc
push
jns
inc
inc
test
imull
pop
pop
inc
stos
jbe
divl
inc
es
fisubrs
stos
shll
jecxz
call
into
cmp
call
mov
jge
or
sti
mov
or
pop
pop
negb
add
push
aas
out
adc
dec
aam
fisubrs
leave
dec
push
mov
lods
jp
pop
cmp
push
jbe
outsl
mov
cmpsl
add
sbb
sub
jne
inc
and
add
pop
adcb
repz
push
jnp
pop
cmp
cld
push
stos
mov
adc
mov
sbb
mov
das
es
mov
loopne
cmp
les
mov
cs
push
inc
jge
or
lods
mov
and
repz
pop
jo
and
jmp
ret
cltd
rorb
inc
push
inc
ret
bound
hlt
or
lds
sbb
rclb
mov
add
adc
mov
call
push
sub
pushf
fstl
mov
add
jo
add
adc
mov
push
adc
dec
lock
push
mov
notb
jo
push
sbb
mov
dec
lahf
les
and
cs
inc
dec
mov
mov
add
xchg
stc
xor
pop
cwtl
adc
mov
adc
xchg
call
mov
mov
cmp
cmp
or
mov
xor
out
cmpsb
pop
int
in
xchg
inc
icebp
stos
pop
sub
sbb
shll
dec
test
sbb
aad
xor
cmpsb
jae
sbb
notb
mov
ret
aas
or
mov
int3
mov
sbb
add
jp
icebp
push
add
test
lcall
mov
out
jl
pop
mov
fidivrl
sbb
faddl
in
scas
stos
shll
mov
xor
mov
pusha
cltd
addl
rorb
or
mov
jp
nop
lret
jg
dec
out
push
cmp
xor
pusha
sub
addl
fisubs
pause
std
mov
and
jmp
and
adc
lods
xor
xlat
pop
mov
sbb
or
mov
arpl
sub
push
jle
fdivl
repnz
sarb
cmp
scas
mov
xchg
mov
shrl
aam
dec
push
sub
push
xchg
loop
jle
jp
andb
in
pop
jns
in
outsl
mov
jg
ficomps
xchg
sbb
in
std
in
push
jp
je
dec
pop
xchg
fwait
add
lret
insl
sbb
mov
stos
mov
leave
pop
xchg
pushw
test
gs
repz
lods
inc
lret
sbb
js
mov
cmp
ret
and
cmp
pusha
adc
adc
lods
mov
sub
jbe
jns
sub
or
push
lret
movsb
icebp
in
lods
add
lods
fildl
add
xor
and
add
stos
add
jge
jmp
cli
mov
push
js
add
stos
das
cmpsb
ja
mov
inc
out
fxch
ftst
aam
adc
das
gs
inc
xchg
xor
fldt
lds
lret
cli
fnsave
popf
lods
sbb
faddp
jl
jnp
sbb
push
adc
out
pop
add
pusha
fcoms
sahf
jp
das
scas
cld
mov
mov
lea
in
ss
aas
cs
pop
cmp
test
push
and
xor
pusha
pusha
sub
mov
aaa
jae
lds
push
mov
xor
ljmp
inc
mov
pop
mov
clc
mov
int
neg
add
ss
ret
or
jo
cltd
add
and
icebp
pop
frstor
mov
jo
sub
sub
gs
sti
jo
xlat
ja
jbe
inc
adc
push
cmp
pop
insl
push
cmpsb
iret
jne
dec
ret
sarb
movb
pop
jge
xchg
repnz
scas
or
push
loope
rcrb
shll
push
push
popl
mov
xchg
daa
sbb
push
add
hlt
adc
aaa
jbe
mov
xchg
call
ljmp
or
sahf
xchg
lods
add
push
xchg
fucom
test
inc
mov
push
jo
xorb
jl
lret
pop
mov
xchg
fs
pushf
rcrl
jb
mov
adc
and
fwait
les
cmpsb
insb
dec
bound
push
orb
fidivl
sti
cmp
mov
adc
imul
and
sbbl
mov
fisubrl
ja
jnp
inc
adc
adc
in
hlt
or
in
mov
or
xchg
jle
pop
gs
push
sbb
cmp
mov
or
or
dec
sub
inc
and
daa
sub
pop
push
std
add
sbb
lock
cmp
mov
jge
xchg
jo
mov
mov
mulb
add
push
cmp
sbbb
cmpb
jne
push
sbb
pop
lahf
jbe
in
outsb
or
pop
scas
or
pop
fcompl
xchg
inc
pop
mov
add
rcr
aad
add
mov
lcall
divl
rolb
imul
and
cmp
popf
enter
push
stc
push
push
push
mov
push
fldt
adc
int3
pop
call
mov
in
cmp
jg
scas
push
and
ficompl
mov
icebp
pop
push
mov
mov
xbegin
cmp
fdivrl
test
lock
loop
ljmp
xchg
and
cmp
aaa
loope
pusha
jl
imul
mov
nop
insl
outsl
pop
xchg
sbb
adc
lds
gs
lret
bound
loopne
gs
mov
add
push
jo
ss
fcmovnbe
out
cmp
shr
inc
dec
dec
arpl
sub
adc
mov
ret
or
mov
jae
push
popa
sahf
fisttpl
data16
push
out
ficomps
adc
cmc
arpl
insb
xchg
jae
outsl
mov
les
lock
hlt
mov
xor
sub
xor
enter
nop
xchg
fists
mov
push
mov
xchg
daa
cmp
cmpsl
aad
xor
ss
add
jl
mov
adc
mov
popf
dec
mov
cmp
ror
leave
sub
fldenv
std
xor
notb
scas
mov
in
mov
sub
insb
jb
xchg
jnp
cmp
or
push
ret
jmp
repnz
cmp
lock
xchg
imul
outsb
jmp
push
xacquire
rorb
push
fldl
cmp
test
sbb
jb
fisubrl
lcall
jno
push
shr
in
xor
pop
addl
mov
push
xchg
sub
int3
imul
int
and
or
adc
sbb
and
cmp
aam
stc
dec
clc
adc
movsl
jl
jmp
add
pop
pushf
leave
mov
adcb
ljmp
or
lods
sbb
cmp
pop
aad
sub
push
loop
hlt
push
xchg
pop
jno
shlb
or
adcl
mov
push
add
push
loopne
push
pop
lea
pop
cmc
jae
inc
out
out
insl
mov
push
dec
push
jae
dec
jg
mulb
outsb
inc
pushf
jg
push
shll
inc
cli
pop
and
subb
sbb
aam
fwait
divb
xlat
or
shll
adc
cmp
aad
icebp
cmp
xchg
cwtl
fadd
mov
popf
inc
lods
gs
pop
inc
pop
cmc
data16
jp
mov
loope
sbb
test
test
pop
xchg
dec
lds
jecxz
insb
push
and
dec
xchg
cmp
imul
add
icebp
fwait
fwait
jo
mov
pop
shrb
fwait
or
inc
jl
push
pop
mov
xchg
jno
fwait
popf
adc
mov
out
outsl
add
mov
push
arpl
adc
imul
sub
popl
xchg
pop
pop
xor
pop
nop
and
fisubrl
mov
inc
ret
outsb
mov
mull
repnz
lods
into
xchg
insb
dec
lods
inc
inc
sub
jg
movsb
mov
fisttpl
xchg
sahf
ret
jmp
shlb
push
and
insl
roll
fldt
add
into
and
xor
int3
sbb
adc
insb
fstpt
dec
mov
das
cmc
dec
lds
fnstcw
bound
sbb
fwait
pop
in
jae
movb
lods
jle
mov
dec
idivb
jbe
cmc
adc
cmc
sti
sbb
push
mov
pop
xor
jbe
xchg
in
inc
enter
psubd
popa
stc
mov
mov
add
mov
cmpsl
pop
push
pushf
sbb
pop
cwtl
sub
pop
movsb
cmp
setne
fidivrs
leave
or
jmp
aaa
mov
push
sbb
iret
shl
out
shlb
pusha
arpl
pop
push
xchg
mov
and
add
sub
fs
clc
adc
xchg
push
test
daa
mov
mov
rolb
inc
jo
mov
sbb
xor
lahf
dec
jnp
scas
mov
dec
test
jo
add
das
push
xchg
imul
push
fisubl
sub
add
pop
arpl
ja
mov
nop
inc
mov
inc
inc
call
xchg
or
cltd
gs
stos
ror
mov
cmpsb
xor
and
or
push
rclb
out
out
xor
pop
addb
xlat
add
xor
cmpsb
push
ret
or
pushf
jg
mov
add
lods
jl
data16
xor
jmp
or
je
stos
mov
xorb
retw
sub
fistpl
push
in
adc
loope
mov
iret
stos
in
loope
pop
fdivrp
lods
add
inc
mov
mov
insb
insl
cmpsb
mov
aas
push
jno
pop
pop
mov
insl
sbb
and
adc
xor
imul
mov
adc
cmp
and
daa
shlb
dec
adc
push
or
mov
sahf
incb
mov
movsl
xor
add
aam
cli
xor
pop
in
xor
xor
popa
cltd
repz
xor
test
mov
fsubr
fstpl
mov
and
push
aas
push
lea
lods
test
into
sbb
inc
mov
sub
and
and
cmp
pop
sbb
pop
push
iret
pop
mov
out
in
test
mov
in
pusha
frstor
xor
mov
pop
fildll
xor
repz
jo
loope
outsb
sub
lahf
fwait
std
cwtl
sub
mov
xor
add
push
jle
jmp
daa
lds
xchg
dec
inc
into
test
aas
test
pushl
push
mov
adc
dec
loopne
fbld
cmp
jno
prefetch
test
xchg
mov
push
push
xor
ret
cmp
test
clc
cmp
in
xchg
scas
movsl
mov
lret
cmp
nop
cltd
fucom
scas
ja
arpl
or
sbb
jmp
inc
mov
in
sub
jne
gs
xchg
jnp
test
mov
cmp
sbbb
aam
sub
loop
pop
insb
imul
cmp
int3
jecxz
pop
or
sbb
sahf
and
aam
push
sub
aam
rorb
or
mov
pop
push
push
lahf
lret
adc
cmp
or
mov
stos
repnz
mov
mov
les
pshufw
call
push
mov
es
xchg
std
ret
push
sub
sbb
jno
jp
push
push
movsl
cmc
lock
out
in
or
cmp
fmuls
scas
push
daa
divl
mov
xchg
sbb
test
add
call
xchg
jg
or
repnz
aam
pop
and
xchg
outsb
lds
inc
pop
jl
dec
ljmp
inc
scas
lods
popa
outsl
xchg
popf
push
jbe
and
movsb
jne
test
or
jbe
scas
mov
push
or
ss
stos
call
jb
cli
lcall
xor
dec
or
xor
cwtl
les
ss
inc
push
sub
mov
cwtl
sbb
mov
mov
orb
lret
loop
mov
mov
xchg
jns
mov
xchg
jecxz
ss
mov
pop
adc
pop
dec
das
mov
cmpsl
mov
in
sysenter
or
cmp
pop
xchg
jmp
cltd
adc
jb
sub
dec
test
sub
mov
in
jp
subl
xchg
and
pop
rorl
cmp
xchg
loop
mov
pop
pushf
addb
xchg
fs
xchg
push
jbe
xchg
bound
das
pop
jae
add
mov
rolb
or
lods
mov
std
add
pusha
sbb
rcrb
je
push
add
lock
mov
mov
lret
mov
mov
movsb
out
sti
sub
add
dec
aam
incl
push
cmp
fsubr
push
clc
mov
cmpb
mov
sub
or
dec
mov
orb
imul
inc
push
jo
rolb
daa
xor
pop
push
popa
lock
cmpsl
cmp
out
imul
xor
cmp
cli
cld
lock
and
adc
cmp
push
jecxz
je
dec
adc
pop
push
inc
adc
scas
mov
roll
mov
hlt
in
lret
fwait
push
test
mov
cltd
out
fs
daa
or
in
pop
and
scas
sub
adc
insb
pop
fs
std
xchg
dec
jge
jbe
mov
sub
jno
loop
sahf
es
pop
arpl
adc
and
dec
sbb
xchg
mov
mov
mov
sbb
mov
cltd
push
pop
fldt
ja
xchg
jne
push
push
dec
stos
sbb
fistl
adc
in
aad
lods
add
or
pusha
sarl
mov
cmc
sub
cmc
xor
cltd
loopne
lret
sti
jns
push
jecxz
xchg
push
stos
cmp
repz
and
xlat
mov
es
daa
jae
ret
data16
jnp
sub
pop
adc
mov
ret
xchg
ds
enter
cmpsb
orb
push
xchg
sbb
pop
arpl
lret
or
add
push
movsb
call
ret
rolb
int
mov
lret
xor
push
push
ud1
mov
add
rcrb
add
xchg
int3
mov
mov
mov
add
filds
or
les
lret
insl
iret
mov
and
push
xor
lahf
jno
fimuls
repnz
pushaw
pop
cs
outsb
in
fcomps
xchg
sbb
xchg
insb
out
adc
cli
fdivrs
sbb
mov
in
scas
dec
aam
push
imul
arpl
add
and
or
xchg
push
cmpsl
mov
xchg
mov
mov
jne
mov
sub
dec
push
loopne
mov
je
sub
inc
mov
test
mov
mov
stos
iret
scas
adc
gs
mov
outsl
stos
and
pop
test
int3
hlt
dec
iret
mov
int3
test
cli
ds
push
mov
lret
sti
gs
mov
in
push
cmp
out
adc
ja
mov
out
mov
pop
inc
repnz
sub
jmp
mov
fiadds
xor
orl
faddl
add
xchg
adc
adc
mov
mov
jae
int
jle
xlat
stc
inc
cmp
test
sbb
add
inc
sub
pop
jo
cwtl
mov
testb
clc
dec
mov
cmpb
push
lock
mov
inc
xchg
inc
sbb
mov
lahf
pop
jle
mov
cli
or
xchg
out
dec
ret
sub
lods
hlt
cli
popa
scas
imul
jmp
dec
push
jmp
or
fwait
mov
xchg
mov
mov
cltd
jmp
mov
cmpsb
push
test
lea
aam
es
sub
mov
fsubs
xor
cmp
aad
ss
jnp
xchg
jae
out
dec
les
mov
into
mov
xchg
js
test
push
outsl
pushf
fidivs
xchg
mov
mov
pushf
inc
pop
bound
ds
pop
xor
addb
xchg
xchg
scas
aas
fisubl
jp
mov
xor
ljmp
bound
sbb
inc
gs
dec
add
dec
jo
stc
lret
mov
sub
xchg
sbb
mov
xchg
std
pop
cmp
scas
xchg
jmp
out
fisubl
push
inc
dec
or
sbb
push
xchg
jno
mov
mov
inc
insl
lock
pop
pop
roll
pop
xchg
jecxz
adc
pop
test
shll
nop
mov
pop
or
testl
call
push
shl
mov
leave
jnp
mov
loope
notl
cmp
out
mov
js
push
mov
lret
dec
dec
cs
pop
dec
sarl
sub
inc
scas
loope
negb
mov
inc
scas
lcall
sub
fmulp
cmp
cmc
leave
pop
xchg
ljmp
xlat
inc
idiv
xchg
xchg
mov
adc
add
fcomps
mov
mov
je
jo
xor
adc
das
mov
cs
pop
add
aam
pop
cwtl
mov
xchg
jge
sub
sub
rol
fstps
out
ror
scas
popf
jg
inc
cld
je
fstpt
movups
ja
movsb
lret
cmpl
cmpsb
leave
pop
cmpl
mov
and
sbb
jb
pop
frstor
jecxz
shlb
mov
das
push
out
jb
xor
dec
pop
loop
movq
or
pushf
andps
fscale
dec
gs
push
cmp
int
pop
add
dec
mov
and
xor
sahf
inc
jp
nop
xchg
rcrl
cmpl
popa
mov
fneni(8087
test
cmp
inc
imul
stc
ret
js
xor
adc
xchg
add
fsubrs
repz
push
sub
inc
cmc
popa
xor
mov
jge
sbbb
int3
shll
sbb
adc
orb
cmp
sub
fists
adc
cld
test
test
repz
mov
xor
loopne
and
or
cs
js
fdivrp
cs
addr16
mulb
mov
addb
mov
and
fwait
cmpsl
jle
test
fcoms
imul
or
test
mov
test
out
add
xchg
test
pop
insb
enter
loop
xlat
push
pop
jmp
mov
adc
mov
pop
push
xchg
jecxz
adc
push
popf
imul
push
dec
mov
movsl
add
adc
pop
pusha
and
add
and
sbb
mov
je
or
and
in
add
outsb
fwait
icebp
xor
sbb
sbb
int3
mov
addr16
lods
cltd
and
sahf
imul
aaa
out
and
ss
into
mov
out
push
sahf
mov
stos
sahf
xchg
and
xchg
out
andl
or
mov
inc
xchg
aad
and
test
mov
sahf
fisubs
push
push
imul
das
daa
pop
dec
sbb
test
pusha
xor
loopne
dec
loop
mov
in
sub
xor
mov
or
movsb
out
push
ss
mov
scas
push
dec
pop
push
or
add
es
mov
les
and
lahf
aas
fwait
add
fnstcw
fistpl
xchg
or
leave
inc
dec
aas
jne
sbb
push
mov
adc
inc
filds
repnz
out
cmp
sub
and
cld
dec
mov
mov
pop
dec
adc
insl
leave
dec
sbb
outsb
dec
andl
loopne
lock
sbb
add
rcrb
fmuls
cmp
inc
repz
xor
lcall
push
mov
or
iret
mov
lds
xchg
data16
jnp
and
lahf
fmul
add
or
and
pop
sub
sbb
sub
inc
shll
pusha
gs
xor
stos
testb
inc
loopne
mov
addr16
daa
out
fldl
repz
mov
sti
outsb
xchg
mov
mov
jne
je
stos
or
push
nop
jb
lret
xchg
or
fiaddl
xlat
fcomip
mov
icebp
jp
push
mov
jno
inc
adc
les
mov
mov
mov
cmc
pushf
add
pop
mov
in
inc
stc
cmpsb
or
dec
test
out
xlat
xchg
shlb
aaa
imul
sti
inc
inc
int3
sbb
jmp
int3
divb
jae
aaa
xor
and
add
cmpsb
lret
rdpmc
xchg
outsb
jo
mov
xchg
xor
cltd
shll
mov
push
jmp
ss
pusha
dec
dec
fistps
or
xor
push
or
xor
push
pop
push
and
loop
push
pusha
xchg
test
jbe
push
push
sti
jp
mov
mov
push
lods
cmp
bound
iret
xchg
inc
xchg
add
lret
mov
pop
pop
shl
and
inc
in
pusha
sub
ss
inc
pop
push
lahf
push
icebp
xorb
aas
ret
and
xor
insb
mov
jl
cmp
add
dec
rorl
jbe
mov
mov
cmp
push
fwait
stos
sub
add
add
js
insl
xchg
dec
movsl
xchg
ret
mov
imul
pushf
pop
push
jnp
inc
int3
dec
jns
std
dec
lcall
in
dec
mov
cwtl
mov
mov
enter
shrb
push
pop
in
insb
cmp
ss
mov
jno
fidivrl
or
imul
leave
negl
pusha
fildl
xor
fisttpll
sbbb
mov
or
out
scas
mov
test
adc
into
xchg
xlat
fistl
pop
dec
into
in
sub
and
enter
mov
pop
lahf
int3
jae
pop
std
or
jns
call
xor
adc
pop
xchg
mov
cli
xor
shll
push
mov
lret
bound
ret
or
adc
andb
mov
pop
mov
aaa
vorps
cmp
pop
fcomi
xchg
lea
repz
add
xor
out
fidivrs
cltd
mov
sub
aaa
stos
mov
mov
fdivrs
dec
out
daa
mov
jle
and
call
and
iret
outsl
push
adc
push
sbb
lock
or
adc
adc
xchg
sbb
lea
cmp
and
pop
enter
js
daa
sahf
jns
pop
or
in
in
cmp
cmp
scas
repnz
mov
and
lcall
sub
aad
std
pop
cli
idivb
and
test
enter
mov
hlt
mov
xor
leave
cmovnp
daa
call
jle
xor
iret
andb
cmpsb
test
xchg
mov
dec
ss
cmp
lret
jmp
inc
and
dec
pop
push
bound
or
daa
pop
fadds
pop
gs
cld
xchg
movb
pushf
pop
inc
inc
push
add
pop
lcall
popa
div
das
inc
jle
in
sti
mov
sub
dec
cmpsl
jae
call
inc
mov
lea
roll
cmc
xchg
mov
dec
pop
out
jo
test
in
cmc
cwtl
stos
out
push
je
jb
fists
add
and
lds
stc
pop
ljmp
mov
mov
jmp
test
pop
jmp
mov
mov
xor
cmp
fcmove
lods
cmpl
cmp
jno
dec
mov
aas
push
inc
sbb
xor
cmp
out
push
push
cmc
lcall
mov
insl
daa
add
or
test
mov
xchg
clc
cmp
lods
call
outsb
dec
jnp
dec
pop
mov
ret
stc
pop
sbb
add
lods
outsl
cmp
int
lods
std
cld
nop
xchg
les
iret
add
mov
in
outsb
hlt
push
adc
aas
xor
xchg
jl
jmp
inc
out
ret
pop
aas
xor
iret
fildl
mov
inc
adc
ret
push
push
xor
test
pusha
push
inc
mov
or
cmp
fmulp
sarl
icebp
mov
mov
shrb
ljmp
int
mov
inc
sub
addr16
jno
lds
or
rcrl
js
leave
push
int
mov
js
sbb
mov
mov
xchg
and
ds
movsb
xchg
jmp
iret
and
jg
loop
and
mov
xor
push
rcr
aaa
xchg
jne
push
cmp
cmp
shl
jne
ljmp
pop
inc
or
xor
shll
jp
jae
cmpsb
mov
sub
sub
xchg
mov
xchg
inc
mov
jnp
ss
xorl
outsl
fistl
ret
sbb
add
jo
or
cmpsl
mov
push
cli
idivb
lcall
mov
notb
lods
daa
subps
pop
cmp
test
xlat
mov
sbb
jno
adc
xchg
imul
adc
push
and
dec
inc
and
xchg
shll
loope
or
xor
xor
jecxz
xchg
xchg
lcall
push
pop
mov
or
outsl
cmp
cwtl
fnstsw
into
sbb
insl
mov
aam
loop
jecxz
sub
sbb
repz
push
jb
aaa
mov
out
pop
lret
jp
loope
rorl
push
add
lds
jae
push
jnp
sbb
jge
mov
mov
push
imul
repz
or
inc
dec
push
cltd
fiadds
rorb
clc
xchg
cmpsb
cmp
js
pop
icebp
cli
lahf
add
and
cli
fidivrl
aam
mov
sbb
mov
mov
mov
cmp
scas
es
not
jmp
popa
jno
dec
fstpt
dec
jno
arpl
xlat
les
pop
or
dec
jp
arpl
lcall
mov
adc
pop
push
into
inc
pop
leave
or
mov
push
clc
xchg
addr16
test
mov
shrb
add
jle
js
mov
xchg
cli
dec
subl
pop
ss
xor
pusha
inc
lock
les
fmuls
mov
outsl
jne
mov
adc
lret
popa
fbld
fdiv
add
scas
jmp
jnp
pop
xlat
icebp
out
mov
fcomps
cld
mov
mov
jle
imul
xchg
rcr
xor
add
jge
inc
les
sbb
fsubrl
push
mov
adc
fdivs
into
in
arpl
xor
pop
lret
push
dec
sbb
xchg
lds
rol
sub
push
cmp
test
imulb
in
cs
orl
mov
daa
mov
cld
dec
mov
notl
subl
and
push
test
loopne
inc
xor
mov
repnz
popa
jle
bound
daa
mov
pause
mov
cmc
dec
dec
call
nop
add
leave
or
dec
addr16
xchg
xchg
pop
aaa
or
std
sub
rorl
jns
mov
stos
pop
in
sub
lods
dec
dec
lods
dec
stc
pop
bswap
lods
mov
imul
xor
pop
idivb
nop
mov
stc
loop
mov
adc
mov
xchg
pop
jge
mov
hlt
push
sbb
add
and
pop
movsl
xorl
adc
test
vpsrad
ss
adc
mov
fdivl
imul
and
loopne
fsubs
pop
xchg
xchg
dec
lods
sub
jmp
in
loope
cwtl
test
push
adc
fsubl
xchg
out
mov
arpl
xchg
pop
and
jnp
scas
adc
pop
rcrl
inc
adc
jge
in
sbb
push
pop
xor
cmp
loopne
cmp
stos
testl
cmp
sbb
adc
xchg
xor
repnz
fldt
fidivs
scas
ss
sbb
cltd
sbb
adc
test
or
dec
push
mov
mov
jns
test
sub
mov
cld
sarl
xchg
cwtl
popa
dec
nop
mov
out
popl
ja
jecxz
or
or
sahf
mov
rolb
fwait
dec
lods
inc
push
sahf
xchg
mov
mov
cmp
and
pusha
mov
mov
je
pop
xor
das
mov
adc
in
roll
adc
pop
inc
add
add
mov
sub
loop
movsb
pushf
aaa
add
jo
fwait
xor
push
call
cmp
loop
mov
or
inc
shll
and
outsl
icebp
outsl
mov
dec
jge
subb
adcl
and
lcall
dec
mov
add
into
movb
repz
inc
pop
inc
je
test
nop
xor
notl
fcom
aad
dec
loop
in
mov
bound
lret
xor
sti
mov
rorl
adc
popa
inc
mov
mov
or
les
dec
jb
stc
lds
mov
and
push
xor
fucomi
mov
sbb
sub
dec
mov
into
jp
xor
xchg
push
nop
test
jne
loopne
or
cmp
and
lahf
mov
rorl
add
sbb
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
sarb
loop
jl
pop
jl
dec
pop
adc
dec
incb
sbb
push
push
cltd
jnp
fsubrl
mov
imul
enter
mov
sbb
rcrl
push
test
repz
cwtl
stc
and
xor
test
daa
xor
lret
mov
pusha
dec
mov
cmpb
lods
xor
lds
push
xor
shlb
lods
daa
jnp
mov
insl
mov
imul
mov
add
sub
sbb
leave
pop
add
inc
cli
fld
jl
jmp
lret
jno
cs
repz
ss
loope
xchg
or
shll
push
dec
sub
cmp
addr16
push
inc
pop
dec
mov
nop
ret
pop
inc
mov
xchg
jle
sbb
adcb
into
sarl
inc
and
lea
lds
jecxz
jecxz
pop
imul
iret
lret
push
jge
loope
push
xor
shl
adc
lea
int3
les
mov
add
mov
mov
or
and
rorb
movsl
sub
push
outsl
es
lret
mov
push
xor
mov
stos
add
cmp
stos
adc
lahf
incl
jecxz
loop
sbb
inc
sarl
xor
negl
in
fldcw
dec
sbb
adc
call
or
mov
xchg
xor
cwtl
cs
popa
xorb
inc
lods
popf
pusha
pop
mov
pop
shl
popa
aas
add
in
out
loope
mov
xor
xlat
xchg
xchg
int3
pop
sub
cmpsb
dec
test
and
xchg
or
lds
xchg
test
fs
sbb
sbb
divb
or
popa
inc
movsl
mov
js
push
or
movsb
mov
shrl
xor
les
dec
test
dec
inc
jmp
push
sub
shr
pop
jge
jmp
mov
dec
insl
jbe
movsb
fsubl
cmp
sub
pop
mulb
adc
jns
push
cmp
pop
roll
cltd
and
xchg
ja
xchg
mov
mov
or
sub
ja
pop
xchg
enter
pop
pop
cmp
lret
adc
les
inc
push
and
sub
jo
mov
xor
inc
setae
sbb
addr16
push
cwtl
stos
sar
stc
rorl
test
std
xor
mov
addr16
nop
xor
mov
jp
and
xchg
mov
xchg
movsb
xor
aam
cmp
imul
jg
inc
pop
push
adc
push
mov
push
stos
fadds
movsb
pop
lret
sub
xor
mov
hlt
pusha
add
jb
loop
push
cmp
dec
loopne
mov
lea
or
or
jns
fwait
push
enter
or
ja
movlps
and
jmp
adc
jl
jp
cmp
pop
dec
in
push
and
xor
cs
sub
xchg
sbb
icebp
xlat
ss
cmpsb
adc
shll
out
pop
push
hlt
aad
rcr
inc
punpcklbw
leave
add
xor
or
mov
mov
movsl
push
imul
paddusb
into
je
mov
pop
inc
lods
mov
adc
sbb
int
sbb
xchg
cld
dec
mov
xor
jne
andb
inc
insl
add
insb
xor
aas
sub
pop
sbb
nop
sbb
sahf
jge
pop
dec
mov
sbbb
enter
cmp
imul
mov
lods
jns
cltd
jbe
sbb
js
out
ficomps
fstp
push
scas
aas
add
pop
js
xor
add
sub
jns
xor
stos
jb
jl
mov
dec
cmpsb
cmp
xchg
mov
push
xor
dec
xchg
sub
fsubl
xor
pop
addb
pop
push
out
xchg
popa
not
push
sbbb
jne
sahf
dec
ss
stc
sbb
cmovp
push
cltd
or
jbe
ja
pushf
pop
cltd
sti
jno
pop
xchg
mov
jmp
xorl
jg
xor
ja
xchg
xchg
daa
sub
es
aad
push
mov
and
dec
mov
bound
lods
add
xchg
cmp
ficoml
xor
icebp
sbb
movsb
cs
fcomp
xor
out
mov
pop
jo
cmp
jnp
adc
sub
push
adc
or
mov
addl
jo
adc
cmp
test
and
aam
jl
test
fbstp
cli
gs
sub
cs
sub
fsubp
aam
arpl
mov
pop
and
and
addr16
xorb
cmp
push
fwait
outsl
aam
xlat
das
cmp
dec
xchg
daa
insl
js
repz
xchg
sub
fwait
roll
cltd
jb
cmpsb
xor
pop
data16
iret
push
xor
addr16
aad
jmp
xchg
sti
icebp
and
fisubs
or
sti
and
xabort
xor
pop
mov
mov
fucom
fnstcw
ja
add
xor
cmp
jmp
or
and
mov
enter
dec
push
stos
dec
divl
and
aaa
xor
stc
xchg
cli
aad
inc
gs
stos
push
mov
adc
mov
call
dec
jo
xor
lea
rcrl
xor
inc
outsl
inc
sbb
aam
aam
daa
mov
pushf
fsubl
mov
fisubl
cmp
xor
repnz
fsubrl
mov
xchg
lahf
sbbl
mov
sti
mov
add
pusha
xor
or
xor
cmp
loope
lods
mov
call
test
mov
lock
xchg
sub
xchg
movsl
stc
pop
mov
mulb
push
sub
mov
adc
and
in
push
sbb
mov
fadds
mov
in
inc
std
adc
xchg
aaa
ja
fiadds
dec
cmpsb
pop
or
sub
pop
push
cmp
sar
sbb
fmul
push
and
fs
jl
dec
cmovns
outsb
mov
insb
aas
cwtl
or
sbb
out
movsl
push
in
lret
test
cmp
sub
xor
sti
pop
in
test
pop
inc
lret
pop
dec
nopl
jg
xchg
pusha
rorb
mov
fstpt
mov
cs
xor
fstpt
or
mov
xor
or
dec
cmp
inc
inc
jno
imul
das
cld
stos
jb
subb
and
jns
push
adc
jp
int
shlb
scas
clc
and
xor
xchg
push
push
dec
mov
pop
lods
xor
jns
gs
jge
push
cmp
ds
clc
pop
lds
xchg
movsb
lods
xor
popa
into
inc
cld
bound
sbb
inc
loope
adc
outsb
push
aad
aam
push
test
popf
testb
xor
push
shrb
add
push
inc
dec
mov
pop
out
or
imul
xor
ret
cld
cld
and
and
movsb
dec
jge
and
int3
jp
cmp
lock
pop
push
jl
cmp
pop
mov
pop
and
xor
push
mov
ss
loopne
cmp
scas
push
out
outsb
jbe
sbb
sub
imul
insl
in
pop
mov
icebp
es
cmpsl
das
movsb
pop
insb
arpl
ja
and
adc
lret
cli
jb
sub
xor
das
sbb
test
and
call
idiv
sub
pop
cli
adc
mov
mov
shll
mov
xchg
mov
mov
inc
lahf
sub
mov
xchg
scas
mov
cmp
xchg
pop
push
dec
cwtl
jge
popf
or
fwait
xor
and
push
shr
data16
jne
jne
ret
mov
adc
adc
inc
mov
xor
xchg
adc
je
subb
mov
icebp
pop
sub
sti
test
bound
ds
mov
push
ror
lret
sbb
rcll
in
mov
fists
addb
dec
loop
shlb
or
mov
adc
jl
xor
stos
gs
mov
mov
into
jl
adc
sub
insb
ja
lods
movsb
cmc
jmp
xchg
insl
js
mov
mov
xchg
mov
inc
sarb
mov
push
mov
cmpsl
mov
ljmp
cmp
cli
xor
pop
daa
fisttpll
sbb
hlt
add
data16
cmp
add
out
adc
leave
dec
js
xlat
mov
sbb
adc
jecxz
les
add
jl
push
jae
dec
and
ret
int
das
dec
dec
push
fildl
fisttpll
cmpsb
cmpl
mov
nop
lret
mov
testb
leave
hlt
imul
int
and
xchg
or
adc
mov
cld
int3
fiaddl
cltd
shl
popa
mov
xor
sbbl
sbb
insb
xchg
mov
movsb
lods
ficomps
pop
fisubrs
mov
cmc
pusha
ljmp
mov
inc
out
cmp
hlt
in
mov
sbb
sub
sbb
inc
or
test
mov
les
cmpsb
push
push
inc
pop
fcmovbe
cmp
popf
ss
fdivp
sbb
adc
loop
cmp
pop
push
sbb
in
std
rorb
jge
cmp
and
sub
cmp
cmpsl
mov
and
movsl
stos
cwtl
cmp
xor
xor
mov
or
mov
cli
xor
ds
shll
inc
aas
imul
inc
sub
ja
mov
sbb
fs
inc
nop
rclb
xchg
sbb
leave
nop
adc
ret
jns
jle
push
cmp
stc
xchg
sbb
push
and
shrl
push
push
xor
push
mov
cmpsb
movsl
cwtl
jecxz
fs
push
in
inc
dec
std
mov
inc
push
mov
dec
lret
and
je
push
inc
leave
movaps
push
pop
aad
xor
xchg
inc
mov
rcll
pop
js
pusha
jmp
clc
es
mov
cmpb
xchg
hlt
in
mov
push
sub
mov
cmovs
movsl
repnz
sbb
cmp
mov
and
xchg
push
repnz
jne
fwait
rol
out
daa
out
and
popa
inc
jo
lcall
xor
cmp
out
lret
pop
int
push
and
outsl
and
movsb
adc
mov
xchg
pop
aas
pop
ficomps
sub
jae
outsl
fwait
dec
lret
push
subb
shl
jb
jo
pop
int3
je
jecxz
bound
and
repz
out
out
movsb
loopne
adc
lods
rolb
lods
cwtl
xor
xchg
push
dec
sub
inc
lock
jo
js
lcall
fldt
jle
mov
sub
mov
jo
lock
jmp
inc
iret
push
or
add
cmp
les
xchg
xor
cld
out
mov
lock
jp
adc
outsb
dec
shr
mov
stc
ret
add
cmp
sbb
sub
and
lahf
jb
jecxz
pop
add
rcr
in
xor
test
popa
adc
negb
scas
cmp
aaa
cmpsb
lock
out
test
adc
cwtl
dec
pusha
mov
fs
inc
mov
lds
dec
sbb
es
and
std
leave
dec
mov
aaa
xchg
lea
nop
cltd
or
scas
xor
mov
stc
fimuls
pop
repz
fstpl
jo
push
sbb
loopne
mov
in
sub
adc
xchg
cld
dec
mov
mov
iret
incb
add
pop
adc
pop
js
insl
out
outsb
cmp
idivl
xchg
push
sbb
sbb
cmpsb
lods
aam
sti
pushf
sti
xchg
bound
into
dec
add
shlb
mov
push
sbb
add
adcl
xchg
lock
cmp
addr16
push
int
aaa
test
cmp
push
and
cmp
xor
pop
call
pop
and
sub
enter
movl
int3
push
or
lcall
movsb
cs
fldt
in
dec
xor
adc
adc
jg
pop
push
cmpsl
lods
mov
imul
jp
pop
int
push
loopne
adc
jno
lods
push
lds
out
jg
inc
xor
ret
cmp
adc
pop
xor
jo
xor
adc
test
dec
vmovdqu
stc
fs
jbe
test
push
sti
xor
cli
mov
xchg
mull
lock
js
adc
xor
clc
add
mov
xor
inc
mov
jae
sarb
data16
sarb
jbe
lods
jo
dec
mov
xchg
and
jnp
mov
and
xchg
mov
cmp
into
dec
lods
imul
mov
add
repnz
arpl
mov
mov
gs
inc
lock
and
insb
rcrb
push
pop
mov
arpl
or
fstps
sarl
hlt
cmp
stc
dec
dec
repz
mov
icebp
loop
fs
inc
or
cmp
push
xor
sbb
pop
sbb
les
not
ret
sti
jnp
inc
daa
cwtl
cld
jg
fimuls
pop
loopne
enter
inc
adc
ds
in
sub
adc
push
mov
cmc
pop
das
adc
pop
inc
and
xor
mov
test
inc
pop
push
nop
mov
cmpsb
out
fidivrl
sahf
cwtl
mov
pop
adc
xchg
ds
xchg
jecxz
jecxz
jnp
fdivr
inc
stc
or
inc
test
sbb
adc
pop
mov
pushf
stos
push
jg
or
jp
push
ss
adc
jl
loope
sub
inc
lock
adc
shlb
sbb
je
mov
fwait
jecxz
pop
aam
addr16
inc
addr16
dec
sub
push
fisubs
push
mov
sbb
mov
es
or
jne
push
push
cs
loopne
shrb
sbb
or
or
jle
push
daa
icebp
jne
rorl
jns
cmp
xor
lods
pusha
cs
mov
xchg
imul
jge
mov
lods
fiadds
rol
add
cmpsl
inc
js
orl
int
jo
and
jo
nop
and
scas
ret
xchg
fucomip
pop
add
inc
mov
inc
xchg
inc
jge
or
jo
and
aaa
dec
pop
xor
pop
test
sub
out
cmp
loopne
or
jmp
xor
das
inc
and
add
mov
sahf
lret
leave
inc
sub
in
cmpsb
pop
adc
cmpb
adc
xchg
popf
out
xchg
cmp
adc
dec
and
into
test
fisttpll
test
ret
sub
jg
mov
or
adc
repz
dec
outsl
adc
pop
test
test
push
push
mov
xchg
or
mov
push
and
xor
sarl
loope
imul
push
arpl
mov
fistpl
push
mov
arpl
popa
or
add
mov
shrb
and
jns
mov
daa
mov
shlb
fidivrs
shrb
popa
sahf
mull
test
xchg
andw
lods
dec
aaa
sub
mov
nop
mov
mov
jp
and
push
sbb
bound
and
scas
and
lds
imul
add
enter
cmpsb
shll
bsf
jmp
or
jb
popa
daa
sbb
cwtl
arpl
sahf
ret
xlat
cmp
dec
mov
mov
add
addr16
mov
cli
and
lret
dec
add
outsb
ljmp
jb
and
pop
je
push
and
push
xchg
dec
jne
mov
out
mov
jno
add
popf
add
lds
adc
or
mov
imul
ja
inc
adc
les
mov
inc
arpl
and
scas
mov
mov
xchg
std
adc
adc
adcb
mov
dec
pop
or
lods
adc
aaa
push
lods
sbb
cmp
loopne
sahf
sub
shrl
outsb
sub
push
xchg
int3
gs
test
faddp
lret
shll
jmp
jbe
fadd
pop
mov
scas
mov
sub
dec
sub
add
or
mov
mov
adc
adc
icebp
mov
jbe
lods
jo
xchg
mov
inc
js
push
aas
add
add
loopne
xchg
popa
jnp
aam
test
sahf
jbe
mov
push
gs
xchg
xlat
push
clc
xchg
call
nop
ss
mov
sbb
test
pop
mov
fsubr
lret
or
repz
ss
inc
or
fldenv
js
xchg
push
in
sbb
int
or
hlt
mov
adc
dec
pop
dec
and
xchg
andl
out
inc
jne
adcb
jge
inc
int3
mov
shl
jo
je
fiaddl
data16
sti
cmp
outsb
dec
lods
and
mov
test
xor
cld
sub
sbb
mov
push
xchg
lahf
or
cmp
dec
mov
rcll
sub
leave
fldl
mov
cmpsb
loop
jmp
add
std
or
sbb
aam
sub
popf
mov
push
subl
lock
xchg
fisttpll
jae
mov
jnp
mov
and
cmp
scas
mov
cmp
and
push
in
fs
push
or
mov
scas
into
inc
into
aas
mov
cwtl
sbb
shr
adc
mov
xchg
lea
mov
mov
mov
ja
loopne
faddl
movsb
mov
test
loope
out
push
pxor
sbb
lret
xchg
xchg
add
mov
xchg
stc
outsl
out
fbstp
mov
xor
std
xor
cmpsb
pop
mov
add
fwait
adc
hlt
mov
shl
pop
jne
cmp
mov
nop
arpl
lcall
xchg
enter
cmp
aad
les
imul
xchg
cmc
pop
pop
movsl
cwtl
aad
adc
jo
pop
inc
mov
dec
lods
adc
js
pop
int3
test
shlb
push
pop
pop
mov
sbb
push
push
push
push
sbb
mov
jb
in
push
or
jae
aam
filds
xor
ret
add
cmp
jle
js
pushf
int3
mov
xor
xchg
mov
mov
pop
repz
std
sub
or
mov
dec
scas
xchg
jmp
outsl
xchg
scas
int
jle
insb
in
mov
mov
in
outsl
pop
movsb
lods
aaa
push
int3
sub
pop
cmp
ret
cli
sub
mov
push
lahf
pushf
xchg
lds
fstl
popf
push
dec
das
xor
sti
ret
xchg
adc
jno
aas
lods
cmp
cmp
sub
mov
or
aas
mov
repnz
mov
cs
popa
call
mov
fwait
lcall
mov
adc
xchg
add
into
out
jo
into
aas
sub
add
dec
jb
adc
test
movsl
orl
popf
jle
pusha
arpl
outsb
fadds
lods
pusha
ds
std
cld
inc
pop
das
rolb
sub
mov
jae
mov
sub
jno
dec
enter
push
js
gs
dec
push
je
in
inc
xor
leave
out
dec
pop
sbb
fidivl
push
into
lea
inc
cmp
aad
jne
add
add
jg
js
sub
scas
xor
mov
inc
xchg
xor
mov
js
sbb
sbb
ficoms
jno
cmp
pop
les
and
inc
xor
push
push
adc
push
and
mov
fsubrl
mov
cltd
les
outsb
fbld
mov
loop
test
jmp
and
jo
test
xchg
xchg
push
pop
bswap
fwait
or
adc
clc
gs
mov
leave
dec
fisubrs
mov
scas
mov
jg
dec
jnp
dec
out
jle
xlat
pop
jo
repz
cmp
xor
adc
outsb
addr16
add
pcmpgtb
in
int3
loope
push
cld
push
fcmovnbe
push
cmp
outsl
mov
jg
in
fldcw
ja
jge
add
shll
sub
lock
int
cli
jle
mov
jg
sbbl
inc
adc
mov
ss
inc
scas
sbb
daa
push
cmc
lcall
pop
jp
pop
add
push
call
mov
xor
out
adc
pop
cs
cmp
cwtl
sbb
ds
into
mov
cmp
outsb
xor
and
clc
xlat
sbb
ret
jp
add
test
jmp
cs
cld
ud1
and
mov
cltd
mov
xchg
sbb
pop
and
inc
das
xchg
sti
repnz
mov
cwtl
add
adc
cmp
test
bound
cli
pop
loop
leave
cmp
repnz
cmpb
bswap
in
out
int3
and
xchg
xor
inc
faddp
xchg
pop
sub
cs
and
aaa
sub
inc
pop
ret
ja
outsl
xchg
out
inc
jno
loop
arpl
jp
hlt
sbb
push
pop
fwait
adc
in
popf
add
dec
rcrl
stc
inc
insl
fstl
ror
cs
test
xchg
inc
aad
enter
ds
bound
lods
out
int3
mov
insl
push
fsubrs
aaa
fcomp
mov
rcrb
leave
in
cld
mov
pop
outsl
iret
pop
cs
or
pop
pop
cld
cld
mov
dec
rolb
aad
push
aad
and
aam
sub
movsl
lret
cltd
int3
jp
adc
fidivl
xor
xchg
stc
xor
popf
dec
adc
popa
sub
movsl
pop
push
and
mov
loopne
adc
xchg
fcmovb
cmp
adc
lret
mull
andb
and
sbb
mov
jnp
cmpsb
maskmovq
testl
fdiv
add
or
pop
push
pop
aad
int3
and
jbe
leave
mov
add
ret
outsb
xor
je
scas
cmpsl
call
pop
test
push
ss
outsb
mov
ret
fdecstp
pop
subl
xlat
movsb
into
pop
repnz
sbb
push
jo
cld
data16
jnp
and
fisttpll
and
adc
push
sbb
and
sbb
dec
stos
es
call
je
loope
mov
cli
dec
xlat
movsb
nop/reserved
adc
test
testb
inc
test
xchg
mov
add
insb
fildl
arpl
stos
and
mov
inc
jmp
inc
xor
imul
push
fldenv
gs
lock
xor
jmp
pusha
cli
dec
sarb
adc
sbb
std
clc
dec
pop
push
popf
orb
roll
cmp
jg
sub
cmpl
push
fildll
dec
lods
lock
loope
out
arpl
pop
negb
push
test
cmpsb
sarb
jge
in
out
test
adc
fadds
jae
fistpl
in
sahf
movsl
cmpsl
shlb
int
lcall
dec
adc
cmp
stos
pop
sbbb
fdivrl
enter
and
test
popl
es
pop
int3
xor
dec
pop
add
insl
sbb
cs
out
hlt
jp
ss
mov
inc
lret
adc
adc
cmp
sbb
pushf
stc
inc
push
or
pop
add
ret
ficompl
repnz
or
jp
add
aam
mov
mov
jge
cld
mov
imul
pop
popf
je
cli
or
push
hlt
xor
int
push
bound
lock
and
and
dec
and
jge
xor
cld
mov
add
dec
fiaddl
test
xchg
mov
outsl
lods
xor
movsl
push
test
imul
test
push
add
adc
out
mov
in
cwtl
cmpl
xorl
lcall
mov
aaa
ljmp
jo
add
inc
stos
jecxz
and
mov
es
mov
cs
leave
dec
ret
pop
xchg
dec
bound
test
pop
es
mov
and
unpckhps
jb
lods
lret
into
stc
dec
mov
xor
xchg
and
dec
outsb
adc
daa
pop
mov
mov
dec
jns
mov
shrl
call
xchg
sbb
and
loop
mov
das
loop
cli
dec
outsb
jmp
in
int3
xor
add
add
and
cmpsb
aam
push
fsubs
dec
push
push
xor
push
dec
push
or
jnp
test
ret
and
lahf
sahf
inc
pop
xchg
pushf
dec
dec
cmp
test
aas
jo
cmp
push
gs
dec
loop
or
clc
mov
popf
lea
mov
mov
fcmovnu
cmp
insb
xorl
mov
dec
fs
mov
pop
cmc
sub
dec
inc
popf
fiaddl
shll
mov
ficompl
xchg
inc
mov
mov
icebp
imul
imul
xor
add
pop
aas
cmp
push
test
pop
pop
pop
movsb
insb
outsb
dec
jp
int3
sub
fld
push
and
sbb
cli
push
or
lods
clc
mov
rolb
cmp
lret
stos
dec
sub
dec
and
pushf
pop
ljmp
sahf
jle
and
mov
jg
mov
xchg
push
sbb
dec
lret
inc
inc
and
push
or
xor
or
and
dec
bound
jb
mov
sub
gs
jne
fmuls
dec
out
mov
mov
sbb
jp
jl
push
fistps
push
scas
xor
nop
nop
outsb
push
push
mov
xchg
jbe
cmp
outsl
out
andl
movsl
adc
push
fs
inc
push
arpl
adc
inc
fimull
xchg
hlt
ret
cli
mov
mov
mov
push
mov
mov
les
push
adc
xor
sub
jmp
and
dec
in
push
and
or
xchg
jnp
xorl
mov
xchg
sub
mov
adc
jnp
stos
repnz
repnz
pushf
loope
or
pop
fdivl
cwtl
cmp
mov
popf
xor
cmp
jae
inc
lods
pushf
pop
jmp
scas
pop
fcoml
int3
rorb
pop
cmpsl
in
inc
inc
mov
or
inc
cmp
inc
popa
dec
es
scas
loop
insl
mov
test
mov
or
inc
jp
adc
sub
inc
lods
sbb
jecxz
pushf
nop
out
add
outsb
push
jl
mov
andl
cld
inc
xlat
xor
adc
fdivrl
cmp
gs
xor
out
push
xchg
cmp
and
je
sub
das
push
mov
xchg
jecxz
ds
lods
mov
mov
jl
mov
andl
iret
scas
inc
mov
dec
and
sub
or
outsl
xchg
or
sahf
pop
in
inc
push
mov
cmp
mov
push
jo
cltd
inc
leave
sbb
stos
stos
dec
pop
sub
fs
dec
insb
pop
pop
test
and
xlat
popa
push
lea
pushl
clc
or
dec
mov
sti
or
rclb
fcompl
adc
and
sub
dec
pop
mov
and
mov
push
into
cmp
lock
clc
shll
cmp
das
and
pop
fisubrl
mov
inc
in
mov
xor
leave
out
inc
jns
andb
add
cmpsl
sub
xchg
push
pop
call
stos
jns
pop
inc
stos
jmp
into
adc
xor
xor
lcall
insb
nop
out
xor
shrb
add
cmp
fisubrl
or
rorb
inc
nop
cmp
inc
or
xor
lods
aad
addr16
lcall
js
mov
xor
cltd
inc
les
jae
sti
js
dec
std
mov
add
inc
xor
add
push
pushf
xlat
mov
mov
jp
loope
inc
or
out
add
pop
lcall
test
lods
push
inc
mov
pop
xor
out
fistpll
pop
jmp
dec
in
jo
sub
push
adc
lret
cmp
jp
popa
negl
mov
mov
mov
lods
dec
out
cmp
lcall
icebp
mov
lock
out
dec
jns
add
or
mov
and
adc
mov
dec
mov
push
pop
sub
xchg
aas
movsl
shrb
sti
int
sbb
imul
xchg
ret
loop
add
xchg
adc
or
push
pop
jp
inc
fldl
lods
sub
adc
imul
sub
push
and
adc
call
jnp
inc
or
test
sub
add
fisubs
cmpsb
cmp
gs
pop
xlat
mov
pop
pushf
loop
jg
mov
adcb
jbe
dec
ficomps
sbb
rcll
imul
popf
fscale
das
dec
popf
sahf
testl
add
arpl
cwtl
stc
pop
imul
and
fidivs
push
cmp
fldt
jmp
cld
xchg
out
jecxz
sahf
cmp
cmp
mov
incl
mov
out
test
xchg
sub
pop
lcall
inc
icebp
insb
stos
mov
pop
cltd
cs
mov
inc
or
fistpll
sub
sbb
jne
insl
dec
insl
pop
dec
mov
callw
arpl
lret
loop
sub
adc
mov
pop
dec
negb
sbb
ret
lret
mov
daa
add
pop
adc
mov
or
dec
inc
shlb
xchg
add
daa
sahf
xchg
out
pop
shl
jne
xor
push
sbb
cmp
jb
push
in
add
sub
lret
hlt
scas
cmpsb
fcomps
je
pusha
mov
icebp
cmc
cmpsb
mov
ret
adc
sti
pop
outsb
and
pop
cs
adc
xor
lods
dec
push
jge
into
pop
and
jl
popf
nop
push
rclb
subl
jmp
decb
insl
jbe
or
sbb
aam
jle
jp
es
cld
mov
mov
or
xor
pop
dec
test
push
out
jo
into
sbb
or
or
mov
outsb
daa
sub
enter
jecxz
jecxz
ja
jnp
push
sub
xor
pop
xchg
xchg
dec
inc
jge
push
push
sahf
call
fsub
xchg
mull
fdivrs
aas
xchg
lods
cmpb
mov
pop
jle
out
cmpsl
xor
dec
mov
not
lods
outsl
adc
lahf
cld
imulb
xor
add
inc
add
inc
add
rorl
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
cmp
jl
jmp
jl
testb
mov
push
mov
fs
cmp
xor
rcr
sub
cmp
nopl
into
inc
imul
jae
sbb
cld
mov
mov
insl
sub
popa
out
jb
fs
mov
es
gs
in
test
mov
cmp
shrl
dec
test
mov
fsubrl
jle
sub
pop
ret
jno
rclb
test
mov
xor
scas
add
in
mov
mov
jnp
cltd
test
jg
or
jne
jecxz
cli
and
into
scas
mov
jg
inc
int3
mov
push
sarb
jbe
fwait
xor
mov
push
bound
xchg
adc
mov
dec
adc
daa
inc
cwtl
add
jge
sub
pop
cmp
divb
adc
cmpsl
jne
in
inc
jg
imul
rcl
jge
cmp
arpl
movsl
in
ret
data16
push
add
repnz
mov
push
test
pop
lea
push
pop
mov
or
loope
out
xor
mov
pop
and
fs
and
rcl
lock
popf
adc
xlat
and
cmp
jge
dec
bound
lea
xchg
dec
aam
jle
dec
aam
mov
sbbl
sub
push
pop
cs
mov
mov
lahf
cmp
push
cs
xor
pop
std
xor
mov
fwait
mul
loopne
mov
outsb
mov
cmc
xlat
dec
add
and
jl
hlt
test
push
call
inc
fcomps
bound
int
movsl
jnp
arpl
or
in
adc
ds
push
jmp
mov
loope
fwait
int3
test
dec
in
mov
data16
in
add
mov
lock
int3
xchg
xor
lret
cmpsl
mov
es
mov
inc
call
shrl
sbb
pop
and
shlb
int
mov
addl
jne
test
cmpsb
inc
add
pop
es
scas
and
dec
and
push
sub
int
lret
push
test
mov
fs
adc
movsb
adc
push
cmp
and
fwait
xchg
int
add
hlt
stos
pop
mov
push
in
cmpsl
pop
jb
data16
jo
xlat
sub
int
je
inc
pop
sbb
fidivs
pop
in
lea
add
sub
add
ljmp
jge
cltd
lods
push
or
rcr
xchg
mov
orl
sti
mov
aam
pop
lock
aaa
shr
cmp
loopne
jmp
roll
das
fwait
add
or
pop
scas
pop
dec
outsl
int3
arpl
xchg
gs
xor
cmp
mov
scas
lods
addr16
sbb
call
push
stos
mov
es
and
jns
out
sub
mov
mov
cmp
or
mov
pop
dec
jb
adc
mov
mov
jge
iret
mulb
sbb
push
aam
and
negl
fisttpl
sub
mov
pop
leave
rorl
adc
and
inc
cmp
inc
jnp
push
popa
adc
fs
test
call
lret
pop
ret
xor
stos
xor
es
xor
fnstcw
iret
xor
bound
sbbb
aas
jp
ja
aaa
mov
sbb
cmpb
mov
push
repz
mov
pushf
dec
jno
xchg
test
pop
add
jle
lcall
decb
jp
fcoms
mov
stos
mov
pop
mov
sbb
les
fcomi
mov
mov
dec
lcall
gs
push
or
mov
xor
add
inc
pop
int
sub
adc
lea
pop
aad
out
fisubrl
leave
mov
or
loop
fstpt
pop
jno
stos
loope
pop
mov
xchg
movsb
icebp
daa
in
out
imul
das
adcl
adc
call
jae
stos
push
fisttpll
jle
frstor
rorl
jl
clc
cmp
add
scas
cwtl
push
popf
jmp
or
dec
mov
sahf
pop
sbb
cwtl
data16
outsb
or
and
and
mov
pop
add
cmpsl
dec
jle
aam
xchg
popf
dec
sti
fdivs
push
fsts
sub
icebp
pop
fdivl
int3
fldt
xchg
mov
into
and
loop
gs
xchg
push
mov
mov
sub
scas
sub
fisttpl
in
mov
imull
sub
mov
mov
decb
arpl
test
dec
repnz
inc
aas
xor
icebp
stos
sahf
into
inc
cmp
scas
aas
jno
mov
je
pushf
iret
or
repnz
hlt
fsubs
movsb
mov
mov
in
push
add
pop
ljmp
ud2
inc
scas
inc
les
std
loope
in
jp
and
movsb
pop
pop
loopne
inc
pop
push
mov
aad
iret
sbb
pop
push
inc
cmpsb
lret
dec
add
cmpsl
dec
stos
and
cmp
mov
loope
cmpsb
fistpl
mov
pusha
cwtl
gs
mov
sti
and
mov
or
insb
popf
jne
add
sub
xor
movsl
push
addr16
mov
push
xchg
jne
cmp
js
out
ret
in
aas
sbb
sub
adc
ja
outsb
out
mov
mov
decl
and
sub
mov
fchs
enter
nop
movsb
dec
nop
stos
scas
mov
shrb
les
pop
ja
imul
cmp
aam
jne
and
adc
or
xlat
dec
in
and
pusha
idivb
test
pop
cmpsl
cmp
adc
std
pusha
in
add
imul
call
js
stos
ljmp
sbb
mov
jg
mov
mov
out
int
cmc
scas
jo
lock
arpl
or
xchg
dec
loopne
out
or
fbstp
add
sar
loop
or
cmpsb
jno
data16
add
cmp
adc
mov
add
outsl
cld
insb
pop
adc
je
xchg
sbb
push
xor
or
pop
and
les
icebp
fsubr
jp
cmpsl
and
cmc
fiadds
xchg
shll
mov
add
cmp
dec
mov
jo
movsb
xchg
xchg
jo
add
loopne
lcall
jg
jmp
pop
pop
xchg
jns
imul
out
or
pop
push
pop
in
jb
fcmovnbe
and
bound
shrl
pusha
mov
xor
xor
push
pop
iret
jne
lds
pop
jge
jp
pop
insb
lock
sbb
ds
das
jno
outsl
pop
outsl
aaa
mov
sti
jnp
lock
and
cmpsl
nop
add
mov
les
shll
mov
popa
sbb
ja
xchg
xchg
loop
mov
add
ret
outsl
in
mov
mov
in
xor
jo
aas
popf
scas
aam
lds
fidivl
rorl
fisubrl
inc
add
fildll
and
daa
movsl
cmp
fnstsw
mov
test
outsb
rcl
dec
fwait
pop
das
cli
pop
ljmp
xlat
test
cmpsl
gs
or
dec
call
int
mov
insb
lcall
jb
js
clc
sub
sbb
adc
imul
jg
sbb
gs
pop
dec
mov
in
push
adc
divl
mov
mov
push
jecxz
rorb
lods
push
in
arpl
jge
dec
push
test
test
mov
jge
jecxz
ss
xchg
pop
lock
and
xor
shll
dec
stos
test
outsb
mov
cmc
inc
jns
push
mov
and
pop
popf
test
jne
or
adc
popl
pop
xor
add
mov
jmp
pop
movsl
dec
shrl
lahf
push
fs
pop
mov
or
dec
cmp
xor
jge
stos
outsb
and
mov
fidivl
mov
dec
stos
pop
pushf
loope
stos
vpmovsqd
aaa
cmpsl
adc
mov
inc
sbb
in
and
ret
divl
cmp
sub
or
mov
js
adc
out
loopne
jno
mov
fidivrl
clc
insl
imul
stos
or
sbb
jmp
adc
xchg
cmp
ja
pop
pop
shl
adc
mov
bound
lcall
imulb
jl
jle
xlat
pusha
push
pop
xchg
sub
xchg
mov
imull
add
pop
pop
sub
pop
ljmp
jg
imul
jae
pop
mov
data16
xor
popa
add
adc
cli
mov
out
mov
jg
stos
sbb
mov
pop
push
push
mov
insl
and
rclb
add
jne
lcall
sbb
sbb
sub
dec
aaa
pusha
jp
ss
xchg
or
cmp
test
aam
dec
clc
cmp
pop
cmpsl
cmc
iret
or
mov
add
fisubl
or
addr16
loope
xchg
lds
mov
inc
test
int3
outsl
push
or
or
es
fisubs
dec
pop
or
sbb
insb
mov
ljmp
in
mov
xorl
adc
daa
in
pushl
in
jbe
in
jmp
and
lret
xchg
ret
cs
mov
ja
in
xchg
ret
lcall
dec
lock
fisubrs
add
lahf
mov
test
in
xchg
frstor
inc
fnstsw
mov
jmp
mov
sbbb
pushf
and
jecxz
les
fnsave
xor
xchg
test
sahf
in
insb
add
jp
icebp
into
or
pop
into
and
and
pusha
dec
mov
and
adcb
adc
xor
jecxz
in
xchg
insl
jns
insb
in
pop
dec
push
pmulhuw
pop
jno
xchg
stc
jo
mov
push
push
jnp
sub
push
lods
adc
or
sbb
and
fs
loop
repz
xchg
pop
int3
mov
fildl
pop
and
pop
pop
cli
test
sbb
movsb
cli
dec
mov
pop
xor
sub
ret
lods
cmpsb
clc
jge
roll
adc
lods
gs
je
push
mov
push
popa
cmp
sbb
jno
insb
clc
xchg
pop
jb
fistpll
pop
mov
dec
jl
cmpsl
scas
sti
push
jbe
imul
adc
dec
in
pop
and
pop
in
xor
test
shlb
movsb
inc
aam
xor
aad
mov
or
hlt
sub
out
das
sbb
inc
call
cmp
lds
in
and
dec
ficomps
dec
int
imul
push
addr16
sbb
sbb
and
pop
push
imul
cmp
inc
cltd
repnz
stc
or
sbb
cmp
cmp
jae
cwtl
pop
out
nop
int
loop
and
jmp
add
inc
or
lahf
jns
lret
in
dec
add
jmp
subl
xchg
jbe
bound
mov
xchg
ffreep
rolb
inc
mov
jl
mov
test
mov
cli
xrelease
adc
test
scas
aaa
or
sbb
leave
push
dec
adc
pop
sbb
push
mov
xchg
movsl
push
sahf
js
lret
push
adc
and
lea
sub
pop
pop
cmp
jb
sbb
pop
and
add
jmp
lret
sarl
arpl
and
sbb
fistpll
fwait
adc
push
push
aad
or
cmp
lcall
xor
mov
add
stos
ss
call
sub
hlt
pushf
xor
test
sub
inc
bound
mov
push
mov
repz
mov
jp
mov
push
pushf
cltd
xchg
jmp
inc
imul
rcrl
fs
insb
inc
xor
je
jg
mov
js
repz
sahf
test
adc
push
sbb
push
cmpsl
ficomps
fiadds
xchg
sub
mov
or
mov
aad
pop
mov
stos
add
ljmp
xchg
cmp
and
clc
loopne
adc
lods
push
ror
pop
jno
xchg
fisttps
lock
push
inc
pop
imul
cmp
push
repz
imul
pushf
cwtl
stos
cmpsb
mov
xor
sbb
arpl
push
fwait
mov
popf
insl
mov
adc
daa
shll
or
mov
mov
in
dec
movsl
mov
shll
fdivl
and
mov
std
xchg
nop
push
mov
cltd
xor
mov
fstps
jp
or
dec
sub
push
lahf
mov
movsl
xorb
jl
push
dec
insb
mov
xchg
jbe
xor
pop
int
inc
jb
sbbl
push
insl
xlat
add
imul
lods
and
ja
cltd
add
test
mov
dec
inc
mov
inc
cmp
fs
mov
popf
jg
jge
push
loope
mov
ja
testb
in
fcompl
cmp
popl
aas
stos
xor
and
icebp
mov
inc
jmp
sahf
mov
idiv
mov
imul
sub
in
movsl
mov
xchg
sarl
inc
or
ja
loopne
lock
incl
or
xchg
scas
mov
dec
xor
fists
daa
arpl
mov
jae
fbstp
imulb
lock
adc
dec
scas
cmp
add
repnz
sarl
mov
dec
aad
pop
cli
mov
pop
cmp
mov
cmp
mov
jb
xor
out
std
xchg
push
pop
orb
mov
push
fidivl
stc
mov
mov
mov
stos
jo
lret
and
mov
fidivl
sbb
pop
in
sub
clc
lea
lds
arpl
pmaxsw
xor
mov
add
mov
mov
cmp
pop
pusha
out
and
and
std
mov
out
icebp
pop
and
sbb
mov
xor
mov
adc
nop
ret
push
cli
pop
mov
fnstsw
fdivs
add
fcoms
arpl
or
fs
shrb
dec
pop
sub
jnp
jl
rcrl
rorb
mov
je
ficomps
pusha
imul
rclb
das
pop
mov
out
inc
out
notl
fistps
popa
xchg
mov
jno
test
cli
sbb
jp
mov
dec
movsl
sub
call
mov
push
push
xchg
stc
pop
or
xchg
dec
xchg
decb
test
add
mov
dec
cmp
adc
negb
lods
into
out
or
or
data16
dec
xchg
sub
lret
cmpsb
add
cwtl
stos
arpl
repnz
mov
aad
xchg
mov
or
enter
mov
sti
lahf
pop
pop
pop
imul
cltd
jmp
fs
dec
ljmp
mov
pop
imul
lret
imul
push
fbstp
cltd
jne
mov
fs
call
dec
out
dec
cli
and
addb
dec
stos
jbe
fcomip
pop
mov
jl
cmc
stc
cmp
jg
mov
or
xchg
push
xchg
inc
xor
mov
cmpsb
mov
pop
mov
int3
cs
cld
mov
mov
nop
fisubrs
mov
inc
mov
aas
lahf
in
push
push
aam
and
sbb
insb
push
push
call
sti
clc
inc
or
mov
repnz
cmp
push
leave
data16
xorl
xchg
loopne
pop
inc
mov
xor
xchg
sarb
xchg
sbb
mov
sbb
stos
loope
mov
jne
cmpsb
sahf
ret
add
ds
cmpsb
jge
bound
adc
jo
push
adc
cmp
inc
mov
popa
aam
adc
lea
rclb
mov
icebp
xlat
push
fcoms
lods
in
es
mov
inc
push
jmp
lret
xchg
repnz
dec
inc
lods
pop
cmc
mov
fwait
mov
insl
or
fcmove
mov
jo
adc
xchg
pop
fildl
lret
repz
fbstp
dec
loopne
inc
pop
sbb
xchg
mov
ret
pop
add
xor
add
lret
aaa
lea
das
mov
push
cmp
pushf
adc
mov
js
mov
push
sbb
lods
push
xchg
pop
pop
xchg
les
xor
aaa
and
into
push
pop
notl
cmp
inc
inc
xchg
inc
adc
mov
lock
xlat
pop
jns
rcl
orb
sub
mov
mov
icebp
sub
loope
mov
imul
lea
daa
push
xor
and
xor
stos
inc
cmp
loopne
jge
jmp
les
adc
ffreep
jnp
xor
je
std
inc
cmp
sbb
sbb
pop
add
lret
dec
jns
dec
lock
mov
sub
jns
and
mov
loop
jns
gs
subl
int3
xor
adc
lea
jg
loop
xorb
std
test
jbe
inc
dec
rcr
and
lods
out
jnp
fmuls
inc
pop
clc
call
cltd
filds
dec
mov
push
test
cld
sbb
push
push
lods
jbe
jmp
sbb
sub
xor
xchg
add
out
push
into
push
daa
outsb
sbb
arpl
mov
outsl
scas
repz
adc
or
mov
je
cltd
rorl
lcall
pop
and
lcall
ret
inc
aas
ret
outsl
sti
mulb
jmp
mov
popf
inc
test
insb
sub
mov
shlb
js
jb
push
cli
adc
adcb
or
lods
xor
add
cmp
dec
repnz
jmp
or
xor
mov
cmp
incl
add
or
jg
test
aad
in
inc
ret
xchg
inc
test
out
xchg
xchg
push
jns
stos
mov
adc
dec
lret
pop
lret
mov
jp
in
and
or
add
ljmp
out
xchg
in
daa
and
int
add
sub
add
or
mov
adc
cltd
notb
jmp
or
xor
dec
mov
xchg
cmp
loop
clc
pop
push
cmp
xchg
lods
gs
mov
jb
in
subl
pop
cmpsb
orl
pop
jl
scas
add
pop
add
ret
out
pushf
and
adc
cmpsl
xchg
or
pop
das
lahf
sbb
pop
push
cs
jnp
xchg
adc
mov
mov
cmpsl
fsts
dec
cmpl
pop
sbb
outsl
adc
and
jo
xor
push
stos
cli
cmp
cmpb
mov
jmp
fsubl
mov
sbb
ss
cmpsl
and
sahf
outsl
push
cmpsb
dec
xchg
je
mov
jbe
popl
jns
push
in
lahf
or
jle
imul
xchg
or
jns
mov
ret
ljmp
scas
pop
clc
imul
fistpll
repnz
sbb
pop
cltd
add
add
mov
xchg
lret
jmp
jmp
dec
sbb
mov
xor
mov
cmp
js
pop
jb
sub
xor
decl
mov
fstps
imul
out
sub
scas
mov
jp
jno
push
insl
jb
std
sub
sbb
ss
jmp
rclb
push
cmp
sti
ficoml
int3
or
jo
inc
icebp
lret
mov
sahf
xlat
nop
jmp
fwait
repz
cld
unpcklps
std
dec
mov
test
inc
sbb
sub
les
pop
les
adc
dec
and
ret
xor
xchg
pusha
push
add
pop
push
push
jle
shlb
inc
fwait
das
enter
out
push
js
in
fmuls
pop
push
jns
icebp
mov
ror
adc
lods
and
add
or
sbb
fnstenv
mov
out
cli
mov
inc
cmc
pop
fisttpll
jge
jl
dec
popf
cltd
xlat
fwait
mov
loopne
inc
shrb
mov
int
push
iret
or
xchg
int
mov
pop
inc
xchg
cmovbe
sbb
cmpl
test
mov
add
jo
xchg
mov
clc
cmp
iret
cltd
jnp
xchg
test
gs
popf
mov
or
lret
xor
insb
rcrb
cmpsl
ljmp
lahf
add
pop
loop,pt
push
mov
mov
js
stos
xchg
sahf
out
xor
es
xlat
cmpsb
sub
add
sub
jp
inc
insl
test
stc
cmpsb
cmpsl
mov
mov
mov
scas
mov
cli
cmpsl
sbb
ja
leave
mov
xor
lods
dec
inc
jb
aad
mov
xorl
cmpsb
and
cmp
lds
test
bound
mov
lock
pop
jbe
adc
in
pop
fst
pusha
or
in
imul
jb
lock
pusha
adc
xor
mov
xchg
fs
imul
cltd
mov
js
mov
movups
inc
js
cmc
sub
fcmovb
jns
push
scas
xchg
sbb
adc
sub
push
imul
or
push
addr16
mov
or
aam
fmuls
xchg
push
sub
pop
push
ret
test
and
xor
cld
sbb
xchg
xor
scas
mov
js
mov
push
lock
jb
push
and
lods
lds
arpl
mov
sub
pop
jg
movsl
in
xchg
sbb
jge
shlb
mov
inc
mov
inc
sbb
or
rcr
jle
xor
jl
mov
mov
lahf
sub
sbb
cs
stos
out
jmp
and
dec
or
fdivs
mov
mov
sbb
jbe
mov
xchg
dec
lock
jbe
dec
adc
stc
xchg
add
cmp
add
enter
mov
jl
xchg
jns
xchg
leave
negl
ret
cmpsb
out
sub
pop
pop
int3
stos
add
in
mov
xor
shl
les
out
mov
std
daa
sbb
mov
loop
xor
jae
mov
lret
sti
cmp
cltd
sub
icebp
repz
lcall
inc
lret
xor
xor
sbb
pop
inc
add
push
lods
bound
or
and
xor
pop
jmp
in
rcrb
andb
mov
mov
cmp
orl
mov
decl
lock
rclb
sbb
stos
dec
sub
xchg
xor
mov
ss
inc
mov
in
dec
sub
xor
popa
cli
ljmp
cmc
arpl
pop
pop
arpl
mov
push
cmp
add
aas
inc
loop
les
mov
push
and
hlt
mov
or
out
push
adcl
pop
test
jmp
pop
sub
cli
fcomps
repz
popa
int
adc
jnp
sub
jmp
rorb
mov
push
cmp
mov
fnstenv
pushf
cmpsl
xchg
mov
imul
jae
lds
jnp
adc
xor
jno
and
faddl
pop
flds
scas
sbb
popf
push
shll
fcoml
cmp
sbb
out
aad
nop
jge
inc
mov
mov
lea
outsb
mov
fdivs
gs
push
and
sub
cli
dec
repz
inc
aad
ljmp
subb
xor
clc
sub
add
jo
mov
fxch
add
inc
push
rorl
inc
fnstsw
add
inc
xchg
sbb
cmp
inc
int3
mov
or
push
cmp
aas
push
inc
and
push
outsb
cltd
cmp
pop
push
out
stc
leave
sbb
mov
mov
fstl
loopne
movsb
movsb
inc
mov
xor
xor
and
jge
pop
sub
enter
sbb
mov
insl
sbb
in
pop
push
lret
adc
cwtl
lds
lods
into
fidivs
and
push
jnp
rorb
fisttps
xor
mov
popf
adc
rclb
jle
xorb
mov
sbb
nop
inc
mov
ljmp
jle
push
aas
or
test
cmp
xchg
in
je
push
insl
sub
pop
rcll
js
out
mov
dec
lea
pushl
or
xor
xchg
sbbl
rcll
ds
mov
repz
mov
xchg
scas
aaa
ds
sub
pop
mov
adc
addr16
pusha
sub
adc
das
jo
test
daa
dec
xor
lods
subb
or
lret
and
jnp
call
xchg
dec
aaa
test
add
and
dec
imul
cmp
push
fsincos
data16
aad
cld
and
jmp
add
insl
ret
or
adcb
out
add
fs
xchg
les
test
sbb
stc
push
enter
ss
iret
insb
ret
sbb
mov
cli
bound
pop
sbb
lods
pop
popa
jl
mov
jns
and
test
gs
outsl
in
jle
gs
mov
sahf
sahf
loop
dec
enter
jbe
jp
jg
and
dec
jge
inc
pop
lahf
or
fadd
out
push
push
fcoml
mov
or
fwait
or
aas
lcall
das
cli
mov
pop
cmp
pusha
andb
dec
scas
mov
dec
outsl
xor
ficoml
mov
into
sub
jo
cmp
mov
sar
js
bound
aad
dec
jle
repz
adc
mov
test
cli
mov
cmp
sahf
push
adc
scas
orl
jnp
test
lds
int
out
jo
sbb
mov
lahf
sbb
add
pop
inc
jbe
lcall
mov
loope
mov
xchg
add
ds
push
adc
ss
popf
mov
popf
jbe
xor
sbb
lods
push
sbb
mov
pusha
push
rclb
mov
idivl
push
repz
cwtl
push
xchg
nop
popa
and
push
int3
dec
jae
mov
mov
das
imul
push
std
in
int3
jo
dec
outsl
mov
xor
add
mov
popa
mov
dec
mov
loop
mov
inc
sbb
jo
and
cmp
rcrl
cmc
inc
jo
or
jle
xchg
jl
jns
jl
push
inc
adc
leave
clc
jbe
xchg
addb
add
push
cmpsl
insl
xchg
sub
shll
aam
mov
or
dec
inc
outsl
lods
xchg
jg
add
lock
push
nop
add
inc
ss
pop
mov
outsb
lret
xchg
and
jnp
pop
in
mov
out
hlt
mov
leave
mov
add
or
imul
fmulp
jecxz
xchg
inc
clc
cmp
and
jecxz
subb
cmp
aam
call
jmp
sbb
mov
add
dec
jg
cwtl
clc
fwait
popa
subb
sbb
mov
mov
mov
jne
inc
stos
pop
and
mov
ljmp
psubd
test
hlt
loopne
dec
mov
cltd
popf
dec
pushf
dec
mov
inc
sub
repz
inc
xchg
adc
pop
dec
outsl
repz
jno
adc
or
jg
jns
add
notl
mov
mov
adc
cld
or
mov
rcr
add
popa
adc
adc
clc
int
xor
sbb
mov
out
dec
test
js
mov
jg
data16
mov
mov
shr
inc
outsb
mov
aas
xor
dec
xchg
jl
divl
mov
adcl
popfw
xchg
lds
dec
arpl
sub
cld
addr16
cli
and
hlt
or
ret
js
push
dec
shlb
xchg
rorl
rcll
loope
push
push
repnz
sbb
or
mov
push
jno
adc
sub
sub
jp
in
cmp
mov
dec
mov
sbb
sbb
jg
pop
arpl
mov
shrb
or
and
mov
push
dec
inc
dec
outsb
popa
jle
dec
sbb
lods
loope
sbb
xchg
cmpsb
fbld
in
pop
adc
jg
loopne
pop
lock
aam
xchg
xchg
cmp
inc
ret
jmp
sub
lahf
inc
rol
xchg
shl
dec
cmp
int
shrb
xor
mov
push
mov
fs
sbb
lods
mov
jmp
rorl
mov
mov
sahf
icebp
sub
jp
popf
jle
cwtl
sbb
inc
add
push
cwtl
sahf
xchg
clc
mov
xchg
fdivp
inc
add
cld
testl
and
and
leave
inc
xlat
dec
cwtl
jae
dec
enter
gs
inc
inc
dec
shrb
xor
sarl
jp
push
cltd
das
cld
jmp
or
sbb
cs
dec
jb
shll
lds
test
push
out
stc
mov
out
repz
mov
jnp
hlt
cld
aad
jne
inc
cmp
std
rorb
arpl
fs
and
cmpsl
xchg
mov
movsl
xchg
push
aas
sbb
imul
jb
fldl
push
flds
adc
mov
ficoms
xchg
aas
aaa
int
cmp
pop
out
cli
add
dec
gs
stc
fbld
shrl
rclb
mov
push
dec
mov
iret
gs
xchg
loope
mov
pop
test
in
imul
lea
jne
mov
popf
mov
mov
jg
mov
fs
repz
mov
xorl
std
sbb
jmp
fsubs
leave
andb
mov
or
or
dec
sub
fs
and
lods
pop
jae
push
push
in
loop
jp
fdivrs
mov
stos
push
mov
jg
fdivs
adc
lahf
lret
sub
jl
sbb
fldt
sub
hlt
jle
mov
imul
mov
xchg
jp
cmp
lods
mov
add
xor
jne
xchg
xchg
xor
and
icebp
jmp
mov
xchg
call
pop
cmp
pop
dec
add
mov
jle
inc
movsb
bound
mov
lods
mov
push
and
pusha
or
addr16
or
or
add
jge
in
sahf
sbb
pop
aas
stos
iret
jecxz
add
mov
push
test
jg
out
and
xchg
add
sbb
lret
xchg
fisubl
or
inc
adc
rorl
jae
cld
jo
jbe
add
jae
xor
lods
stos
outsl
aaa
sbb
inc
aas
fdivl
sbb
adc
lahf
popa
int3
and
aas
aam
xor
lock
movsb
test
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
ss
filds
jmp
jl
ljmp
and
sub
xchg
push
adc
xor
fiadds
test
sub
je
lods
mov
pop
xchg
hlt
pop
sub
and
int3
xchg
pop
sub
jae
cmp
and
popa
add
outsl
mov
jl
out
xchg
jns
xchg
mov
xor
sub
pusha
lret
xor
cmp
or
dec
push
imul
leave
notl
repz
jb
pop
mov
lcall
pushf
push
movsb
mov
out
fucomp
call
jle
and
fcmove
movsb
mov
push
scas
roll
lods
int
adc
je
push
stos
mov
jecxz
cltd
mov
scas
fidivl
leave
addl
sbb
sahf
jns
and
jle
in
shrl
aam
outsb
nop
cli
and
xor
cmp
std
sbb
adc
add
mov
out
ja
dec
cmp
loope
mov
int3
xor
mov
or
xor
sub
hlt
pop
push
sti
ja
adc
adc
sbb
lods
mov
insb
call
mov
data16
dec
bound
scas
lods
mov
test
mov
jg
inc
jno
out
xlat
rcrb
push
jl
cwtl
dec
jnp
test
testb
pushf
and
aaa
mov
add
les
fwait
lret
push
cli
ja
push
jb
xchg
mov
test
cwtl
xchg
dec
movsb
cmp
movsb
js
pusha
mov
push
add
mov
sbb
jnp
mov
jne
frstor
popa
add
push
sbb
shlb
cmp
loope
mov
mov
push
push
mov
int3
sub
fwait
mov
mov
push
js
hlt
cmp
xor
mov
xchg
scas
mov
es
xor
ret
push
dec
fisubs
xchg
stos
or
sbb
cmp
movzwl
rclb
jecxz
cmpsb
mov
jb
cmc
adc
adc
cwtl
test
add
xchg
push
mov
out
xlat
cld
push
out
cvtdq2ps
adc
ss
inc
icebp
jno
mov
in
ja
or
push
ret
call
les
insl
sbb
mov
lahf
mov
sub
mov
or
notl
jp
gs
push
push
lods
lods
cli
dec
lret
lods
jmp
movaps
hlt
sbb
aaa
call
dec
push
aam
pushf
cmp
rol
sub
or
fdivl
mov
sub
cltd
jle
fnstsw
in
push
cmp
leave
add
lea
dec
adc
je
mov
inc
mov
inc
sub
rol
in
sbb
xchg
shl
mov
jne
loope
mov
out
mov
cmc
insb
hlt
test
sbb
insb
icebp
ljmp
lods
loopne
adc
pop
cmpsl
push
push
cmpsl
push
mov
dec
sub
frstor
bsr
xlat
sbb
push
mov
lcall
inc
xchg
out
mov
xlat
or
sub
mov
inc
fwait
mov
xchg
push
test
pop
jns
inc
testb
mov
mov
test
leave
push
adc
imul
testb
popf
lds
adcb
repz
or
jno
jp
test
stos
sub
les
mov
cmp
addl
divb
adc
cmp
pop
aaa
xor
or
stos
adc
or
and
sbb
sbb
adc
cmp
fs
es
pmulhuw
pop
shl
pop
fcoml
je
fcomp
xchg
xlat
ret
push
and
fmul
data16
insl
ja
mov
dec
mov
and
push
imul
inc
or
push
xchg
lret
mov
ss
and
pop
pop
fcomip
lods
and
imul
xchg
cli
cwtl
sub
sbb
mov
mov
mov
jmp
xchg
add
xchg
fbstp
loope
lcall
hlt
hlt
mov
loopne
fistps
mov
mov
das
adc
cmp
adc
loop
push
dec
es
mov
sub
push
jno
in
push
pop
out
idivb
jbe
cmpsl
sub
xlat
icebp
insb
push
test
fstl
dec
pop
jecxz
inc
fstpl
jns
testl
pop
pop
rcpps
aaa
add
imul
lret
jmp
mov
jmp
push
dec
jecxz
leave
aaa
sbb
insb
lods
xor
cld
es
xlat
out
pop
out
ficompl
cmp
jb
mov
ffree
jne
aad
pop
into
lret
lcall
out
dec
push
push
fadds
mov
dec
lahf
andb
or
aas
lret
outsl
sub
aad
mov
dec
shrb
dec
popf
lcall
mov
sub
shll
insb
jbe
and
out
cmp
ret
and
adc
push
enter
out
mov
mov
cmp
mov
pushf
pop
ja
int3
loope
js
jge
cltd
or
push
insb
addb
cmpl
repnz
es
cmp
jae
mov
push
mov
sbb
pusha
push
call
dec
jl
lock
mov
sbb
aas
dec
fcoms
add
sbb
mov
ljmp
inc
aad
pop
push
mov
repnz
cmpsb
jp
add
imul
mov
lcall
sbb
cmp
mov
mov
push
test
lcall
cmp
and
dec
dec
xor
fs
push
nop
in
rorb
cmp
in
jns
jae
insb
hlt
add
jmp
stos
enter
or
test
call
fstl
jne
xchg
lea
jno
mov
mov
mov
adcb
pop
push
jne
mov
inc
leave
pop
lea
js
insb
imul
mov
std
add
sahf
inc
ss
lahf
pop
inc
cli
dec
jmp
daa
push
pop
inc
cli
pop
push
jge
lahf
mov
test
out
and
dec
andl
loopne
mov
stos
outsb
pop
sub
daa
mov
stos
decl
mov
xor
out
dec
and
data16
adc
test
mov
in
imul
cmpsl
pop
leave
adc
jne
into
fcoms
push
iret
fs
mov
push
push
or
in
popa
jns
sub
mov
in
stos
hlt
pusha
xchg
repnz
xchg
pop
into
ficompl
add
shll
xor
pop
leave
hlt
cld
mov
adc
push
gs
sbbb
push
sbb
movsl
push
jno
pop
fldcw
fisubrs
mov
cmpsb
mov
ljmp
lea
enter
pop
inc
xchg
popa
jle
and
push
out
das
call
cmp
adc
popf
fcmovbe
and
ret
add
es
add
cmpsb
push
pop
decl
test
subb
mov
or
or
push
add
dec
in
jbe
mov
inc
mov
int3
imul
cs
push
in
shrl
adc
fcomip
inc
pop
loopne
into
dec
mov
rclb
jp
les
xchg
mov
adc
test
xor
push
daa
outsb
jmp
aas
push
xchg
push
negl
jnp
faddp
mov
fsubl
inc
push
loope
fcoms
roll
adc
int
jno
dec
fwait
adc
pusha
mov
out
mov
xchg
and
mov
fadds
div
push
je
or
testb
jecxz
lods
pusha
mov
es
sahf
sbb
lret
add
dec
mov
notl
cltd
xor
xlat
adc
sbb
pop
xor
es
pop
jl
test
jp
je
mov
ss
fildll
mov
xor
mov
inc
cltd
loope
test
call
imul
aam
daa
aad
mov
mov
mov
ret
cmp
adc
aas
jg
stc
idivl
or
les
pop
in
call
pusha
cs
adc
jnp
aad
push
shlb
pop
xorl
out
mov
push
imul
adc
mov
sbb
push
cmp
icebp
std
mov
nop
jne
sbb
xchg
pusha
and
orb
cwtl
pusha
xor
dec
cwtl
cwtl
dec
mov
ss
jle
mov
jge
sub
test
pushf
sbb
cmp
stos
and
fistl
ror
inc
sahf
xor
arpl
fbstp
stos
xchg
sbb
jmp
aad
push
pop
pusha
jnp
push
fisttpl
stc
xor
popf
or
inc
fcomi
xchg
cmp
cmp
push
mov
fsubs
test
jns
sbb
cmp
imul
cmp
fnstenv
jne
clc
data16
mov
pop
xlat
push
pop
lds
xor
jle
arpl
add
daa
jnp
mov
inc
mov
sbb
jecxz
jno
and
outsb
adc
cmc
dec
fstps
mov
mov
adc
and
sub
bound
ds
call
sbb
jl
repz
lea
sub
popf
pop
cmp
pop
mov
ret
out
or
jmp
out
outsl
arpl
call
les
jl
gs
push
cmp
cltd
shll
mov
mov
lods
xlat
mov
enter
lahf
jmp
xor
or
aas
push
pop
xor
xlat
inc
sbbl
mov
js
sahf
dec
loopne
push
and
gs
das
add
lock
shrl
xchg
fcmovnb
push
imul
pushf
jg
push
mov
out
pop
adc
adc
fsubrl
sub
rol
out
pusha
stos
fbld
scas
out
pop
inc
das
jns
in
subl
mov
lea
hlt
mov
inc
mov
or
inc
lahf
adc
mov
roll
inc
push
aaa
fistpll
repnz
push
scas
or
mov
jmp
sub
dec
fwait
dec
mov
outsb
xlat
sbbb
sahf
inc
fmuls
and
mov
mov
bound
pop
loope
pop
outsb
mov
rolb
lods
int3
les
jge
lea
xor
scas
jbe
push
fnsave
mov
mov
pop
push
pop
arpl
xor
mov
pop
xorl
sbb
add
and
pusha
xor
xor
enter
mov
pushf
jl
popf
cld
insb
hlt
scas
cmp
xlat
scas
insb
xor
insb
aaa
mov
and
in
push
sbb
cmc
fcmovb
cmp
sub
insl
mov
sbb
or
ja
xorb
sub
xor
inc
push
in
jge
scas
or
in
lds
and
out
mov
and
fs
mov
adc
outsl
xor
lret
inc
ret
pusha
lret
and
dec
cmp
cwtd
std
out
testl
cmpsl
push
xchg
shl
jmp
rcrb
and
daa
fldt
and
pushf
imul
fsubl
mov
cmpsl
fmul
or
dec
cmp
aam
flds
sbb
out
jp
fidivs
out
repz
xchg
in
shll
mov
push
js
arpl
cmp
das
sbb
cwtl
stos
fistl
jle
cmpsl
adc
and
cmp
rcr
mov
andl
adc
notl
xor
shrb
add
xor
sbb
xchg
lret
adc
rcrl
xchg
aaa
jge
mov
add
movsb
repnz
imul
xchg
xchg
ja
ja
test
mov
pop
mov
jne
pushl
stos
aaa
push
add
and
aas
ret
daa
cmpsb
pop
ret
mov
jmp
pop
in
add
sbb
push
jne
repnz
test
rorl
out
and
lret
and
or
cli
into
sarl
js
xchg
aad
and
mov
mov
mov
inc
outsl
pop
mov
lds
adc
nop
repnz
jmp
lea
push
stos
and
out
pop
or
dec
out
push
leave
cs
push
sbb
cld
sub
and
ja
push
repz
fwait
and
mov
xchg
fwait
cwtl
jmp
xor
xchg
lcall
jg
jg
repz
test
pop
xchg
cmp
jo
test
repnz
sbb
shll
xor
in
movsb
aaa
push
popa
push
in
lahf
or
jnp
xor
clc
movsb
adc
iret
ja
jo
scas
xchg
sti
adc
fwait
and
jo
inc
scas
push
and
sbb
negl
mov
sub
xchg
out
cmp
fcmovb
jmp
push
cmp
js
ds
pop
cmpsl
dec
inc
lahf
push
mov
adc
daa
adc
loope
rclb
mov
sub
ficoml
rorb
int3
loop
pop
and
test
sbb
or
std
lock
pop
pop
sbb
push
mov
xor
cli
mov
scas
addr16
and
push
icebp
imul
cmp
lods
mov
loopne
push
cwtl
cmp
cmc
xchg
jge
sub
jne
lods
aaa
mov
dec
fistps
push
or
and
mov
icebp
andb
faddp
cld
mov
xor
sub
mov
lea
shrl
mov
cmpsb
rcl
cs
mov
mov
dec
insl
mov
mov
stos
aam
lds
pop
call
inc
jae
scas
pop
adc
enter
pavgw
xchg
mov
or
fwait
sub
repnz
out
fucomp
decl
mov
stos
mov
fldcw
bound
add
xor
orl
ds
in
hlt
cli
push
pop
inc
push
test
das
push
fists
das
push
aas
ror
push
pop
iret
mov
fiadds
icebp
mov
fcmovnu
imul
sub
xchg
dec
scas
mov
scas
add
aam
add
adc
leave
fwait
mov
fwait
xchg
aaa
test
pop
jmp
add
sub
mov
sub
or
cvtps2pi
ljmp
test
xchg
or
or
fwait
xor
mov
mov
test
popf
negl
push
inc
repnz
aam
xor
imul
mov
ljmp
sarb
dec
cmp
cmp
jnp
aaa
and
cs
out
mov
ret
enter
mov
pop
fnstcw
aad
mov
push
dec
adc
xchg
std
aaa
mov
shll
sub
rclb
popf
int
out
mov
aam
stos
in
mov
xchg
xlat
shlb
jbe
or
pop
inc
jb
ret
xchg
xor
xchg
arpl
scas
daa
std
inc
addr16
adc
aad
mov
mov
out
adc
loopne
pop
adc
mov
cltd
test
inc
push
pop
xchg
lds
push
push
stos
jns
push
imul
daa
addb
ss
adc
lods
inc
mov
xlat
mov
test
test
loopne
outsb
sbb
cs
je
dec
mov
lret
cmp
fimuls
out
filds
clc
cmp
or
or
jns
lcall
pop
mov
jno
js
std
mov
dec
js
and
push
in
insb
daa
inc
sbb
and
add
stos
jg
les
mov
ret
or
ss
push
or
cmp
mov
hlt
lock
fmulp
sub
lret
mov
mov
push
cmc
aaa
mov
div
jmp
sub
pop
push
ret
pop
jmp
cltd
in
sbb
je
adc
sti
pop
mov
popa
mov
fidivl
xchg
sub
iret
stc
cs
inc
insl
cmp
arpl
fsubrs
dec
fcoml
dec
loopne
out
into
ds
jecxz
lahf
xchg
enter
mov
dec
cmp
stos
call
js
cli
xor
push
cltd
pop
in
xchg
adc
xor
aas
aaa
fadds
jnp
js
or
jecxz
dec
test
inc
fstpl
push
incb
aas
push
jge
cmpsb
pop
lods
leave
inc
jmp
inc
xchg
pushfw
jb
jo
sub
sbb
mov
inc
xchg
jne
loopne
mov
lock
pusha
cmpsb
sub
shll
jl
mov
scas
adc
ja
ljmp
cli
addr16
pushf
lods
loopne
or
add
push
scas
sub
push
roll
adc
out
mov
mov
push
add
xchg
mov
mov
pop
mov
sbb
arpl
cmp
in
xor
add
rorl
mov
inc
and
pushf
jo
jno
test
neg
sbb
rcrb
bndstx
pop
movsb
lods
inc
out
push
lret
adc
or
xor
negb
sahf
repz
orb
pop
push
pop
mov
imul
lar
mov
out
lods
pusha
sub
in
mov
int
adc
fcmovnbe
pop
mov
xor
cmp
stc
and
xchg
xchg
shll
and
scas
or
daa
dec
hlt
pop
mov
mov
lock
out
cmp
cmc
dec
pop
call
adc
ljmp
jns
or
int
out
jno
push
bound
xchg
adc
test
sahf
jmp
sbb
lock
add
xchg
imul
sub
xor
xchg
xchg
fst
lea
sbb
daa
jp
stos
pop
mov
push
mov
in
sub
xchg
add
dec
outsl
jmp
lock
fldl
aam
shll
mov
bound
mov
ljmp
cs
fwait
or
cld
dec
rclb
rorb
xchg
ret
pop
mov
pop
int3
sbbl
stc
lea
out
mov
inc
dec
jo
push
push
lahf
mov
pop
push
sarl
or
es
jo
push
cmp
cmp
fcomi
repz
cmpsl
scas
add
adc
shl
jns
cmc
subb
xchg
inc
ss
mov
es
out
xchg
in
add
orl
jo
pop
pop
dec
ret
add
dec
cmp
pop
and
fldenv
lods
cmpsb
insb
mov
adc
xor
es
or
sub
lods
loopne
mov
ja
sbb
sub
lret
cld
mov
dec
mov
jnp
pop
fisubl
dec
outsb
in
out
mov
jne
sbb
fildll
lock
push
xor
cmp
xor
lea
mov
cs
xchg
mov
fnsetpm(287
pop
out
ljmp
pusha
xchg
std
dec
jp
and
cmp
pushf
jmp
push
jmp
mov
ret
mov
aam
and
cltd
scas
subl
adc
and
inc
push
fimull
adc
mov
adcb
in
jns
loopne
cmp
dec
cli
sbb
gs
or
xor
mov
sbb
fcomps
faddl
mov
dec
mov
push
sub
aam
jae
xor
aas
push
daa
xor
or
leave
lods
inc
iret
sub
sub
push
push
daa
cs
mov
xchg
push
orl
lds
aad
dec
pop
mov
fwait
sbb
daa
addl
xchg
loop
into
cs
cmp
jae
rorl
daa
xor
loopne
jge
sbb
aad
fldenv
push
cmp
ja
xor
bsf
add
fwait
test
xor
incl
imul
push
sbb
insb
scas
fdiv
addr16
mov
loope
add
sbb
sbb
lret
repnz
cli
pop
push
aam
sti
push
fwait
vcomiss
andl
iret
nop
add
leave
int3
hlt
dec
mov
or
jmp
add
ss
pop
popf
cmpsl
inc
leave
sti
jns
pop
lahf
pushf
xchg
scas
jg
lahf
pop
vmread
push
stos
inc
xor
xor
cld
fnstsw
scas
test
rorl
je
add
cltd
push
mov
xchg
jae
mov
sub
cmc
adc
les
rclb
ret
jp
sub
outsl
adc
sahf
popf
stc
enter
scas
mov
iret
push
cmp
icebp
inc
adc
xorb
outsl
fiadds
ja
pushf
dec
ret
test
arpl
xor
jno
pushf
sub
xlat
pop
sahf
mov
or
sarl
jg
jbe
jecxz
inc
mov
mov
push
push
inc
mov
xchg
leave
testb
xchg
pop
lret
in
in
push
cmp
iret
scas
imul
xchg
mov
sar
mov
popf
and
xchg
xchg
scas
pop
inc
push
jl
adc
mov
dec
mov
icebp
daa
leave
mov
cmpsl
pop
jmp
mov
jmp
ficomps
push
imul
inc
cs
popa
xor
movsl
lahf
ljmp
andl
push
pop
scas
cmp
dec
negl
pop
fsub
xchg
aad
dec
js
pushl
stc
mov
rcrb
jecxz
adc
fwait
xor
cmpsb
outsl
std
mov
fadds
test
adc
inc
std
lret
adc
mov
aaa
das
pop
in
mov
mov
pop
rorb
push
notb
call
xor
loopne
inc
inc
ja
mov
mov
addb
push
push
rcl
sub
mov
les
popa
mov
mov
jne
dec
sub
adc
jl
arpl
dec
cmp
mov
jno
ljmp
rep
xchg
adc
sbb
xchg
mov
pusha
jnp
cmp
sbb
inc
insb
pop
inc
add
add
fisubl
pop
pop
cmp
push
lahf
leave
mov
outsb
jno
sbb
shlb
push
adc
push
add
dec
mov
fdivl
xchg
mov
adc
mov
mov
cli
or
push
jnp
add
mov
jge
into
pop
in
cli
jo
sahf
mov
dec
leave
pop
pop
pop
dec
add
stc
mov
sub
mov
or
std
pop
mov
push
dec
add
inc
insl
pop
mov
ror
inc
and
adc
in
or
xchg
addr16
dec
orl
xchg
xchg
lods
pop
rol
insb
inc
shlb
sub
sarb
xor
or
inc
call
aad
or
scas
inc
jno
imull
mov
dec
dec
aam
pushf
mov
push
lcall
add
pop
int3
iret
cmp
mov
in
jb
and
and
dec
cmp
fldt
mov
dec
and
pushf
mov
lahf
pop
lock
mov
dec
add
push
dec
mov
pop
mov
and
mov
mov
repz
gs
add
call
addl
push
mov
in
fnstcw
in
xchg
imul
mov
pusha
sub
xchg
cmc
jns
push
mov
daa
idivl
lock
loop
fnstcw
ss
lret
mov
pop
mov
mov
outsl
loope
jne
test
jns
and
add
sarb
lret
jno
daa
jge
popf
cmp
xchg
aam
mov
rcrl
xchg
inc
adc
xor
into
call
ss
dec
popa
jbe
cmpsl
sbb
sbb
sarb
outsb
xchg
ret
cmp
or
ja
lock
addr16
mov
aam
jae
dec
push
cld
adc
pop
fcomps
test
dec
or
xor
push
stos
popa
fsts
xor
sub
ret
pop
out
mov
lret
mov
xchg
add
test
lcall
repnz
mov
sub
fldt
dec
jmp
mov
sub
sar
dec
push
addr16
xchg
std
arpl
out
rcll
dec
imul
mov
push
add
outsl
mov
mov
mov
les
hlt
pusha
add
sahf
ds
lock
jb
mov
rolb
lea
dec
pop
sub
cld
ljmp
or
imul
outsb
sbb
sub
lds
fldenv
lods
jno
into
or
or
lcall
jo
or
sti
stc
inc
pop
addb
xchg
xchg
push
mov
add
movsb
adc
add
cmp
xchg
push
addb
pop
daa
mov
push
scas
test
mov
shl
xor
or
movsl
xor
loop
jne
test
mov
daa
adc
inc
jnp,pn
sub
test
lcall
xlat
dec
or
inc
jge
insl
mov
jp
pop
pushf
in
lods
out
pop
adc
adc
dec
xchg
in
sub
xor
xor
aad
in
mov
xchg
or
ror
imul
adc
adc
outsb
dec
push
lods
xchg
mov
lock
lods
mov
push
inc
cmp
and
sub
sub
inc
aad
dec
push
jnp
xor
daa
ja
mov
clc
scas
shll
dec
xchg
repz
fs
int3
adc
adc
pop
inc
mov
mov
and
jg
in
cmp
pop
ss
loopne
out
sbb
push
lea
sub
add
dec
lods
mov
fdiv
leave
ja
fmull
stc
mov
cmp
mov
fcoms
xchg
dec
lods
rclb
inc
sahf
icebp
mov
scas
push
push
mov
inc
arpl
dec
stos
out
sbb
and
push
jge
in
sub
sahf
pop
repz
mov
mov
push
mov
pop
out
pop
jl
cmpsb
lock
adc
shrb
arpl
add
rcrb
add
pop
in
pop
shrd
xchg
or
sti
sbb
adc
adc
ret
sub
stos
fnstcw
js
hlt
adc
mov
sbb
sbb
mov
cs
push
fmul
cld
xor
stc
pop
mull
shll
scas
lock
mov
cltd
shll
and
cmpsl
aam
sbb
popa
push
repnz
push
pop
ss
pop
or
test
fsubrl
repnz
loope
iret
sbb
cld
mov
cmp
in
and
pop
hlt
imul
lahf
or
and
stos
push
pop
negl
movsb
sbb
sbb
mov
jbe
adc
push
scas
mov
mov
addl
pop
pop
stos
cmp
in
mov
call
dec
sbb
cmp
push
pop
xchg
insb
stc
fs
lock
mov
sub
sarl
push
push
jo
out
lret
shr
jg
push
cmpsb
int3
sub
pop
and
lcall
lret
sub
outsb
or
outsl
mov
je
gs
in
inc
out
push
jne
inc
push
jmp
jb
int
mov
xchg
mov
adc
shl
xor
push
add
std
mov
subl
scas
inc
ja
push
add
popf
leave
lcall
dec
stos
negb
mov
aas
push
adc
pop
lods
stc
push
leave
xchg
jbe
push
ret
addb
mov
pop
fildl
mov
jae
inc
pop
mov
rcrl
dec
push
jne
aad
int3
adc
in
ficoms
ret
adc
movsl
cmp
sub
outsb
and
cmc
loop
fwait
xor
std
push
ljmp
fsub
dec
cmp
outsb
mov
data16
in
jnp
fsubl
jns
sbb
cmc
inc
test
mov
jge
addr16
mov
lds
js
mov
add
aas
lock
xor
mov
fwait
sti
in
imul
pop
fdivl
movsl
cmp
cmp
ljmp
xchg
aaa
sbb
sbb
sub
mov
xchg
or
pop
jbe
jmp
test
mov
push
stc
or
adc
push
mov
pop
push
and
out
je
sbb
sbb
push
test
or
fs
scas
push
loope
mov
pop
xchg
mov
xchg
imul
rorb
andl
sbb
outsb
bound
lret
hlt
jmp
test
neg
mov
push
sbb
mov
daa
std
fidivrs
pop
pop
xchg
xor
movsb
test
mov
aaa
jecxz
hlt
shrb
push
jns
div
mull
xchg
testb
dec
in
mov
popf
push
lahf
popf
mov
jns
cmp
cld
push
popa
popf
aad
imul
gs
into
pop
mov
jge
iret
fbstp
adc
clc
adc
in
or
or
clc
fidivs
data16
pop
pop
loop
or
iret
outsl
in
flds
lret
jge
mov
scas
loop
xchg
add
sbbb
pop
nop
cmp
mov
sub
adc
push
jb
aam
bound
pop
cmp
pusha
pop
jmp
nop
ljmp
dec
lock
push
ret
xchg
mov
sbb
lcall
aam
pop
push
dec
jbe
xchg
arpl
pop
cmp
adc
mov
int
jb
cmp
add
inc
out
in
test
dec
data16
cmc
ds
dec
iret
cld
daa
mov
movsl
into
rcr
jbe
mov
pop
ja
mov
into
xor
adc
cs
lret
dec
mov
test
pop
test
xchg
mov
xchg
inc
shl
add
jecxz
add
add
ljmp
sbb
adc
enter
mov
mov
pop
popa
movl
dec
pop
xchg
out
mov
fwait
xor
pop
cmc
xor
add
movsl
add
test
aas
dec
and
pop
jae
jle
test
aas
or
inc
fcmovnb
mov
sub
jmp
pop
xor
mov
push
mov
mov
hlt
dec
shlb
movhps
fwait
add
loope
mov
xchg
sbb
shlb
mov
or
fildl
out
lcall
xor
out
cmpsl
mov
ja
xchg
add
xor
dec
aad
push
and
jnp
push
shll
cmpsb
cmpsb
jmp
cli
popa
adc
fisubrs
adc
and
adc
and
dec
stc
or
mov
fistl
mov
pop
mov
bound
fisubrs
aaa
push
out
test
fiadds
jae
data16
jmp
sbb
jge
stos
cld
adc
add
or
mov
adc
dec
cmp
push
movsl
cltd
int
push
dec
int3
ret
cmp
cmp
rcr
push
fidivrl
jae
sbb
push
xchg
cmp
pop
inc
mov
inc
ficompl
andb
push
pop
xchg
jmp
addr16
xchg
inc
psadbw
pop
ret
jp
inc
pushf
insb
add
fildl
gs
push
dec
dec
sub
pusha
push
cmp
leave
jecxz
jo
xchg
sub
vprotq
scas
das
insl
outsl
mov
mov
xchg
aam
mov
and
subl
push
push
fcmove
and
sbb
sahf
pushf
inc
add
or
jns
jmp
mov
mov
repnz
lods
mov
push
lret
cmp
and
mov
xor
jmp
inc
pop
cmp
divl
jmp
imul
mov
dec
mov
and
push
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
in
dec
push
lods
mov
pop
jl
fldenv
inc
fisubrl
mov
jecxz
pop
jg
fwait
push
cld
pop
lods
or
push
jecxz
mov
mov
shrl
jae
arpl
and
pusha
inc
lret
out
add
pop
lret
faddp
xchg
and
and
jg
loopne
mov
pop
and
adc
sub
pop
call
ret
push
push
sub
jmp
jl
mov
lret
jne
jo
push
ret
cmc
test
std
xor
cs
dec
or
pop
scas
imull
popf
lahf
movsl
xor
movsl
int
imul
cltd
sbb
cmp
in
aam
loope
pop
adc
push
test
inc
stos
int3
pop
sub
outsb
jmp
adc
rcl
push
jge
clc
jmp
imul
pop
scas
or
aas
cld
fimuls
std
movsl
mov
jo
out
cmp
clc
inc
fistpll
cwtl
pop
clc
pop
gs
out
je
icebp
ss
xchg
add
out
inc
xor
fwait
shr
test
fidivrl
fs
mov
mov
sbb
inc
mov
pop
push
ret
mov
mov
les
outsl
inc
cmc
sbb
mov
or
push
shr
mov
mov
out
test
add
dec
into
push
xchg
das
xor
scas
shl
addb
lods
xchg
lret
fldl
inc
mov
je
dec
xor
ds
fdivrl
adc
addr16
push
pop
sahf
loop
les
in
and
sub
imul
push
push
jl
insb
outsb
mov
scas
mov
inc
adc
pop
and
add
dec
jmp
adc
or
inc
jl
icebp
inc
cmp
mov
lock
inc
dec
jle
pop
call
imulb
mov
dec
sahf
call
mov
or
jne
lret
xchg
cli
lret
pop
int
aaa
outsl
daa
xor
insl
cs
jl
dec
sti
push
mov
fcompl
cltd
xor
xchg
fidivl
aaa
dec
xchg
adc
outsl
cmpsb
and
and
mov
int
orb
mov
in
xchg
loope
and
push
inc
xchg
repz
pop
mov
ja
int
insb
fs
jbe
leave
test
lods
test
inc
adc
sti
cmpsb
mov
aaa
mov
leave
cld
ljmp
sub
push
mulb
inc
fldl
repz
xlat
add
int
aaa
clc
or
dec
jp
movsb
jp
mov
cwtl
push
pop
add
sbb
dec
movsb
jp
leave
insl
dec
cwtl
mov
push
negb
sbb
mov
mov
lock
sub
jl
insb
cmc
clc
mov
add
inc
lret
cmp
es
mov
sbb
in
out
mov
mov
aad
cmp
fmuls
scas
div
and
iret
pop
clc
push
bound
cmp
fmuls
inc
lea
cwtl
add
xchg
notb
out
dec
mov
sbb
pop
les
add
xor
mov
mov
les
push
fildll
shl
and
dec
lret
das
or
xlat
jmp
ljmp
ja
das
loope
add
sbb
and
push
rolb
xor
adc
dec
mov
adc
insl
pop
cmp
adc
inc
das
and
or
in
mov
and
push
loope
outsb
adc
aad
loopne
sarb
andl
cld
pop
jae
movsl
jbe
or
or
mov
pop
ja
add
xor
nop
xchg
jge
jmp
imul
loop
xor
sub
jne
jnp
lcall
fdivs
mov
or
push
cmp
jl
shld
loop
cmp
push
mov
sbb
cmpsb
mov
std
insl
cwtl
loope
rcll
push
inc
cli
jl
sti
arpl
xchg
fidivl
mov
lret
nop
sbb
insb
xchg
xchg
popf
mov
clc
add
sub
and
into
mull
decb
out
and
push
inc
shrb
pop
iret
cmp
daa
call
cltd
sbb
in
mov
push
mov
sub
lahf
and
movsb
cmp
pop
je
pop
sarl
mov
inc
and
sub
rcll
mov
rcr
sbb
pop
cmp
mov
sahf
push
xchg
sbb
xor
pop
cmpsl
cmp
lock
xor
aad
in
inc
retw
push
stos
gs
add
sarl
mov
shll
aam
not
mov
adc
aaa
pop
hlt
scas
add
jge
arpl
dec
iret
pop
stos
xor
adc
xlat
cmp
and
iret
xor
fcmovne
ja
jmp
add
cmp
jns
or
orb
shl
jp
arpl
sar
jle
ja
in
pushf
or
pop
loop
fs
iret
icebp
xor
lret
dec
test
sub
in
dec
xchg
clc
sub
icebp
cmc
and
int
lahf
stc
mov
fld
jmp
mov
leave
adcl
mov
popl
sar
xchg
pop
pop
mov
std
adc
adc
cmpsb
or
cltd
dec
fwait
jecxz
add
rclb
das
lock
jp
movsl
ja
flds
xor
mov
push
pop
pop
jmp
jle
xor
pushf
sub
sub
and
or
pop
leave
into
adc
xor
push
mov
sbb
cmp
lds
stos
filds
jge
dec
jmp
or
xchg
aad
inc
push
mov
test
pusha
cmp
lea
popa
dec
xchg
pushf
adc
lcall
mov
inc
lcall
mov
idivl
lahf
sbb
mov
lret
ss
and
popf
adc
dec
pop
add
mov
ret
test
movsl
adc
push
outsb
js
mov
mov
nop
cmp
pand
lcall
push
dec
sbb
pop
mov
das
lret
adc
pop
pop
pop
cmp
sbb
adc
aaa
push
lds
testl
inc
test
xchg
in
jl
inc
mov
lea
lds
cld
or
es
mov
lahf
jae
addl
adc
jne
xor
es
mov
inc
jns
and
jne
inc
jp
adc
arpl
dec
bound
mov
in
daa
cmc
jmp
mov
scas
repz
jmp
adc
sbb
jge
xchg
std
sub
dec
mov
sahf
adc
pop
pop
inc
mov
xchg
xchg
sarl
mov
imul
xlat
jo
in
and
out
dec
movsl
outsb
jge
sbb
pop
cmp
rorb
cmpsl
out
imul
add
push
insb
mulb
stos
mov
insb
stc
mov
mov
xchg
fistpll
cli
sbb
mov
jge
mov
mov
inc
push
pop
cmp
les
lds
sbb
add
pop
cmpsb
dec
ret
addr16
pusha
mov
mov
in
in
fwait
test
sbb
jns
ret
cmp
mov
loope
enter
mov
jbe
push
lods
xchg
jp
pop
dec
div
mov
fcomi
leave
push
js
ss
push
mov
lods
or
jl
in
push
lods
ficomps
dec
fcomip
rorl
fsubl
hlt
xor
mov
dec
jns
sahf
jae
nop
stos
add
fscale
pop
out
xchg
sbb
cmpsl
xchg
popf
sub
out
push
xlat
jl
dec
or
push
inc
scas
mov
iret
pop
jo
mov
cmpsb
xor
or
and
xchg
fwait
cmp
enter
mov
movsl
icebp
leave
rcrb
test
ss
sub
fwait
aaa
stc
test
repz
outsl
push
aaa
cs
sti
rcl
notb
and
dec
mov
jnp
jg
or
fcmovb
push
nop
mov
repz
and
push
jnp
lock
mov
test
jecxz
loopne
fbstp
mov
mov
mov
cs
inc
mov
cmp
xchg
mov
in
push
test
jg
mov
psrlq
jnp
aam
jl
out
sub
jnp
ljmp
neg
sbb
stos
xchg
stc
ret
test
jmp
jg
dec
insl
subl
mov
sbb
push
lock
mov
xchg
push
int3
xchg
add
ja
loope
mov
lahf
cmpsb
xchg
dec
lcall
mov
into
in
xor
sub
xor
sbb
pushf
push
jp
lret
push
test
xchg
js
imul
pushf
int
or
mov
push
testb
mov
pop
addb
mov
movsl
enter
outsb
pusha
imul
pop
rcrl
xor
push
mov
cmpsb
out
mov
insl
pop
mov
inc
or
xchg
inc
push
iret
inc
pop
mov
jns
pop
xor
fwait
mov
push
mov
mov
pop
xlat
mov
and
adc
jp
les
inc
loopne
cli
out
sarb
xchg
outsl
xchg
dec
sub
cmpsb
rcl
or
or
fadds
jns
shll
mov
fistpll
pop
rorl
push
ljmp
cmp
outsb
mov
jp
cld
fiaddl
cmp
repnz
movsl
xor
in
jge
pop
enter
push
loope
in
add
fldl
pop
sbb
insb
out
push
dec
loope
push
shll
adc
lock
test
call
jl
pop
and
std
fstpl
out
mov
in
inc
adc
aam
dec
nop
dec
lods
adc
add
and
push
in
clc
mov
out
std
sub
xchg
loopne
mov
push
dec
stos
je
rclb
inc
xchg
cld
shrb
in
sbb
gs
dec
sahf
pusha
sbb
sub
xchg
hlt
das
lds
in
mov
mov
popf
jp
xchg
call
dec
or
outsl
cmp
jo
xchg
push
sub
push
and
jp
sub
lret
mov
lcall
leave
sahf
dec
mov
jecxz
stc
lcallw
test
adc
xor
adc
orb
push
aad
mov
insl
lods
mov
jp
jbe
lods
dec
call
xor
push
mov
in
rorl
lcall
lods
rcr
jb
int
stc
and
lods
xchg
mov
nop
adc
clc
gs
lods
ss
xchg
dec
mov
xchg
add
call
jge
mov
mov
mov
sbb
lea
lds
pop
cmp
jno
aaa
andl
mov
sbb
mov
push
xchg
jle
hlt
outsl
xor
or
lret
jne
xor
lods
mov
sarl
in
dec
pop
xchg
inc
hlt
or
xor
enter
lds
test
insb
outsl
cli
jl
adc
pop
fdivp
mov
ljmp
in
in
jg
mov
adc
fnstcw
adc
or
lahf
into
sbb
fildll
add
jmp
sub
add
cmpsl
pop
or
fcoms
pop
pop
out
inc
add
add
arpl
inc
ljmp
sub
add
fsubs
jecxz
ror
testl
adc
popf
xchg
and
xchg
sub
or
push
mov
mov
ja
sbb
lds
ret
testl
arpl
jp
lahf
xor
xor
mov
mov
mov
cmp
jne
add
jae
add
mov
jl
or
sub
jp
jnp
mov
jae
stos
popf
inc
mov
xchg
adc
cwtl
daa
or
adc
or
dec
sub
sub
mov
out
xor
push
setle
icebp
and
push
arpl
jo
std
ljmp
dec
pusha
push
int3
ret
or
mov
xor
adc
xor
push
fwait
and
mov
frndint
cmp
push
out
fists
jae
inc
sbb
and
dec
pop
rcl
cli
scas
insl
push
add
dec
stos
jbe
in
cltd
xchg
ret
loope
mov
lahf
inc
fiadds
jbe
and
imul
js
mov
fucomi
jecxz
call
jmp
ds
jne
arpl
xchg
iret
sbb
xor
imul
fmul
les
or
pop
adc
push
push
inc
push
repnz
adc
movsl
dec
xor
mov
cmpsb
mov
das
mov
fcmovb
adc
mov
sahf
ds
xor
lahf
sahf
mov
outsb
mov
jl
mov
mov
es
stos
fdivl
adc
cmpl
add
and
stos
mov
dec
dec
sahf
sub
pop
mov
cvtps2pi
aam
lcall
fistpl
inc
int3
mov
adc
jl
cmp
mov
out
loope
shlb
adcb
fyl2x
shlb
jl
daa
lods
pop
push
fwait
mov
jmp
test
ret
mov
mov
hlt
mov
lret
or
psllw
stc
lea
cmp
pusha
repz
inc
dec
adc
mov
ljmp
test
incl
or
jb
ret
sub
push
cmp
add
jns
rclb
cmpsb
aad
lock
test
or
dec
sub
dec
popf
jp
daa
ret
dec
fildll
jge
lods
add
push
ficompl
repnz
imul
dec
clc
dec
dec
push
dec
inc
sub
jge
mov
rcrb
subb
loop
fisttps
mov
sbb
shrb
sub
std
jnp
movsl
or
inc
and
dec
add
outsb
loopne
push
adc
fidivl
sub
shl
mov
xchg
xchg
jne
lods
mov
mov
inc
sub
mov
pop
mov
inc
cmp
jns
mov
pop
lea
jecxz
cmp
and
or
scas
rcl
adc
jbe
in
sysret
jno
repz
adc
push
mov
mov
mov
aad
mov
push
jg
xor
outsb
lcall
sti
pop
inc
push
in
nop
ret
lods
jno
dec
movsl
fsubrs
in
in
stc
test
push
mov
push
sub
add
pop
sarb
fisttps
sbb
and
mov
clc
dec
dec
inc
or
clc
sub
stos
xchg
das
stos
fistpl
test
cmpsl
icebp
shl
bound
push
push
sbb
or
mov
cmp
mov
subb
out
insb
addl
push
jge
rorl
jnp
jo
and
jbe
loop
sub
cwtl
mov
pop
nop
mov
daa
mov
fdivr
pop
gs
mov
and
mov
inc
aas
aad
in
je
scas
mov
sbb
popf
mov
mov
mov
enter
mov
xchg
fld
mov
popa
mov
test
hlt
bound
push
or
dec
shl
adc
and
cmpsb
outsb
and
sub
mov
fisubl
pop
std
fwait
in
lock
mov
push
into
mov
jne
pop
outsb
cmp
pushf
pop
insb
adc
dec
sbb
jle
fwait
mov
sbb
pop
jecxz
lods
sar
lods
andb
xchg
push
repz
enter
mov
adc
fstl
and
adc
adc
adc
fdivl
clc
mov
mov
sub
into
sub
and
shrb
mov
xor
test
inc
or
jmp
push
out
movsl
icebp
xchg
int
shrb
dec
pop
cmp
aaa
pop
push
das
ja
out
add
enter
dec
xchg
gs
inc
stc
mov
sbb
mov
nop
hlt
das
or
xchg
pop
inc
pop
mov
push
sub
sub
sbb
sbb
dec
pusha
inc
pop
xor
xchg
mov
repz
data16
add
loope
ja
mov
mov
push
or
xchg
push
gs
repnz
mov
jl
testb
jge
mov
jle
ret
addr16
lds
inc
and
sub
rcr
push
imul
xchg
in
scas
dec
jb
push
mov
ret
xlat
jns
cltd
cli
xor
xor
xchg
jb
mov
aam
xchg
jbe
pop
lcall
ds
stc
xor
xchg
mov
lods
jno
int
cmp
test
xor
sbb
mov
je
clc
ss
cmp
or
mov
out
lret
roll
ss
fdivp
in
adc
test
adc
mov
sti
and
aaa
stc
lock
pop
push
insl
xchg
push
push
jnp
inc
shrb
mov
call
inc
hlt
jmp
loope
aas
mov
mov
loop
js
popf
cltd
cs
aaa
xor
inc
cmpsl
mov
mov
sbb
lods
mov
or
shll
in
cmp
sub
push
mov
pop
outsl
adc
sti
arpl
cltd
out
mov
bound
outsb
or
adc
jnp
shll
into
mov
dec
pop
outsb
dec
sbb
ret
dec
dec
jecxz
mov
lea
pop
xorl
xchg
pop
lahf
int3
cld
push
sbb
into
jp
mov
fwait
cmp
sbb
or
dec
fnsave
bound
lret
ret
sahf
adc
adc
mov
fdivrs
xorb
jmp
mulb
push
mov
lds
sub
scas
ret
xor
add
repz
lret
out
outsb
mov
sub
repz
jo
add
loop
test
cmp
inc
or
iret
jno
das
pop
popf
cmp
jo
andb
pop
loopne
movsb
int
pop
inc
leave
dec
adc
sub
gs
sar
inc
loop
and
inc
ds
mov
mov
mov
fs
loop
sub
jnp
jo
mov
mov
imul
mov
insb
mov
xor
add
add
fidivs
dec
pop
jno
pop
je
mov
shlb
in
xchg
mov
jl
cmp
fcmove
dec
clc
inc
cmpb
xchg
fisubs
push
xor
enter
std
jp
or
das
and
clc
xor
lret
lret
push
sub
sbb
pop
sub
rcl
fldcw
inc
subb
adc
mov
lahf
hlt
loopne
mov
kmovb
dec
div
rcl
jge
mov
pop
movsb
mov
cwtl
mov
test
ret
orl
dec
sub
into
mov
aaa
aam
aas
mov
lock
adc
or
lds
mov
ja
mov
dec
iret
xchg
ja
jmp
adc
nop
sbbl
jne
sbb
seto
mov
aaa
iret
xor
xor
test
gs
adc
addl
jge
subb
xchg
cmp
arpl
jmp
sbbb
push
cmc
sub
fwait
shr
imul
add
xor
pop
and
mov
mov
data16
add
loope
cmc
loope
adc
push
push
xchg
out
adc
cwtl
out
and
dec
mull
mov
mov
xor
push
into
cmp
mov
out
icebp
mov
out
mov
push
xchg
iret
xchg
or
aas
mov
push
outsb
mov
adc
ret
xchg
xor
or
inc
aam
jl
es
scas
push
out
push
pop
les
test
rcl
pusha
jb
cs
and
inc
mov
jl
xor
pop
jge
out
ja
lock
daa
inc
iret
jne
out
and
fdivp
inc
xor
out
mov
fistps
mov
rcll
xor
lea
pop
int3
sub
jo
shll
dec
gs
dec
lahf
out
mov
push
mov
dec
dec
lods
xor
pop
adc
adc
cmp
and
mov
push
dec
loop
sbb
leave
fcmovbe
mov
mov
sbb
sub
mov
mov
testl
in
movsl
sub
cltd
mov
lret
movsb
aad
lcall
test
inc
sub
shrb
stc
es
add
xor
and
in
pop
pop
inc
int3
insb
inc
aad
mov
rorl
inc
and
sbb
insl
xchg
in
les
pop
cmp
adc
pop
mov
mov
and
icebp
push
mov
and
pop
xchg
or
lret
into
inc
sub
mov
jns
mov
xor
pop
repnz
repnz
out
mov
mov
jnp
xchg
js
push
xlat
imul
arpl
sbb
hlt
mov
in
ret
jns
enter
in
jp
add
outsb
xor
xchg
push
je
inc
sub
inc
negb
test
outsl
outsl
aas
jp
mov
and
lods
in
mov
mov
leave
mov
mov
test
jns
mov
push
add
fiadds
jbe
jbe
int
or
outsl
data16
xchg
cmpsb
mov
mov
jae
dec
stc
add
dec
pop
push
mov
rep
cmp
or
push
repz
adc
mov
xor
mov
out
stc
xor
in
push
xor
mov
dec
sbb
mov
cwtl
jmp
mov
mov
in
scas
inc
mov
sbb
fistpl
mov
add
xor
dec
incb
pop
add
push
or
rorl
jbe
mov
lahf
pop
add
lock
movsb
in
loope
adc
int
mov
fnsave
xor
or
mov
and
insl
call
arpl
add
test
stos
fstpt
xchg
mov
lret
pusha
or
cmpsl
or
push
insl
imul
jmp
cmp
rcll
sub
sub
outsl
mov
gs
lret
push
in
js
and
test
xchg
sbb
cmp
repz
nop
sbb
xchg
inc
rorl
adc
testb
or
scas
ret
clc
js
mov
mov
mov
out
enter
fninit
adc
add
adc
sahf
push
mov
pop
into
xchg
ss
cmp
mov
repz
dec
fldenv
dec
jecxz
sahf
dec
xchg
cmp
inc
dec
pop
xor
mov
pop
cmp
mov
xchg
sarb
popa
movsb
jp
call
scas
ret
mov
sti
xlat
cld
cld
mov
sbb
das
imull
ja
push
xchg
mov
negb
orl
lea
fdivl
ss
mov
ret
fwait
cwtl
jns
stos
call
add
xchg
push
mov
or
loopne
test
ds
cmc
jle
mov
data16
loope
jp
cmp
push
inc
add
push
cltd
xchg
sub
pop
clc
inc
movsb
sub
mov
inc
xor
mov
cmp
hlt
xor
xchg
and
or
add
or
and
cmp
mov
int3
inc
pop
cmp
je
imul
shlb
and
stc
push
cld
mov
fisubl
dec
nop
loope
jne
add
in
sbb
ja
pop
jo
js
mov
adc
dec
mov
popf
out
jmp
je
xchg
mov
cmpsb
jecxz
std
js
or
neg
ljmp
out
imul
dec
test
cmp
lea
push
jne
lods
sub
popa
fwait
push
mov
adcl
push
pop
pop
sub
jbe
mov
out
push
mov
and
xchg
push
std
mov
repnz
fsubl
add
std
sub
outsl
das
aas
sarl
mov
and
insl
stos
and
arpl
div
push
fstl
jno
in
call
add
mov
in
mov
sbb
sbb
loope
mov
loopne
push
sub
cmpsl
xchg
aam
and
or
stos
pop
inc
add
xchg
add
lret
inc
popa
mov
lahf
repnz
aad
call
mov
lret
negl
adc
fs
inc
pop
xchg
lret
fildll
cwtl
loop
xchg
lret
pop
jg
sti
push
pop
sti
popa
inc
outsl
mov
sub
inc
inc
push
stos
cmpsb
pop
mov
loope
xchg
inc
adc
push
aaa
mov
rorb
mov
jecxz
mov
xchg
xor
and
dec
push
rcll
sbb
and
jecxz
sub
lods
js
dec
jbe
jne
test
and
cmp
cmp
cmp
scas
ds
fists
outsl
mov
adc
cmc
loope
and
push
pop
call
mov
scas
pop
fbstp
ljmp
lds
cmp
xchg
fiadds
push
cli
and
or
stc
pop
les
xor
in
mov
lea
mov
orb
mov
loope
iret
dec
or
dec
adc
imul
mov
in
loop
sbb
scas
imul
inc
xchg
popa
sub
lds
arpl
xchg
cmpsb
int3
stos
test
dec
fimull
mov
sub
lcall
or
lods
mov
addr16
dec
mov
sarb
inc
ficoml
mov
adc
xor
xchg
mov
cmpsl
call
insl
jmp
lock
in
sub
cwtl
xchg
sbb
adc
cmp
mov
mov
inc
cmpsl
lret
gs
fxch
mov
and
or
inc
mov
sahf
sub
sbb
mov
jnp
lods
inc
sahf
movsl
mov
and
and
sbb
cmp
and
and
data16
push
scas
mov
jae
adc
enter
mov
add
push
fwait
out
sbb
fcoml
adcl
sub
mov
shl
jp
mov
jmp
push
xchg
stos
inc
jecxz
sub
dec
addr16
es
rorb
lahf
imul
jnp
or
push
xchg
test
ja
int
cmp
inc
mov
and
test
popf
std
dec
lea
and
mov
lods
fiadds
outsb
add
adc
clc
jns
stos
loop
arpl
push
ret
and
push
jecxz
aam
pop
adc
fcompl
pop
push
out
nop
scas
sbb
ja
mov
imul
adc
stc
int3
sbb
ss
int3
dec
addr16
add
shrb
and
rorl
stc
mov
loopne
cpuid
in
aaa
mov
test
adc
sbb
in
leave
push
aas
mov
test
pop
jne
faddl
insl
clc
mov
mov
loope
pop
jp
addr16
into
sbb
lea
mov
xor
mov
mov
movsb
cmpl
jne
fdivrl
je
jo
jl
arpl
pop
xor
repz
dec
mov
scas
scas
fdivs
pusha
cld
cwtl
inc
loop
mov
mov
mov
ss
nop
outsb
mov
pusha
mov
pop
and
sbb
xor
jb
stc
cmpsl
pop
sbb
xchg
mov
push
sub
out
jae
sub
xchg
xchg
and
scas
mulb
jns
sub
jno
out
inc
and
outsl
mov
mov
mov
leave
adc
sbb
mov
pop
mov
mov
add
call
sbbb
xchg
addl
lds
add
jo
jle
insb
notb
jge
mov
add
inc
fiadds
loope
out
sbb
lock
jns
je
inc
add
xorb
inc
ret
sub
cmpsb
cltd
cmp
adc
insb
inc
insb
xorl
lret
push
mov
push
push
sbb
out
push
ficompl
mov
les
loopne
mov
repz
sbb
std
fcomp
push
fwait
aaa
add
cmp
pop
cwtl
mov
bt
out
lock
hlt
push
aad
push
adc
adc
stos
nop
cmpsl
xchg
cli
jle
adc
mov
into
cmpsl
jl
sub
popf
fldt
ljmp
dec
rcrb
jnp
imul
jg
or
loop
popf
or
scas
jns
cmp
fldt
mov
sti
inc
das
jns
dec
push
mov
sbbb
push
and
aas
mov
push
fcoml
push
test
ds
mov
insl
xchg
add
cs
lahf
push
lds
adc
movsl
mov
xchg
dec
push
adc
out
pop
pop
pop
cli
mov
mov
or
jo
test
push
rcr
loop
rorl
sub
aaa
es
and
gs
mov
jo
clc
ficoms
mov
push
test
jle
out
pop
mov
xchg
sbb
and
fidivrs
scas
or
dec
rcll
pop
jge
js
aad
and
push
stos
mov
lcall
and
daa
int3
dec
das
je
adc
lea
sub
loop
or
cmp
ss
push
notl
inc
int3
imul
lret
jbe
cmp
popf
cs
pop
icebp
fdivrl
dec
ret
stc
cmp
or
jmp
dec
and
scas
shrl
adc
pop
inc
dec
gs
mov
andl
fdivrs
adcb
mov
shl
sahf
or
leave
lods
cltd
mov
jb
xlat
lock
insl
xchg
adc
add
test
jg
mov
and
push
or
push
xor
sub
pusha
pop
fildl
pop
ret
lods
sub
push
mov
add
adc
jo
add
push
das
pop
das
jo
push
mov
jmp
sar
mov
int3
aas
cmp
push
adc
bound
fisttpll
or
and
ljmp
pusha
icebp
stos
dec
shld
rclb
std
add
mov
push
nop
sbb
jp
leave
mov
jnp
xor
out
xor
lret
int
fisubrl
loopne
fiadds
lds
push
xor
or
push
scas
fldt
fisubs
shl
ficomps
push
adc
bnd
and
push
rorb
push
mov
les
jb
dec
sbbl
arpl
inc
or
test
push
cmp
scas
test
cli
je
adc
dec
mov
rol
mov
icebp
sub
ss
sbb
popf
movsl
dec
daa
scas
hlt
ds
cmp
push
in
or
pop
jno
fiaddl
pop
mov
push
or
rolb
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
xchg
loop
lcall
std
mov
cwtl
or
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
adc
mov
addb
cmpsl
push
scas
push
sub
mov
idivb
sub
out
insl
mov
pop
mov
fdivrl
push
rorb
out
mov
or
movsl
push
mov
in
in
sbbl
mov
pop
adc
xor
scas
out
xchg
pop
add
out
popa
add
dec
xchg
and
out
sub
pop
nop
inc
pop
ljmp
push
in
ret
cmp
push
mov
adc
xor
sub
repz
sahf
mov
push
iret
ss
insb
lods
sub
js
jmp
loopne
add
mov
lods
inc
out
or
lahf
mov
cwtl
sbb
sub
loop
int
mov
stos
sub
and
mov
xor
jg
lret
cmp
dec
pop
dec
iret
or
loope
and
enter
roll
sub
pop
mov
fs
dec
add
cli
imul
push
callw
lods
push
ljmp
aaa
repnz
cli
push
or
pop
lcall
xlat
cmp
push
cmpsb
dec
cmpsb
mov
std
dec
or
mulps
push
cld
or
cltd
jmp
cs
stos
es
sub
incb
adcb
dec
add
xor
mov
ja
out
mov
ljmp
les
daa
call
sbb
fdivs
ficoms
outsl
or
lea
leave
pop
mov
cmp
xchg
imul
mov
jmp
int
cmp
sub
inc
int
jae
or
imull
adc
xchg
xchg
ficompl
xlat
or
inc
in
mov
mov
lret
lcall
mov
dec
xorb
test
xchg
rorb
mov
loopne
rcl
iret
outsl
mov
lret
jbe
insl
fldenv
jl
pop
fcmovnb
pop
push
cmp
mov
ficompl
mov
mov
mov
xor
int
cmp
push
add
ljmp
js
add
ds
cmpsl
or
mov
popa
sub
push
ret
dec
aaa
movsb
mov
mov
lock
leave
cmpsb
imul
std
aam
jl
cld
dec
sti
sub
and
fistps
popf
push
mov
adc
pop
sahf
psllq
es
and
repnz
xchg
pop
out
popa
aas
sub
cs
std
in
or
xchg
in
mov
negb
in
aam
les
add
clc
rcll
aam
mov
popf
lock
das
xchg
cmp
scas
fwait
mov
pop
popf
popf
cmp
nop
pop
fucompp
es
ds
and
mov
mov
xchg
jle
or
sahf
incb
cmpsb
movsb
cs
jns
shl
sub
lret
fwait
cli
lods
adc
hlt
insb
mov
loopne
js
add
adc
jl
fnstsw
push
sbb
push
jecxz
js
roll
pop
orb
jl
cmp
jg
pop
idiv
inc
mov
add
or
cmp
sbbl
repnz
dec
cmp
ficompl
ret
dec
or
in
add
adc
outsl
in
ds
hlt
mov
loop
xor
add
scas
add
mov
mov
insb
adc
and
add
aad
xor
add
iret
mov
inc
sbb
int3
adc
cld
pop
imul
pop
adc
aaa
sub
arpl
test
cmp
push
pushf
pop
or
mov
mov
pmuludq
inc
in
movsl
mov
in
clc
mov
pop
pop
pushf
sbb
adcl
imul
pop
lcall
pop
xchg
ds
xor
in
call
xor
stos
sbb
fs
xor
xorb
sbbb
lcall
je
sbb
adc
je
aas
or
adc
test
pop
mov
addr16
mov
mov
aaa
sub
mov
add
xor
sbb
sub
lods
fs
xchg
mov
js
xorb
and
pop
repnz
push
jnp
enter
mov
add
cmc
cs
xchg
inc
cmp
and
and
sub
out
push
push
jo
int
pop
fdivl
stc
push
rorb
aas
xchg
setb
ljmp
cmp
leave
fdivrs
mov
and
repnz
into
fwait
mov
and
mov
test
inc
pop
inc
call
popf
loopne
enter
inc
rorb
loopne
mov
xlat
iret
repnz
add
add
jmp
mov
lahf
fyl2xp1
movsl
inc
iret
das
loopne
paddusb
movsl
xor
into
push
cwtl
pop
xchg
hlt
mov
push
fdivs
call
inc
mov
xchg
shlb
out
mov
scas
xchg
inc
repnz
lds
icebp
popa
add
cmp
sarb
xchg
mov
scas
jno
leave
sub
lock
sub
lds
repz
mov
cltd
mov
les
mov
mov
ret
cltd
inc
jae
mov
imul
lds
lea
fwait
out
inc
push
outsl
mov
fs
mov
adc
gs
xchg
cmpsl
pop
test
mov
rcrb
cmpl
mov
jmp
rorl
dec
adc
cmp
inc
pusha
xchg
xlat
cli
and
cmp
sti
gs
rcl
nop
push
cltd
and
push
inc
rorb
nop
iret
jge
pop
orb
sbb
adc
dec
adc
lods
xor
icebp
fsub
aam
push
ret
and
data16
jg
and
subb
add
xchg
and
mov
xchg
jae
mov
or
test
and
je
xor
push
imul
jp
lock
sbbl
cmp
mov
imul
pop
in
inc
leave
pop
shrb
out
mov
and
mov
add
dec
xchg
out
mov
mov
pop
pop
pusha
xor
and
xor
and
pop
pop
rcll
xchg
pop
mov
jmp
and
leave
and
int3
aam
cwtl
cltd
mov
das
or
xchg
lods
pop
das
mov
or
lods
dec
pushf
aaa
sub
mov
and
lcall
push
in
test
xchg
xchg
push
out
push
in
testb
aam
in
or
lcall
and
add
push
das
jb
xor
inc
mov
mov
mov
mov
mov
cmp
add
or
mov
psrad
sub
xchg
inc
xor
xor
test
and
int3
xor
adcb
dec
adc
jne
mov
decl
pop
adc
std
dec
popf
cs
mov
push
popf
pop
call
negl
test
pop
sbb
ja
jbe
in
movb
or
jno
out
push
mov
arpl
and
jge
cmpsl
std
or
stc
sti
fimuls
adc
lea
mov
sub
sbb
loop
out
inc
stc
xor
mov
inc
pop
pop
mov
mov
add
push
jns
popf
xor
cmp
dec
out
popa
sbb
cld
movsb
add
aad
ret
nop
cmp
das
stos
fcoms
jbe
jg
pop
xchg
lret
jmp
pop
lods
inc
cmc
loope
push
je
and
cltd
pop
mov
int
cmp
jp
and
dec
lods
sub
jge
xchg
idivb
cmp
cli
mov
dec
xor
lock
pop
cwtl
push
lcall
fisubrs
sub
mov
cmpsb
pop
jno
or
mov
data16
sub
movsb
xchg
inc
or
mov
mov
stos
push
or
mov
mov
mov
lcall
outsl
fs
movsb
mov
sub
adc
js
add
push
js
pop
mov
cmp
nop
fsubl
add
shll
inc
pop
cmpsl
lret
sub
mov
pop
inc
sbb
call
lret
iret
hlt
cli
xor
and
push
or
jnp
push
lds
stos
cmp
xor
push
xchg
sub
or
push
mov
xor
test
je
cmp
add
fcmove
jecxz
cmp
dec
fimuls
loopne
addr16
dec
xlat
js
mov
mov
daa
inc
jp
and
cmp
xchg
or
sub
movups
xchg
loop
movsb
push
jp
xchg
add
cli
loope
adc
iret
push
xor
cs
add
sub
repnz
mov
daa
dec
adc
inc
dec
loop
imul
cs
outsl
xor
fstl
sbb
int3
xchg
ret
cmc
or
push
inc
pusha
das
xor
jle
xchg
lods
sti
repz
es
and
inc
adc
push
stc
cmp
and
mov
mov
dec
cmpsl
cs
test
push
ret
add
or
les
cli
mov
dec
clc
inc
fdivs
sbb
fcompl
repz
inc
cli
insb
inc
lcall
sbb
push
shrl
rclb
mov
push
lock
or
pop
cli
xor
dec
xor
pop
or
out
fisubrl
sub
pop
das
dec
mov
clc
enter
in
add
xor
dec
pop
sbb
push
push
push
jno
push
pop
out
rolb
mov
sbb
mov
mov
push
popa
lock
or
insl
fsubrp
push
sbb
lea
sbb
adc
add
gs
popf
jg
mov
dec
sahf
dec
xchg
jg
outsl
daa
add
scas
add
add
adc
inc
adcb
imul
cld
push
push
pop
icebp
xlat
mov
xchg
sub
dec
jae
xchg
mov
xor
out
jp
int3
sub
and
adc
stc
repnz
push
cli
in
imul
pop
jle
jp
xor
pop
mov
mov
movsl
sahf
and
adc
bound
gs
fwait
test
movsb
add
pop
repz
fiaddl
loop
out
in
dec
in
fdivrs
ret
dec
movsb
lods
outsl
iret
popf
rorb
movsb
sbb
int3
jns
loop
jl
mov
inc
xor
and
cmpsb
pop
fstps
out
pop
cmpsb
mov
scas
call
js
lods
xchg
outsl
in
dec
test
or
sub
or
movsl
and
and
xchg
and
in
sbb
dec
addr16
es
repnz
cmp
dec
loope
js
shr
jb
pushf
scas
sti
sti
outsl
dec
subl
sahf
dec
shll
jbe
in
movb
mov
dec
outsl
pushf
lahf
xchg
push
jge
or
out
add
and
fs
fwait
add
add
push
insl
pop
and
xchg
cmp
jne
sti
sahf
cltd
fwait
sub
adc
std
mov
insb
jg
add
emms
jg
out
fisubrl
or
cmc
in
out
in
int
fstpt
enter
xor
and
insb
mov
push
dec
fcmove
jp
out
addr16
pop
dec
push
pop
and
push
inc
jo
enter
jne
aad
xchg
shlb
cltd
repnz
in
subb
into
insb
jbe
nop
adc
and
and
jg
gs
jae
sbb
stos
sub
aaa
or
icebp
sbb
mov
andl
dec
cli
cltd
jl
jle
dec
cmpsl
xchg
movsl
cmp
pop
ja
ljmp
outsb
dec
sarb
negb
jp
mov
lahf
xchg
loopne
inc
cld
and
cmpsb
leave
cltd
mov
call
ja
cld
int
mov
popa
rcrb
mov
dec
lock
sub
or
jge
inc
test
xchg
ds
rcr
adcl
cmp
out
mov
mov
dec
and
cmpsl
push
sahf
or
negb
fadd
jg
cld
pop
sbb
aas
ret
and
mov
xlat
jno
mov
insl
mov
mov
popaw
popa
and
xchg
push
scas
mov
ret
add
daa
call
pop
rol
xchg
jp
dec
mov
cld
idiv
addr16
insl
outsl
in
ror
or
dec
cmpsl
hlt
pop
movsb
in
in
rep
pop
je
popf
jg
outsb
les
mov
xor
adc
add
push
aaa
mov
fisubrs
xchg
cmp
testl
ljmp
cmp
shll
dec
or
jo
mov
in
scas
in
dec
ret
push
rcrb
mov
mov
lcall
fcmovbe
lcall
and
lock
cmc
xchg
cmpl
data16
jecxz
pop
xchg
cmpl
pop
pop
xchg
cmp
xchg
sbb
mov
mov
outsb
push
fstl
xorl
xorb
es
in
sahf
rolb
xchg
add
jmp
in
jnp
fptan
pop
and
dec
xchg
out
ret
pop
iret
cmpsl
jmp
add
sbbb
dec
imul
sub
add
fs
lret
ljmp
imul
negl
test
mov
sarb
int
xor
mov
popf
movsb
nop
pushf
lahf
insl
dec
adc
les
rcrb
movsb
aad
pusha
mov
and
sub
mov
std
or
inc
mov
dec
out
add
fwait
hlt
adc
push
stos
dec
das
lock
xchg
call
out
and
mov
fwait
xchg
cld
cmp
lret
adc
sub
clc
adc
rol
cmp
mov
sbbb
cwtl
into
inc
push
cltd
mov
inc
xchg
std
pop
or
nop
movsl
test
xor
test
adc
xor
pop
scas
xorb
and
jmp
lret
fwait
mov
sub
nop
mov
dec
mov
inc
adc
lahf
push
xchg
lcall
inc
pop
outsb
push
sbb
dec
out
mov
jge
cmp
loope
and
jle
das
push
sbb
ds
imul
pop
nop
xor
pop
lock
int3
jno
jnp
add
adc
into
test
push
cmp
jo
cmpl
xchg
leave
add
jbe
fimuls
cmp
in
pop
dec
int3
xor
daa
in
sahf
sub
add
xor
add
pop
add
in
xor
inc
icebp
or
outsb
push
xor
cmpsl
sbb
cmp
movsb
or
out
pop
iret
shll
cli
adc
roll
mov
ret
sbb
shll
loop
mov
xchg
aaa
sbb
add
cmpl
cs
adc
mov
mov
aam
cmp
cmp
inc
rclb
cmp
inc
sbbl
stc
lds
cmc
push
data16
mov
test
and
jno
aas
movsl
hlt
mov
inc
cld
adc
mov
xor
je
push
push
xlat
shll
outsb
test
adc
xchg
fucomip
xchg
aaa
das
enter
mov
cmpsb
in
dec
test
ljmp
inc
fimull
enter
sub
adc
cmp
adc
imul
andl
mov
sub
stos
inc
jne
mov
lret
pop
iret
xor
stos
mov
jecxz
lret
sub
pop
inc
shr
mov
mov
ret
mov
imul
mov
jno
insb
jl
popf
pop
mov
inc
lods
sub
pop
jno
add
mov
inc
je
mov
fldt
xchg
inc
outsb
test
jae
aaa
add
in
dec
push
mov
jle
push
xchg
xchg
out
pop
aas
xor
rep
xlat
imul
out
sahf
cmp
xchg
loope
jg
jnp
lea
movsb
dec
or
enter
cmp
adc
push
loop
sti
inc
iret
inc
mov
jne
pop
ret
sbbl
fidivrs
dec
mov
fs
sti
popw
push
mov
cmp
push
jmp
nop
push
rcrl
pop
and
aas
jnp
andl
ja
xchg
into
adc
int
pushf
int
pop
push
push
lods
movsl
sti
dec
jns
xor
movsl
fbstp
sbb
sbb
pop
pushf
push
add
adc
hlt
sub
adc
adc
mov
mov
add
call
jecxz
jns
shr
js
das
lret
add
scas
add
add
orb
in
jbe
dec
jg
lock
cmpsb
das
pop
bnd
stos
or
in
xor
test
fdivrs
mov
jb
out
xor
sti
add
sarl
xor
icebp
jbe
adcl
sbb
or
sqrtps
out
pop
mov
inc
and
mov
jp
addr16
cli
leave
lcall
outsb
or
pop
dec
fcoml
push
je
mov
cld
jle
push
adc
pop
inc
mov
inc
insl
mov
int3
pop
mov
fistps
mov
dec
pop
cmp
das
stos
push
sbb
mov
sbb
iret
loop
repnz
mov
and
sub
in
push
jg
movsl
and
mov
or
rcr
dec
incb
xchg
ss
mov
add
jle
out
adc
jle
xlat
lods
mov
arpl
push
xchg
sub
mov
push
shrb
inc
cmp
sub
jp
test
adc
push
daa
int
jge
sub
xor
mov
mov
test
push
push
lahf
mov
xor
lock
call
dec
xor
jle,pt
mov
test
ror
lock
adc
mov
mov
out
leave
in
jle
push
xorl
pop
into
addr16
adc
rcl
test
pop
push
stos
pop
dec
or
pop
lcall
clc
mov
cmpsb
addr16
sub
jmp
cs
movsb
loopne
mov
std
gs
cmp
mov
add
test
outsl
cmp
push
xor
add
and
pusha
mov
and
jno
mov
inc
btrl
jmp
push
mov
add
mov
push
es
inc
add
je
jae
push
lods
push
repz
jmp
cltd
jbe
xor
mov
outsb
inc
cwtl
sahf
or
leave
jmp
push
sbb
ss
dec
xchg
stos
pop
push
jle
sbb
mov
fistpl
xor
bound
sbb
sub
mov
fsubs
repz
inc
popf
dec
xor
xor
sbbb
ljmp
xchg
bound
rep
sub
xor
clc
rol
imul
mov
add
lods
dec
push
jnp
gs
sbb
cmp
jp
push
or
sbb
sub
adc
ja
mov
xorb
adcb
sub
mov
cmpl
cmp
sub
repnz
and
arpl
adc
pop
push
das
pop
rolb
push
sbb
dec
xchg
addr16
xchg
out
xor
or
fildll
mov
mov
xchg
dec
ds
fstpt
jl
inc
ja
cwtl
pop
sbb
fwait
inc
sbbb
pop
cmp
push
jmp
pop
push
fstpl
add
sarl
outsb
adc
lods
out
int3
mov
das
inc
nop
push
mov
or
rcrl
negl
mov
sub
ljmp
rep
push
int3
pop
iret
pop
mov
cmp
cltd
sbb
repz
xchg
sahf
add
roll
inc
roll
jmp
mov
xor
gs
pop
adc
shrl
lret
xchg
mov
andl
cli
mov
add
add
data16
lods
cld
mov
hlt
xor
jns
add
scas
add
add
mov
andl
xor
push
adc
ret
pop
sub
clc
dec
sbb
imul
movb
cs
push
test
jns
push
lcall
jb
insb
dec
testb
mov
ret
mov
loop
fistl
cmp
les
push
fcoml
xchg
jmp
xchg
into
mov
sarb
js
pop
aaa
lret
stos
sub
test
and
pop
sti
cmpl
dec
inc
imul
mov
mov
xchg
ss
mov
jb
out
mov
inc
add
and
jae
outsb
ret
cmp
xor
notl
mov
in
xchg
or
scas
xchg
stos
popf
or
mov
pusha
push
mov
sbb
ja
fdivs
fsubp
push
scas
xor
imul
push
and
bound
nop
lret
jl
sbb
or
mov
add
fcos
adc
imul
test
sub
xchg
mov
test
pushf
mov
or
jo
mov
and
pop
nop
or
pop
adc
sbb
xor
aam
jl
fs
data16
jb
hlt
out
lods
pop
push
das
or
sub
fists
divl
and
data16
cmc
test
addr16
or
jecxz
nop
add
int3
dec
lods
mov
into
xor
push
stos
sub
xlat
int
mov
js
clc
ljmp
lock
lahf
and
xchg
cmpsl
in
stos
push
adc
fistpl
xchg
lods
gs
addl
sbb
hlt
jge
fdivs
xchg
xchg
pop
clc
shrb
fs
dec
mull
adc
scas
adc
mov
outsb
mov
out
scas
ss
sub
cmp
dec
mov
scas
cmp
mov
in
adc
pop
and
xchg
rcll
or
jbe
lock
in
xor
pop
iret
sbb
xchg
cli
dec
pusha
sub
mov
xchg
stc
mov
sub
dec
dec
faddl
xor
pusha
out
xchg
andl
inc
ret
mov
mov
mov
jns
in
dec
pop
fbstp
loope
sbb
xchg
or
xor
fs
pop
jge
mov
jo
test
es
xchg
enter
lods
jo
pop
repz
repz
mov
or
cmc
xchg
inc
pop
cmp
push
pop
jnp
push
pop
or
xchg
lds
adc
fdivs
pop
xchg
jo
clc
repnz
mov
xor
roll
sbb
pop
scas
push
mov
bound
shlb
mov
inc
xor
outsb
insl
movsb
or
cli
or
into
adc
mov
or
ja
dec
mov
cmp
mov
add
push
std
into
loopne
cmp
sbb
add
iret
rorl
lods
loop
add
push
in
nop
popf
popa
sub
cli
xor
scas
leave
fists
lods
pop
shr
and
out
pop
xor
jo
enter
out
cmp
fucomi
imul
into
dec
xchg
push
lret
mov
pop
lahf
icebp
inc
popf
dec
iret
insl
and
xchg
sub
add
neg
jmp
cli
and
mov
add
scas
add
add
mov
sbb
jmp
xor
sbb
mov
cmp
movsl
push
xchg
mov
cwtl
cmpsl
scas
add
loopne
push
xchg
subl
in
push
dec
fnstenv
shll
adc
cmpl
mov
in
stos
stos
test
cs
pusha
inc
cmpsl
jmp
dec
nop
sub
rorl
popa
pop
fistpll
sahf
gs
lret
loopne
cmpb
lret
scas
mov
xorl
push
lahf
mov
out
inc
sub
dec
lods
sbb
sbb
mov
and
sub
mov
dec
ds
mov
jecxz
jmp
popa
dec
ljmp
dec
pop
cmpb
mov
adc
xchg
pop
push
stos
or
enter
movsl
adc
jmp
xor
shl
je
xor
dec
jmp
push
jl
pop
mov
mov
adc
pop
bnd
sti
scas
cmp
jmp
sbb
jmp
lods
cltd
stos
or
movsb
roll
cmp
in
test
lcall
cmpsb
adc
std
cmp
aas
repz
call
pop
mov
icebp
sub
lds
je
aaa
pop
cmp
insb
jmp
pop
sbb
or
lcall
xchg
das
rcrb
jbe
sti
fistpll
in
xchg
mov
mov
or
scas
popf
sbb
sub
aam
loope
pop
cmpsl
lock
pusha
push
inc
mov
lcall
adc
outsl
jg
inc
adc
xor
test
or
add
xchg
and
idivb
inc
mov
push
jne
ja
cmc
lock
pop
inc
imul
xchg
fmull
je
lds
imul
push
dec
aad
stc
fstps
cmp
je
jle
jnp
ffree
aaa
pop
fdivrl
fadds
add
mov
add
neg
mov
rcll
mov
mov
movsl
push
xor
jp
bound
mov
mov
sahf
jp
fsubrl
sbb
mov
inc
sti
add
pop
idivb
sbb
rcrl
dec
dec
mov
cltd
push
jmp
test
xchg
add
dec
add
mov
rdpmc
cmp
enter
dec
mov
add
insb
popa
nop
test
pop
pop
in
mov
ret
jb
add
inc
iret
jge
and
or
jne
xchg
push
fnstsw
mov
add
jno
fs
add
jge
cmp
cwtl
sahf
push
sub
sub
mov
aas
sub
rcrl
mov
std
pop
inc
cwtl
stos
adc
pop
in
sub
ss
aaa
mov
loopne
mov
mov
in
lods
inc
pop
shll
and
aam
adc
xor
push
xchg
decb
ret
loop
mov
push
or
mov
jnp
imul
mov
pop
push
inc
jmp
mov
mov
jnp
stos
mov
into
push
stos
or
xor
lcall
fld
xor
arpl
pop
idivl
and
sbb
pop
add
dec
popf
mov
or
leave
sbb
push
test
cmp
sbb
in
les
sub
addr16
mov
cwtl
fidivrs
in
and
imul
dec
in
add
cld
mov
and
jmp
and
cmp
add
cmp
test
movsb
push
js
pop
mov
imul
xchg
test
mov
clc
xchg
ljmp
mov
jmp
and
imul
aad
fisttpll
or
psrad
inc
rcl
call
push
mov
icebp
data16
shll
or
adcb
mov
sub
insb
sbb
lods
test
cld
call
xor
repnz
lock
push
sub
dec
enter
mov
test
ret
mov
jmp
pop
out
mov
push
xor
xor
inc
xchg
cltd
inc
inc
add
shlb
add
pop
xchg
in
js
shlb
sbb
fistl
and
ret
pop
popf
pop
ja
call
int
in
mov
movsl
movsb
mov
sbbb
adc
mov
cmp
enter
pop
ss
cmp
push
hlt
movsb
xor
xor
out
pop
or
scas
sahf
nop
fcoms
mov
inc
cwtl
push
fwait
mov
addr16
cmp
inc
lods
push
dec
leave
aas
aaa
mov
mov
or
lods
cmp
xchg
cmp
adc
sub
dec
int
sub
mov
outsb
filds
in
xchg
pop
add
mov
addb
mov
loopne
add
adcl
cmp
mov
inc
cmp
jmp
rcrb
dec
push
sbb
ljmp
push
rcrb
mov
test
dec
jno
test
movsl
xchg
cmpsb
pop
cmp
iret
fwait
or
js
in
and
push
cmp
fistpll
jb
sbb
push
lret
jp
out
jge
imul
test
jns
insl
mov
ss
mov
lock
lds
ds
fdivs
das
testl
popa
insb
mov
sub
call
int3
es
test
jle
call
jne
fildll
xchg
mov
aas
push
sub
lock
dec
fs
data16
fdivs
or
int3
frstor
sub
jbe
push
sub
inc
cmpsb
sub
into
push
dec
addr16
mov
fildl
add
ficoms
inc
scas
sbb
dec
cmp
sbb
sti
sub
mov
addr16
add
fucomp
cwtl
lret
lds
mov
scas
cld
cli
daa
cmp
mov
jnp
adc
insb
add
imul
xlat
or
cld
rolb
push
sbb
fbld
icebp
and
scas
mov
mov
lods
and
mov
pop
loopne
xor
lret
or
and
push
xchg
in
pop
iret
cld
jmp
mov
popa
aad
inc
popf
aad
mov
push
add
les
adc
in
adc
push
add
dec
jecxz
jp
inc
arpl
pop
adc
js
lahf
cmpsb
clc
mov
pop
mov
imulb
jae
roll
rcrl
stc
cmc
or
push
sbb
cwtl
pop
stos
mov
pushf
lock
bound
mov
mov
adc
cmp
in
and
sbb
xor
mov
cmpsb
in
xchg
ficompl
sub
jmp
pop
testl
loope
outsl
add
ds
mov
lret
test
sbb
dec
fisubl
cmp
daa
cmpl
add
cltd
das
pop
fistpl
mov
lcall
nop
mov
cmp
add
dec
mov
fwait
adc
pusha
push
loop
mov
bound
cmp
jne
and
or
fistpll
add
xor
out
arpl
pop
xor
icebp
inc
inc
jne
shrl
clc
jp
dec
cmp
xchg
push
or
pop
lret
inc
or
cmpsb
add
mov
push
mov
push
mov
mov
icebp
xor
push
xchg
jno
icebp
jae
outsb
xchg
pop
rorb
ret
test
dec
movsl
in
aas
fs
sbb
das
pop
test
mov
adc
inc
je
xchg
and
add
sti
lahf
pusha
jbe,pt
repnz
testl
or
ficoms
lods
push
xor
add
inc
or
pop
lret
pop
aaa
push
dec
hlt
popa
mov
adc
or
xor
add
or
mov
sbb
sbb
inc
mov
push
int
and
pop
decb
fnstsw
dec
sub
inc
xchg
in
sub
jle
fistps
jns
cld
repz
stos
imul
inc
in
dec
pop
xor
mov
push
push
sbb
or
aad
xor
insl
pushf
cmp
jne
xor
sahf
arpl
mov
add
stc
and
dec
inc
sub
dec
jbe
jbe
mov
and
dec
ds
imul
xor
xor
mov
mov
lcall
mov
mov
addr16
movb
sub
pop
hlt
add
jge
fsubrp
xor
frstor
adc
xchg
sub
xchg
int3
xchg
cltd
add
into
jl
push
or
shr
popf
inc
fsubrs
lea
push
fwait
test
dec
adcl
dec
scas
pop
dec
and
call
mov
loop
dec
ret
test
inc
nop
jp
mov
fmull
xchg
inc
and
je
adc
xor
inc
into
lock
xor
ja
enter
out
mov
out
idivb
fs
icebp
rorl
or
insb
inc
inc
ret
mov
and
adc
dec
dec
and
ret
inc
pop
mov
popa
adc
fs
dec
jae
ficoms
fucomi
lea
cmpl
mul
mov
test
cli
adc
push
repz
sbb
shrl
jb
pop
sub
inc
push
add
shlb
cli
pop
dec
ret
push
xacquire
jne
xor
or
dec
mov
or
dec
mov
lahf
inc
cmp
dec
dec
dec
mov
add
movsl
xor
add
add
push
aas
adc
xor
jg
fcmovu
mov
xor
in
inc
xorb
data16
mov
add
into
aaa
cltd
jl
out
or
mov
adc
pop
pusha
adc
jge
out
lods
dec
push
insl
mov
scas
mov
mov
dec
inc
push
jecxz
repnz
repnz
pop
aas
push
mov
or
cmpsb
fiadds
movsl
push
arpl
mov
inc
xchg
adcl
dec
aas
shlb
lcall
xchg
sub
jne
cmp
in
out
sub
outsb
imul
sub
fbld
add
add
add
mov
sbb
call
out
inc
dec
add
mov
inc
add
scas
add
add
insl
add
imull
jg
xor
mov
aam
mov
data16
push
push
cmpsb
push
sub
sbb
icebp
add
ljmp
lods
out
pop
aam
add
lret
xlat
mov
add
shl
pop
mull
out
nop
mov
es
out
or
sbb
jb
aad
jle
fcmovb
fimull
cmpsl
cmp
into
and
test
cld
and
sbb
into
lcall
test
insb
pop
gs
adc
daa
mov
pop
xchg
mov
leave
sbb
mov
repnz
mov
mov
gs
pop
fcom
idivl
cmp
mov
push
dec
repnz
pop
cld
daa
in
out
pop
cld
pop
inc
lods
sub
or
int
pop
repnz
outsl
push
aaa
rorb
adc
fdivrl
add
push
das
sub
dec
mov
cmpsb
div
jmp
mov
push
mov
cwtl
popf
testl
mov
dec
filds
ljmp
and
or
mov
leave
fstps
mov
adc
mov
sub
or
inc
mov
pop
fwait
mov
and
lea
jmp
push
fcoms
movsl
invd
add
lcall
int
sub
pushf
sbb
adc
div
inc
add
xchg
mov
js
and
popf
sahf
dec
loopne
inc
xor
test
jbe
mov
xchg
adc
test
lret
jno
fdiv
test
aas
jmp
std
lcall
mov
inc
cmpsb
push
push
dec
and
fwait
mov
lahf
icebp
andl
xchg
lods
or
sub
inc
aaa
movsb
call
in
xor
and
or
sbb
sub
scas
mov
jno
stos
lahf
cwtl
jl
or
sub
inc
nop
out
mov
bound
stos
pop
out
mov
xlat
mov
jecxz
loopne
adc
mov
or
roll
lods
repnz
loopne
or
adc
into
sub
dec
dec
icebp
es
ss
mov
faddl
push
cmp
aas
add
aad
popf
dec
imul
hlt
mov
out
cmc
stc
daa
fiadds
cmpl
jnp
pop
add
inc
lret
cmp
sti
mov
das
mov
inc
mov
xchg
out
push
ljmp
jns
fldcw
mov
mov
repnz
mov
pop
ljmp
jp
sbb
ret
movsl
adc
lods
out
into
hlt
xorb
repz
push
add
mov
js
sarl
push
loop
and
add
leave
mov
or
movsb
sbb
inc
mov
and
mov
mov
mov
repnz
imul
popf
iret
shlb
push
int3
jbe
mov
cs
std
stos
dec
xor
lret
das
test
sub
gs
je
jmp
mov
adc
push
loope
xchg
mov
test
pop
adc
stc
mov
fwait
inc
mov
or
int
xor
and
add
leave
or
add
or
imul
scas
add
add
jne
jg
pop
shll
inc
mov
jg
in
fidivrl
mov
xor
hlt
scas
xchg
jge
push
mov
mov
addb
and
xchg
cmp
pop
inc
pop
jo
jle
push
fwait
push
fbld
xchg
jno
push
mov
mov
pop
sub
xor
inc
or
lea
push
jge
lods
mov
shlb
cmp
add
mov
cli
mov
notb
jb
cmc
nop
mov
inc
xor
stos
icebp
arpl
icebp
sub
jnp
lret
push
mov
push
jnp
add
sbbb
stc
inc
jb
xor
mov
push
adcl
nop
push
inc
mov
and
pop
dec
icebp
inc
out
ljmp
imul
rolb
add
int
nop
js
in
hlt
lods
ja
jo
dec
aam
mov
aaa
das
sub
cmp
and
ljmp
stc
outsb
xchg
xchg
adc
gs
xchg
into
inc
lods
or
push
data16
mov
add
sbb
push
shlb
cmp
call
lahf
lods
stos
jmp
mov
pop
mov
idiv
mov
pop
jbe
or
mov
xor
mov
movb
dec
js
aam
cmp
lods
loop
adcl
test
push
sub
imul
dec
roll
add
out
in
xchg
jl
xchg
mov
lods
imul
mov
dec
fsubs
es
test
idivl
push
jnp
stos
stc
rorb
pop
and
data16
xor
cli
pop
cmp
lds
iret
cmp
mov
mov
push
push
sti
loopne
je
cmpsl
mov
addl
or
enter
cli
rorl
andb
cli
dec
pop
push
cmpsl
out
xchg
lock
xchg
xchg
mov
dec
gs
push
cs
inc
cmp
cltd
mov
mov
cld
popa
inc
inc
imul
mov
les
test
xchg
adc
int3
or
insl
dec
lock
xor
rcrb
ret
int
dec
shll
jo
and
xlat
mov
mov
or
xlat
inc
cltd
adc
fldl
aam
into
jp
mov
rcr
or
sub
fdivrl
repnz
jns
push
push
ds
cmpsl
cli
mov
fnstenv
int
mov
outsb
les
jns
fistpll
sub
test
push
ror
movsb
pop
xlat
xchg
or
push
fidivrl
mov
cmpsb
jb
push
jno
dec
imul
inc
cmp
lods
movsl
xor
mov
nop
aam
cwtl
lcall
mov
mov
std
stos
and
pop
idivb
jb
popa
gs
mov
loopne
outsl
pop
dec
movsl
xor
jmp
movsb
mov
mov
or
cmp
mov
sub
mov
and
mov
out
ss
fcomi
or
jle
loopne
insl
loop
fcmovbe
lods
cwtl
sbb
cmc
ret
aas
push
test
add
jg
clc
fstps
in
inc
xchg
leave
std
fadd
pop
incb
popf
inc
movsl
jbe
cmpsl
push
add
cltd
ja
out
out
cltd
ja
daa
xor
lea
add
mov
lret
fidivs
lds
adc
shrd
std
daa
dec
mov
ss
xor
ror
in
xchg
mov
jp
lods
or
push
dec
sub
mov
roll
push
xorl
pop
push
sub
shll
rcll
push
jb
or
mov
xchg
out
and
xchg
mov
push
push
and
pusha
inc
in
mov
adc
jb
into
or
push
out
daa
xor
sbb
jecxz
addr16
mov
shrl
mov
cltd
fisubrl
imul
std
imul
lea
add
mov
add
jp
push
dec
dec
test
mov
stc
fildll
aam
push
mov
into
or
addl
inc
outsl
rorl
inc
jae
fbld
fmuls
into
cmp
lahf
cltd
sub
sbb
inc
mov
sub
xchg
das
or
fbstp
xchg
xchg
sbb
push
decb
je
fsubl
fistpll
in
sbb
xor
in
shlb
sti
loop
repnz
cmpsb
adc
dec
mov
pop
or
push
insb
inc
pop
leave
mov
mov
sarl
movsb
ret
sarb
dec
test
mov
lret
xor
testl
lods
or
in
cmpsl
sub
jmp
je
and
sbb
sub
sbb
pop
adc
jnp
mov
repz
mov
sub
fiaddl
adc
mov
push
lock
cld
and
or
pop
mov
mov
cmpsb
shl
repnz
dec
aas
adc
dec
cltd
fsubr
or
adc
mov
mov
sub
insb
scas
movsb
in
lods
inc
mov
pop
decl
punpckhwd
dec
dec
fimull
or
les
jo
inc
cmpsb
pop
scas
mov
stos
push
jecxz
sti
xchg
scas
dec
imul
cmpb
adc
pop
add
mov
cltd
jno
mov
adcb
bound
clc
jp
mov
adc
push
mov
dec
jmp
shl
out
test
test
mov
mov
pop
pop
sbb
mov
imul
cmp
mov
lcall
repz
inc
fsubrs
loope
xor
icebp
jp
scas
mov
fs
aaa
enter
mov
push
int
lods
pop
and
dec
std
pushf
dec
xchg
cmpsl
int3
outsb
lret
pushf
xor
push
lds
adc
jmp
or
out
jno
dec
push
adc
add
ret
cmp
aad
xchg
push
pusha
mov
test
jne
xchg
shlb
js
xchg
flds
cmp
push
leave
cli
nop
add
inc
ret
sub
int3
pop
jmp
pop
js
and
jmp
mov
out
cmovns
dec
or
lcall
movsb
push
mov
mov
push
hlt
mov
xchg
inc
std
sbb
cmpsl
pop
cmp
or
popa
push
insb
pusha
out
xchg
imul
movsb
jg
cmc
adc
test
push
dec
or
mov
addl
add
add
add
add
iret
lahf
push
loop
aad
daa
push
scas
aad
dec
add
scas
add
add
jge
ret
or
movsb
push
clc
inc
sbbb
mov
dec
mov
sbb
loopne
mov
and
std
inc
paddb
push
pusha
cmp
lret
xor
insb
pop
fdivl
rcrb
lods
outsb
sub
pusha
cs
fmul
fistpl
sbb
sahf
xor
mov
decb
ljmp
les
inc
movsl
or
subb
arpl
arpl
pop
iret
sbb
dec
hlt
rcll
add
outsb
xchg
scas
inc
scas
mov
mov
adc
cmc
adc
pop
inc
mov
and
fisttpll
jae
mov
xchg
jl
xor
lret
mov
push
popa
ret
or
lods
addr16
mov
stc
cmp
jnp
pushf
push
adc
fs
adcl
dec
dec
ja
inc
loop
or
dec
repnz
mov
in
stos
fstps
push
or
lret
sbb
fidivs
orl
rorl
mov
and
push
push
andl
mov
enter
loopne
and
mov
mov
call
or
ja
imul
adc
inc
in
push
jge
rcll
mov
sbb
mov
add
test
ja
imul
mov
ss
or
jge
lahf
cli
dec
xor
pop
sub
out
cmp
add
push
ret
sub
or
shrl
in
cmp
btr
lret
jnp
or
fisttpl
xlat
sti
inc
aas
mov
xchg
cwtl
xchg
addb
popf
fsubs
mov
pushf
movsb
inc
pop
xchg
es
ficoms
adc
stc
push
aam
repnz
mov
mov
lock
or
cs
sub
sbb
movsb
imul
sti
push
mov
and
add
pushf
xor
push
lea
je
lds
gs
pop
pop
pop
int
lret
mov
mov
cltd
mov
push
fnstenv
dec
jbe
fwait
js
fisttps
cmp
jecxz
dec
adc
or
pop
mov
pop
lds
or
add
dec
mov
xor
sti
gs
ja
lods
cmpsb
pop
repnz
jae
test
jecxz
or
or
jne
mov
push
hlt
sbb
call
push
scas
sti
mov
dec
xchg
jecxz
int
into
sub
sbb
out
pop
jmp
sbb
or
out
lcall
sub
movb
ret
lea
test
mov
leave
xchg
imul
and
cmp
inc
rorl
xor
mov
cmp
push
xlat
rcrb
adc
jne
and
clc
mov
xorl
lret
xchg
aaa
sub
jl
xor
stos
lods
loop
xchg
sbb
pusha
mov
cmp
pop
sbb
mov
fiadds
xchg
orl
es
icebp
mov
xchg
sahf
ja
push
add
movsl
mov
sbb
pop
test
xchg
sub
pushf
push
pop
xchg
movsb
fisttpl
mov
insl
xchg
mov
cmpsb
jmp
jp
imul
dec
sub
xchg
push
lock
fildll
mov
in
mov
inc
jnp
idivl
add
add
add
add
add
stc
mov
stos
lods
nop
dec
out
dec
add
scas
add
add
push
cmp
cmp
and
pop
testl
mov
and
sub
mov
push
mov
xor
insb
xorb
mov
add
repnz
loope
xor
or
stos
dec
cltd
test
in
mov
lods
icebp
pop
nop
mov
lods
js
jl
movsb
jno
xor
add
aad
inc
mov
loop
xchg
cmp
mov
ss
dec
fimuls
xchg
xchg
popa
and
jg
subl
mov
and
out
sub
push
sbb
je
ss
pop
mov
jle
call
ret
out
out
into
push
popf
data16
mov
and
sbb
pop
icebp
xor
call
cwtl
dec
jae
lahf
adc
and
add
push
mov
fstp
sahf
jle
mov
or
lds
or
cmpsl
rorb
aas
xchg
call
fcompl
cmp
ja
mov
jbe
xor
jg
iret
popf
aam
and
xor
push
sub
insl
gs
xor
mov
pop
dec
and
xor
stos
mov
lcall
outsl
mov
push
fdivrl
and
mov
add
test
rorl
cmp
adc
lods
push
scas
push
jns
insl
mov
jle
xchg
ja
lods
cmp
mov
xor
mov
jmp
push
sbb
cmp
mov
sahf
insl
cmpb
imulb
jnp
cmp
or
xchg
lret
aas
sub
mov
scas
push
jmp
dec
cltd
inc
into
mov
les
mov
and
mov
faddl
sbb
xor
add
rcrb
add
les
dec
cs
js
push
subl
bound
popa
xchg
bound
in
daa
push
in
jg
push
and
imul
lcall
adc
xor
js
cmc
jns
popf
out
loopne
outsl
stos
cmp
mov
adc
es
jne
cmp
dec
xor
testb
lea
mov
inc
sbb
dec
lods
xorb
sub
fistl
fbld
cmp
cmp
and
dec
loope
aas
add
in
inc
xchg
ja
mov
pop
lret
and
sbb
dec
popa
mov
addr16
sub
or
divl
push
or
and
xchg
ss
loope
loop
jb
lods
push
fmul
mov
jb
outsb
fwait
and
negb
fstpt
cli
std
dec
inc
iret
mov
mov
lock
in
cs
test
jno
int3
enter
jo
sti
cs
push
ja
mov
cs
hlt
mov
xchg
inc
and
push
inc
gs
pop
mov
ss
dec
pop
jmp
push
adc
rorb
sub
sub
sub
repnz
mov
dec
in
hlt
popf
push
movsb
sahf
add
rol
lcall
cld
jae
daa
fmull
jne
push
loop
push
aam
mov
mov
rcrb
les
sahf
lret
jns
or
add
or
or
lret
out
mov
and
aaa
cltd
jb
and
xchg
mov
add
cld
xlat
dec
call
adc
jbe
xchg
push
add
scas
add
add
mov
ja
shlb
enter
inc
and
xor
jg
hlt
add
inc
das
mov
fisubs
or
sub
sub
lods
iret
jl
outsb
call
mov
aas
mov
cmc
js
xchg
mov
in
pop
mov
fadds
or
js
rcrb
mov
jmp
adc
mov
cwtl
mov
mov
fistpl
lea
insl
adc
sub
mov
icebp
cwtl
cmp
jns
in
popa
xchg
cmp
xchg
jp
gs
add
xor
lods
jge
in
mov
inc
jecxz
jne
mov
mov
mov
lahf
repz
cmpb
xchg
jecxz
mov
push
sbb
movsb
or
int3
push
mov
xchg
xchg
push
xorb
shrl
lcall
and
push
sub
insl
cmp
dec
mov
lods
enter
adc
daa
sub
xchg
inc
and
mov
imulb
adc
lods
push
jg
adc
data16
cmp
push
pop
pop
add
lock
sbb
inc
pop
mov
mov
mov
gs
mov
scas
inc
inc
lret
fs
add
or
jne
push
jecxz
mov
in
pop
mov
dec
pusha
mov
sub
cwtl
dec
push
cltd
adc
adc
or
ret
fdivs
out
pop
pusha
clc
jae
mov
sub
inc
int
push
mov
inc
push
ret
jg
dec
jl
sub
fs
sub
cli
pop
cmpl
pop
push
mov
inc
pop
mov
stc
imul
pop
icebp
push
ljmp
mov
jle
shrb
cmp
push
adc
pop
addr16
or
push
dec
repnz
mov
sti
rorl
push
pop
out
sbb
nop
sub
cltd
and
xchg
je
adc
hlt
adc
add
sbb
xchg
pop
int
data16
aaa
sub
cld
sbb
shll
lea
scas
or
sub
dec
test
shlb
movsl
xor
movsl
add
jp
or
dec
shl
outsb
sarb
faddl
xor
sahf
xor
xchg
adcb
add
fidivrl
dec
popa
outsl
outsb
repz
mov
lret
xor
jecxz
mov
sbb
xor
popf
pop
inc
sbb
negl
lock
ret
lahf
adc
mov
dec
icebp
fidivs
je
mov
loopne
mov
mov
int
lcall
lods
insb
cmpsl
cld
ja
sti
scas
mov
mov
sbb
or
out
popf
mov
outsl
xchg
out
dec
sti
sbbb
cmp
mov
sub
bnd
dec
repnz
mov
xor
int3
or
stos
mov
xchg
fisubl
or
push
outsb
xchg
mov
ds
sbb
loope
push
xchg
movsb
push
sbb
or
sbb
jmp
imul
iret
pusha
je
cwtl
xor
lock
daa
xlat
mov
pop
rolb
cmp
jno
int
mov
je
repnz
dec
imul
test
mov
or
sar
sahf
or
daa
negb
add
add
add
add
jnp
mov
cmp
loop
push
add
scas
add
add
scas
fidivs
and
push
mov
push
xlat
shll
inc
adc
add
loopne
ds
test
jnp
sub
xchg
aas
and
jo
clc
bound
loopne
add
aam
jg
adc
subl
mov
add
lods
jmp
dec
ficompl
pop
jno
push
icebp
mov
add
sbb
mov
sbb
hlt
pop
ja
imulb
dec
mov
xchg
mull
cs
pop
lods
mov
sahf
pushf
leave
push
mov
incl
adc
cmp
dec
sbb
cmp
mov
push
xor
ja
sub
pop
loope
pop
imul
and
xlat
stos
dec
scas
mov
dec
mov
f2xm1
cli
mov
popa
fiadds
or
inc
inc
mov
push
stos
mov
pop
pusha
das
cltd
call
out
lods
pushf
dec
stc
push
imul
xchg
es
mov
add
fistpl
stos
jp
ja
rcrb
ja
push
inc
and
adc
cwtl
pop
push
adc
sti
sbb
sbb
add
jmp
pop
loopne
sub
movsl
repnz
jmp
cmp
jno
mov
mull
jo
mov
xor
xchg
test
cmp
mov
in
add
outsl
jbe
mov
mov
adc
hlt
sub
xor
or
lahf
pop
sub
sbb
mov
cltd
movsl
out
aas
div
outsl
call
lods
inc
or
sbb
mov
push
mov
data16
or
cltd
sbb
int3
fistps
inc
fidivl
add
loop
repnz
lds
pop
popa
push
and
push
mov
outsb
push
outsb
xchg
dec
push
sbb
mov
add
std
clc
divl
fs
jp
lock
loop
mulb
out
mov
stc
inc
pop
sub
or
popa
repz
loopne
xchg
push
jbe
test
dec
mov
mov
movsl
bound
mov
adc
imul
mov
jecxz
movsl
xchg
cmp
cmpsl
and
pop
jp
test
xchg
flds
xchg
ljmp
scas
call
adc
gs
fwait
pop
jne,pn
push
ss
daa
and
and
popa
mov
jmp
enter
sbb
in
repz
sbb
nop
insb
push
push
fsubl
mov
and
pop
pop
xlat
jnp
insb
into
bound
jns
dec
xlat
nop
cmpsl
xor
dec
cmp
in
lret
mov
mov
js
scas
pop
xor
push
gs
sub
std
scas
sti
pop
mov
cmp
ret
cmpsl
mov
sti
jmp
xchg
sti
mov
add
mov
adc
out
shll
and
call
jbe
fstps
jbe
jno
fiaddl
pop
sub
ret
rolb
mov
lea
movsl
rolb
push
in
sbb
scas
jmp
arpl
mov
rcr
dec
pop
push
cld
ljmp
pop
push
mov
popa
and
mov
jo
fcoml
fidivrl
loope
mov
loop
stos
sbb
pop
jno
xchg
in
mov
add
mov
sbb
add
jg
jns
pop
cmpb
gs
add
scas
add
add
testl
fsubs
out
cmp
shrl
int
cli
mov
pushf
inc
data16
cmc
mov
cs
pop
dec
inc
sahf
inc
lods
mov
sar
add
pop
dec
and
sub
adc
add
repz
jge
test
movb
lea
lahf
test
and
inc
cmp
decl
movsl
imul
fadds
lcall
mov
inc
mov
sbbb
push
inc
nop
dec
cmp
dec
mov
stos
inc
mov
pop
pop
mov
int
iret
mov
sub
and
xchg
cmpsl
out
sub
outsb
jecxz
repnz
subb
mov
inc
cmp
enter
in
pop
xchg
add
test
push
les
push
sbb
gs
xchg
imul
lcall
aas
sahf
jp
mov
mov
lret
pushf
nop
int3
mov
jne
stos
adc
int3
and
sbb
cmpsb
loop
movsb
mov
fists
rcrb
inc
jge
mov
mov
add
divl
insl
push
ret
inc
outsb
out
pop
xchg
ret
dec
push
push
mov
leave
lods
inc
test
test
imul
push
cmp
aam
hlt
mov
dec
fistps
sbb
xor
sub
pop
dec
mov
pusha
xlat
leave
push
addr16
inc
in
xchg
movsb
push
das
jno
add
cmp
xchg
sub
and
xlat
outsb
ret
imul
rcrb
mov
mov
mov
adc
xchg
jmp
lods
daa
xor
std
fnsave
pushf
fnstenv
ret
push
mov
cmp
xor
add
mov
call
mov
sub
adc
sub
shr
cmc
imul
outsb
pop
hlt
mov
dec
cmp
push
ja
push
cmc
jl
jno
addr16
mov
jbe
cvtdq2ps
pop
lcall
adc
sub
inc
pop
fdivl
xor
or
dec
fisttps
pusha
lock
aam
jne
cmp
cltd
dec
xchg
and
aaa
aad
ja
adc
mov
pop
sub
xor
mov
outsb
mov
mov
jl
mov
mov
aad
es
jecxz
mov
nop
out
mov
sbb
adc
inc
cmp
bound
mov
sbb
stos
sbb
push
push
pop
or
out
pop
in
sti
divb
dec
mov
jle
test
jae
jbe
fucomp
xor
mov
push
add
xchg
icebp
jg
add
out
xchg
filds
mov
add
shll
shl
jb
lea
dec
xchg
iret
cs
mov
sbb
sbb
movsb
push
ret
sbb
stos
mov
in
cmp
xchg
scas
test
pop
stc
sub
push
sbb
andl
xor
call
test
cmp
and
sub
push
lea
cmp
add
and
xchg
cmc
mov
cwtl
imulb
jecxz
das
data16
cmp
bound
xchg
jg
and
mov
push
jecxz
and
and
faddp
loopne
ret
add
cmova
imul
mov
loop
mov
add
add
add
add
mov
notl
pop
cld
jnp
add
pop
add
scas
add
add
adc
dec
adc
sub
leave
jecxz
dec
loopne
xchg
repnz
sbb
in
pop
mov
test
movsl
mov
push
lret
jecxz
xor
lods
cmp
jo
incb
pop
push
inc
add
or
scas
scas
shlb
iret
pop
ffreep
inc
shll
ret
mov
out
inc
lds
scas
cmp
jns
iret
das
add
clc
mov
ds
jg
and
xchg
aas
push
jg
cmp
aam
pop
jno
xchg
iret
testb
push
shlb
pop
inc
xchg
inc
jge
daa
test
rcrl
adc
and
pop
rcll
setp
fidivrl
or
cwtl
cmpl
outsb
inc
cmp
push
je
xor
int3
adc
fdivs
mov
adcb
push
push
cmp
add
pop
inc
hlt
sbb
mov
add
and
outsb
mov
in
sbb
ja
pop
xor
mov
jge
sub
out
rolb
cli
cmpb
int
push
incb
lea
pop
cmp
fcmovnbe
fcoms
enter
in
push
push
int
ja
dec
or
mov
imul
vmwrite
mov
cmpsl
inc
cmp
call
or
repnz
mov
mov
mov
sbb
repz
xchg
mov
sub
ja
xor
adcl
sbb
xor
push
mov
jo
insb
je
adc
mov
or
mov
sbb
and
popa
stos
or
cmc
popa
rorl
and
into
test
ret
or
js
rcll
dec
pop
daa
fwait
js
jge
pusha
push
add
aaa
xor
neg
and
push
pop
or
pop
inc
sub
cmp
jnp
dec
imul
fisubrs
adc
mov
xor
pop
rclb
sarb
jp
mov
cmc
and
sub
aas
dec
dec
mov
xor
test
xor
movsl
sbb
in
les
loop
mov
cmpsb
fs
imul
mov
stos
movsl
inc
mov
ror
or
inc
dec
insl
pusha
ror
sbb
sbb
shl
xchg
inc
adc
mov
aas
add
sub
int
sti
out
rol
xchg
es
sbb
data16
cmc
out
in
mov
cld
scas
ret
sbb
lods
iret
lds
pop
mov
jmp
pop
rcr
in
adc
icebp
into
push
inc
sbb
adc
movsb
pop
sbb
mov
adc
inc
imul
ficoms
idivl
int3
out
rolb
jle
lcall
push
icebp
movsl
stos
adc
leave
dec
add
sahf
jb
xor
bound
inc
lods
pop
or
enter
inc
dec
jns
xor
add
test
push
rcll
out
xchg
and
dec
jg
sbb
adc
cmc
call
repz
sti
xchg
addl
lods
jo
jp
cwtl
jo
clc
inc
mov
xor
or
dec
nop
je,pt
decb
pop
inc
inc
mov
inc
mov
add
pop
pop
add
sub
sti
lods
or
jmp
addr16
bound
add
cmp
push
pop
mov
daa
xor
sahf
dec
adc
cmpsb
xchg
cmp
movsb
insb
xchg
xchg
fcomp
inc
jmp
mov
gs
cmp
outsb
adc
outsb
push
or
mov
fiadds
les
and
icebp
lds
mov
test
push
pop
ficoms
sbb
sub
sub
gs
stos
add
mov
xor
cmp
mov
pop
test
adc
cmp
push
je
mov
jg
mov
jnp
or
shlb
fdivrp
xor
ja
mov
call
pop
xchg
xchg
adc
adcb
jnp
mov
inc
leave
pop
rcrl
jno
mov
lods
cld
jecxz
mov
mov
and
subb
push
gs
movsl
push
scas
xchg
or
dec
out
fldenv
fwait
ds
imul
int
int
out
lock
sub
daa
lods
pop
test
aam
and
sub
xor
stc
jo
inc
in
fidivrl
lret
decb
sbb
imull
movsb
enter
aad
add
andb
adc
out
sar
mov
cmp
push
add
jle
ljmp
jo
jne
jmp
rclb
xchg
cmpsb
mov
jmp
and
loop
cs
call
cmc
adc
arpl
add
jae
mov
mov
sahf
sub
push
add
mov
ja
push
dec
les
lahf
cltd
jmp
xchg
adc
sub
stc
mov
jl
mov
loop
or
jb
mov
mov
in
xchg
sub
insb
and
pusha
and
or
das
imulb
fmul
leave
stc
leave
mov
ja
mov
push
into
aad
add
adc
and
push
repnz
mov
or
pop
arpl
ds
mov
dec
dec
fwait
insb
enter
xor
xor
lds
in
imul
or
mov
rorb
lock
sbb
clc
mov
int3
mov
ss
fucomp
add
aas
out
loopne
clc
or
in
mov
sub
sbb
dec
jmp
mov
add
or
pop
push
lahf
xlat
mov
ficoml
jmp
or
xchg
xlat
adc
ja
ret
xor
int3
mov
imul
or
cmpsb
pop
sub
push
iret
jb
mov
pop
dec
inc
inc
outsb
jbe
insl
rcrl
idivb
sarl
rorb
mov
sbb
jmp
jle
addr16
addr16
mov
push
or
cmp
data16
pusha
das
shrl
leave
mov
mov
cmp
cmc
sbb
mov
cmp
dec
ljmp
fistpll
ja
mov
mov
mov
and
xchg
jle
ljmp
mov
clc
adc
lds
mov
lret
xor
or
sar
sarl
xlat
xchg
push
mov
inc
scas
cmp
mov
out
stc
idivl
into
add
out
sbb
push
jns
dec
sbb
inc
dec
and
sub
sub
pop
pusha
and
add
jle
in
push
cld
cs
repnz
add
xor
xchg
xlat
inc
std
add
scas
add
add
sarl
jge,pn
push
adc
lcall
lcall
insb
adc
out
lcall
or
mov
mov
arpl
not
adc
and
or
jge
mov
out
mov
cmp
pusha
adc
and
sub
lds
dec
sub
hlt
pop
sbb
pop
out
push
dec
and
scas
push
and
and
xchg
bnd
jnp
mov
mov
arpl
dec
cltd
cmp
data16
jne
inc
mov
pop
cmp
mov
out
dec
sub
inc
push
arpl
cs
scas
ljmp
push
xor
in
sub
push
inc
xor
jbe
fdivr
stos
sub
inc
pop
xchg
jle
lods
lods
imul
jnp
jne
cmpsl
fstps
inc
mov
fisubrl
out
mov
jbe
ret
cmpsb
add
xchg
push
loopne
testb
cli
std
mov
int
xor
add
jecxz
test
add
jnp
jne
cs
stos
insb
and
ljmp
loop
xchg
adc
scas
pop
aas
push
xchg
dec
inc
clc
or
add
fstpl
sbb
lds
test
pop
dec
mov
test
xor
int
sub
mov
ret
movsb
in
scas
cltd
sub
inc
ss
cmp
mov
in
and
pop
popa
arpl
stos
pop
or
pop
pop
outsb
jbe
cld
lea
pop
mov
xor
inc
popa
in
sbb
fdivrs
add
mov
rolb
push
push
fldcw
mov
imul
pop
cld
jb
test
clc
call
mov
mov
fisttpl
cmp
lods
pop
mov
xchg
scas
pop
cmpsl
sub
das
inc
jb
daa
js
sbb
fwait
jge
push
aad
stos
dec
fs
into
stos
aad
add
cmp
nop
pop
cmp
outsb
icebp
jecxz
aas
and
push
loopne
dec
movsl
sbb
popa
inc
mov
jnp
sub
jl
lahf
push
xchg
or
add
xchg
dec
icebp
fs
leave
mov
cmpsl
lods
xchg
or
pop
xor
iret
lea
push
xor
mov
rol
mov
add
xor
loope
test
stc
mov
leave
xchg
push
inc
mov
mov
push
cmp
and
int3
leave
arpl
pusha
mov
xor
push
int
add
push
das
add
or
shll
push
insb
shlb
jae
xor
call
sub
sarl
adc
out
cld
dec
pop
push
mov
jle
add
or
pusha
inc
push
insb
and
lahf
pop
pop
fdivl
add
jno
sbb
push
adc
cmp
push
mov
cmpsb
out
and
test
adc
lret
test
jb
aad
jae
xor
push
cmp
xchg
cwtl
out
loope
aas
loope
outsb
xorl
jbe
xchg
dec
mov
movsl
fbld
mov
push
aam
cmp
xchg
leave
lret
pushf
arpl
sub
and
cmpb
outsl
mov
lds
outsl
sbb
pop
cmp
movq
clc
add
pushf
cmp
mov
add
add
add
dec
leave
mov
add
stos
imul
add
inc
pop
cli
ja
sbb
lock
mov
fsts
mov
sbb
adc
mov
jne
dec
dec
lods
fdivp
xchg
popa
lret
sub
movl
fwait
lods
enter
mov
cld
jne
ds
lock
loopne
dec
iret
mov
or
pop
sub
bound
repz
call
jo
jmp
jmp
fsts
rol
scas
xor
hlt
sbb
sbb
mov
mov
xlat
ds
call
xlat
outsl
xchg
push
jae
sub
aaa
out
push
in
pop
vsqrtsd
add
scas
dec
or
iret
popa
push
sbb
mov
gs
sbb
fmuls
cmp
shrb
loope
xchg
in
rcll
mov
sbb
adc
cmp
mov
dec
xor
fidivs
dec
mov
ja
fstpl
lret
lret
int
adc
cmp
xor
mov
or
jns
adc
and
cmp
push
lret
int3
enter
adc
addb
clc
out
rcrl
aaa
out
in
add
dec
sbb
or
pop
test
pop
daa
lcall
js
movsl
enter
repnz
mov
mov
cmpsb
and
xchg
sub
inc
out
mov
lods
sub
in
aas
or
fistpll
jge
jns
jl
lods
test
or
xor
test
ss
fbld
lock
leave
dec
and
js
sti
jl
cmp
and
push
push
js
adc
loop
aas
jmp
shr
popf
gs
stos
loopne
mov
test
ret
icebp
and
push
loopne
das
into
dec
jmp
test
jl
push
add
mov
int
sub
scas
xchg
jne
idivb
inc
xor
decb
mov
das
cs
xchg
adc
inc
jo
adc
scas
add
xchg
fsubrl
dec
add
mov
or
outsl
mov
clc
and
fdivrs
out
mov
stc
movsb
inc
insb
cltd
adc
loope
mov
and
push
add
idivl
push
stc
stos
outsb
lcall
frndint
arpl
mov
ljmp
test
and
or
xchg
dec
inc
dec
loope
mov
sub
imul
jne
cmp
cmc
std
sbb
add
jae
jl
and
cmpsb
aaa
cwtl
push
lret
lret
addr16
mov
movsb
xchg
lret
in
sti
sub
pop
push
ss
repz
test
and
fisttpll
cli
rorb
add
imul
dec
or
xor
cltd
scas
cmp
pop
call
sub
insl
les
or
jo
xchg
test
int3
jl
add
inc
sarl
xchg
int3
insb
nop
nop
push
dec
cmpsl
add
lods
imul
call
sti
pop
or
sub
mov
in
adc
sub
and
push
xor
cs
push
cmpsl
jl
sbb
and
insl
je
add
loop
pop
sbb
sti
out
mov
inc
fwait
inc
or
movsb
bound
ret
inc
and
ret
inc
cwtl
sub
add
dec
fldcw
arpl
jl
aam
add
ret
repz
fcmovnb
pop
sbb
gs
pop
insl
add
scas
add
add
push
sahf
popf
js
adc
dec
ljmp
scas
xrelease
inc
dec
cmpsl
out
mov
gs
cmp
sar
jp
test
cmp
xchg
movsb
or
mov
cli
xchg
push
or
cmpsl
mov
push
mov
jo
dec
push
adc
aad
jecxz
adc
cmp
sub
add
pop
xor
push
inc
and
inc
push
ret
or
sub
pop
ficompl
jo
mov
inc
loop
xchg
hlt
pushf
fadds
stos
xchg
stos
push
hlt
adc
pop
dec
adc
icebp
out
fcoml
sub
nop
clc
popa
push
push
pop
rclb
mov
xchg
fidivrs
push
stc
cmp
imul
ss
mov
enter
push
xor
loop
push
popf
scas
lcall
pop
nop
xchg
lret
pushf
or
and
enter
mov
popa
inc
sahf
mov
imul
mov
push
call
mov
push
loopne
inc
jg
mov
out
insb
push
mov
rolb
aad
inc
vdivss
xchg
and
sti
out
scas
sub
or
lahf
lea
mov
mov
int3
pop
dec
and
or
sarb
js
sub
shlb
jmp
test
mov
cmpsl
cwtl
mov
cmpsb
sbb
xor
fdivrl
xlat
lods
xchg
jno
ds
clc
roll
pop
lea
cli
push
outsb
jae
insb
push
pop
and
dec
out
jge
sub
xchg
mov
dec
or
pop
es
in
std
xchg
cld
pop
les
std
inc
jne
sub
enter
xchg
add
ja
push
sub
aad
push
iret
jb
inc
add
push
sbb
scas
insb
mov
hlt
push
out
fwait
loopne
fdivrp
pusha
decl
cld
mov
xchg
push
jle
aas
sub
jp
cmp
daa
xor
idivb
dec
sub
and
pop
mov
add
cmp
pop
aad
shrl
lahf
mov
enter
sti
jl
daa
lret
je
dec
ja
into
call
pop
xlat
sub
gs
lcall
jmp
xor
jl
fld1
mov
insl
mov
orl
jl
inc
mov
mov
popa
mov
cmc
sub
pushf
jns
faddl
test
jmp
mov
nop
sub
fisubrs
sar
push
leave
outsb
xlat
aad
icebp
call
loope
movl
mov
sarl
xor
sub
sub
pop
mov
lock
das
out
add
add
movsb
cmp
inc
or
call
cmpsb
out
insl
arpl
lds
sbb
mov
cmc
cmpsl
dec
sbb
pop
mov
imul
stos
add
cmp
sub
std
xchg
stos
les
push
les
mov
or
push
out
mov
lock
pminsw
sbb
pusha
xor
shl
jo
icebp
and
out
xor
cmp
sysenter
and
push
cltd
sahf
in
ljmp
cltd
sbb
pushf
std
scas
aaa
or
push
pop
js
icebp
push
test
out
add
cmp
mov
pop
jge
daa
jns
pop
xchg
cltd
lahf
sar
cmp
push
xchg
ja
mov
cmp
xor
add
and
gs
daa
sti
mov
push
mov
xchg
and
scas
add
add
in
jae
jle,pt
push
mov
sbb
pushl
jmp
dec
stos
data16
lret
xor
pushf
pop
imul
mov
in
jne
jno
lods
fnstenv
jecxz
stos
std
cmp
xor
mov
cwtl
mov
cmp
xor
xchg
xchg
jle
jmp
lods
sbb
repnz
por
gs
inc
mov
in
sub
mov
adc
xlat
enter
repnz
pop
push
movsl
push
mov
and
clc
xor
dec
dec
xchg
jns
repz
xchg
push
mov
mov
mov
push
pop
shll
dec
sbb
dec
jg
xchg
or
cmpsb
jg
push
pushf
jl
adc
cltd
stos
ret
mov
jecxz
inc
add
mov
mov
push
data16
int3
sub
jbe
stos
insl
popf
lods
xor
into
lock
es
cs
mov
xchg
gs
lret
decl
fidivrs
fldln2
xchg
test
clc
xor
into
sarl
testl
jae
lret
or
push
cld
pop
and
js
and
pop
push
push
movsb
ljmp
cmp
lgs
imul
jp
fs
xchg
jno
cli
outsb
cwtl
fisubrs
cmc
jecxz
mov
sub
fs
aas
add
xchg
sub
cwtl
push
sub
cmp
adc
addl
jmp
sbb
dec
mov
not
add
ljmp
push
outsl
push
clc
sti
loopne
cmc
mov
xor
jp
stos
ds
lods
push
add
je
xchg
mov
pop
rclb
loopne
add
mov
xor
cmp
sbb
daa
sub
loop
xchg
movsb
jbe
push
arpl
cmpsb
mov
mov
dec
test
mov
andl
cmp
sub
mov
xchg
and
mov
loope
inc
and
inc
in
xchg
inc
push
call
pop
push
pushf
sbb
fucomi
lret
in
shll
and
sbb
xchg
test
jbe
inc
push
leave
popf
xor
or
cmp
push
iret
pop
imul
outsb
or
push
hlt
jge
mov
mov
inc
jo
out
aas
cwtl
sbb
imul
ds
out
jns
bound
movsb
cld
mov
fbld
add
push
add
jecxz
out
loop
inc
sub
fmull
add
xchg
in
loop
dec
adc
dec
pop
outsl
sbb
cmp
pop
cmp
xchg
dec
cs
or
xorl
sub
imul
popf
cmpsl
push
out
repz
in
sub
or
fisubrs
xor
cmpsb
adc
test
xchg
std
sub
dec
lock
jg
mov
daa
pop
sti
push
lret
bound
out
mov
jle
dec
sub
jne
insl
and
sub
or
mov
jae
jmp
aas
inc
xchg
lea
and
hlt
sarl
or
popf
loopne
push
cwtl
ficomps
data16
shll
pop
shll
arpl
in
js
add
dec
jb
in
mov
jecxz
sbb
xchg
or
call
push
sarb
sahf
jbe
gs
cmpsb
xchg
in
stc
pop
cli
jno
lds
or
lret
push
lock
aam
add
mov
mov
aas
sysexit
pop
push
mov
iret
fnsave
add
add
pushf
outsl
mov
in
mov
push
adc
fnstenv
mov
cltd
push
jo
and
cmp
jb
pop
and
divb
push
out
sub
shll
jb
cmp
or
xor
adc
or
mov
cmc
iret
in
fstpt
mov
test
mov
xlat
or
sahf
or
inc
mov
sub
lds
adc
insb
lods
out
je
insl
mov
sub
cmpsb
jnp
dec
test
enter
sub
outsl
sub
bound
cli
aam
add
jno
test
test
adc
loopne
lds
stc
inc
push
jge
pop
adc
sub
mov
lea
aam
dec
mov
push
push
mov
fisubs
test
sbb
pop
xchg
aas
jns
fildll
lahf
jg
push
jle
jl
dec
arpl
inc
pop
add
pop
test
sahf
pop
pop
xor
dec
scas
jae
or
stc
andl
jb
fldl
push
mov
scas
and
out
jmp
dec
stos
scas
push
push
pusha
shlb
sub
xor
pop
push
mov
clc
cmp
jge
out
jno
jne
lea
cmp
out
cmp
push
movl
std
inc
pop
pop
dec
mov
xor
sbb
mov
sbb
pushf
data16
pop
jg
mov
dec
inc
pop
shr
bound
sub
mov
into
add
shlb
xchg
aam
cmp
leave
stc
sbb
jo
mov
inc
outsb
jl
bound
cmpsl
cli
jo
inc
pusha
mov
dec
mov
pop
push
ja
cmp
jnp
orb
fs
cmpl
shl
push
jp
sub
dec
fsub
ret
sarl
bound
inc
ljmp
pushl
inc
cwtl
loope
in
pop
mov
das
and
loop
or
and
js
lods
mov
insl
inc
popa
ljmp
aam
ret
shll
in
test
sub
ror
adc
ja
mov
pushf
jae
pop
jecxz
enter
mov
cmpsb
shr
xchg
mov
dec
adc
jge
fisubrs
add
dec
cmpsb
cmpsl
or
adc
xor
lds
ds
mov
inc
add
mov
fimull
inc
xor
and
clc
loope
ss
dec
sbb
movsb
and
mov
jae
cli
add
xlat
psubd
gs
cli
inc
cmp
adc
sbb
negb
mov
mov
daa
mov
in
mov
push
push
daa
dec
lock
iret
cld
int3
pushf
add
xchg
xchg
mov
pop
sbb
outsb
add
movsb
stc
mov
movsl
repz
icebp
enter
lea
aaa
movb
ret
sahf
or
adc
aad
imul
mov
or
sbb
std
js
nop
inc
mov
or
out
jg
push
mov
mov
insb
mov
das
xchg
push
not
sub
sub
stc
or
push
adc
xor
out
add
enter
sahf
pop
xor
test
xchg
and
and
sahf
pop
mov
sbb
mov
sub
xor
jnp
and
cmpsl
xchg
mov
cmp
shlb
pop
add
add
repz
push
cmp
xchg
aam
packsswb
add
xlat
sub
addl
pushf
stos
or
fisubl
ffreep
push
cmp
mov
aas
pusha
je
scas
mov
cwtl
sbb
out
mov
mov
imul
cmp
clc
cmp
or
mov
and
ljmp
pop
push
inc
insl
test
inc
xchg
gs
pusha
mov
pop
fidivrs
xchg
mov
cmp
divl
ret
sbb
repz
jge
int
jle
aas
ret
lea
adcb
lahf
fisubl
imul
addr16
push
in
cli
cmpsl
mov
iret
fistps
mov
jo
in
adc
xor
mov
pop
clc
rcrb
out
aam
sub
sbb
xor
push
addr16
data16
xor
outsb
mov
mov
sub
popa
xor
scas
mov
add
mov
loopne
ret
adc
fstl
sahf
xchg
push
push
jg
decb
mov
xor
scas
push
xchg
push
clc
fnstenv
stc
and
movsl
lret
push
test
mov
pop
mov
mov
repnz
cmp
mov
and
clc
jle,pt
jl
js
sti
lcall
mov
adcb
faddl
pop
pop
ds
adc
dec
sub
out
pop
cmp
subl
dec
cmpsb
push
adc
hlt
mov
sti
sahf
stc
push
cmp
mov
ret
inc
fs
je
test
sahf
stos
fs
sub
shl
pop
test
push
xchg
inc
jno
cmp
lock
dec
xchg
insl
inc
in
xor
and
daa
inc
sub
addr16
int3
stos
pop
push
adc
or
and
inc
and
fbstp
add
lock
test
pop
in
aaa
mov
ficoms
and
int
out
xchg
or
cmc
insb
into
adc
cmp
push
in
dec
mov
xor
cmp
int
pop
test
shl
aas
jp
cld
and
mov
mov
mov
push
les
and
jns
add
icebp
jmp
in
sbb
test
jg
decl
mov
dec
pause
or
xchg
cwtl
sub
sub
loopne
mov
addr16
pop
jo
cmpsl
cmc
enter
add
loop
lds
xchg
fs
sbb
jns
fildl
dec
test
out
mov
jne
mov
movsb
cmpsb
ljmp
jbe
nop
or
cltd
pop
jo
rorb
adcb
hlt
dec
inc
cmpsl
mov
popl
push
jns
std
sub
arpl
jl
cmpsl
sub
jns
push
pop
sbb
xchg
push
jecxz
adc
ss
pop
hlt
test
into
aam
addr16
jo
fdivr
mov
mov
sub
dec
xchg
push
gs
and
inc
pushl
add
lret
add
or
ret
or
add
int
mov
or
movsl
add
xor
xchg
stc
pusha
ljmp
jmp
adc
add
and
pop
xor
fdivp
sbb
test
dec
cltd
fs
shll
pop
cmp
pop
jbe
cli
movl
add
pushf
hlt
pop
jae
fwait
jnp
sbb
mov
add
xchg
or
lcall
adc
scas
add
add
lods
jnp
adc
repz
pop
push
add
std
push
lock
sbb
mov
xchg
sub
cmp
in
cmpsl
sub
mov
scas
dec
jmp
fisttpl
into
cmc
test
inc
insb
testl
add
push
cld
test
dec
xor
pop
xor
mov
jbe
xchg
jecxz
stos
pop
add
sbb
sbb
adc
jmp
shll
mov
enter
std
pusha
pop
int3
adc
insb
iret
andl
aam
test
notl
or
adc
loopne
cwtl
test
add
mov
jo
rcrl
xchg
lret
jle
sbb
fdivs
lret
cltd
cmp
fiaddl
mov
sub
iret
push
test
fs
pop
mov
lret
or
fs
inc
inc
sub
mov
mov
scas
lods
test
jg
aaa
cmp
inc
leave
inc
sub
sbb
nopl
test
ss
jno
mov
mov
icebp
inc
out
clc
sub
mov
inc
loopne
out
mov
int3
mov
push
xchg
add
cwtl
iret
inc
dec
test
xchg
or
add
and
mov
inc
lcall
push
adc
ffreep
jno
push
addr16
sub
adc
push
ficomps
cmp
in
pop
pop
mov
jnp
fsub
pop
push
movsl
mov
mov
xorb
or
xchg
push
push
daa
fs
std
movsb
mov
pop
pop
loopne
mov
mov
inc
mov
mov
pop
in
jns
mov
fildll
enter
jecxz
gs
push
stos
push
xlat
out
call
dec
aas
xor
xchg
and
adc
pop
cmp
test
sub
out
sarl
sub
aas
add
adcl
int3
xchg
jle
loopne
enter
stc
and
out
fisttpll
push
cld
dec
xor
les
popf
movsb
cmp
scas
flds
sub
push
jle
out
in
xor
sub
dec
mov
shrl
aad
adc
aam
and
test
sbb
repz
lcall
fisubrs
scas
dec
adc
sub
xor
aas
jl
jge
and
jno
mov
jl
addr16
mov
sbb
repnz
jns
adc
pushf
daa
push
test
mov
cmp
fcmovnu
jmp
out
out
leave
xchg
shll
ss
add
jp
andb
sub
lahf
mov
bound
inc
inc
sub
mov
cwtl
jg
lret
xor
or
dec
add
testl
cmp
roll
in
inc
cmpsl
dec
mov
push
or
mov
stos
or
add
sahf
mov
std
cmp
cld
je
hlt
xchg
sub
lret
xor
mov
adc
sub
mov
mov
dec
push
push
add
xor
mov
dec
into
push
jp
ss
and
or
cmp
jmp
xlat
inc
or
and
push
add
lds
ficoml
adc
cli
add
sub
fsubp
mov
push
sub
mov
mov
xor
ljmp
add
add
nop
mov
fildll
and
push
mov
mov
add
add
fbstp
pop
and
sahf
stos
repz
xchg
lods
and
jbe
mov
hlt
xchg
and
and
in
mov
and
add
sub
repnz
das
mov
adc
xchg
cmp
ret
sbb
std
es
jmp
in
lcall
fmul
mov
sbb
pop
adc
ja
mov
ficoml
loopne
adc
or
dec
jne
and
lcall
mov
ret
or
insl
repz
cmp
xchg
je
add
hlt
mov
dec
add
in
cwtl
cmpsb
add
scas
in
testl
add
sbb
pop
mov
arpl
push
fstpl
pop
sub
out
ds
icebp
leave
dec
int3
inc
and
shrb
mov
or
sub
cmp
pop
mov
mov
xchg
xchg
jb
sbb
sbb
xchg
xchg
mov
jns
jne
mov
lods
lea
sbb
push
into
ffreep
push
mov
addr16
cmp
dec
lea
push
aam
test
lock
jno
cmp
and
cmpsb
jo
cli
rcr
mov
stos
sub
rcll
mov
inc
jge
andl
push
fmul
dec
sub
lahf
jbe
iret
dec
int
add
cmc
mov
das
jmp
jns,pt
jg
and
adc
jmp
mov
insl
jnp
push
sbb
jp
ds
cmpsb
je
cld
push
or
cmp
pop
divb
subb
dec
push
dec
cs
std
jnp
fsts
out
sar
pop
push
in
dec
gs
or
lods
cmpsl
cltd
pop
mov
icebp
outsb
and
xor
adc
je
in
sbb
addr16
out
pop
ret
adc
test
mov
sbb
mov
lahf
jb
xor
pop
out
shufps
mov
inc
int
movsb
cmp
mov
and
mov
sbb
rorl
dec
cli
jns
jae
aas
popf
or
xlat
std
repz
dec
cli
jge
dec
movsb
cmp
cmp
mov
test
pmulhuw
sub
movsl
aad
test
repz
ljmp
shll
int
pop
add
test
ficompl
dec
mov
ljmp
cmp
out
cmp
stos
pop
adc
push
jo
shrl
test
mov
movsb
lcall
inc
lods
icebp
xchg
fstl
int3
or
sub
jnp
hlt
push
push
dec
outsl
add
imul
push
insb
xchg
mov
dec
mov
std
daa
and
les
jnp
adc
fs
daa
and
xlat
cs
aad
in
popa
add
inc
sub
xor
incl
cmp
out
fs
dec
es
loopne
leave
xchg
pusha
ror
cmp
pusha
out
shrb
cltd
inc
or
jne
sbb
test
call
mov
fisubl
ret
mov
adc
mov
mov
jmp
dec
pop
dec
add
int
jns
addr16
sub
icebp
repnz
test
imul
cmp
cmp
rcl
popa
rcrb
dec
test
in
std
pop
rcrb
addl
scas
add
add
mov
inc
in
addr16
ret
jnp
sbb
and
cmpsl
pop
ds
div
xor
or
cwtl
push
or
mov
lock
push
aaa
cmp
ficoml
mov
wrmsr
sarb
popa
insl
sti
cltd
adcb
pop
dec
insl
movsl
lcall
and
mov
and
fldl
cltd
xchg
std
jo
ss
jp
add
sub
daa
loopne
into
jo
xor
cltd
jmp
daa
mov
lock
das
lds
out
lods
lcall
jle
sahf
inc
rorb
dec
ljmp
and
sub
or
loop
xchg
pushf
arpl
inc
xchg
cmp
cmp
stc
addr16
mov
ret
cmpsb
cmpsb
xchg
mov
fistpl
aaa
jnp
and
movsb
cmp
mov
leave
rolb
jns
push
and
mov
in
jae
gs
pop
jne
lret
mov
aaa
pop
sub
and
and
repnz
stos
movsl
addr16
sbbl
stos
jne
xchg
daa
or
or
daa
test
les
xchg
js
cmpsb
mov
ret
adc
add
and
cmp
push
shrl
and
lea
test
ja
inc
xchg
inc
in
sub
cli
mov
or
sbb
cmp
std
pusha
imul
lods
xor
mov
mov
ja
and
insl
pop
jp
mov
or
testl
jge
mov
or
inc
sti
repz
add
bound
pop
xchg
outsb
ficoms
or
mov
push
ret
icebp
adc
push
pop
rcll
bound
pop
out
pop
incb
adc
int3
or
ja
cltd
popf
mov
inc
xor
ds
pop
push
stc
pop
scas
pop
stos
mov
hlt
in
xchg
shrb
cmpsl
test
jnp
fwait
imul
lods
xor
hlt
or
shrl
cmpsb
xor
push
mov
ss
fs
dec
sbb
in
jle
out
sbb
pop
add
lock
jmp
push
sbb
cmp
loope
mov
lret
jae
jle
jbe
and
mov
mov
loopne
cli
stc
adc
data16
mov
jne,pn
arpl
or
hlt
pushf
jo
push
ret
mov
and
std
add
lret
inc
insl
leave
or
popa
imulb
dec
dec
cmp
lahf
add
imul
ljmp
leave
mov
or
jecxz
clc
sti
or
adc
shll
jb
orb
cmp
lcall
pop
jb
adc
aam
sub
jge
dec
sti
fisttpl
push
lea
stc
mov
xor
aad
jmp
sarb
and
xchg
out
and
mov
adc
mov
lcall
dec
pop
inc
int3
adc
inc
jo
cmpsl
movsb
gs
lods
push
lods
stos
push
sbb
fsubs
out
loope
mov
add
es
cmpsb
mov
aaa
and
cmp
xchg
add
das
sbb
setb
sahf
mov
sub
out
jns
xlat
clc
jo
mov
jne,pt
mov
hlt
sbb
sarb
sub
cwtl
imul
sbb
pop
push
fisubs
sub
dec
push
adc
push
test
mov
in
sub
pop
das
push
pop
or
xor
int
aas
movsb
xchg
test
cmpsl
scas
mov
dec
fbld
adc
leave
iret
mov
sti
and
js
xchg
js
flds
and
jecxz
pusha
sbb
popl
push
imul
das
cld
xchg
dec
mov
xchg
arpl
sub
push
orl
sbb
adc
test
lahf
pop
sbb
repnz
gs
ret
pop
pushf
and
mov
daa
dec
lods
aad
and
xor
mov
cmpsb
out
cmp
subb
xchg
aam
insl
xlat
in
sahf
nop
adc
jl
imul
fsts
xor
xor
adc
and
mov
fcompl
dec
mov
gs
daa
mov
cmpsb
dec
pop
jnp
mov
lcall
and
add
lret
mov
inc
inc
pushaw
pop
lock
push
sbb
push
and
xchg
in
adc
pop
and
jnp
test
jnp
sarb
push
push
or
test
movsb
mov
xchg
jp
aaa
ficomps
cli
cltd
loopne
daa
pop
rolb
inc
sbb
jmp
rorl
in
les
mov
sub
cmpsl
dec
xchg
push
and
jb
push
dec
popa
push
cmp
rorb
inc
add
cs
sbb
xlat
roll
xchg
aam
gs
sbb
ret
popf
repz
or
sbb
pop
stc
mov
inc
xchg
xor
lret
icebp
jg
mov
aas
lcall
xchg
xchg
mov
push
dec
lea
das
test
and
xor
adc
out
mov
pop
xchg
jle
pop
sbb
insb
in
test
push
xchg
and
cli
mov
insb
loope
int
adc
cwtl
add
ljmp
daa
xor
sub
sub
inc
mov
das
mov
sub
add
stos
mov
ret
jne
inc
or
inc
and
pop
jecxz
mov
xchg
ret
js
sbb
call
jo
jo
sbb
shrl
sub
sub
and
scas
cwtl
xor
jnp
cmp
dec
or
mov
push
rcr
fyl2x
adc
jge
add
pop
roll
mov
stos
pop
or
pusha
push
dec
popl
incb
ret
add
insl
jmp
aam
outsl
xchg
gs
movsb
ljmp
test
gs
scas
insb
jae
xchg
fnstsw
mov
js
outsw
divl
mov
cmp
ss
test
cld
int
mov
aad
sub
ret
into
fdivrs
stos
repnz
lret
add
dec
lret
and
leave
insl
push
fs
hlt
cmc
mov
or
sbb
sahf
mov
inc
jl
pusha
xchg
lea
out
sbb
mov
xor
xor
lahf
or
loopne
fs
imul
jp
add
mov
imul
and
arpl
arpl
push
mov
and
push
rolb
dec
jo
jl
cld
out
jbe
outsl
cmp
lcall
add
jbe
sbb
or
add
xor
xchg
xor
dec
in
loop
mov
nop
fbstp
push
mov
out
sub
or
cmpsb
ret
mov
jge
jne
pop
push
les
int
imul
lret
les
or
jne
push
mov
fcompl
xchg
mov
in
or
cltd
and
add
out
loope
add
xchg
popa
mov
push
xor
push
cmp
mul
pop
addr16
test
iret
push
cwtl
bound
and
xchg
jle
dec
xor
lds
fmuls
lods
jnp
je
inc
je
mov
outsb
int
cmc
int3
push
jo
xor
cwtl
out
push
in
mulb
jne
or
frstor
pop
test
dec
out
into
stos
mull
inc
mov
sbb
dec
jae
jae
mov
lds
xchg
das
rcll
std
add
xlat
sub
idivl
mov
sub
fprem
xchg
iret
cmpl
test
icebp
out
fcmovnu
fwait
cmp
leave
test
add
pop
jno
loope
or
mov
sbb
pushl
fldenv
lock
mov
xchg
out
mov
dec
inc
adc
xchg
jp
or
mov
jle
lret
mov
cmp
repz
or
sub
ja
ds
es
push
iret
imul
aas
pop
inc
adc
rcrb
xchg
orl
js
sub
xor
dec
leave
mov
and
addl
daa
mov
jmp
jnp
cmp
push
andb
es
add
sub
loope
fistpl
cli
xchg
cmp
pop
cmp
scas
mov
sbb
adc
sub
into
mov
daa
cmp
test
loope
jb
fs
inc
dec
jmp
into
in
aas
lcall
lods
inc
fsts
push
fisttpll
push
ljmp
movsb
mov
pop
cmc
ds
xlat
das
lahf
xchg
jns
ret
xor
cltd
jnp
jmp
adc
repnz
nop
paddsb
cltd
jp
cld
mov
repz
xchg
fmull
outsl
ds
adc
leave
addr16
lods
mov
or
jnp
adc
test
out
mov
xor
pop
pop
iret
movsl
jno
sub
pop
mov
pushf
enter
xchg
or
lret
xor
popa
mov
adc
inc
cmp
repz
imul
ss
scas
orl
ret
add
pop
sbb
scas
mov
push
fisubl
out
je
lret
cs
lcall
cltd
or
or
inc
cld
data16
and
jmp
fidivl
sbb
xlat
push
rol
ret
push
lods
pop
mov
pusha
out
out
subb
add
in
mov
call
inc
push
enter
stos
loop,pn
rorb
jecxz
out
dec
aaa
mov
lret
xchg
aam
out
mov
mov
shrl
inc
popf
inc
sti
push
pushf
pop
icebp
mov
pop
repnz
aaa
loop
and
xor
fisttps
lahf
ljmp
bound
cwtl
rcrl
int
sar
add
fldl
fstpl
packssdw
mov
add
or
lahf
sahf
out
sub
mov
add
mov
push
xchg
push
adc
inc
cmpsb
add
scas
test
push
inc
insb
inc
push
jmp
or
jbe
insb
inc
into
in
shlb
stos
dec
dec
in
xlat
jg
and
jae
push
xlat
data16
push
sahf
lgs
lods
mov
add
enter
movsb
das
iret
lcall
push
stos
pop
push
xchg
push
and
icebp
xlat
aad
shlb
xor
adc
pop
nop
mov
setb
psubq
addb
pop
shlb
add
cmc
cmp
jl
add
icebp
divl
xor
stos
es
cmp
mov
fstl
and
push
outsb
mov
mov
push
test
pop
pop
aaa
or
add
out
ret
insb
xchg
stos
rol
cmp
and
test
cmp
call
movsl
fsubrl
push
mov
fs
into
and
push
sbb
scas
cmp
sarb
mov
cltd
mov
movsb
popf
and
dec
jne
stos
insb
movsb
adc
push
ret
xchg
clc
pop
daa
cmp
jb
xchg
mov
adc
xchg
push
add
lds
cmp
xor
jnp
xor
fst
je
dec
push
scas
arpl
out
push
pusha
std
inc
and
or
push
mov
lea
push
sbbb
data16
sbb
cmp
pushf
inc
pop
outsb
shlb
mov
loopne
aam
mov
add
repnz
jg
xor
sub
jp
movsl
in
fsubl
pop
inc
js
mov
orl
popa
mov
jae
daa
repz
cld
jnp
out
mov
stc
cli
lods
xchg
pop
int3
inc
dec
cs
or
adc
in
sbb
ret
jo
test
and
jbe
aam
lret
xor
sbb
sbb
jbe
jb
mov
jnp
xchg
mov
test
ljmp
mov
or
test
ficoml
stos
int3
movsl
dec
cmc
dec
lea
inc
imul
pop
fdivrl
test
mov
lods
ja
pop
bnd
pushf
das
loope
push
inc
xor
adc
scas
cmp
bnd
add
pop
mov
jl
movl
insb
add
push
mov
xor
imul
xor
jp
push
repz
mov
test
xchg
jnp
mov
mov
das
es
shll
cmp
je
push
pop
mov
push
lret
je
jne
lods
fdivs
cmp
hlt
lock
fmuls
stc
lds
ljmp
jo
aas
repz
xchg
lds
dec
or
add
mov
out
lcall
outsb
fiadds
test
push
jp
cmp
sbb
ud0
push
xchg
insb
sarb
in
xor
sbb
jmp
add
jmp
add
loop
cli
sarb
js
mov
popf
in
push
stos
xor
or
sub
and
insb
mov
sbb
mov
or
sbb
mov
leave
pop
mov
cmp
imul
rcll
enter
or
sbb
or
mov
jns
sbb
add
ds
dec
mov
popa
dec
push
sbb
adc
and
add
add
xlat
movsb
xchg
insb
aad
aas
in
pop
fxam
loopne
jae
in
shll
out
cmp
xchg
lret
movsb
push
stos
fldenv
scas
xlat
insb
mov
lahf
pushf
and
repnz
shll
cld
divl
push
sub
mov
mov
sub
and
and
jecxz
pop
mov
js
nop
scas
je
pop
out
inc
lods
adcb
push
icebp
arpl
pushw
aam
je
je
push
data16
cmp
mov
inc
lahf
insl
popa
cmp
adc
adc
daa
mov
mov
dec
call
xchg
jns
stc
shr
dec
ljmp
jae
les
loopne
push
push
pop
jp
xchg
loop
lret
xchg
sub
cli
repz
xchg
out
xchg
pop
cmp
sbb
subb
cmp
adc
mov
std
adcl
aaa
push
fs
clc
cmp
add
movsl
pop
add
sub
sbb
hlt
test
lock
mov
mov
les
movsl
pop
pop
cmpsl
loopne
lret
mov
aad
push
xchg
in
sbb
arpl
jp
add
stos
and
icebp
push
pusha
iret
int
ret
rolb
scas
aam
mov
in
sbb
daa
movsl
jno
inc
je
and
jae
sbb
insl
jbe
loope
inc
leave
repz
lock
sbb
cld
insl
inc
cmp
xchg
enter
inc
in
mov
jmp
test
test
add
scas
out
sbb
enter
in
jle
movsb
mov
push
divl
jmp
sbb
mov
mov
jle
adc
rcl
test
sahf
and
mov
outsb
pop
xlat
sbb
scas
in
repnz
push
sbb
mov
out
inc
mov
neg
add
mov
sbb
mov
xchg
mov
or
pop
jmp
dec
push
mov
cmp
and
rorl
rcrb
pop
dec
mov
daa
adc
mov
cmp
dec
mov
aam
jp
sub
inc
ret
iret
icebp
and
jno
insl
mov
pop
xchg
in
cld
test
add
add
sbb
adc
lret
out
sbbb
test
push
xchg
pop
cmp
push
into
int
out
out
pop
mov
xorb
or
pop
nop
loop
push
jle
std
aad
jp
rorl
rcrl
fs
cli
leave
cltd
mov
sbbl
js
add
push
inc
dec
inc
jecxz
lahf
or
cmpsl
and
lret
add
addl
push
jbe
out
xor
fwait
xor
dec
mov
into
mov
js
and
adcl
addb
in
add
sbb
and
xchg
mov
imul
aaa
mov
icebp
cmpsb
mov
sarl
sub
push
adc
or
push
pop
loop
cmp
dec
push
or
sub
mov
sub
mov
sub
jns
popf
dec
jmp
loop
daa
adc
cmp
into
jns
add
test
push
pop
shl
jae
and
mov
xor
jae
sbb
clc
lret
push
inc
jb
lea
push
add
or
xlat
and
aaa
std
out
and
cmc
adc
xchg
add
scas
add
add
mov
jp
jmp
push
jmp
jbe
mov
fiaddl
movsl
iret
or
roll
push
fistpl
fs
push
adc
and
add
jno
movb
lret
jns
mov
scas
push
xchg
sahf
mov
stos
mov
jno
adc
sahf
jp
test
sub
bound
bound
notb
loope
nop
adc
jle
pusha
pop
mov
push
mov
jnp
stos
fs
test
mov
lahf
mov
mov
out
cwtl
mov
adcl
stos
dec
les
xchg
popa
adc
int
xchg
and
in
std
lret
cmp
mov
arpl
cmpl
xchg
push
insl
mov
xlat
inc
lahf
movsl
std
cld
insl
sub
pusha
xchg
dec
rorl
pusha
push
adc
movsb
insb
push
arpl
sbb
inc
jnp
and
das
cs
mov
mov
hlt
fisubrs
xchg
cmc
jmp
mov
dec
mov
pusha
scas
iret
cld
mov
push
and
and
int
jp
push
mov
lods
push
mov
inc
lds
or
push
push
or
imul
inc
mulb
call
cmpsb
rcrb
je
xchg
in
outsl
jmp
mov
repz
inc
mov
insb
adc
add
cmp
call
stc
rcrl
sbb
cmc
mov
adc
movsl
cli
add
jns
std
enter
and
lea
decl
inc
add
sub
dec
pop
mov
jl
les
aaa
cmc
push
fisttpl
jmp
mov
loopne
push
lock
push
pop
lret
loop
insb
jmp
fisttps
cmpsb
jns
push
je
data16
inc
rcrl
pop
insl
das
mov
adc
jle
es
cmp
out
adc
andb
cltd
mov
pop
mov
mov
imul
mov
jns
push
pop
test
mov
hlt
imul
mov
popf
fcoms
std
mov
std
and
cmp
push
sub
ja
mov
fcmovb
xor
sbb
je
dec
sub
mov
xchg
mov
jne
push
jl
sub
inc
out
insb
ja
sub
mov
inc
sarl
jge
ds
das
sub
hlt
inc
repnz
ljmp
mov
or
xchg
dec
popf
push
push
jo
pop
iret
adcl
xor
jmp
lahf
fmull
lods
add
dec
hlt
ret
test
push
ja
pop
std
sub
jae
xchg
mov
inc
jno
stos
sub
addr16
test
add
call
cs
insb
push
push
mov
push
add
mov
push
cmpsb
iret
dec
inc
ret
and
sahf
ds
fisubl
xchg
lahf
dec
dec
dec
add
cmc
cmp
movsl
cmpsl
pushf
data16
xlat
and
test
cmp
jnp
push
xchg
push
pop
mov
or
and
cmp
daa
lahf
sbb
mov
fcom
add
or
sbbb
stos
sarb
fwait
mov
into
mulb
mov
xor
jns
sbb
sub
cs
sub
dec
inc
sbbb
xor
fmul
sbb
add
nop
int3
popf
fistps
lea
jmp
xchg
sbbl
sbb
jmp
icebp
push
jae
lea
jl
ffree
lcall
jle
lds
xchg
gs
xor
inc
dec
in
cs
fwait
jge
jnp
mov
fimuls
pop
out
sbb
push
popa
push
ja
stos
push
cmp
lds
cmc
enter
outsb
gs
and
jmp
adc
mov
imul
xlat
sahf
icebp
test
jmp
sbbb
inc
cltd
out
aad
ds
call
in
xchg
mov
xor
xchg
pop
mov
adc
les
fisubl
pop
pop
pop
mov
add
out
jge
xorb
sbb
jns
mov
rcrl
mov
cmp
in
popf
xchg
sarb
call
sbbb
pushl
mov
sahf
out
mov
sbb
mov
cmpsl
xchg
push
xor
mov
into
popa
sbb
lahf
stos
sbb
xor
mov
arpl
cmp
sub
in
or
xchg
cmpsl
mov
pop
jbe
call
mov
pop
push
nop
int
dec
cli
sub
adc
out
dec
out
pop
notl
xor
jl
andb
sbb
jbe
xor
sub
add
inc
jl
mov
lcall
sbb
pop
dec
and
push
jno
mov
adc
mov
xchg
sahf
jge
popa
fisubrs
mov
and
mov
mov
adc
pop
shll
bnd
dec
mov
shlb
xchg
dec
fstp
fbld
mov
fwait
js
mov
stc
call
aad
fsubrs
dec
and
lret
je
rcrb
cmc
push
into
outsb
sub
xor
pop
sbb
xchg
dec
loopne
inc
push
fcoml
lock
fdivrl
dec
sbb
dec
lea
shlb
daa
sbb
push
push
and
push
xchg
adc
mov
test
cli
push
dec
mov
lock
cmc
ss
mov
fld
xlat
inc
push
xor
repz
xchg
jb
push
daa
stos
cmp
add
std
adc
adc
incb
jne
in
in
xor
nop
mov
sbb
jmp
lcall
imul
mov
mov
sbb
fwait
call
jbe
push
mov
pop
or
scas
push
lods
adc
xchg
mov
adc
cmp
xor
aas
mov
test
cmc
mov
xchg
int
xor
sbbb
fisubs
push
in
call
xor
pop
jl
push
sbb
sbb
dec
lods
mov
fisttps
addb
sbb
pop
cmp
cwtl
xor
xchg
jecxz
rolb
add
ja
addl
push
lahf
xor
repnz
out
jecxz
pop
push
rcrl
xor
aam
cmp
sbb
jne
test
arpl
inc
jno
fisttpll
push
mov
mov
addr16
movq
xor
in
sub
jecxz
push
aam
fstp
aas
ljmp
cmpsl
and
daa
lcall
or
loope
add
add
loopne
cli
mov
pop
dec
mov
call
add
sub
aam
xchg
inc
int3
lret
jmp
fisttpll
jb
rcll
sahf
fidivrs
dec
pop
outsl
jle
insb
gs
xor
pop
stos
xor
jle
mov
push
call
cs
ds
adc
pop
inc
mov
cltd
divl
mov
loopne
and
adc
in
jecxz
cli
jg
mov
mov
cmp
leave
add
push
and
lods
dec
sub
mov
adc
pop
fisubrl
add
sbb
pop
and
ja
outsb
cmp
loopne
jb
loopne
xor
divl
sub
outsb
fs
gs
cmp
and
sbb
pop
sub
jns
adc
mov
imul
aad
mov
pop
sbb
in
in
ljmp
stc
sbb
das
inc
cmp
ss
popa
mov
bound
or
roll
popa
mov
add
inc
rcrb
cmc
fidivs
loop
cmp
dec
sbb
outsb
fadd
movsl
or
ljmp
cmpsl
cmp
mov
shll
ljmp
jno
nop
jb
addr16
pop
mov
cmpsb
dec
xchg
mov
mov
sbb
xchg
push
push
sub
inc
and
and
xchg
out
stos
mov
ljmp
fs
mov
add
in
mov
sahf
sbb
loope
sub
xor
inc
mov
and
mov
pop
xor
cmpsl
pop
mov
push
leave
test
out
jmp
mov
jl
stos
inc
cli
sub
inc
pop
sub
arpl
inc
mov
lds
aaa
xor
loop
pop
xor
loope
lock
pushf
xchg
mov
test
test
add
test
mov
idivb
lret
ss
mov
mov
xchg
jae
sub
orl
aad
push
enter
cmp
rolb
ljmp
data16
mov
movsb
jg
jle
sub
test
cmpl
xchg
and
xorl
in
data16
aaa
mov
sub
adc
xor
subb
dec
xchg
mov
xchg
ljmp
jecxz
mov
je
xchg
ljmp
enter
lret
cmp
mov
mov
nop
enter
aam
cmpl
loopne
rolb
mov
lret
lret
lret
jns
outsl
rorl
popa
and
in
imul
arpl
xor
dec
xchg
jge
sbb
pop
fdivl
or
les
pop
pop
ret
insb
pushl
mul
int
sahf
ds
xchg
cwtl
xchg
mov
pop
mov
lods
es
aaa
inc
lret
mov
fmul
cwtl
dec
int3
std
add
stc
push
mov
out
mov
sbb
mov
iret
ljmp
outsl
lods
sub
xor
pop
mov
data16
sub
sub
fs
mov
pop
ss
push
ret
scas
sub
dec
scas
pushf
test
fmul
push
push
pop
dec
in
cmp
cmp
inc
jg
jnp
sub
nop
jns
add
int3
inc
fdivrp
out
ja
or
pop
xor
mov
add
imul
mov
orb
push
mov
jl
dec
testl
add
mov
jge
pushf
fs
inc
mov
cmovo
aas
stos
add
out
push
push
cmp
fs
inc
mov
jmp
out
mov
pop
cli
ret
insl
arpl
pop
sub
loop
sub
in
out
and
fisttps
lret
pop
dec
out
fsubl
xor
in
nop
push
mov
fwait
mov
jo
aas
sub
fdivrl
in
xadd
lods
fmul
lret
and
sub
and
jg
adc
cmp
out
dec
pushf
loope
xchg
push
cwtl
rolb
push
pop
or
jecxz
dec
movsb
pop
les
arpl
jle
sbb
or
dec
outsb
mov
adc
aas
std
fnstcw
mov
pop
mov
pop
mov
ds
or
int
in
pusha
lret
movq
sub
sub
add
aas
aaa
in
and
in
lds
ja
dec
fisttpl
mov
inc
aaa
andl
out
arpl
aas
lret
loopne
and
jecxz
aam
pop
icebp
jo
sbb
lock
sbb
inc
dec
mov
xor
mov
push
addl
nop
dec
sub
xchg
aad
addr16
clc
sub
adc
mov
movsl
ret
xchg
testl
aaa
adc
cmp
add
loope
jae
fildl
lock
pop
cmp
adc
mov
mov
loopne
cmp
iret
pop
mov
outsl
rcll
and
add
mov
sub
fidivs
xchg
or
mov
movsl
stc
stos
repnz
call
mov
fwait
dec
je
stos
push
sbb
outsb
lret
xchg
inc
dec
push
lret
stc
movsb
dec
pop
or
mov
xor
rorl
rcr
rcll
pop
stc
out
pop
dec
test
popl
mov
push
icebp
lea
jae
call
adc
movsl
cs
shlb
stos
pop
negb
cmp
test
jbe
out
sub
pop
pop
pop
lods
dec
lock
xchg
adc
and
cmp
out
dec
jo
js
add
repz
testl
lcall
dec
inc
sub
or
icebp
sub
ljmp
or
xor
das
into
lcall
and
adc
pushw
pop
xchg
xorl
mov
add
pop
rorl
mov
sbb
adc
jae
shrl
jg
pop
and
pop
mov
and
imul
sbb
test
xor
inc
inc
jp
cmpsb
push
imul
cwtl
out
ds
xchg
nop
movsb
out
outsb
fwait
pushl
jecxz
cli
fstp
ret
xor
test
std
xchg
stos
mov
in
cmpsb
pushf
sub
cmp
lret
mov
push
and
sbb
pop
pushf
push
mov
mov
and
pop
or
subb
dec
test
icebp
inc
rorl
sbb
and
add
mov
js
and
adc
incl
pop
xchg
xor
add
hlt
adc
push
scas
and
lahf
push
mov
sarb
ret
out
pop
out
dec
add
mov
cltd
mov
xor
leave
inc
inc
mov
add
pop
imul
jnp
jecxz
leave
ret
cmp
jae
dec
pop
or
in
je
and
push
jle
loopne
mov
mov
jle
sub
sbb
fdivrs
cltd
xchg
inc
pushf
es
fiaddl
mov
and
mov
dec
sub
insl
mov
rolb
cmpsl
dec
add
push
lock
into
mov
loopne
hlt
and
jns
loope
xchg
arpl
cmp
jne
clc
jle
adc
out
aas
xchg
cmp
dec
sub
mov
xor
xlat
pop
jb
aaa
aaa
xchg
mov
dec
les
add
pop
ret
cmpsb
fdivl
and
arpl
lds
insl
fimull
ss
xor
push
loope
xlat
shlb
mov
add
xor
mov
add
push
sbb
aas
sub
lods
xchg
xor
cmp
add
fimuls
in
dec
stos
stc
aam
rorb
out
pop
mov
xlat
jecxz
or
cmp
add
dec
inc
inc
inc
lea
sub
xlat
cltd
jmp
pop
mov
or
flds
xchg
push
inc
lds
dec
and
insl
sbb
mov
call
mov
lock
pop
test
jno
mov
fcom
stos
enter
scas
mov
std
daa
test
nop
cs
pop
movsb
xorb
jo
sbb
cmp
push
in
popl
inc
or
pop
cmpsb
xchg
pop
sbb
push
cmpl
sub
dec
mov
push
and
push
pop
or
ds
cltd
scas
lds
cmp
cmpsl
subps
mov
or
shlb
push
mov
sti
rolb
inc
dec
icebp
adc
or
pop
inc
dec
das
bound
test
jo
mov
pushl
popf
push
fs
xor
fistpl
add
cmp
mov
dec
xor
scas
mov
out
lods
mov
lcall
xchg
mov
inc
lods
jmp
sub
fldcw
sbb
add
inc
jnp
negb
mov
dec
dec
nop
jnp
popa
iret
jnp
hlt
mov
mul
clc
es
scas
nop
jg
xlat
cmpsb
pop
stc
or
movsb
pop
xchg
jle
insb
push
or
mov
or
add
fs
add
inc
cli
or
addr16
dec
inc
aaa
mov
adc
out
fcoml
adc
testl
push
data16
xor
rcrb
aas
mov
ja
or
xchg
pop
loop
divl
lahf
stos
inc
or
jno
out
aam
scas
and
fimull
loop
sbb
or
xor
insl
adc
fiadds
sarl
lock
lahf
aam
xchg
jne
sbb
mov
xor
jle
sahf
add
enter
xchg
js
fcmovnbe
mov
mov
imul
lock
pop
jg
jno
pop
cmp
and
rcl
cwtl
cmp
jnp
jmp
inc
loope
dec
addr16
add
xchg
mov
lods
mov
xchg
enter
testl
lret
push
sub
ret
pop
add
add
mov
mov
fsubrp
mov
test
cmp
scas
add
add
or
mov
xchg
nop
pop
and
mov
xchg
xor
bound
insb
add
negl
rcll
jbe
lret
popf
cmp
out
sub
jecxz
and
or
rcrl
add
xor
in
mov
test
mov
jb
pop
sub
stos
lahf
pop
gs
cltd
ds
dec
cmp
scas
push
xchg
cmp
and
stos
fisubrl
repnz
or
ljmp
mov
lods
adc
sahf
sbb
push
js
cmp
negl
sarb
stc
add
insl
out
inc
add
mov
imul
outsl
add
jnp
lods
cmc
mov
sub
and
scas
mov
add
pop
sbb
call
jne
cmp
jb
xchg
xor
movsl
pop
fsubrl
xchg
push
push
shrl
int
mov
je
aas
or
cli
and
xchg
inc
xor
test
dec
mov
sub
lods
js
int
xlat
mov
or
mov
jne
jne
add
jnp
and
cmp
hlt
shlb
scas
je
cmp
adc
dec
add
fmuls
test
cmp
inc
xor
adc
push
push
add
addr16
loopne
jb
push
jno
shll
data16
jmp
sbb
dec
inc
push
repz
lret
hlt
fstpl
dec
repnz
pop
mov
sarl
dec
sub
fisttpll
cli
mov
jl
jmp
imul
fs
push
jbe
mov
push
daa
xchg
inc
jno
mov
mov
cmp
sahf
dec
jo
aam
ljmp
push
stos
sbb
lahf
pop
add
add
add
pop
mov
adc
cmp
scas
jmp
and
push
fisubrl
xchg
xchg
mov
mov
xchg
mov
cmp
aas
hlt
data16
adc
jge,pn
push
mov
inc
stc
mov
outsl
xchg
dec
xor
test
repz
xor
cs
mov
fwait
push
sbb
mov
lea
ror
xor
loop
dec
lret
or
xchg
mov
sub
push
sbb
enter
mov
sub
cltd
push
sub
lret
enter
mov
jb
movsl
xchg
cwtl
pop
repnz
or
sahf
out
jmp
adc
xor
xor
in
fsubrs
aad
aaa
lock
bound
xlat
mov
loop
dec
and
pop
add
inc
adc
mov
inc
or
xchg
mov
and
repz
push
sbb
icebp
mov
dec
in
mov
xor
addr16
mov
xchg
add
int
sbb
mov
jecxz
or
push
pushf
jp
subl
xchg
std
out
push
sub
imul
lret
sub
cmpsl
into
inc
pop
nop
addr16
jnp
shl
adc
test
pop
daa
jg
das
arpl
sti
pushf
dec
ds
adc
inc
mov
mov
cmp
jecxz
and
add
sub
data16
or
cmc
test
dec
mov
nop
mov
mov
cmp
add
dec
push
ret
mov
jge
cmp
in
mov
add
scas
add
add
xlat
std
jo
or
or
xchg
or
fld
push
out
adc
int3
ficoml
popa
in
mov
mov
roll
inc
ljmp
aad
jle
xchg
cmp
std
push
out
jnp
and
rorl
mov
lea
sub
into
test
fmuls
out
sbb
mov
daa
xor
adc
adc
mov
lea
cmp
inc
into
mov
mov
adc
xor
or
sbbl
outsb
out
inc
sbb
dec
aas
movsb
xchg
jnp
aam
pop
xor
or
fwait
mov
push
xchg
xchg
in
std
repz
sahf
sub
push
inc
outsl
test
or
sar
aaa
mov
ss
repnz
scas
adc
xor
imul
popa
jbe
sbb
inc
dec
pop
jnp
mov
jno
repnz
mov
sti
shrl
lcall
ss
movsb
and
and
js
jnp
hlt
sbb
fst
sahf
mov
add
push
sbb
testb
call
shlb
jns
or
dec
lods
lret
movsl
sub
jne
ficomps
push
mov
testb
pop
mov
mov
cmp
and
stos
sub
cltd
stc
mov
fcmove
jmp
loope
adc
sub
dec
scas
or
aaa
jl
pop
add
push
test
pusha
orl
xchg
into
pop
add
push
mov
out
push
inc
sbb
outsb
call
cld
xchg
into
jno
jg
inc
xchg
popa
cmp
pop
pop
cmp
mov
mov
test
or
or
jns
push
mov
fcmovnu
add
dec
js
lods
mov
aam
inc
lea
jae
syscall
stc
jge
mov
adc
arpl
sub
fmull
ljmp
popf
aas
xchg
faddl
mov
popa
fistpll
or
cwtl
vpsubsb
aas
movsl
insl
push
cmp
mov
push
loop
stc
jbe
mov
push
cmp
pop
sub
cmp
inc
inc
mov
imulb
loope
and
and
jmp
cmp
cmc
inc
aam
addl
mov
ret
mov
pushf
dec
cmp
lock
test
push
cmp
push
out
mov
or
or
into
cmpsb
imul
inc
aad
sbb
mov
mov
jmp
mov
sahf
in
adc
mov
lret
add
test
dec
clc
shrb
call
je
mov
pushf
or
adc
into
sub
sbb
shrl
push
aaa
dec
divl
and
movsl
repz
dec
jmp
add
jnp
inc
scas
push
shrl
sbb
cmp
push
add
out
scas
leave
add
pop
lcall
das
mov
inc
adc
xor
dec
sbb
in
jo
jne
pop
dec
sub
scas
pop
inc
and
sbb
xchg
or
loopne
push
or
fimull
dec
shll
and
xchg
xchg
repz
mov
les
fidivs
js
add
xchg
fisubs
add
add
add
sbb
in
jmp
lahf
jle
stos
xchg
xchg
scas
add
scas
add
add
gs
imul
sub
push
or
pop
aas
pusha
adc
stos
and
fdivs
mov
pop
adc
jo
mov
mov
pop
test
imul
leave
sbb
in
jl
inc
clc
or
mov
push
sbb
arpl
scas
clc
in
jmp
lea
aam
xlat
fstl
mov
adc
aaa
jb
sub
xchg
inc
inc
mov
inc
jae
xor
icebp
call
xchg
push
ret
repz
pop
jnp
lock
dec
add
jge
cmp
in
into
std
push
mov
fsubrs
ficompl
out
fsubrs
cmp
std
jmp
ret
mov
arpl
sub
ljmp
in
jnp
fwait
daa
sub
inc
and
out
jl
popf
xchg
ljmp
mov
or
xor
sahf
push
mov
pop
push
in
mov
xor
loope
mov
nop
mov
sub
mov
loop
faddl
adcl
int3
push
xchg
mov
nop
jno
push
test
xchg
fiadds
sbb
cmp
les
xor
cmpsl
loope
shrb
sahf
xchg
adc
mov
push
stc
mov
cmp
and
adc
push
ss
mov
xchg
das
movb
nop
jmp
cmp
or
push
and
sbb
jae
jp
xlat
movsl
xor
lock
cwtl
sub
cmp
out
shrl
mov
lret
test
jg
or
pop
jnp
out
aas
mov
xor
jp
add
inc
jne
in
or
lret
sti
mov
inc
sti
lds
clc
pop
inc
sub
in
call
mov
jmp
xlat
js
pop
fs
outsb
and
jg
xor
push
iret
ja
lock
jecxz
add
mov
jne
cs
lret
mov
xor
xchg
sbb
out
push
cli
add
cmpsl
pop
in
dec
add
mov
cmpsl
xor
mov
push
test
sarl
lods
test
arpl
mov
sub
jecxz
lahf
rorl
and
sub
iret
xchg
adc
pop
or
inc
mov
mov
dec
pop
mov
pop
imul
fisubrl
xor
or
in
inc
in
ss
rcr
mov
insl
push
push
lea
std
cmp
les
adc
cwtl
leave
in
add
stc
xlat
test
incl
mov
cli
fimull
mov
fldcw
jp
je
ljmp
xor
mov
adcl
shr
push
push
xorb
fmuls
scas
xchg
inc
push
cmp
fdecstp
inc
pop
lock
mov
cmp
rclb
test
bound
sahf
aad
cmp
adc
pop
lods
sbb
and
cmp
decb
mov
sbb
inc
or
pop
or
mov
lds
jle
daa
adc
xchg
or
dec
jne
add
mov
into
insb
movsl
mov
call
inc
ret
push
jne
jle
fdivr
mov
ret
outsl
stc
stos
add
mov
push
bound
inc
add
ret
jb
leave
adc
lods
cmp
and
or
push
test
sub
add
mov
decl
mov
out
sbb
inc
mov
add
pop
mov
lahf
cli
push
out
pusha
xchg
or
gs
and
inc
fisubrs
xor
aas
or
addr16
jmp
int3
or
movsb
mul
mov
pop
push
push
cmp
data16
in
enter
loope
es
push
jo
aaa
rorl
inc
mov
inc
dec
xchg
push
ficoms
dec
bound
imul
inc
inc
sub
bound
subb
pop
push
dec
push
inc
enter
inc
sbb
daa
loop
loop
inc
pop
cmp
in
jns
mov
xchg
lds
xorb
into
stos
inc
fistl
ljmp
stos
fsubl
mov
inc
out
mov
add
and
mov
add
test
pmaddwd
les
pop
mov
xchg
or
je
icebp
sub
pop
ds
sahf
xor
je
int3
shrl
aad
fwait
loope
and
or
push
in
loope
frstor
in
and
cld
scas
jbe
popf
add
test
pop
repnz
jne
fcmovnu
arpl
push
shlb
fimuls
rol
mov
outsb
pop
daa
dec
mov
push
sbb
pop
sahf
mov
movsl
in
lds
loop
xchg
outsl
cs
mov
cmpsb
test
pusha
sbb
repz
aas
cmpsb
dec
outsl
imul
mov
mov
cwtl
shl
stc
std
mov
add
xchg
mov
loopne
pop
and
imul
jo
inc
push
mov
pop
mov
test
xchg
rolb
and
insb
ret
sub
imul
or
jle
pop
cld
cmp
mov
addr16
cwtl
mov
clc
out
sub
mov
dec
dec
sbb
mov
push
push
inc
icebp
or
cs
test
popa
js
add
fldt
adc
test
out
outsl
xchg
cmc
inc
xchg
aam
bnd
mov
sar
xor
jl
popa
test
aas
xchg
jmp
sbb
hlt
xchg
sbb
pop
sar
cmpsb
sbb
push
insl
movsl
sbb
cmpb
repz
aaa
cmp
cmpb
mov
push
add
mov
lcall
nop
mov
cmc
outsl
mov
mov
les
aam
sub
fmul
sbb
mov
and
scas
cmp
mov
xlat
xor
jns
inc
sbb
and
insl
ret
jmp
pop
cwtl
jg
jnp
movsl
mov
outsb
in
sahf
jl
or
sti
sub
das
jne
cmc
es
push
push
cmpsb
sub
mov
loopne
cmp
movsb
std
mov
xor
push
scas
jnp
and
test
jg
lea
ljmp
mov
cwtl
hlt
sbb
enter
sub
imul
pop
je
rcrl
push
mov
outsl
bound
jo
mov
pop
dec
sub
ljmp
mov
std
insl
sbb
dec
push
jnp
negl
sbb
loope
dec
out
dec
cmp
mov
aas
jmp
out
pop
adc
into
filds
in
cmpsb
mov
enter
mov
mov
cli
mov
sub
add
add
add
xor
xorb
icebp
lret
aam
imul
gs
add
mov
add
or
pop
xor
jnp
sbb
jno
sti
sbb
aam
stos
in
mov
add
ret
ljmp
push
mov
std
scas
loope
mov
les
fdiv
or
rorl
pusha
rcrl
popf
or
sbb
sub
lds
lret
stos
jecxz
xchg
movsl
rol
andl
movsb
add
sub
sti
call
mov
sahf
and
cmp
adc
insb
push
mov
sub
mov
imul
or
lds
ret
ljmp
push
movsb
jae
data16
sbb
sarl
dec
jecxz
xor
mov
sbb
xchg
add
inc
adc
cmp
js
test
add
push
jae
jno
adc
mov
js
pop
and
pop
mov
xchg
adc
mov
cmpsl
das
cmp
data16
mov
mov
jb
sbb
sbb
lds
call
mov
xchg
sub
ret
xor
inc
xchg
div
imul
jl
cmp
clc
arpl
ljmp
xor
mov
data16
rcll
lea
xor
adc
xchg
stos
jmp
imul
stos
fstl
out
xor
jbe
imul
mov
mov
cmp
jnp
xor
fcmovb
pop
push
dec
mov
or
in
inc
dec
push
daa
cmpsl
jne
dec
pop
and
or
not
jae
xchg
es
adcb
jns
xor
out
ret
sbb
jmp
push
cmp
leave
daa
mov
mov
pop
lds
pop
jmp
jno
adc
mov
xchg
push
inc
adc
mov
aad
xchg
nop
push
or
pop
lea
cli
push
inc
lock
lret
inc
and
ljmp
jg
mov
pop
es
and
inc
test
add
cmc
lret
add
lods
incl
xor
ljmp
pusha
mov
ljmp
inc
cli
add
mov
arpl
push
adc
out
lret
add
mov
js
dec
add
cmp
aaa
in
jns
imull
enter
mov
xchg
xorb
lods
cli
sbb
pop
sub
inc
dec
clc
adc
frstor
stos
xlat
js
cmpsl
ljmp
and
aaa
repnz
add
mov
into
and
cwtl
jnp
fisubrs
pop
fstpl
popf
es
inc
insl
cmp
jnp
mov
sbb
test
stos
cmp
push
ja
test
push
in
dec
adc
stos
mov
jg
bswap
jmp
pusha
sbb
lahf
icebp
xorl
cmp
and
xchg
aam
and
sub
and
mov
push
jnp
ljmp
or
cmp
dec
xlat
scas
cmp
jo
push
cwtl
sbb
inc
jae
popf
fbstp
mov
add
sub
xchg
in
push
push
sbb
fstpt
icebp
shrb
loopne
and
push
pop
lret
je
inc
shr
jbe
pushf
ljmp
mov
add
inc
cmp
aad
pop
test
out
pop
add
mul
lahf
jp
jp
in
sarl
cwtl
lahf
mov
add
repnz
xchg
fistl
lea
outsb
add
roll
sahf
enter
adc
sub
or
mov
mov
mov
mov
es
push
in
test
push
push
mov
je
shll
dec
shll
dec
mov
aad
push
stc
cmp
pop
daa
mov
enter
mov
les
dec
lahf
ds
mov
fwait
pop
mov
add
dec
sar
pop
lea
pop
lds
xchg
dec
int3
stos
lock
ja
aam
add
mov
fimuls
push
rol
shrl
rorb
sbb
or
lea
leave
test
stos
arpl
cli
inc
inc
iret
stos
in
push
xor
repz
dec
aam
aam
sti
inc
ret
icebp
gs
in
xor
or
popa
and
imul
roll
pusha
push
and
cmp
mov
fisubrs
gs
add
cmp
stc
xor
leave
aas
cwtl
xor
cli
orl
xor
push
add
mov
loope
jp
test
jmp
into
pop
mov
ret
iret
sbb
or
push
and
scas
push
sub
sbbb
test
nop
xor
je
xchg
lret
insb
xchg
test
stos
loope
cwtl
mov
or
hlt
pop
mov
jmp
sbb
push
dec
sbbl
adc
xchg
jecxz
test
cmc
xchg
lcall
cwtl
repz
add
adcl
push
mov
lds
test
push
jmp
pop
stc
push
push
sub
jnp
jnp
lret
pop
mov
dec
push
dec
jnp
mov
ret
xchg
inc
leave
mov
pop
cmp
adc
xchg
js
mov
pop
scas
mov
cmp
lcall
into
repz
sbb
das
mov
fstl
dec
dec
aam
ffreep
adc
loop
xor
sti
adc
jg
sbb
cmp
movsb
cmp
repnz
nop
sub
xlat
sbb
jmp
mov
sub
xor
outsl
mov
jb
addr16
push
and
test
or
dec
xchg
cmp
insb
inc
mov
clc
fisttpll
je
dec
movsl
or
and
jl
or
iret
aad
nop
pop
ret
lods
cmp
enter
or
lock
sub
lahf
out
sahf
shlb
mov
mov
or
xor
jo
les
cmpsl
lcall
popf
repnz
aas
lret
jecxz
pop
in
add
mov
xchg
xlat
and
push
lods
xchg
pusha
cs
xor
gs
sub
and
loopne
es
lret
dec
lds
jb
adc
clc
jl
dec
push
jns
push
loopne
std
jg
push
mov
int
fstpl
aam
mov
jmp
ret
sub
shlb
adc
jne
arpl
cmc
mov
rep
and
aaa
jge
nop
cltd
sti
inc
leave
sbb
subl
fldenv
cltd
ja
mov
repnz
sbb
fwait
xor
pop
cmp
popa
loop
xor
mov
test
xlat
dec
int3
int3
std
aas
fisttpll
cmp
stos
shll
dec
sahf
jp
popa
pop
add
pop
outsl
pop
sbb
sbb
pop
mov
ret
scas
sbb
add
add
add
add
mov
lcall
xor
cmc
ljmp
add
ljmp
pop
sbb
add
xchg
rorb
cmp
je
or
call
test
or
fs
xor
and
jne
je
xchg
imul
ss
das
pop
cmp
sbb
call
lds
popf
pop
mov
pop
psubusw
jne
adc
lahf
jo
scas
pop
jle
ss
dec
rorl
aad
push
lahf
jp
push
dec
insb
add
jnp
js
and
js
inc
rolb
je
insb
xchg
outsb
cmp
in
lcall
fisttpll
mov
fiaddl
je
fsubrp
jbe
pop
imul
stos
adc
out
cmp
jnp
pop
mov
xor
daa
lods
mov
mov
mov
popa
lret
jb
adc
rcr
xlat
mov
sub
inc
inc
pop
cli
aaa
jp
cld
clc
jp
push
dec
mov
add
xlat
outsb
pop
fnstsw
jmp
loop
clc
jnp
cmp
daa
aad
ja
add
lock
test
es
sub
adc
jo
faddp
pop
mov
pop
jge
pop
std
in
inc
aam
lock
cltd
add
jge
ret
jmp
out
push
xchg
mov
adc
cmp
pop
push
xchg
dec
mov
and
sarb
fdivl
jle
pop
adc
int3
std
sub
adc
mov
rcll
aas
or
pop
jns
pop
mov
out
xchg
cmp
stc
cltd
mov
loopne
repnz
daa
jp
sbb
fmulp
mov
sub
in
sub
sub
or
das
mov
jle
out
inc
nop
inc
xchg
lock
test
xor
orl
fbstp
pop
xchg
pop
xchg
xchg
cwtl
and
mov
sarl
lcall
insl
lea
xor
sub
clc
cli
idivb
jbe
inc
sub
lods
sbb
xchg
mov
in
in
mov
xor
sbb
in
nop
lret
cmp
ss
aam
push
dec
scas
add
mov
sbb
out
fcoms
or
jno
ljmp
sub
int3
push
mov
or
adc
pop
mov
pusha
jnp
ficompl
sub
inc
pushf
ror
fisttpll
xchg
sub
jg
shll
and
cli
lahf
dec
test
mov
sub
adc
ds
adc
sbb
nop
movsb
movsl
adc
outsb
cmp
push
out
out
mov
gs
daa
out
sub
mov
insl
ficompl
test
fisubrl
xchg
stc
mov
es
push
dec
jmp
pop
sbb
mov
dec
jne
xchg
int3
and
ret
pop
mov
and
call
insb
and
cmp
das
mov
sbb
inc
dec
xlat
pop
adc
jno
jmp
inc
popf
mov
daa
in
vpsubusb
repz
ljmp
in
inc
mov
sti
pop
sbb
add
daa
popf
sub
and
add
out
mov
cmp
gs
add
scas
add
add
aas
mov
jl
dec
pop
loopne
jo
fdivrs
jmp
sahf
scas
test
mov
stos
and
xor
scas
mov
jmp
es
out
and
mov
lock
gs
pusha
mov
xchg
sbb
inc
js
fdivr
adc
das
pop
js
pop
xchg
in
dec
add
jp
into
pop
or
cmp
mov
ret
or
popa
inc
iret
es
jle
enter
pop
push
mov
aam
push
pop
out
dec
test
xchg
in
xorb
rcrb
int3
mov
aam
stc
mov
arpl
les
movsb
pop
mov
pop
jge
mov
mov
sbb
imul
iret
test
movsl
repz
jb
mov
ficompl
sub
and
push
cmpsl
mov
pop
mov
fs
dec
cmpsl
jg
inc
pop
cmpsl
sti
movsl
mov
and
out
in
xchg
pop
mov
xchg
loopne
and
push
shl
or
mov
jbe
xchg
pop
pop
push
push
repnz
sub
out
mov
test
jne
sbbb
stc
rcr
jmp
push
in
lds
popl
push
push
out
sbb
dec
mov
mov
inc
hlt
fistpl
pop
lret
cli
ljmp
jmp
jne
dec
mov
cmp
adc
push
xchg
xor
cmc
mov
and
xchg
cltd
fcomi
mov
test
icebp
push
jl
shlb
sub
cwtl
pop
mov
adc
adc
jo
sbb
jle
jmp
dec
xlat
add
rclb
xlat
jle
xchg
fcomps
into
notb
mov
push
lods
pop
push
mov
jmp
push
mov
xlat
into
pop
shl
mov
jno
add
or
pop
dec
aad
mov
mov
mov
leave
push
clc
inc
mov
sbb
jbe
mov
mov
pop
xorb
int
mov
inc
dec
push
icebp
adc
fstl
mov
dec
mov
ret
or
sub
mov
xor
shlb
mov
loop
lds
pop
add
inc
cmp
cmp
sbb
push
fnsave
arpl
in
dec
mov
xchg
js
icebp
sbb
loope
dec
test
or
cmp
and
xchg
sti
movb
mov
fnstenv
rcrb
or
jmp
mov
cmp
fsubl
sarl
sar
xchg
pop
stc
sbb
inc
xor
mov
or
jb
push
jno
dec
loope
in
and
orl
daa
mov
jmp
sbb
push
mov
add
push
lret
sbb
js
loop
cli
and
stos
jg
adc
and
mov
cmp
adc
popf
add
and
sub
xor
rcr
cmp
sub
inc
loop
sub
lods
jmp
sbb
push
pop
inc
mov
outsb
xor
xor
inc
loopne
cmp
outsb
leave
je
dec
decl
rcll
test
jne
pop
insl
lods
jl
mov
gs
add
mov
xor
lds
add
aaa
push
push
jl
pop
mov
lret
mov
pop
pop
mov
popf
push
aas
push
loopne
xor
sbb
cmpsb
xchg
lds
inc
sbb
dec
cmp
sub
out
lock
mov
insb
pop
xchg
xchg
or
xorb
pop
sub
fsts
fstp
mov
dec
out
stos
mov
out
mov
add
and
stc
jnp
fists
add
push
lods
fchs
push
mov
fcomps
cmp
or
dec
dec
inc
into
or
dec
jno
pop
ret
inc
add
aaa
andl
cmp
adc
adc
cmc
sti
and
call
or
add
ja
adc
dec
cli
inc
push
addl
sub
scas
rclb
in
shll
sbb
mov
imul
push
push
pcmpgtw
pop
fdivrs
xchg
jmp
mov
sbb
mov
addr16
daa
xchg
or
jnp
cmp
lods
std
mov
imul
sub
ret
jbe
nop
jne
xor
xor
inc
xchg
sbb
or
sbb
cltd
rorl
lods
dec
flds
jno
xor
push
lods
sub
jle
divb
stc
xchg
sub
aaa
sbb
in
mov
scas
lock
mov
mov
sub
adcb
leave
mov
jg
popl
sub
xor
cwtl
sbb
adcl
ja
repnz
push
jno
insb
aaa
cmp
cmc
sub
leave
xchg
std
mov
add
ljmp
push
or
and
imulb
pop
lret
pop
inc
sub
test
mov
sbb
fcoms
or
lret
lods
ret
push
mov
test
mov
cmp
lea
les
push
mov
insb
ss
js
add
and
cs
enter
nop
sub
dec
pushf
jb
mov
add
jae
out
js
xor
jo
imul
imul
jle
enter
js
jnp
dec
inc
movsb
push
fs
push
mov
js
pop
jmp
xor
xchg
je
xlat
sbb
ss
push
stos
bound
xchg
fstpt
std
in
cmp
out
fiaddl
cmp
sbb
sti
xchg
and
addb
jge
jle
sti
jp
cmp
xlat
adc
cmc
pop
movsb
fidivrl
mov
shlb
adcl
sub
shrb
mov
leave
jae
mov
push
js
ds
cwtl
dec
lcall
popa
lds
lret
sbb
fwait
pushf
incb
add
daa
scas
mov
sub
mov
sub
cmpsb
xchg
clc
cld
imul
fdivr
adc
in
cs
daa
in
xchg
sti
jns
stc
push
or
sbb
mov
fcomps
in
ficompl
and
leave
sbb
imul
jp
enter
andl
dec
mov
enter
les
mov
mov
aam
or
mov
mov
loope
lods
cli
dec
and
mov
pop
or
xor
add
cmp
jnp
dec
pop
mov
test
scas
add
add
push
cmp
fwait
popf
pop
mov
icebp
jp
fiaddl
or
push
decl
bnd
ja
mov
adc
cmc
adc
aaa
add
and
push
int3
ds
jo
xchg
dec
in
inc
push
outsb
and
jp
pop
daa
sbb
loopne
mov
pop
cmp
lret
test
mov
xchg
mov
and
adc
mov
jno
sub
shrb
add
and
rorl
inc
or
movl
aam
inc
stos
out
aam
sahf
push
into
mov
inc
push
mov
aad
sahf
sti
pop
add
add
shlb
add
sti
es
cmp
xor
fwait
xor
xchg
mov
je
add
mov
les
stc
push
out
into
jnp
add
pop
sbb
jp
dec
movsl
inc
inc
sub
or
ljmp
push
les
lea
add
imul
or
pop
xor
xchg
inc
push
jge
pop
and
fisttps
sti
sub
pop
loop
imul
dec
mov
out
or
mov
hlt
test
bound
cmp
icebp
js
mov
pushf
jmp
mov
or
ret
inc
xor
fcompl
fistpll
pop
icebp
stc
dec
jo
inc
mov
stos
xor
cltd
les
mov
mov
push
cmp
js
shll
dec
push
xor
in
xchg
jno
mov
lock
or
inc
push
jmp
push
iret
xchg
sbb
ja
mov
cwtl
inc
out
cld
mov
or
invd
and
fsubrl
push
and
xchg
cmpsl
mov
or
mov
mov
mov
adcl
test
fcomp
je
xor
dec
push
test
mov
iret
mov
test
add
jnp
lret
or
ja
sti
pop
shl
push
out
lock
adc
push
mov
mov
fildl
sbb
xchg
hlt
out
test
jns
ret
inc
or
cmp
jmp
jbe
sub
dec
sub
dec
mov
in
xchg
fnstsw
mov
gs
ret
mov
inc
aas
or
dec
cwtl
fists
pusha
xorl
js
lods
hlt
push
mov
pop
jno
jmp
aas
and
and
jns
push
or
lret
lcall
jbe
lods
add
shrb
adc
adc
inc
jecxz
cmpsb
fidivl
fisttpll
inc
aas
stos
jp
jns
push
in
insl
mov
sub
mov
repz
rcrl
stos
mov
mov
subl
mov
addr16
pop
jmp
into
dec
paddsb
rolb
addr16
sbb
cmp
and
outsb
inc
ret
cmovg
pop
dec
dec
cmp
xor
push
fdivr
cmpsl
jle
loope
sbb
lods
push
int
ja
std
xor
shll
adc
out
andb
cmpsb
sub
mov
mov
and
repz
or
mov
xor
in
dec
jb
jne
shll
pop
ja
hlt
lcall
dec
cmp
aaa
push
fwait
push
hlt
movsl
andb
repz
ret
xchg
hlt
sbb
add
jmp
or
scas
jmp
popa
mov
or
sub
add
add
add
xchg
pusha
test
dec
jg
mov
in
push
test
pop
cmp
sbb
cmpsb
and
das
add
insb
inc
rcrl
push
push
and
rol
jge
in
adc
call
mov
rol
pop
pop
cwtl
and
out
sbbb
bnd
or
subl
mov
sbb
add
jge
push
push
inc
loopne
sbb
adc
clc
jns
push
popa
aam
mov
inc
pop
xor
inc
ds
push
xchg
sahf
jb
and
add
pusha
adc
sbb
lods
mov
shr
mov
add
lods
outsb
jmp
jb
jno
cmp
repnz
addr16
sahf
and
enter
cmpsl
mov
decb
sbb
dec
xor
lcall
add
rcrb
gs
or
in
repz
add
jp
pop
cwtl
out
scas
pop
xor
lahf
ror
rcrb
call
cmp
mov
ss
sar
arpl
aas
cmp
and
mov
stos
inc
push
gs
push
std
fldcw
lret
push
fs
stos
es
std
clc
imul
push
std
leave
xor
mov
in
fistpll
add
insl
sbb
ljmp
ss
jmp
cmpsb
and
add
jb
dec
push
ds
mov
and
push
mov
or
push
rorb
int3
inc
jb
xor
cmp
mov
js
pop
push
and
in
fwait
sub
adc
pop
push
out
mov
sarb
xchg
mov
sti
outsb
cmpsb
ffree
cmpsl
jo
dec
lcall
out
xlat
dec
int
cmpsl
sbb
jl
cltd
sub
data16
and
incb
inc
gs
jns
mov
mov
pop
fstpt
icebp
movsb
subb
imul
cmp
mov
idiv
dec
imul
inc
inc
testl
and
jbe
iret
enter
sub
xor
aad
rep
pop
das
punpckhwd
xchg
xchg
in
aad
mov
daa
xchg
shlb
or
cmp
xchg
mov
out
in
hlt
scas
or
mov
add
adc
test
outsl
xor
lret
push
loopne
and
ret
xchg
lock
daa
insb
mov
fdivrp
dec
and
mov
bound
mov
aad
mov
pop
iret
lock
int
in
jb
mov
inc
ror
pop
aam
mov
repnz
jo
or
cli
div
aas
or
test
mov
scas
jecxz
xorl
test
xchg
jo
inc
mov
aam
mov
popl
inc
fdivrl
dec
add
stc
push
pop
test
decb
mov
test
in
ss
stc
jl
aaa
pop
dec
xchg
fwait
int
mov
fdivl
arpl
icebp
cmc
lcall
repnz
aaa
rclb
push
loop
mov
add
or
sbb
xorb
mov
or
xchg
in
and
in
and
jae
arpl
sub
push
stos
sbb
cmp
hlt
or
and
cmp
push
je
mov
xchg
sub
rol
pop
push
pop
mov
mov
sbb
xor
shrl
ret
and
add
add
add
add
test
push
cld
mov
mov
add
scas
add
add
bnd
dec
sub
cs
mov
lods
mov
sbbb
test
pop
mov
or
sbb
arpl
jle
fstl
in
insb
pop
int3
outsb
outsl
xchg
cli
outsl
xlat
and
imulb
xor
sbb
pop
dec
cmpsb
out
icebp
stos
xchg
or
lret
popf
into
popa
imul
xor
lcall
enter
repnz
loop
das
adc
mov
mov
inc
mov
int3
mov
idiv
dec
popa
cld
daa
arpl
fstpl
sahf
and
and
rolb
incb
mov
and
mov
xchg
das
hlt
adc
lcall
xchg
fldt
mov
push
pop
testl
dec
pop
scas
ds
adc
cmpsl
xchg
mov
cmp
push
lret
aad
aam
xor
mov
emms
jne
test
les
and
jns
cli
rorb
hlt
sub
cld
xchg
aam
dec
and
inc
iret
pushf
jnp
and
mov
pop
dec
lret
pusha
shll
icebp
andl
out
bound
outsb
cld
mov
or
cld
mov
das
lret
inc
or
jae
pop
test
les
xor
inc
outsb
inc
loop
mov
loop
rclb
xor
inc
add
cmp
xchg
repnz
xlat
mov
jb
cmp
push
push
jnp
jl
clc
mov
sub
cs
push
arpl
dec
loopne
aad
pusha
out
mov
pop
lods
std
cmp
pushf
mov
aad
adc
inc
and
adc
out
push
mov
aad
xchg
mov
xor
insl
loopne
add
outsb
pop
dec
mov
inc
mov
push
bound
xchg
stos
int
leave
mov
xchg
inc
sub
sub
ret
mov
mov
sbb
mov
xchg
pop
imul
xor
inc
mov
insb
inc
ljmp
lds
cmp
inc
mov
in
jle
stos
ficoml
mov
xor
mov
mov
mov
sbb
ret
scas
lds
fmul
lahf
cmp
push
sbb
fmuls
push
cmp
repz
aaa
fldt
das
pop
es
xchg
add
movsb
mov
add
adc
and
lret
mov
push
cli
cmp
jbe
xchg
loop
mov
xor
loop
outsb
pop
push
pushf
inc
ja
rcl
add
cmc
dec
out
xchg
mov
mov
pop
sti
pop
cmpsb
mov
pusha
orl
mov
mov
xor
inc
shll
data16
jae
loop
and
xchg
xor
xchg
pop
repz
jle
push
leave
out
cltd
pop
mov
xlat
mov
addr16
bound
inc
push
outsl
cld
lds
adc
push
mov
sub
ret
jae
jle
inc
pop
mov
dec
test
push
imul
or
mov
clc
xor
cmp
test
xchg
lahf
mov
insl
add
out
mov
mov
cmp
int3
stos
sub
mov
shll
mov
adc
jnp
xor
mov
out
inc
sbb
pop
push
leave
popf
lret
popf
pop
xlat
loope
lock
pop
loop
aam
add
xchg
push
xchg
imul
jge
inc
stos
push
mov
insl
ret
sub
test
in
mov
xor
dec
mov
aam
lock
push
fdivrs
scas
cmp
xor
mov
and
mov
pop
pop
inc
sbb
cwtl
cmp
cmp
xchg
sub
hlt
push
sub
repnz
adc
pop
sbb
xchg
leave
mov
outsl
push
mov
in
or
mov
adc
jne
jae
imul
out
mov
iret
daa
testb
testl
or
aas
push
jecxz
hlt
leave
or
ljmp
jecxz
stos
scas
loope
mov
movsl
pop
sbb
das
std
aas
into
sbb
fisubrl
lods
sub
or
dec
sub
movsl
sbb
mov
mov
dec
pop
and
sub
je
rorl
ja
cli
mov
fildll
cmpsb
dec
popf
inc
pushf
es
mov
cmp
test
xor
test
fmuls
or
fists
pusha
inc
or
popf
mov
mov
dec
jno
add
leave
mov
out
add
cltd
ja
stos
popf
push
clc
push
hlt
sbb
lock
adc
mov
cld
lods
and
daa
or
outsb
inc
imul
push
mov
repz
add
ss
in
and
sub
add
push
mov
xchg
mov
jb
int
xchg
jl
leave
jle
push
jmp
sub
mov
jne
or
shlb
popa
in
xchg
addr16
ja
xchg
push
mov
xchg
jns
sbb
shll
push
or
push
ja
test
jb
ljmp
outsb
testb
mov
aad
dec
int3
fwait
push
dec
fiadds
scas
cltd
stos
sub
xor
sahf
xchg
add
fidivs
mov
push
mov
push
xor
mov
pop
sub
sbb
or
notb
aaa
movsl
cmovae
mov
scas
or
xor
push
add
out
xor
rol
jne
add
hlt
leave
push
mov
test
jmp
out
inc
je
loop
inc
mov
push
divb
push
sti
adc
inc
jo
dec
in
aas
mov
aas
inc
adcb
mov
loopne
lahf
xor
jb
push
es
mov
xor
cmp
rolb
xchg
pop
pop
sub
pop
push
pop
xchg
stos
ja
nop
ret
mov
jmp
sub
xlat
add
add
or
iret
jecxz
mov
push
ljmp
les
int
inc
shlb
sub
jmp
stos
add
loope
inc
or
test
mov
inc
cmp
cs
jb
sub
mov
rcrb
xchg
iret
pop
mov
lock
int3
jle
insl
loop
and
mov
and
call
pop
sub
data16
sarl
sub
jbe
inc
xchg
or
shlb
lcall
mov
jle
cltd
and
sub
aas
fmull
sbb
adc
nop
dec
inc
and
pop
push
orl
add
add
add
sbb
mov
sti
lcall
dec
pop
popa
sub
fadds
add
into
xor
push
or
sub
inc
cmp
insl
cld
and
cwtl
cmp
aas
into
sbb
mov
push
movsb
jb
mov
and
xchg
cmc
addr16
push
cmp
aad
shlb
and
outsb
dec
xor
push
pop
iret
or
lahf
and
xchg
inc
testl
push
in
cmpl
aaa
sarl
cmc
mov
push
jg
dec
sbbl
inc
xor
sub
rcrb
adc
aad
lahf
mov
rol
xor
fisttpll
xchg
pop
mov
jne
addl
inc
jnp
mov
ss
sbb
inc
cmp
push
mov
jg
sub
das
ret
cltd
cli
bound
adc
arpl
mov
ja
push
mov
insl
mov
rcr
scas
push
test
or
add
in
xor
imul
add
stos
push
sbb
dec
test
jge
shll
cmpsl
cmpsb
dec
jae
or
cmc
push
push
insb
push
dec
jmp
dec
lds
outsl
sub
jge
lret
mov
cmp
xchg
call
xchg
shll
pop
jp
mov
std
lea
fisubrl
fs
ret
lods
lahf
mov
pop
jnp
mov
stos
rol
ret
mov
gs
pop
push
repz
mov
mull
mov
xor
push
popf
leave
test
movsl
dec
cld
lock
test
cld
mov
add
ret
adc
mov
adc
inc
out
repnz
es
leave
dec
mov
xchg
adc
mov
es
mov
jb
add
jmp
subl
add
stos
into
push
mov
adc
stos
cmpsb
or
and
xor
or
xchg
ds
mov
mov
mov
mov
incb
jmp
out
addr16
int3
xorl
fidivrs
cmp
movsb
adc
jbe
pop
push
repnz
fstl
sbb
arpl
mov
jb
push
lods
add
pop
jbe
jae
in
sub
push
mov
pop
movb
sub
lret
stos
je
repnz
fs
test
jno
push
jmp
frstor
repz
jmp
add
outsl
mov
or
push
pop
repz
and
cmc
sub
pop
mov
aad
sbb
dec
les
js
sbb
mov
lock
add
es
dec
add
jg
fadd
fucomip
scas
cld
xlat
das
push
mov
insb
mov
out
mov
in
dec
mov
xor
jp
add
jne
bound
bound
repnz
mov
out
xchg
jns
add
popf
sub
mov
add
lock
lret
pop
lock
out
and
inc
mov
insb
push
inc
loopne
shll
iret
pop
push
xchg
push
mov
and
jl
nop
and
add
xchg
cwtl
xor
pop
dec
or
inc
sbb
test
sub
jne
mov
sub
fdivrs
inc
loope
loop
mov
adc
xlat
movsl
push
dec
mov
push
mov
fcomip
in
hlt
or
cltd
sbb
fldenv
add
shr
rcll
or
add
cmpsb
popf
push
out
out
iret
jo
andb
shrl
cmovo
dec
adc
fadd
jne
add
jnp
data16
decl
std
or
fildl
add
mov
les
stos
nop
xlat
jg
sti
aas
enter
mov
mov
repz
sti
out
test
xchg
fs
imul
in
sarb
fbld
sbbl
and
insl
jns
adc
jmp
clc
clc
cmp
icebp
insb
aaa
pop
shrb
cmp
mov
push
push
xchg
fldt
ds
xor
jbe
pop
dec
xor
lret
outsl
mov
fcmovnb
scas
dec
sbb
insb
lods
fsub
jo
mov
push
sbb
ja,pt
push
lret
adc
pop
mov
sarb
je
and
jns
addr16
mov
cmp
fcmovb
adc
and
nop
fdivs
mov
push
sahf
push
cmpsl
dec
loop
adc
ds
scas
sbb
xlat
xchg
or
push
scas
loopne
jmp
sub
into
ret
push
push
repz
mov
out
jno
cltd
cwtl
repz
js
jns
adc
cmp
mov
pop
in
loop
push
xchg
inc
sti
cmp
ficoml
or
ljmp
mov
sti
into
pop
lods
mov
xchg
push
stos
in
enter
pop
pop
popa
scas
les
xor
inc
pushf
mov
lcall
add
jp
sahf
in
mov
jle
add
ss
je
outsl
pop
jo
pop
popf
inc
dec
add
jb
sbb
jbe
or
adc
cmp
fdivrl
or
in
inc
xchg
xchg
insl
das
pushf
mov
repz
pop
mov
dec
mov
stc
es
or
pop
mov
fs
lock
inc
jno
pushf
dec
shrb
in
int
xchg
cmp
push
or
aam
kmovw
add
mov
cmp
jno
and
and
ljmp
xor
ret
sahf
sbb
jp
push
arpl
push
cmp
movsl
dec
cmc
data16
addl
xor
loopne
movsb
sub
lock
adc
jp
fbstp
mov
sarb
pop
pop
shl
roll
and
ja
xchg
aad
or
pop
aaa
xchg
inc
inc
jbe
xor
xchg
xchg
pop
test
scas
fmuls
pop
xchg
fwait
xor
push
test
mov
xchg
dec
jmp
push
sbb
adc
lret
leave
add
fneni(8087
xor
mov
pop
data16
aaa
rclb
mov
cmp
cmp
out
sbb
insb
mov
mov
xchg
addr16
stos
ret
mov
sbb
mov
xchg
inc
ljmp
in
inc
lock
cmp
aaa
in
dec
push
sti
push
mov
loop
jge
mov
mov
subb
xor
jno
mov
pop
das
fsubl
icebp
fidivrl
jne
js
inc
andl
jb
stos
pop
xchg
jp
dec
inc
jmp
outsb
jecxz
inc
shlb
and
lcall
mov
dec
aad
sbb
lret
inc
popf
mov
test
inc
push
pop
lds
leave
or
lahf
dec
adc
pushf
gs
add
xlat
mov
push
sbb
mov
adc
stos
push
cmp
loope
mov
pop
insb
add
std
pop
inc
cmc
icebp
in
mov
icebp
mov
imul
add
add
add
add
into
psrld
rcr
fistpll
push
jmp
in
imul
add
cmpsl
rcrl
add
test
lock
cmpsl
es
jle
movsl
imul
test
jne
mov
lret
cmp
scas
adc
sbb
mov
mov
aam
addl
xchg
adc
cmpsl
dec
mov
lods
and
mov
inc
mov
and
ret
pop
mov
les
imul
push
xor
test
push
or
push
pop
call
sbb
mov
ret
cld
sub
stc
mov
orb
push
stos
daa
aaa
xchg
push
pushf
jmp
loope
xchg
and
lret
hlt
jl
scas
aad
and
fs
imul
inc
sti
mov
test
stc
and
inc
popf
sarl
mov
pop
jp
pop
and
pop
dec
or
les
out
notl
popa
fstps
andl
or
test
xchg
adc
push
jnp,pn
pop
push
ljmp
js
js
popf
gs
mov
fsts
or
mov
fsub
fs
imul
mov
pusha
add
adc
fcmovbe
dec
loope
cmp
das
inc
lds
fs
scas
xchg
pop
push
outsb
icebp
cld
gs
outsb
jae
es
cmp
jbe
pop
jno
mov
sbb
sub
mov
in
and
and
sti
pop
pop
ljmp
xchg
sbb
sbb
icebp
dec
push
mov
jbe
sar
jmp
addr16
fdivs
scas
dec
ret
in
xchg
fldl
aaa
aam
cmp
mov
fnstcw
add
js
xchg
icebp
out
cmp
adc
rclb
cmp
add
in
incb
xchg
mov
mov
imul
lods
sub
mov
adc
adc
jno
mov
loopne
adc
out
push
sbb
mov
jmp
lds
lcall
sub
add
jg
mov
pop
mov
and
sti
mov
mov
negl
adc
xchg
mov
push
xchg
xchg
pop
mov
sti
dec
loope
mov
jl
mov
jno
adc
cmp
jae
add
and
decl
dec
jo
jns
sub
jns
sbbb
add
lcall
mov
jl
cltd
scas
mov
lock
xchg
mov
stos
dec
test
js
aas
and
mov
inc
cmp
ficomps
fcoms
out
push
out
int
in
jp
into
cltd
outsl
in
or
inc
dec
add
popa
and
lcall
xor
push
fidivrs
xlat
mov
pop
push
ror
or
mov
mov
push
mov
data16
orl
dec
test
inc
mov
mov
aam
int
test
rolb
xchg
dec
nop
rcll
mov
sub
fwait
push
mov
dec
inc
mov
int3
clc
mov
sar
dec
inc
ds
lods
cltd
out
rorb
aas
dec
outsl
jb
jb
fldenv
mov
sbb
cmp
int
mov
fnstsw
lea
das
xlat
add
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
jecxz
add
cmp
sbb
addl
arpl
movsl
inc
addr16
dec
ja
repnz
jns
fs
cmpsl
push
cmp
fistps
pop
movsl
adc
push
add
cmp
sub
pop
cmpsl
inc
add
rcrl
scas
inc
inc
push
frstor
mov
shll
in
aaa
mov
gs
jb
jmp
inc
hlt
push
mov
adc
lret
add
jbe
cmp
adc
xor
js
cmp
and
out
call
mov
decl
fnstcw
mov
lds
cmp
xchg
clc
cwtl
cmpsb
movsl
aam
flds
aaa
cmp
mov
pusha
test
shll
sbb
fildll
es
int
out
push
cmovge
fmulp
mov
ss
mov
aas
dec
push
insl
imul
cwtl
mov
dec
daa
jo
mov
bnd
pop
test
cmp
pusha
xor
lock
fs
sti
aaa
xchg
movsl
sub
cmp
lods
pop
mov
pusha
mov
cltd
sub
pop
call
test
fists
dec
pop
sbb
mov
xchg
xor
mov
pop
aas
leavew
addr16
sub
adc
inc
lea
mov
clc
jmp
andb
scas
cmc
orb
fs
pop
pop
shrb
cmc
lods
insb
xchg
test
jbe
les
stos
popa
sbb
mov
adc
and
jle
fs
std
push
call
xchg
jno
mov
xchg
dec
ljmp
xchg
rcl
cmpsb
mov
sbb
lret
out
cli
stos
jns
iret
cmp
fisubrs
flds
clc
and
outsl
into
cmp
and
mov
aas
loopne
test
jbe
mov
popf
lret
pop
jl
inc
jae
push
pop
repz
push
xor
fs
cld
xchg
in
jle
or
jb
cmp
inc
sbb
sbb
fs
sbb
push
fldenv
clc
loope
fisttps
mov
lret
mov
push
push
xchg
cmp
flds
push
neg
test
sahf
push
test
pop
outsl
ficompl
inc
or
fwait
imul
inc
adc
rcrb
pop
test
xchg
jbe
scas
pop
or
stos
pop
jae
je
les
adc
mov
rep
std
es
cwtl
and
fidivrl
mov
leave
cmp
cmp
sbb
sub
adc
sbb
in
inc
push
xor
jae
mov
leave
js
lods
push
aad
fidivl
mov
lahf
xor
dec
arpl
cmp
aaa
mov
loop
daa
popa
dec
cmp
inc
jg
xor
mov
fcompl
out
inc
aaa
mov
mov
xchg
aad
mov
and
jbe
mov
insb
add
lret
mov
cmc
mov
dec
xor
rcr
loopne
mov
movsl
inc
add
shrl
inc
cmp
cs
xchg
or
add
stos
std
test
xchg
adc
mov
xchg
lods
jbe
mov
pop
sbb
jl
xor
or
adcl
mov
leave
add
clc
es
push
je
add
sbb
ret
jg
mov
shl
mov
add
scas
add
add
test
cmpsb
fidivrs
and
out
test
mov
lret
cwtl
mov
cmpsb
fisttps
test
pop
shll
and
popf
push
bound
mov
inc
or
dec
and
jp
dec
mov
fmull
mov
imul
xchg
sbb
push
sub
lret
icebp
jge
jmp
cmp
test
adc
fwait
sub
fucomp
in
shlb
cmp
aam
test
mov
push
sbbb
push
fildl
fldl
dec
add
and
popf
arpl
mov
inc
subb
mov
loop
imul
dec
adc
jb
push
inc
dec
leave
sbb
dec
mov
mov
mov
sbb
inc
sub
fcomip
shll
cmp
dec
cmp
xchg
mov
sarb
test
jb
dec
imul
sbb
jnp
aad
lods
push
cwtl
repz
inc
inc
cmpsl
mov
repnz
cmp
push
mov
fistl
adc
mov
mov
mov
sbb
cmp
out
ja
rorb
mov
xlat
pop
shrl
push
fnsave
mov
mov
inc
adc
inc
lds
ljmp
mov
setb
or
inc
jne
or
xchg
mov
clc
shlb
sahf
inc
push
pop
sub
adcb
lcall
ss
ljmp
jno
jb
xor
mov
and
push
push
push
into
cmp
inc
sub
add
outsb
ret
fwait
add
xlat
mov
mov
inc
fisttpl
jmp
dec
testl
mov
mov
pop
sbb
popf
sbb
out
mov
addr16
xchg
add
cmpsb
xchg
mov
jge
jnp
or
lds
stos
xor
mov
sub
xchg
fistpll
mov
fldcw
incl
cltd
add
icebp
pop
clc
icebp
test
test
loopne
add
out
sarl
push
loop
xor
shlb
clc
fidivl
popa
xor
xchg
or
orl
popf
into
mov
popa
lods
popa
mov
lret
adc
mov
mov
ss
call
daa
xchg
mov
jns
or
sub
das
scas
movsb
leave
cmc
or
xchg
mov
cmp
jge
pop
sti
pop
cld
in
ret
pop
dec
fisubrs
sub
push
xchg
xchg
shl
ret
mov
inc
xor
sbb
in
dec
aas
out
outsb
mov
bound
lock
lahf
mov
fisubrl
push
sbb
sahf
pop
and
cli
dec
in
fstps
and
ftst
push
fwait
pop
fnstenv
leave
aas
xchg
rolb
cltd
adc
mov
fcomps
cld
xchg
jb
cmp
xchg
hlt
sub
xchg
daa
add
lea
jl
sub
xor
adc
xor
cmc
loopne
stc
mov
pop
mov
add
cmp
jnp
or
xchg
loope
inc
xor
loopne
in
push
mov
xchg
jns
jle
movb
push
test
lods
fs
pushl
or
shrb
fmuls
popf
adc
push
pushf
loop
mov
and
xor
push
mov
mov
ret
std
cltd
adc
add
inc
xchg
dec
xchg
mov
jns
pop
jne
add
scas
add
add
inc
dec
cs
mov
sub
jle
mov
and
cwtl
inc
gs
lahf
or
cmc
fdivrs
into
jb
xor
stos
cmp
push
push
add
jbe
mov
in
int
adc
jno
adc
and
jo
andl
in
xchg
rorl
sbb
roll
popf
adc
ret
cld
push
mov
inc
push
mov
shll
push
pop
dec
jbe
insb
idivl
mov
and
inc
fs
push
push
mov
pop
push
mov
bound
inc
popf
add
sbb
test
xchg
inc
cmp
ds
jne
pop
mov
xor
push
mov
pop
add
into
rcrl
je,pt
jge
adcb
jae
mov
mov
adc
dec
rcl
add
xchg
cld
popa
pop
add
pop
push
jmp
push
push
xchg
in
lcall
arpl
mov
and
mov
add
test
testl
sbb
mov
and
mov
mov
pop
int3
stos
dec
and
cmp
and
dec
push
cli
mov
xchg
sub
xor
into
shll
in
loope
pop
scas
push
cld
fldcw
inc
mov
mov
add
push
es
sbb
jbe
pop
sbb
ret
fwait
push
xchg
inc
std
sbbb
lcall
out
mov
jg
test
hlt
mov
popf
xor
adc
pusha
or
inc
lods
cmp
or
ds
je
mov
cltd
mov
int
dec
adc
sbb
hlt
push
jno
sbb
cmp
add
fwait
cmpsl
in
repnz
cli
xchg
jb
test
and
inc
out
pop
dec
cwtl
and
ffreep
lret
lock
inc
loop
sub
movsl
adc
adc
mov
xchg
cmpsb
pop
sub
xorl
cmpsb
xchg
out
aad
popa
push
inc
or
ljmp
dec
call
mov
mov
faddl
mov
pop
aad
lods
inc
loopne
out
test
cmp
adc
ss
cmp
sarb
aad
cs
fcoml
rcrb
fwait
jecxz
orb
sbb
cwtd
mov
repz
cmpb
jmp
addr16
mov
mov
add
and
leave
add
insb
jb
out
xchg
fidivl
add
sahf
cmpsb
das
rclb
jmp
sbb
mov
pop
xchg
insl
loope
scas
xchg
imul
cmp
enter
addr16
ja
inc
mov
repz
jle
jae
loope
push
stc
jle
and
sbb
xchg
outsl
adc
lods
pop
les
mov
mov
mov
aam
jnp
lret
out
cli
faddl
jo
pop
add
cmpsl
mov
pusha
push
shl
sbb
js
add
sub
sbb
loopne
mov
stos
mov
insl
hlt
into
push
pop
adc
push
or
cmpsl
sbb
fsubrl
cmp
inc
mov
pop
cmp
pushf
cmp
nop
mov
sub
cmc
hlt
jbe
aas
repnz
push
pop
adc
push
aad
jmp
pop
popa
aam
subb
std
in
imul
aaa
xchg
add
sub
and
jg
push
adc
cli
dec
and
add
scas
add
add
jne
or
jnp
test
sbb
jge
popa
jbe
jo
leave
inc
add
insb
cmp
mov
mov
lcall
dec
sbb
es
cld
loope
repz
int
push
leave
incl
mov
lock
mov
mov
pop
inc
xlat
lahf
jne
jp
cmp
cmp
cmp
xchg
movb
lret
lock
hlt
into
fs
decl
subb
sti
test
mov
notb
inc
fdivl
jl
adc
shlb
arpl
cmp
pop
lock
out
in
movsl
jb
loope
inc
lret
jl
fsts
aad
stos
in
mov
out
pusha
je
cld
add
sbb
sub
cmp
scas
je
mov
xchg
or
xor
int3
ds
cmp
adc
cmpsl
jmp
int3
jns
test
adc
or
insb
popf
sbb
inc
ficompl
mov
cmp
in
or
roll
mov
mov
icebp
sub
pop
notl
stos
std
sbb
in
xorb
xchg
ret
mov
adc
sub
push
stos
loope
push
pop
sbb
jp
test
add
dec
int
push
aaa
movsb
or
rcll
sti
push
das
adc
mov
sbb
cmp
ljmp
sahf
xchg
inc
rolb
scas
or
sub
mov
andb
int3
xlat
lahf
push
fadd
mov
pop
pop
mov
std
cli
aad
pop
dec
ficoms
dec
scas
stos
cli
cwtl
flds
mov
inc
sbb
mov
mov
movsb
sbb
push
aad
xchg
negl
sti
mov
out
addr16
push
inc
in
or
or
sbb
fstpl
jae
idivb
lock
cmp
mov
push
test
pop
int
pop
aaa
push
arpl
loope
push
pop
ljmp
scas
add
cmp
cmc
subb
xchg
ds
shr
push
jg
inc
mov
pop
cmpsb
add
das
rcr
adc
cld
in
and
mov
ret
jbe
idivl
jne
cmpsl
jo
cs
mov
mov
pop
cld
stos
test
xor
cli
push
mov
cltd
lret
jge
sbb
add
inc
jg
xchg
adc
insb
jo
adc
sbb
mov
mov
hlt
in
push
arpl
mov
push
or
lds
loop
sub
and
dec
cs
daa
lcall
or
adc
aam
adc
xchg
jecxz
test
mov
push
nop
mov
mov
cs
sub
pop
pusha
rcr
and
orb
dec
cmp
mov
in
jecxz
xchg
jmp
xchg
and
lahf
lret
loopne
cmp
dec
iret
pop
mov
lock
test
mov
lahf
or
stos
cmp
mov
inc
sub
push
fwait
lds
ds
push
mov
in
mov
fidivrl
incb
ss
cmp
ja
inc
faddl
fs
push
pop
inc
xchg
inc
dec
mov
pop
and
or
pop
fisttpll
pushf
daa
cmp
mov
aaa
sub
push
aaa
fiaddl
xor
add
sub
jnp
sti
mov
aaa
mov
pop
not
icebp
add
scas
add
add
dec
add
sub
pop
mov
loope
mov
aaa
mov
xor
xchg
repz
test
dec
arpl
mov
add
cmp
sbb
and
and
rorl
outsb
add
jmp
in
lcall
mov
stos
add
inc
sahf
push
icebp
add
add
iret
pop
jmp
movsb
xor
dec
aaa
in
pushf
xchg
stc
xchg
lret
sets
movsl
shrl
mov
in
fcoms
xor
outsl
fbstp
mov
push
cwtl
lcall
leave
les
out
fsubrl
adc
xor
mov
ficomps
lds
push
and
pusha
lock
jle
cmp
popa
xchg
add
aas
xor
data16
add
pop
aas
pop
add
idiv
hlt
pop
mov
inc
dec
imul
fs
push
test
mov
cmp
push
dec
mov
fs
xor
sub
data16
pop
mov
jle
xor
repz
cmp
xor
bound
lods
sbb
call
lcall
add
ret
fstpl
out
lret
test
rcr
or
rolb
xchg
mov
xor
stos
xor
clc
outsb
sub
sub
sbb
out
call
aaa
invd
es
and
repz
dec
adcb
out
sub
or
movsb
or
jbe
push
loop
dec
pop
dec
push
hlt
hlt
jno
and
sbb
popf
std
ja
lret
pusha
rcll
add
dec
push
pop
adc
or
or
cmp
pop
mov
mov
insb
jmp
pop
stos
xchg
adcl
ds
movl
subl
xchg
lcall
pop
push
jne
dec
test
mov
and
xchg
inc
xchg
imul
lods
inc
cltd
js
cmp
xchg
and
jno
push
icebp
xor
cmp
daa
or
daa
cmp
pop
xchg
lea
cmp
or
fnclex
and
push
add
jg
mov
and
mov
and
lret
rcr
cmc
push
pop
push
sahf
outsl
cmp
jg
mov
lahf
clc
inc
fadds
out
test
lcall
inc
add
and
inc
aam
mov
pop
outsb
and
nop
mov
repnz
sbbl
sub
push
imul
stos
lea
addb
mov
jge
push
aad
hlt
repnz
rorb
fsubrp
sbb
mov
lds
aaa
scas
push
dec
aad
jge
mov
ds
rolb
cmpsl
jae
add
mov
mov
mov
sub
movsl
pop
inc
dec
and
rcrb
nop
cmp
xchg
loopne
out
gs
jb
sti
mov
shll
mov
mov
rcr
and
pushw
daa
xchg
ss
stos
in
mov
fsts
push
adcb
sarl
iret
adc
xchg
sub
dec
iret
mov
int
or
sub
sub
mov
repnz
rcll
testb
in
sar
add
hlt
repz
add
add
add
mov
fbstp
mov
jg
add
xchg
add
add
paddq
mov
mov
or
add
jmp
mov
add
loopne
mov
loop
ret
popf
jle
jno
mov
xor
push
xor
pop
fs
xchg
ja
jmp
fldenv
fstpl
jno
xchg
cmovnp
jne
dec
push
popa
outsb
inc
fsubl
dec
sbb
xor
sbb
xchg
ljmp
sbb
lea
aas
or
pop
fisubs
lret
loopne
cmp
nop
mov
or
adc
pop
loopne
add
das
loope
and
mov
xor
es
dec
dec
icebp
sub
sub
outsl
insb
push
or
mov
rep
inc
in
sub
adc
pop
stos
jo
mov
mov
dec
xor
ficoms
inc
imul
pop
sub
push
loopne
nop
cmp
jbe
mov
mov
fs
gs
daa
sbb
imul
pushf
pushf
imul
xor
lret
mov
fcmove
adc
add
inc
xchg
sub
xchg
outsl
xor
das
xchg
jge
cmc
popa
das
mov
mov
push
sub
sub
fbstp
push
in
or
inc
movsb
jmp
loope
nop
mov
rol
fidivs
push
mov
in
jl
jp
mov
test
dec
fisttpl
sub
add
imul
xchg
push
mov
scas
shrl
mov
out
mov
mov
bound
cmp
jmp
or
loopne
add
lea
stc
out
pop
xchg
xchg
flds
inc
cs
jl
fidivrs
jecxz
arpl
rolb
add
mov
or
pop
mov
xor
inc
and
push
xchg
pop
sysexit
push
fildl
popa
push
push
xor
lods
pop
jg
inc
push
ljmp
in
xor
outsb
adc
jo
enter
add
jmp
mov
cltd
xor
mov
lret
xchg
and
xchg
call
push
stc
dec
fistl
xor
fidivl
mov
xor
mov
test
pop
outsb
jnp
lret
lret
jl
xchg
and
popf
sub
mov
rorb
out
xchg
mov
test
adc
push
jb
popa
fsubs
sbb
in
addr16
int3
fscale
dec
sbb
jg
rcrb
leave
xchg
xlat
mov
das
mov
cmpsl
adc
or
xor
popf
or
mov
das
xlat
ds
pop
add
adc
inc
enter
xchg
cmp
dec
mov
mov
out
imul
inc
test
dec
outsb
add
gs
cmp
push
cli
pusha
lods
push
les
test
mov
xchg
inc
inc
mov
xchg
dec
test
push
push
es
jno
lret
insb
sub
test
mov
test
js
push
out
and
in
and
push
test
xlat
lods
xor
dec
dec
xchg
push
test
fildll
jns
xchg
inc
cmp
xor
bound
popf
inc
or
mov
repz
mov
