push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
inc
aaa
movsb
mov
jl
add
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
cli
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
jmp
int3
lock
hlt
sbb
in
cmp
aad
lret
fstl
sub
xor
enter
fcmovb
fldz
into
repz
std
mov
xchg
mov
xlat
jmp
into
call
cmp
fcmovb
cli
out
movl
in
in
cs
xbegin
fdivr
fcomi
test
jmp
mov
sub
out
loop
xor
cmp
fdivrl
test
loop
xchg
lea
jecxz
xor
cmp
fsubp
neg
xor
out
fmul
ljmp
lret
ret
lock
cmp
lret
test
sar
xchg
sar
faddl
jecxz
out
fsub
int
rol
std
ljmp
call
out
fucomi
jecxz
xchg
repnz
in
clc
out
fdivl
cmp
cli
out
fadd
fstpt
xchg
shl
and
jmp
aaa
xor
rol
cmp
aaa
out
lret
rcr
rolb
fucomi
out
in
xchg
or
out
fdivs
mul
cmc
jmp
in
cmp
aad
addb
std
into
call
aaa
loop
xor
mul
icebp
std
cmp
and
mov
jmp
into
shl
xchg
loope
icebp
fcomi
cmp
lret
shr
out
cli
out
fildl
aam
out
enter
xchg
xchg
int3
loop
shl
enter
repnz
add
out
loope
in
fdivp
xchg
ret
call
xor
aad
loop
cmc
out
aas
jmp
call
call
out
ret
iret
cli
leave
aam
jmp
lret
repnz
aam
add
call
xchg
in
das
in
out
jmp
fcmove
stc
fcomp
fcmovu
cmp
mov
fldl
fcomip
iret
leave
cld
lret
ror
call
ror
shl
ret
shr
or
into
out
fisttps
icebp
ret
shr
clc
fldl
in
ret
lret
loopne
loope
fucomp
out
out
rorb
vcomiss
out
cmp
icebp
ror
stc
rcr
xlat
call
decl
int3
icebp
xor
ds
int
in
std
lret
aam
fsubr
int3
loopne
rcr
icebp
loop
xor
cmpl
lock
in
into
out
ljmp
shll
stc
aad
lock
clc
cld
aam
xchg
fildl
loope
jecxz
shl
lret
loop
xlat
in
sub
xor
aam
clc
test
in
out
xchg
sub
in
cli
shr
int3
mov
out
out
fidivrl
sti
cli
aas
repnz
fsubrp
call
out
cmp
xor
ss
jmp
flds
out
ret
call
icebp
idivb
out
leave
lret
cmp
call
int
jmp
xchg
in
lock
aad
std
in
divl
call
into
in
out
clc
lds
fdivp
cld
into
xchg
ljmp
fyl2xp1
aam
in
cmp
hlt
lds
cli
or
xlat
out
call
test
lret
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
mov
mov
addb
jl
add
xor
idivb
loopne
out
out
or
in
lret
ljmp
out
std
fyl2x
into
filds
in
mov
notb
mov
in
ss
aam
clc
aas
in
cmp
shl
in
ds
xor
in
fstl
cmc
aad
xor
leave
enter
ret
cmpl
test
into
leave
test
loope
repnz
in
cmp
ror
aaa
fdivrl
cmp
lock
cmc
sti
std
testb
mul
ljmp
xor
shl
hlt
out
fcom
rcl
mov
mov
shl
rcl
aad
fdivr
cmp
aam
in
dec
fcom
ret
clc
loope
cmp
mov
out
lret
clc
clc
in
cli
cmp
ds
ffreep
call
fildl
xchg
aam
xor
stc
sar
out
fstp
sarb
repnz
into
out
fsubrp
les
jecxz
shl
xchg
mov
repnz
clc
aaa
int
fmul
aam
mov
jmp
les
cmc
lret
xchg
jecxz
aaa
lock
rcl
fcmovnbe
cmp
stc
div
shl
fimuls
lret
nop
in
mov
call
hlt
into
cmp
lock
cmp
cmp
leave
in
mul
fstp
iret
xchg
repnz
aad
aam
std
lret
ret
incl
cmp
jmp
fcomi
fidivrs
ljmp
aas
jecxz
mov
iret
test
aad
xor
in
stc
leave
shl
in
out
lock
cmp
xchg
xchg
faddl
xchg
mov
leave
ljmp
cmp
fmuls
fxch
test
out
call
cmp
cmp
fsubrp
std
ror
les
ljmp
mov
in
icebp
shll
cmp
fcomip
shl
not
loop
fiadds
enter
filds
jecxz
fdiv
not
jmp
hlt
out
repz
mov
mov
iret
in
int3
rol
iret
out
aam
int3
ds
aad
out
repnz
repz
loope
int3
sub
loope
mov
loopne
divb
repnz
fdivrp
sar
cld
fcmovbe
std
jmp
out
jmp
loop
xor
cmp
cmp
clc
lret
fidivrl
stc
in
fldz
test
xchg
out
out
out
aam
sar
cld
lret
loope
faddp
incl
xchg
loopne
xchg
mov
mov
cmp
clc
sar
stc
in
std
cmp
add
fimuls
repnz
xor
ss
fmul
fidivrs
in
rcr
fsub
loopne
in
xlat
fmuls
xchg
int3
rol
sar
cmp
xor
xlat
int
rcl
cmp
icebp
mov
lea
idivl
das
lret
fidivl
cmp
hlt
out
cmc
fmul
jmp
in
enter
leave
call
cmc
enter
cmp
aas
fdivrs
idiv
mov
and
call
jecxz
out
xlat
into
ss
ljmp
fisttps
mov
loopne
leave
repnz
jecxz
cli
sti
aam
lock
icebp
sbb
jmp
leave
test
les
loopne
jecxz
rcr
sarl
cmp
jmp
cmp
out
shl
into
shl
addb
int
cld
loope
xchg
repz
in
out
xor
hlt
cli
cmp
int
adc
cmp
loopne
call
lock
cld
jmp
out
out
ljmp
hlt
call
lock
lds
xlat
stc
mov
out
int3
xor
loop
lock
lock
jmp
rcr
adc
cli
sbb
into
test
lock
stc
mov
fidivrs
out
int3
shl
out
loope
fcom
ror
cli
call
xchg
aam
shl
sti
xlat
icebp
ljmp
aam
ss
fiadds
in
ret
and
repz
in
aad
cmp
mov
mov
inc
add
add
add
add
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
je
orl
addb
jl
ret
cmp
in
in
jmp
sub
xchg
test
repnz
xor
clc
xor
cli
cmp
cmp
cmp
jmp
fndisi(8087
leave
test
mov
lock
ret
sub
cmp
icebp
cmp
in
aam
ret
fincstp
stc
in
out
xchg
dec
xor
xor
lret
lock
in
loope
out
in
out
sarb
fstp
aam
lret
out
cmp
xchg
ds
fnstenv
cmc
loopne
jecxz
jecxz
cld
sbb
or
out
mov
lret
ljmp
idivl
jmp
loopne
test
lret
mov
cld
fsub
aad
ror
in
sti
std
cld
ror
cmp
repz
stc
fabs
in
xlat
fmulp
iret
ljmp
leave
in
iret
out
cmp
out
jmp
out
rcr
fsincos
sti
in
loope
mul
xchg
fimull
lds
jmp
in
lret
call
in
fidivrs
out
in
xchg
jecxz
les
jmp
ljmp
xor
leave
iret
clc
rcl
into
test
loopne
fadds
xchg
faddl
aam
ret
out
fptan
fstpt
ret
out
aad
stc
aad
out
into
fmulp
les
sub
cli
div
shll
jmp
fsubrp
fnsetpm(287
test
mov
clc
fmul
std
sti
test
aad
rol
in
shlb
adc
cmp
idiv
idiv
call
lret
lock
jmp
fnstsw
std
icebp
neg
clc
lret
ss
aas
jmp
leave
iret
sti
xchg
nop
lret
lock
iret
cli
fstp
ds
lock
int3
in
cld
mov
out
mov
xchg
ljmp
icebp
aad
lret
sti
idiv
icebp
cld
addb
xchg
in
xchg
jmp
clc
cmp
repz
ffree
loopne
repz
rcr
out
lret
in
call
xlat
aaa
aad
bnd
fiaddl
cmp
mov
test
clc
xchg
out
orb
hlt
cmc
cli
lret
into
fmulp
in
fcomp
rcr
ds
cmc
test
orl
out
ss
enter
stc
aam
stc
test
jmp
mov
std
out
xchg
xor
fcmovnu
fcomi
ret
cmc
in
xchg
fstp
fimull
xor
jmp
lret
lret
out
fsubr
fiaddl
loope
clc
sub
mov
xchg
sbb
xor
shrl
leave
loopne
into
filds
test
fcomp
in
cld
in
lret
ljmp
roll
sbb
jmp
mov
xchg
add
cmc
cs
jmp
jecxz
sar
cmp
rcr
addb
lret
fdivr
out
sub
xor
aad
fcmovbe
int
xlat
aam
out
adc
test
stc
cld
jmp
nop
repz
shlb
cmp
xor
in
sti
aad
mov
call
cld
mov
sti
repz
jmp
xor
xor
repnz
xor
in
aam
fdiv
test
ret
mov
out
jmp
in
shl
mov
xor
aaa
out
cld
call
fcmove
out
cmp
clc
xlat
std
fisttpl
mov
ljmp
cmp
neg
imul
cmc
loop
shl
jmp
lret
loop
call
ljmp
aad
cmp
in
out
rorb
in
in
fmulp
bnd
leave
out
xor
imul
iret
loope
lock
loope
sub
mov
aam
sub
repnz
icebp
aam
cmp
dec
int3
test
test
cmp
xor
xor
fld1
out
icebp
sti
aam
fadds
sti
idiv
mov
in
out
out
aad
clc
jmp
aaa
fmul
in
fnstsw
out
test
fsubrp
aad
cmc
movl
in
loopne
lret
lret
xlat
div
clc
roll
test
mov
repnz
xor
lock
fdivrl
std
int3
aam
in
orl
mov
orl
jmp
rol
aas
ror
daa
jae
lea
cltd
sbb
add
repnz
aam
out
call
test
in
test
xor
sar
ret
aam
repnz
int3
into
out
int3
sub
clc
into
call
loope
shr
sar
xlat
lret
xchg
in
fdivr
mov
into
loop
in
hlt
aam
int3
in
fxch
fidivrs
flds
loope
out
cli
out
add
call
ss
fcmovnbe
test
clc
cmp
sbb
test
fucomi
xchg
std
icebp
ljmp
cmc
shr
fcomi
ret
clc
cmp
aam
fabs
leave
loopne
int3
int3
mov
loope
xchg
repz
ret
hlt
fcomi
jmp
stc
add
cmc
in
mov
test
leave
jmp
jmp
jmp
ljmp
cmp
call
cli
cld
fmul
xor
enter
xor
neg
loope
cmp
fcomip
add
aam
loope
fucom
lock
out
xor
lret
lret
sar
cmp
jmp
test
test
fmuls
xor
stc
in
sar
xor
call
int
sti
loope
les
fucomi
int
in
out
fsubrl
xor
rcr
sti
fadd
xor
fdivr
cld
test
test
in
lock
in
iret
ror
stc
repz
fucomi
int
repnz
testb
mov
xchg
addl
ret
out
jecxz
sar
out
shl
fucomip
addl
or
lret
iret
xchg
rcr
call
clc
clc
bnd
ds
out
lock
cmp
loope
call
out
int
repz
clc
xor
in
aad
into
cmp
leave
cmc
movl
call
cmp
iret
rcr
imul
fldl
cmc
ret
in
ljmp
stc
fld
out
sti
out
cmp
in
in
sar
iret
std
repz
incb
loope
xchg
mov
test
icebp
shr
fucomi
sti
in
cmp
test
xacquire
mov
into
call
stc
das
icebp
enter
cli
loop
ret
aam
loopne
loop
into
lret
ljmp
jecxz
cmp
aad
in
in
in
xabort
test
lret
xchg
test
mov
out
not
xlat
lret
xor
call
cmp
jecxz
call
enter
ljmp
in
fxch
int3
cli
enter
xchg
sbb
into
ret
in
adc
aad
ffree
repz
fdivp
call
fcomp
ret
jecxz
jmp
sti
loopne
call
hlt
out
repnz
sar
icebp
xor
in
std
not
lret
incb
aad
xor
sub
cmp
cmp
int
imul
repnz
not
ret
sar
loop
test
int3
in
int
lock
ljmp
aaa
jmp
cmp
into
add
fabs
loop
fcmovu
icebp
out
or
lret
int
hlt
cmp
rcl
sarb
jecxz
stc
ljmp
ror
in
icebp
aam
sarb
ss
icebp
cmc
hlt
shl
jmp
test
loopne
decb
loop
out
cmp
in
sti
iret
cld
ret
hlt
fiaddl
stc
mov
mov
in
jecxz
mov
aaa
int3
rol
lret
clc
int3
shr
imul
roll
aad
cld
fcmovu
lret
cli
out
or
cli
rcll
jecxz
fcmovne
ljmp
test
test
fcomp
sti
sbb
std
test
iret
xor
xor
div
ss
rolb
orb
int3
ror
aam
loopne
icebp
int
int
sarb
cmp
icebp
ds
loope
loope
out
mov
cld
out
xchg
in
out
ss
cmp
sti
jmp
xchg
and
jmp
leave
cmp
out
loop
icebp
out
out
enter
imul
ror
fcomip
hlt
fst
jmp
add
fmul
loope
xchg
repnz
aaa
cmp
sti
into
out
out
repz
lret
fdivrs
dec
shl
enter
fildl
sbb
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
or
push
jl
addb
jl
mov
xchg
ret
loopne
lret
lret
imul
lret
loop
clc
sarb
ficoms
shl
hlt
jmp
sti
call
faddl
mov
out
stc
orl
xor
call
into
std
aam
fdivr
in
cmp
sub
loope
ret
out
ret
nop
iret
inc
lret
frstpm(287
std
jmp
int
ds
std
cli
enter
fnsetpm(287
enter
jecxz
ss
fscale
aam
in
ljmp
fsubrp
mov
loopne
incb
jmp
cs
loop
fcmove
cmp
cli
cld
cli
mov
stc
loope
jmp
nop
jmp
jmp
cmc
aad
cld
shll
leave
xlat
xlat
sar
cld
iret
out
rol
imul
loopne
fiaddl
lds
jecxz
shr
icebp
into
cmp
lret
aaa
aam
lock
in
cld
in
mov
in
nop
xor
lret
cmc
fnsave
cmc
aaa
call
xor
aad
fsubr
out
into
test
in
fidivl
aam
rcr
ljmp
cld
cld
add
test
in
incl
icebp
jecxz
jecxz
in
out
in
loopne
aad
loop
shr
enter
ror
lret
xchg
xchg
out
out
test
shl
iret
repz
fneni(8087
std
shr
fadds
pop
test
xor
rcl
shr
cmc
cmp
loope
in
fadds
in
enter
and
cmc
int
aad
int
out
cmp
cmp
cmpl
fcmovnb
cli
jmp
cld
out
int
call
div
ret
cmp
out
cli
enter
into
cmp
mov
mov
enter
xlat
ds
fcom
test
cmp
cld
lock
icebp
rcr
fucomp
lret
fcomip
fiadds
sarb
cli
cmp
cmp
lret
into
neg
ret
aad
lret
out
repnz
ljmp
int3
call
rcl
rolb
fst
mov
enter
cld
jmp
shr
xor
xlat
ljmp
loope
ljmp
test
loope
aad
enter
lret
sar
shlb
cmc
sbb
fxtract
fsubrp
nop
fucomi
rolb
aam
rol
fmul
idiv
ds
out
hlt
jecxz
xlat
loope
orl
fst
out
fisubrs
hlt
ss
cld
ss
cmp
int3
aas
xchg
out
call
lock
ret
lds
lret
iret
aad
out
stc
xchg
aad
xor
enter
lret
sar
fscale
ds
fildl
out
test
jecxz
test
jmp
rcl
leave
cmp
out
out
clc
shlb
sar
xlat
out
cmp
mov
sub
sarb
cli
xor
repnz
aad
rcr
clc
ror
shl
ljmp
jmp
repnz
cmp
ret
aam
in
jmp
out
cld
loop
ror
not
cmp
xor
fmulp
rcr
aas
cmp
shl
stc
aam
in
mov
lret
out
in
mov
aaa
loope
shr
call
incl
std
ret
mov
lret
loope
cld
fxch
rolb
loope
in
xor
xor
hlt
cmp
sti
ds
clc
xlat
testb
int
repz
nop
mul
out
shll
clc
xor
out
adc
aas
cld
fadd
ret
in
shr
loope
xchg
in
xor
xor
xor
ss
call
sti
fdivp
cmc
std
xchg
fndisi(8087
in
lret
xchg
repz
sti
hlt
in
xor
enter
cmp
in
cli
xchg
test
jecxz
nop
lret
xchg
aam
ret
int
xor
repnz
ret
neg
test
loop
in
fprem
ret
leave
ljmp
repz
fnstsw
clc
rcl
fnstsw
jmp
in
mov
in
popl
in
jmp
repnz
out
out
shl
jecxz
sbb
decb
jmp
inc
loopne
inc
in
mov
jmp
aam
into
lret
rcr
fstp
les
mov
jl
add
lock
loope
enter
in
enter
loop
stc
rolb
leave
les
call
int
in
xor
xor
repnz
loop
iret
cld
fcmovnu
in
jmp
cli
mov
incl
xlat
out
rol
hlt
shr
roll
hlt
lret
mov
xchg
loope
loopne
hlt
xor
int
ss
std
lock
aad
cmp
ret
test
out
loope
std
xchg
aad
out
jmp
ss
std
fnstcw
loope
addl
call
xchg
lret
ljmp
xor
cld
ret
aad
ds
cli
mov
jmp
xchg
jmp
out
fnsetpm(287
cmc
aam
int3
std
jmp
adc
aam
xchg
hlt
out
cli
out
shr
out
cld
in
shll
shl
clc
repz
cmp
loope
xchg
fisttps
out
sub
icebp
int
call
out
xlat
div
iret
int3
loopne
jmp
mov
decb
jmp
aad
shlb
out
aad
in
out
jmp
test
out
xchg
repnz
faddp
rcl
xor
in
cmp
aaa
sti
xlat
fildl
ret
mov
sbb
rcr
xchg
xor
ror
jmp
xor
fdivr
ffreep
sar
repz
fcomp
xchg
ljmp
cs
das
aam
ljmp
fsub
sti
xlat
sti
xlat
shl
jmp
call
icebp
cmp
shr
in
cmp
sti
aam
div
hlt
out
xlat
std
cli
leave
or
shlb
shll
xor
cmp
sti
iret
cmp
aad
cmp
shr
cmc
int3
in
shr
out
les
int
xor
cld
divb
repz
out
mov
loop
mov
fcmovb
xchg
xchg
out
stc
out
cmp
filds
jecxz
ffreep
jmp
xchg
xchg
lret
loop
aaa
in
ror
repnz
out
out
fdiv
rcl
sti
jecxz
cli
addb
out
lret
repnz
test
out
shr
ret
mov
jmp
icebp
aam
in
lock
cmp
repz
stc
mov
in
mov
icebp
xlat
iret
xlat
loop
div
call
int
sbb
fisttpll
in
xchg
xchg
in
xlat
repnz
ljmp
loope
in
cmpl
lret
test
shl
shl
in
das
das
jecxz
std
cmp
xor
rcr
loop
lock
jmp
int
faddl
aad
call
leave
cmc
xlat
fsubrp
in
rcl
fiadds
loop
xchg
out
rol
xlat
sti
fdivrl
loop
xlat
lock
jecxz
adcl
lret
shr
ljmp
div
lock
cli
mov
enter
sti
iret
incl
int
cmc
fucompp
fucomip
iret
cmp
test
int3
xchg
in
rol
loop
leave
lret
iret
ss
sarb
shl
shl
fld
stc
cmp
std
mov
test
xor
xlat
repz
xor
aas
fldz
aad
repz
rorl
lret
test
jmp
xchg
into
ds
xor
icebp
enter
in
cmp
std
in
jecxz
lret
lret
mov
repz
cmp
dec
inc
divb
cld
icebp
ds
cmc
stc
and
jecxz
jmp
out
jecxz
icebp
in
repz
std
cmp
shl
lock
lock
jmp
fiadds
xchg
in
sub
out
cmp
ljmp
loop
fsub
repnz
xchg
into
cmp
jmp
xor
xor
cmp
ds
in
fldl
popl
rcr
jecxz
test
or
repnz
loope
addb
out
icebp
call
jmp
cmp
cmp
lret
aad
cld
cmp
fdivrp
cli
vpandn
out
sar
rcl
repnz
iret
ds
shl
jecxz
repnz
ret
and
test
sub
movb
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
in
pop
das
and
jl
addb
jl
cmp
cli
fbstp
call
aas
cmp
sti
in
lret
loope
test
loopne
out
aaa
ret
cmp
out
test
jecxz
lret
jmp
mul
jmp
in
xchg
cmc
test
aaa
out
stc
hlt
aaa
into
shlb
cmp
xchg
leave
int3
int3
mov
xchg
out
fsubr
aad
cmp
repz
cmp
test
rcl
test
mov
int3
in
and
cld
shl
ljmp
cmp
fidivrs
std
xor
hlt
add
in
fsubr
cli
lock
fucomi
xchg
shlb
xlat
lret
call
ljmp
in
shl
fldl
sbb
or
repz
into
hlt
out
repnz
sbb
test
rcr
enter
lret
cld
jmp
int3
xor
shl
sti
xor
ss
rol
out
fadds
out
in
mov
aad
out
cli
fsubr
std
cld
fsubr
roll
in
out
repnz
in
xor
lock
cli
fucomip
cld
rcr
cld
sti
shl
test
in
fcmove
mov
jmp
fisttpll
fnclex
xor
sti
in
aaa
enter
cmp
sti
cmc
xchg
test
mov
sti
int3
test
iret
into
sti
aam
cmp
cmp
mov
test
test
xchg
in
ljmp
int3
jmp
sbb
or
loopne
test
shr
fimull
sub
xor
fcomp
aam
in
cmp
adc
in
lock
mov
lret
cld
mov
cs
cmp
sti
repz
cmp
hlt
jecxz
out
repnz
loop
jecxz
into
cli
into
fists
out
out
ret
ljmp
div
vpsubb
repz
in
and
into
test
bnd
iret
cmp
stc
cld
jecxz
cld
sarb
fcmovbe
std
imul
enter
xchg
xchg
xor
loopne
aam
mov
std
sar
int3
hlt
in
fmulp
clc
ret
lea
sub
jecxz
icebp
fucomp
int
repz
test
sbb
lds
ret
adcl
cmp
xor
das
fstpt
rcr
fildl
aam
ret
jmp
jmp
fcomip
out
iret
cmc
jmp
icebp
stc
rcl
out
fidivrl
fisttpll
fcmove
jmp
repnz
loop
into
ret
leave
repz
out
int
cmp
out
in
loope
loopne
addl
ss
lret
cmp
aas
fmulp
cmp
fsubr
fcmovbe
shr
and
mov
lret
rcl
fsub
xor
testl
test
xlat
das
shl
cmp
iret
call
cmp
sti
fchs
jecxz
shl
loop
int
enter
iret
repnz
repz
repz
loop
lock
ds
clc
rolb
lret
stc
fsubr
mov
fstl
clc
shr
hlt
aas
icebp
cli
adc
rol
test
loope
in
ret
and
xchg
in
iret
out
out
fcomi
idivb
shll
aam
iret
iret
cmp
sti
std
sar
leave
fsub
loope
ljmp
in
hlt
xlat
in
int3
xor
out
rcl
rcr
in
mov
mov
in
sti
mov
xchg
xchg
fcomip
in
ret
in
push
jmp
ds
rolb
enter
enter
loope
rol
iret
call
cmp
fsubr
push
jecxz
jmp
sbb
enter
adc
leave
in
in
out
aam
jmp
out
fpatan
fnstcw
dec
fsubp
idiv
ror
into
lock
jmp
hlt
in
fcom
fst
repnz
loop
loope
call
mov
ret
jecxz
cs
clc
cmc
in
fcomi
cmp
ror
rcl
loop
stc
stc
loope
out
ljmp
filds
int3
in
sar
repnz
shr
into
ss
call
aam
aad
jmp
out
stc
shl
rcl
into
lret
xor
leave
jmp
in
xlat
lds
mov
in
fsubrp
loope
and
xor
mov
jmp
sarb
enter
fidivl
mov
sub
addb
jl
icebp
adc
cmp
test
filds
fimuls
shl
leave
sti
cmp
int3
stc
cmp
test
in
lock
clc
in
test
rcl
aad
out
jmp
cmp
icebp
out
sti
std
ret
ret
rolb
ret
test
leave
fmull
in
lret
enter
cli
jmp
cmp
test
not
out
hlt
in
jmp
fiadds
in
leave
repnz
xor
shl
ds
rcr
ror
repz
or
xchg
hlt
adc
lret
stc
cli
fcomip
std
loopne
idiv
shl
test
call
mov
icebp
jmp
fmul
test
aaa
fcmovb
cli
in
sti
jmp
ljmp
int3
stc
sti
aad
ss
in
aam
xor
into
faddp
ret
out
cld
movb
xchg
idiv
cmp
repnz
fsubr
into
hlt
std
lret
cmp
ffreep
aam
mul
call
nop
out
rcl
lret
loop
leave
out
ljmp
cmp
sar
testb
cli
icebp
in
leave
xor
repnz
xor
clc
cli
ds
sar
ss
ret
enter
lds
in
jecxz
cmp
fucomp
cmp
aaa
aad
loop
repnz
jmp
xchg
xchg
shl
xor
cli
xor
cmp
lret
in
add
xchg
clc
in
clc
int3
xchg
adcl
iret
aaa
jmp
sarb
lock
test
cmp
in
out
int3
repz
in
call
xor
cmp
enter
xor
fdivr
xchg
xlat
fdivr
cmp
into
in
xchg
hlt
hlt
bnd
out
out
jmp
xor
test
cmp
fcmovb
enter
out
ljmp
cmc
repnz
out
leave
jecxz
hlt
cld
xchg
cli
shl
cld
ret
fadds
rcll
xor
divl
xlat
sarl
int
loop
xlat
cmp
xchg
loop
repz
out
repnz
cld
cmp
xlat
ds
rol
out
mov
out
rol
repz
lret
out
fcmovu
lret
stc
in
int3
into
jecxz
jecxz
cld
fiaddl
sub
loopne
and
div
xor
ljmp
fdiv
rcl
lock
ds
jecxz
lret
fcmovu
cmc
adc
rcr
sti
shl
in
cmp
cmp
jecxz
mov
mul
lret
icebp
faddl
out
xor
idivl
cmp
cmc
shl
aad
fiaddl
les
out
fcomi
cmp
shl
shl
aas
aad
roll
fcmovne
mov
mov
xor
cmp
clc
out
lret
cmpb
idivl
orl
enter
call
into
ret
ss
addl
jecxz
in
ret
lds
cmp
std
std
in
ror
out
cmc
testb
fisttpll
ret
not
ret
out
aam
xor
cmp
enter
shl
xchg
cli
leave
jecxz
mov
lret
in
repz
sarl
lock
fst
cmc
cld
sbb
in
loope
call
jmp
shlb
rcr
leave
int3
out
out
aad
aad
mov
test
or
sar
cmp
hlt
sti
jmp
loope
mov
int3
jmp
out
out
repz
iret
icebp
ss
incb
out
cli
mov
std
addl
in
cmc
enter
repz
int3
ror
jecxz
mul
fyl2x
aam
fcmovnu
mov
jmp
xchg
std
xchg
jmp
not
lock
jecxz
cli
xchg
aam
out
test
cld
mov
addl
clc
sti
int
aaa
ds
cmp
in
into
cmp
lock
filds
call
sarb
cld
in
jmp
cmp
idivb
std
repnz
lea
cld
jmp
dec
sub
out
lret
loope
fstpt
leave
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
scas
mov
sub
jl
addb
jl
clc
hlt
in
jecxz
out
sti
mov
shl
add
fcomp
in
fsubrs
fdivrl
cmp
ds
xor
loopne
rcr
loop
lret
loope
mov
enter
jmp
out
xor
fxch
repz
rcr
shl
sbb
icebp
out
cli
int
in
ss
lret
cmp
aad
cli
cld
cmp
incl
cld
fcom
mov
test
ror
icebp
xor
sar
sti
rolb
ret
xchg
rcl
xchg
lret
loop
xchg
lret
test
ret
shl
fdiv
lret
sbb
cmpl
aad
fsub
ret
out
in
ljmp
icebp
not
in
fcmovu
clc
in
clc
repz
test
cmp
leave
loope
fadd
in
jecxz
xchg
iret
addb
leave
cmc
lock
ss
jmp
in
fdivp
fisttpl
out
fcmove
fcmovnbe
icebp
iret
shl
loop
xor
out
lock
ror
cmp
loop
addb
jecxz
out
decb
int3
not
hlt
aaa
int3
int
fadd
test
fiadds
fadds
mov
in
sti
xor
cmp
ret
div
cmc
shl
rol
jecxz
mov
test
roll
repz
icebp
cmp
cmp
or
lock
lock
aad
iret
enter
stc
in
stc
in
cmp
cld
clc
out
in
ds
int3
fucomi
in
mov
test
out
cmp
int3
in
cmc
aam
fstp
rcr
cld
sti
jecxz
in
in
loop
rol
in
int3
shr
aam
cmp
into
stc
into
rcl
imul
std
in
call
call
out
ljmp
xlat
fidivrs
leave
rcl
out
stc
in
clc
out
xchg
in
ret
out
cmp
out
fcos
xlat
call
cmc
fcmovbe
orb
enter
mov
ret
ffree
lret
out
cmp
roll
in
in
jmp
nop
icebp
call
cmc
lds
ljmp
cmp
test
cmp
ds
fsubr
jecxz
addb
loope
test
sti
jmp
cmp
aas
cli
repnz
mov
sub
lret
loope
xor
stc
xor
cmp
cli
call
jmp
fdivr
in
leave
mov
mov
test
cs
fcmovnbe
into
xor
fidivrs
rcr
sbb
rcl
loope
incb
lock
ffreep
in
xor
lret
fcomi
enter
ror
vpaddb
orb
fldln2
rcll
ljmp
std
cmp
cmp
cmc
addl
addb
sub
in
cmp
lret
shl
incl
loop
leave
out
fstl
lret
repz
int
loope
test
ret
test
sti
cld
jmp
mov
mov
rcl
stc
test
ror
ds
int
mov
test
enter
sub
icebp
cmp
adc
fiaddl
loopne
leave
iret
ljmp
in
shr
repnz
ss
xor
cmc
out
xlat
test
aas
mov
out
loop
dec
sti
ret
out
int
jecxz
cli
fcmovbe
ljmp
ret
out
icebp
icebp
lds
out
cli
shr
int3
mov
das
repnz
jmp
int
fsincos
faddl
rcl
ret
hlt
loopne
lret
out
xchg
in
imul
sub
shr
shr
hlt
out
jecxz
int3
clc
fxtract
call
rorb
cli
int3
xchg
shl
ljmp
cmp
cld
xor
repnz
sar
loopne
sti
loop
out
sar
loop
xor
sub
icebp
sar
ljmp
roll
clc
in
mov
call
jmp
call
aam
adc
fiaddl
in
les
nop
loope
leave
clc
aaa
out
cs
cmp
jecxz
shr
stc
out
xchg
rorb
fst
rorl
fidivl
vpsubusb
std
fnstsw
adc
xchg
hlt
repz
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
jl
addb
jl
int3
fsubrp
mov
xchg
xchg
bnd
xor
movb
shl
fcomip
cli
fucomip
int
shl
ror
out
repnz
loop
rcr
enter
jecxz
sar
aad
in
fcmovnbe
jecxz
in
ljmp
ljmp
cmp
jmp
cmp
leave
fimuls
fidivrs
in
iret
out
das
dec
int
cli
cmp
fadd
jmp
out
mov
in
repnz
int
fcomi
cmp
sar
loopne
xchg
ret
loopne
ljmp
loopne
cld
call
sarb
int3
out
fldl2e
into
test
neg
loop
cmp
enter
iret
xchg
int
enter
test
rol
cmp
shl
std
ljmp
in
hlt
inc
leave
icebp
call
shr
repz
out
aad
cmc
ret
mov
cld
aad
std
enter
call
xor
leave
out
std
xor
xlat
ds
xor
fdiv
rcl
loop
stc
loopne
mov
loop
in
das
aam
lret
iret
xlat
loopne
in
xlat
in
lock
mov
out
fisttps
ljmp
xor
ss
sbb
icebp
aam
push
movb
mov
in
neg
ss
cmp
int
icebp
fcmovb
loope
in
repnz
out
fadds
shl
xor
int
sti
cli
lock
cmp
testl
cld
cmc
out
repnz
loop
hlt
aad
shl
flds
aas
out
aad
mov
rorb
rol
aaa
hlt
ror
in
jecxz
cmp
rorl
and
rcl
not
shlb
cmc
out
fcmovne
int
fcom
lret
jmp
in
call
mov
rcl
jecxz
xlat
call
fcomp
test
fdiv
clc
ret
ret
jmp
repz
xchg
test
loopne
shr
in
cmc
stc
enter
sar
ds
div
out
out
iret
in
icebp
jmp
shr
aad
aaa
loope
in
sti
in
shl
xchg
sti
in
ljmp
in
cmpl
divb
fcom
int3
std
repnz
fcom
ret
inc
jmp
mov
mov
dec
fists
icebp
clc
clc
fmul
std
std
fcomip
loope,pt
fdiv
lock
std
ret
fiadds
call
out
fcmovnb
cmp
std
cld
loopne
int
call
hlt
xor
test
ds
std
in
sti
in
in
sub
iret
rcl
idivb
testl
rcr
out
mov
int3
in
jmp
into
cs
aaa
divb
cld
out
shl
iret
ds
rcl
test
leave
enter
xchg
loop
int3
aaa
out
shl
lock
cli
lock
fistpll
aad
lret
out
in
out
mov
adc
in
icebp
cli
into
xor
xor
and
xor
stc
loop
jmp
sti
nop
mov
call
sarb
shll
lret
in
int
xlat
stc
cmp
sti
aam
test
xchg
shl
in
cs
cmp
test
xchg
xor
iret
mov
rolb
rcl
sar
enter
cmp
std
lock
loope
rcl
ret
sbb
out
hlt
clc
icebp
sar
in
aaa
out
roll
out
call
out
orb
lret
cmc
out
int
leave
into
cmc
repz
xchg
xchg
in
call
sti
roll
xor
ret
ss
repnz
or
icebp
clc
call
idiv
mov
iret
xchg
xor
xlat
iret
lret
shl
fcom
loopne
ss
out
in
fadds
call
iret
jecxz
cmp
hlt
fnstenv
lret
mul
loop
test
mov
in
clc
jecxz
stc
iret
shl
mov
test
repnz
sub
xlat
leave
dec
jmp
sti
fiaddl
faddp
sbb
out
test
mov
xchg
int3
loop
xor
repnz
std
int
fnstcw
xlat
repnz
cmc
fimull
mov
jmp
into
les
rcr
fxch
enter
addr16
dec
lods
cmp
jl
addb
jl
jmp
int3
out
ljmp
cmp
fstp
loopne
icebp
roll
jmp
out
into
jmp
xor
hlt
fcmovnbe
loopne
out
ret
mov
fcmovnb
test
int3
clc
ror
call
aam
cmp
in
xor
aad
cmp
rcr
cli
push
mov
call
jmp
xorb
cmc
sub
out
xor
stc
ljmp
clc
mov
jmp
iret
int3
mov
jecxz
repz
jmp
xor
sarl
loope
iret
loope,pt
fxch
clc
fiaddl
loop
nop
in
xchg
into
xchg
aad
repnz
sub
std
cmp
repz
les
cmp
roll
aaa
clc
in
stc
leave
cmp
in
in
out
fdivp
fucom
fsubp
sti
mul
lret
xchg
rcl
in
repnz
sub
fcomi
sub
loop
aad
test
loope
jmp
xchg
in
bnd
out
rcr
cmp
int
loope
aam
ds
loopne
cld
mov
xchg
in
test
int3
jecxz
icebp
sub
cmp
fcom
lock
not
and
repz
test
ret
loope
leave
rcll
das
loopne
aaa
into
fucompp
leave
in
sti
xor
stc
repnz
mov
test
ftst
xchg
xchg
fdivrp
out
icebp
jmp
leave
aad
sarb
aam
loop
xor
mov
in
xchg
loop
jmp
push
out
aam
in
sti
aad
clc
loope
lret
int
iret
shr
subl
icebp
shll
sti
aam
loopne
fcmovnu
loop
icebp
mov
in
loope
xor
xlat
shr
hlt
test
icebp
or
hlt
xlat
mov
cld
and
xchg
in
in
in
xchg
icebp
rol
shl
mov
in
cmp
cmp
rcr
loopne
adc
std
cld
neg
faddl
sub
lret
clc
jmp
stc
rcl
stc
ret
or
sub
clc
in
lret
xchg
loope
lret
int3
sti
lret
sti
aam
icebp
in
ret
aam
fdivrp
orb
sub
std
aaa
enter
enter
repz
call
call
std
call
in
cmp
ror
repz
stc
ret
clc
rcr
in
mov
lea
xor
cmc
aam
out
in
testb
fdivrl
aam
ljmp
and
ror
into
xlat
leave
hlt
leave
cmc
out
sarb
sti
fsincos
not
cmc
hlt
out
mul
stc
cld
sub
rorb
xor
lret
aad
cli
cld
hlt
icebp
neg
jecxz
sti
jecxz
in
mul
clc
fcmove
in
addl
sub
icebp
cmp
out
hlt
iret
sti
sarl
loope
xlat
hlt
lret
mov
call
in
ror
jmp
xlat
out
shll
sarl
lret
sar
call
roll
mov
clc
int
dec
test
rcl
xor
repnz
not
cmp
loopne
ret
loope
cld
out
in
or
in
jmp
repz
in
adc
filds
in
cld
out
fsubrp
sub
jmp
enter
fdivr
repnz
test
out
enter
fsub
out
icebp
rorb
sub
cmp
call
shl
fildl
sti
icebp
call
loope
ret
repz
fcmovu
aas
aad
loop
rolb
sub
loopne
adcb
xor
repnz
shl
shr
loope
lret
test
loope
int3
not
das
repnz
rol
loop
cmp
cmc
loope
in
mov
out
mov
jmp
aaa
rcl
neg
cmp
ss
cld
into
xchg
and
enter
shr
lret
clc
icebp
shl
stc
icebp
out
out
lret
hlt
int3
fdivr
fiadds
out
jecxz
loopne
mov
jmp
icebp
aaa
aad
repnz
rcr
fadds
fisttpll
ror
in
in
ljmp
sti
rcl
fsin
inc
rcr
incb
cld
sti
loope
lret
mov
mov
xor
jmp
enter
vpsubusb
sub
xor
int
das
jl
addb
jl
xor
cmp
sar
int
icebp
repnz
cmp
not
aam
movb
into
jmp
test
out
fcmovu
ljmp
sarb
out
hlt
ljmp
in
sub
out
stc
idivb
rcr
loopne
std
loopne
test
jmp
int
int3
mov
das
mov
sti
sti
in
sarl
shl
sbb
mov
cld
call
cld
in
loope
aaa
jmp
test
cmp
rcl
fcomip
cmc
fyl2xp1
fadds
sub
in
in
hlt
repnz
fstp
int
rol
shll
test
leave
cmp
mov
out
mov
in
shl
ror
xor
leave
cmp
aas
jecxz
rolb
addl
hlt
xchg
xor
icebp
stc
div
int3
sar
in
cmp
fstp
stc
ror
stc
out
test
int3
xor
lock
xor
jmp
lock
jmp
lock
shl
test
jecxz
xchg
xchg
sti
into
cld
in
test
sub
ljmp
out
shr
cmp
fcomp
cmp
faddl
xchg
adcl
repz
shl
lock
fdivrl
mul
fdivrp
in
test
out
aad
jecxz
test
in
std
xchg
cmc
ret
in
cld
ljmp
out
ss
xbegin
shl
int3
cmc
flds
lret
shr
out
orb
neg
lret
in
xlat
out
in
sti
int
aad
ror
aad
std
out
call
jmp
stc
int
jecxz
out
test
call
fstp
fcomip
in
into
mov
mov
ss
lds
out
xor
enter
repz
shl
shl
ds
mov
xchg
aam
sar
hlt
shl
clc
xlat
fidivrs
aas
ret
aad
jmp
std
mov
loopne
mov
rcl
aam
ljmp
imul
cli
aad
sbb
incb
shl
fucomip
leave
xor
cmp
enter
fsubrp
fchs
in
std
cli
hlt
test
ljmp
icebp
in
aad
lret
ret
shl
mov
imul
ror
repz
nop
test
imul
sar
enter
ljmp
in
out
test
rcr
int
int
or
out
rol
enter
in
out
jmp
out
rol
stc
fcmovnbe
ljmp
xchg
jmp
in
cs
int3
aam
aas
cmc
cmp
aam
cmpl
icebp
rol
repz
ror
out
into
lret
rcl
lret
cmpl
aas
cmc
jmp
mov
mov
in
aam
in
xor
cmc
iret
lret
ds
int3
loopne
clc
xor
hlt
cmpb
fdivp
enter
adc
loop
clc
sarl
jmp
stc
incb
fucomip
in
lret
rorl
rol
cli
xlat
enter
std
clc
loopne
and
enter
lret
cli
lret
repnz
int3
lock
shll
into
xlat
xlat
cmp
clc
fcomi
cli
cli
loope
rolb
adc
lret
int
enter
repnz
cld
repz
cmp
test
fxch
in
xchg
ret
ret
hlt
leave
fcomi
into
loope
lock
cld
out
in
in
les
in
ror
call
into
out
ljmp
xchg
shr
in
mov
xchg
in
xchg
xor
clc
int
fcom
cld
cmp
loopne
ret
rcr
mov
or
into
in
mov
in
shr
into
sar
fnstsw
cmp
mov
int
out
lock
fdivr
lock
aas
cmp
rcl
xlat
roll
lret
fucom
leave
fmulp
mov
out
cs
ret
cmp
rcl
cmc
fmul
idivb
cli
out
aad
lret
fxch
jmp
imul
leave
mov
fld
leave
repz
ss
out
lock
sti
leave
jmp
ljmp
loope
sub
push
int
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
sub
mov
jl
add
hlt
out
cmp
cmp
xchg
xor
ret
cld
fstp
fstl
enter
lret
in
icebp
fcmovnu
repz
ss
fdiv
clc
ret
mov
xchg
loopne
adcl
jmp
rcl
cmp
loopne
rcr
test
mov
jecxz
loope
shl
xchg
xor
xlat
cld
in
rol
in
loop
cmp
xchg
mov
aaa
ljmp
fcomp
cmp
cmp
ret
cld
xchg
testl
lock
xor
aaa
loop
cmp
jmp
ror
hlt
repnz
test
hlt
xor
decl
shr
ret
cmp
repz
cld
rcr
shl
repnz
test
in
in
in
int
nop
fcmovbe
iret
sub
xor
ret
in
iret
fdivp
dec
ljmp
out
xlat
in
mov
lock
fstp
lea
cmp
lock
rcl
orb
test
and
aad
rcl
in
cmp
cmp
ds
cmp
loope
cmp
movl
xor
ret
repz
shl
cmp
xchg
repz
mov
mov
enter
or
rcl
jmp
jmp
ds
out
hlt
repnz
std
cld
and
sti
stc
out
fdiv
repnz
sar
out
out
cmp
out
hlt
cmp
aad
fcmovb
int3
mov
std
mov
mov
in
sub
into
iret
ss
repz
out
fucomp
in
cmp
addb
xor
in
ljmp
sti
adc
ret
clc
vpavgw
xchg
xchg
test
repz
cmp
aam
cmp
xlat
sbb
in
out
lret
fsubp
ror
mov
fst
cmp
cmp
xor
xbegin
cli
out
fsub
int
jmp
rol
cmp
in
incl
rcl
mov
aam
in
jmp
loopne
test
idiv
aad
in
test
fcmovne
les
loope
decb
xor
cli
jmp
int3
fcmovnu
loope
lock
ret
jecxz
ret
test
int
xchg
fimuls
in
repnz
out
cmc
not
ret
jecxz
rolb
fcmovnu
and
mov
into
cmp
int3
in
loope
into
lock
sub
ds
ljmp
aad
int3
stc
ret
aad
stc
icebp
idiv
addb
fst
sbb
mov
mov
std
ljmp
call
fdiv
cmp
rolb
in
mov
sti
fcoml
xor
iret
iret
out
aaa
ljmp
rol
sti
ds
vshufpd
idiv
lret
cmc
in
shl
out
into
lret
and
jecxz
filds
call
out
in
in
out
out
int
ror
cld
cmp
les
in
loop
out
rcl
xchg
shrl
jecxz
lret
lret
xbegin
shr
out
test
mul
loopne
std
jmp
call
xor
shll
ror
fstpt
lret
fadds
mov
mov
nop
xchg
shll
shl
lret
cmp
fdivl
faddl
out
out
repz
fucom
xchg
ret
ljmp
ljmp
icebp
fcmovnu
std
ffree
fcom
decb
shl
jmp
lret
sti
fxch
or
rcl
cmp
loope
vshufpd
fld
iret
sti
call
cs
repz
aas
cld
fcmove
cli
flds
aad
hlt
aam
faddp
loopne
lret
das
ljmp
int
fucomp
or
loop
loop
rorb
mov
jmp
xor
xor
jmp
int3
cmp
cld
fcmovnu
jmp
int
iret
aaa
xlat
lret
icebp
cs
clc
std
sar
in
rol
xor
mov
int
xlat
cmc
repz
into
jmp
stc
mov
mov
jmp
ret
int
xor
pop
mov
ss
addb
jl
cmp
cmp
mov
test
lret
out
addb
sub
sti
cmp
stc
fiadds
aad
out
out
lret
xchg
call
sar
cmc
repz
cmp
lock
jmp
out
sti
out
lret
shrl
xor
shr
cmc
ss
iret
cmp
fldl
jmp
mov
enter
add
loopne
loop
cld
repnz
repnz
fucom
and
xlat
fdivrp
in
ljmp
fsubr
xor
into
lret
leave
shl
cmp
ret
icebp
ret
push
loope
mul
adc
in
and
mov
aad
aad
rcl
jmp
cli
addl
in
in
test
shll
in
sti
in
in
out
loope
xor
add
repnz
ds
fcoms
cmc
xor
lret
in
rcr
cli
lock
iret
rolb
lds
cld
mov
xchg
xchg
loope
aad
in
repz
fcomi
clc
rcr
cmp
sar
test
test
clc
icebp
cld
test
mul
loopne,pn
rcr
cmp
repz
xor
xlat
out
sti
call
repz
aas
stc
loop
iret
sar
xlat
std
jmp
stc
cmp
fxam
loope
aam
leave
mov
int3
call
int3
xor
repnz
clc
loope
xor
int3
shl
ret
loopne
in
xchg
sub
loopne
sub
rcl
repnz
xlat
call
roll
fdivrp
int
out
jecxz
hlt
xchg
ret
aad
loop
lock
clc
clc
in
cld
xor
movb
jmp
icebp
xlat
shl
xlat
cld
int3
std
call
cmc
rorb
fimuls
mov
rol
cmp
lret
lret
xor
movb
ljmp
xor
jmp
fcmovbe
cmpb
xlat
loope
cmp
loope
leave
ret
into
mov
cli
shl
add
out
cs
jmp
fistpll
cli
cmc
std
fdivp
aam
fsub
in
stc
xchg
test
shl
loope
sub
lret
lret
ljmp
cmp
fildl
shr
xchg
les
jmp
mul
fstpt
cmp
cmpl
aaa
loop
rol
xlat
repnz
loop
xchg
shll
mul
std
call
ror
fcomip
test
cli
fcmovnb
fldl
out
aam
call
xor
not
lret
addl
and
xchg
ljmp
out
xor
iret
cmp
jmp
loop
loop
stc
fstp
clc
xchg
mov
mul
mov
call
call
repz
idivb
repz
xlat
clc
cld
stc
jmp
nop
fadds
loopne
cmp
bnd
hlt
sbb
cli
loop
in
cld
loopne
mov
mov
iret
xor
enter
fsubrp
jmp
stc
stc
sti
and
cmp
cli
filds
xchg
shrb
cmp
clc
repz
jecxz
into
lock
mov
loope
jmp
popl
hlt
sti
xor
hlt
aaa
out
repnz
frstpm(287
in
jmp
out
fucomp
mov
cmp
rcl
fadd
cmp
cld
fdivp
rorb
in
std
std
sbb
hlt
cmp
cmc
fidivs
out
ds
les
rcll
sarl
shl
xor
repz
icebp
sbb
repnz
rolb
in
testb
rcl
xor
stc
call
cmp
ret
cld
shl
lret
sar
cld
fistl
int
xor
xor
hlt
lock
fldl
incl
lock
fdivr
repz
xor
imul
xor
ds
in
aad
sar
cmc
jmp
fsub
xchg
lds
fadd
stc
repnz
lret
cmp
rol
out
in
ljmp
popl
clc
xor
cmp
aad
repnz
adc
into
into
ds
xor
lea
jmp
rcl
int3
iret
rol
shll
or
std
sarb
jl
test
loope
mov
fisttpll
repz
ljmp
cmc
xor
test
out
loopne
repz
mov
repnz
cmc
std
div
xor
rcl
cmc
fdivr
mov
test
call
into
out
cmp
std
shr
fadd
lock
ds
fcmovnu
sti
imul
lret
xchg
xchg
into
out
xlat
ljmp
call
rolb
shl
std
fmuls
fcmovne
jmp
xlat
xor
loop
cmp
cmp
ljmp
repz
in
flds
cld
xchg
mov
rol
ljmp
rcr
repnz
test
fstp
incb
fsubrp
out
loopne
out
icebp
lds
xor
xor
loopne
aas
out
stc
std
fmuls
test
repnz
aaa
or
idiv
out
test
test
test
ljmp
loop
stc
icebp
cli
cmp
aas
cmp
fcmovbe
sarb
fstpt
fsubp
jmp
addb
fcmovnbe
clc
xor
sti
into
fucomp
fildl
mov
xlat
in
out
cld
lret
nop
loopne
icebp
shrl
xor
lock
sar
aas
hlt
hlt
neg
rolb
cld
jmp
out
cld
int
cmc
out
ret
iret
int
aam
hlt
ljmp
cmp
fcmovb
jmp
ljmp
aaa
jecxz
xor
jmp
fucomi
ds
or
in
int
loope
xchg
jmp
ss
in
jmp
lret
in
int
faddl
stc
in
in
out
cli
out
fimuls
repnz
imul
fmulp
repnz
sarl
stc
icebp
clc
rcr
in
std
test
fadds
jmp
stc
shl
out
in
jmp
cmp
cmp
repnz
out
sub
lret
loope
in
loope
fdivr
repz
repz
fscale
call
ret
ds
add
cmp
lret
ret
test
sub
ss
ror
rcl
iret
lret
out
fsub
in
loopne
jmp
int
ljmp
rcl
in
in
hlt
neg
into
lock
stc
aas
repz
clc
cli
fimull
icebp
repnz
rol
aam
fcmovne
std
out
fld
fstp
cld
loope
in
test
int
jecxz
test
sarl
test
call
cmp
ffreep
lds
cli
clc
fmuls
aaa
in
out
xor
icebp
ljmp
stc
shl
test
sar
in
jmp
loop
out
out
aad
fsincos
vcvtdq2pd
enter
sti
out
test
fdiv
cmc
loope
hlt
lea
out
into
hlt
stc
loopne
sub
fucomi
roll
cmp
xchg
fimuls
jmp
out
xchg
sub
ror
std
lret
shl
shl
cmc
or
fcomi
cmp
cmp
mov
shll
enter
fcmovne
fdiv
cmp
iret
out
ret
mov
lds
test
jecxz
out
in
into
std
xor
div
fdiv
fcmovbe
loop
aad
mov
in
jecxz
ret
lret
in
fdivp
in
aad
lret
cld
int3
int
xlat
cld
ds
fadd
aam
in
mov
in
in
out
sub
iret
cmc
iret
stc
repnz
stc
ret
out
into
clc
jecxz
cmp
clc
sti
xchg
jmp
repnz
ss
repz
rcr
hlt
cmp
xlat
out
leave
fadds
xchg
test
fpatan
aad
aad
sarl
sti
cmp
loope
fiadds
in
int
nop
cmc
int3
loopne
lret
aam
repnz
repz
clc
xor
xlat
out
repz
fcmove
mov
out
icebp
in
repz
xor
cmp
fdiv
lret
ret
les
out
fcmove
iret
call
int3
jmp
loope
rcr
ret
ds
jmp
test
add
rolb
shr
idivl
cmp
out
cli
shl
loopne
rcl
out
mov
std
mov
cli
fsubr
ror
in
xchg
ret
lock
enter
adc
ret
clc
icebp
faddp
xlat
cli
test
xor
sub
mov
movzwl
cmp
jmp
lret
rcr
int
orb
lret
popf
push
sarl
jl
cli
cld
std
mov
stc
out
mov
fcmovnb
loop
fxch
in
shl
enter
and
add
in
shrb
ljmp
cmp
fsubr
xlat
ds
loop
aam
fisttpll
into
test
fucom
out
ljmp
sti
lds
test
lret
cli
hlt
idiv
int3
xchg
std
rolb
shrl
shlb
xorb
fcmovbe
icebp
rol
jmp
int
icebp
lret
rorb
icebp
repz
fcompp
int
flds
out
faddl
xchg
cmp
out
jmp
rcr
cmp
fiaddl
fdiv
jmp
repz
test
jmp
aaa
ljmp
clc
in
fcmovne
jmp
jecxz
in
aad
sarb
in
cmc
in
int3
jmp
aad
clc
loope
sub
faddp
out
cld
std
jmp
in
aaa
call
ss
in
cmp
not
lds
mov
jmp
ljmp
iret
cmp
in
shr
cmc
loop
jmp
nop
or
int
ror
lret
iret
hlt
leave
rol
shr
add
cld
out
mov
lret
sti
enter
ret
aaa
xor
loop
vshufps
in
in
int3
fdiv
in
fiaddl
imul
jecxz
test
test
mul
into
int3
cmp
cmp
fucom
repz
out
mov
jecxz
aam
call
repnz
in
repz
xor
cmp
iret
iret
int
repnz
loopne
lock
loopne
add
xchg
sti
cld
fdivp
jmp
cli
out
cmp
xor
shl
cld
std
cmp
repz
call
mov
out
int3
lock
xlat
int3
rcl
xor
repnz
test
ret
ljmp
lret
cmc
aaa
shl
call
cmp
aad
filds
mov
xchg
call
aad
int3
into
ss
std
fnstcw
cmp
rcl
loopne
mov
enter
in
test
lret
xor
lret
sarb
xlat
rol
test
in
decb
loopne
loop
lret
xor
fidivrl
lock
icebp
cld
aam
in
jmp
out
cli
loop
in
xlat
repnz
lret
cmp
cmp
fdivrl
fadd
fisttps
cld
xchg
out
into
sar
xabort
out
div
shr
in
jecxz
aas
ds
repz
idiv
icebp
sti
loope
out
test
cli
repz
sti
xor
aam
loopne
ret
leave
loop
xlat
in
cld
ljmp
icebp
aam
out
bnd
clc
into
rcr
rcl
stc
in
out
xlat
call
fimull
test
fucomi
xor
leave
int3
into
or
cmp
loope
mov
aad
cmp
int3
in
xlat
lret
stc
out
aas
aas
int3
sarl
std
aaa
aam
incl
fsub
cli
xchg
test
hlt
out
ret
xor
cs
jmp
roll
vpxor
sar
cli
jmp
shrb
in
cmc
cmp
cmp
loop
std
cmp
in
xlat
mov
nop
xor
stc
ljmp
into
fcmovne
fsub
jecxz
fdivr
loop
fucomi
incl
mov
cld
sub
shrb
enter
clc
fdivrp
sarb
int3
sti
jecxz
test
xchg
std
out
clc
in
fcomi
ljmp
in
lock
icebp
xlat
cmp
xchg
idiv
mov
in
fsubr
rcr
xchg
ss
aaa
sar
cmp
push
lret
sti
aas
loope
rol
out
mov
into
out
into
shl
iret
into
xor
call
sub
cli
mov
and
lret
jmp
out
repnz
out
lret
in
fcmovne
xor
repnz
clc
loope
loopne
jmp
in
mov
into
int3
in
ret
fcomp
sti
sti
testb
cli
mov
mov
loopne
mov
repnz
lock
in
rol
into
int
fcomip
loop
loope
cld
fucomp
out
in
xchg
clc
or
repz
adc
mov
cld
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
aam
les
into
leave
in
aaa
in
roll
sti
out
in
hlt
fmul
loope
xchg
mov
shr
in
fdivrl
sti
test
rol
neg
test
jmp
into
cmc
sub
ror
xor
out
loop
add
mov
xchg
jmp
hlt
shl
aaa
xor
repz
loopne
xor
loopne
jmp
mov
stc
jmp
mov
icebp
int
cmp
sti
sbb
cld
sti
xchg
cld
in
iret
vpmacsswd
rcl
cmp
test
iret
fadd
testl
test
repz
mov
xor
jmp
call
std
sti
sar
lret
fucom
cld
xchg
aad
or
loopne
aam
leave
fstp
int3
xor
into
ljmp
xlat
jmp
fdivr
enter
xchg
in
icebp
xor
loop
sar
in
rcl
jecxz
test
cmp
aam
jmp
lret
loope
test
loop
repnz
aam
out
into
cmp
jecxz
repz
out
in
out
mov
aam
std
cli
call
out
cmp
fistpll
imul
adc
in
lret
rcr
ss
out
cs
aad
repz
cmp
jmp
stc
int
fstl
idivb
aad
cld
into
hlt
int
cmp
add
add
cmp
leave
xlat
loop
movl
xor
lret
repnz
cmp
fcomi
testb
fldln2
mov
in
int
lds
out
in
out
not
enter
ffreep
push
xchg
loopne
enter
mov
jecxz
mov
fnstenv
lret
aad
xor
std
aas
jecxz
mov
std
xor
in
fucomp
std
orl
lock
shr
cmp
addl
mov
test
ljmp
lock
aam
call
shl
lds
cmp
out
xchg
mov
shlb
aad
in
cmc
aad
lret
ret
std
neg
add
cli
addb
xchg
xchg
mov
xlat
div
out
int3
fsubrp
iret
ds
in
ret
xchg
test
jecxz
repnz
out
sar
ret
cmp
lret
flds
fsub
addl
sti
out
out
icebp
loopne
in
aaa
lock
jecxz
fidivrl
sbb
mov
icebp
mov
std
shr
int
xor
cmp
cld
enter
loopne
into
shr
out
loopne
call
out
fcmovb
ljmp
cmp
in
aas
cmc
fadds
xchg
out
int
or
out
xor
shr
test
jmp
stc
dec
loopne
icebp
jmp
test
imul
in
out
nop
mov
aad
xor
cmp
cmp
jmp
fadds
fdiv
hlt
aad
inc
ljmp
ss
aam
fbstp
rcr
and
icebp
iret
div
cld
repnz
out
incb
xchg
out
in
les
ror
cmp
jmp
roll
loopne
imul
sub
aad
jmp
call
rcl
cmp
out
jecxz
fucomip
ret
test
fcomi
in
fcomip
icebp
lock
ds
in
ss
rcl
call
ret
test
shl
sbb
jecxz
enter
out
stc
ret
sub
sti
in
aaa
cmp
repz
push
aad
loope
loopne
and
out
into
xor
out
lock
aad
loope
dec
rcl
xchg
fmuls
stc
int
xchg
xchg
loopne
jecxz
ljmp
sti
in
cmp
out
std
aad
in
fisttpll
rcl
ret
cmp
shll
sti
out
xor
enter
cmp
and
leave
out
nop
fsubp
test
int3
out
fcom
jmp
std
cmp
repz
jecxz
loop
aas
out
leave
repz
test
loope
repz
cmp
clc
into
fcmovu
cmc
into
fiadds
mov
loop
clc
fisttpl
into
ret
ljmp
mov
jmp
jmp
rcl
rol
fstp
xchg
or
enter
add
cmp
cli
xor
sub
fcmovu
ljmp
cmp
lret
xor
sti
xor
cmp
ror
cmc
fldl
rcr
out
out
icebp
icebp
out
mov
test
lret
ret
cli
idiv
repz
ds
stc
loop
xor
jmp
mov
int3
mov
iret
xor
repnz
into
shl
loope
loope
out
loopne
shl
frstpm(287
mov
in
xlat
xor
out
fcmovb
aam
lock
iret
ret
test
fsubr
sti
fucomp
stc
out
jmp
xchg
call
icebp
lret
in
call
fcmovb
aaa
aas
icebp
fcmovnu
xchg
sti
fcmovnb
icebp
rcr
jmp
rol
shl
rcl
aam
cmp
repz
cmp
clc
aas
decb
sti
test
nop
out
out
out
cmp
stc
ror
shl
fldz
ds
cmp
clc
clc
jmp
incb
sub
into
out
out
rcr
fst
hlt
roll
xlat
test
iret
fsub
out
mov
out
int3
aam
stc
int3
xlat
aam
sarb
aam
xlat
aad
mov
int
iret
das
enter
neg
in
fmulp
ror
cmp
fdivr
xchg
xchg
leave
repz
out
out
xlat
enter
int
cmp
out
fdivr
lret
popl
leave
shl
sti
fnsave
into
sti
repnz
in
fiaddl
lock
ljmp
sar
ret
lret
in
sti
icebp
rol
sti
test
fadds
out
int
xor
das
xlat
leave
into
stc
xor
cmp
fcomp
jmp
filds
lret
aad
enter
ror
iret
cmp
out
cmc
out
cmp
testl
in
loop
mov
xor
shl
xor
cmc
icebp
fdivrs
hlt
cli
sti
test
rcl
enter
in
fsub
jmp
mov
shl
cmc
out
cmp
ljmp
lock
repz
in
enter
in
rorl
lret
fmul
out
fdiv
fcmove
icebp
fcmovnb
cli
neg
fcmovnu
fcom
lret
sar
fcomip
in
ss
out
cld
fxch
fdivr
clc
loope
in
aas
shl
xchg
ljmp
rcr
jmp
ljmp
fcmovnbe
call
ret
inc
or
aas
jmp
jecxz
shl
int
aaa
out
lret
xor
notrack
int3
jecxz
lock
loopne
iret
jmp
fmulp
repz
leave
repz
shr
ss
shr
out
fcomip
icebp
hlt
shl
into
hlt
leave
fdivr
addb
mov
lock
jmp
stc
hlt
fdivrl
cmc
cmp
fsub
and
enter
sar
jmp
xchg
aas
loop
shlb
cmp
fcmovu
xor
fcmovb
std
jecxz
leave
mov
fcmove
fsubr
enter
rol
cs
lret
cmc
hlt
enter
enter
loopne
cmp
adc
loopne
cld
test
subb
sub
into
sti
shll
repnz
cmp
xchg
fisttps
xchg
adc
ds
into
out
rcl
shr
addb
les
loop
icebp
xchg
lock
rcl
shl
shr
ret
in
shr
in
std
cld
in
sar
idiv
enter
mov
in
xchg
repz
in
aad
ljmp
in
ss
inc
aam
int
out
fcmove
xchg
jmp
idiv
jmp
lret
int3
repz
rcr
sar
fcomp
aam
mov
jmp
out
lret
fdiv
xor
sti
jmp
hlt
iret
repnz
fld
and
mov
rol
ds
ljmp
fcomp
cmp
cli
fcmove
ss
cli
adc
repz
lock
hlt
aam
out
in
fnstsw
cmp
out
cld
xlat
repnz
les
sti
loopne
out
sub
mov
in
stc
ret
cmp
cmc
icebp
ljmp
xlat
cld
loope
xchg
in
in
out
xor
loope
aad
shr
lock
cmp
hlt
lret
loope
ret
shl
loope
mov
jmp
xor
out
fcmove
int3
xor
lea
mov
jmp
mov
lret
fnstenv
mov
jp
iret
jl
addb
jl
ror
std
les
in
inc
icebp
cli
leave
orb
iret
in
fdivr
out
fdiv
fsubr
int
test
push
out
ret
int
lret
xchg
leave
out
in
repnz
fidivrl
div
ret
loope
fcmovb
sti
std
call
mov
out
shl
int3
cmp
not
jmp
cli
neg
out
iret
jecxz
fstp
ror
int
out
loopne
lock
loop
cmp
out
int3
hlt
jmp
lock
repz
rorb
test
sub
mov
in
in
aaa
sub
ret
fdivr
shl
fadd
fdivr
fcomip
repz
lret
in
addb
lock
cmp
sar
cmc
cmp
in
cmp
out
rcl
mov
hlt
jmp
mov
xor
shl
fcmovb
hlt
aad
sarl
shlb
in
cmp
loope
jecxz
enter
cs
jmp
sti
out
stc
fildl
out
jecxz
test
nop
out
lock
jecxz
out
int3
xor
leave
cli
hlt
idiv
fcomi
ror
sarb
cld
fdivrs
in
mov
in
test
repnz
cmp
cli
xlat
ljmp
aaa
idiv
loop
ret
shl
mov
dec
fimuls
xor
std
xor
out
fcmovne
sarl
aas
call
faddl
sbb
shl
int3
into
int3
shl
cmp
loope
aad
f2xm1
testb
mov
into
test
aad
clc
in
lock
cld
cli
shl
hlt
ret
out
in
mov
out
leave
jmp
ljmp
icebp
loopne
sar
fldl
mov
call
xor
into
aad
aas
out
ret
std
test
cmc
jmp
ljmp
xlat
sti
lock
in
div
aas
fcom
hlt
fsubp
test
fadd
stc
sub
loopne
faddp
icebp
leave
aaa
out
clc
lock
fsqrt
filds
ret
loop
cld
std
orl
ljmp
ror
fcmove
std
test
sar
leave
rorl
out
xchg
in
ffree
enter
lock
hlt
repnz
out
shr
into
bnd
aad
loopne
xchg
cld
cld
loope
mov
shl
shll
xor
loop
test
aam
sti
jecxz
call
leave
sub
ret
out
lret
hlt
call
lock
add
in
orl
xor
lret
aam
ret
rcr
in
enter
in
mov
mov
or
ss
into
repz
shl
xlat
aam
rcl
out
test
jecxz
test
fsub
fisttps
xor
into
in
sti
hlt
rcr
ret
aas
fnclex
addb
xlat
incb
in
xor
jmp
aam
cld
aas
cmp
cmp
loope
aad
std
mov
into
cld
fcomip
or
sti
out
int3
sar
int3
in
into
int3
aad
out
loope
fucom
lea
in
xor
xor
xor
hlt
xor
not
repnz
out
xchg
flds
mov
xchg
leave
out
fsubr
sarl
repz
in
cmp
fadd
rcl
ds
fmull
or
ror
idiv
aaa
stc
stc
int
ljmp
aad
fcmovu
dec
jmp
in
jmp
sti
xlat
cmp
iret
fmulp
in
jmp
cmp
aam
jecxz
out
orl
hlt
aam
in
cmp
shl
aas
into
cmp
and
loopne
in
aam
in
leave
lret
out
xchg
into
jecxz
aam
out
xor
out
lret
ds
cmp
filds
cmpl
orb
out
shl
iret
ljmp
rolb
nop
lret
xor
ljmp
fcmovne
in
std
in
aad
fisttpl
lock
cmp
div
out
out
std
int3
std
fsubr
cld
rcl
shl
orl
into
cli
in
sbb
leave
lret
repnz
xor
cmp
ds
hlt
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
jmp
aam
jmp
jecxz
xchg
in
lret
sub
stc
rcl
aad
loope,pt
aad
repnz
cli
lret
in
in
ljmp
frndint
sar
fsubp
fcom
in
out
test
out
rorl
shr
out
fidivl
out
into
loope
cld
lret
out
mov
out
fcomip
repnz
cmc
aad
stc
aam
int
fstp
shlb
loopne
call
addb
into
jmp
aaa
lret
lret
loope
shr
sar
fldl
jecxz
out
leave
call
leave
call
cmp
aaa
cmp
cmp
sti
fsubp
call
call
mov
hlt
stc
in
rcl
aas
fneni(8087
aas
sbb
xchg
xlat
hlt
fildl
enter
shl
in
cli
int
cmp
adc
sarb
iret
enter
out
loop
iret
fdivrs
sti
cmp
call
in
rcr
ljmp
call
ret
repz
fiadds
icebp
fsub
fdivrs
movb
lock
xor
repnz
push
rcr
iret
test
repnz
addb
jmp
sar
loopne
ror
xlat
repz
repz
sti
rol
std
clc
out
fninit
testb
in
fsubp
stc
aaa
aaa
leave
cmc
out
out
cli
fiadds
fdivp
ret
aad
iret
nop
loopne
xchg
int
repnz
rcr
lret
fcmove
aas
out
rcr
icebp
out
std
fmulp
clc
rol
std
mov
into
icebp
out
fcomp
loop
fdiv
cmpl
ds
incb
in
jmp
int3
icebp
std
xchg
rol
test
repz
cmp
fiadds
aam
adc
in
cli
mov
shl
ss
xor
jmp
shr
out
sti
shl
movl
loopne
nop
into
enter
int3
in
out
rcr
repnz
fldl
vpand
sti
ret
ror
ror
call
xor
lret
ljmp
ljmp
iret
orb
out
cmc
into
fcmove
int
lret
jecxz
out
clc
hlt
in
repnz
xchg
std
fcoms
hlt
out
into
jecxz
in
cmp
shl
in
fstp
call
out
in
rorl
in
int
xor
sti
cmp
cmc
in
into
std
fsubr
in
ret
icebp
repz
jmp
mov
cs
fcmovb
out
cld
int3
ror
jmp
loope
cmp
repz
jecxz
mov
sar
out
fldln2
stc
fidivl
clc
out
leave
fmul
fiadds
sar
std
addl
loop
repz
shr
aam
leave
call
into
ret
loop
out
stc
mov
loopne
mov
out
lret
mov
jecxz
sub
ret
jmp
into
jecxz
fcmovb
repz
cld
fisttpll
fimuls
out
cmp
ss
xor
cmc
cli
cmp
loope
cld
ret
loope
lock
jmp
ret
out
ss
jmp
icebp
testb
orb
jmp
sar
ror
pushl
icebp
test
flds
test
or
out
ljmp
clc
in
call
fdivrl
icebp
loope
out
cmp
flds
sar
xchg
iret
repnz
in
sar
xor
cmp
loop
shl
cli
loopne
les
out
xchg
xchg
rol
icebp
xor
fcmovu
idiv
fidivrl
rcr
cli
cld
repz
enter
xchg
loopne
xor
sti
xor
fsubr
icebp
int
in
fucom
cmc
stc
shl
in
int
flds
sub
cli
cmp
cmp
sub
rolb
repnz
std
out
mov
icebp
mov
xorb
int3
out
out
aad
out
sarb
xlat
sar
into
cmp
jmp
sbb
jmp
mov
stc
xlat
leave
jmp
stc
xor
div
cmc
sti
fld
ror
loope
leave
ljmp
push
xor
jmp
jmp
ret
lret
enter
dec
shrl
push
aas
hlt
jl
addb
jl
std
nop
out
xchg
xchg
int
out
ret
repz
enter
cmp
icebp
std
sar
loopne
clc
fsubr
addb
int
cmp
out
cmp
aam
in
cmp
cmc
ret
mov
decl
test
iret
repz
not
in
cmp
call
jecxz
fiaddl
fcomp
mov
loopne
cmc
mov
in
in
in
int
cmp
hlt
cld
shl
ds
xchg
ret
xlat
dec
fldl
in
xchg
mov
aam
cmc
cmp
fxch
imul
std
ret
repnz
incl
xchg
cmp
hlt
cmc
sarl
fsubr
out
leave
cmc
rolb
aaa
std
hlt
int
in
shl
in
into
fchs
cld
xchg
sub
lret
int3
mov
out
shl
repnz
in
sarb
cmp
not
loope
sbb
xlat
leave
and
fmuls
sub
cmc
xor
fadd
enter
in
std
repz
orb
loop
and
icebp
enter
idiv
shll
lock
iret
cmp
std
sar
add
filds
repz
in
fcmovnbe
sti
ror
aas
xor
aas
aad
cmp
xchg
hlt
out
out
jecxz
fcmovne
dec
test
cs
icebp
fmul
ss
fsub
sbb
hlt
std
call
int
lret
repz
jecxz
ret
jmp
sub
jecxz
repnz
xchg
loopne
in
test
xchg
shl
cs
xor
lock
shl
div
fucomi
jecxz
ljmp
mov
in
shl
shr
icebp
lock
loopne
aad
clc
ds
repz
repnz
in
iret
sbb
lea
out
aaa
aad
cmc
hlt
aam
fcomip
fcomp
fdivrp
fdivr
clc
mov
out
clc
into
mov
loopne
out
iret
fcmovnu
xor
sti
cmp
shr
loope
loopne
jecxz
clc
fst
aad
loope
loop
mov
ljmp
aad
rcl
xlat
jecxz
aad
repz
fldl2e
call
xchg
iret
jecxz
xor
ror
ljmp
fcmovbe
repnz
aad
clc
ljmp
loopne
loop
shlb
ljmp
icebp
test
cmp
clc
aam
faddp
out
enter
in
rcl
out
ret
clc
xor
int3
ds
aam
xchg
lock
mov
leave
std
movb
int3
repnz
cmp
fucom
loope
in
xchg
repnz
adc
in
leave
in
jecxz
jmp
in
fsub
lock
int3
lret
out
and
icebp
shl
ret
repnz
in
sti
xchg
xchg
mov
out
shl
xor
out
xlat
aad
fcmove
shl
cmp
fcmovnbe
fst
ljmp
jecxz
xchg
lret
jmp
shl
cmp
xlat
hlt
repnz
call
std
sti
in
addl
in
rcl
int
neg
flds
xlat
jecxz
enter
adc
leave
rol
out
xor
cmp
jmp
loop
in
out
ret
leave
loop
out
fmul
test
mov
shl
ss
cmp
icebp
fidivrl
sti
ds
std
enter
xlat
icebp
in
iret
out
loopne
shlb
aaa
fcom
cmp
sarb
and
repz
ljmp
in
mov
shr
xor
bnd
idiv
cld
aam
shl
ljmp
test
fucomp
aam
in
xor
ffree
xor
cmp
in
jmp
test
fldl
xor
lret
fdivr
cs
lret
cmp
rolb
aam
cld
fsts
call
sub
int3
aam
lock
repz
fdiv
out
fsubr
addl
jmp
push
aaa
jecxz
hlt
in
out
call
in
aas
fdivrs
jmp
xchg
ffreep
ret
mov
int3
fstp
enter
cmp
ds
cmp
jmp
in
in
out
ljmp
ss
xlat
into
loopne
out
fiaddl
test
out
fdivr
xchg
test
sahf
add
add
rcl
aad
lret
enter
es
jp
jl
addb
jl
mov
cmc
fdivs
cmp
sti
cmp
in
rorb
mov
repz
hlt
in
out
sarl
cmp
loopne
cli
cmc
or
cli
aam
int
icebp
shl
xchg
aam
int
cmp
xlat
cmp
lret
in
hlt
jmp
fucom
sti
jecxz
jmp
out
filds
loop
cld
icebp
lock
aad
ljmp
cmc
lret
cmpb
int3
movl
neg
neg
std
aad
sar
fndisi(8087
testl
aam
int
repnz
stc
cmp
aam
xlat
shl
lock
in
lret
in
call
hlt
in
xlat
cmp
sarb
aam
int3
cmc
xlat
std
aad
aad
aam
stc
test
xchg
test
cmp
icebp
std
enter
aad
sar
rcl
clc
repz
loope
and
xchg
aas
aad
cmp
ss
int3
jmp
cmc
fcomp
fcomp
rolb
adcl
leave
cmp
clc
cmp
mul
icebp
icebp
int3
stc
cmc
xlat
cmp
fsubr
in
shr
aam
int
aad
in
repnz
fucompp
fidivrl
cmp
test
sbb
mov
std
xchg
enter
ret
repnz
int
int3
shl
iret
test
cld
out
aad
not
loope
sar
fmul
sub
test
leave
out
cmp
fistpll
sarb
loop
in
cld
jmp
loope
jecxz
in
out
jmp
repnz
icebp
std
ss
cmp
in
and
std
aad
test
fsub
call
shl
in
shl
out
xor
stc
cld
aam
loope
xchg
rcl
or
fucomp
in
cld
std
into
mov
lret
out
rcl
iret
fmul
clc
cmp
cmp
sub
in
fcmovu
cld
xchg
movb
cmc
ss
leave
jmp
int
fcmovbe
std
in
fcmovnbe
cmp
fstp
cld
cli
fiadds
lret
into
test
xor
fptan
repz
repnz
lock
lock
adc
out
jmp
icebp
addl
sub
in
int3
cs
xlat
shr
loop
orl
int
lret
hlt
ds
fprem
repnz
cs
iret
cmp
lock
and
mov
mov
into
out
int
iret
jmp
hlt
xor
xor
int3
clc
int3
sar
hlt
stc
in
xchg
mov
loopne
out
ret
repz
ss
iret
loope
ds
cmp
in
aam
fiadds
into
xor
shr
out
aaa
out
in
divb
sbb
into
aam
repnz
fisttps
xchg
loopne
in
loop
clc
fnstcw
rcr
fsubr
fld
mov
std
enter
cli
leave
shl
xchg
sarb
aam
cmp
rcl
repnz
fdivs
add
out
ret
jmp
ret
call
lret
ret
out
sub
sar
int3
leave
rol
out
in
loope
sti
jmp
out
idiv
fadds
icebp
cmc
jecxz
enter
aas
clc
std
aas
in
roll
clc
mov
movb
loopne
iret
lock
aad
xor
sar
int3
test
cld
enter
ljmp
loopne
test
ljmp
loop
out
fdivp
aad
mov
sti
loopne
call
int
imul
cmp
sarl
enter
test
loopne
xchg
mov
ror
shl
out
hlt
cld
cmp
in
add
sti
stc
addb
in
clc
test
sar
lret
std
fcos
fadd
into
jecxz
icebp
shl
fmuls
int
in
int
shr
xor
stc
xor
clc
cmp
out
cli
int3
cli
stc
loop
sti
mov
loopne
out
out
xchg
in
into
out
stc
out
jmp
in
aad
cmpb
test
clc
std
orb
jmp
xchg
ret
xor
out
cmp
xor
lock
rcr
repz
cli
in
and
mov
out
fsubrl
aam
lret
aad
fcmovb
xlat
icebp
iret
fyl2xp1
neg
enter
in
add
lret
cmc
xor
das
lock
xor
add
jmp
rol
rcr
jbe
and
loope
jl
add
in
hlt
repz
shl
aas
std
xchg
shl
ret
in
cmp
jecxz
sub
in
aad
cli
aam
ds
fdivr
bnd
or
xchg
call
iret
movl
sar
mul
int
loopne
out
clc
orl
mov
fucomp
lret
lret
in
icebp
jmp
cmp
clc
inc
mov
fsin
mov
lret
sti
enter
loop
aam
lock
cmp
fidivl
out
aam
into
lock
xchg
stc
neg
in
loopne
xchg
out
rol
jmp
sti
fldl2t
fdivrs
lock
out
leave
ret
int3
test
mov
enter
jecxz
jmp
into
fmul
call
shr
leave
out
out
mov
out
call
in
jecxz
int
into
xor
into
jecxz
or
lret
std
fldln2
ror
into
ret
xor
cmp
out
icebp
in
cmp
cli
out
loop
aam
sub
fmull
rcl
out
aam
std
in
lret
shr
inc
sbb
add
jmp
repz
rol
lret
in
call
sar
sub
call
mov
loope
ljmp
aam
aad
cmp
fstpt
sarl
int3
rolb
loopne
int
enter
hlt
out
in
lret
lock
ss
clc
aam
fistpll
shr
lock
in
std
in
int3
in
filds
out
out
fdivrl
stc
stc
std
test
fcmovbe
leave
aam
in
decb
lock
ret
icebp
sti
aaa
cmp
cmp
cmp
iret
jmp
fmuls
or
sti
cmp
iret
ret
int
repnz
hlt
cld
into
stc
sub
iret
xchg
shl
shl
xchg
dec
mov
xor
in
xor
fsin
cmc
jmp
ret
shl
lock
fsub
testb
nop
mov
xor
cmp
fmul
fnstcw
inc
jmp
cmp
aas
cmp
loope
les
repnz
sar
in
iret
in
xlat
jmp
aad
rcr
stc
ret
mov
loop
mov
loopne
lret
xchg
xor
xlat
xlat
ss
fsubrp
in
out
rcl
out
ds
in
loope
lret
shl
xchg
mov
leave
aam
cmp
lret
cmp
cld
adc
sti
ffreep
inc
popl
call
out
xlat
cli
cs
repz
shl
rolb
xlat
xchg
jmp
in
xor
sub
fdiv
int3
into
jecxz
out
std
ret
out
vmovq
loop
repnz
hlt
aad
out
ret
call
cmp
int3
rcl
aas
xchg
in
movb
ror
xchg
test
imulb
ljmp
ror
rcr
call
loop
into
in
loope
xchg
jmp
jmp
testl
orb
clc
iret
iret
nop
in
sub
out
in
out
fldz
cmp
repnz
stc
in
fmulp
cmc
cmc
jmp
out
mov
lret
ss
jmp
cld
ljmp
vcmpps
testl
xor
lock
fstp
aam
in
out
lock
movl
out
xlat
aaa
ljmp
cmp
lock
flds
ds
xchg
xchg
test
int
cmp
aam
cli
std
rcr
ds
ret
test
cli
mov
sub
xor
fdivr
jmp
fcmovbe
lock
lock
leave
leave
faddl
mov
xor
test
sti
cmp
repnz
into
int3
cld
cmp
fcmovnu
in
in
jecxz
clc
and
xchg
lock
cmp
ljmp
fdivrl
fiaddl
int
out
mov
ficoml
call
ljmp
idiv
aad
hlt
in
and
xchg
ljmp
call
aam
stc
cmp
xlat
loope
std
orb
in
in
iret
ss
out
sarb
out
cmp
je
mov
mov
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
jno
outsb
push
in
jl
add
in
out
fcomip
fnop
out
xchg
fucom
les
lock
ret
in
cmp
aam
adc
cli
aas
icebp
aas
rol
mov
xchg
in
icebp
xor
loope
ror
aaa
in
aam
lret
jecxz
out
rol
xlat
mov
fsubrp
test
int
lock
jecxz
in
clc
cld
shr
cmp
sbb
ffreep
fucomip
in
xchg
mov
out
aam
not
sti
icebp
cmp
fucom
sub
sbb
loop
sti
in
rorb
call
cmp
aas
clc
repz
jecxz
in
fsub
ljmp
hlt
fcmovne
out
aam
repnz
into
loope
fdivrs
repnz
mov
orb
shl
int3
xor
fnsave
jecxz
in
test
cmp
cmp
mov
lret
xchg
cmc
shl
les
cld
iret
iret
call
roll
mul
fcmovbe
jecxz
xor
lock
lock
lret
ss
loope
fisttpll
fucomip
mov
xchg
leave
ret
mul
into
call
fcmovnb
rcr
mul
stc
cmp
loopne
lret
mov
test
xor
into
in
into
lret
fnstsw
aad
aad
aad
aas
stc
call
icebp
orb
clc
repz
out
out
div
hlt
cli
xlat
loope
rcl
mov
lret
fiaddl
rol
aaa
xor
cmp
lock
fdiv
rol
xlat
ffreep
ffree
sub
push
xchg
shlb
in
leave
cs
out
rcl
rcl
xor
repnz
adc
ror
iret
cld
repz
in
ss
lret
fistpll
int
lret
icebp
loopne
cmp
ret
movl
xchg
loop
sub
in
das
cmp
lret
repnz
fmul
call
clc
neg
rcl
fsub
mov
icebp
mov
sti
hlt
xor
ljmp
rcl
bnd
fxch
loop
fsubr
ret
fsubrp
shll
xor
cmp
xor
jmp
clc
cmpl
xchg
cli
idiv
std
adcb
stc
sti
cmp
fldl2e
cmp
sti
faddl
in
jecxz
addl
rclb
lds
rol
mul
xlat
test
sti
mov
out
out
jecxz
iret
rcr
loop
in
call
jmp
shl
shl
cmp
hlt
ret
lret
out
loop
rcll
jmp
lret
lret
xor
ret
fiaddl
lret
loopne
rorb
ret
shr
int
clc
lret
leave
cli
into
cmp
cmp
aad
jmp
roll
std
fdivrp
in
stc
lock
cmc
sub
out
jmp
fdivp
aam
jmp
xchg
sar
out
xbegin
in
into
repz
icebp
int3
ret
inc
or
loop
out
sub
loopne
ret
shl
test
lret
in
shl
ror
add
ret
div
xchg
adc
mov
sar
repz
ror
clc
xor
lock
ss
aas
xor
stc
out
enter
loopne
repnz
in
ljmp
enter
lock
mov
mov
orl
lret
das
xor
fucomp
sti
xabort
jecxz
fldl
rol
xlat
cli
cli
mov
xchg
hlt
out
sarl
leave
in
fadd
out
cmp
loope
aas
clc
testl
mov
cld
lock
jmp
repz
idiv
cmp
cmp
aas
loopne
aam
sub
ljmp
fcmove
cmp
fdivr
cmp
int
adc
loopne
cld
in
jecxz
fldl
in
cmc
leave
sub
repnz
idiv
into
cld
test
shl
fdivr
fmul
in
in
les
int
aad
out
ds
aas
loope
test
jecxz
mov
mov
fimull
divb
sti
sti
clc
ljmp
sti
ss
loop
loopne
xchg
or
hlt
lock
in
into
sti
fnclex
aad
mov
jmp
int
xlat
int3
int
cmc
or
notb
jns
mov
jl
addb
jl
out
ret
testb
in
add
xor
loopne
into
fucom
repnz
std
jecxz
fisttpll
aad
ret
lret
ds
testl
stc
call
repz
fcom
xor
aam
lret
repnz
loopne
or
aad
mov
addb
out
clc
fsincos
lock
cmp
fdivrl
lock
icebp
in
test
fucom
loop
mov
cld
rcl
int
xor
aam
repnz
lret
out
addl
clc
repnz
xchg
icebp
aas
fdivp
out
int3
fcomi
ljmp
ret
cmc
testl
xor
in
in
aaa
aam
cmp
fadd
addl
lret
addb
cmc
hlt
in
ror
int
stc
lock
in
jmp
loop
clc
fimuls
sti
mov
int3
repnz
fadd
cmp
fcompp
repnz
mov
call
hlt
ret
int
out
rorb
xor
in
int
ror
icebp
rcr
clc
aam
in
lret
neg
mov
fdivs
icebp
ret
cmp
sbb
fst
lock
xlat
sti
lret
fucomi
enter
sub
xor
cli
ss
stc
cmp
fst
aam
in
ret
cli
and
int
jmp
xchg
ret
aaa
in
lret
cmp
aad
cli
cmp
repnz
mov
stc
repnz
mov
std
ljmp
iret
aaa
iret
leave
cmp
cld
xlat
cmp
in
adc
loop
fincstp
out
mov
out
aaa
out
in
idiv
fdivr
ror
xor
in
cmp
rcl
shl
rcl
out
lret
movb
sarb
cmc
in
std
lock
int3
cli
icebp
ret
cld
stc
call
fdivr
xchg
fdivr
jecxz
loop
xor
fcom
fcmovbe
cmp
in
hlt
ret
cli
mov
lret
adc
jecxz
out
hlt
out
in
call
aas
fsubrp
std
adc
testb
jecxz
fisttpll
loop
lock
cmp
rolb
lret
cmp
in
add
xor
enter
ljmp
test
not
aad
jecxz
lea
shll
xor
aad
cmp
fdiv
int3
lock
cld
sti
ret
call
call
loope
lret
xor
fst
aas
cmp
sarb
test
fstpt
fiaddl
test
jmp
in
repz
fsubr
cmc
fcom
fcompp
fldl
stc
jmp
test
lret
mov
les
clc
lret
sti
rcr
clc
cmp
fnstsw
sti
cmp
out
fadd
and
fsubp
adc
jmp
cs
sarb
sti
call
fadd
in
cmp
aam
enter
icebp
leave
and
std
loop
rol
cli
rcr
aam
sti
lret
aad
aam
repz
and
lret
test
out
xchg
xlat
enter
dec
iret
stc
faddl
aad
sti
fcoml
in
fst
cmp
ror
shl
orb
mov
shr
adc
aaa
sub
in
sti
lret
xlat
lret
cmp
in
cmp
lret
mov
hlt
icebp
lret
fsub
jmp
xor
out
ret
cmc
sti
hlt
xlat
hlt
mov
ds
icebp
std
rorb
into
ror
xor
xlat
loopne
fadd
fadd
xchg
stc
cmp
call
in
divl
std
fdivr
ljmp
repz
lret
fsubr
loope
fsub
xor
repz
ljmp
jmp
fcomip
cmp
lea
fists
fmulp
fucomi
repz
repnz
call
in
lds
call
rolb
fnstcw
cmp
cmp
incb
mov
out
enter
int
int3
clc
aam
fcmovnb
fdivr
shl
in
rcr
ds
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
adc
out
jl
addb
jl
std
fsubr
lret
addb
out
int
leave
rol
jecxz
jecxz
and
cli
idiv
enter
rolb
shl
aam
out
int3
out
div
cld
test
clc
clc
aas
jmp
stc
cli
call
xchg
int
sub
jecxz
xor
clc
ds
stc
faddl
enter
shr
into
shl
out
xor
std
xor
int
incb
mov
out
mov
nop
mov
aad
int
jmp
shr
repnz
test
jmp
fadds
mov
xchg
fucomip
div
xor
lret
cld
enter
test
ds
leave
rolb
mov
mov
int
ljmp
fnstcw
hlt
jecxz
addb
mov
inc
mov
out
shl
mov
xor
ror
repz
into
aad
std
jmp
int
and
test
fninit
addb
aaa
jmp
out
cmp
repz
cli
lds
cli
mov
stc
iret
inc
xchg
fsub
shl
int
clc
fdivs
out
fcmove
into
in
fld
testl
jecxz
in
mov
rcl
lret
lret
loope
xlat
jecxz
fdivp
ret
mov
and
fucomp
int
not
shl
mul
cmp
sarl
ret
decb
cli
sti
loope
fucomi
in
lret
out
into
xor
cmp
dec
cld
std
std
ror
fdiv
add
repnz
cli
add
rcll
lret
out
enter
lret
ds
repnz
aad
out
test
div
cmp
shr
ljmp
adc
incb
mul
leave
xchg
ljmp
clc
sarl
into
cli
repz
sbb
xchg
in
mov
call
lret
enter
cmp
int3
fldl
cli
call
int3
into
rorb
stc
neg
out
fucomip
ss
fcom
in
xchg
or
mov
sub
cmc
sti
cmp
in
cmp
hlt
cmp
cli
xlat
repnz
loopne
xchg
fsub
ljmp
shl
jmp
cmp
hlt
cmp
in
cli
fsubrp
loopne
filds
in
cs
int3
cs
repz
fstpt
fcos
adc
lret
out
mov
cmp
aam
hlt
ror
ss
shl
icebp
shl
out
ret
test
addb
jmp
xor
cmp
flds
loopne
ljmp
fistl
in
out
fcomp
in
repnz
fdivp
cmp
loop
cli
not
loopne
vpsraw
shl
in
repz
ss
sar
int
aam
cmp
cmp
mov
xor
in
cld
repnz
test
jmp
std
int
int
sarl
fst
xlat
jecxz
loope
call
incl
sub
leave
stc
lock
std
call
cmp
fcmovu
shr
enter
loope
in
fldl
sti
shl
out
xor
fidivrs
sbb
sti
out
call
mov
repz
lret
mov
repnz
cld
fdivr
fcmovnu
cmp
rcl
jmp
out
call
mov
icebp
cmp
neg
rcl
cmp
mov
dec
mov
in
in
mov
xor
hlt
neg
ror
call
fsubr
repnz
aad
mov
int3
xor
call
fildl
ret
out
mov
fprem
fneni(8087
lea
out
sar
div
jmp
iret
rcl
cmp
test
addl
out
ljmp
sti
imul
dec
call
shl
fdivr
loopne
loop
test
repnz
rol
int3
jmp
aam
std
in
stc
sti
sti
cmp
mov
enter
xchg
loopne
fldl
xor
test
stc
in
cmp
addl
add
jmp
ror
int
fcmove
mov
push
stc
pop
daa
xchg
add
xchg
lret
out
lret
xor
into
std
clc
fstpt
ret
in
jecxz
shl
aam
clc
fcomp
mov
lret
into
ror
jecxz
stc
int3
lock
cli
cmp
div
sar
aam
rcl
fcmovnbe
leave
lret
xchg
in
test
out
jecxz
lds
out
neg
icebp
neg
lock
cld
jmp
ljmp
in
ret
lock
rcl
out
ss
std
ror
mov
std
sbb
iret
std
lock
fmulp
test
aam
shl
repnz
movb
ljmp
out
cmp
fcmovnbe
icebp
icebp
cld
aad
ret
adc
sti
mov
lret
call
mov
cs
xor
fsubr
cli
out
cmpb
fcmovbe
iret
sar
jmp
in
in
decl
call
aam
in
ljmp
test
cld
ret
jmp
xchg
int3
stc
shl
leave
sub
cld
cmp
sti
aad
shl
cmp
cld
test
in
loopne
mov
in
jmp
enter
cmc
jecxz
fistpll
cld
test
stc
ds
jmp
jmp
adc
test
in
aam
in
cmp
loope
stc
into
fcmovu
rcr
aam
in
jmp
out
xchg
faddp
xor
aam
in
ljmp
neg
loop
enter
xchg
test
rcl
ljmp
xor
fmul
sti
loope
decl
xchg
in
fisttpll
ret
lock
cmp
cmp
hlt
ds
std
shl
ljmp
rolb
xor
xlat
ss
aad
fdiv
aad
cli
icebp
jmp
mov
lret
loopne
mov
aad
aad
cli
clc
repnz
call
addl
iret
cli
repnz
xor
std
stc
aad
cli
ljmp
aam
fst
aam
stc
mov
jecxz
xor
stc
cmp
leave
div
iret
addb
fdivrp
int3
fmuls
sub
cmp
xor
into
shr
cli
in
hlt
sarb
std
repz
xor
fisttpll
shl
xlat
das
fcmovnb
cli
cmp
xlat
fcmovnu
into
cmp
stc
aam
repnz
stc
mov
in
icebp
cmp
rcr
int3
jmp
ffree
repnz
aas
ljmp
out
loop
fdivrp
into
sub
lret
repz
xor
xor
hlt
out
jmp
loop
add
in
ds
ror
jecxz
loopne
jmp
jmp
shll
hlt
aam
loope
stc
lock
int3
orb
lds
lret
repnz
lret
xor
jmp
int
f2xm1
test
jmp
fisttps
fiadds
loopne
cld
cmp
bnd
fcmovbe
mov
fisttpll
int3
incl
fsqrt
aad
cmp
loopne
lock
aas
sti
out
cld
out
clc
repz
mov
shr
fdivs
enter
icebp
shl
sarl
roll
std
jmp
loop
test
in
int
lret
xor
sarb
fsubr
rcl
xchg
lock
in
into
xor
fdivrs
ds
out
fdivrs
loope
repnz
loope
int
in
fmull
icebp
fnsave
lret
aad
repnz
stc
testl
mov
xchg
rcl
icebp
out
in
in
lret
imul
fdivr
loopne
sar
push
leave
out
in
in
sti
flds
in
lret
lock
aas
ljmp
loop
aad
movb
in
xor
sub
cmc
out
fucomip
fdivr
loope
fsubrp
mov
sti
out
in
sub
int3
jmp
iret
xor
cmp
cli
icebp
divb
icebp
clc
testb
fcomp
mov
adcb
cmp
clc
sti
jmp
cmp
div
clc
rcl
sub
stc
loopne
mov
ret
lret
xor
xor
cmp
aaa
fsubr
into
sti
std
incb
cmp
ljmp
shl
cmp
je
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
aas
xor
push
idivb
add
xor
iret
in
xor
rcl
out
ret
xchg
sti
fcmovb
test
xor
icebp
hlt
enter
cmp
icebp
fxch
std
in
in
fsubr
orl
dec
lock
enter
in
lret
ds
ss
lock
out
ret
ret
jecxz
lret
shl
mov
int3
rol
out
ss
cmp
cmp
fdiv
cmp
lock
xlat
jmp
test
test
nop
in
out
lret
aam
into
int
int
leave
cmp
cmp
lock
into
jmp
in
jmp
iret
stc
and
int3
fbstp
int
int
ret
enter
roll
sti
in
nop
int
loop
shll
xor
jmp
out
div
int3
xor
xchg
fcmovb
xchg
out
out
xchg
xchg
hlt
into
fcmovnu
xlat
ljmp
jecxz
shl
rcl
test
jmp
mov
int
xor
cmc
cmp
fstp
aad
clc
rcr
jecxz
rol
leave
out
call
xchg
ret
aam
xor
jmp
loope
jmp
loop
ret
enter
xchg
test
xor
loopne
xlat
ss
cmp
xlat
fcmovu
in
cmc
ffreep
ret
add
loop
dec
ljmp
lret
repnz
stc
fdiv
ret
fsub
out
int
out
mov
lret
loope
icebp
iret
out
call
fmulp
fcmovb
in
in
out
xlat
xchg
in
int3
out
test
loop
leave
repnz
cmp
int3
rolb
stc
jmp
sub
leave
loopne
xchg
mov
in
lock
xor
cmp
aas
std
out
int3
ret
call
loopne
fcmovnbe
fsubr
rcr
out
leave
fcmove
int3
into
cmp
xor
ret
lock
xlat
xchg
fadd
mov
ljmp
imul
into
in
into
imul
cmp
sar
fcom
aam
mov
jecxz
iret
xchg
ror
xchg
mov
loop
in
cmp
aaa
mov
in
rcr
repz
faddp
testb
shr
jmp
jecxz
into
shlb
lock
int3
cmp
out
out
adc
test
jmp
xchg
xchg
shl
hlt
jecxz
enter
cmp
jmp
cmp
xchg
in
in
repz
iret
rcl
idiv
cld
enter
xlat
lock
add
fcmovnu
repnz
addb
fst
shl
aaa
in
in
cmc
xor
aas
out
adc
testl
xchg
in
jmp
int3
in
aam
aaa
fnstcw
cmp
hlt
fldl
lret
into
filds
repz
xor
iret
aaa
cmp
cmc
xor
sar
ds
mov
aas
out
test
jmp
fstl
xlat
std
fcmovnu
int3
stc
cld
testb
sbb
add
xchg
iret
ds
aam
cmp
call
cmp
cmp
aas
cli
cmpl
xchg
call
cmc
call
ljmp
fxtract
aad
and
in
int3
cld
xchg
iret
cmp
stc
std
clc
bnd
clc
hlt
not
jmp
std
cmp
lret
xchg
out
enter
cmc
leave
in
push
hlt
xlat
repnz
shl
stc
hlt
mov
and
in
int3
int3
lret
lock
ret
cmp
into
cmp
not
stc
jmp
cld
lret
xchg
xchg
icebp
out
int
ljmp
ror
aad
fcmovu
ror
hlt
stc
out
int3
incb
jecxz
int
sarb
fstpt
sar
xor
fimull
in
jmp
xchg
jmp
jecxz
xor
xor
out
sar
xor
jmp
cmp
rcl
in
std
mov
mov
int
xchg
cmc
loope
ljmp
int
jmp
std
rolb
xchg
jecxz
adc
int
xchg
mov
ljmp
ret
fidivrl
ds
xchg
cld
mov
fucom
in
fdivp
lds
iret
out
xor
call
cmc
fsubr
lock
clc
lret
clc
fimuls
xchg
cmc
out
call
iret
out
mov
add
mov
jmp
leave
iret
xlat
rcr
flds
cwtl
pop
dec
ljmp
jl
add
test
fst
out
loopne
stc
cld
popl
lret
xchg
sub
cs
not
cli
leave
loopne
imul
lock
jmp
out
fildl
in
aad
out
into
out
cmp
cmc
aam
sar
cmc
cli
fadd
jmp
aas
ret
xchg
mov
imull
leave
idivb
cli
xor
repz
enter
in
test
mul
ffreep
lret
clc
clc
idiv
loopne
iret
xchg
incl
rol
leave
lret
out
sti
in
icebp
xchg
clc
hlt
ljmp
mov
mov
cmp
out
fidivrs
in
into
icebp
fsub
cli
call
mov
xchg
fiaddl
xor
jmp
cmp
icebp
std
xchg
enter
fsubrp
int3
iret
into
shl
les
repz
call
hlt
loope
not
loopne
ret
std
sti
in
clc
shl
out
cld
xor
xor
hlt
lret
out
in
shl
fsubr
fstp
jecxz
not
loopne
in
lret
sub
into
rcll
enter
in
aas
std
ret
hlt
les
in
lret
xchg
xchg
ds
repz
sar
ret
in
jmp
fstp
sbb
mov
out
lret
call
add
xchg
cli
test
mov
sti
orb
mul
xor
in
xor
int3
loopne
aad
out
sti
repnz
mov
flds
test
repnz
in
clc
icebp
jmp
decb
orl
stc
out
cmp
jmp
iret
fcmovbe
stc
and
sti
jecxz
fucomi
movl
jecxz
xor
std
faddp
out
jmp
lret
out
test
out
sub
ror
shl
div
out
cmp
shl
div
out
rcr
xchg
in
out
into
leave
in
adcb
fdiv
xor
repnz
std
shr
cmp
call
orb
in
hlt
out
into
imul
stc
cmp
aad
xlat
std
adc
loope
lret
cli
les
mov
ds
aam
xor
fcmove
cld
int
out
loop
aad
adc
mov
lret
xchg
shr
enter
in
out
rol
fdiv
cmc
repz
jecxz
leave
fsub
lret
out
cld
test
loope
out
out
out
int3
xlat
sar
cmp
repnz
aas
shr
fucom
loopne
fmull
jecxz
clc
jmp
into
ret
jmp
cmp
jmp
aaa
cmp
std
dec
fst
mov
mov
enter
lock
xor
hlt
stc
hlt
lret
lret
call
out
in
xlat
cmp
orb
cld
loope
in
xlat
sub
int
int
int3
testb
ret
fcmovne
test
lret
xchg
iret
xor
xor
clc
loop
icebp
flds
int3
flds
out
fsubr
in
ljmp
fdivrp
cmp
xchg
hlt
fadd
aad
loop
out
into
and
out
iret
lret
xor
into
cmp
cld
out
cmp
jmp
fimuls
mov
xor
stc
shrl
into
icebp
fsub
stc
hlt
lock
aad
loope
out
in
int3
in
in
sub
lret
fldl2e
repnz
int
rcl
sar
cld
ret
fucomp
mov
out
xchg
lret
shrb
cmc
xor
stc
cmp
cmp
fdivrp
out
mul
std
shl
stc
enter
sti
call
ret
mul
repz
repz
leave
out
shl
cli
fsubp
rolb
mov
adc
xor
icebp
repnz
sarb
ret
out
cmp
sti
out
in
in
dec
loop
fsub
loope
lds
fyl2xp1
leave
cmp
int
cmp
out
out
flds
xchg
into
mov
cli
lea
into
int3
enter
lock
xlat
out
clc
out
repnz
sbb
std
out
call
jmp
jmp
or
iret
in
rcl
in
cmp
fildl
mov
rol
enter
ss
fdivs
cmp
inc
loopne
sahf
add
add
leave
int
int
int
mov
aam
ficompl
jl
add
int3
roll
fcomi
in
fdivs
out
les
rcr
fdivp
ljmp
fdivr
inc
out
xchg
out
ljmp
int3
fcom
adc
test
aad
jecxz
loopne
xchg
loope
shl
mov
aad
in
cmp
lock
int
cmp
repnz
cmc
loopne
in
xor
inc
xchg
fadd
int
idiv
lret
cmp
loopne,pt
clc
fdivr
clc
fcmovnb
jmp
cmc
testl
ror
ret
out
out
jmp
cmp
icebp
fsub
enter
jmp
xchg
xor
cmc
xor
sti
aaa
cmp
call
xchg
ret
out
fimuls
fcomip
xor
lret
icebp
int
shl
dec
clc
sti
stc
ret
repnz
repz
loopne
out
cld
lret
int
in
loop
cmc
hlt
xor
loope
divl
aad
bnd
mov
xchg
call
shl
cld
loope
int
test
rcr
mov
in
ret
mov
leave
shr
jmp
xchg
test
lret
int3
clc
out
out
cmc
int3
rcl
out
shl
in
fdivr
fiadds
rolb
cmp
mov
out
lret
idiv
in
lock
fdiv
pushl
idivb
mul
hlt
fdivr
loope
fisttpll
add
shl
aad
cld
in
sub
cmp
fsubrp
iret
out
nop
cld
test
out
fmulp
lock
int3
fisubrl
icebp
stc
stc
icebp
repnz
jmp
cld
fcmovnb
adcl
in
jmp
clc
jmp
fcompp
out
loopne
cmp
out
out
filds
out
jmp
out
xor
cmp
xlat
loop
rol
aad
xchg
int3
fsub
cli
jecxz
int3
repnz
rcr
into
bnd
repz
test
fcomip
fcmove
fyl2xp1
test
iret
icebp
rcl
in
test
xor
fxch
repz
shl
out
ds
call
int3
flds
fmulp
clc
fisttpll
lock
xor
cmp
aam
int
aam
in
out
fcomip
fildl
or
icebp
ljmp
shr
sarl
iret
cmp
hlt
lret
rcl
aas
cmp
stc
enter
iret
sti
std
mov
ss
out
enter
ret
loopne
iret
sarl
in
incb
loope
int
divl
lock
call
out
sarl
sub
mov
leave
fmulp
clc
ljmp
xor
in
hlt
sar
jecxz
ftst
ds
test
sar
cs
out
in
fnsave
cld
ss
iret
jecxz
loopne
adc
aad
enter
in
sar
mov
jmp
out
out
loopne
int3
add
jmp
addb
in
into
in
out
ret
cmp
stc
iret
rcr
fcmovbe
hlt
out
rol
fmuls
call
and
out
iret
int3
hlt
clc
clc
and
aad
cmc
rcl
mov
fsubp
mov
loope
hlt
aad
cli
fnstcw
fchs
jecxz
ret
ret
fimull
int3
rorl
sti
cli
aam
in
repz
out
cli
lock
stc
not
cld
cld
loop
enter
cli
mov
xchg
loopne
loop
sub
jmp
cmp
cmp
xor
xlat
aas
fdivr
mov
call
lret
loopne
rcl
fsub
xor
cmc
icebp
aad
sarl
iret
fdivp
xchg
jecxz
clc
aad
xlat
fadds
lock
call
aaa
cmp
repnz
cmc
fcomip
jmp
leave
out
fmulp
mov
xchg
ret
shl
aad
ljmp
cmp
rcl
xchg
cli
std
rorl
mov
iret
ror
xor
jmp
aas
cld
shl
and
fcmovnbe
mov
in
subl
aaa
shl
icebp
fcomi
testb
iret
cld
fisttpll
incl
iret
lret
hlt
shl
out
cld
cld
std
cld
into
add
mov
jmp
aad
leave
lret
fstp
aad
mov
sbb
test
add
sub
jmp
icebp
call
xor
fsubr
cmp
stc
rcl
cmc
in
out
xlat
sub
mov
sar
ljmp
xor
cmc
shl
fdivr
ljmp
lea
xor
clc
icebp
rol
icebp
sarl
test
xor
cmp
leave
fisttps
fcoml
xor
rol
cli
cld
cmp
sarl
fst
repnz
cmp
rcl
aam
test
xchg
out
cs
aaa
std
std
cmp
xchg
cli
xlat
cmp
int3
mov
repz
out
ret
icebp
aad
std
out
out
jmp
inc
cmp
mov
aad
in
out
out
in
cld
in
lret
ds
fucomi
xor
aas
jmp
lret
hlt
adc
in
jmp
lret
xchg
subl
iret
lret
idivb
repz
mov
cld
shl
out
xchg
call
sti
cmc
iret
stc
sar
in
out
cmc
addb
lret
enter
into
out
std
cld
int3
cmp
repnz
ss
test
cli
add
in
mov
cld
call
fsubr
hlt
cmp
lock
fiadds
sti
repnz
sub
icebp
loop
cld
and
xlat
out
cmp
ror
in
mov
sti
mov
in
mov
loope
repz
rcl
in
sub
fsubr
std
stc
fcmovnbe
lret
loop
sbb
fsubrp
and
mov
enter
ror
into
ljmp
out
jmp
filds
in
decb
clc
ljmp
aam
mul
cmp
fdivr
ret
in
fcomip
stc
iret
cmp
out
ds
repnz
cmp
xlat
loope
mov
std
lret
repnz
jecxz
shl
fninit
sti
out
stc
idiv
aad
fucomip
rcl
xchg
hlt
test
flds
loope
out
div
loopne
ret
iret
xor
ljmp
repz
ret
xlat
mov
in
mov
call
aad
repnz
int
adc
clc
out
les
out
icebp
shl
lret
lret
xor
int
cld
shl
or
iret
les
std
sbb
cmp
iret
xchg
sub
fcomi
icebp
into
xor
aaa
loopne
int3
rcr
test
in
ds
mov
xchg
lret
icebp
lea
xor
out
cmp
ljmp
out
neg
stc
xlat
fimuls
in
xchg
int3
subl
sti
cmp
cld
xor
repz
int3
loop
cli
roll
cli
enter
mov
shl
loop
lock
xor
loop,pt
iret
shl
shl
ret
hlt
mov
lret
int3
fiaddl
repnz
int
out
in
int3
sarb
icebp
in
xlat
icebp
aas
mov
test
fmuls
xlat
cmp
cli
rol
repz
sarl
filds
out
loope
jmp
xlat
xchg
sti
out
xchg
test
xor
loop
sub
aaa
into
cmp
testb
hlt
frndint
out
test
in
shl
shr
lock
cld
std
repz
cmp
xchg
cli
ds
dec
jmp
decb
iret
les
shl
jecxz
rcr
ret
sti
sti
xchg
pop
ljmp
in
test
icebp
incl
xchg
in
cmc
in
aas
ljmp
sub
call
fsubr
lret
jmp
loope
std
faddp
roll
mov
addb
cmp
repnz
cmp
idiv
ljmp
fcomip
fcmovne
addl
aad
icebp
stc
int
out
in
mov
lret
loop
rcr
in
sti
test
mov
int
mov
ss
rol
cmp
ror
clc
fadds
shl
xchg
loopne
fcmovu
into
decb
leave
fdiv
fcmovne
out
sar
loope
cmp
in
idiv
test
fcom
cmc
loopne
out
jecxz
lret
pop
sub
iret
call
enter
out
shl
jmp
mov
mov
mov
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
mov
addb
jl
repz
jmp
loop
fcmovne
fcmovb
leave
fdivr
adc
shr
out
mov
mov
in
int
test
loop,pn
fsubr
lds
lret
fcmovnbe
xchg
movb
addb
shl
cs
in
xlat
rcl
sarb
rol
hlt
test
xchg
int3
rcl
in
into
in
leave
ljmp
inc
ds
ret
clc
cld
int
fmul
loope
jecxz
loope
aad
shl
fcomi
aaa
cmp
repz
out
fisttpl
fadds
loop
shll
int3
xlat
out
leave
cmp
shl
fdiv
fcmovu
cmp
sti
out
std
mov
xor
in
cmp
cmp
jecxz
std
loopne
cmp
leave
sbb
xchg
rcr
test
lret
hlt
ret
cs
shl
xor
xlat
sar
mov
fdivr
vpsubusb
xchg
hlt
sub
iret
xor
ljmp
orl
fisttps
into
shl
aaa
call
icebp
shl
ret
hlt
leave
ror
lret
mov
xchg
xabort
mov
jmp
bnd
hlt
in
test
hlt
xchg
in
shr
lret
cmc
lret
sti
sti
out
cmp
ds
cmp
in
ret
call
jmp
xchg
lret
aaa
fsubrs
into
sub
ror
lret
and
test
xchg
cld
mov
mov
ss
int3
in
icebp
fstpt
add
sar
out
orl
loopne
into
mov
out
shlb
aad
xlat
aad
rcl
repnz
in
stc
fcom
shl
or
int
repnz
lret
out
lret
aam
call
in
sar
mov
vphaddwq
xor
hlt
les
std
cmp
fcmovnb
repnz
add
mov
fdivr
fmulp
lret
repnz
int3
int3
out
aas
in
into
fdiv
in
fcmovnb
cli
rol
jecxz
out
ljmp
ret
loopne
lock
fucomp
out
in
call
cld
xchg
jmp
in
loop
xor
into
xor
cmp
fcomi
stc
loopne
leave
in
rorl
shr
loope
aaa
lock
and
jecxz
cld
jmp
fimull
xchg
xchg
out
in
xor
fcomi
cs
int3
sar
and
test
cli
fcomi
jmp
dec
repz
shr
fistpll
frndint
ret
sub
fstp
stc
test
xor
test
rol
call
aam
repz
into
xor
xchg
fsin
push
lret
xchg
mov
test
call
cmc
fucom
adc
roll
ffreep
ffree
mov
xchg
mov
test
cli
xor
enter
lret
hlt
iret
stc
rol
fadds
fucomip
test
shr
out
int
stc
fcmovne
xor
ljmp
aam
stc
hlt
mul
jmp
fcmovnb
mov
mov
mov
rcl
sti
call
repz
loop
out
repnz
std
int3
fmul
iret
jmp
int
lock
aad
lock
aas
incl
iret
fsub
fdivrp
aam
test
loope
call
and
mul
xor
lret
int3
cmp
ss
aad
xchg
in
mov
aam
ds
jmp
clc
repnz
cmp
int
aas
rcr
cmp
loope
mov
loopne
jmp
lock
not
hlt
cmp
loope
hlt
orb
out
loopne
xchg
xor
xbegin
aas
ret
ret
out
idivl
and
loop
xchg
repz
xlat
stc
ror
ds
cmp
loope
shl
shl
int3
loop
cs
shl
rcl
lret
jecxz
cmp
repnz
std
jmp
out
in
out
test
jmp
sub
in
xor
rcr
fsub
cmc
imul
cmp
aam
cmp
xor
xor
incb
add
jmp
xlat
aad
rcr
fstp
sub
mov
add
repz
cmp
not
rol
not
idiv
sti
xlat
fmuls
lret
xchg
mov
out
icebp
into
sti
fcomi
icebp
fnstenv
fdivr
test
fdiv
lret
fcomp
mov
fdivrp
out
sti
sarb
cmc
iret
ret
shl
repnz
ljmp
jmp
rcr
in
cld
fcmove
fdivrs
shr
test
jecxz
rcr
fucomip
int3
sti
in
jecxz
hlt
out
out
in
aad
aam
hlt
int3
loope,pt
cmp
sti
fcmovu
mov
mov
rol
ret
lret
cmp
lret
into
lock
ret
jmp
jmp
fcmovbe
int3
repz
ret
lret
cmp
into
dec
div
not
out
fisttpll
addl
shl
xlat
lock
lock
ds
loop
sti
fisttps
mov
leave
cmp
repnz
stc
loop
fcmovnu
fiadds
xchg
orb
jmp
xor
cmp
lock
fcmovnu
shl
call
xchg
fdivrp
into
out
shr
cmp
cmp
xchg
loop
mov
jmp
lea
lock
leave
icebp
in
in
into
jmp
in
cmp
call
icebp
fiaddl
iret
leave
int
in
call
sarl
loop
cli
jmp
fndisi(8087
mov
fucomip
shl
loope
in
in
jmp
out
sbb
sbb
fcom
loop
aam
jmp
call
repnz
in
rol
aaa
xlat
sti
shr
in
cmp
ljmp
xchg
out
hlt
clc
out
out
out
aas
lret
adc
xchg
jmp
shl
fimuls
xlat
leave
lret
lret
xor
cmp
ret
xchg
loope
int3
clc
std
in
int
enter
fucom
fld
aas
cmp
loop
loope
ret
in
call
lret
shll
icebp
clc
stc
clc
rcr
repnz
stc
aas
out
loope
addb
out
in
loope
mul
cmc
cmp
div
stc
cmp
cmp
stc
aam
stc
cmc
imul
cli
cld
out
lret
in
loop
loope
lock
out
lock
fpatan
ds
out
jmp
sti
fmul
mov
fildl
ret
repnz
cmpl
sar
mov
jmp
xchg
out
shr
into
out
repz
vpmaxsw
sti
ds
orl
lock
shl
shl
fucomi
enter
std
std
lret
and
mov
or
in
ljmp
loope
loope
xor
cld
ror
cmp
cmp
in
jecxz
clc
leave
and
test
xchg
aad
icebp
aad
xor
lret
xor
jmp
ret
in
loope
ljmp
sbb
aad
sub
in
xor
xor
cmp
lds
rolb
lea
lret
ret
xor
jmp
aas
repz
aad
fcomp
test
test
fcos
sti
in
xchg
fsubrp
aam
jmp
ss
aad
cmp
in
int3
shr
cli
adc
incb
roll
ljmp
ffreep
int3
in
xchg
xor
jmp
out
loope
ljmp
in
std
out
cmp
cmp
cmp
sub
mov
into
div
loopne
cmp
cmp
call
fdivrl
repz
sti
out
xchg
in
iret
xchg
orl
xor
fsubr
cmp
sti
loopne
icebp
into
std
clc
ds
call
in
int
test
xor
hlt
out
jmp
aas
clc
icebp
iret
rcr
cli
cld
iret
out
shlb
icebp
call
idiv
jmp
cmp
jecxz
lret
xchg
decb
lock
rol
sti
sar
out
cmp
icebp
xlat
cmp
into
repz
in
fsubrp
lret
mov
mov
cmp
leave
into
mov
jmp
jmp
ds
leave
fstp
ret
lds
ret
jl
add
clc
cmp
hlt
fdivr
fcmovnbe
fst
aad
jecxz
loopne
int3
out
nop
loop
jmp
hlt
fidivrs
iret
in
fidivs
aad
rcl
mov
hlt
stc
in
in
jecxz
xchg
hlt
ret
in
cmp
aaa
clc
cmp
sti
cmp
rolb
sar
mov
out
rcr
rcr
out
cmc
cmp
hlt
roll
hlt
movb
rorl
xor
in
ljmp
idiv
ret
div
in
mov
out
int
xchg
cmc
hlt
divl
out
lret
cmp
cld
repz
lret
ljmp
rorb
mov
xor
xor
icebp
xor
not
cmc
ffree
filds
out
loope
shl
xchg
aam
jmp
xlat
shl
std
sar
push
xchg
repnz
repnz
mov
out
rclb
repz
ss
fdivr
fcmove
jmp
rcl
aas
shl
repnz
ret
cli
xlat
xlat
mov
rorl
fcom
aaa
out
aaa
xlat
aam
repnz
icebp
fsubp
jecxz
in
sbb
orb
int3
xlat
xor
in
hlt
aas
lret
xchg
ret
rcr
xchg
fisttpll
test
call
xor
loope
repnz
cmp
addl
mov
test
aas
xor
xor
int3
aad
sarl
sarl
clc
test
jmp
xchg
mov
fdivrp
xor
das
int3
repz
sar
out
rcr
out
aam
mov
mov
jmp
lret
loopne
into
lret
xor
iret
clc
in
rolb
loopne
cmc
jecxz
cli
addl
mov
ret
loop
int
stc
out
xor
cmp
int
incb
sti
loopne
into
xchg
in
out
aam
repnz
cmp
lret
neg
cmp
fxam
iret
fcmovnb
cld
cmc
fcmovne
mov
mov
ljmp
out
xor
ss
cmp
rol
loopne
fdivrl
ret
int
std
cli
in
mov
loope
aaa
jmp
in
into
iret
clc
shr
rcr
sbb
aam
les
and
out
xor
enter
fidivrl
out
xlat
aas
fucom
iret
add
ret
test
and
into
sti
xchg
mov
inc
aaa
cmp
into
in
ss
cmp
in
sar
xchg
fmuls
enter
ret
in
jmp
out
shl
in
sti
lret
loopne
xor
xlat
decb
ljmp
xor
das
into
jmp
aam
pushl
out
into
fxam
imul
test
into
loope
adcb
ret
std
clc
iret
rcl
int
out
in
test
icebp
roll
xchg
out
sti
sti
test
xor
xor
jmp
cld
stc
not
addl
sbb
ljmp
fstp
clc
aas
std
clc
aad
in
idiv
mov
test
in
iret
int
in
int
aam
lds
neg
in
rcr
shl
test
repnz
sub
loope
nop
loop
nop
into
in
sar
in
icebp
aaa
shl
cmc
xor
lock
test
in
out
fisttps
aam
neg
jmp
xlat
fidivrl
fnop
aam
call
fsub
testb
call
nop
ret
ret
out
iret
xor
cmp
ds
shl
std
int3
fsubr
sar
in
loopne
leave
cmp
out
xor
enter
loope
neg
in
cmc
jmp
mov
test
aaa
call
cmp
aad
leave
stc
cli
lret
lret
addl
out
in
cmc
xor
cmp
fcomi
repz
div
fimuls
or
das
cmp
aam
clc
icebp
leave
out
sarl
ror
out
ret
sti
out
loope
test
xor
ljmp
cld
clc
addl
enter
hlt
in
fsub
in
jmp
icebp
loop
cli
inc
faddp
cmp
jecxz
xchg
ljmp
mov
cmp
xor
fsubr
bnd
jne
lods
std
add
add
jmp
ror
int3
fcmovne
inc
clc
adc
push
iret
adc
jl
add
repz
cld
addl
cmp
cld
repnz
shlb
fmul
iret
hlt
sarb
hlt
cld
fildl
in
cli
xchg
cli
test
aaa
in
fcmovnbe
into
int3
rcr
cmp
sti
bnd
cmp
neg
rol
std
and
out
shl
clc
clc
repz
lret
testl
test
jmp
rolb
loope
aam
cmp
lret
hlt
fcmovnu
icebp
ret
out
aam
loop
mov
fildl
icebp
aaa
in
xor
fcomip
aad
roll
ljmp
out
ret
int
lret
not
cmp
and
in
mov
and
int3
ljmp
xor
aad
int
aam
cmp
iret
sarb
rcl
out
in
div
cld
out
adcl
int3
xor
int
icebp
filds
fucomp
lret
orl
loop
repnz
rcl
clc
cmp
add
cmp
cld
roll
clc
lret
loopne
iret
loop
mov
int3
ljmp
addl
out
lret
repz
cld
mov
icebp
loope
cmc
aad
into
cmp
fcmove
shl
fadd
xchg
ret
out
out
in
out
mov
aaa
shrl
call
loope
mul
repnz
hlt
loop
jmp
ljmp
out
sarb
jmp
rcl
in
icebp
xor
lock
ss
decb
lea
mov
sub
clc
into
clc
rcl
test
icebp
ret
fimull
test
cld
sub
xor
imul
idivl
jmp
loopne
test
mov
in
addb
xor
xlat
jmp
cld
loope
into
sar
hlt
xchg
xchg
out
lret
loopne
ljmp
call
cmp
addb
sti
cmp
lret
and
test
in
test
ret
int3
in
int
fxch
out
ds
cmp
ljmp
into
int3
shl
faddp
enter
jmp
fidivs
rolb
aam
cld
neg
lea
in
xor
xor
xlat
cmp
aad
rolb
fucomi
fidivrs
fsts
sar
cmc
out
xor
out
cmp
stc
in
fdivrs
cld
fdivr
call
test
loop
hlt
cli
in
leave
iret
out
into
jecxz
shll
cmp
fstpt
aad
aaa
sbb
out
xchg
out
mov
cld
int
mov
repnz
xlat
cs
int3
cmp
in
ret
rolb
out
leave
cli
lret
std
lret
rol
lret
lock
int
neg
cmp
rcl
jmp
jmp
cli
xchg
lock
iret
xor
fcom
sar
aad
std
cmp
lret
fpatan
ss
ffree
les
in
fucomi
lret
shl
sub
out
cmp
aam
cmp
cmpb
cmc
fst
fsub
fmull
fcmovbe
xchg
xchg
ror
aam
fst
repz
lret
ljmp
leave
fcomp
loop
cld
out
loope
jecxz
out
int
xlat
lret
shl
stc
dec
lret
icebp
clc
ret
in
in
iret
out
cli
int
fnstsw
shll
out
jmp
lds
std
idiv
fsubr
or
rcr
ffree
bnd
in
orl
sub
das
in
iret
mul
aaa
fldpi
ds
aam
aam
jecxz
call
ljmp
in
lret
sti
out
fldz
int
lret
sarl
cmp
xchg
cli
fincstp
fsubr
jmp
out
loope
stc
ljmp
sar
jecxz
in
imul
or
in
loope
fsubr
mov
xor
leave
ret
fdiv
repnz
adc
loop
sbb
idiv
or
out
mov
lret
fcmovne
in
xor
loopne
in
rcl
push
fcomp
ljmp
repnz
ljmp
cld
call
out
sar
cmc
iret
lock
stc
idivl
jmp
mov
jmp
call
repz
sti
out
xor
loop
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
popl
jl
add
loopne
repnz
mov
leave
test
out
decb
xlat
aam
fmul
xlat
iret
div
vpminub
call
enter
int3
enter
loopne,pt
lret
ljmp
addl
jmp
mov
in
faddl
repz
jmp
out
shl
std
repz
cmc
clc
sub
xor
ret
out
jmp
repz
xor
shl
int3
lret
repnz
lret
shl
repnz
loopne
in
out
ljmp
jmp
xor
in
xor
cmp
jmp
aam
rcl
ds
faddl
and
xchg
icebp
repnz
int
repz
cmp
xor
dec
cmp
stc
shl
repnz
aad
cmc
idiv
loope
jmp
out
int3
aam
lret
divl
iret
in
shr
in
repz
into
enter
xchg
int
ret
shr
xlat
aaa
into
aad
rol
test
aas
stc
fcmovnb
jecxz
in
int
loop
in
fsubr
out
int
xor
sti
loopne
loopne
xor
rol
in
mov
leave
loopne
das
shr
cmc
jmp
clc
lret
jmp
sti
ret
out
jmp
in
mov
ret
call
into
in
jmp
cmp
fdiv
filds
cld
clc
lret
mov
rcl
in
xor
shr
cmp
sub
fmull
filds
fsubrp
cs
in
in
fbstp
shll
xchg
mov
ret
jmp
sub
int
xlat
enter
shl
filds
fisttps
int
repz
ss
xlat
lock
repz
repnz
fcmovb
fcomp
rorl
icebp
jmp
cli
nop
xchg
vpsubusb
icebp
repz
cmp
cmp
lock
ds
and
test
nop
aad
xor
ret
jmp
jmp
fistpll
loope
aad
in
cld
call
in
loopne
in
in
cmp
call
xlat
cmpb
fiadds
jmp
fsub
popl
rcl
clc
sar
fcmove
loope
aam
test
fcomi
jecxz
hlt
mov
test
fdiv
lock
cmp
int
iret
faddl
testb
in
fimuls
ret
stc
repnz
lock
shlb
shl
fst
loopne
in
xchg
loopne
orb
in
xor
clc
fdivrp
fdiv
rcl
shl
rcr
shl
xlat
hlt
movl
mov
icebp
fcmovnu
xor
fucom
lret
div
out
xchg
call
cs
lret
std
div
ds
into
cmp
sti
aas
mov
mov
lret
xchg
ret
jmp
sub
lret
repnz
les
test
cmp
les
les
in
sub
xor
xor
ss
leave
out
loope
out
cli
test
into
loopne
mov
in
fucom
mov
cs
call
clc
out
aas
out
icebp
lds
out
fmul
addb
lds
out
cld
fcom
call
repz
shl
mov
cld
jecxz
xchg
xlat
leave
shlb
testb
rcr
out
fildl
in
xchg
subl
aad
lret
shl
fidivrl
loop
hlt
xchg
out
loop
movl
out
fcmovnu
clc
aad
incb
jmp
mov
testb
fdivp
out
clc
ret
cmp
adc
sti
cmc
std
aad
xchg
sbb
mov
cld
xchg
call
xor
int3
rcl
aam
out
cli
fucomi
sbb
stc
stc
ret
iret
clc
out
fildl
in
shl
leave
in
call
sbb
aas
test
std
ret
mov
mov
leave
repz
lret
cmc
in
fucomp
in
xor
shl
call
into
jmp
addl
int
repz
aaa
into
rcr
icebp
sbb
ds
mov
out
je
mov
mov
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
mov
jl
addb
jl
test
int
incl
sub
sarb
out
cmp
cmp
call
in
out
xchg
rcll
in
iret
fst
rcl
shr
rcr
stc
loope
hlt
mul
fsubp
mov
in
leave
xlat
loop
fldln2
cmc
aam
cmp
repnz
xlat
jmp
test
fucomp
xchg
xchg
hlt
jmp
aas
out
out
aam
cmp
loope
ret
aas
ret
in
fcmovu
fsub
in
xor
xor
out
not
cmp
icebp
jecxz
into
fadds
jecxz
call
cld
popl
leave
les
cmc
lret
faddl
loop
fcmovb
test
loop
jmp
xchg
aam
ljmp
repnz
out
fld
fucom
test
loopne
jmp
in
mov
out
fcmove
int
sub
xor
out
ror
xlat
shl
out
sar
sti
xchg
cmp
xchg
out
jecxz
mov
fdivrs
iret
icebp
lock
div
fidivrl
loope
aam
call
leave
sti
adc
out
stc
icebp
int3
aaa
leave
fcomip
fmul
cmp
test
fdivrp
repz
lret
jmp
xor
xor
xlat
clc
ss
lock
fldl
leave
inc
fildl
das
repz
xor
fldln2
stc
fdivr
out
xlat
rolb
test
call
fsub
out
cld
xor
xor
sub
lret
hlt
in
ret
ret
stc
shr
call
loope
mov
aad
lret
in
cmp
sti
div
cmp
std
repz
rcl
jmp
std
mov
mov
lret
out
xor
leave
shl
lret
jecxz
xor
hlt
rcl
in
xchg
loope
fucomip
loop
xor
fcmovne
icebp
lret
fmul
in
loope
into
std
addb
mov
nop
cs
fdivrs
aam
cld
out
fdivr
and
cmp
test
ffree
fisttps
xchg
cs
xor
cld
cmc
loopne
out
shl
icebp
jmp
lret
leave
xchg
fsubp
out
xor
jmp
cmp
xor
neg
out
repnz
and
mov
sti
loope
mov
out
into
in
xor
iret
lret
into
enter
aas
stc
into
ds
mov
cmp
mov
icebp
fsubp
loopne
fmulp
jmp
in
or
rcr
cli
ret
xchg
testl
shr
leave
lret
cld
divl
repnz
stc
fsub
xchg
hlt
lds
jecxz
mov
int3
xlat
ret
movb
int3
cld
sub
clc
stc
mov
xchg
nop
ret
lret
ss
ror
int3
cld
cli
imul
ror
in
stc
into
iret
out
filds
enter
mov
mov
jmp
loop
cmp
fbstp
in
icebp
shl
cli
rcr
rorl
test
lds
ret
sti
xor
fmul
loope
shl
fdivr
rol
incb
mov
in
out
sar
shr
aam
repz
cmp
sti
in
stc
ret
aam
and
jmp
shl
decb
ret
cld
test
fld
call
ret
xchg
fcmovu
jmp
mov
xchg
lret
lea
jmp
int3
in
jmp
repnz
fdivr
stc
ret
aad
out
lret
mul
int
mov
mov
repz
cmp
hlt
cmp
out
fsubr
fdivr
out
fldl
loopne
jmp
call
ret
jmp
xor
fld
cli
rol
rcl
mov
in
xchg
loop
out
adcb
icebp
int
imul
jmp
sti
cld
iret
in
repz
aad
iret
icebp
mov
xchg
test
aam
cmp
aaa
icebp
in
icebp
sarb
sti
cmp
cmp
shl
fucomi
cld
xchg
in
in
into
in
in
cmc
enter
fcmovnbe
sar
int3
aad
rcr
icebp
shr
loopne
lret
lret
test
lret
in
loope
int
jecxz
ror
sti
cli
cmc
out
in
xor
loop
sarb
test
leave
jmp
mov
int
xchg
xor
ret
lock
out
cmp
stc
cmp
flds
test
fimull
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
or
les
out
out
xlat
cs
cmp
icebp
sbb
aad
xlat
test
lock
ret
lret
cmp
aaa
icebp
iret
ffree
fucom
cmp
lret
sbb
add
into
shll
rol
aas
cmp
fdiv
clc
loop
fcomip
loopne
sti
sar
jecxz
mov
shr
call
sar
repz
cmp
lret
in
loope
repz
leave
in
int
shr
repnz
repnz
hlt
aam
cmp
in
mov
xlat
fnclex
xchg
out
jmp
lock
icebp
std
cmp
mul
repz
sti
cld
lock
loopne
out
cmp
cli
into
int3
or
div
rcl
clc
call
nop
out
jmp
in
jmp
leave
jmp
lret
neg
xchg
clc
sti
cld
imul
nop
int3
shl
xchg
icebp
sarb
call
in
bnd
fdivr
clc
ljmp
sti
test
stc
icebp
enter
iret
std
not
in
fst
repz
fisttps
cli
jecxz
in
nop
in
out
rcr
leave
in
aad
leave
in
addb
fiaddl
mov
in
shl
aam
lret
leave
hlt
out
clc
in
shl
fcmovb
orl
fiadds
shr
ret
fdivl
fcmovnu
out
in
out
int
repnz
xlat
mov
cld
xlat
into
out
iret
enter
in
ss
in
cmp
fcomp
cli
lret
jecxz
shl
mov
clc
leave
in
leave
test
in
lret
lret
cs
sti
lock
cli
cmp
int
in
iret
cs
loop
ror
out
repnz
addl
repnz
neg
out
jmp
ret
fcmovnbe
into
ss
into
aaa
sti
loopne
test
addl
in
into
jmp
cmp
cmp
cld
sarl
out
sub
ret
jmp
repz
not
test
rcl
divl
loop
out
loop
jmp
in
mov
cld
addl
out
lock
aas
ljmp
loopne
leave
cmp
xchg
xchg
loope
vpmaxub
xor
jmp
cmp
aaa
fdivl
cmp
repz
in
lds
nop
jecxz
sarl
loope
aaa
ror
xor
fcomi
fcmovu
aad
test
hlt
fucomp
test
filds
lret
in
rcl
repz
idivb
shll
addb
mov
iret
into
aad
out
rol
xor
out
out
in
cmc
div
cmc
out
fcmovu
enter
testl
ret
leave
jmp
call
cmp
roll
pop
cld
clc
jecxz
cld
call
ret
fstp
cmp
idiv
out
xor
addl
in
mov
hlt
leave
xor
enter
in
aam
lret
fmulp
sbb
xlat
out
std
loopne
call
int3
loop
xchg
loopne
rcl
sub
stc
ds
in
fucomp
cmp
shr
jecxz
repz
aaa
into
call
fdiv
aam
cld
jmp
fcomip
mov
divl
rcr
jmp
repz
in
in
enter
mov
out
fildl
test
cmp
xor
out
aad
aad
orl
aaa
in
aaa
in
xlat
mul
and
fsubp
shl
clc
ffreep
testb
enter
cmc
int3
jecxz
shl
int3
cmp
jmp
lret
jecxz
neg
ror
mov
mov
out
fsubr
idiv
cmc
clc
into
das
fsub
cmc
lock
sti
fdivr
xchg
call
stc
xchg
xchg
lock
out
loop
idiv
hlt
stc
fadd
icebp
fstpt
cmp
addb
jmp
mov
mov
and
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
fcompl
flds
jl
in
mov
in
xchg
out
xor
lret
ss
xlat
jmp
call
icebp
clc
rcr
xlat
aad
in
cli
sub
mov
nop
jecxz
into
divl
cmp
stc
leave
loope
ljmp
xchg
lret
ret
nop
in
dec
mov
iret
test
hlt
xor
neg
fldpi
int3
fcmovbe
repnz
out
cmc
xchg
fcomi
mov
xchg
in
loopne
xor
in
cmp
dec
cmpl
cld
out
loopne
mov
dec
in
xchg
jecxz
lret
lret
movb
cmp
idiv
test
out
jecxz
mov
leave
ss
leave
sti
out
stc
lret
fcompp
cld
cmp
aam
mov
test
mov
fcom
rolb
out
loop
cmp
aaa
rcr
aam
rcr
cmc
neg
mov
orl
icebp
roll
fsubr
xlat
sarb
fcomp
jmp
in
loope
out
xchg
lds
ljmp
call
ljmp
cmp
out
loopne
jecxz
cld
ret
fmul
and
mov
call
xor
cmp
cmp
sbb
stc
lock
rcr
out
movb
in
in
aad
cmc
cmc
repz
int3
div
cld
shl
hlt
stc
orl
adcl
ss
cmp
out
aaa
in
fdiv
lock
testb
loopne
in
loopne
xchg
mov
stc
clc
jecxz
xor
cli
hlt
cmp
cmp
test
enter
loop
xchg
ror
test
aad
test
clc
icebp
cld
sub
ds
xchg
fimull
sbb
test
mov
repz
not
int3
fidivrs
hlt
cld
cmp
fdivrs
mov
mov
jmp
aad
xor
int3
in
aaa
lret
cmc
xlat
cmp
in
jecxz
out
inc
in
cld
addb
xor
jecxz,pt
in
cmp
lock
jmp
fucomi
decl
repnz
leave
xlat
out
out
out
lret
call
out
hlt
sar
cli
clc
leave
cli
decl
mov
lds
cs
imul
fcmovnb
jecxz
jmp
jmp
mov
mov
ret
ljmp
ror
into
out
rolb
xchg
shr
mov
ror
ret
in
xor
into
sti
clc
cmc
icebp
test
aam
mov
addb
xchg
sub
div
idivb
cmp
fnstsw
aad
hlt
sarl
std
call
fcmovnu
out
mov
xchg
shl
loope
jecxz
in
out
cmpl
icebp
fdivrl
lock
in
sti
mov
in
test
cs
ret
in
fcmovb
cmp
cmp
cmc
testb
xor
loopne
mov
xor
lret
ljmp
xchg
sti
filds
out
fsubrp
jecxz
imul
out
loope
lret
iret
std
iret
shl
fildl
out
mov
sub
into
int3
out
int
int
fnstenv
jecxz
ret
ljmp
cli
jmp
ret
repnz
fnop
lock
shl
in
fidivrl
mov
neg
call
xchg
in
cmc
out
aad
xor
repz
cmc
cmpb
icebp
aam
mov
test
cmp
loop
iret
out
lret
aad
stc
cmp
sti
in
movb
mov
mov
in
in
lock
aad
std
sti
loopne
sar
rol
sti
roll
cli
lret
loop
repz
cmc
lret
ret
cmp
cmp
cmp
cmp
faddp
aas
fstp
std
mov
loop
fisttpl
cs
jmp
in
int3
stc
in
testl
mov
xor
mov
aam
in
lret
aad
cld
repnz
xor
ds
not
out
fninit
cli
lret
loopne
iret
cmp
out
int
fcmovnu
fsubrp
aad
mov
subl
xor
jmp
ret
lret
ror
lret
sub
sahf
in
cs
pop
adc
jl
test
loop
fdivrp
loope
lret
call
sub
jmp
hlt
repnz
cmp
cli
repz
aad
mov
cmc
loope
in
rol
sti
loopne
mov
ljmp
cld
enter
in
fxch
aad
cli
std
adc
mov
adc
lret
repnz
call
mul
out
fcmovne
adc
ret
test
std
leave
int
fbstp
ss
fcmovbe
int3
into
cmp
repnz
cmp
test
lret
mov
mul
shll
stc
repnz
sti
out
sti
roll
in
lret
addl
ss
hlt
shll
xlat
sar
div
cmp
xlat
test
in
jmp
jmp
rol
loope
in
ljmp
neg
mul
icebp
add
fmulp
jecxz
sti
into
call
ret
not
fucomi
fcomip
fmul
aam
sub
loopne
cli
mov
cld
test
xlat
sar
ljmp
fstp
in
repnz
xchg
repnz
test
test
loopne
jmp
and
ret
xlat
cmp
xlat
xor
stc
in
push
shl
fcmovnb
ret
mov
jmp
fildll
rol
repz
cmp
neg
clc
test
into
aam
ret
std
fsincos
aam
fildl
out
not
jmp
stc
repz
hlt
in
fcmovb
shl
ret
ret
leave
lds
sub
mov
jecxz
ret
sub
ret
lret
call
aad
fdecstp
leave
hlt
xchg
sbb
mov
icebp
fucomip
in
xor
shl
fdivrl
aas
div
cmp
hlt
xchg
xchg
jmp
dec
jmp
xor
iret
aad
ret
out
icebp
xor
out
clc
out
xlat
test
in
in
cld
clc
test
ret
aad
jmp
int3
out
sti
icebp
std
sarb
cmp
out
loop
jmp
fildl
out
leave
int
lret
int
in
fstpt
vcvtpd2dqx
fsubrp
ffreep
xchg
std
nop
repnz
rol
xor
cmp
cli
call
out
loop
mov
in
in
and
out
xor
lret
cmp
aam
aaa
fstpt
div
addl
jmp
jecxz
call
lret
divb
icebp
not
fmulp
aas
aas
shr
hlt
adc
in
loopne
out
mov
xor
xor
cmp
ss
fidivrl
jmp
cld
test
ret
in
loope
ret
out
out
cmp
call
fdivr
rcl
xchg
call
mov
fsub
fsubrp
loopne
leave
sar
out
xlat
out
cmp
xor
in
jecxz
and
mov
cmp
decl
rcr
jmp
fdiv
rol
enter
fnstcw
in
shl
lock
fsubp
mov
call
push
loope
icebp
in
in
jmp
shl
cmp
out
aam
shl
loope
in
out
loop
xchg
icebp
aad
shr
in
aad
jmp
iret
cld
test
rcl
call
jmp
mov
ljmp
jmp
into
sti
icebp
cld
fst
fninit
jecxz
xlat
repnz
ret
call
lds
ret
ror
in
ror
into
sti
test
test
test
in
out
test
test
cmc
iret
aam
loop
into
cmp
rcr
sti
aad
cmc
loop
loopne
cmp
enter
fsubrp
lret
rol
stc
in
fcmovne
aas
dec
lret
jecxz
rcr
enter
fsubp
cli
fucomp
test
nop
out
ss
mul
int
out
in
ds
cli
in
aas
loopne
fsubrp
ret
in
int3
enter
rcl
into
xor
out
jmp
cmp
testb
testb
cld
mov
lret
repnz
neg
xor
cli
stc
sub
std
addl
mov
hlt
repnz
in
out
ljmp
cmc
fneni(8087
addl
ret
test
loopne
lret
mov
ljmp
cmp
idiv
sti
lret
aam
je
jmp
iret
aad
aad
aad
aad
mov
dec
nop
inc
mov
flds
jl
icebp
cli
xchg
sti
std
fiaddl
repnz
lock
vaddsubps
icebp
out
clc
cli
repz
hlt
ret
lret
cli
cmp
nop
iret
sbb
cmp
fucomip
ljmp
repnz
fadd
sbb
fsubr
orl
cmp
fmul
lret
lret
iret
hlt
fdivr
sar
rolb
loope
out
loope
test
cld
sub
cs
repz
sar
std
icebp
cli
sti
sar
xchg
cmp
leave
enter
int
xchg
fidivs
lock
loop
sti
ljmp
cli
iret
mov
sti
leave
in
into
in
loopne
int3
sti
enter
fiadds
xor
sti
loopne
fisttpl
aad
ret
icebp
repnz
rcl
icebp
std
lret
loopne
int3
cmc
rcr
std
ffree
mov
fsubrp
int3
leave
loopne
jmp
int
cmp
lock
jecxz
frstpm(287
mov
mov
repnz
mov
mov
aad
in
jecxz
aad
aam
rcr
int3
aas
aas
fcmovnbe
in
test
xchg
test
jecxz
mov
jecxz
out
shl
lret
cld
fucomp
lret
xlat
aam
fldl
in
jmp
ljmp
int3
fstpt
cmp
shl
mov
xlat
lret
adc
fucomp
fucomi
fisttpll
out
test
loope
loopne
ret
xchg
jmp
nop
lock
call
ss
cmp
lock
icebp
repz
ret
mul
xor
xchg
hlt
xchg
aas
jmp
int3
stc
cmp
icebp
stc
lock
out
loop
rol
leave
fiaddl
xchg
repz
lret
out
shl
sub
clc
idiv
xor
incb
repz
shl
in
out
lret
lret
std
jmp
addb
cld
cmc
enter
lret
vpslld
hlt
xor
into
aad
repnz
enter
test
neg
call
loopne
cli
rolb
jmp
cmp
int
pushl
jmp
cld
sbb
ret
xchg
and
lret
xchg
mov
clc
leave
in
lock
test
mov
rolb
aaa
in
out
clc
fcmovnb
aaa
int
jmp
loopne
fcomp
fldl
out
enter
xchg
loopne
xlat
sti
shr
fbstp
cmp
fdiv
fucom
aad
rcl
sub
in
cli
cli
test
xchg
jmp
aaa
in
repnz
aam
out
cmp
loop
icebp
test
fsubp
jecxz
xor
loopne
lret
lock
xor
cmp
fdivp
into
loop,pt
mov
loope
sbb
mov
lret
int
cmc
xor
sarl
cld
cmp
stc
lock
fsub
in
loop
in
mov
lock
clc
in
cmc
fcomi
jmp
ret
cmp
into
loope
nop
jmp
call
xor
fcmovu
leave
aaa
ljmp
cli
jmp
sti
sub
mov
das
lret
in
aad
icebp
enter
frndint
addb
mov
leave
clc
pop
enter
mov
cs
int
fdivr
ds
jecxz
rol
out
clc
xchg
stc
cli
in
vfrczpd
rorl
lret
ret
xlat
into
loope
sar
iret
fabs
shl
repz
lret
in
loop
shl
ret
clc
cld
sar
fnstsw
cmp
std
loopne
icebp
stc
sar
leave
fisttpll
in
std
in
in
rcl
stc
lret
cmp
aas
loope
in
mov
call
loopne
jecxz
leave
clc
lock
cld
cmp
jmp
in
cmp
mov
idiv
xchg
in
xchg
in
stc
icebp
clc
cmp
divb
in
loopne
cmp
shl
mov
xchg
jmp
and
lret
in
enter
aaa
cmp
not
lock
loop
fiaddl
clc
loop
test
int
in
test
loop
xor
repnz
xor
fcmovu
iret
mov
mov
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
mov
inc
mov
jl
add
sti
int3
in
in
aas
fdivrp
aam
loop
clc
fninit
jecxz
mov
ds
loop
fucom
cmc
icebp
rolb
ljmp
mov
into
fsubrp
out
lret
aad
enter
into
xor
adc
fdivrl
aad
clc
std
sti
fcmove
enter
rol
xor
shl
imul
ds
sar
flds
out
test
das
jmp
aad
xlat
fst
fcmovnu
and
fiadds
call
jmp
cmc
loope
leave
icebp
rcr
call
in
testb
and
jmp
clc
inc
sub
xlat
xor
in
out
cmp
cmp
neg
testb
std
loop
fdivr
jecxz
xchg
cmc
lret
xchg
xlat
aaa
shl
cmp
fcmovnbe
repz
repz
not
cmp
xchg
out
addl
icebp
jecxz
cmp
repnz
xlat
push
in
loop
fcomip
jmp
jecxz
out
jmp
sbb
rcl
repz
ret
ss
cmc
iret
inc
jmp
aad
jmp
out
xor
repnz
out
xlat
repz
fmul
xlat
jecxz
in
into
cld
lock
shr
fcomi
fiaddl
test
aaa
cmp
clc
jmp
xor
loopne
jecxz
ffree
xchg
filds
jmp
fidivl
cmc
cs
ret
adc
sti
orl
inc
int3
in
mov
out
rcr
hlt
ds
ffreep
cmp
in
ret
leave
jmp
in
cld
mov
in
jmp
in
sub
lret
in
cmp
clc
leave
fucomip
loop
faddp
addb
clc
xchg
in
sub
icebp
jmp
icebp
fdivr
fdivr
ds
in
filds
std
fmulp
out
in
jmp
iret
cmp
sbb
aas
fst
aam
neg
ret
sti
call
roll
cmc
fsub
call
cmp
fsubr
aad
jecxz
stc
neg
fiaddl
out
aam
ret
hlt
repz
cld
incl
enter
stc
in
in
mov
call
jmp
lret
cmp
cmp
fcmovnb
cli
stc
fld
enter
jmp
cli
clc
xor
clc
repnz
std
iret
add
in
out
lds
test
in
int3
lret
loop
hlt
aaa
shr
int3
int
loope
aam
out
fadds
std
in
jmp
stc
icebp
sti
xor
cld
cmpl
stc
repz
std
loope
call
out
xor
jecxz
cmp
cmp
int
int
sarb
repnz
clc
out
iret
rcll
ss
sti
icebp
ror
cmp
fsub
xlat
cmp
fdivr
fld
clc
int3
std
test
int
xchg
aam
aam
rcl
into
cmp
in
aad
std
jecxz
xchg
in
stc
fxch
sbb
rorb
divb
cmp
cmp
into
in
out
xlat
hlt
repnz
rcr
mov
enter
rcr
xchg
int3
loop
shr
in
sar
loopne
cmp
clc
ljmp
xchg
in
in
out
xor
xor
lret
aas
in
jecxz
aam
lret
testb
xchg
call
loop
neg
cld
int
icebp
add
mov
call
iret
lock
rcr
sti
stc
into
lock
in
ljmp
mov
ljmp
in
mov
enter
cmp
lret
rcl
not
ds
fmuls
xchg
iret
repnz
cli
cmp
in
aam
mov
or
shrl
loopne
lock
leave
fsubr
lret
rolb
shl
ret
in
fmul
incl
jmp
shr
aam
cli
cld
idivb
test
fcmove
loopne
xchg
test
fdivp
aad
jmp
mov
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
mov
flds
jl
shl
clc
jmp
fmul
xchg
sar
lret
out
mov
jecxz
and
jecxz
cmp
icebp
cli
shlb
cmc
cmp
in
hlt
fcmovnu
loop
loopne
clc
leave
call
xchg
iret
repz
out
aam
std
std
cmp
cmp
fninit
into
in
addl
loopne
test
into
xor
xor
lret
out
into
ss
xor
mov
leave
stc
decl
mul
lret
jmp
test
ret
aas
shl
ffree
in
stc
iret
cld
std
cmc
loope
xor
ss
leave
xor
cmp
cmp
fdivr
mov
cld
in
fidivrs
leave
out
out
loopne
shl
into
sar
out
fcmovnu
repz
xor
out
xchg
call
lret
iret
xchg
mov
loope
xor
cmp
out
out
xor
bnd
or
fisttps
xchg
mov
loop
in
stc
divl
out
aaa
cmp
std
sarl
out
rcl
ret
test
roll
loop
fsub
mov
xor
hlt
lret
aad
leave
enter
sbb
xchg
mov
loop
jecxz
imul
ret
cli
cmp
shl
xor
lret
cmc
xor
int
stc
xlat
loop
repnz
xor
lret
lock
mov
call
cmp
xlat
jecxz
xor
ret
testb
mov
out
test
enter
xor
shl
aam
cmp
ret
sarl
jmp
in
call
jecxz
fmul
ret
ljmp
ds
cmp
xchg
xchg
out
call
in
in
rcr
jmp
aad
sti
sti
aam
loop
ret
repnz
lea
repz
out
into
leave
cmp
cld
out
clc
ror
cmp
aam
ret
xchg
enter
incl
in
cmp
cmp
xlat
cmc
out
ret
stc
jmp
std
int
jmp
lock
in
cmc
jmp
in
cmp
sti
shr
out
incl
icebp
jmp
loop
loopne
int
loope
faddp
jmp
fucomp
xlat
ss
ret
rcr
test
out
in
cld
cli
loop
xchg
iret
sub
loop
ljmp
sti
cld
int
in
stc
ljmp
in
incl
bnd
aam
int
sar
clc
repnz
iret
fld
ret
out
test
loope
add
xlat
aad
iret
sarl
aad
cli
fxch
mul
loop
mul
neg
xlat
in
mov
jmp
xor
cmp
aad
jmp
fcmove
clc
not
loop
loope
aad
ret
loop
int3
loop
mov
in
shl
out
out
lret
cmp
cmc
cmc
fidivrl
jecxz
fsub
sti
orl
repnz
xor
in
clc
icebp
lret
sar
idiv
add
rol
shl
aad
int3
jmp
in
mov
fmulp
leave
rcl
repnz
xor
iret
xlat
iret
rol
test
xchg
out
jmp
test
clc
lock
fsubrs
int
incl
loop
in
out
ret
in
cmp
mov
out
inc
aaa
rcr
fcmovne
cmp
iret
sub
rcl
orl
imul
fisttpll
sub
stc
call
in
sar
cmc
flds
rol
fisttps
std
std
orb
lock
stc
repz
sub
hlt
not
enter
addb
out
int
enter
cmp
ljmp
aam
movb
jmp
int
loopne
rol
leave
xor
loop
aam
lret
in
ret
int
shl
rol
fmuls
enter
loopne
sub
cmc
out
call
fld
cld
in
jecxz
fmulp
fdivrp
loope
incb
cld
xorb
xor
in
out
shl
cli
cmp
and
repnz
mov
mov
mov
xlat
xor
xlat
cli
cmp
lret
lret
cmp
loop
rcr
xchg
jmp
hlt
test
ret
sub
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
ds
push
popf
cld
mov
jl
sub
xor
sti
lret
fcmovbe
roll
cmp
in
loope
inc
les
mov
repz
jecxz
das
cli
in
in
cli
cli
fadds
sar
dec
out
stc
out
decb
shr
ror
call
repz
fdivr
std
cld
iret
test
ret
fcomp
jmp
loop
in
lock
lret
lret
fcomi
faddl
icebp
sti
mov
mov
lret
fsubp
mov
cmp
out
fdivrs
rcr
aad
aad
fincstp
jmp
call
out
call
ret
cmp
aas
fsubrp
xlat
sar
xlat
ret
leave
loopne
mov
call
out
out
fnsetpm(287
shr
aad
int3
loopne
in
xor
in
clc
aad
cld
jecxz
leave
std
xchg
xchg
into
fisubrl
fcomip
ljmp
fdiv
ret
xchg
fldz
movl
cmp
aaa
sar
in
cmp
repnz
bnd
add
lret
loope
rcl
aam
std
out
rcl
into
cmp
aas
loopne
aam
aam
mov
in
mov
bnd
fdivl
std
out
loopne
ljmp
loopne
filds
iret
jmp
in
shl
fcmovbe
out
icebp
jecxz
aam
aam
shl
sub
call
nop
jmp
jecxz
sub
jecxz
xor
aas
cmp
cmp
fsub
cli
call
and
repz
lret
out
loope
into
cli
xor
icebp
in
cmc
loope
rcr
out
rcl
jmp
loope
in
xchg
std
in
call
out
jmp
clc
xor
cli
aam
cmp
cmc
std
rcr
out
loop
xchg
in
in
int
cmp
fcmovnu
sti
shr
stc
xor
idivl
stc
cli
in
nop
lock
sub
out
out
icebp
out
ds
fcmovu
cmp
xor
mov
int3
call
ret
xlat
ljmp
call
int
ror
testb
loopne
sti
lret
icebp
loopne
repnz
ror
out
fdivl
cmp
not
loope
repnz
shl
cld
fiadds
lock
out
xchg
shl
lock
not
clc
cld
cmc
loope
sarb
xlat
cld
iret
ret
jecxz
ret
mov
sti
mov
int3
icebp
aam
das
loopne
cmp
xor
hlt
cmp
ret
loope
loop
lret
clc
mov
in
vaddsubpd
in
cmp
int3
stc
xor
sti
cmp
fcmovnb
in
in
mov
dec
cs
out
int
in
out
xlat
aam
xlat
stc
repz
jecxz
fldl2t
decl
into
int3
in
xor
shl
shrb
cmp
aad
xor
faddl
loop
into
in
xchg
xchg
subl
hlt
mov
stc
in
xor
addl
out
int3
icebp
out
in
cmp
idivl
sar
aad
call
lock
mov
loope
jmp
lret
in
repnz
loopne
sub
into
in
das
aad
xor
fprem1
aad
repz
neg
std
out
in
add
fildl
fldcw
hlt
into
repnz
in
f2xm1
cli
cmp
cmp
in
out
lret
fcmovne
int3
in
nop
test
repz
call
iret
fdiv
xlat
repnz
test
faddl
repz
test
int
hlt
rcl
cmc
cli
stc
sbb
jecxz
jmp
mov
sub
mov
das
out
in
lock
cmp
repnz
fsubp
repz
fsub
out
aas
idiv
lock
out
jmp
stc
rcr
shll
cmp
loope
fcom
jmp
mul
fcomi
out
ljmp
lret
cmp
std
fstpt
ljmp
lds
leave
sbb
int
iret
ss
ljmp
sbb
jecxz
ret
enter
ffreep
inc
sub
in
loop
cmp
int3
cli
in
shr
int
lds
shl
jecxz
cmp
in
xor
add
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
ffree
mov
cmp
xor
xor
iret
xor
xor
fdiv
loope
cmp
leave
out
in
xchg
int
xchg
test
lock
fcmovu
out
in
fnstsw
fsubr
out
fucom
aad
loopne
faddl
mov
div
jmp
fbstp
sar
sarl
repnz
mov
sti
loopne
out
mov
xchg
shrb
les
icebp
aam
iret
aad
stc
cmc
ret
xor
cmc
and
cld
iret
clc
sar
rclb
ret
out
cmp
aam
ds
cmp
aas
movb
lret
out
call
shr
cmp
fxch
in
loopne
hlt
std
cmc
mov
aad
mov
lret
orb
jmp
lret
out
lret
cli
shl
roll
mov
cld
fldl
sub
jmp
out
in
lret
jmp
into
rcl
repnz
jmp
xchg
lea
cs
lock
clc
cmp
cld
fiadds
fdivrp
stc
int
adc
xchg
ror
xor
idivb
out
aam
rcr
sarb
cli
fmulp
in
fdivr
fstp
add
out
lock
xchg
cs
hlt
aad
leave
hlt
out
aad
shl
int
loop
into
cmp
xchg
cmp
in
xchg
clc
repz
divl
int3
icebp
lret
lret
out
incb
rol
cld
ret
mov
jmp
in
xor
int
in
aas
cmp
shl
xlat
loop
loop
fildl
out
in
ficoml
xor
enter
sbb
cmp
fcmovne
lea
test
iret
cmc
cmp
xor
enter
cmp
std
neg
in
loop
mov
ret
cmp
xor
dec
into
std
cmc
int3
rcl
in
xlat
mov
mov
mov
fiadds
jmp
aam
lret
aad
fsubr
rcr
stc
out
cmp
rol
mov
clc
fsubr
rorl
out
call
in
jmp
clc
bnd
xor
in
mov
div
xchg
sbb
aam
mul
xor
xor
ss
shl
fidivs
sti
repz
addb
aam
cmp
xor
repnz
loopne
rcr
aas
into
stc
out
int
out
enter
xchg
in
xor
int
in
das
leave
in
fcom
fdivrs
rolb
enter
xchg
xor
cmp
cmp
cmp
sub
in
jecxz
ret
jmp
into
lret
in
fmulp
xor
aam
ffreep
fdivrl
aas
jecxz
aad
lds
loope
std
addb
loop
sar
cs
ds
out
addl
in
xchg
iret
sub
rol
int
repz
cmp
into
lock
clc
jecxz
mov
mov
std
jmp
ljmp
xor
xlat
cld
xlat
aaa
testl
cld
xchg
int
lret
fisubrs
ret
repz
aad
sbb
in
xchg
cmp
in
in
jmp
rcl
clc
int
loope
addl
aam
enter
xchg
adc
in
iret
xor
xor
ret
in
leave
shl
rol
or
cli
cld
aas
cmc
fisttpll
lock
mov
out
aam
fcmovbe
xbegin
cmp
xchg
cmp
xchg
mov
xlat
in
xchg
cli
in
imull
das
jmp
out
lret
repz
cmp
ret
ret
aad
mul
mov
jmp
hlt
out
shr
repz
cmp
xor
sbb
aam
movl
int
xor
out
fcmovu
imul
clc
aaa
stc
xorl
sar
cld
fdivr
in
xchg
repz
call
xor
repz
fstp
iret
cmp
loopne
sti
testl
std
and
iret
mov
stc
lret
stc
sub
enter
out
cmp
fadd
repnz
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
pop
jecxz
xor
jl
add
loope
iret
orl
xor
loopne
stc
xor
loopne
cli
cmp
aas
out
clc
out
ret
fucomi
mul
test
mov
adcb
cmc
fcmovnbe
in
jmp
test
rcl
in
xchg
cld
lds
lock
lret
xor
into
xor
out
idiv
jecxz
out
shr
fldl
lea
mov
ret
das
iret
loop
aad
call
xor
shl
fdiv
sub
call
out
cmc
jecxz
icebp
loopne
xor
fsubrp
fmul
cmc
loopne
jecxz
stc
icebp
ret
ret
fcmovne
jmp
bnd
cmc
jmp
in
xor
stc
ret
out
sub
jmp
fiaddl
xchg
int3
out
cmp
xor
stc
std
out
cmp
in
xlat
shl
xchg
jecxz
cli
jecxz
fmull
call
sti
into
aas
out
hlt
out
add
mov
mov
xchg
mov
loopne
out
shll
sti
std
out
fcmovnbe
test
fdivr
ljmp
icebp
jecxz
jmp
shr
enter
iret
in
lret
adc
in
rcl
test
loope
xchg
fsub
out
imul
vpsrld
shl
loop
shl
repnz
or
mov
into
aad
hlt
cli
sti
xlat
enter
lret
ds
fsub
cmc
mov
test
cs
lock
sti
loope
sarl
rcr
out
sarb
out
lret
mov
out
loop
in
fucomi
leave
aam
fdiv
call
fxch
mov
icebp
addl
repz
fnstsw
cmp
jmp
mov
out
loop
loope
xchg
dec
fsubp
loopne
cmc
clc
fdivl
shr
cmp
int3
cmp
call
push
std
xchg
aam
aad
lock
iret
aaa
fcmovne
lock
sar
out
in
fsubr
int3
mov
ljmp
leave
lret
shr
cmp
loope
jmp
mov
clc
into
repnz
mov
call
out
in
std
lret
shl
ds
repz
xlat
in
xchg
and
and
rol
mul
test
jmp
xor
rcr
shl
fsubp
in
out
lret
mov
imul
sar
loop
fcmovu
cmc
cmp
ds
sar
jecxz
cmp
fmulp
fcmove
iret
mov
int3
ljmp
out
cmc
in
repz
not
xlat
repnz
and
in
mov
xchg
iret
ljmp
sar
out
cld
ror
fcmovnu
out
shl
xlat
addl
std
out
lret
lock
icebp
sti
in
repz
fdivs
stc
repnz
loop
rcl
ljmp
ljmp
hlt
shl
cmp
fdiv
in
leave
repz
aas
not
test
ret
and
orb
repz
leave
fdivrp
fcomi
icebp
shl
xlat
test
ljmp
mov
aam
ret
fcom
rol
flds
clc
loope
out
lret
or
lret
repz
ljmp
in
repnz
lds
addb
jmp
xchg
repnz
clc
out
xor
enter
cmp
mov
loop
and
fnsetpm(287
ljmp
cmp
jmp
rolb
fdecstp
ret
fcmovb
loop
cld
fcmove
xchg
loope
loop
xor
ror
lret
lock
sar
push
repnz
mov
mov
repnz
out
xor
call
shl
loopne
ffreep
loopne
iret
test
lret
cmp
call
cmp
sarl
ret
fimuls
ljmp
in
enter
enter
loope
idiv
ret
flds
decb
test
aad
out
iret
rcl
hlt
faddl
mov
jmp
lret
aam
fstp
fisubrl
push
int3
loope
in
flds
jl
mov
std
jmp
fnstsw
fsub
fiadds
into
xor
fcmovnu
int3
fprem1
out
fstp
out
not
in
out
cmc
fidivrs
lret
mov
clc
repnz
hlt
test
repz
call
xor
aad
xlat
cmp
rcl
in
call
mov
cmc
in
ss
xor
das
fst
fcomip
sbb
out
fincstp
test
out
xchg
jecxz
mul
fdivr
mov
jecxz
shr
shl
fcomi
int
fucomp
lret
rcr
xlat
out
loop
int
orl
fdiv
neg
test
shr
rcl
in
sti
repz
out
fisttpl
loope
shrb
imulb
fldl
loope
mov
cli
test
xlat
int3
into
mov
mov
loopne
jmp
sti
cmp
fdivl
loope
in
fucom
lret
mov
fiaddl
in
jmp
out
hlt
hlt
roll
xchg
fdivr
rorb
xchg
lea
fnstenv
rol
fdiv
into
icebp
rolb
jmp
jecxz
loopne
fcmovne
icebp
orl
fmul
leave
shl
call
shl
lock
mul
shl
lret
nop
jecxz
xchg
xor
cmp
loope
hlt
xchg
sti
loop
clc
nop
sti
in
fcomip
jmp
aad
repz
jecxz
aam
rorb
orl
not
jecxz
ret
in
repz
cmp
cli
cld
xor
fcmovu
in
ljmp
into
rol
into
aas
cmp
out
fidivrl
std
shl
jecxz
or
fcmovu
and
xchg
hlt
fdiv
repnz
in
int
out
call
in
sti
fmull
call
out
into
jecxz
out
out
in
fnstenv
rcr
cli
or
fdivp
sub
sub
jmp
cld
jmp
into
cli
aam
fmul
std
cli
orl
jmp
test
loopne
out
ss
cmp
hlt
loope
test
out
mov
hlt
fcomip
xchg
shl
xor
neg
into
fcmovnbe
roll
fcmovbe
out
call
into
test
loope
jmp
int3
aad
in
sbb
incl
or
in
sti
fldl
int
shll
shl
xlat
aam
cmp
iret
fidivrl
xlat
clc
leave
les
lret
fldl2t
out
out
lret
ret
out
hlt
xor
xor
imul
cli
cmp
in
out
cmp
in
jecxz
iret
sub
repnz
in
das
ljmp
clc
or
in
fcmovb
mov
int
fcmovu
mov
enter
aas
call
cmp
icebp
cmp
shr
mov
mov
imul
out
lret
adcl
cmc
sar
into
repz
cmp
aad
in
iret
iret
xchg
sub
xor
cmp
fst
ret
cli
icebp
imul
cmp
out
loop
loopne
ror
ret
sar
in
aaa
out
cmp
lret
adc
testl
out
call
xor
ss
xlat
cmp
sarl
ret
shr
aad
in
cli
jmp
test
mov
fsubrp
ljmp
not
icebp
cmp
cmpb
in
std
mov
icebp
test
in
imul
out
ss
idivl
out
fdivrs
into
ret
fstp
rcr
cmc
clc
std
enter
cmc
out
ds
cmc
xor
rcl
iret
xor
into
cmc
lock
cli
repz
stc
and
loopne
icebp
in
lock
in
fcomp
hlt
hlt
aaa
clc
std
rol
cmp
xlat
fsub
lret
and
aam
shr
aaa
fdivrl
repnz
rcl
test
in
or
leave
lock
lret
shr
rol
loop
rcl
icebp
call
cmp
ret
loope
std
icebp
aad
mov
fisttpl
out
repz
in
xor
ret
lret
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
cmp
mov
lret
jl
loope
fiaddl
loope
jmp
out
std
fcomi
and
sub
ret
jmp
in
enter
fcmove
ret
or
cli
loop
sbb
and
cli
into
out
lock
out
aad
out
ljmp
in
idivl
fdivr
jecxz
loopne
orl
aaa
cmp
iret
repz
sarb
sti
sti
fiaddl
loop
mov
ljmp
clc
in
in
clc
aad
ret
in
mov
ljmp
xlat
test
jmp
sti
aam
mov
call
lret
in
add
out
fnstcw
not
lret
ds
aad
rol
mul
shl
fcmovne
inc
out
repnz
xor
rol
cmp
iret
ss
clc
test
in
mov
cmp
leave
in
decl
ljmp
leave
cmp
aam
fadd
loope
mov
lret
loop
test
leave
in
std
call
sar
ljmp
lock
lock
lret
lret
fistl
loop
ror
sar
lds
repnz
out
aad
sarb
fmull
xchg
ljmp
leave
xor
clc
clc
rcl
jmp
aas
repnz
repnz
aad
ret
shl
in
fldln2
in
cli
dec
cmp
in
aas
fcmovnbe
in
and
vpmaxsw
out
in
loop
jmp
leave
into
fucom
aad
xlat
not
mov
sti
out
jmp
lret
ljmp
std
fucomp
lret
clc
int
call
nop
jmp
xlat
out
cmc
cmp
rcl
ret
add
cmc
cmc
clc
fucomip
fisttpll
loopne
in
std
ss
lret
testb
loop
mov
nop
out
and
int
sarl
cmc
aaa
xor
cli
fnstsw
icebp
in
fmulp
repnz
int3
fdivr
cld
mov
into
aam
cmp
in
call
clc
xchg
aas
mov
mov
fcmovu
fcmove
cld
in
mov
fsubrp
xlat
sarl
aaa
xor
in
std
fadd
repz
fcmove
sti
int3
xchg
shr
iret
int3
fisubrl
out
roll
ret
rcl
inc
cli
aam
jmp
out
xchg
sti
jmp
fdiv
roll
std
in
orb
nop
xchg
mov
sub
out
cmp
aas
stc
int3
fdivp
aas
xchg
jmp
in
or
into
enter
sub
das
call
xlat
jmp
cmpl
xchg
in
ljmp
call
sti
iret
xorl
aas
in
in
test
ret
mov
std
lret
cmp
jmp
shl
lock
xor
lret
mov
filds
out
lock
iret
leave
repz
jecxz
iret
aad
in
xchg
mov
xchg
mov
sub
fists
xor
stc
sarl
divb
loopne
out
aad
mov
in
xorl
out
xlat
jmp
call
lock
fst
fimull
hlt
shr
leave
into
in
iret
rcl
fcom
aam
lret
cmp
loop
test
icebp
int3
mov
jmp
out
in
fdivs
sti
lret
sbb
aas
stc
cli
in
lret
ljmp
ret
aad
into
ffree
aad
fnstenv
sbb
test
clc
int3
mov
lret
out
int
cmc
in
repz
jmp
fsub
jecxz
fdivrp
leave
div
loope
xchg
int
int
fbstp
lock
std
sar
ljmp
ss
in
cli
lret
hlt
in
mov
icebp
enter
sar
xor
sarb
fiaddl
fcomip
loop
int
in
pop
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
cld
mov
int
push
jl
lret
jl
int3
out
in
hlt
enter
shl
cmp
stc
cmp
cmp
shl
loop
out
test
int3
cld
cld
repz
hlt
fmul
call
xor
xlat
icebp
int3
icebp
loopne
sti
fiadds
rclb
sti
out
cmp
lret
ror
int3
lock
into
into
cmp
fdivrp
loopne
mov
aaa
rcl
iret
cmc
imul
sarl
cld
std
cmp
adc
leave
in
mov
mov
out
into
xchg
xchg
out
imul
in
cmp
aad
aad
in
aas
fnstsw
int3
in
rcl
filds
int3
ljmp
xor
fadd
cld
cmp
repnz
int
iret
ret
sti
not
enter
call
lock
int3
mov
out
shll
xor
int3
cmc
fdivrs
lock
aam
aam
out
mov
out
jmp
adc
hlt
jecxz
xor
not
cmp
ret
int3
fmul
rcr
fadds
mov
in
fcomi
test
lret
out
loope
rorl
fildl
jmp
call
repnz
repz
aad
cli
sar
cmp
ljmp
nop
loope
mov
jecxz
clc
loop,pn
fprem
into
cmp
aam
cld
rol
aam
ljmp
fucomip
xor
xor
iret
cs
iret
xchg
jecxz
cmp
orl
sarl
cmp
std
cli
testb
cmc
orl
ljmp
out
sti
out
stc
out
cmp
shl
in
aas
into
icebp
ret
testb
lock
xor
stc
cmp
aaa
sti
out
iret
cmpl
xlat
mov
decl
cli
shr
loopne
ljmp
ds
iret
int3
into
roll
aad
xlat
out
into
ror
call
aam
not
fnstcw
ds
adc
cli
rolb
in
lock
loope
lret
xor
out
xor
fsubrp
repnz
xlat
fucomp
leave
jmp
fmul
repz
xor
aad
xlat
xor
cmp
iret
rcr
out
cmpl
and
ffree
sti
shr
out
in
ds
rcr
xor
ds
cli
cld
int3
aas
inc
rcr
sub
loope
mov
in
fucomp
test
cmp
cmp
loope
repz
cmp
loope
and
and
shrl
stc
ret
jmp
sub
call
cmc
ret
icebp
cmc
fdivr
test
leave
addb
xchg
cmc
enter
test
stc
clc
fcmovnu
in
ret
out
xlat
lret
aad
fsubr
cli
xchg
shl
xchg
xor
in
in
jmp
testb
rcr
ret
in
ds
ret
fisttpl
iret
xor
loop
fcmovu
cmp
ror
in
test
loopne
test
ffree
lret
lret
mov
xlat
cmp
shr
fnstsw
cmc
fxch
icebp
jecxz
shl
ret
enter
in
cmp
xor
stc
cli
test
cmp
cmp
in
or
xchg
test
in
cs
cmc
repz
std
lock
fsub
fninit
fst
mov
call
icebp
rcll
xor
jmp
cmc
iret
idivl
iret
int
sar
mov
loopne
decb
jecxz
test
jmp
loopne
fdivr
out
loope
repnz
adc
cmp
ret
ljmp
out
xchg
call
enter
push
fcmovu
cld
repz
test
mov
adc
ror
out
rol
sub
clc
cmp
xor
into
xlat
fcmovb
test
fimull
fsubrp
shlb
std
cld
iret
cmc
aas
iret
int3
ret
fcomp
jmp
call
and
out
aam
xor
lock
call
in
ds
out
rcr
jmp
xchg
lock
lock
in
movl
mov
mov
push
xor
mov
add
jmp
jmp
aad
shlb
cmpsb
or
test
jl
add
sti
lret
xor
sti
test
div
test
test
cli
shr
ljmp
fcomp
cmp
cmp
int3
in
jecxz
call
mov
sti
fadds
out
ret
out
hlt
xlat
cli
out
stc
clc
ds
shl
cli
loop
ljmp
iret
repnz
in
ror
stc
out
lock
fucomi
out
into
shl
repnz
in
cmp
lret
mov
ror
cmp
ror
hlt
xlat
ret
fcmovnu
rorb
std
ficoms
cs
xor
sub
jmp
cli
hlt
cmp
iret
int3
out
ds
std
aam
out
xchg
ret
xor
rcl
repnz
loopne
lret
fnstcw
shl
ds
mov
ljmp
xor
xor
in
fnstsw
std
push
sarb
xchg
mov
jecxz
cmp
repnz
in
cmc
cmp
ljmp
loopne
rcl
leave
ljmp
icebp
sub
stc
imul
xor
aad
fmul
out
int3
loop
jmp
cmc
xlat
incb
fdivrl
loop
ret
in
cmp
cmp
cli
out
sbb
xor
loope
loop
cld
int3
loopne
xchg
loopne
in
icebp
into
xor
in
int3
fcmove
cmp
rcl
sarb
mov
cmp
call
ljmp
iret
jmp
int
loopne
rcl
lock
std
mul
cli
loopne
xchg
in
xor
jmp
not
iret
std
in
cmp
out
jmp
fcmove
mov
in
sub
jecxz
divb
rcl
ss
sti
out
cmp
cmp
neg
stc
xchg
aas
loop
sub
iret
out
stc
in
leave
cmp
fpatan
ds
neg
icebp
xchg
ds
loope
int3
testl
jecxz
leave
hlt
repz
repnz
iret
hlt
loop
test
cmc
cmp
ret
call
shl
xchg
xchg
out
rol
ss
xor
jecxz
xlat
xor
clc
rol
cmp
xchg
in
test
not
out
ret
out
jmp
repnz
int3
cmp
add
out
fld
loope
mov
in
int3
int
xchg
icebp
xor
sti
int
cmp
in
fcom
call
ret
rorl
jmp
lret
icebp
repnz
lret
imul
xlat
lock
hlt
hlt
cmp
in
rolb
ljmp
mov
repz
lret
fnop
cli
cmp
std
xlat
std
fdivr
shl
mov
add
faddl
jmp
cmp
jmp
loope
into
out
test
hlt
and
ficoml
loop
leave
aam
sarb
addl
loope
fcmovnu
int
mov
rol
sub
cli
fcmovnu
fcomp
ret
add
addb
neg
in
out
mov
xor
ss
into
aaa
sub
clc
out
hlt
shl
enter
nop
xchg
loop
enter
aaa
cli
lock
cmp
rcr
bnd
mov
fmuls
std
pushl
hlt
loop
std
fsubr
leave
fnstcw
cmp
cmpb
fmuls
in
loope
fucomi
mov
mov
xor
sti
jmp
std
cmp
clc
cmp
fxtract
loop
jmp
and
ljmp
rcr
xor
fcmove
iret
imul
mov
fdivr
xchg
fsubp
bnd
aam
jmp
clc
cmp
cmp
fcom
ror
xchg
enter
ds
in
aam
inc
out
cld
inc
jmp
ljmp
out
int
call
enter
sar
lret
sarl
loop
ret
xchg
test
lret
loopne
mov
xlat
out
shr
std
repnz
clc
out
hlt
addl
std
in
jmp
cld
test
ss
cli
ljmp
not
incl
decl
data16
add
rcl
aad
fcmovne
scas
push
mov
jge
push
jp
pop
jl
lret
jl
sti
mov
xchg
shr
aad
aad
xor
cmc
in
repz
in
shl
in
loop
loope
out
fst
loope
enter
in
in
std
sarb
int
fadd
test
call
loope
in
shr
iret
cmp
aad
idivl
sarb
rcr
fcmovu
in
test
movl
loope
icebp
xor
jmp
call
xor
iret
aas
adc
loop
loopne
mov
nop
icebp
enter
lock
icebp
icebp
fdiv
loope
shl
sarl
xchg
jmp
fcomp
mov
mov
xchg
mul
jecxz
shll
sti
sti
jmp
shl
cmp
loop
div
cld
jmp
out
filds
aam
out
cmp
jmp
roll
leave
in
cli
test
cmc
test
cmp
lock
icebp
and
lock
ret
mov
clc
test
out
loopne
out
leave
cmp
fxch
clc
std
shr
ret
out
test
sti
sti
test
mov
out
aad
lock
repnz
xor
into
aad
aas
cmp
ds
enter
in
xchg
mov
xlat
jecxz
int
rcl
cmp
mul
sti
xlat
clc
icebp
rolb
jecxz
int3
int
test
loopne
neg
shr
fcmovnbe
fldl2e
cmc
idiv
ljmp
in
cld
jecxz
jmp
xlat
ret
cmp
lret
cmp
rcr
loopne
xchg
loope
mov
in
loope
int
mov
rol
in
in
xor
in
clc
sti
aad
test
fnsetpm(287
cld
call
ret
mov
jmp
int3
repnz
mul
repnz
repz
in
loop
stc
hlt
out
fsub
in
call
enter
into
ljmp
cmp
cmp
loopne
and
xlat
ljmp
xor
in
rol
fcmove
loope
lock
int3
aad
jmp
cmpb
leave
lock
test
loopne
rol
cli
shll
ljmp
aam
loop
lret
jecxz
repnz
out
div
lret
fucomip
lret
not
xlat
call
cmp
int3
sar
push
repnz
mul
ss
sarb
in
sub
and
test
repz
roll
shll
cmc
in
aad
xor
into
sbb
jecxz
std
clc
mov
fucomp
into
into
test
shr
clc
leave
int3
std
hlt
cld
into
and
fucomi
clc
ret
out
into
out
lock
ret
fcomi
xor
enter
int
in
testl
out
lret
mov
vphaddwq
das
ret
jmp
cld
leave
cmp
sar
fld
cmp
test
fiadds
rol
rcl
shr
cmp
into
ds
repnz
rol
in
mov
in
les
call
stc
xor
std
fiadds
int
rolb
sti
in
in
into
loopne
out
mov
jmp
repnz
push
jecxz
test
loope
jmp
loopne
out
fsubr
xchg
out
cs
jmp
iret
fsubrp
sbb
cmpb
jmp
addb
repnz
in
std
xor
cmp
into
roll
std
cmp
vpmulhw
mov
les
xlat
icebp
icebp
stc
cmc
flds
cmp
cmp
aam
aam
iret
fisttpll
nop
fucomip
call
ss
cmp
sar
xor
les
mov
dec
lock
fldl
fcomp
out
shr
lret
out
shr
aad
ds
icebp
shl
fdiv
in
loopne
mov
ljmp
ret
xor
jmp
idiv
cmpl
test
sti
cld
mov
adcl
cs
lret
cli
into
aas
out
fcmovb
idiv
mov
loopne
addb
lret
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
pop
mov
lret
jl
shr
repz
out
idivb
icebp
sti
cmc
shl
loopne
leave
hlt
fst
leave
stc
xchg
out
cld
in
rol
icebp
aam
call
xlat
faddl
mov
leave
hlt
xchg
fsubp
icebp
loop
hlt
aaa
jmp
fdivr
ror
cmc
cmc
std
test
mov
out
rcr
int
loopne
out
sub
cmp
repz
in
rol
sti
sarb
out
out
test
jecxz
shl
les
xor
ror
enter
in
jmp
cmp
cmc
aam
in
fucom
ds
ljmp
out
repnz
fucomip
hlt
enter
iret
stc
addl
cld
ror
fst
xchg
shl
xor
sub
stc
clc
sar
xlat
rcl
incl
call
mov
sti
idiv
fxch
cld
out
into
xorb
mov
lret
popl
repz
bnd
jecxz
cmp
out
rcl
fucompp
hlt
fcmovnbe
filds
jecxz
out
enter
fidivrl
out
into
cmc
lret
sarl
fxch
in
in
xchg
cli
cmc
int3
xchg
leave
out
xor
out
out
repz
fdivrs
jmp
sbb
ljmp
leave
fisttpll
xor
cmp
int
repnz
out
ljmp
cmp
sbb
lret
repz
shl
fdivp
ret
out
lock
fstp
lock
stc
sar
sti
fdivr
std
cli
test
std
ljmp
sub
clc
out
cmp
aas
fsub
ret
fstp
cli
enter
fildl
cmc
shl
ljmp
fscale
ljmp
faddp
call
lret
addb
shl
in
fnstsw
lret
xlat
ror
fyl2xp1
and
xlat
call
jmp
mov
xor
cmp
dec
sti
fildl
xchg
fiadds
out
loopne
ror
xor
int
ret
hlt
cmp
lret
in
cmp
fldl
clc
loop
xor
xor
fsubr
cmp
aaa
ss
lock
and
rcl
ret
jecxz
in
out
xchg
decl
rcl
hlt
int
xlat
jmp
loope
idiv
cmc
cld
ret
leave
cld
call
xchg
loopne
xlat
out
ror
jmp
ss
rcl
shr
repnz
mov
movl
xor
hlt
ret
lock
imul
into
loope
ret
test
out
test
shr
test
out
mov
fimuls
out
mul
xlat
int
cmp
cmp
cld
loope
cmp
adc
in
addb
xor
xor
fcmovnb
ljmp
ret
repz
ret
in
stc
iret
fmulp
rclb
in
aad
fcmovb
enter
rcl
ret
sbb
fcmovu
ljmp
xchg
call
lock
shr
in
cmp
rol
ffree
mov
jmp
std
xchg
sub
aam
shl
lret
iret
cmp
xor
out
clc
loopne
mov
jmp
xchg
sub
cmc
ret
out
iret
lret
int3
fcmovu
loopne
idiv
cli
out
lret
mov
shl
rclb
xor
cmp
sarb
cmp
test
fcomip
out
shl
out
int
shl
cli
lock
jecxz
fdivrs
ror
incb
decl
iret
repnz
jmp
fcos
test
xlat
clc
fldl
loopne
incl
leave
clc
fmul
xor
into
ss
lock
sti
test
aas
aad
mov
lret
jmp
jmp
xchg
in
ror
in
shl
lock
enter
ret
ret
fcmovnbe
clc
adc
icebp
popl
jmp
out
repnz
xlat
sarl
shl
loopne
loopne
testl
rcr
std
jmp
lret
flds
inc
xchg
add
add
jmp
ret
int
lret
sub
dec
pop
out
fs
lret
jl
xlat
ret
or
fdiv
jmp
int3
ffree
aad
leave
rcl
clc
out
lock
ret
sar
in
loope
lock
mov
sub
xor
in
fnstcw
jecxz
incl
repz
dec
out
ret
in
aad
cmp
lock
loop
hlt
loopne
mov
clc
in
xchg
lret
int
fdivs
xor
icebp
out
ds
fcomp
addb
xchg
fcomip
jecxz
ret
cmp
loop
idiv
lret
cli
jecxz
rcl
ds
idiv
enter
in
rcl
int
xor
cli
in
or
aam
ds
xor
in
cli
out
int
out
xor
jmp
out
cmp
test
aam
fcmovnb
jmp
xchg
fcmovne
out
nop
out
cmp
out
stc
fcmovu
fcmovnu
fcmovnbe
int3
fucomp
ret
repnz
in
out
flds
sub
lock
cmp
xor
idiv
lock
icebp
loope
cmc
loop
lock
out
clc
stc
int3
cli
mov
fdivrs
addb
fadds
int3
rcr
iret
repz
das
fcom
clc
out
enter
in
icebp
lds
aam
mov
in
int3
sar
test
call
repz
iret
out
out
cmp
and
cmc
test
lds
loopne
and
aad
leave
repz
leave
icebp
icebp
shr
int3
repnz
cld
aam
xchg
iret
icebp
sub
cs
bnd
fucom
cmc
lock
loop
in
leave
test
test
mov
mov
std
mov
sub
lret
int
fstpt
ret
out
xlat
call
in
sti
out
xchg
roll
xor
lds
jmp
cmp
hlt
repnz
xchg
stc
mov
orl
into
fcomp
fmul
aam
hlt
repz
in
jmp
mov
jecxz
loopne
xchg
xchg
test
repz
leave
lock
cli
neg
faddl
div
test
jecxz
out
mov
enter
cmp
into
cmp
xlat
int
icebp
sarl
test
mov
fimull
xor
sti
cmp
jmp
lock
aas
cmpl
add
fiadds
xchg
cmp
divl
stc
repnz
idiv
clc
call
xor
rolb
std
in
xchg
xchg
jecxz
ljmp
out
lret
xor
ds
filds
testb
rcl
repz
div
div
ss
aaa
int3
fsubr
std
cmp
aam
aad
mov
in
and
rcl
fcmovu
xchg
aad
int3
xor
xor
repz
ret
ret
repnz
cli
loopne
loope
jecxz
flds
lock
les
cmp
aam
lret
fprem1
cld
add
and
lock
xchg
cmp
fmull
ret
cmp
cld
cmp
lock
aam
test
stc
hlt
xchg
loopne
incb
sub
in
ss
out
fsub
jmp
push
ds
fadd
std
xchg
incl
jmp
loopne
out
rcl
repnz
rol
cmc
out
mov
sbb
faddp
call
loopne
fcomip
cs
test
repz
sarl
ljmp
cli
xchg
cld
int3
in
and
dec
ljmp
xor
jmp
cld
iret
iret
out
fdiv
mov
in
fldl
enter
test
ljmp
fadd
std
fucomip
mov
mov
in
or
shl
sarb
cmc
aaa
jmp
in
fisttpll
jmp
rorl
in
xor
xor
rol
cmp
iret
aas
xchg
rcr
lea
xor
std
shr
cmp
sar
cmp
cli
cmp
ffree
loope
test
loope
call
repnz
mov
mov
jmp
ds
int
int
int
mov
xor
testl
jl
stc
rol
call
in
leave
cli
hlt
lock
hlt
test
sar
lea
mov
ror
xchg
sub
icebp
stc
xor
ljmp
roll
fucomp
fcmovbe
fdiv
std
xchg
out
jecxz
loop
out
sti
aad
aaa
out
aad
sti
out
call
ret
cli
fadd
out
std
filds
int
jmp
lock
fcmovu
neg
shl
loop
sarl
mov
fiaddl
out
out
loopne
out
ss
in
out
cmc
loope
fsub
fcom
ret
in
cld
in
jmp
call
aam
int3
cmp
call
cmpl
lock
fadd
cli
in
ljmp
mov
shl
call
in
hlt
stc
incl
rol
test
dec
stc
or
cmc
int3
in
call
out
aad
jmp
fcmovnu
fyl2xp1
repnz
decl
xchg
jecxz
lret
in
jmp
hlt
aam
sti
shl
xchg
mov
movl
idivl
cli
xor
fsin
fdiv
in
xlat
std
fadd
testb
rolb
leave
int3
cmp
xlat
stc
shl
or
test
mov
mov
into
int3
out
adcl
xor
hlt
repnz
sbb
sti
test
xchg
int3
decl
mov
into
cs
in
rcr
cmc
leave
lock
cmp
xlat
in
test
fimuls
mov
out
aaa
lret
cmc
aad
rcr
lret
incb
in
loope
out
or
loopne
aaa
int3
fstpt
call
ffreep
in
xlat
stc
rorb
cmp
in
out
xor
cmp
int3
call
stc
test
vpsadbw
sti
fimull
xchg
sar
lret
jecxz
shr
cmp
hlt
out
fdivr
sti
lret
loop
ret
test
fcmovb
in
leave
sti
cli
fneni(8087
in
jecxz
jecxz
in
xor
sub
clc
lret
repz
fcomip
aad
test
out
jmp
leave
cli
iret
shl
into
loop
fsubr
out
aad
fmul
std
fcomip
loopne
div
call
cmp
repnz
imull
out
enter
lret
iret
hlt
cmp
cld
leave
cmp
div
in
xchg
leave
out
popl
jmp
cmp
icebp
enter
cmc
iret
rcl
fsub
aas
int3
xchg
iret
out
jecxz
les
in
icebp
lret
vcvtdq2pd
hlt
stc
aas
rcl
lock
add
loopne
jmp
test
xor
cmc
ss
cmp
xor
repnz
sbb
mov
jecxz
decb
repz
neg
fidivrl
fcmovbe
cmpl
repnz
addb
mov
xchg
in
in
cmc
aaa
cli
aaa
or
sti
test
shr
repz
test
fsubrp
pop
test
xor
leave
loope
repnz
enter
add
rol
cmc
jmp
enter
mov
and
out
hlt
xor
xor
aad
int3
or
ss
fsubp
fisttpll
xchg
shlb
rcl
cmp
jmp
jecxz
cmp
lock
fmul
rcr
in
mov
lret
aam
aam
cmp
int3
cli
iret
out
cli
sarl
fcomip
hlt
in
lret
jmp
mul
sar
icebp
neg
rcr
xor
and
aas
rolb
call
in
mov
xor
into
int3
leave
neg
repz
idiv
sti
test
into
xchg
faddp
movl
aaa
leave
lret
ss
lret
cmp
enter
loop
out
repnz
in
out
out
sub
jmp
shrl
mov
shl
out
loope
sbb
cmpb
cli
repnz
xchg
out
cmc
out
enter
jmp
adc
in
loopne
cmc
xchg
into
clc
mov
cs
xor
cli
clc
movzwl
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
add
outsl
jl
lret
jl
fmul
ret
xchg
jecxz
test
add
add
lret
lret
xor
lret
cli
lret
fucomi
cld
inc
xchg
out
rol
filds
adcl
fldlg2
int
cmp
repz
out
fsubp
fmuls
in
and
shl
ret
out
jmp
stc
fucom
idiv
neg
clc
fadds
faddl
jecxz
into
icebp
cmc
out
filds
fld
cmp
lret
fucom
incl
mov
into
out
repnz
aad
sarl
cli
sar
sar
loop
std
cld
int
orl
fsub
std
cli
sar
aam
stc
aas
jmp
fneni(8087
fdivr
lea
clc
into
lock
aaa
sarb
fcmovnbe
dec
xchg
std
std
int3
out
jmp
iret
int
repz
in
frndint
aas
std
call
in
roll
sub
in
ret
leave
call
test
repz
ffree
std
neg
orb
out
cmp
xor
aad
cmp
aas
out
xlat
out
ljmp
mov
lock
ljmp
lock
icebp
fcmovnbe
sbb
mov
sbb
mov
adcb
shr
fstp
ror
fdivrl
clc
hlt
icebp
rcl
clc
decb
fcmovne
out
lock
ret
in
call
adc
lock
aam
aam
test
orb
ret
cmc
aad
hlt
not
fstp
cli
xor
xchg
loop
fmulp
mul
clc
hlt
rcl
repz
cs
aas
repz
cmp
roll
xchg
jmp
loop
int
ret
jecxz
leave
repnz
iret
lock
hlt
jmp
test
hlt
stc
hlt
mov
xchg
jmp
mov
xor
enter
xlat
in
xor
enter
cli
in
icebp
xchg
ffree
loope
in
mov
xor
int3
rcr
ss
call
sarl
loope
add
sti
fcmovu
orb
loopne
loope
cs
fnstsw
in
aam
sarl
ret
fcmove
aam
out
cmp
xchg
out
ret
cmc
out
clc
int
cld
in
idiv
jecxz
hlt
ds
fdiv
jmp
in
call
repz
stc
jmp
faddl
les
fcomi
flds
jmp
lock
ret
loop
jmp
cmp
fsubr
aas
xchg
rol
enter
int3
fcompp
loop
test
xor
std
repnz
cmp
loope
addl
out
into
leave
test
icebp
hlt
xor
rol
out
ss
sti
loope
add
out
sti
fiadds
in
in
mov
fcmove
cmc
std
jmp
clc
fcmovnbe
lock
xchg
jecxz
fldlg2
cli
mov
out
xlat
into
in
iret
out
ljmp
fucomip
stc
incb
roll
cs
in
clc
enter
ljmp
xor
cmc
test
in
int
cld
into
in
divl
xor
enter
hlt
aam
sbb
loopne
test
decb
sub
lret
stc
shlb
test
rcl
loop
repnz
ljmp
addl
fdivs
xor
cmp
testb
cli
in
test
fisttpll
aam
xlat
shl
imul
fcmovne
cld
out
sti
sbb
out
div
bnd
out
lea
call
aam
aaa
repz
cli
sarb
shl
sar
vpsubusw
orb
out
int3
jmp
shr
cmp
std
in
out
cld
repnz
cld
cmp
xlat
cli
dec
test
leave
repz
ret
ss
cmp
repnz
cmp
rcl
aad
mov
cld
in
in
xchg
mov
mov
jmp
aad
enter
fsts
jo
xchg
fdivs
jl
add
jecxz
shll
loope
aad
sti
in
in
aam
int
ret
fadds
add
stc
out
sti
xchg
hlt
mov
lock
sti
int3
shl
sarl
aad
xlat
neg
jecxz
idiv
jmp
fcmovnu
std
lret
out
aam
lret
lret
ret
out
lock
stc
fcom
div
aas
test
rol
out
test
mov
loop
loopne
test
fcmovnb
stc
fsubrp
fcomp
xor
cli
cld
xlat
leave
cmp
loop
jecxz
shll
in
cmp
repnz
cli
ds
cmp
xchg
stc
fimuls
loop
ss
xor
cmp
int
cld
out
mov
testl
icebp
xor
xor
shl
lock
loop
ret
clc
add
cli
shl
loope
out
lret
into
cmp
in
repz
ret
cmp
xor
fcmovb
aas
jecxz
cmp
testb
in
out
test
hlt
ss
jmp
int3
aam
test
stc
cmp
repnz
cld
mov
repnz
out
out
call
xor
xchg
fsubp
add
iret
loopne
and
xor
into
aas
std
sti
in
ret
in
clc
shl
in
clc
fists
xchg
lock
ror
hlt
cli
clc
xor
loope
aam
adc
fdivr
loop,pt
clc
xchg
xor
xor
div
xor
xor
stc
cmp
in
lds
loope
fmull
xchg
jmp
repz
in
cmp
cld
cmp
in
loopne
ret
out
xchg
jmp
ret
fucomp
cmp
repnz
cmp
aad
sbb
enter
hlt
ror
ret
jmp
fdiv
aad
cld
out
xor
fucomp
cli
jmp
xor
xchg
into
aaa
xor
loop
das
hlt
sar
call
fscale
call
cli
fsubp
out
mov
jmp
out
repnz
aas
repnz
cmp
aad
xchg
rcr
inc
xlat
mov
mov
mov
test
shl
int
in
shl
aas
rcr
cmp
cmp
xlat
test
test
call
mov
xlat
clc
sti
iret
roll
shr
hlt
shr
cmp
ret
inc
in
div
leave
mov
stc
mov
dec
mov
xor
enter
in
sti
cli
fdivp
ret
out
fucom
fisttpll
out
xchg
ljmp
out
idiv
icebp
cli
loope,pt
ret
cmp
jecxz
and
mov
loop
iret
icebp
cmp
xor
jmp
into
jecxz
std
xchg
stc
fdivr
and
xchg
xchg
lock
std
int3
lock
cld
int3
aas
rol
test
fsub
in
into
mov
nop
fisubrs
test
cmp
in
out
not
repz
hlt
fdivrp
incl
aad
in
hlt
sti
out
cmp
lret
into
clc
stc
cli
jecxz
cmc
call
int
ficoml
sti
into
aaa
cmp
ret
sbb
fcomi
out
enter
faddl
hlt
repz
cmp
int
fsub
cmp
and
out
fildl
lret
icebp
xor
out
loop
sti
fcmovu
icebp
icebp
lock
sbb
ret
cld
xchg
in
adcl
leave
jmp
aad
lret
cmp
repnz
repz
stc
stc
lock
out
xchg
jecxz
rcl
lret
xor
out
sti
std
ds
repz
test
loop
fdivrp
in
mov
shl
sub
in
repnz
std
lret
xlat
clc
jecxz
in
sarl
sti
xlat
stc
test
mov
ror
cmp
stc
out
int
into
jecxz
ds
movb
out
mov
mov
fstl
in
cmp
into
int3
enter
ret
cmp
loope
fiadds
jecxz
call
div
xor
xor
inc
jmp
lret
xlat
aas
fst
fcmovne
mov
imul
lret
jl
divb
hlt
cmc
clc
ljmp
in
cmc
xchg
lds
sub
in
cmp
shl
enter
lock
fucomp
mov
into
test
lret
mov
icebp
xlat
icebp
sti
cli
xor
fucomp
out
int
icebp
rol
loopne
leave
jmp
jecxz
jmp
mov
out
int
aad
fcomp
aas
clc
repnz
loopne
add
rorl
mov
mov
loop
cmc
iret
stc
enter
test
repz
cmc
out
test
fucomip
mov
lock
cs
std
in
rol
testl
shl
fimull
enter
jecxz,pn
jecxz
out
stc
jmp
fdivr
jecxz
out
in
idiv
testb
adc
aam
neg
call
out
int
icebp
cld
into
fcomip
aas
fst
sbb
lret
test
mov
sar
out
icebp
fucomp
jmp
cmp
cld
aad
cmp
fsts
icebp
in
out
leave
int3
lret
sarl
loopne
cld
cmp
mul
neg
add
out
fucomi
cmp
fmul
fucomi
jmp
xor
not
test
in
in
loop
cli
shl
int3
jmp
lret
cmc
shl
leave
enter
testb
test
std
cmc
lock
rcl
in
aaa
out
icebp
int
in
test
icebp
xchg
adc
stc
loop
enter
loop
cld
sub
out
iret
xor
aaa
hlt
clc
rcl
xchg
not
mov
test
int
fcmovbe
cmp
enter
jmp
repz
ljmp
xor
out
in
jecxz
cli
iret
mov
hlt
out
int
test
cmp
sti
cld
in
incb
loopne
in
fadd
mov
lea
call
in
jmp
aas
aam
rcl
decb
fstl
xor
call
stc
leave
cmp
loopne
cmp
stc
cld
jecxz
ljmp
int
out
xor
clc
ror
ffree
test
out
ds
xchg
cld
cmc
xchg
jmp
iret
out
jmp
fnstcw
stc
jecxz
fsub
repnz
cmc
int
icebp
nop
fmul
in
and
into
sti
cmp
call
cli
test
loopne
fcmovu
pop
iret
icebp
out
std
out
rcl
into
enter
into
lret
hlt
shr
fcmovb
in
hlt
repz
in
leave
fldl
out
ror
out
cmp
fucomip
loope
shl
ds
dec
ret
jmp
shl
ficoms
out
jmp
in
lock
lock
in
rcr
aam
hlt
sti
mov
hlt
out
in
shlb
xor
cmp
lret
ljmp
inc
aad
lret
fildl
iret
repnz
ljmp
aam
jmp
xlat
fucom
ret
ret
lret
lret
cmc
xor
out
stc
aad
out
cmp
aad
cmp
out
icebp
in
testb
test
sar
divb
lret
xor
fsubr
xchg
jmp
mov
cmp
xlat
imul
shr
call
fstpt
fcomp
aam
xchg
xlat
stc
addl
int
into
test
in
loope
lret
cs
sarl
aas
icebp
icebp
fidivrs
ret
vpsubd
fcmovne
std
fsub
loope
and
out
xor
iret
aad
ror
int
ffree
cmp
loop
fcomp
lret
in
jecxz
call
cmp
int
fsubr
icebp
cmp
clc
repnz
repnz
int
clc
fsubr
in
aaa
jecxz
xlat
xor
jmp
fxch
in
ror
loopne
ljmp
xchg
cmc
mov
imul
ret
xor
int
aas
loope
in
cmc
loopne
out
call
mov
jecxz
int
lock
int
aas
cli
stc
cmp
ret
aad
xchg
and
cmp
jne
pop
pop
jmp
int
into
fcmove
fst
aam
lods
push
sub
jl
add
rol
mov
xchg
cmc
ret
ret
ss
out
sar
repnz
shl
in
loope
lret
ljmp
repz
idivl
divl
cmp
repz
icebp
cld
fcmovne
xchg
loope
orb
xor
int
aad
rcr
fistpll
into
rorb
xchg
mov
shl
mov
sub
aaa
in
fstpt
shll
cli
xlat
int3
aam
aas
filds
testl
loope
cmp
cmp
int
leave
fucomi
in
cmp
cmp
leave
sub
aam
cmp
mov
rcr
into
in
clc
rol
ror
aas
clc
int
fbstp
loopne
sbb
enter
clc
mov
cs
in
cmc
fstpt
cmp
stc
fincstp
test
sti
stc
test
in
icebp
xor
in
sti
out
in
icebp
clc
in
xor
ds
out
inc
ljmp
leave
lock
in
iret
divb
cs
ljmp
inc
faddp
out
out
jmp
loop
mov
vshufps
fistpll
lock
jmp
cmp
repz
in
incl
jmp
jecxz
hlt
clc
fsubr
in
cmp
test
iret
fdivr
stc
fisttpl
loop
in
lret
mov
stc
repnz
repnz
aas
cmp
ljmp
fldpi
std
inc
out
xchg
hlt
rcl
loopne
xlat
into
stc
in
repz
repnz
sar
ret
les
mov
out
xor
fcmove
fstp
fdivr
ror
aad
and
aad
in
in
mov
xor
test
repz
into
in
stc
divb
cmp
ss
fdivp
loope
addb
orl
jmp
jmp
out
loopne
div
mov
stc
jecxz
jmp
bnd
icebp
jecxz
jmp
cmp
sti
fnstcw
xor
out
loope
fcmovnbe
repnz
ffree
call
faddl
aam
test
in
imul
loop
out
idivb
stc
repz
cli
ljmp
sub
xor
fbstp
cmp
in
test
clc
test
lret
out
leave
xchg
out
lock
div
shl
out
sti
ss
leave
enter
loope
les
loopne
loope
ljmp
icebp
lret
xor
sbb
loop
xchg
jmp
jecxz
into
cli
das
iret
fidivrl
cmp
shr
ss
rorb
out
mov
test
lret
filds
aam
fcomp
cmp
sbb
fst
idiv
in
fdivrp
xchg
xchg
sarl
out
in
aad
or
sarb
clc
mov
call
jmp
idiv
int
into
in
cmp
std
cmp
sbb
and
mov
xchg
ljmp
out
xlat
out
in
rolb
out
ljmp
fcmovnb
mov
fsubrp
ret
icebp
cli
ss
fstp
sarl
ror
fucomi
aad
mov
lret
out
jecxz
std
cld
in
fnstenv
ljmp
cmp
div
test
jecxz
vcvtpd2dq
in
and
call
xor
aad
icebp
shl
out
repz
clc
loop
call
dec
test
aad
xor
lret
aam
call
hlt
sar
sar
enter
roll
into
shrl
repnz
cmc
fcomi
xor
out
loop
icebp
cmp
cmp
fisttps
jmp
cmp
leave
enter
ret
sbb
ret
mov
cli
iret
in
test
sub
xor
shl
jmp
ljmp
mov
cmc
or
mov
fisttpl
aaa
divl
in
ss
aam
rcr
aam
cmp
out
mov
decl
ret
mov
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
shll
ret
jl
add
idivb
xor
lret
rcr
f2xm1
rcr
clc
out
fadds
mov
xchg
enter
xor
iret
into
in
loope
jecxz
repz
cld
cmp
jecxz
adc
repnz
int
cli
fldcw
shr
not
int
rcr
cmc
ds
loopne
hlt
sti
jecxz
clc
jmp
into
enter
int3
lret
into
clc
xlat
int
repnz
enter
testl
inc
test
shrl
iret
icebp
int3
call
ss
cmp
ds
int3
mov
loopne
lret
mov
cmp
cmc
aad
cmp
std
sar
mul
push
test
loope
mov
test
jecxz
repz
xlat
clc
leave
cmp
xlat
cld
fmul
out
fldl
ret
fldpi
int
in
sbb
repz
repnz
fcompp
int
xor
out
in
aaa
shl
imul
out
sbb
and
mov
in
xchg
enter
hlt
shl
aad
xor
stc
sti
rcl
hlt
aas
fldlg2
cmp
lock
cli
loope
lret
xor
jmp
repnz
cmp
stc
fiaddl
xlat
mov
orb
jmp
aad
aad
fsub
shl
clc
shl
faddp
std
xchg
xchg
test
mov
xchg
shl
in
jmp
jmp
sar
fmul
cmp
jmp
in
xchg
mov
mov
hlt
xor
ror
lock
repz
aas
jecxz
fcom
shl
out
lret
mov
lret
in
jmp
mov
iret
out
cmp
cld
repnz
aas
loopne
out
shl
xor
in
loop
orb
enter
hlt
lock
lret
lret
faddl
in
ret
fcmove
sbb
out
mov
enter
shl
jmp
sar
into
out
cmp
rol
loop
lret
ret
in
repnz
out
jmp
in
lock
cmp
cmp
jecxz
aad
std
cld
xlat
iret
xchg
jmp
fxch
xor
lret
aam
fmul
fsubr
rcl
fimuls
lret
clc
out
in
fsub
repz
sti
shr
xor
lret
iret
cmp
in
fcomip
jmp
lret
mov
xchg
repnz
aad
leave
int
into
out
int
repz
out
in
and
mov
fildl
xchg
fucomip
ror
aam
not
xor
call
idiv
inc
loopne
mov
fisttps
or
std
cmc
loope
out
repz
fscale
dec
out
ds
cmc
rorb
xchg
in
cmp
xor
cmc
ror
in
cmp
icebp
sarl
loop
cmp
enter
cld
in
loop
in
vpor
out
cmp
ljmp
cmp
neg
les
rcr
hlt
jmp
mov
aas
cmc
repnz
xor
sti
shr
ror
in
sti
fcomi
hlt
cmp
sti
loope
fmuls
rcr
jmp
hlt
sar
sarl
rolb
hlt
and
stc
fdivr
lret
int
rclb
cmc
out
cmp
lock
repnz
in
cmp
shl
jecxz
xchg
xor
jecxz
out
icebp
fistpll
ffreep
shll
rcl
xchg
in
ret
idiv
out
xchg
call
fcomip
icebp
in
sti
fcom
addl
repnz
in
int3
in
shl
lret
in
out
cmp
in
test
neg
in
ljmp
fisttps
jmp
jmp
loopne
out
loop
loop
mov
orb
xchg
xchg
in
shl
test
in
loope
lock
int3
jecxz
rolb
in
in
cli
out
fmul
xor
ret
aad
ds
xlat
faddl
call
hlt
fucompp
nop
clc
mov
cmc
xlat
icebp
aaa
repnz
ljmp
cmp
cli
in
fdivr
sti
xchg
ljmp
aam
sub
fidivrl
stc
sar
xchg
in
stc
mov
jmp
ror
ds
ret
or
lock
dec
nop
add
lret
jl
jmp
mov
or
icebp
repz
lret
out
xor
lret
fcomip
out
sbb
cmp
out
in
addl
repnz
int3
cmc
ret
sti
cli
sti
faddl
fsubrp
loop
shr
lock
jmp
cmp
clc
cmp
clc
in
out
cli
mov
call
fmulp
fdivr
in
rcl
clc
int3
cmp
into
aad
idivb
shr
aam
lret
ljmp
cmc
aad
cs
leave
cmp
divb
xor
ret
rolb
stc
idiv
lret
cli
shl
lock
ss
lret
fcmovne
repz
aam
stc
fcmove
out
aam
mov
fdivr
cmp
aad
loopne
jmp
stc
cmp
ljmp
hlt
jmp
fcoms
lret
std
out
jecxz
incl
jmp
in
mov
ficoml
jmp
std
into
cmp
iret
cld
loope
shr
vpsrlw
in
adc
jmp
aad
fcom
jmp
out
clc
int3
icebp
sti
ds
shl
cmp
clc
std
mov
icebp
lret
mov
fsubrp
xor
icebp
aam
fsub
iret
sar
icebp
cmc
mov
sti
fcomp
lea
stc
repnz
hlt
fucomi
loope
and
in
in
adc
ror
rcl
jmp
clc
cs
sar
rolb
shl
aam
mov
int
xchg
cs
int3
int3
xor
fmul
xlat
repz
out
ss
repz
fdivr
test
lea
cs
icebp
int
aas
cmp
out
fcomp
mov
decb
aad
repnz
shl
rcl
in
out
into
aad
out
fidivrl
aas
loope
add
nop
jecxz
incl
stc
aaa
into
cmp
cld
fcmovnbe
cmc
rcr
mov
orl
lock
jmp
cli
sar
out
cmpl
loopne
testb
in
shl
cmc
repz
adc
xlat
xlat
ds
in
mov
xchg
xchg
ret
repz
cmc
fcmovbe
ror
repz
lock
into
and
stc
loope
fsts
or
xor
cmp
repz
aam
xlat
ret
in
aas
out
fxch
int3
test
mov
out
cli
leave
rcr
shr
int
xchg
stc
clc
sti
xlat
xchg
fucom
lret
jmp
rol
lret
cmp
jmp
lret
lock
cld
fldl
vpcomuw
ljmp
test
clc
shl
loop
xlat
out
hlt
fiaddl
mov
rcl
aad
iret
call
sbb
sar
clc
fsub
ret
int
into
sti
shl
in
jecxz
jmp
fmul
sti
roll
repz
loopne
fildl
test
lret
iret
fsubrp
int
int3
aaa
lret
cmp
loop
faddl
out
int3
mov
mov
mov
sub
fxch
xor
xor
ror
repz
int
test
fadd
jecxz
out
iret
test
in
call
shll
in
loope
ljmp
out
in
fstp
int3
out
xor
ljmp
xor
hlt
clc
out
repz
hlt
mov
rclb
hlt
in
aam
iret
loop
lret
shlb
jmp
lock
rcr
lock
loopne
add
mov
ljmp
mov
cld
lret
aaa
fstpt
lock
loope
ret
fcmovnb
leave
xchg
fldlg2
fisttps
mov
mov
cmp
lret
cmp
cmp
lock
in
in
decl
out
loope
ret
lret
cmp
fcmove
cmp
cmp
cmp
aam
loop
std
fucomp
loope
test
push
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
dec
sub
lret
jl
lock
aaa
ljmp
adc
fnstcw
cmc
ljmp
in
mov
out
in
loope
loope
aam
cmp
lret
ds
repnz
cli
stc
jmp
enter
jmp
xor
cmp
leave
out
out
fcomp
cmp
jecxz
lock
xor
cld
ds
loopne
mov
xchg
mov
shrb
xor
imul
xor
xlat
call
jecxz
test
xlat
mov
lret
jecxz
out
lock
aad
repz
loope
in
ds
lds
lret
int3
call
repz
das
cs
rcr
test
cmc
cmc
fcompp
inc
lret
fucomp
cld
rcr
xchg
cmc
in
xor
icebp
ljmp
sbb
icebp
in
sar
cli
call
nop
shl
shl
lret
shrb
cmc
jmp
idiv
aas
mov
int
lret
out
nop
mov
sti
out
xor
iret
rolb
xchg
ret
fsub
in
out
out
into
ss
imul
int3
cld
int
sar
in
test
std
incb
lret
in
in
ror
shr
xor
fldpi
sti
test
cmc
loopne
not
rol
xchg
icebp
rolb
stc
xlat
aad
xor
cmc
jmp
sar
out
aam
call
fcomp
jecxz
fdivr
iret
out
xchg
repnz
rcl
xor
shr
lock
addl
hlt
jecxz
vcvtpd2dq
xchg
out
mov
repz
int
call
cmp
iret
sarl
cmp
aam
mov
jmp
fmul
jecxz
mov
repnz
lock
in
xor
into
sarl
lock
cmp
loop
repz
faddl
xchg
iret
shlb
xor
clc
cmp
ljmp
fdiv
sar
mov
cld
in
out
leave
clc
int
int3
addb
lret
rorb
mov
xchg
test
cmp
cmp
lret
roll
out
aad
shl
fisttpl
fisttps
xor
cmp
iret
loope
sar
aad
test
fadds
in
loope
incb
enter
out
stc
lret
loope
in
rolb
lret
loope
lret
ljmp
jmp
enter
call
vmovq
loop
mov
xlat
mov
repz
sub
iret
cmp
sarb
jecxz
hlt
loope
aas
rcr
mov
test
int
lret
vpsrlq
fdiv
lock
aad
cmp
xlat
rol
xlat
out
decl
loopne
jmp
shr
out
aam
cmp
cmp
ret
clc
mov
jmp
int
xor
lret
fsubr
repnz
xor
inc
call
in
loope
enter
jecxz
xor
xor
fdivl
int3
in
in
stc
fidivrl
into
add
ret
jecxz
mov
mov
lret
xchg
test
mov
hlt
iret
shr
jmp
icebp
repz
aam
xor
test
xchg
out
dec
out
jmp
lds
ljmp
xchg
leave
lds
int
fimull
cmc
lret
icebp
cmp
aad
xlat
jecxz
xor
lds
test
and
loop
in
out
leave
aad
stc
call
xlat
in
aaa
cmc
shl
in
cmp
fndisi(8087
xchg
and
repnz
call
cmp
test
rcl
cmp
orb
shl
shl
xor
cmp
fnsave
iret
out
loope
cmp
fcomp
les
xlat
sbb
mov
addl
divb
not
cmp
int3
idivl
rcl
cli
rolb
decb
mov
nop
aad
in
jmp
xor
ss
hlt
test
stc
inc
icebp
xchg
faddl
faddl
repz
leave
cmp
lret
cmp
ret
fxch
cmp
jmp
mov
fcmovnb
in
mov
cmpl
add
aas
loopne
neg
loopne
loopne
nop
loop
fld1
int3
fucomi
int
ljmp
xchg
xlat
shl
mov
repnz
xchg
jmp
repnz
out
ds
adc
aam
filds
test
mov
in
rcl
rol
cmp
mov
sti
cmp
shl
adc
std
clc
addb
out
aam
sti
call
int3
aas
cmp
int3
shl
std
add
mov
mov
leave
out
ljmp
aam
fsub
aam
in
cmp
rcl
cld
out
xchg
jmp
and
out
xchg
xor
xlat
fcom
cmp
repnz
cmp
flds
mov
in
mov
mov
xchg
mov
out
call
in
cmp
filds
in
ret
in
xchg
not
repz
xor
fdivp
hlt
into
aas
std
repnz
cmp
loope
neg
sti
mov
out
xchg
cli
call
lret
loop
leave
in
repnz
cmp
xchg
sti
mov
loope
hlt
out
test
xchg
cld
roll
jmp
repz
int3
cld
ret
addb
lret
loope
xchg
xor
in
in
out
ror
out
addb
jecxz
in
loope
enter
xchg
test
jecxz
rcl
lret
xor
in
cmp
iret
in
lock
rorl
call
lret
icebp
repz
cmp
int
aaa
std
shl
into
cli
rolb
in
mov
aam
ret
vpsubw
int
aad
ret
out
addl
jmp
int
mov
aad
ljmp
aam
ljmp
ret
cld
clc
fadds
addl
sti
stc
cmc
jmp
cmp
shl
jecxz
repz
into
mul
fucomp
loopne
call
ljmp
in
std
out
aad
fucomip
ret
out
out
aam
shr
in
ret
out
nop
into
rol
aad
shr
fstpt
ror
cmp
fsubp
out
mov
loope
call
xchg
jmp
int
rol
int
int
xlat
cli
aas
repz
mov
lret
test
jecxz
fisttpll
in
out
hlt
std
xor
int3
sti
cld
ss
cli
addl
xchg
ljmp
sarb
ljmp
lock
sti
sar
fucom
clc
shl
leave
sbb
mov
jmp
xor
ljmp
dec
stc
xchg
fiaddl
iret
iret
in
jecxz
ret
sub
fdivrs
xor
adc
aam
mov
loop
xchg
mov
xor
lock
xor
neg
fdivr
shr
jmp
aad
in
mov
leave
mov
loop
xor
divl
out
lret
hlt
std
neg
iret
rcr
test
or
out
jmp
mov
jmp
int3
leave
fdivrs
test
rol
icebp
cmp
stc
repnz
fcoml
ror
int3
repnz
fcmovne
fdivrs
addb
mov
mov
loop
xlat
call
fmul
hlt
lret
filds
test
sti
fdivr
jecxz
sub
ror
shr
ss
int
iret
ror
jecxz
test
in
lds
jmp
fld1
xchg
icebp
mov
mov
ljmp
ljmp
ffreep
loopne
fprem
test
jmp
nop
jmp
cmp
rcr
repz
cmp
int3
fucom
fucom
repz
in
leave
stc
sbb
mov
in
out
lret
fistpll
xor
sti
xlat
out
mov
leave
fldl
fcmovnb
in
fxch
cmp
shl
in
out
std
stc
out
clc
repz
xchg
xchg
mov
ss
icebp
push
cmp
fucomi
out
xchg
sub
adc
add
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
adc
lret
jl
repz
xor
repnz
repnz
in
int
fdivr
repnz
lds
mov
leave
xor
in
repnz
fdiv
call
cmp
cmp
leave
orb
loop
in
xor
leave
sti
out
int3
int3
fsub
cmp
shl
cli
test
jmp
int
std
mov
jmp
nop
into
call
clc
out
aaa
fdivp
enter
test
lock
les
enter
addl
sti
out
fdivl
int
call
cli
cld
filds
out
test
xor
sti
cli
jmp
cmpl
in
aam
mov
mov
lret
repnz
cmc
shl
lret
enter
sti
in
out
fucom
in
out
fisttps
jmp
rcl
cli
iret
std
aas
fdivrl
mul
xchg
fdivp
ret
xchg
clc
fmul
cld
cmc
nop
jmp
lret
fcom
sar
jmp
hlt
ds
in
ljmp
call
loop
cmp
aad
lock
fcom
cmp
fcmovnbe
lret
loopne
mov
xchg
cld
test
sar
xor
fiadds
jecxz
clc
aad
cld
ret
icebp
jmp
mov
xor
ljmp
cld
cmc
incl
fucomp
iret
in
jmp
in
fstp
int3
lret
jmp
divl
repnz
cld
out
aas
and
aam
in
into
fcmovne
addl
lret
les
in
xor
lock
cmc
fscale
fdivrl
cmc
xchg
or
iret
in
jmp
xor
ss
cld
iret
aam
int
repz
lock
test
cli
mov
shr
mov
sub
call
divl
hlt
iret
addb
repnz
out
in
repz
lret
stc
int3
idivb
int
in
out
shr
std
ss
add
lds
dec
rcr
hlt
shrb
xor
fcmovnu
cld
leave
repz
hlt
hlt
cmc
repnz
jmp
enter
lock
hlt
shlb
int
jecxz
ror
cli
loope
mov
sbb
jecxz
mov
jmp
into
loopne
shr
fcmovnbe
lret
cmp
neg
out
xchg
fscale
imul
orl
repz
ret
out
lock
xor
leave
repz
ret
rol
and
repnz
loop
in
lds
shl
xor
cmc
ss
aad
add
incb
and
or
rcl
fsubp
loop
out
vpaddusw
cmp
cmc
repz
jmp
lea
iret
call
ss
sub
out
shl
cli
ds
rcl
sbb
std
sub
loopne
test
xor
fidivrs
cli
icebp
cmp
out
hlt
and
out
mov
shl
shll
ror
fcmovbe
repz
cmp
into
shl
fyl2xp1
ret
jmp
in
loopne
nop
in
int
mov
jmp
fst
out
out
in
test
ret
ds
aad
int3
adcb
rcr
jmp
neg
rcl
stc
icebp
jmp
clc
xor
ret
mov
sub
ljmp
fdivs
xor
test
hlt
aam
xlat
les
xchg
fneni(8087
jmp
out
imul
fcmovnu
xor
sar
int
add
jecxz
mov
aam
mov
fisttpll
out
out
out
int3
cmc
fdiv
out
cmc
jmp
sar
loope
fcmovu
fimuls
out
into
out
fsubr
fdiv
rcl
rcl
std
loop
cmp
aam
std
loopne
enter
rol
in
xor
fcomi
sti
repnz
cmp
loop
test
aam
sub
decb
out
int
call
cld
shr
hlt
in
iret
rcr
not
repz
fcmovnbe
repz
fdiv
in
out
shr
xor
in
addl
cmp
je
movl
jmp
rcl
rcl
roll
lret
cmpsl
sub
jg
lret
jl
cmp
into
hlt
ds
mov
in
fdecstp
jmp
test
xor
aaa
cli
out
std
ror
int
cmpl
repz
shl
cmp
jecxz
iret
cld
rolb
out
div
lret
sub
aas
out
aad
jmp
cmp
xor
out
cmp
std
fcmovnb
ss
sar
aaa
cmpb
sub
aas
add
icebp
ljmp
divb
repnz
in
int3
cmp
imul
loop
fcomp
fdivrp
fimull
fists
xor
aaa
lret
aam
iret
jmp
cmc
loope
into
cmp
xchg
loop
call
xor
fxtract
fnstenv
std
loop
cli
aas
fmul
fiadds
icebp
cli
ljmp
enter
sub
shr
mov
cmp
adc
shr
hlt
stc
stc
enter
in
ljmp
repz
sar
jmp
out
xchg
into
jmp
repnz
cs
call
sti
in
in
cld
cmc
lret
fsubp
in
loopne
mov
xor
out
xor
repnz
fsubr
fadd
test
cmp
aad
ljmp
cld
xchg
out
loopne
ljmp
cmp
in
addl
leave
ret
call
pop
adc
hlt
aaa
aam
aad
in
xor
jecxz
fiaddl
mul
fsub
int
orb
int
hlt
call
cmp
and
add
loopne
vcvttpd2dqx
out
out
enter
clc
out
out
aas
fdiv
jecxz
jecxz
test
jecxz
test
das
in
call
clc
lock
test
xchg
in
shl
out
stc
cmc
rcl
ljmp
cmp
mov
jmp
mov
cli
icebp
into
iret
xor
lret
into
into
cmp
ljmp
testb
loop
iret
int
xchg
out
mov
xor
clc
int
ss
mov
fcmove
lock
call
xor
icebp
clc
cmp
cld
testb
fdivrp
sub
fistl
aad
ret
xor
ss
sti
iret
cmp
rol
mov
int
repz
shl
int
into
ljmp
out
in
xor
hlt
test
jecxz
int3
mov
shrb
lret
shl
cmp
fld
int3
filds
jmp
in
into
int3
xchg
fsub
repz
ljmp
out
iret
cmp
fnop
fcmovb
ret
mov
loop
mov
fmul
enter
out
ret
out
fnsave
shl
repnz
faddp
hlt
repz
rcr
in
loopne
jecxz
out
fisttpl
call
cmp
int
sar
roll
cli
xlat
repz
fdivrl
in
call
in
aam
ret
out
icebp
xor
std
fnstsw
cmp
cld
ret
fisttps
xchg
adcl
ret
cli
in
cmp
addb
loope
mul
sti
incb
xchg
xor
cmp
icebp
rcr
sar
aad
aam
shl
sti
ret
jmp
out
int3
out
loop
ror
divl
hlt
loope
xor
test
test
std
xlat
ljmp
in
in
cmc
loope
xor
xor
cmp
rcl
xlat
loope
ret
fcmovbe
adc
fildl
xor
aad
aaa
lock
int
shlb
stc
loop
fsub
fdivr
std
lret
cld
out
icebp
mov
iret
aam
xor
aaa
out
ss
ds
cmp
test
loope
in
fcmovnu
mov
fldl
out
enter
std
xor
jecxz
sti
test
rcr
sti
aad
lret
mov
cs
xlat
xor
fstp
cmp
fdiv
cmp
aam
loope
call
inc
call
add
lret
ret
int
jle
rclb
sub
sbb
lret
jl
jmp
fstl
loop
fldz
hlt
in
cli
lret
aad
incl
fldl
shl
icebp
out
jmp
in
fsubr
fdiv
aaa
cmp
mov
and
fiadds
test
iret
jmp
into
hlt
out
xlat
int3
int
cli
incl
cld
mov
jmp
jecxz
rcl
std
repz
cmc
jecxz
aaa
rol
lock
jmp
sbb
int3
mov
repz
in
cmp
jmp
repz
out
stc
out
out
fnstsw
cli
fcomip
in
jmp
xchg
jecxz
sub
in
int
lock
cmp
std
lock
fiadds
xor
out
lock
in
lret
cli
sub
inc
jmp
fiaddl
bnd
cli
aad
lret
aaa
loope
cmp
cmc
in
iret
in
xlat
les
jmp
or
out
mul
lock
icebp
ret
std
flds
test
loope
sbb
in
rorl
loopne
xor
aaa
out
sarb
hlt
cmp
stc
into
rcl
ret
jecxz
jmp
out
mov
out
xchg
divl
call
cmp
hlt
test
cmc
aas
out
imul
xlat
fxch
fcmovu
enter
fbstp
repnz
hlt
call
lock
in
rol
ret
clc
stc
lds
fcmovnu
out
in
fadd
out
xor
xor
not
in
icebp
rcl
fcmovu
and
call
stc
shl
enter
xchg
ret
rcl
in
call
loope
fnop
aas
loopne
lock
cmp
fsqrt
fsubr
jmp
fsub
jecxz
rcl
stc
iret
in
aaa
cmp
sub
loop
cld
rolb
mov
mov
loopne
rcl
rcl
shr
stc
ror
cmp
xlat
sti
rcl
loopne
std
fcmovnb
nop
ret
jmp
ret
out
out
int3
icebp
cld
in
ds
xlat
ljmp
fucom
in
iret
divb
lret
std
cli
cmc
sar
sti
loope
call
cmp
cmc
loope
orb
test
jmp
cmp
fcmovnbe
repnz
xchg
xchg
xchg
mov
aaa
aad
int3
int3
jmp
aad
ror
repnz
div
xchg
mov
jecxz
xchg
in
jmp
shlb
std
fcmovnb
out
mul
std
orl
cmp
xor
into
int3
aam
out
cmp
xor
adc
ret
shl
cld
stc
xchg
out
lock
div
cmp
aam
xor
ss
loop
cli
cli
cmp
fldl
mov
fcmovnb
out
cmp
out
cld
std
ljmp
testb
xchg
leave
rolb
out
iret
stc
call
in
cli
in
repz
idiv
xchg
pause
rclb
hlt
sti
int
enter
aam
out
cld
in
testl
fstp
loope
shr
aad
out
icebp
ss
shl
cmp
test
in
fmul
xor
lret
repz
int
cmp
out
into
lock
out
fucomi
jmp
mov
aaa
xor
int3
out
xlat
hlt
lock
xlat
in
fmul
add
out
std
loop
filds
out
iret
lret
call
lock
fcom
loop
in
addl
lret
in
out
mov
shr
ret
cmc
xor
rcl
cld
fstpt
rol
aam
test
iret
test
xchg
jecxz
cmc
sti
cmc
cli
fst
fidivrl
out
fdivr
out
sar
loope
test
ljmp
mov
repnz
xor
int
cmc
int
stc
out
int3
cmp
fsubrp
not
jmp
ljmp
out
xor
shl
shr
enter
add
cld
div
stc
mov
sti
mov
jmp
shll
out
lock
in
mov
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
jbe
adc
in
jg
lret
jl
icebp
cmp
out
ljmp
mov
in
shl
int
xor
shl
icebp
icebp
in
cmp
int3
lds
loop
fcomi
testl
ljmp
cmp
out
lock
in
repz
ret
clc
clc
fdivrp
xchg
rcl
repz
fldcw
int3
ljmp
add
cli
cli
not
mov
in
sti
out
cmc
loop
aam
aad
stc
stc
aaa
idiv
ljmp
mov
neg
jmp
enter
fisttps
fcom
fsqrt
leave
clc
aad
repz
xchg
shl
repnz
jecxz
int
out
loopne
sub
test
cmp
idiv
hlt
cli
aas
cmp
fcmovb
out
lret
testl
xor
cmp
int
loopne
test
ret
sti
in
loop
std
mov
lds
das
in
sti
fidivrl
aaa
fsubr
test
ret
ret
test
in
ror
out
iret
xor
ret
sarl
in
in
repnz
sti
fst
cmp
sti
lret
loope
out
mov
cli
fstl
hlt
iret
sub
fistpll
hlt
cmp
addb
cmp
in
clc
cli
nop
roll
call
hlt
fxch
ret
shl
enter
sti
enter
mov
sub
fdivr
repnz
call
repz
ret
mov
mov
mov
jmp
cmp
xor
inc
stc
fdiv
div
testl
ljmp
cmp
lret
jecxz
rol
clc
clc
xchg
test
jecxz
clc
mov
out
hlt
shl
ss
cmp
repz
in
sarl
cli
jecxz
aam
jecxz
int3
sar
xchg
jmp
test
call
cmp
xlat
testl
fcoms
lret
out
rcr
xor
icebp
loop
aas
repnz
sbb
ret
testl
in
jmp
xor
xor
cmp
into
ret
rol
jecxz
aad
out
xchg
lret
lret
in
in
lret
jmp
cmp
ljmp
in
ds
rorl
or
in
shl
cs
xor
repz
ds
clc
test
cli
clc
in
loope
repz
lret
mov
rol
loop
aad
cld
iret
fsubrp
rcl
shl
repnz
faddl
into
mov
out
std
nop
sub
rcl
aad
xor
lret
int3
clc
cmp
shl
enter
lret
lret
mov
xor
cmp
cmp
xor
rcr
iret
sbb
sar
sarl
ftst
jecxz
int
orb
int3
out
xor
jmp
repz
fucom
testl
rol
in
loop
cmp
hlt
aas
shr
aad
xchg
test
in
out
fsts
shl
idiv
xlat
out
out
cmp
cmp
in
ds
xlat
rcl
neg
test
ret
in
repnz
xor
ss
out
fcmovne
cmc
sti
aad
sbb
ds
sbb
test
cli
in
rcl
lret
rol
out
cmp
in
cmp
loop
cld
ljmp
test
xor
fldl2e
out
int3
lock
loopne
cmp
cmp
aas
hlt
stc
jmp
mov
loopne
xchg
xchg
ret
int
int
fstp
aas
hlt
cmp
sar
ret
rcr
jecxz
repnz
leave
orb
ljmp
shr
aad
sar
xor
fxam
ret
flds
jmp
mov
sub
fsub
fcmovu
xlat
jmp
xor
flds
jmp
test
repnz
cmc
jmp
fmul
clc
into
ljmp
lds
call
lret
ljmp
repnz
aas
int
fdiv
roll
jecxz
push
or
rorl
add
add
add
int3
ret
ds
jge
jae
sub
jg
lret
jl
clc
movl
leave
fnstenv
fidivl
fdiv
stc
fucom
iret
fstp
fsin
sbb
fstp
in
test
std
repz
shll
ljmp
xlat
shl
test
test
int
out
int
in
in
sub
hlt
into
ljmp
out
xchg
call
iret
call
jecxz
lret
shr
into
cli
sar
ss
iret
loopne
xchg
fdivrp
cmp
fdivr
ret
in
ljmp
out
lret
icebp
cli
cmp
shl
into
loope
out
leave
xchg
addb
in
ret
xor
sar
clc
xor
rolb
cmp
xchg
clc
orl
in
aad
call
aaa
lock
lock
cld
in
fiadds
fsubr
test
lret
in
mov
stc
sti
cmp
ljmp
loop
div
fdivrl
in
add
mov
or
aad
aaa
repz
hlt
ljmp
rcl
aam
lock
out
repz
out
loope
into
xor
lret
sti
aam
cmp
aam
cmp
rorl
in
fdivrp
in
in
sub
jmp
xor
divb
sbb
std
ret
fstp
in
hlt
clc
jmp
in
mov
lret
shr
idiv
idiv
xlat
cli
fninit
lret
dec
shl
mov
loope
test
iret
std
jmp
xor
cmp
call
loopne,pt
test
aam
rcr
call
leave
rcl
lret
aaa
icebp
hlt
into
vpsubd
stc
out
xor
faddp
shl
clc
mov
fcmovu
cli
out
repnz
cmc
ret
clc
aam
lret
fst
ffree
cli
not
repz
loop
xchg
out
in
lret
ret
loop
xor
jecxz
ss
fcmove
sar
int3
iret
int
mov
sti
movl
aaa
test
shl
xor
fsub
out
ret
cmp
vshufpd
in
in
in
xor
call
repnz
fstp
into
hlt
into
xlat
out
clc
fsubp
jmp
addb
xlat
cmc
fmul
cmp
int
shr
xlat
add
loopne
ret
aad
rolb
int
sbb
out
fprem
fsubr
out
cmc
out
cmc
aad
fst
cmp
mov
iret
loopne
iret
cli
jmp
icebp
in
fucomp
fsubr
enter
loope
repnz
loope
jecxz
inc
enter
mov
into
test
das
xor
xor
xor
jmp
aaa
rcl
jecxz
fdivp
repnz
mov
faddl
loop
loopne
xor
int3
repz
repnz
cmpb
ret
fsubr
int
ror
rcr
aaa
loopne
cmp
fcmovb
leave
ljmp
cmp
aam
xlat
std
jecxz
cld
int
mov
cs
repnz
fldl
mov
in
std
int3
std
fsubr
mov
xchg
lock
ret
in
lret
jmp
in
cmp
cmp
not
cmc
sar
stc
orl
clc
addl
iret
fucomi
out
cmp
cld
cmp
xchg
fmuls
cs
div
iret
cmp
fadd
repnz
cli
cmc
sar
cli
loop
jecxz
nop
ffreep
xor
cmp
repz
cmp
jmp
jmp
cld
jmp
jmp
in
out
shl
call
rcr
aad
test
sti
jmp
or
mov
out
leave
xor
cs
fucomi
in
out
in
faddl
fdivr
call
jecxz
out
lret
leave
lret
iret
into
cli
in
lock
ret
out
out
leave
into
jecxz
roll
cmc
test
repz
in
test
lret
int3
int
repz
repz
xor
repz
cli
lock
sarb
clc
ret
idiv
xchg
out
into
sub
das
hlt
incl
jmp
mov
jmp
lret
ds
fcmove
fisubrl
xchg
or
daa
jg
lret
jl
call
aas
cld
int3
fcmovnu
ret
fcmovu
imul
loopne
in
in
cmc
test
repz
fdiv
cmp
jmp
ds
fdivr
sti
loopne
mov
clc
call
mov
in
int3
fdivrs
fucomp
cmp
sti
in
ljmp
idiv
fnstcw
int
in
orb
int
icebp
fucom
neg
cmp
iret
ret
aas
repz
repz
mov
test
xlat
in
fdivs
neg
cli
sti
cmp
mov
jmp
sti
icebp
loop
call
lret
repz
cmc
rcr
out
idiv
shl
call
test
in
jmp
dec
aam
aaa
repz
cmp
jmp
stc
xor
sar
mov
cld
std
int
lret
in
not
jmp
ss
xor
stc
stc
enter
call
icebp
cli
lock
lret
aaa
aaa
lret
in
out
rcl
std
aad
xlat
jmp
out
xchg
xchg
out
call
in
xor
enter
in
rcr
rcr
lock
fmul
fmul
fxch
icebp
fmuls
lock
imul
int
repz
loopne
clc
roll
ret
mov
jecxz
in
out
mov
sti
repnz
cli
enter
cmp
in
stc
cli
cld
std
in
jmp
ret
fprem
shl
xlat
aaa
faddl
icebp
out
sti
movb
dec
repz
divl
out
aad
int
jecxz
icebp
sti
ds
sbb
filds
call
shl
fdivs
into
into
aaa
cmc
fstpt
testb
jecxz
fisttpl
mov
sub
div
aad
aad
fiaddl
fisttpl
loop
repz
ds
rol
into
iret
hlt
xlat
leave
ror
sti
int
in
aad
test
loope
rcl
int
jecxz
xor
hlt
ret
cmp
testl
jmp
imul
ljmp
sar
leave
ret
cmp
shlb
rcr
sar
icebp
stc
in
std
loope
std
aas
fdivr
in
in
and
iret
aam
aaa
mul
fdiv
rcl
loope
cmp
cmp
cmp
sti
fcmovbe
testl
iret
shl
int
shr
ljmp
std
cld
fprem1
shl
fcmovnu
movb
call
inc
shl
fnstcw
aam
lock
cmp
fadd
int
and
xor
fcmovnbe
test
xor
in
push
ljmp
cld
in
orl
out
xor
lds
xor
cmc
leave
imul
loope
cmp
vcmpss
lock
mov
leave
sti
test
int
xor
hlt
out
cmp
lock
hlt
aam
flds
out
in
xlat
int3
in
ljmp
xor
aad
iret
out
fcmovnu
fucomip
test
sti
aad
enter
mul
rcr
rclb
xor
fnstenv
aas
in
call
in
out
repnz
int
ljmp
into
jecxz
aad
jmp
lret
lock
ds
loope
cli
mov
test
mov
loopne
jmp
out
flds
neg
out
ljmp
in
call
fidivl
cmp
fcmovne
addl
in
out
fadds
cmp
lock
rcl
jmp
into
std
aas
loopne
ret
movb
out
mov
out
sub
in
lret
in
jmp
loop
repz
cld
std
sti
in
mov
in
cld
fsubr
xor
ret
xlat
aam
fidivl
cld
int
test
out
xor
int3
loop
call
fadd
lret
mov
iret
icebp
in
in
shll
lret
dec
out
rcl
iret
xlat
aas
shl
shl
lret
fildl
mov
not
fsubr
ror
fdivr
leave
cmp
into
fsqrt
cli
idiv
repnz
jmp
sarl
lret
rcr
fsubr
push
dec
subb
lret
jl
cli
xor
sbb
int
test
sbb
jecxz
repnz
call
std
out
stc
into
repz
lds
int
xchg
icebp
hlt
aam
jmp
divl
ljmp
ret
sti
div
jmp
mov
call
mov
shr
rcl
cmc
fcmove
sti
out
in
jecxz
jmp
jmp
fildl
leave
not
xor
lret
fcmovne
out
cmp
ds
fcomp
repnz
fisttps
leave
lret
xor
fidivl
ss
cmp
repz
cmp
fisttps
sti
xchg
shr
ds
in
lret
cli
aaa
int
leave
adc
ret
ffree
loopne
test
addl
mov
mul
in
jecxz
out
fucomi
sti
repz
sbb
out
loope
fdecstp
call
out
ljmp
lret
neg
cmp
icebp
add
rol
into
loop
in
in
in
fdivrp
jmp
int3
xlat
shl
sub
lock
push
out
repnz
jmp
clc
test
jmp
call
xor
ljmp
add
rcl
jmp
loopne
std
mov
clc
div
repz
leave
pushl
cmc
sar
rolb
call
shl
loop
lret
fcmovb
ljmp
jecxz
repz
fdivrs
repz
mov
lret
icebp
mov
in
loopne
lret
xor
div
cmp
lock
xchg
cld
sbb
in
xchg
xor
cmp
lock
lret
fdivrs
sarb
roll
les
ljmp
fnstsw
div
in
rcr
shr
rcr
fcompp
mov
repz
clc
jecxz
sarl
aaa
rcr
shl
sti
xchg
cmc
sub
iret
neg
lret
into
cld
cmc
aad
fld
rcl
cli
fiaddl
loopne
jecxz
in
in
jmp
cmp
les
int3
out
call
aam
in
out
jmp
loop
repz
in
call
in
incl
mov
std
testb
out
jmp
sub
call
cmp
sti
sti
fdivl
ds
clc
aam
out
ret
in
xchg
loopne
xchg
rcr
xlat
loop
sub
cli
test
loope
faddl
iret
lret
in
jmp
cs
mul
fabs
ret
call
ret
orl
or
jecxz
into
aam
int
icebp
leave
xor
cmp
not
repnz
fcmovb
xchg
out
out
shr
iret
out
out
fyl2x
lret
cmc
int3
sar
rcr
shr
stc
xchg
aam
stc
loopne
xchg
ror
icebp
fbstp
lret
loop
iret
fdivl
fcmovbe
sti
cmp
sti
cmp
stc
hlt
aam
lret
jecxz
mov
rorl
bnd
in
std
ret
cli
ror
repnz
orb
jecxz
xor
stc
cmc
in
lret
xlat
ljmp
ret
test
nop
into
jmp
repnz
repnz
cs
lret
test
mul
mov
std
ljmp
sub
repnz
cli
neg
addb
in
loopne
out
mov
ljmp
ret
jmp
icebp
rcr
fdivrs
stc
shl
fcmovu
cmc
hlt
mov
mov
lret
sti
iret
cmc
out
repnz
int3
not
cmp
dec
fcmovbe
in
idiv
in
aas
rolb
jmp
loop
lea
sti
into
stc
jmp
jecxz
jecxz
cmp
mov
lret
std
ljmp
in
in
lret
cmc
call
cmp
int
cmp
cmp
faddp
neg
and
int
out
aas
ret
fmul
clc
fcmovnbe
repnz
loopne
cld
ret
stc
repnz
in
hlt
in
testb
mov
jmp
fcmovnbe
int
loope
insl
lahf
and
jge
pushf
das
jg
lret
jl
leave
shll
xor
hlt
icebp
sarb
xor
fsub
sti
out
jmp
loop
out
xchg
in
ret
div
test
in
lret
lock
cmpb
lock
in
fdivr
in
fistl
loope
ljmp
cmp
std
jecxz
lock
rol
loope
fsubr
in
into
std
lock
in
out
loope
lock
lock
lock
std
xlat
or
test
shl
call
fstp
in
hlt
icebp
xor
cmc
lret
out
iret
fdivrl
cmp
hlt
cld
cmp
rorb
out
test
test
xchg
loop
jecxz
out
xor
xor
fsubr
call
ds
shr
aad
fisttps
or
int3
fmul
aam
testb
jecxz
mul
xchg
iret
std
mov
in
int
xor
xlat
in
sti
aad
dec
sar
in
sti
cmp
cld
ret
lea
mov
xor
aad
jecxz
xlat
icebp
into
fdiv
in
out
std
std
loop
loope
jmp
fimull
loope
sub
shl
imul
out
aas
fndisi(8087
cmp
fcmovnb
repz
fdivrp
loopne
incb
ljmp
call
xchg
fucomip
xchg
jmp
out
repz
xor
add
clc
repz
aad
aam
hlt
mov
in
loope
xchg
shr
shl
cmc
lock
icebp
cli
out
in
cld
sbb
cld
mov
mov
xchg
ficoms
das
into
aam
icebp
xor
jmp
aad
sbb
mov
out
icebp
jmp
lret
cmp
sti
ss
rolb
jmp
cli
in
cli
icebp
xchg
ljmp
cld
cli
ljmp
fcomp
rol
fadd
icebp
into
out
loope
xor
repnz
stc
xorl
out
cli
mov
mov
into
lret
aaa
in
aaa
fcomi
in
fnstcw
call
test
hlt
ret
mul
fadds
xor
out
xor
cmp
hlt
repz
repz
adc
loopne
jecxz
mov
icebp
nop
shl
out
fcmovb
xor
cmp
iret
cmp
test
in
div
fsubp
test
fsubp
aaa
stc
out
into
cmp
std
addb
adc
fmuls
xchg
int3
in
shr
repz
fyl2xp1
aad
aad
not
lock
sti
in
addb
shlb
in
in
fdivrs
aaa
cmp
cli
repnz
rol
ret
jecxz
jmp
mov
out
xchg
mov
ds
jecxz
lret
rcl
cmp
cmp
cmp
stc
loope
xchg
jecxz
loop
xor
out
in
fst
ds
cmp
int
cmp
ffree
rorb
nop
loop
sub
cs
cmp
xor
fcmovnu
cmp
cmp
idiv
fsubr
xchg
addb
lret
cld
out
call
ljmp
in
out
shl
fcomp
aad
int
orb
int3
lds
stc
sub
cli
shlb
fcmovne
loope
jecxz
shr
jmp
imul
ljmp
shrb
call
in
cld
clc
ret
xlat
fsubr
xchg
in
loopne
cli
test
in
ror
loope
loop
cmp
sarl
push
in
sar
jecxz
sarb
call
out
loop
leave
in
ljmp
into
aam
hlt
ds
jecxz
cmp
lock
loop
in
xchg
out
fsubrp
not
cmp
into
in
pushl
sti
cmp
test
ds
mov
int3
iret
xchg
lret
rol
std
int3
iret
out
rcl
cmp
stc
mov
out
clc
int
xchg
in
iret
xor
repnz
out
out
in
clc
ds
call
out
jecxz
enter
std
mov
iret
jmp
cmp
ss
jecxz
add
jmp
iret
iret
sarb
aad
aad
pop
sbb
movl
add
clc
fstp
out
in
stc
leave
in
shr
test
cld
icebp
lret
lock
leave
stc
int3
repnz
shl
cmp
cmc
cmp
fadd
into
xchg
loopne
or
call
aas
clc
out
cmp
fld
filds
loop
shl
les
icebp
idivl
cmc
cli
icebp
cld
fidivs
test
xchg
enter
test
aaa
cmc
jmp
lret
int
xlat
repz
cld
loopne
xlat
xlat
mov
lret
mov
ljmp
aad
call
sarl
xor
repz
in
jmp
decb
ret
std
xor
clc
imul
fmul
jecxz
out
aam
jmp
jmp
ficoms
out
out
out
in
repnz
rcl
hlt
cmp
hlt
repnz
in
or
hlt
rcr
int
out
aaa
out
fildl
aad
repz
mov
loope
mov
sub
enter
repnz
loop
int
xlat
shl
xlat
enter
fcmovbe
sti
cmc
jecxz
lds
lds
fcmovne
clc
ror
aad
iret
loope
shl
in
in
faddl
hlt
xlat
ss
ss
repz
cmpl
cmp
fcomi
cld
loope
xor
or
jmp
sub
cld
hlt
aad
rcr
into
add
clc
enter
loope
cld
repnz
loopne
lret
jecxz
xlat
fst
sar
repnz
sbb
out
cmc
repz
rol
jmp
cmp
xchg
mov
shr
jmp
idiv
out
sarb
shl
test
roll
ljmp
jecxz
xlat
out
test
rcl
xor
aaa
in
std
fmul
cmp
stc
mov
loopne
nop
jmp
hlt
aaa
out
out
repnz
fcos
clc
flds
out
mov
xlat
enter
out
mov
mov
in
test
lock
lret
sub
xor
loopne
fadds
orb
in
jecxz
div
cld
cmp
cmp
hlt
hlt
clc
xchg
jmp
flds
test
cmp
in
xlat
fstpt
in
fadds
test
jmp
dec
xor
out
cmc
in
enter
cmp
cmp
roll
ljmp
int
xchg
hlt
aad
call
xor
enter
in
rorb
loope
test
xchg
int
in
in
call
xlat
xor
aad
aas
aam
repnz
mov
xlat
sti
call
jmp
addl
int
lret
in
icebp
mov
call
xor
xor
cli
leave
lret
aas
repnz
ret
fcmovnbe
mov
in
sbb
jmp
in
aam
out
lret
std
ds
stc
sarl
fyl2xp1
loop
mov
addl
int3
xor
imul
lock
xlat
fsub
std
aad
in
out
enter
out
aam
xor
cmp
into
call
out
cmp
fld
fidivrl
leave
cmpl
xchg
xchg
xchg
xchg
fisubrs
xor
out
lock
int
fcomi
cmp
xlat
aam
test
imul
mov
mov
jmp
ror
in
xlat
icebp
fcmovnu
cmp
icebp
in
fucomp
leave
mov
cld
fsubr
iret
test
hlt
xor
ret
xlat
sti
fcomi
cld
in
fucomi
stc
cmp
jmp
in
xchg
leave
shl
jmp
out
xor
cli
hlt
int3
cli
fdiv
xlat
jecxz
clc
ret
ret
fdivr
sub
in
mov
mov
cmc
iret
in
enter
repnz
lock
aad
xchg
sbb
in
mov
cmc
repnz
cli
out
jmp
ljmp
test
aad
jmp
out
jmp
xchg
lret
fdivrl
hlt
ret
cmp
cmp
ss
hlt
aas
in
loop
ffree
call
fldl
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
loopne
dec
push
cmp
jg
add
rolb
enter
stc
out
fidivrs
aam
loop
out
stc
xchg
xchg
call
jmp
imul
int3
fxch
adc
cld
aam
shl
fsubp
fucomp
ffree
fucompp
mov
std
cmc
cld
out
cmp
xor
cmp
call
repz
ret
cld
mov
mov
fcomip
incb
shrl
fcomp
cmp
fucomip
cli
rcl
repz
not
repz
decb
in
rol
out
call
sti
les
repnz
repz
ret
aam
mov
jmp
out
jmp
xchg
jmp
jecxz
xor
mul
out
sar
aad
std
cmp
repz
cld
icebp
lret
out
add
into
xlat
call
faddl
in
ds
ljmp
dec
fcmove
ljmp
jmp
adc
into
lock
xchg
out
loop
jmp
aam
das
fxch
repnz
aad
lock
lds
std
ljmp
xor
xchg
lock
xor
ds
aas
lock
div
or
mov
sbb
fcmove
out
int3
rol
xor
iret
lock
iret
shll
cli
addb
fcmovnb
fcmovnbe
sub
cmc
xor
enter
out
idivl
clc
sar
aad
sbb
in
enter
and
int3
xchg
xor
xlat
out
fsubr
cmp
int
shl
vpsraw
rolb
in
cld
repnz
jmp
not
int
int
clc
int3
ret
cmc
xor
loop
mov
shl
icebp
cli
jmp
aad
xor
aad
int3
call
in
cmp
aas
fcmovnu
out
jmp
jecxz
push
int3
mov
xlat
lret
ljmp
rcl
lock
in
cld
cli
pop
out
xchg
loopne
int3
xlat
ljmp
fistpll
rcl
int
jecxz
test
test
jmp
and
nop
xchg
in
xchg
icebp
xor
cmp
aaa
fyl2x
cmp
lock
shl
lds
ljmp
into
lret
shr
ss
fiaddl
call
ljmp
sarb
in
ss
xlat
call
jmp
sbb
stc
faddl
mov
into
fimull
in
jmp
sarl
fcmovne
repnz
cld
shl
aam
in
std
xchg
icebp
lret
mov
iret
aas
iret
ret
lock
sarl
cmp
test
ror
cli
loop
icebp
addb
fldl2e
mov
sti
cmp
cmp
stc
into
jecxz
test
repz
aad
icebp
shlb
out
iret
cmc
xor
or
bnd
cli
sub
int
orl
mul
ss
jmp
ljmp
fidivrl
hlt
clc
std
leave
add
jmp
repz
xchg
repz
hlt
in
cmc
int
cld
repnz
cmp
ds
std
icebp
aam
in
out
xchg
in
out
mov
aad
jmp
sar
ss
cmp
ds
cmp
ds
loop
clc
loope
std
jecxz
addb
leave
jmp
xor
in
in
xlat
fsubr
shl
repz
fcom
xlat
cli
fucomi
fiaddl
xorl
clc
aad
fdivs
out
aad
std
shr
cli
aas
aam
aam
xchg
stc
out
call
ss
neg
cmp
fdivrl
repnz
xchg
stc
enter
jmp
fists
ffreep
stc
aad
leave
stc
repz
icebp
sar
lock
rolb
mov
mov
hlt
aaa
xor
ret
fucomp
out
call
sar
repz
loop
mov
iret
mov
into
cs
into
clc
loopne
cmpb
repnz
clc
mov
loop
std
mov
imul
aad
into
repnz
cld
xlat
cli
fneni(8087
jmp
hlt
add
loopne
out
int3
out
imul
rcr
lret
aaa
xor
lret
iret
sar
fincstp
jmp
clc
jecxz
mov
mov
rcr
rcr
hlt
in
hlt
aad
stc
int
faddl
and
lret
lret
out
lock
neg
in
xor
cmc
fmulp
aam
not
ret
aad
clc
fninit
icebp
mov
repz
repz
leave
enter
out
fucomp
fcmovnu
jecxz
int3
ds
call
jecxz
in
rcl
jmp
xor
sarb
icebp
ss
fnstcw
out
adc
test
jmp
call
push
xor
push
movl
jmp
into
rol
aad
rcl
jmp
movsl
fwait
cmc
and
jl
les
iret
std
idivb
xlat
out
loope
addb
lret
icebp
lret
icebp
xchg
stc
lret
out
in
cld
fnsave
cmp
incb
call
std
les
xchg
xor
test
lock
cld
sar
lds
jecxz
out
fucom
int3
std
mov
out
cli
aad
iret
cmp
shl
aas
hlt
cmp
mul
stc
out
into
fcomp
lret
aam
out
stc
fprem
out
cmp
fcmovnu
icebp
sbb
loopne
mov
out
repnz
leave
fsubrs
fucomi
fcmovnu
fst
into
fcmovbe
lret
repz
repz
mov
loope
xchg
icebp
enter
in
cli
in
iret
rcl
hlt
loope
jecxz
xor
jmp
fisttps
ds
cmp
rcr
cmp
adc
aad
loopne
testb
icebp
in
test
frstpm(287
ror
shr
loope
loop
iret
repz
aam
in
lret
flds
rorb
ror
lock
cmp
int
out
call
loopne
repz
inc
ret
jmp
into
in
xor
aam
fstp
xor
jmp
stc
call
incb
rcl
out
lret
iret
int3
ljmp
clc
fucomp
fsubrp
loope
fadd
sti
lock
jmp
in
ror
iret
ss
xor
fiadds
loopne
mov
rcl
repnz
clc
cli
fxch
fistpll
call
int3
rol
testl
ljmp
xor
fucomp
ljmp
sti
repnz
rol
sti
in
iret
orl
rcl
fdivrs
cmp
in
loopne
aad
out
leave
xchg
sti
test
in
jmp
jmp
iret
cmp
call
std
rol
rcr
fdivrp
jecxz
mov
loop
jecxz
sub
cli
out
stc
fdivrl
clc
rcl
shl
repz
loope
fst
decb
mov
nop
out
loopne
hlt
out
cmp
out
test
ds
loop
lret
xchg
xor
int
aam
aad
clc
cmp
cmp
jmp
clc
in
aam
aam
jecxz
nop
into
loopne
xor
lret
int
cmp
iret
sti
sar
in
repnz
test
mov
lret
call
in
sub
loopne
fdivrs
ss
aam
iret
fadd
out
mul
enter
jmp
lock
idiv
repz
cld
aas
sub
out
jmp
fsubp
ljmp
xorb
lret
in
repz
xor
test
cmp
stc
movl
xchg
xchg
sub
fcmovnbe
out
xor
cli
fcom
decl
jmp
xchg
aad
cmc
xor
int
divl
ljmp
fsub
fucomip
ljmp
icebp
ljmp
enter
out
cmc
lret
lret
repnz
int3
cmp
add
faddl
std
cld
out
fsubp
out
out
int3
out
cld
test
xor
out
mov
clc
test
mov
in
shl
xor
clc
clc
not
das
aaa
out
fninit
lret
jecxz
ds
cmp
sbb
sbb
cmc
xor
out
xor
cld
out
cli
jecxz
stc
in
cmc
jecxz
xchg
cli
flds
out
cmc
mul
leave
aad
cmp
aas
test
xlat
std
repnz
fsubp
mov
mov
lock
repnz
neg
fnstsw
loopne
or
mov
jmp
lret
sti
loop
out
in
int
cmp
cmp
neg
incb
call
aaa
cmp
fcmovnbe
int3
call
xor
ret
loopne
cmp
cli
cli
ffree
icebp
out
jecxz
jecxz
ss
shlb
sub
xor
cmp
loope
cmp
shr
aam
loop
out
fmul
fucomi
test
out
div
in
int
cli
in
sti
rcr
in
loopne
xchg
repz
test
in
cli
ljmp
out
aad
jmp
call
repz
cli
test
ljmp
xchg
sub
in
fmul
xor
lret
jmp
loope
test
in
neg
in
loop
sub
mov
enter
xlat
in
cli
fxch
xlat
cmp
loope
ds
mov
out
jmp
shl
into
out
cmc
aaa
lret
shl
in
int
lret
movl
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
daa
aam
push
sarb
add
iret
aad
xlat
fyl2x
fsubr
jmp
out
mov
movl
fnstenv
shr
or
fdivp
cmc
test
les
out
fcmove
in
fnstsw
rcl
aad
rcr
faddl
enter
xor
xlat
out
lret
ds
cmp
sti
loop
and
mov
lock
shr
not
ss
shl
aas
cmp
lock
rcr
std
cmc
mov
test
orb
aam
aad
adc
out
fcomip
jmp
hlt
cli
sti
loop
mov
sti
sub
xor
int
int
ss
cmp
jecxz
stc
stc
cmp
cld
sar
in
into
mov
mov
cs
xlat
sarb
clc
rcl
xlat
repz
loope
mul
ret
clc
aam
fld
lret
addl
in
fdivrs
fcmovnb
out
in
loopne
out
mov
mul
xor
rolb
cmp
lret
fiaddl
std
repnz
xchg
in
divb
ror
sti
xor
fyl2xp1
test
std
cmc
movb
xchg
out
cld
fsub
repnz
ljmp
cmp
cld
enter
in
cld
clc
sub
into
cs
aaa
jmp
stc
ds
cli
aam
in
ret
testl
in
loopne
jmp
clc
fdivr
enter
cmp
orl
icebp
loopne
xchg
jmp
fld
cld
call
testb
fiaddl
fcmovbe
sub
int
aaa
ss
sub
cmp
sti
sarb
rolb
jmp
out
repnz
ret
repz
sarl
cmp
fcmovnb
stc
in
loop
leave
lret
mov
test
test
ret
icebp
fmul
enter
aaa
cld
repnz
ror
fadd
out
mov
mov
popl
out
stc
stc
fst
stc
enter
cmp
icebp
aad
jmp
sar
out
in
out
out
in
icebp
lret
sti
sar
ljmp
xlat
incb
ret
ret
clc
and
xchg
xlat
into
shl
sub
in
std
cmp
cld
xor
fcmovu
repz
repnz
ljmp
vpsubq
in
loope
loope
cmp
cli
fnop
cmp
fcomp
ds
into
out
out
xchg
in
hlt
iret
jecxz
cmp
dec
rol
out
faddl
in
shr
int3
loopne
into
sti
leave
stc
std
repz
out
loopne
sti
cmp
xchg
jmp
cli
out
mov
test
hlt
rcl
lret
leave
hlt
fsqrt
fdivrs
icebp
loopne
repz
call
loop
popl
mov
les
clc
fdivrl
cmp
icebp
shl
fadds
iret
out
int3
xchg
xchg
xor
leave
out
cmc
divl
sarl
jmp
aad
rol
sbb
int
decb
divl
sarl
call
leave
call
repnz
hlt
cmp
fcmove
in
out
xchg
in
fsubp
lret
out
cmp
lret
out
filds
fadd
fcom
in
in
out
xchg
out
das
in
out
das
cs
ds
call
loopne
fpatan
aas
in
sti
clc
neg
in
cld
out
lea
imul
fxch
iret
fdivrp
shr
int3
lock
loope
cld
fcmovnu
jecxz
call
icebp
loope
cs
rol
enter
stc
repnz
into
rolb
aas
mov
std
or
cli
mov
fnstenv
iret
xor
sti
int3
hlt
sub
ds
fyl2xp1
in
std
out
cld
cld
loop
enter
ret
int3
mul
fstpt
lock
lock
div
filds
cli
lds
mov
xorl
shll
in
iret
enter
roll
hlt
adc
test
hlt
ret
in
lret
int
aaa
aas
lret
cmc
out
aaa
not
sbb
sti
in
test
fdivrp
into
loopne
fabs
icebp
sti
cmc
jmp
out
fcmove
ds
fld
sbb
ret
test
cmc
loopne
jmp
in
enter
in
iret
lock
cli
dec
leave
loopne
orb
ds
repnz
fmul
cli
aas
xor
int
dec
iret
repnz
fstpt
loope
sbb
out
leave
sti
test
test
xor
fcmovnbe
into
std
xlat
in
std
aam
mov
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
les
add
ret
fcmovnu
lret
int3
mov
jmp
in
int
hlt
in
cmp
shl
ds
iret
shr
out
cmc
lock
aad
filds
cld
nop
in
xor
jmp
out
jmp
out
test
roll
aas
ds
fldl
in
shl
sub
into
call
int
loopne
out
cmpb
clc
in
leave
int
sti
jmp
xor
mul
cmp
hlt
out
ljmp
loope
aam
mov
and
loopne
rcr
pop
cs
ret
in
into
cmp
jecxz
fdiv
rcl
aas
icebp
test
fcmovnb
jmp
rcl
div
aad
icebp
repz
jmp
testl
sub
out
mov
fsubr
in
stc
leave
fxch
cmp
lock
int
ret
ss
sti
shl
std
fldl
ret
out
icebp
mul
ljmp
fstp
std
ds
aam
out
sti
ljmp
jmp
xor
not
aaa
jmp
call
hlt
fidivrs
loopne
in
aam
cld
loope
in
shr
out
loope
cs
hlt
cs
out
ss
cmp
cli
out
out
fcomp
clc
out
std
xchg
shl
in
sarb
aad
jmp
fprem1
sbb
fcom
mov
test
shl
bnd
xor
test
imul
cld
cmp
test
mov
rolb
lock
fcmovnu
xlat
fdivrp
call
repnz
ret
aam
lret
xchg
sub
icebp
mov
int3
ror
repz
cld
lock
in
call
ds
loope
aam
testb
ret
cmc
icebp
cmp
clc
out
in
cmp
cli
out
loope
ror
fdiv
in
vfrczpd
jecxz
stc
int
icebp
dec
into
cmp
adc
sti
shr
mov
mov
cli
in
int3
jmp
sub
shll
imul
rcl
xlat
incl
sti
and
fsubp
loopne
mov
nop
mov
enter
xor
lock
fucomip
xor
hlt
fstp
xchg
cmp
out
out
and
fidivs
loop
lock
jmp
cmc
cli
sar
loopne
out
cld
lock
call
rol
lock
aam
in
cld
std
rcl
fdiv
repnz
fsub
fadd
fcmovb
cld
std
sub
lock
fsqrt
cmc
lret
rcl
cmp
out
testb
mov
enter
shl
lock
in
fpatan
clc
cmc
in
in
fucomip
ret
mov
mov
xchg
xor
ljmp
cmp
sti
ror
cld
fstp
push
test
cmc
idiv
in
leave
lret
mov
fildl
aam
iret
cmp
fdivr
fnstsw
rcr
rcr
loop
jmp
mov
test
and
shrl
in
rcl
out
loop
out
aas
iret
dec
aam
les
shl
ret
rol
int
cli
shr
incl
xor
hlt
cmp
aaa
fcmovnbe
sti
cmp
ljmp
ffree
out
iret
ljmp
lock
in
rcr
xlat
icebp
cmp
call
fndisi(8087
xchg
fsin
mov
aam
in
lock
std
out
loope
int3
xor
call
mov
mov
incb
in
xor
cmp
sar
xlat
xlat
cmp
in
faddp
idiv
mov
ds
xlat
test
fcmovnu
jecxz
mov
jmp
fsub
lock
clc
aam
rcr
repz
ds
std
jecxz
jecxz
int3
mov
lea
loope
xor
cmp
xor
or
ds
aad
xlat
mov
lret
xchg
shl
in
cs
fucom
repz
fsubrp
lret
stc
test
call
test
iret
in
ror
std
mov
ret
xor
in
fdivr
fdivrs
ret
xchg
aam
in
xchg
xchg
adc
aad
repnz
ror
cmp
cld
fcmovnu
sarl
cmp
not
add
hlt
call
int
std
jecxz
cmc
xor
lret
stc
icebp
hlt
xor
cmc
loope
jecxz
in
fneni(8087
fucomip
out
int3
shl
iret
shr
ret
cmp
hlt
test
loopne
cld
cld
ret
std
out
call
rolb
loop,pn
sti
test
out
aam
rcr
neg
mov
int
std
rcl
shl
jmp
repnz
xor
fnstcw
cmp
xlat
loopne
std
out
lock
call
lret
loope
out
loopne
iret
in
out
test
repnz
xor
in
out
out
mul
enter
xor
jmp
xlat
ror
fcmovu
fcmovne
sbb
aaa
pop
push
lret
jg
add
loop
in
xchg
xchg
repnz
ret
shlb
cli
jmp
cmpl
lock
jmp
add
ljmp
leave
cli
stc
xor
push
icebp
call
cmp
aam
aam
xchg
leave
lock
ljmp
lret
out
xlat
sarb
stc
fldl
sar
xor
mov
lret
fsubr
mov
jmp
jmp
fidivrl
addl
test
leave
in
std
out
aad
vpinsrw
xor
hlt
lock
sti
repnz
ret
fcmovu
adc
jmp
mov
shl
sti
out
sti
into
cmc
cld
sti
cli
fdivrp
flds
sti
out
cmc
mov
loopne
hlt
int
std
fcmovu
fcom
repnz
into
loope
clc
mov
hlt
out
lret
sti
sti
iret
in
loope
lret
hlt
jecxz
xor
leave
loopne
ret
ffreep
cli
iret
cmc
aad
cld
adc
lret
lock
ljmp
fcomi
jmp
hlt
xchg
leave
in
cli
jmp
fstl
out
repnz
cmp
fmul
rcr
into
loope
and
in
aas
loope
xchg
xor
out
jmp
cmp
sbb
loopne
les
mov
sar
in
xchg
shl
idivl
lock
ds
ds
xlat
neg
loop
repnz
mov
int
xchg
xor
int3
xor
out
cmp
cmpl
cmc
leave
in
leave
loopne
mov
mov
clc
lds
in
hlt
dec
icebp
in
cmp
cld
int3
out
test
fsubr
xor
test
in
mov
xor
leave
loop
xor
stc
sub
xor
out
call
out
call
out
in
call
ljmp
out
cmp
mov
clc
leave
xchg
ror
xor
out
ret
call
ss
cmc
cld
cmp
in
mov
in
ror
lock
jecxz
not
xor
ret
repz
aad
lock
roll
mov
lret
xlat
lret
shr
rcr
repz
div
hlt
out
xrelease
cli
fneni(8087
leave
jecxz
dec
cld
iret
mov
mov
mov
int
aaa
shll
ljmp
out
call
test
std
loope
in
xor
imul
xor
xor
iret
test
aam
ret
ljmp
mov
out
xrelease
hlt
rcl
out
aaa
int3
out
int
clc
roll
xor
loopne
sti
or
lret
xchg
out
int3
lret
fpatan
rcr
lret
out
into
ror
vpsadbw
cld
mov
out
jecxz
mov
jmp
sti
fcmovne
idiv
out
fsubr
test
stc
cmc
std
inc
aam
loopne
int3
jecxz
addl
lret
into
out
leave
out
lock
xlat
aas
clc
std
loopne
in
std
iret
xchg
std
enter
ret
loop
in
in
fidivs
cmp
cmp
in
sbb
fiadds
xor
ret
xor
into
fnstcw
fcmovu
repnz
mov
jecxz
fincstp
enter
jecxz
cmc
lret
iret
hlt
int3
int3
aad
sti
cmc
lret
imul
jecxz
ds
xchg
out
xchg
loop
ffreep
jecxz
fmulp
int3
leave
hlt
in
fdivr
enter
loopne
in
fidivrl
ret
incb
decl
lret
cmc
xor
cmp
cli
dec
std
shl
fiaddl
xchg
out
nop
mov
xor
mov
cmp
aad
std
repz
xlat
cld
ljmp
fcomip
fdivp
rcl
sub
sarb
ret
cmp
sar
stc
cli
cld
in
fimull
loop
hlt
xlat
hlt
hlt
aam
ds
icebp
test
loope
aam
call
loope
sub
in
aam
cmp
xor
fsubr
idiv
into
cmp
clc
xlat
in
leave
imul
roll
shlb
xor
jmp
loopne
fistpll
in
jecxz
or
ljmp
hlt
aaa
jmp
shr
stc
call
jecxz
out
testl
mov
lock
sti
out
aam
out
cmp
out
rol
cmp
loope
fimuls
ljmp
xor
jecxz
in
shl
out
aam
std
xchg
iret
cmp
int
icebp
fldlg2
xor
int
iret
lret
fcmovb
iret
les
loope
mov
jmp
mov
hlt
mov
jmp
leave
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
enter
aaa
lock
fdivr
cmp
fcmovnbe
loop
and
fdiv
shr
mul
filds
iret
ljmp
ret
fidivrl
in
test
vpaddw
std
loope
std
out
shl
xor
int3
out
in
sarb
into
sar
in
cmp
or
lret
in
xchg
int
ljmp
lret
lret
lret
out
shr
cmp
cmp
out
loop
fcomip
jmp
lret
aad
repz
loopne
cmp
sti
in
ljmp
fcmovne
cli
loopne
sbb
fmull
xor
stc
into
enter
in
rcl
repz
imul
ret
cmc
test
fxam
cld
aam
xlat
and
cli
loop
cld
shr
mov
xchg
xchg
xchg
aas
stc
loopne
xor
cli
out
sti
cmp
jecxz
lret
loope
test
out
cmp
stc
clc
mov
mov
lret
stc
mov
call
aam
sarl
cmc
jmp
cli
fucomp
jmp
in
mov
mul
in
int
repz
fmulp
icebp
cmpl
lock
in
call
in
icebp
fadd
cmc
shl
cmc
int3
icebp
aad
icebp
lock
in
loope
rol
std
testl
std
xchg
in
fdiv
jmp
aaa
aas
test
loop
shl
leave
mov
int
addb
call
leave
out
call
ror
out
call
lock
ljmp
idiv
in
in
into
sti
shr
stc
cmpb
icebp
mov
hlt
std
std
ds
lea
sub
xor
int3
cmp
into
cmp
fpatan
out
cmp
jmp
clc
sar
fmulp
dec
iret
jmp
lret
shrl
into
std
into
fsubr
icebp
in
out
iret
fdivrl
lock
fcmovbe
inc
cmp
xchg
iret
repnz
icebp
stc
cmp
cmp
cmp
ds
lock
in
out
xchg
jecxz
xor
aad
xor
aam
repnz
loopne
xchg
not
enter
ljmp
ror
jmp
shl
in
jecxz
fcmovb
add
out
in
lret
repnz
mov
aas
call
std
cli
fxtract
std
cld
repz
loop
jmp
fmuls
mov
lret
xor
xlat
enter
shl
sti
xlat
in
cmp
stc
ljmp
repz
aam
leave
cmp
cmp
in
std
test
leave
test
repz
shl
in
repnz
cmc
icebp
rcl
cmp
aas
cmp
out
cld
fadds
enter
repz
cmp
into
xor
fildl
sub
in
mov
mov
div
iret
int
out
ljmp
clc
fldl
sub
xchg
jmp
call
icebp
aas
aad
sti
rcl
int3
xlat
std
hlt
call
mov
filds
fcmovu
lret
rcr
neg
loope
rol
neg
cli
jecxz
loopne
loope
fmulp
xchg
mov
vpminsw
xor
std
repnz
shl
cmc
ret
iret
stc
cmc
jecxz
hlt
and
xlat
ret
int3
rol
leave
aaa
out
in
repnz
lock
stc
cmp
std
lret
test
out
in
out
repnz
xchg
loope
xor
out
xlat
rcr
repz
idivl
mov
int
out
incb
lock
in
test
aad
icebp
ljmp
test
mul
jmp
ror
shl
in
cmc
stc
fnstenv
int3
cld
cmp
or
into
ds
cmc
jecxz
fdiv
ljmp
int3
ret
lret
hlt
out
aas
cld
xlat
shr
in
aas
in
mov
loope
incb
test
iret
das
cmp
aad
sar
lret
into
shlb
mov
jmp
mov
in
lret
addb
repz
not
repnz
stc
into
iret
int3
ret
xchg
loop
aam
out
repz
loop
out
in
fxch
aaa
jmp
ds
jecxz
mov
test
faddp
fcmovu
lock
and
xor
out
cmp
shl
cmpl
sbb
fsubp
ljmp
jmp
aaa
call
xlat
aaa
cmc
repnz
repnz
ret
ds
cld
mov
out
into
fnsetpm(287
test
test
cs
jmp
cmp
cld
int
fidivl
fstpt
in
fdivrl
cmp
add
xchg
jmp
fcmove
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
dec
cpuid
aad
jl
add
leave
jmp
ret
xchg
loop
jecxz
out
cld
ret
lret
xchg
cmc
aam
xlat
jmp
jmp
jmp
sti
lock
repnz
std
mov
loopne
repz
xchg
out
out
out
lret
cmp
adc
hlt
rcr
faddl
out
cli
fsubr
jecxz
fisubrs
in
sti
aaa
bnd
xor
ror
ret
fdiv
hlt
call
jmp
fdivrp
test
lret
shl
icebp
out
ljmp
addl
out
lret
cld
call
cmc
xor
leave
sti
cld
lock
cmp
fsubp
iret
int
xlat
add
aam
fadd
fdiv
loopne
shr
xchg
lret
lock
fdivr
clc
loopne
xlat
lock
addb
lret
xchg
xchg
xchg
fildll
xor
ljmp
shl
jecxz
cmp
sar
jmp
jecxz
ret
in
out
xor
xor
in
lds
sarb
int3
aad
fld
loop
out
out
int
xor
shl
ret
ror
cmp
std
shl
lock
stc
fucom
xchg
sti
lret
out
leave
xchg
ljmp
cmc
lret
out
fcmove
idiv
sar
rol
rcl
out
fcomi
iret
std
ljmp
aaa
jmp
stc
cmp
cmp
jmp
clc
into
call
fdivp
loopne
fucomi
jmp
xchg
in
lret
aad
xlat
xor
cmc
std
call
xlat
aad
cld
fxch
in
ret
mul
xchg
les
xor
hlt
in
fcmovu
fldl
test
decb
shl
loope
cmp
shl
in
fnstenv
cmc
int3
jecxz
test
mov
stc
leave
xchg
ljmp
jmp
stc
clc
cmp
ss
cmp
lock
div
cmp
out
icebp
out
loope
lock
jmp
in
lret
inc
clc
sti
dec
cmp
hlt
lret
in
mov
fcomi
xchg
ror
icebp
lds
hlt
repz
shr
shl
cmp
mov
fstp
lret
roll
das
loop
fcmovne
in
aam
cmp
addb
cmp
mov
fsubp
int3
out
into
sub
repnz
loope
in
cmp
loope
test
call
mov
clc
cmp
int
out
lock
loopne
fucom
xor
jmp
xchg
mov
fisubrs
repz
fldpi
fucompp
icebp
lret
out
std
out
hlt
test
mov
leave
jecxz
cmp
into
xlat
ror
ss
int3
cmp
loopne
fucomip
in
aam
ror
aad
das
cmp
clc
int
int
icebp
cmp
xrelease
mov
int3
into
fdiv
in
ljmp
iret
ret
faddl
out
mov
shl
in
hlt
out
cmp
frndint
fadd
shl
ret
testb
loope
loop
xchg
ds
xlat
lret
out
cmp
addl
out
mov
out
ljmp
rcl
loope
in
in
rol
cli
jmp
xlat
int
lret
ret
int
ljmp
out
loop
int3
stc
sti
ljmp
movl
mov
loope
xor
ljmp
iret
xor
loope
fdivr
hlt
cld
fisttpll
mov
out
ds
shl
lret
lret
ljmp
loopne
loope
fadds
icebp
loopne
fldcw
repnz
leave
cmp
test
test
std
fildl
nop
jecxz
fmulp
icebp
repnz
hlt
int
icebp
out
lret
lret
cld
cmp
loop
imul
hlt
aad
sti
into
xchg
in
leave
fucom
xchg
int
jmp
repnz
xor
jecxz
loop
rcl
aas
mov
xchg
xchg
call
jmp
aam
roll
lock
clc
jmp
fcomi
int3
xchg
leave
std
int
call
xor
divb
shl
test
loop
fisttpl
movl
hlt
ret
jmp
int3
out
jmp
loop
test
roll
or
test
jecxz
int
jmp
int
cld
fucomp
int3
loop
lds
xchg
sti
int
std
loop
aaa
fsub
fcmovu
fdivl
out
enter
jecxz
ffreep
ret
call
enter
shrb
in
imul
stc
shl
in
mov
mov
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
pop
pusha
jno
mov
jg
add
cmp
mov
in
out
out
nop
xchg
hlt
in
cmp
repz
fdiv
out
ret
leave
in
stc
fdivr
decb
aaa
call
aaa
xor
in
not
fcmovnb
shl
in
aam
out
nop
fsubrp
iret
enter
out
aam
std
rcr
cmp
sarb
aad
out
in
hlt
mov
test
fmuls
ret
sarl
out
int
shlb
cmp
fdiv
and
stc
ds
std
test
lret
loop
int3
call
jmp
cli
jmp
ljmp
ret
sti
rcl
ret
lret
std
out
mov
stc
cmc
clc
ljmp
sbb
lock
and
ret
and
xorl
leave
leave
xor
sar
lock
lret
call
sarl
cld
call
aad
sarl
xor
fdivr
xlat
repnz
enter
aam
stc
in
loope
call
jmp
xchg
mov
ds
loopne
fcmovnu
cld
xor
fnstcw
fcomp
test
in
out
mov
decl
loopne
ds
ljmp
leave
aad
stc
rol
into
out
ffree
hlt
jmp
xchg
mov
fdivp
loopne
int
ss
ror
std
xor
xchg
std
lret
out
lds
fld1
fnstcw
cli
leave
rcr
cmp
into
ret
aam
addb
cld
mov
jmp
std
aad
sarl
fucomip
sub
repnz
std
xchg
repnz
sar
shlb
xor
cmp
std
hlt
sar
div
lret
ds
test
jmp
fimuls
shl
fld
fdiv
idivl
in
repz
xlat
repz
cli
enter
mov
mov
ss
xor
lret
xor
fyl2x
sarl
loope
std
hlt
int3
loope
jmp
and
cmc
in
std
std
fdiv
lret
icebp
lret
call
in
roll
mov
fisttps
into
out
lret
rcr
cmp
roll
in
leave
mov
or
repnz
shr
jmp
fcom
repz
call
fildl
std
and
cli
lock
rcl
in
loopne
repnz
ss
std
fdivr
ret
fst
jecxz
cli
loopne
loop
call
mov
iret
loop
xlat
in
repz
jmp
and
cmp
vshufps
cli
mov
mov
sub
int3
in
out
fcmovbe
aad
or
rcr
sbb
loop
sti
out
leave
xchg
xchg
xchg
xor
xor
fadd
out
lret
ljmp
loopne
mov
fucomip
out
out
shl
hlt
ljmp
fcmovne
cmpb
out
clc
loopne
addb
or
cs
out
test
int
adc
in
fnstcw
loopne
jmp
leave
std
in
adc
out
sub
xor
lock
cmp
div
cld
cld
cld
cmp
shl
mov
fcmovbe
adc
leave
fidivrl
clc
call
ffreep
testl
fdiv
orl
cmp
in
cli
cmp
loopne
testl
jmp
xchg
shr
ss
lret
cmp
fucomip
int
in
cmc
lret
out
leave
mov
std
into
popl
aaa
aaa
fstp
jmp
iret
ret
fldl
icebp
int
xchg
in
divb
aam
lret
ljmp
sti
cld
shl
not
xchg
dec
in
int
in
fdiv
out
int3
ds
leave
call
aam
in
cmp
out
vcmpsd
cmp
incb
ljmp
in
lret
incb
stc
aas
sar
out
in
iret
fsubr
xchg
int3
call
repnz
stc
xor
cld
idiv
jecxz
into
xchg
test
sub
sub
repz
ljmp
ffree
xor
int
in
addb
sbb
xlat
clc
ljmp
mov
lock
shl
int3
xlat
fdivr
repz
shl
fincstp
hlt
aad
mov
decl
lret
fmull
rcl
fdivl
xor
rcr
hlt
clc
icebp
sar
fucomip
loopne
addl
iret
xor
icebp
lock
loop
jmp
in
jecxz
loop
xor
in
repz
ss
cmc
lret
aad
out
fcomip
orb
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
shl
jg
add
loope
cli
fucomp
ljmp
out
iret
sub
xor
xor
aas
shl
shl
fst
fimull
in
fucomp
cld
shl
ret
int
ss
rcl
ror
fcomp
int3
iret
sti
repnz
mov
icebp
hlt
fnstenv
aad
fiadds
addb
addl
shl
xor
xor
std
sar
ret
cmp
aad
ret
leave
and
lea
hlt
leave
int
repnz
test
adc
in
lea
fcoml
ss
xor
fistpll
sarl
call
std
loopne
fsubp
lret
in
leave
in
repz
das
int
in
ljmp
roll
out
mov
out
fsub
hlt
in
iret
xlat
lock
xor
leave
ds
shl
vcmpss
rol
int
xchg
mov
in
fadd
xor
ror
call
sti
lret
cmp
loope
mov
xchg
fndisi(8087
mov
int
in
in
iret
shll
cmc
int3
shr
ret
aad
hlt
movl
xchg
idiv
cmc
in
rcl
cmp
aam
addl
enter
cli
in
sti
test
repnz
in
ror
sar
idiv
into
test
cmp
cmc
ret
fsub
cld
fldl2t
xchg
lret
fiaddl
in
into
div
hlt
push
jecxz
fadds
mov
xchg
jmp
xor
cmp
out
out
cmp
out
loopne
ljmp
mov
hlt
out
jmp
icebp
repnz
hlt
in
fdivr
test
fsubr
out
sbb
repz
rcl
out
shl
cmp
imul
aad
cmpb
loope
enter
mov
mov
ss
sar
call
cmp
shl
ss
ret
in
mov
lret
nop
out
cmc
shlb
aad
cmp
xor
int
int3
fcmovnu
int
adc
enter
mov
aam
ss
leave
cmc
in
int3
cld
lock
cmp
loopne
mov
shl
loopne
in
sub
xchg
std
test
in
fucomi
aas
fcomi
aas
fiadds
hlt
in
xlat
icebp
fadd
into
mov
in
loope
aaa
sub
cmp
sbb
fdivrp
faddl
in
icebp
xchg
lock
aaa
xor
in
neg
cmp
cmp
out
fadd
fisttps
cld
out
test
xchg
shll
xor
ljmp
aad
jmp
test
xor
out
xor
clc
repz
clc
iret
clc
cld
xchg
sbb
lret
stc
xchg
jmp
jmp
out
shr
enter
rol
iret
sar
jecxz
fmull
test
out
icebp
lret
enter
fucomip
aas
cmp
int3
add
out
flds
stc
nop
jmp
mul
lret
aaa
fcmovne
leave
xor
hlt
mul
rcl
xlat
mov
mov
jecxz
cld
call
xor
xor
fmulp
sar
out
cmc
flds
mov
testb
iret
xor
xor
stc
jmp
int3
shl
jecxz
icebp
loopne
repnz
mov
iret
aad
shl
les
in
les
fsub
call
f2xm1
ffree
mov
fsubp
std
rcr
or
das
ror
jmp
clc
cmp
std
enter
clc
ret
hlt
in
in
std
fstp
in
fucom
and
in
cmc
shr
ss
hlt
fstp
not
repz
std
out
fstp
loope
jmp
clc
jmp
call
shl
cmp
cmp
ljmp
ftst
sti
cld
frndint
fsubr
mov
iret
in
lret
icebp
lock
sti
aaa
fcmovnbe
out
add
loopne
out
sub
pop
addl
iret
call
cmp
fdivrl
sub
in
clc
ljmp
lock
xor
lret
call
shl
shl
sti
cld
out
loope
call
iret
jmp
call
ret
repnz
cmp
lret
std
into
roll
clc
xchg
rol
popl
loop
icebp
shr
aad
cmp
addl
mov
enter
cmp
std
imul
faddp
in
into
addl
decb
incl
add
int
ret
fstp
sbb
jecxz
jg
add
mov
fld
ret
fdiv
jmp
add
cmp
cmp
xabort
in
test
mov
xlat
sarb
sub
fnstenv
out
out
loopne
int
test
addl
loop
iret
xchg
jecxz
in
jmp
lock
addl
xchg
mov
out
out
xor
cmp
int3
idiv
shl
sar
faddp
loop
cld
fimuls
clc
in
into
in
shl
int
rcr
aad
testl
fsub
repz
sub
into
loop
out
fdivr
ret
fdivr
fiadds
loopne
cli
ljmp
aaa
ret
xor
aad
out
loopne
ret
hlt
sbb
aam
mov
clc
or
out
test
cmp
stc
in
imul
hlt
aad
fcmovnb
test
lret
xchg
cli
roll
divb
ss
std
fnstcw
repnz
addb
jecxz
clc
cli
int
in
ficoml
stc
in
repnz
out
rcr
lock
testb
cmp
fcmovnb
ficoml
out
out
leave
jmp
lock
dec
rcl
into
fnstsw
mov
out
xchg
sub
loope
aam
aaa
jmp
clc
cmp
int
and
test
in
out
jecxz
and
xor
in
xor
in
iret
call
test
inc
jmp
mov
xchg
ljmp
jmp
ret
aas
jecxz
testb
xchg
mov
jecxz
cmc
in
leave
lret
out
and
into
repz
loopne
jmp
out
sub
ret
xor
sti
iret
xor
cmp
cmc
in
aas
mov
lret
jmp
lock
rcr
imul
fucomp
hlt
idiv
rol
clc
fcomi
cmp
std
jecxz
jmp
and
out
das
in
lock
ret
mov
lret
cli
loop
or
enter
cmp
cmc
int3
out
repz
fimuls
xchg
decb
clc
iret
lret
into
aas
cmp
xchg
clc
and
loope
in
sub
sub
lock
stc
iret
loop
in
out
in
call
loop
fmuls
xor
int
enter
fdivrl
mul
ret
fmulp
mov
in
lret
test
icebp
fcomip
iret
int
ror
rcl
fcomp
int3
fcmovnbe
aas
xchg
or
cld
ret
cmp
cmp
sti
out
repz
cmp
cmp
cmc
shl
jmp
ret
lret
mov
out
loope
neg
xor
aad
int3
ret
cli
ror
inc
jecxz
rcl
xchg
fsub
out
into
rorb
out
lret
idivl
fcomp
cmc
out
idivl
into
fst
sar
fucomip
lret
rcr
loopne
sub
stc
clc
fcomp
lock
ror
cmp
aad
mov
sti
aad
leave
out
fdivr
mov
out
shl
call
into
lret
repnz
push
into
faddp
xchg
cmp
std
sbb
ret
cmc
leave
neg
std
cli
into
clc
dec
cmp
cli
test
shl
jmp
xlat
fmul
neg
xchg
xchg
loop
ret
lret
fld
loopne
fcmovne
ret
enter
fcmovne
rol
xchg
xchg
test
shr
shr
divl
lret
call
in
adc
stc
rcl
out
roll
in
xor
loop
xlat
ror
fdiv
cmp
and
loope
out
sti
leave
incb
cld
mov
in
jecxz
shl
into
xor
in
cmp
shl
repnz
mov
imul
fstp
out
out
call
test
idiv
sti
sub
sti
sti
rcl
fildl
cld
aad
fiadds
repnz
mov
lret
cmc
out
aad
hlt
shl
rcr
out
out
ret
xchg
jmp
in
std
fstl
aad
hlt
aam
in
aam
aad
in
test
repz
ljmp
loopne
jecxz
mul
iret
xlat
div
std
aam
cmp
ret
jmp
out
ret
out
jecxz
bnd
leave
das
shll
iret
xor
ror
shl
incl
fcmovbe
fadd
jmp
into
out
sub
lret
out
out
xor
cli
std
out
aas
cld
mul
stc
fcmovnbe
ljmp
fmulp
fucomp
leave
je
xor
add
jmp
rol
sarl
rcl
mov
and
jmp
jl
into
aad
ss
rcr
mul
aas
clc
clc
loopne
mov
addl
ds
cs
sub
shl
lock
repnz
hlt
addl
aaa
lret
clc
xor
cmp
lret
cmp
clc
repz
fisttpll
enter
ljmp
aaa
cmp
cmp
aas
adc
cmp
xchg
aas
in
aad
xlat
int
lock
xlat
xor
fdivrl
sbb
ret
std
stc
icebp
test
xchg
jecxz
fsubrp
repnz
sub
aad
cmc
loop
in
loop
lock
loop
loope
jmp
cmc
in
call
out
into
cli
int3
xlat
testb
rcr
ljmp
fdivr
les
xlat
fsubr
ds
stc
mov
iret
cmp
lret
aaa
lock
sarl
cmc
lds
loopne
ret
mov
std
lock
ret
fcmovne
jmp
int
fidivl
cli
ds
xlat
test
cli
shl
ljmp
sbb
enter
clc
cmp
in
dec
neg
stc
ds
fldl2t
ret
leave
in
fiaddl
in
lret
out
call
ror
aad
cmp
movl
idiv
jecxz
cmp
lock
ljmp
out
addl
sbb
cld
loop
lock
int
fldz
int3
out
leave
cmp
loope
orl
cli
loope
xchg
repnz
ret
int3
cmp
fucomip
lock
jecxz
test
stc
fsubrp
loop
jecxz
loopne
into
out
ret
lret
jmp
out
jecxz
shl
ljmp
in
mov
repnz
ror
icebp
shll
rcr
sti
lret
sarb
cmp
in
shl
aad
aad
sti
lret
in
jmp
xchg
shl
xor
jecxz
jmp
sarb
fdivr
cmc
lock
jmp
loope
lret
in
call
aam
repz
in
repnz
mov
aam
fmul
icebp
std
loope
out
jmp
aaa
fadd
lret
lock
leave
test
call
aad
rcl
std
out
cmp
repz
cli
shr
hlt
fadd
cmp
call
iret
int3
or
sub
xor
fcmovnbe
repnz
aad
test
orb
mov
mov
xchg
in
in
cmc
jmp
lret
rcl
std
loope,pt
cmp
out
fnsetpm(287
mov
fdiv
ret
idiv
aad
rcr
int3
cmp
fadds
mov
sbb
sti
int
lret
test
jmp
enter
shl
out
in
loope
out
into
clc
fucomp
clc
stc
les
xchg
ss
xor
stc
lock
ds
and
sti
xor
out
xor
leave
ss
fcmovb
ljmp
shl
cmc
xchg
call
aas
inc
xbegin
out
jmp
repnz
xor
fnstsw
fdivs
cmp
loopne
fidivrs
jmp
and
fildl
mov
cmp
fnstsw
cmc
in
rcl
fdivrp
lds
lret
call
ror
out
test
fstp
stc
jmp
sti
aas
loop
repz
jmp
cmc
ss
cmc
fst
cmc
jmp
cmpl
jecxz
sar
xlat
jecxz
in
loope
out
call
ret
not
cmp
fcmovnbe
cmp
ds
fdivrp
adc
cmc
fadd
out
mov
hlt
loop
out
out
xor
aad
adc
out
cmp
loopne
fcomip
std
loopne
mov
int
aam
xlat
fdivr
shl
std
fldl
cli
mov
ret
out
xor
shl
shl
rcl
into
ror
push
neg
fidivrs
cmc
test
ret
orl
into
loop
jmp
jmp
int
rcr
sti
lret
fdivrp
loopne
fimull
leave
lret
adcb
xor
xor
aam
out
int
jecxz
ftst
lock
jmp
loopne
fmulp
test
xchg
in
ss
aas
pushl
sar
test
cli
out
fcmovb
jmp
xchg
out
std
jecxz
nop
int
cmp
shr
fsubr
out
loope
xor
sbb
out
cld
enter
cli
mov
mov
repnz
sar
fst
aas
mov
jmp
iret
aad
aad
push
out
bound
in
jg
add
rcl
out
cld
fsubrp
in
xchg
hlt
test
loope
loope
rcl
in
hlt
xor
jmp
fadd
ret
out
fsqrt
fmul
out
lock
xchg
fsubrp
int
xor
fcomp
shl
xlat
aam
fcomip
loope
xchg
hlt
mov
enter
ljmp
mov
xor
sarb
in
cmc
ret
rol
stc
incb
test
in
xchg
rol
lret
xor
xor
cmp
sti
xor
adc
orb
loop
shl
div
mulx
ss
iret
loope
out
rcr
std
shl
cmp
cli
in
icebp
cld
fsubr
jmp
sub
sti
shr
shr
fcmovnu
or
sar
mov
into
roll
shl
hlt
sar
iret
cmpb
cmc
loop
fsubp
std
xchg
sti
std
mov
loopne
repz
cmp
cmp
sti
mov
loope
in
out
call
jmp
int
ret
aad
not
leave
sar
std
aam
enter
orb
int
cmp
xlat
fcmovnbe
int
cli
in
xchg
enter
loope
sti
lret
out
call
rcr
out
out
leave
jmp
addl
std
movl
out
xchg
ret
repz
jmp
aaa
cmc
out
xor
int3
shl
ds
lret
fadds
shr
faddl
imul
int3
fdivs
call
int3
add
ffree
mov
aad
in
loopne
iret
enter
ds
ljmp
call
out
out
shl
in
loopne
shl
ljmp
stc
rol
fsubp
in
ret
lret
jmp
iret
shr
lock
ss
adc
jecxz
fdivrp
rol
ds
lret
lret
fmul
shr
hlt
repz
jmp
loope
ror
stc
aam
fcmovb
xlat
ret
movb
mov
int3
icebp
enter
aam
xlat
jmp
in
iret
std
loope
lock
aad
jmp
iret
mov
test
out
std
in
xor
rol
lds
fcmove
cmp
xchg
in
repnz
aam
enter
cld
cmp
fincstp
fsincos
test
test
mov
out
mov
xchg
out
into
in
loope
ret
in
repz
ret
aad
fadd
xchg
leave
orl
ror
cmp
sarb
std
enter
into
rcr
div
fcmovbe
leave
orb
ljmp
idiv
out
lock
xlat
out
fsubr
jecxz
out
in
or
cld
orl
cmp
bnd
into
cmp
in
aas
in
xchg
cmp
clc
sti
enter
mov
out
out
cmp
aad
call
cmp
loop
jmp
ljmp
loop
not
aam
fscale
lret
clc
in
iret
cmp
rcl
aad
addb
out
out
repz
hlt
repz
lock
cli
sti
sbb
mov
jmp
jecxz
aaa
lret
repz
cmp
ret
fiaddl
int
rorb
aas
out
int
xor
cli
clc
lret
out
repnz
jmp
jecxz
fcmovb
ror
mov
shll
repnz
ror
fidivrs
lret
ds
rol
fmulp
testl
in
jmp
fcom
out
out
fdivr
ds
jmp
in
mov
std
loope
mov
lock
xor
cli
clc
or
fldl
fsubr
in
int3
xchg
popl
shr
clc
fcmovnb
sti
sti
repnz
aas
test
stc
xlat
xchg
ljmp
fsubrp
repnz
ljmp
cmp
ret
out
in
decl
out
mov
out
cmc
out
lret
int3
sti
int3
repnz
imul
hlt
cmp
aad
out
rol
idiv
stc
test
fmulp
lock
clc
in
repz
icebp
cmp
fstpt
cmp
fcmovb
sar
jmp
mov
in
xor
int
int3
jmp
cmp
rolb
decl
ret
lret
out
not
leave
idiv
fnstsw
jmp
filds
cld
test
fsub
cmc
repnz
imul
loope
call
lock
cmp
into
cmp
out
in
stc
out
div
imul
add
mov
mov
pop
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
add
inc
cmp
jg
std
add
xlat
out
testl
hlt
test
call
call
int3
cmp
icebp
in
adc
cli
std
fmul
iret
xchg
call
in
in
xor
sub
ss
ljmp
sti
rcr
jecxz
shr
fsubp
loop
das
ljmp
int
adc
rol
test
xchg
cmpb
mov
repnz
mov
hlt
sub
xor
cmp
cmp
ds
sti
cmp
loope
lock
out
in
cli
in
jmp
out
rcl
enter
fsubr
in
int
in
sarl
ret
sti
ret
in
std
jecxz
leave
xchg
lret
vphaddbw
ret
iret
cmp
xlat
lret
sti
cmpb
ds
ret
loope
jecxz
test
in
out
loopne
lret
lret
hlt
clc
jecxz
xchg
loop
xchg
jecxz
mov
in
fldl
sti
hlt
out
xlat
std
fiaddl
cld
ror
loope
mul
clc
sti
test
mov
jecxz
sub
ret
in
in
in
fnstenv
stc
aas
xor
out
rcr
cmp
aad
aam
addb
in
das
aad
sub
cmp
xlat
rcl
cmp
out
call
lret
shl
loop
shl
fcmove
out
sarl
out
ror
int3
lock
jecxz
ds
test
fcmovb
fimull
aam
xor
iret
fistpll
jecxz
stc
mov
clc
mov
in
lret
xchg
xchg
jmp
xor
lret
xor
ror
fdivr
iret
out
fdiv
enter
cli
flds
int
fprem
sar
repnz
cmp
loope
fdiv
rol
test
ljmp
rolb
xor
xor
cmp
rolb
rorl
mul
loope
repz
in
fsubrp
in
shl
enter
aaa
idivl
out
aad
fadd
mov
adcl
out
iret
repz
stc
loopne
repnz
cmc
repnz
out
mov
mov
repz
out
cmp
repz
ror
mov
fadds
xchg
hlt
out
int
out
shl
idiv
leave
clc
xor
fnstsw
std
in
repnz
fsubr
in
shl
jmp
xor
ror
neg
cmp
xlat
adc
in
lret
mov
shl
icebp
lret
ljmp
ret
repz
out
ret
mov
ss
fcmovnb
shll
not
sub
clc
stc
add
sti
out
fcmove
dec
out
repnz
out
mov
out
icebp
loope
cmp
fcomi
sti
in
sti
sub
inc
in
jmp
in
shl
ret
in
xor
call
out
idivl
cmp
sub
test
shl
out
loop
cmc
in
out
lret
rcr
lock
cmc
into
xchg
incb
mov
repz
iret
imul
into
in
icebp
fcmovnbe
into
cmp
fcmovu
cmp
jmp
hlt
jmp
xchg
loop
jecxz
jecxz
out
int
iret
jmp
in
in
cmp
fsubrp
xlat
loope
in
out
loope
xchg
fmull
test
leave
enter
iret
hlt
in
std
fildl
enter
xchg
int3
int
jmp
repz
ret
cmc
fst
lret
cld
loopne
repnz
int
fdivr
cmc
mov
call
test
nop
in
ss
in
icebp
fdivrl
int
fsub
rol
hlt
sar
sbb
in
xchg
mov
fsub
jmp
xor
out
les
fiadds
aas
rcl
ds
loopne
mov
int
into
out
sub
jmp
xor
fptan
hlt
fnstsw
neg
out
enter
addl
in
shlb
call
into
icebp
fsub
cli
std
stc
jmp
adcb
ret
shr
fsubr
lret
in
aam
icebp
sar
rolb
cmp
hlt
stc
int3
test
aam
shr
fidivrs
out
cld
cli
stc
aam
test
loope
xor
aaa
ljmp
cmp
jne
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
mov
mov
add
hlt
cmp
xchg
in
int3
loopne
loop
out
in
idivb
int3
out
repz
int3
lock
out
cld
in
sar
aas
in
xlat
call
in
xlat
hlt
not
fcmovbe
das
icebp
jmp
clc
clc
ds
cmc
faddl
mov
ljmp
icebp
shl
cmc
repnz
int
cmpl
aad
decl
loop
out
xlat
hlt
vcvtpd2dq
xor
cmp
lret
cmp
cmp
stc
cli
mov
fxch
and
into
jmp
icebp
in
out
jmp
std
sar
loopne
faddp
mov
mov
orb
xchg
repz
out
cmp
loop
icebp
loopne
clc
out
aad
int
fcmovne
fcomip
loope
cmc
aam
cmc
cmc
not
test
out
or
repz
ret
in
lea
int
xor
repz
ljmp
out
aas
rol
out
hlt
fmulp
imul
std
lea
sub
xor
aad
std
imul
xlat
faddp
sbb
rcl
repnz
out
std
jecxz
roll
in
jmp
sti
aam
sbb
out
into
loop
in
aam
lret
jmp
sti
orb
hlt
sti
not
not
aam
fnclex
call
test
adc
fstl
out
cld
aam
ljmp
fistpll
clc
jecxz
loopne
cld
stc
mov
ljmp
in
cmp
std
in
fld1
lret
and
xchg
xchg
popl
jmp
out
divb
sti
cs
lret
cmp
repz
flds
call
int3
call
xor
ss
incb
in
xlat
jmp
leave
in
icebp
xchg
cs
leave
jmp
out
iret
lock
in
fdivrp
repz
mov
loop,pt
testb
loope
xchg
aam
in
xor
aaa
icebp
ljmp
cli
shr
aam
std
shr
mov
mov
mov
lret
xor
shlb
int3
iret
aam
cli
cmp
ffree
fcmovnu
jmp
out
loope
mov
lock
fsub
xlat
loope
adc
in
jmp
shl
jmp
jmp
int
xor
out
cmp
in
aas
hlt
cmp
loop
hlt
cmc
loop
xchg
into
test
or
loop
hlt
aaa
ror
in
enter
ljmp
cmp
fdivr
out
out
jmp
xor
int3
into
out
lret
hlt
loopne
loope
xchg
fcomi
enter
mov
mov
repz
in
in
lret
cmp
fsincos
ds
aad
lock
enter
fsub
mov
jmp
in
sar
ds
repnz
fmull
rcl
incb
clc
into
icebp
out
xor
ljmp
addl
repz
into
shl
divl
shl
cmp
repz
rcl
loopne
cmp
out
out
int
std
jecxz
test
xor
sti
xor
fcmovnu
aas
int
fsubp
icebp
test
leave
in
repnz
ret
into
out
out
ljmp
clc
ror
ljmp
in
icebp
test
rcl
mov
mov
icebp
mov
nop
xchg
out
fnstenv
aas
leave
repnz
loope
inc
hlt
shl
leave
clc
cld
leave
in
test
iret
cmp
aad
leave
leave
loopne
hlt
cmc
inc
in
mov
clc
in
repnz
xorl
clc
int3
in
fcom
out
cmpb
sti
rorl
ret
icebp
lret
or
ljmp
ss
iret
icebp
cmp
sti
into
cli
fadd
rcl
sti
xchg
repnz
fsubrp
jecxz
ror
sti
lock
aaa
div
loope
idivb
in
enter
lret
call
in
out
aam
stc
in
int
cmp
fmul
stc
xor
lret
sar
out
mov
and
sub
ljmp
aam
not
ret
rol
sar
test
lret
ljmp
out
lret
out
sti
lret
ror
lock
and
mov
mov
jmp
jmp
enter
fstp
fstp
adc
jecxz
mov
cli
jg
std
add
out
xlat
cli
in
sti
aas
out
stc
loope
xchg
cld
jmp
stc
int3
in
test
shl
test
xchg
fadd
out
mov
std
xchg
in
shl
ss
xlat
aaa
jmp
icebp
fsub
shl
fmulp
mov
ljmp
loopne
test
int
in
neg
clc
lret
ss
jmp
loope
inc
mov
rcl
mov
cld
mov
stc
in
xor
idiv
cmp
cmpb
mov
cli
in
std
mov
xchg
sub
enter
enter
in
call
repz
fst
out
out
lea
xlat
xor
aam
cmp
jecxz
loope
repnz
jecxz
test
out
sub
xchg
subb
aam
in
std
fcmove
cli
sarl
clc
xor
aas
cli
cld
faddp
out
jmp
loopne
call
fidivl
cmp
int3
std
cli
xor
aas
aas
std
aam
leave
jmp
xchg
lock
push
jmp
shl
test
not
aad
loope
fucomi
cli
xchg
lock
in
incb
stc
loopne
xchg
clc
addb
shr
mov
aam
ds
cmp
cmp
vshufps
xchg
ret
into
lret
mov
in
in
repnz
out
imul
aam
int
cmp
not
into
aad
std
fiadds
loop
xchg
lret
shl
enter
icebp
in
sarb
loop
cld
iret
loop
fld
lret
mov
inc
xor
out
out
in
cmp
jmp
cmp
ds
fsub
cmpl
into
test
cli
mov
ret
cmp
out
ds
in
fcmovnbe
fucomip
sti
shl
rolb
ljmp
cmc
sarb
in
into
bnd
xor
ds
rol
loopne
stc
out
mov
sti
int3
in
xor
fucomip
fldln2
iret
cld
aam
loop
repnz
lret
loop
std
lret
nop
mov
aam
xor
rol
neg
cmc
loopne
ds
out
idiv
test
sbb
xchg
mov
ljmp
into
cmp
leave
sar
xor
aas
testl
clc
rorl
clc
cmc
xor
cli
loope
repnz
rcl
cli
mov
mov
std
faddp
out
clc
in
sub
out
pushl
jmp
loope
testb
out
std
iret
loop
cld
ror
xor
cli
fnsave
lret
aas
aaa
enter
shl
test
mov
fldl
lock
xor
cs
lret
sarl
neg
fsubp
test
mov
movb
aad
iret
repz
xor
ss
ffree
mov
ret
imul
mov
loopne
sar
fdivp
call
out
repnz
xor
fidivrl
aad
loop
enter
ljmp
repnz
xor
ljmp
sti
int3
stc
call
mov
test
in
in
int
xlat
ret
call
int
aad
fmul
test
fadd
hlt
in
ljmp
loop
test
rcl
lock
loope
int3
neg
xchg
shl
enter
imul
ljmp
loopne
in
aaa
repz
into
int
stc
ret
test
aam
fdivp
in
cli
loop
mov
std
repnz
int3
int3
in
shr
aas
rcr
sti
sar
out
repnz
in
adcl
ret
in
cli
jecxz
fadd
test
test
xchg
into
mov
ss
ljmp
in
sarl
ret
mov
xor
orb
ret
lret
out
repz
bnd
sarb
cli
fdivr
clc
fldl
or
xchg
int
loopne
lret
call
in
int3
int3
icebp
cld
fadd
cli
cmc
loope
decl
xchg
out
or
clc
out
enter
cmp
in
rolb
in
cmp
test
out
icebp
iret
leave
fcmove
cli
shl
out
jecxz
xorl
jmp
aad
rcr
fstp
sbb
jae
mov
jg
std
add
fcom
sarl
neg
loope
cmp
xchg
xchg
in
xchg
repnz
ljmp
fcomp
in
into
loopne
cmp
fdiv
jecxz
orl
fdivl
rcl
xor
xor
sti
test
cmp
shl
fsubr
loopne
out
test
mov
mov
enter
lret
repnz
adc
out
fisttpll
neg
cld
cli
in
lret
xchg
call
int
lret
fcmovnu
repz
ret
cmp
cli
out
xchg
loop
ljmp
stc
fcmovnu
stc
int3
ror
cmc
xlat
loopne,pt
loopne
std
loope
filds
sti
int3
test
loopne
lock
out
aam
rcl
rol
int3
rolb
or
rclb
jmp
enter
f2xm1
ret
xchg
hlt
out
stc
sub
jmp
xchg
in
jmp
aaa
cmp
xlat
jmp
fdivs
rolb
out
xlat
enter
loopne
icebp
in
int3
xor
xor
xor
out
fidivrs
cmp
cmp
aad
in
loopne
fdiv
out
test
ljmp
xor
ret
in
aaa
iret
div
aad
sarl
sub
jmp
fmuls
xchg
in
out
stc
sar
clc
xor
cld
std
or
cmp
sti
leave
loopne
std
in
mov
mov
jmp
repnz
std
cmp
addl
aam
in
call
mov
mov
into
ss
xor
clc
in
fcmovnb
clc
loope
shl
cmp
fcomi
mov
std
fimuls
lock
xor
in
in
sub
repz
leave
loope
fcmovne
shl
sbb
cmp
sti
addl
in
cmp
cmp
int
aam
xlat
iret
cld
sti
test
mul
call
xchg
xchg
in
cmc
div
repnz
cmp
out
sti
int
cmc
fcom
stc
fmull
mov
into
nop
out
mov
rcl
fnstenv
cmc
cmp
jmp
fdivrs
shr
jecxz
in
repz
out
test
mov
fsubrp
shl
lret
hlt
out
xlat
rcl
lret
cmp
into
fcmovnbe
fildl
adcl
idiv
fmul
in
cli
xor
shl
std
cli
jecxz
cli
mov
out
lret
jmp
lds
shr
call
ds
fistpll
xor
fucomp
test
out
aaa
fprem1
xor
aam
sar
aas
cmc
std
cmp
loope
loopne
xchg
mov
int
xchg
ret
repnz
ds
ljmp
sbb
cmp
shl
repz
cmp
test
popl
sub
fcom
cmp
repnz
ds
test
loopne
loop
fimull
loop
loop
out
aad
shl
xor
jmp
iret
into
movl
icebp
out
nop
jecxz
out
repnz
shlb
cmp
out
xlat
cmpl
in
stc
repnz
loopne
out
repnz
out
out
aam
mul
aaa
into
stc
clc
not
xlat
repz
rcr
sti
cmp
std
xchg
rcr
lock
lret
iret
lret
ds
not
jecxz
imul
sti
cli
call
int
cli
jmp
shr
std
in
in
ss
ffreep
roll
call
sti
lea
into
out
lret
jmp
vcvttpd2dq
cmp
lret
clc
test
loop
call
in
aaa
idivb
aam
xorb
out
in
not
cli
inc
cld
ret
mov
iret
ljmp
leave
ret
fcmovnu
in
std
adc
repnz
leave
out
sti
mov
repnz
enter
in
cmp
fistpll
fdivr
aas
rcr
addb
repz
enter
imul
out
rcl
in
cld
repz
call
in
sti
shl
loope
loop
leave
jmp
rorb
iret
jecxz
sar
ror
lret
not
loopne
std
shl
adc
xlat
call
fsubp
lret
rcl
xor
sti
lret
jmp
aaa
cld
cmp
rol
leave
xlat
fdivr
mov
adcb
fchs
xor
sarl
aam
int
cmp
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
sbb
add
cmpsb
add
cmp
test
fld
ret
test
std
in
fcmovnu
icebp
out
jmp
out
out
fxch
aaa
lock
into
sarl
out
cmp
in
lock
out
add
test
clc
ljmp
sub
fstpt
xlat
clc
jmp
test
sti
jecxz
repnz
frstpm(287
shl
adcl
stc
cmp
ss
ljmp
cld
test
ret
fmulp
rcl
lret
lret
out
jmp
cmp
repz
rcr
shl
sti
std
mov
call
add
in
xor
int3
jecxz
into
cli
lret
mov
lret
in
shrb
jmp
call
int
cld
into
cmc
stc
repnz
int
mov
int3
adcl
out
jmp
xlat
lock
sar
rcr
neg
movl
repnz
jmp
cmc
shr
jmp
aam
rol
shl
sbb
mov
loope
icebp
test
mov
int3
stc
call
rcr
cmc
cmp
div
loopne
sar
cmc
lret
xchg
clc
clc
fcmovne
xchg
shl
rol
ret
sti
repnz
jecxz
loope
cli
test
hlt
mov
int
loope
xchg
into
into
xor
jmp
xor
aad
xlat
mov
jmp
call
faddp
shl
cmp
in
lret
sti
hlt
rcr
sbb
mov
out
leave
leave
out
loope
mov
enter
enter
fistpll
cli
idivb
addl
ret
call
xor
xlat
fstpt
cmp
cld
cmp
not
in
test
shl
cmpb
ljmp
fcmove
roll
xor
std
rcl
hlt
cmp
repz
roll
sbb
decl
shr
aad
rcr
in
icebp
xor
ret
repz
ret
mov
mov
xor
shl
shl
out
fxtract
mul
out
fstp
lock
fisttpl
in
iret
nop
mov
into
ljmp
iret
into
cld
cmp
in
fsub
in
adc
fmull
loop
out
call
fcmovnbe
cmp
ret
into
in
test
test
std
leave
out
dec
xchg
sub
in
out
cmp
cmp
shl
shl
loopne
ljmp
cmc
sub
in
xor
in
cmp
cld
fcmovne
cli
in
iret
cli
into
loope
aam
sar
or
lea
xor
sarl
lret
ljmp
lret
aad
hlt
out
int3
lret
fdivr
lret
mov
aaa
xor
out
cmp
lret
fcomp
xor
cmp
jecxz
jmp
jmp
aaa
xlat
ret
stc
cmp
sti
fucomp
stc
cmc
out
jmp
leave
int
fsubp
fxch
in
int
out
out
lret
repnz
bnd
call
orb
xchg
shrl
xor
jmp
out
clc
cmp
rol
cmc
fsub
xchg
faddl
jmp
leave
fptan
ret
xor
cmp
ror
sub
rcl
out
loop
fisttps
fxch
sub
rcr
std
repnz
in
in
out
fsqrt
mov
xchg
xchg
icebp
sub
aam
xor
lock
int
int
fcmovnbe
ret
in
jecxz
lret
fisttpl
cmc
shl
mov
jmp
add
ret
std
fiadds
sub
in
aad
lds
xor
rcr
int3
shr
aas
rol
clc
xlat
cmc
cmc
add
mov
mov
mov
ljmp
clc
clc
clc
not
aam
fcomi
cmp
lock
add
loope
leave
orl
aam
out
iret
test
cmp
rol
aam
testb
test
xlat
sub
out
not
xor
hlt
cmp
in
cld
fcom
out
in
neg
loop
shl
lret
out
hlt
xor
jmp
aaa
ror
loope
repz
loop
mov
ljmp
xchg
hlt
lock
fcomp
fidivl
xor
sar
idiv
test
enter
xchg
loope
lret
lret
out
hlt
jmp
cmp
fdiv
cmp
xlat
movl
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
pop
xchg
jae
mov
jg
cmpsb
add
mov
jmp
sar
xchg
in
ret
shl
aad
int3
enter
lret
into
idiv
cli
in
idiv
jecxz
leave
in
mov
int3
leave
in
fsubr
ror
sarl
inc
cmp
push
mov
in
xchg
iret
call
xor
rcl
shr
lock
fninit
cli
les
fsubp
loopne
loope
rol
out
in
icebp
shr
lret
ret
fucom
cmp
xchg
xor
enter
repz
loope
out
cmc
icebp
lret
sti
cld
cmp
fsub
out
vpsrld
in
test
out
mov
xor
clc
mul
in
hlt
sar
jmp
aam
jecxz
xchg
lea
icebp
int
hlt
iret
xor
repz
fcomip
cmc
loope
xlat
ret
cli
leave
ret
loop
out
jmp
out
ljmp
cmp
ds
out
repz
out
out
fadds
mov
xchg
out
cmp
fsubr
cmp
shl
jecxz
cld
fdivp
hlt
filds
xchg
call
fyl2xp1
in
fcmovbe
in
xor
aad
rcl
into
fidivrl
stc
jmp
or
iret
in
ret
rcl
cmp
rol
jmp
int
ror
repz
fsubr
jmp
test
fcmovbe
loop
fildll
leave
shl
shr
in
aaa
ljmp
fdiv
out
ret
orb
inc
rcl
into
fnop
aaa
fucomip
lret
aas
clc
repz
test
xor
xchg
int
in
in
lret
xchg
cmc
call
out
repnz
jmp
cmp
repz
aam
test
sti
loopne
ljmp
icebp
sub
iret
aam
into
das
sti
fmulp
cld
sarl
loopne
xchg
in
or
xchg
cld
fcomip
out
int3
lret
idivl
xor
iret
icebp
jecxz
int
cld
xor
fyl2xp1
mov
cmc
lret
cmc
aam
aaa
xor
ret
out
cmp
incb
fstp
std
in
loope
in
loopne
call
das
int3
xor
ds
ljmp
cli
iret
ror
lock
icebp
cmp
into
shl
xchg
inc
cli
mov
leave
in
test
and
in
iret
jmp
jmp
call
idiv
cmp
shr
fld
sub
out
test
out
lret
cmc
enter
fucomip
loopne
aam
flds
cmp
lret
loop
in
fdivr
xor
test
std
in
aad
cmp
loopne
rorl
lret
in
mov
test
ss
hlt
aad
lret
ds
ljmp
xchg
test
xor
int3
out
iret
cld
icebp
loopne
out
ret
jmp
sti
xchg
nop
jecxz
out
ret
out
in
clc
sti
repz
cmp
in
sti
int
enter
xchg
jmp
out
xor
cmp
repnz
aaa
rcl
repnz
ss
mov
sbb
xchg
sbb
xchg
lret
repz
loope
xor
repz
rcr
lock
stc
jmp
int3
out
imul
cmc
cmp
clc
fistpll
ljmp
fadd
sti
hlt
xor
inc
int
test
lret
in
icebp
xor
in
rcr
fdivrl
into
fadd
icebp
aas
not
addb
mov
into
std
fst
iret
cs
lock
cli
hlt
add
ret
cmc
std
and
decl
in
test
aad
loop
jmp
stc
std
rolb
in
in
sti
xchg
xchg
roll
cs
ror
std
not
jmp
clc
out
aad
adc
out
out
mov
jecxz
out
ljmp
jmp
cmp
xor
lret
aas
xor
stc
cmp
mov
ret
mov
vpsllw
enter
cmp
fdiv
out
addb
cld
test
sub
repnz
jmp
fdiv
fstp
aad
flds
aas
sti
xchg
out
stc
jecxz
icebp
lret
cld
in
sarb
lds
cmp
std
fdiv
aam
in
lock
fstp
loop
xchg
icebp
lret
jmp
ds
out
int3
test
cmp
cmpb
sar
rolb
in
test
mov
mov
movzbl
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
cmp
jl
add
in
iret
out
iret
xor
idivl
fucom
fldl
testl
enter
ljmp
ds
ds
clc
lret
out
sti
mov
loope
in
test
cmp
in
fdivrp
sar
cld
in
rcl
out
mov
clc
mov
out
xchg
ror
cs
cmc
lock
xor
dec
cli
cmp
sarl
leave
fptan
lret
hlt
std
xchg
int3
std
nop
cld
into
stc
enter
icebp
jmp
fcmovnu
sarl
mov
fmul
inc
cld
mov
in
repz
nop
inc
leave
jmp
shl
sar
iret
loopne
test
loop
jmp
xabort
rcr
loop
xchg
loope
in
sub
aam
icebp
loop
clc
ffree
loop
mov
loopne
cli
lret
fmul
fcoml
ror
lds
int3
in
cld
aaa
cld
std
xlat
iret
xlat
clc
xchg
inc
loope
in
jecxz
cld
lret
fiadds
fcom
stc
aaa
rcr
jmp
lock
repz
cld
hlt
orl
out
rcr
xor
ret
rcl
iret
aaa
stc
into
lret
adc
loop
fsub
stc
mov
std
out
icebp
loopne
nop
std
jmp
in
neg
idivl
fcom
sarb
fadds
call
lret
xchg
jmp
shr
clc
fld
int3
fdivrl
loopne
rolb
aam
hlt
hlt
xlat
enter
mov
int
lock
ror
jmp
sti
cmp
rcr
fcom
fiaddl
loope
sti
movb
xlat
int
cmc
cmp
fdiv
into
cmp
sti
leave
cmc
movb
fsubrp
jmp
test
cmp
fnstsw
hlt
repz
push
fcomp
fstp
fucomi
ljmp
out
ror
fstpt
xor
fucomp
int
out
repz
lock
shr
lock
out
icebp
fsubr
cmp
movb
clc
mov
loope
rclb
jmp
loope
lret
into
icebp
idiv
inc
cld
sti
call
jecxz
sbb
mov
enter
in
ss
repnz
sarb
jecxz
xchg
icebp
loop
xchg
out
addl
lret
ljmp
idiv
out
cli
out
int3
call
repz
ljmp
enter
cmp
cmp
ret
addb
ljmp
lock
sarl
in
out
out
leave
mov
ljmp
and
aad
int
div
div
int
sarb
xlat
sub
test
std
xchg
mov
into
shl
lret
ror
int3
lret
sub
hlt
out
leave
repnz
test
xchg
enter
fcmovne
sar
mov
mov
xor
xor
jecxz
xor
sti
aas
cld
hlt
std
rol
call
mov
in
in
test
ss
into
rcr
in
cmp
out
into
ret
icebp
div
jmp
iret
out
addb
mov
out
aaa
ds
clc
out
cmp
in
mov
rcr
out
fsubp
cld
xchg
xor
in
sti
jmp
ror
jmp
test
xchg
cmp
ret
cld
iret
call
adc
shr
cli
jmp
cmp
into
push
out
jmp
fsubp
dec
fcmovb
out
ljmp
neg
aaa
lock
xor
stc
loopne
cmp
std
std
loop
leave
nop
into
nop
out
rolb
fdivrs
in
hlt
cld
loope
fadd
adc
aas
jmp
fnclex
loop
mov
lret
repnz
xor
ss
out
cmp
aam
and
icebp
xchg
in
fsub
sub
jecxz
cmp
xor
lret
or
aas
rol
clc
loope
sti
fiaddl
loope
xchg
fdivp
in
lret
in
hlt
xor
in
out
fnop
fdiv
inc
cmpl
xchg
lret
orb
shl
shr
ss
fst
adc
jecxz
out
test
iret
jecxz
loop
in
repnz
idivb
icebp
lret
cmp
clc
int
test
jmp
test
popl
out
in
in
rcl
in
fcmovbe
fdivr
test
orb
test
in
in
cmp
xor
call
inc
in
cmp
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
mov
xchg
jg
cmpsb
add
repnz
lock
fdivrl
fst
repnz
call
mov
xchg
hlt
loop
xor
out
cmp
cmc
cmp
test
addl
das
xor
ret
iret
aad
fcmove
loopne
lock
jecxz
testl
mov
in
into
lret
stc
jmp
repz
out
movl
in
out
in
test
fstpt
fmulp
out
ss
jecxz
jmp
aas
iret
repnz
out
cmc
jmp
fmulp
pushl
fdivp
testl
icebp
repnz
divl
aam
repnz
call
aam
icebp
enter
sub
inc
orb
div
ror
inc
xlat
jecxz
shl
rol
out
testb
in
shl
cmp
cmp
cmp
mul
sub
roll
xchg
jmp
aaa
ss
ljmp
ljmp
cli
cmp
sub
mov
lock
fsubr
jmp
jmp
ftst
stc
fadd
ffreep
aam
test
mov
call
cli
lret
iret
cmp
fstpt
ret
shl
mov
cmc
int
fildl
in
ror
out
in
hlt
in
rcr
sti
loopne
not
lock
loop
fmull
fucomp
xchg
xchg
shl
shr
xor
clc
out
repz
fmulp
ss
clc
xlat
ds
mov
clc
fdivrp
out
mul
sub
cs
aad
cmc
aaa
shl
rcl
out
clc
cmc
cli
mov
loopne
std
nop
xor
das
lret
loop
std
cmp
int3
sar
cmp
test
call
xchg
jecxz
xchg
rcl
xor
xor
cmp
cmp
loop
fadd
rcl
ljmp
sub
aad
aaa
aam
int
fistpll
ror
loop
shl
out
fdivrp
loopne
lret
and
xor
les
sti
cmp
ss
rolb
ret
call
ljmp
shr
icebp
into
in
cmc
icebp
in
aaa
stc
jecxz
repnz
fsubrp
ror
test
loope
lock
xor
xlat
repz
aas
aad
clc
cmp
cmp
in
fsubrp
int3
xchg
call
enter
iret
cmc
jecxz
cli
iret
sar
xchg
ret
fcmovnb
loope
lret
int3
std
int
loope
in
mul
imul
stc
cld
xor
filds
shl
stc
mov
fsin
int
adcl
fnstenv
jmp
jecxz
cmp
loope
ret
lret
ljmp
aaa
fsubr
in
aad
in
out
repz
div
out
popl
sbb
ret
loope
ds
int
in
rcr
hlt
loopne
int
in
xchg
xchg
lret
xlat
xor
repz
call
cmp
fdivp
call
mov
into
in
rcr
hlt
jmp
lret
icebp
iret
cli
lret
cmp
cmc
out
loopne
mov
mov
fucomp
mov
icebp
in
loope
das
sar
xor
cmp
cmp
ffree
incl
jmp
lea
xor
std
out
xlat
jmp
std
shl
out
fcmovb
clc
aad
call
adc
into
jmp
leave
cld
fst
cmp
xchg
lock
shl
fildl
sti
out
mov
lret
aaa
out
lock
leave
fadds
fiaddl
jmp
mov
in
xchg
in
fcmovb
fdivrl
shr
stc
sti
xor
into
cmp
shr
jmp
cmp
xchg
loopne
xor
int3
call
cmp
aas
repz
std
repnz
jecxz
mov
add
xor
int
shll
enter
loop
cmp
hlt
aad
idiv
int3
loopne
icebp
rorb
xor
aam
cli
xlat
xlat
cmp
loopne
into
shl
cmp
aam
ret
aam
out
std
clc
nop
cld
rorl
ror
ljmp
lock
cmp
out
cld
in
incb
jmp
xor
shll
in
les
cli
aas
hlt
clc
repnz
stc
in
xchg
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
pop
inc
pop
loope
xchg
jg
cmpsb
add
std
clc
fcomi
mov
xchg
xchg
out
shl
in
repnz
ror
fdivs
cmp
out
cmp
neg
hlt
stc
loope
mov
into
cli
or
xchg
loop
aad
clc
ss
fcmove
lret
ror
cmp
test
in
clc
cld
neg
mov
int3
out
enter
in
int3
sti
stc
call
cmp
ret
fcomi
mov
mov
jecxz
int
mov
in
aaa
fucomi
out
jmp
lret
into
out
cli
flds
shr
enter
ret
mov
out
aaa
in
fdivr
hlt
cmp
out
cmp
testb
mov
xchg
xchg
ret
into
cli
cld
shl
lret
cmp
clc
std
rol
jecxz,pt
aam
mov
adc
sub
xor
shll
fstp
out
shr
neg
loopne
cmp
stc
decb
faddp
into
in
fcmovbe
stc
int3
rcl
cmp
test
fcmovu
cli
mov
clc
mov
xchg
loop
sub
cmp
lret
lret
cmp
clc
faddl
aam
ljmp
xchg
xor
int
sub
clc
int3
jecxz
in
xlat
movl
mov
out
out
lret
out
cmp
fcom
cld
std
rol
xchg
xlat
enter
ffreep
fstp
xchg
ljmp
leave
in
fxch
sar
ret
xchg
decl
iret
out
loop
int3
ror
rcl
hlt
icebp
lret
out
cmp
cmp
ret
lock
in
jmp
in
jmp
in
test
out
call
repnz
cmp
ds
rol
lea
mov
mov
cmp
clc
mul
loope
cmp
and
test
xchg
lock
xor
cli
into
iret
sti
ds
cmp
std
leave
xchg
call
out
in
mov
icebp
sar
cmp
sarl
icebp
fnstcw
fnstcw
filds
sti
mov
loop
hlt
lock
leave
xlat
incb
flds
lock
xchg
lret
xlat
fcomi
stc
out
cmp
clc
int3
test
fdiv
mul
loope
mov
out
xchg
call
in
ror
jmp
fbstp
aaa
cmp
sti
int3
loopne
idiv
out
jecxz
jmp
sub
fcomp
out
xor
ss
sub
std
fmuls
out
iret
orb
repz
cmp
rcr
repnz
out
repnz
sarl
lret
fcmove
icebp
out
lock
aam
enter
cld
cli
cmp
hlt
fiaddl
lret
jmp
jmp
fmul
jmp
fcmovne
cmp
cmp
aam
incb
leave
cld
mov
out
icebp
fcmove
in
cmp
neg
repnz
test
jecxz
aam
cli
clc
leave
int3
in
in
into
fld
loop
icebp
fucomi
aad
ljmp
cmc
xchg
stc
fucom
jmp
loop
jmp
loope
cmp
icebp
cmc
repnz
fucom
fucomip
cmc
loope
aam
testl
mov
nop
ds
shl
xor
into
stc
fcomp
cmp
loope
sar
out
lret
mov
adc
call
cmc
lret
cmp
lock
fistpll
call
ds
fchs
dec
out
aaa
xor
neg
xor
aaa
cmp
or
adc
jmp
xlat
call
fsub
in
int3
ret
out
cmp
aaa
out
call
cmp
call
loop
sti
into
jmp
int3
fxch
icebp
in
clc
hlt
jmp
iret
cmp
fstpt
xor
jecxz
sub
fimull
lock
idivb
in
xor
enter
in
test
lret
fsub
in
jecxz
shl
rcr
sti
sarl
fcmovbe
dec
out
in
icebp
fsqrt
xchg
out
call
fdivrp
rcll
in
int
int3
stc
cmp
ds
sarb
stc
adc
cmc
mov
lret
ljmp
dec
aas
leave
cli
ds
loope
xlat
aad
test
iret
out
leave
out
int3
leave
cs
ss
out
call
ss
repz
fdivr
call
int
xor
jmp
aad
rcl
fst
leave
pop
push
out
mov
lcall
jecxz
ss
fadd
int
in
not
out
sarb
and
and
sti
test
in
ret
int3
cmp
repz
out
jmp
out
loop
jmp
icebp
test
xchg
xchg
into
xlat
stc
lret
out
sti
ror
icebp
fdivr
sar
sar
out
mov
loop
fcmovne
xchg
rolb
out
test
iret
int
repz
ds
xlat
loope
mov
stc
nop
mov
and
xor
xlat
icebp
icebp
fcmovnb
fucompp
shl
clc
ret
xchg
lds
nop
call
loopne
cs
lret
cli
in
lret
iret
sti
rcl
loope
out
ds
test
fcmovnu
popl
out
ljmp
lret
shr
out
mul
rcl
ret
fiadds
fmul
cmp
ror
ret
icebp
lret
xor
fsubr
cmp
sbb
hlt
test
fcmovnu
incl
loope
lret
ljmp
into
std
fcomi
out
fistpll
xchg
std
cli
jecxz
in
fmulp
lock
imul
in
cmp
idivl
aas
fdivr
loop
ret
aas
flds
cli
enter
test
sub
lret
idiv
aad
shr
in
hlt
push
fsincos
repnz
fxch
testl
bnd
fdivrs
icebp
out
call
test
fmull
mov
rorb
repnz
shr
stc
jmp
cmp
cmc
fcomi
fadd
out
ljmp
and
jmp
xor
ss
cmp
sbb
clc
mul
and
xlat
xlat
aas
loopne
fmulp
out
call
loopne
cmp
not
icebp
sti
xlat
in
fildl
fcomip
orb
loop
test
cmc
das
lret
in
call
jmp
ror
into
out
rol
ret
in
mov
jmp
loopne
xchg
repz
ljmp
lret
std
fnop
dec
iret
loop
cld
and
in
roll
in
xor
rcl
int
cmp
mov
enter
and
leave
std
lret
out
out
jmp
aad
int3
fidivrl
clc
in
loope
out
jecxz
lret
in
shl
loope
in
xor
cmp
shl
aaa
ljmp
repnz
loopne
in
ljmp
in
lret
sarl
neg
loopne
add
cld
or
rcr
sub
lret
xor
xor
sti
cmp
lret
sti
cmp
fucomi
filds
jmp
in
enter
in
shl
xor
in
ss
cmp
enter
loopne
loopne
mov
iret
xchg
in
in
into
enter
cmp
out
icebp
loop
rcr
mov
mul
movl
in
fcom
cmc
out
ds
cmp
cld
aam
cli
fdivrp
repz
ljmp
in
loop
iret
fdivrp
clc
neg
out
mul
in
out
xchg
aam
enter
mov
iret
ror
in
sub
xor
cli
xor
cmp
clc
fdivrs
cmp
rcl
ffreep
ret
fcomp
int
fisttps
int3
repnz
lock
clc
out
iret
in
hlt
hlt
in
test
fst
mov
enter
out
xchg
aam
hlt
leave
lret
aam
xor
fadds
in
mul
cmp
loop
leave
jecxz
dec
icebp
icebp
jmp
loope
jmp
aaa
repnz
cmp
ljmp
rcl
incb
sti
fiaddl
xor
in
out
rol
enter
into
div
hlt
ds
cld
shr
test
xchg
repnz
stc
test
sti
icebp
loop
xor
fiadds
mov
out
xchg
ret
ret
int3
fsub
enter
push
xor
xlat
idivl
incb
ror
loop
adcl
lret
lock
xor
in
rcr
loopne
roll
jmp
xchg
mov
in
shrb
iret
sub
push
aam
hlt
mul
lock
cld
rorb
in
cmc
loope
stc
in
xor
cli
filds
not
rol
test
fcmovbe
ror
in
cmc
aaa
sar
jmp
ljmp
loope
cmp
rol
idiv
enter
std
mov
repnz
jmp
add
add
jmp
leave
sarl
rcl
int
mov
xchg
mov
add
jg
cmpsb
add
cld
cmp
ror
cli
loopne
loopne
call
mov
enter
in
in
cli
out
jecxz
in
std
fstp
sti
aas
sti
lret
out
fsub
out
mov
xor
lret
cmp
ds
sarl
rol
addb
shl
ljmp
lock
cmp
icebp
cld
and
cmp
ljmp
in
fsub
in
xor
sti
fnstenv
hlt
cli
cmp
iret
neg
clc
cld
loopne
fucomi
in
faddl
out
xor
int
cmp
xchg
les
int3
icebp
in
cmc
xchg
cmc
not
ret
fnstenv
ss
shl
int
ror
int3
repnz
lret
mov
flds
xchg
fucomip
leave
in
cmp
xor
ljmp
xchg
mov
imul
fldz
rorb
ljmp
fdivrs
aam
lock
loope
test
aad
in
inc
loop
test
xchg
int
aam
jecxz
lret
sar
sti
fcmovnbe
cmp
repz
fcomp
fisttpl
iret
loopne
out
jecxz
rcl
out
cmp
fcmovnbe
fistpll
sbb
cmp
icebp
aad
xlat
lret
std
int3
into
mov
repnz
icebp
call
lock
icebp
ds
mov
mov
xchg
loope
mov
loopne
jmp
rol
icebp
out
xor
repz
cmp
in
add
lock
std
in
enter
xchg
mov
in
sti
les
leave
ror
std
aaa
out
shl
xchg
xlat
mov
repnz
mov
aaa
fld
cmp
rcr
in
fdiv
addl
cli
std
xchg
mov
icebp
xor
sub
cmp
iret
out
div
sti
int3
decl
jecxz
lret
das
int3
not
leave
iret
sar
incb
cld
fcmovnb
xchg
sti
lret
lret
int
fsubrp
nop
ret
shlb
neg
out
call
ffreep
loop
icebp
test
out
or
cld
leave
in
test
aas
out
out
cmp
sarl
in
enter
rol
ret
stc
or
out
stc
int
nop
mov
cli
icebp
cmc
call
jmp
stc
sti
ret
cmp
xchg
lock
out
xchg
repnz
out
int
xor
ss
in
filds
fmulp
loop
call
sub
shl
repnz
sar
fcomip
cmp
fucomi
aam
fcmovnb
loop
test
cli
mov
repnz
stc
cmp
out
inc
cli
fcom
adc
cmc
in
leave
hlt
loop
enter
xchg
in
hlt
in
sub
xlat
xor
aas
int
test
int
cmp
cli
div
cld
ljmp
out
call
ljmp
lock
repnz
idivl
fildl
and
iret
out
out
xor
cmp
fcmovnbe
shl
xor
roll
sub
mov
jmp
rcr
call
out
jmp
ss
in
fdivrs
fstpt
enter
aas
aam
faddl
testb
in
leave
lret
jmp
stc
shl
aaa
addl
jmp
test
test
lock
in
sti
stc
hlt
aad
adc
sar
jmp
movb
in
mov
repz
cli
in
fldl2t
fdivr
xorl
shl
std
cmp
std
out
cld
icebp
lock
or
xor
jecxz
stc
leave
int3
rcr
int
cmp
ds
cmp
enter
loop
in
enter
repnz
int3
ret
shll
in
jmp
in
stc
fxtract
cmp
test
mov
nop
fmul
lock
jmp
fdivr
stc
cmp
lret
in
aas
sub
loopne
roll
sbb
loopne
aad
jecxz
loop
idiv
vpminub
cmp
cmp
fcomp
shr
ror
adcl
fdecstp
loop
icebp
fistpll
rcr
cmp
loope
loope
stc
ret
mov
test
clc
lock
icebp
hlt
fcom
das
jmp
rcl
test
enter
std
popl
in
enter
cmp
cmp
shr
vcvttpd2dq
call
fisttps
call
hlt
cmp
sti
out
fnstsw
loope
div
mov
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
xchg
xchg
test
mul
enter
cmc
xor
repnz
sarl
icebp
lock
in
shl
ds
jecxz
test
cld
leave
enter
test
ljmp
cli
cmp
std
jmp
fstp
lret
in
mov
out
call
xor
repz
lock
fdivp
cmp
sbb
ror
nop
xchg
in
rol
xlat
in
rcr
out
ds
fucomi
fcmovnb
fcmovb
loop
loopne
jecxz
in
mov
loop
ljmp
xor
cmp
std
lret
ds
test
stc
ret
test
fmul
in
int3
fucom
loope
into
les
int3
out
iret
cmp
cmc
clc
hlt
in
lock
cmc
fsub
test
mov
out
xor
xor
aaa
clc
cmc
std
repz
fdiv
clc
fisttpl
jmp
out
mov
out
in
shll
ror
ret
testl
out
in
shr
jecxz
enter
ss
sub
loope
and
in
fmul
in
incb
ss
xor
clc
ds
cmp
aad
jecxz
faddp
adc
xchg
fdiv
jmp
in
hlt
push
in
loope
neg
cli
stc
fcomip
std
ret
out
jmp
int
loop
icebp
or
ljmp
hlt
test
lock
loope
fcmovb
into
lret
hlt
xor
shl
jmp
lret
icebp
cmp
stc
faddp
test
addl
in
addb
loop
jmp
cld
call
ss
leave
xchg
inc
leave
jecxz
orb
in
xor
enter
fdivrp
fiaddl
in
int3
loope
mov
ljmp
not
cmp
enter
lret
ffree
loope
icebp
lock
enter
mov
out
imull
repz
in
shl
aam
fst
clc
idiv
int3
stc
cmc
sar
stc
out
jmp
out
lea
ljmp
aam
lret
fdivp
fmuls
mov
ljmp
xchg
lds
cmc
hlt
xor
cli
out
cmp
test
out
std
clc
ds
sbb
loope
loopne
xor
aad
cli
fsubr
clc
fucomi
lock
rcr
rol
test
fmul
cld
jmp
ljmp
fmulp
mul
cli
cmp
leave
repnz
shl
sarl
test
xlat
cld
xlat
mov
int
das
enter
cmp
out
call
incb
hlt
in
leave
out
adc
divb
in
ss
out
into
call
clc
rcl
jecxz
repz
or
jecxz
adc
loopne
xor
cmp
icebp
mov
test
faddp
addb
mov
xor
shr
rcl
sti
icebp
int3
ljmp
fidivrl
aad
fldl
and
aad
enter
xor
enter
hlt
icebp
fldl
std
fcmovne
fcomp
sub
lret
icebp
in
repnz
cmc
hlt
out
stc
clc
in
fdivrp
repnz
xchg
int
enter
int
loopne
ds
int3
mov
icebp
shl
int3
shl
cld
stc
repz
and
mov
loope
loop
lock
jmp
cmp
cld
cmpb
cld
rol
aad
lret
fisttpll
xchg
icebp
sub
iret
lret
fdivr
rolb
out
ret
in
test
nop
mov
in
loop
repz
in
int
into
cmp
cmp
loop
in
fsub
ljmp
aad
ljmp
ljmp
hlt
test
fsubp
cmp
fimull
xor
xlat
int
lret
fsubr
fcmovu
fdivp
in
loop
in
and
lock
mov
fisttpll
xchg
loope
shll
fcmovnb
in
jmp
cmp
loopne
ljmp
dec
ljmp
ljmp
cmp
fcomip
cli
inc
in
call
rorl
xor
ljmp
aad
repnz
sti
cmp
test
sbb
repz
leave
call
cmp
clc
int3
addl
jmp
test
push
add
movl
jmp
sarl
rcl
rcl
rol
ret
bound
into
lods
mov
cmpsb
add
addb
fsincos
icebp
repnz
lret
orb
xchg
test
out
xor
rcl
fsubrp
xlat
cmp
cld
clc
fdiv
xchg
lret
int3
sti
mov
cmp
xlat
int3
stc
icebp
in
das
leave
in
ds
in
into
ret
out
out
xchg
in
xchg
decl
mov
fcmovnb
in
fcomp
out
lret
div
shl
in
xchg
xchg
in
jmp
shlb
out
sar
std
jmp
cmp
into
cld
xchg
aas
incl
test
ret
hlt
rcl
das
fidivrs
loopne
jecxz
fld
jmp
sti
mov
out
out
in
repnz
xor
int3
cld
cli
ror
cld
shl
out
rolb
out
mov
mov
int3
ret
int3
stc
icebp
lock
into
loope
and
ret
ret
add
or
shl
ret
shll
sti
call
sti
stc
in
testb
std
xchg
mov
repz
xor
imul
xor
icebp
int
xor
cmc
jmp
stc
mov
mov
lds
shl
sub
sti
rcl
int
fcmovnbe
out
cld
fmulp
out
shr
xchg
aad
lret
repnz
repz
cmp
int3
loopne
in
sbb
xchg
cld
sub
into
mov
ljmp
repnz
fsubr
cmp
jecxz
into
test
xchg
out
xlat
imul
int
repz
fnstenv
aad
cmp
push
repz
mov
test
out
xchg
in
xor
loop
cmp
loope
mul
hlt
loope
in
out
jmp
ljmp
cs
cmp
loop
rcr
fsubrp
clc
les
jmp
in
xor
ljmp
std
out
cmp
shl
cld
fabs
loope
fsubp
out
lock
jmp
clc
xor
rcr
cmc
fsubr
in
int3
jmp
cmc
loopne
ffreep
vpmaxub
int3
lock
clc
call
cmp
test
neg
aad
sti
cld
icebp
int3
mov
cs
out
enter
out
aad
idivl
aam
icebp
into
in
loopne
sar
ror
cmp
lret
in
cmp
adc
incl
enter
cmc
lret
loop
into
std
call
lock
test
loopne
in
addl
xor
repnz
aaa
in
shl
aad
fdiv
icebp
loop
cld
lock
fcmovnu
lret
test
out
ror
repnz
repnz
in
out
int
fsubp
dec
lock
stc
repz
rol
lret
in
in
int3
addl
fdivs
in
ljmp
loopne
mov
mov
out
shll
out
out
int3
cs
rcr
std
cmpl
and
loope
out
in
in
movl
fdivrs
iret
lret
in
out
fidivrl
xchg
out
incl
test
xor
xor
clc
lock
ljmp
aas
test
in
sub
iret
jmp
out
sub
jecxz
aaa
in
cmp
cmp
cld
cli
cmp
shr
movb
out
clc
fmuls
call
cld
lock
cmp
loopne
vpmulhw
fcmove
cld
faddp
in
xchg
out
int3
int
icebp
iret
stc
stc
rcl
lret
rcr
fidivrs
out
sub
aam
std
xchg
orb
ret
das
cmp
ljmp
fucomi
fdivp
fcmove
test
sbb
in
cli
decb
xor
repz
ljmp
test
ret
loopne
or
cld
aad
into
out
int3
fxch
fldl2e
adc
div
jmp
mov
test
call
loopne
iret
cmc
jmp
loope
cmpl
shl
xchg
stc
sub
nop
xchg
aad
in
loopne
enter
icebp
idiv
xor
flds
ljmp
xchg
enter
out
cmc
divb
cmp
call
cmpb
rcl
mov
sti
int3
stc
out
adc
in
out
inc
hlt
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
mov
scas
jg
cmpsb
add
cmp
fsubrp
xor
icebp
repz
test
lds
xor
mov
ret
icebp
sub
fidivrl
faddp
out
loopne
hlt
rolb
cmp
xchg
nop
mov
out
sub
ds
enter
stc
out
rol
fcmovu
mov
mov
shl
stc
repnz
rol
rcr
ret
repnz
orb
aad
repz
shl
enter
repz
cmp
fiaddl
enter
fxch
in
orl
repz
fsubr
aas
std
test
mov
mov
in
lret
loope
fsubr
fsubp
call
jmp
shl
aad
loope
frstpm(287
cli
fucomip
fmul
popl
lea
lret
clc
add
rcr
loop
enter
test
in
vpmullw
call
fstp
cmp
filds
cmp
rol
enter
or
loopne
xchg
fxam
in
loop
iret
out
cmp
xlat
in
aam
xchg
fmull
mov
int
loope
into
shl
leave
clc
int
cli
fmulp
fsubr
aad
les
sti
clc
enter
loopne
repz
out
xlat
leave
repnz
cmc
int3
cli
cmc
shl
test
call
nop
ljmp
int3
lret
fadd
shr
call
loopne
hlt
out
loop
xchg
fimuls
std
xchg
fmul
shl
xor
icebp
enter
cli
clc
ss
std
div
mov
test
test
mov
int
repz
int3
aad
cmp
xlat
into
xlat
repz
mov
cli
loopne
cli
out
mov
ss
loop
int
leave
idiv
xlat
cmp
in
sarl
faddl
and
out
fisubrs
loop
aam
repz
fsub
in
aam
xor
fcom
loop
add
out
cld
std
lock
xor
out
int
hlt
not
fadds
enter
jmp
into
test
repnz
jecxz
loop
jmp
iret
repz
loope
clc
cli
ret
add
xchg
loop
sub
in
in
ljmp
jmp
stc
jecxz
testb
addl
jmp
in
mul
int3
repz
test
out
out
addb
orl
ds
out
stc
out
icebp
call
xor
cld
cmp
clc
incl
enter
int
loope
aad
in
fprem1
out
cmp
mulx
test
in
loopne
jecxz
in
in
cmp
fst
out
fnstsw
sti
stc
loope
shl
loopne
fucomp
orl
loop
leave
aam
ljmp
ret
loop
out
mov
stc
mov
lret
xchg
mov
hlt
sar
iret
lret
lock
jmp
cmc
repnz
fidivrl
xchg
xchg
int
jmp
aam
lds
cmp
repz
in
enter
xor
xlat
jecxz
xlat
fsub
loopne
lock
not
ljmp
xlat
rcr
fdivrp
mov
out
enter
int
in
ret
into
int3
lret
fidivs
repz
clc
sar
in
xlat
mov
fiadds
jecxz
shl
ljmp
cmp
out
call
fmulp
std
fsubr
xchg
mov
lret
xlat
jmp
xor
aam
std
stc
cmc
jmp
fmulp
xchg
lea
int3
out
xlat
out
iret
rcl
cmp
sarl
cmp
loope
and
stc
loope
out
push
sub
xor
cs
aam
in
fucomip
std
addb
in
in
jmp
ror
call
ljmp
icebp
sarb
repnz
leave
xchg
fmul
and
mov
jecxz
into
sti
cmp
cmp
sti
std
sar
fdivr
ret
fcmovu
lret
fcmovbe
ror
fdivr
lret
into
cmp
cmc
ret
aam
clc
into
xchg
fisttpl
mov
test
xchg
fsub
ret
loop
xor
int3
in
out
shl
roll
test
int3
sub
rol
sub
cmp
cli
icebp
fcmovbe
aad
jecxz
fcomip
rorl
test
add
add
ret
fcmovnu
aad
inc
pop
inc
outsb
leave
sbb
mov
jl
add
aam
ret
sti
call
lret
xchg
lret
aaa
xlat
aad
jmp
cmp
ds
cli
decl
in
dec
out
iret
out
ss
int
lret
cmp
int
iret
loop
loope
aam
sti
ret
jmp
nop
jmp
xor
cmp
ss
lock
rcr
shr
jmp
fiaddl
leave
in
lock
aam
fcomip
jmp
rorb
out
icebp
call
xchg
test
xlat
aad
stc
dec
in
out
and
faddl
cli
xchg
rcll
hlt
aad
in
iret
ss
xlat
ss
jecxz
add
ret
hlt
sar
jecxz
in
lock
sub
in
repz
repz
fdivrp
shl
out
leave
ljmp
loop
xorb
cmp
into
out
call
fcmovnbe
aas
cmp
jmp
out
sti
test
cmc
lret
ret
shl
stc
in
aad
div
repz
rcl
loopne
in
leave
int
test
nop
sar
ss
xor
jmp
lret
testb
repnz
cmp
mov
adc
in
rol
cs
aaa
xor
rcr
xlat
repz
fcmovb
into
sar
sbb
mov
sti
out
test
ror
xlat
sti
in
ss
cmp
fsub
jmp
orb
loope
aam
in
fsub
in
fdiv
int3
repz
fcomip
out
icebp
testl
in
adcl
cmp
cmp
cmp
cmp
int3
rolb
leave
aam
in
iret
mov
into
test
in
not
in
out
repz
loop
test
test
jmp
jmp
fchs
lock
iret
xor
xor
enter
xor
test
out
shl
hlt
addl
mov
call
jmp
call
sar
test
fsubr
repnz
mov
lock
int
xorb
in
out
enter
ds
aas
jecxz
out
cmp
sub
test
lret
out
loopne
vshufpd
fndisi(8087
fcmovu
jecxz
out
out
leave
loopne
rcl
xlat
cli
mov
call
shrb
cli
rcl
fstp
rcl
push
loop
mov
orl
iret
xor
ss
in
icebp
lret
ljmp
cmp
mov
repnz
iret
int3
clc
sti
lret
fst
jmp
rol
out
xor
in
aam
ss
rcl
stc
fstp
hlt
testb
out
fldl2e
fdivs
aad
out
ds
jmp
xlat
test
shl
xchg
add
mov
out
mov
int
aam
cmp
cmp
sarl
cli
xor
add
loope
ds
out
loopne
cmc
xchg
fsubrp
out
into
aaa
cmp
cmc
cld
repnz
int
repnz
stc
or
out
in
call
out
out
shl
in
in
lock
out
leave
xlat
fcmovu
fcmovnu
aam
in
xchg
mov
cmc
rcr
lds
cmp
lret
imul
xlat
aam
orl
roll
ss
ljmp
ds
rol
and
loopne
mov
cli
ror
loop
xor
cmp
xor
icebp
aas
rcl
test
lds
in
icebp
in
out
ret
shr
out
aaa
int3
out
sar
cmp
repnz
fld
aad
xchg
in
ljmp
jmp
in
out
imul
shll
and
shl
aam
test
nop
mov
lret
aaa
cmp
in
repz
fsub
aad
test
xchg
in
jmp
in
jmp
ss
rcr
int3
jmp
repz
stc
enter
sub
fisttps
not
lock
int3
in
fdivr
lock
fmul
in
mov
xor
repnz
cmp
xor
call
neg
cmc
out
loop
loope
std
lret
mov
divb
ror
jmp
sarb
in
aas
loopne
hlt
mov
neg
ljmp
jmp
hlt
call
jmp
jecxz
repz
xchg
aam
mov
mov
mov
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
call
ret
shlb
rcr
in
fcomp
cmp
xor
aas
fndisi(8087
test
ret
sti
ljmp
mov
nop
xor
int
clc
xor
in
rcr
orb
jmp
cld
loopne
ret
lret
shr
in
in
into
jmp
repz
sar
fdecstp
loopne
hlt
idiv
fimuls
xor
xor
cmp
int
fdivrs
hlt
leave
iret
enter
xchg
xchg
aaa
iret
shl
ss
ror
ss
iret
int3
aad
hlt
cmc
xlat
loopne
enter
orl
fucomp
cmc
sti
not
hlt
ret
test
rcr
mov
clc
mov
xor
rcr
shl
cs
into
fsubr
jecxz
icebp
test
stc
clc
mov
in
loope
hlt
xor
hlt
leave
xlat
fsub
aas
addl
mov
loope
int3
test
shll
repz
aas
sarl
mov
enter
nop
jmp
addl
ss
out
aaa
jmp
rcl
out
icebp
faddl
in
repnz
xor
sub
loop
stc
in
lock
ror
mul
sti
out
enter
fldl
loop
lds
stc
cmp
aad
cmp
cmp
stc
std
mov
xchg
fimull
hlt
in
int3
ljmp
sarl
aas
loop
rcr
in
sub
call
fisttpll
shlb
ret
cmp
and
into
icebp
test
aad
mov
sub
loopne
fdivp
shrl
sub
vpaddusb
stc
shr
lret
int3
ror
notrack
fcomi
aam
mov
nop
out
out
enter
stc
lret
fcom
in
ret
cmp
loop
aam
jmp
cld
popl
ret
div
stc
fucompp
out
cmp
cli
into
fdivp
shl
fadd
cld
cld
aam
out
leave
cmp
nop
mov
iret
int3
xlat
cli
out
in
jecxz
repz
fucom
fld
hlt
add
int
jecxz
aad
out
in
jecxz
ret
call
enter
test
rol
loop
out
int
sub
lock
call
sti
fcomip
stc
vpsubq
lds
stc
fmul
and
aad
loopne
aad
rcl
repnz
icebp
cli
hlt
fstpt
in
fcomip
fmul
xchg
mov
mov
loopne
ror
jecxz
in
repnz
cld
in
out
cmp
ds
out
sti
loope
loopne
loopne
int3
mov
int3
sarl
std
ljmp
int
iret
loope
xor
mov
decl
test
leave
aaa
shr
test
cmp
xchg
mov
incb
in
rol
out
xlat
lds
cmp
adc
mov
xchg
lea
ljmp
ss
ss
div
int
sti
xlat
icebp
ret
addl
call
out
cli
out
leave
ds
fdivrs
jmp
hlt
icebp
stc
in
cmp
cli
cld
jecxz
into
leave
aam
sar
in
xlat
out
rol
cmc
cmp
out
cli
clc
test
sbb
in
addb
idiv
fcmovne
cmp
inc
and
lock
fdivr
fcomip
mov
int3
xchg
in
ret
xor
aam
int
cmp
shl
fcmovnbe
aas
in
cli
leave
xchg
leave
in
jecxz
fiadds
in
ret
sub
fcmovnu
std
cmp
rcl
rcr
fiadds
mov
into
lret
out
repnz
std
stc
cmc
xor
xchg
sti
repnz
lret
test
leave
ror
xor
cmp
xlat
shl
xlat
repnz
mov
test
lret
fmul
lret
int3
xchg
lret
enter
clc
fnstcw
aam
ljmp
in
cmc
hlt
ljmp
decl
enter
shl
ds
enter
rolb
loopne
cmp
xchg
mov
out
jmp
std
out
fsub
fld
sti
aad
xchg
mov
xor
jmp
hlt
loop
lret
sar
loopne
sarb
out
stc
repnz
loop
test
in
out
movl
add
rol
int
fst
fcmovne
xor
sub
mov
jl
jmp
repnz
stc
sbb
out
fdivr
lock
clc
testl
cs
out
sti
repnz
call
hlt
neg
aas
cli
lock
ljmp
fisttpl
divl
aad
call
and
mov
xlat
test
lds
into
fadd
in
out
cmp
cmp
cmp
int3
in
int
repnz
fimuls
icebp
int
out
repz
cmc
lret
xor
vpmuludq
in
xchg
cld
lret
dec
shl
mov
fsubrp
aaa
out
aaa
jmp
into
std
cmp
cmp
out
lea
mov
test
aaa
xor
fdivrs
push
aas
hlt
loop
test
repnz
cld
cld
loop
test
xchg
sub
fprem
test
cmp
rolb
clc
std
ret
lret
mov
mov
imul
repz
iret
cmp
out
cmp
repz
test
std
les
lret
out
lock
icebp
lock
out
iret
lock
hlt
cld
in
rcr
icebp
push
cmc
mov
and
fcmovne
orl
in
cmp
stc
std
fiadds
fstp
cli
call
fmulp
fsubr
shl
iret
shl
lret
cmp
out
sarb
ret
fcmovbe
cmp
call
loop
ljmp
xor
mov
rcr
repz
shl
aas
test
mov
loope
out
jmp
ret
xor
xor
rol
xor
aam
sbb
imul
icebp
xlat
enter
iret
orb
les
icebp
cmp
fdivr
in
shr
aad
rcr
sar
jecxz
filds
mov
aad
into
out
int3
cld
aas
iret
shr
xlat
repnz
aam
cmc
int
fdivr
loopne
int
hlt
out
xor
xor
jmp
cmp
fxtract
sti
iret
fcomip
cmp
cli
int
enter
loope
shl
in
int
into
call
cmp
jecxz
clc
xor
call
out
shr
out
in
xor
int
loopne
fstpt
ret
test
aad
leave
fsubp
loopne
loope
std
les
sarl
xor
cmp
out
in
ffreep
jecxz
test
aam
mov
mov
jmp
lock
xor
out
aaa
repnz
iret
cmp
int
cmp
clc
loop
fiadds
in
loopne
ljmp
aad
int3
icebp
shl
xor
mov
leave
ljmp
ror
xorl
out
ror
cmc
test
cmc
fmul
fnstcw
test
xlat
xlat
fsub
mov
xchg
aad
xor
rol
cmp
call
fiaddl
fldl
mov
and
aad
jmp
jmp
ljmp
out
xlat
fldl
loope
jmp
ljmp
sti
out
into
rcr
fnstcw
lret
xchg
mov
lret
std
xchg
ljmp
lret
out
iret
ss
or
shl
fildl
loopne
in
aaa
jmp
lret
out
cmp
fucom
sti
addl
stc
in
sar
out
out
shll
fadds
sbb
ret
clc
lds
jmp
xor
in
sub
in
das
cmp
leave
aam
shl
ret
test
sar
mov
xchg
fmulp
xchg
xchg
hlt
vpaddq
fsub
xor
rcl
repnz
fildl
xchg
shr
in
loopne
fimuls
int
fcmovnu
cmp
test
rcl
cli
fisttps
loop
call
xor
xlat
fcmovbe
int
sar
out
cmp
xlat
icebp
fimull
out
in
jmp
xor
enter
ffree
or
xchg
neg
rolb
out
int3
fucomp
xor
lret
xor
sti
cmp
enter
cld
cmp
aad
mov
sub
in
jecxz
orl
xor
mul
shl
fpatan
aad
mov
sar
adcl
shl
aam
into
in
into
cmp
aad
jmp
ret
out
in
loop
in
out
loope
int3
test
std
roll
add
lret
ret
fstpl
fidivrl
pop
stos
inc
jg
cmpsb
add
in
cmp
idiv
enter
lret
mov
int
int3
in
div
clc
addl
clc
loopne
test
ljmp
jmp
ret
hlt
in
in
out
cmc
cmp
jecxz
aad
mov
jmp
mul
out
int
ljmp
sarb
loop
ret
rcr
test
loope
clc
out
in
shl
xor
cmp
in
cmp
iret
sti
fmul
shl
cmpl
and
jecxz
lret
adcb
rcl
xor
call
out
loope
ffreep
jecxz
sti
test
int3
shr
mov
out
jecxz
lret
sub
cld
hlt
rcr
stc
loop
ret
std
mov
aam
out
lret
into
mov
mov
repnz
xor
clc
vpsubw
aad
into
ret
fucom
loop
mov
loop
or
cmp
jmp
into
rcr
leave
xor
stc
loop
test
rcr
fiaddl
loop
fimull
neg
rol
enter
enter
rcl
mov
xchg
ret
fimull
les
int
icebp
fisubrl
out
hlt
in
ret
mov
repnz
testl
fsubrp
stc
xor
out
out
sti
cmp
or
fcomip
faddp
mov
in
shl
fucomip
int
ret
hlt
out
ss
xlat
sti
loop
std
rorl
mov
out
test
shr
enter
shr
cli
ror
fidivrl
loop
test
cli
mul
leave
ljmp
sub
shlb
xlat
out
repnz
ror
lret
rol
shl
sti
mov
in
clc
mov
xlat
repnz
fcmovbe
cmp
fcmove
aam
repnz
out
cli
cmp
std
cli
call
fucomp
out
adc
xor
into
out
cmp
xor
lret
rcr
lock
lock
ret
mov
in
loope
ret
cmp
sar
leave
fcmovb
xor
call
sar
stc
xchg
incl
fisttps
cs
jmp
cli
lret
loope
and
sti
aam
lock
fiaddl
mov
mov
xor
loop
into
iret
xor
xlat
cli
fsub
rol
xlat
out
neg
out
sbb
lea
jmp
jmp
faddl
out
aad
jmp
addl
loop
fucomp
lret
loop
shlb
sarb
ret
testl
sti
mov
nop
aad
int
cmp
test
sar
ds
incb
fisttps
out
out
ljmp
rcl
test
shl
repnz
shl
cld
test
aam
mov
lock
aam
enter
xor
or
rol
in
aam
out
lock
repz
jmp
shrl
xor
cmp
stc
aas
aam
enter
mov
nop
rcll
out
cmp
out
fldln2
lock
shl
ljmp
nop
icebp
out
xchg
sarl
lock
call
stc
in
jmp
cmp
ret
mul
xchg
sti
mov
loopne
out
mov
xor
stc
fcom
stc
aaa
cmp
out
cmp
hlt
cmp
rol
out
flds
fcomp
loop
into
cld
repz
in
fdivr
cli
cmp
icebp
fldln2
icebp
clc
sar
in
out
shr
in
mov
iret
call
iret
sti
aaa
fidivrl
cmp
aad
shl
fldl
rcll
sti
das
jmp
cmc
cmp
fildl
fabs
std
call
call
sti
jmp
aam
fidivrs
int3
cli
cmc
fdivr
xchg
enter
fcmove
mov
out
loopne
into
call
xlat
xlat
stc
hlt
in
sti
loope
loop
mov
mov
lret
shl
xor
out
xor
cmc
loope
fcmovnu
aam
shl
cmp
in
ds
xchg
mov
das
jecxz
lret
ljmp
stc
rcl
fisttps
jecxz
lret
fimuls
lret
shr
das
aaa
sar
out
cmpl
fdivr
fmuls
test
in
xor
xor
shr
loope
lret
neg
incb
ljmp
add
mov
jmp
aam
fcmovnu
mulb
and
inc
jg
cmpsb
add
mov
fucom
lret
lock
jmp
aad
std
enter
fdivp
xor
ffreep
incl
ljmp
shr
repz
stc
xor
std
cmp
cld
fcmovnu
loope
in
lock
out
cld
leave
mov
cmc
shrl
imul
in
in
adc
loop
adc
cli
into
in
in
in
ljmp
jmp
ds
loope
xlat
fdivrp
addl
aad
shl
cmc
cli
shr
sti
fdivrp
cmp
sti
flds
mov
cld
loopne
loopne
loop
xor
iret
call
aas
sarl
cli
icebp
fnstsw
lock
aam
fsubp
jecxz
ret
std
ds
int
iret
iret
iret
std
icebp
into
lret
cld
out
xor
rcr
ffreep
test
mov
std
ret
in
ljmp
lock
cmp
fucom
fisttpl
fst
loopne
shl
jecxz
shr
shl
cmp
lret
xlat
loope
ret
fst
rolb
call
out
jmp
stc
cmp
out
div
loop
rolb
aad
stc
in
lds
ret
rol
cmp
lret
in
sbb
sub
movl
sti
xlat
in
xor
adc
rcl
cld
xchg
loop
xchg
fisttpl
in
lock
ss
out
ss
cmp
mov
idivb
fcmovu
mov
in
in
jecxz
out
enter
icebp
ret
fcmovnb
hlt
test
out
mov
xor
imul
fstp
hlt
cmp
cmp
loop
rcr
test
fdivrp
ljmp
aaa
int3
xor
in
out
int
lret
clc
fchs
fadd
jecxz
addb
fisttpll
jmp
int3
fcomip
rcr
in
repnz
enter
and
out
xor
aaa
xor
div
cmp
ljmp
shl
fldpi
enter
icebp
rcl
out
aaa
cmp
int3
out
ljmp
xchg
shl
aad
lret
mov
jmp
into
iret
sub
int3
iret
cmp
call
and
fcmovb
rcr
shl
jmp
mov
repnz
xor
in
loop
fcmovbe
fcmovu
loope
in
jmp
jmp
rcl
cmp
cmp
idiv
cmp
xor
aad
aam
int
test
fsubrp
repnz
iret
jmp
enter
into
hlt
rcr
cmp
loop
cld
ds
jmp
ljmp
int
out
shll
or
sarb
cmc
rcl
lret
out
ljmp
sub
in
rcr
cmpl
aad
enter
jmp
in
test
jecxz
int
divl
call
call
sti
test
call
mov
in
rcl
nop
rorb
out
in
out
ror
cmp
test
cmp
mov
loope
fsub
addl
out
lret
cmp
out
divl
ds
cmp
cmp
loopne
hlt
fdivp
or
xchg
repz
rcl
jmp
hlt
lock
hlt
out
rcr
sar
sti
vshufps
call
in
enter
shr
repnz
stc
stc
out
out
sbb
not
icebp
ret
ret
jmp
cli
addb
ret
xor
hlt
imul
shl
idiv
int
loopne
fucomip
lock
cli
fstp
loope
iret
mov
inc
into
jecxz
div
aaa
enter
aaa
aas
shl
in
orl
out
iret
imulb
out
leave
lret
ffreep
shl
aam
fucomip
fsub
rcl
enter
jmp
leave
out
jmp
xor
in
int3
aaa
int3
xor
in
flds
mov
lret
mov
into
fucomi
test
int
jmp
int
fsub
cli
cmp
lret
rol
jmp
leave
cli
mov
in
rcr
fcmovnu
jmp
loopne
das
out
out
sub
cmp
aaa
aas
cmp
hlt
loopne
in
jmp
mov
mov
iret
loop
xor
fcmovnu
lret
aad
cmp
fsub
loope
aam
fsubp
stc
out
fcomi
roll
call
mov
add
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
sbb
jle
jg
cmpsb
add
cmp
clc
cld
fidivrl
ss
adc
out
sar
in
jecxz
in
in
sti
int3
call
enter
iret
aad
ror
sbb
fcom
repnz
int
enter
ljmp
out
aam
aaa
int
fsubr
dec
bnd
clc
rcr
mov
addb
loopne
into
repnz
enter
xor
fcomp
int
ret
out
jmp
test
out
mov
decb
jecxz
into
cmp
leave
fucomp
repnz
call
test
rol
in
jmp
mul
fdivrp
loop
call
jecxz
xor
int3
aas
cmp
out
shl
cli
mov
cli
in
lret
lea
out
lret
cmp
cmp
aad
cmp
test
stc
std
aam
shr
icebp
int
in
out
out
lret
shl
ror
fiadds
into
rcl
fcomi
fsub
les
fmul
iret
shrl
repz
xor
idivb
idiv
xchg
test
jecxz
nop
test
xlat
out
cmp
sti
iret
shlb
fdivr
fcomi
lock
in
cld
test
mov
in
aad
repz
repz
in
sarb
loopne
stc
mov
out
icebp
lret
shl
shl
lds
lret
ds
std
icebp
ret
repnz
sar
imul
mov
xchg
ret
stc
out
out
cmp
int
cmp
lock
mov
cmp
xor
ror
lret
cmp
cmp
fistpll
jecxz
fisttpll
loop
xchg
aas
lock
repz
aam
in
repnz
idiv
cld
ds
sub
mov
mov
lret
vpmaxsw
shl
jmp
xor
xor
aad
aam
div
enter
or
xchg
mov
aad
loopne
fisubrl
lock
fst
cmp
aas
sub
lds
subb
xor
rcr
icebp
clc
repz
hlt
std
clc
ds
call
mov
flds
repz
repnz
cmp
jmp
out
sar
icebp
fiadds
xchg
mov
xor
into
icebp
enter
shll
xor
in
sar
ds
loope
not
mov
mov
in
repz
lock
in
in
fcomi
ds
ror
xchg
fldl
push
out
xor
lret
out
in
jecxz
cli
iret
test
test
int3
fucomp
clc
fdivp
or
out
icebp
sti
call
fsubr
mov
enter
mov
xchg
int3
lea
out
xor
enter
shl
adc
aam
cld
fmull
out
fiadds
xor
aaa
rol
int
cld
sar
cld
int
std
fadd
stc
mov
std
mov
in
loop
out
std
xchg
in
stc
xor
lret
shr
loope
out
cmp
xor
clc
mov
sbb
xchg
in
das
das
clc
ljmp
int3
aas
cmp
xor
in
lret
icebp
mov
ljmp
lret
std
neg
sar
fcomi
test
jecxz
ffree
jmp
lret
nop
loope
xor
rcl
sti
cmp
and
repz
loop
lret
out
addb
fdivr
out
fsincos
cld
cli
int
fdivp
cld
jmp
shl
cmp
mov
in
out
int3
in
divb
cmp
repz
cld
cmp
cmp
cmc
aas
jmp
idiv
mov
jmp
jmp
lock
sbb
roll
int
out
into
movb
enter
out
ss
into
not
aad
out
out
loopne
mov
fcmove
std
iret
addb
ret
ss
cmp
cmp
aaa
test
jmp
in
stc
fcmove
jmp
mov
out
ljmp
repz
faddl
testb
loope
in
out
shl
shl
repz
fucomi
shl
in
iret
ret
repnz
in
hlt
in
in
cli
icebp
ljmp
lds
lock
jmp
sar
loop
xchg
clc
lret
lock
shlb
sub
fcmovbe
iret
aas
ror
cmp
jne
jmp
mov
jmp
iret
aad
aad
adc
lea
or
dec
jg
cmpsb
add
in
fadds
aad
fiaddl
jmp
xor
iret
stc
aad
stc
cmp
xor
fadds
cld
lds
mov
xchg
test
repnz
repz
aad
jmp
std
cmp
call
loop
mov
mov
cli
xchg
mov
xchg
int
out
xor
sub
aaa
icebp
iret
addl
sbb
mov
vpsrlw
into
xor
ret
cmp
loope
loopne
fdiv
sbb
call
sar
test
ror
xor
ljmp
cmc
std
repnz
cli
addb
rcll
leave
into
repz
out
cmp
leave
out
sti
cli
in
cmp
rcl
aad
ds
xchg
orb
out
in
fcmovnu
jmp
shl
inc
hlt
xchg
orb
lock
xor
cmp
fcmovb
cmp
cmc
lret
cli
test
fxtract
mov
jmp
leave
loop
jmp
lret
jecxz
call
aas
fidivs
enter
aas
in
roll
in
out
enter
mov
sub
hlt
out
in
repz
hlt
lds
hlt
fiadds
sub
in
out
cmp
rol
div
cmp
iret
xlat
lock
loop
xlat
std
loop
std
cmc
nop
out
das
jecxz
vpsrld
jmp
cmp
aam
call
cli
xlat
hlt
neg
xor
out
fucomip
int3
into
ljmp
shr
std
fdivr
rcl
fisttps
nop
jmp
loope
xor
cmc
out
cmp
cmp
xchg
div
fcmovnu
out
mov
ds
out
imul
out
aad
fld
lock
cmp
les
cli
mov
ret
iret
xor
fadd
int3
clc
std
cmp
test
loope
lds
lret
call
stc
int3
aam
call
hlt
stc
into
div
repz
mul
aad
loope
nop
jmp
out
in
ljmp
cmp
ss
fmul
loop,pt
decb
mov
xchg
adcb
repz
sti
fdiv
in
stc
xor
out
ret
shl
test
addl
ret
icebp
std
fcmovbe
out
fst
cld
loopne
stc
in
rorl
mov
shr
lock
aad
ss
cmp
into
xlat
sar
add
iret
out
int
icebp
test
in
stc
xor
xlat
enter
repnz
xlat
int3
and
test
in
int3
out
mov
std
jecxz
in
call
lret
lret
out
ljmp
rcl
ds
into
out
xchg
out
in
enter
fcmovb
enter
xlat
loope
loop
vpavgb
xchg
iret
out
repz
mov
int
loop
ret
rcr
clc
xor
fdivp
std
ret
rol
call
out
mov
int3
test
in
in
repnz
repz
mul
cmp
cmc
fdivr
fcmovnbe
enter
fucomp
into
addl
stc
call
sti
repz
hlt
repnz
sub
jmp
out
fdivp
sar
jecxz
ss
int3
leave
cld
cmp
cmc
cld
fcomip
out
aam
enter
nop
in
mov
sub
xor
sti
enter
out
cmp
ds
sar
xbegin
xchg
int3
out
shl
jecxz
in
hlt
leave
ds
rol
aas
mov
loope
aad
clc
loopne
sub
ljmp
leave
ror
fldl2e
cli
xor
cmc
test
jmp
sti
orb
xor
icebp
cmp
out
int3
cmp
fdivr
sar
mov
call
mov
repnz
call
cmc
enter
cmp
aam
test
neg
stc
mov
in
cs
aam
leave
cli
fidivrl
fstp
int
out
out
ret
rol
orl
in
jecxz
out
imul
fcom
clc
xor
cld
ss
cmp
ret
cmpb
xchg
in
int
out
jmp
push
jmp
xlat
cmpl
jmp
int
nop
rorb
loopne,pn
out
out
fidivl
loopne
fidivrl
mov
mov
jmp
mov
int
mov
push
push
rclb
jl
add
aam
dec
enter
xchg
iret
xor
in
fld1
neg
cld
and
cld
sarl
xor
test
lret
out
iret
call
hlt
jmp
loope
cmc
ljmp
mul
std
call
jmp
out
cmp
ss
shl
ljmp
in
jmp
ljmp
mul
leave
imul
in
cmp
adc
aaa
test
lock
ds
clc
jmp
lret
sub
sub
loop
into
aam
jmp
shl
repnz
hlt
orl
xchg
ljmp
ss
cmp
iret
repnz
cmp
shl
out
adcb
sub
in
int3
out
neg
cmp
sti
aad
cmp
int3
jecxz
nop
std
icebp
test
ret
ss
out
ss
out
ss
stc
clc
flds
jmp
fdivrp
into
sti
lret
ss
rcr
cmp
idivb
hlt
out
xlat
test
mov
addb
in
lock
stc
not
fcmovne
int
aas
rcr
ror
cld
sbb
fsub
xchg
test
xor
aam
loope
jecxz
icebp
fcmovnbe
cli
rolb
enter
loop
int
cmp
cmp
lret
test
roll
vcvttpd2dqx
xlat
ss
out
in
jmp
out
fsubp
rcl
not
xchg
ret
cmp
enter
xchg
jmp
das
hlt
in
lock
in
fst
loopne
leave
call
jmp
xchg
xchg
xor
shl
div
cmp
aam
aad
fstp
aas
xchg
shl
fisttpll
decb
fyl2x
jmp
xor
lret
not
iret
aad
call
loope
fimuls
imul
mov
lret
mov
ss
ror
into
fmulp
idiv
fcom
push
cli
hlt
loopne
cli
aad
loope
mov
xchg
xchg
fucom
int
loop
cmp
stc
repnz
not
out
flds
loopne
in
out
leave
ret
nop
xchg
out
lret
repnz
hlt
in
repnz
cli
cmpl
repz
fucomip
xchg
decb
sti
iret
jmp
ds
sbb
sbb
faddl
jmp
int3
addb
std
div
out
loopne
cmc
sti
hlt
test
incb
int
nop
repz
xor
cmp
cmp
call
sar
std
int3
sar
lock
stc
inc
fiaddl
ret
ror
not
shl
int
sbb
idivl
loopne
mov
sub
test
jmp
cmp
in
int3
ds
cmc
rcr
std
rcr
call
out
out
enter
int
lds
xor
hlt
fstp
jmp
fcmovnbe
test
rcl
cmc
fucom
ljmp
jmp
xor
not
push
ds
cmp
lock
std
add
cld
fmuls
cmc
xor
sub
std
shl
inc
sti
loope
xchg
xchg
out
test
mov
aas
xor
into
leave
fcom
aad
std
fistpll
sarb
xlat
cmp
lret
out
in
in
xchg
rcl
xor
lret
out
ljmp
div
fdivp
xlat
ret
xlat
test
test
icebp
xchg
int3
ljmp
xor
in
fdivr
loope
xlat
clc
mov
mov
test
sub
iret
xor
repnz
cmp
fbstp
clc
cld
ljmp
fstp
stc
xchg
xchg
rorb
faddp
xor
xor
jmp
iret
clc
fdivrp
dec
out
repz
aad
aad
stc
xlat
fnstsw
jmp
mov
jmp
out
in
fldl2t
into
fucom
rcl
fstpt
rcr
repz
and
orl
aad
f2xm1
jmp
std
out
adc
idiv
mov
loope
lock
in
aaa
xlat
lret
ljmp
aad
cmp
fdivr
fldpi
in
icebp
iret
lock
cld
test
lret
in
out
int
iret
cmp
in
aad
cld
cmp
hlt
loopne
icebp
test
lea
shl
ror
aaa
out
hlt
int
ffree
fnstsw
cld
adc
or
loopne
in
lds
cmp
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
in
in
hlt
cmp
stc
iret
cmp
jmp
sti
shl
in
loope
fst
out
fucomip
lret
int
jecxz
lret
cs
out
lock
aas
stc
lock
iret
cmp
shl
sbb
into
cli
xchg
jecxz
jmp
cmp
cmc
cmp
fdivr
ret
stc
test
enter
test
or
jmp
vpsrad
out
aaa
jmp
jecxz
aad
fcmovnb
call
test
into
fcomip
sub
cmp
cld
in
aad
neg
loopne
loop
jecxz
stc
rcl
ret
loop
jmp
faddp
xlat
in
out
call
call
in
out
cmp
xchg
fsubp
int3
out
fidivs
int
clc
cmp
rol
repz
rol
lret
ret
in
hlt
fimuls
jmp
ret
jmp
int3
sti
sti
loopne
aam
rol
xchg
aam
flds
std
in
in
xor
xor
ljmp
cli
into
cmp
cld
ret
test
or
loopne
fdiv
out
out
xlat
in
cld
xlat
sti
stc
ret
loop
cmp
test
xchg
ret
sar
clc
stc
not
aaa
enter
test
xchg
call
jecxz
in
lret
mov
stc
das
sub
icebp
cmc
fcomip
clc
aaa
ljmp
shr
cmp
cmp
cmc
rol
xor
lds
int3
jmp
loop
ret
mov
ror
loop
test
in
loop
fpatan
xlat
int3
ds
repz
aam
xchg
shl
fcomi
loope
jecxz
jmp
mov
ror
ss
fcmovu
sti
cmp
sar
push
loop
neg
leave
ljmp
lret
sarl
out
call
rcl
jmp
sti
jecxz
mov
addl
loop
rol
jmp
cmp
out
lret
hlt
iret
div
out
sar
xlat
neg
rcl
fisttpl
out
xor
rcl
repz
repz
xor
ret
aas
loope
xchg
icebp
shr
aad
stc
hlt
cmp
fmul
cld
sti
in
sbb
clc
fcomp
enter
jmp
icebp
out
leave
cmp
repnz
incb
fisttpll
leave
out
test
ror
lock
cs
out
fcmovbe
jecxz
ffreep
cmp
call
std
loope
nop
ljmp
clc
xor
out
repnz
not
ljmp
jmp
mov
mov
repnz
stc
repnz
rcl
repz
addb
in
iret
sti
xchg
iret
shl
in
aam
shl
cmp
add
hlt
jecxz
stc
fldl
ljmp
cld
out
sbb
sbb
in
cmp
mov
xchg
decl
sar
cmc
out
icebp
int3
aas
into
iret
ror
fdivr
std
shl
addl
mov
loopne
lock
shl
xor
xor
sti
xor
cmp
ret
in
ds
repz
enter
fisttpl
fdivrp
lret
out
rcr
vcvttpd2dq
aaa
loopne
lret
leave
in
fdivp
aad
rcl
out
icebp
in
cmp
enter
aam
shr
fadd
aam
xchg
ret
sub
out
in
mov
sarb
into
lret
rcl
fsubr
fdivr
clc
aad
into
fsubp
loop
xchg
ror
fsubrp
lret
xor
in
aad
enter
sar
cmc
fldz
repz
mul
clc
loope
in
orl
in
shr
stc
ret
jmp
test
cli
inc
iret
in
mov
rcl
div
ljmp
ljmp
fadd
cmp
hlt
faddp
fmul
addb
xor
int
shl
sti
lret
out
cmp
add
xlat
std
fisttpll
repnz
fcomi
icebp
xor
aad
cmp
ret
mov
std
sti
mov
out
cmc
lock
xor
stc
sarl
xchg
aad
fdiv
dec
jmp
in
xchg
mov
in
leave
lret
xor
out
out
cmp
fdivr
cld
jmp
in
jmp
or
out
orb
cmp
test
xor
jp
jmp
inc
cld
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
stos
ja
pop
jg
cmpsb
add
cmp
xor
out
mov
test
sub
jmp
aad
repnz
cmp
loopne
shl
out
shl
and
mov
mov
in
mov
ror
les
xor
cmp
xor
int
cmp
in
sar
repnz
fucomip
jmp
lock
cmc
int
rol
loop
ss
xor
fdivp
xlat
cmpb
clc
xor
in
mov
test
jmp
rcr
fdiv
aad
out
xor
out
ljmp
and
fnstsw
into
dec
in
xchg
into
rol
shl
fprem
out
fdecstp
cmp
rol
stc
fsub
jmp
sbb
icebp
adc
repnz
int3
lret
int3
sar
out
fdivrs
xor
icebp
aas
jmp
fdivr
out
fimull
ret
push
iret
cmc
fxch
fyl2xp1
loope
rol
fimull
loopne
xor
xlat
out
fdiv
fucomi
jmp
loopne
cmp
jecxz
mov
int3
jmp
jmp
repz
in
neg
idiv
leave
cli
in
call
rolb
xor
lret
sti
shr
lret
shl
shl
clc
out
mov
out
loop
mov
int
xor
not
rcl
repz
cmp
int
rcl
repnz
ds
test
lret
div
aad
cmp
idiv
rcr
aam
fiaddl
orb
xor
clc
out
fcmovu
lock
idivb
loop
cmp
fcom
adc
fildl
clc
and
cld
sub
stc
xor
xor
cmp
addl
iret
sbb
addl
xor
cmp
fistpll
cld
lret
aam
cmp
neg
aad
inc
in
ljmp
rol
sti
shll
xor
cmp
fucom
cmp
ret
mov
rcl
aam
rcl
lock
repnz
fadd
rolb
addl
iret
cs
lret
lret
loopne
cmp
cmpb
xor
clc
std
fdiv
iret
lret
lret
fcmove
sar
fldpi
xor
ds
orl
iret
rcl
jmp
cmp
aam
cmp
aas
cld
fcmovb
fsub
leave
iret
fucomip
std
int
divl
loop
aaa
call
clc
xor
cmp
jmp
in
cli
loope
vpaddsw
not
cmp
xlat
dec
loopne
repz
xchg
adc
in
in
fisttpll
xlat
lock
cli
leave
jmp
xor
fcmovnb
repz
fcomi
fmull
iret
ljmp
shll
cs
das
out
iret
in
not
shl
iret
out
into
aam
stc
sub
lea
test
xor
xlat
in
stc
sar
cli
test
ret
cmp
cli
decb
jmp
sbb
aad
sub
ret
imul
cli
xor
div
or
std
std
sar
rcl
stc
lret
fcmovb
icebp
ror
in
out
repz
leave
xor
leave
loope
icebp
lret
xchg
jecxz
out
mul
in
call
repnz
iret
ret
lret
enter
test
loop
rcr
test
out
int
loopne
cli
mov
shl
out
xlat
jmp
jmp
cli
cmp
into
ret
sti
shl
jecxz
out
xchg
repz
xchg
call
sti
aad
cmp
repnz
cmp
cli
lock
repz
jecxz
xor
std
lret
out
cmp
std
loopne
cmp
filds
out
lret
loope
stc
into
shlb
jmp
icebp
ds
cld
icebp
ret
hlt
test
ljmp
xchg
in
in
fcmovu
aad
out
cmp
fsubr
std
in
test
faddp
xchg
xor
cmp
int
aad
fmul
lret
cli
xor
jmp
loopne
fsub
loopne
jmp
xchg
xchg
test
cmc
sub
sar
cmc
in
cmp
iret
rol
cli
loop
idiv
int
lret
testb
divb
repnz
das
out
std
cmp
or
test
out
loopne
enter
in
loop
sar
cmp
int3
call
aaa
cmpl
aad
test
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
pusha
jg
cmpsb
add
fistpll
jmp
hlt
int
das
int3
loop
clc
std
cmp
repnz
ss
fld
mov
in
filds
fld
cmp
out
std
out
jmp
cmp
rol
std
ret
ljmp
xchg
repnz
into
call
aas
ret
xor
leave
std
int
sti
loope
mov
repnz
lock
cmp
cmp
shl
aam
xlat
cmp
cld
iret
test
loopne
repnz
xor
ss
jmp
out
iret
cmp
cmp
cmc
mov
out
cmp
repnz
xor
in
jmp
cmp
sar
in
stc
adc
cmc
aad
neg
mov
cli
in
iret
iret
adc
lock
jmp
iret
sarl
aas
loope
repnz
ss
in
ret
mov
and
cmc
mov
xor
lret
fistpll
sarl
mov
loope
jecxz
mov
jmp
mul
in
int3
sti
ss
enter
lret
out
xchg
ffreep
vpminsw
jecxz
out
sub
shr
cmc
jecxz
neg
cmc
cmp
xor
jmp
mov
addb
ror
call
xor
cmp
ffreep
shl
int
into
in
stc
div
incb
in
or
clc
hlt
fdivl
fdivr
loope
in
clc
repz
fchs
jmp
out
leave
out
in
iret
shl
out
shl
cld
ljmp
lock
fdivr
xchg
ds
ffree
in
out
lock
out
xor
ss
hlt
cmpb
test
xlat
ljmp
aam
xor
out
enter
fdiv
xlat
filds
icebp
xor
lret
mov
int3
out
xchg
cmc
sub
repnz
cld
rcl
loopne
lret
rol
cli
faddl
test
fiadds
in
test
call
in
int
rcr
xchg
cmc
in
test
xchg
test
in
loopne
int
out
fcmovnu
repnz
not
clc
out
loope
out
mov
mov
mov
out
shlb
xor
rcr
aas
clc
cld
cmc
loope
xchg
cli
out
out
fisttps
jmp
out
call
cmp
cmp
adc
rcl
stc
les
aam
shl
ss
repz
cmp
ds
ret
in
fldz
cmc
cmpl
lret
shl
in
cs
cli
icebp
cmp
stc
fiaddl
in
repnz
cli
out
shr
enter
enter
jmp
cmp
in
incl
sub
test
int3
das
repnz
cmp
in
rcr
fmulp
loope
incl
cmp
sti
mov
rol
xor
aaa
out
into
sti
imul
repz
stc
out
hlt
sti
loopne
jmp
not
jecxz
fstl
xor
call
cmp
clc
repnz
fsubp
aad
sti
testl
loopne
lret
repz
int3
aam
repnz
leave
cmp
cli
faddl
addb
int3
bnd
xor
xor
out
fildl
sti
mov
lret
icebp
sub
sub
xlat
fstp
repnz
test
cmp
xchg
faddl
xchg
or
in
test
shlb
shr
lock
jmp
shl
sar
shl
aas
jmp
ret
test
ljmp
rcl
cli
xor
cmp
fstp
int3
fcomp
sbb
fadds
loope
fcmove
addl
cmc
cmp
xor
roll
in
addb
lock
xor
xor
cmp
ds
test
xacquire
fsubr
xchg
in
xchg
ret
das
in
xor
out
clc
dec
addl
ret
xchg
mov
int3
loope
sti
aam
icebp
out
cmp
sarb
rcr
ret
orl
call
xlat
loop
aam
fsubrp
jmp
lret
out
stc
repnz
xor
icebp
sbb
ljmp
in
repz
leave
jmp
cmp
repnz
clc
out
jmp
fdivr
jmp
mov
mov
jmp
rcl
rcr
fcmovb
mov
fstpl
pop
mov
jg
cmpsb
add
hlt
xor
fdivs
test
filds
sti
ret
ljmp
cmp
out
sar
ljmp
sar
ret
addb
xchg
in
int3
sub
call
iret
cmp
xor
idivb
aam
decb
loopne
aam
cmc
loopne
shr
out
int
cmp
stc
loopne
cli
in
jecxz
ror
clc
jmp
mov
int
lret
icebp
xlat
enter
int
repz
xlat
aam
aas
aam
clc
loope
sti
int3
xacquire
ss
cmp
int3
lret
xchg
xchg
fcos
mov
out
shr
fisttps
lret
fsubr
fnstcw
idivl
fiaddl
mov
loope
xchg
xchg
lock
ret
into
clc
cmp
cmp
loope
fdivrs
rol
loopne
hlt
orl
int
repnz
into
out
das
in
fucomp
loop
cmp
in
loop
cli
fucom
fcoml
icebp
loop
icebp
clc
into
in
repnz
shlb
in
rol
addb
jecxz
sbb
leave
std
icebp
int3
clc
fcmovbe
clc
rcr
ret
in
test
fstl
rol
fcom
aam
ss
out
in
rolb
repnz
lret
rol
fistpll
lock
adc
fprem1
movl
out
leave
addl
leave
xor
jmp
loop
aam
incl
fxch
iret
fisttps
xlat
imul
divb
lret
aam
frndint
rcr
loopne,pt
cmc
adc
cli
orl
sti
in
stc
call
ds
cmp
test
aam
fldlg2
jmp
out
rorb
xor
xor
fsubp
fidivrl
cld
repz
sti
mul
filds
test
loopne
shl
hlt
rol
fidivl
shl
ljmp
mul
ret
not
test
fcmovnbe
out
bnd
into
int
cld
xor
loopne,pt
aad
sar
faddl
xchg
mov
in
in
aam
aaa
enter
sarl
ffreep
out
call
mov
xchg
xlat
in
ret
aad
cmp
repz
fcmovnbe
stc
rcr
out
sti
lock
lret
out
ss
fmul
sarl
cmp
ftst
test
loope
lret
mov
jmp
in
loop
mul
sub
in
shr
lret
ror
into
sbb
testb
mov
hlt
xor
icebp
ss
cli
fdivp
xor
aam
neg
lea
in
mov
sar
int
clc
icebp
ss
icebp
int3
sti
fucomp
ds
aas
orb
jecxz
xchg
loopne
xor
in
lret
fdivr
in
xor
out
into
cmp
stc
lret
lret
mov
inc
xchg
mov
aaa
into
iret
sti
into
ljmp
vpsrlq
loop
jmp
lret
pause
test
sti
in
enter
test
icebp
loopne
and
ret
test
jecxz
mov
repnz
iret
out
out
in
out
ds
int3
xlat
std
aad
incb
clc
loope
xchg
into
iret
xor
xor
ret
aas
cli
int3
jecxz
cli
stc
cmp
stc
addl
int3
sbb
shl
aaa
sub
fdiv
cmc
xor
lret
out
roll
out
in
fadd
leave
leave
shl
push
aaa
jmp
xlat
sti
xor
lock
in
rcl
loope
and
loope
cld
in
int
addb
xor
cld
iret
shl
lret
loop
jecxz
repz
in
in
sti
jecxz
test
aaa
shr
cs
in
cmp
icebp
iret
cli
clc
hlt
fdiv
stc
fiaddl
test
test
sub
xor
in
sar
cmp
sti
rcl
jmp
neg
mov
lock
int
jecxz
stc
stc
ss
aad
fnstsw
into
shr
mov
in
in
das
ss
ret
repz
cmp
rolb
cld
cli
jecxz
mov
in
int
sbb
iret
aam
les
xlat
xor
out
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
jo
dec
movsb
imul
add
shr
out
int3
out
stc
sti
idivl
in
loopne
mov
stc
fdivr
loope
mov
int3
out
out
leave
in
cli
cmp
cmp
rcl
shr
ss
ret
rol
cmc
fisttpl
jmp
int
lret
repz
cld
aad
hlt
faddl
fldl
mul
popl
sub
div
out
fdiv
cmp
shl
fucomi
mov
out
xchg
in
xor
int3
in
fidivrl
cmp
ss
cmpl
out
loop
cld
mov
lret
fucom
in
int3
out
aad
cmp
in
leave
cmp
rcl
cmp
mul
ds
add
out
fdivp
xchg
adc
int3
int3
test
leave
fbstp
jecxz
in
cmc
cmc
sti
aad
fiaddl
out
lret
mov
xor
loop
lret
sti
aam
test
fdiv
cmp
fsub
fmul
int3
into
fsub
cmc
mov
call
leave
out
stc
cld
jmp
cmp
into
cmp
hlt
or
std
fcmove
test
neg
cmp
out
lret
rolb
filds
ret
ret
mov
cld
jecxz
shrl
xor
out
lret
leave
int
cmp
out
ds
fmulp
xchg
loop
in
ret
lret
fsubr
xor
into
aas
ret
xor
out
aam
std
lret
and
int
shl
iret
fdivrp
cmp
repnz
mov
xchg
mov
mul
out
int
mov
xor
in
ljmp
loopne
lock
stc
div
imul
flds
call
int3
xlat
ret
in
fcomi
clc
cmp
sti
roll
testl
cld
xor
les
call
ds
fadd
idiv
sub
mov
fxam
shl
repnz
repnz
lret
repnz
ss
sarl
shl
repz
clc
ffreep
loopne
out
int
loope
cs
in
icebp
clc
out
shl
cmp
addl
fcmovnu
neg
xchg
mov
out
ds
test
cmp
aad
into
cmc
cmp
fadds
jmp
int
test
shl
xor
xor
in
imul
in
dec
loopne
ret
xchg
lds
imul
or
mov
xchg
xchg
in
ror
sarb
ret
leave
int3
vpsubusb
aad
icebp
cmp
out
rcl
fldl
iret
lret
rcr
repz
xor
cmp
enter
in
xor
faddp
call
cli
cli
sub
ret
shr
iret
int
cmc
cmp
in
aad
ret
in
fiadds
int
xchg
into
jmp
fdivr
rol
aad
jmp
loopne
xlat
add
movb
in
shr
xor
std
repnz
xlat
sub
test
repz
in
sub
leave
cmc
out
aad
fcmovne
repz
call
lock
int
and
fld1
in
std
mov
out
cmp
shl
in
cld
cmp
sti
sarl
cld
loop
aam
fdivr
lea
in
xchg
les
hlt
std
stc
ss
loop
cmp
rcr
loope
int
jecxz
xchg
xor
repnz
cmp
ss
ret
fdiv
fdivrp
call
mov
xchg
out
xor
fcmovnb
shl
int
ffree
iret
in
out
repnz
jmp
jmp
call
rol
out
fcompp
iret
lret
rol
cmp
mov
test
fmulp
int3
icebp
mov
in
jmp
out
xor
stc
fidivrl
into
repz
sbb
call
enter
nop
addl
fcomip
leave
ljmp
fsubp
cld
out
int3
ror
orl
out
shr
leave
cmp
iret
sbb
clc
ret
ds
mov
cli
jecxz
std
call
call
cmp
fdivrp
stc
std
fst
shl
mov
stc
roll
mov
xor
jecxz
les
jmp
jmp
aad
cmp
sub
cli
cld
loopne
lret
aaa
imull
shll
out
std
out
in
aaa
in
cld
repz
in
loopne
out
xchg
in
stc
ss
jmp
cld
into
fsqrt
enter
icebp
in
add
jmp
int
ret
fcmovu
add
dec
xor
jns
into
outsb
jg
cmpsb
add
mov
in
orl
sar
in
lock
out
cmp
cmpl
loopne
xlat
fabs
and
into
lret
fiaddl
lds
ss
sbb
ret
add
cmc
xchg
xchg
out
shl
shlb
call
test
xchg
clc
testl
mov
int
das
rcr
std
sti
loopne
aad
cmp
xchg
mov
int
lret
das
lret
out
aaa
stc
cmp
shr
cld
fcomp
mov
mov
enter
aad
cmp
hlt
loop
aam
aad
stc
jecxz
clc
ror
loop
sar
jmp
in
adc
jecxz
shl
in
roll
sti
sarl
ljmp
mov
into
call
sarl
call
sarl
fdivrp
shl
test
cmp
cld
lret
loop
int3
xchg
int3
imul
clc
std
or
cmc
ret
rol
sti
test
jmp
lret
in
xor
cmp
cmp
in
ljmp
loopne
mov
orl
cmp
clc
loop
sar
fdiv
sbb
test
mov
loopne
testb
lret
icebp
cmp
xor
xor
stc
iret
xor
shl
shl
xlat
mov
ds
in
call
jmp
aam
icebp
iret
icebp
aad
cmp
ds
f2xm1
loope
repnz
loope
in
or
mov
xchg
jecxz
in
in
xor
cmp
cmp
std
in
adc
xchg
iret
call
xacquire
xor
shl
out
call
fmul
add
hlt
mov
aam
hlt
in
xchg
loop
icebp
xor
hlt
aad
cli
repnz
into
call
jmp
stc
in
sar
fxch
out
bnd
repnz
ret
cmp
cmc
hlt
shl
fstp
stc
xchg
jmp
sti
call
rcl
call
in
shr
xor
roll
xchg
in
fcmovu
loopne
xor
divl
call
clc
in
sarl
cli
incb
enter
cld
lds
mov
jmp
xlat
icebp
aam
neg
repnz
jecxz
icebp
aam
in
mov
lret
enter
ljmp
int
repnz
cmp
addl
rorl
clc
rcr
rcr
ss
rol
bnd
loop
mov
out
out
out
in
in
call
in
into
fsubr
shr
sar
cmp
or
les
cli
loope
in
jmp
into
xor
repz
cmp
adc
ret
leave
mov
int
cli
fmull
cmp
leave
repz
cmp
fcmovnu
loop
out
ret
jmp
hlt
in
loop
rcl
mov
shll
lret
into
into
hlt
xor
in
loop
ds
mul
fiadds
cli
loop
loope
nop
xor
xor
icebp
icebp
cs
cmp
hlt
fdivrp
cmc
stc
repz
int3
loopne
adc
int
test
hlt
shll
int
cmp
out
int
repz
jecxz
ret
neg
icebp
sub
int
ljmp
aam
ror
rcl
aam
xlat
shl
loopne
mov
or
cli
test
add
out
call
lret
stc
aad
sarl
rolb
aas
sti
cld
fsub
in
cld
ljmp
in
cmc
fdivr
rcr
aad
ret
rcl
rcr
mov
mov
or
rolb
cmc
iret
shr
ljmp
icebp
repnz
jecxz
cmp
out
rol
lret
lret
loop
ljmp
hlt
test
fcmovb
idiv
inc
stc
sti
jecxz
nop
mov
int
leave
div
in
xor
lret
aas
cmp
call
leave
int
xchg
out
enter
in
fcomi
call
cmp
and
sti
mul
test
mov
fsubp
xchg
icebp
out
shlb
lock
out
iret
iret
std
cmp
test
test
loop
in
fcmovu
out
jmp
ror
shr
out
stc
fld
hlt
xor
ffreep
icebp
fucomi
out
fistpll
shl
incb
in
orl
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
cwtl
xchg
inc
pop
js
jg
cmpsb
add
in
lret
loope
fnop
cli
std
lret
cmp
iret
stc
in
aas
ds
fcomip
mov
aam
into
in
lret
xchg
lock
xor
das
shll
and
mov
fisttpll
sub
loop
xor
lret
xor
xor
sar
loop
sar
orl
addb
bnd
ss
clc
aam
iret
cmp
repnz
out
and
iret
jmp
in
out
repz
cmp
lock
ror
sti
ret
in
cld
std
ljmp
sub
in
loop
xor
ds
loope
mov
incl
out
enter
ljmp
shr
in
lret
clc
out
repnz
clc
ret
xlat
call
and
in
out
jmp
jmp
repnz
fmul
cmp
rcl
aam
leave
sar
lret
jecxz
fdiv
ret
loopne
stc
cs
repnz
fcmovbe
loopne
out
roll
jmp
out
rcll
shl
xlat
call
idiv
repz
rolb
fmuls
nop
hlt
jecxz
out
loopne
enter
in
neg
rcr
shl
sbb
jmp
loopne
fisttpll
call
out
into
leave
rcl
icebp
aam
rcl
sti
ds
cmp
xchg
loope
call
lea
icebp
int
out
lock
aas
fcmovnbe
cmc
std
loope
cld
fdiv
test
jmp
mov
int3
lret
stc
clc
rol
loope
cmp
xor
stc
mov
in
call
imul
ret
rol
in
fstpt
cmp
cmp
lock
out
pop
jmp
cmc
aam
ret
in
cmp
cmp
fnstsw
enter
in
faddp
adc
sti
fdivr
leave
leave
int
in
xor
jecxz
lock
aaa
fiaddl
shl
rol
mov
std
in
fld1
in
lock
aam
shl
cmp
fcomip
fcomip
ror
repz
rcl
mov
xchg
cld
cld
jmp
xchg
repnz
neg
out
std
into
lock
aad
ret
clc
rolb
adcl
out
in
shll
xor
ss
rcl
fadds
loopne
neg
int3
cmp
jmp
out
int
ret
enter
rcl
incl
add
sar
out
into
mov
xor
stc
in
fidivrl
rcr
loope
addb
clc
lret
xchg
out
repz
hlt
xor
lret
fidivrl
ds
addl
mov
fiadds
icebp
fld1
aaa
lret
xor
adc
rcl
sbb
fsub
hlt
out
loope
in
rcll
jecxz
xlat
cmp
aaa
repnz
aas
loope
loopne
loopne
jecxz
decl
lret
jmp
test
out
lock
fistpll
ffree
ret
out
loop
mov
jmp
lret
clc
repnz
shlb
fcomip
jmp
int3
shl
shl
cld
ret
ror
in
call
fcmovnbe
repz
imul
repz
iret
test
stc
xchg
int
in
fimuls
shl
xor
cmp
int3
fmul
cmc
ljmp
ljmp
mov
loopne
shlb
jmp
xlat
sarl
stc
orl
and
jecxz
cmc
int3
cld
fnstsw
shl
repz
sub
xlat
fimuls
lret
int3
in
xor
int
jmp
in
xor
fneni(8087
roll
fcomp
fcmovnb
cli
mov
xor
lock
sti
fucomip
rcl
loopne
ds
hlt
mov
out
in
sub
repz
jmp
xlat
out
icebp
sarb
jmp
sti
inc
out
and
out
xlat
rcl
xor
enter
int3
loope
sti
ds
cli
testl
hlt
in
jmp
shl
add
aas
sar
cmc
out
std
or
out
into
lock
icebp
hlt
lret
repnz
fnstcw
xchg
idivb
test
ljmp
push
mov
lock
jmp
jmp
vpsrlq
rcl
aad
xchg
mov
in
pop
xorb
cmpsb
add
cmp
jmp
jmp
cld
xchg
shr
repnz
std
test
shrl
in
cmp
cli
jmp
sbb
xchg
jmp
out
int
loopne
lock
fsubr
cmp
cmp
loopne
sar
iret
aas
loope
sbb
out
idiv
lock
mov
mov
ljmp
cmp
shlb
fcompp
fsubp
xchg
stc
in
lret
loopne
out
aad
iret
rcl
ror
sub
jecxz
sti
xlat
mov
repz
cld
mov
aam
stc
out
cmp
aaa
fidivl
fdiv
add
and
loop
mov
jmp
xchg
lret
aad
xor
shl
jmp
hlt
adc
in
aam
ljmp
loope
shl
leave
ss
cmp
mul
lock
xlat
fsubp
loop
dec
cld
loope
repz
out
loopne
lock
test
cmp
jmp
out
cmpl
lret
sub
icebp
icebp
and
repnz
aaa
cli
out
icebp
int3
int3
hlt
sarb
aas
sar
xchg
xchg
xchg
into
xor
cld
cli
dec
int3
rol
inc
testb
fisttpll
out
in
jecxz
enter
hlt
aas
fcmovne
roll
icebp
fimull
ret
in
xor
in
rcr
cld
fnstcw
int3
aad
stc
or
mul
fstp
std
test
out
lret
ljmp
cmp
lock
vpaddusb
mov
sub
mul
xlat
call
icebp
hlt
add
movl
faddl
rcl
aad
xor
sbb
fcomp
stc
faddp
loope
cld
mov
mul
fimull
ljmp
fucomip
out
call
into
repz
out
fadd
std
jmp
loopne
cld
ret
stc
lock
out
shr
loope
xlat
lret
test
add
loop
jmp
iret
lock
cmp
stc
int3
cli
out
roll
hlt
xor
hlt
fmulp
mov
in
mov
cld
jmp
xor
lock
lret
das
leave
enter
xlat
xlat
rcl
sar
jmp
into
mov
faddl
ljmp
jmp
icebp
repnz
rol
rcr
jmp
leave
in
fsub
mov
cmc
aas
icebp
xor
out
out
call
lret
rolb
fdivr
int
jecxz
mov
xchg
rcl
into
fcom
repz
fcomip
int
ret
sti
out
cld
loopne
jmp
cs
out
das
xor
xor
fcmovu
hlt
out
test
test
xchg
out
in
imulb
sub
lret
lock
aam
fiaddl
jmp
testl
xor
ss
out
ljmp
repz
incb
mov
cli
test
icebp
out
int
xlat
idiv
divl
ret
cmpl
call
in
fstl
jecxz
cld
cld
out
aas
cld
aas
repz
cli
ret
neg
fcomp
call
divb
fucomip
lret
incb
fsub
roll
mov
in
loopne
cli
fdivrs
shl
cmc
aad
ret
loope
icebp
leave
loop
in
in
icebp
xchg
leave
mov
lds
xor
xlat
icebp
aam
shl
clc
and
not
fcmovu
test
fmulp
ljmp
das
call
aaa
enter
aad
fsubr
aas
jecxz
out
fimuls
loop
lret
aaa
ss
sarl
sar
cld
jecxz
loope
fdiv
ret
fmuls
and
aad
aam
fnstenv
clc
cmp
aas
in
cmp
int3
xor
jmp
hlt
lret
icebp
enter
xchg
iret
out
cmp
cmp
lock
int
shl
aas
repnz
loope
loop
out
mov
fcoml
iret
xor
ljmp
cmp
rcl
rol
cli
and
lret
loop
sub
into
shl
rcr
in
fsub
cmc
sar
hlt
stc
sti
testb
xchg
mov
out
loope
das
ftst
out
out
idivb
clc
mov
cmp
je
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
jne
xchg
int3
jl
jl
add
shl
mov
mov
xchg
xor
call
leave
out
cmp
int
out
ret
ret
cmpl
mov
in
in
in
out
call
aaa
out
call
aam
hlt
testb
aam
call
repnz
out
enter
aaa
repz
mov
and
mov
stc
loop
in
decb
ljmp
rol
loopne
rcr
roll
in
iret
std
xchg
lret
in
jmp
sarl
shr
in
iret
fsub
call
xchg
fucomip
adc
leave
fadd
rorl
fsub
aad
sar
xlat
xor
in
addl
out
dec
orb
ljmp
in
out
stc
aad
xlat
call
fdivr
mov
iret
in
int
loop
not
in
fbstp
int
fcomi
stc
repnz
ret
sti
mov
out
iret
aam
int
div
std
xor
out
loopne
rcr
fiaddl
mov
mov
sub
into
out
int
shl
xlat
cmp
ret
xor
roll
lea
addb
clc
int3
cmp
into
cmp
xchg
leave
push
loope
addl
fucomip
rol
repnz
ljmp
rcl
lds
lock
ffree
sti
hlt
fsub
leave
mov
out
repz
repz
idivl
cmp
xor
test
cmc
imul
test
jecxz
sar
out
decl
in
xor
cmp
cmc
rcr
roll
cld
xchg
lea
stc
cmp
repnz
ss
ret
cmp
fdiv
stc
fimull
std
mov
ds
enter
divb
leave
sar
loopne
in
loop
cld
xlat
xlat
orl
in
xlat
idiv
xor
in
int3
call
iret
clc
xor
clc
sti
jmp
repnz
hlt
in
stc
out
fcomi
cmp
fsubr
sarb
stc
cmp
fmuls
out
ror
aad
cmc
cmp
int3
lock
aas
loop
icebp
out
stc
lds
fsubrp
or
lock
fdiv
ds
rcl
loopne
aam
out
int3
and
mov
rol
in
jmp
icebp
fnstcw
ljmp
fdivr
addl
repz
out
ss
xor
ret
test
sub
stc
stc
mov
out
xlat
ret
sarl
call
out
cmp
out
out
fdivr
call
in
out
ljmp
div
in
shl
repnz
fsubr
std
clc
stc
sti
loope
fildl
lea
in
out
out
cmp
cmp
aad
sti
cmp
loope
in
in
test
in
jmp
lea
int
les
lret
shl
fiadds
out
iret
cli
int
mov
xor
jmp
fdivrl
cmp
sar
jecxz
enter
in
xor
loope
xlat
sti
call
ds
fld
lock
rorl
jecxz
fdiv
enter
div
rol
rol
loop
xchg
in
stc
xchg
cmc
in
jmp
ret
ljmp
cmp
sti
icebp
aad
in
ret
dec
icebp
in
orl
lret
aad
leave
int3
jecxz
test
imul
ret
cld
xchg
out
mov
das
aaa
xor
cmp
in
fidivrs
xor
repnz
jmp
in
test
iret
lret
rcr
aam
fsubr
cmp
fildl
iret
repz
shlb
enter
shr
fmul
xor
in
fadd
out
loop
jmp
iret
test
ljmp
out
fdivrp
shr
cmp
std
rcl
jecxz
clc
jmp
mov
int
lock
clc
in
xor
cld
out
cmp
lock
xlat
test
in
dec
xchg
mov
xrelease
ss
ret
in
pushl
add
fiaddl
enter
test
xchg
lret
aam
icebp
in
clc
cmp
iret
clc
cmp
inc
fdivrp
std
loope
mov
das
xor
xor
ljmp
xchg
enter
fsubr
jecxz
lock
in
fmulp
out
xlat
rcr
jmp
stc
aad
cmp
mov
orl
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
shl
inc
xlat
lcall
jl
iret
ret
jmp
fdiv
fsubrp
loop
clc
lock
out
loope
ret
ss
clc
repnz
aas
ds
int
fdecstp
shr
rcl
mov
sti
fiaddl
xchg
out
out
shl
out
jmp
cmpl
sar
fisttpl
ljmp
repnz
xor
rcr
repz
fcmovb
orb
out
xchg
xchg
mov
int
cmp
stc
out
repnz
int3
repnz
int
fsub
sbb
std
mov
std
xchg
iret
cmp
aam
fidivrs
fcmove
cmp
shl
repnz
sbb
xchg
nop
fisttpl
xor
hlt
int3
rcl
in
in
aaa
cmp
fcmovbe
out
shl
std
cmc
cld
in
fmuls
xchg
out
out
in
enter
jmp
repnz
ds
loopne
ds
imul
out
ljmp
leave
iret
lock
leave
aaa
enter
addl
test
lret
mov
xor
xor
ret
lret
xor
xor
ds
cmp
ret
addb
xlat
in
std
out
call
aam
xor
xor
enter
fcmovnbe
out
aad
shl
cmp
rorb
lret
test
xchg
aam
cs
cli
sub
ljmp
loope
icebp
cmp
in
xchg
test
test
in
sti
into
in
out
repz
rol
in
lock
call
mov
loop
xchg
ljmp
iret
leave
icebp
fistpll
test
push
stc
in
enter
jmp
mov
xchg
enter
repnz
shl
cmp
cld
out
adc
testb
mov
int
aaa
ss
lret
sarb
cmp
cmc
rcl
aas
fucom
mov
and
xchg
into
std
fsubrp
int
iret
hlt
xor
cmp
rolb
test
fld
aam
clc
out
repz
xchg
cld
ds
cmp
stc
int3
cmp
rcr
cmp
stc
ret
testb
out
xchg
and
lret
into
bnd
std
ret
faddl
enter
xchg
addl
hlt
rol
icebp
cmc
rcr
rorb
mov
out
shl
mov
in
aam
call
jecxz
cmp
repz
fdivp
fucomip
orl
shr
jmp
std
into
int3
out
iret
icebp
out
ret
sti
shl
aad
fsincos
stc
mov
lock
out
xor
divb
rcr
fsub
fnstsw
sti
out
sar
loop
fucom
in
out
in
call
shr
jmp
cmp
in
hlt
mov
mov
aad
repz
xor
in
aas
out
neg
shl
jmp
in
neg
mov
xor
int3
xor
xor
les
out
repz
in
repnz
jmp
cli
xchg
xchg
call
int
in
xor
xor
ljmp
cmp
roll
hlt
in
out
lea
ljmp
stc
sar
repz
fsub
lock
std
in
aam
test
ljmp
aam
lret
icebp
enter
cmp
out
repz
stc
clc
int
xchg
xlat
int3
cmp
lret
hlt
cmp
sar
ret
rcl
stc
sub
mov
shr
mov
jecxz
lret
loop
sarl
fucomi
clc
in
cmp
repnz
movl
sbb
shl
jmp
in
icebp
cmp
inc
ror
repnz
shl
clc
hlt
xlat
pop
orl
sti
into
leave
shl
cmp
loope
icebp
lds
loopne
ds
lret
xchg
shr
int
sar
fsubr
ret
ljmp
shl
inc
in
loopne
ret
nop
out
loop
shl
vpaddw
xor
aad
rol
repnz
in
lret
out
int
loop
leave
xor
jmp
lret
xor
ffree
lret
int
sar
test
ror
mov
mov
aas
shl
icebp
aaa
fdivr
fcmovu
aas
into
xor
clc
clc
lock
fucomi
sub
fucomi
in
icebp
mov
out
repz
call
fst
xor
xchg
mov
xchg
cli
in
int3
lret
jmp
cmp
int
jmp
lock
fdivr
out
out
xor
shr
xchg
fdivrp
into
rol
ror
shl
ljmp
cmp
loopne
jmp
out
cli
out
into
int3
icebp
aad
rol
call
clc
rorb
mov
inc
add
scas
arpl
push
fs
add
incb
add
inc
add
inc
hlt
out
pushf
clc
sbbl
jmp
rcl
int3
fstp
arpl
test
adc
push
jle
jge
jl
fsubr
roll
test
test
orb
in
in
fdiv
int
clc
ret
cmp
ljmp
cli
cmc
xchg
xchg
jmp
cs
sarb
ror
lret
rcl
loop
xchg
loopne
testl
xor
xor
ljmp
cli
hlt
cmp
xlat
in
stc
xchg
hlt
mov
mov
sub
ds
cmp
fidivrs
flds
rorb
xor
hlt
xor
leave
enter
iret
cli
xor
test
addb
fcomip
aas
jmp
sti
rcl
in
in
aad
lds
cmp
cld
jmp
fadds
loop
mov
cmc
hlt
enter
sbb
push
hlt
jecxz
imul
fucomp
mov
aad
ss
int3
cli
out
fdivrs
in
loop
loopne
out
shl
rcr
call
in
mov
jmp
sarb
push
fcmovnbe
sub
test
in
in
dec
out
xchg
out
cmp
int
aas
out
loopne
rcl
loop
call
int3
fnstsw
loopne
mov
adc
xor
lock
ljmp
cmp
lock
mov
mov
loope
xchg
in
sar
xor
cli
cmc
cmp
call
out
in
hlt
lret
enter
cld
nop
xor
sub
div
aaa
cld
shll
int
in
ljmp
jecxz
xchg
out
mov
xchg
hlt
jmp
sti
shr
out
repnz
stc
clc
ffree
out
shl
test
jmp
sti
sbb
jecxz
orb
in
out
aaa
cs
std
ss
xlat
loope
jecxz
xlat
call
out
incl
iret
stc
fsubr
enter
sar
jmp
loop
out
out
cmc
sbb
mov
aam
jmp
cmp
ror
aaa
int
rol
jmp
and
rol
out
loopne
out
xchg
fldl
xor
fdivl
xlat
in
loop
loope
jmp
call
in
mov
loopne
jecxz
stc
mul
into
stc
fnstcw
out
loopne
ds
ffree
les
loope
shr
repz
shl
shl
out
fistpll
xor
std
flds
shr
iret
shl
not
repz
stc
out
cmp
cmp
ss
lret
cld
cmp
cli
in
xchg
ror
loop
fmul
into
sti
cmp
orl
repnz
clc
xor
xor
iret
lret
jecxz
cmp
jecxz
cmc
movl
xchg
iret
in
xchg
call
aam
jmp
xor
ret
repz
int
clc
sub
call
repnz
loopne
call
aas
aas
fdivr
sbb
repnz
loope
sbb
mov
mov
leave
stc
divl
fdivrs
aas
out
addb
rcl
aas
fdivr
sti
mov
shr
sar
out
fsubr
clc
lret
ss
sti
in
testl
mov
faddp
shl
ss
hlt
into
xor
loopne
test
mov
sti
int3
lds
in
mul
jecxz
aaa
in
fdivp
roll
loopne
sti
mov
decl
rcr
xchg
lock
out
jecxz
ror
std
xlat
aas
fxch
and
repz
lret
loope
out
fcoms
lock
xlat
xor
aas
out
ds
into
into
fisttpl
in
test
call
xlat
repz
fdiv
out
std
sti
fcomi
int
out
cld
in
jecxz
xchg
jmp
xor
lret
jecxz
aaa
into
std
fucomip
jmp
cmc
xchg
aam
xchg
int
std
lea
jmp
call
roll
testb
lret
rcl
sub
xor
in
leave
hlt
icebp
aaa
aas
int
rolb
cli
mov
call
out
lret
ljmp
into
aad
leave
cmp
rcl
sarb
repz
or
in
mov
rolb
aam
aam
fcmovbe
sarb
repz
fcmovb
repnz
aas
neg
mov
repz
repnz
hlt
out
cmc
aas
cmc
cmp
rcl
ffreep
aad
out
mov
loop
nop
mov
hlt
lret
test
aad
aam
loop
testl
loop
ljmp
clc
fnstenv
test
lock
xchg
fs
add
push
dec
add
movl
jmp
xlat
enter
enter
xchg
rol
imul
add
lock
neg
sti
decb
mov
jecxz
xchg
cmc
jmp
cmp
aaa
ss
or
ds
lock
out
out
filds
ljmp
idivl
sar
lret
ret
loope
cli
test
leave
cmp
cld
fucomip
fildl
lret
lret
out
lret
cli
fdivp
loop
cmc
cmp
out
out
rol
test
xor
hlt
aam
cmp
fucomi
ds
incb
in
fxch
lret
ljmp
ljmp
aad
ds
cmc
cmp
jmp
in
out
rcl
fdivp
leave
icebp
in
cld
adc
out
sti
leave
fiadds
cmc
cmp
out
shr
lock
fnstsw
cmp
clc
fiadds
loope
sub
lret
fnstenv
int3
aad
call
repnz
ljmp
aad
mov
jecxz
out
test
lret
shl
into
ret
hlt
lds
aaa
repz
loopne
fst
jecxz
clc
into
add
clc
jmp
cld
loop
mov
shll
xor
out
int
repz
int3
std
ljmp
enter
decb
call
hlt
cli
aaa
cmp
std
cmp
stc
cmc
cli
test
in
in
mov
xchg
jmp
in
aaa
repz
imul
ret
clc
fucom
movl
int
in
enter
in
cld
cmp
add
jmp
lret
fsubr
jecxz
std
out
ret
in
ret
into
cmp
rcr
aad
in
clc
fyl2xp1
stc
stc
jmp
sbb
jmp
xor
int3
cmp
idiv
lret
sbb
sbb
cmp
std
sub
decb
hlt
fnstsw
aaa
cld
sar
icebp
cli
repnz
mov
or
in
lock
cmp
rcr
in
repz
xor
iret
test
lds
fsin
ror
loop
aas
aaa
iret
divb
ljmp
cmp
fildl
out
cmp
in
xchg
int3
leave
int3
jecxz
ror
shr
test
roll
ds
jmp
jecxz
sarl
loope
int3
sub
xbegin
out
cld
cli
xabort
mov
fsubp
mov
mov
mov
lock
icebp
stc
int
rcl
add
or
cli
sub
mov
ret
xlat
cmp
lret
cmc
cmc
test
in
mov
test
out
mov
in
aad
xor
ret
icebp
cmp
cmc
cli
aad
ret
sti
loop
jmp
ret
out
ret
in
cmc
loope,pt
xor
xlat
rcl
ljmp
shl
aam
fcmove
in
mov
in
int
out
xor
fcmovnu
cmc
repnz
clc
cmp
loop
into
addb
fcmovnb
mov
in
mov
aam
aam
enter
cmp
into
xlat
neg
clc
stc
ds
shr
xor
xor
xor
leave
sarl
call
test
xchg
test
clc
repnz
sarb
icebp
lock
test
call
call
rcr
xor
call
cmp
test
repz
lret
out
fndisi(8087
std
loop
xor
out
jmp
jmp
cmp
cli
rcr
aam
or
jmp
iret
lret
add
xchg
cmc
jmp
jmp
neg
aam
cli
out
cld
les
lret
out
jmp
mov
xchg
ds
fdivs
call
cmp
fcomp
sti
lds
shl
enter
loope
loopne
xchg
mul
into
out
repz
shl
in
cmp
loopne
jmp
leave
mov
lock
aaa
leave
rcl
stc
fnstenv
cld
repnz
stc
ret
aas
icebp
fdivr
out
loopne
loope
cld
loopne
lock
ljmp
xor
das
in
xor
ds
cmp
ds
enter
or
enter
aaa
rcl
out
ljmp
xlat
into
std
hlt
loop
out
test
xchg
out
int
test
shl
cmp
cmp
int
fcomp
rcr
mov
flds
xchg
ror
enter
enter
ror
cmp
in
mov
loopne
mov
test
in
xor
ljmp
cld
cmpl
cli
repz
cmc
fsubr
clc
sbb
into
xchg
leave
cmp
xor
neg
xor
ret
add
or
add
test
add
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
ljmp
dec
lock
jge
jl
div
loopne
ret
fadd
jmp
int3
mov
icebp
aam
aad
loop
call
int3
ds
in
stc
fadd
decl
iret
out
cmp
cld
in
fidivs
sarb
cmpb
aam
shl
fisttps
lret
xchg
das
sar
out
std
pushl
icebp
rcl
iret
repz
inc
leave
aam
fxch
fabs
repz
lret
fdiv
aaa
test
rolb
movl
xor
cld
shl
fnstenv
fdiv
fnsave
lret
ljmp
fcmovnbe
out
push
dec
fdivrp
out
fmulp
loop
int
call
cmp
iret
iret
loope
movl
fmull
jmp
lret
xor
ss
enter
ret
les
mov
add
test
sub
sub
aaa
iret
into
leave
aad
or
cmp
fsubrp
int
mov
in
ret
xor
call
int3
cmp
shl
loop
cld
test
out
jecxz
loopne
call
sar
ror
lock
fiadds
int3
mov
cld
mov
out
jmp
jmp
in
std
fstp
xlat
shl
loope
neg
vpmaxub
mov
in
hlt
enter
xor
cmp
into
les
fiaddl
xchg
xchg
lret
sub
in
cmp
aas
cld
lret
std
loopne
xlat
lock
popl
out
incl
xor
in
cmp
jmp
aas
aas
cmp
clc
sarl
fdiv
fsubr
ljmp
call
loopne
loop
ljmp
fcmovbe
sar
in
sti
fisttpl
hlt
loopne
cs
out
aaa
fcomip
shl
into
mov
jmp
mov
xor
mov
mov
das
xlat
enter
repz
ds
jecxz
jecxz
fldl
test
out
clc
aad
std
xor
jmp
xlat
lock
stc
cmc
hlt
sarl
in
lret
out
in
mov
lea
cmp
sub
cmp
out
cmp
cmp
adc
stc
clc
addl
repz
icebp
cmp
addb
and
xchg
nop
repnz
xor
lock
out
stc
lret
out
fstpt
loopne
call
enter
mov
loope
out
xor
out
std
fsubr
shr
fstp
not
int
shl
rorl
jecxz
cli
nop
hlt
enter
stc
aam
cmp
cmp
rcl
xlat
cli
mov
in
out
iret
lock
int
out
in
jmp
repz
loop
rol
sti
std
cmc
and
in
mov
loopne
ret
mul
sarb
addl
sbb
mov
fbstp
hlt
ret
in
cli
cld
divl
fdivr
stc
aam
les
ret
test
orl
out
in
cmc
cmp
cmp
rol
div
fdivr
jmp
fcmovnbe
sub
xor
jmp
iret
aaa
ljmp
test
out
fimull
shrl
int
out
iret
fdivs
fdiv
fcomp
sar
addb
mov
lret
enter
ror
xor
xor
lock
hlt
ljmp
cmp
in
sti
fxch
test
iret
jmp
ret
stc
shl
aad
icebp
int
icebp
xlat
cmp
into
adc
testl
repnz
cmc
cmc
int
jmp
xlat
rcl
aas
sar
sar
call
cmp
jmp
mov
nop
aad
in
ret
sti
xor
fstp
xor
call
enter
out
roll
sar
cs
lds
xlat
int
loopne
cmp
sub
xlat
fadds
std
in
jmp
mov
shr
loopne
idiv
stc
cmp
fldlg2
shl
jecxz
ret
std
in
fdiv
xchg
test
shlb
iret
aam
iret
sar
repz
stc
fsub
into
fdivrp
aas
rorl
test
mov
orl
leave
fcmovnb
loope
cmp
roll
in
mov
icebp
in
mov
in
aad
xor
out
xor
stc
in
fcmovnu
aam
lock
test
jmp
lea
lock
sub
out
cmp
in
sarb
aad
ljmp
repz
shl
out
hlt
cmc
ret
xlat
out
xor
out
xor
mov
mov
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
mov
leave
pop
jle
jge
jl
rcl
fcom
fadds
add
in
xchg
mov
in
aaa
cmp
aaa
fcmovu
fcomip
sar
xlat
div
repnz
enter
mov
mov
ret
sub
ret
cmp
sti
loope
int3
lock
rcr
mov
filds
mov
ljmp
lock
shl
ljmp
enter
mov
cli
out
in
int
xor
shr
lret
out
sti
in
lock
loop
test
out
mov
in
fucomp
leave
ret
into
cmc
int3
ss
aad
jmp
cld
fcmove
cli
cmp
aas
cmp
stc
addl
out
fcoml
sti
icebp
out
xor
aad
cmp
iret
iret
cmp
fdivrl
sti
xchg
aas
test
xor
fcmovne
fnstsw
fidivrs
rcr
in
idiv
mov
aas
mov
loopne
fstp
out
ljmp
ljmp
shr
aad
cmp
decl
xchg
imull
jecxz
ret
idiv
aam
icebp
cld
cmp
std
cmp
loopne
ds
loopne
int3
xchg
jmp
jmp
in
sarl
cmp
into
rcr
fadds
jmp
or
out
ljmp
cmp
aad
clc
sarl
xchg
hlt
in
call
xchg
rol
lret
jecxz
fdivr
icebp
lock
sbb
into
sarb
sti
cmp
cli
loope
std
and
repnz
das
ljmp
iret
cmp
rol
cmp
fcomi
rol
jecxz
in
int
jmp
std
icebp
out
shl
into
call
fcmovbe
shl
sar
rol
and
incl
fdivp
repz
cli
imul
stc
rcl
fstp
rolb
xlat
sub
mov
xor
shrb
ds
clc
f2xm1
ret
repnz
jmp
mov
lret
enter
xlat
imul
jmp
cmp
enter
in
loope
ret
adc
iret
shl
xchg
jecxz
in
cmp
jecxz
ljmp
cmp
xlat
fdivr
out
xchg
out
test
into
out
mov
and
ror
in
jmp
in
cld
repz
rol
faddl
std
lret
xchg
lret
int
fldz
std
xor
faddp
hlt
aas
jmp
fadds
out
mov
das
shl
into
in
out
aaa
cmp
shl
fsub
icebp
jmp
lret
mov
in
shr
fdivs
rcr
xlat
int3
adc
fcmovb
sar
loop
orb
jmp
out
in
ss
ljmp
shl
cmp
faddp
xchg
cli
sti
xchg
xchg
xor
shl
shll
enter
ffree
lock
ret
lds
call
orb
enter
xor
clc
cmp
out
int3
iret
cmp
div
out
icebp
rcl
call
fcmovnbe
repnz
lock
out
std
stc
ss
cmp
ljmp
loop
lea
in
xor
rol
fcmovnb
xor
cmp
lret
in
int
stc
out
ds
ds
leave
std
ds
xchg
lds
aad
cmc
neg
aas
lret
fstpt
jecxz
rol
rcr
out
std
in
out
loope
int
loopne
call
fucomp
fcmovu
icebp
hlt
xchg
sti
repnz
lret
iret
mov
shr
out
ljmp
out
int
neg
test
icebp
fdiv
fucom
xchg
orl
aam
ret
sti
xlat
cmp
sti
int3
not
fstp
repnz
aas
loop
fimull
xchg
fucomip
xchg
ljmp
xlat
out
into
cmc
loope
lock
call
mov
into
enter
ror
jmp
fmulp
rcl
lock
loopne
cmc
lret
lret
out
filds
out
loop
aad
repz
call
test
shr
test
lret
sti
call
in
in
sub
aaa
lock
loop
out
sarl
lock
popl
repz
lock
fucomi
aad
icebp
ds
dec
shl
aad
sarb
add
aam
in
fisttpll
xchg
cs
call
xlat
cld
aas
idiv
repz
testl
out
rolb
xor
rcl
idivb
hlt
fcmovnbe
ljmp
xchg
fmulp
movl
fsubr
jmp
cmp
into
in
cli
icebp
repz
fcomp
clc
call
in
rcl
imull
rol
sub
lret
or
add
fs
add
adc
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
jge
dec
sbb
sbb
jge
jl
icebp
lret
out
sbb
test
flds
int
loop
xchg
leave
loop
ljmp
in
in
fadd
lock
xchg
cmc
xchg
mov
loopne
lret
out
mov
loopne
out
xor
cmp
in
aad
xchg
ret
cmp
test
sarb
lret
icebp
std
out
lret
xor
fcmovnb
rcr
rcl
mov
lea
xchg
out
cs
xor
ss
repz
aas
sar
xor
out
aad
ret
lds
mov
mov
out
in
ret
lret
rcl
ret
fsubr
loop
cmp
xchg
fadd
lock
test
cmc
fcompp
lret
out
in
out
shl
loop
loope
cmp
mov
lret
ljmp
out
into
xor
xlat
in
repnz
lret
add
sti
aas
cld
call
cli
rolb
iret
jmp
cmp
shl
aam
mov
mov
sti
fiadds
xor
aaa
fsubrp
filds
fcmovb
cld
rolb
out
in
enter
out
xlat
in
cmp
out
cli
in
in
loop
incl
aam
or
and
out
in
das
lock
rcl
jmp
aas
sarl
cmc
ret
cmp
fdivp
lds
cld
xchg
lock
cs
out
ljmp
out
testl
sbb
xor
xchg
rcl
rcl
in
ror
hlt
fcmovbe
enter
cmp
out
call
mov
int3
xchg
mov
shl
clc
jmp
lret
in
enter
fabs
cmp
mov
imul
out
cli
adc
iret
icebp
ret
sti
fucompp
in
xor
lret
fstp
int
shl
cli
aam
sar
call
fdiv
mov
stc
xor
out
neg
int
repz
repz
cli
out
loopne
out
out
enter
iret
xor
cmc
bnd
aaa
rcl
shl
shl
ret
idiv
mov
std
in
enter
in
lret
clc
out
aad
incl
in
sub
fstpt
out
fcmovu
cmp
call
fpatan
ror
sbb
repz
repnz
lret
int3
in
jecxz
loopne
shl
lret
out
enter
sarb
aaa
fcmovbe
addl
loope
xchg
ljmp
jmp
repz
sar
idivb
fsubp
xlat
aad
out
ljmp
ds
vpsrlq
out
cmp
ret
aas
in
lock
out
lock
hlt
xor
cmp
cmc
idivb
shll
lock
mul
in
int3
nop
lock
rol
in
aam
shl
dec
fcmovnb
ret
ret
out
shl
ret
out
rolb
call
fucomip
aam
cmp
hlt
mov
jmp
icebp
ljmp
aad
xor
enter
int3
ret
lock
test
addl
shlb
std
ljmp
in
rcr
rol
fsubrp
fstp
faddl
int3
in
fdivs
hlt
stc
out
in
stc
shr
cld
out
dec
jecxz
not
inc
fisttpll
incl
ret
rcr
enter
icebp
fdiv
icebp
mov
cmpb
lock
enter
stc
fst
lret
in
iret
in
clc
faddp
leave
sar
call
int3
ror
loop
call
aad
jmp
in
cld
ror
clc
out
rcl
shr
jecxz
jmp
out
and
in
aaa
aam
ror
jmp
stc
repz
addl
fiaddl
mov
mov
sti
jmp
out
into
lret
sarl
ds
xchg
sti
jmp
mov
xchg
lock
cmc
aad
xor
in
call
in
loope
lock
ljmp
mov
int
ror
out
leave
fcmovbe
cli
int
repnz
xchg
in
fcmove
test
ljmp
lret
jmp
fcomp
adc
or
in
mov
loope
ljmp
neg
fxch
lret
aas
rcr
fneni(8087
iret
cmp
in
fstp
dec
orb
loopne
leave
loop
cli
sar
aam
cmp
addb
shr
aam
fucom
iret
test
mov
ror
int3
aam
ljmp
clc
shl
shl
sti
stc
xchg
ffree
fcoml
not
ret
rcr
rorl
test
add
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
push
and
jge
jl
fdiv
loope
std
and
rol
fdivr
stc
out
enter
repnz
cs
jmp
ss
idivl
aad
cmp
iret
xchg
lock
into
shl
xor
rol
aaa
imul
aam
add
ffreep
div
in
mov
shl
out
sub
icebp
fcmovnu
aad
out
fidivrs
out
cld
fcmovne
mov
loope
fsub
lret
hlt
out
ljmp
aas
loopne
ret
xchg
testl
xor
fiadds
hlt
idiv
mov
repz
decb
out
cld
jmp
out
xor
int3
lds
out
neg
lret
ret
aam
out
repnz
rolb
jecxz
mov
call
in
enter
jmp
cmp
jmp
addb
lock
sub
stc
sti
in
lock
icebp
cmp
or
stc
in
test
in
jmp
sub
clc
leave
cmp
cmp
fcmovbe
sarl
clc
cmp
test
sbb
loopne
mov
rorl
into
repnz
cs
fadd
lock
xlat
repnz
lock
mov
adc
mov
sub
call
lret
call
ret
orb
loop
loop
jmp
xor
cmc
aam
sti
call
cmp
shl
rcl
sti
cmc
not
int3
mov
jecxz
ror
cmc
loopne,pn
shll
clc
shl
cld
jmp
icebp
repz
leave
cmc
ljmp
mov
xor
cmc
shll
out
in
call
cld
lock
rcr
rcr
incl
std
dec
mov
jecxz
ss
cmc
int
leave
ror
cmc
jecxz
loop
test
fdiv
loope
jmp
cld
test
ss
lret
sti
in
aaa
rcl
int
cmc
iret
rcr
in
cmpl
jmp
out
lock
shr
loopne
test
ljmp
lds
div
fisttps
xor
clc
sub
ror
ss
in
out
fnclex
jecxz
fisttpl
adcl
ljmp
shr
out
fcmovb
lock
cld
fsub
testb
sub
aam
ss
hlt
das
sar
xlat
ljmp
in
sti
rcr
xlat
ds
in
mov
in
aad
aam
cmp
out
in
ds
in
fstpt
aas
in
rol
stc
ret
lret
icebp
in
icebp
std
mov
in
fnstenv
loop
fcmovne
jmp
ret
fsubp
fldl
cld
loop
adcl
aam
cld
sar
std
fucomi
out
cld
xchg
out
xlat
lea
repnz
xchg
leave
lret
shr
aam
lret
stc
fstpt
shl
rol
cld
inc
clc
xchg
int3
lret
xchg
shl
xor
lret
xor
in
xor
fnstsw
xor
cmc
testb
test
out
xor
out
cmp
fadds
mov
in
loopne
std
xchg
test
sar
call
or
iret
fcmovb
fadds
in
clc
loop
fucom
jmp
lret
aaa
call
in
cld
sar
lock
jecxz
fldl
fiadds
xor
ret
lock
icebp
rcl
loopne
sub
enter
mov
lock
int
loope
xor
aad
jmp
in
cmp
repz
xchg
fsubp
xchg
loopne
xchg
shrl
lret
fcmovne
icebp
std
into
ljmp
loope
test
loopne
mov
xor
shr
xor
int
aad
in
lock
test
fucomip
fiaddl
test
xlat
aaa
icebp
aam
ljmp
cld
sti
cmpb
addb
orb
aad
repz
jmp
faddp
xor
aam
jmp
neg
cmp
mov
in
lock
in
aad
testb
loope
mov
sub
sub
int3
in
jmp
call
lret
iret
shr
aad
cmp
and
stc
lret
out
repz
divb
lock
test
frndint
lret
in
std
repz
in
loop
hlt
xlat
fucomi
out
out
xlat
call
rcl
fldl
fcmovb
aam
call
in
jmp
leave
leave
out
jmp
lret
xchg
ret
cmc
in
fdiv
in
ror
xchg
jmp
in
in
xor
mov
incl
jmp
int
iret
rcl
fsts
fs
test
xchg
les
jl
add
fucom
sti
out
lock
mov
lret
fcmovnu
call
cld
lock
xor
stc
enter
iret
lock
ror
xchg
xlat
test
rcr
sti
out
int3
in
std
out
out
jecxz
test
fsub
in
icebp
ret
fdivr
ret
fcos
vshufps
mov
mov
xor
call
mov
rcl
aad
roll
test
in
fisttpl
rcl
hlt
shl
fcom
cmp
hlt
xlat
aad
faddl
dec
cmp
rcl
repnz
out
xor
cmp
fdivrs
lock
idiv
aad
orl
loope
out
jmp
out
cmp
lock
fnstsw
hlt
rcr
loopne
into
out
call
rol
hlt
cmp
leave
int
ljmp
sti
cld
call
out
fsub
mov
xor
neg
out
fxch
rol
rcl
cmp
loopne
loope
in
jmp
xchg
roll
aad
rol
std
out
cmp
rol
hlt
sbb
fucom
jmp
repz
icebp
repz
aad
in
lret
shr
std
xor
repz
jecxz
shl
std
fcmovne
fdivr
ljmp
in
fsubr
test
cmp
repz
loopne
jecxz
leave
cli
decb
in
mov
lock
sti
cmp
sti
adc
shl
loopne
loope
fdivr
call
loop
mov
xor
ret
xor
sti
aam
out
int
in
fldl
cld
testl
and
hlt
lock
rcr
fsincos
cmp
loop
fucomi
sbb
fsubrp
enter
in
loope
xor
fdivs
icebp
aas
cmp
call
inc
ret
jecxz
loope
mov
add
xchg
cmc
int3
test
ror
cld
fidivl
aam
into
sub
aam
icebp
ret
stc
cmp
in
cmp
lret
out
aad
shl
in
int
into
icebp
jmp
fxch
fcomi
faddl
fmull
das
iret
xor
aam
cmpl
sarl
xchg
and
out
lock
cs
fldcw
ljmp
out
jmp
hlt
lret
out
int
test
out
iret
out
xor
sar
ss
int3
enter
loope
mov
lret
xchg
repnz
aas
ljmp
rcr
sarl
sti
sub
ret
out
jecxz
mov
mov
xor
shl
fsubr
ror
out
aad
loopne
rcl
loop
repz
mov
lret
mov
loop
xlat
rcl
hlt
pushl
aaa
call
and
fsubp
jmp
and
and
fstp
icebp
out
jmp
sub
cli
repnz
ds
shl
xlat
call
test
into
incb
jecxz
divl
cli
fcomi
xlat
lret
int
dec
testl
jmp
lret
les
cmp
aaa
iret
ss
in
ret
std
xchg
xlat
addb
int
mov
xor
in
xor
clc
stc
cmc
fsubrp
in
lret
shl
fsub
std
sbb
fmul
mov
shl
xor
not
cmp
ds
dec
sar
icebp
sub
std
loop
sti
fsub
out
out
ffreep
out
in
hlt
int3
fucomp
fsub
sti
iret
fstpt
ret
cmc
leave
faddl
cld
loop
repnz
xor
sub
fcomip
dec
sar
lock
ljmp
rorb
cmp
into
xor
fidivrs
loopne
testb
loop
mov
adc
int
in
mul
fdivs
out
cmp
sar
icebp
aam
aas
filds
mov
sub
aaa
aam
cmp
ljmp
aad
ret
lds
enter
sti
shl
into
in
das
rcl
jmp
loopne
xlat
cmp
ret
std
loope
fyl2xp1
fisttpll
lea
out
out
call
iret
fdivrl
cmp
in
aam
ret
hlt
std
loopne
jmp
repnz
out
shr
xlat
cmp
loopne
out
xlat
clc
ret
fcmovne
mul
dec
jmp
cmc
mov
shr
cmc
aad
sarl
cmp
loope
out
sti
jecxz
cld
faddl
xchg
clc
ljmp
ret
lock
out
aaa
sarl
fcmovnbe
xlat
mov
lret
jmp
lret
out
jecxz
aaa
cs
fucomi
fstp
fcmovbe
cmp
fnstsw
out
sub
in
cld
jecxz
iret
lea
jmp
test
inc
hlt
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
cmp
cmp
cli
lret
std
stc
out
xrelease
leave
int
call
clc
xor
shl
fdiv
ss
fstp
test
aad
std
jmp
cld
xchg
fnstenv
enter
loopne
dec
ret
xor
icebp
cld
or
test
into
fdivrp
lock
hlt
hlt
xlat
out
xor
out
lret
fst
ds
fdivr
filds
std
jmp
xchg
lret
cmc
xor
bnd
fdivp
aaa
fsubr
icebp
testb
mov
out
out
lret
aaa
into
cmc
in
jmp
clc
shl
shl
sbb
mov
loopne
shl
ror
lret
divb
jmp
cmc
in
cmp
cmp
inc
fyl2xp1
cld
hlt
ljmp
in
test
clc
int
cmp
cmp
ds
ds
cmp
lds
test
int3
loop
ret
in
in
repz
aas
iret
lret
test
repnz
xlat
cmc
cld
out
int3
fcmovnu
cli
int
nop
in
sub
in
in
stc
icebp
ljmp
out
ret
xchg
out
nop
fnstsw
out
xor
into
aad
cmc
xlat
cmc
ffreep
jecxz
cmp
lock
decl
in
in
loope
lret
mov
jmp
in
lret
lock
lds
clc
fsub
jecxz
cmp
loopne
nop
ljmp
cmp
aam
fidivrl
sbb
rol
hlt
loop
fldl
call
ljmp
lock
fdiv
enter
fsubrp
shr
in
sarb
aaa
sub
fdivrl
icebp
fucom
xor
cld
out
hlt
cmpb
fcmovu
iret
iret
cld
rorb
out
cmp
out
in
std
loope
aad
std
stc
shl
cmp
jmp
jmp
into
jecxz
jecxz
fdiv
shl
cs
out
repnz
shl
int3
cmp
test
loopne
xchg
lret
mov
ljmp
ss
int
std
xchg
test
lret
ljmp
mov
lock
in
cmc
fcmovnu
aaa
jmp
call
jecxz
mul
fcom
enter
icebp
mov
in
int
ljmp
ss
cmp
fistpll
in
lret
ret
jmp
mov
iret
icebp
int3
xor
fdiv
call
xlat
cmc
fdivp
fsub
fmuls
icebp
jmp
in
in
in
icebp
xor
iret
repz
repz
hlt
xchg
into
fdivl
into
idiv
fucomi
ds
cli
shl
loopne
fcomip
test
leave
fsubp
int3
fdiv
lret
ljmp
lock
ret
and
mov
xchg
lret
nop
jmp
icebp
ret
lret
fsub
out
in
out
ret
shl
xchg
mov
mov
ror
icebp
sub
call
cmp
fsubr
repnz
out
aam
stc
mov
fdivr
mov
ljmp
sti
ljmp
loopne
test
loope
ret
fsts
fadd
rcl
imul
xor
in
lret
clc
repnz
xlat
xchg
shr
leave
jmp
cmp
jmp
das
xor
in
fdivs
fsubr
add
cmpl
fdivrp
in
stc
rclb
shll
in
icebp
int3
in
cmp
fldl
cmp
jecxz
xchg
into
in
dec
xchg
out
out
xor
icebp
enter
ffreep
lock
sti
mov
fucomp
mov
lret
loopne
ljmp
out
in
imul
aas
lret
int
std
aad
rorb
fucomip
cld
ljmp
cmp
in
aam
enter
fistpll
in
hlt
test
xchg
xchg
loope
icebp
fbstp
int3
xlat
out
aaa
repnz
fildl
fcomp
enter
ljmp
out
out
stc
neg
shl
lock
flds
int
leave
out
in
loopne
jmp
clc
xor
clc
cmp
lret
cmp
out
in
shl
cmpl
mov
iret
cld
lds
int3
shl
fcomp
in
lret
repnz
into
std
fdivp
faddp
cld
idiv
fnsetpm(287
in
int3
sub
idivl
leave
lret
stc
out
fucomp
int
not
mov
mov
out
aam
lret
into
lret
lret
iret
lock
clc
cmp
cld
mul
loop
into
addl
sbb
xchg
into
icebp
out
shl
call
ljmp
fst
sti
or
fadds
xchg
xor
xor
jmp
rcl
aad
aad
rolb
push
cmp
ret
jl
add
fdivr
cli
int
cmpb
out
mov
cld
stc
stc
mul
jecxz
or
iret
mov
in
int
shr
fidivrs
aam
out
ret
xlat
movb
ljmp
mov
ljmp
hlt
aaa
lret
fidivrs
in
and
cmc
loopne
fst
mov
cli
fsubr
ret
xor
ret
int
out
stc
in
sarb
out
aam
aam
sbb
fldlg2
xchg
ror
shl
xor
jmp
ror
enter
sar
and
fadds
shr
loop
int
stc
shl
fdivp
sarl
rcr
ret
sub
xor
jecxz
cmp
leave
enter
jmp
divl
roll
cmp
ljmp
or
loop
fsub
into
shl
cli
std
shr
out
icebp
aas
rcl
xchg
mul
loopne
lret
decb
shr
cmp
int3
cmp
int3
stc
ffree
lret
in
neg
loop
loopne
into
shl
out
ret
cmc
fdiv
into
into
repnz
cmp
les
out
fucom
out
loope
ret
stc
out
leave
out
cmp
iret
into
xlat
cli
fmull
int3
mov
fdiv
iret
sub
idiv
cmc
cmp
iret
addb
shl
loope
hlt
std
mov
ljmp
repnz
xor
in
sub
jecxz
loope
clc
mov
mov
loop
lret
mov
add
xor
xor
xlat
fdiv
ljmp
fsubr
enter
fld
mov
ljmp
icebp
call
rcl
add
in
lret
int
out
loop
lret
loop
lret
sub
cmp
ror
out
loopne
mov
fmul
call
vshufps
cs
shr
lock
ret
into
loopne
ljmp
xchg
fdivp
out
ss
jmp
aad
stc
repnz
xlat
cmc
rolb
clc
cli
sar
xlat
out
aad
jmp
out
fcmove
cld
xor
out
les
ret
cld
orl
leave
cmp
cmp
out
into
aad
cmp
fabs
enter
sbb
ret
cld
xchg
shll
aaa
jecxz
mov
lock
hlt
aam
fimull
fiaddl
loop
xor
out
leave
jmp
in
repz
xor
fsub
in
in
in
fucomp
int
and
das
enter
cli
cld
out
jmp
fst
inc
std
fnstcw
fiadds
int
jmp
loope
out
ret
stc
fdivr
int3
aas
cmc
aam
cli
hlt
jmp
enter
in
sub
lock
lock
into
out
neg
mul
icebp
ret
xchg
fmul
test
ljmp
lret
repnz
xor
les
cmc
in
int3
aaa
cmp
loope
cmp
ljmp
into
call
in
enter
icebp
lock
ror
sbb
test
cmpl
sbb
int
into
out
aad
xor
cmp
iret
ror
cld
call
out
cld
in
clc
mov
lea
cmp
cld
int3
repnz
hlt
adc
adc
les
in
and
jmp
loope
out
clc
jmp
cmp
fcomp
flds
cmp
loop
mov
fcmovbe
repz
cli
call
in
frstpm(287
out
fcmovbe
clc
cmp
addl
hlt
sbb
mov
jecxz
mov
leave
in
ret
test
cmp
adc
cli
frstpm(287
in
stc
fcmovnu
out
int3
mov
xchg
out
out
in
shlb
imul
lret
rcl
out
add
fmuls
sub
out
xchg
shrb
in
int3
xor
int3
mul
sti
aam
xlat
cmp
out
dec
sbb
cld
int
int3
shl
rcl
xlat
xor
cmp
cmp
cmp
mul
in
testl
repz
sarb
sbb
test
lds
jecxz
nop
fucomip
into
int3
xor
ret
sti
sti
mul
idiv
int
fadds
mov
int3
jmp
fldl
xor
sar
std
fcomip
aaa
filds
sar
decl
mov
mov
ljmp
loopne
shrl
repnz
loope
out
ret
ret
ret
stc
adc
ret
ljmp
xchg
mov
loop
leave
das
rcl
out
out
cmp
rcl
aad
cmc
mul
xchg
hlt
in
cld
in
into
fsubp
enter
ret
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
fsqrt
in
cmp
shl
cmp
ror
xlat
aad
mov
fisttps
loope
int
xor
xor
xlat
aaa
clc
int
fcmovnu
ret
repnz
loopne
loope
out
xchg
ror
enter
repnz
aam
cmp
lock
loop
xor
xchg
loop
iret
in
call
ror
call
lock
in
rorb
fldl
xor
in
fcmovnbe
fcmovbe
jmp
loopne
shl
fcmovne
mov
test
mov
or
xor
sub
iret
ljmp
cmpl
incl
in
out
loope
jmp
leave
ss
aad
xor
aas
ljmp
fcmovnu
jmp
xchg
in
out
leave
cmp
clc
cmp
in
not
jecxz
rcr
loopne
add
fiaddl
into
out
int
fdiv
lret
aam
rcl
out
fdiv
ret
ret
test
icebp
incb
jmp
fcoml
iret
out
cmp
fcmovnbe
fcmovb
xlat
xchg
loopne
clc
ljmp
cs
repz
xlat
enter
fnstcw
shl
add
mov
cli
xchg
out
fiaddl
xlat
ljmp
hlt
into
rolb
cmpb
stc
lret
jmp
out
in
in
xchg
aas
fidivs
xor
fcmovnu
cmp
ror
out
loop
ds
roll
out
lret
and
iret
jmp
call
out
cmp
jecxz
and
into
mov
jecxz
int
sarb
out
hlt
fstp
ret
cmp
clc
in
call
xchg
loop
sarl
cli
repnz
in
mov
sub
out
in
ret
rcl
lock
hlt
in
hlt
adc
iret
loopne
les
mov
lret
iret
xor
aad
rcr
dec
call
fildl
mov
cli
cld
iret
in
incl
xor
in
shr
into
fiadds
rcr
cld
aad
sub
int
mov
mov
xlat
rcl
xor
shr
repnz
loope
int
add
cld
sti
fdivrs
sti
stc
call
xchg
lret
hlt
in
jmp
repnz
aam
cmp
std
xor
fcom
mov
and
out
or
out
ljmp
aam
hlt
in
in
and
orb
in
out
sub
lret
ret
lret
lret
cmp
std
cmp
sti
sbb
sti
jmp
cld
adcl
into
ds
cld
hlt
cmpb
fcmovb
mov
jecxz
test
xchg
cs
ret
lret
cmc
aad
ffreep
cmp
idiv
mov
into
in
ljmp
ret
in
jmp
cmp
jmp
incl
testl
xchg
jmp
call
out
ss
idiv
fsub
cld
test
test
and
std
int
xchg
loope
fmul
ljmp
fldl
cli
clc
cli
jecxz
or
and
aaa
clc
xlat
repz
into
inc
rcr
cmp
mov
in
rorb
into
repz
lret
int3
fnstsw
incb
ret
mov
jmp
loop
in
into
ss
call
cli
jmp
fcmovu
std
mov
loopne
shl
icebp
ror
idiv
in
clc
sti
cmp
rolb
cld
mov
fstp
into
cld
lret
aam
fdivr
sti
out
cli
testl
mov
in
fmul
into
jecxz
xchg
aad
cs
fldl2e
shl
not
out
rcr
fsubp
leave
cmc
out
sub
in
std
out
xor
sti
iret
shlb
stc
cmc
aad
std
aad
repnz
ret
les
lret
xchg
rcl
xor
fxtract
enter
call
push
hlt
fcomp
xlat
shr
lret
mov
jecxz
aaa
xor
imul
int
or
loop
call
rcr
cmc
int
lret
aad
cmp
aas
lret
fsub
fcomp
fadds
imul
mov
mov
int
iret
imulb
into
aaa
out
dec
int
aam
cmpb
aam
xchg
test
hlt
repz
imul
in
in
stc
fstp
sarl
ror
rcl
jmp
jmp
repz
decl
push
mov
xor
jmp
ror
ror
rcr
frstor
pop
sub
add
jl
add
xor
cmp
in
fsubr
stc
fucom
cmp
loope
jecxz
lret
mov
and
xor
ret
lock
cli
repnz
sti
dec
lock
icebp
xchg
xchg
flds
ljmp
hlt
icebp
aad
into
shr
xlat
int
out
out
fadd
lret
vpsubb
xchg
sub
cmp
in
out
call
addb
movl
aam
lock
icebp
cmp
idivl
iret
jecxz
shl
in
call
mov
into
into
test
in
jmp
enter
jmp
iret
fprem1
fnstcw
in
iret
hlt
fcomi
out
cli
jmp
loope
aam
aam
enter
jmp
jecxz
fsub
in
loope
aad
int
cli
mov
hlt
ljmp
jmp
shl
mul
int3
aas
out
mov
ret
sti
rol
nop
cli
fidivs
lock
out
fsub
rcl
int
out
hlt
clc
sar
mov
fadds
into
sub
cmp
hlt
stc
int
in
sti
cmp
loop
ss
aas
ds
fcmovnu
call
orl
stc
shll
rcr
cmp
test
or
in
ret
clc
int
loop
in
xchg
lock
imul
call
hlt
lock
aad
in
stc
cld
std
iret
addl
aaa
cmp
aas
fmul
fmulp
cmp
in
clc
std
enter
in
loopne
out
loop
lock
rcl
fcmove
fcmovu
fmul
ljmp
div
mov
ds
in
int
fmull
ret
jecxz
fcmovnbe
cmp
lock
and
hlt
decl
loope
xlat
ds
lret
lret
in
stc
rcr
xlat
test
xlat
orl
cmc
fldl
ror
call
lock
cli
rol
fdiv
fcmovu
xchg
fmulp
xchg
addb
clc
cmp
cli
idiv
sar
rolb
mov
mov
mov
in
in
icebp
in
fdiv
cmp
ljmp
leave
xlat
aas
out
fcmove
test
shl
call
aaa
xor
call
xlat
test
jmp
jecxz
jmp
mov
in
nop
mov
fsubp
jmp
in
xabort
in
aam
rolb
ret
ret
test
fcomi
mov
ror
aad
shlb
out
cmp
shl
rol
vshufps
call
call
repz
hlt
in
std
in
out
aas
hlt
cli
ret
cmpl
out
lds
faddl
xor
test
xor
clc
imul
icebp
cmp
fiadds
loope
decl
int
test
loope
fsub
aad
rol
fsub
int3
fdiv
fstp
mov
loope
iret
in
jmp
cmp
ret
xrelease
clc
clc
lret
sbb
sub
fidivs
lret
stc
fdiv
int3
incl
xlat
out
out
loope
std
subb
in
xor
aam
ds
in
aad
incl
fldl
repz
xor
sti
xor
aad
rcr
repz
in
addl
loop
rclb
icebp
leave
lret
shl
sub
addl
shr
mov
iret
in
icebp
call
std
aad
les
fxch
orl
xor
sti
repnz
loope
loope
clc
fcmovbe
ds
orl
in
into
lret
iret
xchg
ds
call
push
out
sti
fxch
cmp
in
leave
lret
int3
out
addb
int3
aam
fmul
shr
cmp
stc
lret
sti
cmp
cmpb
hlt
hlt
fisttpll
rcl
test
out
in
f2xm1
aam
sar
lock
lds
out
sub
ds
mov
sar
ficoms
shl
cli
icebp
enter
std
xor
bnd
fsubp
xchg
fldl
repz
int
jmp
fsubrp
in
mul
sar
hlt
test
ljmp
int3
ljmp
xor
adc
aam
sar
jmp
cld
cld
jmp
ljmp
call
fcmovnb
loopne,pt
cmp
ret
fcmovnb
cmp
in
lock
loope
lret
ret
int3
rcl
in
frndint
in
int
addb
xchg
test
fsubrp
fucomp
out
cs
add
push
jmp
lret
ds
lret
rol
loop
adc
mov
jge
jl
hlt
clc
into
jmp
fcomi
ljmp
ret
lret
popl
das
iret
cs
int3
xor
stc
aam
in
inc
fcmovb
testl
fmul
shr
out
out
int
in
cld
clc
lret
ds
test
shl
sti
fmul
mov
out
in
xor
aam
xor
jmp
enter
ret
cmp
cmp
fcomp
addl
cmp
lea
cmp
fbstp
xor
fsubr
xlat
test
loope
stc
enter
fsubp
decb
fldl2e
stc
cmp
cmp
aad
vpmulhuw
mov
orl
mov
xor
sub
loop
fucomi
lret
into
lock
repz
adc
in
xchg
clc
cld
nop
xchg
cld
test
hlt
fincstp
sti
out
jmp
in
enter
sar
loope
in
in
addb
test
shr
fsub
call
cmp
cmc
aas
repz
std
jecxz
hlt
mov
out
xor
iret
in
cmc
in
out
out
loope
cmp
addl
enter
mov
lret
and
int3
lret
xor
aam
ffree
in
shl
rcl
test
mov
mov
xor
cmp
in
out
rcl
loope
lds
out
mov
filds
shr
sub
fxch
push
jmp
rolb
loope
loopne
mov
sti
faddl
enter
out
cmp
repnz
cmp
jecxz
fmul
testl
ror
cmc
ljmp
stc
sti
rcl
lock
clc
test
enter
sbb
xlat
int3
das
out
cmc
rcl
aad
cmp
clc
loope
out
repz
in
fsub
lret
ljmp
xchg
in
fnstenv
xor
leave
aam
cld
cmp
and
in
addl
rol
loop,pn
xor
shl
aam
fdivrp
int3
ret
in
fsubp
in
loop
in
test
lock
jmp
cmp
icebp
stc
in
iret
into
cmp
aad
mov
mov
out
shr
out
aam
ljmp
cmc
icebp
aam
shr
int
out
rolb
xlat
mov
fisttpl
xor
sub
jmp
inc
fdiv
sarb
and
mov
in
adcl
int3
iret
cmp
xor
int
xlat
repz
sarb
hlt
in
test
leave
test
jmp
jmp
lret
lea
xor
ljmp
cmp
lock
les
out
into
push
test
stc
sar
out
cmp
repnz
aam
out
lock
ror
xchg
ljmp
out
cmp
iret
rol
leave
fincstp
ret
repz
cmc
clc
sti
ljmp
jmp
in
out
int3
std
fmul
fdivrs
jmp
ret
ds
loop
cli
mul
ret
inc
not
lret
in
cmp
repz
cmp
rol
clc
in
aam
repz
loop
xlat
cmp
fisttpll
xlat
xor
hlt
icebp
out
ljmp
not
cmp
xlat
fxam
in
idiv
out
fucom
jmp
ss
out
fucomip
aam
hlt
testl
idiv
fmul
loopne
xchg
repz
sub
jmp
lret
sti
test
shl
movl
cld
loop
fcomip
fmulp
xor
int3
out
fsubrp
neg
aam
enter
fucom
in
rcll
out
in
shl
aam
cmp
xor
cld
fadd
out
decb
out
out
lock
loopne
out
ljmp
test
rcl
loop
cmc
imul
aad
int
sti
jecxz
into
in
loopne
das
cmp
jmp
in
into
loope
fldl
sar
leave
decl
ror
enter
fcmove
rcr
adc
in
std
les
xlat
add
ljmp
in
nop
xor
jmp
clc
fidivrs
fcomip
test
repz
cli
out
jmp
std
mov
fcmovne
xchg
repnz
aad
in
cs
out
mul
cmp
cmp
xor
test
icebp
fdivr
xchg
ror
shrb
out
cmc
xor
icebp
sar
fcmove
mov
rol
int
mov
fmul
fisttpl
xor
ss
fdivr
out
clc
jmp
repnz
lock
cld
fmuls
mov
rcll
enter
rcl
jmp
ss
cmp
loopne
cmp
test
loope
clc
mov
shlb
into
sub
jmp
rcl
mov
neg
repnz
pushl
les
ret
jge
jl
icebp
xor
fucomp
clc
fadd
cmp
stc
movl
in
nop
in
loope
xlat
aaa
rcl
rcr
cmc
aaa
std
int3
jecxz
out
test
rcr
xchg
movb
aaa
fidivrs
ret
fucomi
clc
fnstsw
aas
roll
jmp
in
clc
enter
iret
xchg
cmc
jmp
cmp
xor
sbb
loopne
aas
xchg
aad
in
in
mov
std
xchg
rol
iret
aam
cli
sti
fscale
sti
ss
jecxz,pt
ret
repz
call
iret
jmp
into
jmp
out
cmc
out
fmul
repz
into
sti
into
mov
loopne
xlat
int3
jecxz
mov
aam
lret
shr
xlat
aad
repnz
aam
cmp
mov
int
stc
out
out
aam
ljmp
fstpt
int
cmp
int
xchg
sti
movl
mov
int3
ss
fxch
xlat
int
xor
adc
lock
cld
loopne
call
sub
hlt
jmp
jmp
in
aam
out
cmp
fdivr
in
hlt
ljmp
xchg
nop
xchg
icebp
lret
hlt
out
std
clc
cmp
cmp
cmp
repz
cmp
in
icebp
xchg
into
out
bnd
out
fucomip
lock
in
flds
ljmp
fucomip
div
out
fcmovb
ss
aas
out
rcr
fiaddl
mov
mov
int3
shrl
in
aad
jmp
cmp
xchg
std
incb
ret
jmp
int
aad
xor
xor
into
std
std
cmc
call
loop
xor
loop
loopne
fcmovne
test
idiv
out
in
ror
aam
icebp
cli
fcomip
test
in
xlat
cli
clc
xchg
and
repnz
xor
rcr
lret
or
into
in
xlat
mov
mov
orb
clc
jmp
stc
lock
enter
rolb
shr
std
stc
incb
fidivrs
rcl
iret
icebp
fadd
xor
lret
std
int
in
loopne
test
in
mov
test
out
shl
test
leave
out
cmp
fucomip
test
ret
fdivr
xchg
rorb
std
in
lock
shl
rcr
stc
fnstcw
clc
idivb
ffree
out
ffree
shl
xchg
jmp
loope
and
rolb
enter
rol
icebp
jecxz
fdiv
icebp
aad
sti
dec
mov
int3
xor
ljmp
cmc
addb
mov
ljmp
mov
out
xor
in
aam
xlat
repz
add
out
icebp
in
repz
in
xor
in
cmc
jmp
out
jecxz
cmp
sarl
stc
ret
mov
test
in
enter
xchg
int
in
repz
clc
stc
cmp
fildl
test
out
addl
stc
not
aad
cmp
lret
fdivr
test
hlt
mov
stc
fmull
lock
mov
fsubrp
in
loop
lret
cmc
call
repnz
testb
aad
mov
jmp
xchg
xor
out
call
int
loope
decl
test
jmp
xchg
iret
ljmp
rcr
cmp
lock
aad
fisttpl
hlt
fdivr
cli
mov
ret
shl
iret
into
out
cmpl
cmp
mov
aas
test
stc
leave
lret
repnz
jecxz
aam
enter
ljmp
std
cmp
xlat
and
xchg
or
aad
lret
aam
call
int3
hlt
fnstsw
icebp
leave
mov
fstl
fsubrp
xor
loop
idivb
cmp
aam
xlat
into
clc
cld
adc
jmp
repz
sti
cmp
cmp
idiv
int
aad
jmp
flds
nop
in
test
aad
sar
out
xlat
repnz
xlat
int3
fcmovnbe
aaa
addb
in
cmp
jmp
xchg
push
leave
ror
out
enter
out
ljmp
xchg
fld
sub
sbb
fdiv
test
xor
clc
std
in
filds
int
std
test
shl
in
lret
rcr
icebp
shll
cld
cli
cmp
out
xor
test
stc
enter
jecxz
fldl
cs
xor
aam
fucom
rcr
fdivr
ret
ret
sbb
in
shl
xchg
test
pushl
call
jmp
jmp
int
mov
cmp
xchg
cmp
pusha
aas
leave
jle
jge
jl
out
jmp
out
rol
shr
fcmovnu
aam
std
jmp
jmp
jmp
xchg
in
into
leave
xor
xor
into
lock
test
orl
lea
jmp
shr
shl
aam
std
std
icebp
int
test
lock
in
call
out
out
cld
xor
repz
rcr
repz
cmp
ret
fdivrp
rol
hlt
div
out
call
aam
das
ss
mul
cmp
rcl
rcr
in
neg
sti
ljmp
fcomip
jecxz,pt
in
cmp
in
fldpi
lret
fcomi
mov
jecxz
jecxz
into
ret
loop
loopne
rcl
out
out
repnz
std
repnz
idiv
cld
call
loope
int
out
xchg
lock
mov
in
in
int3
ret
int
shl
lock
in
fmul
rcr
loop
in
in
in
loope
out
mov
out
aaa
fscale
fcmovnu
rcr
in
cmp
fnstsw
in
faddp
test
lock
lret
in
vmovntdq
aad
into
fdivrl
loope
ret
loope
aad
les
in
lret
in
out
jecxz
call
int3
loope
aam
and
shl
xchg
sti
mov
out
ljmp
stc
std
rolb
xchg
in
int3
in
popl
leave
in
int
shr
rcl
xlat
cmp
fdivrl
repnz
int3
leave
xchg
call
ret
repz
in
call
aam
xlat
rolb
xlat
enter
jmp
nop
shr
leave
ss
das
rcr
out
pushl
cli
rolb
aad
aad
jmp
xchg
fimull
sarb
out
cmp
leave
cli
icebp
in
shl
sbb
test
test
and
jmp
fcomp
clc
cmp
lret
loope
in
xchg
cmc
cld
rcr
loopne
jecxz
out
rorb
xor
sarl
idiv
faddp
out
cld
stc
icebp
fsub
mov
xor
rol
iret
xor
cmc
jmp
hlt
idiv
fidivs
in
into
cld
in
cmp
cmc
leave
stc
mov
ljmp
ss
jmp
cli
cli
std
add
fcmovu
mov
xchg
lret
repz
cmp
ror
xor
loope
fnclex
rcr
ret
clc
idiv
jmp
ljmp
sub
xor
in
ljmp
shr
mov
in
test
call
cmc
ss
cmp
cmp
repz
shl
mov
fisttpll
in
aaa
iret
loopne
sub
cs
cld
aas
jmp
fcmovnb
fdiv
addl
in
jmp
jmp
xchg
fsub
int3
in
cmc
out
shrb
cmp
enter
in
cmc
loope
fisttps
loop
enter
std
xchg
test
xor
shr
xlat
lock
into
test
cmc
iret
repnz
out
imul
orb
fsubrl
out
ret
iret
repnz
ljmp
fistpll
flds
mov
sbb
xchg
out
test
in
sti
in
sti
out
sbb
cmp
cmp
addb
into
rclb
lret
xor
xor
xor
rcr
ds
cmp
mul
clc
mov
lock
jmp
xor
int
xor
ret
jecxz
sar
lock
incb
int
aam
leave
loopne
repnz
cld
fdiv
cmp
add
cmp
in
div
das
xlat
repz
cmp
int
loopne
icebp
xchg
xacquire
loopne
out
icebp
add
xor
xor
fnstcw
ret
loope
test
xchg
ljmp
shll
loop
fcmovb
into
cmp
clc
div
rcl
stc
shr
aad
hlt
xchg
mov
xchg
xor
int
repz
rcr
enter
test
sbb
and
jmp
movl
xor
idiv
cmp
repz
test
ffree
mov
out
out
xchg
sub
aas
aad
icebp
fsubr
das
clc
cmp
aas
iret
sar
out
test
fdivrp
stc
dec
out
iret
ror
int3
ss
int
jmp
test
aam
loopne
ffreep
cld
mov
rol
lret
test
fisttpl
shlb
xor
jmp
clc
lret
repnz
aam
and
sti
cli
fucom
fcomip
mov
cmp
in
cmp
rcr
lock
cmp
fidivrs
rcr
ret
les
repz
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
enter
jl
add
jmp
cs
fucomp
shl
jmp
jecxz
loopne
lock
fcomi
bnd
out
xchg
iret
xchg
lock
repnz
shlb
clc
in
cmp
ds
test
ljmp
ss
sarl
jmp
xlat
sub
sti
fsubp
rcl
fimull
lds
ret
fcmovne
fnstcw
ljmp
int3
test
aas
or
xchg
jmp
clc
xchg
hlt
imull
shr
iret
ljmp
ret
out
cmp
hlt
xlat
idiv
int3
fsub
loope
enter
jmp
repz
int3
in
fnstsw
cmpl
shr
orl
inc
in
out
ds
out
sti
sar
iret
hlt
filds
stc
rcr
add
xchg
cmp
jmp
into
sub
out
xor
cmc
out
dec
cmp
rcl
cli
hlt
jecxz
and
fiadds
rol
out
leave
in
ss
in
jecxz
rcr
roll
lret
out
test
xor
xor
xor
fdivp
or
rol
in
fiadds
add
int3
test
jecxz
xlat
icebp
ret
fistpll
call
not
fldl
int
out
loope
mov
xor
xlat
xor
aad
int
lock
cmpl
out
jecxz
fcmovnb
mov
call
jmp
cmc
aad
repz
cld
sarb
stc
div
loopne
clc
mov
clc
jmp
jmp
nop
in
shr
shl
in
repnz
call
ror
xor
lds
lret
call
loope
sub
xlat
shrl
int
leave
ss
cmpb
fmuls
loope
call
xor
in
aad
xor
shlb
in
xor
cmp
shr
repz
repz
leave
mov
xchg
leave
test
int
rcl
lock
lret
idivl
out
cmc
loopne
test
out
jmp
in
cli
cmp
in
std
out
loop
leave
out
lock
int
std
rcr
fcmovne
rorb
clc
mov
not
xor
clc
cmp
ret
fincstp
cli
xor
aam
stc
loopne
jmp
sub
repnz
out
fstp
call
cld
int3
sarl
aam
enter
std
iret
mov
xchg
subb
xor
out
fistpll
fdiv
aam
fdivrp
aad
leave
loopne
in
fimull
into
in
sub
repz
lret
shl
loopne
int3
lock
ret
ret
loopne
in
add
xor
cmp
stc
lock
shr
aas
repz
in
ret
loope
enter
mov
mov
ret
cmc
lret
aad
aaa
ror
sarb
cli
aam
out
cld
movb
xchg
call
jmp
repnz
icebp
aas
hlt
xlat
mov
out
into
mov
out
div
out
lock
repnz
int
fst
iret
fadd
out
stc
leave
lret
cmp
mov
mov
jmp
shll
faddp
addl
or
shl
in
aam
sti
cmp
fcomp
hlt
aas
fst
ret
and
enter
leave
out
lock
ror
rol
in
cmp
in
enter
fcompp
rcr
adc
std
loopne
out
xchg
movl
jecxz
xor
in
cmp
cmp
loope
ret
enter
enter
xchg
xchg
shl
ds
sti
xor
xor
ror
addl
add
xchg
int
xchg
into
imul
in
into
call
test
loope
mov
int3
clc
loop
repnz
out
into
lock
xlat
std
lret
fidivrl
loopne
inc
stc
stc
enter
lock
fsubr
repnz
jmp
hlt
rcl
test
sti
clc
in
les
rcr
call
cmp
in
in
fcmovu
aam
loope
cmp
out
xlat
loop
call
nop
ror
xchg
shlb
repz
xlat
loope
int3
in
fcomip
xlat
vpsubq
cmp
call
cmc
jmp
loope
rcl
stc
int3
out
cmp
hlt
out
fcomp
rcr
add
out
out
into
fucom
xor
lret
lret
cld
std
div
ds
ror
test
addb
fcmove
sti
xchg
out
loope
faddp
aaa
out
cli
cmp
xor
loopne
out
jecxz
jecxz
fcmove
xchg
jmp
rcl
aad
rcl
int
cmp
aas
aam
inc
in
sti
idiv
ret
cli
mul
icebp
repz
inc
cld
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
out
xchg
cmp
add
rol
out
enter
int3
cmc
cmc
add
aam
leave
out
test
xchg
lock
les
ss
into
cmp
lock
jmp
std
hlt
cmp
rorb
int
jmp
in
loopne
jmp
aaa
idiv
neg
cmc
fdivrs
cmp
repz
shl
hlt
call
fstp
mov
xor
fcmovu
lock
jmp
aad
shl
sti
loopne
aam
ret
mov
clc
or
in
in
cmp
test
out
shl
in
loope
jmp
fisttpll
xchg
shr
cmc
enter
sti
les
int
fdivrp
loop
ret
xchg
fstp
jmp
in
rcr
in
jecxz
cmp
lds
in
idiv
rcr
rolb
fsubr
loopne
out
clc
cmc
sub
xor
clc
lock
stc
sti
sub
in
into
std
fcmovnb
sar
fmull
xchg
out
mov
int
out
stc
leave
call
sti
cmp
lret
xchg
cli
incb
xor
icebp
call
ret
shr
fincstp
sti
rol
in
loope
fmul
fucomip
repnz
lock
xlat
les
imul
cmc
call
cld
leave
test
loopne
shl
test
jecxz
out
xor
stc
lret
xchg
incl
test
and
out
divl
cmc
in
sti
fscale
enter
sti
cmp
not
rorl
cli
lret
loope
stc
shl
xor
das
cmp
sarl
in
cmp
cld
fchs
test
in
popl
loop
loopne
call
out
aas
rol
std
fdivrs
mov
repz
mov
lret
repz
xlat
out
in
aaa
cli
pushl
xor
aas
into
in
xlat
loop
loopne
shl
fimull
in
adc
loope
les
int3
fcmovbe
in
lret
fadds
jecxz
loopne
sub
test
lret
xchg
xchg
leave
loopne
out
xlat
enter
std
sarl
xchg
lock
out
in
leave
jecxz
shl
shll
shl
aad
sarb
fdivr
in
adc
cmc
loope
test
mov
aaa
div
jmp
clc
lock
stc
iret
clc
leave
fcomp
jmp
int3
test
fmuls
sub
xor
cmp
cld
fcmovnb
cli
xor
addl
vpand
xchg
iret
sub
aad
cmp
sarb
out
leave
jmp
fsub
std
test
out
hlt
sbb
int3
cld
mov
out
xchg
xor
cmp
lret
fiadds
aad
adc
mov
jecxz
in
fucomp
loope
call
lret
aaa
ljmp
hlt
idivl
aas
aad
ret
mov
nop
aas
imul
loopne
aaa
in
out
fcomip
int3
jmp
sarl
aam
in
fdivrp
enter
xchg
jecxz
jmp
repz
fdivl
jmp
iret
icebp
fst
lock
fmull
test
xchg
out
jmp
div
ss
cmp
cmp
xlat
les
fcomi
xchg
adcb
rcl
xor
in
ror
iret
into
std
mov
int3
icebp
ss
lret
int3
sti
leave
cmpb
ret
lock
mov
repz
out
clc
ret
mov
loop
jmp
in
cmp
aas
cmp
enter
loope
std
sti
out
fucomip
into
rcl
xor
ljmp
xor
flds
incl
addb
cli
fsubrl
leave
ss
lock
out
xchg
in
lea
test
das
ret
out
lock
lret
cld
cli
in
out
aad
aam
ret
iret
jecxz
ds
jmp
mov
iret
jmp
out
xor
out
lock
loopne
jecxz
cli
ss
out
loopne
loop
mov
mov
lock
ljmp
leave
xlat
cmp
jmp
out
iret
loope
icebp
lock
fcmovnbe
test
clc
mov
repnz
jmp
dec
cmp
xlat
sub
adc
fmull
in
out
rol
into
sub
repnz
xor
rcr
ds
test
mov
test
jmp
leave
cs
repnz
fstpt
ljmp
out
loopne
xchg
ret
sti
idiv
mov
in
xchg
out
int
hlt
std
xor
out
sar
std
cli
adc
ret
loop
ret
dec
icebp
jmp
icebp
loop,pn
in
aam
cmp
rcr
sarb
call
loopne
filds
dec
clc
mov
xor
lea
cmp
jne
jmp
int
ds
int
lock
mov
jge
jl
in
cmc
enter
into
xor
fcmovu
sarb
clc
flds
call
mov
lret
into
aad
sub
sti
in
cs
cld
loopne
adc
loop
in
sub
addb
xchg
loopne
leave
cmp
div
xor
aaa
ds
out
test
test
call
sub
stc
into
leave
repz
cmc
fmul
sar
loop
loop
rolb
iret
fcomi
out
in
xor
hlt
aam
int3
rcr
icebp
rcl
out
sar
out
ljmp
nop
mov
repz
ljmp
leave
enter
fcmovnbe
xchg
les
addl
shl
jecxz
fdivp
cli
aad
iret
not
sar
out
enter
fucomip
xchg
out
xchg
xor
ror
shl
int3
fcmovu
repz
aad
ret
ret
fabs
incb
cs
jmp
call
std
cmp
neg
loope
out
enter
mov
xchg
in
in
aaa
cmp
sarl
add
test
xchg
fdivr
fcmovne
into
loopne
fcmovu
mov
icebp
in
aam
xlat
out
cmp
call
lock
stc
sub
mov
in
jmp
in
ror
fcomp
fadd
rorl
iret
int
das
icebp
mov
clc
lret
int
ss
fdivp
fadds
fimuls
in
repz
aas
shlb
into
sarb
xor
rol
cmp
shl
xlat
shl
fucom
loop
jmp
jmp
lock
in
out
aad
cmp
out
idiv
fiaddl
xchg
loopne
loopne
out
das
out
fadd
ss
stc
enter
loop
mov
mov
std
enter
subl
lock
idiv
fnop
shl
xchg
shr
testl
sub
mov
repz
repz
cmc
not
xchg
clc
imul
ljmp
into
iret
cld
das
shlb
int
cli
icebp
int
int
cmp
int3
mul
ds
hlt
jecxz
popl
repnz
in
jecxz
cmp
std
sarl
std
cmc
rcr
sti
xlat
xchg
in
xchg
out
jecxz
mov
aaa
out
ror
std
sti
cmp
add
lock
mov
out
out
repz
fimuls
hlt
in
cld
xor
fidivs
int
loop
test
mov
sub
ss
sub
lret
xor
aaa
cmp
fucomi
sar
and
stc
fcmovb
mov
xchg
test
mov
cs
in
xor
xlat
sar
cli
leave
stc
fcom
lret
mov
nop
adc
out
int3
cmp
clc
xor
fucomp
loopne
ffree
loop
lret
faddl
addl
ss
repz
hlt
icebp
out
sbb
ds
loope
clc
aam
aam
mov
and
in
out
test
test
out
iret
jmp
aaa
fcmove
adc
xor
test
faddl
leave
in
xchg
ds
aam
neg
cmp
sti
ljmp
cmc
rol
fcomp
test
xchg
loop
adc
loop
leave
sarl
aas
fld
xlat
aaa
int3
cld
cmp
out
out
fiadds
rol
shl
repz
int3
into
clc
in
lret
cli
jecxz
loop
cmc
xchg
mov
leave
lret
in
loope
shl
out
xor
fcmovne
fnsave
fucomip
shr
loopne
repz
int
stc
movl
enter
lret
iret
repz
fdivp
fdivp
repz
or
in
fistl
loope
xor
aas
enter
lock
in
sti
fdivrp
aam
sti
lock
loop
out
aam
shl
cmp
test
in
cmp
cmp
fcmovb
mov
loopne
xchg
aam
jmp
fucomi
lret
repz
xlat
fstp
repnz
mov
std
enter
mov
xor
cmp
cmp
in
xor
cmp
out
cmp
loop
xchg
lret
loopne
jecxz
lret
out
std
call
cmp
xchg
call
ret
int
les
cld
xor
ss
icebp
enter
repnz
cli
and
cmp
lock
std
ljmp
cld
hlt
into
in
xor
fcomp
lret
cmp
jecxz
cmp
fadd
cli
ds
in
hlt
xlat
fxam
test
out
cld
leave
lock
idivb
clc
in
rcr
int3
neg
xor
leave
stc
fldl
inc
or
xor
jmp
int
enter
int
lds
ja
fnstsw
jge
jl
mov
in
sub
in
std
out
fdivr
loope
ss
sar
repnz
clc
in
fiaddl
fisttpl
xor
cli
repnz
fsincos
cmp
in
xor
fld
repz
adc
jecxz
in
lret
leave
aad
into
leave
repnz
sub
idivb
std
out
aas
add
jmp
lret
out
fsubr
fcmove
jmp
int3
int3
out
cmp
lock
test
loopne
cmp
clc
out
movb
out
into
repnz
fdiv
stc
fcmovne
clc
and
std
test
out
shr
out
int
shl
ljmp
int
fucomp
std
stc
sti
cmpl
aam
fldl2t
jecxz
in
in
fmull
xlat
shr
iret
clc
out
jmp
filds
cmc
cmp
test
call
cmc
fucomp
rcl
xor
icebp
stc
iret
out
in
orl
clc
lret
mov
jecxz
ret
stc
xlat
call
iret
fcomip
aad
ds
loope
xchg
leave
in
out
lret
enter
std
hlt
sub
iret
xor
cmp
lret
neg
icebp
out
aad
jecxz
loopne
cmp
ret
test
imul
shr
fcmovnu
shr
in
stc
adc
loop
loopne
rcr
enter
in
or
out
cld
xchg
xor
sti
repnz
enter
icebp
fucomi
cmp
out
repz
rolb
out
xchg
test
sub
sar
aas
ror
fadd
loopne
fnclex
not
fcmove
ret
mov
in
mov
repz
fptan
stc
fdivrs
cli
or
decb
mov
lock
in
aad
cmp
into
call
int3
shl
jmp
loop
ror
jecxz
out
lock
aad
cmp
out
repz
shl
ret
mov
mov
into
mov
out
repz
call
cmp
aas
lock
ror
clc
ljmp
jecxz
icebp
cs
in
in
repz
fmulp
rcl
cli
hlt
stc
std
clc
rcl
ds
xchg
rcl
call
int3
ljmp
roll
cli
rorb
loopne
int
leave
stc
cs
ss
fucom
fstp
ds
cmp
shl
inc
and
fmull
cs
cmp
cmp
cmp
cmp
ret
in
orb
shl
loop
xor
fcomp
ss
rcr
icebp
xchg
aas
faddp
std
ret
sti
or
nop
mov
enter
repnz
ror
fdivr
cli
icebp
sbb
ljmp
faddl
ljmp
aas
repnz
in
ds
test
incl
loopne
xchg
xchg
iret
into
int
xlat
lret
rcr
std
jecxz
ss
addl
int
mov
jmp
repz
clc
int
cmp
in
hlt
lds
xchg
out
shl
jmp
jmp
out
xlat
xlat
xor
ss
out
xchg
aam
cld
popl
nop
ret
loop
lock
cmc
cmp
shl
rol
icebp
loope
repz
in
out
loop
loope
mov
cmc
jmp
lret
imul
repnz
cmp
fdivrs
rolb
ret
in
mov
in
out
cmc
ljmp
jecxz
icebp
repz
aas
jecxz
call
out
mov
shll
repz
icebp
neg
cmp
roll
testb
lock
mov
mov
enter
in
int
ss
sti
lret
xor
lret
test
leave
aad
leave
ds
mov
loopne
iret
lret
jecxz
icebp
std
int3
loope
loope
xbegin
faddl
xor
fsqrt
lock
out
testb
testb
lock
rcl
rol
lock
in
repnz
ds
fsubp
xlat
xchg
mov
decl
fldlg2
shl
aaa
stc
fdivr
ds
cmp
loopne
fcmovnbe
xchg
xchg
repnz
shlb
ret
ss
aam
cmp
test
clc
ljmp
loopne
loopne
lock
xor
std
fcmovbe
cmp
jmp
loope
orb
out
mov
mov
mov
out
repz
lret
hlt
ss
stc
xlat
rcl
out
dec
out
in
shr
hlt
loopne
cs
rol
cmp
cld
icebp
sti
enter
in
loopne
cli
ret
jmp
in
rcrb
pop
add
ror
aad
fistl
loop
call
loopne
jl
add
in
ss
int
lret
shl
cmc
jmp
ret
loope
fildl
or
hlt
xchg
divl
stc
out
enter
loope
test
fcomp
movb
repz
cs
int3
rcr
ljmp
fdivp
cli
repnz
std
testb
roll
xor
sub
aam
std
int3
push
in
out
sbb
clc
mov
clc
lret
fbstp
xlat
vpmulhw
stc
aaa
jmp
cmc
iret
rol
fsubp
hlt
ret
in
aam
loopne
sti
in
addb
xor
fstpt
sarb
aad
in
sti
fdivrl
std
loop
in
loop
xchg
iret
shl
iret
jmp
xor
repnz
enter
cli
icebp
jecxz
cmp
aam
mov
xchg
enter
out
loope
stc
into
xor
aas
fxch
rol
cmpb
rcl
call
int3
loope
xchg
loope
shl
imul
ss
icebp
cmp
test
mov
mov
iret
in
int3
xor
xor
lret
lret
out
out
rcr
cmc
test
repz
lret
imul
in
cli
test
into
xchg
icebp
shl
loop
out
out
ss
repnz
add
ffree
loop
xchg
orl
sti
lret
int3
faddl
repnz
std
test
sti
decb
xor
int
ss
inc
repnz
adc
in
loope
mov
mov
out
mov
fists
xor
xor
fpatan
xlat
cld
jmp
incl
fadd
faddl
in
ss
in
shr
cmp
in
xor
cli
fcomp
idiv
in
lret
lret
cmp
xchg
int
in
neg
cmp
aad
sar
out
cmp
test
cli
hlt
ljmp
enter
out
xor
sti
xor
fucom
fndisi(8087
jecxz
out
int3
std
xchg
jmp
out
repz
rol
in
leave
ds
clc
int
fld
rcl
in
stc
jecxz
cli
lret
jmp
into
div
in
std
cld
cmp
cmp
hlt
ss
aas
roll
fcomp
in
int
aaa
out
xor
icebp
enter
std
out
cmp
in
cld
ljmp
cli
adc
xor
xor
shl
out
jmp
in
fdivrp
ret
rcr
fildl
enter
jmp
xor
fcmove
int
xor
cmpb
fidivrl
fcomip
fcmovb
in
test
repnz
das
loope
lret
rol
in
cmp
rcl
ffree
ss
ret
idiv
fmuls
in
std
repnz
ret
jmp
flds
cld
std
call
mov
int3
out
out
int3
jecxz
sub
loop
fnstcw
neg
neg
out
enter
add
xchg
sarl
shl
cmp
out
xor
cmp
cmc
test
dec
mov
loope
out
fldl
int3
vshufpd
lret
int3
jmp
hlt
cmp
repz
jecxz
fmull
lret
xchg
ror
in
call
xlat
aaa
cmp
xlat
aaa
rcr
jmp
mov
mov
std
fiaddl
aad
in
in
aad
cmp
into
in
fsubr
fcmovnb
out
sti
lret
stc
lret
ror
jmp
out
xor
aaa
aas
in
ds
cld
ds
mov
ffreep
clc
iret
out
loope
in
xchg
into
in
loop
loop
cld
lock
loope
xlat
cmc
fldl
roll
icebp
repz
loope
sub
hlt
fnop
fcmovnbe
ss
aam
rol
call
lret
enter
call
stc
ror
shr
in
fsub
roll
adc
mov
out
shl
out
neg
aaa
clc
lret
fcom
ds
or
div
in
repz
out
lret
ret
loope
lock
enter
in
fsub
ror
int3
fcomi
ret
rolb
sti
fmull
xor
ret
cmp
lret
xlat
jecxz
lock
sarb
mov
enter
ljmp
into
in
rol
ss
cli
cli
aam
aaa
not
loope
stc
icebp
rcl
clc
fsubrp
loopne
stc
fcomip
call
rolb
in
aaa
fsubrl
xlat
int3
addl
test
out
int
into
icebp
mov
rol
hlt
into
out
int
enter
xor
xor
in
rcr
jmp
movb
ljmp
jmp
rcr
cmp
stc
ret
loopne
repnz
loopne
add
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
dec
sti
cmpsl
mov
pop
add
jecxz
sub
call
cmp
hlt
out
hlt
int
test
test
out
frstpm(287
lret
xchg
enter
xor
ljmp
out
out
xchg
movb
out
loope
dec
lock
xor
sub
cli
cmp
fdivrl
in
hlt
out
std
cmc
shr
out
loopne
or
incl
aad
lret
fsubrp
faddp
cmc
loope
aad
test
mov
ljmp
mov
loopne
loopne
shr
not
iret
lret
cmp
in
inc
aam
xlat
fdivr
mov
iret
int3
in
cs
loop
lret
into
aaa
fstp
roll
repz
int3
sbb
xchg
fdivp
call
cs
ss
int
divb
lock
ss
loope
int3
out
mov
mov
subb
xor
ljmp
clc
fcomip
loopne
out
mov
in
addb
xlat
clc
out
rcl
fcmove
rcl
aad
repnz
call
mov
lret
call
repz
cmp
cmp
ss
stc
cmp
cli
test
jecxz,pt
fdivr
xchg
iret
addb
out
xor
out
in
enter
call
sti
into
mov
ret
fadd
loope
in
out
call
in
int
cmp
xor
loopne
shl
fcomp
dec
sti
test
lds
fldl
cmp
aaa
enter
fcmovnb
iret
aad
testl
mov
rolb
rcl
xor
cmp
lret
fdivrs
out
stc
ffree
loopne
fmulp
ljmp
cmc
in
lret
jmp
cmp
cmp
fldl
cmc
mov
xchg
out
test
ficoms
shll
ss
cmp
loope
mov
aam
std
jmp
xchg
ret
lds
stc
cli
in
jmp
xlat
ds
aas
lock
stc
clc
loope
call
sti
jmp
icebp
lret
repnz
sar
int3
lock
fnstcw
fadd
sti
xchg
ds
fcos
cmc
vpsubq
lock
xchg
xor
in
test
into
sub
aam
aas
fdivr
fucom
ljmp
out
ret
in
lret
repnz
out
fidivl
in
cld
stc
cli
cld
cmp
idiv
leave
jmp
orl
cs
out
loope
aad
cmp
loopne
vpsubb
call
sub
nop
call
repz
aam
shlb
fcmovnu
sbb
int
ret
fst
leave
test
cld
in
fsubr
jmp
ror
aam
fcmovnb
stc
clc
in
enter
ret
in
testb
incl
in
lret
rcl
cmp
call
icebp
fucom
shl
xchg
out
jmp
xor
shlb
out
cmc
cmp
loope
fucomi
in
mov
jecxz
ror
xor
into
into
repz
rcl
rcl
orl
ror
rol
in
ljmp
fcomip
inc
inc
clc
out
out
lea
jmp
lret
ss
iret
shl
into
rcl
clc
shl
jmp
sub
ffree
nop
cld
test
incl
stc
int
cmp
std
cmp
out
addb
loop
iret
ror
fsub
int
iret
xor
out
lret
repnz
stc
into
lock
clc
sarb
loopne
idiv
sti
roll
test
faddp
out
int3
aaa
pushl
dec
call
test
or
int
xchg
out
xchg
test
cs
cmp
cmp
cmc
in
stc
stc
mul
nop
shl
and
cmc
loopne
ss
ds
rcr
loopne
roll
clc
mov
xor
lret
iret
fsubp
shr
fldlg2
fcmovbe
sti
lock
in
leave
cld
iret
incb
in
ss
or
xchg
ds
cmp
out
or
int3
cmc
sub
fdivrs
fcomi
stc
fstpt
cmp
cmp
out
xlat
lret
addl
loopne
xor
rcr
sarl
fcom
fdivr
in
in
leave
xchg
test
popl
imul
repnz
hlt
repnz
ret
rol
out
out
enter
orb
in
aam
hlt
hlt
cmp
ror
idiv
test
out
rol
fcmovnbe
and
in
inc
xor
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
xchg
jb
ljmp
enter
addb
fdiv
enter
enter
cmc
fdiv
hlt
ret
mov
enter
and
in
loopne
aam
jmp
cli
out
int3
clc
cmp
test
cmc
std
or
ljmp
xchg
test
rcr
sti
sti
fsubrl
fcmovnu
aad
cmp
ds
lock
cli
rorl
incb
cmc
xlat
sar
xor
lret
roll
jecxz
fstp
in
orb
xchg
lret
fidivrs
shr
out
xlat
in
cmp
into
hlt
aad
std
out
into
out
mov
decl
cmp
stc
aam
cmc
int
in
iret
clc
fcomi
aad
mov
out
test
adcl
xor
xor
xor
aad
stc
ror
ret
bnd
std
cmp
mov
xchg
nop
fdivp
loopne
cli
lock
int3
jmp
cld
rcr
out
aas
std
fst
xchg
cmp
ljmp
orb
aad
cmp
xlat
xlat
rol
lret
stc
incb
in
mul
stc
loop
lea
fdivrs
ss
stc
xor
fcomip
and
ret
out
roll
jmp
fimuls
ljmp
in
fmulp
rcl
int
loop
adc
les
call
in
neg
rcr
into
in
ds
cmp
icebp
jecxz
cmc
xchg
mov
cmc
testb
in
xlat
shl
xor
fistpll
cli
fdivrp
xlat
ret
fcomp
cmc
test
loop
fst
sub
repnz
aaa
cmp
repnz
test
cmc
aad
mov
jecxz
sub
xchg
xchg
out
aas
cmc
into
in
in
jmp
std
aas
out
cmp
in
out
in
filds
mov
ficoml
hlt
cmp
aad
jmp
lock
jecxz
in
xchg
clc
repz
loope
stc
mov
fisubrs
in
in
enter
fsubp
fsubr
sbb
rcr
cli
xlat
loop
mov
iret
rcl
enter
xor
int
fucomi
ds
sti
loope
roll
call
jmp
sub
jmp
stc
in
cmp
sar
fsub
std
in
cmp
in
fst
lret
cs
fnclex
call
out
lret
repz
repnz
call
adcl
ret
out
out
std
aam
fucomi
cmp
fimull
loopne
jecxz
nop
cmc
ret
int3
fnstenv
not
stc
cli
fcmovnu
shll
repz
out
repz
in
fsubr
fmul
int3
ret
test
icebp
ljmp
cmp
aam
in
lret
in
cld
cmp
jecxz
neg
in
sti
in
enter
clc
repnz
cmc
lret
in
into
fcmovbe
iret
cmp
std
stc
cld
cld
xlat
mov
clc
in
orb
xchg
repz
out
out
in
sar
ret
mul
ret
xor
int
mov
xor
xor
leave
ljmp
hlt
hlt
rcl
clc
fcmovnbe
lret
int3
test
jmp
xchg
shll
clc
xor
aad
fcmovnu
fcmovnbe
aad
aam
rcl
jecxz
cli
cld
std
call
out
cmp
icebp
cmc
fnstsw
cmp
repz
loopne
xlat
in
aam
cld
in
sar
jmp
ss
lret
cmp
icebp
lock
into
leave
clc
sub
movl
ljmp
out
ffree
aam
cmp
std
addb
faddl
loop
call
lret
lret
fcompp
test
in
sar
fcomip
int
lock
mov
mov
clc
iret
clc
repnz
repz
cmp
xlat
ffreep
out
lret
int
lock
leave
jecxz
in
out
fcmovne
cmp
not
fscale
rorl
aam
out
sbb
xchg
mov
xor
cs
icebp
hlt
loopne
ljmp
fucomip
neg
jmp
cld
mov
ret
xor
in
int3
int
loop
hlt
stc
testl
loopne
int3
mov
loopne
divb
cs
fdiv
in
cli
ret
fdivr
xchg
rcr
in
xchg
loopne
hlt
aad
ror
int
cmc
rcl
int
loope
fst
repnz
loop
enter
test
in
mov
jmp
call
xor
stc
loop
jecxz
addb
xchg
sti
mov
jmp
sub
into
cmc
out
leave
sti
sarb
cmp
loopne
repnz
inc
or
test
inc
add
add
jmp
lret
ffree
fst
in
notl
push
add
jl
add
in
out
jecxz
fdivp
mov
aam
in
jmp
aam
iret
fadd
sbb
cmp
fmuls
mov
xchg
xor
out
ret
xor
ss
xor
loopne
aam
cmc
aad
addl
rolb
shl
lret
idivl
cmp
cmpl
clc
test
or
test
icebp
mov
loope
rol
aam
in
xor
repz
loopne
lds
loope
rol
decl
adc
test
ror
xlat
rcl
stc
sti
sti
into
repz
fninit
neg
fdecstp
cli
ret
mov
xchg
rcl
ss
lret
repz
jecxz
cmp
out
ret
in
out
in
xchg
jecxz
leave
int3
jmp
rcr
call
into
in
fadds
hlt
test
lea
xor
leave
stc
int3
ss
testb
fcmovu
test
icebp
loopne
nop
mov
leave
xor
fmul
hlt
lret
sar
add
adc
xchg
ds
fscale
rcr
in
hlt
mov
ror
rcr
std
cmp
cmp
ds
loope
repz
fcom
mov
test
out
in
les
xor
fld
icebp
cli
hlt
repnz
stc
cmc
addb
ljmp
in
repnz
ret
in
das
fcom
cmp
jmp
out
loop
addb
enter
ljmp
out
cmc
loopne
jecxz
cmp
in
test
out
lret
jmp
in
int3
sarl
aad
rcl
ljmp
int
mov
xlat
in
cmp
sti
clc
sbb
sti
aas
loop
leave
in
loope
icebp
cmp
fsubr
sbb
out
into
cmc
int
sar
cmc
int
ds
loope
loop
rol
lea
jecxz
ljmp
fscale
jmp
adc
cli
ret
mov
in
jecxz
mov
out
into
xchg
ffreep
ljmp
shll
stc
int3
ffree
fcmovb
call
leave
call
clc
int
int
lret
loopne
mul
lock
fdecstp
aaa
fcom
sub
jmp
loope
add
xchg
in
int3
xor
aad
cmp
aaa
fdivl
aas
cmp
fsub
cmc
test
fdivr
in
out
ficoml
test
xor
fnstenv
out
xor
iret
cmp
cmp
jmp
addb
shl
call
shlb
cmc
fcmove
xor
idivb
sti
cld
loop
xlat
flds
jmp
loope
clc
jmp
cmp
cmp
in
out
addl
lret
loope
lea
out
shll
cmp
lock
cmp
aam
cmp
fdivr
out
lret
rcr
in
xchg
jecxz
leave
out
cld
in
call
aad
cmpl
xlat
fsub
fucomp
mov
vaddsubps
shl
aam
rcl
lret
fstpt
aad
ret
fcmovnbe
test
rclb
cmc
lret
sub
iret
call
in
aaa
sarb
cmc
mov
int3
loop
xchg
xchg
xor
xor
jecxz
lock
aam
aas
call
test
test
jecxz
loope
sub
ret
xor
rcr
call
cmp
call
mov
stc
ror
sti
in
sub
call
das
aam
call
xor
xor
xacquire
fneni(8087
lock
shrl
int3
xor
lret
int3
rcr
in
shl
fcmovnu
cli
cmc
clc
cld
hlt
mov
mov
mov
repz
aam
cmp
fxch
hlt
std
cmc
jmp
into
fmul
lock
aad
test
xchg
lret
jmp
mov
repz
out
into
int3
cmp
into
cld
clc
in
fsub
lock
cmc
jecxz
clc
fmul
lock
out
icebp
xor
into
loope
fcmovnbe
faddp
ret
neg
xchg
xchg
std
mov
fucomi
lock
loopne
xor
out
hlt
out
shl
shr
aad
fcmovnu
clc
lret
std
xchg
test
fmul
out
xchg
mov
lret
jmp
int
cmp
iret
cmp
fcomp
testb
incl
aad
loopne
aam
out
cmp
out
repz
ljmp
shl
cmp
out
loop
mov
int
shl
jmp
in
cmc
iret
not
neg
cmp
test
icebp
xor
ret
fcmove
int
lret
int3
xchg
not
xor
ror
das
imul
xor
jecxz
xor
out
fdiv
movl
mov
subl
jmp
rol
ror
aad
lahf
mov
and
jl
add
rcr
jecxz
out
mov
test
lret
hlt
fcom
aad
aas
fucomip
loopne
jecxz
xchg
repz
jecxz
in
in
icebp
rolb
xor
in
imul
stc
cmp
call
clc
and
leave
orb
loop
int3
in
loop
ret
in
into
test
fidivrl
fucomi
roll
int3
test
xchg
in
divb
out
in
into
cld
xor
jmp
sar
xlat
fiaddl
mov
in
xchg
nop
aad
clc
cld
divb
jmp
ds
clc
sar
test
repz
hlt
mov
fucom
jecxz
cld
mov
fincstp
iret
int
lret
out
imul
out
fucomip
fucom
mov
test
loope
loope
icebp
call
in
fsub
cmc
out
aaa
shr
sar
jecxz
testl
loope
xchg
lock
ret
in
jmp
in
les
mov
loopne
jecxz
cld
mov
int3
ss
fcmovbe
div
aas
cld
inc
ds
xchg
aam
jmp
out
xchg
fmull
shl
ret
ror
idivb
rcl
out
fcomip
faddp
rcl
in
idiv
cli
loopne
mov
in
sti
repnz
hlt
loope
addl
mov
out
loop
in
xchg
loopne
ror
lret
lds
ror
fcomp
out
out
fcmovnu
std
test
fisttpl
jecxz
cs
call
cli
stc
lock
std
jmp
fcoml
out
aaa
in
repnz
cld
sar
cli
sar
rcr
repz
lret
jmp
in
fists
in
ss
xor
cmp
repnz
lock
xlat
sbb
out
fmul
lret
jmp
shll
mov
cmp
cli
iret
loop
xlat
ds
flds
cmp
stc
movb
jmp
shl
fdiv
out
cmp
aad
icebp
sbb
mov
std
cld
mov
in
jmp
xor
clc
fnsetpm(287
cs
cmp
aas
repz
std
mov
hlt
ljmp
mov
cld
in
repnz
aad
cmp
cmc
icebp
cmp
aad
loopne
loope
xor
aam
lret
jecxz
in
xchg
loopne
in
shr
fstpt
imul
cld
in
cmp
ret
loope
fdivr
cli
orb
out
cld
addl
out
in
jmp
xor
loope
fpatan
fld
rolb
jmp
fcomp
in
xchg
in
xor
xor
in
shl
lock
repnz
cmp
add
sbb
hlt
repnz
jmp
idivl
cmc
fdivl
mul
xchg
out
stc
mov
and
add
call
ss
cld
xlat
jecxz
cli
out
fld
fcmovnbe
test
cld
ljmp
lds
xor
shr
and
fcmovnbe
out
loopne
in
mov
jecxz
cmc
mov
int
cmc
enter
loope
lock
testb
mov
into
aam
ret
lret
jmp
cmc
xlat
stc
fidivrl
cmc
clc
sti
cld
mov
xchg
out
enter
enter
fdivr
iret
cmp
shr
adc
jecxz
fmul
lret
hlt
test
jecxz
icebp
lock
cli
in
cmp
fcomi
sbb
cmp
bnd
fdivr
cmp
in
shl
jmp
clc
shl
cmp
fcmovu
fdivrp
out
shl
ds
sti
lret
out
out
icebp
mov
xchg
lret
ret
int
cmp
aam
addl
mov
jecxz
enter
in
incl
aam
int
dec
aas
aad
aam
loope
shl
out
iret
nop
leave
mov
lret
iret
fcmove
aas
int
loopne
rcr
in
inc
imul
aas
fsubr
clc
and
and
lret
in
into
in
out
int
loopne
ds
inc
clc
ret
mov
test
test
faddl
enter
cmp
in
roll
mov
mov
leave
std
mov
xchg
shl
into
ret
out
leave
xlat
lret
in
mul
cld
jmp
loopne
out
std
sti
fimuls
ds
int3
cli
aad
std
cmp
lret
repnz
into
cmpb
aam
mov
lret
lret
loope
test
xchg
push
shr
clc
ljmp
ds
xlat
faddp
fucompp
add
xchg
out
mov
aaa
cs
xor
fnstsw
into
decl
fs
add
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
cmp
lods
clc
jle
pop
add
icebp
fimuls
pop
sti
mov
xchg
aam
xor
divl
cmp
shl
lock
xchg
loopne
mov
cld
iret
out
nop
or
jmp
xor
cld
xor
cld
loope
jmp
sti
cmp
sti
aad
clc
std
lea
enter
int
sar
lock
ljmp
xchg
lea
filds
leave
lock
cld
cld
aas
imul
in
hlt
fimull
test
ljmp
shr
stc
iret
cmc
lret
lock
mul
stc
out
std
cld
mov
std
mov
int3
out
xor
cmp
leave
cld
cmc
shl
clc
ffree
sar
stc
les
mov
shl
in
idiv
stc
cli
loope
cmp
in
fiadds
xchg
rcll
loop
ret
not
repz
fdivs
fdecstp
rcl
cmp
aam
and
orb
enter
ror
icebp
aaa
jecxz
rcl
fstpt
hlt
fsub
fiaddl
jmp
ljmp
jmp
repnz
fdiv
in
rcl
roll
mov
in
lret
out
nop
iret
out
rcr
lret
cmc
out
lret
leave
jmp
iret
sarl
cmp
mov
in
mov
xchg
xchg
xchg
xlat
enter
stc
fdiv
xor
sti
fdivr
in
sti
xlat
fxam
fisttpll
loopne
out
ror
ret
iret
fidivrl
std
aam
fadd
std
mov
cmc
fldl
std
orb
lock
aaa
in
cmc
fucomi
cmp
fnstsw
out
vpmuludq
leave
mov
enter
xor
in
call
cli
repz
rcr
jecxz
loopne
fadds
in
fadd
int3
int3
mov
jmp
xor
cld
stc
fabs
repnz
repnz
cmp
mov
fsubrp
sti
out
in
icebp
sub
sarb
std
lret
sti
idiv
loopne
into
test
in
ret
mov
cld
mov
xchg
les
rol
cmc
fcom
ret
iret
vpsubusw
fadd
cli
ljmp
loopne
loope
aad
into
iret
jmp
repz
clc
std
cmp
repnz
jmp
test
mov
nop
xchg
xchg
mov
in
icebp
aam
icebp
cli
icebp
cli
iret
loope
sar
cmp
shr
fisttps
out
in
shl
rol
jmp
in
aaa
aaa
cmp
cmp
out
into
fxtract
clc
fcmovnu
xchg
fimuls
cld
out
jmp
hlt
cmc
std
repz
sti
cmp
test
out
icebp
rolb
jmp
test
xor
cmp
fidivrl
iret
lret
cli
lock
hlt
in
loope
jmp
call
int3
loopne
hlt
repnz
std
shll
cmc
lock
clc
leave
fisttpll
addl
iret
lock
out
rcr
sbb
add
rolb
movb
repnz
cmp
std
cmp
shl
repnz
fdivrp
ljmp
xchg
into
rol
cmp
std
cmc
cmp
ljmp
out
fcmovnu
test
out
enter
ljmp
lock
hlt
fcomi
loop
filds
xchg
fdiv
out
cld
xchg
enter
enter
lock
movb
testb
jmp
clc
mov
incl
cmc
cmc
fdivrs
fcmovnbe
fmul
loopne
ret
loopne
out
fdivr
fmull
decb
ljmp
shl
cmp
int
int3
out
loopne
ds
mov
out
ljmp
xor
fptan
cmp
loope
or
dec
out
mov
mov
in
cmp
repnz
cmp
out
roll
filds
ds
fstpt
call
sar
inc
out
lret
stc
jecxz
ljmp
jmp
lock
shl
test
ret
in
xchg
jmp
or
lock
out
stc
cli
fcmovne
fucomi
aam
idiv
cmp
out
mov
dec
out
test
xchg
sub
into
loopne
jmp
cli
clc
std
shr
aad
ret
mov
div
mov
sti
nop
test
ljmp
shl
cmp
shr
int
lret
cmp
in
vpmuludq
repz
out
stc
int3
in
cmp
int3
fidivs
shr
cmc
add
add
ror
aas
aad
iret
rol
adcb
jbe
and
add
and
mov
out
mov
mov
repnz
int
clc
out
cmc
add
test
sub
jmp
hlt
sub
hlt
cmp
ljmp
xchg
jecxz
les
loop
xor
ljmp
sti
fnclex
fdecstp
aas
test
loope
xchg
addb
int
xor
int3
leave
leave
cmp
cmp
rolb
enter
enter
mov
loope
clc
xor
icebp
lret
clc
imul
clc
neg
ds
call
mov
xchg
fdiv
out
ds
cmc
std
into
enter
cmp
aaa
loop
test
jmp
mov
sar
repnz
xor
std
fstpt
sar
sbb
fcmovu
aad
stc
in
in
fsub
xchg
xchg
fxch
xlat
out
lret
cmc
loopne
int3
cmc
mov
ljmp
and
cmc
enter
jmp
mul
stc
inc
hlt
out
loop
in
sti
enter
out
hlt
cmc
icebp
clc
fdivrl
cmp
aas
fcomip
loop
out
lret
cmp
sti
jmp
into
in
xor
lock
cld
iret
cmp
loopne
testb
in
mov
sar
xchg
cmp
in
aad
xlat
rcl
ror
lock
cli
rcr
cmp
in
into
nop
icebp
fmulp
xor
in
loopne
ror
icebp
cmc
cmp
std
ret
cli
loope
in
shl
ljmp
fstl
out
in
leave
icebp
rcr
cmc
rcl
loopne
sarl
fucomp
fprem1
out
or
mov
fists
cmc
xor
cld
test
fcmovu
hlt
repz
ret
in
in
test
loopne
shl
icebp
into
enter
xor
cli
hlt
test
loope
loop
fsubrp
dec
fdivr
and
mov
rcl
jmp
ss
rcr
xor
sub
faddp
cli
test
stc
loop
leave
xchg
enter
out
into
xor
sti
fucomi
int3
int3
sti
sarl
fdivrs
cmp
inc
jecxz
fcmove
mov
jecxz
lock
xchg
fsubrp
xor
fcmovnbe
in
cmp
out
int3
loop
int
std
ret
adc
cmc
lret
jmp
loop
std
imul
jmp
cmp
xor
leave
lret
aad
rcr
fidivs
test
cld
out
in
sbb
fcmovu
into
xchg
in
ret
shr
fsub
fmulp
dec
loop
addb
stc
orb
icebp
out
cmp
cld
ljmp
into
into
shl
les
fdivr
xchg
sub
rol
int
clc
shll
cmp
sar
out
xor
xlat
ret
cmc
in
mov
mov
in
out
jmp
cmp
in
jecxz
cmp
cld
loope
jecxz
ret
xchg
sub
sti
into
in
clc
fmul
enter
fld
jmp
out
leave
xchg
into
cli
xchg
loopne
hlt
xor
hlt
fcmovne
lret
ret
cld
in
cld
icebp
jecxz
mov
hlt
xor
out
enter
out
ret
cli
rcl
stc
xchg
out
int
std
sar
into
into
xor
in
aad
int3
shr
push
loope
iret
jmp
flds
leave
in
fucomip
lret
mov
shl
fcmovne
out
not
fcmove
std
cmp
cmp
fnsetpm(287
mov
loope
repnz
xor
aad
testb
sar
in
out
leave
mov
enter
fcmovnu
aaa
out
aam
lock
adc
in
enter
loop
test
ljmp
cmp
rcl
int3
fucomp
int
hlt
leave
ret
mov
jmp
ljmp
aam
lock
fadd
mov
fxch
loope
fiaddl
loope
xlat
sub
in
cmp
repnz
aas
and
test
lock
hlt
fmull
repz
xchg
not
iret
ljmp
repz
hlt
incl
aam
cli
roll
lret
xor
hlt
sub
int
repz
cmc
fdiv
aas
cmp
fincstp
lret
fmul
leave
test
fucom
nop
lock
xlat
cmc
cmp
xor
leave
in
lock
icebp
cmp
sti
xchg
lret
test
fcmovnu
cli
lock
in
loopne
ljmp
fdivr
ss
into
loopne
ds
stc
hlt
orb
in
in
icebp
ds
shl
mov
add
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
dec
dec
rorl
cmpb
add
aas
fcmovnb
cmc
loop
in
enter
stc
mov
ljmp
xlat
cmc
repz
jmp
aad
xor
lock
cli
cld
fmul
jmp
lret
xchg
in
sub
les
fcmovbe
cmp
in
in
ret
call
sbb
in
jmp
ret
lret
jmp
fcomip
aas
aas
cmc
rcr
fsubr
jmp
fld
mov
cld
mov
clc
aaa
jecxz
int3
idivb
fcmovb
incb
test
call
int
loopne
mov
fdivp
in
loopne
mul
call
fnstcw
sar
mov
mov
loope
fdivr
out
sar
in
vaddsubpd
leave
into
cld
loopne
repnz
stc
jmp
fildl
and
ret
lret
cmp
sub
sti
xchg
mul
lds
in
ljmp
ror
aaa
ss
add
loop
mov
lret
fcomi
lock
repnz
sub
leave
aad
das
xlat
in
int3
clc
call
std
div
mul
jmp
out
lock
icebp
loopne
sar
cmp
cs
in
cmp
cmp
out
loope
mov
shl
int3
ss
cmp
fxch
clc
into
cmp
enter
loop
ret
out
rcl
aad
rol
repnz
xor
loopne,pt
icebp
loopne
cmpl
in
jmp
out
cld
out
cmc
fsubrp
fdivp
call
int
sti
cmp
lret
rol
cmp
mov
dec
loope
jecxz
fdiv
aam
cmc
rcl
stc
fmulp
fcmove
idiv
test
cmp
jmp
xchg
xchg
jmp
shl
lret
iret
out
xor
in
cmp
out
int
xlat
cmp
cmc
fninit
addb
jecxz
xchg
repnz
ret
into
repnz
stc
out
call
sti
clc
jmp
fsubp
xchg
loopne
in
jmp
aad
jecxz
jmp
jmp
cmp
std
leave
aad
mov
jecxz
mov
loop
shl
sarb
shl
out
fnsave
xor
icebp
loope
add
lret
out
xchg
in
shl
in
jecxz
ss
stc
out
into
shl
fcompp
shr
decl
jmp
clc
mov
into
iret
int
cmc
lret
icebp
ror
out
cld
icebp
sar
aam
xlat
incb
fildl
in
int
in
in
out
xor
cmp
fcomi
test
enter
mov
std
test
and
icebp
mul
xor
neg
lret
sti
std
add
xbegin
loop
ret
nop
lock
fadd
lret
int3
repz
loope
rcr
in
sti
clc
rol
jmp
xchg
xchg
fldz
icebp
out
repnz
shlb
lret
aad
cmp
jmp
fcomp
ffreep
out
ror
cld
pop
mov
xchg
out
shlb
vpmullw
iret
aas
xor
loop
ffree
jecxz
lock
int
jmp
clc
cli
sti
repz
repz
in
ret
out
mov
jecxz
fisttpl
xor
rol
out
out
push
ret
stc
jecxz
loopne
into
xchg
cmc
call
jmp
cli
xlat
jmp
cmp
fdivrl
sar
cli
rcr
int
in
fiadds
xlat
xlat
out
imul
xor
cmp
hlt
cld
cmp
cli
sti
shl
cmc
in
xchg
lock
fnop
cmp
xor
std
fidivrs
int3
out
ffreep
cli
cmp
movl
lock
shr
in
div
rcl
out
fdivr
repz
out
xor
idiv
les
incl
xor
cmc
xor
sti
aad
cmc
xor
aam
cmp
cmp
out
xacquire
jmp
loope
shlb
int3
shlb
icebp
enter
fsubr
xlat
rcr
in
stc
shl
lret
inc
or
mov
ret
in
in
call
out
not
repnz
shl
jecxz
jmp
xchg
inc
std
fsubrp
in
jecxz
xor
fdivs
neg
cmp
div
into
loopne
sbb
in
decb
std
mov
mov
sub
leave
cld
out
ror
aaa
rcr
fiaddl
mul
icebp
mov
repz
fisttpll
in
in
cmp
sti
aad
and
call
sti
lock
ljmp
lock
shl
in
sar
rol
into
clc
fchs
mov
cli
cld
mov
xchg
out
rcl
ret
cmc
icebp
in
movl
and
movl
movl
movl
or
jmp
rcl
aad
aad
fstp
sub
cld
adc
dec
hlt
ret
jl
add
lret
shr
test
enter
aam
leave
fucomip
repnz
xlat
out
call
out
test
icebp
adc
in
incl
xor
cs
das
stc
xor
test
ret
std
clc
mov
test
fadd
mov
jecxz
rcl
rcl
ror
cmp
cmpl
ffree
fcmovnb
stc
movl
out
into
icebp
xor
in
out
fidivl
ror
iret
into
test
faddl
lret
xlat
int
dec
xchg
roll
fdivs
cmp
xlat
cmp
adc
jecxz
cld
rol
loop
mov
out
test
roll
cs
aam
into
lret
shr
ret
cld
cmp
mov
xchg
out
lret
xchg
shll
int
hlt
cli
fst
fst
in
jecxz
mov
aas
loop
jmp
ljmp
neg
div
fdivr
hlt
cmp
sbb
ljmp
lock
fucomp
xor
mul
jmp
repz
aad
xchg
jecxz
sti
in
sbb
in
xor
icebp
divl
lret
add
fsub
xchg
out
rcr
aam
call
repnz
out
clc
into
rol
std
neg
xchg
nop
lock
call
repnz
int
rcl
iret
int3
sarb
mov
cmp
ror
test
xchg
mov
in
ret
int
fcom
int
cli
in
cmc
out
fmull
iret
call
shll
fnstsw
cmc
iret
xor
fdiv
xlat
not
jmp
mov
cld
enter
jmp
out
cmc
in
out
fcmovbe
fdiv
loope
std
shl
icebp
lock
std
mov
in
jmp
xlat
fcmovu
cli
std
aam
div
lock
out
inc
lret
fldl
aam
enter
int3
icebp
repnz
shl
out
lret
out
mov
mov
loop
in
in
out
fucomi
std
cld
rcr
ljmp
rcr
jmp
mov
out
mov
mov
lock
xor
ljmp
test
mov
test
in
call
out
lds
sub
imul
hlt
fdivrp
cmp
iret
les
test
leave
test
test
in
out
xor
sti
imul
ljmp
rcl
jmp
lret
fistl
fdivp
int
in
jmp
jmp
fcmovnbe
loopne
mul
aas
in
iret
mov
mov
aaa
cmp
cmp
imul
cmp
int
aas
clc
int
loopne
loopne,pt
out
lea
out
cs
out
int3
jmp
ss
lret
xchg
hlt
ds
fisttpll
shl
ret
xlat
cmc
fcomip
int3
enter
aad
stc
test
mov
xchg
nop
cmc
xor
cmp
loop
xor
lock
jecxz
loop
cmp
cld
sbb
stc
cld
jecxz
call
ror
out
out
enter
cld
aad
test
repz
std
cmp
out
fimull
decl
xor
cmp
repnz
fidivrl
ffreep
ret
sub
aad
in
fldl
mov
lock
cs
fldt
repz
cli
rolb
hlt
mov
out
addb
lret
sti
stc
fdivs
cmp
loopne
lock
cmc
rolb
testb
lock
shlb
xor
shr
sti
div
out
mul
aaa
adc
rorb
or
rol
ret
out
icebp
lock
rcr
lock
mov
out
cld
adcb
ret
sarl
loope
loope
in
in
in
jecxz
cld
cld
mov
sub
div
sti
repnz
int3
into
int
test
out
std
out
cmc
mov
fdivr
mov
into
xor
cli
sar
sarl
fdiv
loop
fadds
test
mov
loope
cs
xor
int3
lret
cmp
addb
in
cld
sub
sbb
lret
fcmovbe
aam
leave
jmp
cmc
std
into
loope
hlt
stc
movb
loop
nop
divl
int
sub
pushl
out
xlat
idivl
shl
xchg
rolb
loop
cmc
hlt
cs
inc
int3
and
inc
fs
add
cmp
add
test
add
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
ss
and
jl
call
rolb
int3
repz
out
ret
stc
aam
mov
loop
in
stc
loope
out
aaa
out
aas
cmc
in
fadds
cmp
jmp
jmp
test
fcomi
xchg
enter
std
fld
sbb
std
in
aas
neg
jmp
fiaddl
mov
int
int
div
cmp
hlt
repz
xlat
aas
cmc
std
out
and
in
loope
xlat
out
loope
xchg
cmp
xor
lret
out
call
ret
out
test
in
leave
lock
lock
out
ss
xor
cmp
cli
in
call
fst
call
into
loop
out
f2xm1
neg
sbb
xlat
aam
xchg
repz
in
in
cld
cld
orb
out
lret
sti
shll
ljmp
repnz
out
lock
loopne
aam
neg
jmp
lret
rol
clc
hlt
icebp
out
in
sar
xchg
sti
out
fstp
roll
aad
lret
out
leave
cmp
bnd
loop
std
xchg
ljmp
jmp
cli
cmp
sarl
lock
call
leave
jecxz
fildl
das
aam
not
fmul
cmp
xor
cmp
out
faddl
addb
jmp
repz
xor
cld
cli
repnz
xchg
in
xlat
mov
nop
rolb
loopne
aaa
aam
fcmovu
loope
icebp
adc
out
ljmp
xchg
jmp
fldcw
out
ss
xor
fsub
mov
mov
int3
in
aad
xor
jmp
lret
leave
xlat
adc
fdivrp
in
imul
incb
out
xchg
loopne
xor
xor
int
stc
lret
or
jmp
fdivp
test
fsubrp
in
cli
fucomip
xchg
add
repnz
enter
cmp
in
fidivrs
fcmovnb
jmp
sub
fnstcw
lret
mov
fsub
call
enter
icebp
fadd
xor
aas
cld
roll
leave
ret
xchg
int
mov
ret
xlat
out
aad
enter
xchg
testl
in
xchg
hlt
out
ss
lret
imul
std
std
call
ffree
in
mov
fiadds
call
fcomp
out
jmp
in
cmc
test
test
cmp
pause
test
xlat
rcl
cmc
fnstcw
jecxz
cmp
lret
out
lds
out
xor
ljmp
int3
fxch
std
test
lret
xchg
test
ds
ljmp
fcmovbe
sar
xor
vpaddb
rcl
rcl
lret
cmp
cld
cld
int3
fidivrl
cmc
cli
in
cli
fucomi
out
ret
jmp
sub
xchg
jmp
in
call
stc
clc
repnz
ss
out
in
xchg
rcr
clc
out
dec
xchg
fadd
loope
ret
enter
out
in
in
shl
cmc
xchg
loope
not
ljmp
subb
in
fnstenv
aad
sti
rolb
std
in
enter
int
in
xchg
xchg
xor
in
int
icebp
rol
sti
clc
cmp
out
test
test
in
mov
repz
xor
leave
out
shl
cmp
iret
fmulp
mul
hlt
cmp
mov
in
ljmp
sar
sbb
cmp
loopne
xchg
jmp
into
mov
test
xor
ljmp
leave
std
cld
cmpb
in
loop
jmp
int
mov
in
mov
int
xor
cmp
out
stc
sti
mov
cli
test
fdiv
cs
fdivs
fcmovnb
cmp
cld
hlt
sti
shl
fdivrp
loop
ljmp
test
loope
das
aaa
lret
out
leave
icebp
ds
int3
in
iret
cmp
xlat
test
loop
int3
fldl2t
sti
rorb
aad
fcomp
xor
rcr
rolb
mov
lret
lock
out
cmp
roll
shl
clc
out
clc
std
ljmp
ret
in
lret
not
fmul
clc
cmp
iret
fdivrp
repnz
cli
in
incl
test
push
fs
add
cmc
add
add
rol
xlat
vpaddusw
xchg
jb
push
jo
adc
pop
add
int
out
cli
fnstsw
repz
clc
out
idivb
repnz
int
loopne
loope
hlt
xor
rcr
jecxz
cmc
ljmp
cmc
aam
cmp
fiadds
loop
cmc
enter
lret
int
cmp
ffreep
loop
loop
int
loope
div
ret
in
ljmp
sti
fldl
sti
aam
in
or
or
mov
cmp
fcmovbe
rcl
cli
cmp
in
call
ljmp
aad
in
ror
cli
fnsave
fldl
fcom
call
out
in
and
hlt
lret
xor
cli
icebp
repnz
rol
lock
fisttpl
out
in
jecxz
fcomi
rol
fsubp
leave
cmp
test
cli
rol
clc
int
ljmp
shr
sub
test
fucomp
lret
rcr
lock
xor
rol
xbegin
repz
hlt
in
loopne
jmp
std
shr
repnz
cmp
ret
call
out
mov
loope
lret
out
out
aad
aam
fidivrl
aam
stc
xor
ds
std
cmp
rcl
aaa
int
cmp
neg
shl
loop
rcr
ret
loope
mov
mov
sub
out
lret
jecxz
ret
repnz
xor
fdiv
fidivrs
clc
addl
fimuls
rcl
jecxz
in
jmp
cld
xor
rol
aas
test
loop
std
stc
decb
mul
shl
ret
aad
call
int3
addl
out
xlat
fdivr
mov
xor
iret
out
xlat
cmp
jecxz
into
ss
repz
mov
addb
loop
sub
rcl
iret
cli
sar
cmp
icebp
in
aad
repz
mov
loopne
test
repz
lock
enter
repnz
int3
add
jmp
cmp
mov
int
rol
out
rcl
jmp
std
iret
fdivp
fcom
out
in
loope
out
out
clc
test
cmc
repz
rcl
rol
cmc
enter
iret
iret
fnstcw
ret
hlt
out
in
leave
decb
movl
int
loope
fdivr
add
fdivp
rorl
cld
cmp
fst
cmc
xor
aam
shlb
fcom
xor
repnz
cmp
fdivrp
std
sti
or
int
mov
xchg
xlat
into
jmp
cs
fcmovnb
std
fcmovbe
xor
adc
mov
enter
int
int
test
jecxz
ds
mov
cmp
std
in
cld
out
int3
ret
icebp
not
hlt
fincstp
int
fcomi
shr
fcomp
cmp
clc
aam
testb
xor
cld
out
repz
xlat
in
roll
fsubp
or
test
hlt
xor
rcl
out
fldpi
sarl
jecxz
out
int
in
icebp
out
jmp
ss
divb
xlat
sarb
into
cmp
not
sbb
repnz
enter
in
xchg
aad
enter
repz
ljmp
rcl
leave
leave
stc
addl
int3
rol
into
aad
xor
leave
ss
sarb
add
lock
jmp
int3
cmp
in
lock
in
xor
cld
cmp
lock
cmc
fnstcw
mov
leave
mov
std
test
lret
idivl
aam
jmp
repz
mov
sub
int3
iret
jmp
ror
lret
enter
fxch
clc
lret
jecxz
cmp
aas
clc
neg
aam
neg
loope
loop
repz
fst
cmp
int3
repnz
stc
loope
out
xchg
jmp
inc
loop
in
test
cmc
fxtract
sub
cmc
int3
int3
cmp
sarb
cld
out
xchg
sar
fsub
cli
out
enter
mov
int3
xor
int3
repnz
leave
in
int
call
sti
bnd
repnz
and
cld
filds
aaa
loop
clc
cmc
loope
sti
sar
out
jmp
sbb
loop
mov
icebp
int3
cmc
lret
shr
cmc
out
icebp
ror
std
iret
fmulp
sti
loopne
adc
cli
mov
xchg
imul
repnz
aad
call
hlt
ds
fdivrp
rcl
mov
cmp
std
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
jge
cwtl
pop
xchg
jle
pop
add
mov
repz
xor
xor
cmp
stc
icebp
hlt
fdivp
cli
icebp
cli
shl
fprem1
call
test
xchg
out
shl
lock
fxch
in
out
sarb
xchg
hlt
test
into
in
clc
incl
das
ret
hlt
out
cmp
stc
ljmp
rcl
into
out
adc
out
leave
rcl
clc
fcmovbe
std
shlb
call
rcl
sarl
addb
test
fisttps
leave
int
aam
in
clc
sti
fcmovu
incl
aam
loope
jmp
xchg
xor
int3
fnstenv
lret
jmp
repz
cmp
sbb
jmp
in
loop
jecxz
fisttps
repz
clc
fdivr
hlt
leave
stc
loope
int3
std
test
sar
in
fld
std
lret
fmul
ficoml
loopne
cmp
hlt
out
xor
sti
int3
loopne
adc
jecxz
fdivrp
in
icebp
cli
shr
jecxz
into
leave
rcl
into
in
in
clc
aas
idivb
in
cld
repnz
rorl
mov
xchg
repnz
shr
ss
lock
rcl
clc
lock
into
not
aam
fsubp
loop
leave
loopne
lret
mov
xor
jmp
call
cmp
into
fcomp
cmp
sti
test
ror
out
cmp
repnz
lret
aaa
add
clc
out
neg
mov
in
sub
fld
lock
lock
aaa
adc
loope
idiv
leave
mov
jecxz
aad
aad
in
cmp
in
leave
fcomp
iret
out
out
repz
mov
out
xor
xor
stc
testl
ret
popl
in
imul
not
into
aam
cmp
fcmovnbe
cmpl
fndisi(8087
in
xchg
popl
into
in
ret
out
cmp
cmp
out
stc
xor
mov
mov
mov
repz
into
aam
int
fmul
lret
rol
hlt
rcl
xlat
cli
std
loop
jmp
cli
rolb
not
into
std
jmp
std
cmp
cmp
rol
test
out
shl
out
xchg
ret
shl
jmp
fxam
out
aam
lret
xor
hlt
hlt
aas
loope
ret
and
loopne
xchg
out
int3
fadd
repz
shl
shl
cmp
cmc
sti
sbb
fisttpl
lret
lea
jmp
imulb
repz
imul
shr
mul
aad
stc
xor
enter
int
out
lret
leave
icebp
loop
hlt
aad
divb
fcmovnu
sti
repnz
xlat
cmp
enter
repz
loope
icebp
xor
std
lret
cmp
loope
cmp
rol
repnz
xor
clc
lret
out
ds
enter
stc
rcl
cmp
cmp
fisttpl
and
hlt
add
out
cmc
xor
icebp
int3
xor
fstp
std
mov
cld
test
mov
mov
xor
lret
cld
out
fbstp
cmp
cli
push
or
roll
int3
out
ficoml
lock
lock
aaa
mov
fmul
iret
stc
fdivr
jmp
faddl
lock
call
std
sbb
clc
test
aam
hlt
ret
lret
loopne
fsub
icebp
rcl
jecxz
call
xor
sarb
not
into
sar
sbb
std
cld
out
loopne
fdivrp
repnz
in
repz
xor
loope
repnz
rolb
loopne
mov
in
mov
ret
xor
ljmp
cmp
ffree
icebp
ds
shr
cmp
mov
jmp
loope
out
les
hlt
call
fdiv
cmp
aas
clc
out
loopne
fcomp
int3
into
lret
xchg
out
in
cmp
aam
xor
ffreep
out
out
leave
jmp
out
enter
call
loope
aam
xlat
repnz
call
test
stc
movb
clc
mov
out
test
cld
aaa
fld
lock
mul
in
rcl
sar
out
std
aam
stc
mov
fstp
std
iret
xchg
fst
xchg
out
xor
lock
enter
cmp
repnz
and
cld
out
lret
icebp
fsubrp
shr
repnz
stc
out
out
enter
out
cmp
jmp
out
test
fimuls
xchg
rcl
aaa
rcl
lret
clc
cld
call
sar
out
lds
inc
loope
orb
xchg
fs
add
fs
add
rol
add
inc
jl
add
cli
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
and
mov
lcall
fisttps
cmc
div
out
int
ss
fidivs
aas
into
fstpt
cld
xchg
fisttps
lock
mov
sub
lret
out
cmp
vpsubsb
cld
call
cmp
loope
not
mov
jmp
orl
shl
lret
push
cmpl
div
rcl
test
cmc
mov
cld
adc
cld
jmp
ret
loop
shl
cld
int
cmc
loope
ror
std
loope
mov
stc
xchg
in
lret
shl
ret
aam
hlt
aas
aad
icebp
fdivrl
fstpt
out
rcl
in
loop
mov
addl
leave
into
ljmp
fcomi
ds
jmp
cli
xchg
lret
cmc
mov
in
test
call
enter
divl
lret
sarl
fnstsw
sti
lds
ret
call
xchg
cld
ret
loop
in
call
clc
int
xor
lds
out
mov
fiaddl
out
int3
fdivs
sti
cmp
shl
aas
rcl
fst
out
clc
jecxz
sti
cld
adcl
aam
repz
stc
sti
sar
cmc
loopne
into
and
xlat
ffree
jecxz
rorl
aad
lock
sarl
stc
in
ffree
stc
jmp
call
cld
rcll
lret
enter
stc
call
cld
aaa
rcr
flds
xchg
test
in
shl
xchg
hlt
in
jmp
cmpl
in
aas
cmp
in
jecxz
addl
aad
sarb
out
fdivrs
shl
test
fucomi
fld
out
std
mov
xlat
repz
in
jmp
aad
clc
ds
shl
cld
faddl
out
orb
into
out
xlat
rcr
xlat
in
out
lret
icebp
and
cmp
shl
xchg
fsubr
xabort
aam
fcom
out
ret
fiaddl
clc
cmp
fsubr
fucomip
shl
ror
out
test
cmp
xor
cmp
clc
cmp
mov
xchg
in
ret
iret
cmp
roll
mov
fincstp
stc
fildl
lret
ret
shl
lret
shrb
lret
not
fidivrs
cmp
loopne
cmp
lock
xchg
in
in
lret
lret
lret
ds
into
fstpt
rorl
jmp
jmp
out
mov
ljmp
fadds
addl
rol
xor
out
ss
in
repnz
rolb
rcr
clc
out
into
mov
xchg
mov
xor
xlat
enter
in
loopne
mov
xchg
ret
std
iret
test
lret
mov
jmp
into
in
fucomi
clc
jecxz
ljmp
std
dec
xchg
fucomi
loop
in
in
sub
in
fcmovb
ljmp
loop
hlt
shl
enter
test
mov
hlt
aad
in
jmp
into
fcmovnbe
in
out
rolb
mov
cli
mov
out
xor
cmp
cmp
aam
aas
aad
clc
out
loopne
mov
mov
and
in
out
in
icebp
aaa
cmp
rol
loopne
aad
cmp
test
mov
and
test
loope
mov
hlt
jmp
in
ss
cmc
mul
cmc
out
fdivrp
fdivr
into
mov
aad
iret
out
xor
ljmp
cli
cmp
fldl
in
cli
mov
cld
xchg
cs
out
out
leave
fxch
int3
fiaddl
fsubp
shl
in
in
orl
stc
fdivl
xor
repnz
fcomi
jmp
lock
xor
cmc
in
sti
cmp
fidivrl
shl
test
ret
fcmovb
cli
test
divb
ljmp
not
sar
loop
cli
lret
call
ljmp
aad
fdiv
shl
cmp
fst
ds
ret
adc
cmp
into
test
cli
fdivr
call
xor
int3
ss
xlat
loopne
fdivrp
loopne
sub
enter
test
xchg
iret
ljmp
into
clc
out
cmp
cmp
in
rcl
lds
loope
ficoms
xchg
iret
out
sti
xor
cmc
in
repz
repz
adc
std
cld
leave
jmp
clc
and
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
mov
pop
add
popl
orl
sarb
ljmp
xlat
repz
mov
test
repnz
cmp
lret
ljmp
ret
addb
mov
lret
ror
cli
xor
into
fdivr
in
sarl
sti
cmp
cld
call
int
call
cmp
cld
into
cli
jecxz
std
rcl
sar
test
cld
fucom
into
mov
icebp
ljmp
rcr
in
xor
in
loop
int3
adc
shl
ffree
test
fldl2t
out
loop
xor
xor
in
ljmp
hlt
fstpt
lock
ror
ror
jecxz
in
xchg
ret
fxch
jmp
jmp
shr
cli
cmp
fsub
repz
ds
ret
cmc
loopne
ds
sarb
loopne
aas
aaa
sti
out
mov
in
and
mov
mov
loopne
rol
xor
clc
cmc
int3
test
sti
faddp
lds
fstl
out
jecxz
fmul
fcmovbe
call
sub
loop
shl
test
lret
xchg
lret
lret
hlt
sub
cli
ss
in
clc
fidivrs
aas
fiaddl
loop
loope
mov
fsubp
aaa
cmc
xor
fcomi
rcl
ror
ss
faddl
out
cld
test
loop
out
in
into
cmp
rcr
stc
ss
fiadds
in
cli
xchg
mov
fxch
out
stc
cld
jmp
cmp
cmp
cmp
sti
iret
adc
lret
out
orl
ret
out
std
std
jmp
mul
test
out
fcmovbe
out
in
lret
fmul
ror
aam
fld
loopne
ret
ss
fmulp
sar
hlt
jmp
lret
in
movl
ljmp
cmp
divl
test
jmp
test
lret
xorl
jmp
aaa
repz
xlat
aas
in
icebp
fdivr
add
mov
aam
out
in
rolb
ret
ret
int3
std
shl
int
into
rcr
adc
std
loopne
cld
enter
cli
xchg
repnz
in
out
loop
xor
aas
cmp
ror
cmpl
aad
cmp
lea
aad
ljmp
cmp
clc
in
neg
mov
loopne
mov
fcmovu
ljmp
iret
aam
xlat
cmp
sar
faddl
vpaddsw
mov
loopne
fisttpll
jmp
xor
in
sarb
sarb
aam
cmp
ret
in
out
mov
out
pop
loopne
ret
cmp
int3
cmp
icebp
cmc
cmc
cmp
fcmovnbe
aas
jecxz
fadd
mov
in
mov
repnz
xor
out
out
enter
aas
test
jecxz
sti
jmp
nop
rolb
hlt
fcom
xor
out
aad
clc
cli
sar
test
div
rcl
cmc
mov
jmp
lock
rcl
cmp
repz
cmp
cld
fldz
cmp
xlat
jmp
out
imul
fcom
xchg
hlt
out
xor
test
sar
repz
aad
cld
adc
test
out
fcmove
in
fsubrp
out
ljmp
idivb
xlat
cmp
cmc
ret
test
rolb
int
mov
cld
jecxz
into
xlat
in
out
lock
add
xchg
xlat
mov
mov
ror
int
lret
clc
roll
fcmovnu
fsubp
in
rcr
jmp
sub
fucomi
fdivs
int
lret
out
jmp
fdiv
aas
ret
sar
fildl
lret
xchg
in
int3
jecxz
in
clc
repnz
in
ss
ss
lock
cld
mov
movl
loope
out
fnstenv
into
out
cmp
lret
cli
xlat
cld
ror
sti
aam
fmul
xchg
mov
jmp
xor
cmc
xor
sarl
into
loop
adc
lret
fcmovu
cli
in
addb
cmc
in
divb
sti
sti
cmp
sub
sti
lret
loopne
xchg
ret
sub
cmp
xlat
in
sti
sti
xor
into
not
add
fcmove
call
xchg
out
out
in
enter
repnz
lock
sar
cld
addl
mov
icebp
xchg
shlb
lret
cmp
aam
lock
int3
ds
std
ret
shrb
cli
adc
mov
jmp
leave
aam
rcl
aam
insb
pop
mov
jl
add
cmc
sti
mov
test
in
xor
inc
repz
loop
fmulp
in
xchg
mov
cs
cmp
fucomip
cli
fidivrl
aad
fcmovnu
fdivp
repnz
rcr
fmulp
fdivr
lret
sub
call
idiv
xor
out
shl
aas
sbb
out
div
jmp
fimuls
loope
out
xor
repz
cmp
aad
cmp
std
ret
mov
lock
loop
loopne
aas
shr
ljmp
xor
loopne
fdiv
roll
cld
in
nop
call
in
ror
out
cmp
ds
out
aaa
cld
jecxz
std
out
jmp
xchg
repz
enter
cmp
out
cmp
icebp
fsubp
test
call
sti
mov
xchg
in
iret
lret
icebp
call
frndint
fucomp
aas
cmc
clc
in
push
mov
enter
lret
fucomip
shl
shl
ret
sar
fdiv
in
fmul
imul
loopne
ret
xchg
sbb
cld
fisttpll
rcl
cmp
out
aam
idivl
fstpt
ds
shl
mov
in
in
or
out
xchg
shl
in
call
neg
aas
sar
repnz
test
xchg
ror
shl
bnd
sub
fldz
not
lret
cmp
jecxz
std
icebp
sub
mov
xlat
in
and
lock
loope
in
in
in
fdivrl
hlt
iret
idivl
stc
in
xor
fdivp
call
cmc
in
cmc
out
xor
aam
cmp
enter
incb
std
out
fcmove
nop
xchg
lock
das
call
cmp
fidivs
cmc
cmp
iret
clc
les
in
fisttps
repnz
out
aam
rcl
or
fidivrl
cmp
mov
std
lret
mov
out
std
adc
cld
xor
int3
repz
divl
cmp
aas
cmp
loopne
aad
aad
aad
ffree
sti
out
sbb
loopne
cli
ss
ljmp
aam
adc
enter
lret
mov
fimuls
aaa
xor
int3
ror
xlat
aaa
ss
iret
out
icebp
lock
mov
loope
enter
mov
lret
loope
loop
std
int3
xlat
cld
aas
aam
xchg
xlat
out
lret
call
into
out
aad
rcr
sarb
shl
fst
shl
dec
in
fldl
incb
sub
lret
aaa
aam
xlat
fstp
loopne
test
fiaddl
fcmove
mov
cmc
enter
shl
jmp
leave
fdivp
shl
fcomip
roll
testl
out
lock
cmp
shl
cmc
loopne
repnz
cmp
rcr
fcmovne
leave
fnsetpm(287
lret
mov
jmp
cmp
xor
aas
lret
cmp
cmp
in
into
fcmovne
cli
cmp
std
sub
sti
mov
iret
xor
xor
xlat
xor
neg
fucomp
iret
cmp
ret
stc
aad
ljmp
adc
test
shr
rol
aaa
in
clc
cmp
jmp
rcl
loope
icebp
leave
ljmp
repz
xor
jmp
cli
aam
cmp
cmp
cmc
hlt
imul
jecxz
lea
mov
aaa
les
xor
idivb
cmp
xchg
repz
std
into
mov
fcomip
icebp
out
xor
xor
cmp
cld
loope
aas
std
xlat
vpmullw
in
mov
xchg
fdiv
jmp
lock
neg
enter
fstpt
shl
into
roll
mov
cld
lock
cmc
aad
in
repnz
lret
into
fcomi
rol
jecxz
lds
ret
ret
cli
xchg
ljmp
aad
xor
aad
cld
out
jmp
stc
cmp
icebp
test
clc
rorl
lret
lret
orb
in
lret
out
fistpll
not
not
fnstsw
ret
repz
add
lret
fcmovbe
mov
lds
cmp
fadd
int3
loop
jecxz
out
fstp
leave
ljmp
fcomi
repnz
xor
loope
xchg
out
xchg
fists
cmp
cld
in
shr
int3
xlat
aad
aad
inc
ret
hlt
call
mov
xchg
jmp
xor
into
enter
out
ds
div
repnz
jmp
fcmove
filds
fsubr
xor
shr
lret
fst
fcmovb
ljmp
rol
add
cmc
imul
add
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
rolb
ljmp
xchg
xor
xor
xor
out
aad
sarl
rcl
lock
out
aad
imul
in
int3
loop
cld
sub
idivl
lock
shl
idiv
fdiv
in
cli
fcomi
test
lret
xor
lret
repnz
cli
loope
fiaddl
enter
fdivp
xchg
bnd
hlt
out
lret
fxch
hlt
aas
fdivp
fiadds
add
adc
xor
ret
jmp
ret
sarl
aam
adc
in
fimull
test
test
fcmovnbe
cld
xchg
lock
cmc
jmp
jecxz
aam
not
xchg
cli
mov
mov
dec
xchg
jecxz
fcmovne
jmp
hlt
std
xlat
orb
xor
int
xlat
cmp
sti
repnz
lock
xor
loope
aad
mov
mov
fstl
fisubrs
icebp
jecxz
aam
fnsave
hlt
and
iret
xchg
cld
and
fiaddl
mov
enter
fdivp
xor
fcmovbe
test
loop
fildl
ljmp
xor
shr
cmp
ljmp
out
lock
ljmp
cli
out
adcb
in
fstp
cmc
int3
out
xor
fadds
or
aam
xchg
mov
iret
test
mov
xor
int3
ljmp
test
ret
enter
rcll
xor
int
cmc
hlt
clc
into
idiv
cmp
in
clc
test
out
iret
lret
call
xor
jmp
std
jmp
ds
out
shl
stc
in
cmp
mov
cs
repz
out
das
cmp
int
cmp
clc
roll
ljmp
test
faddl
hlt
enter
out
int
rolb
mov
out
loopne
test
lret
xchg
lock
sub
fldl2t
fcmovbe
ret
int
jecxz
cmc
mul
rorb
mov
filds
rcl
int3
fcomi
aam
jmp
sti
aad
aas
xlat
aam
call
xchg
cmp
xor
cmp
aam
cmp
jmp
mov
iret
xchg
ss
ret
out
int3
lret
cmp
fnstcw
loope
cmp
aad
ljmp
aad
aaa
hlt
vpinsrw
ds
rcl
and
rcl
lret
leave
fdiv
lret
mov
aad
int3
rcl
rol
out
cmp
fcmovnu
enter
fld
std
mov
popl
loopne
call
lock
into
sti
leave
cmp
fcmovnbe
aad
test
faddl
in
loop
sub
iret
sti
cmp
in
test
loop
mov
iret
mov
divl
out
cmp
ds
not
repz
shl
aad
mov
ret
out
call
icebp
xor
loop
sti
int
aam
ljmp
call
stc
lea
lret
xor
cmp
cmp
rcr
clc
std
fsub
aad
xlat
incb
or
xchg
shll
aam
xor
repnz
sarl
fcomip
add
aam
out
aad
ret
mov
xchg
loop
loopne
jmp
int
hlt
sar
repnz
cmp
cmp
sar
mov
hlt
sar
mov
in
fimuls
in
in
aam
lock
stc
sar
sarb
out
cmp
inc
addb
icebp
les
hlt
div
xor
repz
cld
ret
call
nop
xchg
sti
jmp
hlt
in
hlt
out
sti
repz
repnz
lret
sti
repnz
ljmp
fcmove
out
aam
das
lock
lock
cli
iret
divl
ror
std
out
fcmovnb
rol
stc
test
out
lret
jecxz
out
xor
cmp
sti
clc
fdecstp
lret
sar
out
loopne
repz
jmp
xchg
out
jecxz
xchg
cld
call
xor
cld
fistpll
out
shr
fsub
cmc
repz
cmp
cld
fsub
and
int3
xor
shr
lock
ror
loope
in
shl
jecxz
repnz
stc
loope
out
int3
fsubr
mov
in
lret
xlat
std
fdivr
enter
addl
cmc
sub
enter
roll
repz
out
cmp
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
xchg
mov
inc
add
cmp
mov
lret
incl
lret
into
loopne
xor
aad
int3
xlat
aaa
shr
test
roll
call
sub
sti
ljmp
add
mov
clc
std
ret
loop
xor
in
aad
ss
cmpl
cmp
call
icebp
shl
int3
in
in
xlat
aam
jmp
enter
repnz
ljmp
cmp
test
in
ret
sub
cmp
cmp
rcr
cmc
aas
mov
cld
ror
jecxz
in
in
repnz
out
aaa
das
xlat
ljmp
lock
xlat
mov
aas
loopne
cli
iret
out
repz
stc
jmp
lret
idiv
cmp
lret
in
lock
aas
ret
or
jmp
loop
call
in
into
hlt
in
cmp
leave
lret
ret
repz
loope
jmp
loope
lret
into
int
call
cmp
ljmp
clc
ret
lret
int
sbb
cli
or
lea
leave
out
leave
jmp
cmp
xor
sar
ret
test
in
repz
mov
mov
xor
lret
imul
fdivr
stc
std
hlt
fsubp
cli
loope
cmp
lea
xchg
xchg
xor
out
lret
aad
repnz
mov
filds
int
loop
fdivl
jmp
sti
leave
int3
cmp
jmp
loope
repz
clc
cld
xchg
fisttpl
mov
call
out
aaa
sti
clc
fdivr
out
fdivrl
fsubp
fnsetpm(287
roll
sti
cli
lret
rolb
test
in
cmp
iret
rol
ret
mov
lret
cld
in
loopne
lret
fdivr
repz
jmp
cmp
int3
cmp
jecxz
fdiv
aas
shl
mov
stc
out
out
sub
shl
leave
xor
iret
in
not
fsubr
fmul
rolb
movl
ljmp
sar
not
cmp
stc
and
in
std
hlt
ret
in
xchg
enter
out
xor
div
out
ljmp
aad
roll
call
std
nop
cli
sbb
enter
out
out
into
shl
div
incb
test
leave
enter
out
test
loop
cmp
idiv
xlat
rcr
repz
sar
iret
cmp
aam
xlat
repnz
fildl
ffreep
out
aam
into
ret
loop
xor
cmp
add
repz
not
in
loop
mov
loop
aas
lock
aas
lock
xor
int
cli
sti
test
xchg
int3
test
orb
cmp
repz
xlat
lret
fcomip
loope
rcr
fcomp
leave
and
into
mov
in
out
repz
in
lret
cmp
lock
hlt
ljmp
into
std
lret
repnz
int3
aam
xor
iret
cmp
int3
cli
xchg
or
in
out
xor
lds
aaa
into
fst
fstp
lret
into
int3
fld
std
cld
test
call
out
mov
sub
ss
int
cmp
rol
stc
jmp
in
cmp
test
out
imul
out
rcr
iret
out
sub
sar
adc
ljmp
repnz
xor
icebp
out
cmp
cmc
loop
aad
mov
rol
icebp
mov
bnd
into
hlt
aad
lret
out
std
cmp
shl
cmp
cmp
push
aas
neg
fmulp
jecxz
std
test
mov
stc
shr
lret
fdivr
jmp
fcmove
rol
rol
loopne
out
in
out
mov
xor
mov
cs
shll
int
in
xlat
loopne
and
clc
fst
aas
xchg
loopne
popl
test
loop
sarb
int
call
fsub
ret
neg
rolb
into
xchg
shr
das
aam
clc
in
cmp
repz
out
rol
incl
mov
test
rcl
aaa
test
sub
std
call
out
in
shl
cmp
in
mov
hlt
orb
fcomip
mov
loop
out
ljmp
stc
cmp
enter
leave
fucompp
loope
shr
test
xor
ss
das
call
aas
loope
xlat
lock
int3
mov
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
