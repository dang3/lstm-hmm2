push
sub
add
add
add
add
xchg
add
cmpsb
and
add
lret
add
and
add
and
add
xor
add
dec
add
pop
add
push
add
jp
add
cwtl
add
lods
add
mov
add
fisubs
add
hlt
add
or
add
adc
add
and
add
xor
add
js
add
pop
daa
add
push
daa
add
mov
add
movsb
daa
add
mov
daa
add
in
daa
add
cli
daa
add
or
add
sbb
add
and
add
inc
sub
add
add
outsb
sub
add
add
pushf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
inc
daa
add
dec
and
add
and
add
xor
add
add
add
insb
gs
imul
add
add
push
mov
sub
movl
movl
movl
movzbl
cmp
jne
jmp
mov
cmp
jae
mov
mov
lea
mov
mov
movzwl
movzbl
cmpl
je
mov
mov
mov
mov
mov
xorl
mov
cmpl
je
xor
mov
subw
cmpl
je
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
mov
mov
cmpl
jne
mov
jmp
mov
movzwl
cmp
je
mov
jmp
mov
mov
add
mov
mov
cmpl
je
mov
jmp
mov
add
mov
mov
add
andb
mov
mov
movzwl
orl
cmp
je
mov
movzwl
cmp
je
mov
jmp
mov
add
mov
cmpl
je
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmpl
je
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movw
movw
mov
mov
mov
mov
movzwl
cmp
jle
movzwl
or
mov
mov
mov
mov
subl
mov
movzwl
cmp
jle
movzwl
or
mov
cmpl
je
xorl
cmpl
jbe
movzwl
cmp
je
movzwl
cmp
jne
xorb
cmpl
je
mov
jmp
movzwl
movzwl
cmp
je
cmpl
je
mov
jmp
mov
add
mov
mov
cmp
jne
mov
pop
ret
push
mov
sub
movl
movl
mov
mov
mov
mov
mov
push
push
push
pushl
pushl
call
mov
pushl
cmpl
je
call
mov
pop
ret
push
mov
sub
movl
movl
movl
mov
movzbl
mov
movzbl
sub
mov
cmp
jne
mov
movsbl
cmp
je
cmpl
je
addw
mov
add
mov
mov
add
mov
jmp
mov
mov
pop
ret
push
mov
sub
mov
pop
ret
push
mov
call
sub
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
movzwl
mov
mov
mov
add
mov
cmp
jl
cmpl
jg
mov
add
mov
cmpl
je
mov
movzbl
mov
mov
mov
add
mov
cmp
jl
cmpl
jg
mov
add
mov
cmpl
je
mov
cmp
je
mov
sub
mov
pop
ret
push
mov
sub
movl
push
lea
sub
push
cmpl
je
call
add
movb
mov
pop
ret
push
mov
sub
mov
pop
ret
push
mov
sub
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
pushl
pushl
push
call
add
pushl
pushl
lea
push
call
add
pushl
pushl
push
call
add
xorw
cmpl
je
mov
mov
addw
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
add
mov
subw
cmpl
jne
mov
mov
mov
mov
mov
mov
lea
push
mov
push
subl
call
xorl
mov
add
mov
cmpl
jne
jmp
mov
mov
add
mov
cmpl
je
push
mov
mov
push
call
mov
add
mov
cmpl
jne
jmp
mov
mov
add
mov
addw
jmp
mov
mov
mov
mov
cmp
jne
cmpl
je
cmpl
jne
or
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
and
cmp
je
movl
jmp
movl
pushl
lea
push
addw
pushl
mov
push
call
mov
add
mov
cmpl
jne
mov
jmp
mov
cmpl
jne
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
xorb
movl
jmp
mov
add
mov
mov
add
mov
mov
mov
cmp
jae
movl
mov
mov
add
mov
lea
mov
mov
add
cmp
jne
xorb
cmpl
je
movl
jmp
mov
mov
add
mov
movzwl
mov
mov
mov
add
mov
mov
mov
mov
mov
add
andw
mov
cmpl
jne
cmpl
je
mov
mov
cmp
jae
mov
mov
add
push
mov
cmpl
je
push
call
mov
add
cmp
jne
mov
mov
jmp
mov
add
mov
jmp
cmpl
je
mov
cmp
jne
mov
mov
jmp
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
xorw
pushl
pushl
push
call
add
pushl
pushl
push
call
add
lea
push
lea
push
lea
push
mov
push
cmpl
je
mov
push
andl
mov
cmpl
je
push
cmpl
je
orw
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
andb
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
addb
mov
push
mov
cmpl
je
subl
push
mov
push
lea
push
lea
push
lea
push
pushl
mov
push
call
mov
add
mov
cmpl
jne
jmp
movl
pushl
pushl
mov
push
pushl
call
mov
mov
cmpl
jne
jmp
movl
mov
movzbl
sub
cmp
jne
mov
add
mov
cmpl
je
mov
cmpl
je
push
mov
cmpl
je
orl
mov
mov
push
mov
push
call
cmpl
je
xorl
addb
push
lea
push
lea
push
call
mov
add
mov
mov
push
mov
cmpl
je
xorw
push
mov
cmpl
je
add
andw
mov
mov
push
mov
push
mov
push
call
add
mov
push
mov
push
cmpl
je
andl
call
mov
orb
add
cmp
je
jmp
push
mov
push
call
mov
mov
push
mov
push
call
cmpl
je
push
mov
push
mov
push
mov
push
mov
push
mov
cmpl
je
push
mov
push
mov
push
pushl
mov
push
mov
push
mov
push
mov
push
pushl
mov
push
andl
call
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jae
lea
push
addl
lea
push
addl
pushl
call
movl
movl
lea
push
lea
push
pushl
call
movl
movl
lea
push
lea
push
pushl
call
movl
movl
lea
push
mov
push
mov
push
call
add
lea
push
lea
xorl
push
pushl
call
cmpl
je
andl
movl
movl
lea
push
lea
push
pushl
call
movl
movl
lea
push
lea
push
pushl
call
movl
movl
lea
push
addb
lea
orw
push
xorb
pushl
call
movl
movl
lea
push
mov
push
mov
push
call
add
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
lea
push
orb
pushl
mov
cmpl
je
call
mov
add
cmp
je
jmp
mov
mov
mov
mov
mov
mov
cmpl
je
push
mov
push
call
mov
add
cmp
je
jmp
mov
push
pushl
call
mov
pushl
orw
call
mov
mov
cmpl
jne
jmp
lea
push
mov
push
mov
push
mov
push
call
mov
orw
add
cmp
je
jmp
lea
push
lea
push
orl
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
lea
push
mov
push
mov
push
cmpl
je
call
mov
pushl
cmpl
je
movl
cmpl
je
mov
push
pushl
cmpl
je
call
cmpl
je
cmpl
je
mov
push
pushl
call
mov
pushl
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
addb
mov
add
mov
mov
add
mov
orb
mov
movzwl
add
mov
movl
mov
mov
andl
mov
lea
push
pushl
mov
push
xorb
mov
cmpl
je
cmp
je
mov
and
cmp
jne
movl
jmp
mov
and
cmp
je
mov
and
cmp
jne
subl
mov
and
cmp
jne
movl
mov
imul
add
mov
lea
push
mov
push
mov
mov
sub
cmpl
je
push
call
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
mov
movl
jmp
mov
add
mov
movzwl
cmp
jae
cmpl
je
subw
mov
imul
mov
mov
xorb
mov
mov
and
cmp
je
mov
and
cmp
je
mov
and
cmp
je
movl
jmp
mov
and
cmp
je
mov
and
cmp
jne
mov
and
cmp
je
movl
jmp
mov
and
cmp
je
subw
mov
and
xorl
cmpl
je
push
mov
xorw
mov
add
push
call
mov
imul
add
mov
lea
push
mov
push
subl
mov
orl
mov
sub
push
mov
mov
add
push
call
jmp
mov
mov
add
mov
mov
mov
andb
add
mov
mov
add
pushl
pushl
add
pushl
pushl
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
subw
add
pushl
pushl
mov
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
add
add
add
add
loope
add
mov
stos
scas
ror
ror
iret
iret
fbstp
lcall
xchg
cwtl
xchg
xchg
xchg
into
ror
ror
repnz
mov
fildll
int3
iret
fbstp
iret
into
int3
enter
fistpll
mov
xchg
mov
stos
xchg
xchg
xchg
pushf
sahf
mov
sahf
mov
xchg
xchg
mov
scas
nop
mov
mov
mov
ror
ror
ror
ror
sbbl
cmc
mov
xchg
mov
mov
xchg
cwtl
mov
lret
iret
repnz
mov
int3
pushf
lret
lcall
lret
into
lcall
iret
leave
into
into
lret
cmc
mov
mov
xchg
cltd
xchg
lcall
rcr
int3
iret
fbstp
iret
into
int3
enter
fistpll
mov
mov
lods
sahf
xchg
cwtl
lcall
lcall
mov
sti
jmp
idiv
idiv
repz
mov
push
sti
pushl
mov
mov
cld
ljmp
std
ljmp
push
push
push
jle
mov
jmp
pushl
mov
mov
mov
mov
mov
mov
rcl
cs
aad
xor
dec
lods
iret
sub
pop
sbb
mov
mov
mulb
out
in
aam
sti
push
fld1
sbb
test
push
xchg
ficoml
or
sbb
lds
fucomi
call
or
push
ljmp
mov
ljmp
mov
sti
jmp
idiv
idiv
inc
jg
mov
push
call
sahf
mov
test
add
cli
jge
scas
dec
std
pop
mov
mov
ljmp
movsl
xchg
xor
jecxz
dec
fidivs
dec
call
sub
and
mov
push
cmpsb
hlt
dec
test
dec
add
fwait
sti
cli
adc
es
xorb
or
push
cmp
jo
lret
sub
aaa
ljmp
scas
fimuls
jno
jns
mov
dec
in
orl
jg
shrb
jl
cmp
add
adc
jle
dec
mov
mov
mov
cmpsl
subl
or
negl
ret
xchg
data16
imul
fs
repnz
inc
fwait
jne
and
jmp
outsl
imul
shrl
xchg
sub
and
rcrl
inc
xlat
push
lods
xor
xlat
mov
sub
mov
push
pop
cwtl
push
push
es
negb
xchg
push
lcall
and
sahf
cmp
movsb
mov
pop
mov
sub
push
push
sbb
mov
lret
pop
mov
mov
dec
repnz
mov
ret
faddl
sub
mov
sahf
loop
fnsave
xor
bound
dec
mov
ja
in
xlat
xchg
cmpsb
cs
mov
mov
divl
std
lods
pushf
mov
shl
and
jge
ret
pusha
inc
fnsave
or
jecxz
hlt
add
iret
dec
xchg
dec
sahf
adc
xchg
sub
xor
ljmp
hlt
xchg
push
sbb
fdivs
test
inc
push
filds
push
dec
jge
or
xchg
aad
jae
mov
aad
repnz
lret
cwtl
xchg
jl
into
imul
popa
imul
pusha
fs
cmp
dec
loop
outsl
mov
jecxz
xchg
ds
cmp
pop
pop
rcl
outsl
test
inc
fdivrp
in
int
data16
outsb
fisubrl
bound
mov
icebp
in
mov
inc
into
dec
fdivrs
push
dec
jo
or
lods
stos
jecxz
mov
mov
xorb
popfw
scas
xchg
mov
pop
xor
repz
push
lcall
stos
ret
sub
rcr
mov
les
repz
lret
jecxz
jno
cmp
cmp
add
inc
jle
lret
pop
xchg
cmp
inc
ss
mov
fs
xor
sub
movb
sbb
loopne
sbb
cmp
or
xchg
adc
insl
push
sbb
mov
pop
jno
lods
xchg
dec
sub
sub
adc
cs
push
push
push
sub
movsl
inc
mov
jns
lret
jb
push
test
mov
in
mov
mov
stos
mov
xor
stos
mov
out
xchg
jno
pop
push
pop
aam
mov
lods
out
sbb
sbbl
movsb
dec
cli
les
mov
lea
test
cmc
sti
in
or
inc
std
sub
cmc
adc
test
incl
lret
imul
mov
sbb
outsl
inc
dec
adc
icebp
rcrl
das
or
stc
andl
jnp
dec
aas
cltd
popf
cltd
push
lock
sbb
daa
adc
pop
flds
xlat
call
mov
push
int3
push
xchg
sub
xor
cmp
pop
add
push
in
adc
adc
mov
pop
cld
jbe
cmpsl
jge
enter
jb
xchg
ja
lret
push
jl
subb
push
pshufw
sti
sarb
mov
push
sarl
adc
and
pop
xchg
mov
adc
fildl
out
jno
test
cmp
dec
inc
mov
xor
cmp
mov
mov
icebp
or
das
cmp
dec
popa
icebp
and
inc
jbe
jmp
and
xchg
lahf
jnp
and
mov
repz
lcall
cmp
push
add
or
mov
cmpsl
popa
jns
and
clc
popa
xor
xchg
sbb
pop
in
mov
iret
scas
add
addr16
inc
jb
popa
or
mov
fs
pop
lods
movsb
mov
add
loopne
jb
inc
xchg
add
and
jb
jge
xor
sub
outsl
cmp
push
mov
daa
jo
pop
imul
icebp
jp
add
shrl
mov
imul
fisttpl
inc
cli
cli
push
idiv
ljmp
push
push
call
push
call
xchg
sahf
mov
cmp
stos
or
test
pop
sar
neg
pop
ficompl
xor
pop
in
fucomip
imul
mov
out
jb
dec
and
lea
leave
xor
cmp
pusha
sub
xorl
cmpsb
aaa
cmp
and
add
xor
pop
jecxz
sbb
add
sub
mov
inc
xchg
mov
push
mov
add
push
or
fidivrs
push
test
jmp
xchg
mov
pop
push
mov
sub
inc
mov
mov
loop
adc
pop
out
sub
lcall
lods
cmpsl
dec
inc
or
scas
and
add
inc
and
adc
mov
popa
aas
iret
add
and
add
mov
adc
divl
xor
pop
pop
inc
pop
scas
xchg
cmp
das
or
aaa
movhps
cmp
pop
test
sub
push
xlat
loop
std
adc
nop
cmpsl
int3
fistps
dec
roll
fstpt
pop
xlat
ja
mov
add
scas
jmp
mov
jmp
sub
fnstcw
inc
in
aaa
and
mov
jnp
sbb
mov
ja
enter
das
test
out
cmp
add
push
push
mov
cmp
dec
pop
test
add
repz
add
fldcw
cmpsl
jae
dec
mov
jl
les
push
je
popf
stc
push
or
fs
jns
sub
mov
sub
std
add
xor
mov
dec
movsb
xor
sbb
lcall
mov
das
xchg
insl
push
ljmp
sbb
push
shll
call
xchg
test
cmc
jno
inc
test
mov
gs
cmpsl
aam
sahf
sbb
or
mov
addr16
inc
cmpsl
jne
cmp
dec
mov
cs
xor
call
mov
dec
jmp
sub
sbb
rcrb
dec
inc
push
repnz
in
xchg
adc
pop
mov
cmp
ret
stos
xchg
sbb
ret
mov
ret
nop
cmp
fimull
in
sbb
nop
cmp
sub
jns
movsl
jmp
pop
sbb
imul
mov
mov
out
mov
leave
lods
enter
mov
ret
cli
lds
adc
ja
fwait
ja
aam
mov
and
ret
jo
sbb
mov
enter
mov
pop
scas
negb
std
xor
ds
inc
movsb
js
mov
mov
mov
push
xchg
xor
xchg
xor
test
xor
xor
xchg
mov
lcall
rclb
jae
dec
mov
das
ds
sub
mov
loope
push
sbb
ja
movlps
adc
xchg
iret
test
xchg
mov
int3
popa
and
and
hlt
inc
pop
movsb
in
mov
pop
inc
pop
xchg
mov
loope
adc
ret
jmp
loop
sbb
cmp
sub
inc
lock
sbb
sub
mov
or
pop
mov
fmuls
cmp
jno
add
xor
loop
jmp
js
xchg
inc
lcall
add
lret
enter
not
orb
inc
dec
cmp
xchg
cmp
mov
pop
out
lret
fcomip
or
sbb
inc
sub
cmp
adc
addr16
test
inc
rcr
cmc
dec
xor
jno
cmp
call
ret
loop
loop
lret
sub
into
movsb
xor
mov
nop
fcmovbe
inc
push
lcall
xchg
ljmp
adc
jmp
inc
cwtl
addl
sbb
js
adc
mov
inc
addr16
jnp
pop
pop
fsubrs
cmp
adc
push
roll
push
psraw
lea
pop
push
inc
scas
stos
pop
jecxz
lret
dec
mov
jp
xchg
inc
push
out
jmp
push
mov
pop
out
fiadds
in
mov
mov
adc
and
and
in
jnp
adc
xchg
fimuls
mov
sbb
out
ss
pop
mov
lret
movsb
in
insb
pushf
mov
or
sti
mov
add
cmpsb
in
sub
jg
fsubl
xlat
js
scas
push
jnp
lods
sub
leave
lock
sub
daa
rcrb
lods
jb
scas
clc
dec
mov
xchg
gs
ret
pop
out
clc
int3
pop
into
test
xor
test
xor
les
jo
fdivs
in
cltd
push
ret
xchg
sub
pop
fadds
bound
into
cmp
jmp
dec
fsts
lods
cmp
mov
sbbl
lock
mov
jecxz
add
fsubl
jo
sub
out
adc
sbb
cli
stc
scas
in
pop
and
pop
dec
cmp
mov
iret
cmpb
ret
adc
popa
sub
push
cmp
sub
divl
sub
pop
into
adc
inc
sub
cli
xorl
xchg
or
in
test
xchg
stos
loopne
cld
lods
loope
or
enter
or
in
sahf
testl
lret
dec
mov
int
or
shll
ret
lods
lock
fimull
xchg
scas
pop
push
fnsave
cmc
mov
and
insl
mov
adc
imul
ret
fdivrs
push
rclb
dec
out
mov
xchg
mov
cmc
cwtl
sub
lock
cmpsb
popf
inc
mov
add
dec
das
lret
push
cs
push
mov
sbb
ljmp
js
and
fcoms
sub
add
call
xchg
sub
jmp
inc
fimull
mov
xchg
in
dec
pop
ja
andl
mov
jmp
das
jl
sub
ss
inc
mov
xor
pop
inc
sub
xor
test
std
bnd
repnz
fdivr
mov
ss
push
aas
js
mov
sub
incb
mov
loop
mov
mov
mov
mov
dec
mov
mov
loope
cmpl
mov
je
ds
popa
xlat
mov
cwtl
sahf
test
lods
mov
push
and
pop
add
xor
mov
xchg
xchg
popa
bound
jb
jmp
jno
push
aaa
mov
pop
iret
and
scas
orl
leave
inc
nop
in
frstor
js
push
lods
cmp
mov
repnz
lea
sti
out
orl
dec
movsl
mov
fldl
add
cmpl
lea
sbb
js
pop
push
mov
inc
inc
dec
sub
loopne
aas
int3
mov
xchg
cwtl
vunpckhps
pop
sbb
sub
mov
scas
subl
fbstp
out
stos
xchg
movsb
inc
mov
js
inc
hlt
aam
cmc
out
sub
xor
sbb
xchg
pushf
faddl
jno
lret
rcr
mov
pop
dec
jmp
arpl
xchg
mov
jmp
ja
rcl
fmuls
dec
call
adc
mov
and
inc
frstor
push
sbb
pusha
push
lcall
pop
movhps
dec
and
sbb
les
cmp
out
lock
push
imul
cmpsl
xchg
sub
and
sub
add
lcall
lods
ja
bound
sbb
jbe
mov
mov
enter
jecxz
jl
in
push
fs
jns
inc
rcrl
stos
mov
xchg
push
scas
mov
mov
aaa
jb
dec
test
sub
cli
mov
out
mov
add
iret
push
mov
fnstcw
rcll
in
sbb
nop
ss
jb
cs
pop
jecxz
outsb
mov
icebp
dec
cs
ja
stc
mov
cwtl
mov
in
and
popl
add
push
jb
inc
or
popa
sbb
dec
pop
dec
inc
cs
sti
add
or
pop
and
sbb
push
repnz
xor
inc
std
or
pop
and
inc
cmc
ret
ror
mov
push
xor
pop
fstpl
cmpl
adcl
xor
cmp
mov
mov
out
mov
cmpsl
mov
pop
inc
sbb
mov
pop
and
or
leave
inc
insb
jmp
mov
inc
out
or
adc
repnz
ja
scas
inc
mov
dec
test
scas
mov
stos
aas
adc
lods
aad
mov
pushf
lods
mov
imul
pushf
jno
repz
icebp
fmull
pop
adc
out
inc
pop
pop
mov
seta
push
push
xor
pop
popf
adc
movsl
fdivl
mov
dec
mov
pusha
mov
xor
sub
and
nop
sti
dec
jl
ret
dec
shrl
sub
cs
ret
lret
mov
mov
jcxz
int3
pop
inc
xchg
sub
sub
es
cmp
cmp
xchg
cltd
jns
aad
mov
push
cltd
mov
ret
mov
jl
inc
aas
cmc
pop
push
pop
adc
lods
cli
je
fnstcw
test
int3
sbb
pop
cmp
popl
xor
test
xchg
and
lea
decb
push
mov
jg
adc
fcmovnb
inc
cltd
adc
in
cmpsl
out
imul
iret
mov
loopne
push
adc
mov
sbb
in
dec
cmpsl
sbb
repnz
jle
mov
andb
notl
adc
jns
xchg
pushf
nop
jg
push
push
mov
lret
xor
lret
test
ret
or
cmpsb
push
mov
jbe
xchg
mov
out
add
addr16
xor
clc
and
and
mov
push
mov
pop
jecxz
jbe
mov
js
inc
int3
jno
mov
and
popa
mov
into
fistpl
or
mov
jne
xlat
add
push
adc
int3
mov
popf
cmp
mov
shll
aaa
inc
pop
fsubr
repnz
inc
test
nopl
loopne
cmp
sbb
fsubs
movsl
mov
mov
xchg
outsl
fsubr
movsb
or
sbb
inc
xchg
sub
mov
push
push
mov
fiaddl
pop
test
sbb
xchg
mov
sbb
mov
sahf
scas
leave
mov
xor
repnz
gs
fs
std
je,pt
lretw
lcall
lea
es
out
pop
test
dec
sub
xchg
pop
es
mov
mov
jbe
push
push
int
sub
lods
mov
cmp
jne
xchg
scas
arpl
cmp
dec
xor
push
movsb
arpl
leave
pop
mov
mov
mov
push
cltd
fcoml
lahf
jecxz
stc
fidivl
into
mov
movl
push
rcll
fistl
mov
push
movsb
mov
mov
fidivl
fwait
push
xlat
fsubrl
add
cli
and
sub
adc
xor
movsl
in
jnp
lret
jae
aaa
mov
or
push
mov
test
ja
mov
stc
lret
mov
and
lods
adc
rcr
in
in
insl
fdivrs
adc
test
cs
and
prefetch
in
pop
flds
stos
sbb
mov
jnp
and
push
dec
je
pop
outsb
fidivrl
jno
mov
and
pop
aam
push
xchg
mov
ret
lret
frstor
insb
sarb
dec
ret
lret
jge
add
jno
in
inc
push
ss
bound
mov
inc
mov
mov
sub
bnd
jae
popf
stos
lods
cmp
xchg
dec
inc
sub
adc
std
cmp
gs
jl
mov
jb
mov
jno
mov
and
adc
lcall
add
add
mov
fimuls
adc
sub
sti
or
popa
movb
cltd
je
fs
aas
and
dec
mov
inc
repnz
adc
xchg
or
stos
fildll
xchg
add
fistl
out
sub
fisttpll
stc
shll
dec
rcrl
mov
popf
dec
mov
cmp
jl
lock
sahf
inc
push
or
pop
push
cld
mov
insl
dec
dec
test
mov
ljmp
insb
fprem
inc
mov
and
cmp
mov
mov
push
xor
inc
jnp
sti
popa
dec
enter
sub
pop
pop
push
int3
dec
pushf
insl
dec
pop
pop
adcl
fsubr
cmp
movsb
leave
cmpsl
enter
sub
sbb
xchg
mov
push
mov
lret
mov
lock
cli
scas
fdivr
aad
pushf
bnd
jbe
cmp
pop
jb
je
scas
mov
test
dec
repz
sub
dec
lret
adc
testl
fidivrl
xor
jno
hlt
xor
daa
and
clc
popa
mov
daa
lock
aas
mov
and
cld
lea
cmp
xor
sub
inc
mov
mov
test
inc
jmp
xchg
inc
ss
addr16
insl
sub
push
cli
das
cmp
xchg
mov
sahf
or
sbb
sub
sub
insl
in
xchg
call
out
lea
movsb
push
pop
cmp
xor
adc
cwtl
push
push
mov
pop
ss
jg
mov
add
clc
inc
addb
fcmovnb
and
addr16
cld
xchg
dec
aaa
push
xchg
sbb
ror
imul
repz
repnz
push
or
jmp
ljmp
xchg
inc
xchg
xchg
jno
lods
or
jne
adc
jae
outsb
movsb
mov
jge
inc
adc
movsl
stos
add
inc
sub
cmpsb
cwtl
mov
xchg
pop
inc
enter
jns
pushf
sarb
int
add
push
xor
int3
sub
jne
cwtl
sub
mov
inc
sub
fwait
or
repnz
insl
sbb
cmp
cs
cmp
mov
cmpsb
and
push
loope
in
les
push
out
cld
pop
push
movsl
rcll
dec
pushl
xchg
pop
mov
ss
iret
lcall
pop
pushl
xor
xor
hlt
ss
orb
cmp
sbb
es
or
lea
sub
aad
mov
enter
mov
ja
cmpsl
aaa
mov
dec
cmpsl
insb
and
sbb
pushf
mov
xlat
mov
mov
cmc
pusha
mov
push
jle
push
mov
jae
and
insl
xor
out
repz
fdivrs
aas
cltd
aad
icebp
lahf
sub
sbb
lock
or
cmp
xchg
arpl
cmc
mov
push
stc
lret
test
lret
jecxz
push
jmp
adc
jno
shrl
je
or
pop
xorb
dec
ror
inc
mov
lahf
cmc
sub
dec
repnz
xchg
adc
cmpsl
push
sbb
cmp
mov
fwait
test
inc
cmc
adc
pop
gs
xchg
pop
sub
mov
add
insl
dec
mov
shlb
dec
into
cmpsl
add
ret
loop
and
sbb
sti
insb
cmp
mov
sbb
lods
push
fistpl
mov
incb
in
jecxz
xchg
pop
scas
cmp
dec
xor
xchg
mov
arpl
xor
xor
jmp
mov
ja
enter
mov
test
pop
test
stos
out
xchg
and
push
fs
jle
mov
fxch
lds
mov
jmp
push
cmpsl
push
cmpsb
jns
adc
mov
sbb
mov
sahf
inc
in
icebp
xor
clc
jo
jae
sahf
or
xchg
daa
pop
jmp
jmp
xchg
dec
mov
loop
lea
mov
jbe
xchg
js
int3
push
mov
out
mov
mov
or
lcall
lret
adc
xchg
lods
adc
xor
jnp
pop
mov
sub
out
cmp
pop
ds
dec
xor
jns
outsb
stos
cltd
call
les
push
sbb
lcall
ss
sarb
ret
repz
shld
lret
leave
fbstp
sbb
lods
mov
mov
mov
scas
pushf
lods
and
lret
mov
xor
lahf
mov
pushf
fs
int
mov
jbe
cmp
popf
add
jb
add
cs
test
cmp
pop
xor
insl
addr16
fbld
xor
in
test
gs
daa
and
popf
jb
rcll
daa
fwait
sahf
cs
subl
xchg
and
mov
cld
dec
jo
xchg
cmp
sub
rolb
lret
pop
cmp
xchg
xchg
fadds
and
xchg
xor
cs
xchg
lock
inc
mov
pop
mov
fimull
or
pop
scas
loope
pop
sahf
test
out
cmp
shll
ret
cmpb
dec
jmp
sub
ret
int3
idivb
push
test
push
inc
xor
sbb
inc
test
mov
adc
lods
mov
mov
rolb
mov
pop
dec
adc
xor
add
inc
sbb
or
int
sbbb
hlt
mov
inc
jno
dec
jns
adc
lds
addr16
ja
test
inc
mov
out
stos
adc
lahf
fnstenv
int
fiaddl
gs
adc
inc
ss
lret
cmpsb
enter
shll
inc
rcl
xor
push
dec
fcoml
lods
push
popf
mov
in
mov
lcall
dec
mov
leave
cmp
pop
hlt
inc
mov
push
testl
and
or
xlat
daa
cwtl
xor
sub
scas
out
mov
movsl
int
cmc
test
repz
push
xor
xor
and
xor
leave
inc
xchg
sub
stc
mov
mov
adc
mov
inc
add
mov
les
in
mov
lret
xlat
movsb
cmp
repnz
cmpsb
scas
mul
pop
cmp
cmp
push
test
fisubl
xor
or
daa
add
int
xor
jae
jmp
dec
cmc
lret
pop
call
mov
xor
jb
imul
mov
addr16
jae
and
int3
dec
add
data16
stos
sbb
lret
fiaddl
add
adc
and
dec
imul
or
pop
xchg
mov
into
mov
or
and
jbe
mov
xchg
js
pop
ds
ja
shrl
out
test
arpl
fwait
push
or
ret
dec
mov
cs
test
xor
cmc
lods
sub
cmp
loopne
popf
push
sub
jae
pop
cmpsl
adc
xor
lcall
inc
ja
in
nop
mov
push
cld
in
sbb
sub
movsl
gs
mov
mov
aas
mov
aam
xor
pop
imul
and
cmp
adc
cmp
sub
lret
jle
js
jbe
jne
ret
adc
fadds
ljmp
or
xor
fs
jle
shl
adc
lods
inc
ljmp
mov
cs
scas
add
loop
mov
add
pop
cmp
rcll
sbb
sti
test
fstl
xor
js
pop
sub
stos
hlt
adc
sahf
mov
jae
dec
imul
adc
push
sub
adc
lods
shll
inc
add
xchg
push
pop
push
popa
mov
mov
scas
jnp
outsl
pushf
jbe
mov
cmpsb
pop
test
std
loopne
shll
lahf
arpl
cmpsl
pusha
push
mov
cmpl
adc
out
les
sbb
rcrl
int
sbb
adc
xchg
fs
pusha
leave
xchg
insb
ja
push
mov
lock
xlat
cmp
add
sahf
dec
fists
inc
mov
daa
daa
dec
sub
jmp
imulb
fcoms
bound
cmp
pop
and
mov
arpl
rcrl
leave
mov
mov
popa
sub
lcall
dec
pop
xchg
cmc
data16
sbb
pop
dec
xor
push
pop
bound
nop
lea
push
outsb
jge
cli
mov
xor
outsl
inc
cwtl
call
inc
sbb
movsl
stos
ds
sub
lcall
jnp
jne
inc
xor
loop
pop
add
add
daa
inc
lea
xchg
and
dec
sbb
jp
xchg
leave
push
stos
sub
sbb
repz
xchg
or
mov
pop
jle
add
push
xchg
and
and
insb
popa
js
or
pusha
mov
add
push
xchg
lods
xchg
push
inc
mov
fistpll
and
sub
clc
cmp
imul
loopne
pop
adcl
jbe
out
push
pop
test
cmc
mov
test
inc
test
outsl
mov
jge
push
sbb
adc
jb
mov
jecxz
gs
dec
ljmp
out
imul
insb
mov
popa
pop
pop
nop
add
in
add
mov
mov
push
mov
test
addr16
ds
jecxz
call
jo
push
sub
push
testl
cmp
enter
inc
xchg
popf
test
dec
cs
push
mov
xor
dec
icebp
test
or
add
fdivrl
sbb
mov
test
sti
xchg
popf
pop
jnp
cmp
aad
into
sbb
faddp
jo
pop
xor
mov
pop
enter
mov
xchg
or
jge
and
rcrb
imul
hlt
jae
dec
prefetch
or
sbb
jmp
stos
shll
mov
aad
xor
loopne
inc
xor
push
cmp
and
jo
je
ljmp
ja
and
or
cmp
test
add
loop
cmp
sahf
mov
das
push
fabs
adc
loop
mov
imul
jge
or
lcall
out
imulb
lea
imul
cltd
outsl
in
into
pop
sub
and
mov
mov
jae
jae
addr16
mov
mov
mov
or
dec
addr16
mov
enter
aam
int3
ja
lods
pop
cmp
ror
push
xchg
mov
xchg
mov
push
push
daa
in
cmpsl
movsb
push
clc
bound
xchg
jecxz
imul
mov
jl
ds
xchg
repz
pop
mov
sbb
ljmp
xor
or
les
inc
jae
lea
sahf
fsubp
test
push
pop
mov
lods
subl
xchg
out
mov
fisubrs
subl
rcll
mov
xchg
jmp
iret
lds
mov
mov
xor
in
imul
mov
mov
inc
cmp
sbb
insb
xlat
mov
es
mov
dec
jge
cmp
mov
sub
or
jmp
vhsubpd
int
sbb
shrl
push
sbb
lods
pop
add
mov
add
push
inc
cmpsb
mov
test
das
xor
pop
xchg
xchg
icebp
mov
inc
push
push
out
lock
iret
jge
popf
xchg
popf
test
incb
stos
popf
jnp
pop
jp
stos
je
sbb
bnd
movsl
aaa
in
jnp
xor
fcomps
dec
mov
jnp
insl
loope
jecxz
dec
in
daa
dec
call
mov
push
imul
cmc
enter
repnz
sbb
xlat
iret
pusha
outsl
cltd
arpl
and
xor
dec
mov
popf
lock
push
sub
pop
dec
movsl
sub
or
ret
jns
aad
mov
fs
push
inc
pop
xchg
mov
es
pop
out
mov
jmp
js
pop
icebp
push
arpl
mov
jno
jnp
inc
xor
xor
loope
popf
push
inc
and
cs
push
mov
pop
mov
dec
arpl
cltd
jbe
dec
mov
push
mov
out
mov
jmp
sarl
cmc
mov
mov
scas
xor
into
arpl
insl
icebp
gs
and
cli
int
dec
dec
ret
test
fistpll
pop
fs
mov
cmp
aas
fisubl
or
xchg
dec
cmpsb
call
mov
adc
subl
jns
hlt
in
movsb
mov
add
movsb
enter
mov
push
out
bound
mov
int
loope,pn
xor
sbb
lcall
fldt
xchg
into
in
sti
rcrb
mov
mov
sbb
out
repnz
and
imul
out
fucomip
movsb
xchg
popa
ljmp
fistpll
pop
adc
loop
or
xor
mov
daa
mov
and
mov
insl
mov
mov
iret
add
mov
push
lea
ss
push
dec
pop
in
sub
adc
dec
inc
push
daa
adc
fbld
lock
inc
inc
lret
pop
jmp
cmpsb
lds
jo
or
mov
out
xor
jecxz
sbb
loop
mov
ja
loopne
pop
pop
ja
mov
std
aaa
mov
push
or
add
mov
mov
mov
pop
push
sub
or
jecxz
add
jb
mov
or
sbb
daa
or
idivl
pop
enter
mov
xchg
lods
add
scas
cmp
sbb
cmpl
jbe
loopne
mov
xchg
xchg
fs
or
mov
mov
mov
or
add
dec
mov
cs
pop
mov
call
ret
into
test
xor
daa
movsb
mov
push
je
mov
in
stos
mov
sbb
test
adc
add
arpl
cmp
lods
loopne
pop
mov
xchg
mov
fisubl
cmpl
xor
and
ret
inc
pushf
lock
cmpsb
mov
adc
bound
lock
or
loop
pop
je
pop
push
enter
subb
dec
jmp
mov
adc
mov
adc
mov
shll
pushf
xor
sub
pop
adc
mov
loop
cwtl
xor
stos
pusha
call
dec
stos
mov
mov
xchg
pop
pop
add
xchg
jo
sub
leave
sbb
insb
mov
or
rcll
pop
xor
and
pop
dec
mov
daa
jo
movsb
sub
stos
mov
inc
les
lret
inc
pushf
sarb
in
jmp
and
out
mov
pusha
xor
lcall
shll
bound
adc
inc
and
testl
into
outsb
sbb
loop
cmpsb
fwait
and
adc
xor
pop
jno
fldcw
push
push
cmpsl
xor
adc
test
cmpl
mov
xor
mov
jo
loopne
cmp
fstpt
sub
sbb
mov
fstpl
pop
adc
imulb
pusha
sub
into
and
inc
mov
xor
push
sub
fcoms
inc
popf
adc
sbb
add
adc
nop
xor
in
mov
push
test
or
cmp
pop
stos
xor
adc
push
jbe
mov
jne
mov
ja
xlat
cmp
das
sbb
bound
pop
pop
pop
repnz
add
repz
jg
pushf
inc
insl
int3
lret
add
cs
mov
loopne
or
fwait
add
lds
les
adc
aaa
shlb
repnz
xlat
sub
mov
mov
jne
mov
or
test
jnp
xor
mov
jge
clc
cmpsb
sbb
hlt
mov
mov
dec
fwait
dec
jl
xlat
enter
mov
xchg
repnz
icebp
adc
cmp
mov
int3
pusha
fists
in
pop
mov
cmp
lds
test
cmpsb
mov
add
loope
push
aaa
push
xchg
outsb
pusha
rcll
rcl
and
mov
sbb
rolb
cmpsb
scas
mov
inc
gs
ds
dec
test
pop
shr
enter
pop
aas
xchg
inc
mov
mov
inc
mov
xlat
or
out
mul
mov
adc
pop
pop
sbb
out
adc
xor
and
cmpsl
jge
icebp
loopne
push
xchg
ljmp
xchg
and
cld
sbb
or
add
pop
mov
loop
push
pop
mov
push
loop
pop
clc
daa
hlt
adc
dec
jno
fimuls
aam
xchg
loope
jnp
call
jno
fwait
mov
xchg
mov
inc
fstps
cmpsb
or
divl
out
pop
shrb
repz
xchg
mov
enter
cmp
lods
idivl
mov
mov
ss
lcall
dec
add
dec
sub
mov
fdivrl
push
mov
ss
loope
dec
mov
jnp
xchg
pop
sub
aas
stc
pop
or
xor
inc
inc
sub
adc
jp
fmull
adc
into
mov
lret
loop
mov
mov
cmpsl
mov
dec
push
fsubs
mov
xchg
or
cli
sbb
pop
add
mov
xchg
cmp
movsl
add
fsts
pop
jmp
iret
in
jae
adc
ds
add
jmp
or
lods
jb
cmp
inc
cmp
pop
mov
ret
out
dec
test
les
pop
dec
push
dec
lret
add
in
dec
push
add
push
lcall
add
cmpb
mov
sub
and
fimuls
pop
fwait
cmp
push
or
jbe
push
mov
mov
push
add
test
lods
mov
push
mov
push
andb
dec
sti
dec
cwtl
mov
lods
jmp
mov
addr16
addr16
dec
adc
lock
sbb
fimull
cmpb
add
scas
out
sbb
push
cwtl
push
or
xchg
adc
lock
cs
clc
inc
insl
into
inc
cmp
addr16
and
xchg
dec
mov
das
mov
outsb
pop
pop
push
sbb
mov
push
or
in
mov
cmp
xor
cmp
xchg
pop
stos
and
outsb
movsb
xchg
pop
imul
cmp
std
adc
push
mov
add
mov
mov
fwait
popa
inc
arpl
add
mov
lods
mov
popa
push
mov
add
inc
pop
out
cmp
add
inc
mov
fildl
pop
dec
push
mov
cmpsb
mov
xlat
cmp
lds
jp
pop
repnz
notb
jbe
popf
fistl
mov
pushf
mov
xchg
mov
fwait
inc
das
xor
out
sbb
out
mov
cmc
insb
pushw
mov
insl
leave
dec
mov
ss
sub
mov
xchg
mov
addl
cmp
aad
fwait
add
mov
jnp
test
inc
and
je,pn
jne
les
into
xchg
hlt
stos
fsubrl
add
repz
lret
pop
int3
adc
mov
popa
cwtl
mov
movsb
sbb
out
dec
inc
mov
js
cmc
xchg
add
pop
lea
rolb
mov
sub
or
mov
xor
push
mov
int3
adc
mov
gs
sbb
lea
stos
push
sub
sub
add
pop
mov
jno
je
inc
imul
xor
iret
push
sar
xchg
or
adc
shll
pop
pop
adc
cwtl
nop
inc
in
pop
and
and
push
in
aad
sub
xchg
addr16
cmp
int
sbb
sub
or
jmp
cmp
xorl
lods
arpl
push
add
adc
mov
sub
push
movsl
and
inc
sub
mov
or
out
or
pop
mov
xchg
push
into
mov
jb
aad
and
cvtps2pi
pop
or
in
pop
pop
data16
push
out
xchg
inc
and
je
stos
and
mov
sbb
ss
mov
inc
xchg
xor
outsb
adc
ljmp
and
sub
nop
xchg
and
or
jb
cmp
shll
cwtl
xchg
repnz
shrl
jp
fwait
pushf
sub
dec
rol
adc
add
nop
mov
test
mov
fs
pushf
cmp
test
inc
adc
ret
mov
add
sbb
call
inc
cmp
push
test
and
imul
inc
or
in
outsb
push
in
mov
push
bound
xor
xchg
sub
dec
leave
sub
push
mov
sub
fbld
jp
out
in
push
pop
lock
rclb
push
and
and
dec
cwtl
ret
rcl
in
rcrb
mov
sbb
in
pop
cmc
outsl
mov
into
test
das
mov
mov
lahf
pop
mov
cwtl
out
enter
cmp
push
inc
pusha
cwtl
pop
cmp
repnz
stc
loope
adc
out
cmpsl
mov
xsavec
pop
mov
test
call
call
popa
test
mov
push
sub
popf
push
sahf
cs
test
jl
lock
lock
lock
jl
loop
push
xchg
gs
pop
ret
push
ret
imul
adc
inc
test
out
sub
and
xor
repnz
dec
xor
faddl
mov
loop
inc
cli
inc
int3
clc
int3
add
in
shld
sbb
add
out
ljmp
nop
jmp
or
mov
mov
std
inc
cmp
adc
lea
scas
ret
cltd
jle
pusha
xchg
clc
cmp
pusha
mov
jb
dec
testb
popf
xor
cmp
out
add
mov
inc
int
add
ja
fmull
xchg
mov
or
add
ja
call
adc
jae
and
dec
cld
jae
or
js
inc
lahf
bswap
xorl
in
enter
adc
call
fdiv
sub
scas
ret
fucomip
out
jno
and
pop
push
cmp
insb
clc
cmp
and
dec
cmp
cmove
mov
dec
push
andb
cmpsl
xor
jp
cmp
mov
in
pusha
xchg
inc
inc
mov
mov
ret
mov
adc
shrb
mov
cmpsl
sahf
add
dec
cmc
scas
std
or
inc
test
mov
inc
out
push
sub
ljmp
lds
xchg
xchg
cs
mov
sahf
push
xor
je
push
push
shl
add
lea
jbe
push
adc
add
cmp
out
jbe
mov
push
fs
jmp
push
or
push
mov
pop
std
dec
adc
add
shr
je
addr16
sbb
inc
mov
pop
sub
cmp
out
add
nop
imul
dec
cmp
imul
lcall
jle
push
adc
mov
rcrb
xor
cmp
loopne
xchg
mov
orl
dec
jg
pusha
rcrb
fiadds
bound
add
inc
xor
loopne
cmp
mov
push
rclb
movsb
mov
jp
sbb
aam
cmp
fcompl
hlt
xchg
xor
dec
dec
pop
cmp
and
mov
ja
iret
inc
dec
fildll
aas
loope
pop
mov
mov
in
dec
in
fwait
cmpsb
fstl
push
out
sbb
mov
aam
aad
cltd
insl
xor
in
addr16
cltd
movsb
fdivl
imul
rolb
or
fnstsw
fidivs
iret
in
sub
mov
cwtl
xchg
inc
mov
jle
iret
rcl
cmp
and
ja
ficoms
out
mov
mov
push
xchg
mov
dec
jecxz
sbb
hlt
dec
imul
jns
lods
shlb
fadds
clc
sbb
fisttpl
sbb
mov
push
mov
sbb
xor
lods
cmp
std
sbb
mov
push
test
sbb
inc
or
add
and
stos
lret
fxam
push
push
dec
or
in
lea
mov
inc
xchg
in
and
and
div
das
cmp
into
in
out
push
xchg
in
fdivl
jno
sbb
or
cli
pop
and
jg
sbb
push
pop
adc
gs
jmp
in
negb
int
jb
in
cmp
mull
sbb
mov
lahf
and
pop
dec
hlt
or
xchg
div
ficoml
repz
aaa
mov
xchg
adc
nopl
movsl
shlb
js
shr
imul
in
int
test
lret
clc
mov
xor
shrb
out
popa
cmp
push
outsl
xorl
jno
or
outsl
pusha
sbb
or
inc
cmpl
xchg
fldcw
mov
cwtl
sbb
sbb
mov
insl
iret
roll
scas
or
shlb
fwait
mov
lcall
mov
fcmovu
int3
mov
dec
int
fidivl
xor
test
mov
mov
dec
cmp
xor
fwait
xchg
insl
mov
std
fidivl
or
push
pusha
sbb
fistl
inc
insl
fwait
sub
sti
fidivl
call
lods
or
push
sahf
jg
mov
jmp
fcmovnu
shl
dec
insl
pusha
sti
mov
push
sbb
bound
mulb
fsubrl
std
aas
out
add
aas
add
mov
out
jbe
movsb
push
sbb
mov
inc
jp
add
push
sbb
test
jns
and
out
xor
push
fdivr
mov
mov
jmp
stos
or
inc
sti
ja
add
mov
or
push
cmp
aad
test
imul
aas
push
mov
out
std
fiaddl
cmc
pop
mov
clc
cmpsl
push
sar
dec
mov
dec
mov
lcall
jg
push
jmp
in
stos
clc
inc
stos
cmpsb
mov
shrl
leave
push
mov
inc
aam
lret
dec
inc
inc
lods
cmpsb
jl
test
adc
jg
push
sarl
jmp
jb
mov
inc
test
fdivr
mov
xchg
scas
sub
jmp
xor
lcall
incb
cmpsb
scas
dec
or
pop
cwtl
mov
jmp
pop
push
push
push
dec
in
adc
test
hlt
scas
xlat
xor
xlat
push
std
lret
push
cld
xchg
test
xchg
jg
xor
cmpsb
sbb
and
sub
sarb
ja
sub
adc
inc
xor
mov
mov
je
or
xchg
dec
movsb
cmpsb
push
in
aas
loope
ds
dec
test
aas
loop
and
adc
dec
mov
ret
psraw
ret
sbb
shrl
cmpsb
sbb
outsl
or
sbb
mov
ds
aam
pop
mov
fs
data16
divl
call
xor
dec
mov
andl
fiaddl
mov
pushf
enter
push
scas
jge
stos
sub
jge
sbb
test
xlat
xchg
jge
mov
push
jo
or
dec
pusha
pop
hlt
imul
jge
stos
sub
inc
mov
jo
pop
popf
jl
mov
or
fsubr
adcl
mov
in
push
cmp
and
fs
popa
mov
fnstcw
or
inc
xor
es
mov
adcl
mov
mov
scas
sub
mov
shlb
testl
pop
in
or
loope
xor
xlat
adc
sti
and
adc
xor
imul
sti
lock
inc
testl
psrad
xor
push
jg
sahf
lcall
and
je
sbb
xor
xor
xor
aam
and
rcrb
in
add
and
js
out
je
addr16
in
rcrb
in
add
shll
ds
or
shll
ret
mov
test
lcall
out
mov
subl
xorl
sub
aam
add
adc
sti
inc
pop
sarl
adc
cltd
and
ltr
add
inc
mov
mov
inc
cwtl
pop
or
xlat
adc
sti
adcb
out
add
cmpl
or
testb
cmpsb
inc
fildl
int3
lcall
adc
hlt
lcall
fadds
aam
add
push
push
cwtl
jge
scas
sub
sbb
les
xchg
cmp
mov
mov
and
scas
es
ds
fnstcw
rcl
mov
shlb
cltd
add
fs
add
js
pop
mov
cmpsl
jge
es
dec
imul
sub
fnstsw
rcrl
mov
daa
push
adc
lds
lcall
out
arpl
out
xchg
lcall
divb
stos
mov
lcall
push
adc
lods
mov
flds
es
ret
test
mov
dec
mov
xchg
es
popa
pop
adc
lods
or
sti
mov
or
call
insb
imul
xor
mov
or
mov
or
sti
mov
or
sti
mov
or
in
popa
pop
adc
mulb
adc
pop
rcrl
lcall
adc
push
mov
mov
cmc
lcall
sub
push
xchg
lods
insb
lea
mov
xor
xor
imul
shlb
pop
push
xchg
lods
mov
scas
leave
push
mov
pop
jae
mov
scas
cmp
fwait
pop
xchg
lods
jo
dec
inc
sarb
pop
fstps
xchg
enter
leave
push
mov
pop
dec
mov
xor
xlat
sub
sub
cwtl
adc
scas
leave
push
mov
shlb
scas
mov
lea
shlb
scas
mov
lods
leave
push
mov
shlb
scas
xchg
test
lods
es
jmp
dec
xlat
push
test
mov
lret
lret
stos
leave
push
mov
repnz
scas
and
lods
js
mov
and
mov
mov
sub
insb
and
push
ret
dec
mov
movsb
imul
dec
fmul
lcall
bound
mov
xchg
cmp
xchg
sbb
fimull
jecxz
leave
push
rolb
ss
mov
mov
xlat
sub
push
xchg
lods
mov
dec
sbb
xchg
push
and
mov
mov
insb
and
lods
rorb
loope
insb
add
adc
lods
rorb
push
adc
push
loopne
xchg
lcall
sub
dec
xor
pop
xchg
lods
rorb
cmpl
loop
fcom
add
pop
add
cmpl
pusha
cld
hlt
stos
cmp
sub
movsl
push
mov
add
sahf
push
push
repnz
scas
dec
in
out
hlt
mov
clc
out
sti
inc
inc
fldcw
adc
stos
xchg
mov
clc
cmp
xor
jp
jmp
bound
jle
pop
push
sarb
jecxz
add
cld
fs
cmp
adc
xchg
fidivs
movsb
daa
pop
cwtl
pop
mov
adc
stos
les
xor
mov
loop
stc
mov
push
jae
mov
ss
outsb
cltd
pop
outsb
stc
imul
and
lcall
adc
xor
xlat
dec
xor
cmp
pop
cmpsb
loopne
jo
or
pop
adc
cmp
mov
pusha
fidivs
pusha
fisttps
xor
orl
or
sbb
lods
and
xchg
cmp
add
mov
push
and
xchg
push
and
cmp
out
inc
adc
mov
add
movsb
cmp
or
xor
mov
popa
es
test
fisttpll
out
or
lds
lods
mov
outsl
pop
push
and
jb
xor
neg
xchg
ja
mov
rclb
pop
lock
dec
dec
repz
mov
jo
mov
dec
ljmp
xchg
loopne
fdivl
cmpsb
xor
adc
cld
popf
add
push
ss
daa
cmpsb
lret
or
inc
sub
sbb
cli
push
stos
dec
lahf
sub
cmp
dec
xor
icebp
add
shlb
pop
adc
mov
xchg
ret
popf
and
je
mov
loope
or
subb
sub
inc
inc
sbb
xchg
cmp
notl
cmpsb
fisubs
outsl
or
pop
mov
jne
sbb
xchg
into
sti
xchg
icebp
xchg
rorb
dec
dec
mov
jbe
lods
movsb
cmp
pop
call
jecxz
mov
pop
popf
push
dec
loope
lret
push
pop
imul
adc
inc
ja
scas
inc
pop
add
scas
mov
imull
loope
lret
ljmp
mov
sti
jmp
idiv
idiv
xchg
mov
mov
push
decl
pushf
xchg
sahf
mov
sub
mov
loope
push
sarl
pushl
out
mov
ds
in
aas
mov
inc
in
loope
mov
ret
loop
mov
and
xchg
inc
sub
cmp
push
dec
mov
and
inc
push
dec
fs
mov
jae
add
inc
nop
mov
std
addl
mov
add
or
fsubl
pop
push
mov
dec
notb
ret
dec
hlt
adc
jae
clc
int3
call
insb
push
aad
adc
fxam
les
xchg
sbb
jge
test
mov
test
xlat
mov
cltd
repz
shll
sbb
mov
sbb
or
jmp
sub
xchg
arpl
push
popa
lcall
fwait
pop
push
out
out
pushf
out
mov
or
or
sub
aaa
mov
das
je
cmp
pushf
loope
add
rcrb
sub
in
hlt
shll
or
push
pop
ror
popf
fdivrl
repz
lret
fmul
mov
mov
adc
dec
add
lods
sarb
out
mov
mov
mov
or
pop
outsb
mov
les
push
into
outsb
leave
mov
lods
jge
fcmovne
mov
insl
in
jb
dec
sbbb
and
jo
and
push
rorl
sub
xchg
lahf
mov
std
daa
popf
dec
mov
lcall
mov
les
adc
ret
mov
fs
je
adc
test
inc
lds
xchg
jb
sahf
fildl
adcl
in
ficoms
sbb
mov
push
hlt
inc
ds
in
xorl
jns
push
subb
outsl
add
loope
dec
pop
adc
in
cmp
mov
int3
and
xor
jle
outsb
lods
dec
xorl
inc
aas
out
push
bound
cmpl
cltd
jns
xchg
fwait
mov
mov
out
add
popf
pushf
fcoml
cmp
dec
mov
rol
xchg
sub
push
add
mov
sub
jne
loope
xchg
sub
gs
sub
imul
xor
pop
aad
mov
testb
imul
aas
mov
xchg
mov
mov
movb
cmpsl
sub
adc
mov
xor
adcl
xorl
inc
mov
popw
pop
and
mov
jl,pt
aas
or
sbb
and
cmpb
xor
lds
inc
push
div
pusha
repz
jb
pop
sbb
mov
inc
dec
aas
imul
inc
sub
cs
mov
popa
and
adc
adc
and
inc
negb
aam
ljmp
aad
roll
xchg
out
xor
imul
inc
xorl
inc
pop
js
push
add
dec
stos
sub
xor
push
add
sub
aaa
mov
dec
mov
sbb
and
test
arpl
add
pop
xchg
xchg
or
ret
stos
out
sub
adc
jmp
cmp
lret
jp
cs
mov
lea
scas
or
mov
inc
pop
xchg
push
mov
shll
icebp
pop
xchg
daa
jle
cmp
lea
int3
fcmove
mov
xor
pop
bound
mov
inc
out
xchg
int3
ret
cmp
push
ljmp
dec
pop
je
icebp
cmpsb
pusha
push
mov
fimull
xor
fidivl
jb
dec
pop
pop
stos
cmp
lret
fnstsw
lods
pop
jmp
pop
push
into
pushf
sub
fidivl
les
mov
cmc
imul
pop
xor
adc
push
xor
mov
lds
sub
pop
adc
orl
stos
cwtl
aam
ret
mov
dec
xchg
push
cmpsl
shll
mov
imul
jp
sub
xchg
jb
mov
pushf
and
jp
pushf
xor
test
xchg
cltd
cmp
dec
mov
mov
out
mov
arpl
les
sbb
pop
cmp
push
fdivrl
aad
pop
shlb
push
cs
push
in
stos
mov
outsb
push
lret
data16
jo
sarb
mov
inc
daa
int3
jb
dec
and
repz
in
popf
arpl
pusha
fmull
fisubrs
testl
push
adc
xor
xor
sub
rorl
sub
in
pusha
aam
cmp
jg
mov
loope
cmc
daa
xor
lock
mov
mov
sti
pusha
movsl
stos
ret
push
dec
pop
jle
pop
xor
mov
push
aam
xchg
or
xor
cwtl
xchg
or
push
jae
loop
dec
stos
pop
rcrb
xor
xor
push
pushf
arpl
push
mov
cmp
pop
cmp
shl
add
inc
cld
xor
dec
pop
ficoml
lret
xor
mov
pop
push
stos
xchg
lret
lods
xor
and
inc
jbe
out
fstl
imul
fwait
add
movsl
stc
mov
jbe
pushf
cltd
in
bound
inc
mov
sbbl
push
lret
cmp
fcmovne
pop
aaa
int
jl
inc
xchg
lret
lret
add
mull
movsl
push
mov
sbb
arpl
add
mov
sbb
imul
clc
pusha
imul
into
xor
stos
add
push
sbb
cmp
test
popa
aam
xor
push
lahf
lds
aad
inc
mov
mov
jbe
mov
aaa
and
inc
inc
mov
pop
jae
sti
mov
push
sahf
mov
push
sti
call
lahf
ficomps
mov
loope
pop
mov
sbb
xchg
es
jb
xchg
or
aad
push
bound
jmp
jns
adc
fsts
push
cmp
sub
xlat
shrb
xor
imul
or
adc
jne
mov
dec
xchg
inc
inc
and
cmp
xchg
xchg
je
xchg
jno
push
xor
andl
pop
or
jbe
jmp
lret
mov
clc
out
rcrl
jecxz
xchg
int3
popf
mov
jmp
pop
into
test
jae
mov
mov
mov
lahf
sbb
inc
mov
mov
clc
push
std
lock
push
lret
inc
cmp
xchg
fdivrs
dec
jl
dec
jmp
inc
shll
push
sub
shll
mov
arpl
icebp
fcmovu
addl
push
popa
lock
dec
cmp
pusha
out
push
jl
pop
mov
les
stos
push
jl
mov
movsl
pop
lret
sbb
mov
sarl
dec
loope
sub
cmp
scas
imul
pop
flds
test
or
jmp
jae
xchg
adc
and
push
or
xor
daa
dec
or
inc
arpl
xor
jecxz
sahf
cmpsl
push
sbb
adc
dec
fstpl
mov
push
cmp
sbb
addb
mov
jno
pop
sbb
cmp
insl
push
movsb
imul
cmpsb
mov
push
cmc
inc
mov
mov
and
sub
dec
popa
adc
jb,pt
or
xchg
push
stc
stos
rcrb
mov
dec
cmp
bound
add
dec
adc
shrl
stc
inc
mov
jno
sbb
mov
xlat
xor
pop
jmp
xchg
out
mov
add
jmp
pusha
hlt
aad
xorl
loopne
inc
mov
xchg
in
add
testb
adc
sbbl
lods
inc
lret
in
test
popf
sbb
clc
adc
and
cmp
mov
popa
add
dec
and
mov
pop
shll
imul
add
in
fldcw
cs
lahf
addl
push
setle
mov
jl
test
push
push
cmpsl
adc
push
in
cli
add
mov
dec
add
sarb
mov
add
scas
in
icebp
mov
sub
jge
push
mov
cmp
sbb
cltd
push
aas
repnz
jp
call
xchg
outsl
jge
nop
jbe
sub
stc
ljmp
inc
and
inc
inc
xor
sbb
jnp
repz
je
scas
cmpsb
add
jnp
push
lods
mov
mov
xor
dec
xchg
movsl
das
pop
jmp
jne
sub
or
xor
mov
ljmp
mov
cmp
xchg
xor
cmp
dec
push
xor
mov
shrb
jbe
xlat
ret
inc
sub
adc
xor
insl
sti
cltd
xor
stos
sti
and
rcrb
cmp
loopne
xlat
mov
push
xchg
adc
mov
or
test
scas
sbb
out
testl
mov
cmp
push
out
sub
cltd
scas
pop
mov
jle
ss
jge
aam
imulb
lcall
add
lahf
and
mov
jecxz
cmpb
movsl
js
int3
add
mov
movsl
and
pop
lds
popf
ja
xchg
xchg
cmp
stos
loope
shll
jge
cmp
push
fbstp
push
fabs
mov
ds
jge
jnp
inc
int3
jge
sub
arpl
jmp
add
jno
int3
jno
cmp
cmpsl
mov
mov
jge
sub
adcl
sbb
push
fwait
mov
xor
xchg
jge
add
das
pusha
movsb
fwait
scas
xor
mov
fidivl
mov
lds
dec
dec
inc
pop
std
cli
stos
rcrl
push
lods
icebp
aad
fisubl
jmp
pop
pushf
outsl
cmpsb
sbb
lods
push
sti
rcrb
push
fucomp
dec
imul
xchg
ds
push
out
ljmp
sarl
mov
inc
xchg
pop
add
mov
or
hlt
fstpl
or
push
ds
inc
dec
jnp
mov
std
outsl
jg
mov
cltd
stos
mov
cmpsl
push
loop
or
dec
scas
test
out
aad
mov
and
sub
xor
pushf
cli
push
pop
xchg
mov
fistpll
add
and
loop
ss
insl
mov
xchg
mov
lret
fwait
lods
pop
lds
cmp
dec
sbb
push
rcrb
cmpb
jne
adc
inc
sub
cmpb
inc
push
js
mov
jns
dec
mov
inc
mov
nop
lea
and
sub
arpl
sbb
add
pop
lret
add
ss
popa
mov
fdivrs
inc
add
mov
mov
js
movsb
and
bound
cmp
inc
mov
fs
mov
sbb
and
push
adc
cmp
or
popf
and
ds
mov
loopne
inc
mov
jecxz
inc
add
in
out
sub
popf
inc
mov
add
out
sub
into
adc
pusha
cmp
shlb
sarl
add
cmp
add
and
push
loope
shrl
scas
rcl
cs
imul
not
iret
mull
filds
stc
push
mov
jnp
push
push
je
mull
idivb
mov
bswap
in
jnp
insb
filds
fcomi
and
mov
mov
pop
idivb
mov
xadd
cmp
cmpsl
jge
pop
in
jnp
push
cmpsl
insl
filds
jnp
push
pop
sti
push
fcomp
not
mov
mov
sti
push
cwtl
fcomi
rcr
pop
cli
jae
or
int
add
sub
pushf
jbe
mov
xchg
jbe
or
mov
add
shll
data16
push
sarl
add
add
je
jmp
mov
mov
pop
xchg
ret
mov
pop
dec
add
sbb
aas
mov
cmp
daa
mov
push
cmpsl
cmc
jne
add
cmpsl
pop
push
pusha
das
pusha
jge
xor
nop
cmp
pusha
mov
sbb
clc
xchg
mov
sbb
and
sbb
push
sbb
or
cmc
dec
mov
add
int3
ficomps
sub
pusha
push
dec
ficompl
adc
mov
repnz
xchg
nop
pop
push
test
dec
jmp
mov
rolb
call
test
add
sub
test
loopne
jb
scas
orb
test
push
cld
push
mov
jle
and
outsl
adc
and
lds
repz
push
jbe
cmp
cld
enter
jl
push
in
add
xchg
or
mov
or
es
fisttpl
pop
test
cmp
jne
dec
je
in
cmp
xchg
andl
clc
xchg
ja
enter
or
mov
adc
leave
test
pop
jns
add
test
inc
mov
push
jl
inc
mov
jl
lea
inc
adc
cmp
sbb
stc
lea
xchg
outsl
push
das
iret
popf
into
sub
mov
aaa
dec
mov
sti
xchg
jo
cs
jno
fmuls
cld
add
mov
int3
cmp
mov
sbbl
push
sub
loope
mulb
inc
shlb
mov
sbb
xor
dec
out
loopne
or
ss
and
adcb
or
mov
add
nop
ja
mov
das
sub
call
and
fs
jmp
and
pop
test
mov
xchg
push
xlat
ret
cs
lds
repz
mov
clc
hlt
xor
mov
shlb
aad
adc
into
fisubl
jns
adc
rcr
test
cltd
ljmp
add
sbb
out
mov
out
mov
lea
mov
cmp
enter
push
fdivs
push
cmp
jmp
pop
sub
push
xor
mov
push
mov
je
push
or
insb
pop
std
and
adc
xchg
pop
je
popa
jbe
add
scas
mov
imull
out
jp
ljmp
jmp
idiv
idiv
repz
mov
std
push
sti
pushl
mov
mov
ljmp
jmp
idiv
idiv
repz
mov
test
ljmp
inc
pushl
mov
mov
mov
mov
mov
jmp
jmp
idiv
idiv
inc
jg
mov
cli
cli
push
idiv
push
ljmp
call
sahf
mov
jmp
idiv
idiv
xchg
mov
mov
leave
lret
ljmp
out
stc
call
xchg
sahf
mov
jmp
idiv
idiv
xchg
mov
mov
lret
out
jp
push
incl
lcall
mov
cli
cli
call
incl
add
cltd
mov
