push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
mov
jle
xorb
into
xor
xor
ja
or
adc
bswap
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
mov
sub
fs
and
cmc
jle
mov
lahf
out
inc
mov
mov
cwtl
push
push
subb
arpl
jl
loopne
aam
repz
clc
in
push
hlt
jge
mov
pop
mov
or
pop
and
movups
or
clc
xchg
les
or
fldl
sarl
inc
lcall
or
sub
and
leave
inc
out
mov
jmp
pop
mov
dec
jg
sbb
in
dec
arpl
inc
mov
cwtl
fstps
push
pusha
cmp
jbe
lcall
int
lcall
sti
dec
xorl
out
or
in
mov
adc
cs
push
xor
sbb
notb
push
test
cli
ja
fwait
xor
add
push
out
mov
dec
xor
jp
movsl
pushf
jo
xor
test
pop
loopne
xor
int3
push
dec
psubusb
int3
aaa
adc
dec
outsl
ficoms
push
lret
idivl
sar
pop
lret
push
cmp
rcrb
iret
xchg
sub
aas
mov
popa
mov
pusha
sbb
pop
push
push
mov
mov
fstpt
sti
pop
add
fidivl
sub
hlt
daa
pop
enter
arpl
cmpsb
xchg
cltd
movsl
fsub
sub
outsb
lock
shl
xor
sbb
call
or
out
lods
inc
xchg
arpl
adc
jle
sbb
fidivs
js
sub
gs
int3
ds
jp
out
xor
les
aas
push
xchg
adc
repnz
sbb
imul
out
sbb
xchg
imul
jecxz
xchg
jl
or
add
loopne
shrl
cmp
push
popf
cmp
pop
iret
cs
mov
inc
lahf
cmpb
data16
orb
inc
les
pop
lcall
and
jbe
imul
lods
stc
mov
fmuls
or
dec
xlat
sub
scas
addr16
jno
ljmp
in
adcb
outsb
daa
in
je
pop
mov
mov
dec
adc
jmp
aad
jnp
sbb
cmpsl
bound
outsl
repz
xchg
and
pop
cmp
int3
jge
test
imul
push
or
inc
jb
mov
call
xor
fsubs
cmpsl
dec
outsb
add
jo
popf
or
add
out
add
daa
sub
lahf
pop
pusha
cmp
jb
push
sub
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
mov
jle
xorb
rolb
cmc
xor
dec
cmp
add
and
out
nop
jg
out
push
lahf
push
push
sbb
cmp
test
or
cmpsl
adc
cmpsb
mov
or
pop
arpl
popf
nop
add
icebp
add
add
pop
scas
popf
jae
and
adc
or
scas
shll
iret
or
iret
or
das
xchg
insb
push
imul
dec
jle
add
xor
enter
or
sbb
addb
push
push
and
cltd
call
mov
out
xchg
inc
test
imul
es
dec
js
leave
cmpsl
loopne
inc
add
shlb
or
push
mov
sub
jae
fistps
inc
mov
filds
aaa
das
je
push
mov
inc
filds
movsl
int
pop
xchg
mov
cwtl
fwait
inc
loop
sarl
popf
jge
lret
mov
jnp
jmp
enter
out
and
js
xchg
test
scas
jl
or
pop
enter
cmp
jbe
mov
dec
push
andb
mov
imul
dec
push
jp
cmp
jnp
cmp
dec
and
dec
pop
sub
cwtl
or
cwtl
pop
mov
repz
xchg
scas
popa
push
push
xor
into
push
fcomps
ljmp
push
pop
icebp
jne
mov
mov
add
and
adc
push
push
xchg
mov
divb
jne
dec
dec
cwtl
mov
jp
data16
out
es
jnp
adc
lods
mov
enter
mov
xchg
fwait
inc
mov
mov
cmpsl
das
sub
imul
faddl
das
adc
mov
sbb
addl
sbb
inc
or
sti
shrl
cld
mov
loope
call
and
xor
pop
rcrl
or
dec
testb
test
mov
mov
sti
sbb
push
std
cmp
test
sbb
inc
cltd
mov
pop
sub
mov
fcoml
inc
jno
inc
in
pop
or
subl
push
daa
add
push
dec
outsl
inc
data16
sbb
filds
jne
pop
or
shl
out
xchg
ret
loope
imul
out
inc
andb
mov
adc
arpl
fisubs
test
dec
mov
add
pop
push
jmp
inc
pop
sbb
cmpsb
cmpsb
pop
int3
jae
xor
fst
bound
jp
loope
push
push
in
loope
and
movsb
lcall
fdiv
xchg
mov
sbb
jns
inc
inc
xchg
xor
inc
sbb
and
js
into
cmp
rorl
mov
push
adc
les
mov
stos
add
pop
lock
ret
push
ret
rcll
pop
cmp
sbb
insl
imul
addr16
xchg
push
mov
xchg
rol
hlt
fs
cli
adc
insl
cmc
gs
ds
xor
xor
or
insb
sbb
outsb
int
bound
or
mov
negl
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
pop
dec
inc
outsl
push
jne
jle
jno
jle
scas
push
scas
dec
add
pop
and
mov
pop
ja
add
es
shlb
mov
xor
sub
cmp
clc
insl
lret
sbb
fdivs
xchg
add
ljmp
jnp
sub
adc
adc
test
sahf
inc
arpl
scas
sbb
aas
jl
mov
scas
inc
and
mov
mov
inc
push
loop
andl
icebp
fisubs
and
adc
push
push
mov
mov
les
adc
ds
shlb
dec
pop
xor
aaa
mov
add
pop
push
pusha
inc
dec
loope
pop
push
or
cltd
rclb
jbe
mov
inc
test
adc
pop
lods
dec
jb
jno
jno
xchg
xchg
push
push
add
testl
popa
repz
inc
pop
and
loop
pop
xchg
mov
dec
push
dec
dec
movsl
iret
dec
mov
out
mov
pop
pop
pop
in
dec
xchg
out
test
mov
mov
jle
add
mov
inc
xlat
cmpsb
xor
xchg
jbe
push
ss
ds
mov
outsb
out
jno
pop
mov
xor
test
mov
imul
in
xchg
sub
lea
loopne
and
push
cs
dec
rorl
adc
lock
out
fmuls
ljmp
in
aad
mov
fsubr
dec
leave
pop
mov
subl
or
repz
je
icebp
jmp
test
cmp
jno
jne
xchg
jge
xchg
loopne
pop
mov
pusha
mov
cld
nop
xchg
movsb
push
mov
icebp
shlb
fstpl
and
and
sub
jo
jle
pop
ds
mov
cmc
mov
cli
pusha
push
mov
ja
fiaddl
and
pop
xor
xchg
aas
mov
xchg
sbb
inc
push
es
arpl
jnp,pn
ret
push
sbb
test
pop
mov
add
jae
std
adc
sbb
scas
pop
add
popa
popf
mov
stos
arpl
dec
shl
in
sbb
fisubs
pop
fisubrs
and
jns
lock
fwait
repnz
jmp
pop
jecxz
jle
jmp
sbbl
and
sahf
and
mov
js,pn
test
mov
mov
push
mov
xor
xlat
shl
push
lods
sti
je
cmp
mov
dec
dec
aaa
inc
mov
dec
pop
popa
mov
cmpsl
dec
mov
ljmp
ja
jp
test
mov
stc
jb
mov
std
dec
cmp
push
mov
hlt
push
xchg
xchg
das
sub
mov
jno
je
adc
sti
dec
imul
std
pop
aam
shll
data16
xchg
push
inc
rcrb
mov
mov
sahf
jmp
add
cmpsl
cmp
add
xchg
ja
loope
sbb
les
mov
repnz
rolb
popf
fwait
pusha
push
sub
or
test
pop
add
xor
mov
push
sbbb
inc
mov
fs
ljmp
inc
lock
iret
push
bound
das
lods
ds
pop
mulb
loop
mov
pop
mov
jne
inc
mov
mov
movl
jmp
pop
nop
jl
jge
and
jns
fldl
jle
jno
jle
jl
adc
jbe
jp
out
in
push
cmc
jne
outsl
fistl
nop
popa
push
push
pusha
fdivrl
arpl
inc
jb
cmp
mov
xor
cmpsl
mov
pop
jno,pt
es
ficomps
dec
add
cmp
xchg
lock
mov
sbb
push
sbb
jnp
icebp
scas
cmpsb
sub
jae
clc
jne
push
add
pop
mov
loope
xchg
aad
gs
sbb
lahf
add
add
loop
scas
pminub
int3
sub
xor
sahf
push
mov
xlat
es
cmp
lcall
loopne
push
push
popl
mov
push
sbb
mov
cld
fdivrs
dec
ret
mov
inc
and
dec
xchg
hlt
or
jb
popl
iret
aaa
dec
mov
xchg
lcall
adc
mov
imul
aam
rcl
xchg
lcall
inc
jle
dec
fwait
pop
dec
cmp
push
inc
jg
fisubs
xchg
mov
loope
xlat
xor
mov
lods
and
sbb
push
sarb
dec
xchg
shll
mov
pop
lock
inc
ljmp
xchg
imul
pop
xor
push
add
dec
jg
push
sbb
adc
scas
fidivrl
dec
test
test
sub
pushf
test
aaa
dec
sub
mov
cltd
pushf
xchg
push
or
adc
jbe
pop
sbb
pop
mov
sti
lahf
mov
xorb
lret
push
mov
sahf
xchg
push
and
insl
mov
pop
cwtl
lret
mov
mov
incb
loop
pop
cmp
frstor
push
mov
lods
testl
std
sub
fwait
mov
sbb
ss
addr16
pop
sahf
mov
outsb
gs
jge
mov
lcall
pushf
aad
mov
xor
clc
mov
pop
faddp
pop
jmp
push
or
or
jg
mov
and
mov
das
sbb
jecxz
mov
xchg
aad
adc
cmp
push
or
lock
cmc
sub
scas
adc
lret
jo
in
mov
pop
jle
scas
xchg
mov
adc
das
movsl
xor
sbb
mov
xor
inc
lock
jo
add
sbb
xchg
push
je
imul
loopne
test
sub
xchg
or
mov
dec
pop
jbe
ret
rol
mov
leave
sub
inc
pop
mov
dec
sbb
insl
or
jp
jg
jmp
loope
gs
and
ljmp
imul
jmp
scas
lahf
rcr
or
push
jno
and
repnz
clc
mov
ljmp
shl
jge
jmp
sbb
fldl
jge
or
jo
subb
xor
lret
and
adc
shll
xchg
pushf
mov
dec
test
pushf
adc
or
std
lds
sti
pushf
imul
dec
push
and
sarb
mov
and
add
lock
jle
in
in
mov
loopne
outsb
mov
movl
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
clc
xchg
pop
mov
mov
rclb
jbe
fsts
xor
and
in
insl
call
push
mov
mov
sti
ret
xchg
test
inc
and
fld
pusha
dec
imul
xchg
lcall
and
push
fmull
mov
mov
push
dec
lods
in
ficomps
imul
mov
and
xor
repnz
pop
xor
lock
pop
jne
pop
add
jb
lcall
sbb
filds
dec
in
pop
fdivs
jb
fisttps
sarl
xor
mov
cs
or
popf
jmp
sub
mov
inc
pop
sub
test
cmp
push
das
ds
aam
inc
hlt
ficoms
cli
or
sbb
ljmp
add
xchg
fwait
mov
push
xchg
mov
popa
or
mov
lea
outsl
mov
ss
int
sbb
mov
js
outsb
sbb
enter
outsl
scas
mov
negl
gs
xchg
or
roll
inc
jle
sbb
out
fwait
sbb
clc
pop
dec
add
and
add
mov
mov
cmp
xchg
iret
mov
add
push
mov
jns
lcall
push
enter
mov
gs
jo
data16
xchg
jbe
add
cmp
sub
adc
sbb
push
pop
push
inc
jmp
pop
jle
popf
notl
push
cmp
pushf
dec
pop
pop
adc
push
cmp
movsl
rorb
std
xchg
gs
jecxz
push
ljmp
ret
cmp
cs
jne
push
push
xor
jmpw
jns
sbbb
pop
cmp
dec
dec
stos
test
out
push
pushf
insl
into
inc
lods
push
mov
fistpl
pop
sbb
movsb
fisttpll
lahf
jno
xacquire
pop
push
icebp
mov
imul
xchg
sub
push
ja
fldt
mov
lea
lods
test
sti
xchg
popa
add
clc
cmpsb
ja
xchg
cmpsb
mov
dec
aas
adcb
adc
xchg
sbb
roll
fstps
mov
mov
or
pushf
cmpps
jg
mov
inc
xchg
jns
sub
fucomi
lahf
jno
rorb
add
push
test
xchg
call
fisttpl
sbb
and
add
cmp
roll
test
lods
stos
pop
mov
ja
movsb
arpl
sbb
repnz
arpl
gs
jle
fsubl
dec
aad
in
daa
jp
inc
das
int
aaa
repz
sub
add
cmp
rol
pop
cmp
cmp
rol
cs
ljmp
pop
sbb
clc
push
movsb
orb
and
je
pop
and
fwait
adc
xchg
shrb
cmc
or
leave
xchg
cmp
add
inc
jmp
and
mov
xor
sbb
jp
cmpsl
inc
mov
mov
fwait
mov
xor
xchg
mov
inc
and
pop
push
lods
xchg
mov
outsb
cs
jge
stos
xchg
inc
ror
adc
out
test
inc
push
inc
add
add
add
add
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
push
pop
lcall
jle
repnz
sub
sti
mov
stc
je
sub
popa
sub
pop
mov
jnp
pop
cmp
sahf
scas
xchg
sti
sbb
cmp
sbb
ds
aas
sub
mov
jae
or
push
scas
push
fcomi
xor
mov
sub
outsl
test
sbb
mov
sub
push
rcl
push
mov
sbb
out
adc
lods
sbb
addr16
pop
pop
addr16
or
xchg
sub
mov
imul
outsb
scas
call
pop
cmpsl
dec
xchg
iret
sub
push
in
push
stos
sbb
mov
lods
pusha
adc
je
cld
mov
outsb
cmp
or
ret
test
xchg
sub
ret
pop
movsl
ret
add
push
jne
jle
adc
adc
hlt
es
jmp
mov
pop
sti
pop
aam
mov
mov
xor
stc
cmpb
mov
add
rclb
mov
xchg
stos
mov
mov
cmp
sub
aad
or
in
stos
xor
rolb
hlt
jmp
aaa
jns
push
in
arpl
ret
and
inc
jb
dec
mov
stos
sbb
cli
test
cmp
or
xchg
inc
fisttpll
inc
loopne
jg
pop
mov
pop
outsb
sahf
outsl
sbbl
js
mov
or
fstps
or
pop
xor
mov
jae
jne
sbbb
add
inc
adc
divl
lods
xchg
dec
mov
inc
jnp
jge
mov
cmp
fwait
pop
mov
loopne
mov
fimull
mov
bound
sub
ljmp
pop
pop
mov
aad
in
sbb
mov
cs
rolb
cmp
cmpsb
add
and
int
mov
cmpsl
cli
push
ja
out
sahf
les
lahf
test
push
lods
xchg
adcb
sub
stos
push
dec
dec
mov
jbe
dec
pop
xchg
mov
std
es
fisttpl
sbb
sub
push
pop
sahf
sub
imul
lret
mov
mov
dec
loope
aaa
in
add
rsm
dec
out
bnd
lcall
rclb
mov
outsb
xor
mov
aaa
fs
fxch
cwtl
daa
xor
movb
dec
xlat
adc
arpl
es
enter
jb
ljmp
cmp
test
in
add
clc
inc
cmp
or
subl
outsl
and
cmpl
mov
dec
shl
mov
popf
cmp
mov
pop
dec
pop
dec
repnz
xor
aad
scas
aad
movsb
mov
repz
mov
in
call
packsswb
sbb
jle
lret
cmp
sbb
push
fildll
and
fwait
mov
jl
jae
filds
js
cli
sub
push
xor
inc
aas
andl
push
push
mulb
ret
xchg
sbb
or
incb
mov
jge
push
inc
cmp
test
inc
fldt
push
in
xchg
imul
mov
shr
sub
jg
dec
ret
orl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
mov
fwait
and
jle
xorb
push
and
sub
mov
jge
pushf
scas
pop
outsl
out
sbb
mov
xchg
mov
testl
fs
pop
test
and
iret
inc
dec
lods
mov
scas
and
mov
stos
xchg
rcrl
insb
stos
call
shll
dec
mov
idivl
adc
rcl
and
aad
dec
out
sub
mov
lcall
sub
movsl
push
lods
lret
jge
out
rcrb
aaa
push
cld
mov
iret
mulb
aaa
ficompl
out
test
mov
mov
cmpsl
ret
in
cmp
orb
cli
lcall
lea
movsb
xchg
in
push
sbb
dec
imul
out
jnp
pop
rcrb
shrb
cltd
mov
adc
fdivrs
push
and
lret
ficomps
aas
pop
xchg
lds
add
pop
mov
mov
or
popf
jne
dec
xor
xchg
pop
xchg
lock
aad
dec
gs
or
popl
arpl
loopne
clc
jecxz
jnp
in
cmpsl
mov
mov
icebp
fiadds
xor
insl
add
add
test
data16
mov
xor
mov
add
xchg
cld
add
lret
lods
xor
xchg
out
rclb
outsl
scas
lods
scas
testb
pop
aad
pop
inc
add
aaa
adc
cmp
mov
add
es
rcr
shr
cld
pop
add
and
push
loope
xchg
push
int3
xchg
and
sbb
dec
rcll
loope
loope
xor
dec
cmp
dec
aaa
aaa
cmp
push
mov
pushf
mov
xor
push
xor
push
mov
lret
and
adc
dec
and
xlat
or
adc
adc
mov
out
cmpsb
and
icebp
and
fmulp
jb
sahf
stos
mov
mov
movsl
fldt
mov
xchg
stc
add
popf
push
mov
imul
iret
sbb
xchg
lods
sarl
mov
leave
inc
adc
jl
notb
push
loop
cld
push
stos
dec
mov
int3
lcall
or
sahf
push
in
jge
cwtl
loop
inc
sub
insb
filds
mov
mov
push
movsb
imul
out
cmp
cli
sub
cmpb
dec
cltd
mov
fistps
mov
xor
mov
sub
or
jne
mov
outsl
adc
imul
insl
push
pop
fldl
jle
xchg
into
iret
add
cltd
mov
jo
pop
sbb
es
jle
xchg
cmp
xchg
lahf
cmp
adc
test
xchg
jmp
mov
int3
inc
imul
int3
test
fwait
sbb
clc
icebp
out
sub
lock
outsb
int
cmpsb
sbb
jle
roll
iret
scas
or
dec
sbb
sub
mov
mov
xor
mov
and
cwtl
aad
mov
das
jmp
adc
dec
jnp
jnp
pop
popa
lea
mov
pop
addb
pop
push
outsb
sahf
lods
and
push
cmp
inc
lock
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
aaa
lcall
xorb
mov
pop
lods
pop
cmpb
ficoml
lock
push
sub
fs
pop
jecxz
push
and
pop
or
push
into
fisubrl
mov
add
inc
pop
jnp
js
lahf
add
inc
lret
cpuid
imul
mov
in
mov
rclb
std
rcrl
adc
xchg
enter
mov
dec
addb
sub
pop
cmp
pushf
add
push
mov
inc
jno
aaa
outsl
adc
outsl
rcrb
sahf
pop
es
dec
mov
fcmovb
fsubl
dec
stc
mov
ds
pop
mov
mov
rorl
in
movb
xchg
or
daa
fiaddl
loopne
dec
cmp
inc
add
cwtl
push
sti
je
pop
mov
xchg
or
xchg
sbb
inc
leave
xchg
adc
lock
xor
popf
sbb
popf
inc
sub
sub
mov
mov
aaa
sub
mov
iret
shlb
rclb
sub
pop
cs
mov
inc
adc
pop
nop
jp
sub
xchg
fadds
insl
insb
shl
int
lods
bound
add
mov
loope
stos
outsl
jp
adc
out
push
mov
fldcw
sti
in
lds
imul
add
dec
movsb
jb
mov
dec
push
movsb
mov
stos
mov
pop
je
test
outsb
pop
or
das
push
inc
fsts
xchg
ror
dec
sub
mov
dec
stc
mov
je
jecxz
xor
scas
daa
cs
icebp
sbb
cld
in
jae
mov
cmpsb
dec
adc
push
icebp
or
adc
mov
add
mov
mov
cmpsb
subl
bound
and
cmp
cmp
jecxz
insl
ret
outsl
lcall
ret
adc
shll
jne
and
pop
pmaxsw
out
xor
xor
das
push
aas
xchg
stos
lret
shll
xor
jl
jns
mov
jl
mov
pop
rorb
jp
push
pop
in
inc
mov
fnstsw
mov
pop
adc
into
imul
aam
add
or
lds
xor
mov
insl
test
push
adc
jge
pop
adc
outsb
adc
lret
jae
inc
fldl
sub
movsb
movsb
lock
add
inc
xchg
inc
inc
sbb
mov
jle
lock
ljmp
mov
jae
inc
fildll
or
enter
andl
shrb
jle
mov
cli
addr16
iret
mov
lret
mov
cmp
das
xor
pop
add
rcl
add
rolb
sbb
or
nop
es
dec
mov
xchg
add
pop
xor
fsub
popf
or
xor
add
rcrb
mov
mov
pop
orb
pusha
cmp
xchg
dec
fs
lods
lahf
lcall
in
mov
or
mov
mov
insb
and
dec
sbb
push
in
shl
out
lock
in
repz
shlb
mov
mov
jmp
jl
sub
jge
jge
inc
sbb
sbb
xorb
jge
lea
and
aam
push
and
xchg
xor
fstps
sbb
mov
cwtl
je
mov
das
sbb
push
imull
adc
sbb
es
push
iret
iret
xchg
cmpsl
sbbl
mov
sbb
cmp
sub
mov
sar
adc
mov
movsl
mov
push
cmpsb
aas
mov
ljmp
cli
dec
lahf
xchg
cmp
mov
daa
and
rol
in
imul
mov
xor
xchg
insl
jno
push
out
popf
add
xchg
adc
out
insl
jae
stc
insl
shll
mov
lock
fcoms
xor
mov
dec
cmc
into
mov
jbe
jbe
inc
hlt
stos
in
fcoms
repz
mov
insl
rcrl
cli
rclb
sti
inc
rol
sub
xchg
fcoml
cld
cmp
cmp
aas
shl
xor
dec
mov
xlat
adcl
cmp
or
mov
sti
in
mov
sbbb
xor
iret
outsl
xor
sbb
nop
xorb
push
cmc
into
sub
xor
or
lods
ret
xchg
cli
mov
leave
in
mov
cld
bound
adc
xchg
stc
mov
mov
stos
xor
mov
jo
lret
dec
xchg
or
cmc
in
lock
push
cmpb
cli
cmp
ja
shl
add
mov
fs
sbb
mov
sbb
into
test
and
mov
div
pusha
pop
xchg
popf
cli
xchg
pop
dec
jge
js
xor
nop
fbstp
jns
xorl
cld
test
out
xor
cmp
jecxz
xor
mov
or
pop
scas
loop
scas
outsl
cmpsb
mov
push
mov
pushl
test
popf
lret
outsl
loopne
mov
sbb
pop
movsb
popa
push
call
shrb
cmp
pop
mov
push
test
into
push
jo
add
out
stc
outsb
dec
cmpl
pusha
xchg
insl
sbb
movsl
push
xchg
mov
int3
or
scas
push
xor
mov
dec
frstor
test
cmp
std
pop
fists
add
mov
jp
pop
push
pop
dec
mov
inc
fnstenv
out
aaa
xlat
inc
mov
xchg
pop
pop
shlb
or
daa
sbb
dec
mov
inc
xchg
adc
int
add
jmp
push
or
xchg
sbb
lock
push
xchg
scas
inc
jl
testb
out
clc
sub
inc
cmp
dec
cmp
fdiv
sbb
adc
xchg
cmp
in
mov
xor
adc
xchg
les
sub
stos
xor
push
arpl
ljmp
inc
imul
clc
xchg
clc
xchg
inc
dec
xchg
insb
xchg
test
ljmp
jge
test
jge
and
inc
js
cmp
dec
mov
hlt
jae
mov
xchg
sub
les
mov
mov
sbb
loopne
pop
pop
outsl
das
xchg
xor
jge
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
adc
push
jle
xorb
xor
outsb
sbb
int
cmp
testb
sub
mov
inc
inc
xor
inc
jb
dec
mov
addr16
je
popf
dec
pop
jnp
sub
xchg
rcll
pop
sbb
fists
subb
push
jo
add
sub
cmpsb
mov
movsb
cli
scas
dec
incl
pushf
outsb
add
repnz
pop
cli
jo
add
jne
jge
dec
cmc
popf
scas
sub
xchg
repnz
mov
rep
sbbb
inc
sar
add
cmc
in
rcr
mov
inc
int
ret
sbb
sub
push
adc
mov
mov
mov
xor
mov
pop
mov
aad
push
test
mov
dec
mov
cmc
push
inc
mov
pop
outsb
jecxz
push
xor
cmpl
inc
push
std
pop
cmp
test
shlb
mov
fistpll
push
jnp
ret
shll
inc
inc
add
xchg
cmpsb
icebp
mov
data16
mov
push
aaa
pop
jb
push
add
mov
or
std
std
ret
mov
mov
adc
mov
xor
jae
mov
stc
subl
mov
dec
jno
mov
xchg
push
adc
or
mov
not
rcrl
dec
jne
or
or
sbb
sub
loope
lret
mov
scas
call
mov
scas
pop
into
cltd
dec
push
jecxz
cwtl
adc
jecxz
xchg
arpl
pusha
insb
fwait
add
loope
or
rcrb
bound
pop
stos
pusha
xchg
mov
inc
pushf
repnz
rcrb
sub
xor
scas
push
and
sbb
sub
aad
lea
mov
popf
mov
cmp
sbb
int
es
in
or
scas
lret
fs
addr16
js
inc
repnz
in
pop
jno
mov
divb
push
pop
inc
jecxz
adc
repnz
cmp
cmp
lret
push
jnp
call
pop
ret
inc
mov
pushf
xchg
or
jnp
js
stc
dec
xor
loopne
add
sbb
adc
inc
mull
outsb
pushf
ss
and
xchg
mov
adc
call
movsb
mov
rcll
inc
add
cmp
std
lret
push
pop
and
pop
or
jmp
movsb
mov
pop
mov
mov
ret
mov
fs
icebp
cmp
jg
movsb
or
or
inc
sbb
loop
sahf
loopne
dec
or
push
into
mov
xor
gs
mov
pop
clc
mov
xchg
mov
mov
movsl
pop
mov
imul
jle
insb
mov
inc
mov
mov
xchg
jecxz
jne
jb
push
clc
dec
call
pop
test
fwait
icebp
in
std
adc
mov
xchg
je
xor
mov
cmp
jp
push
cld
push
test
repz
sub
std
adc
ret
in
dec
test
clc
ss
dec
out
es
pop
sbb
sub
sahf
faddl
xor
jb
mov
add
mov
shlb
xchg
adc
mov
cmp
test
enter
xor
call
add
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
mov
mov
jle
mov
push
hlt
js
das
jno
mov
in
jl
cmp
jno
icebp
fimuls
ret
mov
push
aad
lret
jl
les
loop
xor
inc
repnz
jo
push
sub
dec
int3
cltd
jg
pushf
xlat
mov
mov
cmp
test
add
rol
in
outsb
cli
sub
lods
sbb
out
sub
adc
and
fdivrl
movsb
shlb
int3
out
aam
scas
cmpsl
mov
push
adc
cmc
dec
mov
les
movsb
or
mov
lret
cmp
mov
mov
loop
push
and
hlt
lea
rcll
mov
mov
test
mulb
or
movsb
jno
jb
push
jb
adc
faddl
and
roll
or
sbb
sub
lock
mov
test
and
popa
in
pop
cmp
sbb
bound
hlt
mov
inc
nop
testl
mov
scas
inc
enter
dec
xor
ja
xor
push
mov
test
mov
aam
cwtl
sub
cmp
mov
jb
andl
loopne
add
or
sbb
adc
push
push
and
xor
and
jbe
mull
push
pop
aam
add
xor
xor
stos
and
fcomi
mov
pusha
lods
jge
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
cmc
shll
adc
mov
jle
sbb
adc
aad
push
lcall
sbb
jbe
sbb
pop
jle
rclb
fcompl
insl
push
gs
orl
out
push
adc
push
ret
sub
jbe
test
shl
pop
neg
push
and
ljmp
adc
xlat
adc
test
hlt
sub
jbe
mov
jp
add
loope
xchg
cmp
inc
lahf
cmp
imul
xchg
inc
mov
lea
pop
hlt
mov
mov
mov
stos
cmp
pop
stc
mov
into
fdivl
sub
inc
ja
or
into
out
mov
pop
shrl
inc
cmp
data16
lea
cwtl
scas
int
and
jle
cwtl
jl
add
xor
test
lods
out
repnz
inc
lret
ret
ds
test
inc
xor
js
push
shlb
mov
stos
inc
test
int3
and
add
aad
mov
jbe
or
in
mov
push
loope
loope
loope
jb
sbb
loope
adc
jbe
and
push
pop
iret
push
push
stos
jle
in
aam
cwtl
movsb
fdiv
bound
rcrb
push
push
push
adc
stos
mov
test
int3
pop
test
icebp
imul
outsb
inc
jmp
jns
mov
mov
jmp
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
mov
push
scas
adc
push
popf
dec
pop
mov
lods
daa
fwait
mov
cmpsb
movsl
ds
jbe
mov
lock
shll
inc
subb
add
iret
xor
lods
jecxz
shll
mulb
jp
xchg
and
leave
ljmp
sub
daa
cmc
inc
add
mov
mov
mov
in
movsl
jb
dec
fs
scas
mov
in
push
iret
adc
inc
js
pop
out
and
iret
ds
fwait
mov
xchg
mov
loop
addr16
sbb
xlat
fisubrl
pop
pusha
xchg
hlt
mov
adc
sarl
insl
movb
push
pushf
mov
inc
xchg
cli
lcall
addb
jg
jnp
jecxz
aas
sarb
call
jge
dec
xor
lret
push
imul
das
sbb
mov
xor
adc
lcall
js
mov
push
push
mov
or
xchg
fcomps
push
repnz
and
je
sbbb
loopne
inc
mov
stos
push
adc
cli
fnsave
iret
jb
nop
arpl
mov
mov
sbb
stc
xor
pop
stc
sti
outsb
ret
inc
or
lods
ljmp
mov
mov
cmovns
xchg
jb
push
outsb
add
addl
sbb
mov
jecxz
stos
push
sub
jp
or
clc
jmp
xchg
push
int3
jns
imul
mov
cmpsl
in
push
jle
mov
jle
xor
pushf
or
outsb
sti
je
loope
or
jg
inc
dec
push
andb
sub
leave
sar
or
fsts
out
dec
daa
fsubrl
cmpsl
in
mov
gs
popa
cltd
loop
ds
jnp
test
push
std
adc
xlat
insl
faddp
pop
fcmovu
xor
fs
movsl
push
add
mov
xchg
ja
ljmp
and
pop
std
or
mov
dec
and
and
lods
mov
pop
das
out
add
xor
out
dec
or
in
xchg
imul
jecxz
adc
sar
jbe
shrl
and
fistpll
stc
not
xchg
or
mov
je
or
lret
outsl
lock
pop
pusha
aaa
sub
mov
mov
jb
bound
jo
nop
xchg
in
mov
cld
ret
pop
pop
push
mov
dec
in
popf
and
mov
mov
sbb
pushf
mov
clc
jnp
test
hlt
sub
aam
jl
icebp
xor
lcall
mov
lods
push
xor
imul
jae
add
push
stos
js
adc
pop
jl
shll
or
or
out
cmpsb
fiaddl
imul
mov
cmp
ffreep
pushf
sub
imul
loope
cmp
sbb
data16
pushf
es
lods
daa
inc
dec
fs
rcr
xor
inc
xchg
sub
jge
mov
ret
jae
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
jb
pop
jle
mov
jle
std
js
or
xor
jecxz
loope
jge
and
mov
mov
xlat
out
mov
jo
cmpsl
dec
jge
dec
shl
cld
lock
fimuls
notl
cld
stc
lods
push
cmp
mov
pop
gs
fcmovbe
pop
cmpsb
sbbb
ljmp
and
inc
imulb
je
push
dec
mov
sub
xlat
repz
scas
insl
sbb
out
xchg
rcr
dec
mov
mov
mov
xchg
aas
xor
vandps
xchg
push
lcall
mov
push
fcoms
sbb
pop
adc
mov
sbb
mov
lods
imul
in
lods
outsl
mov
xchg
mov
sub
push
jb
xchg
aam
sahf
inc
lods
nop
sub
lock
cmc
inc
push
and
pop
mov
fsubrs
stc
jae
cmp
dec
jecxz
ja
sub
in
jno
subb
inc
sahf
out
or
daa
loop
stos
add
imul
ljmp
je
pop
push
dec
ja
adc
xor
or
inc
xor
popf
mov
insl
arpl
cmp
inc
push
popa
test
cli
arpl
adc
xchg
cmpsb
outsb
push
sbb
cmc
adc
push
sub
fisttpll
adc
add
pop
pop
jb
push
adc
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
and
imull
jle
mov
jle
sbb
call
hlt
imul
in
jg
nop
cld
xchg
jg
int
bound
std
fs
data16
int3
lods
fisttpll
xor
lcall
sub
pop
fnstsw
stos
std
inc
mov
fsubrs
and
sbb
mov
mov
fmuls
inc
test
daa
pop
xchg
rcpps
imulb
nop
and
push
imul
mov
hlt
push
lahf
xchg
push
inc
gs
or
jno
or
vpsubq
jmp
adc
sarb
mov
push
neg
xchg
mov
stc
dec
subl
push
fxch
push
push
mov
dec
inc
stos
mov
push
movsl
lock
insb
mov
pop
mov
ret
jb
shlb
add
das
pop
jecxz
cld
into
sbb
das
and
lock
stc
pop
inc
cmp
mov
dec
outsl
and
push
jl
mov
fsubr
cmp
repz
jge
sbb
cmp
loopne
in
pusha
aas
cmp
mov
pop
mov
shlb
insl
addr16
into
sarb
repnz
adc
ret
or
add
sbb
push
unpcklps
lods
push
sub
sbb
inc
popf
and
rcr
add
jle
add
sbb
add
roll
or
sub
flds
xor
add
mov
mov
mov
mov
jmp
andb
addw
pushf
add
jle
mov
jle
xor
sbb
jb
sbb
xchg
adc
scas
xchg
cmp
sahf
lock
cmpsl
or
icebp
insl
inc
stos
fmuls
adcl
test
and
jg
lods
popa
fimuls
sti
ss
movsl
lret
jle
xor
je
sarb
gs
and
adc
or
in
inc
les
ftst
pop
leave
jecxz
dec
lea
cmp
sbb
inc
inc
push
ds
mov
scas
push
add
sti
pop
lret
pop
adc
mov
jne
adc
pop
push
and
call
fcoml
ja
clc
cmc
dec
mov
js
cs
push
mov
and
fstps
inc
out
mov
and
icebp
sbb
xor
pop
in
in
mov
mov
ret
or
inc
fstpt
and
test
sbb
pop
std
fwait
es
pop
nop
cmp
dec
adc
cpuid
jge
mov
imulb
or
in
aam
hlt
sarl
sub
ja
in
jno
push
xchg
mov
add
cmp
sbb
rolb
repz
mov
dec
inc
imul
pop
jg
xchg
imul
adc
dec
ss
xor
adc
les
pop
aaa
push
sbb
subb
add
jmp
test
xor
push
mov
xor
cmpl
sub
jle
jg
jle
dec
pop
or
xor
sub
mov
xor
into
std
push
fidivrl
adc
cmp
nop
adcb
jb
pmaxsw
pop
aaa
cmp
rcr
iret
jbe
mov
sete
addr16
jns
and
mov
js
xchg
lret
add
or
dec
cmp
hlt
add
in
ja
je
cld
insb
xor
call
inc
xor
cmp
inc
push
xchg
or
jmp
sub
inc
repnz
mov
test
fcoms
maxps
jnp
pop
mov
popf
pusha
jae
sbbl
inc
movsb
dec
xchg
dec
xchg
aaa
jbe
cmp
jb
call
jae
scas
sbb
mov
adc
cltd
push
cmp
pop
std
lahf
cmpsl
int3
and
lods
adcl
insl
adc
mov
adc
rol
cmpsl
jo
mov
xlat
mov
xor
jmp
addl
mov
mov
inc
in
gs
sub
push
push
mov
pop
cwtl
cmp
lds
pop
loope
jns
int3
push
lock
pop
movsl
js
pop
repnz
lock
mov
adc
and
lret
cmpsl
pushf
test
enter
sbb
jns
leave
in
addr16
add
inc
mov
test
lahf
aaa
loope
jne
stos
xchg
sub
or
data16
fcmovnu
add
lret
mov
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
addr16
and
cs
mov
jle
jp
out
aaa
inc
xchg
cmpsl
or
push
dec
loope
jge
aas
movsb
inc
jno
jnp
jne
mov
std
and
js
test
shrb
sbb
mov
cmp
sub
add
dec
inc
add
gs
out
cmp
sbb
mov
xchg
cld
mov
jne
sub
mov
stc
pop
xchg
mov
pusha
ficomps
das
movsb
xchg
int
dec
push
mov
repz
imul
test
mov
pop
and
packuswb
dec
dec
scas
sub
iret
inc
dec
adc
fsubrp
idivl
pop
pushf
jae
jg
and
cmovg
ret
inc
pop
xchg
in
dec
ss
lock
repz
cmp
imul
mov
jg
ficoms
or
xlat
imul
in
or
pop
xchg
jmp
inc
and
cmp
loopne
dec
fidivs
xchg
adc
sub
in
into
imul
test
int
cld
in
lea
imul
in
and
mov
out
aad
in
xor
xchg
dec
xchg
pushf
adc
dec
movsl
mov
mov
or
lahf
adc
add
mov
jbe
cld
out
mov
mov
push
popa
loop
sub
insl
cs
mov
fnsave
dec
mov
pop
in
xchg
pop
popf
jb
add
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
das
jle
mov
jle
mov
xor
adc
sub
std
adc
pop
jo
sub
rcl
pop
out
push
inc
dec
xchg
or
inc
mov
mov
cld
and
syscall
outsb
lds
lahf
or
sub
jns
rcrb
clc
popf
push
out
dec
test
repnz
mov
jnp
mov
dec
pushf
dec
cmp
out
sub
and
sub
dec
push
xor
adc
cmp
xchg
aaa
add
shlb
or
pop
out
and
cmpsl
push
icebp
jge
ds
adc
dec
jno
pop
jl
push
sub
cltd
in
movl
mov
ret
sub
bound
adc
push
mov
xor
cmp
push
inc
cmpsl
sarb
jno
xor
into
push
shll
insb
sub
xchg
jns
les
mov
dec
pop
out
stc
push
lcall
push
xchg
pop
iret
jo
dec
jge
in
mov
and
push
or
popa
xor
mov
nop
test
test
jg
sbb
dec
fisttpll
adc
mov
pop
cld
sub
cmc
in
ret
in
sub
adc
and
mov
push
push
call
mov
insb
lahf
dec
mov
sarb
inc
pusha
xor
rcrl
out
dec
insb
dec
jbe
cmc
xor
push
pop
test
push
pop
repz
or
clc
add
imul
jmp
mov
jns
dec
mov
fcoms
enter
mov
jle
xchg
jnp
jns
hlt
testb
lods
movsl
mov
ds
mov
pop
pop
loope
in
xchg
pop
add
cmp
and
pop
inc
idivb
pop
xor
dec
sub
and
int3
sub
movsl
lret
dec
fdiv
js
in
gs
mov
xlat
icebp
dec
out
outsl
shrb
movsl
jmp
mov
shll
inc
and
into
int
shrb
mov
push
mov
push
ljmp
push
cmpsb
es
sub
test
inc
jns
mov
lea
cli
adc
rclb
mov
xor
scas
iret
movsb
roll
stos
add
push
rclb
out
xor
or
push
mov
xor
movsb
mov
push
jo
mov
repz
xchg
jmp
adc
push
ds
loop
call
xchg
adc
shll
popa
gs
and
push
mov
mov
cli
ljmp
cmpsl
fst
repnz
inc
mov
sub
cmp
or
inc
jbe
rolb
jno
mov
shl
stos
loop
mov
out
loope
sub
out
jae
test
cmp
pop
cli
shl
sub
mov
int3
int3
mov
rcl
sarl
sub
nop
lods
pop
pop
aam
fwait
shll
dec
xor
jns
js
adc
std
sbb
ficompl
inc
or
call
cs
outsl
adc
aad
pop
call
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
iret
lcall
mov
jle
jbe
ja
cltd
repnz
pop
fcmovu
sti
mov
adc
cli
leave
aad
stc
mov
jbe
dec
hlt
iret
mov
push
insl
jns
mov
dec
sub
mov
pop
in
in
cmpsb
push
dec
jae
stos
mov
xchg
insl
cli
mov
dec
mov
out
adcl
xlat
stc
ret
mov
sbb
loopne
insb
xlat
fimull
inc
cli
jbe
outsb
outsb
xchg
jns
insl
out
std
cmpsl
adc
test
jmp
cmp
gs
in
dec
repz
mov
push
idivl
push
gs
das
xor
ljmp
inc
xor
push
add
xor
test
cmpb
mov
inc
sub
and
jbe
push
paddsb
cs
push
xchg
das
sahf
out
add
aaa
jp
fadds
das
sub
push
and
idiv
lret
bound
push
cmpsb
ja
or
mov
cld
xor
fsubrl
test
call
mov
bound
lea
sbb
cmp
pop
add
cmc
outsb
xchg
ficompl
xchg
lods
bound
nop
adc
mov
adc
lock
sbb
daa
fidivs
inc
mov
or
outsl
lcall
cmp
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
pushf
shlb
jle
jno
jle
movsb
or
mov
pop
out
outsl
mov
inc
inc
mov
push
xor
xchg
mov
and
sbb
cmp
jecxz
in
out
fiaddl
inc
mov
mov
ds
sub
xchg
scas
cmpsb
or
fcompl
mov
scas
lods
inc
mov
stos
cltd
cli
jno
cld
aas
push
in
neg
in
leave
push
lods
inc
cmpsl
ret
mov
stc
dec
std
outsl
loope
pop
adc
jb
movsb
aaa
and
fidivs
rolb
adc
mov
dec
dec
fucomi
mov
and
push
addr16
out
mov
mov
or
inc
cmc
adc
jecxz
sbb
or
popa
popa
sub
push
mov
ja
xchg
jae
push
jae
fwait
aas
xchg
dec
shr
pop
jb
inc
inc
dec
outsb
mov
jl
mov
iret
dec
jne
in
jns
shll
fisubrl
xchg
imul
jns
std
cmp
es
sbb
adc
jb
pop
mov
outsl
filds
and
jno
mov
shl
leave
add
pop
pop
or
ja
mull
pop
into
lock
mov
mov
data16
adc
loopne,pn
in
lret
jb
stc
test
xchg
add
addr16
imul
mov
mov
es
mov
ss
xchg
pop
and
sbb
pop
xchg
xchg
mov
les
push
popa
add
out
pop
xchg
stc
push
xchg
imul
jno
and
dec
and
push
stc
xor
xor
xchg
clc
clc
repz
sbb
scas
ds
aad
jae
scas
shlb
call
ret
sub
xchg
icebp
cmp
xchg
repnz
push
and
sub
iret
xchg
push
loopne
mov
xchg
sbb
into
mov
xor
out
xchg
out
pushl
mov
xchg
cmp
cmpsl
jp
cli
and
sbb
push
xchg
pusha
stos
jge
and
dec
adc
push
daa
dec
ljmp
inc
lods
add
fnstsw
dec
push
push
or
cs
js
xchg
jl
xchg
xor
adc
jp
xor
daa
and
pusha
cmp
mov
loopne
enter
mov
test
setl
mov
ljmp
pop
out
fsubrl
sbb
movlps
shl
dec
and
xlat
fs
push
sbb
repz
fwait
ret
jb
aad
loope
int3
cmpsl
mov
mov
inc
ret
lahf
mov
xlat
mov
sub
call
cmp
add
pop
mov
xor
pop
push
xor
and
fscale
into
cwtl
and
jns
dec
jbe
inc
and
push
fcmove
mov
aaa
pop
mov
push
addr16
mov
or
jns
jnp
sti
lahf
jb
xor
in
inc
pop
stos
adc
mov
std
mov
ljmp
jbe
or
aad
add
jnp
inc
add
push
and
cmp
cmp
in
loope
aaa
cmp
xlat
cmpsb
clc
jle
xor
hlt
jbe
xchg
pop
ficomps
mov
fs
jge
push
lods
mov
pop
pop
push
sub
dec
dec
fdivs
sub
into
ret
lahf
pop
xchg
jnp
imul
pop
or
add
cld
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
test
cmp
mov
xor
mov
mov
push
test
mov
repnz
movsl
cmc
popf
hlt
push
cmpsb
inc
mov
inc
js
ds
movsl
or
sbb
sbb
lahf
testb
push
push
hlt
push
jle
mov
movsl
xchg
xor
loop
jno
fldcw
cld
pop
aas
out
add
arpl
roll
and
cmpsl
std
xlat
ret
es
test
in
fwait
psraw
jge
fldt
lods
ja
mov
in
and
cmpsl
sub
pop
aad
je
lods
subl
xchg
push
out
loopne
ds
inc
inc
or
fstpl
or
cmpsb
and
insl
leave
dec
ds
inc
mov
in
out
push
pop
push
lds
insb
pushf
in
es
inc
fcmovnb
stc
mov
cmpsb
and
ffreep
adc
sahf
lret
jbe
dec
inc
xor
mov
insl
stos
icebp
mov
leave
push
adc
adc
in
ficoml
lret
lret
les
push
out
or
dec
outsb
push
mov
lods
jg
lahf
cmp
xchg
mov
or
lcall
sbb
nop
mov
cmc
out
leave
insb
in
int
jbe
pop
andb
sbb
pop
push
inc
into
inc
jns
dec
xor
inc
mov
in
pop
aaa
scas
sub
cmp
mov
jge
aam
xchg
addr16
and
push
jno
adc
incb
jg
clc
push
push
fiadds
and
lahf
cmp
mov
jg
push
pop
aad
in
out
mov
xchg
dec
lock
rorb
imul
les
or
sti
jl
jg
bound
adc
jg
in
clc
les
cmpsl
pop
sbb
int3
xchg
ret
xchg
movb
movsl
test
les
jge
pop
adc
dec
bound
mov
push
loop
jecxz
dec
mov
arpl
xchg
mov
mov
push
mov
push
aas
jae
jns
lods
push
jno
xchg
cmpsb
outsl
rcrb
adc
cltd
inc
leave
push
push
adc
mov
adc
mov
ficoml
repnz
cmpsl
nop
adc
out
cld
xchg
jp
mov
sti
jno
scas
adc
push
jle
xor
mov
nop
push
add
dec
lea
xchg
test
push
jns
mov
aad
dec
push
mov
mov
push
mov
adc
outsl
sbb
jae
and
xchg
mov
mov
xlat
jno
idiv
inc
xor
push
jmp
stc
and
bound
and
out
lcall
int3
dec
sbbl
cmpsl
push
cmp
inc
mov
jne
jbe
push
movaps
and
xor
loope
jnp
jno
adc
stos
neg
add
jns
pop
scas
sub
test
out
cmpsl
inc
jb
inc
aas
in
or
ja
jns
movsl
fidivl
mov
xchg
sahf
loopne
shll
mov
or
aam
jecxz
sub
pop
dec
cmc
sub
nop
xchg
sarl
lods
out
jmp
ss
imul
sub
sbb
jge
xchg
sbb
lcall
or
mov
fwait
popf
add
rolb
stc
daa
aad
popa
dec
imul
xchg
ret
and
mov
or
das
repnz
mov
adc
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
sbb
fistl
jle
mov
mov
jmp
add
push
repz
jbe
and
test
jmp
bnd
loopne
xor
clc
sbb
add
dec
xchg
mov
in
lds
lret
popf
xlat
and
imul
pop
jbe
or
movsb
or
int
in
sub
xlat
sti
movsl
clc
sbb
pop
dec
sub
dec
mov
jmp
adc
lret
sbb
and
ds
lods
inc
add
shlb
dec
push
dec
mov
or
loope
jg
sti
push
mov
popa
xchg
nop
ds
or
and
stos
outsl
sub
je
stos
add
lahf
pop
push
cmpb
sarl
nop
jae
les
pop
jnp
sub
push
xchg
dec
subl
add
add
in
popa
icebp
adc
xor
sub
add
iret
repnz
or
pusha
outsb
and
das
sub
mov
cmc
fistl
test
movsb
js
jnp
nop
addb
xchg
mov
push
and
xchg
jnp
cwtl
sub
inc
pusha
jp
push
jbe
xchg
or
push
scas
xchg
std
adc
loopne
sbb
repnz
scas
xor
mov
mov
filds
pop
test
loop
xchg
aaa
cwtl
sbb
nop
mov
dec
or
fldl
inc
inc
cmpl
fimuls
int
add
jle
mov
xchg
orl
pop
jno
jecxz
ficoml
out
xchg
ret
adc
pop
add
fstpl
repz
xor
andnps
mov
mov
mulb
in
xor
decl
mov
pop
aam
sbb
popa
in
imul
mov
call
add
cmp
pop
data16
std
cmp
shll
dec
aam
insl
pop
es
or
or
xor
int3
scas
mov
cwtl
sub
dec
cltd
dec
outsl
adc
xchg
jmp
push
mov
push
inc
je
inc
es
and
cli
sbb
mov
or
add
jbe
fnstcw
dec
cmp
push
repnz
gs
pop
mov
movsb
mov
outsl
mov
imul
and
pop
leave
out
insb
lea
mov
std
stc
loope
pop
lret
sub
xchg
sti
bnd
dec
repnz
mov
cmp
xchg
movsb
iret
add
aaa
nop
dec
imul
lods
cli
inc
out
adcl
pop
iret
lret
data16
add
adc
stos
mov
sub
adc
shll
mov
loop
int3
pop
and
and
cmovns
test
mov
cmp
out
dec
icebp
mov
cmp
call
mov
cmp
idivl
test
jbe
int
sbb
mov
popf
mov
mov
mov
notl
js
cmpsb
std
jge
popf
mov
rcrb
xchg
cmp
fcoms
inc
push
loope
xor
dec
jmp
lods
repnz
or
bound
rcpps
xchg
dec
test
daa
daa
and
pop
scas
sub
dec
mov
adc
push
out
adc
loop
dec
push
cmp
aad
lret
js
cmp
mov
scas
sbb
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
cmp
aas
jle
mov
push
cmp
adc
sbb
pop
fldt
inc
jbe
cmp
push
nop
jecxz
rclb
fwait
aaa
dec
or
pop
pop
bound
fstpl
fwait
inc
xchg
pop
out
int
frstor
pop
mov
sbb
cmc
loopne
jp
cmpsb
and
sbb
int
xchg
fcomi
test
sbb
std
cmpsb
mov
pop
mov
test
jle
adc
mov
mov
sub
test
fwait
adc
addr16
andl
inc
inc
jle
subb
xchg
leave
popa
pop
jb
and
out
fwait
jle
add
dec
scas
fcoms
imul
lcall
aam
or
icebp
mov
mov
lret
rcll
sbb
aam
xchg
lea
int3
pop
xor
insb
in
das
sbb
sarb
fs
and
ret
pop
mov
cs
inc
gs
test
fwait
test
ds
push
aaa
push
shr
xchg
sub
daa
sub
enter
movsl
push
sbb
dec
sbb
cltd
movsl
xor
add
jg
sub
insl
jl
lods
ret
xlat
test
cmp
jl
adc
dec
adc
imul
adc
dec
into
sbb
cli
imul
divl
sar
pop
sbb
push
cld
push
jbe
cmp
cmp
andl
xor
and
xor
mov
iret
scas
add
orb
pop
aam
scas
jb
xor
mov
xchg
push
bound
xchg
pop
and
mov
dec
test
mov
loopne
sbb
jle
jl
sub
mov
out
stos
pop
cld
dec
cld
push
xchg
dec
es
mov
dec
sbb
out
sarl
sbb
out
mov
loop
into
sbb
shrl
xor
loopne
imul
js
xchg
cwtl
loopne
mov
insb
xchg
mov
ffreep
inc
add
aam
dec
inc
je
lcall
fdivr
pop
sahf
int3
xchg
sarl
sbb
xor
mov
in
imul
add
jp
lret
pop
arpl
xorl
mov
cltd
cmp
inc
outsb
pop
aam
loope
stos
fldt
pop
lds
dec
push
inc
cld
adc
push
movsl
out
cmp
comiss
rol
xchg
inc
sbb
scas
sub
sbb
test
and
cmp
adc
lahf
and
mov
fucomp
scas
jmp
inc
out
inc
pop
sbb
add
test
pop
das
nop
push
test
or
or
shlb
inc
dec
dec
mov
cs
shrl
shrl
mov
push
mov
dec
lret
inc
out
mov
add
lock
popa
fadds
jmp
stos
lods
sbb
jns
xor
test
les
sahf
in
sti
mov
cwtl
xchg
shlb
adc
addr16
add
lahf
call
clc
testl
shl
mov
mov
xor
loop
jnp
adc
jae
push
dec
cmpsl
jno
in
xor
aad
in
bound
fmuls
dec
pop
cld
add
jge
rcll
jmp
fdivr
push
ret
pop
lock
add
push
mov
xchg
idiv
lcall
xor
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
jmp
dec
inc
sbb
std
push
ficomps
out
enter
push
neg
or
mov
sbb
mov
cmc
cmpsl
push
mov
lock
lahf
pop
and
jno
or
push
and
mov
stos
xor
jns
popf
stos
jbe
cwtl
fimuls
jl
fcoml
dec
jge
imul
fistpl
pop
mov
test
mov
add
add
dec
dec
pop
or
jno
xor
pop
dec
rolb
sbb
cs
inc
lcall
pop
jne
or
shrb
pop
imul
loopne
call
lret
dec
jbe
xchg
dec
mov
inc
xcrypt-cbc
cmpsl
rclb
inc
adc
inc
addl
call
xchg
dec
sbb
mov
dec
ja
lahf
jb
imul
arpl
ret
scas
mov
test
clc
dec
add
adc
pop
and
sbb
clc
jbe
lds
incb
jae
jp
mov
in
out
xlat
outsl
add
neg
mov
cmp
xor
loop
or
daa
in
cltd
shlb
and
jecxz
cmp
mov
mov
icebp
shll
fstps
in
shll
dec
js
ret
push
enter
das
cmp
movsl
push
stos
sub
and
jno
adc
adc
int3
clc
mov
movsl
and
push
cwtl
aas
insl
adc
dec
cs
outsb
cld
leave
and
mov
mov
sti
ja
aad
stos
pushf
sub
fwait
or
in
mov
in
jp
test
outsb
aas
ljmp
test
sub
adc
cmp
mov
xchg
addr16
mov
or
repz
lcall
js
fsubrs
dec
out
repz
hlt
mov
mov
mov
aam
int3
jb
cmpsl
cld
sub
aad
mov
jns
sub
sti
jns
mov
xor
xchg
outsl
insb
mov
in
mov
cli
sub
shl
cmp
mov
dec
aaa
lock
add
adc
js
xor
sbb
out
dec
hlt
jnp
jae
pop
jbe
pop
out
push
xchg
mov
sbb
hlt
dec
jl
into
adc
movsl
add
jb
sti
mov
or
loop
and
or
jo
xor
cli
sub
pushf
pop
xchg
daa
or
mov
dec
loopne
xor
outsb
jno
jmp
sub
dec
cmc
jo
stos
in
jmp
in
cmp
xchg
cltd
mov
scas
inc
rorl
lods
and
jg
sbb
adc
mov
jo
cs
dec
jo
test
in
aas
lods
jmp
push
cmc
mov
push
mov
les
js
ljmp
sub
jg
push
xlat
dec
push
aaa
int
hlt
dec
or
cmp
inc
mov
popa
adc
cs
cmc
push
ret
push
xchg
jae
aaa
mov
fldt
imul
or
dec
je
jmp
cmovne
push
mov
mov
sbbl
sub
xor
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
or
jle
jmp
jle
xor
inc
js
sti
lea
inc
and
mov
push
scas
in
or
adc
add
in
cmp
xor
push
imul
xchg
sub
std
xchg
fdivrl
sbb
adc
xchg
mov
or
and
nop
mov
fmull
sub
xchg
popa
sbb
lock
shlb
dec
or
push
add
sbb
push
mov
or
jg
cmp
xor
jo
or
nop
data16
fildll
aas
shll
and
and
xchg
int
jo
daa
sub
lods
shl
adc
mov
pmovmskb
lds
sub
add
jo
lea
cwtl
out
sahf
jns
jo
fisubs
push
insl
popf
and
or
push
jp
pop
mov
jnp
fcomip
pushf
es
subb
push
fistpl
inc
dec
clc
jmp
push
out
ret
add
mov
cmp
mov
dec
mov
push
addr16
pushf
or
adc
jle
imul
add
sbb
jecxz
jno
in
add
daa
jne
stc
scas
pop
popa
dec
sbb
xor
movsb
sub
xlat
ljmp
add
dec
mov
insb
inc
xchg
lahf
sub
or
in
mov
add
arpl
inc
and
pop
movsl
aas
imul
data16
xchg
pop
push
into
xchg
adc
pop
mov
loope
pop
cmpsl
mov
jno
scas
mov
mov
push
dec
cmovne
cwtl
inc
sbbb
xchg
icebp
sub
and
shll
notb
icebp
scas
dec
mov
insl
outsb
jmp
incl
mov
mov
dec
cmpsl
in
mov
outsb
jno,pt
mov
sbb
mov
ficoml
dec
lahf
push
inc
scas
mov
or
inc
and
and
push
xor
sub
push
sahf
scas
jns
rorb
sub
sbb
roll
mov
push
jnp
jp
ret
cmp
out
cmp
js
jae
sub
sbb
data16
leave
adc
scas
inc
add
js
push
cmp
out
je
popf
arpl
adc
xchg
fs
xchg
popf
nop
sub
push
push
fwait
pop
and
sbb
scas
cmc
push
push
sbb
addl
or
pushf
pop
xchg
out
hlt
bound
cmp
xor
inc
mov
in
fisttpl
scas
pop
stos
xchg
jnp
test
xchg
xchg
fcoms
outsb
push
inc
insb
mov
pushf
adc
push
sbb
xchg
or
jae
insb
xchg
lods
push
outsb
xor
mov
clc
pop
pop
aas
rolb
fcomi
cmp
ja
pop
cmpsl
pop
adc
adc
mov
push
cli
testl
loopne
insb
aas
jbe
pop
xlat
das
fsubp
aad
lea
lret
mov
fldenv
mov
lea
sub
push
daa
push
mov
or
adc
mov
xor
or
sbb
add
mov
pop
andl
shr
add
add
into
inc
or
pop
inc
and
sub
xchg
out
lret
jmp
jle
test
imul
adc
and
jle
sub
pop
pop
and
ljmp
adc
xor
test
jb
mov
sbb
mov
jno
or
jg
fdivrs
test
mov
fwait
dec
pop
mov
push
ret
pop
mov
imul
jne
mov
jno
adc
lret
or
aas
int3
call
inc
out
adc
xor
inc
or
int
inc
mov
pop
inc
mov
ss
dec
pop
subl
pusha
lods
fucomp
pop
mov
cltd
and
mov
sub
lahf
iret
out
sub
movsb
loop
mov
stos
stc
stc
sub
or
outsl
xchg
adc
or
sub
jo
fwait
cmp
inc
dec
enter
lea
rcrl
add
out
adc
lds
pop
jmp
pop
std
mov
je
cld
fidivrs
pop
jb
jmp
mov
sbb
adc
sbb
jmp
pop
shrb
pop
sbb
pop
pop
xor
inc
jg
out
add
jge
fistl
lods
mov
mov
aas
stos
and
jge
sbb
aam
cmpsl
or
test
fidivl
pop
call
mov
movsl
push
jne
int3
je
mov
cld
dec
jmp
inc
or
dec
in
das
iret
hlt
push
mov
inc
int
mov
imul
mov
inc
jg
push
test
shlb
test
fisttps
dec
or
push
dec
and
je
out
sbb
xchg
cmp
and
loope
pop
push
sarl
mov
dec
adc
flds
inc
pop
mov
cmpsl
push
jbe
hlt
adc
iret
jbe
xchg
loop
lahf
push
loopne
mov
cmpsb
aaa
out
leave
aas
je
aad
ljmp
xchg
inc
jne
popa
pop
mov
in
out
ret
mov
lahf
cmc
roll
call
add
mov
addr16
add
bound
icebp
repz
data16
aad
jo
sbb
mov
jae
cmp
repz
ss
lock
iret
not
sbb
sub
inc
adc
mov
xchg
ss
mov
lret
adc
pop
mov
loop
and
push
dec
lds
es
clc
cmp
enter
push
addb
jbe
enter
adc
xchg
xor
out
xor
and
dec
add
pop
sub
push
cmp
insl
add
repnz
pop
dec
mov
ljmp
shl
push
add
mov
clc
jnp
jmp
stos
or
rorl
pop
stc
fistl
outsl
dec
shlb
aad
ja
jp
ja
pop
cs
jb
jge
adc
jns
mov
jecxz
jmp
pop
notl
adc
in
add
mov
mov
scas
jo
test
push
iret
sbb
jp
and
dec
mov
inc
push
scas
jle
inc
ss
cwtl
dec
int
sbb
xchg
pop
mov
jnp
stos
call
or
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
imul
jl
mov
les
negl
adc
xor
movsb
dec
cs
xchg
cli
push
and
shll
pop
jne
mov
pop
push
push
push
js
in
sti
sub
add
mov
call
imul
and
or
jb
sbb
mov
nop
aad
xchg
push
inc
scas
mov
inc
pop
xchg
out
mov
inc
inc
aad
in
fcomps
jne
scas
mov
add
aas
pop
xor
rorl
repz
inc
push
sbb
cmp
pop
fimull
fwait
nop
dec
fldl
mov
and
dec
clc
mov
int
jl
adc
sbb
xchg
and
mov
stos
sbbb
jo
jecxz
push
ss
jmp
push
int3
xchg
std
das
push
call
jns
push
shll
sbb
scas
test
movl
call
dec
ds
pop
or
pop
pusha
cmp
mulb
pop
jle
loope
lods
in
jmp
les
jp
in
leave
sub
xchg
mov
inc
test
push
xor
rcrb
cmp
gs
xchg
popf
adc
das
dec
or
clc
and
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
or
jle
iret
jle
sarb
jle
dec
xchg
jo
sub
jp
xchg
test
push
or
push
gs
pop
inc
mov
notl
aaa
stc
mov
mov
pop
mov
movsl
adc
sub
sti
in
xlat
add
leave
roll
push
adc
scas
dec
lock
xchg
push
lock
insb
popa
push
ds
jae
bound
adc
xchg
dec
rcrb
xchg
inc
inc
xlat
sbb
lods
lods
mov
jo
xlat
jb
fdivrl
sub
xchg
pop
decl
mov
sub
int3
sbb
inc
stos
add
push
xchg
jg
add
test
test
lcall
adc
xorl
dec
iret
pop
push
std
insl
out
fisubs
aam
and
lock
or
rcll
mov
lods
movsl
das
outsl
ret
imul
xor
pop
and
jae
cmc
lret
in
out
sub
pushf
out
fdivs
jmp
lcall
and
xchg
int3
inc
push
test
ljmp
mov
sbb
hlt
sub
sub
cmp
cld
xchg
aad
scas
repnz
jno
xchg
ljmp
dec
or
fstpt
pop
fldcw
cmp
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
add
inc
pop
in
sarb
jg
jle
insb
and
mov
out
scas
loopne
sub
in
mov
mov
push
ja
push
add
or
mov
and
je
in
shrb
mov
ja
xchg
rorb
pop
and
xor
subb
call
ret
stc
pop
or
jae
inc
mov
inc
movsl
aas
xchg
push
outsb
sbb
xchg
int
fidivs
inc
test
into
addr16
dec
dec
and
aas
pop
cmp
cli
xchg
jne
cmp
jecxz
cmc
adc
negw
sbb
aad
jp
mov
leave
and
pop
inc
inc
and
lahf
push
in
push
mov
inc
call
xor
pop
bound
ljmp
mov
fsubrs
fwait
xchg
mov
fdivrl
les
and
mov
out
jecxz
push
sbb
out
stos
in
xor
aaa
js
into
faddp
cld
repnz
incl
in
cmpsl
pop
xchg
sahf
out
cld
sub
mov
jp
shrb
ss
mov
orb
pop
fwait
xchg
filds
leave
movsb
pop
sub
mov
push
xchg
sub
popf
bound
cmp
cmc
mov
jle
in
mov
jmp
jae
cmp
cli
vpaddw
incl
pop
in
cmp
jle
sarb
jle
in
cmp
scas
sarl
jo
mov
ficompl
jg
mov
adc
mov
arpl
jp
aas
cmpb
popa
xchg
pop
add
dec
push
lahf
inc
ljmp
jg
insl
pop
test
jg
dec
shrl
push
jae
mov
jns
sub
movzwl
imul
sub
out
pop
xor
jns
loope
add
int
sti
hlt
jp
imul
add
push
sub
push
inc
loope
test
cmp
popf
rcrl
cmp
xor
mov
pop
std
adc
xchg
jne
xlat
jp
jmp
in
and
xor
jecxz
xlat
inc
lahf
pop
mov
jno
outsl
jmp
xchg
lahf
leave
push
adc
and
out
jb
pusha
lods
lock
js
sub
pop
pop
add
aad
fcompl
xor
test
push
pop
mov
xor
pop
dec
adc
test
rorl
adc
sub
shr
dec
imul
or
adc
mov
ss
das
jno
data16
ljmp
cltd
xor
and
scas
testl
xor
push
sub
in
or
punpckhdq
add
inc
xchg
add
add
jmp
push
fsubs
pop
xchg
push
test
jle
sarb
jle
addr16
mov
scas
fbstp
xor
ljmp
out
cwtl
mov
in
in
mov
pop
mov
sbb
mov
repz
stos
lea
movsl
stc
ror
inc
adc
enter
jnp
jne
or
push
add
push
dec
push
mov
movb
in
xchg
push
iret
sbb
mov
sahf
test
repnz
push
sub
sub
sbb
push
in
rolb
xchg
imul
inc
test
adc
loopne
std
aam
lcall
idiv
mov
adc
cltd
test
sti
sub
mov
pop
or
das
inc
cmpsb
test
xor
mov
in
pop
clc
and
lcall
in
repz
aad
andb
mov
test
daa
sub
sub
mov
jle
xlat
xor
sbb
sub
pop
add
lods
lahf
sbb
add
jns
cmp
movsl
insb
stc
mov
sbb
je,pt
push
int3
mov
jl
push
cmc
pop
xchg
popa
push
dec
das
repz
insb
outsl
mov
xchg
aaa
lods
stc
adc
jbe
xlat
mov
inc
xor
lods
mov
lods
xlat
mov
adc
mov
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
mov
std
push
sarb
jle
and
mov
sbb
icebp
sub
test
push
mov
cs
ja
pop
xchg
fmuls
jge
or
jbe
imul
jecxz
leave
dec
ds
cmp
pop
out
mov
jnp
femms
ror
std
dec
cmpsb
jno
pop
or
rclb
lahf
dec
or
in
pop
movsb
jae
pop
mov
lret
mov
hlt
xor
fdivl
fistl
call
pop
mov
jecxz
jbe
loope
jns
cmpsl
push
orl
jae
cmc
out
cmpsb
out
inc
cwtl
push
mov
clc
clc
cmp
add
mov
daa
psubusw
cmp
pop
test
or
ljmp
inc
cwtl
repnz
icebp
or
stos
cli
repz
jg
sub
add
and
or
cmp
xor
sbb
mov
cmp
add
mov
xor
sbb
ret
adc
mov
outsl
call
into
shlb
sbb
mov
sub
lret
std
rcr
popa
pusha
xchg
je
mov
jmp
clc
cmpsl
repnz
in
mov
scas
rcrb
cmp
and
sarl
outsl
in
push
into
or
jecxz
xlat
jae
sub
ja
dec
in
shld
inc
or
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
mov
lds
sarb
jle
ljmp
int
lds
das
pop
je
test
lock
in
test
push
xor
orl
outsl
dec
in
lcall
xchg
scas
into
mov
sub
add
add
xor
outsl
sti
lds
push
jo
call
lods
push
daa
push
or
jecxz
mov
xchg
and
xor
stos
addl
pop
sbb
loop
or
std
jp
add
cmp
jne
mov
xor
and
roll
adc
xchg
inc
or
loope
and
cmc
insl
lret
popf
cmp
push
fstpt
or
push
add
sbb
rorl
pop
enter
sub
adc
xchg
int
jg
je
mov
notb
stc
jae
cwtl
push
mov
jle
lret
adc
test
pop
jmp
pop
pushf
inc
dec
jle
ret
js
dec
mov
fistps
pop
and
cli
sbb
in
andb
or
jne
dec
lahf
xor
stc
test
adc
push
decl
mov
dec
orb
insb
sbb
loope
adc
xchg
xor
lcall
mov
sbb
inc
clc
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
xor
dec
mov
jle
sarb
jle
mov
cmp
sbbb
mov
fdivrs
pop
scas
mov
hlt
xor
scas
in
ret
fisubrl
push
xchg
mov
mov
push
pop
xor
sbb
mov
cmp
sti
push
popa
mov
sub
movsb
dec
outsb
mov
js
push
xor
dec
dec
daa
ds
jmp
jbe
and
leave
enter
dec
loopne
xor
or
mov
cmp
lods
mov
arpl
inc
stc
popf
sahf
dec
int
inc
add
lret
mov
cli
das
cmpsl
in
fistpll
clc
jbe,pn
jne
adc
inc
sbb
cmp
inc
and
int3
mov
xchg
insl
mov
xor
add
cmp
pop
sti
push
sbb
push
fwait
not
dec
shll
lds
pop
push
enter
mov
mov
jmp
or
dec
and
aam
sub
cmp
push
pop
jo
xchg
stos
pop
dec
xor
jmp
mov
cmpsb
rorl
or
inc
lods
das
loope
ret
lea
xchg
sub
ljmp
into
dec
xor
cmp
shrb
xor
out
dec
ret
pop
mov
mov
cli
or
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
push
mov
jle
jg
jle
test
imul
xor
sub
push
test
pop
jae
pop
movzwl
rcrb
loop
xchg
mov
clc
add
into
adc
mov
sti
cmc
dec
cmp
dec
scas
pop
popa
pop
pop
jbe
lahf
and
daa
fistps
mov
insb
xorb
out
out
jne
cwtl
rcll
adc
test
xor
ficoms
xor
mov
bound
mov
sbb
nop
ret
sub
neg
mov
xchg
popf
push
xchg
sbb
push
lret
jl
out
out
dec
jg
mov
pusha
repz
out
test
lds
xor
call
lock
or
xchg
nop
out
iret
daa
mov
xor
es
rorl
mov
mov
cwtl
pop
fisubl
repnz
jl
std
in
cmpsl
pop
pusha
cmp
pushf
push
jnp
adc
adc
shlb
divb
mov
std
fisttpl
stos
mov
js
in
pop
or
paddusw
insb
sbb
sbb
mov
mov
loop
xor
scas
cmp
pop
std
jmp
pop
sbb
mov
testb
subb
rolb
push
inc
pop
xchg
pop
mov
pop
jg
inc
in
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
shl
nop
push
sbb
jge
mov
mov
jno
xchg
into
movsb
xorb
xlat
addl
inc
mov
xor
inc
adc
xlat
jns
imul
and
pop
and
lret
cmp
int
sub
testb
pop
std
mov
roll
add
test
jnp
mov
data16
ljmp
jmp
mov
jecxz
cld
add
fwait
and
leave
add
xor
mov
or
add
repz
mov
jbe
aad
sarb
pop
out
dec
sub
test
iret
dec
loopne
inc
shlb
sbb
dec
dec
sub
jo
dec
xor
sub
add
pop
mov
mov
adc
notb
movsb
jnp
out
cmp
mov
nop
inc
test
idiv
flds
lahf
faddl
xchg
jne
adc
stc
movb
xchg
pop
mov
sbb
dec
xor
dec
rorl
int3
nop
and
push
sarb
nop
cmp
add
in
push
jp
cmp
adc
mov
lahf
hlt
add
add
das
stos
lods
cmc
jecxz
push
inc
jmp
dec
cli
lahf
mov
pop
in
out
in
mov
mov
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
adc
jg
jle
outsl
jne
xchg
inc
out
lods
sbb
fwait
aas
les
sbb
mov
cmp
gs
test
test
icebp
cmp
shrb
div
loopne
out
sbb
mov
clc
aam
mov
sahf
xchg
mov
pusha
dec
pop
outsl
jns
lret
rorb
adc
xchg
sub
movl
cld
imul
cmp
lea
scas
mov
push
dec
insl
pop
outsb
outsl
mov
fwait
test
jecxz
in
pop
xor
dec
shll
stos
push
xchg
push
lds
stos
xor
mov
lea
fwait
jno
fcmovnbe
adc
test
cmp
sbb
mov
cs
sbb
mov
mov
aad
test
xchg
lret
ds
andb
inc
pop
out
arpl
fisttpll
dec
jmp
pushf
xor
adc
mov
and
dec
arpl
test
shll
and
es
mov
push
shlb
lods
xchg
mov
or
add
fs
scas
jns
fiaddl
xor
outsl
inc
lret
pop
jl
dec
out
lds
movsb
mov
push
xchg
mov
add
inc
add
dec
punpckhwd
jecxz
test
popf
jb
add
or
adc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
pushf
mov
popa
fdivrl
push
jo
jle
mov
sbb
dec
add
fcmove
bound
mov
cwtl
pop
mov
xor
jnp
cs
cmp
in
lcall
in
jb
movsl
icebp
xor
pop
out
pop
dec
rcl
shlb
jne
sarb
ret
inc
shl
jns
loop
idivb
dec
cmp
data16
popa
and
lock
mov
xlat
inc
push
mov
xchg
push
xor
shl
dec
pop
mov
mov
pop
push
mov
int
das
xchg
pop
and
add
mov
dec
mov
pop
outsl
cmpsb
fstps
mov
ret
in
sub
add
mov
sub
insl
popa
bound
xchg
jb
jg
sahf
fildll
dec
jb
sarl
cwtl
jb
outsb
jb
mov
lcall
out
aaa
iret
fidivrs
inc
scas
sub
mov
cmp
int
dec
icebp
rcrl
pop
add
fldcw
in
ret
cwtl
test
fs
hlt
jno
mov
lods
push
popf
dec
mov
into
mov
inc
pop
and
cld
popf
cs
fsub
dec
pop
rol
fidivl
cmp
ljmp
mov
mov
inc
jle
ret
push
pand
cwtl
cmp
jns
mov
pop
mov
stos
or
mov
loopne
sbb
or
xor
data16
imul
mov
jmp
jmp
andl
sbb
sbb
mov
enter
add
lock
inc
rcl
xchg
imul
jecxz
lret
nop
call
mov
idivl
rclb
and
stc
add
sar
lret
outsb
and
add
lret
push
test
and
gs
xor
mov
shl
inc
xchg
dec
stos
fadds
jmp
movsl
pop
add
leave
pop
push
mov
xchg
imul
aaa
ret
jmp
sub
in
cli
mov
rolb
int3
cmp
jp
pushf
cmp
prefetcht1
and
jb
in
mov
lods
dec
mov
scas
sbb
sti
mov
mov
fidivrl
bound
pop
lock
mov
mov
pushf
pop
or
fisttpl
leave
fbld
int
push
mov
insb
imul
sub
xlat
jecxz
pop
outsl
int
sub
fisubs
cli
fsub
sub
cli
lds
je
jno
flds
fwait
test
imul
mov
add
or
shll
xor
push
inc
mov
cmp
xchg
xchg
repz
xor
mov
div
mov
and
jmp
out
xchg
imul
bound
push
add
jle
push
jo
jle
out
mov
xchg
loope
adc
mov
scas
jne
dec
add
aaa
mov
iret
mov
in
jb
inc
scas
rolb
add
cmp
icebp
and
mov
cmp
scas
mov
sbb
shll
hlt
jg
sub
outsb
aam
lcall
mov
pop
js
sub
aas
jnp
mov
dec
sahf
jo
dec
pushf
into
rcr
adc
push
out
popl
mov
daa
setbe
pop
pop
push
fbstp
ret
dec
sbb
mov
mov
dec
fs
jb
push
inc
jne
dec
push
mov
pop
scas
lcall
and
call
push
push
cmovnp
adc
xchg
rcrl
mov
lcall
aam
xchg
cmc
test
or
jns
mov
or
mov
jge
faddp
inc
jbe
testb
subl
xchg
popf
call
andl
push
jecxz
clc
bound
shl
inc
xchg
add
xorl
add
shlb
mov
adc
hlt
or
xchg
test
fcom
negl
add
mov
jns
xor
jb
popf
outsl
lods
lahf
loope
lret
pusha
mov
dec
cmpsb
pushf
popa
loope
test
in
push
ret
xlat
add
sbb
andb
int
jge
xchg
push
push
mov
push
mov
fdivs
and
push
or
pop
mov
stc
ret
push
outsb
lds
cmp
pushf
repz
xchg
nop
cmpsl
enter
mov
mov
ds
xchg
sbb
insl
loopne
sbb
add
or
call
ja
adc
in
popf
jbe
push
test
hlt
xor
or
cmp
inc
out
dec
cli
roll
lods
mov
cmp
fwait
inc
inc
ss
popa
sub
ljmp
lods
test
into
cld
mov
or
shll
inc
inc
clc
mov
ret
clc
dec
mov
cmp
lea
pop
mov
mov
mov
jl
jo
pop
rcll
je
lods
cld
sbb
aad
dec
fdivrl
pusha
push
test
push
sbb
xchg
scas
mov
nop
push
mov
inc
scas
add
and
int
popf
aaa
out
xchg
loope
shr
bound
aam
ljmp
int3
push
cmpsb
xor
fildl
imul
xlat
outsl
gs
pop
xchg
dec
fcomip
pusha
je
leave
sbb
pop
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
popa
add
movsl
sarb
inc
jg
jle
sbbb
jl
cs
xor
ss
and
mov
inc
push
and
imulb
shrb
sar
inc
popa
inc
sbb
repz
outsb
sbb
imul
pop
shrb
xchg
pop
xor
inc
cmp
ds
sub
mov
enter
dec
fcomip
mov
jmp
ljmp
bnd
or
stos
cs
ds
inc
lea
jmp
and
data16
pop
pop
and
incb
mov
jmp
add
and
lret
mov
cmpsl
shrl
movntps
xor
fwait
xchg
sbb
or
and
in
insl
filds
ficoml
cmp
lods
dec
mov
sub
inc
in
push
mov
cmpsb
mov
dec
jp
fincstp
sbbb
roll
push
mov
shll
aaa
jnp
cmc
sahf
pop
inc
orb
sbb
popf
push
es
jg
push
pop
xor
data16
jle
jae
faddl
dec
inc
fnstenv
lods
mov
jno
xchg
and
add
sti
jno
xchg
dec
loop
mov
dec
rolb
cwtl
jae
das
xlat
sub
imul
popf
lock
inc
je
stos
lods
and
je
push
aad
adc
adc
or
lea
in
push
jns
pusha
fimuls
xchg
push
mov
cmpsb
outsb
addl
orl
out
or
sbb
and
mov
sbb
dec
inc
mov
push
into
stos
leave
mov
xchg
add
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
testl
jle
jg
jle
jle,pn
inc
sbb
js
jle
std
push
and
push
jo
pop
test
dec
adc
xchg
lods
adc
lea
int3
mov
test
rolb
mov
and
loop
lahf
iret
testb
mov
pop
call
orl
add
sbb
jg
push
fs
dec
sbb
push
xor
or
roll
popf
sti
adc
rcll
call
mov
jnp
imul
add
jmp
or
jg
lods
pop
dec
mov
enter
xor
xchg
inc
cmp
xor
jmp
mov
cld
add
loop
aas
add
repz
mov
xchg
sub
in
and
cmp
or
lahf
mov
push
jp
mov
daa
repnz
repnz
jl
add
pop
push
dec
push
or
fmull
dec
ja
add
jge
and
cmp
xchg
push
repz
les
imul
mov
rcrb
cs
cmpsl
mov
or
rcrb
jnp
dec
mov
outsl
cltd
out
bound
fimuls
out
xor
inc
jg
int
and
or
add
mov
xchg
cld
sarl
movsl
out
cmc
pop
xchg
shr
mov
popf
jp
sarb
push
xchg
lcall
cmp
sub
fdivrl
sarb
cmp
stos
aaa
mov
mov
mov
icebp
pop
outsb
dec
jns
or
sbb
jb
cmc
xchg
iret
movsb
inc
xchg
rep
jp
addr16
adcb
push
in
xchg
aaa
stc
sub
add
popf
jb
add
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
das
mov
sbbb
jp
popa
jge
scas
add
xchg
xchg
mov
push
dec
push
push
cld
cmp
lea
iret
nop
jbe
pop
mov
and
and
jo
push
test
ss
mov
movsb
int3
mov
push
push
mov
out
js
mov
cmpsb
ss
test
lods
mov
push
subps
inc
pop
cmp
out
aas
cmp
fwait
shr
inc
insl
adc
cmc
push
fcoms
or
lcall
sbb
xor
lea
sbb
insb
pop
cld
mov
repnz
pop
daa
cmp
cwtl
inc
adc
pop
jno
push
mov
push
lea
fldl
rcll
clc
mov
and
lods
into
call
movsl
movsl
xor
in
and
inc
cmpsb
js
fstpl
mov
clc
adc
dec
movsl
imul
inc
or
filds
loopne
xor
xchg
adc
pop
xchg
pop
lahf
xor
sub
dec
inc
or
insb
xchg
mov
inc
or
mov
test
jae
dec
sahf
out
ja
loop
es
mov
ja
fcoml
sub
xchg
jae
ffree
scas
rcrl
jns
cmp
mov
inc
pop
aad
repz
sbb
or
mov
cmp
fimull
addr16
dec
or
ss
jg
test
sti
in
jne
push
test
mov
dec
pop
fs
xor
cs
shlb
out
jns
fisttpll
pop
lea
dec
repnz
out
sbb
jne
lret
shll
test
xor
sub
add
jp
in
imul
testb
mov
test
hlt
jne
sbb
mov
inc
xchg
cwtl
cwtl
int
add
daa
es
fs
dec
popf
fdivr
dec
push
pusha
or
fistpll
sub
testb
push
stos
inc
jp
mov
sbb
mov
and
pushf
or
insb
cmp
movl
sbbb
fstps
xchg
or
cmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
pop
jle
call
jle
push
mov
xchg
inc
inc
fwait
push
fistpl
pop
cmpsb
inc
cmp
push
pop
cmp
jg
pop
jg
cmp
mov
jecxz
jbe
hlt
pop
bnd
das
std
push
jg
sbb
and
dec
lock
mov
inc
ret
and
dec
mov
shll
inc
mov
lret
jo
addr16
jmp
push
nop
int3
ficoml
and
imul
bnd
inc
push
or
adc
jo
addr16
mov
incb
dec
out
fisttps
xor
jb
loop
mov
and
daa
rorl
pop
add
cltd
mov
pop
xchg
mulb
jl
add
gs
and
sub
jle
loopne
aas
sub
pop
dec
stc
loopne
cmp
adc
loope
cmpsb
jmp
push
pop
sub
pop
not
rcl
cli
ljmp
ljmp
inc
mov
mov
mov
mov
loopne
pop
fdivl
bound
cmpsl
mov
push
xor
fwait
arpl
and
test
adc
psubb
mov
and
popf
inc
pop
int
arpl
and
or
xlat
loope
stos
lds
push
sbb
push
pop
and
push
test
je
inc
loope
stos
mov
jge
je
mov
inc
push
inc
xor
jle
jle
mov
cmp
aaa
test
sarb
inc
sbb
pop
or
jge
mov
cmp
pop
sbb
xchg
mov
jbe
cmpsb
mov
adc
mov
das
pop
fs
pop
sti
inc
adc
sbb
jno
ftst
test
loopne
shrl
mov
adc
repnz
faddp
loope
adc
inc
sbb
into
es
and
in
nop
test
sti
cmpsb
repnz
clc
cmp
push
push
xor
and
sbb
dec
lock
loope
lret
adc
pop
enter
jbe
adc
jp
fcmovnbe
cmp
jne
dec
test
dec
mov
inc
js
out
fwait
cmpsb
loope
add
cld
repz
das
xchg
into
sbb
clc
push
xor
mov
icebp
dec
rol
cli
icebp
mov
jmp
inc
add
leave
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
insb
push
adc
jg
jle
sbb
rclb
stos
popa
lcall
lret
cmp
lcall
sub
sbb
push
adc
daa
push
jae
jno
inc
pop
inc
inc
xor
push
push
pop
hlt
out
iret
push
test
jns
pushf
outsb
and
sbb
mov
shlb
push
dec
cs
sub
mov
push
in
pop
out
add
out
jg
push
or
xor
jl
popf
icebp
ficomps
das
movsb
pop
mov
dec
adc
cmc
jge
ja
iret
push
cmp
das
cmp
dec
sbb
adc
into
repz
mov
outsb
lea
orl
jg
mov
xchg
add
jl
jae
or
push
xlat
dec
adc
jo
push
push
dec
ficomps
pop
mov
inc
pop
shl
adc
lea
add
pop
mov
mov
inc
fmuls
sub
push
in
loopne
adcl
mov
imulb
aam
mov
cmp
xchg
pop
push
add
pop
mov
add
pop
jmp
pop
ret
cmp
aam
scas
mov
aam
mov
xlat
cmp
aas
mov
cmpl
cld
iret
lds
and
sbb
xor
add
xchg
lret
mov
daa
cld
mov
in
out
pop
dec
push
jns
in
pop
push
pop
dec
fcomp
clc
mov
icebp
push
adc
dec
insb
adc
xlat
out
pop
lcall
test
arpl
insb
dec
rcll
fdivp
sbb
jb
lods
hlt
lret
jmpw
push
pop
mov
nop
shlb
lea
aad
pop
ds
sbb
push
push
xor
dec
inc
loope
sbb
rcr
push
rcll
xor
add
test
cld
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
mov
in
jle
pop
jg
jle
aaa
push
fidivl
ret
mov
data16
xchg
push
inc
jg
or
fsts
fs
movsl
or
cs
iret
sbb
dec
cld
jo
loop
mov
fnstenv
ret
adc
add
add
mov
dec
pop
fwait
rcl
and
or
and
or
nop
ljmp
xchg
push
add
inc
inc
inc
clc
mov
mov
lods
mov
addr16
js
cmc
push
arpl
xchg
sub
cli
clc
mov
hlt
jb
fwait
in
adc
inc
orl
sub
stos
sbb
xor
ja
jae
hlt
mov
test
int
sub
sbb
push
jbe
add
lcall
repz
push
sbb
jbe,pt
push
mov
pop
add
es
int3
xor
pop
out
lahf
cld
lods
icebp
adc
addl
popf
pop
sbb
push
out
in
xor
ss
add
push
shrb
fcomps
inc
out
bound
incb
stos
mov
mov
sti
test
mov
test
rcr
inc
or
mov
push
push
adc
lods
fstp
cmp
je
mov
divw
jp
je
in
fisttpl
test
or
decb
lret
mov
repz
icebp
outsl
negb
popf
call
pop
pop
mov
sti
and
inc
movsb
and
in
popf
cmp
mov
in
cmpb
shrb
add
push
aad
jnp
aam
lds
dec
mov
addr16
add
push
clc
ffreep
xchg
mov
int3
xor
xor
add
jmp
pop
icebp
lds
fs
xchg
imul
and
pop
jg
jle
in
insb
jne
cmpsb
pop
insb
jge
add
loop
jae
dec
lcall
inc
hlt
repz
inc
cmp
add
sarl
movsl
push
stos
sbb
xor
pop
adc
popf
and
dec
in
pop
sub
imul
movsl
sbb
xchg
cld
ret
out
mov
push
movsl
icebp
mov
or
aad
jp
in
xchg
js
mov
xor
and
cmp
call
shll
movsl
in
lods
mov
outsb
pop
inc
lret
mov
inc
jge
jg
mov
add
js
mov
jns
jp
inc
fldt
push
out
pusha
inc
dec
jmp
pop
push
mov
and
xor
cmp
std
pop
push
sbb
shlb
fsubr
testl
incl
mov
push
adc
dec
xchg
mov
xlat
and
stos
je
dec
arpl
test
fstps
push
add
es
lods
cwtl
push
lea
lock
popf
push
cmp
sbb
and
enter
pushf
push
insb
cwtl
fstpl
xlat
adc
je
pop
pop
cmp
pop
mov
fld
xchg
arpl
dec
sub
arpl
pop
mov
pop
imul
popf
push
pop
test
negb
lret
ret
xor
dec
fwait
bound
push
adc
ret
fidivrl
rclb
lcall
cmp
jno
pop
mov
test
addb
adc
mov
xchg
ret
mov
aad
lcall
inc
push
pushf
push
dec
arpl
repz
negl
ret
adc
dec
movsl
hlt
adc
mov
dec
adc
adc
push
scas
xchg
mov
out
or
icebp
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
jle
pop
jg
jle
cmpsl
sahf
pop
adc
sbb
fistpll
jl
mov
dec
sbb
sbb
jno
pop
xor
in
in
fs
stc
adc
xor
movlps
xor
mov
in
in
add
push
and
xor
xchg
push
jmp
jo
pop
rclb
into
sbb
add
add
test
dec
fdivl
pop
jns
mov
pop
or
fwait
cmp
push
push
test
xchg
data16
out
insb
mov
fwait
shlb
push
call
int
sti
add
jno
xchg
std
add
jg
jo
js
mov
sub
sub
mov
cs
out
and
mov
xchg
add
mov
movsl
xor
and
pop
xchg
xchg
out
ss
icebp
clc
pop
xlat
pushf
lds
andb
add
sti
cld
imul
clc
mov
sarb
sub
sub
sub
or
das
mov
lock
xchg
loop
shlb
sub
cltd
cmpsl
dec
dec
xchg
jmp
imul
pusha
mov
stos
iret
stos
aad
pop
xchg
mov
push
jne
cmp
push
repnz
loop
pop
cmp
push
fistl
shll
pop
in
and
xor
mov
xor
pop
fcompl
shll
fisttpll
push
dec
ss
add
rcl
push
rorb
out
icebp
out
pop
push
out
mov
data16
shrl
inc
jbe
push
into
fs
xchg
lahf
pushf
or
jno
cmp
xor
test
xchg
push
stos
lahf
inc
inc
push
fldl
add
es
gs
ret
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
loop
jle
jg
jle
lods
mov
inc
fnstenv
mov
and
cmp
jp
sbb
cmpsl
cmc
add
inc
mov
rolb
push
pop
stos
out
outsb
xchg
in
adc
je
and
pop
mov
pushf
call
outsl
stc
push
mov
xor
outsb
dec
cmp
push
testb
jae
es
push
aas
fsub
push
xchg
lods
mov
sbb
mov
sbb
xor
sub
sbbl
jo
call
xchg
mov
add
push
fistl
xchg
loope
fnstsw
and
push
and
adc
cwtl
pop
or
xrelease
sti
add
xor
push
bound
popf
jbe
cmp
xor
lods
loop
xor
shll
in
ljmp
xchg
sti
inc
mov
sub
ret
adc
mov
shr
lods
dec
mov
and
jnp
sahf
xchg
ret
push
inc
xlat
adc
mov
sbb
push
adc
pop
cs
std
pushf
xor
adc
cmp
gs
jo
xchg
lcall
fsubr
lret
jbe
inc
int
lods
mov
jle
in
outsb
xchg
sbb
xchg
out
or
sbb
sub
or
dec
jb
inc
push
ud1
inc
dec
mov
cmpsb
outsb
ret
ljmp
push
xchg
mov
out
imul
or
xor
mov
and
and
jno
add
push
pop
loop
xor
rclb
dec
xchg
sbb
jecxz
dec
dec
jae
aaa
cmp
dec
aas
push
mov
icebp
sbbb
mov
insb
jp
jg
pusha
adc
adc
popa
xchg
cmp
pop
leave
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
test
jle
aas
jg
jle
pop
fdivl
int
rorl
insb
bound
outsl
enter
xor
pop
cmp
icebp
push
mov
lock
adc
mov
popf
jo
cli
push
sub
aaa
std
pushf
sub
jbe
sahf
pop
jno
cld
push
xchg
push
cmp
aam
push
out
jp
sahf
or
mov
adc
jecxz
or
sub
cmp
or
lods
mov
pop
xor
ficompl
jo
lcall
outsb
pop
stos
sbb
mov
ss
dec
dec
fs
mov
jb
psadbw
xchg
jnp
push
mov
or
js
mov
cld
and
nop
repnz
jne
ficoml
stos
rcll
push
jl
pusha
cwtl
mov
fidivrl
adc
mov
cmc
adc
or
adc
jp
or
add
sub
xchg
jbe
in
lds
cltd
add
std
mov
pop
fimuls
push
xchg
sub
xlat
push
cmp
fwait
xchg
call
or
cmpl
cmp
arpl
mov
int3
and
push
xchg
push
loope
mov
into
std
mov
sub
xor
dec
pop
mov
xor
add
adc
add
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
pop
jle
in
jle
jg
jle
pop
ret
mov
int3
mov
dec
sahf
jo
fwait
pushf
loop
mov
push
dec
sbb
ficoml
and
sbb
data16
jae
sbb
fwait
cli
jae
fcomps
and
cmp
add
inc
fwait
mov
and
idiv
add
adc
xlat
sti
xlat
inc
mov
push
mov
add
sub
xor
roll
sub
in
lret
imul
andl
pop
cmpsl
jns
cs
jmp
jo
jmp
mov
push
aad
sbb
pop
pop
clc
dec
cmp
lcall
mov
mov
mov
xchg
xchg
rorl
hlt
aad
jns
push
xor
stos
xchg
sbb
or
xchg
mov
add
popa
pop
cmp
xor
test
xchg
sahf
inc
out
mov
add
bndldx
cli
mov
arpl
scas
addr16
aam
sub
dec
mov
clc
mov
shrb
insl
insb
test
lcall
cld
xor
mov
mov
cmp
dec
or
ret
lock
push
mov
and
jne
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
jmp
aas
jg
jle
add
shlb
lock
cli
outsl
push
fistps
xchg
xchg
fisttpll
shll
ret
clc
addb
aam
or
cmp
imul
jns
addr16
pusha
xchg
rcll
push
push
jle
test
lds
cli
or
cli
and
imull
ret
test
sub
enter
mov
test
and
mov
leave
sub
xchg
scas
js
mov
pusha
adc
mov
inc
and
jae
dec
js
test
mov
ret
mov
and
add
add
push
inc
data16
lea
clc
sub
mov
repz
or
sub
loope
mov
push
or
std
rcll
arpl
and
mov
fs
ret
push
adc
scas
imull
pop
adc
inc
jb
adc
pop
subl
ljmp
das
push
sbb
cltd
jo
dec
movsl
jp
xor
mov
push
scas
loopne
in
xchg
std
fldl
xchg
stos
push
shl
jg
fstps
sahf
add
push
xchg
mov
mov
sbb
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
xorb
sbb
clc
jle
aas
jg
jle
loopne,pt
jae
shll
xchg
and
loope
fiaddl
push
ja
cmp
mov
into
sbb
addb
sub
repz
dec
aas
inc
fistpll
gs
inc
subl
add
insl
cmc
movsb
in
add
dec
clc
push
jns
sarl
mov
bound
arpl
mov
pop
ret
rcrb
les
mov
cwtl
cmp
pop
int
xchg
add
cwtl
dec
mov
sub
push
aad
pop
fwait
ret
dec
or
add
mov
imul
mov
or
mov
xor
movsl
mov
push
ret
fstl
mov
fsub
inc
int
pop
mov
mov
loope
push
jno
test
add
mov
xor
lds
clc
add
sbb
or
push
xor
xor
mov
jle
jmp
or
popa
les
sbb
jno
cmpb
cmp
xchg
pop
adc
inc
rolb
adc
xor
daa
push
and
add
dec
push
icebp
add
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
push
cld
xor
aas
jg
jle
xchg
inc
mov
adc
orl
cmp
subb
cwtl
je
cmp
inc
or
mov
fidivs
lods
sbb
mov
xchg
mov
nop
clc
sub
testl
call
push
xorb
pop
or
je
sub
js
leave
adc
sub
insb
sbb
pop
jp
repnz
jae
andb
mov
aad
lods
fs
push
add
sub
out
sbb
sub
test
insl
mov
jmp
jl
add
dec
sbb
inc
mov
cwtl
stos
jae
lock
jl
lods
adc
mov
in
mov
jae
mov
inc
inc
sbb
xchg
mov
loop
xchg
pop
adc
out
jle
cwtl
in
mov
lock
lcall
push
cli
sub
xchg
cmc
jnp
mov
mov
push
into
int
dec
add
test
xchg
sahf
sti
adcl
jp
cmpsb
sarb
pop
pop
jo
xor
ret
cmp
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
push
pusha
adc
mov
jle
aas
jg
jle
xchg
jp
jns
lods
xor
sbb
gs
pop
shlb
mov
out
pop
sti
fidivrl
xchg
les
cmc
ss
push
out
out
lock
pop
jns
ljmp
hlt
xor
or
loop
sub
ss
pop
adc
inc
and
ret
in
inc
dec
lods
dec
call
add
scas
outsw
mov
mov
out
and
mov
pop
es
jae
adc
rcr
hlt
and
popa
xchg
out
jmp
add
daa
sub
loopne
stos
iret
xchg
dec
mov
insb
cmp
imul
jecxz
and
add
lock
xchg
lcall
out
sub
cli
mov
test
mov
scas
and
adc
lret
pop
inc
and
fsubrp
dec
add
repnz
hlt
adc
adc
bound
enter
shll
or
jo
inc
inc
hlt
movsl
sbb
jmp
sahf
je
stos
add
pop
testb
in
mov
sbbl
jmp
fmull
cld
popf
mov
scas
aad
gs
jno
jle
aas
jg
jle
aam
cmpsb
sbb
xchg
aam
jno
jnp
pop
jmp
rcrb
mov
mov
cmpl
sbb
cli
xchg
add
std
scas
test
aad
addr16
in
movsl
lock
scas
or
das
mov
aad
or
cld
pop
iret
sub
mov
mov
mov
cwtl
outsb
pop
xchg
mov
sub
push
fdivrl
outsl
add
xor
dec
jmp
xchg
inc
repnz
cmp
and
or
xlat
xor
push
xchg
mov
add
cmc
or
call
mov
push
into
cmpsb
cmp
aam
inc
popf
scas
mov
mov
out
das
mov
mov
lock
cmpsl
dec
cmpsl
push
inc
inc
pop
shrl
and
xchg
jno
gs
inc
jp
sub
or
dec
rep
push
mov
fldl
ret
enter
pop
mov
cltd
cmp
jge
stc
dec
sbb
data16
pop
xchg
mov
sarl
out
ds
mov
xor
inc
movsl
and
fwait
lahf
sbb
mov
push
adc
lahf
pop
rcrl
in
xchg
or
and
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
out
adc
jle
aas
jg
jle
test
cltd
addr16
cmpsb
aad
and
push
pop
or
xor
rorl
sbb
mov
femms
and
leave
std
push
int
inc
inc
lds
inc
fxch
dec
out
pop
leave
or
imul
mov
cmp
push
insl
pop
pop
mov
inc
clc
mov
std
push
dec
cltd
mov
dec
jp
adc
or
stos
push
pop
jp
sub
xchg
call
fsts
fnsave
in
mov
xor
inc
mov
sub
aaa
jmp
or
fiadds
ret
jb
pushf
cmp
xor
sahf
push
xor
and
sub
fmulp
daa
dec
push
iret
enter
push
out
int
xchg
les
stc
int
vucomiss
fld
ljmp
outsl
xchg
jge
pop
mov
fisttpll
cwtl
sbb
jmp
adc
xchg
movb
addl
fs
ret
and
cmc
inc
fimull
sahf
jb
push
pop
lahf
outsl
jmp
insl
fidivl
out
inc
aad
fidivrl
popa
xor
ret
insl
leave
ja
ds
push
mov
add
imul
daa
push
pop
jns
sahf
mov
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
pop
test
sub
shll
gs
sti
jae
ficomps
sub
out
movsb
mov
stc
xchg
xlat
mov
inc
test
les
xlat
add
imul
sbb
push
das
sbb
out
insl
cmp
or
into
rcrb
pop
xchg
incb
and
in
lret
lock
loop
insb
jnp
jnp
test
sarl
test
and
out
stos
fs
dec
scas
into
mov
mov
lcall
ret
mov
icebp
push
clc
push
cmc
repnz
cld
xor
add
arpl
dec
gs
in
pop
jmp
cmp
pop
jne
pushf
ds
push
pop
sbb
in
fldl
dec
int3
add
xor
fyl2x
push
fs
iret
lods
in
mov
mov
loopne
mov
inc
or
mov
xor
and
call
dec
mov
cld
aad
imul
jbe,pn
mov
push
out
lahf
pushf
inc
push
shlb
repz
cmp
prefetchw
or
xorl
sbb
out
inc
test
sbb
rorl
pop
mov
jno
lods
popf
xchg
shrl
lea
jmp
and
and
sti
inc
and
jle
jg
jle
rcrb
push
jle
std
pop
push
push
clc
ror
xchg
cld
adc
inc
dec
mov
mov
dec
ss
iret
add
stos
out
div
mov
rorb
xorl
mov
mov
adc
mull
bound
sub
leave
sbbl
scas
jl
aam
stc
fbld
pushf
cmp
repnz
out
xchg
or
mov
dec
sub
pop
std
das
popf
pop
aas
mov
mov
mov
xor
sbb
pop
add
fs
mov
mov
ret
sarl
lods
test
leave
pop
pop
in
adc
mov
push
dec
inc
in
scas
xchg
fdivl
inc
jne
mov
push
test
pushw
cwtl
dec
movsb
add
xor
in
push
cmp
in
gs
jae
sbb
jnp
mov
jae
cld
lods
sub
movsb
dec
nop
into
jl
cmp
arpl
inc
or
stos
xor
insl
xor
and
dec
imul
jge
adc
pusha
inc
push
jbe
xor
pop
add
cltd
fistl
xchg
shrb
incl
push
pushl
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
jg
fists
insb
dec
das
mov
mov
jae
cmpsb
mov
loopne
lock
push
filds
sbb
fbld
and
jp
mov
xchg
insb
cmp
mov
jne
sahf
in
pop
rcr
xchg
jmp
hlt
xor
adc
adc
xchg
xchg
sub
push
jecxz
push
push
outsl
and
inc
push
inc
sub
pusha
orb
sub
push
popa
insb
dec
fdivr
test
sub
push
int
lds
jmp
push
popf
sbb
scas
fs
add
in
cmp
fs
pop
aas
roll
lods
xchg
xchg
xchg
dec
push
in
int
aad
pop
or
repz
add
lods
and
and
or
xor
cmp
xor
xchg
outsb
jb
pop
sbb
cld
pop
push
xor
mov
push
aaa
jo
dec
sahf
lock
xor
aam
lock
add
cltd
es
xor
jmp
ret
dec
dec
sarb
sbb
push
in
mov
xchg
fs
scas
ss
ret
movsb
es
cmp
mov
mov
dec
clc
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
ja
fnstenv
bnd
aas
jg
jle
in
cmpsl
or
test
rclb
insl
aam
cmp
pop
jb
das
push
or
sti
mov
enter
push
xchg
fwait
or
push
inc
and
inc
jge
mov
and
insl
testb
dec
xor
fisubrl
adc
xor
inc
stc
sub
outsl
sub
jmp
cmp
mov
imul
lods
das
mov
inc
add
inc
inc
loope
or
jle
mov
push
mov
das
xchg
daa
mov
pop
inc
adc
fs
aas
test
mov
adcb
orb
mov
jl
and
stc
pop
ljmp
enter
lds
sahf
or
loopne
test
and
js
and
fnsave
aad
stos
bound
orl
popw
out
das
push
sbbl
enter
cmp
xchg
sahf
enter
inc
cltd
std
les
mov
inc
pusha
xchg
pop
cmp
iret
cmpsb
mov
es
pop
and
mov
xor
lods
jecxz
sbbl
inc
jns
and
out
xchg
fxch
jae
mov
add
mov
mov
test
je
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
hlt
xchg
es
mov
mov
andl
sub
xor
arpl
sbb
jns
push
stos
jecxz
pop
push
push
mov
add
out
mov
inc
cs
pop
cmp
fs
aam
adc
fmuls
push
mov
xchg
test
push
faddp
in
dec
testb
mov
das
pop
jbe
repnz
push
mov
popf
repz
std
leave
ss
adc
pushl
out
rorl
sub
jmp
or
in
je
outsb
data16
loope
outsl
outsb
js
in
das
int3
fwait
mov
inc
sahf
sbb
and
jmp
out
xchg
xchg
rcrl
daa
out
sti
fs
xor
outsb
sbb
jbe
sub
imul
movsl
iret
or
mov
sti
pop
lods
xchg
pop
mov
push
pop
sbb
pop
mov
iret
shlb
cltd
dec
daa
es
mov
movsl
xlat
mov
push
aas
les
out
cmp
and
xor
sti
dec
repz
scas
xor
xchg
inc
fscale
aas
push
cwtl
cli
inc
mov
jmp
and
lods
lret
movsl
sub
push
dec
hlt
jle
aas
jg
jle
jns
lret
imul
cmpsb
mov
xchg
add
jo
repnz
pop
mov
scas
inc
xorb
test
xchg
fimuls
js
cmp
mov
jne
rol
mov
or
pushf
dec
dec
add
mov
cmp
jae
shlb
js
lods
or
out
mov
dec
xchg
in
xor
sub
js
test
jae
sub
je
inc
sahf
and
in
pop
add
scas
inc
nop
popa
stos
fnstenv
nop
jnp
cmc
push
jbe
out
imul
imul
cs
xlat
adcb
cmp
inc
cmpsl
cwtl
add
int
mov
lahf
pop
movq
repz
adc
std
outsb
out
adc
jne
outsb
stos
mov
mov
sbb
cmp
test
imul
test
push
out
push
sub
sbbb
imul
sub
xabort
push
int3
sbb
pop
mov
mov
mov
xor
dec
mov
loope
cmp
iret
inc
xchg
popf
inc
js
xlat
sbb
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
fiadds
or
jle
aas
jg
jle
add
insl
scas
adc
arpl
xchg
ret
stos
xchg
xchg
push
pushf
call
cmpsb
insl
test
jmp
fs
js
or
mov
das
push
mov
add
out
aas
fimull
mov
cmp
or
pop
movsb
cmc
dec
shlb
cmpsl
popa
outsb
movsb
or
jle
push
push
test
fimull
aad
or
xchg
daa
je
daa
xor
sbb
and
jl
sbb
ficoml
lds
rcr
xor
outsl
cld
inc
inc
push
mov
mov
pop
xchg
mov
testl
mov
and
loopne
pop
int3
gs
xchg
out
adc
push
cmp
movsl
add
aad
inc
or
jle
roll
xor
sbb
push
xchg
popf
int3
push
mov
addr16
add
mov
xor
mov
push
cltd
imul
mov
stos
test
add
lea
imul
add
xchg
hlt
cli
repnz
pop
iret
mov
das
sbb
int
mov
in
or
or
push
daa
or
popa
dec
popf
sbb
mov
fcoml
outsl
push
mov
mov
jmp
test
test
jge
cmp
dec
push
jle
jg
jle
mov
repnz
mov
into
push
inc
jmp
xor
cmp
and
mov
stos
or
mov
jbe
pop
lock
inc
rorl
addr16
fwait
and
cmc
lret
and
and
cmp
rolb
xchg
insl
hlt
icebp
sbb
addr16
adc
lock
aas
icebp
lds
mov
xor
mov
inc
gs
in
pop
dec
loop
into
loopne
push
xchg
fdivrs
push
movsb
sub
or
mov
xor
mov
pop
adc
ret
mov
xor
cmpsb
jnp
movsb
sbb
adc
pop
pop
xchg
mov
lret
mov
fcomp
and
inc
jo
ficomps
aad
fwait
push
jb
cld
repnz
mov
xchg
push
aam
cmp
js
outsb
lds
xchg
lods
lcall
outsl
ds
mov
sub
mov
mov
mov
jno
inc
aad
mov
jg
orb
test
xor
sarb
int
cmpsl
adc
jae
fsubr
out
pushf
or
cmpsl
xchg
loopne
xlat
lahf
and
inc
enter
insl
xor
hlt
test
nop
movsl
add
xor
mov
add
jmp
mov
or
lods
jge
out
mov
orb
jle
jge
jle
mov
pop
cmp
iret
xor
jl
mov
les
mov
imull
add
xor
pop
test
popl
js
ds
pushf
xchg
repnz
ds
push
dec
into
push
xchg
and
jl
mov
or
aam
push
outsb
pop
imul
add
push
xor
mov
cmc
rcrb
pop
clc
mov
int3
fs
call
imul
jnp
cmc
mov
push
call
stos
sub
loopne
ud1
shlb
mov
rorb
xchg
movsl
ja
testl
fwait
insb
gs
and
fwait
xlat
mov
into
into
int
jae
test
mov
adc
add
or
xchg
test
and
jmp
jae
jle
and
popa
mov
subb
pop
xor
add
mov
lahf
dec
adc
pop
jne
mov
inc
jl
lcall
cs
mov
mov
pop
pop
cmp
mov
mov
xor
add
mov
imul
mov
jmp
inc
sbb
gs
jae
sub
jle
jg
jle
push
ret
sbb
or
cwtl
sti
scas
fcoms
lret
mov
lods
jns
or
sarl
jns
in
and
in
pop
mov
mov
jg
test
hlt
pop
shrl
in
jne
inc
pop
cs
vrcpss
push
push
or
dec
jnp
add
cmp
lahf
jne
mov
xchg
sbb
cmpsb
xchg
lods
and
aam
pop
xchg
xor
xchg
pop
adc
sub
xchg
sub
jg
sbbl
push
sub
stos
notb
cld
fwait
outsl
jnp
fildll
bound
ss
repnz
mov
adc
sub
xor
xchg
push
and
loope
leave
push
mov
jl
mov
or
pushf
cmp
jecxz
int3
cmc
jl
cs
push
insb
xchg
and
cmp
pop
dec
cmc
push
push
or
pop
fnstsw
mov
fdivl
push
bound
or
fisubrs
out
xor
inc
mov
lock
jge
mov
sub
mov
sti
adc
add
fwait
pop
ficoml
jno
insb
gs
mov
pop
shrb
test
rorl
or
enter
add
call
push
adc
inc
addb
or
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
cmpb
jle
jg
jle
adc
jne
sahf
sbb
lock
mov
imul
lds
xchg
inc
inc
push
pop
adcl
fimuls
js
imul
outsl
roll
outsl
lea
xchg
or
pop
das
es
hlt
test
js
sarl
lcall
outsl
cmp
xor
sbb
add
dec
in
jmp
das
or
popf
cmp
jae
ds
jo
or
jne
xchg
aad
adc
scas
mov
jnp
nop
or
repz
adc
xor
iret
cmpsl
insl
shrl
xchg
fdiv
in
xchg
je
incb
je
das
pop
or
pushf
pop
movsb
mov
jbe
fsubrs
aas
sub
stos
xor
outsl
aas
xor
icebp
ret
add
jb
push
push
out
or
xor
insl
scas
xchg
pop
push
jne
pop
push
insb
icebp
ss
std
mov
cmp
pop
xchg
roll
mov
inc
loope
repnz
push
jno
stc
insl
mov
push
xor
repnz
stos
mov
flds
mov
mov
mov
add
push
or
xchg
mov
mov
xor
lea
mov
mov
jmp
cs
jecxz
jnp
aad
lock
inc
in
inc
into
mov
aas
jg
jle
rol
adc
shlb
call
subl
hlt
xor
mov
cmp
mov
xchg
std
pop
pop
loop
xor
inc
ljmp
lods
sub
xchg
mov
jo
push
dec
pop
ds
mov
popf
push
xchg
xchg
mov
cmp
out
lea
stos
sbb
fisubrs
cmp
push
add
movsl
into
lds
outsb
cld
repz
jae
lock
shlb
subl
mov
test
pop
jge
aaa
js
sub
movsb
pop
mov
lock
outsl
in
mov
cmc
addr16
mov
jnp
mov
test
jp
stos
xchg
lahf
push
mov
push
and
lds
fldl
lds
enter
mov
and
mov
rolb
adc
cld
push
xchg
pop
icebp
mov
data16
adc
addr16
mov
xlat
outsb
or
das
cmp
cmpsb
mov
daa
andb
and
loopne
aas
loop
adc
xchg
push
or
add
imul
jmp
into
jb
pop
inc
pop
fisttpll
dec
hlt
cmc
lds
jg
jle
pop
mov
push
icebp
lods
mov
icebp
xor
stc
adc
out
ds
iret
clc
adc
lods
pop
push
mov
cltd
popa
das
adc
sbb
andl
aaa
cli
push
shlb
cmpsl
dec
mov
and
fnsave
push
jecxz
std
cmp
xchg
into
mov
ret
test
inc
insl
into
lret
popa
add
xchg
mov
cmp
adc
mov
jne
loop
ds
and
nop
aaa
stos
out
jne
cltd
jge
xchg
mov
cmp
pusha
push
mov
jge
fbld
sub
je
add
lea
aam
cmp
or
sti
xor
mov
popa
push
push
leave
xchg
xor
lret
fsubs
mov
pop
adc
pop
xor
inc
xlat
cmp
aad
jle
push
cld
fldenv
in
arpl
adc
imul
lods
or
js
mov
jecxz
loop
mov
push
ljmp
xchg
push
ljmp
adc
pop
dec
adc
pop
or
mov
mov
test
sbb
pop
rorl
cld
jmp
out
cmp
jp
sti
inc
aaa
mov
test
mov
aas
jg
jle
repz
mov
mov
jbe
or
push
lods
shlb
int
jae
ljmp
pop
xor
adc
mov
int
add
jb
mov
mov
shl
fidivrs
rcrl
insb
pop
aas
jl
pop
xchg
pop
xchg
sbb
shll
inc
lea
test
out
push
jae
add
xchg
and
loope
inc
hlt
adc
mov
push
and
sub
dec
int3
mov
inc
add
xchg
incb
xchg
fcoml
int3
ss
xor
adc
mov
jle
insb
add
mov
and
push
jp
mov
xchg
jle
jecxz
roll
je
stos
push
mov
subb
push
push
mov
mov
mov
das
dec
add
fwait
out
mov
jne
mov
jb
rcl
jae
aas
pusha
sub
fdivs
mov
jae
push
loopne
fwait
cwtl
and
repz
fwait
in
and
ja
xchg
jp
sub
add
adc
mov
inc
sub
adc
movsl
ljmp
jl
lods
jecxz
scas
jb
sub
scas
push
fnstsw
adc
test
sbb
rorl
or
enter
cli
decl
add
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
push
add
jle
jg
jle
and
sbb
movsb
inc
andb
inc
mov
fisttpll
movsl
repz
mov
aaa
push
hlt
xor
or
fildll
xchg
adc
rorl
in
notb
lea
inc
xor
cmpsl
push
push
lret
lods
push
lods
inc
or
inc
add
int
inc
mov
mov
adc
jbe
push
lock
dec
cli
mov
mov
loop
loope
fdivp
mov
test
lods
dec
push
cmp
jmp
outsb
pop
sub
pusha
add
inc
cwtl
jle
add
xor
shll
sub
ljmp
jnp
cwtl
mov
push
adc
in
sbb
inc
mov
pushf
popl
mov
in
and
sbb
jne
lods
and
xor
pop
sub
add
lcall
and
mov
es
popa
outsl
test
mov
test
inc
fdivrs
mov
sahf
fs
inc
xor
pusha
fcmovbe
les
adc
mov
cli
mov
xor
jmp
mulb
jne
lds
mov
stc
flds
jg
jle
loope
xchg
xchg
mov
push
sbb
je
jno
shl
fisubl
xchg
add
stc
jbe
xchg
movsl
fcomi
cwtl
pop
jbe
fisubrl
dec
pop
sbb
fnstsw
in
mov
pop
cmpsl
neg
mov
mov
pushf
pop
addr16
fbld
mov
test
cltd
in
test
jge
sti
dec
test
fnstenv
sub
cmp
jg
stos
stos
leave
cmpsb
pusha
sbb
jnp
shll
fsubs
lcall
ret
popa
int3
pop
into
pusha
or
jo
add
int3
inc
loope
pop
adc
mov
mov
movsb
dec
mov
sbb
mov
mov
out
dec
outsl
fsubrl
add
out
test
lahf
cld
testb
addr16
mov
sub
pmuludq
daa
xor
push
ljmp
inc
mov
scas
jecxz
xlat
sub
outsl
mov
mov
adc
fistpl
aas
rcrb
jmp
not
mov
xchg
jmp
and
mov
mov
cmp
insb
js
scas
mov
xor
inc
jmp
jae
aas
mov
cmp
repz
addl
jg
jle
dec
fcmovb
and
add
or
das
mov
adc
shlb
cmp
iret
cmp
sti
popf
adc
lahf
mov
pop
pop
mov
shlb
push
incl
sahf
mov
ds
xor
jge
je
jl
lcall
gs
push
fstpl
es
dec
xchg
pop
xchg
aas
scas
insl
jmp
sub
sub
cli
test
aas
popf
lods
cmp
and
addr16
push
add
mov
lcall
cmc
sbb
fwait
dec
jg
mov
test
pop
add
iret
insb
sub
pusha
inc
aaa
and
daa
shrl
xor
pop
mov
push
add
lret
push
or
sbb
jae
mov
stc
cmp
fcomp
sub
fistl
not
mov
mov
pop
mov
sbb
xchg
cs
sar
ljmp
inc
inc
aas
addb
jne
clc
add
imul
sub
xor
cmp
je
jmp
xchg
mov
mov
inc
inc
sbb
cmpl
jg
jle
fs
fisubrl
fldenv
das
xor
das
test
xchg
xlat
push
and
lods
sarb
jae
lea
pop
inc
fidivs
int3
mov
fdivr
jge
int
rol
add
jo
xor
xchg
popf
fisttpll
jle
ret
sub
mov
xor
cmpsl
fidivl
leave
sub
sbbl
pop
iret
cld
stos
pusha
jecxz
ret
push
sti
pop
movsl
adc
sub
sti
shll
xor
xchg
jecxz
cmp
mov
mov
dec
jge
push
xor
cmp
pop
mov
inc
repz
jle
jo
pop
pop
adc
sbb
push
push
mov
popa
ret
iret
inc
push
or
xchg
cwtl
hlt
psubw
inc
stos
iret
jecxz
xor
sub
inc
int3
ljmp
push
stc
cmp
sub
pop
xchg
mov
cmp
cmp
mov
nop
clc
test
movsb
xchg
and
aad
inc
sbb
cmpsb
add
repz
fdiv
pop
jae
and
cmp
mov
bnd
dec
leave
jecxz
cmc
popf
ja
gs
jecxz
test
ss
lds
lcall
dec
adc
jns
rclb
mov
aas
jg
jle
popa
dec
fnstcw
mov
pop
push
cmp
cltd
aas
adc
or
out
xchg
aas
insl
inc
jl
int
mov
repnz
xchg
cmp
inc
cmc
aad
adc
pop
inc
scas
fildl
ljmp
ja
inc
cmp
leave
test
arpl
pushf
iret
popa
xchg
push
sbb
imul
cmp
adc
inc
pop
enter
and
jl
inc
inc
imul
js
js
dec
inc
xor
arpl
dec
sahf
mov
lods
sbbb
jae
inc
ljmp
jns
jge
sub
inc
ljmp
int3
ljmp
iret
mov
dec
cmp
sub
jle
add
je
jle
push
test
cmp
push
mov
aaa
popa
dec
cmp
clc
test
cld
sbb
push
pop
adc
rep
lea
lods
ja
inc
mov
pop
mov
sbb
cli
mov
or
cmp
xchg
roll
mov
mov
pop
andb
mov
xchg
dec
sub
cmp
ret
mov
add
rolb
in
inc
mov
pop
push
pop
inc
xchg
jmp
ss
or
mov
jmp
movb
jle
jg
aam
sub
and
mov
cli
out
pop
adcb
cs
out
scas
push
out
ljmp
ret
fadds
mov
xchg
es
scas
cmpsl
loop
dec
mov
in
ret
or
sbb
sub
insb
ret
push
xor
sbb
mov
cmpsb
pop
xor
push
clc
adc
je
or
jae
das
inc
or
hlt
mov
add
popl
push
jns
stos
mov
int3
dec
mov
ss
test
test
jb
aas
jge
icebp
movsl
cmp
dec
jnp
lcall
xor
pop
dec
sti
adc
cltd
stos
pop
mov
mov
in
fidivrs
xchg
int3
inc
push
mov
ret
mull
jle
xchg
rorb
stos
ret
in
pop
in
sub
inc
ds
push
sahf
pop
cs
loopne
fidivrs
clc
xchg
out
dec
daa
hlt
add
or
loopne
mov
inc
sub
dec
dec
clc
into
hlt
and
insb
and
js
xor
loopne
outsl
fdivr
jae
ficomps
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
roll
xchg
aas
jg
jle
je
jno
adc
dec
sub
mov
adc
adc
fdivr
pusha
add
pop
sub
mov
mov
outsb
pop
xchg
jecxz
push
jbe
lea
mov
mov
inc
scas
mov
inc
lds
sub
pop
lds
insl
rcrb
mov
dec
and
push
sub
int3
adc
jns
lds
cmp
add
pop
inc
popa
dec
mov
or
push
lcall
jae
adc
bound
inc
pop
bound
pop
cmpsl
loop
adc
pop
les
jmp
xchg
xor
sbb
xchg
clc
cmp
mov
imul
mov
xchg
popa
loopne,pt
push
mov
or
stos
enter
mov
mov
cmp
push
lret
aaa
inc
adc
fisubl
fxrstor
fs
imul
pushf
mov
inc
icebp
dec
ds
push
or
pop
jne
sub
insb
imul
gs
sub
cmp
shlb
out
push
mov
call
inc
hlt
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
