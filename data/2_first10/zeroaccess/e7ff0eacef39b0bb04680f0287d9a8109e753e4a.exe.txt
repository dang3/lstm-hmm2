mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
push
and
nopl
jmp
mov
xlat
les
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
mov
adc
lret
cwtl
dec
push
in
cmp
sub
daa
repz
imul
mov
insb
sbb
ret
dec
adc
cmc
jmp
movsl
les
dec
cmp
lea
and
cmp
xor
rolb
ds
sbb
xchg
pusha
or
xor
fstpl
add
jnp
scas
fcmovnb
mov
mov
fists
fs
jb
mov
mov
xchg
or
dec
jmp
fsubrs
pop
fwait
add
lahf
mov
mul
pusha
and
gs
adc
mov
and
jae
iret
sub
scas
lea
lods
xchg
out
lods
inc
push
mov
ret
mov
push
insl
mov
in
loop
bound
cli
insl
xor
dec
adc
cmp
mov
das
sub
cmpsb
rsm
fnstenv
cmp
mov
data16
sbb
bound
faddl
icebp
xchg
nop
push
cmpb
jg
scas
add
cmp
jnp
pop
xchg
cwtl
inc
dec
lcall
cli
and
push
add
xchg
xchg
gs
lock
loopne,pn
out
cmp
lahf
jae
bound
cmpsl
ds
mov
cmpb
inc
push
ret
add
or
pop
xlat
jl,pt
sbb
dec
pop
pop
xchg
dec
add
cmpsl
inc
push
data16
pop
pop
insl
xchg
aam
ljmp
or
out
jno
mov
nop
in
mov
add
or
inc
dec
jle
sub
xchg
jnp
loop
orl
xchg
data16
inc
fildl
or
scas
pop
inc
pop
and
nop
das
mov
scas
lahf
ljmp
cs
addb
inc
pop
sub
sti
xchg
xchg
scas
addr16
jecxz
out
inc
push
cltd
mov
add
and
in
iret
pop
jmp
and
add
push
inc
inc
add
or
fwait
cmp
ficoms
test
bound
add
add
pop
pop
rep
outsb
or
jnp
dec
cmp
les
les
add
jo
adc
or
sarl
aam
in
push
xchg
lods
mov
pusha
sub
lods
push
pop
in
jns
xchg
cmp
in
mov
pop
mov
mov
in
mov
popa
iret
rcll
mov
les
pop
aad
mov
mov
jae
cmp
test
mov
inc
jno
ret
leavew
mov
cmpsl
inc
stos
mov
jbe
mov
jne
loop
pop
push
jb
push
pop
cmp
mov
icebp
cs
scas
outsb
rcll
and
mov
xchg
jecxz
cwtl
movsl
pushf
rorl
ss
push
pop
mov
inc
mov
mov
outsb
adc
sub
lret
lahf
int3
mov
je
mull
aas
xbegin
notb
fs
and
mov
mov
push
fwait
mov
dec
fsubr
xchg
aad
ds
fiadds
lret
or
adc
loope
dec
pop
or
inc
xorb
dec
lods
daa
test
xchg
out
imul
sub
jbe
in
testb
idivb
push
mov
jno
ds
ds
daa
je
pop
js
sub
popf
inc
shll
int3
ss
inc
jmp
popa
inc
xchg
aam
xor
push
out
test
decb
cmp
pop
loop
xchg
mov
lea
xor
mov
push
xchg
fistl
loop
jg
jp
aam
lds
fistpll
add
rorb
push
mov
xor
nop
push
pop
xchg
xorl
inc
jl
mov
cmp
xor
bound
and
sub
jae
ljmp
orl
xor
dec
sbb
jl
addr16
jb
aad
fcomp
stos
push
jmp
xchg
pop
dec
loop
icebp
jae
in
adc
aad
icebp
dec
xchg
jae
xchg
notb
and
sbb
mov
push
sbb
xor
hlt
mov
cwtl
sbb
ficompl
cmpsl
xor
loopne
clc
lods
mov
jne
pop
pop
mov
jbe
xor
and
notl
or
cmpsl
rol
imul
xchg
dec
repz
mov
inc
movsb
fs
aas
call
push
stos
fimull
jp
add
icebp
xor
fisttpl
jmp
dec
cld
xchg
or
mov
stos
ret
push
mov
push
xchg
jno
lcall
adc
aad
sub
push
fisttpl
sub
xchg
inc
lret
xor
dec
pop
push
mov
mov
pop
dec
int
adc
int
sbb
subl
inc
loop
daa
adc
leave
sahf
out
xchg
insl
sub
rcrl
mov
loop
xor
xchg
fildl
scas
fiadds
xor
loop
pop
stc
pop
add
sbbb
popa
sahf
rol
lret
xor
jnp
sar
lock
inc
cmp
fs
icebp
call
push
in
jecxz
sarl
aam
push
jle
jae
leave
out
jbe
pop
add
xchg
inc
daa
in
jp
xor
sub
mov
imul
stc
ret
mov
jle
psubd
cmp
jge
aaa
inc
das
jge
pop
ret
stc
scas
rcl
inc
xor
js
js
lcall
test
inc
inc
add
add
xchg
pop
cmpsb
call
daa
and
sahf
mov
sub
pop
push
mov
mov
xchg
jl
fdivs
pushf
out
adc
add
shll
sub
and
test
cltd
jmp
movsl
out
mov
and
push
loope
xor
into
enter
fucom
ljmp
movsl
xchg
repz
int
outsb
fcomps
ja
mov
repnz
sub
jnp
jae
fistpll
out
dec
or
cmp
sahf
xchg
aam
mov
sbb
xor
jle
dec
mov
sub
xor
cwtl
dec
repz
mov
pop
cli
sbb
repz
je
cmp
xor
jmp
or
inc
sti
sahf
cmp
add
add
add
jo
add
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
pminsw
jmp
daa
add
pop
icebp
test
adc
in
or
test
xchg
mov
cmp
dec
sub
jge
cmp
int
rcll
fsubrp
sahf
inc
fwait
aam
mov
or
faddl
cmp
mov
mov
cmp
pusha
dec
movsb
and
jo
pop
es
sub
ja
or
push
testl
jnp
and
ja
pop
lea
push
cmpsb
and
inc
sub
outsb
cmp
cmpl
fwait
daa
cmpl
mov
sbb
lret
daa
je
mov
out
ud2
or
leave
shll
lret
ret
hlt
sarb
outsl
sti
int3
dec
xor
dec
les
enter
rcrl
jo
loop
push
cmpsl
sbb
fadds
push
ds
push
push
and
out
test
dec
push
and
mov
call
jnp
push
in
es
dec
fldl
jnp
pop
sbb
mov
cmp
inc
xchg
cmp
stc
scas
inc
xchg
fnsave
inc
loope
repnz
jae
adc
jno
cmpsl
push
inc
pop
int3
nop
jle
cmp
sub
repnz
push
dec
dec
jns
sbb
mov
ds
idiv
ljmp
dec
mov
xor
pop
dec
mov
jo
xchg
or
lret
push
cli
nop
xchg
jg
mov
mov
sub
es
andb
sbb
push
lds
cwtl
and
rolb
test
imul
dec
xor
insb
inc
fs
add
enter
movsb
hlt
xor
hlt
loop
repz
mov
repnz
push
insb
ja
mull
lods
enter
rclb
xchg
push
cmpl
inc
mov
mov
decb
sbb
dec
xchg
scas
xor
or
lahf
jae
call
ss
adc
inc
outsb
jno
cs
fstp
xchg
sbb
ljmp
push
pushl
mov
dec
fistpll
pop
subb
test
cld
andl
jmp
xchg
fsubl
jnp
jg
ds
pushf
adc
ret
out
out
std
scas
fdiv
imul
sub
into
cmp
inc
stc
sbb
dec
fcomip
push
inc
sub
fsubs
fidivrs
push
pushf
or
push
mov
pop
leave
out
sub
lcall
cmpsb
cmp
hlt
xchg
sub
sbb
aam
in
jne
xor
mov
mov
and
dec
sbb
jp
dec
mov
lret
xchg
mov
cmp
jae
mov
jmp
frstor
and
add
mov
leave
push
lock
or
adc
int
pop
xchg
dec
clc
pop
adc
arpl
out
movsb
lahf
fldenv
mov
loop
mov
iret
jne
dec
xchg
lretw
cmp
xor
loopne
xrelease
add
lock
test
mov
push
sbb
lds
xor
inc
rcrb
xchg
aas
and
xor
xchg
pop
fcmovne
stos
icebp
pop
xchg
cltd
add
and
or
mov
call
jb
pop
sbb
int3
aaa
push
adc
clc
mov
testb
fidivs
into
cmpsl
adc
add
push
scas
popa
pop
cmpsb
insl
lahf
xchg
sahf
imulb
stc
add
int
xor
movntps
shll
sub
jb
fwait
lret
dec
fnsave
jno
imul
xor
push
add
imul
aas
sub
jg
cld
sub
inc
mov
test
pop
jl
outsl
cli
hlt
stos
add
pop
mov
mov
popf
or
ja
pop
sbbb
add
shrb
pop
vmread
gs
std
stos
pop
bnd
cmp
jae
outsl
push
cmp
push
and
add
or
dec
movsl
mov
test
add
jg
mov
add
xor
dec
jmp
mov
dec
test
scas
stos
push
cmc
adc
jbe
cmp
leave
cld
jne
jl
jg
or
lcall
xor
inc
mov
movsl
leave
xchg
pop
mov
and
fwait
clc
pusha
mov
adc
iret
mov
pop
push
dec
xchg
xchg
insb
out
push
cmc
sbb
cmp
xor
or
mov
ficoml
inc
test
sub
dec
and
xor
cs
roll
add
pop
jl
clc
sub
loop
or
push
jno
cmp
loop
push
push
es
fistl
mov
sahf
add
fwait
add
aam
add
jle
mov
pop
repnz
jbe
cld
mov
mov
ret
sbb
push
ret
rcl
movsl
push
pop
sub
push
imulb
or
out
pop
jmp
xchg
clc
mov
imul
add
cmp
ret
jl
mov
hlt
arpl
push
mov
sbb
push
xor
sub
add
adc
loope
mov
pushf
inc
xchg
stos
call
mov
xchg
push
cmp
push
ds
push
div
xor
pop
jbe
adcl
scas
lret
mov
call
leave
mov
dec
fldenv
sbb
dec
movsb
lods
insl
test
sub
into
data16
in
xchg
popa
push
xlat
inc
xor
cs
ficompl
or
adc
mov
ret
dec
dec
lds
add
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
jg
iret
idivb
daa
xchg
dec
sub
pushf
jmp
adc
jae
jb
out
repnz
inc
xor
fwait
push
jbe
daa
push
push
sub
shr
int
xchg
imul
add
sbb
lret
or
mov
sbb
ret
std
aas
mov
out
fisubrs
aas
ret
fs
lods
jmp
adc
out
in
lods
jb
cmpsb
stos
mov
pop
ss
test
inc
flds
push
sbb
jne
sub
add
fdivl
pop
jbe
pop
daa
xchg
data16
cmp
sbb
int
les
xchg
fmul
ljmp
out
test
jnp
shr
fisttpll
dec
aaa
adc
mov
movsl
push
inc
mov
psrlq
add
test
cmp
ss
mov
ljmp
scas
subb
adc
xchg
out
int3
out
enter
aaa
sub
mov
adc
mov
rclb
xchg
shrb
xor
jl
mov
fld
pop
cwtl
hlt
rclb
xchg
enter
fwait
xchg
push
out
mov
ljmp
xchg
shrb
lods
and
mov
cmp
movsl
test
sub
outsb
daa
shlb
add
scas
imul
jle
pop
jb
add
fadds
imul
cmpsb
repnz
xor
pop
mov
fnsave
dec
scas
stos
jns
inc
insb
cltd
ljmp
imul
add
pop
sbb
add
push
pop
lcall
xchg
xor
or
jno
lret
push
rcr
jmp
mov
out
adc
testl
mov
loop
mov
arpl
pop
dec
push
sbb
dec
inc
mov
sar
mov
stos
mov
xor
jne
jae
fwait
test
stos
mov
cmp
ja
leave
loopne
ja
xchg
cs
inc
xor
fstp
call
mov
or
push
loope
mov
cwtl
in
push
or
pop
pusha
jecxz
mov
adc
pop
mov
sub
xchg
out
daa
jle
lds
adc
cwtl
xchg
inc
xchg
movsb
scas
pop
xor
push
imul
outsl
lock
ss
fldl
pop
cmpb
adc
test
ds
lods
push
loop
xchg
mov
out
lret
lea
mov
xor
jnp
inc
jecxz
bound
inc
add
insl
shlb
loop
rclb
fcompl
clc
inc
and
jl
in
imul
mov
stos
push
mov
cli
dec
adc
lret
push
and
xor
repnz
add
sub
fnstenv
pop
or
inc
push
icebp
push
xchg
dec
adc
aas
sbbl
cmp
shl
enter
lcall
icebp
popa
enter
xlat
xor
lret
jle
jecxz
xchg
xorb
decb
sbb
fisubs
mov
or
and
xchg
push
rcrb
xchg
sahf
xorl
adc
aas
sbb
push
pop
fimull
mov
std
cmp
and
jnp
mov
movsl
inc
inc
imul
dec
out
aad
jno
fcoms
inc
push
idivb
cmp
ss
das
not
xor
push
mov
sahf
iret
xor
movb
bound
xchg
mov
inc
std
fwait
pop
sahf
nop
inc
ds
xchg
jbe
mov
fdivrs
int3
mov
and
jp
and
dec
jmp
pminub
in
and
push
sti
inc
sbb
mov
pop
add
pop
pop
outsl
push
jmp
jg
arpl
inc
jl
mov
int3
jp
mov
xchg
daa
fidivs
into
xchg
jmp
pushf
dec
mov
or
daa
pop
test
cmp
sub
enter
movl
xor
hlt
test
fucomi
fsubrp
or
mov
cmp
pop
loop
pop
pop
cli
mov
hlt
loop
sti
inc
fidivrs
ja
sub
subl
out
mov
repnz
cmp
clc
adc
pusha
pop
push
mov
test
add
cmp
add
pop
out
lods
aaa
in
shrl
mov
ds
mov
sub
loopne
or
sbb
iret
sbb
ljmp
pop
push
push
divb
fidivl
adc
stc
pop
mov
sahf
push
fcompl
in
jbe
dec
arpl
orb
mov
rcrb
sub
sub
cwtd
xchg
pop
in
adc
xchg
nop
adc
dec
dec
xchg
movsb
mov
and
pop
mov
pop
and
pop
int
sbb
rcr
ret
test
repnz
sbb
das
sbb
fwait
sbb
rorb
and
iret
or
rclb
lea
cmc
adc
cmpsb
mov
push
gs
sbb
bnd
add
xchg
into
add
lds
jge
or
pop
jne
stos
hlt
add
cmpsb
xor
in
outsl
lds
pop
scas
mov
aas
les
mov
pminsw
sub
dec
insl
data16
sbb
jns
aaa
mov
mov
cmp
stos
add
scas
nop
lds
mov
mov
in
jg
fistps
scas
pop
cli
pop
pop
pop
divb
insl
add
out
or
movd
insl
pop
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
shlb
xchg
fimuls
pinsrw
shrd
ljmp
sbb
in
fisttpll
loopne
pop
test
xor
pop
call
mov
decl
jnp
pop
inc
push
push
pop
daa
insb
mov
mov
xchg
or
push
hlt
leave
ljmp
sahf
ljmp
cmp
cltd
fldcw
mov
insb
cmpsb
push
repnz
add
imul
gs
insl
scas
insl
add
shr
mov
mov
lea
imul
cmp
sbb
xchg
pop
sbb
mov
je
addl
jp,pt
add
sti
xchg
xor
xor
mov
in
ds
out
mov
ret
mov
aam
lcall
fsubrs
pop
lods
mov
mov
inc
fildll
ret
sbb
stos
sbb
mov
cld
push
scas
jo
pushf
cmp
dec
add
and
mov
jge
mov
xor
xchg
or
add
or
js
pop
ret
test
sub
ds
idiv
filds
sti
dec
xchg
or
cmc
mov
fstl
pop
adc
or
add
imul
jns
inc
push
xchg
dec
push
sbb
and
icebp
push
stos
add
push
mov
dec
hlt
loope
adc
inc
idivb
movsl
lock
xchg
xchg
rcrb
fwait
xor
mov
insl
shll
ret
aad
jle
ret
lret
ss
xor
int
fcomi
in
xchg
jbe
inc
jo
es
mov
shrb
loope
jecxz
sub
cmp
xlat
mov
push
into
pop
cli
pop
mov
sbb
std
push
mov
xchg
in
xor
es
adc
mov
mov
adc
push
xor
mov
or
out
fldenv
or
inc
or
xchg
lea
pop
in
daa
fs
das
mov
and
push
nop
adc
inc
mov
xchg
pop
pushf
clc
and
cmp
inc
sarl
stos
push
ss
cmpl
jns
jmp
and
adc
adc
cmp
add
push
fstpt
ljmp
data16
ja
fdivs
mov
add
pop
cmp
jecxz
xor
scas
jne
mov
cmp
sub
xor
pop
mov
push
test
sbb
outsl
out
fdivl
imul
ret
lds
enter
fiadds
mov
mov
fistl
add
pushf
jbe
ss
das
add
dec
push
pop
mov
cmp
in
das
sti
out
ja
cmp
fdivl
xor
add
je
ljmp
jno
cmp
loope
pop
mov
aam
movsl
fldt
repz
aad
and
stos
push
push
push
stos
xchg
pop
and
jno
mov
inc
loop
lock
arpl
sub
imul
add
adc
mov
adc
inc
in
enter
adc
add
loopne
inc
jno
out
insl
add
out
mov
adcb
repz
sbb
jmp
mov
lret
ret
into
int3
inc
sahf
mov
pop
neg
push
daa
in
inc
or
jnp
in
sub
xlat
ljmp
stos
in
lock
mov
dec
xor
stos
lds
in
scas
and
into
cmc
xchg
sar
mov
or
pmaddwd
ror
movsb
mov
inc
mov
cwtl
pop
push
xor
xor
loopne
lea
mov
adc
jecxz
aam
pop
xchg
mov
pusha
sti
xor
ret
pop
sbb
sub
je
outsl
xor
xchg
sub
add
dec
insl
jmp
icebp
lcall
imul
cmp
shrb
enter
mov
mov
gs
lea
mov
add
mov
and
xchg
fwait
jg
jb
xchg
hlt
sbb
roll
inc
arpl
inc
js
fmull
shrb
adc
fldt
jae
stos
dec
mov
repnz
dec
cmpsl
lret
sbb
std
ljmp
or
sbb
push
xchg
mov
lahf
sub
jl
dec
popf
and
inc
sahf
outsb
add
dec
push
into
jg
int3
push
push
in
or
mov
test
clc
jge
mov
shll
dec
das
aaa
or
popa
mov
out
inc
jns
lret
xlat
lret
mov
cmp
mov
push
mov
icebp
lcall
jp
neg
js
or
mov
iret
int3
mov
adc
xlat
sbb
cld
push
scas
jnp
inc
cmpsb
call
test
aas
jnp
sbb
mov
idiv
hlt
sub
rcl
xor
jnp
lahf
sbb
icebp
sub
setns
dec
xchg
mov
add
cs
notl
jns
pop
and
enter
inc
shr
rolb
fldenv
mov
clc
into
test
call
add
mov
dec
jb
xchg
insb
dec
clc
dec
iret
sbb
pop
fidivs
ret
inc
mov
jbe
aad
rcrb
lea
stos
mov
sub
jecxz
jno
es
dec
add
shll
sub
jne
into
sub
icebp
daa
sbb
pushf
shll
sub
pop
aas
data16
std
addr16
loope
mov
sub
pop
mov
inc
mov
push
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
loop
pinsrw
shll
adc
movsl
adc
sub
jo
hlt
jne
lods
out
mov
stc
mov
jb
dec
dec
test
in
sub
lods
mov
xchg
fldt
arpl
faddp
dec
jno
icebp
push
test
lds
push
inc
adc
orb
jne
dec
popa
mov
xchg
cwtl
fwait
lahf
push
and
cmp
fld
out
push
repnz
cmp
mov
xor
pop
and
leave
movsl
test
loop
cli
xor
loopne
lret
dec
fcmovnu
cmpsb
adc
std
jmp
ffreep
cmpl
inc
cli
jne
mov
and
dec
popf
stos
nop
mov
int
push
negb
mov
and
fidivs
fistpl
jno
xor
cltd
ret
icebp
sbb
mov
xchg
inc
jp
jbe
xor
pop
cmp
xchg
mov
and
mov
sahf
sbb
adc
xchg
lods
pop
jmp
adc
mov
xchg
jp
cwtl
fbld
icebp
ss
sbb
hlt
xchg
mov
lods
bound
dec
mov
clc
push
mov
sbb
pop
dec
das
hlt
in
push
dec
ret
push
clc
mov
mov
ret
test
xor
arpl
lret
lds
inc
loop
mov
pushf
pop
xor
or
mov
cmp
movsb
mov
mov
ficoml
push
inc
cmpsb
into
aas
inc
or
push
or
xchg
xlat
rol
xlat
cli
data16
inc
jne
ds
imul
mov
sub
fisttps
loope
aad
test
or
es
mov
call
mov
adcl
fstpt
aad
mov
fsts
in
stos
cmp
int
pop
fadd
test
and
pop
mov
ss
adc
lahf
ja
mov
mov
cwtl
or
es
sub
dec
out
add
push
or
xchg
add
jb
rolb
jb
dec
fdivl
push
push
rcll
inc
cli
test
adc
pop
and
dec
xchg
adc
pop
adc
outsb
inc
and
pop
mov
mov
xchg
add
mov
repnz
push
add
or
push
adc
leave
das
aas
push
and
adc
out
aam
loop
sbb
sub
mov
push
subl
ja
jl
mov
lods
mov
movsb
mov
or
ja
inc
push
push
add
xor
xlat
jecxz
cmp
sar
scas
sarl
inc
imul
mov
leave
gs
inc
fnsave
lock
idivb
popa
jno
test
mov
or
sbb
pushf
ret
and
sub
pusha
and
add
mov
out
sub
xchg
ss
call
inc
push
pop
and
sub
add
rclb
aas
dec
mov
push
sbb
cs
and
add
jl
push
loope
stos
mov
mov
sbb
daa
fisttps
movsl
cwtl
or
fcoml
testb
fidivl
mov
decb
cmp
add
cltd
and
mov
add
sub
out
cmp
or
pop
pop
ficompl
sub
daa
jne
jp
data16
mov
cmpl
fistps
mov
sbb
cmpsb
cmp
sbb
dec
popa
fwait
add
cmpsb
jne
adc
sub
js
inc
xchg
iret
nop
test
test
adc
mov
add
push
xchg
xchg
pop
push
jb
xchg
lods
call
dec
mov
cltd
addr16
inc
xor
cmc
repz
mov
cmp
push
pop
pop
test
lods
mov
and
cmpsl
ds
imul
imul
inc
and
xchg
pushl
shr
rcrl
out
test
outsb
jle
roll
dec
lcall
lds
in
mov
xor
movsb
imul
orl
fdivr
jae
push
xor
pop
xchg
add
dec
push
pop
rorb
mov
aad
mov
cmp
ljmp
ds
dec
sub
cmp
mov
sbb
mov
shrb
int3
dec
mov
cmc
pop
loopne
imul
imul
imul
lods
sbb
mov
aaa
je
lcall
adc
mov
iret
pop
dec
inc
and
fld
addr16
arpl
mov
cld
in
push
inc
inc
insb
pop
fsubrs
movsl
aas
pop
idivb
adc
fadds
jl
jnp
lret
int
sub
shrb
shld
mov
jns,pn
fiadds
inc
or
mov
adc
push
add
lods
sbb
sar
fnstsw
inc
or
sbb
sbb
mov
mov
shrb
loop
popf
nop
mov
xor
jg
jmp
repz
cmp
mov
insb
enter
pusha
cmp
or
jb
mov
fistl
adc
or
dec
or
mov
int3
lock
push
add
sbb
xor
xchg
push
loopne
ljmp
mov
sub
mov
pop
sahf
adc
or
jnp
push
idivb
je
pop
ss
xchg
adc
cmc
or
je
mov
outsl
mov
sub
push
sub
add
inc
pop
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
fimull
rorb
pinsrw
nopl
dec
push
loopne
sbb
mov
dec
xor
fwait
jno
xlat
cmpsl
sbbb
arpl
rcll
dec
sbb
push
pop
dec
subl
cmpsl
scas
mov
jae
loop
das
xchg
ja
js
pop
cmp
mov
adc
sti
pop
pop
jo
jmp
jo
pop
dec
daa
add
and
mov
xchg
mov
and
mov
jnp
int3
je
cmp
inc
xor
cmp
mov
rcll
xor
push
xchg
scas
mov
inc
scas
sti
jno
in
sarl
into
xor
rcrb
icebp
mov
outsl
jg
sbb
icebp
mov
fsubl
push
testb
cmp
aaa
icebp
adc
xchg
mov
and
out
out
jns
cmp
pusha
push
xchg
adc
in
push
rorb
sub
arpl
addr16
mov
xor
iret
or
sub
pushf
mov
mov
cmp
jbe
pop
sub
les
shll
and
jns
jmp
insl
xchg
jl
out
mov
jne
daa
sti
push
adc
push
or
jl
icebp
fisubrl
movsl
jbe
arpl
es
sbb
outsl
xchg
aaa
xchg
clc
lcall
dec
in
ljmp
mov
cmp
cld
sbbl
xor
in
sub
and
jno
or
mov
fadd
repnz
xchg
pop
je
pop
push
les
ds
aas
mov
xchg
cmp
push
mov
imul
pop
ret
enter
mov
into
xchg
add
adc
enter
jbe
jne
ret
jge
sti
mov
fs
dec
cmp
sbb
pop
push
addl
xor
xor
mov
movsb
out
les
mov
ficoml
ret
cmc
or
inc
mov
and
jecxz
lret
mov
and
inc
pop
jbe
xchg
mov
jmp
mov
mov
inc
add
cmc
shl
stos
insl
ds
out
movl
sarl
call
je
pop
push
pop
scas
sub
inc
ret
loop
test
cmp
ffreep
mov
scas
out
push
out
and
addr16
or
mov
mov
lods
clc
pop
lret
cli
xchg
out
cmp
cld
shrb
inc
push
adc
movsb
negb
lahf
mov
inc
out
loop
inc
negb
insb
sbb
push
and
fiadds
sahf
inc
pusha
popf
add
das
or
jo
dec
mov
cmpsb
enter
in
aas
popa
ret
int
int3
mov
dec
negl
lahf
outsl
repz
jmp
mov
fldcw
das
jecxz
call
mov
in
andl
mov
dec
aas
add
cmp
cmp
sub
mov
mov
bound
jno
hlt
fwait
jno
mov
mov
jmp
pop
lea
pop
int
push
das
das
aas
lret
add
ret
ret
hlt
out
cmpsb
lret
xor
imul
pop
popf
outsb
or
sbb
and
call
leave
rclb
xchg
dec
gs
inc
insb
je
mov
push
icebp
cs
outsl
jbe
push
lods
fwait
sbb
or
lods
push
sbb
shr
subb
call
mov
std
mov
insl
xchg
jbe
out
sbb
sbb
mov
push
jmp
lock
push
ja
int
test
add
rcrb
sub
sbb
mov
pop
pop
insb
pushf
dec
mov
aaa
xor
push
decb
clc
shl
call
xor
aad
out
fdivrp
and
cmpsl
xchg
pusha
cmp
lret
cltd
lret
aas
dec
div
mov
inc
insl
outsl
sub
or
add
je
in
mov
ds
jns
dec
dec
sub
or
js
push
mov
pop
aas
loop
xchg
rcrl
sub
out
push
fbld
or
xchg
lods
push
std
outsb
jecxz,pt
xorb
rcrl
mov
sarb
inc
andl
mov
dec
inc
scas
mov
pop
mov
insl
pop
ret
push
dec
jnp
subl
stc
adcb
mov
dec
mov
cmp
aad
lea
adc
dec
sbb
pop
cs
fistpll
mov
dec
sbb
test
xchg
pop
and
jle
dec
xchg
not
jne
in
mov
push
push
adc
ror
std
push
or
cwtl
imul
inc
xlat
outsb
xchg
adc
orb
xchg
jae
test
pop
mov
gs
andb
ds
jae
cs
xor
testl
dec
xchg
fsts
sub
in
sahf
jle
cwtl
and
sub
cli
cmp
subb
fsubrp
add
push
inc
sbb
mov
data16
jge
inc
mov
orl
adc
shlb
inc
aad
in
add
subb
mov
int3
jg
sub
gs
sub
jnp
mov
bound
jmp
scas
dec
add
and
push
sub
insl
mov
mov
xchg
out
scas
xchg
insb
mov
loop
xchg
jno
push
mov
inc
sub
aad
and
enter
sub
inc
jb
and
insb
fwait
add
mov
lcall
cmp
in
push
and
sbb
repz
inc
cvtpi2ps
data16
aaa
xor
adcl
icebp
dec
cmpsb
mov
jnp
inc
adc
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
xor
pinsrw
vmwrite
and
mov
sub
xor
add
outsl
adc
mov
xchg
push
push
mov
xor
lods
mov
fmuls
xorl
je
rorl
pop
ljmp
inc
inc
add
jecxz
and
jmp
xlat
loopne
enter
cmpsl
xlat
xorl
cmp
and
ss
ljmp
inc
lods
movsl
and
adc
fimull
lahf
pop
lret
or
shll
pop
or
stos
pop
mov
cs
mov
fimull
or
les
sub
negl
imul
dec
add
daa
int3
add
leave
xor
cmc
imul
cld
cmc
out
stc
cmp
xor
fsubl
push
push
jb
shlb
and
movsb
popf
stos
cmpsl
mov
jge
add
jg
dec
lds
enter
ss
xor
lock
push
rcrl
enter
popl
into
cmp
inc
jns
xor
dec
mov
push
dec
jnp
std
push
xchg
lock
push
pop
scas
xchg
push
in
cmc
sbb
pop
inc
push
adc
adc
cmp
pop
xchg
mov
cmp
jb
shl
jecxz
int
jb
inc
and
aam
mov
test
fiadds
leave
mov
sarb
sub
adc
xor
sbb
mov
adc
push
lods
push
xor
cld
ljmp
mov
jg
sbb
add
es
sbb
pop
mov
aaa
test
mov
dec
fdivrp
fwait
sbb
cs
dec
dec
int
stc
loope
es
xlat
sti
xchg
mov
mov
int3
or
mov
cli
adc
and
sahf
loopne
jecxz
xor
dec
mov
imul
lret
mov
mov
les
dec
dec
enter
xchg
sub
xchg
jb
and
lods
out
js
xor
enter
mov
int3
sbb
movsb
out
decb
dec
mov
stos
cmp
push
or
inc
xor
scas
mov
sarb
outsl
loope
add
ret
push
jle
jmp
sub
clc
lock
pop
ja
push
dec
push
push
ds
sbb
mov
fmull
jbe
mov
mov
xor
mov
andl
in
lock
mov
mov
mov
fwait
mov
stos
imul
pusha
mov
cmp
or
ret
jl
mov
push
xor
test
pusha
mov
lods
cli
iret
push
pop
scas
in
xchg
addr16
fsubrs
lods
sbb
cmpxchg
sbb
fninit
popf
sbb
xor
add
std
leave
mov
push
xchg
sbb
push
jle
jge
stos
cmpsl
push
sbb
pop
orb
imul
arpl
xor
sub
sbb
mov
jb
repz
das
push
mov
adc
pop
mov
dec
int
pop
int3
pop
or
repz
push
scas
xchg
in
pop
ss
push
xchg
mov
add
stos
sbb
clc
shrl
jmp
fistpl
leave
sub
pop
cmp
xchg
ljmp
test
movsb
loope
add
divb
out
cli
xchg
push
jl
in
jnp
pusha
aaa
and
mov
add
dec
mov
or
push
mov
sub
repz
test
sbb
add
pop
pmulhuw
mov
jle
outsl
pop
xchg
or
mov
test
pusha
outsl
pop
and
inc
testb
in
lock
mov
fisubs
adc
testl
daa
lock
cmp
inc
pop
pop
cmpsb
xor
mov
push
mov
out
add
bound
dec
mov
cld
imul
xchg
lods
loope
in
add
dec
push
adc
js
or
test
test
testl
dec
cmp
add
xor
lods
cli
jb
popf
xor
shlb
in
sub
push
stos
jecxz
loopne,pt
lods
decb
push
decb
mull
shl
mov
jmp
and
test
jge
bound
stos
push
repz
sub
enter
popa
lods
or
sti
or
test
scas
dec
jmp
add
jnp
dec
inc
loope
add
lock
sarl
stos
push
aad
inc
xor
push
shl
in
adc
rol
lock
out
inc
xchg
or
inc
mov
inc
pop
pop
xorl
push
or
clc
lahf
popa
jb
add
mov
jne
out
dec
test
mov
sub
mov
les
xchg
mov
std
mov
imull
mov
or
mov
jmp
xor
mov
xor
jge
dec
in
pop
or
mov
and
sbb
loop
jbe
xor
sbb
push
enter
xor
shl
ss
jl
mov
xchg
inc
lret
repz
cmp
leave
arpl
jne
jbe
add
mov
lgs
add
cltd
sbb
mov
or
imul
pop
push
lcall
mov
mov
add
mov
push
add
ss
insl
ret
and
cmp
adc
xor
daa
cmpsb
int
and
data16
movsb
and
push
cmp
cli
cld
outsl
push
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
cmp
lret
test
pinsrw
mov
lahf
pop
jb
fwait
jo
sar
test
fldl
lds
dec
and
xor
jge
xlat
mov
mull
lret
clc
pop
lods
dec
sub
adc
inc
mov
inc
call
lcall
mov
int
jb
sbb
scas
adcl
aam
popf
jo
hlt
outsb
push
idivl
and
xor
pusha
frstor
lock
outsl
pop
in
aam
mov
jo
nop
outsb
or
mov
outsl
popa
icebp
aaa
aaa
cmp
adc
mov
out
push
xor
leave
in
les
das
lods
jmp
jmp
aas
gs
push
mov
sbb
out
fdivl
jne
rolb
mov
loop
mov
rol
xor
adc
fstpt
xor
pop
fs
lock
jae
cmp
iret
xor
in
push
xor
mul
jno
rorb
dec
push
popf
negl
leave
pop
mov
leave
xor
mov
cmp
cmp
mov
jp
loopne
xor
add
int3
adc
push
lret
cwtl
or
arpl
jg
adc
cmp
pop
lds
mov
movsb
mov
adc
aaa
jno
fs
nop
mov
hlt
in
pop
mov
jno
mov
sbb
ret
push
push
xor
push
inc
inc
add
sarl
pop
loop
cmp
fiaddl
movaps
shrb
jns
mov
sbb
loop
xchg
mov
cld
rcr
leave
popf
add
push
insl
push
mov
das
xchg
lret
cmpsl
cmp
or
mov
cs
sub
push
aam
aaa
mov
push
mov
mov
pcmpgtw
mov
add
cli
test
jbe
loop
arpl
push
aas
lahf
popa
adc
and
scas
jnp
push
lret
push
jge
push
add
mov
adc
outsl
imul
xor
mov
testb
cmp
or
pop
xor
mov
loopne
aas
push
and
pop
jl
in
lods
or
shr
fnstenv
xor
or
or
lds
mov
shrb
scas
jno
ret
mov
jmp
push
aad
scas
sbb
inc
dec
mov
test
aam
pop
cmpsb
dec
xchg
inc
mov
inc
jns
mov
in
movsb
mov
jmp
sub
lods
fiadds
aaa
mov
mov
inc
push
shrb
mov
lahf
loope
adc
imul
in
loopne
popa
xchg
lods
ss
xor
mov
or
cld
rcll
iret
repnz
nop
inc
pop
enter
dec
cmpsb
pusha
loopne
mov
jnp
lcall
xor
movsl
push
outsb
sub
enter
adc
inc
mov
jae
cmp
outsl
inc
ss
ret
test
popf
cmp
outsl
mov
int
ret
sbb
inc
inc
cld
push
and
xchg
mov
inc
je
bound
xor
test
jno
ret
in
and
mov
mov
aas
or
jbe
lahf
and
pushf
enter
ds
nop
leave
or
sahf
fsts
cmp
and
dec
ljmp
adc
pop
dec
in
push
fisubl
mov
inc
lahf
mov
jmp
popa
lret
mov
mov
dec
xchg
stc
xor
mov
repz
mov
loopne
pop
std
push
fldenv
cmp
bound
movsl
sbb
hlt
nop
inc
lods
shrb
jb
lret
in
rorb
lock
mov
out
sbb
and
ror
mov
repz
push
out
add
and
push
mov
cltd
movsl
pop
mov
hlt
mov
cmc
dec
push
mov
pop
outsl
mov
addr16
stos
adc
jl
and
pop
cmpl
inc
es
jge
loope
mov
std
push
addr16
mov
xchg
mov
fsubrs
arpl
push
mov
cmpsb
pop
xor
xchg
add
adc
mov
stc
push
test
dec
ljmp
jp
ret
sahf
addb
aam
mov
bound
addr16
or
xchg
fsts
pop
int3
adcl
scas
movsbl
mov
pushf
in
jbe
mov
and
sub
int
mov
xchg
insl
and
lcall
or
fwait
xor
mov
aas
fildl
std
lcall
mov
data16
sub
enter
push
ds
add
stos
mov
pop
sbb
xchg
roll
into
ret
outsl
lods
sahf
jne
in
js
clc
fnstcw
js
jle
jecxz
fisubs
jp
stos
xchg
jecxz
push
push
imul
aam
inc
add
mov
out
push
inc
test
mov
push
cli
push
icebp
pushf
mov
lret
mov
call
xor
inc
outsb
xor
pop
fidivrl
hlt
mov
jne
or
ljmp
pop
xchg
clc
cmp
and
jnp
jl
inc
inc
shr
cmp
int
mov
cltd
ja
stc
and
or
scas
or
pop
mov
and
add
mov
adc
pop
movsl
ja
shrb
dec
cwtl
mov
int
cmp
sub
shl
mov
push
xchg
or
push
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
repz
pushf
pinsrw
cld
lods
xor
outsl
int3
adc
xor
xor
shrl
clc
add
pop
pop
push
mov
test
jbe
lods
jecxz
out
fwait
sarl
mov
add
loop
scas
int3
push
cmpsl
insl
mov
sub
scas
xchg
push
imul
adc
jns
jbe
in
add
sbb
push
xor
xchg
or
mov
mov
cli
cs
enter
pop
out
popl
fisubrl
dec
jmp
sub
lcall
test
out
cmp
test
cmp
cmp
dec
into
call
xchg
mov
cmpsb
aad
cmpsb
xchg
push
icebp
lock
push
cmp
xchg
popf
ds
inc
aam
ljmp
test
push
dec
inc
out
nop
test
and
push
pop
mov
outsl
adc
push
jbe
push
xchg
popa
rcr
push
mov
inc
scas
xchg
and
call
xchg
and
sbb
std
cs
daa
cmp
sbb
mov
insb
rol
jns
cmp
mov
mov
call
dec
loopne
pop
mov
test
fadds
push
mov
daa
sbb
push
mov
aad
int3
repz
mov
rclb
popf
jge
insl
add
cltd
lods
je
fcomi
pop
popa
dec
daa
adc
inc
lea
xor
leave
sarl
xor
lcall
daa
sub
outsb
mov
cld
sbb
or
cld
xchg
jbe
mov
jbe
adc
mov
dec
sbb
in
or
pop
ss
inc
jbe
scas
mov
and
lock
pop
xor
jl
out
jge
cmc
xchg
ljmp
leave
sub
add
xlat
xchg
or
loopne
mov
push
out
mov
jmp
mov
and
call
jl
xchg
dec
xor
pop
push
scas
gs
mov
xorl
imul
sub
xchg
mov
pushf
repnz
insb
dec
mov
pop
pop
pop
jo
push
jecxz
push
and
mull
cmp
xor
mov
xor
imul
sahf
rcl
xor
push
or
or
cmp
aas
ljmp
add
mov
lahf
mov
pushf
push
and
xchg
sub
nop
rcrl
sahf
add
inc
mov
add
popa
mov
into
fists
ret
cs
mov
cli
mov
add
dec
cld
add
push
and
arpl
enter
insb
mov
and
clc
orb
push
aaa
xchg
push
les
sub
sub
lahf
add
xor
mov
sarl
dec
xor
in
push
jecxz
stos
or
rorw
dec
movsb
loopne
push
xchg
mov
push
fwait
dec
dec
ljmp
adc
or
sbbl
imul
lods
bound
repnz
pop
adc
add
test
fdivs
aas
andl
inc
cmp
jne
adc
xchg
mov
push
dec
jae
ret
fcmovbe
cmp
or
inc
cmp
pop
jb
xchg
rcl
jne
jbe
repz
fcom
push
add
dec
sub
jge
push
out
xchg
mov
outsb
pop
fmull
and
cmp
into
mov
imul
mov
lea
and
push
add
ficompl
mov
mov
push
push
cmpsl
aad
imul
lret
ds
hlt
or
es
jl
stos
mov
ficomps
into
sbb
adc
add
pop
ja
sahf
mov
mov
arpl
popa
jg
push
sub
cmp
test
mov
loopne
fdivl
xchg
and
fdivrp
cmpsl
and
lods
xchg
aaa
cmp
rcrl
lahf
outsl
dec
out
push
push
loop
xor
decb
inc
pop
pop
mov
dec
fwait
scas
cmpsb
lahf
jge
cwtl
aam
xchg
insb
int
mov
scas
dec
cltd
xor
jb
insl
rorl
cmc
mov
jle
mov
add
and
mov
dec
lret
popf
imul
call
aaa
das
int
sub
fs
ret
arpl
or
fstps
mov
std
push
lcall
mov
insb
in
fsubr
push
push
iret
shll
pop
mov
rcr
stos
mulb
push
lods
std
cli
add
rol
jge
hlt
xchg
adc
popa
mov
stos
or
aad
xchg
ja
xor
aaa
leave
mov
out
mov
out
fmul
adc
mov
into
fadds
cmp
mov
mov
sti
add
rcl
sub
jns
cmp
movsl
nop
inc
in
gs
dec
icebp
jecxz
xor
gs
aad
or
fsubs
mov
xchg
sar
xchg
pop
jg
mov
and
aam
add
push
inc
hlt
in
cwtl
add
ret
leave
jecxz
mov
leave
mov
push
into
movsl
push
into
mov
and
cmp
iret
in
lahf
leave
sbb
push
cmp
jbe
pop
js
adc
bnd
arpl
pop
mov
adc
add
shl
pop
cmp
sti
repnz
subl
dec
cpuid
lahf
mov
push
fucom
push
or
lods
dec
push
xchg
std
mov
add
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
call
mov
cmovb
inc
punpcklwd
imul
lret
test
xchg
jbe
pop
adc
xchg
icebp
jge
mov
xor
adc
popa
or
push
jmp
sbbl
cmp
fstl
sub
xor
cmpsl
pushf
clc
cmpsl
call
scas
ja
dec
or
ja
into
js
mov
call
in
cmpsb
mov
mov
loope
fistpll
jmp
sbb
sub
mov
imul
test
sti
mov
ret
pop
pop
shl
dec
pop
sbb
idivl
out
or
pmullw
cwtl
xchg
dec
jb
lcall
pop
sbb
push
mov
inc
nop
out
push
test
pop
xchg
fbld
lea
mov
movsl
mov
ret
jg
iret
leave
sahf
fs
cmc
enter
inc
stos
mov
lret
inc
lahf
add
mov
push
cmp
dec
test
or
pop
lods
add
dec
dec
jp
mov
fsub
mov
loop
push
decb
jae
and
pushf
inc
inc
mov
jae
ss
pop
jb
or
andl
or
imul
cmp
and
outsl
sarb
cmp
or
or
sbb
jno
sbb
stos
adc
push
mov
outsb
mov
add
push
dec
cwtl
pop
push
sbb
flds
lcall
mov
ror
push
mov
push
jb
mov
sub
and
loopne
fistpll
js
xchg
insb
sub
jne
mov
mov
or
or
enter
jo
fiadds
scas
xor
leave
bound
mov
cmpl
xor
cmp
aad
adcb
or
shrd
lods
in
cltd
cmpsb
cld
push
mov
sti
lcall
and
jle
int
ret
sub
inc
sarb
mov
je
fmulp
adc
popf
xchg
cli
fidivl
or
inc
adc
imul
xor
mov
xchg
xlat
mov
push
sub
and
movntps
jle
stc
adc
push
pop
stos
sub
js
add
sub
in
cmp
or
xor
cmpsb
mov
into
fidivs
push
decl
pop
inc
adc
std
in
call
cmc
add
pop
sbb
adc
add
movl
lcall
sbb
xor
repnz
xchg
mov
addl
lcall
ljmp
add
repz
leave
inc
out
mov
sti
ss
dec
add
push
repz
add
popa
shlb
std
xchg
gs
std
int
lock
ja
jp
repz
add
stos
cmp
mov
jp
xchg
subl
stos
je
mov
ret
mov
inc
ret
cmp
add
dec
ds
pop
dec
cli
int3
fldenv
lcall
jge
fadd
xor
push
mov
shlb
icebp
arpl
outsb
mov
dec
mov
adc
cmp
mov
sbb
xchg
jne
test
push
pop
lods
das
int3
test
ret
xlat
imul
stos
iret
xchg
lods
fidivrl
aas
dec
test
mov
adc
clc
inc
loope
add
int3
mov
xor
jle
mov
test
sti
dec
mov
sub
and
fistl
out
jo
fs
movsb
movsb
sahf
sub
push
mov
scas
jo
movsb
test
mov
pushf
test
outsl
xchg
mov
imull
and
dec
dec
inc
int3
xor
pop
andl
fsts
pop
mov
sub
sti
aaa
test
jmp
jae
shlb
out
repz
lea
je
fwait
and
lcall
gs
inc
fdivrs
fisubrl
shl
arpl
xchg
test
sub
movsb
pop
lods
or
test
pusha
dec
inc
jns
mov
pop
xor
ret
lcall
cltd
rcl
push
xor
ljmp
lret
mov
test
mov
dec
out
rcrb
mov
movsl
arpl
lods
cmp
mov
jle
add
aam
dec
arpl
popa
out
nop
sbb
add
push
enter
scas
push
inc
cmpsb
ret
enter
sub
out
nop
mov
or
cmp
je
cli
pop
lahf
cmp
out
adc
pop
pop
rorl
inc
xchg
lods
pop
xor
adc
mov
dec
sub
push
cmc
cmp
sbb
push
push
lock
div
xchg
call
sub
fnsaves
mov
aas
mov
push
push
mov
imul
inc
or
out
and
lea
hlt
add
rcll
insl
and
sahf
popw
fdivrp
lahf
rolb
push
rcrb
es
jmp
ljmp
xor
sub
outsb
bound
inc
fstpt
and
sub
test
movsl
add
into
mov
fisubs
push
adc
int
jle
lock
stos
mov
adc
pop
orl
fs
xor
jg
mov
dec
loopne
cs
cmpsl
sbb
mov
decl
xchg
idivl
push
addr16
ds
xor
pop
push
pop
push
push
lcall
rcr
cmp
out
cli
xchg
add
popf
popa
pop
scas
outsl
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
push
js
xchg
pinsrw
movsbl
dec
push
in
imul
out
jns
dec
ret
nop
fucomip
ror
inc
jp
add
sub
inc
movsl
xchg
ja
fstp
imul
push
mov
mov
pop
pop
insl
mov
es
jns
cmpsb
sar
lods
cli
jno
call
std
and
pop
xchg
test
dec
aam
xchg
push
adc
icebp
scas
inc
mov
pop
loop
scas
xchg
popl
dec
popa
adc
jne
pop
lods
mov
push
outsl
scas
test
sbb
dec
scas
add
rcl
pusha
xor
sbb
jae
dec
popf
loop
inc
add
movsl
cld
lea
iret
mov
loop
xchg
xchg
sbb
xchg
push
iret
adc
aas
jo
loop
mov
lret
sar
jecxz
outsb
jge
addr16
pop
es
mov
fwait
cmovbe
fimuls
cmp
out
push
stc
mov
pop
mov
lret
and
orb
js
mov
jb
dec
notb
ss
jbe
das
js
insl
jo
aam
scas
in
mov
jno
pop
mov
xchg
out
add
sbb
mov
pop
mov
stos
scas
pop
mov
js
divb
lds
sbb
jno
std
outsl
xor
orb
and
adc
aad
loop
je
push
enter
adc
mov
xor
jp
jg
cmc
imul
ljmp
mov
push
push
mov
repnz
mov
push
jae
or
testb
jg
sbb
dec
and
push
pusha
cli
test
into
sbb
push
inc
add
push
dec
mov
xlat
or
in
popl
dec
cmp
int3
jecxz
sbb
bound
pop
push
xor
stc
shrb
outsb
mov
xorb
xor
lods
jle
xorl
cmp
in
add
pop
clc
pop
pop
adcl
dec
ss
jno
ja
xor
xchg
xlat
pop
std
adc
and
pop
sub
pop
xor
mov
mov
in
mov
enter
or
push
out
fsubs
add
clc
jnp
std
movsl
fs
fsubs
lcall
jecxz
imul
dec
rcrl
shll
xlat
and
das
jmp
push
pop
repnz
xlat
out
jo
scas
fwait
gs
aaa
mov
mov
adc
mov
jp
and
inc
jp
pop
inc
fcomps
mov
inc
orb
ljmp
push
xor
cmp
mov
dec
pop
mov
cmp
mov
fsubrl
stos
outsl
dec
repz
mov
cld
fcompl
sub
add
in
mov
push
add
push
jl
test
test
es
inc
stos
lret
leave
add
popf
mov
test
push
arpl
mov
inc
sbb
jl
adcb
cmpl
stos
sub
idiv
jb
stos
shr
xchg
jae
add
dec
mov
mov
rorl
mov
or
mov
xorl
cs
or
test
cltd
add
pop
xor
lret
mov
mov
fwait
jb
adc
or
lea
cli
mov
push
jne
xchg
push
mov
inc
mov
pop
xor
lcall
inc
lahf
push
rolb
int
add
add
cli
stc
push
cmpl
sti
mulb
sub
arpl
aam
mov
aaa
cld
mov
cmc
jns
push
aam
add
add
xchg
shlb
jmp
hlt
push
dec
rclb
cmp
inc
mov
mov
add
lahf
lds
pop
insb
mov
xchg
and
rol
js
jb
lcall
add
cmp
dec
xor
pop
shrb
jecxz
jno
pop
push
xchg
mov
jno
mov
push
decb
xor
lahf
je
mov
cmc
stc
xorb
adc
jo
fimuls
outsl
shr
mov
and
jns
inc
mov
pop
pop
pop
jg
pop
je
mov
popa
sbb
mov
mov
jle
pop
and
out
enter
jne
or
mov
sub
pop
test
ret
push
adc
sbb
lahf
cmp
dec
fdivrs
push
or
dec
dec
test
mov
imul
push
repz
fstps
adc
mov
sbb
repnz
mov
dec
inc
repz
mov
loope
outsl
out
cmp
test
mov
cmp
clc
pop
pop
mov
mov
pop
movsl
loopne
sub
adc
xor
push
push
andl
dec
out
sub
jle
lcall
and
mov
cmp
je
pop
fcmovne
fcmovnb
pop
shrl
fildll
jecxz
mov
mov
pop
icebp
lret
call
push
or
add
nop
xchg
fildll
add
enter
mov
xchg
fwait
jle
popf
mov
repnz
aad
pusha
fistpll
jno
stos
mov
clc
or
push
arpl
jns
adc
jl
push
aas
rol
ja
es
jle
sub
jp
inc
adc
pop
aam
inc
cs
scas
enter
push
push
mov
fucomip
mov
xchg
lcall
xchg
mov
xchg
adc
sub
bound
push
test
into
adc
push
xorl
out
sbb
xor
std
gs
sbb
sahf
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
push
mov
add
or
ss
lock
xchg
pop
mov
int3
dec
mov
jle
mov
add
mov
mov
fsubrl
cwtl
mov
in
dec
mov
push
xlat
sbb
mov
mov
mov
dec
mov
lcall
xchg
cmp
xor
mov
pusha
mov
fstpt
pushf
jo
jg
decl
ret
popa
ucomiss
jne
push
mov
shlb
in
pop
out
adc
sub
jl
push
push
xlat
je
icebp
inc
mov
add
xchg
aam
dec
sbb
fimuls
jbe
xchg
loop
push
js
push
and
inc
jmp
or
dec
mov
cmp
mov
ss
outsb
sbb
mov
cs
dec
push
sbb
fwait
jnp
dec
or
pop
mov
mull
lock
dec
sbb
sbb
sub
lret
and
ret
ds
nop
mov
pop
or
xchg
cmp
cmp
push
push
inc
add
icebp
push
push
xor
pop
je
pop
mov
arpl
jo
xchg
push
test
cli
adc
lods
push
fcoml
xchg
sbb
adc
or
sti
cs
xor
cmpsb
sub
cwtl
dec
or
fdivl
pop
push
ret
fsubl
in
or
jno
shrl
pop
adc
adc
je
or
inc
loop
test
bound
sbb
and
push
push
xor
pusha
outsl
push
cmp
xchg
jne
pop
cmp
pop
lea
lock
das
cli
sbb
cmp
cmp
rcrb
adc
icebp
mov
or
jns
mov
mov
push
add
lods
scas
inc
ss
jo
mov
adc
mov
cwtl
add
imul
cmp
scas
and
and
cli
stc
mov
dec
loope
leave
pop
adc
or
sbb
sti
cmp
mov
test
imul
and
cld
addr16
push
mov
scas
push
arpl
adc
gs
push
mov
and
clc
dec
mov
sti
into
xchg
mov
mov
jmp
test
mov
adc
xor
cltd
mov
xlat
orl
jbe
fs
aam
lds
xchg
jmp
outsb
xor
pusha
cmp
imull
sub
lock
mov
xchg
imul
pop
and
add
nop
xchg
add
dec
lods
repz
fadds
push
inc
xchg
leave
and
mov
fcmovb
bound
jnp
je
ror
es
push
mov
cwtl
test
imul
mov
xor
jnp
aad
sub
pusha
cmpsb
mov
std
ret
mov
add
in
xor
sbb
aad
lret
int
sub
sbb
mov
stc
ficoml
out
mov
fildll
sbbl
or
add
jne
jns
pop
push
jb
and
xchg
lcall
aad
sahf
or
lods
sbb
pusha
iret
jle
add
into
cmp
cwtl
cmp
mov
bound
dec
test
mov
sbb
sti
sub
bound
int
xor
stos
push
inc
push
les
adc
sub
inc
add
push
pop
jp
cmpsl
mov
jbe
push
ja
cmp
out
sub
in
push
loope
aaa
pop
dec
sti
push
ljmp
push
fadd
ja
dec
cld
test
stos
xor
in
sbbl
xor
pop
mov
dec
sarb
fnstsw
subb
mov
mov
call
pushf
xor
pop
mov
in
loop
mov
inc
stc
mov
cmpl
cli
mov
pop
dec
repz
or
or
lods
sbb
in
cltd
xor
insl
jle,pt
push
mov
xchg
stos
in
sbb
int3
fdivr
int3
or
cmpb
bound
mov
loop
push
add
xchg
pop
mov
add
hlt
push
sub
repnz
popa
shlb
stos
cmc
insb
je
es
inc
pop
push
mov
xor
es
data16
cmp
mov
out
sub
in
in
je
lods
es
mov
and
das
daa
mov
cmpsb
inc
enter
and
rcr
leave
inc
jmp
jno
push
loop
data16
jns
aas
sub
pop
or
ret
sarl
into
mov
mov
fsubs
mov
mov
push
pop
cwtl
fld
sbb
jb
pop
fs
pop
adc
pop
jbe
push
in
cmpsl
ja
insl
sbb
jno
jle
sub
push
rep
jae
sbbl
movsl
int3
out
jns
ljmp
rcll
enter
push
pop
clc
jmp
add
dec
dec
call
xor
stos
push
enter
lods
jb
lret
inc
push
xchg
mov
repz
leave
push
cwtl
cmc
adcl
dec
mov
xor
pop
sti
nop
jl
js
jmp
xchg
daa
sbb
pop
fstl
xchg
ss
fmulp
cltd
les
mov
sbb
jne
nop
dec
pop
cwtl
cmp
cld
ss
jl
adc
xchg
call
add
inc
xchg
test
adc
repz
mov
fs
mov
jo
sbbb
pop
into
sub
pop
sbb
sbb
push
test
xchg
pop
add
out
insl
mov
mov
mov
jne
fiaddl
and
int
jno
sahf
or
fisttpl
jb
iret
loopne
mov
mov
xor
testl
dec
lret
faddl
fcoms
jecxz
clc
adc
inc
lret
push
xchg
shll
pop
sub
and
xchg
daa
aam
out
add
fadd
cmp
sub
xchg
xchg
rcrb
push
mov
jo
push
cmpsl
inc
xor
shl
lahf
or
inc
cmp
inc
out
sarb
mov
mov
xor
lock
mov
xchg
hlt
or
mov
push
lcall
mov
aam
shl
or
insl
in
popf
test
js
mov
dec
fsubrs
mov
mov
and
inc
repz
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
and
add
test
sbb
mov
sub
mov
ret
inc
xor
xor
xchg
arpl
mov
lret
sub
xor
dec
inc
pop
jecxz
or
adc
sbb
pop
pop
test
sti
mov
stos
imulb
in
cmp
adc
psubsb
pop
mov
aad
cmp
scas
stos
push
inc
fldt
jo
sbb
fbld
cmp
lods
cwtl
std
dec
hlt
pop
cmp
xchg
lret
cs
jge
mov
push
xlat
adc
mov
mov
mov
popf
mov
mov
add
mov
xchg
call
in
cld
daa
rol
jns
xor
sub
or
push
ljmp
hlt
xor
nop
inc
neg
insb
dec
or
das
or
ja
or
inc
or
xor
pop
mov
es
subb
mov
mov
rolb
dec
push
or
test
scas
or
icebp
mov
sbb
sarb
jo
loope
ds
fisttps
push
xchg
mov
mov
jno
push
icebp
gs
jge
adc
mov
enter
lcall
mov
adc
dec
stos
sub
cmp
rcr
inc
pop
lcall
out
or
sub
lods
data16
cmp
dec
sbb
pop
or
das
sub
lahf
push
cli
sub
inc
add
and
lcall
je
lods
inc
scas
cli
inc
and
dec
or
xor
mov
xor
lcall
test
inc
movsb
and
add
fidivl
pop
jb
inc
ret
daa
mov
out
adc
fcompl
fstpl
pop
jle
fs
pop
xor
rolb
pop
mov
sbb
sub
mov
repz
int3
jge
add
out
mov
jg
mov
orb
xchg
pop
negl
lds
xor
repnz
sbb
mull
jmp
imul
call
int
dec
das
fistpll
add
mov
sbb
or
les
loope
mov
sub
int
hlt
mov
inc
cmc
int3
pop
les
and
ja
insl
adc
cwtl
push
dec
xor
inc
in
jl
inc
aaa
js
mov
inc
gs
add
test
bound
repz
jecxz
add
xchg
xlat
sub
fstpt
dec
test
mov
mov
enter
rclb
inc
add
test
imul
mov
in
jmp
into
mov
mov
out
iret
fs
bound
jbe
and
dec
mov
sub
leave
nop
cmpsb
jp
insl
adc
mov
add
xor
mov
sbb
ja
je
test
sbb
loop
mov
test
adcb
mov
stc
add
sbb
add
arpl
push
loopne
aaa
inc
shlb
cmpsl
aas
inc
or
outsl
sti
test
xor
dec
lea
jge
cmp
shlb
xchg
int3
andb
fs
cli
pop
jb
call
lock
mov
sbb
jb
xor
lret
arpl
sub
push
and
loop
mov
push
push
sbb
cwtl
repz
lret
outsl
mov
xchg
pop
or
mov
sub
test
xchg
xchg
jecxz
dec
inc
subb
push
or
mov
clc
int
sbb
add
mov
sahf
aam
pop
xchg
imul
mov
outsl
lods
push
pop
add
lret
shlb
jo
cltd
mov
dec
shll
ljmp
xlat
push
dec
cmp
xor
pop
cli
icebp
push
and
ljmp
cmpsl
es
in
push
aaa
rclb
push
test
cmpsb
cld
push
arpl
push
push
add
outsl
dec
decl
sub
mov
sub
sbb
sbb
scas
or
push
lods
nop
sub
sar
xchg
out
lods
imul
add
mov
dec
push
pop
outsl
xchg
push
sar
scas
adcb
inc
mov
add
inc
or
popa
sub
aam
push
leave
inc
outsb
es
cmc
pop
mov
xor
xorl
sbb
and
jno
ficoms
sarl
popa
inc
xchg
adc
sahf
jne
sbb
aam
cmp
outsb
ljmp
leave
imul
dec
pushaw
std
cltd
mov
aaa
fwait
jb
lock
fcomp
jo
jae
popa
inc
aam
bnd
mov
mov
jne
or
iret
or
and
dec
mov
adc
icebp
sub
scas
inc
sub
imul
jnp
jb
icebp
jecxz
mov
in
xchg
rorb
bound
sub
push
bsr
xor
push
sub
push
in
ret
jle
in
and
hlt
cli
ret
pop
pop
test
pop
loop
imul
in
popa
lods
jl
cmp
std
out
sub
aaa
sti
imul
adc
inc
pushf
subl
out
cltd
dec
mov
xchg
pop
inc
cmp
hlt
xor
dec
ljmp
out
push
aad
hlt
les
ret
stos
xchg
dec
rcrb
and
xchg
sbb
mov
ss
or
adc
arpl
mov
dec
xchg
sbb
mov
mov
cmp
push
adc
cmp
bt
imul
insb
pop
nop
aad
pop
lods
lret
lahf
jne
sbb
sbb
pop
mull
mov
or
dec
notb
push
dec
mov
popa
adc
jae
fiadds
sub
hlt
cmp
adc
or
imul
dec
popf
sbb
or
stos
mov
xchg
jecxz
dec
rclb
pop
add
data16
dec
and
popf
xlat
pop
or
movsl
shrb
push
sbbb
jb
push
stc
mov
cmc
imul
sti
aad
inc
test
insb
lcall
cmp
daa
adc
imul
mov
test
and
or
sti
jnp
sub
sbb
mov
iret
and
lea
movsl
jb
les
lahf
add
inc
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
incl
add
sbb
sbb
sbb
sub
loopne
shll
add
lret
test
sbbl
xorb
aas
lds
adc
mov
std
adc
hlt
push
lock
pop
ljmp
scas
cmpsb
cmpsl
into
mov
inc
fisubrs
inc
lahf
mov
push
jecxz
mov
rorb
mov
dec
test
fwait
lods
jae
cld
fcmovb
sbb
loop
ds
or
and
and
cmpsb
imul
add
rcrl
inc
imul
dec
xchg
daa
fistpll
mov
outsb
shlb
push
subl
insb
cmp
pusha
inc
jbe
jbe
dec
cwtl
inc
inc
pop
aad
pop
lcall
push
lods
ds
mov
dec
push
pushf
pop
and
in
xchg
adc
cmp
arpl
add
rclb
adc
and
dec
leave
mov
cld
pop
dec
adc
xchg
call
xchg
adc
stos
cmc
into
cld
arpl
add
mov
cwtl
xchg
ss
scas
sahf
dec
test
cld
xchg
pop
mov
adc
push
xchg
mov
push
fwait
cmp
inc
cmp
xchg
cmpsl
and
sbb
push
roll
xchg
mov
mov
int3
loope
mov
sarb
dec
test
inc
enter
jns
jp
shrl
sub
jg
mov
pop
lret
daa
stos
addl
mov
xchg
lcall
pusha
push
pop
ljmp
and
add
xchg
xor
fisubrs
in
out
lock
test
outsb
or
ret
int3
je
les
dec
out
lods
pusha
push
fs
data16
loopne
into
stc
and
enter
xor
shll
mov
adc
notb
sbb
dec
adc
xchg
dec
add
gs
jb
ds
movsb
adc
out
fs
aas
or
pop
loop
lods
mov
pop
sahf
pop
sbb
call
inc
sub
es
in
xchg
clc
dec
push
jbe
fiaddl
out
push
sub
cmpsl
inc
inc
push
jae
push
js
cmp
pop
xchg
inc
adc
jmp
test
xor
popa
test
stos
mov
rolb
and
push
ficoml
add
adc
imul
ret
cmp
mov
inc
or
xchg
jp
pop
adc
mov
cmp
jo
xchg
xchg
or
or
xor
lock
mov
roll
pop
mov
icebp
cmc
ljmp
mov
fnstsw
mov
and
andl
jge
mov
cltd
addb
pushf
xor
notl
std
fwait
pop
sub
and
stos
jp
xchg
sbb
cwtl
lahf
dec
mov
lds
adc
movsb
in
push
idivb
sarl
or
xor
test
xlat
in
mov
jnp
dec
subb
ja
cmp
sbb
lods
addr16
mov
fstps
data16
ret
sub
dec
cmp
sub
adc
dec
lret
mov
mov
mov
sarl
push
imul
lret
jnp
es
add
mov
je
loopne
jmp
int3
repz
sub
sahf
add
insl
loope
adc
jg
inc
mov
sbb
pushf
lock
punpckldq
lods
outsb
pop
pop
push
shlb
cmc
out
cmp
enter
fnsave
mov
mov
xchg
mov
cmc
xchg
nop
or
and
pop
aas
bound
mov
mov
fistl
pushl
daa
or
push
test
sub
or
mov
repz
push
cltd
dec
iret
xchg
fwait
sti
int
cs
in
in
std
add
out
int3
or
lods
push
out
mov
out
and
jns
std
and
jae
mov
or
pushf
dec
mov
xchg
es
or
mov
xor
mov
inc
js
cmc
cltd
add
inc
cmp
mov
mov
xchg
sti
test
cltd
bound
and
mov
mov
test
aas
add
stc
mov
testb
sbb
fidivrs
push
cld
outsb
outsl
fdivr
mov
push
push
fsts
push
xchg
int
xor
sbb
pop
xchg
lret
push
ds
int3
ret
stos
cmpb
popa
xchg
sbb
enter
xor
cld
mov
je
xchg
pop
cs
mov
fucom
jecxz
jp
xchg
aam
adc
sub
cmpl
cmp
gs
jl
pop
xchg
fucomip
adc
fcomi
adc
mov
popf
sub
bound
push
pop
pop
adc
stos
mov
pusha
test
jg
xor
add
mov
dec
mov
cmc
test
into
daa
or
mov
jg
dec
loop
jmp
popf
jecxz
ffree
mov
push
rcr
xor
mov
je
cmp
int
in
into
inc
out
leave
subb
cmp
sbb
jns
xlat
cmpsl
fsubrl
clc
adc
call
stos
fs
push
push
in
fsub
jnp
pop
mov
out
callw
filds
les
cli
not
out
xchg
mov
mov
ljmp
lret
xchg
or
arpl
insl
or
fcoms
or
dec
adc
sub
loopne
shrl
out
adc
enter
push
add
mov
shr
insl
aad
inc
mov
les
mov
in
mov
lahf
ljmp
es
out
xchg
sub
lcall
dec
pusha
xorl
or
into
dec
outsl
ljmp
imul
lret
mov
sbb
or
negb
and
je
jmp
sub
out
daa
sbb
cmp
push
into
push
dec
mov
out
push
add
repz
pop
adc
dec
ret
jg
add
cmp
ljmp
push
cmpsb
jmp
cld
xchg
cmpsl
dec
in
dec
xor
or
iret
ror
jle
out
pop
aaa
iret
or
pop
jle
lods
mov
or
jge
int
mov
xchg
int3
lods
mov
mov
es
push
add
test
or
or
cs
pop
decl
daa
clc
sbb
or
push
test
sub
or
filds
insb
jnp
aad
push
neg
pusha
mov
ret
add
in
sub
mov
jmp
mov
and
cwtl
sub
inc
jns
scas
xchg
push
add
outsl
dec
mov
lea
daa
or
imul
jno
adc
mov
ret
mov
add
pop
and
xchg
pop
xchg
jbe
repz
mov
sahf
imul
imul
and
cmp
mov
nop
aam
xlat
dec
data16
or
aad
sub
mov
mov
testb
push
dec
iret
jae
cmp
dec
mov
outsb
push
xchg
push
fwait
or
lock
imul
pop
cmp
mov
ja
popa
in
daa
popa
ss
movsl
inc
loopne
pushf
jns
bound
cmpsl
xchg
inc
mov
in
subb
sbb
dec
push
xor
ljmp
xor
int
mov
fcompl
pusha
add
push
loopne
mov
nop
xor
out
adc
jp
jbe
testb
lods
inc
pop
pop
xor
hlt
lcall
xlat
hlt
sub
addl
push
outsb
push
pop
ljmp
ret
sub
fs
cmpsl
pop
int
or
cmc
mov
out
pop
fadds
push
xor
or
push
cmovnp
nop
sarb
xchg
mov
cltd
sbb
sbb
stos
and
xchg
mov
in
in
ret
or
imul
pop
insl
es
int
imul
lea
fwait
ja
pop
jns
push
es
mov
pop
ror
cmp
mov
jmp
das
pop
sub
nop
xor
xor
jp
add
int
popa
mov
outsl
int3
add
aad
addr16
jno
push
inc
mov
nop
pop
repz
cld
pop
movsl
inc
ds
jge
mov
push
stos
sub
stc
lock
dec
das
lret
push
lret
mov
inc
xor
jnp
and
lea
arpl
movsl
sti
inc
push
insb
ja
arpl
arpl
mov
sub
movsl
pop
shl
xchg
stc
adc
call
outsl
add
imul
sbb
out
xor
rorl
pop
div
addr16
test
mov
js
push
xor
nop
and
jl
sbb
and
out
out
std
cld
ret
mov
mov
mov
mov
jnp
cmc
orb
cmp
push
jmp
lea
test
mov
fldt
jmp
subb
aam
cmpsb
daa
sahf
negl
lret
cli
loopne
adc
ljmp
push
xchg
add
push
mov
jl
shlb
jle
les
ljmp
xor
mov
mov
std
mov
mov
fidivs
mov
stos
lcall
adc
out
jns
xor
inc
dec
pop
sub
cmp
repz
cwtl
sub
xchg
fwait
inc
movsb
mov
mov
lods
aas
ja
rep
loopne
mov
adc
pop
mov
jmp
dec
xchg
pop
or
adc
dec
pop
in
sbb
xchg
testl
push
sbb
and
push
out
loopne
sub
mov
add
fs
fisttps
imull
or
ss
inc
lods
shrb
jge
lods
xor
push
sar
mov
dec
test
adc
jns
fiaddl
in
xchg
xor
enter
enter
dec
jge
repnz
mov
mov
push
dec
pop
xor
ljmp
ds
fld
push
js
mov
ds
pop
mov
mov
loopne
xor
push
fiaddl
inc
and
mov
mov
iret
push
sbb
xor
outsb
and
mov
cmpsb
jbe
pop
jns
push
inc
scas
int
fldl
adc
fdivr
fs
jge
push
movsb
add
cli
lock
mov
shrb
xchg
jno
notb
sub
fs
jb
pushf
ds
fldt
repz
insl
lods
daa
out
sbb
lock
cmpsl
adc
push
jo
test
dec
cmp
cmp
dec
adc
call
pop
xor
popa
stc
fsubrp
push
and
sub
orl
pop
push
cmp
push
sub
outsl
sbb
test
aas
in
shrb
lahf
add
and
mov
int
scas
pop
sbb
fisttps
dec
mov
cld
push
inc
mov
repnz
sbb
enter
in
inc
rclb
mov
int
sbb
lock
cli
es
ja
and
and
fistps
adc
mov
dec
adc
sbb
inc
int3
cmp
rcrl
testl
sub
xchg
lods
inc
icebp
negb
xor
mov
je
rorb
in
cmpsl
jnp
cmpsb
and
aaa
sbb
imul
sbb
push
aam
cli
fsubrp
sub
cmpsl
adc
inc
xor
pop
aaa
inc
das
pop
fiaddl
mov
cwtl
mov
in
shr
cmp
dec
fdivrl
fimull
jno
pop
inc
mov
mov
add
shrb
pop
popa
fldcw
repz
dec
add
test
fildl
and
js
or
pop
adc
and
add
in
in
jbe
jb
push
cltd
sarb
add
inc
xchg
addr16
leave
mov
bound
scas
pop
xor
push
xchg
nop
scas
mov
jae
sub
dec
add
iret
shl
sahf
loop
repz
mov
lods
and
outsl
ljmp
in
pop
das
xor
jecxz
adc
or
sub
cmp
std
fsts
push
scas
daa
add
push
arpl
jbe
lock
adc
adc
jg
xchg
aad
pop
leave
mov
notb
scas
dec
dec
sar
adc
pop
iret
sahf
stos
cmpsl
and
xchg
into
xor
jo
lahf
lock
sbb
push
xor
or
xchg
xor
jo
das
add
fnsave
out
mov
push
ljmp
jnp
fs
daa
loope
outsb
mov
test
mov
test
scas
rorb
inc
lcall
and
mov
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
push
mov
add
push
loop
out
inc
cmp
adc
scas
int
jmp
jecxz
sub
xor
push
xor
scas
ret
cs
repnz
int
out
icebp
cltd
fcoml
jno
scas
dec
mov
js
inc
pop
adc
icebp
push
adc
inc
add
xchg
outsl
cmp
dec
cmpb
js
ret
jb
push
cmp
xchg
lret
movsb
push
fwait
mov
xor
test
dec
push
push
xor
rcrl
stos
inc
inc
icebp
dec
mov
mov
out
shl
ficompl
es
add
mov
sub
cmpb
push
int3
jmp
inc
push
push
xor
cmp
lods
pop
sub
jno
insl
mov
cmp
jne
add
dec
dec
cmp
es
mov
sub
imul
std
xchg
imul
insl
gs
test
js
dec
icebp
jmp
std
fimull
in
test
loope
add
xor
mov
inc
fwait
inc
sti
adc
jbe
rol
pushl
xchg
cli
cli
ss
pop
push
sbb
sbb
lock
sbb
xlat
dec
cwtl
and
and
mov
test
xor
mov
pop
inc
sub
push
sbb
es
rolb
fdivs
mov
mov
xor
xor
pop
imul
and
fwait
push
leave
movsb
cmpsb
pop
pop
push
mov
enter
adc
test
js
je
cmpsb
dec
sbb
mov
hlt
mov
out
gs
pop
lcall
mov
fsubs
add
add
mov
mov
rcrl
cmp
jl
test
jno
jp
dec
push
mov
cmp
imul
push
call
lret
sbb
rcr
jo
sbb
fsubl
sti
arpl
add
push
mov
cmp
sbbl
inc
sub
jbe
int
ja
ret
mov
cmp
sub
aam
mov
cmp
jp
sbb
rorb
repnz
dec
shlb
jp
sti
inc
adc
imul
mov
sub
cmp
mov
add
add
mov
pushf
out
adc
pop
pop
sbb
and
nop
nop
jg
cmc
hlt
sub
mov
punpckhwd
mov
pop
in
out
stos
sub
in
repz
das
push
xchg
push
dec
gs
pop
aad
or
mov
repz
pop
adc
movsb
inc
leave
cli
test
es
icebp
push
and
les
addl
popl
xchg
push
ds
popa
sbb
xor
rcl
or
les
or
mov
pop
pop
cmp
xchg
sarb
fwait
outsb
push
pop
and
mov
xor
mov
popf
push
mov
xchg
cmpb
and
adc
mov
xchg
sbb
mov
jecxz
xor
sub
lods
sbb
push
cmp
cmpsl
xor
xchg
in
push
dec
inc
and
mov
bound
inc
popf
pop
out
jbe
repz
loop
ljmp
mov
inc
popa
fwait
mov
testb
jae
or
mov
xchg
js
fdivrs
pop
xchg
movsl
ror
fidivl
das
dec
sub
scas
insb
jne
fstpt
cmc
icebp
jle
sbb
sub
shlb
adc
cmc
stos
mov
negl
cld
cli
popf
adc
fdiv
rolb
imul
xor
mov
mov
shl
shlb
in
ja
push
out
aas
adc
pop
xchg
mov
sarl
out
int3
fcomps
mov
inc
invd
js
xlat
fiaddl
gs
jle
cltd
in
adc
xchg
insb
adc
push
cmp
xor
fcmovnb
mov
sbb
jo
popf
lret
pop
cmc
enter
cmp
gs
jg
out
cli
add
cmc
movl
bnd
clc
cld
push
add
jbe
das
bound
je
cmp
out
sbb
insb
adc
pop
mov
dec
fdivl
outsl
jge
cmpsl
gs
jecxz
test
adc
into
mov
add
lock
loope
mov
andb
jno
insb
decb
and
jnp
jno
cwtl
outsb
test
test
sub
dec
out
rcl
cs
xor
and
and
arpl
jns
dec
jno
pop
pop
sbb
iret
mov
and
aaa
icebp
inc
xor
dec
movsl
das
mov
dec
call
es
pop
inc
mov
xchg
or
loopne
cmpsb
xor
jge
es
adc
lcall
sarb
xor
or
int
xchg
out
jb
imul
stos
adc
roll
sbb
test
xchg
add
mov
rorb
jecxz
test
out
jns
sub
in
adc
xchg
dec
mov
pusha
iret
pop
jge
sub
movsb
adc
or
repnz
jl
mov
je
xchg
int3
push
notl
cs
dec
inc
loope
mov
xchg
mov
pop
push
mov
mov
or
mov
dec
lods
sahf
pop
mov
les
fldcw
pop
sbb
jae
cmc
negb
add
addr16
or
inc
notb
addr16
dec
loopne
or
pop
add
pop
ljmp
andl
jo
mov
mov
push
ret
out
cmc
imul
push
icebp
or
sub
lcall
or
sbb
xchg
call
mov
jno
js
mov
outsb
lcall
fdivr
and
frstor
xor
pop
icebp
xorl
push
pop
xchg
mov
lret
xor
test
mov
movsb
jne
push
xor
xchg
outsl
xor
adc
xchg
push
icebp
and
lahf
out
imulb
loope
imul
xchg
push
sub
pop
leave
lea
xor
ss
out
dec
push
cmp
sbb
int
mov
hlt
scas
cmp
cmp
xorb
sarb
insl
dec
lods
mov
jb
lock
out
dec
xchg
inc
xor
das
pushf
pop
mov
lcall
rolw
xchg
pop
add
aad
mov
mov
mov
mov
mov
add
shll
xor
jmp
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
mov
add
jge
adc
lock
mov
cmpsl
clc
sbb
pop
dec
enter
fisubs
in
mov
outsl
adc
rol
jb
sbb
ficoms
xchg
fadd
adc
fdivl
fdivrl
adc
dec
cmp
or
dec
gs
push
add
lcall
mov
iret
add
adcb
fstps
push
shll
xchg
test
xor
in
jo
dec
in
bound
adc
pop
mov
jg
int
sub
mov
push
jns
cs
pop
into
pop
inc
sbb
and
mov
mov
cld
add
cmp
pop
ja
xchg
mov
negb
stc
int3
popa
in
test
xor
in
inc
sbb
and
xor
add
push
and
inc
lcall
fisubl
add
call
js
fisttpl
mov
daa
ljmp
cmp
fistpll
sub
sub
cmp
adc
push
mov
adc
inc
mov
jle
je
jmp
mov
in
push
iret
add
scas
dec
dec
pop
mov
jno
or
add
loope
xchg
xchg
cmc
jnp
cmp
fs
idivl
sbb
mov
inc
adc
pop
xchg
pop
pop
adc
sarb
cs
leave
pop
out
mov
pushf
adc
lods
inc
negl
popf
add
jnp
pop
lret
mov
jge
xchg
dec
jno
xlat
and
dec
xchg
mov
lahf
sub
inc
sahf
sbb
std
sti
mov
ds
push
mov
mov
jge
mov
xor
popa
negb
popf
mov
nop
iret
ret
cmp
mov
jp
jecxz
mov
pushf
inc
jns
adc
fstp
arpl
adc
dec
or
filds
ret
push
movsb
jmp
idiv
inc
cmpsb
sub
push
ret
jl
idivb
in
ss
inc
or
call
int
pop
inc
lahf
xchg
das
mov
jbe
mov
pop
inc
mov
fcmovnu
ret
in
push
jge
add
xchg
or
or
xchg
ja
and
push
js
dec
into
loop
in
insb
fsubrs
mov
aad
and
das
imul
fistps
xor
and
fmull
jp
les
push
nop
into
aam
and
popa
sub
insb
cmp
jg
dec
mov
inc
fs
pop
pop
add
arpl
xchg
jns
jb
imul
insb
jae
sub
mov
cwtl
xor
mov
and
sbb
mov
adc
fdivrp
pop
or
jo
sbb
imul
cli
mov
lahf
dec
xchg
rcl
shrb
sbb
push
out
fmuls
jmp
iret
add
mov
mov
stc
ljmp
xor
cmpsb
leave
vpsravw
addr16
push
fadds
mov
jge
push
scas
orb
decl
fdivrs
jne
xchg
popf
lcall
or
loope
cmp
xchg
sub
outsb
cmpsb
mov
mov
daa
ss
sbb
push
mov
mov
cld
cli
pop
ds
mov
cmp
sbb
add
das
cmp
lods
pop
scas
push
lods
xchg
in
xchg
sbb
dec
pop
addl
sti
push
mov
lcall
in
push
push
dec
xor
dec
jo
dec
pop
aam
dec
clc
daa
enter
sbb
es
mov
mov
popf
pop
push
das
mov
test
dec
or
push
mov
mov
lret
es
arpl
push
sbb
lcall
fbstp
rcrl
je
imul
lahf
xchg
xchg
jge
fs
push
jbe
mov
outsb
out
jmp
push
sub
jecxz
or
mov
push
testb
out
mov
sub
pop
lock
std
jo
mov
aas
xchg
jecxz
cmp
cmp
lods
js
ret
sbb
dec
icebp
daa
lods
call
dec
sbb
mov
kunpckbw
mov
cmp
loop
dec
stos
cmp
call
fdivrp
repnz
mov
fs
cmpl
arpl
fdivrl
ficoml
iret
cmpsb
add
xor
xor
pop
ficompl
outsb
movsl
pop
int3
xor
push
lret
ljmp
add
fsubrl
push
xchg
iret
out
lods
mov
fmul
cmpsb
sub
and
popf
pop
xchg
pushf
mov
bound
loop
lret
dec
adc
sarb
mov
mov
xchg
out
icebp
mov
and
in
adc
repnz
mov
jl
popa
rclb
mov
imul
fists
push
sti
mov
int
sbb
icebp
and
shlb
jo
xchg
stos
out
lcall
test
pusha
in
xlat
push
mov
arpl
pop
jae
fadds
push
test
movsl
ljmp
aas
add
ljmp
mov
scas
sbb
ficomps
fildl
push
sub
pop
push
inc
popf
jbe
sti
dec
mov
jecxz
scas
repnz
mov
pop
jnp
pop
shlb
and
jle
jg
int3
lds
mov
or
popa
mov
inc
pusha
psllq
or
ljmp
aas
bound
das
mov
arpl
clc
pop
add
mov
cmp
add
dec
push
add
dec
push
mov
mov
pop
push
pop
fisttps
cld
mov
sahf
pop
imul
out
out
jg
pop
xchg
mov
pop
fdivrl
outsb
in
adc
jg
sbb
cmp
or
jae
mov
xor
mov
test
cmp
jmp
gs
mov
push
push
push
sbb
out
jl
and
repnz
sub
xor
sarb
and
inc
sub
mov
sbb
inc
xchg
cld
jecxz
das
out
cli
clc
or
cwtl
add
mov
in
in
fs
clc
adc
test
dec
jb
in
push
cmp
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
rclb
add
push
xchg
mov
xchg
jo
pop
rcl
push
or
xchg
cld
and
mov
xor
pop
pop
call
ljmp
inc
cmp
mov
push
pop
push
inc
test
pusha
lds
roll
into
add
push
ret
xor
push
mov
sbb
rcrb
jb
jo
enter
sbb
cmpsb
outsb
out
fisubrl
cmpsl
sub
insb
xchg
jecxz
xchg
adc
lock
sbb
cmp
cwtl
inc
xor
mov
cmp
lods
test
push
mov
mov
nop
dec
scas
mov
cmp
xchg
inc
xchg
je
test
popa
fxch
pop
or
andb
xor
push
pop
jl
and
mov
pop
push
clc
sbb
jle
ljmp
cmc
cld
out
cltd
add
dec
mov
rorb
popa
icebp
or
adcl
add
dec
loop
push
dec
mov
cmp
fwait
clc
outsl
xor
sbb
inc
loope
xchg
out
imul
loope
out
fwait
pop
mov
shlb
clc
jp
push
jo
mov
sub
cmp
xlat
sbb
pop
push
bound
xchg
andl
mov
cld
out
inc
dec
bound
push
jle
sub
ja
mov
add
insl
mov
inc
cmp
cmpsl
sbb
sbb
jno
inc
xchg
fstps
xor
out
xor
cmpl
es
push
xchg
lcall
nop
add
movsl
aad
into
inc
mov
in
push
mov
pusha
and
data16
cli
fdivrs
and
pop
mov
and
out
push
dec
sub
idivb
jge
test
xchg
insl
sahf
mov
test
clc
lcall
pop
int3
mov
cmp
xchg
stos
pop
adc
push
lods
dec
mov
cmp
jge
fsts
stos
lret
mov
add
loopne
rcrl
push
addl
pop
jne
cmp
sub
es
in
sub
pop
pop
maskmovq
testl
xchg
mov
rclb
call
xchg
push
push
insl
mov
mov
add
push
pop
adc
pop
mov
outsb
push
fiadds
nop
scas
rol
sub
jg
sub
sub
lcall
cmp
arpl
stos
ljmp
shll
jle
filds
push
lods
or
popa
push
lock
mov
jno
scas
push
adc
test
cmp
out
into
and
lds
add
jge
xor
mov
or
mov
nop
aam
add
adc
xor
test
sbb
add
xor
push
pusha
dec
flds
testb
idivl
fs
sub
inc
shl
scas
movsb
daa
adcb
test
ret
pop
and
mov
cmpsl
jl
cs
cmp
nop
pop
cmpb
test
xchg
notb
mov
jb
inc
sarl
or
daa
shl
aas
movsl
jne
sbb
mov
test
xlat
addl
xor
xlat
shrl
cld
pop
cmpsb
addr16
loope
fisubs
inc
xchg
mov
pop
jmp
push
mov
enter
in
lods
jns
jle
dec
pop
xor
stos
frstor
in
xchg
inc
cmp
lcall
push
icebp
out
jmp
jmp
dec
roll
outsb
pop
sub
in
cmp
mov
xrelease
push
es
xor
push
xchg
fcompl
push
hlt
mov
fs
push
fidivrs
loopne
mov
in
popa
daa
mov
daa
mov
iret
cmpsb
jl
insl
xchg
lds
fldt
ss
xor
enter
xor
dec
lea
add
mov
in
sbb
xor
test
icebp
std
sub
jno
push
xchg
push
loope
mov
stos
cmp
xchg
adcb
mov
aas
int
sahf
mov
test
cli
leave
mov
sbb
fdivrl
mov
sbb
and
repnz
push
pop
mov
adc
fldcw
jo
push
out
daa
lods
enter
cmp
mov
mov
or
jmp
bound
into
lods
orb
jecxz
fwait
mov
inc
push
call
inc
cmpsb
call
cmpsb
push
or
in
xor
insl
outsb
or
rcll
into
in
jle
fcmovb
cmp
imul
mov
ds
mov
clc
mov
fsub
push
insb
dec
into
xchg
xchg
repnz
add
das
dec
jmp
dec
jmp
inc
dec
push
or
aas
inc
xor
sub
or
addb
inc
xlat
sbb
pop
enter
call
push
mov
fs
mov
xchg
popf
dec
and
lods
fwait
arpl
rcrl
enter
dec
lcall
pop
cmp
push
or
push
dec
mov
pop
pop
xlat
pop
sub
cld
mov
test
lods
add
fildl
and
iret
lret
out
shrb
mov
cmpsl
es
push
scas
push
imul
ret
jp
icebp
inc
and
lcall
pop
mov
outsl
mulb
dec
insb
fisttps
ja
lret
sar
mull
jecxz
nop
dec
in
xor
xor
ds
inc
sub
lret
daa
cltd
int
in
adc
call
pop
jecxz
nop
testb
and
test
sbb
mov
pusha
and
sbb
xchg
xchg
pop
dec
pop
loopne
jns
xchg
daa
xchg
out
sahf
cmp
inc
dec
int
sub
movsb
adc
daa
outsl
push
mov
dec
scas
cli
jle
call
addr16
push
and
dec
orb
mov
cmp
in
cmp
cltd
sub
lods
jecxz
push
push
dec
xor
jl
push
cmp
pop
sbb
mov
fidivl
lret
jbe
pop
mov
and
cmpl
cld
jae
test
out
in
lds
cs
mov
loopne
sbb
xchg
in
dec
inc
rolb
dec
imul
cmpsb
test
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
sbb
mov
add
fmuls
or
mov
inc
lcall
into
sbbb
ret
lds
mov
lret
aam
push
fsub
std
stc
roll
lods
add
sbb
sbb
xor
pushl
sbb
fwait
out
dec
sub
fnstcw
stos
dec
insl
aam
push
sarl
sbbb
mov
stos
jl
and
out
pop
sbb
lcall
in
dec
stc
mov
push
push
push
pop
ds
cmp
mov
pop
shl
mov
jmp
lods
jge
or
pushf
std
subb
push
xor
dec
add
out
stos
sub
rclb
aaa
lea
sahf
ljmp
or
shlb
and
jo
lahf
je
cmp
popf
inc
or
xlat
xchg
and
ds
pop
jae
bound
push
cmpsb
das
cs
adc
pop
test
out
ret
xchg
test
inc
jle
and
adc
idiv
pop
inc
fistpll
pop
inc
out
lds
pop
adc
mov
xlat
test
inc
popa
inc
pop
xor
adc
xchg
fdivrl
adc
mov
mov
outsb
shld
mov
lods
cmp
jge
or
cmp
add
mov
bound
imul
fildl
sahf
bound
test
sub
je
ds
lods
adc
jecxz
push
int
rcrl
pop
in
inc
scas
sarb
test
mov
test
add
push
push
pop
popf
int
adc
or
mov
mov
sbb
in
repnz
inc
jp
mov
leave
sahf
fmuls
lds
aas
aaa
scas
out
in
jle
addr16
fdivrs
and
mov
push
sbb
mov
dec
rcll
fimuls
adc
out
or
pop
mov
xor
js
imul
les
lock
push
and
in
ret
or
pop
stos
stos
ljmp
push
mov
pop
xor
cmp
mov
test
add
fldt
dec
ret
xor
or
int3
in
pusha
ja
call
fildl
test
pop
and
inc
jg
in
push
int3
mov
cld
add
cwtl
sub
in
fmuls
dec
out
repnz
sub
cmpsb
aaa
movb
mov
push
ret
mov
pop
aam
dec
imul
out
xchg
lods
mov
add
cld
out
scas
ret
mov
bswap
fs
mov
or
or
stos
out
sub
cld
shl
jbe
mov
das
out
cmpsl
pop
into
mov
and
negl
cltd
pushf
push
sbb
mov
inc
leave
mov
xchg
mov
not
cwtl
fs
sbb
mov
clc
jg
sbb
stos
subb
add
nop
xchg
out
out
adc
xchg
add
sarl
stos
inc
mov
cmpsl
jecxz
rorb
std
inc
ficomps
nop
ds
mov
mov
xor
cmp
cmpsb
int3
push
lods
lock
mov
inc
ss
das
inc
repnz
mov
sbb
push
stc
negl
mov
push
add
pusha
es
in
mov
mov
lods
lea
push
pop
jo
bound
imul
and
sbbl
mov
rcrb
push
mov
daa
lock
imull
subb
inc
inc
ja
add
jge
pop
cld
js
sahf
mov
cs
test
sbb
inc
mov
cmp
sbb
inc
jle
jle
fiaddl
in
dec
pop
pop
mov
push
lret
adc
pop
push
in
ret
inc
pop
push
add
xor
fisttpll
dec
cwtl
add
fsubs
hlt
icebp
jno
std
lods
jl
adc
xlat
jmp
test
es
push
xchg
sbb
mov
sbb
es
jne
mov
add
mov
sbb
leave
dec
pushf
jbe
mov
lret
movsb
loope
push
hlt
test
add
add
sbb
pop
xchg
and
test
dec
pop
xchg
ss
ret
xchg
loopne
cmp
fbstp
ret
mov
sbb
adc
les
inc
or
iret
cmpsl
inc
jnp
subb
or
out
inc
pop
adc
dec
into
and
xor
and
push
lret
pop
jno
sub
and
pop
push
push
pminsw
das
inc
loop
dec
jmp
and
repnz
xorb
inc
dec
xor
cwtl
mov
gs
shlb
es
xor
sub
lea
and
fldl
inc
imul
rorb
xchg
into
stos
cwtl
jp
jecxz
push
ret
and
cmp
pop
add
nop
stc
mov
and
mov
sti
add
subb
scas
sti
es
pop
js
pop
jg
aas
xchg
lods
pop
mov
imul
mov
add
mov
test
rcrb
pop
test
lods
icebp
sahf
fbld
hlt
add
jns
jbe
push
inc
mov
pop
inc
xor
xchg
call
mov
sub
sub
xchg
outsl
ffree
mov
in
popa
aas
pop
mov
add
idivl
ds
cs
adc
arpl
std
cmp
push
xor
xchg
mov
and
push
adcl
arpl
call
hlt
imul
cmp
js
fs
adc
ret
sbb
ss
add
adc
icebp
push
imul
mov
repnz
pop
mov
jo
arpl
stos
cmpsb
pop
popa
ss
add
andb
arpl
inc
cmp
popf
push
fsubs
mov
and
mov
inc
mov
dec
pop
xrstors
mov
ljmp
xlat
mov
mov
xorl
adc
dec
and
dec
addr16
loope
inc
push
movsl
xchg
xcrypt-cfb
cmpsl
movsb
test
inc
mov
jp
xchg
iret
adc
push
addr16
mov
aad
xchg
xchg
push
xor
outsl
pop
ficompl
xchg
jle
test
loopne
nop
pushf
xchg
test
cmc
das
adc
jb
lea
pop
mov
add
stos
sbb
add
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
inc
or
add
outsl
les
push
push
pop
xor
leave
or
out
push
fistl
test
call
xchg
stos
xchg
mov
sbb
jnp
iret
mov
testb
lods
push
jg
fsts
pop
outsb
adc
or
les
dec
test
mov
and
xor
outsl
cmp
lods
xchg
and
adcb
push
cs
inc
aam
fidivs
mov
xchg
imul
jecxz
and
cmp
int
lods
movsl
jg
adc
hlt
push
sbb
dec
adc
insb
sub
les
inc
es
ja
mov
sbb
sub
add
arpl
sbb
hlt
cmp
inc
scas
push
shlb
push
jnp
ret
popa
jae
mov
lret
mov
arpl
and
mov
xchg
mov
mov
inc
cmpsl
clc
gs
jl
lret
mov
not
cmp
push
loopne
sub
ficomps
jnp
sti
mulb
addl
in
push
int
aaa
mov
lret
outsb
pop
movsb
dec
jno
adc
fs
and
push
mov
cmp
jb
inc
out
jbe
pminub
cmpsl
pop
scas
lcall
xor
outsw
insl
or
test
cmpsl
fsubrp
mov
mov
mov
or
push
sbb
lcall
mov
daa
lea
inc
popa
or
adc
aas
inc
inc
aaa
lock
mov
popa
jecxz
mov
or
bound
cmp
push
xchg
pop
lahf
test
cwtl
sbbb
xor
mov
or
cmc
outsb
clc
xchg
testb
push
xchg
xor
push
cmp
bound
mov
cmpsl
out
fnstsw
addr16
mov
push
add
mov
cmpsb
jne
cmp
insb
cs
and
jno
and
pop
mov
dec
cs
inc
sbb
add
aaa
enter
add
lcall
repz
mov
inc
dec
mov
and
jecxz
test
or
shll
jns
xlat
xchg
ficomps
dec
sbb
mov
push
adc
sbb
inc
into
addr16
in
adc
adc
std
mov
loop
xchg
inc
ss
add
push
or
mov
shl
mov
push
jmp
push
ffreep
sbb
lods
inc
sti
adc
adc
stc
ljmp
xor
ret
cmpsb
inc
jne
and
rorl
mov
aaa
mov
and
test
xchg
add
jmp
and
sahf
add
jnp
es
je
mov
fidivrl
aam
stc
pushf
mov
pusha
mov
lret
push
and
dec
jge
xchg
jp
push
aaa
mov
mov
hlt
ljmpw
out
movsb
and
push
mov
idivl
stos
pop
jp
lea
push
adc
adc
aad
ret
push
out
lret
aas
fdiv
das
sbb
xor
pop
xorl
nop
repz
iret
cmc
pusha
fadds
cmp
cmp
out
sub
adc
xor
inc
xor
in
push
inc
loope
add
pushf
dec
xor
popa
cmp
inc
and
cmpsl
popf
xor
xchg
inc
cmpb
mov
mov
xchg
and
mov
xor
repnz
and
push
flds
push
xchg
and
push
xchg
imul
mov
dec
push
jbe
lahf
lret
cmp
dec
cmp
jle
mov
pushf
xor
test
push
mov
mov
daa
sub
inc
imul
repnz
jae
cmc
push
mov
std
push
lods
cli
pop
fsts
jg
dec
push
gs
jg
xchg
in
mov
fstpt
add
mov
inc
into
ret
cli
stos
movsb
push
pop
insb
dec
fsubl
pusha
mov
cld
sarl
pop
mov
mov
dec
outsl
push
jbe
mov
pushf
fmull
int
mov
cmp
mov
faddp
ljmp
jb
aad
cmc
push
pop
adc
jg
or
cmp
pmaxub
lret
ficompl
ss
add
lret
loop
or
inc
jo
mov
sbb
adc
inc
adc
aam
lret
dec
xchg
cmp
mov
mov
and
jge
xor
das
push
push
in
jae
mov
das
push
mov
cmp
loop
movsl
jecxz
and
jge
cmp
aam
nop
xchg
jbe
xorb
test
xor
and
push
push
xor
mov
dec
shlb
lret
repz
shlb
and
mov
fisttps
dec
cld
add
or
adc
push
dec
subl
add
and
push
frstor
cwtl
dec
mov
dec
mov
adc
cltd
jae,pt
pop
mov
cmp
mov
jg
sbb
cmpsb
xor
jl
or
imul
loopne
sti
lds
mov
and
movsl
loop
adc
pop
add
cmp
inc
sar
scas
push
lahf
fs
lods
pop
imul
js
das
shl
pop
xor
dec
and
push
fadds
imul
stos
pop
add
sub
lret
mov
stos
cmp
in
inc
fcmovnu
pop
imul
jne
int
push
jge
lea
sub
cwtl
movsb
lcall
dec
jmp
stos
sbb
or
or
mov
sub
lret
mov
dec
jmp
repz
jp
push
mov
cmp
xor
enter
call
inc
lods
les
cmp
lret
cltd
ret
mov
or
cmp
fisttps
push
shrl
lret
lret
adc
test
mov
xor
mov
mov
loopne
loop
shlb
jne
cli
inc
in
ror
inc
xchg
and
std
ret
loopne
fdivrp
push
mov
lock
dec
cmp
in
shlb
sub
test
divb
test
fsubrs
mov
fsubrs
cmp
mov
nop
push
hlt
add
mov
and
je
ljmp
fsubrl
or
ljmp
pop
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
insb
xchg
add
add
imul
xor
mov
push
test
out
out
xchg
loope
outsl
push
inc
addb
cmpsb
push
xchg
sbb
loop
dec
mov
out
pop
jp
stos
cmpsl
in
adc
lret
sbb
mov
dec
repz
mov
jno
mov
mov
loope
dec
ja
xchg
orb
mov
jmp
or
arpl
cmc
add
add
out
adc
sti
add
or
lahf
mov
aaa
xor
stos
cmp
or
sarb
push
xlat
subb
ret
les
sub
imul
mov
lods
xor
ss
adc
cmp
cmp
sbb
dec
cltd
push
popa
xlat
imul
jbe
int3
push
repnz
loop
in
clc
in
push
sbb
fistpl
xchg
mov
xor
std
jbe
rolb
sub
inc
xchg
fiadds
inc
outsb
pop
ljmp
iret
popf
scas
pop
int3
call
fwait
clc
sub
pop
or
outsl
scas
pop
mov
or
leave
adc
push
gs
pop
or
adc
push
std
pop
test
lcall
stc
aaa
cltd
xor
mov
push
xor
enter
mov
lea
pop
jo
mov
push
dec
test
xlat
and
cld
aaa
mov
jno
add
cmp
mov
in
enter
cmpl
fistpl
xchg
lods
arpl
insl
pop
mov
rcrb
and
push
daa
inc
pop
add
sbb
dec
pop
dec
out
adc
lahf
add
inc
push
cmpb
push
inc
add
in
fistpl
stos
mov
lahf
adc
mov
pop
es
pop
lds
test
inc
mov
jecxz
and
or
mov
es
test
in
xchg
xchg
shll
adc
insb
mov
add
push
fiaddl
aad
xchg
mov
jl
mov
xor
cs
insl
and
ret
jne
inc
jne
iret
in
mov
adc
test
pop
pop
mov
jb
cmp
or
lret
int
movsb
xor
bound
loop
int
xchg
lock
lea
jp
in
jl
in
lret
movsl
cmp
hlt
cmp
negb
addl
ja
mov
jecxz
aas
sbb
sbb
dec
lret
mov
add
mov
cmp
movsb
sbb
int
aam
jnp
mov
adc
mov
ja
insb
xor
lock
pop
insl
push
mov
call
mov
mov
movb
mov
test
and
aas
lret
nop
pop
mov
cmp
enter
fnstsw
cmp
cld
popf
sub
mov
and
add
scas
adc
cmpsb
xchg
lahf
call
in
mov
mov
lar
ret
mull
dec
mov
or
stc
fxch
popl
pop
fdiv
int
xchg
lds
in
fdiv
enter
filds
jo
mov
pop
or
pop
arpl
pop
stc
cmp
mov
mov
jl
cmp
pop
stc
hlt
bsr
pop
sub
mov
jne
popf
icebp
pop
inc
pop
sub
push
nop
fisttpl
lods
fstpl
add
lods
mov
fwait
test
push
mov
dec
out
popf
lret
mov
cltd
movsl
adc
shl
mov
inc
or
pop
sub
pop
and
jl
and
xor
imul
divb
pop
mov
cmp
push
stos
xchg
add
imul
cwtl
test
xchg
aam
add
test
inc
mov
inc
dec
pop
test
or
or
jae
sub
mov
int3
gs
lea
fchs
sub
hlt
insl
sub
subl
sbbl
insl
jge
xchg
xchg
popf
loopne
pop
mov
mov
stc
mov
dec
into
mov
mov
in
mov
and
mov
jns
lods
pop
inc
dec
pop
pop
shlb
leave
in
outsl
test
and
push
xor
jmp
lea
int3
mov
adc
dec
int
sbb
adc
xor
rcrb
xchg
fdivs
pop
cmp
adc
add
movsb
inc
pop
shrl
fidivl
shll
jmp
sbb
sbb
mov
and
mov
in
lods
push
push
int3
xchg
mov
jbe
dec
loopne
fs
in
aaa
std
cmp
aas
es
scas
xchg
add
sbb
pop
data16
data16
sbb
pop
inc
dec
xor
insb
fistl
outsb
push
cli
jae
add
add
int
xchg
cli
ljmp
mov
mulb
cwtl
dec
loopne
insb
sbb
sbb
sbb
sbb
cld
cli
out
jb
movb
inc
insb
repnz
adc
sbb
ljmp
jecxz
xor
cmp
mov
inc
jg
jbe
stc
sub
popf
loope
call
xchg
shrb
cwtl
sub
faddl
ficoml
lahf
lds
lds
jecxz
and
out
in
rcll
add
repnz
les
or
sub
stos
mov
push
jge
dec
mov
pusha
rolb
sub
sti
cmp
xor
leave
mov
push
cmc
push
int3
iret
enter
lret
mov
pop
popa
mov
in
dec
sbb
dec
ficompl
shlb
jl
dec
sub
xchg
sbb
dec
mov
mov
orl
mov
inc
cltd
jnp
mov
das
lock
cmp
aad
iret
dec
inc
mov
ja
and
repnz
jae
xor
pandn
adc
nop
ss
pop
fdivs
into
cli
dec
out
outsl
dec
and
add
jecxz
ret
mov
mov
dec
add
mov
shrl
sbb
pusha
xchg
rorb
lcall
mov
or
sbb
dec
xchg
mov
hlt
mov
insb
jge
sbb
sbb
lret
jne
sub
fsubr
aas
fldl
je
jg
fcomip
pop
rcr
or
mov
bound
jg
movsl
je
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
dec
jmp
add
mov
or
lahf
xchg
mov
hlt
inc
sbb
imul
push
mov
iret
nop
xchg
shll
subb
push
cmp
movsb
popf
jns
cmp
ficompl
fninit
pushw
fisubrl
dec
test
xlat
das
jge
dec
add
sahf
lret
js
in
mov
int
jne
imul
lahf
ds
pop
xchg
rorb
icebp
xchg
into
in
arpl
push
lret
push
push
xorl
jae
je
scas
inc
daa
mov
hlt
scas
sbb
or
int
rcr
insb
pop
imul
push
xchg
pop
xor
add
shr
loope
outsb
repnz
xor
out
cld
dec
mov
push
fistpll
mov
mov
cmp
xor
cltd
aaa
pushf
adc
movsb
sub
scas
sub
sbbb
lcall
push
stos
xchg
in
cmp
push
outsb
insl
addr16
xor
jmp
mov
pop
jg
jmp
imul
cmp
cltd
inc
int3
in
adc
mov
mov
lock
pushf
xchg
or
movl
push
mull
or
fcompl
dec
mov
ds
ret
fcomp
or
das
imul
or
mov
fdiv
aaa
push
xor
hlt
add
and
dec
mov
add
mov
mov
adc
ret
lods
dec
pop
ficoml
scas
popa
loop
inc
popa
inc
out
inc
rcrl
call
out
jle
jecxz
lods
stos
sbb
loopne
sub
repnz
mov
dec
insl
sti
mov
fwait
sbb
mov
and
push
push
xor
sub
mov
dec
pusha
mov
push
insl
cmpsb
aad
push
sub
and
loop
out
cmp
add
cld
sub
enter
test
cmpsb
pop
shl
popa
leave
pop
dec
mov
sarl
cmp
loop
adc
pushf
and
jge
pop
or
and
frstor
cld
mov
pop
pop
insb
jo
mov
insl
xchg
and
xchg
ret
or
mov
test
std
jp
out
ds
and
xlat
outsb
push
push
add
inc
adc
push
lods
inc
loope
add
push
iret
sbb
cmp
clc
adc
mov
mov
in
mov
inc
sahf
mov
xor
nop
lret
add
add
popa
dec
addl
pop
dec
jl
and
dec
jnp
in
into
push
loopne
mov
iret
rcr
stos
stos
push
jnp
xchg
jbe
lret
std
mov
aas
pop
es
inc
cli
hlt
ret
cltd
mov
and
ljmp
jnp
cmc
orl
icebp
add
rol
push
stos
lcall
adc
jl
fdivp
xorl
pop
and
loop
mov
push
js
insb
push
in
out
xor
subl
sub
mov
pushf
push
inc
and
xchg
mov
inc
sub
push
mov
pop
add
mov
dec
mov
sub
repz
cwtl
mov
and
stos
shll
pop
adc
ficoms
lods
push
xchg
pop
adc
push
test
sahf
test
fsubrs
mov
sub
or
jno
add
out
std
loop
arpl
xchg
dec
dec
jnp
inc
pop
dec
scas
mov
xor
fnstcw
insb
and
shlb
test
push
sbb
lock
or
push
std
test
and
shlb
iret
adc
xorl
jno
out
inc
jmp
adc
insb
jmp
out
negb
or
stos
pop
mov
mov
aam
mov
push
xchg
sbb
jbe
mov
cwtl
hlt
adc
lea
mov
imul
or
push
sbb
ja
and
sub
js
sbb
adc
push
jg
jae
loopne
mov
gs
rolb
jnp
sub
outsl
test
mov
or
bound
pop
mov
mov
les
lahf
clc
xchg
push
into
cmpsb
aaa
cmpb
in
xor
xchg
ficomps
popa
test
les
mov
mov
roll
inc
add
ret
mov
dec
test
ss
mov
dec
add
loope
out
push
lods
xchg
inc
hlt
or
fcmovne
stos
aam
push
outsl
cwtl
aam
rcll
fwait
in
adc
pop
subb
or
inc
and
xor
scas
push
and
icebp
shrl
bound
adc
shl
insl
fucomp
and
and
repz
in
mov
add
enter
push
fcompl
add
cmpsl
add
mov
aam
sbb
fmull
dec
sub
jg
repz
repnz
mov
jb
mov
dec
mov
aaa
push
fstps
or
xchg
ja
pop
inc
movsb
gs
mov
out
push
inc
movsl
jae
add
lret
sbb
test
adc
bnd
sub
and
testl
mov
mov
push
xor
pop
xchg
mov
push
mov
dec
das
pop
xor
loope
push
adc
mov
inc
je
lret
push
add
add
fnstenv
loope
jae
loope
dec
xor
stos
or
dec
mov
enter
mov
xor
dec
aam
repnz
push
pop
insb
dec
fmulp
sub
scas
ds
das
rclb
inc
daa
fbstp
pop
and
in
repnz
sbb
sbb
loope
jmp
into
sarl
xor
push
sub
push
stos
gs
insl
gs
mov
or
repnz
rcr
test
fcoml
popa
sub
add
das
xchg
pop
aam
xchg
add
xchg
iret
std
imul
stos
cwtl
movsb
sbb
call
dec
sti
lea
sub
divb
jle
je
mov
repnz
adc
or
in
out
arpl
test
mov
loopne
es
push
insb
mov
pop
pop
test
dec
iret
adc
out
xor
add
lods
jmp
enter
add
xor
nop
imull
cltd
call
jns
mov
pop
mov
and
inc
jge
mov
out
jo
sub
les
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
xadd
mov
adc
addr16
enter
mov
xchg
rep
stos
pop
repz
leave
andl
cmp
xchg
ret
jmp
pop
xor
sub
cmp
inc
pushf
stos
and
movsb
jbe
sahf
lds
cmp
adc
in
mov
es
clc
stos
imul
add
movsl
fldt
mov
pop
mov
and
inc
jge
adc
xchg
xorl
mull
cli
mov
lahf
mov
jg
xchg
inc
jns
xchg
fcmovnu
ja
cli
cmp
mov
mov
sarl
es
jno
addr16
add
pop
mov
jo
nop
sbb
push
jge
sub
int
cmp
cltd
sub
lret
mov
mov
xor
sbb
insl
dec
or
loope
enter
sarb
jl
xor
mov
dec
inc
add
in
pushf
jge
add
inc
lea
mov
sbb
les
pop
lahf
xor
xchg
jg
mov
aam
sub
xor
lret
imul
push
jmp
push
mov
jl
dec
xor
jns
fidivrl
pop
sbb
ffreep
mov
jl
inc
outsb
out
pusha
leave
cmpsb
das
jecxz
bound
jno
lret
or
shrb
mov
stos
push
andl
mov
sahf
sub
and
shll
cld
push
insb
push
popl
mov
clc
jmp
jecxz
pop
ds
inc
dec
rcll
mov
out
jns
lret
rorb
xchg
repnz
cs
lock
out
push
cmp
adc
ja
loop
mov
cmp
fimuls
inc
bnd
movsb
mov
inc
xor
xor
stos
jg
rclb
adc
pop
insb
xchg
ret
hlt
fisubrl
int
adc
int
iret
mov
mov
dec
ret
lods
sbb
cmp
xor
adc
add
fstpl
push
or
mov
mov
cwtl
and
mov
aas
push
jne
out
jne
pusha
jle
push
add
call
loope
push
lods
dec
inc
jb
ss
test
in
andl
xchg
mov
push
sbb
daa
xor
xchg
rclb
sbb
loop
cmc
in
sbb
insl
or
mov
push
ret
or
mov
fs
mov
mull
sbb
dec
loope
or
mov
pop
adc
mov
imulb
fsts
lahf
ljmp
push
je
mov
fisubrs
jl
popa
sbb
mov
add
bound
jnp
mov
sbb
loop
xor
popf
lret
fidivl
add
pop
adc
add
cmp
push
sbb
push
cmp
xchg
inc
out
sbb
hlt
ret
in
jle
inc
lea
pop
hlt
and
sbbl
mov
in
push
das
and
call
in
in
dec
lds
lock
jb
jo
push
gs
cmp
cs
movsl
cltd
clc
mov
xlat
sbb
cmc
add
or
jecxz
fstps
ljmp
sahf
out
or
sbb
fsubl
xchg
sahf
mov
popa
jg
cld
mov
decl
xor
mov
fistps
adc
or
inc
jb
pop
adc
dec
and
and
repz
add
gs
insl
fcmovnb
or
adc
popf
xadd
lods
enter
add
jg
loope
mov
mov
shrl
mov
in
cmp
ljmp
loopne
loopne
and
je
das
shl
jmp
je
inc
inc
pop
jge
stos
mov
xor
and
adcb
cmp
les
add
sbb
or
push
jae
mov
sub
test
or
add
and
lahf
jmp
cmp
leave
dec
sbb
sbb
push
inc
clc
insl
add
lret
incb
in
mov
or
clc
stc
fnsetpm(287
dec
leave
xor
nop
or
xor
ret
fwait
mov
out
sub
out
enter
and
push
adcl
shrl
fdivrl
in
dec
xchg
stc
iret
inc
jns
rcll
xor
cli
mov
aas
cmp
jno
je
pushf
dec
pop
aas
addr16
das
call
cmp
fdivr
pop
add
lock
xchg
lcall
mov
mov
clc
gs
adc
cli
jecxz
or
sahf
mov
rcrb
test
jbe
xchg
sti
sub
packssdw
pop
adc
ret
ss
in
rorl
in
in
scas
pop
inc
lods
and
sub
add
outsw
test
test
xchg
lds
and
daa
loopne
jo
imul
cmp
sbb
jnp
loopne
mov
and
push
or
xchg
repz
inc
pop
mov
and
sti
dec
icebp
jecxz
ret
daa
push
jno
outsl
mov
adc
xchg
outsl
fmuls
push
xor
xchg
les
test
adc
movsl
shrl
pop
shlb
mov
movsl
mov
insb
adc
cli
and
lods
mov
mov
xchg
cwtl
jge
stos
push
cmp
jecxz
pop
fwait
mov
mov
loop
xchg
shrb
jl
add
jae
xchg
es
dec
or
cli
mov
mov
cmc
shlb
cmp
scas
cmp
loope
int
and
pop
sbb
outsb
outsl
pop
cmpl
int3
inc
out
mov
jnp
leave
pop
jecxz
sub
aad
gs
jp
test
cmc
ret
stc
sbb
inc
add
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
xchg
dec
or
or
pfpnacc
adc
mov
hlt
jb
sbb
imul
adc
cld
adc
or
into
out
xchg
imul
mov
add
xchg
push
jecxz
jnp
xchg
je
adcb
fwait
push
ficomps
mov
sub
jno
in
adc
push
push
pushf
jle
pop
lcall
fwait
int3
xor
repnz
or
mov
mov
mov
dec
loop
pop
pushl
ret
int3
ficoms
negl
adc
dec
mov
ds
xchg
stos
mov
and
inc
test
scas
stos
xchg
mov
pop
ss
push
aam
cmp
or
jge
and
aaa
ffree
div
in
insl
cltd
jp
addb
dec
enter
jns
mov
stos
pop
movsb
xor
mov
adc
cmp
gs
in
fidivl
loopne
cmp
pushf
dec
lods
xchg
pop
movsb
mov
mov
or
push
js
ja
xchg
sahf
sbb
inc
mov
xchg
inc
xlat
mov
mov
repz
xchg
aaa
adc
in
mov
js
or
pop
std
ud0
xchg
xlat
add
mov
lea
and
mov
addr16
in
push
push
jl
out
cmp
inc
mov
pop
and
fwait
sub
stc
movsl
push
aaa
call
movsl
test
lods
jo
mov
pop
mov
inc
xchg
cmp
lods
pusha
xor
pop
movsl
icebp
add
pop
inc
sub
repz
xor
cli
out
xchg
dec
mov
fs
dec
pop
clc
movsb
imul
out
xlat
cmpsl
sbb
inc
or
repnz
sub
imul
cmp
mov
stc
jne
icebp
adc
fldenv
xor
into
xor
push
xlat
jb
cmpsb
int3
mov
adc
enter
mov
aaa
leave
or
jae
mov
add
mov
push
aaa
xchg
mov
xor
aas
jmp
bound
outsl
xor
out
xor
dec
outsl
push
dec
pop
in
icebp
push
xchg
push
mov
mov
subl
or
add
les
sbb
xlat
jp
cmp
in
xchg
pop
push
stos
ret
idivb
je
negb
sub
cmp
jnp
movsl
aas
sbb
dec
andl
sub
aam
push
mov
stos
dec
pop
das
cmpsl
add
adc
rcl
mov
dec
sbb
and
stos
xchg
int
mulb
into
cmpsl
pop
jnp
ss
dec
xchg
adc
cmpsb
test
and
mov
test
or
movsl
mov
out
je
sahf
add
mov
or
sti
cmpsb
mov
push
cld
fiaddl
movsb
adc
inc
insl
cltd
mov
mov
faddp
ret
sbb
fsubl
cmp
nop
cs
push
cltd
rorl
mov
pop
scas
cmpsb
mov
int3
sahf
mov
mov
dec
pop
cli
and
dec
std
mov
test
out
cmpsb
xor
or
ds
ljmp
addb
sbb
pushf
rcrl
cmp
lods
pop
rcr
mov
cmpsl
inc
das
jecxz
inc
mov
mov
pushl
push
sarb
pop
dec
aaa
cmpsl
mov
mov
ret
adc
push
shlb
pop
jmp
inc
ret
inc
xor
jmp
loope
dec
adc
repnz
pusha
cmpl
push
repz
fcmovnb
push
mov
dec
mov
cmp
push
cli
mov
jecxz
xchg
mov
mov
and
jno
lds
daa
leave
aaa
out
aam
xor
xor
mov
rolb
dec
insl
cmp
or
jo
jmp
aas
jns
cmp
stos
mov
push
rolb
inc
outsb
repz
dec
sarl
fwait
mov
lods
add
faddl
cmp
lret
mov
xor
or
xor
fnstenv
xor
push
xor
pop
imul
test
sub
inc
imul
adc
cmp
lds
rclb
fyl2xp1
cltd
mov
xor
lea
push
add
pop
add
inc
rcr
ljmp
negl
lret
sub
mov
add
sti
dec
gs
je
aaa
jnp
aas
pop
test
dec
and
sub
xlat
lcall
jl
cltd
lods
jns
pop
xor
push
push
jns
dec
adc
rorl
sbb
dec
pop
push
sub
aad
movsb
jle
fstpl
rorl
fmulp
mov
iret
mov
xchg
mov
xchg
inc
mov
rcll
jne
pop
sbb
iret
jns
outsl
sbb
scas
xchg
shl
jno
hlt
stos
adc
cmpsb
inc
cmp
cmpsb
sbb
fstpl
inc
fmul
add
lods
inc
push
adc
in
cmp
test
into
imul
popl
inc
jae
push
mov
jbe
jne
add
jl
mov
push
and
hlt
jns
std
cmc
and
lahf
cmp
sbb
mov
outsb
or
repnz
sti
int
ret
cltd
sahf
int3
lret
or
fcoms
jbe
xchg
jp
pop
movsl
mov
das
pop
inc
sub
insb
xchg
les
cmpsb
daa
jne
sbb
mov
push
ret
push
pusha
jb
or
dec
xchg
mov
add
lods
stos
mov
stc
sbb
xchg
movb
sbb
icebp
jge
push
xchg
xor
shll
inc
cs
mov
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
sub
iret
invd
add
pcmpgtw
sub
or
or
cld
orb
gs
push
loop
push
pop
cmp
push
sbb
sub
je
add
sarb
aas
stc
push
add
cld
data16
mov
std
lods
ret
iret
push
push
in
add
sub
cli
or
adc
or
loope
pop
shrl
inc
and
pop
jbe
enter
enter
outsl
cli
divl
dec
je
push
leave
xchg
mov
or
push
mov
xchg
add
aaa
add
pop
je
xor
jle
push
sbb
or
and
pushf
add
es
test
xor
imul
ss
inc
mov
jge
push
pop
add
repnz
das
mov
aaa
mov
movsl
pop
cmp
pop
jb
aas
test
and
sbb
lods
cmp
xor
cs
push
out
inc
jge
dec
sub
iret
icebp
mov
mov
xchg
and
in
dec
ret
subb
loopne
add
sar
pop
popa
adc
mov
xchg
je
xchg
mov
mov
xor
mov
rorb
enter
ds
xor
jmp
jl
fiadds
dec
lock
pop
movsl
out
jo
imul
cmc
fisubs
lea
jmp
xchg
and
and
cmp
adc
dec
inc
orb
cs
dec
cmp
ja
xchg
pop
in
mov
push
or
mov
adc
dec
mov
xchg
rcll
lea
xchg
mov
xor
insl
xchg
pop
cld
mov
and
icebp
lret
mov
jmp
out
push
cmp
push
jbe
xor
test
xchg
mov
stos
pop
hlt
jl
dec
jae
loop
mov
dec
out
std
pop
ja
cmp
aad
sub
xchg
aam
adc
dec
or
adc
mov
daa
inc
xor
lret
lods
push
mov
and
lods
fst
clc
cld
movsl
pop
pop
jnp
or
ds
fs
lods
faddl
loop
pop
ret
rclb
sbbb
cmpb
adc
lcall
inc
loope
adc
imul
adc
add
mov
mov
or
bound
add
jne
jo
or
jg
dec
adc
push
inc
adc
lret
inc
rcll
and
xor
leave
mov
ret
inc
sub
dec
and
lret
sbb
inc
outsb
xchg
ja
adc
sbb
cmc
sub
xchg
divb
fisttpl
mov
jns
imul
pop
test
xor
jb
popf
sub
add
mov
bound
or
fisubrs
cmpsb
outsb
xchg
add
jp
jp
test
movsl
or
xchg
adc
dec
and
fsubrs
dec
iret
mov
lods
pusha
ljmp
stos
rcl
aaa
movsb
inc
mov
mov
imul
loop
loop
mov
jo
mov
lea
sub
pop
stos
dec
out
xchg
pop
pop
jae
and
push
dec
fcmovnu
imul
add
lods
xchg
test
or
aam
dec
neg
jne
fildll
nop
inc
data16
out
dec
daa
fmul
lods
data16
cmp
dec
lds
add
pushf
and
test
ljmp
sbb
dec
push
xor
jg
xchg
outsb
rol
cmpsl
and
movsl
daa
fiaddl
aam
jge
mov
dec
lret
push
jb
adc
mov
int3
lcall
xchg
packssdw
inc
fdivl
int3
lret
or
insb
xchg
cmpsl
and
mov
arpl
movsb
outsb
loope
js
test
nop
jge
jns
cmova
push
push
push
add
leave
sbb
pop
icebp
dec
lcall
push
inc
scas
sub
gs
sub
push
mov
xchg
and
adc
test
je
pop
xor
stc
or
fwait
sti
push
jg
dec
aas
or
sub
push
insl
mov
dec
fistps
divl
ret
outsb
sbb
jno
push
fsubrl
outsb
repz
insb
mov
sub
sarl
mov
jecxz
jecxz
cmp
call
fcom
test
flds
add
fmuls
out
movsl
fisubrl
data16
pusha
add
dec
in
mov
popl
cmp
lods
stos
inc
ljmp
ret
shlb
sbb
inc
aad
test
loopne
and
mov
stos
les
fdivrl
in
jno
xchg
and
idiv
cs
cmpsl
inc
je
cltd
dec
mov
pop
and
dec
mov
fidivs
jge
daa
sub
xor
movsb
adc
jb
xchg
xchg
or
addr16
loope
out
and
lret
xorl
xor
nop
ret
int3
sbb
mov
aad
jge
lods
sti
popf
sbb
test
jecxz
and
lcall
xchg
icebp
adc
add
jae
push
fldenv
leave
cwtl
pop
jbe
out
stos
xor
sub
cmp
jle
mov
loopne
jl
hlt
dec
and
mov
adc
popa
lods
sbb
outsl
inc
in
pop
inc
das
xchg
mov
add
jge
adc
call
xchg
jb
lcall
iret
dec
shr
and
sti
adc
add
jne
push
mov
xchg
sub
push
xchg
insl
insl
cltd
popf
lret
call
push
add
cs
fmul
xor
dec
js
cmpsb
jbe
lods
xchg
insb
loop
ret
sbb
les
stos
ficompl
mov
arpl
push
pop
mov
lock
jl
jle
mov
out
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
unpcklps
mov
sub
daa
and
push
fsubl
test
imul
and
push
or
fs
ret
xchg
pop
test
lods
lahf
sbb
sbb
push
into
inc
loopne
inc
es
aas
lret
cli
sbb
rcr
test
adc
push
sbb
test
aas
lret
je
les
lret
jg
push
fstpl
mov
movsl
mov
data16
das
mov
lret
cmc
push
cltd
or
mov
push
sahf
pop
cmp
pushf
sub
in
ss
mov
mov
cld
push
cltd
mov
dec
dec
mov
mov
jp
test
loope
in
js
mov
jge
and
add
hlt
inc
cmp
in
sbbb
push
imul
loopne
icebp
out
cmc
orb
testb
rcrl
or
xchg
xchg
xor
out
lret
adc
adc
and
jo
js
xchg
jnp
cmovns
push
pop
xchg
mov
mov
push
adc
mov
cmp
icebp
movsb
cmp
enter
push
cmp
mov
fs
negb
gs
xchg
add
and
mov
xor
and
in
mov
push
daa
jl
mov
fcomps
cmp
inc
adc
test
inc
pop
fisubrs
cmp
mov
shll
add
sbb
int
aad
addb
insb
les
out
sub
inc
push
call
inc
pop
stos
mov
adc
ret
adc
or
dec
pop
mov
xor
push
sub
inc
push
push
dec
xor
mov
push
shll
cs
pushf
popa
mov
xor
lahf
decb
sub
repz
add
or
fisubl
icebp
mov
sub
cmp
lea
push
ja
adc
mov
and
into
psubd
jne
ja
mov
js
notb
pop
cmp
cmc
imul
sbb
sub
imul
push
sbb
xchg
mov
ljmp
pop
cld
jle
ds
fwait
xchg
mov
cmp
sub
push
mov
fiadds
mov
out
jecxz
and
lods
inc
inc
sub
jp
push
xchg
dec
rorl
aam
push
call
pusha
out
cs
stos
imull
in
data16
mov
into
out
pop
fbld
fstl
scas
xchg
mov
push
cmp
pop
jp
cmp
movsl
pop
xor
into
sub
icebp
cld
jne
cmp
pop
fildll
add
test
clc
test
add
repz
scas
mov
repnz
testb
inc
sbb
out
fimuls
test
inc
divl
int
sbb
lahf
insb
push
xor
and
in
leave
push
test
add
call
cs
test
pushf
icebp
je
push
repnz
fdivs
dec
imul
lahf
std
test
xor
pop
mov
jo
pop
lods
add
enter
adc
das
mov
mov
out
xor
pop
xchg
jmp
pop
fcom
cs
notl
inc
hlt
mov
int
cmp
icebp
movsb
mov
xchg
mov
ret
cld
fcmovu
lret
test
scas
sbb
mov
add
sbb
sub
fisttpl
jmp
fsubrs
inc
and
arpl
push
sub
insb
stc
inc
xchg
pop
shll
subb
and
repnz
mov
movsl
dec
pop
lock
lahf
add
lock
shll
mov
adc
push
lock
mov
mov
inc
xlat
mov
or
in
scas
in
mov
aam
das
pop
jns
lret
pushf
sub
pop
mov
inc
jge
insb
testl
cmp
dec
int
add
sbb
int3
mov
jmp
mov
add
movsb
xchg
push
scas
notl
xchg
push
test
addr16
inc
inc
outsb
cmpsb
pusha
jne
mov
ds
xlat
mov
dec
test
shlb
mov
sbb
push
call
mov
shl
jae
or
adc
lods
inc
or
add
adc
pop
out
inc
mov
jmp
or
ja
shl
cld
xor
test
jae
shrb
repnz
stc
pop
rclb
lods
push
js
in
or
int
mov
lea
mov
inc
orb
shll
inc
inc
aas
or
mov
adc
push
out
cmpsb
jb
and
sarb
in
lretw
repz
push
mov
add
pop
sarl
gs
lahf
dec
stos
sbb
popl
mov
cmp
and
arpl
mov
loope
fcomps
mov
dec
test
jl
in
and
mov
in
push
mov
bound
xor
cmpsb
push
das
lea
dec
pushf
jmp
cmpsb
jl
xchg
push
out
std
movsb
pop
xor
popa
gs
jo
and
mov
inc
sahf
dec
xor
adcl
lahf
mov
addl
or
mov
aad
cmp
or
xchg
ret
sub
ret
add
rolb
adc
xor
sbb
and
xchg
mull
push
shl
fucomp
and
dec
call
dec
jle
test
inc
test
lods
and
outsb
rol
pop
lea
popa
sbb
shl
adc
dec
repz
jne
rcll
add
fst
jp
ss
test
movsl
bound
push
aam
and
mov
out
fs
pop
xor
push
and
sbb
inc
nop
icebp
insb
cmp
icebp
testb
scas
push
xchg
repz
sub
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
xorb
xchg
add
paddq
sub
mov
jnp
test
shll
and
dec
inc
xchg
shrl
adc
cwtl
test
lock
into
int3
ffree
push
pop
icebp
push
ret
lahf
pop
imul
jl
out
insl
add
mov
adc
bound
movsl
mov
push
mov
mov
test
int3
dec
ss
das
sbb
cltd
lds
into
fbstp
push
clc
inc
stos
pop
mov
dec
into
mov
nop
lcall
cmp
ja
out
sbb
fisubrs
imul
jno
loopne
inc
test
xchg
and
sahf
shlb
lret
js
out
lds
push
push
mov
jno
lahf
pop
xchg
arpl
mov
or
pusha
loope
xchg
cmp
rorl
mov
push
in
jl
sbb
add
xchg
dec
mov
cwtl
pop
xchg
inc
pop
call
fldt
outsl
orl
cmc
leave
popa
and
movsl
mov
or
pop
mov
leave
mov
loopne
mov
cmp
sub
and
imul
sarl
cmpsb
mov
mov
lods
rorl
fst
ds
push
dec
out
loopne
add
bnd
mov
mov
fmuls
outsb
mov
cmpsb
lea
pusha
or
arpl
mov
jge
stos
in
cmpsl
inc
icebp
nop
push
aad
rcrb
add
push
imul
mov
push
sar
dec
test
arpl
test
test
inc
lds
sub
cmp
and
std
pop
repz
or
std
mov
sahf
and
inc
jo
in
cmc
adc
ss
push
or
adc
test
mov
sub
mov
test
fs
jmp
mov
gs
push
push
mov
cwtl
in
mov
nop
jmp
lahf
xor
loopne
icebp
das
shll
int
aaa
ffreep
repnz
push
mov
mov
and
pop
lds
fwait
ja
rorl
add
call
jae
mov
mov
push
xor
repz
pop
gs
mov
sarl
inc
or
arpl
mov
call
lods
jne
mov
cwtl
scas
cmp
push
sti
popa
pusha
push
movsb
jnp
insl
negb
jno
addr16
mov
dec
pop
xchg
adc
scas
or
out
movsl
xchg
in
inc
adc
add
ret
push
je
dec
xchg
dec
push
cmp
fnstenv
cmc
sarl
cmp
push
das
ret
xchg
mov
xchg
fucom
outsb
add
test
cltd
gs
or
cltd
rcrb
rcrl
lds
aas
ljmp
sarl
inc
cltd
shrb
sub
leave
nop
jp
int
or
mov
sbb
scas
test
outsl
dec
in
pop
roll
push
cmpsl
or
cmc
repz
push
fsubs
mov
cli
insl
xchg
je
test
mov
mov
push
jne
rolb
or
sbb
xchg
cli
test
adc
jmp
sbb
xor
lea
js
push
dec
cmc
pop
push
pop
pop
mov
jecxz
jge
xor
adc
into
and
cltd
dec
mov
pop
rclb
jg
mov
lret
js
inc
sbb
pop
gs
xor
add
cmp
add
mov
in
iret
pop
dec
inc
xor
xchg
cmpsl
stc
cli
or
dec
dec
jne
shrl
repnz
sub
scas
or
xchg
adc
dec
inc
lret
and
mov
leave
fs
jl
mov
push
and
sbb
push
imul
mov
mov
pop
das
out
xchg
int3
lds
pop
and
lods
mov
dec
dec
stc
mov
mov
sbb
xor
mov
and
and
pop
xchg
lcall
cwtl
je
rorb
push
insl
inc
sbb
aam
fstpt
loopne
jg
dec
in
repnz
jecxz
mov
sbb
in
push
or
popa
xchg
jmp
fadds
imulb
popa
std
imul
call
lods
decb
xchg
leave
pop
sub
pop
mov
hlt
fiaddl
lret
cs
or
popa
inc
les
scas
pop
cltd
push
sbb
test
in
test
dec
jp
cli
and
fsub
lds
lcall
adc
jecxz
push
xlat
lcall
mov
sub
lret
cmc
popa
jp
jnp
movsl
jno
inc
gs
sub
sbb
cmp
stos
ds
fisttps
pop
dec
fldt
in
xor
jge
lcall
call
std
inc
arpl
ja
and
jmp
ljmp
sub
shrl
adc
out
pop
inc
cvtps2pi
addb
cmc
scas
xchg
stos
cmc
adc
test
push
aaa
in
xlat
lods
lods
push
sub
sub
shl
iret
push
mov
mov
call
loopne
jns
addr16
or
test
movsb
leave
pop
pop
out
movsb
pop
adc
cmp
test
outsl
sbb
inc
mov
cmpsl
pusha
shlb
outsl
out
cmpsb
pop
cmp
mov
sbb
xor
xchg
xchg
dec
sbb
movsb
mov
imul
push
das
mov
cmpsb
xor
push
test
popa
fildl
sti
mov
jbe
imul
jnp
mov
icebp
adc
int
push
pop
dec
mov
sar
jo
cmp
sbb
das
mov
in
sbb
inc
sbb
sub
imul
lods
out
es
daa
fstl
xorl
fdivs
mov
inc
ljmp
repnz
sub
stc
jmp
mov
xchg
mov
das
aam
scas
popf
invd
add
psadbw
add
push
dec
push
lcall
add
nop
ret
cwtl
sub
mov
out
xor
je
add
mov
test
jno
and
jae
inc
adc
test
nop
add
std
sub
sub
bnd
mov
sti
sbb
add
imulb
dec
push
stos
sub
xchg
push
cwtl
stc
jmp
mov
xchg
fld1
pop
sbb
sub
pop
xchg
cmpsb
and
mov
sub
aam
sbbl
dec
mov
pop
dec
mov
push
cmp
mov
cltd
pop
gs
inc
in
pop
cmp
mov
xor
sub
xor
repz
xor
pop
lds
in
mov
scas
and
test
insl
sub
ficompl
imul
repz
adc
pop
push
rolb
jg
pop
or
jbe
mov
das
fcomi
aas
cld
or
gs
mov
mov
mov
and
xchg
or
das
mov
inc
cmp
jne
test
cmpsb
popf
adc
push
jno
sub
outsl
enter
add
push
int
cltd
lret
jno
gs
hlt
rolb
into
dec
test
push
pop
out
and
add
mov
mov
out
or
xorb
push
dec
out
pop
adc
sti
push
adc
jmp
jno
sub
bound
bound
dec
cwtl
xchg
mov
es
xlat
or
sub
push
roll
jmp
cmp
je
pop
ud1
or
xchg
jb
fwait
aaa
mov
test
xchg
push
fcmovbe
mov
test
adc
mov
addr16
fcomps
xor
dec
pushf
jns
mov
in
paddd
xchg
push
or
push
push
inc
lods
xlat
mov
ss
jmp
dec
pop
mov
add
sbb
xchg
rclb
inc
movzbl
pop
jmp
inc
icebp
incl
adc
stos
dec
ss
cmp
dec
in
push
jl
jle
shll
mov
dec
push
xchg
fimuls
and
imul
or
lds
or
mov
stos
mov
pop
test
stos
mov
and
mov
xchg
mov
mov
and
int3
adc
int
adc
cmc
shrb
popa
pop
adc
mov
xchg
or
fsubr
stos
sbb
fmul
xchg
adc
mov
push
mov
fs
mov
jle
xchg
sub
dec
call
lock
mov
push
or
and
cs
mov
jnp
mov
nop
pop
sub
mov
push
mov
ss
ljmp
sahf
ret
sbb
js
jns
fistl
mov
pushf
testl
jg
in
ret
xor
mov
mov
dec
int
or
mov
push
mov
cwtl
inc
das
stos
cmc
cli
cmp
cmp
test
fs
pop
mov
cmp
jecxz
mov
sub
xchg
test
mov
push
cmp
jne
movsb
pop
lcall
push
fmuls
lock
and
jb
cmp
std
addl
dec
inc
add
dec
xor
mov
xchg
xor
xchg
leave
xor
ror
or
push
out
mov
dec
das
cmpl
out
rcll
push
testl
imul
inc
mov
jp
aas
jns
mov
xor
jmp
or
or
dec
xchg
loop
push
inc
fcomp
mov
xchg
mov
lock
rolb
insl
jp
imul
fwait
dec
pop
pushw
loope
xchg
xor
aad
mov
cltd
xlat
jae
xchg
fcoml
pop
ds
cmp
movsl
ss
loopne
sbb
add
out
jo
pop
test
imulb
testl
stc
xchg
xchg
mov
jg
cltd
int3
inc
push
sub
outsb
lock
sub
cs
pop
lea
imul
dec
xchg
sbb
call
jns
stos
sbb
mov
cmp
mov
flds
and
pop
sub
cs
cmp
rcr
jo
inc
xchg
test
int3
push
out
inc
clc
xchg
icebp
inc
les
or
loopne
clc
ds
mov
and
jae
pop
xchg
or
jmp
inc
aas
mov
dec
sbbb
mov
mov
rcll
ljmp
test
in
pop
pop
out
cwtl
adc
adc
jmp
movsl
int3
xchg
into
inc
mov
and
lods
lcall
movsl
fdivr
and
aam
pop
sbb
js
xchg
sub
outsl
push
mov
push
mov
or
dec
push
pop
imul
leave
lret
inc
dec
gs
das
sahf
add
jmp
xchg
adc
mov
mov
cwtl
fiaddl
cmp
out
mov
jnp
lahf
xor
xchg
cli
int
or
popa
sub
out
int3
hlt
lods
inc
pop
xor
jne
jmp
out
xchg
ja
scas
mov
xchg
lcall
cmp
adc
loopne
mov
add
popa
pop
lds
inc
iret
imul
adc
loopne
or
rclb
leave
imul
insl
cmp
ret
cli
adc
push
push
aas
lcall
insl
mov
mov
push
mov
mov
sub
scas
dec
jbe
mov
xor
cmpsl
fadds
lock
sub
jle
mov
movsl
je
xor
dec
xchg
ret
or
negl
cmc
outsb
push
fmuls
test
sbb
mov
movsl
or
cmp
and
adc
into
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
xchg
add
prefetch
leave
or
outsb
pop
xor
push
cmp
xchg
lret
inc
jbe
dec
pop
jle
scas
jle
mov
shrb
stos
jle
imul
mov
mov
or
movsb
pop
ljmp
dec
mov
cmp
cmc
in
shll
cmp
icebp
xchg
cmp
clc
and
or
sbb
out
mov
or
syscall
fstl
mov
jp
jecxz
cmpsl
lret
add
in
sub
iret
adc
mov
lds
shrb
adc
push
imul
add
scas
xor
hlt
inc
jne
pop
xor
xchg
add
sbb
fnsave
dec
xor
xor
rcrl
jmp
or
sub
pop
dec
fists
xchg
imul
fs
call
fisubl
cmpsl
lods
std
and
xor
or
mov
and
pop
loope
bound
cmc
and
mov
fdivrs
movsl
pop
dec
mov
aas
sbb
or
dec
cs
out
cmp
cli
or
or
mov
sbb
arpl
cmp
lahf
scas
xlat
inc
rolb
sti
or
push
stos
sub
imul
mov
sub
shll
idivb
out
aas
push
cld
mov
ficoml
ret
ret
imul
fisttpl
clc
sbb
xchg
fmull
add
mov
fcomps
jo
daa
mov
sub
or
and
adc
in
mov
cmpsb
mov
ret
mov
mov
and
stc
pusha
push
scas
jo
decl
push
jmp
test
push
bound
sbb
lahf
lret
cli
sub
js
into
mov
xlat
out
adc
mov
insb
sub
roll
xchg
inc
inc
push
in
pop
inc
mov
add
and
sbb
dec
int
pop
cmp
in
mov
fsubp
scas
jecxz
cmpsb
cltd
mov
repz
sub
pop
push
cmp
pop
test
pop
lods
fwait
movsl
pop
lret
clc
xor
sbb
cmpsl
inc
add
inc
js
imul
and
rorb
lahf
cmp
inc
sti
adc
mov
stos
pop
int
mov
jle
jmp
jge
xchg
mov
cmp
mov
fiaddl
imul
push
cli
sti
pop
mov
xchg
ja
dec
sbb
ja
cmp
or
pushf
mov
xor
shlb
or
aad
jge
xchg
push
mov
or
xchg
imul
or
cld
fwait
lods
mov
popa
cmp
sahf
sahf
lahf
fsubrs
push
xor
inc
push
daa
mov
jg
int3
push
sbb
fcmovne
cs
sbb
and
fbld
push
jg
outsb
jns
pop
jne
iret
loopne
mov
fwait
mov
divl
mov
jle
ret
cmp
aaa
pop
nop
xor
mov
and
pcmpeqd
adc
jp
jns
mov
xchg
nop
jl
outsb
rep
or
pop
sahf
in
xor
stc
movsb
insb
out
adc
xchg
in
push
xchg
scas
or
push
adc
inc
pop
jle
jnp
sub
call
mov
movsb
mov
pop
push
lret
lods
xor
aaa
add
das
jl
insl
pop
add
mov
push
repz
adc
in
mov
call
out
sti
aad
xchg
lock
and
and
pop
in
mov
adc
dec
mul
les
rcr
xchg
test
fcomps
int
sbbb
shrl
and
cli
inc
add
int3
jg
pop
adc
push
adc
cmc
xor
cmpsb
lods
data16
stos
ljmp
test
stc
xchg
stc
ja
mov
mov
je
add
cmpsb
xor
out
hlt
jno
ret
insb
push
pushf
pop
pop
sbb
cld
inc
lds
gs
repnz
push
test
cmpsb
xchg
dec
dec
or
test
jg
pop
pop
pop
jecxz
fildl
out
out
insl
scas
out
fildl
shrl
fisubrl
addr16
jns
icebp
sahf
lea
cltd
sbb
sub
push
mov
hlt
jb
push
fimull
mov
call
pop
test
cmp
push
mov
xor
sarl
mov
lock
mov
imul
cwtl
ljmp
sahf
sbb
mov
inc
das
adcl
push
xchg
push
sbb
dec
in
movsl
inc
lods
xchg
hlt
pushf
xor
mov
pop
dec
pop
cs
out
and
loopne
andl
cmpsb
sub
xchg
aam
mov
adc
cltd
dec
adc
in
adc
xchg
je
sub
sarl
cmp
push
int
leave
lods
push
or
add
sbb
sub
xchg
push
fisubrs
push
ficoms
dec
aam
lret
jl
sub
cmp
cmpsb
orl
ret
scas
cmp
push
cmpsb
xor
xor
mov
mov
shll
fldenv
cmp
cwtl
divl
mov
stos
leave
ret
cltd
cmp
push
or
add
xlat
xor
in
inc
ljmp
mov
subl
dec
jbe
lds
gs
fwait
pop
divb
or
adc
mov
or
and
inc
inc
push
inc
outsl
cmpsl
push
aad
rorl
push
inc
out
std
push
out
push
fildl
movsb
mov
in
iret
aad
mov
xor
jmp
add
cmp
ss
inc
sub
test
dec
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
xchg
adc
or
cmpxchg
inc
mov
or
lahf
push
into
pop
xchg
mov
aaa
or
pusha
jnp
inc
adc
and
sub
subl
cs
jmp
jecxz
xor
cmp
mov
jne
mov
xchg
and
sub
push
push
mov
fs
icebp
das
xor
aad
mov
sub
mov
mov
out
mov
popa
jns
push
jge
addr16
and
outsb
mull
sub
pop
push
inc
sub
push
dec
xor
fldt
dec
xlat
dec
xchg
jbe
cmp
cmp
stos
ds
pop
ret
inc
cmp
pop
ret
lods
pop
xchg
andl
mov
pop
adc
mov
loopne
dec
cmpb
pop
xor
gs
sbb
xchg
loop
pop
lcall
add
imul
call
jmp
mov
mov
xchg
lods
push
pusha
push
rcl
xchg
and
adc
loope
mov
push
mov
inc
mov
cmp
xor
lahf
mov
pop
jae
push
mov
int3
sbbb
aas
pushf
mov
add
jae
inc
scas
ss
icebp
outsl
dec
push
insb
mov
in
push
and
in
or
enter
cmp
es
dec
mov
ljmp
mov
jp
sbb
sbb
push
mull
jb
insl
and
into
cmc
mov
insb
pop
pop
xchg
addb
lret
mov
pop
outsb
ror
loope
lds
shll
fsts
in
ja
stos
sub
sub
rep
inc
or
into
xchg
insl
jp
sbb
sub
pop
popa
xor
mov
dec
or
scas
adc
mov
std
cwtl
push
insb
dec
mov
mov
in
popa
mov
cmc
cld
aad
jmp
mov
lea
sub
les
cli
adc
enter
std
and
in
out
and
mov
aad
mov
ja
in
dec
or
ficoms
pop
lds
fildl
cmpsb
mov
and
dec
hlt
fldenv
xlat
sbbl
jl
fsub
orl
jae
popf
fistpl
or
fildll
cmp
add
cmpl
mov
jmp
aaa
cs
in
or
inc
sarl
sti
xor
sub
std
stc
fisttps
cmc
add
cmpsl
fcmovu
aam
icebp
mov
lret
fistl
mov
in
roll
ret
xor
jecxz
dec
dec
add
sbb
jmp
push
shrl
imul
adc
xchg
pop
mov
and
mov
scas
fbld
insb
fcmovnbe
mov
or
rorb
push
sbb
dec
mov
dec
pop
cmp
pop
mov
gs
and
pop
mov
out
adc
loopne
je
sbbl
pusha
mov
movsb
pop
out
in
push
jge
pushf
add
mov
iret
hlt
xchg
inc
and
cmpsb
in
cmp
mov
repnz
xor
mov
int
xor
mov
xor
jmp
cmp
js
xchg
test
ret
inc
jo
jecxz
pop
es
dec
lock
mov
pop
inc
clc
popf
mov
dec
or
daa
or
pop
add
jge
cmc
xchg
incb
iret
fists
push
jbe
scas
imul
xorb
cmpsb
jno
icebp
cmp
and
pop
out
push
or
mov
clc
in
pop
mov
add
cmpsb
xchg
inc
dec
cmp
or
ja
ss
and
push
rorl
stos
xor
fiaddl
sub
cli
pusha
mov
dec
and
dec
jne
lods
mov
int
ljmpw
push
jns
call
sbb
inc
mov
cltd
mov
clc
add
pushf
in
mov
ret
inc
or
lcall
in
es
ss
call
mov
aam
shll
lcall
xchg
or
sbb
call
movsb
xlat
test
push
mov
std
je
aaa
cmp
outsl
cmpl
scas
and
and
add
fildl
xchg
jge
mov
push
pop
lea
mov
aaa
xor
push
cmpsl
imul
popa
out
sub
sub
scas
lock
loopne
lea
popf
out
cld
fisubrl
fst
lds
std
mov
push
lods
xchg
repz
mov
dec
dec
mov
inc
out
cmpsb
fcoms
push
stos
mov
pop
shll
leave
and
mov
daa
inc
inc
push
fldt
cmpsb
sub
or
push
mov
test
sti
push
outsl
lcall
out
jnp
ret
pop
mov
lock
sub
out
add
pop
xchg
push
arpl
push
mov
stos
movsb
sbb
mov
das
push
js
xchg
and
mov
loopne
pushf
nop
dec
adc
les
mov
push
sbb
loope
repnz
pop
rclb
iret
dec
mov
dec
mov
flds
int3
dec
and
add
xchg
jns
inc
les
xor
loope
sub
xorl
test
fldt
push
sbb
into
out
jnp
rorl
mov
add
stos
fs
push
js
lods
ja
sub
loopne
sub
fimuls
outsb
aad
push
scas
inc
and
dec
push
jnp
test
stc
insl
inc
jnp
jns
roll
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
fidivrs
mov
add
notb
bound
fcomps
into
add
push
push
in
and
lods
mov
and
add
int3
dec
or
cmp
and
mov
and
add
or
xchg
loopne
lret
inc
cwtl
orb
ja
iret
ja
inc
pop
sbb
xor
addr16
pusha
adc
or
sahf
mov
xor
or
pushf
xorl
pushf
xor
dec
loope
out
add
mov
push
jmp
movsb
dec
test
dec
stc
mov
lss
sarl
pop
sub
and
rclb
ds
repnz
mov
negb
call
inc
push
imul
mov
sbb
xor
mov
out
inc
outsb
negb
xor
je
int
notb
into
push
outsb
imul
arpl
daa
jl
sti
jg
out
mov
xor
pop
rclb
jne
icebp
outsl
repnz
push
imul
xchg
shrb
push
loopne
out
dec
jecxz
mov
pop
pop
pushf
ljmp
test
imul
cmpsb
push
cmp
aam
adc
ret
jmp
push
daa
mov
lods
sbb
out
lea
mov
fcompl
lea
imull
clc
mov
jno
cltd
lea
addb
sub
pop
mov
and
xchg
scas
pop
push
xchg
xchg
ret
lcall
and
fwait
arpl
xchg
sbb
je
adc
push
in
ficoms
push
lea
cwtl
fwait
push
fists
sbb
pop
mov
lods
movsb
iret
jg
pop
and
popl
sbb
add
cs
shll
daa
push
dec
or
inc
int3
ret
sub
enter
into
cmpsb
test
mov
xchg
lods
mov
mov
es
inc
mov
jmp
sub
lcall
shrb
addb
mov
jae
mov
inc
xchg
addl
mov
popf
or
jne
insb
add
cmpsl
outsl
scas
mov
sub
or
add
cltd
and
add
rorl
sub
jns
addl
lock
loope
cwtl
cmp
movsl
inc
dec
sub
mov
push
fdivrl
fsubrp
flds
add
fildl
dec
insl
push
cmpsb
jmp
inc
adc
pop
into
scas
cmp
out
test
adc
mov
pop
testb
xchg
pushf
ja
mov
inc
repz
stc
mov
lods
repz
sahf
mov
mov
stos
cmp
lahf
push
push
mov
int
xchg
jo
adc
stos
out
and
sub
inc
test
arpl
xor
adc
push
xlat
sbb
adc
sarb
pop
add
xor
pop
pop
popf
mov
mov
or
pop
lcall
dec
push
arpl
mov
sahf
push
inc
fwait
xchg
or
js
leave
arpl
test
lods
dec
hlt
inc
mov
movsl
jns
gs
leave
aam
popf
cmp
popa
nop
mov
loop
mov
in
or
aam
push
loopne
loope
xchg
jg
test
mov
jae
xor
ret
mov
xor
cmc
mov
and
mov
je
loopne
cmp
mov
decb
sar
shll
jle
mov
mov
mov
ret
lahf
pop
inc
xchg
ret
rcll
mov
jne
mov
in
or
loopne
stos
push
sti
jb
pop
sbb
adc
fwait
repz
pop
xor
div
pop
test
jae
mov
imul
lret
add
sub
sbb
andb
push
movsb
lock
sahf
ds
and
cmpsl
rcrl
mov
push
gs
aad
lods
sub
dec
js
jle
nop
sbb
mov
xor
mov
push
dec
subb
fsubr
push
cmp
add
shl
mov
mov
fisttps
inc
dec
adc
shrl
daa
clc
das
mov
cwtl
xor
imul
push
test
shlb
les
or
or
cwtl
and
insb
push
into
mov
sarl
lds
push
test
jmp
jmp
movsl
push
ljmp
ds
mov
into
and
ret
xor
fucompp
xlat
je
pop
loop
mov
ret
mov
xchg
repnz
adc
cs
arpl
push
mov
inc
push
movsl
cmpsb
cmp
std
pushf
mov
sbb
mov
jge
dec
cmp
pop
in
and
call
fsubs
mov
add
aaa
or
jge
mov
xor
push
outsl
push
mov
adc
loop
sub
mov
inc
icebp
jne
sub
add
pushf
xchg
imul
enter
add
hlt
inc
movsb
scas
add
mov
pop
pop
sti
sub
xchg
fldcw
loop
adcl
mov
fldenv
xor
push
or
push
or
push
int3
ret
clc
imul
cmpsl
gs
fwait
push
xchg
add
movb
in
int
sbb
jmp
mov
lods
cmovb
mov
inc
pusha
jo
iret
jmp
jne
test
gs
push
into
sbb
push
mov
inc
cmc
sub
dec
cltd
lock
jle
pop
leave
outsb
out
inc
adc
sub
fistpll
jle
daa
or
std
inc
mov
or
fmul
push
out
jle
fstpt
arpl
ds
faddl
shlb
cld
outsl
inc
clc
inc
pop
push
aad
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
jl
cmpsl
cmp
mov
mov
enter
in
jmp
xchg
out
adc
add
dec
push
push
out
inc
lahf
dec
push
aas
xchg
mov
leave
xlat
mov
cmp
aad
loop
adc
imul
or
das
movsl
aas
xchg
int3
adcl
jle
pusha
dec
hlt
sarl
mov
js
ud2
mov
mov
mov
xor
xchg
xor
jno
test
inc
mov
int3
lods
xchg
aad
mov
or
ljmp
sub
mov
popa
lahf
sbb
xor
pop
movswl
mov
popf
sbb
xchg
fsubs
stc
xchg
add
jae
jo
inc
ret
cli
jb
lea
push
or
xor
or
enter
pop
sub
jmp
lea
push
int
add
lock
mov
push
push
mov
mov
in
push
test
repnz
into
pushf
hlt
push
std
addl
xor
les
fs
pop
pop
movsb
test
xor
arpl
aas
mov
mov
adcl
sbb
je
mov
mov
loopne
cmp
ret
ds
mov
jl
mov
mov
push
in
arpl
sbb
js
in
je
shl
cmp
call
mov
xor
sub
adc
popf
mov
fistl
sti
sbb
ret
cwtl
imul
bound
jmp
add
movsb
fisubrl
jecxz
cmpsb
div
sbb
ljmp
jmp
mov
pop
in
or
rcrb
dec
hlt
add
nop
fisubl
or
hlt
xchg
sbb
xor
rcrl
push
cmovge
xchg
aas
shrb
cmpb
sbb
push
add
scas
jp
sbb
and
or
fisttpll
mov
insb
roll
jbe
pop
lea
aas
mov
push
jns
lock
inc
mov
push
push
xor
leave
aaa
adc
inc
lahf
and
clc
mov
daa
push
lret
addr16
inc
ss
xchg
push
sbb
iret
lock
pop
cmp
call
sbb
dec
inc
fldenv
aaa
dec
push
xchg
ss
insl
out
int3
sub
sub
cmp
inc
inc
fldcw
rol
cld
mov
inc
pusha
jge
cmp
cmp
int3
jae
arpl
sub
arpl
lods
rcrl
jb
mov
outsl
sbb
out
lods
jecxz
xorb
cmp
bound
xorl
int
sub
movsb
int
cmp
or
fdivrl
loopne
adc
movsb
fs
je
xor
stc
sbb
fwait
pop
iret
pop
lods
push
xor
or
dec
aad
inc
mov
clc
cmpsl
scas
dec
xchg
mov
lcall
sub
inc
jb
mov
or
jg
or
pushf
inc
xchg
outsb
pushf
pop
cmp
lods
jmp
sub
ja
mov
inc
scas
jle,pn
adc
push
aad
aam
xorb
enter
fiadds
loop
lea
dec
lret
lret
ljmp
rorb
ret
sub
adc
outsl
sbb
scas
rcrl
lret
jle
bound
jmp
stos
sbb
repz
mov
out
jnp
xor
mov
mov
imul
insb
iret
xor
mov
or
cmp
shlb
pusha
and
inc
mov
push
jns
mov
inc
xor
lahf
test
xchg
imul
lea
ja
mov
push
test
lods
sub
push
adc
dec
popf
mov
out
in
xchg
dec
cmpps
loop
push
push
dec
repnz
xlat
or
sub
adc
inc
sbb
notl
push
sub
lods
mov
jecxz
mov
jbe
jecxz
and
jmp
mov
push
ret
hlt
and
mov
imul
das
cmp
xor
or
jmp
xchg
scas
rorb
arpl
lret
dec
jne
sarl
adc
ja
mov
pop
mov
mov
sub
and
push
lahf
xor
mov
cmp
lret
loopne
ja
add
pop
nop
mov
fbld
mov
cmpl
jno
and
cmp
ret
push
jo
test
jmp
xor
frstor
test
in
xor
push
cwtl
adc
jnp
xor
call
dec
mov
cs
stos
popf
daa
sbb
pop
add
push
cli
jl
in
hlt
nop
test
xchg
jae
sub
loop
fmul
lcall
push
mov
cmp
out
popf
mov
sub
pop
pop
jl
jp
pop
outsl
sub
and
inc
xchg
push
sub
push
xchg
xor
add
push
xchg
imulb
xorb
mov
adc
jmp
xchg
or
adc
cmpsb
xor
adc
scas
in
xchg
or
push
xchg
fs
push
and
mov
aad
stos
out
jns
in
jp
mov
arpl
cmpsb
dec
push
pop
ret
mov
in
xchg
lods
daa
rorl
je
mov
lea
gs
sub
cmp
bound
fistl
fnsave
sahf
xor
xor
div
jl
sbb
add
inc
jge
sub
dec
mov
jae
and
push
add
xchg
add
and
je
ret
xor
mov
jecxz
xchg
cmp
xchg
inc
je
fwait
cmp
pop
test
cwtl
push
syscall
mov
es
jecxz
out
hlt
loope
cmc
popa
push
add
lret
test
push
insl
ja
pop
test
adc
outsb
not
pushf
xor
pop
mov
ja
push
in
cmp
test
or
push
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
xorw
enter
or
bswap
adcl
lret
pusha
add
lods
sub
sub
cmp
loopne
add
inc
mov
mov
cmp
jge
push
int
call
sub
jmp
and
xchg
cld
das
sub
mov
sbb
mov
cmp
in
enter
jb
add
mov
and
mov
into
push
in
jns
sbb
stos
sbb
ror
lods
not
push
mov
jbe
mov
mov
movsl
stos
or
ds
xor
mov
push
daa
hlt
push
repnz
pop
mov
and
inc
and
lock
mov
push
push
fldl
mov
clc
lods
icebp
outsl
ret
xchg
prefetcht0
lret
ss
lods
loope
out
ficompl
and
ror
and
je
cmp
adc
mov
push
or
pop
test
xchg
cmp
adc
fldt
dec
bound
out
bnd
pop
dec
imull
dec
sti
js
xor
std
mov
dec
lods
and
fidivs
out
or
stc
in
ljmp
jge
xor
xchg
fsubs
mov
pop
cmpsl
sbb
das
xchg
dec
jae
and
push
inc
enter
popf
jo
ljmp
bound
mov
push
dec
cmp
pushf
pop
pushf
dec
mov
aaa
xor
xor
inc
mov
lods
lds
mov
and
in
out
sti
into
inc
and
and
roll
pop
mov
cld
dec
in
bound
insl
pop
xchg
push
jns
mov
or
jle
repz
int
jbe
gs
pop
sbb
pop
cltd
aaa
jbe
movsb
pop
cmp
mov
gs
push
lods
cmp
mov
adc
pop
cltd
adc
aaa
or
mov
mov
std
mov
cs
insl
mov
bnd
xchg
mov
in
addr16
push
mov
push
and
push
stc
shll
cmp
push
out
das
mov
sub
mov
imul
or
stos
enter
fsubs
xlat
or
jmp
ljmp
sti
push
add
inc
xchg
into
in
mov
pop
ljmp
inc
ljmp
sbb
psubusw
adc
push
push
loop
add
arpl
fwait
push
dec
lcall
xor
dec
mov
ja
iret
lea
push
or
ljmp
and
jno
ljmp
sub
mov
and
ss
dec
cmp
cli
mov
jecxz
push
pop
push
popa
icebp
jl
cmp
mov
ss
cwtl
mov
cmpsb
sbb
push
enter
push
or
mov
mov
push
push
xor
lods
cmp
mov
aam
data16
jns
aas
pop
jl
jno
ret
dec
mov
imul
cmp
mov
pop
nop
test
cmp
add
rorl
mov
nop
adc
sub
in
roll
jb
push
mov
or
jle
xor
mov
cmpsl
adc
pop
fadds
std
cmp
push
out
inc
mov
mov
ljmp
mov
lret
cmp
push
repnz
xchg
jbe
push
repnz
imul
pop
stc
movsb
packsswb
lcall
mov
test
repnz
popf
jo
sbb
adc
icebp
or
rcr
loopne
dec
inc
rorl
pop
and
sahf
sbb
jno
jmp
ret
orb
xor
mov
loope
xchg
xchg
repnz
xchg
jnp
add
or
add
fists
jno
adc
ljmp
sarl
aad
jg
pop
pop
xor
data16
xchg
mov
cmp
cmp
xchg
xchg
xor
xlat
mov
cmc
lret
and
fildl
stos
mov
mov
jmp
scas
das
std
int
insl
test
jbe
mov
enter
and
test
xor
xor
jo
and
cmc
adc
lret
cltd
fisttpll
jecxz
cmpsl
test
xchg
cmpsl
adc
out
pushl
hlt
mov
cmpsl
test
jmp
mov
scas
push
jne
pop
mov
pop
sbb
imul
jne
mov
lds
mov
and
ja
adc
mov
sarb
ss
enter
adc
sahf
mov
sub
in
loopne
ficoms
cmp
cmpsl
js
mov
push
jge
jle
lods
imul
rcll
adc
scas
mov
xor
mov
push
mov
scas
es
add
enter
xchg
rcll
push
mov
xor
scas
out
mov
and
and
push
and
imull
shrl
popa
sarl
ljmp
shl
inc
xchg
push
xor
sbb
ljmp
mov
xchg
faddl
adc
adc
dec
add
sti
test
je
shll
sub
inc
ja
rolb
addr16
mov
shll
in
test
xchg
jmp
xchg
inc
mov
xor
add
out
imul
into
push
jl
add
sbb
jnp
lret
pop
lds
call
ljmp
mov
cltd
sub
cld
arpl
movsl
mov
mov
pop
inc
cmp
stos
push
inc
popf
data16
lret
sti
sub
and
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
inc
nop
loop
fisttps
invd
add
maskmovq
sub
push
clc
mov
jl
les
xchg
movsb
add
sarl
cmp
ret
fwait
jmp
test
ljmp
js
iret
movsl
faddl
shll
adc
dec
jle
cmp
jne
out
sar
xchg
mov
and
shrb
ds
xor
ja
aad
outsl
loope
aam
sub
js
cmp
mov
mov
aas
aas
xchg
negl
mov
jg
push
mov
cmp
sub
out
fisubl
add
push
je
jle
shlb
jb
jg
fistps
ret
fidivl
or
enter
shlb
pop
mov
fs
mov
jb
xor
xor
jbe
pop
mov
ja
ret
push
or
jbe
sbb
pusha
sub
mov
orb
fstl
sub
imul
inc
and
sub
cmp
add
mov
call
in
add
int
orl
movsl
test
mov
push
mov
push
dec
jnp
adc
mov
icebp
and
fldt
mov
test
movntq
mov
push
sahf
dec
repnz
sbb
dec
sbb
dec
xor
xlat
jmp
sbb
push
xorl
pop
pop
in
lods
mov
das
inc
rcll
adc
jmp
mov
out
cmc
inc
lea
push
mov
lock
sahf
xor
sub
or
xchg
jle
pop
dec
repnz
sub
sbb
and
lods
mov
adc
xor
sahf
dec
imul
sbb
push
sbbl
xor
push
shrb
and
iret
into
aaa
outsl
mov
scas
pop
mov
movsl
dec
inc
mov
xlat
push
push
push
xchg
dec
popa
sub
ja
cli
cmc
mov
xor
sub
ljmp
stos
cmpl
movsl
dec
jecxz
add
inc
xchg
enter
imul
sub
stc
movsb
bound
push
sti
movsl
cmp
adc
pop
lahf
xor
lea
fs
and
push
mov
fucom
test
lds
sub
cmp
add
aaa
fmul
testb
shlb
mov
pushf
mov
jo
aam
pop
je
mov
lret
add
fwait
sub
popa
out
xchg
pop
scas
cli
aad
or
push
sub
nop
ret
jae
push
popa
jle
out
jle
dec
xlat
sub
mov
lods
je
nop
popa
or
xchg
lock
push
sub
mov
jbe
pop
mov
cmpsl
jns
cltd
pushf
cmp
bound
ljmp
cmp
sahf
insl
mov
inc
stos
daa
push
sub
out
fwait
out
mov
aad
jmp
xor
cpuid
adc
and
inc
cmp
imul
lret
daa
push
loop
mov
mov
cmc
mov
mov
aad
pop
pop
mov
or
jmp
pop
cmp
ss
or
rorb
push
xor
lret
or
in
icebp
nop
push
or
adc
sub
cld
ljmp
insl
jbe
sbb
int
pop
cmp
mov
notb
inc
dec
repz
xchg
pop
jmp
hlt
sarl
movsb
ss
cli
lds
mov
fdivrs
es
leave
mov
dec
les
popa
pop
xor
ds
pop
mov
xchg
jge
loope
jno
pop
xchg
ljmp
nop
push
xor
sub
push
insw
add
mov
aam
loope
mov
in
jp
and
enter
fildll
ja
xlat
insl
xchg
das
inc
mov
daa
xor
inc
pop
clc
pop
cld
push
push
dec
addr16
fbld
jge
adc
in
xlat
sar
sahf
push
es
and
movups
inc
pop
sbbb
sbb
loopew
mov
stos
push
iret
pop
inc
xor
xor
fsts
xchg
clc
aad
movsb
arpl
cmp
cli
sub
push
xor
out
xchg
test
aam
adc
xchg
outsl
pop
fidivrl
mov
push
jmp
mov
cs
testl
std
into
fdivl
jbe
xchg
repz
mov
test
or
loopne
pop
jb
stos
lea
mov
sahf
mov
push
jbe
push
ret
lds
push
cmp
andb
shlb
cld
jnp
cs
add
dec
jbe
movsl
insl
sbbb
int3
push
icebp
mov
mov
jge
cwtl
cld
and
addb
dec
out
cmp
add
es
notl
mov
pop
cmp
sarb
scas
insl
and
ss
out
ret
ss
rorb
lret
aad
mov
cmc
faddl
aam
xchg
mov
dec
inc
loop,pt
in
push
dec
xor
add
movsb
fnstsw
insl
xor
adcb
cmp
mov
push
inc
lods
xchg
repz
cmc
cmp
push
adc
pop
xchg
jns
es
pop
data16
jae
mov
cmpsb
neg
sub
or
mov
fldt
mov
sbb
push
cmpsl
mov
or
adc
and
sub
adc
popa
cmpsb
in
mov
in
push
mov
push
cmovp
fsubrs
idiv
push
push
fnstcw
and
jg
rcll
aad
xchg
mov
enter
and
imul
fcmovnbe
xor
ja
mov
jb
shrl
mov
cmpsb
mov
repnz
push
add
lcall
or
incb
mov
xor
mov
push
dec
fwait
and
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
unpcklps
daa
sub
mov
mov
fucom
aam
adc
jne
mov
shl
mov
scas
in
jno
or
outsl
and
mov
shlb
loop
into
sub
jo
imul
test
fwait
mov
cmpsb
adc
jp
pop
pop
lods
jg
ljmp
shll
movsb
or
dec
lds
xchg
inc
sub
fwait
and
stc
out
and
cmpsb
sbb
inc
pop
dec
imul
mov
or
insl
xchg
enter
rcrl
adc
push
add
push
mov
popa
fidivrs
push
push
ja
xor
xchg
out
sar
jb
aaa
or
mov
mov
sbb
mov
pop
test
pop
incb
movswl
fs
push
pop
xor
sbb
cmc
gs
lds
dec
fdivrs
add
ds
aas
cmp
in
mov
cmp
scas
fcomps
push
cltd
lock
decb
fnstcw
rcll
xchg
add
repnz
pop
inc
mov
sbb
and
cmp
push
adc
mov
inc
jnp
mov
das
mov
and
insl
lds
lret
insl
inc
and
test
int3
ljmp
xlat
scas
jl
jp
test
push
xchg
pusha
imul
int3
cmp
iret
jo
sub
es
cmpsb
sarl
jbe
fsts
push
push
fsubrs
sub
cmp
push
mov
mov
movsb
aaa
loopne
es
and
enter
and
and
push
adc
mov
std
popf
fnstsw
dec
stos
arpl
pop
movsl
and
lret
insl
loop
inc
stc
mov
and
das
cmp
cmp
and
mov
arpl
je
shl
mov
and
fwait
stos
leave
out
cltd
pop
xor
xchg
ds
loop
pop
lcall
mov
mov
shlb
gs
jmp
dec
pop
dec
mov
arpl
iret
rcrb
mov
or
insb
enter
std
xlat
pop
aam
pop
xchg
add
xchg
push
nop
inc
sbb
inc
or
mov
fldcw
xchg
out
mov
inc
add
jp
cmp
mov
xchg
adc
jmp
add
and
adc
jg
jp
sbb
mov
cmpsl
and
je
and
loopne
cwtl
and
mov
jbe
lret
inc
in
xor
adc
sbb
fidivl
push
mov
cmp
jnp
ja
adc
adc
leave
ret
popa
outsb
fisubs
fstl
push
lret
lret
jl,pt
mov
inc
lods
adc
outsb
imul
jno
arpl
imul
aad
insb
and
cmp
gs
sub
bound
insb
loope
jecxz
mov
xlat
cld
push
nop
push
aam
fadds
jge
test
push
push
or
ja
imul
and
xor
sarb
test
pop
or
pop
pop
or
jmp
insl
lods
ret
inc
xor
mov
cwtl
lock
lahf
adc
mov
mov
mov
cmp
enter
jae
sub
adc
mov
fucomi
test
xor
jae
ljmp
out
or
lcall
fisubs
dec
das
push
jns
call
lahf
shrl
mov
jg
loopne
stos
add
lods
or
or
pop
mov
jbe
pop
data16
call
xchg
ret
pop
cs
insb
aas
fisttpll
push
xchg
mov
rolb
xchg
mov
fs
sahf
std
cs
adcb
push
add
test
cs
stc
lcall
cltd
mov
mov
ret
jge
outsl
je
push
scas
sbb
aaa
jmp
pop
popa
out
arpl
xchg
mov
into
daa
hlt
loope
jge
dec
and
lret
out
sti
test
lods
mov
mov
sbb
sub
mov
dec
and
out
lret
cwtl
push
cmpsl
gs
or
std
loop
arpl
jo
js
push
dec
in
xorb
adc
add
subl
jno
pop
outsl
jns
fs
cltd
mov
sahf
xchg
lds
cli
push
stos
lcall
stos
fldl
inc
sub
cmp
out
sub
add
mov
hlt
repz
xchg
test
iret
call
add
pop
or
out
mov
arpl
push
addr16
int3
aad
jb
xchg
rol
push
mov
stos
inc
sbb
stc
push
test
shlb
cmpsb
cli
sbb
mov
repz
mov
mov
iret
push
xor
add
andl
fsubr
mov
minps
daa
adc
into
popf
dec
in
imul
mov
mov
mov
sbb
inc
repnz
mov
cs
mov
out
cwtl
mov
xchg
rcrl
xchg
jmp
popa
enter
mov
sub
inc
fstpl
push
push
adc
inc
xlat
mov
lcall
cmp
fsubrp
jge
xor
fistpl
mov
push
divl
test
adc
push
mov
jp
pop
dec
cwtl
mov
jo
fcmovu
xlat
xor
inc
pop
sahf
pop
sti
mov
gs
icebp
mulb
addr16
out
xchg
out
sub
dec
ljmp
dec
jmp
outsb
jnp
pop
mov
push
mov
icebp
adc
adc
cmp
cmc
adc
ja
mov
addr16
je
mov
adc
sbb
aam
push
xor
add
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
insl
adc
xchg
inc
invd
add
xchg
rorb
or
jo
mov
dec
or
lret
push
inc
sarb
repz
mov
das
dec
cld
xor
jp
call
ud0
cmp
dec
sbb
fbstp
outsl
inc
push
and
in
fstpt
push
fisubrl
les
add
dec
fdivrl
rolb
lds
cmc
push
and
es
pop
adc
xor
dec
pop
out
or
mov
lcall
xor
and
lret
repz
shl
icebp
ss
and
call
push
pop
fwait
mov
dec
int
js
aam
lods
daa
sbb
fidivl
test
dec
sbb
sahf
aad
and
mov
dec
jg
cmpsb
loop
imul
fcompl
lea
jl
imul
shll
xchg
sbb
pop
or
sub
ss
sub
inc
jbe
lock
xchg
std
xor
les
hlt
lock
test
inc
mov
xchg
inc
out
jge
inc
jo
push
stos
mov
xor
adc
adc
push
mov
sbb
mov
testb
jne
cmp
dec
push
cmp
ja
ficompl
jns
test
dec
stos
cmp
loopne
or
xlat
sub
lock
ljmp
fs
mov
push
jmp
mov
mov
sbb
sbb
popw
xchg
or
retw
inc
xchg
ret
ficomps
call
mov
add
aaa
inc
in
push
arpl
mov
imul
mov
mov
aam
sti
sbbb
stc
shrb
popa
or
in
pop
int
xchg
hlt
dec
mov
subl
out
ficoms
push
sbb
loop
imul
test
aas
adc
jbe
inc
fiadds
mov
sub
push
out
pop
sahf
jb
ds
xchg
pop
lcall
push
test
je
ret
lcall
jecxz
clc
repz
pop
insb
inc
roll
fildl
xor
mov
loop
jbe
mov
sbb
scas
je
xor
pop
push
jnp
es
mov
mov
pop
pop
mulb
jo
aas
push
ja
mov
outsl
out
mov
inc
fiadds
mov
data16
dec
sub
mov
xor
movl
popf
imul
daa
dec
cmp
ficoml
mov
dec
imul
fwait
lret
test
insl
sub
inc
mov
sub
ret
incl
jge
test
clc
inc
mov
adc
ljmp
sbb
xor
pop
out
or
push
lcall
mov
ljmp
icebp
or
xor
xlat
mov
sti
add
dec
jno
xchg
daa
push
lret
clc
mov
pop
ret
lahf
daa
test
mov
mov
add
pop
cmp
jg
pusha
call
outsb
outsb
and
adc
movsl
mov
pusha
cltd
andb
loopne
and
dec
out
iret
lds
pop
pop
in
push
adc
test
cmp
xchg
push
andl
jbe
pop
int3
sub
pop
mov
scas
cmpsb
push
xchg
scas
inc
jbe
popf
das
fwait
flds
add
xor
mov
add
stos
xor
cmpsl
push
dec
and
inc
pop
sbbb
adc
pop
add
pop
add
popl
inc
sahf
or
sub
mov
aad
popf
hlt
shrb
arpl
lods
jb
test
inc
int
arpl
xchg
mov
fidivl
movl
sti
and
in
popf
vcmpsd
xchg
insb
lds
and
negb
sub
jo
popa
out
mov
scas
cmp
into
pushf
xchg
int3
sub
xchg
test
inc
roll
mov
push
pop
out
or
ficomps
inc
inc
sbbl
fisubrs
repz
xchg
dec
mov
rcrl
ficoms
push
xchg
jl
ds
leave
sbbl
sbb
sub
sti
jno
sub
pop
mov
ret
repnz
mov
stos
dec
out
stc
mov
in
mov
xchg
sarb
add
fidivrl
ucomiss
add
lock
sub
cwtl
pop
in
cmpsl
negl
push
imul
into
lahf
push
or
push
sbb
popa
gs
daa
mov
sub
xchg
mov
inc
fsubrs
mov
xchg
pop
sbb
push
and
iret
into
pushf
rolb
pusha
pop
test
ret
pop
xchg
mov
pcmpgtb
adc
imul
jae
stc
out
or
sub
inc
testl
cs
jle
mov
arpl
cmp
sub
or
cmp
ja
mov
mov
fwait
adc
sbb
stos
ja
pop
dec
mov
add
clc
lcall
flds
pop
pop
pop
mov
and
leave
lds
inc
adc
rorb
outsb
shll
sub
xor
xchg
mov
addr16
repz
cmp
dec
jle
jo
pop
inc
xchg
jle
movsl
jmp
adc
daa
sbb
ds
mov
or
cmp
icebp
xchg
hlt
cmp
test
sub
mov
mov
and
shl
push
xchg
stc
push
jnp
cmp
mov
adc
aaa
fidivl
cmp
jae
sti
inc
jg
cmc
jecxz
stc
sbb
inc
imul
pop
popf
dec
enter
int
pushf
stos
xchg
mov
test
xor
arpl
arpl
aaa
loope
idivb
adc
dec
notl
dec
lahf
shll
test
inc
call
mov
ret
sbb
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
cs
out
mov
punpckldq
mov
mov
push
mov
clc
sub
or
mov
adc
loop
ds
dec
je
and
cmp
sbb
shr
cli
xchg
adc
cmpsl
mov
dec
cs
fnclex
data16
cli
push
adc
hlt
sub
jmp
add
mov
in
cmp
ret
das
and
cs
fld
push
push
jb
das
fwait
and
jp
inc
jnp
cli
xor
out
int
push
fisttpll
mov
imul
adc
es
adc
dec
sarl
test
ret
inc
inc
mov
inc
lock
adc
and
add
or
jae
adc
es
xor
mov
mov
xor
lret
lds
lahf
pop
das
sub
mov
jmp
cld
xchg
lock
scas
jl
mov
das
mov
and
rorb
pusha
test
dec
icebp
nop
and
mov
push
je
std
out
hlt
jle
arpl
daa
add
iret
test
xor
inc
mov
jecxz
sub
xor
and
cmpsl
bound
fs
add
mov
andl
jnp
das
test
or
adc
mov
add
out
dec
test
cwtl
or
jb
les
data16
jg
pushl
jecxz
je
xchg
pop
scas
arpl
adc
fldt
add
jecxz
xchg
and
dec
ss
or
int3
add
ss
cmpsl
or
mov
inc
push
aaa
movsl
adc
cld
sbb
fdivs
out
dec
push
insb
orl
jmp
xor
inc
xchg
jbe
push
xchg
fstpl
pop
xchg
pop
dec
lea
mov
ds
pop
loopne
cmc
mov
jmp
outsb
jnp
dec
jne
sahf
and
and
stos
add
scas
dec
and
xor
mov
out
sub
inc
mov
adc
je
jge
aam
push
push
popa
pop
sub
hlt
push
les
pusha
ja
stc
test
or
bound
mov
data16
mov
push
cmpsl
loope
or
pop
in
aaa
fisubl
jbe
fbstp
fs
test
push
dec
repz
mov
mov
sub
or
fisubrl
enter
inc
stc
push
or
js
jp
loop
pop
insb
es
xor
aas
div
addb
jb
popf
sarb
mov
cmp
cmp
faddl
out
dec
sub
mov
dec
daa
stos
rcrb
push
sbb
repnz
stos
jge
ret
mov
jle
imul
adc
adc
andb
mov
pop
and
ret
pop
inc
pop
adc
lcall
adc
mov
mov
inc
lret
sub
mov
out
dec
add
out
fnstenv
mov
jae
dec
pop
loop
cltd
imul
ror
sbb
push
test
sub
dec
cmpsb
imul
pushf
push
and
in
sbb
jge
lea
movsl
mov
push
fsubrp
gs
mov
fwait
pop
pop
cmp
sbb
imul
mov
mov
cmc
sbb
dec
inc
bound
mov
cltd
mov
outsb
pop
scas
dec
shrb
jge
mov
dec
jno
mov
int3
jne
sub
lahf
test
or
xchg
mov
jp
imul
loopne
lock
pop
fbld
push
and
scas
fdivl
or
aad
mov
jno
enter
imul
sbb
adc
sbb
xlat
push
int
sub
sbbb
mov
push
xlat
mov
cmc
lret
dec
add
cmpsl
sbb
lods
pop
or
in
dec
push
dec
jns
subl
push
leave
pop
push
inc
jne
mov
cmp
jnp
dec
add
mov
gs
daa
push
inc
rcrl
test
in
sbbb
icebp
adc
mov
loope
pop
inc
ds
daa
fmulp
inc
jmp
add
jae
pusha
mov
repnz
icebp
inc
add
sub
test
aad
insb
mov
adc
ss
lea
cltd
out
inc
jnp
push
test
popf
sbb
jo
daa
add
push
ds
pop
mov
daa
xchg
push
add
lret
push
icebp
loope
and
ja
dec
pop
jmp
mov
lahf
jbe
int3
add
inc
repz
cmp
xchg
jae
nop
add
in
or
jmp
dec
popa
push
cltd
adc
xor
cmp
lahf
insl
inc
cmp
jle
popf
and
lcall
ret
shr
call
aaa
push
sub
fldt
xchg
add
in
in
cwtl
xor
xor
add
xchg
data16
shll
and
mov
dec
rclb
sub
and
mov
imul
cltd
cmpsb
filds
rcll
shr
lods
mov
pop
or
nop
inc
addb
rcrb
sbb
std
add
ret
jnp
dec
andl
push
mov
jae
mov
sub
mov
mov
les
adc
and
inc
imul
aad
xchg
aaa
and
lret
jne
cmc
ret
xor
cmp
movsl
nop
push
lahf
mov
clc
mov
lret
icebp
aad
jb
ss
push
jl
js
jnp
dec
and
mov
ffree
or
ja
call
inc
jl
lret
jecxz
sub
push
adc
out
stc
pop
xchg
iret
loope
sbb
fsubrs
jns
sbb
cltd
mov
pop
add
imul
js
int
stos
or
add
ljmp
lods
adc
cs
ja
cmpsl
mov
rol
in
or
lods
sbb
aaa
test
push
test
xor
inc
lret
mov
push
xchg
loopne
fwait
movsb
nop
push
adc
cmp
rclb
insb
mov
adc
lcall
mov
loop
jl
fidivl
adc
mov
dec
pop
push
jge
and
mov
push
mov
sub
lock
inc
mov
addr16
sbb
out
insl
add
sub
loop
sub
or
inc
dec
push
add
push
jno
test
test
sbb
sti
mov
das
fsubs
jne
sbb
mov
xchg
sub
xor
xchg
push
je
fcoml
mov
xchg
xchg
bound
lods
mov
test
xor
repnz
fcomps
or
fdivrs
scas
adc
adc
popf
cmpsb
lods
aas
xor
xchg
xor
jo
jae
icebp
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
les
clc
sbb
mov
psrld
cmp
mov
leave
xlat
stos
or
push
xchg
mov
test
push
lods
test
stos
shrb
cli
cmp
jecxz
popa
mov
adc
loope
daa
cmc
xor
or
pop
mov
and
call
imul
pop
shr
aam
jp
and
xor
adc
lods
push
sub
xor
ds
jno
dec
cmp
add
xor
cmp
int
cld
js
mov
test
mov
rorl
pop
jae
ret
cmp
sub
dec
dec
repz
sarl
or
mov
movsb
add
insl
je
ja
add
xchg
sub
std
mov
mov
and
push
inc
add
int
xor
or
xor
mov
repz
cmpsb
push
addb
daa
shrb
arpl
fildl
adc
sub
loop
pop
rcr
call
in
xor
mov
shll
dec
out
call
sbb
ret
aad
adc
sti
and
pop
push
fwait
enter
sub
adc
das
mov
mov
adc
stc
test
mov
js
sbb
xchg
shrb
fnstenv
fcoms
movsb
in
or
sar
mov
lds
sub
jecxz
mov
popa
out
adc
out
mov
mov
loopw
xchg
fs
inc
xchg
cli
cmpsl
push
push
inc
and
pop
inc
pop
lock
sub
sbb
jg
jge
cli
movsb
and
icebp
xlat
imul
test
lret
cmp
lods
dec
jg
test
add
adc
push
lods
jmp
push
sbb
imul
add
and
inc
nop
mov
test
out
cmp
ljmp
iret
mov
sbb
nop
in
dec
mov
push
gs
out
pop
arpl
adc
inc
shl
inc
xor
xchg
jae
enter
add
gs
push
dec
adc
je
and
cmp
fwait
sub
clc
jae
insb
imul
dec
in
add
std
push
push
add
cs
dec
popa
mov
stos
inc
ret
pop
clc
stc
push
push
xlat
mov
sub
inc
mov
jno
add
idivb
mov
xlat
add
in
cmc
cmp
pop
int3
xlat
call
jb
or
mov
adc
mov
mov
jp
repz
leave
adc
test
cmc
mov
cmc
hlt
cld
fadd
bswap
jle
bound
fs
mov
ljmp
fistpll
sub
pop
xor
pop
jg
int
pop
inc
pop
pop
int3
data16
enter
jg
jecxz
push
in
pop
out
mov
or
add
lahf
xchg
pushf
movsb
push
fwait
xchg
sbb
and
push
scas
fmull
les
sub
dec
mov
xor
dec
sub
jp
add
cmp
sbb
and
jnp
out
pusha
insb
sti
push
out
inc
cmc
mov
dec
lods
mull
hlt
push
daa
scas
dec
or
daa
rclb
push
std
lret
lahf
or
pop
dec
and
test
push
mov
outsb
shll
mov
ljmp
push
arpl
push
mov
addr16
or
or
mov
mov
dec
pop
xchg
sti
or
in
movsl
dec
ret
mov
imul
cmp
sub
or
jb
jmp
mov
jmp
leave
pop
pop
sbb
add
mov
int
scas
mov
xchg
into
mov
leave
jle
call
ljmp
mov
add
adc
data16
dec
jp
dec
imulb
jae
icebp
pop
or
dec
dec
inc
add
std
jb
sub
xor
adc
adc
lock
pop
int3
mov
add
xlat
mov
aam
enter
or
hlt
pop
data16
xchg
mov
push
cmp
mov
cmc
xor
pusha
lods
inc
fdivrs
mov
xor
sub
out
fwait
sub
mul
cmp
outsb
mov
and
out
sub
sub
cmc
xor
aam
mov
inc
aas
out
mov
iret
std
mov
pop
int3
push
push
sahf
add
mov
xchg
outsl
jo
sahf
out
and
orl
add
jae
cmp
cmp
inc
aam
jno
cmp
inc
popf
into
ret
jo
lock
pop
dec
icebp
pop
outsl
data16
xor
std
scas
push
sbb
inc
in
cmp
arpl
fldt
or
adc
movaps
xchg
pop
jne
add
cld
jp
mov
popf
subl
jno
dec
movsb
iret
xlat
sub
add
mov
ja
mov
int3
and
es
lods
adc
xor
imul
hlt
dec
in
sub
mov
push
sbb
push
push
lret
jbe
sub
pusha
das
jae
test
pop
or
loop
adc
into
addr16
jo
sub
pop
jmp
inc
nop
loop
mov
push
stc
jp
cmp
hlt
pop
fwait
adc
jge
mov
aaa
mov
mov
fnstcw
pop
fldt
loop
sub
mov
xor
xor
add
lahf
xchg
lods
xorb
test
cmpsl
int3
cmp
imul
mov
mov
fdivrs
xchg
lods
insl
add
fcomp
pop
call
iret
jmp
add
sub
xor
fdivl
fcoml
adc
push
xchg
cmp
subl
sbb
add
ret
insl
mov
outsb
sahf
bound
int
loope
clc
add
into
dec
dec
mov
bound
jle
mov
cmp
ret
iret
mov
jge
push
push
mov
xchg
es
push
cmp
pop
and
xlat
pop
pushf
sub
mov
cmp
mov
mov
inc
arpl
je
inc
jl
outsl
sbb
ds
ljmp
jge
shrb
and
gs
pop
xorl
jp
jmp
push
dec
rcll
hlt
lret
ljmp
xchg
pop
ret
ret
fsubs
push
xor
shrl
enter
mov
lods
dec
pop
inc
xchg
aad
pop
sub
in
pop
cmp
push
pop
xchg
loope
add
xor
sbb
cmc
mov
lahf
inc
addr16
jle
js
in
or
je
xor
lret
cld
scas
jnp
cmp
repz
inc
pop
pushf
ss
jbe
into
push
mov
mov
pop
jb
adc
ret
sti
aas
stos
out
fwait
test
pushw
mov
andb
int
dec
stc
fnstsw
or
dec
inc
fstpl
push
dec
inc
fiaddl
dec
es
sahf
and
subb
clc
cmpsl
jb
inc
push
jno
js
adc
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
stos
mov
mov
cmp
daa
loope
or
add
pusha
cli
stc
mov
mov
xchg
cwtl
jmp
pop
jno
and
stos
mov
cld
icebp
jae
sarl
loop
mov
jnp
mov
out
test
cmp
fwait
mov
ret
sbb
adc
stos
sbb
pop
mov
aaa
sbbl
sbb
xchg
cmp
pop
mov
mov
dec
loopne
popa
sahf
stc
adc
sbb
rcl
xor
adcb
adc
cmp
popa
or
push
cmpb
ffree
jp
mov
jo
fwait
int
data16
xchg
jnp
inc
lock
shlb
mov
cmp
aaa
add
cmp
xchg
hlt
inc
ret
adc
movsb
add
fisttpll
dec
frstor
pop
jge
ss
mov
cmpsl
add
lahf
movsb
cmpsb
adc
in
stos
mov
dec
fmull
xor
out
inc
insb
les
jle
adc
and
jo
ffreep
mov
sbb
mov
push
loope
mov
pop
dec
cmp
sub
test
sub
mov
stos
cld
push
aaa
add
dec
lea
fisubs
and
popf
cmp
mov
sub
push
sbb
or
sbb
insb
mov
fbstp
lcall
das
mov
fildl
adc
jle
enter
imul
lds
sbb
cwtl
sub
pop
lahf
xchg
subb
nop
cmpps
sub
aad
sbb
mov
test
popf
jbe
xor
out
push
push
inc
mov
mov
sub
sbb
inc
out
dec
inc
mov
xchg
jne
mov
bound
xchg
sub
inc
out
sub
xor
inc
jmp
ret
push
out
outsl
cmp
stos
pushf
pushf
push
stos
int3
adcb
fwait
mov
xchg
cmp
in
pop
inc
jecxz
outsl
gs
add
out
sub
cs
in
mov
es
cltd
push
in
add
mov
test
adc
std
push
mov
out
es
test
cmp
outsb
dec
lret
ljmp
xchg
jle
add
jno
popl
mov
dec
xor
lock
or
stos
mov
push
movsl
sbb
cmpsl
lea
mov
data16
xchg
xchg
mov
pop
leave
fsubr
push
ret
xchg
lods
lock
aaa
out
mov
cmp
and
xchg
lock
mov
lock
push
outsb
lcall
ja
mov
icebp
ds
inc
push
xchg
push
ss
loope
out
mov
loop
jb
sti
insb
repnz
and
or
jne
jnp
test
and
loopne
out
jmp
cmp
out
mov
dec
gs
lods
xor
sub
add
adc
movsb
mov
test
mov
inc
mov
mov
test
xchg
stos
stc
cmpsl
adc
outsb
and
div
add
mov
lea
xlat
mov
push
je
jne
xchg
jbe
popf
push
lcall
shr
xchg
ss
arpl
adc
xor
hlt
cmpsb
mov
jo
mov
adc
inc
mov
lods
sahf
scas
cmpsb
lahf
inc
aam
out
iret
xor
stc
dec
sahf
int
xchg
jl
fs
jb
sbb
xchg
jge
sarb
lret
xor
cs
sbb
and
or
loopne
fldt
mov
cwtl
jb
aaa
sbb
jnp
test
jmp
stos
test
icebp
scas
jno
aas
pop
push
test
jnp
cmp
xor
pushf
sbb
lahf
xlat
in
push
notb
shlb
es
shl
mov
dec
dec
loopne
jp
jl
xor
rcrb
aam
nop
sub
cmp
mov
mov
repnz
sbb
cmpsl
xor
ja
mov
xor
xor
dec
jle
or
mov
push
pop
sub
inc
pop
pop
fidivs
and
or
popf
movsl
jne
repz
test
ljmp
pop
hlt
outsl
xor
imull
orb
and
cmp
fidivs
add
js
jmp
clc
xor
out
pop
jns
mov
dec
movsl
sub
push
ret
lcall
aaa
leave
rorl
out
fmuls
push
cmp
scas
add
loop
mov
je
pop
mov
xchg
jmp
in
push
dec
cmpl
ja
push
pop
fdivl
mov
xchg
add
adc
jl
in
mov
addr16
test
inc
xchg
fldt
inc
or
sbb
pop
xor
xchg
adc
sarb
mov
imul
xchg
imul
into
lcall
stos
cmp
jge
dec
daa
push
mov
adc
mov
sub
pusha
mov
loop
cwtl
shlb
out
xchg
hlt
and
mov
add
fsubp
nop
dec
jl
ss
mov
dec
pop
jae
in
andl
xchg
push
adc
jmp
inc
scas
sbb
pop
sub
movsl
fstp
cmp
mov
lods
loope
std
pop
iret
in
pop
enter
mov
aaa
inc
cmp
ret
mov
push
repnz
into
xchg
scas
nop
rol
xor
xchg
and
xor
mov
leave
mov
mov
gs
aaa
inc
xor
mov
clc
sub
fwait
je
cs
sbb
loope
jge
adc
hlt
lock
stos
jns
sub
add
outsb
fs
scas
dec
or
pop
mov
pop
jmp
dec
dec
scas
mov
cli
adc
push
inc
mov
mov
das
cmpsl
or
hlt
jns
jl
cmp
xor
push
repz
gs
gs
push
mov
sub
hlt
xor
loopne
inc
mov
push
or
mov
outsl
xor
fsubr
icebp
ret
dec
scas
cltd
sub
sub
sbb
out
jge
jno
dec
shrl
mov
adc
xchg
mov
xor
int
fisubrl
aam
sub
insb
jbe
pop
ja
insb
movsb
or
movsb
mov
mov
jne
jle
or
lret
sbb
adc
pop
inc
mov
push
shr
mov
push
in
ret
inc
pop
mov
xor
and
orl
jecxz
mov
scas
inc
dec
pop
xchg
in
cmp
jns
mov
xchg
cmp
shrl
je
icebp
and
adc
push
add
pop
cli
mov
je
test
leave
jne
jmp
cmp
mov
adc
jmp
into
add
or
adc
adc
and
or
xchg
nop
mov
pop
pop
pop
add
scas
fmull
outsl
pop
ljmp
jg
std
aam
lar
mov
in
cmp
dec
lahf
rolb
fwait
popa
jb
ljmp
hlt
add
arpl
inc
out
xor
mov
xor
pop
pop
xlat
cld
push
xor
or
mov
ficomps
sbb
icebp
jo
mov
jg
enter
mov
std
repz
adc
jne
scas
dec
jecxz
out
faddl
pop
dec
sbb
dec
rcll
inc
aam
scas
jg
fwait
mulb
jnp
pop
adcl
addr16
hlt
push
cmc
and
aad
push
jecxz
in
pop
out
pop
xchg
call
push
xchg
scas
cmpsb
push
loopne
xchg
sub
pop
rcrb
adc
pushf
pushf
sub
or
ret
mov
adc
enter
cmp
push
andb
test
jl
rcr
pop
clc
aam
inc
xorps
add
cmp
xchg
sbb
adc
sub
sub
fptan
dec
fldcw
in
insl
mov
xor
lret
addr16
ret
sub
inc
mov
jb
mov
shlb
mov
xor
xchg
push
push
mov
mov
movsl
aad
mov
in
inc
cld
pop
pop
jae
xor
leave
cmp
cmp
inc
jbe
call
sub
mov
jge
ret
xor
cmp
stos
aas
into
push
jl
xor
dec
cwtl
cmpsl
mov
sub
fwait
into
cmpsb
mov
mov
cmp
mov
dec
and
test
mov
mov
or
cmp
sbb
lcall
jmp
imul
pusha
xchg
push
sub
call
hlt
xor
movsl
fmulp
jns
adc
jo
sbb
mov
aam
aad
test
and
xor
andl
mov
xchg
push
mov
scas
insb
cmp
insl
rolb
cmpsl
lret
adc
add
mov
lahf
xchg
in
dec
jmp
outsb
push
xchg
mov
rorb
cwtl
mov
loop
mov
mov
xlat
xlat
mov
test
sahf
inc
inc
jb
xchg
xchg
adc
fwait
sahf
cmc
sbb
or
xor
add
mov
fidivs
std
pushf
call
scas
shll
or
xchg
jmp
xor
outsb
mov
ja
lods
movsb
cwtl
fdivrs
das
fadds
xor
hlt
les
loope
sub
pusha
in
jmp
fwait
jae
das
pop
out
adc
hlt
jg
xorl
imul
test
clc
add
es
dec
into
sti
pop
pop
incb
fs
repnz
movsl
iret
push
jp
lock
pop
pop
ljmp
push
icebp
cmp
xchg
jbe
lea
js
inc
sub
or
push
xlat
aas
test
inc
shrl
hlt
cmpsb
push
mov
in
rorb
cmc
sbbl
mov
ljmp
jle
scas
scas
test
sbb
lret
lds
inc
jg
cmpsl
neg
dec
repz
int3
and
cwtl
xchg
fwait
xchg
mov
cmp
jp
jae
jecxz
and
lahf
sbb
xor
fimuls
dec
jnp
xor
jmp
adc
inc
xchg
push
repz
andb
mov
mov
xorb
sbb
sub
loopne
pop
loope
sbb
add
xchg
cmp
iret
push
inc
mov
cmp
push
fisubs
in
pushf
insl
pop
test
push
push
mov
adc
into
jbe
push
push
andb
and
mov
xor
inc
stos
cmc
or
and
dec
jecxz
mov
or
mov
lds
ret
fwait
iret
shll
call
sub
out
jnp
pop
test
inc
inc
sub
rorb
cmc
sbb
fwait
call
xchg
fildll
iret
inc
inc
push
das
test
aam
popa
xor
dec
mov
cmpsl
mull
lret
inc
push
mov
fstpl
mov
or
mull
scas
mov
dec
xchg
add
xchg
out
cs
jge
fmul
insl
push
loope
or
xor
xchg
movsb
dec
xor
out
mov
and
cmp
xchg
cmpsb
mov
push
es
sbb
js
or
xor
push
push
out
dec
jb
mov
adcb
add
inc
add
pop
mov
bound
xchg
cwtl
rolb
mov
call
fcmovbe
push
lret
adc
cmp
xor
ds
std
mov
ret
ret
pop
insb
das
out
aaa
cli
jge
add
sub
es
mov
imul
shlb
adcl
adc
out
adc
filds
data16
mov
lret
dec
jne
mov
insb
mov
cmp
mov
cmp
fidivs
fstl
stos
sub
mov
es
pop
mov
mov
cwtl
shrl
mov
sub
mov
mov
inc
lea
jb
sbb
mov
popl
xchg
or
sub
mov
pop
andl
rol
insb
std
movb
iret
inc
sub
test
adc
ficoml
dec
pushf
lods
mov
push
and
xor
cmp
or
mov
mov
xor
xor
and
outsb
cmp
cmc
and
lock
jmp
movsb
mov
fadd
jl
sbb
lock
push
mov
lods
jge
scas
cli
daa
add
vpcomq
mov
out
and
arpl
jecxz
call
pop
gs
xchg
pop
xchg
mov
mov
push
jae
push
mov
push
mov
sub
div
cwtl
sub
xor
scas
dec
loope
adc
pop
and
push
popf
jmp
bound
or
cmp
push
mov
pop
cmpsl
jg
xlat
mov
lds
add
mov
add
js
out
incb
icebp
cltd
cmp
pop
mov
push
sbb
pmaddwd
cmovo
lods
rorb
or
repz
repz
mov
dec
ss
insb
mov
sbb
jecxz
scas
mov
cmp
add
mov
cmp
or
inc
mov
sub
sahf
or
cltd
in
jbe
dec
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
inc
push
push
daa
in
adc
and
dec
lods
jb
mov
fcoms
ljmp
scas
inc
xchg
or
imul
xchg
lcall
pop
inc
pop
daa
jo
cwtl
and
int3
or
nop
push
andb
jmp
sbb
dec
jo
xchg
push
sbb
call
and
loopne
and
roll
lret
mov
push
sub
scas
ret
gs
xchg
inc
sbbb
push
pop
icebp
add
add
adc
in
push
jmp
inc
pop
pop
ljmp
cmp
pop
and
sub
push
mov
sbb
loopne
mov
pusha
gs
es
lcall
pop
hlt
loope
pop
sbb
jno
loop
dec
cmp
pop
test
out
nop
pop
int
pop
mov
in
dec
inc
jne
sub
insb
mov
jno
iret
cmp
stos
jecxz
mov
fmuls
inc
daa
pop
cmp
xchg
out
sbb
rcll
adc
test
xchg
int
test
and
sub
jl
dec
pop
and
and
xor
or
xchg
loop
mov
jg
push
je
insl
loopne
and
test
ret
iret
icebp
adc
movsl
dec
mov
mov
cmpsb
sbb
test
sarb
add
mov
sub
inc
movsb
cmp
xchg
cmp
mov
inc
imul
shrb
bound
xchg
in
out
sub
and
out
xchg
std
jg
or
xchg
push
mov
cltd
pushf
lock
inc
jmp
push
xor
ljmp
fcmove
test
cli
push
aam
repz
pop
add
test
adc
sbb
mov
cli
mov
sbb
int3
je
dec
stc
mov
je
std
or
sti
dec
xchg
add
insl
push
xor
sbb
xchg
sbb
mov
mov
out
dec
rolb
in
insl
xor
stos
fistl
jg
and
mov
icebp
add
fcmovnb
imull
inc
ficoml
scas
pop
jl
mov
xchg
xor
int
pop
xor
test
pop
out
push
sub
shlb
mov
test
int3
and
sub
fs
pop
or
cmp
dec
js
scas
inc
inc
lea
mov
mov
or
inc
cld
orb
fwait
sahf
dec
jb
or
pop
push
or
pop
cld
call
bound
jg
xor
adc
xlat
sub
aaa
push
xchg
push
pop
icebp
lods
push
cmp
outsb
rcll
test
imul
or
inc
cmpsl
cli
or
and
pop
insb
inc
pop
ljmp
mov
cmp
mov
mov
add
adc
pop
decl
add
inc
inc
aad
mov
pop
push
pop
clc
lds
popa
and
xchg
inc
fidivs
inc
dec
adc
fprem
call
sub
rcrb
push
jae
sbb
sbb
push
xor
sub
cld
aam
push
add
hlt
lcall
xor
xchg
dec
js
pop
adc
ss
aam
scas
pop
lock
mov
xchg
sahf
rcrb
or
jl
dec
aaa
andb
and
xchg
mov
cmp
jecxz
stc
mov
adc
pop
ret
mov
adc
pop
mov
data16
mov
add
lea
out
fs
mov
mov
imul
fistps
push
cmp
jg
xchg
fnstcw
pop
clc
mov
rcrb
lcall
enter
mov
iret
mov
outsl
shll
pop
ret
repnz
cmp
cmc
retw
add
pop
fistl
hlt
or
dec
iret
push
inc
mov
mov
sub
jl
add
negb
add
mov
inc
xchg
sahf
bound
or
adcb
test
test
popl
pop
sbb
xchg
mov
outsb
inc
or
jnp
and
adc
ret
add
cltd
jecxz
push
jno
rcrb
ljmp
sub
dec
fildll
aaa
fimull
jb
and
push
into
add
mov
fcoms
mov
fwait
cwtl
pop
sbbb
pop
out
mov
add
stc
pusha
fisttpl
add
add
sarb
sub
xor
mov
xchg
loope
out
insl
aaa
call
pop
sbb
jnp
jge
sahf
mov
loop,pt
jge
jp
icebp
sarl
mov
or
sbb
xorl
dec
das
into
ja
lcall
mov
testl
and
mov
addb
int3
jno
and
and
inc
je
adc
dec
xor
mov
testl
mov
lret
das
addr16
mov
adc
loope
lods
ds
rolb
sub
and
or
in
call
push
stos
cmp
cmp
xchg
fwait
cmp
pop
mov
or
adc
lahf
jmp
iret
popa
ja
arpl
mov
pop
jo
movb
lds
push
cwtl
jne
or
dec
xorb
aad
inc
add
mov
xorb
js
repz
pushf
stos
loopne
ficompl
sbb
pop
jmp
lods
out
movsl
sahf
cltd
inc
arpl
and
inc
mov
aam
and
cmp
and
test
dec
das
test
cld
lahf
test
adc
subb
out
cmp
sub
test
test
fidivl
cmp
push
scas
and
push
shrl
push
pop
jne
das
lods
lahf
out
adc
hlt
sbb
jmp
push
and
sub
add
mov
negb
jl
mov
mov
ret
arpl
incl
dec
mov
xchg
adc
in
out
dec
ljmp
xor
push
imul
add
testl
inc
cld
jns
stos
or
or
adc
test
jb
sub
aam
data16
inc
pop
jecxz
fstp
inc
xchg
and
jmp
sbb
xor
add
jmp
fcmovu
outsl
sbb
repz
and
mov
ret
inc
in
fsubs
ss
ja
in
lods
sub
out
vmovsd
dec
mov
popl
sbb
xor
xlat
clc
xchg
jae
sub
les
dec
push
xorl
lahf
es
dec
sub
sahf
and
gs
fsubl
jns
stos
mov
jecxz
mov
bound
lcall
mov
jle
sub
fldl
sub
out
imul
add
ja
aaa
test
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
sarl
fmuls
ficoms
mov
mov
shrb
ljmp
movsb
mov
or
pop
and
dec
jno
lea
test
sub
jecxz
adc
pop
xor
push
pop
push
movsl
mov
ficoml
and
jmp
sbb
sbb
adc
scas
push
lcall
mov
dec
mov
add
pop
sub
ret
xchg
out
inc
jl
mov
cmovno
call
cmp
push
or
popa
adc
test
es
push
mov
pop
sahf
dec
cwtl
test
stos
mov
xor
mov
sbb
jp
daa
shll
in
int
fdivs
push
mov
sar
repnz
pop
xchg
lods
sub
sti
les
jmp
lea
shlb
sti
mov
mov
adcb
int
bound
pushf
mov
pop
subl
ret
mov
mov
scas
jl
fsubl
div
mov
add
test
js
inc
insb
lret
or
mov
stos
dec
xchg
pop
mov
mov
es
push
mov
shlb
cmc
and
in
cltd
test
jl
inc
cmpsb
hlt
xchg
mov
push
mov
ja
mov
and
movsb
int3
xchg
out
xorb
inc
xor
in
adc
ret
hlt
xor
daa
pushf
imul
jmp
lock
inc
ss
in
pushf
push
inc
lods
lahf
mov
gs
adc
cmp
cld
fstpt
faddl
mov
ljmp
sub
into
mov
mov
sub
loope
jo
push
std
je
xlat
xor
jp
fdiv
rorl
mov
mov
out
dec
gs
test
repnz
add
inc
lock
out
lahf
push
add
dec
xor
iret
ret
shl
stos
ret
adc
leave
push
lea
and
shll
xorl
jmp
shlb
push
repz
mov
les
xor
add
frstor
push
xchg
cmp
cld
mov
outsl
int3
sbb
xlat
jge
in
add
adc
sbb
movl
sarl
scas
cmovae
jp
mov
lods
imul
jg
aaa
iret
mov
ljmp
loope
in
xchg
mov
adc
push
jno
ljmp
push
imull
dec
pop
mov
mov
or
mov
sti
mov
or
xchg
jecxz
lds
ss
test
shll
cmc
cld
jecxz
adc
mov
and
mov
add
adc
inc
pop
int3
shl
enter
leave
imulb
std
dec
push
jno
ret
aam
ljmp
sub
aam
xchg
daa
add
sahf
mov
test
test
lcall
and
pusha
add
mov
mov
and
mov
add
ds
dec
lcall
adc
out
sbb
jbe
dec
ficomps
inc
fcmovne
nop
push
ljmp
insl
mov
mov
xchg
mov
push
es
gs
xor
adc
les
sub
neg
mov
push
loope
cmpsb
fmulp
scas
add
push
mov
mov
jno
ret
sub
mov
loop
shld
push
scas
es
lods
sub
dec
sub
out
outsl
andb
sub
addr16
enter
adc
mov
jo
sbb
icebp
movsl
lcall
sub
lea
push
pop
in
inc
repnz
icebp
ljmp
mov
inc
rcrl
adc
push
mov
cmp
inc
xchg
pop
mov
lds
fsubs
jg
mov
repnz
movsl
or
jb
mov
pop
sbb
jge
cmp
adc
pop
jle
xlat
xchg
push
pop
mov
repz
into
call
inc
push
pop
push
dec
and
mov
stos
and
dec
xchg
push
lret
shrb
push
fdivrs
int3
imul
adc
out
nop
pop
add
es
sbb
inc
sub
je
loope
insb
cs
or
add
arpl
rolb
cmpsl
iret
testl
fisubrl
imul
addr16
ror
mov
lods
cld
xchg
push
dec
inc
enter
adc
cs
arpl
pop
outsb
jae
add
cld
mov
ds
aad
aad
scas
inc
adc
xor
add
push
mov
cmpsl
cmc
xor
js
lds
pushf
pop
mov
mov
lds
cli
jp
add
push
sub
push
fs
mov
pop
dec
pop
cmp
jle
mov
xchg
test
ftst
das
push
fs
jl
pop
cmp
adc
icebp
and
sbb
pop
cmc
ror
paddsb
nop
inc
sub
into
cmpsb
int3
inc
ret
cmp
ds
xchg
sbb
dec
fucomip
notb
mov
rcrl
mov
icebp
xchg
mov
icebp
xchg
sub
push
rcll
std
cmpsb
pop
aaa
pop
inc
push
sbb
sbb
inc
movsb
mov
inc
lea
sub
push
jl
mov
adc
mov
clc
enter
scas
bound
insl
rorb
aam
add
pop
mov
mov
outsb
cmpsb
push
mov
xor
dec
test
mov
add
add
pop
cmp
rcl
inc
push
adc
lods
shlb
sub
adc
mov
neg
push
ret
mov
enter
mov
jne
sub
xchg
adc
in
cmp
cmp
mov
cmpsb
adc
test
push
push
shll
xor
outsl
xchg
test
inc
pop
fnstsw
jg
cmovs
fcompl
inc
shlb
cmp
imul
mov
pop
leave
mov
int3
mov
fucomp
sti
fwait
mov
xlat
popf
aaa
idivl
adc
jecxz
enter
jo
xor
xchg
lea
nop
xor
outsl
in
pop
cmp
jns
cmp
inc
mov
int3
es
mov
inc
imull
pop
xchg
sar
fisttpl
rclb
andb
stos
xchg
pop
xor
adc
rorl
jnp
sub
mov
imul
fildl
xor
sbb
adc
adc
in
insl
notl
call
mov
pop
sarl
add
pop
adc
mov
and
aas
or
xor
ds
or
adc
ds
sbb
or
inc
inc
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
jns
movb
mov
pfcmpge
jno
dec
push
push
and
pop
xor
sbb
out
sti
jge
push
inc
push
fcoms
pop
xchg
push
xchg
cmp
mov
loope
decl
mov
xlat
ja
dec
scas
mov
jno
mov
daa
mov
jns
in
iret
xor
adc
mov
pushf
xor
jmp
popf
cmpxchg
push
pop
push
jns
popf
or
mov
arpl
adc
mov
push
pushf
push
sahf
repnz
out
cs
sub
xchg
es
or
gs
repnz
jge
mov
dec
dec
jmp
out
out
ljmp
imul
aam
xor
pop
push
sub
cmp
add
or
es
es
and
mov
repz
repnz
lods
xor
sbb
mov
aam
js
mov
cwtl
inc
pop
and
or
shl
out
push
ljmp
fcomi
test
test
lahf
data16
pop
test
ds
mov
and
and
fcmovnbe
in
and
xchg
mov
xor
into
mov
sub
mul
aam
xchg
mov
js
cmp
mov
mov
in
add
mov
test
and
out
shl
stos
lods
ljmp
mov
xchg
sbb
add
out
cmp
loope
sbb
jbe
inc
inc
nop
sarb
movsb
jmp
ret
mull
push
in
fldenv
jmp
test
mov
dec
xchg
int3
sub
and
and
xor
dec
mov
ret
popa
imul
mov
push
int
push
testl
loope
add
add
xchg
add
cmpb
cmpsl
and
cs
mov
push
cmpsb
in
fnstsw
xchg
ret
insb
mov
popa
mov
out
repz
or
adc
dec
add
cld
mov
cmpsl
pushf
jl
in
inc
xor
jecxz
into
lret
push
push
adc
ret
rcrb
fsubrp
mov
adc
push
test
push
mov
int
push
stos
jns
lret
cmpsb
or
push
pop
addr16
dec
pop
mov
jl
aad
dec
idivl
sub
repz
leave
cmp
aam
cmp
mov
iret
xlat
push
mov
add
scas
adc
clc
je
and
xchg
or
dec
add
pop
sbb
aad
mov
fcmovnb
sti
inc
jl
cmp
xchg
leave
ds
pop
fisttpll
push
fisubs
cwtl
jg
pop
xchg
mov
fimull
cmc
jge
loop
scas
jg
mov
sti
rorl
into
scas
ljmp
push
daa
sti
mov
cs
fisubs
mov
cmpsl
mov
dec
inc
inc
ss
iret
aam
mov
stc
cmp
add
scas
mov
mov
xchg
es
out
add
stos
sarl
lock
rorl
je
dec
scas
in
cmpl
fs
mov
mov
inc
jno
adc
ja
aad
xchg
aad
mov
mov
inc
daa
push
adc
or
or
adc
sarl
sub
sub
gs
dec
aam
cmp
xchg
xor
lcall
imul
ret
test
jle
mov
inc
jl
mov
cmpsb
fdivs
jnp
popf
sbb
mov
repz
mov
dec
jns
js
psadbw
pop
fwait
insb
cmc
pop
popf
out
xor
aas
lret
int
sub
test
push
adc
adc
out
lods
lods
add
fwait
pop
pop
sbb
scas
cmpsl
inc
cmc
imul
roll
pop
pop
pop
dec
daa
pop
inc
orb
mov
jecxz
loop
movl
sub
out
scas
test
fdivp
fcmovnb
or
test
push
cmpsl
dec
lods
cmp
shr
mov
xchg
and
js
xchg
cmp
fmull
inc
add
cmp
lahf
mov
push
and
or
fsubl
lahf
gs
int3
movsbl
in
adc
jl
out
jnp
cltd
mov
sub
out
lahf
icebp
loopne
clc
fnstenv
push
rolb
outsb
movsl
jle
push
orl
xor
jnp
inc
in
jg
push
pop
rsm
push
adc
push
dec
sub
xchg
push
aam
inc
pop
orl
sbb
jge
sub
loope
popf
int3
mov
jl
shll
test
outsl
push
mov
in
mov
cmp
sub
jmp
les
dec
mov
out
xchg
aaa
rep
xchg
sub
cli
cld
loop
mov
dec
lahf
std
xor
xchg
xchg
xchg
and
sub
inc
sbb
ds
push
mov
jns
pop
iret
sub
adc
call
sti
xchg
and
ljmp
outsl
inc
mov
mov
push
call
ss
cmpsl
out
nop
movsb
ret
cltd
enter
rorb
faddp
adc
inc
sbb
inc
inc
insl
cltd
fsubrp
mov
lahf
sbb
aas
imul
ja
xor
sbb
mov
inc
imul
cmpsl
or
in
jb
mov
cmp
push
shll
xor
test
lret
and
je
daa
mov
jmp
insb
hlt
fidivrs
scas
int3
dec
push
xchg
push
ja
cmp
das
lods
jmp
or
int
push
jnp
in
push
sbb
add
mov
mov
sbb
xor
sub
push
mov
popa
add
jbe
xor
mov
sahf
mov
ljmp
test
cld
out
inc
pop
dec
or
sub
and
jae
rclb
mov
out
jl
sbb
pushf
gs
popa
mov
push
fsubl
fldenv
xchg
pop
lock
xor
sub
lods
xchg
sub
sbb
add
xor
aas
xorl
mov
inc
or
out
add
cmpsb
inc
cmc
vhsubps
out
movsb
adc
ja
fldenv
in
dec
hlt
std
sbb
and
cltd
test
inc
ret
jp
scas
insb
adc
mov
sub
ret
ljmp
cwtl
mov
add
fisttps
and
or
lock
or
popa
or
loopne
xchg
pop
js
outsb
push
ficompl
clc
sub
mov
mov
jbe
pushf
stos
outsb
jnp
adc
mov
jmp
and
inc
jno
xor
inc
xchg
and
pop
inc
adc
dec
bound
int
add
inc
std
or
les
push
bswap
sub
rolb
int
lods
and
andb
test
mov
mov
ljmp
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
lcall
and
pushf
subb
pop
ds
fdivl
mov
fwait
inc
or
xchg
xor
and
fiadds
inc
popf
out
or
sar
popa
jae
jmp
jge
jno
dec
sti
movsl
jmp
test
pop
or
lods
sub
add
xchg
or
ficoml
mov
inc
movsb
repz
cmc
repnz
xchg
psrlq
pop
mov
out
stos
mov
loop
jbe
fisubrl
test
adc
push
jne
loop
mov
hlt
add
xor
popf
jae
inc
or
cwtl
imul
sub
xor
push
fs
cmp
or
sbb
mov
lds
pusha
loop
jl
jecxz
sbb
or
rorb
add
dec
push
xor
bound
popf
repnz
fcoml
in
jns
rcrb
orl
aas
cmpsb
sbb
leave
fistpll
ss
inc
shll
mov
dec
xchg
adc
inc
out
repnz
fistps
ljmp
divb
mov
mov
test
ja
int3
bound
fldcw
xchg
test
xor
pop
or
mov
in
cmc
cmp
or
sbb
inc
pop
pop
repnz
ja
xchg
mov
bound
cmpsb
cmp
xor
or
xchg
aas
dec
xchg
push
push
aaa
pop
sbb
ret
into
dec
inc
sbb
out
dec
jno
and
dec
xchg
dec
lret
ret
loope
jp
xor
ds
push
xor
xor
mov
pop
add
xor
push
mov
ror
int3
and
out
push
lods
scas
sahf
mov
popf
addr16
mov
inc
inc
add
aas
push
es
loopne
popf
jb
rolb
push
cmp
scas
das
je
rorl
test
clc
or
mov
inc
inc
inc
mov
push
cmpsb
jne
dec
repz
xchg
pusha
mov
fdivrl
insb
ret
rcr
int3
cmc
stc
testb
jmp
pop
mov
shlb
ror
std
jg
add
sbb
inc
faddp
fs
cld
cmc
fwait
jns
lods
daa
mov
repnz
sbb
xchg
dec
lahf
mulb
pop
js
push
fucom
clc
bound
jp
mov
mov
fwait
inc
es
shll
mov
shrl
xor
push
mov
iret
out
jle
fcmovne
test
ds
xor
mov
mov
imul
push
loop
shll
out
jns
mov
sub
repnz
mov
fidivrl
dec
loop
add
enter
sbb
push
xchg
pop
mov
xchg
loope
movsb
clc
mov
jecxz
and
stc
inc
mov
mov
push
gs
inc
cmp
es
pop
add
mov
ficoml
mov
sbb
mov
push
pop
shlb
xchg
lcall
sbb
or
cmp
pop
mov
shl
mov
cmc
sub
in
add
sub
leave
xchg
push
pushf
mov
jmp
cs
gs
mov
mov
test
xchg
xor
ret
mov
loope
jns
or
mov
mov
fucomip
test
lods
or
lahf
jae
jb
fcomps
mov
jb
pop
xor
cli
imul
xchg
xor
dec
add
or
pcmpgtb
xchg
std
test
and
mov
outsb
inc
sub
shrl
test
cmp
lcall
push
mov
mov
cli
in
and
nop
xor
inc
sbb
mov
data16
adc
cmp
stc
int3
mov
add
push
mov
jbe
lcall
push
lods
cmpsl
stos
cmp
cld
lahf
mov
aam
lea
pusha
and
add
mov
push
pusha
add
jge
xor
cmp
stos
enter
push
mov
dec
fisubrs
xchg
inc
cmp
mov
xor
lahf
jp
in
xchg
cmp
cmp
cltd
lea
pop
inc
fbstp
out
insb
xor
cwtl
xor
imul
lds
fnstsw
pop
adc
inc
xchg
inc
push
xchg
sbb
negl
out
mov
sub
cli
mov
pop
inc
pop
addr16
adc
mov
mov
dec
mov
icebp
mov
lods
cmp
xchg
jmp
leave
xchg
dec
fxch
loop
jns
jge
hlt
jl
push
mov
das
lret
lock
fidivrs
lods
test
add
xor
jbe
sbbb
jmp
fdivp
mov
push
xor
imul
in
push
jg
lods
scas
cwtl
int
or
adc
adc
das
sub
sbb
adc
scas
inc
xchg
stc
jmp
shll
fnstcw
pop
cltd
dec
cmp
push
dec
pop
cli
or
imull
jge
push
pop
mov
dec
push
sbb
mov
pop
arpl
test
out
and
sbb
pusha
pushf
movsb
sbb
lds
imul
scas
lret
int
xchg
mov
adc
rorl
mov
sbb
mov
filds
push
stc
sub
mov
push
je
sbb
adc
mov
inc
xchg
cmp
mov
pop
push
lods
into
test
push
push
popa
clc
fwait
out
bnd
outsl
sub
or
and
scas
mov
sub
dec
adc
jno
push
das
jl
popf
xlat
hlt
mov
add
clc
cmc
push
mov
mov
or
pushf
iret
xchg
mov
aam
inc
ljmp
dec
jb
jmp
psllw
call
push
ljmp
movsl
je
push
aad
xchg
stos
sub
adc
inc
mov
push
dec
jp
inc
mov
addr16
rorl
cmp
lock
cmp
fsts
sarl
push
push
mov
shll
fwait
vcvttsd2si
nop
xor
pop
mov
mov
mov
hlt
xor
mov
es
ss
cltd
cli
sbb
xchg
in
sbb
mov
xor
cmp
sub
mov
lods
and
out
adc
push
mov
repnz
pop
lock
jmp
inc
lods
shll
or
adc
movsb
pop
pop
in
flds
sub
leave
add
dec
cmp
dec
dec
imul
sbb
add
aam
cmp
icebp
notl
loop
rcr
jbe
mov
cmp
mov
sahf
and
add
jmp
jne
add
subl
xchg
int3
in
dec
addr16
and
test
adc
mov
movsl
push
sbb
sbb
cmp
fxch
es
mov
mov
sub
cmp
fwait
ds
cmpsl
push
fwait
inc
nop
loop
sahf
adc
pop
movsl
divl
jp
sbb
daa
bound
dec
roll
and
dec
arpl
dec
inc
push
and
idivl
jnp
insl
lahf
jb
jl
shrl
daa
inc
mov
and
fists
push
jp
pop
scas
test
shll
adc
push
cltd
mov
adc
rorb
jne
xchg
ret
sub
pop
aas
in
inc
sbb
xchg
cli
loopne
or
rol
and
daa
mov
hlt
pop
push
adcb
inc
pop
stc
in
test
xchg
jge
cwtl
lods
cmpsl
mov
lret
loop
repz
iret
ret
cmp
dec
into
pop
sub
je
adcb
xchg
jmp
push
push
stc
dec
mov
push
jns
les
mov
push
ficoml
inc
inc
outsb
pusha
out
add
xchg
ss
adc
xchg
lret
pop
adc
jno
push
icebp
inc
je
inc
mov
inc
sbb
popf
add
mov
hlt
push
out
ror
pop
inc
in
idivl
ss
mov
sbb
fcomi
mov
push
rcrb
js
shlb
imul
cmp
cmpsb
push
push
sbb
nop
or
les
movsb
adc
and
fcoms
xchg
mov
add
dec
adc
jmp
out
aam
shll
testb
ficoms
sbb
dec
cmp
popf
sbb
inc
dec
aam
sbb
rcrl
aas
nop
fistl
aas
test
orb
test
fwait
movsb
mov
stos
xchg
stos
dec
mov
adc
mov
std
pop
adc
shll
repz
divb
into
addr16
cwtl
xchg
sar
sahf
sbb
xchg
jne
repz
out
iret
test
imul
inc
sar
adcb
xchg
icebp
into
outsl
or
lcall
repnz
lcall
sbb
out
and
mov
les
and
mov
push
mov
pop
into
aas
cmpsb
lcall
movb
push
mov
pop
add
in
push
xor
gs
mov
sarl
ss
aam
je
rclb
cmp
fdivs
fstpt
outsb
aam
rclb
aam
pop
xor
pop
mov
push
jno
inc
jp
sub
add
jge
sbb
fcomip
dec
popf
mov
jecxz
cld
mov
outsl
dec
test
xchg
xor
andb
push
xchg
shll
sbb
push
out
jno
bound
adc
pop
and
or
in
scas
mov
cli
or
fistpll
mov
and
mov
inc
ljmp
adc
mov
pop
enter
xchg
sbb
sbb
cltd
mov
mov
imul
repz
in
mov
leave
les
jg
xchg
aaa
fsubrp
mov
pop
roll
leave
loop
jb
sub
or
cli
imul
jg
cmp
int3
lcall
and
nop
jb
mov
insb
sub
sub
mov
jbe
pop
stc
ud2
and
sub
jo
add
test
outsl
shrb
les
fwait
pop
dec
xor
pop
gs
aas
lods
cmp
aaa
xchg
sbb
pop
shl
cli
add
push
cmp
pop
stos
sub
sub
lds
sti
pop
aaa
addr16
push
push
jnp
adc
cli
aad
mov
dec
xor
aam
shlb
gs
sub
in
rcrl
clc
aad
mov
pusha
fldt
or
cwtl
sbb
test
dec
push
cwtl
pop
mov
repnz
xor
mov
adc
jp
sub
cmpsb
jl
xchg
push
inc
mov
xchg
add
fistl
scas
stos
ss
xchg
insb
into
pop
mov
cltd
cmp
sbb
pop
push
enter
mov
xchg
popf
sub
jns
adc
in
fisttpl
in
in
mov
sbb
std
pcmpgtw
in
leave
mov
add
jno
js
sbb
stos
scas
in
dec
iret
xor
push
pop
jne
add
aas
punpcklwd
fldt
out
mov
cs
outsl
btr
outsb
sub
lcall
mov
inc
ja
inc
loopne
mov
outsl
ljmp
inc
pop
daa
test
mov
pop
xchg
out
pop
pop
mov
clc
in
mov
movsb
outsl
aad
push
fimuls
mov
xchg
jge
mov
and
mov
data16
std
repz
adc
jmp
outsl
xchg
adc
inc
inc
xchg
add
test
in
mov
push
or
or
push
cmp
loope
pop
lods
xchg
shl
add
push
jae
dec
push
ss
push
add
cmp
push
or
mov
xor
adc
pop
pusha
push
mov
sub
jmp
and
inc
ja
shrl
add
or
sbb
mov
add
mov
imul
push
pop
repnz
mov
sub
dec
mov
shlb
movsl
jnp
pop
out
xor
mov
mov
fcoml
sub
adc
aam
addr16
rolb
adc
mov
enter
or
mov
jns
inc
push
scas
ja
mov
incl
loope
xchg
int
push
or
pushf
adc
pop
pop
iret
sahf
fs
and
dec
cmpsl
push
int
arpl
xchg
or
mov
out
stos
push
addr16
aam
movsb
sub
orb
fsub
xchg
cwtl
faddl
enter
cmp
adc
outsb
inc
lds
ja,pn
lds
sub
push
aam
incl
in
xchg
sub
adc
imul
push
test
inc
mov
inc
dec
andb
xor
push
ds
or
xchg
push
fistps
cmp
xchg
add
cmc
fimuls
dec
imul
dec
js
in
ja
icebp
sub
lods
inc
adc
jae
loop
cmp
outsb
test
test
pop
sbb
mov
enter
out
push
icebp
or
xor
incb
push
data16
and
or
ret
xchg
stc
aaa
inc
iret
xor
xchg
xor
testb
enter
jl
stc
aaa
in
pop
sarb
jmp
rorb
xchg
gs
idivb
popf
mov
fadds
cmpsb
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
mov
xchg
adc
and
test
lock
sahf
jbe
and
adc
mov
mov
mov
mov
adcl
push
jg
subl
push
roll
push
push
test
add
cmp
mov
lret
aaa
cs
xor
lret
mov
jae
les
je
js
leave
mov
cltd
and
hlt
lahf
push
mov
xchg
movsl
push
enter
mov
jo
loope
and
pop
jnp
in
test
fs
pop
adcl
int
xchg
pop
cwtl
push
inc
push
das
adc
ljmpw
int
push
popf
push
adc
fiaddl
lock
dec
jg
mov
mov
cltd
enter
and
ss
xor
arpl
dec
mov
cmp
pop
xchg
dec
mov
scas
push
pop
sbb
cmc
int3
lret
in
std
xor
adc
push
cld
or
roll
loope
pop
or
iret
lock
fnstenv
cmp
ds
lahf
mov
mov
fwait
mov
cmp
imul
test
hlt
lods
sti
dec
fcoml
xchg
add
mov
cwtl
lds
xchg
add
lret
inc
pop
jge
mov
add
fs
adc
xchg
adc
bound
or
push
pop
pushf
loopne
push
mov
inc
ret
pop
and
cld
inc
or
sbb
push
or
mov
out
pop
pop
dec
sbb
mov
mov
cmpsl
lret
inc
insb
arpl
fmuls
outsb
sti
mov
gs
mov
adc
mov
in
and
and
pop
xor
addr16
imul
xor
xor
lret
jne
aad
decb
sbb
lret
mov
add
aam
inc
mov
sub
pop
and
cltd
jg
mov
cli
pop
and
dec
out
sbb
rol
sbb
rclb
out
ja
cmp
insb
jb
jl
xrelease
movsl
mov
or
inc
jns
lods
sbbl
inc
inc
in
mov
mov
cmp
repnz
cmp
jcxz
jmp
or
sbb
test
add
fadds
xor
loop
popf
mov
jne
jcxz
inc
sbb
insb
mov
icebp
aam
add
es
sub
push
testb
out
push
cld
sbb
paddb
mov
scas
scas
daa
call
push
add
sbb
sub
int3
testb
cmc
jae
dec
movsb
xchg
insb
cmp
xlat
ja
ja
das
and
ja
sub
jp
cmp
xchg
dec
sub
mov
mov
lahf
mov
xchg
lods
popa
lea
iret
dec
xchg
and
cmp
clc
push
stos
or
rorb
adc
mov
out
nop
test
sbb
lret
jle
imul
push
or
clc
mov
inc
shll
jmp
addr16
shlb
in
test
arpl
stos
outsb
cmc
cmp
aam
iret
sbb
cmp
ret
data16
lret
and
test
lea
shl
fld
xchg
push
cmpsb
addl
sub
movsb
mov
mov
pop
loope
push
and
adc
jecxz
push
mov
jbe
mov
sarb
mov
cli
mov
add
sub
aas
jle
lods
cli
insl
sub
sbb
sub
sbb
into
cmpsl
sbb
mov
xor
inc
orl
ret
xchg
inc
adc
in
adc
add
xchg
mov
mov
or
sbb
push
xor
scas
sub
dec
test
out
test
js
pop
lock
dec
cmpb
mov
in
iret
out
mov
int3
out
je
and
push
add
jno
jo
inc
mov
pop
fnstsw
fbstp
mov
mov
and
inc
call
mov
flds
lret
enter
push
dec
and
lea
sbb
pop
push
mov
imul
or
mov
icebp
jne
xor
adc
pop
dec
jp
js
mov
lods
xor
stos
inc
repz
cmpsb
jmp
or
cmp
add
clc
and
fdivrs
jmp
mov
jnp
ss
insl
xchg
sar
fadds
fld
push
push
lret
lcall
jb
mov
stos
cmp
mov
fstpt
loope
jnp
leave
popa
xlat
cmpsl
int
mov
dec
pop
shll
jmp
enter
push
icebp
icebp
idivl
pop
scas
fdivl
mov
jb
push
iret
ss
out
orb
xchg
add
push
mov
fidivl
aas
or
push
xchg
xchg
mov
lret
enter
mov
fbld
lock
dec
jg
sub
fdivs
add
push
sbb
arpl
push
adc
clc
shr
cs
out
gs
mov
pop
pop
pop
iret
scas
mov
mov
push
mov
jbe
and
xchg
lods
add
shl
push
call
push
or
out
jg
sti
insl
dec
shlb
out
enter
hlt
inc
push
cmp
mov
push
sar
inc
sahf
cmpl
hlt
and
adc
mov
scas
ljmp
xor
fistl
sbb
add
frstor
mov
dec
cli
adc
fs
mov
lods
addr16
add
mov
xchg
mov
mov
cli
mov
xchg
ret
in
movsb
and
ret
sbb
dec
clc
push
push
mov
add
jge
inc
sahf
lock
fisttpll
loop
orb
xchg
insl
push
stos
test
mov
lds
fldt
inc
and
mov
movsl
mov
fbld
jo
mov
addr16
cmp
add
outsb
pop
and
mov
and
cs
sbbl
adc
loopne
test
push
or
xlat
jns
jb
addr16
cmp
cmp
jp
jne
or
xor
dec
cmc
pop
mov
xor
cmc
and
mov
repnz
adc
adc
sbb
in
fucom
aam
in
or
jle
mov
shlb
sbbb
cmp
test
loop
mov
cmp
dec
xchg
call
dec
pusha
sub
sbb
in
push
jno
inc
cs
aaa
xchg
mov
fsub
sub
aas
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
ret
mov
pcmpeqb
sbb
inc
icebp
std
pop
out
sub
fbld
mov
push
cmp
push
xor
testl
das
sbb
sbb
lret
ficompl
sahf
pop
inc
xchg
xchg
sub
xor
push
adc
add
aas
push
mov
aas
pop
xchg
sbb
pop
or
jns
or
jo
dec
push
sbb
and
aaa
sub
inc
add
xchg
or
and
mov
mov
jecxz
mov
push
lret
jno
call
jp
enter
sbb
js
mov
mov
sub
mov
xor
inc
incb
orl
mov
mov
stc
arpl
sub
fsubr
out
pop
std
outsl
testb
jb
sti
mov
insb
mov
pop
jl
mov
cli
push
mov
jg
out
mov
loop
arpl
mov
mov
mov
cmp
sub
call
pushf
jbe
inc
out
lcall
sti
xchg
sub
mov
mov
stos
dec
lods
test
sub
push
cmp
popa
mov
fildl
sbb
jne
data16
jge
xlat
xchg
stos
pusha
in
pusha
push
ss
ret
push
add
add
fstl
xchg
fsubp
shrl
pop
xchg
je
xchg
jns
leave
mov
pop
mov
aas
repnz
dec
mov
or
insl
mov
enter
in
lock
fists
inc
pop
repnz
adc
movsb
xchg
sahf
in
push
xor
js
je,pn
ret
mov
xchg
xchg
arpl
addr16
push
jge
xchg
inc
andl
mov
jb
test
or
orl
mov
es
orb
lock
out
sbb
xchg
in
daa
mov
es
arpl
out
mov
mov
int3
cmp
test
push
xchg
mov
imul
xchg
outsb
imull
cmp
xor
add
push
cmc
mov
mov
scas
mov
stos
mov
sub
mov
test
or
out
jl
xchg
pcmpeqb
aas
aam
outsb
pop
in
shrl
pop
std
inc
push
mov
in
cmp
jno
fadds
mov
daa
cltd
inc
and
orb
xor
lods
in
add
push
incb
aaa
inc
inc
cmp
ljmp
stos
cmp
jnp
cltd
pop
std
lods
lds
cli
inc
lcall
jecxz
fstpt
add
xor
mov
into
hlt
or
ret
xlat
add
arpl
cmc
test
dec
mov
cmp
xor
mov
pop
loope
mov
or
pushf
mov
call
popa
dec
rorb
push
pop
shl
xchg
inc
data16
adc
mov
test
lock
xchg
outsb
inc
leave
pop
sbb
js
xchg
into
jle
icebp
mov
sarb
mov
in
clc
cmpsb
pop
out
sbb
jg
inc
cli
jp
fbstp
dec
ficomps
adc
std
lcall
fnstenv
mov
add
subl
insb
bnd
in
lret
mov
adc
or
popa
aam
arpl
adc
js
push
out
adc
ja
xor
push
sub
out
pusha
cmp
ret
les
jp
incb
push
lea
jno
and
roll
dec
sbb
call
sahf
push
and
icebp
and
and
idivb
scas
push
add
xor
adc
sub
clc
sti
sub
pop
imul
xor
outsb
cmp
push
fildl
and
dec
add
mov
repnz
lahf
or
cmp
push
daa
jecxz
fsubrs
inc
cltd
sub
mov
jp
ss
xchg
adc
or
mov
idivb
and
sub
mov
loop
push
fadds
fidivrl
xchg
xor
aas
rcrb
mov
cs
outsb
lods
adc
lods
loopne
pop
mov
jl
les
mov
adc
movsb
rcrl
jecxz
cmp
and
fldcw
mov
jno
push
dec
movsl
test
adc
dec
inc
and
pxor
addr16
fildl
orb
test
fwait
pop
pop
mov
xor
push
mov
and
dec
pushl
xchg
int
aaa
sub
xlat
sub
xchg
xchg
xchg
popa
pop
adc
mov
xor
adc
mov
and
aaa
lahf
es
repnz
sub
jmp
adc
jns
inc
pop
and
cwtl
pop
inc
cmpsb
mov
cmp
ficomps
mov
scas
mov
adc
sbb
pop
inc
out
xchg
shr
cmc
popf
and
repz
xchg
daa
mov
adc
sti
cltd
out
mov
adc
inc
xchg
loopne
repz
shrl
scas
push
xchg
sub
xor
sbb
mov
or
loopne
mov
pop
sbb
mov
sti
or
addb
mov
pop
jbe
lret
xor
xlat
cmp
lahf
lock
or
stos
mov
lea
mov
add
cmp
rorl
xor
negl
fxch
pusha
mov
adc
fisubrs
inc
mov
fbld
add
call
in
icebp
jb
int
lea
xor
ret
dec
pop
into
pusha
xor
xor
or
ret
fisttpll
push
push
mov
iret
lret
fwait
cltd
pushf
fcompl
push
fisubl
or
fists
pop
data16
or
scas
mov
or
inc
cmpsl
pop
ret
insl
pushf
stc
or
lea
pop
subl
lret
in
push
pop
jnp
pop
lahf
xchg
into
out
push
mov
call
clc
pop
inc
pop
insl
dec
shrl
or
push
fsts
adcl
daa
scas
and
sub
lds
adc
mov
mov
aaa
lret
cmp
xchg
fsubs
xlat
xor
sti
iret
mov
neg
lds
test
sahf
sub
fptan
push
outsb
rolb
cmc
or
into
fidivl
in
aas
add
int3
jg
data16
mov
sbb
mov
or
jno
adc
in
mov
and
test
cwtl
int3
push
bound
les
mov
adc
inc
andl
inc
xor
add
ret
cmpsl
stc
adc
clc
lret
test
jns
jo
aam
push
push
in
xbegin
mov
or
into
jne
out
and
push
pcmpeqb
jns
fistps
call
in
imul
jmp
sbb
push
adc
xchg
int3
xchg
add
dec
cwtl
nop
adc
and
aaa
mov
iret
imulb
adc
lcall
mov
adc
jnp
xchg
fdivl
call
pop
pop
xorb
or
adc
add
into
dec
addl
jb
add
jbe
jp
adcl
inc
negl
out
out
xor
push
xchg
loop
or
jmp
out
jp
jmp
fcoml
lock
orb
xchg
dec
insb
sbb
jb
dec
out
pop
mov
pop
test
leave
clc
out
jmp
test
inc
adc
out
aam
pop
fcmovnu
stc
mov
xchg
cmp
roll
mov
mov
dec
xchg
cmp
sbb
mov
or
arpl
popa
rclb
cmp
lock
dec
or
mov
imul
xchg
adc
add
call
out
adc
mov
and
add
mov
popa
ja
pop
sti
lcall
sti
mov
test
or
adc
xchg
das
sub
movsl
dec
cmpl
sub
mov
sbb
aad
dec
cmp
test
mov
sub
mov
mov
sarl
shlb
loopne
jnp
adc
cwtl
pop
ds
je
jne
inc
and
push
iret
cwtl
and
in
cmp
mov
push
pusha
sub
lret
push
add
push
mov
sbb
jp
push
xchg
push
mov
xor
ja
xlat
in
sbb
sbbl
jecxz
dec
call
pushf
outsl
daa
push
inc
jbe
arpl
mov
fwait
mov
insl
iret
push
sub
cmp
cmp
adc
cmpsb
ljmp
inc
jb
xchg
cld
cmp
inc
cld
xor
jl
mov
jnp
cmpsl
add
nop
dec
fadds
mov
scas
mov
xchg
mov
sbb
and
lea
mov
lcall
cmp
dec
in
ja
xor
sbb
cmp
mov
in
add
mov
inc
rcll
movl
hlt
bound
mov
fcoml
iret
dec
movsb
pop
adc
js
scas
mov
fimull
push
lret
xchg
dec
cmc
shrl
ds
and
sub
mov
sub
mov
add
xor
lea
insl
lock
dec
lahf
insl
stos
aas
lret
sbb
std
pop
xlat
jge
sahf
daa
and
int
xor
dec
sti
or
push
cmp
pushf
mov
mov
add
sbb
les
ret
movsb
and
mov
cmp
fstpl
fwait
xchg
inc
aad
mov
sub
mov
shrl
jno
fxch
lret
lods
outsb
push
prefetch
or
in
sar
xchg
in
or
outsb
push
jmp
cli
xchg
test
call
jbe
cmp
aam
out
sub
xor
cwtl
out
dec
in
xchg
les
fnstcw
pop
sub
dec
lret
xchg
or
mov
xchg
mov
xchg
push
add
int3
int
add
hlt
push
lea
lea
mov
cmp
fs
ror
xchg
test
mov
repz
stc
jae
scas
sbb
sub
lods
in
stos
xchg
jbe
mov
adc
or
addb
xchg
dec
roll
sbb
adcl
mov
insl
xchg
jp
arpl
mov
mov
mov
cmp
cmpsb
pop
adc
pop
lock
ljmp
lds
add
into
rcrb
fdivrp
fistl
mov
pop
lret
test
pop
aam
pop
out
pop
cmc
in
xchg
adc
mov
add
sub
lods
call
nop
inc
rcrl
push
jl
inc
hlt
and
fwait
push
jnp
xor
lret
lret
inc
js
and
out
gs
jle
xchg
faddl
inc
sbb
insb
adcl
dec
inc
daa
mov
sbb
or
lods
jo
xorl
cmpsb
movsl
test
mov
pusha
mov
xor
iret
push
jl
pusha
dec
lret
icebp
cltd
hlt
call
fwait
imul
ret
sarl
cli
mov
and
xchg
mov
sahf
inc
jmp
pop
clc
mov
in
xor
adc
xchg
mov
rcrl
fmull
repz
arpl
push
mov
cli
loopne
mov
adc
and
lret
subb
mov
dec
ss
sub
jge
insl
cli
cmpsl
lret
hlt
jno
outsb
aad
loopne
mov
ja
ljmp
dec
insl
in
lea
inc
fwait
sbb
cli
dec
jno
jp
imul
and
fistpl
mov
adc
jecxz
insl
xor
jnp
sub
mov
shlb
fiaddl
mov
nop
sub
loop
mov
test
sbb
pop
mov
or
stc
inc
xor
inc
mov
mov
xor
xor
mov
test
dec
inc
sbb
in
sub
xchg
adc
push
lcall
xor
rorl
sub
cmp
cmpsb
in
es
mov
mov
imul
pop
cltd
dec
data16
daa
aas
adc
faddl
push
fnstsw
imul
imul
pop
fisttpll
pop
sub
outsb
xchg
testl
fs
add
push
hlt
mov
push
and
in
jl
loopne
ret
jl
repnz
mov
pop
mov
xchg
inc
mov
and
ret
outsl
cwtl
mov
mov
mov
sbb
mov
or
inc
inc
scas
xchg
and
ret
out
clc
jnp
mov
or
mov
push
int3
es
in
cli
inc
mov
aaa
fwait
fwait
stc
xchg
insb
loop
fimuls
je
push
jae
inc
jbe
fsubrs
push
push
out
push
and
cmp
loop
or
xorl
or
adc
xchg
sub
xor
cli
inc
or
pop
lods
and
adc
mov
into
aaa
cltd
sahf
sbb
dec
dec
adc
xor
jae
movzwl
hlt
insl
push
xchg
pop
ljmp
pop
dec
and
mov
ds
in
push
dec
es
fs
ss
sbb
pop
inc
jmp
and
sub
lods
std
cs
adc
jb
cltd
xor
mov
or
jecxz
add
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
sub
rclb
adc
addl
adc
lods
and
fmull
movsl
adc
rcll
mov
dec
clc
inc
aaa
fwait
or
sub
jecxz
sbb
xchg
les
pop
test
cld
popa
and
popa
ficoms
mov
sub
lods
push
rcrb
fs
cmp
mov
popf
ljmp
sbb
mov
imul
loopne
fdivl
leave
clc
xor
lcall
scas
lret
andb
push
mov
inc
aaa
mov
je
int3
mov
daa
addr16
dec
mov
roll
xor
add
push
enter
lds
rcrb
pop
movsl
cltd
adc
cmpsb
mov
aaa
jnp
xor
loop
add
je
out
mov
mov
mov
push
mov
aad
sub
ret
aam
movsb
and
fstps
cwtl
fcmovnbe
test
mov
hlt
leave
loopne
lods
mov
orb
daa
jns
mov
dec
loopne
dec
lea
mov
cs
jge
ss
rol
jg
xchg
mov
ja
mov
lret
loope
sbb
sub
loop
jb
inc
bound
les
nop
sbb
fiadds
xchg
sbb
jbe
ret
fsqrt
dec
cmp
lock
fsubrp
cmc
cmpsb
repz
adc
mov
pop
inc
adc
daa
pop
mov
jl
in
mov
popf
adc
mov
pop
xchg
shl
popf
mov
fdivrs
je
xor
add
xchg
lods
adc
or
lahf
jmp
hlt
or
loop
imul
add
inc
jg
and
in
push
xchg
fcomip
xorl
push
mov
stc
pushf
imul
push
aas
popf
push
mov
insb
push
inc
pop
shll
mov
sbb
inc
insb
sbb
mov
mov
out
dec
sbb
sbb
mov
sahf
mov
nop
test
test
or
ret
lods
sub
sbb
cwtl
jp
mov
testb
pusha
out
adc
lret
cwtl
inc
add
fmull
ds
dec
dec
jge
mov
dec
or
push
imul
fstpl
dec
jb
xor
cmp
addr16
xor
insb
mov
xchg
mov
jns
lea
das
mov
das
lods
add
jno
scas
int
cmp
pop
push
jnp
aad
jmp
xchg
out
push
mov
fmull
inc
mov
jmp
out
lahf
mov
mov
movsb
mov
mov
xchg
ljmp
cmp
mov
repz
js
int
or
test
fnstcw
loopne
mov
push
or
dec
inc
xor
xor
mov
insb
addr16
push
paddsw
mov
out
mov
pop
sbb
out
mov
mov
sarb
cwtl
sahf
ss
and
addr16
inc
stc
pusha
test
or
fdivr
scas
inc
cmp
cmp
imul
bound
out
imul
xor
adc
mov
mov
xchg
and
adc
ljmp
mov
mov
insb
imul
fiadds
sub
jb
sbbb
aaa
mov
sti
cld
xchg
push
lods
stos
xchg
popa
mov
add
les
xlat
ljmp
and
dec
insb
sbb
sub
push
out
sub
test
in
xchg
lods
jmp
pop
rcrl
pop
add
xchg
fiadds
pop
leave
pop
cli
and
movsb
xor
mov
lahf
mov
or
xor
cmpsb
pop
shrl
movsl
and
sbb
mov
push
stc
mov
add
ret
jne
add
loope
inc
bt
cs
inc
dec
sub
mov
scas
and
ss
mov
sti
mov
pop
iret
ds
lds
lahf
xlat
and
xor
sbb
jne
mov
mov
mov
in
push
fwait
inc
movsb
nop
sbb
fcoml
cmc
mov
sbbl
adc
or
fldenv
jns
sar
lea
stos
out
sub
ss
mull
pop
ljmp
test
out
repz
cmp
shl
cli
loop
jnp
inc
ljmp
push
add
das
ror
push
jmp
lds
jno
pop
popa
jns
popa
jle
xor
bound
ret
mov
inc
lods
adc
mov
pop
out
add
or
xor
scas
sub
in
out
ror
pop
test
out
and
sub
cmp
mov
xchg
and
push
ds
pop
test
xchg
idivb
popf
lahf
andb
mov
repz
inc
dec
loopne
hlt
je
pop
stc
push
xor
sbb
pop
pushf
pop
dec
hlt
in
and
jb
dec
xchg
pop
into
cltd
fidivrs
js
sbb
jmp
cmp
mov
fucom
push
imul
pushl
insl
cmpsl
jge
push
lar
mov
jae
push
and
sbb
jae
mov
leave
hlt
xor
pop
aas
ret
ret
das
shlb
movsb
stos
fnstsw
daa
rorb
mov
pop
inc
insl
leave
sahf
loop
sub
xor
jo
js
xchg
stos
jl
jno
popf
in
ja
pusha
mov
in
cld
out
dec
arpl
mov
and
or
sti
push
frstor
adc
hlt
xchg
aad
fdivp
in
or
shl
call
and
adc
mov
fldcw
aad
cld
out
out
cmp
mov
jle
jo
dec
jecxz
loop
push
scas
cs
arpl
in
pop
jbe
stos
mov
push
sarb
std
test
mov
mov
jg
out
and
cs
push
in
mov
jo
and
pop
ds
insb
jg
cli
loopne
jl
sbb
mov
gs
xchg
dec
sbb
jmp
xchg
enter
mov
std
or
daa
out
fiadds
in
xor
repz
mov
xchg
aas
xchg
mov
out
je
xor
imul
test
pushf
cli
popf
jmp
xchg
mov
divb
int
mov
pop
push
icebp
int
jecxz
test
lods
js
xchg
popa
mov
ret
mov
lods
push
jbe
lret
mov
jmp
out
mov
in
sbb
cmpsb
fcomp
das
add
jge
jecxz
push
cmp
clc
mov
add
ljmp
sub
push
rcrb
cld
imulb
adc
mov
pop
push
aam
cmp
scas
mov
or
repnz
loop
adc
xchg
scas
jno
fnsave
cmp
loop
test
mov
out
or
das
pop
iret
clc
sub
pusha
scas
xchg
pusha
scas
mov
into
ljmp
sarl
jns
jl
pop
scas
lock
fbstp
mov
mov
inc
ja
nop
pop
adc
ljmp
js
cli
dec
xor
cs
and
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
sbb
js
jbe
jno
cmp
lods
cmp
lods
int
pop
aaa
inc
jns
aam
nop
cli
jns
test
aad
dec
mov
insb
popf
shl
shll
inc
inc
pop
std
pop
loope
cmp
stc
push
pusha
inc
xor
pop
scas
fisubl
pop
lret
inc
pop
fstpt
jecxz
shr
shl
orb
push
pop
clc
loope
jbe
sbb
push
int
adc
and
fwait
dec
cli
ret
xor
or
out
out
jp
sbb
inc
mov
jle
sbb
xchg
mov
sti
push
xchg
cld
mov
cwtl
cmpb
lods
mull
movsb
jmp
and
int
les
jl
jg
fsubr
or
and
cltd
mov
std
push
andl
mov
popf
push
jmp
fdivrl
jae
mov
lock
mov
inc
push
mov
out
push
jo
aad
mov
xchg
xchg
xchg
xor
mov
add
cmp
sub
mov
gs
xor
adc
inc
sub
test
jle
cmp
ljmp
arpl
jnp
ja
lds
cmpsl
int3
lcall
test
jae
les
push
sub
int
xchg
dec
fldt
add
mov
sub
sub
pop
rcrb
mov
shll
nop
ret
in
cmpsb
test
outsb
push
dec
aaa
adc
movsl
sbb
mov
push
mov
and
pop
jb
ds
push
mov
shl
int
repnz
shr
ja
mov
hlt
mov
xor
dec
sbb
xor
sub
or
sub
xchg
push
inc
sbb
cmp
mov
in
jne
mov
jle
sub
mov
dec
mov
mov
sbb
pop
in
enter
ss
dec
out
pushf
mov
mov
cmpl
cs
push
dec
or
sub
loope
mov
sub
cmp
sbb
dec
out
popf
dec
adc
stos
movb
ljmp
mov
xchg
ret
test
and
add
dec
inc
push
cltd
bound
popa
pop
rclb
es
ja
arpl
inc
out
test
dec
adc
das
jae
sub
in
adc
call
dec
fcomps
mov
sub
sbb
mov
aas
dec
ljmp
cwtl
repnz
stos
pop
add
pop
and
xchg
call
dec
into
jne
push
lret
adc
mov
inc
lea
roll
sub
subl
icebp
dec
xor
inc
mov
mov
xchg
xorb
push
sub
loop
mov
xor
sub
pop
sbb
adc
or
dec
mov
icebp
jge
dec
sbb
jns
add
test
mov
pop
add
outsl
pop
pusha
popa
das
jge
or
push
pop
rcll
in
inc
adc
adcl
sub
cmp
push
insl
cltd
popa
in
ds
xor
jge
push
and
push
daa
lahf
mov
stos
jmp
xor
cmp
dec
sti
jl
inc
popf
push
mov
xor
mov
adc
add
jge
enter
je
iret
sahf
rcr
aas
cwtl
nop
addb
dec
aam
jecxz
lret
rcll
inc
pop
xor
int3
or
xlat
rcrl
dec
jl
xchg
cmpsl
sub
cwtl
xchg
cltd
out
jl
insl
lcall
and
or
xchg
div
outsb
mov
cli
ja
rclb
inc
rcll
mov
mov
ljmp
cmp
jno
xlat
adc
stos
cltd
cmp
bnd
cs
push
push
pop
adc
pop
mov
dec
insl
and
push
outsb
fnsave
in
pop
mov
popa
cs
repz
ss
enter
cltd
add
les
mov
push
fisttpll
push
cwtl
xor
mov
pushf
or
mov
call
push
pop
into
cwtl
cmc
out
adc
mov
pusha
outsb
push
inc
push
ds
into
inc
jae
in
fwait
data16
int3
mov
jg
mov
mov
sbb
mov
repnz
xchg
fcmovnu
repnz
mov
cmp
popa
imul
daa
push
xchg
adc
pop
loop
sub
stos
and
sbb
jmp
pop
xorl
mov
jmp
repz
leave
rcll
sub
add
aaa
pushf
insb
popf
sbb
loopne
adc
mov
xlat
out
movsb
addr16
icebp
out
movsb
movsb
mov
je
filds
adc
jbe
rcrl
fisttpl
xchg
dec
dec
cmpsb
loop
mov
add
iret
out
imul
idivl
push
and
pusha
cmp
or
cs
int
xor
orl
push
push
pop
mov
das
pop
xor
std
das
and
call
mull
dec
jbe
xchg
xchg
add
mov
into
rcrl
das
xlat
cmp
jae
out
into
push
daa
js
out
clc
mov
mov
sbb
lret
pop
mov
mov
and
push
mov
leave
lahf
push
ds
and
push
out
mov
or
xor
mov
test
repz
fnstenv
and
xor
jno
xor
lret
loopne
add
stos
mov
xchg
fwait
outsb
xor
pop
and
shlb
int3
jg
add
jle
adc
mov
arpl
xorl
movsl
xchg
out
fstpl
dec
idivl
lods
mov
mov
push
pusha
mov
arpl
out
cli
inc
cld
or
mov
jl
adc
jl
or
push
dec
mov
ret
jecxz
xlat
cmp
mov
jmp
addl
insl
add
cmp
int
fsub
push
addr16
jbe
add
rol
mov
popa
and
mov
les
pushf
cmpl
dec
or
and
mov
xor
adc
or
pop
push
add
jle
mov
stos
rclb
testb
stos
je
fadds
scas
mov
jl
xchg
jns
cmp
popf
mov
mov
in
adc
fcom
inc
or
xchg
hlt
stc
pop
xchg
sbb
mov
xchg
jne
ret
mov
sbb
fisttps
xor
andb
push
add
inc
and
push
push
mov
lcall
mov
jbe
sbb
mov
ffree
mov
xorb
mov
std
shll
mov
adc
es
dec
out
add
cmp
loop
adc
push
shr
icebp
clc
and
xchg
push
lock
fstpl
sub
mov
aad
inc
orl
add
or
sti
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
inc
dec
jbe
addl
mov
cmpsb
add
lcall
mov
sbb
add
cmc
repnz
ds
popf
lahf
pop
sti
inc
icebp
xlat
jns
ficomps
shll
dec
in
fucomp
push
mov
pop
dec
xchg
int3
test
subl
cmp
cmp
lods
and
pop
mov
mov
adc
sbb
xlat
mov
lcall
mul
repz
test
hlt
or
cmp
fiaddl
imul
ret
adc
mov
stos
insl
sub
fisttpll
cltd
jl
setle
and
rol
loopne
icebp
mov
outsl
pop
mov
push
lds
sub
push
jnp
jmp
jp
icebp
outsl
mov
fbstp
in
mov
lods
enter
mov
sub
daa
adc
aad
fucomp
add
and
dec
jns
and
inc
sbb
jb
mul
mov
or
mov
and
test
push
fistpll
mov
lock
push
lret
inc
imul
loop
xchg
insb
lods
aaa
insb
mov
rolb
movsb
cwtl
js
js
xlat
call
or
push
cmp
out
push
pop
shlb
in
mov
das
cmc
hlt
xor
imul
mov
inc
pop
ljmp
pop
out
andb
pusha
mov
bound
or
pop
xchg
dec
in
cmp
lret
sbb
xor
enter
mov
cmp
movsl
mov
cmc
and
lret
add
or
dec
inc
popa
dec
mov
sti
adc
xchg
push
xchg
pop
icebp
dec
dec
mov
das
shll
adcb
shrl
lea
dec
nop
testb
or
mov
jno
xchg
icebp
inc
sub
xchg
imul
push
out
cltd
enter
nop
ss
lds
push
je
out
rorl
into
mov
fsubs
lds
add
push
mull
push
repnz
push
leave
pop
push
cmp
pop
orb
arpl
mov
mov
or
fists
les
mov
lahf
pop
outsl
jecxz
xor
or
sub
xchg
call
mov
xchg
dec
add
pusha
test
call
outsb
lret
xor
dec
stc
adc
sar
daa
sbbb
ss
or
xchg
mov
push
push
push
pop
cmp
ds
mov
mov
lods
or
stos
cli
call
aam
movsl
mov
xchg
repnz
bound
mov
sahf
xchg
clc
sahf
insl
icebp
out
je
cmpsl
sub
or
out
jge
jb
int
nop
stos
in
xchg
pushf
in
in
mov
pop
mov
cmp
rolb
test
imul
sbb
ret
fwait
mov
pop
jbe
je
dec
pop
ja
xor
shll
xor
inc
aas
sub
divl
pop
clc
inc
notb
imul
and
jle
push
jmp
js
sbb
xchg
fcmovne
test
xchg
pop
xchg
mov
cmp
pop
aam
inc
cmc
pop
lret
add
adc
jp
mov
and
xchg
mov
adc
lods
xor
lret
adc
or
test
pop
cmp
push
insl
cld
out
hlt
or
out
inc
sub
insl
cmp
cmpsb
jb
les
in
jp
rclb
dec
out
adc
xor
mov
push
test
repz
xor
jle
and
cltd
mov
push
dec
inc
sub
xor
jp
add
jne
or
inc
add
insb
mov
stos
sarb
sahf
sbb
mov
cmpl
loop
in
addr16
fcompl
arpl
aaa
mov
jg
lcall
dec
cmpsl
jns
mov
push
fidivrs
pop
enter
ljmp
or
mov
xchg
xor
mov
push
insl
mov
xor
icebp
cmp
mov
imul
fs
adc
stos
fisubrs
fnsave
bound
cmp
xor
lea
xchg
cmp
test
dec
pop
cwtl
hlt
push
mov
lea
out
stos
mov
stc
mov
stos
aad
daa
inc
sub
loop
cs
dec
inc
shrb
ret
mov
mov
xchg
inc
test
jecxz
mov
nop
jae
loope
xor
rcrl
push
loopne
std
in
push
jnp
xchg
aas
mov
out
pop
adc
sbb
or
cmp
stc
push
insb
pop
cld
fstl
fcmovnb
inc
add
mov
jnp
cmp
push
jno
sub
push
dec
ret
jl
sub
imul
or
ficoml
lret
and
jecxz
adc
sub
add
inc
pusha
outsb
mov
sub
xor
push
inc
inc
xchg
adc
test
scas
data16
push
pushf
pushf
jg
add
je
jmp
xchg
cld
cmpl
lea
in
inc
jl
push
adc
mov
push
les
pop
jne
gs
xchg
and
test
and
mov
xchg
aas
xor
hlt
jne
test
lcall
jae
dec
jle
sbb
push
pop
jge
mov
pusha
cmc
jns
aam
mov
mov
cmp
pop
in
cltd
repnz
ds
or
xor
ljmp
loopne
push
call
hlt
insb
fcomps
sti
sub
push
out
pop
sub
gs
xchg
mov
aad
mov
outsb
sub
dec
xor
xchg
ss
not
mov
inc
mov
inc
pop
mov
push
mov
fstl
dec
sbb
mov
cmp
dec
aam
xor
jne
add
jp
mov
pop
ds
adc
sarb
clc
test
das
mov
rclb
mov
add
lods
iret
add
sbb
ljmp
sbb
outsb
sahf
ret
sub
sub
pushf
int
cli
in
dec
lret
fimull
cli
add
out
xlat
jno
pushl
adc
stc
or
test
inc
into
sub
les
xchg
addl
aad
imul
xchg
gs
mov
jne
jb
xor
inc
imul
dec
mov
inc
jmp
xor
jb
in
icebp
push
lahf
mov
inc
xchg
cli
sti
hlt
roll
mov
mov
sbb
jns
mov
dec
lret
in
jo
lret
inc
jge
xor
xchg
fistps
push
ja
add
loop
gs
xchg
mov
daa
outsl
mov
inc
push
popl
inc
leave
or
mov
mov
je
jns
lock
movsl
fmuls
testl
pop
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
jecxz
push
add
add
cmp
rol
adc
or
stos
in
cli
ja
mov
mov
xor
lods
jmp
std
pop
add
int
test
mov
xchg
jmp
enter
pop
push
lahf
cltd
pop
lds
xor
pop
shr
push
popa
insb
jp
scas
addr16
xchg
nop
push
push
jae
ret
sti
mov
aad
sbb
xlat
gs
scas
xor
xorl
in
dec
adcb
and
push
cmpsl
xchg
lods
sahf
movsb
dec
dec
imul
shll
cmc
pop
sub
add
fistpl
mov
mov
sub
ljmp
sub
andb
adc
fisubs
add
ja
sub
sub
int
pop
jecxz
pop
cwtl
add
sub
scas
repz
jg
aad
mov
or
test
adc
cmp
sbb
mov
adc
rorl
mov
fiadds
or
js
xor
jns
push
mov
mov
xchg
sub
into
loopne
out
mov
rorl
mov
leave
jb
rolb
les
adc
inc
jnp
fidivs
cmp
fwait
lret
pop
jp
pop
mov
sub
pop
ja,pn
insl
sbb
clc
mov
mov
push
fcomps
int3
xor
sub
mov
push
dec
jp
jnp
sub
dec
sbb
int
lods
cwtl
stc
stos
lahf
ds
xchg
or
and
sub
shr
mov
bound
mov
cmp
sub
or
aas
add
mov
arpl
adc
into
sti
or
sahf
cmpsb
sub
aam
dec
push
lods
add
adc
adc
aas
movsb
dec
cmp
push
andl
xchg
push
mov
je
in
and
cmp
add
rcrb
inc
inc
cwtl
jo
push
push
cmp
xor
int3
out
shlb
lret
dec
jbe
icebp
ljmp
fmuls
jmp
aam
or
in
push
lret
jg
les
pop
lahf
lds
pushf
sti
lea
pop
mov
fdivs
shrb
scas
mov
loop
lret
jno
into
stos
mov
pop
sbb
pop
add
fisubrl
loope
jo
jb
data16
pop
pop
or
mov
cli
scas
adc
mov
scas
lds
mov
dec
int3
mov
daa
dec
dec
arpl
fidivl
or
xchg
sar
ret
mov
sbb
xor
pushf
xchg
sbbl
mov
rclb
imul
out
mov
mov
inc
cmpsb
testl
insl
jns
or
dec
sbb
or
jl
inc
pusha
mov
push
adc
mov
mov
pop
inc
push
lods
mov
pusha
testl
mov
mov
repz
jnp
aas
dec
sub
data16
mov
test
lds
push
push
jnp
mov
adc
insl
iret
rclb
and
int3
xor
and
clc
jg
pop
dec
fists
xchg
jnp
unpckhpd
leave
sub
jb
xor
cmp
push
xchg
cmc
flds
push
icebp
inc
hlt
int3
lcall
fsubs
roll
pop
mov
bound
jo
dec
adc
push
mov
movsb
cwtl
in
lcall
mov
lea
mov
xchg
scas
adc
cmp
outsb
nop
notb
scas
jge
mov
jge
adc
out
dec
jl
xchg
xchg
andb
test
cmc
pop
pop
pusha
push
stc
push
sub
and
xlat
stos
into
pop
out
push
fdivr
out
xchg
aam
loopne
out
rcr
jecxz
fs
mov
mov
pop
ret
addb
lret
cwtl
fisttps
push
push
in
mov
int
arpl
shlb
daa
sbb
fsubrs
es
push
test
pop
lods
cmp
popf
mov
stos
mov
xchg
and
mov
leave
push
repz
dec
adc
mov
cmc
xchg
and
rolb
aad
xchg
cmc
push
fwait
lahf
in
test
lods
popf
push
xor
sub
popa
add
fwait
add
test
fnstcw
ds
test
lea
sti
push
out
loopne,pt
jle
int
outsb
insl
inc
lahf
cmpsb
out
roll
or
insb
pop
mov
sahf
xchg
xor
adcb
dec
jg
push
out
pop
fsubrs
clc
xor
ret
hlt
cmc
insb
or
sub
das
jb
inc
pop
push
gs
rclb
inc
mov
fdivrs
call
psraw
jns
inc
jmpw
inc
sub
sub
adc
scas
bound
mov
sbb
lcall
lds
or
inc
cmp
fstl
push
inc
fstps
pop
mov
ja
dec
aaa
push
or
sub
mov
int3
or
fstpt
jp
jp
stc
repnz
outsl
jge
push
dec
and
pushf
mulb
inc
sub
push
les
rcll
mov
mov
dec
lret
test
fucompp
fadds
xchg
std
push
xchg
into
dec
aam
mov
pop
dec
hlt
or
adc
cmp
and
cmp
mov
pop
pop
inc
cmc
clc
repz
xchg
or
dec
cmpsb
lock
sahf
or
fyl2xp1
sahf
lahf
das
xchg
ss
push
jg
lock
movsb
test
xchg
lcall
push
je
pop
shrl
push
fmull
insl
sub
jo
cld
notb
cs
xor
mov
sbb
mov
dec
mov
inc
add
into
or
out
js
pop
push
das
push
das
ret
popf
iret
push
xchg
mov
mov
in
fldt
pop
adcl
leave
adc
cmp
aad
mov
add
mov
mov
xchg
cs
inc
iret
cli
push
daa
iret
loope
fwait
ud1
cmp
sbb
push
rorb
pop
bound
nopl
xor
jne
and
cmpb
je
popa
mov
xchg
mulb
aad
push
in
repz
lods
adc
test
jbe
es
mov
stc
repz
dec
iret
or
or
inc
or
arpl
sub
adc
outsb
jns
sub
cltd
or
ljmp
dec
add
testb
sub
mov
push
lret
les
add
mov
imul
fmul
jo
les
stc
sbb
cmpb
ljmp
jnp
ds
cmc
mov
hlt
int
pop
jp
mov
fmuls
and
xor
push
sub
clc
xchg
cmpl
mov
ds
pop
jbe
fistps
inc
add
popa
pop
or
or
test
loope
lcall
in
fiaddl
jmp
lea
idivb
push
test
dec
fimull
sbb
cmc
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
push
lea
es
jnp
mov
and
in
mov
ljmp
inc
mov
mov
jp
xor
pop
push
cwtl
outsl
imul
test
adcb
mov
and
dec
test
xor
mov
jae
ds
repz
cmp
jl
lods
mov
pop
jo
add
cmpsb
pop
inc
sub
imul
in
aaa
and
xchg
cmpsl
pop
adc
sbb
sbb
mov
pushf
adc
mov
leave
daa
outsb
jae
aas
dec
jle
push
jbe
xchg
xor
jb
inc
mov
popf
xchg
mov
arpl
or
xchg
cmp
cmp
pop
or
adc
xor
stos
dec
mov
ss
sub
rcrb
dec
imul
dec
cmc
xor
je
into
mov
rol
in
xchg
cmpsl
pop
fsubl
jp
test
cmp
in
pop
jnp
andb
insb
andb
add
inc
jl
xlat
rolb
cld
fistl
jl
adc
push
arpl
or
testl
das
fiadds
dec
push
add
aad
frstor
lods
add
jbe
testl
and
cmpsl
inc
adc
jecxz
in
shll
push
add
mov
outsl
repnz
outsl
std
push
pop
ds
xchg
sub
push
dec
shlb
clc
mov
dec
cs
fimuls
test
cld
aam
shlb
inc
xor
mov
fsubs
aaa
cmp
daa
insb
fiadds
sub
imul
or
fs
cmp
sub
mov
pop
jmp
sub
adc
cmp
xchg
xor
cwtl
inc
add
stos
test
mov
enter
popf
test
jl
nop
sub
add
lea
adc
or
cld
nop
mov
dec
pushf
mov
lret
push
mov
pop
fisubrl
ljmp
inc
pop
and
lds
sub
dec
jp
jb
sbb
mov
or
adc
lret
push
mov
popa
rcll
in
jo
adc
jo
pop
cmp
push
packsswb
mov
mov
int3
das
movsl
jbe
mov
popa
push
and
dec
rolb
daa
fbld
fidivrs
lret
call
subl
inc
out
pop
xchg
mov
dec
fwait
movsb
daa
daa
add
fwait
lcall
jl
mov
ss
iret
shlb
adc
mov
sub
cmp
mov
sub
mov
mov
push
dec
lods
in
nop
mov
push
ficoml
in
cmp
mov
xchg
sti
push
or
ljmp
outsb
or
jle
jnp
cmpsb
lods
pop
push
push
adc
adc
mull
jne
mov
aam
cwtl
mov
mov
repnz
arpl
mov
cli
xchg
xchg
push
shlb
aam
jge
clc
mov
jge
loope
and
dec
popa
jecxz
insb
shrl
ja
mov
sub
int
movsl
dec
cwtl
idivb
pop
xchg
dec
adc
push
mov
data16
xor
pop
das
cltd
mov
mov
cmp
not
push
out
push
iret
cwtl
sub
movsl
mov
rcll
dec
mov
sbb
int
pop
je
std
aad
arpl
fistpl
mov
or
es
push
fistpl
lods
out
inc
jge
ret
xchg
mov
pusha
cltd
repz
or
pushf
adc
jp
repnz
movswl
arpl
dec
jmp
sbb
leave
jg
jb
mov
daa
cwtl
in
xchg
jg
lods
add
dec
push
mov
jne
jecxz
aaa
bound
daa
fcmove
and
fcoms
aad
arpl
mov
enter
push
or
fidivrs
jns
xchg
insb
xchg
jmp
cmp
cli
push
roll
xchg
lret
pop
xor
ja
sub
int3
popl
pusha
xchg
iret
push
xor
ficoml
jmp
mov
jecxz
push
sbb
jl
fadds
dec
mov
shl
shr
aas
mov
xchg
jne
mov
ret
push
cltd
lods
les
test
aaa
lds
mov
push
mov
adc
subb
cld
push
sub
ljmp
fwait
mov
inc
clc
sbb
mov
lock
rol
cwtl
sbb
imul
pop
fs
adc
orl
add
and
fwait
lods
and
push
popf
sub
daa
mov
mov
mov
mov
mov
scas
ss
roll
push
pop
dec
scas
sub
xchg
push
cmpsb
jle
xorb
jo
cmp
shr
sub
sbb
mov
call
inc
pusha
add
movaps
lret
ds
cmp
push
lods
insb
dec
cmp
cmpsb
and
cmp
jp
cmp
lret
sub
push
push
xorl
adc
or
and
rcl
out
rcl
adc
sti
test
neg
add
xchg
sub
add
leave
filds
or
mov
sub
movsb
xchg
pop
outsl
mov
fsub
sub
adc
insb
push
repnz
stos
push
adc
mov
shrb
xor
and
and
jmp
xchg
jle
push
mov
cltd
or
repz
int3
les
out
sbb
stos
xchg
jae
push
add
add
mov
xchg
fcompl
jmp
mov
xchg
or
lret
scas
dec
movsb
pushf
into
sbb
or
dec
addb
xchg
cmp
xchg
push
mov
ds
in
faddl
and
aaa
adc
and
or
jmp
xchg
cmc
add
dec
lcall
in
sbb
loope
addr16
test
mov
pop
sub
dec
adc
aaa
sub
arpl
sahf
mov
and
cmpsl
mov
inc
sar
mov
push
shll
pushf
sub
mov
xor
cmp
push
push
icebp
jbe
fnstenv
outsl
popa
loope
dec
sbb
shrl
sub
xchg
cmp
pop
inc
mov
mov
pop
adc
adc
pushf
or
pop
stos
inc
cmpsb
xchg
mov
test
push
roll
inc
fdivrs
pop
psubq
stos
and
mov
bnd
mov
dec
popf
shll
mov
fwait
pop
adc
lret
outsl
and
aam
mov
push
mov
movsb
xchg
xchg
fwait
dec
sub
xor
repz
ficomps
dec
inc
and
cltd
fcom
add
add
fbld
fdivr
ror
in
mov
xchg
pop
test
adc
jp
dec
in
rorl
and
pop
mov
jns
shlb
mov
cmpl
adc
cld
jl
adc
mov
shlb
fistps
inc
inc
add
xor
pop
inc
inc
add
rorl
dec
rorb
mov
xor
mov
mov
mov
adc
jmp
fbld
and
sub
mov
addl
mov
mov
xchg
sub
jnp
ja
jne
dec
dec
and
movsl
jp
sbb
mov
fisttpl
push
test
es
jno
daa
sbb
popf
daa
imul
xchg
bnd
jne
iret
jmp
xchg
adc
ds
cmp
jae
call
repnz
bound
sbb
inc
xchg
test
cmp
js
cmp
push
jns
and
stos
xlat
mov
ss
enter
dec
aad
mov
int3
cmpsb
and
and
add
xor
jp
iret
or
loopne
daa
fcoml
ror
jl
std
mov
cmp
out
mov
mov
xor
sbbl
loop
add
out
jb
cmp
in
rorl
ret
pop
mov
mov
and
add
sbb
imul
xor
aad
cmpsb
leave
xchg
arpl
push
inc
roll
cmp
loop
lods
aad
data16
out
cmp
insb
jge
lahf
pop
int3
rcrl
ds
sub
pop
fisubs
aam
lret
das
stos
or
lret
lcall
fistpl
mov
adc
orb
call
inc
adc
xor
push
cmpsl
dec
push
out
ficoml
mov
enter
sarl
xchg
or
cmpsb
cmpsb
pop
sub
cli
jns
jecxz
xchg
or
pop
popa
or
pushl
cmp
popa
mov
jnp
cli
push
in
sub
rcrl
adc
mov
repnz
in
addb
mov
pop
test
aas
repnz
cmp
sbb
lret
outsb
cmpsl
aaa
lds
sbb
cmp
ss
and
and
jge
mov
sbb
push
int
jno
mov
and
dec
pushf
push
repz
clc
add
loope
sahf
nop
sbb
cld
pusha
mov
lcall
fadd
add
fldcw
std
ficomps
insl
out
lret
pop
mov
xor
ret
call
mov
rcll
mulb
inc
int
xor
cwtl
push
je
roll
dec
jae
push
jns
mov
lcall
lahf
xchg
or
push
mov
mov
push
les
fldln2
mov
sub
mov
sbb
popf
xchg
lea
mov
inc
pop
sub
mov
jns
push
movsb
sub
outsb
mov
lds
addr16
inc
adc
xor
mov
inc
mov
das
or
inc
push
shr
ljmp
mov
sbb
aad
sub
dec
ljmp
sub
inc
pushf
fstpl
dec
leave
sub
scas
in
sub
jmp
out
jl
inc
mov
push
cmc
xchg
std
outsl
xor
push
inc
mov
arpl
add
push
movb
mov
and
xchg
stos
mov
sub
jbe
inc
xchg
and
mov
out
add
outsb
callw
enter
imul
jnp
or
push
push
ret
aad
inc
inc
cmp
sub
xor
outsb
pop
jge
lock
popf
push
push
test
test
or
mov
or
adc
fidivl
push
mov
or
loope
lods
sarl
mov
cmp
push
inc
xchg
rol
or
xor
jmp
in
pop
sbb
sub
lcall
stos
mov
pop
and
fdiv
jge
repnz
jbe
and
mov
gs
test
shll
and
jo
dec
cmc
sub
cs
out
jmp
lods
in
push
stos
in
sub
mov
mov
ss
cmp
cmp
out
mov
scas
movsb
adc
js
rclb
pop
adc
push
jp
ja
lret
enter
arpl
sbb
out
jns
in
je
push
pop
mov
fsub
cmp
inc
movl
aam
lock
mov
jbe
sbb
movsl
and
xor
cmp
int
lret
clc
dec
sbb
in
jne
fdivrl
fs
sub
fwait
enter
aaa
sbb
pushf
das
iret
addr16
fwait
adc
in
scas
pusha
push
ljmp
mov
xor
xor
std
pushf
ja
jmp
adc
add
insb
jmp
stc
mov
dec
pop
push
mov
out
pop
js
fldl
or
add
in
fisttpll
pop
test
outsb
inc
xchg
push
inc
imul
sbb
xor
std
leave
push
repz
jae
adc
sbb
pop
mov
cmpsb
cmp
aaa
mov
mov
addr16
ret
bound
fisttpl
mov
leave
push
add
repz
xor
out
inc
adc
dec
mov
test
leave
xchg
push
mov
xchg
pop
dec
inc
fimull
jb
sahf
mov
sbb
adc
mov
mov
ja
dec
dec
jo
adc
add
out
mov
xor
lea
jne
or
xchg
sbb
xchg
mov
and
push
push
arpl
adc
cli
push
fwait
mov
mov
insl
test
xchg
daa
rcrb
or
out
jecxz
in
push
mov
xor
sbbb
roll
fstl
adc
int
mov
es
add
mov
fstpt
mov
in
fidivl
sarl
iret
sbbb
pop
jne
xorb
aas
hlt
inc
and
push
shl
lock
xor
mov
fcompl
adc
xchg
sub
arpl
setnp
sbb
mov
xchg
movsl
ret
outsl
pushf
out
jmp
pop
icebp
stos
push
repz
cmpsl
sbb
mov
sahf
and
dec
adc
scas
and
imul
pop
and
sbb
rcr
push
ss
xchg
js
lret
mov
outsb
lock
insl
cli
jg
fucomp
mov
or
jg
mov
sbbb
push
xor
fwait
mov
inc
push
sub
xchg
xchg
insl
ljmp
insl
in
mov
repnz
loope
mov
std
testb
idivb
mov
into
fstpt
dec
fistl
aaa
loope
and
xchg
cmp
inc
pop
ljmp
mov
pusha
or
inc
pop
in
in
lds
mov
cmp
and
lret
rcl
pop
cmpsb
or
movsl
scas
cmpsl
mov
mov
ret
fdivs
bound
mov
rcrb
push
scas
mov
add
mov
out
push
cmpb
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
sub
stc
jns
xlat
push
mov
and
jnp
movsb
int
cmp
nop
lods
fwait
jne
hlt
and
lcall
popf
out
cmp
je,pt
jb
sub
inc
das
jnp
cmp
jns
inc
xchg
mov
pop
push
xchg
lods
cmp
cld
inc
dec
jns
addr16
mov
jbe
mov
xchg
sub
dec
in
or
das
adc
adc
outsl
cmp
fistps
xor
sub
adc
lods
lret
push
cmp
pop
mov
pop
popf
inc
shll
ja
cmp
dec
repnz
fnstsw
xchg
adc
fstpl
pop
pop
mov
aas
push
cli
add
xchg
lcall
xchg
loopne
mov
xor
pop
push
or
xchg
or
push
sbb
add
or
insl
pop
pop
xchg
lcall
pop
mov
cmp
push
scas
mov
jg
mov
pop
ds
mov
inc
mov
pop
mov
std
xchg
les
sub
xor
mov
insl
jb
out
bound
int
cmc
negb
mov
cmp
aam
sbb
lret
sbb
pop
and
icebp
sub
mov
lret
mov
shll
mov
out
addr16
in
subb
stos
cmc
ret
iret
ficoms
mov
sbb
adc
dec
aas
stos
aam
adc
fcoms
sub
ds
cmp
add
xchg
je
sbb
insb
repz
dec
cmp
or
jb
mov
pushf
mov
and
and
movlps
enter
in
adc
add
xchg
addl
xor
sbb
cmpsb
test
sbb
cwtl
fdiv
in
ljmp
add
or
jnp
sub
jmp
aam
aaa
popl
scas
or
inc
sbb
pop
neg
hlt
mov
call
addr16
lock
jo
mov
stos
rorb
sbb
add
test
sbb
xor
cwtl
aam
es
xlat
xchg
push
test
sbb
push
or
jmp
and
call
and
cwtl
inc
pop
and
mov
shll
xor
sub
test
popf
and
es
jle
mov
stos
lcall
or
cld
data16
xor
or
dec
cmpsb
xlat
jmp
adc
push
dec
dec
and
movsl
shrl
cmpsl
and
fisttps
mov
or
jmp
movl
jne
jg
repnz
mov
outsl
aas
dec
jns
pusha
test
jge
dec
sahf
sarb
cli
mov
adc
xorb
enter
enter
adc
push
icebp
call
cmp
xor
cmp
shlb
rorb
xchg
in
pop
into
aaa
dec
or
push
es
mov
pop
xor
mov
mov
mov
outsl
pop
mov
pop
cltd
gs
jnp
mov
pop
aam
mov
jno
imul
test
mov
mov
mov
int3
enter
test
sub
inc
int3
cmp
xchg
cli
in
nop
prefetch
or
and
insb
push
lods
scas
call
test
add
mov
mov
sbb
fsts
lds
mov
jmp
dec
push
aam
xchg
mov
jne
aaa
dec
mov
int
push
andb
jbe
movsl
aam
jge
xchg
int
fcmovne
or
jmp
sub
jp
imul
push
aaa
std
fmull
dec
repz
nop
jg
and
push
lahf
dec
shlb
ret
cltd
lea
sub
jb,pt
mov
movsl
push
test
adc
cmpb
aad
mov
jb
fsubr
dec
and
fwait
repnz
adc
mov
inc
dec
sbb
dec
sbb
xlat
sbb
push
std
test
and
xor
or
ljmp
je
fs
das
inc
or
mov
sub
mov
lret
adc
and
lfence
in
out
pop
push
sub
rolb
mov
fisubs
inc
mov
mov
adc
js
movsb
cmp
and
sub
xchg
mov
les
daa
dec
inc
js
jge
imul
pop
sbb
add
mov
dec
test
mov
cmp
xchg
mov
jge
movsb
adc
popl
mov
mov
fsubl
pop
mov
add
cmc
aad
repnz
pop
jno
hlt
insb
xor
call
cmp
test
inc
lret
std
sahf
sub
mov
push
ja
test
in
mov
pop
testb
sbb
mov
and
sbbl
movsl
and
xor
dec
mov
pop
divb
mov
repnz
xor
stc
xor
push
scas
pop
imul
jle
iret
push
sub
jmp
mov
pop
xlat
jmp
push
cltd
jg
mov
adc
je
adc
cs
add
gs
mov
mov
pop
xchg
fs
jmp
leave
out
fisubrs
push
inc
and
sub
loop
shrl
lods
test
jne
sbb
and
jo
mov
cwtl
pop
jp
and
pop
sub
inc
leave
push
imul
push
scas
or
fcmovnbe
cmp
jbe
leave
mov
jno
loope
sub
pop
adc
dec
jecxz
inc
shlb
clc
push
mov
xchg
aam
out
xor
inc
jl
add
popa
sar
mov
pop
jle
sub
cli
pushw
lock
xchg
inc
cwtl
cmp
mov
sbb
out
and
sti
push
inc
cwtl
negb
repz
mov
pop
sbbl
lret
out
mov
cmp
mov
pop
loope
out
cwtl
cld
fcoml
movsb
lock
fidivrl
mov
add
rorb
xchg
pop
or
icebp
dec
adc
andb
lcall
bnd
ret
das
dec
int3
and
std
lcall
add
sahf
jno
jg
inc
mov
mov
mov
jbe,pn
adc
dec
fcoms
mov
mov
dec
cmc
xlat
scas
jbe
sarl
jae
jmp
xor
test
fmul
mov
inc
cmp
popf
add
cmp
mov
mov
repnz
adc
stc
push
icebp
mov
andb
pop
loope
les
push
je
jnp
jb
mov
scas
inc
jg
and
lea
test
push
inc
dec
mov
cmpl
mov
popa
inc
cmc
divb
xchg
adc
stos
test
daa
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
out
xchg
scas
adc
jno
mov
fcom
and
lcall
leave
xchg
lea
inc
dec
insb
mul
ret
pop
dec
xor
push
cmp
movsb
lret
xchg
jl
int
push
lcall
mov
testb
jecxz
add
sub
inc
push
mov
fnstcw
faddl
popa
loop
orl
je
icebp
or
cld
pop
sbb
mov
stos
leave
mov
call
iret
mov
lods
xor
xchg
outsl
jmp
pop
xchg
in
fcoms
jae
cmp
cli
pop
inc
cmp
repz
cwtl
test
dec
mov
or
sti
shlb
jp
out
pop
and
out
out
mov
fisubl
mov
or
cmpsl
cmp
cmc
movsb
sub
lock
inc
jo
add
add
or
add
fdivl
push
xor
repnz
nop
lcall
xor
ret
fbstp
mov
mov
enter
cmp
test
cld
pop
and
loop
arpl
mov
scas
cmove
je
xchg
or
sub
adc
xchg
and
into
testb
daa
sub
int
adc
fisttpll
mov
push
sub
jno
and
sbb
stos
fwait
inc
or
fdivl
jl
cmp
adc
mov
shr
outsb
xor
lcall
scas
notb
push
pop
iret
xchg
jae
inc
cmp
inc
dec
xchg
jmp
mov
inc
mov
jo
ja
and
pop
pushf
or
inc
ljmp
cmp
sub
inc
mov
add
and
jne
shrl
sub
lret
jmp
or
cmp
mov
mov
push
sbb
cld
push
or
inc
inc
jbe
add
data16
or
push
outsl
out
idivb
xchg
ljmp
loop
movsl
cltd
fcmovnu
jg
sbb
pop
stc
in
out
or
popf
inc
push
pop
lahf
xlat
sbb
mov
dec
jns
fists
aas
mov
inc
rcll
jo
mov
mov
fwait
adcl
push
xchg
jle
scas
and
xchg
dec
shl
jecxz
jle
jmp
push
popl
nop
scas
fidivs
sbb
cmp
inc
pop
or
mov
fs
jbe
ss
or
xchg
cld
stc
jp
mov
aad
sbb
xor
bound
popf
cmc
inc
xor
jno
insb
xchg
jg
ja
ficoms
ljmp
push
mov
push
inc
testl
pushf
add
sbbl
scas
cmc
daa
aaa
jb
loopne
jp
shl
es
popa
sub
iret
xchg
xchg
xor
in
insl
push
inc
sbb
xchg
gs
jmp
xchg
jge
xchg
bound
pusha
push
sbbb
xor
mov
insb
jmp
aad
inc
mov
je
adc
inc
fildll
lret
les
insb
aaa
push
pop
adc
mov
jmp
lret
mov
add
das
sbb
imul
mov
loope
call
sti
add
jo
outsl
mov
dec
les
fcompl
inc
cmp
arpl
call
popf
fwait
popa
sysret
sub
mov
into
cld
ds
push
mov
leave
dec
or
push
scas
mov
sub
inc
lcall
cli
push
dec
out
mov
nop
jb
mov
push
cmpsl
or
xor
adc
xor
aam
mov
adc
cmp
pop
xor
fisubrl
dec
xchg
iret
inc
dec
test
push
push
mov
mov
arpl
xchg
add
jmp
andl
movsb
mov
pop
sub
fmulp
xor
sub
mov
rorl
les
mov
push
xor
xor
jl
mov
loop
adc
or
fwait
mov
jns
pushf
dec
or
aaa
cmp
and
add
jne
mov
iret
in
into
ss
dec
mov
lret
mov
cmpsb
in
dec
dec
test
scas
cmpsb
int3
jb
das
add
cmp
dec
in
jle
xchg
push
ret
jne
pop
repz
out
jmp
repz
xchg
pop
out
sbb
and
in
jae
push
arpl
push
or
cmp
gs
mov
aad
mov
int
bound
push
push
lret
out
loope
pop
stc
mov
faddl
or
pushf
mov
pop
test
xchg
ljmp
in
mov
xor
fstps
ds
nop
cmpl
sbb
mov
xorl
sub
jb
cmp
icebp
adc
and
cmpsb
lods
xor
clc
sbb
stos
jmp
jo
mov
sbb
and
fs
out
sub
jne
or
mov
xchg
adc
mov
lock
lods
in
lods
cmc
xor
bnd
cwtl
or
pusha
or
sbb
cld
push
sbb
lret
jno
in
xchg
jns
pusha
push
add
sti
inc
clc
out
es
sbb
inc
jne
add
lock
inc
test
cwtl
jno
cmpl
sbb
lret
fstpl
js
sub
sbb
jp
sbb
mov
fmuls
into
mov
lods
in
addb
in
jb
mov
sbb
add
and
js
ds
cmp
adc
cwtl
outsb
iret
mov
dec
dec
push
data16
adc
fiadds
movsb
rsm
adc
cs
add
pop
stos
popfw
pop
jl,pt
jb
xor
mov
clc
sbb
lcall
jmp
es
pop
or
adc
mov
pop
fwait
mov
xchg
push
orb
jbe
sub
pop
sbb
loope
push
and
inc
xchg
push
push
das
adc
xor
stos
imul
or
lods
add
daa
loope
xchg
or
add
xchg
cmp
mov
adc
xchg
inc
or
fidivrl
ret
sub
pop
mov
jmp
add
fs
xchg
xor
mov
aas
dec
mov
dec
pop
xor
pop
lea
push
cmc
and
mov
xchg
inc
rcrb
mov
cmp
jmp
test
arpl
test
sar
push
jecxz
sub
roll
cmpsl
adc
aas
pop
push
lods
xor
cld
inc
cwtl
cmc
lret
xor
sub
pop
int
lds
adc
inc
lret
and
hlt
stc
mov
cmpsb
pop
cmp
movsl
or
ds
cmp
xor
pop
sbb
dec
sbb
in
cmp
mov
push
testl
js
jb
mov
ret
cmp
fsubrs
or
cwtl
fmul
lods
test
std
int3
mov
mov
cmp
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
lcall
jno
pop
and
subl
push
inc
insb
ja
mov
enter
adc
pop
pop
sbb
dec
mov
push
fbstp
inc
jmp
mov
dec
fistpl
xchg
sbb
cwtl
es
dec
ret
pop
jbe
ljmp
pop
and
cltd
pop
inc
ror
adc
cwtl
cmp
ret
popa
dec
xor
out
push
mov
int
addr16
mov
push
mov
mov
shll
cld
negb
dec
mov
test
mov
out
or
ljmp
test
inc
lods
mov
dec
fs
rorl
inc
gs
sbb
and
or
jg
sbb
ficomps
mov
push
mov
and
outsb
cld
and
mov
es
dec
sbb
pop
mov
adc
mov
and
lds
push
sahf
jge
inc
pop
fs
and
dec
lahf
js
sbb
stc
xchg
fnstenv
leave
push
add
cmp
jp
mov
adc
xor
ja
lcall
out
mov
add
mov
add
pop
mov
xchg
insb
es
push
imul
fldenv
fdivs
mov
push
jp
arpl
out
aam
sbb
ret
test
xchg
adc
xor
mov
inc
add
sub
mov
std
adc
add
inc
insl
mov
fbstp
loope
loop
lock
jo
jle
fisttps
xchg
cmp
out
push
xor
or
jecxz
fistpl
flds
mov
test
sbb
fbld
mov
test
inc
rol
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
