push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
mov
mov
movlps
pop
cmpsl
dec
xor
lea
push
repz
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
fwait
mov
testl
imul
std
lea
mov
ss
fisttpl
movsl
mov
xlat
loopne
jl
adc
std
cmc
adc
inc
sahf
mov
leave
jg
or
bound
sbb
pop
sahf
div
arpl
dec
cld
mov
shlb
into
arpl
pusha
add
push
inc
dec
push
stos
fldenv
xchg
and
fmull
xchg
push
stos
lcall
clc
scas
mov
cld
cmp
hlt
cmp
jle
lods
ja
test
insl
inc
dec
add
fstpt
push
xor
mov
lret
xor
pop
mov
xor
neg
call
cld
push
mov
jp
nop
and
out
stos
sbb
lahf
cld
pop
inc
mov
loop
fs
push
pop
jg
ds
pop
lahf
lcall
jle
out
adc
xor
jecxz
inc
lds
sbb
jl
popa
mov
xchg
sbb
dec
or
and
andl
pop
insb
and
fsubrs
rcrl
xchg
cli
mov
clc
xchg
popf
adc
test
cmp
jno
dec
fadds
push
lods
dec
mov
cmc
xchg
add
loop
pop
pop
inc
shrb
and
test
xor
subl
xor
jmp
mov
push
xchg
mov
movlps
movlps
shll
sbb
cli
push
lods
xchg
aaa
mov
ds
push
inc
inc
adc
mov
call
loopne
shlb
sbb
inc
pop
sahf
es
aad
addl
cmc
push
cmp
lods
inc
or
das
xchg
das
xchg
pushf
inc
mov
pusha
push
jnp
idivb
out
pop
xchg
mov
mov
adc
imul
jg
test
cmp
outsb
mov
jle
sbb
jecxz
out
pop
push
mov
dec
adc
xor
aam
add
fnstcw
adc
mov
call
movsl
loope
insb
cli
loop
ds
mov
push
sbb
push
scas
or
std
pop
push
ljmp
jo
adc
and
mov
dec
jo
mov
aam
adc
sahf
enter
adc
cmc
lds
sbb
jg
mov
data16
popa
inc
sti
cltd
pusha
nop
aaa
pop
aam
and
jnp
add
stos
fsts
xchg
lret
jno
jno
sbb
jmp
inc
push
stos
cmp
push
outsb
lcall
or
aaa
push
jmp
mov
aam
stc
dec
mov
arpl
outsl
xor
push
mov
aam
add
fs
mov
inc
jae
mov
sbb
adc
cli
xchg
notb
sub
cmp
pop
cmp
mov
and
scas
xor
mov
je
sub
aam
mov
pop
xlat
fistl
mov
inc
add
ja
lret
rcll
push
and
enter
add
fnstcw
pop
sti
mov
fisubrs
dec
iret
sub
outsl
lods
sub
sbb
icebp
dec
aam
cld
rep
cmpsb
pop
dec
dec
xchg
push
cmc
adcb
shll
aam
xchg
out
insl
mov
daa
sbb
fcmovnb
add
xchg
jnp
rorb
nop
push
sub
add
inc
xchg
outsl
inc
add
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
push
fidivrl
movlps
imul
add
pop
int3
sub
lock
out
push
mov
pushf
sbb
pop
fstps
or
enter
lods
cmc
call
into
add
jg
je
push
push
pop
repz
mov
insl
movsl
pop
jne
sbb
addb
sub
mov
push
inc
bound
xchg
pop
lods
pop
pop
cmpsb
leave
imul
or
and
leave
dec
mov
sbb
ljmp
in
mov
xchg
aas
aad
add
mov
push
push
mov
jg
mov
sbb
test
and
imul
mov
jnp
xchg
dec
sbb
leave
mov
adc
sbb
out
je
out
imul
ret
jo
shr
xchg
cltd
lcall
sub
inc
clc
or
pop
fwait
xor
clc
xor
popa
imull
xchg
inc
mov
push
cmp
or
sub
inc
mov
ret
ja
mov
xchg
add
mov
xchg
stos
xorb
mov
jecxz
mov
sub
std
lock
or
pop
push
je
pop
outsl
pop
int3
jae
leave
call
adc
scas
out
and
or
pop
sbb
mov
push
fwait
add
shrl
insb
push
adc
add
add
lods
fs
xor
sbb
pop
mov
xlat
push
add
lret
scas
xor
mov
mov
cmp
sbb
or
ljmp
in
sbb
insb
add
cwtl
mov
movsb
clc
pop
push
mov
jo
or
or
jle
sub
cmp
shrl
push
sbb
mov
push
xchg
sub
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
jno
push
mov
movlps
outsl
out
adc
negl
mov
inc
rolb
push
dec
iret
add
test
sbb
outsb
cmp
dec
jg
jecxz
les
jecxz
adc
mov
fwait
popf
sbb
ret
data16
and
mov
and
scas
lahf
icebp
cltd
cmp
mov
pop
lret
sub
jl
pop
dec
adc
xor
aas
bnd
or
in
xchg
xor
mov
and
loopne
or
adc
mov
jle
jne
jns
mov
pop
shll
std
rorb
push
mov
ds
cwtl
add
daa
mov
lea
cld
mov
jo
mov
push
mov
daa
and
sbb
or
mov
fbstp
sub
inc
inc
sub
xlat
pop
out
pop
mov
jg
popf
sbb
pop
add
inc
xor
mov
and
jae
ss
push
mov
ja
outsb
lea
in
add
pop
arpl
lret
jp
mov
rclb
gs
dec
lock
lods
sbb
sub
hlt
mov
inc
adc
xor
sarl
or
daa
jae
mov
fs
pop
into
mov
rorl
push
xchg
pop
cmpsb
mov
out
shl
xor
sbb
jne
mov
xor
jbe
and
div
pop
pop
movsl
lahf
sub
fcomi
js
sub
dec
inc
nop
pop
loope
das
rcr
inc
fs
sub
cmp
sub
inc
xorb
shl
cmpsb
mov
adc
and
add
lds
jno
adc
adc
or
addr16
lds
or
sbb
push
sub
mov
in
xor
jecxz
incb
mov
lods
push
cwtl
filds
inc
jbe
sbb
loope
negb
out
mov
movl
shrd
cmpl
mov
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
js
add
adc
movlps
mov
and
jne
outsl
loope
mov
jmp
cli
jmp
pop
je
pop
test
dec
add
dec
jbe
jle
movsl
adc
jecxz
call
add
pop
mov
push
loope
and
out
cmpsb
sbb
mov
jmp
jns
daa
imul
xchg
fldt
movsb
test
movq
push
orb
js
cmpsb
jecxz
sbb
add
add
sbb
imul
xlat
addr16
or
jmp
or
out
cwtl
sub
pop
hlt
pusha
cmp
fisttpll
subl
das
push
push
imull
xlat
rorb
mov
ror
jnp
sub
dec
dec
movsl
push
stc
inc
hlt
in
ret
out
ja
and
sarb
jg
fbld
int
xor
mov
mov
xchg
je
test
out
pushf
rcrb
mov
aam
aas
push
aam
adc
test
push
mov
mov
cmp
clc
imul
xchg
les
outsb
icebp
cwtl
mov
mov
aam
test
fistpll
and
inc
in
jge
cwtl
xchg
fidivl
nop
idiv
pushf
test
sbb
lock
xchg
aam
out
incl
dec
jmp
scas
push
out
jbe
dec
fldt
cwtl
cmp
leave
xor
jle
sub
pusha
ret
sub
push
lds
cmp
sub
ja
mov
sub
xcrypt-ctr
cmpsl
xchg
ja
xchg
fldl
sarl
mov
sti
push
outsl
fsubrl
sub
jb
out
fdivl
dec
jae
inc
fstl
adc
stc
loop
xor
push
jle
fldcw
xlat
stc
inc
imul
mov
ds
adc
jge
mov
inc
add
pusha
mov
nop
or
xchg
lods
push
add
sbb
lea
push
sbb
adc
xor
orl
or
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
stos
call
adc
movlps
xchg
pushf
mov
push
xor
loop
mov
mov
adc
pop
imul
aaa
pop
shll
lods
in
xchg
dec
mov
idiv
stos
sub
popaw
pushl
lret
jno
or
or
icebp
pop
or
hlt
ss
fcoms
jmp
fmul
rol
mov
bound
adc
and
pop
fmuls
cmp
mov
lock
sub
adc
xor
jbe
and
out
mov
lods
mov
mov
fs
jnp
iret
and
arpl
orl
in
hlt
movsl
jmp
inc
mov
repnz
hlt
les
inc
lret
and
jne
mov
test
out
insb
aas
int
cltd
movsb
jae
jne
sub
or
cmpsb
loopne
aaa
xchg
dec
jp
pop
int3
dec
in
add
addr16
mov
adc
aad
jge
lock
sub
repz
cmpsl
and
pop
dec
add
jno
cmp
out
in
ficompl
popa
lcall
jae
add
mul
mov
pop
ret
jae
aas
add
adc
movsb
iret
shlb
mov
dec
jns
lods
out
movsl
fs
mulb
in
mov
mov
push
xchg
cmp
mov
push
mov
lcall
push
or
adc
mov
mov
rolb
imul
xchg
dec
mov
xchg
push
loopne
inc
dec
mov
fwait
adc
shll
mov
cltd
inc
gs
jmp
inc
mov
fs
inc
test
clc
jns
pop
pop
xchg
loopne
cld
scas
out
push
das
dec
popa
mov
subl
mov
enter
mov
xor
out
out
push
mov
dec
or
xchg
adc
inc
xchg
lods
imul
sbb
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
call
adc
movlps
ja
pop
loop
push
xor
lret
cmpl
orl
stc
pop
aas
xor
lds
mov
xchg
or
ds
mov
xor
das
xor
inc
push
data16
fdivr
sbb
pop
or
inc
mov
dec
insl
roll
sbb
jnp
mov
sub
or
cmp
xor
rcrb
popa
sbb
data16
jo
push
push
push
and
inc
stos
ret
mov
add
or
mov
pop
push
rolb
xlat
pop
les
movsb
mov
mov
sub
dec
or
ja
loop
xor
mov
shrl
cmp
lods
test
pop
jns
adc
scas
xchg
and
shlb
outsb
popf
mov
bound
fldln2
cwtl
std
ljmp
sub
imul
rcrl
lahf
push
dec
pop
sbb
push
cmp
loopne
add
xchg
pop
pop
mov
mov
lds
lahf
mov
addr16
rclb
xchg
mov
push
push
jge
cld
pop
ror
jg
xor
ja
jmp
sbb
adc
inc
loop
shll
push
sub
add
loopne
popa
sbb
mov
js
popf
stc
jb
in
stos
sbb
mov
lret
mov
test
pop
outsb
or
out
movsb
pop
or
hlt
xorl
les
dec
jge
xchg
jge
stos
fistpll
subb
xchg
clc
dec
enter
jecxz
out
outsl
mov
lods
testb
jne
adc
cs
push
aad
xor
pop
pop
leave
lods
xchg
iret
lea
cmp
notb
ret
sbb
mov
and
gs
ss
ja
aam
std
ret
sbb
shrl
xor
add
dec
lret
xor
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
sub
notl
adc
movlps
dec
adc
out
xor
mov
jecxz
lock
push
rolb
dec
fcoml
and
push
push
mov
imul
cmp
ret
int
enter
jb
mov
pop
in
sbb
stos
or
inc
cmp
or
nop
mov
pop
mov
jl
movsl
dec
sbb
mov
cmpl
jmp
pop
jg
xor
mov
mov
pop
dec
add
adc
in
lods
clc
push
cmpsl
movsl
int
pop
mov
inc
in
jae
inc
lods
push
shrl
jge
mov
cli
and
mov
and
push
aam
and
mov
xchg
xchg
dec
sub
cld
faddl
push
pop
pop
jle
ja
sub
jne
pop
sahf
jmp
pop
cmp
push
shlb
pop
adc
por
push
popa
dec
icebp
adc
dec
pop
jl
data16
mov
cmpsl
mov
xor
cli
ss
out
mov
or
and
lahf
mov
jmp
imul
push
je
in
jl
mov
mov
jns
subb
cmp
pop
ret
fmuls
sub
inc
jecxz
daa
int
je
dec
and
push
dec
aaa
pop
mov
and
jb
pop
jne
pop
mov
nop
mov
cmp
imul
mov
xor
cli
ror
imul
pop
ret
push
cld
cmove
push
or
gs
jge
xchg
ljmp
pop
push
adc
mov
popf
xor
or
push
and
xor
iret
and
loop
stc
and
pop
sbb
loope
fstl
xlat
cmp
inc
mov
xchg
cmpsl
in
stc
xchg
jb
sub
and
cmp
ret
test
xchg
or
cmc
push
and
sbb
xor
pushf
xor
cmp
or
add
sub
add
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
add
adc
movlps
outsl
lahf
psubsb
insb
push
stos
mov
lds
mov
outsl
into
cmc
adc
cld
jae
inc
sti
lahf
mov
stos
jmp
das
cmp
cs
and
out
insl
adc
call
jp
jmp
cmp
inc
lcall
mov
leave
andb
pop
pushf
pop
jge
nop
mov
mov
mov
mov
mov
add
dec
in
xchg
lock
adc
jg
xor
or
jnp
and
pop
inc
pop
rcl
cmc
dec
in
or
js
int3
cmpsb
xchg
mov
es
mov
xor
popf
lds
jmp
movsb
ja
scas
addr16
loop
jl
in
xchg
inc
mull
ficoms
mov
xchg
jp
fisubs
stos
mov
stc
xor
lods
jb
test
in
mov
jge
enter
push
outsl
outsl
in
mov
cmp
jae
mul
push
lahf
enter
adc
jnp
mov
out
sahf
inc
nop
push
aaa
xchg
test
fcmove
ss
add
iret
fs
nop
dec
scas
nop
popa
mov
notb
push
lret
cmp
xor
push
pop
sub
push
sti
adc
add
dec
mov
xor
mov
push
lret
call
or
enter
es
and
loope
lcall
or
sbb
mov
jge
push
imul
dec
pop
or
rcl
sbb
sbb
mov
lods
adc
ljmp
stos
push
xchg
mov
std
mov
fnstenv
jecxz
orb
movsl
pop
loope
fdivs
mov
ret
fnstsw
sub
cmp
sbb
pop
pusha
fisubs
imul
mov
mov
addl
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
xchg
pushf
sbb
movlps
lock
call
jmp
iret
subl
cmc
outsb
mov
dec
push
cmc
mov
icebp
inc
cwtl
pop
out
inc
gs
mov
sub
ljmp
dec
inc
out
adc
into
sub
sbb
push
cltd
inc
into
push
enter
mov
stc
dec
inc
cmp
sahf
mov
lock
mov
jbe
fsubl
xor
sbb
loope
sub
xchg
push
test
cltd
jne
addr16
xchg
jo
lods
sbb
lahf
mov
push
mov
cmpsl
cmp
cmp
or
add
sub
filds
pop
jnp
pop
pop
insb
fstps
out
dec
cmp
dec
mov
stc
lret
ror
insb
arpl
movsl
enter
int3
mov
push
inc
push
sbb
pop
sbb
mov
stc
fdivrp
sbb
hlt
pop
cmp
lods
inc
imul
mov
in
pushf
jno
ficoml
aad
xorl
ret
movsl
and
lods
jns
inc
rcrb
mov
in
push
fsubs
mov
pop
pop
jecxz
aam
ds
xchg
pop
test
sbb
jo
xchg
xchg
mov
psrlq
cmpsb
mov
inc
int
xor
inc
scas
add
ds
pop
in
in
je
add
hlt
outsl
leave
mov
arpl
adc
sarl
add
mov
sbb
mov
repz
mov
push
hlt
pop
push
subb
lret
xchg
add
lock
inc
cmp
les
aad
in
push
sub
cmpb
out
or
ficoms
adc
gs
mov
inc
testl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
xor
jmp
adc
movlps
js
lods
loopne
insb
jae
loope
jmp
sub
push
scas
xchg
cmp
insl
clc
mov
icebp
aam
aad
mov
pusha
sbb
jle
fcom
mov
sahf
pop
popa
movsl
cmp
arpl
push
sarl
shll
push
xchg
add
cs
clc
mov
out
fwait
andl
pop
shll
pshufw
std
pop
jbe
inc
and
xor
xchg
pop
cltd
pop
pop
sub
insl
jecxz
mov
pop
es
enter
mov
mov
out
fwait
lods
ljmp
lds
xchg
push
dec
xchg
data16
mov
mov
sub
ret
push
push
mov
pop
jns
loopne
inc
nop
incl
fwait
or
enter
inc
clc
push
fs
cli
jo
jo
nop
dec
inc
stc
jl
shll
fdivrs
mov
dec
jmp
insl
insb
out
je
mov
call
pop
aam
dec
add
pop
or
cmp
arpl
mov
inc
push
cmp
pusha
test
or
orl
xor
test
mov
es
int
cmp
fsts
das
dec
popf
aaa
jb
mov
imul
xchg
lret
xchg
icebp
shl
add
outsb
xchg
inc
adc
jae
adc
lahf
dec
sahf
and
mov
and
mov
mov
imul
enter
dec
jb
sub
out
in
rcl
enter
addr16
sub
push
add
xchg
jmp
es
loope
jge,pn
mov
mov
sbb
pop
aaa
aas
jb
iret
imul
add
xchg
es
loope
pmulhw
xlat
leave
test
or
cmpsl
scas
lcall
out
addr16
xchg
jbe
sbb
dec
mov
lods
enter
add
enter
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
push
call
adc
stc
stc
sbb
int
cld
push
jo,pn
push
add
cmpsb
sarb
loop
arpl
jbe
int
xor
sbb
aam
inc
aas
sbb
add
jnp
mov
cmpb
push
ja
sbb
xchg
repnz
out
and
lcall
xchg
outsb
fidivl
test
out
dec
inc
notl
sbb
stos
mov
sub
icebp
jae
lcall
jae
dec
xchg
dec
addl
jne
mov
pop
test
nop
pop
in
sar
add
int
pushf
xchg
in
sub
add
jno
fcomps
daa
arpl
inc
stos
hlt
push
mov
pop
ret
stos
lods
aad
ret
out
mov
sub
daa
test
sub
push
jmp
and
push
xchg
mov
xor
scas
insl
sti
jg
cwtl
mov
test
mov
mov
or
in
sti
inc
mov
adc
enter
scas
popl
outsl
frstor
fcmove
sub
mov
jno
daa
sub
test
nop
sbb
lea
stc
daa
jmp
xchg
cwtl
popf
aam
jbe
outsl
adc
scas
int3
shll
add
push
or
add
cmp
jl
cmpsb
out
stos
sub
sbbb
and
cs
mov
adc
test
pusha
mov
lea
imul
shrb
cmpb
push
jg
dec
push
pop
mov
or
xor
int
ror
test
pusha
pop
outsl
andb
test
mov
lock
xor
inc
inc
push
sbb
cmpsl
ret
jge
fnstenv
negb
pop
cmp
loope
and
ja
enter
inc
test
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
dec
mov
adc
movlps
rdmsr
add
sub
ret
add
lds
add
imul
rcrb
pop
nop
cmp
fstl
push
into
push
push
adc
loop
mov
ret
fdivl
mov
es
push
popl
repnz
add
mov
push
fwait
int
stos
sbbl
repnz
and
aas
pusha
into
daa
andb
mov
push
hlt
cmp
shll
sub
test
icebp
sub
insb
mov
movsl
sbb
nop
aad
test
adc
adc
mov
or
outsb
out
cmc
mov
inc
stos
fcomi
sub
mov
loope
ds
or
cltd
mov
gs
mov
addr16
cmc
pop
dec
mov
mov
je
mov
shrb
das
xor
add
int
jno
sbb
push
sbbb
in
adc
cmp
mov
ret
push
lahf
pop
sub
iret
push
roll
lret
add
sub
test
pop
fcompl
in
sbbl
idivl
aam
rcrb
pop
dec
jge
shlb
mov
bndldx
xor
mov
jnp
cmpsl
test
push
sahf
test
xor
mov
lods
pop
or
pop
fs
mov
leave
push
stos
lahf
cwtl
sbbb
add
inc
sarb
repz
in
mov
push
or
push
push
cmp
pop
scas
testb
negb
std
aad
push
adc
scas
xchg
shlb
xchg
mov
out
gs
jge
aam
xchg
repnz
mov
addb
scas
mov
dec
leave
ror
push
mulb
fwait
sub
sahf
pusha
cld
and
ret
mov
sub
jmp
xorl
icebp
ja
imul
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
out
sahf
lods
loopne
adc
movlps
xor
les
fsubrp
cmpsl
xor
or
cmpsb
xchg
inc
adc
inc
lock
sahf
mov
into
jae
lods
ja
stos
add
xchg
xor
jae
mov
or
cli
negl
mov
int
fs
cmpsb
or
push
ret
xor
jg
inc
adc
icebp
fcmovb
repz
pushf
or
push
mov
mov
push
push
and
and
cwtl
cmp
iret
fcomps
inc
daa
orl
adc
addr16
lret
xor
mov
xor
jno
rorl
shrb
rolb
call
cli
loop
pop
popa
pop
aam
sub
mov
lcall
push
aaa
push
push
mov
je
dec
add
es
xor
and
pop
in
rcrl
outsb
out
pop
mov
push
add
push
jp
repnz
push
mov
cmp
dec
cmp
lret
mov
and
mov
pusha
movsl
pop
jae
clc
scas
mov
xchg
pop
lds
and
push
xchg
test
adc
stos
sub
inc
decl
out
dec
int
ficoml
mov
jb
push
out
js
out
xor
lret
lret
shrb
jbe
movsl
sti
sub
mov
sahf
bound
les
pop
aad
push
repz
jb
loope
push
in
stos
pop
jmp
enter
imul
and
adc
push
in
aam
push
dec
cmp
mov
push
jmp
popa
lret
ret
dec
jno
mov
fcoms
inc
lock
pop
dec
cmc
jnp
outsb
lcall
and
into
cmp
in
adc
mov
push
jle
dec
pop
dec
pxor
bound
outsb
in
adc
xchg
ret
or
nop
cli
add
shrl
ja
xchg
andb
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
push
mov
adc
movlps
loop
jecxz
call
jno
jecxz
aas
dec
sti
fnstsw
and
adc
sbb
xor
mov
push
mov
dec
int
pop
iret
lahf
dec
sub
test
cmp
sbb
pop
cmpl
mov
arpl
push
rolb
jge
gs
xchg
dec
imul
lods
sahf
mov
add
out
add
mov
push
dec
stc
push
mov
ds
cwtl
movsl
mov
fmuls
or
xorl
or
lcall
xchg
fxch
fxch
mov
aad
ss
add
sbb
clc
mov
jae
mov
mov
fsubs
cli
aas
int
data16
ds
fdivrs
gs
mov
or
sub
push
jo
mov
cmpsb
sbb
pop
sbb
inc
dec
or
jb
dec
pop
cmpsl
lea
nop
test
scas
enter
pop
cmc
push
cmpsb
sbb
xchg
xlat
dec
and
test
dec
cmp
lea
jae
or
sub
push
dec
ja
push
addr16
xchg
dec
cmc
test
mov
in
je
mov
cmp
dec
dec
cmpsl
out
jae
dec
pop
push
pusha
lahf
xchg
inc
push
xlat
shrb
xchg
dec
xchg
mov
jmp
or
sbb
orb
test
mov
cld
mov
sub
cld
add
push
mov
or
addr16
and
fcoms
mov
mov
loope
push
push
push
lcall
pushf
add
xor
and
bound
add
add
idivl
iret
and
sub
ds
ret
add
mov
push
loopne
jne
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
push
or
fcomp
adc
movlps
inc
mov
xor
dec
dec
dec
xor
xor
add
jno
lock
stos
mov
popf
sarb
in
lret
jle
es
mov
and
filds
push
xchg
cmpsl
aas
adc
es
lret
xor
adc
sbb
adc
or
jns
dec
and
imull
cmc
rolb
mov
inc
lds
int
fidivrl
push
or
rcrl
ljmp
lahf
sbb
mov
push
ficompl
popa
adcb
sti
jbe
inc
scas
or
outsl
sub
shll
test
les
rcll
or
or
cmp
pop
in
jl
cmp
pop
mov
xchg
sub
js
ret
or
pop
mov
fcoml
mov
fcompl
testl
sbb
das
pop
push
jle
enter
mov
xor
add
loope
call
sub
cmp
jno
dec
enter
or
xchg
pop
jle
push
fs
pop
cltd
ret
jbe
test
pop
enter
cmp
push
das
cmpsb
or
ret
cmp
jns
xchg
enter
cli
jmp
sub
dec
shrl
push
xchg
push
inc
dec
int
sarb
je
in
mov
jo
mov
dec
mov
int
pop
fbstp
jns
cmc
arpl
and
xor
pop
sbb
dec
lock
inc
add
jge
in
cltd
inc
loop
dec
fidivs
jbe
xor
clc
and
cmp
ss
sbb
into
inc
or
adc
pushf
insb
inc
stos
jmp
adc
mov
fdivl
jp
iret
and
cmpsb
rcll
pop
mov
xchg
ljmp
adc
push
add
add
fstpt
int
mov
movlps
and
push
ljmp
sub
jmp
pop
imul
test
mov
push
lea
add
mov
int
in
rorb
mov
adc
mov
enter
mov
cli
stos
push
aam
adc
sub
movsb
cli
pop
fcmovnu
jl
xor
ss
mov
pop
fbld
aaa
cmpsb
push
int3
xchg
sarl
cmp
aaa
pop
fbstp
push
cs
ficoml
orb
add
and
jo
push
mov
cld
xchg
jecxz
adc
push
arpl
mov
pop
notb
dec
pop
sub
sbb
cmp
mov
in
inc
jge
sub
loopne
jo
cmp
xchg
sub
cmp
push
repz
sbb
adc
pop
addr16
mov
je
jne
inc
icebp
sbb
lret
movsb
call
sbb
leave
sbb
adc
cmp
scas
xchg
inc
or
stos
mov
and
inc
mov
and
adc
shlb
push
dec
pop
mov
sbb
jb
pop
out
pop
cmc
mov
mov
pmaxsw
dec
sub
ljmp
movsb
mov
dec
cmp
movsl
mov
das
movsb
adc
ss
iret
pop
xlat
enter
leave
ret
push
sub
mov
addb
cmp
dec
mov
cmpsb
pop
push
jb
jl
jb
xchg
sbb
push
test
dec
adc
movsb
add
pop
lret
insb
push
xchg
lds
mov
jg
sarb
mov
sti
pushf
fisubrl
lahf
addr16
pusha
loop
inc
jl
ret
cmp
push
fisubl
shrl
jmp
mov
aad
jge
clc
mov
ss
push
xchg
push
sub
xorl
in
push
xlat
adc
fldt
imul
mov
jmp
jmp
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
cmp
mov
movlps
push
aam
loop
enter
add
jg
inc
xor
fnop
adc
push
pop
sub
std
or
in
sbb
lock
mov
sahf
lods
das
cmpsb
mov
shrb
inc
movsb
sarl
inc
cmp
cmp
cmpsb
jp
ja
pop
fcoms
sbb
mov
sbb
mov
sub
stc
push
mov
xor
int
adc
cli
test
lods
xor
xor
jne
pushf
popf
inc
popf
mov
addl
pop
loopne
mov
xlat
aad
inc
inc
dec
fdivrp
fisttps
xchg
jg
ret
les
movl
pop
xchg
xchg
or
mov
fdivr
dec
outsb
int3
mov
mov
push
test
pop
dec
sbb
lret
ret
dec
scas
clc
xlat
mov
bound
pusha
sbb
push
add
xchg
lea
push
shrl
aas
out
ss
aaa
mov
and
loopne
mov
xor
lret
and
out
or
push
pop
dec
mov
dec
outsl
cmp
jmp
xchg
sub
lret
jl
adc
loopne
sub
mov
xor
js
sub
aaa
in
out
ret
lahf
mov
in
in
and
xor
lods
out
rorb
inc
dec
jmp
out
movsb
adc
push
icebp
addl
dec
mov
outsb
or
jg
out
fsub
xlat
lods
decl
ret
out
hlt
push
dec
outsb
int3
iret
addr16
lcall
mov
out
cmpsb
cmp
inc
xor
push
adc
jp
and
aas
xor
lret
or
sub
movsb
movsb
mov
xchg
xor
out
ss
jg
cmp
push
bound
sahf
cs
sti
cmpsl
fistps
sub
adc
arpl
unpcklps
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
cmp
int3
int3
adc
movlps
cmpl
xchg
dec
fadds
jl
dec
push
xchg
fsubr
cli
mov
cld
inc
dec
test
mov
adc
dec
cmp
mov
fists
clc
sub
mov
push
shrl
les
lods
sub
call
cmp
sahf
jecxz
push
inc
xor
out
cwtl
mov
gs
cmp
sbb
dec
testl
mov
cmp
addr16
push
adc
xor
mov
xor
or
aas
cmp
lcall
loop
loop
push
addr16
xchg
scas
dec
push
jnp
xchg
mov
pop
push
pop
dec
sbb
cmp
sub
dec
popa
inc
pop
mov
daa
adc
inc
sbb
fbstp
in
add
stos
es
in
daa
loope
push
jno
sub
and
data16
cmpsb
push
mov
push
in
enter
mov
testl
adc
sub
cs
lds
pop
mov
mov
pop
lret
mov
or
loopne
flds
jo
repnz
in
adc
mov
stos
les
fisubl
cld
int3
dec
std
mov
pop
cmpsb
pop
pop
outsl
shrl
mov
imul
leave
imul
push
push
cmpsl
jmp
mov
jno
sub
rcl
ret
fs
cltd
xchg
xchg
sub
xor
bound
fistpll
jnp
pop
ficompl
xchg
roll
mov
push
mov
push
and
lea
cmp
cmp
xor
shrl
sbbl
or
dec
xlat
sbb
jbe
outsb
rcrb
stos
notb
mov
push
in
aas
aad
fbld
cld
lahf
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
mov
mov
adc
movlps
bound
loope
rorb
sub
fldl
xor
and
pop
pop
inc
sarl
hlt
jns
jae
mov
add
adcl
push
stos
mov
push
xor
dec
inc
pop
jb
out
test
cmpsb
push
mov
bt
fisubrl
cmp
mov
and
mov
push
push
add
pop
pop
psrlq
mov
test
fsubrp
xor
ret
in
push
scas
or
push
push
mov
inc
fsubs
xchg
popa
jmp
cmpb
jle,pt
je
ljmp
fsubrl
aam
in
push
add
jns,pt
and
outsb
ficompl
call
fmuls
lahf
sub
bound
inc
or
dec
hlt
pusha
push
xchg
mov
in
push
inc
jo
daa
movsb
stos
nopl
pop
inc
add
loopne
jo
pushf
cs
cmpb
jmp
add
cmp
cs
cmpl
movsl
sbbb
pushf
xchg
push
mov
add
mov
pop
iret
pushf
clc
push
cmp
scas
mov
cmpsl
mov
scas
sub
in
pusha
in
push
and
int3
fs
jecxz
mov
test
arpl
xchg
cs
inc
lock
mov
daa
lret
mov
or
loop
mov
add
xchg
push
imul
dec
inc
pop
pop
sahf
int
push
jbe
pop
adcl
fmul
jp
scas
mov
add
nop
outsl
imul
aaa
mov
addl
mov
mov
popf
mov
dec
add
test
xor
sub
lret
sti
enter
dec
or
and
fs
pop
sti
subl
pop
inc
sarl
fnstenv
mov
xor
add
lahf
xor
aaa
sbb
inc
std
dec
in
sbb
movsl
and
xchg
xchg
cli
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
xchg
pop
mov
movlps
lock
cmp
jo
dec
xor
inc
jl
daa
xor
xchg
cltd
mov
fildl
add
stos
gs
lds
nop
pushf
lahf
sti
pop
inc
pop
lret
pop
negl
out
inc
mov
jns
pop
test
ss
push
inc
lock
xorb
pop
into
rcrl
hlt
je
fbld
rolb
mov
jge
xor
jecxz
or
pop
fcomp
bound
pop
sub
jl
aas
dec
mov
mov
push
push
sahf
or
push
mov
imul
xor
add
cs
sub
sahf
xlat
or
scas
les
jl
test
test
mov
push
dec
push
lahf
subl
bound
cmp
inc
cmp
adc
je
pop
jnp
scas
or
dec
int
or
stos
in
dec
inc
test
inc
mov
and
fcompl
push
cmp
jne
testl
sbb
ror
sbb
and
push
mov
inc
daa
and
movsb
clc
adc
stos
lea
xchg
enter
lahf
mov
sub
ficomps
aam
inc
cmp
mov
mov
xor
add
jnp
adc
push
lahf
icebp
sbb
inc
cmp
inc
mov
or
mov
mov
repz
jmp
sbb
lods
aad
xchg
sub
notb
adc
xchg
inc
jp,pn
fadds
push
dec
or
push
mov
mov
dec
sbb
add
lret
add
cwtl
dec
and
fldl
xchg
roll
or
leave
xchg
pop
mov
repnz
es
or
hlt
stc
mov
fsubrs
fistpl
data16
jo
mov
mov
js
push
mov
adc
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
dec
clc
jb
rol
adc
movlps
bswap
mov
shll
test
iret
mov
mov
clc
out
push
fsubs
cmp
lcall
lret
scas
mov
xor
inc
pushf
push
test
jmp
jp
incl
movsl
or
xchg
jne
cmpsl
or
stc
inc
imul
mov
cmp
sub
add
sub
nop
ret
or
into
mov
pop
mov
repnz
pusha
ss
mov
push
test
cmp
or
inc
adc
lcall
insb
inc
aaa
mov
flds
sbb
nopl
subl
imull
shrb
mov
int
cmp
adc
pop
divl
insb
or
xlat
push
ljmp
lods
cmpl
sub
jg
xchg
sub
pop
jbe
xlat
or
add
enter
mov
add
cs
lods
mov
sahf
inc
xchg
or
shll
rcl
stos
in
pop
mov
les
inc
xchg
ljmp
mov
xor
fisubrs
cmp
pop
dec
xorps
lods
sbb
push
cmpsb
test
mov
xchg
sub
jmp
push
mov
mov
lock
mov
sti
mov
leave
rcrl
mov
jns
adc
cmp
mov
ljmp
sub
setbe
or
je
stos
shrl
and
repnz
lahf
cs
dec
xlat
mov
or
js
sub
pop
pusha
adc
into
stos
mov
mov
sub
arpl
and
cmp
push
dec
sub
jp
das
lcall
sbb
dec
scas
mov
jp
cli
xchg
stos
xor
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
adc
adc
movlps
repnz
loope
pop
pop
jb
ljmp
mov
inc
nop
push
xor
outsl
imul
pop
out
sub
push
jl
mov
hlt
pushf
mov
ret
lock
xchg
insb
movsl
fwait
nop
movb
sbb
fidivrs
stos
adcl
mov
pop
jmp
pop
inc
mov
mov
mov
sub
imul
jp
popf
mov
cmp
lods
cmpsb
loop
clc
test
jae
cmc
mov
les
test
ds
insb
fnstenv
loope
adc
mov
cwtl
sub
dec
push
lahf
movsl
push
xchg
inc
pop
ds
pop
jle
popl
aas
inc
rcrl
or
xlat
aam
into
mov
leave
icebp
sarb
test
cmp
xchg
push
js
lods
xchg
mov
insl
xchg
xchg
jnp
cld
clc
mov
testb
mov
xor
scas
test
push
mov
sub
adc
add
push
test
adc
imul
pop
and
popf
gs
movsb
sub
push
xchg
mov
fisttpll
ret
xor
and
out
aad
mov
mov
mov
out
jp
ds
jmp
dec
sub
out
repz
xchg
pushf
loop
cmp
int3
jbe
push
ficompl
std
cwtl
jns
imul
mov
push
push
mov
add
lret
add
scas
testb
lods
ficompl
arpl
cmp
jnp
jnp
fcmovnbe
notl
dec
xchg
lahf
sub
movb
mov
clc
push
cltd
js
enter
xchg
pop
js
enter
adc
cmp
cwtl
jge
dec
sub
add
rcl
std
dec
dec
pop
std
mov
lock
dec
xchg
jns
sbb
in
addr16
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
jmp
mov
adc
pop
or
mov
add
add
and
ficompl
imul
xchg
addl
fs
adc
clc
mov
cmp
jl
outsb
inc
test
mov
popf
scas
dec
mov
ja
mov
cmpsl
push
or
aaa
std
push
pop
cwtl
imul
rcr
mov
aam
flds
sub
andb
xchg
mov
aas
fwait
and
jge
orl
in
inc
pop
movsb
push
test
xchg
stos
sbb
inc
push
cmp
int
int
aad
es
jle
xor
and
out
pop
sub
cwtl
ror
xchg
popa
pop
into
add
dec
call
test
cmp
xchg
adc
data16
insb
out
adc
rcl
adc
loop
cwtl
jmp
imul
adc
insb
out
es
mov
pop
mov
mov
cmpsb
mov
sti
jns
ret
mov
ret
lahf
dec
rcr
in
in
adc
mov
lods
sub
mov
pop
cmpsb
cmpsb
pusha
cmp
leave
jo
push
popf
mov
hlt
fadds
rorb
dec
cmpsb
and
xor
xor
test
jge
mov
fs
mov
push
scas
lods
add
inc
mov
jns
ds
mov
push
jns
and
sub
mov
mov
lods
mov
icebp
stos
pushf
shrl
rcrb
call
pop
lea
dec
xchg
mov
jge
dec
jbe
cs
mov
mov
mov
mov
lods
fwait
ja
flds
cli
insb
xorl
sbb
daa
shrb
dec
or
stos
inc
pop
pop
jnp
dec
cmpsl
jno
inc
addb
sub
out
sbb
stos
test
cwtl
pop
movsb
repz
jecxz
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
cltd
dec
mov
frstor
test
ds
lret
mov
sbb
and
mov
inc
leave
lcall
cmp
mov
push
cmp
insb
push
or
jns
pop
decl
jl
fimuls
ja
daa
rol
push
outsb
or
add
popf
jecxz
fcompl
dec
vpshufhw
or
mov
lock
cmp
fisubrl
or
push
repz
loop
repnz
push
xor
adc
fsts
mov
jnp
or
or
push
sub
adc
sbb
fxch
cmpb
xlat
shll
xchg
or
jo
xor
cld
cs
dec
sar
fcmovnu
sbb
sub
dec
scas
iret
or
and
out
jo
jg,pt
xchg
inc
jae
mov
mov
enter
and
or
inc
sub
ljmp
mov
lock
jae
mov
cmp
mov
sahf
popa
stos
and
dec
jne
mov
jo
loope
xor
mov
push
adc
push
inc
das
inc
test
pop
pop
inc
or
stc
test
add
and
adc
add
in
jns
in
dec
int3
sub
mov
clc
cmpl
pusha
mov
fcmovbe
cmp
lods
mov
mov
jmp
or
fisubrs
fsubrs
insb
xchg
cmp
mov
inc
jns
sbb
push
pop
and
bound
cmp
mov
out
ds
rorb
out
push
rcll
jmp
mov
cmp
xor
xlat
popa
inc
push
rclb
and
mov
push
cmp
mov
pop
fldcw
mov
addr16
and
dec
push
repnz
jge
loop
popf
jns
pop
or
pop
jmp
repnz
lcall
out
push
into
insl
test
movsb
or
fadd
adc
jge
ljmp
repz
mov
cmp
xor
or
mov
repz
test
mov
xchg
mov
mov
or
inc
push
cmp
mov
mov
pop
pop
mov
lret
mov
test
mov
add
jno
call
outsl
fcmovb
cmp
sbbb
sbb
jmp
or
out
add
cmpl
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
push
pop
sahf
lods
aas
mov
adc
push
adc
cmp
sbb
icebp
bound
out
loope
xlat
repz
mov
add
dec
mov
shl
push
and
jno
xchg
les
leave
sub
prefetch
stos
and
repz
pop
jmp
push
js
xor
mov
inc
xor
cmc
push
mov
push
cmp
sbb
pop
cmp
gs
leave
popf
xchg
das
iret
xchg
rorb
enter
ret
shl
jle
scas
add
test
dec
mov
enter
adc
mov
xchg
sub
pop
addr16
inc
sahf
inc
cmp
jb
rolb
jae
fwait
push
mov
cli
xor
mov
mov
mov
lds
xor
jle
enter
pushf
xchg
mov
fs
fisubs
lret
mov
cltd
cmp
push
xorb
into
push
cmpsl
popf
pavgb
insb
jl
adc
inc
or
fwait
shl
inc
mov
popa
mov
mov
leave
popa
mov
aaa
ja
xchg
popf
mov
sti
pop
test
rdmsr
push
xor
out
stc
mov
cmp
movsl
mov
fldcw
lahf
mov
out
leave
aad
imul
dec
mov
push
sub
inc
or
cmp
adc
pop
jbe
push
pop
loop
and
xor
dec
iret
inc
mov
xlat
mov
dec
push
mov
out
pop
and
shl
movsb
in
push
or
xchg
pop
ret
repnz
cmp
fsub
ror
clc
push
js
nop
jp
add
xchg
cli
mov
lahf
xchg
jo
sub
jae
sub
and
cli
add
dec
sub
mov
jl
jb
mov
aas
mov
cmp
mov
jno
call
jp
icebp
adc
add
push
cmp
mov
ss
test
dec
ja
cli
roll
mov
mov
idivl
mov
pop
loopne
mov
push
mov
pop
dec
fistl
movsb
or
test
cli
pop
inc
out
fnsave
out
in
sub
push
out
lock
loop
xchg
inc
adc
mov
sub
push
inc
ss
jo
and
inc
xchg
pop
cmp
cmp
rorl
insb
or
adc
movsb
push
cmp
mov
fs
lods
loopne
sbb
jl
inc
rorb
pop
std
pushl
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
adc
pop
lods
sti
jne
orb
pop
mov
outsl
call
movsb
xor
imul
dec
xor
jl
push
jbe
pushf
jbe
fimuls
xor
pop
cmpl
jno
mov
pop
and
mov
popa
imul
cli
add
xor
lahf
test
jnp
jecxz
xchg
cmp
leave
adc
testb
leave
sub
pushf
xchg
test
jmp
and
adc
push
xchg
xchg
push
inc
sub
repnz
stos
inc
xor
mov
mov
jp
movsb
fildl
xchg
pop
sarb
pusha
sarb
sbb
cli
shll
pop
mov
or
cld
ljmp
xor
push
dec
sub
sti
scas
jp
lods
jae
or
push
dec
mov
mov
aas
xchg
pop
jmp
and
leave
dec
aam
adc
mov
leave
pusha
dec
int3
xorb
push
nop
jns
xor
leave
push
aam
push
sub
adc
cmp
sub
mov
popa
sub
ret
pop
sub
adc
sub
cmp
insb
and
push
adcb
data16
pop
xor
dec
or
xchg
add
aaa
mov
inc
jmpw
or
ss
push
sar
sub
jae
mov
mov
cmp
fmuls
add
cmp
push
test
xor
push
cmp
cltd
inc
jle
mov
int
outsb
insl
insb
scas
inc
xor
fadds
sub
mov
into
sahf
xchg
std
jp
jns
shlb
xchg
add
cmc
sbbb
push
push
pop
cmp
xchg
sti
rcrb
and
adc
and
outsb
lcall
mov
psubusw
test
add
jp
push
mov
andl
or
pop
ror
mov
jno
pop
aaa
xchg
or
sbb
fldenv
xchg
adc
cmp
fs
jle
ss
xchg
xchg
out
arpl
outsl
nop
cmpsb
mov
jo
jo
int
es
add
aam
pop
cltd
lods
sarb
iret
or
iret
xor
inc
rolb
pop
xchg
lds
outsb
jmp
pop
movsb
loopne
pop
lods
xchg
mov
xchg
aam
sub
and
int3
sub
xor
add
mov
fmuls
ljmp
mov
in
ljmp
test
inc
cwtl
dec
push
cli
adc
notl
nop
push
into
adc
add
add
ret
lock
jmp
addl
scas
sbb
pop
add
lahf
mov
js
movsb
adc
lahf
movlps
sub
push
push
stc
and
stos
add
mov
and
repnz
dec
sub
add
in
cmp
je
inc
daa
mov
nop
lds
dec
mull
mov
mov
out
fwait
or
xor
pop
adc
mov
movsl
lret
push
xor
fstpl
imul
inc
or
jmp
aaa
sahf
and
jne
pop
mov
addr16
in
xchg
or
stc
add
cltd
mov
push
leave
cli
js
jae
aad
fwait
iret
xchg
add
out
shlb
das
imul
shrb
sub
testb
cmpsl
push
push
cmpsl
mov
push
push
cld
jnp
idivl
xchg
cmpsb
add
cwtl
xchg
push
inc
mov
shrl
xor
sbb
mov
rcll
xor
add
aam
aam
arpl
jne
mov
mov
add
dec
xor
pop
pop
and
xchg
and
inc
jbe
dec
add
mov
insb
addr16
inc
loopne
cmp
pop
fsubs
cld
fcmovnbe
call
or
sbb
jnp
in
aad
shl
out
negb
fs
out
imul
xchg
push
xchg
jmp
add
aaa
xor
stos
cmp
cs
mov
and
mov
push
push
out
cmp
mov
mov
mov
push
fsub
lods
leave
mov
jmp
imul
jg
arpl
in
aam
mov
shld
inc
ljmp
mov
ror
mov
dec
inc
mov
inc
cmc
sub
enter
bswap
out
push
push
mov
add
icebp
cld
je
loop
ror
pop
jp
pop
fmuls
leave
int
mov
out
inc
jg
mov
ja
cmpsb
int
push
pop
icebp
mov
and
add
ljmp
loope
lods
mov
mov
pusha
fnstcw
test
dec
orl
xchg
cmc
jecxz
dec
cmpsl
cs
add
movsb
jb
fstpt
cmp
add
stos
jbe
pop
xchg
ja
jg
sbbb
test
call
fadds
add
inc
jns
mov
mov
jae
repnz
and
mov
xchg
ret
dec
xchg
cmp
ret
dec
or
das
dec
inc
cltd
iret
cmc
mov
icebp
cmp
jbe
or
mov
cmp
jne
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
jle
mov
adc
push
mov
pop
test
adc
mov
sbb
int3
in
jne
adc
mov
xchg
mov
sub
jae
ljmp
inc
mov
push
int3
ja
scas
ds
outsb
xchg
push
lcall
lock
or
daa
pushf
xchg
sub
pop
xor
pushf
xchg
sub
decw
lahf
pop
adc
lds
daa
repz
fisubrs
xchg
push
mov
cmpsb
jmp
xchg
out
jp
xchg
data16
or
dec
dec
dec
insl
insl
fcmovnb
adc
mull
dec
xchg
addb
dec
pop
in
call
js
arpl
pop
jl
outsb
add
lret
and
pop
gs
cmp
ficoml
jno
or
and
push
lods
jmp
jecxz
dec
lock
or
mov
andl
mov
mov
mov
in
bound
jae
cmpb
insl
fildl
cmp
xchg
sub
or
cld
and
cmp
repnz
push
adc
push
lahf
aam
daa
jo
daa
adc
sub
rorl
add
rcl
aaa
hlt
jl
mov
fbld
pop
mov
cmp
aas
cmp
outsb
sub
ret
stos
pop
pop
ret
fbstp
mov
jecxz
or
mov
jg
mov
data16
push
xor
mov
xor
push
dec
imul
push
pop
mov
mov
push
notl
incb
loop
sbb
insb
out
fcoms
fisubs
lret
inc
cli
dec
lea
mov
jl
outsl
hlt
xchg
aad
negl
inc
dec
xchg
sbb
push
lds
shll
or
inc
cmp
add
push
ss
lods
stc
and
test
sbb
push
xchg
arpl
fisttpl
xchg
sub
mov
mov
les
adc
cmp
mov
icebp
push
popa
pop
int
pop
dec
dec
sub
out
sub
mov
aam
cmp
or
mov
mov
mov
add
mov
mov
clc
lds
and
dec
imull
orl
sarb
dec
pop
cld
mov
mov
xor
jae
pop
jp
push
jo
sbb
jnp
fstpl
jb
iret
push
inc
data16
or
pop
jne
xor
xchg
mov
frstor
inc
ja
and
stos
subps
movl
jmp
ja
pop
add
rcll
push
bound
ljmp
lahf
movlps
rorl
or
test
rolb
mov
jl
dec
adc
sub
loopne
scas
mov
sahf
adc
xorl
rclb
fs
sub
mov
scas
mov
in
scas
pushf
xor
enter
scas
out
mov
das
xor
imul
test
add
into
pusha
mov
or
or
mov
xchg
pop
sbb
cmp
fs
jae
jnp
mov
aam
push
sahf
mov
pop
insb
xor
icebp
outsl
push
inc
xchg
ja
jl
inc
jno
dec
and
popa
and
jp
inc
cmpsb
es
out
push
cmp
cwtl
sbb
mov
in
in
arpl
dec
dec
cmp
scas
jno
pop
das
das
loopne
xchg
cmp
xor
jne
adc
xor
das
out
lods
test
or
push
inc
xor
insl
rclb
dec
ficomps
movsl
jo
and
xlat
in
cmc
jecxz
jl
bound
jbe
xchg
pop
mov
movsl
insb
out
cmp
xchg
movsl
cmp
xchg
push
lret
iret
xchg
into
lret
insl
stos
ja
cld
mov
loope
add
inc
pusha
jne
or
mov
pop
int
test
xchg
adc
xchg
xlat
push
xchg
sahf
push
mov
outsb
les
dec
or
xchg
xchg
xchg
pop
or
lods
lcall
inc
mov
data16
data16
or
mov
adc
or
out
or
cmp
pop
xchg
aas
push
sbb
xchg
dec
add
test
mov
mov
or
jle
sahf
js
push
mov
and
cmp
mov
sbb
daa
scas
mov
xchg
hlt
lods
es
jns
pop
fxch
sub
mulb
or
jae
and
sbb
jns
jno
mov
inc
int3
xor
insb
adc
pop
rol
mov
mov
les
lock
lret
clc
into
and
sbb
outsl
lods
stc
cmc
sbb
popa
push
out
inc
je
into
pop
mov
and
insl
shlb
pop
adcb
cmp
movsb
adc
push
jbe
push
gs
dec
jmp
jle
or
add
in
aaa
scas
dec
int
aaa
cmp
js
outsl
jge
jb
pop
sub
test
jmp
push
jmp
lret
cmp
jecxz
sbbb
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
mov
cld
xchg
adc
lahf
movlps
push
sub
adc
cmp
jno
push
or
or
xor
ficoml
mov
shrb
cwtl
mov
inc
fmul
pop
test
add
and
xor
cmp
pop
or
sbb
sbb
sbbl
jmp
inc
mov
fisttps
xchg
inc
mov
pusha
push
stc
pop
fadds
mov
mov
mov
inc
mov
mov
push
adc
scas
aam
xor
mov
xor
add
bound
xchg
iret
sbb
into
dec
js
dec
xor
add
sub
pusha
lods
cmp
daa
pop
add
stos
mov
pop
pop
sub
jns
adc
int3
aad
std
mov
shlb
sbb
daa
fadds
mov
adc
push
push
push
push
sub
xor
mov
sbb
out
jle
fldcw
cwtl
xchg
fdivr
repnz
addr16
in
inc
inc
out
mov
sti
or
pop
jmp
lahf
xchg
test
and
xor
mov
neg
mov
cltd
mov
adc
fcmovu
xor
push
adc
aaa
mov
mov
jno
cs
push
xchg
aam
gs
ds
rorl
aad
rcrl
imull
stos
int
jns
shlb
xchg
and
std
inc
mov
dec
ret
test
jb
cmpsl
pop
mov
lahf
or
in
stc
dec
in
pop
in
ds
js
xchg
hlt
pop
inc
out
out
stos
mov
daa
cmpb
mov
mov
sub
inc
cmp
sub
imul
push
out
adc
divl
gs
cmpsb
int
sub
lahf
std
lock
mov
adc
inc
les
rolb
scas
and
jb
mov
call
cli
imul
inc
pop
adc
addr16
pop
sub
jbe
add
push
rcrl
dec
int3
push
cmp
mov
or
adc
and
xchg
and
fadd
int3
jne
adc
sbb
imul
inc
xchg
subb
imul
mov
pop
out
imul
add
or
insb
cmp
sub
stos
subb
in
sbb
scas
ret
call
jmp
push
cmc
lods
test
mov
and
cmpsl
xor
inc
fnsave
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
pavgb
xchg
adc
lahf
movlps
dec
jmp
adc
sub
push
add
outsb
xor
mulb
scas
lods
sub
mov
repz
pushw
add
in
js
mov
stos
cmovo
inc
shlb
sbb
in
ss
sub
mov
ror
stos
and
lods
mov
nop
movsl
aas
je
dec
inc
sub
xor
nop
and
push
aaa
lret
popf
aaa
iret
add
sub
pop
popf
sbb
lods
clc
loopne
outsb
cmp
filds
imull
je
adc
test
xor
mov
cli
imul
pop
xchg
jnp
imul
sub
lret
imul
inc
dec
mov
out
fcompl
jnp
push
sub
nop
cs
cmpsl
push
outsl
jo
cmp
jne
dec
fst
adc
pop
cmp
icebp
mov
dec
popf
out
fcomip
xchg
leave
jmp
inc
repz
sub
mov
mov
je
add
aam
cmpb
mov
jnp
sub
sbb
mov
mull
cmpb
mov
xchg
jns
push
in
pop
cmp
scas
push
sub
sub
sbbl
enter
addr16
dec
loopne
mov
loope
insb
in
fiadds
mov
std
push
imul
pop
xchg
lods
and
imul
mov
fsubs
pop
push
mov
roll
pusha
push
stos
clc
jo
pop
inc
jmp
lods
push
inc
pop
inc
imul
mov
pop
pop
pop
shrl
jb
mov
xchg
jmp
movsb
pop
sub
sbb
test
mov
js
popf
leave
movl
cli
mov
dec
jne
and
push
sbb
inc
repz
mov
imul
addr16
subb
push
mov
add
pop
dec
iret
or
scas
fistl
push
mov
jns
test
outsl
loop
and
sbb
stos
cmp
jo
dec
xor
xor
add
cmp
gs
sub
iret
xchg
xchg
mov
mov
sbb
cmp
sbb
inc
adc
dec
add
jl
ljmp
aam
imul
hlt
in
ljmp
xchg
sbb
ja
flds
xor
jns
sbb
push
imul
dec
jecxz
sbb
fsubl
pop
pop
add
loope
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
sbb
pushf
lods
adc
adc
cmp
pop
stos
pop
subb
sarl
lock
pop
pop
mov
aam
mov
sub
test
jecxz
lret
mov
das
jb
sub
in
mov
hlt
xchg
mov
or
loopne
ljmp
mov
pop
inc
fisubl
dec
push
mov
lret
das
icebp
insb
enterw
xchg
jne
pop
das
and
jg
cmp
lods
inc
fnstcw
imul
jno
arpl
sbb
test
add
dec
xor
ss
xor
jnp
out
imul
je
and
push
lcall
andl
negl
pop
lahf
sbb
int
nop
add
sbb
cs
imul
adc
xchg
lahf
and
push
mov
popf
adc
shll
outsl
lahf
mov
xor
pop
pusha
outsl
xor
popf
pop
das
cwtl
and
mov
cmp
arpl
add
mov
lods
out
in
mov
and
mov
bound
mov
jns
adc
stos
nop
xchg
pusha
int3
cmp
into
out
enter
dec
xchg
jb
xor
cmp
mov
sbb
out
dec
pop
in
insl
mov
shll
and
test
jp
sbb
lods
xchg
sub
psraw
or
test
pop
lock
popa
rorb
jle
int
dec
movsl
lret
jo
call
xor
cmp
xchg
imul
fdivs
loope
out
pop
sahf
out
inc
mov
mov
in
mov
cltd
cmp
jb
sbb
aad
movsb
shl
xchg
mov
ss
es
inc
insl
inc
leave
or
negl
push
aaa
mov
cmp
xor
mov
outsb
out
jo
xchg
data16
or
mov
cmpsb
pop
push
push
fnstenv
mov
and
sbb
pop
adcb
stos
repnz
out
dec
or
and
cmpsb
rorl
call
shld
dec
cltd
lret
mov
lret
das
sub
mov
out
mov
hlt
daa
jno
cmp
or
decl
in
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
aaa
sub
test
adc
adc
leave
enter
xchg
and
push
xchg
sarl
cmp
lea
dec
in
pusha
aaa
mov
mov
push
jne
ja
notb
push
sub
mov
jne
push
push
jmp
nop
lock
fildl
mov
sub
les
das
or
sub
inc
xlat
les
test
or
mov
bound
sub
dec
lret
add
xchg
cli
push
daa
jp
inc
sbb
mov
and
or
movsb
popa
mulb
mov
test
pop
jae
fwait
push
xchg
mov
mov
sbb
mov
ds
xlat
mov
dec
lret
add
outsl
leave
mov
lret
scas
cmp
sbb
mov
int
shrl
jne
and
mov
mov
adc
dec
enter
mov
add
push
rcl
cmpsl
sbb
dec
mov
movsl
and
mov
lea
or
and
ret
ficoml
repz
mov
add
xor
or
mov
mov
stc
inc
xchg
loop
fistl
not
enter
lods
loop
stc
cmp
popf
mov
scas
xchg
adc
jl
add
out
or
sahf
jmp
xchg
stc
jo
jge
fwait
fwait
popf
sbb
push
mov
jae
mov
add
jne
jp
xor
pop
mov
ja
lret
hlt
cs
sub
sbb
repnz
arpl
adc
lods
pusha
nop
cmpsb
dec
add
push
stos
or
sub
in
jbe
fldt
or
xchg
and
jle
int3
loop
inc
xchg
leave
enter
cmc
pop
lcall
xor
mov
shlb
fs
and
pavgw
jle
fbld
test
jl
sti
nop
repnz
repnz
pcmpgtd
add
dec
inc
mov
cmp
lods
out
push
mov
cwtl
mov
cmp
lock
inc
insb
outsb
testl
bound
sub
push
xor
sub
pop
lret
clc
mov
jmp
fdivl
fnstcw
sbb
push
mov
adc
pop
movlps
ljmp
adc
push
sbb
xor
dec
imul
das
xchg
fdivrs
jbe
rcrl
int3
cmp
andb
fwait
and
ljmp
lea
test
inc
aad
mov
mov
jbe
mov
cmp
cmpsl
addr16
mov
mov
mov
sbb
mov
sub
xor
ret
fisubl
mov
and
sub
sbb
mov
fwait
mov
dec
xchg
jnp
aaa
cmc
pushf
inc
xchg
xchg
mov
inc
pop
repz
add
adc
mov
pop
dec
loopne
inc
ficomps
loop
push
add
and
xchg
pop
xchg
jnp
cs
shr
js
xchg
pusha
add
add
adc
mov
imul
inc
repz
repz
movsl
enter
int3
jmp
pop
sbb
stos
movsb
inc
xor
fwait
xchg
loopne
lods
adc
cltd
adc
popa
dec
adc
dec
in
int
dec
mov
testl
iret
or
or
xor
ffree
shrw
stc
mov
shlb
and
mov
fcompl
icebp
cmpsl
dec
add
cmp
inc
xchg
push
or
mov
cmp
cld
pop
mov
or
movsl
push
xchg
sahf
enter
popf
jno
jecxz
pop
outsb
sahf
sub
pusha
jno
mov
mov
cld
cwtl
jp
jbe
xchg
lods
iret
scas
jmp
popf
adc
mov
add
test
adc
xchg
andb
inc
test
int
shlb
fmulp
cmp
repz
inc
ss
ficoml
lret
push
loop
insl
mov
imul
or
ds
pusha
les
sbb
into
mov
jns
imul
orl
or
mov
repz
in
mov
cwtl
inc
sahf
mov
in
mov
mov
test
push
jns
int3
lea
cmpsb
popf
movsb
pop
jp
dec
mov
jae
push
dec
cli
xchg
jne
adc
lahf
xorb
adc
testl
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
and
ljmp
adc
xor
das
repz
outsl
hlt
dec
xor
loop
mov
or
lods
lahf
mov
cmp
mov
sti
aaa
jle
lds
cmp
pop
xlat
addb
cmpsl
xlat
roll
pop
js
jmp
pop
jnp
int
movsl
and
bound
mov
data16
xchg
or
or
imul
add
scas
jl
int
dec
in
add
dec
add
ja
imul
pop
jecxz
loop
test
repz
sahf
cmpsb
sarl
adc
in
imul
cltd
cmp
cmp
push
sar
movsl
xchg
es
mov
jl
daa
fcmovnb
adc
daa
cmpsb
xor
add
out
lret
popf
push
ja
in
sahf
outsl
icebp
call
xchg
push
popf
or
lock
fwait
das
push
push
popl
dec
int
sbb
mov
lret
test
daa
fsub
sub
rorb
mulb
push
out
sar
push
hlt
sub
xchg
mov
out
fwait
cmp
jae
jge
dec
stc
jecxz
sub
jns
mov
dec
js
pushf
pop
outsb
loopne
mov
xchg
pause
cmpl
js
es
out
adc
fmull
into
mov
xor
push
cmp
xchg
je
js
jp
insb
cmc
lret
pop
add
add
push
add
scas
inc
lods
aaa
xchg
adc
and
pop
sub
popf
cmp
mov
enter
sti
pop
int3
outsl
push
out
aad
cmp
pop
in
jle
mov
pop
arpl
sub
adc
push
mov
xchg
icebp
add
push
or
xor
cmp
imul
fs
jae
xor
mov
ss
insb
jae
xorb
in
push
out
ljmp
jle
xor
sub
pop
popa
xchg
std
xor
or
out
mov
push
not
add
imul
sub
les
cmp
mov
push
int3
mov
sbb
aam
andb
shlb
loopne
imul
sbb
mov
lret
xchg
shlb
shrb
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
mov
stos
sub
adc
ficoms
adc
test
pop
sbb
movsb
cmp
mov
daa
jae
in
push
sbb
push
mov
xor
lcall
mov
pop
add
out
cmp
adc
das
leave
shll
jo
and
nop
push
jmp
lea
cmc
push
in
mov
xor
stc
stos
pop
and
mov
stos
jbe
fistpl
cmpsl
jbe
inc
sarl
jl
call
hlt
cld
xchg
jns
fwait
and
daa
out
repnz
stos
jnp
lret
movsl
lret
out
mov
sub
xchg
in
adc
dec
rcl
mov
sbb
daa
lahf
fstpl
mov
hlt
clc
repnz
inc
imul
jle
repz
push
in
call
or
mov
mov
loop
push
stos
fidivl
sbbl
push
adc
xor
imul
jo
rclb
popa
stc
or
repnz
jbe
or
rcll
mov
push
int
jecxz
je
mov
inc
mov
movsb
dec
adc
ljmp
lods
movsb
ljmp
lret
dec
inc
dec
jmp
sbb
xlat
addr16
cmp
mov
cli
mov
pop
pop
loopne
cli
hlt
out
les
popa
cmp
in
fwait
jo
jl
pop
push
idiv
add
lret
es
dec
mov
push
popf
in
pop
rolb
sarl
xchg
push
xchg
cmpsl
aam
jl
push
ret
mov
jmp
jb
push
sbb
inc
nop
lcall
jecxz
push
out
dec
jae
mov
insb
ficoml
push
lods
cmp
iret
data16
push
ret
adc
push
jge
int3
jmp
popa
popf
or
pop
imul
adc
mov
aam
dec
mov
repz
mov
sub
std
or
lock
imul
xlat
add
aaa
rcrb
imul
call
add
cwtl
aaa
sbb
jg
and
in
inc
mov
sbb
ds
dec
xchg
sub
out
xchg
mov
pop
fcom
push
mov
leave
and
add
addr16
loope
lahf
std
push
aad
lods
push
sbb
mov
jg
mul
adc
sar
push
pusha
popa
pushf
jo
push
jle
jecxz
lahf
and
dec
pop
mov
sbb
aaa
and
outsl
dec
cli
push
pop
in
outsl
lods
mov
mov
adc
movsb
in
xchg
mov
add
in
lcall
shlb
mov
inc
mov
iret
outsb
mov
xchg
out
daa
cmp
mov
stc
dec
les
mov
pusha
into
dec
add
sbb
out
pop
fisubs
pop
cwtl
ds
stos
lea
xlat
loopne
sbb
adc
popa
jmp
xchg
lods
xor
addr16
push
cmp
jno
hlt
imul
out
pop
fsubrl
loopne
cwtl
xlat
cwtl
xor
push
inc
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
into
push
adc
ficoms
adc
add
clc
test
cld
inc
mov
insb
sub
adc
or
sarl
sub
and
cltd
loope
or
lods
mov
push
push
inc
dec
mov
mov
outsl
cs
out
push
cmp
add
scas
push
nop
out
add
ret
mov
cmp
enter
cmpsl
mov
fildl
inc
mov
mov
adc
mov
pop
and
pop
int3
cmp
mov
adc
test
mov
rcll
rolb
jmp
roll
pop
mov
or
xchg
cmp
ret
es
mov
pop
jp
outsb
mov
push
xchg
or
mov
fwait
and
inc
jg
mov
push
test
rcl
ljmp
mov
adc
test
push
lock
mov
neg
cwtl
enter
cmp
data16
idivl
inc
neg
loope
fs
call
popf
xchg
mov
call
daa
cmp
push
rcll
adcb
adc
pop
or
push
lret
rorb
push
in
outsl
cmp
or
cltd
or
jge
dec
pushf
movsb
fs
mov
clc
cli
rcll
popa
rcll
shlb
sub
mov
dec
push
ja
lods
add
dec
sub
mov
mov
xor
xor
loopne
lea
mov
test
loope
scas
xchg
cmp
jnp
out
adc
stos
xor
inc
popa
fsubr
in
dec
lea
mov
icebp
loope
adc
adc
cwtl
dec
mov
bound
push
xchg
test
or
shll
fxch
cmpsb
stos
inc
mov
enter
jp
xor
cmc
mov
jecxz
pushf
mov
cmp
mov
in
xor
mov
adc
sbbb
sub
mov
jae
aaa
std
out
fwait
push
imul
dec
das
rorl
aam
stos
xor
in
cli
dec
addl
add
rcrb
add
fdivrl
aaa
mov
andb
mov
js
jb
cwtl
sbbl
ljmp
ds
sub
call
inc
hlt
push
loope
test
mov
push
out
lods
ja
shrl
mov
lret
adc
mov
xchg
inc
int3
mov
dec
and
outsb
push
jo
movsb
mov
jge
cmpsb
js
das
mov
lahf
jl
jp
dec
jecxz
pop
enter
mov
inc
xchg
dec
mov
xchg
fldt
xchg
ret
gs
rorl
or
jmp
loopne
add
negl
jb
add
lods
add
pop
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
jle
outsb
adc
ficoms
adc
jno
ret
jmp
adc
cmp
fistl
push
pop
imul
out
xchg
lds
push
mov
loopne
push
mov
popa
popa
out
pop
sub
fwait
mov
jno
negl
cmp
lcall
dec
adc
je
faddl
push
mov
lods
or
jno
adc
fsubrs
bound
add
ret
mov
mov
inc
and
jle
loope
gs
movsl
mov
xchg
shll
ss
sub
into
fwait
bound
push
lods
add
cwtl
sbb
out
mov
incl
or
mov
mov
aam
xchg
adc
pop
mov
repz
mov
mov
outsb
cmc
aam
std
sub
lcall
fadds
rcrb
xchg
imul
mov
popa
sbb
fwait
mov
mov
jmp
div
and
push
add
jp
decb
xorb
jge
pop
cli
mov
lret
dec
or
data16
xchg
arpl
jecxz
in
inc
mov
xchg
aas
add
pop
lret
inc
lea
xchg
adcb
in
insl
mov
xchg
ret
pop
jno
lods
and
shll
sub
mov
adc
shll
ss
scas
cmpsb
push
pop
out
mov
mov
loope
dec
ja
jecxz
stos
jno
add
add
inc
popf
cmp
stc
sub
pop
clc
imul
jle
sbb
movsb
sbb
les
sbb
imul
add
mov
lds
inc
mov
cmc
dec
jecxz
and
sbb
xor
inc
xchg
addr16
push
mov
iret
lcall
andl
jmp
or
pop
inc
ss
scas
into
push
lcall
loopne
or
cld
and
push
xlat
mov
add
in
in
mov
adc
dec
cmp
ret
jno
imul
aas
mov
dec
fsubrp
test
dec
fmul
push
ret
adc
sub
rorb
test
adc
adc
push
add
in
ljmp
in
inc
lock
mov
push
pop
push
pop
sbb
and
imul
enter
lods
sbb
cmc
jmp
std
iret
mov
gs
xchg
es
xchg
adc
adc
gs
pusha
repnz
sbb
or
mov
bnd
dec
outsl
orl
push
loop
frstor
scas
xchg
enter
pusha
pop
inc
sti
in
outsb
dec
aaa
fists
movsl
iret
insl
add
xor
cmp
les
pop
aaa
popa
xchg
cmpsb
or
dec
dec
or
sbb
rorl
mov
ret
cmp
jae
sbb
andb
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
loop
loopne
andl
xor
sbb
mov
inc
test
jecxz
repnz
ficoml
jo
add
pop
dec
mov
shll
lods
pop
jo
test
testb
mov
cli
cld
push
and
sbb
add
xchg
test
leave
ret
into
vandnps
bound
mov
sarb
ror
xchg
dec
pop
mov
imul
shll
sahf
mov
jg
cmc
mov
inc
mov
push
js
fsubrl
dec
std
mov
repnz
pop
xchg
imul
fidivrl
in
pop
mov
mov
pop
jmp
jns
pop
inc
mov
pop
jno
push
mov
out
mov
jne
lods
dec
mov
fsubl
mov
and
xor
fldz
stc
ss
and
pop
mov
das
test
repz
mov
inc
fadd
lods
roll
cmp
adc
jge
mov
dec
arpl
adc
mov
cmp
pop
ds
gs
pop
pop
in
cmp
sbb
popa
out
aad
dec
cmp
push
lret
mov
push
cmp
push
pop
or
adc
push
cmpsb
fistpll
pop
loopne
pushf
cmp
out
xchg
pushf
testl
aaa
or
mov
xchg
orb
cmc
push
push
inc
ret
cmp
div
push
mulb
mov
bound
aad
ret
and
mov
adc
adc
inc
int3
xchg
or
inc
mov
fcomps
call
mov
pop
sub
or
in
jp
out
pop
js
xor
push
orb
sub
xor
sub
es
repz
stos
fwait
xlat
ficomps
imul
jnp
rolb
aas
gs
icebp
nop
xchg
jmp
mov
outsb
cmp
and
adc
fwait
jl
fimuls
scas
push
and
inc
mov
daa
rclb
out
ret
cli
leave
sbb
adc
push
sbb
mov
fidivrs
cmp
push
dec
out
or
daa
mov
in
es
or
jnp
les
mov
imul
or
sti
fstps
xchg
mov
lock
popa
daa
pop
pushf
adc
xchg
mov
dec
notb
lods
cmp
dec
xor
jge
sub
push
mov
scas
popf
cli
sub
jp
sbb
push
dec
mov
popf
out
cmpb
xchg
xchg
xor
rcll
xchg
fbstp
fcmovb
adc
push
mov
inc
cwtl
inc
push
cmp
mov
mov
mov
or
push
outsb
dec
cmp
xor
lods
mov
adc
pop
mov
pop
outsb
cmp
mov
cmpl
and
adc
jb
insb
jbe
inc
and
sub
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
mov
bound
adc
adc
adc
in
rcll
push
lahf
sub
push
pushf
out
testb
les
arpl
in
or
ds
pop
outsb
mov
ret
adc
movsl
enter
call
rcrl
mul
mov
fwait
icebp
es
sti
repnz
adc
subb
xchg
jp
mov
inc
andb
cli
add
xor
mov
ljmp
pop
arpl
mov
xchg
mov
mov
inc
arpl
or
xchg
lds
mov
fistpll
mov
sahf
jle
mov
xchg
enter
inc
sub
cmp
stc
mov
xor
iret
ljmp
es
push
stos
cmp
mov
push
mov
inc
cmc
es
dec
aad
sub
jmp
sub
in
addb
sub
sub
mov
leave
sti
pop
dec
ss
sbb
xlat
sbb
mov
ffreep
fmuls
mov
scas
xlat
cmc
xlat
inc
cmp
popf
and
cltd
sti
sbb
iret
sub
add
push
frstor
test
xor
push
ds
add
repnz
inc
pushf
mov
sub
pop
xchg
jne
popa
ret
jl
ja
sbb
mov
fcmove
fs
sub
fdivs
xchg
jge
cmpsb
in
inc
daa
shlb
pop
mov
movsb
mov
sar
loop
jl
cld
xchg
lahf
add
aaa
inc
jmp
add
inc
add
push
cli
fdivrs
rcrl
mov
inc
xor
lods
push
addr16
or
and
mov
imul
test
sub
or
jle
jbe
push
adcl
push
jno
add
fisttpll
movsb
loop
dec
mov
pop
jo
mov
ret
sub
cmp
test
inc
sbb
add
pop
or
mov
filds
inc
cmp
mov
lods
loope,pn
call
add
int3
idivl
mov
andb
ljmp
lahf
lods
aas
adc
add
cmp
dec
and
pop
jne
pop
push
mov
inc
jecxz
dec
mov
xor
dec
test
inc
outsb
mov
jl
movsl
popa
test
lret
test
mov
movsb
adc
inc
lahf
icebp
cld
or
das
pop
push
push
fists
jle
dec
cs
push
and
lock
sbb
and
lretw
repz
sub
in
mov
aad
leave
scas
jbe
pop
inc
ret
add
jmp
sub
movsb
adc
xchg
push
mov
loopne
inc
inc
dec
adc
mov
mov
out
jecxz
jae
push
clc
mov
ss
inc
aaa
in
pop
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
sahf
lods
or
movlps
pop
xchg
adc
push
or
sub
jecxz
xlat
inc
int3
pop
cmc
loopne
or
push
mov
sti
cmpsl
jbe
mov
fwait
decl
cmp
mov
mov
call
loop
lcall
mov
sbb
mov
adcl
xchg
jecxz
cwtl
xchg
dec
arpl
jg
cltd
mov
mov
inc
lret
inc
cmp
mov
mov
ret
and
or
push
stos
loope
and
call
shrl
push
sub
std
lock
jmp
lea
or
push
push
sarl
cwtl
mov
adcb
xor
in
xchg
negb
xchg
in
mov
and
andb
fmuls
aaa
lahf
fs
ret
cltd
ret
loop
inc
adc
adc
loopew
sbb
pusha
out
mov
jl
rcrl
sub
add
mov
ljmp
aad
mov
mov
les
jge
insl
jno
mov
arpl
stos
push
in
insl
aad
cmp
inc
mov
pop
int3
incl
scas
mov
add
push
movsl
scas
mov
lock
adc
movsl
or
lahf
xor
mov
inc
or
xchg
xchg
sub
aam
add
mov
mov
mov
and
xlat
jb
repnz
dec
cmp
jbe
dec
pop
mov
inc
mov
jb
incl
sub
and
stos
lahf
mov
xor
cs
mov
add
rolb
pop
jmp
in
popf
add
cld
les
pop
jno,pn
mov
jge
cltd
subl
dec
mov
mov
adc
or
icebp
or
test
dec
stos
stos
pop
xchg
sbb
shrb
hlt
adc
add
hlt
dec
mov
dec
or
std
loope
repz
cli
jge
pop
adc
jmp
aas
pushf
lock
mov
js
fs
xchg
push
test
push
push
jbe
enter
mov
jg
pushf
lret
mov
adc
insb
test
lea
out
stc
add
sub
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
xchg
pop
mov
xor
adc
sub
cmp
xor
sbb
or
push
xor
cld
or
gs
cltd
xchg
sahf
push
mov
repnz
adc
cmp
jne
rorb
sub
call
mov
or
mov
scas
or
fistl
mov
sarl
lods
mov
jecxz
test
sub
and
orl
call
in
mov
icebp
mov
aaa
sub
push
test
movsl
je
or
pop
test
int3
lcall
xor
out
ret
cli
sbb
fcompl
outsb
jecxz
cmp
das
sub
lahf
movsb
inc
jp
sub
push
aas
xchg
push
icebp
nop
adc
mov
les
inc
mov
pop
xor
and
inc
ljmp
sbb
dec
int3
in
arpl
xchg
cld
jne
repnz
adc
imul
add
in
ja
xchg
jge
xor
xchg
lahf
xchg
popa
aaa
xor
cmp
add
add
das
in
or
and
push
or
lret
repz
outsb
pop
mov
mov
iret
cmp
leave
inc
test
mov
sbb
movsb
jns
stos
into
pop
mov
rclb
lahf
adc
xchg
push
add
data16
jmp
outsl
imul
fsubrs
or
jb
or
lea
sub
sbb
and
push
shlb
cmp
fdivrl
popf
jmp
or
stos
jae
jmp
pop
jnp
stos
mov
daa
lods
gs
inc
lret
or
jb
arpl
mov
sahf
adc
adc
cltd
pop
jno
enter
push
inc
std
xchg
stos
or
icebp
inc
rol
les
lock
or
xchg
xchg
and
cli
mov
enter
cltd
or
jnp
insl
add
fmulp
dec
lret
out
push
xchg
stos
pop
xchg
add
mov
push
lods
cmpsl
push
pop
xchg
lret
shlb
jns
mov
and
fsub
iret
shll
jp
cmp
lods
mov
fwait
data16
inc
idivb
sub
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
mov
inc
stos
inc
push
adc
push
adc
adc
je
adc
scas
or
out
xchg
or
loope
cmp
ljmp
inc
mul
and
hlt
rolb
add
push
push
jno
pop
mov
adc
jne
or
or
bound
cmp
movsb
mov
and
stos
inc
add
xor
jnp
adc
test
pushf
das
push
lock
mov
mov
enter
jmp
out
sub
cli
inc
push
xor
cmpsl
test
dec
cld
dec
pop
sub
enter
addr16
notl
add
and
mov
or
xor
int
scas
adc
iret
cmp
push
sub
cmp
sub
out
lock
cmpsb
xor
movsl
je
xchg
pop
jo
inc
push
mov
or
mov
sub
cld
add
nop
cmp
into
dec
xor
in
mov
nop
pop
imul
lret
mov
loopne
mull
testl
sbb
pop
push
xchg
sbb
sbb
cld
test
hlt
xchg
mov
xchg
stos
xor
es
xchg
cmpsb
stos
ret
je
and
loope
add
push
xor
test
jp
clc
mov
popf
ljmp
mov
or
dec
xchg
adcb
aaa
pusha
lods
dec
mov
ljmp
inc
nop
pop
in
pushf
xchg
lea
lock
idiv
rorb
xchg
shlb
xchg
mov
dec
loope
or
pop
cmp
loope
shlb
sub
gs
inc
in
xlat
pop
mov
aad
xchg
mov
dec
xor
shrl
fwait
ja
bound
xchg
outsb
aad
or
fs
shll
dec
mov
sahf
pop
sbb
cmpsl
fcmovb
inc
shlb
clc
movsb
cmc
xchg
dec
bound
mov
js
rcrl
or
mov
mov
popf
inc
and
imul
addr16
out
sub
iret
rorb
cmp
or
and
lock
sub
loop
pushl
fidivrs
loop
cli
mov
popf
insl
das
stos
xchg
and
mov
sbb
js
shl
out
lods
jb
or
aas
pop
das
pusha
adcl
jmp
jbe
lahf
test
inc
push
pushf
push
pop
jno
pop
inc
daa
mov
fsubs
insb
mov
xor
adc
cltd
fidivrs
ror
mov
jbe
jno
ss
adc
add
and
int3
jno
xchg
dec
fistpll
or
int3
shll
subb
dec
pusha
adc
jl
cmp
test
jns
jb
cmp
add
das
dec
push
sub
fcomps
add
pop
mov
xchg
adc
enter
jmp
push
dec
pop
mov
or
pop
mov
inc
fisubrs
iret
push
dec
loopne
dec
mov
sbb
mov
mov
aad
fsub
push
add
inc
mov
test
jp
sub
ds
sbb
jg
sahf
jmp
pop
fisubs
xor
shll
jns
mov
jbe
js
mov
sub
lock
jl
test
push
movl
mov
mov
push
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
or
adc
push
adc
adc
dec
xor
insb
jbe
fcoml
das
fwait
out
mov
pop
xchg
insl
jo
ror
icebp
rorb
int
push
data16
shll
pop
xchg
or
lea
fldcw
or
xor
push
mov
scas
gs
loope
shll
hlt
popa
pop
arpl
shlb
pusha
cltd
insb
je
stos
mov
insb
fadd
enter
repnz
inc
pop
arpl
lods
fidivrl
jge
jl
roll
push
pop
arpl
xchg
pop
or
sbb
test
push
push
pop
xchg
dec
cmp
add
mov
fcmovnu
and
cli
mov
jae
fnstenv
fisubs
sub
xor
and
inc
outsl
xchg
into
stos
pop
stos
mov
sbbb
jns
stos
loopne
iret
push
xchg
leave
adc
fdivrs
fwait
push
lret
lret
mov
and
out
mov
xchg
lock
push
rcll
mov
add
or
adc
dec
xlat
adc
adc
sub
enter
jb
mov
sahf
cli
es
cld
scas
lret
int
sahf
jecxz
inc
lcall
or
std
scas
xor
mov
pusha
andl
adc
sbb
adcl
jmp
jb
xchg
inc
xor
or
es
and
jnp
mulps
je
jmp
pop
fsubrs
jmp
xchg
sti
cmovl
lcall
add
inc
sub
subb
lea
mov
sbb
push
jbe
pusha
sbb
jmp
lock
iret
push
mov
jnp
and
mulps
out
pop
push
fcomip
sbb
inc
outsb
repz
or
mov
mov
xchg
cmp
push
data16
cmp
xchg
cmp
mov
pop
sub
movsb
push
pushf
sub
test
js
jp
push
sbb
sti
in
pusha
push
outsb
mov
mov
jmp
pop
mov
sti
nop
xor
enter
je
mov
orl
pop
cmp
imul
cli
inc
xchg
ljmp
push
es
mov
imul
mov
in
pushl
cli
pop
in
test
adc
mul
shrl
xor
mov
jg
in
and
int3
dec
mov
add
jnp
dec
clc
fsincos
shlb
xchg
push
rcll
push
push
cli
push
pop
mov
push
xchg
or
pop
lock
aas
xor
ret
xlat
sahf
int3
fistl
stc
lea
jmp
cmp
lock
jp
fwait
sub
push
imul
push
dec
test
sbb
lret
out
stos
repz
lret
sub
xlat
aaa
lret
int
push
jmp
outsb
insl
and
in
inc
or
jno
fcoml
enter
fs
aaa
fwait
repz
jmp
adc
xor
js
inc
arpl
loope
js
mov
xchg
mov
adc
setb
fdivrl
repnz
fsubrs
adc
ds
xchg
cmp
inc
out
adcl
mov
dec
mov
mov
mov
xor
mov
xor
jmp
sarl
sbb
jbe
stos
pmaxub
adc
adc
adc
aas
fsub
int3
sbb
imull
jb
xor
cmp
fcmovu
cmp
push
cmp
dec
adc
xor
pop
mov
sub
pop
add
xchg
aas
push
arpl
pop
push
adc
jnp
mov
fdivl
dec
repnz
in
push
es
orl
inc
pop
add
sbb
js
xor
or
movsb
fnstenv
push
cld
rcl
mov
sub
mov
or
sub
repnz
aaa
xchg
call
es
dec
outsb
mov
fucomip
cli
scas
add
addr16
enter
mov
gs
ror
mov
inc
iret
pop
repz
jge
pop
stos
jge
jns
xor
rcrl
lods
mov
push
rcr
xor
xchg
pop
std
std
cmpsb
pop
adc
jg
push
push
dec
mov
in
pop
pop
fdivl
push
cli
mov
faddl
gs
jns
scas
pop
xchg
loopne
pop
jno
push
mov
push
lret
cmp
sub
scas
loop
mov
hlt
or
aas
fstp
dec
das
or
jge
inc
add
or
xor
jb
jo
pushf
sahf
or
in
movsl
xorb
insl
int3
stos
or
test
inc
mov
sub
scas
adc
idiv
cmp
xor
ret
shrl
jnp
testl
cmpsl
lret
xchg
push
ret
out
in
xor
sbb
pop
out
fbstp
push
mov
mov
arpl
dec
scas
and
mov
xor
push
scas
adc
dec
shll
int3
gs
imul
xchg
rorl
aaa
mov
or
jl
or
lret
dec
js
jmp
push
in
mov
mov
test
mov
cmp
jne
icebp
xor
push
call
jno
jle
icebp
es
push
sub
and
and
jnp
push
leave
loope
out
loop
stos
xchg
or
je
xchg
sub
jp
mov
jle
inc
mov
add
xor
dec
and
hlt
pop
out
push
dec
xor
jl
js
into
xchg
inc
sysenter
dec
jl
popf
std
pop
cs
orl
and
pop
lret
mov
fwait
and
cmc
xchg
out
aam
adc
mov
cli
idivb
cmc
mov
pop
mov
mov
aad
repnz
cmpl
lahf
ja
and
lea
kaddb
insb
pusha
pushf
mov
push
push
ficomps
andb
cltd
mov
jl
sub
dec
popf
inc
dec
in
mov
das
bound
push
mov
fbstp
xchg
call
data16
neg
stos
fildl
je
mov
mov
cmp
movsl
movsb
xor
lock
std
xchg
faddl
push
in
mov
adc
into
jns
fcoml
sub
insb
push
ret
rolb
cmp
orl
lret
and
cmpsl
jl
int
jl
xchg
dec
mov
sub
adc
shr
push
ljmp
arpl
cmp
mov
movsl
shlb
aam
addr16
cmp
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
inc
fadds
push
adc
adc
aad
add
mov
aam
je
addb
aas
xor
dec
mov
pop
mov
addr16
loop
flds
lds
inc
push
push
push
xchg
fistl
or
sarb
push
dec
push
pop
stc
sbb
pop
xor
dec
lods
iret
adc
in
lret
shlb
sbb
mov
shrl
lods
or
xchg
fcomps
xrelease
jge
mov
int
hlt
lods
jecxz
pusha
cmp
fimuls
test
mov
mov
sbb
jae
movsb
ljmp
shrb
pop
pop
xchg
testl
sbb
test
push
mov
sti
dec
jp
imul
mov
das
xor
sub
inc
adc
adc
cmp
or
and
mul
mov
aas
and
mov
or
adc
sahf
push
inc
or
add
pop
jge
ret
leave
push
cmpl
pop
pop
push
fcomp
insb
cmpsb
fdivrs
cmp
inc
sbb
jae
xchg
je
rcrl
in
xlat
aas
cmp
jnp
jo
pushf
mov
xor
xor
inc
or
in
pop
loop
sub
mov
mov
das
xchg
jnp
pop
adc
ret
ja
sbb
mov
lahf
pushf
movsb
sbb
dec
daa
and
fbstp
aad
mov
adc
add
leave
push
dec
aas
mov
in
es
and
xor
inc
xor
aaa
push
inc
inc
ret
stc
cs
adc
jo
imulb
ret
in
cwtl
push
xor
jnp
in
insb
push
cmpsl
cs
cs
aas
adc
jae
sbb
adc
adc
int3
or
cmp
mov
cmp
ds
xor
enter
dec
or
push
add
jle
je
pop
jmp
iret
dec
sti
mov
or
scas
popa
lds
sbb
push
minps
xor
xchg
pusha
int3
pop
aam
mov
aad
ss
xchg
shll
adc
jle
cli
cmp
clc
lcall
lcall
inc
cs
add
push
clc
inc
or
cmp
lods
stos
inc
sqrtps
pop
out
shlb
pop
popa
xchg
sti
or
jecxz
gs
scas
mov
push
loopew
shr
dec
dec
addr16
cmp
sbb
call
dec
xor
cwtl
mov
lahf
adc
xchg
pushf
icebp
cmp
aad
aas
mov
dec
inc
jmpw
int
inc
fistpl
cmc
pop
inc
repnz
pusha
rorb
lret
dec
lret
dec
or
iret
mov
sbb
mov
ret
out
mov
dec
xchg
mov
fists
xor
pop
aam
in
pushf
in
or
mov
test
cmp
push
pushf
mov
jle
jle
popa
push
jne
pop
outsb
jl
cmp
popa
push
and
in
pop
mov
mov
fwait
xor
ds
mov
je
inc
dec
loopne
ja
push
je
jmp
insb
ror
shlb
insb
daa
ret
mov
fidivs
ret
xor
adc
adc
adc
push
pop
dec
push
in
repz
dec
pop
inc
icebp
pop
out
xchg
pop
bound
sub
add
push
call
and
push
xchg
clc
movsl
fsin
lds
xchg
and
into
and
daa
pop
xor
pop
fistps
mov
mov
sbb
xchg
ss
test
clc
lods
fnsave
dec
in
repnz
dec
repz
stc
pop
pop
ret
adc
int
xchg
and
cli
into
roll
inc
mov
insb
sbb
pushf
cmpsl
xor
push
jns
xchg
jae
dec
scas
nop
subb
mov
jg
fadd
cmp
sar
insb
jne
aam
hlt
push
das
dec
xlat
pushf
addl
sub
xor
dec
aas
lcall
subl
mov
dec
repz
mov
add
xlat
lock
xor
and
cmp
mov
push
cmpsl
pop
push
xchg
cwtl
jae
movsb
push
lea
daa
ja
into
cs
mov
cmc
mov
fwait
sbb
add
imul
bnd
scas
or
test
aas
mov
xchg
jns
ja
movsl
ret
stos
jmp
add
scas
mov
or
pop
sbb
lcall
adc
ljmp
mov
data16
jb
hlt
es
lods
dec
mov
roll
mov
outsb
xchg
inc
xor
rclb
gs
mov
and
adc
adc
pop
je
jbe
les
pop
fimull
aas
add
xor
adc
inc
aaa
pop
cmpsl
gs
out
rcrb
das
jg
int
lods
mov
ja
adc
loopne
sub
inc
icebp
adc
adc
push
mulb
inc
jg
inc
insl
lret
in
and
fcomip
push
jmp
mov
xor
inc
inc
xchg
nop
inc
mov
xchg
mov
ret
xchg
stc
sub
cltd
sub
xchg
loop
addr16
das
jb
sbb
ret
pop
loopne
mov
push
mov
lds
push
sub
sub
daa
dec
shlb
sarb
syscall
add
mov
mov
repz
pop
jg
cwtl
fimull
icebp
jecxz
adc
xchg
jmp
int
andl
sub
jnp
movsb
jae
pop
loopne
sar
mov
xchg
test
sub
xor
sub
hlt
addr16
or
lret
fnstcw
daa
mov
or
cltd
dec
fadd
pop
cmp
push
cld
data16
dec
imul
adc
movsl
jle
dec
dec
inc
jns
jae
add
inc
outsb
das
pop
adc
dec
xor
and
add
push
loop
popa
mov
dec
aad
mov
jno
fimuls
movsb
test
out
pushw
jb
add
lock
pop
mov
xlat
cmp
pop
mov
loop
mov
sub
sbb
mov
andl
or
mov
out
xchg
inc
outsl
xchg
repnz
rcrb
pushf
cs
push
push
lds
rcl
fs
sbb
dec
cmp
mov
and
add
cmpsb
jecxz
push
mov
mov
mov
mov
add
adc
or
mov
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
aaa
xor
repz
jne
in
xor
xchg
and
mov
xor
pop
inc
pop
out
jecxz
lods
add
add
clc
lock
loop
movsb
mov
scas
inc
aam
or
jne
inc
das
mov
mov
aam
out
dec
out
orl
jg
mov
lods
cmp
aam
imul
or
dec
jae
imul
pop
fldenv
cmpsb
add
push
mov
popf
lods
jg
jb
es
out
jae
sbb
loope
dec
fsubrs
imul
and
cld
cmp
xchg
cmp
push
aaa
add
pop
cmpsb
inc
pop
mov
inc
xchg
sti
and
push
add
sbbb
xchg
push
dec
push
imull
jmp
xchg
mov
add
out
and
mov
icebp
lea
popa
jb
pusha
xor
adc
das
sbb
pusha
es
ljmp
pop
dec
loopne
es
mov
xchg
fnstcw
les
mov
js
aad
pop
push
jp
pop
jge
cs
mov
jnp
fnstsw
jmp
test
pop
xor
mov
std
je
in
pop
sbb
mov
xchg
scas
cmp
aas
xor
push
sub
lods
mov
ss
xchg
addr16
sahf
xchg
cli
mov
sub
call
ret
or
jmp
mov
out
pop
hlt
shl
sub
adc
test
mov
lods
inc
add
sbb
outsb
fidivrl
jbe
jnp
negl
loopne
movsb
scas
lods
cli
repz
and
mov
mov
dec
out
jbe
pop
mov
jl
outsb
jl
sbb
sbb
mov
andl
cs
roll
add
ljmp
mov
icebp
into
shll
push
aad
shll
jb
sahf
mov
daa
out
test
test
jp
jb
lock
mov
lret
iret
and
inc
lret
inc
outsb
rorl
enter
xchg
gs
aas
cmp
push
fidivrs
das
lock
add
xchg
addr16
imul
mov
mov
fstps
pusha
jns
push
aam
cli
jne
jmp
mov
sub
div
sarb
clc
imul
scas
add
call
adc
adcb
adc
leave
mov
testl
insl
loop
int
dec
pop
sub
out
push
lcall
mov
xor
pop
out
fstps
sub
sbb
nop
imul
stos
ds
sub
xchg
fucomi
or
jecxz
mov
nop
les
mov
es
decl
sub
ret
mov
fs
jo
sbb
insb
jecxz
lret
lds
dec
shl
aad
pop
pop
lcall
xchg
inc
jmp
add
pop
je
xor
ret
jns
loop
pop
xlat
push
leave
mov
lret
je
leave
lret
dec
lods
orl
mov
pop
int
out
imul
jle
cmp
bound
and
pushf
outsl
sub
scas
jno
cmc
aad
xor
mov
and
into
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
xor
adc
adc
adc
jo
loopne
icebp
sub
aas
arpl
inc
jmp
test
and
sub
shl
in
icebp
mov
cli
lods
pop
xor
cli
ret
or
pop
test
gs
and
ffree
and
add
or
ja
mov
mov
jmp
mov
repz
adc
sub
in
pop
mov
jg
sbb
adc
cmp
lahf
sub
and
leave
aad
imulb
aaa
popa
sbb
adc
jne
xchg
mov
stos
pop
sbb
push
dec
ds
inc
jne
test
xor
inc
push
and
pop
and
dec
jl
ret
lea
inc
ss
adcb
call
test
lds
push
mov
lods
jae
pushf
sbb
jb
out
adc
add
in
aaa
dec
ja
push
and
cmpsl
das
inc
dec
outsb
ret
insb
jnp
dec
jb
mov
inc
mov
dec
fbstp
fidivl
inc
aam
scas
clc
movsb
or
in
stos
mov
push
scas
call
inc
or
sbb
js
nop
mov
push
cmpl
jnp
mov
pop
xchg
fisubrs
xor
mov
inc
out
push
add
push
pop
cmc
in
test
push
jno
mov
out
in
add
fwait
cmp
mov
dec
aad
pushf
xor
loopne
xchg
and
lea
cmpsl
test
out
jp
sbb
sbb
mov
les
inc
push
es
push
inc
xor
out
repnz
xchg
js
or
or
adcl
inc
shr
aas
mov
jecxz
ja
incl
push
in
mov
daa
repz
out
push
insl
shl
sub
push
adc
clc
hlt
mov
or
sbb
jle
jecxz
std
pop
jecxz
sbb
ffree
ret
add
and
push
xlat
out
mov
arpl
mov
repz
xchg
and
adc
xlat
data16
adc
push
push
or
mov
mov
mov
add
cs
ret
push
pop
out
xor
sub
cmp
aam
cwtl
mov
sub
add
ds
fists
nop
sub
mov
inc
movb
or
subl
xor
rcrl
test
mov
push
test
add
scas
pop
ret
or
jbe
mov
cmp
dec
cltd
cmc
out
test
loop
inc
ret
dec
stc
insb
jmp
xchg
in
out
sub
mov
cltd
fdivl
pop
push
ret
pop
outsb
cld
mov
test
jne
mov
test
imull
movsl
xor
jbe
das
imul
enter
fidivl
jae
sarb
sbb
int
jno
insl
jecxz
cltd
lods
push
enter
add
fdivrl
sub
cmpsl
shll
xlat
jmp
add
jnp
add
insl
mov
movsb
int
mov
fisubrl
js
sub
add
mov
dec
lret
sti
out
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
xor
stos
ret
sbb
adc
movlps
xor
sbb
mov
add
and
stos
push
push
sbb
call
xlat
lahf
adc
inc
mov
clc
js
push
mov
movsl
adc
lea
sahf
push
dec
dec
sbb
jp
subl
mov
add
int
hlt
xchg
pop
ds
ret
jbe
mov
sub
lret
aas
jle
or
test
or
int3
xor
mov
cmp
push
mov
cs
mov
cld
add
inc
mov
or
xchg
insb
cli
mov
jle
pop
dec
data16
cmpb
cmp
pop
pop
mov
mov
test
gs
les
addps
pop
test
mov
int
ds
shll
mov
jnp
rclb
test
fs
inc
ja
xchg
jne
jl
inc
xchg
inc
fcoms
lods
shll
orl
xchg
lods
xchg
xor
or
dec
sub
ljmp
xchg
dec
addr16
inc
imul
test
jecxz
in
arpl
push
loopne
andb
push
jo
hlt
fucom
adc
fldl
shlb
stos
fimuls
add
jbe
or
pusha
add
dec
mov
jl
push
push
fiadds
adc
ljmp
in
pop
in
push
leave
mov
jns
add
rcl
mov
ss
mov
mov
ljmp
add
jp
stc
in
movsb
stc
movsl
add
data16
sbb
ficompl
and
test
cmpsb
imul
mov
and
clc
push
loop
mov
aam
fidivrs
imull
cmc
pop
jecxz
xchg
xchg
mov
insb
jp
int3
imul
xor
adc
jmp
mov
cmpsl
lods
int
movsl
js
scas
icebp
dec
jmp
movsl
or
bnd
daa
enter
dec
sub
js
cmp
movsb
add
rcll
jp
aaa
addr16
shrb
mov
data16
jbe
mov
test
aad
lret
test
adc
and
test
data16
mov
push
inc
divb
cld
dec
movsb
pop
insl
pop
push
jge
fcomip
inc
xchg
imul
in
cltd
scas
pop
adc
ljmp
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
insb
cmpb
movlps
nop
jnp
loopne
add
stos
pop
push
lea
sbb
repz
xor
adc
jecxz
test
sub
mov
cmp
shlb
cld
aam
into
jbe
dec
inc
lret
jecxz
int3
movsb
insb
dec
adc
pop
pop
push
sbb
dec
fwait
adc
sub
in
jno
add
inc
ret
add
sbb
rol
and
fidivs
lods
aas
or
sbb
decb
cmp
clc
jnp
jecxz
test
xchg
roll
pop
mov
ss
mov
ljmp
dec
std
or
cmc
mov
push
pop
fs
jl
xor
dec
lahf
out
std
xor
in
or
add
leave
popf
dec
cmpsb
xchg
mov
mov
movsl
loopne
mov
mov
jb
mov
out
fidivs
out
inc
mov
mov
inc
sbb
sbb
lods
pop
add
or
sahf
or
je
aad
lods
mov
xor
sbb
outsl
mov
xor
push
in
pusha
rorb
fwait
outsb
rclb
rorl
fnsave
jnp
cli
lds
pop
dec
lret
jae
stos
jnp
mov
push
dec
fildll
mov
pop
inc
cmp
cmp
and
inc
test
cmp
outsb
cmpl
jp
in
cmp
sarb
sbb
cmpsb
lcall
in
das
add
or
mov
fwait
jne
jo
jmp
push
stos
xor
ficompl
out
in
sbb
insb
cmpl
pusha
fstps
add
loopne
in
imul
ja
jmp
dec
sbb
loopne
outsb
int
sbb
or
or
jmp
xchg
pop
or
ja
dec
or
out
loope
jo
jnp
cs
pop
rcl
cmp
and
fidivs
das
xor
cmpb
call
sub
clc
mov
gs
scas
cli
and
and
push
xchg
mull
sbbl
pop
fsubs
adc
or
and
or
cmp
sbb
ret
flds
jge
pop
arpl
hlt
mov
push
pop
add
mov
andl
xchg
push
ljmp
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
sbb
adc
decb
adc
pop
inc
cmpsb
loop
out
jne
mov
pop
mov
mov
hlt
sub
enter
insl
jl
addb
loopne
xchg
out
insl
ret
lret
jecxz
xor
call
cmpsb
mov
popa
cmp
add
clc
push
cmpsb
push
pop
jle
in
fdivl
mov
shlb
lods
mov
out
push
mov
xor
fstpl
add
iret
inc
dec
xchg
jl
inc
xor
xor
sub
pop
ss
fildll
xor
lea
xlat
sub
adcb
imul
lock
shll
cmp
icebp
ljmp
loopne
fs
repnz
call
outsl
and
imul
out
mov
imul
adc
clc
cli
add
jns
shl
and
add
xchg
adc
xchg
xor
stos
cltd
mov
mov
pusha
out
mov
cmp
cmc
dec
pop
mov
mov
mov
outsl
fs
sub
imul
les
loopne
sbb
mulb
inc
rcr
rolb
stc
xorl
cltd
hlt
addr16
popw
jo
bound
in
jg
imul
xchg
cmp
aaa
push
movsb
inc
dec
notb
dec
lods
loopne
scas
addr16
ss
mov
lock
inc
xor
rolb
cmp
loope
pushf
test
lea
jb
lods
insl
ret
cli
push
out
push
ss
adc
inc
adc
cli
fstl
xchg
imul
pop
dec
shll
push
out
cmp
add
xchg
and
xorl
adc
mov
je
mov
mov
or
pusha
jns
pop
scas
inc
jmp
dec
adc
loopne
cli
cmp
pop
mov
arpl
and
and
jle
mov
mov
sub
xchg
sbb
push
pop
out
repz
ret
rcr
pop
add
nop
stos
std
mov
je
adc
jb
cwtl
js
mov
pusha
or
sbb
stc
cmp
inc
popa
jne
rcl
jmp
and
test
out
ret
sub
mov
xchg
mov
jnp
mov
push
out
xchg
aas
or
sbb
xchg
xor
inc
pop
aad
lcall
pop
add
sub
mov
mov
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
cmp
xor
decb
adc
enter
js
js
daa
fcom
mov
adc
xchg
out
mov
mov
sub
lcall
push
leave
and
ds
popa
test
jecxz
in
adc
fldt
jo
and
xchg
mov
fmuls
add
dec
iret
push
cmp
pushf
bound
sbb
or
test
push
andl
pushl
js
testl
cmpsl
mov
out
sahf
push
cmpsb
lods
dec
aaa
mov
xor
clc
lcall
xchg
cmp
lret
sub
or
es
pop
jge
mov
std
jmp
mov
mov
push
pop
js
inc
jg
push
popl
dec
mov
lret
popa
or
das
fisubl
ljmp
das
enter
test
cmpsl
repnz
mov
inc
mov
add
iret
lea
imul
call
inc
clc
or
pop
fwait
mov
icebp
push
add
push
mov
aad
call
and
jmp
inc
cmp
xchg
dec
call
mov
mov
push
mov
jp
mov
xchg
add
mov
lret
adc
adc
test
push
fistps
jo
adc
mov
add
fisttps
orl
lds
stc
mov
clc
push
sub
xchg
mov
mov
addb
mov
xchg
and
out
cmp
mov
push
pop
push
je
sbb
mov
xchg
xlat
or
add
sbb
mov
gs
sahf
mov
test
mov
mov
add
mov
xor
outsb
stos
adc
jno
stos
mov
mov
imul
icebp
mov
jp
jbe
sbb
mov
inc
or
pop
jp
and
ficompl
and
xchg
loopne
and
jl
or
sti
cmp
lcall
rcr
dec
rorl
push
notl
es
fsubrs
cltd
dec
mov
mov
daa
jg
andl
call
sub
dec
mulb
and
xchg
andl
fsts
cmp
cmp
stos
pop
jno
cmc
pop
outsl
pop
push
insl
mov
adc
sbb
movsb
jl
rorl
add
add
decb
icebp
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
xchg
stos
pop
or
adc
movlps
lahf
sbb
pushf
cli
push
ret
fsubrs
ffree
add
mov
lock
mov
out
jo
stc
jle
add
mov
lea
stos
jno
or
sahf
mov
clc
pop
pop
out
inc
repnz
test
jo
out
inc
pushf
jo
sbb
sub
sti
lds
jmp
jl
mov
call
lea
xchg
push
adc
or
adc
jp
or
pop
push
in
sbb
loope
fmull
enter
mov
or
data16
aam
adc
call
lds
mov
mov
shll
inc
add
scas
call
pop
out
test
stos
jle
lahf
cmpw
pop
jno
and
dec
mov
or
test
divl
dec
add
mov
mov
pushf
pop
es
dec
ja,pt
and
push
adc
fwait
popa
lcall
insb
mov
out
into
enter
sbb
mov
dec
dec
adc
arpl
pusha
mov
lods
fisubs
add
mov
repz
cmp
fwait
sub
rorb
mov
stos
insb
movsl
shl
dec
mov
repz
popf
xlat
add
clc
insb
mov
jno
or
pop
sti
ss
inc
in
sbb
jbe
cmp
sub
and
aas
cmpsl
add
dec
sub
push
stc
lock
popa
dec
and
pop
pusha
out
xor
scas
ljmp
push
fisttpll
add
adc
xorb
adc
out
inc
xchg
insb
rcrb
xor
jo
aaa
pop
les
addl
adc
sbbb
adc
insb
into
aas
ds
aad
inc
add
stc
loop
ljmp
loopne
xchg
sub
in
sti
push
dec
mov
ret
adc
fnstsw
pop
icebp
jmp
inc
jns
cs
clc
repnz
add
lock
adc
dec
push
imul
call
lcall
dec
xor
dec
jecxz
hlt
dec
jmp
sbb
ficomps
mov
arpl
cmc
out
out
or
push
rcl
adc
or
ljmp
jb
enter
adc
test
jne
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
cli
insl
mov
lea
fists
aaa
jge
std
push
jo
mov
out
pushf
pop
push
scas
xor
mov
mov
lea
and
bound
subb
fists
cmpsl
inc
push
call
cmpsb
test
ss
inc
xor
adc
xchg
lock
jb
or
bound
push
lea
sbb
les
enter
dec
jae
xchg
inc
rep
in
idivb
mov
les
inc
andb
rcll
jne
cmp
pop
cmp
adc
xor
push
ficoms
js
aad
fsubrl
xchg
mov
popf
fsubl
inc
or
push
sbb
hlt
in
xchg
movsl
push
jb
imul
imul
cmpsl
lret
fwait
into
xor
xchg
ja
std
rcrl
fistps
aad
mov
sub
push
mov
add
nop
xchg
add
mov
jb
push
inc
add
ds
pop
jmp
sub
aad
adc
push
push
mov
mov
call
das
arpl
sub
arpl
js
ret
in
sub
test
jecxz
push
inc
jmp
sarl
repnz
mov
jnp
mov
push
cmp
int3
cmpl
adc
lock
data16
jns
ret
mov
jmp
lea
lods
inc
add
mov
jge
sbb
and
xchg
jp,pt
mov
stos
in
insb
movsb
enter
roll
call
stos
xor
aam
imul
ljmp
mov
aad
adc
sbb
ror
push
repz
pop
xor
cmp
and
jbe
add
jle
fwait
testb
dec
shrb
call
ret
lods
aaa
cmpsl
lcall
cmc
dec
pop
sarb
dec
cld
mov
pop
fisttpll
inc
inc
xorl
loop
clc
andb
test
mov
aas
fwait
xchg
cld
bnd
stc
out
sub
xor
inc
cmp
push
sub
dec
fwait
push
add
cs
out
dec
cwtl
int3
push
test
jp
out
pop
adc
aam
mov
std
xor
cld
ljmp
jmp
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
daa
testl
popa
movlps
mov
jo
push
outsb
sbb
fs
xchg
sbb
in
xchg
fiaddl
aam
in
mov
in
dec
outsb
or
rorl
cmc
cmp
xchg
adc
idivb
add
decb
orb
push
mov
xor
je
mov
push
lret
aas
fdivrs
add
out
in
inc
mov
add
sbb
cwtl
dec
xor
or
adc
pop
mov
out
loop
xchg
addl
iret
loopne
xchg
andl
or
xchg
lret
movsb
and
mov
mov
mov
jbe
fstpl
xchg
call
push
xchg
xchg
mov
scas
sbb
repnz
stc
jne
stos
mov
adc
pop
mov
fidivs
and
cmp
lret
xor
punpckhbw
xchg
mov
or
es
setne
jne
sub
test
out
mov
shlb
push
incb
out
jb
jecxz
js
or
leave
nop
std
push
ds
insl
mov
pop
mov
push
popa
pop
test
inc
cltd
stos
mov
notl
call
pushf
addr16
inc
or
scas
fmull
pop
out
fisubs
and
sbb
stos
pop
xor
add
dec
sti
cmp
sub
xor
mov
mov
add
into
xchg
push
aad
ds
mov
movsb
int3
xor
add
pop
xlat
pop
or
das
sbb
pop
repz
daa
jne
mov
dec
mov
dec
xor
xchg
insl
dec
cmp
adc
xchg
fwait
jne
mov
popa
ds
mov
sub
pop
out
cmp
mov
je
push
sbb
jbe
insb
cltd
xor
nop
into
dec
sub
popa
dec
pop
mov
fsts
push
jno
sar
in
cs
roll
lcall
mov
mov
aas
jbe
aaa
xchg
mull
pop
data16
push
xchg
bound
bound
sbb
inc
dec
mov
jb
mov
js
jae
outsl
in
adc
scas
hlt
jecxz
push
xchg
push
cmp
in
pop
cmc
pop
mov
arpl
push
mov
mov
int3
ss
sysret
insb
push
xlat
dec
cmp
in
dec
out
jecxz
mov
inc
xor
sahf
fidivrs
inc
mov
loopne
mov
pop
xchg
adc
int3
mov
dec
fiaddl
scas
xchg
dec
in
aas
mov
scas
and
cmp
mov
jle
call
adc
shlb
xchg
loop
mov
and
aam
mov
inc
cld
dec
pusha
add
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
lahf
sub
jle
clc
adc
popa
movlps
sub
enter
jmp
push
sahf
sbb
loope
xchg
data16
stc
sahf
adc
repz
mov
cli
lods
mov
rol
xchg
mov
mov
pop
les
cltd
clc
pop
sbb
addr16
fcoml
es
cmp
cwtl
dec
ret
mov
int3
lock
pop
sub
repnz
xor
lea
fidivs
insb
mov
out
ja
mov
sub
adc
jl
lret
push
aaa
aaa
pop
repz
ljmp
outsb
insb
jo
add
dec
cs
repz
ret
inc
xchg
shlb
dec
aam
idivl
lret
push
push
icebp
add
shl
pop
push
mulps
je
pop
out
scas
jmp
pop
xchg
fldt
das
stos
scas
mov
inc
push
jl
xor
in
adc
fldl
ds
scas
cmpsl
lcall
dec
arpl
pusha
aas
add
sbb
gs
push
jb
popw
xlat
js
into
int
mov
shll
sub
adcl
repz
pop
imul
das
xor
icebp
shrb
jno
mov
scas
pop
pusha
sub
jge
jnp
repnz
mov
push
mov
test
mov
stc
fisttpll
lret
jmp
lock
or
or
outsl
sbb
aad
dec
sub
cmpsl
movsb
mov
adc
jae
jae
inc
cmpsb
fcomps
and
dec
adc
cmp
and
iret
xor
xlat
js
mov
movsb
movsb
into
push
xor
xor
mov
or
adc
dec
in
iret
cld
sarb
ljmp
setns
int3
push
sbb
xorb
adc
scas
and
mov
or
lret
loop
inc
mov
xchg
add
inc
pop
mov
popf
xchg
loopne
cmp
dec
xchg
jo
into
mov
push
push
adc
out
mov
rcl
jmp
fidivrs
fiaddl
xlat
fdivrl
jl
xchg
sbb
int
std
or
push
iret
dec
add
xchg
sub
inc
xchg
pop
in
jno
mov
cli
mov
jge
pushf
push
push
jg
mov
out
cs
outsb
stos
inc
mov
cmp
fwait
adc
mov
popa
mov
aad
hlt
and
adc
or
addr16
pop
dec
sub
cwtl
add
out
mov
idivb
mov
sahf
and
adc
xchg
jb
xor
pusha
xchg
sbbl
sub
fnstcw
xchg
aas
ret
in
inc
sub
lcall
add
mov
iret
xor
and
xor
arpl
jmp
mov
mov
mov
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
test
add
popa
movlps
xchg
mov
out
push
pop
mov
lahf
or
mov
inc
arpl
movsb
jge
mov
dec
adc
fwait
xor
pop
jo
jmp
stos
lret
and
mov
loopne
roll
jle
pop
ret
sub
xor
push
pop
adc
out
stos
adc
ljmp
dec
inc
jne
outsl
cmp
stc
in
sti
leave
pop
ja
into
inc
pop
cld
dec
and
in
pop
lret
mov
add
sub
dec
push
sub
aaa
xchg
inc
xchg
mov
cmp
scas
xor
sbb
adc
jo
aas
xchg
cmp
ljmp
insl
push
push
pop
lods
jmp
inc
xchg
lock
mov
sbb
loopne
in
jl
hlt
shrb
cmp
mov
bound
and
pop
sub
dec
loopne
xor
and
push
or
pop
jmp
lock
and
ds
pop
xchg
cmc
aaa
jno
stos
in
xchg
data16
in
push
xchg
mov
es
sub
or
ret
or
xor
js
pop
adc
iret
pop
inc
sbb
cltd
test
cmp
andl
aad
or
mov
imul
sbb
jge
push
bound
test
or
lret
test
mov
cmpsb
jns
sub
pushf
ret
lahf
jp
jmp
or
push
ja
jmp
fstpt
pop
adcl
pop
pop
out
cmpsl
les
inc
add
imulb
fimuls
xchg
dec
loopne
cmp
and
mov
ss
data16
aad
xchg
adc
call
pop
xor
inc
ficompl
and
test
or
je
outsb
mov
add
ss
bound
mov
inc
mov
sub
pop
scas
insb
dec
inc
pop
dec
mov
pop
sub
mov
fstps
jg
in
in
mov
movsl
xchg
out
in
stc
push
xchg
mov
mov
iret
cltd
sarb
add
sti
pop
fmull
push
push
clc
push
fsub
cmp
or
mov
enter
push
je
imull
inc
push
sub
sbb
add
push
pop
add
jns
inc
sub
dec
and
out
add
lahf
inc
mov
stos
sbb
aas
push
ficomps
cmp
mov
mov
movsl
scas
test
mov
jb
xchg
pop
ficoml
cmp
xor
inc
insl
jo
popa
or
add
cwtl
jge
test
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
lcall
adc
popa
movlps
test
mov
test
imul
mov
aad
fucom
rdpmc
fnstsw
mov
xorl
movsb
hlt
cli
xchg
in
jnp
adc
int
mov
icebp
pop
rolb
mov
mov
cmp
aam
pop
push
push
inc
pusha
sub
jae
mov
int3
mov
add
hlt
enter
sub
pop
loopne
push
loope
jo
loop
and
or
rcrl
dec
pop
mov
or
jl
shr
aam
jl
pop
cld
push
push
jge
pop
lods
and
push
stos
nop
pop
push
std
lock
daa
ss
mov
sbb
jl
xor
scas
gs
out
xchg
test
fmull
adcl
js
shrb
mov
jne
xor
or
sub
push
fwait
inc
insb
push
in
inc
shl
jl
subb
pop
sbb
sub
cmpsb
jge
xchg
loope
lods
orl
pop
lcall
push
lahf
push
loopne
fnstcw
fldenv
xchg
fdivrl
push
out
push
shrb
push
lret
sahf
dec
add
lret
cmp
and
sbb
scas
cmp
xor
jbe
in
mov
sbb
hlt
imul
jb
inc
idivb
or
sti
shlb
sbb
sub
loopne
movsb
dec
jns
mov
jmp
sub
loope
lods
mov
mov
mov
push
les
xor
dec
jg
rorb
movsl
mov
fistpll
or
ret
and
fisubrl
xchg
dec
cmpsb
push
jl
outsl
xchg
pop
aaa
cmpsb
xchg
xlat
in
sbb
out
sbb
or
js
sub
mov
fbstp
and
shlb
into
ss
stos
insb
or
lret
loop
mov
mov
mov
mov
jns
test
cli
cmp
cmc
stc
cltd
in
push
insb
aam
test
sub
jns
jae
sbb
sub
scas
inc
sub
loopne
jl
add
sub
dec
push
in
inc
adc
mov
add
inc
xchg
jge
sub
or
outsb
add
jmp
sar
std
bound
push
movsb
cwtl
xchg
inc
cmp
stos
mov
mov
sub
lods
ficoml
ret
and
ds
fmul
jno
inc
jb
enter
adc
mov
sub
iret
scas
pusha
rcll
test
mov
cmp
fwait
xchg
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
inc
add
mov
xchg
movlps
test
adc
test
test
mov
or
cmp
lret
loopne
fnstsw
popa
ss
xchg
dec
out
into
test
inc
push
mov
lods
sub
sti
insb
cmpb
sbb
jb
mov
dec
xor
loopne
test
and
xchg
mov
xchg
jns
in
test
movsb
jae
sbb
jb
loopne
adc
jg
push
sub
dec
repz
jecxz
fwait
ss
enter
jb
sub
in
int3
xchg
test
pop
xchg
out
xchg
mov
inc
fisubl
mulb
cmp
test
push
int
loop
mov
add
mov
repz
sbb
mov
lods
jmp
pusha
fwait
mov
dec
add
cmp
leave
mov
inc
xchg
xor
lods
push
or
test
sub
mov
pop
sub
xchg
cmp
dec
scas
mov
pop
or
jns
into
cmpsb
jge
out
ss
pop
xchg
repnz
dec
pop
mov
push
sbb
or
mov
iret
sbb
push
fistpll
or
sub
xor
adc
lds
fbstp
loopne
mov
or
sbb
ret
loop
popa
or
test
dec
dec
push
nop
dec
sbb
pusha
adc
adc
les
add
popa
arpl
mov
xchg
mov
dec
jns
sti
lds
dec
mov
jle
flds
shl
sbb
mov
hlt
hlt
dec
adc
je
mov
test
sarl
pop
repnz
repz
xor
xor
insl
mov
mov
je
cmc
fidivl
or
jb
jecxz
movsb
or
sbb
add
in
imul
sub
mov
mov
add
ds
clc
repz
std
push
fs
adcl
add
xor
dec
aam
cwtl
test
lods
aad
sub
mov
adc
lods
lret
fmuls
inc
int3
fwait
mov
xchg
mov
mov
cmp
je
rep
andb
lods
jle
scas
dec
in
jecxz
sub
cmp
pop
sub
pop
bound
pop
std
inc
jno
fs
das
pop
movsb
je
pop
fwait
les
aad
sbb
dec
repz
jbe
inc
push
mov
mov
outsb
jp
les
mull
mov
add
dec
cmc
sub
aad
inc
push
int3
xor
push
in
fcmovnb
add
adc
add
movb
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
bnd
test
adc
xchg
movlps
movq
and
mov
orl
pop
sub
push
jb
loope
sahf
jecxz
adc
out
mov
fwait
shr
sbb
icebp
jns
push
push
adc
jge
inc
adc
loop
aad
imul
fldcw
leave
nop
sub
add
mov
sub
mov
push
jne
mov
cmp
scas
mov
jl
cmp
and
push
sbb
inc
in
dec
pop
ja
sahf
or
inc
inc
dec
inc
adc
xor
xor
push
mov
dec
inc
jb
xchg
mov
dec
pop
push
adc
je
jl
mov
mov
jg
test
stc
cmp
lods
and
lods
sbb
jo
pop
ljmp
lds
xchg
jb
icebp
int3
pop
lcall
gs
roll
sbb
dec
insl
xchg
aam
ja
add
inc
scas
jb
push
mov
scas
inc
push
bound
in
inc
mov
mov
aaa
int3
mov
mov
or
roll
aad
repnz
inc
ret
push
rcrb
aam
mov
sbb
mov
cmc
sub
mov
ja
out
adc
add
shll
adc
add
sti
push
pop
or
ljmp
movsl
xchg
or
add
sub
push
and
add
icebp
adc
jl
xor
adc
sbb
daa
cwtl
xchg
mov
dec
sbb
fbld
mov
stos
jmp
jmp
ja
hlt
and
insb
cltd
stos
cmpl
pop
mov
fimuls
lds
in
and
jecxz
push
test
cmpsb
sbb
dec
or
mov
mov
jg
sti
sbb
jle
std
xor
cmp
push
mov
cmp
sbb
xor
sbb
jmp
pop
xchg
les
dec
adc
popf
sub
lcall
inc
pop
aam
jg
or
adc
xchg
mov
mov
sub
mov
pop
inc
pop
icebp
push
mov
mov
stc
std
inc
jecxz
mov
pop
aad
inc
in
jg
dec
push
cmp
movsb
ja
mov
push
dec
xor
sbb
decl
dec
popf
xchg
push
in
inc
leave
dec
inc
aam
push
lret
out
shl
adcl
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
adc
mov
das
dec
xor
mov
repnz
pop
call
xchg
into
mov
pop
subb
sub
and
ret
ja
pop
sbb
fcomps
cmp
jmp
arpl
xchg
jae
nop
mov
cltd
mov
imul
or
fs
add
stc
push
cmp
jne
inc
mov
fsts
mov
pmaddwd
outsl
data16
movsl
out
gs
hlt
lds
add
ss
cld
cltd
cwtl
frstor
into
mov
dec
jo
cld
sbb
scas
int
xor
movl
mov
dec
out
cmp
roll
es
or
adc
jnp
push
push
cltd
jl
in
les
daa
out
call
scas
dec
fdivr
dec
scas
push
lea
js
mov
xor
push
ss
add
dec
push
pop
inc
testl
lahf
dec
pushl
adc
mov
sub
fwait
scas
push
dec
daa
gs
pusha
or
push
mov
push
cli
and
js
test
or
xchg
fs
pushf
loopne
push
orl
in
ja
xor
cmpsl
jl
sub
mov
jno
pop
xchg
dec
cmp
clc
pop
and
out
push
xor
enter
dec
push
hlt
imul
bound
jae
mov
push
fs
cmp
cltd
jno
rcrl
pop
jo
cmc
xchg
push
nop
and
test
gs
and
test
or
cmp
enter
sub
and
jmp
adc
inc
js
jl
test
sbb
sub
jns
mov
pop
pop
addr16
test
xor
test
jae
and
fmull
pop
mov
aad
ds
mov
push
movsl
icebp
cmp
xchg
std
cmp
mov
jbe
xchg
in
aaa
int
in
xchg
cmpsb
mov
cmp
sbb
test
lods
test
loopne
ja
scas
xchg
add
inc
jnp
jns
or
sti
sahf
stc
cmpsb
leave
mov
xchg
aas
out
inc
mov
int3
push
mov
xlat
xchg
lea
into
and
pop
subb
sbb
not
aas
repz
je
mov
gs
add
xchg
scas
or
push
pop
add
dec
stos
shll
lret
out
arpl
out
jnp
out
sarl
mov
adc
addr16
lahf
inc
les
in
aaa
outsl
mov
xchg
jo
xor
ljmp
xor
andl
jmp
sub
sbbl
pop
js
lods
mov
fsts
adc
in
xor
push
and
pushf
orl
ljmp
in
and
arpl
incb
jle
and
sbb
or
pusha
mov
xchg
data16
push
or
and
mov
loope
xor
das
imulb
dec
popf
imul
int3
and
movb
xchg
sbb
push
jnp
imul
sbb
dec
dec
les
fwait
cwtl
xchg
orl
mov
add
or
stos
mov
bound
test
xor
pop
nop
or
and
sbb
addb
sub
add
and
xchg
cmp
or
xchg
dec
outsl
xor
mov
mov
xchg
das
inc
sub
mov
test
push
push
testl
dec
repz
push
fadds
mov
roll
pop
xchg
mov
fdivrl
not
js
mov
gs
sbb
push
xlat
add
in
adcb
push
mov
jb
mov
sahf
das
fsubl
shlb
sti
adc
call
mov
push
lock
call
data16
into
push
sbb
bound
incl
inc
cli
lods
dec
add
pushf
std
test
dec
xor
gs
bound
cmp
add
test
inc
rcrl
dec
and
xor
orl
and
mov
in
hlt
ljmp
pop
jns
pusha
icebp
and
shlb
jge
jns
cmpsb
and
cld
dec
pusha
decb
jmp
add
adcl
in
jge
jg
in
scas
sbb
shrb
mov
mov
std
or
pushf
mov
add
xor
scas
pop
stos
jnp
mov
cmp
movsb
les
jp
push
mov
int
loope
xchg
or
adc
pop
adc
jg
cmpb
xchg
aas
ret
mov
adc
mov
jle
push
push
mov
dec
mov
mov
repnz
sbb
xchg
ss
mov
iret
mov
outsl
mov
pop
aaa
cmp
aad
shll
sahf
out
into
xchg
adc
hlt
xor
sub
shll
out
imul
mov
push
rclb
jge
sbb
lods
pop
test
fidivrs
leave
cmpl
push
jne
push
cwtl
fs
lcall
shr
addl
shl
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
xchg
mov
out
mov
inc
xor
sbb
push
arpl
or
pop
or
adc
pop
jae
sub
out
mov
int
jl
nop
fcoms
sbb
add
or
jg
sbb
dec
pop
pop
mov
sub
push
aam
xchg
ficoms
inc
adc
adc
pusha
mov
rolb
repz
jbe
add
lahf
ret
push
clc
stos
jo
adc
dec
sbb
dec
cmp
aaa
dec
dec
xchg
cmp
adc
lods
lcall
pop
cmp
dec
inc
add
and
stos
xor
outsb
xchg
cld
pushf
jl
pushf
notb
cmp
sub
loop
push
lcall
jb
scas
cmp
mov
add
sbb
orl
hlt
lock
lret
xor
dec
insl
mov
loope
aaa
xchg
push
push
daa
dec
fdiv
inc
arpl
ret
mov
fimuls
jecxz
mov
fcoms
rorl
mov
mov
in
mov
add
js
inc
xor
jnp
das
insb
das
jbe
repnz
test
or
int3
mov
test
nop
sbb
mov
dec
pop
dec
jb
sahf
cli
arpl
cmp
mov
fnstenv
cmp
enter
or
xor
aaa
dec
daa
pop
sbb
dec
sub
mov
adc
movsl
lahf
and
test
push
jl
popa
push
add
dec
push
mov
imul
js
dec
into
gs
jne
adc
stos
inc
ss
lret
loopne
inc
push
loopne
mov
lret
add
push
aam
mov
test
inc
xchg
into
mov
rorl
iret
push
aam
jns
aad
push
ds
fildll
orl
xchg
pushf
mov
xlat
pop
sahf
add
sahf
mov
inc
cltd
and
or
jbe
sub
inc
inc
push
xor
jno
dec
and
movsb
mov
jae
movl
dec
adcl
loop
lcall
pop
jnp
mov
scas
mov
mov
lret
aaa
cmpsb
out
sbb
push
shl
jle
sbb
lret
loopne
test
les
rol
out
push
cmp
insb
ret
enter
dec
mov
or
and
mov
jle
mov
adc
popa
ljmp
loope
xor
out
inc
in
and
mov
jmp
mov
cmpl
mov
movl
mov
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
int
cmc
stos
mov
movlps
lcall
mov
adc
push
cmp
inc
pop
out
pushf
and
fldt
cmc
adc
hlt
clc
fdivrs
xchg
jp
icebp
nop
stc
xchg
mov
pop
inc
into
mov
dec
mov
mov
lret
pop
aam
push
test
or
mov
adc
lods
fcompl
pop
or
call
cmpsl
sbb
popa
mov
mov
sub
inc
inc
pop
mov
lods
mov
cli
xor
push
shll
cmc
jb
xorl
fadds
pusha
push
outsl
cld
ret
mov
lods
inc
mov
mov
out
xchg
in
cmp
in
and
nop
mov
aam
repnz
inc
lods
insl
fstpl
bound
cmp
xlat
stos
jl
lcall
sbb
imulb
sub
outsl
out
fdivrs
xchg
sbb
pop
gs
cmp
sbb
hlt
dec
outsl
adc
pop
outsl
aam
shlb
ficomps
or
sbb
push
mov
jbe
cli
cli
insl
and
xlat
idivb
cli
sub
fsubs
mov
out
pop
xchg
clc
call
cmp
cli
sub
pop
pop
movsb
es
cmp
pushf
mov
mov
inc
test
rcl
xchg
mov
xlat
pop
cltd
inc
mov
inc
add
add
mov
jne
pop
daa
lret
in
movsb
std
outsl
push
cld
or
cmp
xor
shrl
enter
adc
cmp
cmp
lcall
push
cltd
add
mov
add
jle
pop
add
mov
push
xchg
sub
lods
out
fisubrs
mov
add
jmp
adc
int
movsb
mov
cwtl
push
mov
inc
push
fwait
sbb
movsl
jbe
mov
arpl
mov
testl
add
mov
fstl
shlb
adc
pop
cmp
pop
sub
jg
insl
pop
js
mov
adc
dec
test
incb
pop
pop
test
dec
xchg
lret
and
les
loopne
mov
mov
nop
sbb
jmp
jecxz
gs
in
fldt
xor
in
les
sahf
les
pop
pop
testl
test
jno
dec
mov
les
outsb
xchg
jbe
push
fldenv
outsl
ja
decl
jge
sub
or
in
adc
cmp
ret
pusha
das
jmp
ss
mov
pop
into
sub
sti
sti
outsl
fidivrl
mov
inc
jno
push
jns
jnp
mov
push
inc
rol
mov
aam
and
jae
xchg
inc
shlb
jmp
dec
clc
xor
adcl
xor
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
call
leave
adc
xchg
movlps
mov
in
fistps
orl
mov
jmp
je
sti
pop
nop
insb
mov
test
popa
xchg
xor
ds
push
pop
gs
shll
jbe
in
jmp
outsb
test
out
mov
test
xorl
addr16
add
data16
jns
inc
test
es
adc
mov
push
add
push
sub
ret
mov
push
mov
scas
mov
push
mov
inc
pop
movsb
xor
fisttps
jno
pop
or
cmpsl
sub
mov
pop
outsl
lret
mov
stos
pop
pop
mov
pop
sarb
jecxz
in
push
cmp
and
pop
dec
jbe
adc
fs
mov
jle
xchg
shr
mov
add
xchg
cmpsl
out
repz
xor
xchg
add
push
dec
and
mov
outsb
inc
lock
pop
loope
fucomip
mov
sub
dec
jbe
cmpsb
xor
dec
mov
xchg
stos
fidivrl
or
sbb
loop
push
pop
jb
adc
popa
fstl
push
test
push
scas
out
std
lahf
mov
cmp
and
jg
repz
mov
andb
dec
or
call
aad
xchg
dec
fmul
mull
ja
or
add
pushf
mov
jge
mov
inc
sub
mov
ret
andb
out
push
pop
mov
sbb
push
push
inc
hlt
xor
jge
scas
in
xor
pop
jb
sbb
ljmp
pusha
pop
add
das
movsb
xor
popf
test
push
hlt
cmp
pop
lret
mov
rol
int
lcall
ljmp
adc
sub
mov
xchg
or
push
mov
xor
mov
inc
add
es
xor
xor
and
lods
out
push
mov
push
xor
push
outsl
lods
cmp
xchg
xor
mov
push
lds
lret
push
aam
into
cmp
mov
mov
mov
in
inc
in
arpl
sahf
sahf
int3
jg
lahf
cli
inc
lock
cmovno
lcall
jecxz
push
lret
cmpsl
out
lret
imul
rcrl
xchg
ror
push
nop
stos
push
int3
imul
mov
and
cld
inc
movsl
movsb
push
fmuls
inc
fldenv
adc
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
mov
mov
xchg
pushf
push
jmp
pop
mov
adcb
sbb
scas
pop
push
pop
jno
je
test
hlt
jle
mov
cmpsb
add
sbb
add
movb
in
data16
jmp
in
lahf
gs
out
fcmovb
xchg
cmp
dec
jp
pushf
inc
adc
xor
jmp
inc
clc
subb
add
xchg
in
imul
out
sbb
nop
cwtl
rcrb
or
cmp
or
jb
addb
into
adcl
lods
nop
mov
jnp
push
mov
imul
push
movsl
imul
xchg
mov
jecxz
lods
fdivrs
call
sahf
sti
xchg
xchg
xchg
mov
imul
test
sub
cmc
imul
pop
push
sbb
push
jecxz
icebp
xchg
inc
xor
out
adc
adc
jbe
and
cmc
out
add
js
roll
and
loop
mov
sbb
int
stos
clc
mov
jp
rol
cmpsb
insl
sub
outsl
and
xchg
rolb
test
test
or
sbb
sub
mov
mov
adc
es
adc
shlb
lock
adc
or
add
sar
dec
push
and
xchg
rorb
ss
lahf
repz
les
sub
sbb
adc
xchg
inc
fsub
or
scas
adc
mov
xlat
add
add
sub
mov
adc
gs
add
xchg
push
dec
jno
mov
divl
sub
es
stc
dec
xor
jge
jecxz
adc
je
jbe
pop
aaa
int
pusha
sub
cmc
fdivrs
cltd
in
mov
pop
cli
mov
adc
or
aas
adc
rcll
xor
aaa
xor
ss
mov
out
jno
mov
fdiv
inc
test
rclb
sahf
cmp
es
mov
js
jbe
outsb
test
mov
mov
mov
xlat
mov
sbb
xchg
dec
fdiv
fldcw
fistpll
push
xchg
add
xor
add
sahf
stc
push
sub
adc
inc
pop
cmpsl
mov
pop
sub
iret
shrl
sub
adc
fwait
stc
or
sub
subl
mov
test
mov
mov
shl
call
jmp
imul
cltd
sbb
imul
inc
stos
push
mov
adc
lahf
xchg
je
lds
call
lds
mov
adc
push
stos
imul
int3
xor
push
pop
mov
insl
mov
mov
mov
xor
aaa
lds
xchg
mov
loop
fcompl
imul
jl
enter
jns
imul
sbb
sub
jge
adc
cmp
dec
in
in
cld
mov
jecxz
push
in
sub
mov
call
xor
pop
jae
iret
adc
pop
mov
and
sbb
xchg
fwait
lret
les
ja
mov
pop
popf
xor
sub
adc
inc
cwtl
pop
push
xchg
mov
jge
add
mov
in
mov
andl
lea
jns
stos
xor
loope
outsb
pop
popf
or
mov
pop
inc
adc
lret
negl
push
add
cmpsl
fists
rcr
clc
scas
xor
xchg
call
and
push
fisttpll
leave
gs
sub
and
enter
in
push
mov
push
adc
aaa
std
iret
inc
pushf
jno
lods
sub
and
rep
stc
mov
icebp
xor
jo
and
int3
imul
icebp
or
ljmp
lret
aaa
es
jl
jp
fisttpll
fistpl
mov
push
mov
jmp
mov
aas
and
loop
rcr
jge
scas
sahf
les
sbb
out
cmp
add
daa
jge
inc
mov
jmp
xor
dec
push
loopne
sub
into
out
inc
addl
dec
mov
jns
dec
or
push
add
pop
dec
popf
repz
fimuls
fldt
jo
mov
sub
cmp
push
jmp
fs
and
inc
arpl
mov
or
cmp
scas
notb
jae
insl
jle
in
ja
mov
je
nop
fstps
das
push
mov
inc
shrl
xor
lahf
int3
push
push
jp
xchg
cmp
lods
stos
lock
pop
mov
xchg
add
mov
in
es
jmp
and
movsb
cmpsb
sub
push
clc
cmp
inc
es
cli
push
jne
testb
mov
mov
adc
pop
mov
mov
lods
pcmpgtd
jae
xor
fdivp
pop
js
cli
pop
sbbb
int
xor
gs
push
ds
and
inc
jnp
fsubrl
je
and
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
mov
pop
pop
mov
lods
addr16
inc
stos
cwtl
mov
adc
sahf
insb
sbb
adc
das
clc
push
hlt
stos
add
push
sahf
rcrl
mov
adc
call
pop
movsb
cmp
or
test
test
add
jp
loop
xlat
adc
shlb
in
mov
aas
mov
sbb
dec
shll
movsl
cmp
mov
jo
jg
xor
push
aas
pop
inc
cmp
push
outsb
jle
fs
xchg
rorb
add
vandnps
repnz
inc
pop
subb
cs
add
push
sbb
shl
out
inc
sub
jbe
addl
cs
arpl
mov
repz
sub
into
sbb
xchg
sbb
inc
ret
int
add
jg
cmpsb
xchg
lahf
in
sub
adc
test
mov
ret
mov
pop
or
aaa
mov
xchg
mov
data16
and
jb
jb
cwtl
das
xchg
imul
add
xchg
js
into
xchg
mov
push
jp
dec
jb
std
out
inc
pusha
pop
test
sub
in
xchg
stc
push
inc
ljmp
lcall
mov
jb
rclb
ds
dec
xor
jl
cli
ljmp
mov
int
das
loop
lea
iret
inc
in
mov
sti
sub
or
jae
lcall
fidivl
jbe
mov
in
adc
imul
pop
cmc
sub
xchg
cmp
pushf
jge
cwtl
cwtl
sbb
shrl
in
ja
sub
stc
push
out
int
dec
aad
xchg
adc
push
jae
sbb
sub
xchg
das
out
adc
mov
xchg
pushf
int3
jnp
fwait
mov
and
inc
inc
sbb
es
jg
or
pop
jns
pop
decb
shlb
mov
imul
lcall
out
push
mov
inc
insb
mov
gs
xchg
idiv
idivb
pop
mov
pusha
xlat
mov
push
xor
mov
mov
outsl
jo
jo
and
iret
push
sub
pminsw
mov
les
ds
mov
cltd
pusha
mov
adc
les
add
das
subb
mov
or
das
sub
mov
data16
mov
sub
loop
std
sub
mov
sub
iret
xor
stos
arpl
add
in
divl
rorb
ret
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
stos
sbb
adc
sarb
dec
jg
xlat
stc
inc
and
pop
jecxz
mov
icebp
sarl
test
mov
sbb
jmp
xor
sub
pop
jl
pushf
das
sbb
out
idivb
into
loope
mov
idivb
jne
mov
pushf
outsb
and
cmp
push
pop
inc
push
pop
imul
sub
ljmp
inc
fwait
mov
data16
shlb
pop
sbb
xchg
or
sbb
js
mov
hlt
mov
jl
out
dec
push
int3
std
jae
test
fwait
je
push
arpl
insb
and
mov
fistpl
push
fwait
jg
ja
cmpsl
lods
jl
ss
cmp
push
inc
sbb
cmp
loope
mov
pop
cmp
inc
js
fistpl
mov
sbb
or
fildl
sbb
mov
addb
inc
test
addr16
xor
jns
jno
rolb
cmp
ficompl
pop
xchg
pop
es
mov
mov
ljmp
inc
inc
rcr
fisttpl
sbb
call
mov
push
inc
pop
cld
xor
add
sbb
mov
enter
cwtl
or
sar
dec
push
cli
xor
jg
xor
or
dec
xchg
mov
sbb
add
cmp
mov
sub
inc
out
dec
jae
or
std
pop
xor
lea
mov
mov
inc
and
test
sti
repz
lods
cmpsb
test
js
mov
nop
mov
lock
cs
inc
mov
jg
inc
sub
inc
push
mov
dec
dec
shlb
or
add
fwait
sbb
adc
cli
movsl
sbb
inc
sub
insb
scas
mov
rclb
scas
aas
cmp
cmpsb
sbb
or
fimuls
mov
dec
jl
shrb
outsl
jg
loope
cwtl
push
insb
add
loop
pop
aam
je
xchg
xchg
push
lods
lock
cmp
in
add
in
mov
in
jne
dec
fimuls
rcr
sti
mov
fistl
cmp
mov
jae
aad
cli
arpl
popa
cmpl
nop
fisubl
or
inc
mov
mov
sahf
and
sahf
nop
push
cld
test
add
insl
fdivp
icebp
xchg
incb
xor
in
lods
inc
es
int
mov
add
pop
cmp
mov
inc
pusha
add
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
mov
lods
adc
xchg
movlps
xor
jmp
fwait
pop
or
push
lret
xchg
ret
xchg
xor
sbb
sbb
lahf
or
cmp
push
lahf
xor
lahf
test
out
push
add
gs
cmc
jbe
movsl
mov
std
pop
arpl
pusha
rorl
mov
lea
jo
mov
daa
push
test
push
adc
in
mov
hlt
adc
sbb
hlt
inc
divb
or
fs
jne
mov
mov
mov
cmp
inc
loopne
sbb
scas
inc
incl
int3
cmp
and
sub
outsl
add
scas
lds
cmp
mulb
push
das
lods
push
cmp
scas
pop
jae
std
cli
jmp
xchg
test
shl
mov
and
lock
pop
mov
shlb
sub
sub
xchg
mov
shl
mov
fdivl
out
sbb
int
loopne
into
mov
jb
movsl
arpl
test
adc
push
lahf
push
inc
add
pusha
cmp
jnp
mov
scas
ja
or
xchg
rcll
pop
adc
xorb
lahf
sahf
in
imul
mov
sub
cltd
sbb
sub
adc
je
pop
andl
pop
lret
inc
cmp
shrb
fwait
push
je
jmp
jmp
rorb
mov
sbb
xchg
jmp
loopne
sti
jmp
dec
iret
hlt
ret
xlat
mov
leave
mov
out
jns
rcr
xchg
incl
dec
lock
sub
dec
adc
sti
xlat
jge
jnp
aad
cs
fwait
cmp
ss
add
jl,pn
std
cs
xlat
push
das
adc
cmp
pop
mov
mov
jae
fsub
sar
adc
int
pop
add
mov
les
cmp
and
jbe
repz
in
mov
dec
out
leave
fmuls
pop
jge
push
cli
arpl
popf
xchg
std
int
add
xor
mov
inc
rcll
push
stos
xor
fisubrl
jmp
pop
push
push
lahf
add
addb
out
in
jnp
and
mov
sahf
mov
mov
inc
cmc
pop
mov
mov
cmp
sub
inc
stos
popf
popf
mov
fstpt
notb
inc
mov
insb
sbb
je
ja
jno
mov
je
leave
xlat
sarl
out
pop
fidivrl
push
cmp
inc
adc
gs
adc
add
add
mov
cmpl
sub
and
sbb
mov
or
pop
leave
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
repz
mov
mov
pop
dec
call
js
out
loopne
adc
pop
test
cli
ja
adc
clc
fwait
dec
xor
inc
or
jae
push
xor
mov
mov
dec
sti
rcr
cmp
fldenv
add
imul
jle
cmpsl
inc
add
push
sbb
scas
and
pop
push
pop
xorb
push
dec
ret
mov
dec
pushf
push
aam
cmc
lds
ret
aaa
fadd
fs
fcmove
std
in
push
or
mov
mov
enter
orl
cmp
cmp
push
test
lgdtl
inc
not
insb
sahf
lea
pushf
mov
loopne
popa
mov
cltd
in
ss
out
jae
mov
push
call
jge
push
ret
outsb
ss
dec
fmuls
xor
frstor
xor
int
dec
push
inc
mov
push
movsl
add
adc
sbb
or
filds
push
loope
fmull
mov
data16
inc
xchg
and
aaa
fwait
aad
and
and
jp
fimuls
test
xor
mov
ja
call
mov
push
data16
sbb
add
mov
or
dec
repz
nop
push
pop
xor
inc
xchg
xor
push
ds
and
xchg
test
cmp
mov
mov
cmp
pop
repz
lret
sbb
push
push
shr
insl
or
cmp
jl
imul
sbb
sbb
xchg
push
xor
cwtl
add
pop
in
pop
sbb
xchg
sbb
xchg
cmpsb
addr16
jnp
int3
jnp
xchg
cli
filds
xchg
and
xchg
pushf
test
femms
mov
lcall
nop
repz
jl
push
pop
das
mov
mov
sbb
aad
in
sub
mov
lcall
pop
and
mov
ret
cmc
cld
lcall
aas
inc
sti
mov
jge
insb
rorb
subl
daa
jbe
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
sbb
mov
and
call
dec
rorl
fldln2
or
xor
daa
add
fistps
mov
decb
add
pop
test
test
sbb
addl
add
std
popa
stc
sbb
push
out
push
imul
mov
inc
xor
jl
push
test
lret
xor
pop
adc
and
dec
testb
add
imul
mov
cmp
es
iret
sub
lods
cmpl
cli
lahf
and
or
mov
addl
mov
std
add
pusha
jecxz
outsb
aad
mov
jg
dec
mov
add
add
push
mov
sbb
sub
pop
inc
xor
jns
outsl
mov
movsl
and
test
adc
frstor
cmpsb
mov
call
mov
ljmp
adc
cwtl
out
inc
gs
mov
leave
adc
and
mov
sub
jae
outsl
pop
ss
fisubrl
movsl
ret
push
xor
mov
pop
repnz
dec
out
cmpsb
add
in
xor
ja
lods
int
test
imul
adc
mov
or
mov
mov
ljmp
ss
mov
cltd
popa
sarl
sub
out
sub
arpl
xchg
cmpsb
adc
data16
insb
in
cmp
xchg
flds
iret
rcll
push
jl
iret
out
mov
push
mov
mov
pop
lds
ficomps
in
xchg
mov
jecxz
int3
test
repnz
cwtl
ljmp
nop
jo
jl
mov
lret
inc
leave
fisttpll
outsl
fdivrs
xor
mov
sbb
ja
popa
lods
add
add
and
pop
lahf
sbb
das
pop
cmp
xchg
ret
add
jb
cmp
mov
gs
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
fidivrl
adc
mov
enter
push
push
mov
xchg
ret
push
outsl
shlb
outsb
and
lea
scas
xor
cmpsb
daa
shlb
xchg
push
xor
std
repz
adc
mov
decb
and
jecxz
jns
lods
cmp
xor
leave
stos
rcrl
ret
sub
clc
and
push
mov
jae
mov
mov
push
jl
ret
add
scas
jae
mov
push
cltd
jo
adc
loope
aam
lock
inc
call
push
popa
std
xchg
rcll
enter
cltd
rorl
inc
xlat
rol
dec
insl
scas
pop
pop
mov
mov
insl
mov
sub
sbbb
insb
shlb
jno
aas
outsb
ret
ficomps
shrl
sub
out
repz
and
loopne
jle
jnp
cli
out
push
mov
xchg
lds
in
out
or
pop
repz
mov
fcmovbe
jae
or
pop
out
pop
add
push
or
movsb
mov
lcall
mov
negl
mov
clc
inc
pop
lret
push
push
negl
repnz
das
mov
int
test
pop
sahf
test
mov
xchg
xchg
shrl
mov
cmpsb
push
fimuls
fptan
and
jnp
aad
test
iret
notl
jge
clc
iret
add
jnp
fwait
js
jbe
shll
mov
push
mov
and
mul
inc
jl,pn
sbb
scas
mov
pop
sti
lods
ret
jb
push
pop
rolb
sub
mov
into
out
and
std
orb
pop
aad
addr16
movsl
xchg
or
or
xorb
xor
adc
stos
pop
cld
clc
test
xchg
and
push
adc
jns
or
fadd
cmp
sub
jp
nop
int
mov
jo
in
rorl
sbb
leave
fcompl
sub
fisttps
cld
loopne
push
push
dec
outsb
push
dec
scas
mov
pop
lock
inc
mov
shrb
insb
jle
sbb
sarb
fimull
xchg
add
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
fdivrl
mov
dec
or
popf
cmp
xchg
insb
in
xor
pop
sub
sub
push
push
aad
ret
or
test
and
sbb
cld
cwtl
push
sub
dec
push
add
push
pop
bound
sbb
leave
ljmp
into
dec
jb
sub
test
test
aam
cltd
fs
insl
inc
sub
push
mov
stos
ret
dec
fistpll
adc
mov
mov
jmp
xor
out
cmp
xchg
pop
pop
scas
ret
mov
push
cmpb
or
loop
push
enter
cmc
leave
jae
lret
cmpsb
cmp
mov
in
sti
cmp
jp
xor
je
xor
cmpb
mov
pop
lods
xor
mov
cmp
jl
xor
loop
data16
jmp
cmpl
dec
mov
and
jge
mov
xchg
test
movsl
iret
dec
push
outsl
enter
in
addl
and
push
pop
inc
lods
test
test
cmp
sub
xchg
fst
mov
cltd
inc
pop
lods
out
cmc
sub
jl
js
pop
ret
xchg
fstl
adc
cmpsb
xor
sbb
xchg
mov
int3
mov
aas
sbb
mov
adc
pop
pop
mov
popa
dec
dec
mov
mov
mov
ret
ror
push
or
ret
push
and
sti
mov
cltd
push
sbbb
inc
xchg
push
pop
push
jns
jnp
shl
push
push
add
test
enter
loop
enter
inc
sbb
xorb
xor
and
pop
sbb
ficoms
sbb
pop
inc
add
lock
xabort
ljmp
mov
adc
addl
push
sbb
jle
leave
xor
sti
ret
push
push
inc
jno
daa
sub
sub
mov
cltd
adc
cmp
or
xor
adc
push
out
aas
bound
xchg
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
sbbb
mov
pop
adc
adc
ret
xor
xchg
and
sbb
mov
cmpsb
ficomps
inc
imul
data16
lcall
jmp
add
in
aam
iret
mov
push
lret
sub
ljmp
data16
add
ret
mov
dec
lahf
cltd
mov
orb
mov
inc
in
inc
pop
add
cli
ja
mov
push
cmpsb
iret
lret
jns
stc
mov
incb
and
or
adcb
jnp
cmp
clc
jmp
pop
inc
icebp
in
add
gs
mull
dec
imul
jle
negb
roll
cmpl
mov
loope
jne
fmulp
call
mov
fs
xchg
movsl
lcall
repnz
ljmp
addr16
insb
sbb
mov
ds
cwtl
mov
xchg
mov
xor
gs
testb
cs
add
rolb
xor
adc
mov
scas
in
cmp
mov
es
xchg
inc
aad
fmuls
gs
cmpsb
mov
pop
je
push
popa
and
test
sbb
dec
das
arpl
mov
lahf
cmp
mov
imul
hlt
xor
pop
shlb
dec
test
out
cs
mov
xchg
adc
add
adc
jg
sbb
cltd
adc
lds
lods
xlat
pop
fldt
dec
test
adc
je
mov
lods
cmp
out
adc
shr
push
test
jne
xlat
scas
push
or
outsl
push
mov
push
mov
jo
sbb
scas
je
xor
jmp
popl
pop
repnz
mov
outsl
loopne
fbstp
mov
cmp
repnz
pop
sbb
icebp
jp
adc
js
in
fbstp
jmp
xchg
ficomps
lahf
mov
cwtl
scas
pop
dec
push
stc
lea
push
notl
sub
int
add
sub
and
cmp
sbb
test
aam
fwait
stos
out
call
xchg
and
int
mov
mov
out
add
ffree
dec
aaa
inc
in
xlat
cwtl
xor
sub
inc
mov
inc
pop
cwtl
outsb
sbb
iret
pop
adc
or
sub
pop
pop
pop
jnp
fdivs
mov
idivb
xchg
sub
in
stos
rolb
pop
ja
xor
push
add
daa
subl
cmp
cli
xchg
in
cmp
add
pop
push
mov
jae
dec
xor
sub
clc
dec
stos
mov
sbb
adc
in
or
mov
jmp
fwait
mov
or
sbb
sahf
mov
xor
cmp
cmp
dec
sahf
xlat
int3
imul
fdivl
ret
mov
add
xchg
repz
or
cmp
mov
add
out
lahf
mov
dec
jecxz
jno
cmp
daa
add
adc
fsubrs
xor
das
movsb
cltd
hlt
jno
mov
pop
movl
mov
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
push
jbe
in
adc
pop
adc
adc
add
dec
fnstenv
jmp
outsb
mov
mov
dec
es
rcl
cs
cli
push
sbb
imul
fstp
xor
or
xchg
stc
arpl
jnp
loop
adc
cmp
sub
dec
dec
data16
sub
test
sbb
out
xchg
divl
pop
ret
push
in
hlt
test
inc
insb
ret
cmp
jmp
out
mov
mov
pop
aaa
inc
out
ljmp
sub
movsl
nop
popa
inc
xchg
mov
fnstenv
push
adc
jae
movsb
rcrb
rcrb
nop
roll
mul
sbb
xchg
add
cmpsl
mov
fildll
jo
pop
mov
mov
sub
out
pop
mov
lea
cmpsb
fwait
and
adc
icebp
cld
mov
aad
or
pop
cmc
xor
mov
outsl
test
cmp
adc
adc
add
sti
mov
and
sub
inc
sbb
jge
test
bound
scas
aad
pop
xchg
test
aaa
mov
push
mulb
pop
orl
mov
xchg
fwait
clc
mov
cmp
pop
and
nopl
clc
mov
mov
inc
mov
add
pop
dec
and
dec
push
fisubl
xchg
cmpsb
into
mov
xor
pop
sbb
inc
mov
dec
inc
mov
movsl
enter
cmp
adc
ja
test
insl
pop
cmp
cli
pushf
popf
adc
and
shl
push
mov
push
ja
vcvtsi2sdl
xchg
adc
dec
mov
push
ss
cmpb
push
and
mov
out
sarb
push
ds
stos
fdivl
pop
add
xchg
rorl
sbb
aam
ds
jmp
enter
ljmp
lock
shlb
pop
sbb
rolb
enter
jp
pop
ret
pop
mov
pop
lods
hlt
iret
sbb
inc
xor
mov
mov
cmp
adc
pushf
mov
sahf
popa
in
sti
jne
adc
dec
mov
and
stos
xchg
arpl
and
inc
fcompl
shlb
pop
in
fwait
arpl
inc
fldenv
jle
cld
dec
add
mov
ret
movsb
xor
out
push
sub
push
out
popa
fwait
test
mov
jmp
stos
into
xchg
add
fildll
neg
stos
pusha
push
jecxz
xchg
outsb
mov
jle
cmp
pop
xor
mov
cmp
rcrb
test
test
test
push
push
push
push
scas
insb
gs
push
test
cmpsb
scas
outsb
fisttpll
pop
in
mov
in
lret
shl
adc
lock
cmpl
cmpl
sub
bound
xor
cmp
or
xchg
les
xchg
jle
sahf
jb
xchg
outsb
aad
jmp
jmp
je
and
pop
add
push
sub
adc
pop
jae
bnd
adc
inc
pop
adc
mov
sub
mov
orl
xor
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
xor
mov
pop
adc
adc
jbe
xchg
leave
xchg
ret
inc
mov
mov
lods
or
loopne
dec
mov
ds
push
push
aad
and
jo
cmp
pusha
jae
mov
xchg
pop
popf
jae
push
imul
and
add
pop
xchg
ret
stc
mov
dec
mov
mov
jnp
and
xchg
sbb
cs
cmp
adc
in
pop
in
push
test
pop
add
inc
xchg
mov
jne
mov
in
out
call
cmp
add
rclb
mov
call
dec
mov
jb
lock
testb
loop
scas
xor
dec
sub
and
cmpsb
sti
inc
push
aas
arpl
pop
sarb
adc
add
dec
icebp
xchg
cld
mov
jg
dec
mov
into
sub
dec
and
mov
mov
xchg
and
and
or
bound
mov
inc
mov
dec
imul
mov
jg
fdivrs
int
jbe
pop
stc
into
pop
clc
or
pushf
lods
sbb
jg
mov
sub
and
add
gs
pop
cmc
ss
ja
shr
pusha
sub
jb
push
xor
dec
add
clc
cmpb
fcoml
jno
lock
and
sbb
pusha
dec
xchg
pop
sub
add
and
scas
xchg
xorl
xor
cmp
in
test
cld
daa
sub
mov
push
cs
mov
inc
sub
arpl
leave
push
loop
push
jno
or
test
mov
push
jne
jae
jo
or
divl
adc
fstl
push
mov
insl
pop
lahf
xor
xor
mov
outsl
aad
dec
cmp
jp
and
jmp
das
out
je
mov
mov
in
movsl
push
adc
out
xor
and
xchg
sub
push
mov
cwtl
add
push
std
or
add
or
pop
int3
xlat
hlt
xor
xchg
jle
xchg
inc
xchg
sbb
pop
lods
mov
rcrb
inc
cld
adcl
cmp
push
in
lds
icebp
add
sbb
fxch
cs
push
in
loopne
dec
adc
sub
push
and
cmp
cmp
cltd
andl
into
lods
sbb
mov
cmovp
xchg
fdivrl
push
sub
sbb
mov
insb
and
cmp
pop
push
xor
cmp
pop
push
mov
lods
add
mov
adc
mov
sti
mov
mov
out
jnp
ljmp
mov
insb
xor
imul
test
mov
pop
insb
icebp
loop
outsl
cmp
inc
idivb
xlat
stos
repnz
int3
mov
pop
jo
leave
push
inc
add
jecxz
insl
enter
popf
jl
jno
inc
clc
in
repz
call
mov
cmpl
mov
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
mov
pop
adc
adc
jge
loopne
jecxz
mov
mov
gs
adc
addr16
call
js
lahf
insl
fcomps
xlat
add
and
lods
fneni(8087
orb
idiv
and
and
mov
xor
jnp
mov
jecxz
mov
jns
pop
into
int3
pop
jne
iret
js
inc
inc
stos
and
stc
sahf
ret
sahf
arpl
xchg
bound
movsl
mov
outsb
or
inc
das
cli
adc
jg
and
mov
mov
clc
arpl
lret
and
call
inc
sbb
aam
ss
repz
adc
leave
push
sub
mov
shrb
mov
ret
pop
ret
aas
cmp
sub
movsb
rol
sub
cmp
push
into
movsb
dec
or
pop
sub
mov
mov
cmp
mov
js
into
cmp
sbb
int3
xchg
jo
ss
pop
stos
lods
loopne
mov
xlat
pop
pop
mov
lds
lcall
dec
je
pusha
xchg
in
push
lods
xor
adc
das
mov
sbb
xchg
or
setno
inc
push
aam
bnd
and
or
inc
jno
shrl
jnp
inc
adc
addb
xor
test
loop
or
fwait
out
sbb
push
push
pushf
xor
pop
imul
pop
in
shr
sub
pop
fsubs
pop
mov
adc
xor
test
xchg
sahf
mov
insl
push
mov
daa
inc
imul
xlat
or
push
jecxz
mov
inc
sub
cld
sub
mov
dec
lret
push
rcrl
insl
mov
push
std
push
jge
xchg
dec
jecxz
loope
mov
das
fidivl
xor
aad
insl
inc
inc
xchg
xor
les
sub
dec
leave
out
mov
inc
add
sub
imul
ds
sub
popa
popa
idivl
push
or
push
xchg
outsb
mov
divb
sub
sbb
popa
mov
or
mov
rclb
int
lods
movsb
lock
dec
xlat
lahf
cld
sub
cmp
push
xor
pop
sahf
in
int
loopne
or
push
xchg
cwtl
out
jno
cli
dec
mov
lret
push
or
push
lcall
lods
cs
pop
cwtl
or
sbbl
loope
insb
movl
and
enter
add
xor
cs
pop
call
pushf
pop
gs
iret
and
addr16
xor
lret
in
mov
xchg
gs
xor
je
mov
cld
dec
add
hlt
xor
mov
aaa
push
pop
es
mov
jp
pop
bound
mov
sub
jp
mov
decl
ljmp
mov
cmp
mov
inc
mov
iret
sbb
int
mov
sub
mov
sbb
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
stc
jle
ja
adc
adc
imul
ret
out
sub
jmp
or
inc
dec
movsb
jno
sbb
add
js
loope
add
sub
xchg
ljmp
out
mov
imul
jns
sub
or
cwtl
pushf
adc
notb
stos
aam
bound
xor
insl
sbb
addr16
aaa
nop
insb
movl
scas
mov
xchg
lahf
jbe
xchg
inc
push
rcr
xchg
daa
ds
scas
sbb
nop
sbb
jb
cmp
testb
test
bound
push
sti
and
inc
xchg
lahf
ljmp
mov
rorb
call
ljmp
popf
adc
mov
lret
xchg
mov
fwait
sbb
jbe
pop
cmp
test
push
push
stc
ret
lcall
xchg
bnd
jnp
mov
mov
jns
sub
arpl
mov
xchg
xlat
push
leave
and
sbb
mov
add
mov
xchg
push
movb
addb
cli
test
xchg
inc
cli
cwtl
pop
mov
cmp
insl
sbb
sbb
xor
es
jmp
jbe
cmp
mov
pop
in
jp
mov
shlb
outsb
pop
call
xchg
insl
mov
add
js
imull
imul
cwtl
xor
sbb
jmp
xor
cmp
xor
xlat
sbb
cmpsl
lods
je
lret
test
sbb
sub
xchg
out
add
mov
mov
sub
adc
movsb
xchg
mov
cmp
inc
xor
push
testb
push
push
lahf
sbb
push
out
xchg
std
in
dec
mov
ljmp
pxor
shrb
addr16
outsl
jp
sub
popf
scas
add
cmp
cmpsb
sbb
xchg
stos
inc
cmpsw
sub
push
pop
in
pushf
data16
pusha
ror
mov
iret
pop
pop
adc
cmp
pusha
sbb
sub
leave
sub
ljmp
cs
push
das
cltd
mov
gs
pop
pop
sub
and
repnz
add
adc
pop
pop
push
call
outsb
push
jle
pop
cltd
lds
lods
dec
in
adc
sbbl
iret
jbe
in
fs
jg
pop
adc
xchg
sub
sub
ret
movsl
jle
pop
divl
adc
leave
inc
xchg
fidivrl
add
aad
cmp
or
sbb
xchg
bound
lcall
mov
ds
rcrl
jg
rcll
sbbb
and
cld
aad
fs
stos
push
fcomps
or
push
insl
test
pop
je
xor
inc
cmpsl
adc
aas
fldt
enter
add
jo
or
mov
stos
lods
jmp
test
and
add
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
out
cmp
add
adc
adc
add
sub
insb
mov
jecxz
loope
ljmp
imul
ja
sbb
push
jb
inc
in
lcall
outsl
jge
lret
loope
and
lret
mov
enter
cmc
das
jne
and
fadd
mov
pop
adc
xchg
cmp
mov
stc
lock
mov
jbe
add
mov
movsb
lahf
iret
nop
fwait
jae
fnsave
mov
lock
es
in
push
mov
add
or
mov
mov
inc
mov
clc
addr16
nop
aas
jge
jne
push
jb
adc
dec
xchg
push
dec
lock
or
pop
scas
subl
push
adc
or
mov
add
jnp
cltd
loope
incb
and
or
in
insl
cwtl
test
or
push
lods
jo
inc
adc
fiadds
push
pushf
adc
scas
and
jmp
add
cmp
fmuls
cwtl
das
pop
scas
shrb
jno
jnp
xchg
inc
xchg
jb
imul
loope
mov
cli
pop
nop
orl
mov
ljmp
mov
into
add
cmc
cmp
xor
and
jecxz
outsb
pop
notl
dec
imul
int
daa
dec
xchg
int3
mov
xchg
mov
push
mov
or
mov
shll
icebp
jne
or
or
or
mov
sbb
loop
arpl
lock
dec
xchg
mov
xor
fisttpll
pop
add
or
inc
cmp
cmp
das
adc
rcll
push
dec
or
roll
mov
mov
mov
pushf
pop
sub
jnp
cmp
mov
and
push
dec
add
adc
sub
stc
or
fcoms
sub
add
push
xlat
imul
push
inc
push
scas
push
dec
das
mov
pop
in
movsl
test
lahf
dec
dec
cltd
xchg
sub
xlat
test
jne
cmpsb
mov
ret
and
out
loopne
pop
outsb
js
scas
mov
push
call
mov
jne
sub
jge
xchg
ret
loop
rcl
add
mov
aaa
mov
in
lahf
lods
movsb
pushf
pop
in
test
daa
sti
mov
mov
pop
pop
pushf
scas
add
stos
pop
bound
mov
add
std
hlt
mov
push
addr16
dec
lcall
hlt
stos
cmp
mov
ror
cmpsl
in
cs
sub
sbb
jmp
adc
fucom
sub
insl
cmp
ffree
outsb
cmp
adc
add
leave
insl
mov
bnd
scas
pop
fmull
fdivr
dec
in
test
push
clc
xor
out
adc
jb
add
xchg
outsb
xchg
les
xor
xor
outsl
mov
or
dec
push
lds
pop
loope
aas
push
mov
hlt
insl
lea
rorl
push
stc
mov
leave
push
mov
add
xchg
fld
pop
loope
div
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
loop
inc
jno
mov
push
mov
enter
call
add
jns
pop
add
ja
dec
xchg
or
adc
imul
dec
inc
sub
jecxz
cli
sub
pop
sbbl
test
mov
sub
xchg
mov
lret
movsl
adc
inc
dec
je
mov
and
cmp
jae
cmp
data16
pop
pop
ja
fisubrs
jnp
add
mov
fnstenv
outsb
or
push
sub
fwait
int
pop
sahf
or
xchg
dec
mov
insl
mov
cmp
push
sub
sbbl
mov
sbbl
stc
cmpsl
cwtl
and
jno
xchg
and
or
add
rclb
les
push
je
fisubrs
cli
push
inc
outsb
je
sub
mov
or
mov
fstpt
mov
pop
wbinvd
test
pop
dec
mov
jl
sti
cmpsl
in
cld
xor
pop
xchg
mov
xor
mov
xor
popa
stos
jne
xor
stos
pop
stc
mov
test
or
jle
cwtl
out
jo
fiadds
xchg
adc
xchg
xchg
sti
int3
push
lret
lods
mov
or
sbb
lock
out
clc
ljmp
les
imul
sbb
cli
cmc
xchg
shll
dec
in
xor
xchg
pop
push
faddl
xchg
roll
lahf
out
mov
add
pusha
or
lock
push
inc
mov
das
scas
or
les
and
jo
and
int3
out
xchg
pushf
fisttpl
cmp
push
mov
cmp
lret
xchg
aas
mov
dec
insb
add
cmp
xchg
sub
mov
push
es
test
mov
add
push
pop
ret
mov
dec
pop
jg
leave
pmulhuw
pop
sbb
fistpll
std
pop
inc
dec
in
gs
daa
fisttps
ja
shll
test
xchg
std
ret
pop
lahf
mov
jl
adc
mov
shll
push
out
mov
add
mov
ret
imul
ret
jb
or
jae
sbb
mov
sub
mov
mov
rorb
xlat
fstp
inc
mov
loope
dec
into
jmp
shr
push
scas
lods
addr16
add
mov
mov
push
xor
je
pop
mov
dec
lods
dec
xchg
cmpsb
pushf
sub
call
int
mov
mov
sbb
jmp
jo
adc
jl
sbb
fldt
sbb
mov
mov
subl
pop
and
out
jl
in
cmp
stos
push
lahf
out
push
adc
leave
sub
lahf
xlat
sbb
push
lahf
mov
xor
inc
mov
cmp
xchg
jecxz
push
fldt
out
movsb
lcall
int
mov
cwtl
imul
mov
mov
int3
xchg
pusha
sahf
jge
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
push
mov
pop
adc
adc
jb
negb
fiaddl
dec
push
mov
repnz
aad
adcb
mov
cmp
fldt
sub
mov
cmpsl
add
pop
mov
call
int3
mov
in
mov
inc
bound
jecxz
ss
push
sub
loopne
stos
xor
lret
lcall
mov
adc
cmpl
xchg
pop
cli
mov
dec
insl
stos
add
outsl
mov
adc
loope
add
ret
xor
pop
pop
pop
js
add
xor
dec
sahf
orb
stos
or
mov
cmp
jbe
lahf
andl
inc
inc
rcl
xor
cs
sub
hlt
mov
aas
fs
xchg
icebp
mov
dec
add
xor
sub
fisubl
cmpsb
les
aam
jge
dec
incb
mov
scas
rorl
pop
addr16
divb
mov
adc
dec
es
fdiv
push
pop
stos
fildll
xchg
out
popa
adc
add
cmp
pop
sub
fisttpl
cmc
inc
jp
outsb
popf
push
mov
and
pop
lea
adc
sub
cmp
push
inc
out
sub
add
test
push
arpl
in
dec
in
or
inc
jg
sbb
xlat
dec
xchg
add
mov
mov
ror
pop
mov
mov
rclb
pop
jne
mov
sbb
push
sub
pop
cmp
testb
add
xor
jne
push
jle
xor
adc
jg
rorb
je
cmpsl
xor
inc
jmp
call
sbb
in
pop
adc
in
lock
je
out
push
mov
loopne
or
mov
pop
pop
xchg
ljmp
mov
inc
mov
and
cmp
cmp
insb
sbb
test
fmuls
adc
sbbb
xchg
push
adcl
jnp
in
leave
push
mov
xlat
sbb
pop
cwtl
in
jg
lock
cmp
cmpsb
ljmp
sahf
dec
stc
arpl
fcmovne
scas
jns
inc
mov
stc
out
mov
jnp
inc
cmp
idivl
and
xchg
dec
icebp
or
sti
mov
popfw
mov
cmp
adc
inc
sub
mov
mov
imul
fcmovnb
mov
lds
loopne
and
loop
jmp
pop
aam
push
aad
les
sbb
imul
imull
inc
jle
inc
adc
loopne
daa
rcll
inc
call
sub
xchg
pop
or
adcl
push
test
push
xlat
loope
cmpsl
mov
repnz
inc
cmp
dec
jbe
pop
adc
jo
aaa
push
std
or
fisttpll
popf
mov
or
fadds
aaa
add
push
jmp
sbb
roll
sbb
dec
add
xchg
pop
inc
push
sti
clc
push
and
arpl
xlat
lds
xor
mov
shll
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
shrb
adc
adc
fnsave
rclb
jecxz
ret
insb
xor
push
nop
lret
call
jb
enter
push
shll
popf
pop
fstpl
int
cmp
lret
push
in
cld
sahf
sub
sub
daa
inc
inc
xchg
sbb
pop
jno
xor
shr
insb
popa
cmp
test
cld
or
mov
push
in
sahf
clc
insb
ss
hlt
popf
mov
sti
push
mov
sti
or
nop
sbb
cmp
mov
imul
adc
push
fldl
cwtl
js
ret
add
inc
call
push
mov
stos
add
pop
sbb
jle
adc
jp
sbb
pop
jnp
cmp
out
popa
mov
test
jno
clc
cld
pusha
fisttpl
loop
add
mov
dec
pusha
pop
xor
mov
cmp
and
out
push
loop
push
pop
inc
out
jno
dec
stc
jg
push
sbb
fiaddl
push
push
and
cmp
mov
sub
cmp
roll
imul
jp
ljmp
cmp
xchg
popf
add
add
aaa
shrb
and
sub
xchg
xor
sub
jg
mov
add
jg
sub
push
divl
push
cmp
test
lods
jge
dec
jmp
bound
outsl
jae
lock
enter
xchg
jecxz
mov
and
mov
jae
data16
lods
inc
pop
inc
or
sub
jno
sti
imul
lret
and
das
pop
aaa
test
adc
jne
or
in
sbb
mov
std
pop
xchg
xor
out
lahf
data16
and
mov
std
cs
stos
ljmp
mov
add
in
push
sub
gs
fs
xchg
movsl
xchg
mov
and
out
sti
mov
test
mov
movsb
es
dec
scas
imul
xor
push
les
sbb
test
aas
dec
jne
std
std
sarb
mov
inc
jmp
dec
adc
cld
push
rcll
es
jmp
push
or
cmp
mov
test
xchg
jge
outsl
cmpsl
std
mov
mov
xchg
scas
fists
pop
aam
xchg
cmp
aam
lret
movsb
sbb
ret
inc
inc
test
addr16
sub
or
stos
in
xor
mov
out
dec
outsb
push
nop
jl
pop
sbb
insl
ficomps
ss
dec
inc
sbb
stos
enter
sti
sahf
cmp
inc
add
inc
pop
add
shl
sub
andl
in
push
orb
mov
or
or
pop
xchg
repnz
andl
push
mov
loopne
popa
sbb
lock
jno
ds
sbbl
leave
mov
imul
xchg
cltd
test
jbe
push
push
jmp
jne
pcmpgtb
sbb
aaa
data16
adc
cmpsb
js
pop
adc
pop
adc
adc
mov
cmp
or
out
sub
sbb
push
or
sub
in
sub
and
inc
mov
mov
mov
aaa
and
cmp
mov
jns
and
xor
mov
ds
popf
arpl
fwait
ss
leave
jecxz
lahf
into
int3
add
filds
loope
mov
in
inc
mov
movsl
das
shll
divb
out
push
sti
int
push
push
pop
adc
mov
push
push
jecxz
loope
movsl
in
sbb
lds
mov
sub
pop
sub
mov
rcl
push
cmpsl
jle
mov
sbb
ljmp
hlt
ja
pop
sahf
pushl
and
xor
jno
and
outsb
popa
nop
fisttpl
mov
movsl
icebp
lods
inc
icebp
ss
cmp
dec
out
push
stos
rcrl
sahf
mov
lock
adc
ljmp
ja
rcll
iret
xor
inc
inc
xchg
testl
or
pop
out
scas
adc
cmp
fsubr
lea
jb
pop
fwait
jo
pop
loope
pusha
in
sarl
mov
xor
lcall
rorw
fistps
cld
cmp
ret
xor
jae
out
sbb
or
fwait
mov
add
nop
sti
mov
inc
ja
xor
mov
out
push
push
out
loop
sbb
addr16
scas
cmp
fxch
fisttpll
or
mov
mov
pop
ljmp
pop
iret
lret
adc
adc
add
addr16
rclb
add
clc
cltd
push
ss
xchg
or
mov
or
mov
dec
cmp
aad
xorl
cmp
gs
cmpsb
mov
stc
pop
adc
jno
push
int3
call
sbbb
or
sti
hlt
cli
out
cmp
xchg
ss
fwait
data16
jle
cmp
sub
rclb
mov
inc
adc
adc
add
sub
int3
test
add
dec
jo
pushf
sbb
jge
scas
repnz
and
xor
dec
sub
xor
aam
ljmp
push
js
xchg
cmp
mov
roll
sti
cwtl
cmpsl
pop
ret
pop
sub
pop
test
push
pop
in
inc
or
int
sbb
cld
inc
xlat
inc
mov
pushf
mov
clc
dec
pop
imul
mov
stos
dec
popf
inc
or
lods
sub
sbb
iret
lret
push
lret
and
ss
imul
popf
push
ffreep
scas
outsb
or
pop
iret
cmc
inc
pop
sbb
inc
mov
shrb
mulb
hlt
imul
imul
cmpsl
adc
pop
fsubr
xchg
pop
in
mov
rcrb
cmpsl
loopne
jne
daa
sbb
jns
or
bound
mov
lcall
test
add
xlat
dec
leave
out
add
mov
mov
ljmp
pop
sbb
js
push
jno
imul
and
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
je
insl
dec
adc
pop
adc
adc
inc
jns
xchg
mov
dec
je
imul
rorl
out
fldcw
mov
push
dec
divb
pop
add
push
cmp
mov
push
mov
push
mov
pop
sbb
jb
cli
test
dec
sub
cld
mov
mov
xor
adc
repnz
aad
mov
outsb
aam
sub
jecxz
lods
xor
in
pop
add
mov
mov
xchg
shl
jns
jne
loop
or
dec
loop
add
pusha
shll
sbb
pusha
subb
mov
cli
stos
arpl
stc
mov
mov
xorb
std
or
xchg
push
mov
loopne
out
jp
das
outsb
and
xchg
push
inc
or
leave
movsb
jno
outsb
iret
andb
mov
int3
movsb
inc
xlat
jl
out
jo
fisubl
inc
ljmp
sbb
fs
test
inc
in
pop
ljmp
sbb
enter
adc
movsl
rcll
out
cltd
sbb
mov
add
mov
cld
xchg
aas
aam
jecxz
lret
loop
sub
push
lret
cmp
add
fs
mov
popa
cmp
sbb
je
push
arpl
ss
incl
clc
pop
lea
push
jmp
or
icebp
dec
jle
dec
add
cli
jne
inc
jge
imul
fistpll
sub
lahf
imul
pop
ret
loopne
test
adc
jle
sti
icebp
jge
insl
dec
and
and
addb
in
outsl
ret
mov
lods
subl
pop
int
push
lcall
xchg
jecxz
and
fisubrl
inc
pop
mov
repnz
imul
cmc
xchg
stc
into
test
fwait
nop
jecxz
pop
jno
stos
sahf
mov
mov
mov
jb
daa
sbb
fimuls
scas
pop
mov
clc
lods
loop
pop
lock
push
ds
mov
jbe
mov
add
inc
js
mov
fwait
dec
mov
push
test
cltd
cmp
repnz
outsb
movsl
ret
inc
lcall
jo
mov
test
pop
push
loop
sub
inc
adc
repnz
pushf
fsubl
clc
sbb
int3
dec
pop
mov
adc
or
inc
inc
inc
outsl
pop
pusha
or
imull
jnp
repz
xchg
rcrl
mov
jl
cmp
subl
out
fisubs
xchg
movups
idivb
mov
push
outsl
sahf
je
pop
xchg
test
mov
cs
mov
fcomp
or
pop
in
xchg
jae
lods
ss
iret
add
sbb
cmp
scas
testl
jns
das
push
jb
jno
pop
adc
or
inc
fmul
lock
jne
push
arpl
rcll
jbe
ret
add
daa
cmp
sbb
sbb
fidivs
jo
rol
pushf
es
out
pop
das
mov
push
cmpsb
fdiv
hlt
xor
mov
fnstcw
inc
and
insl
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
jbe
mov
adc
pop
adc
adc
int
loopne
cmc
cmp
xor
outsl
fdivrs
std
gs
fbld
addr16
aam
mov
je
xor
jbe
shl
popl
nop
int
pop
mov
jb
sbb
outsl
sbb
dec
hlt
shrd
idiv
lcall
mov
out
dec
xchg
and
aaa
sbb
add
xor
jnp
mov
sub
xchg
shlb
scas
in
out
inc
aas
in
adc
in
aam
in
mov
or
fcmovnbe
jg
mov
xor
dec
inc
pop
and
int3
insl
mov
mov
hlt
jmp
sahf
ret
adcl
fs
push
pushf
repz
movsb
jbe
std
out
mov
xor
jge
pop
inc
out
fwait
push
fs
mov
cmp
aad
add
pusha
jmp
xor
insb
pop
adc
jg
cmp
call
subl
dec
dec
adc
loopne
test
iret
lahf
ljmp
repnz
push
push
inc
or
add
mov
cld
out
mov
mov
inc
adc
sbb
jecxz
rcrl
sbb
test
cmpsl
pop
roll
push
jmp
movsb
fwait
mov
shrl
push
push
aad
xorb
imul
mov
xor
jb
or
jp
add
scas
add
pop
push
inc
sbb
mov
add
xchg
dec
rolb
aaa
or
ljmp
das
inc
mov
ja
lret
in
or
mov
dec
setne
imull
int3
enter
repz
js
ljmp
aaa
cmp
pop
fcomps
movsl
fdivr
sbb
sbb
es
hlt
xchg
add
jnp
lock
and
jno,pn
dec
mov
test
mov
pop
inc
in
mov
lods
xchg
jmp
push
aas
fiadds
inc
cmp
cmp
jmp
out
rclb
lcall
pop
sbb
mov
mov
ja
lcall
push
fildl
add
dec
scas
push
mov
jbe
aas
and
clc
push
ja
pop
movsl
mov
push
cmc
mov
mov
in
aas
out
jmp
das
push
sub
mov
jnp
lods
shll
and
fistps
jne
repnz
mov
adc
mov
addr16
ret
mov
ja
stos
jne
sub
mov
jmp
sub
shlb
and
push
cmp
cwtl
inc
pushf
pop
inc
aaa
pop
cli
sti
cmpsb
stc
rolb
jbe
cmp
stos
pop
cmp
push
scas
pop
lahf
jge
inc
jmp
or
inc
sub
addr16
and
pop
add
mov
stc
cs
mov
dec
sbb
test
iret
xchg
mov
xor
mov
inc
fcmovnbe
mov
ss
adc
rclb
ljmp
pop
mov
xchg
es
notb
scas
jg
data16
mov
cmp
inc
fwait
bound
jl
movzbl
movzbl
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
and
adc
pop
adc
adc
push
pushf
sbb
jnp
les
inc
jo
lods
pop
mov
push
aad
mov
push
sbb
in
pop
xor
cmp
push
vshufps
cltd
rcrb
inc
outsl
fucomp
xor
mov
mov
inc
pop
jg
jne
push
mov
jnp
push
xor
les
cltd
xlat
gs
insb
push
insl
mov
mov
out
leave
and
mov
lock
fisubrl
cmp
push
lods
sub
stos
or
fwait
in
mov
mov
daa
sbb
jns
mov
sub
xchg
pusha
dec
je
jl
jno
stos
fwait
int
decw
mov
mov
mov
test
push
test
and
pop
iret
pop
ja
data16
cmp
jnp
mov
adc
cmpsl
into
stos
in
xchg
inc
xor
ljmp
cld
clc
rol
xor
and
add
pop
mov
push
jp
or
and
jp
fwait
mov
inc
lea
dec
or
arpl
push
out
and
pop
int
mov
jae
pop
xor
push
mov
std
cli
inc
je
nop
xor
pop
cli
dec
or
cmp
out
popa
sub
dec
stos
jl
stos
sbb
testl
rcrb
mov
mulb
xor
fadd
fsubrp
ljmp
out
lea
arpl
sub
je
and
mov
add
xor
in
shrl
rolb
mov
fiaddl
jle
dec
push
aam
mov
inc
push
js
sbb
pop
js
add
add
fists
ljmp
cmp
enter
or
sub
add
push
cs
arpl
addr16
int
or
push
xor
mov
hlt
pusha
lahf
pop
call
bound
jno
sbb
jle
scas
mov
xor
lock
icebp
sub
jbe
lcall
xchg
mov
push
xor
adc
push
pushl
adc
xor
adc
inc
adc
jb
push
mov
push
xchg
pusha
xchg
inc
xor
mov
cli
inc
pop
stos
scas
cltd
mov
mov
adc
lahf
adc
scas
das
scas
out
cs
dec
adc
stos
jae
jns
adc
add
scas
and
mov
mov
sbb
or
lcall
pop
push
xchg
pushf
mov
sub
imul
scas
iret
popa
orl
and
sbb
xor
loope
js
jg
scas
xchg
pushf
add
hlt
mov
pop
xor
push
or
rorb
leave
mul
or
jae
jnp
adc
cmp
jno
sahf
adc
loopne
iret
es
sahf
pop
adc
xor
arpl
lods
push
mov
into
dec
pop
push
mov
mov
clc
movsb
jae
in
xchg
rcrb
dec
scas
lods
xor
loopne
xchg
aad
mov
lods
outsl
xchg
jmp
jnp
mov
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
inc
aas
ljmp
mov
int3
jne
pop
and
mov
jmp
sbb
fmuls
cli
sub
add
test
mov
push
push
ret
inc
fcomi
adc
aaa
push
pop
adc
mov
insb
or
cltd
shrb
mov
fs
iret
xor
cltd
or
lds
dec
sub
pop
sub
fists
rolb
nop
mov
in
inc
enter
mov
rclb
push
loop
sub
sbb
sahf
cmc
jae
inc
xor
mov
xchg
mov
stos
or
movsb
sbb
fs
dec
cmovns
loope
imul
fwait
push
jae
push
bound
mov
rcrb
xchg
or
inc
mov
rcll
xchg
jg
cltd
push
test
jae
push
mov
add
mov
js
sub
sbb
adc
ljmp
pop
mov
push
push
ljmp
or
pop
dec
mov
mov
push
imul
and
mov
jmp
cs
das
add
sub
inc
int3
push
insl
or
jge
xchg
clc
inc
lock
addb
shrb
adc
dec
cmc
sub
adc
adcl
or
inc
into
stc
pop
sbb
mov
mov
jg
jl
inc
cld
adc
sbb
inc
xor
mov
sbb
xor
lock
les
lcall
jmp
fisttpll
add
or
lahf
icebp
pop
or
cmpsl
fidivrs
and
jl
sbb
ss
outsb
fcoml
insl
inc
sbb
push
cmpsl
fadds
adc
and
lret
push
and
rol
xor
addb
sbb
popa
cli
fwait
loopne
out
pop
pop
pop
mov
pop
int
xchg
dec
lock
push
subb
mov
xor
dec
aad
into
cmc
bound
pop
xlat
xchg
int
shrb
int
xchg
xchg
mov
mov
ss
dec
insb
fildl
fiadds
nop
adc
ljmp
out
jb
mov
mov
and
test
cmp
cwtl
mov
add
lds
scas
push
insl
cmp
addr16
lahf
push
inc
mov
push
test
sarb
loop
ja
lods
mov
repnz
jle
rclb
mov
pop
lea
mov
xor
mov
fsubl
mov
sub
and
jb
lea
xor
aaa
dec
xor
arpl
sub
dec
sbb
xlat
sti
pop
xchg
call
fisubl
xor
add
movb
or
cli
in
sub
fmul
out
push
jmp
rolb
nop
scas
or
sbb
mov
test
aad
adc
imul
and
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
je
das
pop
iret
pop
repnz
xchg
and
xchg
xor
mov
repz
addl
xor
adc
push
xor
jb
sub
dec
add
cmp
ret
aaa
loop
adc
mov
bound
adc
pop
mov
cmp
xor
test
ljmp
sti
and
int3
xorb
arpl
jne
push
imul
outsl
push
dec
sahf
hlt
les
addr16
stos
addr16
shll
xchg
ljmp
arpl
pop
jno
orb
js
movsl
lea
rcrl
or
sub
push
jle
cmc
int3
movsb
xchg
inc
pop
je
pop
clc
mov
notb
xchg
xor
fs
push
jge
jne
sbb
and
pushf
xchg
pop
jp
dec
dec
pop
jo
int
mov
hlt
pop
xor
sub
add
out
scas
iret
out
cmp
pop
hlt
cmp
ss
jno
push
xchg
insb
in
cmp
jns
push
cmc
jnp
pop
std
cwtl
mov
sub
mov
inc
mov
rcr
push
jecxz
and
movsb
mov
inc
ficoms
adc
fstl
dec
pushf
pop
push
test
add
push
pushl
clc
dec
cs
je
insb
js
mov
cld
sub
shll
loopne
je
fimuls
test
ss
insb
pop
push
enter
ljmp
lods
fistpll
daa
lods
mov
repz
jmp
mov
mov
add
gs
stc
in
xchg
daa
cmc
mov
imul
lds
push
es
cmc
icebp
cltd
mov
sbb
cmpsb
aaa
adc
push
test
cli
iret
adc
test
add
mov
cli
mov
inc
neg
cmp
fucom
mov
divb
jecxz
or
add
int
je
test
or
adc
dec
aam
xchg
rcrb
in
jecxz
push
push
mov
push
es
jb
push
faddl
outsb
sub
mov
push
movsb
arpl
add
repz
xchg
jecxz
mov
daa
arpl
and
push
in
popf
or
push
iret
lcall
inc
sub
inc
lret
xchg
rcr
adc
jno
stos
cmp
into
xchg
pushf
adc
sub
dec
das
dec
pop
es
or
dec
jge
xor
inc
lods
fistps
cmc
xchg
mov
in
mov
fiaddl
cmp
sbb
adc
jl
cmc
es
ljmp
add
sbb
or
sbb
roll
fmuls
xor
push
adc
xchg
push
jle
xchg
add
inc
push
sbb
dec
rcrb
pop
fmulp
repz
add
jl
sub
fsubrl
mov
mov
push
push
lcall
fbstp
loop
xchg
shlb
daa
xchg
xchg
mov
or
jns
dec
or
iret
jnp
shlb
imul
lret
inc
mov
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
and
adc
pop
adc
adc
loope
sbb
in
movsl
aad
jl
add
xchg
xor
imul
inc
xor
lahf
pop
cmp
mov
repz
imul
xchg
ret
dec
mov
push
dec
mov
stc
or
ljmp
mov
dec
ljmp
mov
ret
and
loope
ds
xchg
fxch
test
paddsb
mov
subl
mov
rclb
sti
mov
mov
mov
cmpsl
jae
scas
jne
push
fbld
add
ja
fnstenv
sub
ja
sahf
jns
xor
std
mov
movsb
popa
cmp
addb
pusha
addr16
adc
inc
jne
xchg
outsl
jmp
add
icebp
stos
pushf
pop
sbb
xchg
xor
std
jge
jns
pop
jecxz
movsl
stos
push
sahf
sbb
ljmp
dec
and
inc
mov
popf
sub
clc
mov
sbb
xchg
out
not
xchg
mov
jne
xor
push
inc
mov
fiadds
adc
xor
insl
loopne
push
mov
mov
insl
xlat
lcall
push
or
fidivrs
jno
cwtl
inc
nop
inc
mov
aam
mov
xchg
lret
sbb
js
mov
in
jo
les
test
js
sbb
lock
incl
in
sbb
mov
push
int3
jecxz
or
add
push
xor
sub
in
insb
and
fsubrl
rcr
insb
mov
lret
or
inc
and
mov
add
movl
lcall
sub
and
push
dec
ljmp
or
or
pop
test
mov
out
pop
out
lret
jp
decb
stc
xchg
adc
push
in
scas
push
push
insl
sbb
cmpsl
push
push
lcall
xchg
or
outsb
ret
stc
cmp
jns
pop
xchg
push
mov
arpl
sahf
jg
sbb
popf
cwtl
cld
adc
xor
out
in
xlat
jecxz
cmpsl
mov
leave
jne
rcll
mov
cmpsb
pop
push
mov
out
adc
rorb
mov
sbb
add
cs
sbb
cmp
dec
shll
lret
push
push
lea
adc
scas
inc
mov
cmc
jle
gs
repz
jno
mov
push
hlt
sbb
push
cmp
mov
scas
test
lahf
jae
add
clc
loope
push
test
jmp
and
test
push
out
sarl
jno
sbb
repz
xor
xor
iret
push
bnd
add
rorb
push
push
jb
incb
mov
sub
lahf
sti
aad
push
pushf
sbb
add
cld
fsub
aam
xchg
and
fildll
or
insl
mov
dec
push
imul
mov
jmp
jge
adc
or
sub
mov
ficompl
mov
fsubs
shl
aam
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
mov
daa
adc
int3
movlps
lret
pop
ljmp
lea
xchg
jecxz
stos
fcmovne
cli
addb
orb
hlt
mov
mov
out
pusha
xchg
into
shrb
mov
and
mov
cmpsl
push
xchg
out
adc
mul
push
adc
pop
aad
cld
push
pop
jecxz
push
sahf
adc
lahf
imul
lcall
sub
add
mov
leave
sbb
enter
stos
dec
sar
push
jecxz
dec
lahf
cmp
adc
add
test
cltd
push
cmpsb
mov
cmpsb
add
xchg
xchg
cmpsb
fadds
and
mov
add
out
or
movsb
xchg
add
shrl
or
pusha
sub
pusha
pushf
enter
and
or
fcomip
shlb
xchg
clts
mov
or
testl
or
adc
dec
xlat
outsb
push
dec
mov
dec
dec
pop
repz
cli
in
and
sub
insb
mov
xor
cmp
or
cmpsl
xchg
leave
out
xchg
repnz
adc
in
cmpsb
dec
xchg
les
movsl
pop
adc
push
add
add
push
pop
push
mov
adc
mov
mov
or
inc
push
ja
outsb
cmp
xor
dec
ficompl
ret
jne
repz
cmpsb
ljmp
shrl
out
jge
jae
das
int3
outsb
fdiv
dec
movsb
xchg
jl
int3
xchg
sub
shr
mov
jae
push
dec
push
xchg
subl
xchg
mov
inc
js
mov
roll
mov
jle
mov
sub
cmp
xchg
jle
sbb
cli
jmp
shrl
jge
icebp
xor
stos
or
push
mov
adc
mov
add
pop
les
test
jp
xchg
cs
jae
sub
nop
mov
shll
sub
mov
and
mov
in
ret
nop
leave
bound
adcl
add
inc
add
add
dec
adc
jb
xchg
scas
dec
mov
int3
movlps
dec
insb
dec
call
sbb
lea
adc
in
add
pop
dec
xchg
mov
dec
ret
pop
fimuls
jmp
xchg
aas
shll
jle
lock
imul
push
xorb
cltd
push
mov
int
mov
jnp
shrd
enter
icebp
jecxz
jns
push
out
rcl
mov
push
pop
gs
pmullw
or
scas
mov
incb
iret
shrb
sub
mov
jge
psadbw
sbb
in
fistpl
inc
bound
xor
cs
ds
mov
sub
inc
lcall
lods
xor
mov
push
ljmp
cmp
add
push
mov
and
test
sub
xchg
out
add
jp
jecxz
push
sbb
aas
inc
inc
test
cmp
pop
jp
out
fcompl
lcall
jno
aam
dec
xchg
pop
mov
xor
sbb
pop
out
in
lds
pop
xor
jmp
push
shrl
mov
call
mov
out
inc
and
pcmpeqb
xlat
xchg
push
out
mov
cmp
pop
pop
jo
push
xchg
jp
lock
inc
and
adc
and
ljmp
ds
xchg
mov
iret
sub
int
pop
enter
pop
fidivs
int
dec
xor
nop
cli
repz
pop
xchg
repz
fdivr
in
mov
ficompl
insl
fiadds
outsb
lret
es
inc
jns
or
aas
pop
cmpsb
add
push
lods
idivb
cmc
in
xor
dec
add
movsl
jmp
cwtl
insb
loop
push
mov
jbe
call
fs
ds
xor
stos
mov
cmp
aas
mov
jecxz
dec
add
dec
nop
sub
xor
fcmovnb
mov
push
and
cmpl
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
inc
cmp
mov
adc
int3
movlps
cwtl
push
xor
mov
cmp
push
sub
popf
jae
lea
mov
mov
xor
std
ret
add
stc
push
daa
dec
sbb
mov
xchg
cltd
out
test
sbb
and
imul
and
mov
push
mov
sbb
test
daa
lea
and
loopne
cld
xchg
iret
cmp
repnz
adc
and
fdivr
in
cmpb
cli
cwtl
or
in
inc
dec
pop
movb
outsb
lahf
mov
scas
mov
sbb
test
lods
sub
cmpsl
repnz
lea
pop
pop
testl
imul
push
cmp
iret
orl
ljmp
or
outsb
aas
mov
add
in
xchg
cs
mov
filds
stos
cmpsb
cmp
jp
into
js
xor
rcrl
mov
add
cvttps2pi
xor
mov
lds
push
push
movsb
inc
out
and
cmp
inc
or
add
loopne
rcrl
mov
sti
test
clc
adcb
insb
jns
xchg
daa
adc
or
sub
gs
cmpsl
sub
mov
repz
stc
inc
push
test
js
icebp
stos
mov
fidivrs
loope
repz
sbb
push
xor
add
repz
enter
std
aad
std
sarb
scas
pop
jae
test
rcrb
pop
pop
in
dec
push
cmc
enter
xchg
hlt
cmp
and
loope
jp
or
dec
mov
andl
mov
xor
pop
inc
adc
aas
push
jg
dec
lcall
mov
out
shl
dec
mov
das
icebp
jl
mov
mov
cmp
jp
adc
es
pop
jg
arpl
mov
cwtl
jmp
mov
inc
or
movsl
xor
addr16
rorl
mov
das
cmp
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
mov
aad
js
mov
or
scas
push
sbb
in
adcl
pop
inc
js
cmp
or
addb
mov
xor
sbb
mov
rol
outsb
fmull
and
pop
mov
pop
rorl
outsb
adc
cmp
dec
pop
iret
jmp
hlt
and
xchg
jp
xchg
cmp
mov
mov
xchg
mov
jg
add
jns
adc
sbb
inc
sbb
mov
cmp
ds
jmp
mov
push
scas
cmp
ja
mov
das
mov
movsb
jno
xor
hlt
jno
xor
lret
std
inc
xchg
inc
lcall
xchg
jb
jle
mov
adc
xor
add
repz
enter
imul
fisubl
jg
lods
mov
fnstenv
addr16
xchg
and
mov
and
popa
sarl
mov
mov
pop
lods
pop
cmp
fnsave
nop
push
sbb
pop
lds
jnp
sub
fldl
sub
dec
fwait
popf
add
ljmp
dec
pop
test
shll
xor
pop
pop
sub
fisttpll
sbbl
xor
fimull
xchg
push
xchg
pop
js
stos
leave
jmp
push
push
dec
clc
jp
adc
xchg
xor
pop
mov
jg
add
iret
clc
pop
mov
inc
jmp
dec
bnd
fnstenv
pop
pop
ja
cmpsb
psrlq
clc
mov
or
and
iret
mov
int
into
fnstenv
subl
mov
jle
ret
rcr
mov
mov
mov
mov
cmpsb
sub
out
popf
push
sahf
jo
push
jo
pop
mov
fisttps
dec
cmc
arpl
mov
movl
movl
addl
jmp
pop
repz
cmp
pop
data16
cmp
sbb
adc
movlps
mov
mov
in
inc
jge
push
and
cmp
stos
jmp
xchg
jnp
push
std
bound
sbb
adc
out
gs
push
mov
or
dec
adc
repz
jge
jnp
lods
or
scas
inc
ja
mov
xchg
movsb
movsl
fldcw
dec
fdivrp
xchg
icebp
js
jmp
fists
sbb
mov
mov
mov
pop
mov
sbb
mov
out
sub
out
push
ficompl
add
cmpsb
cmp
xchg
ficoms
insb
cli
mov
data16
cmpsb
mov
mov
lea
xchg
out
mov
fistl
add
inc
xor
jecxz
test
ret
popa
aad
dec
in
fsubrs
stc
inc
rorl
pushfw
mov
leave
mov
loope
xor
ficoms
pop
fists
jecxz
je
jns
shll
jnp
lods
in
in
daa
push
bnd
dec
dec
sbb
cwtl
sub
fwait
push
sub
push
or
add
xorl
mov
out
push
aad
mov
or
add
jecxz
xchg
adc
ret
xchg
sub
push
sub
addr16
mov
xchg
pop
cmp
rolb
mov
rolb
das
cmpsb
mov
mov
jle
push
mov
je
insb
fnstenv
jp
jmp
stc
push
fiaddl
scas
shlb
add
fs
ljmp
or
xchg
jno
lods
sbb
fnsave
pushf
das
popa
jnp
ret
jo
cs
enter
mov
push
mov
push
ret
cltd
inc
mov
stos
add
loope
push
sbb
cmp
pop
pop
xchg
not
mov
out
fcoms
sbb
cmp
jb
inc
mov
mov
ljmp
and
dec
add
pop
xor
add
mov
les
repz
inc
inc
fsts
xchg
int
test
test
incl
add
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
lcall
int3
movlps
rcll
sub
enter
mov
lret
inc
inc
and
jbe
pop
xchg
pop
out
inc
ja
mov
lahf
xchg
sbb
test
mov
mov
imul
push
out
xor
out
inc
cmp
add
push
mov
ss
shl
add
add
fistps
aas
loopne
int3
loope
add
jge
pop
stc
and
or
sub
mov
xor
jle
or
out
inc
sub
jp
push
fisttpll
test
inc
xor
insl
or
mov
popf
or
push
stos
pop
je
fs
jle
add
ss
sbb
sub
dec
push
filds
sub
in
popa
xchg
les
or
push
fwait
cmpsl
mov
sti
cmc
cmpsl
outsl
push
xor
mov
stos
jo
and
inc
adc
push
les
lcall
out
jmp
mov
adc
aas
inc
pop
insb
outsl
lea
push
add
enter
nop
inc
sbb
jge
adc
jnp
jnp
push
ljmp
or
loop
jge
mov
add
and
jg
ljmp
or
mov
gs
cld
dec
mov
pop
pop
mov
push
ja
xchg
mov
arpl
push
mov
xchg
mov
lock
or
movsb
add
lea
pop
sbb
ret
sarl
xchg
push
jnp
sub
rcl
mov
jecxz
cmp
and
or
fistpll
sbb
xor
notl
sbb
div
cmp
mov
imul
fbld
mov
icebp
or
mov
sbb
test
out
and
xor
ret
adc
cld
out
call
mov
movsb
mov
inc
ret
mov
push
add
pop
lret
or
add
mov
sbbl
or
movzwl
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
pushf
out
dec
mov
int3
movlps
cmp
call
mov
lcall
jp
add
bound
ret
jbe
and
jb
imull
icebp
movsb
push
dec
pop
add
xlat
icebp
into
and
jge
or
jl
in
popf
es
rcrb
mov
push
sbb
mov
xchg
popa
pop
xor
ret
cmpsb
dec
mov
inc
dec
pop
jle
cmp
mov
cmc
jns
imul
cmp
mov
mov
mov
and
lret
testl
or
mov
cmp
mov
rcll
dec
mov
test
test
arpl
mov
push
xor
push
cmp
inc
pop
push
adc
pushf
pop
loopne
dec
dec
lret
loope
mov
ja
out
cmp
sbb
inc
inc
jl
pop
sahf
mov
mov
cmpsl
out
popf
dec
mov
lret
stos
in
xor
mov
jg
in
fdivs
popa
xchg
inc
xchg
repnz
mov
fwait
cmc
and
mov
clc
push
jg
clc
push
and
aam
dec
jne
data16
and
sbb
inc
xlat
je
popa
push
jbe
jge
arpl
dec
arpl
pop
sbb
les
pop
mov
and
fmull
mov
cmc
popf
and
xor
mov
lds
cli
push
mov
and
inc
faddl
adc
adc
stos
out
inc
xchg
sbb
pop
cli
adc
jmp
push
lcallw
push
outsb
pop
lret
xlat
fsts
stos
stc
es
push
add
cmp
mov
xchg
add
lea
std
or
add
jnp
pop
and
cwtl
lahf
out
sahf
jecxz
jg
push
sahf
pop
add
jle
sbb
dec
loopne
jg
loope
sbb
lods
sbb
xchg
scas
in
jb
movsl
into
jmp
lret
or
roll
call
rolb
add
sub
add
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
movsb
js
or
adc
inc
test
loope
pop
jg
add
rclb
cmp
cmp
add
sar
push
testl
add
test
mov
leave
jnp
cmc
or
loopne
adc
jno
mov
cs
xor
cmp
pop
fs
sub
aas
xchg
data16
sahf
jmp
test
pop
outsb
test
adc
xchg
les
out
push
repz
stc
mull
out
pop
jno
jmp
inc
cmp
xor
jecxz
idivl
mov
mov
mov
fwait
add
add
ds
sbb
xlat
jp
inc
and
jecxz
movsb
cmp
ljmp
out
bound
test
sub
add
lahf
mov
hlt
xlat
popf
loopne
pop
shlb
and
and
testb
sarl
stc
adc
dec
ds
adcb
xor
push
add
mov
cmpsl
inc
insb
addr16
out
sub
sub
jae
fistl
dec
clc
jl
or
cmovne
push
and
int
out
fiadds
cli
mov
in
leave
push
xor
sub
cld
loope
or
sub
push
hlt
mov
push
inc
popf
mov
popf
cmp
scas
dec
mov
adc
push
andl
imul
insl
test
bound
and
sbb
outsb
and
jge
lret
inc
movsl
or
sub
inc
inc
pusha
xrelease
jg
outsb
fadds
pop
cwtl
mov
pop
sbb
inc
and
jnp
icebp
add
mov
ret
stos
mov
jmp
test
fidivrl
xor
mov
mov
sahf
mov
jbe
in
sub
nop
clc
stos
dec
mov
stos
idivl
or
jne
mov
xchg
inc
mov
addr16
jg
ds
notl
push
xor
fdiv
icebp
mov
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
and
add
int3
movlps
sbb
or
xchg
fildl
insl
cmpsb
das
jge
adc
addr16
mov
push
adc
push
dec
dec
ds
addr16
cmp
aaa
xchg
cld
jb
mov
and
lds
sbb
or
adc
mov
fs
pusha
fldt
aad
int3
sbb
and
pop
or
pop
cwtl
imul
xor
add
xchg
xchg
fsqrt
mov
inc
inc
mov
or
push
int
mov
mov
adc
loopne
xchg
xor
shll
and
or
xchg
xchg
popf
mov
rorl
lret
adc
das
test
popa
leave
jl
movsl
aas
data16
movb
ret
pop
or
xor
fidivrs
mov
out
test
ja
lahf
stc
in
call
jnp
sub
lahf
mov
xchg
outsb
or
inc
mov
jp
xchg
mov
stos
filds
sbb
cmc
mov
xchg
cwtl
stos
test
data16
stos
aaa
rcrl
dec
or
fdivrs
xor
mulb
test
enter
dec
jge
aaa
test
pop
xlat
sub
mov
add
aam
js
into
jne
xchg
jno
push
inc
int3
xor
mov
mov
add
lds
call
jle
xor
dec
rcrb
clc
adc
cmp
lcall
push
leave
mov
ja
aas
sub
or
pop
xor
out
pop
aaa
pop
out
pop
push
shlb
inc
inc
lret
xor
jo
xor
out
mov
xor
xor
mov
dec
xchg
sub
lret
dec
xchg
bnd
std
pop
sets
nop
fnstcw
mov
lods
and
add
or
in
sbb
gs
rcrb
lods
sbb
mov
pop
jb
mov
fldt
push
imulb
pop
in
orb
add
ret
sub
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
pop
or
sbb
fsub
xchg
lret
les
cmpb
adc
sbb
pop
std
cld
cmpsb
ret
pop
or
mov
jno
sbb
mov
fwait
and
fucomp
jmp
mov
cli
jp
jne
icebp
lds
aad
fildll
push
idiv
cld
test
repz
dec
pop
shrl
add
adc
pushf
push
mov
fidivrs
push
idiv
inc
das
mov
jmp
adc
inc
or
inc
sbb
add
mov
dec
mov
ja
inc
iret
mov
ret
data16
popa
pop
or
aas
pop
xchg
cmp
idiv
mov
lcall
xchg
jb
xchg
mov
sti
lods
popf
push
lea
es
test
dec
loop
das
lods
into
or
imull
xor
xchg
mov
and
lret
cwtl
xchg
dec
and
xor
or
cld
fsubrl
xchg
adc
or
ret
into
sbb
or
push
dec
push
enter
or
cmpsl
inc
addr16
js
pushf
loop
sub
in
inc
outsl
das
adc
fstps
or
mov
cli
mov
sti
dec
divl
pop
xor
addb
push
push
mov
lcall
dec
jnp
add
pop
or
pop
cmc
out
adc
mov
test
out
mov
inc
repnz
mov
xlat
clc
xor
pop
not
in
xchg
lret
fstp
sahf
jo
add
lahf
iret
mov
jb
lds
insl
adc
test
or
or
lahf
sub
inc
aam
mov
hlt
cltd
testl
cmp
iret
sbb
out
movsl
dec
pushf
xchg
mov
imul
xchg
inc
ja
dec
xor
inc
leave
addr16
std
das
addl
xchg
outsb
lods
push
std
repnz
dec
adc
setae
xor
lret
fmuls
in
incl
add
leave
inc
add
lret
mov
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
sub
sti
adc
adc
dec
sub
xor
or
inc
pushf
call
aas
dec
rorl
xchg
icebp
jle,pt
inc
or
pop
cmp
mov
jnp
aas
in
mov
add
fistl
cli
pop
mov
data16
shlb
jne
jnp
mov
dec
add
jnp
jno
mov
mov
mov
outsl
test
inc
cmpsb
push
sub
addr16
pop
cld
push
jecxz
sbb
fwait
shl
add
test
dec
frstor
mov
add
cs
push
in
unpcklps
cmp
inc
mov
pop
test
dec
add
sbb
push
das
mov
data16
stos
push
lret
lahf
aad
mov
je
out
add
xchg
dec
out
imul
xor
cs
and
movsl
pop
faddl
lahf
adc
xor
andb
stos
mov
pop
movsb
jg
xchg
aas
ret
push
dec
std
xor
pop
rorb
sbb
adc
ret
mov
adc
mov
and
je
jne
iret
pop
jno
mov
mov
mov
jecxz
rorl
gs
leave
mov
mov
sbb
push
insl
out
les
or
adc
or
ja
xor
dec
pusha
or
mov
sahf
or
cmpsb
pop
lock
xor
push
inc
sbb
inc
push
les
add
xor
mov
fstl
cld
fcmovnb
jp
enter
bsr
test
nopl
std
push
inc
in
sub
inc
nop
or
ret
push
clc
outsb
or
xchg
cmp
xchg
int
push
mov
out
mov
sub
fistl
nop
jo
out
jo
jns
mov
shl
inc
negl
adc
ja
sub
int3
dec
cs
fdivr
decl
ret
add
add
add
js
das
cmp
notl
adc
push
rcr
sub
cld
push
jo
mov
cli
sbb
sbb
sub
out
mov
ret
imul
paddq
mov
mov
clc
stc
mov
add
sets
xchg
sub
pop
call
lcall
jecxz
mov
mov
notl
dec
xchg
into
pop
shl
jo
pop
scas
xchg
jb
inc
div
cld
xor
pushl
out
sub
loop
in
daa
cmp
cmpsl
add
sbb
jp
sub
loop
insb
mov
mov
daa
cs
dec
xchg
xchg
fstps
xchg
mov
jae
insb
das
inc
dec
loope
pop
dec
ret
dec
int3
jbe
aas
not
add
pop
ja
jo
pop
js
xor
push
mov
push
inc
gs
js
bound
cmpsl
pop
scas
pop
rcrl
lahf
jge
or
ljmp
mov
ljmp
outsb
mov
xchg
icebp
or
mov
lahf
sbb
add
sahf
and
lods
or
mov
cmpsb
jae
cltd
ret
jo
nop
daa
or
mov
cmp
rcrb
or
mov
push
lcall
loopne
aaa
mov
cmp
addb
loopne
cmp
loop
push
stc
mov
mov
inc
movsl
ret
and
push
test
jmp
loopne
nop
cmp
out
add
xlat
jle
dec
fstpt
jae
jp
pop
shr
dec
je
loopne
icebp
or
push
mov
imul
or
or
and
jo
subb
inc
push
push
sti
or
test
pop
insl
or
push
mov
adc
repz
pop
xor
in
scas
loop
movsb
mov
fcoms
lods
bound
imul
dec
repnz
mov
test
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
mov
dec
ljmp
and
inc
out
xor
xchg
in
in
les
aad
nop
mov
xchg
mov
outsl
and
push
out
gs
mov
into
pop
movsl
mov
jns
js
add
cmp
hlt
xchg
movsb
cmp
inc
push
and
mov
scas
ret
or
mov
mov
or
lret
movsl
add
outsb
cmp
push
lret
repz
cli
inc
repz
mov
jp
sub
mov
dec
aam
fidivl
popf
mulb
xor
shrl
or
in
ret
movsb
call
and
adc
sbb
ret
out
xor
jmp
add
sbb
stos
shlb
stos
inc
pop
xchg
sbb
test
xchg
ret
pop
in
and
ret
adc
jge
pop
shl
outsb
or
push
adcl
push
aaa
into
push
jb
push
pop
push
out
sbb
pop
jle
jecxz
mov
lcall
cmp
popa
cltd
and
xchg
orl
mov
push
enter
sti
or
push
shrb
les
mov
jge
out
shufps
jbe
or
lahf
lods
jb
stos
aam
pop
cld
and
xchg
sbb
repnz
pop
nop
mov
test
aad
ret
xchg
xchg
xor
inc
add
in
cmpsb
test
scas
cmp
std
gs
in
and
out
cmp
cmp
rcl
lods
jecxz
mov
enter
repz
push
out
dec
pop
rorb
sub
jecxz
cld
mov
inc
xchg
repnz
lahf
sbb
mov
aam
mov
xchg
push
insl
pop
or
aaa
mov
pop
stos
insb
cwtl
fs
sbb
sahf
fsubr
cmp
push
push
push
add
fnsave
pop
cwtl
jmp
and
mov
dec
call
lea
test
jae
mov
cwtl
adc
outsb
nop
mov
jmp
sahf
lcall
inc
add
add
pop
sbb
sbb
ss
cmp
js
add
jle
out
adc
adc
lods
mov
push
mov
sbb
shrl
cmp
sti
leave
cmp
sti
and
add
or
adc
cmc
cmp
xor
pusha
mov
mov
std
fimull
vphadduwd
or
fisubs
pop
loope
loop
pop
int3
mov
adc
pop
xchg
mov
or
repnz
cwtl
push
gs
jl
gs
mov
xchg
mov
imul
hlt
add
out
mov
adc
pushf
dec
test
mov
cmp
lret
das
cmp
lahf
pushf
pop
pop
leave
dec
dec
push
ja
xchg
aad
mov
cmp
scas
sub
xor
mov
push
pushf
mov
cs
add
mov
pop
push
sub
inc
add
outsb
mov
loope
iret
push
ror
ret
loope
pop
mov
sbb
push
xor
stos
inc
lret
bound
or
jle
repnz
addl
data16
xchg
out
jmp
xchg
shrl
jl
push
movsl
addr16
mov
out
out
sub
cmp
mov
jg
dec
stc
out
inc
jle
cmp
or
iret
fnstsw
push
xchg
mov
roll
repz
xor
inc
out
push
popf
dec
cltd
dec
adc
fwait
push
jg
jp
lret
std
sbb
int3
or
mov
lods
out
in
push
and
and
jo
push
outsl
das
shlb
push
push
scas
adc
sub
movsl
or
inc
and
ret
pop
mov
lahf
or
mov
push
sub
inc
cmpsb
aam
sub
mov
cld
jmp
inc
mov
xchg
repz
sub
dec
test
popa
xlat
and
mov
ds
mov
inc
inc
mov
inc
decl
cwtl
fidivs
mov
pop
ret
out
push
stc
add
movb
inc
mov
add
in
aaa
push
test
imulb
cwtl
pop
adc
ret
test
push
adc
incl
mov
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
xor
sub
dec
hlt
adc
and
xchg
push
jecxz
mov
jmp
xor
fs
imull
inc
push
bound
jbe
andl
es
xchg
xchg
cmp
les
push
sub
xor
scas
in
fnstenv
pusha
jns
mov
test
mov
and
mov
std
frstor
inc
jecxz
clc
and
or
ss
adc
cmp
mov
lea
sub
test
shlb
sub
fstpt
ja
pop
sbb
mov
mov
ljmp
mov
test
lods
xchg
add
jmp
fcmovb
cs
jecxz
outsb
sbb
out
cmp
lods
push
cmp
and
sbb
xchg
mov
mov
cwtl
scas
int3
cld
mov
cmp
cld
add
push
xor
sub
sub
insb
cmp
and
lock
or
xchg
or
stc
in
fisttps
ficoml
cmp
jp
aaa
out
push
insl
std
xor
dec
lahf
inc
ret
arpl
mov
jne
scas
cli
repnz
addr16
daa
shlb
dec
mov
enter
mov
out
pop
in
mov
adcb
mov
test
mov
or
mov
lahf
out
jns
aas
stos
xor
adc
stc
in
bound
mov
sbb
mov
sub
test
and
roll
fimull
mov
call
push
test
fadds
xor
pop
dec
fimull
push
bound
and
andl
icebp
scas
jbe
stc
stos
cwtl
aas
lods
dec
movsb
jg
xor
test
mov
cmpsb
pop
mov
or
sahf
and
and
jno
mov
in
mov
cmpsb
stos
xchg
jp
jmp
aaa
sahf
fwait
aaa
dec
repnz
aas
sti
push
mov
mov
jae
push
inc
loopne
jge
dec
sub
das
orl
jmp
xor
fisttpll
and
rcrb
insb
out
adc
adc
sahf
mov
sub
xor
call
dec
xchg
xchg
and
jno
add
lret
dec
push
jg
mov
popa
mov
xor
test
lods
cwtl
subl
int
push
int3
fdiv
and
jbe
inc
and
lret
negb
inc
mov
sub
scas
daa
icebp
add
fwait
xchg
jo
adc
push
lea
test
dec
sbb
mov
xchg
stos
sub
sti
std
pusha
push
mov
xchg
xchg
or
mov
aas
sar
mov
and
dec
cmp
imul
dec
movsb
add
mov
mov
rorb
dec
ret
xchg
pop
mov
mov
pushf
mov
cmpsl
daa
or
and
out
xchg
popl
insb
add
test
xor
in
sbbl
adc
test
xchg
jecxz
mov
loopne
or
repnz
shl
aaa
into
sbb
xchg
add
mov
or
and
mov
ficoml
mov
push
jnp
ret
addb
dec
lods
inc
fwait
inc
movsb
or
cs
or
int
les
xlat
stc
xchg
les
jg
jno
mov
aam
rolb
pshufw
mov
fwait
pusha
jbe
mov
xchg
bound
sbbb
mov
movb
in
cmp
pop
and
pushl
in
pop
add
std
mov
push
stos
clc
mov
fstpl
pop
enclu
rcr
jnp
pop
sbb
ret
sarl
fwait
aad
inc
and
mov
add
lock
scas
movsb
in
clc
and
cmpl
sbb
stc
sti
xchg
sbb
push
mov
push
jno
push
and
popf
nop
mov
mov
lea
pop
pop
or
int
mov
fldl
mov
dec
movsb
stc
leave
xchg
cmc
push
jbe
addr16
jbe
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
loope
xlat
sbb
mov
sub
mov
pop
int
lds
dec
push
cmp
lds
daa
mov
jo
stos
cmp
dec
pop
or
cltd
test
mov
mov
dec
xchg
lea
mov
clc
mov
in
sub
sub
movsl
call
ror
pop
push
or
mov
aas
mov
lret
dec
dec
js
and
test
lahf
push
add
sbb
jbe
jns
pop
lods
lcall
mov
les
leave
jns
mov
mov
push
xlat
rorl
push
or
jae
inc
push
mov
mov
mov
iret
faddl
inc
xor
aad
mov
cmpsb
cmp
mov
nop
out
add
js
inc
and
sbb
or
mov
popf
fucomip
push
hlt
jb
or
add
jbe
push
scas
xchg
adc
jge
ds
shrb
lret
out
scas
popf
bound
lea
jbe
xor
add
scas
cmp
inc
push
shlb
pop
ja
xchg
hlt
push
mov
mov
sub
xchg
pop
push
jp
jae
mov
stc
call
pop
rorb
negb
mov
jge
enter
mov
inc
notl
or
in
pop
rclb
outsl
add
pushf
cwtl
movsl
faddl
mov
or
lods
pusha
pop
dec
or
fcmovu
icebp
xchg
push
cmp
outsl
pop
ja
inc
cmp
mov
dec
gs
nop
xor
sbb
dec
lock
lock
cli
add
jbe
sbb
dec
or
dec
dec
mov
xchg
and
cmp
and
and
repz
sbb
jle
jns
adc
mov
movsl
mov
jmp
lock
mov
mov
xor
xor
mov
call
jmp
cmpsb
test
fistpll
and
test
loop
adc
movlps
xchg
mov
es
maskmovq
pop
xor
lods
or
sbb
push
push
insl
outsl
sub
divl
ret
and
and
int
fiaddl
ljmp
test
push
cmc
lret
int3
pushf
loop
push
bound
mov
fidivrs
xchg
ret
notl
cmp
cmp
xor
add
xchg
mov
stc
jno
dec
pusha
pusha
shlb
lret
mov
mov
sub
mov
mov
mov
and
dec
push
lahf
in
arpl
nop
ss
push
push
jbe
xorb
fadds
std
data16
pop
mov
xor
scas
cmp
jmp
jge
cmpsb
xchg
scas
inc
push
add
cmc
xchg
adc
stos
mull
das
sub
pop
daa
mov
jecxz
mov
mov
push
sbb
pop
aad
push
das
add
sahf
sbb
cwtl
scas
fsubs
pop
movsl
pusha
mov
sub
cmp
sbb
inc
insb
scas
xor
dec
mov
leave
lods
iret
fistpl
push
mov
out
cmpl
inc
jns
sub
icebp
mov
cmp
dec
jmp
sub
dec
xchg
pop
lcall
not
push
movsb
rorl
fsubrs
add
xchg
cwtl
xchg
jmp
mov
loope
sbb
out
aas
add
out
test
xorl
mov
add
ret
adc
out
in
dec
es
inc
rol
adc
mov
xor
or
loopne
ficoml
das
and
cwtl
mov
dec
mov
movsb
test
test
cmpsl
xor
adc
mov
in
pop
push
ficomps
mov
pop
mov
adc
pop
test
aad
in
fists
dec
iret
mov
cld
sub
jnp
lock
pop
rorb
pusha
cwtl
mov
into
enter
pop
popa
pop
sbb
lock
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
cmp
jle
ficoms
adc
sarb
addl
cmp
inc
arpl
jp
inc
push
jnp
add
insb
call
xor
aas
inc
cmp
jge
rclb
push
mov
addr16
pusha
arpl
ret
ja
push
push
leave
push
mov
fucomi
filds
ficomps
imul
and
rorl
jecxz
cs
xchg
jo,pn
mov
xchg
jge
push
and
sbb
lahf
mov
add
lods
or
dec
dec
dec
ret
inc
sti
movsb
pop
push
nop
insb
fs
mov
xchg
int
or
in
push
add
bound
mov
pop
xchg
xchg
adcb
jecxz
inc
adc
cwtl
dec
subl
or
mov
outsb
mov
push
clc
dec
cmp
xor
ret
jp
dec
outsl
js
pop
xor
and
fdiv
mov
sub
mov
cmp
into
mov
or
cmc
adc
clc
shl
push
call
ret
cmp
divb
push
sub
cmpl
xor
pop
pop
mov
dec
pop
adc
and
les
pop
and
insl
cmp
jbe
clc
bound
pop
mov
inc
jle
sub
add
jge
aam
xor
cli
jb
jp
daa
adc
jmp
mov
add
mov
cmpsb
add
xchg
idivl
and
mov
lock
lcall
pop
stos
mov
cmp
mov
shll
mov
ret
inc
fdivs
adc
test
addl
ds
clc
jmp
xchg
or
repnz
push
cmp
out
jmp
xor
dec
mov
fdivl
pusha
jae
or
sbb
outsb
add
jo
shll
cwtl
test
sub
icebp
fidivrs
xchg
xchg
rclb
mov
jbe
add
pop
in
sbb
lcall
add
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
dec
mov
int3
movlps
push
and
xchg
pop
pop
mov
cltd
std
and
and
scas
cmpsl
imul
or
outsl
mov
pop
insb
test
mov
push
lret
mov
aaa
jecxz
add
mov
mov
pop
movsb
cmp
jno
cmpsl
xchg
and
repnz
insb
or
dec
loopne
aas
ljmp
out
jecxz
cmpsl
fbstp
push
std
std
ret
shrl
push
repz
addb
jp
lods
js
pop
jg
pop
dec
in
ljmp
lret
shlb
dec
test
jecxz
jp
pop
and
shrl
inc
out
stc
mov
sub
cltd
dec
sbb
fistpll
adc
insb
push
leave
inc
sahf
cmc
insb
sub
jb
stc
push
mov
mov
push
iret
out
mov
repnz
int
test
in
das
push
leave
inc
pushl
add
add
jne
lods
negl
aad
shlb
fsubrl
int3
sbb
xlat
dec
repz
les
push
xor
loop
mov
movsb
rcr
ja
jne
je
pop
push
clc
test
out
je
adc
pop
add
loope
push
mov
pushf
repnz
stos
jns
ljmp
insl
loop
repnz
int3
or
mov
dec
push
lahf
or
or
nop
sub
cmp
fs
insb
sbb
clc
and
dec
nop
cmpsl
nop
or
sbb
cmp
fcmovnu
dec
stc
lahf
pop
lock
sahf
dec
cmpsl
sbb
popa
mov
shrb
xchg
movsb
sets
out
pusha
mov
xlat
in
xchg
xchg
loop
xor
shl
xor
outsl
data16
and
xchg
sbb
test
aas
cmp
and
add
dec
psrlq
nop
ds
xor
cmp
mov
lods
in
sub
mov
out
dec
sub
mov
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
mov
stos
jge
adc
adc
sahf
sbb
les
call
arpl
aam
jns
lods
jo
xchg
sub
andb
pop
inc
out
arpl
mov
xor
inc
mov
jmp
fisttps
mov
jecxz
push
adc
sbbl
dec
ljmp
into
jns
rol
or
sub
inc
out
mov
fisubs
fwait
repz
dec
cmp
lret
push
call
dec
cmp
scas
adc
mul
imulb
test
xlat
xor
pop
rol
push
cmc
lret
outsb
jge
push
xor
pop
pushf
addl
mov
cmp
add
insb
fldcw
lret
test
ja
cmp
insb
inc
mov
into
ljmp
sbb
in
mov
std
xchg
sub
sti
mov
ret
xor
push
xor
test
cmp
shll
psrld
add
in
inc
xor
lret
mov
jno
je
dec
bound
and
mov
clc
mov
dec
aam
je
or
scas
cmp
push
imul
arpl
lret
out
dec
cld
mov
div
pop
iret
lds
xor
je
sub
sub
js
sub
or
in
subps
or
mov
mov
dec
out
add
shrl
xchg
movl
or
push
jno
out
xchg
xor
ljmp
sub
mov
scas
push
sub
in
loopne
daa
lods
mov
cmp
test
xlat
xlat
std
cvttps2pi
sbb
pop
lock
js
movsl
prefetch
or
and
cmpsb
xor
pop
adc
aas
add
and
mov
xchg
jp
jne
outsb
gs
negl
daa
insb
pop
sub
shrl
ret
push
ret
add
mov
lods
dec
out
shl
adc
scas
pop
out
inc
xlat
mov
mov
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
and
adc
adc
adc
push
ljmp
adc
jns
mov
out
dec
mov
jb
gs
sub
sbb
fsubl
jbe
xlat
sahf
adcb
stos
mov
add
or
data16
sbb
in
mov
lahf
adc
aaa
dec
inc
testl
mov
push
dec
cmp
lods
shrb
imul
sbb
out
mulb
xchg
mov
push
leave
mov
nop
pop
nop
test
fiaddl
aad
add
lcall
or
leave
xchg
nop
into
jo
scas
dec
lods
in
add
scas
cmp
jmp
mov
fstps
ljmp
pop
out
sbb
xchg
jmp
shll
push
add
sarl
lcall
popf
sbb
outsl
xor
cltd
out
xor
sbb
jno
ds
push
push
fsub
jl
xor
pop
xor
aaa
test
and
mov
test
mov
fisttpll
pop
pop
ret
adc
pop
test
dec
sub
sti
mov
fnstsw
dec
sub
inc
sbb
ds
insb
sbb
ljmp
sbbb
movsb
push
mov
call
mov
mov
mov
pop
mov
adc
out
repnz
repnz
test
inc
sbbl
and
movsl
or
lret
sbb
cmp
js
cmpsb
push
cmp
adc
cld
subb
out
xlat
daa
xchg
sub
cli
negb
jae
jb
push
loopne
pop
hlt
add
pop
and
in
int
xor
ficompl
loop
out
inc
xchg
mov
pop
sahf
dec
and
lds
test
in
cmp
fsubrl
jb
mov
and
mov
cltd
and
mov
or
sahf
ficoml
lahf
xchg
lds
iret
stc
test
inc
lock
movsl
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
insb
in
enter
movlps
cmp
mov
mov
mov
push
cmpsb
nop
adc
orb
ret
ds
jmp
mov
cs
push
dec
mov
dec
mov
xchg
xor
xchg
pushf
repz
test
mov
xchg
sarb
stos
or
or
fucomi
lock
and
rorb
push
jae
xchg
inc
lock
shrl
or
sarb
shrl
add
subb
jo
pop
call
in
push
test
or
push
cmp
adc
pop
outsb
push
and
mov
int
jmp
andb
lods
into
aam
repz
call
xchg
das
aas
out
negl
inc
sbb
inc
xchg
xor
xlat
imul
sarb
test
mov
xchg
rorl
add
jge
xor
jge
and
jg
jmp
movl
popa
mov
popf
mov
push
sbb
shl
mov
mov
popa
cmc
adcb
add
fwait
int3
testl
movsl
inc
ljmp
out
mov
stos
je
fstpt
sti
jnp
sbb
mov
xchg
inc
pop
mov
mov
sub
jge
jo
push
div
mov
sbb
ret
xchg
stos
jl
insl
jbe
lret
lcall
cmp
sbb
aam
les
sub
push
lret
repnz
add
imul
or
xchg
pop
sub
nop
mov
addb
int3
mov
pushw
in
out
jb
or
xchg
mov
pop
fidivs
ljmp
sub
push
mov
mov
push
cmp
jo
int
ret
push
jp
and
jle
cwtl
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
inc
jb
js
les
adc
fsubrs
sti
push
cmp
leave
fcomi
sub
add
shll
cmpl
or
add
cmp
stos
mov
movsb
pop
push
cmp
pop
dec
add
adc
int
jge
jo
clc
add
test
popa
popf
stos
loopne
idivb
cmc
push
ficomps
sahf
ss
inc
or
ljmp
and
popf
insl
mov
push
lea
cmc
insl
out
shrl
xor
mov
mov
out
aam
subl
pop
jl
mov
push
dec
pop
mov
repnz
mov
in
jns
out
add
movsb
xor
mov
ja
sbb
bound
cmp
push
push
ret
stc
mov
stos
gs
into
xor
mov
lahf
push
add
andb
sub
push
lret
lods
out
jp
mov
push
mov
jnp
xchg
mov
mov
push
ret
enter
mov
adc
pop
je
xor
adc
sbbb
jl
pushf
fsubl
adc
adc
ljmp
stc
sub
push
das
ret
mov
adc
mov
iret
fbstp
jg
fwait
sub
inc
rolb
pop
push
das
inc
mov
sbb
inc
shl
test
or
adc
cmp
test
push
inc
pop
mov
movsb
cmp
dec
push
ret
cmp
cmc
leave
xchg
jns
sub
mov
in
aaa
and
outsl
pop
xchg
sub
repnz
movsb
outsl
das
push
sbb
sbb
fildll
arpl
orb
xchg
jl
out
in
jne
stos
cmp
jecxz
popf
add
out
outsl
test
mov
xchg
pop
or
sbb
popl
cmp
push
cli
and
into
adc
mov
dec
repz
push
testb
popf
jl
lret
in
cmpl
sbb
fcoms
cmc
stc
lret
int3
push
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
in
jle
rclb
sbb
sahf
nop
jle
ja
xchg
mov
frstor
xchg
imul
inc
lods
rorl
dec
mov
aad
into
sub
or
xor
rolb
xchg
jge
pop
test
push
xchg
cmp
data16
push
dec
inc
cltd
and
enter
insl
fs
lret
ja
mov
mov
adc
add
pusha
lods
int
and
stc
adc
fisttpll
inc
cs
outsl
call
insl
mov
insb
lcall
outsb
cmp
adc
call
out
ja
stos
clc
dec
shrl
inc
movsb
out
and
push
pop
les
inc
or
and
pop
or
and
imul
test
clc
mov
into
pop
inc
adc
jne
adc
test
clc
shlb
mov
and
test
jg
in
and
sub
push
test
out
xchg
inc
nop
gs
mov
sub
cmp
dec
dec
dec
ret
movsl
or
int
cmovbe
fcomp
lods
adc
or
inc
cmp
jmp
push
or
mov
xlat
mov
orl
mov
test
test
xchg
insb
loope
lret
sbb
sub
cmp
je
inc
add
add
sbb
and
mov
xlat
xchg
mov
dec
mov
xchg
nop
pop
mov
js
jae
jl
cmpsl
fwait
cmp
imul
fcmove
cmp
mov
test
stc
mov
cld
scas
and
mov
test
jmp
mov
ja
outsb
dec
cld
dec
aas
es
pop
out
sbbl
lret
out
xchg
imul
loop
std
jmp
sub
test
xchg
fprem1
fadd
jmp
or
in
and
sbb
repz
test
dec
cld
aaa
ja
movsb
or
fmuls
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
pusha
outsb
insb
push
mov
adc
shrl
xor
icebp
mov
ja
imul
push
cmpsl
pop
cwtl
mov
jno
push
loopne
jp
push
sbb
daa
sbb
mov
loop
or
dec
xchg
inc
xchg
popa
cmp
jnp
cmp
pop
out
nop
mov
enter
iret
popf
mov
adc
push
inc
subb
cmp
jmp
mov
daa
movl
push
add
fs
cmpsb
xor
or
enter
xchg
lcall
inc
mov
mulb
and
int
rcl
xchg
mov
adc
push
popa
mov
gs
insl
push
jno
or
jnp
leave
sbb
inc
xchg
popa
push
xchg
or
imul
jnp
jecxz
push
shlb
les
mov
inc
push
repnz
jbe
iret
adc
mov
and
outsb
push
icebp
push
pusha
sub
mov
adc
mov
jnp
push
sub
jg
loop
push
inc
lock
push
sbb
arpl
cmp
lret
cmpsl
sub
scas
stos
repnz
fnstenv
lds
in
clc
rcrl
shlb
pop
sbb
cmp
fidivrs
sub
cmp
sbb
subb
cli
mov
inc
ljmp
xor
dec
hlt
sti
jbe
aas
out
or
and
xchg
pop
dec
cmpsb
inc
push
jl
pushf
push
dec
push
push
call
aam
add
inc
insl
jp
mov
push
fs
xlat
repz
stc
or
inc
jp
cs
lcall
adc
add
push
sbb
and
in
pop
push
xchg
mov
xchg
adc
cmpsw
push
adc
ret
outsl
jbe
movsb
in
ja
iret
jb
mov
in
push
inc
in
jecxz
frstor
push
ja
pop
pop
rcll
add
rorb
loopne
lahf
jp
std
gs
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
add
stos
int
adc
adc
mov
sbb
xchg
loopne
sbb
push
and
sar
rol
dec
pop
pop
movsb
es
out
sub
data16
xchg
mov
dec
fwait
sbb
into
pop
pop
lahf
cmp
das
sub
aas
pop
and
dec
cmpsb
clc
dec
mov
outsb
lret
bound
mov
push
divb
in
aaa
xor
inc
pop
add
xchg
pop
lret
pop
ret
mov
loopne
xchg
fidivrl
bound
lret
sub
fcmovb
subb
push
sbb
fldl2e
fnstenv
sub
cli
jb
xor
mov
xchg
pop
dec
idivl
scas
icebp
xor
pop
pusha
push
cmc
fs
add
rorb
or
xor
test
lds
cmpsb
in
push
fisttpll
arpl
jb
or
xor
add
mov
incb
flds
decl
dec
mov
add
scas
lcall
in
dec
xchg
push
ret
push
scas
fcoms
xor
fcmovnbe
loop
stos
mov
and
adc
es
psubsb
inc
xor
xor
jecxz
popf
scas
jo
sysexit
sub
jne
inc
ljmp
loopne
cmp
insl
cmp
pusha
pop
out
sub
mov
ja
dec
enter
in
popf
xchg
push
mov
or
out
dec
xchg
jecxz
mov
sahf
ds
aam
notl
stc
inc
jp
mov
and
out
mov
pavgb
rclb
xor
dec
pop
cmp
xor
repnz
int
mov
mov
pop
inc
mov
inc
lea
xchg
popa
test
cli
jmp
clc
inc
enter
mov
nop
mov
sub
mov
lret
cmp
hlt
mov
push
mov
ret
xchg
lret
sti
mov
adc
cwtl
add
xchg
ret
cmp
daa
sbb
hlt
cld
lods
das
pop
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
lea
push
jne
xchg
bound
sub
incl
in
inc
dec
sub
int3
dec
ja
dec
push
xchg
cmp
sub
or
push
lret
mov
push
xlat
and
and
xor
push
adc
xor
jecxz
xor
popa
lock
rcll
andl
sub
pop
testb
cmp
lret
and
inc
sbb
add
mov
adc
repnz
imul
daa
jnp
fidivs
and
sub
popf
lock
aas
int3
lods
mov
cld
xchg
add
jae
xor
mov
pushf
shll
loop,pt
xchg
jge
cmpsb
and
and
sub
mov
movsb
pushf
pusha
pop
mov
cmp
imul
repz
iret
pop
inc
cmp
inc
fdivr
push
sub
clc
and
fstpl
ret
outsb
jno
pop
xor
cmp
mov
mov
flds
mov
push
icebp
mov
dec
jb
mov
xor
sti
movsb
outsl
push
xor
enter
nop
push
sub
xchg
or
inc
pushf
loopne
outsb
pop
mov
mov
lahf
pusha
xor
add
mov
mov
sub
jp
es
xchg
fidivrs
mov
stos
aam
mov
or
test
stc
push
mov
jecxz
pushf
in
in
mov
dec
loopne
mov
pop
icebp
or
pop
pop
cli
lods
push
loopne
add
jmp
out
push
lret
call
cmpb
out
mov
mov
sti
popa
lret
mov
lods
xor
gs
repnz
or
mov
rcll
in
dec
lea
lahf
fisubl
std
mov
mov
cmp
add
or
xchg
add
adc
shl
mov
mov
in
xchg
in
adc
mov
ds
or
or
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
loopne
cmp
movlps
or
aaa
out
sbb
into
je
and
push
in
int
mov
xchg
ret
leave
test
cmp
inc
ja
sbb
or
or
sahf
rcrl
imul
pop
js
or
into
divb
ror
xor
jbe
test
cmp
push
xor
iret
or
ljmp
pop
inc
adc
push
and
pop
call
popf
lea
call
inc
adc
mov
out
div
fidivrl
adc
in
test
xchg
into
in
in
dec
into
mov
adc
cmc
lock
addr16
aam
lods
loop
push
xor
inc
test
daa
movsl
mov
jp
add
loop
stos
jmp
xchg
pop
lcall
xchg
sub
xorb
push
pop
gs
imul
or
push
push
lahf
fcompl
adc
add
fisubs
les
in
mov
das
cmp
int3
out
push
sub
dec
or
sbb
out
mov
xor
das
mov
lahf
adc
mov
hlt
push
lea
jmp
loope
adc
mov
fucomip
sbb
push
insl
sbb
mov
cmp
sub
or
jno
and
jbe
aaa
inc
in
pop
jnp
orl
jge
in
dec
test
push
in
jl
sub
sub
ret
or
mov
sub
std
in
insl
push
cmc
sub
dec
popf
push
pop
push
xchg
repz
or
fnstenv
adc
insb
pop
jno
xchg
inc
mov
xchg
dec
push
mov
pop
add
add
mov
xor
lods
fmuls
pushf
or
cmc
test
in
repz
sbb
push
fstpl
xchg
insb
dec
mov
push
addr16
pop
movsl
jo
outsl
xor
test
xchg
xchg
jge
cli
pushf
stos
push
xor
xor
mov
call
mov
mov
mov
mov
jmp
sub
sbb
sbb
cs
icebp
mov
stos
insb
cmc
scas
adc
adc
bnd
scas
cmp
mov
test
dec
sahf
adcl
and
mov
mov
pop
dec
mov
adc
std
mov
test
add
adc
stos
add
push
ret
jmp
dec
adc
xchg
das
and
fcomps
dec
cld
out
sbbl
fnstcw
push
xchg
cmp
ds
jnp
das
movsb
mov
jp
outsl
rcll
stc
and
ds
cmp
mov
stos
mov
pop
xchg
jle
lcall
sti
cmp
push
addb
or
pop
enter
stc
ret
jp
out
mov
push
mov
les
wbinvd
adc
adc
inc
add
ljmp
jl
jo
scas
sbb
shl
out
jg
jnp
int3
ret
adcb
push
adc
fnsave
add
jle
daa
out
mov
out
add
lds
clc
loope
pop
sbb
jp
xchg
xor
mov
hlt
cmc
sub
lret
andl
pop
inc
sbb
ret
adc
lods
sqrtps
scas
lahf
test
xchg
cli
xchg
push
or
fsubrs
jmp
fst
xchg
fisubrs
es
mov
mov
dec
arpl
and
scas
inc
icebp
cmp
inc
jns
addr16
and
push
jnp
or
adc
push
std
scas
and
in
dec
int3
mov
mov
sub
cmpsl
dec
or
mov
sub
loop
outsl
in
sahf
mov
rcrl
pop
pop
mov
jns
pushl
imul
pop
stos
xchg
cmp
push
add
cwtl
jl
sub
pop
paddw
aaa
testb
sbb
add
negl
and
arpl
out
dec
ss
addr16
ljmp
cltd
lods
xor
jp
outsb
mov
inc
and
lret
and
inc
aaa
dec
xchg
jp
dec
leave
sub
shl
and
mov
sbb
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
mov
int3
movlps
pop
out
adc
out
pop
xchg
bound
jno
inc
loope
pop
jne
pop
loopne
insb
push
add
addr16
and
jno
popf
mov
ja
out
mov
leave
add
pop
rorb
xor
adc
inc
imulb
jnp
jne
cmp
xor
mov
test
in
or
mov
aam
cmc
push
ret
mov
loopne
inc
in
and
hlt
mov
shlb
push
sbb
mov
outsl
ds
sbb
mov
xchg
jl
jnp
bound
imul
adc
xor
inc
and
aas
loopne
lods
push
dec
inc
and
xor
push
push
fimull
inc
outsl
ja
iret
mov
cmpsb
es
push
sub
enter
fcomp
jp
aad
in
push
fsin
test
imul
out
cltd
fs
and
sub
loopne
rcr
imulb
fnstenv
adc
mov
adc
xchg
pusha
imul
popf
pop
mov
adc
scas
popf
adc
mov
jns
cmpb
mov
push
adc
into
outsl
adc
test
mov
sub
hlt
imul
mov
mov
cmp
mov
push
adc
mov
repnz
data16
add
inc
mov
and
iret
jmp
sub
xorl
sub
sbb
imul
rorb
fisubs
data16
jge
cmpsb
stc
lcall
pop
cmp
cmp
cmpsl
dec
iret
pop
pop
mov
loop
xchg
and
ljmp
cli
inc
loop
inc
out
dec
outsl
push
xchg
and
stc
in
fcmovb
lods
xchg
or
pusha
cmp
dec
loop
hlt
outsl
movsl
movsl
movsb
push
or
jno
sahf
call
ror
lods
dec
movsb
add
jb
nopl
out
pop
xor
dec
adc
pop
rolb
insl
daa
bnd
mov
cmpsb
addr16
rclb
cwtl
and
ds
or
or
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
ljmp
movlps
mov
cwtl
test
sbb
adcl
sbb
push
test
clc
clc
mov
pop
inc
cmp
dec
popa
push
in
add
pop
push
xor
int
test
add
sub
outsl
std
sti
ds
or
lods
mov
cmp
icebp
andl
sub
int
cld
sub
xchg
pop
adc
pop
lret
sub
popf
pop
dec
clc
adc
shl
fcom
push
popf
mov
faddl
loop
lret
sbb
jae
sub
cltd
cli
add
test
dec
jle
mov
sub
loopne
sahf
sbb
pop
mov
cs
stos
insb
fsubs
inc
in
cltd
jns
and
cmp
or
adc
and
pushf
fcmovu
sarl
or
pop
lods
jecxz
xchg
std
sub
jmp
dec
inc
mov
in
mov
nop
int3
repnz
cmpsl
enter
in
in
les
test
pop
inc
cmpsl
xor
iret
orl
lods
sub
jmp
xor
daa
add
mov
dec
aaa
pop
enter
xchg
out
cmp
mov
nop
into
pop
add
icebp
xchg
fisttpl
ds
sbb
mov
arpl
loope
sbb
pop
mov
mov
subl
ja
int
lds
push
xchg
xchg
and
rorb
das
pop
lods
jl
or
jl
dec
lcall
into
rcrb
xchg
xor
in
sbb
push
push
rclb
or
mov
bound
lock
dec
sbb
test
sbb
xor
outsl
lcall
dec
imul
adc
loop
in
jno
or
icebp
mov
push
stos
sub
or
loop
and
add
fadd
xchg
fxch
out
ljmp
push
sub
icebp
sahf
loope
mov
sub
jae
pop
push
je
or
ffree
iret
xor
inc
out
push
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
iret
dec
fdivrs
int3
movlps
call
dec
jnp
outsb
dec
fisubl
dec
rcll
xor
pop
wbinvd
jg
xchg
pop
loope
out
loopne
fwait
es
out
mov
dec
jmp
mov
test
push
xchg
cmp
cmc
pushf
mov
jmp
push
inc
and
jl
icebp
aaa
pushf
rolb
movsb
jg
xchg
sbb
loope
push
cld
call
adc
sbb
nop
and
cmpsb
mov
int3
or
int
rorb
xor
mov
jns
mov
jae
add
sub
cmpsb
iret
mov
es
outsl
ret
xchg
cmp
insb
stos
and
cmp
push
pop
loop
shrl
pop
imul
and
ret
daa
add
xchg
or
fists
fldt
cli
in
ss
movsb
xchg
leave
xchg
arpl
repz
dec
fiaddl
in
shl
add
push
lds
out
sbbb
test
fisubrl
mov
das
test
add
cmpsb
adc
xchg
sub
mov
sahf
mov
rcrb
fcmove
inc
cmpsl
cmp
stc
test
std
pushf
adcb
test
dec
pop
inc
mov
inc
out
and
push
xor
cmp
nop
sbb
icebp
inc
push
shll
inc
repz
xchg
inc
gs
test
jmp
leave
lods
xchg
pop
jp
xchg
and
mov
enter
repz
lods
out
xchg
jmp
mov
hlt
xchg
ret
pop
cwtl
push
sti
add
mov
push
ss
push
xchg
cmp
and
cs
cmp
adc
popf
mov
or
add
mov
adc
xor
rorl
fcmovnb
rclb
and
daa
push
fs
jb
cmpsl
pop
sub
pop
mov
lds
mov
mov
movsb
inc
in
push
jno
push
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
push
lea
sahf
adc
adc
add
das
call
xlat
pop
lret
loop
test
inc
scas
cmp
or
scas
sbb
push
xchg
lock
sub
movsb
fdivp
adc
cmp
cld
cmp
mov
jo
lret
cmpsb
push
fsubs
add
xlat
daa
decl
rcrb
pop
lds
or
js
lret
lret
and
pop
loope
pusha
icebp
jbe
push
aam
adc
push
out
jmp
pop
mov
stos
andb
decl
rorl
jnp
fldl
and
adc
push
mov
fisttps
je
enter
mov
mov
push
leave
ljmp
out
inc
inc
sub
leave
push
nop
std
cmpsb
divl
push
jmp
jp
xor
xchg
xchg
clc
push
sub
dec
add
jp
test
outsb
test
pop
or
fwait
push
or
lcall
pop
callw
dec
mov
mov
int3
mov
mov
inc
mov
push
xor
imul
inc
fwait
insl
repz
inc
dec
pop
data16
inc
ja
sub
fldl
cmpsl
notl
mov
jns
rorl
lret
cmp
add
loopne
imul
jns
xchg
mov
jp
mov
jle
cmp
sub
sub
and
fwait
arpl
lods
dec
mov
pop
ret
jbe
inc
adc
xchg
dec
clc
and
ljmp
xor
dec
add
adc
fisttps
cmp
pop
sahf
rol
fidivrl
inc
add
or
mov
sub
inc
cmpsl
sbb
inc
imul
jnp
jge
xchg
mov
mov
mov
pop
mov
jb
xchg
inc
jg
pop
or
int3
push
jmp
lock
les
xchg
aad
xchg
mov
or
lds
pushf
mov
xchg
imulb
subl
mov
mov
pop
leave
pop
stos
test
adc
xchg
add
pushl
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
xor
jle
lcall
jb
mov
lahf
mov
mov
xchg
lret
dec
loopne
push
popa
mov
int3
and
loope
mov
xor
or
ret
icebp
decb
in
out
sub
cltd
daa
adc
test
mov
shll
fsubrl
fiaddl
inc
push
aas
leave
push
and
icebp
pop
test
xor
div
insb
pop
cmpsl
mov
add
jae
scas
add
lret
iret
test
dec
test
dec
test
jecxz
arpl
cwtl
stos
filds
in
jne
popa
jno
push
daa
adc
xor
int3
sbb
test
imul
jg
cmp
sub
ret
js
inc
insl
pop
jne,pt
cwtl
and
dec
enter
es
mov
stos
push
mov
je
xchg
icebp
mov
push
es
fwait
jl
jl
aaa
in
add
xor
sahf
int3
pop
enter
mov
sbb
sub
out
jp
stos
adc
daa
loope
ds
pop
iret
in
inc
shrl
mov
fadds
mov
aaa
cmc
sub
sarl
stos
push
mov
jmp
mov
cwtl
orl
pusha
daa
loopne
mov
pop
test
push
stos
jb
or
movsb
jo
xorb
pop
stos
xchg
popa
inc
adc
es
push
dec
xor
cmc
decl
xchg
or
repz
adc
je
mov
lock
adc
mov
adc
mov
sbb
push
and
push
xor
fwait
movsl
dec
bnd
push
shrl
in
scas
adc
stos
fdivs
push
leave
fsts
or
lea
in
xchg
ret
fcom
leave
test
mov
pop
sbb
xor
sbb
jnp
push
mov
xlat
repnz
loope
popf
sbb
stos
mov
sub
and
add
pushf
jno
jl
mov
cltd
lahf
roll
push
xchg
xchg
pop
lods
xor
push
stc
lods
xor
in
add
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
insb
inc
xchg
adc
adc
pop
jnp
scas
push
pop
adc
jb
pop
dec
or
sbb
repz
repnz
dec
adc
fbstp
test
mov
inc
adc
les
ret
cwtl
mov
out
inc
cs
movsl
int
jns
pop
das
stc
and
add
xorb
popa
adc
mov
das
push
imul
cmpsl
push
push
cmc
idivl
cmp
sbb
test
lahf
insb
dec
test
rorl
and
fisubs
mov
sub
mov
pusha
cmpsl
adc
cs
xor
lock
test
mov
mov
call
nop
mov
push
add
jae
lret
adc
aad
mov
fadd
cmp
fiadds
mov
out
dec
fwait
outsb
dec
push
imul
and
loope
sub
clc
push
sbb
je
pop
push
adc
stc
aad
xor
pop
jecxz
inc
movsb
out
xchg
xchg
mov
jno
push
cwtl
cmc
int
nop
scas
adc
cmc
popa
sti
js
xchg
ljmp
filds
fstps
xchg
cmc
mov
and
mov
adc
pop
xor
jne
pushf
repnz
es
insl
sarl
jp
fadds
pop
clc
pop
push
adc
jmp
test
out
inc
adc
fimull
sbb
cld
mov
sahf
gs
cmp
sbb
inc
sbb
or
push
stos
clc
lds
push
cmp
loop
into
cld
cmc
push
xchg
repz
and
push
mov
sub
incl
out
mov
sbb
scas
cmp
mov
jno
xor
sbb
sbb
fimull
mov
jo
andl
xor
lret
sti
clc
fstpt
mul
sub
jne
imul
addl
add
cltd
repnz
mov
ds
sbb
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
clc
out
jle
mov
adc
mov
out
adcb
lods
jg
stc
mov
push
lea
mov
rcll
sub
das
int
sbb
mov
loop
fdivp
jnp
xchg
popa
xchg
filds
add
jmp
ds
sub
ss
cmp
fnstsw
push
sti
test
jg
jae
ret
jl
in
adc
imul
in
adc
and
jae
adc
mov
out
sbb
xchg
mov
sarl
xchg
xchg
inc
pop
jne
pop
movsb
push
add
mov
cmp
movsl
adc
pop
fistps
stos
sti
pushf
jge
lret
cmp
pop
push
inc
pop
mov
pushl
les
mov
lds
call
in
insl
sbb
ss
fimull
popa
mov
lret
xchg
ficoml
pop
scas
icebp
push
ljmp
jno
aaa
sti
sbb
xor
cmp
sbb
cmp
add
call
xchg
dec
lahf
sub
mov
and
xor
mov
sub
sbb
mov
dec
cvttps2pi
cs
pop
jmp
and
cli
mov
shlb
sub
inc
push
fdivrs
in
xchg
cli
nop
fwait
incl
out
mov
cmp
xchg
fstsw
mov
test
out
test
mov
xchg
pop
dec
loopne
mov
jecxz
popf
push
hlt
mov
xchg
gs
jge
insl
testb
repnz
sbb
inc
push
pop
aad
fbstp
mov
icebp
lret
cld
out
lds
stc
push
cmp
add
adc
mov
and
adc
and
mov
jle
mov
sub
xor
pop
cmp
adc
xor
in
test
sub
fidivs
test
pop
xor
mov
insb
mov
in
pop
cmpsl
std
push
mov
addr16
repz
mov
enter
xchg
dec
mov
daa
push
lds
sbb
and
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
xor
mov
adc
adc
in
xchg
sub
jg
push
sbb
cli
jl
lods
dec
shl
xchg
cli
in
jl
test
push
adc
sbb
cli
xorb
outsl
fwait
aaa
pop
repnz
repnz
sub
cwtl
lds
xchg
addr16
jae
mov
cmp
pop
jbe
shl
jnp
mov
mov
insb
clc
jnp
lret
lea
or
inc
mov
xchg
imul
into
xchg
add
xchg
dec
inc
mov
pop
mov
sahf
movsb
or
add
xchg
fwait
cmc
and
fisttpl
in
mov
mov
jo
pusha
inc
push
fidivl
xor
std
jle
inc
and
daa
sub
and
repz
out
lds
xchg
mov
mov
lret
sbb
mov
mov
mov
mov
dec
cmpsb
les
fistps
enter
repz
xor
fstpt
jge
jns
leave
sub
pop
dec
mov
out
lret
les
je
cli
xchg
std
ret
xchg
jns
maxps
jnp
stc
out
loope
lods
mov
xor
dec
mov
add
or
pop
adc
mov
gs
call
pop
xchg
out
je
into
cmp
adc
shlb
aaa
int
dec
scas
ret
and
xchg
jb
mov
push
jecxz
jb
scas
pop
jnp
mov
test
js
lahf
mov
and
out
ret
inc
sub
repz
fmuls
push
xchg
xchg
mov
in
and
dec
xchg
es
mov
jb
xchg
andl
lret
pop
jo
cmpsb
stos
inc
and
or
adc
add
or
lds
psubb
push
mov
clc
pop
jecxz
jns
fs
pop
lret
or
cli
fnstenv
mov
cld
sub
sub
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
stc
ljmp
adc
adc
cmp
lcall
mov
sbb
outsl
scas
push
adc
gs
call
call
stc
cwtl
ret
pop
rorl
mov
or
inc
adc
adc
mov
pop
mov
mov
mov
inc
cli
shrl
pop
pop
mov
mov
dec
or
pop
loop
das
addr16
add
cmpsl
cmp
mov
jge
push
inc
nop
outsb
adc
cmp
fcmovbe
xchg
add
push
push
loop
mov
mov
stc
mov
dec
jg
jmp
lret
xchg
ficompl
sub
pop
fcomp
xor
dec
sub
xchg
aas
jae
cld
outsl
inc
pop
sub
sub
pushl
xor
shrl
or
xchg
jne
or
mov
fs
mov
shll
in
aam
frstor
and
mov
xor
push
pop
outsl
lea
mov
mov
lret
aam
add
inc
jp
jae
pop
rcrb
cmpl
mov
lcall
sbb
pop
outsb
or
add
dec
pusha
xchg
adc
cwtl
add
out
shlb
daa
aad
sbb
call
xchg
rorl
ja
or
pop
xchg
pop
lds
lret
pop
jecxz
fadd
ja
ret
cmpsl
add
lods
and
lea
cltd
hlt
lock
ljmp
pop
mov
cltd
sub
add
sub
fstpt
out
loopne
mov
or
leave
adc
mov
rol
xchg
aad
ja
or
cmpsl
push
mov
push
push
xchg
test
or
cld
popf
cmp
dec
leave
or
out
jne
and
jl
aam
addr16
mov
adc
push
pop
adc
loope
xor
lahf
cmp
adc
xor
xor
aam
jecxz
cmpsb
pop
shll
psadbw
jl
inc
sbb
and
mov
add
in
ficompl
ret
sbb
dec
and
mov
and
adc
arpl
xchg
inc
fst
lds
sub
movsb
repz
iret
fcomi
lods
test
lcall
addr16
jp
out
xor
ds
testl
dec
scas
int
xor
test
in
dec
xor
and
test
ficoms
imul
adc
lods
in
in
test
push
add
adc
push
xchg
push
std
in
int3
subb
mov
aam
bsr
leave
cli
in
adc
or
jbe
mov
pop
or
je
stc
xor
arpl
mov
jns
push
aam
adc
stos
push
push
xchg
inc
mov
popf
lds
daa
add
lods
ds
dec
lods
sbbb
stos
ja
mov
shl
sbb
test
or
xchg
mov
and
inc
sbb
add
in
jl
add
movsl
das
sbb
imul
sub
lcall
sti
mov
dec
rcr
xor
rcrb
shr
jmp
les
jno
sbb
and
lret
push
add
lods
adcb
push
adc
adc
mov
xor
xor
cmpsb
mov
xchg
jne
scas
out
mov
lret
loop
imul
loop
push
push
bound
shl
mov
sbb
add
int
incb
xchg
lds
xchg
or
sub
ficoml
jmp
mov
popa
mov
bswap
inc
sbb
push
mov
ret
mov
push
or
dec
and
xor
sub
xchg
cmpsl
ljmp
adc
and
mov
pusha
scas
mov
movsl
or
jne
in
jmp
jmp
repnz
jae
mov
mov
insl
leave
movsw
test
rorl
ret
push
int3
test
das
out
lds
cmp
jne
clc
daa
dec
sbbb
repz
daa
aam
sbb
add
popf
add
inc
add
push
mov
aad
push
sbb
aad
stos
cmp
sub
out
jg
xchg
mov
sub
sbb
test
orl
imul
cld
lahf
mov
sarb
dec
xor
xchg
faddl
mov
test
out
or
xchg
jo
mov
inc
les
or
pop
mov
lods
adcl
push
mov
inc
cmp
shlb
mov
bound
mov
mov
adcb
inc
cmp
imul
jecxz
ds
xor
cmp
ja
loopne
and
jns
push
ja
xchg
out
jo
pushf
dec
sub
lret
push
stos
mov
xor
push
xlat
push
pop
push
in
dec
xor
mov
in
fnsave
sub
aaa
add
imul
pop
jp
pusha
imul
jbe
movsl
push
push
pop
xchg
mov
jecxz
imul
pushf
xchg
mov
sub
pop
mov
ljmp
dec
mov
outsl
addr16
into
es
in
jge
gs
pop
dec
pop
mov
pusha
pop
pop
push
mov
int
mov
inc
cmp
and
imul
xchg
loopne
imul
inc
jb
mov
mov
pop
push
mov
sbb
lahf
jg
sub
pop
ret
jg
mov
push
mov
pop
bound
mov
fisttpll
je
test
enter
or
enter
adc
imul
andl
std
xchg
mov
fldlg2
sub
adc
mov
fisttpll
mov
je
loope
arpl
mov
mov
add
lea
mov
mov
inc
cmpl
lds
sti
mov
adc
pop
push
jno
lock
and
scas
sbb
mov
je
mov
and
rclb
jns
mov
jl
adc
out
xor
sub
ss
inc
cltd
addr16
insl
test
sbb
in
movsb
jp
adc
inc
inc
hlt
sbbb
cmp
mov
ljmp
lcall
cmp
sub
nop
rclb
xchg
mov
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
